
f659905bf5ff7ff9a288d7265fb06541c095cca9624237985f838faf630049cc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xdc
  401009:	and    DWORD PTR ds:0x42d000,0x5aab
  401013:	push   esi
  401014:	mov    esi,DWORD PTR ds:0x42ed7f
  40101a:	mov    DWORD PTR ds:0x42b010,0x14aa
  401024:	push   0x8
  401026:	mov    DWORD PTR ds:0x429000,0x4994
  401030:	push   0x42e53f
  401035:	call   esi
  401037:	adc    DWORD PTR ds:0x42c018,0x408c
  401041:	test   eax,eax
  401043:	mov    DWORD PTR ds:0x42c010,0x701a
  40104d:	je     0x40106e
  401053:	or     DWORD PTR ds:0x42a010,0x42901c
  40105d:	xor    eax,eax
  40105f:	mov    DWORD PTR ds:0x42a000,0x34b6
  401069:	jmp    0x402a30
  40106e:	sub    DWORD PTR ds:0x42a010,0x42a01c
  401078:	push   edi
  401079:	push   0x42e54f
  40107e:	xor    edi,edi
  401080:	sub    DWORD PTR ds:0x429004,0x42c000
  40108a:	inc    edi
  40108b:	sub    DWORD PTR ds:0x429000,0x1be5
  401095:	push   edi
  401096:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010a0:	push   edi
  4010a1:	xor    DWORD PTR ds:0x42b014,0x3226
  4010ab:	call   DWORD PTR ds:0x42ed7b
  4010b1:	test   eax,eax
  4010b3:	mov    DWORD PTR ds:0x42a01c,0x3a1f
  4010bd:	je     0x4010d0
  4010c3:	inc    DWORD PTR ds:0x42c010
  4010c9:	xor    eax,eax
  4010cb:	jmp    0x402a2f
  4010d0:	xor    DWORD PTR ds:0x42a008,0x429000
  4010da:	push   ebx
  4010db:	mov    ebx,DWORD PTR ds:0x42ed8f
  4010e1:	add    DWORD PTR ds:0x429004,0x5c52
  4010eb:	push   0x42e55f
  4010f0:	adc    DWORD PTR ds:0x42c014,0x42b014
  4010fa:	push   edi
  4010fb:	push   edi
  4010fc:	and    DWORD PTR ds:0x429020,0x61d3
  401106:	call   ebx
  401108:	test   eax,eax
  40110a:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401114:	jne    0x401d3d
  40111a:	sbb    DWORD PTR ds:0x42a010,0x429004
  401124:	push   0xc
  401126:	xor    DWORD PTR ds:0x42c000,0x429008
  401130:	push   0x42e583
  401135:	or     DWORD PTR ds:0x429000,0x4b22
  40113f:	call   esi
  401141:	and    DWORD PTR ds:0x42901c,0x18ba
  40114b:	test   eax,eax
  40114d:	mov    DWORD PTR ds:0x42a01c,0x7ad2
  401157:	jne    0x401d3d
  40115d:	push   0x7
  40115f:	push   0x42e597
  401164:	call   esi
  401166:	test   eax,eax
  401168:	mov    DWORD PTR ds:0x42c014,0x720
  401172:	jne    0x401d3d
  401178:	or     DWORD PTR ds:0x42b004,0x42b01c
  401182:	push   0x8
  401184:	push   0x42e5a7
  401189:	sbb    DWORD PTR ds:0x42d014,0x5687
  401193:	call   esi
  401195:	xor    DWORD PTR ds:0x429014,0x42b018
  40119f:	test   eax,eax
  4011a1:	mov    DWORD PTR ds:0x42d008,0x6461
  4011ab:	jne    0x401d3d
  4011b1:	mov    DWORD PTR ds:0x42a014,0x128
  4011bb:	push   0x42e5b7
  4011c0:	push   edi
  4011c1:	push   edi
  4011c2:	adc    DWORD PTR ds:0x429020,0x42a000
  4011cc:	call   DWORD PTR ds:0x42ed7b
  4011d2:	test   eax,eax
  4011d4:	mov    DWORD PTR ds:0x42a01c,0x679f
  4011de:	jne    0x401d3d
  4011e4:	push   0x42e5c7
  4011e9:	sub    DWORD PTR ds:0x42c004,0x42a000
  4011f3:	push   edi
  4011f4:	adc    DWORD PTR ds:0x429024,0xd32
  4011fe:	push   edi
  4011ff:	or     DWORD PTR ds:0x42b004,0x658c
  401209:	call   ebx
  40120b:	dec    DWORD PTR ds:0x429028
  401211:	test   eax,eax
  401213:	mov    DWORD PTR ds:0x42b014,0x53a5
  40121d:	jne    0x401d3d
  401223:	push   0xc
  401225:	or     DWORD PTR ds:0x42d014,0x42c01c
  40122f:	push   0x42e5eb
  401234:	call   esi
  401236:	sub    DWORD PTR ds:0x42a008,0x42900c
  401240:	test   eax,eax
  401242:	jne    0x401d3d
  401248:	add    DWORD PTR ds:0x429004,0x43a
  401252:	push   0x7
  401254:	adc    DWORD PTR ds:0x42b010,0x2fb1
  40125e:	push   0x42e5ff
  401263:	call   esi
  401265:	sbb    DWORD PTR ds:0x42901c,0x42c014
  40126f:	test   eax,eax
  401271:	jne    0x401d3d
  401277:	or     DWORD PTR ds:0x42b008,0x42d004
  401281:	push   0x8
  401283:	push   0x42e60f
  401288:	or     DWORD PTR ds:0x42b018,0x42a018
  401292:	call   esi
  401294:	test   eax,eax
  401296:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012a0:	jne    0x401d3d
  4012a6:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012b0:	push   0x42e61f
  4012b5:	push   edi
  4012b6:	push   edi
  4012b7:	call   DWORD PTR ds:0x42ed7b
  4012bd:	test   eax,eax
  4012bf:	jne    0x401d3d
  4012c5:	push   0x42e62f
  4012ca:	push   edi
  4012cb:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012d5:	push   edi
  4012d6:	mov    DWORD PTR ds:0x42d010,0x3265
  4012e0:	call   ebx
  4012e2:	test   eax,eax
  4012e4:	jne    0x401d3d
  4012ea:	sbb    DWORD PTR ds:0x42c01c,0x429018
  4012f4:	push   0xc
  4012f6:	or     DWORD PTR ds:0x42d00c,0x429000
  401300:	push   0x42e653
  401305:	call   esi
  401307:	test   eax,eax
  401309:	jne    0x401d3d
  40130f:	push   0x7
  401311:	and    DWORD PTR ds:0x42d004,0x42a01c
  40131b:	push   0x42e667
  401320:	sub    DWORD PTR ds:0x42901c,0x42c008
  40132a:	call   esi
  40132c:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401336:	test   eax,eax
  401338:	jne    0x401d3d
  40133e:	push   0x8
  401340:	sub    DWORD PTR ds:0x42d014,0x42a000
  40134a:	push   0x42e677
  40134f:	adc    DWORD PTR ds:0x42b018,0x14c4
  401359:	call   esi
  40135b:	xor    DWORD PTR ds:0x42c008,0x6706
  401365:	test   eax,eax
  401367:	mov    DWORD PTR ds:0x42c000,0x241
  401371:	jne    0x401d3d
  401377:	add    DWORD PTR ds:0x42b01c,0x42c01c
  401381:	push   0x42e687
  401386:	or     DWORD PTR ds:0x42a00c,0x42a01c
  401390:	push   edi
  401391:	and    DWORD PTR ds:0x42b004,0x429020
  40139b:	push   edi
  40139c:	call   DWORD PTR ds:0x42ed7b
  4013a2:	adc    DWORD PTR ds:0x42c00c,0x429018
  4013ac:	test   eax,eax
  4013ae:	jne    0x401d3d
  4013b4:	or     DWORD PTR ds:0x42a014,0x42c01c
  4013be:	push   0x42e697
  4013c3:	push   edi
  4013c4:	push   edi
  4013c5:	call   ebx
  4013c7:	test   eax,eax
  4013c9:	mov    DWORD PTR ds:0x42d010,0x6497
  4013d3:	jne    0x401d3d
  4013d9:	push   0xc
  4013db:	push   0x42e6bb
  4013e0:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013ea:	call   esi
  4013ec:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013f6:	test   eax,eax
  4013f8:	jne    0x401d3d
  4013fe:	or     DWORD PTR ds:0x429000,0x429008
  401408:	push   0x7
  40140a:	sub    DWORD PTR ds:0x42a000,0x50c8
  401414:	push   0x42e6cf
  401419:	call   esi
  40141b:	xor    DWORD PTR ds:0x42a018,0x58f3
  401425:	test   eax,eax
  401427:	mov    DWORD PTR ds:0x42a010,0x4d09
  401431:	jne    0x401d3d
  401437:	push   0x8
  401439:	push   0x42e6df
  40143e:	sbb    DWORD PTR ds:0x42c00c,0x429018
  401448:	call   esi
  40144a:	test   eax,eax
  40144c:	mov    DWORD PTR ds:0x42b00c,0x44ea
  401456:	jne    0x401d3d
  40145c:	adc    DWORD PTR ds:0x42d004,0x4c2b
  401466:	push   0x42e6ef
  40146b:	push   edi
  40146c:	push   edi
  40146d:	mov    DWORD PTR ds:0x42d014,0x32e9
  401477:	call   DWORD PTR ds:0x42ed7b
  40147d:	test   eax,eax
  40147f:	mov    DWORD PTR ds:0x42d008,0x1c53
  401489:	jne    0x401d3d
  40148f:	adc    DWORD PTR ds:0x42a00c,0x429024
  401499:	push   0x42e6ff
  40149e:	push   edi
  40149f:	sbb    DWORD PTR ds:0x429028,0x2f15
  4014a9:	push   edi
  4014aa:	call   ebx
  4014ac:	adc    DWORD PTR ds:0x42b000,0x4b6d
  4014b6:	test   eax,eax
  4014b8:	mov    DWORD PTR ds:0x429004,0x51de
  4014c2:	jne    0x401d3d
  4014c8:	xor    DWORD PTR ds:0x42a008,0xe1e
  4014d2:	push   0xc
  4014d4:	add    DWORD PTR ds:0x429004,0x43b2
  4014de:	push   0x42e723
  4014e3:	or     DWORD PTR ds:0x42a018,0x42c018
  4014ed:	call   esi
  4014ef:	test   eax,eax
  4014f1:	mov    DWORD PTR ds:0x42b000,0x50ae
  4014fb:	jne    0x401d3d
  401501:	dec    DWORD PTR ds:0x42b00c
  401507:	push   0x7
  401509:	and    DWORD PTR ds:0x42b00c,0x681c
  401513:	push   0x42e737
  401518:	or     DWORD PTR ds:0x42b004,0x6fd7
  401522:	call   esi
  401524:	test   eax,eax
  401526:	jne    0x401d3d
  40152c:	sub    DWORD PTR ds:0x42c008,0x42a000
  401536:	push   0x8
  401538:	xor    DWORD PTR ds:0x42c010,0x42b00c
  401542:	push   0x42e747
  401547:	and    DWORD PTR ds:0x42d014,0x50c
  401551:	call   esi
  401553:	test   eax,eax
  401555:	mov    DWORD PTR ds:0x42c008,0x6727
  40155f:	jne    0x401d3d
  401565:	push   0x42e757
  40156a:	adc    DWORD PTR ds:0x42a00c,0x1435
  401574:	push   edi
  401575:	mov    DWORD PTR ds:0x42c00c,0x3eef
  40157f:	push   edi
  401580:	xor    DWORD PTR ds:0x42b014,0x10aa
  40158a:	call   DWORD PTR ds:0x42ed7b
  401590:	add    DWORD PTR ds:0x429024,0x2571
  40159a:	test   eax,eax
  40159c:	mov    DWORD PTR ds:0x42c01c,0x5233
  4015a6:	jne    0x401d3d
  4015ac:	push   0x42e767
  4015b1:	or     DWORD PTR ds:0x42d004,0x42c014
  4015bb:	push   edi
  4015bc:	add    DWORD PTR ds:0x42b008,0x42b014
  4015c6:	push   edi
  4015c7:	and    DWORD PTR ds:0x429024,0x5a57
  4015d1:	call   ebx
  4015d3:	test   eax,eax
  4015d5:	jne    0x401d3d
  4015db:	adc    DWORD PTR ds:0x42c014,0x5c91
  4015e5:	push   0xc
  4015e7:	or     DWORD PTR ds:0x42d018,0x42a018
  4015f1:	push   0x42e78b
  4015f6:	sub    DWORD PTR ds:0x429018,0x429000
  401600:	call   esi
  401602:	test   eax,eax
  401604:	jne    0x401d3d
  40160a:	or     DWORD PTR ds:0x42c010,0x42900c
  401614:	push   0x7
  401616:	and    DWORD PTR ds:0x42a01c,0x7e1f
  401620:	push   0x42e79f
  401625:	call   esi
  401627:	xor    DWORD PTR ds:0x42c00c,0x55d5
  401631:	test   eax,eax
  401633:	jne    0x401d3d
  401639:	or     DWORD PTR ds:0x429008,0x62a0
  401643:	push   0x8
  401645:	or     DWORD PTR ds:0x429020,0x42d018
  40164f:	push   0x42e7af
  401654:	call   esi
  401656:	test   eax,eax
  401658:	mov    DWORD PTR ds:0x429010,0x43d8
  401662:	jne    0x401d3d
  401668:	push   0x42e7bf
  40166d:	sub    DWORD PTR ds:0x42a008,0x5452
  401677:	push   edi
  401678:	adc    DWORD PTR ds:0x42b004,0x3794
  401682:	push   edi
  401683:	add    DWORD PTR ds:0x42b018,0x429000
  40168d:	call   DWORD PTR ds:0x42ed7b
  401693:	add    DWORD PTR ds:0x42b014,0x42c014
  40169d:	test   eax,eax
  40169f:	mov    DWORD PTR ds:0x42c010,0x9db
  4016a9:	jne    0x401d3d
  4016af:	add    DWORD PTR ds:0x42b01c,0x42c010
  4016b9:	push   0x42e7cf
  4016be:	push   edi
  4016bf:	push   edi
  4016c0:	call   ebx
  4016c2:	test   eax,eax
  4016c4:	jne    0x401d3d
  4016ca:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016d4:	push   0xc
  4016d6:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016e0:	push   0x42e7f3
  4016e5:	sub    DWORD PTR ds:0x429028,0x1e37
  4016ef:	call   esi
  4016f1:	not    DWORD PTR ds:0x42b000
  4016f7:	test   eax,eax
  4016f9:	mov    DWORD PTR ds:0x42a010,0x1824
  401703:	jne    0x401d3d
  401709:	push   0x7
  40170b:	neg    DWORD PTR ds:0x42d004
  401711:	push   0x42e807
  401716:	call   esi
  401718:	xor    DWORD PTR ds:0x429020,0x5303
  401722:	test   eax,eax
  401724:	jne    0x401d3d
  40172a:	sub    DWORD PTR ds:0x429014,0x42c01c
  401734:	push   0x8
  401736:	not    DWORD PTR ds:0x429000
  40173c:	push   0x42e817
  401741:	or     DWORD PTR ds:0x42c01c,0x7461
  40174b:	call   esi
  40174d:	test   eax,eax
  40174f:	jne    0x401d3d
  401755:	or     DWORD PTR ds:0x42b010,0x6614
  40175f:	push   0x42e827
  401764:	push   edi
  401765:	and    DWORD PTR ds:0x42b01c,0x42a008
  40176f:	push   edi
  401770:	call   DWORD PTR ds:0x42ed7b
  401776:	sub    DWORD PTR ds:0x429010,0x42a018
  401780:	test   eax,eax
  401782:	mov    DWORD PTR ds:0x42b004,0x423f
  40178c:	jne    0x401d3d
  401792:	push   0x42e837
  401797:	and    DWORD PTR ds:0x42d014,0x5d3e
  4017a1:	push   edi
  4017a2:	push   edi
  4017a3:	call   ebx
  4017a5:	sub    DWORD PTR ds:0x42a004,0x8003
  4017af:	test   eax,eax
  4017b1:	jne    0x401d3d
  4017b7:	push   0xc
  4017b9:	push   0x42e85b
  4017be:	call   esi
  4017c0:	or     DWORD PTR ds:0x42a014,0x792e
  4017ca:	test   eax,eax
  4017cc:	jne    0x401d3d
  4017d2:	add    DWORD PTR ds:0x42d004,0x429000
  4017dc:	push   0x7
  4017de:	sub    DWORD PTR ds:0x42c010,0x560a
  4017e8:	push   0x42e86f
  4017ed:	call   esi
  4017ef:	test   eax,eax
  4017f1:	mov    DWORD PTR ds:0x42b008,0x3099
  4017fb:	jne    0x401d3d
  401801:	xor    DWORD PTR ds:0x42a01c,0x42c010
  40180b:	push   0x8
  40180d:	push   0x42e87f
  401812:	sub    DWORD PTR ds:0x42901c,0x42c000
  40181c:	call   esi
  40181e:	test   eax,eax
  401820:	mov    DWORD PTR ds:0x42c010,0x6a70
  40182a:	jne    0x401d3d
  401830:	push   0x42e88f
  401835:	push   edi
  401836:	push   edi
  401837:	mov    DWORD PTR ds:0x42d01c,0x630d
  401841:	call   DWORD PTR ds:0x42ed7b
  401847:	sbb    DWORD PTR ds:0x429024,0x42b018
  401851:	test   eax,eax
  401853:	mov    DWORD PTR ds:0x42901c,0x686
  40185d:	jne    0x401d3d
  401863:	push   0x42e89f
  401868:	and    DWORD PTR ds:0x42c008,0x4bbd
  401872:	push   edi
  401873:	or     DWORD PTR ds:0x429024,0x42d000
  40187d:	push   edi
  40187e:	call   ebx
  401880:	and    DWORD PTR ds:0x42b018,0x1774
  40188a:	test   eax,eax
  40188c:	jne    0x401d3d
  401892:	push   0xc
  401894:	or     DWORD PTR ds:0x42b000,0x3dd
  40189e:	push   0x42e8c3
  4018a3:	call   esi
  4018a5:	test   eax,eax
  4018a7:	jne    0x401d3d
  4018ad:	push   0x7
  4018af:	sub    DWORD PTR ds:0x429010,0x42c004
  4018b9:	push   0x42e8d7
  4018be:	or     DWORD PTR ds:0x42d014,0x42c010
  4018c8:	call   esi
  4018ca:	or     DWORD PTR ds:0x42b010,0x42b018
  4018d4:	test   eax,eax
  4018d6:	jne    0x401d3d
  4018dc:	push   0x8
  4018de:	push   0x42e8e7
  4018e3:	call   esi
  4018e5:	test   eax,eax
  4018e7:	jne    0x401d3d
  4018ed:	and    DWORD PTR ds:0x42c004,0x42900c
  4018f7:	push   0x42e8f7
  4018fc:	push   edi
  4018fd:	push   edi
  4018fe:	call   DWORD PTR ds:0x42ed7b
  401904:	mov    DWORD PTR ds:0x42a004,0x7c46
  40190e:	test   eax,eax
  401910:	jne    0x401d3d
  401916:	push   0x42e907
  40191b:	sbb    DWORD PTR ds:0x42b010,0x42a010
  401925:	push   edi
  401926:	push   edi
  401927:	or     DWORD PTR ds:0x42d014,0x42900c
  401931:	call   ebx
  401933:	test   eax,eax
  401935:	jne    0x401d3d
  40193b:	adc    DWORD PTR ds:0x42c000,0x429028
  401945:	push   0xc
  401947:	sub    DWORD PTR ds:0x42a014,0xc65
  401951:	push   0x42e92b
  401956:	call   esi
  401958:	test   eax,eax
  40195a:	mov    DWORD PTR ds:0x42c014,0x6571
  401964:	jne    0x401d3d
  40196a:	push   0x7
  40196c:	adc    DWORD PTR ds:0x42a014,0x42b00c
  401976:	push   0x42e93f
  40197b:	mov    DWORD PTR ds:0x42d004,0x12ce
  401985:	call   esi
  401987:	dec    DWORD PTR ds:0x42a010
  40198d:	test   eax,eax
  40198f:	mov    DWORD PTR ds:0x42b004,0x22d3
  401999:	jne    0x401d3d
  40199f:	xor    DWORD PTR ds:0x42d018,0x7580
  4019a9:	push   0x8
  4019ab:	mov    DWORD PTR ds:0x42d014,0x4bef
  4019b5:	push   0x42e94f
  4019ba:	add    DWORD PTR ds:0x42b000,0x4980
  4019c4:	call   esi
  4019c6:	test   eax,eax
  4019c8:	jne    0x401d3d
  4019ce:	and    DWORD PTR ds:0x42b000,0x472c
  4019d8:	push   0x42e95f
  4019dd:	push   edi
  4019de:	push   edi
  4019df:	xor    DWORD PTR ds:0x42c014,0x42b018
  4019e9:	call   DWORD PTR ds:0x42ed7b
  4019ef:	or     DWORD PTR ds:0x42900c,0x429020
  4019f9:	test   eax,eax
  4019fb:	mov    DWORD PTR ds:0x42c00c,0x6dbd
  401a05:	jne    0x401d3d
  401a0b:	not    DWORD PTR ds:0x42b00c
  401a11:	push   0x42e96f
  401a16:	or     DWORD PTR ds:0x42d000,0x4414
  401a20:	push   edi
  401a21:	sub    DWORD PTR ds:0x429020,0x7e0
  401a2b:	push   edi
  401a2c:	xor    DWORD PTR ds:0x42d010,0x4db0
  401a36:	call   ebx
  401a38:	test   eax,eax
  401a3a:	jne    0x401d3d
  401a40:	sub    DWORD PTR ds:0x42a014,0x10f4
  401a4a:	push   0xc
  401a4c:	sub    DWORD PTR ds:0x42b004,0x42d014
  401a56:	push   0x42e993
  401a5b:	call   esi
  401a5d:	test   eax,eax
  401a5f:	jne    0x401d3d
  401a65:	push   0x7
  401a67:	xor    DWORD PTR ds:0x42b000,0x360b
  401a71:	push   0x42e9a7
  401a76:	call   esi
  401a78:	test   eax,eax
  401a7a:	jne    0x401d3d
  401a80:	push   0x8
  401a82:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401a8c:	push   0x42e9b7
  401a91:	add    DWORD PTR ds:0x42d014,0x21f
  401a9b:	call   esi
  401a9d:	or     DWORD PTR ds:0x42d004,0x505e
  401aa7:	test   eax,eax
  401aa9:	mov    DWORD PTR ds:0x42c00c,0x1afa
  401ab3:	jne    0x401d3d
  401ab9:	push   0x42e9c7
  401abe:	or     DWORD PTR ds:0x42b01c,0x4806
  401ac8:	push   edi
  401ac9:	push   edi
  401aca:	call   DWORD PTR ds:0x42ed7b
  401ad0:	or     DWORD PTR ds:0x42c018,0x6442
  401ada:	test   eax,eax
  401adc:	jne    0x401d3d
  401ae2:	push   0x42e9d7
  401ae7:	push   edi
  401ae8:	not    DWORD PTR ds:0x42d018
  401aee:	push   edi
  401aef:	adc    DWORD PTR ds:0x429028,0x26c2
  401af9:	call   ebx
  401afb:	sbb    DWORD PTR ds:0x42a000,0x42d010
  401b05:	test   eax,eax
  401b07:	mov    DWORD PTR ds:0x42b000,0x1a50
  401b11:	jne    0x401d3d
  401b17:	adc    DWORD PTR ds:0x42c00c,0x5a53
  401b21:	push   0xc
  401b23:	push   0x42e9fb
  401b28:	or     DWORD PTR ds:0x42900c,0x964
  401b32:	call   esi
  401b34:	sbb    DWORD PTR ds:0x429014,0x5b18
  401b3e:	test   eax,eax
  401b40:	jne    0x401d3d
  401b46:	push   0x7
  401b48:	add    DWORD PTR ds:0x42d01c,0x42d000
  401b52:	push   0x42ea0f
  401b57:	and    DWORD PTR ds:0x42900c,0x4f3f
  401b61:	call   esi
  401b63:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401b6d:	test   eax,eax
  401b6f:	jne    0x401d3d
  401b75:	sbb    DWORD PTR ds:0x429018,0xc00
  401b7f:	push   0x8
  401b81:	add    DWORD PTR ds:0x42c004,0x3ea1
  401b8b:	push   0x42ea1f
  401b90:	call   esi
  401b92:	sub    DWORD PTR ds:0x42c000,0x352b
  401b9c:	test   eax,eax
  401b9e:	mov    DWORD PTR ds:0x42901c,0x47d2
  401ba8:	jne    0x401d3d
  401bae:	push   0x42ea2f
  401bb3:	or     DWORD PTR ds:0x42a004,0x22e5
  401bbd:	push   edi
  401bbe:	push   edi
  401bbf:	add    DWORD PTR ds:0x42c008,0x2ef5
  401bc9:	call   DWORD PTR ds:0x42ed7b
  401bcf:	test   eax,eax
  401bd1:	mov    DWORD PTR ds:0x429000,0xe12
  401bdb:	jne    0x401d3d
  401be1:	push   0x42ea3f
  401be6:	inc    DWORD PTR ds:0x429008
  401bec:	push   edi
  401bed:	push   edi
  401bee:	and    DWORD PTR ds:0x429020,0x42c008
  401bf8:	call   ebx
  401bfa:	mov    DWORD PTR ds:0x42d01c,0x65ff
  401c04:	test   eax,eax
  401c06:	jne    0x401d3d
  401c0c:	add    DWORD PTR ds:0x42d00c,0x8c2
  401c16:	push   0xc
  401c18:	and    DWORD PTR ds:0x42a010,0x429020
  401c22:	push   0x42ea63
  401c27:	call   esi
  401c29:	test   eax,eax
  401c2b:	jne    0x401d3d
  401c31:	push   0x7
  401c33:	not    DWORD PTR ds:0x42a004
  401c39:	push   0x42ea77
  401c3e:	call   esi
  401c40:	test   eax,eax
  401c42:	jne    0x401d3d
  401c48:	push   0x8
  401c4a:	push   0x42ea87
  401c4f:	add    DWORD PTR ds:0x429028,0x63a0
  401c59:	call   esi
  401c5b:	test   eax,eax
  401c5d:	mov    DWORD PTR ds:0x42c01c,0x185a
  401c67:	jne    0x401d3d
  401c6d:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401c77:	push   0x42ea97
  401c7c:	push   edi
  401c7d:	adc    DWORD PTR ds:0x42a008,0x42d004
  401c87:	push   edi
  401c88:	sbb    DWORD PTR ds:0x42d010,0x4b82
  401c92:	call   DWORD PTR ds:0x42ed7b
  401c98:	test   eax,eax
  401c9a:	mov    DWORD PTR ds:0x42c00c,0x2dd4
  401ca4:	jne    0x401d3d
  401caa:	adc    DWORD PTR ds:0x42d004,0x42a004
  401cb4:	push   0x42eaa7
  401cb9:	push   edi
  401cba:	sbb    DWORD PTR ds:0x42c008,0x42b004
  401cc4:	push   edi
  401cc5:	sub    DWORD PTR ds:0x42a010,0x42b000
  401ccf:	call   ebx
  401cd1:	test   eax,eax
  401cd3:	jne    0x401d3d
  401cd9:	inc    DWORD PTR ds:0x42b014
  401cdf:	push   0xc
  401ce1:	mov    DWORD PTR ds:0x42d01c,0xa60
  401ceb:	push   0x42eacb
  401cf0:	sub    DWORD PTR ds:0x42c00c,0x3e85
  401cfa:	call   esi
  401cfc:	test   eax,eax
  401cfe:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401d08:	jne    0x401d3d
  401d0e:	push   0x7
  401d10:	and    DWORD PTR ds:0x429000,0x42b000
  401d1a:	push   0x42eadf
  401d1f:	add    DWORD PTR ds:0x42b008,0x42a018
  401d29:	call   esi
  401d2b:	test   eax,eax
  401d2d:	mov    DWORD PTR ds:0x42c014,0x2a16
  401d37:	je     0x401d4e
  401d3d:	add    DWORD PTR ds:0x42d000,0x429000
  401d47:	xor    eax,eax
  401d49:	jmp    0x402a2e
  401d4e:	mov    DWORD PTR [ebp-0x10],0x0
  401d55:	mov    eax,DWORD PTR [ebp-0x2c]
  401d58:	mov    DWORD PTR [ebp-0x2c],eax
  401d5b:	adc    edi,esi
  401d5d:	mov    ecx,0xf89c85b9
  401d62:	inc    edi
  401d63:	mov    DWORD PTR [ebp-0x8],ecx
  401d66:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401d6d:	lea    eax,[ebp-0x3c]
  401d70:	xor    edi,0x371d
  401d76:	mov    DWORD PTR [ebp-0x38],eax
  401d79:	lea    eax,[ebp-0x40]
  401d7c:	dec    edi
  401d7d:	mov    DWORD PTR [ebp-0x18],eax
  401d80:	and    DWORD PTR ds:0x42b01c,ecx
  401d86:	mov    eax,ds:0x42e42f
  401d8b:	and    DWORD PTR ds:0x42d018,0x0
  401d95:	jmp    0x401da7
  401d9a:	mov    esi,DWORD PTR ds:0x42d018
  401da0:	inc    esi
  401da1:	mov    DWORD PTR ds:0x42d018,esi
  401da7:	cmp    DWORD PTR ds:0x42d018,0x16
  401dae:	jae    0x401deb
  401db4:	cmp    DWORD PTR ds:0x42d018,0xb
  401dbb:	jne    0x401dcc
  401dc1:	push   0x26f4
  401dc6:	call   DWORD PTR ds:0x42ed4f
  401dcc:	cmp    DWORD PTR ds:0x42d018,0xa
  401dd3:	jne    0x401de6
  401dd9:	mov    esi,DWORD PTR ds:0x42d018
  401ddf:	inc    esi
  401de0:	mov    DWORD PTR ds:0x42d018,esi
  401de6:	jmp    0x401d9a
  401deb:	mov    eax,DWORD PTR [eax+0x1c8]
  401df1:	mov    eax,DWORD PTR [eax]
  401df3:	adc    DWORD PTR ds:0x429028,0x429014
  401dfd:	mov    edx,DWORD PTR [ebp-0x18]
  401e00:	sbb    esi,esi
  401e02:	mov    esi,0x7510899
  401e07:	xor    eax,esi
  401e09:	mov    edi,DWORD PTR ds:0x424bf8
  401e0f:	mov    edi,DWORD PTR [edi]
  401e11:	adc    DWORD PTR ds:0x42d010,edi
  401e17:	mov    edi,0x3272e0
  401e1c:	add    eax,edi
  401e1e:	mov    DWORD PTR ds:0x42a01c,0x257
  401e28:	mov    DWORD PTR [edx],eax
  401e2a:	mov    DWORD PTR ds:0x42c018,0x3219
  401e34:	mov    eax,ds:0x42ebc7
  401e39:	cmp    eax,0x312bc9f6
  401e3e:	mov    DWORD PTR ds:0x429020,0x5930
  401e48:	jne    0x401e9f
  401e4e:	mov    edx,DWORD PTR ds:0x424cc5
  401e54:	mov    edx,DWORD PTR [edx]
  401e56:	sbb    DWORD PTR ds:0x42c010,edx
  401e5c:	mov    eax,DWORD PTR [ebp-0x8]
  401e5f:	xor    edx,edx
  401e61:	mov    edx,DWORD PTR ds:0x42e42f
  401e67:	mov    edx,DWORD PTR [edx+0x198]
  401e6d:	xor    eax,esi
  401e6f:	sub    ebx,0x65b5
  401e75:	add    eax,edi
  401e77:	sbb    DWORD PTR ds:0x42d010,0x54d2
  401e81:	mov    DWORD PTR [edx],eax
  401e83:	xor    ebx,0x16f5
  401e89:	mov    eax,DWORD PTR [ebp-0x8]
  401e8c:	xor    eax,esi
  401e8e:	add    eax,edi
  401e90:	and    DWORD PTR ds:0x42d000,0x7871
  401e9a:	mov    ds:0x42ebc7,eax
  401e9f:	xor    DWORD PTR ds:0x429000,edx
  401ea5:	mov    eax,ds:0x42e42f
  401eaa:	mov    eax,DWORD PTR [eax+0x18c]
  401eb0:	mov    eax,DWORD PTR [eax]
  401eb2:	mov    DWORD PTR [ebp-0x7c],eax
  401eb5:	mov    ebx,0xf89c85bd
  401eba:	mov    eax,ds:0x42b01c
  401ebf:	sbb    DWORD PTR ds:0x429010,eax
  401ec5:	mov    DWORD PTR [ebp-0x10],ebx
  401ec8:	mov    DWORD PTR [ebp-0x10],ebx
  401ecb:	add    DWORD PTR ds:0x42d00c,edi
  401ed1:	mov    DWORD PTR [ebp-0x10],ebx
  401ed4:	mov    DWORD PTR [ebp-0x18],ecx
  401ed7:	mov    DWORD PTR [ebp-0x10],ebx
  401eda:	not    eax
  401edc:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401ee3:	movzx  eax,BYTE PTR ds:0x42a000
  401eea:	add    eax,DWORD PTR ds:0x429000
  401ef0:	mov    ds:0x42a000,eax
  401ef5:	mov    eax,DWORD PTR [ebp-0x8]
  401ef8:	or     DWORD PTR ds:0x42b014,0x372f
  401f02:	xor    eax,esi
  401f04:	or     DWORD PTR ds:0x42a01c,0x1f3e
  401f0e:	add    eax,edi
  401f10:	mov    DWORD PTR ds:0x42c004,0xc2
  401f1a:	jmp    0x40208c
  401f1f:	and    DWORD PTR ds:0x42d018,0x0
  401f29:	jmp    0x401f3c
  401f2e:	xor    eax,eax
  401f30:	add    eax,DWORD PTR ds:0x42d018
  401f36:	inc    eax
  401f37:	mov    ds:0x42d018,eax
  401f3c:	cmp    DWORD PTR ds:0x42d018,0x14
  401f43:	jae    0x401f85
  401f49:	cmp    DWORD PTR ds:0x42d018,0xa
  401f50:	jne    0x401f68
  401f56:	push   0x42e06f
  401f5b:	push   0x1
  401f5d:	push   0x1
  401f5f:	push   DWORD PTR [ebp-0x28]
  401f62:	call   DWORD PTR ds:0x42ed53
  401f68:	cmp    DWORD PTR ds:0x42d018,0x9
  401f6f:	jne    0x401f80
  401f75:	mov    eax,ds:0x42d018
  401f7a:	inc    eax
  401f7b:	mov    ds:0x42d018,eax
  401f80:	jmp    0x401f2e
  401f85:	mov    eax,DWORD PTR [ebp-0xc]
  401f88:	and    DWORD PTR ds:0x429008,0x0
  401f92:	xor    ecx,ecx
  401f94:	add    ecx,DWORD PTR ds:0x429008
  401f9a:	inc    ecx
  401f9b:	mov    DWORD PTR ds:0x429008,ecx
  401fa1:	cmp    DWORD PTR ds:0x429008,0x19
  401fa8:	jne    0x401fb9
  401fae:	push   0x42e1ed
  401fb3:	call   DWORD PTR ds:0x42ed57
  401fb9:	cmp    DWORD PTR ds:0x429008,0x14
  401fc0:	jb     0x401f92
  401fc6:	adc    DWORD PTR ds:0x429020,0x76b9
  401fd0:	mov    ecx,DWORD PTR [ebp-0x1c]
  401fd3:	xor    eax,esi
  401fd5:	and    DWORD PTR ds:0x429008,0x42d004
  401fdf:	lea    eax,[eax+ecx*1+0x3272e0]
  401fe6:	or     DWORD PTR ds:0x42a018,0x3196
  401ff0:	push   eax
  401ff1:	mov    eax,ds:0x429020
  401ff6:	and    DWORD PTR ds:0x42c004,eax
  401ffc:	mov    eax,DWORD PTR [ebp-0x18]
  401fff:	sub    DWORD PTR ds:0x42a01c,0x429008
  402009:	xor    eax,esi
  40200b:	sbb    DWORD PTR ds:0x42c018,0x42b010
  402015:	lea    eax,[ebp+eax*1+0x3272e8]
  40201c:	push   eax
  40201d:	and    DWORD PTR ds:0x429018,0x0
  402027:	mov    eax,ds:0x429018
  40202c:	inc    eax
  40202d:	mov    ds:0x429018,eax
  402032:	cmp    DWORD PTR ds:0x429018,0x1f
  402039:	jne    0x40204a
  40203f:	push   0x2bf8
  402044:	call   DWORD PTR ds:0x42ed5b
  40204a:	cmp    DWORD PTR ds:0x429018,0x14
  402051:	jb     0x402027
  402057:	mov    eax,ds:0x42e42f
  40205c:	sbb    DWORD PTR ds:0x42d000,0x42b010
  402066:	push   DWORD PTR [eax+0x1bc]
  40206c:	and    DWORD PTR ds:0x429010,0x4b3f
  402076:	call   0x402a39
  40207b:	sbb    edx,edx
  40207d:	mov    eax,DWORD PTR [ebp-0xc]
  402080:	mov    ecx,DWORD PTR [ebp-0x1c]
  402083:	xor    eax,esi
  402085:	lea    eax,[ecx+eax*1+0x3272e0]
  40208c:	add    ecx,0x43f5
  402092:	mov    ecx,DWORD PTR [ebp-0xc]
  402095:	mov    edx,DWORD PTR [ebp-0xc]
  402098:	xor    edx,esi
  40209a:	xor    ecx,esi
  40209c:	sub    DWORD PTR ds:0x429018,0x429014
  4020a6:	add    ecx,edx
  4020a8:	mov    edx,DWORD PTR [ebp-0xc]
  4020ab:	sub    DWORD PTR ds:0x42d010,0x42d004
  4020b5:	xor    edx,esi
  4020b7:	lea    ecx,[ecx+edx*1+0x9758a0]
  4020be:	mov    DWORD PTR [ebp-0x1c],eax
  4020c1:	mov    DWORD PTR ds:0x42b000,0x3723
  4020cb:	cmp    eax,ecx
  4020cd:	jbe    0x401f1f
  4020d3:	sub    eax,ecx
  4020d5:	mov    eax,DWORD PTR [ebp+0xc]
  4020d8:	xor    ecx,DWORD PTR ds:0x42b01c
  4020de:	mov    ds:0x42e2b3,eax
  4020e3:	and    DWORD PTR ds:0x42d01c,0x0
  4020ed:	mov    eax,ds:0x42d01c
  4020f2:	inc    eax
  4020f3:	mov    ds:0x42d01c,eax
  4020f8:	cmp    DWORD PTR ds:0x42d01c,0x7
  4020ff:	jne    0x402115
  402105:	push   0x429018
  40210a:	push   0x165c
  40210f:	call   DWORD PTR ds:0x42ed5f
  402115:	cmp    DWORD PTR ds:0x42d01c,0x6
  40211c:	jne    0x402130
  402122:	xor    eax,eax
  402124:	or     eax,DWORD PTR ds:0x42d01c
  40212a:	inc    eax
  40212b:	mov    ds:0x42d01c,eax
  402130:	cmp    DWORD PTR ds:0x42d01c,0x13
  402137:	jb     0x4020ed
  40213d:	add    eax,eax
  40213f:	mov    eax,DWORD PTR [ebp+0x10]
  402142:	or     ecx,0x5144
  402148:	mov    ds:0x42e507,eax
  40214d:	movzx  ecx,BYTE PTR ds:0x42d018
  402154:	sbb    DWORD PTR ds:0x42a00c,ecx
  40215a:	mov    eax,ds:0x42e2b3
  40215f:	mov    ecx,DWORD PTR [ebp-0x38]
  402162:	sub    eax,edi
  402164:	xor    eax,esi
  402166:	mov    DWORD PTR ds:0x42a018,0x3718
  402170:	mov    DWORD PTR [ecx],eax
  402172:	mov    eax,DWORD PTR [ebp-0x2c]
  402175:	mov    DWORD PTR ds:0x429004,0x2ca7
  40217f:	cmp    eax,0xf89c85b9
  402184:	jne    0x402492
  40218a:	dec    DWORD PTR ds:0x42b018
  402190:	lea    eax,[ebp-0x48]
  402193:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40219d:	mov    DWORD PTR [ebp-0x80],eax
  4021a0:	lea    eax,[ebp+0x4]
  4021a3:	and    DWORD PTR ds:0x42c01c,0x58e
  4021ad:	mov    DWORD PTR [ebp-0x48],eax
  4021b0:	mov    DWORD PTR ds:0x42d000,0x15
  4021ba:	cmp    DWORD PTR ds:0x42d000,0x0
  4021c1:	je     0x402216
  4021c7:	cmp    DWORD PTR ds:0x42d000,0x7
  4021ce:	jne    0x4021ee
  4021d4:	push   0x42e0f4
  4021d9:	push   DWORD PTR [ebp-0x14]
  4021dc:	push   DWORD PTR [ebp-0x28]
  4021df:	push   DWORD PTR [ebp-0x24]
  4021e2:	push   DWORD PTR [ebp-0xc]
  4021e5:	push   DWORD PTR [ebp-0x14]
  4021e8:	call   DWORD PTR ds:0x42ed67
  4021ee:	cmp    DWORD PTR ds:0x42d000,0x8
  4021f5:	jne    0x402206
  4021fb:	mov    eax,ds:0x42d000
  402200:	dec    eax
  402201:	mov    ds:0x42d000,eax
  402206:	mov    eax,ds:0x42d000
  40220b:	dec    eax
  40220c:	mov    ds:0x42d000,eax
  402211:	jmp    0x4021ba
  402216:	mov    eax,DWORD PTR [ebp-0x48]
  402219:	test   eax,eax
  40221b:	mov    DWORD PTR ds:0x42a014,0x24f3
  402225:	je     0x402a13
  40222b:	sub    DWORD PTR ds:0x42a000,edx
  402231:	mov    eax,DWORD PTR [ebp-0x24]
  402234:	sub    DWORD PTR ds:0x429004,ebx
  40223a:	mov    eax,DWORD PTR [ebp-0xc]
  40223d:	mov    eax,DWORD PTR [ebp-0x8]
  402240:	mov    DWORD PTR [ebp+0xc],eax
  402243:	mov    ecx,DWORD PTR ds:0x42b008
  402249:	sub    DWORD PTR ds:0x42b018,ecx
  40224f:	mov    eax,eax
  402251:	mov    eax,ds:0x42e42f
  402256:	mov    eax,DWORD PTR [eax+0x1c8]
  40225c:	and    DWORD PTR ds:0x42b000,0x0
  402266:	xor    ecx,ecx
  402268:	add    ecx,DWORD PTR ds:0x42b000
  40226e:	inc    ecx
  40226f:	mov    DWORD PTR ds:0x42b000,ecx
  402275:	cmp    DWORD PTR ds:0x42b000,0x1f
  40227c:	jne    0x402288
  402282:	call   DWORD PTR ds:0x42ed6b
  402288:	cmp    DWORD PTR ds:0x42b000,0x11
  40228f:	jb     0x402266
  402295:	or     DWORD PTR ds:0x42d008,0x79cb
  40229f:	mov    eax,DWORD PTR [eax]
  4022a1:	mov    DWORD PTR ds:0x42900c,0x1a
  4022ab:	cmp    DWORD PTR ds:0x42900c,0x0
  4022b2:	je     0x402307
  4022b8:	cmp    DWORD PTR ds:0x42900c,0xe
  4022bf:	jne    0x4022d5
  4022c5:	push   0x429014
  4022ca:	push   0x42e21d
  4022cf:	call   DWORD PTR ds:0x42ed6f
  4022d5:	cmp    DWORD PTR ds:0x42900c,0xf
  4022dc:	jne    0x4022ef
  4022e2:	mov    ecx,DWORD PTR ds:0x42900c
  4022e8:	dec    ecx
  4022e9:	mov    DWORD PTR ds:0x42900c,ecx
  4022ef:	mov    ecx,DWORD PTR ds:0x42900c
  4022f5:	dec    ecx
  4022f6:	mov    DWORD PTR ds:0x42900c,ecx
  4022fc:	jmp    0x4022ab
  402301:	and    ecx,DWORD PTR ds:0x42a014
  402307:	cdq    
  402308:	and    DWORD PTR ds:0x42901c,0x0
  402312:	jmp    0x402324
  402317:	mov    ecx,DWORD PTR ds:0x42901c
  40231d:	inc    ecx
  40231e:	mov    DWORD PTR ds:0x42901c,ecx
  402324:	cmp    DWORD PTR ds:0x42901c,0x11
  40232b:	jae    0x40234e
  402331:	cmp    DWORD PTR ds:0x42901c,0x1a
  402338:	jne    0x402349
  40233e:	push   0x42e0a2
  402343:	call   DWORD PTR ds:0x42ed73
  402349:	jmp    0x402317
  40234e:	mov    ebx,eax
  402350:	mov    ecx,DWORD PTR ds:0x42d008
  402356:	sbb    DWORD PTR ds:0x42a01c,ecx
  40235c:	mov    eax,0xfabdbee9
  402361:	add    ebx,eax
  402363:	adc    edx,0xffffffff
  402366:	xor    DWORD PTR ds:0x42d010,ecx
  40236c:	and    DWORD PTR [ebp-0x10],0x0
  402370:	xor    edx,0x0
  402373:	mov    ecx,DWORD PTR ds:0x42d014
  402379:	sub    DWORD PTR ds:0x429000,ecx
  40237f:	mov    DWORD PTR [ebp-0x68],edx
  402382:	mov    edx,DWORD PTR [ebp+0xc]
  402385:	dec    ecx
  402386:	mov    DWORD PTR [ebp-0x14],edx
  402389:	mov    ecx,0x8a29a12b
  40238e:	mov    DWORD PTR ds:0x42c014,0x77e
  402398:	xor    ebx,ecx
  40239a:	mov    edx,DWORD PTR ds:0x424cf5
  4023a0:	mov    edx,DWORD PTR [edx]
  4023a2:	and    DWORD PTR ds:0x42d014,edx
  4023a8:	add    DWORD PTR [ebp-0x14],eax
  4023ab:	mov    edx,DWORD PTR [ebp-0x14]
  4023ae:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4023b2:	xor    edx,ecx
  4023b4:	mov    DWORD PTR [ebp-0x58],edx
  4023b7:	mov    edx,DWORD PTR [ebp-0x10]
  4023ba:	xor    edx,0x0
  4023bd:	mov    DWORD PTR ds:0x429014,0x2b65
  4023c7:	mov    DWORD PTR [ebp-0x54],edx
  4023ca:	mov    DWORD PTR ds:0x42c018,0x612d
  4023d4:	cmp    DWORD PTR [ebp-0x58],ebx
  4023d7:	mov    DWORD PTR ds:0x42a018,0x3565
  4023e1:	jne    0x402403
  4023e7:	mov    DWORD PTR ds:0x42b008,ecx
  4023ed:	mov    edx,DWORD PTR [ebp-0x68]
  4023f0:	cmp    DWORD PTR [ebp-0x54],edx
  4023f3:	mov    DWORD PTR ds:0x42a014,0xb50
  4023fd:	je     0x40246e
  402403:	mov    edx,DWORD PTR ds:0x42e42f
  402409:	mov    edx,DWORD PTR [edx+0x1c0]
  40240f:	adc    DWORD PTR ds:0x42b000,0x42b010
  402419:	mov    edx,DWORD PTR [edx]
  40241b:	xor    ebx,ebx
  40241d:	add    DWORD PTR ds:0x42900c,0x42b014
  402427:	add    edx,eax
  402429:	mov    DWORD PTR ds:0x42901c,0x5032
  402433:	adc    ebx,0xffffffff
  402436:	add    DWORD PTR ds:0x42b00c,0x1ef4
  402440:	xor    edx,ecx
  402442:	xor    ebx,0x0
  402445:	mov    DWORD PTR ds:0x429020,0x6916
  40244f:	cmp    edx,0x70941fc1
  402455:	mov    DWORD PTR ds:0x42a018,0x39ab
  40245f:	jne    0x402a13
  402465:	cmp    ebx,0xffffffff
  402468:	jne    0x402a13
  40246e:	mov    edx,DWORD PTR ds:0x42e4ab
  402474:	mov    ebx,DWORD PTR ds:0x42e4b3
  40247a:	xor    edx,ebx
  40247c:	mov    DWORD PTR ds:0x42e4ab,edx
  402482:	mov    ebx,DWORD PTR ds:0x42e4ab
  402488:	mov    edx,DWORD PTR [ebp-0x48]
  40248b:	add    DWORD PTR [edx],ebx
  40248d:	jmp    0x4029d4
  402492:	mov    eax,DWORD PTR [ebp-0x3c]
  402495:	cmp    eax,0xf89c85b8
  40249a:	je     0x4024f7
  4024a0:	mov    eax,DWORD PTR [ebp-0x8]
  4024a3:	mov    ecx,DWORD PTR [ebp-0x40]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	cmp    eax,ecx
  4024ac:	je     0x4024f7
  4024b2:	mov    eax,ds:0x42e42f
  4024b7:	mov    eax,DWORD PTR [eax+0x194]
  4024bd:	mov    ecx,DWORD PTR [eax]
  4024bf:	mov    eax,DWORD PTR [ecx+0x3c]
  4024c2:	push   DWORD PTR ds:0x42e507
  4024c8:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4024cc:	push   DWORD PTR ds:0x42e2b3
  4024d2:	add    eax,ecx
  4024d4:	mov    ecx,DWORD PTR ds:0x42e42f
  4024da:	mov    ecx,DWORD PTR [ecx+0x194]
  4024e0:	push   DWORD PTR [ecx]
  4024e2:	call   eax
  4024e4:	mov    ecx,DWORD PTR ds:0x42e42f
  4024ea:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4024f0:	mov    DWORD PTR [ecx],eax
  4024f2:	jmp    0x402a13
  4024f7:	mov    eax,DWORD PTR [ebp-0x8]
  4024fa:	mov    ecx,DWORD PTR [ebp-0x7c]
  4024fd:	xor    eax,esi
  4024ff:	add    eax,edi
  402501:	cmp    eax,ecx
  402503:	jne    0x4028ce
  402509:	mov    eax,DWORD PTR [ebp-0x8]
  40250c:	mov    ecx,DWORD PTR ds:0x42e42f
  402512:	mov    ecx,DWORD PTR [ecx+0x198]
  402518:	xor    eax,esi
  40251a:	add    eax,edi
  40251c:	cmp    eax,DWORD PTR [ecx]
  40251e:	jne    0x40253d
  402524:	mov    eax,DWORD PTR [ebp-0x8]
  402527:	push   0xf89c85b9
  40252c:	xor    eax,esi
  40252e:	add    eax,edi
  402530:	push   eax
  402531:	push   ebx
  402532:	push   DWORD PTR [ebp-0xc]
  402535:	push   DWORD PTR [ebp-0x8]
  402538:	call   0x40c765
  40253d:	mov    eax,DWORD PTR [ebp-0xc]
  402540:	mov    DWORD PTR [ebp-0x44],eax
  402543:	mov    eax,DWORD PTR [ebp-0x8]
  402546:	mov    DWORD PTR [ebp-0x1c],eax
  402549:	mov    eax,DWORD PTR [ebp-0x1c]
  40254c:	xor    eax,esi
  40254e:	add    eax,edi
  402550:	mov    DWORD PTR [ebp+0x10],eax
  402553:	mov    eax,ds:0x42e2af
  402558:	mov    eax,DWORD PTR [eax]
  40255a:	mov    DWORD PTR [ebp+0x10],eax
  40255d:	mov    eax,ds:0x42e4b7
  402562:	mov    eax,DWORD PTR [eax]
  402564:	mov    DWORD PTR [ebp-0x18],eax
  402567:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  40256e:	mov    eax,DWORD PTR [ebp+0xc]
  402571:	xor    eax,esi
  402573:	add    eax,edi
  402575:	mov    DWORD PTR [ebp+0xc],eax
  402578:	mov    eax,ds:0x42e42f
  40257d:	mov    DWORD PTR [ebp+0xc],eax
  402580:	mov    eax,DWORD PTR [ebp+0x10]
  402583:	mov    DWORD PTR [ebp+0xc],eax
  402586:	mov    eax,DWORD PTR [ebp+0xc]
  402589:	push   0x4
  40258b:	pop    ecx
  40258c:	sub    ecx,eax
  40258e:	add    ecx,DWORD PTR [ebp-0x18]
  402591:	mov    DWORD PTR [ebp-0x38],0xf89c85f9
  402598:	mov    DWORD PTR [ebp+0x10],ecx
  40259b:	mov    DWORD PTR [ebp-0xdc],ebx
  4025a1:	mov    eax,DWORD PTR [ebp+0xc]
  4025a4:	mov    DWORD PTR [ebp-0xd8],eax
  4025aa:	mov    eax,DWORD PTR [ebp+0x10]
  4025ad:	mov    DWORD PTR [ebp-0xd4],eax
  4025b3:	mov    eax,DWORD PTR [ebp-0x38]
  4025b6:	xor    eax,esi
  4025b8:	add    eax,edi
  4025ba:	mov    DWORD PTR [ebp-0xd0],eax
  4025c0:	lea    eax,[ebp-0x88]
  4025c6:	mov    DWORD PTR [ebp-0xcc],eax
  4025cc:	mov    eax,DWORD PTR [ebp-0xdc]
  4025d2:	xor    eax,esi
  4025d4:	add    eax,edi
  4025d6:	mov    DWORD PTR [ebp-0xdc],eax
  4025dc:	lea    eax,[ebp-0xdc]
  4025e2:	push   eax
  4025e3:	mov    eax,DWORD PTR [ebp-0x44]
  4025e6:	xor    eax,esi
  4025e8:	add    eax,edi
  4025ea:	push   eax
  4025eb:	mov    eax,ds:0x42e44f
  4025f0:	push   0x42e3a5
  4025f5:	push   DWORD PTR [eax]
  4025f7:	call   0x4050c0
  4025fc:	mov    eax,DWORD PTR [ebp+0xc]
  4025ff:	mov    ecx,DWORD PTR [ebp+0x10]
  402602:	mov    DWORD PTR [ebp-0x78],ecx
  402605:	mov    ecx,DWORD PTR [ebp-0x1c]
  402608:	xor    ecx,esi
  40260a:	mov    DWORD PTR [ebp-0x18],eax
  40260d:	add    ecx,edi
  40260f:	jmp    0x40286f
  402614:	lea    edx,[ecx+eax*1]
  402617:	mov    DWORD PTR [ebp+0x10],edx
  40261a:	mov    edx,DWORD PTR [ebp-0x78]
  40261d:	sub    edx,ecx
  40261f:	mov    DWORD PTR [ebp+0xc],edx
  402622:	mov    edx,DWORD PTR [ebp+0xc]
  402625:	mov    DWORD PTR [ebp-0x50],edx
  402628:	mov    edx,DWORD PTR [ebp+0x10]
  40262b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  402632:	mov    DWORD PTR [ebp-0x68],edx
  402635:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  40263c:	mov    edx,DWORD PTR [ebp-0x4c]
  40263f:	xor    edx,esi
  402641:	add    edx,edi
  402643:	mov    DWORD PTR [ebp+0x10],edx
  402646:	mov    edx,DWORD PTR [ebp-0x4c]
  402649:	xor    edx,esi
  40264b:	add    edx,edi
  40264d:	mov    DWORD PTR [ebp+0xc],edx
  402650:	mov    DWORD PTR [ebp-0x64],0xf89c85d9
  402657:	mov    DWORD PTR [ebp-0x60],0xf89c85be
  40265e:	mov    edx,DWORD PTR [ebp-0x4c]
  402661:	mov    ebx,DWORD PTR [ebp-0x50]
  402664:	xor    edx,esi
  402666:	add    edx,edi
  402668:	cmp    ebx,edx
  40266a:	je     0x402863
  402670:	mov    eax,DWORD PTR [ebp-0x20]
  402673:	xor    eax,esi
  402675:	mov    edx,0xffcd8d20
  40267a:	sub    edx,eax
  40267c:	add    edx,DWORD PTR [ebp-0x50]
  40267f:	mov    eax,DWORD PTR [ebp-0x20]
  402682:	mov    ebx,DWORD PTR [ebp+0x10]
  402685:	xor    eax,esi
  402687:	add    eax,edi
  402689:	imul   eax,ebx
  40268c:	cmp    eax,edx
  40268e:	ja     0x402860
  402694:	mov    edx,DWORD PTR [ebp+0x10]
  402697:	mov    eax,DWORD PTR [ebp-0x50]
  40269a:	mov    ebx,DWORD PTR [ebp-0x64]
  40269d:	sub    eax,edx
  40269f:	xor    ebx,esi
  4026a1:	xor    edx,edx
  4026a3:	add    ebx,edi
  4026a5:	div    ebx
  4026a7:	mov    DWORD PTR [ebp+0xc],eax
  4026aa:	mov    eax,DWORD PTR [ebp-0x60]
  4026ad:	mov    edx,DWORD PTR [ebp+0xc]
  4026b0:	xor    eax,esi
  4026b2:	add    eax,edi
  4026b4:	cmp    edx,eax
  4026b6:	jbe    0x4026c6
  4026bc:	mov    eax,DWORD PTR [ebp-0x60]
  4026bf:	xor    eax,esi
  4026c1:	add    eax,edi
  4026c3:	mov    DWORD PTR [ebp+0xc],eax
  4026c6:	mov    eax,DWORD PTR [ebp-0x64]
  4026c9:	mov    edx,DWORD PTR [ebp+0xc]
  4026cc:	xor    eax,esi
  4026ce:	add    eax,edi
  4026d0:	imul   eax,edx
  4026d3:	mov    DWORD PTR [ebp+0xc],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4026d9:	mov    edx,DWORD PTR [ebp+0xc]
  4026dc:	xor    eax,esi
  4026de:	add    eax,edi
  4026e0:	cmp    edx,eax
  4026e2:	je     0x402849
  4026e8:	mov    eax,DWORD PTR [ebp+0xc]
  4026eb:	mov    DWORD PTR [ebp-0x2c],eax
  4026ee:	mov    eax,DWORD PTR [ebp+0x10]
  4026f1:	add    eax,DWORD PTR [ebp-0x68]
  4026f4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  4026fb:	mov    DWORD PTR [ebp-0x28],eax
  4026fe:	mov    eax,0xf89c85b8
  402703:	mov    DWORD PTR [ebp-0x5c],eax
  402706:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  40270d:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402714:	mov    DWORD PTR [ebp-0x30],eax
  402717:	mov    eax,DWORD PTR [ebp-0x38]
  40271a:	xor    eax,esi
  40271c:	add    eax,edi
  40271e:	jmp    0x402805
  402723:	mov    DWORD PTR [ebp-0x70],0xf89c85b3
  40272a:	mov    DWORD PTR [ebp-0x74],0xf89c85ad
  402731:	mov    eax,DWORD PTR [ebp-0x30]
  402734:	mov    edx,DWORD PTR [ebp+0xc]
  402737:	xor    eax,esi
  402739:	add    eax,edi
  40273b:	imul   eax,edx
  40273e:	mov    edx,DWORD PTR [ebp-0x28]
  402741:	mov    al,BYTE PTR [eax+edx*1]
  402744:	mov    BYTE PTR [ebp-0x1],al
  402747:	mov    eax,DWORD PTR [ebp-0x30]
  40274a:	mov    edx,DWORD PTR [ebp+0xc]
  40274d:	xor    eax,esi
  40274f:	add    eax,edi
  402751:	imul   eax,edx
  402754:	mov    edx,DWORD PTR [ebp-0x54]
  402757:	xor    edx,esi
  402759:	add    eax,edx
  40275b:	mov    edx,DWORD PTR [ebp-0x28]
  40275e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402766:	mov    edx,DWORD PTR [ebp-0x70]
  402769:	xor    edx,esi
  40276b:	lea    eax,[edx+eax*1+0x3272e0]
  402772:	movzx  edx,BYTE PTR [ebp-0x1]
  402776:	xor    edx,eax
  402778:	mov    BYTE PTR [ebp-0x1],dl
  40277b:	mov    al,BYTE PTR [ebp-0x1]
  40277e:	mov    edx,DWORD PTR [ebp-0x30]
  402781:	mov    ebx,DWORD PTR [ebp+0xc]
  402784:	xor    edx,esi
  402786:	add    edx,edi
  402788:	imul   edx,ebx
  40278b:	mov    ebx,DWORD PTR [ebp-0x28]
  40278e:	mov    BYTE PTR [edx+ebx*1],al
  402791:	mov    eax,DWORD PTR [ebp-0x30]
  402794:	mov    edx,DWORD PTR [ebp+0xc]
  402797:	xor    eax,esi
  402799:	add    eax,edi
  40279b:	imul   eax,edx
  40279e:	mov    edx,DWORD PTR [ebp-0x28]
  4027a1:	mov    al,BYTE PTR [eax+edx*1]
  4027a4:	mov    BYTE PTR [ebp-0x1],al
  4027a7:	mov    eax,DWORD PTR [ebp-0x30]
  4027aa:	mov    edx,DWORD PTR [ebp+0xc]
  4027ad:	xor    eax,esi
  4027af:	add    eax,edi
  4027b1:	imul   eax,edx
  4027b4:	mov    edx,DWORD PTR [ebp-0x5c]
  4027b7:	xor    edx,esi
  4027b9:	add    eax,edx
  4027bb:	mov    edx,DWORD PTR [ebp-0x28]
  4027be:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4027c6:	mov    edx,DWORD PTR [ebp-0x74]
  4027c9:	xor    edx,esi
  4027cb:	lea    eax,[edx+eax*1+0x3272e0]
  4027d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4027d6:	xor    edx,eax
  4027d8:	mov    BYTE PTR [ebp-0x1],dl
  4027db:	mov    al,BYTE PTR [ebp-0x1]
  4027de:	mov    edx,DWORD PTR [ebp-0x30]
  4027e1:	mov    ebx,DWORD PTR [ebp+0xc]
  4027e4:	xor    edx,esi
  4027e6:	add    edx,edi
  4027e8:	imul   edx,ebx
  4027eb:	mov    ebx,DWORD PTR [ebp-0x28]
  4027ee:	mov    BYTE PTR [edx+ebx*1],al
  4027f1:	mov    eax,DWORD PTR [ebp-0x10]
  4027f4:	mov    edx,DWORD PTR [ebp-0x5c]
  4027f7:	xor    eax,esi
  4027f9:	xor    edx,esi
  4027fb:	add    eax,edi
  4027fd:	add    edx,edi
  4027ff:	imul   eax,edx
  402802:	add    eax,DWORD PTR [ebp+0xc]
  402805:	mov    DWORD PTR [ebp+0xc],eax
  402808:	mov    eax,DWORD PTR [ebp+0xc]
  40280b:	mov    edx,DWORD PTR [ebp-0x2c]
  40280e:	cmp    edx,eax
  402810:	jb     0x402723
  402816:	mov    eax,DWORD PTR [ebp-0x5c]
  402819:	mov    edx,DWORD PTR [ebp-0x2c]
  40281c:	xor    eax,esi
  40281e:	add    eax,edi
  402820:	imul   eax,edx
  402823:	mov    edx,DWORD PTR [ebp-0x38]
  402826:	xor    edx,esi
  402828:	add    edx,edi
  40282a:	or     eax,edx
  40282c:	mov    edx,DWORD PTR [ebp-0x20]
  40282f:	xor    edx,esi
  402831:	add    eax,edx
  402833:	mov    edx,DWORD PTR [ebp-0x20]
  402836:	xor    edx,esi
  402838:	add    eax,edx
  40283a:	mov    edx,DWORD PTR [ebp+0x10]
  40283d:	lea    eax,[eax+edx*1+0x64e5c0]
  402844:	jmp    0x402858
  402849:	mov    eax,DWORD PTR [ebp-0x20]
  40284c:	mov    edx,DWORD PTR [ebp+0x10]
  40284f:	xor    eax,esi
  402851:	lea    eax,[eax+edx*1+0x3272e0]
  402858:	mov    DWORD PTR [ebp+0x10],eax
  40285b:	jmp    0x402670
  402860:	mov    eax,DWORD PTR [ebp-0x18]
  402863:	mov    edx,DWORD PTR [ebp-0x44]
  402866:	xor    edx,esi
  402868:	lea    ecx,[ecx+edx*1+0x3272e0]
  40286f:	lea    edx,[ecx-0x3272e0]
  402875:	xor    edx,esi
  402877:	cmp    edx,0xf89c95b9
  40287d:	jne    0x402614
  402883:	mov    ecx,DWORD PTR [ebp-0x1c]
  402886:	mov    edx,DWORD PTR [ebp-0x44]
  402889:	mov    ebx,DWORD PTR [ebp-0x1c]
  40288c:	xor    edx,esi
  40288e:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402895:	xor    ecx,esi
  402897:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  40289e:	xor    ebx,esi
  4028a0:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  4028a7:	mov    edx,DWORD PTR [ebp-0x44]
  4028aa:	xor    edx,esi
  4028ac:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  4028b3:	mov    eax,DWORD PTR [ebp-0x44]
  4028b6:	mov    eax,DWORD PTR [ebp-0x8]
  4028b9:	xor    eax,esi
  4028bb:	add    eax,edi
  4028bd:	mov    ds:0x42e4b3,eax
  4028c2:	mov    eax,DWORD PTR [ebp-0x8]
  4028c5:	xor    eax,esi
  4028c7:	add    eax,edi
  4028c9:	mov    ds:0x42e4ab,eax
  4028ce:	lea    eax,[ebp-0x34]
  4028d1:	mov    DWORD PTR [ebp-0x98],eax
  4028d7:	lea    eax,[ebp+0x4]
  4028da:	mov    DWORD PTR [ebp-0x34],eax
  4028dd:	mov    eax,DWORD PTR [ebp-0x34]
  4028e0:	test   eax,eax
  4028e2:	je     0x402a13
  4028e8:	mov    DWORD PTR [ebp-0x90],0xf152c30
  4028f2:	mov    DWORD PTR [ebp-0x84],0x712ed0f
  4028fc:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402906:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402910:	call   0x40a04c
  402915:	mov    eax,DWORD PTR [ebp-0x24]
  402918:	mov    eax,DWORD PTR [ebp-0xc]
  40291b:	mov    eax,DWORD PTR [ebp-0x8]
  40291e:	mov    DWORD PTR [ebp+0xc],eax
  402921:	mov    eax,eax
  402923:	mov    eax,ds:0x42e42f
  402928:	mov    eax,DWORD PTR [eax+0x1c8]
  40292e:	mov    eax,DWORD PTR [eax]
  402930:	cdq    
  402931:	mov    ebx,eax
  402933:	mov    eax,0xfabdbee9
  402938:	add    ebx,eax
  40293a:	adc    edx,0xffffffff
  40293d:	and    DWORD PTR [ebp-0x10],0x0
  402941:	xor    edx,0x0
  402944:	mov    DWORD PTR [ebp-0x68],edx
  402947:	mov    edx,DWORD PTR [ebp+0xc]
  40294a:	mov    DWORD PTR [ebp-0x14],edx
  40294d:	mov    ecx,0x8a29a12b
  402952:	xor    ebx,ecx
  402954:	add    DWORD PTR [ebp-0x14],eax
  402957:	mov    edx,DWORD PTR [ebp-0x14]
  40295a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40295e:	xor    edx,ecx
  402960:	mov    DWORD PTR [ebp-0x58],edx
  402963:	mov    edx,DWORD PTR [ebp-0x10]
  402966:	xor    edx,0x0
  402969:	mov    DWORD PTR [ebp-0x54],edx
  40296c:	cmp    DWORD PTR [ebp-0x58],ebx
  40296f:	jne    0x402981
  402975:	mov    edx,DWORD PTR [ebp-0x68]
  402978:	cmp    DWORD PTR [ebp-0x54],edx
  40297b:	je     0x4029b0
  402981:	mov    edx,DWORD PTR ds:0x42e42f
  402987:	mov    edx,DWORD PTR [edx+0x1c0]
  40298d:	mov    edx,DWORD PTR [edx]
  40298f:	xor    ebx,ebx
  402991:	add    edx,eax
  402993:	adc    ebx,0xffffffff
  402996:	xor    edx,ecx
  402998:	xor    ebx,0x0
  40299b:	cmp    edx,0x70941fc1
  4029a1:	jne    0x402a13
  4029a7:	cmp    ebx,0xffffffff
  4029aa:	jne    0x402a13
  4029b0:	mov    edx,DWORD PTR ds:0x42e4ab
  4029b6:	mov    ebx,DWORD PTR ds:0x42e4b3
  4029bc:	xor    edx,ebx
  4029be:	mov    DWORD PTR ds:0x42e4ab,edx
  4029c4:	mov    edx,DWORD PTR [ebp-0x34]
  4029c7:	mov    ebx,DWORD PTR ds:0x42e4ab
  4029cd:	add    ebx,DWORD PTR [edx]
  4029cf:	mov    edx,DWORD PTR [ebp-0x34]
  4029d2:	mov    DWORD PTR [edx],ebx
  4029d4:	mov    edx,DWORD PTR [ebp+0xc]
  4029d7:	xor    esi,edx
  4029d9:	mov    edx,DWORD PTR ds:0x42e4ab
  4029df:	add    esi,edi
  4029e1:	xor    ebx,ebx
  4029e3:	add    esi,eax
  4029e5:	adc    ebx,0xffffffff
  4029e8:	xor    edi,edi
  4029ea:	xor    esi,ecx
  4029ec:	xor    ebx,0x0
  4029ef:	add    edx,eax
  4029f1:	adc    edi,0xffffffff
  4029f4:	xor    edx,ecx
  4029f6:	xor    edi,0x0
  4029f9:	cmp    edx,esi
  4029fb:	jne    0x402a13
  402a01:	cmp    edi,ebx
  402a03:	jne    0x402a13
  402a09:	mov    eax,ds:0x42e4ab
  402a0e:	mov    ds:0x42e4b3,eax
  402a13:	mov    eax,ds:0x42e42f
  402a18:	push   0x4
  402a1a:	add    eax,0x1cc
  402a1f:	push   eax
  402a20:	lea    eax,[ebp-0x24]
  402a23:	push   eax
  402a24:	call   0x402a39
  402a29:	mov    eax,DWORD PTR [ebp-0x24]
  402a2c:	mov    eax,DWORD PTR [eax]
  402a2e:	pop    ebx
  402a2f:	pop    edi
  402a30:	pop    esi
  402a31:	leave  
  402a32:	ret    0xc
  402a35:	xor    eax,eax
  402a37:	inc    eax
  402a38:	ret    
  402a39:	push   ebp
  402a3a:	mov    ebp,esp
  402a3c:	sub    esp,0x10
  402a3f:	and    DWORD PTR ds:0x42d004,0x0
  402a49:	jmp    0x402a5b
  402a4e:	mov    edx,DWORD PTR ds:0x42d004
  402a54:	inc    edx
  402a55:	mov    DWORD PTR ds:0x42d004,edx
  402a5b:	cmp    DWORD PTR ds:0x42d004,0x1d
  402a62:	jae    0x402a9d
  402a68:	cmp    DWORD PTR ds:0x42d004,0x11
  402a6f:	jne    0x402a7e
  402a75:	push   DWORD PTR [ebp-0x1c]
  402a78:	call   DWORD PTR ds:0x42ed77
  402a7e:	cmp    DWORD PTR ds:0x42d004,0x10
  402a85:	jne    0x402a98
  402a8b:	mov    edx,DWORD PTR ds:0x42d004
  402a91:	inc    edx
  402a92:	mov    DWORD PTR ds:0x42d004,edx
  402a98:	jmp    0x402a4e
  402a9d:	mov    eax,0xf89c85b9
  402aa2:	mov    DWORD PTR [ebp-0x4],eax
  402aa5:	and    edx,0x5cd5
  402aab:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402ab2:	and    DWORD PTR ds:0x42a000,0x0
  402abc:	jmp    0x402ace
  402ac1:	mov    ecx,DWORD PTR ds:0x42a000
  402ac7:	inc    ecx
  402ac8:	mov    DWORD PTR ds:0x42a000,ecx
  402ace:	cmp    DWORD PTR ds:0x42a000,0x11
  402ad5:	jae    0x402b06
  402adb:	cmp    DWORD PTR ds:0x42a000,0x1c
  402ae2:	jne    0x402afb
  402ae8:	push   0x42e165
  402aed:	push   0x42e185
  402af2:	push   DWORD PTR [ebp-0x28]
  402af5:	call   DWORD PTR ds:0x42ed83
  402afb:	jmp    0x402ac1
  402b00:	adc    ecx,0x6d98
  402b06:	mov    ecx,DWORD PTR [ebp-0x4]
  402b09:	push   esi
  402b0a:	inc    edx
  402b0b:	mov    edx,0x7510899
  402b10:	add    DWORD PTR ds:0x42d004,0x429008
  402b1a:	xor    ecx,edx
  402b1c:	and    DWORD PTR ds:0x42c014,0x0
  402b26:	jmp    0x402b38
  402b2b:	mov    esi,DWORD PTR ds:0x42c014
  402b31:	inc    esi
  402b32:	mov    DWORD PTR ds:0x42c014,esi
  402b38:	cmp    DWORD PTR ds:0x42c014,0x1f
  402b3f:	jae    0x402b67
  402b45:	cmp    DWORD PTR ds:0x42c014,0x26
  402b4c:	jne    0x402b58
  402b52:	call   DWORD PTR ds:0x42ed87
  402b58:	jmp    0x402b2b
  402b5d:	add    DWORD PTR ds:0x42b004,0x42a004
  402b67:	mov    esi,0x3272e0
  402b6c:	xor    DWORD PTR ds:0x42d018,0x42c000
  402b76:	push   edi
  402b77:	adc    DWORD PTR ds:0x42a010,ebx
  402b7d:	mov    edi,DWORD PTR [ebp+0x10]
  402b80:	and    DWORD PTR ds:0x42d010,0x42a00c
  402b8a:	add    ecx,esi
  402b8c:	cmp    ecx,edi
  402b8e:	mov    DWORD PTR ds:0x42b00c,0x360f
  402b98:	je     0x404ff4
  402b9e:	mov    ecx,DWORD PTR [ebp-0x4]
  402ba1:	and    DWORD PTR ds:0x42c014,0x0
  402bab:	mov    edi,DWORD PTR ds:0x42c014
  402bb1:	inc    edi
  402bb2:	mov    DWORD PTR ds:0x42c014,edi
  402bb8:	cmp    DWORD PTR ds:0x42c014,0x25
  402bbf:	jne    0x402bd8
  402bc5:	push   0x1556
  402bca:	push   0x42901c
  402bcf:	push   DWORD PTR [ebp-0x28]
  402bd2:	call   DWORD PTR ds:0x42ed8b
  402bd8:	cmp    DWORD PTR ds:0x42c014,0x1c
  402bdf:	jb     0x402bab
  402be5:	mov    edi,DWORD PTR [ebp+0x10]
  402be8:	xor    eax,eax
  402bea:	xor    ecx,edx
  402bec:	add    ecx,esi
  402bee:	add    edi,0xfabdbee9
  402bf4:	adc    eax,0xffffffff
  402bf7:	xor    eax,0x0
  402bfa:	mov    DWORD PTR [ebp-0xc],eax
  402bfd:	push   ebx
  402bfe:	xor    ebx,ebx
  402c00:	xor    edi,0x8a29a12b
  402c06:	mov    eax,ecx
  402c08:	add    eax,0xfabdbee9
  402c0d:	adc    ebx,0xffffffff
  402c10:	xor    eax,0x8a29a12b
  402c15:	xor    ebx,0x0
  402c18:	cmp    eax,edi
  402c1a:	jne    0x404f86
  402c20:	cmp    ebx,DWORD PTR [ebp-0xc]
  402c23:	je     0x404fee
  402c29:	jmp    0x404f86
  402c2e:	mov    esi,0x3272e0
  402c33:	jmp    0x404f86
  402c38:	xchg   esi,eax
  402c39:	add    bh,ah
  402c3b:	xchg   esp,eax
  402c3c:	mov    ebx,0x3d00957b
  402c41:	dec    esp
  402c42:	ja     0x402c89
  402c44:	xor    DWORD PTR [edx+esi*8-0x1],ebx
  402c48:	jp     0x402cc4
  402c4a:	jp     0x402cc6
  402c4c:	dec    esp
  402c4d:	pop    edi
  402c4e:	jp     0x402cca
  402c50:	adc    DWORD PTR [eax],ebp
  402c52:	pop    ss
  402c53:	cmp    eax,0x2f1b2115
  402c58:	popa   
  402c59:	cmp    ah,BYTE PTR [ebp+0x66]
  402c5c:	xchg   edi,eax
  402c5d:	pusha  
  402c5e:	push   0x6a
  402c60:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402c66:	inc    esp
  402c67:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402c6b:	jl     0x402cd6
  402c6d:	push   ebp
  402c6e:	iret   
  402c6f:	pop    ecx
  402c70:	dec    edx
  402c71:	cmp    al,0x88
  402c73:	cli    
  402c74:	xchg   DWORD PTR [esi+0x57],esi
  402c77:	dec    ecx
  402c78:	jg     0x402cb1
  402c7a:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402c80:	sub    bh,bh
  402c82:	data16 fdivr st,st(2)
  402c85:	push   ebx
  402c86:	jg     0x402ca6
  402c88:	jmp    0xe9faf5c2
  402c8d:	xchg   DWORD PTR [ebx],edx
  402c8f:	fimul  WORD PTR [ebx-0x54aaf0db]
  402c95:	mov    al,al
  402c97:	imul   DWORD PTR [ecx-0x27]
  402c9a:	add    al,dl
  402c9c:	push   cs
  402c9d:	cli    
  402c9e:	es adc al,0x44
  402ca1:	or     BYTE PTR [esi],ah
  402ca3:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402ca8:	pop    ebp
  402ca9:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402caf:	jo     0x402ce3
  402cb1:	les    ebx,FWORD PTR [ebx-0xb]
  402cb4:	sbb    bh,dl
  402cb6:	je     0x402c75
  402cb8:	arpl   cx,bx
  402cba:	xchg   esp,eax
  402cbb:	pop    edi
  402cbc:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402cc2:	repz sahf 
  402cc4:	cmp    BYTE PTR [edx+0x73],dh
  402cc7:	or     ebx,edx
  402cc9:	sub    DWORD PTR [edx-0x77],edx
  402ccc:	xor    BYTE PTR [ebx],dh
  402cce:	push   eax
  402ccf:	jecxz  0x402ca0
  402cd1:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402cd7:	test   BYTE PTR [ebp-0x20],ch
  402cda:	inc    ecx
  402cdb:	push   edx
  402cdc:	dec    eax
  402cdd:	or     BYTE PTR [esi],bh
  402cdf:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402ce7:	fadd   QWORD PTR [eax]
  402ce9:	push   esi
  402cea:	stc    
  402ceb:	push   edx
  402cec:	push   esi
  402ced:	mov    eax,ds:0xf4bf64f5
  402cf2:	inc    edx
  402cf3:	add    ecx,DWORD PTR [eax]
  402cf5:	jb     0x490678ef
  402cfb:	out    dx,eax
  402cfc:	retf   0x4978
  402cff:	and    DWORD PTR [ebx],edi
  402d01:	add    al,0x2e
  402d03:	outs   dx,BYTE PTR ds:[esi]
  402d04:	mov    ah,0xf4
  402d06:	daa    
  402d07:	cmp    al,0x8
  402d09:	dec    ebx
  402d0a:	mov    al,ds:0xa3e3a4b1
  402d0f:	(bad)  
  402d10:	sbb    ah,cl
  402d12:	popf   
  402d13:	imul   edi,DWORD PTR [eax+0x51f65656],0xffffff9f
  402d1a:	sti    
  402d1b:	jae    0x402d7d
  402d1d:	test   eax,0xf8001cbf
  402d22:	mov    edi,0x2d72054c
  402d27:	or     eax,0xa03098a3
  402d2c:	adc    BYTE PTR [ebx],0x3d
  402d2f:	fldenv [edi-0x7dfbfc1c]
  402d35:	stos   DWORD PTR es:[edi],eax
  402d36:	mov    bl,0x68
  402d38:	retf   
  402d39:	push   esi
  402d3a:	jne    0x402db2
  402d3c:	adc    ecx,DWORD PTR [edx+0x5e]
  402d3f:	mov    dl,0x61
  402d41:	retf   
  402d42:	shr    BYTE PTR [eax+0x792ed954],1
  402d48:	js     0x402d4b
  402d4a:	mov    bh,0x49
  402d4c:	mov    bl,BYTE PTR [edi+0x2f]
  402d4f:	cmp    BYTE PTR [edx+esi*2-0x7f6c050],bl
  402d56:	add    esp,esp
  402d58:	and    BYTE PTR [edx],bh
  402d5a:	jno    0x402d9b
  402d5c:	xchg   esi,eax
  402d5d:	retf   
  402d5e:	outs   dx,DWORD PTR ds:[esi]
  402d5f:	and    eax,0x3ad236b9
  402d64:	sub    ebx,ebx
  402d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d67:	or     ch,bh
  402d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d6a:	mov    bl,BYTE PTR [edx]
  402d6c:	das    
  402d6d:	neg    DWORD PTR [esp+edi*1+0x4044d5f4]
  402d74:	sbb    eax,0xda2c3fc1
  402d79:	jb     0x402d30
  402d7b:	pop    esi
  402d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7d:	inc    ebx
  402d7e:	jno    0x402df8
  402d80:	mov    eax,ds:0xacb3a266
  402d85:	scas   eax,DWORD PTR es:[edi]
  402d86:	push   ebp
  402d87:	rol    edx,cl
  402d89:	aaa    
  402d8a:	jbe    0x402d8f
  402d8c:	jnp    0x402d96
  402d8e:	or     esi,DWORD PTR [eax]
  402d90:	xchg   esp,eax
  402d91:	xchg   ebx,eax
  402d92:	jge    0x402d5b
  402d94:	mov    bl,0x7f
  402d96:	jle    0x402d84
  402d98:	fldenv [ebx+0xa]
  402d9b:	ins    DWORD PTR es:[edi],dx
  402d9c:	inc    esi
  402d9d:	fisubr DWORD PTR [esi+0x26]
  402da0:	cmp    BYTE PTR [ebx+0x4f4822f6],ah
  402da6:	sub    ch,BYTE PTR [eax+0x2]
  402da9:	addr16 aam 0x21
  402dac:	(bad)  
  402dad:	jmp    0x402d8a
  402daf:	xchg   ebp,eax
  402db0:	imul   edx,esp,0x2
  402db3:	xor    BYTE PTR [esi+0x33],ah
  402db6:	popa   
  402db7:	daa    
  402db8:	pop    edx
  402db9:	(bad)  
  402dba:	xchg   edx,eax
  402dbb:	or     DWORD PTR [edx+0x74],esi
  402dbe:	ret    0x6edc
  402dc1:	push   esi
  402dc2:	iret   
  402dc3:	icebp  
  402dc4:	dec    esp
  402dc5:	rcr    BYTE PTR [eax-0x19],1
  402dc8:	pop    esi
  402dc9:	aam    0xd3
  402dcb:	nop
  402dcc:	mov    al,ds:0x43fb88f0
  402dd1:	not    ecx
  402dd3:	xchg   ebx,eax
  402dd4:	xchg   ebx,eax
  402dd5:	arpl   WORD PTR [ebx-0x7e07dd42],dx
  402ddb:	aaa    
  402ddc:	rcl    DWORD PTR [ebp+0x0],0xfc
  402de0:	les    esp,FWORD PTR [edx-0x39]
  402de3:	retf   
  402de4:	hlt    
  402de5:	jmp    0x800eb12c
  402dea:	shl    DWORD PTR [edx+0x15],cl
  402ded:	or     DWORD PTR [ebp-0x60],ecx
  402df0:	dec    edx
  402df1:	cmp    edi,DWORD PTR [edi+0x65]
  402df4:	or     eax,0x5dc5d47b
  402df9:	sbb    al,BYTE PTR [esi+ebx*8+0x3f]
  402dfd:	and    DWORD PTR [ebp+edx*1+0x209c1f81],ebp
  402e04:	xor    DWORD PTR [ebx],ebx
  402e06:	mov    esi,0xbcd49e2c
  402e0b:	dec    ebp
  402e0c:	bound  edx,QWORD PTR [edx]
  402e0e:	pop    esi
  402e0f:	dec    eax
  402e10:	add    eax,ecx
  402e12:	push   ecx
  402e13:	lock mov WORD PTR [ebp*8+0x1032fd36],es
  402e1b:	cmp    bh,BYTE PTR [edx+ecx*2]
  402e1e:	pop    ebx
  402e1f:	add    ebx,DWORD PTR [ebx+ebp*2-0x13b99621]
  402e26:	and    esp,DWORD PTR [ebx]
  402e28:	cmp    al,0xf5
  402e2a:	mov    edi,edx
  402e2c:	or     BYTE PTR [eax],bl
  402e2e:	dec    esi
  402e2f:	and    eax,0xd8b99c14
  402e34:	jmp    0xadf46e7a
  402e39:	sbb    eax,DWORD PTR [edi]
  402e3b:	pushf  
  402e3c:	bound  ecx,QWORD PTR gs:[ebp-0x72]
  402e40:	adc    eax,0x6ae60d2c
  402e45:	ja     0x402ea0
  402e47:	mov    DWORD PTR [ecx-0x22e12a0e],eax
  402e4d:	cld    
  402e4e:	and    bh,BYTE PTR ds:0x612be883
  402e54:	fadd   DWORD PTR [edx]
  402e56:	call   0x3483:0x4d046c76
  402e5d:	pop    esp
  402e5e:	push   esi
  402e5f:	inc    esp
  402e60:	and    bl,BYTE PTR [edi+ebx*1-0x35145e82]
  402e67:	rol    DWORD PTR [eax],cl
  402e69:	stos   BYTE PTR es:[edi],al
  402e6a:	mov    ds:0x2a11110d,eax
  402e6f:	dec    edi
  402e70:	add    dl,bl
  402e72:	stc    
  402e73:	jl     0x402eda
  402e75:	test   al,0xb5
  402e77:	rcl    BYTE PTR [ebx],0x5c
  402e7a:	mov    DWORD PTR [edx+0x16],esi
  402e7d:	mov    dh,0xf0
  402e7f:	(bad)
  402e83:	hlt    
  402e84:	retf   0x9b5e
  402e87:	pop    esp
  402e88:	lock out dx,al
  402e8a:	arpl   sp,di
  402e8c:	out    0x72,al
  402e8e:	stc    
  402e8f:	imul   edx,DWORD PTR [edi+0x146adf2c],0x2e
  402e96:	jae    0x402e6c
  402e98:	icebp  
  402e99:	cmp    al,0xe0
  402e9b:	and    ebx,ebx
  402e9d:	icebp  
  402e9e:	into   
  402e9f:	ds jp  0x402f1f
  402ea2:	hlt    
  402ea3:	dec    edi
  402ea4:	and    ch,BYTE PTR [ecx]
  402ea6:	icebp  
  402ea7:	into   
  402ea8:	sub    dh,BYTE PTR [edx]
  402eaa:	dec    ebp
  402eab:	test   DWORD PTR [edi+0x26b47c60],ebx
  402eb1:	(bad)  [ecx-0x45f4d930]
  402eb7:	fcomp  QWORD PTR [eax]
  402eb9:	dec    esi
  402eba:	fisubr WORD PTR [ecx]
  402ebc:	mov    esp,0xa2d6dd76
  402ec1:	push   esi
  402ec2:	sub    eax,0xac1b452
  402ec7:	jg     0x402e64
  402ec9:	(bad)  
  402eca:	cmp    al,0xb0
  402ecc:	jns    0x402ec2
  402ece:	inc    esi
  402ecf:	push   edi
  402ed0:	cs jle 0x402e69
  402ed3:	call   0x9b99d98
  402ed8:	ja     0x402f02
  402eda:	test   al,0x1c
  402edc:	test   BYTE PTR [eax+0x40],cl
  402edf:	inc    BYTE PTR [eax]
  402ee1:	ds cdq 
  402ee3:	sar    BYTE PTR [edx+eax*2],1
  402ee6:	aas    
  402ee7:	test   BYTE PTR [ecx-0x25e46491],0x17
  402eee:	pop    ebx
  402eef:	mov    dh,0xdd
  402ef1:	dec    edi
  402ef2:	fs cmp al,0xc8
  402ef5:	lods   al,BYTE PTR ds:[esi]
  402ef6:	adc    DWORD PTR [eax],eax
  402ef8:	xor    DWORD PTR [edi],edi
  402efa:	icebp  
  402efb:	pop    edi
  402efc:	imul   ebx,DWORD PTR [eax-0x5b060d2c],0x5c
  402f03:	jno    0x402eb5
  402f05:	popf   
  402f06:	push   ebx
  402f07:	pop    edi
  402f08:	scas   eax,DWORD PTR es:[edi]
  402f09:	stc    
  402f0a:	cmp    ch,BYTE PTR [ecx+0x47a6deb4]
  402f10:	push   ss
  402f11:	int3   
  402f12:	shl    DWORD PTR [edx],1
  402f14:	clc    
  402f15:	test   DWORD PTR [esi+edx*1+0x33746c85],edx
  402f1c:	sbb    eax,0xc91c410b
  402f21:	out    dx,eax
  402f22:	mov    eax,0xd609b1c5
  402f27:	je     0x402f97
  402f29:	jecxz  0x402f6b
  402f2b:	pop    ecx
  402f2c:	nop
  402f2d:	mov    ah,0xea
  402f2f:	aam    0xde
  402f31:	mov    DWORD PTR [esi+0x1c],edx
  402f34:	add    edx,edx
  402f36:	cmp    DWORD PTR [edi],esi
  402f38:	or     DWORD PTR [ecx-0x6a],esi
  402f3b:	sbb    al,BYTE PTR [ebx-0x6a]
  402f3e:	cs or  ebx,ecx
  402f41:	sbb    DWORD PTR [edi-0x1bc2871e],ebp
  402f47:	inc    esp
  402f48:	aas    
  402f49:	add    DWORD PTR [edi],edi
  402f4b:	(bad)  
  402f4c:	stc    
  402f4d:	mov    ebp,0x119002d6
  402f52:	cmp    eax,ebx
  402f54:	adc    esp,DWORD PTR [ecx+0x2cf72a2b]
  402f5a:	out    0x63,eax
  402f5c:	(bad)  
  402f5d:	fcom   DWORD PTR [esi]
  402f5f:	(bad)  
  402f60:	div    DWORD PTR [eax-0x62]
  402f63:	lds    edi,FWORD PTR [ecx+0x1c]
  402f66:	sub    al,0xb2
  402f68:	int    0xc
  402f6a:	push   ecx
  402f6b:	add    dl,BYTE PTR [ebx-0x6a]
  402f6e:	lahf   
  402f6f:	loope  0x402f86
  402f71:	mov    dh,0x9f
  402f73:	push   esi
  402f74:	add    BYTE PTR [esi],ah
  402f76:	push   esp
  402f77:	mov    cl,0xc7
  402f79:	sbb    al,0xa8
  402f7b:	leave  
  402f7c:	jmp    FWORD PTR [edi-0x2c]
  402f7f:	dec    edx
  402f80:	push   0x68
  402f82:	or     BYTE PTR [edi+ebx*8-0xedb4076],al
  402f89:	jmp    0x1cee3d29
  402f8e:	jb     0x402f22
  402f90:	adc    cl,dh
  402f92:	adc    ebp,DWORD PTR [edi]
  402f94:	and    al,0xa8
  402f96:	lock inc esp
  402f98:	xor    DWORD PTR [ebp+0x248d9770],0x4b
  402f9f:	mov    ?,WORD PTR [ecx+0x1aa71ab3]
  402fa5:	and    BYTE PTR [ecx-0xb],dl
  402fa8:	stc    
  402fa9:	(bad)  
  402faa:	push   0xd8d659e5
  402faf:	sti    
  402fb0:	jne    0x402f58
  402fb2:	sbb    eax,0x6d06e05
  402fb7:	sbb    dl,ch
  402fb9:	inc    esp
  402fba:	dec    ebx
  402fbb:	xchg   edx,eax
  402fbc:	in     eax,0xff
  402fbe:	add    BYTE PTR [ebp-0xe],dl
  402fc1:	mov    dh,0xe2
  402fc3:	push   0x2c
  402fc5:	add    cl,ah
  402fc7:	test   DWORD PTR ds:[ebx-0xf8116ce],0xe677e04d
  402fd2:	push   ebp
  402fd3:	mov    ebp,0x45a3e0d0
  402fd8:	int    0x54
  402fda:	mov    edx,0xd26b50a6
  402fdf:	cmp    al,0xad
  402fe1:	dec    esi
  402fe2:	mov    esi,DWORD PTR [ecx-0x1c]
  402fe5:	push   eax
  402fe6:	jne    0x402fe6
  402fe8:	addr16 jne 0x403009
  402feb:	int3   
  402fec:	adc    ecx,DWORD PTR [edi]
  402fee:	sub    al,0xca
  402ff0:	int    0xe1
  402ff2:	dec    esi
  402ff3:	xor    dh,BYTE PTR [ebx]
  402ff5:	std    
  402ff6:	xchg   ebx,eax
  402ff7:	aam    0xae
  402ff9:	jnp    0x40306f
  402ffb:	js     0x402fa2
  402ffd:	cmp    ch,bh
  402fff:	cli    
  403000:	pop    ebp
  403001:	call   0xb70faede
  403006:	mov    ah,al
  403008:	jecxz  0x402fb4
  40300a:	ffreep st(0)
  40300c:	or     eax,0xcb10d60d
  403011:	inc    esi
  403012:	push   edi
  403013:	or     ecx,DWORD PTR [eax-0x74]
  403016:	aas    
  403017:	adc    bh,bl
  403019:	mov    ah,0x3d
  40301b:	sbb    al,0x4f
  40301d:	jnp    0x40300c
  40301f:	(bad)  
  403021:	or     esi,DWORD PTR [esi+0x7617c377]
  403027:	pop    ss
  403028:	mov    edi,0x96f98433
  40302d:	int3   
  40302e:	cmp    eax,0x25b326e5
  403033:	gs mov ebx,0x17e24350
  403039:	xchg   DWORD PTR [ecx-0x46],ecx
  40303c:	lods   eax,DWORD PTR ds:[esi]
  40303d:	or     DWORD PTR [esi+0x1f102c0],esi
  403043:	jbe    0x4030b3
  403045:	cmp    dh,dl
  403047:	vpmacssww ymm15,ymm6,ymm3,YMMWORD PTR [ebp-0x5efa8f9e]
  403051:	pop    edx
  403052:	icebp  
  403053:	outs   dx,DWORD PTR ds:[esi]
  403055:	or     al,ah
  403057:	test   DWORD PTR [esp+edx*1+0x2b],ebp
  40305b:	jge    0x403021
  40305d:	mov    al,ds:0x75403ce
  403062:	adc    cl,BYTE PTR [ebp+edi*1+0x78fc4ac8]
  403069:	inc    edx
  40306a:	mov    ch,dl
  40306c:	or     BYTE PTR [edx+0x54],ah
  40306f:	icebp  
  403070:	xchg   edi,eax
  403071:	pop    ds
  403072:	or     DWORD PTR [esp+ebx*4-0x305843d4],edx
  403079:	mov    es,WORD PTR [esi]
  40307b:	and    al,0x3f
  40307d:	or     eax,0xd455636d
  403082:	sub    al,0x60
  403084:	pop    ss
  403085:	cmp    eax,0xa040bb35
  40308a:	pusha  
  40308b:	xchg   edx,eax
  40308c:	sub    eax,0x33f80324
  403091:	rol    eax,0x72
  403094:	mov    ebx,0x140bd655
  403099:	inc    eax
  40309a:	cli    
  40309b:	mov    bl,0x73
  40309d:	clc    
  40309e:	lahf   
  40309f:	xor    eax,0x92c59839
  4030a4:	adc    al,0xac
  4030a6:	fsubrp st(1),st
  4030a8:	es adc al,0xf1
  4030ab:	nop
  4030ac:	and    BYTE PTR [edx+0x4f],dl
  4030af:	jg     0x403110
  4030b1:	das    
  4030b2:	jbe    0x403133
  4030b4:	dec    esp
  4030b5:	in     al,0x88
  4030b7:	repnz call 0x13ae:0x313bfee
  4030bf:	fs jecxz 0x403120
  4030c2:	inc    DWORD PTR [esi+0x10916aff]
  4030c8:	jo     0x40304b
  4030ca:	daa    
  4030cb:	mov    ah,0x6
  4030cd:	ja     0x4030ef
  4030cf:	cdq    
  4030d0:	jmp    FWORD PTR [eax+0x4aaa7d9f]
  4030d6:	or     esi,DWORD PTR [ebp-0x2b54407c]
  4030dc:	pop    esp
  4030dd:	cmp    ah,BYTE PTR [ecx-0x26]
  4030e0:	idiv   DWORD PTR [eax]
  4030e2:	push   edi
  4030e3:	test   bh,ah
  4030e5:	xlat   BYTE PTR ds:[ebx]
  4030e6:	aam    0xe8
  4030e8:	pop    ebp
  4030e9:	or     al,0xa5
  4030eb:	jmp    0xd784b818
  4030f0:	(bad)
  4030f3:	sbb    eax,0x5e25ba5e
  4030f8:	(bad)  
  4030f9:	jne    0x4030bb
  4030fb:	and    BYTE PTR ds:0x7fc943a5,dl
  403101:	mov    ebx,0x4ca1b7e6
  403106:	test   ecx,0xb141c01d
  40310c:	retf   
  40310d:	imul   esi,edx,0x8c2ab46c
  403113:	test   eax,0x9bad066e
  403118:	cli    
  403119:	mov    dl,0x5c
  40311b:	jl     0x4030a7
  40311d:	add    BYTE PTR [ebp-0x69],0xce
  403121:	shl    DWORD PTR [ecx],cl
  403123:	ja     0x403116
  403125:	je     0x4030d0
  403127:	xchg   edx,eax
  403128:	das    
  403129:	(bad)  
  40312a:	jl     0x403169
  40312c:	mov    ch,0xc5
  40312e:	ror    BYTE PTR [esi+0x65],cl
  403131:	(bad)  
  403133:	fcomp  QWORD PTR [ecx+0x59ec5443]
  403139:	push   cs
  40313a:	sub    dl,BYTE PTR [ecx-0x4d2a9ef9]
  403140:	push   ebx
  403141:	mov    esp,0xc4d08974
  403146:	iret   
  403147:	ror    BYTE PTR [eax+0x27],1
  40314a:	mov    esp,0xc214e64c
  40314f:	inc    ebp
  403150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403151:	js     0x403144
  403153:	cmp    bh,BYTE PTR [esi-0x5d7d89de]
  403159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40315a:	push   ds
  40315b:	rcl    BYTE PTR [ebp+esi*1+0x5c],0xbf
  403160:	cdq    
  403161:	jo     0x403141
  403163:	pop    edx
  403164:	add    eax,0x14f9e24b
  403169:	pop    ebp
  40316a:	jg     0x4030fc
  40316c:	add    edi,ecx
  40316e:	fisub  WORD PTR [ecx+edx*2-0x75ecb1ff]
  403175:	mov    ebx,0xf45b7bca
  40317a:	lods   al,BYTE PTR gs:[esi]
  40317c:	je     0x403168
  40317e:	pop    ds
  40317f:	js     0x40312b
  403181:	adc    al,0x37
  403183:	and    edi,edi
  403185:	iret   
  403186:	out    dx,eax
  403187:	mov    ss,WORD PTR [esi]
  403189:	xor    eax,0x8dcf8231
  40318e:	jle    0x40315c
  403190:	jmp    0x403114
  403192:	inc    esp
  403193:	retf   0x7072
  403196:	dec    esi
  403197:	and    al,0x4d
  403199:	xor    BYTE PTR [edi-0x57cd68fc],0x26
  4031a0:	in     eax,dx
  4031a1:	dec    ecx
  4031a2:	nop
  4031a3:	cdq    
  4031a4:	je     0x403164
  4031a6:	call   0xeb6c:0xf9ab3dd0
  4031ad:	jae    0x40313d
  4031af:	mov    eax,ds:0x478730b2
  4031b4:	daa    
  4031b5:	ins    BYTE PTR es:[edi],dx
  4031b6:	sti    
  4031b7:	xchg   ebx,eax
  4031b8:	sar    DWORD PTR [edi],cl
  4031ba:	xor    ah,cl
  4031bc:	pop    esp
  4031bd:	iret   
  4031be:	es dec edx
  4031c0:	fwait
  4031c1:	js     0x403181
  4031c3:	stc    
  4031c4:	xlat   BYTE PTR ds:[ebx]
  4031c5:	cmp    bh,BYTE PTR [ebp+0x2a855493]
  4031cb:	rcl    edx,cl
  4031cd:	xchg   esp,ecx
  4031cf:	push   esp
  4031d0:	dec    edx
  4031d1:	xor    al,0x5c
  4031d3:	cmp    DWORD PTR [edx],ebx
  4031d5:	out    dx,al
  4031d6:	or     ah,dl
  4031d8:	dec    ecx
  4031d9:	loop   0x403214
  4031db:	repz mov al,0xb6
  4031de:	(bad)  
  4031df:	mov    esi,0x52d040ed
  4031e4:	shl    ch,cl
  4031e6:	sti    
  4031e7:	mov    cl,0x52
  4031e9:	cmp    edi,eax
  4031eb:	cdq    
  4031ec:	xor    al,0x9b
  4031ee:	test   al,0xa8
  4031f0:	into   
  4031f1:	lahf   
  4031f2:	mov    dh,BYTE PTR [ebp+eiz*1-0x4d0089d1]
  4031f9:	idiv   DWORD PTR [edx+0x5bf9f6ad]
  4031ff:	inc    esi
  403200:	or     esi,DWORD PTR [ebp+edx*4+0xf8c7042]
  403207:	inc    edx
  403208:	cmp    bh,ah
  40320a:	lock ja 0x4031e7
  40320d:	pop    esp
  40320e:	and    BYTE PTR [esi+0x4a74bcaf],dh
  403214:	ret    
  403215:	popa   
  403216:	arpl   WORD PTR [eax-0x59],sp
  403219:	das    
  40321a:	retf   0x6811
  40321d:	inc    ebx
  40321e:	sub    edi,DWORD PTR [ebp-0x4b]
  403221:	popf   
  403222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403223:	dec    ecx
  403224:	sub    eax,0x36b5d38f
  403229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322a:	enter  0xa5fc,0xbe
  40322e:	stc    
  40322f:	push   es
  403230:	ret    
  403231:	jl     0x4032a9
  403233:	daa    
  403234:	inc    edx
  403235:	xor    eax,0x149ad55e
  40323a:	repz jmp 0x40324d
  40323d:	fidiv  WORD PTR [eax]
  40323f:	mov    al,0xc6
  403241:	fidivr WORD PTR [ebx]
  403243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403244:	retf   0x18b3
  403247:	pop    ss
  403248:	add    eax,DWORD PTR [ecx+0x6c1a23ea]
  40324e:	popa   
  40324f:	push   0xc475315f
  403254:	xor    al,0x6a
  403256:	pop    es
  403257:	jb     0x403231
  403259:	push   eax
  40325a:	push   edx
  40325b:	sub    ch,BYTE PTR [ebx]
  40325d:	xchg   ebx,eax
  40325e:	cs jnp 0x40323a
  403261:	xlat   BYTE PTR ds:[ebx]
  403262:	jl     0x4032b5
  403264:	sbb    esp,DWORD PTR [eax+0x7adbc5a5]
  40326a:	fpatan 
  40326c:	push   eax
  40326d:	adc    al,0x51
  40326f:	push   ecx
  403270:	sub    al,0xa9
  403272:	xchg   esp,eax
  403273:	pop    edx
  403274:	ss inc ecx
  403276:	xchg   esp,eax
  403277:	call   0x7b94:0x7a20bc8d
  40327e:	pop    eax
  40327f:	mov    edx,0xd331cae
  403284:	repnz in al,dx
  403286:	and    esi,edx
  403288:	dec    ecx
  403289:	pop    es
  40328a:	sbb    ah,al
  40328c:	or     ecx,eax
  40328e:	xchg   esi,eax
  40328f:	and    eax,0x4a7151ac
  403294:	mov    eax,0xd04b037d
  403299:	imul   ebp,DWORD PTR [ebx+0x2283d221],0xfffffff3
  4032a0:	sbb    dh,BYTE PTR [edi+eax*2+0x62]
  4032a4:	pop    esi
  4032a5:	out    0xa,al
  4032a7:	and    eax,0xe6348a9f
  4032ac:	sbb    al,0xda
  4032ae:	inc    ecx
  4032af:	fldz   
  4032b1:	jp     0x40324a
  4032b3:	mov    ds:0xdb540676,eax
  4032b8:	adc    al,0x43
  4032ba:	xor    eax,0x2f970ae6
  4032bf:	push   edi
  4032c0:	das    
  4032c1:	xor    al,0xd1
  4032c3:	mov    bh,0x9
  4032c5:	imul   dl
  4032c7:	xor    esi,edi
  4032c9:	sbb    BYTE PTR [ebp+0x4b9c316b],0xc1
  4032d0:	sbb    eax,0x7c07bf3e
  4032d5:	jmp    0x40329b
  4032d7:	mov    ?,WORD PTR [eax+0x2]
  4032da:	mov    ?,WORD PTR [edx+0x2c]
  4032dd:	add    eax,0x95a281ca
  4032e2:	imul   esi,DWORD PTR [edx],0x74
  4032e5:	ds popa 
  4032e7:	jecxz  0x40334c
  4032e9:	mov    DWORD PTR [eax],ebp
  4032eb:	xchg   dh,bh
  4032ed:	mov    eax,0xbc8c9fab
  4032f2:	ins    BYTE PTR es:[edi],dx
  4032f3:	jae    0x40331b
  4032f5:	daa    
  4032f6:	sbb    ch,BYTE PTR [ebp-0x4433ec6d]
  4032fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032fd:	int3   
  4032fe:	xchg   BYTE PTR [edi+ebp*2-0x47],ah
  403302:	scas   eax,DWORD PTR es:[edi]
  403303:	test   eax,0x8d0feb2a
  403308:	cmc    
  403309:	popf   
  40330a:	jle    0x4032b6
  40330c:	inc    ecx
  40330d:	ins    DWORD PTR es:[edi],dx
  40330e:	mov    dl,0xa3
  403310:	fild   QWORD PTR [ebp-0x7a743dde]
  403316:	mov    cl,0x69
  403318:	push   esi
  403319:	cmp    al,0xef
  40331b:	inc    eax
  40331c:	push   esi
  40331d:	mov    ch,0xc7
  40331f:	sbb    DWORD PTR [edi-0x2a],esi
  403322:	adc    al,BYTE PTR [ecx-0x13]
  403325:	call   0x422:0xe3cdd538
  40332c:	and    BYTE PTR [eax+0x5c],bl
  40332f:	mov    ebp,0x636d0431
  403334:	jl     0x40338e
  403336:	mov    dh,0xf3
  403338:	fdiv   DWORD PTR [ecx-0x1d4701f6]
  40333e:	push   ds
  40333f:	ins    DWORD PTR es:[edi],dx
  403340:	in     al,0xd7
  403342:	jns    0x403352
  403344:	icebp  
  403345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403346:	aaa    
  403347:	adc    esi,DWORD PTR [ebx-0x6e54eaed]
  40334d:	xlat   BYTE PTR ds:[ebx]
  40334e:	mov    esi,0xa8eb54a6
  403353:	xchg   esi,eax
  403354:	leave  
  403355:	xchg   ebx,eax
  403356:	sub    DWORD PTR [ecx-0x3e21d80b],0x4da4b823
  403360:	ret    0xcec3
  403363:	jo     0x4033bb
  403365:	fst    DWORD PTR [edx-0xbb89ef9]
  40336b:	fcomip st,st(6)
  40336d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336e:	xchg   ebp,eax
  40336f:	add    ecx,DWORD PTR [edi]
  403371:	inc    ecx
  403372:	mov    ecx,0x5e5ab515
  403377:	dec    esp
  403378:	stc    
  403379:	stc    
  40337a:	inc    eax
  40337b:	lods   eax,DWORD PTR ds:[esi]
  40337c:	inc    esi
  40337d:	mov    cs,WORD PTR ds:0x5ec503e5
  403383:	mov    esi,edi
  403385:	scas   al,BYTE PTR es:[edi]
  403386:	push   ebx
  403387:	mov    dh,0xba
  403389:	pop    ebx
  40338a:	bnd jne 0x40331b
  40338d:	jo     0x40336c
  40338f:	or     DWORD PTR [ecx+edi*1-0x257f8474],0x96689e72
  40339a:	fbld   TBYTE PTR [edx+eiz*1+0x52908fed]
  4033a1:	pop    esp
  4033a2:	(bad)  
  4033a3:	inc    esp
  4033a4:	add    BYTE PTR [ecx+0x7e],ah
  4033a7:	repz push cs
  4033a9:	pop    edi
  4033aa:	jbe    0x40341a
  4033ac:	stos   BYTE PTR es:[edi],al
  4033ad:	call   0x283f:0x29c5400a
  4033b4:	lahf   
  4033b5:	dec    edx
  4033b6:	mov    dl,0xea
  4033b8:	inc    esp
  4033b9:	inc    ecx
  4033ba:	int    0x3d
  4033bc:	push   ds
  4033bd:	xchg   BYTE PTR [eax-0x6e],ah
  4033c0:	or     ebx,esp
  4033c2:	sub    BYTE PTR [ebx+eiz*2+0xce492c0],bh
  4033c9:	push   esi
  4033ca:	mov    ah,bl
  4033cc:	jmp    0xd2137380
  4033d1:	xchg   esi,eax
  4033d2:	ds cld 
  4033d4:	data16 mov bh,0x0
  4033d7:	sbb    eax,0x63929fde
  4033dc:	sbb    ebp,DWORD PTR [edx]
  4033de:	push   0x74
  4033e0:	ja     0x403368
  4033e2:	pop    eax
  4033e3:	in     al,0x0
  4033e5:	(bad)  
  4033e6:	in     al,dx
  4033e7:	cmp    esp,DWORD PTR [ebp+0x35]
  4033ea:	push   ebx
  4033eb:	leave  
  4033ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ed:	adc    esp,DWORD PTR [esi-0x4b]
  4033f0:	push   esp
  4033f1:	inc    esp
  4033f2:	retf   
  4033f3:	loopne 0x40337d
  4033f5:	lock dec edx
  4033f7:	jle    0x4033b6
  4033f9:	push   ebx
  4033fa:	add    ebx,DWORD PTR [esi+0x111e339e]
  403400:	gs or  al,0xd4
  403403:	fldcw  WORD PTR [edx+edi*8+0x6e]
  403407:	jle    0x403425
  403409:	add    eax,0xcfcd8d63
  40340e:	mov    al,ds:0xe313dc27
  403413:	mov    al,ds:0xa84c4d92
  403418:	mov    bh,0xaa
  40341a:	stos   DWORD PTR es:[edi],eax
  40341b:	sbb    BYTE PTR [edx],dl
  40341d:	ja     0x4033e8
  40341f:	adc    DWORD PTR [esi+0x74],edx
  403422:	lods   al,BYTE PTR ds:[esi]
  403423:	xchg   ebx,eax
  403424:	push   esp
  403425:	push   ds
  403426:	test   bl,0xb3
  403429:	sub    BYTE PTR [edi+0x14c31345],cl
  40342f:	push   ebx
  403430:	mov    gs,WORD PTR [ebx+0x27]
  403433:	push   edx
  403434:	add    eax,0xf4041803
  403439:	cli    
  40343a:	les    ebx,FWORD PTR [ebx+0x4c56be09]
  403440:	cmp    eax,ebp
  403442:	aad    0x8f
  403444:	popf   
  403445:	fcom   QWORD PTR [edx+eax*1]
  403448:	lods   eax,DWORD PTR ds:[esi]
  403449:	adc    eax,0xad18af4f
  40344e:	rcr    esi,cl
  403450:	(bad)  
  403451:	in     eax,0xd
  403453:	add    DWORD PTR [ebx-0x6f],0xffffffd9
  403457:	repz pop ds
  403459:	fstp   QWORD PTR [edx-0x37d28dcc]
  40345f:	jmp    0xf055:0x859d396b
  403466:	or     cl,ah
  403468:	test   DWORD PTR [eiz*1+0xfb3336a],ebp
  40346f:	push   ecx
  403470:	push   cs
  403471:	mov    al,0xe3
  403473:	lods   eax,DWORD PTR ds:[esi]
  403474:	dec    esi
  403475:	je     0x4034d6
  403477:	push   edx
  403478:	xchg   esp,eax
  403479:	dec    eax
  40347a:	push   0xffffffb1
  40347c:	push   edx
  40347d:	sar    BYTE PTR [edx],cl
  40347f:	into   
  403480:	push   0xffffffd4
  403482:	aam    0x79
  403484:	jb     0x403494
  403486:	cmp    BYTE PTR [edi-0x381c629a],dh
  40348c:	push   edi
  40348d:	adc    al,0xba
  40348f:	sub    eax,0x8c43feca
  403494:	leave  
  403495:	out    0xe5,al
  403497:	sbb    BYTE PTR [eax-0xc],dl
  40349a:	jbe    0x403423
  40349c:	cmp    eax,0xd8156c8b
  4034a1:	aad    0x72
  4034a3:	mov    bl,BYTE PTR [eax-0x7a70ca04]
  4034a9:	mov    al,0x36
  4034ab:	cmp    ch,bl
  4034ad:	xor    BYTE PTR [esi-0x1c],0xf2
  4034b1:	mov    BYTE PTR [ecx+ebx*1-0x1b5c79c9],cl
  4034b8:	sbb    eax,0x7c655922
  4034bd:	pop    ss
  4034be:	dec    edi
  4034bf:	dec    ebp
  4034c0:	sub    DWORD PTR [eax*1-0x475fe9e2],0x56
  4034c8:	or     BYTE PTR [edi+0x3020bcda],bh
  4034ce:	adc    eax,0x33548a55
  4034d3:	adc    eax,0x63319897
  4034d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d9:	adc    al,0x49
  4034db:	out    dx,eax
  4034dc:	sub    ah,BYTE PTR [ecx]
  4034de:	push   ds
  4034df:	jmp    0x40352c
  4034e1:	inc    DWORD PTR [ebx]
  4034e3:	cmp    DWORD PTR [edx],ecx
  4034e5:	repz hlt 
  4034e7:	inc    ecx
  4034e8:	repz pop ecx
  4034ea:	les    eax,FWORD PTR [eax]
  4034ec:	bnd jo 0x40347b
  4034ef:	xchg   DWORD PTR [edi+0x59657d99],eax
  4034f5:	mov    ch,0x22
  4034f7:	sar    DWORD PTR [edx],1
  4034f9:	dec    ecx
  4034fa:	ds pop eax
  4034fc:	aam    0x80
  4034fe:	xor    eax,0x34bd7493
  403503:	cdq    
  403504:	inc    ecx
  403505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403506:	imul   esi,DWORD PTR [edx-0x2e9c27d1],0x3e2732ee
  403510:	mov    es:0x31e6e067,eax
  403516:	(bad)  
  403517:	push   edi
  403518:	or     ah,BYTE PTR [edx]
  40351a:	neg    DWORD PTR [ebp-0x36292692]
  403520:	repnz sbb ecx,edi
  403523:	imul   eax,DWORD PTR [ecx-0x61],0x47b78fe1
  40352a:	inc    ecx
  40352b:	jmp    0xff13:0x111765e7
  403532:	clc    
  403533:	adc    dh,cl
  403535:	inc    esp
  403536:	jb     0x40355a
  403538:	adc    DWORD PTR [ecx],ebp
  40353a:	mov    ecx,0x309fe2e3
  40353f:	mov    BYTE PTR [edi+0x5a],ah
  403542:	mov    al,0xde
  403544:	and    dl,BYTE PTR [ecx]
  403546:	(bad)  
  403547:	sahf   
  403548:	jno    0x4035c6
  40354a:	adc    al,0xcf
  40354c:	shr    BYTE PTR [ebp+eax*2+0x61a6725b],0xcd
  403554:	ins    DWORD PTR es:[edi],dx
  403555:	ret    
  403556:	outs   dx,DWORD PTR ds:[esi]
  403557:	jle    0x4034fc
  403559:	jmp    0x47ed:0xc6afef30
  403560:	cld    
  403561:	imul   ebp,DWORD PTR [edx+0x51],0x47
  403565:	fucomp st(3)
  403567:	push   cs
  403568:	cmp    DWORD PTR [ebx],0x2a
  40356b:	aas    
  40356c:	jg     0x4035e4
  40356e:	nop
  40356f:	dec    esp
  403570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403571:	fwait
  403572:	das    
  403573:	rol    BYTE PTR [edx-0x7c],1
  403576:	in     eax,0x79
  403578:	frstor [eax+eiz*8+0x743f9bc9]
  40357f:	xchg   ebp,eax
  403580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403581:	cld    
  403582:	add    DWORD PTR [edx+0x22e2df0d],ecx
  403588:	call   0x9b8261da
  40358d:	fldcw  WORD PTR [ebp-0x521390d7]
  403593:	(bad)  [edx+0x17]
  403596:	ins    DWORD PTR es:[edi],dx
  403597:	loop   0x403577
  403599:	in     al,0x5a
  40359b:	or     al,0x80
  40359d:	(bad)  
  40359e:	mov    al,ds:0xa874a94f
  4035a3:	out    0xc,eax
  4035a5:	stos   BYTE PTR es:[edi],al
  4035a6:	data16 (bad) 
  4035a8:	out    0x4a,eax
  4035aa:	ja     0x4035de
  4035ac:	fisttp WORD PTR [esi+0x3c]
  4035af:	fistp  WORD PTR [esi]
  4035b1:	xchg   ecx,eax
  4035b2:	mov    esi,0xfcb68860
  4035b7:	add    DWORD PTR [eax-0x28],eax
  4035ba:	push   edx
  4035bb:	ds pop esi
  4035bd:	xchg   BYTE PTR [ebp+0x5],ch
  4035c0:	sbb    eax,0x14cbc125
  4035c5:	cmp    bl,BYTE PTR [eax-0x41]
  4035c8:	push   0x13
  4035ca:	pop    eax
  4035cb:	scas   ax,WORD PTR es:[edi]
  4035cd:	loopne 0x403586
  4035cf:	jle    0x4035b0
  4035d1:	push   ss
  4035d2:	or     dl,BYTE PTR [esi+eiz*8]
  4035d5:	rcr    DWORD PTR [edi-0x17c69ad3],0x2b
  4035dc:	ror    DWORD PTR [ebp+0x20],1
  4035df:	rcl    DWORD PTR [ecx],0xdb
  4035e2:	push   ebx
  4035e3:	int3   
  4035e4:	das    
  4035e5:	in     al,0x92
  4035e7:	pop    ss
  4035e8:	pop    ebx
  4035e9:	cmp    bh,BYTE PTR [ebx]
  4035eb:	out    dx,eax
  4035ec:	inc    esi
  4035ed:	je     0x40362a
  4035ef:	leave  
  4035f0:	leave  
  4035f1:	xchg   edi,eax
  4035f2:	sahf   
  4035f3:	jae    0x4035fc
  4035f5:	xchg   esi,eax
  4035f6:	mov    ebx,edx
  4035f8:	jl     0x4035e4
  4035fa:	add    eax,0x8549cc37
  4035ff:	pop    esi
  403600:	outs   dx,DWORD PTR ds:[esi]
  403601:	jo     0x403604
  403603:	mov    dh,BYTE PTR [edx-0x2e]
  403606:	fstp   TBYTE PTR [edi+ebp*8-0x2c]
  40360a:	and    al,0xe5
  40360c:	cmp    eax,edx
  40360e:	arpl   ax,bp
  403610:	out    0x79,al
  403612:	add    eax,0x27275d01
  403617:	push   ss
  403618:	inc    ebp
  403619:	xchg   ecx,eax
  40361a:	leave  
  40361b:	mov    esp,0xdb28344
  403620:	out    dx,al
  403621:	test   DWORD PTR [esi-0xf],0x424547b6
  403628:	or     bl,BYTE PTR [ecx]
  40362a:	hlt    
  40362b:	jl     0x403666
  40362d:	popa   
  40362e:	and    DWORD PTR [ebp-0x39464be],0x482f8494
  403638:	adc    eax,0xc93484de
  40363d:	(bad)  
  40363e:	sbb    edx,DWORD PTR [edi]
  403640:	scas   al,BYTE PTR es:[edi]
  403641:	(bad)  
  403642:	rol    ah,cl
  403644:	outs   dx,BYTE PTR ds:[esi]
  403645:	mov    ah,0x2b
  403647:	dec    esp
  403648:	fmul   DWORD PTR [esi+0x57]
  40364b:	inc    esi
  40364c:	or     BYTE PTR [eax+ebp*8+0x4a],ah
  403650:	dec    edx
  403651:	jae    0x40362b
  403653:	mov    bl,0xab
  403655:	push   ds
  403656:	mov    al,0x4a
  403658:	dec    edx
  403659:	js     0x40361b
  40365b:	or     al,0xd2
  40365d:	jp     0x4036cc
  40365f:	push   cs
  403660:	mov    ch,0x78
  403662:	imul   eax,esi,0x41
  403665:	xchg   ebx,eax
  403666:	xor    DWORD PTR [ecx-0x2d79bf8e],edx
  40366c:	sahf   
  40366d:	js     0x40368b
  40366f:	js     0x4036b3
  403671:	rol    BYTE PTR [ecx-0x64],0xcb
  403675:	int3   
  403676:	out    0x55,eax
  403678:	xchg   edx,eax
  403679:	mov    cl,0xa3
  40367b:	mov    WORD PTR [edi-0x54d2af8f],ss
  403681:	fsubrp st(0),st
  403683:	pop    edx
  403684:	and    ch,bl
  403686:	xchg   edi,eax
  403687:	ds jle 0x403686
  40368a:	ficomp WORD PTR [ebx]
  40368c:	xchg   DWORD PTR [ecx],ecx
  40368e:	push   ebp
  40368f:	dec    edx
  403690:	adc    eax,0x8c8eede6
  403695:	push   ebp
  403696:	enter  0x94a3,0x6d
  40369a:	and    ebp,DWORD PTR [ebx]
  40369c:	inc    esp
  40369d:	rcr    BYTE PTR [ebx-0x12d59ee5],1
  4036a3:	xor    ecx,DWORD PTR [ebx+0x63]
  4036a6:	inc    ebx
  4036a7:	xor    al,0x14
  4036a9:	push   0x63202dd3
  4036ae:	and    BYTE PTR [ecx],0x21
  4036b1:	lea    ebp,[eax-0x2362acb8]
  4036b7:	cdq    
  4036b8:	stos   BYTE PTR es:[edi],al
  4036b9:	pop    ebp
  4036ba:	mov    esi,ecx
  4036bc:	push   ebp
  4036bd:	push   edi
  4036be:	pop    ebx
  4036bf:	jmp    0xf3231bb5
  4036c4:	lds    ecx,FWORD PTR [ebp+0x75]
  4036c7:	xor    eax,0x1a43c55e
  4036cc:	pushf  
  4036cd:	mov    bl,BYTE PTR [edx-0x11]
  4036d0:	in     al,dx
  4036d1:	leave  
  4036d2:	jecxz  0x4036bc
  4036d4:	mov    eax,0x372c6923
  4036d9:	cmp    DWORD PTR [edx-0x58],edi
  4036dc:	cmp    eax,0x975d7844
  4036e1:	ss cli 
  4036e3:	dec    ecx
  4036e4:	mov    ebp,0xf7019317
  4036e9:	or     eax,DWORD PTR [ebp+ecx*2-0x4b27131d]
  4036f0:	cwde   
  4036f1:	mov    bl,0x1f
  4036f3:	mov    ds:0x85b2440f,eax
  4036f8:	push   ds
  4036f9:	ja     0x4036f0
  4036fb:	(bad)  
  4036fc:	leave  
  4036fd:	mov    bl,0x87
  4036ff:	jmp    0xd7fff1c2
  403704:	push   ecx
  403705:	sti    
  403706:	stc    
  403707:	or     al,BYTE PTR [edi]
  403709:	inc    ecx
  40370a:	cmp    eax,0x8a185497
  40370f:	add    al,0xf0
  403711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403712:	xchg   BYTE PTR [esi+0x713fe569],dh
  403718:	sbb    DWORD PTR [edx+ebx*1-0x6d284af6],eax
  40371f:	fidiv  WORD PTR [eax-0x14]
  403722:	inc    ebp
  403723:	iret   
  403724:	or     BYTE PTR [esi-0x9],bh
  403727:	test   BYTE PTR [ebp+ebx*8+0x7ddc7033],al
  40372e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403730:	add    ah,ch
  403732:	ret    
  403733:	jnp    0x4037ac
  403735:	retf   
  403736:	mov    edi,0x80d3e5c5
  40373b:	mov    eax,0x17a9ce82
  403740:	(bad)  
  403741:	ins    DWORD PTR es:[edi],dx
  403742:	xor    eax,0x537be1c8
  403747:	pop    ecx
  403748:	xchg   BYTE PTR [ecx-0x1c728669],ch
  40374e:	shr    esi,cl
  403750:	fcmovb st,st(4)
  403752:	pop    ds
  403753:	or     al,0xdf
  403755:	lahf   
  403756:	pop    ss
  403757:	stos   DWORD PTR es:[edi],eax
  403758:	cli    
  403759:	xor    al,0xe9
  40375b:	scas   eax,DWORD PTR es:[edi]
  40375c:	imul   eax,DWORD PTR [ebx+0x1a],0x76
  403760:	imul   ecx,DWORD PTR [esi],0x46
  403763:	sti    
  403764:	sub    BYTE PTR [esi-0x28],0x89
  403768:	popa   
  403769:	inc    esi
  40376a:	jp     0x4037ba
  40376c:	mov    esi,0x1700d9e7
  403771:	jle    0x4037a8
  403773:	jno    0x4037ba
  403775:	jp     0x403737
  403777:	jns    0x40374f
  403779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40377a:	scas   eax,DWORD PTR es:[edi]
  40377b:	cmp    al,0x4c
  40377d:	addr16 addr16 adc esp,0xffffffa6
  403782:	mov    eax,ds:0x10337642
  403787:	sbb    DWORD PTR [ecx-0xe],ebp
  40378a:	int    0x65
  40378c:	sar    DWORD PTR [esi-0x6a],1
  40378f:	repnz (bad) 
  403791:	iret   
  403792:	dec    edi
  403793:	xor    esp,DWORD PTR [ebp-0x646b248e]
  403799:	sub    eax,0x86767047
  40379e:	stos   BYTE PTR es:[edi],al
  40379f:	pop    es
  4037a0:	cli    
  4037a1:	inc    ebx
  4037a2:	push   ebx
  4037a3:	xrelease xchg BYTE PTR [ebx-0x41],dl
  4037a7:	mov    dh,BYTE PTR [esi]
  4037a9:	clc    
  4037aa:	mov    esp,0x417452ac
  4037af:	xor    BYTE PTR [edi-0x5674a66a],bh
  4037b5:	imul   ecx,DWORD PTR ds:0x775be7fa,0x6ad06f54
  4037bf:	stc    
  4037c0:	bound  esp,QWORD PTR fs:[ebx-0x3ba5cb41]
  4037c7:	push   ebx
  4037c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037c9:	pop    eax
  4037ca:	jge    0x403811
  4037cc:	ja     0x4037c8
  4037ce:	xchg   BYTE PTR [edi-0x6b8bfd17],dl
  4037d4:	test   DWORD PTR [ebx-0x5b],ebp
  4037d7:	jmp    0xb4ea9823
  4037dc:	lea    esi,[edx-0x7c]
  4037df:	mov    DWORD PTR [ebp*1-0xeee4f23],ecx
  4037e6:	in     al,0xf9
  4037e8:	test   DWORD PTR ds:0xe0bb7ff0,0x24b3db0d
  4037f2:	in     al,dx
  4037f3:	dec    ebx
  4037f4:	test   DWORD PTR [eax],ebx
  4037f6:	or     al,BYTE PTR [edx]
  4037f8:	and    dl,bl
  4037fa:	jmp    0x403857
  4037fc:	iret   
  4037fd:	scas   al,BYTE PTR es:[edi]
  4037fe:	jmp    0x1a02:0x20689f52
  403805:	jle    0x403809
  403807:	add    DWORD PTR [eax-0x781eb82],edi
  40380d:	xor    eax,0x6e26e8bb
  403812:	mov    eax,ds:0x5ab4d32
  403817:	test   eax,0x2603b292
  40381c:	rcr    BYTE PTR [edi+edi*4-0x30],1
  403820:	aaa    
  403821:	test   eax,0x5308641d
  403826:	out    0x9,eax
  403828:	or     dl,BYTE PTR [eax+eax*2-0x30fd787a]
  40382f:	adc    al,0x73
  403831:	jmp    0xcd09:0xdc679938
  403838:	aad    0x7d
  40383a:	and    eax,0xb6848f1a
  40383f:	sbb    al,0x8a
  403841:	scas   eax,DWORD PTR es:[edi]
  403842:	and    edi,DWORD PTR [ebp+0x10]
  403845:	jmpw   0xdb03
  403849:	test   al,0x3a
  40384b:	daa    
  40384c:	adc    DWORD PTR [ebx+0x7],edx
  40384f:	add    ch,al
  403851:	jl     0x403850
  403853:	pop    ds
  403854:	pop    esi
  403855:	pop    esp
  403856:	cmp    BYTE PTR [eax-0x7fcb977],0xe1
  40385d:	add    eax,0x90a60cba
  403862:	dec    edi
  403863:	xor    DWORD PTR [eax-0x2cf2555f],edi
  403869:	mov    ch,0xc5
  40386b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386d:	pop    ds
  40386e:	stos   BYTE PTR es:[edi],al
  40386f:	pop    ebp
  403870:	data16 data16 add dl,ah
  403874:	fld    DWORD PTR [esi]
  403876:	div    DWORD PTR [edx]
  403878:	push   ebx
  403879:	mov    ch,0xfa
  40387b:	xchg   esp,eax
  40387c:	fcomp  QWORD PTR [edx+eiz*2+0x5ad77675]
  403883:	js     0x403830
  403885:	jecxz  0x40385b
  403887:	mov    dl,0x61
  403889:	ficom  WORD PTR [esi-0x14]
  40388c:	pop    edx
  40388d:	(bad)  
  40388e:	in     eax,dx
  40388f:	cmp    DWORD PTR [esi+0x59],ebx
  403892:	pop    edi
  403893:	pop    eax
  403894:	stc    
  403895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403896:	out    dx,al
  403897:	in     eax,dx
  403898:	mov    dh,0x6
  40389a:	imul   edx,DWORD PTR [ebp+0xd41ca1b],0x48
  4038a1:	dec    DWORD PTR [ebx+0x541873bc]
  4038a7:	cmp    eax,0x7c93c631
  4038ac:	shl    BYTE PTR [ebx],1
  4038ae:	xlat   BYTE PTR ds:[ebx]
  4038af:	cmp    ch,al
  4038b1:	out    0x2f,al
  4038b3:	xchg   DWORD PTR [edi],esp
  4038b5:	scas   eax,DWORD PTR es:[edi]
  4038b6:	lahf   
  4038b7:	inc    BYTE PTR [ebp+0x37]
  4038ba:	mov    ebp,0xdf4a3f2a
  4038bf:	xchg   ebx,eax
  4038c0:	sbb    BYTE PTR [eax+0x45db364b],0x32
  4038c7:	fs cmc 
  4038c9:	pop    ebx
  4038ca:	popf   
  4038cb:	imul   DWORD PTR [edx-0x78]
  4038ce:	sbb    DWORD PTR [ebx+edi*2+0x5b],eax
  4038d2:	popa   
  4038d3:	xor    al,0x5c
  4038d5:	scas   eax,DWORD PTR es:[edi]
  4038d6:	xchg   DWORD PTR [eax],edi
  4038d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d9:	mov    dl,BYTE PTR [eax]
  4038db:	mov    ch,0x29
  4038dd:	lock mov BYTE PTR [edx],ch
  4038e0:	push   0x9570ae20
  4038e5:	xor    DWORD PTR [edx+eax*1-0x12],ecx
  4038e9:	push   cs
  4038ea:	lods   al,BYTE PTR ds:[esi]
  4038eb:	call   0xec77217f
  4038f0:	push   esi
  4038f1:	mov    al,ds:0x7763a20c
  4038f6:	ja     0x40393a
  4038f8:	pop    ecx
  4038f9:	aam    0x12
  4038fb:	sbb    eax,0xa2156513
  403900:	xor    DWORD PTR [ecx+0x15b7b74b],edx
  403906:	or     dh,dh
  403908:	sub    DWORD PTR [ebp+edi*1+0x4c5374ea],eax
  40390f:	push   ss
  403910:	sub    ah,BYTE PTR [edi+0x8]
  403913:	repz es icebp 
  403916:	retf   
  403917:	mov    cs,WORD PTR [ecx+edx*8+0x19994219]
  40391e:	jle    0x40395d
  403920:	stc    
  403921:	pop    ebx
  403922:	pop    ss
  403923:	add    cl,dl
  403925:	shl    DWORD PTR [ecx],cl
  403927:	stc    
  403928:	mov    ss,edi
  40392a:	cwde   
  40392b:	mov    edi,DWORD PTR [ebx+0x3]
  40392e:	inc    ecx
  40392f:	inc    ebp
  403930:	test   BYTE PTR [esi],bl
  403932:	inc    ebx
  403933:	std    
  403934:	jl     0x403995
  403936:	jbe    0x4038c2
  403938:	jl     0x403929
  40393a:	adc    ebx,edx
  40393c:	xor    edx,DWORD PTR [eax-0x67ea2e79]
  403942:	(bad)  
  403943:	jecxz  0x4039af
  403945:	in     eax,dx
  403946:	sub    BYTE PTR [edx-0x22595ffe],bl
  40394c:	outs   dx,DWORD PTR ds:[esi]
  40394d:	sbb    al,0xb3
  40394f:	xchg   ecx,eax
  403950:	mov    ah,0x3f
  403952:	call   0xa3685ba8
  403957:	push   ds
  403958:	icebp  
  403959:	stos   DWORD PTR es:[edi],eax
  40395a:	pop    ebx
  40395b:	and    BYTE PTR ds:0x65a7df3a,bh
  403961:	imul   edi,esp,0x5b2fbae6
  403967:	push   0xf5dfea87
  40396c:	repnz sar BYTE PTR [ecx+0x79],1
  403970:	lahf   
  403971:	fdivr  DWORD PTR [esi-0x43]
  403974:	adc    eax,ebx
  403976:	(bad)
  403979:	mov    al,BYTE PTR [edx-0x5b537cb0]
  40397f:	test   BYTE PTR [ebx+0x20],ch
  403982:	push   0xc3c2a57d
  403987:	xchg   ebx,eax
  403988:	and    eax,0x2d192b48
  40398d:	dec    ebx
  40398e:	xlat   BYTE PTR ds:[ebx]
  40398f:	outs   dx,BYTE PTR ds:[esi]
  403990:	outs   dx,DWORD PTR ds:[esi]
  403991:	jno    0x403943
  403993:	sub    eax,0xbb025a68
  403998:	xor    ebx,DWORD PTR [esi-0x28e9ffd7]
  40399e:	dec    esi
  40399f:	and    ch,dl
  4039a1:	call   0x1597:0xfd181942
  4039a8:	call   0xd3d9:0x24c2dec8
  4039af:	inc    esp
  4039b0:	push   ss
  4039b1:	pop    ebp
  4039b2:	inc    ebp
  4039b3:	cwde   
  4039b4:	leave  
  4039b5:	mov    bh,0x42
  4039b7:	dec    eax
  4039b8:	xchg   edi,eax
  4039b9:	test   DWORD PTR [esi],0x5fd8530d
  4039bf:	loopne 0x4039c5
  4039c1:	mov    dl,0xa1
  4039c3:	jg     0x40395e
  4039c5:	and    ah,ah
  4039c7:	xor    BYTE PTR [eax],bl
  4039c9:	push   ss
  4039ca:	mov    bl,0x2e
  4039cc:	mov    WORD PTR [edx],gs
  4039ce:	mov    edx,0xd52ea628
  4039d3:	in     al,0x14
  4039d5:	inc    edx
  4039d6:	mov    al,BYTE PTR [edx]
  4039d8:	ins    BYTE PTR es:[edi],dx
  4039d9:	call   0x2ffb:0x90b40917
  4039e0:	mov    ds:0x30afe553,al
  4039e5:	mov    dl,0xc1
  4039e7:	xchg   ebx,eax
  4039e8:	mov    cl,0x39
  4039ea:	add    edi,ebx
  4039ec:	xchg   ebx,eax
  4039ed:	loope  0x4039af
  4039ef:	imul   edx,ebp,0xb978aeb8
  4039f5:	add    BYTE PTR [esp+ebp*8],cl
  4039f8:	leave  
  4039f9:	pop    esp
  4039fa:	repz mov eax,0x96ade013
  403a00:	and    eax,0xfa873c9b
  403a05:	xor    eax,0x78d59e13
  403a0a:	push   edx
  403a0b:	or     eax,0xc8eb771e
  403a10:	icebp  
  403a11:	mov    DWORD PTR [edi],ebx
  403a13:	mov    ds:0x1a97c817,al
  403a18:	adc    eax,0xd9bf2e2c
  403a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a1e:	ins    WORD PTR es:[edi],dx
  403a20:	jge    0x4039a5
  403a22:	adc    eax,0xf5a94bf8
  403a27:	cld    
  403a28:	enter  0x7553,0x3e
  403a2c:	enter  0x4094,0xc7
  403a30:	out    dx,eax
  403a31:	mov    ebp,0xa2e09758
  403a36:	cmp    dh,dh
  403a38:	iret   
  403a39:	adc    eax,0xc4876abc
  403a3e:	sahf   
  403a3f:	stos   DWORD PTR es:[edi],eax
  403a40:	mov    dh,0xcb
  403a42:	imul   ebx,DWORD PTR [edi+0x1e29980a],0xcdcc98f1
  403a4c:	leave  
  403a4d:	dec    esi
  403a4e:	cmp    DWORD PTR [ecx+0x67983667],eax
  403a54:	jnp    0x403a94
  403a56:	jno    0x403a20
  403a58:	or     dh,BYTE PTR [ebx+edi*1-0x51]
  403a5c:	inc    DWORD PTR [ecx+0x77e4254f]
  403a62:	or     edi,esi
  403a64:	repz ror DWORD PTR [edx+0x55ea4d99],0xa6
  403a6c:	mov    dl,BYTE PTR [ebx-0x11b90246]
  403a72:	and    ah,BYTE PTR [eax+ecx*8+0x40]
  403a76:	js     0x403a2e
  403a78:	inc    edx
  403a79:	rcr    DWORD PTR [eax+0x76af842b],cl
  403a7f:	jl     0x403a93
  403a81:	pushw  ss
  403a83:	pop    es
  403a84:	push   es
  403a85:	jb     0x403a41
  403a87:	mov    eax,ds:0x47b9ca2c
  403a8c:	imul   ebp,DWORD PTR [ecx],0xffffff8b
  403a8f:	xor    dh,ch
  403a91:	out    0x9f,al
  403a93:	or     bh,BYTE PTR [ebp-0x5f9166a5]
  403a99:	adc    BYTE PTR [eax],cl
  403a9b:	pop    edx
  403a9c:	jae    0x403afe
  403a9e:	(bad)  
  403aa0:	mov    ebx,0x4a9e36b3
  403aa5:	push   ss
  403aa6:	jecxz  0x403aa1
  403aa8:	xchg   ebp,eax
  403aa9:	cdq    
  403aaa:	jne    0x403af1
  403aac:	pop    ebx
  403aad:	mov    edi,0xb2aaa2da
  403ab2:	dec    ebx
  403ab3:	jecxz  0x403b22
  403ab5:	repz sbb DWORD PTR [ecx],ebx
  403ab8:	adc    eax,0xf0642f77
  403abd:	mov    dh,0x7f
  403abf:	lds    esi,FWORD PTR [edi-0x5e06d5b2]
  403ac5:	shl    BYTE PTR [esi],cl
  403ac7:	inc    ecx
  403ac8:	sub    dh,ch
  403aca:	pop    esi
  403acb:	aaa    
  403acc:	test   DWORD PTR [edx],0x3494e07a
  403ad2:	enter  0xd0e5,0x5f
  403ad6:	or     eax,0x20726867
  403adb:	sahf   
  403adc:	cmp    edi,DWORD PTR [eax+0x7d]
  403adf:	sub    BYTE PTR [edi],0x12
  403ae2:	xor    BYTE PTR [edx+0x39],al
  403ae5:	pop    DWORD PTR [esi+0x7057e4d4]
  403aeb:	mov    bl,0xcf
  403aed:	cmp    eax,0x28925db
  403af2:	icebp  
  403af3:	ins    BYTE PTR es:[edi],dx
  403af4:	cmp    edi,DWORD PTR [eax-0x48fa87f8]
  403afa:	xchg   edx,eax
  403afb:	inc    ebp
  403afc:	inc    esp
  403afd:	xchg   bh,al
  403aff:	push   edi
  403b00:	shl    bh,0x6e
  403b03:	mov    esp,0xa7626836
  403b08:	sbb    bl,BYTE PTR [ebp-0x633366ef]
  403b0e:	or     BYTE PTR [eax-0x55],bh
  403b11:	gs out dx,eax
  403b13:	cmc    
  403b14:	pop    ss
  403b15:	dec    eax
  403b16:	test   eax,0x27c153a6
  403b1b:	out    dx,eax
  403b1c:	push   cs
  403b1d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403b1f:	aaa    
  403b20:	lock cmp eax,0x90d848fe
  403b26:	hlt    
  403b27:	stos   DWORD PTR es:[edi],eax
  403b28:	arpl   WORD PTR [edi+ebp*4-0x3b],sp
  403b2c:	pop    ss
  403b2d:	mov    dh,BYTE PTR [edx]
  403b2f:	or     ah,cl
  403b31:	pop    edi
  403b32:	add    esi,ebp
  403b34:	push   ss
  403b35:	inc    edx
  403b36:	push   eax
  403b37:	cmp    DWORD PTR [ebx+0x63c0d63d],0xffffffbd
  403b3e:	mov    dl,0x9e
  403b40:	aaa    
  403b41:	xchg   ecx,eax
  403b42:	inc    esi
  403b43:	popf   
  403b44:	jg     0x403ba3
  403b46:	repnz loop 0x403afc
  403b49:	pop    edi
  403b4a:	je     0x403b14
  403b4c:	dec    esp
  403b4d:	sbb    BYTE PTR [esi+0x3ed9b33d],cl
  403b53:	jge    0x403bc5
  403b55:	cli    
  403b56:	sbb    bh,BYTE PTR [ebp-0x18]
  403b59:	aam    0xa5
  403b5b:	scas   eax,DWORD PTR es:[edi]
  403b5c:	rcl    edi,0xd5
  403b5f:	add    al,0x55
  403b61:	cmp    DWORD PTR [ebx+0x2dae1c1a],0x3ed8c21b
  403b6b:	js     0x403afc
  403b6d:	inc    esi
  403b6e:	clc    
  403b6f:	jmp    0x2acb:0x86310b28
  403b76:	rcl    DWORD PTR [eax+0x38a040bb],1
  403b7c:	aad    0x57
  403b7e:	ror    ch,cl
  403b80:	mov    eax,ds:0xd6458d3a
  403b85:	or     BYTE PTR [edx+edi*4],bh
  403b88:	jns    0x403b1f
  403b8a:	outs   dx,BYTE PTR ds:[esi]
  403b8b:	xchg   ebp,eax
  403b8c:	mov    BYTE PTR [esi+ebx*4-0x2818b7db],bh
  403b93:	retf   0xfc9d
  403b96:	daa    
  403b97:	sbb    eax,0x768a923a
  403b9c:	xchg   BYTE PTR [eax+0x1510c204],cl
  403ba2:	inc    ebp
  403ba3:	cld    
  403ba4:	jbe    0x403c0b
  403ba6:	(bad)  
  403ba7:	push   0x6ae7214
  403bac:	or     ebp,eax
  403bae:	pop    ecx
  403baf:	dec    eax
  403bb0:	xchg   edi,eax
  403bb1:	pop    ebp
  403bb2:	dec    esp
  403bb3:	mov    esi,0x8a218333
  403bb8:	inc    ecx
  403bb9:	outs   dx,DWORD PTR ds:[esi]
  403bba:	xchg   ebp,eax
  403bbb:	push   0xae9035ba
  403bc0:	call   0xa177:0xa5b6cb10
  403bc7:	nop
  403bc8:	test   al,0x3e
  403bca:	mov    ebp,0x9f898f83
  403bcf:	add    BYTE PTR ds:0x43090ef5,bl
  403bd5:	and    al,bl
  403bd7:	sahf   
  403bd8:	adc    al,0x6a
  403bda:	lahf   
  403bdb:	pop    ebp
  403bdc:	push   ebx
  403bdd:	pop    esi
  403bde:	mov    dl,0x88
  403be0:	aaa    
  403be1:	leave  
  403be2:	jne    0x403c4d
  403be4:	sub    ebp,esi
  403be6:	jle    0x403bc5
  403be8:	clc    
  403be9:	pop    eax
  403bea:	xor    BYTE PTR [ebp-0x35],ah
  403bed:	jmp    0xaf3:0x33a1e4a6
  403bf4:	mov    ebx,0x69e82ad9
  403bf9:	mov    esp,0x3202f050
  403bfe:	mov    cl,0x3a
  403c00:	ror    BYTE PTR [edi+edi*8-0x2bd1641],cl
  403c07:	add    al,0x79
  403c09:	int3   
  403c0a:	(bad)  
  403c0c:	fstp   TBYTE PTR [ecx]
  403c0e:	int3   
  403c0f:	loop   0x403be0
  403c11:	xor    DWORD PTR [eax-0x48],esi
  403c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c15:	mov    esi,0xe88b6eab
  403c1a:	mov    bh,0x97
  403c1c:	sub    al,0x9d
  403c1e:	mov    eax,0x8011451
  403c23:	in     eax,dx
  403c24:	mov    edi,0x43bb3545
  403c29:	xlat   BYTE PTR ds:[ebx]
  403c2a:	leave  
  403c2b:	pop    edi
  403c2c:	pop    ebp
  403c2d:	es aas 
  403c2f:	or     BYTE PTR [ebx-0x702879f0],dl
  403c35:	aam    0x9a
  403c37:	lock test BYTE PTR [ebx-0x47f4d27],0x9e
  403c3f:	nop
  403c40:	xchg   ebx,eax
  403c41:	mov    edi,0x5092d54f
  403c46:	push   esi
  403c47:	xor    BYTE PTR [edx+eax*8+0x6d],bh
  403c4b:	inc    edi
  403c4c:	push   es
  403c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c4e:	ss in  al,dx
  403c50:	pop    esi
  403c51:	cli    
  403c52:	push   0x735a68c
  403c57:	cmp    eax,0x1fb5cace
  403c5c:	je     0x403c2c
  403c5e:	ins    DWORD PTR es:[edi],dx
  403c5f:	leave  
  403c60:	add    DWORD PTR [esi+0x57],eax
  403c63:	pop    ds
  403c64:	stos   DWORD PTR es:[edi],eax
  403c65:	xchg   esp,eax
  403c66:	and    BYTE PTR [eax+0x50bc386e],cl
  403c6c:	xchg   ebp,eax
  403c6d:	lahf   
  403c6e:	(bad)  
  403c6f:	js     0x403c8b
  403c71:	and    ch,BYTE PTR [ebp-0x26]
  403c74:	pusha  
  403c75:	push   0xd9cf138d
  403c7a:	xor    al,0x31
  403c7c:	mov    esi,0x434f1e74
  403c81:	mov    ebx,ecx
  403c83:	fiadd  WORD PTR [esi+eiz*4+0x56af5ac6]
  403c8a:	jg     0x403c66
  403c8c:	fadd   QWORD PTR [ebx]
  403c8e:	je     0x403c6d
  403c90:	inc    esp
  403c91:	lahf   
  403c92:	pop    es
  403c93:	cmp    al,0xe6
  403c95:	test   al,0xc9
  403c97:	mov    ecx,DWORD PTR [ebx+0x39]
  403c9a:	lahf   
  403c9b:	mov    ebp,0x1b228c52
  403ca0:	xor    dl,dh
  403ca2:	adc    al,0x3a
  403ca4:	es jns 0x403c4b
  403ca7:	js     0x403c98
  403ca9:	pop    edi
  403caa:	mov    bl,0xba
  403cac:	shl    DWORD PTR [edi+0x54636e5b],1
  403cb2:	inc    ebp
  403cb3:	add    cl,0x7
  403cb6:	push   0x4b
  403cb8:	jae    0x403c9f
  403cba:	push   ecx
  403cbb:	push   edx
  403cbc:	cld    
  403cbd:	bound  ebp,QWORD PTR [ebx]
  403cbf:	shr    DWORD PTR [edx+0x1ba977b6],cl
  403cc5:	mov    ebx,0x55951b8
  403cca:	mov    ebx,DWORD PTR [eax+0x6c381d2a]
  403cd0:	sbb    cl,bh
  403cd2:	mov    bl,bl
  403cd4:	cli    
  403cd5:	fild   WORD PTR [edi+eiz*1+0xec2cf5a]
  403cdc:	stos   BYTE PTR es:[edi],al
  403cdd:	int3   
  403cde:	sbb    esp,esi
  403ce0:	in     al,dx
  403ce1:	mov    dh,0xb4
  403ce3:	add    DWORD PTR [ecx+eiz*4+0x7356c828],esp
  403cea:	pop    ebp
  403ceb:	cs push 0xf16923b
  403cf1:	pop    ss
  403cf2:	jl     0x403c8c
  403cf4:	add    eax,0x9d5dbe66
  403cf9:	push   ss
  403cfa:	jo     0x403ca3
  403cfc:	std    
  403cfd:	loope  0x403ccb
  403cff:	fnstcw WORD PTR [esi+eiz*8-0x6a]
  403d03:	push   es
  403d04:	mov    WORD PTR [eax-0x55],0xac3
  403d0a:	sbb    dh,dh
  403d0c:	dec    edi
  403d0d:	add    eax,esp
  403d0f:	popa   
  403d10:	sub    esi,DWORD PTR [edx+0x2af99831]
  403d16:	xor    DWORD PTR [eax-0x29],0xffffffb2
  403d1a:	jp     0x403cde
  403d1c:	nop
  403d1d:	mov    eax,ds:0x4e0b6408
  403d22:	pop    ecx
  403d23:	mov    BYTE PTR [ecx-0x58],dl
  403d26:	(bad)  
  403d27:	das    
  403d28:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403d2a:	sbb    al,0x50
  403d2c:	rcl    DWORD PTR [eax+0x7c52522d],0xa0
  403d33:	fs pushf 
  403d35:	les    esp,FWORD PTR [edx-0x48d4dc12]
  403d3b:	aam    0x5
  403d3d:	mov    esp,0x4a80f4ab
  403d42:	or     eax,0x8753ea7
  403d47:	push   edx
  403d48:	xor    bh,BYTE PTR [edi-0x1b]
  403d4b:	(bad)  
  403d4d:	xor    al,0x10
  403d4f:	xchg   ebp,eax
  403d50:	retf   0x69dc
  403d53:	aas    
  403d54:	mov    esp,DWORD PTR [edi]
  403d56:	js     0x403d13
  403d58:	scas   al,BYTE PTR es:[edi]
  403d59:	push   esi
  403d5a:	shl    BYTE PTR [esi],1
  403d5c:	jbe    0x403daf
  403d5e:	xchg   ebx,eax
  403d5f:	(bad)  
  403d60:	test   al,0x33
  403d62:	mov    ch,0x6
  403d64:	loope  0x403d86
  403d66:	ss push 0x89507475
  403d6c:	test   al,0x79
  403d6e:	aam    0xe1
  403d70:	mov    ecx,0x40fd0d44
  403d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d76:	aaa    
  403d77:	test   BYTE PTR [eax-0x79],0x66
  403d7b:	call   0xa8d8ba3
  403d80:	mov    ds:0x3907fe6,eax
  403d85:	out    dx,eax
  403d86:	lds    ebx,FWORD PTR [edx]
  403d88:	cmp    al,0x51
  403d8a:	mov    ebp,0x13fb3c0b
  403d8f:	sti    
  403d90:	aas    
  403d91:	lahf   
  403d92:	mov    ah,0x5a
  403d94:	fld    TBYTE PTR [ecx]
  403d96:	sbb    al,0x24
  403d98:	mov    ah,0xdc
  403d9a:	loop   0x403d6f
  403d9c:	sti    
  403d9d:	mov    DWORD PTR [ebp+0x284cb797],esp
  403da3:	aam    0x52
  403da5:	retf   0x7774
  403da8:	jl     0x403dbb
  403daa:	adc    al,0x6
  403dac:	imul   esi,esp,0xdaa764b7
  403db2:	inc    ebp
  403db3:	into   
  403db4:	dec    eax
  403db5:	or     al,BYTE PTR gs:[edi+0x9]
  403db9:	repnz cmp al,ch
  403dbc:	mov    ebx,DWORD PTR [ebx-0x39dd9abc]
  403dc2:	cmp    BYTE PTR [ebx-0x549a2cf9],dh
  403dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc9:	jle    0x403e02
  403dcb:	sbb    BYTE PTR ds:0xbcda9197,0x34
  403dd3:	jmp    0xf2f46a35
  403dd8:	js     0x403d73
  403dda:	mov    bh,0xb3
  403ddc:	jp     0x403db2
  403dde:	fist   DWORD PTR [eax-0x6f442419]
  403de4:	mov    ds:0xd01ec1e6,al
  403de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dea:	jl     0x403dd3
  403dec:	pop    ds
  403ded:	rcr    cl,cl
  403def:	sbb    eax,0xba44b97d
  403df4:	cmp    ah,BYTE PTR [esi-0x42dce0f4]
  403dfa:	push   esi
  403dfb:	xchg   ecx,eax
  403dfc:	or     BYTE PTR [eax+0x2c],bl
  403dff:	(bad)  
  403e00:	out    dx,al
  403e01:	outs   dx,BYTE PTR ds:[esi]
  403e02:	nop
  403e03:	inc    ebx
  403e04:	(bad)  
  403e05:	mov    al,ds:0xeade523b
  403e0a:	scas   al,BYTE PTR es:[edi]
  403e0b:	retf   0x7e2d
  403e0e:	popa   
  403e0f:	sbb    edx,DWORD PTR [ecx]
  403e11:	retf   0xe8ca
  403e14:	pop    ebx
  403e15:	fst    QWORD PTR [ebx]
  403e17:	add    ch,BYTE PTR [edx-0x71]
  403e1a:	shr    DWORD PTR [eax],0x49
  403e1d:	stos   BYTE PTR es:[edi],al
  403e1e:	fsub   st(4),st
  403e20:	mov    WORD PTR [ecx-0x3193c094],fs
  403e26:	dec    ecx
  403e27:	sahf   
  403e28:	in     al,0x47
  403e2a:	gs and esi,edi
  403e2d:	push   0xd52bde00
  403e32:	xor    cl,dh
  403e34:	adc    edi,DWORD PTR [esi+0x45d79fc4]
  403e3a:	pop    ds
  403e3b:	and    BYTE PTR [edi],bl
  403e3d:	clc    
  403e3e:	sub    BYTE PTR [esi-0x13],cl
  403e41:	adc    DWORD PTR [eax+esi*1-0xd4a5420],edi
  403e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e49:	mov    edx,DWORD PTR ds:0x9d80675e
  403e4f:	dec    edi
  403e50:	inc    esp
  403e51:	cmp    DWORD PTR [ebx+0x6c],eax
  403e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e55:	mov    dh,0x91
  403e57:	sub    BYTE PTR [edx-0x52],dh
  403e5a:	mov    edx,DWORD PTR [ecx+0x39]
  403e5d:	cmp    bl,BYTE PTR [esi-0x4c28e403]
  403e63:	mov    ah,0x16
  403e65:	leave  
  403e66:	fisubr DWORD PTR [edi+0x78]
  403e69:	das    
  403e6a:	push   0xd2297e0
  403e6f:	iret   
  403e70:	adc    ch,BYTE PTR [edx-0x724e25cf]
  403e76:	ds and al,0xd
  403e79:	xchg   ebx,eax
  403e7a:	and    cl,0xab
  403e7d:	xor    eax,0x85df1956
  403e82:	out    dx,eax
  403e83:	out    dx,al
  403e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e85:	adc    ebx,ebx
  403e87:	xchg   al,ch
  403e89:	sub    ah,dh
  403e8b:	push   0x2d
  403e8d:	sbb    BYTE PTR [ecx],ch
  403e8f:	loopne 0x403e84
  403e91:	jae    0x403eb0
  403e93:	cmp    esi,0x4a74f96d
  403e99:	mov    eax,0xfea0fa6
  403e9e:	and    al,0x9e
  403ea0:	jb     0x403eb5
  403ea2:	sub    DWORD PTR [esi-0x2fac6f8b],0x33778186
  403eac:	in     al,dx
  403ead:	sbb    DWORD PTR [eax-0x2f],ebx
  403eb0:	xor    ch,BYTE PTR [ebp-0x4b81cb57]
  403eb6:	xor    esi,edi
  403eb8:	dec    esi
  403eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eba:	stos   BYTE PTR es:[edi],al
  403ebb:	sbb    eax,0x489fd4aa
  403ec0:	in     al,dx
  403ec1:	or     DWORD PTR [esi],ebp
  403ec3:	or     al,0x6b
  403ec5:	xor    dh,BYTE PTR [eax]
  403ec7:	pop    eax
  403ec8:	cmp    bl,BYTE PTR [ecx-0x7]
  403ecb:	push   ds
  403ecc:	or     BYTE PTR es:[esi-0x3d289ac5],ah
  403ed3:	sbb    eax,0xce9d27c3
  403ed8:	or     edx,DWORD PTR [edi+0x44f9aa4a]
  403ede:	cwde   
  403edf:	pop    esp
  403ee0:	lds    ebx,FWORD PTR [edx-0x5629527]
  403ee6:	(bad)  
  403ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee8:	pop    ss
  403ee9:	mov    esi,0x13c249c4
  403eee:	pop    ds
  403eef:	or     DWORD PTR [eax+0x2185160],edi
  403ef5:	call   0xaf22:0x25219e0b
  403efc:	jmp    0xb0c55c33
  403f01:	mov    ecx,0xa3a6456e
  403f06:	out    0x6c,al
  403f08:	dec    ecx
  403f09:	outs   dx,DWORD PTR ds:[esi]
  403f0a:	adc    bh,ah
  403f0c:	outs   dx,BYTE PTR ds:[esi]
  403f0d:	or     BYTE PTR [esi-0x66],0x11
  403f11:	inc    edx
  403f12:	cmp    ah,al
  403f14:	mov    edi,DWORD PTR [ecx]
  403f16:	cmp    BYTE PTR [edx+ebp*1+0x65],bh
  403f1a:	add    BYTE PTR [eax-0x3ac9968e],al
  403f20:	pop    ss
  403f21:	mov    ah,0x83
  403f23:	cmp    DWORD PTR [edi],edi
  403f25:	leave  
  403f26:	mov    WORD PTR [esi+0x7c90948f],?
  403f2c:	(bad)  [ebx]
  403f2e:	mov    edi,DWORD PTR [ebp-0x66]
  403f31:	(bad)  
  403f33:	lea    esi,[esi-0x9]
  403f36:	xchg   edx,eax
  403f37:	repz lea ecx,[ebp+0x2be492eb]
  403f3e:	dec    esp
  403f3f:	mov    ch,0xac
  403f41:	sar    al,cl
  403f43:	push   eax
  403f44:	hlt    
  403f45:	inc    esp
  403f46:	jns    0x403ecb
  403f48:	fs push cs
  403f4a:	loope  0x403f0d
  403f4c:	and    dl,BYTE PTR [esi-0x5a5bad85]
  403f52:	outs   dx,DWORD PTR ds:[esi]
  403f53:	push   ebx
  403f54:	cmp    BYTE PTR [esi-0xed88c72],cl
  403f5a:	mov    eax,ds:0xd92e64cb
  403f5f:	sbb    ah,BYTE PTR cs:[ecx]
  403f62:	out    dx,al
  403f63:	out    dx,al
  403f64:	nop
  403f65:	pop    ss
  403f66:	outs   dx,DWORD PTR ds:[esi]
  403f67:	adc    eax,0x1cdbf43d
  403f6c:	push   eax
  403f6d:	push   eax
  403f6e:	cmp    eax,0x91c05bb5
  403f73:	stc    
  403f74:	push   es
  403f75:	mov    bh,0xb5
  403f77:	call   FWORD PTR [edx-0x44]
  403f7a:	pop    ss
  403f7b:	fnstsw WORD PTR [eax]
  403f7d:	push   ebx
  403f7e:	adc    eax,0x63633181
  403f83:	jp     0x403f5f
  403f85:	hlt    
  403f86:	mov    ecx,DWORD PTR [edi+esi*1-0x38]
  403f8a:	mov    ds:0x80d95e00,eax
  403f8f:	out    0x7a,al
  403f91:	xor    ecx,DWORD PTR [edx+0x6600c3e6]
  403f97:	pushf  
  403f98:	enter  0xeef9,0x9a
  403f9c:	xchg   ebp,eax
  403f9d:	leave  
  403f9e:	(bad)  
  403f9f:	popa   
  403fa0:	mov    ch,0xa4
  403fa2:	repz aad 0xd2
  403fa5:	mov    al,ds:0xbdb0c218
  403faa:	loopne 0x403fea
  403fac:	pop    eax
  403fad:	sahf   
  403fae:	rcr    BYTE PTR ds:0x4f1e8f4a,1
  403fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb5:	imul   esp,DWORD PTR [edx-0x1afb9d0f],0xf7a18733
  403fbf:	add    DWORD PTR [ecx],0xffffff89
  403fc2:	ins    DWORD PTR es:[edi],dx
  403fc3:	xlat   BYTE PTR ds:[ebx]
  403fc4:	jmp    0x55f4:0xf3284b0f
  403fcb:	jp     0x403fff
  403fcd:	aam    0xe6
  403fcf:	test   al,0x79
  403fd1:	jge    0x403fca
  403fd3:	jp     0x403fa4
  403fd5:	sar    DWORD PTR [esi],1
  403fd7:	popa   
  403fd8:	inc    eax
  403fd9:	xchg   edx,eax
  403fda:	loopne 0x403f8e
  403fdc:	or     ebp,ecx
  403fde:	gs fadd st(4),st
  403fe1:	repnz xor eax,0xb81dfce3
  403fe7:	jno    0x404030
  403fe9:	add    eax,0xae24791f
  403fee:	mov    esp,0xdfb9334
  403ff3:	icebp  
  403ff4:	nop
  403ff5:	aam    0xea
  403ff7:	sar    BYTE PTR [ecx],1
  403ff9:	xchg   esp,eax
  403ffa:	jns    0x404075
  403ffc:	dec    esi
  403ffd:	test   DWORD PTR [ebp+eax*4-0x6c],esp
  404001:	out    0x74,al
  404003:	(bad)  
  404004:	aad    0x2b
  404006:	stos   BYTE PTR es:[edi],al
  404007:	repz das 
  404009:	stc    
  40400a:	retf   0xc3bf
  40400d:	icebp  
  40400e:	pushf  
  40400f:	inc    ebp
  404010:	xchg   edx,eax
  404011:	mov    dh,0x72
  404013:	out    dx,al
  404014:	jp     0x404058
  404016:	and    eax,0x55021792
  40401b:	inc    ecx
  40401c:	dec    ebp
  40401d:	pop    ebp
  40401e:	es mov dl,0xf7
  404021:	xchg   ecx,eax
  404022:	and    al,0xdb
  404025:	or     dh,cl
  404027:	inc    edx
  404028:	push   cs
  404029:	cmp    BYTE PTR [esi+0x79],ch
  40402c:	cmp    BYTE PTR [ebp-0x4c8cfabb],ah
  404032:	cmp    eax,0x6ed2c376
  404037:	(bad)  
  404038:	pop    eax
  404039:	lods   al,BYTE PTR ds:[esi]
  40403a:	stos   BYTE PTR es:[edi],al
  40403b:	rcl    BYTE PTR [eax+esi*1],1
  40403e:	sbb    BYTE PTR [ebx+0x1],dl
  404041:	push   ds
  404042:	add    al,0xf1
  404044:	push   0xbc4f0d2d
  404049:	xchg   ebp,eax
  40404a:	retf   0x80af
  40404d:	iret   
  40404e:	(bad)  
  40404f:	ficom  WORD PTR [esi-0x5bb796d4]
  404055:	idiv   DWORD PTR [ebx-0x77]
  404058:	(bad)  
  40405a:	jmp    0xfd97:0x63fd4dc5
  404061:	js     0x404005
  404063:	out    dx,al
  404064:	pop    ecx
  404065:	cs test al,0xf
  404068:	les    esi,FWORD PTR [ebx+0x7462184c]
  40406e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40406f:	(bad)
  404073:	retf   
  404074:	pop    ss
  404075:	pop    ebp
  404076:	shr    DWORD PTR [ecx+ecx*1],1
  404079:	in     eax,dx
  40407a:	aad    0xb
  40407c:	xchg   edi,eax
  40407d:	imul   BYTE PTR [ecx]
  40407f:	jg     0x4040a9
  404081:	xchg   ebp,eax
  404082:	and    al,0x29
  404084:	shl    al,cl
  404086:	call   0x9ebc:0xfa9e8477
  40408d:	push   edx
  40408e:	xchg   ebx,eax
  40408f:	je     0x4040b0
  404091:	cmp    eax,edi
  404093:	sbb    eax,0x33443fb6
  404098:	inc    BYTE PTR [edx+0x71]
  40409b:	sub    edi,DWORD PTR [edi]
  40409d:	outs   dx,DWORD PTR ds:[esi]
  40409e:	shr    BYTE PTR [ebx-0x21],0xa1
  4040a2:	fwait
  4040a3:	adc    ecx,esi
  4040a5:	ftst   
  4040a7:	rcr    DWORD PTR [edx],0xc
  4040aa:	pop    eax
  4040ab:	out    dx,eax
  4040ac:	mov    ebx,0x199a48b2
  4040b1:	jno    0x4040e6
  4040b3:	adc    DWORD PTR [ecx+esi*1+0x29],ebx
  4040b7:	pusha  
  4040b8:	xor    al,0x98
  4040ba:	mov    ?,WORD PTR [edi+0x22e893c3]
  4040c0:	cli    
  4040c1:	xchg   ebx,eax
  4040c2:	mov    dl,0x17
  4040c4:	(bad)  
  4040c5:	push   0x42a360ee
  4040ca:	mov    ebp,0xfcdfd2b1
  4040cf:	bound  ebp,QWORD PTR [edx+0x62aed51d]
  4040d5:	push   edx
  4040d6:	push   ebp
  4040d7:	mov    db7,edi
  4040da:	shl    DWORD PTR [ebx-0x2e],1
  4040dd:	mov    WORD PTR [eax-0x1f508b12],fs
  4040e3:	jmp    0x404100
  4040e5:	es inc eax
  4040e7:	std    
  4040e8:	and    eax,0x9bb2508b
  4040ed:	scas   eax,DWORD PTR es:[edi]
  4040ee:	dec    eax
  4040ef:	push   ebp
  4040f0:	pop    esp
  4040f1:	jl     0x404113
  4040f3:	add    al,0x42
  4040f5:	push   0x6080acaf
  4040fa:	xchg   esi,eax
  4040fb:	xchg   edx,eax
  4040fc:	pusha  
  4040fd:	mov    BYTE PTR fs:[esi],ch
  404100:	in     al,0x72
  404102:	aaa    
  404103:	mov    al,ds:0x21f1da4c
  404108:	sub    esp,esp
  40410a:	icebp  
  40410b:	cld    
  40410c:	mov    cl,0xae
  40410e:	jne    0x404181
  404110:	pop    ss
  404111:	sbb    edi,ebx
  404113:	or     al,0x50
  404115:	imul   edx,DWORD PTR [ecx],0x1b
  404118:	out    0x39,al
  40411a:	imul   ecx,DWORD PTR [eax],0xffffffa2
  40411d:	mov    cl,0x9b
  40411f:	add    ebp,ebp
  404121:	fcmovnu st,st(0)
  404123:	pop    ebx
  404124:	mov    bl,0x54
  404126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404127:	xchg   edx,eax
  404128:	mov    eax,0xf7b13ef5
  40412d:	cmp    BYTE PTR [ebx-0x48],bh
  404130:	mov    ds:0x89f1ce4e,eax
  404135:	daa    
  404136:	sub    eax,0x2a6fd0bf
  40413b:	retf   0x29eb
  40413e:	jbe    0x404171
  404140:	data16 jb 0x40418d
  404143:	or     al,al
  404145:	sub    BYTE PTR [eax],ah
  404147:	jns    0x4041a7
  404149:	mov    eax,ds:0xd3aaaefc
  40414e:	loop   0x4041a5
  404150:	lds    ecx,FWORD PTR [ecx+0x36cbdbcd]
  404156:	adc    BYTE PTR [eax+eax*2-0x63],cl
  40415a:	dec    esi
  40415b:	ins    DWORD PTR es:[edi],dx
  40415c:	push   ebx
  40415d:	push   es
  40415e:	pop    eax
  40415f:	retf   0xead8
  404162:	mov    DWORD PTR [edx-0x33],esp
  404165:	es pop esp
  404167:	push   ebx
  404168:	xor    ah,cl
  40416a:	and    BYTE PTR [esi],dl
  40416c:	cmp    DWORD PTR [edi],esi
  40416e:	and    eax,0xeb7e0a3c
  404173:	mov    al,0x8c
  404175:	jb     0x4041ca
  404177:	aas    
  404178:	dec    edx
  404179:	dec    edx
  40417a:	call   0x1792d844
  40417f:	stos   DWORD PTR es:[edi],eax
  404180:	dec    ebp
  404181:	cli    
  404182:	jmp    0x7813:0xfe16f059
  404189:	das    
  40418a:	popf   
  40418b:	je     0x404134
  40418d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40418e:	or     dh,BYTE PTR [esi]
  404190:	pop    ds
  404191:	jo     0x404191
  404193:	and    ch,BYTE PTR [eax]
  404195:	sbb    BYTE PTR [edi],0xc4
  404198:	bound  esi,QWORD PTR [esi-0x1c]
  40419b:	inc    ecx
  40419c:	xchg   dl,dl
  40419e:	xchg   esi,eax
  40419f:	xor    ch,BYTE PTR [eax+0x6b319567]
  4041a5:	jmp    0x404200
  4041a7:	jl     0x4041fd
  4041a9:	push   cs
  4041aa:	shr    eax,1
  4041ac:	popf   
  4041ad:	inc    ecx
  4041ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041af:	adc    eax,0x2f64051e
  4041b4:	fwait
  4041b5:	cmp    al,0x6e
  4041b7:	jbe    0x4041a9
  4041b9:	jl     0x40422b
  4041bb:	pop    es
  4041bc:	sbb    eax,0x4fef4451
  4041c1:	imul   ebp,ecx,0xffffffdf
  4041c4:	stc    
  4041c5:	push   ecx
  4041c6:	cmp    eax,0x8820e64b
  4041cb:	jp     0x4041b7
  4041cd:	adc    al,0xc9
  4041cf:	mov    al,ds:0xbbef56ba
  4041d4:	ds cmp al,0xbe
  4041d7:	dec    edi
  4041d8:	dec    eax
  4041d9:	mov    bh,0x76
  4041db:	mov    eax,ds:0xfe03c13
  4041e0:	adc    ah,dl
  4041e2:	pushf  
  4041e3:	dec    esi
  4041e4:	loop   0x404232
  4041e6:	stc    
  4041e7:	js     0x4041c9
  4041e9:	dec    esp
  4041ea:	sub    esp,DWORD PTR [edx+0x77]
  4041ed:	push   ebp
  4041ee:	lahf   
  4041ef:	sub    DWORD PTR [ebp+0x4d],0xffffffe5
  4041f3:	jle    0x404188
  4041f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f6:	rcr    DWORD PTR [esi+0x2e],1
  4041f9:	jno    0x4041f0
  4041fb:	xchg   edx,eax
  4041fc:	fs sub al,BYTE PTR ds:[ebp+ebp*8+0x26778d5b]
  404205:	es jae 0x4041f1
  404208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420a:	fist   DWORD PTR [ebp-0x38]
  40420d:	imul   edx,DWORD PTR ds:0xaa855aa4,0x46
  404214:	cld    
  404215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404216:	cmp    al,ch
  404218:	shl    ebx,1
  40421a:	data16 ds int 0xab
  40421e:	push   ebp
  40421f:	and    bl,bh
  404221:	pop    ebp
  404222:	scas   al,BYTE PTR es:[edi]
  404223:	jge    0x404298
  404225:	mov    edi,0x4e3d7dc5
  40422a:	gs jne 0x4041f3
  40422d:	mov    ah,0x2c
  40422f:	in     eax,dx
  404230:	aam    0x9a
  404232:	mov    ch,0xc9
  404234:	imul   ebx,DWORD PTR [esi],0xc25c9b52
  40423a:	ret    
  40423b:	outs   dx,DWORD PTR ds:[esi]
  40423c:	mov    bh,BYTE PTR [edi-0x3e]
  40423f:	cmp    edi,edx
  404241:	retf   
  404242:	sub    BYTE PTR [ebp+0x4],bl
  404245:	out    dx,eax
  404246:	sti    
  404247:	fwait
  404248:	mov    esi,0x45d3a019
  40424d:	mov    bh,cl
  40424f:	inc    ebp
  404250:	aas    
  404251:	into   
  404252:	cdq    
  404253:	loope  0x4041de
  404255:	repz xor ebp,eax
  404258:	jno    0x404268
  40425a:	cmp    bh,al
  40425c:	cdq    
  40425d:	sub    DWORD PTR [eax],ebp
  40425f:	push   ss
  404260:	pop    ss
  404261:	mov    ecx,0x72f89306
  404266:	xchg   cx,ax
  404268:	in     al,0xda
  40426a:	sbb    BYTE PTR [edx+0x39e853ee],bh
  404270:	add    al,0xad
  404272:	mov    dl,0x16
  404274:	push   cs
  404275:	dec    ebx
  404276:	sbb    BYTE PTR [ebx],al
  404278:	cmp    ebx,DWORD PTR [edx-0xa]
  40427b:	cld    
  40427c:	mov    dx,0x67e0
  404280:	or     bh,dh
  404282:	sub    eax,esp
  404284:	xor    bl,BYTE PTR [edi-0x53]
  404287:	sub    eax,0x7e413a8e
  40428c:	pop    ss
  40428d:	test   al,0x7d
  40428f:	shl    ecx,0x88
  404292:	xchg   edx,eax
  404293:	popf   
  404294:	mov    bl,0xc7
  404296:	add    BYTE PTR [ebx+0x4a],0x4f
  40429a:	aas    
  40429b:	pop    ecx
  40429c:	fistp  QWORD PTR [eax]
  40429e:	inc    esp
  40429f:	add    DWORD PTR [esi+eax*8],eax
  4042a2:	cwde   
  4042a3:	or     ebp,ecx
  4042a5:	call   0x3eb9:0x6fa98f3d
  4042ac:	loope  0x404282
  4042ae:	fist   WORD PTR [ecx-0x53]
  4042b1:	cmp    BYTE PTR [ebx-0x26],0xbf
  4042b5:	jno    0x4042f7
  4042b7:	es popa 
  4042b9:	sbb    al,0x3b
  4042bb:	repnz das 
  4042bd:	mov    cl,0x12
  4042bf:	pusha  
  4042c0:	stos   BYTE PTR es:[edi],al
  4042c1:	jle    0x4042fa
  4042c3:	fadd   DWORD PTR [eax+eax*2+0x33d5a707]
  4042ca:	mov    edi,0x1f3081fd
  4042cf:	(bad)  
  4042d0:	push   ecx
  4042d1:	aam    0xb6
  4042d3:	mov    al,0xda
  4042d5:	(bad)  
  4042d6:	in     al,0xa1
  4042d8:	sti    
  4042d9:	mov    WORD PTR [ecx],?
  4042db:	mov    ah,0xb6
  4042dd:	xor    al,0x12
  4042df:	test   eax,0x8b998431
  4042e4:	sbb    dl,al
  4042e6:	popf   
  4042e7:	inc    ebp
  4042e8:	icebp  
  4042e9:	(bad)  
  4042ea:	(bad)  
  4042eb:	jp     0x40431a
  4042ed:	mov    ds:0x33f06ebc,eax
  4042f2:	inc    esp
  4042f3:	sub    BYTE PTR [ebx+0x2176bdef],bl
  4042f9:	push   eax
  4042fa:	call   0xebe8:0x498f1e84
  404301:	cmp    DWORD PTR ds:0xf9584f9e,0x13
  404308:	popf   
  404309:	pop    ecx
  40430a:	mov    ah,0xb4
  40430c:	xchg   esi,eax
  40430d:	xchg   ebp,eax
  40430e:	jecxz  0x4042fa
  404310:	outs   dx,BYTE PTR ds:[esi]
  404311:	pushf  
  404312:	cmp    BYTE PTR [edi-0x7419f1f8],bl
  404318:	add    al,0xce
  40431a:	jae    0x404398
  40431c:	mov    al,0x9f
  40431e:	arpl   WORD PTR [edi-0x4b],di
  404321:	int    0x63
  404323:	rol    DWORD PTR [esi],0xf5
  404326:	rol    DWORD PTR [ecx-0x59a5bff3],cl
  40432c:	fild   QWORD PTR [ebx-0x10]
  40432f:	stos   DWORD PTR es:[edi],eax
  404330:	lahf   
  404331:	inc    esi
  404332:	in     al,dx
  404333:	ror    DWORD PTR [ebx+0x4],1
  404336:	push   edi
  404337:	pop    ss
  404338:	sbb    al,0x26
  40433a:	shl    ah,0xa3
  40433d:	repz jne 0x4043b0
  404340:	fnstsw WORD PTR [edx+0x34]
  404343:	jno    0x4042c5
  404345:	data16 hlt 
  404347:	test   eax,0x224c8765
  40434c:	dec    esi
  40434d:	and    DWORD PTR [ecx-0x7b9c08c8],ebx
  404353:	sbb    ebp,edi
  404355:	jecxz  0x4042df
  404357:	in     al,dx
  404358:	jecxz  0x40431d
  40435a:	jae    0x4042ff
  40435c:	shr    dl,1
  40435e:	js     0x4043af
  404360:	ret    
  404361:	scas   eax,DWORD PTR es:[edi]
  404362:	sbb    ebp,ebp
  404364:	jle    0x40438e
  404366:	jb     0x404309
  404368:	sbb    al,0x26
  40436a:	fs rcr ecx,cl
  40436d:	lods   eax,DWORD PTR ds:[esi]
  40436e:	add    ecx,0x4ee5f36
  404374:	in     al,dx
  404375:	not    BYTE PTR [edx]
  404377:	jmp    0x552f:0x582b82cc
  40437e:	jg     0x404344
  404380:	fstp   TBYTE PTR [ebx+esi*2+0x40]
  404384:	jmp    FWORD PTR [edx-0x2f]
  404387:	mov    ebp,0x290fe9a4
  40438c:	sbb    BYTE PTR [edx],ch
  40438e:	scas   eax,DWORD PTR es:[edi]
  40438f:	popa   
  404390:	jns    0x4043f1
  404392:	cld    
  404393:	loopne 0x4043b8
  404395:	outs   dx,BYTE PTR ds:[esi]
  404396:	cmp    eax,DWORD PTR [ecx-0x3799b135]
  40439c:	xor    al,0x6c
  40439e:	add    ebx,0xd4755184
  4043a4:	retf   
  4043a5:	repz pop esp
  4043a7:	push   0x7f
  4043a9:	jle    0x404372
  4043ab:	scas   eax,DWORD PTR es:[edi]
  4043ac:	inc    eax
  4043ad:	adc    DWORD PTR [ebx+edx*8-0x525c9e6f],esi
  4043b4:	mov    ah,0x5c
  4043b6:	(bad)  
  4043b7:	jmp    0x979bf1f
  4043bc:	cmp    ah,BYTE PTR [esi+0xd481557]
  4043c2:	and    DWORD PTR [ebp-0x59],0xa644728d
  4043c9:	out    0x41,al
  4043cb:	in     eax,dx
  4043cc:	push   esp
  4043cd:	mov    ebp,0xa43e90fe
  4043d2:	retf   0xbc62
  4043d5:	retf   
  4043d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043d7:	mov    cl,0xf
  4043d9:	pop    ds
  4043da:	mov    bl,0xfe
  4043dc:	sahf   
  4043dd:	or     bl,BYTE PTR [ecx-0x48d0ae5]
  4043e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e4:	mov    ebx,0x5ff644ee
  4043e9:	int    0x90
  4043eb:	and    bh,BYTE PTR [edi-0x46b62255]
  4043f1:	fwait
  4043f2:	xchg   ecx,eax
  4043f3:	cmp    BYTE PTR [ebx+eiz*8+0x54bdf799],ah
  4043fa:	icebp  
  4043fb:	sbb    cl,cl
  4043fd:	xlat   BYTE PTR ds:[ebx]
  4043fe:	inc    edx
  4043ff:	xchg   ebx,eax
  404400:	adc    ch,BYTE PTR ds:0x43ed2f7a
  404406:	mov    ds:0xf245c585,al
  40440b:	cmp    edx,DWORD PTR [ebp+edi*1+0x17]
  40440f:	(bad)  
  404411:	adc    al,BYTE PTR [ecx-0x5f]
  404414:	shl    BYTE PTR [edi+0x1f],1
  404417:	mov    dh,0x9f
  404419:	xchg   esp,eax
  40441a:	push   ds
  40441b:	imul   ebx,ebx,0x9f6b52e2
  404421:	mov    esi,0xee2e2df9
  404426:	pop    esp
  404427:	mov    esp,0x34198aef
  40442c:	rcl    DWORD PTR [ebp+0x28c7da6c],cl
  404432:	rol    DWORD PTR [ecx-0x7c69b60c],cl
  404438:	dec    ecx
  404439:	push   ss
  40443a:	push   ss
  40443b:	test   eax,0x8c6cd08c
  404440:	jmp    0x404418
  404442:	xor    BYTE PTR [ebp+0x383d54bd],bl
  404448:	pop    ecx
  404449:	std    
  40444a:	adc    ah,bh
  40444c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444d:	dec    eax
  40444e:	or     ah,BYTE PTR [ebp+0x39ed0e79]
  404454:	pop    ds
  404455:	inc    esi
  404456:	lods   al,BYTE PTR ds:[esi]
  404457:	neg    DWORD PTR [ebx]
  404459:	mov    bh,0x31
  40445b:	mov    cs,WORD PTR [edi]
  40445d:	push   ss
  40445e:	sar    DWORD PTR [edi-0x3b6894f1],0x10
  404465:	sbb    BYTE PTR [esi],cl
  404467:	xchg   esp,eax
  404468:	std    
  404469:	mov    ah,0x15
  40446b:	mov    cx,0x4db3
  40446f:	(bad)  
  404470:	loopne 0x4043f2
  404472:	inc    ebx
  404473:	sub    BYTE PTR [esi-0x39],cl
  404476:	rcl    DWORD PTR ds:0x2597627f,0x51
  40447d:	int    0x8
  40447f:	loope  0x4044a2
  404481:	add    ecx,DWORD PTR [edi+0x7a72b13e]
  404487:	ins    BYTE PTR es:[edi],dx
  404488:	and    eax,0x1b846543
  40448d:	outs   dx,DWORD PTR ds:[esi]
  40448e:	xchg   ecx,eax
  40448f:	mov    cl,0xf7
  404491:	cdq    
  404492:	xchg   edx,eax
  404493:	dec    esp
  404494:	test   BYTE PTR [edx],0xe8
  404497:	mov    cl,0xad
  404499:	sti    
  40449a:	inc    esi
  40449b:	mov    cl,0x1a
  40449d:	xchg   DWORD PTR [ebp-0x5f],edx
  4044a0:	fild   QWORD PTR [edi]
  4044a2:	mov    ebp,0x44ffa18c
  4044a7:	lahf   
  4044a8:	sahf   
  4044a9:	and    DWORD PTR [edi+0x16],ecx
  4044ac:	popf   
  4044ad:	es test eax,0x14163583
  4044b3:	cmp    DWORD PTR [ecx+0x2d],edi
  4044b6:	pushf  
  4044b7:	stos   BYTE PTR es:[edi],al
  4044b8:	push   ebx
  4044b9:	fstp   DWORD PTR ds:[ecx+0x1d]
  4044bd:	cdq    
  4044be:	stos   BYTE PTR es:[di],al
  4044c0:	popf   
  4044c1:	adc    DWORD PTR [eax-0x3d958735],ebp
  4044c7:	push   ss
  4044c8:	arpl   WORD PTR [ebx],ax
  4044ca:	out    0xe1,eax
  4044cc:	cmp    al,0x8a
  4044ce:	and    bl,BYTE PTR [edx-0x5c]
  4044d1:	sti    
  4044d2:	(bad)  [ebp+0x130100d2]
  4044d8:	inc    ebx
  4044d9:	sar    DWORD PTR [esi],0xa5
  4044dc:	(bad)  
  4044dd:	and    eax,DWORD PTR [edx+0x4f]
  4044e0:	repnz mov dh,0xb1
  4044e3:	inc    esi
  4044e4:	pop    ds
  4044e5:	jge    0x40455f
  4044e7:	aaa    
  4044e8:	sar    esi,cl
  4044ea:	xchg   ecx,eax
  4044eb:	add    BYTE PTR [eax+esi*2-0x5aa2085],dl
  4044f2:	xchg   edx,eax
  4044f3:	xchg   ebp,edi
  4044f5:	add    ebp,DWORD PTR [eax+0x77]
  4044f8:	sbb    DWORD PTR [esi-0x7d3abde3],edx
  4044fe:	push   ebp
  4044ff:	out    dx,eax
  404500:	jmp    0xcad:0x84f234f8
  404507:	mov    dl,0x8
  404509:	jmp    0x55976c83
  40450e:	or     ebx,DWORD PTR [esi-0x1a]
  404511:	cld    
  404512:	sti    
  404513:	mov    eax,0xe2395e67
  404518:	sbb    eax,0x8aa4dcc0
  40451d:	cli    
  40451e:	push   ds
  40451f:	xlat   BYTE PTR ds:[ebx]
  404520:	ret    
  404521:	cmp    eax,0x9b9cd83a
  404526:	imul   BYTE PTR [edi]
  404528:	sub    ebp,ebp
  40452a:	mov    ebp,0x4aec4cad
  40452f:	(bad)  
  404530:	(bad)  
  404532:	inc    ebx
  404533:	mov    dl,0xba
  404535:	cmp    edx,0x46cf7081
  40453b:	fidivr DWORD PTR [ecx*2+0x653fd22f]
  404542:	pop    ecx
  404543:	ins    DWORD PTR es:[edi],dx
  404544:	xchg   bh,ah
  404546:	mov    bh,0x88
  404548:	lock dec edi
  40454a:	fiadd  DWORD PTR [ebp+0x76]
  40454d:	mov    al,0x64
  40454f:	xchg   bh,ch
  404551:	fiadd  DWORD PTR [esp+eax*1+0x12]
  404555:	sti    
  404556:	add    DWORD PTR fs:[ebx+0x2d6c68af],esp
  40455d:	or     DWORD PTR ds:0x154e91a2,esi
  404563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404564:	fwait
  404565:	pmullw mm6,QWORD PTR [ebp+esi*4+0x4237040d]
  40456d:	mov    bh,0x18
  40456f:	and    BYTE PTR [eax],dl
  404571:	xor    bl,BYTE PTR [edi+0x3d]
  404574:	add    eax,DWORD PTR [edi-0x1a]
  404577:	and    eax,0xb7dee2f9
  40457c:	jp     0x404559
  40457e:	and    al,0x57
  404580:	ret    
  404581:	dec    edi
  404582:	dec    ebp
  404583:	sbb    DWORD PTR [esi+0x3f597357],0x51
  40458a:	sub    BYTE PTR [esi+0x5bfc2a7f],0x4a
  404591:	add    ah,BYTE PTR [ebx-0x26]
  404594:	push   ds
  404595:	(bad)
  404598:	outs   dx,BYTE PTR ds:[esi]
  404599:	inc    esi
  40459a:	loopne 0x4045e0
  40459c:	hlt    
  40459d:	xchg   ebp,eax
  40459e:	in     eax,0xa4
  4045a0:	loopne 0x4045f3
  4045a2:	jle    0xabf96f28
  4045a8:	jle    0x4045d3
  4045aa:	idiv   BYTE PTR [ebx+0x75]
  4045ad:	in     al,0xcb
  4045af:	lods   al,BYTE PTR ds:[esi]
  4045b0:	fs or  eax,0x43ba0f04
  4045b6:	pop    esi
  4045b7:	dec    eax
  4045b8:	xchg   ebx,eax
  4045b9:	mov    cl,0x15
  4045bb:	sub    bl,dh
  4045bd:	and    al,0x2d
  4045bf:	cmc    
  4045c0:	out    0x48,al
  4045c2:	outs   dx,BYTE PTR ds:[esi]
  4045c3:	outs   dx,DWORD PTR ds:[esi]
  4045c4:	xor    DWORD PTR [ecx-0x18],ecx
  4045c7:	repnz push es
  4045c9:	ret    
  4045ca:	out    dx,eax
  4045cb:	cmc    
  4045cc:	dec    edx
  4045cd:	mov    cl,0xc7
  4045cf:	rep outs dx,BYTE PTR ds:[esi]
  4045d1:	pop    esi
  4045d2:	cbw    
  4045d4:	call   0x9286:0xfaa9a392
  4045db:	mov    eax,ds:0x1fc07290
  4045e0:	pop    edi
  4045e1:	lock or eax,0x75f6ee7f
  4045e7:	loope  0x40463b
  4045e9:	pop    ds
  4045ea:	mov    DWORD PTR [ebx+0x145c3dad],0x74658c43
  4045f4:	(bad)  
  4045f5:	nop
  4045f6:	std    
  4045f7:	xor    ch,BYTE PTR ds:0x872bbc7b
  4045fd:	lea    edx,[esi+edi*4+0x2f5b4a95]
  404604:	ins    DWORD PTR es:[edi],dx
  404605:	mov    al,0xd1
  404607:	sar    bl,0xe1
  40460a:	in     eax,0xb3
  40460c:	dec    edx
  40460d:	imul   ebp,esp,0x8e35eb79
  404613:	jmp    0x404634
  404615:	std    
  404616:	(bad)  
  404617:	nop
  404618:	mov    dl,0xd1
  40461a:	leave  
  40461b:	xor    ch,BYTE PTR [ebp-0x6074af14]
  404621:	and    eax,0xc1289f6a
  404626:	add    BYTE PTR [ecx+0x50531dab],ch
  40462c:	pop    ebx
  40462d:	cld    
  40462e:	(bad)  [esi+0x736d08c7]
  404634:	call   0x9ed7becf
  404639:	sti    
  40463a:	xor    BYTE PTR [ebx+0x2a],bl
  40463d:	dec    ebx
  40463e:	outs   dx,BYTE PTR ds:[esi]
  40463f:	sti    
  404640:	popf   
  404641:	rcl    BYTE PTR [eax+eax*2+0x34],1
  404645:	lods   eax,DWORD PTR ds:[esi]
  404646:	jp     0x40469c
  404648:	cld    
  404649:	dec    esp
  40464a:	loop   0x40465b
  40464c:	and    BYTE PTR [eax+ebx*8+0x40],dl
  404650:	test   BYTE PTR [esi-0x50c754ba],0xda
  404657:	jnp    0x404699
  404659:	ins    DWORD PTR es:[edi],dx
  40465a:	and    esi,DWORD PTR [edx-0x11447c66]
  404660:	loope  0x40465d
  404662:	call   0xba8733c2
  404667:	mov    al,ds:0xdee7cfe9
  40466c:	inc    ecx
  40466d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40466e:	xor    BYTE PTR [ecx+0x1c],bl
  404671:	std    
  404672:	xor    cl,BYTE PTR [edx+0x75748f6]
  404678:	jbe    0x4046c0
  40467a:	pushf  
  40467b:	enter  0x7e2f,0xac
  40467f:	mov    ?,WORD PTR [edx]
  404681:	(bad)  
  404683:	pop    ebp
  404684:	fiadd  DWORD PTR [ecx]
  404686:	retf   0x637e
  404689:	inc    esp
  40468a:	rdtsc  
  40468c:	mov    bl,0xeb
  40468e:	daa    
  40468f:	sahf   
  404690:	mov    edx,0x55aea39d
  404695:	dec    eax
  404696:	in     eax,0x13
  404698:	jmp    0x8720:0x59dd250a
  40469f:	jmp    0x4046c2
  4046a1:	mov    ds:0xc5c03e1c,al
  4046a6:	int3   
  4046a7:	je     0x404696
  4046a9:	out    dx,al
  4046aa:	mov    bl,0x8f
  4046ac:	ret    
  4046ad:	mov    esi,0x8799a689
  4046b2:	xchg   edi,eax
  4046b3:	jp     0x40469c
  4046b5:	xchg   BYTE PTR [eax-0x43daef10],ah
  4046bb:	je     0x4046a0
  4046bd:	and    BYTE PTR [esi-0x79b5eb],bh
  4046c3:	lds    eax,FWORD PTR [ecx]
  4046c5:	pop    esi
  4046c6:	add    eax,0xb69220f3
  4046cb:	or     ecx,DWORD PTR [ecx-0x16628863]
  4046d1:	mov    dl,0x24
  4046d3:	pop    ebx
  4046d4:	ins    DWORD PTR es:[edi],dx
  4046d5:	adc    eax,DWORD PTR [esi-0x216983c9]
  4046db:	sbb    edx,DWORD PTR [edi+0x49]
  4046de:	loopne 0x404685
  4046e0:	imul   edx,DWORD PTR [eax],0xeb063a59
  4046e6:	call   0x53ed8e4
  4046eb:	aad    0x0
  4046ed:	xor    eax,0x3e01457f
  4046f2:	inc    ecx
  4046f3:	xor    al,0x43
  4046f5:	push   eax
  4046f6:	dec    edx
  4046f7:	or     DWORD PTR [ebp+0x6c],eax
  4046fa:	into   
  4046fb:	xchg   ecx,eax
  4046fc:	pop    es
  4046fd:	fcom   QWORD PTR [edi+0x22]
  404700:	push   es
  404701:	and    al,0x1c
  404703:	mov    esp,0x820ce1f
  404708:	adc    ch,BYTE PTR [esi+0x76ab8030]
  40470e:	enter  0x33d3,0x42
  404712:	ins    DWORD PTR es:[edi],dx
  404713:	stos   BYTE PTR es:[edi],al
  404714:	mov    al,ds:0xe33eace
  404719:	xchg   edx,eax
  40471a:	adc    BYTE PTR [ebx+0x0],ah
  40471d:	and    al,0xcc
  40471f:	(bad)  
  404720:	mov    edi,0x640aad7c
  404725:	in     eax,0x5e
  404727:	call   0xd9ce2482
  40472c:	ss call 0xe5e3999e
  404732:	arpl   si,di
  404734:	inc    ebx
  404735:	scas   al,BYTE PTR es:[edi]
  404736:	push   esp
  404737:	(bad)  
  404739:	dec    esi
  40473a:	loope  0x404799
  40473c:	call   0x47e258fd
  404741:	je     0x404760
  404743:	imul   edx,DWORD PTR [ebp-0x1daa5589],0x26
  40474a:	jb     0x404742
  40474c:	xor    DWORD PTR [edx+0x14c5084c],0xffffffe8
  404753:	mov    ebx,edx
  404755:	fs mov cl,0x9
  404758:	mov    dl,0x7b
  40475a:	dec    BYTE PTR [ebx+edx*1]
  40475d:	inc    ebx
  40475e:	into   
  40475f:	push   0xd3942170
  404764:	imul   esi,edx,0x7d
  404767:	pop    ds
  404768:	call   0xbb8a5843
  40476d:	push   esp
  40476e:	adc    ch,BYTE PTR [ebx]
  404770:	sub    al,0x43
  404772:	(bad)  
  404773:	cmp    eax,0x513b2edc
  404778:	call   0x1722:0xade0c38c
  40477f:	mov    al,0xb6
  404781:	jp     0x404729
  404783:	jnp    0x40477b
  404785:	icebp  
  404786:	adc    BYTE PTR [esi+esi*2],0x75
  40478a:	(bad)  
  40478c:	call   0x4cd3d7
  404791:	mov    bh,0x18
  404793:	and    DWORD PTR [ebx],0x56
  404796:	rol    BYTE PTR [edx],1
  404798:	daa    
  404799:	cmc    
  40479a:	cmp    BYTE PTR [eax+ebp*2],bl
  40479d:	sbb    esi,DWORD PTR [ebx+ebx*1]
  4047a0:	inc    eax
  4047a1:	mov    eax,ds:0xcd64911c
  4047a6:	das    
  4047a7:	or     cl,al
  4047a9:	dec    ecx
  4047aa:	mov    al,0x23
  4047ac:	jno    0x4047ea
  4047ae:	jge    0x4047c3
  4047b0:	mov    bl,0xdb
  4047b2:	les    edi,FWORD PTR [ecx-0x79]
  4047b5:	xchg   edi,eax
  4047b6:	or     DWORD PTR [esi+0x37],esi
  4047b9:	and    eax,0xfb6c5ba0
  4047be:	pop    es
  4047bf:	inc    esi
  4047c0:	push   ecx
  4047c1:	das    
  4047c2:	dec    ebp
  4047c3:	mov    eax,ds:0x5a1064e7
  4047c8:	jge    0x40479a
  4047ca:	ins    BYTE PTR es:[edi],dx
  4047cb:	mov    DWORD PTR [edi+0x1c],esi
  4047ce:	fs daa 
  4047d0:	out    0x13,al
  4047d2:	test   DWORD PTR [ebx-0x3550b371],ebx
  4047d8:	inc    esp
  4047d9:	(bad)  
  4047db:	cmp    DWORD PTR [ebx+edi*2-0x72],0x48beff47
  4047e3:	call   0x2479:0xaa15ee78
  4047ea:	sar    DWORD PTR [esi+esi*1],0xac
  4047ee:	push   ebp
  4047ef:	jae    0x40479a
  4047f1:	add    ah,cl
  4047f3:	lock mov eax,ds:0xade50629
  4047f9:	mov    ds:0x3cec2428,eax
  4047fe:	push   es
  4047ff:	cmp    DWORD PTR [edi+0x70],0x18e26d0d
  404806:	iret   
  404807:	mov    bl,0x1d
  404809:	sbb    al,0x4a
  40480b:	stos   DWORD PTR es:[edi],eax
  40480c:	mov    ds:0x7ab8f720,eax
  404811:	adc    DWORD PTR [ecx],eax
  404813:	pop    esp
  404814:	xor    BYTE PTR [ecx+0x1d29777f],0xe0
  40481b:	outs   dx,DWORD PTR es:[esi]
  40481d:	pop    es
  40481e:	call   edi
  404820:	dec    eax
  404821:	xchg   ecx,eax
  404822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404823:	pop    edx
  404824:	mov    ebp,0xfcd7fc84
  404829:	jmp    0x4047c1
  40482b:	sub    eax,0x68a909cc
  404830:	js     0x4048a7
  404832:	(bad)  
  404833:	rcl    ebp,cl
  404835:	adc    dh,dh
  404837:	test   eax,0x6f559793
  40483c:	jp     0x40484f
  40483e:	shr    BYTE PTR [ecx-0x12],1
  404841:	push   ebp
  404842:	in     al,dx
  404843:	into   
  404844:	push   0x7c92cea5
  404849:	cmp    BYTE PTR [ecx+esi*4],ch
  40484c:	jno    0x404803
  40484e:	outs   dx,DWORD PTR ds:[esi]
  40484f:	call   DWORD PTR [esi+0x2b728dbc]
  404855:	bound  ecx,QWORD PTR [ebp+edi*4+0x1]
  404859:	hlt    
  40485a:	dec    ecx
  40485b:	jb     0x4047f7
  40485d:	xchg   DWORD PTR [eax-0x44567ca5],esp
  404863:	call   0x39660319
  404868:	mov    eax,0x2ede8cfd
  40486d:	dec    ebx
  40486e:	xor    DWORD PTR [edi+0x49992011],0x3f27b1cb
  404878:	sub    edi,ecx
  40487a:	adc    BYTE PTR [eax-0x6f],al
  40487d:	xchg   ecx,eax
  40487e:	lock push ebp
  404880:	dec    ebx
  404881:	mov    al,dh
  404883:	add    BYTE PTR [ebp-0x646884ad],ch
  404889:	ins    BYTE PTR es:[edi],dx
  40488a:	sti    
  40488b:	pop    ss
  40488c:	mov    bh,0x68
  40488e:	out    dx,al
  40488f:	mov    ch,0xfa
  404891:	and    ah,dh
  404893:	data16 sub BYTE PTR [ebx-0xe0431c6],0x6e
  40489b:	cmp    ch,BYTE PTR [eax]
  40489d:	in     eax,dx
  40489e:	mov    ds:0xb9d4b54d,al
  4048a3:	ins    BYTE PTR es:[edi],dx
  4048a4:	iret   
  4048a5:	inc    edx
  4048a6:	sbb    ebx,DWORD PTR [esi+0x32]
  4048a9:	adc    eax,DWORD PTR [esi-0x4536986d]
  4048af:	(bad)  
  4048b0:	fst    st(0)
  4048b2:	push   es
  4048b3:	fistp  DWORD PTR [edi-0x1d]
  4048b6:	cmp    DWORD PTR [ebx+0x21a073f],edx
  4048bc:	pop    eax
  4048bd:	in     eax,0x2e
  4048bf:	sbb    eax,0xa39314f0
  4048c4:	ret    
  4048c5:	push   ebp
  4048c6:	in     al,dx
  4048c7:	adc    DWORD PTR [eax],edx
  4048c9:	in     eax,0xe8
  4048cb:	sub    esi,DWORD PTR [ecx+0x52]
  4048ce:	jle    0x404869
  4048d0:	out    dx,eax
  4048d1:	sti    
  4048d2:	cmp    DWORD PTR [eax+ecx*8+0x58],0xc734edd1
  4048da:	cdq    
  4048db:	jl     0x4048e3
  4048dd:	add    bl,ch
  4048df:	or     BYTE PTR [ecx+0x1b],0x23
  4048e3:	(bad)  
  4048e4:	stos   BYTE PTR es:[edi],al
  4048e5:	repnz nop
  4048e7:	jnp    0x404939
  4048e9:	and    al,0x5a
  4048eb:	call   0x56ca0b67
  4048f0:	cmp    BYTE PTR [esi-0x23],dh
  4048f3:	dec    edx
  4048f4:	imul   ebx,DWORD PTR [edx],0x1f24acc9
  4048fa:	mov    dl,0x7f
  4048fc:	lea    ebx,cs:[eax]
  4048ff:	mov    ebx,0x581e3103
  404904:	mov    BYTE PTR [bx+0x6d],al
  404908:	sbb    esp,DWORD PTR [edi-0x7c]
  40490b:	mov    es,WORD PTR [esi-0x3a876d56]
  404911:	stos   DWORD PTR es:[edi],eax
  404912:	sub    cl,BYTE PTR [esi+ebp*1-0x32e5d3cd]
  404919:	aad    0xb9
  40491b:	push   ebx
  40491c:	jnp    0x404984
  40491e:	sbb    al,0xe4
  404920:	ret    
  404921:	sbb    DWORD PTR ds:0xf314f996,ecx
  404927:	xor    esp,edi
  404929:	push   0x778ace3c
  40492e:	cmp    BYTE PTR [ebx],cl
  404930:	hlt    
  404931:	cwde   
  404932:	mov    edx,ebp
  404934:	inc    esp
  404935:	adc    eax,0xccdad926
  40493a:	mov    al,ds:0x466c17f3
  40493f:	jl     0x404966
  404941:	or     DWORD PTR [edi+ebp*4-0x401d33e2],0xd9f63dda
  40494c:	ins    DWORD PTR es:[edi],dx
  40494d:	pop    eax
  40494e:	push   edi
  40494f:	js     0x404930
  404951:	loop   0x4048ff
  404953:	pop    edx
  404954:	scas   al,BYTE PTR es:[edi]
  404955:	mov    ds,WORD PTR ds:0x823a7b4f
  40495b:	push   0xffffffe2
  40495d:	rcr    DWORD PTR [edi-0x19cb229c],0xdb
  404964:	test   al,0x0
  404966:	dec    eax
  404967:	xor    BYTE PTR ds:0x2bb09c17,dh
  40496d:	std    
  40496e:	(bad)  
  40496f:	popa   
  404970:	pop    ds
  404971:	or     al,0x37
  404973:	jmp    0x40491c
  404975:	mov    edi,0x749a1ed5
  40497a:	jp     0x404982
  40497c:	leave  
  40497d:	sbb    bh,ah
  40497f:	pusha  
  404980:	call   FWORD PTR [edx]
  404982:	dec    ebx
  404983:	stc    
  404984:	fbld   TBYTE PTR [edx+0x2e7b294f]
  40498a:	out    dx,al
  40498b:	dec    edi
  40498c:	das    
  40498d:	push   ebx
  40498e:	test   BYTE PTR [eax],bl
  404990:	sub    edx,edx
  404992:	cs push esp
  404994:	fisttp QWORD PTR [ecx-0x2e]
  404997:	mov    ch,0xb
  404999:	stos   BYTE PTR es:[edi],al
  40499a:	mov    ds:0x4e40703e,eax
  40499f:	mov    ebp,gs
  4049a1:	cld    
  4049a2:	jge    0x404a08
  4049a4:	jmp    0x9cec:0xed327f80
  4049ab:	mov    WORD PTR [esi+eiz*1-0x41],ds
  4049af:	add    DWORD PTR [edx+0x3a],esi
  4049b2:	(bad)  
  4049b3:	repz mov esi,DWORD PTR [eax-0x28]
  4049b7:	or     edx,DWORD PTR [ebx+0x207af6a4]
  4049bd:	retf   0x740f
  4049c0:	ds dec esi
  4049c2:	dec    esp
  4049c3:	mov    WORD PTR [ebx-0x16],ss
  4049c6:	xor    eax,0x83a8b2d4
  4049cb:	dec    edx
  4049cc:	(bad)  
  4049ce:	pusha  
  4049cf:	jnp    0x4049a9
  4049d1:	jnp    0x404a40
  4049d3:	dec    ebx
  4049d4:	ds lahf 
  4049d6:	repz add BYTE PTR [eax+0x1cc9a0ea],cl
  4049dd:	pop    edx
  4049de:	arpl   WORD PTR [eax+0x63f01121],di
  4049e4:	xchg   ch,bh
  4049e6:	ror    dh,1
  4049e8:	push   eax
  4049e9:	and    BYTE PTR [ebx+0x584eb54c],cl
  4049ef:	lock out 0xe4,eax
  4049f2:	dec    eax
  4049f3:	(bad)  
  4049f4:	adc    eax,0xd028ff36
  4049f9:	push   ecx
  4049fa:	out    dx,eax
  4049fb:	inc    edx
  4049fc:	ret    
  4049fd:	pop    ss
  4049fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ff:	fcom   DWORD PTR [ebx+0x31]
  404a02:	jae    0x4049dc
  404a04:	ret    
  404a05:	fidiv  WORD PTR [ebp-0x626f6aa5]
  404a0b:	inc    edi
  404a0c:	mov    bl,0xd9
  404a0e:	test   DWORD PTR [edi+ebp*1+0x2b55d257],esp
  404a15:	int3   
  404a16:	mov    ds:0x5c51d806,eax
  404a1b:	scas   al,BYTE PTR es:[edi]
  404a1c:	jns    0x404a06
  404a1e:	nop
  404a1f:	inc    ebx
  404a20:	jle    0x404a01
  404a22:	or     al,0x21
  404a24:	daa    
  404a25:	push   esi
  404a26:	scas   al,BYTE PTR es:[edi]
  404a27:	lods   al,BYTE PTR ds:[esi]
  404a28:	xor    eax,0x13310c29
  404a2d:	call   0xb621:0x474de80a
  404a34:	hlt    
  404a35:	out    0x4e,eax
  404a37:	mov    dl,0x59
  404a39:	call   0xaaaa0161
  404a3e:	mov    BYTE PTR [esp+esi*2-0x29],dl
  404a42:	cld    
  404a43:	or     DWORD PTR [eax],0xc27b3b67
  404a49:	or     BYTE PTR [esi+0x36],bl
  404a4c:	dec    edi
  404a4d:	inc    esp
  404a4e:	and    edi,DWORD PTR [esi]
  404a50:	sti    
  404a51:	test   al,0xc0
  404a53:	or     eax,0xe174e6ff
  404a58:	or     ah,BYTE PTR [eax+0x28f02dcd]
  404a5e:	in     eax,dx
  404a5f:	fcomp  QWORD PTR [esi+0x2c]
  404a62:	xchg   ecx,eax
  404a63:	add    bl,BYTE PTR [ecx]
  404a65:	jmp    0x1245:0x85802316
  404a6c:	mov    WORD PTR [edi-0x44],?
  404a6f:	add    cl,BYTE PTR [ecx-0x5a413ecc]
  404a75:	mov    dh,dh
  404a77:	mov    ch,0xa1
  404a79:	js     0x404a4e
  404a7b:	arpl   WORD PTR [edi],dx
  404a7d:	rcr    esi,1
  404a7f:	add    eax,0x3b5d4ecf
  404a84:	jne    0x404aae
  404a86:	inc    ebx
  404a87:	jg     0x404a83
  404a89:	push   ss
  404a8a:	pushf  
  404a8b:	xchg   ebx,eax
  404a8c:	sub    ebp,DWORD PTR ss:0xbdf9e545
  404a93:	jecxz  0x404a49
  404a95:	out    dx,al
  404a96:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404a98:	push   es
  404a99:	dec    eax
  404a9a:	xor    DWORD PTR [edi+0x2d4c64ca],0xa79a91
  404aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa5:	push   ss
  404aa6:	sub    ebp,DWORD PTR ds:0xddd19ff4
  404aac:	ret    
  404aad:	xor    eax,0x8c176756
  404ab2:	fwait
  404ab3:	pop    ecx
  404ab4:	adc    ecx,DWORD PTR [esi+eax*2-0x1baec95a]
  404abb:	mov    dh,0x7e
  404abd:	dec    ebx
  404abe:	jae    0x404b26
  404ac0:	jmp    0x29760402
  404ac5:	sbb    al,0xff
  404ac7:	mov    eax,0x8ff506cd
  404acc:	pop    ebx
  404acd:	jmp    0xfb9eb517
  404ad2:	js     0x404afc
  404ad4:	je     0x404ab8
  404ad6:	sti    
  404ad7:	push   0x1a
  404ad9:	sahf   
  404ada:	mov    bh,0x8e
  404adc:	cld    
  404add:	stc    
  404ade:	add    cl,BYTE PTR [esi-0x29ffb145]
  404ae4:	xor    bl,bh
  404ae6:	xor    eax,esp
  404ae8:	xchg   esi,eax
  404ae9:	sub    al,0xd6
  404aeb:	pushf  
  404aec:	lahf   
  404aed:	(bad)  
  404aee:	fldenv [edx]
  404af0:	pop    esi
  404af1:	(bad)  
  404af2:	hlt    
  404af3:	sub    al,0xbf
  404af5:	pop    ss
  404af6:	dec    ecx
  404af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af8:	cld    
  404af9:	pop    edx
  404afa:	cmp    al,BYTE PTR [ecx+0x36]
  404afd:	push   ss
  404afe:	das    
  404aff:	ror    edi,1
  404b01:	adc    DWORD PTR [edi-0x4c],edi
  404b04:	xchg   DWORD PTR [eax+0x4],ebx
  404b07:	arpl   WORD PTR [esi-0x2e6c6f68],di
  404b0d:	pop    esp
  404b0e:	xchg   esi,eax
  404b0f:	pop    es
  404b10:	(bad)  
  404b12:	scas   al,BYTE PTR es:[edi]
  404b13:	pop    ebx
  404b14:	dec    esp
  404b15:	fbstp  TBYTE PTR [esi]
  404b17:	ja     0x404af8
  404b19:	xor    eax,0x8277b5ff
  404b1e:	sbb    dh,BYTE PTR [ebp+0x5e]
  404b21:	loope  0x404aeb
  404b23:	or     BYTE PTR [edx],bl
  404b25:	pop    ecx
  404b26:	sbb    eax,0xcc03843d
  404b2b:	lods   eax,DWORD PTR ds:[esi]
  404b2c:	mov    cl,0xc3
  404b2e:	mov    ah,0x61
  404b30:	mov    DWORD PTR [edi-0x14c25bd],0x7ef55163
  404b3a:	add    edx,DWORD PTR [ecx+0x46]
  404b3d:	or     al,ch
  404b3f:	(bad)  
  404b40:	sub    DWORD PTR [ecx+0x5a7cce90],esi
  404b46:	xchg   esp,eax
  404b47:	add    dh,dl
  404b49:	push   ds
  404b4a:	add    ch,BYTE PTR [edx]
  404b4c:	dec    ebp
  404b4d:	push   esp
  404b4e:	adc    cl,BYTE PTR [ebp-0x53]
  404b51:	aaa    
  404b52:	pusha  
  404b53:	(bad)  
  404b54:	xor    DWORD PTR [ecx+0x62ce15ec],edi
  404b5a:	xchg   esi,eax
  404b5b:	push   0xffffffd2
  404b5d:	ret    0x9c4b
  404b60:	push   es
  404b61:	cwde   
  404b62:	fcomp  st(4)
  404b64:	pop    eax
  404b65:	push   ds
  404b66:	jl     0x404bd9
  404b68:	pop    esp
  404b69:	(bad)
  404b6d:	jecxz  0x404b5c
  404b6f:	addr16 mov edx,0x15a13e5
  404b75:	in     eax,dx
  404b76:	and    al,0xc8
  404b78:	mov    dl,0x6b
  404b7a:	adc    eax,edx
  404b7c:	adc    ebp,DWORD PTR [edx-0x6129b74c]
  404b82:	in     al,dx
  404b83:	retf   
  404b84:	push   ds
  404b85:	in     al,dx
  404b86:	ins    DWORD PTR es:[edi],dx
  404b87:	push   ebx
  404b88:	pop    ecx
  404b89:	int3   
  404b8a:	mov    ah,0xea
  404b8c:	out    0xe3,al
  404b8e:	push   edi
  404b8f:	push   esp
  404b90:	jmp    0x404b63
  404b92:	cwde   
  404b93:	int    0x23
  404b95:	sahf   
  404b96:	clc    
  404b97:	xchg   esi,eax
  404b98:	adc    eax,0xcfc51330
  404b9d:	out    0x7b,eax
  404b9f:	xchg   ebp,eax
  404ba0:	sar    DWORD PTR [esi+0x36],1
  404ba3:	(bad)  
  404ba5:	mov    eax,ds:0x75d52523
  404baa:	jmp    0x404be1
  404bac:	iret   
  404bad:	dec    ebx
  404bae:	xchg   ecx,eax
  404baf:	out    0xab,eax
  404bb1:	mov    al,0x15
  404bb3:	fst    DWORD PTR [eax-0x138faa9c]
  404bb9:	sbb    dl,BYTE PTR [eax]
  404bbb:	fsubr  QWORD PTR [ebx+eiz*1]
  404bbe:	iret   
  404bbf:	leave  
  404bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc1:	xor    DWORD PTR [esi+0x3a93273],0xffffffe2
  404bc8:	cwde   
  404bc9:	iret   
  404bca:	fst    DWORD PTR [ecx+0x3b]
  404bcd:	test   ebx,ebx
  404bcf:	or     esi,DWORD PTR [edx-0x19]
  404bd2:	jp     0x404b72
  404bd4:	nop
  404bd5:	cdq    
  404bd6:	out    0x12,eax
  404bd8:	sahf   
  404bd9:	mov    esp,0xe8279e1
  404bde:	sbb    BYTE PTR ds:0xc54ab6b5,ah
  404be4:	inc    edi
  404be5:	sub    edi,esi
  404be7:	cmc    
  404be8:	sub    BYTE PTR [ebx+edi*8+0x33],dl
  404bec:	push   0x4a63e79a
  404bf1:	rdtsc  
  404bf3:	loopne 0x404c4f
  404bf5:	outs   dx,DWORD PTR ds:[esi]
  404bf6:	pusha  
  404bf7:	(bad)  
  404bf8:	test   DWORD PTR [ecx+0x21c8b4f7],0xc0001043
  404c02:	pushw  0xf215
  404c06:	imul   edi,DWORD PTR [edi],0x9759b3e9
  404c0c:	add    esp,eax
  404c0e:	xchg   BYTE PTR [edx-0x27],bh
  404c11:	mov    ch,0xf
  404c13:	and    al,0x64
  404c15:	mov    al,0xca
  404c17:	sub    DWORD PTR [ebp-0x66],edi
  404c1a:	(bad)  
  404c1b:	ja     0x404c7d
  404c1d:	pop    ebx
  404c1e:	imul   esp,DWORD PTR [eax],0xfffffff8
  404c21:	xchg   edi,eax
  404c22:	jne    0x404bf6
  404c24:	stos   BYTE PTR es:[edi],al
  404c25:	cli    
  404c26:	sbb    DWORD PTR [ecx+0x36b14175],ecx
  404c2c:	mov    DWORD PTR [bp+si+0x45ca],eax
  404c31:	(bad)  
  404c32:	push   esp
  404c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c34:	mov    WORD PTR [eax+ebp*4+0x2],ds
  404c38:	pop    ss
  404c39:	frstor [ecx+0x5cce9814]
  404c3f:	lods   al,BYTE PTR ds:[esi]
  404c40:	ins    BYTE PTR es:[edi],dx
  404c41:	pop    esi
  404c42:	add    DWORD PTR [ebp+0x5d],esp
  404c45:	fadd   st,st(5)
  404c47:	push   esi
  404c48:	scas   eax,DWORD PTR es:[edi]
  404c49:	mov    BYTE PTR [edx-0x2f87c70f],dh
  404c4f:	icebp  
  404c50:	mov    BYTE PTR [esp+edi*2],al
  404c53:	or     BYTE PTR [edx],0x8f
  404c56:	xchg   esp,eax
  404c57:	retf   
  404c58:	push   esp
  404c59:	retf   
  404c5a:	jl     0x404bfe
  404c5c:	addr16 (bad) 
  404c5e:	jecxz  0x404c6b
  404c60:	mov    ds:0x86e93493,eax
  404c65:	and    bl,BYTE PTR [ebp+esi*1-0x51]
  404c69:	test   al,0xd6
  404c6b:	cmp    ch,BYTE PTR [ecx]
  404c6d:	aam    0xfb
  404c6f:	sub    BYTE PTR [edi+0x4c4cba9e],0xb4
  404c76:	pop    eax
  404c77:	dec    DWORD PTR [edi]
  404c79:	stos   DWORD PTR es:[edi],eax
  404c7a:	jbe    0x404c96
  404c7c:	neg    esi
  404c7e:	fwait
  404c7f:	inc    edi
  404c80:	and    DWORD PTR [ebp-0x5a],edx
  404c83:	fldpi  
  404c85:	inc    esp
  404c86:	stos   BYTE PTR es:[edi],al
  404c87:	aaa    
  404c88:	test   BYTE PTR [ecx],0xce
  404c8b:	sahf   
  404c8c:	inc    ecx
  404c8d:	stos   DWORD PTR es:[edi],eax
  404c8e:	adc    DWORD PTR [ebx],eax
  404c90:	xchg   esp,eax
  404c91:	mov    cl,0xea
  404c93:	out    dx,al
  404c94:	mov    dl,0x58
  404c96:	xchg   DWORD PTR [edi+esi*1-0x5acb8672],ecx
  404c9d:	adc    dh,BYTE PTR [edx+ecx*4]
  404ca0:	pop    ecx
  404ca1:	inc    eax
  404ca2:	and    dl,dh
  404ca4:	or     al,0x17
  404ca6:	js     0x404caa
  404ca8:	sti    
  404ca9:	inc    edx
  404caa:	mov    ch,0xb4
  404cac:	and    al,0x70
  404cae:	mov    edx,0xfbe36f6e
  404cb3:	and    DWORD PTR [ebp+0x2226a82c],esi
  404cb9:	add    eax,0x6305641a
  404cbe:	clc    
  404cbf:	outs   dx,DWORD PTR ds:[esi]
  404cc0:	nop
  404cc1:	mov    bl,0x46
  404cc3:	test   al,0xc5
  404cc5:	(bad)  
  404cc6:	xor    BYTE PTR [ecx+0x38],dh
  404cc9:	(bad)  [edi]
  404ccb:	mov    ebx,0xb54ad1b0
  404cd0:	in     al,dx
  404cd1:	out    dx,eax
  404cd2:	lock push esp
  404cd4:	arpl   WORD PTR [ecx+edi*2],cx
  404cd7:	pop    ds
  404cd8:	daa    
  404cd9:	dec    ebp
  404cda:	fimul  DWORD PTR [ecx]
  404cdc:	mov    edx,0x73278a62
  404ce1:	and    BYTE PTR es:[ebx-0x5cd0e368],0x8e
  404ce9:	jnp    0x404d38
  404ceb:	mov    edi,0xa4bf88f9
  404cf0:	(bad)  
  404cf2:	enter  0x805a,0x98
  404cf6:	jmp    DWORD PTR [eax-0x4f9ad349]
  404cfc:	inc    edx
  404cfd:	push   eax
  404cfe:	adc    BYTE PTR [esi],ch
  404d00:	sub    DWORD PTR [edx-0x80],edx
  404d03:	jmp    0xe386a7fc
  404d08:	repnz cli 
  404d0a:	mov    bl,0x86
  404d0c:	fst    QWORD PTR cs:[edx-0x33]
  404d10:	add    bl,BYTE PTR [edi]
  404d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d13:	mov    cl,0x57
  404d15:	fcmovu st,st(6)
  404d17:	mov    ch,0xeb
  404d19:	sar    DWORD PTR [esi+0x2e],cl
  404d1c:	xchg   ebx,eax
  404d1d:	mov    bh,0xf
  404d1f:	loopne 0x404d9a
  404d21:	cmp    DWORD PTR [esp+ebp*2-0x80],edx
  404d25:	stos   BYTE PTR es:[edi],al
  404d26:	in     eax,0x81
  404d28:	dec    edi
  404d29:	push   ebx
  404d2a:	rol    BYTE PTR [ebp+0x2305b920],cl
  404d30:	xchg   ebp,eax
  404d31:	in     eax,dx
  404d32:	mov    cl,0x18
  404d34:	pop    ebx
  404d35:	mov    BYTE PTR [edx],ch
  404d37:	mov    bh,0x5d
  404d39:	jo     0x404cd7
  404d3b:	sahf   
  404d3c:	test   eax,0x9bb3468
  404d41:	sbb    dh,BYTE PTR [edi+0xa13ed]
  404d47:	push   es
  404d48:	push   esi
  404d49:	pop    es
  404d4a:	dec    ebx
  404d4b:	inc    esp
  404d4c:	or     BYTE PTR [edx],0xb2
  404d4f:	and    esp,DWORD PTR [esp+eax*8+0x60]
  404d53:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  404d55:	mov    ecx,0xbee7ee6
  404d5a:	std    
  404d5b:	push   ecx
  404d5c:	and    DWORD PTR [ebx+0x51],eax
  404d5f:	jg     0x404cf8
  404d61:	test   DWORD PTR [edx],ebp
  404d63:	aaa    
  404d64:	xor    BYTE PTR [ebx],dh
  404d66:	shl    DWORD PTR [esi],1
  404d68:	and    DWORD PTR [ebp-0x78],esi
  404d6b:	outs   dx,DWORD PTR ds:[esi]
  404d6c:	mov    edx,0x39648c67
  404d71:	jmp    0xada034f3
  404d76:	rcl    DWORD PTR [eax-0x44],cl
  404d79:	sbb    bh,al
  404d7b:	nop
  404d7c:	rcr    BYTE PTR [ebx],cl
  404d7e:	xor    eax,0xd38c5e7
  404d83:	mov    ch,0x4a
  404d85:	loop   0x404d58
  404d87:	lods   al,BYTE PTR ds:[esi]
  404d88:	push   edi
  404d89:	(bad)  
  404d8b:	pop    ecx
  404d8c:	scas   eax,DWORD PTR es:[edi]
  404d8d:	sbb    al,0x4a
  404d8f:	xor    esp,DWORD PTR [ebx+0x476a33f7]
  404d95:	inc    ecx
  404d96:	adc    eax,0xa64e4acf
  404d9b:	or     DWORD PTR [esi],0xffffffee
  404d9e:	dec    ecx
  404d9f:	push   ss
  404da0:	lods   al,BYTE PTR ds:[esi]
  404da1:	mov    esi,0x1a27f944
  404da6:	jp     0x404dbc
  404da8:	data16 jb 0x404dae
  404dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dac:	mov    ebx,0x765ad57c
  404db1:	dec    ebx
  404db2:	mov    bl,0x49
  404db4:	div    BYTE PTR [ebx]
  404db6:	sbb    ch,dh
  404db8:	xchg   ecx,eax
  404db9:	mov    dh,BYTE PTR fs:[eax]
  404dbc:	mov    ch,0xd0
  404dbe:	(bad)  
  404dbf:	out    dx,al
  404dc0:	xor    BYTE PTR [eax+0x3a3a1be4],bh
  404dc6:	jns    0x404dc3
  404dc8:	pushf  
  404dc9:	mov    ch,0x7b
  404dcb:	and    ebp,esp
  404dcd:	aaa    
  404dce:	jmp    0x404e47
  404dd0:	sbb    dh,dh
  404dd2:	lods   al,BYTE PTR ds:[esi]
  404dd3:	pop    ecx
  404dd4:	scas   al,BYTE PTR es:[edi]
  404dd5:	jle    0x404d8b
  404dd7:	jns    0x404d76
  404dd9:	enter  0xd15b,0x74
  404ddd:	cmp    al,0x9
  404ddf:	jno    0x404d9f
  404de1:	add    BYTE PTR [esi+esi*2],bl
  404de4:	ret    0xbd3
  404de7:	jp     0x404dea
  404de9:	mov    bh,0xf4
  404deb:	daa    
  404dec:	and    eax,0xb2c349c0
  404df1:	es cdq 
  404df3:	pop    ds
  404df4:	jmp    0x8af3449e
  404df9:	lds    edx,FWORD PTR [ecx]
  404dfb:	out    dx,al
  404dfc:	cmp    DWORD PTR [edx-0x6],edi
  404dff:	frstor [ebp+0x703e3e34]
  404e05:	xor    BYTE PTR [esi],bh
  404e07:	jg     0x404e15
  404e09:	retf   0xc572
  404e0c:	ja     0x404e8c
  404e0e:	jae    0x404db1
  404e10:	bound  edi,QWORD PTR [eax+0x34532d86]
  404e16:	inc    edx
  404e17:	add    edx,DWORD PTR ds:0x799431fa
  404e1d:	dec    edx
  404e1e:	push   ebp
  404e1f:	or     BYTE PTR ss:[edi-0xa],0x60
  404e24:	pop    esi
  404e25:	fisttp DWORD PTR [ebx]
  404e27:	dec    esi
  404e28:	sub    DWORD PTR [ebp-0x20cb8256],ecx
  404e2e:	stc    
  404e2f:	dec    ebx
  404e30:	mov    ds:0x3a916755,al
  404e35:	adc    dl,ah
  404e37:	pop    edi
  404e38:	mov    eax,ds:0x94731ddb
  404e3d:	mov    dh,0xbd
  404e3f:	xchg   ebp,eax
  404e40:	std    
  404e41:	loope  0x404df5
  404e43:	stc    
  404e44:	sbb    eax,0xae154ec7
  404e49:	mov    edi,eax
  404e4b:	arpl   WORD PTR [esi-0x5a],di
  404e4e:	xchg   DWORD PTR [ebx+edi*2-0x473183eb],ebp
  404e55:	and    BYTE PTR [ecx],bh
  404e57:	mov    bl,bl
  404e59:	dec    ecx
  404e5a:	fimul  DWORD PTR [ecx]
  404e5c:	or     dl,BYTE PTR [ecx+0x23b090fd]
  404e62:	call   0x946f:0x97764ba6
  404e69:	and    DWORD PTR ds:0xe757f474,esi
  404e6f:	aam    0x82
  404e71:	sbb    eax,0x9325cfc1
  404e76:	rcl    DWORD PTR [ebx-0x2d4b63bf],cl
  404e7c:	push   eax
  404e7d:	loope  0x404ef5
  404e7f:	pusha  
  404e80:	cmp    al,0xa
  404e82:	aam    0x86
  404e84:	loope  0x404e1f
  404e86:	pop    eax
  404e87:	mov    dl,0x87
  404e89:	or     al,0xac
  404e8b:	xor    BYTE PTR [ebx],dh
  404e8d:	jns    0x404ee2
  404e8f:	cmp    dl,bl
  404e91:	mov    ecx,0x58944b44
  404e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e97:	xchg   ecx,eax
  404e98:	inc    ecx
  404e99:	loop   0x404e66
  404e9b:	inc    edx
  404e9c:	imul   edi,DWORD PTR [ebx+0x16e41825],0xc03c1ab
  404ea6:	cs stc 
  404ea8:	mov    bl,0x9c
  404eaa:	aaa    
  404eab:	popf   
  404eac:	mov    ch,0x4b
  404eae:	cwde   
  404eaf:	sub    eax,0xbe25a2b0
  404eb4:	daa    
  404eb5:	pop    ecx
  404eb6:	xchg   ecx,eax
  404eb7:	adc    al,ch
  404eb9:	mov    al,ds:0x39e5c887
  404ebe:	mov    edx,0xa8c8153a
  404ec3:	push   cs
  404ec4:	push   ebx
  404ec5:	or     eax,0x59dcd969
  404eca:	mov    WORD PTR [esi+edx*8],es
  404ecd:	fidiv  WORD PTR [ecx]
  404ecf:	dec    esi
  404ed0:	xor    edx,0x2875d4da
  404ed6:	push   ebp
  404ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ed8:	nop
  404ed9:	pop    eax
  404eda:	mov    edi,0x5082b7ce
  404edf:	dec    al
  404ee1:	sbb    DWORD PTR [edi-0x55a10710],edx
  404ee7:	in     eax,dx
  404ee8:	pop    esp
  404ee9:	daa    
  404eea:	add    esp,DWORD PTR [ecx+edx*2]
  404eed:	lods   eax,DWORD PTR ds:[esi]
  404eee:	mov    ch,0xb1
  404ef0:	loopne 0x404f0e
  404ef2:	(bad)  [edi]
  404ef4:	(bad)  
  404ef6:	cmp    al,BYTE PTR [eax+0x6c1dbd8c]
  404efc:	hlt    
  404efd:	xchg   ebx,eax
  404efe:	mov    esp,0x84b65d48
  404f03:	adc    cl,BYTE PTR [ecx+ebx*4]
  404f06:	or     al,BYTE PTR [esi]
  404f08:	sar    DWORD PTR [eax-0x1c41b015],1
  404f0e:	lock adc DWORD PTR [ebx],eax
  404f11:	jb     0x404f5c
  404f13:	stos   DWORD PTR es:[edi],eax
  404f14:	mov    ebp,0x470968ab
  404f19:	fstp   st(3)
  404f1b:	or     al,0x19
  404f1d:	call   edx
  404f1f:	iret   
  404f20:	or     esi,DWORD PTR [ecx-0x1a03cb52]
  404f26:	popf   
  404f27:	cmp    esp,DWORD PTR [edi+0x9]
  404f2a:	xchg   edx,eax
  404f2b:	test   esi,0x128c81c9
  404f31:	push   esp
  404f32:	inc    ecx
  404f33:	mov    dl,0x7d
  404f35:	dec    ebx
  404f36:	out    0x9f,eax
  404f38:	outs   dx,DWORD PTR ds:[esi]
  404f39:	pop    esp
  404f3a:	cld    
  404f3b:	inc    edx
  404f3c:	out    0x6e,al
  404f3e:	js     0x404ed8
  404f40:	loope  0x404f21
  404f42:	mov    ebx,0x6ae7e01
  404f47:	call   0xa5bd:0xe55955ce
  404f4e:	xor    DWORD PTR [esi],ebx
  404f50:	and    al,0x81
  404f52:	repz jecxz 0x404f10
  404f55:	inc    edi
  404f56:	pop    edi
  404f57:	test   eax,0x1b90335
  404f5c:	mov    cl,0x75
  404f5e:	out    dx,eax
  404f5f:	test   BYTE PTR [eax],bl
  404f61:	xor    bl,dh
  404f63:	scas   eax,DWORD PTR es:[edi]
  404f64:	imul   ebx,DWORD PTR [esi],0xa227edeb
  404f6a:	dec    ebp
  404f6b:	xor    esi,0xc165ca08
  404f71:	aaa    
  404f72:	enter  0x9082,0xd8
  404f76:	adc    esp,esi
  404f78:	jb     0x404f08
  404f7a:	cli    
  404f7b:	imul   eax,DWORD PTR [esp+esi*4+0x5f8d9199],0xfffffff8
  404f83:	xchg   esi,eax
  404f84:	push   edx
  404f85:	std    
  404f86:	mov    eax,DWORD PTR [ebp-0x4]
  404f89:	mov    edi,DWORD PTR [ebp-0x8]
  404f8c:	xor    edi,edx
  404f8e:	add    edi,esi
  404f90:	mov    esi,DWORD PTR [ebp+0x8]
  404f93:	imul   edi,ecx
  404f96:	mov    ebx,DWORD PTR [ebp+0xc]
  404f99:	xor    eax,edx
  404f9b:	add    eax,ecx
  404f9d:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  404fa4:	mov    BYTE PTR [edi+esi*1],al
  404fa7:	mov    eax,DWORD PTR [ebp-0x8]
  404faa:	mov    esi,DWORD PTR [ebp+0x10]
  404fad:	xor    eax,edx
  404faf:	xor    ebx,ebx
  404fb1:	add    esi,0xfabdbee9
  404fb7:	adc    ebx,0xffffffff
  404fba:	lea    ecx,[ecx+eax*1+0x3272e0]
  404fc1:	xor    edi,edi
  404fc3:	xor    esi,0x8a29a12b
  404fc9:	xor    ebx,0x0
  404fcc:	mov    eax,ecx
  404fce:	add    eax,0xfabdbee9
  404fd3:	adc    edi,0xffffffff
  404fd6:	xor    eax,0x8a29a12b
  404fdb:	xor    edi,0x0
  404fde:	cmp    eax,esi
  404fe0:	jne    0x402c2e
  404fe6:	cmp    edi,ebx
  404fe8:	jne    0x402c2e
  404fee:	mov    eax,0xf89c85b8
  404ff3:	pop    ebx
  404ff4:	pop    edi
  404ff5:	pop    esi
  404ff6:	leave  
  404ff7:	ret    0xc
  404ffa:	push   ebp
  404ffb:	mov    ebp,esp
  404ffd:	push   ecx
  404ffe:	sub    DWORD PTR ds:0x429018,ecx
  405004:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40500b:	mov    eax,DWORD PTR [ebp+0x8]
  40500e:	movsx  eax,BYTE PTR [eax]
  405011:	or     ecx,edx
  405013:	mov    edx,0x3272e0
  405018:	sub    ecx,0x5218
  40501e:	sub    eax,edx
  405020:	mov    ecx,DWORD PTR ds:0x42d01c
  405026:	xor    DWORD PTR ds:0x429008,ecx
  40502c:	mov    ecx,0x7510899
  405031:	sbb    DWORD PTR ds:0x42d01c,0x42b014
  40503b:	xor    eax,ecx
  40503d:	mov    DWORD PTR ds:0x429010,0x6785
  405047:	cmp    eax,0xf89c85f4
  40504c:	mov    DWORD PTR ds:0x42c004,0x3ff8
  405056:	jne    0x4050b5
  40505c:	xor    DWORD PTR ds:0x42c000,0xe2d
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	and    DWORD PTR ds:0x42c00c,0x622d
  405073:	push   esi
  405074:	mov    esi,DWORD PTR [ebp+0x8]
  405077:	xor    DWORD PTR ds:0x42b000,0x42a008
  405081:	add    esi,DWORD PTR [eax+0x3c]
  405084:	mov    DWORD PTR [ebp+0x8],esi
  405087:	and    eax,DWORD PTR ds:0x42c010
  40508d:	mov    eax,DWORD PTR [ebp-0x4]
  405090:	mov    esi,DWORD PTR ds:0x42b000
  405096:	add    DWORD PTR ds:0x42a010,esi
  40509c:	mov    esi,DWORD PTR [ebp+0x8]
  40509f:	xor    eax,ecx
  4050a1:	add    eax,edx
  4050a3:	cmp    DWORD PTR [esi+0x54],eax
  4050a6:	pop    esi
  4050a7:	je     0x4050b5
  4050ad:	mov    eax,DWORD PTR [ebp+0x8]
  4050b0:	jmp    0x4050bc
  4050b5:	mov    eax,DWORD PTR [ebp-0x4]
  4050b8:	xor    eax,ecx
  4050ba:	add    eax,edx
  4050bc:	leave  
  4050bd:	ret    0x4
  4050c0:	push   ebp
  4050c1:	mov    ebp,esp
  4050c3:	sub    esp,0x40
  4050c6:	sub    DWORD PTR ds:0x429028,0x42d01c
  4050d0:	push   ebx
  4050d1:	push   esi
  4050d2:	push   edi
  4050d3:	lea    eax,[ebp-0x1c]
  4050d6:	push   eax
  4050d7:	lea    eax,[ebp-0x18]
  4050da:	adc    DWORD PTR ds:0x42c014,0x5fe2
  4050e4:	jmp    0x407491
  4050e9:	outs   dx,DWORD PTR ds:[esi]
  4050ea:	or     dh,BYTE PTR ds:0x57fbfb4c
  4050f0:	or     eax,0x82990c06
  4050f5:	scas   al,BYTE PTR es:[edi]
  4050f6:	leave  
  4050f7:	add    bh,BYTE PTR [esp+ecx*2-0x158585a1]
  4050fe:	pop    edi
  4050ff:	jp     0x40517b
  405101:	test   esp,eax
  405103:	aas    
  405104:	sub    BYTE PTR [edx-0x12ba25bc],0xde
  40510b:	or     ebp,DWORD PTR [edx+0x6b469025]
  405111:	add    DWORD PTR [edi+0x6c484a20],0xffffffe9
  405118:	sub    ah,0x2
  40511b:	push   ss
  40511c:	div    DWORD PTR [ebx]
  40511e:	fisttp DWORD PTR [esi]
  405120:	mov    dh,0xe9
  405122:	mov    al,dl
  405124:	add    ebx,DWORD PTR [ebx-0x6]
  405127:	das    
  405128:	out    0x12,eax
  40512a:	ret    
  40512b:	div    BYTE PTR [esi+0x3660a83]
  405131:	jae    0x405102
  405133:	fisttp WORD PTR [edi+0x68]
  405136:	dec    eax
  405137:	test   al,0x3e
  405139:	mov    ecx,ebp
  40513b:	push   ss
  40513c:	mov    eax,ds:0xfacb50f8
  405141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405142:	jo     0x405105
  405144:	add    edi,DWORD PTR [esi]
  405146:	mov    es,WORD PTR [edx]
  405148:	jnp    0x4050dc
  40514a:	pop    eax
  40514b:	cmp    al,0x3f
  40514d:	ins    BYTE PTR es:[edi],dx
  40514e:	jecxz  0x4050fc
  405150:	jp     0x405144
  405152:	daa    
  405153:	stc    
  405154:	push   ss
  405155:	jp     0x4051a9
  405157:	pop    ebx
  405158:	pushf  
  405159:	pop    ecx
  40515a:	loop   0x405136
  40515c:	sub    dh,BYTE PTR [edx]
  40515e:	mov    eax,0xae03a385
  405163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405164:	pop    ds
  405165:	dec    ebp
  405166:	push   0x29
  405168:	icebp  
  405169:	mov    ebx,0xa2c0c804
  40516e:	cmp    DWORD PTR [edi+eax*4],esp
  405171:	lahf   
  405172:	outs   dx,BYTE PTR ds:[esi]
  405173:	push   edi
  405174:	pop    ebp
  405175:	addr16 push esp
  405177:	fsubr  DWORD PTR [ebx+0x9]
  40517a:	gs ins DWORD PTR es:[edi],dx
  40517c:	mov    bh,0xf4
  40517e:	and    eax,0x42
  405181:	mov    ebx,DWORD PTR [ebp-0x2a034959]
  405187:	jno    0x4051f5
  405189:	cwde   
  40518a:	jbe    0x4051d1
  40518c:	adc    dl,BYTE PTR [esi-0x70]
  40518f:	jmp    0x5537:0x2a8e6f5c
  405196:	pop    eax
  405197:	das    
  405198:	pop    esp
  405199:	stos   BYTE PTR es:[edi],al
  40519a:	adc    DWORD PTR [ecx+0x57],eax
  40519d:	cmp    eax,0xfde9d47d
  4051a2:	cwde   
  4051a3:	repnz xor esp,ebx
  4051a6:	mov    ebp,0x5e561779
  4051ab:	pop    esp
  4051ac:	(bad)  
  4051ae:	das    
  4051af:	nop
  4051b0:	es push ecx
  4051b2:	push   ss
  4051b3:	sbb    dl,dl
  4051b5:	stos   BYTE PTR es:[edi],al
  4051b6:	inc    ebx
  4051b7:	adc    ebp,DWORD PTR [ecx+0x6d922619]
  4051bd:	loope  0x405178
  4051bf:	mov    dl,0x41
  4051c1:	sub    ebx,ecx
  4051c3:	mul    cl
  4051c5:	push   esi
  4051c6:	cmp    dl,cl
  4051c8:	jno    0x40520c
  4051ca:	sbb    ebx,DWORD PTR ds:0x14550ae0
  4051d0:	loopne 0x405163
  4051d2:	xchg   ecx,eax
  4051d3:	dec    edx
  4051d4:	adc    eax,0xd4c3658
  4051d9:	scas   eax,DWORD PTR es:[edi]
  4051da:	and    DWORD PTR [eax-0x4d],edx
  4051dd:	xor    BYTE PTR [eax],bh
  4051df:	xchg   dh,bh
  4051e1:	mov    eax,0xf4dc30e9
  4051e6:	adc    eax,0xe65e5b20
  4051eb:	dec    ebx
  4051ec:	dec    ecx
  4051ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ee:	adc    eax,0x1bdda8c2
  4051f3:	xchg   ebx,eax
  4051f4:	jno    0x40520a
  4051f6:	cmp    BYTE PTR [eax+ecx*8-0x71],0x45
  4051fb:	inc    esi
  4051fc:	pop    eax
  4051fd:	jg     0x40522e
  4051ff:	ins    DWORD PTR es:[edi],dx
  405200:	loopne 0x40526c
  405202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405203:	mov    bh,0x1a
  405205:	xchg   ebp,eax
  405206:	rcl    BYTE PTR [ecx+0x7c],1
  405209:	xchg   DWORD PTR [ebx],eax
  40520b:	mov    ah,0x98
  40520d:	push   0xffffffea
  40520f:	cli    
  405210:	(bad)  
  405211:	sar    edi,cl
  405213:	cmp    edi,DWORD PTR [ebx]
  405215:	mov    ah,BYTE PTR [esp+edi*2+0x2f]
  405219:	cli    
  40521a:	jae    0x405236
  40521c:	ret    0x41cd
  40521f:	sti    
  405220:	sub    dl,cl
  405222:	icebp  
  405223:	sar    DWORD PTR [ecx+0x44],1
  405226:	clc    
  405227:	pushf  
  405228:	pop    ebp
  405229:	xchg   edi,eax
  40522a:	mov    BYTE PTR [ebx-0x64],0x91
  40522e:	mov    DWORD PTR [ecx-0x38c36ecf],ebp
  405234:	inc    edx
  405235:	sub    BYTE PTR [edx-0x422adac8],dl
  40523b:	icebp  
  40523c:	adc    BYTE PTR [eax],0x6
  40523f:	sub    eax,0xddef1fa6
  405244:	inc    ebx
  405245:	adc    DWORD PTR ds:0x204756af,ecx
  40524b:	jle    0x405202
  40524d:	mov    edx,0x2661ee3d
  405252:	aaa    
  405253:	dec    esp
  405254:	scas   eax,DWORD PTR es:[edi]
  405255:	scas   al,BYTE PTR es:[edi]
  405256:	inc    ecx
  405257:	push   ecx
  405258:	icebp  
  405259:	sti    
  40525a:	push   ss
  40525b:	cmp    ebp,0x990dc1ee
  405261:	sub    bh,dh
  405263:	data16 outs dx,BYTE PTR ds:[esi]
  405265:	lds    esi,FWORD PTR [esi-0x2a1c9644]
  40526b:	sbb    ebx,DWORD PTR [ecx-0x7e44b24e]
  405271:	mov    ?,ecx
  405273:	push   es
  405274:	xor    BYTE PTR [edi],0x57
  405277:	jns    0x405203
  405279:	inc    ebp
  40527a:	sbb    al,0x8e
  40527c:	lods   al,BYTE PTR ds:[esi]
  40527d:	cwde   
  40527e:	les    eax,FWORD PTR [ebp+0x48]
  405281:	fnstenv [ecx]
  405283:	rol    DWORD PTR [edi],0x2d
  405286:	inc    ecx
  405287:	mov    dh,0xd9
  405289:	in     al,0xc4
  40528b:	push   ebx
  40528c:	dec    eax
  40528d:	cld    
  40528e:	xchg   edx,eax
  40528f:	inc    edi
  405290:	mul    DWORD PTR [eax-0x7b034fcf]
  405296:	fcmovne st,st(6)
  405298:	popa   
  405299:	lahf   
  40529a:	iret   
  40529b:	aas    
  40529c:	xor    al,0x92
  40529e:	pop    es
  40529f:	(bad)  
  4052a0:	push   ecx
  4052a1:	mov    al,ds:0xc7446468
  4052a6:	or     edx,edx
  4052a8:	jl     0x4052ac
  4052aa:	inc    ecx
  4052ab:	std    
  4052ac:	stos   DWORD PTR es:[edi],eax
  4052ad:	mov    ah,0xa5
  4052af:	push   bx
  4052b1:	lds    edi,FWORD PTR [eax+0x46b7bd2]
  4052b7:	gs mov edi,0x4e3e5133
  4052bd:	jmp    0x4052bf
  4052bf:	ret    
  4052c0:	sbb    BYTE PTR [eax-0x2b2c7aab],dl
  4052c6:	sub    eax,0xdbfc9d39
  4052cb:	cli    
  4052cc:	call   0x68a6c4a7
  4052d1:	add    dh,dh
  4052d3:	pop    ss
  4052d4:	jge    0x40533d
  4052d6:	xchg   edi,eax
  4052d7:	or     DWORD PTR [edi-0x75a3d51d],esi
  4052dd:	fidivr WORD PTR ss:[edx-0x460ce720]
  4052e4:	sti    
  4052e5:	and    BYTE PTR [ecx],al
  4052e7:	dec    eax
  4052e8:	adc    ecx,eax
  4052ea:	out    0xf1,eax
  4052ec:	add    eax,0x4122f022
  4052f1:	inc    ebx
  4052f2:	add    ah,BYTE PTR [edx]
  4052f4:	loop   0x4052a9
  4052f6:	pop    ecx
  4052f7:	jmp    0x4052eb
  4052f9:	mov    ebp,0x7387d110
  4052fe:	ss sti 
  405300:	clc    
  405301:	rcr    DWORD PTR [edx+eiz*2+0x38],1
  405305:	out    dx,al
  405306:	lds    edi,FWORD PTR [ecx+0x19]
  405309:	adc    al,0x97
  40530b:	out    0x2,eax
  40530d:	jo     0x405356
  40530f:	pop    ebx
  405310:	and    DWORD PTR [edi-0xfa4d9d0],ebx
  405316:	ins    BYTE PTR es:[edi],dx
  405317:	xor    DWORD PTR [eax+0x47],ecx
  40531a:	and    eax,0xa66c1718
  40531f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405320:	xchg   ecx,eax
  405321:	xor    edi,DWORD PTR [ebp+ecx*1+0x2c31fe44]
  405328:	inc    esi
  405329:	cs inc edi
  40532b:	cwde   
  40532c:	into   
  40532d:	xchg   ecx,eax
  40532e:	(bad)  
  40532f:	mov    esp,0x27e26282
  405334:	cwde   
  405335:	out    dx,al
  405336:	(bad)  
  405337:	xor    dh,BYTE PTR [eax-0x31]
  40533a:	js     0x40538f
  40533c:	not    BYTE PTR [edx]
  40533e:	icebp  
  40533f:	pop    edx
  405340:	push   edi
  405341:	mov    WORD PTR ss:[eax+esi*2+0x7c],?
  405346:	mov    bh,0x2d
  405348:	into   
  405349:	push   es
  40534a:	shr    BYTE PTR [edx+0x57],0x9b
  40534e:	mov    ds:0x3020e7e1,al
  405353:	out    0x6c,eax
  405355:	fimul  DWORD PTR [edi]
  405357:	daa    
  405358:	in     al,0xe8
  40535a:	cs mov dh,bh
  40535d:	mov    al,0x1d
  40535f:	jmp    0x40538a
  405361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405362:	cmc    
  405363:	nop
  405364:	rcr    BYTE PTR [esi+0x42a5c05f],cl
  40536a:	adc    eax,0xd75cea3a
  40536f:	adc    BYTE PTR [ebp-0x184aa8a1],ah
  405375:	stos   BYTE PTR es:[edi],al
  405376:	and    al,0xc
  405378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405379:	push   0x2d
  40537b:	cmp    eax,0xf90288b4
  405380:	ret    
  405381:	ins    DWORD PTR es:[edi],dx
  405382:	lock or dh,BYTE PTR [ebx]
  405385:	sti    
  405386:	and    al,0x57
  405388:	sub    ebp,DWORD PTR [ebp+esi*8-0x7d8f71a0]
  40538f:	cmp    eax,0x6d89ae36
  405394:	cmc    
  405395:	or     dh,BYTE PTR [eax]
  405397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405398:	and    ecx,DWORD PTR [edx-0x316eb32e]
  40539e:	lds    ebx,FWORD PTR [eax]
  4053a0:	and    BYTE PTR [ebp-0x6b],bl
  4053a3:	jmp    0x4053f7
  4053a5:	push   esi
  4053a6:	pusha  
  4053a7:	jle    0x405373
  4053a9:	or     DWORD PTR ds:0xbd8b8d52,edi
  4053af:	lods   al,BYTE PTR ds:[esi]
  4053b0:	mov    eax,ds:0x57554c80
  4053b5:	(bad)  
  4053b6:	sub    esi,DWORD PTR [ebx+0x3b]
  4053b9:	icebp  
  4053ba:	lahf   
  4053bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053bc:	xlat   BYTE PTR ds:[ebx]
  4053bd:	fs retf 
  4053bf:	daa    
  4053c0:	and    DWORD PTR [edi+0x4d],0xffffffaa
  4053c4:	or     cl,bh
  4053c6:	pop    esi
  4053c7:	clc    
  4053c8:	sub    bl,bl
  4053ca:	mov    esi,0x564ff195
  4053cf:	ja     0x40544e
  4053d1:	add    esp,esi
  4053d3:	fs in  al,dx
  4053d5:	xchg   esi,eax
  4053d6:	xor    BYTE PTR [ecx],cl
  4053d8:	mov    cl,0x3b
  4053da:	into   
  4053db:	(bad)  
  4053dc:	popa   
  4053dd:	and    DWORD PTR [eax],0xffffffb1
  4053e0:	retf   0xca62
  4053e3:	ins    DWORD PTR es:[edi],dx
  4053e4:	lods   eax,DWORD PTR ds:[esi]
  4053e5:	das    
  4053e6:	int    0xbb
  4053e8:	adc    al,0x6
  4053ea:	shl    cl,cl
  4053ec:	adc    al,0x56
  4053ee:	push   ds
  4053ef:	adc    ah,bl
  4053f1:	ss pop ecx
  4053f3:	test   BYTE PTR [eax+0x34],0x85
  4053f7:	or     eax,0xb2128a33
  4053fc:	push   0x4db92fbb
  405401:	xchg   ebp,eax
  405402:	repz sbb eax,0x57c2b82d
  405408:	mov    edi,0xb472c811
  40540d:	imul   ebp,DWORD PTR [ebx],0x443da93e
  405413:	je     0x405424
  405415:	hlt    
  405416:	push   ecx
  405417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405418:	mov    DWORD PTR [edx],edx
  40541a:	xor    ebp,DWORD PTR [edi]
  40541c:	stos   DWORD PTR es:[edi],eax
  40541d:	adc    eax,0x1e452a71
  405422:	mov    al,0x65
  405424:	cdq    
  405425:	pop    edx
  405426:	in     eax,dx
  405427:	mov    ebx,0x4905bb8e
  40542c:	jnp    0x4054aa
  40542e:	jge    0x405459
  405430:	out    0x7b,al
  405432:	cmp    eax,0x2a9344b7
  405437:	mov    eax,0xdc667c15
  40543c:	jo     0x405471
  40543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543f:	not    BYTE PTR [ebx-0x7e]
  405442:	push   0x6b
  405444:	lods   eax,DWORD PTR ds:[esi]
  405445:	sub    DWORD PTR ds:0x449a3731,eax
  40544b:	fild   QWORD PTR [eax-0x59]
  40544e:	fiadd  WORD PTR [ecx-0x7cfbb764]
  405454:	sahf   
  405455:	test   al,0x2f
  405457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405458:	sbb    eax,0x5d0e0079
  40545d:	enter  0xe3a2,0x5a
  405461:	(bad)  
  405462:	mov    dh,0xd6
  405464:	or     ah,BYTE PTR [ebx+ebx*4-0x14]
  405468:	lahf   
  405469:	data16 aaa 
  40546b:	test   al,0x4f
  40546d:	sub    BYTE PTR [ebp+eax*4+0x0],dl
  405471:	std    
  405472:	add    bh,ah
  405474:	jge    0x4053f7
  405476:	jb     0x405434
  405478:	test   al,0x46
  40547a:	fbld   TBYTE PTR [ecx+0x27759bb3]
  405480:	sbb    eax,0xe306a591
  405485:	mov    esp,0xcc78fb53
  40548a:	xchg   edx,eax
  40548b:	or     eax,0x41e9b597
  405490:	jo     0x405491
  405492:	and    al,0xc9
  405494:	jno    0x4054e8
  405496:	loope  0x4054e5
  405498:	xor    ecx,edx
  40549a:	cwde   
  40549b:	repnz fisttp DWORD PTR [edi+0x3c]
  40549f:	jns    0x405468
  4054a1:	mov    al,0xfb
  4054a3:	fmul   st(6),st
  4054a5:	push   cs
  4054a6:	icebp  
  4054a7:	jmp    0x405489
  4054a9:	outs   dx,DWORD PTR ds:[esi]
  4054aa:	sbb    DWORD PTR [eax+0x2e],ebp
  4054ad:	push   0x86ea7f61
  4054b2:	inc    ecx
  4054b3:	push   0x9a422bc1
  4054b8:	sbb    al,0x96
  4054ba:	lods   al,BYTE PTR ds:[esi]
  4054bb:	ins    BYTE PTR es:[edi],dx
  4054bc:	xchg   DWORD PTR ds:0xe6d9cd47,edi
  4054c2:	xchg   esp,eax
  4054c3:	jne    0x40551c
  4054c5:	sbb    edi,DWORD PTR [ebx+0x1e66b483]
  4054cb:	dec    edi
  4054cc:	cmovs  edi,DWORD PTR [edx]
  4054cf:	and    BYTE PTR [ebp+eiz*8+0x14],dh
  4054d3:	call   0x48a26c5b
  4054d8:	rcr    edx,1
  4054da:	clc    
  4054db:	sbb    BYTE PTR [edx+0x17],dh
  4054de:	push   es
  4054df:	adc    DWORD PTR [ebx-0x25],edx
  4054e2:	fcom   st(0)
  4054e4:	add    dh,dl
  4054e6:	sar    BYTE PTR [ebx],cl
  4054e8:	pop    esp
  4054e9:	dec    esi
  4054ea:	jmp    0x5f11:0x3d00fef7
  4054f1:	or     DWORD PTR [edx+ebp*1+0x7f],edi
  4054f5:	xor    esi,eax
  4054f7:	stc    
  4054f8:	icebp  
  4054f9:	rcr    BYTE PTR [edx-0x41ec0958],1
  4054ff:	cdq    
  405500:	mov    ah,0x6a
  405502:	pop    eax
  405503:	dec    ecx
  405504:	out    0x63,eax
  405506:	pop    esp
  405507:	retf   
  405508:	out    dx,al
  405509:	ins    DWORD PTR es:[edi],dx
  40550a:	sbb    eax,0x3fc013aa
  40550f:	push   0xc8c5a39f
  405514:	sbb    eax,0x57948129
  405519:	cli    
  40551a:	push   edi
  40551b:	mov    bl,0xfd
  40551d:	popa   
  40551e:	push   es
  40551f:	icebp  
  405520:	retf   
  405521:	push   es
  405522:	rcl    cl,cl
  405524:	bound  ecx,QWORD PTR [esi+0x7f5a6e2c]
  40552a:	rcl    BYTE PTR [ebp+edi*4+0xe9445a1],cl
  405531:	(bad)  
  405532:	stc    
  405533:	mov    al,0xf2
  405535:	out    dx,al
  405536:	call   0x9cd22bb2
  40553b:	scas   al,BYTE PTR es:[edi]
  40553c:	jb     0x405553
  40553e:	gs xchg ebx,eax
  405540:	ins    DWORD PTR es:[edi],dx
  405541:	push   0xffffffde
  405543:	sbb    eax,0x668f3f0b
  405548:	mov    eax,ds:0x5f659291
  40554d:	pop    es
  40554e:	mov    edi,0xfd74c305
  405553:	sub    al,al
  405555:	mov    DWORD PTR [ebx+0x68014a76],edx
  40555b:	fdiv   QWORD PTR [esi-0x100fb7b2]
  405561:	or     DWORD PTR [edi],ebx
  405563:	out    0x57,eax
  405565:	int    0xab
  405567:	xchg   edx,eax
  405568:	call   0x89918f5b
  40556d:	not    ecx
  40556f:	test   al,0x36
  405571:	std    
  405572:	push   0x51
  405574:	cwde   
  405575:	or     ebp,DWORD PTR [ecx-0x6a]
  405578:	mov    BYTE PTR [eax],al
  40557a:	mov    bh,0x45
  40557c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40557d:	and    bl,BYTE PTR [ebp-0x65]
  405580:	jmp    0x405587
  405582:	mov    ?,WORD PTR [edx+0x2f]
  405585:	cmp    BYTE PTR [eax+ebp*1],bl
  405588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40558a:	mov    edx,0xa7cd9560
  40558f:	and    ebx,DWORD PTR [ebx-0x710a3109]
  405595:	fsub   st,st(5)
  405597:	jno    0x405536
  405599:	pmulhuw mm2,mm4
  40559c:	fisub  DWORD PTR [edx+0x41]
  40559f:	sub    al,0xb9
  4055a1:	fcomp  QWORD PTR [eax+0x55ec14ea]
  4055a7:	push   ecx
  4055a8:	pop    DWORD PTR [ebp-0x6f]
  4055ab:	mov    al,0xdf
  4055ad:	mov    edx,DWORD PTR [ecx+0x49]
  4055b0:	mov    edi,eax
  4055b2:	xor    DWORD PTR [eax-0x57944d9d],0xcff0d9b6
  4055bc:	push   esp
  4055bd:	pop    edx
  4055be:	xchg   esi,eax
  4055bf:	pop    ds
  4055c0:	xchg   ebx,eax
  4055c1:	xchg   esi,eax
  4055c2:	mov    DWORD PTR [ebx+0x16],ebx
  4055c5:	push   eax
  4055c6:	std    
  4055c7:	jbe    0x40558f
  4055c9:	mov    edi,0x67aa367c
  4055ce:	sbb    al,0xd9
  4055d0:	lds    ebp,FWORD PTR [edi-0x65016841]
  4055d6:	fild   WORD PTR [ebp+eax*2-0x5d]
  4055da:	stos   DWORD PTR es:[edi],eax
  4055db:	xor    al,0x5d
  4055dd:	lea    ecx,[esp+eax*4-0x40]
  4055e1:	inc    ecx
  4055e2:	leave  
  4055e3:	out    dx,eax
  4055e4:	jle    0x405573
  4055e6:	cwde   
  4055e7:	rol    BYTE PTR ds:0x45fb9099,1
  4055ed:	rcr    DWORD PTR [eax*1+0x5f42736d],0xf1
  4055f5:	aaa    
  4055f6:	mov    ebp,0x92937964
  4055fb:	or     bh,BYTE PTR [ebp-0x50]
  4055fe:	aam    0x22
  405600:	cwde   
  405601:	add    bl,al
  405603:	inc    ebx
  405604:	fwait
  405605:	and    al,BYTE PTR [esi-0x3f]
  405608:	adc    al,0xe
  40560a:	pop    es
  40560b:	je     0x405665
  40560d:	jmp    0xb25b1e85
  405612:	xchg   edx,eax
  405613:	sbb    al,BYTE PTR [eax+0x58648d18]
  405619:	pop    ebx
  40561a:	sbb    esp,edx
  40561c:	and    al,0x14
  40561e:	mov    bl,0x7d
  405620:	jb     0x405647
  405622:	stos   BYTE PTR es:[edi],al
  405623:	mov    ebx,0xc71dbfb7
  405628:	aam    0xf7
  40562a:	and    BYTE PTR [edi+0x41ab4e22],al
  405630:	cmp    eax,0x5516928
  405635:	and    ecx,0xffffffaf
  405638:	aad    0xa0
  40563a:	dec    esp
  40563b:	xchg   edx,eax
  40563c:	ds call 0xe47817fa
  405642:	xchg   ecx,eax
  405643:	dec    edx
  405644:	in     eax,dx
  405645:	stos   DWORD PTR es:[edi],eax
  405646:	xchg   edx,eax
  405647:	push   ebp
  405648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405649:	nop
  40564a:	push   edx
  40564b:	mov    dl,0xde
  40564d:	jno    0x405627
  40564f:	addr16 inc ebp
  405651:	or     DWORD PTR [edx],ebp
  405653:	ins    BYTE PTR es:[edi],dx
  405654:	mov    esi,0xbcd6fcbe
  405659:	push   0xe086acf4
  40565e:	ret    0x9fc0
  405661:	jge    0x4056d6
  405663:	pop    ds
  405664:	stos   DWORD PTR es:[edi],eax
  405665:	or     ecx,edx
  405667:	mov    ebp,0xe05dfaa8
  40566c:	imul   edi,DWORD PTR [ebp-0x4446ef53],0x18f0bbf2
  405676:	out    0xdf,al
  405678:	cli    
  405679:	in     al,dx
  40567a:	push   ds
  40567b:	inc    ebp
  40567c:	pop    ebp
  40567d:	sub    BYTE PTR [esi],cl
  40567f:	mov    bh,0x89
  405681:	addr16 repz mov al,ds:0x26ee
  405686:	cvttps2pi mm4,QWORD PTR [esi+0x7c8541b9]
  40568d:	push   0xc3d6f8f0
  405692:	mul    DWORD PTR [esi+0x2ef21f45]
  405698:	sub    eax,0x184c57e3
  40569d:	pop    edx
  40569e:	imul   ebx,esi,0xcc60e835
  4056a4:	or     DWORD PTR [ebx-0x5],ebp
  4056a7:	popf   
  4056a8:	mov    al,ds:0x67495863
  4056ad:	pop    ecx
  4056ae:	and    eax,0xbcef7f87
  4056b3:	jae    0x40572b
  4056b5:	push   ds
  4056b6:	into   
  4056b7:	loop   0x4056d0
  4056b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ba:	jnp    0x4056ca
  4056bc:	scas   al,BYTE PTR es:[edi]
  4056bd:	cli    
  4056be:	xor    BYTE PTR [edx],cl
  4056c0:	fiadd  DWORD PTR [esi-0x4e]
  4056c3:	mov    eax,0xdd6f0b35
  4056c8:	push   es
  4056c9:	cmp    DWORD PTR [ebp+edi*1-0x75],0x25
  4056ce:	mov    bh,0xbb
  4056d0:	xchg   al,cl
  4056d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056d3:	fucomi st,st(3)
  4056d5:	cmp    al,0x66
  4056d7:	push   edx
  4056d8:	pop    ss
  4056d9:	cmp    DWORD PTR [edx],eax
  4056db:	(bad)  
  4056dc:	and    DWORD PTR [ebp+0x31],edx
  4056df:	and    al,0x9e
  4056e1:	dec    ebp
  4056e2:	inc    ecx
  4056e3:	ja     0x4056b2
  4056e5:	xchg   esp,eax
  4056e6:	mov    ebp,0x6c2c7819
  4056eb:	dec    ebx
  4056ec:	dec    eax
  4056ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ee:	push   ecx
  4056ef:	jno    0x4056d8
  4056f1:	add    ah,BYTE PTR [edx]
  4056f3:	mov    ebx,0xa5455e82
  4056f8:	cs sahf 
  4056fa:	and    bl,0x1b
  4056fd:	push   eax
  4056fe:	leave  
  4056ff:	push   es
  405700:	inc    esp
  405701:	enter  0x984,0x4d
  405705:	add    eax,0x3bee0163
  40570a:	cmp    eax,0x32036e1
  40570f:	ret    0x41d7
  405712:	mov    dh,0x94
  405714:	mov    WORD PTR [ebx+eax*4],?
  405717:	popa   
  405718:	out    dx,al
  405719:	push   ss
  40571a:	jl     0x4056b1
  40571c:	push   edx
  40571d:	mov    bl,0xc0
  40571f:	or     DWORD PTR [ecx],ebx
  405721:	outs   dx,DWORD PTR ds:[esi]
  405722:	int    0xcc
  405724:	out    0x95,al
  405726:	ret    0x346e
  405729:	cmp    DWORD PTR [ecx+0x79],edx
  40572c:	pop    ebp
  40572d:	jbe    0x4057a5
  40572f:	pop    esi
  405730:	and    bl,bl
  405732:	xor    dh,ah
  405734:	je     0x40578d
  405736:	sub    eax,0xde0fb22b
  40573b:	inc    eax
  40573c:	rol    dh,1
  40573e:	inc    ebp
  40573f:	pop    ebp
  405740:	jo     0x405764
  405742:	push   0xa
  405744:	ins    DWORD PTR es:[edi],dx
  405745:	push   edx
  405746:	in     al,dx
  405747:	stos   BYTE PTR es:[edi],al
  405748:	xor    al,0x9b
  40574a:	data16 sahf 
  40574c:	sti    
  40574d:	mov    esi,0x17878e9e
  405752:	push   0x3243681b
  405757:	(bad)  
  405758:	adc    al,0xc9
  40575a:	inc    eax
  40575b:	(bad)  
  40575c:	adc    eax,0xcb1672f3
  405761:	or     esi,DWORD PTR [esi+0x46ab7e7c]
  405767:	mov    bl,0x8b
  405769:	inc    esp
  40576a:	fcom   DWORD PTR [ecx]
  40576c:	retf   0x76b8
  40576f:	in     eax,0x2
  405771:	inc    ecx
  405772:	aaa    
  405773:	fistp  WORD PTR ds:0x2b888581
  405779:	mov    DWORD PTR [edx+0x1c],eax
  40577c:	lds    edx,FWORD PTR [edi-0x32f13f4b]
  405782:	imul   ebx,edx,0x62
  405785:	add    cl,bh
  405787:	in     eax,dx
  405788:	jne    0x4057c2
  40578a:	mov    sp,0x9210
  40578e:	jecxz  0x405779
  405790:	out    dx,al
  405791:	mov    edi,0xdec80110
  405796:	and    al,0x77
  405798:	popa   
  405799:	test   al,0x3f
  40579b:	inc    ebp
  40579c:	hlt    
  40579d:	fld    st(5)
  40579f:	jo     0x405770
  4057a1:	add    eax,0xdb5d4f33
  4057a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a7:	pushf  
  4057a8:	out    dx,eax
  4057a9:	mov    al,ds:0x82ddaacb
  4057ae:	(bad)  
  4057af:	aas    
  4057b0:	cmp    eax,0xcd65800e
  4057b5:	(bad)  
  4057b6:	in     al,dx
  4057b7:	cmp    al,0xf8
  4057b9:	or     ch,BYTE PTR [eax+esi*8+0x51]
  4057bd:	and    ebp,DWORD PTR [ebp-0x57f0c7a7]
  4057c3:	je     0x4057fe
  4057c5:	fistp  QWORD PTR [esi+0x22]
  4057c8:	outs   dx,BYTE PTR ds:[esi]
  4057c9:	pop    ebx
  4057ca:	cmp    DWORD PTR [ecx],0x4a0bf912
  4057d0:	(bad)
  4057d3:	inc    esp
  4057d4:	mov    esi,0x9c9ea265
  4057d9:	je     0x405782
  4057db:	adc    al,0xa0
  4057dd:	test   al,0xca
  4057df:	mov    eax,ds:0xf3ec35f8
  4057e4:	and    al,0x70
  4057e6:	out    0x21,al
  4057e8:	sar    ecx,cl
  4057ea:	mov    eax,0x98cb6073
  4057ef:	xchg   esi,eax
  4057f0:	std    
  4057f1:	hlt    
  4057f2:	adc    eax,0xa610c653
  4057f7:	test   DWORD PTR [ebp+ebx*4-0x6bea0711],0x4242dad
  405802:	push   ecx
  405803:	mov    ds:0xf56dca20,al
  405808:	sub    eax,0x60c878d0
  40580d:	push   ecx
  40580e:	aaa    
  40580f:	stc    
  405810:	dec    edx
  405811:	jnp    0x4057f3
  405813:	ja     0x405827
  405815:	loop   0x40587a
  405817:	xchg   ebx,eax
  405818:	out    dx,eax
  405819:	inc    ebp
  40581a:	outs   dx,DWORD PTR ds:[esi]
  40581c:	(bad)  
  40581d:	pop    edx
  40581e:	pushf  
  40581f:	daa    
  405820:	mov    bl,0xba
  405822:	fist   WORD PTR [edi+0x6c]
  405825:	xchg   DWORD PTR [ebp+ebx*4+0x2c],ebx
  405829:	imul   ebx,DWORD PTR [esi-0x37],0xffffff9f
  40582d:	push   0xd74f5277
  405832:	mov    ebx,0xa76ef7e4
  405837:	mov    esp,0xc96c3513
  40583c:	icebp  
  40583d:	add    BYTE PTR [ebp+0x297c0663],ch
  405843:	pusha  
  405844:	inc    ebp
  405845:	rcr    DWORD PTR ds:0x52672dd0,cl
  40584b:	loop   0x405852
  40584d:	pop    edx
  40584e:	mov    esp,DWORD PTR [ebp-0x303257d1]
  405854:	mov    ss,WORD PTR [ecx]
  405856:	push   es
  405857:	cmp    BYTE PTR [ebx],ch
  405859:	vfnmsub213ss xmm4,xmm2,DWORD PTR [edx-0x78]
  40585f:	nop
  405860:	test   eax,0x31fdfc38
  405865:	(bad)  
  405866:	retf   0x6de6
  405869:	pop    ecx
  40586a:	div    DWORD PTR [esi+0x516cd51b]
  405870:	jns    0x405804
  405872:	cmp    eax,0x7dc770cb
  405877:	mov    eax,ds:0x2b5885af
  40587c:	repnz dec al
  40587f:	inc    edx
  405880:	sub    dl,BYTE PTR [edi+0xe]
  405883:	sbb    BYTE PTR [ebp+0x6c],dh
  405886:	or     ebx,DWORD PTR [edi+0x4a1129e4]
  40588c:	or     edi,edx
  40588e:	sbb    DWORD PTR [edx],esi
  405890:	xor    esi,DWORD PTR [ebx+0x32]
  405893:	or     cl,al
  405895:	mov    dh,0xb7
  405897:	jo     0x4058ce
  405899:	popf   
  40589a:	les    ebp,FWORD PTR [esi]
  40589c:	call   0x9cc01393
  4058a1:	cmp    edx,ecx
  4058a3:	je     0x405850
  4058a5:	push   0xdeeb45b
  4058aa:	icebp  
  4058ab:	cs cmp al,0x37
  4058ae:	xor    BYTE PTR [ecx-0x61462de6],0x70
  4058b5:	jns    0x4058e1
  4058b7:	xchg   esi,eax
  4058b8:	sub    edx,DWORD PTR [ecx+0x56e95799]
  4058be:	mov    edx,0xff616e6c
  4058c3:	and    eax,0xa5965d63
  4058c8:	lock mov ch,0x4b
  4058cb:	test   DWORD PTR [edx-0x43],esp
  4058ce:	scas   al,BYTE PTR es:[edi]
  4058cf:	or     edx,esi
  4058d1:	inc    esp
  4058d2:	pop    es
  4058d3:	and    bl,BYTE PTR [edx]
  4058d5:	mov    esp,0xa967a93f
  4058da:	jns    0x405908
  4058dc:	adc    DWORD PTR [edi],edx
  4058de:	jno    0x4058c7
  4058e0:	xor    al,0xbe
  4058e2:	xchg   BYTE PTR [ebx-0x44c640f4],ch
  4058e8:	xchg   al,al
  4058ea:	sbb    DWORD PTR [edi+0x23929559],0xffffffeb
  4058f1:	dec    edx
  4058f2:	mov    al,0xf5
  4058f4:	ja     0x40594e
  4058f6:	ss scas eax,DWORD PTR es:[edi]
  4058f8:	repnz stos DWORD PTR es:[edi],eax
  4058fa:	ror    BYTE PTR [edx],1
  4058fc:	call   0xf5c6:0x87f7c712
  405903:	dec    edi
  405904:	mov    dh,0x1c
  405906:	das    
  405907:	aam    0x88
  405909:	pop    esi
  40590a:	int    0x99
  40590c:	adc    al,0x91
  40590e:	cmp    ch,BYTE PTR [eax+ecx*4-0x75b383b7]
  405915:	fwait
  405916:	mov    es,WORD PTR [eax+eiz*2-0x4d64b555]
  40591d:	sbb    eax,0x92efdaab
  405922:	sahf   
  405923:	jl     0x40598a
  405925:	xchg   edx,eax
  405926:	(bad)  
  405927:	in     al,0xd5
  405929:	sbb    edi,DWORD PTR ds:0x4d3196c2
  40592f:	dec    esp
  405930:	dec    eax
  405931:	dec    edx
  405932:	sub    BYTE PTR [bx+di-0x1d],0x4b
  405937:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405939:	adc    al,BYTE PTR [eax+0x5c]
  40593c:	repz scas eax,DWORD PTR es:[edi]
  40593e:	pushf  
  40593f:	pop    ebx
  405940:	inc    ecx
  405941:	rcl    BYTE PTR [esi],0xca
  405944:	cld    
  405945:	and    cl,BYTE PTR [edx+0x353e1032]
  40594b:	popa   
  40594c:	dec    ecx
  40594d:	xchg   edi,eax
  40594e:	imul   edx,DWORD PTR [eiz*8-0x75131f99],0x98411b96
  405959:	aas    
  40595a:	add    eax,DWORD PTR [esi]
  40595c:	pop    edx
  40595d:	test   eax,0xaaf578c6
  405962:	push   edx
  405963:	fidiv  WORD PTR [edx-0x3f]
  405966:	and    al,0x39
  405968:	cdq    
  405969:	add    eax,0x2afb3f5
  40596e:	inc    eax
  40596f:	sbb    al,0xb5
  405971:	lock dec ecx
  405973:	aad    0x2f
  405975:	mov    cl,0x2
  405977:	jne    0x405959
  405979:	inc    eax
  40597a:	ror    DWORD PTR [esi+0x2b47dfd1],0x62
  405981:	cmp    DWORD PTR [ebx],esp
  405983:	fstp   DWORD PTR [ebx+0x34bc396c]
  405989:	imul   ebx,DWORD PTR [ebp+0x62],0x819e60dd
  405990:	or     esi,DWORD PTR [edx+0x6e]
  405993:	ins    DWORD PTR es:[edi],dx
  405994:	loop   0x4059ac
  405996:	mov    ds:0x87fdfd40,eax
  40599b:	xor    al,BYTE PTR [edi-0x5f]
  40599e:	icebp  
  40599f:	add    DWORD PTR [edx+ecx*4+0x48dae26a],ecx
  4059a6:	icebp  
  4059a7:	mov    bl,dh
  4059a9:	xor    ch,cl
  4059ab:	cwde   
  4059ac:	jl     0x40596f
  4059ae:	add    BYTE PTR ds:0x76ca849b,ah
  4059b4:	cmp    bh,bh
  4059b6:	and    dh,BYTE PTR ds:0x32d4f477
  4059bc:	iret   
  4059bd:	repz cld 
  4059bf:	sbb    eax,0xdbf8e52f
  4059c4:	pusha  
  4059c5:	jp     0x405952
  4059c7:	and    eax,0xb0c08099
  4059cc:	jns    0x4059e6
  4059ce:	fisub  DWORD PTR [ebx+0x31c75ef4]
  4059d4:	outs   dx,DWORD PTR ds:[esi]
  4059d5:	dec    esp
  4059d6:	push   es
  4059d7:	pop    esi
  4059d8:	pusha  
  4059d9:	out    dx,eax
  4059da:	mov    dl,0xa2
  4059dc:	scas   eax,DWORD PTR es:[edi]
  4059dd:	or     eax,0x27becc00
  4059e2:	xchg   ebp,eax
  4059e3:	in     al,dx
  4059e4:	push   es
  4059e5:	cs out dx,eax
  4059e7:	lock inc edx
  4059e9:	ret    0xc4e4
  4059ec:	cld    
  4059ed:	mov    esi,0xcba8ba29
  4059f2:	cmp    DWORD PTR [edx-0x23],esi
  4059f5:	iret   
  4059f6:	add    BYTE PTR [edi-0x5455569b],dl
  4059fc:	aad    0x43
  4059fe:	pop    ebx
  4059ff:	jne    0x405981
  405a01:	push   esp
  405a02:	mov    dh,0xb6
  405a04:	xchg   ecx,eax
  405a05:	inc    ebx
  405a06:	ins    BYTE PTR es:[edi],dx
  405a07:	cmp    ebx,DWORD PTR [edx+0x6a]
  405a0a:	dec    ebp
  405a0b:	loopne 0x4059f7
  405a0d:	and    DWORD PTR [ecx*8-0xfe58ec7],ebp
  405a14:	aaa    
  405a15:	cwde   
  405a16:	jae    0x405a59
  405a18:	mov    al,0xa7
  405a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1b:	mov    dh,0x8d
  405a1d:	dec    ecx
  405a1e:	inc    edi
  405a1f:	loope  0x405a0c
  405a21:	mov    esp,0x1204e557
  405a26:	mov    dh,0x78
  405a28:	or     al,BYTE PTR [edi]
  405a2a:	jb     0x405a70
  405a2c:	adc    dl,BYTE PTR [esp+eax*4+0x73a7f302]
  405a33:	jno    0x405a23
  405a35:	out    0xda,eax
  405a37:	pop    esp
  405a38:	add    BYTE PTR [esi],0x67
  405a3b:	cld    
  405a3c:	jge    0x405a0c
  405a3e:	xlat   BYTE PTR ds:[ebx]
  405a3f:	and    al,0x4d
  405a41:	fisttp QWORD PTR [ecx]
  405a43:	push   esp
  405a44:	or     edx,DWORD PTR [eax+esi*4+0x4e]
  405a48:	mov    fs,WORD PTR [esi+0x650dfdb1]
  405a4e:	ja     0x405a48
  405a50:	sub    al,BYTE PTR [esi-0x4b]
  405a53:	push   es
  405a54:	(bad)  [ebx]
  405a56:	sahf   
  405a57:	push   0x3c687ab7
  405a5c:	push   edi
  405a5d:	sbb    ecx,DWORD PTR [esi-0x25]
  405a60:	leave  
  405a61:	repnz test eax,0x9e9fd640
  405a67:	mov    ah,0x92
  405a69:	and    edi,ebx
  405a6b:	or     ebx,DWORD PTR [edi+0xa]
  405a6e:	push   0x2fb04de9
  405a73:	xor    BYTE PTR [edi-0x6e4875b4],0xcf
  405a7a:	add    esp,edx
  405a7c:	fcomp  QWORD PTR [eax+eax*1-0x61]
  405a80:	fist   DWORD PTR [edi]
  405a82:	fist   DWORD PTR ds:0x9f9077e8
  405a88:	jle    0x405a40
  405a8a:	or     al,0xc9
  405a8c:	mov    cl,0x4c
  405a8e:	fisubr WORD PTR [edx-0x3c7270d0]
  405a94:	rcr    DWORD PTR ds:0x96ca3c08,0xf
  405a9b:	data16 fidiv WORD PTR [edx]
  405a9e:	mov    eax,0xd155ae5e
  405aa3:	dec    ebx
  405aa4:	in     eax,dx
  405aa5:	or     al,0x50
  405aa7:	fistp  DWORD PTR [ecx-0x62c5278b]
  405aad:	add    esp,DWORD PTR [edx+0xd]
  405ab0:	pop    edx
  405ab1:	(bad)  
  405ab2:	call   ebp
  405ab4:	pop    esp
  405ab5:	imul   edx,DWORD PTR [edi+0x58709066],0x6c648da8
  405abf:	or     ecx,DWORD PTR [edx-0x43]
  405ac2:	fs pushf 
  405ac4:	imul   BYTE PTR [edi]
  405ac6:	pop    ss
  405ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac8:	out    dx,eax
  405ac9:	mov    eax,0x88394a54
  405ace:	cli    
  405acf:	sbb    al,0x31
  405ad1:	cli    
  405ad2:	enter  0x7d4f,0x8b
  405ad6:	ins    DWORD PTR es:[edi],dx
  405ad7:	push   esp
  405ad8:	mov    DWORD PTR [eax+0x34b80a47],eax
  405ade:	in     al,dx
  405adf:	cmc    
  405ae0:	push   ecx
  405ae1:	mov    eax,ds:0xabb813a2
  405ae6:	sbb    BYTE PTR ss:0xddd7fcdd,al
  405aed:	popf   
  405aee:	jo     0x405b6c
  405af0:	inc    ebp
  405af1:	pop    edi
  405af3:	lods   eax,DWORD PTR ds:[esi]
  405af4:	fdivr  st,st(6)
  405af6:	mov    eax,0xb7e0391f
  405afb:	aas    
  405afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405afd:	into   
  405afe:	pushf  
  405aff:	mov    bh,0xe0
  405b01:	(bad)  
  405b02:	int    0x76
  405b04:	mov    ds:0x113ad229,eax
  405b09:	pop    ss
  405b0a:	imul   ecx,DWORD PTR [edx-0x4bfa1fbd],0x8873bcf5
  405b14:	adc    esi,DWORD PTR [ebp-0x4d8461b]
  405b1a:	imul   esi,DWORD PTR [ebx],0x9
  405b1d:	lods   eax,DWORD PTR ds:[esi]
  405b1e:	adc    BYTE PTR [ebp+ecx*2+0x42],0xc0
  405b23:	mov    esp,DWORD PTR [esi-0x57]
  405b26:	mov    ebp,0x76302c01
  405b2b:	call   0x71c9:0x154710da
  405b32:	jb     0x405bb2
  405b34:	into   
  405b35:	stos   DWORD PTR es:[edi],eax
  405b36:	mov    ebp,0x2f438751
  405b3b:	out    dx,eax
  405b3c:	in     al,0x3f
  405b3e:	stos   BYTE PTR es:[edi],al
  405b3f:	jns    0x405b44
  405b41:	js     0x405b4a
  405b43:	dec    edx
  405b44:	enter  0xbe0a,0x2
  405b48:	cmp    edx,DWORD PTR [ecx+0x2e24db6d]
  405b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b4f:	ja     0x405b7b
  405b51:	pop    ebp
  405b52:	dec    ebp
  405b53:	sti    
  405b54:	in     al,0xca
  405b56:	and    bl,BYTE PTR [edx-0x77ac678b]
  405b5c:	mov    edi,0xa2990fa5
  405b61:	add    BYTE PTR [ebp*2-0x7805a9ff],dl
  405b68:	xchg   edi,eax
  405b69:	sub    eax,0x5e3628f4
  405b6e:	sahf   
  405b6f:	dec    ebx
  405b70:	pop    edi
  405b71:	jmp    0x4bbe:0x5135ddb5
  405b78:	mov    gs,WORD PTR [ecx]
  405b7a:	mov    al,0xf
  405b7c:	xchg   esi,eax
  405b7d:	cmp    al,0x24
  405b7f:	int    0x51
  405b81:	fld    TBYTE PTR [esi]
  405b83:	inc    ecx
  405b84:	push   ebp
  405b85:	dec    esp
  405b86:	sub    BYTE PTR [ebx-0x57],bl
  405b89:	cmp    eax,0xe64c6e9c
  405b8e:	aad    0x85
  405b90:	lods   al,BYTE PTR ds:[esi]
  405b91:	sub    DWORD PTR [ebx],edx
  405b93:	push   cs
  405b94:	push   esp
  405b95:	xor    edi,DWORD PTR [esi+ebp*8+0x107a2d32]
  405b9c:	jle    0x405c10
  405b9e:	leave  
  405b9f:	mov    DWORD PTR [ebp+0x77ca46d4],esp
  405ba5:	mov    BYTE PTR [eax-0x62d23f25],bh
  405bab:	das    
  405bac:	fdivrp st(2),st
  405bae:	sbb    esp,eax
  405bb0:	dec    esp
  405bb1:	nop
  405bb2:	pop    ecx
  405bb3:	ins    BYTE PTR es:[edi],dx
  405bb4:	test   BYTE PTR [ecx],bl
  405bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb7:	lock or al,0xb0
  405bba:	pop    ss
  405bbb:	sbb    DWORD PTR [ebp-0xe],edi
  405bbe:	dec    edi
  405bbf:	pushf  
  405bc0:	test   al,0x69
  405bc2:	into   
  405bc3:	push   DWORD PTR [edx-0x4c3e289c]
  405bc9:	push   edx
  405bca:	jle    0x405b73
  405bcc:	pop    ds
  405bcd:	jp     0x405c02
  405bcf:	jb     0x405b7c
  405bd1:	in     al,0x87
  405bd3:	push   es
  405bd4:	mov    bh,0x9b
  405bd6:	xchg   ebp,eax
  405bd7:	ret    0xc001
  405bda:	xor    al,0x3c
  405bdc:	pop    esi
  405bdd:	inc    eax
  405bde:	mov    bh,0xb7
  405be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be1:	jae    0x405b8a
  405be3:	out    0xfe,eax
  405be5:	pop    ecx
  405be6:	inc    eax
  405be7:	cmp    DWORD PTR ds:0x439184bb,eax
  405bed:	pop    es
  405bee:	jae    0x405b70
  405bf0:	daa    
  405bf1:	ucomiss xmm1,xmm7
  405bf4:	and    BYTE PTR [ecx],0x73
  405bf7:	sbb    DWORD PTR [esi+0x13],esi
  405bfa:	xchg   edi,eax
  405bfb:	jnp    0x405c20
  405bfd:	faddp  st(1),st
  405bff:	mov    al,ds:0x230ec8ce
  405c04:	(bad)  
  405c05:	jmp    0xf3577f70
  405c0a:	sbb    al,0x35
  405c0c:	daa    
  405c0d:	push   edi
  405c0e:	popa   
  405c0f:	das    
  405c10:	xchg   edx,eax
  405c11:	mov    ds:0x155dda2d,al
  405c16:	lock imul ebx,DWORD PTR [esi+0x33],0x46
  405c1b:	retf   0x353e
  405c1e:	pop    ds
  405c1f:	jae    0x405c41
  405c21:	addr16 jge 0x405c47
  405c24:	(bad)  
  405c25:	not    BYTE PTR [edx+edx*1]
  405c28:	cmc    
  405c29:	jmp    0x405c94
  405c2b:	sub    BYTE PTR [ebx],bh
  405c2d:	push   ebx
  405c2e:	or     ch,ah
  405c30:	inc    edx
  405c31:	inc    esp
  405c32:	push   es
  405c33:	(bad)  
  405c36:	aaa    
  405c37:	stos   DWORD PTR es:[edi],eax
  405c38:	not    BYTE PTR [ebx+0x29]
  405c3b:	dec    edi
  405c3c:	and    esi,0xffffffc1
  405c3f:	lock outs dx,DWORD PTR ds:[esi]
  405c41:	mov    ecx,0xe363b188
  405c46:	dec    eax
  405c47:	and    dl,BYTE PTR ds:0x7babb57b
  405c4d:	xor    ch,BYTE PTR [ebx]
  405c4f:	jp     0x405c82
  405c51:	dec    ecx
  405c52:	imul   BYTE PTR [ecx+0x3a]
  405c55:	sbb    eax,0x39d85c4a
  405c5a:	xor    BYTE PTR [edi-0x7f],al
  405c5d:	xor    al,0xd
  405c5f:	jge    0x405beb
  405c61:	mov    ds:0x4e659356,al
  405c66:	fbld   TBYTE PTR [ebx]
  405c68:	and    ah,BYTE PTR [ebx-0x45]
  405c6b:	inc    ecx
  405c6c:	(bad)  
  405c6d:	dec    DWORD PTR [eax-0x23]
  405c70:	enter  0xe0ae,0x7
  405c74:	inc    edi
  405c75:	fistp  DWORD PTR [esi-0x4cf8ca90]
  405c7b:	stos   DWORD PTR es:[edi],eax
  405c7c:	int    0xd0
  405c7e:	and    BYTE PTR [ebp+0xb0e8ddf],cl
  405c84:	xlat   BYTE PTR ds:[ebx]
  405c85:	aam    0xce
  405c87:	jle    0x405c21
  405c89:	ror    BYTE PTR [ebp-0x75e966ed],1
  405c8f:	push   0xffffff9a
  405c91:	xor    DWORD PTR [edx+0x4b],esi
  405c94:	mov    esi,0x3708ed9d
  405c99:	adc    al,0x51
  405c9b:	mov    edi,esi
  405c9d:	fsubr  QWORD PTR [edx+edx*4]
  405ca0:	in     al,dx
  405ca1:	imul   esp,DWORD PTR [ecx],0x4bfe390f
  405ca7:	inc    edi
  405ca8:	imul   ebp,DWORD PTR [ecx+ecx*4-0x64ded08c],0x7e
  405cb0:	mov    edi,DWORD PTR [esi+0x61]
  405cb3:	not    DWORD PTR [esi]
  405cb5:	jge    0x405d07
  405cb7:	mov    edi,0xe793691a
  405cbc:	mov    al,ds:0x76149ac3
  405cc1:	cmp    eax,DWORD PTR [ebp-0x5]
  405cc4:	cli    
  405cc5:	fstp   DWORD PTR [eax-0x63beef3e]
  405ccb:	mov    bl,0x94
  405ccd:	adc    al,0x84
  405ccf:	mov    edx,0x82033e01
  405cd4:	popf   
  405cd5:	add    eax,0xf16c9949
  405cda:	es sub al,0x7a
  405cdd:	or     esp,DWORD PTR [edx]
  405cdf:	je     0x405c88
  405ce1:	mov    dh,0xb8
  405ce3:	(bad)  
  405ce4:	pop    ds
  405ce5:	mov    edi,DWORD PTR [esi-0x2af40833]
  405ceb:	aam    0x15
  405ced:	and    BYTE PTR [esp+ecx*8],dh
  405cf0:	or     al,0x40
  405cf2:	jp     0x405ca9
  405cf4:	ins    BYTE PTR es:[edi],dx
  405cf5:	icebp  
  405cf6:	mov    dl,0x88
  405cf8:	jge    0x405d42
  405cfa:	jecxz  0x405d44
  405cfc:	mov    ds:0xfea01062,al
  405d01:	pop    ebp
  405d02:	jbe    0x405cb8
  405d04:	mov    ds:0x254acefa,eax
  405d09:	inc    ecx
  405d0a:	ins    DWORD PTR es:[edi],dx
  405d0b:	inc    edi
  405d0c:	cmp    BYTE PTR [esi],bh
  405d0e:	cmp    esi,DWORD PTR [edi+0x36]
  405d11:	mov    dh,0xf1
  405d13:	mov    dl,0xed
  405d15:	jnp    0x405cfe
  405d17:	adc    esp,esp
  405d19:	iret   
  405d1a:	xchg   DWORD PTR [edi+0xf],ecx
  405d1d:	inc    esp
  405d1e:	sub    BYTE PTR [ebx-0x25],0x63
  405d22:	dec    edi
  405d23:	and    ecx,ecx
  405d25:	mov    dh,BYTE PTR fs:[ebx+0x543bede9]
  405d2c:	inc    esi
  405d2d:	int3   
  405d2e:	push   0xffffff8c
  405d30:	or     cl,BYTE PTR [ebp+0x1b8d79ae]
  405d36:	mov    ebx,DWORD PTR fs:[eax+0x788eff4a]
  405d3d:	cmp    al,0x58
  405d3f:	xchg   ecx,eax
  405d40:	shr    BYTE PTR [edx+0x7d3a45ec],cl
  405d46:	shl    BYTE PTR [esi+0x6819a620],0x97
  405d4d:	in     eax,0xca
  405d4f:	sbb    BYTE PTR [edx-0x5d],dl
  405d52:	in     al,0x37
  405d54:	push   es
  405d55:	cmp    eax,0xc377af35
  405d5a:	pop    ecx
  405d5b:	sar    esp,1
  405d5d:	mov    dl,0xf6
  405d5f:	dec    eax
  405d60:	jne    0x405da0
  405d62:	mov    dl,BYTE PTR [edx-0x52b795a6]
  405d68:	mov    bh,0x5e
  405d6a:	out    dx,eax
  405d6b:	dec    eax
  405d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d6d:	dec    eax
  405d6e:	stos   BYTE PTR es:[edi],al
  405d6f:	jno    0x405dd7
  405d71:	enter  0x80d2,0x88
  405d75:	adc    eax,0xd9e93b8c
  405d7a:	fwait
  405d7b:	jge    0x405da3
  405d7d:	arpl   bp,bx
  405d7f:	mov    ds:0x519b5381,al
  405d84:	sbb    bl,BYTE PTR [ebp-0x5caa3f3]
  405d8a:	adc    eax,0x1d2f5352
  405d8f:	adc    ebx,edx
  405d91:	enter  0x3062,0x2f
  405d95:	sub    eax,0x4833326b
  405d9a:	test   esi,esp
  405d9c:	jo     0x405d75
  405d9e:	fwait
  405d9f:	adc    al,0xb
  405da1:	enter  0x3983,0x2c
  405da5:	hlt    
  405da6:	and    edx,esp
  405da8:	dec    esp
  405da9:	and    al,0xa2
  405dab:	sub    si,dx
  405dae:	out    dx,eax
  405daf:	test   BYTE PTR [ecx-0x1236818d],al
  405db5:	jle    0x405e1d
  405db7:	mov    edi,0x75d28617
  405dbc:	js     0x405de9
  405dbe:	in     al,0x4a
  405dc0:	mov    ds:0x9c362592,al
  405dc5:	popf   
  405dc6:	sbb    eax,DWORD PTR [edx]
  405dc8:	jb     0x405e2a
  405dca:	push   ds
  405dcb:	sub    DWORD PTR [ebx-0x21],edx
  405dce:	sbb    DWORD PTR [edx+0x42],edi
  405dd1:	(bad)  
  405dd2:	loope  0x405e20
  405dd4:	xchg   ecx,eax
  405dd5:	dec    ebp
  405dd6:	and    al,0x86
  405dd8:	test   al,0xec
  405dda:	cld    
  405ddb:	mov    ebx,DWORD PTR [ebx]
  405ddd:	sub    bh,dh
  405ddf:	sub    BYTE PTR [edx+0x22136e72],al
  405de5:	in     eax,0x29
  405de7:	push   ebx
  405de8:	cmp    BYTE PTR [ebx],dl
  405dea:	xchg   esp,eax
  405deb:	stos   DWORD PTR es:[edi],eax
  405dec:	push   eax
  405ded:	ds and al,0x9
  405df0:	pushf  
  405df1:	sbb    eax,0xba30a18a
  405df6:	loop   0x405da4
  405df8:	xor    al,0x40
  405dfa:	retf   0xec17
  405dfd:	scas   eax,DWORD PTR es:[edi]
  405dfe:	cmp    eax,0xa5062734
  405e03:	mov    ecx,DWORD PTR ds:0x62bed7c2
  405e09:	iret   
  405e0a:	imul   esp,ecx,0x16150519
  405e10:	adc    DWORD PTR [ebp+ebp*4-0x7a],esp
  405e14:	in     al,0x26
  405e16:	call   0xe27179d6
  405e1b:	jle    0x405dd8
  405e1d:	dec    edx
  405e1e:	cmp    eax,DWORD PTR [eax]
  405e20:	nop
  405e21:	mov    ch,cl
  405e23:	mov    dh,0x53
  405e25:	mov    edi,0xec2e38bb
  405e2a:	sub    al,0x72
  405e2c:	leave  
  405e2d:	jnp    0x405dd1
  405e2f:	stc    
  405e30:	dec    esi
  405e31:	repnz xor dh,BYTE PTR [ecx]
  405e34:	push   ecx
  405e35:	loop   0x405eb1
  405e37:	fs push ebp
  405e39:	imul   eax,DWORD PTR [eax+0x25],0xffffff8b
  405e3d:	mov    al,ds:0xe8c69cf8
  405e42:	psrlw  mm0,QWORD PTR [ebx]
  405e45:	sub    BYTE PTR [eax+0x267c1f14],ah
  405e4b:	dec    esi
  405e4c:	adc    eax,0xfc28261c
  405e51:	retf   0x6e7a
  405e54:	pop    edx
  405e55:	add    DWORD PTR [ebp-0x1ccb4500],ebx
  405e5b:	imul   ebx,esi,0x3259157c
  405e61:	xchg   edx,eax
  405e62:	sub    BYTE PTR [edi],dh
  405e64:	jle    0x405e40
  405e66:	fstp   TBYTE PTR [edx]
  405e68:	dec    ebx
  405e69:	pop    ebp
  405e6a:	mov    dh,BYTE PTR [eax-0x4e8cd0dc]
  405e70:	mov    cs,edx
  405e72:	pop    es
  405e73:	mov    bh,0x3d
  405e75:	imul   ebp,ecx,0xffffffc4
  405e78:	inc    edi
  405e79:	or     eax,0xc
  405e7c:	sbb    eax,0xb33ac4b1
  405e81:	pusha  
  405e82:	jnp    0x405ede
  405e84:	jo     0x405e62
  405e86:	ffreep st(0)
  405e88:	or     BYTE PTR [ecx+0x20],0xde
  405e8c:	iret   
  405e8d:	xor    DWORD PTR [edx+eax*1-0x2f],0xc00b4692
  405e95:	mov    ss,WORD PTR [ecx+0x7f72614d]
  405e9b:	add    BYTE PTR [ebp-0x6eb963ca],ch
  405ea1:	iret   
  405ea2:	jge    0x405e75
  405ea4:	dec    ebp
  405ea5:	cmp    cl,0x89
  405ea8:	mov    esi,0x8614510f
  405ead:	stc    
  405eae:	push   ebx
  405eaf:	arpl   WORD PTR [ebx],ax
  405eb1:	mov    es,eax
  405eb3:	and    BYTE PTR [edi+0x3e],bh
  405eb6:	das    
  405eb7:	scas   eax,DWORD PTR es:[edi]
  405eb8:	mov    ah,0xf8
  405eba:	ds mov dh,0xd2
  405ebd:	mov    ebp,ss
  405ebf:	pop    ebx
  405ec0:	or     al,0x2b
  405ec2:	popa   
  405ec3:	out    0x2c,eax
  405ec5:	dec    edx
  405ec6:	inc    ebx
  405ec7:	aad    0xe1
  405ec9:	adc    DWORD PTR [ebx],edx
  405ecb:	(bad)  
  405ecc:	cdq    
  405ecd:	inc    ebx
  405ece:	dec    esi
  405ecf:	test   eax,0xd1be5999
  405ed4:	cmp    esp,DWORD PTR [ebx-0x4419306e]
  405eda:	mov    eax,edi
  405edc:	or     al,0xce
  405ede:	outs   dx,BYTE PTR ds:[esi]
  405edf:	dec    eax
  405ee0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405ee2:	call   0x3f2d6ef
  405ee7:	gs std 
  405ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eea:	push   0xffffff8d
  405eec:	adc    DWORD PTR [ebx],0xffffffc0
  405eef:	(bad)  
  405ef0:	in     al,0xe5
  405ef2:	xor    BYTE PTR [edx+0x63],ch
  405ef5:	inc    ecx
  405ef6:	je     0x405ef6
  405ef8:	stos   BYTE PTR es:[edi],al
  405ef9:	les    eax,FWORD PTR [edx]
  405efb:	call   0x622a52ca
  405f00:	push   ecx
  405f01:	adc    al,0xe7
  405f03:	dec    bh
  405f05:	retf   0xe03d
  405f08:	push   es
  405f09:	sub    al,0x43
  405f0b:	js     0x405eb4
  405f0d:	jne    0x405ea3
  405f0f:	in     al,0xe7
  405f11:	fcmovu st,st(0)
  405f13:	fistp  WORD PTR [eax+0x1b]
  405f16:	cwde   
  405f17:	(bad)  
  405f18:	push   esi
  405f1a:	fild   WORD PTR [edx-0x30]
  405f1d:	or     BYTE PTR [eax-0x6],bl
  405f20:	(bad)  
  405f22:	xchg   esi,eax
  405f23:	mov    WORD PTR [esi],cs
  405f25:	(bad)  
  405f26:	pandn  mm2,QWORD PTR [eax]
  405f29:	mov    esp,0x768a48f5
  405f2e:	jge    0x405f10
  405f30:	(bad)  
  405f31:	mov    al,0x78
  405f33:	ins    DWORD PTR es:[edi],dx
  405f34:	pop    edx
  405f35:	stc    
  405f36:	push   eax
  405f37:	out    dx,eax
  405f38:	cmc    
  405f39:	shl    DWORD PTR [ebx+0x1b08a795],1
  405f3f:	int    0x20
  405f41:	sub    BYTE PTR [ebx],bh
  405f43:	stos   DWORD PTR es:[edi],eax
  405f44:	jge    0x405f1e
  405f46:	test   BYTE PTR [ebp-0x5dd3c33],ch
  405f4c:	addr16 mov ds:0x3b2b,al
  405f50:	fs pop edi
  405f52:	das    
  405f53:	or     eax,0x29a42bec
  405f58:	mov    dh,0xcd
  405f5a:	and    esp,DWORD PTR [edi-0x12]
  405f5d:	leave  
  405f5e:	cmc    
  405f5f:	or     al,0x26
  405f61:	cld    
  405f62:	cli    
  405f63:	push   ecx
  405f64:	out    dx,eax
  405f65:	int    0x8b
  405f67:	enter  0x291,0x9a
  405f6b:	push   0xeaa9845d
  405f70:	daa    
  405f71:	rol    BYTE PTR [ebp+0x53eeae31],cl
  405f77:	adc    al,0x3e
  405f79:	dec    ebp
  405f7a:	jecxz  0x405f0c
  405f7c:	push   esp
  405f7d:	and    DWORD PTR [ecx+0x18c03816],ebp
  405f83:	adc    esp,edi
  405f85:	push   ecx
  405f86:	mov    ecx,0x337441a6
  405f8b:	imul   BYTE PTR [edi-0x1251acd5]
  405f91:	scas   al,BYTE PTR es:[edi]
  405f92:	jbe    0x405f2d
  405f94:	std    
  405f95:	(bad)  [ebx]
  405f97:	add    eax,0xb51c9557
  405f9c:	adc    BYTE PTR [esi-0x77],dl
  405f9f:	ficom  DWORD PTR [ebx-0x35]
  405fa2:	je     0x405fcc
  405fa4:	dec    eax
  405fa5:	inc    esp
  405fa6:	(bad)  
  405fa7:	jnp    0x405fdc
  405fa9:	cmp    cl,BYTE PTR [edi+0x48]
  405fac:	mov    esp,0xdd5cb118
  405fb1:	fsub   DWORD PTR [ebx+0x3f]
  405fb4:	sbb    eax,0x2d318dbb
  405fb9:	je     0x406039
  405fbb:	outs   dx,WORD PTR ds:[esi]
  405fbd:	rcl    DWORD PTR [ebp+0x7],0xef
  405fc1:	push   ss
  405fc2:	jl     0x40602b
  405fc4:	jle    0x405ffb
  405fc6:	aas    
  405fc7:	fdivr  st,st(5)
  405fc9:	aam    0x6e
  405fcb:	out    0x1a,eax
  405fcd:	ss mov esp,esp
  405fd0:	fstp   QWORD PTR [esi+0x41]
  405fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd4:	xchg   ecx,eax
  405fd5:	push   edi
  405fd6:	jle    0x405f70
  405fd8:	fdivr  QWORD PTR [edi]
  405fda:	push   es
  405fdb:	push   ss
  405fdc:	ffreep st(1)
  405fde:	or     DWORD PTR [edi],eax
  405fe0:	addr16 pushf 
  405fe2:	aaa    
  405fe3:	dec    esp
  405fe4:	sub    esp,ebp
  405fe6:	cli    
  405fe7:	sahf   
  405fe8:	xchg   BYTE PTR [edi],dl
  405fea:	in     eax,dx
  405feb:	fwait
  405fec:	push   es
  405fed:	or     dh,cl
  405fef:	call   0x1556:0xdb70d45c
  405ff6:	sub    bh,ah
  405ff8:	lods   eax,DWORD PTR ds:[esi]
  405ff9:	push   ebx
  405ffa:	clc    
  405ffb:	mov    esp,0xa01e71f0
  406000:	call   0xda64305a
  406005:	mov    ?,WORD PTR [ebp-0x545f62e6]
  40600b:	mov    cl,0x2d
  40600d:	mov    ebp,0x8236b0b
  406012:	cmp    ebx,DWORD PTR [edi-0x239a193d]
  406018:	das    
  406019:	mov    esp,0xdefe1b53
  40601e:	mov    ebp,0x2ce6d17
  406023:	cmp    ch,bh
  406025:	fist   DWORD PTR [edx]
  406027:	(bad)  
  406028:	sti    
  406029:	xor    eax,0x2dc51fbb
  40602e:	sbb    BYTE PTR [edx+0x43474e18],0xf9
  406035:	pushf  
  406036:	mov    BYTE PTR [eax+0x1ed4eeea],cl
  40603c:	inc    ecx
  40603d:	jmp    FWORD PTR [esi-0x46574d82]
  406043:	hlt    
  406044:	dec    edi
  406045:	arpl   WORD PTR [ebp-0x69],si
  406048:	xchg   esp,eax
  406049:	sub    DWORD PTR [eax],0xffffff88
  40604c:	stc    
  40604d:	into   
  40604e:	fldcw  WORD PTR [esi+0x2f5c25c7]
  406054:	mov    esi,0xbc1f2a09
  406059:	out    dx,eax
  40605a:	sbb    eax,0xfac81dd3
  40605f:	imul   edi,DWORD PTR [eax-0x39],0xffffffa4
  406063:	push   cs
  406064:	sub    BYTE PTR ds:0x3cf7e517,0xc9
  40606b:	aaa    
  40606c:	or     BYTE PTR ds:0x5a9737,0xec
  406073:	inc    ebx
  406074:	fistp  WORD PTR [ebx-0x1b8e10d6]
  40607a:	add    eax,0xec7af439
  40607f:	leave  
  406080:	and    bh,BYTE PTR [edi-0x5c]
  406083:	xor    ah,BYTE PTR [edi]
  406085:	adc    al,0x9d
  406087:	cmp    DWORD PTR [ecx-0x2c],esp
  40608a:	push   edi
  40608b:	ds jne 0x40609b
  40608e:	popf   
  40608f:	jg     0x4060d3
  406091:	(bad)  [eax-0x267329f5]
  406097:	jbe    0x406089
  406099:	mov    al,BYTE PTR [esp+edi*2-0x31]
  40609d:	adc    eax,0x13b5afea
  4060a2:	dec    esi
  4060a3:	add    DWORD PTR [ebp-0x30],0x811d78bf
  4060aa:	fs jnp 0x406059
  4060ad:	ins    BYTE PTR es:[edi],dx
  4060ae:	mov    eax,DWORD PTR [ecx-0x327d6764]
  4060b4:	icebp  
  4060b5:	jbe    0x406074
  4060b7:	cmp    ch,BYTE PTR [edi-0x4c85208f]
  4060bd:	dec    ecx
  4060be:	ds test eax,0xf788f9a7
  4060c4:	mov    edi,0xcf04e168
  4060c9:	xchg   esp,eax
  4060ca:	lods   eax,DWORD PTR ds:[esi]
  4060cb:	mov    ebx,0xbf9254a9
  4060d0:	push   eax
  4060d1:	pop    ds
  4060d2:	icebp  
  4060d3:	jle    0x4060d9
  4060d5:	inc    eax
  4060d6:	jbe    0x4060ac
  4060d8:	popa   
  4060d9:	les    esp,FWORD PTR [eax]
  4060db:	sbb    ebp,ecx
  4060dd:	cmp    ah,ah
  4060df:	pop    esi
  4060e0:	inc    esp
  4060e1:	mov    esi,0x20b183b1
  4060e6:	mov    ch,0x9c
  4060e8:	loop   0x406165
  4060ea:	add    edx,DWORD PTR [edx-0x3ac9ee89]
  4060f0:	sub    BYTE PTR [eax],ch
  4060f2:	or     DWORD PTR [edi],edx
  4060f4:	sub    al,0xa5
  4060f6:	pop    eax
  4060f7:	push   esi
  4060f8:	add    DWORD PTR [edi-0x20b67840],esp
  4060fe:	jae    0x406177
  406100:	dec    edx
  406101:	inc    ebp
  406102:	stos   DWORD PTR es:[edi],eax
  406103:	inc    ebp
  406104:	cmp    al,0x2d
  406106:	push   es
  406107:	sbb    BYTE PTR [edx-0xc3543fe],al
  40610d:	(bad)  
  40610e:	sbb    eax,0x2242d250
  406113:	cmp    al,0xa6
  406115:	aaa    
  406116:	sbb    edi,edx
  406118:	jae    0x406126
  40611a:	sub    BYTE PTR [edi],0xa4
  40611d:	fidiv  DWORD PTR [edi]
  40611f:	cmp    esi,DWORD PTR [ebp+0x7c]
  406122:	jl     0x406145
  406124:	push   ss
  406125:	sbb    BYTE PTR ds:0x367e5f09,al
  40612b:	iret   
  40612c:	(bad)  
  40612d:	not    DWORD PTR [ecx-0x259dd380]
  406133:	fadd   QWORD PTR [ebp+0x36]
  406136:	push   eax
  406137:	mov    bh,0xf5
  406139:	cmp    al,0x2
  40613b:	retf   
  40613c:	hlt    
  40613d:	mov    bl,0xee
  40613f:	sub    DWORD PTR [edx+ebp*1+0x42],ecx
  406143:	jmp    0x41f0:0x2a4efde3
  40614a:	xchg   esp,eax
  40614b:	mov    eax,ds:0xe715dba4
  406150:	mov    ah,BYTE PTR [ebx]
  406152:	add    bl,cl
  406154:	and    eax,0x40d30e2c
  406159:	(bad)  
  40615a:	add    bl,BYTE PTR [ebx]
  40615c:	int3   
  40615d:	sbb    ah,bh
  40615f:	ins    DWORD PTR es:[edi],dx
  406160:	hlt    
  406161:	adc    BYTE PTR [ebp-0x3f38549e],bh
  406167:	inc    esp
  406168:	mov    ah,0xd4
  40616a:	mov    ds:0x3c0bfc4b,al
  40616f:	xchg   BYTE PTR [ebx+esi*8],ch
  406172:	mov    ecx,0x9761c0a5
  406177:	xor    bl,BYTE PTR [esi+ebx*2-0x17]
  40617b:	sar    DWORD PTR [edx-0x71d2d4d0],cl
  406181:	call   FWORD PTR [esi-0x72]
  406184:	push   0xd410f2cb
  406189:	call   0x4376:0xff94685d
  406190:	jbe    0x4061c2
  406192:	push   ebx
  406193:	int3   
  406194:	and    DWORD PTR [ebx],edi
  406196:	(bad)  
  406197:	jno    0x40619c
  406199:	imul   ecx,esp,0x9aa81223
  40619f:	dec    ecx
  4061a0:	or     al,BYTE PTR [eax+0xaa39945]
  4061a6:	mov    WORD PTR [ebx],cs
  4061a8:	sti    
  4061a9:	retf   0x7ff8
  4061ac:	mov    fs,WORD PTR [edi+0x55]
  4061af:	jnp    0x4061c8
  4061b1:	mov    ebx,0x31125a0
  4061b6:	cmc    
  4061b7:	mov    ah,BYTE PTR ds:0xd8a9ff5e
  4061bd:	aad    0xb7
  4061bf:	dec    ecx
  4061c0:	scas   eax,DWORD PTR es:[edi]
  4061c1:	push   esi
  4061c2:	mov    BYTE PTR [esi],dl
  4061c4:	add    ecx,ebp
  4061c6:	add    dl,dh
  4061c8:	aad    0x4f
  4061ca:	xor    eax,0xe5caadaa
  4061cf:	shl    DWORD PTR [esi-0x1d],cl
  4061d2:	nop
  4061d3:	data16 and ch,bl
  4061d6:	lea    ebx,[eax-0x19]
  4061d9:	loope  0x4061dd
  4061db:	pop    eax
  4061dc:	or     DWORD PTR [ebx-0x6e],eax
  4061df:	enter  0x6007,0x68
  4061e3:	xor    al,0xaf
  4061e5:	into   
  4061e6:	adc    DWORD PTR [edx],0xa47f9ab0
  4061ec:	sbb    ah,BYTE PTR [edx+ecx*2-0x2695e63f]
  4061f3:	fstp   DWORD PTR [esi-0x58]
  4061f6:	fist   WORD PTR [edx]
  4061f8:	cld    
  4061f9:	pop    esp
  4061fa:	ficomp WORD PTR [edx-0xb]
  4061fd:	hlt    
  4061fe:	pop    edx
  4061ff:	and    ebp,ebp
  406201:	or     al,0x16
  406203:	rcl    BYTE PTR ss:[esi+0x49f7c98],1
  40620a:	repz jle 0x40625a
  40620d:	mov    ah,0xa1
  40620f:	in     eax,0x73
  406211:	add    bl,BYTE PTR [ebx+0x7f324cf3]
  406217:	xchg   esp,eax
  406218:	sub    al,0x66
  40621a:	fldcw  WORD PTR [edx+esi*1-0x7]
  40621e:	mov    dl,0x9d
  406220:	push   cs
  406221:	je     0x406243
  406223:	pop    edi
  406224:	icebp  
  406225:	xor    eax,0x18e62715
  40622a:	pop    eax
  40622b:	mov    gs,WORD PTR [ebp+0x43]
  40622e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622f:	mov    ds:0x4649c379,al
  406234:	(bad)  
  406236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406238:	mov    bl,0xfc
  40623a:	pusha  
  40623b:	xlat   BYTE PTR ds:[ebx]
  40623c:	das    
  40623d:	(bad)  
  40623e:	push   edx
  40623f:	popa   
  406240:	xchg   ebx,eax
  406241:	pop    es
  406242:	ss adc al,0xca
  406245:	mov    WORD PTR [eax+0x63],es
  406248:	ret    
  406249:	shl    DWORD PTR ds:0xe7daf061,0x9e
  406250:	mov    al,BYTE PTR [ebp-0x24]
  406253:	add    dl,BYTE PTR [edx-0x39]
  406256:	add    eax,0x2669efe3
  40625b:	hlt    
  40625c:	mov    al,BYTE PTR [esi+0x17]
  40625f:	popf   
  406260:	mov    ebp,0x9f5e710f
  406265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406266:	leave  
  406267:	xor    bl,BYTE PTR [edx-0x44]
  40626a:	sbb    BYTE PTR ds:0x66ad320c,0xb4
  406271:	adc    DWORD PTR [ecx-0x1d],ebp
  406274:	mov    al,ds:0x8ae4059d
  406279:	mov    DWORD PTR [ebx+edx*4],esi
  40627c:	xchg   esi,eax
  40627d:	loopne 0x4062e9
  40627f:	sti    
  406280:	sti    
  406281:	je     0x4062fe
  406283:	add    DWORD PTR [ebp-0x6c08002f],ecx
  406289:	retf   
  40628a:	or     DWORD PTR [edi],0x84ba883e
  406290:	xor    DWORD PTR [edx+ecx*8-0x18],esp
  406294:	shr    BYTE PTR [edx+edx*2],cl
  406297:	inc    ecx
  406298:	xor    al,0x2f
  40629a:	mov    WORD PTR [esi+edi*1-0x14],gs
  40629e:	and    al,0x4e
  4062a0:	push   ecx
  4062a1:	inc    edi
  4062a2:	mov    WORD PTR [eax],ds
  4062a4:	ror    ch,0x64
  4062a7:	jp     0x40631a
  4062a9:	cmp    al,0x3
  4062ab:	cdq    
  4062ac:	stos   DWORD PTR es:[edi],eax
  4062ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062ae:	mov    al,ds:0x26dd777c
  4062b3:	adc    al,0x90
  4062b5:	data16 cli 
  4062b7:	or     ch,BYTE PTR [edi+eiz*1+0x47]
  4062bb:	adc    BYTE PTR [esi+0x792d06f],cl
  4062c1:	(bad)  
  4062c2:	xor    eax,0x5d44a11b
  4062c7:	mov    ch,dh
  4062c9:	pushf  
  4062ca:	mov    cl,0x16
  4062cc:	xchg   BYTE PTR [ebp-0x1e569198],ch
  4062d2:	sub    DWORD PTR [esi],esp
  4062d4:	mov    bh,0x61
  4062d6:	std    
  4062d7:	jge    0x4062ef
  4062d9:	repz jecxz 0x40627b
  4062dc:	jg     0x40634b
  4062de:	test   BYTE PTR [esi-0xc325b5],0xc0
  4062e5:	cmp    eax,0x332d5cd
  4062ea:	repnz and al,0x1b
  4062ed:	sbb    BYTE PTR [eax-0x55],dl
  4062f0:	outs   dx,DWORD PTR ds:[esi]
  4062f1:	inc    esi
  4062f2:	les    ecx,FWORD PTR [ebx-0xd]
  4062f5:	unpcklps xmm2,XMMWORD PTR [edi+0x2b]
  4062f9:	pop    edx
  4062fa:	out    0xf3,al
  4062fc:	ror    eax,0xb4
  4062ff:	int    0x15
  406301:	and    BYTE PTR [ebx+ecx*4-0x9],0x70
  406306:	jae    0x406386
  406308:	dec    ecx
  406309:	in     al,0x5f
  40630b:	mov    esp,0x4ef0910e
  406310:	mov    al,0xd0
  406312:	dec    edi
  406313:	(bad)  
  406314:	lods   al,BYTE PTR ds:[esi]
  406315:	out    dx,eax
  406316:	frstor [ecx-0x76491cd0]
  40631c:	jmp    FWORD PTR [ebx-0xb]
  40631f:	icebp  
  406320:	std    
  406321:	push   edi
  406322:	mov    BYTE PTR ds:0xbd81ec9e,ah
  406328:	enter  0xd5dd,0x99
  40632c:	bound  ebx,QWORD PTR [ecx+0x7e]
  40632f:	jecxz  0x40632f
  406331:	dec    edi
  406332:	xchg   edi,eax
  406333:	scas   eax,DWORD PTR es:[edi]
  406334:	scas   eax,DWORD PTR es:[edi]
  406335:	loop   0x406316
  406337:	(bad)  
  406338:	stc    
  406339:	xor    BYTE PTR [edi+edx*8-0x155604f5],0x68
  406341:	xchg   ecx,eax
  406342:	mov    eax,ds:0xebf1e453
  406347:	fwait
  406348:	outs   dx,DWORD PTR ds:[esi]
  406349:	leave  
  40634a:	cwde   
  40634b:	or     al,0x14
  40634d:	inc    edi
  40634e:	mov    ah,BYTE PTR [ebx+0x1e]
  406351:	leave  
  406352:	xlat   BYTE PTR ds:[ebx]
  406353:	push   0x98eac158
  406358:	and    ecx,DWORD PTR [ebx+0x65]
  40635b:	pushf  
  40635c:	out    0x78,eax
  40635e:	aam    0x3a
  406360:	and    bh,ah
  406362:	(bad)  
  406363:	and    al,0xfa
  406365:	jmp    0x933d:0x20427a17
  40636c:	add    al,0x81
  40636e:	jge    0x4063e2
  406370:	out    0xd5,al
  406372:	xchg   esp,eax
  406373:	push   esp
  406374:	cld    
  406375:	and    ah,dl
  406377:	mov    esp,0xf90a918
  40637c:	xchg   edx,eax
  40637d:	lods   eax,DWORD PTR ds:[esi]
  40637e:	fdivr  QWORD PTR [ebp-0x3a02bb37]
  406384:	pop    ebp
  406385:	das    
  406386:	push   cs
  406387:	pop    ss
  406388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406389:	xchg   ecx,eax
  40638a:	push   ss
  40638b:	mov    ecx,0xc1a3750f
  406390:	pop    edi
  406391:	push   ecx
  406392:	cmp    esi,DWORD PTR [ecx+0x4e0500a2]
  406398:	(bad)  
  406399:	xlat   BYTE PTR ds:[ebx]
  40639a:	loopne 0x406322
  40639c:	adc    DWORD PTR [edx+0x5f6c88b0],0x38
  4063a3:	ret    0xfd04
  4063a6:	mov    bl,0x45
  4063a8:	add    ecx,DWORD PTR [ebx+ecx*2]
  4063ab:	mov    dl,0x8b
  4063ad:	jns    0x4063a0
  4063af:	mov    esi,esp
  4063b1:	push   ebp
  4063b2:	cmp    edx,DWORD PTR [edx+0x54]
  4063b5:	sbb    DWORD PTR [edx+ebx*2+0xf],0xdaac489f
  4063bd:	ret    0xcdd0
  4063c0:	jbe    0x406397
  4063c2:	cmp    BYTE PTR [ebx-0x20],ch
  4063c5:	stos   BYTE PTR es:[edi],al
  4063c6:	and    eax,0x644f9ef0
  4063cb:	xchg   esp,eax
  4063cc:	sti    
  4063cd:	repz adc eax,0x1d5abcd8
  4063d3:	in     eax,dx
  4063d4:	icebp  
  4063d5:	jp     0x406419
  4063d7:	mov    cs,ebx
  4063d9:	pop    DWORD PTR ds:0x12c30a57
  4063df:	add    bh,BYTE PTR [eax]
  4063e1:	cmp    BYTE PTR [edi-0x63],bh
  4063e4:	or     DWORD PTR [ebp+0x79edd42f],ebp
  4063ea:	xlat   BYTE PTR ds:[ebx]
  4063eb:	inc    esi
  4063ec:	mov    edx,0x734bc75b
  4063f1:	mov    bl,0xd6
  4063f3:	out    0xb2,eax
  4063f5:	lods   al,BYTE PTR ds:[esi]
  4063f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f7:	and    eax,0x70bb2fef
  4063fc:	rcl    BYTE PTR [edx],cl
  4063fe:	mov    edi,0xdf12b04b
  406403:	pop    ss
  406404:	fadd   DWORD PTR [ebx+0x29]
  406407:	in     eax,0x41
  406409:	and    DWORD PTR [ecx-0x52],edi
  40640c:	and    al,0xd2
  40640e:	call   0x9da09d3f
  406413:	xlat   BYTE PTR ds:[ebx]
  406414:	jbe    0x4063a6
  406416:	in     eax,dx
  406417:	ds fwait
  406419:	loop   0x4063d0
  40641b:	std    
  40641c:	xor    al,0x7e
  40641e:	stc    
  40641f:	mov    ebp,0xe18bf40a
  406424:	cmp    edx,DWORD PTR [ecx-0x1f998c53]
  40642a:	xchg   BYTE PTR [edx+edi*8],dh
  40642d:	out    dx,al
  40642e:	sub    DWORD PTR [ebp+0x94e555b],edi
  406434:	data16 ficom WORD PTR [esi+0x29d271ab]
  40643b:	mov    cl,0x1
  40643d:	mov    edx,0xb3b7662e
  406442:	push   esp
  406443:	xor    BYTE PTR [ecx+0x52573c5],dl
  406449:	bound  edi,QWORD PTR [edx*8-0x7de6462c]
  406450:	loope  0x4064af
  406452:	pop    esp
  406453:	call   DWORD PTR [esi+0x1f6c7b89]
  406459:	aam    0x2e
  40645b:	pop    ss
  40645c:	dec    edx
  40645d:	sbb    DWORD PTR [eax+0x5cdec1ce],esi
  406463:	inc    esi
  406464:	iret   
  406465:	rcr    DWORD PTR [ecx+0x4f288f77],0xa
  40646c:	imul   edi,DWORD PTR [edx+0x41],0x4e
  406470:	xor    eax,0x4a1c6de6
  406475:	xchg   edx,eax
  406476:	mov    al,ds:0x5ce0c415
  40647b:	fistp  QWORD PTR [ebp-0x42c3cb6a]
  406481:	lea    edi,[esp+edx*8]
  406484:	in     al,0xcd
  406486:	cvtpi2ps xmm2,QWORD PTR [edi+0x78]
  40648a:	mov    ah,0x13
  40648c:	mov    ebp,0x7ad85eba
  406491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406492:	es in  al,0xe7
  406495:	enter  0xedae,0x41
  406499:	pushf  
  40649a:	mov    al,ds:0x23209232
  40649f:	sti    
  4064a0:	mov    ds,WORD PTR [edi-0x65e11694]
  4064a6:	mov    edx,0xa2e96d9f
  4064ab:	jbe    0x406473
  4064ad:	xor    esi,DWORD PTR [edx-0x48]
  4064b0:	sub    eax,0x837cfff3
  4064b5:	xor    eax,edi
  4064b7:	pop    es
  4064b8:	or     DWORD PTR [eax+eax*8-0x2f],edi
  4064bc:	cwde   
  4064bd:	neg    DWORD PTR [eax-0x5e]
  4064c0:	or     esp,esp
  4064c2:	sub    eax,0x1cc31ea2
  4064c7:	out    dx,eax
  4064c8:	or     cl,BYTE PTR [ecx+0x5f9e80f6]
  4064ce:	add    eax,0x371eb830
  4064d3:	push   ss
  4064d4:	push   ss
  4064d5:	push   edx
  4064d6:	stc    
  4064d7:	mov    ds,ecx
  4064d9:	cs cmc 
  4064db:	mov    esi,0xf7572cb5
  4064e0:	push   ecx
  4064e1:	pop    ebx
  4064e2:	inc    eax
  4064e3:	stc    
  4064e4:	jl     0x406483
  4064e6:	jne    0x40649a
  4064e8:	push   es
  4064e9:	int3   
  4064ea:	sbb    eax,0x282507aa
  4064ef:	call   0xb63caced
  4064f4:	pop    ecx
  4064f5:	std    
  4064f6:	dec    esp
  4064f7:	rcr    DWORD PTR [esi],0xe1
  4064fa:	and    eax,0x3cf71248
  4064ff:	xchg   ecx,eax
  406500:	push   ss
  406501:	cmp    al,0x85
  406503:	or     DWORD PTR [ebx+eiz*8-0x47],esi
  406507:	push   esi
  406508:	adc    DWORD PTR [ebx+0x64],0x5
  40650c:	inc    edi
  40650d:	and    edx,DWORD PTR [edx+0x281b5295]
  406513:	lods   al,BYTE PTR ds:[esi]
  406514:	dec    ebx
  406515:	sar    BYTE PTR [edi+0x498168a],0x78
  40651c:	mov    edi,0x1998d8e6
  406521:	test   DWORD PTR [ecx],edx
  406523:	sub    BYTE PTR [ecx+0xc],bl
  406526:	aad    0x7d
  406528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406529:	dec    edi
  40652a:	shl    BYTE PTR [ebx-0x1b],1
  40652d:	xor    eax,0x2eaa3f97
  406532:	test   eax,0x3fb32a0f
  406537:	xor    ebp,DWORD PTR [edx-0x78]
  40653a:	ss test eax,0xa5fc6a2d
  406540:	mov    eax,0xc68d96eb
  406545:	mov    al,0x43
  406547:	hlt    
  406548:	dec    ebx
  406549:	adc    ecx,DWORD PTR [edi+0x2b6c00f]
  40654f:	xor    DWORD PTR [ebp-0x75d8aca6],esp
  406555:	cmp    al,0xf
  406557:	test   BYTE PTR [esi],ch
  406559:	into   
  40655a:	fcmovb st,st(7)
  40655c:	aam    0x13
  40655e:	and    al,0xf9
  406560:	fnstcw WORD PTR [ebp+0x39ad5d42]
  406566:	mov    bl,0x9b
  406568:	(bad)  
  406569:	sar    DWORD PTR [esi+0x7f],0x66
  40656d:	fs popa 
  40656f:	pop    es
  406570:	pop    eax
  406571:	popf   
  406572:	push   esi
  406573:	mov    dl,0x6e
  406575:	push   ss
  406576:	rol    BYTE PTR [ecx+0x1c5bd545],cl
  40657c:	dec    ebx
  40657d:	or     edi,DWORD PTR [ebx+eiz*8-0x17]
  406581:	loop   0x40657b
  406583:	cmp    edx,DWORD PTR ds:0xeb9b0dcd
  406589:	add    eax,0x72c2e71a
  40658e:	cmp    al,0x16
  406590:	mov    dh,BYTE PTR [edx-0x27]
  406593:	add    ch,BYTE PTR [esi]
  406595:	mov    BYTE PTR [ecx-0x66],al
  406598:	dec    edx
  406599:	mov    esi,0xd5bbc700
  40659e:	push   edx
  40659f:	sub    eax,0x11501909
  4065a4:	add    bh,BYTE PTR [edx-0x4e]
  4065a7:	push   es
  4065a8:	cmp    edx,DWORD PTR [ecx+0x40851338]
  4065ae:	jg     0x406615
  4065b0:	popa   
  4065b1:	dec    esi
  4065b2:	je     0x4065c3
  4065b4:	pop    edx
  4065b5:	jbe    0x4065dc
  4065b7:	test   cl,al
  4065b9:	mov    ds:0x70339755,eax
  4065be:	jo     0x406574
  4065c0:	sbb    eax,0x62253710
  4065c5:	push   esi
  4065c6:	idiv   DWORD PTR [ebp+ecx*4-0x27bd35c5]
  4065cd:	lods   al,BYTE PTR ds:[esi]
  4065ce:	(bad)  
  4065cf:	or     esp,DWORD PTR [ebp-0x71]
  4065d2:	pop    edi
  4065d3:	inc    ebx
  4065d4:	and    BYTE PTR [edx+edx*1],bh
  4065d7:	mov    ecx,0xb9d592ca
  4065dc:	xchg   ecx,eax
  4065dd:	pop    ss
  4065de:	cmc    
  4065df:	jg     0x4065d4
  4065e1:	jl     0x4065b9
  4065e3:	je     0x4065c7
  4065e5:	or     DWORD PTR [edx],ebx
  4065e7:	jne    0x406598
  4065e9:	jbe    0x40662c
  4065eb:	ret    0x23d3
  4065ee:	jae    0x406606
  4065f0:	cmp    eax,0x7d6cde9c
  4065f5:	clc    
  4065f6:	jg     0x40663f
  4065f8:	loope  0x4065e6
  4065fa:	add    eax,0x5e0cf5ca
  4065ff:	mov    ch,0xc0
  406601:	(bad)  
  406602:	out    0xaf,al
  406604:	lahf   
  406605:	dec    esp
  406606:	push   ebx
  406607:	sbb    DWORD PTR [edi-0x3af79fb1],ebp
  40660d:	mov    al,ds:0xacf94ca
  406612:	call   0x8b76:0x4e8b208e
  406619:	mov    edi,0xb2ba85ee
  40661e:	add    esi,esp
  406620:	pop    ds
  406621:	cli    
  406622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406623:	(bad)  
  406624:	fisttp WORD PTR [ebx]
  406626:	xchg   esi,eax
  406627:	push   ecx
  406628:	ror    esi,cl
  40662a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40662b:	mov    ch,BYTE PTR [esi+0x1c]
  40662e:	popa   
  40662f:	xchg   ah,bh
  406631:	int    0x7b
  406633:	sub    al,0xf7
  406635:	mov    edi,0xd2b11edd
  40663a:	dec    esp
  40663b:	arpl   WORD PTR [ebp+0x3b],ax
  40663e:	xor    eax,0x646d773b
  406643:	push   eax
  406644:	retf   0x8b1b
  406647:	push   esp
  406648:	jecxz  0x406611
  40664a:	dec    esi
  40664b:	push   ds
  40664c:	push   cs
  40664d:	xor    al,0x60
  40664f:	mov    bh,0xe7
  406651:	in     eax,dx
  406652:	cld    
  406653:	test   DWORD PTR [esi+0x4744b9ca],0x36f08e8d
  40665d:	in     al,0xe2
  40665f:	jb     0x40667b
  406661:	shld   DWORD PTR [ecx+0x78],edi,0x66
  406666:	cmp    BYTE PTR [ecx+edx*1],al
  406669:	push   ecx
  40666a:	pop    esi
  40666b:	sar    DWORD PTR [edx],1
  40666d:	jp     0x4066d6
  40666f:	ins    BYTE PTR es:[edi],dx
  406670:	ret    
  406671:	dec    esi
  406672:	fimul  DWORD PTR [eax-0x3]
  406675:	retf   
  406676:	imul   DWORD PTR [edi+0x2a]
  406679:	cmp    eax,0xe40b0d36
  40667e:	(bad)  [ecx-0x2c]
  406681:	imul   ecx,DWORD PTR [ebx],0xd53287a6
  406687:	sub    al,0xa6
  406689:	jo     0x40665c
  40668b:	or     esi,DWORD PTR [edx+0x6529aa4f]
  406691:	mov    al,BYTE PTR [eax-0x1463f6f9]
  406697:	xchg   ebp,eax
  406698:	stc    
  406699:	cwde   
  40669a:	xchg   BYTE PTR [ebx-0x183bfa51],bl
  4066a0:	das    
  4066a1:	in     eax,0x18
  4066a3:	dec    esp
  4066a4:	fs mov esi,ebx
  4066a7:	ins    BYTE PTR es:[edi],dx
  4066a8:	pop    eax
  4066a9:	push   0xb
  4066ab:	sub    al,0xef
  4066ad:	mov    edi,0xe17b7b35
  4066b2:	pop    esi
  4066b3:	ins    DWORD PTR es:[edi],dx
  4066b4:	cmp    cl,al
  4066b6:	pop    ecx
  4066b7:	sahf   
  4066b8:	dec    ebp
  4066b9:	popa   
  4066ba:	scas   al,BYTE PTR es:[edi]
  4066bb:	enter  0xf8cc,0x25
  4066bf:	(bad)  
  4066c0:	pop    eax
  4066c1:	mov    eax,ds:0xb7b95ec9
  4066c6:	ret    0x3d9f
  4066c9:	xchg   ebx,eax
  4066ca:	in     al,dx
  4066cb:	adc    ch,0x2
  4066ce:	cmp    edx,DWORD PTR [edi+eax*2]
  4066d1:	lock sub al,0x5f
  4066d4:	jo     0x406696
  4066d6:	mov    esi,0x5be6d36
  4066db:	push   0x578566d7
  4066e0:	sub    ah,BYTE PTR [edi-0x6d49e1ac]
  4066e6:	(bad)  
  4066e7:	mov    ecx,0x8d762008
  4066ec:	push   eax
  4066ed:	ss aam 0xcd
  4066f0:	adc    bh,BYTE PTR [ebp+0x37]
  4066f3:	stos   DWORD PTR es:[edi],eax
  4066f4:	shl    BYTE PTR [esi+edx*1],0x91
  4066f8:	imul   ebx,DWORD PTR [ebp-0xa],0x5a
  4066fc:	and    bh,BYTE PTR [edi*2-0x1b2566dd]
  406703:	pop    ebp
  406704:	xchg   edx,eax
  406705:	cmp    eax,0xfccb99c5
  40670a:	lea    edi,[ebp+ecx*2+0x36847e85]
  406711:	(bad)  
  406712:	icebp  
  406713:	sbb    DWORD PTR [edx],ebp
  406715:	das    
  406716:	push   esi
  406717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406718:	push   esp
  406719:	out    dx,eax
  40671a:	dec    esi
  40671b:	pop    edi
  40671c:	cmp    bh,BYTE PTR [edx-0x75a27389]
  406722:	sub    al,0x6d
  406724:	mov    edi,0xa50d512c
  406729:	arpl   WORD PTR [ecx+0x38],cx
  40672c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40672d:	mov    ds:0x7b70f406,al
  406732:	iret   
  406733:	add    edi,DWORD PTR [ebx+eiz*8]
  406736:	dec    ebp
  406737:	mov    bl,0xdb
  406739:	stos   BYTE PTR es:[edi],al
  40673a:	push   es
  40673b:	cli    
  40673c:	push   ss
  40673d:	and    DWORD PTR [esi-0x1a4fadc1],0x8666ca18
  406747:	inc    edi
  406748:	in     eax,dx
  406749:	mov    eax,0x674ccd28
  40674e:	xor    ah,BYTE PTR [esi+0x25]
  406751:	test   al,bl
  406753:	div    BYTE PTR [ebx-0x261c15e7]
  406759:	push   ds
  40675a:	jns    0x406771
  40675c:	clc    
  40675d:	jle    0x406749
  40675f:	mov    BYTE PTR ds:0x90be5bcf,ah
  406765:	jl     0x4067b1
  406767:	push   0x3e
  406769:	jae    0x4067d7
  40676b:	cli    
  40676c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40676d:	and    BYTE PTR [eax+0x65],cl
  406770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406771:	ins    DWORD PTR es:[edi],dx
  406772:	out    0x9d,al
  406774:	lock jne 0x406717
  406777:	rol    BYTE PTR [edi-0x29f9f240],cl
  40677d:	mov    BYTE PTR [eax+eax*4],cl
  406780:	jo     0x406727
  406782:	test   BYTE PTR [ecx+0x236741af],dl
  406788:	daa    
  406789:	mov    esp,0x2ac0d58
  40678e:	fisttp QWORD PTR [ecx+0x3592dd62]
  406794:	(bad)  
  406796:	(bad)  
  406797:	sar    esi,1
  406799:	ror    ch,1
  40679b:	sub    DWORD PTR ds:0x7140c12b,edi
  4067a1:	(bad)  
  4067a2:	outs   dx,BYTE PTR ds:[esi]
  4067a3:	xchg   esp,eax
  4067a4:	test   al,0xa8
  4067a6:	cdq    
  4067a7:	mov    ds,WORD PTR ds:0xee7dc909
  4067ad:	gs dec edx
  4067af:	(bad)  
  4067b0:	xor    eax,0x83418061
  4067b5:	and    al,0xfd
  4067b7:	xor    ecx,edx
  4067b9:	stc    
  4067ba:	jo     0x40677b
  4067bc:	sub    al,0x1a
  4067be:	ins    DWORD PTR es:[edi],dx
  4067bf:	sahf   
  4067c0:	fcom   QWORD PTR [ebx]
  4067c2:	push   esp
  4067c3:	and    dh,BYTE PTR ds:0x5a2a9833
  4067c9:	out    0x67,eax
  4067cb:	sub    eax,DWORD PTR [eax-0x136421de]
  4067d1:	daa    
  4067d2:	jl     0x4067f3
  4067d4:	bound  eax,QWORD PTR [eax+0x74f6b721]
  4067da:	packssdw mm6,mm1
  4067dd:	scas   al,BYTE PTR es:[edi]
  4067de:	aaa    
  4067df:	out    dx,al
  4067e0:	dec    esp
  4067e1:	dec    esi
  4067e2:	dec    eax
  4067e3:	xor    al,0xff
  4067e5:	adc    DWORD PTR [edx-0x24],esi
  4067e8:	shl    BYTE PTR [ecx+0x31587e9d],cl
  4067ee:	push   cs
  4067ef:	sbb    si,si
  4067f2:	and    esi,eax
  4067f4:	popf   
  4067f5:	or     edi,edi
  4067f7:	jns    0x406789
  4067f9:	lods   eax,DWORD PTR ds:[esi]
  4067fa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4067fc:	jp     0x4067bf
  4067fe:	inc    esi
  4067ff:	inc    edi
  406800:	fdiv   DWORD PTR [eax-0x58]
  406803:	adc    BYTE PTR [edi+eax*4+0x4a],ah
  406807:	xchg   ebx,eax
  406808:	retf   0xcfd3
  40680b:	shl    esi,cl
  40680d:	cdq    
  40680e:	mov    BYTE PTR [edi],ah
  406810:	clc    
  406811:	shl    cl,cl
  406813:	loop   0x4067d1
  406815:	pop    ebp
  406816:	cdq    
  406817:	mov    ecx,0xc1540494
  40681c:	aam    0xfe
  40681e:	(bad)  
  40681f:	cmp    BYTE PTR [ebp-0x4c],bl
  406822:	push   edx
  406823:	mov    ah,0xe8
  406825:	jb     0x4067ce
  406827:	pop    ebx
  406828:	cmp    BYTE PTR [ebx-0x49af45dc],bl
  40682e:	stos   DWORD PTR es:[edi],eax
  40682f:	rol    ebp,cl
  406831:	sbb    ecx,DWORD PTR [ebp-0x38]
  406834:	faddp  st(3),st
  406836:	mov    ?,WORD PTR [ecx-0x15]
  406839:	sub    al,0x8c
  40683b:	mov    BYTE PTR [ecx+0x195ae46f],0x7b
  406842:	aaa    
  406843:	or     DWORD PTR [edi+eiz*8],edx
  406846:	ror    DWORD PTR [esi-0x2b],1
  406849:	cmp    eax,0x7fcd94b8
  40684e:	aaa    
  40684f:	sbb    BYTE PTR [ecx-0x600d0d89],bl
  406855:	in     al,0x69
  406857:	and    BYTE PTR [esi],al
  406859:	cld    
  40685a:	pop    es
  40685b:	sahf   
  40685c:	jo     0x40684d
  40685e:	loop   0x40682e
  406860:	xchg   ecx,eax
  406861:	dec    edi
  406862:	dec    ecx
  406864:	mov    al,0x61
  406866:	jmp    0x7dbab210
  40686b:	sub    BYTE PTR [edx+0x72],al
  40686e:	pop    ebp
  40686f:	cld    
  406870:	data16 mov BYTE PTR [esi+eiz*8-0x7cddc567],bh
  406878:	adc    BYTE PTR [edx+edx*4],dh
  40687b:	cwde   
  40687c:	and    DWORD PTR [ecx],0xd2078599
  406882:	jb     0x406823
  406884:	loope  0x406841
  406886:	or     eax,0xe238e8bb
  40688b:	into   
  40688c:	enter  0xd9b1,0xe1
  406890:	jge    0x4068f6
  406892:	cmp    esi,esi
  406894:	pop    ebp
  406895:	pushf  
  406896:	pop    ebp
  406897:	add    eax,0xad3ec410
  40689c:	div    DWORD PTR [ecx-0x799dfc87]
  4068a2:	inc    eax
  4068a3:	push   esp
  4068a4:	adc    esp,DWORD PTR [edx]
  4068a6:	sahf   
  4068a7:	lahf   
  4068a8:	and    eax,0xe6f8798a
  4068ad:	(bad)  
  4068ae:	fwait
  4068af:	call   0x729c:0x51f7cab1
  4068b6:	adc    al,0xf2
  4068b8:	dec    esp
  4068b9:	shl    DWORD PTR [ebp-0x37280ec3],1
  4068bf:	inc    ebp
  4068c0:	inc    ebx
  4068c1:	xchg   ebp,eax
  4068c2:	jl     0x40684e
  4068c4:	jl     0x40691c
  4068c6:	sbb    al,0x53
  4068c8:	xor    edi,edx
  4068ca:	retf   0x7a63
  4068cd:	repz loopne 0x406860
  4068d0:	fnop   
  4068d2:	or     bh,BYTE PTR [eax+ebp*4+0x42c5fd52]
  4068d9:	lock pop edi
  4068db:	cmp    al,dh
  4068dd:	fdivr  QWORD PTR [ebx-0x61e61767]
  4068e3:	adc    al,0xde
  4068e5:	and    al,0xf7
  4068e7:	sub    ebx,edx
  4068e9:	xor    BYTE PTR [edi],0xd3
  4068ec:	fcomp  QWORD PTR ds:0xe20ca493
  4068f2:	xchg   DWORD PTR [eax+0x1074ea90],eax
  4068f8:	add    eax,0x17922f95
  4068fd:	aam    0xa7
  4068ff:	and    eax,0xb0aeb8cc
  406904:	aas    
  406905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406906:	pop    esi
  406907:	int    0x82
  406909:	mov    dh,0x91
  40690b:	xlat   BYTE PTR ds:[ebx]
  40690c:	adc    DWORD PTR [edi+0x44],edi
  40690f:	mov    ds:0x102cc504,al
  406914:	jp     0x4068d5
  406916:	(bad)  
  406917:	gs mov ah,0xa7
  40691a:	ret    
  40691b:	dec    ebx
  40691c:	fwait
  40691d:	mov    ah,0x5d
  40691f:	popf   
  406920:	rol    bl,0x9b
  406923:	push   edx
  406924:	adc    edi,esi
  406926:	in     eax,0xce
  406928:	adc    al,0x57
  40692a:	int3   
  40692b:	test   eax,0x4433e9d1
  406930:	pusha  
  406931:	sbb    DWORD PTR [ecx-0x4f978d3c],ebx
  406937:	ins    BYTE PTR es:[edi],dx
  406938:	or     ebp,DWORD PTR [edx-0x3b]
  40693b:	cmp    DWORD PTR [eax-0x3d],edx
  40693e:	icebp  
  40693f:	les    ebx,FWORD PTR [edx+0x7e]
  406942:	jmp    0x5f6bf16f
  406947:	aam    0x43
  406949:	std    
  40694a:	movups XMMWORD PTR [ebx-0x4d],xmm1
  40694e:	jmp    0x1330:0xd86dba80
  406955:	out    0x7f,eax
  406957:	and    ecx,ebp
  406959:	(bad)  
  40695b:	add    BYTE PTR [ecx-0x51d44cd6],0x1f
  406962:	mov    cl,0x4e
  406964:	scas   al,BYTE PTR es:[edi]
  406965:	popa   
  406966:	pop    ebx
  406967:	or     esp,DWORD PTR [edi+edx*8]
  40696a:	rcl    eax,1
  40696c:	pop    es
  40696d:	(bad)  
  40696e:	mov    ebx,0x11593bd7
  406973:	rcr    BYTE PTR [ebp+0x68],cl
  406976:	retf   
  406977:	xor    BYTE PTR [esp+esi*4+0xf],al
  40697b:	mov    WORD PTR [ebx-0x70770e99],ss
  406981:	cmc    
  406982:	jae    0x40695c
  406984:	xor    eax,ebx
  406986:	or     al,0xe9
  406988:	test   al,0xd3
  40698a:	dec    esi
  40698b:	std    
  40698c:	sahf   
  40698d:	repz retf 0x30e0
  406991:	push   eax
  406992:	sbb    BYTE PTR [esi-0x6f],ah
  406995:	inc    esp
  406996:	jp     0x40691a
  406998:	pop    ecx
  406999:	adc    eax,0xf6b7263d
  40699e:	mov    bh,0x48
  4069a0:	jbe    0x406982
  4069a2:	mov    dh,0xe5
  4069a4:	stos   DWORD PTR es:[edi],eax
  4069a5:	lds    esi,FWORD PTR [esi-0x33]
  4069a8:	fidivr DWORD PTR ds:0xc6fc82cb
  4069ae:	xchg   BYTE PTR [ecx-0x1],ah
  4069b1:	dec    edi
  4069b2:	in     al,0xee
  4069b4:	push   0xfffffffb
  4069b6:	cmp    eax,0xd470280
  4069bb:	push   ds
  4069bc:	(bad)  
  4069bd:	pop    edx
  4069be:	xchg   edx,eax
  4069bf:	adc    al,0xb6
  4069c1:	mov    bh,0xf9
  4069c3:	in     al,0x7
  4069c5:	aas    
  4069c6:	mov    al,ds:0xb86a26b6
  4069cb:	inc    ebx
  4069cc:	mov    ds:0x52c962ca,al
  4069d1:	sar    bl,0x17
  4069d4:	repnz and cl,al
  4069d7:	rcr    DWORD PTR [edi-0x51ac0241],0xdf
  4069de:	and    esi,edi
  4069e0:	push   ebp
  4069e1:	mov    ebp,0x7b3ae300
  4069e6:	dec    esp
  4069e7:	and    eax,edx
  4069e9:	push   edi
  4069ea:	jo     0x406a09
  4069ec:	test   BYTE PTR fs:0xf1278827,cl
  4069f3:	enter  0xd2c6,0x9b
  4069f7:	or     dh,ah
  4069f9:	push   es
  4069fa:	in     eax,0xb3
  4069fc:	or     BYTE PTR [edx+ecx*1+0x1],bh
  406a00:	mov    ds,WORD PTR [ebx]
  406a02:	jae    0x4069e5
  406a04:	add    eax,0xab290c2
  406a09:	mov    ch,BYTE PTR [ecx-0x16]
  406a0c:	sti    
  406a0d:	stos   DWORD PTR es:[edi],eax
  406a0e:	xlat   BYTE PTR ds:[ebx]
  406a0f:	ficomp DWORD PTR [ecx+0x4a]
  406a12:	jl     0x4069c8
  406a14:	pop    edx
  406a15:	and    al,0x5
  406a17:	xor    ecx,DWORD PTR [ebx-0x15]
  406a1a:	icebp  
  406a1b:	aas    
  406a1c:	es std 
  406a1e:	jmp    0xe4fc7177
  406a23:	fiadd  WORD PTR [eax-0x4]
  406a26:	(bad)  
  406a27:	cli    
  406a28:	sar    BYTE PTR [ecx+0x7fb54390],cl
  406a2e:	add    al,0x29
  406a30:	sar    DWORD PTR [ecx-0x742fe969],1
  406a36:	jmp    0x422:0xd3acbd0f
  406a3d:	enter  0xdb5e,0x97
  406a41:	call   0x69dbae5d
  406a46:	imul   edx,DWORD PTR [ecx],0xb
  406a49:	xchg   BYTE PTR [eax],al
  406a4b:	push   esi
  406a4c:	xchg   BYTE PTR [ecx+0x2a],al
  406a4f:	jecxz  0x4069e6
  406a51:	(bad)  
  406a52:	xor    ecx,edx
  406a54:	leave  
  406a55:	(bad)  
  406a56:	lahf   
  406a57:	rcr    BYTE PTR [eax],0xbd
  406a5a:	mov    ds:0x8773985d,eax
  406a5f:	rcl    BYTE PTR [esi],0x1c
  406a62:	dec    ecx
  406a63:	pop    es
  406a64:	xor    eax,0xb40477db
  406a69:	jecxz  0x406a48
  406a6b:	sahf   
  406a6c:	arpl   WORD PTR es:[eax],si
  406a6f:	mov    al,0x9f
  406a71:	jg     0x4069f9
  406a73:	push   edx
  406a74:	or     eax,0x6f7ab0a3
  406a79:	das    
  406a7a:	cmc    
  406a7b:	adc    BYTE PTR [ebp-0x71ac92c2],bl
  406a81:	push   0xffffffca
  406a83:	std    
  406a84:	pop    ebp
  406a85:	jbe    0x406a6a
  406a87:	fcmovnbe st,st(7)
  406a89:	pop    edi
  406a8a:	lods   al,BYTE PTR ds:[esi]
  406a8b:	adc    eax,DWORD PTR ds:0x88cbacb4
  406a91:	pop    esi
  406a92:	push   0xd4026a90
  406a97:	push   edi
  406a98:	adc    ebx,ecx
  406a9a:	and    DWORD PTR [ebp+0x28],ebp
  406a9d:	das    
  406a9e:	jmp    0x406b09
  406aa0:	inc    edx
  406aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aa2:	cmp    BYTE PTR [esi-0x1c0d7a78],dl
  406aa8:	out    0xf3,al
  406aaa:	test   BYTE PTR [edi+eax*2+0x112c7bac],0x28
  406ab2:	out    dx,eax
  406ab3:	test   DWORD PTR cs:[ebp-0x30d3ea1a],edx
  406aba:	mov    ch,0xe3
  406abc:	aaa    
  406abd:	sbb    eax,0x4a7a7ceb
  406ac2:	pop    edx
  406ac3:	fcom   st(2)
  406ac5:	test   eax,0x68e62a86
  406aca:	ret    0xe22a
  406acd:	sar    al,0x4d
  406ad0:	pop    ecx
  406ad1:	fidivr WORD PTR [eax-0x8]
  406ad4:	loop   0x406adc
  406ad6:	sub    ecx,DWORD PTR [eax+0xf1ffd2d]
  406adc:	xchg   ebx,eax
  406add:	loopne 0x406b14
  406adf:	clc    
  406ae0:	lods   eax,DWORD PTR ds:[esi]
  406ae1:	cmc    
  406ae2:	sahf   
  406ae3:	ss push es
  406ae5:	(bad)  
  406ae6:	imul   edi,DWORD PTR [ebx-0x75],0xffffffc9
  406aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aeb:	mov    dl,0x1
  406aed:	data16 into 
  406aef:	sar    ah,cl
  406af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af2:	add    edi,DWORD PTR [ebx+0x515f5ddc]
  406af8:	jnp    0x406b2d
  406afa:	int3   
  406afb:	rcr    al,0x71
  406afe:	dec    edi
  406aff:	pop    es
  406b00:	xchg   edi,eax
  406b01:	xor    al,0x4d
  406b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b04:	inc    esp
  406b05:	cmp    dh,BYTE PTR [ebx]
  406b07:	test   BYTE PTR [edi],0x3b
  406b0a:	pushf  
  406b0b:	pusha  
  406b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b0d:	xor    ch,bh
  406b0f:	dec    ebx
  406b10:	mov    ch,BYTE PTR [edx+0x33d0f800]
  406b16:	mov    BYTE PTR [edx-0x7a],dl
  406b19:	jmp    0x406b73
  406b1b:	or     BYTE PTR [edi+0x3f],ch
  406b1e:	aad    0xd
  406b20:	fnstenv [ecx]
  406b22:	clc    
  406b23:	inc    esp
  406b24:	xchg   esi,eax
  406b25:	int3   
  406b26:	inc    ecx
  406b27:	cmp    BYTE PTR [edi+eax*2+0x71b8772c],0xd1
  406b2f:	xor    al,0xc5
  406b31:	sahf   
  406b32:	vminps ymm1,ymm2,ymm7
  406b36:	xchg   esi,eax
  406b37:	jne    0x406b8b
  406b39:	mov    ah,BYTE PTR [edx+0x6fd92f47]
  406b3f:	ja     0x406b4a
  406b41:	aam    0x59
  406b43:	mov    ds:0x8301cc50,eax
  406b48:	jbe    0x406b5f
  406b4a:	mov    al,ds:0xdfb22a24
  406b4f:	mov    edx,0x5350773c
  406b54:	repnz (bad) 
  406b56:	stc    
  406b57:	int    0x19
  406b59:	movhps QWORD PTR [ecx],xmm4
  406b5c:	stos   BYTE PTR es:[edi],al
  406b5d:	mov    BYTE PTR [ecx-0x59],dl
  406b60:	fnstcw WORD PTR [esi-0x7143851b]
  406b66:	jl     0x406b4f
  406b68:	mov    ch,0x53
  406b6a:	outs   dx,DWORD PTR ds:[esi]
  406b6b:	dec    esi
  406b6c:	inc    ebx
  406b6d:	aas    
  406b6e:	jmp    0x406b53
  406b70:	add    eax,0x9b03d081
  406b75:	pop    eax
  406b76:	(bad)  
  406b78:	mov    ebp,0x4d14783f
  406b7d:	xchg   edi,eax
  406b7e:	gs es xor eax,0xa60af625
  406b85:	cmp    ebx,esp
  406b87:	jns    0x406bc9
  406b89:	dec    ecx
  406b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b8b:	sub    BYTE PTR ds:0x9bcc9bb1,0xe5
  406b92:	aaa    
  406b93:	add    al,0x10
  406b95:	sbb    BYTE PTR [eax-0x62a133f1],0x5e
  406b9c:	xor    al,0x29
  406b9e:	aam    0x68
  406ba0:	mov    edi,DWORD PTR [eax-0x1d795f9a]
  406ba6:	xor    ah,bh
  406ba8:	stos   DWORD PTR es:[edi],eax
  406ba9:	jo     0x406c26
  406bab:	in     al,0x8b
  406bad:	cli    
  406bae:	push   edx
  406baf:	mov    dl,0x4d
  406bb1:	sbb    al,0x41
  406bb3:	lods   al,BYTE PTR ds:[esi]
  406bb4:	je     0x406c25
  406bb6:	pop    edi
  406bb7:	lea    edx,ds:0x9517e08e
  406bbd:	push   eax
  406bbe:	out    dx,eax
  406bbf:	div    DWORD PTR [ebp+0x20a36535]
  406bc5:	xchg   ebx,eax
  406bc6:	xchg   BYTE PTR [edi],ah
  406bc8:	ds dec edi
  406bca:	stos   DWORD PTR es:[edi],eax
  406bcb:	cmp    BYTE PTR [ebx],0xcd
  406bce:	add    bh,ch
  406bd0:	push   0x68
  406bd2:	sub    DWORD PTR [esi+0xcca0517],esp
  406bd8:	ror    DWORD PTR ds:0xddbd4e17,0xce
  406bdf:	jg     0x406bbd
  406be1:	out    0x89,eax
  406be3:	mov    eax,0xa4e94f46
  406be8:	jle    0x406bc6
  406bea:	pop    ss
  406beb:	rcr    al,0xf6
  406bee:	ss jecxz 0x406c53
  406bf1:	pop    eax
  406bf2:	lea    ebp,[edx-0x4c]
  406bf5:	xor    eax,0x661f9f4a
  406bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfb:	xchg   esp,eax
  406bfc:	daa    
  406bfd:	int    0x1d
  406bff:	es pop ebx
  406c01:	dec    al
  406c03:	dec    esi
  406c04:	popf   
  406c05:	in     al,0x1e
  406c07:	fucomi st,st(7)
  406c09:	clc    
  406c0a:	sub    DWORD PTR [esi+ebp*4+0x16],edi
  406c0e:	aaa    
  406c0f:	inc    edi
  406c10:	loop   0x406c90
  406c12:	add    ah,BYTE PTR [esi]
  406c14:	addr16 pop es
  406c16:	test   DWORD PTR [ebx*8+0x15505670],ecx
  406c1d:	cmp    bl,dh
  406c1f:	ret    
  406c20:	jle    0x406bdf
  406c22:	or     al,0xf8
  406c24:	out    0x19,al
  406c26:	in     eax,0x64
  406c28:	and    ah,BYTE PTR [ecx+0x7d]
  406c2b:	pop    esi
  406c2c:	mov    ah,0xdf
  406c2e:	fst    QWORD PTR [esi]
  406c30:	sub    bl,BYTE PTR ds:0x68bf2986
  406c36:	ja     0x406c65
  406c38:	fcmovne st,st(7)
  406c3a:	es fwait
  406c3c:	pop    ecx
  406c3d:	(bad)  
  406c3e:	fs dec edx
  406c40:	fcmovnu st,st(2)
  406c42:	ja     0x406c91
  406c44:	daa    
  406c45:	in     al,0xaf
  406c47:	push   ebp
  406c48:	dec    ebx
  406c49:	dec    esi
  406c4a:	sub    BYTE PTR [edi],bl
  406c4c:	dec    ecx
  406c4d:	push   ecx
  406c4e:	out    dx,eax
  406c4f:	sbb    al,0xf1
  406c51:	sub    edi,DWORD PTR [ebx+0x527ab766]
  406c57:	xlat   BYTE PTR ds:[ebx]
  406c58:	or     BYTE PTR [ebp-0x130265d0],0x8f
  406c5f:	cld    
  406c60:	in     eax,dx
  406c61:	(bad)  
  406c62:	out    0xba,eax
  406c64:	in     al,dx
  406c65:	out    dx,eax
  406c66:	(bad)  
  406c67:	dec    ebx
  406c68:	cld    
  406c69:	xchg   ebp,eax
  406c6a:	jbe    0x406ccf
  406c6c:	mov    ah,0x14
  406c6e:	in     al,0x9d
  406c70:	jecxz  0x406c9d
  406c72:	push   ebx
  406c73:	sbb    esp,esp
  406c75:	pop    ebx
  406c76:	and    DWORD PTR [esi-0x7ff27590],0x2a
  406c7d:	add    bh,BYTE PTR [edx]
  406c7f:	cmp    DWORD PTR [esi-0x2955c372],ebx
  406c85:	(bad)  
  406c86:	shl    BYTE PTR [ecx],cl
  406c88:	mov    esp,0xe3ee97ec
  406c8d:	jle    0x406c4a
  406c8f:	jmp    0x406c4e
  406c91:	cdq    
  406c92:	and    al,0x3a
  406c94:	xchg   esp,eax
  406c95:	sbb    eax,0x9a831140
  406c9a:	lea    esi,[edi]
  406c9c:	mov    ch,0xf3
  406c9e:	into   
  406c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ca0:	test   eax,0xba229b12
  406ca5:	jbe    0x406cc1
  406ca7:	add    al,dl
  406ca9:	jnp    0x406c94
  406cab:	push   esp
  406cac:	call   0xb11067f6
  406cb1:	popa   
  406cb2:	(bad)  
  406cb3:	out    0xa6,al
  406cb5:	or     ebx,0x23
  406cb8:	inc    eax
  406cb9:	lds    edx,FWORD PTR [ebx]
  406cbb:	lahf   
  406cbc:	fisub  WORD PTR [ecx-0x239e2f9a]
  406cc2:	sbb    edx,DWORD PTR [edi-0x78]
  406cc5:	xor    eax,0x54780499
  406cca:	fdivr  st(0),st
  406ccc:	adc    edi,DWORD PTR [ecx+0x7b]
  406ccf:	mov    bl,0x82
  406cd1:	or     DWORD PTR [edx-0x7b925496],0xffffffa1
  406cd8:	mov    ds:0xf1b45c25,eax
  406cdd:	xchg   edi,eax
  406cde:	call   0x4fca:0xdc2c0e9a
  406ce5:	aam    0x6d
  406ce7:	pop    edi
  406ce8:	mov    dh,0x28
  406cea:	(bad)  
  406ceb:	dec    al
  406ced:	mov    al,ds:0x635d5710
  406cf2:	gs cwde 
  406cf4:	or     eax,DWORD PTR [ebp+0x4a175d40]
  406cfa:	mov    al,ds:0x51a212f8
  406cff:	imul   esp,esp,0x13a13cc4
  406d05:	xor    al,0x9
  406d07:	call   0x7ed2:0xea7a83b0
  406d0e:	xchg   esi,eax
  406d0f:	adc    al,0xcb
  406d11:	stc    
  406d12:	scas   al,BYTE PTR es:[edi]
  406d13:	cmc    
  406d14:	xor    eax,0x596708b8
  406d19:	mov    al,0x19
  406d1b:	mov    cl,0x91
  406d1d:	call   0xe85e:0xa00132a5
  406d24:	stos   DWORD PTR es:[edi],eax
  406d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d26:	dec    edx
  406d27:	hlt    
  406d28:	push   edi
  406d29:	fst    DWORD PTR [eax-0x76]
  406d2c:	scas   al,BYTE PTR es:[edi]
  406d2d:	fcmovnb st,st(1)
  406d2f:	hlt    
  406d30:	dec    esi
  406d31:	mov    ebp,0x7ef9e6f1
  406d36:	mov    edx,0x5d203aec
  406d3b:	test   DWORD PTR [ebx],ecx
  406d3d:	sbb    ecx,esi
  406d3f:	fld    TBYTE PTR [ebx+ebx*1]
  406d42:	xchg   ebp,eax
  406d43:	xor    esi,DWORD PTR [ebp+0x55be81bf]
  406d49:	rol    BYTE PTR [eax+eax*1],cl
  406d4c:	dec    esi
  406d4d:	mov    edx,0xfb0bafae
  406d52:	mov    WORD PTR [edx],?
  406d54:	push   0x6aec17d4
  406d59:	arpl   cx,sp
  406d5b:	jne    0x406ce8
  406d5d:	pop    ecx
  406d5e:	pop    esp
  406d5f:	cmp    al,0xee
  406d61:	dec    esi
  406d62:	push   ebx
  406d63:	pop    edi
  406d64:	mov    ecx,DWORD PTR [ebx]
  406d66:	add    BYTE PTR ds:0x302c07bf,cl
  406d6c:	stc    
  406d6d:	fdiv   QWORD PTR [ebx]
  406d6f:	xor    edi,DWORD PTR [ebp+0x2946b641]
  406d75:	pop    esi
  406d76:	dec    ecx
  406d77:	pop    edx
  406d78:	mov    edx,0x4335e12e
  406d7d:	xchg   esi,eax
  406d7e:	mov    DWORD PTR [ebx],ebp
  406d80:	dec    esp
  406d81:	ins    DWORD PTR es:[edi],dx
  406d82:	in     eax,0x5f
  406d84:	mov    bl,BYTE PTR [edx]
  406d86:	sub    cl,BYTE PTR [edi]
  406d88:	or     esi,DWORD PTR [esi]
  406d8a:	jo     0x406d8b
  406d8c:	gs jbe 0x406d82
  406d8f:	mov    ch,0xf5
  406d91:	inc    ecx
  406d92:	aam    0xc3
  406d94:	pop    edi
  406d95:	add    eax,0x356768f3
  406d9a:	aad    0x72
  406d9c:	in     eax,dx
  406d9d:	dec    ebx
  406d9e:	jno    0x406d4b
  406da0:	shl    DWORD PTR [edx],0x2b
  406da3:	fxch   st(2)
  406da5:	mov    esi,0x7093e693
  406daa:	mov    eax,0xdcc0322a
  406daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db0:	xchg   DWORD PTR [eax+0x9bf864d],ecx
  406db6:	dec    eax
  406db7:	cmc    
  406db8:	jb     0x406e39
  406dba:	mov    BYTE PTR [ecx-0x3],0x2a
  406dbe:	adc    BYTE PTR [ecx],dl
  406dc0:	dec    edx
  406dc1:	mov    ecx,0xe25cb3ce
  406dc6:	es xchg ebp,eax
  406dc8:	shr    bh,1
  406dca:	shl    cl,cl
  406dcc:	sub    eax,DWORD PTR [ebx+0x6d78da4e]
  406dd2:	sub    ecx,DWORD PTR [edx]
  406dd4:	sbb    eax,0x64c9a6d2
  406dd9:	hlt    
  406dda:	out    0x81,eax
  406ddc:	pushf  
  406ddd:	cmp    BYTE PTR [eax],dh
  406ddf:	fistp  DWORD PTR [edi-0x431ec6ba]
  406de5:	jle    0x406e07
  406de7:	dec    edx
  406de8:	push   ebp
  406de9:	push   ecx
  406dea:	pusha  
  406deb:	jge    0x406dcc
  406ded:	jmp    0xfc27:0x5dd19929
  406df4:	mov    ds:0x9f774dad,al
  406df9:	sar    ch,1
  406dfb:	shl    DWORD PTR [esp+ecx*4-0x5d70481f],0x9
  406e03:	sbb    BYTE PTR [eax-0x35],ah
  406e06:	add    ecx,edx
  406e08:	sbb    dl,0x8c
  406e0b:	movnti DWORD PTR [ebx],ebx
  406e0e:	js     0x406e5b
  406e10:	in     al,dx
  406e11:	aaa    
  406e12:	scas   al,BYTE PTR es:[edi]
  406e13:	aaa    
  406e14:	bound  edi,QWORD PTR [edx-0x58]
  406e17:	fiadd  DWORD PTR [eax+0x3]
  406e1a:	shr    BYTE PTR [ebp+0x4d],cl
  406e1d:	outs   dx,DWORD PTR ds:[esi]
  406e1e:	shl    esp,cl
  406e20:	not    dh
  406e22:	out    0x6c,al
  406e24:	and    eax,0x3ae78c96
  406e29:	sbb    ch,al
  406e2b:	ret    0x5841
  406e2e:	cmp    eax,0xee97871e
  406e33:	imul   esi,DWORD PTR [edx+esi*4],0x28
  406e37:	cmp    eax,0x95747527
  406e3c:	add    eax,0x9d3f79ef
  406e41:	aam    0x4f
  406e43:	push   ecx
  406e44:	ret    
  406e45:	ins    DWORD PTR es:[edi],dx
  406e46:	sub    esi,esp
  406e48:	push   ss
  406e49:	and    edi,edi
  406e4b:	and    DWORD PTR [edx],esp
  406e4d:	(bad)  
  406e4e:	(bad)  
  406e50:	dec    esp
  406e51:	fmul   QWORD PTR [ecx+eiz*2+0x2c1f645]
  406e58:	fiadd  DWORD PTR [eax+eax*4+0x20]
  406e5c:	lods   al,BYTE PTR ds:[esi]
  406e5d:	rcl    bh,cl
  406e5f:	dec    edi
  406e60:	push   edi
  406e61:	mov    ecx,0x89dc7059
  406e66:	lods   eax,DWORD PTR ds:[esi]
  406e67:	scas   al,BYTE PTR es:[edi]
  406e68:	(bad)  [edi-0x7b]
  406e6b:	adc    BYTE PTR [ebx],ah
  406e6d:	inc    edi
  406e6e:	or     DWORD PTR [esi-0x7b7bcc44],edi
  406e74:	inc    ecx
  406e75:	popf   
  406e76:	pop    ds
  406e77:	jg     0x406dfb
  406e79:	stos   DWORD PTR es:[edi],eax
  406e7a:	fimul  WORD PTR [esi+0x6f50f106]
  406e80:	aas    
  406e81:	xor    al,0xa8
  406e83:	inc    esi
  406e84:	fs cli 
  406e86:	mov    al,0xac
  406e88:	nop
  406e89:	jl     0x406e74
  406e8b:	int    0xde
  406e8d:	gs jb  0x406e6f
  406e90:	repnz push ds
  406e92:	neg    DWORD PTR [eax-0x13]
  406e95:	push   cs
  406e96:	cmc    
  406e97:	mov    ecx,0x98b47863
  406e9c:	jg     0x406e85
  406e9e:	xor    eax,0xe83ace6b
  406ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea4:	cmc    
  406ea5:	pop    ebx
  406ea6:	jp     0x406e8d
  406ea8:	or     al,0xdb
  406eaa:	aaa    
  406eab:	or     al,0x73
  406ead:	into   
  406eae:	and    al,0xa2
  406eb0:	ins    DWORD PTR es:[edi],dx
  406eb1:	aaa    
  406eb2:	aad    0x45
  406eb4:	jne    0x406f1f
  406eb6:	mov    ch,0xcd
  406eb8:	jbe    0x406e56
  406eba:	lahf   
  406ebb:	jmp    0xd019:0x5d6b3914
  406ec2:	mov    esi,0xf3c04571
  406ec7:	jl     0x406f24
  406ec9:	loop   0x406ef8
  406ecb:	dec    ecx
  406ecc:	cmp    cl,bh
  406ece:	call   ebx
  406ed0:	xchg   BYTE PTR [ecx+0x54],bl
  406ed3:	jge    0x406edf
  406ed5:	push   eax
  406ed6:	loope  0x406e9f
  406ed8:	shl    BYTE PTR [eax],1
  406eda:	sub    al,0xe7
  406edc:	mov    ebx,0xfe56b5f9
  406ee1:	push   esp
  406ee2:	int    0x3b
  406ee4:	pop    edi
  406ee5:	xor    dl,BYTE PTR [eax+ecx*8-0x51]
  406ee9:	sub    BYTE PTR gs:[eax+0x483a1972],ah
  406ef0:	pushf  
  406ef1:	imul   edx,DWORD PTR ds:0xdcf30c7,0xfffffff4
  406ef8:	dec    ebx
  406ef9:	and    DWORD PTR [esi+0x3c436dc3],ebx
  406eff:	loope  0x406ebc
  406f01:	stos   BYTE PTR es:[edi],al
  406f02:	push   0x103b5f95
  406f07:	lahf   
  406f08:	jle    0x406ebf
  406f0a:	xchg   esi,eax
  406f0b:	sbb    esi,DWORD PTR [edi+0x5e]
  406f0e:	mov    al,0x67
  406f10:	mov    al,0xb8
  406f12:	jg     0x406ed7
  406f14:	sub    DWORD PTR [edi],esp
  406f16:	fadd   st,st(7)
  406f18:	shl    BYTE PTR [ebx-0x670607e2],1
  406f1e:	adc    BYTE PTR [ebp+0x5fbc9e49],0x1d
  406f25:	mov    ch,0x77
  406f27:	sub    eax,0x14982ea4
  406f2c:	add    al,BYTE PTR [ebx-0xbbf92b4]
  406f32:	mov    esp,0xe00b23ea
  406f37:	int3   
  406f38:	jp     0x406f53
  406f3a:	or     eax,0x757c3d48
  406f3f:	adc    edi,eax
  406f41:	mov    cl,0xc6
  406f43:	sbb    esp,DWORD PTR [esi+0x7e]
  406f46:	mov    eax,ds:0x2bfe603c
  406f4b:	sbb    DWORD PTR ss:[ecx+edx*2],ecx
  406f4f:	sub    BYTE PTR [ecx+eiz*4-0x2f47679f],0xbf
  406f57:	pop    eax
  406f58:	gs and al,0x8b
  406f5b:	dec    ebx
  406f5c:	dec    ebp
  406f5d:	add    bl,BYTE PTR [eax-0x64]
  406f60:	dec    eax
  406f61:	ret    
  406f62:	mov    ebp,0xa2fd02ec
  406f67:	sbb    cl,BYTE PTR [eax]
  406f69:	lods   al,BYTE PTR ds:[esi]
  406f6a:	push   ds
  406f6b:	mov    bl,0x32
  406f6d:	les    edx,FWORD PTR [ecx+0x79]
  406f70:	clc    
  406f71:	and    ch,BYTE PTR [ecx-0x6c]
  406f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f75:	iret   
  406f76:	jns    0x406f29
  406f78:	dec    ebp
  406f79:	jecxz  0x406fd0
  406f7b:	inc    esi
  406f7c:	leave  
  406f7d:	lods   eax,DWORD PTR ds:[esi]
  406f7e:	pop    eax
  406f7f:	sub    eax,esp
  406f81:	mov    fs,WORD PTR [edx+eiz*4+0x6a6c0db5]
  406f88:	and    cl,BYTE PTR [ebp+edi*2-0x7f763dc2]
  406f8f:	xor    bl,BYTE PTR [eax+0x3b]
  406f92:	repnz mov dh,ch
  406f95:	xchg   ebp,eax
  406f96:	sbb    bh,al
  406f98:	xchg   esp,eax
  406f99:	or     BYTE PTR [ebx+ebp*1],bh
  406f9c:	iret   
  406f9d:	loope  0x406f37
  406f9f:	push   esi
  406fa0:	dec    ebx
  406fa1:	sub    DWORD PTR [esi+0x24addbbf],eax
  406fa7:	or     bl,0x33
  406faa:	leave  
  406fab:	ret    
  406fac:	pop    eax
  406fad:	mov    edi,0xbac24e71
  406fb2:	loope  0x406f70
  406fb4:	fist   WORD PTR [ebp+0x48a9fda1]
  406fba:	test   BYTE PTR [eax-0x78fe54b9],ch
  406fc0:	adc    al,cl
  406fc2:	sbb    DWORD PTR [ebp+0x5d41f702],ebx
  406fc8:	mov    bh,0x43
  406fca:	sub    BYTE PTR [esi],cl
  406fcc:	repnz mov edi,DWORD PTR fs:[eax]
  406fd0:	adc    eax,0x34976092
  406fd5:	pop    es
  406fd6:	lods   eax,DWORD PTR ds:[esi]
  406fd7:	push   cs
  406fd8:	jmp    0xd665c33c
  406fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fde:	popa   
  406fdf:	cmp    eax,0x1d7595ce
  406fe4:	lds    ecx,FWORD PTR [edi+eax*2-0x850db74]
  406feb:	and    eax,0x65b990b9
  406ff0:	in     al,0xce
  406ff2:	xchg   esi,eax
  406ff3:	xor    eax,0x366cffbb
  406ff8:	ficomp WORD PTR [ebp-0x3c]
  406ffb:	mov    eax,ds:0xfc6e811a
  407000:	arpl   di,dx
  407002:	in     al,dx
  407003:	jnp    0x406fa7
  407005:	sbb    al,0xce
  407007:	js     0x40705f
  407009:	in     eax,dx
  40700a:	dec    edi
  40700b:	push   esp
  40700c:	and    edi,edx
  40700e:	mov    ah,0x79
  407010:	push   edi
  407011:	and    esp,ebx
  407013:	mov    esi,0xae65aabe
  407018:	pop    es
  407019:	jmp    0x6f3b212a
  40701e:	mov    edx,0x3adeeb64
  407023:	aam    0xb2
  407025:	jae    0x40706a
  407027:	lea    esi,ds:0xa0fd82e9
  40702d:	push   esi
  40702e:	mov    al,0xac
  407030:	pushf  
  407031:	xchg   ebx,eax
  407032:	out    dx,eax
  407033:	add    al,0xce
  407035:	ins    DWORD PTR es:[edi],dx
  407036:	sbb    DWORD PTR [eax],ecx
  407038:	test   ebp,esp
  40703a:	adc    ebx,eax
  40703c:	cmp    ch,0xb1
  40703f:	inc    esi
  407040:	in     eax,0xb1
  407042:	push   edi
  407043:	sti    
  407044:	xor    bh,BYTE PTR [eax]
  407046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407047:	pusha  
  407048:	dec    edx
  407049:	mov    esi,0x829482fa
  40704e:	jl     0x406fea
  407050:	data16 addr16 mov ds:0xd2c1,al
  407055:	add    esi,esi
  407057:	and    bl,al
  407059:	(bad)  
  40705a:	aam    0x9b
  40705c:	leave  
  40705d:	enter  0xce56,0x96
  407061:	or     DWORD PTR [edx+esi*1+0x1e3c9073],esi
  407068:	mov    BYTE PTR [edi+0x70],dh
  40706b:	loop   0x4070aa
  40706d:	pop    edi
  40706e:	test   DWORD PTR [ebx],ebp
  407070:	mov    dh,0x9b
  407072:	push   0xffffffbf
  407074:	sar    BYTE PTR [edx],0x9a
  407077:	push   ecx
  407078:	xor    esp,0x18
  40707b:	cld    
  40707c:	jg     0x407031
  40707e:	neg    BYTE PTR [esi+0x3b]
  407081:	ins    DWORD PTR es:[edi],dx
  407082:	pop    esp
  407083:	dec    ebp
  407084:	jns    0x40709e
  407086:	mov    edi,0x12efd156
  40708b:	push   ss
  40708c:	sbb    esi,DWORD PTR [eax-0x147d25c]
  407092:	lahf   
  407093:	out    0x84,al
  407095:	or     DWORD PTR [esi+0x6e],esi
  407098:	popa   
  407099:	push   0xffffffd0
  40709b:	pop    eax
  40709c:	popa   
  40709d:	mov    bh,0x43
  40709f:	fsubrp st(1),st
  4070a1:	mov    DWORD PTR [eax-0x57],edx
  4070a4:	xchg   edx,eax
  4070a5:	pop    edi
  4070a6:	cmp    edx,edx
  4070a8:	add    eax,0xb3e4cc8a
  4070ad:	push   eax
  4070ae:	mov    esi,0x4e830c2f
  4070b3:	or     eax,0x61c01df9
  4070b8:	push   eax
  4070b9:	clc    
  4070ba:	xchg   BYTE PTR [ecx-0x2b3b905d],al
  4070c0:	es mov esi,0x74a74b28
  4070c6:	nop
  4070c7:	ins    BYTE PTR es:[edi],dx
  4070c8:	xchg   ecx,eax
  4070c9:	inc    esi
  4070ca:	call   0x622fe64e
  4070cf:	in     al,0x60
  4070d1:	iret   
  4070d2:	adc    edx,ebp
  4070d4:	cld    
  4070d5:	cmp    al,0xa5
  4070d7:	mov    WORD PTR [edx],cs
  4070d9:	sbb    BYTE PTR [eax-0x397a56ef],dl
  4070df:	out    0x46,al
  4070e1:	repz shr edx,1
  4070e4:	retf   
  4070e5:	jge    0x40713a
  4070e7:	dec    ecx
  4070e8:	or     BYTE PTR [edi-0x25],bh
  4070eb:	imul   BYTE PTR ds:0x5a9fdbc6
  4070f1:	pop    ebx
  4070f2:	retf   0xb6d4
  4070f5:	xlat   BYTE PTR ds:[ebx]
  4070f6:	jmp    0x40708c
  4070f8:	dec    eax
  4070f9:	je     0x407088
  4070fb:	sbb    al,0x45
  4070fd:	push   eax
  4070fe:	mov    ds:0xed329f15,eax
  407103:	popa   
  407104:	mov    BYTE PTR [edi+eax*2],cl
  407107:	sub    DWORD PTR [eax+0x1c],ebp
  40710a:	fidiv  WORD PTR [edx]
  40710c:	pop    dx
  40710e:	cdq    
  40710f:	pop    ecx
  407110:	retf   0xbc57
  407113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407114:	jmp    0x40718b
  407116:	fcom   DWORD PTR [ecx+esi*2+0x4efc5724]
  40711d:	add    bh,ah
  40711f:	lds    ecx,FWORD PTR [esi-0x7f]
  407122:	pop    ds
  407123:	enter  0x5338,0xa6
  407127:	sbb    esi,edi
  407129:	outs   dx,DWORD PTR ds:[esi]
  40712a:	jbe    0x4070e4
  40712c:	dec    ebp
  40712d:	xor    ebp,esp
  40712f:	es cld 
  407131:	mov    DWORD PTR [ecx-0x22371bee],ebx
  407137:	dec    eax
  407138:	xor    al,0xbb
  40713a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40713b:	sub    DWORD PTR [eax],esp
  40713d:	dec    eax
  40713e:	mov    edi,0x50d32ede
  407143:	dec    ecx
  407144:	mov    dl,0x6a
  407146:	xor    al,0xc2
  407148:	cmp    eax,0x56aa03
  40714d:	out    dx,eax
  40714e:	dec    edi
  40714f:	cmp    BYTE PTR [edx-0x7],ah
  407152:	popa   
  407153:	push   ecx
  407154:	in     eax,dx
  407155:	mov    BYTE PTR [esi+0x7cf453e1],ah
  40715b:	scas   eax,DWORD PTR es:[edi]
  40715c:	jmp    0x407116
  40715e:	cmp    esi,0x17
  407161:	or     edi,DWORD PTR [eax]
  407163:	jge    0x407145
  407165:	sbb    BYTE PTR [edx-0x7c3ecbfc],bh
  40716b:	mov    ebx,0x72a925ac
  407170:	in     al,0x4e
  407172:	scas   eax,DWORD PTR es:[edi]
  407173:	add    esi,ebx
  407175:	jmp    0x277c2f9c
  40717a:	jmp    0x4071b9
  40717c:	mov    ah,0x50
  40717e:	dec    ebx
  40717f:	jl     0x407199
  407181:	psllw  mm4,QWORD PTR [eax-0x17]
  407185:	hlt    
  407186:	xor    DWORD PTR [edi+ebp*4],eax
  407189:	shr    BYTE PTR [ebx-0x3],1
  40718c:	loop   0x4071df
  40718e:	mov    dl,0xb8
  407190:	sub    ebp,ebp
  407192:	cmp    DWORD PTR [ebp-0x3715bffc],ebp
  407198:	mov    eax,ds:0x4f3f0168
  40719d:	out    0x7d,al
  40719f:	nop
  4071a0:	mov    ah,ch
  4071a2:	test   eax,0xd7515acf
  4071a7:	sti    
  4071a8:	repnz sub al,0x82
  4071ab:	mov    ds:0x76c93b9b,eax
  4071b0:	cwde   
  4071b1:	or     BYTE PTR [esi+edi*8+0xed33c64],dl
  4071b8:	mov    ah,al
  4071ba:	rol    DWORD PTR [esi],0x4c
  4071bd:	push   ds
  4071be:	test   dh,bl
  4071c0:	fdivr  QWORD PTR [ecx]
  4071c2:	lea    ecx,[edi]
  4071c4:	pop    ecx
  4071c5:	sbb    ch,BYTE PTR [ecx+0x6c]
  4071c8:	pop    edi
  4071c9:	or     al,al
  4071cb:	mov    WORD PTR ds:0x9c4c4166,es
  4071d1:	leave  
  4071d2:	mov    ds:0xe4eb9f75,al
  4071d7:	inc    ebx
  4071d8:	and    DWORD PTR [eax+0x45],ebp
  4071db:	mov    edi,es
  4071dd:	sub    al,BYTE PTR [edx-0x70]
  4071e0:	(bad)  
  4071e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e2:	cdq    
  4071e3:	adc    ebx,DWORD PTR [eax-0x60]
  4071e6:	pushf  
  4071e7:	ds enter 0x577e,0xa3
  4071ec:	rcr    ecx,cl
  4071ee:	mov    edx,0x90475e4
  4071f3:	call   0xfd6f501a
  4071f8:	jno    0x4071ad
  4071fa:	mov    bh,0xeb
  4071fc:	int    0xd5
  4071fe:	inc    ebp
  4071ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407200:	cli    
  407201:	je     0x40723c
  407203:	mov    ch,0xde
  407205:	rol    ebp,1
  407207:	mov    eax,ds:0x17574e85
  40720c:	xor    ah,BYTE PTR [edx+0x4ad98fb2]
  407212:	pop    ss
  407213:	pop    edi
  407214:	fistp  DWORD PTR ds:0xa03da539
  40721a:	push   edi
  40721b:	rcl    BYTE PTR [esi-0x47],0xe0
  40721f:	shl    DWORD PTR [esi],1
  407221:	ret    0x63f6
  407224:	icebp  
  407225:	and    DWORD PTR [ebx+ecx*1-0x14f08e21],0xffffff84
  40722d:	dec    edx
  40722e:	dec    esp
  40722f:	iret   
  407230:	cmp    ebx,DWORD PTR [ebx]
  407232:	and    BYTE PTR [ecx+0x61],al
  407235:	xchg   edx,eax
  407236:	(bad)  
  407237:	cmp    esp,DWORD PTR cs:[ecx]
  40723a:	cmp    ecx,DWORD PTR [eax]
  40723c:	inc    edx
  40723d:	sub    al,0x86
  40723f:	dec    edi
  407240:	in     al,dx
  407241:	les    edx,FWORD PTR [eax-0x887ebce]
  407247:	adc    eax,0x1771505f
  40724c:	sub    eax,0xcf6a585b
  407251:	cld    
  407252:	mov    esp,0x93ebc13e
  407257:	loop   0x407260
  407259:	push   eax
  40725a:	(bad)  
  40725b:	repz pop esp
  40725d:	mov    esi,0xdc176730
  407262:	push   ecx
  407263:	mov    al,ds:0xa5772e20
  407268:	xchg   ebx,eax
  407269:	xor    eax,DWORD PTR [ebx-0x2b]
  40726c:	call   0x6436:0x356b8095
  407273:	dec    ebx
  407274:	mov    ss,WORD PTR [eax-0x3f]
  407277:	mov    dh,0xf1
  407279:	adc    eax,0x5d261720
  40727e:	fidiv  WORD PTR [ecx+0x2b]
  407281:	and    esp,DWORD PTR [edi-0x777beb79]
  407287:	std    
  407288:	xchg   edx,eax
  407289:	cld    
  40728a:	ins    DWORD PTR es:[edi],dx
  40728b:	jns    0x4072af
  40728d:	rcr    ecx,1
  40728f:	fwait
  407290:	ud1    eax,ecx
  407293:	sbb    DWORD PTR [ebp+0x7],ebx
  407296:	int3   
  407297:	adc    ch,BYTE PTR [ecx+ebx*4+0x4c0776ed]
  40729e:	adc    ebp,DWORD PTR [esi+ecx*4-0x4c41bd2b]
  4072a5:	inc    ebx
  4072a6:	ins    BYTE PTR es:[edi],dx
  4072a7:	or     DWORD PTR [edi+0xb22783a],ecx
  4072ad:	(bad)  
  4072ae:	in     eax,0x52
  4072b0:	stos   DWORD PTR es:[edi],eax
  4072b1:	mov    ds:0xedfe66d8,eax
  4072b6:	shl    BYTE PTR [edi],1
  4072b8:	pop    DWORD PTR [eax]
  4072ba:	jmp    0x40727f
  4072bc:	dec    eax
  4072bd:	aad    0x9b
  4072bf:	push   es
  4072c0:	outs   dx,BYTE PTR ds:[esi]
  4072c1:	push   ebp
  4072c3:	and    bh,BYTE PTR gs:[edx+0x125c6935]
  4072ca:	je     0x407273
  4072cc:	mov    ebx,0x9d01dba5
  4072d1:	push   eax
  4072d2:	lock scas eax,DWORD PTR es:[edi]
  4072d4:	and    DWORD PTR [eax],0x87c565ac
  4072da:	mov    ebp,0xab3514bf
  4072df:	push   es
  4072e0:	jmp    0x13d1:0x4797e1b5
  4072e7:	and    BYTE PTR [edi],0xaa
  4072ea:	out    0xbf,eax
  4072ec:	int    0x3b
  4072ee:	mov    esp,0x5853591
  4072f3:	and    cl,0xfc
  4072f6:	push   0xffffffd3
  4072f8:	jecxz  0x4072ee
  4072fa:	sub    eax,0x62010c6a
  4072ff:	(bad)  
  407301:	js     0x407292
  407303:	pop    es
  407304:	lods   al,BYTE PTR ds:[esi]
  407305:	in     eax,dx
  407306:	fstp   TBYTE PTR [ecx-0x18]
  407309:	cmc    
  40730a:	pop    ebx
  40730b:	xchg   edx,eax
  40730c:	cdq    
  40730d:	call   FWORD PTR [ebx]
  40730f:	xor    edi,DWORD PTR ds:0x366d3c62
  407315:	pop    eax
  407316:	xchg   edi,eax
  407317:	inc    esp
  407318:	out    dx,eax
  407319:	repnz pop ss
  40731b:	adc    DWORD PTR [edx-0xc0385f8],0x38511451
  407325:	sahf   
  407326:	or     ebx,DWORD PTR [eax]
  407328:	inc    ebx
  407329:	mov    ds:0xcb5c3080,eax
  40732e:	push   esp
  40732f:	test   DWORD PTR [ebp+0x244ff564],esp
  407335:	mov    ah,0x56
  407337:	push   esp
  407338:	or     eax,0xf7bb9382
  40733d:	jmp    0xba45:0xa14e31ad
  407344:	movnti DWORD PTR [ebx-0xf],edi
  407348:	dec    DWORD PTR [eax-0x5b]
  40734b:	dec    edi
  40734c:	stos   DWORD PTR es:[edi],eax
  40734d:	xchg   ecx,eax
  40734e:	xor    edi,esp
  407350:	cmp    DWORD PTR [edx-0xddebb45],esp
  407356:	pop    es
  407357:	push   edx
  407358:	inc    edx
  407359:	in     eax,dx
  40735a:	out    dx,al
  40735b:	pop    eax
  40735c:	push   0x769d6889
  407361:	int3   
  407362:	pop    esi
  407363:	mov    ds:0x5abcd916,eax
  407368:	pop    esp
  407369:	cmp    dh,BYTE PTR [eax+0x22e26ea7]
  40736f:	retf   0xe378
  407372:	inc    edi
  407373:	or     al,0x72
  407375:	jne    0x4073b4
  407377:	je     0x407373
  407379:	xor    edi,DWORD PTR [esi]
  40737b:	mov    WORD PTR [esi+0x25],cs
  40737e:	std    
  40737f:	inc    edi
  407380:	xchg   ebx,eax
  407381:	lea    esi,[esi]
  407383:	jecxz  0x40737e
  407385:	fcomi  st,st(7)
  407387:	or     bh,BYTE PTR [bx+di+0xfca]
  40738c:	inc    esi
  40738d:	rcl    ebx,1
  40738f:	cmp    al,0x94
  407391:	sub    ah,al
  407393:	fisubr DWORD PTR [eax-0x6a]
  407396:	mov    al,0xfe
  407398:	fdivr  QWORD PTR ds:0x8243de32
  40739e:	mov    esp,0x6a8998c9
  4073a3:	jmp    0x40739e
  4073a5:	loopne 0x407401
  4073a7:	pop    eax
  4073a8:	jge    0x407333
  4073aa:	ja     0x407426
  4073ac:	ret    0xa00b
  4073af:	mov    ebx,0xd1ad453c
  4073b4:	fadd   st,st(2)
  4073b6:	jg     0x4073c5
  4073b8:	jns    0x407357
  4073ba:	test   cl,bh
  4073bc:	add    cl,BYTE PTR [edi-0x58842ce3]
  4073c2:	pop    esp
  4073c3:	add    eax,0xf3a81b44
  4073c8:	not    BYTE PTR [edx+0x67]
  4073cb:	sbb    BYTE PTR [edi],ah
  4073cd:	es sbb al,0xb0
  4073d0:	retf   0x48a2
  4073d3:	retf   0xd8c0
  4073d6:	sbb    bl,BYTE PTR [eax]
  4073d8:	sbb    eax,0x63c75700
  4073dd:	fwait
  4073de:	aas    
  4073df:	and    al,0xe
  4073e1:	jae    0x407416
  4073e3:	test   al,0xf7
  4073e5:	dec    ebx
  4073e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e7:	test   eax,0xdacae649
  4073ec:	xchg   esp,eax
  4073ed:	push   0x78
  4073ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f0:	mov    cl,0xc9
  4073f2:	jle    0x40737f
  4073f4:	das    
  4073f5:	inc    edi
  4073f6:	ss xchg edx,eax
  4073f8:	fdivr  QWORD PTR [edx]
  4073fa:	imul   ebx,DWORD PTR [ebx],0x66a3b8f8
  407400:	jb     0x407432
  407402:	or     cl,al
  407404:	cmp    BYTE PTR ds:[edx-0x21],ch
  407408:	sbb    eax,0x45e08ba6
  40740d:	stos   DWORD PTR es:[edi],eax
  40740e:	hlt    
  40740f:	ins    BYTE PTR es:[edi],dx
  407410:	js     0x4073a7
  407412:	ret    0x3994
  407415:	iret   
  407416:	pop    edi
  407417:	mov    edi,0xe3a65d56
  40741c:	and    ebx,ebp
  40741e:	jecxz  0x4073c6
  407420:	adc    al,0x4a
  407422:	jo     0x407428
  407424:	add    edi,0x61
  407427:	out    0xfb,eax
  407429:	mov    ecx,es
  40742b:	mov    ebx,0xc96d237d
  407430:	repz sub eax,0x3833f595
  407436:	or     BYTE PTR [edi],ch
  407438:	out    0x1e,al
  40743a:	mov    ch,0x54
  40743c:	sbb    al,bl
  40743e:	ins    DWORD PTR es:[edi],dx
  40743f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407440:	cmp    DWORD PTR [ecx+eiz*2-0x4b],edx
  407444:	push   eax
  407445:	gs push esi
  407447:	jo     0x407427
  407449:	and    al,0xaf
  40744b:	jbe    0x4073ef
  40744d:	and    cl,BYTE PTR [edx+edi*2]
  407450:	push   ebx
  407451:	ret    
  407452:	pop    ds
  407453:	dec    ecx
  407454:	scas   al,BYTE PTR es:[edi]
  407455:	rcr    DWORD PTR [ecx+edi*8-0x1f],cl
  407459:	jp     0x407452
  40745b:	push   esi
  40745c:	sbb    DWORD PTR [ecx-0x60],0x465def24
  407463:	jmp    0x40742e
  407465:	inc    esp
  407466:	js     0x40741c
  407468:	mov    al,ds:0xa0f9d6fd
  40746d:	inc    ebx
  40746e:	xchg   ebx,eax
  40746f:	adc    al,0xbe
  407471:	lahf   
  407472:	mov    ecx,?
  407474:	mov    esp,0x78973203
  407479:	mov    ds:0x63fa373b,eax
  40747e:	adc    eax,0xd6ba3489
  407483:	mov    eax,DWORD PTR [eax+0x49]
  407486:	js     0x407425
  407488:	mov    dh,0x55
  40748a:	aaa    
  40748b:	adc    bl,BYTE PTR [ecx-0x631613d7]
  407491:	push   eax
  407492:	and    DWORD PTR ds:0x42b01c,0x1f92
  40749c:	call   DWORD PTR ds:0x42ed63
  4074a2:	not    DWORD PTR ds:0x429020
  4074a8:	push   0x21
  4074aa:	push   0x434
  4074af:	xor    DWORD PTR ds:0x42d000,0x4953
  4074b9:	push   0x98678765
  4074be:	and    DWORD PTR ds:0x42a018,0xec
  4074c8:	call   DWORD PTR ds:0x42ed47
  4074ce:	sbb    eax,0x149b
  4074d3:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4074da:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  4074e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4074e4:	mov    ebx,0x7510899
  4074e9:	inc    eax
  4074ea:	xor    ecx,ebx
  4074ec:	mov    DWORD PTR ds:0x429020,0x12
  4074f6:	cmp    DWORD PTR ds:0x429020,0x0
  4074fd:	je     0x407554
  407503:	cmp    DWORD PTR ds:0x429020,0x7
  40750a:	jne    0x407522
  407510:	push   0x42e000
  407515:	push   0x0
  407517:	push   0x18ee
  40751c:	call   DWORD PTR ds:0x42ed8f
  407522:	cmp    DWORD PTR ds:0x429020,0x8
  407529:	jne    0x40753a
  40752f:	mov    eax,ds:0x429020
  407534:	dec    eax
  407535:	mov    ds:0x429020,eax
  40753a:	mov    eax,ds:0x429020
  40753f:	dec    eax
  407540:	mov    ds:0x429020,eax
  407545:	jmp    0x4074f6
  40754a:	sbb    DWORD PTR ds:0x42d01c,0x3713
  407554:	mov    eax,0x3272e0
  407559:	add    ecx,eax
  40755b:	mov    DWORD PTR [ebp-0x24],ecx
  40755e:	sbb    ecx,DWORD PTR ds:0x429020
  407564:	mov    ecx,DWORD PTR [ebp+0x14]
  407567:	test   ecx,ecx
  407569:	mov    DWORD PTR ds:0x429014,0x4f5c
  407573:	je     0x407598
  407579:	movzx  ecx,WORD PTR ds:0x42b004
  407580:	sub    DWORD PTR ds:0x42d008,ecx
  407586:	mov    ecx,DWORD PTR [ebp+0x14]
  407589:	mov    DWORD PTR ds:0x42a000,0x186b
  407593:	mov    ecx,DWORD PTR [ecx]
  407595:	mov    DWORD PTR [ebp-0x24],ecx
  407598:	mov    ecx,0x7665
  40759d:	xor    DWORD PTR ds:0x429000,ecx
  4075a3:	imul   edx,eax
  4075a6:	mov    esi,DWORD PTR ds:0x424cad
  4075ac:	mov    edi,DWORD PTR ds:0x424cc1
  4075b2:	sub    esi,edi
  4075b4:	and    esi,DWORD PTR [esi+edi*1]
  4075b7:	mov    esi,0x76532
  4075bc:	add    edx,ecx
  4075be:	xchg   esi,ecx
  4075c0:	and    DWORD PTR ds:0x429008,0x0
  4075ca:	mov    esi,DWORD PTR ds:0x429008
  4075d0:	inc    esi
  4075d1:	mov    DWORD PTR ds:0x429008,esi
  4075d7:	cmp    DWORD PTR ds:0x429008,0x7
  4075de:	jne    0x4075ef
  4075e4:	push   0x24d9
  4075e9:	call   DWORD PTR ds:0x42ed4f
  4075ef:	cmp    DWORD PTR ds:0x429008,0x6
  4075f6:	jne    0x407609
  4075fc:	mov    esi,DWORD PTR ds:0x429008
  407602:	inc    esi
  407603:	mov    DWORD PTR ds:0x429008,esi
  407609:	cmp    DWORD PTR ds:0x429008,0x10
  407610:	jb     0x4075ca
  407616:	mov    edi,0x54354
  40761b:	sub    edx,edi
  40761d:	mov    ecx,DWORD PTR [ebp-0x4]
  407620:	sub    DWORD PTR ds:0x42901c,edx
  407626:	xor    ecx,ebx
  407628:	and    DWORD PTR ds:0x429010,0x0
  407632:	mov    esi,DWORD PTR ds:0x429010
  407638:	inc    esi
  407639:	mov    DWORD PTR ds:0x429010,esi
  40763f:	cmp    DWORD PTR ds:0x429010,0x4
  407646:	jne    0x40765e
  40764c:	push   0x42e000
  407651:	push   0x0
  407653:	push   0x1
  407655:	push   DWORD PTR [ebp-0x14]
  407658:	call   DWORD PTR ds:0x42ed53
  40765e:	cmp    DWORD PTR ds:0x429010,0x3
  407665:	jne    0x407678
  40766b:	mov    esi,DWORD PTR ds:0x429010
  407671:	inc    esi
  407672:	mov    DWORD PTR ds:0x429010,esi
  407678:	cmp    DWORD PTR ds:0x429010,0x13
  40767f:	jb     0x407632
  407685:	jmp    0x409a32
  40768a:	mov    ds:0x277127e6,eax
  40768f:	jnp    0x407704
  407691:	mov    ah,0xde
  407693:	sbb    DWORD PTR [ebp+0x47],esp
  407696:	fwait
  407697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407698:	outs   dx,BYTE PTR ds:[esi]
  407699:	cmp    edi,DWORD PTR [esp+edi*1+0x5fea7a7a]
  4076a0:	jp     0x40771c
  4076a2:	bound  esi,QWORD PTR [edi-0x60]
  4076a5:	inc    eax
  4076a6:	dec    edi
  4076a7:	ret    
  4076a8:	fist   WORD PTR [esi-0x60972e18]
  4076ae:	adc    BYTE PTR [ecx-0x70e76683],dh
  4076b4:	inc    edi
  4076b5:	push   ebp
  4076b6:	fst    DWORD PTR [ebx-0x3]
  4076b9:	scas   al,BYTE PTR es:[edi]
  4076ba:	mov    bh,0x35
  4076bc:	repz mov dh,BYTE PTR [edi]
  4076bf:	mov    eax,0xac38867c
  4076c4:	cmp    ah,dh
  4076c6:	dec    ecx
  4076c7:	xchg   DWORD PTR [eax],edx
  4076c9:	fimul  WORD PTR [edx-0x2a]
  4076cc:	(bad)  
  4076cd:	jne    0x4076ef
  4076cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d0:	ret    
  4076d1:	adc    al,0x45
  4076d3:	retf   
  4076d4:	xchg   esp,eax
  4076d5:	and    BYTE PTR [esi-0x50f098d9],al
  4076db:	les    edx,FWORD PTR [ebx+0xc1505c1]
  4076e1:	add    DWORD PTR [edi],ebx
  4076e3:	push   edi
  4076e4:	adc    ebp,esp
  4076e6:	cmp    al,0x1b
  4076e8:	cwde   
  4076e9:	sar    DWORD PTR [esi-0x4df9069f],0x21
  4076f0:	push   esp
  4076f1:	cdq    
  4076f2:	ret    0xd02e
  4076f5:	xor    BYTE PTR [eax-0x56],al
  4076f8:	sahf   
  4076f9:	iret   
  4076fa:	es out dx,al
  4076fc:	pusha  
  4076fd:	inc    edi
  4076fe:	xor    DWORD PTR [esi+0x32],esp
  407701:	inc    ebp
  407702:	xor    dh,BYTE PTR [ebp-0x1e]
  407705:	les    esp,FWORD PTR [eax-0x23]
  407708:	jmp    0x407760
  40770a:	dec    edi
  40770b:	adc    BYTE PTR [edi-0x7a21fc93],0x7c
  407712:	(bad)  
  407713:	sub    edx,DWORD PTR [ecx+edx*1-0x17f98a2f]
  40771a:	dec    DWORD PTR [eax+ebp*8+0x67ccf48d]
  407721:	cmp    BYTE PTR [ebx-0x60c52802],dl
  407727:	xchg   edx,eax
  407728:	or     edx,eax
  40772a:	icebp  
  40772b:	xchg   ebx,eax
  40772c:	mov    al,ds:0xf0f98a50
  407731:	xor    edi,DWORD PTR [esi+0x6]
  407734:	sub    BYTE PTR [edx+0x52e3c573],bh
  40773a:	mov    ebp,0x1181b537
  40773f:	cmp    eax,DWORD PTR [edi-0x6b]
  407742:	push   es
  407743:	and    ebp,DWORD PTR [ebx+edx*1-0x7d69cc52]
  40774a:	inc    esi
  40774b:	lods   al,BYTE PTR ds:[esi]
  40774c:	arpl   WORD PTR [edi],ax
  40774e:	push   cs
  40774f:	cmp    al,0xdc
  407751:	leave  
  407752:	adc    BYTE PTR [edi+eax*4-0x44c41df1],bl
  407759:	pop    ebx
  40775a:	and    ch,BYTE PTR [ebx+0x70]
  40775d:	xchg   edi,eax
  40775e:	std    
  40775f:	mov    DWORD PTR [eax-0x1b],0xf96885de
  407766:	outs   dx,DWORD PTR ds:[esi]
  407767:	aam    0x6f
  407769:	outs   dx,DWORD PTR ds:[esi]
  40776a:	or     ecx,0xffffffde
  40776d:	cmp    ecx,edi
  40776f:	std    
  407770:	aam    0x1f
  407772:	addr16 ret 0x94e3
  407776:	pop    eax
  407777:	push   ebx
  407778:	data16 (bad) 
  40777a:	in     al,0x51
  40777c:	cwde   
  40777d:	clc    
  40777e:	push   ebp
  40777f:	jg     0x407724
  407781:	xchg   edx,eax
  407782:	jp     0x4077d3
  407784:	les    edx,FWORD PTR [ecx-0x21210ca4]
  40778a:	nop
  40778b:	push   es
  40778c:	dec    esi
  40778d:	popa   
  40778e:	outs   dx,DWORD PTR ds:[esi]
  40778f:	lock xchg ecx,eax
  407791:	jae    0x40773b
  407793:	cmp    al,0x7e
  407795:	sbb    DWORD PTR [eax],edx
  407797:	leave  
  407798:	(bad)  
  40779a:	fsubr  DWORD PTR [ebx]
  40779c:	xchg   esp,eax
  40779d:	add    BYTE PTR [edi+0x55],cl
  4077a0:	aam    0xd9
  4077a2:	icebp  
  4077a3:	enter  0x9f0b,0x2f
  4077a7:	jne    0x407734
  4077a9:	pop    ss
  4077aa:	and    esi,0xffffffbe
  4077ad:	jns    0x407751
  4077af:	fldcw  WORD PTR [edx+ecx*8]
  4077b2:	xlat   BYTE PTR ds:[ebx]
  4077b3:	dec    ebx
  4077b4:	jmp    0x3c2a:0x7caba781
  4077bb:	jns    0x407823
  4077bd:	fsub   QWORD PTR [edi-0x76]
  4077c0:	sub    BYTE PTR [esi-0x72c23f47],ch
  4077c6:	push   ebx
  4077c7:	clc    
  4077c8:	or     BYTE PTR [ebx+0x621e283f],al
  4077ce:	popf   
  4077cf:	pop    ds
  4077d0:	jmp    0x87c0f820
  4077d5:	mov    fs,WORD PTR [ebp+0x30a7d92c]
  4077db:	and    BYTE PTR [edx-0x1436d000],dh
  4077e1:	adc    ebx,DWORD PTR [ebp-0x59fabe22]
  4077e7:	add    eax,0xaa287f99
  4077ec:	add    eax,DWORD PTR [ebp+0x4918161f]
  4077f2:	aaa    
  4077f3:	ret    0xc38c
  4077f6:	mov    al,ds:0x12f8d4d
  4077fb:	in     eax,dx
  4077fc:	sbb    eax,0x7f3da51e
  407801:	lods   eax,DWORD PTR ds:[esi]
  407802:	pop    esi
  407803:	(bad)  
  407804:	sub    DWORD PTR ds:0x121163e6,ecx
  40780a:	jp     0x40779e
  40780c:	push   ecx
  40780d:	cli    
  40780e:	ja     0x4077e1
  407810:	xchg   ebx,eax
  407811:	xrelease xchg DWORD PTR [edi+0x3c5fb5bc],eax
  407818:	(bad)  
  407819:	or     al,dh
  40781b:	out    0xee,eax
  40781d:	mov    al,0x2a
  40781f:	mov    edx,0xcb416783
  407824:	jmp    0xb76f:0x8850f355
  40782b:	sbb    eax,0x61f13841
  407830:	dec    ebx
  407831:	inc    ebx
  407832:	inc    ebx
  407833:	int    0xc
  407835:	stc    
  407836:	inc    DWORD PTR [ebx+esi*2]
  407839:	mov    esi,0x1161f923
  40783f:	aas    
  407840:	call   0x8857:0x1fcad454
  407847:	mov    ch,0xb
  407849:	rcr    BYTE PTR [ebx+eiz*4+0x43],1
  40784d:	(bad)  
  40784e:	mov    edx,0xeb6b17ab
  407853:	cld    
  407854:	cmp    DWORD PTR [ecx+0x5c],esp
  407857:	jae    0x4078d6
  407859:	and    DWORD PTR cs:[ebp+0x7],ecx
  40785d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40785e:	outs   dx,BYTE PTR ds:[esi]
  40785f:	aaa    
  407860:	mov    bl,0x1d
  407862:	fild   WORD PTR [edi+esi*4]
  407865:	mov    eax,ds:0xb0100b46
  40786a:	jp     0x407841
  40786c:	mov    bh,0x77
  40786e:	out    dx,eax
  40786f:	xchg   ecx,eax
  407870:	inc    BYTE PTR [esi-0x3b]
  407873:	xchg   DWORD PTR [eax-0x73],edx
  407876:	cli    
  407877:	lea    ebx,[ebx]
  407879:	shl    bl,0x6c
  40787c:	test   eax,edi
  40787e:	(bad)  
  40787f:	mov    DWORD PTR [edx-0x17f49abf],ebp
  407885:	out    dx,al
  407886:	pop    ss
  407887:	mov    ds:0x7925f909,eax
  40788c:	jmp    0x40785f
  40788e:	or     eax,0xe8cdfdce
  407893:	mov    esp,0x5a44ebde
  407898:	int3   
  407899:	xor    BYTE PTR [esi-0x50],ch
  40789c:	add    BYTE PTR ds:0x3d47de16,al
  4078a2:	ss jge 0x407891
  4078a5:	pop    esp
  4078a6:	hlt    
  4078a7:	adc    BYTE PTR [esi+0x17828f4c],0xc8
  4078ae:	cmp    eax,ebx
  4078b0:	in     al,0x30
  4078b2:	mov    WORD PTR [edx],?
  4078b4:	stos   BYTE PTR es:[edi],al
  4078b5:	(bad)  
  4078b6:	mov    eax,ds:0x574475f2
  4078bb:	aad    0xb5
  4078bd:	mov    ebp,0xff79d461
  4078c2:	mov    eax,0xc6fd0ed6
  4078c7:	rcr    ah,1
  4078c9:	cwde   
  4078ca:	pop    es
  4078cb:	jp     0x407850
  4078cd:	fwait
  4078ce:	into   
  4078cf:	mov    al,0x9d
  4078d1:	psubb  mm3,QWORD PTR [bp+di+0x22c8]
  4078d7:	loopne 0x40785b
  4078d9:	(bad)  
  4078db:	enter  0x1c79,0x33
  4078df:	xchg   esi,eax
  4078e0:	loop   0x407935
  4078e2:	jmp    0x89b4c5f3
  4078e7:	adc    al,0x91
  4078e9:	and    DWORD PTR [ebp+0x47],ecx
  4078ec:	arpl   WORD PTR [edi],dx
  4078ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f0:	mov    dl,0xce
  4078f2:	ja     0x407903
  4078f4:	nop
  4078f5:	pop    ebp
  4078f6:	inc    ebx
  4078f7:	inc    ecx
  4078f8:	or     ax,0x19f8
  4078fc:	xor    DWORD PTR [ecx+0x44],eax
  4078ff:	scas   eax,DWORD PTR es:[edi]
  407900:	loop   0x4078c8
  407902:	out    0x98,eax
  407904:	jns    0x4078b8
  407906:	sbb    DWORD PTR [ebx+eax*2-0x66],edi
  40790a:	rcl    BYTE PTR [edx+ecx*2],0x39
  40790e:	mov    eax,ds:0x8aceac36
  407913:	sbb    BYTE PTR [edi],cl
  407915:	pop    ebp
  407916:	jmp    0xb0a0fdf7
  40791b:	and    ecx,DWORD PTR [ebp+0x64f633c7]
  407921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407922:	cmp    esp,DWORD PTR [edx-0x7f]
  407925:	sbb    cl,BYTE PTR [edx+0x6c17b269]
  40792b:	dec    edi
  40792c:	outs   dx,DWORD PTR ds:[esi]
  40792d:	mov    BYTE PTR [ecx+0x13],bl
  407930:	hlt    
  407931:	pop    eax
  407932:	clc    
  407933:	sbb    al,0x50
  407935:	adc    ecx,edi
  407937:	(bad)  
  407938:	in     al,0xb8
  40793a:	loopne 0x4078ce
  40793c:	mov    bh,bl
  40793e:	sbb    DWORD PTR [ecx],ecx
  407940:	mov    ds:0x6ea77a4e,al
  407945:	fincstp 
  407947:	jo     0x4079a0
  407949:	inc    esi
  40794a:	das    
  40794b:	popa   
  40794c:	adc    ecx,ecx
  40794e:	scas   al,BYTE PTR es:[edi]
  40794f:	cmp    eax,0x31c8c77f
  407954:	mov    bh,0xbf
  407956:	out    0x4e,eax
  407958:	adc    DWORD PTR [esi+0x42774f3],ebx
  40795e:	adc    DWORD PTR [eax-0x28],ecx
  407961:	mov    esp,0xfa5c6e1a
  407966:	test   BYTE PTR [ecx+0x6e],al
  407969:	mov    cl,0x91
  40796b:	iret   
  40796c:	inc    ebx
  40796d:	and    DWORD PTR [ebx-0x16],0x4a
  407971:	jp     0x4079ca
  407973:	(bad)  
  407976:	xchg   DWORD PTR [edx+0xc735f45],ebx
  40797c:	pop    ebp
  40797d:	jecxz  0x4079c3
  40797f:	inc    edi
  407980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407981:	xchg   esi,eax
  407982:	xor    BYTE PTR [edx-0x5598fa57],cl
  407988:	push   0x34
  40798a:	adc    bh,BYTE PTR [edx+esi*8]
  40798d:	xor    DWORD PTR [edx+0xde24ea5],0x9efed803
  407997:	fwait
  407998:	xchg   bh,al
  40799a:	je     0x4079b8
  40799c:	repz fnsetpm(287 only) 
  40799f:	or     bl,BYTE PTR [esi+0x13c92948]
  4079a5:	mov    al,0x69
  4079a7:	inc    esp
  4079a8:	push   edx
  4079a9:	add    BYTE PTR [ecx-0x76],bh
  4079ac:	ret    0xc435
  4079af:	mov    ah,0xe1
  4079b1:	add    eax,0x4483fe88
  4079b6:	mov    bl,0xd6
  4079b8:	xchg   ecx,eax
  4079b9:	fstp   DWORD PTR [ebp+0x4b]
  4079bc:	and    ebp,esi
  4079be:	inc    edi
  4079bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c0:	fist   WORD PTR [esi]
  4079c2:	sub    BYTE PTR [eax-0x49],0xf
  4079c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c7:	fimul  WORD PTR [edx+eiz*1]
  4079ca:	push   ebx
  4079cb:	les    ebp,FWORD PTR [esi-0x425a87a]
  4079d1:	add    DWORD PTR [ebx+eax*4-0x19],ecx
  4079d5:	mov    ecx,0x338e36cb
  4079da:	pop    ebp
  4079db:	adc    eax,0xe447b964
  4079e0:	jbe    0x4079a9
  4079e2:	inc    ebp
  4079e3:	xor    BYTE PTR [ecx+0x37],dh
  4079e6:	ret    0x90d0
  4079e9:	jo     0x4079ba
  4079eb:	icebp  
  4079ec:	sub    al,0x75
  4079ee:	neg    BYTE PTR ds:0x906c20c6
  4079f4:	outs   dx,DWORD PTR ds:[esi]
  4079f5:	retf   0x2587
  4079f8:	das    
  4079f9:	sub    edx,DWORD PTR [eax-0x71b5b266]
  4079ff:	fsub   QWORD PTR [edi]
  407a01:	jle    0x407a0b
  407a03:	mov    ebx,0xfcebcd3e
  407a08:	fiadd  DWORD PTR [ecx-0x16]
  407a0b:	push   esp
  407a0c:	call   0x5e7ddf8
  407a11:	inc    edi
  407a12:	pop    edi
  407a13:	push   edx
  407a14:	iret   
  407a15:	push   es
  407a16:	test   al,0xd8
  407a18:	and    ecx,DWORD PTR [ebp-0x7b645cf2]
  407a1e:	das    
  407a1f:	ds mov eax,0x36c049b6
  407a25:	lds    eax,FWORD PTR [ecx-0xfea09c6]
  407a2b:	sbb    ebx,ecx
  407a2d:	inc    esp
  407a2e:	or     BYTE PTR [ebx],cl
  407a30:	or     bh,ch
  407a32:	mov    edx,0x4d5b5b5b
  407a37:	cs mov dh,0x7
  407a3a:	push   ebx
  407a3b:	icebp  
  407a3c:	iret   
  407a3d:	mov    cl,0x65
  407a3f:	sbb    bl,0x8d
  407a42:	jmp    0x368a7673
  407a47:	loopne 0x407ab7
  407a49:	fild   QWORD PTR [esi-0x23]
  407a4c:	bound  esp,QWORD PTR [esi-0x3a2c2d33]
  407a52:	xchg   BYTE PTR [edx+0x477f2846],dl
  407a58:	and    al,BYTE PTR [eax-0x74dc1b09]
  407a5e:	pushf  
  407a5f:	je     0x407a9a
  407a61:	(bad)  [eax-0x4921d72f]
  407a67:	dec    ebp
  407a68:	mov    ss,esp
  407a6a:	mov    ah,BYTE PTR [esp+ecx*4]
  407a6d:	pop    edi
  407a6e:	dec    esp
  407a6f:	xchg   edi,eax
  407a70:	adc    al,0xf9
  407a72:	jnp    0x407a4e
  407a74:	dec    eax
  407a75:	mov    cl,0x38
  407a77:	dec    edi
  407a78:	xchg   edx,eax
  407a79:	inc    eax
  407a7a:	or     eax,0xb57e3919
  407a7f:	jp     0x407afe
  407a81:	mov    edi,DWORD PTR [ebx+0x71]
  407a84:	cwde   
  407a85:	mov    BYTE PTR [eax],dl
  407a87:	cs or  eax,0x32c1d119
  407a8d:	jle    0x407a65
  407a8f:	imul   ebp,DWORD PTR [eax+0x66829d3],0x1f
  407a96:	mov    WORD PTR [edx+edx*4+0x31],ss
  407a9a:	fild   DWORD PTR [eax-0x55d3c88b]
  407aa0:	popf   
  407aa1:	fld    DWORD PTR [ebx-0x13]
  407aa4:	xchg   BYTE PTR ds:0xe5a54fc7,bh
  407aaa:	(bad)  
  407aab:	and    ebp,DWORD PTR [edi+0x5d]
  407aae:	adc    eax,0x70939d7b
  407ab3:	out    dx,eax
  407ab4:	jbe    0x407a82
  407ab6:	adc    dl,BYTE PTR [ebx+0x655a6f63]
  407abc:	cmc    
  407abd:	das    
  407abe:	sbb    esp,DWORD PTR [esi-0x13]
  407ac1:	pop    ecx
  407ac2:	in     al,0xba
  407ac4:	and    ebx,DWORD PTR [ebx+edi*2]
  407ac7:	sti    
  407ac8:	mov    ch,0x3b
  407aca:	add    al,0x24
  407acc:	ss or  ecx,eax
  407acf:	pop    ebp
  407ad0:	mov    ds:0x450598ee,eax
  407ad5:	mov    ds:0x2d9dabcd,al
  407ada:	int    0xf5
  407adc:	fdiv   st,st(4)
  407ade:	cmc    
  407adf:	loopne 0x407ad9
  407ae1:	out    dx,al
  407ae2:	mov    esi,0x72c30558
  407ae7:	rcl    BYTE PTR [edi],1
  407ae9:	stc    
  407aea:	inc    edx
  407aeb:	inc    ebx
  407aec:	(bad)  
  407aed:	test   WORD PTR [ecx],bx
  407af0:	jmp    0x407b6e
  407af2:	pop    ecx
  407af3:	lahf   
  407af4:	cld    
  407af5:	inc    eax
  407af6:	jp     0x407a9a
  407af8:	adc    al,0xd0
  407afa:	pop    ebx
  407afb:	mov    ds:0xf5f0903b,eax
  407b00:	dec    esi
  407b01:	xchg   ebx,eax
  407b02:	mov    ecx,0x88a4857e
  407b07:	gs and eax,0x9390a51d
  407b0d:	(bad)  [edi+0x32]
  407b10:	pop    ecx
  407b11:	fidiv  WORD PTR [ebx+0x231432c8]
  407b17:	rol    DWORD PTR [eax+eiz*1+0x1e],cl
  407b1b:	neg    DWORD PTR [esi+0x6b87139e]
  407b21:	sbb    eax,0xc936961
  407b26:	stc    
  407b27:	(bad)  
  407b28:	fstp   TBYTE PTR [ebx+0x7aa8c440]
  407b2e:	pop    ebx
  407b2f:	sub    al,0x80
  407b31:	rol    ebp,cl
  407b33:	mov    eax,ds:0xd87ddd1b
  407b38:	fild   WORD PTR [edi]
  407b3a:	cmp    ch,ah
  407b3c:	xor    BYTE PTR [ecx+0x14e94cb1],0xdb
  407b43:	aad    0x16
  407b45:	and    DWORD PTR [eax],esi
  407b47:	idiv   DWORD PTR [edx-0x24]
  407b4a:	aas    
  407b4b:	dec    esi
  407b4c:	inc    eax
  407b4d:	jno    0x407b7e
  407b4f:	xchg   BYTE PTR [esi],dl
  407b51:	dec    esi
  407b52:	in     eax,0xad
  407b54:	inc    ecx
  407b55:	xchg   ebx,eax
  407b56:	xor    BYTE PTR es:[ecx-0x171ce5e8],bl
  407b5d:	pop    ebp
  407b5e:	scas   al,BYTE PTR es:[edi]
  407b5f:	fwait
  407b60:	push   edi
  407b61:	and    bl,ah
  407b63:	es inc edi
  407b65:	jg     0x407ba4
  407b67:	xor    BYTE PTR [ebp+0x69],0x26
  407b6b:	xchg   esi,eax
  407b6c:	cld    
  407b6d:	pop    edi
  407b6e:	out    0xdb,al
  407b70:	ins    BYTE PTR es:[edi],dx
  407b71:	mov    ebx,esp
  407b73:	dec    esi
  407b74:	pop    ss
  407b75:	jl     0x407bcc
  407b77:	sbb    eax,0x291331f
  407b7c:	mov    ebp,0x2eb2b9dd
  407b81:	outs   dx,BYTE PTR ds:[esi]
  407b82:	xchg   edx,eax
  407b83:	mov    eax,0x7099b58e
  407b88:	sbb    DWORD PTR [eax+edx*8],esp
  407b8b:	lods   al,BYTE PTR ds:[esi]
  407b8c:	inc    ecx
  407b8d:	fcomi  st,st(3)
  407b8f:	sub    cl,BYTE PTR [esi+eax*2+0x5f]
  407b93:	je     0x407b78
  407b95:	adc    dl,BYTE PTR [edx]
  407b97:	inc    eax
  407b98:	xor    ah,ah
  407b9a:	aam    0xe3
  407b9c:	xor    al,0xe2
  407b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b9f:	test   esp,esi
  407ba1:	adc    eax,0x5ca4d280
  407ba6:	inc    edx
  407ba7:	jp     0x407b81
  407ba9:	push   ecx
  407baa:	aas    
  407bab:	or     ecx,DWORD PTR [ebp-0x6e2b3e77]
  407bb1:	bsr    esi,DWORD PTR [ecx]
  407bb4:	push   eax
  407bb5:	xchg   esp,eax
  407bb6:	popa   
  407bb7:	lock jmp 0x407c2d
  407bba:	data16 (bad) 
  407bbc:	pop    esi
  407bbd:	mov    edi,fs
  407bbf:	and    eax,0xf4a255c
  407bc4:	cmp    al,0x4c
  407bc6:	mov    bl,0xec
  407bc8:	int    0x42
  407bca:	popf   
  407bcb:	pop    eax
  407bcc:	pop    es
  407bcd:	fcmovu st,st(6)
  407bcf:	aaa    
  407bd0:	test   cl,0x87
  407bd3:	mov    ecx,0xc11473e5
  407bd8:	xor    al,BYTE PTR [edx-0x10]
  407bdb:	int    0xb5
  407bdd:	sti    
  407bde:	jae    0x407c55
  407be0:	add    ebp,DWORD PTR [esi]
  407be2:	mov    esi,0xcf450cb9
  407be7:	pop    esp
  407be8:	xor    BYTE PTR [edi+0x3b],bl
  407beb:	dec    ebp
  407bec:	dec    ecx
  407bed:	jne    0x407b77
  407bef:	sub    edx,DWORD PTR [edi-0x52]
  407bf2:	add    BYTE PTR [ebx],0x1f
  407bf5:	jl     0x407c31
  407bf7:	into   
  407bf8:	jae    0x407c13
  407bfa:	add    DWORD PTR [esi+0x7f88d0e0],esi
  407c00:	in     eax,0x94
  407c02:	into   
  407c03:	sub    DWORD PTR [ebp-0x73],0x60712a06
  407c0a:	jle    0x407c12
  407c0c:	int3   
  407c0d:	mov    dh,0xf1
  407c0f:	aad    0x1c
  407c11:	shl    ecx,0x78
  407c14:	mov    dh,0xe6
  407c16:	and    eax,0x231b49f
  407c1b:	mov    bh,0xbe
  407c1d:	rcl    BYTE PTR [edx+0x7089993],1
  407c23:	leave  
  407c24:	pop    ecx
  407c25:	pop    ebx
  407c26:	push   eax
  407c27:	jecxz  0x407bc7
  407c29:	out    dx,al
  407c2a:	addr16 into 
  407c2c:	imul   esi,DWORD PTR [ecx+0x62fff9aa],0xb6f1c012
  407c36:	sub    edi,0xe7597842
  407c3c:	adc    eax,0xbea48f4b
  407c41:	or     dh,BYTE PTR [ebp+0x37f4206c]
  407c47:	call   0x1718:0xc3f2398e
  407c4e:	in     eax,0x4d
  407c50:	add    dl,dh
  407c52:	pop    ss
  407c53:	jnp    0x407c9f
  407c55:	mov    esi,0x62b54e23
  407c5a:	add    al,0xbc
  407c5c:	xor    esp,DWORD PTR [esi+0x5bcbd402]
  407c62:	sti    
  407c63:	rcl    esp,1
  407c65:	jns    0x407c6a
  407c67:	in     eax,0x4
  407c69:	xor    DWORD PTR [ecx-0x255569f],0x41529f6a
  407c73:	(bad)  
  407c74:	dec    ebp
  407c75:	popf   
  407c76:	clc    
  407c77:	mov    dh,0x72
  407c79:	es push ds
  407c7b:	ins    DWORD PTR es:[edi],dx
  407c7c:	mov    bl,0xec
  407c7e:	sbb    ebx,DWORD PTR [ecx]
  407c80:	xchg   edx,edx
  407c82:	adc    eax,0xfd47b7f0
  407c87:	and    BYTE PTR [eax-0x7f],bh
  407c8a:	cmp    ebx,DWORD PTR [ebx+0x25fc62cc]
  407c90:	pop    ss
  407c91:	addr16 xchg ecx,eax
  407c93:	bound  ecx,QWORD PTR [edi+0x27]
  407c96:	fs add edx,ebp
  407c99:	fwait
  407c9a:	mov    cl,0x38
  407c9c:	mov    esi,0xda3c6161
  407ca1:	jl     0x407c5e
  407ca3:	sbb    BYTE PTR [ecx],ch
  407ca5:	push   0xffffffba
  407ca7:	xchg   esp,eax
  407ca8:	xchg   ebp,eax
  407ca9:	mov    bl,0xad
  407cab:	loop   0x407c5c
  407cad:	addr16 aas 
  407caf:	mov    eax,ds:0x3384b107
  407cb4:	or     DWORD PTR [esi+0x2e],0xfffffff3
  407cb8:	in     al,dx
  407cb9:	sbb    DWORD PTR [ebp-0x60],0xffffff83
  407cbd:	or     BYTE PTR [edx-0x7a3cbbfa],dh
  407cc3:	enter  0xcc84,0x21
  407cc7:	xlat   BYTE PTR ds:[ebx]
  407cc8:	mov    dl,0xda
  407cca:	sbb    BYTE PTR [edi],0x9d
  407ccd:	cmp    dl,BYTE PTR [esi]
  407ccf:	inc    ebx
  407cd0:	cmp    edi,DWORD PTR [ecx-0x57]
  407cd3:	mov    eax,ds:0x29a21cd6
  407cd8:	or     DWORD PTR [edi+0x7250c92e],ebx
  407cde:	dec    ebp
  407cdf:	push   esp
  407ce0:	sbb    DWORD PTR [ecx-0x474bb1d5],eax
  407ce6:	mov    ebp,0x3eb9dc74
  407ceb:	jl     0x407d3c
  407ced:	lods   eax,DWORD PTR ds:[esi]
  407cee:	(bad)  
  407cef:	shr    DWORD PTR [ebx-0x7d],1
  407cf2:	cwde   
  407cf3:	cwde   
  407cf4:	push   ds
  407cf5:	out    0xb,al
  407cf7:	mov    dl,0xdb
  407cf9:	jae    0x407d44
  407cfb:	cli    
  407cfc:	inc    eax
  407cfd:	popf   
  407cfe:	or     BYTE PTR [ecx+0x1c53c46a],bl
  407d04:	idiv   BYTE PTR [ebp-0x46]
  407d07:	dec    ecx
  407d08:	cdq    
  407d09:	push   esp
  407d0a:	icebp  
  407d0b:	test   al,0xcc
  407d0d:	ret    
  407d0e:	cs cs jge 0x407d36
  407d12:	sub    dl,BYTE PTR cs:[esp+esi*2-0x43f517f3]
  407d1a:	push   ecx
  407d1b:	scas   al,BYTE PTR es:[edi]
  407d1c:	fnstcw WORD PTR [edx]
  407d1e:	adc    eax,DWORD PTR [ebp+0x747f9a33]
  407d24:	mov    bh,0x7d
  407d26:	retf   0xbc6a
  407d29:	dec    esi
  407d2a:	push   ecx
  407d2b:	scas   eax,DWORD PTR es:[edi]
  407d2c:	inc    ecx
  407d2d:	mov    edx,0xc680a789
  407d32:	shl    DWORD PTR fs:[edi],cl
  407d35:	lds    edx,FWORD PTR ds:0x839dbefc
  407d3b:	test   eax,0xec3eae6d
  407d40:	inc    esp
  407d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d42:	and    ecx,DWORD PTR [eax+0x3699903f]
  407d48:	ins    BYTE PTR es:[edi],dx
  407d49:	xchg   esp,eax
  407d4a:	inc    esp
  407d4b:	cmp    al,0xa4
  407d4d:	fisub  WORD PTR ds:0xfdbdc985
  407d53:	js     0x407d99
  407d55:	cmp    al,0x36
  407d57:	add    eax,0x6ac99331
  407d5c:	mov    ch,0x68
  407d5e:	pop    esi
  407d5f:	push   eax
  407d60:	jg     0x407dac
  407d62:	and    eax,0x6a4710c
  407d67:	cwde   
  407d68:	mov    DWORD PTR [edx+0x4788c49e],esi
  407d6e:	push   ds
  407d6f:	sub    eax,0xdea963db
  407d74:	xchg   edi,eax
  407d75:	mov    eax,ds:0xdd729d48
  407d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d7b:	push   ds
  407d7c:	add    al,BYTE PTR [ebx+ebx*1+0x1d]
  407d80:	jb     0x407d78
  407d82:	bound  ebx,QWORD PTR [ebp+0x54d844c1]
  407d88:	inc    esi
  407d89:	pop    es
  407d8a:	push   edx
  407d8b:	mov    ds,eax
  407d8d:	pop    ebp
  407d8e:	pop    ebp
  407d8f:	test   DWORD PTR [edx+ebp*4+0x2e758ac7],esi
  407d96:	scas   eax,DWORD PTR es:[edi]
  407d97:	rcr    DWORD PTR [edx],0x2f
  407d9a:	xor    eax,0xd3e8acdc
  407d9f:	in     al,0x6f
  407da1:	push   ebx
  407da2:	ror    esp,cl
  407da4:	dec    eax
  407da5:	jg     0x407d2c
  407da7:	div    ebx
  407da9:	iret   
  407daa:	test   al,0xb1
  407dac:	sbb    DWORD PTR [esi-0x6c023f41],edx
  407db2:	ins    BYTE PTR es:[edi],dx
  407db3:	std    
  407db4:	or     al,0xa0
  407db6:	ja     0x407de4
  407db8:	bound  edx,QWORD PTR [eax-0x7bdd2727]
  407dbe:	jns    0x407d7a
  407dc0:	and    al,0x54
  407dc2:	push   edi
  407dc3:	or     bh,BYTE PTR [edx-0x6]
  407dc6:	xchg   esp,eax
  407dc7:	push   0x928c951d
  407dcc:	loope  0x407e23
  407dce:	gs adc ax,WORD PTR gs:[edx-0x3d]
  407dd4:	bound  esp,QWORD PTR [eax+eiz*1+0x4cc6b8a]
  407ddb:	mov    al,ds:0xbd03f64a
  407de0:	icebp  
  407de1:	out    dx,al
  407de2:	xor    BYTE PTR [edx+0x28],bl
  407de5:	push   eax
  407de6:	mov    esp,0x6a1515b4
  407deb:	pop    edi
  407dec:	rcr    DWORD PTR ds:0xbd7dbe5e,cl
  407df2:	and    BYTE PTR [edi+0x7b],al
  407df5:	add    esi,DWORD PTR [ebx]
  407df7:	mov    esi,0xe29a2d9d
  407dfc:	pop    ecx
  407dfd:	std    
  407dfe:	mov    eax,ds:0xe83b072a
  407e03:	push   es
  407e04:	jae    0x407e02
  407e06:	cld    
  407e07:	imul   edx,DWORD PTR [edi],0xc0c33c46
  407e0d:	loope  0x407e58
  407e0f:	mov    BYTE PTR [ecx],dl
  407e11:	dec    ebx
  407e12:	xor    BYTE PTR [esi+0x2d790061],0xb9
  407e19:	inc    esi
  407e1a:	add    al,BYTE PTR [ecx-0x66]
  407e1d:	rcl    DWORD PTR [esi+0x142574ea],0x5d
  407e24:	xor    esp,DWORD PTR [edi]
  407e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e27:	mov    edx,0xf3b11e35
  407e2c:	inc    esi
  407e2d:	cld    
  407e2e:	cmp    dl,BYTE PTR [edx-0x47508075]
  407e34:	mov    cs,WORD PTR [esi+0x5c]
  407e37:	pop    es
  407e38:	push   es
  407e39:	fbstp  TBYTE PTR [esi]
  407e3b:	xor    al,0xed
  407e3d:	ror    BYTE PTR [eax],0x0
  407e40:	shl    DWORD PTR [edx],0x83
  407e43:	repz xor bl,BYTE PTR [ebx+0x8a4c79f]
  407e4a:	add    BYTE PTR [eax-0x11],0xd1
  407e4e:	mov    esi,0x8d572bdc
  407e53:	ja     0x407e3e
  407e55:	call   DWORD PTR [edi+edx*1+0x7e]
  407e59:	outs   dx,BYTE PTR ds:[esi]
  407e5a:	push   ebp
  407e5b:	outs   dx,DWORD PTR ds:[esi]
  407e5c:	or     dl,BYTE PTR [eax+eax*2-0x2a386285]
  407e63:	xchg   esp,eax
  407e64:	inc    edx
  407e65:	or     ebx,esi
  407e67:	mov    dh,0x2c
  407e69:	mov    dl,0x2f
  407e6b:	dec    esi
  407e6c:	push   0x13c054a3
  407e71:	ja     0x407e04
  407e73:	dec    eax
  407e74:	add    eax,eax
  407e76:	xor    BYTE PTR [edx+ecx*1-0x4c],al
  407e7a:	xchg   edx,eax
  407e7c:	jo     0x407eb7
  407e7e:	and    eax,DWORD PTR [ebx]
  407e80:	push   esp
  407e81:	mov    edx,0x9e0bfe9a
  407e86:	mov    ds:0x93187850,eax
  407e8b:	rcr    BYTE PTR [ebp+0x3e],cl
  407e8e:	xchg   BYTE PTR [esi+0x22],dh
  407e91:	or     BYTE PTR [edi+esi*2],dl
  407e94:	push   dx
  407e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e97:	js     0x407ebb
  407e99:	inc    edi
  407e9a:	test   al,0x45
  407e9c:	inc    edi
  407e9d:	inc    ebx
  407e9e:	in     eax,dx
  407e9f:	mov    ebp,0xbea509e8
  407ea4:	jmp    0x407e96
  407ea6:	mov    ss,WORD PTR [ebp+esi*8-0x6c97fdfa]
  407ead:	pop    edi
  407eae:	scas   al,BYTE PTR es:[edi]
  407eaf:	repnz sbb DWORD PTR [ecx-0x5c],edi
  407eb3:	test   DWORD PTR [esi-0x80],ebx
  407eb6:	(bad)  
  407eb7:	int3   
  407eb8:	aam    0x28
  407eba:	mov    esi,0xb1c2fbdc
  407ebf:	loope  0x407efb
  407ec1:	(bad)  
  407ec2:	jle    0x407e63
  407ec4:	repz dec edi
  407ec6:	mov    ds,esp
  407ec8:	mov    eax,ds:0xd69985fe
  407ecd:	xchg   DWORD PTR [eax+0x3b7f2379],ecx
  407ed3:	mov    ds:0x252fc278,al
  407ed8:	or     edx,DWORD PTR [edx+0x28ede0df]
  407ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407edf:	mov    eax,0x1630f5d
  407ee4:	(bad)  
  407ee5:	mov    esi,0x4d616e0b
  407eea:	ret    0x3a7d
  407eed:	jg     0x407e86
  407eef:	ins    DWORD PTR es:[edi],dx
  407ef0:	sub    DWORD PTR [esi+ecx*1-0x28],edx
  407ef4:	(bad)  [eax+0x6607df78]
  407efa:	xor    dh,BYTE PTR [edx-0x46]
  407efd:	push   0x56
  407eff:	dec    ecx
  407f00:	and    bl,BYTE PTR [ecx]
  407f02:	stos   DWORD PTR es:[edi],eax
  407f03:	dec    edx
  407f04:	stc    
  407f05:	push   esi
  407f06:	jns    0x407f30
  407f08:	dec    eax
  407f09:	jl     0x407f7c
  407f0b:	xor    al,0x6c
  407f0d:	(bad)  
  407f0f:	dec    ebp
  407f10:	xchg   esi,eax
  407f11:	(bad)  
  407f12:	retf   
  407f13:	xchg   edi,eax
  407f14:	adc    bh,BYTE PTR [eax]
  407f16:	or     DWORD PTR [esi],edi
  407f18:	dec    esi
  407f19:	stos   DWORD PTR es:[edi],eax
  407f1a:	fild   QWORD PTR [eax+esi*8-0x6e]
  407f1e:	loopne 0x407ef5
  407f20:	sbb    ah,ah
  407f22:	repz scas al,BYTE PTR es:[edi]
  407f24:	jns    0x407f05
  407f26:	or     BYTE PTR [edx*4+0x3e52c27b],ch
  407f2d:	scas   al,BYTE PTR es:[edi]
  407f2e:	cld    
  407f2f:	jmp    0x9184:0xdccbb9e3
  407f36:	adc    ah,BYTE PTR cs:[ecx+0x5b]
  407f3a:	aad    0xe7
  407f3c:	loop   0x407ebe
  407f3e:	pop    ecx
  407f3f:	xchg   DWORD PTR [ecx+0x1b],esp
  407f42:	mov    dl,0x69
  407f44:	jae    0x407f63
  407f46:	arpl   WORD PTR ds:0x165f7563,cx
  407f4c:	mov    ds:0x2977ebf4,al
  407f51:	jno    0x407fc6
  407f53:	add    ecx,esi
  407f55:	(bad)  
  407f56:	jne    0x407f2e
  407f58:	out    dx,eax
  407f59:	xchg   edx,eax
  407f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5b:	push   0x65082aaa
  407f60:	dec    ebp
  407f61:	inc    ebx
  407f62:	iret   
  407f63:	sub    al,0x92
  407f65:	hlt    
  407f66:	mov    al,ds:0xe57a392b
  407f6b:	leave  
  407f6c:	lods   eax,DWORD PTR ds:[esi]
  407f6d:	hlt    
  407f6e:	adc    dl,0xe2
  407f71:	and    DWORD PTR [eax],esi
  407f73:	push   edi
  407f74:	adc    al,0xde
  407f76:	scas   eax,DWORD PTR es:[edi]
  407f77:	add    al,0xee
  407f79:	inc    ebp
  407f7a:	imul   ebx,DWORD PTR [bx+si+0x6565],0xffffffa4
  407f80:	stos   DWORD PTR es:[edi],eax
  407f81:	sbb    eax,0x7011920b
  407f86:	out    dx,al
  407f87:	fld    DWORD PTR [esi+edi*1+0x61fcf985]
  407f8e:	les    edi,FWORD PTR es:[esi+edx*1+0x226bb7da]
  407f96:	mov    ebp,0x7f9a2bc
  407f9b:	jns    0x408014
  407f9d:	mov    ah,0x58
  407f9f:	pop    ds
  407fa0:	ss mov ecx,0x906bf45a
  407fa6:	mov    eax,ds:0x3e99934
  407fab:	sub    DWORD PTR [esi+ebx*8+0x57],esi
  407faf:	retf   0xca7a
  407fb2:	mov    fs,ebx
  407fb4:	lods   al,BYTE PTR ds:[esi]
  407fb5:	int    0xe5
  407fb7:	loope  0x407fd9
  407fb9:	mov    DWORD PTR [eax+0x7d],esi
  407fbc:	push   es
  407fbd:	das    
  407fbe:	mov    ds:0x6073f54,eax
  407fc3:	pop    ebp
  407fc4:	test   eax,0x2c7e5e25
  407fc9:	xchg   esp,eax
  407fca:	inc    ebp
  407fcb:	jecxz  0x408042
  407fcd:	(bad)  
  407fce:	pop    edi
  407fcf:	inc    ecx
  407fd0:	hlt    
  407fd1:	pop    ss
  407fd2:	pusha  
  407fd3:	xchg   DWORD PTR [ebp+0x19],edi
  407fd6:	inc    ebp
  407fd7:	cmp    ah,BYTE PTR [ecx-0x30]
  407fda:	sub    eax,ebp
  407fdc:	xchg   ecx,eax
  407fdd:	mov    ebx,0xf0d2e17d
  407fe2:	add    eax,0x599125bd
  407fe7:	out    dx,al
  407fe8:	out    0xe6,al
  407fea:	gs lock cdq 
  407fed:	pop    esp
  407fee:	cmc    
  407fef:	fisttp QWORD PTR [esi+edi*1+0x25afc1f0]
  407ff6:	push   es
  407ff7:	xchg   esi,eax
  407ff8:	or     edi,DWORD PTR [edi]
  407ffa:	and    bh,BYTE PTR [edx+0x356c8bd9]
  408000:	mov    eax,0x49886554
  408005:	inc    edi
  408006:	daa    
  408007:	and    dh,BYTE PTR cs:[eax+0x60]
  40800b:	mov    es,WORD PTR [eax-0x5b]
  40800e:	int3   
  40800f:	mov    dh,BYTE PTR [ecx]
  408011:	sub    edx,ebp
  408013:	not    bh
  408015:	in     al,0x5e
  408017:	push   0xffffffcb
  408019:	cmp    eax,0x8d554716
  40801e:	or     ecx,DWORD PTR [edi-0x80]
  408021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408022:	sti    
  408023:	repz pop edi
  408025:	or     cl,BYTE PTR [edi+edi*8+0x324c744b]
  40802c:	jle    0x40801e
  40802e:	mov    al,0x6b
  408030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408031:	sti    
  408032:	stc    
  408033:	add    al,0xea
  408035:	out    dx,eax
  408036:	sbb    eax,0xf5159a1e
  40803b:	(bad)  
  40803d:	xlat   BYTE PTR ds:[ebx]
  40803e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40803f:	mov    WORD PTR [ecx+0x7f],ds
  408042:	mov    ebx,0xfd5bebd0
  408047:	jmp    0x40808a
  408049:	and    edi,DWORD PTR [esi+0x581a06dc]
  40804f:	lods   al,BYTE PTR ds:[esi]
  408050:	outs   dx,DWORD PTR ds:[esi]
  408051:	adc    esp,DWORD PTR [eax+0x3c]
  408054:	push   0xffffffde
  408056:	test   eax,0x111468e8
  40805b:	int    0x14
  40805d:	push   edi
  40805e:	dec    ebp
  40805f:	pop    edi
  408060:	or     edi,DWORD PTR [ecx+0x796965e1]
  408066:	outs   dx,BYTE PTR ds:[esi]
  408067:	push   ecx
  408068:	xlat   BYTE PTR ds:[ebx]
  408069:	pop    ds
  40806a:	aam    0xd9
  40806c:	pusha  
  40806d:	int3   
  40806e:	cdq    
  40806f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  408071:	sbb    esp,esi
  408073:	je     0x40802c
  408075:	mov    ebx,0x52ae20b2
  40807a:	ss pop esp
  40807c:	jle    0x4080a9
  40807e:	hlt    
  40807f:	nop
  408080:	(bad)  
  408081:	pop    esi
  408082:	push   ebp
  408083:	cwde   
  408084:	xor    DWORD PTR [ebx],ebp
  408086:	mov    bh,0x63
  408088:	jno    0x40800f
  40808a:	jmp    0x4080db
  40808c:	push   cs
  40808d:	loop   0x4080ed
  40808f:	loope  0x408064
  408091:	jl     0x40809b
  408093:	js     0x4080e4
  408095:	sbb    BYTE PTR [eax-0x5b],dl
  408098:	hlt    
  408099:	sub    cl,BYTE PTR [esi+0x48f75cb4]
  40809f:	retf   0x81f3
  4080a2:	hlt    
  4080a3:	aaa    
  4080a4:	pop    esp
  4080a5:	popf   
  4080a6:	es (bad) 
  4080a8:	scas   al,BYTE PTR es:[edi]
  4080a9:	arpl   WORD PTR [ebp-0x56],sp
  4080ac:	sar    DWORD PTR [ebx+0x3736be17],0x2c
  4080b3:	cmp    ebx,DWORD PTR [ebx+0x5d]
  4080b6:	jno    0x40805a
  4080b8:	popf   
  4080b9:	cmp    eax,0x9a56a498
  4080be:	aam    0xc2
  4080c0:	daa    
  4080c1:	mov    gs,WORD PTR [ecx-0xfdccdfb]
  4080c7:	pop    eax
  4080c8:	lahf   
  4080c9:	mov    eax,0x9887b0c6
  4080ce:	sti    
  4080cf:	push   edi
  4080d0:	dec    esp
  4080d1:	js     0x4080af
  4080d3:	jno    0x408096
  4080d5:	inc    ecx
  4080d6:	mov    ch,0x8c
  4080d8:	pop    es
  4080d9:	add    eax,0xc4277ce6
  4080de:	aad    0xce
  4080e0:	xor    eax,0x7ba65544
  4080e5:	(bad)  
  4080e6:	hlt    
  4080e7:	jl     0x408165
  4080e9:	jae    0x40812b
  4080eb:	xchg   esi,eax
  4080ec:	mov    edx,0x9c6a05d0
  4080f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f2:	out    dx,eax
  4080f3:	mov    ah,0xea
  4080f5:	cmp    esp,ebp
  4080f7:	xlat   BYTE PTR ds:[ebx]
  4080f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f9:	out    0x11,al
  4080fb:	adc    eax,0xef918741
  408100:	sub    DWORD PTR [ebx-0x7a],esp
  408103:	mov    ch,0x2e
  408105:	shl    DWORD PTR [esi+0x61],0x52
  408109:	xchg   edi,eax
  40810a:	inc    eax
  40810b:	mov    al,ds:0x934b4753
  408110:	jno    0x4080b6
  408112:	mov    esp,0x608b7bcf
  408117:	hlt    
  408118:	mov    al,ds:0x75fd7875
  40811d:	scas   al,BYTE PTR es:[edi]
  40811e:	push   ebp
  40811f:	xor    al,0x4f
  408121:	aad    0x54
  408123:	cli    
  408124:	popa   
  408125:	ret    0xaf91
  408128:	mov    dh,0x63
  40812a:	iret   
  40812b:	mov    edi,0xd8049fa9
  408130:	jbe    0x4081a9
  408132:	int3   
  408133:	mov    BYTE PTR [edi+0x6ca32433],bh
  408139:	int    0xf9
  40813b:	leave  
  40813c:	pop    eax
  40813d:	mov    cl,0x1f
  40813f:	push   esi
  408140:	pop    edx
  408141:	sub    BYTE PTR [ebx-0xa],al
  408144:	adc    eax,DWORD PTR [eax-0x5240d683]
  40814a:	mov    bh,0x94
  40814c:	test   edi,eax
  40814e:	push   eax
  40814f:	fidiv  WORD PTR [edi]
  408151:	pop    ebp
  408152:	push   esi
  408153:	lds    esp,FWORD PTR [ebp+0x1a]
  408156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408157:	lods   al,BYTE PTR ds:[esi]
  408158:	push   cs
  408159:	aas    
  40815a:	int    0x45
  40815c:	jmp    0x2c99049b
  408161:	imul   edx,esp,0x67ded4fd
  408167:	pop    ss
  408168:	xlat   BYTE PTR ds:[ebx]
  408169:	xor    edi,DWORD PTR [eax+0x15]
  40816c:	cmp    esp,ebp
  40816e:	pop    es
  40816f:	enter  0x7add,0x56
  408173:	cmp    al,0x1c
  408175:	outs   dx,BYTE PTR ds:[esi]
  408176:	mov    dh,0x32
  408178:	ja     0x408145
  40817a:	xor    eax,0xbf64ce9e
  40817f:	cld    
  408180:	not    BYTE PTR [ecx]
  408182:	fisttp QWORD PTR [ebp-0xb]
  408185:	xor    ch,BYTE PTR [edx]
  408187:	mov    edi,0xb997881
  40818c:	std    
  40818d:	xchg   ecx,eax
  40818e:	jmp    0x4081a7
  408190:	jmp    0xf4bd7fe2
  408195:	pop    ebp
  408196:	or     BYTE PTR [ebx],ch
  408198:	push   edi
  408199:	repz call 0xedb7d0a5
  40819f:	mov    esi,0x17332d4c
  4081a4:	jle    0x4081a4
  4081a6:	mov    esp,0xfc826f
  4081ab:	mov    edi,0x857fed3c
  4081b0:	(bad)  
  4081b1:	and    BYTE PTR [ebp+0x1b],ch
  4081b4:	and    esi,esi
  4081b6:	sbb    DWORD PTR [ebx+0x4a],0xf1206e6b
  4081bd:	xor    edx,0xffffffbb
  4081c0:	test   al,0x11
  4081c2:	shl    BYTE PTR [esi],cl
  4081c4:	mov    bl,0xd5
  4081c6:	nop
  4081c7:	das    
  4081c8:	imul   eax,ebx,0x56
  4081cb:	mov    DWORD PTR [edi+eax*4+0x67935a4e],esp
  4081d2:	xor    eax,0x9e926c05
  4081d7:	and    cl,BYTE PTR [edi+0x6be57475]
  4081dd:	or     esi,DWORD PTR [ebx+ebx*4-0x66824563]
  4081e4:	jnp    0x4081cd
  4081e6:	gs cmp al,0x1e
  4081e9:	int3   
  4081ea:	push   ss
  4081eb:	inc    esi
  4081ec:	sti    
  4081ed:	div    DWORD PTR [edi+0x1f]
  4081f0:	stc    
  4081f1:	aad    0x65
  4081f3:	clc    
  4081f4:	imul   edi,DWORD PTR [ebp+0x3804a24f],0x19901615
  4081fe:	jg     0x408243
  408200:	cmc    
  408201:	pop    edi
  408202:	xlat   BYTE PTR ds:[ebx]
  408203:	stos   DWORD PTR es:[edi],eax
  408204:	mov    edi,0x8bcfd6bf
  408209:	fsubrp st(2),st
  40820b:	xchg   edi,eax
  40820c:	mov    ah,0x4a
  40820e:	fwait
  40820f:	jl     0x4081fc
  408211:	jge    0x4081d2
  408213:	out    dx,eax
  408214:	cmp    eax,0x41a75899
  408219:	out    0x53,al
  40821b:	mov    ecx,0x5f21585f
  408220:	mov    ch,0x26
  408222:	pop    ecx
  408223:	(bad)  
  408224:	aad    0x51
  408226:	fcomp  DWORD PTR [edi-0x24486b3f]
  40822c:	pop    ebx
  40822d:	fs push ss
  40822f:	aam    0x71
  408231:	test   DWORD PTR [ebx+0x15],0x12f56e08
  408238:	in     al,dx
  408239:	inc    ebx
  40823a:	sub    BYTE PTR [ebx-0x5d],0x3e
  40823e:	adc    edx,ebx
  408240:	mov    eax,ds:0x7e8153d0
  408245:	sub    al,0x46
  408247:	shl    DWORD PTR [edi+edi*4],0x19
  40824b:	(bad)  
  40824c:	pusha  
  40824d:	call   0x98cc76c8
  408252:	or     DWORD PTR [eax+0x5999b6d],0x56
  408259:	cmp    al,0x48
  40825b:	retf   
  40825c:	out    0xc2,eax
  40825e:	call   0xd3317a41
  408263:	jge    0x4082b3
  408265:	push   esp
  408266:	jbe    0x408206
  408268:	test   BYTE PTR [ebp-0x7d],0xe
  40826c:	(bad)  
  40826d:	mov    ds:0xcad52b08,al
  408272:	cmp    dh,BYTE PTR [eax-0x5c]
  408275:	test   eax,0x3d838ac5
  40827a:	dec    edi
  40827b:	mov    cs,WORD PTR [edi]
  40827d:	or     edi,ebp
  40827f:	add    esp,esi
  408281:	shl    DWORD PTR [edx],0x7d
  408284:	std    
  408285:	test   al,0x73
  408287:	cmc    
  408288:	aad    0x12
  40828a:	bound  ebx,QWORD PTR [ebx-0x3e]
  40828d:	sub    ch,bl
  40828f:	mov    bl,0xa0
  408291:	jge    0x408269
  408293:	(bad)  
  408294:	xor    ecx,esp
  408296:	inc    edi
  408297:	pop    eax
  408298:	cmc    
  408299:	dec    edi
  40829a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40829b:	ss scas eax,DWORD PTR es:[edi]
  40829d:	mov    dh,0xd6
  40829f:	pop    edi
  4082a0:	call   0x6a90:0xecdf99aa
  4082a7:	dec    eax
  4082a8:	pop    ebp
  4082a9:	mov    edi,0xd5d40935
  4082ae:	mov    dl,0x80
  4082b0:	pop    ebx
  4082b1:	fptan  
  4082b3:	xor    ch,bl
  4082b5:	fst    QWORD PTR [esi]
  4082b7:	rcr    dh,cl
  4082b9:	add    al,0x64
  4082bb:	add    al,0x52
  4082bd:	ret    
  4082be:	push   es
  4082bf:	jge    0x4082c1
  4082c1:	sti    
  4082c2:	aas    
  4082c3:	retf   0x47d2
  4082c6:	shl    dh,cl
  4082c8:	sbb    al,0x9f
  4082ca:	stos   BYTE PTR es:[edi],al
  4082cb:	push   edi
  4082cc:	in     eax,0x85
  4082ce:	and    esp,DWORD PTR [eax-0x36fd9047]
  4082d4:	xor    BYTE PTR [ecx+0x1d68d017],dl
  4082da:	outs   dx,BYTE PTR ds:[esi]
  4082db:	xor    DWORD PTR [eax],ecx
  4082dd:	jne    0x40830d
  4082df:	mov    eax,DWORD PTR [esi]
  4082e1:	mov    edi,0x1baec486
  4082e6:	xor    BYTE PTR [edi-0x59],ch
  4082e9:	aas    
  4082ea:	jb     0x408313
  4082ec:	imul   edx,DWORD PTR [esi],0x869bf14c
  4082f2:	fcmovnu st,st(4)
  4082f4:	(bad)  
  4082f6:	daa    
  4082f7:	mov    DWORD PTR [edx-0x757d686e],esp
  4082fd:	push   ebx
  4082fe:	adc    al,0x59
  408300:	retf   0x7661
  408303:	jne    0x40829e
  408305:	add    al,0x74
  408307:	pop    edx
  408308:	int3   
  408309:	cmp    dl,BYTE PTR [ebx+esi*1+0x23]
  40830d:	pop    esi
  40830e:	push   ebx
  40830f:	cld    
  408310:	mov    ebx,DWORD PTR [ecx]
  408312:	mov    al,0xde
  408314:	addr16 xchg edi,eax
  408316:	pushf  
  408317:	std    
  408318:	or     eax,0x660d1fa4
  40831d:	push   ss
  40831e:	jmp    0xcd4da0b6
  408323:	mov    edx,DWORD PTR [ebx+0x26]
  408326:	retf   0x4b21
  408329:	push   edi
  40832a:	rcl    BYTE PTR [esi-0x46],cl
  40832d:	xchg   ebp,eax
  40832e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40832f:	(bad)  
  408330:	sbb    dh,al
  408332:	pop    ds
  408333:	ds hlt 
  408335:	dec    edx
  408336:	int3   
  408337:	jne    0x40832c
  408339:	mov    ah,0x67
  40833b:	fidivr DWORD PTR [esi]
  40833d:	push   edx
  40833e:	scas   al,BYTE PTR es:[edi]
  40833f:	jo     0x4083a3
  408341:	cmp    al,0x1f
  408343:	cli    
  408344:	rcl    BYTE PTR [esi-0x75],1
  408347:	ds inc edi
  408349:	sub    BYTE PTR gs:[eax+0x1f],dh
  40834d:	xor    DWORD PTR ds:0xfe0e2d07,0x2cbfd096
  408357:	sub    ebp,esi
  408359:	jmp    0x40834f
  40835b:	neg    BYTE PTR [ebx-0x42064bed]
  408361:	mov    bh,0x91
  408363:	or     bl,BYTE PTR [ecx-0x461b34b4]
  408369:	or     ah,al
  40836b:	aas    
  40836c:	mov    al,0xcf
  40836e:	xchg   ebx,eax
  40836f:	fst    DWORD PTR [ebx-0x30531c77]
  408375:	enter  0x2bff,0xfb
  408379:	dec    esi
  40837a:	cmp    al,0x44
  40837c:	inc    edx
  40837d:	jmp    0xb570ea75
  408382:	push   esi
  408383:	inc    ebp
  408384:	pop    ss
  408385:	imul   esp,DWORD PTR gs:[edx+ecx*1+0x6f245942],0x4f
  40838e:	xchg   esp,eax
  40838f:	mov    WORD PTR [ebx+eiz*4],gs
  408392:	fstp   TBYTE PTR [edx-0x64c0608c]
  408398:	and    al,0x41
  40839a:	add    ebx,ecx
  40839c:	in     eax,0x6d
  40839e:	test   BYTE PTR [edx],ch
  4083a0:	or     ecx,ecx
  4083a2:	mov    ch,0xea
  4083a4:	inc    esp
  4083a5:	xor    DWORD PTR [edx+0x5c69947b],ecx
  4083ab:	xor    ecx,esp
  4083ad:	(bad)  
  4083ae:	pop    esp
  4083af:	adc    ecx,DWORD PTR [ebx-0x388fbe78]
  4083b5:	retf   0xf747
  4083b8:	lods   eax,DWORD PTR ds:[esi]
  4083b9:	aaa    
  4083ba:	dec    ecx
  4083bb:	mov    ebp,DWORD PTR [esi+0x6d0f78f2]
  4083c1:	cmp    bl,dl
  4083c3:	es retf 
  4083c5:	daa    
  4083c6:	dec    ecx
  4083c7:	push   esi
  4083c8:	lock push ss
  4083ca:	cmp    ebx,DWORD PTR [ebp+0x2525e46a]
  4083d0:	or     eax,0x6b9cc276
  4083d5:	xchg   BYTE PTR [edi-0x7efcfa33],ch
  4083db:	dec    ebx
  4083dc:	clc    
  4083dd:	mov    esi,0xc8be60a9
  4083e2:	push   ecx
  4083e3:	ret    
  4083e4:	and    BYTE PTR [esi+0x4b9d70a1],ch
  4083ea:	imul   esp,DWORD PTR [eax+0x78edac44],0xe67f7e89
  4083f4:	mov    al,ds:0x604012c6
  4083f9:	xor    al,0x9e
  4083fb:	sbb    WORD PTR [ecx],bx
  4083fe:	pop    ebp
  4083ff:	mov    eax,0x2ca0176f
  408404:	sbb    al,0x3f
  408406:	(bad)  
  408407:	in     eax,dx
  408408:	dec    esi
  408409:	mov    DWORD PTR [edi-0x63],edx
  40840c:	cli    
  40840d:	mov    esi,0x96276625
  408412:	sub    bh,BYTE PTR [ecx]
  408414:	push   edi
  408415:	inc    esp
  408416:	push   ecx
  408417:	sbb    DWORD PTR [esi+ebx*8-0x691a0cb],0xfffffff2
  40841f:	rcr    BYTE PTR [ebp+0x1c],0x2b
  408423:	sub    eax,DWORD PTR [ebx-0x5f]
  408426:	cmp    bh,al
  408428:	hlt    
  408429:	test   al,0xb6
  40842b:	adc    BYTE PTR [edi],al
  40842d:	ins    DWORD PTR es:[edi],dx
  40842e:	jle    0x4083f2
  408430:	inc    ebx
  408431:	cmp    cl,BYTE PTR [eax+0x23cd323d]
  408437:	pop    esp
  408438:	xchg   esp,eax
  408439:	push   0x15
  40843b:	aas    
  40843c:	test   eax,0xe99098aa
  408441:	cmp    al,0xcd
  408443:	mov    ch,0xe8
  408445:	xor    al,0x2b
  408447:	loope  0x4083cc
  408449:	rol    BYTE PTR [esi-0x4222307e],cl
  40844f:	loopne 0x4084a8
  408451:	or     dl,BYTE PTR [ebp+ecx*2+0x5]
  408455:	leave  
  408456:	js     0x4083e2
  408458:	mov    ds:0x188ea361,al
  40845d:	sub    al,0x98
  40845f:	adc    eax,0x18be5a88
  408464:	mov    eax,0xb7c6335d
  408469:	add    DWORD PTR [ebx],0x3b
  40846c:	bound  ebp,QWORD PTR [edi-0x35]
  40846f:	sbb    al,BYTE PTR [esi+ebp*2-0x78c24801]
  408476:	les    edx,FWORD PTR [esi]
  408478:	push   esp
  408479:	dec    ebp
  40847a:	(bad)
  40847d:	frstor [ebp-0x2fe2db8d]
  408483:	mov    ss,WORD PTR [eax-0x2e]
  408486:	adc    BYTE PTR ds:0xe0b3722e,cl
  40848c:	(bad)  
  40848d:	(bad)  
  40848e:	xor    al,0x70
  408490:	and    al,0xd8
  408492:	dec    ebx
  408493:	loopne 0x408509
  408495:	jno    0x40849d
  408497:	xor    BYTE PTR [eax+0x4c],bl
  40849a:	or     cl,dh
  40849c:	das    
  40849d:	mov    edi,DWORD PTR [eax-0x31]
  4084a0:	mov    ch,0x42
  4084a2:	inc    ebx
  4084a3:	arpl   WORD PTR [edi-0x5d63dd86],ax
  4084a9:	test   eax,0xb95c5494
  4084ae:	jae    0x408439
  4084b0:	pop    ss
  4084b1:	fs cbw 
  4084b4:	mov    ebx,0x8e856eff
  4084b9:	popf   
  4084ba:	or     BYTE PTR [esi+0x73],ch
  4084bd:	adc    al,0x32
  4084bf:	pop    ebx
  4084c0:	dec    edi
  4084c1:	test   DWORD PTR [edi+eiz*4-0x5e],esp
  4084c5:	test   al,0xb0
  4084c7:	aam    0xa3
  4084c9:	fimul  WORD PTR [edi]
  4084cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084cc:	loopne 0x408530
  4084ce:	cdq    
  4084cf:	cmp    al,0x8
  4084d1:	mov    DWORD PTR [ebp+ecx*2-0x2653cee9],edx
  4084d8:	dec    ecx
  4084d9:	push   esp
  4084da:	lock sbb eax,0x58a8801
  4084e0:	mov    esp,DWORD PTR [ebx+0x28]
  4084e3:	inc    esp
  4084e4:	test   al,0x1a
  4084e6:	(bad)  
  4084e7:	jae    0x40855c
  4084e9:	(bad)  
  4084ea:	cld    
  4084eb:	sub    BYTE PTR [ecx-0x72085f22],ah
  4084f1:	push   0x5779ff23
  4084f6:	pop    edx
  4084f7:	(bad)  
  4084f8:	call   0xcd6b:0x9c615bf6
  4084ff:	inc    eax
  408500:	enter  0x1c14,0xe0
  408504:	xor    BYTE PTR [edi],dl
  408506:	in     eax,0x3d
  408508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408509:	push   ds
  40850a:	jae    0x4084af
  40850c:	ficomp WORD PTR [edx]
  40850e:	dec    edx
  40850f:	clc    
  408510:	inc    ebp
  408511:	fwait
  408512:	in     al,dx
  408513:	popa   
  408514:	sub    BYTE PTR [edx+0x2f858a4],ch
  40851a:	(bad)  
  40851b:	xlat   BYTE PTR ds:[ebx]
  40851c:	test   BYTE PTR [ebx-0x6f971e5a],ch
  408522:	test   eax,0xa91a084c
  408527:	(bad)
  40852a:	mov    bh,0x6d
  40852c:	mov    DWORD PTR [ebx],eax
  40852e:	and    edi,edx
  408530:	inc    ebx
  408531:	push   ecx
  408532:	mov    DWORD PTR [ecx+eax*8],esp
  408535:	pusha  
  408536:	or     esi,ebx
  408538:	jmp    0x5be7bed9
  40853d:	inc    eax
  40853e:	aad    0xa4
  408540:	scas   eax,DWORD PTR es:[edi]
  408541:	call   0x226a4feb
  408546:	ret    0xfc37
  408549:	jge    0x30924cf9
  40854f:	or     BYTE PTR [ebp+0x77],bh
  408552:	push   ebx
  408553:	mov    eax,0x5692fca0
  408558:	cld    
  408559:	setnp  dl
  40855c:	clc    
  40855d:	adc    eax,0xe1b7a3ab
  408562:	mov    ds:0x91df815,al
  408567:	and    bl,BYTE PTR [ebx-0x34]
  40856a:	repnz inc ah
  40856d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40856e:	test   eax,0xdcebff5c
  408573:	and    eax,0x530cadc5
  408578:	shl    BYTE PTR [edi-0x1f],1
  40857b:	add    ch,BYTE PTR [edi]
  40857d:	lds    edi,FWORD PTR [ebx-0x5b5e54c6]
  408583:	xchg   ebp,eax
  408584:	std    
  408585:	fwait
  408586:	pop    ds
  408587:	pop    ecx
  408588:	out    dx,eax
  408589:	push   edi
  40858a:	jo     0x40850c
  40858c:	add    ah,BYTE PTR ds:0x9ee82664
  408592:	(bad)  
  408593:	stc    
  408594:	pusha  
  408595:	mov    DWORD PTR [esi],eax
  408597:	paddusw mm2,QWORD PTR [ebp+0x2c]
  40859b:	aas    
  40859c:	push   ebx
  40859d:	jge    0x408595
  40859f:	mov    cl,0x52
  4085a1:	sub    cx,sp
  4085a4:	or     al,0xaa
  4085a6:	inc    esi
  4085a7:	push   ecx
  4085a8:	icebp  
  4085a9:	pop    ebp
  4085aa:	inc    eax
  4085ab:	jg     0x408615
  4085ad:	iret   
  4085ae:	sbb    al,0x5e
  4085b0:	lahf   
  4085b1:	cld    
  4085b2:	push   esi
  4085b3:	test   DWORD PTR [edx-0x56],ebp
  4085b6:	jp     0x4085f1
  4085b8:	dec    edx
  4085b9:	xchg   edx,eax
  4085ba:	xchg   DWORD PTR [edx],edi
  4085bc:	lahf   
  4085bd:	rcr    DWORD PTR [ebp+0x512c8397],0x27
  4085c4:	inc    ebx
  4085c5:	frstor [edx+edi*1]
  4085c8:	jecxz  0x4085d3
  4085ca:	call   0x54de:0x28bcddac
  4085d1:	mov    bl,0xc4
  4085d3:	push   es
  4085d4:	pop    eax
  4085d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085d6:	adc    esp,edx
  4085d8:	jp     0x408633
  4085da:	pusha  
  4085db:	add    al,0xa1
  4085dd:	add    DWORD PTR [ebp+0x15],0xc7d99eef
  4085e4:	cmp    DWORD PTR [esi+0x11],ebx
  4085e7:	pop    ds
  4085e8:	les    esi,FWORD PTR [eax+ecx*1-0x4d]
  4085ec:	cmp    al,0x1d
  4085ee:	push   ds
  4085ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f0:	pop    ss
  4085f1:	adc    DWORD PTR [ebp-0x3a],esp
  4085f4:	jp     0x408580
  4085f6:	xor    eax,0x4bd52ef
  4085fb:	mov    edx,0x296df565
  408600:	lods   eax,DWORD PTR ds:[esi]
  408601:	sbb    eax,0xa4ff0d1a
  408606:	pop    ss
  408607:	sbb    al,0x79
  408609:	enter  0xd8be,0x40
  40860d:	mov    BYTE PTR [esi+esi*2],ch
  408610:	fstp   QWORD PTR [esi+eax*1+0x4f]
  408614:	push   ebp
  408615:	nop
  408616:	scas   al,BYTE PTR es:[edi]
  408617:	outs   dx,BYTE PTR ds:[esi]
  408618:	mov    dl,0x73
  40861a:	fadd   QWORD PTR [edx]
  40861c:	inc    ebp
  40861d:	fnstenv [ebx+0x520a8999]
  408623:	jmp    0xa6e97829
  408628:	inc    ecx
  408629:	aam    0x14
  40862b:	ret    0xd942
  40862e:	xchg   bp,ax
  408630:	sti    
  408631:	jl     0x408698
  408633:	in     eax,0xdb
  408635:	outs   dx,DWORD PTR ds:[esi]
  408636:	test   al,0xfc
  408638:	adc    eax,0xcfb7be5a
  40863d:	std    
  40863e:	mov    bl,0x48
  408640:	out    0x3b,eax
  408642:	les    edi,FWORD PTR ds:0x95c8177
  408648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408649:	stos   DWORD PTR es:[edi],eax
  40864a:	push   edi
  40864b:	pop    ss
  40864c:	push   0xec053f7d
  408651:	out    dx,eax
  408652:	jmp    0x763f914d
  408657:	es push ecx
  408659:	div    bl
  40865b:	pop    ebp
  40865c:	xchg   esi,esp
  40865e:	je     0x40865b
  408660:	push   cs
  408661:	push   ecx
  408662:	frstor [edx]
  408664:	int    0x15
  408666:	fimul  WORD PTR [edx+0x70]
  408669:	js     0x408644
  40866b:	aam    0xc2
  40866d:	xchg   ebx,eax
  40866e:	mov    eax,0xc10ff697
  408673:	hlt    
  408674:	and    DWORD PTR [ecx],0x1c
  408677:	cdq    
  408678:	xor    DWORD PTR [ebp-0x8ada1ac],ebx
  40867e:	sub    cl,BYTE PTR [edx-0x2]
  408681:	cmp    al,0x2d
  408683:	ja     0x408667
  408685:	lock xor dl,BYTE PTR [ecx]
  408688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408689:	pop    esp
  40868a:	or     bl,0x60
  40868d:	jns    0x4086ed
  40868f:	out    dx,eax
  408690:	or     ch,dh
  408692:	mov    ecx,0xa229a446
  408697:	xchg   bl,al
  408699:	dec    edx
  40869a:	jbe    0x4086a0
  40869c:	jmp    0x408717
  40869e:	ret    0xdc2b
  4086a1:	rcr    DWORD PTR [ebx-0x78a58379],0x54
  4086a8:	jmp    0xdda3a4b8
  4086ad:	loop   0x408714
  4086af:	inc    ecx
  4086b0:	in     al,0x64
  4086b2:	jmp    0x408684
  4086b4:	add    eax,0x8e6e1a50
  4086b9:	add    dh,BYTE PTR [esp+ebp*4]
  4086bc:	xchg   DWORD PTR [ebx+0x75],ecx
  4086bf:	jmp    0xcd99:0x4e17530c
  4086c6:	cmp    eax,0xce6b7b55
  4086cb:	sub    DWORD PTR [ebp+0x25],ecx
  4086ce:	xor    eax,0x82e96be3
  4086d3:	jno    0x4086ca
  4086d5:	imul   ebp,ebx,0xb878e3ce
  4086db:	outs   dx,DWORD PTR ds:[esi]
  4086dc:	mov    ch,0x84
  4086de:	ret    
  4086df:	repz scas al,BYTE PTR es:[edi]
  4086e1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4086e3:	adc    al,0xa9
  4086e5:	sahf   
  4086e6:	jne    0x408673
  4086e8:	lods   al,BYTE PTR ds:[esi]
  4086e9:	dec    esi
  4086ea:	mov    edx,0x2ed4ee71
  4086ef:	fadd   st,st(5)
  4086f1:	fwait
  4086f2:	dec    ebp
  4086f3:	cs ins DWORD PTR es:[edi],dx
  4086f5:	push   0xe090c86f
  4086fa:	xor    esi,0xffffffcd
  4086fd:	sub    DWORD PTR [eax],0x7d
  408700:	cs mov ch,0x1e
  408703:	ins    BYTE PTR es:[edi],dx
  408704:	push   ss
  408705:	push   cs
  408706:	add    BYTE PTR [edx],ch
  408708:	in     eax,dx
  408709:	daa    
  40870a:	xchg   edx,eax
  40870b:	add    al,BYTE PTR [ebx+esi*1-0x98bb166]
  408712:	push   ds
  408713:	pop    ecx
  408714:	push   cs
  408715:	daa    
  408716:	sbb    ecx,DWORD PTR [ecx]
  408718:	and    ebx,ecx
  40871a:	pop    es
  40871b:	and    ebx,0x941e7a52
  408721:	cmp    ebx,eax
  408723:	fs xchg edx,eax
  408725:	shl    BYTE PTR [ebp+0x57deaf28],cl
  40872b:	add    esp,DWORD PTR [edx+0x5f84998]
  408731:	stos   DWORD PTR es:[edi],eax
  408732:	jl     0x4086cb
  408734:	(bad)  
  408735:	push   DWORD PTR [ebx]
  408737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408738:	popw   es
  40873a:	call   0xd364:0x824fdb45
  408741:	push   edi
  408742:	and    BYTE PTR [ecx+0x31bb9f78],dl
  408748:	scas   al,BYTE PTR es:[edi]
  408749:	push   esp
  40874a:	cmp    ecx,DWORD PTR [ebp-0x68]
  40874d:	add    dl,al
  40874f:	push   esi
  408750:	ins    DWORD PTR es:[edi],dx
  408751:	sar    BYTE PTR [ebp-0x2],cl
  408754:	ja     0x40870c
  408756:	dec    eax
  408757:	ret    
  408758:	jbe    0x4087a9
  40875a:	push   0xffffffed
  40875c:	or     BYTE PTR [ebx+0x546cd413],dh
  408762:	add    BYTE PTR [eax-0x6758bc4c],ah
  408768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408769:	(bad)  
  40876b:	lods   al,BYTE PTR ds:[esi]
  40876c:	and    DWORD PTR ds:0x4aaede19,eax
  408772:	fiadd  DWORD PTR [ebp+0x53]
  408775:	mov    ebp,0x4484e0c9
  40877a:	cmp    eax,0x90b9c517
  40877f:	fdivr  DWORD PTR [ebp-0x1a699c25]
  408785:	(bad)  
  408786:	int3   
  408787:	pop    edi
  408788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408789:	pop    eax
  40878a:	and    DWORD PTR [eax],esi
  40878c:	inc    eax
  40878d:	pop    edi
  40878e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408790:	sub    eax,0xb7341f0e
  408795:	mov    ch,0x85
  408797:	sub    BYTE PTR [esi],dh
  408799:	aad    0xd1
  40879b:	aas    
  40879c:	lods   al,BYTE PTR ds:[esi]
  40879d:	jbe    0x4087a3
  40879f:	sti    
  4087a0:	iret   
  4087a1:	xor    ah,BYTE PTR [eax-0x49]
  4087a4:	lds    ebp,FWORD PTR [ecx+0x1c]
  4087a7:	adc    esi,ebp
  4087a9:	xor    edi,DWORD PTR [eax+0x54]
  4087ac:	adc    eax,0x624a0cbd
  4087b1:	clc    
  4087b2:	je     0x40875a
  4087b4:	bound  edi,QWORD PTR [edx-0x42bab661]
  4087ba:	or     eax,0x44b37c74
  4087bf:	icebp  
  4087c0:	mov    ch,0x96
  4087c2:	aam    0xf8
  4087c4:	mov    al,ds:0x92c1a477
  4087c9:	inc    edi
  4087ca:	mov    bl,0xbc
  4087cc:	dec    esp
  4087cd:	cmp    DWORD PTR [esi-0xf],0x929b5eb8
  4087d4:	xchg   edi,eax
  4087d5:	mov    esi,0x37379eaa
  4087da:	jl     0x408802
  4087dc:	rol    BYTE PTR [esi-0x7d],1
  4087df:	and    edi,edi
  4087e1:	lock lock xchg ebx,eax
  4087e4:	(bad)  
  4087e5:	popa   
  4087e6:	cmp    eax,esp
  4087e8:	or     al,0xcd
  4087ea:	call   0xf5d44166
  4087ef:	adc    ah,0x49
  4087f2:	cwde   
  4087f3:	pop    edi
  4087f4:	hlt    
  4087f5:	retf   0x4db6
  4087f8:	xor    eax,0x60f7881c
  4087fd:	popf   
  4087fe:	cdq    
  4087ff:	dec    ebp
  408800:	push   0xb32ba9ed
  408805:	inc    ebp
  408806:	dec    ebp
  408807:	xchg   ecx,eax
  408808:	imul   DWORD PTR [esi+0x483d575]
  40880e:	fneni(8087 only) 
  408810:	push   ebx
  408811:	mov    ebx,ds
  408813:	retf   0x7716
  408816:	or     bh,cl
  408818:	dec    BYTE PTR [ecx-0x5aa55c28]
  40881e:	or     ecx,0x1a72b752
  408824:	iret   
  408825:	test   BYTE PTR [ebp-0x4],ah
  408828:	xlat   BYTE PTR ds:[ebx]
  408829:	ds cmp esp,esi
  40882c:	jp     0x40882f
  40882e:	int3   
  40882f:	pop    edi
  408830:	push   eax
  408831:	hlt    
  408832:	shl    BYTE PTR [eax+0x51b96db4],1
  408838:	in     eax,0x53
  40883a:	pop    esi
  40883b:	clc    
  40883c:	add    BYTE PTR [ebx],ah
  40883e:	ja     0x4088bd
  408840:	ins    DWORD PTR es:[edi],dx
  408841:	retf   
  408842:	jmp    FWORD PTR [esi+eiz*4]
  408845:	inc    edx
  408846:	ins    BYTE PTR es:[edi],dx
  408847:	mov    bh,0x84
  408849:	push   edi
  40884a:	adc    eax,0x59109f03
  40884f:	cmp    BYTE PTR [ebp+ebp*2+0x26e1d04f],al
  408856:	icebp  
  408857:	lea    esi,[edx+0xb]
  40885a:	lds    esp,FWORD PTR [eax-0x3c099423]
  408860:	xchg   DWORD PTR [edi+0x510d7b80],esp
  408866:	out    0xdb,eax
  408868:	cwde   
  408869:	(bad)  
  40886a:	sti    
  40886b:	push   ebp
  40886c:	xor    esi,DWORD PTR [ebx+0x22]
  40886f:	je     0x40885f
  408871:	adc    bh,0xd9
  408874:	jp     0x408861
  408876:	push   es
  408877:	in     eax,dx
  408878:	fcom   DWORD PTR [eax+esi*2]
  40887b:	(bad)  
  40887c:	bound  esi,QWORD PTR [edi]
  40887e:	fbstp  TBYTE PTR [esi]
  408880:	daa    
  408881:	pop    es
  408882:	adc    bl,BYTE PTR [ebp-0x54e7060c]
  408888:	pusha  
  408889:	inc    ebx
  40888a:	sub    eax,DWORD PTR [ebx+0x1e93fa32]
  408890:	shl    BYTE PTR [eax],0x54
  408893:	loope  0x4088fa
  408895:	imul   edx,DWORD PTR [edi+0x18],0xffffff90
  408899:	adc    al,0x33
  40889b:	into   
  40889c:	xchg   edi,eax
  40889d:	mov    bl,0xda
  40889f:	xor    DWORD PTR [edi+0x36d174c3],edi
  4088a5:	pop    edi
  4088a6:	pop    ss
  4088a7:	fbld   TBYTE PTR [eax]
  4088a9:	push   ds
  4088aa:	jns    0x408838
  4088ac:	mov    fs,edi
  4088ae:	cdq    
  4088af:	(bad)  
  4088b0:	jecxz  0x4088bb
  4088b2:	xchg   edx,eax
  4088b3:	or     BYTE PTR [eax+0x74eb4ac6],dl
  4088b9:	add    ebx,edx
  4088bb:	pop    es
  4088bc:	jbe    0x408903
  4088be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c0:	cld    
  4088c1:	sti    
  4088c2:	rcr    WORD PTR [ebp+0xb],1
  4088c6:	ins    BYTE PTR es:[edi],dx
  4088c7:	bound  ecx,QWORD PTR [edi+eax*1]
  4088ca:	repz jnp 0x408855
  4088cd:	xchg   edx,eax
  4088ce:	lods   al,BYTE PTR ds:[esi]
  4088cf:	ins    DWORD PTR es:[edi],dx
  4088d0:	arpl   WORD PTR [ecx+0x5c],sp
  4088d3:	scas   al,BYTE PTR es:[edi]
  4088d4:	xor    al,0x1
  4088d6:	inc    edi
  4088d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088d8:	cwde   
  4088d9:	inc    esi
  4088da:	shl    BYTE PTR fs:[edx],cl
  4088dd:	dec    esi
  4088de:	aam    0xd
  4088e0:	lea    eax,[eax]
  4088e2:	mov    al,ds:0xd2f515bc
  4088e7:	sbb    ebp,edi
  4088e9:	ret    0xfef7
  4088ec:	jmp    0xedd53198
  4088f1:	add    edi,DWORD PTR [esp+edi*1]
  4088f4:	and    DWORD PTR [eax+eax*4+0x5ce8e291],0x3f2be3a3
  4088ff:	push   ss
  408900:	sar    BYTE PTR [ebp+0x1c],1
  408903:	ja     0x40896d
  408905:	outs   dx,BYTE PTR ds:[esi]
  408906:	xor    eax,0x7e3d409f
  40890b:	in     eax,0x81
  40890d:	jl     0x408988
  40890f:	adc    eax,0xb3030ae1
  408914:	ror    BYTE PTR [esi],1
  408916:	(bad)  [edi-0x80]
  408919:	lds    esi,FWORD PTR [ecx+0x74e3f778]
  40891f:	scas   al,BYTE PTR es:[edi]
  408920:	and    eax,0xe4ea640b
  408925:	add    dh,BYTE PTR [esi]
  408927:	fcmovbe st,st(5)
  408929:	addr16 out 0xf7,eax
  40892c:	xor    edx,esi
  40892e:	cmp    BYTE PTR [edx-0x7bde3431],0xf5
  408935:	inc    esp
  408936:	push   0x2954f0e1
  40893b:	lock cmp ebp,edx
  40893e:	pop    ds
  40893f:	shl    BYTE PTR [ebx+0x731ca69f],0xfc
  408946:	jo     0x408995
  408948:	mov    ?,WORD PTR [eax-0x3e2c7cd6]
  40894e:	aaa    
  40894f:	(bad)  
  408950:	pushf  
  408951:	adc    dl,bl
  408953:	push   0x45df03f2
  408958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408959:	aad    0xe5
  40895b:	nop
  40895c:	and    BYTE PTR [ecx+edi*1-0x69],dl
  408960:	add    bl,BYTE PTR [esi+0x932e191]
  408966:	jbe    0x40898a
  408968:	push   ss
  408969:	sbb    BYTE PTR [edx+0x7be50e68],0xcc
  408970:	jmp    0x922c:0x9583870c
  408977:	pop    esp
  408978:	shl    DWORD PTR [eax-0x69067eef],cl
  40897e:	mov    eax,0x52f4cc61
  408983:	leave  
  408984:	push   edi
  408985:	ins    DWORD PTR es:[edi],dx
  408986:	sub    al,dh
  408988:	stos   BYTE PTR es:[edi],al
  408989:	shl    BYTE PTR es:[ecx-0x158d7b21],1
  408990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408991:	inc    edi
  408992:	call   0xaf1f:0xb79b4518
  408999:	xchg   ebx,eax
  40899a:	add    al,0xf4
  40899c:	sahf   
  40899d:	dec    edx
  40899e:	popa   
  40899f:	xchg   BYTE PTR [ecx+esi*8],dh
  4089a2:	imul   ebp,DWORD PTR [eax],0x6a
  4089a5:	sar    BYTE PTR [edi],1
  4089a7:	cmp    DWORD PTR [ebp-0x40b840e4],esi
  4089ad:	jecxz  0x408983
  4089af:	jbe    0x408931
  4089b1:	sahf   
  4089b2:	pop    ds
  4089b3:	int    0x3a
  4089b5:	mov    dl,0x8c
  4089b7:	inc    eax
  4089b8:	in     al,dx
  4089b9:	in     eax,dx
  4089ba:	inc    ax
  4089bc:	jbe    0x4089bc
  4089be:	ret    
  4089bf:	inc    ecx
  4089c0:	ins    BYTE PTR es:[edi],dx
  4089c1:	or     edx,0xcaf659ed
  4089c7:	jns    0x4089c2
  4089c9:	jno    0x408a36
  4089cb:	mov    ah,0x54
  4089cd:	ins    DWORD PTR es:[edi],dx
  4089ce:	das    
  4089cf:	mov    dh,0x3f
  4089d1:	ret    
  4089d2:	sahf   
  4089d3:	or     eax,ebp
  4089d5:	mov    ecx,0x53204cb1
  4089da:	daa    
  4089db:	xor    ch,BYTE PTR [eax+0x38]
  4089de:	ds push 0xeea01244
  4089e4:	retf   0xd9ec
  4089e7:	cmp    BYTE PTR [ebp+0x1b],dh
  4089ea:	mov    eax,ds:0xdecaebd3
  4089ef:	fisub  WORD PTR [ecx+0x63]
  4089f2:	xchg   esp,eax
  4089f3:	jns    0x408a4b
  4089f5:	popa   
  4089f6:	jno    0x4089af
  4089f8:	jne    0x4089b2
  4089fa:	push   esp
  4089fb:	mov    eax,ds:0xd7e3f0e
  408a00:	call   0x9fa7ae1f
  408a05:	cld    
  408a06:	sbb    eax,0xfdea9458
  408a0b:	icebp  
  408a0c:	push   es
  408a0d:	cli    
  408a0e:	cmp    DWORD PTR [ecx-0x7c],esi
  408a11:	and    eax,0x1bfb52b9
  408a16:	js     0x408a43
  408a18:	lock sub dh,bh
  408a1b:	jle    0x408a0f
  408a1d:	fld    st(1)
  408a1f:	cdq    
  408a20:	fwait
  408a21:	adc    DWORD PTR [esi+0x72d990b9],eax
  408a27:	(bad)  
  408a28:	hlt    
  408a29:	cdq    
  408a2a:	mov    ebx,DWORD PTR [edi+0x6b]
  408a2d:	cdq    
  408a2e:	pop    ss
  408a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a30:	(bad)  
  408a32:	lds    eax,FWORD PTR [esi-0x19]
  408a35:	push   es
  408a36:	in     eax,0x96
  408a38:	popf   
  408a39:	xlat   BYTE PTR ds:[ebx]
  408a3a:	dec    eax
  408a3b:	push   ebx
  408a3c:	sub    edi,DWORD PTR [eax-0x4fb2bd8d]
  408a42:	push   ebx
  408a43:	inc    esp
  408a44:	mov    edi,0x98ac2e8
  408a49:	xor    al,0xcb
  408a4b:	or     dl,BYTE PTR [ecx+ebx*1-0x27]
  408a4f:	push   ecx
  408a50:	sbb    esp,DWORD PTR [edi]
  408a52:	icebp  
  408a53:	jo     0x408a36
  408a55:	mov    ch,0x86
  408a57:	push   eax
  408a58:	pop    esi
  408a59:	lock sahf 
  408a5b:	jae    0x408a7a
  408a5d:	dec    eax
  408a5e:	push   eax
  408a5f:	inc    ebx
  408a60:	cmc    
  408a61:	xlat   BYTE PTR ds:[ebx]
  408a62:	sahf   
  408a63:	cmc    
  408a64:	das    
  408a65:	jno    0x408a73
  408a67:	pop    ebp
  408a68:	cmp    al,0x3b
  408a6a:	stc    
  408a6b:	inc    ebx
  408a6c:	xchg   edx,eax
  408a6d:	push   ebp
  408a6e:	imul   ebp,DWORD PTR [ebx+0x6d451a50],0xcfb77182
  408a78:	inc    ecx
  408a79:	pop    edi
  408a7a:	xchg   ecx,eax
  408a7b:	int3   
  408a7c:	popa   
  408a7d:	mov    esi,0x542682d4
  408a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a83:	mov    bh,0x6b
  408a85:	std    
  408a86:	add    esp,0x14
  408a89:	dec    ecx
  408a8a:	(bad)  [ebx-0x7a]
  408a8d:	dec    edi
  408a8e:	call   0xb88fcd84
  408a93:	dec    esp
  408a94:	pop    ds
  408a95:	out    0x31,eax
  408a97:	pop    ebp
  408a98:	js     0x408ab5
  408a9a:	pusha  
  408a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9c:	dec    ebp
  408a9d:	mov    dl,0xc3
  408a9f:	mov    edx,ecx
  408aa1:	jb     0x408a97
  408aa3:	aam    0x9e
  408aa5:	popf   
  408aa6:	mov    esp,0x42d4d884
  408aab:	out    dx,eax
  408aac:	dec    edx
  408aad:	popa   
  408aae:	xor    DWORD PTR [ebx+0x27e08144],ebx
  408ab4:	dec    esp
  408ab5:	wrmsr  
  408ab7:	ffreep st(2)
  408ab9:	push   ebx
  408aba:	push   edx
  408abb:	pop    ecx
  408abc:	push   eax
  408abd:	(bad)  
  408abe:	mov    dl,0x1a
  408ac0:	push   esi
  408ac1:	dec    dh
  408ac3:	cli    
  408ac4:	fisttp WORD PTR [esi]
  408ac6:	rol    BYTE PTR [ebx+0x7a],1
  408ac9:	mov    eax,ds:0xc53e3a15
  408ace:	lds    esp,FWORD PTR [eax-0x3bdf7c05]
  408ad4:	pushf  
  408ad5:	dec    esp
  408ad6:	mov    ch,0xe6
  408ad8:	popa   
  408ad9:	jb     0x408a95
  408adb:	lea    esp,[edx]
  408add:	out    dx,eax
  408ade:	push   ebp
  408adf:	outs   dx,DWORD PTR ds:[esi]
  408ae0:	xor    eax,0x3aac0869
  408ae5:	push   esp
  408ae6:	or     DWORD PTR [eax+0x6a03a1bb],edi
  408aec:	push   edx
  408aed:	je     0x408aa9
  408aef:	aaa    
  408af0:	xchg   edx,eax
  408af1:	sub    DWORD PTR [eax],esi
  408af3:	jns    0x408aea
  408af5:	(bad)  
  408af6:	dec    ebx
  408af7:	(bad)  
  408af8:	call   0x227d967f
  408afd:	pop    ecx
  408afe:	push   edx
  408aff:	aaa    
  408b00:	pop    esp
  408b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b02:	pop    ecx
  408b03:	clc    
  408b04:	inc    esp
  408b05:	pop    esp
  408b06:	out    dx,al
  408b07:	bound  esi,QWORD PTR [ecx+eax*8]
  408b0a:	rcr    BYTE PTR [edi],1
  408b0c:	mov    cl,0xe6
  408b0e:	push   0xe44bf6c7
  408b13:	jle    0x408a9a
  408b15:	mov    eax,0x19a60b5e
  408b1a:	sub    al,0x67
  408b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b1d:	out    dx,eax
  408b1e:	in     al,0x5f
  408b20:	ss dec esp
  408b22:	or     al,0x4d
  408b24:	mov    edi,0x4a2dda3b
  408b29:	cmp    dl,BYTE PTR [eax]
  408b2b:	out    dx,al
  408b2c:	(bad)  
  408b2e:	rcl    ecx,0xac
  408b31:	adc    al,0x51
  408b33:	inc    esi
  408b34:	mov    cl,0xe8
  408b36:	rcr    edi,1
  408b38:	mov    esi,0x41161576
  408b3d:	ret    0xd479
  408b40:	out    0x9b,eax
  408b42:	push   ebx
  408b43:	fstp   TBYTE PTR [ebp-0x12]
  408b46:	(bad)  
  408b47:	(bad)  
  408b48:	fcmovb st,st(2)
  408b4a:	inc    esi
  408b4b:	loopne 0x408b1f
  408b4d:	in     al,dx
  408b4e:	sub    edi,0xa42890a0
  408b54:	aaa    
  408b55:	sbb    ch,BYTE PTR [edx-0x18]
  408b58:	jo     0x408b9d
  408b5a:	mov    cl,bl
  408b5c:	and    al,BYTE PTR [edx]
  408b5e:	and    BYTE PTR [ebx+ebp*1+0x3c],bh
  408b62:	cli    
  408b63:	dec    eax
  408b64:	rol    DWORD PTR [ecx],cl
  408b66:	fcomp  DWORD PTR [edi-0x1749c8fe]
  408b6c:	out    0x5c,al
  408b6e:	jg     0x408b44
  408b70:	ror    BYTE PTR ds:0xdcea39dc,1
  408b76:	shl    BYTE PTR [ebx-0x6efe09d5],1
  408b7c:	or     BYTE PTR [eax+0x2f794c74],ah
  408b82:	bound  ecx,QWORD PTR [esi]
  408b84:	lods   al,BYTE PTR ds:[esi]
  408b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b86:	addr16 pop ss
  408b88:	imul   ebp,esp,0x458c686d
  408b8e:	mov    bh,0x1
  408b90:	dec    esi
  408b91:	pop    ss
  408b92:	into   
  408b93:	add    eax,0x98b676bd
  408b98:	retf   
  408b99:	fisttp WORD PTR [esi+0x3c]
  408b9c:	call   0x8fd4673b
  408ba1:	push   0xf676f6b5
  408ba6:	sub    dl,BYTE PTR [ebp+0x3451ed55]
  408bac:	call   0xa642a17a
  408bb1:	and    bh,BYTE PTR [eax-0x3a76e78f]
  408bb7:	ret    0xeb77
  408bba:	fld    DWORD PTR [edx]
  408bbc:	mov    ebp,0x777d509f
  408bc1:	fisttp DWORD PTR [eax+0x318fc301]
  408bc7:	shr    DWORD PTR [eax+0x793c0c50],0x72
  408bce:	dec    esp
  408bcf:	cmc    
  408bd0:	dec    edx
  408bd1:	stos   BYTE PTR es:[edi],al
  408bd2:	mov    WORD PTR [ebx+0x45],?
  408bd5:	cld    
  408bd6:	test   al,0x19
  408bd8:	pop    eax
  408bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bda:	call   0xefba:0x69633092
  408be1:	test   DWORD PTR [ebx*4+0x3fc0343e],esp
  408be8:	je     0x408c03
  408bea:	sub    esp,DWORD PTR [ecx]
  408bec:	cdq    
  408bed:	int3   
  408bee:	sahf   
  408bef:	test   eax,0xd3898945
  408bf4:	inc    edi
  408bf5:	popa   
  408bf6:	pop    ecx
  408bf7:	lods   eax,DWORD PTR ds:[si]
  408bf9:	loop   0x408bdb
  408bfb:	and    eax,0xb054f632
  408c00:	jmp    0x408bd8
  408c02:	retf   
  408c03:	mov    bh,0x58
  408c05:	(bad)  
  408c06:	out    dx,al
  408c07:	fimul  DWORD PTR [ebx-0x5d5b88c4]
  408c0d:	dec    edi
  408c0e:	mov    esi,0xb07090c0
  408c13:	push   esi
  408c14:	fbstp  TBYTE PTR [eax-0x40]
  408c17:	dec    esp
  408c18:	rcr    DWORD PTR [edi],cl
  408c1a:	div    DWORD PTR [ebp-0x2]
  408c1d:	loopne 0x408c35
  408c1f:	outs   dx,BYTE PTR ds:[esi]
  408c20:	cmp    ebx,esp
  408c22:	jge    0x408c4c
  408c24:	popf   
  408c25:	into   
  408c26:	inc    ebx
  408c27:	ret    
  408c28:	dec    edi
  408c29:	(bad)  
  408c2b:	(bad)  
  408c2c:	xor    BYTE PTR [esi+0x40ca28e4],dh
  408c32:	cdq    
  408c33:	neg    BYTE PTR [edx+0x6b34d335]
  408c39:	jmp    0x557d569b
  408c3e:	add    al,0x81
  408c40:	mov    edi,0x581ac882
  408c45:	sbb    eax,0xfa706195
  408c4a:	push   ds
  408c4b:	stc    
  408c4c:	add    BYTE PTR [ecx+0x39],al
  408c4f:	xor    bl,BYTE PTR fs:[ebx+0x10]
  408c53:	lahf   
  408c54:	mov    ds:0x2b0d8f38,eax
  408c59:	push   esi
  408c5a:	dec    eax
  408c5b:	dec    edi
  408c5c:	(bad)  
  408c5f:	xchg   ebx,eax
  408c60:	and    ch,BYTE PTR [edi+0x19]
  408c63:	out    dx,al
  408c64:	dec    edx
  408c65:	ds cmc 
  408c67:	xchg   edi,eax
  408c68:	repz jno 0x408c66
  408c6b:	imul   esi,DWORD PTR [ecx-0x77bc055b],0xffffffc2
  408c72:	pop    ebp
  408c73:	and    al,al
  408c75:	or     esi,DWORD PTR ds:0x53b938f5
  408c7b:	pop    esp
  408c7c:	punpckhdq mm7,QWORD PTR [esi-0xdc9af62]
  408c83:	add    DWORD PTR [esi],edx
  408c85:	test   eax,0xf13336ce
  408c8a:	loope  0x408c16
  408c8c:	clc    
  408c8d:	pop    ebp
  408c8e:	pop    ds
  408c8f:	mov    al,0x3c
  408c91:	and    al,0xa3
  408c93:	(bad)  
  408c95:	mov    dl,0xb1
  408c97:	cmp    eax,DWORD PTR [edi+0xaa2a174]
  408c9d:	pop    eax
  408c9e:	repnz sub esp,DWORD PTR ds:0xdfbbe7c1
  408ca5:	jb     0x408c67
  408ca7:	(bad)  
  408ca8:	cmc    
  408ca9:	adc    edi,esi
  408cab:	(bad)
  408caf:	outs   dx,DWORD PTR ds:[esi]
  408cb0:	and    bh,dl
  408cb2:	lds    esp,FWORD PTR [eax]
  408cb4:	push   edx
  408cb5:	dec    ebx
  408cb6:	jl     0x408ccf
  408cb8:	inc    esp
  408cb9:	xchg   DWORD PTR [edx-0x9],esi
  408cbc:	dec    ebp
  408cbd:	retf   0x3726
  408cc0:	and    edi,DWORD PTR [ebx+0x447e00ce]
  408cc6:	das    
  408cc7:	mov    ecx,0x88ebfd3
  408ccc:	test   DWORD PTR [edi-0x17],0xe94e1a27
  408cd3:	div    BYTE PTR [esi-0x5351f25a]
  408cd9:	pop    es
  408cda:	pop    ebx
  408cdb:	fstp   st(7)
  408cdd:	mov    edi,0x8671110d
  408ce2:	jmp    0xda8b:0xbba5e730
  408ce9:	dec    esp
  408cea:	pop    esp
  408ceb:	sbb    DWORD PTR ds:[esi],esi
  408cee:	jnp    0x408d02
  408cf0:	clc    
  408cf1:	call   0x244f:0xb04f9661
  408cf8:	call   0x880e:0xdc0c3569
  408cff:	add    dl,ch
  408d01:	data16 jl 0x408cb7
  408d04:	lahf   
  408d05:	xlat   BYTE PTR ds:[ebx]
  408d06:	daa    
  408d07:	push   ss
  408d08:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408d0a:	rcr    al,cl
  408d0c:	or     DWORD PTR [esp+edx*2+0x72],edx
  408d10:	cmp    DWORD PTR [eax],ecx
  408d12:	push   ecx
  408d13:	arpl   WORD PTR [ecx+esi*2-0x392ccc2e],sp
  408d1a:	(bad)  
  408d1c:	ja     0x408d4d
  408d1e:	loope  0x408d4e
  408d20:	ror    DWORD PTR [edx],1
  408d22:	stc    
  408d23:	in     eax,0xb5
  408d25:	fisttp DWORD PTR [edx-0x61c77]
  408d2b:	xchg   DWORD PTR [ebx+edx*2],edx
  408d2e:	xor    DWORD PTR [edx],edi
  408d30:	mov    bl,0x6b
  408d32:	cwde   
  408d33:	nop
  408d34:	enter  0x4ca7,0xd4
  408d38:	(bad)  
  408d39:	xor    eax,0x841e7837
  408d3e:	or     bh,BYTE PTR [ecx+ecx*1+0x2b]
  408d42:	fisttp WORD PTR [ecx-0x5b]
  408d45:	outs   dx,BYTE PTR ds:[esi]
  408d46:	add    al,BYTE PTR [edx]
  408d48:	push   0x19
  408d4a:	es push ebx
  408d4c:	addr16 jne 0x408d3c
  408d4f:	in     al,dx
  408d50:	and    BYTE PTR [esi-0x5d9aa4c8],bl
  408d56:	mov    bh,0x14
  408d58:	fisttp QWORD PTR [ebx-0x3f19b828]
  408d5e:	in     al,dx
  408d5f:	aaa    
  408d60:	push   cs
  408d61:	xchg   edx,eax
  408d62:	out    dx,eax
  408d63:	mov    dl,0xd5
  408d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d66:	jl     0x408d9b
  408d68:	inc    edx
  408d69:	pop    edx
  408d6a:	mov    esp,0xbee0477e
  408d6f:	lods   eax,DWORD PTR ds:[esi]
  408d70:	jp     0x408d99
  408d72:	xchg   BYTE PTR [ebp-0x245533b0],cl
  408d78:	inc    esi
  408d79:	scas   al,BYTE PTR es:[edi]
  408d7a:	cmp    BYTE PTR [esi+esi*8],bh
  408d7d:	std    
  408d7e:	add    esi,edx
  408d80:	inc    esi
  408d81:	mov    ebx,0xa26ffdd
  408d86:	in     al,0x6f
  408d88:	test   DWORD PTR [ebx-0x36cbc0b0],0x83cf42f2
  408d92:	addr16 mov edi,0xdb6fb15a
  408d98:	cmp    eax,0x8ee1557b
  408d9d:	mov    ch,0x64
  408d9f:	cmc    
  408da0:	das    
  408da1:	pop    ecx
  408da2:	jne    0x408db7
  408da4:	and    eax,0x9d49d3c1
  408da9:	sbb    ah,BYTE PTR ds:0xfe1466ff
  408daf:	sub    eax,DWORD PTR [ebx]
  408db1:	fst    QWORD PTR [edi-0x21]
  408db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db5:	xchg   esi,eax
  408db6:	aas    
  408db7:	or     DWORD PTR [ecx+eax*4],0xc27661a6
  408dbe:	out    dx,eax
  408dbf:	dec    esi
  408dc0:	inc    esi
  408dc1:	lahf   
  408dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc3:	xlat   BYTE PTR ds:[ebx]
  408dc4:	push   eax
  408dc5:	cmp    DWORD PTR [eax+0x52],edi
  408dc8:	and    DWORD PTR [edx],0x31
  408dcb:	push   es
  408dcc:	add    ebp,esi
  408dce:	sbb    ecx,DWORD PTR [ebp-0x407bfd0d]
  408dd4:	adc    ch,BYTE PTR [ebp+0xe]
  408dd7:	fs inc ebx
  408dd9:	cmp    eax,edi
  408ddb:	xlat   BYTE PTR ds:[ebx]
  408ddc:	dec    edx
  408ddd:	lea    ecx,[eax+ebp*1+0x22]
  408de1:	aas    
  408de2:	xlat   BYTE PTR ds:[ebx]
  408de3:	adc    esi,DWORD PTR [ebx+ebp*8-0x65900541]
  408dea:	dec    ebx
  408deb:	xchg   ch,dh
  408ded:	adc    ecx,ebx
  408def:	jmp    0x759a8558
  408df4:	fsubr  QWORD PTR ds:0x73eaa927
  408dfa:	pop    eax
  408dfb:	fs adc al,0xad
  408dfe:	ss adc eax,0x291a49c9
  408e04:	pop    edi
  408e05:	adc    al,0x94
  408e07:	into   
  408e08:	fdiv   QWORD PTR [edi-0x46fabe4]
  408e0e:	sbb    DWORD PTR [eax-0x29],0x7c
  408e12:	mov    eax,0xa79a37eb
  408e17:	int    0xf0
  408e19:	outs   dx,BYTE PTR ds:[esi]
  408e1a:	push   ds
  408e1b:	iret   
  408e1c:	int    0x22
  408e1e:	(bad)  
  408e1f:	xchg   ebp,eax
  408e20:	test   DWORD PTR [ebx],ebx
  408e22:	repz cmp al,cl
  408e25:	sti    
  408e26:	cs ins BYTE PTR es:[edi],dx
  408e28:	cmp    al,0xd5
  408e2a:	mov    edi,0x36bf8c30
  408e2f:	fidiv  WORD PTR [edx-0x36]
  408e32:	adc    edi,DWORD PTR [ebx+0x68c8cf0]
  408e38:	leave  
  408e39:	mov    eax,0x5cfc645b
  408e3e:	push   esi
  408e3f:	xor    BYTE PTR [ecx+0x59],0xb3
  408e43:	mov    bl,0xd6
  408e45:	xor    DWORD PTR [esi+0x4ecb4a30],edi
  408e4b:	cld    
  408e4c:	sub    al,ah
  408e4e:	push   0xba113510
  408e53:	and    ecx,edi
  408e55:	(bad)  
  408e56:	mov    ?,esp
  408e58:	ret    
  408e59:	into   
  408e5a:	cwde   
  408e5b:	hlt    
  408e5c:	aaa    
  408e5d:	pusha  
  408e5e:	icebp  
  408e5f:	stos   DWORD PTR es:[edi],eax
  408e60:	cmp    eax,0xc052e90
  408e65:	call   0xc562d883
  408e6a:	sahf   
  408e6b:	aad    0x1a
  408e6d:	mov    esi,0x23bb45ee
  408e72:	stc    
  408e73:	in     eax,dx
  408e74:	pop    ds
  408e75:	aam    0x3d
  408e77:	cmp    DWORD PTR [eax],ebp
  408e79:	dec    edx
  408e7a:	mov    al,ds:0x17768640
  408e7f:	test   eax,0xce4a0e18
  408e84:	push   eax
  408e85:	xor    ch,BYTE PTR [edx]
  408e87:	sub    bh,BYTE PTR [ecx+0x48]
  408e8a:	ds out dx,eax
  408e8c:	xor    esp,esp
  408e8e:	sbb    al,0x34
  408e90:	or     BYTE PTR [esi],ah
  408e92:	mov    al,ds:0xeda3bc46
  408e97:	test   al,0x45
  408e99:	push   esi
  408e9a:	in     eax,dx
  408e9b:	ins    DWORD PTR es:[edi],dx
  408e9c:	xchg   ebx,eax
  408e9d:	ror    BYTE PTR [ecx-0x68],cl
  408ea0:	push   es
  408ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ea2:	lods   eax,DWORD PTR ds:[esi]
  408ea3:	sbb    al,0x98
  408ea5:	dec    edi
  408ea6:	aas    
  408ea7:	aad    0xdf
  408ea9:	pop    esi
  408eaa:	cmc    
  408eab:	ja     0x408e40
  408ead:	mov    ecx,DWORD PTR [ebx-0x7932b051]
  408eb3:	jae    0x408f17
  408eb5:	sub    DWORD PTR [edx+0x202f2849],ebx
  408ebb:	rol    BYTE PTR [ebp-0x701a72e8],0xd1
  408ec2:	fidivr WORD PTR [ebx-0x4f0d0b8d]
  408ec8:	push   eax
  408ec9:	pushw  0x447b
  408ecd:	mov    DWORD PTR [esi],edi
  408ecf:	sub    ah,BYTE PTR [ecx+0x53]
  408ed2:	cmp    al,0xe9
  408ed4:	sti    
  408ed5:	sub    cl,dl
  408ed7:	inc    edi
  408ed8:	data16 aam 0x6c
  408edb:	(bad)  
  408edc:	sub    al,BYTE PTR [edx-0x7099a60c]
  408ee2:	out    dx,al
  408ee3:	inc    ecx
  408ee4:	fdivr  DWORD PTR [eax-0x6d]
  408ee7:	xchg   esi,eax
  408ee8:	push   edx
  408ee9:	retf   0x64f0
  408eec:	sbb    ch,BYTE PTR [edi-0x617e26f5]
  408ef2:	inc    eax
  408ef3:	outs   dx,DWORD PTR ds:[esi]
  408ef4:	jbe    0x408f2e
  408ef6:	call   0xb6d7:0x199b8752
  408efd:	xlat   BYTE PTR ds:[ebx]
  408efe:	mov    eax,0xb9cf1ac
  408f03:	bound  ecx,QWORD PTR [edi]
  408f05:	test   al,0xf8
  408f07:	mov    ebp,0x5e2328a8
  408f0c:	inc    edx
  408f0d:	(bad)  
  408f0e:	outs   dx,BYTE PTR ds:[esi]
  408f0f:	ss add al,0x94
  408f12:	xchg   BYTE PTR [edx],cl
  408f14:	sahf   
  408f15:	loopne 0x408ec9
  408f17:	push   eax
  408f18:	sub    ah,dh
  408f1a:	dec    ebp
  408f1b:	dec    edi
  408f1c:	pop    esi
  408f1d:	cmp    al,0x3f
  408f1f:	arpl   bp,si
  408f21:	jle    0x408f73
  408f23:	adc    eax,0x27bddb1a
  408f28:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408f2a:	xchg   esi,eax
  408f2b:	mov    ah,0x3d
  408f2d:	jp     0x408f4a
  408f2f:	arpl   WORD PTR ds:0xa7cb0784,di
  408f35:	pusha  
  408f36:	nop/reserved BYTE PTR [ecx]
  408f39:	jne    0x408efe
  408f3b:	add    DWORD PTR [esi+0x7eec6244],edi
  408f41:	inc    esi
  408f42:	push   eax
  408f43:	retf   
  408f44:	mov    esp,0x43b30bb7
  408f49:	inc    ecx
  408f4a:	gs adc eax,0xd9f5ad58
  408f50:	jnp    0x408f32
  408f52:	ds sub al,0xfb
  408f55:	mul    ah
  408f57:	imul   esi,esp,0x23979661
  408f5d:	outs   dx,DWORD PTR ds:[esi]
  408f5e:	cmc    
  408f5f:	sub    ecx,DWORD PTR [ebx+0x7a]
  408f62:	mov    bl,0x74
  408f64:	aam    0xfb
  408f66:	cmp    al,0x7f
  408f68:	idiv   cl
  408f6a:	xor    eax,0xd61e031c
  408f6f:	and    dh,BYTE PTR [ecx+0x6f90d927]
  408f75:	mov    al,ds:0x2d91a958
  408f7a:	adc    al,0x5b
  408f7c:	icebp  
  408f7d:	outs   dx,DWORD PTR ds:[esi]
  408f7e:	xchg   DWORD PTR [si-0x73],edx
  408f82:	sbb    al,BYTE PTR [edi+0x2a]
  408f85:	inc    eax
  408f86:	dec    edx
  408f87:	adc    eax,0x6ef238dd
  408f8c:	mov    dl,0x84
  408f8e:	imul   ebp,DWORD PTR [eax+0x73],0xbe5099cc
  408f95:	daa    
  408f96:	mov    ah,0x95
  408f98:	pusha  
  408f99:	mov    ds:0x9fceba3e,eax
  408f9e:	mov    al,0x4
  408fa0:	fmul   DWORD PTR [ebx]
  408fa2:	(bad)  [esi-0x38aa3c7d]
  408fa8:	add    eax,0x4c4357d3
  408fad:	push   ecx
  408fae:	lods   eax,DWORD PTR ds:[esi]
  408faf:	jl     0x408f48
  408fb1:	call   0x31e1a494
  408fb6:	js     0x408f6f
  408fb8:	dec    esp
  408fb9:	out    0x2c,eax
  408fbb:	mov    ebp,0xef4b622c
  408fc0:	jns    0x408f80
  408fc2:	pop    ecx
  408fc3:	ja     0x408fc8
  408fc5:	dec    eax
  408fc6:	jns    0x408fa4
  408fc8:	pushf  
  408fc9:	scas   eax,DWORD PTR es:[edi]
  408fca:	sub    eax,0x9ccac592
  408fcf:	(bad)  
  408fd0:	fsubp  st(7),st
  408fd2:	ret    0xcc90
  408fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fd6:	and    al,0x42
  408fd8:	sar    BYTE PTR [edi-0xfe30034],cl
  408fde:	fwait
  408fdf:	ins    BYTE PTR es:[edi],dx
  408fe0:	(bad)  
  408fe2:	xor    BYTE PTR [eax-0xeb5bdf1],ch
  408fe8:	sub    al,0x8e
  408fea:	mov    dh,0xdb
  408fec:	ds push esi
  408fee:	mov    cl,0xe7
  408ff0:	jnp    0x40902d
  408ff2:	jecxz  0x409027
  408ff4:	enter  0x8825,0xa
  408ff8:	xor    eax,0x84b83d55
  408ffd:	sbb    ah,BYTE PTR [esp+eiz*4]
  409000:	jle    0x408fb1
  409002:	inc    edi
  409003:	ja     0x409005
  409005:	adc    BYTE PTR [ebx-0x2c],dl
  409008:	push   ecx
  409009:	int3   
  40900a:	push   cs
  40900b:	in     eax,dx
  40900c:	inc    eax
  40900d:	dec    ecx
  40900e:	inc    eax
  40900f:	pusha  
  409010:	je     0x409050
  409012:	das    
  409013:	push   ebx
  409014:	mov    eax,0x8be09ca7
  409019:	adc    bl,dh
  40901b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40901c:	dec    esi
  40901d:	test   eax,0x642a65df
  409022:	popa   
  409023:	mov    edi,0x39ff121
  409028:	push   ss
  409029:	dec    ecx
  40902a:	arpl   WORD PTR [esi-0x256072e7],di
  409030:	push   ecx
  409031:	cld    
  409032:	retf   0x7d27
  409035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409036:	inc    eax
  409037:	in     eax,dx
  409038:	push   es
  409039:	loop   0x409021
  40903b:	les    esi,FWORD PTR [esp+eax*2]
  40903e:	inc    esp
  40903f:	push   eax
  409040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409041:	pop    ecx
  409042:	jg     0x4090b7
  409044:	das    
  409045:	mov    ecx,0x3ea8f40e
  40904a:	js     0x409097
  40904c:	cmp    al,0xac
  40904e:	test   DWORD PTR [ebx-0x1a],esp
  409051:	je     0x409074
  409053:	ret    
  409054:	pushf  
  409055:	aas    
  409056:	and    DWORD PTR [esi+esi*8],edi
  409059:	int3   
  40905a:	jmp    0x409006
  40905c:	sub    al,0x77
  40905e:	call   0xb143f2c5
  409063:	jmp    0x77757126
  409068:	sbb    BYTE PTR [eax],0xaf
  40906b:	mov    bh,0xc6
  40906d:	cdq    
  40906e:	add    esp,DWORD PTR [ecx-0x1009a126]
  409074:	pushf  
  409075:	test   al,0x48
  409077:	imul   esp,ebx,0xffffffac
  40907a:	push   ebp
  40907b:	jno    0x4090f3
  40907d:	and    al,0x9
  40907f:	lods   al,BYTE PTR ds:[esi]
  409080:	xchg   edi,eax
  409081:	mov    al,BYTE PTR [ecx]
  409083:	sahf   
  409084:	and    DWORD PTR [ebx+0x1ea2b8f6],ebx
  40908a:	mov    bh,0x54
  40908c:	rol    DWORD PTR [edx],0xe2
  40908f:	xor    esp,esi
  409091:	clc    
  409092:	test   DWORD PTR [ecx-0x37],eax
  409095:	xchg   edx,eax
  409096:	imul   ecx,eax,0x33
  409099:	in     eax,0x8a
  40909b:	sbb    eax,0x19
  40909e:	mov    ch,0xa6
  4090a0:	cli    
  4090a1:	xor    al,0x21
  4090a3:	push   es
  4090a4:	fist   WORD PTR ds:0x4a41430b
  4090aa:	loope  0x4090d1
  4090ac:	lea    eax,[eax+ecx*4+0x503319b]
  4090b3:	(bad)  
  4090b4:	rcl    BYTE PTR [eax+0x6],1
  4090b7:	adc    DWORD PTR [ebx-0x6655a80c],ebp
  4090bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090be:	outs   dx,BYTE PTR ds:[esi]
  4090bf:	into   
  4090c0:	pushf  
  4090c1:	mov    bl,ah
  4090c3:	ins    BYTE PTR es:[edi],dx
  4090c4:	add    eax,0x26b4ccdf
  4090c9:	scas   al,BYTE PTR es:[edi]
  4090ca:	push   ecx
  4090cb:	push   ds
  4090cc:	addr16 js 0x40911e
  4090cf:	aas    
  4090d0:	xchg   esp,eax
  4090d1:	and    ch,cl
  4090d3:	sub    ebx,DWORD PTR [eax+0x10338916]
  4090d9:	lods   al,BYTE PTR ds:[esi]
  4090da:	pop    ebp
  4090db:	fwait
  4090dc:	jne    0x40908f
  4090de:	inc    ebx
  4090df:	loopne 0x409076
  4090e1:	fnstsw WORD PTR [ecx-0x2c]
  4090e4:	maxps  xmm3,xmm6
  4090e7:	push   0x50
  4090e9:	ins    BYTE PTR es:[edi],dx
  4090ea:	or     al,0xb2
  4090ec:	scas   eax,DWORD PTR es:[edi]
  4090ed:	leave  
  4090ee:	dec    ebp
  4090ef:	mov    ecx,DWORD PTR [edi-0x39db3f89]
  4090f5:	aaa    
  4090f6:	adc    DWORD PTR [edx+eax*8+0x58],edi
  4090fa:	sbb    al,ch
  4090fc:	jmp    0xf9f55768
  409101:	push   ebx
  409102:	jbe    0x409169
  409104:	xor    al,0xfa
  409106:	jmp    0x12836655
  40910b:	dec    ebp
  40910c:	inc    eax
  40910d:	adc    ecx,DWORD PTR [edx+esi*2]
  409110:	push   edx
  409111:	out    dx,eax
  409112:	mov    ah,0x97
  409114:	xor    al,al
  409116:	jns    0x4090fa
  409118:	cmp    al,0x5a
  40911a:	adc    BYTE PTR [bp+0x71],dh
  40911e:	xchg   DWORD PTR [ebx-0x144e4e93],eax
  409124:	gs mov ch,0x36
  409127:	jns    0x409114
  409129:	cs out 0x4c,al
  40912c:	xchg   edx,eax
  40912d:	add    eax,0xa355b7f3
  409132:	js     0x409115
  409134:	cmp    al,BYTE PTR [eax]
  409136:	or     al,0xca
  409138:	inc    eax
  409139:	cmp    al,0x75
  40913b:	push   ebx
  40913c:	addr16 xchg ebx,eax
  40913e:	mov    dl,0xd4
  409140:	adc    edx,DWORD PTR [edx+0x26195c5e]
  409146:	inc    ebx
  409147:	mov    ebp,0x6b9f9f80
  40914c:	xor    DWORD PTR [ebp-0x33],esp
  40914f:	call   0x48d:0x14b6c7e3
  409156:	imul   edx,esi,0x5a
  409159:	and    al,0xa7
  40915b:	mov    ebp,0x5db2dda1
  409160:	xor    eax,DWORD PTR [ecx+0x6497656a]
  409166:	and    eax,0x3a311180
  40916b:	jmp    0x2449d7b8
  409170:	xlat   BYTE PTR ds:[ebx]
  409171:	pop    esi
  409172:	mov    WORD PTR [ebp-0x46],?
  409175:	xchg   DWORD PTR [ebp-0x3a],edx
  409178:	xchg   BYTE PTR [edi-0x1e],bl
  40917b:	arpl   WORD PTR [ebp-0x7f],bx
  40917e:	sub    eax,0x667620e8
  409183:	fnsave [ecx+ebx*1+0x4f1eaccb]
  40918a:	push   0x1580151a
  40918f:	nop
  409190:	dec    edx
  409191:	loopne 0x4091eb
  409193:	push   ds
  409194:	fwait
  409195:	mov    bl,0xc6
  409197:	scas   al,BYTE PTR es:[edi]
  409198:	jp     0x40918f
  40919a:	mov    esi,DWORD PTR ds:0xebde9c72
  4091a0:	and    ebx,ecx
  4091a2:	outs   dx,DWORD PTR ds:[esi]
  4091a3:	sar    DWORD PTR [ecx+0x4c63c150],0x1
  4091aa:	int3   
  4091ab:	or     al,0xee
  4091ad:	js     0x409219
  4091af:	cdq    
  4091b0:	mov    DWORD PTR [esi+0x625c83d2],edx
  4091b6:	sub    ebp,DWORD PTR [edi]
  4091b8:	inc    esi
  4091b9:	loopne 0x409148
  4091bb:	inc    ecx
  4091bc:	mov    al,ds:0x3fec65e1
  4091c1:	ret    
  4091c2:	push   esp
  4091c3:	and    bl,BYTE PTR [esi+0x3e9c8eb9]
  4091c9:	add    BYTE PTR [edx+0x1036bca6],0xe9
  4091d0:	sub    BYTE PTR [eax],dl
  4091d2:	xchg   BYTE PTR [esi+eax*4+0x6dc17ac8],bh
  4091d9:	mov    ah,0x2
  4091db:	stos   BYTE PTR es:[edi],al
  4091dc:	mov    edi,0xa8a412a7
  4091e1:	emms   
  4091e3:	mov    bh,cl
  4091e5:	push   ecx
  4091e6:	sti    
  4091e7:	aaa    
  4091e8:	jae    0x4091cd
  4091ea:	dec    ebx
  4091eb:	ja     0x40923a
  4091ed:	(bad)  
  4091ee:	xor    bl,cl
  4091f0:	push   0x29
  4091f2:	hlt    
  4091f3:	test   al,0x2b
  4091f5:	scas   al,BYTE PTR es:[edi]
  4091f6:	icebp  
  4091f7:	xor    bl,dl
  4091f9:	pop    ebx
  4091fa:	in     eax,dx
  4091fb:	sahf   
  4091fc:	sbb    al,0xa0
  4091fe:	aad    0x94
  409200:	(bad)
  409203:	push   esi
  409204:	retf   0x3ba2
  409207:	out    dx,al
  409208:	data16 xlat BYTE PTR ds:[ebx]
  40920a:	mov    edi,0x1d1f449d
  40920f:	addr16 dec edx
  409211:	ja     0x409194
  409213:	outs   dx,BYTE PTR ds:[esi]
  409214:	pop    esi
  409215:	fadd   DWORD PTR [edx]
  409217:	je     0x4091cf
  409219:	loope  0x409280
  40921b:	or     BYTE PTR [edx-0x6f],0x33
  40921f:	push   ds
  409220:	cmp    cl,BYTE PTR [eax+0x585515fc]
  409226:	loopne 0x4091ff
  409228:	mov    esp,0x5c4a393e
  40922d:	sbb    BYTE PTR [ebp+0x20],cl
  409230:	fnstenv [ebp+0x7e]
  409233:	mul    ah
  409235:	and    cl,dl
  409237:	xchg   edx,eax
  409238:	add    BYTE PTR [ebx-0x1df98320],0x31
  40923f:	xchg   esi,eax
  409240:	cmp    ecx,esp
  409242:	pop    ss
  409243:	ficom  DWORD PTR [ecx-0x32f3df7c]
  409249:	into   
  40924a:	mov    WORD PTR fs:[ecx-0x75],ds
  40924e:	push   0xffffffa0
  409250:	fwait
  409251:	ret    
  409252:	mov    ecx,0xc5f071c9
  409257:	fimul  WORD PTR [ecx-0x2ffa03be]
  40925d:	daa    
  40925e:	or     al,0x92
  409260:	mov    ds:0xe9e6b5a,al
  409265:	dec    edx
  409266:	lea    edx,[ecx-0x1d]
  409269:	in     eax,dx
  40926a:	in     al,dx
  40926b:	jo     0x4092d6
  40926d:	jno    0x409278
  40926f:	ret    0x672c
  409272:	rol    DWORD PTR [edi-0x3b],1
  409275:	sahf   
  409276:	jbe    0x4092ae
  409278:	or     eax,0x65df4cdf
  40927d:	loope  0x409285
  40927f:	pushf  
  409280:	jle    0x409239
  409282:	arpl   bp,sp
  409284:	loopne 0x409242
  409286:	clc    
  409287:	daa    
  409288:	ficom  WORD PTR [edi+0x1205a882]
  40928e:	ret    0xa373
  409291:	mov    dh,0xe4
  409293:	push   es
  409294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409296:	test   DWORD PTR [edi+0x49],ebp
  409299:	push   esi
  40929a:	ret    
  40929b:	dec    ebp
  40929c:	pop    esp
  40929d:	gs in  eax,dx
  40929f:	clc    
  4092a0:	xchg   ebx,eax
  4092a1:	xor    DWORD PTR [esp+esi*8+0x3f],0xa6b8441b
  4092a9:	or     BYTE PTR [edi-0x76d1efb9],al
  4092af:	mov    ecx,0x1f12fbb9
  4092b4:	test   dh,bl
  4092b6:	push   edx
  4092b7:	popf   
  4092b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b9:	and    BYTE PTR [eax-0x4bb6e20a],bh
  4092bf:	mov    dl,0x70
  4092c1:	or     al,0xe0
  4092c3:	mov    bl,0x75
  4092c5:	int3   
  4092c6:	jle    0x4092ab
  4092c8:	add    al,0x2f
  4092ca:	mov    edi,0x9bfd3f08
  4092cf:	out    0x30,eax
  4092d1:	into   
  4092d2:	test   eax,esi
  4092d4:	aas    
  4092d5:	out    0xf7,al
  4092d7:	xor    dl,BYTE PTR [ebx-0x37]
  4092da:	pusha  
  4092db:	cld    
  4092dc:	cli    
  4092dd:	mov    ebp,DWORD PTR [edx-0xe]
  4092e0:	cmc    
  4092e1:	sub    DWORD PTR ds:[edi+0x27],ebx
  4092e5:	ret    
  4092e6:	nop
  4092e7:	or     ebp,edi
  4092e9:	lea    esp,[esp+eax*1]
  4092ec:	mov    ch,0x8a
  4092ee:	push   0xa17dcdc4
  4092f3:	add    al,0x69
  4092f5:	rcl    dl,cl
  4092f7:	mov    BYTE PTR [ecx-0x52],cl
  4092fa:	sbb    esp,DWORD PTR [esi]
  4092fc:	add    al,0x6f
  4092fe:	test   DWORD PTR [ecx],0x2e6c930b
  409304:	adc    al,0x56
  409306:	out    dx,al
  409307:	sub    al,BYTE PTR [esi-0x7db632bf]
  40930d:	sbb    BYTE PTR [ebx],ah
  40930f:	les    ebp,FWORD PTR ds:[eax+0x1d7eb65a]
  409316:	mov    ecx,ebp
  409318:	sub    DWORD PTR [eax+0x14],0xffffffd2
  40931c:	adc    al,ch
  40931e:	cmp    edx,ebx
  409320:	ins    BYTE PTR es:[edi],dx
  409321:	cmc    
  409322:	adc    al,0x2c
  409324:	aam    0x8a
  409326:	pop    ecx
  409327:	in     eax,dx
  409328:	jns    0x4092d4
  40932a:	shl    BYTE PTR [eax],0x9a
  40932d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932e:	and    al,0x72
  409330:	xchg   esp,eax
  409331:	add    ebp,esi
  409333:	repnz mov DWORD PTR [eax],ebx
  409336:	out    0xb0,eax
  409338:	push   eax
  409339:	fs jecxz 0x409303
  40933c:	daa    
  40933d:	mov    ecx,0x2aba6308
  409342:	(bad)  
  409343:	sub    eax,esi
  409345:	xchg   ecx,eax
  409346:	test   DWORD PTR [eax-0x1d],esp
  409349:	push   edx
  40934a:	fadd   st,st(5)
  40934c:	lea    ebx,[esi+0x18]
  40934f:	jne    0x4092f4
  409351:	dec    esp
  409352:	aam    0x9b
  409354:	stc    
  409355:	or     ch,BYTE PTR [ebp+0x1e940738]
  40935b:	jmp    0x40930f
  40935d:	xlat   BYTE PTR ds:[ebx]
  40935e:	imul   ecx,DWORD PTR [edx+0x315e262d],0x7c
  409365:	mov    ds:0x654aef9a,al
  40936a:	sub    ecx,DWORD PTR [esi+0x76]
  40936d:	fist   DWORD PTR es:[esi+ebx*1-0x55e5cd0d]
  409375:	adc    al,0x36
  409377:	les    ecx,FWORD PTR [eax+eiz*8]
  40937a:	mov    cl,0x69
  40937c:	(bad)  
  40937d:	inc    eax
  40937e:	add    bh,BYTE PTR [edx+ebp*1-0x31ed3d6]
  409385:	sbb    eax,0x6e890a1f
  40938a:	(bad)  
  40938c:	mov    esp,0xd8726358
  409391:	icebp  
  409392:	int3   
  409393:	gs sbb al,0xb9
  409396:	or     DWORD PTR [ebx+0x57fe2cf0],0xae9be565
  4093a0:	rep outs dx,BYTE PTR ds:[esi]
  4093a3:	(bad)  
  4093a4:	inc    DWORD PTR [ebp-0x5e33af03]
  4093aa:	out    dx,eax
  4093ab:	in     al,dx
  4093ac:	stc    
  4093ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ae:	jmp    0x29ff0fe1
  4093b3:	jl     0x40940a
  4093b5:	sar    BYTE PTR [edi-0x5d5fa2c8],cl
  4093bb:	fist   DWORD PTR [eax-0x65]
  4093be:	shr    esp,0xe0
  4093c1:	add    DWORD PTR [ebx+0x584cea87],edx
  4093c7:	adc    al,0x82
  4093c9:	and    eax,0x74f32022
  4093ce:	ins    DWORD PTR es:[edi],dx
  4093cf:	(bad)  
  4093d1:	popf   
  4093d2:	dec    edi
  4093d3:	dec    esi
  4093d4:	mov    dl,BYTE PTR [edx+edx*2-0x58d26b44]
  4093db:	dec    esp
  4093dc:	(bad)  
  4093dd:	push   eax
  4093de:	jmp    0x40939f
  4093e0:	cmc    
  4093e1:	mov    ecx,0x5312a19c
  4093e6:	repnz xchg ebp,eax
  4093e8:	xchg   DWORD PTR [ebx+0x4d],esi
  4093eb:	mov    edx,0xc26631ce
  4093f0:	xor    DWORD PTR [eax+0x35],esp
  4093f3:	push   esi
  4093f4:	lods   eax,DWORD PTR ds:[esi]
  4093f5:	mov    ch,0x58
  4093f7:	bound  edx,QWORD PTR ds:0x4eb98d39
  4093fd:	ss stos BYTE PTR es:[edi],al
  4093ff:	imul   edx,eax,0x54eca1e2
  409405:	mov    dl,0xb8
  409407:	test   DWORD PTR [eax-0x278bc439],0x109830cf
  409411:	fisttp DWORD PTR [esi]
  409413:	adc    eax,0x71724667
  409418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409419:	dec    esp
  40941a:	pop    eax
  40941b:	or     al,0x4c
  40941d:	xchg   ebp,eax
  40941e:	xchg   esp,eax
  40941f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409420:	add    ch,cl
  409422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409423:	and    al,0x22
  409425:	pop    es
  409426:	fistp  QWORD PTR [ebx+0x1b]
  409429:	or     bh,dl
  40942b:	retf   0x9e4
  40942e:	dec    edi
  40942f:	inc    ebp
  409430:	sbb    DWORD PTR [edi+0x6e48f402],edx
  409436:	test   eax,0xbeec2853
  40943b:	push   0x16fe51df
  409440:	inc    edi
  409441:	sbb    DWORD PTR [edi+0x5ee2ab60],0xab918c2
  40944b:	pop    ebx
  40944c:	pusha  
  40944d:	mov    edi,0xcb861c89
  409452:	and    eax,0x26f00869
  409457:	lahf   
  409458:	mov    edi,DWORD PTR [esi]
  40945a:	fldenv [edi-0x57cf7a50]
  409460:	nop
  409461:	sub    ah,BYTE PTR [ecx-0x4c]
  409464:	das    
  409465:	dec    edx
  409466:	mov    edx,0xed3f90de
  40946b:	xchg   edi,eax
  40946c:	adc    al,0xfc
  40946e:	inc    ecx
  40946f:	fld    QWORD PTR [edi+0x74]
  409472:	in     eax,dx
  409473:	dec    edi
  409474:	stc    
  409475:	jmp    0xc5e5feb3
  40947a:	sub    eax,0xcada8f1b
  40947f:	xchg   ecx,eax
  409480:	xchg   esp,eax
  409481:	xor    esi,edx
  409483:	(bad)  
  409485:	out    0x9e,eax
  409487:	sbb    bl,ah
  409489:	xor    DWORD PTR [ebx-0xf39ed55],ebp
  40948f:	push   edx
  409490:	cld    
  409491:	lea    edi,[ebp+0x49a23bb3]
  409497:	lahf   
  409498:	es hlt 
  40949a:	inc    ebx
  40949b:	push   eax
  40949c:	(bad)  
  40949d:	sub    al,0xc8
  40949f:	clc    
  4094a0:	sbb    BYTE PTR [ebp-0x2c47e57],dl
  4094a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094a7:	push   esi
  4094a8:	and    DWORD PTR [edi-0x72],esi
  4094ab:	jg     0x409451
  4094ad:	jg     0x409529
  4094af:	iret   
  4094b0:	imul   ah
  4094b2:	pop    eax
  4094b3:	ret    
  4094b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b5:	jne    0x40951d
  4094b7:	adc    al,0x4e
  4094b9:	jb     0x4094f1
  4094bb:	jle    0x4094f5
  4094bd:	or     ebp,ebx
  4094bf:	arpl   WORD PTR [ebx-0x1e689507],cx
  4094c5:	call   0xe8b1:0x81416738
  4094cc:	pusha  
  4094cd:	sub    ebx,0xffffff8e
  4094d0:	mov    esi,0xda2f4c18
  4094d5:	in     al,0x0
  4094d7:	sub    al,0x6
  4094d9:	sbb    DWORD PTR [ebp-0x6fe993da],edi
  4094df:	outs   dx,DWORD PTR ds:[esi]
  4094e0:	int    0xc9
  4094e2:	out    dx,al
  4094e3:	mov    esi,0x725be73d
  4094e8:	lods   al,BYTE PTR ds:[esi]
  4094e9:	jge    0x40947c
  4094eb:	push   edx
  4094ec:	xor    ebx,DWORD PTR [edi-0x1]
  4094ef:	or     DWORD PTR [eax+0x2427c090],0xffffff9d
  4094f6:	xchg   ebp,eax
  4094f7:	into   
  4094f8:	shl    DWORD PTR [edi],cl
  4094fa:	stos   DWORD PTR es:[edi],eax
  4094fb:	fisub  WORD PTR [esi]
  4094fd:	jmp    0x77b5:0x798b25
  409504:	gs jle 0x409511
  409507:	data16 int 0x47
  40950a:	jecxz  0x409508
  40950c:	mov    bl,0xad
  40950e:	push   ss
  40950f:	cmc    
  409510:	int3   
  409511:	out    0xfe,eax
  409513:	in     al,0x29
  409515:	or     ebp,DWORD PTR [ebp+0x5f]
  409518:	outs   dx,DWORD PTR ds:[esi]
  409519:	ret    
  40951a:	cs xor ah,dh
  40951d:	inc    DWORD PTR [edi-0x52534f18]
  409523:	retf   
  409524:	push   es
  409525:	int3   
  409526:	mov    esi,0xcf8d2d8c
  40952b:	es push es
  40952d:	pop    edx
  40952e:	add    al,0xb9
  409530:	rol    BYTE PTR [ebp+ebp*2+0x6dc3427c],1
  409537:	js     0x4095b2
  409539:	or     ch,BYTE PTR [esi]
  40953b:	mov    dl,0x6b
  40953d:	xchg   esi,eax
  40953e:	scas   eax,DWORD PTR es:[edi]
  40953f:	rcl    esp,cl
  409541:	and    al,0x96
  409543:	leave  
  409544:	jmp    0x409538
  409546:	sub    al,0x25
  409548:	imul   ebp,esp,0x277e2204
  40954e:	add    eax,0xcb2ba558
  409553:	sub    al,0x32
  409555:	sbb    DWORD PTR [ebx+0xbf610cc],eax
  40955b:	(bad)
  40955f:	pop    ss
  409560:	add    dl,BYTE PTR [ebp-0x15]
  409563:	stc    
  409564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409565:	pop    ebx
  409566:	div    BYTE PTR [ebp+0x2b]
  409569:	xor    eax,DWORD PTR [eax]
  40956b:	loope  0x409507
  40956d:	dec    esi
  40956e:	(bad)  [ecx]
  409570:	cdq    
  409571:	mov    bh,0x8d
  409573:	adc    eax,DWORD PTR [edi-0x4e]
  409576:	div    DWORD PTR [ecx+eax*8-0xac53e94]
  40957d:	jmp    0x4095b1
  40957f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409580:	lods   eax,DWORD PTR ds:[esi]
  409581:	loopne 0x40951e
  409583:	rol    DWORD PTR [edi],1
  409585:	adc    eax,0x119fb652
  40958a:	adc    eax,0xa62c0808
  40958f:	inc    esp
  409590:	push   0x19330cb9
  409595:	xchg   esp,eax
  409596:	cmc    
  409597:	or     al,0x7
  409599:	mov    ecx,0x1a16a0e3
  40959e:	mov    dl,0xb8
  4095a0:	push   esi
  4095a1:	inc    esp
  4095a2:	ja     0x409574
  4095a4:	jno    0x4095ed
  4095a6:	imul   eax,DWORD PTR [edi-0x3c],0xc6929ebc
  4095ad:	add    BYTE PTR [edi+0x7af76cb3],dl
  4095b3:	mov    al,0xa1
  4095b5:	iret   
  4095b6:	rcl    DWORD PTR [ecx+esi*1+0x70098923],cl
  4095bd:	(bad)  
  4095be:	call   DWORD PTR [esi-0x16b8a6c8]
  4095c4:	retf   0x6b3e
  4095c7:	call   0x3231:0x84198f71
  4095ce:	(bad)  
  4095cf:	(bad)  
  4095d0:	outs   dx,BYTE PTR ds:[esi]
  4095d1:	jnp    0x4095b4
  4095d3:	std    
  4095d4:	inc    ebx
  4095d5:	outs   dx,BYTE PTR ds:[esi]
  4095d6:	xchg   BYTE PTR [ebp+edx*1-0x21],bh
  4095da:	sub    eax,0x629564e6
  4095df:	jns    0x4095b5
  4095e1:	adc    al,0xd
  4095e3:	xor    BYTE PTR [edx],ah
  4095e5:	mov    ?,WORD PTR [ebx+0x33]
  4095e8:	dec    ebx
  4095e9:	jnp    0x40960b
  4095eb:	push   0x21
  4095ed:	nop
  4095ee:	dec    edx
  4095ef:	pop    ebp
  4095f0:	retf   0x6509
  4095f3:	dec    ebp
  4095f4:	mov    DWORD PTR [edi+0x320bba41],ecx
  4095fa:	pop    ds
  4095fb:	xchg   DWORD PTR [edx-0x5a],esi
  4095fe:	jbe    0x4095a1
  409600:	les    ebp,FWORD PTR [ebx]
  409602:	sub    BYTE PTR [ebx],bl
  409604:	xchg   esi,eax
  409605:	mov    ds:0x3466a2df,al
  40960a:	jbe    0x4095eb
  40960c:	mov    esi,0x13537e46
  409611:	mov    al,ds:0x4c981d9b
  409616:	mov    esp,0x66357fdc
  40961b:	popf   
  40961c:	or     bl,bh
  40961e:	into   
  40961f:	ss cli 
  409621:	cmp    edx,DWORD PTR [ebx+ecx*4]
  409624:	push   esi
  409625:	ficom  DWORD PTR [esi]
  409627:	or     al,0x30
  409629:	fwait
  40962a:	retf   0x6204
  40962d:	adc    cl,BYTE PTR gs:0x1db0a1de
  409634:	or     dl,BYTE PTR [eax]
  409636:	rcr    bl,1
  409638:	mov    edi,0x3e277bec
  40963d:	mov    cl,0xc1
  40963f:	retf   
  409640:	sub    ebp,DWORD PTR [edi+0x7dafddd8]
  409646:	outs   dx,BYTE PTR ds:[esi]
  409647:	push   ds
  409648:	adc    eax,0x1f41a138
  40964d:	mov    ds:0x18d177a2,al
  409652:	push   edi
  409653:	and    esp,edi
  409655:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409657:	mov    ecx,0xfa219c5b
  40965c:	call   0x16d2:0x212bd792
  409663:	daa    
  409664:	das    
  409665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409666:	xchg   esi,eax
  409668:	dec    edi
  409669:	xor    eax,0x4ac1dc16
  40966e:	mov    esi,0xc8d5f57e
  409673:	test   al,bh
  409675:	das    
  409676:	aaa    
  409677:	jecxz  0x40964b
  409679:	into   
  40967a:	lock adc al,0x91
  40967d:	in     al,dx
  40967e:	dec    esi
  40967f:	sbb    ch,BYTE PTR [eax+0x46661db5]
  409685:	push   ebp
  409686:	int    0x8c
  409688:	inc    ecx
  409689:	mov    ebx,0xcc5c32b
  40968e:	adc    al,0x4e
  409690:	mov    ecx,0xacb1262d
  409695:	scas   al,BYTE PTR es:[edi]
  409696:	adc    eax,0x424c0e68
  40969b:	pop    esi
  40969c:	int3   
  40969d:	sub    al,0x5e
  40969f:	cmp    dl,BYTE PTR [edi-0x63a6e335]
  4096a5:	daa    
  4096a6:	or     bl,bl
  4096a8:	cmp    DWORD PTR [edi-0x72],edi
  4096ab:	fld    QWORD PTR [ebp-0x10c82456]
  4096b1:	xor    DWORD PTR [edx],ebx
  4096b3:	mov    DWORD PTR [ebx-0x56ff638b],edi
  4096b9:	add    ch,BYTE PTR [ebp+ebx*4-0x34]
  4096bd:	(bad)
  4096c0:	inc    ebx
  4096c1:	fisubr WORD PTR [ebx+0x2502e8e4]
  4096c7:	mov    esi,0xc03eb5f5
  4096cc:	pushf  
  4096cd:	pop    es
  4096ce:	xor    BYTE PTR ds:0x366893bc,ch
  4096d4:	add    al,0xf4
  4096d6:	push   edx
  4096d7:	jmp    0x7700:0x3bd772ce
  4096de:	mov    eax,0xf4c278df
  4096e3:	adc    DWORD PTR [ebx+ecx*1-0xe1c0b05],esp
  4096ea:	xchg   esp,eax
  4096eb:	or     ch,bh
  4096ed:	inc    eax
  4096ee:	add    dh,BYTE PTR [edi+0x0]
  4096f1:	inc    esi
  4096f2:	xchg   esp,eax
  4096f3:	ins    DWORD PTR es:[edi],dx
  4096f4:	sbb    edx,edi
  4096f6:	leave  
  4096f7:	inc    eax
  4096f8:	lods   al,BYTE PTR ds:[esi]
  4096f9:	and    ecx,DWORD PTR [edi-0x52ef9fc8]
  4096ff:	pop    edi
  409700:	mov    BYTE PTR [ebp-0x72fe4318],dl
  409706:	adc    eax,0x4cbe7cee
  40970b:	xchg   ecx,eax
  40970c:	and    edi,DWORD PTR [esi+0x75198d97]
  409712:	es inc esi
  409714:	hlt    
  409715:	push   0x15
  409717:	jns    0x409774
  409719:	int3   
  40971a:	ds push ecx
  40971c:	mov    dh,0xbb
  40971e:	inc    ebp
  40971f:	push   0x19238a75
  409724:	push   ebp
  409725:	shl    DWORD PTR [ecx+0x34a63a5a],0x66
  40972c:	push   ds
  40972d:	jae    0x4096fa
  40972f:	jb     0x409751
  409731:	pop    edx
  409732:	imul   ebx,DWORD PTR [ecx-0x7048c4d1],0x36e06a3c
  40973c:	fild   QWORD PTR [edi]
  40973e:	fs (bad) 
  409740:	in     eax,0x9c
  409742:	inc    edx
  409743:	inc    edi
  409744:	inc    ecx
  409745:	les    esi,FWORD PTR [esi+0x19]
  409748:	(bad)  
  409749:	(bad)  
  40974b:	adc    esp,DWORD PTR [ebp+0x72057ca1]
  409751:	xor    al,0xb8
  409753:	add    eax,0x5910d4bb
  409758:	push   es
  409759:	xchg   esi,eax
  40975a:	fsubr  DWORD PTR [esi+eax*2+0x7528a468]
  409761:	pop    ds
  409762:	dec    ecx
  409763:	inc    edx
  409764:	inc    edi
  409765:	jno    0x4097a3
  409767:	lahf   
  409768:	fs and eax,0xb775a60b
  40976e:	test   BYTE PTR [eax],cl
  409770:	push   cs
  409771:	das    
  409772:	cmc    
  409773:	retf   
  409774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409775:	(bad)  
  409776:	xor    al,0x2e
  409778:	cmp    ch,BYTE PTR [esi+0x44]
  40977b:	pushf  
  40977c:	icebp  
  40977d:	add    bh,BYTE PTR [ecx+eiz*4-0x42]
  409781:	(bad)  [edx-0x3a82cfde]
  409787:	bound  esi,QWORD PTR [ebx]
  409789:	mov    ebp,0xb9464a6d
  40978e:	dec    edi
  40978f:	add    BYTE PTR [edi+0x72],ah
  409792:	xchg   edx,eax
  409793:	ds dec ecx
  409795:	pushf  
  409796:	ins    DWORD PTR es:[edi],dx
  409797:	add    bl,BYTE PTR [ecx]
  409799:	and    ecx,DWORD PTR [edx-0x12dcdbfa]
  40979f:	cld    
  4097a0:	sbb    bh,bh
  4097a2:	cld    
  4097a3:	jle    0x4097d6
  4097a5:	xchg   ebx,eax
  4097a6:	sbb    bh,BYTE PTR [ebx]
  4097a8:	popa   
  4097a9:	xor    al,0x70
  4097ab:	mov    eax,ds:0xe546beff
  4097b0:	xchg   cl,al
  4097b2:	fidivr WORD PTR [ebx-0x6b]
  4097b5:	mov    ecx,esp
  4097b7:	push   ebx
  4097b8:	rcr    DWORD PTR [edi+0x42],1
  4097bb:	nop
  4097bc:	sbb    BYTE PTR [ebp-0x2342689e],0xbe
  4097c3:	test   al,0xfc
  4097c5:	cwde   
  4097c6:	repnz in al,0x77
  4097c9:	sbb    BYTE PTR [edi-0x71],bh
  4097cc:	mov    eax,0x70b370e5
  4097d1:	push   edx
  4097d2:	outs   dx,BYTE PTR ds:[esi]
  4097d3:	or     DWORD PTR gs:[edx+0x19],ebx
  4097d7:	pop    ss
  4097d8:	push   edx
  4097d9:	(bad)  
  4097da:	cmp    BYTE PTR [eax],bl
  4097dc:	cli    
  4097dd:	sub    eax,DWORD PTR [ecx]
  4097df:	pop    ecx
  4097e0:	fnstcw WORD PTR [ebx+0x75]
  4097e3:	out    dx,eax
  4097e4:	pop    ss
  4097e5:	and    BYTE PTR [eax-0x1a],ah
  4097e8:	and    eax,0xcd5bc25c
  4097ed:	aad    0x36
  4097ef:	loope  0x409868
  4097f1:	inc    ebp
  4097f2:	test   al,0x99
  4097f4:	clc    
  4097f5:	push   ss
  4097f6:	mov    al,ah
  4097f8:	sbb    al,0x2a
  4097fa:	adc    esi,ebx
  4097fc:	mov    ebx,0xd75cbc5e
  409801:	es out 0x9f,al
  409804:	scas   al,BYTE PTR es:[edi]
  409805:	mov    ah,0xc8
  409807:	popa   
  409808:	jb     0x409804
  40980a:	ss stos BYTE PTR es:[edi],al
  40980c:	leave  
  40980d:	push   cs
  40980e:	aas    
  40980f:	sbb    ebp,DWORD PTR [esi]
  409811:	and    al,0x15
  409813:	push   es
  409814:	push   cs
  409815:	imul   edx,ecx,0xb3c75c91
  40981b:	stos   DWORD PTR es:[edi],eax
  40981c:	iret   
  40981d:	repnz ins BYTE PTR es:[edi],dx
  40981f:	mov    ch,0xbf
  409821:	in     al,dx
  409822:	cmp    eax,0xe70d4fd0
  409827:	outs   dx,DWORD PTR ds:[esi]
  409828:	ds test eax,0xea85ab29
  40982e:	push   ebx
  40982f:	add    eax,0x7260e61a
  409834:	push   ecx
  409835:	mov    ecx,0xdc55cb0f
  40983a:	push   ecx
  40983b:	outs   dx,DWORD PTR ds:[esi]
  40983c:	(bad)  
  40983d:	popa   
  40983e:	and    eax,eax
  409840:	sahf   
  409841:	lods   al,BYTE PTR ds:[esi]
  409842:	mov    bh,0x86
  409844:	sbb    al,0x12
  409846:	dec    ebx
  409847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409848:	cld    
  409849:	lods   al,BYTE PTR ds:[esi]
  40984a:	rcl    edi,0x76
  40984d:	sbb    eax,0xc1014873
  409852:	leave  
  409853:	icebp  
  409854:	lods   al,BYTE PTR ds:[esi]
  409855:	xchg   BYTE PTR [ecx-0x70],bh
  409858:	or     eax,0x4fd13ebb
  40985d:	push   esp
  40985e:	shr    BYTE PTR [edx-0x5b],1
  409861:	xchg   edx,eax
  409862:	icebp  
  409863:	lds    esp,FWORD PTR [edi]
  409865:	jl     0x4098c7
  409867:	add    dl,BYTE PTR [edx-0x6bb91438]
  40986d:	mov    ch,0xf1
  40986f:	(bad)  [ecx]
  409871:	sbb    bl,bh
  409873:	push   ss
  409874:	ret    0x47ba
  409877:	rol    DWORD PTR [edx],1
  409879:	ret    
  40987a:	mov    esi,ecx
  40987c:	jno    0x409860
  40987e:	mov    fs,WORD PTR [edx]
  409880:	add    DWORD PTR [edx-0x3c3db90e],eax
  409886:	dec    eax
  409887:	stc    
  409888:	(bad)  
  409889:	inc    ecx
  40988b:	dec    eax
  40988c:	add    edi,esp
  40988e:	mov    ds:0x381f79cf,al
  409893:	fidivr DWORD PTR [edx+0x1d]
  409896:	pop    ss
  409897:	mov    ds:0xa5926994,al
  40989c:	sahf   
  40989d:	xchg   ebx,eax
  40989e:	fstp   DWORD PTR [ebp-0x5e]
  4098a2:	into   
  4098a3:	or     eax,0x1a130816
  4098a8:	and    ecx,DWORD PTR [esi-0x25b4ffd6]
  4098ae:	dec    edx
  4098af:	xchg   BYTE PTR [edx-0x2c],ah
  4098b2:	cdq    
  4098b3:	mov    edi,0x6f99ce22
  4098b8:	push   es
  4098b9:	xor    al,0x98
  4098bb:	mov    esp,0xc475684d
  4098c0:	ja     0x409916
  4098c2:	(bad)  
  4098c3:	xchg   ecx,eax
  4098c4:	add    BYTE PTR [eax-0x76a34b6e],al
  4098ca:	and    DWORD PTR [eax],edi
  4098cc:	push   ebp
  4098cd:	sahf   
  4098ce:	inc    ecx
  4098cf:	rcr    BYTE PTR [esp+ebx*1+0x62],cl
  4098d3:	sub    DWORD PTR [esi],0x1c0a4169
  4098d9:	push   ds
  4098da:	lods   eax,DWORD PTR ds:[esi]
  4098db:	adc    DWORD PTR [ebx+0x51],0xdfa2dd77
  4098e2:	retf   
  4098e3:	dec    esp
  4098e4:	mov    ?,WORD PTR [eax+edi*4+0x55]
  4098e8:	adc    BYTE PTR [ebx+0x72],ch
  4098eb:	les    ecx,FWORD PTR [ecx+edi*8-0x31]
  4098ef:	mov    ah,0xb1
  4098f1:	xchg   ebx,eax
  4098f2:	pop    ss
  4098f3:	outs   dx,BYTE PTR ds:[esi]
  4098f4:	mov    dl,0x8b
  4098f6:	fst    DWORD PTR [ebp+0x3c2f0e4e]
  4098fc:	push   es
  4098fd:	ss retf 
  4098ff:	sub    esp,DWORD PTR [edi+eiz*4+0x37]
  409903:	mov    esp,0x5254c398
  409908:	cmp    al,0xae
  40990a:	mov    ebx,0x148871d2
  40990f:	iret   
  409910:	in     al,0x21
  409912:	scas   al,BYTE PTR es:[edi]
  409913:	retf   
  409914:	cld    
  409915:	lods   al,BYTE PTR ds:[esi]
  409916:	mov    bh,0xde
  409918:	(bad)  
  409919:	dec    eax
  40991a:	mov    bh,0x6f
  40991c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40991d:	cmp    eax,0xc4ef4405
  409922:	mov    al,ah
  409924:	cld    
  409925:	push   0x46
  409927:	repnz out dx,eax
  409929:	fist   DWORD PTR [edx]
  40992b:	sub    BYTE PTR [ebp-0x314d5ae5],ah
  409931:	xor    eax,0xca1e40a4
  409936:	outs   dx,BYTE PTR ds:[esi]
  409937:	frstor [esi-0x6d39a8b0]
  40993d:	rcl    BYTE PTR [ebp-0xa95650e],0x8f
  409944:	adc    bh,ch
  409946:	adc    eax,0x4ae4052
  40994b:	inc    edi
  40994c:	cmp    BYTE PTR [ecx],cl
  40994e:	popa   
  40994f:	adc    eax,0x1af2696b
  409954:	mov    ds:0x8a69eb6e,al
  409959:	push   ebp
  40995a:	and    ecx,DWORD PTR [ebx]
  40995c:	jle    0x4098e6
  40995e:	add    al,0x7f
  409960:	ds (bad) 
  409962:	into   
  409963:	into   
  409964:	fsub   QWORD PTR ds:0x37389312
  40996a:	sbb    edi,edx
  40996c:	loopne 0x4098f1
  40996e:	stos   DWORD PTR es:[edi],eax
  40996f:	or     BYTE PTR [edi-0x679c3319],bl
  409975:	test   al,0xaa
  409977:	(bad)  
  409978:	lock cmp ebx,DWORD PTR fs:[esi+0x5b0ee9c2]
  409980:	fs nop
  409982:	sub    edx,DWORD PTR [ecx]
  409984:	imul   eax,DWORD PTR [eax],0x49
  409987:	mov    ds:0x8c63316a,eax
  40998c:	xchg   edx,eax
  40998d:	xor    DWORD PTR [eax+0x4e],ebx
  409990:	fcomp  QWORD PTR [ecx-0x74]
  409993:	aaa    
  409994:	ret    0x423f
  409997:	dec    ecx
  409998:	push   edi
  409999:	fidiv  WORD PTR [edi+0x6]
  40999c:	in     eax,dx
  40999d:	jne    0x409933
  40999f:	or     ebp,edi
  4099a1:	xor    BYTE PTR [esi],0xb3
  4099a4:	jp     0x409941
  4099a6:	push   ss
  4099a7:	mov    edi,0x94d1a0e2
  4099ac:	(bad)  
  4099ad:	daa    
  4099ae:	jo     0x409956
  4099b0:	xor    al,0xa7
  4099b2:	dec    ecx
  4099b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b4:	push   ecx
  4099b5:	out    dx,eax
  4099b6:	ror    DWORD PTR [ebx+0x22175673],0x51
  4099bd:	scas   al,BYTE PTR es:[edi]
  4099be:	dec    DWORD PTR [ebp-0x327e5554]
  4099c4:	mov    bl,0xd8
  4099c6:	pop    ebp
  4099c7:	cmp    edx,DWORD PTR [ecx-0xdf3bb5a]
  4099cd:	test   DWORD PTR [ebx-0x80],ecx
  4099d0:	(bad)  
  4099d1:	les    ecx,FWORD PTR [esi+eax*2-0x42885de8]
  4099d8:	pop    ds
  4099d9:	jmp    0xa48258ba
  4099de:	push   ebp
  4099df:	aaa    
  4099e0:	pusha  
  4099e1:	inc    ebx
  4099e2:	cdq    
  4099e3:	stc    
  4099e4:	ja     0x409a3a
  4099e6:	xchg   ebp,eax
  4099e7:	pop    es
  4099e8:	dec    esp
  4099e9:	xor    DWORD PTR [edi-0x24a6c277],ebx
  4099ef:	out    0x53,al
  4099f1:	outs   dx,DWORD PTR ds:[esi]
  4099f2:	shl    BYTE PTR ds:0xa60ffcd5,0x8b
  4099f9:	outs   dx,DWORD PTR ds:[esi]
  4099fa:	test   edi,ebp
  4099fc:	sub    edi,DWORD PTR [eax-0x1d]
  4099ff:	lods   al,BYTE PTR ds:[esi]
  409a00:	add    bh,bl
  409a02:	call   0x6414:0xf7004359
  409a09:	fiadd  WORD PTR [ecx]
  409a0b:	fnstsw WORD PTR [edx]
  409a0d:	pop    edx
  409a0e:	in     eax,0xbd
  409a10:	mov    esp,0x3d3436dd
  409a15:	push   0x73
  409a17:	scas   al,BYTE PTR es:[edi]
  409a18:	retf   0x6351
  409a1b:	(bad)  
  409a1c:	icebp  
  409a1d:	sar    DWORD PTR [ebx],1
  409a1f:	sub    DWORD PTR [edx],0x3217caa0
  409a25:	pop    edx
  409a26:	jecxz  0x409a6b
  409a28:	jmp    0x4099ec
  409a2a:	leave  
  409a2b:	mov    al,0x26
  409a2d:	idiv   edx
  409a2f:	jnp    0x4099c1
  409a31:	push   0x3
  409a33:	enter  0x2581,0xc
  409a37:	mov    al,0x42
  409a39:	add    BYTE PTR [eax],al
  409a3b:	add    BYTE PTR [eax],al
  409a3d:	add    BYTE PTR [ebx+0x42b00c35],cl
  409a43:	add    BYTE PTR [esi-0x77],al
  409a46:	xor    eax,0x42b00c
  409a4b:	cmp    DWORD PTR ds:0x42b00c,0x29
  409a52:	jne    0x409a63
  409a58:	push   0x42e1b7
  409a5d:	call   DWORD PTR ds:0x42ed57
  409a63:	cmp    DWORD PTR ds:0x42b00c,0x1e
  409a6a:	jb     0x409a3e
  409a70:	sbb    esi,DWORD PTR ds:0x42a00c
  409a76:	mov    DWORD PTR [ebp-0x8],ecx
  409a79:	mov    ecx,DWORD PTR [ebp-0x14]
  409a7c:	xor    esi,0x35c3
  409a82:	xor    ecx,ebx
  409a84:	inc    DWORD PTR ds:0x42a000
  409a8a:	add    ecx,eax
  409a8c:	mov    DWORD PTR ds:0x429014,0x1c
  409a96:	cmp    DWORD PTR ds:0x429014,0x0
  409a9d:	je     0x409ad1
  409aa3:	cmp    DWORD PTR ds:0x429014,0x28
  409aaa:	jne    0x409ab9
  409ab0:	push   DWORD PTR [ebp-0x14]
  409ab3:	call   DWORD PTR ds:0x42ed5b
  409ab9:	mov    esi,DWORD PTR ds:0x429014
  409abf:	dec    esi
  409ac0:	mov    DWORD PTR ds:0x429014,esi
  409ac6:	jmp    0x409a96
  409acb:	xor    esi,DWORD PTR ds:0x42a01c
  409ad1:	mov    DWORD PTR [ebp-0x2c],ecx
  409ad4:	or     esi,0x1d45
  409ada:	mov    ecx,DWORD PTR [ebp-0x4]
  409add:	xor    ecx,ebx
  409adf:	add    ecx,eax
  409ae1:	mov    DWORD PTR [ebp-0x38],ecx
  409ae4:	dec    DWORD PTR ds:0x42901c
  409aea:	mov    esi,DWORD PTR [ebp-0x4]
  409aed:	xor    esi,ebx
  409aef:	add    esi,eax
  409af1:	sbb    ecx,0x1004
  409af7:	mov    ecx,DWORD PTR [ebp-0x2c]
  409afa:	sub    ecx,eax
  409afc:	lea    edx,[esi-0x3272e0]
  409b02:	xor    ecx,ebx
  409b04:	xor    DWORD PTR ds:0x42d01c,0x7c44
  409b0e:	xor    edx,ebx
  409b10:	cmp    edx,ecx
  409b12:	je     0x409e56
  409b18:	and    DWORD PTR ds:0x429004,0x0
  409b22:	jmp    0x409b34
  409b27:	mov    ecx,DWORD PTR ds:0x429004
  409b2d:	inc    ecx
  409b2e:	mov    DWORD PTR ds:0x429004,ecx
  409b34:	cmp    DWORD PTR ds:0x429004,0x18
  409b3b:	jae    0x409b89
  409b41:	cmp    DWORD PTR ds:0x429004,0xb
  409b48:	jne    0x409b5e
  409b4e:	push   0x42b000
  409b53:	push   0x88b5
  409b58:	call   DWORD PTR ds:0x42ed5f
  409b5e:	cmp    DWORD PTR ds:0x429004,0xa
  409b65:	jne    0x409b78
  409b6b:	mov    ecx,DWORD PTR ds:0x429004
  409b71:	inc    ecx
  409b72:	mov    DWORD PTR ds:0x429004,ecx
  409b78:	jmp    0x409b27
  409b7d:	mov    ecx,DWORD PTR ds:0x429000
  409b83:	or     DWORD PTR ds:0x42c00c,ecx
  409b89:	mov    ecx,DWORD PTR [ebp-0x4]
  409b8c:	xor    ecx,ebx
  409b8e:	sbb    DWORD PTR ds:0x42c010,0x429014
  409b98:	add    ecx,eax
  409b9a:	mov    DWORD PTR ds:0x42d014,0x6091
  409ba4:	cmp    esi,ecx
  409ba6:	mov    DWORD PTR ds:0x429004,0x556c
  409bb0:	jne    0x409e33
  409bb6:	push   DWORD PTR [ebp+0x8]
  409bb9:	adc    DWORD PTR ds:0x42a004,0x6cab
  409bc3:	call   0x404ffa
  409bc8:	mov    DWORD PTR ds:0x429020,0x17
  409bd2:	cmp    DWORD PTR ds:0x429020,0x0
  409bd9:	je     0x409c3a
  409bdf:	cmp    DWORD PTR ds:0x429020,0xa
  409be6:	jne    0x409c0a
  409bec:	push   0x42e126
  409bf1:	push   0x21eb
  409bf6:	push   DWORD PTR [ebp-0x24]
  409bf9:	push   DWORD PTR [ebp-0x28]
  409bfc:	push   0x2bd0
  409c01:	push   DWORD PTR [ebp-0x20]
  409c04:	call   DWORD PTR ds:0x42ed67
  409c0a:	cmp    DWORD PTR ds:0x429020,0xb
  409c11:	jne    0x409c24
  409c17:	mov    ecx,DWORD PTR ds:0x429020
  409c1d:	dec    ecx
  409c1e:	mov    DWORD PTR ds:0x429020,ecx
  409c24:	xor    ecx,ecx
  409c26:	xor    ecx,DWORD PTR ds:0x429020
  409c2c:	dec    ecx
  409c2d:	mov    DWORD PTR ds:0x429020,ecx
  409c33:	jmp    0x409bd2
  409c38:	xor    ecx,edi
  409c3a:	mov    DWORD PTR [ebp-0x20],eax
  409c3d:	mov    eax,DWORD PTR [ebp-0x4]
  409c40:	mov    ecx,DWORD PTR [ebp-0x20]
  409c43:	mov    DWORD PTR ds:0x42c004,0x1b
  409c4d:	cmp    DWORD PTR ds:0x42c004,0x0
  409c54:	je     0x409c81
  409c5a:	cmp    DWORD PTR ds:0x42c004,0x22
  409c61:	jne    0x409c6d
  409c67:	call   DWORD PTR ds:0x42ed6b
  409c6d:	xor    edi,edi
  409c6f:	add    edi,DWORD PTR ds:0x42c004
  409c75:	dec    edi
  409c76:	mov    DWORD PTR ds:0x42c004,edi
  409c7c:	jmp    0x409c4d
  409c81:	xor    eax,ebx
  409c83:	sbb    edi,0x4123
  409c89:	mov    edi,0x3272e0
  409c8e:	xor    DWORD PTR ds:0x42d00c,0x429018
  409c98:	add    eax,edi
  409c9a:	mov    DWORD PTR ds:0x42c00c,0x6160
  409ca4:	cmp    ecx,eax
  409ca6:	je     0x409ec6
  409cac:	add    DWORD PTR ds:0x42c014,0x5bfc
  409cb6:	push   DWORD PTR [ebp-0x20]
  409cb9:	push   DWORD PTR [ebp+0x8]
  409cbc:	or     DWORD PTR ds:0x42d014,0x42b000
  409cc6:	call   0x4113c7
  409ccb:	mov    DWORD PTR ds:0x42d014,0x10
  409cd5:	cmp    DWORD PTR ds:0x42d014,0x0
  409cdc:	je     0x409dd4
  409ce2:	cmp    DWORD PTR ds:0x42d014,0x19
  409ce9:	jne    0x409cff
  409cef:	push   0x429004
  409cf4:	push   0x42e185
  409cf9:	call   DWORD PTR ds:0x42ed6f
  409cff:	mov    ecx,DWORD PTR ds:0x42d014
  409d05:	dec    ecx
  409d06:	mov    DWORD PTR ds:0x42d014,ecx
  409d0c:	jmp    0x409cd5
  409d11:	and    DWORD PTR ds:0x42c018,0x0
  409d1b:	jmp    0x409d2d
  409d20:	mov    ecx,DWORD PTR ds:0x42c018
  409d26:	inc    ecx
  409d27:	mov    DWORD PTR ds:0x42c018,ecx
  409d2d:	cmp    DWORD PTR ds:0x42c018,0x19
  409d34:	jae    0x409dd4
  409d3a:	cmp    DWORD PTR ds:0x42c018,0x5
  409d41:	jne    0x409d52
  409d47:	push   0x42e118
  409d4c:	call   DWORD PTR ds:0x42ed73
  409d52:	cmp    DWORD PTR ds:0x42c018,0x4
  409d59:	jne    0x409d6c
  409d5f:	mov    ecx,DWORD PTR ds:0x42c018
  409d65:	inc    ecx
  409d66:	mov    DWORD PTR ds:0x42c018,ecx
  409d6c:	jmp    0x409d20
  409d71:	mov    DWORD PTR ds:0x429024,0x1c
  409d7b:	cmp    DWORD PTR ds:0x429024,0x0
  409d82:	je     0x409dd4
  409d88:	cmp    DWORD PTR ds:0x429024,0x2
  409d8f:	jne    0x409da0
  409d95:	push   0x18d9
  409d9a:	call   DWORD PTR ds:0x42ed77
  409da0:	cmp    DWORD PTR ds:0x429024,0x3
  409da7:	jne    0x409dba
  409dad:	mov    ecx,DWORD PTR ds:0x429024
  409db3:	dec    ecx
  409db4:	mov    DWORD PTR ds:0x429024,ecx
  409dba:	xor    ecx,ecx
  409dbc:	or     ecx,DWORD PTR ds:0x429024
  409dc2:	dec    ecx
  409dc3:	mov    DWORD PTR ds:0x429024,ecx
  409dc9:	jmp    0x409d7b
  409dce:	and    DWORD PTR ds:0x42c01c,edi
  409dd4:	mov    DWORD PTR [ebp-0x20],eax
  409dd7:	and    DWORD PTR ds:0x42a00c,ecx
  409ddd:	mov    eax,DWORD PTR [ebp-0x4]
  409de0:	mov    ecx,DWORD PTR [ebp-0x20]
  409de3:	dec    DWORD PTR ds:0x42a010
  409de9:	xor    eax,ebx
  409deb:	add    eax,edi
  409ded:	mov    DWORD PTR ds:0x42b00c,0x6616
  409df7:	cmp    ecx,eax
  409df9:	je     0x409ec6
  409dff:	mov    eax,DWORD PTR [ebp-0x20]
  409e02:	mov    eax,DWORD PTR [eax+0x18]
  409e05:	mov    DWORD PTR [ebp-0x2c],eax
  409e08:	mov    eax,DWORD PTR [ebp-0x20]
  409e0b:	mov    ecx,DWORD PTR [ebp+0x8]
  409e0e:	add    ecx,DWORD PTR [eax+0x20]
  409e11:	mov    DWORD PTR [ebp-0x34],ecx
  409e14:	mov    eax,DWORD PTR [ebp-0x20]
  409e17:	mov    ecx,DWORD PTR [ebp+0x8]
  409e1a:	add    ecx,DWORD PTR [eax+0x24]
  409e1d:	mov    DWORD PTR [ebp-0x3c],ecx
  409e20:	mov    eax,DWORD PTR [ebp-0x20]
  409e23:	mov    ecx,DWORD PTR [ebp+0x8]
  409e26:	add    ecx,DWORD PTR [eax+0x1c]
  409e29:	mov    eax,edi
  409e2b:	mov    DWORD PTR [ebp-0x20],ecx
  409e2e:	jmp    0x409e8e
  409e33:	mov    ecx,DWORD PTR [ebp-0x34]
  409e36:	mov    edx,DWORD PTR [ebp+0x8]
  409e39:	add    edx,DWORD PTR [ecx+esi*4]
  409e3c:	mov    DWORD PTR [ebp-0x30],edx
  409e3f:	mov    ecx,DWORD PTR [ebp-0x4]
  409e42:	mov    edx,DWORD PTR [ebp-0x30]
  409e45:	xor    ecx,ebx
  409e47:	add    ecx,eax
  409e49:	cmp    edx,ecx
  409e4b:	je     0x409e8e
  409e51:	jmp    0x409e7a
  409e56:	mov    ecx,DWORD PTR [ebp-0x4]
  409e59:	mov    edx,DWORD PTR [ebp-0x8]
  409e5c:	xor    ecx,ebx
  409e5e:	add    ecx,eax
  409e60:	cmp    edx,ecx
  409e62:	je     0x409ed2
  409e68:	mov    ecx,DWORD PTR [ebp-0x4]
  409e6b:	mov    edx,DWORD PTR [ebp-0x38]
  409e6e:	xor    ecx,ebx
  409e70:	add    ecx,eax
  409e72:	cmp    edx,ecx
  409e74:	je     0x409ee1
  409e7a:	lea    eax,[ebp-0x8]
  409e7d:	push   eax
  409e7e:	push   DWORD PTR [ebp-0x30]
  409e81:	push   DWORD PTR [ebp+0xc]
  409e84:	call   0x411671
  409e89:	mov    eax,0x3272e0
  409e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  409e91:	mov    edx,DWORD PTR [ebp-0x8]
  409e94:	xor    ecx,ebx
  409e96:	add    ecx,eax
  409e98:	cmp    edx,ecx
  409e9a:	je     0x409eb5
  409ea0:	mov    ecx,DWORD PTR [ebp-0x3c]
  409ea3:	movzx  ecx,WORD PTR [ecx+esi*2]
  409ea7:	mov    edx,DWORD PTR [ebp-0x20]
  409eaa:	mov    ecx,DWORD PTR [edx+ecx*4]
  409ead:	mov    DWORD PTR [ebp-0x40],ecx
  409eb0:	jmp    0x409e56
  409eb5:	mov    ecx,DWORD PTR [ebp-0x14]
  409eb8:	xor    ecx,ebx
  409eba:	lea    esi,[esi+ecx*1+0x3272e0]
  409ec1:	jmp    0x409af1
  409ec6:	mov    eax,DWORD PTR [ebp-0x4]
  409ec9:	xor    eax,ebx
  409ecb:	add    eax,edi
  409ecd:	jmp    0x40a045
  409ed2:	mov    eax,DWORD PTR [ebp-0x4]
  409ed5:	xor    eax,ebx
  409ed7:	add    eax,0x3272e0
  409edc:	jmp    0x40a045
  409ee1:	mov    ecx,DWORD PTR [ebp-0x40]
  409ee4:	add    ecx,DWORD PTR [ebp+0x8]
  409ee7:	mov    DWORD PTR [ebp-0x10],ecx
  409eea:	mov    ecx,DWORD PTR [ebp-0x24]
  409eed:	test   ecx,ecx
  409eef:	je     0x409fd0
  409ef5:	mov    DWORD PTR [ebp-0x28],0x0
  409efc:	push   0x3
  409efe:	xor    edx,edx
  409f00:	pop    edx
  409f01:	add    edx,0x8
  409f04:	push   edx
  409f05:	pop    ecx
  409f06:	push   0x6
  409f08:	dec    ecx
  409f09:	pop    ebx
  409f0a:	dec    ebx
  409f0b:	xchg   ebx,ecx
  409f0d:	sub    ebx,ecx
  409f0f:	xchg   ebx,ecx
  409f11:	dec    ecx
  409f12:	mov    eax,DWORD PTR [ebp-0x24]
  409f15:	imul   eax,ecx
  409f18:	sub    esp,eax
  409f1a:	mov    DWORD PTR [ebp-0x28],esp
  409f1d:	mov    eax,DWORD PTR [ebp-0x4]
  409f20:	mov    ecx,0x7510899
  409f25:	xor    eax,ecx
  409f27:	mov    edx,0x3272e0
  409f2c:	add    eax,edx
  409f2e:	mov    DWORD PTR [ebp+0x8],eax
  409f31:	mov    eax,DWORD PTR [ebp-0x14]
  409f34:	xor    eax,ecx
  409f36:	add    eax,edx
  409f38:	mov    edx,DWORD PTR [ebp+0x14]
  409f3b:	imul   eax,DWORD PTR [edx]
  409f3e:	mov    edx,DWORD PTR [ebp-0x4]
  409f41:	xor    edx,ecx
  409f43:	mov    ecx,DWORD PTR [ebp+0x8]
  409f46:	lea    ecx,[edx+ecx*1+0x3272e0]
  409f4d:	cmp    ecx,eax
  409f4f:	je     0x409fc6
  409f55:	mov    edi,DWORD PTR [ebp-0x14]
  409f58:	mov    eax,DWORD PTR [ebp+0x8]
  409f5b:	mov    edx,DWORD PTR [ebp+0x14]
  409f5e:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409f62:	mov    ecx,0x7510899
  409f67:	xor    edx,edx
  409f69:	xor    edi,ecx
  409f6b:	mov    esi,0x3272e0
  409f70:	add    edi,esi
  409f72:	div    edi
  409f74:	mov    edx,DWORD PTR [ebp-0x4]
  409f77:	xor    edx,ecx
  409f79:	lea    eax,[edx+eax*1+0x3272e0]
  409f80:	mov    edx,DWORD PTR [ebp+0x8]
  409f83:	mov    edi,DWORD PTR [ebp-0x28]
  409f86:	mov    DWORD PTR [edi+edx*4],eax
  409f89:	mov    eax,DWORD PTR [ebp-0x14]
  409f8c:	mov    edx,DWORD PTR [ebp+0x8]
  409f8f:	xor    eax,ecx
  409f91:	lea    eax,[eax+edx*1+0x3272e0]
  409f98:	mov    DWORD PTR [ebp+0x8],eax
  409f9b:	mov    eax,DWORD PTR [ebp-0x14]
  409f9e:	mov    edx,DWORD PTR [ebp+0x14]
  409fa1:	xor    eax,ecx
  409fa3:	add    eax,esi
  409fa5:	imul   eax,DWORD PTR [edx]
  409fa8:	mov    edx,DWORD PTR [ebp-0x4]
  409fab:	xor    edx,ecx
  409fad:	mov    ecx,DWORD PTR [ebp+0x8]
  409fb0:	lea    ecx,[edx+ecx*1+0x3272e0]
  409fb7:	cmp    ecx,eax
  409fb9:	jne    0x409f55
  409fbf:	mov    eax,esi
  409fc1:	jmp    0x409fcb
  409fc6:	mov    eax,0x3272e0
  409fcb:	mov    ebx,0x7510899
  409fd0:	mov    ecx,DWORD PTR [ebp-0x4]
  409fd3:	xor    ecx,ebx
  409fd5:	add    ecx,eax
  409fd7:	mov    DWORD PTR [ebp-0xc],ecx
  409fda:	mov    ebx,0x65655
  409fdf:	add    ebx,0x3234
  409fe5:	xchg   ebx,esi
  409fe7:	xor    ebx,ebx
  409fe9:	push   esi
  409fea:	mov    esi,ebx
  409fec:	pop    ebx
  409fed:	mov    edx,esi
  409fef:	add    ebx,0x1002
  409ff5:	lea    eax,[ebp-0x10]
  409ff8:	add    edx,eax
  409ffa:	add    edx,0x5
  409ffd:	push   edx
  409ffe:	inc    esi
  409fff:	pop    ecx
  40a000:	dec    ecx
  40a001:	xchg   ecx,eax
  40a002:	dec    eax
  40a003:	xchg   ecx,eax
  40a004:	dec    ecx
  40a005:	xchg   ecx,edx
  40a007:	dec    edx
  40a008:	push   edx
  40a009:	mov    edx,ebx
  40a00b:	pop    ebx
  40a00c:	dec    ebx
  40a00d:	call   DWORD PTR [ebx]
  40a00f:	cmp    DWORD PTR [ebp+0x10],esi
  40a012:	je     0x40a031
  40a018:	xchg   edx,eax
  40a019:	push   0xb
  40a01b:	pop    ecx
  40a01c:	push   0x4
  40a01e:	pop    ebx
  40a01f:	inc    ebx
  40a020:	xchg   ebx,ecx
  40a022:	sub    ebx,ecx
  40a024:	xchg   ebx,ecx
  40a026:	dec    ecx
  40a027:	dec    ecx
  40a028:	mov    eax,DWORD PTR [ebp-0x24]
  40a02b:	imul   eax,ecx
  40a02e:	add    esp,eax
  40a030:	xchg   edx,eax
  40a031:	push   eax
  40a032:	xor    ebx,ebx
  40a034:	mov    edx,esp
  40a036:	dec    edx
  40a037:	inc    ebx
  40a038:	add    ebx,DWORD PTR [edx+ebx*1]
  40a03b:	dec    ebx
  40a03c:	xor    edx,edx
  40a03e:	add    DWORD PTR [ebp-0xc],ebx
  40a041:	pop    ebx
  40a042:	mov    eax,DWORD PTR [ebp-0xc]
  40a045:	pop    edi
  40a046:	pop    esi
  40a047:	pop    ebx
  40a048:	leave  
  40a049:	ret    0x10
  40a04c:	push   ebp
  40a04d:	mov    ebp,esp
  40a04f:	sub    esp,0x7c
  40a052:	sbb    eax,DWORD PTR ds:0x429020
  40a058:	push   esi
  40a059:	mov    ecx,DWORD PTR ds:0x42c018
  40a05f:	adc    ecx,DWORD PTR ds:0x42c004
  40a065:	mov    DWORD PTR ds:0x42c018,ecx
  40a06b:	push   edi
  40a06c:	mov    eax,ds:0x42e42f
  40a071:	adc    ecx,esi
  40a073:	mov    DWORD PTR [ebp-0x24],eax
  40a076:	mov    eax,ds:0x42e53b
  40a07b:	mov    DWORD PTR [ebp-0x34],eax
  40a07e:	and    DWORD PTR ds:0x429008,0x0
  40a088:	jmp    0x40a09c
  40a08d:	xor    edi,edi
  40a08f:	or     edi,DWORD PTR ds:0x429008
  40a095:	inc    edi
  40a096:	mov    DWORD PTR ds:0x429008,edi
  40a09c:	cmp    DWORD PTR ds:0x429008,0x18
  40a0a3:	jae    0x40a0ce
  40a0a9:	cmp    DWORD PTR ds:0x429008,0x26
  40a0b0:	jne    0x40a0c9
  40a0b6:	push   0x42e23b
  40a0bb:	push   0x42e1b7
  40a0c0:	push   DWORD PTR [ebp-0x24]
  40a0c3:	call   DWORD PTR ds:0x42ed83
  40a0c9:	jmp    0x40a08d
  40a0ce:	and    DWORD PTR [ebp-0x30],0x0
  40a0d2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40a0d9:	mov    ecx,DWORD PTR ds:0x42c00c
  40a0df:	adc    DWORD PTR ds:0x42c010,ecx
  40a0e5:	jmp    0x40c45f
  40a0ea:	gs push 0x7b5b7b64
  40a0f0:	jne    0x40a07a
  40a0f2:	jle    0x40a0d8
  40a0f4:	(bad)  
  40a0f5:	(bad)  
  40a0f6:	fs or  eax,0x2c43e9
  40a0fc:	jp     0x40a178
  40a0fe:	adc    eax,0x3b7a7a5f
  40a103:	cmp    edi,DWORD PTR [esi]
  40a105:	hlt    
  40a106:	out    dx,eax
  40a107:	inc    esp
  40a108:	mov    ecx,0x8f8f6d9b
  40a10d:	fisttp DWORD PTR [ebp+0x52a78cfb]
  40a113:	mov    ecx,0x7827c99e
  40a118:	add    DWORD PTR ds:0xd28fbeae,0xfffffff6
  40a11f:	mov    cl,0x3d
  40a121:	ins    BYTE PTR es:[edi],dx
  40a122:	inc    esi
  40a123:	ret    0x5bcd
  40a126:	pop    ecx
  40a127:	rol    ecx,1
  40a129:	sar    BYTE PTR [ebx+0x1a055d34],cl
  40a12f:	pop    ebp
  40a130:	and    eax,0x84a15113
  40a135:	sar    bl,1
  40a137:	xor    esi,edx
  40a139:	fwait
  40a13a:	retf   
  40a13b:	sbb    BYTE PTR [eax],dh
  40a13d:	push   0x2b
  40a13f:	cs mov bl,0x13
  40a142:	mov    al,ds:0xa49c0327
  40a147:	sub    dh,BYTE PTR [edi+0x669297be]
  40a14d:	sbb    cl,dh
  40a14f:	or     eax,0xb1f87e8c
  40a154:	sub    al,0x93
  40a156:	cmp    ebp,esp
  40a158:	mov    bh,0x81
  40a15a:	loopne 0x40a0fe
  40a15c:	test   DWORD PTR [esi+0x227410b2],ebp
  40a162:	xchg   ecx,eax
  40a163:	les    ebx,FWORD PTR [esi+0x6eb03767]
  40a169:	test   DWORD PTR [eax+0x4c],ebp
  40a16c:	xchg   ebx,eax
  40a16d:	lahf   
  40a16e:	cli    
  40a16f:	xchg   DWORD PTR [edx+0x2b73da52],ecx
  40a175:	jmp    0x3c18b2d4
  40a17a:	adc    edx,edi
  40a17c:	mov    eax,ds:0xe4a61bba
  40a181:	inc    ebp
  40a182:	dec    ebx
  40a183:	loop   0x40a160
  40a185:	mov    edi,0x93b57253
  40a18a:	and    al,dl
  40a18c:	loopne 0x40a17b
  40a18e:	push   ebx
  40a18f:	add    al,0xe
  40a191:	fs jns 0x40a13f
  40a194:	dec    ecx
  40a195:	xor    eax,0x41dd8869
  40a19a:	cmp    DWORD PTR ds:0xedd5fe8e,ebx
  40a1a0:	push   0x83e4b678
  40a1a5:	sahf   
  40a1a6:	sti    
  40a1a7:	lahf   
  40a1a8:	imul   esi,DWORD PTR [ebp+0x5041b35e],0xffffff82
  40a1af:	retf   0xe612
  40a1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b3:	mov    edx,0x4d1b19af
  40a1b8:	fsub   st(7),st
  40a1ba:	dec    edi
  40a1bb:	add    al,0xb
  40a1bd:	imul   ebx,DWORD PTR [edi+0x59d31030],0xb9c56f4a
  40a1c7:	fwait
  40a1c8:	mov    ecx,edi
  40a1ca:	loope  0x40a165
  40a1cc:	ret    0x8981
  40a1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d0:	addr16 retf 0xef5c
  40a1d4:	mov    edi,esi
  40a1d6:	mov    ecx,0xecaae3b2
  40a1db:	mov    ds:0xf1f306c8,al
  40a1e0:	(bad)  
  40a1e1:	sub    edx,DWORD PTR [ebp-0x6f4115b6]
  40a1e7:	bound  edi,QWORD PTR [eax-0x2f24867c]
  40a1ed:	inc    edi
  40a1ee:	add    al,al
  40a1f0:	jb     0x40a1bc
  40a1f2:	or     esi,DWORD PTR [eax+0x1f62971c]
  40a1f8:	mov    WORD PTR [ebp-0x75da43dc],fs
  40a1fe:	out    dx,al
  40a1ff:	mov    eax,0xcffa008
  40a204:	dec    esp
  40a205:	sub    BYTE PTR ds:0xe79db3ef,bl
  40a20b:	xor    al,0x95
  40a20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20e:	mov    ds:0x5a9ee1ae,eax
  40a213:	pushf  
  40a214:	sbb    al,0x32
  40a216:	inc    ebx
  40a217:	adc    esp,DWORD PTR [esi+0x34]
  40a21a:	xchg   ecx,eax
  40a21b:	adc    al,0xd9
  40a21d:	mov    BYTE PTR [ebp-0x3eab33b1],cl
  40a223:	ret    0xbe9b
  40a226:	cmp    esi,esi
  40a228:	add    DWORD PTR [esp+ebx*8],ecx
  40a22b:	shl    DWORD PTR [esi],1
  40a22d:	fadd   QWORD PTR [ebx+0x2c2a5fff]
  40a233:	fdiv   QWORD PTR [edx-0x3f]
  40a236:	xchg   esi,eax
  40a237:	in     eax,0xff
  40a239:	lock push edi
  40a23b:	addr16 push 0x6d
  40a23e:	and    DWORD PTR ds:0x567493ce,0xe7909299
  40a248:	push   ebx
  40a249:	sbb    BYTE PTR [ebp+0x50],dh
  40a24c:	sbb    dl,BYTE PTR [ecx+0xd87f718]
  40a252:	mov    bl,0x1d
  40a254:	fild   DWORD PTR ds:0xae0391c9
  40a25a:	ss sbb bl,0xe0
  40a25e:	shl    BYTE PTR [edi-0x4a691180],0x9c
  40a265:	imul   esi,DWORD PTR [esi],0xcb242404
  40a26b:	loope  0x40a274
  40a26d:	lods   eax,DWORD PTR ds:[esi]
  40a26e:	outs   dx,BYTE PTR ds:[esi]
  40a26f:	(bad)  
  40a270:	pusha  
  40a271:	push   esi
  40a272:	cmp    al,0x60
  40a274:	lods   al,BYTE PTR ds:[esi]
  40a275:	test   ebp,ecx
  40a277:	mov    esi,0xa6c1e0b7
  40a27c:	mov    dl,0xcf
  40a27e:	dec    edi
  40a27f:	(bad)  
  40a280:	in     eax,dx
  40a281:	jl     0x40a211
  40a283:	inc    ebx
  40a284:	bound  edx,QWORD PTR [edi-0x3f]
  40a287:	add    cl,BYTE PTR [ecx-0x64]
  40a28a:	aad    0xe9
  40a28c:	cs pop ds
  40a28e:	xchg   ecx,eax
  40a28f:	mov    edi,0x295d2281
  40a294:	rol    BYTE PTR [edi-0x67],cl
  40a297:	jno    0x40a284
  40a299:	inc    esp
  40a29a:	push   esp
  40a29b:	data16 fcomp st(7)
  40a29e:	test   DWORD PTR [ebx+0xb349793],ebp
  40a2a4:	les    ebx,FWORD PTR [ebp+0x62234b8b]
  40a2aa:	sbb    ebx,esi
  40a2ac:	or     BYTE PTR [edx-0x50b84860],0xf0
  40a2b3:	push   edi
  40a2b4:	mov    ebp,0xcb6c5e3f
  40a2b9:	pushf  
  40a2ba:	mov    ch,0x7
  40a2bc:	jmp    0x40a285
  40a2be:	icebp  
  40a2bf:	pusha  
  40a2c0:	out    dx,eax
  40a2c1:	ror    BYTE PTR [esi-0x45fdd2ac],0xd5
  40a2c8:	and    eax,DWORD PTR [edi]
  40a2ca:	js     0x40a329
  40a2cc:	jns    0x40a28f
  40a2ce:	sub    eax,0x5e0960f3
  40a2d3:	shr    BYTE PTR [edx-0x19],cl
  40a2d6:	repnz add BYTE PTR [ecx],dl
  40a2d9:	shl    BYTE PTR [ecx],cl
  40a2db:	les    ebx,FWORD PTR ss:[eax-0x2a8bfb18]
  40a2e2:	imul   esp,DWORD PTR [ecx+0x31aa589d],0x4f
  40a2e9:	sub    eax,0xcf9cc8e6
  40a2ee:	mov    eax,0x911bfa3
  40a2f3:	mov    esi,0x197d0d3f
  40a2f8:	cmp    al,0x4c
  40a2fa:	inc    esp
  40a2fb:	jbe    0x40a335
  40a2fd:	push   esp
  40a2fe:	inc    ecx
  40a2ff:	mov    ds:0x9ac1e22,eax
  40a304:	test   BYTE PTR [edi-0x7da79023],0x70
  40a30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30c:	push   0xfffffffb
  40a30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30f:	mov    bh,0x9
  40a311:	cmp    al,0xd3
  40a313:	bound  ecx,QWORD PTR [eax+0x3ed964a1]
  40a319:	dec    ebp
  40a31a:	fbld   TBYTE PTR [edx+0x5007d21b]
  40a320:	adc    BYTE PTR ds:0xd46ff414,ch
  40a326:	(bad)  [eax-0x478199a3]
  40a32c:	stc    
  40a32d:	or     eax,0x3efaa435
  40a332:	inc    ebx
  40a333:	mov    cl,BYTE PTR [edx+ebx*2]
  40a336:	jne    0x40a371
  40a338:	hlt    
  40a339:	in     eax,dx
  40a33a:	xor    eax,0xac1dd807
  40a33f:	gs and al,0x46
  40a342:	test   BYTE PTR ds:[ebx+ebp*4+0x41],ch
  40a347:	pusha  
  40a348:	fmul   st(6),st
  40a34a:	outs   dx,BYTE PTR ds:[esi]
  40a34b:	fst    DWORD PTR [ebx]
  40a34d:	test   eax,0x432e593a
  40a352:	stc    
  40a353:	repnz icebp 
  40a355:	mov    ds:0x1be06442,eax
  40a35a:	push   0x50
  40a35c:	inc    edi
  40a35d:	or     eax,0x40a0cd8d
  40a362:	leave  
  40a363:	dec    ebx
  40a364:	dec    ebp
  40a365:	sbb    ah,cl
  40a367:	shl    DWORD PTR [edx+0x44],0x40
  40a36b:	(bad)  
  40a36c:	shr    DWORD PTR [edi+0x41101067],1
  40a372:	adc    edi,DWORD PTR [ecx]
  40a374:	add    eax,0x8fbc7c39
  40a379:	mov    eax,DWORD PTR [edi+0x0]
  40a37c:	rcl    DWORD PTR [ebx+0x1f549836],0x77
  40a383:	push   0x5a
  40a385:	add    al,0x4d
  40a387:	pop    esi
  40a388:	pop    ecx
  40a389:	or     al,0x5b
  40a38b:	cmc    
  40a38c:	mov    esi,0xba347920
  40a391:	push   esi
  40a392:	lea    esp,[ebx+0x24e8890e]
  40a398:	out    dx,al
  40a399:	xchg   esi,eax
  40a39a:	call   0x4bea685f
  40a39f:	cs lock gs jge 0x40a354
  40a3a4:	imul   esp,DWORD PTR [ebx],0xc9e8305f
  40a3aa:	lods   al,BYTE PTR ds:[esi]
  40a3ab:	aaa    
  40a3ac:	and    al,0x62
  40a3ae:	sbb    al,0xa5
  40a3b0:	fistp  QWORD PTR [eax+eax*1+0x56]
  40a3b4:	cli    
  40a3b5:	jl     0x40a41d
  40a3b7:	idiv   BYTE PTR [edi+ecx*2+0x46]
  40a3bb:	jmp    0xc104:0xb5ab48e1
  40a3c2:	and    eax,edx
  40a3c4:	mov    al,ds:0x462d19d8
  40a3c9:	push   0x22
  40a3cb:	out    dx,eax
  40a3cc:	inc    DWORD PTR [ecx+edi*1]
  40a3cf:	sub    ecx,0xffffffc5
  40a3d2:	pop    edx
  40a3d3:	scas   eax,DWORD PTR es:[edi]
  40a3d4:	mov    ebx,DWORD PTR [edx+esi*1+0x423b3e8e]
  40a3db:	lea    edi,[ebx+0x6cb5e7be]
  40a3e1:	jmp    0x40a40a
  40a3e3:	add    DWORD PTR [esi+0x46],esi
  40a3e6:	test   al,0xcc
  40a3e8:	arpl   WORD PTR [eax+0x2f9c13bd],dx
  40a3ee:	jbe    0x40a3f3
  40a3f0:	ja     0x40a3af
  40a3f2:	popa   
  40a3f3:	xchg   esi,eax
  40a3f4:	frstor [edx+0xfcc606c]
  40a3fa:	sbb    edx,DWORD PTR ds:0x8e8f376
  40a400:	stc    
  40a401:	popa   
  40a402:	into   
  40a403:	fst    DWORD PTR [eax+ecx*4+0x17]
  40a407:	jl     0x40a38e
  40a409:	nop
  40a40a:	inc    esp
  40a40b:	adc    dl,BYTE PTR [ebp-0x35]
  40a40e:	xchg   edx,eax
  40a40f:	ret    0xe40e
  40a412:	outs   dx,DWORD PTR ds:[esi]
  40a413:	push   es
  40a414:	mov    BYTE PTR [eax+0x2d61c123],ah
  40a41a:	ins    DWORD PTR es:[edi],dx
  40a41b:	mov    dl,BYTE PTR [ebx+0x3b]
  40a41e:	xchg   esi,eax
  40a41f:	imul   esp,DWORD PTR [ecx+0x1f],0xb5e81d36
  40a426:	neg    BYTE PTR [ecx+eiz*2-0x14]
  40a42a:	ret    
  40a42b:	cs test eax,0xed42b45c
  40a431:	pop    eax
  40a432:	cwde   
  40a433:	repnz xor BYTE PTR [eax],bl
  40a436:	es add al,0x65
  40a439:	pop    ss
  40a43a:	adc    ebp,eax
  40a43c:	icebp  
  40a43d:	pop    edx
  40a43e:	call   0x71acb324
  40a443:	xchg   edi,eax
  40a444:	arpl   WORD PTR [edi+0x7c],bp
  40a447:	test   eax,0x8c5c0f63
  40a44c:	retf   0x626a
  40a44f:	jnp    0x40a4c2
  40a451:	call   0x76f8:0xc501a722
  40a458:	icebp  
  40a459:	cmp    DWORD PTR [edx],esp
  40a45b:	test   BYTE PTR ss:[edi+0x2fbec947],cl
  40a462:	jmp    0xa9508fd3
  40a467:	mov    esi,DWORD PTR [ebp+0xb2f8ff2]
  40a46d:	cs in  al,0x93
  40a470:	lods   al,BYTE PTR ds:[esi]
  40a471:	push   eax
  40a472:	mov    edx,0xb3315c01
  40a477:	cmp    DWORD PTR ds:0x739cee91,0x7e
  40a47e:	ins    DWORD PTR es:[edi],dx
  40a47f:	les    eax,FWORD PTR [edi]
  40a481:	call   0xabc44059
  40a486:	inc    eax
  40a487:	push   ecx
  40a488:	xchg   DWORD PTR ds:0x6e2d19da,ebp
  40a48e:	or     DWORD PTR [edi+0x6e],esi
  40a491:	repz lahf 
  40a493:	clc    
  40a494:	pop    es
  40a495:	lds    edx,FWORD PTR [edi]
  40a497:	gs xchg esp,eax
  40a499:	cli    
  40a49a:	scas   al,BYTE PTR es:[edi]
  40a49b:	mov    bl,dl
  40a49d:	cli    
  40a49e:	mov    ebx,0x4d1b3085
  40a4a3:	out    0x62,al
  40a4a5:	xchg   ecx,eax
  40a4a6:	xor    BYTE PTR [eax+0x58c78adf],ah
  40a4ac:	mov    edi,DWORD PTR [esi+0x44]
  40a4af:	in     eax,dx
  40a4b0:	frstor [ebp+0xe]
  40a4b3:	repz imul eax,DWORD PTR [ecx+esi*8-0x3e],0xf715ea56
  40a4bc:	fisub  DWORD PTR [edx+0x53]
  40a4bf:	xlat   BYTE PTR ds:[ebx]
  40a4c0:	xor    ch,BYTE PTR [eax]
  40a4c2:	test   eax,0x5143c012
  40a4c7:	mov    ds:0xb61aa0cb,eax
  40a4cc:	mov    eax,0x4581e64b
  40a4d1:	in     al,dx
  40a4d2:	push   es
  40a4d3:	cmp    esi,0x7add0808
  40a4d9:	push   eax
  40a4da:	dec    ecx
  40a4db:	ja     0x40a499
  40a4dd:	push   ebx
  40a4de:	cli    
  40a4df:	adc    al,0x1b
  40a4e1:	les    eax,FWORD PTR [esi+0x25358b11]
  40a4e7:	xlat   BYTE PTR ds:[ebx]
  40a4e8:	loopne 0x40a495
  40a4ea:	mov    BYTE PTR [esi],bl
  40a4ec:	sub    eax,0x78caaedb
  40a4f1:	aad    0xc2
  40a4f3:	ret    0xd082
  40a4f6:	pop    ds
  40a4f7:	push   es
  40a4f8:	push   esp
  40a4f9:	fistp  QWORD PTR [esi-0x47]
  40a4fc:	int    0x92
  40a4fe:	sahf   
  40a4ff:	fdiv   QWORD PTR [edx]
  40a501:	mov    bh,BYTE PTR [edx-0x65067891]
  40a507:	add    BYTE PTR [edx+ebp*1-0x7f],bl
  40a50b:	inc    esi
  40a50c:	das    
  40a50d:	leave  
  40a50e:	sub    edi,eax
  40a510:	inc    BYTE PTR [edi+0x591e23f6]
  40a516:	scas   al,BYTE PTR es:[edi]
  40a517:	cmp    BYTE PTR [ecx-0x40abc8e4],ch
  40a51d:	xchg   ebx,eax
  40a51e:	ss cmp bl,dh
  40a521:	mov    ebx,0xce520f40
  40a526:	stos   BYTE PTR es:[edi],al
  40a527:	shl    bl,1
  40a529:	adc    BYTE PTR [ebp+0x7468a2f1],cl
  40a52f:	popf   
  40a530:	stos   BYTE PTR es:[edi],al
  40a531:	repz sbb eax,0x965f05cb
  40a537:	call   0x77fc646c
  40a53c:	push   DWORD PTR [edi-0x51]
  40a53f:	xchg   ebp,eax
  40a540:	fsubr  DWORD PTR [esi]
  40a542:	and    al,BYTE PTR [ecx]
  40a544:	jg     0x40a4eb
  40a546:	pop    ebx
  40a547:	stos   BYTE PTR es:[edi],al
  40a548:	sbb    al,BYTE PTR [ebx]
  40a54a:	out    0xb4,al
  40a54c:	out    0xad,eax
  40a54e:	repnz dec edi
  40a550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a551:	lods   eax,DWORD PTR es:[esi]
  40a553:	repnz or ebx,0x2e618dd8
  40a55a:	call   0xc14d:0x72db0aba
  40a561:	aaa    
  40a562:	or     al,0x5a
  40a564:	hlt    
  40a565:	fdiv   st(6),st
  40a567:	fs sti 
  40a569:	xor    al,0x80
  40a56b:	fcmove st,st(1)
  40a56d:	aam    0xf3
  40a56f:	call   0xf805:0xa7ca2412
  40a576:	fcom   DWORD PTR [esi-0x5b]
  40a579:	ja     0x40a5c9
  40a57b:	lds    esp,FWORD PTR [edi+0x4a]
  40a57e:	iret   
  40a57f:	test   cl,ah
  40a581:	or     ch,BYTE PTR [esi-0x66]
  40a584:	nop
  40a585:	mov    edi,0xd1242d6f
  40a58a:	imul   ebp,DWORD PTR [ebp+ecx*8+0x51],0xfffffff1
  40a58f:	icebp  
  40a590:	sbb    al,0xf5
  40a592:	jge    0x40a5fb
  40a594:	jg     0x40a580
  40a596:	arpl   WORD PTR [ebx+0x2f],bp
  40a599:	sbb    eax,0x9ea8cbb3
  40a59e:	(bad)  [eax+0x6dc5a67]
  40a5a4:	inc    ecx
  40a5a5:	mov    WORD PTR [eax+0x3c],ss
  40a5a8:	xchg   ebp,eax
  40a5a9:	jmp    0x967c17a9
  40a5ae:	aad    0xc0
  40a5b0:	pop    ebx
  40a5b1:	imul   ebp,DWORD PTR [eax+edi*4],0x1f
  40a5b5:	dec    esp
  40a5b6:	jge    0x40a626
  40a5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b9:	popf   
  40a5ba:	add    eax,0x594ac563
  40a5bf:	scas   eax,DWORD PTR es:[edi]
  40a5c0:	sub    DWORD PTR [edi-0x21fe8423],0x2a
  40a5c7:	inc    eax
  40a5c8:	lahf   
  40a5c9:	add    BYTE PTR [edi-0x51],bh
  40a5cc:	sub    DWORD PTR [esi+0x7b05d0df],esp
  40a5d2:	lock stc 
  40a5d4:	hlt    
  40a5d5:	inc    esi
  40a5d6:	push   esi
  40a5d7:	jl     0x40a5c9
  40a5d9:	and    ch,BYTE PTR [edx]
  40a5db:	lea    edi,[edi-0x5b]
  40a5de:	jp     0x40a565
  40a5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5e1:	push   ecx
  40a5e2:	retf   0x5f3c
  40a5e5:	or     edi,edx
  40a5e7:	adc    al,0x7
  40a5e9:	clc    
  40a5ea:	mov    esi,0xc428769a
  40a5ef:	enter  0x942a,0xe4
  40a5f3:	xchg   ecx,eax
  40a5f4:	repz mov eax,ds:0xbd6935db
  40a5fa:	xchg   esi,eax
  40a5fb:	xchg   edi,eax
  40a5fc:	inc    edx
  40a5fd:	and    cl,bh
  40a5ff:	push   ebp
  40a600:	jbe    0x40a631
  40a602:	leave  
  40a603:	jnp    0x40a5af
  40a605:	pop    esi
  40a606:	xchg   ebp,eax
  40a607:	sbb    bh,BYTE PTR [edi-0x32a39461]
  40a60d:	mov    DWORD PTR ds:0xa73c3493,0x861f0853
  40a617:	iret   
  40a618:	pop    es
  40a619:	cmp    edx,ebx
  40a61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61c:	fsubr  DWORD PTR [ebp+0x37]
  40a61f:	xchg   ebp,eax
  40a620:	jbe    0x40a5b8
  40a622:	das    
  40a623:	shr    ebp,1
  40a625:	xor    BYTE PTR [ecx-0xdafc33b],cl
  40a62b:	dec    esi
  40a62c:	ret    0xb5b5
  40a62f:	es shr esi,cl
  40a632:	xchg   BYTE PTR [esi+0x14070158],ch
  40a638:	push   esp
  40a639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63a:	out    0x9f,eax
  40a63c:	scas   al,BYTE PTR es:[edi]
  40a63d:	js     0x40a5d7
  40a63f:	inc    esp
  40a640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a642:	jns    0x40a5d8
  40a644:	les    esi,FWORD PTR [bp+0x4074]
  40a649:	aam    0xe
  40a64b:	mov    esp,0x8a2232ea
  40a650:	imul   edi,DWORD PTR [edi+0x551699f],0x37
  40a657:	fs dec edi
  40a659:	jle    0x40a64a
  40a65b:	adc    edi,DWORD PTR [eax]
  40a65d:	jecxz  0x40a5fa
  40a65f:	add    al,0x1e
  40a661:	imul   edi,DWORD PTR [eax],0x6e
  40a664:	xchg   DWORD PTR [eax],ebx
  40a666:	and    BYTE PTR ss:[eax-0x4c86ff75],bh
  40a66d:	ficomp WORD PTR [eax]
  40a66f:	int3   
  40a670:	mov    al,0xdf
  40a672:	xor    al,0xa8
  40a674:	outs   dx,BYTE PTR ds:[esi]
  40a675:	inc    ebp
  40a676:	pop    DWORD PTR [ebp-0x7bbba5c0]
  40a67c:	jl     0x40a6b8
  40a67e:	fsub   st,st(4)
  40a680:	push   eax
  40a681:	jns    0x40a620
  40a683:	pop    edx
  40a684:	jne    0x40a6f8
  40a686:	mov    ecx,0xa279463e
  40a68b:	aam    0x2f
  40a68d:	std    
  40a68e:	push   edx
  40a68f:	mov    ecx,0xf45a0804
  40a694:	(bad)  
  40a695:	int3   
  40a696:	sbb    DWORD PTR [ebx+eax*1+0x57b47a0],ecx
  40a69d:	add    al,0xbf
  40a69f:	iret   
  40a6a0:	arpl   WORD PTR [edi+0x76],di
  40a6a3:	mov    WORD PTR [esi+eiz*8+0x33e142b2],?
  40a6aa:	clc    
  40a6ab:	not    BYTE PTR [ebx+0x5b]
  40a6ae:	cmc    
  40a6af:	mov    ds:0x39a3497c,al
  40a6b4:	js     0x40a70e
  40a6b6:	ja     0x40a6b7
  40a6b8:	ret    
  40a6b9:	sti    
  40a6ba:	(bad)  
  40a6bb:	das    
  40a6bc:	mov    ah,0x24
  40a6be:	cmp    al,0x15
  40a6c0:	mov    ch,0x6
  40a6c3:	pusha  
  40a6c4:	cmp    DWORD PTR [edi-0x7e01f5dd],ecx
  40a6ca:	xchg   edi,eax
  40a6cb:	ss push cs
  40a6cd:	pop    esi
  40a6ce:	pusha  
  40a6cf:	ins    BYTE PTR es:[edi],dx
  40a6d0:	gs lock es inc ecx
  40a6d4:	int    0xc8
  40a6d6:	or     al,0x88
  40a6d8:	cld    
  40a6d9:	mov    cl,0xe9
  40a6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6dc:	add    dl,0xc5
  40a6df:	lods   eax,DWORD PTR ds:[esi]
  40a6e0:	add    ecx,DWORD PTR [eax+ebx*4]
  40a6e3:	shl    ah,cl
  40a6e5:	ds sar esp,0x27
  40a6e9:	push   ss
  40a6ea:	jb     0x40a6b3
  40a6ec:	dec    ebp
  40a6ed:	jle    0x40a717
  40a6ef:	pop    ebx
  40a6f0:	push   cs
  40a6f1:	rcr    BYTE PTR [ecx-0x6c7283fe],0x43
  40a6f8:	aad    0x4b
  40a6fa:	cmp    eax,0x5d78848a
  40a6ff:	sbb    BYTE PTR [edx+0x1e],ah
  40a702:	jl     0x40a70c
  40a704:	push   edi
  40a705:	fistp  DWORD PTR [esi]
  40a707:	test   dh,dh
  40a709:	lea    edx,ds:0x9b7fa422
  40a70f:	sti    
  40a710:	in     al,dx
  40a711:	sar    edi,1
  40a713:	(bad)  
  40a714:	arpl   WORD PTR [edx],si
  40a716:	daa    
  40a717:	add    eax,0x6b9914a
  40a71c:	jns    0x40a714
  40a71e:	sub    al,BYTE PTR [ebx+ebx*4]
  40a721:	adc    DWORD PTR [edi+0xa95ce87],0x63f42e51
  40a72b:	dec    ecx
  40a72c:	(bad)  
  40a72d:	ret    
  40a72e:	imul   esi,DWORD PTR [edx+0x32],0x7813779
  40a735:	mov    ch,0x34
  40a737:	xchg   esi,eax
  40a738:	jecxz  0x40a6ef
  40a73a:	push   edx
  40a73b:	or     BYTE PTR [esi+0x49b88058],ch
  40a741:	lahf   
  40a742:	push   0x4446265a
  40a747:	loop   0x40a6da
  40a749:	ficom  DWORD PTR [edx]
  40a74b:	call   0xac1c:0xbf845fcb
  40a752:	pop    ss
  40a753:	call   0x8cbd74ea
  40a758:	gs ret 
  40a75a:	in     al,dx
  40a75b:	loopne 0x40a743
  40a75d:	pusha  
  40a75e:	into   
  40a75f:	ficom  DWORD PTR [eax+0x46]
  40a762:	jle    0x40a700
  40a764:	jb     0x40a7a7
  40a766:	scas   al,BYTE PTR es:[edi]
  40a767:	outs   dx,BYTE PTR ds:[esi]
  40a768:	xchg   edi,eax
  40a769:	dec    ebp
  40a76a:	repz sbb DWORD PTR [ecx-0x29579b67],0x7c
  40a772:	int    0x75
  40a774:	ss aaa 
  40a776:	inc    esi
  40a777:	and    al,0x13
  40a779:	out    0xd6,al
  40a77b:	inc    BYTE PTR ds:0x6cd0a2ce
  40a781:	mov    bl,0x9a
  40a783:	fst    DWORD PTR [edx-0x157cb96]
  40a789:	daa    
  40a78a:	imul   ebx,edx,0x842d8f7d
  40a790:	pop    es
  40a791:	mov    eax,ds:0xa8f20214
  40a796:	or     al,0x95
  40a798:	int    0x51
  40a79a:	and    DWORD PTR [edx],0x2d
  40a79d:	ss gs mov ecx,0xb1c1ab17
  40a7a4:	pop    esi
  40a7a5:	cmc    
  40a7a6:	rcr    DWORD PTR [bp-0x7024],1
  40a7ab:	or     edi,DWORD PTR [ebx+eax*4-0x575f5b73]
  40a7b2:	cmp    DWORD PTR [ecx-0x55258ce5],ecx
  40a7b8:	fmul   st(1),st
  40a7ba:	std    
  40a7bb:	jb     0x40a822
  40a7bd:	fs cld 
  40a7bf:	mov    esi,0xc1c8a5a4
  40a7c4:	and    DWORD PTR [ecx+0xcb6c216],0x58
  40a7cb:	outs   dx,BYTE PTR ds:[esi]
  40a7cc:	loope  0x40a78a
  40a7ce:	push   0x882b26d1
  40a7d3:	rcr    dh,0xe4
  40a7d6:	mov    ch,0x99
  40a7d8:	sub    esi,DWORD PTR [edx+0x7cf4330b]
  40a7de:	dec    esi
  40a7df:	dec    edx
  40a7e0:	sbb    DWORD PTR [edx-0x61dd8690],eax
  40a7e6:	cmp    al,0x4e
  40a7e8:	xchg   esi,eax
  40a7e9:	stc    
  40a7ea:	outs   dx,DWORD PTR ds:[esi]
  40a7eb:	popf   
  40a7ec:	les    esp,FWORD PTR [eax-0x3e8ce9c6]
  40a7f2:	aam    0xaf
  40a7f4:	add    dl,BYTE PTR [ebx]
  40a7f6:	adc    al,0xc6
  40a7f8:	lds    edx,FWORD PTR [esi+0x34]
  40a7fb:	mov    cl,0x13
  40a7fd:	(bad)  
  40a7fe:	icebp  
  40a7ff:	mov    eax,ds:0x422bab21
  40a804:	lods   al,BYTE PTR ds:[esi]
  40a805:	std    
  40a806:	sub    BYTE PTR ds:0xd18812d8,ah
  40a80c:	scas   eax,DWORD PTR es:[di]
  40a80e:	push   cs
  40a80f:	in     eax,0xd6
  40a811:	int3   
  40a812:	xor    BYTE PTR ds:0x44f65388,bl
  40a818:	out    dx,al
  40a819:	mov    al,ds:0x16e3304e
  40a81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a81f:	or     DWORD PTR [ebx+0x8],ebp
  40a822:	jae    0x40a7ea
  40a824:	les    eax,FWORD PTR ds:0x4a5a45ae
  40a82a:	inc    esi
  40a82b:	xchg   edi,eax
  40a82c:	ret    
  40a82d:	inc    esi
  40a82e:	fucomp st(3)
  40a831:	fisubr WORD PTR [ebp+eax*2+0xd2fc57a]
  40a838:	sbb    eax,0x4832f088
  40a83d:	mov    dh,0x9e
  40a83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a840:	retf   
  40a841:	es ret 0xba0b
  40a845:	call   0x16d7:0xfbf8e228
  40a84c:	gs jne 0x40a7fa
  40a84f:	push   cs
  40a850:	adc    esi,edi
  40a852:	add    DWORD PTR [ebx+0x12],0x39
  40a856:	loope  0x40a886
  40a858:	xchg   ebp,eax
  40a859:	outs   dx,BYTE PTR ds:[esi]
  40a85a:	hlt    
  40a85b:	and    esi,DWORD PTR [ecx+0x1d]
  40a85e:	dec    edi
  40a85f:	ins    DWORD PTR es:[edi],dx
  40a860:	test   al,0xed
  40a862:	jnp    0x40a7f5
  40a864:	icebp  
  40a865:	out    0x61,al
  40a867:	dec    esi
  40a868:	test   DWORD PTR [ebx],edi
  40a86a:	cmp    ah,dh
  40a86c:	or     DWORD PTR [esi],edx
  40a86e:	enter  0x44f8,0x6a
  40a872:	(bad)  
  40a874:	mov    ch,0xca
  40a876:	mov    esi,0x436fce01
  40a87b:	arpl   WORD PTR [edi-0x78],sp
  40a87e:	test   BYTE PTR [eax+0x66e59de1],dh
  40a884:	push   eax
  40a885:	ins    BYTE PTR es:[edi],dx
  40a886:	cdq    
  40a887:	(bad)  
  40a888:	bound  edx,QWORD PTR [edx-0x1c]
  40a88b:	dec    eax
  40a88c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a88d:	rcr    DWORD PTR [ecx-0x13],cl
  40a890:	(bad)  
  40a891:	cmc    
  40a892:	lahf   
  40a893:	jmp    0x40a884
  40a895:	mov    cl,0xa0
  40a897:	lods   al,BYTE PTR ds:[esi]
  40a898:	pusha  
  40a899:	cmp    BYTE PTR [edx],al
  40a89b:	mov    ah,0xb
  40a89d:	mov    edi,DWORD PTR [ecx+0x19]
  40a8a0:	stos   BYTE PTR es:[edi],al
  40a8a1:	hlt    
  40a8a2:	pop    ds
  40a8a3:	fwait
  40a8a4:	xchg   ecx,eax
  40a8a5:	into   
  40a8a6:	sbb    esp,ecx
  40a8a8:	push   0x30
  40a8aa:	pop    ds
  40a8ab:	imul   ebx,DWORD PTR [esi+esi*1+0x73],0x7a
  40a8b0:	fld    QWORD PTR [edi+0x79bc936f]
  40a8b6:	add    cl,BYTE PTR [ecx]
  40a8b8:	repz xor bh,BYTE PTR [edx+0x350e001d]
  40a8bf:	cmp    al,0x78
  40a8c1:	dec    eax
  40a8c2:	rol    ch,cl
  40a8c4:	and    cl,BYTE PTR [ebp-0x24e2dd56]
  40a8ca:	push   ebp
  40a8cb:	jno    0x40a94b
  40a8cd:	bound  esi,QWORD PTR [ecx+0x73]
  40a8d0:	mov    DWORD PTR [edx+ebx*1-0x1f],edi
  40a8d4:	mov    esp,DWORD PTR [ebp-0x361fed90]
  40a8da:	dec    edi
  40a8db:	xchg   edi,eax
  40a8dc:	mov    al,0x34
  40a8de:	out    dx,eax
  40a8df:	jmp    FWORD PTR es:[ecx-0x18f3ddec]
  40a8e6:	adc    DWORD PTR [edx+0x11f05312],ebx
  40a8ec:	cmp    al,0x68
  40a8ee:	fild   WORD PTR [ecx+0x3bc7a45b]
  40a8f4:	in     eax,dx
  40a8f5:	push   0x9b5d8a49
  40a8fa:	ins    DWORD PTR es:[edi],dx
  40a8fb:	jno    0x40a942
  40a8fd:	jns    0x40a92f
  40a8ff:	sti    
  40a900:	or     BYTE PTR [edi+0x7c],ch
  40a903:	leave  
  40a904:	or     dl,bh
  40a906:	rcl    BYTE PTR ds:[edi-0x3c],0x90
  40a90b:	and    al,0xf6
  40a90d:	icebp  
  40a90e:	jno    0x40a8c3
  40a910:	mov    al,ds:0x56a5a9e0
  40a915:	push   ss
  40a916:	ret    0x47be
  40a919:	inc    esp
  40a91a:	dec    eax
  40a91b:	pop    ecx
  40a91c:	inc    edx
  40a91d:	push   ecx
  40a91e:	and    DWORD PTR ds:0xc0e530e1,ebp
  40a924:	fcomip st,st(3)
  40a926:	(bad)  
  40a928:	test   al,0x8e
  40a92a:	out    0x0,eax
  40a92c:	add    edx,ecx
  40a92e:	mov    ?,WORD PTR [ecx-0x34927a3b]
  40a934:	xchg   ecx,ebx
  40a936:	jnp    0x40a983
  40a938:	cmp    al,0xc7
  40a93a:	pusha  
  40a93b:	sub    cl,BYTE PTR [ecx+edi*8+0x6d]
  40a93f:	pop    ecx
  40a940:	ret    0x48c0
  40a943:	int    0x14
  40a945:	pop    ecx
  40a946:	xchg   DWORD PTR [esi],ebp
  40a948:	pop    ebx
  40a949:	mov    ds:0xeaed162e,eax
  40a94e:	sub    DWORD PTR [ebp+eax*4-0x91a8335],ebx
  40a955:	out    dx,eax
  40a956:	push   ebx
  40a957:	stc    
  40a958:	push   ecx
  40a959:	xchg   BYTE PTR [ebp-0x54d3941a],cl
  40a95f:	ficomp DWORD PTR [esi-0x118b3604]
  40a965:	outs   dx,BYTE PTR ds:[esi]
  40a966:	lahf   
  40a967:	sub    al,0xfc
  40a969:	loop   0x40a96d
  40a96b:	addr16 mov al,0x42
  40a96e:	pop    ecx
  40a96f:	pop    ss
  40a970:	cmp    al,0xc4
  40a972:	iret   
  40a973:	and    ecx,DWORD PTR [ecx-0x20ff7cd8]
  40a979:	bound  ebp,QWORD PTR [esi]
  40a97b:	sti    
  40a97c:	mov    eax,0x849f500
  40a981:	push   0x6a251e05
  40a986:	rcl    BYTE PTR [eax-0x65],cl
  40a989:	cmp    BYTE PTR [esi+0x75ae0e2c],dh
  40a98f:	pop    eax
  40a990:	pop    ecx
  40a991:	leave  
  40a992:	dec    esp
  40a993:	aaa    
  40a994:	test   BYTE PTR [eax+0x1ceec224],0x8
  40a99b:	jb     0x40a9a2
  40a99d:	aam    0x10
  40a99f:	lods   al,BYTE PTR ds:[esi]
  40a9a0:	inc    esi
  40a9a1:	fisttp WORD PTR [ecx-0x5a]
  40a9a4:	mov    ah,0xb7
  40a9a6:	mov    bh,0x98
  40a9a8:	addr16 aad 0x93
  40a9ab:	lea    ebp,ds:0x6f00be71
  40a9b1:	adc    al,0xc
  40a9b3:	pusha  
  40a9b4:	pop    ebp
  40a9b5:	je     0x40a9ff
  40a9b7:	pop    edx
  40a9b8:	jl     0x40a965
  40a9ba:	(bad)  
  40a9bb:	lods   eax,DWORD PTR ds:[esi]
  40a9bc:	sbb    al,0x65
  40a9be:	xor    dl,BYTE PTR [edi-0x41bcd673]
  40a9c4:	xchg   edi,eax
  40a9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c6:	jmp    0x60b47b37
  40a9cb:	sbb    al,0xf2
  40a9cd:	xchg   BYTE PTR [esi+esi*8],dh
  40a9d0:	or     BYTE PTR [ebx-0x1c756430],al
  40a9d6:	and    edx,edx
  40a9d8:	repz sbb BYTE PTR [edx],ah
  40a9db:	rcr    eax,0xf1
  40a9de:	push   ecx
  40a9df:	pop    esp
  40a9e0:	loop   0x40aa36
  40a9e2:	loopne 0x40a9df
  40a9e4:	(bad)  
  40a9e5:	dec    eax
  40a9e6:	mov    WORD PTR [edi-0x38],ds
  40a9e9:	icebp  
  40a9ea:	in     al,dx
  40a9eb:	pop    ebx
  40a9ec:	dec    ecx
  40a9ed:	mov    al,ds:0x2cc24c54
  40a9f2:	and    eax,0x24c34b3d
  40a9f7:	jecxz  0x40a9f3
  40a9f9:	fisttp QWORD PTR [edi+0x354b50fb]
  40a9ff:	push   cs
  40aa00:	mov    edi,0x913b271f
  40aa05:	outs   dx,BYTE PTR ds:[esi]
  40aa06:	mov    ebx,0x30179c44
  40aa0b:	pop    ds
  40aa0c:	sub    dh,BYTE PTR [edx+0x5d82b6e7]
  40aa12:	mov    WORD PTR ds:0x1d789fa6,?
  40aa18:	loope  0x40aa0e
  40aa1a:	in     eax,dx
  40aa1b:	jnp    0x40aa20
  40aa1d:	push   ebx
  40aa1e:	mov    BYTE PTR [edi+eiz*4],0x3d
  40aa22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa23:	jle    0x40aaa0
  40aa25:	les    ebp,FWORD PTR [eax-0x1e9b3d93]
  40aa2b:	scas   al,BYTE PTR es:[edi]
  40aa2c:	add    BYTE PTR [ebx-0x80],0xa0
  40aa30:	mov    bh,0x88
  40aa32:	leave  
  40aa33:	scas   al,BYTE PTR es:[edi]
  40aa34:	sbb    al,BYTE PTR [esi+0x461b048f]
  40aa3a:	xchg   esi,eax
  40aa3b:	test   eax,0x3e02a37a
  40aa40:	imul   esi,DWORD PTR [eax],0xffffff97
  40aa43:	inc    esi
  40aa44:	cmp    eax,0x7e86a8da
  40aa49:	nop
  40aa4a:	sbb    BYTE PTR [eax],bl
  40aa4c:	mov    ebp,0xde450ce6
  40aa51:	repz sub al,0xfc
  40aa54:	pop    esp
  40aa55:	bound  ecx,QWORD PTR [ebp-0x1a]
  40aa58:	jge    0x40aa49
  40aa5a:	jb     0x40aab9
  40aa5c:	stc    
  40aa5d:	sti    
  40aa5e:	mov    al,0xaf
  40aa60:	imul   ebx,DWORD PTR [edx],0xc6929724
  40aa66:	push   ds
  40aa67:	fisubr WORD PTR [esi]
  40aa69:	popf   
  40aa6a:	ins    BYTE PTR es:[edi],dx
  40aa6b:	mov    edx,0xdaa07b18
  40aa70:	into   
  40aa71:	retf   0x5664
  40aa74:	push   edx
  40aa75:	addr16 sti 
  40aa77:	repz mov ecx,0x11892b31
  40aa7d:	ds stc 
  40aa7f:	scas   al,BYTE PTR es:[edi]
  40aa80:	out    0xf7,eax
  40aa82:	sub    DWORD PTR [ecx],edi
  40aa84:	mov    fs,ebx
  40aa86:	or     eax,0xf6020f2f
  40aa8b:	push   edi
  40aa8c:	add    eax,0x2fa67e4e
  40aa91:	(bad)  
  40aa92:	sub    al,0x5b
  40aa94:	sub    DWORD PTR [esi+0x5f],ebx
  40aa97:	dec    esi
  40aa98:	outs   dx,DWORD PTR ds:[esi]
  40aa99:	cmp    al,0x91
  40aa9b:	gs dec eax
  40aa9d:	sub    DWORD PTR [ecx],ebp
  40aa9f:	pop    eax
  40aaa0:	inc    esi
  40aaa1:	rol    DWORD PTR [ebx],0x17
  40aaa4:	rcl    DWORD PTR [edi],1
  40aaa6:	scas   al,BYTE PTR es:[edi]
  40aaa7:	jmp    0x40aaa4
  40aaa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaaa:	push   ds
  40aaab:	inc    esp
  40aaac:	jno    0x40aa4e
  40aaae:	mov    edi,0xf7f6e8c7
  40aab3:	leave  
  40aab4:	jmp    0x40aa47
  40aab6:	loop   0x40ab37
  40aab8:	mov    dl,BYTE PTR ss:[esi]
  40aabb:	and    DWORD PTR [esi+ecx*4+0x27b547cb],ebx
  40aac2:	int3   
  40aac3:	inc    DWORD PTR [ecx+0x4bc1b33e]
  40aac9:	(bad)  
  40aaca:	retf   
  40aacb:	mov    al,0x46
  40aacd:	dec    edi
  40aace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aacf:	shl    BYTE PTR [ebp+0x4a9ca01a],0xe5
  40aad6:	and    eax,0x2e99840b
  40aadb:	jae    0x40ab4b
  40aadd:	add    al,0x10
  40aadf:	and    BYTE PTR [esi-0x344338a7],ah
  40aae5:	inc    esp
  40aae6:	inc    ebx
  40aae7:	in     al,0xa
  40aae9:	(bad)  
  40aaea:	int    0x32
  40aaec:	sbb    eax,0xb6b16e22
  40aaf1:	xchg   eax,eax
  40aaf3:	adc    esi,DWORD PTR [eax-0x251ba991]
  40aaf9:	add    esi,DWORD PTR [ecx+ebx*8]
  40aafc:	js     0x40ab5e
  40aafe:	sub    DWORD PTR [edi],edx
  40ab00:	sbb    al,cl
  40ab02:	cmp    edi,DWORD PTR [esi]
  40ab04:	call   0xd495:0x8e36b572
  40ab0b:	lds    ebp,FWORD PTR [eax-0x1af963b8]
  40ab11:	das    
  40ab12:	xchg   ebx,eax
  40ab13:	in     al,dx
  40ab14:	in     eax,dx
  40ab15:	(bad)  
  40ab16:	mov    ch,0x26
  40ab18:	jle    0x40ab91
  40ab1a:	push   ss
  40ab1b:	and    al,bh
  40ab1d:	std    
  40ab1e:	cmp    BYTE PTR [edx+0x2d],ah
  40ab21:	dec    esp
  40ab22:	add    BYTE PTR [edi],ch
  40ab24:	sbb    dh,0x77
  40ab27:	or     al,0x61
  40ab29:	jecxz  0x40aad1
  40ab2b:	or     DWORD PTR [eax-0x9],esi
  40ab2e:	pop    edi
  40ab2f:	dec    edx
  40ab30:	clc    
  40ab31:	xchg   ebp,eax
  40ab32:	and    cx,cx
  40ab35:	fdivr  DWORD PTR [edx+0x16b74bad]
  40ab3b:	ja     0x40ab4c
  40ab3d:	aam    0xaf
  40ab3f:	dec    edx
  40ab40:	push   ebx
  40ab41:	jb     0x40aaed
  40ab43:	aaa    
  40ab44:	mov    al,0xdd
  40ab46:	enter  0xd308,0x1d
  40ab4a:	cdq    
  40ab4b:	push   ebx
  40ab4c:	lods   eax,DWORD PTR ds:[esi]
  40ab4d:	pushf  
  40ab4e:	fisub  DWORD PTR [ebx]
  40ab50:	jg     0x40abac
  40ab52:	or     eax,0x77c2b138
  40ab57:	mov    dl,0x70
  40ab59:	sti    
  40ab5a:	cmp    edx,esi
  40ab5c:	fwait
  40ab5d:	adc    DWORD PTR ds:0x91d71fea,eax
  40ab63:	sbb    eax,0xbda28770
  40ab68:	mov    esi,0xc8c39e40
  40ab6d:	in     al,0xed
  40ab6f:	mov    ebp,0x9e8e95ed
  40ab74:	sar    DWORD PTR [eax-0xa418bd3],cl
  40ab7a:	cld    
  40ab7b:	mov    bl,0x62
  40ab7d:	jb     0x40abfb
  40ab7f:	daa    
  40ab80:	test   BYTE PTR [edx+0x71],dh
  40ab83:	push   edx
  40ab84:	adc    eax,0x80a85ddb
  40ab89:	inc    ebx
  40ab8a:	dec    ecx
  40ab8b:	shl    DWORD PTR [edx+0x491dd4da],0xd3
  40ab92:	mov    bh,0xf4
  40ab94:	dec    esp
  40ab95:	imul   esi,DWORD PTR [edx-0x3ad4c396],0x4db80a5c
  40ab9f:	ss xor ch,bh
  40aba2:	arpl   bx,dx
  40aba4:	or     BYTE PTR gs:[ebx+0x19d0852],0x39
  40abac:	mov    bh,0x69
  40abae:	push   ebx
  40abaf:	sahf   
  40abb0:	push   eax
  40abb1:	pop    ebp
  40abb2:	xor    DWORD PTR ds:0x22a87396,ebx
  40abb8:	aad    0x3f
  40abba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abbb:	stos   BYTE PTR es:[edi],al
  40abbc:	fwait
  40abbd:	jne    0x40aba0
  40abbf:	xor    eax,esp
  40abc1:	pusha  
  40abc2:	lahf   
  40abc3:	pop    ebx
  40abc4:	sbb    esi,edx
  40abc6:	mov    ebx,0xee4e1d27
  40abcb:	push   es
  40abcc:	sahf   
  40abcd:	dec    esi
  40abce:	sti    
  40abcf:	nop
  40abd0:	and    al,0x15
  40abd2:	mov    edi,DWORD PTR [edx+0x3]
  40abd5:	cmc    
  40abd6:	fistp  QWORD PTR [edx]
  40abd8:	or     eax,0x7dd6cc1b
  40abdd:	scas   al,BYTE PTR es:[edi]
  40abde:	xor    BYTE PTR [ebx-0x69],ah
  40abe1:	or     bl,BYTE PTR gs:[ebp-0x336d80f4]
  40abe8:	out    dx,eax
  40abe9:	pop    esp
  40abea:	call   0x4ba2a701
  40abef:	jmp    0x8d4c1e7f
  40abf4:	pop    edx
  40abf5:	pop    eax
  40abf6:	push   ebx
  40abf7:	dec    esi
  40abf8:	test   al,0xf2
  40abfa:	retf   
  40abfb:	adc    eax,0xef0a4f2
  40ac00:	icebp  
  40ac01:	int3   
  40ac02:	clc    
  40ac03:	mov    ds:0xadd7761d,eax
  40ac08:	cs pop esp
  40ac0a:	scas   al,BYTE PTR es:[edi]
  40ac0b:	sub    eax,0x7354c68
  40ac10:	or     BYTE PTR [ecx],0x9
  40ac13:	xchg   DWORD PTR [edi],esi
  40ac15:	(bad)  
  40ac16:	out    0x58,eax
  40ac18:	inc    esi
  40ac19:	mov    bh,0x85
  40ac1b:	mov    DWORD PTR [eax-0x294a7a37],eax
  40ac21:	data16 (bad) 
  40ac23:	mov    esp,0xe7899bdb
  40ac28:	fidiv  WORD PTR [esp+ebx*4-0x1d543b32]
  40ac2f:	mov    bl,BYTE PTR [esi-0x30]
  40ac32:	fdiv   QWORD PTR [eax-0x25edccc2]
  40ac38:	add    ebx,DWORD PTR [ebx-0x25]
  40ac3b:	xor    BYTE PTR [ecx+ebp*1-0xca46eb],cl
  40ac42:	icebp  
  40ac43:	mov    ss,esi
  40ac45:	cmp    BYTE PTR [esi+0x4cf16b78],0xb3
  40ac4c:	cwde   
  40ac4d:	fild   WORD PTR [edx-0x7c]
  40ac50:	mov    ebx,DWORD PTR [edi+0x56]
  40ac53:	cmp    BYTE PTR [edi+0x6],dl
  40ac56:	inc    ebp
  40ac57:	sub    eax,0x89212dc8
  40ac5c:	retf   0x3e2f
  40ac5f:	mov    cs,WORD PTR [esi+0x4bfb2da0]
  40ac65:	sub    al,0x83
  40ac67:	sbb    al,0xaf
  40ac69:	xor    ebx,DWORD PTR [esi]
  40ac6b:	ss loopne 0x40acde
  40ac6e:	and    BYTE PTR ds:0x33e1ecad,al
  40ac74:	jns    0x40ac60
  40ac76:	adc    ecx,ebp
  40ac78:	retf   
  40ac79:	fdivr  st,st(2)
  40ac7b:	scas   al,BYTE PTR es:[edi]
  40ac7c:	ja     0x40ac9b
  40ac7e:	lods   eax,DWORD PTR ds:[esi]
  40ac7f:	pop    edx
  40ac80:	jp     0x40ac45
  40ac82:	mov    ch,0xfc
  40ac84:	mov    esi,0x72dd52a8
  40ac89:	and    DWORD PTR [edx],ebp
  40ac8b:	jnp    0x40ac4c
  40ac8d:	dec    esi
  40ac8e:	inc    esp
  40ac8f:	xchg   esi,eax
  40ac90:	pop    esi
  40ac91:	mov    ?,WORD PTR [ecx-0x7]
  40ac94:	xchg   ebx,eax
  40ac95:	icebp  
  40ac96:	ja     0x40acf6
  40ac98:	stos   DWORD PTR es:[edi],eax
  40ac99:	sar    ah,cl
  40ac9b:	jp     0x40ac80
  40ac9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9e:	or     edx,DWORD PTR [eiz*8+0x1fd75d55]
  40aca5:	xor    DWORD PTR [ebp-0x43],ebp
  40aca8:	mov    al,0x72
  40acaa:	xor    al,0x9f
  40acac:	push   0x76b5f3a4
  40acb1:	retf   
  40acb2:	out    0xb9,eax
  40acb4:	(bad)  
  40acb5:	imul   BYTE PTR [ecx]
  40acb7:	mov    WORD PTR [ecx],ds
  40acb9:	pop    edi
  40acba:	pusha  
  40acbb:	or     DWORD PTR [esi],edi
  40acbd:	mov    ds:0x99cbee35,al
  40acc2:	jbe    0x40ad38
  40acc4:	ja     0x40ac4d
  40acc6:	mov    WORD PTR [edx-0x60],ss
  40acc9:	fwait
  40acca:	cmc    
  40accb:	les    edi,FWORD PTR [esi+0x5bf5ee8e]
  40acd1:	xchg   esp,eax
  40acd2:	push   ecx
  40acd3:	add    bl,ch
  40acd5:	ffreep st(1)
  40acd7:	add    BYTE PTR [ebx-0x367c2f87],0x99
  40acde:	loopne 0x40ac9f
  40ace0:	ret    
  40ace1:	jno    0x40ad20
  40ace3:	push   esi
  40ace4:	xchg   edi,eax
  40ace5:	outs   dx,DWORD PTR ds:[esi]
  40ace6:	add    eax,DWORD PTR [ebp+0x1ee6aff7]
  40acec:	and    ebp,DWORD PTR [edx+edx*8]
  40acef:	xchg   ecx,eax
  40acf0:	mov    edi,0x2e25d405
  40acf5:	dec    esi
  40acf6:	clc    
  40acf7:	add    al,0xd9
  40acf9:	fild   QWORD PTR [edi-0x20]
  40acfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acfd:	jb     0x40acb3
  40acff:	pushf  
  40ad00:	lods   al,BYTE PTR ds:[esi]
  40ad01:	inc    esi
  40ad02:	adc    BYTE PTR [edx+ecx*1+0x14ba4c15],bl
  40ad09:	nop
  40ad0a:	das    
  40ad0b:	addr16 aam 0xa6
  40ad0e:	out    0xb4,eax
  40ad10:	xchg   esp,eax
  40ad11:	test   eax,0x3475c2de
  40ad16:	sahf   
  40ad17:	and    eax,0x25f9b597
  40ad1c:	loope  0x40acd0
  40ad1e:	ret    
  40ad1f:	sbb    eax,0xd88ef912
  40ad24:	jmp    0x3d51:0x42d177b0
  40ad2b:	in     al,0xe9
  40ad2d:	cmc    
  40ad2e:	mov    esp,0x774341d
  40ad33:	iret   
  40ad34:	fisttp WORD PTR ds:[edi]
  40ad37:	push   ebp
  40ad38:	jle    0x40ad7a
  40ad3a:	shl    DWORD PTR [edi+0x77db7465],cl
  40ad40:	push   ebp
  40ad41:	outs   dx,DWORD PTR ds:[esi]
  40ad42:	push   esp
  40ad43:	inc    al
  40ad45:	cmp    al,0x7b
  40ad47:	rcr    DWORD PTR [ebx+esi*2+0x6b],1
  40ad4b:	mov    ebp,ss
  40ad4d:	or     al,0x24
  40ad4f:	cdq    
  40ad50:	and    dh,BYTE PTR [ebx]
  40ad52:	std    
  40ad53:	pop    es
  40ad54:	inc    eax
  40ad55:	mov    dl,0xeb
  40ad57:	mov    esi,0x66b127fe
  40ad5c:	js     0x40ad53
  40ad5e:	lds    edi,FWORD PTR [edx]
  40ad60:	scas   eax,DWORD PTR es:[edi]
  40ad61:	outs   dx,DWORD PTR ds:[esi]
  40ad62:	mov    edi,0x904c6bc4
  40ad67:	mov    edx,0x624200
  40ad6c:	fs mov bl,0x86
  40ad6f:	adc    ah,BYTE PTR [esi+0x35]
  40ad72:	jae    0x40ad61
  40ad74:	pop    ss
  40ad75:	sbb    DWORD PTR [ebp*8+0x81b036a],esi
  40ad7c:	jne    0x40adb8
  40ad7e:	or     eax,0x5bbd64d8
  40ad83:	dec    ebp
  40ad84:	(bad)
  40ad88:	xor    DWORD PTR [eax],ebp
  40ad8a:	sbb    BYTE PTR [ebp-0x6ef5b4f3],ch
  40ad90:	imul   ecx,DWORD PTR [edi-0x71dca927],0xe8ec841d
  40ad9a:	int3   
  40ad9b:	enter  0x2fe8,0x72
  40ad9f:	outs   dx,DWORD PTR ds:[esi]
  40ada0:	test   al,0xc5
  40ada2:	bound  esp,QWORD PTR [eax]
  40ada4:	gs sub ecx,edx
  40ada7:	js     0x40adf3
  40ada9:	adc    ebp,DWORD PTR [ecx-0x7cbe9615]
  40adaf:	stos   DWORD PTR es:[edi],eax
  40adb0:	xlat   BYTE PTR ds:[ebx]
  40adb1:	sahf   
  40adb2:	mov    dh,0x88
  40adb4:	aas    
  40adb5:	mov    ds:0x147af5c9,eax
  40adba:	and    BYTE PTR [ecx+0x46],0x4c
  40adbe:	jp     0x40ad85
  40adc0:	dec    ecx
  40adc1:	xor    al,0xe3
  40adc3:	dec    eax
  40adc4:	mov    esp,0xd847f557
  40adc9:	add    al,BYTE PTR [ebx]
  40adcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adcc:	pop    ecx
  40adcd:	nop
  40adce:	int    0x9
  40add0:	ret    
  40add1:	push   ebx
  40add2:	inc    ecx
  40add3:	push   DWORD PTR [ebx-0x6b]
  40add6:	add    DWORD PTR [ecx],ecx
  40add8:	int    0x4d
  40adda:	or     ecx,esp
  40addc:	xchg   esi,eax
  40addd:	cli    
  40adde:	or     eax,0x56467d6d
  40ade3:	iret   
  40ade4:	lahf   
  40ade5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ade6:	dec    ebx
  40ade7:	loopne 0x40ae59
  40ade9:	jmp    0x6844:0xc61aa71c
  40adf0:	arpl   WORD PTR [esp+esi*1],sp
  40adf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf4:	out    dx,al
  40adf5:	int3   
  40adf6:	mov    ch,BYTE PTR [esi]
  40adf8:	int3   
  40adf9:	hlt    
  40adfa:	ror    dl,cl
  40adfc:	cmp    eax,DWORD PTR [ebx+0x5a4bad8d]
  40ae02:	int    0x73
  40ae04:	fisub  WORD PTR [ebx+eax*8]
  40ae07:	fdiv   DWORD PTR [edx+0x5a]
  40ae0a:	pushf  
  40ae0b:	out    0x6a,eax
  40ae0d:	jne    0x40ae3b
  40ae0f:	(bad)  
  40ae10:	shl    BYTE PTR [esp+eiz*8-0x20],0xca
  40ae15:	cmp    eax,0x6dcf22cc
  40ae1a:	ja     0x40adab
  40ae1c:	popa   
  40ae1d:	push   ss
  40ae1e:	jle    0x40adf1
  40ae20:	or     DWORD PTR [ebx-0x285b98df],ebp
  40ae26:	ss adc eax,0x1fe0a42b
  40ae2c:	or     al,0xd0
  40ae2e:	das    
  40ae2f:	pushf  
  40ae30:	push   0x5c
  40ae32:	or     al,0x48
  40ae34:	daa    
  40ae35:	ins    DWORD PTR es:[edi],dx
  40ae36:	jae    0x40ade8
  40ae38:	stos   BYTE PTR es:[edi],al
  40ae39:	dec    esp
  40ae3a:	sub    al,0x1
  40ae3c:	pop    ecx
  40ae3d:	les    edx,FWORD PTR [esi+0x4ca9a9e0]
  40ae43:	mov    eax,0x56f0f190
  40ae48:	out    dx,eax
  40ae49:	push   0xffffffa1
  40ae4b:	mov    ecx,0xfa83ee78
  40ae50:	outs   dx,BYTE PTR ds:[esi]
  40ae51:	into   
  40ae52:	popf   
  40ae53:	je     0x40ae5c
  40ae55:	ffree  st(6)
  40ae57:	or     edx,DWORD PTR [esi+0x55817f6a]
  40ae5d:	mov    ah,0x74
  40ae5f:	jmp    0x6452:0x70513c6c
  40ae66:	xchg   esp,eax
  40ae67:	dec    esi
  40ae68:	out    0x39,al
  40ae6a:	js     0x40ae75
  40ae6c:	push   edi
  40ae6d:	or     al,0x76
  40ae6f:	js     0x40aec6
  40ae71:	fcomp  QWORD PTR [edi]
  40ae73:	(bad)  
  40ae74:	stos   DWORD PTR es:[edi],eax
  40ae75:	jmp    0x37dd:0xffecdd8b
  40ae7c:	xor    DWORD PTR [edi+eax*4],ebx
  40ae7f:	mov    ebx,0x6a39405d
  40ae84:	jge    0x40ae97
  40ae86:	stc    
  40ae87:	std    
  40ae88:	and    bh,bl
  40ae8a:	(bad)  
  40ae8b:	lock xchg ebx,eax
  40ae8d:	or     al,BYTE PTR [eax-0x6c]
  40ae90:	cdq    
  40ae91:	jecxz  0x40af04
  40ae93:	iret   
  40ae94:	ror    DWORD PTR [ebx],cl
  40ae96:	ins    BYTE PTR es:[edi],dx
  40ae97:	dec    edx
  40ae98:	mov    DWORD PTR [ecx],ebp
  40ae9a:	test   BYTE PTR [edx+0x7ebf84f],0x84
  40aea1:	add    DWORD PTR [esi],ebx
  40aea3:	sar    BYTE PTR [edi-0x1f],0xa6
  40aea7:	mov    es,WORD PTR [eax]
  40aea9:	adc    eax,0x1eee9761
  40aeae:	jno    0x40aeb6
  40aeb0:	mov    BYTE PTR [esi],bh
  40aeb2:	push   cs
  40aeb3:	icebp  
  40aeb4:	int3   
  40aeb5:	aad    0x4f
  40aeb7:	popf   
  40aeb8:	jmp    0x40ae95
  40aeba:	sbb    al,0xa8
  40aebc:	int    0xa0
  40aebe:	jae    0x40ae83
  40aec0:	cmp    ebp,ebx
  40aec2:	or     bh,BYTE PTR [eax-0x10441fa3]
  40aec8:	and    eax,0x79a9a88e
  40aecd:	test   DWORD PTR [ecx+0x3c03295f],eax
  40aed3:	call   0x19a2:0x6d27302a
  40aeda:	ret    
  40aedb:	sub    al,al
  40aedd:	dec    esi
  40aede:	fnstcw WORD PTR [esi-0x37]
  40aee1:	sbb    esp,DWORD PTR [ebx+0x69242253]
  40aee7:	mov    ebx,0x697d3d98
  40aeec:	jnp    0x40af2c
  40aeee:	adc    eax,0x99ebdf0
  40aef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aef5:	in     eax,dx
  40aef6:	call   0x4c41:0xda1c0cb5
  40aefd:	xor    edx,DWORD PTR [esi+eiz*4-0x15]
  40af01:	sbb    ch,bl
  40af03:	bound  edx,QWORD PTR [ecx+0x1]
  40af06:	dec    ebp
  40af07:	clc    
  40af08:	fldenv [edx-0x1f4d9132]
  40af0e:	mov    esi,0xef07f751
  40af13:	sub    al,0xfa
  40af15:	mov    dh,0xd1
  40af17:	mov    edx,0x43f27949
  40af1c:	mov    bh,0x1f
  40af1e:	push   esi
  40af1f:	mov    es:0x88591a86,eax
  40af25:	loopne 0x40af49
  40af27:	aas    
  40af28:	add    esp,DWORD PTR [esi]
  40af2a:	mov    dl,BYTE PTR ds:0x9185cd16
  40af30:	cdq    
  40af31:	xchg   DWORD PTR [edx],ebp
  40af33:	sub    BYTE PTR cs:[ebx],ch
  40af36:	dec    esi
  40af37:	pop    ebp
  40af38:	sbb    eax,0x93da5cc6
  40af3d:	xor    eax,0x74941eb0
  40af42:	mov    ds:0x23bfe767,eax
  40af47:	out    0x2a,eax
  40af49:	cdq    
  40af4a:	int    0xb6
  40af4c:	lods   eax,DWORD PTR ds:[esi]
  40af4d:	xor    BYTE PTR [edx+0xeef7c67],0x6a
  40af54:	and    dh,bh
  40af56:	imul   esp,DWORD PTR [eax+0x4f9536ea],0x85043234
  40af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af61:	icebp  
  40af62:	dec    edi
  40af63:	dec    ecx
  40af64:	push   0x5f
  40af66:	in     al,0x91
  40af68:	test   al,0xe
  40af6a:	cdq    
  40af6b:	mov    bh,0x45
  40af6d:	cli    
  40af6e:	arpl   sp,sp
  40af70:	xlat   BYTE PTR ds:[ebx]
  40af71:	fld    TBYTE PTR [edi-0x525525ca]
  40af77:	xchg   ecx,eax
  40af78:	push   esp
  40af79:	mov    DWORD PTR [edx-0x48b92ec],ebx
  40af7f:	sbb    ch,ah
  40af81:	aad    0x3f
  40af83:	mov    cl,0x4f
  40af85:	icebp  
  40af86:	mov    cx,0x22a1
  40af8a:	jnp    0x40afb4
  40af8c:	mov    esi,0x7fa4c459
  40af91:	cmc    
  40af92:	cmp    dh,bl
  40af94:	dec    edi
  40af95:	pop    ebp
  40af96:	imul   edi,DWORD PTR [ebx+0x58dc9d90],0xa
  40af9d:	adc    ebp,DWORD PTR [esp+ecx*4-0x14]
  40afa1:	fwait
  40afa2:	mov    ss:0x891eaa8a,al
  40afa8:	in     al,dx
  40afa9:	add    eax,0x1bcb89db
  40afae:	retf   0xe89f
  40afb1:	jns    0x40b01d
  40afb3:	xchg   esi,eax
  40afb4:	xor    eax,0x3867ec35
  40afb9:	and    eax,DWORD PTR [ebx-0x1897d2bc]
  40afbf:	loop   0x40afb4
  40afc1:	xchg   ecx,eax
  40afc2:	icebp  
  40afc3:	into   
  40afc4:	in     eax,dx
  40afc5:	mov    edx,0xda1ffa06
  40afca:	(bad)  
  40afcb:	mov    cl,0x74
  40afcd:	or     al,0xa7
  40afcf:	out    0x82,al
  40afd1:	inc    edx
  40afd2:	scas   al,BYTE PTR es:[edi]
  40afd3:	jae    0x40afe5
  40afd5:	mov    eax,?
  40afd7:	sub    BYTE PTR [esp+edx*8-0x12fa5bc7],cl
  40afde:	scas   al,BYTE PTR es:[edi]
  40afdf:	jae    0x40afbe
  40afe1:	loope  0x40af94
  40afe3:	enter  0x6702,0x22
  40afe7:	aam    0x21
  40afe9:	mov    ecx,0xd8c8dd27
  40afee:	mov    ebp,0x66462870
  40aff3:	add    DWORD PTR [ebp-0x4f],ebp
  40aff6:	ror    BYTE PTR [ecx],0xe6
  40aff9:	lahf   
  40affa:	ret    
  40affb:	outs   dx,BYTE PTR ds:[esi]
  40affc:	aad    0x66
  40affe:	lods   eax,DWORD PTR es:[esi]
  40b000:	imul   ebp,DWORD PTR [ebp+0x63],0x2d
  40b004:	popf   
  40b005:	sti    
  40b006:	data16 mov ch,0xaf
  40b009:	int    0x26
  40b00b:	jb     0x40b03d
  40b00d:	xchg   ebx,eax
  40b00e:	push   0xffffffb8
  40b010:	mov    esi,0xe2ca3897
  40b015:	jb     0x40afac
  40b017:	push   0x822dd040
  40b01c:	popa   
  40b01d:	aam    0x99
  40b01f:	mov    ecx,0xf6f44b7
  40b024:	cli    
  40b025:	sub    DWORD PTR ds:0x259e1a04,ecx
  40b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b02c:	pop    ecx
  40b02d:	dec    esi
  40b02e:	jbe    0x40b00c
  40b030:	inc    ebx
  40b031:	sar    DWORD PTR [edx+0x10],0xbb
  40b035:	dec    ecx
  40b036:	pop    esp
  40b037:	test   DWORD PTR [edx+0x438a7527],ecx
  40b03d:	xchg   ecx,eax
  40b03e:	jmp    0x40b045
  40b040:	out    0x58,eax
  40b042:	fwait
  40b043:	adc    bl,cl
  40b045:	xor    ebx,esp
  40b047:	pop    sp
  40b049:	push   0x63
  40b04b:	jecxz  0x40b046
  40b04d:	adc    ch,BYTE PTR [edi]
  40b04f:	aaa    
  40b050:	add    eax,0x51b6a620
  40b055:	inc    ebx
  40b056:	push   ds
  40b057:	mov    es,WORD PTR [esi-0x427ab49d]
  40b05d:	frstor [ecx+0x69]
  40b060:	loop   0x40b011
  40b062:	lds    ecx,FWORD PTR [esi+0x4c]
  40b065:	fmul   QWORD PTR [edi-0x79]
  40b068:	mov    DWORD PTR [edx],edx
  40b06a:	(bad)  
  40b06b:	pop    edx
  40b06c:	(bad)  
  40b06d:	cdq    
  40b06e:	adc    bl,0x3c
  40b071:	pop    ebp
  40b072:	mov    bl,BYTE PTR [edx-0x67]
  40b075:	xchg   edx,eax
  40b076:	inc    esi
  40b077:	jns    0x40b037
  40b079:	xchg   ebp,eax
  40b07a:	xchg   esi,esi
  40b07c:	dec    edi
  40b07d:	sahf   
  40b07e:	dec    ecx
  40b07f:	and    BYTE PTR [esi],0xd2
  40b082:	inc    edx
  40b083:	push   ebx
  40b084:	xchg   ecx,eax
  40b085:	and    dl,BYTE PTR [esi]
  40b087:	xchg   ebp,eax
  40b088:	jmp    0x40b0b9
  40b08a:	adc    BYTE PTR [ecx+0x10460a61],cl
  40b090:	bndstx [edi-0x5d],(bad)
  40b094:	xor    DWORD PTR [esp+ebx*8-0x18d75010],eax
  40b09b:	imul   edi,DWORD PTR [edx],0xa06430b0
  40b0a1:	sub    eax,0x9c29189f
  40b0a6:	pushf  
  40b0a7:	jmp    0x4cee:0xa879710b
  40b0ae:	nop
  40b0af:	test   eax,0x456ab0dc
  40b0b4:	add    BYTE PTR [ecx],0xa8
  40b0b7:	scas   eax,DWORD PTR es:[edi]
  40b0b8:	push   eax
  40b0b9:	enter  0xedb9,0x62
  40b0bd:	int3   
  40b0be:	ficomp DWORD PTR [ebx+0x5a4e79d9]
  40b0c4:	jmp    0x40b142
  40b0c6:	fnstsw WORD PTR [esi]
  40b0c8:	adc    DWORD PTR [ebp+0x61],0xfffffff5
  40b0cc:	and    DWORD PTR [ecx],edi
  40b0ce:	fisttp QWORD PTR [ebx-0x35dfc83b]
  40b0d4:	repz sub al,0x3d
  40b0d7:	repnz push cs
  40b0d9:	jg     0x40b0eb
  40b0db:	sti    
  40b0dc:	xchg   cl,dh
  40b0de:	dec    esi
  40b0df:	mov    ebx,0x50f00a8a
  40b0e4:	dec    edi
  40b0e5:	aaa    
  40b0e6:	or     bh,BYTE PTR [edx+0x5008e834]
  40b0ec:	mov    eax,ds:0x74dc82e2
  40b0f1:	addr16 sbb eax,eax
  40b0f4:	les    esp,FWORD PTR [edi-0xe]
  40b0f7:	sub    al,0xb0
  40b0f9:	sub    eax,0x75b84c35
  40b0fe:	cli    
  40b0ff:	sbb    eax,0xd26b217c
  40b104:	fdivp  st(4),st
  40b106:	push   0x0
  40b108:	vcvtsd2ss xmm7,xmm1,QWORD PTR [esi-0x73]
  40b10d:	mov    bh,cl
  40b10f:	pop    ss
  40b110:	ins    DWORD PTR es:[edi],dx
  40b111:	(bad)  
  40b112:	lods   al,BYTE PTR ds:[esi]
  40b113:	sahf   
  40b114:	dec    eax
  40b115:	mov    ecx,0xffcc156a
  40b11a:	imul   edi,DWORD PTR [edx+ebx*4],0x7026c26
  40b121:	(bad)  
  40b122:	shl    BYTE PTR [ebx-0x3d],0xaa
  40b126:	or     bh,BYTE PTR [ebp-0x41]
  40b129:	sbb    edx,ebp
  40b12b:	jb     0x40b174
  40b12d:	repz jp 0x40b0be
  40b130:	xchg   BYTE PTR [edx-0x4d9401b8],ch
  40b136:	pop    edi
  40b137:	pop    ds
  40b138:	ja     0x40b180
  40b13a:	shl    dl,0x6f
  40b13d:	pop    edx
  40b13e:	sbb    DWORD PTR [esi],edi
  40b140:	mov    ch,0xa6
  40b142:	nop
  40b143:	dec    ecx
  40b144:	addr16 js 0x40b18e
  40b147:	jl     0x40b105
  40b149:	jns    0x40b114
  40b14b:	cmc    
  40b14c:	push   eax
  40b14d:	ins    DWORD PTR es:[edi],dx
  40b14e:	mov    ecx,ebx
  40b150:	repz xchg esi,eax
  40b152:	mov    edi,0x66c4de2a
  40b157:	xchg   esp,esp
  40b159:	sar    DWORD PTR [eax],1
  40b15b:	sub    esp,eax
  40b15d:	xor    BYTE PTR [ebp-0x7a],bh
  40b160:	(bad)  [ebx+eiz*1+0x10d2a50e]
  40b167:	adc    al,0x59
  40b169:	icebp  
  40b16a:	xchg   ecx,eax
  40b16b:	jno    0x40b165
  40b16d:	repnz mov ds:0xd98cca42,eax
  40b173:	adc    eax,DWORD PTR [eax-0x7380903f]
  40b179:	call   0x143b:0xac5ff09d
  40b180:	jo     0x40b1ff
  40b182:	push   0xfffffff5
  40b184:	bound  ebp,QWORD PTR [esi]
  40b186:	or     edx,DWORD PTR [esi-0x104c504]
  40b18c:	and    DWORD PTR [ecx],edi
  40b18e:	repz mov ebp,0x6cf98ea1
  40b194:	jnp    0x40b1f6
  40b196:	inc    esi
  40b197:	mov    ebp,0xe81f276b
  40b19c:	call   0xa60d3f6
  40b1a1:	neg    DWORD PTR [eax]
  40b1a3:	ss iret 
  40b1a5:	repz inc edx
  40b1a7:	daa    
  40b1a8:	mov    ecx,0xb801c70c
  40b1ad:	mov    ah,0x35
  40b1af:	push   ds
  40b1b0:	ret    0x27e1
  40b1b3:	lea    edx,[esi-0x4c]
  40b1b6:	out    dx,al
  40b1b7:	lods   al,BYTE PTR ds:[esi]
  40b1b8:	rcl    BYTE PTR [eax-0x71],0xe3
  40b1bc:	fucompp 
  40b1be:	gs clc 
  40b1c0:	mov    al,0xf7
  40b1c2:	test   al,0xf2
  40b1c4:	data16 test al,0xae
  40b1c7:	pop    eax
  40b1c8:	test   BYTE PTR [eax-0x15],0x64
  40b1cc:	inc    ebp
  40b1cd:	jmp    0x40b163
  40b1cf:	push   ss
  40b1d0:	es xchg edx,eax
  40b1d2:	mov    ds:0x3168af7e,al
  40b1d7:	cmp    eax,0x7f251a49
  40b1dc:	add    eax,0x1d91939c
  40b1e1:	inc    edx
  40b1e2:	popa   
  40b1e3:	ins    BYTE PTR es:[edi],dx
  40b1e4:	xchg   esi,eax
  40b1e5:	and    ecx,DWORD PTR [eax-0x7f413c59]
  40b1eb:	lahf   
  40b1ec:	jne    0x40b22e
  40b1ee:	stos   BYTE PTR es:[edi],al
  40b1ef:	push   ebp
  40b1f0:	and    esi,DWORD PTR [bx]
  40b1f3:	xchg   ebx,eax
  40b1f4:	xchg   ebp,eax
  40b1f5:	inc    edi
  40b1f6:	push   eax
  40b1f7:	in     eax,0x3d
  40b1f9:	stc    
  40b1fa:	mov    ebp,0x56974b6
  40b1ff:	adc    esi,DWORD PTR [ecx-0x1d8baf6]
  40b205:	int    0xd6
  40b207:	fadd   st,st(0)
  40b209:	add    esi,esi
  40b20b:	or     cl,dh
  40b20d:	mov    eax,ds:0x6621d5c0
  40b212:	lods   al,BYTE PTR ds:[esi]
  40b213:	(bad)  
  40b214:	(bad)  
  40b216:	aas    
  40b217:	dec    edx
  40b218:	xchg   esi,eax
  40b219:	call   0x1ac80286
  40b21e:	mov    cl,0x74
  40b220:	mov    ecx,0xc8a11f8f
  40b225:	mov    esi,0xed97f9d1
  40b22a:	loopne 0x40b1b9
  40b22c:	adc    eax,0xa32a9600
  40b231:	sub    al,0xca
  40b233:	aam    0x69
  40b235:	loope  0x40b22f
  40b237:	jne    0x40b28e
  40b239:	xchg   edx,eax
  40b23a:	retf   0x552d
  40b23d:	add    eax,0xb0baf2ee
  40b242:	jae    0x40b256
  40b244:	xor    eax,0x906817ec
  40b249:	jae    0x40b278
  40b24b:	test   al,0xdb
  40b24d:	push   0xfffffff7
  40b24f:	fs pop esp
  40b251:	mov    ah,0x4f
  40b253:	sub    al,0x69
  40b255:	cli    
  40b256:	inc    edi
  40b257:	jl     0x40b22d
  40b259:	imul   edi,DWORD PTR ds:[ebx],0x719edd6a
  40b260:	ret    
  40b261:	pop    esp
  40b262:	mov    cs,ecx
  40b264:	in     eax,0xd
  40b266:	and    BYTE PTR [ebp+0x60],bl
  40b269:	arpl   bx,sp
  40b26b:	and    al,bl
  40b26d:	or     eax,0x6f612d1
  40b272:	sub    esi,0x574536b4
  40b278:	xchg   BYTE PTR [esi-0x7d],cl
  40b27b:	sti    
  40b27c:	repz pop es
  40b27e:	mov    DWORD PTR [ebx],0xe84f9ef5
  40b284:	push   edi
  40b285:	fs xor eax,0xb299594f
  40b28b:	jmp    DWORD PTR [edi+0x6f502508]
  40b291:	js     0x40b254
  40b293:	cmp    al,0x3d
  40b295:	scas   eax,DWORD PTR es:[edi]
  40b296:	addr16 push ebp
  40b298:	ins    DWORD PTR es:[edi],dx
  40b299:	mov    cl,0xed
  40b29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b29c:	push   esi
  40b29d:	cli    
  40b29e:	pop    ebp
  40b29f:	cmp    eax,0xef414c80
  40b2a4:	icebp  
  40b2a5:	fisub  DWORD PTR [ebp+0x2256d3e2]
  40b2ab:	pop    ss
  40b2ac:	pop    eax
  40b2ad:	sbb    esp,esi
  40b2af:	pushf  
  40b2b0:	adc    edx,DWORD PTR [ebp-0x702f334a]
  40b2b6:	mov    dl,0x27
  40b2b8:	pop    ds
  40b2b9:	loopne 0x40b258
  40b2bb:	rcl    DWORD PTR [ebp+0x8],1
  40b2be:	and    al,ah
  40b2c0:	xchg   DWORD PTR [ecx+ecx*1],edi
  40b2c3:	mov    dh,0x61
  40b2c5:	jo     0x40b255
  40b2c7:	lock xchg DWORD PTR [esi],eax
  40b2ca:	sbb    ebp,DWORD PTR [eax+0x296057a]
  40b2d0:	in     al,0x3b
  40b2d2:	stos   BYTE PTR es:[edi],al
  40b2d3:	ss out dx,al
  40b2d5:	pop    es
  40b2d6:	add    al,0xd6
  40b2d8:	push   esi
  40b2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2da:	xchg   DWORD PTR [ecx],ebp
  40b2dc:	and    al,0xf9
  40b2de:	into   
  40b2df:	out    0xf7,eax
  40b2e1:	loop   0x40b2ac
  40b2e3:	push   ecx
  40b2e4:	aam    0x4c
  40b2e6:	adc    dh,bh
  40b2e8:	imul   ebp,eax,0xd8abef82
  40b2ee:	stc    
  40b2ef:	sub    BYTE PTR [ebx],al
  40b2f1:	imul   edx,ecx,0xffffff9e
  40b2f4:	xchg   esp,eax
  40b2f5:	hlt    
  40b2f6:	scas   eax,DWORD PTR es:[edi]
  40b2f7:	jae    0x40b343
  40b2f9:	xchg   DWORD PTR [esi+0x73],edx
  40b2fc:	lods   eax,DWORD PTR ds:[esi]
  40b2fd:	fmulp  st(4),st
  40b2ff:	(bad)  
  40b301:	retf   0x51a5
  40b304:	sub    ecx,eax
  40b306:	mov    ds:0x71adbb67,al
  40b30b:	xchg   ebp,eax
  40b30c:	not    DWORD PTR fs:[ebx]
  40b30f:	mov    edi,0xeae9e5df
  40b314:	adc    DWORD PTR [ecx],0xffffffb4
  40b317:	outs   dx,DWORD PTR es:[esi]
  40b319:	leave  
  40b31a:	dec    ebx
  40b31b:	dec    eax
  40b31c:	adc    BYTE PTR [esi-0x4627d1b1],0xb8
  40b323:	jecxz  0x40b2b8
  40b325:	sti    
  40b326:	mov    eax,0xd71f8373
  40b32b:	adc    al,0x97
  40b32e:	leave  
  40b32f:	sub    eax,0x900ba99d
  40b334:	ret    
  40b335:	mov    edx,0xb7e86a48
  40b33a:	lea    eax,[ecx-0x2f]
  40b33d:	jp     0x40b3bc
  40b33f:	adc    eax,0x3255d621
  40b344:	mov    dl,0xf4
  40b346:	lock mov BYTE PTR [edx+eax*8+0x12d3b19e],al
  40b34e:	dec    esi
  40b34f:	cmp    al,0x74
  40b351:	loope  0x40b34b
  40b353:	sub    DWORD PTR [ecx],ebp
  40b355:	cmp    BYTE PTR [esi+0x37],0xaf
  40b359:	xor    esp,DWORD PTR [ebx-0x1f396c87]
  40b35f:	(bad)  
  40b363:	sub    eax,0xd7f483f
  40b368:	cwde   
  40b369:	mov    al,0xcd
  40b36b:	retf   
  40b36c:	mov    gs,WORD PTR [ecx]
  40b36e:	dec    ebp
  40b36f:	cmp    al,0xe5
  40b371:	cmp    cl,BYTE PTR [edi+0x61619ca9]
  40b377:	and    BYTE PTR [edi+0x74],cl
  40b37a:	icebp  
  40b37b:	xlat   BYTE PTR ds:[ebx]
  40b37c:	inc    esi
  40b37d:	bound  edi,QWORD PTR [ecx+0x2f]
  40b380:	xor    edx,eax
  40b382:	leave  
  40b383:	xchg   DWORD PTR [ebp-0x76],edx
  40b386:	cmp    DWORD PTR [esi],0xffffffc2
  40b389:	rcr    DWORD PTR ds:[eax-0x606e4ee],cl
  40b390:	(bad)  
  40b392:	adc    esi,esi
  40b394:	pop    eax
  40b395:	pop    esi
  40b396:	out    0xb,al
  40b398:	int    0x6d
  40b39a:	into   
  40b39b:	inc    esp
  40b39c:	jns    0x40b400
  40b39e:	nop
  40b39f:	int    0x38
  40b3a1:	icebp  
  40b3a2:	sbb    DWORD PTR [ecx],ecx
  40b3a4:	cdq    
  40b3a5:	repz push edi
  40b3a7:	ins    DWORD PTR es:[edi],dx
  40b3a8:	in     eax,0x45
  40b3aa:	lods   eax,DWORD PTR ds:[esi]
  40b3ab:	sub    BYTE PTR [ecx+0x3a168568],dl
  40b3b1:	pop    ebx
  40b3b2:	aad    0x58
  40b3b4:	sub    eax,0x8c1943e7
  40b3b9:	sub    eax,0x7a2ee44a
  40b3be:	leave  
  40b3bf:	ror    BYTE PTR [ecx],0x2d
  40b3c2:	inc    ebx
  40b3c3:	add    ebx,DWORD PTR [esi+0x1c625749]
  40b3c9:	mov    cl,0xc9
  40b3cb:	cmp    eax,0xb97b0f83
  40b3d0:	mov    ebx,0xff2b8796
  40b3d5:	pop    esp
  40b3d6:	mov    bh,ch
  40b3d8:	or     DWORD PTR [ecx-0x6a44e022],ebp
  40b3de:	adc    edx,DWORD PTR [esi+0x52]
  40b3e1:	mov    BYTE PTR [esi-0x5e002ba1],bl
  40b3e7:	add    al,0xb2
  40b3e9:	sbb    eax,0x6942e26a
  40b3ee:	mov    ch,0xed
  40b3f0:	(bad)  
  40b3f2:	xchg   edi,eax
  40b3f3:	dec    edi
  40b3f4:	pop    edi
  40b3f5:	cmp    eax,0xf932b43f
  40b3fa:	xchg   edx,eax
  40b3fb:	aas    
  40b3fc:	in     eax,dx
  40b3fd:	les    ecx,FWORD PTR [esi]
  40b3ff:	push   es
  40b400:	daa    
  40b401:	push   ebp
  40b402:	or     DWORD PTR [ebp+esi*2-0x31107dfd],edx
  40b409:	lds    esi,FWORD PTR [eax+edx*8]
  40b40c:	scas   eax,DWORD PTR es:[edi]
  40b40d:	dec    esi
  40b40e:	mov    dh,0xac
  40b410:	push   0xf
  40b412:	or     ebx,DWORD PTR [di+0x9]
  40b416:	mov    esi,0x87dae04b
  40b41b:	jnp    0x40b407
  40b41d:	add    ecx,DWORD PTR [edi-0x1d2a4429]
  40b423:	popa   
  40b424:	add    DWORD PTR [edx+0x4d14f96e],ebx
  40b42a:	inc    ebp
  40b42b:	inc    ebp
  40b42c:	sbb    al,BYTE PTR [esi-0x7e]
  40b42f:	(bad)  
  40b430:	cmc    
  40b431:	test   eax,0xd4b6f598
  40b436:	mov    ecx,0xf5fe8f24
  40b43b:	or     bh,BYTE PTR [eax+0x5312f0dc]
  40b441:	or     edi,0xdeae99a7
  40b447:	shl    BYTE PTR [ebx-0x24063b2b],1
  40b44d:	fistp  QWORD PTR [edx-0x28]
  40b450:	xor    ebp,DWORD PTR [edx-0x42]
  40b453:	jnp    0x40b487
  40b455:	gs push 0x16
  40b458:	ins    DWORD PTR es:[edi],dx
  40b459:	dec    ebx
  40b45a:	in     eax,dx
  40b45b:	sub    BYTE PTR [eax],al
  40b45d:	xor    cl,cl
  40b45f:	add    cl,ah
  40b461:	cld    
  40b462:	push   esi
  40b463:	and    DWORD PTR [ecx-0x6073f28a],edi
  40b469:	mov    ds:0x9ebd8296,eax
  40b46e:	nop
  40b46f:	jno    0x40b3f9
  40b471:	sbb    eax,0x1034178a
  40b476:	ret    
  40b477:	stc    
  40b478:	(bad)  
  40b479:	paddw  mm5,mm6
  40b47c:	jae    0x40b427
  40b47e:	push   esp
  40b47f:	into   
  40b480:	mov    BYTE PTR [ecx],ah
  40b482:	mov    BYTE PTR [ebx+eax*1],ch
  40b485:	mov    dl,0xc0
  40b487:	xor    BYTE PTR [ebp-0x6a],dh
  40b48a:	or     eax,0x247b7782
  40b48f:	mov    ch,0x97
  40b491:	clc    
  40b492:	repz xchg ebp,eax
  40b494:	push   es
  40b495:	xchg   ecx,eax
  40b496:	jge    0x40b4cc
  40b498:	jae    0x40b484
  40b49a:	dec    ebp
  40b49b:	sbb    DWORD PTR [ecx+eax*1],esi
  40b49e:	jl     0x40b4da
  40b4a0:	rcl    DWORD PTR [ebx+0x28425d97],1
  40b4a6:	gs mov edx,0x2a478b45
  40b4ac:	mov    al,0xba
  40b4ae:	xchg   ecx,eax
  40b4af:	mov    bl,0x61
  40b4b1:	call   0x37cb8e68
  40b4b6:	jbe    0x40b4c5
  40b4b8:	shr    DWORD PTR [ecx],0x82
  40b4bb:	mov    al,ds:0x417ea6a2
  40b4c0:	outs   dx,DWORD PTR ds:[esi]
  40b4c1:	pop    ebx
  40b4c2:	pop    esi
  40b4c3:	push   esi
  40b4c4:	push   cs
  40b4c5:	sbb    al,0xe1
  40b4c7:	pop    ebx
  40b4c8:	or     BYTE PTR [eax],ah
  40b4ca:	into   
  40b4cb:	cld    
  40b4cc:	push   ebp
  40b4cd:	sbb    eax,0xd01b3936
  40b4d2:	bswap  ecx
  40b4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d5:	fsub   st,st(0)
  40b4d7:	(bad)  
  40b4d8:	cld    
  40b4d9:	ret    0xd1ec
  40b4dc:	pop    ebp
  40b4dd:	jno    0x40b499
  40b4df:	cmp    al,0xfb
  40b4e1:	xor    dl,ch
  40b4e3:	inc    ebp
  40b4e4:	(bad)  
  40b4e6:	imul   edx,DWORD PTR [edx-0x59],0x22404234
  40b4ed:	xchg   esi,eax
  40b4ee:	sbb    al,0x5c
  40b4f0:	sbb    eax,0x308fd352
  40b4f5:	shl    ah,1
  40b4f7:	sbb    DWORD PTR [ebx],eax
  40b4f9:	aaa    
  40b4fa:	push   ds
  40b4fb:	xchg   ebx,eax
  40b4fc:	add    edx,DWORD PTR [ebx-0x546b718c]
  40b502:	dec    ebp
  40b503:	and    DWORD PTR [ebx+0x6b55a156],0xace80da1
  40b50d:	push   edx
  40b50e:	in     al,dx
  40b50f:	dec    edx
  40b510:	(bad)  
  40b511:	xlat   BYTE PTR ds:[ebx]
  40b512:	cld    
  40b513:	xor    al,0x22
  40b515:	ds push ds
  40b517:	test   dh,cl
  40b519:	mov    fs,WORD PTR [ebx-0x18499300]
  40b51f:	daa    
  40b520:	lds    ebx,FWORD PTR [ebx]
  40b522:	xor    al,dl
  40b524:	fdivrp st(1),st
  40b526:	sbb    dh,bl
  40b528:	js     0x40b53a
  40b52a:	pushf  
  40b52b:	push   es
  40b52c:	loope  0x40b507
  40b52e:	push   es
  40b52f:	out    dx,eax
  40b530:	aaa    
  40b531:	cdq    
  40b532:	sbb    ebp,DWORD PTR [edx-0x22d510ed]
  40b538:	mov    edx,0xed0174d9
  40b53d:	cdq    
  40b53e:	pop    ecx
  40b53f:	add    esp,esi
  40b541:	loope  0x40b56d
  40b543:	cs add al,cl
  40b546:	jmp    0xb1738726
  40b54b:	mov    eax,ds:0xef141ecf
  40b550:	out    dx,al
  40b551:	jge    0x40b59b
  40b553:	(bad)  
  40b554:	(bad)  
  40b556:	test   eax,0xed05bcc3
  40b55b:	push   cs
  40b55c:	mov    ebx,0x1c29157f
  40b561:	into   
  40b562:	inc    edi
  40b563:	cmc    
  40b564:	cmp    dl,dl
  40b566:	ror    BYTE PTR [edi+0x54403a09],cl
  40b56c:	and    al,0x5e
  40b56e:	xor    ah,BYTE PTR [eax-0x640928cc]
  40b574:	(bad)  
  40b575:	dec    esi
  40b576:	sti    
  40b577:	shl    BYTE PTR [edi-0x38],cl
  40b57a:	dec    eax
  40b57b:	scas   al,BYTE PTR es:[edi]
  40b57c:	or     BYTE PTR [ebx],ah
  40b57e:	imul   DWORD PTR [ebp+ebx*2+0x4b]
  40b582:	dec    di
  40b584:	pop    ss
  40b585:	jo     0x40b53a
  40b587:	jo     0x40b52c
  40b589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b58a:	fadd   DWORD PTR [ebx]
  40b58c:	mov    bh,BYTE PTR [edi]
  40b58e:	add    al,0x78
  40b590:	aaa    
  40b591:	inc    esi
  40b592:	aam    0x1d
  40b594:	dec    DWORD PTR [edi-0x5a464ad2]
  40b59a:	push   edi
  40b59b:	sub    ah,BYTE PTR [eax+0x4e9387a0]
  40b5a1:	lock xor esi,DWORD PTR [ebx]
  40b5a4:	jge    0x40b5eb
  40b5a6:	inc    ebx
  40b5a7:	mov    edi,0x82a69bc1
  40b5ac:	mov    ebx,DWORD PTR [ebp*2-0x4c28095a]
  40b5b3:	je     0x40b5de
  40b5b5:	cmp    BYTE PTR [ebx+0x40fc8217],al
  40b5bb:	mov    BYTE PTR [eax+0x1c],dh
  40b5be:	inc    eax
  40b5bf:	push   0xfffffffb
  40b5c1:	sahf   
  40b5c2:	mov    bh,BYTE PTR [ecx-0x7dbec341]
  40b5c8:	add    eax,0xb2144cde
  40b5cd:	ins    DWORD PTR es:[edi],dx
  40b5ce:	xor    al,0x6a
  40b5d0:	xor    dl,bl
  40b5d2:	pop    ecx
  40b5d3:	dec    esi
  40b5d4:	dec    ecx
  40b5d5:	(bad)  
  40b5d7:	outs   dx,BYTE PTR ds:[esi]
  40b5d8:	push   ebp
  40b5d9:	cmp    DWORD PTR [ebx],edi
  40b5db:	jg     0x40b63c
  40b5dd:	sub    eax,DWORD PTR [esp+ebp*2+0x9]
  40b5e1:	cld    
  40b5e2:	in     al,0x24
  40b5e4:	scas   eax,DWORD PTR es:[edi]
  40b5e5:	je     0x40b5df
  40b5e7:	cmp    BYTE PTR [ecx],ah
  40b5e9:	mov    bh,0xba
  40b5eb:	adc    edx,edx
  40b5ed:	imul   ebx,DWORD PTR [ebp-0x42511b7d],0x48
  40b5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f5:	cmp    DWORD PTR [ebx+0x18],esi
  40b5f8:	lea    edx,[eax-0x64]
  40b5fb:	and    eax,0xd16ba597
  40b600:	sbb    BYTE PTR [ebp-0x1d],0xf8
  40b604:	pusha  
  40b605:	push   edi
  40b606:	pop    eax
  40b607:	mov    eax,0x29331a88
  40b60c:	(bad)
  40b611:	pushw  ds
  40b613:	std    
  40b614:	add    ebx,DWORD PTR [ebp+0x74a98aeb]
  40b61a:	stos   BYTE PTR es:[edi],al
  40b61b:	and    DWORD PTR [edx],edi
  40b61d:	mov    ecx,0xd6e8445
  40b622:	inc    eax
  40b623:	or     DWORD PTR [ecx+ebp*8-0x418b3107],ecx
  40b62a:	jmp    0x2485a43b
  40b62f:	int    0x74
  40b631:	test   BYTE PTR [edi+0x53c64a7a],ch
  40b637:	push   edx
  40b638:	jmp    0x3c2a:0x26aa2869
  40b63f:	jmp    0xbaca39fd
  40b644:	add    edi,DWORD PTR [eax-0x6d]
  40b647:	cmp    al,0xaf
  40b649:	mov    es,WORD PTR [edi+0x4b]
  40b64c:	test   DWORD PTR ds:[ecx+0x53c3aac7],ebx
  40b653:	jl     0x40b6c4
  40b655:	fldcw  WORD PTR [edx+0x54]
  40b658:	jns    0x40b64e
  40b65a:	mov    ecx,0xb050c95f
  40b65f:	(bad)  
  40b660:	outs   dx,BYTE PTR ds:[esi]
  40b661:	ror    BYTE PTR [eax-0x36],cl
  40b664:	add    bl,0xaf
  40b667:	cmp    ebx,DWORD PTR [ebp+0x1c979954]
  40b66d:	xor    bl,bh
  40b66f:	das    
  40b670:	or     BYTE PTR [edx-0x78],al
  40b673:	inc    ebp
  40b674:	out    dx,eax
  40b675:	bound  esp,QWORD PTR [eax-0x24]
  40b678:	cwde   
  40b679:	mov    esp,DWORD PTR [eax-0x69]
  40b67c:	imul   edi,DWORD PTR [ebx+esi*1],0x4b
  40b680:	mov    cl,0x76
  40b682:	loopne 0x40b681
  40b684:	inc    ecx
  40b685:	test   eax,0xd9a9de94
  40b68a:	jnp    0x40b6c4
  40b68c:	popa   
  40b68d:	push   ecx
  40b68e:	retf   0xfe59
  40b691:	sub    eax,0x71b65aa0
  40b696:	mov    ebx,0x94f0b1a0
  40b69b:	mov    al,0x24
  40b69d:	fcmovnb st,st(5)
  40b69f:	fmul   QWORD PTR [esi]
  40b6a1:	jecxz  0x40b712
  40b6a3:	jo     0x40b699
  40b6a5:	jbe    0x40b6ff
  40b6a7:	inc    esp
  40b6a8:	mov    dh,0x5b
  40b6aa:	in     al,dx
  40b6ab:	push   cs
  40b6ac:	jne    0x40b6ce
  40b6ae:	push   ds
  40b6af:	adc    bl,BYTE PTR [eax-0x36]
  40b6b2:	jae    0x40b6a2
  40b6b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b5:	dec    edi
  40b6b6:	and    al,0xf9
  40b6b8:	loope  0x40b694
  40b6ba:	sbb    al,0x2
  40b6bc:	sar    BYTE PTR [ecx-0x7c],cl
  40b6bf:	ret    
  40b6c0:	mov    ecx,0xbb87bc89
  40b6c5:	push   0xffffffd4
  40b6c7:	in     ax,dx
  40b6c9:	or     ebp,edi
  40b6cb:	add    al,0x35
  40b6cd:	jl     0x40b691
  40b6cf:	sbb    ebp,esi
  40b6d1:	mov    DWORD PTR fs:[edi-0x75],edi
  40b6d5:	out    dx,eax
  40b6d6:	xchg   DWORD PTR [edx+esi*2],edi
  40b6d9:	clc    
  40b6da:	mov    edx,ds
  40b6dc:	push   edx
  40b6dd:	in     al,0xa1
  40b6df:	test   eax,0xfe1e83dd
  40b6e4:	sub    eax,0xd6d630f5
  40b6e9:	pop    esp
  40b6ea:	sub    DWORD PTR [esi-0x77f67c59],eax
  40b6f0:	iret   
  40b6f1:	push   ebp
  40b6f2:	jle    0x40b6d0
  40b6f4:	clc    
  40b6f5:	and    al,0x90
  40b6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f8:	shr    BYTE PTR [esi+0x10],0x90
  40b6fc:	sti    
  40b6fd:	sbb    ecx,esp
  40b6ff:	mov    ah,0xb9
  40b701:	jne    0x40b748
  40b703:	repnz outs dx,BYTE PTR ds:[esi]
  40b705:	(bad)  
  40b707:	push   ss
  40b708:	dec    esp
  40b709:	jb     0x40b767
  40b70b:	lock and BYTE PTR [edi-0x1523e48a],cl
  40b712:	icebp  
  40b713:	push   esi
  40b714:	aaa    
  40b715:	pushf  
  40b716:	sti    
  40b717:	jge    0x40b78c
  40b719:	or     eax,DWORD PTR [edx-0x3c876f63]
  40b71f:	(bad)  
  40b720:	popa   
  40b721:	fist   DWORD PTR ss:[edi+0x41c65be3]
  40b728:	push   0x7e
  40b72a:	push   ebx
  40b72b:	add    al,0x48
  40b72d:	daa    
  40b72e:	aad    0xe5
  40b730:	sbb    BYTE PTR [edx+0x5b5ced8a],dl
  40b736:	pop    ebx
  40b737:	aas    
  40b738:	xchg   ebx,eax
  40b739:	lods   al,BYTE PTR ds:[esi]
  40b73a:	fistp  WORD PTR [esp+ebx*4-0x39]
  40b73e:	inc    eax
  40b73f:	ja     0x40b722
  40b741:	or     BYTE PTR [esi],dh
  40b743:	mov    eax,ds:0xa5e7b872
  40b748:	jl     0x40b70a
  40b74a:	leave  
  40b74b:	sahf   
  40b74c:	pushf  
  40b74d:	push   ds
  40b74e:	arpl   WORD PTR [ebx],dx
  40b750:	ror    DWORD PTR [edx-0x70],0xd6
  40b754:	adc    bl,ah
  40b756:	lahf   
  40b757:	pop    ds
  40b758:	call   0x4a9f:0x33588968
  40b75f:	jbe    0x40b723
  40b761:	popa   
  40b762:	pop    ss
  40b763:	and    al,0xa8
  40b765:	mov    al,0xf3
  40b767:	jmp    0x8e7f:0x725fad93
  40b76e:	out    dx,al
  40b76f:	jnp    0x40b740
  40b771:	xor    BYTE PTR [ecx+0x5e],bl
  40b774:	mov    esi,0x618e02db
  40b779:	stos   DWORD PTR es:[edi],eax
  40b77a:	sub    al,0xbc
  40b77c:	pop    ebp
  40b77d:	pop    es
  40b77e:	jg     0x40b79d
  40b780:	les    edi,FWORD PTR [eax+0x7c]
  40b783:	dec    edi
  40b784:	jle    0x40b725
  40b786:	mov    bh,0x4f
  40b788:	vmread DWORD PTR [ebp-0x67],esp
  40b78c:	inc    edx
  40b78d:	(bad)  
  40b78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b78f:	lock arpl WORD PTR [ebp-0x3eea36ad],bx
  40b796:	fnstenv [edx+0xae63346]
  40b79c:	xchg   BYTE PTR [ebx+edi*2+0x6],al
  40b7a0:	leave  
  40b7a1:	rcr    DWORD PTR [ebp-0x2c],1
  40b7a4:	and    ebp,eax
  40b7a6:	add    eax,0xa4b99915
  40b7ab:	dec    ebx
  40b7ac:	retf   
  40b7ad:	cmp    dl,BYTE PTR [ebp+0x4bcc62d5]
  40b7b3:	pop    edx
  40b7b4:	icebp  
  40b7b5:	dec    edi
  40b7b6:	cmp    DWORD PTR [edi-0x41],edx
  40b7b9:	and    al,0x4a
  40b7bb:	pop    ss
  40b7bc:	imul   esp,DWORD PTR [ebx],0xffffffba
  40b7bf:	mov    bl,0x58
  40b7c1:	stos   DWORD PTR es:[edi],eax
  40b7c2:	sbb    ah,BYTE PTR [edi+eiz*1]
  40b7c5:	loopne 0x40b804
  40b7c7:	cmp    al,BYTE PTR [eax]
  40b7c9:	or     ebp,DWORD PTR [esi+0x10]
  40b7cc:	and    eax,0xf9391332
  40b7d1:	jnp    0x40b826
  40b7d3:	mov    ss,WORD PTR [edi+0x20]
  40b7d6:	push   ebp
  40b7d7:	cli    
  40b7d8:	mov    ebx,0xefaf3dd4
  40b7dd:	cmc    
  40b7de:	push   0x9bd04570
  40b7e3:	inc    eax
  40b7e4:	push   eax
  40b7e5:	mov    WORD PTR [edi],ds
  40b7e7:	sub    dh,BYTE PTR [eax+eax*2-0x34a1b232]
  40b7ee:	je     0x40b848
  40b7f0:	icebp  
  40b7f1:	pusha  
  40b7f2:	jnp    0x40b77e
  40b7f4:	gs call 0x506d7871
  40b7fa:	call   0x9e22:0x8b917c6b
  40b801:	inc    esi
  40b802:	cmp    esi,DWORD PTR [eax]
  40b804:	and    DWORD PTR [edx-0x46bc93a8],edi
  40b80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b80b:	stc    
  40b80c:	cmp    DWORD PTR [edi+0xfdfbeae],ebp
  40b812:	cdq    
  40b813:	xchg   ecx,eax
  40b814:	mov    bl,0xc2
  40b816:	pop    edx
  40b817:	dec    eax
  40b818:	jne    0x40b84b
  40b81a:	mov    eax,ds:0x791c6196
  40b81f:	push   ds
  40b820:	in     al,dx
  40b821:	bts    ebp,edi
  40b824:	add    dl,BYTE PTR [edi+eax*2+0x26424780]
  40b82b:	js     0x40b82e
  40b82d:	push   ecx
  40b82e:	xchg   esi,eax
  40b82f:	push   edi
  40b830:	add    al,0xbb
  40b832:	mov    DWORD PTR [edx],ebp
  40b834:	sbb    al,0x63
  40b836:	jns    0x40b7c0
  40b838:	pop    ds
  40b839:	push   0x713e166d
  40b83e:	cmp    bl,bl
  40b840:	stos   DWORD PTR es:[edi],eax
  40b841:	sahf   
  40b842:	jmp    0x40b861
  40b844:	pop    ebx
  40b845:	shl    DWORD PTR [ebp-0x3f],1
  40b848:	mov    ch,0xe1
  40b84a:	xchg   edx,eax
  40b84b:	mov    al,0xbc
  40b84d:	in     eax,0x3e
  40b84f:	push   eax
  40b850:	gs ins BYTE PTR es:[edi],dx
  40b852:	call   0xf300d539
  40b857:	cmc    
  40b858:	push   ss
  40b859:	xor    bh,BYTE PTR [ebp-0x2f172835]
  40b85f:	(bad)  
  40b860:	arpl   WORD PTR [eax+0x45581682],sp
  40b866:	push   eax
  40b867:	cmp    al,0x68
  40b869:	lahf   
  40b86a:	or     ebx,DWORD PTR [edi]
  40b86c:	call   0x46aed66b
  40b871:	pusha  
  40b872:	clc    
  40b873:	jg     0x40b7f5
  40b875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b876:	mov    eax,ds:0xfe688e60
  40b87b:	xor    ecx,edi
  40b87d:	jne    0x40b8ea
  40b87f:	test   ch,0xc5
  40b882:	mov    ebp,0xb6e93965
  40b887:	bound  ebx,QWORD PTR [ebp-0x1cc43690]
  40b88d:	mov    eax,ebx
  40b88f:	jmp    0x40b83a
  40b891:	nop
  40b892:	(bad)  
  40b894:	mov    cl,0x9a
  40b896:	pop    eax
  40b897:	and    eax,ebx
  40b899:	sub    edx,DWORD PTR [edi]
  40b89b:	repz dec esp
  40b89d:	(bad)
  40b8a0:	sti    
  40b8a1:	mov    bl,0xfe
  40b8a3:	dec    esp
  40b8a4:	fidivr DWORD PTR [ebx+0x6cd0baa7]
  40b8aa:	mov    ah,BYTE PTR [edi]
  40b8ac:	fisubr DWORD PTR [ebx+eax*4]
  40b8af:	jg     0x40b8c5
  40b8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b2:	push   0x9833d3fe
  40b8b7:	mov    cs,WORD PTR [ebx-0x497cccf3]
  40b8bd:	in     al,0x7c
  40b8bf:	test   al,0x54
  40b8c1:	jl     0x40b898
  40b8c3:	pop    ecx
  40b8c4:	add    al,BYTE PTR [edi-0x1dd38bca]
  40b8ca:	and    dh,BYTE PTR [ebx+0x55]
  40b8cd:	push   cs
  40b8ce:	pop    eax
  40b8cf:	jbe    0x40b919
  40b8d1:	in     eax,dx
  40b8d2:	cld    
  40b8d3:	(bad)  
  40b8d4:	jecxz  0x40b882
  40b8d6:	xchg   BYTE PTR ds:0x4e649357,dh
  40b8dc:	call   0x43c79ab6
  40b8e1:	bound  ebp,QWORD PTR [ecx+0x70]
  40b8e4:	jbe    0x40b946
  40b8e6:	pop    ebp
  40b8e7:	mov    bh,0x25
  40b8e9:	ins    BYTE PTR es:[edi],dx
  40b8ea:	dec    ecx
  40b8eb:	mov    ebx,0x5a183c19
  40b8f0:	dec    esp
  40b8f1:	ins    DWORD PTR es:[edi],dx
  40b8f2:	jg     0x40b90c
  40b8f4:	adc    al,dl
  40b8f6:	in     eax,0xc9
  40b8f8:	sub    al,0x3c
  40b8fa:	sbb    DWORD PTR [edi-0x58bc3a9b],ebx
  40b900:	imul   DWORD PTR [edx-0x5b]
  40b903:	rcr    DWORD PTR [esi-0x59139967],0xf8
  40b90a:	or     BYTE PTR [ebx+0x1c],dl
  40b90d:	mov    dh,0x22
  40b90f:	xor    ebx,DWORD PTR [esi-0x221105c2]
  40b915:	lock jbe 0x40b986
  40b918:	fwait
  40b919:	cmp    bl,BYTE PTR [ebp-0x277142a7]
  40b91f:	sub    DWORD PTR [edx],edi
  40b921:	or     ah,BYTE PTR [edx]
  40b923:	cld    
  40b924:	mov    esp,0x7bd7320a
  40b929:	outs   dx,BYTE PTR ds:[esi]
  40b92a:	mov    ds:0x5c787e7e,eax
  40b92f:	or     bh,dh
  40b931:	stos   BYTE PTR es:[edi],al
  40b932:	lock int3 
  40b934:	call   DWORD PTR [ecx-0x4e6bdb51]
  40b93a:	daa    
  40b93b:	rcl    BYTE PTR [eax+0x4f970595],cl
  40b941:	or     DWORD PTR [ebx-0x3888337d],edi
  40b947:	sbb    ecx,esi
  40b949:	loopne 0x40b932
  40b94b:	rol    BYTE PTR [ebp+0x546232c],cl
  40b951:	jno    0x40b9c6
  40b953:	add    DWORD PTR [esi-0x5b3e8e53],ecx
  40b959:	xor    eax,0x68d8f105
  40b95e:	into   
  40b95f:	jge    0x40b93a
  40b961:	cwde   
  40b962:	jl     0x40b966
  40b964:	aaa    
  40b965:	cmp    esp,edi
  40b967:	jno    0x40b93e
  40b969:	xor    ebx,DWORD PTR [ebx]
  40b96b:	das    
  40b96c:	add    edx,DWORD PTR [esi-0x76008c4]
  40b972:	cmp    dh,BYTE PTR [ecx+0x3d]
  40b975:	push   0xa65e9a64
  40b97a:	mov    cs,WORD PTR [edx-0x36]
  40b97d:	push   ecx
  40b97e:	mov    ds:0x965003cb,al
  40b983:	xor    edi,DWORD PTR [edi]
  40b985:	scas   al,BYTE PTR es:[edi]
  40b986:	jecxz  0x40b93b
  40b988:	ror    DWORD PTR [edx+edi*2-0x4b],0x8c
  40b98d:	pop    es
  40b98e:	nop
  40b98f:	or     al,0xa0
  40b991:	shr    BYTE PTR [edi+ecx*1-0x29083cb3],0xa4
  40b999:	rol    DWORD PTR [esi-0xae25da7],0xce
  40b9a0:	pushf  
  40b9a1:	popaw  
  40b9a3:	inc    ebx
  40b9a4:	(bad)  
  40b9a5:	das    
  40b9a6:	xor    edi,ebx
  40b9a8:	jbe    0x40b943
  40b9aa:	icebp  
  40b9ab:	sub    DWORD PTR [edx-0x3de81c6c],0x1bdd2819
  40b9b5:	popf   
  40b9b6:	repz inc esi
  40b9b8:	scas   al,BYTE PTR es:[edi]
  40b9b9:	in     al,dx
  40b9ba:	dec    edi
  40b9bb:	ret    
  40b9bc:	pop    ebp
  40b9bd:	retf   
  40b9be:	int    0xf8
  40b9c0:	rol    DWORD PTR [esi-0x19314fcc],0xdc
  40b9c7:	push   ss
  40b9c8:	shl    BYTE PTR [bp+di-0x65c7],1
  40b9cd:	push   eax
  40b9ce:	cmc    
  40b9cf:	xchg   BYTE PTR [ebx-0x34],dl
  40b9d2:	(bad)  
  40b9d3:	xlat   BYTE PTR ds:[ebx]
  40b9d4:	or     DWORD PTR [esi+0x2ae66b14],esi
  40b9da:	push   esp
  40b9db:	pusha  
  40b9dc:	or     DWORD PTR [ebp+0x22cebfde],edi
  40b9e2:	rcr    DWORD PTR [ebx+eax*8+0x6aa086ef],cl
  40b9e9:	push   DWORD PTR [edi+0x6371403e]
  40b9ef:	rcr    DWORD PTR [ebp-0x1f672cc7],0xfe
  40b9f6:	add    DWORD PTR [esi+esi*8-0x47f54afe],0x3f6de623
  40ba01:	ds push 0x27
  40ba04:	xor    ah,BYTE PTR [esi]
  40ba06:	adc    DWORD PTR [edx-0x48],edx
  40ba09:	fld    DWORD PTR [ecx+0x75]
  40ba0c:	gs xchg al,ch
  40ba0f:	fadd   st(2),st
  40ba11:	xchg   esp,eax
  40ba12:	jp     0x40ba11
  40ba14:	lds    ecx,FWORD PTR [edi]
  40ba16:	push   edi
  40ba17:	aaa    
  40ba18:	push   ss
  40ba19:	out    0x50,eax
  40ba1b:	pop    ss
  40ba1c:	in     eax,0xe5
  40ba1e:	dec    edi
  40ba1f:	sub    eax,0x84343f72
  40ba24:	scas   eax,DWORD PTR es:[edi]
  40ba25:	lods   al,BYTE PTR ds:[esi]
  40ba26:	mov    dh,0x6a
  40ba28:	jo     0x40ba68
  40ba2a:	mov    bh,BYTE PTR ds:0xe8ec8029
  40ba30:	mov    dl,0x2e
  40ba32:	ins    DWORD PTR es:[edi],dx
  40ba33:	rcl    DWORD PTR [edi-0x46],1
  40ba36:	cld    
  40ba37:	and    ebx,DWORD PTR [esi+eiz*8-0x1f]
  40ba3b:	adc    al,0x3a
  40ba3d:	rcr    DWORD PTR [ebx+0x140011d4],0x77
  40ba44:	mov    al,ch
  40ba46:	jb     0x40baa0
  40ba48:	sub    eax,0x15528554
  40ba4d:	or     eax,0xb5ae68de
  40ba52:	and    al,0x10
  40ba54:	pop    edi
  40ba55:	mov    ebx,0x1be574f7
  40ba5a:	fs pop ebp
  40ba5c:	add    al,0xac
  40ba5e:	mov    al,0x33
  40ba60:	mov    edx,0xd5212e0f
  40ba65:	xchg   DWORD PTR [edx+0x13],eax
  40ba68:	sbb    eax,0x133da54e
  40ba6d:	cdq    
  40ba6e:	jmp    0x3ca1:0x24c8cf22
  40ba75:	adc    DWORD PTR [esp+ebp*2+0x38],edx
  40ba79:	aas    
  40ba7a:	pusha  
  40ba7b:	ret    
  40ba7c:	shl    cl,cl
  40ba7e:	jmp    0xb9d0:0xcc7765da
  40ba85:	hlt    
  40ba86:	xlat   BYTE PTR ds:[ebx]
  40ba87:	mov    BYTE PTR ds:0x6b374e61,dl
  40ba8d:	es pop ss
  40ba8f:	dec    edi
  40ba90:	mov    ds:0x7a681a1a,al
  40ba95:	in     eax,dx
  40ba96:	lea    edx,[ebx]
  40ba98:	fnstsw WORD PTR [ecx-0x75]
  40ba9b:	adc    BYTE PTR [ebx+ebx*1],al
  40ba9e:	mov    edx,0x237f55e3
  40baa3:	std    
  40baa4:	ins    BYTE PTR es:[edi],dx
  40baa5:	push   cs
  40baa6:	jp     0x40ba9f
  40baa8:	xchg   ebp,eax
  40baa9:	xchg   esp,eax
  40baaa:	add    al,ch
  40baac:	or     edi,ecx
  40baae:	pop    esp
  40baaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab0:	loopne 0x40ba33
  40bab2:	adc    ebp,DWORD PTR [eax+0x55]
  40bab5:	lea    esp,[edx+0x61240f77]
  40babb:	dec    ebp
  40babc:	push   ds
  40babd:	mov    ebp,0xc6d0c5a0
  40bac2:	cmp    eax,0x83426334
  40bac7:	out    dx,al
  40bac8:	test   eax,0x8732360c
  40bacd:	aas    
  40bace:	sub    eax,0x18b73f6d
  40bad3:	sub    esp,DWORD PTR [ebx]
  40bad5:	lds    esi,FWORD PTR [esi+0x73]
  40bad8:	pop    esp
  40bad9:	retf   
  40bada:	pop    ebp
  40badb:	retf   
  40badc:	mov    edx,DWORD PTR [esi]
  40bade:	jg     0x40bab9
  40bae0:	fnstcw WORD PTR [edx+0x767e2bfd]
  40bae6:	adc    ebp,DWORD PTR [edx+0x2b5d9b79]
  40baec:	or     esi,DWORD PTR [edx+0x7cd0f4ee]
  40baf2:	jg     0x40bb3a
  40baf4:	pop    ebx
  40baf5:	pop    edx
  40baf6:	mov    cl,0xb2
  40baf8:	jne    0x40ba89
  40bafa:	outs   dx,DWORD PTR ds:[esi]
  40bafb:	nop
  40bafc:	fimul  DWORD PTR [bp+0x43]
  40bb00:	ja     0x40bb0b
  40bb02:	(bad)  
  40bb03:	mov    ds:0x1d26ff17,eax
  40bb08:	neg    dh
  40bb0a:	push   eax
  40bb0c:	mov    dl,0xc3
  40bb0e:	sbb    eax,0x806b0676
  40bb13:	dec    eax
  40bb14:	scas   eax,DWORD PTR es:[edi]
  40bb15:	pop    ebx
  40bb16:	ror    BYTE PTR [esi+0x7ace94a5],0x26
  40bb1d:	dec    esp
  40bb1e:	les    ecx,FWORD PTR ds:0x1e66503c
  40bb24:	ror    BYTE PTR [edx+0x50],cl
  40bb27:	xchg   DWORD PTR [ebx-0x4d],esp
  40bb2a:	xchg   esi,eax
  40bb2b:	es loop 0x40bab9
  40bb2e:	clc    
  40bb2f:	xchg   ecx,eax
  40bb30:	js     0x40bb0c
  40bb32:	inc    edx
  40bb33:	push   esi
  40bb34:	loopne 0x40bae4
  40bb36:	sahf   
  40bb37:	jle    0x40bb1c
  40bb39:	xlat   BYTE PTR ds:[ebx]
  40bb3a:	mov    bh,0xf6
  40bb3c:	popa   
  40bb3d:	mov    edx,0x15cee372
  40bb42:	jp     0x40baeb
  40bb44:	jle    0x40bb8c
  40bb46:	mov    ecx,0x5c935508
  40bb4b:	jecxz  0x40bb97
  40bb4d:	jmp    0x40bafe
  40bb4f:	adc    ch,BYTE PTR [edi+0x3faf0da9]
  40bb55:	js     0x40badc
  40bb57:	lea    esi,[eax+0x36]
  40bb5a:	mov    esp,0x4bc329d2
  40bb5f:	hlt    
  40bb60:	sub    esp,DWORD PTR [edx-0x2f]
  40bb63:	popa   
  40bb64:	or     esp,eax
  40bb66:	xor    bl,BYTE PTR [ecx]
  40bb68:	aas    
  40bb69:	sbb    al,BYTE PTR [edx]
  40bb6b:	pop    edx
  40bb6c:	cmp    eax,0x7ff08042
  40bb71:	jmp    0x8685:0xc5fc81f2
  40bb78:	loopne 0x40bb9e
  40bb7a:	cli    
  40bb7b:	jl     0x40bb43
  40bb7d:	nop
  40bb7e:	jne    0x40bb57
  40bb80:	mov    DWORD PTR [edi],ecx
  40bb82:	scas   eax,DWORD PTR es:[edi]
  40bb83:	popf   
  40bb84:	cs push ebx
  40bb86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb87:	cmp    al,0xb7
  40bb89:	push   ebp
  40bb8a:	stos   DWORD PTR es:[edi],eax
  40bb8b:	inc    ebp
  40bb8c:	sub    ah,dl
  40bb8e:	ss loope 0x40bb46
  40bb91:	mov    al,0x7d
  40bb93:	aaa    
  40bb94:	mov    WORD PTR [esi],ss
  40bb96:	int    0x22
  40bb98:	jg     0x40bb48
  40bb9a:	fmul   DWORD PTR [ecx]
  40bb9c:	loopne 0x40bba7
  40bb9e:	dec    edx
  40bb9f:	es (bad) 
  40bba1:	nop
  40bba2:	fnsave [ebx+0x50]
  40bba5:	pop    esp
  40bba6:	int    0xe4
  40bba8:	test   DWORD PTR [eax+eax*2-0x1d9140ea],0xe5412103
  40bbb3:	cli    
  40bbb4:	sbb    BYTE PTR ds:0x5beaf8df,ah
  40bbba:	jno    0x40bbc7
  40bbbc:	lock aaa 
  40bbbe:	iret   
  40bbbf:	adc    DWORD PTR [edx+0x35],0x25
  40bbc3:	fnstenv [eax]
  40bbc5:	fs pop es
  40bbc7:	jno    0x40bb75
  40bbc9:	dec    edi
  40bbca:	js     0x40bbee
  40bbcc:	sbb    edi,edx
  40bbce:	into   
  40bbcf:	sar    DWORD PTR [eax+edi*2+0xf2e73a],1
  40bbd6:	call   0xf43340bc
  40bbdb:	aaa    
  40bbdc:	cwde   
  40bbdd:	jne    0x40bc1c
  40bbdf:	push   cs
  40bbe0:	loope  0x40bc5d
  40bbe2:	fstp   QWORD PTR [eax-0x5ab216c4]
  40bbe8:	test   BYTE PTR [edi+0x7f48e431],cl
  40bbee:	cmp    dh,ch
  40bbf0:	in     eax,0xf5
  40bbf2:	jg     0x40bc3d
  40bbf4:	cmp    al,0xf
  40bbf6:	out    0xd9,al
  40bbf8:	bound  esi,QWORD PTR [ecx]
  40bbfa:	sbb    ebp,ebp
  40bbfc:	mov    dl,0x71
  40bbfe:	jne    0x40bc02
  40bc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc01:	mov    ch,0x4e
  40bc03:	mov    ecx,0xb6af8d4a
  40bc08:	nop
  40bc09:	push   es
  40bc0a:	pusha  
  40bc0b:	cmp    dl,dl
  40bc0d:	fwait
  40bc0e:	not    cl
  40bc10:	fadd   QWORD PTR [ebx-0x6a]
  40bc13:	and    eax,0xefb75fbe
  40bc18:	pop    edi
  40bc19:	pop    esp
  40bc1a:	ror    BYTE PTR [eax-0x2060b3ea],cl
  40bc20:	pop    ds
  40bc21:	sub    eax,0xb9903014
  40bc26:	mov    esi,0x581c6a95
  40bc2b:	push   ecx
  40bc2c:	retf   0xc506
  40bc2f:	fild   QWORD PTR [ebp+0x46]
  40bc32:	(bad)  
  40bc33:	mov    dl,0x20
  40bc35:	call   esp
  40bc37:	mov    bh,BYTE PTR [ebp-0x4e]
  40bc3a:	loope  0x40bc59
  40bc3c:	lds    ebx,FWORD PTR [edx-0x1d]
  40bc3f:	fsub   DWORD PTR [esi-0x6d4ccf50]
  40bc45:	pop    ebp
  40bc46:	or     ebp,ebx
  40bc48:	sub    dl,BYTE PTR [eax]
  40bc4a:	dec    esp
  40bc4b:	jae    0x40bbfb
  40bc4d:	jb     0x40bbf9
  40bc4f:	xchg   edx,eax
  40bc50:	popf   
  40bc51:	jne    0x40bc78
  40bc53:	dec    edx
  40bc54:	test   BYTE PTR [ebx],bh
  40bc56:	(bad)  
  40bc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc58:	inc    edi
  40bc59:	mov    dh,0x7c
  40bc5b:	aam    0x5b
  40bc5d:	push   esi
  40bc5e:	xlat   BYTE PTR ds:[ebx]
  40bc5f:	mov    ch,dh
  40bc61:	out    0x7f,al
  40bc63:	arpl   WORD PTR [edx+0x7f3aead8],di
  40bc69:	(bad)  
  40bc6a:	sub    al,0x3b
  40bc6c:	or     eax,0x29a9c9c
  40bc71:	add    ecx,esi
  40bc73:	jg     0x40bbfa
  40bc75:	shr    dl,0x3c
  40bc78:	mov    edi,0x4dbe0d5c
  40bc7d:	inc    ebp
  40bc7e:	mov    al,ds:0x286eb995
  40bc83:	ins    DWORD PTR es:[edi],dx
  40bc84:	inc    edi
  40bc85:	repz xor BYTE PTR [esp+ebp*4],dl
  40bc89:	mov    esi,0x104e64d
  40bc8e:	ins    DWORD PTR es:[edi],dx
  40bc8f:	(bad)  
  40bc90:	lahf   
  40bc91:	retf   0x4f32
  40bc94:	dec    ecx
  40bc95:	ss and eax,0x3b20b88b
  40bc9b:	sar    DWORD PTR [ecx+0x7bdc06e7],0xb4
  40bca2:	inc    esp
  40bca3:	clc    
  40bca4:	mov    ah,0x5
  40bca6:	icebp  
  40bca7:	xor    bh,BYTE PTR [ebp-0x68]
  40bcaa:	sbb    eax,0x834d6791
  40bcaf:	cmp    eax,0x62264151
  40bcb4:	push   esi
  40bcb5:	bound  eax,QWORD PTR [ebx-0x3666095b]
  40bcbb:	xchg   esp,eax
  40bcbc:	xlat   BYTE PTR ds:[ebx]
  40bcbd:	sub    dh,BYTE PTR [esi-0x29]
  40bcc0:	sub    DWORD PTR [edx],esp
  40bcc2:	cdq    
  40bcc3:	aas    
  40bcc4:	loop   0x40bce0
  40bcc6:	mov    dl,0xe5
  40bcc8:	icebp  
  40bcc9:	in     eax,dx
  40bcca:	push   edi
  40bccb:	inc    ecx
  40bccc:	(bad)  
  40bcce:	add    al,bh
  40bcd0:	xor    eax,0xf7d60f15
  40bcd5:	in     eax,dx
  40bcd6:	or     ch,BYTE PTR [ebp-0x5b8b0e27]
  40bcdc:	push   0xffffffc8
  40bcde:	popf   
  40bcdf:	push   esp
  40bce0:	cmp    ebp,esp
  40bce2:	mov    dl,0x50
  40bce4:	into   
  40bce5:	xchg   esp,eax
  40bce6:	(bad)  
  40bce7:	out    dx,eax
  40bce8:	mov    ecx,0xf1c9c33b
  40bced:	mov    DWORD PTR [esi],ebp
  40bcef:	je     0x40bcd5
  40bcf1:	popf   
  40bcf2:	xchg   ebx,eax
  40bcf3:	xchg   ecx,eax
  40bcf4:	mov    esp,0x1854d432
  40bcf9:	xchg   edx,eax
  40bcfa:	fmul   st(4),st
  40bcfc:	mov    ebp,0x411530f3
  40bd01:	inc    ebx
  40bd02:	shr    bl,1
  40bd04:	mov    ah,0x5d
  40bd06:	(bad)  
  40bd07:	adc    edx,DWORD PTR [ebx]
  40bd09:	inc    ebx
  40bd0a:	fdivr  st,st(7)
  40bd0c:	lods   al,BYTE PTR ds:[esi]
  40bd0d:	stos   BYTE PTR es:[edi],al
  40bd0e:	fadd   QWORD PTR [ecx]
  40bd10:	aam    0x2e
  40bd12:	jmp    0xc0e5:0x5e722782
  40bd19:	rol    DWORD PTR [ecx],cl
  40bd1b:	cmp    BYTE PTR [ecx],0x39
  40bd1e:	int3   
  40bd1f:	imul   eax,DWORD PTR [eax+0x63],0xffffffa7
  40bd23:	ret    
  40bd24:	in     al,dx
  40bd25:	test   eax,0x13b1832a
  40bd2a:	sub    eax,0xfd128ef3
  40bd2f:	mov    dl,0x37
  40bd31:	test   eax,0xeb67d6bf
  40bd36:	jp     0x40bcba
  40bd38:	call   0x8bdb6012
  40bd3d:	adc    eax,0x3f5c4e32
  40bd42:	cmp    BYTE PTR [esi-0x6f2f1f89],al
  40bd48:	(bad)  
  40bd49:	iret   
  40bd4a:	xchg   ecx,eax
  40bd4b:	jmp    0x1dacc0db
  40bd50:	scas   al,BYTE PTR es:[edi]
  40bd51:	retf   
  40bd52:	icebp  
  40bd53:	lea    edx,[ebx+0x68]
  40bd56:	nop
  40bd57:	fwait
  40bd58:	mov    ah,0xab
  40bd5a:	push   edi
  40bd5b:	mov    edi,0x3c877cc1
  40bd60:	imul   ecx,DWORD PTR [esp+ebp*2-0x14a477bc],0x50c75237
  40bd6b:	sub    dh,BYTE PTR [esi-0x1b]
  40bd6e:	outs   dx,DWORD PTR ds:[esi]
  40bd6f:	arpl   WORD PTR [ebx-0x4ee6ba2f],cx
  40bd75:	(bad)  
  40bd76:	xchg   ebx,eax
  40bd77:	rcr    BYTE PTR [ebp-0x68],cl
  40bd7a:	add    eax,DWORD PTR [ebx]
  40bd7c:	loop   0x40bdce
  40bd7e:	js     0x40bd59
  40bd80:	sub    eax,0xe6bb53c7
  40bd85:	dec    ebp
  40bd86:	pusha  
  40bd87:	dec    esi
  40bd88:	in     eax,0x1c
  40bd8a:	inc    edi
  40bd8b:	mov    dl,bl
  40bd8d:	sbb    al,0xcf
  40bd8f:	stc    
  40bd90:	sbb    dh,BYTE PTR ds:0xdc89f291
  40bd96:	jmp    0xd6de3ea2
  40bd9b:	or     bl,BYTE PTR [edx-0x3f]
  40bd9e:	jecxz  0x40bd68
  40bda0:	aam    0xdc
  40bda2:	cmp    BYTE PTR [edx+eiz*4],dh
  40bda5:	test   BYTE PTR [ebp-0x42],bl
  40bda8:	rcr    eax,cl
  40bdaa:	cmp    eax,0x74126128
  40bdaf:	adc    al,BYTE PTR [eax+ebx*2-0x5d]
  40bdb3:	mov    bl,0x35
  40bdb5:	das    
  40bdb6:	jle    0x40bd71
  40bdb8:	fist   WORD PTR [edi]
  40bdba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdbb:	mov    bl,0xc0
  40bdbd:	sub    DWORD PTR [edx-0x4480e356],edx
  40bdc3:	fmul   QWORD PTR [ecx+0x0]
  40bdc6:	pop    esp
  40bdc7:	inc    ecx
  40bdc8:	dec    edx
  40bdc9:	pop    es
  40bdca:	inc    ebp
  40bdcb:	mov    ah,0xfb
  40bdcd:	adc    BYTE PTR [edx-0x376aca28],0x23
  40bdd4:	sub    eax,0xc6461d53
  40bdd9:	dec    eax
  40bdda:	add    BYTE PTR [esi],ch
  40bddc:	jle    0x40bde9
  40bdde:	sub    DWORD PTR [ebp-0x78d24406],ebp
  40bde4:	popf   
  40bde5:	add    ebx,DWORD PTR [esi-0x44]
  40bde8:	push   ss
  40bde9:	jne    0x40bd8d
  40bdeb:	js     0x40bd76
  40bded:	sub    eax,0xe95bc35a
  40bdf2:	xor    al,BYTE PTR [ebx+0x2e]
  40bdf5:	sbb    ecx,DWORD PTR [eax]
  40bdf7:	std    
  40bdf8:	cmp    eax,0xa940f04b
  40bdfd:	sub    edi,0x33
  40be00:	dec    esp
  40be01:	cs push eax
  40be03:	(bad)  [eax]
  40be05:	mov    al,0xe0
  40be07:	(bad)  
  40be08:	or     eax,0x10c07a1
  40be0d:	test   DWORD PTR [eax],edi
  40be0f:	out    dx,eax
  40be10:	test   DWORD PTR [edi*8-0x7f374e8e],0x5cc5a728
  40be1b:	popa   
  40be1c:	mov    al,0x5
  40be1e:	jb     0x40bde8
  40be20:	mov    WORD PTR [edx+edi*1+0x14dabdba],gs
  40be27:	push   esp
  40be28:	mov    bl,0x9d
  40be2a:	or     DWORD PTR [ebx-0x18f7c451],edi
  40be30:	std    
  40be31:	xchg   edi,eax
  40be32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be33:	out    0xcc,eax
  40be35:	std    
  40be36:	jge    0x40bdc6
  40be38:	lock pop ecx
  40be3a:	les    esp,FWORD PTR [esi-0x46]
  40be3d:	shl    BYTE PTR [esi+ebx*8],0x1
  40be41:	push   edx
  40be42:	push   0x1
  40be44:	mov    bh,0x37
  40be46:	and    bl,BYTE PTR [edx+0x191c534]
  40be4c:	repz fisttp WORD PTR [ebx+0x2b]
  40be50:	out    dx,eax
  40be51:	ret    0xbc85
  40be54:	ds sub al,0xce
  40be57:	retf   0x2d3c
  40be5a:	pop    ebp
  40be5b:	lds    ebp,FWORD PTR [ebx+eax*2]
  40be5e:	sbb    edi,DWORD PTR [esi-0x36ee6934]
  40be64:	out    dx,eax
  40be65:	stos   DWORD PTR es:[edi],eax
  40be66:	cmp    ebx,ebx
  40be68:	loop   0x40be03
  40be6a:	pop    edx
  40be6b:	xor    ebx,DWORD PTR [ebx+0x7a]
  40be6e:	adc    eax,0x49feeddc
  40be73:	mov    edi,0x30052846
  40be78:	push   cs
  40be79:	addr16 loope 0x40be5e
  40be7c:	xor    eax,0xcc7ffe10
  40be81:	test   DWORD PTR [ebp-0x33979aef],0x1b8982bd
  40be8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be8c:	stos   DWORD PTR es:[edi],eax
  40be8d:	repz mov al,0x5f
  40be90:	or     al,0xc
  40be92:	icebp  
  40be93:	lds    esi,FWORD PTR [ecx+eax*4]
  40be96:	inc    esp
  40be97:	push   0x3a63f33b
  40be9c:	mov    al,0x57
  40be9e:	leavew 
  40bea0:	mov    cl,0x92
  40bea2:	cmp    DWORD PTR [ecx+0x46],esp
  40bea5:	or     al,0xf7
  40bea7:	jge    0x40bed6
  40bea9:	fstp   QWORD PTR [ebx-0x7682e211]
  40beaf:	add    di,WORD PTR [edx+edi*4+0x3d]
  40beb4:	lahf   
  40beb5:	out    dx,eax
  40beb6:	mov    cl,0x5
  40beb8:	shl    DWORD PTR [edx*8-0xd2e7bf0],0x2a
  40bec0:	mov    ebx,0x68a10ec9
  40bec5:	dec    esi
  40bec6:	addr16 cmp eax,0x9dfa05f4
  40becc:	shl    BYTE PTR [edi+0x50],cl
  40becf:	push   0xc8eb8ea9
  40bed4:	into   
  40bed5:	cwde   
  40bed6:	mov    ch,0xc2
  40bed8:	mul    BYTE PTR [edx]
  40beda:	aas    
  40bedb:	xchg   ch,dh
  40bedd:	add    cl,0x1f
  40bee0:	int3   
  40bee1:	aad    0x2a
  40bee3:	pop    ebp
  40bee4:	rcl    eax,cl
  40bee6:	pop    ds
  40bee7:	add    al,0xf1
  40bee9:	sar    DWORD PTR [edx],cl
  40beeb:	pop    ecx
  40beec:	and    al,0x4d
  40beee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beef:	jg     0x40be75
  40bef1:	js     0x40bf57
  40bef3:	xchg   esi,eax
  40bef4:	inc    edi
  40bef5:	and    eax,0x29723235
  40befa:	daa    
  40befb:	dec    eax
  40befc:	push   cs
  40befd:	inc    esp
  40befe:	inc    ebp
  40beff:	pop    eax
  40bf00:	inc    ebp
  40bf01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf02:	inc    edx
  40bf03:	pop    esp
  40bf04:	cli    
  40bf05:	lahf   
  40bf06:	call   0x8f87fbe1
  40bf0b:	sub    DWORD PTR [eax-0x7f],esp
  40bf0e:	pusha  
  40bf0f:	dec    eax
  40bf10:	mov    DWORD PTR [edi+ebp*4-0xca26e04],edx
  40bf17:	cld    
  40bf18:	(bad)  
  40bf19:	ja     0x40bee4
  40bf1b:	inc    ecx
  40bf1c:	mov    edi,0x229634b1
  40bf21:	mov    dl,0xec
  40bf23:	mov    esp,0xa87af69a
  40bf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf29:	inc    eax
  40bf2a:	ret    0x1de2
  40bf2d:	sbb    DWORD PTR [esp+edx*1-0x5e78394c],0xe11d99dd
  40bf38:	in     eax,dx
  40bf39:	inc    esp
  40bf3a:	mov    DWORD PTR [esi],ebx
  40bf3c:	es mov bh,0x8d
  40bf3f:	jae    0x40bf63
  40bf41:	sub    al,0xf3
  40bf43:	shl    cl,1
  40bf45:	repz xchg ebx,eax
  40bf47:	jecxz  0x40bf04
  40bf49:	add    bh,bl
  40bf4b:	sub    al,0x33
  40bf4d:	rcl    bh,1
  40bf4f:	jp     0x40bf58
  40bf51:	or     ecx,DWORD PTR [ebx+0x6b]
  40bf54:	les    eax,FWORD PTR [esi+0x1d]
  40bf57:	fild   DWORD PTR [edi+0x6d]
  40bf5a:	add    BYTE PTR [eax+0x17],bl
  40bf5d:	jp     0x40bf42
  40bf5f:	push   edx
  40bf60:	(bad)  
  40bf61:	les    esp,FWORD PTR [ecx]
  40bf63:	mov    ch,0x98
  40bf65:	(bad)
  40bf68:	and    edi,DWORD PTR [edi]
  40bf6a:	jmp    0x7790c266
  40bf6f:	dec    ecx
  40bf70:	xchg   esi,eax
  40bf71:	test   DWORD PTR [ecx+0x7235781b],ecx
  40bf77:	stc    
  40bf78:	iret   
  40bf79:	push   eax
  40bf7a:	jne    0x40bf78
  40bf7c:	fistp  DWORD PTR [ecx+0x733e5c01]
  40bf82:	aaa    
  40bf83:	push   cs
  40bf84:	dec    ebx
  40bf85:	aaa    
  40bf86:	fidiv  WORD PTR [eax+0x47]
  40bf89:	mov    dh,0xef
  40bf8b:	popf   
  40bf8c:	enter  0x3971,0x35
  40bf90:	stc    
  40bf91:	push   edx
  40bf92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf93:	and    eax,esp
  40bf95:	daa    
  40bf96:	scas   eax,DWORD PTR es:[edi]
  40bf97:	das    
  40bf98:	test   al,0x53
  40bf9a:	(bad)  
  40bf9c:	cwde   
  40bf9d:	cmp    BYTE PTR [ebx],al
  40bf9f:	out    dx,al
  40bfa0:	ins    DWORD PTR es:[edi],dx
  40bfa1:	adc    edx,0x4c
  40bfa4:	icebp  
  40bfa5:	jbe    0x40bfd0
  40bfa7:	in     al,0x3
  40bfa9:	push   ds
  40bfaa:	shr    BYTE PTR [ebp-0x659d0d60],0x2d
  40bfb1:	call   0x970c731a
  40bfb6:	mov    esp,0xd192923a
  40bfbb:	imul   ecx,DWORD PTR [ebx+0x5e3462b9],0xffffffba
  40bfc2:	or     eax,0x4e42a69f
  40bfc7:	sbb    eax,0xa9540bc8
  40bfcc:	cmp    eax,0xa594bcd3
  40bfd1:	xor    BYTE PTR [eax+0x74],al
  40bfd4:	xchg   BYTE PTR [ebp-0x6ef40c79],ch
  40bfda:	pop    ss
  40bfdb:	test   BYTE PTR [ecx-0x2933ab8b],bh
  40bfe1:	loopne 0x40bf82
  40bfe3:	popf   
  40bfe4:	sahf   
  40bfe5:	mov    WORD PTR [esi+edx*4+0x63],?
  40bfe9:	xchg   ebp,eax
  40bfea:	int    0x68
  40bfec:	push   edi
  40bfed:	mov    ds:0xc08eea2a,al
  40bff2:	pop    esi
  40bff3:	loop   0x40bfd6
  40bff5:	inc    ebx
  40bff7:	inc    esi
  40bff8:	ror    DWORD PTR [edx+ebp*4],cl
  40bffb:	loope  0x40c053
  40bffd:	mov    dl,0xc4
  40bfff:	jmp    0xf246f8fb
  40c004:	cmp    al,0x53
  40c006:	fidivr DWORD PTR [edx]
  40c008:	aaa    
  40c009:	xchg   esi,eax
  40c00a:	into   
  40c00b:	inc    edx
  40c00c:	pop    eax
  40c00d:	cmp    dl,BYTE PTR [ecx+ebx*2-0x602106c0]
  40c014:	mov    esi,0xd8ce0b10
  40c019:	push   0x4fa6bc03
  40c01e:	test   bh,al
  40c020:	mov    ds:0x617fb2b1,al
  40c025:	pop    ss
  40c026:	ins    DWORD PTR es:[edi],dx
  40c027:	call   0x16857080
  40c02c:	cmc    
  40c02d:	shl    BYTE PTR [edi-0x1db0f465],0xdc
  40c034:	xor    BYTE PTR [esi+0x113dfbfe],bh
  40c03a:	adc    ebp,DWORD PTR [edi+0x23a5c595]
  40c040:	dec    esp
  40c041:	inc    ebx
  40c042:	xchg   esi,eax
  40c043:	mov    ebp,0x29fc22ac
  40c048:	xor    DWORD PTR [edx+edx*8-0x70],esp
  40c04c:	call   0x39f2:0x2aa362e2
  40c053:	inc    esp
  40c054:	push   eax
  40c055:	or     dl,BYTE PTR [esi]
  40c057:	cld    
  40c058:	stos   DWORD PTR es:[edi],eax
  40c059:	push   es
  40c05a:	stc    
  40c05b:	jbe    0x40c03c
  40c05d:	aaa    
  40c05e:	push   esi
  40c05f:	das    
  40c060:	pop    esp
  40c061:	sahf   
  40c062:	dec    edi
  40c063:	mov    ch,0x78
  40c065:	int3   
  40c066:	push   esp
  40c067:	retf   0xe632
  40c06a:	fs sub eax,0x91398349
  40c070:	into   
  40c071:	pop    ss
  40c072:	pop    esp
  40c073:	lods   eax,DWORD PTR ds:[esi]
  40c074:	ins    DWORD PTR es:[edi],dx
  40c075:	add    al,0xea
  40c077:	inc    ebp
  40c078:	fucomp st(2)
  40c07a:	int    0xa6
  40c07c:	cmp    dh,BYTE PTR [edi]
  40c07e:	jnp    0x40c07e
  40c080:	mov    edi,0xe74bc790
  40c085:	test   DWORD PTR [ebx-0x37],0x808eb682
  40c08c:	jmp    0x73a54041
  40c091:	or     BYTE PTR [esi+0x4099da21],bh
  40c097:	inc    edx
  40c098:	adc    ecx,DWORD PTR [edx]
  40c09a:	xchg   edi,eax
  40c09b:	mov    esp,0x2ee74181
  40c0a0:	lods   al,BYTE PTR ds:[esi]
  40c0a1:	push   0x54
  40c0a3:	mov    WORD PTR [edx],gs
  40c0a5:	aam    0xf3
  40c0a7:	mov    edx,edi
  40c0a9:	(bad)  
  40c0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ab:	add    eax,0xbe5bc206
  40c0b0:	mov    ecx,0x432ef7b5
  40c0b5:	dec    edi
  40c0b6:	add    eax,0x779973e4
  40c0bb:	repnz inc ecx
  40c0bd:	(bad)  
  40c0be:	cmp    DWORD PTR [edx-0x72],ecx
  40c0c1:	pushf  
  40c0c2:	xor    ebp,DWORD PTR [esi]
  40c0c4:	xlat   BYTE PTR ds:[ebx]
  40c0c5:	mov    dh,0xa5
  40c0c7:	mov    ebp,DWORD PTR [ebp-0x7c]
  40c0ca:	pop    ss
  40c0cb:	xchg   ecx,eax
  40c0cc:	adc    dh,ch
  40c0ce:	cli    
  40c0cf:	das    
  40c0d0:	aas    
  40c0d1:	adc    al,0x2c
  40c0d3:	push   cs
  40c0d4:	or     DWORD PTR [eax+edx*8-0x3db014a9],esi
  40c0db:	or     eax,0xe0641201
  40c0e0:	dec    esi
  40c0e1:	neg    DWORD PTR [ecx+edi*2+0x70]
  40c0e5:	cmp    edx,edx
  40c0e7:	adc    eax,0x9dacce91
  40c0ec:	jno    0x40c0e8
  40c0ee:	sbb    al,0x22
  40c0f0:	stc    
  40c0f1:	dec    BYTE PTR [esi-0x65]
  40c0f4:	loop   0x40c0d4
  40c0f6:	xor    eax,0xb877373e
  40c0fb:	and    ebx,DWORD PTR [esi]
  40c0fd:	leave  
  40c0fe:	not    cl
  40c100:	icebp  
  40c101:	ja     0x40c179
  40c103:	lahf   
  40c104:	jo     0x40c173
  40c106:	out    dx,al
  40c107:	lods   al,BYTE PTR ds:[esi]
  40c108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c109:	popf   
  40c10a:	and    al,0xf4
  40c10c:	adc    bh,BYTE PTR [edi+0x3f]
  40c10f:	xchg   ebx,eax
  40c110:	xchg   edx,eax
  40c111:	pop    ebp
  40c112:	mov    edx,DWORD PTR es:[ebx]
  40c115:	call   0x5c203b69
  40c11a:	rcl    DWORD PTR [ebp-0x7eba1bc1],0x29
  40c121:	cmp    eax,ecx
  40c123:	jns    0x40c0e9
  40c125:	cmp    bh,BYTE PTR [ebx]
  40c127:	mov    ?,ebx
  40c129:	stos   BYTE PTR es:[edi],al
  40c12a:	cmp    al,0x79
  40c12c:	fst    DWORD PTR [edx-0x31]
  40c12f:	inc    ebp
  40c130:	mov    eax,0x3565419b
  40c135:	sbb    edi,DWORD PTR [edx-0x48]
  40c138:	sbb    DWORD PTR [esi],edx
  40c13a:	arpl   dx,cx
  40c13c:	mov    bl,0x87
  40c13e:	push   0xfffffffa
  40c140:	imul   edi,DWORD PTR [edi-0x6b],0x64
  40c144:	sub    al,0x1a
  40c146:	out    0x3c,eax
  40c148:	and    bl,al
  40c14a:	(bad)  
  40c14b:	cmc    
  40c14c:	jb     0x40c0e2
  40c14e:	mov    ds:0x4c688135,eax
  40c153:	and    eax,0x5a96c8fc
  40c158:	xchg   edi,eax
  40c159:	mov    esi,0x4ea68a4f
  40c15e:	push   ebx
  40c15f:	cdq    
  40c160:	jnp    0x40c0fe
  40c162:	cmp    al,0x4c
  40c164:	ret    
  40c165:	pop    ds
  40c166:	jl     0x40c1e6
  40c168:	push   ds
  40c169:	into   
  40c16a:	pop    ds
  40c16b:	push   0x22235c19
  40c170:	push   esp
  40c171:	jne    0x40c1f0
  40c173:	loopne 0x40c112
  40c175:	and    BYTE PTR [eax],ah
  40c177:	hlt    
  40c178:	cld    
  40c179:	pop    ebp
  40c17a:	inc    eax
  40c17b:	fimul  WORD PTR [ebx+eax*8+0x50]
  40c17f:	lea    ecx,[ecx+0x74]
  40c182:	pop    ss
  40c183:	xor    al,0xdc
  40c185:	adc    DWORD PTR [ecx-0x2317b697],ecx
  40c18b:	adc    BYTE PTR [ecx+0x4b],dl
  40c18e:	jno    0x40c1af
  40c190:	mov    cl,0xef
  40c192:	mov    edi,0x87e63580
  40c197:	mov    WORD PTR [edi+0x38],fs
  40c19a:	or     dh,BYTE PTR [esi+0x53d9f986]
  40c1a0:	sub    BYTE PTR [esi-0xc],ch
  40c1a3:	jns    0x40c217
  40c1a5:	daa    
  40c1a6:	mov    ds:0x9967b3e1,al
  40c1ab:	lahf   
  40c1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ae:	(bad)  
  40c1af:	cdq    
  40c1b0:	push   ds
  40c1b1:	push   ebp
  40c1b2:	inc    edx
  40c1b3:	adc    BYTE PTR [ebx+eiz*8],dh
  40c1b6:	idiv   bh
  40c1b8:	aam    0x28
  40c1ba:	in     eax,0x12
  40c1bc:	mov    ch,0x58
  40c1be:	ds aad 0xf7
  40c1c1:	sbb    eax,0x2e6ae993
  40c1c6:	in     al,dx
  40c1c7:	inc    esp
  40c1c8:	pop    ds
  40c1c9:	js     0x40c231
  40c1cb:	cmp    bl,BYTE PTR [edi+ecx*4]
  40c1ce:	and    BYTE PTR [esi],bh
  40c1d0:	inc    eax
  40c1d1:	je     0x40c16f
  40c1d3:	pop    es
  40c1d4:	mov    esi,0x44a100da
  40c1d9:	jle    0x40c1b7
  40c1db:	add    DWORD PTR [edx+ebx*2-0xd],edx
  40c1df:	dec    ecx
  40c1e0:	jmp    0x40c1bb
  40c1e2:	scas   eax,DWORD PTR es:[edi]
  40c1e3:	mov    dh,0xcf
  40c1e5:	pusha  
  40c1e6:	adc    al,0xf
  40c1e8:	dec    edi
  40c1e9:	mov    al,ds:0x7a860caf
  40c1ee:	cmp    DWORD PTR [ecx-0x5d],0xfffffff9
  40c1f2:	xchg   ecx,eax
  40c1f3:	push   ebx
  40c1f4:	cwde   
  40c1f5:	and    eax,0x29608de
  40c1fa:	je     0x40c22b
  40c1fc:	aad    0x74
  40c1fe:	mul    DWORD PTR ds:0xf13291cd
  40c204:	xchg   DWORD PTR [ebx+0x76000fd7],esi
  40c20a:	aad    0x64
  40c20c:	in     al,dx
  40c20d:	jmp    0x1234b4c6
  40c212:	hlt    
  40c213:	pop    ss
  40c214:	mov    edx,0xa9bfa148
  40c219:	sub    BYTE PTR [ecx],bl
  40c21b:	add    dl,0x5c
  40c21e:	adc    eax,0xc20b1b67
  40c223:	pop    esi
  40c224:	(bad)  
  40c225:	(bad)  
  40c226:	and    eax,0xba67866f
  40c22b:	xchg   edx,eax
  40c22c:	cld    
  40c22d:	(bad)  
  40c22e:	cdq    
  40c22f:	push   ebx
  40c230:	cld    
  40c231:	sbb    al,0x6b
  40c233:	xor    al,0xf5
  40c235:	ja     0x40c281
  40c237:	jge    0x40c1c4
  40c239:	sub    eax,0x8b2ddc8c
  40c23e:	xor    al,0xfe
  40c240:	jg     0x40c2bb
  40c242:	ror    ebx,1
  40c244:	jae    0x40c276
  40c246:	cmc    
  40c247:	push   esp
  40c248:	(bad)  
  40c249:	mov    ecx,0x97fc1dd8
  40c24e:	mov    esp,0xe166721b
  40c253:	shr    DWORD PTR [ebp+0xc],0x8b
  40c257:	lods   eax,DWORD PTR ds:[esi]
  40c258:	cli    
  40c259:	push   ecx
  40c25a:	leave  
  40c25b:	pop    ebp
  40c25c:	ins    DWORD PTR es:[edi],dx
  40c25d:	aas    
  40c25e:	rcl    DWORD PTR [ebp-0x71],0x5c
  40c262:	icebp  
  40c263:	and    eax,0xa878986f
  40c268:	and    dh,BYTE PTR ds:0xb828f073
  40c26e:	rol    DWORD PTR [ecx],cl
  40c270:	inc    ebp
  40c271:	and    DWORD PTR [eax+0x49],eax
  40c274:	xor    edi,eax
  40c276:	or     eax,0x87642045
  40c27b:	(bad)  
  40c27c:	mov    al,ds:0x36b47321
  40c281:	cld    
  40c282:	or     eax,0x3863fec3
  40c287:	push   ss
  40c288:	test   al,0x27
  40c28a:	loope  0x40c27a
  40c28c:	iret   
  40c28d:	inc    edx
  40c28e:	mov    edx,0xf1434a6f
  40c293:	cli    
  40c294:	push   cs
  40c295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c296:	jle    0x40c2be
  40c298:	xor    eax,0xaae2190c
  40c29d:	pop    ebp
  40c29e:	loope  0x40c29d
  40c2a0:	dec    ebp
  40c2a1:	jle    0x40c299
  40c2a3:	pop    ss
  40c2a4:	and    edi,ecx
  40c2a6:	sub    al,0xf1
  40c2a8:	dec    esi
  40c2a9:	xchg   bh,dl
  40c2ab:	jb     0x40c2de
  40c2ad:	and    edx,DWORD PTR [eax]
  40c2af:	push   ebx
  40c2b0:	mov    bl,ah
  40c2b2:	jno    0x40c250
  40c2b4:	outs   dx,BYTE PTR ds:[esi]
  40c2b5:	lock leave 
  40c2b7:	push   edi
  40c2b8:	push   ebp
  40c2b9:	fld    TBYTE PTR [edx+0x78]
  40c2bc:	pushf  
  40c2bd:	shl    BYTE PTR [edi+0x3d],1
  40c2c0:	fistp  DWORD PTR [ecx+0x1a8bca4b]
  40c2c6:	jl     0x40c25b
  40c2c8:	das    
  40c2c9:	mov    ebx,0x9ce20b45
  40c2ce:	push   edi
  40c2cf:	lock mov esp,0x25ec426b
  40c2d5:	sbb    esp,esp
  40c2d7:	xor    bl,BYTE PTR [ebx]
  40c2d9:	sub    dl,ah
  40c2db:	ret    0x5cbe
  40c2de:	daa    
  40c2df:	pop    esi
  40c2e0:	sub    ch,BYTE PTR [ebx]
  40c2e2:	add    dh,dh
  40c2e4:	dec    edx
  40c2e5:	inc    edx
  40c2e6:	ret    0xdff4
  40c2e9:	bound  ecx,QWORD PTR [ebx+0x47]
  40c2ec:	(bad)  
  40c2ed:	or     ecx,DWORD PTR [esi]
  40c2ef:	inc    ebx
  40c2f0:	jge    0x40c330
  40c2f2:	push   edx
  40c2f3:	in     eax,dx
  40c2f4:	into   
  40c2f5:	test   al,0x55
  40c2f7:	mov    eax,0x1fb6d504
  40c2fc:	sub    eax,0x922ff6b6
  40c301:	cmp    al,0xd1
  40c303:	dec    eax
  40c304:	bound  ebp,QWORD PTR [eax]
  40c306:	in     eax,0x7
  40c308:	in     al,dx
  40c309:	cmp    al,0x95
  40c30b:	test   al,0x9
  40c30d:	xchg   edx,eax
  40c30e:	out    0x8c,al
  40c310:	cmc    
  40c311:	jbe    0x40c365
  40c313:	outs   dx,BYTE PTR ds:[esi]
  40c314:	xchg   edi,eax
  40c315:	(bad)  
  40c316:	hlt    
  40c317:	cmp    eax,0xb427fe0
  40c31c:	pop    ebp
  40c31d:	dec    ebx
  40c31e:	addr16 mov esp,0x4782b4bc
  40c324:	adc    ebp,ebx
  40c326:	ret    0xfd85
  40c329:	dec    eax
  40c32a:	push   esi
  40c32b:	jge    0x40c3a6
  40c32d:	mov    bh,0x71
  40c32f:	mov    cl,0xee
  40c331:	mov    cs,WORD PTR [ebp-0x68494ee4]
  40c337:	adc    cl,BYTE PTR [esi]
  40c339:	pop    ecx
  40c33a:	sub    al,BYTE PTR [ebp*8-0x7e824f4e]
  40c341:	mov    cs,edx
  40c343:	mov    eax,0xf49404ac
  40c348:	mov    cl,0xf9
  40c34a:	in     eax,0x41
  40c34c:	rcl    cl,1
  40c34e:	mov    al,ds:0x5dbaad70
  40c353:	push   ecx
  40c354:	out    0x8c,al
  40c356:	test   BYTE PTR [edx],dh
  40c358:	outs   dx,BYTE PTR ds:[esi]
  40c359:	(bad)  
  40c35a:	jnp    0x40c324
  40c35c:	(bad)  
  40c35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c35e:	mov    ebx,0xacd38e69
  40c363:	mov    BYTE PTR [ecx],bh
  40c365:	arpl   WORD PTR [esi+0x70178724],bp
  40c36b:	jl     0x40c35d
  40c36d:	xor    al,0x1a
  40c36f:	lock sbb al,0xa3
  40c372:	cmp    BYTE PTR [esi+0x4f598148],ah
  40c378:	mov    DWORD PTR [edx],edx
  40c37a:	aaa    
  40c37b:	enter  0xb1e7,0xa3
  40c37f:	adc    dh,BYTE PTR [edx]
  40c381:	inc    eax
  40c382:	sahf   
  40c383:	push   cs
  40c384:	inc    ebx
  40c385:	jbe    0x40c398
  40c387:	lods   eax,DWORD PTR ds:[esi]
  40c388:	mov    esp,0xd7e781d4
  40c38d:	lds    eax,FWORD PTR [edi-0x6d]
  40c390:	lahf   
  40c391:	clc    
  40c392:	sbb    al,0xe6
  40c394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c395:	fdiv   QWORD PTR [ebp-0x2366d4db]
  40c39b:	iret   
  40c39c:	jge    0x40c36c
  40c39e:	inc    ebp
  40c39f:	ss mov al,0x87
  40c3a2:	retf   
  40c3a3:	inc    bx
  40c3a5:	jo     0x40c3c2
  40c3a7:	je     0x40c331
  40c3a9:	mov    ecx,0x95930a1f
  40c3ae:	pop    esi
  40c3af:	jmp    0x1497fb41
  40c3b4:	add    esp,DWORD PTR ds:[edx-0x5759b6b2]
  40c3bb:	imul   ebp,DWORD PTR [ebx],0xf7e0cfd0
  40c3c1:	jl     0x40c39a
  40c3c3:	mov    bh,0xdc
  40c3c5:	pop    es
  40c3c6:	(bad)  
  40c3c7:	pop    eax
  40c3c8:	out    0x54,eax
  40c3ca:	and    esi,DWORD PTR [edi-0x3f2ec1b9]
  40c3d0:	adc    dh,BYTE PTR [edi-0x11]
  40c3d3:	pop    edx
  40c3d4:	es sbb al,0x3d
  40c3d7:	sbb    BYTE PTR ds:0xd819f1b0,ch
  40c3dd:	jmp    0x575b:0x63c14941
  40c3e4:	popa   
  40c3e5:	sub    eax,0x1f7b21a
  40c3ea:	push   edx
  40c3eb:	js     0x40c433
  40c3ed:	push   esp
  40c3ee:	push   esp
  40c3ef:	ds mov esi,0x80e9bbca
  40c3f5:	outs   dx,DWORD PTR ds:[esi]
  40c3f6:	icebp  
  40c3f7:	or     eax,0xbb389465
  40c3fc:	cs hlt 
  40c3fe:	adc    DWORD PTR [eax+0x3872349e],edx
  40c404:	adc    BYTE PTR [edi],ah
  40c406:	jae    0x40c38f
  40c408:	adc    BYTE PTR [ebp+0x59e73a2e],al
  40c40e:	and    cl,dl
  40c410:	xor    BYTE PTR [ecx],ah
  40c412:	loope  0x40c420
  40c414:	and    eax,0x50e29e48
  40c419:	mov    edx,0xf760d5f
  40c41e:	push   ecx
  40c41f:	les    ebx,FWORD PTR [edx-0x5]
  40c422:	push   ecx
  40c423:	inc    ebx
  40c424:	or     dl,al
  40c426:	imul   ecx,DWORD PTR [ebx-0x73d1fed3],0x9c18c316
  40c430:	xchg   DWORD PTR [ebp-0x33d87dcc],edi
  40c436:	rcl    edx,0x4d
  40c439:	dec    eax
  40c43b:	jns    0x40c3d0
  40c43d:	inc    eax
  40c43e:	jnp    0x40c481
  40c440:	push   ebp
  40c441:	lock (bad) 
  40c443:	and    eax,0xfac01343
  40c448:	icebp  
  40c449:	xlat   BYTE PTR ds:[ebx]
  40c44a:	ret    0x762d
  40c44d:	xor    cl,BYTE PTR [esp+esi*2-0x2]
  40c451:	daa    
  40c452:	mov    ss:0xe10b152a,eax
  40c458:	xchg   ecx,eax
  40c459:	pusha  
  40c45a:	imul   BYTE PTR [ecx+edx*4]
  40c45d:	push   0xd845c739
  40c462:	mov    eax,0x1bf89c85
  40c467:	(bad)  
  40c468:	mov    eax,DWORD PTR [ebp-0x10]
  40c46b:	or     DWORD PTR ds:0x42b014,edx
  40c471:	mov    ecx,DWORD PTR [ebp-0x10]
  40c474:	mov    esi,DWORD PTR ds:0x42a018
  40c47a:	sbb    DWORD PTR ds:0x429000,esi
  40c480:	sub    eax,ecx
  40c482:	mov    DWORD PTR [ebp-0x10],eax
  40c485:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c48c:	mov    eax,DWORD PTR [ebp-0x18]
  40c48f:	mov    ecx,DWORD PTR [ebp-0x18]
  40c492:	mov    DWORD PTR ds:0x42a018,0x1f
  40c49c:	cmp    DWORD PTR ds:0x42a018,0x0
  40c4a3:	je     0x40c4ea
  40c4a9:	cmp    DWORD PTR ds:0x42a018,0x3
  40c4b0:	jne    0x40c4bc
  40c4b6:	call   DWORD PTR ds:0x42ed87
  40c4bc:	cmp    DWORD PTR ds:0x42a018,0x4
  40c4c3:	jne    0x40c4d8
  40c4c9:	xor    esi,esi
  40c4cb:	or     esi,DWORD PTR ds:0x42a018
  40c4d1:	dec    esi
  40c4d2:	mov    DWORD PTR ds:0x42a018,esi
  40c4d8:	mov    esi,DWORD PTR ds:0x42a018
  40c4de:	dec    esi
  40c4df:	mov    DWORD PTR ds:0x42a018,esi
  40c4e5:	jmp    0x40c49c
  40c4ea:	sub    eax,ecx
  40c4ec:	mov    esi,DWORD PTR ds:0x42b008
  40c4f2:	and    esi,DWORD PTR ds:0x42901c
  40c4f8:	mov    DWORD PTR ds:0x42b008,esi
  40c4fe:	mov    DWORD PTR [ebp-0x18],eax
  40c501:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c508:	mov    DWORD PTR ds:0x429020,0x10
  40c512:	cmp    DWORD PTR ds:0x429020,0x0
  40c519:	je     0x40c57b
  40c51f:	cmp    DWORD PTR ds:0x429020,0x8
  40c526:	jne    0x40c53d
  40c52c:	push   DWORD PTR [ebp-0x10]
  40c52f:	push   0x42a010
  40c534:	push   DWORD PTR [ebp-0x28]
  40c537:	call   DWORD PTR ds:0x42ed8b
  40c53d:	cmp    DWORD PTR ds:0x429020,0x9
  40c544:	jne    0x40c557
  40c54a:	mov    esi,DWORD PTR ds:0x429020
  40c550:	dec    esi
  40c551:	mov    DWORD PTR ds:0x429020,esi
  40c557:	mov    esi,DWORD PTR ds:0x429020
  40c55d:	dec    esi
  40c55e:	mov    DWORD PTR ds:0x429020,esi
  40c564:	jmp    0x40c512
  40c569:	mov    esi,DWORD PTR ds:0x42901c
  40c56f:	add    esi,DWORD PTR ds:0x42d008
  40c575:	mov    DWORD PTR ds:0x42901c,esi
  40c57b:	mov    eax,DWORD PTR [ebp-0xc]
  40c57e:	mov    ecx,DWORD PTR [ebp-0xc]
  40c581:	mov    esi,DWORD PTR ds:0x42a01c
  40c587:	sub    esi,DWORD PTR ds:0x429014
  40c58d:	mov    DWORD PTR ds:0x42a01c,esi
  40c593:	sub    eax,ecx
  40c595:	add    esi,0x4f49
  40c59b:	mov    DWORD PTR [ebp-0xc],eax
  40c59e:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c5a5:	sub    ecx,DWORD PTR ds:0x42a00c
  40c5ab:	mov    eax,DWORD PTR [ebp-0x1c]
  40c5ae:	or     DWORD PTR ds:0x42d018,ebx
  40c5b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c5b7:	and    DWORD PTR ds:0x42d01c,0x0
  40c5c1:	jmp    0x40c5d5
  40c5c6:	xor    edi,edi
  40c5c8:	xor    edi,DWORD PTR ds:0x42d01c
  40c5ce:	inc    edi
  40c5cf:	mov    DWORD PTR ds:0x42d01c,edi
  40c5d5:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40c5dc:	jae    0x40c64a
  40c5e2:	cmp    DWORD PTR ds:0x42d01c,0x2d
  40c5e9:	jne    0x40c5ff
  40c5ef:	push   0x42e205
  40c5f4:	push   0x0
  40c5f6:	push   DWORD PTR [ebp-0xc]
  40c5f9:	call   DWORD PTR ds:0x42ed8f
  40c5ff:	jmp    0x40c5c6
  40c604:	and    DWORD PTR ds:0x42d018,0x0
  40c60e:	jmp    0x40c620
  40c613:	mov    edi,DWORD PTR ds:0x42d018
  40c619:	inc    edi
  40c61a:	mov    DWORD PTR ds:0x42d018,edi
  40c620:	cmp    DWORD PTR ds:0x42d018,0x14
  40c627:	jae    0x40c64a
  40c62d:	cmp    DWORD PTR ds:0x42d018,0x1c
  40c634:	jne    0x40c645
  40c63a:	push   0x6072
  40c63f:	call   DWORD PTR ds:0x42ed4f
  40c645:	jmp    0x40c613
  40c64a:	sub    eax,ecx
  40c64c:	mov    DWORD PTR [ebp-0x1c],eax
  40c64f:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c656:	mov    eax,DWORD PTR [ebp-0x20]
  40c659:	mov    ecx,DWORD PTR [ebp-0x20]
  40c65c:	sub    eax,ecx
  40c65e:	mov    DWORD PTR [ebp-0x20],eax
  40c661:	mov    eax,DWORD PTR [ebp-0x2c]
  40c664:	mov    ecx,DWORD PTR [ebp-0x20]
  40c667:	mov    esi,0x7510899
  40c66c:	xor    eax,esi
  40c66e:	mov    edi,0x3272e0
  40c673:	add    eax,edi
  40c675:	or     eax,ecx
  40c677:	mov    DWORD PTR [ebp-0x20],eax
  40c67a:	mov    eax,DWORD PTR [ebp-0x4]
  40c67d:	mov    ecx,DWORD PTR [ebp-0x4]
  40c680:	sub    eax,ecx
  40c682:	mov    DWORD PTR [ebp-0x4],eax
  40c685:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c68c:	mov    eax,DWORD PTR [ebp-0xc]
  40c68f:	xor    eax,esi
  40c691:	add    eax,edi
  40c693:	push   eax
  40c694:	mov    eax,DWORD PTR [ebp-0x10]
  40c697:	xor    eax,esi
  40c699:	add    eax,edi
  40c69b:	push   eax
  40c69c:	mov    eax,DWORD PTR [ebp-0x4]
  40c69f:	xor    eax,esi
  40c6a1:	add    eax,edi
  40c6a3:	push   eax
  40c6a4:	lea    eax,[ebp-0x7c]
  40c6a7:	push   eax
  40c6a8:	push   DWORD PTR [ebp-0x2c]
  40c6ab:	push   DWORD PTR [ebp-0x28]
  40c6ae:	call   0x411548
  40c6b3:	test   eax,eax
  40c6b5:	je     0x40c6e3
  40c6bb:	lea    eax,[ebp-0x7c]
  40c6be:	push   eax
  40c6bf:	mov    eax,DWORD PTR [ebp-0x28]
  40c6c2:	xor    eax,esi
  40c6c4:	add    eax,edi
  40c6c6:	push   eax
  40c6c7:	mov    eax,DWORD PTR [ebp-0x24]
  40c6ca:	add    eax,0xaa
  40c6cf:	push   eax
  40c6d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c6d3:	mov    eax,DWORD PTR [eax+0x198]
  40c6d9:	push   DWORD PTR [eax]
  40c6db:	call   0x4050c0
  40c6e0:	mov    DWORD PTR [ebp-0x14],eax
  40c6e3:	lea    eax,[ebp+0x4]
  40c6e6:	mov    DWORD PTR [ebp-0x30],eax
  40c6e9:	mov    eax,DWORD PTR [ebp-0x14]
  40c6ec:	test   eax,eax
  40c6ee:	je     0x40c756
  40c6f4:	lea    eax,[ebp-0x8]
  40c6f7:	mov    DWORD PTR [ebp-0x38],eax
  40c6fa:	mov    eax,DWORD PTR [ebp-0x34]
  40c6fd:	mov    DWORD PTR [ebp-0x8],eax
  40c700:	mov    eax,DWORD PTR [ebp-0x8]
  40c703:	mov    ecx,DWORD PTR [ebp-0x14]
  40c706:	sub    eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x8],eax
  40c70b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c70e:	xor    ecx,esi
  40c710:	mov    eax,0xffcd8d20
  40c715:	sub    eax,ecx
  40c717:	add    DWORD PTR [ebp-0x8],eax
  40c71a:	mov    eax,DWORD PTR [ebp-0x8]
  40c71d:	mov    ecx,DWORD PTR [ebp-0x14]
  40c720:	mov    DWORD PTR [ecx+0x1],eax
  40c723:	mov    eax,DWORD PTR [ebp-0x14]
  40c726:	push   DWORD PTR [ebp-0x24]
  40c729:	mov    BYTE PTR [eax],0xe9
  40c72c:	mov    eax,ds:0x42e2ab
  40c731:	push   DWORD PTR [eax]
  40c733:	push   DWORD PTR ds:0x42e507
  40c739:	push   DWORD PTR ds:0x42e2b3
  40c73f:	push   DWORD PTR ds:0x42e4e7
  40c745:	push   DWORD PTR ds:0x42eaf7
  40c74b:	push   DWORD PTR [ebp-0x28]
  40c74e:	push   DWORD PTR [ebp-0x2c]
  40c751:	mov    eax,DWORD PTR [ebp-0x14]
  40c754:	call   eax
  40c756:	mov    eax,DWORD PTR [ebp-0x30]
  40c759:	mov    ecx,DWORD PTR ds:0x42e4ab
  40c75f:	add    DWORD PTR [eax],ecx
  40c761:	pop    edi
  40c762:	pop    esi
  40c763:	leave  
  40c764:	ret    
  40c765:	push   ebp
  40c766:	mov    ebp,esp
  40c768:	sub    esp,0x18
  40c76b:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c772:	adc    DWORD PTR ds:0x42d00c,ebx
  40c778:	lea    eax,[ebp+0x14]
  40c77b:	and    ecx,ecx
  40c77d:	mov    DWORD PTR [ebp-0x4],eax
  40c780:	movzx  edx,BYTE PTR ds:0x42a014
  40c787:	sub    edx,DWORD PTR ds:0x42c00c
  40c78d:	mov    DWORD PTR ds:0x42a014,edx
  40c793:	push   esi
  40c794:	mov    esi,0xf89c85b9
  40c799:	movzx  edx,BYTE PTR ds:0x42b010
  40c7a0:	sbb    DWORD PTR ds:0x42a000,edx
  40c7a6:	mov    DWORD PTR [ebp-0xc],esi
  40c7a9:	lea    eax,[ebp-0xc]
  40c7ac:	mov    DWORD PTR ds:0x429020,0x1e
  40c7b6:	cmp    DWORD PTR ds:0x429020,0x0
  40c7bd:	je     0x40c861
  40c7c3:	cmp    DWORD PTR ds:0x429020,0x27
  40c7ca:	jne    0x40c7e3
  40c7d0:	push   0x42e0f4
  40c7d5:	push   DWORD PTR [ebp-0x20]
  40c7d8:	push   0x1
  40c7da:	push   DWORD PTR [ebp-0x10]
  40c7dd:	call   DWORD PTR ds:0x42ed53
  40c7e3:	xor    ecx,ecx
  40c7e5:	xor    ecx,DWORD PTR ds:0x429020
  40c7eb:	dec    ecx
  40c7ec:	mov    DWORD PTR ds:0x429020,ecx
  40c7f2:	jmp    0x40c7b6
  40c7f7:	and    DWORD PTR ds:0x429004,0x0
  40c801:	jmp    0x40c813
  40c806:	mov    ecx,DWORD PTR ds:0x429004
  40c80c:	inc    ecx
  40c80d:	mov    DWORD PTR ds:0x429004,ecx
  40c813:	cmp    DWORD PTR ds:0x429004,0x19
  40c81a:	jae    0x40c861
  40c820:	cmp    DWORD PTR ds:0x429004,0xf
  40c827:	jne    0x40c838
  40c82d:	push   0x42e251
  40c832:	call   DWORD PTR ds:0x42ed57
  40c838:	cmp    DWORD PTR ds:0x429004,0xe
  40c83f:	jne    0x40c852
  40c845:	mov    ecx,DWORD PTR ds:0x429004
  40c84b:	inc    ecx
  40c84c:	mov    DWORD PTR ds:0x429004,ecx
  40c852:	jmp    0x40c806
  40c857:	xor    DWORD PTR ds:0x42d004,0x27e5
  40c861:	mov    DWORD PTR [ebp-0x14],eax
  40c864:	mov    eax,DWORD PTR [ebp-0xc]
  40c867:	mov    edx,DWORD PTR [ebp-0x14]
  40c86a:	sbb    DWORD PTR ds:0x42a004,ecx
  40c870:	mov    ecx,0x7510899
  40c875:	xor    eax,ecx
  40c877:	add    DWORD PTR ds:0x42d014,0x42901c
  40c881:	add    eax,0x3272e0
  40c886:	neg    DWORD PTR ds:0x42d008
  40c88c:	mov    DWORD PTR [edx],eax
  40c88e:	mov    eax,ds:0x42e2a7
  40c893:	and    DWORD PTR ds:0x42b01c,0x0
  40c89d:	mov    edx,DWORD PTR ds:0x42b01c
  40c8a3:	inc    edx
  40c8a4:	mov    DWORD PTR ds:0x42b01c,edx
  40c8aa:	cmp    DWORD PTR ds:0x42b01c,0x1f
  40c8b1:	jne    0x40c8c2
  40c8b7:	push   0x641d
  40c8bc:	call   DWORD PTR ds:0x42ed5b
  40c8c2:	cmp    DWORD PTR ds:0x42b01c,0x1d
  40c8c9:	jb     0x40c89d
  40c8cf:	add    DWORD PTR ds:0x429008,edi
  40c8d5:	mov    edx,DWORD PTR [ebp-0x4]
  40c8d8:	mov    eax,DWORD PTR [eax]
  40c8da:	add    eax,DWORD PTR [edx]
  40c8dc:	sbb    DWORD PTR ds:0x429004,0x2443
  40c8e6:	push   edi
  40c8e7:	mov    DWORD PTR [ebp-0x8],eax
  40c8ea:	mov    edi,DWORD PTR [ebp+0x8]
  40c8ed:	and    DWORD PTR ds:0x429014,0x0
  40c8f7:	mov    edx,DWORD PTR ds:0x429014
  40c8fd:	inc    edx
  40c8fe:	mov    DWORD PTR ds:0x429014,edx
  40c904:	cmp    DWORD PTR ds:0x429014,0x20
  40c90b:	jne    0x40c921
  40c911:	push   0x429018
  40c916:	push   0x4f77
  40c91b:	call   DWORD PTR ds:0x42ed5f
  40c921:	cmp    DWORD PTR ds:0x429014,0x1e
  40c928:	jb     0x40c8f7
  40c92e:	movzx  edx,WORD PTR ds:0x42b00c
  40c935:	add    DWORD PTR ds:0x42d004,edx
  40c93b:	mov    eax,ds:0x42e42f
  40c940:	adc    edx,0xaa6
  40c946:	mov    eax,DWORD PTR [eax+0x198]
  40c94c:	sub    edx,DWORD PTR ds:0x42a010
  40c952:	xor    edi,ecx
  40c954:	mov    edx,0x3272e0
  40c959:	sub    DWORD PTR ds:0x42c000,0x6686
  40c963:	jmp    0x40ecd7
  40c968:	fild   QWORD PTR [edi+0x45]
  40c96b:	push   ecx
  40c96c:	mov    ch,0x3b
  40c96e:	mov    bl,0xb7
  40c970:	pop    esp
  40c971:	sub    DWORD PTR [ecx-0x30],esi
  40c974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c975:	mov    eax,es:0x7ae5cfd9
  40c97b:	jp     0x40c990
  40c97d:	pop    edi
  40c97e:	jp     0x40c9fa
  40c980:	fmul   QWORD PTR [edx+0x44d0979d]
  40c986:	fwait
  40c987:	shr    ah,0x78
  40c98a:	jae    0x40c98b
  40c98c:	in     al,0xab
  40c98e:	jmp    0x40c915
  40c990:	dec    ebp
  40c991:	clc    
  40c992:	xor    eax,DWORD PTR [edi+0x7f]
  40c995:	xor    eax,0x3fd10134
  40c99a:	xchg   esp,eax
  40c99b:	ret    0x6a0c
  40c99e:	repz jbe 0x40c9e6
  40c9a1:	aam    0xb8
  40c9a3:	jle    0x40c94b
  40c9a5:	stos   DWORD PTR es:[edi],eax
  40c9a6:	cmp    BYTE PTR [edx-0x1aa0be76],cl
  40c9ac:	adc    cl,BYTE PTR [ebx]
  40c9ae:	push   eax
  40c9af:	repnz aad 0xbe
  40c9b2:	rcr    ah,1
  40c9b4:	push   ecx
  40c9b5:	es cwde 
  40c9b7:	jae    0x40c9de
  40c9b9:	test   DWORD PTR [eax],ecx
  40c9bb:	pop    eax
  40c9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9bd:	xchg   ecx,eax
  40c9be:	shr    ebp,0xa9
  40c9c1:	shr    esp,1
  40c9c3:	cdq    
  40c9c4:	mov    bh,0xec
  40c9c6:	or     ecx,edx
  40c9c8:	jbe    0x40c9fe
  40c9ca:	sti    
  40c9cb:	dec    esi
  40c9cc:	popf   
  40c9cd:	icebp  
  40c9ce:	mov    BYTE PTR [esi],bl
  40c9d0:	dec    ebp
  40c9d1:	jp     0x40c9e3
  40c9d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d4:	rol    dh,0x22
  40c9d7:	push   ebx
  40c9d8:	add    eax,0xd78ac663
  40c9dd:	rcr    DWORD PTR [ebx],0x89
  40c9e0:	jecxz  0x40c971
  40c9e2:	push   ds
  40c9e3:	add    edi,DWORD PTR [eax+eax*8]
  40c9e6:	xchg   esi,eax
  40c9e7:	lods   al,BYTE PTR ds:[esi]
  40c9e8:	std    
  40c9e9:	pop    edi
  40c9ea:	aam    0x4b
  40c9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ed:	mov    ah,0x1e
  40c9ef:	inc    ecx
  40c9f0:	mov    eax,DWORD PTR [ecx-0x45a400e1]
  40c9f6:	jecxz  0x40c979
  40c9f8:	add    al,0x7a
  40c9fa:	pop    ecx
  40c9fb:	xchg   esi,eax
  40c9fc:	xlat   BYTE PTR ds:[ebx]
  40c9fd:	(bad)  
  40c9fe:	and    ebp,DWORD PTR [ebx]
  40ca00:	hlt    
  40ca01:	fmul   DWORD PTR [esi-0x45d957e8]
  40ca07:	cmp    BYTE PTR [edx+0xac985e2],cl
  40ca0d:	inc    esi
  40ca0e:	(bad)  
  40ca0f:	int3   
  40ca10:	push   edx
  40ca11:	sub    bl,dh
  40ca13:	repz fdivr st,st(0)
  40ca16:	ret    
  40ca17:	iret   
  40ca18:	jecxz  0x40c9fd
  40ca1a:	mov    ds:0xd200a416,al
  40ca1f:	xchg   ebx,eax
  40ca20:	ins    DWORD PTR es:[edi],dx
  40ca21:	mov    eax,0xee8a2390
  40ca26:	jae    0x40ca22
  40ca28:	jnp    0x40ca09
  40ca2a:	je     0x40ca3a
  40ca2c:	imul   eax,DWORD PTR [edx],0x3
  40ca2f:	call   0xdc0b:0xb27ce721
  40ca36:	ret    0xed44
  40ca39:	pushf  
  40ca3a:	pop    ebp
  40ca3b:	and    esi,DWORD PTR [edx-0x44f1309c]
  40ca41:	scas   al,BYTE PTR es:[edi]
  40ca42:	and    ecx,eax
  40ca44:	sahf   
  40ca45:	arpl   WORD PTR [edi],si
  40ca47:	inc    edi
  40ca48:	push   ebp
  40ca49:	mov    ecx,0x5dcc854e
  40ca4e:	(bad)
  40ca53:	repnz cld 
  40ca55:	fnsetpm(287 only) 
  40ca57:	(bad)  
  40ca59:	adc    esi,DWORD PTR [ebp-0x24]
  40ca5c:	jmp    0xa3c3:0x644373c5
  40ca63:	sub    al,0xa9
  40ca65:	test   DWORD PTR [edi],ebx
  40ca67:	jns    0x40ca17
  40ca69:	mov    eax,eax
  40ca6b:	repnz ins BYTE PTR es:[edi],dx
  40ca6d:	inc    ebx
  40ca6e:	push   ebx
  40ca6f:	icebp  
  40ca70:	jae    0x40ca5f
  40ca72:	dec    ecx
  40ca73:	repz gs das 
  40ca76:	sbb    al,0x51
  40ca78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca79:	cdq    
  40ca7a:	int3   
  40ca7b:	mov    ebx,ebx
  40ca7d:	push   ebp
  40ca7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca7f:	data16 jecxz 0x40cad5
  40ca82:	lock shl edi,1
  40ca85:	or     edx,DWORD PTR [ecx+eax*1-0x4a]
  40ca89:	jecxz  0x40caa5
  40ca8b:	clc    
  40ca8c:	retf   
  40ca8d:	add    ebx,esp
  40ca8f:	ja     0x40cab4
  40ca91:	test   BYTE PTR [edi-0x287f6b8a],al
  40ca97:	add    BYTE PTR [ebx+0x4afee81c],bl
  40ca9d:	cli    
  40ca9e:	cmc    
  40ca9f:	add    esi,DWORD PTR [esi+edi*1]
  40caa2:	enter  0xd3b2,0x8c
  40caa6:	xchg   ebp,eax
  40caa7:	cmp    eax,0x3a8e8a8e
  40caac:	sub    BYTE PTR ds:0xe7ad699c,cl
  40cab2:	mov    esp,ebx
  40cab4:	inc    ecx
  40cab5:	dec    ebp
  40cab6:	add    al,0x2e
  40cab8:	data16 sti 
  40caba:	loopne 0x40cad0
  40cabc:	pop    ebp
  40cabd:	cmp    BYTE PTR [esi-0x3e432241],ah
  40cac3:	repz sub al,0x8b
  40cac6:	xchg   edi,eax
  40cac7:	loop   0x40cb3e
  40cac9:	push   ebp
  40caca:	addr16 jno 0x40cb23
  40cacd:	popf   
  40cace:	cmc    
  40cacf:	mov    ah,0xa5
  40cad1:	xor    ch,al
  40cad3:	imul   eax,DWORD PTR [ebx],0x11
  40cad6:	(bad)  
  40cad7:	sub    DWORD PTR [esp+ebp*8],ebx
  40cada:	stc    
  40cadb:	mov    al,ds:0xe4cf2abe
  40cae0:	fnsave ds:0x8b08d3a0
  40cae6:	inc    eax
  40cae7:	js     0x40cadb
  40cae9:	xchg   edi,eax
  40caea:	cwde   
  40caeb:	(bad)  
  40caec:	(bad)  
  40caee:	inc    esp
  40caef:	push   ecx
  40caf0:	push   es
  40caf1:	rcr    BYTE PTR [eax],0x54
  40caf4:	shr    DWORD PTR [ecx-0x6ba20ca6],cl
  40cafa:	sbb    edx,DWORD PTR [ebp-0x49]
  40cafd:	daa    
  40cafe:	mov    ecx,0xb98b598b
  40cb03:	inc    esp
  40cb04:	clc    
  40cb05:	out    0x3f,al
  40cb07:	jmp    0xee54987d
  40cb0c:	or     ebp,DWORD PTR [ebx+0x3e]
  40cb0f:	inc    edi
  40cb10:	neg    DWORD PTR [edx+ebx*8]
  40cb13:	sub    ecx,0xea2b76ff
  40cb19:	or     eax,0x5b4572cb
  40cb1e:	sub    DWORD PTR [ebx+0x6c],eax
  40cb21:	aaa    
  40cb22:	stos   BYTE PTR es:[edi],al
  40cb23:	dec    edx
  40cb24:	fidiv  WORD PTR [edi]
  40cb26:	les    ebx,FWORD PTR [edi-0x66]
  40cb29:	mov    cl,BYTE PTR [eax+0x4004f626]
  40cb2f:	inc    eax
  40cb30:	dec    ecx
  40cb31:	popf   
  40cb32:	(bad)  
  40cb33:	mov    dl,BYTE PTR [esi+0x59]
  40cb36:	jmp    0x74bfd01a
  40cb3b:	sub    BYTE PTR [ebx],dl
  40cb3d:	pop    edi
  40cb3e:	and    DWORD PTR [ebp+ebp*4+0x1c],edi
  40cb42:	(bad)  
  40cb43:	dec    esp
  40cb44:	jns    0x40cb65
  40cb46:	dec    ecx
  40cb47:	sar    BYTE PTR [edi],1
  40cb49:	add    bh,BYTE PTR [edx]
  40cb4b:	arpl   WORD PTR [ebx-0x4a],bx
  40cb4e:	int    0x3d
  40cb50:	iret   
  40cb51:	scas   al,BYTE PTR es:[edi]
  40cb52:	mov    ds:0x64fdc529,eax
  40cb57:	lods   eax,DWORD PTR ds:[esi]
  40cb58:	cmp    BYTE PTR [edi+0xe],cl
  40cb5b:	sbb    al,0x1
  40cb5d:	lods   eax,DWORD PTR ds:[esi]
  40cb5e:	jl     0x40cb55
  40cb60:	dec    ebx
  40cb61:	mov    ecx,?
  40cb63:	xchg   esi,eax
  40cb64:	shl    DWORD PTR [edx+0x5dfc46c2],1
  40cb6a:	mov    WORD PTR [esi+edx*8],cs
  40cb6d:	adc    ah,bl
  40cb6f:	xchg   BYTE PTR [edi-0x234367fe],dh
  40cb75:	ins    DWORD PTR es:[edi],dx
  40cb76:	mov    DWORD PTR [esi+edi*8+0x62],ecx
  40cb7a:	(bad)  
  40cb7b:	sub    al,0xfa
  40cb7d:	cmp    BYTE PTR [ebx-0x5b],dh
  40cb80:	(bad)  [edx]
  40cb82:	mov    ds:0x476232d2,eax
  40cb87:	sbb    ebp,DWORD PTR [ebx-0x4]
  40cb8a:	mov    edx,0x979bdb8e
  40cb8f:	cli    
  40cb90:	hlt    
  40cb91:	or     cl,ah
  40cb93:	ds mov esp,0x21be7b5e
  40cb99:	outs   dx,DWORD PTR ds:[esi]
  40cb9a:	or     al,0x68
  40cb9c:	fild   WORD PTR [edx]
  40cb9e:	in     eax,dx
  40cb9f:	sbb    eax,0x23ca4a98
  40cba4:	sub    dl,BYTE PTR [eax+0x391b2b4e]
  40cbaa:	adc    bh,cl
  40cbac:	push   edi
  40cbad:	mov    al,0x6
  40cbaf:	pop    ss
  40cbb0:	jecxz  0x40cbe4
  40cbb2:	and    DWORD PTR [ebx+0x7f],0xb
  40cbb6:	out    dx,eax
  40cbb7:	and    DWORD PTR [edx+0xa1acbb8],ecx
  40cbbd:	sar    DWORD PTR ds:0xdf0e17c5,cl
  40cbc3:	cmp    dh,BYTE PTR [edi+0x77314a45]
  40cbc9:	aam    0x0
  40cbcb:	into   
  40cbcc:	mov    ebx,0xfa1537ae
  40cbd1:	lods   al,BYTE PTR ds:[esi]
  40cbd2:	and    BYTE PTR [edx+0x2a],bl
  40cbd5:	xchg   ebp,eax
  40cbd6:	pop    ss
  40cbd7:	cmc    
  40cbd8:	call   0xa34245b5
  40cbdd:	pop    ecx
  40cbde:	mov    ch,ah
  40cbe0:	sbb    ebp,DWORD PTR [ebp-0x65]
  40cbe3:	popf   
  40cbe4:	mov    al,ds:0xf2965b0a
  40cbe9:	call   FWORD PTR [esi-0x43c216c6]
  40cbef:	(bad)  
  40cbf0:	rol    DWORD PTR [ebx-0x4e],1
  40cbf3:	scas   eax,DWORD PTR es:[edi]
  40cbf4:	fcomp  DWORD PTR [ebx-0x29]
  40cbf7:	test   DWORD PTR [eax+0x79],edx
  40cbfa:	das    
  40cbfb:	mov    DWORD PTR [edi+esi*4+0x5ebb4273],0xe63cd609
  40cc06:	sub    eax,0xb523fde
  40cc0b:	jns    0x40cbe2
  40cc0d:	xchg   ecx,eax
  40cc0e:	xchg   ebx,eax
  40cc0f:	push   ebp
  40cc10:	repz das 
  40cc12:	mov    ebp,0x962b9aeb
  40cc17:	loop   0x40cba0
  40cc19:	ja     0x40cc08
  40cc1b:	(bad)
  40cc1e:	in     al,dx
  40cc1f:	jmp    DWORD PTR ds:0x9b6afd6c
  40cc25:	add    al,0x30
  40cc27:	mov    bl,0xdf
  40cc29:	sub    BYTE PTR [edx],bh
  40cc2b:	aam    0x81
  40cc2d:	mov    edx,0x8654cec8
  40cc32:	ss cwde 
  40cc34:	and    BYTE PTR [ebx-0x385eee6e],bl
  40cc3a:	dec    edi
  40cc3b:	jnp    0x40cc3b
  40cc3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc3e:	pop    ecx
  40cc3f:	mov    eax,0xb77ef136
  40cc44:	jp     0x40ccb4
  40cc46:	lods   al,BYTE PTR ds:[esi]
  40cc47:	push   ds
  40cc48:	dec    ebx
  40cc49:	xchg   edx,eax
  40cc4a:	xchg   edx,eax
  40cc4b:	call   0xd208:0xafa58c09
  40cc52:	in     al,dx
  40cc53:	inc    esp
  40cc54:	mov    ds:0x108d2e10,eax
  40cc59:	and    al,0x8b
  40cc5b:	xchg   esi,eax
  40cc5c:	pusha  
  40cc5d:	lahf   
  40cc5e:	rcl    DWORD PTR [eax],0xc
  40cc61:	pop    esp
  40cc62:	jbe    0x40ccd1
  40cc64:	mov    edx,0x7eb931d3
  40cc69:	jnp    0x40cc22
  40cc6b:	cdq    
  40cc6c:	lods   al,BYTE PTR ds:[esi]
  40cc6d:	sub    ch,BYTE PTR [esi-0x63]
  40cc70:	and    bh,BYTE PTR [esi+0x68]
  40cc73:	aaa    
  40cc74:	pop    edi
  40cc75:	sub    BYTE PTR [edx-0x51],bl
  40cc78:	mov    esi,0x8a928f03
  40cc7d:	jecxz  0x40ccba
  40cc7f:	xchg   ecx,eax
  40cc80:	fisubr WORD PTR [ebx-0xe57e275]
  40cc86:	pop    esp
  40cc87:	mov    ?,WORD PTR [ebx+0x9]
  40cc8a:	xor    DWORD PTR [esi],esi
  40cc8c:	stos   DWORD PTR es:[edi],eax
  40cc8d:	fabs   
  40cc8f:	imul   edx,DWORD PTR [ecx+0x4aa8bb12],0x20
  40cc96:	ja     0x40ccd9
  40cc98:	mov    edx,ebx
  40cc9a:	stos   BYTE PTR es:[edi],al
  40cc9b:	out    dx,eax
  40cc9c:	mov    WORD PTR [edi],ss
  40cc9e:	adc    ecx,DWORD PTR [ebx]
  40cca0:	out    dx,eax
  40cca1:	add    edi,edx
  40cca3:	sub    esp,DWORD PTR [edx+edx*8+0x6d]
  40cca7:	cmp    DWORD PTR [ebx-0x5],0xffffffc0
  40ccab:	and    cl,bl
  40ccad:	and    al,0xaf
  40ccaf:	jb     0x40cd10
  40ccb1:	daa    
  40ccb2:	sbb    BYTE PTR [ebx],ah
  40ccb4:	sahf   
  40ccb5:	mov    esi,0xd48a2200
  40ccba:	ins    BYTE PTR es:[edi],dx
  40ccbb:	loopne 0x40cc86
  40ccbd:	pop    ss
  40ccbe:	sub    BYTE PTR [edi-0x43],dh
  40ccc1:	adc    BYTE PTR [eax-0x7c],0x80
  40ccc5:	sub    dh,al
  40ccc7:	xchg   bh,cl
  40ccc9:	inc    esi
  40ccca:	es xor edi,edi
  40cccd:	jbe    0x40cc8d
  40cccf:	bound  esp,QWORD PTR [edi]
  40ccd1:	inc    ebp
  40ccd2:	xchg   DWORD PTR [edi+0x7467673f],eax
  40ccd8:	push   esi
  40ccd9:	xchg   ebp,eax
  40ccda:	fisub  DWORD PTR [ecx]
  40ccdc:	cwde   
  40ccdd:	fidiv  DWORD PTR [edi+edx*4-0x26100d10]
  40cce4:	shr    DWORD PTR [edi+edx*1-0x60],0xc
  40cce9:	ret    
  40ccea:	or     ecx,DWORD PTR [ebx]
  40ccec:	mov    BYTE PTR [eax-0x75],bh
  40ccef:	sbb    al,0xa1
  40ccf1:	add    dl,BYTE PTR [esi]
  40ccf3:	inc    ebx
  40ccf4:	dec    eax
  40ccf5:	mov    eax,ds:0x5f10a267
  40ccfa:	xchg   edi,eax
  40ccfb:	ror    BYTE PTR [eax+0x3f],1
  40ccfe:	inc    ecx
  40ccff:	mov    ah,0xd9
  40cd01:	push   ss
  40cd02:	imul   eax,esi,0x5144ebd4
  40cd08:	mov    edx,0xf273d16c
  40cd0d:	jg     0x40cd3a
  40cd0f:	xor    bl,BYTE PTR [edi-0x2f4b9467]
  40cd15:	xchg   esi,eax
  40cd16:	or     eax,DWORD PTR [ebx+0x68d62514]
  40cd1c:	mov    dh,0xec
  40cd1e:	jl     0x40cd61
  40cd20:	aaa    
  40cd21:	pop    edx
  40cd22:	imul   esi,DWORD PTR [ebx-0x71],0xffffffeb
  40cd26:	cld    
  40cd27:	jb     0x40cd00
  40cd29:	xor    BYTE PTR [eax+0x16],0xb0
  40cd2d:	nop
  40cd2e:	fmul   st(4),st
  40cd30:	jns    0x40cd6a
  40cd32:	ret    0x983f
  40cd35:	xchg   esi,eax
  40cd36:	pop    edx
  40cd37:	jle    0x40cd04
  40cd39:	dec    eax
  40cd3a:	xchg   ecx,eax
  40cd3b:	(bad)  
  40cd3c:	mov    bl,0xf7
  40cd3e:	pop    edx
  40cd3f:	cmp    esp,DWORD PTR ds:0x46162cdf
  40cd45:	sti    
  40cd46:	ins    DWORD PTR es:[edi],dx
  40cd47:	pusha  
  40cd48:	pop    esp
  40cd49:	pop    es
  40cd4a:	int3   
  40cd4b:	pushf  
  40cd4c:	loope  0x40cd31
  40cd4e:	mov    ds:0x36e37d3d,al
  40cd53:	jns    0x40cd4a
  40cd55:	dec    eax
  40cd56:	and    ah,BYTE PTR [ecx+0x5f69581d]
  40cd5c:	in     eax,0xb5
  40cd5e:	loop   0x40cdd1
  40cd60:	mov    ch,0xf9
  40cd62:	jp     0x40cd88
  40cd64:	leave  
  40cd65:	retf   
  40cd66:	cwde   
  40cd67:	addr16 and edx,edi
  40cd6a:	add    eax,0x15d16d1b
  40cd6f:	xchg   esi,eax
  40cd70:	imul   ebp,DWORD PTR [ecx],0xffffffba
  40cd73:	dec    esp
  40cd74:	dec    ebp
  40cd75:	mov    esp,0x6c641643
  40cd7a:	leave  
  40cd7b:	push   ebx
  40cd7c:	scas   eax,DWORD PTR es:[edi]
  40cd7d:	ds ret 
  40cd7f:	loopne 0x40cd4e
  40cd81:	call   0x683a:0x8ce11623
  40cd88:	call   0x5c:0xff82a99e
  40cd8f:	loopne 0x40cdb6
  40cd91:	(bad)  
  40cd92:	scas   eax,DWORD PTR es:[edi]
  40cd93:	fnstenv [ebp-0x594d4f32]
  40cd99:	pop    edi
  40cd9a:	in     al,0x6c
  40cd9c:	add    al,0xfe
  40cd9e:	push   edx
  40cd9f:	(bad)  
  40cda0:	outs   dx,DWORD PTR ds:[esi]
  40cda1:	data16 out dx,al
  40cda3:	mov    edi,0x36e3868a
  40cda8:	xor    al,0xdd
  40cdaa:	jmp    0x93f8:0x9a607adb
  40cdb1:	shl    DWORD PTR [edi+0x5d3b46dd],0xa
  40cdb8:	ja     0x40cde2
  40cdba:	push   cs
  40cdbb:	sbb    dh,BYTE PTR [eax]
  40cdbd:	jp     0x40cda8
  40cdbf:	xchg   edx,esi
  40cdc1:	adc    al,0xc7
  40cdc3:	iret   
  40cdc4:	push   cs
  40cdc5:	in     eax,0x12
  40cdc7:	mov    eax,ds:0x8d4509fb
  40cdcc:	icebp  
  40cdcd:	fst    QWORD PTR [eax+esi*4-0x40ce452d]
  40cdd4:	rcr    BYTE PTR [ebx-0x61],1
  40cdd7:	mov    eax,0x17b62970
  40cddc:	mov    eax,0xcf361a3d
  40cde1:	dec    edx
  40cde2:	inc    esi
  40cde3:	imul   ebp,DWORD PTR fs:[edx+0xb],0x3e
  40cde8:	lea    edx,[edx-0x3e07ddaa]
  40cdee:	push   ss
  40cdef:	das    
  40cdf0:	loop   0x40cd73
  40cdf2:	pop    ecx
  40cdf3:	in     al,dx
  40cdf4:	jns    0x40ce36
  40cdf6:	inc    ebx
  40cdf7:	push   0x63b49581
  40cdfc:	adc    edi,edx
  40cdfe:	retf   
  40cdff:	aam    0x37
  40ce01:	push   cs
  40ce02:	cdq    
  40ce03:	out    dx,eax
  40ce04:	lea    edx,[edi+0x67eac157]
  40ce0a:	dec    eax
  40ce0b:	aaa    
  40ce0c:	pop    esp
  40ce0d:	and    esi,DWORD PTR [edx-0x47489074]
  40ce13:	cmp    eax,0x6edc6263
  40ce18:	pop    esp
  40ce19:	je     0x40ce2f
  40ce1b:	iret   
  40ce1c:	add    DWORD PTR [ebx+ecx*1-0x2c],ecx
  40ce20:	jo     0x40cde6
  40ce22:	icebp  
  40ce23:	fidivr DWORD PTR [ecx-0x2e]
  40ce26:	in     eax,dx
  40ce27:	or     DWORD PTR [eax+0xb],eax
  40ce2a:	lds    esp,FWORD PTR [eax+eax*1]
  40ce2d:	lods   eax,DWORD PTR ds:[esi]
  40ce2e:	push   eax
  40ce2f:	ds out 0x8f,eax
  40ce32:	or     DWORD PTR ds:0xac126449,edx
  40ce38:	shl    BYTE PTR [ebx-0x72dc3b6f],cl
  40ce3e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ce40:	ds jo  0x40ce00
  40ce43:	(bad)  
  40ce44:	adc    DWORD PTR [eax+0x4619e4a9],ebp
  40ce4a:	loope  0x40cebf
  40ce4c:	aas    
  40ce4d:	cmp    BYTE PTR [ecx+esi*4-0x6e1e06af],ah
  40ce54:	dec    esi
  40ce55:	jbe    0x40ce2e
  40ce57:	inc    ecx
  40ce58:	cld    
  40ce59:	mov    esi,0x8424926d
  40ce5e:	add    eax,0x9760783f
  40ce63:	fdiv   st,st(3)
  40ce65:	cmp    al,dl
  40ce67:	out    dx,al
  40ce68:	iret   
  40ce69:	mov    ah,0xf9
  40ce6b:	cmp    bl,dh
  40ce6d:	dec    esp
  40ce6e:	(bad)  
  40ce6f:	pop    ebp
  40ce70:	fidivr WORD PTR ds:0xd41cb042
  40ce76:	stc    
  40ce77:	and    al,0x75
  40ce79:	xchg   BYTE PTR [eax],dl
  40ce7b:	pushf  
  40ce7c:	ja     0x40ce1b
  40ce7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce7f:	fsub   QWORD PTR [edx]
  40ce81:	jns    0x40cef7
  40ce83:	aad    0x25
  40ce85:	mov    es,WORD PTR [edi]
  40ce87:	sbb    bl,BYTE PTR [ecx-0x58]
  40ce8a:	fist   DWORD PTR [edx]
  40ce8c:	mov    ebp,0x7055d27a
  40ce91:	pop    edx
  40ce92:	bswap  esp
  40ce94:	enter  0x86a8,0xae
  40ce98:	lock shl DWORD PTR ds:0x39d2751a,0xac
  40cea0:	loopne 0x40cec7
  40cea2:	mov    bh,0x34
  40cea4:	mov    edx,0x48f7fac8
  40cea9:	out    dx,eax
  40ceaa:	push   esi
  40ceab:	or     eax,0xcd9ada85
  40ceb0:	sub    esi,DWORD PTR [ebx+0x430274b6]
  40ceb6:	and    eax,0x72c5df79
  40cebb:	xor    DWORD PTR [edi+ecx*2-0xc],0x842243d
  40cec3:	mov    bh,0x2
  40cec5:	in     al,dx
  40cec6:	and    ecx,DWORD PTR [edi]
  40cec8:	sbb    eax,0xe261df21
  40cecd:	jle    0x40ce60
  40cecf:	popa   
  40ced0:	pop    es
  40ced1:	out    dx,eax
  40ced2:	jbe    0x40ce83
  40ced4:	push   edx
  40ced5:	addr16 mov bh,dh
  40ced8:	ja     0x40cf4b
  40ceda:	mov    si,WORD PTR [eax+0xa425bde]
  40cee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cee2:	xor    eax,0x2b584849
  40cee7:	mov    ah,0x67
  40cee9:	dec    ebx
  40ceea:	bound  esi,QWORD PTR [edi]
  40ceec:	cmp    dh,bl
  40ceee:	(bad)  
  40ceef:	mov    eax,ds:0xd6b4976a
  40cef4:	xchg   edx,eax
  40cef5:	pop    ecx
  40cef6:	sbb    ebp,DWORD PTR [esp+esi*8+0x2bebf6e0]
  40cefd:	xor    BYTE PTR [ebx+0x5ee5354a],al
  40cf03:	mov    cl,0xbd
  40cf05:	jns    0x40cf58
  40cf07:	addr16 test eax,0x6ac4ee64
  40cf0d:	mov    ds:0x2872f94d,al
  40cf12:	or     edi,DWORD PTR [ebp-0x7f]
  40cf15:	ret    
  40cf16:	pop    ebp
  40cf17:	fs jbe 0x40cf7f
  40cf1a:	xchg   esp,eax
  40cf1b:	and    eax,0x7e54cc40
  40cf20:	xor    al,0xc8
  40cf22:	or     ebp,esi
  40cf24:	xor    eax,0xc4e5eef3
  40cf29:	aad    0xe8
  40cf2b:	sub    BYTE PTR [edi+0x46db3990],cl
  40cf31:	and    eax,0xc6353189
  40cf36:	addr16 dec esp
  40cf38:	push   esp
  40cf39:	pop    ss
  40cf3a:	cmp    al,0x15
  40cf3c:	sub    bh,cl
  40cf3e:	loope  0x40cf6a
  40cf40:	xlat   BYTE PTR ds:[ebx]
  40cf41:	retf   
  40cf42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf43:	outs   dx,BYTE PTR ds:[esi]
  40cf44:	push   edx
  40cf45:	shr    BYTE PTR [ecx-0x49],cl
  40cf48:	xchg   edi,eax
  40cf49:	pop    eax
  40cf4a:	xlat   BYTE PTR ds:[ebx]
  40cf4b:	aaa    
  40cf4c:	add    eax,0x15ca1d33
  40cf51:	push   eax
  40cf52:	mov    dl,0x68
  40cf54:	test   DWORD PTR [ebx+0x5f62fb41],esi
  40cf5a:	(bad)  [eax]
  40cf5c:	cdq    
  40cf5d:	ja     0x40cee3
  40cf5f:	fnstenv [bp+di+0x78]
  40cf63:	xor    DWORD PTR [edi],eax
  40cf65:	add    eax,0x81c01a57
  40cf6a:	push   esp
  40cf6b:	sub    ecx,ebp
  40cf6d:	and    eax,0xa559c20d
  40cf72:	aam    0xa3
  40cf74:	jl     0x40cf89
  40cf76:	inc    ebp
  40cf77:	mov    esi,0x6540bba0
  40cf7c:	(bad)  
  40cf7d:	ja     0x40cfcf
  40cf7f:	cdq    
  40cf80:	pop    ds
  40cf81:	adc    al,BYTE PTR [esi]
  40cf83:	jg     0x40cf9a
  40cf85:	push   ebp
  40cf86:	sbb    ah,BYTE PTR [esi]
  40cf88:	sub    eax,0xc53c7535
  40cf8d:	and    al,0xe3
  40cf8f:	pop    eax
  40cf90:	fldenv ds:0x3f4475a9
  40cf96:	pop    ecx
  40cf97:	and    DWORD PTR [ecx+0x4e],0x23
  40cf9b:	(bad)  
  40cf9c:	outs   dx,BYTE PTR ds:[esi]
  40cf9d:	add    BYTE PTR [ecx-0x6e],bh
  40cfa0:	inc    esp
  40cfa1:	retf   
  40cfa2:	sti    
  40cfa3:	pop    ebp
  40cfa4:	lods   al,BYTE PTR ds:[esi]
  40cfa5:	mov    ebp,0xd00458c2
  40cfaa:	pop    ds
  40cfab:	(bad)  [ebx-0x28]
  40cfae:	lods   al,BYTE PTR ds:[esi]
  40cfaf:	test   al,0xf2
  40cfb1:	jle    0x40cfa0
  40cfb3:	inc    esp
  40cfb4:	pop    es
  40cfb5:	arpl   WORD PTR [ebx+edx*2],ax
  40cfb8:	mov    dl,0xaa
  40cfba:	sub    edx,DWORD PTR cs:[edx-0x3fd75c79]
  40cfc1:	out    0x72,al
  40cfc3:	inc    ebx
  40cfc4:	or     al,0x0
  40cfc6:	add    al,0x5b
  40cfc8:	leave  
  40cfc9:	shl    DWORD PTR [ebx],cl
  40cfcb:	mov    dh,0x62
  40cfcd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40cfcf:	push   0xffffffd5
  40cfd1:	and    eax,0xed7b57fe
  40cfd6:	mov    eax,ds:0xc574c25f
  40cfdb:	push   edi
  40cfdc:	xchg   ebp,eax
  40cfdd:	xor    esp,esp
  40cfdf:	and    al,0x40
  40cfe1:	pushf  
  40cfe2:	aas    
  40cfe3:	sub    esi,DWORD PTR [esi-0x2241e469]
  40cfe9:	mov    ds:0xbbfe57bc,al
  40cfee:	fst    QWORD PTR [ebx+0x5d]
  40cff1:	mov    BYTE PTR [edx+0x41],ah
  40cff4:	xor    BYTE PTR [ecx-0x5cad7e8a],bl
  40cffa:	adc    al,0xd3
  40cffc:	jb     0x40d038
  40cffe:	xchg   BYTE PTR [ecx-0x70],ch
  40d001:	mov    ds:0x6ee05bd4,al
  40d006:	pop    eax
  40d007:	nop
  40d008:	cs pop eax
  40d00a:	je     0x40d026
  40d00c:	xchg   ebx,eax
  40d00d:	fadd   QWORD PTR [eax-0x55]
  40d010:	scas   eax,DWORD PTR es:[edi]
  40d011:	ret    
  40d012:	mov    eax,DWORD PTR [edi+0x13]
  40d015:	jmp    0x90e3:0xa37c0805
  40d01c:	or     DWORD PTR [edi-0x32],edx
  40d01f:	jecxz  0x40d094
  40d021:	or     DWORD PTR [ebp+0xe],esp
  40d024:	push   edx
  40d025:	and    cl,BYTE PTR [esi+0x3d75acb1]
  40d02b:	je     0x40cfc8
  40d02d:	dec    edx
  40d02e:	shr    BYTE PTR [ebp+ebp*8-0x73],cl
  40d032:	test   BYTE PTR [edi+0x29fbeed3],bh
  40d038:	and    esi,edi
  40d03a:	pop    ebx
  40d03b:	sar    DWORD PTR [edi-0x5a],cl
  40d03e:	jo     0x40d038
  40d040:	and    DWORD PTR [ecx],eax
  40d042:	loopne 0x40d090
  40d044:	mov    dh,0x59
  40d046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d047:	cld    
  40d048:	gs pop ebp
  40d04a:	and    BYTE PTR [ebx-0x634c0b59],0xd1
  40d051:	mov    ecx,0x680abdc6
  40d056:	int3   
  40d057:	and    eax,0xaf66b6c7
  40d05c:	jmp    0x99d53579
  40d061:	ror    DWORD PTR [edx-0x5c],cl
  40d064:	cld    
  40d065:	das    
  40d066:	mul    BYTE PTR ds:[eax+eiz*2-0x32]
  40d06b:	cmp    bl,BYTE PTR [ecx+0x6de777ab]
  40d071:	addr16 mov ch,0x65
  40d074:	push   esi
  40d075:	mov    BYTE PTR [ebp+esi*4-0x3a27f614],ch
  40d07c:	sbb    al,cl
  40d07e:	mov    edx,0x1a2a3f75
  40d083:	xor    al,0x7b
  40d085:	mov    ebp,DWORD PTR [edx+edi*2-0x1c]
  40d089:	arpl   WORD PTR [eax-0x1c862cb1],sp
  40d08f:	bound  ecx,QWORD PTR [ecx]
  40d091:	mov    ds:0x6ede9fe4,al
  40d096:	mov    cl,0x5b
  40d098:	mov    ebx,0xd5cb7294
  40d09d:	mov    esi,0x7304776b
  40d0a2:	pop    edx
  40d0a3:	(bad)  
  40d0a4:	fdivr  DWORD PTR [ebx+0x6531b8be]
  40d0aa:	fdivr  QWORD PTR [ebx+0x70]
  40d0ad:	or     bh,BYTE PTR [esi-0x7a6cbc6]
  40d0b3:	jbe    0x40d08a
  40d0b5:	scas   al,BYTE PTR es:[edi]
  40d0b6:	ja     0x40d11b
  40d0b8:	pop    ebx
  40d0b9:	fmul   DWORD PTR [ebx+0x50266810]
  40d0bf:	sbb    BYTE PTR [eax],bh
  40d0c1:	mov    ebp,DWORD PTR [eax-0x621a129e]
  40d0c7:	fidivr WORD PTR [edi+eiz*1]
  40d0ca:	push   ebp
  40d0cb:	add    DWORD PTR [edx-0x250e9465],eax
  40d0d1:	sti    
  40d0d2:	aaa    
  40d0d3:	jge    0x40d0e2
  40d0d5:	mov    dl,0x90
  40d0d7:	not    esp
  40d0d9:	ss jmp 0x2425:0x94a1533b
  40d0e1:	mov    bl,0xa2
  40d0e3:	and    dh,dh
  40d0e5:	xchg   ebx,eax
  40d0e6:	js     0x40d101
  40d0e8:	mov    BYTE PTR [ecx],al
  40d0ea:	sbb    edi,DWORD PTR [ebx+0x3b822fd0]
  40d0f0:	xchg   edi,eax
  40d0f1:	in     al,dx
  40d0f2:	out    dx,al
  40d0f3:	xchg   ebp,eax
  40d0f4:	xchg   edi,eax
  40d0f5:	inc    ebx
  40d0f6:	push   cs
  40d0f7:	cmc    
  40d0f8:	pop    ebx
  40d0f9:	mov    ch,BYTE PTR [esi+0x7e2a5a4d]
  40d0ff:	dec    esp
  40d100:	xor    dl,bl
  40d102:	jo     0x40d0c6
  40d104:	dec    edx
  40d105:	mov    ds:0x683d2f97,eax
  40d10a:	add    cl,bl
  40d10c:	mov    esp,0x6071e5f3
  40d111:	sbb    BYTE PTR [esi-0x5],cl
  40d114:	dec    esp
  40d115:	sti    
  40d116:	ds cld 
  40d118:	dec    eax
  40d119:	xchg   edx,eax
  40d11a:	push   ecx
  40d11b:	push   edi
  40d11c:	sub    ah,BYTE PTR [ebp+0x27]
  40d11f:	dec    esi
  40d120:	outs   dx,BYTE PTR ds:[esi]
  40d121:	push   edx
  40d122:	loop   0x40d0c0
  40d124:	sbb    eax,0x99adbb94
  40d129:	sub    DWORD PTR [esi],edi
  40d12b:	cs xor eax,0x8de433d8
  40d131:	sbb    bl,BYTE PTR [esi-0x5b]
  40d134:	push   esp
  40d135:	out    0x9b,al
  40d137:	pop    edi
  40d138:	xchg   edi,eax
  40d139:	and    bl,BYTE PTR [edi*2-0x7fdf2f17]
  40d140:	scas   eax,DWORD PTR es:[edi]
  40d141:	scas   al,BYTE PTR es:[edi]
  40d142:	pop    edi
  40d143:	out    0xd3,al
  40d145:	sbb    eax,DWORD PTR [eax-0x16]
  40d148:	nop
  40d149:	sbb    DWORD PTR [eax-0x57936445],0x53cb3490
  40d153:	xchg   ebx,eax
  40d154:	add    esi,esi
  40d156:	ins    DWORD PTR es:[edi],dx
  40d157:	cmp    al,0x48
  40d159:	std    
  40d15a:	arpl   WORD PTR [edx-0x259d4376],si
  40d160:	test   al,0xc4
  40d162:	push   ebp
  40d163:	and    ax,0x479d
  40d167:	sti    
  40d168:	push   eax
  40d169:	pop    ebp
  40d16a:	les    ebp,FWORD PTR [esi+0x33259c91]
  40d170:	mov    BYTE PTR [ebx+0x292ad2ec],cl
  40d176:	icebp  
  40d177:	pop    esi
  40d178:	jge    0x40d17b
  40d17a:	cmp    DWORD PTR [esi],ebx
  40d17c:	or     al,BYTE PTR [eax]
  40d17e:	sahf   
  40d17f:	jns    0x40d13a
  40d181:	sub    DWORD PTR [edx+0x1bf6bff3],esi
  40d187:	cmp    DWORD PTR [ecx-0x57],esp
  40d18a:	in     al,dx
  40d18b:	fcomp  QWORD PTR [edx-0x4d08d1f1]
  40d191:	pop    edi
  40d192:	lock or dh,al
  40d195:	lods   al,BYTE PTR ds:[esi]
  40d196:	test   eax,eax
  40d198:	hlt    
  40d199:	sub    al,0x22
  40d19b:	xchg   edx,eax
  40d19c:	push   esi
  40d19d:	aas    
  40d19e:	xchg   edx,eax
  40d19f:	inc    edx
  40d1a0:	fsubp  st(2),st
  40d1a2:	sub    al,0xb0
  40d1a4:	and    BYTE PTR [esi],dh
  40d1a6:	ror    DWORD PTR [ecx],cl
  40d1a8:	data16 int3 
  40d1aa:	sbb    DWORD PTR [eax],esi
  40d1ac:	in     eax,dx
  40d1ad:	jno    0x40d15e
  40d1af:	push   ss
  40d1b0:	inc    ebx
  40d1b1:	inc    ebx
  40d1b2:	outs   dx,BYTE PTR ds:[esi]
  40d1b3:	fnstcw WORD PTR [ecx+0xa]
  40d1b6:	dec    esi
  40d1b7:	pop    ss
  40d1b8:	or     bl,BYTE PTR [edx]
  40d1ba:	mov    edx,0x4a6c9a62
  40d1bf:	mov    esp,0x61451799
  40d1c4:	jecxz  0x40d1f7
  40d1c6:	fdivr  st,st(1)
  40d1c8:	jne    0x40d198
  40d1ca:	pop    edi
  40d1cb:	pop    ds
  40d1cc:	or     BYTE PTR [esi-0x318d5c3e],dh
  40d1d2:	sub    al,0xb6
  40d1d4:	popf   
  40d1d5:	sbb    ch,al
  40d1d7:	or     al,0x85
  40d1d9:	or     al,0x7a
  40d1db:	jae    0x40d23d
  40d1dd:	je     0x40d1de
  40d1df:	and    dh,BYTE PTR ds:0xd14b2d86
  40d1e5:	les    ebx,FWORD PTR [eax-0x2744bb08]
  40d1eb:	and    DWORD PTR [ebx],edi
  40d1ed:	ins    BYTE PTR es:[edi],dx
  40d1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ef:	jbe    0x40d226
  40d1f1:	cli    
  40d1f2:	fdivr  QWORD PTR [edi+0x56666852]
  40d1f8:	loope  0x40d1af
  40d1fa:	cli    
  40d1fb:	and    edi,DWORD PTR [edx-0x11]
  40d1fe:	ficomp DWORD PTR [esp+edx*1]
  40d201:	shl    BYTE PTR [ebx+0x7c3c6272],1
  40d207:	inc    ebx
  40d208:	sbb    eax,0xeaa7283a
  40d20d:	mov    cl,0xfa
  40d20f:	mov    ah,0xe0
  40d211:	sar    BYTE PTR ds:0x9f69ed88,0x49
  40d218:	test   al,0xa1
  40d21a:	add    ebx,DWORD PTR [ecx+0x37976825]
  40d220:	lock fstp st(0)
  40d223:	in     al,dx
  40d224:	dec    ebp
  40d225:	xchg   edx,eax
  40d226:	jb     0x40d296
  40d228:	pop    ss
  40d229:	(bad)  
  40d22a:	int    0x8d
  40d22c:	push   esp
  40d22e:	test   bl,bh
  40d230:	pop    es
  40d231:	jb     0x40d1fe
  40d233:	pop    ss
  40d234:	or     al,0x4d
  40d236:	out    0x16,al
  40d238:	jnp    0x40d239
  40d23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23b:	push   edx
  40d23c:	les    edx,FWORD PTR [edi]
  40d23e:	clc    
  40d23f:	in     al,0xd7
  40d241:	jp     0x40d1f4
  40d243:	hlt    
  40d244:	lahf   
  40d245:	leave  
  40d246:	arpl   dx,ax
  40d248:	retf   
  40d249:	push   esp
  40d24a:	dec    ecx
  40d24b:	sbb    ah,BYTE PTR [ebx]
  40d24d:	and    di,WORD PTR [edx-0x4e032c4d]
  40d254:	xor    edx,DWORD PTR [ecx]
  40d256:	ret    
  40d257:	jmp    0x40d237
  40d259:	ins    DWORD PTR es:[edi],dx
  40d25a:	test   al,0xb3
  40d25c:	push   cs
  40d25d:	xchg   DWORD PTR [ecx+eax*1-0x43c1c748],edx
  40d264:	cmp    BYTE PTR [edx-0x7eef9620],ch
  40d26a:	shl    DWORD PTR [ebp+0x18],cl
  40d26d:	add    dh,BYTE PTR [ebx-0x64]
  40d270:	pop    eax
  40d271:	dec    ebx
  40d272:	cmp    eax,DWORD PTR [esi+0x68]
  40d275:	sub    dl,BYTE PTR [edx-0x64313a1d]
  40d27b:	mul    DWORD PTR [ebx]
  40d27d:	xchg   ebx,eax
  40d27e:	push   cs
  40d27f:	data16 or ch,dl
  40d282:	sbb    ebx,DWORD PTR [edx+0x54]
  40d285:	add    bh,BYTE PTR [edx+0xdad2ef8]
  40d28b:	daa    
  40d28c:	daa    
  40d28d:	test   al,0x46
  40d28f:	inc    esp
  40d290:	int3   
  40d291:	ret    0xbc8c
  40d294:	push   cs
  40d295:	fidivr WORD PTR [ecx-0x4904ea3d]
  40d29b:	std    
  40d29c:	es imul eax,edx,0x48e41c88
  40d2a3:	loopne 0x40d30a
  40d2a5:	in     al,dx
  40d2a6:	pop    ss
  40d2a7:	dec    ecx
  40d2a8:	out    0xc9,al
  40d2aa:	or     al,0xe3
  40d2ac:	mov    al,ds:0x6fd95db9
  40d2b1:	ror    DWORD PTR [ebp-0x65],0xbe
  40d2b5:	pop    edi
  40d2b6:	into   
  40d2b7:	bnd jb 0x40d268
  40d2ba:	mov    ch,0xfc
  40d2bc:	sbb    BYTE PTR [ecx+0x6d9bfd7],ch
  40d2c2:	scas   al,BYTE PTR es:[edi]
  40d2c3:	add    BYTE PTR [eax],bl
  40d2c5:	fxch   st(6)
  40d2c7:	xchg   edi,eax
  40d2c8:	retf   0x81b3
  40d2cb:	fsubr  st,st(1)
  40d2cd:	xchg   esp,eax
  40d2ce:	add    bh,0x45
  40d2d1:	loopne 0x40d284
  40d2d3:	dec    ebp
  40d2d4:	adc    BYTE PTR [ebp+0x24],bh
  40d2d7:	and    DWORD PTR [edx+ebp*2-0x3767fc9],ebp
  40d2de:	sbb    ebp,DWORD PTR [ebp+0x2a2ab0d1]
  40d2e4:	pop    es
  40d2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2e6:	mov    ds:0xfa232762,eax
  40d2eb:	je     0x40d2e5
  40d2ed:	arpl   WORD PTR [eax+0x70e5ee51],si
  40d2f3:	sbb    ax,0x255c
  40d2f7:	inc    esi
  40d2f8:	(bad)  
  40d2f9:	outs   dx,BYTE PTR ds:[esi]
  40d2fa:	les    ebx,FWORD PTR [esp+edi*1-0x11]
  40d2fe:	(bad)  
  40d2ff:	(bad)  
  40d300:	stc    
  40d301:	jp     0x40d2d3
  40d303:	inc    esi
  40d304:	push   edi
  40d305:	mov    esi,cs
  40d307:	jmp    0xfa2deaf2
  40d30c:	and    al,0xf
  40d30e:	add    al,0x90
  40d310:	push   esi
  40d311:	stos   DWORD PTR es:[edi],eax
  40d312:	xchg   esi,eax
  40d313:	rol    DWORD PTR [eax],cl
  40d315:	push   ecx
  40d316:	jae    0x40d30f
  40d318:	xor    al,BYTE PTR [ebp+0x4b4d1faa]
  40d31e:	push   esp
  40d31f:	jecxz  0x40d340
  40d321:	iret   
  40d322:	mov    cl,0x8d
  40d324:	cmp    al,0x7f
  40d326:	cmp    edi,ebp
  40d328:	(bad)  
  40d329:	mov    ecx,0x1a72cd94
  40d32e:	xchg   ecx,eax
  40d32f:	mov    ch,0x84
  40d331:	mov    ds:0xd08365b,al
  40d336:	ja     0x40d2c4
  40d338:	int    0x66
  40d33a:	add    esp,DWORD PTR [ecx+ecx*8-0x329ea3a6]
  40d341:	sar    al,0x5f
  40d344:	fcmovnbe st,st(7)
  40d346:	sub    edi,DWORD PTR [eax]
  40d348:	leave  
  40d349:	xchg   DWORD PTR es:[ecx+0x53],ebp
  40d34d:	(bad)  
  40d34e:	mov    ebx,0xf82d19a9
  40d353:	and    eax,0xf01e71c6
  40d358:	sar    BYTE PTR [edi],0x3a
  40d35b:	fcos   
  40d35d:	jbe    0x40d3c5
  40d35f:	mov    al,ds:0xa2ead085
  40d364:	sahf   
  40d365:	jns    0x40d39f
  40d367:	add    esp,ebx
  40d369:	push   edx
  40d36a:	mov    ah,0x65
  40d36c:	and    eax,0x25a58142
  40d371:	je     0x40d375
  40d373:	jb     0x40d336
  40d375:	daa    
  40d376:	call   0x74c7:0x20926e0d
  40d37d:	cs in  eax,0xd
  40d380:	cwde   
  40d381:	lds    ecx,FWORD PTR [eax+0x1f]
  40d384:	shr    edx,cl
  40d386:	lock dec esp
  40d388:	fsubr  QWORD PTR [ebp+0x6f]
  40d38b:	sub    dh,ch
  40d38d:	cs es retf 0xf961
  40d392:	mov    dl,0xc6
  40d394:	inc    esp
  40d395:	mov    edi,0xe106b01c
  40d39a:	mov    ch,ah
  40d39c:	add    BYTE PTR [eax-0x63],ah
  40d39f:	sub    dl,BYTE PTR [edx-0x4daabeb6]
  40d3a5:	push   esi
  40d3a6:	mov    al,0x32
  40d3a8:	sbb    DWORD PTR [ebx-0x12514cf2],esp
  40d3ae:	jo     0x40d353
  40d3b0:	imul   esi,DWORD PTR [esi],0x45b0ef90
  40d3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b7:	sub    ebp,DWORD PTR fs:[eax+0x66c19954]
  40d3be:	ds pop ds
  40d3c0:	and    eax,0x40263dd1
  40d3c5:	(bad)  
  40d3c6:	mov    es,ebx
  40d3c8:	sti    
  40d3c9:	retf   0x175d
  40d3cc:	mov    ah,dl
  40d3ce:	fisttp DWORD PTR ds:0xcdc761e
  40d3d4:	cwde   
  40d3d5:	pop    es
  40d3d6:	pop    ss
  40d3d7:	push   ecx
  40d3d8:	mov    ebp,0xe1853a11
  40d3dd:	xor    DWORD PTR [edi+0x5bac936d],ecx
  40d3e3:	js     0x40d3fe
  40d3e5:	imul   eax,DWORD PTR [ebx+esi*2-0xa],0xffffffb6
  40d3ea:	int    0xad
  40d3ec:	scas   eax,DWORD PTR es:[edi]
  40d3ed:	mov    edx,0xe044fedb
  40d3f2:	jp     0x40d43c
  40d3f4:	xor    DWORD PTR [edx+0x3cb1beb1],esi
  40d3fa:	popf   
  40d3fb:	stos   DWORD PTR es:[edi],eax
  40d3fc:	(bad)  [edi]
  40d3fe:	xchg   edi,eax
  40d3ff:	mov    WORD PTR [ebp+0x32dbb499],ss
  40d405:	mov    DWORD PTR [ebp+0x51d12ef7],0x7cc4a514
  40d40f:	push   ds
  40d410:	cmp    ebx,edx
  40d412:	push   ebx
  40d413:	popa   
  40d414:	mov    ecx,0x40e0eacb
  40d419:	fst    DWORD PTR [edx]
  40d41b:	retf   
  40d41c:	mov    bl,0xcf
  40d41e:	jnp    0x40d42f
  40d420:	mov    ch,BYTE PTR [ebx-0x6bd3e9a7]
  40d426:	pop    edi
  40d427:	stc    
  40d428:	arpl   WORD PTR [eax+0x53],dx
  40d42b:	repnz iret 
  40d42d:	fwait
  40d42e:	mov    ch,0x9b
  40d430:	pop    esi
  40d431:	jns    0x40d3f2
  40d433:	mov    eax,ds:0xe9709ba6
  40d438:	jnp    0x40d3c9
  40d43a:	mov    edx,0x88e0330
  40d43f:	jmp    0x17d5:0x7c142384
  40d446:	xor    DWORD PTR [ebx-0x60c00bbf],ebp
  40d44c:	fist   WORD PTR [eax]
  40d44e:	loopne 0x40d48f
  40d450:	xchg   DWORD PTR [ebx-0x1b359117],esp
  40d456:	icebp  
  40d457:	xchg   ebx,eax
  40d458:	call   FWORD PTR [ebx-0xe4d4611]
  40d45e:	enter  0x679,0x3d
  40d462:	jae    0x40d472
  40d464:	push   ebx
  40d465:	lds    edx,FWORD PTR [edi+0x43]
  40d468:	push   esi
  40d469:	aas    
  40d46a:	mov    ds:0xcc763b94,al
  40d46f:	dec    ebx
  40d470:	sahf   
  40d471:	dec    ecx
  40d472:	jnp    0x40d42d
  40d474:	push   0x855a1656
  40d479:	add    ebp,DWORD PTR [ecx]
  40d47b:	je     0x40d418
  40d47d:	shr    BYTE PTR [esi-0x66],0x30
  40d481:	inc    esp
  40d482:	adc    BYTE PTR [ecx+0x62],dh
  40d485:	cmp    al,0x24
  40d487:	adc    DWORD PTR [edi-0x1882cff7],esp
  40d48d:	push   0xfffffff0
  40d48f:	out    dx,al
  40d490:	mov    ah,0x1f
  40d492:	mov    esp,0x8b25ef4a
  40d497:	ins    BYTE PTR es:[edi],dx
  40d498:	jns    0x40d431
  40d49a:	sbb    esp,0xd
  40d49d:	clc    
  40d49e:	inc    ebp
  40d49f:	inc    ecx
  40d4a0:	dec    edx
  40d4a1:	rcl    cl,0x2a
  40d4a4:	rcl    al,cl
  40d4a6:	ins    DWORD PTR es:[edi],dx
  40d4a7:	push   ebp
  40d4a8:	push   esp
  40d4a9:	pop    edi
  40d4aa:	add    ch,bh
  40d4ac:	inc    esp
  40d4ad:	xchg   esp,eax
  40d4ae:	imul   esp,edi,0x17b547dc
  40d4b4:	or     bh,bh
  40d4b6:	jle    0x40d43a
  40d4b8:	loope  0x40d456
  40d4ba:	mov    cl,0xfc
  40d4bc:	push   ebp
  40d4bd:	call   0xef30:0xd8ad0cfa
  40d4c4:	mov    al,0x8d
  40d4c6:	mov    esi,0x4f06c38a
  40d4cb:	in     eax,0xab
  40d4cd:	fwait
  40d4ce:	mov    esp,0x535b0e9
  40d4d3:	pop    esp
  40d4d4:	dec    esp
  40d4d5:	jo     0x40d460
  40d4d7:	jp     0x40d469
  40d4d9:	(bad)  
  40d4db:	(bad)  
  40d4dd:	xor    esi,DWORD PTR [esi]
  40d4df:	imul   ebp,DWORD PTR [eax+eax*2+0x59],0xffffffe4
  40d4e4:	jg     0x40d4fb
  40d4e6:	imul   eax,DWORD PTR [edx],0xffffffc6
  40d4e9:	sbb    al,0xa4
  40d4eb:	add    bl,BYTE PTR [ebx]
  40d4ed:	leave  
  40d4ee:	out    dx,al
  40d4ef:	leave  
  40d4f0:	mov    edi,0x911715ba
  40d4f5:	mov    esi,0xadc1287f
  40d4fa:	cwde   
  40d4fb:	pop    esp
  40d4fc:	push   ds
  40d4fd:	mov    al,0x4e
  40d4ff:	into   
  40d500:	sbb    bh,BYTE PTR [edi]
  40d502:	stos   BYTE PTR es:[edi],al
  40d503:	xchg   edx,eax
  40d504:	jmp    0x7552:0x25608f3
  40d50b:	cdq    
  40d50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d50d:	int    0x48
  40d50f:	sbb    eax,0x4ecb8fae
  40d514:	fs jl  0x40d550
  40d517:	inc    esp
  40d518:	cmp    esp,esi
  40d51a:	jnp    0x40d547
  40d51c:	imul   ebx,ebp,0x76
  40d51f:	and    al,0x1a
  40d521:	inc    ecx
  40d522:	cmp    BYTE PTR [esi],0x9d
  40d525:	call   0x6b5f151c
  40d52a:	mov    eax,ds:0x845d668e
  40d52f:	lods   al,BYTE PTR ds:[esi]
  40d530:	adc    BYTE PTR [esi+0x18a77c13],bl
  40d536:	stos   DWORD PTR es:[edi],eax
  40d537:	sub    DWORD PTR [eax+0x11a10b80],esp
  40d53d:	cmp    esi,edi
  40d53f:	fwait
  40d540:	mov    edi,0xab5b8b79
  40d545:	iret   
  40d546:	lods   eax,DWORD PTR ds:[esi]
  40d547:	inc    edx
  40d548:	mov    bh,0xc4
  40d54a:	add    al,0xec
  40d54c:	test   DWORD PTR [edi-0x9d23642],ebp
  40d552:	push   ds
  40d553:	jb     0x40d4da
  40d555:	xor    al,0x3a
  40d557:	and    dh,BYTE PTR [esp+ecx*1]
  40d55a:	ret    
  40d55b:	xchg   BYTE PTR [eax],cl
  40d55d:	mov    cl,0x94
  40d55f:	sub    BYTE PTR [edi],ch
  40d561:	out    dx,eax
  40d562:	mov    ah,0xf6
  40d564:	mov    dl,0xfa
  40d566:	mov    edx,0x72079581
  40d56b:	jle    0x40d525
  40d56d:	pop    ebp
  40d56e:	nop
  40d56f:	les    ebx,FWORD PTR [edi]
  40d571:	ret    0x1273
  40d574:	in     al,dx
  40d575:	mov    ebp,0x647e0c49
  40d57a:	fst    DWORD PTR [edi+0x8]
  40d57d:	mov    bl,BYTE PTR [eiz*2+0x5954c71b]
  40d584:	pop    ecx
  40d585:	sbb    DWORD PTR [edx+0x57],eax
  40d588:	mov    al,0xad
  40d58a:	add    esp,ecx
  40d58c:	push   edi
  40d58d:	cli    
  40d58e:	je     0x40d54c
  40d590:	adc    al,0xc9
  40d592:	sbb    BYTE PTR [edi-0x3d60e0ef],0x87
  40d599:	add    ebp,DWORD PTR [edi-0x8161706]
  40d59f:	nop
  40d5a0:	push   es
  40d5a1:	sbb    DWORD PTR [edi],0xffffffb2
  40d5a4:	aam    0xa
  40d5a6:	inc    esi
  40d5a7:	or     ebx,0x9aba3ea7
  40d5ad:	cmp    ebp,edi
  40d5af:	div    BYTE PTR [ebp+0xc]
  40d5b2:	xor    edx,DWORD PTR [eax-0x1514bd94]
  40d5b8:	xchg   ebp,eax
  40d5b9:	out    dx,eax
  40d5ba:	push   edi
  40d5bb:	in     al,0xb8
  40d5bd:	xor    ecx,0x48
  40d5c0:	cmp    al,0x25
  40d5c2:	dec    esi
  40d5c3:	push   0xcd50f444
  40d5c8:	mov    ebx,0xad5e340a
  40d5cd:	test   BYTE PTR [edi-0x7a],ch
  40d5d0:	or     DWORD PTR ds:0xc6c45aa6,edx
  40d5d6:	add    eax,0xd1d3a1e8
  40d5db:	sar    DWORD PTR [esi+0x5c],1
  40d5de:	leave  
  40d5df:	jge    0x40d5a7
  40d5e1:	rcl    DWORD PTR [ebx+0x51],cl
  40d5e4:	add    esp,edi
  40d5e6:	xchg   ebp,eax
  40d5e7:	jecxz  0x40d5c0
  40d5e9:	loopne 0x40d5cd
  40d5eb:	mov    bh,0x76
  40d5ed:	lods   eax,DWORD PTR ds:[esi]
  40d5ee:	or     eax,DWORD PTR [eax-0x2a074f7f]
  40d5f4:	sub    esi,esi
  40d5f6:	daa    
  40d5f7:	sbb    DWORD PTR ds:0x9056a08a,esp
  40d5fd:	(bad)  
  40d5fe:	push   ds
  40d5ff:	cmp    BYTE PTR [eax+0x15],cl
  40d602:	push   cs
  40d603:	mov    edi,0x45a11366
  40d608:	inc    esi
  40d609:	das    
  40d60a:	dec    esp
  40d60b:	pop    eax
  40d60c:	and    al,BYTE PTR [edi+0x30]
  40d60f:	sbb    BYTE PTR [ecx],dh
  40d611:	scas   eax,DWORD PTR es:[edi]
  40d612:	push   edx
  40d613:	aaa    
  40d614:	inc    eax
  40d615:	les    esi,FWORD PTR [esi-0x7fbc6ce3]
  40d61b:	jl     0x40d65f
  40d61d:	sbb    bh,BYTE PTR [ecx-0x32]
  40d620:	xor    BYTE PTR [ebx-0x42],ch
  40d623:	push   esi
  40d624:	test   DWORD PTR [eax],0xe2e4c24c
  40d62a:	and    al,0xb3
  40d62c:	push   es
  40d62d:	mov    esi,0x4805eeb4
  40d632:	mov    ebx,0x8386a177
  40d637:	adc    al,0x79
  40d63a:	mov    esi,DWORD PTR [ebx]
  40d63c:	push   cs
  40d63d:	outs   dx,BYTE PTR ds:[esi]
  40d63e:	les    edi,FWORD PTR [ebp-0x2d]
  40d641:	test   DWORD PTR ds:0x856c5a11,edx
  40d647:	add    BYTE PTR [ecx-0x403b0cc3],al
  40d64d:	jmp    0x40d5da
  40d64f:	ds stc 
  40d651:	add    DWORD PTR [edi],eax
  40d653:	ret    
  40d654:	das    
  40d655:	lock out 0xc1,eax
  40d658:	repnz add DWORD PTR ds:[esi+eiz*8],0xffffffc4
  40d65e:	imul   ebp,DWORD PTR [ebx+eax*1+0x2b],0xffffffa2
  40d663:	mov    dh,0x71
  40d665:	mov    bh,0x27
  40d667:	call   0x3768cca9
  40d66c:	aaa    
  40d66d:	sbb    DWORD PTR [eax-0x5b08e009],esp
  40d673:	dec    ecx
  40d674:	icebp  
  40d675:	adc    eax,0x2394b797
  40d67a:	xchg   BYTE PTR [edi-0x1],bh
  40d67d:	repz ja 0x40d6da
  40d680:	lea    ecx,[eax+0x50c836a9]
  40d686:	inc    edi
  40d687:	test   BYTE PTR [ebx+eiz*1-0x4fa9c4f9],ah
  40d68e:	(bad)  
  40d68f:	cmc    
  40d690:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d692:	and    al,0x38
  40d694:	lds    ebp,FWORD PTR ds:0xf53a30ea
  40d69a:	push   edx
  40d69b:	fst    QWORD PTR [ebp-0xbb3e968]
  40d6a1:	fldenv [edi+0x4f53826d]
  40d6a7:	pop    edi
  40d6a8:	cwde   
  40d6a9:	adc    al,0x83
  40d6ab:	add    BYTE PTR [edi-0x2d2f2b26],ch
  40d6b1:	sub    ebx,0x7eec950f
  40d6b7:	stc    
  40d6b8:	aam    0xc1
  40d6ba:	and    ah,bh
  40d6bc:	add    eax,0x9750f617
  40d6c1:	retf   0x7edf
  40d6c4:	sti    
  40d6c5:	jmp    0x40d6a9
  40d6c7:	inc    esp
  40d6c8:	arpl   WORD PTR [ecx+ecx*8+0x63],si
  40d6cc:	pop    ds
  40d6cd:	(bad)  
  40d6ce:	mov    bl,0x90
  40d6d0:	xchg   ebx,eax
  40d6d1:	add    BYTE PTR [eax],cl
  40d6d3:	pop    ebp
  40d6d4:	icebp  
  40d6d5:	sub    esi,DWORD PTR [edi+0x2d]
  40d6d8:	gs sub dh,bl
  40d6db:	ror    BYTE PTR [edx],cl
  40d6dd:	leave  
  40d6de:	push   edx
  40d6df:	(bad)  
  40d6e0:	retf   
  40d6e1:	rol    bh,1
  40d6e3:	cmp    ecx,DWORD PTR ds:0xa467473a
  40d6e9:	popf   
  40d6ea:	pop    ebx
  40d6eb:	adc    eax,0x204d107d
  40d6f0:	add    al,0x5c
  40d6f2:	and    BYTE PTR [ebx-0x22],ch
  40d6f5:	mov    bl,0x9d
  40d6f7:	shl    DWORD PTR [edi],1
  40d6f9:	fnstcw WORD PTR [esi]
  40d6fb:	push   es
  40d6fc:	call   0x747d:0xc42f413c
  40d703:	loope  0x40d6c8
  40d705:	cli    
  40d706:	mov    ch,BYTE PTR [eax-0x7fd1bb49]
  40d70c:	cwde   
  40d70d:	dec    ebx
  40d70e:	mov    DWORD PTR [eax],0x5f7a8f81
  40d714:	rcl    ch,cl
  40d716:	leave  
  40d717:	push   es
  40d718:	lock enter 0x97e3,0xc1
  40d71d:	daa    
  40d71e:	push   ebp
  40d71f:	addr16 or al,0xa3
  40d722:	mov    eax,ds:0x5643ff79
  40d727:	xor    bl,BYTE PTR ds:0xe5137255
  40d72d:	xor    bh,BYTE PTR ds:0xef1820f5
  40d733:	enter  0x5dd5,0x44
  40d737:	sbb    BYTE PTR [ebx+0x70],0x0
  40d73b:	pop    es
  40d73c:	retf   
  40d73d:	jo     0x40d7a6
  40d73f:	or     ch,BYTE PTR [edx+ebx*8]
  40d742:	pusha  
  40d743:	sbb    dl,BYTE PTR [ecx]
  40d745:	xor    al,0xc6
  40d747:	pop    esp
  40d748:	jmp    0x40d72d
  40d74a:	xchg   ebx,eax
  40d74b:	mov    WORD PTR [ebp+edx*4+0x17d997ae],ss
  40d752:	lds    ebp,FWORD PTR [ebx]
  40d754:	inc    ebx
  40d755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d756:	rcl    DWORD PTR [ecx+0x10],1
  40d759:	imul   ebp,DWORD PTR [edi+0x39],0xad719eb4
  40d760:	jp     0x40d799
  40d762:	add    ah,BYTE PTR [edi+0x72af2861]
  40d768:	pop    ebx
  40d769:	jno    0x40d791
  40d76b:	outs   dx,BYTE PTR ds:[esi]
  40d76c:	cmp    BYTE PTR [ebp+0x3],cl
  40d76f:	test   al,0xe5
  40d771:	and    BYTE PTR [esi+eiz*1],cl
  40d774:	sub    eax,0x2cda5a74
  40d779:	push   eax
  40d77a:	adc    DWORD PTR [ecx+ebp*4],0x7d797bf5
  40d781:	xlat   BYTE PTR ds:[ebx]
  40d782:	test   al,0x9b
  40d784:	scas   al,BYTE PTR es:[edi]
  40d785:	outs   dx,DWORD PTR ds:[esi]
  40d786:	jnp    0x40d7f6
  40d788:	adc    ch,cl
  40d78a:	adc    eax,0x999e2488
  40d78f:	xlat   BYTE PTR ds:[ebx]
  40d790:	jbe    0x40d764
  40d792:	inc    ebx
  40d793:	xchg   ebp,eax
  40d794:	xchg   edi,eax
  40d795:	inc    ecx
  40d796:	std    
  40d797:	sbb    DWORD PTR [ebx+0x4d],edi
  40d79a:	test   eax,0x5c9a29fb
  40d79f:	sbb    edi,DWORD PTR [esi]
  40d7a1:	pop    ecx
  40d7a2:	fidivr WORD PTR [eax+0x71]
  40d7a5:	sbb    al,0xd6
  40d7a7:	bound  edx,QWORD PTR [ecx]
  40d7a9:	dec    DWORD PTR [edi-0x19]
  40d7ac:	adc    BYTE PTR [ebp+0x20ee38f8],bl
  40d7b2:	sub    BYTE PTR [eax-0x21],al
  40d7b5:	lea    ebx,[eax+ebp*2-0x3]
  40d7b9:	call   0xccbd:0x6e48c2f0
  40d7c0:	mov    DWORD PTR [edi],edi
  40d7c2:	xor    al,0xf9
  40d7c4:	daa    
  40d7c5:	aas    
  40d7c6:	push   ebp
  40d7c7:	pop    esi
  40d7c8:	fs in  al,0xcc
  40d7cb:	in     eax,dx
  40d7cc:	fld    DWORD PTR [eax+ebx*1]
  40d7cf:	in     al,dx
  40d7d0:	call   0x34b0:0x863c8b87
  40d7d7:	push   es
  40d7d8:	ret    
  40d7d9:	dec    eax
  40d7da:	add    al,BYTE PTR [edi-0x65]
  40d7dd:	pop    esp
  40d7de:	pop    eax
  40d7df:	pop    ecx
  40d7e0:	aam    0xe6
  40d7e2:	pop    ss
  40d7e3:	lods   al,BYTE PTR ds:[esi]
  40d7e4:	and    cl,bl
  40d7e6:	sahf   
  40d7e7:	js     0x40d864
  40d7e9:	adc    al,0x9b
  40d7eb:	jle    0x40d790
  40d7ed:	dec    edi
  40d7ee:	or     cl,bl
  40d7f0:	adc    ecx,DWORD PTR [ebx]
  40d7f2:	and    esp,DWORD PTR [ebx-0x7]
  40d7f5:	and    bl,BYTE PTR [ebx]
  40d7f7:	imul   DWORD PTR [eax+esi*4+0x1cc0a73e]
  40d7fe:	jno    0x40d7fd
  40d800:	cmp    eax,0xe3a41333
  40d805:	iret   
  40d806:	inc    BYTE PTR [ebx-0x31]
  40d809:	pop    ebp
  40d80a:	cdq    
  40d80b:	enter  0x830c,0x1b
  40d80f:	scas   al,BYTE PTR es:[edi]
  40d810:	or     cl,BYTE PTR [edx+0x4a6b3a92]
  40d816:	das    
  40d817:	(bad)  
  40d818:	jns    0x40d837
  40d81a:	sbb    eax,0x847daa2f
  40d81f:	in     eax,dx
  40d820:	sti    
  40d821:	or     DWORD PTR [ebx-0x7e],0xa745036
  40d828:	dec    esi
  40d829:	and    esp,DWORD PTR [eax+0x39]
  40d82c:	fiadd  DWORD PTR [esi-0x1e]
  40d82f:	mov    bh,0x9
  40d831:	pop    ebp
  40d832:	lock neg BYTE PTR [esi+eax*1]
  40d836:	cwde   
  40d837:	inc    eax
  40d838:	cld    
  40d839:	inc    edi
  40d83a:	xor    al,0x6
  40d83c:	dec    esp
  40d83d:	jmp    0xc31a:0x2ce60e4c
  40d844:	push   ebp
  40d845:	jmp    0x45ffba43
  40d84a:	sar    DWORD PTR [ebp+0x17],cl
  40d84d:	test   eax,0x1b45832b
  40d852:	mov    ds:0xe3fe7a95,eax
  40d857:	and    BYTE PTR [edx],cl
  40d859:	or     al,0xa7
  40d85b:	imul   esp,DWORD PTR [edi+eax*8],0x695809db
  40d862:	icebp  
  40d863:	out    dx,eax
  40d864:	inc    ebp
  40d865:	nop    DWORD PTR ds:0xb207de02
  40d86c:	fstp   QWORD PTR [ecx-0x5093d4de]
  40d872:	push   edx
  40d873:	xor    BYTE PTR [eax-0x7d],dh
  40d876:	mov    eax,ds:0x4167542c
  40d87b:	and    al,0x69
  40d87d:	or     eax,0x93bd8fd0
  40d882:	jno    0x40d806
  40d884:	cmp    eax,DWORD PTR [ecx]
  40d886:	adc    ebx,esp
  40d888:	in     eax,0x5d
  40d88a:	push   ebp
  40d88b:	inc    ebx
  40d88c:	and    eax,0xc7f4e753
  40d891:	mov    al,ds:0xac333d11
  40d896:	mov    al,0x44
  40d898:	(bad)  
  40d899:	fsubp  st(0),st
  40d89b:	out    dx,al
  40d89c:	xor    BYTE PTR [eax],dh
  40d89e:	pop    ecx
  40d89f:	push   ss
  40d8a0:	sub    ah,BYTE PTR [ebp-0x3c]
  40d8a3:	sbb    DWORD PTR [ecx+0x682e643e],0xffffff8b
  40d8aa:	and    dh,dl
  40d8ac:	sahf   
  40d8ad:	cmp    esi,DWORD PTR [edi]
  40d8af:	push   cs
  40d8b0:	(bad)  
  40d8b1:	hlt    
  40d8b2:	or     eax,0x1684cae3
  40d8b7:	sub    ebx,DWORD PTR [edx]
  40d8b9:	mov    DWORD PTR [esi-0x1e42cae1],ebx
  40d8bf:	mov    esi,0xe9403788
  40d8c4:	shr    edi,1
  40d8c6:	xchg   ecx,eax
  40d8c7:	and    dl,BYTE PTR [ecx+0x6ba69864]
  40d8cd:	ror    BYTE PTR [ebx-0x59],0x9f
  40d8d1:	mov    edi,DWORD PTR [ebx-0x567ddb54]
  40d8d7:	mov    ebx,0x586d0a7b
  40d8dc:	mov    WORD PTR [ebp+0x4057b804],ss
  40d8e2:	nop
  40d8e3:	frstor [edi+0x4e]
  40d8e6:	stos   BYTE PTR es:[edi],al
  40d8e7:	dec    ecx
  40d8e8:	mov    bl,0x70
  40d8ea:	int3   
  40d8eb:	add    BYTE PTR [edx-0x29],ch
  40d8ee:	sbb    bh,al
  40d8f0:	std    
  40d8f1:	push   ebp
  40d8f2:	int3   
  40d8f3:	pop    ss
  40d8f4:	xchg   edx,eax
  40d8f5:	xor    eax,ebp
  40d8f7:	cmp    DWORD PTR [ebp-0x7ba945a2],ecx
  40d8fd:	ror    DWORD PTR [ebx+0x22],1
  40d900:	ins    BYTE PTR es:[edi],dx
  40d901:	dec    esi
  40d902:	sub    BYTE PTR [edi+esi*8+0x7c20c0fe],dl
  40d909:	push   edi
  40d90a:	js     0x40d8d4
  40d90c:	push   es
  40d90d:	ins    DWORD PTR es:[edi],dx
  40d90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90f:	and    dl,BYTE PTR [edx+0x4c]
  40d912:	ins    BYTE PTR es:[edi],dx
  40d913:	lea    edx,[edi]
  40d915:	add    eax,0x4be8a3b6
  40d91a:	mov    ch,0xc5
  40d91c:	xor    edi,ebx
  40d91e:	mov    esp,0xfae26e7
  40d923:	dec    edi
  40d924:	adc    al,0x7f
  40d926:	imul   edi,DWORD PTR [esi+0x8989c8e],0x7c6591d9
  40d930:	lahf   
  40d931:	out    dx,eax
  40d932:	imul   ecx,DWORD PTR [ebx+0x42],0x34
  40d936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d937:	test   DWORD PTR [ebx-0x5d],0x8055680f
  40d93e:	test   DWORD PTR [ecx-0x18],0x636a1c50
  40d945:	lea    ecx,[ebp-0x399b2188]
  40d94b:	jg     0x40d950
  40d94d:	fist   DWORD PTR [ecx-0x4d]
  40d950:	dec    ebx
  40d951:	aad    0xa7
  40d953:	dec    ebp
  40d954:	or     BYTE PTR [ecx-0x5e57d8e0],dh
  40d95a:	sub    eax,0xb063b86f
  40d95f:	push   esi
  40d960:	mov    al,0xd5
  40d962:	dec    eax
  40d963:	in     al,0x96
  40d965:	xchg   esp,eax
  40d966:	jge    0x40d993
  40d968:	and    al,0x37
  40d96a:	pusha  
  40d96b:	ins    DWORD PTR es:[edi],dx
  40d96c:	ins    BYTE PTR es:[edi],dx
  40d96d:	jns    0x40d919
  40d96f:	add    BYTE PTR [ebp+eax*1-0x5f8a5fdf],ch
  40d976:	jge    0x40d9a1
  40d978:	mov    eax,0x8722929b
  40d97d:	xchg   ebp,eax
  40d97e:	mov    WORD PTR [ebp-0x76],fs
  40d981:	fdivp  st(2),st
  40d983:	inc    ecx
  40d984:	stc    
  40d985:	test   esi,edx
  40d987:	jle    0x40d9da
  40d989:	bound  ebx,QWORD PTR [edx-0x11]
  40d98c:	mov    cl,0xae
  40d98e:	aaa    
  40d98f:	mov    cs,edx
  40d991:	mov    edx,0xd5788ea3
  40d996:	(bad)  
  40d997:	jne    0x40d9fe
  40d999:	out    0x8c,al
  40d99b:	ins    DWORD PTR es:[edi],dx
  40d99c:	pop    edi
  40d99d:	mov    dl,BYTE PTR [edi+0x67]
  40d9a0:	sbb    al,0x27
  40d9a2:	popf   
  40d9a3:	cmp    DWORD PTR [eax+0x29],ebx
  40d9a6:	loop   0x40d93f
  40d9a8:	or     edi,DWORD PTR [ecx-0x17]
  40d9ab:	loop   0x40d978
  40d9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ae:	(bad)  
  40d9af:	mov    ebx,0x5b073cf9
  40d9b4:	or     dh,BYTE PTR [eax-0x6d]
  40d9b7:	rol    eax,0x39
  40d9ba:	mov    dl,0x3d
  40d9bc:	pop    ecx
  40d9bd:	dec    edi
  40d9be:	leave  
  40d9bf:	add    DWORD PTR [ebx],eax
  40d9c1:	mov    esi,0xd57d34d1
  40d9c6:	std    
  40d9c7:	adc    DWORD PTR [edi-0x24],ecx
  40d9ca:	push   0xffffff83
  40d9cc:	mov    edi,0xadb10736
  40d9d1:	leave  
  40d9d2:	and    eax,0x648f1e1
  40d9d7:	adc    al,0xfd
  40d9d9:	cdq    
  40d9da:	mov    ebp,0x3b464613
  40d9df:	add    bh,BYTE PTR [edi]
  40d9e1:	jns    0x40da21
  40d9e3:	xor    al,0x46
  40d9e5:	fiadd  WORD PTR [edi+0x75]
  40d9e8:	push   esp
  40d9e9:	cwde   
  40d9ea:	stos   DWORD PTR es:[edi],eax
  40d9eb:	mov    dl,0xec
  40d9ee:	xor    eax,0xd6f0d850
  40d9f3:	fsub   QWORD PTR [ebp+0x2a]
  40d9f6:	mov    al,0x85
  40d9f8:	push   cs
  40d9f9:	call   0xa9ba:0x65dbfaee
  40da00:	or     BYTE PTR [edi+0x2d10565b],0xfb
  40da07:	jno    0x40d9bf
  40da09:	and    al,0xd1
  40da0b:	shl    BYTE PTR [ebx],cl
  40da0d:	sar    DWORD PTR cs:[eax-0xb45fa1d],cl
  40da14:	mov    ecx,DWORD PTR [ebp-0x2345660]
  40da1a:	stos   BYTE PTR es:[edi],al
  40da1b:	outs   dx,BYTE PTR ds:[esi]
  40da1c:	aas    
  40da1d:	inc    esp
  40da1e:	test   BYTE PTR [esi-0x71],ch
  40da21:	inc    ebx
  40da22:	xor    eax,eax
  40da24:	test   eax,0x9209adf0
  40da29:	adc    eax,0x3c84f4b5
  40da2e:	pop    edx
  40da2f:	xchg   edx,eax
  40da30:	ss inc edx
  40da32:	mov    ebx,0xc643356a
  40da37:	in     al,dx
  40da38:	xor    DWORD PTR [edx-0x66abbdf2],esi
  40da3e:	mov    ebx,0x69f6e1a5
  40da43:	sbb    edi,esp
  40da45:	xchg   ecx,eax
  40da46:	push   0xff057592
  40da4b:	mov    esp,gs
  40da4d:	cmp    al,0x48
  40da4f:	in     al,0xab
  40da51:	bound  esi,QWORD PTR [ebx+0x51d40a5d]
  40da57:	push   es
  40da58:	jecxz  0x40da2b
  40da5a:	inc    esi
  40da5b:	or     eax,0x4f33855
  40da60:	mov    ds:0x9654b6d9,eax
  40da65:	leave  
  40da66:	pop    esp
  40da67:	lock mov eax,DWORD PTR [edi-0x54f68a73]
  40da6e:	out    dx,eax
  40da6f:	push   eax
  40da70:	aad    0x1e
  40da72:	xor    DWORD PTR [edx],eax
  40da74:	out    0x72,al
  40da76:	mov    bl,0x56
  40da78:	jae    0x40da79
  40da7a:	sub    DWORD PTR [ebx],esi
  40da7c:	add    edi,DWORD PTR [esi+eiz*2-0x62]
  40da80:	imul   ebx,DWORD PTR [esi],0x2a
  40da83:	xchg   ebx,eax
  40da84:	cdq    
  40da85:	pop    eax
  40da86:	inc    esp
  40da87:	arpl   WORD PTR [esi],sp
  40da89:	sbb    al,0x8e
  40da8b:	mov    DWORD PTR [edi+edx*4+0x3a],edi
  40da8f:	xchg   ebp,eax
  40da90:	pop    es
  40da91:	push   esi
  40da92:	pop    ecx
  40da93:	sub    al,BYTE PTR [esi+0x40b33186]
  40da99:	call   0x48a4:0x99c7d666
  40daa0:	mov    WORD PTR [ecx+eiz*4+0x78c972ed],ss
  40daa7:	pushf  
  40daa8:	mov    ecx,0xd78bb1c1
  40daad:	pop    ss
  40daae:	and    eax,DWORD PTR [esi+ecx*8-0x14]
  40dab2:	jmp    0x40da7c
  40dab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab5:	sub    al,0xa7
  40dab7:	out    dx,eax
  40dab8:	or     DWORD PTR [eax+0x49],edi
  40dabb:	and    bl,bh
  40dabd:	(bad)  
  40dabe:	(bad)  
  40dabf:	out    dx,eax
  40dac0:	sub    eax,0x54853a17
  40dac5:	jge    0x40da51
  40dac7:	and    ah,BYTE PTR [ecx+0x6bf6f417]
  40dacd:	mov    edi,0xc624f382
  40dad2:	xor    DWORD PTR [esp+ecx*2+0x630c12d4],eax
  40dad9:	fmul   st(0),st
  40dadb:	cwde   
  40dadc:	ret    
  40dadd:	bound  edi,QWORD PTR [eax+0x59bfd136]
  40dae3:	rcl    DWORD PTR [edx-0x25348eea],cl
  40dae9:	or     edi,DWORD PTR [edx-0x22]
  40daec:	jmp    0x40dafb
  40daee:	cmp    ch,BYTE PTR [eax-0x2b5365c1]
  40daf4:	jae    0x40da81
  40daf6:	out    0x47,eax
  40daf8:	cmp    DWORD PTR [esi+0x50df29db],ebx
  40dafe:	xchg   ebp,eax
  40daff:	mov    WORD PTR [edi+0x6d],cs
  40db02:	std    
  40db03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db04:	imul   DWORD PTR [ebp+0xd]
  40db07:	loop   0x40db78
  40db09:	lds    edx,FWORD PTR ds:0x8af2a19f
  40db0f:	or     ch,BYTE PTR [ebx]
  40db11:	dec    edx
  40db12:	push   esp
  40db13:	jae    0x40db16
  40db15:	sbb    eax,0xc945cf08
  40db1a:	sbb    esi,DWORD PTR [ebx]
  40db1c:	dec    esi
  40db1d:	stc    
  40db1e:	cld    
  40db1f:	xchg   ebx,eax
  40db20:	ins    BYTE PTR es:[edi],dx
  40db21:	cdq    
  40db22:	sub    ebp,DWORD PTR [eax+0x45]
  40db25:	jp     0x40db9f
  40db27:	sub    DWORD PTR [eax],ebp
  40db29:	call   0x9a67:0xe154fb1a
  40db30:	jns    0x40db02
  40db32:	add    DWORD PTR [ebx+0x649058d0],ebx
  40db38:	xchg   edi,eax
  40db39:	cmp    al,0x1b
  40db3b:	push   edi
  40db3c:	push   esi
  40db3d:	lock adc eax,ebp
  40db40:	stos   DWORD PTR es:[edi],eax
  40db41:	cmp    al,0x7
  40db43:	neg    DWORD PTR [edx+eiz*1]
  40db46:	in     al,0xd1
  40db48:	mov    cs,WORD PTR [edi+ebx*8-0x53df1c20]
  40db4f:	add    esi,0xffffffc7
  40db52:	jnp    0x40dba7
  40db54:	std    
  40db55:	lahf   
  40db56:	inc    ecx
  40db57:	fadd   QWORD PTR [edx-0x46]
  40db5a:	fistp  DWORD PTR [ecx-0x53]
  40db5d:	iret   
  40db5e:	xor    esi,esi
  40db60:	push   cs
  40db61:	stc    
  40db62:	jne    0x40dbbd
  40db64:	dec    ebp
  40db65:	jo     0x40db38
  40db67:	sub    al,0x51
  40db69:	icebp  
  40db6a:	mov    ds:0x54394787,eax
  40db6f:	fisubr DWORD PTR [edx-0x7268a138]
  40db75:	mov    esp,0xd1f628d7
  40db7a:	mov    ecx,0x8a7c019d
  40db7f:	clc    
  40db80:	jno    0x40dbbe
  40db82:	leave  
  40db83:	push   ebp
  40db84:	xor    esp,DWORD PTR [ecx-0x4fdc4ab7]
  40db8a:	(bad)  
  40db8b:	and    ecx,esi
  40db8d:	xor    eax,DWORD PTR [edx]
  40db8f:	data16 loope 0x40db54
  40db92:	test   DWORD PTR [ecx+ebp*4-0x72a7f44d],eax
  40db99:	leave  
  40db9a:	sbb    al,0xd7
  40db9c:	loopne 0x40dbc6
  40db9e:	je     0x40db43
  40dba0:	mov    edx,DWORD PTR [edx+0x77c44861]
  40dba6:	or     edi,DWORD PTR [ecx-0x1ad01225]
  40dbac:	loop   0x40db73
  40dbae:	or     DWORD PTR [edi-0x8ac5410],0xffffffb8
  40dbb5:	inc    ebp
  40dbb6:	dec    ebx
  40dbb7:	rcr    DWORD PTR [eax-0x1c327bcf],0x49
  40dbbe:	jmp    0x40dbb7
  40dbc0:	sub    BYTE PTR [ebp-0x44],al
  40dbc3:	cdq    
  40dbc4:	and    eax,0x88dad0f3
  40dbc9:	fs jbe 0x40dbe7
  40dbcc:	lea    esi,[ebp-0x1d55b60c]
  40dbd2:	inc    ecx
  40dbd3:	cdq    
  40dbd4:	fsub   DWORD PTR [edi+0x1b89a0eb]
  40dbda:	sub    eax,0x6bbc43c3
  40dbdf:	xchg   ebp,eax
  40dbe0:	jge    0x40dbfe
  40dbe2:	pop    ebp
  40dbe3:	ror    DWORD PTR [ebp+0x38],1
  40dbe6:	and    al,0xc9
  40dbe8:	pop    ebp
  40dbe9:	shl    BYTE PTR [ecx-0x2236f996],cl
  40dbef:	xchg   ebp,eax
  40dbf0:	adc    al,0xd6
  40dbf2:	pop    eax
  40dbf3:	mov    bh,ah
  40dbf5:	int3   
  40dbf6:	rcl    DWORD PTR [edx],0x71
  40dbf9:	inc    eax
  40dbfa:	sbb    eax,DWORD PTR [edi]
  40dbfc:	rol    DWORD PTR [ebp+0x41],0x50
  40dc00:	test   eax,0x36e6a110
  40dc05:	jecxz  0x40dbee
  40dc07:	jp     0x40dc3a
  40dc09:	loop   0x40dc56
  40dc0b:	popa   
  40dc0c:	loope  0x40dc5f
  40dc0e:	cli    
  40dc0f:	aad    0xf3
  40dc11:	ss iret 
  40dc13:	sti    
  40dc14:	sub    al,0x73
  40dc16:	xchg   edi,eax
  40dc17:	or     al,0x53
  40dc19:	loopne 0x40dbbe
  40dc1b:	sub    DWORD PTR [eax+0x7cbc2627],esp
  40dc21:	and    al,0x51
  40dc23:	pushf  
  40dc24:	add    ch,BYTE PTR [ecx-0x1c]
  40dc27:	mov    al,ds:0x421fb8d7
  40dc2c:	mov    BYTE PTR [ecx+ebx*2+0x65],dh
  40dc30:	(bad)  
  40dc31:	sbb    eax,0x486b2034
  40dc36:	fwait
  40dc37:	neg    BYTE PTR [edx+0x6053bf34]
  40dc3d:	cvtps2pd xmm0,QWORD PTR [ebx+0x7cbca163]
  40dc44:	jecxz  0x40dc1f
  40dc46:	call   0xce59:0x45b1b0a0
  40dc4d:	xor    al,0xf2
  40dc4f:	push   esp
  40dc51:	jnp    0x40dcb6
  40dc53:	cmc    
  40dc54:	inc    DWORD PTR ds:0xf0d99568
  40dc5a:	lds    ebx,FWORD PTR es:[esi+edx*4]
  40dc5e:	fstp   TBYTE PTR [ebx+0x52]
  40dc61:	sti    
  40dc62:	jmp    0x40dc22
  40dc64:	fwait
  40dc65:	adc    DWORD PTR [esi+0x182de56e],edi
  40dc6b:	cwde   
  40dc6c:	mov    esi,?
  40dc6e:	inc    esp
  40dc6f:	cmp    DWORD PTR [eax+0x64ceab94],edx
  40dc75:	ins    BYTE PTR es:[edi],dx
  40dc76:	push   eax
  40dc77:	ds sub eax,0xa04e63e5
  40dc7d:	cmp    eax,0xc84fa5f2
  40dc82:	inc    esp
  40dc83:	imul   BYTE PTR [edx+0x39]
  40dc86:	push   esp
  40dc87:	push   0xffffffc3
  40dc89:	and    eax,0x7cf32c23
  40dc8e:	dec    ecx
  40dc8f:	sub    eax,0x448caf4a
  40dc94:	inc    eax
  40dc95:	mov    dl,0x62
  40dc97:	(bad)  
  40dc98:	call   DWORD PTR [edi+eiz*2+0x5fba8f31]
  40dc9f:	and    al,0x78
  40dca1:	call   0x8287f79
  40dca6:	mov    esp,0x7c718710
  40dcab:	icebp  
  40dcac:	xchg   ecx,eax
  40dcad:	mov    DWORD PTR [ecx-0xa],ebp
  40dcb0:	div    DWORD PTR [ebx]
  40dcb2:	dec    esi
  40dcb3:	add    al,0x2b
  40dcb5:	aam    0x14
  40dcb7:	xor    bh,BYTE PTR gs:[eax]
  40dcba:	jb     0x40dd1a
  40dcbc:	cmp    ah,dh
  40dcbe:	add    al,0x1a
  40dcc0:	fwait
  40dcc1:	cs pop esi
  40dcc3:	lock push ecx
  40dcc5:	lods   eax,DWORD PTR ds:[esi]
  40dcc6:	mov    ecx,0x4bf4fda4
  40dccb:	mov    eax,ds:0x3a8b7b4e
  40dcd0:	cmp    esp,DWORD PTR [ecx-0x74]
  40dcd3:	pop    ss
  40dcd4:	ret    0x5022
  40dcd7:	xchg   DWORD PTR [eax+eax*8],ebx
  40dcda:	fisubr DWORD PTR [ebx]
  40dcdc:	add    al,0xd4
  40dcde:	inc    esp
  40dcdf:	add    al,0x4e
  40dce1:	fidivr WORD PTR [ebx]
  40dce3:	jns    0x40dca8
  40dce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce6:	ret    
  40dce7:	push   esi
  40dce8:	add    eax,0x35c65b39
  40dced:	lods   al,BYTE PTR ds:[esi]
  40dcee:	xlat   BYTE PTR ds:[ebx]
  40dcef:	push   ebx
  40dcf0:	or     eax,DWORD PTR [edx+0x4f]
  40dcf3:	dec    esp
  40dcf4:	mov    ebx,DWORD PTR [ebx]
  40dcf6:	sti    
  40dcf7:	out    0xa4,al
  40dcf9:	daa    
  40dcfa:	push   cs
  40dcfb:	jge    0x40dcdd
  40dcfd:	in     al,0x4e
  40dcff:	mov    edi,0x7b8bb9e2
  40dd04:	xor    al,0xdb
  40dd06:	fdiv   QWORD PTR [esi]
  40dd08:	sbb    BYTE PTR [ebp+0x1b],ah
  40dd0b:	xchg   ebx,eax
  40dd0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd0d:	imul   BYTE PTR [eax+0x254d659b]
  40dd13:	scas   al,BYTE PTR es:[edi]
  40dd14:	enter  0x2d4d,0xe5
  40dd18:	xor    cl,BYTE PTR [ebp+0x52fe58ba]
  40dd1e:	dec    BYTE PTR [ebx+0x15]
  40dd21:	faddp  st(7),st
  40dd23:	rcr    bl,cl
  40dd25:	mov    BYTE PTR [eax],cl
  40dd27:	lds    edx,FWORD PTR [eax+0x4ddafac]
  40dd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2e:	mov    bl,0xc6
  40dd30:	(bad)  
  40dd31:	mov    edi,0x7b916c59
  40dd36:	mov    dl,0xda
  40dd38:	xchg   esp,eax
  40dd39:	jge    0x40dcf9
  40dd3b:	mov    bl,0xfb
  40dd3d:	sub    al,0xb8
  40dd3f:	and    BYTE PTR [ecx-0x4d90278f],bh
  40dd45:	rcl    BYTE PTR [ebp-0x7],cl
  40dd48:	xchg   ebx,eax
  40dd49:	inc    edi
  40dd4a:	aas    
  40dd4b:	call   0x6475:0xd85dd133
  40dd52:	(bad)  
  40dd53:	fmul   QWORD PTR [ecx-0x72]
  40dd56:	xor    ch,BYTE PTR [edx-0x7a]
  40dd59:	add    edx,DWORD PTR [eax+0x675725b6]
  40dd5f:	sbb    al,0x49
  40dd61:	mov    ah,0x14
  40dd63:	clc    
  40dd64:	dec    esp
  40dd65:	call   0x48f0:0xf9f179bf
  40dd6c:	sbb    eax,DWORD PTR ds:0xbf25bad1
  40dd72:	inc    esp
  40dd73:	stos   BYTE PTR es:[edi],al
  40dd74:	or     edx,ebx
  40dd76:	push   0x79
  40dd78:	pop    es
  40dd79:	imul   esp,edx,0x27
  40dd7c:	inc    DWORD PTR [esi-0x152104de]
  40dd82:	ds mov dh,0xe7
  40dd85:	sub    al,0x4b
  40dd87:	in     eax,dx
  40dd88:	mov    ebx,0x35bc625c
  40dd8d:	jp     0x40dd50
  40dd8f:	retf   0xc4e8
  40dd92:	sbb    dl,BYTE PTR [edx+0x2ca7ed7d]
  40dd98:	inc    edi
  40dd99:	cmp    al,0x60
  40dd9b:	lahf   
  40dd9c:	fisubr DWORD PTR [edx+0x48]
  40dd9f:	jbe    0x40de10
  40dda1:	cwde   
  40dda2:	push   cx
  40dda4:	pop    ds
  40dda5:	jne    0x40de00
  40dda7:	cmp    al,0x63
  40dda9:	push   cs
  40ddaa:	cld    
  40ddab:	or     edi,DWORD PTR [ebx-0xf]
  40ddae:	sub    esi,edi
  40ddb0:	sub    dl,0x90
  40ddb3:	xor    BYTE PTR [eax],bh
  40ddb5:	dec    edi
  40ddb6:	and    eax,DWORD PTR [esi-0xe7e6421]
  40ddbc:	push   ecx
  40ddbd:	dec    ebx
  40ddbe:	jno    0x40de26
  40ddc0:	ins    DWORD PTR es:[edi],dx
  40ddc1:	in     eax,0xf7
  40ddc3:	jnp    0x40ddcb
  40ddc5:	inc    eax
  40ddc6:	add    al,0xb7
  40ddc8:	mov    WORD PTR [ebx-0x80],ds
  40ddcb:	icebp  
  40ddcc:	push   ds
  40ddcd:	shl    dl,0x8e
  40ddd0:	and    al,0x39
  40ddd2:	sbb    eax,0x35ddecee
  40ddd7:	mov    bh,0xdb
  40ddd9:	push   es
  40ddda:	aaa    
  40dddb:	add    dl,bl
  40dddd:	xchg   ebp,eax
  40ddde:	mov    dh,0x95
  40dde0:	(bad)  
  40dde1:	fwait
  40dde2:	(bad)  
  40dde3:	pop    ebp
  40dde4:	or     ah,ch
  40dde6:	lds    esi,FWORD PTR ds:[edx]
  40dde9:	sub    edx,DWORD PTR [ebx+edx*2+0x6364f397]
  40ddf0:	mov    ?,WORD PTR [esp+esi*8-0x1f9d0793]
  40ddf7:	stos   BYTE PTR es:[edi],al
  40ddf8:	dec    ebp
  40ddf9:	cmp    DWORD PTR [ebp+0x7e2a7b49],esi
  40ddff:	pop    edx
  40de00:	xchg   ebx,eax
  40de01:	adc    BYTE PTR [edx+0x73],dh
  40de04:	sub    eax,0xddf98e16
  40de09:	push   0x13
  40de0b:	push   esi
  40de0c:	ds fs mov di,0x7938
  40de12:	jle    0x40ddde
  40de14:	les    edi,FWORD PTR [edx+0xe]
  40de17:	jecxz  0x40de19
  40de19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de1a:	in     eax,dx
  40de1b:	dec    ecx
  40de1c:	stc    
  40de1d:	loop   0x40dda9
  40de1f:	cwde   
  40de20:	mov    al,0x4b
  40de22:	sub    BYTE PTR [eax-0x10],al
  40de25:	jnp    0x40ddcf
  40de27:	add    edi,esp
  40de29:	sbb    BYTE PTR [esi+0x30],bl
  40de2c:	add    al,0x4d
  40de2e:	sbb    eax,0xf53c145
  40de33:	add    ebp,DWORD PTR [ecx]
  40de35:	in     al,0x1b
  40de37:	inc    eax
  40de38:	retf   0xaede
  40de3b:	pop    ebx
  40de3c:	fcmovne st,st(1)
  40de3e:	cwde   
  40de3f:	mov    eax,DWORD PTR [edx-0x7e]
  40de42:	mov    DWORD PTR [edx+0x6a96ad88],eax
  40de48:	and    al,0xc4
  40de4a:	or     eax,0x57a89d83
  40de4f:	neg    BYTE PTR [ebx+0x4b25728f]
  40de55:	inc    eax
  40de56:	inc    esp
  40de57:	into   
  40de58:	inc    ebx
  40de59:	cmp    DWORD PTR [esi],edi
  40de5b:	adc    eax,0x6bdf8d74
  40de60:	scas   eax,DWORD PTR es:[edi]
  40de61:	jae    0x40de1b
  40de63:	jp     0x40de95
  40de65:	test   esp,eax
  40de67:	(bad)  
  40de69:	xchg   edx,eax
  40de6a:	xrelease xchg BYTE PTR [ebx+0x4d],cl
  40de6e:	ss mov gs,esp
  40de71:	cmp    BYTE PTR [ebx],0xf5
  40de74:	rol    DWORD PTR ds:0x79981d39,cl
  40de7a:	push   edx
  40de7b:	xor    al,0x25
  40de7d:	mov    ebp,0x4dcc84d6
  40de82:	or     eax,0xf7eddc60
  40de87:	sub    DWORD PTR [ebp+0x7e],esp
  40de8a:	sub    al,0xb0
  40de8c:	add    DWORD PTR [ebx-0x2a7dcd50],eax
  40de92:	jbe    0x40de3a
  40de94:	test   eax,0x817cf43f
  40de99:	clc    
  40de9a:	lea    ebp,[ecx-0x3d]
  40de9d:	mov    ah,0xf5
  40de9f:	and    DWORD PTR ds:0xc3cdb37c,edx
  40dea5:	mov    bl,0x12
  40dea7:	dec    eax
  40dea8:	rcr    DWORD PTR [ebp-0x5ee0cbed],cl
  40deae:	(bad)  
  40deb0:	aaa    
  40deb1:	ror    ah,cl
  40deb3:	scas   eax,DWORD PTR es:[edi]
  40deb4:	and    BYTE PTR [esi],bl
  40deb6:	mov    bh,0x68
  40deb8:	imul   eax,DWORD PTR [bp+di],0x57
  40debc:	cmp    BYTE PTR [edx+0x3e7a8d53],bh
  40dec2:	mov    ebp,DWORD PTR [esi+0x689cc8f8]
  40dec8:	cdq    
  40dec9:	dec    edi
  40deca:	pop    ecx
  40decb:	in     al,0x66
  40decd:	xchg   esp,eax
  40dece:	mov    eax,0x4514f08
  40ded3:	and    eax,0x73345d6d
  40ded8:	popa   
  40ded9:	sbb    edi,ebx
  40dedb:	or     al,0x85
  40dedd:	and    ecx,DWORD PTR [eax]
  40dedf:	jae    0x40decc
  40dee1:	lahf   
  40dee2:	call   0x5413:0xb9181be0
  40dee9:	dec    esp
  40deea:	in     al,dx
  40deeb:	xor    BYTE PTR [eax+ecx*2],dl
  40deee:	push   ebp
  40deef:	or     ebp,DWORD PTR [esi-0x59]
  40def2:	dec    ebx
  40def3:	lods   eax,DWORD PTR ds:[esi]
  40def4:	(bad)  
  40def5:	fidiv  DWORD PTR [ecx-0x77bed761]
  40defb:	aam    0x44
  40defd:	sbb    dh,BYTE PTR [eax-0x1b8bc474]
  40df03:	(bad)  
  40df04:	mov    eax,0x6c92e397
  40df09:	mov    ds:0x453416d8,eax
  40df0e:	pop    ss
  40df0f:	xchg   ebp,eax
  40df10:	aaa    
  40df11:	pop    edi
  40df12:	daa    
  40df13:	push   0xf5afeaed
  40df18:	out    0x70,al
  40df1a:	push   0xffffffc5
  40df1c:	and    dh,BYTE PTR [edi+0x42e1276f]
  40df22:	xchg   esp,eax
  40df23:	jb     0x40deb7
  40df25:	fs jmp 0x40df86
  40df28:	(bad)  
  40df29:	jl     0x40ded1
  40df2b:	shl    DWORD PTR [eax-0x6ca2bc2b],cl
  40df31:	in     eax,0x8a
  40df33:	xor    al,0xad
  40df35:	sbb    bh,BYTE PTR [ecx+0x6cb8ee73]
  40df3b:	push   edi
  40df3c:	retf   
  40df3d:	xor    DWORD PTR [ebx-0xe821c66],ebx
  40df43:	dec    eax
  40df44:	ror    esi,1
  40df46:	test   eax,0x6956ac14
  40df4b:	dec    esp
  40df4c:	arpl   WORD PTR [esi-0x180f84db],dx
  40df52:	arpl   WORD PTR [eax],dx
  40df54:	jmp    0x2c24:0xa14df490
  40df5b:	call   0x565:0x6d9f2d7a
  40df62:	adc    al,0xdc
  40df64:	aam    0xfe
  40df66:	retf   
  40df67:	jle    0x40dfa4
  40df69:	ret    
  40df6a:	lods   al,BYTE PTR ds:[esi]
  40df6b:	in     al,dx
  40df6c:	adc    DWORD PTR [edx-0x5d],eax
  40df6f:	pop    ebx
  40df70:	cdq    
  40df71:	loop   0x40dff2
  40df73:	hlt    
  40df74:	out    0x7c,al
  40df76:	push   ebx
  40df77:	sbb    BYTE PTR [esi+0x4d],dh
  40df7a:	adc    dh,BYTE PTR [ebx+0x5f]
  40df7d:	dec    edx
  40df7e:	loopne 0x40df75
  40df80:	and    eax,0x68de34f1
  40df85:	frstor [edi+0x68fc5911]
  40df8b:	outs   dx,DWORD PTR ds:[esi]
  40df8c:	dec    esi
  40df8d:	adc    DWORD PTR [ecx-0x69],esp
  40df90:	gs sbb eax,0x4d6444b5
  40df96:	int    0x7f
  40df98:	pop    edi
  40df99:	push   ss
  40df9a:	aad    0x33
  40df9c:	loop   0x40df3b
  40df9e:	pop    ebx
  40df9f:	sub    BYTE PTR [eax+0x3c],ch
  40dfa2:	jp     0x40df58
  40dfa4:	(bad)  
  40dfa5:	fmul   DWORD PTR [eax-0x4f]
  40dfa8:	push   ebp
  40dfa9:	add    BYTE PTR ds:0x50aa917c,al
  40dfaf:	add    eax,0xc9f7d894
  40dfb4:	or     ah,BYTE PTR [ebx+0x32]
  40dfb7:	sub    ebp,esi
  40dfb9:	std    
  40dfba:	adc    DWORD PTR [ebx-0x222b39dc],ecx
  40dfc0:	test   al,0x0
  40dfc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfc3:	add    ebx,DWORD PTR [ebx]
  40dfc5:	cmp    eax,0xc4c79f84
  40dfca:	or     ecx,DWORD PTR [edi]
  40dfcc:	mov    ah,0x8a
  40dfce:	(bad)  
  40dfcf:	hlt    
  40dfd0:	fstp   QWORD PTR [esi+edi*4-0x5abba5b2]
  40dfd7:	outs   dx,BYTE PTR ds:[esi]
  40dfd8:	ds test al,0x9c
  40dfdb:	or     al,0x4b
  40dfdd:	out    dx,al
  40dfde:	cs hlt 
  40dfe0:	inc    DWORD PTR [ebp-0x4866502e]
  40dfe6:	or     al,0x91
  40dfe8:	push   ecx
  40dfe9:	push   esp
  40dfea:	loop   0x40df86
  40dfec:	test   eax,0x4417f745
  40dff1:	push   edi
  40dff2:	mov    eax,0x26789183
  40dff7:	cmc    
  40dff8:	dec    ecx
  40dff9:	sub    dh,BYTE PTR [ebx-0x4099fff0]
  40dfff:	in     eax,0x48
  40e001:	push   cs
  40e002:	mov    esp,0xb7332273
  40e007:	pop    ds
  40e008:	jmp    0xd86c0e94
  40e00d:	clc    
  40e00e:	pop    eax
  40e00f:	xchg   edi,eax
  40e010:	jle    0x40e083
  40e012:	xor    dh,BYTE PTR [esi-0x21]
  40e015:	sub    al,bl
  40e017:	nop
  40e018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e019:	retf   
  40e01a:	(bad)  
  40e01b:	push   0xfffffffe
  40e01d:	mov    esp,0x7178db01
  40e022:	stos   BYTE PTR es:[edi],al
  40e023:	test   DWORD PTR [esi+0x45f0ff42],edx
  40e029:	fmul   st,st(6)
  40e02b:	xor    al,0x4f
  40e02d:	(bad)  
  40e02e:	mov    edi,eax
  40e030:	lods   eax,DWORD PTR ds:[esi]
  40e031:	pop    esp
  40e032:	mov    ecx,DWORD PTR [esi+0x1083ae24]
  40e038:	or     al,0x82
  40e03a:	jns    0x40dfcb
  40e03c:	ret    
  40e03d:	fcomp  DWORD PTR [edx]
  40e03f:	pop    eax
  40e040:	ss lahf 
  40e042:	test   eax,0x356257f5
  40e047:	mov    ecx,0x4f4f9534
  40e04c:	or     ch,BYTE PTR [ebp-0x39799baf]
  40e052:	repz arpl sp,si
  40e055:	in     al,dx
  40e056:	mov    dh,0x10
  40e058:	mov    bh,0x32
  40e05a:	pusha  
  40e05b:	pop    ss
  40e05c:	mov    esi,0xb390f368
  40e061:	pop    edx
  40e062:	mov    es,WORD PTR [ecx+0x6fbc83e7]
  40e068:	dec    edx
  40e069:	sbb    dl,BYTE PTR [edx-0x4576142c]
  40e06f:	mov    dh,BYTE PTR [esi+0x2d]
  40e072:	dec    edx
  40e073:	sub    ecx,DWORD PTR [ebx-0x4f3d74da]
  40e079:	enter  0xd821,0x54
  40e07d:	retf   
  40e07e:	lock rcl BYTE PTR [ecx],cl
  40e081:	add    al,0xdb
  40e083:	data16 fsubr st,st(7)
  40e086:	pop    ecx
  40e087:	mov    ds:0x7e216374,eax
  40e08c:	inc    edi
  40e08d:	adc    eax,0xaf37df75
  40e092:	cs pop esp
  40e094:	inc    DWORD PTR [ecx+0x401f5aa1]
  40e09a:	mov    BYTE PTR [eax+0x767d1a22],0x74
  40e0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a2:	xor    eax,0x3d9f70fe
  40e0a7:	int    0xb6
  40e0a9:	sbb    ah,BYTE PTR [edi]
  40e0ab:	sti    
  40e0ac:	stos   DWORD PTR es:[edi],eax
  40e0ad:	inc    eax
  40e0ae:	cmp    BYTE PTR [edx],0x23
  40e0b1:	push   esi
  40e0b2:	mov    cl,0x34
  40e0b4:	mov    ebp,0x57b3bee8
  40e0b9:	test   eax,0x3238530f
  40e0be:	pop    ebx
  40e0bf:	nop
  40e0c0:	xchg   ecx,eax
  40e0c1:	data16 sbb ah,BYTE PTR [ebp+0x1c4bba9a]
  40e0c8:	jl     0x40e0d0
  40e0ca:	psadbw mm5,QWORD PTR [edi-0x78]
  40e0ce:	push   edx
  40e0cf:	cmp    BYTE PTR [edx+0x2838c53c],cl
  40e0d5:	add    DWORD PTR [edx-0x24],edx
  40e0d8:	sub    ebx,DWORD PTR [edx-0x1cf5e598]
  40e0de:	inc    ebx
  40e0df:	lahf   
  40e0e0:	js     0xcfa5cd14
  40e0e6:	das    
  40e0e7:	cmp    al,0x3b
  40e0e9:	pop    esp
  40e0ea:	out    dx,al
  40e0eb:	rcr    BYTE PTR [ebp+0x6557255d],0x8a
  40e0f2:	aad    0xcd
  40e0f4:	fimul  WORD PTR [edx+0x6f499a33]
  40e0fa:	sub    al,0x0
  40e0fc:	ss out 0x93,al
  40e0ff:	fimul  WORD PTR [ecx]
  40e101:	or     bl,BYTE PTR [ebx+0x26e124b2]
  40e107:	ins    BYTE PTR es:[edi],dx
  40e108:	pop    ds
  40e109:	xor    BYTE PTR [ecx],ch
  40e10b:	repnz sbb edx,DWORD PTR [edx]
  40e10e:	xchg   ebx,eax
  40e10f:	loopne 0x40e172
  40e111:	lds    ecx,FWORD PTR [edi]
  40e113:	(bad)  
  40e114:	fdivr  QWORD PTR [edi]
  40e116:	or     BYTE PTR [esi],0xd3
  40e119:	call   0xe3832e5
  40e11e:	jge    0x40e191
  40e120:	popf   
  40e121:	or     cl,BYTE PTR [esi-0x4e]
  40e124:	push   eax
  40e125:	xchg   esp,eax
  40e126:	and    eax,0xe9b74cef
  40e12b:	xchg   ebp,eax
  40e12c:	es sub eax,0x8277958c
  40e132:	sub    eax,DWORD PTR [ecx]
  40e134:	outs   dx,BYTE PTR ds:[esi]
  40e135:	mov    esp,0x58c0f8b2
  40e13a:	in     eax,0x34
  40e13c:	idiv   DWORD PTR [esi-0x4d]
  40e13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e140:	sbb    bh,cl
  40e142:	pop    ecx
  40e143:	imul   ecx,DWORD PTR [eax+edx*1],0xffffffba
  40e147:	inc    eax
  40e148:	jecxz  0x40e101
  40e14a:	call   0x9a7914fd
  40e14f:	js     0x40e114
  40e151:	sub    bh,BYTE PTR [ebx]
  40e153:	mov    WORD PTR fs:[edx-0x2a],?
  40e157:	pop    esi
  40e158:	jl     0x40e175
  40e15a:	fadd   QWORD PTR [edx+0x76]
  40e15d:	popf   
  40e15e:	in     eax,dx
  40e15f:	xchg   esp,eax
  40e160:	adc    al,0xa2
  40e162:	inc    edx
  40e163:	stos   DWORD PTR es:[edi],eax
  40e164:	imul   esi,ebx,0x64
  40e167:	xor    bh,BYTE PTR [ebp+0x4b3d206c]
  40e16d:	jmp    0x40e140
  40e16f:	sbb    DWORD PTR [edx+edx*4+0x59cd0649],eax
  40e176:	sub    ch,BYTE PTR [edx-0x17]
  40e179:	call   0x5732:0x7205ac70
  40e180:	mov    dh,0x54
  40e182:	and    esi,DWORD PTR [edx]
  40e184:	dec    ecx
  40e185:	jle    0x40e1c6
  40e187:	into   
  40e188:	dec    edi
  40e189:	mov    esi,0x3650e7e0
  40e18e:	pop    esi
  40e18f:	cmp    eax,0x9904a9dd
  40e194:	in     eax,dx
  40e195:	ins    BYTE PTR es:[edi],dx
  40e196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e197:	cmp    ecx,DWORD PTR [ecx-0x1bc69722]
  40e19d:	inc    ecx
  40e19e:	cli    
  40e19f:	or     eax,0x4dbc01ce
  40e1a4:	dec    ebx
  40e1a5:	out    0x3d,al
  40e1a7:	sub    eax,0xaf799835
  40e1ac:	add    al,0x3c
  40e1ae:	call   DWORD PTR [esp+ecx*2]
  40e1b1:	call   0x9af2941c
  40e1b6:	cli    
  40e1b7:	jnp    0x40e1c0
  40e1b9:	sub    eax,0xbdfb8178
  40e1be:	pop    eax
  40e1bf:	iret   
  40e1c0:	enter  0x28a9,0x52
  40e1c4:	dec    edi
  40e1c5:	popa   
  40e1c6:	das    
  40e1c7:	and    ch,al
  40e1c9:	daa    
  40e1ca:	jae    0x40e1be
  40e1cc:	clc    
  40e1cd:	data16 mov ds:0x229af066,al
  40e1d4:	mov    al,ds:0x2ec24ab8
  40e1d9:	mov    ah,0x20
  40e1db:	fbstp  TBYTE PTR es:[edx]
  40e1de:	ficomp WORD PTR [eax+0x31ca7c7c]
  40e1e4:	shl    DWORD PTR [esi-0x1bc91e15],cl
  40e1ea:	clc    
  40e1eb:	cmp    ch,BYTE PTR [edx+0x648c91e7]
  40e1f1:	test   DWORD PTR [ecx],0x9e885562
  40e1f7:	popf   
  40e1f8:	imul   eax,DWORD PTR [esi],0x1b316ea0
  40e1fe:	loop   0x40e191
  40e200:	xchg   DWORD PTR [ebp-0x745b8b3a],ecx
  40e206:	dec    edx
  40e207:	stos   DWORD PTR es:[edi],eax
  40e208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e209:	mov    BYTE PTR [edx+0x6e],bl
  40e20c:	jbe    0x40e18f
  40e20e:	adc    dh,BYTE PTR [eax]
  40e210:	dec    esi
  40e211:	in     al,0x8d
  40e213:	fdivr  st,st(0)
  40e215:	sahf   
  40e216:	enter  0xbeec,0x22
  40e21a:	sbb    esi,ebp
  40e21c:	faddp  st(4),st
  40e21e:	clc    
  40e21f:	mov    BYTE PTR fs:[ebx-0x50],dh
  40e223:	sbb    bh,ah
  40e225:	sbb    al,0x79
  40e227:	mov    ah,BYTE PTR [ebx+0x1149a6a1]
  40e22d:	sti    
  40e22e:	test   al,0x34
  40e230:	sbb    bh,bh
  40e232:	cld    
  40e233:	xlat   BYTE PTR ds:[ebx]
  40e234:	les    esp,FWORD PTR [eax]
  40e236:	or     ecx,ebx
  40e238:	dec    ebp
  40e239:	sbb    ah,BYTE PTR [edi-0x1a]
  40e23c:	(bad)  
  40e23d:	sub    DWORD PTR [eax-0x3e],edx
  40e240:	dec    ecx
  40e241:	xchg   ebx,eax
  40e242:	push   eax
  40e243:	mov    ah,0xa
  40e245:	pop    esi
  40e246:	addr16 mov cl,0xf1
  40e249:	dec    esp
  40e24a:	mov    esp,0xe2a0f317
  40e24f:	ins    BYTE PTR es:[edi],dx
  40e250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e251:	dec    DWORD PTR [edi+ebx*4-0xc]
  40e255:	cld    
  40e256:	test   cl,dl
  40e258:	je     0x40e2d4
  40e25a:	pop    eax
  40e25b:	mov    eax,0x84d61c3b
  40e260:	scas   al,BYTE PTR es:[edi]
  40e261:	sbb    ch,BYTE PTR [ecx+edx*1]
  40e264:	lods   al,BYTE PTR ds:[esi]
  40e265:	adc    BYTE PTR [ebp+0x2fb4a8db],dl
  40e26b:	daa    
  40e26c:	cs jb  0x40e2db
  40e26f:	fsub   DWORD PTR [ebx]
  40e271:	push   ebx
  40e272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e273:	or     DWORD PTR [esi],edx
  40e275:	or     al,0xa3
  40e277:	cmp    al,0x56
  40e279:	dec    ebp
  40e27a:	jno    0x40e263
  40e27c:	kxnorw k2,k4,k3
  40e280:	ror    DWORD PTR [eax-0x27814eef],cl
  40e286:	mov    ch,0x37
  40e288:	and    DWORD PTR [esi-0x2c],0x44
  40e28c:	in     al,dx
  40e28d:	pop    ebx
  40e28e:	pop    ebx
  40e28f:	cmp    DWORD PTR [esi-0x72d36ca5],eax
  40e295:	mov    ah,0xa5
  40e297:	dec    esp
  40e298:	test   cl,bl
  40e29a:	adc    BYTE PTR [edx-0x2d2bbd05],ah
  40e2a0:	test   ch,0xe0
  40e2a3:	push   edx
  40e2a4:	jmp    0x69bb:0xa8136df6
  40e2ab:	jmp    0x717a024e
  40e2b0:	fcom   st(7)
  40e2b2:	xchg   esp,eax
  40e2b3:	lods   al,BYTE PTR ds:[esi]
  40e2b4:	das    
  40e2b5:	mov    ebx,0xc26f639e
  40e2ba:	mov    WORD PTR [edx],es
  40e2bc:	mov    bl,0x13
  40e2be:	add    al,0xa8
  40e2c1:	jge    0x40e2a8
  40e2c3:	mov    ds:0x8ad29351,eax
  40e2c8:	sub    BYTE PTR [esp+edi*1],ah
  40e2cb:	pop    eax
  40e2cc:	pop    ds
  40e2cd:	pop    edx
  40e2ce:	adc    eax,0xa702bec1
  40e2d3:	dec    esi
  40e2d4:	outs   dx,DWORD PTR ds:[esi]
  40e2d5:	je     0x40e309
  40e2d7:	jecxz  0x40e2a7
  40e2d9:	adc    BYTE PTR [edx-0x3809d906],dh
  40e2df:	(bad)  
  40e2e0:	(bad)  
  40e2e1:	scas   al,BYTE PTR es:[edi]
  40e2e2:	or     DWORD PTR [ebx-0x4640a743],0x30
  40e2e9:	icebp  
  40e2ea:	jne    0x40e2b0
  40e2ec:	mov    ds:0xcedae4e5,al
  40e2f1:	inc    ebp
  40e2f2:	mov    ch,0x4c
  40e2f4:	ja     0x40e35d
  40e2f6:	xor    al,BYTE PTR [edi+0x4]
  40e2f9:	dec    ebx
  40e2fa:	cmp    al,0x74
  40e2fc:	push   ss
  40e2fd:	push   ss
  40e2fe:	xchg   BYTE PTR [ebp-0x35af30d6],bh
  40e304:	or     DWORD PTR [esi-0x2f],edx
  40e307:	mov    ecx,DWORD PTR [ebx+0x64]
  40e30a:	sbb    esp,DWORD PTR [eax]
  40e30c:	mov    WORD PTR [edi-0x5a],ds
  40e30f:	dec    ecx
  40e310:	jle    0x40e334
  40e312:	outs   dx,DWORD PTR ds:[esi]
  40e313:	cmp    BYTE PTR [edi-0x47],bl
  40e316:	push   ecx
  40e317:	popa   
  40e318:	nop
  40e319:	mov    esi,0x55478029
  40e31e:	cmp    edi,DWORD PTR [edi+0x65]
  40e321:	dec    esp
  40e322:	mov    cl,0x6c
  40e324:	and    DWORD PTR [edx-0x4cfcca9b],eax
  40e32a:	in     al,dx
  40e32b:	mov    ecx,0xddd13d7a
  40e330:	dec    ebx
  40e331:	mov    ds:0x5b9e1184,eax
  40e336:	xchg   ebp,eax
  40e337:	fisubr DWORD PTR [esi+0x29]
  40e33a:	jo     0x40e38c
  40e33c:	retf   
  40e33d:	std    
  40e33e:	cmp    edi,0x98520f42
  40e344:	dec    esp
  40e345:	es js  0x40e37c
  40e348:	in     eax,dx
  40e349:	pop    esi
  40e34a:	jb     0x40e2d9
  40e34c:	imul   eax,DWORD PTR [ebx-0x44d70f95],0xffffff9e
  40e353:	rol    DWORD PTR [edx-0x38],1
  40e356:	pop    ebp
  40e357:	inc    ebx
  40e358:	sub    ebp,ebp
  40e35a:	push   es
  40e35b:	push   0x554a28ff
  40e360:	cwde   
  40e361:	jnp    0x40e2f9
  40e363:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e365:	jmp    FWORD PTR [edi]
  40e367:	mov    eax,0xaf7a96a6
  40e36c:	xchg   ebx,eax
  40e36d:	pop    edx
  40e36e:	sub    edi,ecx
  40e370:	sub    ch,BYTE PTR [ecx]
  40e372:	and    eax,0x715c3fe
  40e377:	xchg   ebp,eax
  40e378:	inc    esp
  40e379:	mov    cl,0xe1
  40e37b:	xchg   edi,eax
  40e37c:	cmp    edx,ecx
  40e37e:	dec    DWORD PTR [edx]
  40e380:	mov    bh,0xb
  40e382:	stc    
  40e383:	idiv   dl
  40e385:	jb     0x40e3c6
  40e387:	aaa    
  40e388:	inc    ebx
  40e389:	or     eax,0xa49f5b47
  40e38e:	outs   dx,DWORD PTR ds:[esi]
  40e38f:	pushf  
  40e390:	xchg   edi,eax
  40e391:	adc    bl,cl
  40e393:	sub    ah,0x23
  40e396:	stos   BYTE PTR es:[edi],al
  40e397:	daa    
  40e398:	adc    ah,BYTE PTR [edi+ebx*4-0x3d]
  40e39c:	jmp    0x40e34e
  40e39e:	in     eax,dx
  40e39f:	push   ecx
  40e3a0:	inc    ebx
  40e3a1:	cmp    eax,0x8f5a98b1
  40e3a6:	in     al,0xc0
  40e3a8:	mov    ch,0xa9
  40e3aa:	mov    ebp,0x6fc222c5
  40e3af:	inc    esp
  40e3b0:	sbb    dh,dh
  40e3b2:	pop    ecx
  40e3b3:	mov    edx,0x6ac6c486
  40e3b8:	aam    0x75
  40e3ba:	fs mov ebx,0x80a5ea33
  40e3c0:	xor    ecx,ebp
  40e3c2:	repnz xlat BYTE PTR ds:[ebx]
  40e3c4:	dec    edi
  40e3c5:	push   ecx
  40e3c6:	mov    al,ds:0x4d590fbe
  40e3cb:	pop    esi
  40e3cc:	mov    ecx,eax
  40e3ce:	daa    
  40e3cf:	fsub   st(5),st
  40e3d1:	cdq    
  40e3d2:	retf   0x2a0d
  40e3d5:	inc    ecx
  40e3d6:	lods   al,BYTE PTR ds:[esi]
  40e3d7:	test   ch,0xc4
  40e3da:	popa   
  40e3db:	push   esp
  40e3dc:	cli    
  40e3dd:	inc    ebx
  40e3de:	ret    0x5cc7
  40e3e1:	scas   al,BYTE PTR es:[edi]
  40e3e2:	xchg   BYTE PTR [eax+0x16503648],dh
  40e3e8:	push   eax
  40e3e9:	jecxz  0x40e3ef
  40e3eb:	into   
  40e3ec:	fadd   st,st(1)
  40e3ee:	bound  ebx,QWORD PTR [edi-0x77]
  40e3f1:	icebp  
  40e3f2:	ja     0x40e3ff
  40e3f4:	ins    BYTE PTR es:[edi],dx
  40e3f5:	lahf   
  40e3f6:	out    0x35,eax
  40e3f8:	fist   DWORD PTR [edi]
  40e3fb:	mov    ?,WORD PTR [edx+eax*1-0x26707999]
  40e402:	mov    edx,0x40502b7a
  40e407:	int    0xfe
  40e409:	(bad)  
  40e40a:	sti    
  40e40b:	ficom  WORD PTR [ecx-0x4b]
  40e40e:	imul   edx,DWORD PTR [edx+0x332659d9],0x20
  40e415:	popf   
  40e416:	repnz xchg ecx,eax
  40e418:	or     al,0xe1
  40e41a:	cdq    
  40e41b:	pusha  
  40e41c:	inc    eax
  40e41d:	test   al,0xe4
  40e41f:	add    eax,0x5a80c31e
  40e424:	pop    ss
  40e425:	adc    esi,ebp
  40e427:	jmp    0x4649aad7
  40e42c:	(bad)  
  40e42d:	(bad)  
  40e42e:	(bad)  
  40e42f:	out    0xcc,al
  40e431:	outs   dx,BYTE PTR ds:[esi]
  40e432:	ins    BYTE PTR es:[edi],dx
  40e433:	ins    DWORD PTR es:[edi],dx
  40e434:	loopne 0x40e3e4
  40e436:	xor    bl,BYTE PTR [ecx-0x2d4bb068]
  40e43c:	pop    eax
  40e43d:	or     DWORD PTR [edi+0x3911bfb4],esi
  40e443:	pop    esp
  40e444:	in     al,dx
  40e445:	add    DWORD PTR [edi+0x6c],ebp
  40e448:	ds das 
  40e44a:	arpl   ax,cx
  40e44c:	cmp    esi,ecx
  40e44e:	dec    ecx
  40e44f:	adc    DWORD PTR [edi-0x656fa9dd],esi
  40e455:	cmp    al,0x39
  40e457:	pushf  
  40e458:	ror    dh,cl
  40e45a:	or     ebp,DWORD PTR [ebp-0x2e]
  40e45d:	out    dx,al
  40e45e:	mov    ch,0xe7
  40e460:	sbb    cl,dh
  40e462:	je     0x40e453
  40e464:	sbb    bh,al
  40e466:	or     eax,0x3482e964
  40e46b:	add    esp,DWORD PTR [ebx-0x8]
  40e46e:	iret   
  40e46f:	xchg   DWORD PTR [ebx],ecx
  40e471:	adc    DWORD PTR [edx],ebp
  40e473:	rcl    DWORD PTR ds:0xa5d05248,1
  40e479:	mov    ebx,0xc971bbb8
  40e47e:	push   0xfffffffd
  40e480:	adc    BYTE PTR ds:0xafe5e166,ah
  40e486:	(bad)  
  40e488:	cwde   
  40e489:	shl    ah,1
  40e48b:	aam    0xda
  40e48d:	xchg   ebx,eax
  40e48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e48f:	push   cs
  40e490:	pop    ss
  40e491:	addr16 pop ecx
  40e493:	fidiv  WORD PTR [edx+0x69]
  40e496:	push   ebp
  40e497:	jno    0x40e4d0
  40e499:	sub    eax,0x1cc5a5cd
  40e49e:	cdq    
  40e49f:	dec    edi
  40e4a0:	call   0x470:0xd051615a
  40e4a7:	xor    esp,DWORD PTR [edi-0x3386e892]
  40e4ad:	mov    al,0xff
  40e4af:	push   0x4620bebc
  40e4b4:	mov    cl,0xb3
  40e4b6:	or     dh,ch
  40e4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b9:	ds dec edx
  40e4bb:	push   ebp
  40e4bc:	mov    esp,?
  40e4be:	(bad)  
  40e4bf:	cmp    eax,0x4785296f
  40e4c4:	dec    eax
  40e4c5:	popa   
  40e4c6:	mov    ?,WORD PTR [eax+0x43681dcc]
  40e4cc:	mov    bl,0xc9
  40e4ce:	xchg   ebx,eax
  40e4cf:	or     ah,0x5a
  40e4d2:	aas    
  40e4d3:	xchg   ebp,eax
  40e4d4:	(bad)  
  40e4d6:	icebp  
  40e4d7:	mov    edi,0xa4886d42
  40e4dc:	adc    esi,DWORD PTR [bx-0x4d24]
  40e4e1:	push   es
  40e4e2:	dec    esi
  40e4e3:	(bad)  
  40e4e4:	jb     0x40e46e
  40e4e6:	push   0xb272d5d6
  40e4eb:	hlt    
  40e4ec:	imul   ebp,DWORD PTR [ebx+0x20],0x484c7836
  40e4f3:	xchg   edx,eax
  40e4f4:	mov    edx,0xda5bdade
  40e4f9:	dec    esp
  40e4fa:	int3   
  40e4fb:	inc    esp
  40e4fc:	and    ch,bh
  40e4fe:	cli    
  40e4ff:	outs   dx,DWORD PTR ds:[esi]
  40e500:	push   ebx
  40e501:	add    DWORD PTR [edx+0x28],0xc5d7c1a6
  40e508:	pop    ds
  40e509:	push   edi
  40e50a:	mov    dh,BYTE PTR [ebx-0x2d]
  40e50d:	inc    edi
  40e50e:	aad    0xf5
  40e510:	push   cs
  40e511:	jo     0x40e4f1
  40e513:	(bad)  
  40e514:	aas    
  40e515:	or     al,0xaf
  40e517:	arpl   WORD PTR [edi+0x57bf78c5],bx
  40e51d:	jmp    0x686e:0x5b5bd533
  40e524:	cmp    al,0x25
  40e526:	push   edi
  40e527:	xchg   ebp,eax
  40e528:	pushf  
  40e529:	in     al,dx
  40e52a:	iret   
  40e52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52c:	loopne 0x40e55a
  40e52e:	inc    esi
  40e52f:	fldenv [edx+0x3c04af7f]
  40e535:	jne    0x40e4e2
  40e537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e538:	mov    bh,0xbd
  40e53a:	fs popf 
  40e53c:	xchg   esi,eax
  40e53d:	loop   0x40e541
  40e53f:	fimul  DWORD PTR [esi+eax*2-0x6a]
  40e543:	jecxz  0x40e4d5
  40e545:	shl    DWORD PTR ds:0x1035e380,cl
  40e54b:	cmp    eax,0x9f7cc446
  40e550:	retf   
  40e551:	mov    ds:0x4c951d1,al
  40e556:	mov    ebx,0xf3ac2d9c
  40e55b:	or     DWORD PTR [ebx-0x113d2074],0x16
  40e562:	cdq    
  40e563:	rcr    DWORD PTR [ebp-0x6833281b],0x6f
  40e56a:	sub    eax,0x3490ee83
  40e56f:	xchg   edi,eax
  40e570:	jle    0x40e520
  40e572:	imul   esi,eax,0xf2c19754
  40e578:	popf   
  40e579:	mov    al,ds:0xa046198e
  40e57e:	or     al,0xcf
  40e580:	fistp  DWORD PTR [esi+0x1f6dd45b]
  40e586:	sub    ecx,DWORD PTR [ebx-0x1e]
  40e589:	lahf   
  40e58a:	mov    ch,0xf0
  40e58c:	push   edi
  40e58d:	fdiv   DWORD PTR fs:[ecx]
  40e590:	or     BYTE PTR [eax],bl
  40e592:	iret   
  40e593:	add    DWORD PTR [edi+0x60eae082],edi
  40e599:	fdivr  QWORD PTR [esp+edx*1-0x212891ff]
  40e5a0:	mov    eax,0x1231db5d
  40e5a5:	aaa    
  40e5a6:	push   ebx
  40e5a7:	adc    DWORD PTR [esi],0xbd1a7c39
  40e5ad:	addr16 or al,0xd6
  40e5b0:	sbb    DWORD PTR ds:0x65420a0,0xfffffffc
  40e5b7:	sub    dl,BYTE PTR [ecx-0x4e067565]
  40e5bd:	mov    esp,0x5ae069d5
  40e5c2:	xor    esi,DWORD PTR [edi]
  40e5c4:	push   es
  40e5c5:	mov    ah,0xe9
  40e5c7:	sub    eax,0x4dc40d5c
  40e5cc:	adc    BYTE PTR [edi],cl
  40e5ce:	out    dx,eax
  40e5cf:	int3   
  40e5d0:	sub    cl,BYTE PTR [edi]
  40e5d2:	jge    0x40e609
  40e5d4:	cmp    edi,DWORD PTR [edi+0x68c4ca8c]
  40e5da:	lahf   
  40e5db:	shl    dh,cl
  40e5dd:	loop   0x40e595
  40e5df:	jmp    0x40e5b7
  40e5e1:	or     ecx,ebp
  40e5e3:	(bad)  [edx+0x716ccf60]
  40e5e9:	pop    ss
  40e5ea:	stos   DWORD PTR es:[edi],eax
  40e5eb:	or     WORD PTR [edi],cx
  40e5ee:	and    BYTE PTR [eax],0xc5
  40e5f1:	out    0xf5,eax
  40e5f3:	push   ds
  40e5f4:	or     eax,0xe5e02c9
  40e5f9:	scas   eax,DWORD PTR es:[edi]
  40e5fa:	loop   0x40e61e
  40e5fc:	psubusb mm5,mm2
  40e5ff:	jae    0x40e5a1
  40e601:	dec    esi
  40e602:	xor    eax,0x983452b1
  40e607:	and    BYTE PTR [edx+esi*4+0x64f084ad],dh
  40e60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e60f:	(bad)  
  40e612:	stos   BYTE PTR es:[edi],al
  40e613:	rcl    BYTE PTR [ebp+0x79],0x8f
  40e617:	adc    BYTE PTR [edi],0x15
  40e61a:	mov    ecx,DWORD PTR [ebp-0x73bc688d]
  40e620:	bound  esi,QWORD PTR [esi-0x51]
  40e623:	add    edx,esp
  40e625:	or     bl,ah
  40e627:	mov    ch,0x81
  40e629:	and    BYTE PTR [edx-0x23],dh
  40e62c:	enter  0xa563,0xe7
  40e630:	sbb    eax,0xe3d4f9ac
  40e635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e636:	js     0x40e6b6
  40e638:	test   BYTE PTR [esi+0x15],ah
  40e63b:	repnz icebp 
  40e63d:	mov    dl,0xc3
  40e63f:	in     eax,dx
  40e640:	inc    ebp
  40e641:	test   ah,0x8d
  40e644:	pushf  
  40e645:	scas   eax,DWORD PTR es:[edi]
  40e646:	adc    bl,BYTE PTR [esi+0x5a]
  40e649:	ds push edi
  40e64b:	cmp    bl,BYTE PTR [ebx]
  40e64d:	push   esp
  40e64e:	pop    esi
  40e64f:	call   0xa075:0x5bc7c539
  40e656:	out    0xa0,al
  40e658:	adc    BYTE PTR ds:0xaf64815b,bh
  40e65e:	cmp    ebx,DWORD PTR [esi]
  40e660:	adc    cl,0x82
  40e663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e664:	sbb    eax,0x75235866
  40e669:	push   esp
  40e66a:	sbb    eax,0xd47ab5bb
  40e66f:	hlt    
  40e670:	repnz (bad) 
  40e672:	xor    al,0x85
  40e674:	sub    dl,BYTE PTR [ebx+edx*2-0x41]
  40e678:	or     eax,0x491841e3
  40e67d:	hlt    
  40e67e:	lds    ebp,FWORD PTR [ebx+0x39]
  40e681:	scas   al,BYTE PTR es:[edi]
  40e682:	mov    esi,0xe9661fae
  40e687:	enter  0x6bf7,0x9d
  40e68b:	pop    edx
  40e68c:	dec    esp
  40e68d:	cwde   
  40e68e:	jp     0x40e6bb
  40e690:	push   es
  40e691:	dec    ebp
  40e692:	jo     0x40e6bf
  40e694:	dec    ebp
  40e695:	sub    BYTE PTR [edx],bl
  40e697:	gs leave 
  40e699:	test   BYTE PTR [ecx],bl
  40e69b:	test   eax,0xab4e1f21
  40e6a0:	lods   eax,DWORD PTR ds:[esi]
  40e6a1:	aas    
  40e6a2:	xchg   esi,eax
  40e6a3:	pop    es
  40e6a4:	test   eax,esp
  40e6a6:	in     eax,0x72
  40e6a8:	clc    
  40e6a9:	push   DWORD PTR [ecx+0x3e]
  40e6ac:	loop   0x40e71c
  40e6ae:	fcom   st(0)
  40e6b0:	shr    dh,0x4b
  40e6b3:	(bad)  
  40e6b4:	pop    esi
  40e6b5:	inc    esp
  40e6b6:	sub    BYTE PTR [esi+edx*8],dl
  40e6b9:	pop    es
  40e6ba:	xchg   ebx,eax
  40e6bb:	push   0xffffffb0
  40e6bd:	jg     0x40e727
  40e6bf:	lock or BYTE PTR [esp+edx*1],bh
  40e6c3:	lea    ebx,[esi+0x3b46c2f]
  40e6c9:	inc    ebx
  40e6ca:	icebp  
  40e6cb:	cmp    eax,0x6244a818
  40e6d0:	sub    ecx,ebp
  40e6d2:	aad    0x5e
  40e6d4:	in     al,dx
  40e6d5:	dec    edi
  40e6d6:	imul   DWORD PTR [ecx+0x17f43034]
  40e6dc:	mov    al,ds:0xf4e929cb
  40e6e1:	mov    BYTE PTR [esi+esi*8-0x1284111b],al
  40e6e8:	mov    ebp,0x32f76d55
  40e6ed:	push   es
  40e6ee:	(bad)  
  40e6ef:	loope  0x40e709
  40e6f1:	inc    edi
  40e6f2:	jp     0x40e69c
  40e6f4:	add    ah,dh
  40e6f6:	mov    ebp,0x1c45e23c
  40e6fb:	fidivr DWORD PTR [eax]
  40e6fd:	jg     0x40e6f4
  40e6ff:	fwait
  40e700:	xchg   esp,eax
  40e701:	pop    ss
  40e702:	mov    dh,0x82
  40e704:	scas   eax,DWORD PTR es:[edi]
  40e705:	shl    BYTE PTR [ecx+ebx*1-0x24986c21],cl
  40e70c:	scas   al,BYTE PTR es:[edi]
  40e70d:	mov    ebx,0x210cb681
  40e712:	pop    esp
  40e713:	cmp    al,0x5e
  40e716:	ret    0xc8a7
  40e719:	jmp    0x40e6d1
  40e71b:	mov    ds:0x5d70c2b6,al
  40e720:	pop    eax
  40e721:	in     al,0x8
  40e723:	jo     0x40e77b
  40e725:	outs   dx,DWORD PTR ds:[esi]
  40e726:	stos   BYTE PTR es:[edi],al
  40e727:	cmp    al,0x69
  40e729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e72a:	and    DWORD PTR [esi],0xfd745f8b
  40e730:	jne    0x40e7af
  40e732:	mov    edx,0x9d5e7c7e
  40e737:	inc    ebx
  40e738:	push   ss
  40e739:	hlt    
  40e73a:	inc    eax
  40e73b:	ds pop ss
  40e73d:	gs aaa 
  40e73f:	xchg   BYTE PTR [esi+ebx*1+0x3e99be16],al
  40e746:	mov    dh,dh
  40e748:	fisttp DWORD PTR [ecx]
  40e74a:	out    dx,eax
  40e74b:	fcomp  DWORD PTR [edi-0x4b5faa43]
  40e751:	jp     0x40e6e8
  40e753:	push   0x5ea86c97
  40e758:	push   ds
  40e759:	je     0x40e736
  40e75b:	pop    edx
  40e75c:	repz inc esp
  40e75e:	clc    
  40e75f:	ror    DWORD PTR [ecx],cl
  40e761:	idiv   BYTE PTR [esi]
  40e763:	cwde   
  40e764:	or     BYTE PTR [edx-0x6a],dl
  40e767:	sbb    eax,0x24970793
  40e76c:	les    esi,FWORD PTR [ecx-0x654538ce]
  40e772:	jno    0x40e72b
  40e774:	cmc    
  40e775:	jle    0x40e774
  40e777:	mov    BYTE PTR [edi],dl
  40e779:	out    dx,eax
  40e77a:	aas    
  40e77b:	cs cmc 
  40e77d:	push   ss
  40e77e:	call   0x8614:0x957de33c
  40e785:	scas   al,BYTE PTR es:[edi]
  40e786:	stos   DWORD PTR es:[edi],eax
  40e787:	add    dh,dl
  40e789:	push   esp
  40e78a:	push   0x1b
  40e78c:	repz xchg edx,eax
  40e78e:	dec    edi
  40e78f:	icebp  
  40e790:	cli    
  40e791:	push   0x75
  40e793:	ins    DWORD PTR es:[edi],dx
  40e794:	pop    eax
  40e795:	pop    ss
  40e796:	fisubr WORD PTR [ebx+0x31670d1a]
  40e79c:	jno    0x40e74c
  40e79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e79f:	loop   0x40e75f
  40e7a1:	fsub   QWORD PTR [ebx]
  40e7a3:	push   ss
  40e7a4:	xor    BYTE PTR [edx],cl
  40e7a6:	cmp    al,0xfa
  40e7a8:	add    BYTE PTR [ebp-0x13],ch
  40e7ab:	ins    BYTE PTR es:[edi],dx
  40e7ac:	cmp    ecx,edi
  40e7ae:	adc    BYTE PTR [eax+0x74112c9],0xc5
  40e7b5:	add    BYTE PTR [eax+0x11],0x41
  40e7b9:	xchg   edi,eax
  40e7ba:	xlat   BYTE PTR ds:[ebx]
  40e7bb:	sub    DWORD PTR [esi],esp
  40e7bd:	pop    ebx
  40e7be:	mov    ds:0x3fc37542,eax
  40e7c3:	outs   dx,BYTE PTR ds:[esi]
  40e7c4:	and    al,0xfe
  40e7c6:	dec    esp
  40e7c7:	pop    edx
  40e7c8:	add    DWORD PTR [ebp+0x68a0eee3],eax
  40e7ce:	pop    esp
  40e7cf:	in     al,dx
  40e7d0:	idiv   DWORD PTR [ebx-0x3a]
  40e7d3:	adc    BYTE PTR [ebx+eiz*8],bl
  40e7d6:	xor    al,0xce
  40e7d8:	jg     0x40e82f
  40e7da:	loope  0x40e7a4
  40e7dc:	add    ebx,0x5f3d294e
  40e7e2:	adc    al,0x24
  40e7e4:	ret    
  40e7e5:	ret    0x8d42
  40e7e8:	or     DWORD PTR [ebp-0x6a553ba1],0xffffffd8
  40e7ef:	(bad)  
  40e7f0:	jo     0x40e7c1
  40e7f2:	xor    DWORD PTR [eax+0x291775ab],edx
  40e7f8:	jl     0x40e812
  40e7fa:	inc    ecx
  40e7fb:	loop   0x40e810
  40e7fd:	aad    0x3b
  40e7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e800:	jmp    0x40e792
  40e802:	pushf  
  40e803:	int    0xbf
  40e805:	es jbe 0x40e86c
  40e808:	or     eax,DWORD PTR [eax+ecx*1]
  40e80b:	and    al,BYTE PTR [edx-0x6b699777]
  40e811:	and    BYTE PTR [ebp-0x35],bl
  40e814:	vmwrite ebp,DWORD PTR [ebp-0x5f4f6f24]
  40e81b:	out    dx,al
  40e81c:	mov    ds:0x821ba9d9,eax
  40e821:	jge    0x40e888
  40e823:	(bad)  
  40e824:	cli    
  40e825:	clc    
  40e826:	mov    edi,0x239c5668
  40e82b:	clc    
  40e82c:	in     al,dx
  40e82d:	clc    
  40e82e:	rol    DWORD PTR [edi+ecx*8+0x39],0xca
  40e833:	mov    esi,0xdcd57db4
  40e838:	lock ja 0x40e8a3
  40e83b:	(bad)  
  40e83c:	aam    0xe6
  40e83e:	jmp    0x8ccd:0x3a62c4e5
  40e845:	pop    edi
  40e846:	jno    0x40e81f
  40e848:	cdq    
  40e849:	addr16 push esp
  40e84b:	aaa    
  40e84c:	and    eax,0x2b65d7f7
  40e851:	pop    edx
  40e852:	xchg   ebp,eax
  40e853:	test   eax,0xb9dc1b98
  40e858:	stos   DWORD PTR es:[edi],eax
  40e859:	adc    ebp,DWORD PTR [esi-0x4ab8a65c]
  40e85f:	push   eax
  40e860:	mov    ecx,0xbd888fb3
  40e865:	jle    0x40e876
  40e867:	iret   
  40e868:	cwde   
  40e869:	jne    0x40e8e8
  40e86b:	lods   al,BYTE PTR ds:[esi]
  40e86c:	into   
  40e86d:	ss xchg esp,eax
  40e86f:	or     al,0x15
  40e871:	sub    dh,BYTE PTR [esp+edi*8+0x50]
  40e875:	sti    
  40e876:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40e878:	scas   al,BYTE PTR es:[edi]
  40e879:	add    esi,DWORD PTR [esi]
  40e87b:	in     al,dx
  40e87c:	loopne 0x40e858
  40e87e:	ds mov edi,0xa8b6a961
  40e884:	enter  0x9eb4,0x38
  40e888:	adc    DWORD PTR [edx-0x24a49a68],esp
  40e88e:	and    dh,cl
  40e890:	or     eax,0x68df2788
  40e895:	dec    ebp
  40e896:	ins    DWORD PTR es:[edi],dx
  40e897:	cmc    
  40e898:	ss ins DWORD PTR es:[edi],dx
  40e89a:	ret    
  40e89b:	cmp    ah,cl
  40e89d:	sbb    BYTE PTR [ecx-0x40],0x1d
  40e8a1:	sub    al,0x87
  40e8a3:	dec    ecx
  40e8a4:	aam    0xab
  40e8a6:	pop    esp
  40e8a7:	sti    
  40e8a8:	or     esi,DWORD PTR [eax]
  40e8aa:	xor    eax,0xcecbb14d
  40e8af:	push   sp
  40e8b1:	mov    ecx,0x3ac55d0c
  40e8b6:	ins    DWORD PTR es:[edi],dx
  40e8b7:	mov    edx,0xd2aa675f
  40e8bc:	inc    esp
  40e8bd:	and    cl,BYTE PTR [ecx+edx*2-0x10]
  40e8c1:	push   0xa7d7dc9b
  40e8c6:	jne    0x40e934
  40e8c8:	dec    eax
  40e8c9:	dec    ebp
  40e8ca:	jge    0x40e8ab
  40e8cc:	jp     0x40e89c
  40e8ce:	lods   eax,DWORD PTR ds:[esi]
  40e8cf:	push   edx
  40e8d0:	fadd   DWORD PTR [ebx+0x1e]
  40e8d3:	pop    ss
  40e8d4:	fsubr  QWORD PTR [eax+ecx*2]
  40e8d7:	push   ebx
  40e8d8:	fdiv   QWORD PTR [eax-0x1fea633a]
  40e8de:	xchg   ebp,eax
  40e8df:	fld    TBYTE PTR [edi]
  40e8e1:	sar    DWORD PTR [edi],0xaa
  40e8e4:	sahf   
  40e8e5:	or     ecx,DWORD PTR [esi+0x55]
  40e8e8:	xor    eax,0xda44f462
  40e8ed:	imul   ecx,DWORD PTR [edx],0xfffffffb
  40e8f0:	sub    dh,BYTE PTR [eax]
  40e8f2:	cwde   
  40e8f3:	(bad)  
  40e8f5:	inc    edi
  40e8f6:	adc    al,0x98
  40e8f8:	mov    al,0x72
  40e8fa:	sub    bl,BYTE PTR [eax+0x78480973]
  40e900:	mov    esi,ds
  40e902:	arpl   cx,si
  40e904:	mov    al,ds:0xd912a64d
  40e909:	(bad)  
  40e90a:	cli    
  40e90b:	mov    dh,0xae
  40e90d:	xchg   edx,eax
  40e90e:	sub    eax,0x9f625599
  40e913:	arpl   dx,di
  40e915:	xchg   edi,eax
  40e916:	push   edx
  40e917:	add    esi,DWORD PTR [eax]
  40e919:	push   eax
  40e91a:	xchg   edi,eax
  40e91b:	int3   
  40e91c:	setl   ah
  40e91f:	jge    0x40e91a
  40e921:	imul   edi,esi,0x74
  40e924:	xor    ch,BYTE PTR [eax+0x304eb868]
  40e92a:	push   edi
  40e92b:	xchg   ebp,eax
  40e92c:	je     0x40e941
  40e92e:	arpl   WORD PTR gs:[esi],bp
  40e931:	mov    bl,bh
  40e933:	(bad)  
  40e934:	mov    ebx,0x40674b22
  40e939:	cmp    BYTE PTR [edx+0x15],ah
  40e93c:	loopne 0x40e90e
  40e93e:	out    0xd5,eax
  40e940:	xor    eax,DWORD PTR [edi+0x365df6b4]
  40e946:	out    0xc2,al
  40e948:	in     eax,dx
  40e949:	and    DWORD PTR [esi+0x1c],0xffffffa8
  40e94d:	jle    0x40e9a6
  40e94f:	mov    al,ds:0x54be9f69
  40e954:	xchg   ebx,eax
  40e955:	inc    ecx
  40e956:	loope  0x40e8fa
  40e958:	mov    ds:0xe6622c,eax
  40e95d:	dec    ebx
  40e95e:	ds ins BYTE PTR es:[edi],dx
  40e960:	femms  
  40e962:	push   esp
  40e963:	cmp    ebp,DWORD PTR [esi+0x7a89e08f]
  40e969:	jmp    0x40e904
  40e96b:	data16 test BYTE PTR [eax],0xc5
  40e96f:	or     al,0x8e
  40e971:	fild   DWORD PTR [edx-0x42]
  40e974:	scas   eax,DWORD PTR es:[edi]
  40e975:	fwait
  40e976:	nop
  40e977:	js     0x40e9b1
  40e979:	jge    0x40e92a
  40e97b:	mov    DWORD PTR [edx+edi*8-0x58],ebx
  40e97f:	pusha  
  40e980:	pop    esp
  40e981:	mov    ebp,0xa482845
  40e986:	inc    esi
  40e987:	xlat   BYTE PTR ds:[ebx]
  40e988:	push   DWORD PTR [ebx+0x95dda6b]
  40e98e:	mov    eax,ds:0x537eb8dd
  40e993:	dec    DWORD PTR [edi-0x1aef25a3]
  40e999:	pop    edi
  40e99a:	jmp    0xab2c:0x77b85eda
  40e9a1:	or     DWORD PTR [eax+0x336c9fbe],esp
  40e9a7:	sub    ecx,edx
  40e9a9:	push   ds
  40e9aa:	or     ecx,DWORD PTR [esi]
  40e9ac:	pop    es
  40e9ad:	fmul   DWORD PTR [edx+0xf]
  40e9b0:	inc    edi
  40e9b1:	xor    DWORD PTR [edx+0x74],0xffffffaf
  40e9b5:	inc    esi
  40e9b6:	popa   
  40e9b7:	inc    edi
  40e9b8:	push   0x79
  40e9ba:	scas   eax,DWORD PTR es:[edi]
  40e9bb:	out    0x24,al
  40e9bd:	or     al,0xa7
  40e9bf:	adc    al,0x2c
  40e9c1:	xor    edx,DWORD PTR [eax]
  40e9c3:	adc    al,0xfc
  40e9c5:	adc    BYTE PTR [esi+0x3c],dl
  40e9c8:	dec    ebx
  40e9c9:	in     eax,dx
  40e9ca:	adc    DWORD PTR [edi-0x7f],eax
  40e9cd:	and    ah,BYTE PTR ds:0x2991e322
  40e9d3:	lds    si,DWORD PTR [eax+0x7a]
  40e9d7:	aad    0xed
  40e9d9:	push   cs
  40e9da:	dec    ebx
  40e9db:	ret    0x1d8f
  40e9de:	mov    ebx,ebx
  40e9e0:	add    eax,0x328d0049
  40e9e5:	loop   0x40ea5d
  40e9e7:	rcr    DWORD PTR [edx-0x4108df84],cl
  40e9ed:	sub    BYTE PTR [eax+0xf],bh
  40e9f0:	mov    al,0xe4
  40e9f2:	aas    
  40e9f3:	pop    esp
  40e9f4:	push   ebx
  40e9f5:	sbb    cl,BYTE PTR [ecx+0x50491b9c]
  40e9fb:	jne    0x40e9d3
  40e9fd:	push   ebx
  40e9fe:	fs cmc 
  40ea00:	mov    ebp,ss
  40ea02:	in     al,0xc5
  40ea04:	inc    esp
  40ea05:	xchg   esi,eax
  40ea06:	(bad)  
  40ea07:	fimul  WORD PTR [esi-0x8]
  40ea0a:	lods   al,BYTE PTR ds:[esi]
  40ea0b:	add    eax,0xe0a82b45
  40ea10:	ja     0x40ea17
  40ea12:	pop    ds
  40ea13:	mov    al,ds:0x39f4dc39
  40ea18:	dec    ebp
  40ea19:	stc    
  40ea1a:	rol    BYTE PTR [ebx],0x72
  40ea1d:	or     edx,edi
  40ea1f:	mov    ds:0x4f8ffbb7,eax
  40ea24:	xchg   esi,eax
  40ea25:	test   edi,eax
  40ea27:	dec    BYTE PTR [esp+ebx*8]
  40ea2a:	dec    ebp
  40ea2b:	jae    0x40ea28
  40ea2d:	adc    BYTE PTR [ecx+0x1d],0x94
  40ea31:	xchg   esi,eax
  40ea32:	mov    esp,0x5eef78c7
  40ea37:	std    
  40ea38:	fldenv [esi-0x4c]
  40ea3b:	lahf   
  40ea3c:	mov    ebp,DWORD PTR ds:0xdeeb2636
  40ea42:	dec    ebx
  40ea43:	stc    
  40ea44:	mov    ebx,0xf2534e7a
  40ea49:	add    BYTE PTR [edi+0x57],0x88
  40ea4d:	test   BYTE PTR [di],dh
  40ea50:	jb     0x40ea00
  40ea52:	mov    ebx,0xa6cea8e5
  40ea57:	test   BYTE PTR [eax],ch
  40ea59:	lods   al,BYTE PTR ds:[esi]
  40ea5a:	data16 retfw 
  40ea5d:	call   0x9495:0xfe7c260c
  40ea64:	mov    esp,DWORD PTR [ebx]
  40ea66:	sbb    ecx,esi
  40ea68:	outs   dx,DWORD PTR ds:[esi]
  40ea69:	stc    
  40ea6a:	push   eax
  40ea6b:	pop    eax
  40ea6c:	lea    esi,[ebp-0x6eb5575b]
  40ea72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea73:	push   0xffffffd0
  40ea75:	test   eax,0x6bb0111
  40ea7a:	inc    ebp
  40ea7b:	ret    
  40ea7c:	into   
  40ea7d:	cmp    eax,0xcffd6da1
  40ea82:	je     0x40eab0
  40ea84:	das    
  40ea85:	dec    ebp
  40ea86:	add    esp,DWORD PTR [edi]
  40ea88:	inc    sp
  40ea8a:	fistp  DWORD PTR [ebx-0x43]
  40ea8d:	add    DWORD PTR [ebx-0x1bb4de7b],ebx
  40ea93:	push   es
  40ea94:	cmp    edi,ebp
  40ea96:	add    BYTE PTR [ebx+0x97c475c],cl
  40ea9c:	pop    eax
  40ea9d:	fsubr  QWORD PTR [edx-0x66]
  40eaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaa1:	sbb    al,0x2f
  40eaa3:	push   es
  40eaa4:	adc    bh,BYTE PTR [ebp-0x80]
  40eaa7:	enter  0x8468,0xe7
  40eaab:	push   edi
  40eaac:	dec    ebp
  40eaad:	inc    edi
  40eaae:	mov    ah,0x1
  40eab0:	leave  
  40eab1:	jbe    0x40ea36
  40eab3:	mov    bl,0xf8
  40eab5:	icebp  
  40eab6:	and    al,0x9a
  40eab8:	xchg   ecx,eax
  40eab9:	rcr    DWORD PTR [eax],1
  40eabb:	jae    0x40eb23
  40eabd:	scas   al,BYTE PTR es:[edi]
  40eabe:	mov    al,0x2a
  40eac0:	add    eax,ecx
  40eac2:	sub    ch,0x1c
  40eac5:	jno    0x40eb26
  40eac7:	push   esp
  40eac8:	inc    edx
  40eac9:	aaa    
  40eaca:	mov    ds:0x260c8ed9,al
  40eacf:	or     BYTE PTR [edi],ch
  40ead1:	(bad)  
  40ead3:	mov    ebp,0x5e0ddb71
  40ead8:	mov    bl,0x5e
  40eada:	repz mov cl,0x96
  40eadd:	add    bl,BYTE PTR [eax+0x29]
  40eae0:	test   DWORD PTR [ecx-0x76],edx
  40eae3:	push   esi
  40eae4:	repnz std 
  40eae6:	xor    cl,al
  40eae8:	jne    0x40eb0e
  40eaea:	dec    ecx
  40eaeb:	add    edx,DWORD PTR [ebx+0x5dadb3aa]
  40eaf1:	and    al,0xfc
  40eaf3:	aas    
  40eaf4:	test   BYTE PTR [esi-0x2d],0x22
  40eaf8:	sub    bh,BYTE PTR ds:0x71980d74
  40eafe:	mov    dh,0x81
  40eb00:	in     al,dx
  40eb01:	pushf  
  40eb02:	(bad)  
  40eb03:	icebp  
  40eb04:	dec    edx
  40eb05:	add    eax,0x744bc7ab
  40eb0a:	popa   
  40eb0b:	ins    BYTE PTR es:[edi],dx
  40eb0c:	adc    BYTE PTR [esp+ecx*1+0x218e5d5b],0xc8
  40eb14:	push   0xffffffd8
  40eb16:	setb   BYTE PTR [ebx-0x21]
  40eb1a:	xchg   ebp,eax
  40eb1b:	in     al,dx
  40eb1c:	out    dx,eax
  40eb1d:	retf   
  40eb1e:	cmp    BYTE PTR [ecx],al
  40eb20:	cs xchg ah,ch
  40eb23:	fidiv  DWORD PTR [esi]
  40eb25:	pop    ds
  40eb26:	cli    
  40eb27:	leave  
  40eb28:	sbb    al,0x73
  40eb2a:	leave  
  40eb2b:	jae    0x40eb27
  40eb2d:	xor    dh,BYTE PTR [esi]
  40eb2f:	push   ebx
  40eb30:	xor    al,0xb5
  40eb32:	sti    
  40eb33:	pop    esp
  40eb34:	aad    0x3d
  40eb36:	push   ss
  40eb37:	retf   
  40eb38:	test   al,0x39
  40eb3a:	ror    DWORD PTR [edx],1
  40eb3c:	aas    
  40eb3d:	outs   dx,DWORD PTR ds:[esi]
  40eb3e:	les    edx,FWORD PTR [edx+0x4b51b9b6]
  40eb44:	add    BYTE PTR [eax+eax*4-0x74b0bd24],dh
  40eb4b:	inc    ebx
  40eb4c:	pop    ecx
  40eb4d:	adc    ebp,DWORD PTR [edx]
  40eb4f:	or     eax,DWORD PTR [eax+esi*4+0x197ec52]
  40eb56:	cmp    cl,bl
  40eb58:	fidivr DWORD PTR [edi-0x58fc75f3]
  40eb5e:	inc    eax
  40eb5f:	cmp    al,0xb1
  40eb61:	sbb    BYTE PTR [edx-0x1d1a68cc],ch
  40eb67:	xchg   edx,eax
  40eb68:	dec    ecx
  40eb69:	lods   eax,DWORD PTR ds:[esi]
  40eb6a:	cmp    dl,BYTE PTR [edi+esi*8]
  40eb6d:	inc    ecx
  40eb6e:	lahf   
  40eb6f:	cwde   
  40eb70:	xor    al,0x4
  40eb72:	iret   
  40eb73:	jb     0x40eb0c
  40eb75:	mov    ecx,0xf9c7609c
  40eb7a:	ror    eax,0x9d
  40eb7d:	add    BYTE PTR [eax+0x43],bh
  40eb80:	in     eax,0x29
  40eb82:	(bad)  
  40eb83:	fdivrp st(2),st
  40eb85:	sub    eax,0xbcd49328
  40eb8a:	xchg   ebp,eax
  40eb8b:	xor    al,0x35
  40eb8d:	je     0x40eb6f
  40eb8f:	imul   BYTE PTR [edx+ecx*2]
  40eb92:	sub    DWORD PTR [esi+ecx*2+0x77],0x44
  40eb97:	or     al,ch
  40eb99:	ins    DWORD PTR es:[edi],dx
  40eb9a:	cmp    bl,BYTE PTR es:[edx-0x6c]
  40eb9e:	outs   dx,DWORD PTR ss:[esi]
  40eba0:	jno    0x40ebf5
  40eba2:	inc    ebx
  40eba3:	out    0xec,al
  40eba5:	test   DWORD PTR [edi+edi*1-0x1e6e6b19],0xc535172d
  40ebb0:	push   es
  40ebb1:	sbb    BYTE PTR [ecx-0x4d214bf4],ch
  40ebb7:	jecxz  0x40eb85
  40ebb9:	hlt    
  40ebba:	mov    ch,0x61
  40ebbc:	ins    BYTE PTR es:[edi],dx
  40ebbd:	pop    ebx
  40ebbe:	add    al,0x6c
  40ebc0:	lds    edx,FWORD PTR [ebp-0x7704eeb]
  40ebc6:	outs   dx,BYTE PTR ds:[esi]
  40ebc7:	imul   ebx,DWORD PTR [ebp+ebp*1-0x79],0xffffffe6
  40ebcc:	jmp    0xc89c9491
  40ebd1:	push   0x3e
  40ebd3:	sub    ch,BYTE PTR [esi-0x2ea581c1]
  40ebd9:	(bad)
  40ebdd:	adc    BYTE PTR [esi+0x1fd6d331],dh
  40ebe3:	sub    dh,dh
  40ebe5:	or     eax,0x32f2ab77
  40ebeb:	pop    esp
  40ebec:	dec    ebp
  40ebed:	and    eax,0x80d8e321
  40ebf2:	pop    ebp
  40ebf3:	jmp    0xfd3:0xa055b9bf
  40ebfa:	iret   
  40ebfb:	pop    ebx
  40ebfc:	outs   dx,BYTE PTR ds:[esi]
  40ebfd:	pusha  
  40ebfe:	outs   dx,BYTE PTR ds:[esi]
  40ebff:	scas   eax,DWORD PTR es:[edi]
  40ec00:	inc    edx
  40ec01:	or     DWORD PTR [esi+eiz*8+0x2],esi
  40ec05:	xor    edx,ecx
  40ec07:	cvttps2pi mm4,QWORD PTR [edi+0x52]
  40ec0b:	sub    eax,esp
  40ec0d:	(bad)  
  40ec0f:	adc    ecx,edx
  40ec11:	aaa    
  40ec12:	fstp   QWORD PTR [edi+eax*1-0x6ed692cf]
  40ec19:	or     eax,0xd19d7519
  40ec1e:	add    DWORD PTR [ebp-0x6009de32],0xcf96bed
  40ec28:	push   ecx
  40ec29:	out    0x2c,eax
  40ec2b:	push   ss
  40ec2c:	or     al,BYTE PTR [ecx]
  40ec2e:	mov    ds:0x55188ad8,al
  40ec33:	ret    
  40ec34:	stos   DWORD PTR es:[edi],eax
  40ec35:	sbb    edi,DWORD PTR [eax+0x1c]
  40ec38:	sub    BYTE PTR [ebp+edi*2+0x4b],bl
  40ec3c:	lds    ecx,FWORD PTR [ecx]
  40ec3e:	ja     0x40eca5
  40ec40:	sbb    ebx,DWORD PTR [ecx-0x23]
  40ec43:	call   0x6fc319c7
  40ec48:	sub    DWORD PTR [edi+0x59b14d3b],edi
  40ec4e:	les    edi,FWORD PTR [esi+0xc]
  40ec51:	fnstcw WORD PTR [edx+eax*8-0x14]
  40ec55:	mov    DWORD PTR [edx+ecx*8-0x3079bb64],ebp
  40ec5c:	sub    al,0x9b
  40ec5e:	or     al,0x51
  40ec60:	retf   0x246
  40ec63:	and    dl,0x67
  40ec66:	fwait
  40ec67:	pop    ebp
  40ec68:	and    al,0x4c
  40ec6a:	mov    esp,0x42f54560
  40ec6f:	add    al,bl
  40ec71:	xlat   BYTE PTR ds:[ebx]
  40ec72:	sbb    BYTE PTR [ecx+0x2e],bh
  40ec75:	add    al,BYTE PTR [edi]
  40ec77:	inc    ebx
  40ec78:	xchg   esi,eax
  40ec79:	xchg   ebx,eax
  40ec7a:	cmp    dh,BYTE PTR [esi]
  40ec7c:	js     0x40ebff
  40ec7e:	xchg   esp,eax
  40ec7f:	xchg   ebp,eax
  40ec80:	push   edx
  40ec81:	test   BYTE PTR [ebp+eiz*4+0x30],bl
  40ec85:	xor    DWORD PTR cs:[edi+0x12],edx
  40ec89:	or     eax,0x4ba34756
  40ec8e:	stc    
  40ec8f:	aad    0xa
  40ec91:	push   ds
  40ec92:	les    ebx,FWORD PTR [edx-0x2e]
  40ec95:	jno    0x40ec54
  40ec97:	(bad)  
  40ec98:	lahf   
  40ec99:	push   eax
  40ec9a:	mov    al,ds:0x510bacac
  40ec9f:	pop    edi
  40eca0:	in     eax,0x1e
  40eca2:	dec    ebp
  40eca3:	leave  
  40eca4:	call   FWORD PTR [ebp-0x2f884c19]
  40ecaa:	repz repnz push edi
  40ecad:	jp     0x40ed0e
  40ecaf:	xchg   edi,eax
  40ecb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecb1:	rcr    DWORD PTR [esp+esi*1-0x52],cl
  40ecb5:	xchg   ebx,eax
  40ecb6:	lds    edx,FWORD PTR [eax+0x5]
  40ecb9:	icebp  
  40ecba:	lods   al,BYTE PTR ds:[esi]
  40ecbb:	outs   dx,BYTE PTR ds:[esi]
  40ecbc:	neg    BYTE PTR [ebp-0x15234824]
  40ecc2:	sub    al,bh
  40ecc4:	adc    al,0x29
  40ecc6:	(bad)  
  40ecc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc9:	lods   al,BYTE PTR ds:[esi]
  40ecca:	sbb    dl,BYTE PTR [eax]
  40eccc:	sub    DWORD PTR [eax-0x50],esi
  40eccf:	cmc    
  40ecd0:	sub    esp,DWORD PTR [eax]
  40ecd2:	popf   
  40ecd3:	fld    DWORD PTR [eax+ebp*2+0x4a]
  40ecd7:	add    edi,edx
  40ecd9:	mov    DWORD PTR ds:0x42d018,0x356c
  40ece3:	cmp    DWORD PTR [eax],edi
  40ece5:	mov    DWORD PTR ds:0x42c000,0x4c8
  40ecef:	je     0x40ed10
  40ecf5:	mov    DWORD PTR ds:0x429010,0x639a
  40ecff:	mov    eax,DWORD PTR [eax]
  40ed01:	mov    DWORD PTR ds:0x429004,0x7615
  40ed0b:	jmp    0x4113c1
  40ed10:	mov    eax,ds:0x42d008
  40ed15:	mov    eax,DWORD PTR [ebp+0x18]
  40ed18:	cmp    eax,esi
  40ed1a:	mov    DWORD PTR ds:0x429000,0x39ad
  40ed24:	jne    0x40ed48
  40ed2a:	mov    DWORD PTR ds:0x429004,0x5d12
  40ed34:	push   0xf89c85b8
  40ed39:	mov    DWORD PTR ds:0x42a008,0x6b01
  40ed43:	jmp    0x4113b0
  40ed48:	mov    esi,DWORD PTR [ebp+0x18]
  40ed4b:	mov    eax,0x4a6b
  40ed50:	mov    eax,0xf89c85bb
  40ed55:	cmp    esi,eax
  40ed57:	mov    DWORD PTR ds:0x42900c,0x4643
  40ed61:	jne    0x4113a0
  40ed67:	mov    eax,DWORD PTR [ebp+0x10]
  40ed6a:	xor    eax,ecx
  40ed6c:	mov    DWORD PTR ds:0x42a004,0x11
  40ed76:	cmp    DWORD PTR ds:0x42a004,0x0
  40ed7d:	je     0x40edd0
  40ed83:	cmp    DWORD PTR ds:0x42a004,0x20
  40ed8a:	jne    0x40edb2
  40ed90:	push   0x42e134
  40ed95:	push   0x7ef6
  40ed9a:	push   0x57ca
  40ed9f:	push   0x2ef4
  40eda4:	push   DWORD PTR [ebp-0x1c]
  40eda7:	push   0x33b6
  40edac:	call   DWORD PTR ds:0x42ed67
  40edb2:	xor    esi,esi
  40edb4:	xor    esi,DWORD PTR ds:0x42a004
  40edba:	dec    esi
  40edbb:	mov    DWORD PTR ds:0x42a004,esi
  40edc1:	jmp    0x40ed76
  40edc6:	adc    DWORD PTR ds:0x42c01c,0x56a2
  40edd0:	add    eax,edx
  40edd2:	movzx  esi,WORD PTR ds:0x42d010
  40edd9:	xor    esi,DWORD PTR ds:0x429018
  40eddf:	mov    DWORD PTR ds:0x42d010,esi
  40ede5:	mov    DWORD PTR [ebp-0x18],eax
  40ede8:	mov    eax,ds:0x42c014
  40eded:	xor    DWORD PTR ds:0x42901c,eax
  40edf3:	mov    eax,DWORD PTR [ebp+0xc]
  40edf6:	or     DWORD PTR ds:0x42a014,ecx
  40edfc:	mov    esi,DWORD PTR [ebp-0x8]
  40edff:	or     DWORD PTR ds:0x42c00c,0x42c010
  40ee09:	xor    eax,ecx
  40ee0b:	mov    DWORD PTR ds:0x42b014,0x6609
  40ee15:	add    eax,edx
  40ee17:	mov    DWORD PTR ds:0x42901c,0x1324
  40ee21:	imul   eax,DWORD PTR [esi]
  40ee24:	dec    esi
  40ee25:	mov    esi,DWORD PTR [ebp+0x8]
  40ee28:	and    DWORD PTR ds:0x42a01c,0x42d000
  40ee32:	xor    esi,ecx
  40ee34:	adc    DWORD PTR ds:0x42d01c,0x429024
  40ee3e:	add    esi,edx
  40ee40:	cmp    esi,eax
  40ee42:	mov    eax,0x6259
  40ee47:	mov    eax,DWORD PTR [ebp-0x4]
  40ee4a:	push   ebx
  40ee4b:	mov    DWORD PTR ds:0x42d014,0x783b
  40ee55:	je     0x40eecd
  40ee5b:	add    DWORD PTR ds:0x42d008,0x6ad8
  40ee65:	mov    esi,DWORD PTR [ebp-0x18]
  40ee68:	add    DWORD PTR [eax],esi
  40ee6a:	mov    DWORD PTR ds:0x429024,0x10
  40ee74:	cmp    DWORD PTR ds:0x429024,0x0
  40ee7b:	je     0x40eead
  40ee81:	cmp    DWORD PTR ds:0x429024,0x1d
  40ee88:	jne    0x40ee94
  40ee8e:	call   DWORD PTR ds:0x42ed6b
  40ee94:	xor    eax,eax
  40ee96:	add    eax,DWORD PTR ds:0x429024
  40ee9c:	dec    eax
  40ee9d:	mov    ds:0x429024,eax
  40eea2:	jmp    0x40ee74
  40eea7:	sub    eax,DWORD PTR ds:0x42a010
  40eead:	mov    eax,DWORD PTR [ebp-0x4]
  40eeb0:	neg    esi
  40eeb2:	mov    esi,DWORD PTR [ebp+0xc]
  40eeb5:	sub    DWORD PTR ds:0x42b000,0x42c004
  40eebf:	xor    esi,ecx
  40eec1:	add    esi,edx
  40eec3:	imul   esi,DWORD PTR [eax]
  40eec6:	mov    DWORD PTR [eax],esi
  40eec8:	jmp    0x40eed2
  40eecd:	mov    esi,DWORD PTR [ebp+0x14]
  40eed0:	xor    DWORD PTR [eax],esi
  40eed2:	mov    eax,DWORD PTR [ebp-0x4]
  40eed5:	mov    edi,DWORD PTR [ebp+0x10]
  40eed8:	xor    edi,ecx
  40eeda:	mov    esi,0xffcd8d20
  40eedf:	mov    ebx,esi
  40eee1:	sub    ebx,edi
  40eee3:	add    DWORD PTR [eax],ebx
  40eee5:	mov    eax,DWORD PTR [ebp-0x4]
  40eee8:	mov    edi,DWORD PTR [ebp-0x8]
  40eeeb:	add    edi,DWORD PTR [eax]
  40eeed:	mov    DWORD PTR [ebp-0x8],edi
  40eef0:	mov    eax,DWORD PTR [ebp+0xc]
  40eef3:	mov    edi,DWORD PTR [ebp+0xc]
  40eef6:	xor    edi,ecx
  40eef8:	xor    eax,ecx
  40eefa:	lea    eax,[eax+edi*1+0x64e5c0]
  40ef01:	mov    edi,DWORD PTR [ebp+0xc]
  40ef04:	xor    edi,ecx
  40ef06:	add    edi,edx
  40ef08:	imul   eax,edi
  40ef0b:	mov    edi,DWORD PTR [ebp+0xc]
  40ef0e:	xor    edi,ecx
  40ef10:	sub    edi,eax
  40ef12:	jmp    0x411286
  40ef17:	ror    DWORD PTR [ebx+ecx*8-0x5e],0xbb
  40ef1c:	xchg   ecx,eax
  40ef1d:	mov    esi,ebx
  40ef1f:	pop    ebp
  40ef20:	jmp    0x40ef7d
  40ef22:	dec    eax
  40ef23:	aas    
  40ef24:	inc    ebx
  40ef25:	xor    dl,al
  40ef27:	pusha  
  40ef28:	leave  
  40ef29:	jp     0x40efa5
  40ef2b:	adc    ebx,DWORD PTR [edi+0x7a]
  40ef2e:	jp     0x40ef5a
  40ef30:	and    BYTE PTR [ecx-0x67b6fff],bh
  40ef36:	lea    ebx,[ebp-0x4c5b471f]
  40ef3c:	in     al,dx
  40ef3d:	xchg   esp,eax
  40ef3e:	rcr    DWORD PTR [eax+0x6f],cl
  40ef41:	mov    ah,BYTE PTR [ebx-0x37cb98e7]
  40ef47:	out    dx,al
  40ef48:	(bad)  
  40ef49:	pop    ebp
  40ef4a:	out    dx,eax
  40ef4b:	stos   DWORD PTR es:[edi],eax
  40ef4c:	jae    0x40eef2
  40ef4e:	mov    dl,BYTE PTR [esi-0x74]
  40ef51:	int3   
  40ef52:	add    eax,0xcbd71356
  40ef57:	scas   al,BYTE PTR es:[edi]
  40ef58:	mov    ah,0x2e
  40ef5a:	dec    ebx
  40ef5b:	sub    DWORD PTR [edx],edx
  40ef5d:	xchg   edx,eax
  40ef5e:	shl    DWORD PTR [edx],1
  40ef60:	iret   
  40ef61:	mov    ch,0x90
  40ef63:	jle    0x40efaf
  40ef65:	inc    ecx
  40ef66:	pop    edi
  40ef67:	test   eax,0x189de3e2
  40ef6c:	push   esi
  40ef6d:	push   edi
  40ef6e:	mov    BYTE PTR [ecx-0x6d],bh
  40ef71:	sbb    dl,dh
  40ef73:	cmp    BYTE PTR [edx-0x70f7df2c],bl
  40ef79:	xchg   ebx,eax
  40ef7a:	dec    ebp
  40ef7b:	test   bl,cl
  40ef7d:	ror    BYTE PTR [edx+0x19],1
  40ef80:	pop    edi
  40ef81:	mov    ebx,0x26f34f87
  40ef86:	sub    DWORD PTR [ebx-0x47],edx
  40ef89:	lahf   
  40ef8a:	pop    ecx
  40ef8b:	adc    eax,0xd380ac54
  40ef90:	sti    
  40ef91:	push   es
  40ef92:	fwait
  40ef93:	pop    edi
  40ef94:	cs xor cl,ah
  40ef97:	dec    ebx
  40ef98:	js     0x40ef95
  40ef9a:	sbb    esi,esp
  40ef9c:	sahf   
  40ef9d:	stc    
  40ef9e:	shr    DWORD PTR [ebp-0x1],0x65
  40efa2:	jo     0x40ef76
  40efa4:	scas   al,BYTE PTR es:[edi]
  40efa5:	mov    DWORD PTR [edx+ebp*1-0x3338ffbe],ecx
  40efac:	mov    ds:0x5a382ef,ax
  40efb2:	xor    edx,esp
  40efb4:	jmp    0x40f026
  40efb6:	xor    eax,0x63931fbf
  40efbb:	pop    ebx
  40efbc:	sbb    bh,BYTE PTR [edi]
  40efbe:	adc    ch,ch
  40efc0:	js     0x40ef73
  40efc2:	xchg   esp,eax
  40efc3:	mov    ds:0xa7438884,eax
  40efc8:	les    ebx,FWORD PTR [eax+0x5e349f65]
  40efce:	adc    ebp,eax
  40efd0:	mov    ecx,0xf5d95084
  40efd5:	xor    DWORD PTR [ebx+0x31fabdfc],ecx
  40efdb:	daa    
  40efdc:	popa   
  40efdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efde:	stos   DWORD PTR es:[edi],eax
  40efdf:	out    0x77,al
  40efe1:	arpl   sp,si
  40efe3:	imul   edi,DWORD PTR [ecx],0x7402ce72
  40efe9:	nop
  40efea:	(bad)  
  40efeb:	pop    eax
  40efec:	arpl   WORD PTR [eax],bp
  40efee:	call   0xadb1:0xbfa404c1
  40eff5:	push   esp
  40eff6:	outs   dx,DWORD PTR ds:[esi]
  40eff7:	enter  0xda08,0x21
  40effb:	data16 lods al,BYTE PTR ds:[esi]
  40effd:	jbe    0x40f04a
  40efff:	addr16 cmc 
  40f001:	mov    ch,BYTE PTR [esi-0x35457d83]
  40f007:	xor    cl,ch
  40f009:	adc    eax,0xc0d64d56
  40f00e:	mov    al,0x8a
  40f010:	div    BYTE PTR [ebp+0x49]
  40f013:	data16 ja 0x40f002
  40f016:	fneni(8087 only) 
  40f018:	cmp    DWORD PTR [ecx-0x39d90ed2],esi
  40f01e:	pop    ss
  40f01f:	dec    eax
  40f020:	xor    eax,DWORD PTR [edx+0x30b014d6]
  40f026:	mov    dh,bl
  40f028:	jle    0x40f03c
  40f02a:	sbb    cl,BYTE PTR [esi+0x72]
  40f02d:	mov    ebx,0xb217c89
  40f032:	aam    0xe1
  40f034:	xor    al,0xb3
  40f036:	mov    dh,0xad
  40f038:	jmp    0x40f06b
  40f03a:	cmp    DWORD PTR [ebx-0x6ebcef7e],esp
  40f040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f041:	xor    BYTE PTR [esi+0x75858968],bl
  40f047:	test   al,0x9f
  40f049:	shl    BYTE PTR [edx+0x31a351d5],1
  40f04f:	xor    al,BYTE PTR [ecx-0x53]
  40f052:	call   0xd2c9:0x3a15654f
  40f059:	popa   
  40f05a:	jne    0x40f0a1
  40f05c:	call   0xdf1f:0x13ad9c64
  40f063:	fcomi  st,st(1)
  40f065:	push   0x5
  40f067:	aad    0x94
  40f069:	retf   0xae5c
  40f06c:	xor    bl,BYTE PTR [eax-0x647bb336]
  40f072:	fsubr  DWORD PTR [edi-0x61ec3b73]
  40f078:	cs push 0xffffff96
  40f07b:	sub    al,0x28
  40f07d:	lods   eax,DWORD PTR ds:[esi]
  40f07e:	test   eax,edi
  40f080:	in     al,dx
  40f081:	jl     0x40f055
  40f083:	inc    ebp
  40f084:	fcmovne st,st(0)
  40f086:	fld    QWORD PTR [edx+0x48a8b27e]
  40f08c:	rcl    DWORD PTR [ebp-0xf],1
  40f08f:	frstor [eax]
  40f091:	(bad)  
  40f092:	nop
  40f093:	and    eax,0x3d9882d5
  40f098:	(bad)  
  40f09a:	pushf  
  40f09b:	cmp    ch,BYTE PTR [ebx-0x3e]
  40f09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f09f:	mov    ecx,?
  40f0a1:	bound  esp,QWORD PTR [edi+ebp*4-0x32]
  40f0a5:	ins    BYTE PTR es:[edi],dx
  40f0a6:	lods   eax,DWORD PTR ds:[esi]
  40f0a7:	cmc    
  40f0a8:	mov    bh,0x2
  40f0aa:	jo     0x40f097
  40f0ac:	imul   edx,DWORD PTR [edi-0xdb5ed6f],0xffffffe3
  40f0b3:	cmp    eax,0x67dc86e1
  40f0b8:	sbb    dl,BYTE PTR [esi]
  40f0ba:	ret    0xfaeb
  40f0bd:	daa    
  40f0be:	push   ds
  40f0bf:	(bad)  
  40f0c1:	lock or eax,0x8f4dc6c7
  40f0c7:	inc    eax
  40f0c8:	jle    0x40f0d4
  40f0ca:	push   edi
  40f0cb:	pop    ebp
  40f0cc:	and    al,0x3a
  40f0ce:	jg     0x40f09d
  40f0d0:	mov    bl,0x6c
  40f0d2:	addr16 (bad) 
  40f0d4:	xor    DWORD PTR [edx+0x3efbc873],ecx
  40f0da:	lods   al,BYTE PTR ds:[esi]
  40f0db:	or     ecx,esp
  40f0dd:	rcr    BYTE PTR [ebp+eiz*2-0x7969d875],cl
  40f0e4:	jl     0x40f075
  40f0e6:	and    DWORD PTR [esi],0x2f2617e9
  40f0ec:	enter  0xdc3d,0xe0
  40f0f0:	mov    esi,0xdaaae604
  40f0f5:	ret    
  40f0f6:	repz xchg esi,eax
  40f0f8:	sahf   
  40f0f9:	out    0x82,eax
  40f0fb:	or     eax,0x52fb80f3
  40f100:	adc    al,0x10
  40f102:	or     BYTE PTR [ebx],cl
  40f104:	les    edi,FWORD PTR [esi+ebp*8]
  40f107:	test   al,0x96
  40f109:	in     al,0xaa
  40f10b:	das    
  40f10c:	push   ecx
  40f10d:	popf   
  40f10e:	dec    ebx
  40f10f:	cmp    ch,ch
  40f111:	or     dh,bl
  40f113:	aam    0x6e
  40f115:	xchg   DWORD PTR [ecx+0x6b],ebp
  40f118:	push   ecx
  40f119:	pop    ebp
  40f11a:	inc    edx
  40f11b:	mov    BYTE PTR [eax+0x267055a6],al
  40f121:	inc    ecx
  40f122:	ins    BYTE PTR es:[edi],dx
  40f123:	cmp    BYTE PTR [ebp+0x40],cl
  40f126:	push   ebp
  40f127:	and    esp,ecx
  40f129:	out    dx,eax
  40f12a:	popf   
  40f12b:	jmp    0xbc627dd4
  40f130:	inc    eax
  40f131:	pop    edi
  40f132:	iret   
  40f133:	iret   
  40f134:	or     bl,ch
  40f136:	aam    0x29
  40f138:	dec    ebp
  40f139:	dec    esi
  40f13a:	cmp    edx,ebp
  40f13c:	sub    DWORD PTR [eax+ebx*1-0x5589f4dd],edi
  40f143:	mov    bh,0xa
  40f145:	mov    dl,0xc1
  40f147:	jecxz  0x40f1ab
  40f149:	fidiv  WORD PTR [esp+ebp*1+0x10]
  40f14d:	xchg   ebp,eax
  40f14e:	or     eax,eax
  40f150:	pop    ds
  40f151:	dec    edx
  40f152:	hlt    
  40f153:	pop    eax
  40f154:	inc    esi
  40f155:	ins    BYTE PTR es:[edi],dx
  40f156:	sbb    dl,BYTE PTR [ecx]
  40f158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f159:	inc    esp
  40f15a:	faddp  st(1),st
  40f15c:	fadd   QWORD PTR [edx-0x62]
  40f15f:	pop    ecx
  40f160:	mov    dl,0xa1
  40f162:	shr    cl,0x70
  40f165:	in     al,0x75
  40f167:	mov    ch,0xe6
  40f169:	popf   
  40f16a:	int3   
  40f16b:	mov    ebp,0x1ed7b341
  40f170:	pop    es
  40f171:	cmp    ch,ah
  40f173:	mov    al,ds:0xfa078a11
  40f178:	mov    al,ds:0xb2d9e025
  40f17d:	je     0x40f1cf
  40f17f:	and    ch,BYTE PTR [edi+0x7c]
  40f182:	(bad)  
  40f183:	mov    ds:0x33259dc4,eax
  40f188:	dec    ebx
  40f189:	jns    0x40f205
  40f18b:	push   edx
  40f18c:	sar    DWORD PTR [edi+0x2a],cl
  40f18f:	add    al,0x33
  40f191:	sar    DWORD PTR [ebx-0x51fdf47c],1
  40f197:	cmp    al,0x35
  40f199:	js     0x40f1a2
  40f19b:	push   0xffffff91
  40f19d:	xchg   edx,eax
  40f19e:	jle    0x40f156
  40f1a0:	sbb    BYTE PTR [edx+esi*4],al
  40f1a3:	or     eax,0x604044fb
  40f1a8:	inc    edx
  40f1a9:	into   
  40f1aa:	push   0xffffff94
  40f1ac:	pushf  
  40f1ad:	leave  
  40f1ae:	jmp    0x9922:0x7f7443bc
  40f1b5:	addr16 (bad) 
  40f1b7:	stos   DWORD PTR es:[edi],eax
  40f1b8:	mov    WORD PTR [esi+0x7c8985f0],gs
  40f1be:	aad    0xc1
  40f1c0:	mov    dh,0x5c
  40f1c2:	add    al,0xb6
  40f1c4:	pop    ds
  40f1c5:	mov    bh,0x84
  40f1c7:	mov    dh,0xeb
  40f1c9:	pop    ds
  40f1ca:	mov    ss,WORD PTR [edx+0x1d]
  40f1cd:	std    
  40f1ce:	daa    
  40f1cf:	(bad)  [ebp+edi*4+0x2bad5497]
  40f1d6:	sar    BYTE PTR [edi-0x49ecf9ea],1
  40f1dc:	rcl    BYTE PTR [eax],0x78
  40f1df:	sbb    cl,cl
  40f1e1:	popf   
  40f1e2:	jne    0x40f1cc
  40f1e4:	add    edi,DWORD PTR ds:0xda8378a0
  40f1ea:	dec    ecx
  40f1eb:	jge    0x40f1f8
  40f1ed:	imul   eax,DWORD PTR [ebx+0x61],0xcbd43d72
  40f1f4:	sbb    ah,0x65
  40f1f7:	outs   dx,BYTE PTR ds:[esi]
  40f1f8:	jg     0x40f1fa
  40f1fa:	lea    eax,[edi+0x78d73328]
  40f200:	adc    BYTE PTR [ebp+0x2c],bh
  40f203:	dec    ecx
  40f205:	jne    0x40f1a9
  40f207:	xor    DWORD PTR ds:0x4d7931b,ebp
  40f20d:	dec    ecx
  40f20e:	mov    edi,0xadef132f
  40f213:	cmp    edx,DWORD PTR [eax-0x3abba76f]
  40f219:	(bad)  
  40f21a:	loop   0x40f21f
  40f21c:	xor    edi,DWORD PTR [edx-0x5d759885]
  40f222:	daa    
  40f223:	adc    eax,DWORD PTR [edi]
  40f225:	retf   0x8d53
  40f228:	jbe    0x40f292
  40f22a:	add    ch,BYTE PTR [ebx-0x14]
  40f22d:	xor    DWORD PTR [ebx+0x32],esp
  40f230:	sbb    eax,0xaacc7b9c
  40f235:	sbb    eax,DWORD PTR [esi+0x7d]
  40f238:	xchg   esp,eax
  40f239:	cmp    cl,BYTE PTR [esi]
  40f23b:	(bad)  
  40f23c:	xchg   esp,eax
  40f23d:	xchg   ecx,edx
  40f23f:	fdivr  DWORD PTR [ebp+0x1f]
  40f242:	aas    
  40f243:	mov    ebp,0x2b7ac6d6
  40f248:	icebp  
  40f249:	mov    ds:0x859ea186,al
  40f24e:	rcl    DWORD PTR [edi],1
  40f250:	mov    eax,0x8254216c
  40f255:	xchg   dl,cl
  40f257:	shr    DWORD PTR [esi-0x1c],0xd3
  40f25b:	inc    ecx
  40f25c:	rcpps  xmm3,XMMWORD PTR [edi]
  40f25f:	adc    esi,DWORD PTR [esi+0x6b]
  40f262:	mov    edi,0x1efcb650
  40f267:	sub    eax,0x14130d88
  40f26c:	rol    DWORD PTR ds:0xb1f1d136,0x94
  40f273:	push   esp
  40f274:	jno    0x40f25f
  40f276:	and    BYTE PTR [ebp+0x1b],al
  40f279:	xor    esi,DWORD PTR [eax-0x6590faa6]
  40f27f:	lds    edx,FWORD PTR [edx+0x4f]
  40f282:	adc    eax,0xb696716b
  40f287:	daa    
  40f288:	int    0x5b
  40f28a:	push   es
  40f28b:	or     DWORD PTR [esi],0x7e70f778
  40f291:	mov    dl,0x11
  40f293:	sti    
  40f294:	jmp    0x40f301
  40f296:	pop    ss
  40f297:	or     eax,DWORD PTR [eax-0x59874928]
  40f29d:	ror    DWORD PTR [ebx+0x7a3e9476],cl
  40f2a3:	mov    eax,ds:0x5ffa23e8
  40f2a8:	xor    al,bh
  40f2aa:	dec    edx
  40f2ab:	scas   al,BYTE PTR es:[edi]
  40f2ac:	das    
  40f2ad:	mov    ebp,0x3ccdc86e
  40f2b2:	clc    
  40f2b3:	shl    ebp,cl
  40f2b5:	mov    ebp,0xda59021
  40f2ba:	or     al,0x57
  40f2bc:	mov    al,ds:0xf2f33e96
  40f2c1:	bound  edx,QWORD PTR [esi+0x38]
  40f2c4:	repz or al,0x3c
  40f2c7:	sbb    dh,BYTE PTR [ecx+0x6]
  40f2ca:	sbb    BYTE PTR ds:0xa5604e3e,cl
  40f2d0:	imul   ecx,DWORD PTR [edi],0x6bbb27e4
  40f2d6:	aad    0xae
  40f2d8:	lahf   
  40f2d9:	pop    es
  40f2da:	ins    DWORD PTR es:[edi],dx
  40f2db:	in     eax,0x61
  40f2dd:	push   eax
  40f2de:	push   es
  40f2df:	aaa    
  40f2e0:	xchg   ecx,eax
  40f2e1:	mov    esp,0x270daadd
  40f2e6:	or     eax,0x89e97997
  40f2eb:	push   es
  40f2ec:	int3   
  40f2ed:	scas   eax,DWORD PTR es:[edi]
  40f2ee:	imul   ebx,DWORD PTR [ebp+0x3c24cdf3],0x1
  40f2f5:	jecxz  0x40f36c
  40f2f7:	pop    esp
  40f2f8:	mov    cl,0x7c
  40f2fa:	loop   0x40f295
  40f2fc:	icebp  
  40f2fd:	test   al,0xc4
  40f2ff:	xor    BYTE PTR [ecx],0xb6
  40f302:	pop    ss
  40f303:	xor    al,0xb3
  40f305:	loope  0x40f336
  40f307:	repz adc eax,ecx
  40f30a:	into   
  40f30b:	scas   al,BYTE PTR es:[edi]
  40f30c:	int    0xbe
  40f30e:	test   eax,0xee0b8144
  40f313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f314:	(bad)  
  40f315:	and    bh,BYTE PTR gs:[esi-0x21]
  40f319:	sub    DWORD PTR [esi-0x73818e4f],esi
  40f31f:	retf   
  40f320:	push   es
  40f321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f322:	enter  0x41ef,0x4c
  40f326:	or     BYTE PTR [esi],ah
  40f328:	int    0x76
  40f32a:	jle    0x40f33b
  40f32c:	rcl    DWORD PTR [ecx],cl
  40f32e:	out    0x41,al
  40f330:	cmp    BYTE PTR [eax+0x42b9c002],ch
  40f336:	lods   al,BYTE PTR ds:[esi]
  40f337:	push   ecx
  40f338:	sbb    dl,BYTE PTR [edi-0xe]
  40f33b:	add    BYTE PTR [edx+0x2ef254d0],0x88
  40f342:	sti    
  40f343:	out    dx,al
  40f344:	iret   
  40f345:	(bad)  
  40f347:	test   DWORD PTR [edx-0x4f580330],0xb9716d1c
  40f351:	aam    0xa7
  40f353:	cmp    al,0x84
  40f355:	data16 stos BYTE PTR es:[edi],al
  40f357:	cli    
  40f358:	outs   dx,BYTE PTR ds:[esi]
  40f359:	cli    
  40f35a:	pop    es
  40f35b:	std    
  40f35c:	stc    
  40f35d:	push   edi
  40f35e:	in     eax,0xc0
  40f360:	mov    ebp,gs
  40f362:	loop   0x40f354
  40f364:	fstp   TBYTE PTR [ecx]
  40f366:	adc    DWORD PTR [ebp-0x4f],0x69d8d6f4
  40f36d:	sub    dh,dh
  40f36f:	out    0xbc,eax
  40f371:	jo     0x3c7ac4a8
  40f377:	push   ss
  40f378:	je     0x40f3d2
  40f37a:	sbb    BYTE PTR [ebx+0x69e4c261],bh
  40f380:	add    DWORD PTR ss:[esi-0x6a9a6e2],esp
  40f387:	(bad)  
  40f388:	push   edx
  40f389:	je     0x40f352
  40f38b:	xchg   BYTE PTR [edx],ah
  40f38d:	mov    ebx,0x68d6600f
  40f392:	fbstp  TBYTE PTR ds:[eax+eax*1-0x72]
  40f397:	ja     0x40f3ec
  40f399:	test   DWORD PTR [edi-0xf0d32d5],0xec8909cd
  40f3a3:	and    DWORD PTR [ebx],ecx
  40f3a5:	(bad)  [ecx+0x37546fd3]
  40f3ab:	loopne 0x40f3bc
  40f3ad:	or     eax,0x95e88ed5
  40f3b2:	mov    cl,0x1e
  40f3b4:	jmp    0xb7dca003
  40f3b9:	sti    
  40f3ba:	test   al,0xb7
  40f3bc:	in     eax,0xc5
  40f3be:	or     BYTE PTR [eax-0x57],ah
  40f3c1:	arpl   WORD PTR [ebx],di
  40f3c3:	fmulp  st(2),st
  40f3c5:	cmc    
  40f3c6:	sub    al,0xf9
  40f3c8:	mov    al,ds:0x31accb55
  40f3cd:	sub    esp,esi
  40f3cf:	ja     0x40f42a
  40f3d1:	add    dl,dl
  40f3d3:	sbb    ebx,ebx
  40f3d5:	jl     0x40f3c1
  40f3d7:	call   0xba2ddde
  40f3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3dd:	pop    ebx
  40f3de:	arpl   WORD PTR [ebp+ebp*4-0x80],sp
  40f3e2:	push   edi
  40f3e3:	push   ss
  40f3e4:	popa   
  40f3e5:	in     al,0x2c
  40f3e7:	int3   
  40f3e8:	jbe    0x40f3c2
  40f3ea:	mov    ds:0xc11a0c5c,eax
  40f3ef:	push   eax
  40f3f0:	cmp    eax,0x3f02a280
  40f3f5:	push   ss
  40f3f6:	ins    DWORD PTR es:[edi],dx
  40f3f7:	repnz fcomp DWORD PTR [eax+0x30]
  40f3fb:	int    0x22
  40f3fd:	push   ebx
  40f3fe:	push   ebp
  40f3ff:	inc    esi
  40f400:	jae    0x40f3e1
  40f402:	mov    dl,0x5
  40f404:	push   edx
  40f405:	inc    ebp
  40f406:	sub    ebx,DWORD PTR [ebp-0x6b]
  40f409:	sub    ah,bl
  40f40b:	cmp    DWORD PTR [edx],ebp
  40f40d:	dec    ebp
  40f40e:	cmp    eax,0x3933913b
  40f413:	out    dx,al
  40f414:	sbb    eax,0x471b89aa
  40f419:	push   eax
  40f41a:	dec    esi
  40f41b:	inc    esp
  40f41c:	pop    edi
  40f41d:	test   DWORD PTR [ecx+ebp*2-0x50],0x6082ca59
  40f425:	sub    al,0x50
  40f427:	adc    DWORD PTR [ebx-0x7ef2e010],edi
  40f42d:	les    ebx,FWORD PTR [ebx]
  40f42f:	ja     0x40f434
  40f431:	ins    BYTE PTR es:[edi],dx
  40f432:	lods   al,BYTE PTR ds:[esi]
  40f433:	jp     0x40f48d
  40f435:	xchg   ebx,eax
  40f436:	imul   eax,DWORD PTR [ecx+0xd],0xffffffc9
  40f43a:	mov    BYTE PTR [edi+0x32],0xe8
  40f43e:	scas   al,BYTE PTR es:[edi]
  40f43f:	test   bl,dl
  40f441:	or     DWORD PTR [ecx],0xf79447fe
  40f447:	adc    al,0x9f
  40f449:	scas   al,BYTE PTR es:[edi]
  40f44a:	cs pop edi
  40f44c:	or     DWORD PTR [edx+0x54424b92],ebp
  40f452:	dec    esp
  40f453:	pusha  
  40f454:	or     eax,0x916d2594
  40f459:	popa   
  40f45a:	jle    0x40f4c7
  40f45c:	js     0x40f45e
  40f45e:	push   cs
  40f45f:	sar    BYTE PTR ss:[ecx-0x2f531a35],cl
  40f466:	pop    es
  40f467:	adc    DWORD PTR [eax-0x21592a1b],ebx
  40f46d:	dec    ecx
  40f46e:	clc    
  40f46f:	push   ebx
  40f470:	sti    
  40f471:	lds    edx,FWORD PTR [esi]
  40f473:	gs dec edx
  40f475:	mov    eax,0xb90bb873
  40f47a:	jmp    0xf6823fdd
  40f47f:	inc    ecx
  40f480:	enter  0xa37d,0xac
  40f484:	mov    DWORD PTR [esi+0x96f0af2],ecx
  40f48a:	fld    QWORD PTR [edx+0x2]
  40f48d:	push   ss
  40f48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f48f:	test   DWORD PTR [edx-0x53bfc77c],ecx
  40f495:	dec    edi
  40f496:	ret    0xe01b
  40f499:	and    ecx,ecx
  40f49b:	daa    
  40f49c:	dec    edi
  40f49d:	mov    cl,0x37
  40f49f:	shr    BYTE PTR [edx-0x6621b293],cl
  40f4a5:	test   DWORD PTR [edi+eax*1-0x6c],ebx
  40f4a9:	dec    ebp
  40f4aa:	cs mov ah,ah
  40f4ad:	push   esi
  40f4ae:	out    0x58,al
  40f4b0:	lods   eax,DWORD PTR ds:[esi]
  40f4b1:	push   ebx
  40f4b2:	mov    DWORD PTR [edx],ebx
  40f4b4:	ja     0x40f531
  40f4b6:	jno    0x40f480
  40f4b8:	out    0xdf,al
  40f4ba:	push   esp
  40f4bb:	jp     0x40f504
  40f4bd:	mov    edx,ecx
  40f4bf:	les    eax,FWORD PTR ds:0x54f480ae
  40f4c5:	dec    esi
  40f4c6:	call   0xcd:0xd4cf4c48
  40f4cd:	mov    bh,cl
  40f4cf:	xor    al,0x80
  40f4d1:	sbb    eax,0x9d5fd56c
  40f4d6:	cwde   
  40f4d7:	out    dx,al
  40f4d8:	scas   eax,DWORD PTR es:[edi]
  40f4d9:	xchg   ebx,eax
  40f4da:	xchg   esp,ebx
  40f4dc:	nop
  40f4dd:	ins    DWORD PTR es:[edi],dx
  40f4de:	lahf   
  40f4df:	lods   al,BYTE PTR ds:[esi]
  40f4e0:	add    al,0x80
  40f4e2:	rol    DWORD PTR [ebx+0x62801ad7],1
  40f4e8:	push   ebp
  40f4e9:	push   0xc49a9a2e
  40f4ee:	dec    ecx
  40f4ef:	out    0x97,eax
  40f4f1:	into   
  40f4f2:	or     eax,DWORD PTR [ecx]
  40f4f4:	rcl    BYTE PTR [esi+0x1f],cl
  40f4f7:	jno    0x40f47d
  40f4f9:	push   esi
  40f4fa:	and    al,0x6f
  40f4fc:	mov    DWORD PTR [eax+0x148246cb],eax
  40f502:	ror    DWORD PTR [eax+0x10ebb446],0xe5
  40f509:	shl    DWORD PTR ds:0xba3cd21d,cl
  40f50f:	iret   
  40f510:	fisttp WORD PTR [ecx]
  40f512:	lock jnp 0x40f4fb
  40f515:	cmp    eax,0x756eacb2
  40f51a:	rcr    DWORD PTR [edi+0x5],0xf8
  40f51e:	pop    ecx
  40f51f:	push   edi
  40f520:	jno    0x40f55f
  40f522:	push   esp
  40f523:	shl    BYTE PTR [ecx],0x16
  40f526:	jp     0x40f4ae
  40f528:	pop    ss
  40f529:	adc    al,BYTE PTR [edi-0x25]
  40f52c:	jae    0x40f508
  40f52e:	push   cs
  40f52f:	clc    
  40f530:	and    BYTE PTR ds:0x51f21bc4,ch
  40f536:	fmul   st(0),st
  40f538:	mov    cl,0x2d
  40f53a:	nop
  40f53b:	imul   ecx,DWORD PTR [eax],0x9fe0ffd
  40f541:	out    0x3,eax
  40f543:	sub    al,0x39
  40f545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f546:	out    dx,eax
  40f547:	add    DWORD PTR [ebx-0xb],0xffffffff
  40f54b:	or     DWORD PTR [ecx-0x7056da13],0x3376e27c
  40f555:	pushf  
  40f556:	outs   dx,BYTE PTR ds:[esi]
  40f557:	xchg   BYTE PTR [eax-0x17],al
  40f55a:	int    0x9d
  40f55c:	add    dh,BYTE PTR [edi+0x39]
  40f55f:	mov    al,BYTE PTR [esi+esi*2+0x77]
  40f563:	loope  0x40f51e
  40f565:	(bad)
  40f569:	pop    es
  40f56a:	test   BYTE PTR [eax],ch
  40f56c:	jb     0x40f5cf
  40f56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56f:	and    ch,BYTE PTR [ebp+0x40f8749e]
  40f575:	repnz sbb BYTE PTR [edi-0x71],0xbf
  40f57a:	shl    BYTE PTR [edx+0x4d],0x2b
  40f57e:	pop    eax
  40f57f:	aaa    
  40f580:	inc    edi
  40f581:	jmp    0x838a4fa2
  40f586:	fisttp DWORD PTR [eax-0x5a]
  40f589:	call   0xd993:0x119f3802
  40f590:	mov    edi,0xb03b9cc9
  40f595:	sub    al,0xd6
  40f597:	and    dl,BYTE PTR [eax+eax*2-0x61]
  40f59b:	cdq    
  40f59c:	iret   
  40f59d:	jno    0x40f597
  40f59f:	scas   al,BYTE PTR es:[edi]
  40f5a0:	lods   al,BYTE PTR ds:[esi]
  40f5a1:	(bad)  [esi+0x15]
  40f5a4:	sub    esi,DWORD PTR [ecx+0x1c]
  40f5a7:	push   ebp
  40f5a8:	fcomp  DWORD PTR [ecx-0x79]
  40f5ab:	aaa    
  40f5ac:	push   ecx
  40f5ad:	jle    0x40f61a
  40f5af:	or     bl,BYTE PTR [ebp-0x5d7cc5b9]
  40f5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b6:	fs jl  0x40f5d6
  40f5b9:	pop    ss
  40f5ba:	in     al,dx
  40f5bb:	mov    eax,?
  40f5bd:	add    eax,0x480604ef
  40f5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5c3:	mov    ch,0x1f
  40f5c5:	push   cs
  40f5c6:	(bad)  
  40f5c7:	jns    0x40f614
  40f5c9:	push   esi
  40f5ca:	stc    
  40f5cb:	cmp    BYTE PTR [edx-0x4f],al
  40f5ce:	in     eax,0x26
  40f5d0:	mov    dl,0x2f
  40f5d2:	xor    eax,0x8f15a782
  40f5d7:	out    0x2f,eax
  40f5d9:	cdq    
  40f5da:	adc    al,0x75
  40f5dc:	cmp    al,0x91
  40f5de:	xor    dh,BYTE PTR [edx+0x13]
  40f5e1:	mov    BYTE PTR [esi],al
  40f5e3:	mov    ch,0xa3
  40f5e5:	xchg   ebp,eax
  40f5e6:	adc    BYTE PTR [edx+0x44d26a17],ch
  40f5ec:	je     0x40f638
  40f5ee:	faddp  st(7),st
  40f5f0:	cli    
  40f5f1:	push   es
  40f5f2:	mov    esp,0x26ea82b4
  40f5f7:	lods   al,BYTE PTR ds:[esi]
  40f5f8:	not    BYTE PTR [eax]
  40f5fa:	xor    esi,DWORD PTR ds:0x9d6852ee
  40f600:	nop
  40f601:	pop    eax
  40f602:	call   0x99df50ef
  40f607:	xor    al,0xf7
  40f609:	add    al,0x59
  40f60b:	ja     0x40f615
  40f60d:	add    DWORD PTR [ebx+ebp*8+0x7cd323ab],edi
  40f614:	cli    
  40f615:	or     eax,0x1685067
  40f61a:	pop    ecx
  40f61b:	jnp    0x40f612
  40f61d:	adc    cl,BYTE PTR [edx-0x7ca00364]
  40f623:	das    
  40f624:	mov    dl,0x40
  40f626:	repz adc ebx,0x7d
  40f62a:	shl    BYTE PTR [esi+0x7ca4a196],0xed
  40f631:	sahf   
  40f632:	les    eax,FWORD PTR [ebx+0x305b74d4]
  40f638:	mov    edx,0x421e5df0
  40f63d:	leave  
  40f63e:	xor    al,0x6a
  40f640:	sub    BYTE PTR [edx-0x3e],ch
  40f643:	int3   
  40f644:	les    edx,FWORD PTR [edx]
  40f646:	push   ds
  40f647:	sub    BYTE PTR [edi],ah
  40f649:	mov    BYTE PTR [edi+0x1d4212f7],ah
  40f64f:	rol    eax,0xe6
  40f652:	push   edx
  40f653:	rcr    BYTE PTR [ebx],0xd2
  40f656:	data16 lahf 
  40f658:	rcl    DWORD PTR [edx+0x5a30027f],cl
  40f65e:	push   esi
  40f65f:	adc    eax,0xfe1778ba
  40f664:	ja     0x40f6d6
  40f666:	dec    ebx
  40f667:	jae    0x40f5f5
  40f669:	es inc ebx
  40f66b:	xchg   ecx,eax
  40f66c:	dec    esi
  40f66d:	pop    ebx
  40f66e:	ret    
  40f66f:	fsubr  QWORD PTR ds:0x92a819e8
  40f675:	dec    esi
  40f676:	cmp    ecx,DWORD PTR [eax+0x2f]
  40f679:	mov    esp,0xa8217a84
  40f67e:	push   esi
  40f67f:	pop    eax
  40f680:	pop    edi
  40f681:	call   0xf64d0027
  40f686:	(bad)  
  40f687:	push   cs
  40f688:	das    
  40f689:	aam    0x8e
  40f68b:	(bad)  
  40f68c:	sub    al,0x11
  40f68e:	dec    ebp
  40f68f:	jmp    0x3e0c:0x7027eba0
  40f696:	retf   0xa83e
  40f699:	out    dx,al
  40f69a:	mov    BYTE PTR [ebp+0x5],al
  40f69d:	pop    es
  40f69e:	bound  ebp,QWORD PTR ds:0xe5a96cfd
  40f6a4:	mov    al,0x12
  40f6a6:	bound  esi,QWORD PTR [ebp-0x2a]
  40f6a9:	fwait
  40f6aa:	call   0xeb84dcf0
  40f6af:	out    dx,eax
  40f6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6b1:	dec    esp
  40f6b2:	popa   
  40f6b3:	loopne 0x40f670
  40f6b5:	jecxz  0x40f65f
  40f6b7:	jo     0x40f6d7
  40f6b9:	push   cs
  40f6ba:	call   0x2bf6:0xf59ab52c
  40f6c1:	jmp    0xa44474f7
  40f6c6:	inc    edx
  40f6c7:	pop    ss
  40f6c8:	dec    eax
  40f6c9:	sub    esi,DWORD PTR [ebp+0x13e6c2f8]
  40f6cf:	xlat   BYTE PTR ds:[ebx]
  40f6d0:	mov    ebx,DWORD PTR [esi+0x2e59b5a3]
  40f6d6:	clc    
  40f6d7:	aas    
  40f6d8:	retf   0x1f85
  40f6db:	leave  
  40f6dc:	mov    ds:0x27b92505,al
  40f6e1:	arpl   WORD PTR [edi+0x6d],dx
  40f6e4:	out    0x37,al
  40f6e6:	jge    0x40f764
  40f6e8:	sti    
  40f6e9:	pop    ecx
  40f6ea:	sahf   
  40f6eb:	cs push ds
  40f6ed:	pop    ss
  40f6ee:	ja     0x40f76a
  40f6f0:	in     al,0xf5
  40f6f2:	sti    
  40f6f3:	push   eax
  40f6f4:	mov    bh,0xa3
  40f6f6:	push   edx
  40f6f7:	cmp    eax,0xfc2b1d7c
  40f6fc:	call   0xf170:0xf4c71a37
  40f703:	cmc    
  40f704:	arpl   WORD PTR [esi+esi*2+0x64],sp
  40f708:	cdq    
  40f709:	push   es
  40f70a:	into   
  40f70b:	ins    BYTE PTR es:[edi],dx
  40f70c:	imul   ebp,edx,0x3140c931
  40f712:	outs   dx,DWORD PTR ds:[esi]
  40f713:	push   esp
  40f714:	shr    cl,cl
  40f716:	add    eax,eax
  40f718:	push   ss
  40f719:	mov    cl,0xbb
  40f71b:	arpl   WORD PTR [ebp+0x5b49175c],cx
  40f721:	xchg   edi,eax
  40f722:	scas   eax,DWORD PTR es:[edi]
  40f723:	lods   eax,DWORD PTR es:[esi]
  40f725:	loopne 0x40f715
  40f727:	outs   dx,BYTE PTR ds:[esi]
  40f728:	or     bl,BYTE PTR [ebx]
  40f72a:	fdivr  QWORD PTR [ebx+0x31]
  40f72d:	mov    DWORD PTR es:[ebx-0xa686c1e],ebx
  40f734:	jns    0x40f794
  40f736:	mov    ah,0x13
  40f738:	inc    BYTE PTR [edx]
  40f73a:	bound  ebp,QWORD PTR [edi+0x46]
  40f73d:	lock sub edi,eax
  40f740:	les    eax,FWORD PTR [esi+0x45a1fe5b]
  40f746:	add    eax,0xc6afd1bf
  40f74b:	cmp    DWORD PTR [ecx+ebp*8],edx
  40f74e:	mov    dl,0xc
  40f750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f751:	ja     0x40f798
  40f753:	nop
  40f754:	pop    ebx
  40f755:	dec    ebx
  40f756:	pusha  
  40f757:	ficomp DWORD PTR [edi]
  40f759:	lahf   
  40f75a:	add    BYTE PTR [ebp-0x39],bh
  40f75d:	ret    
  40f75e:	fs adc DWORD PTR ss:[esi-0x4],edx
  40f763:	mov    ?,WORD PTR [esp+esi*4+0x3c4a9e82]
  40f76a:	push   ecx
  40f76b:	repnz (bad) 
  40f76d:	jmp    DWORD PTR [edx-0x458439fe]
  40f773:	arpl   WORD PTR [edi],cx
  40f775:	clc    
  40f776:	(bad)  
  40f777:	push   ss
  40f778:	jge    0x40f751
  40f77a:	adc    DWORD PTR [ebp-0x2],edx
  40f77d:	mov    eax,ds:0x8faf160f
  40f782:	mov    ah,dh
  40f784:	sub    BYTE PTR [ebp-0x54],al
  40f787:	dec    esp
  40f788:	pop    ebx
  40f789:	gs push 0xffffff89
  40f78c:	cmp    dh,ah
  40f78e:	push   edi
  40f78f:	jmp    0x40f7d0
  40f791:	mov    eax,ds:0x6727a1fd
  40f796:	xchg   ebp,eax
  40f797:	inc    edx
  40f798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f799:	shl    BYTE PTR [ecx-0x66486bfd],cl
  40f79f:	cmp    al,BYTE PTR ds:0x142f0d88
  40f7a5:	test   al,0x45
  40f7a7:	popa   
  40f7a8:	(bad)  
  40f7a9:	sbb    al,0xd6
  40f7ab:	and    esp,DWORD PTR [edi+0x4e13a675]
  40f7b1:	jo     0x40f82e
  40f7b3:	adc    BYTE PTR [ebp-0x19],dh
  40f7b6:	jmp    0xe742:0x2d26c6a5
  40f7bd:	cmp    al,0x68
  40f7bf:	mov    esp,0x8c82792f
  40f7c4:	mov    dh,0x26
  40f7c6:	cmc    
  40f7c7:	(bad)  
  40f7c8:	scas   eax,DWORD PTR es:[edi]
  40f7c9:	jo     0x40f77b
  40f7cb:	cld    
  40f7cc:	push   es
  40f7cd:	mov    eax,0xa0252fe
  40f7d2:	cmp    al,0x22
  40f7d4:	enter  0xace,0x66
  40f7d8:	mov    edi,0xbeb8b400
  40f7dd:	fild   DWORD PTR [edi-0x13]
  40f7e0:	jne    0x40f83d
  40f7e2:	push   0x7139ba6b
  40f7e7:	inc    esi
  40f7e8:	dec    esi
  40f7e9:	pop    ecx
  40f7ea:	dec    esp
  40f7eb:	lock scas eax,DWORD PTR es:[edi]
  40f7ed:	les    edx,FWORD PTR ds:0xd24a6eb5
  40f7f3:	jmp    0x40f7e3
  40f7f5:	enter  0x6619,0xaf
  40f7f9:	into   
  40f7fa:	push   edi
  40f7fb:	pop    esi
  40f7fc:	lods   al,BYTE PTR ds:[esi]
  40f7fd:	popa   
  40f7fe:	ss cli 
  40f800:	xchg   ecx,eax
  40f801:	adc    BYTE PTR [ebx-0xf79caf1],bl
  40f807:	jne    0x40f83c
  40f809:	push   ss
  40f80a:	daa    
  40f80b:	xchg   ecx,eax
  40f80c:	jl     0x40f880
  40f80e:	adc    dl,ch
  40f810:	xor    al,0xb3
  40f812:	sub    DWORD PTR [edi-0x7119a56c],edx
  40f818:	mov    ebp,0x6d3dcc89
  40f81d:	outs   dx,BYTE PTR ds:[esi]
  40f81e:	xlat   BYTE PTR ds:[ebx]
  40f81f:	loope  0x40f7e3
  40f821:	sbb    BYTE PTR [eax],al
  40f823:	push   edx
  40f824:	mov    al,ds:0x1f854af
  40f829:	mov    WORD PTR [eax],es
  40f82b:	cmp    BYTE PTR [ebx+0x32],dl
  40f82e:	addr16 push esi
  40f830:	ret    0xe69f
  40f833:	(bad)
  40f836:	mov    eax,ds:0xcd28661
  40f83b:	push   es
  40f83c:	mov    DWORD PTR [edi],edx
  40f83e:	jmp    0x40f809
  40f840:	jb     0x40f879
  40f842:	or     eax,0x6e930ec3
  40f847:	jb     0x40f7eb
  40f849:	xchg   ebx,eax
  40f84a:	mov    dl,0x1f
  40f84c:	(bad)  
  40f84d:	ins    BYTE PTR es:[edi],dx
  40f84e:	sbb    ah,BYTE PTR [eax+0x5604ec96]
  40f854:	push   esi
  40f855:	jp     0x40f80b
  40f857:	adc    eax,0x9d715f37
  40f85c:	pop    esi
  40f85d:	dec    eax
  40f85e:	sub    ecx,0xfa6522ff
  40f864:	dec    ebx
  40f865:	scas   al,BYTE PTR es:[edi]
  40f866:	pop    ds
  40f867:	cdq    
  40f868:	add    ecx,DWORD PTR [esi-0x6d74b4f3]
  40f86e:	je     0x40f86f
  40f870:	mov    esi,0x55b25745
  40f875:	fsub   st,st(1)
  40f877:	out    0x4b,eax
  40f879:	cmp    BYTE PTR [edi],0x99
  40f87c:	adc    cl,BYTE PTR [edi+0x20760d61]
  40f882:	mov    ecx,0x8d68fee2
  40f887:	shl    BYTE PTR [edi+eiz*2],cl
  40f88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f88b:	sub    ah,BYTE PTR [ebp-0x75]
  40f88e:	sbb    ch,BYTE PTR [edx+0xad39882]
  40f894:	fs jg  0x40f8b4
  40f897:	jo     0x40f8d1
  40f899:	pop    ss
  40f89a:	inc    eax
  40f89b:	jge    0x40f849
  40f89d:	fild   DWORD PTR [bx+si+0x41]
  40f8a1:	jbe    0x40f914
  40f8a3:	iret   
  40f8a4:	fild   DWORD PTR [esi+0x7f]
  40f8a7:	(bad)  [edx-0x56a786c4]
  40f8ad:	add    BYTE PTR [ebx],ch
  40f8af:	aas    
  40f8b0:	(bad)  [eax-0x1ba67046]
  40f8b6:	call   0xf81fadbb
  40f8bb:	jg     0x40f893
  40f8bd:	lahf   
  40f8be:	xchg   ecx,eax
  40f8bf:	xor    cl,BYTE PTR [edi+0x6c]
  40f8c2:	jecxz  0x40f8b3
  40f8c4:	add    al,0xcc
  40f8c6:	dec    esi
  40f8c7:	stos   BYTE PTR es:[edi],al
  40f8c8:	mov    dl,0xaf
  40f8ca:	add    BYTE PTR [ecx],cl
  40f8cc:	scas   al,BYTE PTR es:[edi]
  40f8cd:	(bad)  
  40f8ce:	adc    esp,edi
  40f8d0:	fsubp  st(4),st
  40f8d2:	pop    ebx
  40f8d3:	and    ebp,DWORD PTR [edi-0x6e]
  40f8d6:	rcl    BYTE PTR [edi-0x39fcd181],cl
  40f8dc:	(bad)  
  40f8de:	jbe    0x40f8c8
  40f8e0:	jne    0x40f922
  40f8e2:	cwde   
  40f8e3:	sar    BYTE PTR [ecx],1
  40f8e5:	jg     0x40f95b
  40f8e7:	xchg   esp,eax
  40f8e8:	(bad)  
  40f8e9:	xor    cl,BYTE PTR [edx+eiz*8-0x58]
  40f8ed:	xor    eax,0x748ab9a7
  40f8f2:	(bad)  
  40f8f3:	sbb    al,0xf6
  40f8f5:	xor    ebp,DWORD PTR [ecx+0x4a400c51]
  40f8fb:	jmp    0x40f97b
  40f8fd:	fistp  WORD PTR [esi-0x1c]
  40f900:	or     eax,0xd81c811c
  40f905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f906:	xor    esp,DWORD PTR [esi+0x11]
  40f909:	dec    eax
  40f90a:	out    dx,eax
  40f90b:	cdq    
  40f90c:	sti    
  40f90d:	mov    esp,0xcbd767a8
  40f912:	dec    esp
  40f913:	push   cs
  40f914:	outs   dx,DWORD PTR ds:[esi]
  40f915:	out    dx,al
  40f916:	dec    edi
  40f917:	lods   al,BYTE PTR ds:[esi]
  40f918:	sbb    eax,0x3927cecd
  40f91d:	push   0xb8609fb8
  40f922:	sbb    ah,bl
  40f924:	xor    ecx,DWORD PTR [ebp+0xf]
  40f927:	clc    
  40f928:	pop    esp
  40f929:	push   esp
  40f92a:	push   esp
  40f92b:	arpl   WORD PTR ds:0xaa866be,si
  40f931:	rcl    BYTE PTR [eax+0x72],1
  40f934:	and    dl,BYTE PTR [ecx-0x52173f79]
  40f93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f93b:	adc    ch,dl
  40f93d:	xchg   ecx,eax
  40f93e:	loope  0x40f8ea
  40f940:	jmp    ebp
  40f942:	jb     0x40f942
  40f944:	aam    0x2d
  40f946:	test   DWORD PTR [edx],0x6689144
  40f94c:	inc    eax
  40f94d:	and    edi,DWORD PTR [ebx+0x5f17193f]
  40f953:	cld    
  40f954:	retf   
  40f955:	fisttp QWORD PTR [ecx+0xd]
  40f958:	push   ebp
  40f959:	push   ds
  40f95a:	or     BYTE PTR [edi],0xf0
  40f95d:	les    edx,FWORD PTR [edi]
  40f95f:	packssdw mm6,QWORD PTR [ebx+0x7c]
  40f963:	pop    ebp
  40f964:	pop    esi
  40f965:	cli    
  40f966:	popf   
  40f967:	in     eax,dx
  40f968:	jecxz  0x40f8f6
  40f96a:	popa   
  40f96b:	lahf   
  40f96c:	cs jbe 0x40f96e
  40f96f:	shl    BYTE PTR [ecx+0x5c],cl
  40f972:	call   0xe2973bf0
  40f977:	fsubr  DWORD PTR [edx]
  40f979:	mov    dl,0x9
  40f97c:	xchg   edx,eax
  40f97d:	pop    ss
  40f97e:	out    dx,eax
  40f97f:	data16 (bad) 
  40f981:	push   edi
  40f982:	lods   al,BYTE PTR ds:[esi]
  40f983:	arpl   WORD PTR [ecx],bp
  40f985:	nop
  40f986:	sub    al,bl
  40f988:	retf   0xe749
  40f98b:	(bad)  
  40f98f:	mov    WORD PTR [ebx-0x14d99391],gs
  40f995:	aam    0x9e
  40f997:	mov    edx,0xc9770fe4
  40f99c:	ja     0x40fa0f
  40f99e:	daa    
  40f99f:	lock mov esp,0xa3220eaf
  40f9a5:	icebp  
  40f9a6:	stos   BYTE PTR es:[edi],al
  40f9a7:	dec    eax
  40f9a8:	sbb    al,BYTE PTR [edi]
  40f9aa:	cmp    eax,0x17a02e99
  40f9af:	lods   al,BYTE PTR ds:[esi]
  40f9b0:	popf   
  40f9b1:	xchg   ebx,eax
  40f9b2:	dec    edi
  40f9b3:	and    ebx,DWORD PTR [eax]
  40f9b5:	and    DWORD PTR [eax],esp
  40f9b7:	dec    eax
  40f9b8:	jl     0x40f9b3
  40f9ba:	jecxz  0x40f950
  40f9bc:	inc    esi
  40f9bd:	iret   
  40f9be:	xchg   esi,eax
  40f9bf:	popf   
  40f9c0:	addr16 and esp,eax
  40f9c3:	pop    edi
  40f9c4:	xchg   esp,eax
  40f9c5:	fs daa 
  40f9c7:	out    0xbe,eax
  40f9c9:	push   esp
  40f9ca:	sub    BYTE PTR [edi+0x48525662],ah
  40f9d0:	jbe    0x40f9c1
  40f9d2:	(bad)  
  40f9d3:	ins    BYTE PTR es:[edi],dx
  40f9d4:	sub    bh,BYTE PTR [esi+ebp*1+0x30]
  40f9d8:	and    ecx,DWORD PTR [edx+ebp*2]
  40f9db:	clc    
  40f9dc:	std    
  40f9dd:	aaa    
  40f9de:	enter  0xf38d,0x3
  40f9e2:	sahf   
  40f9e3:	mov    ecx,0xf3ad7763
  40f9e8:	jne    0x40fa62
  40f9ea:	out    0xc6,eax
  40f9ec:	dec    edi
  40f9ed:	xor    ebp,DWORD PTR [edx]
  40f9ef:	add    BYTE PTR ds:0xce3716b4,dl
  40f9f5:	add    eax,0xb3d1167a
  40f9fa:	adc    cl,BYTE PTR [eax]
  40f9fc:	cmp    esp,0x75e23f79
  40fa02:	sub    eax,0x4b480dd4
  40fa07:	inc    ebp
  40fa08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa09:	add    DWORD PTR ds:0x51be64e3,0x3e
  40fa10:	mov    edx,0xa5ed48e
  40fa15:	js     0x40fa2a
  40fa17:	cdq    
  40fa18:	fidiv  DWORD PTR [eax]
  40fa1a:	mov    ebx,0x51c85df4
  40fa1f:	xchg   ecx,eax
  40fa20:	hlt    
  40fa21:	push   esi
  40fa22:	std    
  40fa23:	lods   eax,DWORD PTR fs:[esi]
  40fa25:	(bad)  
  40fa26:	ja     0x40f9cb
  40fa28:	icebp  
  40fa29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2a:	out    dx,al
  40fa2b:	add    BYTE PTR [eax-0x10f4da03],cl
  40fa31:	bound  esp,QWORD PTR [ebp+0x1facd369]
  40fa37:	mov    esi,0x4c69bb15
  40fa3c:	xchg   edi,eax
  40fa3d:	int    0x54
  40fa3f:	fdivr  DWORD PTR [edi+0x5c]
  40fa42:	call   0x2243:0x1f7c84e3
  40fa49:	adc    ecx,DWORD PTR ds:0x7115161a
  40fa4f:	sti    
  40fa50:	inc    edi
  40fa51:	inc    esi
  40fa52:	push   es
  40fa53:	add    DWORD PTR ds:0xc4c80eec,edi
  40fa59:	sbb    BYTE PTR [esp+esi*4+0x28],dh
  40fa5d:	fist   DWORD PTR [ebp-0x5c]
  40fa60:	out    0xda,eax
  40fa62:	mov    bh,BYTE PTR [esi]
  40fa64:	and    ebp,DWORD PTR [edx+0x47d35327]
  40fa6a:	cmc    
  40fa6b:	add    DWORD PTR [esi-0xb],esp
  40fa6e:	fwait
  40fa6f:	inc    edi
  40fa70:	outs   dx,BYTE PTR ds:[esi]
  40fa71:	test   DWORD PTR [edi+esi*4],0x186b8fc6
  40fa78:	add    edx,DWORD PTR [esi]
  40fa7a:	dec    ecx
  40fa7b:	not    ch
  40fa7d:	out    dx,al
  40fa7e:	les    ecx,FWORD PTR [edi-0x724d79f2]
  40fa84:	add    ch,0x6c
  40fa87:	cmp    ch,BYTE PTR [ebx+eax*2-0x31]
  40fa8b:	lods   eax,DWORD PTR ds:[esi]
  40fa8c:	push   ss
  40fa8d:	add    BYTE PTR [eax],cl
  40fa8f:	loop   0x40faac
  40fa91:	cmp    eax,0xb2890458
  40fa96:	in     al,0x83
  40fa98:	fidiv  WORD PTR [eax+esi*4+0x45]
  40fa9c:	loope  0x40fa84
  40fa9e:	cmp    ah,BYTE PTR [ecx]
  40faa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faa1:	aaa    
  40faa2:	ss aad 0x16
  40faa5:	xor    al,0x4e
  40faa7:	ret    0x25f2
  40faaa:	dec    esi
  40faab:	outs   dx,BYTE PTR ds:[esi]
  40faac:	and    DWORD PTR [eax+eiz*1],edi
  40faaf:	dec    esp
  40fab0:	fcomp  st(1)
  40fab2:	jbe    0x40fabc
  40fab4:	ret    0x328c
  40fab7:	add    bh,dl
  40fab9:	mov    esp,0xfefe545b
  40fabe:	and    BYTE PTR [ebx+0x5e70fdbe],0x46
  40fac5:	pusha  
  40fac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac7:	sub    BYTE PTR [esi-0x1f],ch
  40faca:	sub    BYTE PTR [esi+0x48],bh
  40facd:	je     0x40faae
  40facf:	and    BYTE PTR [edx+0x70],ah
  40fad2:	cmp    BYTE PTR [ebx],dh
  40fad4:	inc    edi
  40fad5:	lds    esi,FWORD PTR ds:0x919840e1
  40fadb:	dec    ecx
  40fadc:	out    0x9e,al
  40fade:	pop    esp
  40fadf:	mov    BYTE PTR [edx],cl
  40fae1:	xlat   BYTE PTR ds:[ebx]
  40fae2:	jecxz  0x40fb5a
  40fae4:	adc    BYTE PTR [ecx-0x3db8a2b1],0x3f
  40faeb:	in     eax,dx
  40faec:	mov    ebp,0x3d3bbdde
  40faf1:	cmp    ah,BYTE PTR [esi-0x7c]
  40faf4:	arpl   WORD PTR [eax+0x7f877f35],sp
  40fafa:	and    ah,bh
  40fafc:	mov    cl,0x31
  40fafe:	xchg   ebx,eax
  40faff:	ror    BYTE PTR [ebp-0xf],1
  40fb02:	inc    ebx
  40fb03:	mov    al,ds:0xd3cd60d9
  40fb08:	sub    DWORD PTR [edi+0xc484f34],ebp
  40fb0e:	xchg   edi,eax
  40fb0f:	icebp  
  40fb10:	sbb    al,0xde
  40fb12:	fsubp  st(7),st
  40fb14:	jno    0x40faa3
  40fb16:	clc    
  40fb17:	dec    esp
  40fb18:	xchg   edi,eax
  40fb19:	jp     0x40fb34
  40fb1b:	xchg   esp,eax
  40fb1c:	out    dx,al
  40fb1d:	xor    al,0x35
  40fb1f:	out    dx,al
  40fb20:	std    
  40fb21:	jo     0x40faf8
  40fb23:	mov    eax,ds:0x93f61d26
  40fb28:	jmp    0x40fb65
  40fb2a:	jecxz  0x40fb9b
  40fb2c:	pop    eax
  40fb2d:	ret    0xb69c
  40fb30:	and    ecx,DWORD PTR [ebx]
  40fb32:	mov    bl,0xb6
  40fb34:	into   
  40fb35:	gs jo  0x40fb17
  40fb38:	dec    ecx
  40fb39:	sbb    dl,dl
  40fb3b:	xchg   BYTE PTR [esp+ebp*1+0x3d],bh
  40fb3f:	cmp    ecx,DWORD PTR [ebx]
  40fb41:	cmp    BYTE PTR [ecx],dl
  40fb43:	in     al,0xc0
  40fb45:	fdiv   QWORD PTR [edx*4+0x7159de5f]
  40fb4c:	jmp    0xfa7ea74d
  40fb51:	inc    ebp
  40fb52:	mov    eax,0xb8bd1793
  40fb58:	stc    
  40fb59:	push   edx
  40fb5a:	and    ebx,DWORD PTR [eax-0x733f1bb7]
  40fb60:	daa    
  40fb61:	stos   BYTE PTR es:[edi],al
  40fb62:	and    BYTE PTR [eax-0x5101fbe9],bh
  40fb68:	adc    DWORD PTR [ecx],0x56
  40fb6b:	mov    edi,0x38f53a61
  40fb70:	out    dx,eax
  40fb71:	mov    ebx,0x5f95aac8
  40fb76:	dec    ebp
  40fb77:	das    
  40fb78:	inc    eax
  40fb79:	out    0x5e,eax
  40fb7b:	arpl   WORD PTR [edx-0x32b7be38],dx
  40fb81:	inc    ebx
  40fb82:	dec    edx
  40fb83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb84:	inc    ebx
  40fb85:	or     al,0x5b
  40fb87:	pcmpgtw mm3,QWORD PTR [eax+0x61]
  40fb8b:	iret   
  40fb8c:	sti    
  40fb8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb8e:	cmp    dl,BYTE PTR [ebx]
  40fb90:	pop    ebp
  40fb91:	lds    esp,FWORD PTR [edi-0xd]
  40fb94:	and    DWORD PTR [eax+0x36c880c2],esp
  40fb9a:	dec    ecx
  40fb9b:	sub    al,0xa9
  40fb9d:	inc    eax
  40fb9e:	pop    es
  40fb9f:	jle    0x40fc07
  40fba1:	pop    esi
  40fba2:	sti    
  40fba3:	(bad)  
  40fba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba5:	or     DWORD PTR ds:0xf88fca04,edi
  40fbab:	cld    
  40fbac:	outs   dx,BYTE PTR ds:[esi]
  40fbad:	pop    edx
  40fbae:	dec    ebp
  40fbaf:	jle    0x40fb9a
  40fbb1:	imul   eax,DWORD PTR [ecx],0xd8b4cab0
  40fbb7:	or     BYTE PTR [ecx+0x2e],dh
  40fbba:	pop    esp
  40fbbb:	inc    ebx
  40fbbc:	retf   
  40fbbd:	push   ds
  40fbbe:	mov    ebp,0x353b345c
  40fbc3:	add    bl,ah
  40fbc5:	dec    eax
  40fbc6:	xor    DWORD PTR [ebx+0x61],edx
  40fbc9:	mov    edx,?
  40fbcb:	aas    
  40fbcc:	lds    edi,FWORD PTR [edi-0x5]
  40fbcf:	cmp    eax,0x5e26adab
  40fbd4:	jmp    0x63f2c909
  40fbd9:	inc    edx
  40fbda:	adc    eax,0x2c1b853c
  40fbdf:	sbb    eax,0x9726828b
  40fbe4:	and    al,0x36
  40fbe6:	sub    al,0x73
  40fbe8:	xor    DWORD PTR [eax],ebx
  40fbea:	jae    0x40fb7d
  40fbec:	inc    esp
  40fbed:	jg     0x40fbf7
  40fbef:	rcl    DWORD PTR [ecx+0x2acc57d0],cl
  40fbf5:	xchg   edx,eax
  40fbf6:	in     eax,0x79
  40fbf8:	neg    BYTE PTR [edx-0x827bf2b]
  40fbfe:	(bad)  
  40fbff:	pop    ss
  40fc00:	loop   0x40fc0b
  40fc02:	add    eax,0xbdbe4ef
  40fc07:	popa   
  40fc08:	and    cl,dh
  40fc0a:	and    al,BYTE PTR [eax]
  40fc0c:	js     0x40fbda
  40fc0e:	xchg   esp,eax
  40fc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc10:	fsub   DWORD PTR [esi+0x5a127b48]
  40fc16:	adc    al,0x3a
  40fc18:	cmp    dh,dh
  40fc1a:	fnstsw WORD PTR [esi+0x7b]
  40fc1d:	daa    
  40fc1e:	xchg   edx,edi
  40fc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc21:	sar    edx,cl
  40fc23:	lahf   
  40fc24:	in     eax,0x1f
  40fc26:	out    0x8f,eax
  40fc28:	cwd    
  40fc2a:	(bad)  
  40fc2b:	test   BYTE PTR [edi-0x50],0x5b
  40fc2f:	retf   
  40fc30:	sahf   
  40fc31:	or     eax,ebx
  40fc33:	out    dx,al
  40fc34:	sub    al,0x84
  40fc36:	mov    bh,0x9f
  40fc38:	add    DWORD PTR [esp+edx*8-0x13bbd0b],esp
  40fc3f:	nop
  40fc40:	sub    al,0x27
  40fc42:	das    
  40fc43:	cwde   
  40fc44:	fsubr  DWORD PTR [esi+0x58d09f5c]
  40fc4a:	jae    0x40fc0c
  40fc4c:	xlat   BYTE PTR ds:[ebx]
  40fc4d:	mov    ds:0x193db520,al
  40fc52:	pop    ebx
  40fc53:	sti    
  40fc54:	add    eax,0x44721e7c
  40fc59:	jp     0x40fc1d
  40fc5b:	pop    edx
  40fc5c:	nop
  40fc5d:	jo     0x40fc8d
  40fc5f:	sub    eax,0x6dc27f9c
  40fc64:	mov    ecx,ecx
  40fc66:	xchg   esi,eax
  40fc67:	jle    0x40fc62
  40fc69:	(bad)  
  40fc6a:	mov    gs,WORD PTR [esi+0x33]
  40fc6d:	pop    edi
  40fc6e:	sub    bh,ch
  40fc70:	imul   eax,DWORD PTR [edi+0x1b314f39],0xe1568e98
  40fc7a:	or     eax,0x798fabd6
  40fc7f:	jle    0x40fc93
  40fc81:	outs   dx,DWORD PTR ds:[esi]
  40fc82:	pop    esi
  40fc83:	fwait
  40fc84:	or     eax,0x9a2b6292
  40fc89:	je     0x40fc77
  40fc8b:	mov    bl,0xa9
  40fc8d:	sub    edi,DWORD PTR [eax+0x38]
  40fc90:	iret   
  40fc91:	pop    eax
  40fc92:	sbb    BYTE PTR [ebx-0x54138776],0x6a
  40fc99:	not    BYTE PTR [edx]
  40fc9b:	add    ecx,DWORD PTR [ecx+0x5bfa25cf]
  40fca1:	int3   
  40fca2:	push   esi
  40fca3:	retf   
  40fca4:	inc    edx
  40fca5:	xor    DWORD PTR [esi+0x14],esp
  40fca8:	es cmp al,0x57
  40fcab:	jg     0x40fc3a
  40fcad:	loopne 0x40fc60
  40fcaf:	sbb    eax,0x8ee9b818
  40fcb4:	jae    0x40fd28
  40fcb6:	add    eax,0xd888c260
  40fcbb:	or     dh,BYTE PTR [esi]
  40fcbd:	sbb    eax,0x2f7d302
  40fcc2:	test   eax,0x90adf944
  40fcc7:	add    cl,BYTE PTR [ebp+0x20]
  40fcca:	popf   
  40fccb:	mov    edi,ebx
  40fccd:	add    al,bl
  40fccf:	lods   eax,DWORD PTR ds:[esi]
  40fcd0:	out    dx,al
  40fcd1:	stos   BYTE PTR es:[edi],al
  40fcd2:	xchg   esp,eax
  40fcd3:	fcom   DWORD PTR [edx]
  40fcd5:	call   0x4003:0x8707d2a0
  40fcdc:	pop    ds
  40fcdd:	out    dx,eax
  40fcde:	lahf   
  40fcdf:	test   DWORD PTR [esp+eiz*8-0xc],ebp
  40fce3:	fstp   QWORD PTR [edi]
  40fce5:	mov    BYTE PTR [eax-0x28],dh
  40fce8:	lods   eax,DWORD PTR ds:[esi]
  40fce9:	jo     0x40fd5e
  40fceb:	sbb    bl,BYTE PTR [esi]
  40fced:	pop    edx
  40fcee:	sub    bl,BYTE PTR [esp+ecx*2-0x7b]
  40fcf2:	jno    0x40fd21
  40fcf4:	int3   
  40fcf5:	jmp    0x25268c67
  40fcfa:	jle    0x40fd31
  40fcfc:	scas   al,BYTE PTR es:[edi]
  40fcfd:	int3   
  40fcfe:	into   
  40fcff:	mov    ch,0x3e
  40fd01:	shr    cl,cl
  40fd03:	out    dx,eax
  40fd04:	mov    esi,0x6b3fca27
  40fd09:	test   DWORD PTR [edx-0x7a],eax
  40fd0c:	sub    eax,0x851906ac
  40fd11:	cdq    
  40fd12:	sbb    DWORD PTR ds:0xe0a7dab1,esp
  40fd18:	pusha  
  40fd19:	xchg   ebp,eax
  40fd1a:	repnz jmp FWORD PTR [edi-0x7]
  40fd1e:	shr    BYTE PTR [eax+0x0],0xf7
  40fd22:	mov    ah,0x8d
  40fd24:	cli    
  40fd25:	jmp    FWORD PTR [ecx+0x11658172]
  40fd2b:	sub    al,0xc6
  40fd2d:	push   ebp
  40fd2e:	mov    bh,0x81
  40fd30:	pop    ebp
  40fd31:	pop    esp
  40fd32:	ret    0x8a89
  40fd35:	push   es
  40fd36:	pop    es
  40fd37:	std    
  40fd38:	pop    ss
  40fd39:	push   edx
  40fd3a:	xchg   ebp,eax
  40fd3b:	cwde   
  40fd3c:	mov    es,WORD PTR [ebx+edi*4-0x56]
  40fd40:	rcl    DWORD PTR [eax-0x52],cl
  40fd43:	hlt    
  40fd44:	xor    dh,bl
  40fd46:	retf   0x4cc8
  40fd49:	mov    eax,ds:0xc714bf83
  40fd4e:	pushf  
  40fd4f:	mov    dl,0x7a
  40fd51:	into   
  40fd52:	fdivrp st(7),st
  40fd54:	stos   BYTE PTR es:[edi],al
  40fd55:	xor    al,0x76
  40fd57:	dec    edi
  40fd58:	or     al,0x33
  40fd5a:	mov    edi,0xa01d0b2f
  40fd5f:	scas   eax,DWORD PTR es:[edi]
  40fd60:	cwde   
  40fd61:	aaa    
  40fd62:	jns    0x40fce6
  40fd64:	dec    DWORD PTR [ecx+0x4d855f85]
  40fd6a:	push   esi
  40fd6b:	add    eax,0xba50e2e7
  40fd70:	aas    
  40fd71:	mov    al,BYTE PTR [edi]
  40fd73:	cdq    
  40fd74:	les    edi,FWORD PTR [ebx-0x6a]
  40fd77:	(bad)  [edi+0x5d83352a]
  40fd7d:	cmp    al,0xc0
  40fd7f:	or     dh,BYTE PTR [esi+ecx*4+0x70]
  40fd83:	ja     0x40fd65
  40fd85:	xchg   ebp,eax
  40fd86:	adc    al,0x8
  40fd88:	rcr    DWORD PTR [ecx+0x972a2f6],1
  40fd8e:	loop   0x40fe0c
  40fd90:	adc    ebp,DWORD PTR [edx-0x14f9dc72]
  40fd96:	mov    bl,0xd1
  40fd98:	mov    eax,ds:0x34bfc345
  40fd9d:	pop    ss
  40fd9e:	retf   
  40fd9f:	push   ebx
  40fda0:	mov    ch,0xd3
  40fda2:	fsub   DWORD PTR [ecx+0x439c89a7]
  40fda8:	pop    ecx
  40fda9:	pop    ebp
  40fdaa:	mov    edi,DWORD PTR [edi-0xafeffee]
  40fdb0:	data16 stos BYTE PTR es:[edi],al
  40fdb2:	add    al,0x67
  40fdb4:	sahf   
  40fdb5:	inc    esi
  40fdb6:	and    bl,dl
  40fdb8:	mov    dl,0xd3
  40fdba:	cli    
  40fdbb:	arpl   WORD PTR [ecx],di
  40fdbd:	push   edi
  40fdbe:	push   cs
  40fdbf:	jnp    0x40fda6
  40fdc1:	movhps xmm2,QWORD PTR [ecx+0x1699bb11]
  40fdc8:	push   esi
  40fdc9:	popa   
  40fdca:	dec    edx
  40fdcb:	inc    esp
  40fdcc:	sti    
  40fdcd:	sar    DWORD PTR [ecx+esi*2+0x31c82695],0xeb
  40fdd5:	sub    al,cl
  40fdd7:	rol    BYTE PTR [esi-0x22ea6d95],cl
  40fddd:	sub    al,0x98
  40fddf:	int    0x36
  40fde1:	dec    ecx
  40fde2:	ja     0x40fe14
  40fde4:	lods   al,BYTE PTR ds:[esi]
  40fde5:	mov    bl,0x1b
  40fde7:	dec    edi
  40fde8:	dec    ebp
  40fde9:	jge    0x40fdd5
  40fdeb:	fst    DWORD PTR [ecx]
  40fded:	call   0x5f5bc708
  40fdf2:	loop   0x40fded
  40fdf4:	dec    edi
  40fdf5:	jmp    0x3a6e:0x3ccedeb6
  40fdfc:	push   0xef416820
  40fe01:	cmp    BYTE PTR [eax],dl
  40fe03:	mov    esp,0xeca7009b
  40fe08:	xor    ah,BYTE PTR [esi-0x21995ce7]
  40fe0e:	dec    ebx
  40fe0f:	sub    al,0x64
  40fe11:	ror    ecx,cl
  40fe13:	adc    ecx,edx
  40fe15:	push   0xbd35f97b
  40fe1a:	push   cs
  40fe1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe1c:	leave  
  40fe1d:	and    BYTE PTR [eax+edi*8+0xb],ah
  40fe21:	mov    bh,0xa2
  40fe23:	dec    edx
  40fe24:	shr    BYTE PTR [esp+ebp*2+0xa2f33e9],1
  40fe2b:	push   cs
  40fe2c:	je     0x40fe09
  40fe2e:	arpl   WORD PTR [ebx+0x2e215c18],dx
  40fe34:	ror    ecx,cl
  40fe36:	retf   
  40fe37:	jo     0x40fe78
  40fe39:	lock ins DWORD PTR es:[edi],dx
  40fe3b:	das    
  40fe3c:	sbb    al,0xc1
  40fe3e:	ds xor al,dl
  40fe41:	test   DWORD PTR [esi],esp
  40fe43:	retf   0x8af
  40fe46:	aad    0x27
  40fe48:	sar    BYTE PTR [ebx+0x5a],0x31
  40fe4c:	adc    edi,DWORD PTR [edx]
  40fe4e:	ins    DWORD PTR es:[edi],dx
  40fe4f:	stc    
  40fe50:	leave  
  40fe51:	shr    ch,cl
  40fe53:	stos   BYTE PTR es:[edi],al
  40fe54:	(bad)  
  40fe55:	push   0x18520a91
  40fe5a:	sbb    dl,ch
  40fe5c:	mov    edi,DWORD PTR [edx+0x65]
  40fe5f:	loopne 0x40fe9e
  40fe61:	xor    BYTE PTR [edi+eiz*1+0x8],bh
  40fe65:	push   edx
  40fe66:	add    eax,0xb5fe939d
  40fe6b:	jmp    0x40feca
  40fe6d:	adc    ecx,DWORD PTR [edx-0x6181a7e1]
  40fe73:	icebp  
  40fe74:	pop    ss
  40fe75:	or     BYTE PTR [ebp-0x3dcf6cb0],bl
  40fe7b:	stos   BYTE PTR es:[edi],al
  40fe7c:	mov    ebx,0x50c476d6
  40fe81:	fmul   QWORD PTR [esp+ebx*1]
  40fe84:	popf   
  40fe85:	dec    ebp
  40fe86:	pushf  
  40fe87:	jns    0x40fea9
  40fe89:	sar    edx,0x79
  40fe8c:	sbb    al,0x8
  40fe8e:	inc    ebp
  40fe8f:	dec    eax
  40fe90:	rcr    BYTE PTR [edi+0x66],0xa1
  40fe94:	test   al,0x71
  40fe96:	xor    eax,0x2645a84a
  40fe9b:	fild   QWORD PTR [edx+0x780f72f2]
  40fea1:	das    
  40fea2:	(bad)  
  40fea3:	sahf   
  40fea4:	lahf   
  40fea5:	xchg   DWORD PTR [ecx+0x58],eax
  40fea8:	push   cs
  40fea9:	cmp    BYTE PTR [ebx-0x5c0a47bf],cl
  40feaf:	mov    eax,ds:0x6c865527
  40feb4:	sbb    esp,DWORD PTR ds:0x88ac03a5
  40feba:	jmp    0xc6b1808e
  40febf:	aaa    
  40fec0:	dec    edx
  40fec1:	fs jg  0x40fe50
  40fec4:	dec    edx
  40fec5:	pop    esp
  40fec6:	aam    0x15
  40fec8:	ror    bh,1
  40feca:	loopne 0x40ff0c
  40fecc:	stos   DWORD PTR es:[edi],eax
  40fecd:	in     al,0xa9
  40fecf:	push   0x57
  40fed1:	mov    dh,0xdb
  40fed3:	jbe    0x40fe83
  40fed5:	ja     0x40fe7b
  40fed7:	mov    al,ds:0x5c44b188
  40fedc:	imul   eax,DWORD PTR cs:[ebx-0x5350ece4],0x61f3ac59
  40fee7:	inc    ebp
  40fee8:	cmp    edx,DWORD PTR [ecx+0x5bc85085]
  40feee:	mov    edx,DWORD PTR [ebx-0x51]
  40fef1:	ja     0x48642c58
  40fef7:	sbb    al,0x31
  40fef9:	push   ebp
  40fefa:	sahf   
  40fefb:	adc    esp,DWORD PTR [ecx-0x11cebdc4]
  40ff01:	and    DWORD PTR [ebp+ecx*8-0x6b267ca2],ecx
  40ff08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff09:	aas    
  40ff0a:	icebp  
  40ff0b:	repnz xchg esi,eax
  40ff0d:	js     0x40ff5c
  40ff0f:	pop    es
  40ff10:	das    
  40ff11:	cmp    eax,0x28b9ddf7
  40ff16:	mov    al,0xa3
  40ff18:	push   es
  40ff19:	xchg   DWORD PTR [ebp+0x29],ebp
  40ff1c:	cmp    al,0xd6
  40ff1e:	sahf   
  40ff1f:	xor    esi,DWORD PTR ds:0x93464d33
  40ff25:	adc    al,0x1e
  40ff27:	popf   
  40ff28:	xchg   BYTE PTR [ecx-0x4],bl
  40ff2b:	push   ebx
  40ff2c:	push   ds
  40ff2d:	int    0x8f
  40ff2f:	retf   
  40ff30:	mov    eax,0x712c09ab
  40ff35:	xchg   esp,ecx
  40ff37:	cmp    al,0xca
  40ff39:	mov    edx,0x5fbb9912
  40ff3e:	in     eax,0x99
  40ff40:	fs loope 0x40ff80
  40ff43:	push   cs
  40ff44:	lds    ebp,FWORD PTR [ebp+0x4]
  40ff47:	shr    BYTE PTR ds:0x8f477dd3,cl
  40ff4d:	inc    esp
  40ff4e:	sub    ch,BYTE PTR [ebx+ebx*4+0x52fd0e1d]
  40ff55:	dec    edi
  40ff56:	mov    ch,0x39
  40ff58:	int3   
  40ff59:	je     0x40ffb2
  40ff5b:	jp     0x40ffda
  40ff5d:	in     al,0x12
  40ff5f:	and    DWORD PTR [ebp-0x4e],0x6f
  40ff63:	inc    eax
  40ff64:	adc    al,0xe3
  40ff66:	loope  0x40fef7
  40ff68:	rcr    BYTE PTR [edx+0x28],0xd3
  40ff6c:	cmp    bh,BYTE PTR [edi+0x3]
  40ff6f:	stos   DWORD PTR es:[edi],eax
  40ff70:	mov    DWORD PTR [ecx-0x8],0x5e4c910b
  40ff77:	hlt    
  40ff78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff79:	pop    ss
  40ff7a:	pop    ebp
  40ff7b:	test   DWORD PTR [edx],esi
  40ff7d:	imul   BYTE PTR [ecx+ebp*4+0x2596c01e]
  40ff84:	jno    0x40ff51
  40ff86:	test   BYTE PTR [eax],ah
  40ff88:	mov    dl,0x5f
  40ff8a:	and    dh,al
  40ff8c:	je     0x40ffd2
  40ff8e:	sbb    bl,BYTE PTR [bp+di+0x63]
  40ff92:	or     cl,dh
  40ff94:	pop    ds
  40ff95:	fimul  WORD PTR [eax+0x501fe0e]
  40ff9b:	repnz clc 
  40ff9d:	addr16 mov ds:0x969e,eax
  40ffa1:	fbstp  TBYTE PTR [ecx-0x37]
  40ffa4:	fcomp  DWORD PTR [ebp-0x289de2fd]
  40ffaa:	cmp    eax,0xb7c9f657
  40ffaf:	icebp  
  40ffb0:	lds    ecx,FWORD PTR [esi]
  40ffb2:	sub    esp,DWORD PTR [ecx-0x536ef099]
  40ffb8:	mov    ebp,0x16bdf352
  40ffbd:	sub    al,0x31
  40ffbf:	push   ecx
  40ffc0:	inc    edx
  40ffc1:	lahf   
  40ffc2:	ret    0x8797
  40ffc5:	dec    ecx
  40ffc6:	jns    0x40ffa0
  40ffc8:	stc    
  40ffc9:	sbb    eax,0x2724aa79
  40ffce:	addr16 push ss
  40ffd0:	fldcw  WORD PTR [esi+0x34]
  40ffd3:	jl     0x40ff63
  40ffd5:	cmp    esp,esi
  40ffd7:	pushf  
  40ffd8:	push   esp
  40ffd9:	out    0xd3,eax
  40ffdb:	jg     0x410057
  40ffdd:	or     cl,dh
  40ffdf:	retf   
  40ffe0:	xchg   ebp,eax
  40ffe1:	pushf  
  40ffe2:	push   esp
  40ffe3:	mov    eax,0x74474a69
  40ffe8:	mov    ecx,0x2c18e3c7
  40ffed:	repz inc ebx
  40ffef:	ins    BYTE PTR es:[edi],dx
  40fff0:	kmovb  k5,BYTE PTR [ebx]
  40fff4:	xchg   esi,eax
  40fff5:	xchg   ecx,eax
  40fff6:	sbb    BYTE PTR [esi+eiz*2-0x62ecceb8],ch
  40fffd:	pop    esi
  40fffe:	sbb    bl,bl
  410000:	dec    ebp
  410001:	jle    0x41005f
  410003:	(bad)  
  410004:	pop    ss
  410005:	xchg   esi,eax
  410006:	mov    DWORD PTR [ebx-0x75485e4a],edx
  41000c:	add    al,0x39
  41000e:	push   ds
  41000f:	pop    esp
  410010:	or     eax,0x6c2d2761
  410015:	mov    dl,0xe0
  410017:	mul    DWORD PTR ds:0x35c34e83
  41001d:	sbb    eax,DWORD PTR [ecx+0x7a]
  410020:	add    al,0x66
  410022:	daa    
  410023:	pop    esi
  410024:	scas   eax,DWORD PTR es:[edi]
  410025:	dec    ebx
  410026:	retf   0x2407
  410029:	add    bh,BYTE PTR [ecx+0x228f9c24]
  41002f:	imul   DWORD PTR [ebp-0x4c]
  410032:	mov    DWORD PTR [esi-0x45],ebp
  410035:	jg     0x40fffe
  410037:	or     ah,BYTE PTR [esi-0x176be33]
  41003d:	inc    esi
  41003e:	shl    BYTE PTR [ebx+0x34],cl
  410041:	ficom  WORD PTR [ecx+0x14]
  410044:	cmp    edx,DWORD PTR [edx+0x4e1e070f]
  41004a:	push   cs
  41004b:	xlat   BYTE PTR ds:[ebx]
  41004c:	js     0x410098
  41004e:	ret    0x5429
  410051:	in     eax,dx
  410052:	ret    
  410053:	mov    cl,0xf5
  410055:	add    BYTE PTR [ebp+0x62],0x15
  410059:	arpl   WORD PTR [ebp-0x6f042a36],di
  41005f:	sbb    DWORD PTR [edx+ebp*4],eax
  410062:	(bad)  ds:0xb3c6321c
  410068:	cld    
  410069:	mov    edx,DWORD PTR [edx+0x75]
  41006c:	(bad)  
  41006e:	sub    bh,BYTE PTR [ecx+0x133e0cd9]
  410074:	inc    ebx
  410075:	mov    edx,0x5917f766
  41007a:	inc    eax
  41007c:	mov    edx,0x7f0cf09c
  410081:	fwait
  410082:	add    DWORD PTR [ecx+0x797d9730],edx
  410088:	mov    edi,DWORD PTR [ecx+ebp*1-0x14ffa4d7]
  41008f:	fisub  DWORD PTR [ebx-0x15]
  410092:	mov    al,0xf1
  410094:	sub    eax,0xce7bb460
  410099:	and    dh,BYTE PTR [ebp+0x7a5edb6f]
  41009f:	jp     0x410082
  4100a1:	dec    ebx
  4100a2:	shl    BYTE PTR [eax],1
  4100a4:	mov    DWORD PTR [edi],esi
  4100a6:	(bad)  
  4100a7:	data16 aaa 
  4100a9:	loopne 0x410057
  4100ab:	push   ecx
  4100ac:	jo     0x41009f
  4100ae:	pop    edi
  4100af:	pop    ds
  4100b0:	mov    ch,BYTE PTR [ebx+ebx*4-0x285134ad]
  4100b7:	lods   eax,DWORD PTR ds:[esi]
  4100b8:	call   0xff84:0x5cb2469d
  4100bf:	(bad)
  4100c2:	mov    ebx,0xea74d10f
  4100c7:	loope  0x4100a9
  4100c9:	out    0x97,al
  4100cb:	mov    ecx,0x1bb2fc2e
  4100d0:	or     DWORD PTR [esi+0x28],0x91410db4
  4100d7:	xchg   ecx,eax
  4100d8:	das    
  4100d9:	push   ebx
  4100da:	test   BYTE PTR [ebx],0x24
  4100dd:	xchg   ecx,eax
  4100de:	xchg   edi,eax
  4100df:	jnp    0x4100af
  4100e1:	int3   
  4100e2:	and    eax,0x9adfc994
  4100e7:	rcr    DWORD PTR [ebp-0x6a],1
  4100ea:	jne    0x410086
  4100ec:	mov    dl,0xa2
  4100ee:	sti    
  4100ef:	out    dx,eax
  4100f0:	mov    edi,0xc050132c
  4100f5:	daa    
  4100f6:	sbb    eax,0x105d775c
  4100fb:	xor    BYTE PTR [ebp-0x27],0xfa
  4100ff:	cli    
  410100:	or     cl,BYTE PTR [esi+eiz*8]
  410103:	loop   0x41017d
  410105:	cmc    
  410106:	aaa    
  410107:	(bad)  
  410108:	mov    ch,0x1c
  41010a:	push   edx
  41010b:	(bad)  
  41010c:	and    ch,BYTE PTR [esi+ecx*2-0x3532e3e9]
  410113:	in     eax,dx
  410114:	mov    dl,0x54
  410116:	inc    esi
  410117:	xor    bl,dl
  410119:	sbb    ecx,DWORD PTR [edi+0x5ff9b60a]
  41011f:	adc    ecx,esp
  410121:	or     eax,DWORD PTR [esi-0x41d32af9]
  410127:	or     eax,0x3a19cffe
  41012c:	out    dx,al
  41012d:	jge    0x410168
  41012f:	mov    ebx,0x63fdbb80
  410134:	idiv   DWORD PTR [esi-0x60]
  410137:	inc    edi
  410138:	or     cl,BYTE PTR [ebp+0x4ffb8f37]
  41013e:	mov    al,0xcc
  410140:	es stos BYTE PTR es:[edi],al
  410142:	dec    edx
  410143:	in     al,0xb2
  410145:	mov    dh,0xc0
  410147:	xchg   ebp,eax
  410148:	mov    eax,ds:0xb2711212
  41014d:	inc    edx
  41014e:	push   cs
  41014f:	sbb    eax,0x3f5451d1
  410154:	jmp    0x9749:0x541d8678
  41015b:	inc    esi
  41015c:	iret   
  41015d:	es pop esi
  41015f:	add    BYTE PTR [ebp-0x11b704bf],cl
  410165:	pop    es
  410166:	outs   dx,DWORD PTR ds:[esi]
  410167:	in     al,0x8e
  410169:	push   ecx
  41016a:	repnz jmp 0xef1b:0x39ae5600
  410172:	stc    
  410173:	clc    
  410174:	cwde   
  410175:	lds    edi,FWORD PTR [ecx+0x48]
  410178:	hlt    
  410179:	jge    0x410126
  41017b:	sub    eax,0x55ddeb43
  410180:	sahf   
  410181:	xor    eax,0x279e0208
  410186:	loop   0x41013d
  410188:	fs int 0x44
  41018b:	push   cs
  41018c:	mov    ebp,0xeb4ee21a
  410191:	and    dh,ah
  410193:	cmp    esp,ebx
  410195:	add    dh,BYTE PTR [edi-0x5b]
  410198:	add    DWORD PTR [edi+0x2ead999f],0x22
  41019f:	push   edi
  4101a0:	xchg   edx,eax
  4101a1:	push   esi
  4101a2:	loopne 0x4101ee
  4101a4:	jmp    0x41020f
  4101a6:	sbb    bh,BYTE PTR [esi]
  4101a8:	add    edx,DWORD PTR [ebx]
  4101aa:	sbb    DWORD PTR [ecx+0x4695e415],eax
  4101b0:	dec    esi
  4101b1:	mov    cl,0xfa
  4101b3:	ins    DWORD PTR es:[edi],dx
  4101b4:	rcl    DWORD PTR [ecx-0x28],0x3d
  4101b8:	test   DWORD PTR [edx],esp
  4101ba:	mov    ds:0xdd4007b,al
  4101bf:	xchg   ecx,eax
  4101c0:	add    DWORD PTR es:[eax+0xae0823a],0x396c71b7
  4101cb:	rcl    BYTE PTR [esi+edi*4+0x66],cl
  4101cf:	adc    DWORD PTR [eax-0x11456644],eax
  4101d5:	push   ds
  4101d6:	jbe    0x41021c
  4101d8:	int3   
  4101d9:	or     ch,BYTE PTR ds:0x5ab89c1e
  4101df:	push   ds
  4101e0:	inc    edx
  4101e1:	or     cl,BYTE PTR [esp-0x472e0d3f]
  4101e8:	imul   eax,DWORD PTR [edx],0x220b6179
  4101ee:	and    eax,0xdb7e426b
  4101f3:	mov    bl,0x8b
  4101f5:	rcl    DWORD PTR [edx],cl
  4101f7:	repnz adc dl,BYTE PTR [eax-0x354e9b2f]
  4101fe:	jbe    0x410183
  410200:	das    
  410201:	fs loopne 0x410202
  410204:	jl     0x41018c
  410206:	jl     0x410280
  410208:	mov    cs,esi
  41020a:	leave  
  41020b:	ins    BYTE PTR es:[edi],dx
  41020c:	cmp    BYTE PTR [edx],0xc5
  41020f:	popf   
  410210:	daa    
  410211:	push   edi
  410212:	adc    ch,BYTE PTR ss:[esi]
  410215:	sub    DWORD PTR [eax],esp
  410217:	xlat   BYTE PTR ds:[ebx]
  410218:	xor    eax,0xe6b365fe
  41021d:	aam    0x8b
  41021f:	pop    ebx
  410220:	lea    esp,[edi-0x64]
  410223:	sbb    eax,0xa4cc87b9
  410228:	jl     0x410202
  41022a:	cwde   
  41022b:	test   BYTE PTR [edx+esi*4-0x7f],ah
  41022f:	xor    edi,DWORD PTR [edx+0x67f16386]
  410235:	stc    
  410236:	mov    ch,0x4c
  410238:	mov    bh,0x5f
  41023a:	mov    eax,DWORD PTR [ebp+0x36]
  41023d:	scas   al,BYTE PTR es:[edi]
  41023e:	ins    DWORD PTR es:[edi],dx
  41023f:	lods   eax,DWORD PTR ds:[esi]
  410240:	(bad)  
  410241:	and    cl,bh
  410243:	(bad)  
  410244:	xor    DWORD PTR [ebx-0x4ce791d8],edx
  41024a:	mov    edi,0x7951bf74
  41024f:	and    bl,BYTE PTR [eax-0x3e8e3e11]
  410255:	inc    esp
  410256:	mov    si,WORD PTR [edi+0x4d]
  41025a:	push   edi
  41025b:	mov    al,ds:0x7bc262b7
  410260:	dec    esp
  410261:	sar    DWORD PTR [ebp-0x43],0x76
  410265:	lock or DWORD PTR [ebx+0x6f],edx
  410269:	push   edx
  41026a:	cwde   
  41026b:	inc    ebp
  41026c:	and    edx,0x33
  41026f:	mov    esp,0xe58f63e2
  410274:	imul   ebp,DWORD PTR [ebx-0x3e1eb8a7],0x24
  41027b:	cld    
  41027c:	pusha  
  41027d:	dec    eax
  41027e:	fiadd  DWORD PTR [ebx-0x29]
  410281:	sub    dl,0x3d
  410284:	pop    ds
  410285:	es push cs
  410287:	pop    es
  410288:	repz and eax,0x2be0edf6
  41028e:	pop    esi
  41028f:	sub    ecx,eax
  410291:	add    al,0x79
  410293:	jno    0x410238
  410295:	mov    edi,0xc082673a
  41029a:	xchg   esi,eax
  41029b:	dec    esi
  41029c:	mov    bh,0x7c
  41029e:	cmp    DWORD PTR [ebp+0x12],0xaf2a29a0
  4102a5:	and    ch,BYTE PTR [edi]
  4102a7:	adc    al,0xa0
  4102a9:	lods   eax,DWORD PTR ds:[esi]
  4102aa:	or     al,ch
  4102ac:	jg     0x41025c
  4102ae:	adc    DWORD PTR [eax+0x6efad22e],0x7cc5e5fb
  4102b8:	sub    BYTE PTR [eax],bl
  4102ba:	pop    eax
  4102bb:	pop    es
  4102bc:	nop
  4102bd:	out    0x8,al
  4102bf:	fst    st(4)
  4102c1:	js     0x410339
  4102c3:	push   eax
  4102c4:	mov    bl,0xf5
  4102c6:	mov    es,WORD PTR [ebx]
  4102c8:	jl     0x410284
  4102ca:	in     eax,dx
  4102cb:	pop    ecx
  4102cc:	aas    
  4102cd:	xchg   esi,eax
  4102ce:	adc    bl,0x18
  4102d1:	imul   edx,DWORD PTR [ecx],0x3a
  4102d4:	pop    ebp
  4102d5:	hlt    
  4102d6:	lea    ebp,[ebx]
  4102d8:	imul   edi,DWORD PTR ds:0x817f0d3c,0xfbd0a3fc
  4102e2:	and    dl,BYTE PTR [ecx]
  4102e4:	push   ebx
  4102e5:	jno    0x4102cc
  4102e7:	(bad)  
  4102e8:	ror    ch,1
  4102ea:	pop    ebp
  4102eb:	imul   DWORD PTR [edx+0x4c6f9aa6]
  4102f1:	int    0x23
  4102f3:	mov    ds:0x7a126c7e,eax
  4102f8:	mov    bl,0x3a
  4102fa:	leave  
  4102fb:	arpl   si,bp
  4102fd:	gs jo  0x4102f1
  410300:	adc    DWORD PTR [esi+0x4702df5f],esp
  410306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410307:	or     DWORD PTR ds:0x354a549b,edi
  41030d:	mov    ebp,?
  41030f:	ficom  WORD PTR [esp+ebp*2]
  410312:	in     al,dx
  410313:	and    ah,BYTE PTR [esi+0xfbaa406]
  410319:	push   edx
  41031a:	js     0x410325
  41031c:	lea    edx,[esi-0x74]
  41031f:	cdq    
  410320:	push   esi
  410321:	xchg   esp,eax
  410322:	inc    eax
  410323:	(bad)  
  410324:	push   esp
  410325:	stc    
  410326:	int    0x7a
  410328:	dec    ebx
  410329:	add    bl,BYTE PTR [eax+0x71a0effd]
  41032f:	jbe    0x410385
  410331:	cmp    BYTE PTR [ebx-0x1e],al
  410334:	sub    eax,0x5f38727b
  410339:	push   eax
  41033a:	mov    WORD PTR [esi-0x68],ss
  41033d:	sbb    BYTE PTR [edi],ah
  41033f:	call   0x5c6df1bd
  410344:	jp     0x410360
  410346:	push   ds
  410347:	jle    0x4102cf
  410349:	leave  
  41034a:	mov    DWORD PTR [edx-0x6a79c31d],edx
  410350:	stos   BYTE PTR es:[edi],al
  410351:	fstp   QWORD PTR [eax*1+0x1dfe702c]
  410358:	push   ds
  410359:	mov    cl,0x9a
  41035b:	out    dx,eax
  41035c:	loope  0x4103ad
  41035e:	dec    BYTE PTR [ebp+eax*8+0x7e7d6b33]
  410365:	int    0x38
  410367:	sub    BYTE PTR [ebx],dl
  410369:	lock jecxz 0x4103a3
  41036c:	pop    ebx
  41036d:	ror    BYTE PTR [ecx+0x49],1
  410370:	add    bl,dh
  410372:	test   ebx,esi
  410374:	cmp    bh,BYTE PTR [edi]
  410376:	inc    eax
  410377:	pop    eax
  410378:	fmul   DWORD PTR [esi-0x5f30c9a5]
  41037e:	je     0x4103c4
  410380:	out    0x49,al
  410382:	aad    0xe4
  410384:	or     al,0x4f
  410386:	xchg   ebp,eax
  410387:	or     al,0xe
  410389:	aas    
  41038a:	js     0x41030f
  41038c:	dec    esp
  41038d:	cmc    
  41038e:	push   esp
  41038f:	sub    DWORD PTR [ecx],esp
  410391:	sub    dh,0xf9
  410394:	add    eax,0x974142a1
  410399:	mov    ebx,0x7b339fd5
  41039e:	add    eax,0x277c6f60
  4103a3:	ret    
  4103a4:	hlt    
  4103a5:	cmp    edx,DWORD PTR [ebx+0x4920cec0]
  4103ab:	mov    DWORD PTR [eax+0x1aa350d9],edi
  4103b1:	mov    ecx,0xf1f4a6f8
  4103b6:	add    bh,BYTE PTR [esi]
  4103b8:	into   
  4103b9:	cmp    ebp,DWORD PTR [esi]
  4103bb:	xchg   edx,eax
  4103bc:	das    
  4103bd:	dec    ebp
  4103be:	push   ds
  4103bf:	pop    edi
  4103c0:	out    0x45,al
  4103c2:	add    BYTE PTR [edi-0x51],bh
  4103c5:	imul   ebx,DWORD PTR [ebx+eiz*8],0xb9ab1747
  4103cc:	push   edx
  4103cd:	(bad)  
  4103ce:	mov    ebp,0x2d7e6b4b
  4103d3:	mov    ebp,0x8325cc9e
  4103d8:	push   ebx
  4103d9:	xchg   esp,eax
  4103da:	fist   DWORD PTR [eax-0x16]
  4103dd:	push   eax
  4103de:	int3   
  4103df:	xor    ah,BYTE PTR [ebp-0xd43be30]
  4103e5:	or     eax,0xa3b4c949
  4103ea:	push   0x41
  4103ec:	es mov esp,0x5837b7a0
  4103f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103f3:	xor    BYTE PTR [esi-0x351b8bf3],0xc4
  4103fa:	dec    eax
  4103fb:	loopne 0x410479
  4103fd:	jl     0x41041f
  4103ff:	jae    0x41044c
  410401:	outs   dx,BYTE PTR ds:[esi]
  410402:	out    0x59,al
  410404:	sbb    dl,ch
  410406:	cmp    bl,cl
  410408:	mov    ah,0xe2
  41040a:	cpuid  
  41040c:	das    
  41040d:	push   esp
  41040e:	mov    ecx,ebp
  410410:	(bad)  
  410411:	sar    DWORD PTR ds:0x2f17fc97,cl
  410417:	cmp    al,al
  410419:	mov    fs:0x48de5966,eax
  41041f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410420:	push   ebx
  410421:	enter  0x1e62,0x6
  410425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410426:	stos   BYTE PTR es:[edi],al
  410427:	mov    edx,0xad686645
  41042c:	pop    eax
  41042d:	xor    eax,0x855ff060
  410432:	jecxz  0x4103cd
  410434:	xor    BYTE PTR [ecx-0x6],ah
  410437:	jbe    0x4103fa
  410439:	xchg   ecx,eax
  41043a:	mov    dl,0xc
  41043c:	adc    esp,eax
  41043e:	pop    eax
  41043f:	pop    ebp
  410440:	inc    edi
  410441:	cwde   
  410442:	scas   al,BYTE PTR es:[edi]
  410443:	shl    DWORD PTR [eax+eax*1+0x12],1
  410447:	mov    bl,0x22
  410449:	int    0xca
  41044b:	aaa    
  41044c:	cdq    
  41044d:	sbb    esi,ebx
  41044f:	mov    esp,DWORD PTR [eax]
  410451:	and    BYTE PTR [eax-0x1b],bl
  410454:	inc    ebp
  410455:	add    al,0x8d
  410457:	jle    0x410452
  410459:	in     al,dx
  41045a:	retf   
  41045b:	and    esp,DWORD PTR ds:0xdfae9552
  410461:	jl     0x410477
  410463:	adc    dh,BYTE PTR [ecx+0x73ea1d7b]
  410469:	ret    0x65d6
  41046c:	call   0x55ff:0x18923442
  410473:	dec    esp
  410474:	inc    ebp
  410475:	sub    DWORD PTR [ebx-0x11131f21],ebx
  41047b:	jg     0x410483
  41047d:	adc    eax,0x791b4a91
  410482:	loopne 0x410436
  410484:	pop    ecx
  410485:	mov    eax,0xb856a6e9
  41048a:	imul   edx,DWORD PTR [eax+0x44],0x87c4f9f8
  410491:	push   0x1a0d5d65
  410496:	repz push edi
  410498:	in     eax,dx
  410499:	xchg   edx,eax
  41049a:	int3   
  41049b:	pushf  
  41049c:	push   ecx
  41049d:	bound  ebp,QWORD PTR [ebp+0x5bef8d5]
  4104a3:	and    ch,al
  4104a5:	mov    esp,0x800276fc
  4104aa:	(bad)  
  4104ab:	ret    
  4104ac:	mov    edi,0x3439c961
  4104b1:	push   0x43
  4104b3:	dec    edi
  4104b4:	aas    
  4104b5:	jle    0x4104fe
  4104b7:	lock test BYTE PTR ds:[ecx-0x3f],bh
  4104bc:	xchg   esp,eax
  4104bd:	shl    DWORD PTR ds:0xb91ff1a4,0xf9
  4104c4:	mov    bl,0xe0
  4104c6:	daa    
  4104c7:	ficomp WORD PTR [edx]
  4104c9:	sub    DWORD PTR [ecx-0x4dd1344b],0x7b183870
  4104d3:	pop    edi
  4104d4:	mov    cl,0x2e
  4104d6:	push   edx
  4104d7:	inc    esp
  4104d8:	xchg   ebp,esi
  4104da:	cmp    BYTE PTR [edi-0x24],0xff
  4104de:	sbb    edx,DWORD PTR [esp+ecx*1+0x4]
  4104e2:	push   ss
  4104e3:	push   ss
  4104e4:	push   eax
  4104e5:	out    dx,al
  4104e6:	(bad)  [edx-0x66e47804]
  4104ec:	mov    al,0x9b
  4104ee:	jmp    0x4104dc
  4104f0:	sub    BYTE PTR [ecx],dh
  4104f2:	xlat   BYTE PTR ds:[ebx]
  4104f3:	jno    0x410538
  4104f5:	add    dh,BYTE PTR [edx]
  4104f7:	xor    bh,BYTE PTR [edx-0x313da098]
  4104fd:	test   al,0x34
  4104ff:	push   ecx
  410500:	les    ebx,FWORD PTR [esi+0x7dad7851]
  410506:	stos   DWORD PTR es:[edi],eax
  410507:	and    edx,0x2e7d421c
  41050d:	inc    ebp
  41050e:	sbb    al,0x2
  410510:	inc    esp
  410511:	int    0x59
  410513:	push   es
  410514:	sub    edi,DWORD PTR [ecx]
  410516:	outs   dx,BYTE PTR ds:[esi]
  410517:	ficomp DWORD PTR ds:0xeb2100b8
  41051d:	cld    
  41051e:	adc    eax,0x9e558f34
  410523:	adc    eax,0xb54b6b3
  410528:	or     edx,DWORD PTR ss:[edx-0x79]
  41052c:	cmovb  edx,DWORD PTR [esi+0x61a79d1f]
  410533:	aam    0x1c
  410535:	fwait
  410536:	sbb    DWORD PTR [esi+ebp*4],esp
  410539:	cdq    
  41053a:	add    BYTE PTR [ebp+edx*2+0x369b841d],al
  410541:	test   al,0x72
  410543:	jmp    0x8823e0f0
  410548:	and    eax,0xd4a560b9
  41054d:	arpl   WORD PTR [edx],ax
  41054f:	(bad)  
  410550:	fimul  DWORD PTR [edi]
  410552:	xchg   edx,eax
  410553:	mov    al,ds:0x1a2fb651
  410558:	jo     0x410596
  41055a:	push   cs
  41055b:	jmp    0x41054a
  41055d:	test   BYTE PTR [esi+0x68d0208c],ch
  410563:	fiadd  DWORD PTR [edi+0x36]
  410566:	ss (bad) 
  410568:	fdivr  st,st(0)
  41056a:	in     eax,0x1c
  41056c:	sub    eax,0xa4f0fd5a
  410571:	fild   DWORD PTR [ecx-0x7]
  410574:	out    0x40,eax
  410576:	enter  0x4fbf,0xf0
  41057a:	(bad)  
  41057b:	xor    al,0x10
  41057d:	pushf  
  41057e:	xor    al,0x94
  410580:	lds    esi,FWORD PTR [edx]
  410582:	shl    BYTE PTR [ebx],cl
  410584:	shl    BYTE PTR [edx+esi*1-0x1446aa29],cl
  41058b:	inc    ebp
  41058c:	fdivr  st,st(1)
  41058e:	call   0xe479:0xbdbee316
  410595:	sbb    BYTE PTR [ecx+0x66866018],ch
  41059b:	push   cs
  41059c:	jnp    0x410575
  41059e:	int    0xdf
  4105a0:	(bad)  
  4105a2:	pop    ds
  4105a3:	aaa    
  4105a4:	jl     0x4105b5
  4105a6:	ret    0xc689
  4105a9:	xor    BYTE PTR [ebx-0x622d519e],bl
  4105af:	sbb    dh,ah
  4105b1:	pop    esp
  4105b2:	loopne 0x4105f4
  4105b4:	in     eax,0x9a
  4105b6:	sti    
  4105b7:	dec    edx
  4105b8:	push   edx
  4105b9:	adc    eax,0x62995cb2
  4105be:	and    eax,ebx
  4105c0:	dec    ecx
  4105c1:	rcr    BYTE PTR [edx+ebx*2+0x59],0xde
  4105c6:	cmp    al,0xc5
  4105c8:	fs cs clc 
  4105cb:	lahf   
  4105cc:	fdiv   DWORD PTR [ecx+0x585c76f]
  4105d2:	mov    dh,0x40
  4105d4:	cwde   
  4105d5:	neg    DWORD PTR [ebp+0x6eabc552]
  4105db:	jge    0x4105f5
  4105dd:	mov    eax,fs:0xa94d6906
  4105e3:	and    eax,0x1a3d7666
  4105e8:	mov    eax,ds:0xf66cd121
  4105ed:	ja     0x410596
  4105ef:	pusha  
  4105f0:	sub    bh,al
  4105f2:	push   ebx
  4105f3:	or     bl,BYTE PTR [edx]
  4105f5:	jbe    0x410605
  4105f7:	lds    eax,FWORD PTR [esi-0x2f7d4703]
  4105fd:	mov    ecx,0xadb1ade6
  410602:	cld    
  410603:	and    BYTE PTR [esi-0x33713e4b],al
  410609:	dec    ebx
  41060a:	mov    ebp,0x2b53d2d9
  41060f:	rol    DWORD PTR [ebx-0x62abecda],1
  410615:	pop    esp
  410616:	dec    esp
  410617:	lods   eax,DWORD PTR ds:[esi]
  410618:	add    eax,0x92bde1e8
  41061d:	sbb    BYTE PTR [edi],ah
  41061f:	call   0xc73a5926
  410624:	or     DWORD PTR [ebp-0x27d367bd],esi
  41062a:	test   BYTE PTR [eax],0x1f
  41062d:	mov    bl,0xc5
  41062f:	pop    es
  410630:	arpl   WORD PTR [ebp+0x70b2563],sp
  410636:	mov    DWORD PTR [edx+0x6a],0x6ae3e0d
  41063d:	or     al,0xb6
  41063f:	mov    eax,ds:0xbcc19a51
  410644:	sub    ebp,DWORD PTR ds:0x588eb916
  41064a:	out    0x5e,eax
  41064c:	pop    edi
  41064d:	outs   dx,DWORD PTR ds:[esi]
  41064e:	sub    eax,0x42c56b93
  410653:	mov    WORD PTR [edx+edi*8+0x6],cs
  410657:	out    dx,al
  410658:	pop    ecx
  410659:	or     DWORD PTR [ebp+0x47],0x3c
  41065d:	or     ebp,ebp
  41065f:	(bad)  
  410660:	push   eax
  410661:	inc    eax
  410662:	or     al,BYTE PTR [esi+0x71]
  410665:	test   eax,0x5d40d944
  41066a:	jmp    DWORD PTR [ebx+0x684d0db8]
  410670:	mov    esi,0x33c89a16
  410675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410676:	call   DWORD PTR [esi+0x5e]
  410679:	sbb    eax,0x5ddae14e
  41067e:	stos   DWORD PTR es:[edi],eax
  41067f:	ds arpl bp,ax
  410682:	(bad)
  410685:	dec    esp
  410686:	out    dx,al
  410687:	jmp    0x4106ea
  410689:	scas   eax,DWORD PTR es:[edi]
  41068a:	in     eax,0x97
  41068c:	xchg   ebx,eax
  41068d:	jb     0x41066c
  41068f:	xor    BYTE PTR [edx+0x5db498ee],cl
  410695:	pop    ecx
  410696:	jge    0x4106ae
  410698:	mov    esi,DWORD PTR [ebp+0x64]
  41069b:	dec    eax
  41069c:	call   0xd70ef36d
  4106a1:	test   al,bh
  4106a3:	push   ebx
  4106a4:	rol    BYTE PTR [ecx+0x21d1eda8],cl
  4106aa:	iret   
  4106ab:	pop    ss
  4106ac:	aaa    
  4106ad:	push   es
  4106ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106af:	ins    BYTE PTR es:[edi],dx
  4106b0:	(bad)  
  4106b1:	sub    eax,0x3c8f0322
  4106b6:	sbb    al,0xaf
  4106b8:	dec    ebp
  4106b9:	stc    
  4106ba:	or     eax,0x15383300
  4106bf:	std    
  4106c0:	imul   edx,DWORD PTR [esi+esi*2+0x23],0xffffffef
  4106c5:	pop    esp
  4106c6:	sub    al,0x6
  4106c8:	leave  
  4106c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ca:	test   eax,0xfc3a212a
  4106cf:	into   
  4106d0:	push   eax
  4106d1:	pop    ebp
  4106d2:	push   esi
  4106d3:	leave  
  4106d4:	(bad)  
  4106d5:	aam    0x24
  4106d7:	(bad)  
  4106d8:	mov    ebp,0xb26a26d2
  4106dd:	(bad)  
  4106de:	lods   al,BYTE PTR ds:[esi]
  4106df:	loopne 0x4106b2
  4106e1:	mov    eax,ds:0x1addc53
  4106e6:	lea    esi,[esi+0x2f]
  4106e9:	rcl    DWORD PTR [ecx],cl
  4106eb:	dec    eax
  4106ec:	inc    eax
  4106ed:	pusha  
  4106ee:	in     al,0x3c
  4106f0:	into   
  4106f1:	fwait
  4106f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f3:	je     0x41075d
  4106f5:	imul   ecx,esp,0x38
  4106f8:	mov    al,0x56
  4106fa:	mov    edx,0x1d27b01d
  4106ff:	into   
  410700:	imul   ebp,DWORD PTR fs:[esi],0xc12ec5bd
  410707:	not    dl
  410709:	shl    BYTE PTR [edx],cl
  41070b:	(bad)  
  41070c:	adc    DWORD PTR [edi],ebp
  41070e:	enter  0xbd6b,0x90
  410712:	mov    edi,0xff188ec0
  410717:	imul   ebp,DWORD PTR [ebp+0x14],0x50c2d47
  41071e:	(bad)  [ecx+0x2a13c27e]
  410724:	mov    ds:0x5808a45b,al
  410729:	mov    dh,0x1b
  41072b:	pop    esp
  41072c:	mov    ebp,0xcdd15f4a
  410731:	aam    0x9f
  410733:	rcl    DWORD PTR [esi],cl
  410735:	(bad)  
  410736:	dec    edi
  410737:	xchg   DWORD PTR ds:0xd4c121f8,eax
  41073d:	(bad)  
  41073f:	hlt    
  410740:	xor    ah,BYTE PTR [edi-0x4eee8eca]
  410746:	test   eax,0x7e4db1f5
  41074b:	sub    al,0xc7
  41074d:	(bad)  
  41074e:	out    0xfb,eax
  410750:	dec    ebp
  410751:	jo     0x410794
  410753:	cmova  esi,DWORD PTR [ecx+0x52]
  410757:	aad    0x9c
  410759:	mov    dl,0x60
  41075b:	or     DWORD PTR [ebx],edx
  41075d:	sbb    BYTE PTR [eax-0x39da61c1],ah
  410763:	jno    0x41070e
  410765:	cmc    
  410766:	inc    edx
  410767:	mov    bl,0xda
  410769:	sbb    eax,0xfe8ce07b
  41076e:	shl    BYTE PTR [esi+0x6a],1
  410771:	loop   0x410783
  410773:	jmp    0x410744
  410775:	xchg   esp,eax
  410776:	icebp  
  410777:	adc    BYTE PTR [esi],al
  410779:	sub    ebx,DWORD PTR [edx+esi*2]
  41077c:	ins    BYTE PTR es:[edi],dx
  41077d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41077e:	arpl   WORD PTR [esi+0x1],dx
  410781:	xor    esp,DWORD PTR [edx]
  410783:	or     eax,0x4f72130a
  410788:	push   edx
  410789:	fdiv   DWORD PTR [edx+0x12c8f640]
  41078f:	add    BYTE PTR [edx],ch
  410791:	push   cs
  410792:	ja     0x4107db
  410794:	shl    DWORD PTR ds:0x58e3a2a7,0xa5
  41079b:	and    al,0x91
  41079d:	add    ah,dl
  41079f:	dec    edi
  4107a0:	aad    0xcc
  4107a2:	jmp    0x4107c7
  4107a4:	xchg   esi,eax
  4107a5:	push   ebp
  4107a6:	loop   0x410819
  4107a8:	push   edi
  4107aa:	adc    DWORD PTR [eax-0x6c],0xde875582
  4107b1:	xchg   BYTE PTR [eax],ch
  4107b3:	adc    esp,0x66f16bba
  4107b9:	inc    eax
  4107ba:	sub    bl,BYTE PTR [esi+0x1842d7b5]
  4107c0:	shl    al,cl
  4107c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107c3:	call   0x7358c9e1
  4107c8:	jp     0x410801
  4107ca:	repz in al,0x24
  4107cd:	inc    ecx
  4107ce:	repnz xchg ecx,eax
  4107d0:	mov    dl,0x55
  4107d2:	lahf   
  4107d3:	cmp    al,al
  4107d5:	addr16 popf 
  4107d7:	repnz push 0x4a4a1207
  4107dd:	in     al,0xa4
  4107df:	cs retf 0x7488
  4107e3:	(bad)  
  4107e4:	xchg   edx,eax
  4107e5:	push   ds
  4107e6:	cmp    eax,0xfb6f1fac
  4107eb:	cmp    al,0x21
  4107ed:	mov    DWORD PTR [ebx],ebp
  4107ef:	jmp    FWORD PTR [ecx+edx*1+0x37f377db]
  4107f6:	and    BYTE PTR [edi+0x40951129],dh
  4107fc:	xchg   DWORD PTR [edx-0x1150b387],ebx
  410802:	xchg   esi,eax
  410803:	leave  
  410804:	xor    dl,BYTE PTR [esi]
  410806:	das    
  410807:	bound  edx,QWORD PTR [ebx+0x70321bcc]
  41080d:	sub    DWORD PTR [ebx+0x65],0x7c
  410811:	fdivr  QWORD PTR [edx]
  410813:	into   
  410814:	cmp    BYTE PTR [ebx-0x4c26e75d],dh
  41081a:	aaa    
  41081b:	mov    bh,0x46
  41081d:	jo     0x410875
  41081f:	hlt    
  410820:	add    eax,DWORD PTR [edx+0x216f3275]
  410826:	dec    ebx
  410827:	std    
  410828:	inc    edi
  410829:	aad    0xdd
  41082b:	in     eax,dx
  41082c:	cdq    
  41082d:	push   ebx
  41082e:	push   ecx
  41082f:	xor    esp,DWORD PTR [esi]
  410831:	js     0x41080a
  410833:	(bad)  
  410834:	int3   
  410835:	sub    al,0xc0
  410837:	es scas eax,DWORD PTR es:[edi]
  410839:	pop    edx
  41083a:	imul   ebp,DWORD PTR [eax+0x2d558af7],0x2e
  410841:	sti    
  410842:	jo     0x41080f
  410844:	retf   
  410845:	xchg   ebx,eax
  410846:	out    0x43,eax
  410848:	adc    al,0x70
  41084a:	mov    ebx,0x774a859e
  41084f:	ds push 0x27c746a9
  410855:	sbb    ch,dh
  410857:	(bad)  
  410858:	push   0xe33d53d3
  41085d:	and    BYTE PTR [eax+0x18],ah
  410860:	cdq    
  410861:	mov    ah,0x87
  410863:	pushf  
  410864:	jecxz  0x410800
  410866:	and    BYTE PTR [eax+0x5ef11dd5],dl
  41086c:	pop    esi
  41086d:	cmp    DWORD PTR [ebx],0xffffffc7
  410870:	ins    DWORD PTR es:[edi],dx
  410871:	cwde   
  410872:	xor    BYTE PTR [ecx+0x3],dl
  410875:	ret    0xd397
  410878:	shl    DWORD PTR [ebx-0x5f],1
  41087b:	repz push edx
  41087d:	je     0x4108b9
  41087f:	mov    edi,ecx
  410881:	arpl   WORD PTR [esi+0x6e],sp
  410884:	imul   ebx,DWORD PTR ds:[edi-0x63ef8bd5],0xecbcf460
  41088f:	jb     0x4108e5
  410891:	adc    al,0x91
  410893:	fcom   QWORD PTR [esi-0x4a]
  410896:	xchg   ecx,eax
  410897:	in     eax,0xa0
  410899:	rol    DWORD PTR [ecx+0x55],1
  41089c:	adc    DWORD PTR [ebp+eiz*2+0x2a],esp
  4108a0:	(bad)  
  4108a1:	xor    dh,BYTE PTR [edx-0x30407f25]
  4108a7:	or     BYTE PTR [eax+0x754e1f53],0x63
  4108ae:	out    dx,al
  4108af:	out    dx,eax
  4108b0:	adc    BYTE PTR [eax-0x74],ah
  4108b3:	lea    esp,ds:0x611ba1b6
  4108b9:	out    0xa0,al
  4108bb:	lods   eax,DWORD PTR cs:[esi]
  4108bd:	jae    0x410899
  4108bf:	adc    ebp,DWORD PTR [ebx-0x24]
  4108c2:	outs   dx,BYTE PTR ds:[esi]
  4108c3:	mov    edi,DWORD PTR [esi]
  4108c5:	ins    BYTE PTR es:[edi],dx
  4108c6:	mov    esp,0x6f10b248
  4108cb:	pop    ecx
  4108cc:	xchg   ebp,eax
  4108cd:	pushf  
  4108ce:	das    
  4108cf:	xchg   ebx,eax
  4108d0:	fs int3 
  4108d2:	popf   
  4108d3:	(bad)  
  4108d4:	and    BYTE PTR [eax],dh
  4108d6:	aam    0x23
  4108d8:	xor    eax,0xbd4237f6
  4108dd:	mov    ecx,0x636c1bc6
  4108e2:	mov    ds:0x4d0c00a2,al
  4108e7:	mov    ?,WORD PTR [eax]
  4108e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ea:	in     eax,0xc
  4108ec:	cwde   
  4108ed:	and    DWORD PTR [edi-0x52],edi
  4108f0:	fldenv [esi]
  4108f2:	jle    0x4108b1
  4108f4:	jnp    0x410933
  4108f6:	lods   al,BYTE PTR ds:[esi]
  4108f7:	push   ss
  4108f8:	jo     0x4108fd
  4108fa:	int3   
  4108fb:	jmp    0xf8988e38
  410900:	pop    es
  410901:	lods   al,BYTE PTR cs:[esi]
  410903:	scas   eax,DWORD PTR es:[edi]
  410904:	lahf   
  410905:	dec    edi
  410906:	jl     0x41092b
  410908:	cmp    ah,ch
  41090a:	call   0x1d32:0x5ae5e76f
  410911:	push   edx
  410912:	adc    eax,0xd4e9309c
  410917:	test   cl,bh
  410919:	or     bl,BYTE PTR [ebx]
  41091b:	jp     0x4108d1
  41091d:	jae    0x410923
  41091f:	pusha  
  410920:	mov    eax,ds:0xf52d314e
  410925:	xor    bl,bl
  410927:	jne    0x410905
  410929:	mov    WORD PTR [ebx-0x12],?
  41092c:	jmp    0xd1b20d7a
  410931:	cmp    eax,0xe91c7f8b
  410936:	aaa    
  410937:	lahf   
  410938:	push   eax
  410939:	test   eax,0xebbb3148
  41093e:	jl     0x410963
  410940:	or     eax,0xc06fd180
  410945:	outs   dx,DWORD PTR ds:[esi]
  410946:	hlt    
  410947:	adc    al,0x90
  410949:	es ins BYTE PTR es:[edi],dx
  41094b:	xchg   edx,eax
  41094c:	sub    bl,ah
  41094e:	push   ss
  41094f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410950:	iret   
  410951:	sub    BYTE PTR [esi-0x62e6d143],dl
  410957:	and    ecx,eax
  410959:	stos   DWORD PTR es:[edi],eax
  41095a:	ss scas eax,DWORD PTR es:[edi]
  41095c:	xlat   BYTE PTR ds:[ebx]
  41095d:	stos   DWORD PTR es:[edi],eax
  41095e:	add    bh,al
  410960:	ja     0x410988
  410962:	sbb    al,0x48
  410964:	dec    ebx
  410965:	jnp    0x41098a
  410967:	or     BYTE PTR [esi+0x3e99e39a],bh
  41096d:	loopne 0x410969
  41096f:	pop    esp
  410970:	add    al,0xa8
  410972:	add    ch,BYTE PTR [ebx-0x1921642]
  410978:	jae    0x410907
  41097a:	fwait
  41097b:	xor    DWORD PTR [edi+edi*8],0x8b345029
  410982:	adc    BYTE PTR [ecx+eax*8+0x79],al
  410986:	xchg   ecx,eax
  410987:	xchg   ebp,eax
  410988:	lods   eax,DWORD PTR ds:[esi]
  410989:	data16 fcomp QWORD PTR [esi+0x9]
  41098d:	ds call 0x7bb5:0x55961dc2
  410995:	and    eax,0x77fbb26b
  41099a:	sub    bh,BYTE PTR [bx+di-0x3c]
  41099e:	mov    eax,0x286fecc9
  4109a3:	push   ecx
  4109a4:	nop
  4109a5:	inc    ecx
  4109a6:	and    eax,DWORD PTR [ebx-0x1e]
  4109a9:	sbb    ebp,esi
  4109ab:	rol    bh,0xe0
  4109ae:	sbb    esi,DWORD PTR [ebx+0x7e]
  4109b1:	sti    
  4109b2:	jb     0x410a0d
  4109b4:	mov    WORD PTR [eax],gs
  4109b6:	jnp    0x4109c2
  4109b8:	lods   eax,DWORD PTR ds:[esi]
  4109b9:	mov    ecx,0xe6995df7
  4109be:	push   es
  4109bf:	inc    edi
  4109c0:	xchg   ebp,eax
  4109c1:	xchg   esi,eax
  4109c2:	jmp    0x19e6:0xf7e6f71
  4109c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ca:	mov    ebx,0xf6e6f423
  4109cf:	xchg   DWORD PTR [ebx+0x75a09968],esp
  4109d5:	cmp    eax,0xe6173590
  4109da:	pop    ds
  4109db:	repnz lock lahf 
  4109de:	rcl    ecx,0x1
  4109e1:	or     edi,DWORD PTR [eax-0xf]
  4109e4:	rcr    dh,1
  4109e6:	sbb    ebx,DWORD PTR [ecx+edx*2-0x65fadda1]
  4109ed:	in     al,dx
  4109ee:	inc    edi
  4109ef:	int3   
  4109f0:	xchg   ecx,eax
  4109f1:	or     eax,0x238af70
  4109f6:	mov    dl,0xb7
  4109f8:	xchg   edi,eax
  4109f9:	jecxz  0x4109f0
  4109fb:	jo     0x4109a1
  4109fd:	pop    ebx
  4109fe:	dec    esi
  4109ff:	shr    esi,0x59
  410a02:	ror    DWORD PTR [eax+0x75],0xc4
  410a06:	mov    eax,0xa8ff3523
  410a0b:	push   es
  410a0c:	jge    0x410a75
  410a0e:	pop    edi
  410a0f:	dec    eax
  410a10:	cld    
  410a11:	sar    DWORD PTR [edi-0x5573dffd],0xf
  410a18:	test   eax,0x6d43e691
  410a1d:	jmp    0x4109e8
  410a1f:	imul   eax,edx,0x3e
  410a22:	adc    eax,0x3841244e
  410a27:	cli    
  410a28:	jl     0x410a7f
  410a2a:	pushf  
  410a2b:	fwait
  410a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a2d:	nop
  410a2e:	lahf   
  410a2f:	sub    BYTE PTR [ebx+0x2e],dl
  410a32:	ret    0xc9f
  410a35:	inc    esi
  410a36:	mov    edx,DWORD PTR gs:[edx+0x13]
  410a3a:	popa   
  410a3b:	cmp    eax,0x62cc8764
  410a40:	pop    DWORD PTR [eax]
  410a42:	fdiv   DWORD PTR [eax-0x3c58f3ce]
  410a48:	dec    edx
  410a49:	adc    dh,cl
  410a4b:	js     0x410a41
  410a4d:	enter  0x8ad4,0x7e
  410a51:	or     edi,DWORD PTR [ecx-0x5580f8a5]
  410a57:	in     eax,0x29
  410a59:	push   0xfffffff0
  410a5b:	mov    al,0x11
  410a5d:	jae    0x410a02
  410a5f:	sub    esi,eax
  410a61:	cmp    BYTE PTR [esi-0x6d],cl
  410a64:	out    dx,eax
  410a65:	test   edi,0x44e0eb87
  410a6b:	call   0x325a:0x4eef942c
  410a72:	in     al,0xcf
  410a74:	sbb    ch,BYTE PTR [eax]
  410a76:	xchg   esp,eax
  410a77:	add    al,0x2b
  410a79:	and    BYTE PTR [ecx],al
  410a7b:	dec    ebp
  410a7d:	lods   eax,DWORD PTR ds:[esi]
  410a7e:	push   0x970ec257
  410a83:	(bad)  
  410a84:	sbb    DWORD PTR [ebp-0x3c6faea0],0x586fe863
  410a8e:	dec    esp
  410a8f:	out    dx,eax
  410a90:	jmp    0xa256825a
  410a95:	cmp    ch,0xc7
  410a98:	add    esi,DWORD PTR [edi-0x14]
  410a9b:	stos   DWORD PTR es:[edi],eax
  410a9c:	arpl   WORD PTR [ecx+edx*2+0x3955a5f8],di
  410aa3:	lods   eax,DWORD PTR ds:[esi]
  410aa4:	div    ebx
  410aa6:	mov    ebx,0xd2faadd5
  410aab:	inc    esp
  410aac:	mov    edx,0x9f7f4e54
  410ab1:	inc    esi
  410ab2:	and    al,0x14
  410ab4:	sub    eax,0xabdd8ac8
  410ab9:	(bad)  
  410aba:	cmp    edx,edx
  410abc:	cdq    
  410abd:	adc    ah,BYTE PTR [eax+0x5c6583eb]
  410ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ac4:	loope  0x410a6c
  410ac6:	add    cl,al
  410ac8:	lods   al,BYTE PTR ds:[esi]
  410ac9:	test   BYTE PTR [ebp+0x2f61357e],cl
  410acf:	jmp    0xacd27e97
  410ad4:	call   0x2e15:0x1cefc853
  410adb:	cmp    eax,0x1e29b47d
  410ae0:	lds    ecx,FWORD PTR [edi]
  410ae2:	out    dx,al
  410ae3:	adc    BYTE PTR [edi-0x60],bh
  410ae6:	add    DWORD PTR [ebp-0x7d],esi
  410ae9:	shl    BYTE PTR [edi-0x9abbaab],cl
  410aef:	sbb    dl,al
  410af1:	lea    esp,[ebp-0x5f]
  410af4:	inc    ebp
  410af5:	mov    edi,0x7da25e26
  410afa:	xor    esi,DWORD PTR [ebp-0x3f7bd672]
  410b00:	jmp    FWORD PTR [edi]
  410b02:	arpl   WORD PTR ds:0x21150ebf,bp
  410b08:	cmp    BYTE PTR [edx+0x2b],dh
  410b0b:	cmc    
  410b0c:	aam    0xff
  410b0e:	test   al,0xe1
  410b10:	pop    edx
  410b11:	xor    al,0xb6
  410b13:	mov    ebx,eax
  410b15:	(bad)  
  410b16:	jp     0x410b36
  410b18:	scas   al,BYTE PTR es:[edi]
  410b19:	call   0x7a60:0x5c90ab37
  410b20:	ja     0x410ac4
  410b22:	lahf   
  410b23:	jmp    0x410af8
  410b25:	inc    eax
  410b26:	js     0x410b63
  410b28:	sar    bh,1
  410b2a:	aam    0xb9
  410b2c:	cld    
  410b2d:	shl    DWORD PTR [eax+0x145b70b8],0xd0
  410b34:	and    eax,ecx
  410b36:	and    eax,DWORD PTR [ebp-0x63ccdc96]
  410b3c:	pop    es
  410b3d:	pop    ds
  410b3e:	cmp    BYTE PTR [eax+0x4733af7e],dh
  410b44:	cmp    eax,esi
  410b46:	int    0x52
  410b48:	popa   
  410b49:	lahf   
  410b4a:	pop    eax
  410b4b:	sub    esi,esi
  410b4d:	sub    cl,BYTE PTR [esi+ebx*4]
  410b50:	push   esi
  410b51:	(bad)  
  410b52:	adc    al,0xb1
  410b54:	dec    eax
  410b55:	xor    BYTE PTR [ebp-0x21cd143c],dh
  410b5b:	dec    esi
  410b5c:	stos   DWORD PTR es:[edi],eax
  410b5d:	jl     0x410b88
  410b5f:	inc    ecx
  410b60:	or     DWORD PTR ds:0x1f840bf3,esi
  410b66:	xchg   ecx,eax
  410b67:	cmp    edx,DWORD PTR [ebp+0x2e]
  410b6a:	dec    ebp
  410b6b:	mov    edx,0x5808995e
  410b70:	iret   
  410b71:	nop    edi
  410b74:	cmp    BYTE PTR [esi-0x2],0xc9
  410b78:	mov    edi,0xd884a73e
  410b7e:	mul    ebx
  410b80:	adc    DWORD PTR [ebx-0x1f2db2e9],edx
  410b86:	fiadd  DWORD PTR [esp+eax*8]
  410b89:	sub    BYTE PTR [ebx+0x50],bl
  410b8c:	(bad)  
  410b8d:	sub    DWORD PTR [ecx-0x39],ebp
  410b90:	xchg   edi,eax
  410b91:	popf   
  410b92:	push   0x5e
  410b94:	inc    edx
  410b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b96:	push   esp
  410b97:	mov    DWORD PTR [ebp+0xf],ecx
  410b9a:	out    0xcb,eax
  410b9c:	loop   0x410c06
  410b9e:	push   edx
  410b9f:	fwait
  410ba0:	add    edi,DWORD PTR [eax+0x4b]
  410ba3:	icebp  
  410ba4:	scas   eax,DWORD PTR es:[edi]
  410ba5:	call   0x5c7a:0x6bebc81
  410bac:	call   0xa6f3:0xcc6848de
  410bb3:	inc    esp
  410bb4:	jo     0x410b3e
  410bb6:	imul   edi,DWORD PTR [edi],0x7b
  410bb9:	mov    ah,ch
  410bbb:	cmp    al,0x46
  410bbd:	mov    dl,0xff
  410bbf:	or     al,0x27
  410bc1:	dec    edx
  410bc2:	int3   
  410bc3:	jge    0x410bdc
  410bc5:	and    al,0x73
  410bc7:	stos   BYTE PTR es:[edi],al
  410bc8:	clc    
  410bc9:	mov    eax,ds:0x84ba31ac
  410bce:	pop    ebp
  410bcf:	leave  
  410bd0:	inc    BYTE PTR [ebx]
  410bd2:	mov    DWORD PTR [ecx-0x1beb3ec6],0xb802096b
  410bdc:	popa   
  410bdd:	mov    ds:0xb96f78c4,al
  410be2:	popa   
  410be3:	nop
  410be4:	movd   DWORD PTR [edi],mm0
  410be7:	mov    eax,0xd92a0a14
  410bec:	out    0x26,al
  410bee:	mov    ds:0x9d27a179,eax
  410bf3:	in     eax,0xea
  410bf5:	jle    0x410c1e
  410bf7:	shr    BYTE PTR ds:0xf61ab580,1
  410bfd:	test   BYTE PTR [ebx-0x7d],dl
  410c00:	jmp    0x3bde44ef
  410c05:	call   0xd6c29bab
  410c0a:	in     al,dx
  410c0b:	push   edi
  410c0c:	mov    ds:0xacb25548,eax
  410c11:	dec    edi
  410c12:	loop   0x410bdb
  410c14:	rcr    BYTE PTR [ebx-0x79],cl
  410c17:	(bad)  
  410c18:	retf   0x17d3
  410c1b:	push   cs
  410c1c:	mov    bl,0xb
  410c1e:	add    BYTE PTR [esi],dh
  410c20:	push   ecx
  410c21:	adc    DWORD PTR [edx-0x3d],0x57
  410c25:	mov    dh,0xd4
  410c27:	jns    0x410ca2
  410c29:	mov    ecx,0xca594abf
  410c2e:	xchg   edx,eax
  410c2f:	(bad)  
  410c30:	aam    0x25
  410c32:	daa    
  410c33:	ds and ch,dh
  410c36:	jg     0x410be5
  410c38:	jne    0x410bf3
  410c3a:	push   eax
  410c3b:	adc    al,0x36
  410c3d:	mov    BYTE PTR [esi],dl
  410c3f:	adc    dh,BYTE PTR ds:0x3b6a7180
  410c45:	(bad)  
  410c46:	push   ebx
  410c47:	(bad)  
  410c48:	xor    BYTE PTR [si-0x63],dl
  410c4c:	inc    ebx
  410c4d:	jne    0x410c34
  410c4f:	jecxz  0x410c75
  410c51:	int    0x42
  410c53:	mov    ebx,0xe0736b2b
  410c58:	pop    edi
  410c59:	das    
  410c5a:	call   0x6299:0x57978432
  410c61:	pop    esp
  410c62:	mov    edx,0x8d64ec3e
  410c67:	mov    ds:0xd80a0f0c,eax
  410c6c:	call   0x2f1391d2
  410c71:	popf   
  410c72:	xchg   ebp,eax
  410c73:	mov    edx,0x3c854b5a
  410c78:	jne    0x410ce5
  410c7a:	sbb    cl,dh
  410c7c:	and    al,0xbb
  410c7e:	stos   BYTE PTR es:[edi],al
  410c7f:	dec    edx
  410c80:	add    eax,ecx
  410c82:	add    DWORD PTR [esi],edi
  410c84:	cmp    ah,al
  410c86:	popf   
  410c87:	aas    
  410c88:	(bad)  
  410c89:	hlt    
  410c8a:	xchg   edx,eax
  410c8b:	inc    ebx
  410c8c:	es jbe 0x410cab
  410c8f:	xchg   DWORD PTR [ebx+0x4a],esp
  410c92:	(bad)  
  410c93:	push   0x38
  410c95:	dec    edx
  410c96:	mov    eax,0xe4da9e29
  410c9b:	retf   
  410c9c:	das    
  410c9d:	stos   BYTE PTR es:[edi],al
  410c9e:	ins    BYTE PTR es:[edi],dx
  410c9f:	(bad)  [ecx-0x2e499ea1]
  410ca5:	adc    DWORD PTR [ecx+0x4e3e9e78],0x64850fed
  410caf:	push   ecx
  410cb0:	cwde   
  410cb1:	bound  ebx,QWORD PTR [esi]
  410cb3:	or     dh,ch
  410cb5:	pop    ss
  410cb6:	ficom  WORD PTR [edx+0x44]
  410cb9:	xchg   esp,esp
  410cbb:	cmp    BYTE PTR [eax-0x29ba74a2],cl
  410cc1:	test   al,ah
  410cc3:	pop    ss
  410cc4:	mov    esp,0x11b366e5
  410cc9:	imul   ebp,DWORD PTR [edx-0x6b],0x1c
  410ccd:	cld    
  410cce:	ins    DWORD PTR es:[edi],dx
  410ccf:	mov    cl,0xab
  410cd1:	push   0xffffffd1
  410cd3:	or     eax,0x63371d43
  410cd8:	inc    ebp
  410cd9:	das    
  410cda:	mov    ebx,0xb2c1a0f1
  410cdf:	ret    
  410ce0:	pop    ecx
  410ce1:	loop   0x410d13
  410ce3:	popf   
  410ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce5:	xor    eax,0xe8949638
  410cea:	jp     0x410d35
  410cec:	mov    esi,DWORD PTR [ecx-0x78]
  410cef:	call   0x4f267328
  410cf4:	sbb    DWORD PTR es:[ebp-0x34],edi
  410cf8:	je     0x410d0d
  410cfa:	add    esi,DWORD PTR [eax-0x68de3824]
  410d00:	and    ebx,edx
  410d02:	es std 
  410d04:	and    al,0xb6
  410d06:	mov    ds:0x920c6dd4,al
  410d0b:	clc    
  410d0c:	ins    BYTE PTR es:[edi],dx
  410d0d:	or     eax,0x66767766
  410d12:	jecxz  0x410d19
  410d14:	jecxz  0x410cbe
  410d16:	dec    esp
  410d17:	loop   0x410cc8
  410d19:	add    DWORD PTR [ebx],ebp
  410d1b:	into   
  410d1c:	cmp    esp,edx
  410d1e:	jge    0x410d4b
  410d20:	jecxz  0x410d08
  410d22:	adc    al,0xd1
  410d24:	mov    WORD PTR [edi-0x6307d993],ds
  410d2a:	mov    DWORD PTR [edi+0x5],ebp
  410d2d:	mov    esp,0xbd1bef7f
  410d32:	je     0x410d45
  410d34:	jg     0x410d44
  410d36:	add    al,0xa2
  410d38:	sbb    eax,0x6b3a2a95
  410d3d:	and    al,0x4
  410d3f:	aam    0xa5
  410d41:	mov    ah,0xf4
  410d43:	add    BYTE PTR [esi-0x36],ah
  410d46:	xchg   edx,eax
  410d47:	scas   al,BYTE PTR es:[edi]
  410d48:	mov    esp,esp
  410d4a:	gs jns 0x410d0c
  410d4d:	pop    es
  410d4e:	int    0xf6
  410d50:	or     DWORD PTR [edi],eax
  410d52:	mov    ecx,DWORD PTR [esi-0x5b]
  410d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d56:	sbb    al,0x2e
  410d58:	cdq    
  410d59:	mov    dh,0xfc
  410d5b:	mov    edi,0xb8671e08
  410d60:	or     ebx,ecx
  410d62:	(bad)  
  410d64:	in     eax,0x62
  410d66:	sti    
  410d67:	sahf   
  410d68:	or     bh,BYTE PTR [edi+0x40]
  410d6b:	call   0x3ecb:0x464d8a1
  410d72:	ja     0x410d18
  410d74:	inc    ebp
  410d75:	fsubr  st(1),st
  410d77:	psubsw mm4,mm7
  410d7a:	cs call 0xabfa:0x5ca7e8d3
  410d82:	xchg   edx,eax
  410d83:	xlat   BYTE PTR ds:[ebx]
  410d84:	neg    BYTE PTR [edx]
  410d86:	mov    al,0x1a
  410d89:	cdq    
  410d8a:	jecxz  0x410db9
  410d8c:	call   0x976a:0xf54f20cb
  410d93:	mov    bh,0xd1
  410d95:	adc    dh,BYTE PTR [eax-0xa]
  410d98:	pusha  
  410d99:	cmp    dl,cl
  410d9b:	gs std 
  410d9d:	aas    
  410d9e:	nop
  410d9f:	sub    BYTE PTR [ebx+0x6f],cl
  410da2:	inc    esp
  410da3:	mov    eax,0x8935913b
  410da8:	ja     0x410e1b
  410daa:	stos   BYTE PTR es:[edi],al
  410dab:	adc    DWORD PTR [esi],ebx
  410dad:	cmp    ch,BYTE PTR [edi-0x2c554331]
  410db3:	xchg   ebx,eax
  410db4:	jge    0x410d52
  410db6:	xchg   esp,eax
  410db7:	(bad)  
  410db8:	outs   dx,BYTE PTR ds:[esi]
  410db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dba:	sub    ebx,DWORD PTR [eax]
  410dbc:	xor    ebp,ecx
  410dbe:	add    ecx,DWORD PTR [ecx+0x341b16a6]
  410dc4:	rcl    BYTE PTR [edx+0x5c2fea92],0x54
  410dcb:	sbb    eax,DWORD PTR [ebp+0x57]
  410dce:	adc    esi,ebx
  410dd0:	mov    ds:0x8e441abb,al
  410dd5:	adc    al,0xd2
  410dd7:	add    DWORD PTR [edx],ebx
  410dd9:	es loop 0x410e24
  410ddc:	mov    ebp,0x8317674e
  410de1:	mov    dh,0x23
  410de3:	fucomi st,st(4)
  410de5:	mov    eax,ds:0xc20e993d
  410dea:	outs   dx,BYTE PTR ds:[esi]
  410deb:	jge    0x410d72
  410ded:	ins    BYTE PTR es:[edi],dx
  410dee:	xchg   ebp,eax
  410def:	dec    ecx
  410df0:	call   0xf06b6d8f
  410df5:	std    
  410df6:	mov    ch,0xc5
  410df8:	jp     0x410dbe
  410dfa:	adc    al,0x6e
  410dfc:	pop    ss
  410dfd:	inc    esp
  410dfe:	ja     0x410ddc
  410e00:	daa    
  410e01:	pop    edi
  410e02:	mov    ebp,DWORD PTR [edi-0x16]
  410e05:	adc    DWORD PTR [edx+0x6a],0x34
  410e09:	mov    DWORD PTR [ebx-0x46429ce6],ebp
  410e0f:	bnd jge 0x410dd0
  410e12:	xor    esp,DWORD PTR [ebx+ebx*4]
  410e15:	add    eax,0x4fb4d0c9
  410e1a:	jns    0x410df5
  410e1c:	and    bh,BYTE PTR [esi+0x6f]
  410e1f:	xchg   esi,eax
  410e20:	mov    al,ds:0x368cfcb6
  410e25:	xor    DWORD PTR [ebx+0x5db90b91],0xffffff82
  410e2c:	icebp  
  410e2d:	ret    0xab6d
  410e30:	cld    
  410e31:	sub    eax,0x229bc024
  410e36:	sub    edi,DWORD PTR ds:0x7b623a6
  410e3c:	nop
  410e3d:	ins    BYTE PTR es:[edi],dx
  410e3e:	sub    edi,DWORD PTR [edx]
  410e40:	dec    ecx
  410e41:	test   dh,ah
  410e43:	js     0x410e54
  410e45:	mov    bl,0xaa
  410e47:	leave  
  410e48:	or     ebx,DWORD PTR [ecx-0x6f]
  410e4b:	mov    ah,BYTE PTR [edi-0x16]
  410e4e:	and    al,0xec
  410e50:	retf   
  410e51:	and    eax,0xee62c2fb
  410e56:	sbb    eax,0x1a6191e3
  410e5b:	mov    cl,0xf2
  410e5d:	out    0xc8,al
  410e5f:	xlat   BYTE PTR ds:[ebx]
  410e60:	jns    0x410dfb
  410e62:	aam    0x9a
  410e64:	into   
  410e65:	or     edx,DWORD PTR [ebp+eax*2+0x1ad3d21b]
  410e6c:	cmp    al,0x85
  410e6e:	push   ss
  410e6f:	mov    esi,0x72d6ba0d
  410e74:	push   0xe7444854
  410e79:	push   edx
  410e7a:	outs   dx,BYTE PTR ds:[esi]
  410e7b:	in     al,0x60
  410e7d:	inc    ebx
  410e7e:	mov    ebp,0x28bbe754
  410e83:	les    edx,FWORD PTR [eax-0x1e3d472f]
  410e89:	or     eax,0x1ea8a664
  410e8e:	or     eax,0x34f05728
  410e93:	popa   
  410e94:	xchg   edx,eax
  410e95:	enter  0x8692,0xc6
  410e99:	mov    ds:0x230c6fd2,al
  410e9e:	inc    ecx
  410e9f:	and    esp,DWORD PTR [ebp+0x29]
  410ea2:	cld    
  410ea3:	ja     0x410ed2
  410ea5:	scas   al,BYTE PTR es:[edi]
  410ea6:	pop    es
  410ea7:	leave  
  410ea8:	pop    esi
  410ea9:	in     al,0x8d
  410eab:	fcom   st(4)
  410ead:	lods   al,BYTE PTR ds:[esi]
  410eae:	or     al,0xff
  410eb0:	add    dl,BYTE PTR [esi+esi*4+0x203e4d9]
  410eb7:	push   edi
  410eb8:	out    dx,eax
  410eb9:	adc    ch,0xca
  410ebc:	jae    0x410ef3
  410ebe:	lods   eax,DWORD PTR ds:[esi]
  410ebf:	push   eax
  410ec0:	lock rcl DWORD PTR [ebx+0x2517091a],0xa3
  410ec8:	sbb    al,0xa4
  410eca:	push   ss
  410ecb:	addr16 pop ss
  410ecd:	inc    eax
  410ece:	cli    
  410ecf:	inc    esi
  410ed0:	push   0x46f50180
  410ed5:	sbb    edx,DWORD PTR [edi-0x26f0b3ea]
  410edb:	sub    ah,dl
  410edd:	mov    edi,0x11d255fe
  410ee2:	pop    es
  410ee3:	or     bl,dl
  410ee5:	aad    0x5a
  410ee7:	mov    bh,0xa4
  410ee9:	les    ebp,FWORD PTR [ebx-0x55d34e43]
  410eef:	loop   0x410f5b
  410ef1:	jecxz  0x410f40
  410ef3:	sbb    DWORD PTR [edx-0x2927d1c8],edx
  410ef9:	xchg   ebx,eax
  410efa:	mov    bh,BYTE PTR [ecx-0x3e56817f]
  410f00:	daa    
  410f01:	daa    
  410f02:	xchg   ax,ax
  410f04:	and    DWORD PTR [edx+0x3503dad],edx
  410f0a:	rcr    BYTE PTR [edx+0x5778b52e],0x54
  410f11:	call   DWORD PTR [edi+0x15]
  410f14:	imul   eax,DWORD PTR [edi],0xbf041d4d
  410f1a:	mov    WORD PTR [ebx+0x56334113],?
  410f20:	adc    eax,0x65e39bf9
  410f25:	arpl   WORD PTR [edi],di
  410f27:	xchg   ecx,eax
  410f28:	clc    
  410f29:	mov    bl,0xbf
  410f2b:	xor    DWORD PTR [ebp+0x19],ebp
  410f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2f:	out    0x8a,al
  410f31:	pop    eax
  410f32:	adc    DWORD PTR [edx+0x1e9fe8f1],esp
  410f38:	push   eax
  410f39:	and    ecx,DWORD PTR [ebx]
  410f3b:	(bad)  [ecx-0x3f2d8dbe]
  410f41:	aas    
  410f42:	in     al,dx
  410f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f44:	idiv   DWORD PTR [ebp+0x26d3b9d]
  410f4a:	idiv   ch
  410f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4d:	ins    BYTE PTR es:[edi],dx
  410f4e:	jmp    0xb6de:0x473bd215
  410f55:	jo     0x410f6d
  410f57:	aad    0xcd
  410f59:	arpl   sp,bx
  410f5b:	xchg   DWORD PTR [ebp+0x34ce6400],ebx
  410f61:	stos   BYTE PTR es:[edi],al
  410f62:	mov    al,0xec
  410f64:	cs adc edx,esp
  410f67:	cmp    eax,0xcc4408a1
  410f6c:	mov    ebx,0xba35d400
  410f71:	int3   
  410f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f73:	imul   dh
  410f75:	jp     0x410f86
  410f77:	ret    
  410f78:	jle    0x410f3f
  410f7a:	jno    0x410f06
  410f7c:	addr16 (bad) 
  410f7f:	cmp    BYTE PTR [ebx-0x5021f75a],0xf1
  410f86:	popa   
  410f87:	popf   
  410f88:	(bad)  [edi+0x71]
  410f8b:	or     DWORD PTR [edx-0x16],esp
  410f8e:	cld    
  410f8f:	xchg   ecx,eax
  410f90:	xchg   esi,eax
  410f91:	and    ah,ah
  410f93:	in     al,dx
  410f94:	out    0x64,eax
  410f96:	mov    al,ds:0x43cd6289
  410f9b:	ins    DWORD PTR es:[edi],dx
  410f9c:	test   BYTE PTR [edi+0x1f79702b],bh
  410fa2:	je     0x410f97
  410fa4:	pop    ecx
  410fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa6:	pop    es
  410fa7:	mov    ds:0x1c1c430c,eax
  410fac:	push   ebp
  410fad:	xchg   ecx,esp
  410faf:	pop    ds
  410fb0:	pop    edx
  410fb1:	push   ds
  410fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb3:	ja     0x410f97
  410fb5:	inc    ecx
  410fb6:	fsubrp st(0),st
  410fb8:	das    
  410fb9:	jno    0x411005
  410fbb:	inc    edx
  410fbc:	push   ecx
  410fbd:	or     ecx,DWORD PTR [ecx]
  410fbf:	pop    edx
  410fc0:	xor    WORD PTR [ecx+0x15],cx
  410fc4:	push   DWORD PTR [eax+0x58]
  410fc7:	add    bl,BYTE PTR [ebp-0x4d]
  410fca:	sbb    al,0x57
  410fcc:	push   cs
  410fcd:	jl     0x410f8c
  410fcf:	dec    esp
  410fd0:	int    0x70
  410fd2:	addr16 pop edx
  410fd4:	inc    esp
  410fd5:	push   esi
  410fd6:	and    edi,ebx
  410fd8:	out    0x71,al
  410fda:	imul   ebp,DWORD PTR [ebp-0x21],0x4b747f9b
  410fe1:	retf   0x5dbc
  410fe4:	mov    bh,0xcd
  410fe6:	jo     0x41100a
  410fe8:	sar    ecx,cl
  410fea:	mov    bh,0xfa
  410fec:	scas   al,BYTE PTR es:[edi]
  410fed:	fadd   QWORD PTR [ebp-0x69]
  410ff0:	sub    edi,DWORD PTR [edi]
  410ff2:	jge    0x411001
  410ff4:	jno    0x410ff6
  410ff6:	or     edi,DWORD PTR [esi-0x64d8392c]
  410ffc:	jle    0x411077
  410ffe:	sub    al,0xc0
  411000:	xchg   esi,eax
  411001:	cld    
  411002:	repnz mov ecx,0x30ce6bba
  411008:	(bad)  
  411009:	mov    WORD PTR [eax-0x44],es
  41100c:	sub    BYTE PTR [ebx+0x6b7e665a],dh
  411012:	mov    ebp,0x9f53c1f0
  411017:	add    bh,BYTE PTR [edx+0x32bdfe72]
  41101d:	jecxz  0x411053
  41101f:	pop    ds
  411020:	sbb    eax,0x68a38857
  411025:	retf   
  411026:	(bad)  
  411027:	jl     0x41105d
  411029:	jne    0x411061
  41102b:	cmp    DWORD PTR [ecx+0x7577784e],0x66f4f790
  411035:	push   ds
  411036:	in     eax,dx
  411037:	mov    ebp,0x48c2967f
  41103c:	int3   
  41103d:	mov    eax,ds:0x9a23b9b6
  411042:	add    DWORD PTR [edi-0x1761492e],0xffffffe5
  411049:	in     eax,dx
  41104a:	stc    
  41104b:	dec    ebp
  41104c:	cs pop esi
  41104e:	inc    ebp
  41104f:	adc    ebx,edx
  411051:	sbb    BYTE PTR [esi+0x65],bh
  411054:	pop    ecx
  411055:	fndisi(8087 only) 
  411057:	repnz (bad) 
  411059:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41105b:	mov    eax,0x98dfe484
  411060:	shl    BYTE PTR [ebp-0x68],cl
  411063:	adc    eax,0xb0f0314d
  411068:	xchg   al,bh
  41106a:	mov    ds:0xbb183dc7,eax
  41106f:	pop    ebx
  411070:	pop    eax
  411071:	and    edx,DWORD PTR [ecx+0xc]
  411074:	sahf   
  411075:	adc    eax,0x5fb13d4b
  41107a:	(bad)  
  41107b:	aad    0x5f
  41107d:	sub    ah,BYTE PTR [ebx]
  41107f:	popw   es
  411081:	fimul  WORD PTR [ebp-0x3e683028]
  411087:	loopne 0x41103a
  411089:	(bad)  
  41108a:	das    
  41108b:	rol    DWORD PTR [edx],0x14
  41108e:	icebp  
  41108f:	cdq    
  411090:	inc    edx
  411091:	enter  0x2f45,0x2d
  411095:	push   ebp
  411096:	in     eax,0x70
  411098:	add    eax,0xb83dda72
  41109d:	addr16 push edi
  41109f:	pop    edx
  4110a0:	(bad)  [esi]
  4110a3:	xchg   esi,eax
  4110a4:	rcl    DWORD PTR [eax-0x7d754272],cl
  4110aa:	mov    edi,0x6730541
  4110af:	int    0x3c
  4110b1:	and    al,0x1
  4110b3:	iret   
  4110b4:	mov    ecx,0x2cecfb80
  4110b9:	ss cmc 
  4110bb:	ss jmp esp
  4110be:	xor    eax,esp
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	xchg   edx,eax
  4110c2:	popa   
  4110c3:	sbb    eax,eax
  4110c5:	mov    ds:0xc70324a2,al
  4110ca:	or     dl,cl
  4110cc:	jmp    0x9be0:0x7e146def
  4110d3:	shl    ebx,0xa8
  4110d6:	cli    
  4110d7:	stos   DWORD PTR es:[edi],eax
  4110d8:	mov    ds:0x752ec065,al
  4110dd:	scas   al,BYTE PTR es:[edi]
  4110de:	sub    eax,0x69cb9490
  4110e3:	jl     0x91c4688b
  4110e9:	scas   al,BYTE PTR es:[edi]
  4110ea:	or     cl,BYTE PTR [edi+0x53]
  4110ed:	ds sahf 
  4110ef:	and    DWORD PTR [ebx-0x31],ebx
  4110f2:	dec    esp
  4110f3:	aam    0x35
  4110f5:	add    esi,DWORD PTR [ebx+0x1322e518]
  4110fb:	ja     0x411141
  4110fd:	lods   eax,DWORD PTR ds:[esi]
  4110fe:	ins    BYTE PTR es:[edi],dx
  4110ff:	dec    edx
  411100:	dec    esp
  411101:	das    
  411102:	mov    BYTE PTR [esi-0x29],cl
  411105:	repz push esp
  411107:	add    BYTE PTR [ebp-0x41],bl
  41110a:	inc    ebp
  41110b:	xchg   ebx,eax
  41110c:	sbb    ch,BYTE PTR [ebx+0x29]
  41110f:	stos   DWORD PTR es:[edi],eax
  411110:	dec    ebx
  411111:	shr    DWORD PTR [ecx-0x1],1
  411114:	push   ecx
  411115:	icebp  
  411116:	fbld   TBYTE PTR [edi+0x10]
  411119:	and    eax,ecx
  41111b:	arpl   WORD PTR [eax],bx
  41111d:	les    ebp,FWORD PTR [esi+0x118c0994]
  411123:	mov    ecx,0xa1ddafb7
  411128:	adc    ecx,DWORD PTR [ebx-0x908366c]
  41112e:	inc    eax
  41112f:	sbb    BYTE PTR [edi+0x2b],cl
  411132:	cwde   
  411133:	(bad)  gs:[eax-0x7f51f592]
  41113a:	dec    edx
  41113b:	mov    ds:0x35d01655,eax
  411140:	add    eax,0xe28e8f1b
  411145:	lds    ebx,FWORD PTR [ebx+0x27]
  411148:	jge    0x411132
  41114a:	fsubr  st(7),st
  41114c:	push   0xd656571c
  411151:	outs   dx,BYTE PTR ds:[esi]
  411152:	sub    BYTE PTR [ecx],bl
  411154:	pop    edi
  411155:	sbb    al,0x2c
  411157:	add    BYTE PTR [edi],bh
  411159:	jno    0x411144
  41115b:	sub    eax,esi
  41115d:	add    al,0x36
  41115f:	push   ds
  411160:	popa   
  411161:	inc    esi
  411162:	or     al,0x83
  411164:	or     cl,dl
  411166:	sbb    esi,DWORD PTR [edx+0x4a728a0d]
  41116c:	pop    ebx
  41116d:	(bad)  
  41116e:	test   dl,0x51
  411171:	es pop ebp
  411173:	and    DWORD PTR [edx-0x7066a5a6],esi
  411179:	pusha  
  41117a:	dec    edx
  41117b:	fwait
  41117c:	call   DWORD PTR [edx*2+0x59278013]
  411183:	push   0xebd6d5d2
  411188:	xor    ebp,edx
  41118a:	jns    0x411171
  41118c:	scas   eax,DWORD PTR es:[edi]
  41118d:	push   ds
  41118e:	xchg   esi,eax
  41118f:	(bad)  
  411190:	xor    ch,cl
  411192:	add    ah,BYTE PTR [edx+0x6]
  411195:	add    ebp,0xffffff9b
  411198:	std    
  411199:	and    dl,BYTE PTR [ebp+eiz*4+0x19f46be9]
  4111a0:	aaa    
  4111a1:	js     0x4111e7
  4111a3:	sub    DWORD PTR [edx+0x11],ebp
  4111a6:	test   eax,0x5b271259
  4111ab:	dec    ecx
  4111ac:	sbb    edx,ebp
  4111ae:	push   edi
  4111af:	mov    ds,WORD PTR [eax-0x5f2db596]
  4111b5:	sbb    ah,al
  4111b7:	rcr    DWORD PTR [ecx],0xa4
  4111ba:	out    0x62,al
  4111bc:	mov    esp,ds
  4111be:	aad    0x7b
  4111c0:	les    edi,FWORD PTR [esi+eax*8+0x485f6d0b]
  4111c7:	out    dx,eax
  4111c8:	psubusw mm0,mm2
  4111cb:	xlat   BYTE PTR ds:[ebx]
  4111cc:	xchg   edi,eax
  4111cd:	loopne 0x411170
  4111cf:	ds std 
  4111d1:	imul   ecx,esi,0xa4e27ce7
  4111d7:	adc    ecx,esp
  4111d9:	stos   DWORD PTR es:[edi],eax
  4111da:	mov    WORD PTR [eiz*8+0x5ee958eb],ds
  4111e1:	mov    dh,0x74
  4111e3:	ret    
  4111e4:	fs and al,0x67
  4111e7:	adc    al,0xf2
  4111e9:	push   edi
  4111ea:	nop
  4111eb:	sub    BYTE PTR [ecx+0x28a22932],bh
  4111f1:	ja     0x4111eb
  4111f3:	push   0x3852dca4
  4111f8:	test   eax,0xedb6b1b6
  4111fd:	jnp    0x41120b
  4111ff:	push   ecx
  411200:	loope  0x4111b4
  411202:	loop   0x4111a3
  411204:	sbb    BYTE PTR [ecx-0x12e56b37],ah
  41120a:	cmp    edx,DWORD PTR [edi+0x36]
  41120d:	or     al,0x91
  41120f:	mov    dh,BYTE PTR [edi-0x3c]
  411212:	pop    ebp
  411213:	not    BYTE PTR [edx-0xd]
  411216:	dec    ecx
  411217:	inc    edi
  411218:	(bad)  
  411219:	mov    esp,0x1f0cf03c
  41121e:	jle    0x41125d
  411220:	arpl   WORD PTR [ecx+0x36],cx
  411223:	dec    ebx
  411224:	jnp    0x41129f
  411226:	popf   
  411227:	retf   
  411228:	pusha  
  411229:	or     al,0x53
  41122b:	loopne 0x411252
  41122d:	fdiv   QWORD PTR [edx+0x68]
  411230:	jge    0x411262
  411232:	jnp    0x4111b4
  411234:	or     eax,0xb0a1cc73
  411239:	aas    
  41123a:	scas   eax,DWORD PTR es:[edi]
  41123b:	int    0xaa
  41123d:	loop   0x4112b5
  41123f:	out    0xc7,al
  411241:	aas    
  411242:	aam    0xee
  411244:	shl    DWORD PTR [edi],0x58
  411247:	push   ss
  411248:	adc    cl,BYTE PTR [ecx]
  41124a:	sub    BYTE PTR [esi],0xd7
  41124d:	xchg   ebx,eax
  41124e:	sub    ebp,ebx
  411250:	adc    edx,ebp
  411252:	pop    edi
  411253:	in     eax,0x18
  411255:	mov    dl,0x66
  411257:	inc    edi
  411258:	into   
  411259:	sbb    al,0x46
  41125b:	pop    ebp
  41125c:	add    WORD PTR [esi+0x59804866],cx
  411263:	mov    dh,0x18
  411265:	or     ebx,esi
  411267:	mov    al,ds:0xc3412e0d
  41126c:	pop    eax
  41126d:	cmp    eax,0xd42f6435
  411272:	in     al,dx
  411273:	rol    DWORD PTR [ecx],1
  411275:	sub    DWORD PTR [edi],edx
  411277:	es (bad) 
  411279:	mov    eax,ds:0x902a3c98
  41127e:	mov    ecx,0xd1d0d61d
  411283:	out    0xf7,eax
  411285:	fisttp QWORD PTR [ebx-0x5fc03bb]
  41128b:	cmp    DWORD PTR [eax],edi
  41128d:	mov    eax,DWORD PTR [ebp-0x4]
  411290:	mov    edi,DWORD PTR [ebp+0x10]
  411293:	jg     0x4112a6
  411299:	xor    edi,ecx
  41129b:	mov    ebx,esi
  41129d:	sub    ebx,edi
  41129f:	add    DWORD PTR [eax],ebx
  4112a1:	jmp    0x4112ac
  4112a6:	xor    edi,ecx
  4112a8:	add    edi,edx
  4112aa:	add    DWORD PTR [eax],edi
  4112ac:	mov    eax,DWORD PTR [ebp-0x8]
  4112af:	mov    edi,DWORD PTR [ebp-0x10]
  4112b2:	mov    eax,DWORD PTR [eax]
  4112b4:	xor    edi,ecx
  4112b6:	add    edi,0x3272df
  4112bc:	not    edi
  4112be:	and    eax,edi
  4112c0:	movsx  di,BYTE PTR [eax+0x1]
  4112c5:	mov    ebx,0x3b50
  4112ca:	sub    di,bx
  4112cd:	mov    ebx,0x8a8c
  4112d2:	xor    di,bx
  4112d5:	mov    ebx,0x4f86
  4112da:	cmp    di,bx
  4112dd:	jne    0x411305
  4112e3:	movsx  di,BYTE PTR [eax]
  4112e7:	mov    ebx,0x3b50
  4112ec:	sub    di,bx
  4112ef:	mov    ebx,0x8a8c
  4112f4:	xor    di,bx
  4112f7:	mov    ebx,0x4e71
  4112fc:	cmp    di,bx
  4112ff:	je     0x411315
  411305:	mov    edi,DWORD PTR [ebp-0x10]
  411308:	xor    edi,ecx
  41130a:	mov    ebx,esi
  41130c:	sub    ebx,edi
  41130e:	add    eax,ebx
  411310:	jmp    0x4112c0
  411315:	mov    esi,DWORD PTR [ebp-0x14]
  411318:	mov    esi,DWORD PTR [esi]
  41131a:	mov    edi,DWORD PTR [eax+0x3c]
  41131d:	lea    esi,[edi+esi*8+0x78]
  411321:	mov    esi,DWORD PTR [esi+eax*1]
  411324:	mov    DWORD PTR [ebp-0x8],esi
  411327:	mov    esi,DWORD PTR [ebp+0x8]
  41132a:	xor    esi,ecx
  41132c:	add    esi,edx
  41132e:	mov    DWORD PTR [ebp-0x14],esi
  411331:	mov    esi,DWORD PTR [ebp+0x8]
  411334:	mov    edi,DWORD PTR [ebp-0x8]
  411337:	xor    esi,ecx
  411339:	add    esi,edx
  41133b:	pop    ebx
  41133c:	cmp    edi,esi
  41133e:	jne    0x41135c
  411344:	mov    eax,DWORD PTR [ebp+0xc]
  411347:	xor    eax,ecx
  411349:	mov    ecx,DWORD PTR [ebp-0x8]
  41134c:	add    eax,edx
  41134e:	imul   eax,ecx
  411351:	mov    DWORD PTR [ebp-0x8],eax
  411354:	push   DWORD PTR [ebp+0x18]
  411357:	jmp    0x4113b0
  41135c:	mov    ecx,DWORD PTR [ebp-0x8]
  41135f:	add    ecx,eax
  411361:	mov    DWORD PTR [ebp-0x14],ecx
  411364:	mov    ecx,DWORD PTR [ebp-0x14]
  411367:	mov    ecx,DWORD PTR [ecx+0xc]
  41136a:	movsx  cx,BYTE PTR [ecx+eax*1]
  41136f:	mov    edx,0x3b50
  411374:	sub    cx,dx
  411377:	mov    edx,0x8a8c
  41137c:	xor    cx,dx
  41137f:	mov    edx,0x4e77
  411384:	cmp    cx,dx
  411387:	jne    0x411354
  41138d:	mov    ecx,DWORD PTR ds:0x42e42f
  411393:	mov    ecx,DWORD PTR [ecx+0x198]
  411399:	mov    DWORD PTR [ecx],eax
  41139b:	jmp    0x4113c1
  4113a0:	mov    ecx,DWORD PTR [ebp+0x18]
  4113a3:	cmp    ecx,0xf89c85b8
  4113a9:	jne    0x4113c1
  4113af:	push   eax
  4113b0:	push   DWORD PTR [ebp+0x14]
  4113b3:	push   DWORD PTR [ebp+0x10]
  4113b6:	push   DWORD PTR [ebp+0xc]
  4113b9:	push   DWORD PTR [ebp+0x8]
  4113bc:	call   0x40c765
  4113c1:	pop    edi
  4113c2:	pop    esi
  4113c3:	leave  
  4113c4:	ret    0x14
  4113c7:	push   ebp
  4113c8:	mov    ebp,esp
  4113ca:	sub    esp,0xc
  4113cd:	push   esi
  4113ce:	mov    ecx,DWORD PTR ds:0x424bd8
  4113d4:	mov    esi,DWORD PTR ds:0x424bf4
  4113da:	sub    esi,ecx
  4113dc:	and    ecx,DWORD PTR [ecx+esi*1]
  4113df:	mov    esi,0xf89c85b9
  4113e4:	or     DWORD PTR ds:0x42a01c,0x3fe4
  4113ee:	mov    DWORD PTR [ebp-0x8],esi
  4113f1:	xor    ecx,ecx
  4113f3:	xor    ecx,DWORD PTR ds:0x424be0
  4113f9:	xor    edx,edx
  4113fb:	add    edx,DWORD PTR ds:0x424bec
  411401:	sub    ecx,edx
  411403:	imul   ecx,DWORD PTR [ecx+edx*1]
  411407:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41140e:	add    edx,ecx
  411410:	push   edi
  411411:	adc    edx,DWORD PTR ds:0x42c010
  411417:	mov    eax,eax
  411419:	mov    eax,DWORD PTR [ebp-0x4]
  41141c:	xor    ecx,ecx
  41141e:	or     ecx,DWORD PTR ds:0x429004
  411424:	adc    ecx,DWORD PTR ds:0x42a008
  41142a:	mov    DWORD PTR ds:0x429004,ecx
  411430:	mov    edi,DWORD PTR [ebp-0x8]
  411433:	or     edx,ecx
  411435:	mov    ecx,0x7510899
  41143a:	xor    eax,ecx
  41143c:	and    DWORD PTR ds:0x42d004,0x0
  411446:	jmp    0x411458
  41144b:	mov    edx,DWORD PTR ds:0x42d004
  411451:	inc    edx
  411452:	mov    DWORD PTR ds:0x42d004,edx
  411458:	cmp    DWORD PTR ds:0x42d004,0x10
  41145f:	jae    0x41148d
  411465:	cmp    DWORD PTR ds:0x42d004,0x19
  41146c:	jne    0x411482
  411472:	push   0x42b014
  411477:	push   0x42e205
  41147c:	call   DWORD PTR ds:0x42ed6f
  411482:	jmp    0x41144b
  411487:	add    DWORD PTR ds:0x429010,ebx
  41148d:	xor    edi,ecx
  41148f:	add    DWORD PTR ds:0x42c010,0x42b008
  411499:	mov    edx,0x3272e0
  41149e:	add    DWORD PTR ds:0x42a00c,0x429024
  4114a8:	add    edi,edx
  4114aa:	sbb    DWORD PTR ds:0x42c00c,0x42c008
  4114b4:	add    eax,edx
  4114b6:	add    DWORD PTR ds:0x429014,0x42901c
  4114c0:	imul   eax,edi
  4114c3:	mov    DWORD PTR ds:0x429020,0x6d85
  4114cd:	mov    edi,DWORD PTR [ebp+0xc]
  4114d0:	mov    DWORD PTR ds:0x42a004,0x5a66
  4114da:	cmp    edi,eax
  4114dc:	je     0x411531
  4114e2:	mov    DWORD PTR [ebp-0xc],esi
  4114e5:	mov    eax,DWORD PTR [ebp-0xc]
  4114e8:	mov    esi,DWORD PTR [ebp+0xc]
  4114eb:	xor    eax,ecx
  4114ed:	lea    eax,[eax*8+0x1939778]
  4114f4:	mov    eax,DWORD PTR [esi+eax*1]
  4114f7:	mov    DWORD PTR [ebp+0xc],eax
  4114fa:	mov    eax,DWORD PTR [ebp-0x4]
  4114fd:	mov    esi,DWORD PTR [ebp-0x8]
  411500:	xor    eax,ecx
  411502:	xor    esi,ecx
  411504:	add    esi,edx
  411506:	add    eax,edx
  411508:	imul   eax,esi
  41150b:	mov    esi,DWORD PTR [ebp+0xc]
  41150e:	cmp    esi,eax
  411510:	je     0x411531
  411516:	mov    eax,DWORD PTR [ebp-0x4]
  411519:	xor    eax,ecx
  41151b:	mov    ecx,DWORD PTR [ebp+0xc]
  41151e:	add    eax,edx
  411520:	imul   eax,ecx
  411523:	add    eax,DWORD PTR [ebp+0x8]
  411526:	mov    DWORD PTR [ebp+0xc],eax
  411529:	mov    eax,DWORD PTR [ebp+0xc]
  41152c:	jmp    0x411542
  411531:	mov    eax,DWORD PTR [ebp-0x4]
  411534:	mov    esi,DWORD PTR [ebp-0x8]
  411537:	xor    esi,ecx
  411539:	xor    eax,ecx
  41153b:	add    esi,edx
  41153d:	add    eax,edx
  41153f:	imul   eax,esi
  411542:	pop    edi
  411543:	pop    esi
  411544:	leave  
  411545:	ret    0x8
  411548:	push   ebp
  411549:	mov    ebp,esp
  41154b:	push   ecx
  41154c:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411553:	mov    eax,DWORD PTR [ebp-0x4]
  411556:	and    edx,0x4ee2
  41155c:	mov    edx,DWORD PTR [ebp+0x10]
  41155f:	and    DWORD PTR ds:0x42c01c,0x0
  411569:	mov    ecx,DWORD PTR ds:0x42c01c
  41156f:	inc    ecx
  411570:	mov    DWORD PTR ds:0x42c01c,ecx
  411576:	cmp    DWORD PTR ds:0x42c01c,0x10
  41157d:	jne    0x41158e
  411583:	push   0x42e042
  411588:	call   DWORD PTR ds:0x42ed73
  41158e:	cmp    DWORD PTR ds:0x42c01c,0xf
  411595:	jne    0x4115a8
  41159b:	mov    ecx,DWORD PTR ds:0x42c01c
  4115a1:	inc    ecx
  4115a2:	mov    DWORD PTR ds:0x42c01c,ecx
  4115a8:	cmp    DWORD PTR ds:0x42c01c,0x1c
  4115af:	jb     0x411569
  4115b5:	mov    ecx,0x7510899
  4115ba:	adc    DWORD PTR ds:0x42a000,0x42c010
  4115c4:	xor    eax,ecx
  4115c6:	sbb    DWORD PTR ds:0x429018,0x70b
  4115d0:	add    eax,0x3272e0
  4115d5:	mov    DWORD PTR [edx],eax
  4115d7:	mov    edx,DWORD PTR ds:0x429000
  4115dd:	add    DWORD PTR ds:0x42d01c,edx
  4115e3:	mov    eax,DWORD PTR [ebp+0xc]
  4115e6:	and    DWORD PTR ds:0x42a008,0x0
  4115f0:	mov    edx,DWORD PTR ds:0x42a008
  4115f6:	inc    edx
  4115f7:	mov    DWORD PTR ds:0x42a008,edx
  4115fd:	cmp    DWORD PTR ds:0x42a008,0x6
  411604:	jne    0x411613
  41160a:	push   DWORD PTR [ebp-0x24]
  41160d:	call   DWORD PTR ds:0x42ed77
  411613:	cmp    DWORD PTR ds:0x42a008,0x5
  41161a:	jne    0x41162d
  411620:	mov    edx,DWORD PTR ds:0x42a008
  411626:	inc    edx
  411627:	mov    DWORD PTR ds:0x42a008,edx
  41162d:	cmp    DWORD PTR ds:0x42a008,0x1c
  411634:	jb     0x4115f0
  41163a:	xor    eax,ecx
  41163c:	push   esi
  41163d:	mov    esi,DWORD PTR [ebp+0x10]
  411640:	mov    edx,0x3272e0
  411645:	add    eax,edx
  411647:	mov    DWORD PTR [esi+0x4],eax
  41164a:	mov    eax,DWORD PTR [ebp+0x14]
  41164d:	mov    esi,DWORD PTR [ebp+0x10]
  411650:	mov    DWORD PTR [esi+0x8],eax
  411653:	mov    eax,DWORD PTR [ebp+0x18]
  411656:	mov    esi,DWORD PTR [ebp+0x10]
  411659:	mov    DWORD PTR [esi+0xc],eax
  41165c:	mov    eax,DWORD PTR [ebp+0x1c]
  41165f:	mov    esi,DWORD PTR [ebp+0x10]
  411662:	mov    DWORD PTR [esi+0x10],eax
  411665:	mov    eax,DWORD PTR [ebp+0x8]
  411668:	xor    eax,ecx
  41166a:	add    eax,edx
  41166c:	pop    esi
  41166d:	leave  
  41166e:	ret    0x18
  411671:	push   ebp
  411672:	mov    ebp,esp
  411674:	sub    esp,0x98
  41167a:	xor    ecx,eax
  41167c:	mov    ecx,DWORD PTR [ebp+0x8]
  41167f:	adc    DWORD PTR ds:0x42b004,0x2788
  411689:	mov    eax,0x8a8c
  41168e:	sub    DWORD PTR ds:0x42d01c,0x61b3
  411698:	xor    ax,WORD PTR [ecx+0x20]
  41169c:	mov    ecx,0x3b50
  4116a1:	xor    DWORD PTR ds:0x42c000,0x42b00c
  4116ab:	add    ax,cx
  4116ae:	movzx  ecx,BYTE PTR ds:0x42b010
  4116b5:	sub    DWORD PTR ds:0x42d008,ecx
  4116bb:	movzx  eax,ax
  4116be:	mov    DWORD PTR [ebp-0x14],eax
  4116c1:	mov    ecx,DWORD PTR ds:0x42b010
  4116c7:	add    DWORD PTR ds:0x42901c,ecx
  4116cd:	mov    BYTE PTR [ebp-0x1],0x79
  4116d1:	lea    eax,[ebp-0x1]
  4116d4:	mov    ecx,DWORD PTR ds:0x42b010
  4116da:	xor    ecx,DWORD PTR ds:0x42c000
  4116e0:	mov    DWORD PTR ds:0x42b010,ecx
  4116e6:	mov    DWORD PTR [ebp-0xc],eax
  4116e9:	and    DWORD PTR ds:0x429010,0x6b4e
  4116f3:	mov    al,BYTE PTR [ebp-0x1]
  4116f6:	sbb    DWORD PTR ds:0x42d000,edi
  4116fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4116ff:	xor    al,0x73
  411701:	or     DWORD PTR ds:0x42a010,0x38
  41170b:	sub    al,0x9
  41170d:	adc    DWORD PTR ds:0x42c010,0x42a004
  411717:	mov    BYTE PTR [ecx],al
  411719:	mov    DWORD PTR ds:0x42c018,0x13
  411723:	cmp    DWORD PTR ds:0x42c018,0x0
  41172a:	je     0x4117ef
  411730:	cmp    DWORD PTR ds:0x42c018,0x22
  411737:	jne    0x411752
  41173d:	push   0x42e199
  411742:	push   0x42e23b
  411747:	push   0x544c
  41174c:	call   DWORD PTR ds:0x42ed83
  411752:	mov    eax,ds:0x42c018
  411757:	dec    eax
  411758:	mov    ds:0x42c018,eax
  41175d:	jmp    0x411723
  411762:	mov    DWORD PTR ds:0x42b004,0x11
  41176c:	cmp    DWORD PTR ds:0x42b004,0x0
  411773:	je     0x4117ef
  411779:	cmp    DWORD PTR ds:0x42b004,0x21
  411780:	jne    0x41178c
  411786:	call   DWORD PTR ds:0x42ed87
  41178c:	mov    ecx,DWORD PTR ds:0x42b004
  411792:	dec    ecx
  411793:	mov    DWORD PTR ds:0x42b004,ecx
  411799:	jmp    0x41176c
  41179e:	mov    DWORD PTR ds:0x42a004,0x1f
  4117a8:	cmp    DWORD PTR ds:0x42a004,0x0
  4117af:	je     0x4117ef
  4117b5:	cmp    DWORD PTR ds:0x42a004,0x28
  4117bc:	jne    0x4117d3
  4117c2:	push   DWORD PTR [ebp-0x14]
  4117c5:	push   0x42c008
  4117ca:	push   DWORD PTR [ebp-0x10]
  4117cd:	call   DWORD PTR ds:0x42ed8b
  4117d3:	mov    ecx,DWORD PTR ds:0x42a004
  4117d9:	dec    ecx
  4117da:	mov    DWORD PTR ds:0x42a004,ecx
  4117e0:	jmp    0x4117a8
  4117e5:	and    DWORD PTR ds:0x42c00c,0x3b9a
  4117ef:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  4117f6:	and    DWORD PTR ds:0x42a000,0x0
  411800:	jmp    0x411812
  411805:	mov    ecx,DWORD PTR ds:0x42a000
  41180b:	inc    ecx
  41180c:	mov    DWORD PTR ds:0x42a000,ecx
  411812:	cmp    DWORD PTR ds:0x42a000,0x18
  411819:	jae    0x41185e
  41181f:	cmp    DWORD PTR ds:0x42a000,0x9
  411826:	jne    0x41183f
  41182c:	push   0x42e199
  411831:	push   DWORD PTR [ebp-0x20]
  411834:	push   0x603c
  411839:	call   DWORD PTR ds:0x42ed8f
  41183f:	cmp    DWORD PTR ds:0x42a000,0x8
  411846:	jne    0x411859
  41184c:	mov    ecx,DWORD PTR ds:0x42a000
  411852:	inc    ecx
  411853:	mov    DWORD PTR ds:0x42a000,ecx
  411859:	jmp    0x411805
  41185e:	push   ebx
  41185f:	mov    ecx,DWORD PTR ds:0x42a000
  411865:	xor    DWORD PTR ds:0x42b004,ecx
  41186b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  411872:	xor    eax,eax
  411874:	xor    eax,DWORD PTR ds:0x429020
  41187a:	or     DWORD PTR ds:0x42c018,eax
  411880:	mov    ecx,DWORD PTR [ebp-0x18]
  411883:	adc    DWORD PTR ds:0x42d008,ecx
  411889:	push   esi
  41188a:	add    esi,DWORD PTR ds:0x42d000
  411890:	mov    eax,0x7510899
  411895:	add    DWORD PTR ds:0x42a01c,edi
  41189b:	xor    ecx,eax
  41189d:	mov    esi,0x3272e0
  4118a2:	mov    DWORD PTR ds:0x42b01c,0x49a5
  4118ac:	push   edi
  4118ad:	add    ecx,esi
  4118af:	jmp    0x4118c9
  4118b4:	mov    dl,BYTE PTR [ebp-0x1]
  4118b7:	mov    DWORD PTR ds:0x42d008,0x2685
  4118c1:	mov    BYTE PTR [ebp+ecx*1-0x98],dl
  4118c8:	inc    ecx
  4118c9:	cmp    ecx,0x40
  4118cc:	mov    DWORD PTR ds:0x429020,0x4a16
  4118d6:	jb     0x4118b4
  4118dc:	mov    DWORD PTR ds:0x42c008,0x3563
  4118e6:	mov    edx,DWORD PTR [ebp-0x18]
  4118e9:	add    DWORD PTR ds:0x42d014,0x7c84
  4118f3:	xor    edx,eax
  4118f5:	xor    DWORD PTR ds:0x42d00c,0x42d010
  4118ff:	add    edx,esi
  411901:	jmp    0x4119b0
  411906:	mov    DWORD PTR ds:0x42c014,0x1e
  411910:	cmp    DWORD PTR ds:0x42c014,0x0
  411917:	je     0x411953
  41191d:	cmp    DWORD PTR ds:0x42c014,0x21
  411924:	jne    0x411933
  41192a:	push   DWORD PTR [ebp-0x20]
  41192d:	call   DWORD PTR ds:0x42ed4f
  411933:	xor    edi,edi
  411935:	xor    edi,DWORD PTR ds:0x42c014
  41193b:	dec    edi
  41193c:	mov    DWORD PTR ds:0x42c014,edi
  411942:	jmp    0x411910
  411947:	mov    edi,DWORD PTR ds:0x42b008
  41194d:	sbb    DWORD PTR ds:0x42a004,edi
  411953:	mov    edi,DWORD PTR [ebp+0x8]
  411956:	sbb    DWORD PTR ds:0x42901c,0x7b78
  411960:	mov    ecx,0x8a8c
  411965:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41196a:	or     DWORD PTR ds:0x429020,0x232e
  411974:	mov    edi,0x3b50
  411979:	add    DWORD PTR ds:0x42c010,0x42b010
  411983:	add    cx,di
  411986:	movzx  ecx,cx
  411989:	mov    DWORD PTR [ebp-0xc],ecx
  41198c:	mov    ecx,DWORD PTR [ebp+0x8]
  41198f:	sub    DWORD PTR ds:0x42c000,0x42c00c
  411999:	movzx  ecx,WORD PTR [ecx+edx*4]
  41199d:	xor    ecx,0x8a8c
  4119a3:	add    ecx,edi
  4119a5:	mov    edi,DWORD PTR [ebp-0xc]
  4119a8:	mov    BYTE PTR [ebp+edi*1-0x98],cl
  4119af:	inc    edx
  4119b0:	not    ecx
  4119b2:	mov    ecx,DWORD PTR [ebp-0x14]
  4119b5:	mov    DWORD PTR ds:0x42d008,0x3da8
  4119bf:	cmp    edx,ecx
  4119c1:	mov    DWORD PTR ds:0x42b00c,0x9ea
  4119cb:	jne    0x411906
  4119d1:	mov    ecx,DWORD PTR [ebp-0x18]
  4119d4:	mov    edx,DWORD PTR [ebp+0x10]
  4119d7:	xor    ecx,eax
  4119d9:	add    ecx,esi
  4119db:	mov    DWORD PTR [edx],ecx
  4119dd:	sbb    ecx,DWORD PTR ds:0x42b01c
  4119e3:	mov    ecx,DWORD PTR [ebp-0x18]
  4119e6:	xor    ecx,eax
  4119e8:	add    ecx,esi
  4119ea:	and    DWORD PTR ds:0x429014,0x0
  4119f4:	xor    edi,edi
  4119f6:	xor    edi,DWORD PTR ds:0x429014
  4119fc:	inc    edi
  4119fd:	mov    DWORD PTR ds:0x429014,edi
  411a03:	cmp    DWORD PTR ds:0x429014,0x1b
  411a0a:	jne    0x411a22
  411a10:	push   0x42e0a2
  411a15:	push   0x0
  411a17:	push   0x1
  411a19:	push   DWORD PTR [ebp-0x10]
  411a1c:	call   DWORD PTR ds:0x42ed53
  411a22:	cmp    DWORD PTR ds:0x429014,0x18
  411a29:	jb     0x4119f4
  411a2f:	sub    edi,DWORD PTR ds:0x429024
  411a35:	mov    DWORD PTR [ebp-0xc],ecx
  411a38:	adc    DWORD PTR ds:0x429000,0x3601
  411a42:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411a49:	mov    DWORD PTR [ebp-0x10],0xf89c85a9
  411a50:	sbb    ecx,ecx
  411a52:	mov    DWORD PTR [ebp-0x14],0xf89c95b9
  411a59:	add    ecx,ecx
  411a5b:	mov    ecx,DWORD PTR [ebp-0x10]
  411a5e:	and    DWORD PTR ds:0x42a018,0x0
  411a68:	mov    edi,DWORD PTR ds:0x42a018
  411a6e:	inc    edi
  411a6f:	mov    DWORD PTR ds:0x42a018,edi
  411a75:	cmp    DWORD PTR ds:0x42a018,0xa
  411a7c:	jne    0x411a8d
  411a82:	push   0x42e205
  411a87:	call   DWORD PTR ds:0x42ed57
  411a8d:	cmp    DWORD PTR ds:0x42a018,0x9
  411a94:	jne    0x411aa9
  411a9a:	xor    edi,edi
  411a9c:	or     edi,DWORD PTR ds:0x42a018
  411aa2:	inc    edi
  411aa3:	mov    DWORD PTR ds:0x42a018,edi
  411aa9:	cmp    DWORD PTR ds:0x42a018,0x17
  411ab0:	jb     0x411a68
  411ab6:	mov    edi,DWORD PTR ds:0x42d014
  411abc:	sbb    DWORD PTR ds:0x42c018,edi
  411ac2:	mov    DWORD PTR [ebp+0x8],ecx
  411ac5:	or     ecx,0x1035
  411acb:	mov    ecx,DWORD PTR [ebp+0x8]
  411ace:	xor    ecx,eax
  411ad0:	inc    edi
  411ad1:	add    ecx,esi
  411ad3:	mov    DWORD PTR ds:0x42900c,edx
  411ad9:	mov    ecx,0x242ebed
  411ade:	mov    edi,0xf641bea
  411ae3:	je     0x41f655
  411ae9:	mov    edx,DWORD PTR [ebp+0x8]
  411aec:	mov    ebx,DWORD PTR [ebp-0x8]
  411aef:	xor    edx,eax
  411af1:	jmp    0x413e7a
  411af6:	aas    
  411af7:	xor    esp,DWORD PTR [ecx]
  411af9:	es cmc 
  411afb:	hlt    
  411afc:	and    edi,DWORD PTR [ebx]
  411afe:	sbb    al,0xe
  411b00:	icebp  
  411b01:	in     eax,0xd5
  411b03:	cli    
  411b04:	jae    0x411aa0
  411b06:	sbb    DWORD PTR [esi+0x5f067a7a],ebp
  411b0c:	jp     0x411b88
  411b0e:	xor    ebx,esp
  411b10:	inc    edi
  411b11:	add    al,BYTE PTR [edx-0x2c2ee79b]
  411b17:	out    0x38,al
  411b19:	sahf   
  411b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b1b:	and    al,0xb1
  411b1d:	stc    
  411b1e:	inc    edi
  411b1f:	and    al,BYTE PTR [edx-0x4f]
  411b22:	push   edi
  411b23:	out    0x45,eax
  411b25:	ret    0xb581
  411b28:	mov    edi,0x72df8837
  411b2d:	(bad)  
  411b2f:	sub    edi,DWORD PTR [esi-0x3cbec9bf]
  411b35:	pop    edx
  411b36:	xchg   esp,eax
  411b37:	retf   
  411b38:	cmp    eax,0xb4997256
  411b3d:	int    0xc2
  411b3f:	adc    cl,BYTE PTR [edi+0x3ad442de]
  411b45:	sti    
  411b46:	xchg   esi,eax
  411b47:	lods   al,BYTE PTR ds:[esi]
  411b48:	mov    ds:0xdbeb52a5,eax
  411b4d:	cdq    
  411b4e:	pop    es
  411b4f:	add    eax,0xaa378559
  411b54:	lock fidivr WORD PTR [eax+0x51]
  411b58:	out    0xcd,al
  411b5a:	fldenv [eax]
  411b5c:	sbb    ebp,edx
  411b5e:	sbb    DWORD PTR [edi+ecx*1-0x22],eax
  411b62:	in     al,0x67
  411b64:	rcl    DWORD PTR [edi+0x22],0xb6
  411b68:	jg     0x411af9
  411b6a:	shl    al,1
  411b6c:	xor    al,BYTE PTR [esi]
  411b6e:	out    dx,al
  411b6f:	enter  0x2ff3,0xbc
  411b73:	rol    DWORD PTR [eax],0x89
  411b76:	dec    ebx
  411b77:	inc    ebp
  411b78:	sub    BYTE PTR [ebx-0x54912b51],0x7e
  411b7f:	pop    ss
  411b80:	or     dh,BYTE PTR [edi-0x3d]
  411b83:	and    esi,edx
  411b85:	jbe    0x411b5d
  411b87:	jl     0x411b23
  411b89:	sbb    eax,0xaf6f1ca9
  411b8e:	repz push ebx
  411b90:	fnstenv [edi-0xc1e89f1]
  411b96:	lds    eax,FWORD PTR [ecx-0x55859db4]
  411b9c:	and    eax,0x3214bbd0
  411ba1:	(bad)  
  411ba2:	rcl    DWORD PTR [ecx-0x22],cl
  411ba5:	gs dec edi
  411ba7:	call   0xebb3aee6
  411bac:	retf   
  411bad:	push   esi
  411bae:	mov    DWORD PTR [eax-0x6b3bd2f3],ebp
  411bb4:	lea    esi,[edi+0x7b]
  411bb7:	xchg   esi,eax
  411bb8:	dec    ebx
  411bb9:	add    DWORD PTR es:[eax+0x11],0x49
  411bbe:	jle    0x411b5f
  411bc0:	ins    DWORD PTR es:[edi],dx
  411bc1:	gs std 
  411bc3:	and    ecx,DWORD PTR [eax+edx*1+0xa]
  411bc7:	and    ebx,DWORD PTR [esi-0x64]
  411bca:	das    
  411bcb:	xor    ebx,esi
  411bcd:	fucom  st(1)
  411bcf:	mov    DWORD PTR [eax-0xd642e87],edi
  411bd5:	test   BYTE PTR [edx-0x18608fe4],bh
  411bdb:	add    al,0xda
  411bdd:	xchg   ecx,eax
  411bde:	mov    edx,0xf9e26335
  411be3:	out    dx,eax
  411be4:	mov    BYTE PTR [edi],ch
  411be6:	dec    ecx
  411be7:	push   esi
  411be8:	leave  
  411be9:	les    ebp,FWORD PTR [esi]
  411beb:	xor    DWORD PTR [ecx],edx
  411bed:	cmp    DWORD PTR ds:0x42791dca,esi
  411bf3:	dec    esi
  411bf4:	test   eax,0x31671e11
  411bf9:	add    edx,eax
  411bfb:	mov    eax,0x66a9112b
  411c00:	or     ah,0xa7
  411c03:	pop    eax
  411c04:	mov    ah,0x93
  411c06:	and    DWORD PTR [edi+0x1fef7d64],0xa3cbbf0
  411c10:	xchg   edi,eax
  411c11:	mov    BYTE PTR ds:0x69bd1aeb,al
  411c17:	push   ds
  411c18:	lods   al,BYTE PTR ds:[esi]
  411c19:	int3   
  411c1a:	pop    ds
  411c1b:	pop    es
  411c1c:	ret    
  411c1d:	xchg   edi,eax
  411c1e:	enter  0xc050,0x41
  411c22:	mov    BYTE PTR [edx-0x89160af],ah
  411c28:	jo     0x411bdb
  411c2a:	xor    al,0x6e
  411c2c:	out    0xf3,al
  411c2e:	je     0x411bba
  411c30:	ret    
  411c31:	jge    0x411c36
  411c33:	or     edi,DWORD PTR [ebp+0x16]
  411c36:	cmp    ah,BYTE PTR [ecx]
  411c38:	mov    esi,0xe5bbaffa
  411c3d:	cmp    esp,DWORD PTR ds:0x271a20e6
  411c43:	outs   dx,DWORD PTR ds:[esi]
  411c44:	les    ecx,FWORD PTR [ebx]
  411c46:	scas   al,BYTE PTR es:[edi]
  411c47:	call   0x5440a3f6
  411c4c:	pop    ebp
  411c4d:	mov    ds:0xfd3bb3e9,al
  411c52:	in     eax,dx
  411c53:	int3   
  411c54:	(bad)  
  411c55:	cmp    ah,BYTE PTR [edx-0x3d]
  411c58:	(bad)  
  411c59:	fstp   TBYTE PTR [ebx+ebp*4-0x80]
  411c5d:	fadd   st(5),st
  411c5f:	cmp    ah,BYTE PTR [eax+eax*2+0x25fd7b75]
  411c66:	shr    BYTE PTR [ebx-0x734bec56],cl
  411c6c:	ror    DWORD PTR ds:0x5ded7b63,1
  411c72:	call   0x203c78d2
  411c77:	push   es
  411c78:	add    BYTE PTR [eax],dl
  411c7a:	mov    ecx,0xf89b729d
  411c7f:	ja     0x411c37
  411c81:	adc    al,0xa9
  411c83:	push   ecx
  411c84:	and    ecx,esi
  411c86:	out    0x55,eax
  411c88:	jae    0x411c6e
  411c8a:	pop    edx
  411c8b:	lea    edx,[eax-0x13]
  411c8e:	cmp    eax,0x7f76ba3e
  411c93:	pop    ds
  411c94:	cmc    
  411c95:	retf   
  411c96:	add    al,0x69
  411c98:	sbb    dh,BYTE PTR [esi-0x292e26a2]
  411c9e:	std    
  411c9f:	mov    eax,ds:0xf4b3e3e
  411ca4:	cwde   
  411ca5:	fsub   st,st(4)
  411ca7:	sti    
  411ca8:	rol    BYTE PTR [edi-0x2dd29b24],1
  411cae:	and    eax,0xf108f6a
  411cb3:	jmp    0xb36617f4
  411cb8:	stc    
  411cb9:	(bad)  
  411cba:	in     al,0x9
  411cbc:	(bad)  
  411cbd:	out    0xb6,al
  411cbf:	(bad)  
  411cc1:	or     al,0x76
  411cc3:	jae    0x411c6a
  411cc5:	add    al,0xb1
  411cc7:	stos   BYTE PTR es:[edi],al
  411cc8:	or     eax,0xec7dde3a
  411ccd:	shr    BYTE PTR [ebp+edi*4+0x5602792c],1
  411cd4:	xchg   edx,edx
  411cd6:	inc    ebx
  411cd7:	mov    ?,WORD PTR [ebp+0x2b403489]
  411cdd:	pop    ss
  411cde:	sub    bh,dh
  411ce0:	ja     0x411cad
  411ce2:	call   0xd804:0x63b5560c
  411ce9:	sub    eax,0xcf07b43d
  411cee:	and    al,0x88
  411cf0:	clc    
  411cf1:	jb     0x411d62
  411cf3:	rcr    DWORD PTR [ecx],cl
  411cf5:	repnz push es
  411cf7:	loop   0x411d72
  411cf9:	test   bl,al
  411cfb:	mov    dh,BYTE PTR [ebp+0x58a2652c]
  411d01:	cmp    cl,BYTE PTR [ecx-0x3f]
  411d04:	pop    edx
  411d05:	test   eax,0x580722ae
  411d0a:	cmc    
  411d0b:	sbb    BYTE PTR [ecx-0x5e8d2323],ah
  411d11:	mov    bh,0xf
  411d13:	cmp    edi,DWORD PTR [esi-0x67]
  411d16:	(bad)  
  411d17:	pushf  
  411d18:	adc    BYTE PTR [bp+si+0x6d4e],ch
  411d1d:	cwde   
  411d1e:	mov    ch,0xf8
  411d20:	mov    ds:0x6f4227b1,al
  411d25:	and    ch,BYTE PTR [ecx-0x6bc9810e]
  411d2b:	jae    0x411d77
  411d2d:	adc    BYTE PTR [ebp-0xd381e26],cl
  411d33:	clc    
  411d34:	test   BYTE PTR [esi+0x27],bl
  411d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d38:	cmp    DWORD PTR [esi-0xf],esi
  411d3b:	call   ebx
  411d3d:	cmp    BYTE PTR [esi],cl
  411d3f:	ret    0x61ae
  411d42:	inc    eax
  411d43:	pop    edx
  411d44:	push   ebp
  411d45:	and    DWORD PTR [edi],0xebe73bc6
  411d4b:	into   
  411d4c:	out    dx,eax
  411d4d:	inc    ebp
  411d4e:	sub    ah,bh
  411d50:	sbb    esi,ecx
  411d52:	jmp    0x9f628fa5
  411d57:	mov    cl,0xe4
  411d59:	lds    ecx,FWORD PTR ds:0xdb07111f
  411d5f:	dec    esp
  411d60:	mov    ah,BYTE PTR [esi+edi*1-0x52]
  411d64:	xor    al,bl
  411d66:	push   ss
  411d67:	and    BYTE PTR [edi],dl
  411d69:	and    ch,cl
  411d6b:	jbe    0x411d57
  411d6d:	xor    DWORD PTR [edi],ebx
  411d6f:	jnp    0x411d93
  411d71:	call   0x6d8e1166
  411d76:	jae    0x411d4e
  411d78:	jmp    0x411d3e
  411d7a:	mov    edi,0xfd8cfdbf
  411d7f:	dec    edi
  411d80:	mov    ds:0xff46d0b1,eax
  411d85:	cwde   
  411d86:	lods   al,BYTE PTR ds:[esi]
  411d87:	cli    
  411d88:	push   es
  411d89:	cmp    edx,DWORD PTR [edi-0x7a128c36]
  411d8f:	sbb    ah,BYTE PTR [ebp+0x45947ed8]
  411d95:	lds    ebx,FWORD PTR [ecx-0x41e29631]
  411d9b:	sub    edx,ecx
  411d9d:	pop    ss
  411d9e:	cmp    eax,0x876694db
  411da3:	fwait
  411da4:	inc    edi
  411da5:	popf   
  411da6:	xchg   ax,ax
  411da8:	sub    edx,DWORD PTR [esi+0x58]
  411dab:	pop    esp
  411dac:	sti    
  411dad:	sbb    eax,0x759ce6fd
  411db2:	push   ebx
  411db3:	inc    eax
  411db4:	push   0xfffffffa
  411db6:	mov    cl,0x33
  411db8:	test   eax,0xe385519b
  411dbd:	mov    ah,0x5c
  411dbf:	ret    
  411dc0:	inc    ecx
  411dc1:	lock out dx,al
  411dc3:	sub    al,0x4c
  411dc5:	test   dh,bl
  411dc7:	jb     0x411d92
  411dc9:	xchg   esp,eax
  411dca:	mov    dh,0x14
  411dcc:	pusha  
  411dcd:	fldenv [edi-0x51]
  411dd0:	retf   
  411dd1:	ret    0x5e2a
  411dd4:	inc    ecx
  411dd5:	dec    ebp
  411dd6:	repz inc ebx
  411dd8:	sbb    eax,0x27cddb5a
  411ddd:	jns    0x411dbe
  411ddf:	pop    edx
  411de0:	test   al,0x4c
  411de2:	or     eax,0x647e1d2a
  411de7:	retf   
  411de8:	lods   al,BYTE PTR ds:[esi]
  411de9:	ret    0xd88e
  411dec:	and    eax,0x81954073
  411df1:	and    DWORD PTR [edi+0x29],ecx
  411df4:	js     0x411dd7
  411df6:	jnp    0x411e6b
  411df8:	lock cmp al,0x9
  411dfb:	imul   edi,DWORD PTR [ebx+0xcf918a7],0xf33b34ac
  411e05:	dec    ebp
  411e06:	pushf  
  411e07:	(bad)  
  411e08:	cmp    eax,0xb4eff269
  411e0d:	xor    ebp,DWORD PTR [esi]
  411e0f:	inc    esi
  411e10:	xor    al,0x46
  411e12:	(bad)  
  411e13:	and    dl,bh
  411e15:	in     eax,0xcc
  411e17:	sbb    cl,al
  411e19:	(bad)  
  411e1a:	int    0x40
  411e1c:	mov    cl,0x12
  411e1e:	xchg   edx,eax
  411e1f:	cdq    
  411e20:	cdq    
  411e21:	and    BYTE PTR [ecx-0x3e],bl
  411e24:	js     0x411ddd
  411e26:	sahf   
  411e27:	xor    al,0xec
  411e29:	adc    ah,BYTE PTR [ebx+0x3e]
  411e2c:	(bad)  
  411e2d:	adc    WORD PTR [edx+0x30],sp
  411e31:	gs mov esp,0x35e92895
  411e37:	sbb    eax,0xafe9f956
  411e3c:	imul   edx,DWORD PTR [edi+0x1a],0x61b78f52
  411e43:	xor    ebp,0xb97aa917
  411e49:	mov    ds:0x2fc4a52b,eax
  411e4e:	sbb    eax,0xeebd081b
  411e53:	rcl    DWORD PTR [esp+eax*4+0x48],cl
  411e57:	inc    ebp
  411e58:	sub    bh,BYTE PTR [esi+edi*4+0x4812cf8a]
  411e5f:	out    0xbb,al
  411e61:	push   ebp
  411e62:	and    eax,DWORD PTR [ebx-0x2d]
  411e65:	jge    0x411ecb
  411e67:	xor    ah,BYTE PTR [ebp-0x5a4e3af4]
  411e6d:	in     al,dx
  411e6e:	xor    DWORD PTR [edi-0x47],ebx
  411e71:	rcr    BYTE PTR [edx],0xf3
  411e74:	fbld   TBYTE PTR [esi+0x8753269]
  411e7a:	adc    al,0x27
  411e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7d:	sar    esp,0x42
  411e80:	and    al,0xaa
  411e82:	cmp    ebp,esi
  411e84:	mov    ?,ecx
  411e86:	mov    dh,0xd0
  411e88:	xchg   ebp,eax
  411e89:	stos   DWORD PTR es:[edi],eax
  411e8a:	dec    ecx
  411e8b:	sbb    al,BYTE PTR [ecx+0x44d37264]
  411e91:	nop
  411e92:	pop    esp
  411e93:	dec    edi
  411e94:	call   0x8027d252
  411e99:	rcr    DWORD PTR [esi-0x1d7fb0d1],0xce
  411ea0:	rol    BYTE PTR [edi],cl
  411ea2:	je     0x411e4d
  411ea4:	fdiv   QWORD PTR [ebx-0x5d]
  411ea7:	mov    esp,0x6972a20e
  411eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ead:	lock pop edi
  411eaf:	fidiv  WORD PTR [esi-0x7d]
  411eb2:	loopne 0x411ea0
  411eb4:	outs   dx,DWORD PTR ds:[esi]
  411eb5:	iret   
  411eb6:	cmp    BYTE PTR [eax+esi*4-0x45dff5f1],0x2c
  411ebe:	dec    esp
  411ebf:	sub    eax,0x9ef0c78c
  411ec4:	or     BYTE PTR [edx-0x59],dh
  411ec7:	jae    0x411f38
  411ec9:	push   esp
  411eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ecb:	push   eax
  411ecc:	outs   dx,BYTE PTR ds:[esi]
  411ecd:	cmc    
  411ece:	pop    ss
  411ecf:	fisub  DWORD PTR [ecx-0x47659231]
  411ed5:	mov    BYTE PTR [ebp-0x65ba1ba9],bl
  411edb:	retf   
  411edc:	cmp    cl,BYTE PTR [ebp+0x6da586aa]
  411ee2:	lock in eax,dx
  411ee4:	addr16 or al,0x8e
  411ee7:	jg     0x411eff
  411ee9:	pop    edi
  411eea:	adc    DWORD PTR [ebx],eax
  411eec:	mov    bl,0x49
  411eee:	fld    QWORD PTR [eax+ecx*2]
  411ef1:	pushf  
  411ef2:	xchg   ebp,eax
  411ef3:	test   al,0x9f
  411ef5:	push   esp
  411ef6:	xchg   ebp,eax
  411ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef8:	sahf   
  411ef9:	add    eax,0x2abbce01
  411efe:	hlt    
  411eff:	mov    edx,0xef261c6e
  411f04:	ror    eax,1
  411f06:	adc    eax,0x648f5b72
  411f0b:	jno    0x411ed8
  411f0d:	stos   DWORD PTR es:[edi],eax
  411f0e:	in     eax,dx
  411f0f:	into   
  411f10:	not    esi
  411f12:	inc    edx
  411f13:	mov    ds:0x813381da,al
  411f18:	pusha  
  411f19:	xor    edi,DWORD PTR [edi+0x169c78bc]
  411f1f:	mov    esi,0x5cc84332
  411f24:	ds (bad) 
  411f26:	out    0xa7,al
  411f28:	repnz xor eax,0x32500e22
  411f2e:	xchg   esp,eax
  411f2f:	add    al,0x59
  411f31:	outs   dx,DWORD PTR ds:[esi]
  411f32:	mov    al,ds:0xeda76cc7
  411f37:	add    BYTE PTR [edx+0x9d905e],bl
  411f3d:	mov    cl,0xeb
  411f3f:	sub    bl,cl
  411f41:	xor    eax,0xbafed4cc
  411f46:	iret   
  411f47:	int    0x71
  411f49:	loopne 0x411f92
  411f4b:	jno    0x411fa0
  411f4d:	aaa    
  411f4e:	bound  ecx,QWORD PTR [ebx+ecx*2+0x23]
  411f52:	imul   esi,DWORD PTR [ecx+ebx*1-0x2d],0x7ab2da88
  411f5a:	and    eax,DWORD PTR [esi+ebx*8]
  411f5d:	adc    DWORD PTR [eax+0x771917b],0x2742f1c0
  411f67:	mov    ecx,0x28291df8
  411f6c:	jp     0x411f41
  411f6e:	sub    edx,ecx
  411f70:	shr    BYTE PTR [ebp+0x617df693],0x61
  411f77:	out    0xd1,al
  411f79:	push   esp
  411f7a:	out    dx,eax
  411f7b:	retf   0xf4c
  411f7e:	outs   dx,DWORD PTR ds:[esi]
  411f7f:	loopne 0x411f28
  411f81:	or     edx,esi
  411f83:	sbb    ecx,edx
  411f85:	mov    ebp,0x28042dbe
  411f8a:	jp     0x412007
  411f8c:	(bad)  
  411f8d:	pusha  
  411f8e:	jge    0x411f57
  411f90:	loopne 0x411fce
  411f92:	inc    ebx
  411f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f94:	push   esi
  411f95:	dec    ecx
  411f96:	jle    0x41200e
  411f98:	cdq    
  411f99:	jno    0x411f98
  411f9b:	dec    ecx
  411f9c:	test   eax,0x48e2ff24
  411fa1:	mov    BYTE PTR [edi+ebx*8-0x1f],bl
  411fa5:	in     eax,0xbe
  411fa7:	std    
  411fa8:	dec    ebp
  411fa9:	cmp    BYTE PTR [ecx+esi*2-0x4cef1dd2],bh
  411fb0:	aad    0x95
  411fb2:	inc    esi
  411fb3:	mov    esi,0x2c2a0424
  411fb8:	adc    eax,0xddb64d82
  411fbd:	or     DWORD PTR [edi+0x8],0x2f26fe5d
  411fc4:	pusha  
  411fc5:	aaa    
  411fc6:	imul   ebp,DWORD PTR [esi-0x350ce352],0x29
  411fcd:	push   esp
  411fce:	adc    ecx,DWORD PTR [ebp-0x1555bab5]
  411fd4:	mov    ecx,0x4c6ca3aa
  411fd9:	mov    bh,0x34
  411fdb:	loop   0x411f87
  411fdd:	in     al,0xfc
  411fdf:	pop    ecx
  411fe0:	shl    DWORD PTR [ebx],cl
  411fe2:	aas    
  411fe3:	jg     0x412042
  411fe5:	fsub   QWORD PTR [eax]
  411fe7:	ret    0xec33
  411fea:	sbb    BYTE PTR [edx],dh
  411fec:	sbb    eax,0x707b972d
  411ff1:	jns    0x411fdc
  411ff3:	or     al,0x8e
  411ff5:	mov    bh,0xb8
  411ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff8:	xor    eax,0x95288c9e
  411ffd:	pop    edx
  411ffe:	cmp    ecx,ebp
  412000:	xor    dh,BYTE PTR [ecx+0x76283ede]
  412006:	fcomi  st,st(1)
  412008:	mov    ebx,0x8c6fc617
  41200d:	add    al,BYTE PTR [ecx-0x55]
  412010:	popf   
  412011:	dec    edi
  412012:	bound  esi,QWORD PTR [edi+0x56d9e67a]
  412018:	aaa    
  412019:	sub    al,0x37
  41201b:	cmc    
  41201c:	push   es
  41201d:	shl    DWORD PTR [ebp-0x1218b401],cl
  412023:	and    al,0x88
  412025:	call   0xa0ee:0xc9aed1a5
  41202c:	int3   
  41202d:	mov    edi,0xc0b86862
  412032:	jbe    0x41209f
  412034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412035:	and    dl,bl
  412037:	aaa    
  412038:	jno    0x411ff9
  41203a:	inc    ebp
  41203b:	sti    
  41203c:	and    ah,dh
  41203e:	out    0x17,eax
  412040:	inc    esp
  412041:	dec    ebp
  412042:	popa   
  412043:	fisubr WORD PTR [ebx]
  412045:	cmp    ebx,DWORD PTR [ebx]
  412047:	sti    
  412048:	test   eax,0xf4d3e680
  41204d:	mov    al,ds:0x95754668
  412052:	je     0x41201f
  412054:	inc    ebp
  412055:	pop    eax
  412056:	rol    DWORD PTR [esp+esi*4+0xb88e454],cl
  41205d:	dec    ebx
  41205e:	mov    ebx,DWORD PTR [ebp-0x53]
  412061:	pop    ebp
  412062:	ins    DWORD PTR es:[edi],dx
  412063:	dec    ebx
  412064:	cmp    eax,0xaaf46599
  412069:	lods   al,BYTE PTR ds:[esi]
  41206a:	jo     0x412093
  41206c:	fmul   QWORD PTR [esi-0x19]
  41206f:	jne    0x41209a
  412071:	jecxz  0x4120b3
  412073:	sub    al,0x90
  412075:	push   es
  412076:	pop    eax
  412077:	push   esp
  412078:	and    ch,bh
  41207a:	outs   dx,BYTE PTR ds:[esi]
  41207b:	fsub   QWORD PTR ds:0x6f1eb9ac
  412082:	aaa    
  412083:	or     al,0x66
  412085:	or     esi,esp
  412087:	jo     0x412096
  412089:	(bad)  
  41208a:	and    ecx,ebx
  41208c:	adc    edx,esp
  41208e:	sbb    ebx,DWORD PTR [ebp+0x68e3304a]
  412094:	ins    BYTE PTR es:[edi],dx
  412095:	ret    
  412096:	mov    al,ds:0xf24f2e03
  41209b:	fsub   QWORD PTR [esi]
  41209d:	mov    eax,0x6962f824
  4120a2:	or     bh,BYTE PTR ds:0x5fb76eef
  4120a8:	push   ebp
  4120a9:	arpl   WORD PTR [esi+0x62c08f1f],sp
  4120af:	xor    eax,DWORD PTR [esi-0x2423479]
  4120b5:	aaa    
  4120b6:	inc    esp
  4120b7:	popa   
  4120b8:	pop    ebp
  4120b9:	mov    ch,bl
  4120bb:	cmp    BYTE PTR [eax+0x40],cl
  4120be:	mov    ds:0xb30f8ac4,eax
  4120c3:	pop    esp
  4120c4:	out    0x73,al
  4120c6:	jl     0x412049
  4120c8:	icebp  
  4120c9:	lods   eax,DWORD PTR ds:[esi]
  4120ca:	or     al,BYTE PTR [esi]
  4120cc:	push   edx
  4120cd:	inc    ecx
  4120ce:	je     0x412118
  4120d0:	dec    ebx
  4120d1:	dec    ebp
  4120d2:	aam    0xee
  4120d4:	inc    ecx
  4120d5:	mov    cl,0x7d
  4120d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120d8:	bound  esi,QWORD PTR [eax-0x41cb287]
  4120de:	je     0x412149
  4120e0:	inc    ecx
  4120e1:	jl     0x4120aa
  4120e3:	pop    ebp
  4120e4:	dec    ebx
  4120e5:	and    eax,0x9e7452c6
  4120ea:	shl    DWORD PTR [esi-0x14],cl
  4120ed:	and    DWORD PTR [ecx],esp
  4120ef:	push   ss
  4120f0:	jne    0x412102
  4120f2:	into   
  4120f3:	push   ds
  4120f4:	add    esi,esp
  4120f6:	arpl   WORD PTR [ebp+0x39],bx
  4120f9:	mov    ebx,0xf8b573cb
  4120fe:	push   0xf
  412100:	daa    
  412101:	retf   
  412102:	jecxz  0x4120d4
  412104:	adc    eax,0xdaaf8267
  412109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210a:	xor    bl,BYTE PTR [ebx]
  41210c:	(bad)  
  41210d:	mov    DWORD PTR [esi+edi*1-0x4d2d2386],ecx
  412114:	(bad)  
  412115:	test   ah,ch
  412117:	mov    bl,0x91
  412119:	out    0x90,al
  41211b:	fdivr  QWORD PTR [ebx+eiz*1+0x61]
  41211f:	mov    cl,0xe8
  412121:	push   0x3589a48c
  412126:	cld    
  412127:	lods   al,BYTE PTR ds:[esi]
  412128:	mul    DWORD PTR [esi+edi*2]
  41212b:	int3   
  41212c:	jo     0x4120d5
  41212e:	or     DWORD PTR [ecx-0x5755896f],edx
  412134:	sbb    edi,ecx
  412136:	fisttp DWORD PTR [ecx+0x4a542d32]
  41213c:	or     DWORD PTR [esi-0x16],esp
  41213f:	xchg   edi,eax
  412140:	ret    
  412141:	push   es
  412142:	jnp    0x412107
  412144:	xchg   esp,eax
  412145:	sti    
  412146:	add    BYTE PTR [esi-0x18640a2b],0x91
  41214d:	cwde   
  41214e:	scas   al,BYTE PTR es:[edi]
  41214f:	loop   0x412119
  412151:	daa    
  412152:	leave  
  412153:	and    DWORD PTR [ebp+0x6f],edi
  412156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412157:	pop    edx
  412158:	aam    0x34
  41215a:	in     al,0xd9
  41215c:	jne    0x4121c4
  41215e:	bound  ecx,QWORD PTR [edi+0x74692e96]
  412164:	test   dl,al
  412166:	pop    ecx
  412167:	and    DWORD PTR [ebx+0x182573f6],esi
  41216d:	iret   
  41216e:	loope  0x4121ac
  412170:	sub    DWORD PTR [edi+edx*4+0x6e5c8373],0x48
  412178:	cld    
  412179:	rcl    BYTE PTR [ebx+0x12],1
  41217c:	fild   WORD PTR [edx-0x33569738]
  412182:	out    dx,al
  412183:	je     0x412109
  412185:	sbb    al,0xf5
  412187:	scas   al,BYTE PTR es:[di]
  412189:	loopne 0x41210e
  41218b:	sbb    ecx,DWORD PTR [ebx]
  41218d:	adc    al,0x52
  41218f:	and    DWORD PTR [edx+ebx*2],0x1
  412193:	nop
  412194:	addr16 in al,dx
  412196:	mov    eax,ds:0xdccce3a7
  41219b:	pop    ss
  41219c:	adc    ecx,DWORD PTR [ebx+edi*4-0x1d3d9f3a]
  4121a3:	scas   al,BYTE PTR es:[edi]
  4121a4:	add    BYTE PTR [ebx-0x50],ah
  4121a7:	xor    ebp,esi
  4121a9:	adc    al,0xb2
  4121ab:	cmp    DWORD PTR [edi],esi
  4121ad:	in     al,dx
  4121ae:	pushf  
  4121af:	(bad)  
  4121b0:	jb     0x412159
  4121b2:	out    dx,al
  4121b3:	sbb    ebx,DWORD PTR [ebx]
  4121b5:	push   0xffffffa6
  4121b7:	mov    ah,0xd6
  4121b9:	push   esp
  4121bb:	outs   dx,DWORD PTR ds:[esi]
  4121bc:	mov    ds:0x5ea00f6c,eax
  4121c1:	retfw  
  4121c3:	les    esi,FWORD PTR [ecx+0x51]
  4121c6:	or     al,0xd7
  4121c8:	test   DWORD PTR [edx-0x37],0x23879415
  4121cf:	aaa    
  4121d0:	adc    eax,DWORD PTR [ebx]
  4121d2:	(bad)  
  4121d3:	cmp    BYTE PTR [eax+0x73],ch
  4121d6:	mov    BYTE PTR ss:[ecx],dl
  4121d9:	test   DWORD PTR [esp+ebp*2],ecx
  4121dc:	(bad)  
  4121dd:	int    0xb3
  4121df:	scas   eax,DWORD PTR es:[edi]
  4121e0:	sbb    al,bl
  4121e2:	in     eax,0xd8
  4121e4:	jg     0x4121bc
  4121e6:	inc    DWORD PTR [ebx+0x63]
  4121e9:	in     eax,dx
  4121ea:	out    0x38,eax
  4121ec:	imul   ecx,DWORD PTR fs:[eax],0xffffffa6
  4121f0:	xchg   DWORD PTR [ebp+0x52],ecx
  4121f3:	mov    bl,0xfe
  4121f5:	pusha  
  4121f6:	jle    0x412264
  4121f8:	xchg   ebx,eax
  4121f9:	pop    edx
  4121fa:	pop    ebx
  4121fb:	xchg   edx,eax
  4121fc:	out    dx,al
  4121fd:	or     dl,BYTE PTR [eax]
  4121ff:	mov    edx,DWORD PTR [ecx+0x14]
  412202:	out    0x1,eax
  412204:	stos   BYTE PTR es:[edi],al
  412205:	add    BYTE PTR [edx],ch
  412207:	inc    ebx
  412208:	push   ss
  412209:	lahf   
  41220a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220b:	repz sub ch,BYTE PTR [edi]
  41220e:	cli    
  41220f:	sub    BYTE PTR ds:[ebp-0x1],ch
  412213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412214:	cwde   
  412215:	mov    ah,BYTE PTR [ecx+0x16]
  412218:	xchg   edi,eax
  412219:	ins    DWORD PTR es:[edi],dx
  41221a:	and    BYTE PTR [edx+ebx*1-0x34],dh
  41221e:	out    0xa4,eax
  412220:	sub    al,0x90
  412222:	and    DWORD PTR [ecx-0x4d20549],esi
  412228:	dec    DWORD PTR [ebp-0x64]
  41222b:	inc    edx
  41222c:	loop   0x4121f8
  41222e:	sti    
  41222f:	iret   
  412230:	repnz fdivr DWORD PTR [ecx-0x63ea136e]
  412237:	add    al,0x68
  412239:	stc    
  41223a:	inc    edx
  41223b:	add    BYTE PTR [eax],bl
  41223d:	jnp    0x4121fe
  41223f:	jae    0x412269
  412241:	xor    DWORD PTR [ebx-0x79],ebx
  412244:	or     eax,0x730e291
  412249:	dec    edx
  41224a:	and    ch,BYTE PTR [eax]
  41224c:	or     al,0xef
  41224e:	push   ebp
  41224f:	enter  0x8bb4,0xc8
  412253:	arpl   bx,di
  412255:	ins    BYTE PTR es:[edi],dx
  412256:	dec    edx
  412257:	retf   
  412258:	adc    eax,0xfa6c427
  41225d:	mov    ebx,0x92c9aadd
  412262:	fisub  WORD PTR [ebx-0x70]
  412265:	leave  
  412266:	into   
  412267:	retf   
  412268:	inc    esp
  412269:	pop    es
  41226a:	iret   
  41226b:	xchg   esp,eax
  41226c:	ins    BYTE PTR es:[edi],dx
  41226d:	pop    eax
  41226e:	sahf   
  41226f:	or     ch,BYTE PTR [ebx]
  412271:	jg     0x41227d
  412273:	mov    BYTE PTR [edx],bl
  412275:	fld    st(3)
  412277:	lea    ecx,[eax]
  412279:	(bad)
  41227c:	ret    0x8af1
  41227f:	mov    ch,0x9d
  412281:	ror    cl,cl
  412283:	or     dl,BYTE PTR [ebp-0xc]
  412286:	or     DWORD PTR [esi-0x41],esi
  412289:	out    dx,eax
  41228a:	aaa    
  41228b:	stc    
  41228c:	jl     0x41225f
  41228e:	leave  
  41228f:	inc    ecx
  412290:	lods   al,BYTE PTR ds:[esi]
  412291:	xchg   esp,eax
  412292:	add    bl,dh
  412294:	fs ja  0x4122ed
  412297:	push   edi
  412298:	test   BYTE PTR [ebx+0x24],0xc
  41229c:	scas   eax,DWORD PTR es:[edi]
  41229d:	push   esi
  41229e:	inc    ecx
  41229f:	mov    al,0xbf
  4122a1:	ins    DWORD PTR es:[edi],dx
  4122a2:	imul   edi,DWORD PTR [edx+0x1923fc37],0x9147ec56
  4122ac:	popf   
  4122ad:	and    eax,0x874a9fa3
  4122b2:	jmp    0x41231f
  4122b4:	mov    fs,ecx
  4122b6:	mov    dh,0xf3
  4122b8:	jns    0x412263
  4122ba:	mov    cl,0x2a
  4122bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bd:	scas   eax,DWORD PTR es:[edi]
  4122be:	adc    dl,BYTE PTR [eax+0x1c3ea40a]
  4122c4:	adc    ecx,DWORD PTR [ecx]
  4122c6:	dec    edi
  4122c7:	les    ebp,FWORD PTR [ecx]
  4122c9:	or     ecx,edx
  4122cb:	mov    ds:0x3b2fd302,al
  4122d0:	dec    edx
  4122d1:	sar    BYTE PTR [esi+ebp*8-0x5f3bf1b8],cl
  4122d8:	mov    cl,0x79
  4122da:	mov    eax,ds:0x69ba0379
  4122df:	scas   eax,DWORD PTR es:[edi]
  4122e0:	(bad)  
  4122e1:	aam    0xdb
  4122e3:	das    
  4122e4:	add    al,0x34
  4122e6:	shr    BYTE PTR [esi+0x23998c47],0x27
  4122ed:	sbb    eax,0xb6c382fb
  4122f2:	adc    cl,BYTE PTR [edi+0x7d55f6d8]
  4122f8:	cmp    al,0xde
  4122fa:	adc    eax,0x8f46546a
  4122ff:	idiv   BYTE PTR [eax]
  412301:	xor    cl,bl
  412303:	jmp    0xcbb2:0xbabd941
  41230a:	add    DWORD PTR [ebx+0xc78ea01],0xab0ad437
  412314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412315:	ins    DWORD PTR es:[edi],dx
  412316:	ror    DWORD PTR [ebp-0x603c147],0xcb
  41231d:	mov    BYTE PTR [esi],0xc1
  412320:	loop   0x4122bf
  412322:	mov    esp,0x702ff877
  412327:	out    dx,al
  412328:	aaa    
  412329:	lahf   
  41232a:	sub    al,BYTE PTR [edi-0x36ff31a0]
  412330:	retf   
  412331:	fsub   DWORD PTR ss:[esi+0x59]
  412335:	xchg   esi,eax
  412336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412337:	pop    ebx
  412338:	push   ebx
  412339:	mov    al,ds:0x7541d27
  41233e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233f:	repnz popa 
  412341:	data16 stc 
  412343:	and    al,0xe2
  412345:	stc    
  412346:	mov    al,0xec
  412348:	mov    bl,0x93
  41234a:	push   ebx
  41234b:	pop    ss
  41234c:	mov    al,0x7b
  41234e:	dec    ebx
  41234f:	push   ecx
  412350:	neg    BYTE PTR [esi+0x18]
  412353:	jno    0x4123be
  412355:	sbb    ebx,DWORD PTR [ebp-0x4c]
  412358:	cmp    DWORD PTR [ecx-0x25344696],0x11
  41235f:	jl     0x412324
  412361:	out    dx,al
  412362:	in     eax,dx
  412363:	shl    DWORD PTR [ebp-0x682740c6],1
  412369:	(bad)  [edi+edx*4-0x4a]
  41236d:	inc    esp
  41236e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41236f:	xchg   esp,eax
  412370:	push   ds
  412371:	inc    edi
  412372:	aaa    
  412373:	jecxz  0x4123be
  412375:	inc    ebx
  412376:	shr    DWORD PTR [eax],cl
  412378:	push   esi
  412379:	fmul   st(1),st
  41237b:	ret    0x49cd
  41237e:	push   ebx
  41237f:	cli    
  412380:	mov    eax,fs
  412382:	pop    esi
  412383:	sub    eax,0x5f77bcb2
  412388:	push   esi
  412389:	shr    ah,cl
  41238b:	mov    ebp,0x3b658cc2
  412390:	ins    BYTE PTR es:[edi],dx
  412391:	inc    ecx
  412392:	outs   dx,BYTE PTR ds:[esi]
  412393:	sti    
  412394:	or     bh,dl
  412396:	jbe    0x412386
  412398:	mov    ds:0x87242ee0,eax
  41239d:	clc    
  41239e:	pop    esp
  41239f:	mov    ah,0xdd
  4123a1:	add    al,0xab
  4123a3:	mov    dh,0xa1
  4123a5:	push   0x68
  4123a7:	out    0x34,al
  4123a9:	rdmsr  
  4123ab:	imul   edi,DWORD PTR [esi-0x7d568e20],0xda8894dd
  4123b5:	loopne 0x412362
  4123b7:	outs   dx,DWORD PTR ds:[esi]
  4123b8:	or     DWORD PTR [ecx],edx
  4123ba:	sub    BYTE PTR [esi-0x8],cl
  4123bd:	(bad)  
  4123be:	pop    esi
  4123bf:	out    dx,eax
  4123c0:	hlt    
  4123c1:	bnd jge 0x412360
  4123c4:	sub    eax,0x6efd94eb
  4123c9:	dec    edi
  4123ca:	mov    al,ds:0xf2a7b744
  4123cf:	inc    esp
  4123d0:	dec    eax
  4123d1:	push   ds
  4123d2:	or     ah,0xe0
  4123d5:	inc    edi
  4123d6:	mov    al,0xe7
  4123d8:	jns    0x4123e5
  4123da:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4123dc:	jecxz  0x412428
  4123de:	pop    edi
  4123df:	repnz inc ebp
  4123e1:	mov    cl,0x3
  4123e3:	push   0xffffffd9
  4123e5:	int3   
  4123e6:	into   
  4123e7:	(bad)  
  4123e9:	pop    ds
  4123ea:	fcmovnbe st,st(0)
  4123ec:	jle    0x4123eb
  4123ee:	int    0x6e
  4123f0:	xor    eax,0xd8c55530
  4123f5:	jg     0x4123e6
  4123f7:	lock xor ebp,ebp
  4123fa:	jno    0x41240e
  4123fc:	xchg   DWORD PTR [eax],ebx
  4123fe:	sub    esi,DWORD PTR [ebp-0x657b4d9c]
  412404:	popf   
  412405:	push   0xffffff97
  412407:	stos   BYTE PTR es:[edi],al
  412408:	rol    DWORD PTR [edx-0x510d6a84],cl
  41240e:	mov    WORD PTR [eax+0x62],fs
  412411:	sub    dl,ch
  412413:	cwde   
  412414:	jmp    0x4123f2
  412416:	(bad)  
  412418:	dec    edx
  412419:	mov    cl,0x1f
  41241b:	(bad)  
  41241c:	ds inc ebx
  41241e:	cdq    
  41241f:	sbb    DWORD PTR [ebp+eiz*4-0x24eaab09],0xcecc3757
  41242a:	cmp    cl,0xb2
  41242d:	test   BYTE PTR [esi+0x408b0c2a],bl
  412433:	aaa    
  412434:	mov    edi,0x6062f794
  412439:	leave  
  41243a:	ret    
  41243b:	push   esi
  41243c:	test   BYTE PTR [edx+0xccee806],ch
  412442:	push   esi
  412443:	or     esi,DWORD PTR [esi]
  412445:	push   0xec8ca87b
  41244a:	repnz ins BYTE PTR es:[edi],dx
  41244c:	les    ebx,FWORD PTR [edx]
  41244e:	mov    BYTE PTR [ebx],bh
  412450:	sub    BYTE PTR [edi+0xa],ch
  412453:	add    eax,0x39f44f48
  412458:	mov    ebp,0xcd9095e7
  41245d:	test   DWORD PTR [esi-0x30],0xbaffa491
  412464:	xor    bh,BYTE PTR [eax]
  412466:	call   0xe2c5:0xafc6de58
  41246d:	scas   eax,DWORD PTR es:[edi]
  41246e:	lods   al,BYTE PTR ds:[esi]
  41246f:	(bad)  
  412470:	neg    DWORD PTR [edi+esi*4+0x4e75741e]
  412477:	xor    edi,DWORD PTR [ebx-0x67d01e8a]
  41247d:	jmp    0xd41338a
  412482:	sub    ebp,DWORD PTR [ebx+0x21]
  412485:	pop    ecx
  412486:	cmp    al,0xbd
  412488:	jmp    0xb1089023
  41248d:	dec    edx
  41248e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41248f:	mov    dh,0xe6
  412491:	sbb    DWORD PTR [ebp+0x6],0x75484134
  412498:	out    dx,al
  412499:	add    DWORD PTR [ecx+0x7eee3a96],ebx
  41249f:	nop
  4124a0:	inc    ebp
  4124a1:	push   esi
  4124a2:	mov    esi,eax
  4124a4:	mov    ebx,DWORD PTR [esi+0x2c]
  4124a7:	mov    edi,0x3ea2c3b5
  4124ac:	daa    
  4124ad:	sbb    eax,0x90576d24
  4124b3:	push   0x7d
  4124b5:	inc    eax
  4124b6:	fxtract 
  4124b8:	mov    ecx,es
  4124ba:	imul   DWORD PTR [ecx-0x21]
  4124bd:	stos   BYTE PTR es:[edi],al
  4124be:	cli    
  4124bf:	(bad)  
  4124c0:	sbb    cl,BYTE PTR [edx+ebx*4]
  4124c3:	mov    dl,0xa8
  4124c5:	add    al,0x2e
  4124c7:	push   ecx
  4124c8:	in     al,dx
  4124c9:	fnsave [esi+0x7f]
  4124cc:	and    cl,0xfe
  4124cf:	or     eax,0xf9f52013
  4124d4:	mov    cl,0xa2
  4124d6:	mov    ds:0xbfe61b0b,eax
  4124db:	mov    eax,0x4b9aa120
  4124e0:	push   ebp
  4124e1:	lahf   
  4124e2:	or     BYTE PTR [ecx+0x5a],0x69
  4124e6:	mov    WORD PTR [ebp+0x23],fs
  4124e9:	bnd jb 0x412504
  4124ec:	sub    DWORD PTR [ecx],edx
  4124ee:	mov    ebx,DWORD PTR [edi+0x2c]
  4124f1:	and    al,0xeb
  4124f3:	lahf   
  4124f4:	mov    eax,ds:0xef7111f4
  4124f9:	jge    0x4124ea
  4124fb:	ror    BYTE PTR [ebx-0x44c8aed5],1
  412501:	retf   0xb592
  412504:	outs   dx,BYTE PTR ds:[esi]
  412505:	or     edi,ebp
  412507:	lods   al,BYTE PTR ds:[esi]
  412508:	(bad)
  41250c:	int3   
  41250d:	(bad)  
  41250e:	mov    ds:0x919846b1,eax
  412513:	mov    cl,0xed
  412515:	in     eax,0x1a
  412517:	fisttp DWORD PTR [ebx]
  412519:	or     eax,0x231c5941
  41251e:	cmc    
  41251f:	adc    DWORD PTR [esi+esi*2-0x6],eax
  412523:	mov    dh,BYTE PTR [ecx-0x6cddfe2d]
  412529:	inc    edi
  41252a:	lods   eax,DWORD PTR ds:[esi]
  41252b:	cld    
  41252c:	xor    al,0x8f
  41252e:	std    
  41252f:	cmp    eax,0x26c94464
  412534:	aaa    
  412535:	sub    edx,ebx
  412537:	sub    edi,DWORD PTR [ebx+ecx*8-0x3f]
  41253b:	in     eax,0xf7
  41253d:	dec    ecx
  41253e:	retf   
  41253f:	dec    eax
  412540:	push   ecx
  412541:	cli    
  412542:	(bad)  
  412543:	push   esp
  412544:	inc    ebp
  412545:	mov    eax,DWORD PTR [ebx-0x7a]
  412548:	sbb    ebx,ebx
  41254a:	data16 (bad) 
  41254c:	rcr    BYTE PTR [edi],1
  41254e:	xchg   DWORD PTR [esi+0x24],edi
  412551:	push   ebp
  412552:	push   edi
  412553:	aas    
  412554:	jnp    0x41251f
  412556:	push   ebx
  412557:	jnp    0x41252a
  412559:	adc    bh,BYTE PTR [esi+ebx*1]
  41255c:	mov    ah,0x40
  41255e:	fwait
  41255f:	or     DWORD PTR [edi-0x71650590],esi
  412565:	cmc    
  412566:	sbb    BYTE PTR [eax-0x77],cl
  412569:	jp     0x41250b
  41256b:	out    dx,eax
  41256c:	aaa    
  41256d:	push   ds
  41256e:	test   DWORD PTR [eax-0x23],ebp
  412571:	mov    edi,0x7058978f
  412576:	test   BYTE PTR [ebx],al
  412578:	mov    ch,0x2e
  41257a:	jo     0x412536
  41257c:	sub    edi,DWORD PTR [edi-0x5]
  41257f:	add    ch,BYTE PTR [edx]
  412581:	sbb    bl,BYTE PTR [edx]
  412583:	push   ebx
  412584:	sub    al,cl
  412586:	add    BYTE PTR [ecx],0x3e
  412589:	sub    DWORD PTR [ebp+ebx*4-0x6a],edx
  41258d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41258e:	sub    BYTE PTR es:0x6a070035,0x28
  412596:	lods   eax,DWORD PTR ds:[esi]
  412597:	xchg   ebx,eax
  412598:	popa   
  412599:	sbb    BYTE PTR [ebx-0x3],cl
  41259c:	push   eax
  41259d:	xchg   esi,eax
  41259e:	jmp    0x412587
  4125a0:	mov    edx,0xfb46ef0b
  4125a5:	repnz inc esp
  4125a7:	cdq    
  4125a8:	pop    ds
  4125a9:	cmc    
  4125aa:	jns    0x4125bd
  4125ac:	xchg   edx,eax
  4125ad:	cmp    al,BYTE PTR [edx]
  4125af:	aad    0xca
  4125b1:	or     bh,BYTE PTR [ebx-0x7b]
  4125b4:	mov    ecx,0xee86d0a
  4125b9:	in     eax,dx
  4125ba:	mov    ds:0x6ce16de6,eax
  4125bf:	call   FWORD PTR [esi]
  4125c1:	sti    
  4125c2:	adc    eax,0x56e74e3e
  4125c7:	jle    0x41258e
  4125c9:	ja     0x412623
  4125cb:	xchg   esi,eax
  4125cc:	sub    eax,DWORD PTR [edi+0x8903dd9]
  4125d2:	mov    dl,0x64
  4125d4:	outs   dx,BYTE PTR ds:[esi]
  4125d5:	jl     0x4125b2
  4125d7:	cmp    BYTE PTR [edi+0x70],dl
  4125da:	push   ds
  4125db:	aas    
  4125dc:	stos   DWORD PTR es:[edi],eax
  4125dd:	cmc    
  4125de:	push   esp
  4125df:	cmp    al,0x29
  4125e1:	mov    esi,0x5b0896bd
  4125e6:	or     ch,BYTE PTR [eax+ecx*4+0x65]
  4125ea:	(bad)  
  4125eb:	std    
  4125ec:	jns    0x4125ed
  4125ee:	mov    bl,0x56
  4125f0:	mov    dh,0x3f
  4125f2:	fld    DWORD PTR [edi-0x1ad05e3d]
  4125f8:	sbb    BYTE PTR [edx+edx*2],dh
  4125fb:	arpl   dx,bx
  4125fd:	outs   dx,BYTE PTR ds:[esi]
  4125fe:	xchg   ecx,eax
  4125ff:	push   ebx
  412600:	xchg   esi,eax
  412601:	add    ebp,DWORD PTR [esi-0x1d]
  412604:	mov    ebp,gs
  412606:	mov    esp,0x217c5445
  41260b:	jg     0x412595
  41260d:	dec    ebx
  41260e:	inc    ecx
  41260f:	popa   
  412610:	mov    dl,0x1e
  412612:	and    bl,cl
  412614:	sbb    al,BYTE PTR [edi]
  412616:	lea    edx,[esi-0x23]
  412619:	push   ecx
  41261a:	mov    gs:0xcb6ff8e0,al
  412620:	in     al,dx
  412621:	imul   edx,DWORD PTR [eax],0x6f9a1191
  412627:	adc    al,0xf3
  412629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41262a:	push   ss
  41262b:	push   esi
  41262c:	sub    ebp,ecx
  41262e:	(bad)  
  41262f:	mov    ebx,0x543e7750
  412634:	repnz push ebx
  412636:	xor    edx,DWORD PTR [ecx+0x46d31f4d]
  41263c:	cmp    BYTE PTR ds:0xa068ab5a,dl
  412642:	ins    BYTE PTR es:[edi],dx
  412643:	cmp    edx,DWORD PTR [eax]
  412645:	add    dl,BYTE PTR [edx+0x15472fb3]
  41264b:	mov    esp,ecx
  41264d:	retf   
  41264e:	sub    edi,DWORD PTR [ebp+0x5f]
  412651:	dec    edx
  412652:	inc    ecx
  412653:	pop    ebx
  412654:	mov    ebx,0x4a997ae6
  412659:	(bad)  
  41265a:	xor    ch,dh
  41265c:	test   eax,0x5552e82b
  412661:	push   edi
  412662:	cli    
  412663:	fdiv   QWORD PTR [ebp+ecx*2-0x66136f53]
  41266a:	or     edi,eax
  41266c:	jbe    0x4126e5
  41266e:	pushf  
  41266f:	mov    al,ss:0x261e8109
  412675:	cmp    al,0x17
  412677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412678:	aam    0xf3
  41267a:	dec    ebp
  41267c:	jge    0x4126c3
  41267e:	mov    bh,0x18
  412680:	xor    ebp,DWORD PTR [edi-0xc]
  412683:	cmp    eax,0xc9cbeb4d
  412688:	mov    DWORD PTR [edx-0x12],esp
  41268b:	sbb    al,0x5b
  41268d:	cmp    dl,BYTE PTR [edx+0x49]
  412690:	addps  xmm5,XMMWORD PTR cs:[esi]
  412694:	test   ecx,ebp
  412696:	mov    ds:0xb6e07020,eax
  41269b:	lods   eax,DWORD PTR ds:[esi]
  41269c:	in     al,dx
  41269d:	mov    DWORD PTR [edi-0x75addc1e],esp
  4126a3:	jmp    0x4126c2
  4126a5:	jge    0x41270a
  4126a7:	lock cld 
  4126a9:	mov    ecx,0xfe57b117
  4126ae:	pop    ss
  4126af:	mov    edx,0x376463af
  4126b4:	call   0xa4d6d7ac
  4126b9:	fcmovb st,st(0)
  4126bb:	cld    
  4126bc:	sar    ebp,0x50
  4126bf:	push   ebx
  4126c0:	out    0xa8,al
  4126c2:	dec    esi
  4126c3:	jge    0x41264e
  4126c5:	dec    ebx
  4126c6:	jmp    0x412689
  4126c8:	pop    esi
  4126c9:	xchg   edi,edi
  4126cb:	xchg   ecx,eax
  4126cc:	xchg   edi,eax
  4126cd:	test   DWORD PTR [eax],0xd2861287
  4126d3:	mov    edx,0x43a15acd
  4126d8:	shl    BYTE PTR ds:0x3ff271e,cl
  4126de:	push   ebp
  4126df:	xor    BYTE PTR [ebx-0x5e],dh
  4126e2:	mov    edx,0x6a55b250
  4126e7:	cwde   
  4126e8:	adc    DWORD PTR [ebp+0x5c],0x1c
  4126ec:	or     ah,BYTE PTR [ebp+ebp*2+0x79]
  4126f0:	shl    BYTE PTR ds:0x1488b152,cl
  4126f6:	fcomp  QWORD PTR ds:0x2f44c455
  4126fc:	add    eax,0xf3881cf4
  412701:	xchg   BYTE PTR [edi+0x6e],dh
  412704:	adc    BYTE PTR [ecx-0x6a],al
  412707:	test   ecx,0x7fb76750
  41270d:	stc    
  41270e:	xor    esi,ecx
  412710:	les    esp,FWORD PTR [esi]
  412712:	pop    ss
  412713:	outs   dx,DWORD PTR ds:[esi]
  412714:	xor    eax,0xda83d35c
  412719:	out    0x59,al
  41271b:	mov    eax,ds:0x2e2e8c3e
  412720:	inc    edx
  412721:	jo     0x4126f0
  412723:	loop   0x4126f3
  412725:	lock and esi,edx
  412728:	mov    al,ds:0x82e4d233
  41272d:	push   ecx
  41272e:	adc    ah,dl
  412730:	push   esi
  412731:	add    esi,ecx
  412733:	sub    edx,eax
  412735:	lds    ecx,FWORD PTR [esp+ecx*1-0x6d70e50e]
  41273c:	fadd   DWORD PTR [ebp-0x100fa246]
  412742:	icebp  
  412743:	imul   eax,DWORD PTR [ecx-0x20ae4bd9],0x71fe619e
  41274d:	cld    
  41274e:	mov    ecx,0x95dac393
  412753:	add    al,0x91
  412755:	xchg   esp,eax
  412756:	popf   
  412757:	(bad)  
  412758:	bound  edi,QWORD PTR [esi]
  41275a:	gs dec ebx
  41275c:	mov    dh,0x3d
  41275e:	pop    ds
  41275f:	xchg   ebx,eax
  412760:	inc    eax
  412761:	mov    ds:0x90625c2d,al
  412766:	nop
  412767:	xchg   ecx,eax
  412768:	test   DWORD PTR [ebx+edx*8+0x47],ebx
  41276c:	cmp    ah,al
  41276e:	fs jmp 0x70bd:0x2c52bd7d
  412776:	jbe    0x41279b
  412778:	into   
  412779:	shr    DWORD PTR [ecx+0x47],cl
  41277c:	sub    dh,BYTE PTR [esi+0xcc19dea]
  412782:	mov    cl,0xed
  412784:	or     BYTE PTR [ecx+ecx*8],dl
  412787:	outs   dx,BYTE PTR ds:[esi]
  412788:	aad    0x3e
  41278a:	aam    0x17
  41278c:	pop    ds
  41278d:	xor    esi,ecx
  41278f:	dec    bx
  412791:	mov    ds:0x83f7d6ed,al
  412796:	enter  0xf1e5,0x14
  41279a:	hlt    
  41279b:	mov    al,ds:0x2f4e2663
  4127a0:	fnstsw WORD PTR [edi-0x3a]
  4127a3:	xchg   DWORD PTR [edx+0x552b0bf1],ebx
  4127a9:	aas    
  4127aa:	out    0x6d,al
  4127ac:	mov    WORD PTR [edx+eiz*1-0x50],ds
  4127b0:	shl    esi,1
  4127b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b3:	popf   
  4127b4:	lds    esi,FWORD PTR [esi-0x4649432d]
  4127ba:	push   esp
  4127bb:	push   edx
  4127bc:	add    al,0x8a
  4127be:	nop
  4127bf:	das    
  4127c0:	ror    ecx,cl
  4127c2:	push   ecx
  4127c3:	xchg   DWORD PTR [edi],eax
  4127c5:	inc    edi
  4127c6:	ds leave 
  4127c8:	shl    BYTE PTR ds:0x2552376b,0x10
  4127cf:	fcmovnbe st,st(7)
  4127d1:	out    dx,al
  4127d2:	sbb    ebx,DWORD PTR ds:0x9375fe91
  4127d8:	jmp    0x99d00242
  4127dd:	xlat   BYTE PTR ds:[ebx]
  4127de:	lods   al,BYTE PTR ds:[esi]
  4127df:	(bad)  
  4127e0:	pop    eax
  4127e1:	pop    es
  4127e2:	xor    eax,0x1427095f
  4127e7:	jecxz  0x412827
  4127e9:	retf   0x65ac
  4127ec:	inc    esp
  4127ed:	push   edi
  4127ee:	xchg   ebp,eax
  4127ef:	ds popf 
  4127f1:	in     al,dx
  4127f2:	dec    ecx
  4127f3:	mov    bh,0xd9
  4127f5:	imul   esi,DWORD PTR [edi-0x422bdb28],0x61
  4127fc:	fdivr  DWORD PTR [esi+edi*1-0x47]
  412800:	test   eax,0x221ead1d
  412805:	cwde   
  412806:	or     DWORD PTR [esi],ebp
  412808:	xlat   BYTE PTR ds:[ebx]
  412809:	sub    DWORD PTR [ebp+0x28],esi
  41280c:	sbb    bl,bl
  41280e:	in     al,0x2f
  412810:	inc    eax
  412811:	aas    
  412812:	xchg   BYTE PTR [ecx],cl
  412814:	outs   dx,BYTE PTR ds:[esi]
  412815:	sbb    al,0x93
  412817:	jns    0x4127b5
  412819:	add    BYTE PTR [eax+0x11433d58],dl
  41281f:	xchg   ebp,eax
  412820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412821:	fdivr  QWORD PTR [ebp+0x50]
  412824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412825:	cmp    eax,0x7d7d9b42
  41282a:	or     ebx,DWORD PTR [ebp+ecx*1+0x3e]
  41282e:	jle    0x41288d
  412830:	jl     0x4127cc
  412832:	jle    0x412879
  412834:	test   eax,0xe99d9bf3
  412839:	and    al,0x22
  41283b:	pop    ebx
  41283c:	lods   eax,DWORD PTR ds:[esi]
  41283d:	out    0x6e,eax
  41283f:	pop    ebp
  412840:	inc    BYTE PTR [edx+0x41]
  412843:	pop    eax
  412844:	mov    dl,0x8e
  412846:	mov    esi,0x357b3801
  41284b:	(bad)  
  41284c:	popa   
  41284d:	int    0xc6
  41284f:	sti    
  412850:	sub    BYTE PTR [edi+0x13],bl
  412853:	rol    DWORD PTR [edi],cl
  412855:	inc    edx
  412856:	dec    ecx
  412857:	or     ebx,DWORD PTR [edx]
  412859:	mov    esi,0x178338b4
  41285e:	adc    BYTE PTR [esi],dl
  412860:	out    0x55,eax
  412862:	push   0x1637d9e5
  412867:	stos   DWORD PTR es:[edi],eax
  412868:	xchg   edi,eax
  412869:	mov    ebx,0xf56b2eb3
  41286e:	aad    0x5f
  412870:	adc    ebx,ebp
  412872:	xor    eax,0x5d685030
  412877:	icebp  
  412878:	fcom   st(7)
  41287a:	push   edi
  41287b:	out    dx,eax
  41287c:	retf   
  41287d:	adc    ebx,DWORD PTR [edi]
  41287f:	addr16 lahf 
  412881:	mov    BYTE PTR [edx],dl
  412883:	int    0xcb
  412885:	lock mov ebx,0x494b29b0
  41288b:	mov    ch,0x6
  41288d:	test   al,0xdc
  41288f:	jl     0x41281a
  412891:	mov    eax,0x1baa4008
  412896:	clc    
  412897:	mov    ds:0x47764c90,al
  41289c:	retf   
  41289d:	sbb    ch,BYTE PTR [ebx-0x7a]
  4128a0:	jb     0x412858
  4128a2:	aas    
  4128a3:	dec    esi
  4128a4:	outs   dx,DWORD PTR ds:[esi]
  4128a5:	into   
  4128a6:	hlt    
  4128a7:	or     ebx,DWORD PTR [esi]
  4128a9:	jbe    0x4128d3
  4128ab:	(bad)  
  4128ad:	arpl   WORD PTR [esi+ebp*4+0x34],bx
  4128b1:	sub    DWORD PTR [esi+0x406b9b1a],edi
  4128b7:	mov    cl,0x3f
  4128b9:	cmp    dl,BYTE PTR [ecx-0x2a645601]
  4128bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c0:	pop    es
  4128c1:	and    dl,dh
  4128c3:	dec    ecx
  4128c4:	jnp    0x4128f1
  4128c6:	pop    esi
  4128c7:	cmp    BYTE PTR es:[edi],al
  4128ca:	aad    0x19
  4128cc:	stos   BYTE PTR es:[edi],al
  4128cd:	mov    bh,0x1d
  4128cf:	test   BYTE PTR [esi],dl
  4128d1:	add    esi,DWORD PTR [ecx+0x1378e17f]
  4128d7:	lea    esp,[ebx-0x65]
  4128da:	clc    
  4128db:	mov    edx,0x304859b
  4128e0:	repnz push ss
  4128e2:	push   0xffffffcf
  4128e4:	enter  0x893b,0x95
  4128e8:	repnz cwde 
  4128ea:	jecxz  0x412890
  4128ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ed:	mov    bl,0x90
  4128ef:	outs   dx,DWORD PTR ds:[esi]
  4128f0:	jmp    0x25c597c9
  4128f5:	ret    0x7963
  4128f8:	(bad)  
  4128fa:	sub    cl,bl
  4128fc:	mov    ebp,0xed24c3d4
  412901:	les    edx,FWORD PTR [edx+edx*4]
  412904:	bound  ebp,QWORD PTR [ebx]
  412906:	fstp   TBYTE PTR [eax]
  412908:	mov    DWORD PTR [edx-0x39335e61],esi
  41290e:	fldcw  WORD PTR [ecx-0x3b228afe]
  412914:	jge    0x4128ee
  412916:	push   esp
  412917:	or     esi,0xffffff9a
  41291a:	jbe    0x4128a2
  41291c:	fld    TBYTE PTR [ecx]
  41291e:	mov    WORD PTR [esi-0x4],ss
  412921:	and    DWORD PTR ds:0xfc692425,ebp
  412927:	test   ecx,0x5531cc29
  41292d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292f:	cdq    
  412930:	lods   eax,DWORD PTR ds:[esi]
  412931:	lods   eax,DWORD PTR ds:[esi]
  412932:	pop    eax
  412933:	mov    ebx,0x671970be
  412938:	lds    esp,FWORD PTR [edx+esi*8]
  41293b:	(bad)  
  41293c:	sub    edi,ebx
  41293e:	retf   0xae4c
  412941:	add    bh,ah
  412943:	pop    ebp
  412944:	pusha  
  412945:	hlt    
  412946:	fwait
  412947:	in     eax,0xce
  412949:	aas    
  41294a:	and    eax,0x4e09c780
  41294f:	adc    al,0xa1
  412951:	stos   BYTE PTR es:[edi],al
  412952:	xchg   ebx,eax
  412953:	push   edx
  412954:	push   cs
  412955:	js     0x412997
  412957:	or     eax,0x7cc7261a
  41295c:	dec    esp
  41295d:	je     0x412924
  41295f:	imul   edi,DWORD PTR [edx],0x4bf068d5
  412965:	std    
  412966:	shl    esi,cl
  412968:	int    0x78
  41296a:	xchg   esp,eax
  41296b:	jb     0x412934
  41296d:	out    dx,al
  41296e:	mov    esi,0x29d43660
  412973:	outs   dx,BYTE PTR ds:[esi]
  412974:	in     eax,dx
  412975:	test   al,0x68
  412977:	mov    eax,0xb2705ecf
  41297c:	retf   
  41297d:	mov    ebp,0xbaa7d671
  412982:	nop
  412983:	sub    al,0xaf
  412985:	jg     0x412907
  412987:	loope  0x4129ea
  412989:	fsub   DWORD PTR [ecx-0x8]
  41298c:	fidivr DWORD PTR [eax-0x48]
  41298f:	jmp    0x4129ca
  412991:	sub    edx,DWORD PTR cs:[edi+0x5699ebcc]
  412998:	mov    cl,0x69
  41299a:	xchg   esi,eax
  41299b:	ficomp WORD PTR ds:0xb1d9c436
  4129a1:	pushf  
  4129a2:	stc    
  4129a3:	push   edx
  4129a4:	pop    ebp
  4129a5:	push   eax
  4129a6:	pop    es
  4129a7:	xchg   ebx,eax
  4129a8:	in     al,0xb3
  4129aa:	add    al,0xab
  4129ac:	and    al,0xe7
  4129ae:	xchg   esp,eax
  4129af:	pop    eax
  4129b0:	or     bh,BYTE PTR [edx]
  4129b2:	xchg   ebx,eax
  4129b3:	sub    eax,0x6a1627c3
  4129b8:	inc    ebp
  4129b9:	jae    0x4129ee
  4129bb:	out    dx,eax
  4129bc:	add    BYTE PTR [edx],ch
  4129be:	push   esi
  4129bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c0:	aam    0x9e
  4129c2:	adc    eax,0xd830a8ef
  4129c7:	sbb    DWORD PTR [esi-0x339252b1],0xffffffe3
  4129ce:	or     al,0x8a
  4129d0:	push   ss
  4129d1:	bound  ebp,QWORD PTR [eax+0x33ae514e]
  4129d7:	mov    esi,0x4e967a57
  4129dc:	ss hlt 
  4129de:	das    
  4129df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e0:	and    DWORD PTR [esi],ecx
  4129e2:	xchg   esi,eax
  4129e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e4:	jns    0x4129ce
  4129e6:	jo     0x412a5f
  4129e8:	in     al,dx
  4129e9:	jnp    0x412a29
  4129eb:	imul   DWORD PTR [eax+0x48473a6a]
  4129f1:	shl    BYTE PTR [esp+edi*1+0x7096640a],cl
  4129f8:	xchg   ecx,eax
  4129f9:	dec    esi
  4129fa:	pop    esp
  4129fb:	lods   eax,DWORD PTR ds:[esi]
  4129fc:	mov    dl,0x22
  4129fe:	add    DWORD PTR [ecx],0x48133c5f
  412a04:	push   edi
  412a05:	call   0x1354:0x9eca6552
  412a0c:	ins    DWORD PTR es:[edi],dx
  412a0d:	shl    bl,0xc
  412a10:	enter  0x24a9,0x30
  412a14:	mov    dh,0x2f
  412a16:	xor    eax,ebp
  412a18:	add    al,al
  412a1a:	cmp    al,0xed
  412a1c:	jb     0x412a10
  412a1e:	inc    ebx
  412a1f:	mov    edi,0x797b6bd0
  412a24:	add    eax,0xbc76aea5
  412a29:	or     bh,bh
  412a2b:	add    ah,BYTE PTR [ecx]
  412a2d:	(bad)  
  412a2e:	sbb    eax,0x35844328
  412a33:	xchg   esp,eax
  412a34:	push   eax
  412a35:	je     0x412a7d
  412a37:	cmp    al,0xc9
  412a39:	ds jl  0x412a1a
  412a3c:	stc    
  412a3d:	pop    ss
  412a3e:	push   cs
  412a3f:	les    ecx,FWORD PTR [ebx+0x44]
  412a42:	jmp    0x412aae
  412a44:	lds    eax,FWORD PTR [edi+0x2b7c4e92]
  412a4a:	adc    DWORD PTR [edi],0x70
  412a4d:	std    
  412a4e:	mov    ebx,0x56631157
  412a53:	mov    ecx,0x98c9e86
  412a58:	cmp    esi,DWORD PTR [edi]
  412a5a:	sbb    eax,0xf243e2ba
  412a5f:	adc    cl,BYTE PTR [edx+0x20]
  412a62:	inc    edx
  412a63:	jo     0x412a6c
  412a65:	xor    eax,0xd9438ad3
  412a6a:	in     al,dx
  412a6b:	nop
  412a6c:	lods   eax,DWORD PTR ds:[esi]
  412a6d:	add    al,bh
  412a6f:	clc    
  412a70:	xor    eax,DWORD PTR [eax]
  412a72:	sbb    DWORD PTR [ebx+0x5fc3db70],esp
  412a78:	fnstcw WORD PTR [edx*1+0x4c335d75]
  412a7f:	(bad)  
  412a80:	sahf   
  412a81:	shl    BYTE PTR [edx+0x14],cl
  412a84:	add    BYTE PTR [ebx],bl
  412a86:	aaa    
  412a87:	jmp    DWORD PTR [ebx+0x4c]
  412a8a:	(bad)
  412a8d:	adc    eax,0xb69ffb4e
  412a92:	xchg   edx,eax
  412a93:	xchg   esi,eax
  412a94:	mov    ah,0xb2
  412a96:	sbb    eax,0xa307abde
  412a9b:	xchg   esp,eax
  412a9c:	push   edi
  412a9d:	and    edi,esp
  412a9f:	aam    0x37
  412aa1:	enter  0x54f8,0xba
  412aa5:	in     eax,dx
  412aa6:	mov    dl,0xb
  412aa8:	loopne 0x412aa5
  412aaa:	ret    
  412aab:	call   0x2d81fd6e
  412ab0:	sub    al,ah
  412ab2:	inc    edx
  412ab4:	jl     0x412a36
  412ab6:	xchg   esp,eax
  412ab7:	aas    
  412ab8:	ins    BYTE PTR es:[edi],dx
  412ab9:	xchg   bh,bh
  412abb:	out    0x79,al
  412abd:	lds    eax,FWORD PTR [ebx-0x6e]
  412ac0:	cmp    edx,ebp
  412ac2:	call   0xe42502e3
  412ac7:	out    dx,eax
  412ac8:	aad    0x23
  412aca:	jne    0x412a81
  412acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412acd:	xor    BYTE PTR [eax+0x63],ah
  412ad0:	inc    esp
  412ad1:	popa   
  412ad2:	adc    al,0x1b
  412ad4:	lea    ebx,[edi-0x1b]
  412ad7:	test   ch,0xf7
  412ada:	jno    0x412ac8
  412adc:	scas   al,BYTE PTR es:[edi]
  412add:	js     0x412ab5
  412adf:	and    eax,0x11859678
  412ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae5:	jge    0x412b19
  412ae7:	xchg   edi,eax
  412ae8:	sbb    esi,DWORD PTR [eax-0x45]
  412aeb:	call   0x2c940c3e
  412af0:	std    
  412af1:	dec    esi
  412af2:	mov    ebp,0xfa6e352f
  412af7:	pop    edx
  412af8:	aam    0x22
  412afa:	nop
  412afb:	popa   
  412afc:	push   ecx
  412afd:	jp     0x412b2c
  412aff:	ret    0x28c4
  412b02:	pushf  
  412b03:	aaa    
  412b04:	cmp    cl,ah
  412b06:	sar    ebp,cl
  412b08:	fwait
  412b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0a:	int    0xcd
  412b0c:	je     0x412acc
  412b0e:	scas   al,BYTE PTR es:[edi]
  412b0f:	idiv   DWORD PTR [esi-0x5a]
  412b12:	lahf   
  412b13:	adc    BYTE PTR [edx+eiz*1+0x3c],al
  412b17:	xchg   ebp,eax
  412b18:	ins    BYTE PTR es:[edi],dx
  412b19:	pushf  
  412b1a:	and    ch,ah
  412b1c:	add    ah,BYTE PTR [edi-0x2a1e0783]
  412b22:	js     0x412ac4
  412b24:	loopne 0x412b09
  412b26:	in     eax,0x34
  412b28:	mov    edx,0x9beec266
  412b2d:	aaa    
  412b2e:	xchg   esp,eax
  412b2f:	add    al,0x7f
  412b31:	gs push ss
  412b33:	cdq    
  412b34:	cmp    ah,bl
  412b36:	jbe    0x412b53
  412b38:	inc    eax
  412b39:	adc    esi,eax
  412b3b:	adc    BYTE PTR [esi],cl
  412b3d:	jmp    0x6fa0:0xa41f25dc
  412b44:	sbb    ebp,DWORD PTR [edx+0x69]
  412b47:	mov    DWORD PTR [edx-0x19c869db],edi
  412b4d:	sbb    cl,0x8b
  412b50:	pop    es
  412b51:	bound  edi,QWORD PTR [ebp-0x1c]
  412b54:	dec    ebx
  412b55:	lds    edx,FWORD PTR [ebx-0x48]
  412b58:	jo     0x412bbd
  412b5a:	and    al,0x90
  412b5c:	xchg   edx,eax
  412b5d:	inc    edi
  412b5e:	and    DWORD PTR [edx+0x4c],edi
  412b61:	sbb    BYTE PTR [ebx+edi*2+0x48],0x8
  412b66:	lods   eax,DWORD PTR ds:[esi]
  412b67:	out    dx,eax
  412b68:	push   esp
  412b69:	mov    bl,0x84
  412b6b:	(bad)  
  412b6c:	fisubr WORD PTR [eax+0x57e89bab]
  412b72:	push   esi
  412b73:	ret    0xdcc0
  412b76:	je     0x412b80
  412b78:	jae    0x412bc9
  412b7a:	fs pop ebx
  412b7c:	and    eax,DWORD PTR [eax]
  412b7e:	mov    WORD PTR [eax+0x686aa41],es
  412b84:	mov    ds:0x70ff52e6,eax
  412b89:	in     eax,dx
  412b8a:	adc    edi,edi
  412b8c:	test   eax,0x498252b9
  412b91:	mov    al,ds:0xe063d192
  412b96:	pop    ss
  412b97:	inc    esi
  412b98:	lock out 0x12,al
  412b9b:	ds out 0xd,al
  412b9e:	sub    DWORD PTR [ecx-0xd],edi
  412ba1:	sbb    eax,0xe9ef2ebd
  412ba6:	adc    ebp,DWORD PTR ds:0x8666f741
  412bac:	in     eax,0xde
  412bae:	sbb    DWORD PTR [esi],edi
  412bb0:	cmp    eax,0xc2212862
  412bb5:	mov    ecx,0x5c8a7f2c
  412bba:	sub    eax,0x91be84b8
  412bbf:	icebp  
  412bc0:	cmp    bh,bh
  412bc2:	dec    ebp
  412bc3:	rcl    DWORD PTR [ebp-0x38],1
  412bc6:	retf   0x7e2e
  412bc9:	into   
  412bca:	pop    ds
  412bcb:	ret    0x4c40
  412bce:	sbb    ch,al
  412bd0:	lods   al,BYTE PTR ds:[esi]
  412bd1:	push   ebx
  412bd2:	add    cl,BYTE PTR [ecx+0x46]
  412bd5:	inc    ebx
  412bd6:	jo     0x412be0
  412bd8:	xor    ah,ah
  412bda:	es mov edi,ebp
  412bdd:	jmp    0x4cd6:0xa6a2c09b
  412be4:	sub    al,BYTE PTR [edx+0x61]
  412be7:	jb     0x412be1
  412be9:	test   ah,0xd7
  412bec:	sub    eax,0x2eea65e8
  412bf1:	mov    ch,0x79
  412bf3:	jmp    0x3e861f95
  412bf8:	pop    ecx
  412bf9:	add    eax,0xb53f3aeb
  412bfe:	lds    edi,FWORD PTR [ebx]
  412c00:	and    BYTE PTR ds:0xf566d78c,0xf8
  412c07:	xlat   BYTE PTR ds:[ebx]
  412c08:	xor    eax,0x4dbcfe90
  412c0d:	add    BYTE PTR [eax],ah
  412c0f:	sub    BYTE PTR [esi+0x28b475b2],cl
  412c15:	push   edi
  412c16:	jp     0x412bb0
  412c18:	shr    BYTE PTR [ebp-0x5c9e2b9d],cl
  412c1e:	mov    al,ds:0xc4b23752
  412c23:	jge    0x412c24
  412c25:	add    edi,DWORD PTR [ecx-0x5b4ae4a5]
  412c2b:	mov    ecx,0xc49caf77
  412c30:	sbb    ch,bl
  412c32:	popa   
  412c33:	and    BYTE PTR [esi],ch
  412c35:	cmc    
  412c36:	stos   BYTE PTR es:[edi],al
  412c37:	aaa    
  412c38:	lods   eax,DWORD PTR ds:[esi]
  412c39:	push   ecx
  412c3a:	shl    BYTE PTR [edi+0x49],cl
  412c3d:	sub    al,BYTE PTR [ebx-0x41]
  412c40:	jmp    0x412be6
  412c42:	push   ebp
  412c43:	sub    BYTE PTR [ebp+0x1cdba192],0x93
  412c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4b:	cmp    eax,0xb3c23b53
  412c50:	sar    DWORD PTR [ecx],cl
  412c52:	xor    al,0xd7
  412c54:	xor    DWORD PTR [esi+0x651b1e87],ecx
  412c5a:	or     BYTE PTR [ebp+0xb],0x0
  412c5e:	fistp  DWORD PTR [ecx]
  412c60:	lods   al,BYTE PTR ds:[esi]
  412c61:	stos   BYTE PTR es:[edi],al
  412c62:	sub    ecx,ebx
  412c64:	xchg   DWORD PTR [ebx-0x5f],esp
  412c67:	xor    al,0x8d
  412c69:	mov    ecx,0x4c1a8f46
  412c6e:	cwde   
  412c6f:	and    al,0x4a
  412c71:	mov    ecx,0x9de5d5c
  412c76:	daa    
  412c77:	cwde   
  412c78:	jecxz  0x412bfc
  412c7a:	mov    esi,ecx
  412c7c:	sub    eax,0xfdf461da
  412c81:	popa   
  412c82:	lock ins BYTE PTR es:[edi],dx
  412c84:	jns    0x412c6f
  412c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c87:	daa    
  412c88:	adc    DWORD PTR [edx],esp
  412c8a:	daa    
  412c8b:	rol    DWORD PTR [ecx],cl
  412c8d:	cmp    edi,DWORD PTR ds:0xb3de8a0f
  412c93:	jo     0x412c53
  412c95:	fisub  WORD PTR [ecx-0x8a0826c]
  412c9b:	xor    esi,ecx
  412c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c9e:	imul   esp,DWORD PTR [ebp-0x10],0x9eb8ab5
  412ca5:	(bad)  
  412ca6:	loope  0x412c54
  412ca8:	jecxz  0x412c96
  412caa:	enter  0x453d,0xcf
  412cae:	push   edi
  412caf:	dec    esi
  412cb0:	iret   
  412cb1:	xchg   esp,eax
  412cb2:	dec    esp
  412cb3:	or     BYTE PTR [edi],dl
  412cb5:	rol    DWORD PTR [eax],1
  412cb7:	rsqrtps xmm4,xmm2
  412cba:	jae    0x412cd8
  412cbc:	shl    BYTE PTR [ecx],0xb3
  412cbf:	loopne 0x412cb2
  412cc1:	cmp    dh,dl
  412cc3:	mov    ds,edx
  412cc5:	sub    esp,0x6e4ba4ec
  412ccb:	add    BYTE PTR fs:[eax+ebx*8-0xf],cl
  412cd0:	add    bl,dh
  412cd2:	retf   
  412cd3:	mov    esi,0x6c30b097
  412cd8:	mov    eax,0x13b6e0db
  412cdd:	imul   esi,ebx,0x54bb5e0b
  412ce3:	fwait
  412ce4:	or     edx,esi
  412ce6:	test   al,0xf0
  412ce8:	cmp    eax,0x93ca810e
  412ced:	mov    ecx,DWORD PTR [ecx+0x42013832]
  412cf3:	push   eax
  412cf4:	ins    BYTE PTR es:[edi],dx
  412cf5:	xchg   esi,eax
  412cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf7:	lds    ebx,FWORD PTR [ebp-0x43]
  412cfa:	ret    
  412cfb:	push   esp
  412cfc:	xor    cl,BYTE PTR [edx+ecx*2+0x60]
  412d00:	(bad)  
  412d01:	popa   
  412d02:	loop   0x412cf2
  412d04:	call   0x34c61f9d
  412d09:	push   cs
  412d0a:	repz xchg esi,eax
  412d0c:	(bad)  
  412d0d:	sub    eax,0x8f1c086d
  412d12:	sbb    al,0xac
  412d14:	adc    BYTE PTR [edi],0x86
  412d17:	imul   edi,esi,0xfffffffa
  412d1a:	stos   DWORD PTR es:[edi],eax
  412d1b:	sub    ebp,edx
  412d1d:	sahf   
  412d1e:	ror    DWORD PTR [edx+edx*8+0x78],0x8e
  412d23:	sub    DWORD PTR [eax-0x15],edi
  412d26:	xor    eax,0x9a427219
  412d2b:	dec    edi
  412d2c:	stc    
  412d2d:	into   
  412d2e:	ds cmc 
  412d30:	cmp    eax,0xf03df14
  412d35:	inc    ecx
  412d36:	mov    ebx,0x45f32f9e
  412d3b:	xor    dh,dh
  412d3d:	lods   al,BYTE PTR ds:[esi]
  412d3e:	loop   0x412d67
  412d40:	push   ebx
  412d41:	dec    ecx
  412d42:	inc    ebx
  412d43:	out    0xfa,eax
  412d45:	hlt    
  412d46:	ret    0x669f
  412d49:	(bad)
  412d4c:	scas   al,BYTE PTR es:[edi]
  412d4d:	xor    BYTE PTR [edx+0xa],ch
  412d50:	test   DWORD PTR [eax],0xc1d2da89
  412d56:	inc    edi
  412d57:	or     DWORD PTR [ecx*2-0x6857d327],esi
  412d5e:	popa   
  412d5f:	sbb    al,0x1a
  412d61:	jo     0x412d38
  412d63:	jmp    0x8446de53
  412d68:	mov    ebx,0x1fd7fafe
  412d6d:	xchg   ebx,eax
  412d6e:	pusha  
  412d6f:	ror    BYTE PTR [esi-0x6c23a99f],0x9d
  412d76:	jl     0x412df6
  412d78:	mov    bh,0x94
  412d7a:	retf   
  412d7b:	(bad)  
  412d7d:	popa   
  412d7e:	test   eax,0x6c0cb125
  412d83:	adc    DWORD PTR [ebp-0x56794c42],edx
  412d89:	fdivp  st(2),st
  412d8b:	xchg   BYTE PTR [esi-0x54e18838],ch
  412d91:	jae    0x412d15
  412d93:	imul   esi,DWORD PTR [edi*2+0x76cc02fb],0x65
  412d9b:	das    
  412d9c:	ds ins BYTE PTR es:[edi],dx
  412d9e:	cmp    al,0x9f
  412da0:	cmp    al,0x7e
  412da2:	ja     0x412d5a
  412da4:	fwait
  412da5:	cmp    dh,bh
  412da7:	stos   DWORD PTR es:[edi],eax
  412da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412da9:	loope  0x412d91
  412dab:	xchg   ebp,eax
  412dac:	fs sbb eax,0x484c2162
  412db2:	and    al,0xbb
  412db4:	int3   
  412db5:	pop    ebp
  412db6:	pop    eax
  412db7:	cmp    ecx,DWORD PTR [ebx+0x5]
  412dba:	push   ds
  412dbb:	inc    eax
  412dbc:	adc    BYTE PTR [ecx],al
  412dbe:	lods   al,BYTE PTR ds:[esi]
  412dbf:	jbe    0x412dee
  412dc1:	mov    ah,0x44
  412dc3:	xchg   ebx,eax
  412dc4:	(bad)  
  412dc5:	mov    WORD PTR [esi+0x48],?
  412dc8:	or     BYTE PTR [ecx],bl
  412dca:	and    eax,0xba1f475d
  412dcf:	sbb    al,0xbf
  412dd1:	rcl    DWORD PTR [ebx-0x9],1
  412dd4:	sahf   
  412dd5:	pushf  
  412dd6:	cmp    al,0x43
  412dd8:	lds    ecx,FWORD PTR ds:0x327e7882
  412dde:	add    dl,al
  412de0:	jle    0x412d8b
  412de2:	mov    al,ds:0x440f0522
  412de7:	or     esi,DWORD PTR [esi]
  412de9:	(bad)  
  412deb:	call   0x4abb506
  412df0:	xchg   edi,eax
  412df1:	(bad)
  412df4:	into   
  412df5:	push   esi
  412df6:	stos   BYTE PTR es:[edi],al
  412df7:	sub    ch,BYTE PTR [esi-0x43d53796]
  412dfd:	fld1   
  412dff:	inc    edi
  412e00:	ins    BYTE PTR es:[edi],dx
  412e01:	push   ecx
  412e02:	pushf  
  412e03:	cdq    
  412e04:	not    DWORD PTR [edi-0x27]
  412e07:	adc    eax,0xffc93c3e
  412e0c:	cmc    
  412e0d:	es xor esp,ebx
  412e10:	and    ebp,DWORD PTR [edi]
  412e12:	jbe    0x412db7
  412e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e15:	cmovge ecx,DWORD PTR [edx]
  412e18:	gs xchg edi,eax
  412e1a:	mov    DWORD PTR [ebp-0xe],edi
  412e1d:	(bad)  
  412e1e:	xchg   edi,eax
  412e1f:	sbb    al,0x65
  412e21:	push   esi
  412e22:	dec    ebp
  412e23:	xlat   BYTE PTR ds:[ebx]
  412e24:	xor    cl,ah
  412e26:	pop    es
  412e27:	mov    BYTE PTR [edx+edi*1-0x6044bd7f],bh
  412e2e:	cld    
  412e2f:	add    ebp,DWORD PTR [esi+0x37]
  412e32:	push   edi
  412e33:	sub    BYTE PTR [ebx],dh
  412e35:	ins    DWORD PTR es:[edi],dx
  412e36:	inc    edi
  412e37:	js     0x412e13
  412e39:	mov    ebx,0x64e96ee2
  412e3e:	test   eax,0xdba0cc9d
  412e43:	adc    eax,0x8695a16
  412e48:	mov    BYTE PTR [ecx+0x21d98a21],bh
  412e4e:	rcl    DWORD PTR [eax-0x10],1
  412e51:	in     al,dx
  412e52:	xchg   ebp,eax
  412e53:	in     eax,dx
  412e54:	inc    ebp
  412e55:	xchg   dh,bh
  412e57:	and    DWORD PTR [eax],0x697af65d
  412e5d:	cwde   
  412e5e:	test   al,0x5b
  412e60:	lds    ebx,FWORD PTR [ecx]
  412e62:	push   0xffffffa6
  412e64:	hlt    
  412e65:	pop    ss
  412e66:	sub    DWORD PTR [ebx-0x55],esp
  412e69:	xchg   esi,eax
  412e6a:	std    
  412e6b:	daa    
  412e6c:	push   ebx
  412e6d:	inc    esp
  412e6e:	pop    ebp
  412e6f:	jmp    0xc3a28ba6
  412e74:	addr16 rcl bl,cl
  412e77:	mov    edi,0x68ae2f70
  412e7c:	pop    edx
  412e7d:	adc    ch,0x56
  412e80:	js     0x412e23
  412e82:	ds cs (bad) 
  412e85:	loop   0x412eb2
  412e87:	stos   BYTE PTR es:[edi],al
  412e88:	mov    ebx,0x67c7a02d
  412e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e8e:	push   edx
  412e8f:	arpl   WORD PTR es:[esi+0x6f],bp
  412e93:	scas   eax,DWORD PTR es:[edi]
  412e94:	push   cs
  412e95:	mov    ds:0x7025f62c,eax
  412e9a:	loope  0x412f0c
  412e9c:	jl     0x412eeb
  412e9e:	cmp    BYTE PTR [ebx+0x34],0x9d
  412ea2:	je     0x412e24
  412ea4:	push   cs
  412ea5:	adc    eax,0x3160995b
  412eaa:	sbb    eax,0x801fe252
  412eaf:	cmp    DWORD PTR [eax],0x39
  412eb2:	pop    ebx
  412eb3:	pop    ss
  412eb4:	test   al,0x7f
  412eb6:	add    ebx,DWORD PTR [edx]
  412eb8:	or     al,0xbb
  412eba:	call   0x8a24:0x6b5311fc
  412ec1:	pop    esp
  412ec2:	pop    ss
  412ec3:	mov    esp,0x667734d1
  412ec8:	push   edi
  412ec9:	push   esi
  412eca:	pop    ebp
  412ecb:	outs   dx,DWORD PTR ds:[esi]
  412ecc:	lahf   
  412ecd:	add    edx,DWORD PTR [edi]
  412ecf:	or     DWORD PTR [esi+0x4e],edx
  412ed2:	push   cs
  412ed3:	adc    BYTE PTR [ebp+0x5c8a058e],al
  412ed9:	div    al
  412edb:	ja     0x412e74
  412edd:	xchg   BYTE PTR [eax-0x7d],al
  412ee0:	add    esp,edi
  412ee2:	pop    edi
  412ee3:	push   ss
  412ee4:	inc    eax
  412ee5:	scas   eax,DWORD PTR es:[edi]
  412ee6:	scas   al,BYTE PTR es:[edi]
  412ee7:	scas   al,BYTE PTR es:[edi]
  412ee8:	mov    edx,0x440921dc
  412eed:	push   edi
  412eee:	push   ss
  412eef:	or     BYTE PTR [ebp+0x3b],0x50
  412ef3:	mov    edx,0x848bac44
  412ef8:	sub    eax,0xa4c7b828
  412efd:	repnz mov eax,ds:0x7ecdbbaa
  412f03:	cli    
  412f04:	xchg   ecx,eax
  412f05:	mov    esi,0xa0ff3528
  412f0a:	jmp    0x8388ecf0
  412f0f:	in     al,0x96
  412f11:	sbb    ecx,DWORD PTR [ecx+0x30]
  412f14:	and    BYTE PTR [ebp-0x27],dl
  412f17:	add    DWORD PTR [esi+0x2],ebp
  412f1a:	lods   eax,DWORD PTR ds:[esi]
  412f1b:	mov    ecx,0x3ce26a2b
  412f20:	scas   al,BYTE PTR es:[edi]
  412f21:	in     eax,0x4b
  412f23:	fild   DWORD PTR [esi+0x23731c83]
  412f29:	mov    ss,WORD PTR [esi-0x20f7891e]
  412f2f:	retf   
  412f30:	sbb    DWORD PTR [edi+0x65],0xbcc40d08
  412f37:	outs   dx,BYTE PTR ds:[esi]
  412f38:	mov    eax,ds:0x75c7be90
  412f3d:	dec    esp
  412f3e:	sbb    edi,DWORD PTR [ecx+0x6d3c5781]
  412f44:	jge    0x412efb
  412f46:	idiv   DWORD PTR [edi-0x55742ab]
  412f4c:	out    0xfd,al
  412f4e:	cmp    cl,BYTE PTR [ecx+0x27f8ed58]
  412f54:	mov    eax,ds:0xdc44c35c
  412f59:	xor    eax,0x28815bc1
  412f5e:	xchg   esp,eax
  412f5f:	cli    
  412f60:	dec    edx
  412f61:	out    dx,eax
  412f62:	push   edi
  412f63:	jo     0x412f8b
  412f65:	test   BYTE PTR [esi],al
  412f67:	inc    ebx
  412f68:	xchg   esi,eax
  412f69:	push   0x5d
  412f6b:	jge    0x412ef9
  412f6d:	mov    esp,0x347a936d
  412f72:	cmp    bh,BYTE PTR [ebx-0x5a83afd1]
  412f78:	sti    
  412f79:	(bad)  
  412f7b:	call   0x8241cf17
  412f80:	xchg   edx,eax
  412f81:	dec    esi
  412f82:	cwde   
  412f83:	pop    edx
  412f84:	lods   al,BYTE PTR ds:[esi]
  412f85:	jns    0x412f95
  412f87:	fs mov al,0xe0
  412f8a:	test   DWORD PTR [edx+0x68150c7d],ebp
  412f90:	adc    ch,bl
  412f92:	int3   
  412f93:	mov    ah,0x56
  412f95:	stos   BYTE PTR es:[edi],al
  412f96:	aam    0x64
  412f98:	sbb    bh,BYTE PTR [eax]
  412f9a:	push   ebx
  412f9b:	(bad)  
  412f9c:	pop    eax
  412f9d:	sbb    bh,BYTE PTR [ebx-0x17c4667]
  412fa3:	xchg   edi,eax
  412fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fa5:	and    eax,0x51d498e
  412faa:	int3   
  412fab:	sahf   
  412fac:	ja     0x412f40
  412fae:	or     ebx,DWORD PTR [edx+eax*4-0x3f]
  412fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb3:	popa   
  412fb4:	cld    
  412fb5:	mov    WORD PTR [edx-0xe9e91a8],?
  412fbb:	sub    al,dh
  412fbd:	adc    DWORD PTR [ecx],ecx
  412fbf:	xor    ah,BYTE PTR [edx-0x3ee3ae0d]
  412fc5:	xlat   BYTE PTR ds:[ebx]
  412fc6:	idiv   BYTE PTR [edx]
  412fc8:	loope  0x412f8e
  412fca:	and    eax,0x6bcafb37
  412fcf:	rcr    dh,0xf7
  412fd2:	xchg   edi,eax
  412fd3:	enter  0x888c,0xd3
  412fd7:	cmc    
  412fd8:	retf   0xf50
  412fdb:	test   eax,0x954be293
  412fe0:	inc    edi
  412fe1:	jbe    0x412fbd
  412fe3:	xor    esi,edx
  412fe5:	push   edi
  412fe6:	mov    dl,0x15
  412fe8:	sahf   
  412fe9:	icebp  
  412fea:	or     ebp,DWORD PTR [esi]
  412fec:	mov    eax,0x4263cda9
  412ff1:	jl     0x413064
  412ff3:	push   esp
  412ff4:	cmp    eax,0xa503413b
  412ff9:	add    al,0x8c
  412ffb:	enter  0x3e27,0x40
  412fff:	stos   BYTE PTR es:[edi],al
  413000:	icebp  
  413001:	cdq    
  413002:	popa   
  413003:	aad    0x78
  413005:	(bad)  
  413006:	cli    
  413007:	push   ss
  413008:	in     eax,dx
  413009:	xor    cl,BYTE PTR [ebx-0x63be081b]
  41300f:	js     0x413035
  413011:	data16 mov al,ds:0xcbf90f75
  413017:	xor    esp,DWORD PTR [ecx]
  413019:	inc    edi
  41301a:	jo     0x412fa8
  41301c:	adc    al,BYTE PTR gs:[esi]
  41301f:	rcl    dl,0x79
  413022:	sbb    DWORD PTR [esi],0xfffffff0
  413025:	cwde   
  413026:	xchg   edi,eax
  413027:	call   0x5ab6:0x1c057a63
  41302e:	clc    
  41302f:	pop    es
  413030:	lods   al,BYTE PTR ds:[esi]
  413031:	sahf   
  413032:	push   ss
  413033:	xor    DWORD PTR [edx+0x2b62613e],edi
  413039:	pop    ebx
  41303a:	not    BYTE PTR [esi]
  41303c:	imul   esp,DWORD PTR [esi],0xfcab6d58
  413042:	popa   
  413043:	test   BYTE PTR ds:0xc27b557d,dl
  413049:	pop    ecx
  41304a:	jnp    0x412fe2
  41304c:	in     al,0x3a
  41304e:	or     eax,0x11d7c28f
  413053:	out    dx,eax
  413054:	push   0xe9a517cf
  413059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41305a:	in     al,0xba
  41305c:	cmc    
  41305d:	sub    bh,BYTE PTR [esi+eiz*4]
  413060:	mov    DWORD PTR [edi+0x78],ebx
  413063:	sub    ebp,ebx
  413065:	xchg   DWORD PTR [esi+eiz*4-0x66],ebp
  413069:	lods   eax,DWORD PTR ds:[esi]
  41306a:	pop    ecx
  41306b:	pop    es
  41306c:	adc    eax,0x6a1073b8
  413071:	mov    al,ds:0xd49bac9b
  413076:	jg     0x4130ce
  413078:	cwde   
  413079:	repz xchg ebp,eax
  41307b:	push   cs
  41307c:	int3   
  41307d:	fs fs ss sbb bl,al
  413082:	add    BYTE PTR [eax-0xb],bl
  413085:	(bad)  
  413086:	stos   DWORD PTR es:[edi],eax
  413087:	pop    ds
  413088:	sbb    eax,0xfd038fb9
  41308d:	sbb    eax,0xa5953941
  413092:	bound  edi,QWORD PTR [ecx+0x1b]
  413095:	xchg   esi,eax
  413096:	xor    BYTE PTR [edx+edx*8-0x5afe0ad9],dh
  41309d:	mov    edi,0x90ea59a2
  4130a2:	loop   0x413042
  4130a4:	(bad)  
  4130a5:	and    DWORD PTR ds:0x3d8d363d,ebp
  4130ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ac:	inc    ebx
  4130ad:	xchg   esi,eax
  4130ae:	mul    BYTE PTR [esi+0x15]
  4130b1:	mov    esp,0xad52325f
  4130b6:	inc    eax
  4130b7:	fcom   QWORD PTR [ecx-0x44]
  4130ba:	mov    edi,0x9dce9f14
  4130bf:	inc    ebp
  4130c0:	mov    edi,0xe4bae6e3
  4130c5:	adc    DWORD PTR [edx],0xdff1c004
  4130cb:	pop    esi
  4130cc:	jne    0x413088
  4130ce:	stc    
  4130cf:	(bad)  
  4130d0:	sub    eax,0x2352d9b0
  4130d5:	(bad)  
  4130d6:	pusha  
  4130d7:	es push es
  4130d9:	pop    eax
  4130da:	jmp    0x3937:0x47d8eaf4
  4130e1:	jno    0x413122
  4130e3:	xor    ch,cl
  4130e5:	and    DWORD PTR ds:0xf0910c3c,esi
  4130eb:	xchg   ebp,eax
  4130ec:	(bad)  
  4130ed:	jno    0x413088
  4130ef:	outs   dx,BYTE PTR ds:[esi]
  4130f0:	dec    eax
  4130f1:	push   esp
  4130f2:	xchg   ebp,eax
  4130f3:	stos   BYTE PTR es:[edi],al
  4130f4:	push   edx
  4130f5:	mov    cl,0x2
  4130f7:	cmp    al,BYTE PTR [esi-0x1ae07a4a]
  4130fd:	mov    bl,0x6e
  4130ff:	push   DWORD PTR [ebx+eiz*2]
  413102:	jecxz  0x41311e
  413104:	xchg   esp,eax
  413105:	xlat   BYTE PTR ds:[ebx]
  413106:	std    
  413107:	lds    ecx,FWORD PTR ds:0x5f8fc32b
  41310d:	ret    
  41310e:	or     esp,edi
  413110:	adc    al,dl
  413112:	pop    ds
  413113:	pusha  
  413114:	dec    DWORD PTR [edi+edx*1-0x38]
  413118:	test   DWORD PTR [esi+0x53],ebp
  41311b:	outs   dx,BYTE PTR ds:[esi]
  41311c:	scas   al,BYTE PTR es:[edi]
  41311d:	mov    ebp,0x62663b7f
  413122:	or     BYTE PTR [edi-0x5e],bh
  413125:	lods   eax,DWORD PTR ds:[esi]
  413126:	push   ebx
  413127:	aad    0xfb
  413129:	sub    esi,ebp
  41312b:	lods   al,BYTE PTR ds:[esi]
  41312c:	std    
  41312d:	fwait
  41312e:	rcl    DWORD PTR [eax+0x266b5bcc],0xdc
  413135:	fwait
  413136:	aaa    
  413137:	sahf   
  413138:	pop    ss
  413139:	cmp    dh,bh
  41313b:	xor    edx,edi
  41313d:	jns    0x413190
  41313f:	jbe    0x4130e3
  413141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413142:	stos   BYTE PTR es:[edi],al
  413143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413144:	cs add edx,esi
  413147:	xor    eax,0xd3069c62
  41314c:	cld    
  41314d:	mov    esp,0x1347ece6
  413152:	sbb    al,0xb
  413154:	pop    eax
  413155:	mov    BYTE PTR [ebp+ebx*2-0x77dbfd7c],bh
  41315c:	dec    esi
  41315d:	lahf   
  41315e:	or     dh,BYTE PTR [edi+0x65d0d712]
  413164:	add    cl,BYTE PTR [eax]
  413166:	or     bh,BYTE PTR [ebp+0x45b18d9e]
  41316c:	inc    ecx
  41316d:	call   0x7efb:0xc2d130a8
  413174:	and    BYTE PTR [esi-0x6d5f7bd6],ch
  41317a:	inc    eax
  41317b:	inc    edx
  41317c:	inc    esi
  41317d:	pop    esi
  41317e:	fld    TBYTE PTR [ebp+edi*8+0xc9b3f7]
  413185:	xchg   ecx,eax
  413186:	jmp    0xbb71:0x10d093a
  41318d:	cs mov bh,BYTE PTR fs:[eax+0x361e7c30]
  413195:	arpl   cx,sp
  413197:	js     0x4131cb
  413199:	pusha  
  41319a:	test   al,0xbb
  41319c:	ja     0x41315a
  41319e:	(bad)  
  41319f:	mov    bl,0x9b
  4131a1:	push   cs
  4131a2:	dec    ebx
  4131a3:	push   es
  4131a4:	or     dl,bh
  4131a6:	sub    edi,eax
  4131a8:	cmp    al,0x32
  4131aa:	shl    BYTE PTR [eax-0x3c],cl
  4131ad:	push   ss
  4131ae:	scas   eax,DWORD PTR es:[edi]
  4131af:	(bad)  
  4131b2:	pop    es
  4131b3:	clc    
  4131b4:	push   ss
  4131b5:	mov    eax,0x94bbc3de
  4131ba:	shl    BYTE PTR [edx+esi*8+0x7f],1
  4131be:	lods   al,BYTE PTR ds:[esi]
  4131bf:	cmc    
  4131c0:	jmp    0x4f0b:0xa7892b10
  4131c7:	ds jl  0x4131a8
  4131ca:	mov    ds,WORD PTR [edi-0x29]
  4131cd:	sbb    al,BYTE PTR [edi+0x1e]
  4131d0:	mov    al,0xb3
  4131d2:	xor    esi,DWORD PTR [ebx+0x7d]
  4131d5:	adc    al,dl
  4131d7:	js     0x4131f3
  4131d9:	fmul   st(1),st
  4131db:	cmp    al,0x8b
  4131dd:	inc    edi
  4131de:	loop   0x4131be
  4131e0:	ss inc eax
  4131e2:	dec    ebp
  4131e3:	xchg   esp,eax
  4131e4:	xor    BYTE PTR [esi],dl
  4131e6:	daa    
  4131e7:	lods   eax,DWORD PTR ds:[esi]
  4131e8:	mov    edi,0xedb0770e
  4131ed:	cli    
  4131ee:	aam    0x1a
  4131f0:	enter  0x8e1c,0x9d
  4131f4:	rcl    ebp,1
  4131f6:	aas    
  4131f7:	or     BYTE PTR [ecx+ebx*4],ah
  4131fa:	rol    BYTE PTR [esi-0xe2cd643],cl
  413200:	imul   ebp,DWORD PTR [edx-0x6ca7f8dd],0xffffffae
  413207:	dec    esp
  413208:	push   edx
  413209:	shl    DWORD PTR [ebx+edi*2-0x71],0x69
  41320e:	mov    ecx,0xa6e7f0e0
  413213:	and    dh,BYTE PTR [esi+0x6eab7aed]
  413219:	data16 ins BYTE PTR es:[edi],dx
  41321b:	repz leave 
  41321d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41321f:	xchg   bh,dh
  413221:	retf   0xd3cd
  413224:	leave  
  413225:	cwde   
  413226:	jae    0x4131dc
  413228:	dec    ecx
  413229:	out    0x45,eax
  41322b:	inc    edi
  41322c:	jl     0x413202
  41322e:	(bad)  
  41322f:	ss inc edx
  413231:	push   cs
  413232:	mov    dl,0xb5
  413234:	imul   edx,edx,0xf5fc1260
  41323a:	shr    DWORD PTR [ecx+0x4aa314e0],1
  413240:	out    dx,al
  413241:	(bad)  
  413242:	std    
  413243:	or     eax,0x2915d3ed
  413248:	jno    0x413239
  41324a:	and    al,0x7f
  41324c:	sbb    ebp,DWORD PTR [ebx]
  41324e:	mov    esi,0x58916ae7
  413253:	jns    0x4131d8
  413255:	sahf   
  413256:	je     0x4131fd
  413258:	(bad)  
  413259:	push   esi
  41325a:	aad    0x7d
  41325c:	jae    0x413229
  41325e:	push   eax
  41325f:	sub    ebp,DWORD PTR [edx+0x75]
  413262:	pushf  
  413263:	cmp    al,0x7c
  413265:	daa    
  413266:	adc    DWORD PTR [edi-0x7b6b60a2],eax
  41326c:	loope  0x41326a
  41326e:	add    eax,0xef733d3b
  413273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413274:	mov    al,gs:0xbd0bee68
  41327a:	mov    BYTE PTR [ebp-0x71],bl
  41327d:	and    edx,DWORD PTR [esi+eax*8-0x6a]
  413281:	outs   dx,BYTE PTR ds:[esi]
  413282:	in     eax,0x93
  413284:	aad    0x75
  413286:	inc    eax
  413287:	in     eax,0x14
  413289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41328a:	das    
  41328b:	loope  0x413294
  41328d:	imul   esi,esi,0xfa43d1d
  413293:	xor    eax,DWORD PTR [edi]
  413295:	xchg   esp,eax
  413296:	mov    eax,ds:0x31741642
  41329b:	fdivr  QWORD PTR [ebx+0x936004b]
  4132a1:	lds    edx,FWORD PTR [edx-0x20]
  4132a4:	aad    0xec
  4132a6:	xchg   esp,eax
  4132a7:	xchg   ebp,eax
  4132a8:	data16 jmp 0x413271
  4132ab:	jl     0x413293
  4132ad:	push   edi
  4132ae:	(bad)  
  4132af:	mov    al,ds:0x2f998563
  4132b4:	adc    eax,0x9c33636e
  4132b9:	sbb    eax,0xea3123db
  4132be:	(bad)  
  4132c0:	pmaddwd mm1,QWORD PTR [ebx]
  4132c3:	push   ebx
  4132c4:	outs   dx,BYTE PTR ds:[esi]
  4132c5:	xor    al,0x98
  4132c7:	sbb    dh,BYTE PTR [esi-0x1b9c2a98]
  4132cd:	outs   dx,BYTE PTR ds:[esi]
  4132ce:	add    ebp,edi
  4132d0:	and    BYTE PTR [ebp+eax*1-0x20],dh
  4132d4:	and    DWORD PTR [esi-0x29bf8f7e],ebx
  4132da:	inc    eax
  4132db:	out    0xec,al
  4132dd:	sub    al,0x58
  4132df:	mov    edi,0x407c994f
  4132e4:	(bad)  
  4132e5:	pop    eax
  4132e6:	adc    ch,BYTE PTR ds:0x53cf95c3
  4132ec:	sub    DWORD PTR [eax+0x1d102d6c],ebp
  4132f2:	nop
  4132f3:	lods   al,BYTE PTR ds:[esi]
  4132f4:	out    dx,al
  4132f5:	and    ebx,edi
  4132f7:	xchg   ecx,eax
  4132f8:	inc    esp
  4132f9:	jbe    0x413306
  4132fb:	(bad)  
  4132fc:	mov    bh,0xfd
  4132fe:	jmp    0x3562:0xe1ef742f
  413305:	fwait
  413306:	popf   
  413307:	shr    BYTE PTR [ecx+esi*8-0x21ea6327],cl
  41330e:	jg     0x4132ab
  413310:	inc    eax
  413311:	pop    esp
  413312:	es ja  0x413364
  413315:	lods   eax,DWORD PTR ds:[esi]
  413316:	xchg   esi,eax
  413317:	lods   al,BYTE PTR ds:[esi]
  413318:	fimul  WORD PTR [eax-0x5b]
  41331b:	push   edx
  41331c:	outs   dx,DWORD PTR ds:[esi]
  41331d:	daa    
  41331e:	popf   
  41331f:	xor    esp,ebx
  413321:	xchg   BYTE PTR [ecx],ah
  413323:	xchg   ebx,eax
  413324:	jecxz  0x4132bd
  413326:	sbb    ecx,DWORD PTR [ebx+0x1d]
  413329:	adc    al,0xf
  41332b:	mov    ds:0xa4ec46a8,al
  413330:	test   esp,0xcc4da9ae
  413336:	cmp    dl,BYTE PTR [edi+0x5]
  413339:	pop    eax
  41333a:	mov    ecx,0xa317a90c
  41333f:	mov    ecx,DWORD PTR ds:0x10fc6cd0
  413345:	int    0xad
  413347:	lods   eax,DWORD PTR ds:[esi]
  413348:	ret    
  413349:	repz add al,BYTE PTR [edi+ebx*1-0x8]
  41334e:	sbb    ch,BYTE PTR [esi+0x250cd631]
  413354:	dec    esp
  413355:	pushf  
  413356:	jnp    0x4132e4
  413358:	push   ebx
  413359:	cmp    bl,al
  41335b:	ds mov dh,0x77
  41335e:	js     0x413344
  413360:	fld    DWORD PTR [ebp-0x74]
  413363:	clc    
  413364:	cmp    edx,DWORD PTR [esi+ebp*2-0x5d]
  413368:	bound  esp,QWORD PTR [edx+ebx*8]
  41336b:	xchg   ecx,eax
  41336c:	(bad)  
  41336d:	mov    cs,eax
  41336f:	int3   
  413370:	inc    edi
  413371:	iret   
  413372:	(bad)  
  413373:	loop   0x413305
  413375:	ins    BYTE PTR es:[edi],dx
  413376:	in     eax,dx
  413377:	inc    edx
  413378:	jg     0x413327
  41337a:	ret    
  41337b:	int3   
  41337c:	adc    eax,0xde79d756
  413381:	idiv   cl
  413383:	jge    0x413311
  413385:	loope  0x4133ee
  413387:	mov    ah,0x45
  413389:	ss adc dl,ch
  41338c:	xchg   ebx,eax
  41338d:	stos   BYTE PTR es:[edi],al
  41338e:	xor    eax,0xfb6436fa
  413393:	bound  edx,QWORD PTR [ecx+0x5d]
  413396:	mov    ecx,0xe41b043e
  41339b:	imul   edi,DWORD PTR [edi+0xef913fc],0x3747d26d
  4133a5:	push   ss
  4133a6:	stos   BYTE PTR es:[edi],al
  4133a7:	(bad)  
  4133a8:	ja     0x4133a5
  4133aa:	not    DWORD PTR [ecx+ebx*4]
  4133ad:	stos   DWORD PTR es:[edi],eax
  4133ae:	mov    WORD PTR [eax+0x276fefa5],ds
  4133b4:	or     cl,bl
  4133b6:	jmp    0x4133a0
  4133b8:	dec    ebx
  4133b9:	sub    BYTE PTR [ecx-0x72004da7],al
  4133bf:	loope  0x41339e
  4133c1:	dec    esi
  4133c2:	push   ebp
  4133c3:	push   edi
  4133c4:	imul   esi,DWORD PTR es:[esi],0x37
  4133c8:	add    DWORD PTR [eax+0x65e3ac87],edi
  4133ce:	test   eax,0xa2711fe8
  4133d3:	and    edx,DWORD PTR [ebp+edx*2-0x5106502c]
  4133da:	sbb    edx,ebp
  4133dc:	fwait
  4133dd:	(bad)  
  4133de:	int3   
  4133df:	xor    eax,edx
  4133e1:	test   DWORD PTR [esi+ebx*2+0x530554c],ecx
  4133e8:	pusha  
  4133e9:	add    ax,0x12e3
  4133ed:	cmp    ebx,DWORD PTR [ebx-0x60ac0151]
  4133f3:	out    dx,al
  4133f4:	sub    al,0x76
  4133f6:	test   BYTE PTR [edi+0xf],bh
  4133f9:	mov    eax,0xf4aa8d22
  4133fe:	stos   BYTE PTR es:[edi],al
  4133ff:	sbb    edi,DWORD PTR [ebx+0x40]
  413402:	daa    
  413403:	add    BYTE PTR [esi-0x7ccb35d1],bh
  413409:	call   0xbb47:0x301e6c74
  413410:	adc    esi,DWORD PTR [edi-0x6d]
  413413:	mov    edi,0x139fc91c
  413418:	pusha  
  413419:	dec    ebx
  41341a:	mov    esp,0x412652ce
  41341f:	dec    ecx
  413420:	retf   0x6045
  413423:	mov    DWORD PTR [ebp-0x73],ecx
  413426:	add    BYTE PTR [eax],ah
  413428:	or     ebp,edi
  41342a:	mov    ebx,0x24575191
  41342f:	xchg   DWORD PTR [esi+eax*2+0x50],esp
  413433:	sub    al,0xc9
  413435:	stos   DWORD PTR es:[edi],eax
  413436:	shl    DWORD PTR [eax-0xd66cad2],0xb9
  41343d:	push   esp
  41343e:	xchg   esp,eax
  41343f:	mov    edx,0x9794b5a5
  413444:	push   eax
  413445:	mov    bl,0xdf
  413447:	adc    esi,eax
  413449:	jns    0x413484
  41344b:	and    eax,0x6299ad13
  413450:	jae    0x4133e9
  413452:	call   0x376f:0x691a8986
  413459:	jg     0x413425
  41345b:	int3   
  41345c:	pusha  
  41345d:	jge    0x413459
  41345f:	xor    DWORD PTR [esi+0x6d47c30b],edi
  413465:	inc    eax
  413466:	nop
  413467:	mov    ebp,0xbb2c040
  41346c:	dec    edx
  41346d:	mov    ah,0x11
  41346f:	pop    eax
  413470:	fsubr  DWORD PTR [ecx]
  413472:	fisttp DWORD PTR [ecx-0x43132cd9]
  413478:	jnp    0x413465
  41347a:	(bad)  
  41347b:	sub    al,0x87
  41347d:	call   0x7d5a4003
  413482:	sahf   
  413483:	xchg   DWORD PTR [ecx+0x46],edx
  413486:	dec    esi
  413487:	push   ebp
  413488:	push   0xfffffff4
  41348a:	daa    
  41348b:	fsubr  QWORD PTR [eax+edi*1]
  41348e:	jnp    0x41349f
  413490:	pop    ecx
  413491:	or     edi,edx
  413493:	fisub  WORD PTR ds:0x85b6b589
  413499:	push   eax
  41349a:	mov    ah,0x67
  41349c:	push   DWORD PTR [ebp+0x59e7503e]
  4134a2:	loope  0x413427
  4134a4:	fist   WORD PTR [edx-0x57]
  4134a7:	xchg   esi,eax
  4134a8:	pop    es
  4134a9:	pop    es
  4134aa:	test   eax,0x84dcb771
  4134af:	jo     0x41345f
  4134b1:	imul   ecx,DWORD PTR [esi],0xffffffe3
  4134b4:	jmp    0xb1fb:0x84cb17bc
  4134bb:	pop    esp
  4134bc:	lods   al,BYTE PTR ds:[esi]
  4134bd:	mov    eax,0xbd9200f1
  4134c2:	sbb    bh,bl
  4134c4:	dec    edi
  4134c5:	popf   
  4134c6:	or     al,0x15
  4134c8:	dec    esp
  4134c9:	mov    ch,0xe6
  4134cb:	mov    edi,0x644a5bd3
  4134d0:	xlat   BYTE PTR ds:[ebx]
  4134d1:	jb     0x4134ca
  4134d3:	jmp    0x41345b
  4134d5:	or     BYTE PTR [ebp+0x44],ah
  4134d8:	enter  0x8e8a,0x20
  4134dc:	mov    ds,WORD PTR [eax*2-0x1fcb55e0]
  4134e3:	push   edi
  4134e4:	xor    cl,cl
  4134e6:	and    eax,0x5cbc08d7
  4134eb:	cmp    BYTE PTR [edx],0x6d
  4134ee:	jg     0x41356e
  4134f0:	xor    cl,BYTE PTR [ebp-0x5f]
  4134f3:	outs   dx,BYTE PTR cs:[esi]
  4134f5:	add    BYTE PTR [eax+eax*8],0x0
  4134f9:	inc    ebp
  4134fa:	xchg   bl,bl
  4134fc:	xor    ah,dh
  4134fe:	mul    DWORD PTR [edx+esi*4-0x4ffe709]
  413505:	mov    BYTE PTR [ebp+0x7a73dd8f],al
  41350b:	dec    esi
  41350c:	add    edi,esi
  41350e:	mov    al,ds:0xbdc647f0
  413513:	push   0xffffffce
  413515:	movd   DWORD PTR [edx+0x2cb78c9d],mm6
  41351c:	mov    esi,0xc6ab0f00
  413521:	add    al,0x9c
  413523:	dec    ecx
  413524:	int    0x92
  413526:	out    0xb6,eax
  413528:	xchg   ebx,eax
  413529:	push   ss
  41352a:	test   eax,0x5935b40c
  41352f:	pop    edi
  413530:	adc    BYTE PTR [ebp+edx*1-0x640f8c84],dl
  413537:	repz inc edx
  413539:	xchg   ebp,eax
  41353a:	fdiv   st(5),st
  41353c:	cdq    
  41353d:	jecxz  0x4134e4
  41353f:	pop    esi
  413540:	jmp    0x413547
  413542:	(bad)  
  413543:	aam    0x94
  413545:	aad    0xa3
  413547:	mov    ah,0x5a
  413549:	daa    
  41354a:	sub    ebp,DWORD PTR [ebp-0x62]
  41354d:	pop    esp
  41354e:	fstp   TBYTE PTR [esi-0x59348c1f]
  413554:	xchg   ebx,eax
  413555:	pop    es
  413556:	fs rol cl,0x6
  41355a:	mov    ebx,0x1cadc036
  41355f:	call   0x8fbb:0xd6989e2f
  413566:	mov    ds:0x150c8d5b,al
  41356b:	fimul  DWORD PTR [ecx+edi*4+0x70]
  41356f:	cmp    ch,BYTE PTR [ebx+0x56]
  413572:	pushf  
  413573:	pop    ds
  413574:	rcr    BYTE PTR [edx],0x15
  413577:	aas    
  413578:	sbb    DWORD PTR [ebx],0xeea6bf46
  41357e:	repz out 0xdd,eax
  413581:	mov    bh,0x33
  413583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413584:	out    dx,al
  413585:	mov    bh,0xbb
  413587:	or     BYTE PTR [esi-0x1],bl
  41358a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358b:	ret    0x7b32
  41358e:	inc    ebx
  41358f:	and    cl,bh
  413591:	push   0x439a4609
  413596:	xchg   ebx,eax
  413597:	lahf   
  413598:	xor    ch,BYTE PTR [edx-0x2093ccad]
  41359e:	sbb    ebx,edx
  4135a0:	in     eax,0x62
  4135a2:	mov    edi,0xb1652440
  4135a7:	sar    DWORD PTR [edx+0x47],cl
  4135aa:	or     edi,edx
  4135ac:	push   0x35bbf324
  4135b1:	jo     0x4135ef
  4135b3:	stos   BYTE PTR es:[edi],al
  4135b4:	adc    al,al
  4135b6:	adc    al,0xd8
  4135b8:	outs   dx,BYTE PTR ds:[esi]
  4135b9:	mov    ch,0x2b
  4135bb:	pop    edi
  4135bc:	dec    eax
  4135bd:	sbb    ah,bh
  4135bf:	stos   DWORD PTR es:[edi],eax
  4135c0:	mov    gs,edi
  4135c2:	repnz push ds
  4135c4:	inc    ebx
  4135c5:	add    al,0x9
  4135c7:	scas   eax,DWORD PTR es:[edi]
  4135c8:	push   edi
  4135c9:	lds    esp,FWORD PTR [edx-0x16]
  4135cc:	jl     0x413559
  4135ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135cf:	in     eax,dx
  4135d0:	out    0xf,eax
  4135d2:	clc    
  4135d3:	loop   0x41359c
  4135d5:	pop    ss
  4135d6:	test   eax,0xd05189e9
  4135db:	lods   eax,DWORD PTR ds:[esi]
  4135dc:	mov    eax,0x9fec282f
  4135e1:	outs   dx,DWORD PTR ds:[esi]
  4135e2:	cmp    bl,BYTE PTR [ebx+eax*8]
  4135e5:	lods   al,BYTE PTR ds:[esi]
  4135e6:	xchg   ecx,eax
  4135e7:	mov    eax,ds:0x12aee4e2
  4135ec:	clc    
  4135ed:	push   edi
  4135ee:	(bad)  
  4135ef:	cmp    ebp,DWORD PTR [ebp+0x568a4b82]
  4135f5:	enter  0xe653,0x6c
  4135f9:	and    BYTE PTR [ebx-0x24],dl
  4135fc:	push   ecx
  4135fd:	mov    ebp,0x12a4f4c0
  413603:	push   ss
  413604:	add    al,cl
  413606:	(bad)  
  413607:	mov    edx,0xbd7c0d14
  41360c:	mov    ecx,0xe6abf3db
  413611:	mov    ebp,0x6dd24ed0
  413616:	jb     0x4135cf
  413618:	jle    0x413647
  41361a:	ins    BYTE PTR es:[edi],dx
  41361b:	push   eax
  41361c:	shl    eax,1
  41361e:	xor    al,0xaa
  413620:	and    bl,ch
  413622:	push   esi
  413623:	or     DWORD PTR [esi+0x4a],esp
  413626:	mov    al,0xa7
  413628:	fmulp  st(1),st
  41362a:	mov    DWORD PTR ds:0x39e56119,esi
  413630:	xchg   edx,eax
  413631:	jg     0x41362f
  413633:	sbb    eax,eax
  413635:	jle    0x4135c0
  413637:	sbb    dl,BYTE PTR [edi]
  413639:	push   edi
  41363a:	(bad)  
  41363b:	inc    ecx
  41363c:	mov    esi,0x2e70dce3
  413641:	adc    al,0x85
  413643:	push   0x11
  413645:	das    
  413646:	push   eax
  413647:	clc    
  413648:	(bad)  
  413649:	in     eax,dx
  41364a:	pusha  
  41364b:	dec    ecx
  41364c:	mov    edi,0x1ca332e9
  413651:	ss pusha 
  413653:	leave  
  413654:	pop    esi
  413655:	mov    ebp,0x5afcc0f8
  41365a:	cdq    
  41365b:	xchg   edx,eax
  41365c:	jb     0x41360b
  41365e:	imul   ecx,eax,0xfffffff0
  413661:	js     0x413684
  413663:	test   BYTE PTR [esi],bh
  413665:	mov    ecx,0x4a7d5d80
  41366a:	cmp    BYTE PTR [ecx-0x13],cl
  41366d:	cld    
  41366e:	sbb    DWORD PTR [esi],esi
  413670:	push   cs
  413671:	stc    
  413672:	(bad)  
  413673:	xor    al,0xfa
  413675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413676:	jmp    DWORD PTR [esi+0x5f]
  413679:	retf   0xf60b
  41367c:	shl    BYTE PTR [edx],0x8c
  41367f:	aam    0x6
  413681:	and    DWORD PTR [ecx+0x7a],ebx
  413684:	ja     0x4136f8
  413686:	out    dx,eax
  413687:	adc    DWORD PTR [ebp+0x27],eax
  41368a:	out    dx,eax
  41368b:	pop    ecx
  41368c:	repz call 0x9c4276cf
  413692:	xor    al,0x66
  413694:	sbb    ecx,DWORD PTR [edi+ebp*2+0x55]
  413698:	dec    esi
  413699:	pop    ds
  41369a:	fmul   QWORD PTR [ecx+0x57b2b4fe]
  4136a0:	add    eax,0xdb1561d2
  4136a5:	xor    eax,DWORD PTR [eax+0x11]
  4136a8:	out    0x80,al
  4136aa:	jo     0x4136e1
  4136ac:	mov    ebp,0x3c25b4a
  4136b1:	sub    esi,DWORD PTR [ebx]
  4136b3:	push   esp
  4136b4:	mov    ebx,0x5fc924d8
  4136b9:	loope  0x413665
  4136bb:	(bad)  
  4136bc:	xor    esi,esp
  4136be:	(bad)  
  4136bf:	retf   
  4136c0:	cmc    
  4136c1:	std    
  4136c2:	ret    0xcdee
  4136c5:	lods   eax,DWORD PTR ds:[esi]
  4136c6:	jnp    0x4136f9
  4136c8:	push   eax
  4136c9:	xchg   edi,eax
  4136ca:	mov    eax,0x497bf241
  4136cf:	pop    eax
  4136d0:	popf   
  4136d1:	icebp  
  4136d2:	mov    dh,0xc7
  4136d4:	repnz push ebx
  4136d6:	sbb    al,0xf6
  4136d8:	inc    esi
  4136d9:	mov    al,ds:0x2a9692f
  4136de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136df:	shr    esp,0x52
  4136e2:	ja     0x4136ce
  4136e4:	mul    DWORD PTR [ecx-0x5d5d4765]
  4136ea:	ins    BYTE PTR es:[edi],dx
  4136eb:	and    BYTE PTR [esi+ebp*8+0x77],dh
  4136ef:	movzx  edx,WORD PTR [edi]
  4136f2:	ins    BYTE PTR es:[edi],dx
  4136f3:	adc    al,0xd7
  4136f5:	sub    DWORD PTR [eax],eax
  4136f7:	adc    eax,0x6b1a23f1
  4136fc:	jge    0x413711
  4136fe:	sar    BYTE PTR [edx+0x33],cl
  413701:	sbb    BYTE PTR [eax],0x24
  413704:	xchg   ecx,eax
  413705:	std    
  413706:	lods   al,BYTE PTR ds:[esi]
  413707:	into   
  413708:	jl     0x4136b4
  41370a:	int    0x61
  41370c:	bound  eax,QWORD PTR [esi+0x6f]
  41370f:	push   edx
  413710:	xlat   BYTE PTR ds:[ebx]
  413711:	lea    esi,[eax+0x61]
  413714:	imul   eax,DWORD PTR [ecx-0xd16fd3d],0x5d92ca98
  41371e:	sbb    esp,esp
  413720:	push   0xffffffa2
  413722:	jg     0x413762
  413724:	mov    dh,0x91
  413726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413727:	and    dl,0x47
  41372a:	std    
  41372b:	loop   0x4136db
  41372d:	mov    al,0x5d
  41372f:	pop    esp
  413730:	pusha  
  413731:	icebp  
  413732:	fst    QWORD PTR ds:0x2e1568ca
  413738:	gs cmp ebp,ecx
  41373b:	(bad)  
  41373c:	lods   eax,DWORD PTR ds:[esi]
  41373d:	(bad)  
  41373e:	popa   
  41373f:	out    dx,al
  413740:	daa    
  413741:	inc    ecx
  413742:	xchg   esp,eax
  413743:	push   ecx
  413744:	jmp    0xcc79:0xe977d40
  41374b:	mov    ds:0x48eabb45,eax
  413750:	fdivr  DWORD PTR [esi-0x6d]
  413753:	sub    al,0x6a
  413755:	mov    ch,BYTE PTR [ebx]
  413757:	ins    DWORD PTR es:[edi],dx
  413758:	xor    cl,BYTE PTR [eax]
  41375a:	aas    
  41375b:	shl    edx,cl
  41375d:	in     eax,0x7c
  41375f:	imul   esp,DWORD PTR [ebx-0x321ce9e8],0x3c
  413766:	and    edx,ebx
  413768:	fld    TBYTE PTR [esi+0x4d272776]
  41376e:	test   al,0x36
  413770:	jp     0x4137c5
  413772:	dec    esp
  413773:	ss popa 
  413775:	and    cl,dh
  413777:	or     eax,0x2fd12e6f
  41377c:	sbb    DWORD PTR [ecx],0x63
  41377f:	pop    ds
  413780:	fadd   DWORD PTR [eax+0x25bb9642]
  413786:	push   eax
  413787:	lahf   
  413788:	mov    ecx,0x5036192b
  41378d:	(bad)  
  41378e:	(bad)  
  41378f:	push   esp
  413790:	enter  0xe85d,0x18
  413794:	add    ebx,DWORD PTR [edi-0x31557645]
  41379a:	imul   ebx,DWORD PTR [ebx+edi*1-0x303ceab2],0xc63e34a9
  4137a5:	mov    DWORD PTR [ebx+eiz*1+0x9],eax
  4137a9:	pop    esi
  4137aa:	in     eax,dx
  4137ab:	bound  edx,QWORD PTR [edx]
  4137ad:	stos   DWORD PTR es:[edi],eax
  4137ae:	mov    esp,0x3c19fc0e
  4137b3:	stos   DWORD PTR es:[edi],eax
  4137b4:	push   esp
  4137b5:	ret    0x7170
  4137b8:	pusha  
  4137b9:	dec    esi
  4137ba:	rcr    DWORD PTR [edx-0x56],1
  4137bd:	and    DWORD PTR [eax-0x20],0x8a0fd73b
  4137c4:	cmp    ebx,DWORD PTR [ecx+0xe]
  4137c7:	(bad)  
  4137c8:	retf   
  4137c9:	cld    
  4137ca:	aam    0x3a
  4137cc:	rol    ebx,cl
  4137ce:	mov    eax,ds:0xc8c4d86d
  4137d3:	adc    al,0x63
  4137d5:	das    
  4137d6:	push   cs
  4137d7:	sti    
  4137d8:	ja     0x413835
  4137da:	push   ds
  4137db:	repnz cli 
  4137dd:	mov    edi,0x5d79e527
  4137e2:	fwait
  4137e3:	test   edx,ebx
  4137e5:	fstp   QWORD PTR [esi]
  4137e7:	pop    ds
  4137e8:	xchg   ebp,eax
  4137e9:	adc    edi,DWORD PTR [ecx]
  4137eb:	pop    ecx
  4137ec:	icebp  
  4137ed:	inc    ecx
  4137ee:	xor    esi,DWORD PTR [ebx-0x70]
  4137f1:	push   edx
  4137f2:	mov    eax,ds:0x16089fda
  4137f7:	pop    ds
  4137f8:	aas    
  4137f9:	inc    ebx
  4137fa:	(bad)  
  4137fc:	mov    ch,BYTE PTR [edi]
  4137fe:	loop   0x4137a9
  413800:	test   DWORD PTR [ecx],0x3ceeeb06
  413806:	pusha  
  413807:	outs   dx,DWORD PTR ds:[esi]
  413808:	in     al,dx
  413809:	loop   0x413840
  41380b:	or     dl,BYTE PTR ds:0x191c68d
  413811:	xchg   esp,eax
  413812:	test   BYTE PTR [edi],cl
  413814:	pop    edi
  413815:	pop    ss
  413816:	fcmovne st,st(5)
  413818:	mov    bl,0x6b
  41381a:	mov    esp,0x9d61d9c7
  41381f:	fadd   QWORD PTR [esi]
  413821:	pushf  
  413822:	mov    ah,0xff
  413824:	leave  
  413825:	sbb    ah,BYTE PTR [edi+eiz*2+0x40]
  413829:	jp     0x413836
  41382b:	xor    eax,0x82a28abc
  413830:	fisubr WORD PTR [edi]
  413832:	ret    0xf4a2
  413835:	scas   al,BYTE PTR es:[edi]
  413836:	dec    esi
  413837:	and    eax,0x49c13a6
  41383c:	lods   eax,DWORD PTR ds:[esi]
  41383d:	xchg   edx,eax
  41383e:	test   DWORD PTR [edx+0x1a573028],esp
  413844:	sub    DWORD PTR [ecx+0x7e],0x53e613ab
  41384b:	or     edi,DWORD PTR [edx+0xd]
  41384e:	dec    ebx
  41384f:	popf   
  413850:	push   ds
  413851:	sahf   
  413852:	ret    
  413853:	pop    ebp
  413854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413855:	fs push edi
  413857:	pusha  
  413858:	or     DWORD PTR [ecx+0x57],ecx
  41385b:	ror    DWORD PTR [edx-0x1ea7f1e5],cl
  413861:	enter  0x8472,0x7c
  413865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413866:	xchg   edx,eax
  413867:	icebp  
  413868:	pop    es
  413869:	or     esp,DWORD PTR [edi]
  41386b:	sbb    DWORD PTR [eax],0x529ddc82
  413871:	push   ecx
  413872:	xor    esi,DWORD PTR [edi+0x65f5d60b]
  413878:	push   edi
  413879:	xlat   BYTE PTR ds:[ebx]
  41387a:	sub    DWORD PTR [ecx+0x66131e76],eax
  413880:	icebp  
  413881:	stos   BYTE PTR es:[edi],al
  413882:	nop
  413883:	dec    ebx
  413884:	push   esi
  413885:	aas    
  413886:	bound  esi,QWORD PTR [ecx]
  413888:	shr    BYTE PTR [edx],cl
  41388a:	mov    edx,0xfd6ab872
  41388f:	dec    esi
  413890:	pop    ebx
  413891:	in     al,0x1
  413893:	adc    ebx,eax
  413895:	mov    dl,0xe2
  413897:	inc    esi
  413898:	mov    eax,DWORD PTR [edi-0x1e]
  41389b:	mov    esi,esp
  41389d:	pop    ss
  41389e:	xor    eax,0x5e805b86
  4138a3:	lock push cs
  4138a5:	mov    ecx,0xecf45f64
  4138aa:	or     eax,0x6035d59b
  4138af:	or     al,0x44
  4138b1:	outs   dx,BYTE PTR ds:[esi]
  4138b2:	pop    ds
  4138b3:	ss enter 0x58cb,0xf2
  4138b8:	outs   dx,DWORD PTR ds:[esi]
  4138b9:	pop    edi
  4138ba:	arpl   WORD PTR [edi-0x27612300],di
  4138c0:	mov    bl,bl
  4138c2:	mov    edi,0xc3f7bca8
  4138c7:	or     BYTE PTR ds:0xfaccfb64,ah
  4138cd:	push   0x3925d88a
  4138d2:	js     0x413907
  4138d4:	inc    edx
  4138d5:	xor    al,0xbd
  4138d7:	pop    esp
  4138d8:	mov    bl,0x48
  4138da:	push   ds
  4138db:	mov    ah,0xef
  4138dd:	in     al,dx
  4138de:	mov    ?,ebp
  4138e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e1:	fldenv [ecx]
  4138e3:	into   
  4138e4:	inc    ebx
  4138e5:	clc    
  4138e6:	pop    ebx
  4138e7:	cli    
  4138e8:	test   DWORD PTR [edi+ebx*1-0x25],0x97bcf41b
  4138f0:	(bad)  
  4138f1:	cs pop ebp
  4138f3:	pop    ss
  4138f4:	pop    ecx
  4138f5:	mov    bl,0x4f
  4138f7:	jecxz  0x413924
  4138f9:	mov    ebx,0x89377ef6
  4138fe:	mov    DWORD PTR [ecx-0x4],ebp
  413901:	dec    edi
  413902:	mov    ebx,esp
  413904:	das    
  413905:	int3   
  413906:	mov    ds:0x8950880b,eax
  41390b:	scas   eax,DWORD PTR es:[edi]
  41390c:	stc    
  41390d:	adc    eax,0x34320f05
  413912:	into   
  413913:	call   0xe62ae8b3
  413918:	cmp    dl,BYTE PTR [ecx]
  41391a:	ret    0x2788
  41391d:	add    DWORD PTR [edx-0x14828f7],ebx
  413923:	mov    ebp,0xf714949e
  413928:	arpl   WORD PTR [ecx+0x413ab767],di
  41392e:	jl     0x413934
  413930:	pop    ss
  413931:	mov    cl,0xb5
  413933:	push   ecx
  413934:	pop    ebp
  413935:	pop    esi
  413936:	dec    edi
  413937:	xchg   ebx,eax
  413938:	xlat   BYTE PTR ds:[ebx]
  413939:	stos   DWORD PTR es:[edi],eax
  41393a:	mov    eax,ds:0xc161098a
  41393f:	loopne 0x4138c7
  413941:	pop    edx
  413942:	fcomp  QWORD PTR [eax-0x4089d63e]
  413948:	nop
  413949:	push   es
  41394a:	(bad)  [eax+eiz*8]
  41394d:	sub    bh,BYTE PTR [ebp+0x66]
  413950:	mov    al,0xd
  413952:	sub    al,0x75
  413954:	inc    edx
  413955:	icebp  
  413956:	ret    0x972a
  413959:	push   0xd5809fb4
  41395e:	add    ebp,ecx
  413960:	rcr    DWORD PTR [ebx+0x4ec816d],1
  413966:	or     eax,DWORD PTR [esi+0x70]
  413969:	mov    ds:0xba9b7db0,al
  41396e:	push   ss
  41396f:	sub    DWORD PTR [ebx-0x4260fa1e],eax
  413975:	stc    
  413976:	sub    DWORD PTR [esi-0x60],esp
  413979:	inc    ecx
  41397a:	adc    al,0xd8
  41397c:	adc    BYTE PTR [edx+0x191959eb],dl
  413982:	push   edi
  413983:	test   eax,0x6ff35b5c
  413988:	imul   edi,DWORD PTR [edi],0x6d
  41398b:	push   esi
  41398c:	jecxz  0x413934
  41398e:	out    0x40,eax
  413990:	jp     0x4139c7
  413992:	cmp    edx,0x3a
  413995:	outs   dx,DWORD PTR ds:[esi]
  413996:	loope  0x41396c
  413998:	repnz aad 0x66
  41399b:	xchg   DWORD PTR [ebx+eiz*4],esi
  41399e:	push   ecx
  41399f:	sbb    esi,DWORD PTR [ebx-0x7]
  4139a2:	jmp    0x98b7:0x96069130
  4139a9:	xchg   esp,eax
  4139aa:	pushf  
  4139ab:	push   es
  4139ac:	pop    es
  4139ad:	pop    eax
  4139ae:	js     0x413a28
  4139b0:	mov    ch,0x15
  4139b2:	fimul  WORD PTR [ebp+0xb600ab7]
  4139b8:	push   es
  4139b9:	add    dh,BYTE PTR [ebx+edi*4+0x75d25e45]
  4139c0:	imul   ebp,DWORD PTR [ebx-0x21],0x21
  4139c4:	push   es
  4139c5:	dec    eax
  4139c6:	xchg   ebp,eax
  4139c7:	cmp    ebp,DWORD PTR [esp+edx*4]
  4139ca:	jmp    0x413951
  4139cc:	mov    ds:0x53d24876,al
  4139d1:	and    al,0x7d
  4139d3:	mov    ds:0x572d2766,eax
  4139d8:	cmp    eax,0x50802485
  4139dd:	sbb    eax,0xc50cce83
  4139e2:	shr    BYTE PTR [esi],0x0
  4139e5:	and    eax,0x24486eee
  4139ea:	(bad)  
  4139eb:	retf   0xad35
  4139ee:	xor    DWORD PTR [edx],ebp
  4139f0:	add    ebx,DWORD PTR [edx]
  4139f2:	dec    edi
  4139f3:	je     0x4139fd
  4139f5:	inc    edi
  4139f6:	sub    ah,BYTE PTR [eax-0x20]
  4139f9:	dec    eax
  4139fa:	mov    esi,0xd09f0302
  4139ff:	mov    ds:0x62c126dc,al
  413a04:	and    eax,0x96e62e0
  413a09:	and    eax,DWORD PTR [edx]
  413a0b:	xor    esp,esp
  413a0d:	cwde   
  413a0e:	and    DWORD PTR [esi],esp
  413a10:	add    esi,DWORD PTR [ebx-0x57]
  413a13:	dec    esp
  413a14:	jmp    0x9738:0x451ae95
  413a1b:	fimul  DWORD PTR [ecx+edx*4]
  413a1e:	mov    edx,0x8ce1ad79
  413a23:	dec    esp
  413a24:	test   eax,0xba42af22
  413a29:	fs push eax
  413a2b:	dec    edi
  413a2c:	xchg   ebp,eax
  413a2d:	add    ch,cl
  413a2f:	jne    0x4139fb
  413a31:	mov    eax,ds:0xed9bdac7
  413a36:	or     dl,BYTE PTR [esi-0x63495da5]
  413a3c:	or     DWORD PTR [edi],edx
  413a3e:	repnz repnz gs (bad) 
  413a42:	push   edx
  413a43:	aaa    
  413a44:	xlat   BYTE PTR ds:[ebx]
  413a45:	push   ecx
  413a46:	inc    edx
  413a47:	imul   eax,DWORD PTR [eax+0x9],0xffffff94
  413a4b:	fwait
  413a4c:	pop    ecx
  413a4d:	ja     0x413a00
  413a4f:	nop
  413a50:	cmp    DWORD PTR [edx],ebx
  413a52:	aas    
  413a53:	jae    0x4139eb
  413a55:	cmp    al,0xcb
  413a57:	test   eax,0x152fe624
  413a5c:	cld    
  413a5d:	je     0x4139f3
  413a5f:	pop    esp
  413a60:	shl    bl,cl
  413a62:	jb     0x413a0b
  413a64:	add    DWORD PTR [edx+0x5d8f5a5f],ecx
  413a6a:	push   edi
  413a6b:	jmp    0x5fdf2d88
  413a70:	mov    DWORD PTR [edx+esi*4-0x2186ada9],edx
  413a77:	mov    ebx,0xd1d21762
  413a7c:	imul   eax,DWORD PTR [esi],0xfb42fe65
  413a82:	out    0x9c,al
  413a84:	stc    
  413a85:	sub    dh,bh
  413a87:	or     BYTE PTR [edi-0x722c635a],0xa0
  413a8e:	rol    BYTE PTR [esi+0x4a],0x41
  413a92:	daa    
  413a93:	push   edx
  413a94:	cli    
  413a95:	push   ds
  413a96:	mov    bl,0x3e
  413a98:	xor    eax,0xf08435f9
  413a9d:	pusha  
  413a9e:	add    bh,BYTE PTR [ebp+0x23c477dd]
  413aa4:	retf   0x90a
  413aa7:	dec    esp
  413aa8:	xchg   esp,eax
  413aa9:	pop    edx
  413aaa:	daa    
  413aab:	sub    al,0xec
  413aad:	mov    WORD PTR [esi-0x74],ds
  413ab0:	and    bh,0xf4
  413ab3:	sahf   
  413ab4:	adc    eax,0x69374338
  413ab9:	adc    al,0xae
  413abb:	repz mov ecx,0xbc55d3fd
  413ac1:	jmp    0x357ba64
  413ac6:	rol    BYTE PTR ds:0x58f13a1c,cl
  413acc:	mov    ebp,0x645ccc30
  413ad1:	fisub  DWORD PTR [edx+eiz*1]
  413ad4:	daa    
  413ad5:	test   BYTE PTR ds:[ecx],0xb7
  413ad9:	in     eax,0x39
  413adb:	std    
  413adc:	adc    BYTE PTR fs:[eax+ecx*8],bh
  413ae0:	es cwde 
  413ae2:	(bad)  
  413ae3:	mov    ebp,ss
  413ae5:	and    DWORD PTR [ebx-0x7f],0xf7fb5440
  413aec:	dec    ebp
  413aed:	push   esp
  413aee:	mov    ch,al
  413af0:	jge    0x413aaa
  413af2:	xchg   DWORD PTR [ecx],edx
  413af4:	outs   dx,DWORD PTR ds:[esi]
  413af5:	adc    esp,DWORD PTR [eax]
  413af7:	fisubr WORD PTR ds:0xdf552173
  413afd:	retf   0x6241
  413b00:	push   es
  413b01:	fisttp DWORD PTR [edi]
  413b03:	jecxz  0x413acd
  413b05:	shl    DWORD PTR [edi+eax*1-0x3446cfb],1
  413b0c:	mov    ecx,0x6315f9fa
  413b11:	push   ss
  413b12:	cmp    DWORD PTR [eax],esi
  413b14:	adc    DWORD PTR [eax+0x25],edi
  413b17:	mov    eax,0x8e4ed44b
  413b1c:	xor    al,0x53
  413b1e:	test   ch,dh
  413b20:	sub    BYTE PTR ds:0x1015a6d,cl
  413b26:	popf   
  413b27:	outs   dx,DWORD PTR ds:[esi]
  413b28:	jbe    0x413ad6
  413b2a:	xor    DWORD PTR [edx],ecx
  413b2c:	test   eax,0xd962603b
  413b31:	xor    al,0x28
  413b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b34:	xor    BYTE PTR [eax-0x76c4f2df],cl
  413b3a:	or     bh,BYTE PTR [eax]
  413b3c:	or     DWORD PTR [esi],edx
  413b3e:	sbb    al,0x23
  413b40:	js     0x413b3c
  413b42:	mov    bh,0x2a
  413b44:	cwde   
  413b45:	ins    BYTE PTR es:[edi],dx
  413b46:	js     0x413b43
  413b48:	mov    ?,WORD PTR [ebx+0x68f60ae1]
  413b4e:	js     0x413b3c
  413b50:	out    dx,al
  413b51:	dec    ebp
  413b52:	jmp    0x8f7f4df
  413b57:	fcomp  DWORD PTR [ebx-0x31323fc0]
  413b5d:	sahf   
  413b5e:	sbb    DWORD PTR [edx],esi
  413b60:	adc    ecx,DWORD PTR [esi]
  413b62:	popf   
  413b63:	pop    ss
  413b64:	loopne 0x413bc2
  413b66:	jmp    0xae17134c
  413b6b:	test   DWORD PTR [ebx],eax
  413b6d:	leave  
  413b6e:	mov    edx,DWORD PTR [edi+ebp*4+0x8]
  413b72:	fidivr DWORD PTR [edi+0x55]
  413b75:	sti    
  413b76:	pop    esi
  413b77:	or     DWORD PTR [ebp-0x76fe1e68],edi
  413b7d:	add    eax,0xae2a886e
  413b82:	xchg   BYTE PTR [eax+0x2964cbaf],bl
  413b88:	arpl   WORD PTR [ecx+ebp*1],ax
  413b8b:	xchg   esi,eax
  413b8c:	dec    esi
  413b8d:	in     al,0x85
  413b8f:	aad    0x2e
  413b91:	pop    edx
  413b92:	pop    es
  413b93:	jns    0x413bb9
  413b95:	lock jno 0x413bbb
  413b98:	(bad)  
  413b99:	sbb    ecx,DWORD PTR [esi]
  413b9b:	out    dx,al
  413b9c:	stos   BYTE PTR es:[edi],al
  413b9d:	inc    edi
  413b9e:	fisttp QWORD PTR [edi+0x57bfa29]
  413ba4:	mov    ebx,0xc075a2d0
  413ba9:	xor    ecx,esi
  413bab:	daa    
  413bac:	mov    cl,0x73
  413bae:	xchg   ecx,eax
  413baf:	inc    esi
  413bb0:	cli    
  413bb1:	scas   al,BYTE PTR es:[edi]
  413bb2:	or     DWORD PTR [edx],ebp
  413bb4:	push   cs
  413bb5:	or     al,0x95
  413bb7:	es ror ebx,cl
  413bba:	(bad)  
  413bbb:	dec    esp
  413bbc:	popa   
  413bbd:	pop    ds
  413bbe:	leave  
  413bbf:	jg     0x413c17
  413bc1:	xlat   BYTE PTR ds:[bx]
  413bc3:	sahf   
  413bc4:	cwde   
  413bc5:	js     0x413b8e
  413bc7:	xchg   ebx,eax
  413bc8:	mov    ?,WORD PTR [esi-0x4333eb12]
  413bce:	icebp  
  413bcf:	xor    DWORD PTR [ecx],0x2e
  413bd2:	push   edx
  413bd3:	retf   0xee6
  413bd6:	bound  ebp,QWORD PTR [ebp+0x52a1f42f]
  413bdc:	rol    BYTE PTR [ebp+eiz*4-0x4c],1
  413be0:	cmp    BYTE PTR [ecx],bl
  413be2:	and    BYTE PTR ds:0x913d13da,al
  413be8:	and    BYTE PTR [edx],ch
  413bea:	adc    DWORD PTR [edx-0x4e],esi
  413bed:	mov    DWORD PTR [esi],eax
  413bef:	mov    edi,0xf212c340
  413bf4:	les    eax,FWORD PTR [ebp-0x6cb97a7c]
  413bfa:	fwait
  413bfb:	ins    BYTE PTR es:[edi],dx
  413bfc:	jo     0x413b9b
  413bfe:	dec    edi
  413bff:	(bad)  
  413c00:	mov    dh,0x6b
  413c02:	repz aas 
  413c04:	stc    
  413c05:	iret   
  413c06:	inc    edx
  413c07:	xchg   edx,eax
  413c08:	jno    0x413c82
  413c0a:	fnstcw WORD PTR [esp+ebx*8+0x40665243]
  413c11:	jnp    0x413c01
  413c13:	into   
  413c14:	je     0x413b9c
  413c16:	sbb    esi,edx
  413c18:	mov    edx,0x7c0cfe6f
  413c1d:	rol    BYTE PTR [si+0x7],cl
  413c21:	mov    cl,0xe1
  413c23:	(bad)  
  413c24:	retf   0xb960
  413c27:	adc    DWORD PTR [edx-0x40cf847f],ebx
  413c2d:	in     al,dx
  413c2e:	adc    esp,DWORD PTR [esi+0x6789a539]
  413c34:	dec    edi
  413c35:	push   eax
  413c36:	push   ss
  413c37:	test   edx,edx
  413c39:	add    al,0xea
  413c3b:	push   esp
  413c3c:	outs   dx,BYTE PTR ds:[esi]
  413c3d:	out    0xdd,eax
  413c3f:	xchg   ecx,eax
  413c40:	cmp    al,0x84
  413c42:	neg    DWORD PTR [esi+0x24fc364b]
  413c48:	sbb    bh,BYTE PTR [eax+0x5a6517e4]
  413c4e:	pop    esi
  413c4f:	ficomp WORD PTR [edi]
  413c51:	popf   
  413c52:	sub    ah,BYTE PTR [edi]
  413c54:	add    edi,eax
  413c56:	jle    0x413c25
  413c58:	sbb    ch,BYTE PTR [edx+0x7d]
  413c5b:	xor    al,0x5b
  413c5d:	xor    al,BYTE PTR [ebp-0x72b7c8ae]
  413c63:	mov    al,ds:0x9324951d
  413c68:	in     al,dx
  413c69:	mov    dl,0xa3
  413c6b:	push   eax
  413c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c6d:	mov    ds:0x59c9a636,al
  413c72:	mov    eax,0xb7cf9170
  413c77:	aaa    
  413c78:	fdivr  st(7),st
  413c7a:	pop    eax
  413c7b:	jl     0x413cfc
  413c7d:	dec    ebx
  413c7e:	fdivr  st,st(6)
  413c80:	mov    edx,0xb4519fdb
  413c85:	or     BYTE PTR [eax+0x7e],bl
  413c88:	push   cs
  413c89:	xchg   esi,eax
  413c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8b:	xor    dh,BYTE PTR [ebx-0x27c82f6e]
  413c91:	or     BYTE PTR [edx],cl
  413c93:	gs mov esp,0xd5b4c2ec
  413c99:	push   esi
  413c9a:	inc    edx
  413c9b:	loop   0x413c43
  413c9d:	bound  ebp,QWORD PTR [ebp+0xf9942fb]
  413ca3:	ss mov cl,0xa1
  413ca6:	add    DWORD PTR [edi+0x5a77b004],edx
  413cac:	sbb    edx,DWORD PTR ds:0x73ef8490
  413cb2:	call   0xd28b7a45
  413cb7:	fstp   QWORD PTR [edx+0x498d5588]
  413cbd:	stos   DWORD PTR es:[edi],eax
  413cbe:	aad    0xbe
  413cc0:	add    al,0x59
  413cc2:	pop    ss
  413cc3:	fisttp DWORD PTR [ecx]
  413cc5:	retf   
  413cc6:	xchg   BYTE PTR [esi+0x6d04e82a],bl
  413ccc:	ror    BYTE PTR [edx+0x61919f3c],1
  413cd2:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413cd4:	lea    ecx,[eax-0x6a]
  413cd7:	add    cl,0x30
  413cda:	ss leave 
  413cdc:	jns    0x413cde
  413cde:	out    0x9e,al
  413ce0:	dec    edx
  413ce1:	add    BYTE PTR [esi],0xdd
  413ce4:	std    
  413ce5:	test   DWORD PTR [edi+0x58],0x2f8ac8f2
  413cec:	(bad)
  413cef:	mov    eax,0x71431546
  413cf4:	mov    ah,0xdc
  413cf6:	div    ecx
  413cf8:	(bad)  
  413cfa:	mov    al,0x17
  413cfc:	add    ecx,DWORD PTR [ecx+edi*4-0x2a7142b7]
  413d03:	popa   
  413d04:	mov    ds:0x2f7ffbe9,al
  413d09:	sbb    al,0x7e
  413d0b:	jne    0x413d74
  413d0d:	jl     0x413d18
  413d0f:	mov    edi,0x627ad28c
  413d14:	adc    edi,edi
  413d16:	repnz fs daa 
  413d19:	leave  
  413d1a:	sub    eax,0x944d850e
  413d1f:	pop    ecx
  413d20:	in     eax,0x88
  413d22:	std    
  413d23:	mov    dl,0x12
  413d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d26:	push   es
  413d27:	(bad)  
  413d28:	faddp  st(7),st
  413d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2b:	fisttp DWORD PTR [esi+eiz*4+0x78]
  413d2f:	fisttp WORD PTR [eax]
  413d31:	jg     0x413cf0
  413d33:	xchg   edx,eax
  413d34:	sub    DWORD PTR [edx+ebp*2],edx
  413d37:	fidivr WORD PTR [ebp-0x2]
  413d3a:	or     bl,bh
  413d3c:	dec    ecx
  413d3d:	mov    eax,0x318bbdea
  413d42:	js     0x413da1
  413d44:	aad    0xcd
  413d46:	std    
  413d47:	gs mov ecx,0x6eced77f
  413d4d:	mov    bh,0x8f
  413d4f:	les    eax,FWORD PTR [ecx]
  413d51:	xchg   esi,eax
  413d52:	outs   dx,DWORD PTR ds:[esi]
  413d53:	cmp    dh,bl
  413d55:	adc    DWORD PTR [eax],eax
  413d57:	aad    0x83
  413d59:	aam    0xc7
  413d5b:	sub    cl,BYTE PTR [esi-0x48adff89]
  413d61:	mov    edi,0x9e9a838
  413d66:	mov    al,ds:0x5608e607
  413d6b:	mov    dl,0x2
  413d6d:	and    al,0x59
  413d6f:	inc    ecx
  413d70:	mov    ebx,0x4caf1c8c
  413d75:	sub    DWORD PTR [edx-0x2868c231],eax
  413d7b:	mov    BYTE PTR ds:0xb649311e,bh
  413d81:	xor    DWORD PTR [ebx-0x5b],eax
  413d84:	adc    DWORD PTR [eiz*8-0x6ac1a6a8],esi
  413d8b:	lods   al,BYTE PTR ds:[esi]
  413d8c:	xchg   esi,eax
  413d8d:	xchg   edx,eax
  413d8e:	jmp    0x413d61
  413d90:	xor    al,0xdf
  413d92:	adc    BYTE PTR [edi+0x762f9ac7],al
  413d98:	mov    esi,0xc22d6939
  413d9d:	lock adc esi,edx
  413da0:	nop
  413da1:	adc    eax,0x85a0a944
  413da6:	pop    esp
  413da7:	aad    0xd5
  413da9:	fmul   QWORD PTR [esi-0x1642bb7b]
  413daf:	loop   0x413da2
  413db1:	jecxz  0x413d91
  413db3:	bound  edx,QWORD PTR [ebx+ebx*4+0x2b227288]
  413dba:	jmp    0xd964:0x9a9f6096
  413dc1:	sar    DWORD PTR [eax-0x49],cl
  413dc4:	dec    esp
  413dc5:	mov    esp,0xbe4442af
  413dca:	fild   DWORD PTR [ecx]
  413dcc:	mov    ch,0xf5
  413dce:	mov    BYTE PTR [edi-0x43a42f1f],ch
  413dd4:	mov    esi,0xbd1e6497
  413dd9:	je     0x413e3c
  413ddb:	ret    
  413ddc:	aaa    
  413ddd:	je     0x413dd9
  413ddf:	cmc    
  413de0:	lds    eax,FWORD PTR [edi-0x3]
  413de3:	ficom  WORD PTR [esi+0x57a52ab0]
  413de9:	addr16 out dx,al
  413deb:	jb     0x413e30
  413ded:	push   ecx
  413dee:	or     DWORD PTR ds:0x6e9b96d5,edi
  413df4:	jle    0x413e35
  413df6:	std    
  413df7:	jg     0x413dcf
  413df9:	pop    ds
  413dfa:	pop    edx
  413dfb:	shr    BYTE PTR [esi],0x7d
  413dfe:	jle    0x413df2
  413e00:	cwde   
  413e01:	push   cs
  413e02:	or     esp,edi
  413e04:	addr16 in eax,dx
  413e06:	loopne 0x413d92
  413e08:	inc    ecx
  413e09:	adc    dl,BYTE PTR [edx+0x477a3170]
  413e0f:	add    bh,BYTE PTR [edi]
  413e11:	or     al,0x8d
  413e13:	ins    DWORD PTR es:[edi],dx
  413e14:	dec    esi
  413e15:	push   ds
  413e16:	loop   0x413dd7
  413e18:	shr    DWORD PTR ds:0x7c4afc67,1
  413e1e:	mov    edi,0x3d3ee576
  413e23:	mov    cl,0x28
  413e25:	sti    
  413e26:	stos   DWORD PTR es:[edi],eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	or     al,0xa0
  413e2a:	not    ebx
  413e2c:	mov    cl,0xbe
  413e2e:	and    eax,0x6b4d0f91
  413e33:	lahf   
  413e34:	sbb    BYTE PTR [edx-0x1c9334e8],ch
  413e3a:	mov    ebx,0xc704db2d
  413e3f:	test   DWORD PTR [ebx+ecx*8-0x2f],0x556bbd68
  413e47:	xor    BYTE PTR [eax+0x17],cl
  413e4a:	inc    edi
  413e4b:	(bad)  
  413e4c:	(bad)  
  413e4e:	cld    
  413e4f:	sub    esi,DWORD PTR [eax+0x10]
  413e52:	mov    cs:0x8cebd3fe,eax
  413e58:	pop    ds
  413e59:	cs cmp bl,0x57
  413e5d:	push   cs
  413e5e:	pop    ss
  413e5f:	push   0xffffffc3
  413e61:	pop    esp
  413e62:	inc    ecx
  413e63:	popa   
  413e64:	int    0x5a
  413e66:	jo     0x413ec4
  413e68:	push   0xffffffbd
  413e6a:	xchg   DWORD PTR [ecx+0x35],ecx
  413e6d:	mov    BYTE PTR [edx+0x28],dl
  413e70:	add    eax,DWORD PTR [edi-0x4672c74f]
  413e76:	rcl    dh,1
  413e78:	fs push ecx
  413e7a:	xor    ebx,eax
  413e7c:	or     DWORD PTR ds:0x429028,0xea4
  413e86:	sub    edx,ebx
  413e88:	sub    edx,esi
  413e8a:	adc    ebx,0x6a6a
  413e90:	xor    edx,eax
  413e92:	mov    DWORD PTR ds:0x42a008,0x12
  413e9c:	cmp    DWORD PTR ds:0x42a008,0x0
  413ea3:	je     0x413eed
  413ea9:	cmp    DWORD PTR ds:0x42a008,0x7
  413eb0:	jne    0x413ec1
  413eb6:	push   0x45cf
  413ebb:	call   DWORD PTR ds:0x42ed5b
  413ec1:	cmp    DWORD PTR ds:0x42a008,0x8
  413ec8:	jne    0x413edb
  413ece:	mov    ebx,DWORD PTR ds:0x42a008
  413ed4:	dec    ebx
  413ed5:	mov    DWORD PTR ds:0x42a008,ebx
  413edb:	mov    ebx,DWORD PTR ds:0x42a008
  413ee1:	dec    ebx
  413ee2:	mov    DWORD PTR ds:0x42a008,ebx
  413ee8:	jmp    0x413e9c
  413eed:	mov    DWORD PTR [ebp+0x8],edx
  413ef0:	and    DWORD PTR ds:0x42c01c,edx
  413ef6:	mov    edx,DWORD PTR [ebp+0x8]
  413ef9:	mov    ebx,DWORD PTR [ebp-0x58]
  413efc:	mov    DWORD PTR ds:0x42a00c,0x1eac
  413f06:	add    edx,0x5708f8
  413f0c:	and    DWORD PTR ds:0x42900c,0x77ed
  413f16:	imul   edx,ebx
  413f19:	mov    DWORD PTR [ebp-0x58],edx
  413f1c:	mov    edx,DWORD PTR [ebp+0x8]
  413f1f:	mov    ebx,DWORD PTR [ebp-0x54]
  413f22:	add    edx,0x64f8da
  413f28:	sub    DWORD PTR ds:0x42a010,0x32d9
  413f32:	or     edx,ebx
  413f34:	mov    DWORD PTR [ebp-0x54],edx
  413f37:	mov    ebx,DWORD PTR ds:0x424cd9
  413f3d:	mov    ebx,DWORD PTR [ebx]
  413f3f:	and    DWORD PTR ds:0x429000,ebx
  413f45:	mov    edx,DWORD PTR [ebp+0x8]
  413f48:	movzx  ebx,WORD PTR ds:0x42d018
  413f4f:	sub    DWORD PTR ds:0x42a008,ebx
  413f55:	mov    ebx,DWORD PTR [ebp-0x50]
  413f58:	and    DWORD PTR ds:0x42b010,0x42c010
  413f62:	add    edx,ecx
  413f64:	xor    edx,ebx
  413f66:	sbb    DWORD PTR ds:0x42c008,ecx
  413f6c:	mov    DWORD PTR [ebp-0x50],edx
  413f6f:	and    DWORD PTR ds:0x429028,edi
  413f75:	mov    edx,DWORD PTR [ebp+0x8]
  413f78:	mov    ebx,DWORD PTR [ebp-0x4c]
  413f7b:	add    DWORD PTR ds:0x42a010,0x42d01c
  413f85:	add    edx,edi
  413f87:	and    edx,ebx
  413f89:	mov    DWORD PTR [ebp-0x4c],edx
  413f8c:	mov    edx,DWORD PTR [ebp+0x8]
  413f8f:	and    DWORD PTR ds:0x42c000,0x0
  413f99:	jmp    0x413fab
  413f9e:	mov    ebx,DWORD PTR ds:0x42c000
  413fa4:	inc    ebx
  413fa5:	mov    DWORD PTR ds:0x42c000,ebx
  413fab:	cmp    DWORD PTR ds:0x42c000,0x10
  413fb2:	jae    0x413ffa
  413fb8:	cmp    DWORD PTR ds:0x42c000,0x9
  413fbf:	jne    0x413fd5
  413fc5:	push   0x42c008
  413fca:	push   0x5bd0
  413fcf:	call   DWORD PTR ds:0x42ed5f
  413fd5:	cmp    DWORD PTR ds:0x42c000,0x8
  413fdc:	jne    0x413fef
  413fe2:	mov    ebx,DWORD PTR ds:0x42c000
  413fe8:	inc    ebx
  413fe9:	mov    DWORD PTR ds:0x42c000,ebx
  413fef:	jmp    0x413f9e
  413ff4:	sub    DWORD PTR ds:0x42b004,ecx
  413ffa:	mov    ebx,DWORD PTR [ebp-0x48]
  413ffd:	lea    edx,[ebx+edx*1+0x241fc1f]
  414004:	sub    DWORD PTR ds:0x42b000,edx
  41400a:	mov    DWORD PTR [ebp-0x48],edx
  41400d:	sbb    DWORD PTR ds:0x429000,0x7854
  414017:	mov    edx,DWORD PTR [ebp+0x8]
  41401a:	inc    DWORD PTR ds:0x42d010
  414020:	mov    ebx,0xfa5e15e2
  414025:	add    DWORD PTR ds:0x42c008,0x42b018
  41402f:	sub    ebx,edx
  414031:	adc    DWORD PTR ds:0x42a000,ecx
  414037:	add    ebx,DWORD PTR [ebp-0x44]
  41403a:	sub    DWORD PTR ds:0x42c014,0x2136
  414044:	mov    DWORD PTR [ebp-0x44],ebx
  414047:	mov    edx,DWORD PTR [ebp+0x8]
  41404a:	or     DWORD PTR ds:0x429014,0x183b
  414054:	xor    edx,eax
  414056:	add    DWORD PTR ds:0x429020,0x42d004
  414060:	add    edx,esi
  414062:	mov    DWORD PTR ds:0x42d004,0x5303
  41406c:	jne    0x411ae9
  414072:	mov    DWORD PTR ds:0x42c008,0x42b5
  41407c:	jmp    0x41f655
  414081:	and    DWORD PTR ds:0x42a000,0x0
  41408b:	jmp    0x41409f
  414090:	xor    ebx,ebx
  414092:	add    ebx,DWORD PTR ds:0x42a000
  414098:	inc    ebx
  414099:	mov    DWORD PTR ds:0x42a000,ebx
  41409f:	cmp    DWORD PTR ds:0x42a000,0x14
  4140a6:	jae    0x414104
  4140ac:	cmp    DWORD PTR ds:0x42a000,0x5
  4140b3:	jne    0x4140d7
  4140b9:	push   0x42e134
  4140be:	push   0x41d9
  4140c3:	push   0x49c5
  4140c8:	push   DWORD PTR [ebp-0x14]
  4140cb:	push   DWORD PTR [ebp-0x1c]
  4140ce:	push   DWORD PTR [ebp-0xc]
  4140d1:	call   DWORD PTR ds:0x42ed67
  4140d7:	cmp    DWORD PTR ds:0x42a000,0x4
  4140de:	jne    0x4140f1
  4140e4:	mov    ebx,DWORD PTR ds:0x42a000
  4140ea:	inc    ebx
  4140eb:	mov    DWORD PTR ds:0x42a000,ebx
  4140f1:	jmp    0x414090
  4140f6:	mov    edx,DWORD PTR ds:0x424bf0
  4140fc:	mov    edx,DWORD PTR [edx]
  4140fe:	add    DWORD PTR ds:0x42a01c,edx
  414104:	mov    edx,DWORD PTR [ebp-0x14]
  414107:	and    DWORD PTR ds:0x42d008,0x0
  414111:	jmp    0x414123
  414116:	mov    ebx,DWORD PTR ds:0x42d008
  41411c:	inc    ebx
  41411d:	mov    DWORD PTR ds:0x42d008,ebx
  414123:	cmp    DWORD PTR ds:0x42d008,0x17
  41412a:	jae    0x414148
  414130:	cmp    DWORD PTR ds:0x42d008,0x27
  414137:	jne    0x414143
  41413d:	call   DWORD PTR ds:0x42ed6b
  414143:	jmp    0x414116
  414148:	mov    ebx,DWORD PTR [ebp-0x8]
  41414b:	sub    DWORD PTR ds:0x42d010,0x429028
  414155:	xor    edx,eax
  414157:	xor    ebx,eax
  414159:	sub    edx,ebx
  41415b:	sub    edx,esi
  41415d:	xor    edx,eax
  41415f:	mov    DWORD PTR [ebp-0x14],edx
  414162:	mov    edx,DWORD PTR [ebp-0x10]
  414165:	mov    DWORD PTR ds:0x42b000,0x55d1
  41416f:	jmp    0x4164f8
  414174:	pop    ecx
  414175:	loope  0x414113
  414177:	mov    dl,0x84
  414179:	jnp    0x414176
  41417b:	ror    eax,1
  41417d:	scas   eax,DWORD PTR es:[edi]
  41417e:	pop    ebx
  41417f:	cmc    
  414180:	imul   esi,DWORD PTR ds:0x73a5a85a,0x7a
  414187:	jp     0x41418f
  414189:	pop    edi
  41418a:	jp     0x414206
  41418c:	jo     0x41415c
  41418e:	fcmovb st,st(3)
  414190:	or     eax,DWORD PTR [ecx-0x76]
  414193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414194:	sub    ebx,0x63ef7058
  41419a:	pop    ss
  41419b:	cmp    eax,0xee3ae756
  4141a0:	mov    ds,WORD PTR [ebx]
  4141a2:	jg     0x414136
  4141a4:	outs   dx,DWORD PTR ds:[esi]
  4141a5:	in     al,dx
  4141a6:	push   0x4d18cb92
  4141ab:	or     BYTE PTR [esi],cl
  4141ad:	aad    0x19
  4141af:	mov    ds:0x1fa0dc2a,eax
  4141b4:	xchg   edi,eax
  4141b5:	inc    eax
  4141b6:	test   BYTE PTR [eax+0x4b],ch
  4141b9:	jo     0x41419d
  4141bb:	mov    ah,BYTE PTR [ebx+0x78]
  4141be:	pop    esp
  4141bf:	cli    
  4141c0:	ds cli 
  4141c2:	popf   
  4141c3:	hlt    
  4141c4:	adc    DWORD PTR [ebx],ebp
  4141c6:	ret    0x95c1
  4141c9:	and    ah,BYTE PTR [ebp+0x66ff6e5d]
  4141cf:	inc    edx
  4141d0:	inc    eax
  4141d1:	in     eax,0xf5
  4141d3:	data16 fld TBYTE PTR [edi+0x48b35ea1]
  4141da:	sti    
  4141db:	enter  0xe929,0x6c
  4141df:	test   al,0xca
  4141e1:	ret    0x96dd
  4141e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e5:	icebp  
  4141e6:	inc    ecx
  4141e7:	cmp    edi,ebx
  4141e9:	loop   0x414265
  4141eb:	cmc    
  4141ec:	lds    eax,FWORD PTR [edi]
  4141ee:	mov    dh,0x93
  4141f0:	(bad)  
  4141f1:	popf   
  4141f2:	je     0x41425d
  4141f4:	xor    DWORD PTR [ebx],ecx
  4141f6:	jns    0x414225
  4141f8:	jnp    0x41417a
  4141fa:	jne    0x414201
  4141fc:	push   0xffffffe3
  4141fe:	je     0x414190
  414200:	push   eax
  414201:	retf   
  414202:	test   cl,al
  414204:	inc    edi
  414205:	jno    0x414193
  414207:	mov    cl,0x64
  414209:	or     ch,BYTE PTR [ebx+ebp*2+0x55]
  41420d:	and    edx,edx
  41420f:	sub    DWORD PTR [esi+0x453c9d39],ecx
  414215:	mov    bl,0x8
  414217:	lea    eax,[esi]
  414219:	mov    cl,0xac
  41421b:	stos   DWORD PTR es:[edi],eax
  41421c:	and    ebp,DWORD PTR [eax+0x5]
  41421f:	mov    ah,0xc0
  414221:	iret   
  414222:	(bad)  
  414224:	cmp    al,0xfb
  414226:	fstp   DWORD PTR [edi]
  414228:	mov    ecx,0xa9015a71
  41422d:	jnp    0x4141ba
  41422f:	pop    ds
  414230:	sbb    DWORD PTR [ecx+eiz*8],0x87140a81
  414237:	mov    esp,0x624d58a9
  41423c:	push   eax
  41423d:	ja     0x414245
  41423f:	lock adc al,0xe0
  414242:	scas   eax,DWORD PTR es:[edi]
  414243:	call   0xabed:0xcb144f8
  41424a:	icebp  
  41424b:	das    
  41424c:	adc    ecx,DWORD PTR [eax]
  41424e:	jbe    0x414226
  414250:	pop    ds
  414251:	test   eax,0x75585069
  414256:	in     eax,dx
  414257:	es iret 
  414259:	fdivr  st,st(0)
  41425b:	mov    edx,ebp
  41425d:	pop    ebp
  41425e:	mov    edi,0xf4f8d893
  414263:	ss sar bh,1
  414266:	jb     0x414251
  414268:	adc    al,BYTE PTR [edi+0x56]
  41426b:	jnp    0x4142e9
  41426d:	jo     0x414245
  41426f:	js     0x414282
  414271:	stc    
  414272:	push   edi
  414273:	xor    ecx,DWORD PTR [edx-0x6bdc651f]
  414279:	dec    ebx
  41427a:	jo     0x414289
  41427c:	mov    ds,WORD PTR [edx+eiz*2]
  41427f:	arpl   WORD PTR [ebx],bp
  414281:	mov    cl,0x36
  414283:	xchg   edi,eax
  414284:	leave  
  414285:	sub    eax,0x263ff6e7
  41428a:	clc    
  41428b:	sub    BYTE PTR [ebx-0x4007b588],0x86
  414292:	pusha  
  414293:	repz imul eax,DWORD PTR [esi],0x32058b9f
  41429a:	and    al,0x11
  41429c:	fild   QWORD PTR [eax-0x77]
  41429f:	inc    esp
  4142a0:	leave  
  4142a1:	inc    ecx
  4142a2:	jl     0x4142e0
  4142a4:	sub    BYTE PTR ds:0x3f8862a6,bh
  4142aa:	loopne 0x41425c
  4142ac:	xchg   esp,eax
  4142ad:	add    al,0x28
  4142af:	xchg   edi,eax
  4142b0:	add    bh,BYTE PTR [edx+edx*8-0x331c7498]
  4142b7:	fnstenv [ecx]
  4142b9:	lock punpckldq mm5,DWORD PTR [edx-0x68fbe4a1]
  4142c1:	mov    cl,0x7
  4142c3:	(bad)  
  4142c4:	jae    0x41433c
  4142c6:	ins    BYTE PTR es:[edi],dx
  4142c7:	pusha  
  4142c8:	mov    bl,0xd7
  4142ca:	mov    dh,0x77
  4142cc:	adc    DWORD PTR cs:[edx],ecx
  4142cf:	out    dx,al
  4142d0:	adc    dh,0x97
  4142d3:	push   ebp
  4142d4:	stos   DWORD PTR es:[edi],eax
  4142d5:	pop    edx
  4142d6:	scas   eax,DWORD PTR es:[edi]
  4142d7:	mov    eax,0x8c3bca63
  4142dc:	push   0xc4756fe2
  4142e1:	add    BYTE PTR [ebp+edx*4-0x5e7f7678],bl
  4142e8:	pop    edx
  4142e9:	mov    esi,gs
  4142eb:	fs popa 
  4142ed:	outs   dx,BYTE PTR ds:[esi]
  4142ee:	hlt    
  4142ef:	mov    ebp,DWORD PTR [eax-0x65656a17]
  4142f5:	mov    ss,WORD PTR [edx+0x1a]
  4142f8:	xchg   ebp,eax
  4142f9:	cmp    dl,bh
  4142fb:	fdivr  DWORD PTR [eax+0xe]
  4142fe:	mov    ch,0xf4
  414300:	dec    esp
  414301:	ror    BYTE PTR [esi+0x4a78af93],1
  414307:	pop    es
  414308:	cmp    esi,DWORD PTR [edi-0x3]
  41430b:	in     al,0x86
  41430d:	shl    DWORD PTR [edi],cl
  41430f:	dec    eax
  414310:	es inc eax
  414312:	jg     0x414378
  414314:	pop    es
  414315:	mov    cl,0xb4
  414317:	and    dl,cl
  414319:	psadbw mm3,QWORD PTR [esi-0x70]
  41431d:	cli    
  41431e:	jmp    0xda72:0xf133e757
  414325:	lock les esp,FWORD PTR [edx-0x42]
  414329:	mov    bh,0xe
  41432b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41432c:	add    dh,al
  41432e:	and    al,0xed
  414330:	jbe    0x4143a6
  414332:	shl    esi,1
  414334:	mov    al,ds:0xcc13e5fb
  414339:	sub    eax,0xd08ff98a
  41433e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41433f:	idiv   DWORD PTR [esi-0x55]
  414342:	enter  0x8890,0xdb
  414346:	adc    al,0x7d
  414348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414349:	cdq    
  41434a:	cmp    cl,BYTE PTR [ebx-0x3a]
  41434d:	cmp    al,BYTE PTR [eax+0x54]
  414350:	lods   eax,DWORD PTR ds:[esi]
  414351:	dec    ebx
  414352:	jb     0x41437b
  414354:	xlat   BYTE PTR ds:[ebx]
  414355:	out    dx,al
  414356:	sbb    BYTE PTR [ebp-0x23],bh
  414359:	lock icebp 
  41435b:	in     eax,0xaa
  41435d:	inc    esi
  41435e:	jb     0x4143a7
  414360:	loopne 0x4143d8
  414362:	fcmove st,st(5)
  414364:	sbb    eax,ecx
  414366:	cmp    esi,DWORD PTR [edx-0x52a7ee41]
  41436c:	hlt    
  41436d:	push   0x7c
  41436f:	mov    bh,0x98
  414371:	sub    al,0x27
  414373:	das    
  414374:	push   es
  414375:	out    dx,al
  414376:	mov    ds:0x5884fea3,eax
  41437b:	dec    edi
  41437c:	pop    ss
  41437d:	jmp    DWORD PTR [eax]
  41437f:	xchg   edi,eax
  414380:	test   al,0xaa
  414382:	mov    BYTE PTR [ecx-0x78],cl
  414385:	gs ja  0x414397
  414388:	sub    esi,DWORD PTR [edi-0x13]
  41438b:	inc    esp
  41438c:	sub    dh,BYTE PTR [edi-0x15557aeb]
  414392:	daa    
  414393:	sub    BYTE PTR ds:[eax-0x5b],al
  414397:	lahf   
  414398:	inc    ebx
  414399:	mov    ah,0x29
  41439b:	es (bad) 
  41439d:	jle    0x4143dc
  41439f:	(bad)  
  4143a0:	sbb    ebp,DWORD PTR [edi+0x6ea1fb77]
  4143a6:	call   0x24ddba71
  4143ab:	inc    ebx
  4143ac:	push   0x7a
  4143ae:	jb     0x41438b
  4143b0:	and    ch,BYTE PTR [ebx-0x9]
  4143b3:	sub    DWORD PTR [edx],ebp
  4143b5:	dec    eax
  4143b6:	mov    bh,0x10
  4143b8:	sar    BYTE PTR [edi],cl
  4143ba:	add    DWORD PTR [ebp+0xc],0xffffff90
  4143be:	cld    
  4143bf:	xor    DWORD PTR [esi+edx*2-0x52],ebp
  4143c3:	out    0xd2,al
  4143c5:	pushf  
  4143c6:	ss and dl,al
  4143c9:	add    BYTE PTR [ecx],ch
  4143cb:	sub    eax,0xbf4eb0e7
  4143d0:	inc    esp
  4143d1:	repz adc ebp,DWORD PTR [esi]
  4143d4:	out    0x99,eax
  4143d6:	popa   
  4143d7:	out    dx,eax
  4143d8:	pop    eax
  4143d9:	fucomp st(7)
  4143db:	xchg   DWORD PTR [edi-0x16],ecx
  4143de:	dec    edx
  4143df:	jno    0x414435
  4143e1:	xchg   ebx,eax
  4143e2:	rcl    DWORD PTR [edi],cl
  4143e4:	stos   DWORD PTR es:[edi],eax
  4143e5:	inc    cl
  4143e7:	scas   al,BYTE PTR es:[edi]
  4143e8:	inc    edi
  4143e9:	dec    ecx
  4143ea:	push   ss
  4143eb:	inc    ebp
  4143ec:	xchg   esi,eax
  4143ed:	push   cs
  4143ee:	or     BYTE PTR [ecx+0x34],dl
  4143f1:	call   0x28e9:0xe89310f7
  4143f8:	add    eax,0x93f54b23
  4143fd:	sbb    BYTE PTR [ecx-0x5ec0daaf],dh
  414403:	sub    BYTE PTR [edi+eax*1-0x609d3ef8],cl
  41440a:	lods   eax,DWORD PTR ds:[esi]
  41440b:	xchg   BYTE PTR [eax],ah
  41440d:	je     0x414449
  41440f:	loop   0x414464
  414411:	push   ss
  414412:	pop    eax
  414413:	cdq    
  414414:	pop    esp
  414415:	mov    eax,0xb330df56
  41441a:	fdivr  QWORD PTR [ebp+0x479d8fa9]
  414420:	inc    ebx
  414421:	push   cs
  414422:	jne    0x414417
  414424:	loop   0x4143f1
  414426:	out    0x71,al
  414428:	sbb    eax,0xf4d7874f
  41442d:	lds    ebp,FWORD PTR [eax+0x36]
  414430:	jmp    0x2158:0x60ba4e4b
  414437:	dec    esp
  414438:	outs   dx,BYTE PTR ds:[esi]
  414439:	aam    0x20
  41443b:	stc    
  41443c:	imul   ecx,DWORD PTR [ebp-0x54],0x1d
  414440:	sbb    eax,0xf431758a
  414445:	xchg   esp,eax
  414446:	cmp    al,0xf4
  414448:	jmp    DWORD PTR [ebx-0x65834550]
  41444e:	inc    ebp
  41444f:	fisubr DWORD PTR [edi-0x60]
  414452:	call   0x1165cd1d
  414457:	popa   
  414458:	icebp  
  414459:	xchg   esp,eax
  41445a:	mov    dh,al
  41445c:	or     ebp,edi
  41445e:	mov    dl,0xa5
  414460:	out    dx,eax
  414461:	aas    
  414462:	jne    0x414412
  414464:	inc    esi
  414465:	sub    DWORD PTR [ebx],ebx
  414467:	je     0x414458
  414469:	ins    BYTE PTR es:[edi],dx
  41446a:	inc    edi
  41446b:	ds div ebp
  41446e:	sti    
  41446f:	pop    edx
  414470:	mov    cl,cl
  414472:	iret   
  414473:	aaa    
  414474:	mov    ebp,0xf4b41da9
  414479:	xchg   BYTE PTR [esi-0x4d],dh
  41447c:	xchg   edi,eax
  41447d:	jge    0x4144c0
  41447f:	loopne 0x414425
  414481:	repz rol DWORD PTR [esi+0x1a],cl
  414485:	jnp    0x4144c9
  414487:	repz sbb al,0x68
  41448a:	imul   esp,esi,0x1
  41448d:	(bad)  
  41448e:	retf   
  41448f:	jne    0x4144a6
  414491:	jp     0x4144ee
  414493:	push   ebx
  414494:	mov    edi,0xf45fe62
  414499:	push   ebp
  41449a:	pop    ss
  41449b:	retf   
  41449c:	xchg   esp,eax
  41449d:	loopne 0x414455
  41449f:	sti    
  4144a0:	add    al,0x47
  4144a2:	mov    dh,0x87
  4144a4:	(bad)  
  4144a5:	and    eax,0x94c982c8
  4144aa:	(bad)  [edi+0x23]
  4144ad:	scas   eax,DWORD PTR es:[edi]
  4144ae:	into   
  4144af:	pusha  
  4144b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b1:	dec    edx
  4144b2:	sbb    al,0x48
  4144b4:	(bad)  
  4144b5:	push   ecx
  4144b6:	mov    ds:0xd6fe656b,al
  4144bb:	mov    ds:0x65978b9e,al
  4144c0:	out    0x2e,eax
  4144c2:	push   ebx
  4144c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144c4:	outs   dx,BYTE PTR ds:[esi]
  4144c5:	xor    bh,BYTE PTR [edi-0x58]
  4144c8:	leave  
  4144c9:	ffree  st(1)
  4144cb:	mov    ebx,0x6bd03859
  4144d0:	jb     0x4144ee
  4144d2:	mov    ebp,0x969d0875
  4144d7:	or     eax,0x769f285a
  4144dc:	push   0xf081cfdd
  4144e1:	mov    eax,0x9d77c681
  4144e6:	dec    esi
  4144e7:	push   esi
  4144e8:	jmp    0x9b52:0x7ef41d7d
  4144ef:	pusha  
  4144f0:	and    DWORD PTR [edx-0x21],edi
  4144f3:	call   0xe8f9:0x222f9319
  4144fa:	in     eax,dx
  4144fb:	fdiv   DWORD PTR [eax-0x20]
  4144fe:	pop    ebp
  4144ff:	xchg   BYTE PTR [eax],dh
  414501:	fsub   DWORD PTR [ebx-0x7c]
  414504:	pop    ecx
  414505:	cwde   
  414506:	call   0xdfb599b5
  41450b:	jo     0x41456b
  41450d:	and    BYTE PTR [eax+eiz*4-0x1f91c114],bl
  414514:	cmp    eax,0x73e466f9
  414519:	cli    
  41451a:	pop    ebx
  41451b:	pop    esi
  41451c:	addr16 jns 0x4144c6
  41451f:	inc    ebp
  414520:	xor    al,0xc8
  414522:	jns    0x4144d3
  414524:	push   0x27
  414526:	mov    ch,0x41
  414528:	mov    ecx,0x82ff576
  41452d:	out    dx,eax
  41452e:	and    DWORD PTR [edx],0x79
  414531:	rol    DWORD PTR [eax-0x7c],0xda
  414535:	inc    ecx
  414536:	cmc    
  414537:	fldcw  WORD PTR [edi+ebp*2+0x2b]
  41453b:	aaa    
  41453c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41453d:	clc    
  41453e:	and    al,0x78
  414540:	dec    ebx
  414541:	(bad)  
  414542:	push   cs
  414543:	cld    
  414544:	jg     0x4145bc
  414546:	repnz fwait
  414548:	pop    es
  414549:	jmp    0x5446:0xc52d6415
  414550:	jmp    0x5d1a7589
  414555:	repnz xor DWORD PTR [edi+0x64],ebx
  414559:	mov    cs,WORD PTR [esi]
  41455b:	ss xchg edx,eax
  41455d:	(bad)  
  41455e:	in     al,0x45
  414560:	mov    al,0xd1
  414562:	(bad)  
  414563:	lahf   
  414564:	test   DWORD PTR [edi+eiz*4-0x9],eax
  414568:	sbb    DWORD PTR ds:0x3862f4e8,0xffffffaf
  41456f:	or     al,0x29
  414571:	hlt    
  414572:	int    0xb6
  414574:	nop
  414575:	mov    edx,0xd84b5e31
  41457a:	cli    
  41457b:	inc    ecx
  41457c:	xor    ah,BYTE PTR [ebp+0x30e30771]
  414582:	neg    DWORD PTR [eax-0x22]
  414585:	inc    esp
  414586:	add    al,0x15
  414588:	loope  0x41456e
  41458a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41458b:	inc    esp
  41458c:	push   esp
  41458d:	inc    esp
  41458e:	xchg   edi,eax
  41458f:	pop    ds
  414590:	sbb    eax,0x78fb19ed
  414595:	push   0xffffff97
  414597:	dec    ebx
  414598:	xor    al,0xff
  41459a:	sbb    BYTE PTR [edx],ah
  41459c:	test   eax,0x55a203b4
  4145a1:	fs loope 0x414612
  4145a4:	add    BYTE PTR [edx-0x134e8c15],ah
  4145aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ab:	xor    BYTE PTR [esp+esi*1+0x7713882f],cl
  4145b2:	mov    cl,0xb5
  4145b4:	mov    ebx,0xe68f2c5c
  4145b9:	pop    edx
  4145ba:	aad    0x62
  4145bc:	bnd jnp 0x414613
  4145bf:	imul   ecx,ebp,0x9a1315cd
  4145c5:	sti    
  4145c6:	jo     0x4145d5
  4145c8:	in     al,dx
  4145c9:	enter  0x839e,0xab
  4145cd:	pop    esp
  4145ce:	push   cs
  4145cf:	push   es
  4145d0:	jb     0x4145dc
  4145d2:	cmp    al,0x12
  4145d4:	pop    ss
  4145d5:	das    
  4145d6:	lods   al,BYTE PTR ds:[esi]
  4145d7:	out    dx,eax
  4145d8:	fcmovu st,st(6)
  4145da:	fidiv  WORD PTR [edx+0x4f]
  4145dd:	mov    edi,es
  4145df:	sub    esp,edx
  4145e1:	adc    eax,0xc5850b85
  4145e6:	(bad)  
  4145e7:	or     ah,BYTE PTR fs:[esp+edx*1+0x7b]
  4145ec:	ror    al,cl
  4145ee:	xor    edx,DWORD PTR [ecx-0x3b]
  4145f1:	xlat   BYTE PTR ds:[ebx]
  4145f3:	xchg   esi,eax
  4145f4:	scas   eax,DWORD PTR es:[edi]
  4145f5:	(bad)  
  4145f7:	stc    
  4145f8:	pusha  
  4145f9:	jae    0x4145b1
  4145fb:	xchg   ebp,eax
  4145fc:	outs   dx,BYTE PTR ds:[esi]
  4145fd:	arpl   sp,si
  4145ff:	push   edx
  414600:	call   0x86a6:0x46fed978
  414607:	scas   al,BYTE PTR es:[edi]
  414608:	or     ecx,eax
  41460a:	push   ebp
  41460b:	fwait
  41460c:	popa   
  41460d:	jge    0x414617
  41460f:	shr    BYTE PTR [edx-0x66570040],1
  414615:	jbe    0x41466d
  414617:	js     0x414629
  414619:	push   ss
  41461a:	dec    edi
  41461b:	cli    
  41461c:	cld    
  41461d:	loopne 0x4145ef
  41461f:	or     al,0x34
  414621:	mov    ecx,0xdc555af9
  414626:	and    BYTE PTR [ebx],al
  414628:	or     dl,BYTE PTR [edx-0x6b7fa61b]
  41462e:	std    
  41462f:	xchg   DWORD PTR [ebx+0x7b50a4ef],ecx
  414635:	jae    0x4146a1
  414637:	mov    eax,ds:0xe0f66898
  41463c:	retf   0x6d2a
  41463f:	adc    al,0xb5
  414641:	inc    esi
  414642:	xchg   edx,eax
  414643:	inc    edx
  414644:	fild   WORD PTR [edi+eax*4-0x5c]
  414648:	xor    eax,0x845076a3
  41464d:	stc    
  41464e:	(bad)  
  41464f:	sti    
  414650:	call   0x5d471040
  414655:	push   DWORD PTR [ebx-0x4c]
  414658:	ficomp DWORD PTR [edx-0x2168a2ad]
  41465e:	sar    BYTE PTR [eax+0x37],cl
  414661:	mov    cl,0xd
  414663:	xchg   esi,eax
  414664:	sbb    DWORD PTR [ecx-0x13],eax
  414667:	mov    ah,0x6f
  414669:	in     al,dx
  41466a:	div    dl
  41466c:	inc    ecx
  41466d:	push   cs
  41466e:	jbe    0x414619
  414670:	mov    eax,ds:0x475bdb08
  414675:	pop    ecx
  414676:	clc    
  414677:	push   ss
  414678:	xor    eax,0x26f4794f
  41467d:	jnp    0x41461c
  41467f:	pop    ecx
  414680:	hlt    
  414681:	neg    BYTE PTR [edx-0x62]
  414684:	add    BYTE PTR [ebp-0x4],0x5d
  414688:	xor    eax,DWORD PTR [ebx-0x66]
  41468b:	ins    BYTE PTR es:[edi],dx
  41468c:	push   esp
  41468d:	add    eax,0x1f38f4f0
  414692:	push   esp
  414693:	outs   dx,DWORD PTR ds:[esi]
  414694:	and    DWORD PTR ss:[edi-0x30],ebp
  414698:	mov    ch,0x59
  41469a:	in     al,dx
  41469b:	in     al,0x9f
  41469d:	imul   edi,DWORD PTR [ebx+0x53],0xb78f754b
  4146a4:	mov    cl,0xa6
  4146a6:	out    dx,eax
  4146a7:	xchg   esi,ebx
  4146a9:	mov    ah,0x9d
  4146ab:	gs stos BYTE PTR es:[edi],al
  4146ad:	test   DWORD PTR [ecx+0x74],ecx
  4146b0:	pushw  0x2f
  4146b3:	retf   0x8e7e
  4146b6:	sub    edx,eax
  4146b8:	adc    al,0x36
  4146ba:	mov    ecx,0x7def7ceb
  4146bf:	ins    BYTE PTR es:[edi],dx
  4146c0:	pop    esi
  4146c1:	in     eax,0x7e
  4146c3:	test   eax,0xd7a4c9a0
  4146c8:	int3   
  4146c9:	les    eax,FWORD PTR [ebx]
  4146cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146cc:	sbb    BYTE PTR [edx-0x78],dh
  4146cf:	or     eax,0x23f56321
  4146d4:	dec    esi
  4146d5:	fdiv   DWORD PTR [esi-0x33]
  4146d8:	aaa    
  4146d9:	ds dec edx
  4146db:	lds    esp,FWORD PTR [ecx+0xa]
  4146de:	adc    ebp,DWORD PTR [esi]
  4146e0:	rol    DWORD PTR [esi-0x497d65e0],0x11
  4146e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e9:	jbe    0x414708
  4146eb:	inc    eax
  4146ec:	xchg   ecx,eax
  4146ed:	mov    bl,0xb9
  4146ef:	fbld   TBYTE PTR [edi]
  4146f1:	add    ebp,edx
  4146f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f4:	lods   eax,DWORD PTR ds:[esi]
  4146f5:	syscall 
  4146f7:	ret    0xc752
  4146fa:	or     edi,esi
  4146fc:	sbb    BYTE PTR [esi+0x3c4285c6],bl
  414702:	mov    esi,edx
  414704:	ficomp DWORD PTR [edi+0x26d7c004]
  41470a:	mov    WORD PTR [ebx+0x47],ss
  41470d:	push   es
  41470e:	xchg   esp,eax
  41470f:	outs   dx,DWORD PTR ds:[esi]
  414710:	jmp    0x925027e4
  414715:	push   esp
  414716:	lods   al,BYTE PTR ds:[esi]
  414717:	ret    0x3854
  41471a:	mov    dh,0x2b
  41471c:	sbb    al,0x40
  41471e:	icebp  
  41471f:	sub    al,0x34
  414721:	ss mov al,0xa7
  414724:	aam    0x25
  414726:	inc    eax
  414727:	stos   DWORD PTR es:[edi],eax
  414728:	addr16 pop ecx
  41472a:	xor    eax,0x741cba84
  41472f:	jno    0x414706
  414731:	adc    bh,bl
  414733:	iret   
  414734:	imul   edx,DWORD PTR [edi+0x29a8972f],0xaf73d940
  41473e:	or     ebp,DWORD PTR [edx]
  414740:	test   DWORD PTR [edi],0x7fd554f
  414746:	ins    BYTE PTR es:[edi],dx
  414747:	jg     0x4146fa
  414749:	data16 lahf 
  41474b:	mov    fs,WORD PTR [eax+0xf79f238]
  414751:	mov    dh,0xbc
  414753:	jmp    0x80aa3711
  414758:	ins    BYTE PTR es:[edi],dx
  414759:	jo     0x414777
  41475b:	dec    ebp
  41475c:	ds pop esi
  41475e:	outs   dx,BYTE PTR ds:[esi]
  41475f:	(bad)  
  414760:	push   ebx
  414761:	aad    0x19
  414763:	xchg   edi,eax
  414764:	(bad)  
  414765:	and    bh,BYTE PTR [esi]
  414767:	outs   dx,DWORD PTR ds:[esi]
  414768:	and    cl,0x2d
  41476b:	push   es
  41476c:	clc    
  41476d:	call   0x5e8c:0xac59a6a0
  414774:	stos   DWORD PTR es:[edi],eax
  414775:	mov    ds:0xa5b1625,al
  41477a:	jecxz  0x41472b
  41477c:	pop    ebp
  41477d:	cmp    al,0x57
  41477f:	imul   esi,DWORD PTR [ebp-0x71],0xffffffc3
  414783:	push   edi
  414784:	push   esp
  414785:	xchg   bl,dh
  414787:	inc    eax
  414788:	adc    eax,0x8e9c6a46
  41478d:	lods   al,BYTE PTR ds:[esi]
  41478e:	pop    ecx
  41478f:	jbe    0x41479e
  414791:	mov    ds:0x78d07029,eax
  414796:	cmp    ch,BYTE PTR [ecx+0x557597a8]
  41479c:	retf   0xde29
  41479f:	push   es
  4147a0:	sti    
  4147a1:	int3   
  4147a2:	ins    BYTE PTR es:[edi],dx
  4147a3:	and    al,0x83
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sub    DWORD PTR [esi],esp
  4147a8:	mov    al,0x38
  4147aa:	pop    ss
  4147ab:	mov    bl,0x99
  4147ad:	sub    edi,DWORD PTR [ebx+0x4db0c3e9]
  4147b3:	test   BYTE PTR [ecx+0x3108a935],ch
  4147b9:	(bad)  
  4147bb:	or     ch,BYTE PTR [edi+0x3c4e3794]
  4147c1:	test   al,0x17
  4147c3:	xchg   ecx,eax
  4147c4:	mov    WORD PTR [ecx+0x79fa6a6c],?
  4147ca:	test   DWORD PTR [ecx+0x31355565],esp
  4147d0:	xchg   esi,eax
  4147d1:	jb     0x4147d4
  4147d3:	jp     0x4147e4
  4147d5:	loope  0x4147d3
  4147d7:	lds    esp,FWORD PTR [esi-0x7f]
  4147da:	mov    ecx,0xda9671ba
  4147df:	inc    esi
  4147e0:	jle    0x41476c
  4147e2:	pop    ebx
  4147e3:	sub    ebp,edx
  4147e5:	or     al,0x4e
  4147e7:	pop    edi
  4147e8:	dec    esp
  4147e9:	je     0x4147ec
  4147eb:	sbb    eax,0x61343dad
  4147f0:	mov    dl,0x6a
  4147f2:	push   ecx
  4147f3:	xor    DWORD PTR [ebp-0x1c],0x79965b63
  4147fa:	bound  esi,QWORD PTR [ebx+0x240e392d]
  414800:	(bad)  
  414801:	mov    dh,0xc2
  414803:	xor    ah,BYTE PTR [ebx]
  414805:	cli    
  414806:	push   ebp
  414807:	hlt    
  414808:	pop    ebx
  414809:	(bad)  
  41480a:	and    al,0x1b
  41480c:	add    eax,0x8598563
  414811:	sbb    esp,DWORD PTR ds:0x932ed795
  414817:	nop
  414818:	jae    0x414829
  41481a:	inc    ebx
  41481b:	fimul  WORD PTR [eax-0x55d54b28]
  414821:	mov    BYTE PTR [ebx-0x2a],bh
  414824:	sbb    BYTE PTR [si],0x13
  414828:	fld    DWORD PTR [ebx+0x27090331]
  41482e:	xchg   ecx,eax
  41482f:	cmp    eax,0x5d904a9d
  414834:	dec    eax
  414835:	std    
  414836:	or     eax,0xea62083f
  41483b:	add    eax,0x4ad2499a
  414840:	push   edi
  414841:	push   edx
  414842:	clc    
  414843:	or     DWORD PTR [eax-0xa08462a],0xffffffbb
  41484a:	and    edx,DWORD PTR [edi+ebx*8]
  41484d:	daa    
  41484e:	or     ebp,DWORD PTR [ebp+0x26]
  414851:	dec    ebp
  414852:	loop   0x41482e
  414854:	ss or  bl,ah
  414857:	addr16 loopne 0x414825
  41485a:	inc    ebx
  41485b:	jae    0x4147e5
  41485d:	test   BYTE PTR [ecx+0x424b6428],al
  414863:	es mov dl,0x35
  414866:	add    edx,edx
  414868:	xor    al,0x3
  41486a:	add    cl,BYTE PTR [ecx]
  41486c:	iret   
  41486d:	adc    BYTE PTR es:[ecx-0x5ce21779],bl
  414874:	lock pop ds
  414876:	mov    bl,0x17
  414878:	dec    ebp
  414879:	in     al,0x22
  41487b:	clc    
  41487c:	mov    eax,0xaa48a587
  414881:	lods   al,BYTE PTR ds:[esi]
  414882:	jmp    0x8d2cd83
  414887:	jge    0x41486e
  414889:	pusha  
  41488a:	inc    edx
  41488b:	pop    ds
  41488c:	dec    ebx
  41488d:	cdq    
  41488e:	push   esp
  41488f:	retf   
  414890:	lahf   
  414891:	jbe    0x414822
  414893:	je     0x414861
  414895:	push   edx
  414896:	loope  0x414822
  414898:	and    eax,0x841d7c0e
  41489d:	bound  ecx,QWORD PTR [esi-0x15]
  4148a0:	stos   BYTE PTR es:[edi],al
  4148a1:	(bad)  
  4148a2:	in     eax,dx
  4148a3:	or     DWORD PTR [esi+0x34],ebp
  4148a6:	pop    esi
  4148a7:	or     BYTE PTR cs:[ebx-0x209ca7ee],bh
  4148ae:	jbe    0x41489c
  4148b0:	mov    ds:0x6effd8b2,eax
  4148b5:	inc    ebp
  4148b6:	faddp  st(0),st
  4148b8:	rcr    ecx,1
  4148ba:	push   es
  4148bb:	cmp    DWORD PTR [ebp+0x77],0xe470875e
  4148c2:	xor    DWORD PTR [eax+0x7dd4685b],eax
  4148c8:	mov    dl,0xe8
  4148ca:	scas   eax,DWORD PTR es:[edi]
  4148cb:	push   ss
  4148cc:	xchg   esi,eax
  4148cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ce:	out    0xf8,eax
  4148d0:	or     BYTE PTR [ecx-0x4c],0x88
  4148d4:	bound  edi,QWORD PTR [ecx-0x37]
  4148d7:	fldenv [ecx+esi*2-0x14c3c41e]
  4148de:	jae    0x4148a1
  4148e0:	out    0x45,al
  4148e2:	push   cs
  4148e3:	fld    st(6)
  4148e5:	nop
  4148e6:	fdiv   QWORD PTR [edx]
  4148e8:	cdq    
  4148e9:	test   al,al
  4148eb:	sub    BYTE PTR [edx+0x45f2b981],0x43
  4148f2:	pop    ds
  4148f3:	sbb    al,0x7
  4148f5:	jns    0x41490e
  4148f7:	mov    esi,0xceab210b
  4148fc:	call   DWORD PTR [ecx]
  4148fe:	mov    WORD PTR [eax+0x2afc35f4],?
  414904:	imul   ecx,DWORD PTR [edi-0x7aaa23b3],0x34
  41490b:	pop    esp
  41490c:	in     al,dx
  41490d:	leave  
  41490e:	pop    edx
  41490f:	stc    
  414910:	jb     0x41496a
  414912:	jae    0x4148c1
  414914:	iret   
  414915:	test   al,0xe1
  414917:	dec    ebx
  414918:	loop   0x41491a
  41491a:	stos   DWORD PTR es:[edi],eax
  41491b:	lea    ebp,[eax+0x74490741]
  414921:	fs jb  0x414963
  414924:	and    bl,BYTE PTR [edx+0x42]
  414927:	mov    dh,0x99
  414929:	xchg   ecx,eax
  41492a:	loop   0x41498b
  41492c:	push   0xffffffee
  41492e:	jl     0x414913
  414930:	jo     0x4148d3
  414932:	shl    esp,cl
  414934:	add    al,0x5c
  414936:	clc    
  414937:	or     BYTE PTR ds:0xdc3bae00,dh
  41493d:	scas   al,BYTE PTR es:[edi]
  41493e:	xor    dl,BYTE PTR [eax-0x580aa5c1]
  414944:	and    DWORD PTR [ebx+0x1f],edx
  414947:	mov    al,0x9
  414949:	aaa    
  41494a:	nop    DWORD PTR [ebx+0x4fe35aeb]
  414951:	fucom  st(3)
  414953:	inc    edi
  414954:	push   ebp
  414955:	pop    ss
  414956:	shl    BYTE PTR [ecx-0x4efb3691],1
  41495c:	shr    DWORD PTR ds:0xbb9f897d,1
  414962:	adc    ah,BYTE PTR [ecx]
  414964:	pop    ebx
  414965:	cdq    
  414966:	cs push eax
  414968:	add    al,bh
  41496a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41496b:	jne    0x4148fb
  41496d:	ficom  WORD PTR [eax+ebp*2]
  414970:	sahf   
  414971:	jne    0x41499b
  414973:	inc    edi
  414974:	xchg   esp,eax
  414975:	and    ebx,DWORD PTR [edx-0x688f41cf]
  41497b:	inc    ecx
  41497c:	mov    esp,0x292bf1ab
  414981:	xor    al,0xe9
  414983:	shl    ebx,1
  414985:	iret   
  414986:	in     al,0xd6
  414988:	jbe    0x4149fa
  41498a:	adc    DWORD PTR [edi+0x12b76000],esp
  414990:	popa   
  414991:	leave  
  414992:	mov    bl,0xca
  414994:	jle    0x41498b
  414996:	popf   
  414997:	dec    ebx
  414998:	scas   al,BYTE PTR es:[edi]
  414999:	out    dx,al
  41499a:	not    DWORD PTR [ebx]
  41499c:	mov    ds:0xf64fbafe,eax
  4149a1:	and    DWORD PTR [ebp+ebp*1-0x77],edx
  4149a5:	dec    ecx
  4149a6:	push   ss
  4149a7:	xor    eax,0xc9c5c16
  4149ac:	mov    dh,0xee
  4149ae:	jp     0x414a27
  4149b0:	jle    0x41497f
  4149b2:	in     eax,dx
  4149b3:	iret   
  4149b4:	iret   
  4149b5:	stos   BYTE PTR es:[edi],al
  4149b6:	add    ah,BYTE PTR [esi+ecx*2-0x3d]
  4149ba:	dec    ebp
  4149bb:	test   eax,0x185781b9
  4149c0:	repnz push ebp
  4149c2:	or     eax,0xa479cf3a
  4149c7:	mov    al,0xa4
  4149c9:	in     eax,dx
  4149ca:	jecxz  0x414960
  4149cc:	bound  esi,QWORD PTR [eax+0x23]
  4149cf:	aam    0x9a
  4149d1:	jne    0x4149dc
  4149d3:	mov    ch,BYTE PTR [esi]
  4149d5:	out    dx,eax
  4149d6:	int3   
  4149d7:	or     BYTE PTR [edx+0x55],0xcd
  4149db:	(bad)  
  4149dc:	or     DWORD PTR [ecx+0x42],0xc689534e
  4149e3:	add    al,0x1d
  4149e5:	inc    ebp
  4149e6:	mov    ds:0x1d54e5dd,eax
  4149eb:	mov    cl,BYTE PTR [ecx+0x21]
  4149ee:	add    bl,BYTE PTR ss:[ebx+0x29]
  4149f2:	sub    eax,0x4cd578a9
  4149f7:	mov    edi,0xf3d21150
  4149fc:	adc    ebx,DWORD PTR [ecx-0x717dfd6f]
  414a02:	push   ss
  414a03:	xchg   edi,eax
  414a04:	jnp    0x4149f9
  414a06:	popa   
  414a07:	stos   DWORD PTR es:[edi],eax
  414a08:	or     al,BYTE PTR [eax-0x1e]
  414a0b:	cmp    DWORD PTR [eax],edx
  414a0d:	retf   0xac89
  414a10:	lods   al,BYTE PTR ds:[esi]
  414a11:	aam    0xdb
  414a13:	ds pop ebp
  414a15:	cdq    
  414a16:	jl     0x41499e
  414a18:	call   0xd5919ae3
  414a1d:	or     al,0x4
  414a1f:	adc    esp,DWORD PTR [eax]
  414a21:	jge    0x4149e6
  414a23:	pop    es
  414a24:	mov    ecx,0xf8c6ca86
  414a29:	xchg   edi,eax
  414a2a:	fimul  DWORD PTR [ebp+0x42f31163]
  414a30:	and    bh,BYTE PTR [edx-0x4]
  414a33:	test   eax,0x978cc11c
  414a38:	iret   
  414a39:	popa   
  414a3a:	jmp    0x414a5f
  414a3c:	sahf   
  414a3d:	dec    esi
  414a3e:	es scas eax,DWORD PTR es:[edi]
  414a40:	inc    esp
  414a41:	or     bh,BYTE PTR [ebx]
  414a43:	pop    edi
  414a44:	add    eax,0x13c6150e
  414a49:	mov    dl,0x56
  414a4b:	enter  0x15fd,0x3e
  414a4f:	pusha  
  414a50:	retf   0xbde0
  414a53:	inc    ebx
  414a54:	cld    
  414a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a56:	cs scas eax,DWORD PTR es:[edi]
  414a58:	iret   
  414a59:	sub    ch,BYTE PTR [ebx+esi*2]
  414a5c:	dec    eax
  414a5d:	pop    ds
  414a5e:	sub    ah,0x5c
  414a61:	mov    edx,0x4ac8c1e5
  414a66:	mov    ds:0x283ab60f,eax
  414a6b:	pop    eax
  414a6c:	sub    al,0x64
  414a6e:	std    
  414a6f:	outs   dx,DWORD PTR ds:[esi]
  414a70:	int    0xf6
  414a72:	in     eax,dx
  414a73:	jmp    0xf662:0x7515011
  414a7a:	sti    
  414a7b:	lods   eax,DWORD PTR ds:[esi]
  414a7c:	out    0xdb,al
  414a7e:	mov    ch,0xc3
  414a80:	aaa    
  414a81:	xchg   esp,eax
  414a82:	or     eax,0xf4cc9933
  414a87:	jbe    0x414a80
  414a89:	pop    ds
  414a8a:	sub    edx,ecx
  414a8c:	fld    QWORD PTR [eax+ebx*2-0x6a]
  414a90:	xor    bh,BYTE PTR [edx]
  414a92:	enter  0x4073,0x10
  414a96:	pop    esp
  414a97:	add    al,0x3c
  414a99:	add    al,0x8a
  414a9b:	xchg   bl,al
  414a9d:	pushf  
  414a9e:	sbb    ch,bl
  414aa0:	ffree  st(3)
  414aa2:	test   eax,0x2327649b
  414aa7:	repnz add edi,ebx
  414aaa:	retf   0x8acd
  414aad:	xchg   edx,eax
  414aae:	mov    al,ds:0x26264bba
  414ab3:	pop    ebp
  414ab4:	mov    bh,0x8
  414ab6:	xlat   BYTE PTR ds:[ebx]
  414ab7:	xor    ch,BYTE PTR [esi+0x53ef4f2b]
  414abd:	(bad)  
  414abe:	sahf   
  414abf:	push   ds
  414ac0:	icebp  
  414ac1:	jo     0x414a45
  414ac3:	and    DWORD PTR [edx],edi
  414ac5:	call   0xf25:0xede1f8a7
  414acc:	ds clc 
  414ace:	popf   
  414acf:	inc    edx
  414ad0:	and    bh,bl
  414ad2:	cwde   
  414ad3:	cli    
  414ad4:	call   0x543f9806
  414ad9:	call   0xb8b22d91
  414ade:	loopne 0x414af5
  414ae0:	xor    BYTE PTR [ebx],dl
  414ae2:	lods   eax,DWORD PTR ds:[esi]
  414ae3:	sub    BYTE PTR [ebx+ebx*8-0x7b45b77b],0x64
  414aeb:	mov    ecx,DWORD PTR [edi-0x319e841d]
  414af1:	popa   
  414af2:	out    dx,eax
  414af3:	pop    edi
  414af4:	mov    esi,0xdaa956da
  414af9:	cmp    DWORD PTR ds:0x1654a5a5,0x4435c793
  414b03:	ins    BYTE PTR es:[edi],dx
  414b04:	test   edi,0xf82e9003
  414b0a:	add    al,0xa0
  414b0c:	xor    eax,0x41ef711a
  414b11:	jg     0x414a95
  414b13:	icebp  
  414b14:	call   0xeb96:0xe4bdd4c
  414b1b:	lock scas al,BYTE PTR es:[edi]
  414b1d:	arpl   bx,sp
  414b1f:	(bad)  
  414b20:	xor    ebp,DWORD PTR [ebp-0x1b88ba67]
  414b26:	scas   eax,DWORD PTR es:[edi]
  414b27:	adc    bl,BYTE PTR [eax+0x5ee4a01c]
  414b2d:	dec    eax
  414b2e:	cli    
  414b2f:	push   edi
  414b30:	test   eax,0xb5af1937
  414b35:	push   eax
  414b36:	jne    0x414b09
  414b38:	mov    esi,0xb3ab61f
  414b3d:	std    
  414b3e:	dec    ebp
  414b3f:	xchg   esp,eax
  414b40:	add    BYTE PTR [esi-0x4a],bl
  414b43:	xor    eax,0x7d595036
  414b48:	cmp    BYTE PTR [esi-0x8],cl
  414b4b:	std    
  414b4c:	fwait
  414b4d:	js     0x414b37
  414b4f:	dec    ecx
  414b50:	add    al,0x93
  414b52:	loop   0x414af3
  414b54:	mov    eax,0x6a3d1ac
  414b59:	fucomi st,st(0)
  414b5b:	iret   
  414b5c:	dec    eax
  414b5d:	xor    dl,BYTE PTR [ecx+ebx*4]
  414b60:	inc    ecx
  414b61:	fld    QWORD PTR [edi]
  414b63:	xchg   ecx,eax
  414b64:	icebp  
  414b65:	sti    
  414b66:	xchg   esp,eax
  414b67:	mov    ds,WORD PTR [edi+0x60ef46c7]
  414b6d:	and    al,0x2b
  414b6f:	gs daa 
  414b71:	add    al,0x1c
  414b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b74:	cwde   
  414b75:	adc    esp,DWORD PTR [esi-0x23]
  414b78:	aam    0x31
  414b7a:	or     edi,edx
  414b7c:	mov    ds:0x36be5da1,eax
  414b81:	fistp  QWORD PTR [ebx+0x7c61604]
  414b87:	mov    esp,0x1f6efd27
  414b8c:	into   
  414b8d:	imul   ebx,edx,0xffffffd5
  414b90:	xchg   edi,eax
  414b91:	iret   
  414b92:	mov    ebx,0x81af048
  414b97:	xchg   esp,eax
  414b98:	mov    ecx,0xe42a54c3
  414b9d:	jae    0x414b85
  414b9f:	pop    ecx
  414ba0:	scas   eax,DWORD PTR es:[edi]
  414ba1:	inc    ebp
  414ba2:	mov    edi,0xf864f69
  414ba7:	push   ds
  414ba8:	test   edx,edi
  414baa:	mov    ah,0x4c
  414bac:	fdiv   QWORD PTR [ecx-0x4a1aaf28]
  414bb2:	ret    
  414bb3:	cmp    eax,0x66dac50c
  414bb8:	sbb    al,0x0
  414bba:	inc    edx
  414bbb:	test   al,0x11
  414bbd:	stc    
  414bbe:	rcl    DWORD PTR [edx+0x2e],1
  414bc1:	loop   0x414c0c
  414bc3:	bsr    esp,DWORD PTR [ebx]
  414bc6:	pop    ebx
  414bc7:	(bad)  
  414bc8:	shr    BYTE PTR [ecx],1
  414bca:	call   FWORD PTR ds:0x6edc9e80
  414bd0:	(bad)  [edx]
  414bd2:	(bad)  
  414bd3:	push   ss
  414bd4:	mov    ds:0x200ecdea,al
  414bd9:	jmp    0xf604834f
  414bde:	hlt    
  414bdf:	aam    0xac
  414be1:	fmul   QWORD PTR [ecx+ebx*2-0x46]
  414be5:	test   eax,0x24bbafda
  414bea:	add    bl,cl
  414bec:	jo     0x414b9d
  414bee:	pop    edi
  414bef:	jbe    0x414c38
  414bf1:	mov    ecx,0x593c276c
  414bf6:	jge    0x414c08
  414bf8:	inc    eax
  414bf9:	jp     0x414bf9
  414bfb:	and    bl,dl
  414bfd:	arpl   WORD PTR [esi],sp
  414bff:	idiv   ch
  414c01:	icebp  
  414c02:	mov    ds:0x1d9b9c93,eax
  414c07:	mov    ds:0x3d00eb5,al
  414c0c:	sub    esp,ecx
  414c0e:	cmp    dl,BYTE PTR [eax]
  414c10:	in     eax,dx
  414c11:	aas    
  414c12:	cmc    
  414c13:	xchg   ecx,eax
  414c14:	xchg   edx,eax
  414c15:	jmp    0x414c1a
  414c17:	cs in  eax,0x50
  414c1a:	call   0x8d70:0x76a7641c
  414c21:	rol    DWORD PTR [edx],1
  414c23:	jmp    0xf18e:0xc1cdfd3e
  414c2a:	iret   
  414c2b:	imul   esp,DWORD PTR [ecx-0x334ae4b8],0xffffffc2
  414c32:	nop
  414c33:	xor    BYTE PTR [edi],dh
  414c35:	bound  eax,QWORD PTR [ebx]
  414c37:	mov    ah,0x56
  414c39:	mov    ds:0x465009fa,al
  414c3e:	mov    WORD PTR [eax-0x6687eea8],gs
  414c44:	test   DWORD PTR [eax],0x346bcd31
  414c4a:	cmp    eax,0x196f7377
  414c4f:	mov    BYTE PTR [eax+0x52],bl
  414c52:	and    BYTE PTR [esi-0x1b],dh
  414c55:	jb     0x414c82
  414c57:	sar    DWORD PTR [eax],0x8d
  414c5a:	or     BYTE PTR [edi+0x802e312],dl
  414c60:	pop    ebp
  414c61:	in     al,0xe6
  414c63:	scas   al,BYTE PTR es:[edi]
  414c64:	and    esi,esp
  414c66:	les    edi,FWORD PTR [esi]
  414c68:	int3   
  414c69:	call   0x560d:0x687ead8a
  414c70:	xchg   BYTE PTR [edx+0x32e9be7b],dl
  414c76:	pop    ecx
  414c77:	sar    dl,1
  414c79:	push   ss
  414c7a:	jbe    0x414c90
  414c7c:	push   0x76
  414c7e:	aaa    
  414c7f:	test   BYTE PTR [edx],ah
  414c81:	adc    al,0xd0
  414c83:	jo     0x414c4d
  414c85:	push   edx
  414c86:	mov    DWORD PTR [esi],edi
  414c88:	adc    BYTE PTR [edi],dl
  414c8a:	xchg   edi,eax
  414c8b:	aas    
  414c8c:	ror    dh,1
  414c8e:	push   0x4c590827
  414c93:	and    al,0x65
  414c95:	pop    esp
  414c96:	aad    0x32
  414c98:	imul   BYTE PTR [edx]
  414c9a:	scas   eax,DWORD PTR es:[edi]
  414c9b:	mov    dh,0x62
  414c9d:	outs   dx,DWORD PTR ds:[esi]
  414c9e:	fiadd  WORD PTR [eax-0x5a1935b0]
  414ca4:	xchg   edi,eax
  414ca5:	sub    dl,ch
  414ca7:	sbb    BYTE PTR [edi+0x30],dl
  414caa:	xor    al,0xe6
  414cac:	ds cdq 
  414cae:	pop    es
  414caf:	jb     0x414c7b
  414cb1:	xor    ecx,DWORD PTR [ebp-0x1ba64f1c]
  414cb7:	push   edi
  414cb8:	mov    al,0xd5
  414cba:	push   ds
  414cbb:	xor    BYTE PTR [esp+edi*2+0x2a139840],ah
  414cc2:	and    BYTE PTR ds:0x524c1f81,dh
  414cc8:	scas   al,BYTE PTR es:[edi]
  414cc9:	test   DWORD PTR [ebx+0x4ea2a510],esi
  414ccf:	xchg   esp,eax
  414cd0:	dec    esi
  414cd1:	cli    
  414cd2:	or     al,0x46
  414cd4:	pop    edx
  414cd5:	in     eax,dx
  414cd6:	call   0x97c6:0x82c46a08
  414cdd:	in     eax,0xec
  414cdf:	sbb    dl,BYTE PTR [ebx+eax*1+0x78]
  414ce3:	lahf   
  414ce4:	push   esp
  414ce5:	seta   BYTE PTR [edx+0x9fca24a]
  414cec:	sub    BYTE PTR [edx+0x68f5bf14],dh
  414cf2:	xor    DWORD PTR [ebx],edx
  414cf4:	xor    eax,0x78095375
  414cf9:	mov    esp,0xcab3a03d
  414cfe:	mov    edi,0xe7858d04
  414d03:	jne    0x414d3a
  414d05:	call   0x95d3eeeb
  414d0a:	dec    ebp
  414d0b:	dec    ebx
  414d0c:	mov    eax,ds:0x9c9e0707
  414d11:	pop    ds
  414d12:	push   0x7b
  414d14:	and    BYTE PTR [edx-0x1],bh
  414d17:	adc    esi,DWORD PTR [edi+0x5c]
  414d1a:	repz call 0x5488:0x6f02e585
  414d22:	cmp    DWORD PTR [ebp+0x48],ebx
  414d25:	sub    dl,BYTE PTR [ebp+0x3bc8cff0]
  414d2b:	add    DWORD PTR [ebx],esp
  414d2d:	jb     0x414d1d
  414d2f:	cmp    DWORD PTR [esi],edi
  414d31:	jbe    0x414d42
  414d33:	ss or  al,0x6f
  414d36:	mov    bh,BYTE PTR [ebx+0x4cac505f]
  414d3c:	unpckhps xmm5,xmm5
  414d3f:	repz aad 0x60
  414d42:	in     eax,0x42
  414d44:	je     0x414cec
  414d46:	mov    edi,0x56af2445
  414d4b:	dec    ebx
  414d4c:	push   edi
  414d4d:	aad    0xb8
  414d4f:	and    BYTE PTR [esi],ch
  414d51:	popa   
  414d52:	push   esi
  414d53:	lods   al,BYTE PTR ds:[esi]
  414d54:	fiadd  DWORD PTR [edx+0x4bac561e]
  414d5a:	adc    DWORD PTR ds:0x9c5b2920,ebx
  414d60:	sub    bh,BYTE PTR [eax+eax*8]
  414d63:	xchg   DWORD PTR [ebx+0x4158ede],eax
  414d69:	popf   
  414d6a:	mov    eax,0xc53c299a
  414d6f:	dec    esi
  414d70:	leave  
  414d71:	retf   
  414d72:	das    
  414d73:	mov    BYTE PTR [ebx],bh
  414d75:	popa   
  414d76:	lds    ebx,FWORD PTR [ebx+0x18]
  414d79:	inc    ebx
  414d7a:	jecxz  0x414d5a
  414d7c:	fchs   
  414d7e:	mov    eax,ds:0xe558df81
  414d83:	retf   0xb54d
  414d86:	imul   eax,DWORD PTR [eax],0xd927a684
  414d8c:	pop    esi
  414d8d:	inc    edx
  414d8e:	fimul  DWORD PTR ds:0x6313300a
  414d94:	inc    ebp
  414d95:	data16 and al,0xab
  414d98:	aad    0x11
  414d9a:	fld    QWORD PTR [edi+0x4f]
  414d9d:	mov    ?,edi
  414d9f:	sub    BYTE PTR ds:0x74c7754,ch
  414da5:	test   al,0xd3
  414da7:	xchg   edx,eax
  414da8:	pushf  
  414da9:	jge    0x414d42
  414dab:	inc    esi
  414dac:	out    dx,al
  414dad:	(bad)  
  414dae:	xchg   edi,eax
  414daf:	rcl    DWORD PTR [ebp+0x32],0x16
  414db3:	sub    ch,BYTE PTR [ebx-0x16c4f79d]
  414db9:	int3   
  414dba:	inc    edi
  414dbb:	loope  0x414e1c
  414dbd:	cs xchg ecx,eax
  414dbf:	les    edi,FWORD PTR [ebp+0x62]
  414dc2:	push   ebp
  414dc3:	inc    esi
  414dc4:	cmp    DWORD PTR [ebp+0x16793f7],ebx
  414dca:	test   DWORD PTR [edx-0x74],ebp
  414dcd:	add    bh,BYTE PTR [ebx+0x62]
  414dd0:	and    DWORD PTR [ecx-0x27535a87],ecx
  414dd6:	loopne 0x414ded
  414dd8:	pop    eax
  414dd9:	cmp    al,0x47
  414ddb:	mov    dh,0x66
  414ddd:	ja     0x414d82
  414ddf:	and    DWORD PTR [ecx+0x0],0xfffffff3
  414de3:	add    BYTE PTR [ecx],dl
  414de5:	and    DWORD PTR [edi-0x7fd919b4],esp
  414deb:	daa    
  414dec:	fsubr  DWORD PTR [eax]
  414dee:	jg     0x414e40
  414df0:	in     eax,dx
  414df1:	or     edx,DWORD PTR [ebp+0x59dd7f4e]
  414df7:	or     eax,0x4d1e6136
  414dfc:	shl    DWORD PTR [ebp-0x5d],1
  414dff:	jb     0x414e35
  414e01:	cmp    ah,BYTE PTR [esi-0x47274971]
  414e07:	xor    ecx,DWORD PTR [eax-0x62]
  414e0a:	xor    dl,BYTE PTR [ecx]
  414e0c:	mov    esp,0x716d2234
  414e11:	sub    DWORD PTR [ecx],eax
  414e13:	add    edx,ebx
  414e15:	nop
  414e16:	mov    ch,0x4b
  414e18:	out    0xa7,eax
  414e1a:	push   eax
  414e1b:	inc    ecx
  414e1c:	add    al,0x88
  414e1e:	inc    esi
  414e1f:	mov    ch,0x3
  414e21:	iret   
  414e22:	out    dx,eax
  414e23:	and    bl,BYTE PTR [edx-0x27d80f1c]
  414e29:	mov    al,0x88
  414e2b:	mov    edi,DWORD PTR [edx-0x2d]
  414e2e:	mov    WORD PTR [ebp-0x2e225b2f],fs
  414e34:	xor    DWORD PTR [ebx-0x319f85e6],esp
  414e3a:	fidiv  DWORD PTR [ebp+0x67803d04]
  414e40:	mov    cl,0xf9
  414e42:	mov    eax,0xf9b102bf
  414e47:	pop    edx
  414e48:	jle    0x414eb8
  414e4a:	mov    bh,0x3a
  414e4c:	imul   ebx,DWORD PTR [ebp-0x55],0xffffff81
  414e50:	mov    eax,0xe51b3eda
  414e55:	inc    ecx
  414e56:	fisubr DWORD PTR [ecx+0x3b16e5dc]
  414e5c:	lahf   
  414e5d:	jle    0x414e6d
  414e5f:	xor    eax,0xa7f5587f
  414e64:	mov    esp,0xff4848a0
  414e69:	jg     0x414e7f
  414e6b:	bound  esi,QWORD PTR [edx-0x2b]
  414e6e:	mov    ebx,0x7b9cd220
  414e73:	add    al,0xc9
  414e75:	push   esi
  414e76:	dec    eax
  414e77:	cmc    
  414e78:	test   BYTE PTR [ecx],bl
  414e7a:	sahf   
  414e7b:	lods   eax,DWORD PTR ds:[esi]
  414e7c:	push   0x5d
  414e7e:	mov    cl,0x46
  414e80:	dec    ebp
  414e81:	pusha  
  414e82:	and    al,BYTE PTR [edi+edi*1]
  414e85:	bound  ecx,QWORD PTR [edx]
  414e87:	shl    DWORD PTR [esi-0x17bba78e],0x35
  414e8e:	jno    0x414e92
  414e90:	stos   BYTE PTR es:[edi],al
  414e91:	inc    edx
  414e92:	dec    ecx
  414e93:	xchg   edi,eax
  414e94:	into   
  414e95:	(bad)  
  414e96:	idiv   DWORD PTR [edi+0x6]
  414e99:	in     al,0xd
  414e9b:	or     bl,bl
  414e9d:	loop   0x414eb5
  414e9f:	pusha  
  414ea0:	test   al,0xd9
  414ea2:	inc    ebx
  414ea3:	jg     0x414ec0
  414ea5:	xchg   edx,eax
  414ea6:	or     al,0x34
  414ea8:	mov    DWORD PTR [esi+0x75],ebp
  414eab:	adc    al,0x1d
  414ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eae:	ins    BYTE PTR es:[edi],dx
  414eaf:	dec    edx
  414eb0:	(bad)  
  414eb1:	pop    esi
  414eb2:	nop
  414eb3:	and    al,0xef
  414eb5:	stos   BYTE PTR es:[edi],al
  414eb6:	scas   al,BYTE PTR es:[edi]
  414eb7:	cmp    ecx,DWORD PTR [edx-0x32c07eeb]
  414ebd:	mov    eax,0x351a862a
  414ec2:	fdiv   QWORD PTR [ebp+0x7c1f5d9d]
  414ec8:	scas   al,BYTE PTR es:[edi]
  414ec9:	pop    eax
  414eca:	nop
  414ecb:	mov    dh,0x95
  414ecd:	mov    edx,0xee4046f1
  414ed2:	mov    ds:0xd44905a8,al
  414ed7:	xchg   esi,eax
  414ed8:	int3   
  414ed9:	in     al,0xe
  414edb:	gs jbe 0x414f06
  414ede:	jns    0x414f03
  414ee0:	je     0x414eac
  414ee2:	ss ret 0x8e14
  414ee6:	idiv   DWORD PTR [ecx]
  414ee8:	and    al,BYTE PTR [eax-0x45]
  414eeb:	retf   0xe696
  414eee:	into   
  414eef:	inc    ecx
  414ef0:	ret    0xbf2f
  414ef3:	mov    dh,0x4c
  414ef5:	cs test cl,bl
  414ef8:	adc    al,0x29
  414efa:	ficomp DWORD PTR [edx-0x9]
  414efd:	or     eax,0xb23b26a7
  414f02:	test   BYTE PTR [ebx],0x9
  414f05:	push   ebx
  414f06:	ja     0x414f38
  414f08:	xor    eax,0x9b34fd00
  414f0d:	sahf   
  414f0e:	and    DWORD PTR fs:[eax-0x63],esp
  414f12:	cld    
  414f13:	imul   al
  414f15:	jbe    0x414eae
  414f17:	mov    al,BYTE PTR [eax+ecx*1-0x1cf1e5ff]
  414f1e:	je     0x414f55
  414f20:	add    edi,DWORD PTR [ebx+0x30ce7dc3]
  414f26:	sub    al,0xd2
  414f28:	inc    edi
  414f29:	aam    0x9a
  414f2b:	mov    dh,0xe
  414f2d:	xor    BYTE PTR [ecx],ch
  414f2f:	imul   ebp,DWORD PTR [ebx+0x43],0xf3e37de8
  414f36:	sbb    ch,0xb0
  414f39:	sbb    edx,edx
  414f3b:	(bad)  
  414f3c:	retf   0xebb4
  414f3f:	and    esp,DWORD PTR [edx+0x5ce65645]
  414f45:	jb     0x414f81
  414f47:	out    dx,al
  414f48:	jne    0x414f9c
  414f4a:	and    edx,DWORD PTR [edi+0x2e82e0b3]
  414f50:	xor    al,cl
  414f52:	push   cs
  414f53:	jns    0x414f1a
  414f55:	shr    bl,1
  414f57:	retf   0xb9ef
  414f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5b:	outs   dx,DWORD PTR ds:[esi]
  414f5c:	push   cs
  414f5d:	mov    dl,0x67
  414f5f:	and    BYTE PTR [edi+0xb],bh
  414f62:	inc    ebp
  414f63:	dec    eax
  414f64:	inc    ecx
  414f65:	or     ch,al
  414f67:	or     al,0x3e
  414f6a:	shl    DWORD PTR [ebp+0xc],1
  414f6d:	lods   eax,DWORD PTR ds:[esi]
  414f6e:	stc    
  414f6f:	into   
  414f70:	ret    0xb3b3
  414f73:	inc    edi
  414f74:	iret   
  414f75:	jge    0x414fde
  414f77:	and    DWORD PTR [ecx-0x4],0xf05d7ca
  414f7e:	add    cl,BYTE PTR [edi-0x70370fc5]
  414f84:	ja     0x414f53
  414f86:	sub    eax,0x80c791f2
  414f8b:	stc    
  414f8c:	jns    0x414f65
  414f8e:	cmp    eax,0x3fb13c7f
  414f93:	dec    esi
  414f94:	cmp    ch,BYTE PTR [edx-0x1]
  414f97:	xlat   BYTE PTR ds:[ebx]
  414f98:	add    DWORD PTR es:[esi+0x3],esi
  414f9c:	jnp    0x414f8f
  414f9e:	push   es
  414f9f:	sub    DWORD PTR [ecx+eax*4],0xc39514a2
  414fa6:	mov    bh,0x5e
  414fa8:	xchg   edx,eax
  414fa9:	push   esi
  414faa:	pop    eax
  414fab:	in     al,dx
  414fac:	xchg   esp,eax
  414fae:	(bad)  
  414faf:	std    
  414fb0:	idiv   DWORD PTR es:[eax+0x7f7e6ca4]
  414fb7:	cdq    
  414fb8:	loope  0x414f75
  414fba:	or     edi,DWORD PTR [edi+0x7abad60c]
  414fc0:	mov    al,BYTE PTR [ecx-0x4d]
  414fc3:	mov    DWORD PTR [ebp-0x5f],ebx
  414fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fc7:	lods   al,BYTE PTR ds:[esi]
  414fc8:	inc    edx
  414fc9:	arpl   si,si
  414fcb:	cwde   
  414fcc:	pushf  
  414fcd:	xchg   ebx,eax
  414fce:	pop    ecx
  414fcf:	xlat   BYTE PTR ds:[ebx]
  414fd0:	or     al,0xc9
  414fd2:	adc    ecx,ebp
  414fd4:	mov    ecx,ebp
  414fd6:	cmp    eax,0x4f2d9cdb
  414fdb:	aam    0x8f
  414fdd:	idiv   BYTE PTR [esi+eax*4]
  414fe0:	cmp    BYTE PTR [edi+0x7],bh
  414fe3:	jecxz  0x41504c
  414fe5:	push   0x5
  414fe7:	and    al,0xc1
  414fe9:	repnz aad 0x53
  414fec:	retf   0x523b
  414fef:	adc    DWORD PTR [ebx],eax
  414ff1:	xor    al,0xb4
  414ff3:	stos   BYTE PTR es:[edi],al
  414ff4:	jmp    0x3d164459
  414ff9:	dec    esi
  414ffa:	pop    esp
  414ffb:	shr    BYTE PTR [edi+0x13c83408],cl
  415001:	test   DWORD PTR [edi],edx
  415003:	adc    DWORD PTR [eax+0x7117924d],0xffffff83
  41500a:	and    eax,eax
  41500c:	fwait
  41500d:	add    ebp,esi
  41500f:	hlt    
  415010:	cdq    
  415011:	lods   al,BYTE PTR ds:[esi]
  415012:	leave  
  415013:	cld    
  415014:	mov    ch,BYTE PTR [ecx+0xf090de9]
  41501a:	xor    al,bh
  41501c:	ins    BYTE PTR es:[edi],dx
  41501d:	mov    esi,0xd3ba2b49
  415022:	push   es
  415023:	dec    eax
  415024:	mov    ds,ebx
  415026:	rol    DWORD PTR [ebp+0x23],cl
  415029:	or     al,0x46
  41502b:	in     al,0xb8
  41502d:	rcr    DWORD PTR [ebx-0x2b],1
  415030:	dec    edx
  415031:	mov    dh,0x12
  415033:	sbb    eax,0x3a20ab4d
  415038:	ja     0x414ff2
  41503a:	sbb    DWORD PTR [edi],esi
  41503c:	imul   ebx,DWORD PTR [eax+0x34d354e7],0xed62b2d3
  415046:	add    DWORD PTR [edx-0x1a],ebx
  415049:	in     eax,dx
  41504a:	mov    al,ds:0xc7bb074b
  41504f:	inc    eax
  415050:	inc    esp
  415051:	mov    dl,0x22
  415053:	mov    bl,0x53
  415055:	dec    eax
  415056:	test   DWORD PTR [ebx],eax
  415058:	leave  
  415059:	cmp    al,0x68
  41505b:	lea    esp,[esi+0x12d961c9]
  415061:	or     eax,0xc3858390
  415066:	mov    WORD PTR [edx],gs
  415068:	imul   ecx,ecx,0x9221d991
  41506e:	arpl   cx,di
  415070:	mov    ebx,DWORD PTR [ebx+eax*1]
  415073:	rcl    BYTE PTR [edx+0x3f],cl
  415076:	std    
  415077:	jne    0x415051
  415079:	outs   dx,DWORD PTR ds:[esi]
  41507a:	xchg   edx,eax
  41507b:	test   BYTE PTR [esi+eiz*8],dl
  41507e:	or     dl,BYTE PTR [esi]
  415080:	pop    ds
  415081:	xchg   ecx,eax
  415082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415083:	neg    BYTE PTR [esi]
  415085:	int3   
  415086:	inc    eax
  415087:	into   
  415088:	int    0x3d
  41508a:	imul   esp,ecx,0xad511d07
  415090:	inc    ebp
  415091:	pop    edi
  415092:	pop    edi
  415093:	jbe    0x4150ed
  415095:	inc    ecx
  415096:	push   ss
  415097:	stos   DWORD PTR es:[edi],eax
  415098:	mov    al,ds:0xcb19265a
  41509d:	xchg   ebx,eax
  41509e:	sbb    ah,BYTE PTR [edx]
  4150a0:	adc    dh,BYTE PTR [ebp-0x268c09e3]
  4150a6:	div    DWORD PTR gs:[eax+0x3b]
  4150aa:	sub    BYTE PTR [esi],0x7a
  4150ad:	jns    0x4150d5
  4150af:	popa   
  4150b0:	xchg   edx,eax
  4150b1:	inc    edx
  4150b2:	jbe    0x415066
  4150b4:	push   ebp
  4150b5:	pop    ds
  4150b6:	jg     0x4150d4
  4150b8:	sbb    eax,0xf6e3ee54
  4150bd:	or     dl,BYTE PTR [esi+ebp*4]
  4150c0:	stc    
  4150c1:	jmp    0x4150b6
  4150c3:	cmp    BYTE PTR [edi-0x417537d5],al
  4150c9:	pop    ss
  4150ca:	mov    bh,0x70
  4150cc:	push   ss
  4150cd:	aad    0x5a
  4150cf:	and    BYTE PTR [edi],bl
  4150d1:	xchg   edi,ecx
  4150d3:	mov    ebx,0x48afddd9
  4150d8:	inc    esi
  4150d9:	xor    eax,0x94a0a961
  4150de:	test   DWORD PTR [edx+0xb6da4a5],esp
  4150e4:	ret    
  4150e5:	(bad)  
  4150e7:	add    ebx,edi
  4150e9:	aad    0x82
  4150eb:	into   
  4150ec:	cs mov dh,0x30
  4150ef:	or     esi,DWORD PTR [ecx]
  4150f1:	mov    dh,0x9e
  4150f3:	das    
  4150f4:	sub    DWORD PTR [eax+0x6e1415cc],edx
  4150fa:	jecxz  0x415151
  4150fc:	push   edi
  4150fd:	mov    esp,0x59944cf0
  415102:	leave  
  415103:	call   0x4a73:0xfcee673
  41510a:	add    DWORD PTR [ecx-0x6dd56c1d],esi
  415110:	les    ebp,FWORD PTR [edx-0x7af5dad8]
  415116:	sbb    al,0xf2
  415118:	mov    eax,ds:0xfd9d6de4
  41511d:	or     ebx,DWORD PTR [edx]
  41511f:	push   es
  415120:	fsubr  QWORD PTR [eax-0xe]
  415123:	adc    al,0xd7
  415125:	nop
  415126:	xlat   BYTE PTR ds:[ebx]
  415127:	jle    0x415195
  415129:	outs   dx,DWORD PTR ds:[esi]
  41512a:	(bad)  [ebx+0xe02a12f]
  415130:	(bad)  
  415131:	push   ds
  415132:	sbb    eax,0x32d8d38c
  415137:	stos   DWORD PTR es:[edi],eax
  415138:	inc    esp
  415139:	dec    edx
  41513a:	test   eax,0x7b58057e
  41513f:	adc    al,0x0
  415141:	test   al,0xcc
  415143:	fwait
  415144:	in     eax,0xfa
  415146:	jg     0x4150e2
  415148:	cmc    
  415149:	out    0x26,al
  41514b:	nop
  41514c:	push   ebp
  41514d:	inc    dh
  41514f:	jge    0x41510b
  415151:	icebp  
  415152:	icebp  
  415153:	add    al,0x2b
  415155:	loopne 0x4151ad
  415157:	inc    ebx
  415158:	ret    
  415159:	pop    ebp
  41515a:	enter  0x89cf,0x47
  41515e:	dec    eax
  41515f:	dec    esp
  415160:	push   es
  415161:	pushf  
  415162:	or     al,0x95
  415164:	push   cs
  415165:	cmp    ah,ch
  415167:	clc    
  415168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415169:	xlat   BYTE PTR ds:[ebx]
  41516a:	loopne 0x41514d
  41516c:	push   cs
  41516d:	mov    ?,WORD PTR [edx+0x64]
  415170:	xchg   ecx,eax
  415171:	call   0xb761:0xbdc85024
  415178:	sub    DWORD PTR [eax+0x48956a42],esp
  41517e:	cmpxchg BYTE PTR [edi],dh
  415181:	(bad)  
  415182:	call   0x8e48:0x86f6fd68
  415189:	push   es
  41518a:	jo     0x41518a
  41518c:	mov    esi,0xcfb0f275
  415191:	pop    ecx
  415192:	add    al,0x97
  415194:	or     al,0xad
  415196:	cli    
  415197:	(bad)  
  415198:	js     0x4151ee
  41519a:	jp     0x4151b2
  41519c:	inc    ebx
  41519d:	je     0x4151ff
  41519f:	iret   
  4151a0:	xchg   DWORD PTR [ecx+0x1e],esp
  4151a3:	repz mov WORD PTR [edx-0x71],?
  4151a7:	push   cs
  4151a8:	mov    edx,0xa2e95053
  4151ad:	push   0xbbe622bc
  4151b2:	push   ss
  4151b3:	leave  
  4151b4:	xchg   ecx,eax
  4151b5:	pop    ds
  4151b6:	xchg   ch,dl
  4151b8:	jbe    0x415187
  4151ba:	mov    ah,0x8f
  4151bc:	fidivr DWORD PTR [eax-0x33130239]
  4151c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c3:	ins    BYTE PTR es:[edi],dx
  4151c4:	fidiv  WORD PTR ds:0x5fc31527
  4151ca:	scas   al,BYTE PTR es:[edi]
  4151cb:	dec    ebp
  4151cc:	in     eax,0x8c
  4151ce:	inc    ebp
  4151cf:	iret   
  4151d0:	xchg   ecx,eax
  4151d1:	out    dx,eax
  4151d2:	loop   0x415202
  4151d4:	stc    
  4151d5:	inc    DWORD PTR [edx]
  4151d7:	pop    edi
  4151d8:	loopne 0x415234
  4151da:	je     0x41523f
  4151dc:	leave  
  4151dd:	out    dx,al
  4151de:	sbb    BYTE PTR [ebp-0x68],dh
  4151e1:	and    BYTE PTR [ecx+0x2c6f51f7],ah
  4151e7:	jl     0x41523c
  4151e9:	fdivr  DWORD PTR [edi-0x150998ea]
  4151ef:	(bad)  
  4151f0:	addr16 mov edx,0xe8e078e6
  4151f6:	adc    ecx,0x1b1d8a15
  4151fc:	or     al,0x5c
  4151fe:	ja     0x41526c
  415200:	ja     0x4151a9
  415202:	sahf   
  415203:	pop    es
  415204:	push   esi
  415205:	add    eax,0xe32af7b2
  41520a:	shl    BYTE PTR ds:0x8d00919a,1
  415210:	mov    ch,0xc
  415212:	ret    
  415213:	iret   
  415214:	loopne 0x415282
  415216:	add    BYTE PTR ds:0xbfd9950d,bl
  41521c:	ficom  WORD PTR [eax-0x1caeacdc]
  415222:	pop    ds
  415223:	cmp    dl,BYTE PTR [esi]
  415225:	pop    esi
  415226:	int    0x20
  415228:	sbb    eax,0xa895909a
  41522d:	nop
  41522e:	sar    DWORD PTR [edi+eiz*1],cl
  415231:	les    edi,FWORD PTR [ebx-0x4]
  415234:	dec    esp
  415235:	inc    esi
  415236:	jnp    0x415258
  415238:	add    BYTE PTR [edx-0xe],bl
  41523b:	mov    ecx,0xf172519d
  415240:	into   
  415241:	dec    ebx
  415242:	push   es
  415243:	fwait
  415244:	(bad)  
  415245:	aad    0x3c
  415247:	clc    
  415248:	gs adc eax,0x3a25d914
  41524e:	out    dx,al
  41524f:	jnp    0x41522f
  415251:	jp     0x415240
  415253:	lods   al,BYTE PTR ds:[esi]
  415254:	fdivrp st(7),st
  415256:	retf   0xacbf
  415259:	jnp    0x415265
  41525b:	push   ebp
  41525c:	xlat   BYTE PTR ds:[ebx]
  41525d:	push   ds
  41525e:	dec    edi
  41525f:	ror    DWORD PTR [eax-0x9dc28de],1
  415265:	jmp    0x4152b2
  415267:	das    
  415268:	inc    ebx
  415269:	push   es
  41526a:	push   esp
  41526b:	inc    ebx
  41526c:	sub    cl,BYTE PTR [ecx]
  41526e:	sar    DWORD PTR ds:0x96132515,cl
  415274:	enter  0xfb90,0x61
  415278:	or     ebp,DWORD PTR [ecx]
  41527a:	ins    BYTE PTR es:[edi],dx
  41527b:	mov    dl,0x38
  41527d:	ja     0x4152fb
  41527f:	mov    BYTE PTR [eax+0x4ed1fbe0],ah
  415285:	jl     0x4152c7
  415287:	mov    al,ds:0x6bc0ee4d
  41528c:	sub    dl,0x8
  41528f:	ins    DWORD PTR es:[edi],dx
  415290:	ins    DWORD PTR es:[edi],dx
  415291:	add    esp,DWORD PTR ds:0x7597d3dd
  415297:	mov    ebp,gs
  415299:	xor    BYTE PTR [ebp-0x6c0ae65e],ah
  41529f:	jno    0x4152e6
  4152a1:	sub    eax,0x72abdb6f
  4152a6:	icebp  
  4152a7:	lahf   
  4152a8:	xchg   ecx,eax
  4152a9:	mov    eax,0x91628360
  4152ae:	xor    eax,0x446fbe
  4152b3:	jle    0x4152bf
  4152b5:	fistp  WORD PTR [eax+0x5e5a31dc]
  4152bb:	inc    ecx
  4152bc:	cmp    cl,BYTE PTR [esi-0x13]
  4152bf:	lahf   
  4152c0:	dec    edi
  4152c1:	loopne 0x4152fd
  4152c3:	ins    BYTE PTR es:[edi],dx
  4152c4:	push   ss
  4152c5:	jmp    0xb432bad3
  4152ca:	jle    0x4152ac
  4152cc:	mov    dh,0xea
  4152ce:	jecxz  0x4152e5
  4152d0:	and    al,0xfa
  4152d2:	jl     0x415339
  4152d4:	(bad)  
  4152d5:	fs into 
  4152d7:	mov    dh,dl
  4152d9:	dec    ebp
  4152da:	pusha  
  4152db:	int3   
  4152dc:	int3   
  4152dd:	fdiv   DWORD PTR [ebp-0x30]
  4152e0:	jbe    0x41527a
  4152e2:	pop    eax
  4152e3:	push   0x63
  4152e5:	or     al,0xcf
  4152e7:	push   ss
  4152e8:	popa   
  4152e9:	outs   dx,DWORD PTR ds:[esi]
  4152ea:	stc    
  4152eb:	(bad)  
  4152ec:	adc    DWORD PTR [ebx+0x35f378e3],edi
  4152f2:	aam    0x81
  4152f4:	sub    eax,0x80a9d30e
  4152f9:	(bad)  
  4152fa:	(bad)  
  4152fb:	jmp    0x44f7:0xf7ab4258
  415302:	in     al,dx
  415303:	jo     0x415303
  415305:	mov    DWORD PTR [edx+0xb],ecx
  415308:	scas   eax,DWORD PTR es:[edi]
  415309:	xor    DWORD PTR [esi+eax*8-0x15479eab],esi
  415310:	iret   
  415311:	jbe    0x4152e6
  415313:	push   ss
  415314:	aaa    
  415315:	fs stos BYTE PTR es:[edi],al
  415317:	jo     0x415300
  415319:	pushf  
  41531a:	je     0x4152ed
  41531c:	dec    ebp
  41531d:	mov    bh,bh
  41531f:	out    dx,eax
  415320:	jmp    0x4152b2
  415322:	aam    0xf9
  415324:	xchg   DWORD PTR [ebx],ecx
  415326:	xchg   esp,eax
  415327:	pop    esp
  415328:	repz pop ds
  41532a:	mov    eax,0xe4713b7c
  41532f:	out    0x4,al
  415331:	pop    eax
  415332:	aam    0x45
  415334:	push   0x7e15bcbe
  415339:	mov    BYTE PTR ds:0x47435608,dh
  41533f:	stos   DWORD PTR es:[edi],eax
  415340:	enter  0x1baf,0x82
  415344:	fwait
  415345:	sbb    al,0x2a
  415347:	call   0xc113:0x16a55458
  41534e:	sbb    eax,0x31029924
  415353:	xor    al,0xa0
  415355:	xchg   esi,eax
  415356:	retf   
  415357:	adc    BYTE PTR [edi+0xae1cea0],0x2d
  41535e:	pop    ebp
  41535f:	jle    0x415308
  415361:	(bad)  
  415363:	cwde   
  415364:	sbb    al,0xca
  415366:	lock or DWORD PTR [ebx-0x77],esi
  41536a:	adc    DWORD PTR [ecx+0x4e],ebp
  41536d:	lods   eax,DWORD PTR ds:[esi]
  41536e:	out    0x25,eax
  415370:	(bad)  
  415371:	fstp   QWORD PTR [ebx+0x1b]
  415374:	lods   al,BYTE PTR ds:[esi]
  415375:	out    0x5a,al
  415377:	sub    eax,0x8c84d7dd
  41537c:	xchg   ebx,eax
  41537d:	sub    al,0x7a
  41537f:	shr    DWORD PTR [edi],1
  415381:	cli    
  415382:	xchg   ecx,eax
  415383:	jae    0x415320
  415385:	jb     0x41538e
  415387:	and    BYTE PTR [ecx-0x61],ch
  41538a:	xor    al,0x17
  41538c:	shl    DWORD PTR [edx+0x56],cl
  41538f:	mov    cs,WORD PTR [edx-0x63]
  415392:	stc    
  415393:	addr16 data16 add al,al
  415397:	push   0x11b091e6
  41539c:	mov    es,WORD PTR [edx+0x67]
  41539f:	add    BYTE PTR [edi],ch
  4153a1:	lahf   
  4153a2:	xchg   edi,eax
  4153a3:	fcomip st,st(7)
  4153a5:	pop    eax
  4153a6:	push   esp
  4153a7:	mov    ebp,0x910c5443
  4153ac:	pop    ecx
  4153ad:	(bad)  
  4153ae:	iret   
  4153af:	xor    BYTE PTR [eax+0x22],ch
  4153b2:	shl    DWORD PTR [eax-0x50c232d],0x24
  4153b9:	enter  0x7105,0xaa
  4153bd:	dec    ebp
  4153be:	or     cl,ah
  4153c0:	xor    al,0xd9
  4153c2:	adc    eax,0xe80070bd
  4153c7:	sub    DWORD PTR [edi+0x50],ebp
  4153ca:	jmp    0xaaf5a1a1
  4153cf:	loope  0x4153d5
  4153d1:	inc    ebp
  4153d2:	(bad)  
  4153d3:	(bad)
  4153d7:	jne    0x4153e6
  4153d9:	adc    DWORD PTR [eax-0x11],0x75
  4153dd:	push   ebp
  4153de:	adc    DWORD PTR [ecx],0x88c0baf9
  4153e4:	inc    edi
  4153e5:	mov    ecx,ebp
  4153e7:	sahf   
  4153e8:	jb     0x4153a1
  4153ea:	or     eax,eax
  4153ec:	push   ebx
  4153ed:	test   DWORD PTR [eax],ecx
  4153ef:	cmp    DWORD PTR ds:0x448cce3b,edx
  4153f5:	mov    esp,0xf61404a9
  4153fa:	add    eax,0x40067e6d
  4153ff:	sub    eax,DWORD PTR ds:0x5910088c
  415405:	in     eax,dx
  415406:	dec    ebp
  415407:	and    al,0x8c
  415409:	dec    ecx
  41540a:	mov    ecx,0x66db3400
  41540f:	stos   DWORD PTR es:[edi],eax
  415410:	int    0x9b
  415412:	es nop
  415414:	rol    DWORD PTR [edi-0x6f],0xc3
  415418:	je     0x41548f
  41541a:	mov    ds:0xa9acdb47,al
  41541f:	loop   0x415431
  415421:	sbb    BYTE PTR [edx],0x50
  415424:	or     DWORD PTR [ebx+ecx*4],ebp
  415427:	or     al,0x82
  415429:	xor    BYTE PTR [esi],0x33
  41542c:	ret    
  41542d:	jb     0x415437
  41542f:	fisub  DWORD PTR [edi]
  415431:	inc    ebp
  415432:	and    edx,DWORD PTR [eax-0x18]
  415435:	ss inc esp
  415437:	iret   
  415438:	ret    0x462f
  41543b:	hlt    
  41543c:	(bad)  
  41543d:	push   cs
  41543e:	pop    edx
  41543f:	(bad)  
  415441:	aam    0x6d
  415443:	in     al,0xdd
  415445:	(bad)  
  415446:	rcl    BYTE PTR [ebx],1
  415448:	push   0x79
  41544a:	lahf   
  41544b:	mov    bh,0x88
  41544d:	mov    eax,ds:0x8d6805b4
  415452:	or     BYTE PTR [eax-0x3d5f700f],0x86
  415459:	sub    DWORD PTR [edi-0x24],0x25bd07ac
  415460:	dec    ebx
  415461:	or     al,0xf0
  415463:	push   edx
  415464:	(bad)  
  415465:	call   0x8fbc:0x6cecc3f3
  41546c:	gs pop eax
  41546e:	push   0xb7b989f5
  415473:	jb     0x41548d
  415475:	and    eax,0x7e8502f3
  41547a:	cmp    ch,BYTE PTR [eax]
  41547c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41547d:	mov    es,WORD PTR [ebp-0x1496da1f]
  415483:	gs pop ebx
  415485:	scas   al,BYTE PTR es:[edi]
  415486:	inc    ebx
  415487:	push   esi
  415488:	imul   eax,DWORD PTR [edi+0x346a1066],0x221523ae
  415492:	xchg   esi,eax
  415493:	cmp    edx,DWORD PTR [ebp+0x46065410]
  415499:	mov    bh,0x41
  41549b:	add    eax,0x19fc8bac
  4154a0:	mov    ecx,0xfd58990e
  4154a5:	imul   ebx,DWORD PTR [edi-0x4822c34f],0xdc2bfaa2
  4154af:	xchg   esi,eax
  4154b0:	adc    edx,ecx
  4154b2:	aad    0xbd
  4154b4:	and    dl,BYTE PTR [esi+0x28]
  4154b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b8:	ret    
  4154b9:	das    
  4154ba:	xor    dl,dl
  4154bc:	mov    ds:0xdb814dc2,eax
  4154c1:	mov    esi,0x92ed5c61
  4154c6:	stc    
  4154c7:	push   eax
  4154c8:	xor    eax,0xccd027a0
  4154cd:	inc    ebx
  4154ce:	xor    eax,0x146eeb53
  4154d3:	(bad)  [eax+0x4a1edfce]
  4154d9:	scas   al,BYTE PTR es:[edi]
  4154da:	test   al,0x59
  4154dc:	in     eax,0x76
  4154de:	rcl    esp,cl
  4154e0:	jb     0x4154ed
  4154e2:	jge    0x41552e
  4154e4:	jp     0x415532
  4154e6:	mov    dl,0x17
  4154e8:	fs dec edi
  4154ea:	lods   al,BYTE PTR ds:[esi]
  4154eb:	mov    ah,0x69
  4154ed:	xchg   esp,eax
  4154ee:	(bad)  
  4154ef:	jmp    0x84a3:0xd9167e5e
  4154f6:	out    dx,eax
  4154f7:	mov    esp,0x5714a557
  4154fc:	sahf   
  4154fd:	add    ch,bh
  4154ff:	dec    edi
  415500:	loope  0x4154c6
  415502:	sub    dl,ch
  415504:	sbb    edi,DWORD PTR [eax]
  415506:	or     eax,0x5215728d
  41550b:	mov    ds:0x68636ad7,al
  415510:	mov    ah,0x3b
  415512:	mov    bl,0x2e
  415514:	add    al,dl
  415516:	in     eax,0x7c
  415518:	das    
  415519:	outs   dx,DWORD PTR ds:[esi]
  41551a:	cmp    cl,0xbf
  41551d:	and    eax,0x78105ca2
  415522:	loope  0x4154a4
  415524:	imul   ecx,DWORD PTR [edx-0x765286fb],0xaaf12b2c
  41552e:	ins    BYTE PTR es:[edi],dx
  41552f:	push   esp
  415530:	adc    ebx,DWORD PTR [ebp+0x57]
  415533:	mov    DWORD PTR [esi],ebp
  415535:	pop    ecx
  415536:	mov    ecx,0x48eb6c80
  41553b:	xor    al,0x97
  41553d:	mul    BYTE PTR [ebx+0x18]
  415540:	or     eax,0xb60ac067
  415545:	lds    eax,FWORD PTR [ebx]
  415547:	(bad)  
  415548:	mov    edx,0x4536c6ec
  41554d:	rol    ch,1
  41554f:	fiadd  WORD PTR [esi]
  415551:	bswap  ebx
  415553:	icebp  
  415554:	repz repnz dec ecx
  415557:	int    0x26
  415559:	lea    edi,[eax+0x722e2759]
  41555f:	fs cmp dh,ah
  415562:	mov    esi,0xf0866c04
  415567:	and    esi,eax
  415569:	inc    ecx
  41556a:	xlat   BYTE PTR ds:[ebx]
  41556b:	jecxz  0x415509
  41556d:	fwait
  41556e:	jne    0x41553b
  415570:	or     cl,BYTE PTR [ebx+0x703fd8e8]
  415576:	ins    DWORD PTR es:[edi],dx
  415577:	pop    ecx
  415578:	ret    0xa455
  41557b:	ficom  WORD PTR [ecx+0x1d5864b]
  415581:	jnp    0x4155de
  415583:	out    0x6e,eax
  415585:	icebp  
  415586:	jecxz  0x41551d
  415588:	addr16 inc ebp
  41558a:	fnsave [esi-0x39]
  41558d:	fs sbb eax,0xfa7ec84d
  415593:	sti    
  415594:	data16 adc dh,cl
  415597:	pop    ecx
  415598:	xchg   esi,eax
  415599:	sbb    cl,BYTE PTR [ebp+0x2b72899e]
  41559f:	iret   
  4155a0:	inc    BYTE PTR [eax-0x63252fc1]
  4155a6:	popf   
  4155a7:	shr    BYTE PTR [edi+0x54a59b71],0x90
  4155ae:	std    
  4155af:	sub    DWORD PTR [ebx+0x62757381],eax
  4155b5:	adc    al,0x11
  4155b7:	xor    BYTE PTR [esi],bh
  4155b9:	repnz and al,0x5f
  4155bc:	xchg   ebp,eax
  4155bd:	jmp    0x415562
  4155bf:	and    eax,0x64f8a27c
  4155c4:	fst    QWORD PTR [esi]
  4155c6:	mov    ebx,0xce05e7ec
  4155cb:	jl     0x4155bf
  4155cd:	xor    al,0x36
  4155cf:	scas   eax,DWORD PTR es:[edi]
  4155d0:	in     al,dx
  4155d1:	popf   
  4155d2:	pop    es
  4155d3:	mov    esi,0x6824caa3
  4155d8:	lods   eax,DWORD PTR ds:[esi]
  4155d9:	mov    bl,0xa2
  4155db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155dc:	call   DWORD PTR [esi-0x34]
  4155df:	cmp    bh,ah
  4155e1:	push   edi
  4155e2:	pop    ebx
  4155e3:	repz xor BYTE PTR [ebp-0x6a],0xf3
  4155e8:	add    al,0x50
  4155ea:	gs sbb esp,eax
  4155ed:	jp     0x415626
  4155ef:	jns    0x415668
  4155f1:	ins    DWORD PTR es:[edi],dx
  4155f2:	call   0x959e55ba
  4155f7:	stos   BYTE PTR es:[edi],al
  4155f8:	popaw  
  4155fa:	jb     0x4155df
  4155fc:	mov    ds,WORD PTR [edi+0x563747f7]
  415602:	cs inc eax
  415604:	arpl   dx,ax
  415606:	cmp    bl,al
  415608:	imul   esp,DWORD PTR [edx+0x13],0xffffffcd
  41560c:	pop    esi
  41560d:	in     al,dx
  41560e:	fst    DWORD PTR [ebx+0x79cbc87c]
  415614:	push   ebx
  415616:	jnp    0x41562d
  415618:	mov    dl,0x66
  41561a:	ret    0x1865
  41561d:	mov    esi,0xe60c2c80
  415622:	aad    0x42
  415624:	arpl   bp,sp
  415626:	dec    edi
  415627:	out    dx,al
  415628:	and    al,0x12
  41562a:	jnp    0x415691
  41562c:	jae    0x415691
  41562e:	adc    DWORD PTR [eax-0x4e89141d],eax
  415634:	cs push esp
  415636:	out    dx,eax
  415637:	pusha  
  415638:	add    DWORD PTR [esi+ebp*8],0x72
  41563c:	or     DWORD PTR [esi],eax
  41563e:	int    0x12
  415640:	call   0xc8ce39c5
  415645:	push   ds
  415646:	shl    BYTE PTR [edx],0x71
  415649:	lea    esi,[eax]
  41564b:	sub    dl,cl
  41564d:	adc    ebp,DWORD PTR [ecx-0x7f]
  415650:	xchg   DWORD PTR [edx],eax
  415652:	repz push edi
  415654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415655:	jmp    0x415697
  415657:	ds stos DWORD PTR es:[edi],eax
  415659:	aas    
  41565a:	div    DWORD PTR [ebx+0x5b0ae518]
  415660:	cwde   
  415661:	ret    
  415662:	nop
  415663:	push   edi
  415664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415665:	imul   esi,esi,0x7bca27da
  41566b:	and    eax,0xe7ccc94
  415670:	and    esi,DWORD PTR [eax]
  415672:	pushf  
  415673:	or     al,0xf0
  415675:	hlt    
  415676:	(bad)  
  415677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415678:	cmp    esi,DWORD PTR [edx]
  41567a:	mov    ebx,0xcdbebff9
  41567f:	into   
  415680:	sub    DWORD PTR [edi-0x39],ebp
  415683:	leave  
  415684:	push   cs
  415685:	(bad)  
  415686:	shr    DWORD PTR [esi+eax*4],cl
  415689:	inc    eax
  41568a:	jg     0x415700
  41568c:	jecxz  0x4156bb
  41568e:	hlt    
  41568f:	test   al,0x67
  415691:	rcr    BYTE PTR ds:0xe03edd91,1
  415697:	lahf   
  415698:	or     eax,0x1986911a
  41569d:	imul   eax,DWORD PTR [ecx-0x631c0bd9],0xfffffff4
  4156a4:	jp     0x415675
  4156a6:	(bad)  
  4156a7:	icebp  
  4156a8:	retf   
  4156a9:	push   es
  4156aa:	jb     0x4156b7
  4156ac:	mov    bl,0x11
  4156ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156af:	(bad)  
  4156b0:	sahf   
  4156b1:	cmp    ch,0x1f
  4156b4:	pop    esi
  4156b5:	dec    esp
  4156b6:	out    dx,eax
  4156b7:	pop    edi
  4156b8:	into   
  4156b9:	inc    esi
  4156ba:	push   ds
  4156bb:	jecxz  0x41567e
  4156bd:	mov    ecx,0xb214879f
  4156c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c3:	out    dx,eax
  4156c4:	les    ebx,FWORD PTR [edi+0x31]
  4156c7:	add    al,0xa4
  4156c9:	scas   eax,DWORD PTR es:[edi]
  4156ca:	pop    ecx
  4156cb:	or     al,0xb
  4156cd:	inc    ebp
  4156ce:	jmp    0x415744
  4156d0:	ss push 0xb0e0fd8d
  4156d6:	mov    bh,0xa1
  4156d8:	shl    bh,0xe
  4156db:	adc    eax,0x55e048a3
  4156e0:	pop    eax
  4156e1:	ins    BYTE PTR es:[edi],dx
  4156e2:	or     al,0xb5
  4156e4:	or     BYTE PTR [edi+ebx*8+0x32890edf],dh
  4156eb:	pop    ebx
  4156ec:	std    
  4156ed:	inc    ecx
  4156ee:	call   0xc1f3:0xa96f4bb1
  4156f5:	fsubp  st(7),st
  4156f7:	rol    BYTE PTR [ecx+0x315c95dd],1
  4156fd:	jge    0x4156b0
  4156ff:	mov    BYTE PTR [ecx-0x5f],dh
  415702:	scas   eax,DWORD PTR es:[edi]
  415703:	pop    ss
  415704:	pop    edx
  415705:	mov    eax,0xedb55b1e
  41570a:	push   cs
  41570b:	clc    
  41570c:	pop    eax
  41570d:	mov    ecx,0xb8a88bdc
  415712:	sub    cl,bl
  415714:	aam    0x94
  415716:	lods   al,BYTE PTR ds:[esi]
  415717:	push   ebp
  415718:	popa   
  415719:	jle    0x41576a
  41571b:	cli    
  41571c:	push   ecx
  41571d:	push   edi
  41571e:	or     DWORD PTR [esi],0x3ddccc85
  415724:	inc    ecx
  415725:	mov    esi,0xd2389c67
  41572a:	ds pop edi
  41572c:	push   edx
  41572d:	fsubr  QWORD PTR [ecx]
  41572f:	cmc    
  415730:	cmp    edi,DWORD PTR [edi]
  415732:	add    eax,0x1924211c
  415737:	jle    0x415706
  415739:	fwait
  41573a:	dec    edx
  41573b:	mov    dh,0xa0
  41573d:	or     BYTE PTR [edx-0x6ac00b3e],0x66
  415744:	cdq    
  415745:	mov    edx,0xb69a15ac
  41574a:	es inc edx
  41574c:	stos   DWORD PTR es:[edi],eax
  41574d:	dec    ebp
  41574e:	xchg   esp,eax
  41574f:	int    0x9e
  415751:	xchg   edx,eax
  415752:	ret    
  415753:	mov    BYTE PTR [ecx+0x26],al
  415756:	dec    eax
  415757:	cmp    BYTE PTR ds:0x626fa8ad,bl
  41575d:	jge    0x4157b7
  41575f:	pop    ecx
  415760:	adc    DWORD PTR [edx+eax*8],ecx
  415763:	sub    BYTE PTR [ecx+0x24b7c7d3],ah
  415769:	pop    ss
  41576a:	xchg   ebp,eax
  41576b:	xchg   edi,eax
  41576c:	inc    esi
  41576d:	xchg   edi,eax
  41576e:	add    ch,BYTE PTR [ebx]
  415770:	sahf   
  415771:	push   es
  415772:	jg     0x4157e9
  415774:	push   edx
  415775:	inc    ecx
  415776:	sbb    esi,DWORD PTR [eax+0x64]
  415779:	(bad)  
  41577a:	fdiv   st(2),st
  41577c:	mov    ebp,0x92b91612
  415781:	xor    ch,BYTE PTR [esi]
  415783:	stc    
  415784:	das    
  415785:	int3   
  415786:	pop    ss
  415787:	sub    DWORD PTR [esi-0x4e5c2361],esp
  41578d:	cmp    BYTE PTR [edi-0x7d4140d],ch
  415793:	lock mov ecx,0x4e406fd7
  415799:	pop    es
  41579a:	stc    
  41579b:	out    dx,al
  41579c:	push   ecx
  41579d:	mov    DWORD PTR [ebp+eiz*1-0x14],esp
  4157a1:	jnp    0x41575d
  4157a3:	sbb    BYTE PTR [ecx],ch
  4157a5:	inc    eax
  4157a6:	stos   BYTE PTR es:[edi],al
  4157a7:	fadd   QWORD PTR [ebp+0x3b]
  4157aa:	call   0xda3165f2
  4157af:	cld    
  4157b0:	cmp    al,0xc3
  4157b2:	pop    esp
  4157b3:	sbb    BYTE PTR [ebp-0x25],dh
  4157b6:	sbb    ebx,ebp
  4157b8:	xor    eax,0x19e5e917
  4157bd:	rol    dl,cl
  4157bf:	cld    
  4157c0:	xchg   edx,eax
  4157c1:	pushf  
  4157c2:	push   ebx
  4157c3:	mov    cl,0xf7
  4157c5:	or     dh,BYTE PTR [ebp+0x76e04c51]
  4157cb:	pop    esp
  4157cc:	mov    ds:0xa90162aa,al
  4157d1:	(bad)  
  4157d2:	stc    
  4157d3:	ss dec esi
  4157d5:	mov    al,ds:0x73c2bdee
  4157da:	test   DWORD PTR [esi-0x68],ebx
  4157dd:	and    ebx,DWORD PTR [esi+edx*8+0x61]
  4157e1:	adc    al,0xa9
  4157e3:	stos   DWORD PTR es:[edi],eax
  4157e4:	out    dx,eax
  4157e5:	push   esi
  4157e6:	inc    edi
  4157e7:	mov    eax,0xe91c1ed5
  4157ec:	adc    ah,BYTE PTR [eax]
  4157ee:	fild   DWORD PTR [esi+0x52]
  4157f1:	dec    esi
  4157f2:	xlat   BYTE PTR ds:[ebx]
  4157f3:	jg     0x41584f
  4157f5:	sub    al,BYTE PTR [ecx]
  4157f7:	out    0x54,al
  4157f9:	pop    esi
  4157fa:	sbb    eax,0x711dd908
  4157ff:	pushf  
  415800:	jp     0x415800
  415802:	popa   
  415803:	jae    0x415850
  415805:	int    0xc
  415807:	mov    esp,DWORD PTR [ebp+0x54184b3c]
  41580d:	xor    ch,BYTE PTR [esi+0x774d7ce1]
  415813:	loope  0x41586e
  415815:	pop    ds
  415816:	fwait
  415817:	cmp    DWORD PTR [eax+edi*1+0x295935d8],ecx
  41581e:	mov    DWORD PTR [ecx-0x61],edx
  415821:	cmc    
  415822:	lods   eax,DWORD PTR ds:[esi]
  415823:	mov    esi,0xa3fdd768
  415828:	ret    0xaa1f
  41582b:	mul    BYTE PTR [ebp+esi*4+0x1a824e58]
  415832:	add    eax,0xce97683
  415837:	call   0x285d58cb
  41583c:	xchg   ebp,eax
  41583d:	scas   al,BYTE PTR es:[edi]
  41583e:	(bad)  
  41583f:	inc    eax
  415840:	imul   ecx,esi,0x94d8b844
  415846:	mov    dh,0x76
  415848:	mov    ebx,0x765c28e2
  41584d:	int3   
  41584e:	sbb    edx,ebx
  415850:	shr    edi,cl
  415852:	inc    eax
  415853:	mov    ecx,0xfb9a8a3f
  415858:	dec    DWORD PTR [ebx]
  41585a:	icebp  
  41585b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41585c:	add    esi,edx
  41585e:	sub    eax,0xd5e23373
  415863:	jp     0x41581e
  415865:	dec    ebp
  415866:	js     0x4158ac
  415868:	pop    ds
  415869:	jno    0x4158de
  41586b:	jmp    0xe1f6:0x60a1d38d
  415872:	ds shr ecx,cl
  415875:	(bad)  
  415876:	in     al,0x6a
  415878:	push   ebp
  415879:	or     al,0xd5
  41587b:	or     BYTE PTR [esi+0x42967513],bh
  415881:	mov    edx,0x729c7c09
  415886:	add    DWORD PTR [ecx+0xa064c75],0x3a768a20
  415890:	xchg   edx,eax
  415891:	loopne 0x4158a5
  415893:	neg    DWORD PTR [ebx+0x13]
  415896:	sbb    DWORD PTR [eax],0x8ea3d13f
  41589c:	mov    al,0xdc
  41589e:	mov    ax,WORD PTR [ecx+0x7]
  4158a2:	out    dx,eax
  4158a3:	or     edx,0x9
  4158a6:	fs cmp esi,0xd129c93a
  4158ad:	loopne 0x4158ea
  4158af:	dec    ebp
  4158b0:	inc    esi
  4158b1:	mov    fs,WORD PTR [edi-0x43]
  4158b4:	push   ds
  4158b5:	icebp  
  4158b6:	imul   esp,eax,0xecaa815c
  4158bc:	xchg   edi,eax
  4158bd:	repnz (bad) 
  4158bf:	call   0xa9ba:0x7f928471
  4158c6:	scas   al,BYTE PTR es:[edi]
  4158c7:	cmp    al,0xc7
  4158c9:	lea    esi,[ebx-0x96af00a]
  4158cf:	jmp    0xbe8231f8
  4158d4:	lods   al,BYTE PTR ds:[esi]
  4158d5:	std    
  4158d6:	ins    DWORD PTR es:[edi],dx
  4158d7:	or     bh,bl
  4158d9:	mov    WORD PTR [ebp+0x39],ss
  4158dc:	or     al,0x5d
  4158de:	out    0x8d,al
  4158e0:	lods   eax,DWORD PTR ds:[esi]
  4158e1:	(bad)  
  4158e2:	and    eax,DWORD PTR [esi+0x43b031f4]
  4158e8:	push   cs
  4158e9:	call   0x7430ced
  4158ee:	dec    edi
  4158ef:	or     BYTE PTR [edi-0xe019aa1],cl
  4158f5:	sbb    eax,DWORD PTR [edx]
  4158f7:	adc    DWORD PTR [ebp+0x24c1d6b],edi
  4158fd:	add    dl,BYTE PTR [ecx+0x7133354c]
  415903:	rol    ah,0x53
  415906:	cs jl  0x4158bb
  415909:	ds xor al,dl
  41590c:	stc    
  41590d:	add    eax,0x84c572cf
  415912:	and    BYTE PTR [ebp-0x4e],bl
  415915:	lock mov ebp,DWORD PTR fs:[ecx-0x6aadf1b5]
  41591d:	jge    0x4158e4
  41591f:	lahf   
  415920:	mov    dl,0x73
  415922:	mov    ah,0x30
  415924:	xchg   edx,eax
  415925:	add    BYTE PTR [ebp+esi*8-0xc],cl
  415929:	inc    esi
  41592a:	es inc ecx
  41592c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592d:	xor    BYTE PTR [ecx+0x21],cl
  415930:	xchg   ebx,eax
  415931:	cdq    
  415932:	jl     0x4158cd
  415934:	jns    0x41599b
  415936:	dec    eax
  415937:	cdq    
  415938:	int    0x8
  41593a:	add    edx,DWORD PTR [ecx+ebp*1]
  41593d:	dec    esi
  41593e:	mov    edx,0x50929df3
  415943:	lea    esi,[edx+0x1b1b5d2d]
  415949:	jmp    0x4159a9
  41594b:	sub    eax,0xbd291429
  415950:	mov    dh,0x41
  415952:	cmp    ch,dl
  415954:	pop    ds
  415955:	xchg   ebp,eax
  415956:	cwde   
  415957:	xor    DWORD PTR [esp+esi*8+0x3b],eax
  41595b:	call   0x15eb:0x9f486275
  415962:	fnsetpm(287 only) 
  415964:	sahf   
  415965:	push   DWORD PTR [eax]
  415967:	sbb    eax,0xaa6acf3
  41596c:	sbb    ebx,DWORD PTR [ecx-0x15]
  41596f:	imul   ecx,DWORD PTR [esi],0x343a2d4f
  415975:	(bad)  
  415977:	push   ebx
  415978:	push   edi
  415979:	cwde   
  41597a:	scas   eax,DWORD PTR es:[edi]
  41597b:	inc    ecx
  41597c:	imul   esp,DWORD PTR [eax+0x28],0xffffffc0
  415980:	jle    0x4159e5
  415982:	fucom  st(2)
  415984:	scas   al,BYTE PTR es:[edi]
  415985:	xor    ah,BYTE PTR [edx-0x4205731a]
  41598b:	xor    cl,dh
  41598d:	inc    esp
  41598e:	inc    ecx
  41598f:	inc    ebx
  415990:	xor    esp,edx
  415992:	inc    ecx
  415993:	xchg   ecx,eax
  415994:	out    dx,al
  415995:	push   ecx
  415996:	push   ds
  415997:	pop    ecx
  415998:	es pop edi
  41599a:	arpl   WORD PTR ds:0xe43a3f2d,bp
  4159a0:	push   ds
  4159a1:	cwde   
  4159a2:	repnz adc eax,0xd8eb306e
  4159a8:	sbb    eax,0x8f72d1de
  4159ad:	in     al,dx
  4159ae:	sub    al,0x14
  4159b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159b1:	jle    0x4159b4
  4159b3:	dec    edx
  4159b4:	test   DWORD PTR [ebx-0x45],edx
  4159b7:	sub    eax,0xb4726da6
  4159bc:	data16 rcr BYTE PTR [esi],cl
  4159bf:	jb     0x415a22
  4159c1:	imul   ebx,DWORD PTR [ecx-0x12],0x60
  4159c5:	sub    BYTE PTR ds:0x9b28488c,cl
  4159cb:	loopne 0x4159f1
  4159cd:	mov    ebp,0x3f321189
  4159d2:	dec    edx
  4159d3:	cmp    BYTE PTR [ecx+0x0],cl
  4159d6:	and    esp,0xffffffdf
  4159d9:	jns    0x4159a1
  4159db:	lahf   
  4159dc:	imul   ecx,edi,0xffffffa6
  4159df:	push   0x3c
  4159e1:	pop    es
  4159e2:	cmp    eax,0xa57e2078
  4159e7:	pop    ds
  4159e8:	in     al,dx
  4159e9:	clc    
  4159ea:	inc    edx
  4159eb:	sahf   
  4159ec:	pop    ebx
  4159ed:	jmp    0xb9c2:0xc85e4ee4
  4159f4:	les    eax,FWORD PTR ds:0x6b659a2b
  4159fa:	fnstcw WORD PTR [ebp+0x39]
  4159fd:	dec    edx
  4159fe:	cmc    
  4159ff:	and    dh,BYTE PTR [ebp-0xea4b059]
  415a05:	jmp    0x46f8:0xfd23c743
  415a0c:	jge    0x415a1c
  415a0e:	push   edx
  415a0f:	stos   DWORD PTR es:[edi],eax
  415a10:	xchg   ecx,eax
  415a11:	jecxz  0x4159c2
  415a13:	sahf   
  415a14:	pop    eax
  415a15:	add    dh,BYTE PTR [edi-0x6d]
  415a18:	ja     0x415a89
  415a1a:	aaa    
  415a1b:	dec    ebx
  415a1c:	sti    
  415a1d:	mov    eax,ds:0xee604ca6
  415a22:	sub    eax,0x722f0ad
  415a27:	rol    edx,0x9e
  415a2a:	inc    di
  415a2c:	jge    0x415a52
  415a2e:	fsub   DWORD PTR [edi]
  415a30:	in     al,dx
  415a31:	pop    ebp
  415a32:	out    dx,eax
  415a33:	(bad)  
  415a34:	ret    0x29de
  415a37:	out    0xcb,eax
  415a39:	pop    ecx
  415a3a:	mov    cl,0xd3
  415a3c:	pop    ss
  415a3d:	add    BYTE PTR [ebx+0x51],0x2c
  415a41:	dec    esp
  415a42:	in     eax,dx
  415a43:	push   ebx
  415a44:	or     bl,BYTE PTR [ebx+0x70f45ec5]
  415a4a:	inc    ecx
  415a4b:	push   ebx
  415a4c:	pop    edi
  415a4d:	cwde   
  415a4e:	das    
  415a4f:	xor    al,0x72
  415a51:	mov    edx,0x95d5d0e2
  415a56:	jb     0x4159ef
  415a58:	adc    BYTE PTR [edx-0x35],al
  415a5b:	test   BYTE PTR [esp+ebp*8],bh
  415a5e:	push   ebx
  415a5f:	cmp    eax,0xe413f382
  415a64:	mov    bl,0x1e
  415a66:	xor    ecx,DWORD PTR [edx]
  415a68:	mov    cl,0x1c
  415a6a:	sbb    dh,BYTE PTR [ecx+0xa2321d6]
  415a70:	lods   al,BYTE PTR ds:[esi]
  415a71:	or     edi,ecx
  415a73:	test   BYTE PTR [edi-0x1e],dh
  415a76:	push   ebp
  415a77:	xchg   BYTE PTR [edi-0x37ebc734],dl
  415a7d:	sahf   
  415a7e:	push   ds
  415a7f:	xchg   ecx,eax
  415a80:	scas   al,BYTE PTR es:[edi]
  415a81:	ret    0x36bd
  415a84:	xor    esi,edi
  415a86:	daa    
  415a87:	push   0x31be5e7e
  415a8c:	adc    edi,DWORD PTR [eiz*4-0x7ba58948]
  415a93:	scas   eax,DWORD PTR es:[edi]
  415a94:	sbb    DWORD PTR [ebp+0x21335a57],ebp
  415a9a:	test   BYTE PTR [edx],0x98
  415a9d:	push   ebx
  415a9e:	test   al,0xb7
  415aa0:	adc    dl,bh
  415aa2:	lods   al,BYTE PTR ds:[esi]
  415aa3:	mov    edi,0x77255a1b
  415aa8:	push   eax
  415aa9:	daa    
  415aaa:	sbb    bh,cl
  415aac:	ins    DWORD PTR es:[edi],dx
  415aad:	scas   eax,DWORD PTR es:[edi]
  415aae:	xchg   edx,eax
  415aaf:	push   ecx
  415ab0:	inc    ecx
  415ab1:	stc    
  415ab2:	les    eax,FWORD PTR [esi-0x64]
  415ab5:	leave  
  415ab6:	jecxz  0x415b21
  415ab8:	fcomp  DWORD PTR [ecx]
  415aba:	call   0x2bf5a90c
  415abf:	mov    ch,0xa5
  415ac1:	ror    DWORD PTR [eax],cl
  415ac3:	cmp    BYTE PTR [esi],0x37
  415ac6:	not    BYTE PTR [eax+0x76645a26]
  415acc:	pop    esi
  415acd:	inc    DWORD PTR [esi-0x3b976370]
  415ad3:	bound  ebp,QWORD PTR [esi]
  415ad5:	mov    ds:0x930d50b8,eax
  415ada:	xor    DWORD PTR [esi],ebp
  415adc:	mov    edx,0xc8d3b0c9
  415ae1:	jmp    FWORD PTR [edx+0x43]
  415ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ae5:	nop
  415ae6:	dec    esp
  415ae7:	mov    eax,0xf0bdd534
  415aec:	out    0x3d,eax
  415aee:	bound  ecx,QWORD PTR [eax-0x625dff51]
  415af4:	cmp    BYTE PTR [esi+0x7089e43b],0x5d
  415afb:	arpl   bx,sp
  415afd:	into   
  415afe:	xchg   DWORD PTR [edx-0x581d646a],edi
  415b04:	int3   
  415b05:	push   0x12e86278
  415b0a:	fwait
  415b0b:	adc    dl,dh
  415b0d:	dec    eax
  415b0e:	xor    DWORD PTR [edx],eax
  415b10:	imul   ebx,DWORD PTR [ebx-0x34c4e2b2],0x31e53df2
  415b1a:	popa   
  415b1b:	loop   0x415b7b
  415b1d:	adc    ch,cl
  415b1f:	mov    BYTE PTR [edx],cl
  415b21:	ret    0x421d
  415b24:	jno    0x415b86
  415b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b27:	push   cs
  415b28:	sbb    ah,BYTE PTR [edx]
  415b2a:	mov    edx,0x768e5efa
  415b2f:	mov    dh,0x85
  415b31:	ins    BYTE PTR es:[edi],dx
  415b32:	das    
  415b33:	fst    QWORD PTR [ecx+0x1a5d85aa]
  415b39:	(bad)  
  415b3a:	jl     0x415b20
  415b3c:	add    ecx,DWORD PTR [edi+0x47619406]
  415b42:	xchg   esp,eax
  415b43:	leave  
  415b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b45:	sbb    al,0x8
  415b47:	sbb    eax,0x78c96b66
  415b4c:	xchg   ebp,eax
  415b4d:	into   
  415b4e:	mov    esi,0xe600878c
  415b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b54:	add    eax,0x4a645918
  415b59:	sub    DWORD PTR [ecx+0x4e],esp
  415b5c:	les    ebx,FWORD PTR [edx]
  415b5e:	mov    eax,0xd98347c2
  415b63:	lds    ebx,FWORD PTR [ebx]
  415b65:	inc    ebp
  415b66:	repnz scas eax,DWORD PTR es:[edi]
  415b68:	adc    al,0x6e
  415b6a:	adc    al,BYTE PTR [edx-0x44]
  415b6d:	loop   0x415bdf
  415b6f:	imul   esp,ebp,0xffffffa7
  415b72:	sub    BYTE PTR [eax+ebx*8],dl
  415b75:	cmp    cl,ch
  415b77:	mov    BYTE PTR [eax],bl
  415b79:	push   ss
  415b7a:	mov    ebp,0xc8aa0f0e
  415b7f:	xchg   esi,eax
  415b80:	rcl    DWORD PTR [ebx+0x17838edb],0xeb
  415b87:	adc    edx,ebx
  415b89:	in     eax,dx
  415b8a:	add    dh,BYTE PTR [edx+0x4f]
  415b8d:	jo     0x415bab
  415b8f:	enter  0xc4d1,0xb1
  415b93:	mov    dl,0x7c
  415b95:	push   ss
  415b96:	mov    cl,0xe5
  415b98:	sar    DWORD PTR [edx-0x1],cl
  415b9b:	retf   0xa56
  415b9e:	push   es
  415b9f:	push   0xc0f76cb8
  415ba4:	lds    ebp,FWORD PTR [ebp-0x40a79c74]
  415baa:	aam    0xba
  415bac:	cli    
  415bad:	xchg   ecx,eax
  415bae:	mov    ecx,0xdf0628cc
  415bb3:	mov    eax,ds:0x275a4a0f
  415bb8:	mov    bl,0x19
  415bba:	scas   al,BYTE PTR es:[edi]
  415bbb:	call   0x3dc6:0x5bdf863b
  415bc2:	sbb    DWORD PTR ds:[edx],edi
  415bc5:	push   cs
  415bc6:	xchg   ax,ax
  415bc8:	sbb    eax,0xd4dc24bc
  415bcd:	sub    BYTE PTR ds:0x31c08889,al
  415bd3:	mov    esi,0xccf16251
  415bd8:	arpl   WORD PTR [eax],dx
  415bda:	shl    DWORD PTR [eiz*8+0x32ab58b6],0xe9
  415be2:	xor    cl,dl
  415be4:	rcl    DWORD PTR [ebx-0x42de9f1b],1
  415bea:	sub    BYTE PTR [esi],ah
  415bec:	mov    dl,0xa9
  415bee:	mov    edi,0x7bc9a67f
  415bf3:	repz fmul QWORD PTR [esi+0x29]
  415bf7:	sbb    eax,0x4bd71f48
  415bfc:	mov    eax,ds:0xe76ae4f5
  415c01:	nop
  415c02:	inc    ecx
  415c03:	sahf   
  415c04:	sbb    DWORD PTR [ebx+0x25],edx
  415c07:	js     0x415c5a
  415c09:	adc    ch,BYTE PTR [ebx+edx*4+0x4b77b9da]
  415c10:	sub    al,0x68
  415c12:	jecxz  0x415c52
  415c14:	scas   eax,DWORD PTR es:[edi]
  415c15:	sbb    bh,dl
  415c17:	jmp    0xe022b02
  415c1c:	push   eax
  415c1d:	or     DWORD PTR [edx],eax
  415c1f:	adc    eax,DWORD PTR [ebp+0x5f]
  415c22:	mov    esp,0x6c0c3a1f
  415c27:	mov    esi,0x6da7011c
  415c2c:	mov    dl,0xf5
  415c2e:	outs   dx,DWORD PTR ds:[esi]
  415c2f:	mov    edx,0x8a3024bc
  415c34:	mov    ch,0xd5
  415c36:	add    cl,BYTE PTR [ebp+0x7a]
  415c39:	popa   
  415c3a:	push   cs
  415c3b:	and    al,BYTE PTR [edx-0x323b91b]
  415c41:	xor    dl,BYTE PTR [ecx-0x56]
  415c44:	test   eax,0xe5ec9929
  415c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4a:	push   eax
  415c4b:	or     dh,BYTE PTR cs:[ecx+0x537993ec]
  415c52:	mov    bl,BYTE PTR [ebx]
  415c54:	shl    DWORD PTR [edi],1
  415c56:	xor    BYTE PTR [edx],ch
  415c58:	ins    BYTE PTR es:[edi],dx
  415c59:	adc    eax,0x7f2242a3
  415c5e:	fcom   DWORD PTR [edx]
  415c60:	stos   BYTE PTR es:[edi],al
  415c61:	inc    dl
  415c63:	ins    BYTE PTR es:[edi],dx
  415c64:	(bad)  
  415c65:	mov    ebp,0xb303bcb2
  415c6a:	mov    edx,0x7fa4f06c
  415c6f:	xlat   BYTE PTR ds:[ebx]
  415c70:	(bad)  
  415c71:	js     0x415c72
  415c73:	popa   
  415c74:	xchg   ecx,eax
  415c75:	test   DWORD PTR [ebx+eax*1],eax
  415c78:	hlt    
  415c79:	enter  0x7b75,0x16
  415c7d:	and    BYTE PTR [edi],dh
  415c7f:	je     0x415cdb
  415c81:	and    eax,0x9840fa1a
  415c86:	arpl   WORD PTR [edi+0x3f949e41],cx
  415c8c:	fild   QWORD PTR [ebx]
  415c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c8f:	lods   eax,DWORD PTR ds:[esi]
  415c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c91:	sbb    eax,0x138e933e
  415c96:	idiv   DWORD PTR [edi]
  415c98:	sub    eax,0xcd060163
  415c9d:	mov    fs,WORD PTR [ecx+0x35]
  415ca0:	and    DWORD PTR [ebx+0x35f9d464],0xb5ec7323
  415caa:	or     edi,DWORD PTR [eax+0x2395a314]
  415cb0:	lods   eax,DWORD PTR ds:[esi]
  415cb1:	lods   al,BYTE PTR ds:[esi]
  415cb2:	in     eax,0xa3
  415cb4:	sub    BYTE PTR ds:0xa392d80b,0x50
  415cbb:	and    BYTE PTR [esi+0x3d],0x8f
  415cbf:	adc    dl,ah
  415cc1:	jge    0x415d30
  415cc3:	ins    BYTE PTR es:[edi],dx
  415cc4:	scas   al,BYTE PTR es:[edi]
  415cc5:	sbb    eax,0x97450fe2
  415cca:	gs cmp al,0x6e
  415ccd:	into   
  415cce:	jmp    0xdd301c2e
  415cd3:	and    al,0x81
  415cd5:	mov    edx,ecx
  415cd7:	and    BYTE PTR [ebp+eiz*8-0x42],0xc1
  415cdc:	das    
  415cdd:	push   cs
  415cde:	hlt    
  415cdf:	and    BYTE PTR [esi+ebp*1],ah
  415ce2:	out    0xec,al
  415ce4:	xchg   edi,eax
  415ce5:	jb     0x415c8d
  415ce7:	push   0xffffff8e
  415ce9:	mov    ah,0xc2
  415ceb:	js     0x415cfb
  415ced:	call   0xd73e9dfb
  415cf2:	and    al,0x13
  415cf4:	mov    eax,ds:0xd63299f8
  415cf9:	lods   al,BYTE PTR ds:[esi]
  415cfa:	mov    dx,0x8f0f
  415cfe:	jecxz  0x415d60
  415d00:	xchg   ecx,eax
  415d01:	push   esi
  415d02:	mov    eax,0xccf5ff1f
  415d07:	pop    ss
  415d08:	cwde   
  415d09:	jno    0x415cf9
  415d0b:	dec    ebp
  415d0c:	push   ss
  415d0d:	icebp  
  415d0e:	loopne 0x415d08
  415d10:	dec    edx
  415d11:	mov    cl,0xb
  415d13:	adc    ch,BYTE PTR [edx+0x37aa6177]
  415d19:	dec    ebx
  415d1a:	dec    ecx
  415d1b:	pop    es
  415d1c:	inc    ecx
  415d1d:	sbb    DWORD PTR [esi+0x974b636],0x4e
  415d24:	jmp    0x415d20
  415d26:	sbb    BYTE PTR [ebx],bl
  415d28:	xor    eax,0x54ae1a2
  415d2d:	ja     0x415da7
  415d2f:	mov    edi,0x62838ea7
  415d34:	rol    cl,0x63
  415d37:	scas   al,BYTE PTR es:[edi]
  415d38:	ds addr16 add al,0xa9
  415d3c:	stos   BYTE PTR es:[edi],al
  415d3d:	dec    BYTE PTR [ecx+ebp*1]
  415d40:	xchg   edi,eax
  415d41:	cmp    cl,BYTE PTR [esi]
  415d43:	push   es
  415d44:	jo     0x415d86
  415d46:	cmp    al,0x4f
  415d48:	ja     0x415cd7
  415d4a:	test   BYTE PTR [edi+0x6587aca3],bl
  415d50:	(bad)
  415d54:	inc    edx
  415d55:	repz jecxz 0x415dad
  415d58:	jbe    0x415dac
  415d5a:	sbb    DWORD PTR [ecx+esi*1-0x1],edi
  415d5e:	call   0xde72:0xda5c526f
  415d65:	push   edx
  415d66:	fnstcw WORD PTR [eax]
  415d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d69:	push   esi
  415d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d6b:	push   edx
  415d6c:	ret    0x234e
  415d6f:	and    BYTE PTR [ebx-0x13e4596e],ah
  415d75:	add    BYTE PTR [ebp-0x2a],dl
  415d78:	jecxz  0x415db0
  415d7a:	clc    
  415d7b:	sahf   
  415d7c:	cmp    dl,al
  415d7e:	mov    al,0xc9
  415d80:	call   0xf813:0x9e60c26c
  415d87:	enter  0x1e3d,0xa
  415d8b:	mov    edx,0x23b43b7f
  415d90:	pop    es
  415d91:	aad    0x4a
  415d93:	ret    
  415d94:	mov    bh,BYTE PTR [esi-0x44]
  415d97:	mov    BYTE PTR [ecx],ch
  415d99:	outs   dx,DWORD PTR ds:[esi]
  415d9a:	ffreep st(7)
  415d9c:	mov    ecx,0xeaf8691d
  415da1:	xor    BYTE PTR [eax],al
  415da3:	bound  ebp,QWORD PTR [ecx+eax*1+0x64a17c77]
  415daa:	push   edi
  415dab:	orps   xmm4,XMMWORD PTR [ecx-0x3e]
  415daf:	(bad)
  415db4:	lea    esi,[edx-0x603b7be8]
  415dba:	inc    esp
  415dbb:	adc    esp,DWORD PTR [ebx-0x74]
  415dbe:	aam    0xa8
  415dc0:	sub    BYTE PTR [edi-0x5e098290],0x68
  415dc7:	adc    al,0x87
  415dc9:	(bad)
  415dcd:	push   ds
  415dce:	dec    eax
  415dcf:	add    DWORD PTR [esi-0x4d],edx
  415dd2:	imul   esp,DWORD PTR [ebp-0xa38d03e],0x8162c756
  415ddc:	jae    0x415da2
  415dde:	ret    
  415ddf:	xor    BYTE PTR [esi-0x2c159165],ch
  415de5:	fwait
  415de6:	or     al,BYTE PTR [eax+ebx*1+0x395a7805]
  415ded:	test   al,0x24
  415def:	repz retw 
  415df2:	fisubr WORD PTR [edi+0x103c078c]
  415df8:	clc    
  415df9:	add    eax,0x73b6ce34
  415dfe:	loopne 0x415e46
  415e00:	add    al,0xc4
  415e02:	ret    
  415e03:	xchg   esp,eax
  415e04:	xlat   BYTE PTR ds:[ebx]
  415e05:	ret    
  415e06:	frstor [ebx+0x5afeb61c]
  415e0c:	enter  0x9b29,0x78
  415e10:	xchg   ecx,eax
  415e11:	cwde   
  415e12:	int    0xd6
  415e14:	push   cs
  415e15:	adc    BYTE PTR [ebx-0x7b4dafcd],dh
  415e1b:	loope  0x415e61
  415e1d:	push   esp
  415e1e:	push   eax
  415e1f:	and    edi,DWORD PTR [esi]
  415e21:	sbb    edi,ebx
  415e23:	mov    fs,WORD PTR [ecx-0x3617d29f]
  415e29:	xor    DWORD PTR [ebp-0x42edca45],ebp
  415e2f:	or     eax,esi
  415e31:	lahf   
  415e32:	jle    0x415e08
  415e34:	add    al,0xc2
  415e36:	push   ss
  415e37:	fadd   QWORD PTR [ebp+0x58]
  415e3a:	xor    al,0x5c
  415e3c:	xor    DWORD PTR [eax],edi
  415e3e:	stc    
  415e3f:	gs and al,dl
  415e42:	push   edx
  415e43:	add    esp,ecx
  415e45:	mov    ah,0xd4
  415e47:	pop    es
  415e48:	iret   
  415e49:	clc    
  415e4a:	mov    ebp,0x1465c8ac
  415e4f:	rol    BYTE PTR [ecx-0x4cd3e865],1
  415e55:	mov    ds:0x2465dc45,eax
  415e5a:	jbe    0x415e82
  415e5c:	sbb    BYTE PTR [edi],ch
  415e5e:	ficom  WORD PTR [edi+0x14e8ff82]
  415e64:	icebp  
  415e65:	and    BYTE PTR [ebx+0x62e9c19a],0x66
  415e6c:	mov    al,0x90
  415e6e:	sbb    eax,0x5ff20ab7
  415e73:	fwait
  415e74:	cli    
  415e75:	js     0x415ef0
  415e77:	nop
  415e78:	in     eax,dx
  415e79:	inc    eax
  415e7a:	stos   BYTE PTR es:[edi],al
  415e7b:	pop    esi
  415e7c:	ret    0x10b8
  415e7f:	(bad)  
  415e81:	mov    ch,0xd4
  415e83:	jmp    0x902f0441
  415e88:	lods   eax,DWORD PTR ds:[esi]
  415e89:	mov    esp,eax
  415e8b:	fnstsw WORD PTR [eax+0xb]
  415e8e:	int    0x9c
  415e90:	push   esi
  415e91:	jge    0x415e78
  415e93:	jo     0x415eea
  415e95:	add    bh,0xd6
  415e98:	(bad)  
  415e99:	repnz xchg edi,eax
  415e9b:	aas    
  415e9c:	cmp    al,cl
  415e9e:	pop    esi
  415e9f:	cdq    
  415ea0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415ea2:	mov    cl,0x94
  415ea4:	mov    bh,0xbf
  415ea6:	xlat   BYTE PTR ds:[ebx]
  415ea7:	sub    ch,BYTE PTR [esi-0x3e]
  415eaa:	and    eax,0x90030c89
  415eaf:	and    ah,BYTE PTR [edi]
  415eb1:	mov    ds:0xf1db5d42,eax
  415eb6:	mov    al,0xaf
  415eb8:	jbe    0x415f29
  415eba:	(bad)  
  415ebb:	ds es inc edx
  415ebe:	iret   
  415ebf:	inc    eax
  415ec0:	jg     0x415e7a
  415ec2:	pop    esi
  415ec3:	pop    eax
  415ec4:	mov    ds:0x43a60e21,al
  415ec9:	mov    esi,0xacebcc12
  415ece:	add    esp,DWORD PTR [edx-0x1d1faecd]
  415ed4:	daa    
  415ed5:	xchg   esp,eax
  415ed6:	call   0x46c55c1
  415edb:	or     dl,BYTE PTR [ebp-0xb]
  415ede:	mov    ecx,0x1eed85fb
  415ee3:	cmovp  esp,DWORD PTR [esi+0x3b]
  415ee7:	div    dl
  415ee9:	adc    eax,0x40f8b621
  415eee:	cmc    
  415eef:	hlt    
  415ef0:	push   ebp
  415ef1:	retf   0x37b0
  415ef4:	cdq    
  415ef5:	js     0x415eb4
  415ef7:	je     0x415f3c
  415ef9:	pop    ds
  415efa:	dec    ebx
  415efb:	pop    edx
  415efc:	sbb    dl,BYTE PTR [ecx+0x49]
  415eff:	out    0xa8,al
  415f01:	stc    
  415f02:	mov    ds:0xef4e7092,al
  415f07:	push   esp
  415f08:	hlt    
  415f09:	jnp    0x415f6f
  415f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0c:	aam    0x3f
  415f0e:	scas   al,BYTE PTR es:[edi]
  415f0f:	pop    ecx
  415f10:	push   edi
  415f11:	cmp    bh,BYTE PTR [ebx-0x51f8116a]
  415f17:	dec    ebp
  415f18:	pop    edi
  415f19:	scas   eax,DWORD PTR es:[edi]
  415f1a:	adc    eax,0x6ddd3b74
  415f1f:	aam    0x3e
  415f21:	pop    esi
  415f22:	sbb    BYTE PTR [edi],ch
  415f24:	dec    edx
  415f25:	fstp   QWORD PTR [ecx+0x7b58c70f]
  415f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f2c:	ja     0x415f72
  415f2e:	and    BYTE PTR [edx],ah
  415f30:	retf   
  415f31:	push   esi
  415f32:	shl    DWORD PTR [edi+0x2b],0x3f
  415f36:	ins    DWORD PTR es:[edi],dx
  415f37:	sbb    al,0xf3
  415f39:	mov    dh,0x6
  415f3b:	fist   DWORD PTR [ecx]
  415f3d:	mov    edx,0x5baec217
  415f42:	rcr    al,0x15
  415f45:	nop
  415f46:	lea    edi,[edi-0x43]
  415f49:	sahf   
  415f4a:	in     eax,0x9b
  415f4c:	adc    edx,DWORD PTR [eax-0x3d]
  415f4f:	xor    eax,0xc3af3f7
  415f54:	jo     0x415ef5
  415f56:	fst    st(1)
  415f58:	add    ch,al
  415f5a:	fstp   QWORD PTR [edi]
  415f5c:	push   cs
  415f5d:	adc    ah,bl
  415f5f:	mov    ds:0xb025eccb,eax
  415f64:	gs mov edi,0xc1564b29
  415f6a:	ret    0xa47
  415f6d:	imul   ebp,edx,0x9354259c
  415f73:	mov    ebx,0xb744c949
  415f78:	dec    ebx
  415f79:	lock inc eax
  415f7b:	scas   eax,DWORD PTR es:[edi]
  415f7c:	jcxz   0x415fee
  415f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f80:	das    
  415f81:	pop    edi
  415f82:	mov    ecx,DWORD PTR [edi-0x14b022bf]
  415f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f89:	push   cs
  415f8a:	push   esi
  415f8b:	adc    BYTE PTR [esi+0x7192e48d],cl
  415f91:	stc    
  415f92:	pop    ss
  415f93:	mov    eax,0xc96b4e91
  415f98:	call   0xd8868a1c
  415f9d:	retf   
  415f9e:	(bad)  
  415fa0:	arpl   WORD PTR [edx+0x4a],dx
  415fa3:	loop   0x415f9f
  415fa5:	inc    eax
  415fa6:	outs   dx,BYTE PTR ds:[esi]
  415fa7:	mov    esp,0x64a89b89
  415fac:	xchg   ecx,eax
  415fad:	jns    0x415f7f
  415faf:	inc    esp
  415fb0:	mov    bl,0xd6
  415fb2:	or     al,0x7d
  415fb4:	stc    
  415fb5:	out    dx,eax
  415fb6:	jnp    0x415f69
  415fb8:	dec    esi
  415fb9:	sub    al,0x3
  415fbb:	loopne 0x415fe6
  415fbd:	loopne 0x416033
  415fbf:	sbb    DWORD PTR [esi+0x5a],ebx
  415fc2:	push   ebx
  415fc3:	dec    esp
  415fc4:	mov    bl,0xdc
  415fc6:	adc    BYTE PTR [eax+0x7f],al
  415fc9:	jae    0x415ff2
  415fcb:	adc    eax,0x32e00e1e
  415fd0:	pop    ecx
  415fd1:	jg     0x415fb0
  415fd3:	lods   eax,DWORD PTR ds:[esi]
  415fd4:	jp     0x415fc8
  415fd6:	xor    DWORD PTR [edx+0x61],ebx
  415fd9:	jns    0x415fde
  415fdb:	pusha  
  415fdc:	push   esi
  415fdd:	jge    0x416030
  415fdf:	fistp  QWORD PTR [edx+esi*2]
  415fe2:	(bad)  
  415fe3:	xor    al,0xc5
  415fe5:	int    0xcf
  415fe7:	push   ebx
  415fe8:	inc    ebp
  415fe9:	push   ebx
  415fea:	out    dx,al
  415feb:	jbe    0x41602b
  415fed:	jge    0x415ff5
  415fef:	jo     0x416066
  415ff1:	mov    DWORD PTR [ebx-0x1f],esi
  415ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff5:	call   DWORD PTR [ecx+0x23182a36]
  415ffb:	and    eax,0x6565dcb9
  416000:	cld    
  416001:	xor    DWORD PTR [eax+0x24],0x3c5a7dd
  416008:	sub    al,0x70
  41600a:	shr    dl,0x1e
  41600d:	ds js  0x416022
  416010:	adc    BYTE PTR [edx+0x1d],al
  416013:	push   esp
  416014:	fbld   TBYTE PTR [ebx]
  416016:	push   edi
  416017:	rcl    BYTE PTR [esi+0x7c],0x87
  41601b:	xchg   ebp,eax
  41601c:	inc    edi
  41601d:	jno    0x415fdd
  41601f:	xchg   ebx,eax
  416020:	out    dx,al
  416021:	out    dx,eax
  416022:	sbb    edi,ecx
  416024:	sar    BYTE PTR [edi+0x13],cl
  416027:	push   ds
  416028:	sbb    eax,0xe2aa0daa
  41602d:	sbb    eax,0xeff24ca8
  416032:	push   ecx
  416033:	rcl    esi,1
  416035:	enter  0x49cd,0x6d
  416039:	push   edi
  41603a:	mov    dl,0x83
  41603c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41603d:	adc    ah,BYTE PTR [ecx+0xf543f0d]
  416043:	or     eax,0x35c086b9
  416048:	cld    
  416049:	es mov ebp,0x50992cff
  41604f:	push   esp
  416050:	and    ah,0x29
  416053:	jmp    0x416018
  416055:	jae    0x415fec
  416057:	ds push esi
  416059:	addr16 mov al,ds:0x76d1
  41605d:	sub    DWORD PTR [esp+ebx*4],esi
  416060:	and    esi,DWORD PTR [esi-0x6ff7c7c0]
  416066:	sar    ch,cl
  416068:	sub    al,BYTE PTR [ebx-0x7a]
  41606b:	je     0x416071
  41606d:	fwait
  41606e:	mov    ah,0x67
  416070:	sub    BYTE PTR [eax-0x4224c0fb],0xed
  416077:	(bad)
  41607b:	in     al,0xec
  41607d:	dec    edx
  41607e:	scas   al,BYTE PTR es:[edi]
  41607f:	sar    bl,cl
  416081:	push   ecx
  416082:	lock pop edi
  416084:	popa   
  416085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416086:	pop    ds
  416087:	cs sub eax,0xf104a522
  41608d:	jg     0x4160b8
  41608f:	(bad)  
  416090:	repz popa 
  416092:	mov    bl,0xc3
  416094:	call   0x36c:0x6c839549
  41609b:	fistp  DWORD PTR [eax+ebx*2]
  41609e:	inc    edi
  41609f:	int    0xc8
  4160a1:	in     eax,dx
  4160a2:	enter  0xb812,0x1a
  4160a6:	bound  esi,QWORD PTR [eax]
  4160a8:	xor    esi,eax
  4160aa:	push   ebp
  4160ab:	mov    dl,0x83
  4160ad:	jl     0x416068
  4160af:	sub    esp,DWORD PTR [ecx+0x3a07458c]
  4160b5:	push   esi
  4160b6:	jae    0x4160d5
  4160b8:	scas   eax,DWORD PTR es:[edi]
  4160b9:	inc    esp
  4160ba:	cmp    al,0x2
  4160bc:	and    eax,0x138b13a0
  4160c1:	jo     0x4160ef
  4160c3:	jno    0x41609c
  4160c5:	fisttp QWORD PTR [edi+0x7c5f86c5]
  4160cb:	pushf  
  4160cc:	bound  esp,QWORD PTR [ebp-0x4e]
  4160cf:	cwde   
  4160d0:	dec    esp
  4160d1:	pop    esp
  4160d2:	jge    0x41608e
  4160d4:	sbb    BYTE PTR [esi+0x73db7819],al
  4160da:	hlt    
  4160db:	repz mov al,0x4c
  4160de:	xchg   ecx,eax
  4160df:	inc    esi
  4160e0:	xchg   ebx,eax
  4160e1:	stos   DWORD PTR es:[edi],eax
  4160e2:	xlat   BYTE PTR ds:[ebx]
  4160e3:	cmp    ch,BYTE PTR [edi]
  4160e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e6:	mov    esi,0x58ef95b2
  4160eb:	xchg   esi,eax
  4160ec:	jns    0x416081
  4160ee:	cmp    ebp,0x74
  4160f1:	mov    BYTE PTR [ecx-0x13dc01cf],dl
  4160f7:	dec    ebx
  4160f8:	jmp    0x416125
  4160fa:	int    0x76
  4160fc:	or     BYTE PTR [esi],0xba
  4160ff:	dec    ebx
  416100:	stos   DWORD PTR es:[edi],eax
  416101:	pop    eax
  416102:	inc    eax
  416103:	mov    bh,0x1f
  416105:	(bad)  
  416106:	stos   BYTE PTR es:[edi],al
  416107:	mov    dl,0xb0
  416109:	rcr    al,cl
  41610b:	out    dx,eax
  41610c:	push   ss
  41610d:	ret    
  41610e:	mov    al,0xb4
  416110:	cmp    BYTE PTR [edi],bl
  416112:	sub    eax,0x2fbfbf33
  416117:	xor    al,0xb3
  416119:	push   ds
  41611a:	lahf   
  41611b:	jnp    0x4160bd
  41611d:	lahf   
  41611e:	dec    esp
  41611f:	sahf   
  416120:	jmp    0x41611b
  416122:	sbb    eax,0xa088ab51
  416127:	cdq    
  416128:	inc    ecx
  416129:	ins    BYTE PTR es:[edi],dx
  41612a:	stc    
  41612b:	shr    DWORD PTR [edi-0x13b881ea],0x49
  416132:	sbb    eax,0x270ee0a6
  416137:	retf   0x5712
  41613a:	and    al,0x36
  41613c:	mov    ch,BYTE PTR [edi]
  41613e:	inc    ebx
  41613f:	cmovae ebx,esi
  416142:	mov    al,0x7b
  416144:	int    0x43
  416146:	push   edi
  416147:	mov    eax,ds:0x7d336a7a
  41614c:	loop   0x416110
  41614e:	imul   ebx,DWORD PTR [esi-0x423379a3],0xb3bb9d75
  416158:	call   0x8c58bdbf
  41615d:	std    
  41615e:	inc    esi
  41615f:	pusha  
  416160:	add    eax,0xf0abea02
  416165:	clc    
  416166:	aaa    
  416167:	repz rol DWORD PTR [eax+0x7],0xa9
  41616c:	or     BYTE PTR [edi-0x13e27840],dl
  416172:	imul   DWORD PTR [esi+ebp*1+0x70]
  416176:	adc    ecx,ecx
  416178:	jp     0x41616d
  41617a:	cmp    eax,0x5296b63b
  41617f:	ja     0x4161c0
  416181:	pushf  
  416182:	repz into 
  416184:	int    0x6f
  416186:	xchg   esi,eax
  416187:	sbb    al,0x60
  416189:	ins    BYTE PTR es:[edi],dx
  41618a:	xor    BYTE PTR [eax-0x6f],0xb1
  41618e:	jmp    0x7b15:0x14d296fe
  416195:	into   
  416196:	sub    BYTE PTR [ebx],0xb9
  416199:	xor    BYTE PTR gs:[ebx-0x38],bl
  41619d:	shr    BYTE PTR [edx],cl
  41619f:	scas   eax,DWORD PTR es:[edi]
  4161a0:	out    0x32,eax
  4161a2:	pop    ecx
  4161a3:	dec    esi
  4161a4:	add    eax,0x5185993b
  4161a9:	mov    eax,ds:0xe8c4bcec
  4161ae:	repz dec esp
  4161b0:	aas    
  4161b1:	imul   edi,eax,0x2cadffe4
  4161b7:	or     DWORD PTR [ecx-0x2a],ebx
  4161ba:	dec    edi
  4161bb:	mov    eax,ds:0x1ad3e1bf
  4161c0:	out    0x81,al
  4161c2:	xor    DWORD PTR [edx],0xffffffd0
  4161c5:	lea    esi,ds:0xb4989d94
  4161cb:	ds jnp 0x416172
  4161ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161cf:	outs   dx,DWORD PTR ds:[esi]
  4161d0:	add    dh,bh
  4161d2:	inc    edi
  4161d3:	jl     0x4161ee
  4161d5:	lahf   
  4161d6:	lds    esp,FWORD PTR [ecx-0x6af35bb5]
  4161dc:	xchg   ebx,eax
  4161dd:	int    0xc6
  4161df:	cs stos DWORD PTR es:[edi],eax
  4161e1:	fsubr  QWORD PTR [edx]
  4161e3:	pop    edi
  4161e4:	inc    esp
  4161e5:	pop    edi
  4161e6:	gs cmp al,0x2c
  4161e9:	sbb    bh,dh
  4161eb:	or     eax,0x4cf8e1a5
  4161f0:	(bad)
  4161f3:	(bad)  
  4161f4:	mov    bl,0xb3
  4161f6:	les    esi,FWORD PTR [ebp+esi*1-0x3da3b3ed]
  4161fd:	mov    ah,0xe5
  4161ff:	repz push 0x1b
  416202:	sbb    BYTE PTR [edx+0x48],dl
  416205:	push   ss
  416206:	add    edx,ebp
  416208:	test   al,0x52
  41620a:	pop    eax
  41620b:	test   BYTE PTR [edx+ebx*8+0x20fc4436],ah
  416212:	adc    BYTE PTR [ecx],bh
  416214:	gs fwait
  416216:	and    edi,ebp
  416218:	lods   eax,DWORD PTR ds:[esi]
  416219:	sbb    al,0x23
  41621b:	pusha  
  41621c:	push   esi
  41621d:	jno    0x4161cb
  41621f:	hlt    
  416220:	mov    eax,0xfef1d140
  416225:	and    BYTE PTR [ebp+0x678adf60],ah
  41622b:	xacquire xchg BYTE PTR [ebp-0x53a762e2],dh
  416232:	adc    BYTE PTR [eax-0x7d],0xed
  416236:	pop    es
  416237:	out    0xfb,al
  416239:	or     dl,ah
  41623b:	ja     0x416201
  41623d:	test   dl,ah
  41623f:	adc    edi,DWORD PTR [esi]
  416241:	push   0x6bc026be
  416246:	jge    0x41625d
  416248:	add    edx,DWORD PTR [ebx+0xcfe2279]
  41624e:	dec    ebp
  41624f:	mov    dl,0xf5
  416251:	sti    
  416252:	movq   QWORD PTR [ebx+eiz*4],mm2
  416256:	stc    
  416257:	sar    BYTE PTR [ebp-0x146ce0ae],1
  41625d:	dec    ebp
  41625e:	mov    eax,esp
  416260:	push   DWORD PTR [edx-0x2cd9263a]
  416266:	ficomp WORD PTR [esi-0x7f]
  416269:	fwait
  41626a:	inc    esi
  41626b:	mov    bl,0xb4
  41626d:	xchg   ecx,eax
  41626e:	xchg   edi,eax
  41626f:	adc    ecx,0xefd399d3
  416275:	jl     0x41628f
  416277:	sub    eax,0xedacdbb5
  41627c:	push   ss
  41627d:	ret    0x8a08
  416280:	pop    DWORD PTR [ebp+0x76]
  416283:	sti    
  416284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416285:	cmp    BYTE PTR [esi-0x80],ah
  416288:	mov    ds:0xc361ff1d,al
  41628d:	cmp    ebp,DWORD PTR [ebx+0x2f5acfc5]
  416293:	mov    ch,0x4e
  416295:	cmp    BYTE PTR [esi],al
  416297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416298:	rcr    BYTE PTR [edx],0x66
  41629b:	mov    ebp,DWORD PTR [edx+0x74]
  41629e:	adc    BYTE PTR [edi+esi*4+0x1aaa0dea],bl
  4162a5:	pop    ecx
  4162a6:	pop    ds
  4162a7:	mov    ebp,0x1616329d
  4162ac:	push   edx
  4162ad:	mov    ch,0xdc
  4162af:	aad    0xbf
  4162b1:	mov    dl,0x15
  4162b3:	inc    esp
  4162b4:	dec    esi
  4162b5:	pop    ebx
  4162b6:	xchg   ebx,eax
  4162b7:	dec    ecx
  4162b8:	jg     0x4162ed
  4162ba:	inc    ecx
  4162bb:	bound  esi,QWORD PTR [esi]
  4162bd:	cld    
  4162be:	outs   dx,DWORD PTR ds:[esi]
  4162bf:	cmp    ebx,DWORD PTR [edx-0x7a]
  4162c2:	(bad)  
  4162c3:	lock loope 0x416314
  4162c6:	inc    ebx
  4162c7:	test   al,0x74
  4162c9:	add    ebp,DWORD PTR [ebx+0x6bde0cbe]
  4162cf:	ds leave 
  4162d1:	lea    ebx,[edi+0x1c]
  4162d4:	jl     0x4162eb
  4162d6:	inc    edi
  4162d7:	cdq    
  4162d8:	cmp    eax,0x18a0e09c
  4162dd:	xchg   ax,ax
  4162df:	f2xm1  
  4162e1:	xor    edi,ebx
  4162e3:	stos   BYTE PTR es:[edi],al
  4162e4:	outs   dx,BYTE PTR ds:[esi]
  4162e5:	xchg   ecx,eax
  4162e6:	aad    0x12
  4162e8:	jg     0x4162ea
  4162ea:	sahf   
  4162eb:	push   ss
  4162ec:	xor    edi,DWORD PTR [ebx+ecx*4+0x1]
  4162f0:	or     BYTE PTR [esi+edx*8-0x12a78b37],ah
  4162f7:	loop   0x416367
  4162f9:	cmp    ebx,eax
  4162fb:	jp     0x4162e6
  4162fd:	sub    DWORD PTR [edi+0x2c],0xffffff9d
  416301:	and    bh,bh
  416303:	dec    eax
  416304:	lahf   
  416305:	mov    bh,0xf2
  416307:	mov    ?,WORD PTR [edi]
  416309:	enter  0x2c79,0x14
  41630d:	(bad)  
  41630e:	gs adc bh,0xa1
  416312:	sub    BYTE PTR [eax+0x29aaa35d],0x98
  416319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631a:	add    eax,0xf74647fe
  41631f:	into   
  416320:	retf   0xe92e
  416323:	jbe    0x41635b
  416325:	add    eax,0x4f3da5d1
  41632a:	xchg   esp,eax
  41632b:	(bad)  
  41632c:	ss push esi
  41632e:	ret    
  41632f:	pop    ebp
  416330:	xchg   ebx,eax
  416331:	rcl    DWORD PTR [eax+0x1c56c111],1
  416337:	hlt    
  416338:	clc    
  416339:	retf   0xeea5
  41633c:	mov    bl,0x77
  41633e:	sub    DWORD PTR [edx],ebx
  416340:	in     al,0xa4
  416342:	mov    al,ds:0x40a0d60
  416347:	mov    edi,0x61d5cdd2
  41634c:	inc    esp
  41634d:	push   cs
  41634e:	test   ebx,edi
  416350:	sbb    BYTE PTR [edi-0x4b],al
  416353:	leave  
  416354:	scas   al,BYTE PTR es:[edi]
  416355:	test   DWORD PTR [edx+0x52bb078],ebx
  41635b:	aam    0x16
  41635d:	les    esp,FWORD PTR [edx-0x60]
  416360:	mov    edi,0x594fa11a
  416365:	push   0x45
  416367:	in     al,0x3f
  416369:	inc    esp
  41636a:	cld    
  41636b:	adc    DWORD PTR [ebx+eax*2+0x20980091],eax
  416372:	mov    bh,0xa3
  416374:	inc    eax
  416375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416376:	mov    DWORD PTR [esi-0x61],ebx
  416379:	sar    edx,cl
  41637b:	pushf  
  41637c:	outs   dx,BYTE PTR ds:[esi]
  41637d:	jae    0x4163e3
  41637f:	les    ebx,FWORD PTR [edx+0x4201266f]
  416385:	pop    ebp
  416386:	iret   
  416387:	mov    dl,0xfe
  416389:	in     al,dx
  41638a:	adc    al,0x7d
  41638c:	adc    BYTE PTR [edi+0xc7414a1],0x9e
  416393:	cmp    al,0x51
  416395:	xor    esi,DWORD PTR [edx-0x5fb67713]
  41639b:	and    ah,BYTE PTR [edx]
  41639d:	cmp    ecx,ecx
  41639f:	out    0xb2,al
  4163a1:	mov    al,ds:0x7c312aad
  4163a6:	dec    edi
  4163a7:	xor    ecx,esi
  4163a9:	sub    esp,ebx
  4163ab:	jbe    0x4163b7
  4163ad:	fs loop 0x4163fc
  4163b0:	jns    0x416423
  4163b2:	xor    al,0x21
  4163b4:	cmp    esp,DWORD PTR [eax+0x3fcb4ee6]
  4163ba:	jb     0x416395
  4163bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163bd:	sti    
  4163be:	push   ecx
  4163bf:	div    DWORD PTR [eax-0x1122aad1]
  4163c5:	dec    edi
  4163c6:	push   ss
  4163c7:	and    DWORD PTR [edx+edi*4],eax
  4163ca:	ret    0x7c58
  4163cd:	(bad)  
  4163ce:	inc    esi
  4163cf:	inc    edi
  4163d0:	sar    DWORD PTR [ecx+eiz*1],0xa5
  4163d4:	in     al,dx
  4163d5:	ja     0x416436
  4163d7:	iret   
  4163d8:	cli    
  4163d9:	icebp  
  4163da:	out    0xc7,eax
  4163dc:	pusha  
  4163dd:	test   BYTE PTR [edx-0x1d2cbd9],bl
  4163e3:	aas    
  4163e4:	adc    BYTE PTR [eax-0x31c1e8f],0xe5
  4163eb:	or     BYTE PTR [edi-0x33],bh
  4163ee:	jbe    0x416452
  4163f0:	(bad)  
  4163f1:	out    dx,eax
  4163f2:	mov    DWORD PTR [ebp+0x6d],0xc02260aa
  4163f9:	sub    edi,ebp
  4163fb:	repz shl bl,1
  4163fe:	xchg   esp,eax
  4163ff:	push   ss
  416400:	gs (bad) 
  416402:	push   esi
  416403:	and    eax,0x798f577f
  416408:	adc    DWORD PTR [edx+0x55],0xf4039b6
  41640f:	push   0x5c
  416411:	lods   al,BYTE PTR ds:[esi]
  416412:	mov    ebp,DWORD PTR [ecx-0x52ba5648]
  416418:	ret    0x8f4b
  41641b:	fistp  QWORD PTR [ecx]
  41641d:	add    bh,BYTE PTR [esi+0x77]
  416420:	pop    esi
  416421:	fisub  DWORD PTR [ecx+0x2d]
  416424:	scas   eax,DWORD PTR es:[edi]
  416425:	push   ds
  416426:	xchg   ebp,eax
  416427:	pop    esp
  416428:	push   ebx
  416429:	and    esp,ebp
  41642b:	mov    ds:0xfab1c41b,al
  416430:	sbb    ah,BYTE PTR [esp+eiz*8+0x386b987f]
  416437:	pop    edi
  416438:	aad    0xb9
  41643a:	mov    cl,0xf1
  41643c:	jnp    0x416460
  41643e:	retf   0xd2a3
  416441:	dec    edi
  416442:	fnstcw WORD PTR [esp+eax*2+0x15d9af2b]
  416449:	pop    esp
  41644a:	into   
  41644b:	mov    ch,0xbb
  41644d:	lods   eax,DWORD PTR ds:[esi]
  41644e:	sub    DWORD PTR [ebx],edi
  416450:	daa    
  416451:	mov    bh,0x1a
  416453:	and    al,0x4a
  416455:	xchg   DWORD PTR [ebx-0x32],ecx
  416458:	sar    DWORD PTR [edx-0x44c4b87f],cl
  41645e:	imul   ecx,DWORD PTR [ebp-0x38],0x5238b50
  416465:	push   ecx
  416466:	push   esp
  416467:	mov    ds:0x3aa6dd12,al
  41646c:	rcr    DWORD PTR [ebp-0x1e],1
  41646f:	and    ch,al
  416471:	in     eax,dx
  416472:	or     DWORD PTR [ecx+ebp*1],0x15ba5b88
  416479:	mov    ebp,DWORD PTR [ebx-0x3bc6bbfe]
  41647f:	outs   dx,DWORD PTR ds:[esi]
  416480:	push   esp
  416481:	mov    ch,0x93
  416483:	adc    bl,dh
  416485:	fsubp  st(0),st
  416487:	cld    
  416488:	xor    esp,DWORD PTR [eax+0x11615711]
  41648e:	mov    ebp,0x4931b6a8
  416493:	jmp    0xcda71b7b
  416498:	enter  0x4f8e,0x38
  41649c:	loope  0x4164d1
  41649e:	mov    dl,0x6e
  4164a0:	jns    0x416481
  4164a2:	addr16 hlt 
  4164a4:	or     eax,0x5d142296
  4164a9:	aam    0x66
  4164ab:	cwde   
  4164ac:	bound  esi,QWORD PTR [edi+0x2]
  4164af:	popa   
  4164b0:	in     eax,0xd1
  4164b2:	dec    ecx
  4164b3:	xchg   ecx,eax
  4164b4:	xor    dh,BYTE PTR [edx+0x36]
  4164b7:	jl     0x41645c
  4164b9:	std    
  4164ba:	sahf   
  4164bb:	lods   al,BYTE PTR ds:[esi]
  4164bc:	sub    al,BYTE PTR [ebx]
  4164be:	add    BYTE PTR [edx],bl
  4164c0:	out    0x3d,eax
  4164c2:	xlat   BYTE PTR ds:[ebx]
  4164c3:	xchg   esp,eax
  4164c4:	int    0x7c
  4164c6:	clc    
  4164c7:	xor    edx,0x3b
  4164ca:	dec    ecx
  4164cb:	xchg   ecx,eax
  4164cc:	dec    ebx
  4164cd:	(bad)  
  4164ce:	bswap  ecx
  4164d0:	pop    ebx
  4164d1:	scas   al,BYTE PTR es:[edi]
  4164d2:	push   es
  4164d3:	xchg   edi,eax
  4164d4:	aam    0xbc
  4164d6:	push   edx
  4164d7:	and    ebx,edi
  4164d9:	mov    bl,0x65
  4164db:	and    BYTE PTR [edi+0x6fb0c62c],dh
  4164e1:	and    eax,0x446e5566
  4164e6:	jb     0x41651a
  4164e8:	xor    DWORD PTR [ebx+eax*2-0x4251277f],ebx
  4164ef:	int3   
  4164f0:	in     eax,dx
  4164f1:	inc    esp
  4164f2:	xor    ah,BYTE PTR [ebx-0x2cb6da18]
  4164f8:	mov    DWORD PTR [ebp+0x8],edx
  4164fb:	jmp    0x4189b9
  416500:	mov    edx,DWORD PTR [ebp+0x8]
  416503:	sub    DWORD PTR ds:0x42d018,0x221d
  41650d:	jmp    0x418896
  416512:	sbb    esi,edx
  416514:	sub    al,0xc3
  416516:	jnp    0x4164a3
  416518:	mov    DWORD PTR [ebx+eiz*1+0x60f16ac2],edx
  41651f:	add    al,0x1
  416521:	div    DWORD PTR [ecx]
  416523:	push   edi
  416524:	jns    0x4165a0
  416526:	push   es
  416527:	pop    edi
  416528:	jp     0x4165a4
  41652a:	loopne 0x4164df
  41652c:	outs   dx,BYTE PTR ds:[esi]
  41652d:	sub    esp,esi
  41652f:	jne    0x41658b
  416531:	adc    ecx,0x32
  416534:	pusha  
  416535:	mov    ebp,0x61a5e161
  41653a:	cmp    eax,0x2c913e44
  41653f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416540:	cld    
  416541:	pop    ds
  416542:	jp     0x4165bf
  416544:	jmp    0x4164ec
  416546:	pop    es
  416547:	pop    ecx
  416548:	mov    BYTE PTR cs:0x12e48903,bh
  41654f:	pop    es
  416550:	mov    al,ds:0x543583a7
  416555:	push   esi
  416556:	add    bh,bl
  416558:	data16 fld QWORD PTR [edi]
  41655b:	xchg   DWORD PTR [edi+0x2b],ebx
  41655e:	sub    al,0xa2
  416560:	push   edx
  416561:	sub    ch,0x40
  416564:	das    
  416565:	test   al,0x7f
  416567:	cmp    DWORD PTR [edx-0x1b3df5db],edx
  41656d:	fnsave [esp+ebx*4]
  416570:	into   
  416571:	push   esp
  416572:	or     al,0xbc
  416574:	dec    edi
  416575:	jmp    0xe0b032eb
  41657a:	inc    edi
  41657b:	ret    0x9acc
  41657e:	mov    ds:0xb3406440,eax
  416583:	addr16 add al,0xb0
  416586:	adc    eax,0x3dd4fde7
  41658b:	push   ecx
  41658c:	ror    BYTE PTR [edi+0x618b03fa],1
  416592:	cmp    eax,0x35fb9955
  416597:	mov    ah,BYTE PTR [ebp-0x75630846]
  41659d:	imul   edi,eax,0xb8a1c6f3
  4165a3:	adc    al,0x2b
  4165a5:	mov    ebp,esi
  4165a7:	imul   DWORD PTR [ebx-0x685d32d6]
  4165ad:	push   ss
  4165ae:	cwde   
  4165af:	bound  ebp,QWORD PTR ds:0x520f9e24
  4165b5:	jmp    0xcfdad651
  4165ba:	call   0x6d0748f5
  4165bf:	mov    bh,0x92
  4165c1:	addr16 cs int 0xb9
  4165c5:	sub    dl,dh
  4165c7:	repz xlat BYTE PTR ds:[ebx]
  4165c9:	mov    eax,ds:0xb8286060
  4165ce:	call   0x8c021c8f
  4165d3:	shr    BYTE PTR [eax+0x206d1263],cl
  4165d9:	aad    0x3d
  4165db:	lock (bad) 
  4165de:	cmovge eax,DWORD PTR [ecx]
  4165e1:	dec    BYTE PTR [ebp-0x69]
  4165e4:	inc    edi
  4165e5:	jge    0x416572
  4165e7:	and    eax,DWORD PTR [ecx+0x1b]
  4165ea:	pop    ecx
  4165eb:	push   ss
  4165ec:	dec    ebx
  4165ed:	xchg   ebx,eax
  4165ee:	pop    ebx
  4165ef:	dec    esi
  4165f0:	add    al,0xa
  4165f2:	jae    0x416672
  4165f4:	xchg   esp,eax
  4165f5:	popf   
  4165f6:	(bad)
  4165fa:	mov    DWORD PTR [eax-0x640d87dd],esp
  416600:	pop    esi
  416601:	or     bh,BYTE PTR [ebp+0x2c]
  416604:	neg    BYTE PTR [edx+0x72]
  416607:	and    esp,DWORD PTR [eax-0x54]
  41660a:	and    eax,0x8d5f267
  41660f:	je     0x416657
  416611:	or     BYTE PTR [eax],dh
  416613:	mov    edi,0x3ad2e318
  416618:	or     DWORD PTR [ecx+0x76175806],ecx
  41661e:	jns    0xe0a975f8
  416624:	sub    DWORD PTR [ebp-0x6e],ebx
  416627:	outs   dx,BYTE PTR ds:[esi]
  416628:	sub    eax,0x73884f37
  41662d:	cmp    ebx,edi
  41662f:	jp     0x4165c2
  416631:	adc    esp,esp
  416633:	xor    DWORD PTR [edx+ebp*4+0x2c],ebx
  416637:	mov    ah,0x9a
  416639:	sti    
  41663a:	mov    esp,esp
  41663c:	mov    bl,0xf9
  41663e:	out    dx,eax
  41663f:	sub    ah,bl
  416641:	sahf   
  416642:	cmp    esi,esp
  416644:	mov    ds:0xe7c57d81,eax
  416649:	mov    ebx,0x952609aa
  41664e:	xor    DWORD PTR [ebx+0x34b7812],esp
  416654:	fist   WORD PTR [ebp+0x414536cb]
  41665a:	sbb    al,bh
  41665c:	mov    edx,0xedfe9bdd
  416661:	ror    BYTE PTR [edx-0x6e],cl
  416664:	test   eax,0x1cde6680
  416669:	lahf   
  41666a:	aas    
  41666b:	loope  0x41665f
  41666d:	loopne 0x41665d
  41666f:	mov    edi,0x413e6f41
  416674:	or     eax,0xdc44c23c
  416679:	xchg   esi,eax
  41667a:	(bad)  
  41667b:	xor    DWORD PTR [edi+0x75aee890],ebp
  416681:	and    eax,0x87131a85
  416686:	adc    DWORD PTR [ecx+ecx*2],edi
  416689:	loop   0x4166e2
  41668b:	(bad)  
  41668c:	rol    BYTE PTR [esi+0x6990ef42],cl
  416692:	jmp    0x416692
  416694:	or     ah,bl
  416696:	cmp    BYTE PTR [esi+0x4ad3bab3],al
  41669c:	(bad)  
  41669e:	xchg   ecx,eax
  41669f:	xlat   BYTE PTR ds:[ebx]
  4166a0:	push   edi
  4166a1:	dec    edi
  4166a2:	and    bh,cl
  4166a4:	rep outs dx,DWORD PTR ds:[esi]
  4166a6:	les    esp,FWORD PTR [ecx+0x9]
  4166a9:	js     0x41670d
  4166ab:	jle    0x4166ee
  4166ad:	mov    ah,0x25
  4166af:	aad    0xd8
  4166b1:	(bad)  
  4166b2:	aam    0x73
  4166b4:	icebp  
  4166b5:	data16 sahf 
  4166b7:	xor    ch,bl
  4166b9:	sub    bh,ah
  4166bb:	mov    ebp,DWORD PTR [ebx-0x63]
  4166be:	ss pop ecx
  4166c0:	xchg   esp,eax
  4166c1:	inc    eax
  4166c2:	inc    ebp
  4166c3:	add    ecx,DWORD PTR [edx+0x17]
  4166c6:	outs   dx,BYTE PTR ds:[esi]
  4166c7:	xchg   ebx,eax
  4166c8:	scas   al,BYTE PTR es:[edi]
  4166c9:	imul   esi,ebx,0x2acbaa23
  4166cf:	dec    eax
  4166d0:	pop    es
  4166d1:	aad    0x84
  4166d3:	out    dx,al
  4166d4:	mov    al,0x27
  4166d6:	xor    BYTE PTR [esp+ecx*4],0x7e
  4166da:	pop    ss
  4166db:	stc    
  4166dc:	add    BYTE PTR [ebx+0x189f1051],bh
  4166e2:	pop    edx
  4166e3:	arpl   WORD PTR ss:[edi+ecx*8],bp
  4166e7:	jge    0x41669d
  4166e9:	dec    ebp
  4166ea:	repz cwde 
  4166ec:	ins    DWORD PTR es:[edi],dx
  4166ed:	cdq    
  4166ee:	adc    eax,0x26a4230f
  4166f3:	fadd   QWORD PTR [eax+ebp*4]
  4166f6:	inc    ebp
  4166f7:	push   es
  4166f8:	out    0xc4,eax
  4166fa:	test   DWORD PTR [edx-0x4c],0x2e7cf30b
  416701:	jge    0x416733
  416703:	in     al,dx
  416704:	push   ss
  416705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416706:	adc    al,0x35
  416708:	je     0x4166e0
  41670a:	push   ss
  41670b:	(bad)
  41670e:	arpl   dx,si
  416710:	sti    
  416711:	xchg   esp,eax
  416712:	adc    DWORD PTR [edi+0x62d276e2],esp
  416718:	loope  0x416784
  41671a:	retf   
  41671b:	fcomp  QWORD PTR [ecx-0x5ba2555b]
  416721:	(bad)  [edi+0x29]
  416724:	clc    
  416725:	xor    DWORD PTR [ecx-0x41],edi
  416728:	pushf  
  416729:	jge    0x416786
  41672b:	pop    es
  41672c:	das    
  41672d:	jne    0x416725
  41672f:	out    dx,al
  416730:	mov    edi,0x782085ee
  416735:	sub    BYTE PTR [ebx],0x70
  416738:	in     al,0xfd
  41673a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673b:	in     eax,0xd6
  41673d:	adc    eax,0x5e33af41
  416742:	adc    DWORD PTR ds:0x5f0deba0,ebp
  416748:	add    BYTE PTR [edx],ah
  41674a:	mov    bh,0xbc
  41674c:	retf   0xeee4
  41674f:	pop    edi
  416750:	retf   
  416751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416752:	cmp    ecx,edi
  416754:	sbb    BYTE PTR [eax-0x354a9d50],dl
  41675a:	dec    eax
  41675b:	pop    edi
  41675c:	xchg   DWORD PTR [edx+ecx*1+0x64],edi
  416760:	mov    eax,ds:0x7f89212d
  416765:	dec    eax
  416766:	fistp  WORD PTR [edi+0x37]
  416769:	addr16 jp 0x416714
  41676c:	push   eax
  41676d:	popf   
  41676e:	loope  0x41677d
  416770:	mov    ecx,0xc49cff2e
  416775:	test   eax,0xd4cdc8c1
  41677a:	ins    DWORD PTR es:[edi],dx
  41677b:	into   
  41677c:	mov    ds:0x5fdbc0f5,al
  416781:	loopne 0x4167a7
  416783:	jns    0x416710
  416785:	cld    
  416786:	jg     0x4167b6
  416788:	test   DWORD PTR [ebp+0x72],edx
  41678b:	add    edi,DWORD PTR [ecx+ebp*1]
  41678e:	retf   0xd847
  416791:	dec    eax
  416792:	or     eax,0x589771a9
  416797:	rcl    BYTE PTR [edx],1
  416799:	aad    0xdf
  41679b:	out    dx,al
  41679c:	int3   
  41679d:	pop    ss
  41679e:	fadd   DWORD PTR [eax]
  4167a0:	mov    eax,0x4f4d792b
  4167a5:	inc    esp
  4167a6:	jne    0x416813
  4167a8:	add    eax,0x8117c46b
  4167ad:	lahf   
  4167ae:	idiv   DWORD PTR [ecx-0x35]
  4167b1:	aas    
  4167b2:	and    DWORD PTR [esi-0x44],edx
  4167b5:	sbb    BYTE PTR [eax-0x62c91436],dh
  4167bb:	pop    edx
  4167bc:	pop    ss
  4167bd:	(bad)  
  4167be:	fwait
  4167bf:	call   0x1d5e5afa
  4167c4:	call   0x44a3:0x530b23f8
  4167cb:	out    dx,al
  4167cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167cd:	mov    ch,0xf3
  4167cf:	xchg   edi,eax
  4167d0:	aaa    
  4167d1:	pop    es
  4167d2:	jns    0x416793
  4167d4:	sub    al,0x25
  4167d6:	inc    edx
  4167d7:	out    dx,al
  4167d8:	jmp    0x30fd:0xc4a6ff5d
  4167df:	fwait
  4167e0:	jnp    0x41680d
  4167e2:	sub    al,0xd1
  4167e4:	(bad)  
  4167e5:	cld    
  4167e6:	popf   
  4167e7:	push   esi
  4167e8:	clc    
  4167e9:	sub    esp,DWORD PTR [eax]
  4167eb:	fldenv [ecx+0x1b3972dc]
  4167f1:	adc    al,ah
  4167f3:	mov    ebx,0x7afee116
  4167f8:	(bad)  
  4167f9:	push   0xfffffff2
  4167fb:	inc    ecx
  4167fc:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167fe:	mov    ebp,0xd30ac226
  416803:	in     eax,0x5d
  416805:	out    0x1a,eax
  416807:	pop    ebx
  416808:	fdivp  st(7),st
  41680a:	call   0x3629:0x19ebdf73
  416811:	xchg   edi,eax
  416812:	repz pop esp
  416814:	retf   0x6f8a
  416817:	out    0xa8,eax
  416819:	(bad)  
  41681a:	cs icebp 
  41681c:	imul   esi,DWORD PTR [esi+0xc],0xdfabf65f
  416823:	cmp    BYTE PTR [ecx],0xba
  416826:	dec    esi
  416827:	loop   0x416895
  416829:	sar    ecx,cl
  41682b:	mov    ds:0x52993402,eax
  416830:	sti    
  416831:	add    ecx,DWORD PTR [ebp-0x3a]
  416834:	neg    DWORD PTR ss:[ecx]
  416837:	pushf  
  416838:	scas   eax,DWORD PTR es:[edi]
  416839:	mov    al,ds:0xf5ed33db
  41683e:	or     al,0x5
  416840:	push   es
  416841:	cmc    
  416842:	in     eax,dx
  416843:	push   ss
  416844:	mov    edx,0x227b8598
  416849:	int3   
  41684a:	add    eax,DWORD PTR [esi]
  41684c:	dec    ecx
  41684d:	pop    ebp
  41684e:	(bad)  
  416850:	mov    al,0x73
  416852:	sahf   
  416853:	mov    al,0xbd
  416855:	pop    ecx
  416856:	xor    ebp,DWORD PTR [edi-0x6a]
  416859:	ret    
  41685a:	in     al,dx
  41685b:	jb     0x4167de
  41685d:	add    al,0x4e
  41685f:	adc    BYTE PTR ds:0x5491ad07,dh
  416865:	stos   BYTE PTR es:[edi],al
  416866:	pop    esp
  416867:	loop   0x416857
  416869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41686a:	jno    0x41687e
  41686c:	jmp    DWORD PTR [edx-0x1]
  41686f:	add    DWORD PTR [ebx+0x4f],edx
  416872:	jmp    0x4168e5
  416874:	jmp    0x416859
  416876:	(bad)  
  416877:	cmc    
  416878:	mov    DWORD PTR [ecx+ebx*8],esp
  41687b:	stos   BYTE PTR es:[edi],al
  41687c:	mov    esp,0xe241b02c
  416881:	sub    edi,DWORD PTR [edx+eax*1+0x45f20b26]
  416888:	aad    0x46
  41688a:	mov    ecx,0x80e53c46
  41688f:	push   cs
  416890:	push   ds
  416891:	inc    esi
  416892:	pop    ds
  416893:	jp     0x41681b
  416895:	sbb    DWORD PTR [ebp+0x3eadbc58],esi
  41689b:	push   esp
  41689c:	cmp    BYTE PTR [edx],ch
  41689e:	cwde   
  41689f:	and    eax,0xdfa968f2
  4168a4:	inc    edi
  4168a5:	jg     0x4168a2
  4168a7:	and    DWORD PTR ds:[ebp+0x71],eax
  4168ab:	cmp    ecx,edx
  4168ad:	imul   eax,DWORD PTR [edx],0xffffff91
  4168b0:	dec    dh
  4168b2:	push   edi
  4168b3:	les    ebp,FWORD PTR [ebx-0x2a8669f8]
  4168b9:	jb     0x416884
  4168bb:	cwde   
  4168bc:	arpl   si,bp
  4168be:	or     al,0xfa
  4168c0:	scas   al,BYTE PTR es:[edi]
  4168c1:	xchg   BYTE PTR [edx],ch
  4168c3:	mov    cl,BYTE PTR [eax-0x136ed9b6]
  4168c9:	es call 0x4602b20c
  4168cf:	fld    DWORD PTR [edi-0x4]
  4168d2:	iret   
  4168d3:	adc    bh,BYTE PTR [ecx-0x20]
  4168d6:	in     eax,dx
  4168d7:	inc    esp
  4168d8:	pop    ecx
  4168d9:	xor    esp,DWORD PTR [edi-0x4442c4f9]
  4168df:	fidiv  WORD PTR [ebx-0x317bccdd]
  4168e5:	mov    edx,edi
  4168e7:	or     dh,BYTE PTR [esi-0x4ac5b46c]
  4168ed:	out    0xcc,eax
  4168ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f0:	icebp  
  4168f1:	(bad)  
  4168f2:	mov    fs,WORD PTR [edi+0x35706022]
  4168f8:	jle    0x4168f5
  4168fa:	inc    ecx
  4168fb:	aad    0x3f
  4168fd:	and    eax,0xef2375fb
  416902:	cmp    ebx,eax
  416904:	fst    QWORD PTR [edi]
  416906:	add    ebp,DWORD PTR [edx+ebp*4-0x51f055ac]
  41690d:	push   esi
  41690e:	adc    ah,ah
  416910:	sub    ecx,DWORD PTR [esi-0x6e]
  416913:	add    eax,0xc8958a87
  416918:	inc    ebp
  416919:	inc    edi
  41691a:	es je  0x4168e7
  41691d:	mov    al,0x16
  41691f:	sbb    al,0xad
  416921:	(bad)  
  416922:	lds    ebx,FWORD PTR [edi-0x4a]
  416925:	mov    ds:0x818370c0,al
  41692a:	js     0x41697d
  41692c:	mov    cl,0x62
  41692e:	jmp    FWORD PTR [edx]
  416930:	add    DWORD PTR [esi+eax*4+0x5e],0x770fe617
  416938:	sbb    eax,0x72c39275
  41693d:	dec    esi
  41693e:	push   eax
  41693f:	dec    esp
  416940:	pushf  
  416941:	pop    edi
  416942:	mov    ebp,0xe6294d06
  416947:	inc    edx
  416948:	mov    dl,0x44
  41694a:	add    eax,DWORD PTR [esi+0x2d]
  41694d:	cmp    eax,0x31d4c405
  416952:	sub    ebx,esi
  416954:	(bad)  
  416955:	std    
  416956:	xor    al,BYTE PTR [ecx-0x71fa088d]
  41695c:	inc    edi
  41695d:	int3   
  41695e:	add    eax,0xd99a9ca1
  416963:	int    0x5e
  416965:	xchg   edi,eax
  416966:	hlt    
  416967:	scas   eax,DWORD PTR es:[edi]
  416968:	call   0x56f2:0xec33bf07
  41696f:	jne    0x4169b3
  416971:	(bad)  
  416972:	int    0x41
  416974:	ins    BYTE PTR es:[edi],dx
  416975:	cdq    
  416976:	shl    DWORD PTR [edx],0x16
  416979:	mov    eax,0x4a5fec15
  41697e:	call   0x60d4:0x12596c1b
  416985:	jb     0x4169f2
  416987:	out    0xcf,eax
  416989:	add    BYTE PTR [eax],0x3c
  41698c:	sbb    DWORD PTR [eax],0xca42de9d
  416992:	jns    0x416962
  416994:	(bad)  
  416995:	sbb    eax,0x1e3c9a7c
  41699a:	sbb    eax,ebx
  41699c:	call   0x567f:0x54e148ec
  4169a3:	ja     0x416a14
  4169a5:	sub    al,BYTE PTR [edi+0x6dc0da3f]
  4169ab:	inc    eax
  4169ac:	adc    eax,0x8e9db755
  4169b1:	(bad)  
  4169b3:	fst    QWORD PTR [edi]
  4169b5:	cmc    
  4169b6:	sub    al,al
  4169b8:	adc    BYTE PTR [edx+ebp*2-0x73],dl
  4169bc:	add    DWORD PTR [eax],edx
  4169be:	and    BYTE PTR [eax],cl
  4169c0:	das    
  4169c1:	mov    bh,0x41
  4169c3:	mov    ch,0xc2
  4169c5:	jmp    0x4169d1
  4169c7:	mov    esi,0x58b7f7a1
  4169cc:	fld    TBYTE PTR [edx-0x32]
  4169cf:	bound  esp,QWORD PTR [edx]
  4169d1:	push   DWORD PTR [ebx]
  4169d3:	or     al,0xff
  4169d5:	aas    
  4169d6:	sahf   
  4169d7:	jb     0x4169ed
  4169d9:	add    ebx,DWORD PTR [edx+0x25]
  4169dc:	add    edi,DWORD PTR [edx-0x5a63ed9c]
  4169e2:	hlt    
  4169e3:	cmp    esi,DWORD PTR [ebx]
  4169e5:	mov    edi,0xba51519e
  4169ea:	es ret 0xc5f7
  4169ee:	or     ebp,DWORD PTR [ecx]
  4169f0:	or     ebp,DWORD PTR [ebp-0x78]
  4169f3:	sbb    ah,BYTE PTR [edx-0x67]
  4169f6:	ins    BYTE PTR es:[edi],dx
  4169f7:	lods   al,BYTE PTR ds:[esi]
  4169f8:	mov    bl,BYTE PTR [ecx]
  4169fa:	loop   0x4169f1
  4169fc:	push   ds
  4169fd:	or     DWORD PTR [ebp-0x709aaf3f],ebx
  416a03:	jle    0x4169e8
  416a05:	scas   eax,DWORD PTR es:[edi]
  416a06:	sub    al,0x89
  416a08:	fisubr DWORD PTR [ebx+eiz*2+0x604d36a7]
  416a0f:	stos   BYTE PTR es:[edi],al
  416a10:	jnp    0x416a4e
  416a12:	sbb    DWORD PTR [ebx+ebx*1+0x2e869a59],0x17
  416a1a:	rcr    ebp,cl
  416a1c:	jle    0x416a7b
  416a1e:	ds ins BYTE PTR es:[edi],dx
  416a20:	sbb    BYTE PTR [edx+esi*4],0x48
  416a24:	sub    ecx,edx
  416a26:	packuswb mm7,mm7
  416a29:	jg     0x416a15
  416a2b:	or     DWORD PTR [edx-0x2c],eax
  416a2e:	or     DWORD PTR [edi],esi
  416a30:	mov    edi,0x86e0d2f5
  416a35:	imul   ebp,ebx,0x1f
  416a38:	pop    ebx
  416a39:	xor    edi,edi
  416a3b:	loope  0x416a08
  416a3d:	mov    edx,0x2f7b44bc
  416a42:	lods   eax,DWORD PTR ds:[esi]
  416a43:	lea    esi,ds:0x4ef16856
  416a49:	nop
  416a4a:	div    BYTE PTR [edx]
  416a4c:	jp     0x416aac
  416a4e:	nop
  416a4f:	sub    al,0x67
  416a51:	push   ecx
  416a52:	psllq  mm3,QWORD PTR ds:0x28805625
  416a59:	adc    ch,BYTE PTR [eax+0x29]
  416a5c:	mov    dh,0x53
  416a5e:	sti    
  416a5f:	rol    al,1
  416a61:	sbb    bh,BYTE PTR [eax+0x48]
  416a64:	fnstsw WORD PTR [ebp+0x318e5388]
  416a6a:	sbb    DWORD PTR [esi-0x53c089b2],0xffffffc9
  416a71:	pushf  
  416a72:	scas   al,BYTE PTR es:[edi]
  416a73:	pop    edx
  416a74:	mov    ah,0x5e
  416a76:	mov    eax,ds:0x820a3c71
  416a7b:	lds    esi,FWORD PTR [ecx-0x4df73787]
  416a81:	mov    ds:0xfdf02a42,eax
  416a86:	outs   dx,DWORD PTR ds:[esi]
  416a87:	pop    ebx
  416a88:	cli    
  416a89:	mov    ah,0x22
  416a8b:	mov    esi,0x66ad7799
  416a90:	ins    DWORD PTR es:[edi],dx
  416a91:	stc    
  416a92:	enter  0xd080,0x73
  416a96:	mov    WORD PTR ds:0x7f892eb9,fs
  416a9c:	jmp    0x416ad6
  416a9e:	outs   dx,BYTE PTR ds:[esi]
  416a9f:	jno    0x416ad6
  416aa1:	jle    0x416add
  416aa3:	mov    ds:0xae93caad,al
  416aa8:	jns    0x416a4e
  416aaa:	test   eax,0xfbce1b22
  416aaf:	pop    esi
  416ab0:	cld    
  416ab1:	xchg   DWORD PTR ds:0xdc13ce89,edx
  416ab7:	clc    
  416ab8:	repz xchg esp,eax
  416aba:	inc    esi
  416abb:	int    0xd2
  416abd:	sub    al,0x6d
  416abf:	(bad)  
  416ac0:	mov    dh,0x26
  416ac2:	popf   
  416ac3:	mov    WORD PTR [edx+eax*4],es
  416ac6:	or     ecx,edi
  416ac8:	jne    0x416a55
  416aca:	je     0x416aa5
  416acc:	mov    ds:0x7433bd7d,al
  416ad1:	mov    ah,0x6
  416ad3:	daa    
  416ad4:	sbb    eax,0xb38064e
  416ad9:	xor    eax,0xee8892fe
  416ade:	pop    edx
  416adf:	add    eax,0xcb2db288
  416ae4:	cmp    dh,ch
  416ae6:	cmp    dh,BYTE PTR [edi+esi*2]
  416ae9:	lea    eax,[ebx+0xe81503d]
  416aef:	sub    BYTE PTR [edx-0x27],al
  416af2:	sbb    eax,DWORD PTR [edi-0x23f5b081]
  416af8:	(bad)  
  416af9:	xchg   ecx,eax
  416afa:	xchg   ebx,eax
  416afb:	mov    edi,0x32a84b8b
  416b00:	imul   ebx,esi,0x4617653c
  416b06:	adc    eax,0xf189c8dd
  416b0b:	mov    DWORD PTR [ebp+0x5e1fd996],edi
  416b11:	sbb    eax,0xcde927e0
  416b16:	or     esi,DWORD PTR [ecx+0x8]
  416b19:	test   eax,0xe20bbdd3
  416b1e:	aam    0x2c
  416b20:	and    edi,DWORD PTR [ecx]
  416b22:	xor    DWORD PTR [ebx+ebp*1],0xffffffcd
  416b26:	sahf   
  416b27:	or     DWORD PTR [ebx-0x5d],eax
  416b2a:	fucom  st(3)
  416b2c:	add    DWORD PTR [ebp-0x6b74d5a8],0x3334bb0d
  416b36:	imul   eax,DWORD PTR [esi],0x53
  416b39:	mov    al,ds:0x136a76a8
  416b3e:	repnz mov dl,0xc8
  416b41:	mov    eax,0xa471b5ae
  416b46:	mov    dh,0x9e
  416b48:	pusha  
  416b49:	fld    TBYTE PTR [eax]
  416b4b:	jae    0x416bb9
  416b4d:	aaa    
  416b4e:	mov    ecx,0x2ac4fae2
  416b53:	lods   eax,DWORD PTR ds:[esi]
  416b54:	les    edx,FWORD PTR [edx-0x127f226a]
  416b5a:	push   ebp
  416b5b:	dec    ebx
  416b5c:	xchg   ebx,eax
  416b5d:	lahf   
  416b5e:	mov    bl,0x1e
  416b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b61:	inc    edi
  416b62:	test   al,dh
  416b64:	dec    ecx
  416b65:	mov    edx,0x6975d350
  416b6a:	test   edi,ecx
  416b6c:	mov    dh,0x5b
  416b6e:	xor    al,0x48
  416b70:	pop    edx
  416b71:	xor    dl,BYTE PTR [ecx]
  416b73:	mov    ch,0xc7
  416b75:	stos   BYTE PTR es:[edi],al
  416b76:	mov    eax,0x9e896c4b
  416b7b:	sub    al,0x50
  416b7d:	out    dx,eax
  416b7e:	cmp    eax,0x1b146a9a
  416b83:	cwde   
  416b84:	dec    esi
  416b85:	pusha  
  416b86:	xchg   esi,eax
  416b87:	(bad)  
  416b88:	cmp    ah,ch
  416b8a:	sbb    BYTE PTR [edi-0x22],dl
  416b8d:	adc    BYTE PTR [eax+eax*4+0x4ba70e84],bl
  416b94:	inc    esp
  416b95:	icebp  
  416b96:	push   edx
  416b97:	cli    
  416b98:	inc    edx
  416b99:	lds    esi,FWORD PTR [edi-0x184453da]
  416b9f:	enter  0x5ef2,0xea
  416ba3:	pusha  
  416ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba6:	dec    esp
  416ba7:	mov    esi,0x286b6da5
  416bac:	xor    eax,0x35cfb0b5
  416bb1:	(bad)  
  416bb2:	fimul  DWORD PTR [ebx-0x2d]
  416bb5:	pop    ss
  416bb6:	adc    DWORD PTR [edi-0x1c],ebp
  416bb9:	shl    BYTE PTR [ebx+0x73],1
  416bbc:	(bad)  
  416bbd:	aam    0x6a
  416bbf:	ja     0x416bed
  416bc1:	retf   
  416bc2:	sub    WORD PTR [ebp+0x4f],cx
  416bc6:	push   eax
  416bc7:	aam    0xa5
  416bc9:	push   ds
  416bca:	pop    edx
  416bcb:	lds    edi,FWORD PTR [edi+0x485a2514]
  416bd1:	repz cmp al,0xe0
  416bd4:	adc    dl,BYTE PTR [edi-0x7f9fac02]
  416bda:	xchg   ecx,eax
  416bdb:	add    DWORD PTR [ecx+0x3d718ac5],edi
  416be1:	pushf  
  416be2:	pop    esi
  416be3:	mov    eax,0xf62b687
  416be8:	pop    eax
  416be9:	mov    ds:0x7cc4469e,al
  416bee:	xchg   esp,eax
  416bef:	ficomp DWORD PTR [ebx+eiz*4-0x7182036b]
  416bf6:	jg     0x416bfa
  416bf8:	pushf  
  416bf9:	push   cs
  416bfa:	sbb    DWORD PTR [ebx],ecx
  416bfc:	dec    edx
  416bfd:	jns    0x416b9e
  416bff:	fstp   DWORD PTR [ebx-0x3b]
  416c02:	adc    ebp,esp
  416c04:	jbe    0x416b99
  416c06:	mov    edi,0x735b82cf
  416c0b:	push   esi
  416c0c:	sbb    BYTE PTR [eax+0x55],cl
  416c0f:	jnp    0x416ba5
  416c11:	(bad)  
  416c14:	es jp  0x416c96
  416c17:	(bad)  
  416c18:	cmc    
  416c19:	xchg   ebx,eax
  416c1a:	ret    0xb67c
  416c1d:	xchg   ecx,eax
  416c1e:	cmc    
  416c1f:	adc    eax,0x594b8167
  416c24:	sub    DWORD PTR [ebp-0x17],edi
  416c27:	cmp    eax,0x13e9ce63
  416c2c:	loop   0x416c24
  416c2e:	jne    0x416bee
  416c30:	loope  0x416c3d
  416c32:	bound  edi,QWORD PTR [eax+0x73c4edd9]
  416c38:	xchg   BYTE PTR [eax+0x75],ch
  416c3b:	push   0x48368f53
  416c40:	pusha  
  416c41:	enter  0x168c,0x78
  416c45:	xor    al,0x8b
  416c47:	sbb    DWORD PTR [ebx-0x19a409bb],eax
  416c4d:	test   eax,0xab6c27a8
  416c52:	into   
  416c53:	jb     0x416caa
  416c55:	lea    ecx,[edi]
  416c57:	push   es
  416c58:	xchg   DWORD PTR [ebp-0x6e1649b3],edx
  416c5e:	push   esi
  416c5f:	and    al,0x6f
  416c61:	into   
  416c62:	lds    eax,FWORD PTR [ecx+0x13]
  416c65:	popa   
  416c66:	inc    edx
  416c67:	repnz pop es
  416c69:	or     ebx,esp
  416c6b:	xchg   ebx,eax
  416c6c:	repnz xchg esp,eax
  416c6e:	xchg   ebx,eax
  416c6f:	sub    ah,cl
  416c71:	add    eax,DWORD PTR [ebx+eiz*1+0x2b1fb364]
  416c78:	pop    ss
  416c79:	arpl   di,bx
  416c7b:	ror    BYTE PTR [ecx-0x41],cl
  416c7e:	jmp    0x416cac
  416c80:	dec    esp
  416c81:	pop    edi
  416c82:	xchg   ecx,eax
  416c83:	in     al,dx
  416c84:	rcl    eax,cl
  416c86:	mov    bh,0x8d
  416c88:	in     eax,dx
  416c89:	jg     0x416d08
  416c8b:	sbb    esi,esp
  416c8d:	xlat   BYTE PTR ds:[ebx]
  416c8e:	xchg   esi,eax
  416c8f:	int    0x2e
  416c91:	push   ebp
  416c92:	sub    al,0xcb
  416c94:	jnp    0x416ccb
  416c96:	fwait
  416c97:	xor    al,0x1d
  416c99:	dec    edx
  416c9a:	mov    bl,0x1e
  416c9c:	and    esi,esi
  416c9e:	xchg   ecx,eax
  416c9f:	fsubr  st,st(4)
  416ca1:	push   cs
  416ca2:	dec    esi
  416ca3:	mov    gs,esp
  416ca5:	add    eax,0x3eb1898e
  416caa:	sbb    DWORD PTR [ecx],0x141a8340
  416cb0:	jmp    0xc9be:0x4ace39e1
  416cb7:	cdq    
  416cb8:	ins    BYTE PTR es:[edi],dx
  416cb9:	fstp   st(0)
  416cbb:	xor    dl,bh
  416cbd:	push   ds
  416cbe:	sbb    dh,0xe8
  416cc1:	xor    esi,ebp
  416cc3:	push   esp
  416cc4:	mov    ds:0x32f08211,al
  416cc9:	sub    eax,0x8cb5a2b4
  416cce:	lods   eax,DWORD PTR ds:[esi]
  416ccf:	bound  ebp,QWORD PTR [ebp+0x37]
  416cd2:	(bad)  
  416cd3:	or     eax,0x9f11520d
  416cd8:	push   eax
  416cd9:	xor    al,0x53
  416cdb:	sub    al,0x73
  416cdd:	mov    ebp,0x7ee3613e
  416ce2:	jo     0x416d12
  416ce4:	test   BYTE PTR ds:0x5731bc8c,al
  416cea:	xchg   esp,eax
  416ceb:	stc    
  416cec:	cwde   
  416ced:	sbb    ah,BYTE PTR [eax+0x3d]
  416cf0:	in     eax,0x5e
  416cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf3:	clc    
  416cf4:	imul   ebx,edx,0xc758a2a
  416cfa:	or     bl,cl
  416cfc:	nop
  416cfd:	xlat   BYTE PTR ds:[ebx]
  416cfe:	pusha  
  416cff:	imul   edx,DWORD PTR [ebx],0x3277cb08
  416d05:	mov    edi,0xccfe8c27
  416d0a:	inc    eax
  416d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d0c:	stos   BYTE PTR es:[edi],al
  416d0d:	and    al,0x4d
  416d0f:	cli    
  416d10:	scas   al,BYTE PTR es:[edi]
  416d11:	xchg   ebx,eax
  416d12:	sbb    edi,ebp
  416d14:	call   0xac651c59
  416d19:	shl    BYTE PTR [edx+0x58],1
  416d1c:	aas    
  416d1d:	push   es
  416d1e:	cs ret 0xdfef
  416d22:	or     eax,0xfb8eb161
  416d27:	test   BYTE PTR [esi-0x70],ch
  416d2a:	fmul   DWORD PTR [edx]
  416d2c:	popa   
  416d2d:	pop    ss
  416d2e:	in     eax,dx
  416d2f:	xchg   esp,eax
  416d30:	hlt    
  416d31:	push   DWORD PTR [ebx]
  416d33:	jge    0x416cfb
  416d35:	xchg   BYTE PTR [esi-0x51],ah
  416d38:	sti    
  416d39:	leave  
  416d3a:	adc    dh,cl
  416d3c:	jmp    0xadb0:0x9855d53a
  416d43:	jecxz  0x416d3b
  416d45:	adc    ecx,DWORD PTR ds:[ecx+0x36b84ccf]
  416d4c:	jb     0x416da8
  416d4e:	stos   BYTE PTR es:[edi],al
  416d4f:	mov    bl,0x25
  416d51:	and    eax,0x417c68d9
  416d56:	add    edi,eax
  416d58:	ja     0x416d5b
  416d5a:	jb     0x416d60
  416d5c:	inc    edx
  416d5d:	leave  
  416d5e:	fst    DWORD PTR [esp+ecx*1+0x5a9de506]
  416d65:	jmp    0x416d2b
  416d67:	sbb    ebx,esi
  416d69:	data16 out 0x1b,al
  416d6c:	push   cs
  416d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d6e:	adc    esi,DWORD PTR [esi]
  416d70:	mov    eax,0x47f3952f
  416d75:	icebp  
  416d76:	cmp    al,0xe6
  416d78:	lods   eax,DWORD PTR ds:[esi]
  416d79:	mov    ebx,0x1fb66583
  416d7e:	(bad)  
  416d7f:	std    
  416d80:	fidiv  WORD PTR [ecx+0xf]
  416d83:	cwde   
  416d84:	adc    eax,0x8a63d35f
  416d89:	scas   eax,DWORD PTR es:[edi]
  416d8a:	and    al,0x69
  416d8c:	push   edi
  416d8d:	xchg   esp,eax
  416d8e:	add    DWORD PTR [edx-0x5740b4b2],ecx
  416d94:	aad    0x39
  416d96:	rcl    BYTE PTR [esi+edi*4+0x8a8ef2f],cl
  416d9d:	fisttp QWORD PTR [edx+0x1e]
  416da0:	cld    
  416da1:	cmp    al,ch
  416da3:	xchg   esi,eax
  416da4:	push   ebx
  416da5:	xchg   edx,eax
  416da6:	cmp    al,0xf3
  416da8:	div    DWORD PTR [ecx-0x35983d0f]
  416dae:	fsubr  QWORD PTR [edi+0x28]
  416db1:	xlat   BYTE PTR ds:[ebx]
  416db2:	mov    esp,DWORD PTR [esp+esi*1]
  416db5:	mov    ch,0xb3
  416db7:	cmc    
  416db8:	cmc    
  416db9:	neg    BYTE PTR [di+0x57]
  416dbd:	imul   esp,DWORD PTR [ecx],0x177caf8a
  416dc3:	ja     0x416d6d
  416dc5:	hlt    
  416dc6:	xor    DWORD PTR [edi-0x25],esi
  416dc9:	sbb    ebx,ebx
  416dcb:	fdiv   DWORD PTR [esi+0x4dbfc1d]
  416dd1:	int    0x73
  416dd3:	out    0x54,al
  416dd5:	or     ecx,edx
  416dd7:	xchg   esp,eax
  416dd8:	addr16 dec ebx
  416dda:	fs push 0x6b
  416ddd:	adc    al,0x8
  416ddf:	xor    DWORD PTR [eax],eax
  416de1:	add    al,0xc7
  416de3:	ret    
  416de4:	push   esp
  416de5:	mov    esp,0xed1c971f
  416dea:	inc    ecx
  416deb:	mov    edx,0x46935627
  416df0:	push   esp
  416df1:	test   eax,0xac405f7
  416df6:	xor    bl,BYTE PTR [ebx+eax*1]
  416df9:	pop    ecx
  416dfa:	ror    DWORD PTR [eax],1
  416dfc:	out    0x37,eax
  416dfe:	mov    eax,ds:0xd60c7276
  416e03:	sbb    DWORD PTR [eax+0x3b],esp
  416e06:	jnp    0x416dbe
  416e08:	loop   0x416df3
  416e0a:	mov    ch,0xa6
  416e0d:	nop
  416e0e:	(bad)  
  416e0f:	ret    0xeb56
  416e12:	in     al,0x5d
  416e14:	ror    BYTE PTR [ebx+edi*4-0x14],cl
  416e18:	(bad)  
  416e19:	dec    ebp
  416e1a:	clc    
  416e1b:	push   cs
  416e1c:	pop    eax
  416e1d:	imul   ebp,DWORD PTR [ecx-0x12],0xffffff8d
  416e21:	pusha  
  416e22:	stc    
  416e23:	sub    eax,0x247c8c8b
  416e28:	push   eax
  416e29:	cmp    BYTE PTR [esi-0x5a5c483f],bl
  416e2f:	pop    esi
  416e30:	sar    BYTE PTR [edi],1
  416e32:	push   ss
  416e33:	sti    
  416e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e35:	sbb    al,al
  416e37:	mov    cx,0xdc4b
  416e3b:	jno    0x416e66
  416e3d:	rcl    DWORD PTR [ecx],cl
  416e3f:	pop    esp
  416e40:	xor    al,0xeb
  416e42:	mov    ds:0x66939222,eax
  416e47:	pop    ebp
  416e48:	jo     0x416def
  416e4a:	test   eax,0x3094dad1
  416e4f:	adc    al,0x76
  416e51:	into   
  416e52:	push   eax
  416e53:	hlt    
  416e54:	jecxz  0x416e93
  416e56:	add    BYTE PTR [edi+esi*8-0x7f0969eb],bh
  416e5d:	sbb    al,0x97
  416e5f:	mov    dh,0xfd
  416e61:	pop    esi
  416e62:	fbstp  TBYTE PTR [ebp+0x41]
  416e65:	les    edi,FWORD PTR [ebx+0x56e47f2d]
  416e6b:	int    0xe7
  416e6d:	sub    al,0x9f
  416e6f:	mov    al,ds:0xe83f8d6f
  416e74:	inc    ebx
  416e75:	outs   dx,DWORD PTR ds:[esi]
  416e76:	and    DWORD PTR [edi+0x38],ebx
  416e79:	add    ch,BYTE PTR [ebx]
  416e7b:	stc    
  416e7c:	pop    es
  416e7d:	dec    edi
  416e7e:	sub    eax,0x846cc674
  416e83:	in     al,0xfc
  416e85:	mov    bh,0xa
  416e87:	add    BYTE PTR [ecx+0x16],dl
  416e8a:	fmul   DWORD PTR [edx-0x390ed517]
  416e90:	push   ebp
  416e91:	ins    DWORD PTR es:[edi],dx
  416e92:	jmp    0x10d4:0xe08b52ed
  416e99:	mov    bh,0x51
  416e9b:	movups xmm0,XMMWORD PTR [ecx-0x5ecfce26]
  416ea2:	mov    bl,0x54
  416ea4:	and    BYTE PTR [edx-0x19533df7],ch
  416eaa:	mov    dl,0xc0
  416eac:	pop    ss
  416ead:	push   ds
  416eae:	mov    ebp,0x631c573e
  416eb3:	aad    0x12
  416eb5:	or     BYTE PTR [edi],cl
  416eb7:	call   0x42c98a6f
  416ebc:	and    eax,0xb8c0c79a
  416ec1:	push   edx
  416ec2:	xor    BYTE PTR [ebx-0x3f],ch
  416ec5:	sti    
  416ec6:	push   ebx
  416ec7:	sbb    al,0x49
  416ec9:	cmp    bl,BYTE PTR [ebx+eax*1-0x5e]
  416ecd:	xor    edi,DWORD PTR [eax-0x4a45a721]
  416ed3:	ds int 0xc4
  416ed6:	cld    
  416ed7:	sar    ebp,cl
  416ed9:	and    eax,0x1bd3aa0f
  416ede:	jnp    0x416eea
  416ee0:	push   eax
  416ee1:	sub    BYTE PTR [edx+0x29],0x96
  416ee5:	mov    ds:0x583394d1,eax
  416eea:	jns    0x416e8d
  416eec:	or     bl,BYTE PTR [eax-0x15ee40ad]
  416ef2:	daa    
  416ef3:	cmp    esp,esi
  416ef5:	or     al,0x63
  416ef7:	leave  
  416ef8:	mov    al,0x9f
  416efa:	fsubr  st,st(1)
  416efc:	ret    0x91c1
  416eff:	fwait
  416f00:	dec    eax
  416f01:	xchg   DWORD PTR [eax],edi
  416f03:	addr16 das 
  416f05:	test   dh,cl
  416f07:	cmp    eax,0x651d42c8
  416f0c:	mov    ebx,0xa694f299
  416f11:	ins    DWORD PTR es:[edi],dx
  416f12:	lea    ecx,[eax]
  416f14:	mov    ch,BYTE PTR [edx+ebp*2]
  416f17:	dec    BYTE PTR [ebp+ecx*2+0x2427edf1]
  416f1e:	pusha  
  416f1f:	pushf  
  416f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f21:	sbb    DWORD PTR [esp+ebx*1-0x4f],0x7db318c2
  416f29:	addr16 (bad) 
  416f2b:	lock jbe 0x416ee1
  416f2e:	gs ret 
  416f30:	or     al,0xee
  416f32:	pop    eax
  416f33:	pop    es
  416f34:	push   ebx
  416f35:	frstor [edi+0x6f]
  416f38:	pushf  
  416f39:	stos   BYTE PTR es:[edi],al
  416f3a:	push   ds
  416f3b:	jnp    0x416ee9
  416f3d:	and    al,0xed
  416f3f:	dec    edi
  416f40:	js     0x416f79
  416f42:	add    BYTE PTR [eax],dl
  416f44:	sbb    cl,BYTE PTR [edi]
  416f46:	retf   0x4ea8
  416f49:	dec    edx
  416f4a:	ins    DWORD PTR es:[edi],dx
  416f4b:	scas   al,BYTE PTR es:[edi]
  416f4c:	cli    
  416f4d:	vsqrtss xmm0,xmm1,DWORD PTR [edx-0x19]
  416f52:	fcomp  QWORD PTR [ebx+0xc1556b0]
  416f58:	adc    eax,0x94d61b85
  416f5d:	out    dx,eax
  416f5e:	jge    0x416fbd
  416f60:	call   0x5df5a0ea
  416f65:	xor    al,0x46
  416f67:	sub    DWORD PTR [edi],esi
  416f69:	sub    bl,BYTE PTR [edx]
  416f6b:	in     al,0xf1
  416f6d:	les    edi,FWORD PTR [ecx]
  416f6f:	xor    edx,DWORD PTR [ecx+0x6693fdcb]
  416f75:	add    al,0x5e
  416f77:	adc    DWORD PTR [edx-0x6c47c4d2],0x1978538c
  416f81:	ret    0xd67d
  416f84:	sbb    bh,BYTE PTR [ecx+0x65]
  416f87:	repz fwait
  416f89:	jae    0x416fc3
  416f8b:	cmp    eax,ecx
  416f8d:	inc    edx
  416f8e:	mov    ebp,0xcc22d429
  416f93:	mov    esi,edi
  416f95:	stos   BYTE PTR es:[edi],al
  416f96:	das    
  416f97:	or     cl,ch
  416f99:	clc    
  416f9a:	push   edi
  416f9b:	push   0x3a
  416f9d:	(bad)  
  416f9e:	jmp    0xcba0:0x1a842d8d
  416fa5:	popa   
  416fa6:	scas   eax,DWORD PTR es:[edi]
  416fa7:	or     dh,BYTE PTR [ecx+eax*4]
  416faa:	es sbb edx,DWORD PTR ds:[edx]
  416fae:	and    eax,0x27a46b3a
  416fb3:	cdq    
  416fb4:	cmp    eax,DWORD PTR [ebp+0x7611c7df]
  416fba:	ret    0xf31b
  416fbd:	mov    ebp,0x8bd02963
  416fc2:	adc    BYTE PTR [edi+ebp*8-0x1a],bl
  416fc6:	daa    
  416fc7:	sbb    BYTE PTR [esi+0x28f41614],bl
  416fcd:	sub    BYTE PTR [edx-0x23005683],0x88
  416fd4:	push   ss
  416fd5:	inc    ebx
  416fd6:	jbe    0x416f62
  416fd8:	jnp    0x416f87
  416fda:	mov    edx,DWORD PTR [edi-0x10]
  416fdd:	cdq    
  416fde:	adc    eax,eax
  416fe0:	mov    dh,0x59
  416fe2:	scas   al,BYTE PTR es:[edi]
  416fe3:	bound  esi,QWORD PTR [eax+0x76]
  416fe6:	jnp    0x417009
  416fe8:	jle    0x417041
  416fea:	jmp    0x417029
  416fec:	loop   0x416fc4
  416fee:	icebp  
  416fef:	ja     0x417012
  416ff1:	adc    DWORD PTR [ecx+0x41902b7d],0xfe2ed0ee
  416ffb:	loopne 0x417011
  416ffd:	inc    ebp
  416ffe:	(bad)  
  416fff:	(bad)  
  417000:	push   0xffffffba
  417002:	sub    edx,DWORD PTR [eax+0x32]
  417005:	fwait
  417006:	cld    
  417007:	call   0x1c141eef
  41700c:	fldl2t 
  41700e:	jmp    0xc6c186a4
  417013:	sub    ch,BYTE PTR [ebp-0x17]
  417016:	mov    ch,0xb9
  417018:	adc    dl,BYTE PTR [eax-0x70]
  41701b:	pop    edi
  41701c:	fwait
  41701d:	push   0xffffff99
  41701f:	mov    dl,0xa9
  417021:	add    BYTE PTR ds:0xf6a4f083,ah
  417027:	mov    al,cl
  417029:	ins    DWORD PTR es:[edi],dx
  41702a:	cmp    DWORD PTR [ebx-0x47d647b4],eax
  417030:	jo     0x416ffe
  417032:	repz retf 0xe0c8
  417036:	outs   dx,BYTE PTR ds:[esi]
  417037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417038:	pop    ds
  417039:	es mov dh,0xe0
  41703c:	sub    DWORD PTR [edi+0x33],edx
  41703f:	dec    esp
  417040:	inc    esi
  417042:	jle    0x41706a
  417044:	int    0x91
  417046:	fisttp DWORD PTR [edx+0x34]
  417049:	lahf   
  41704a:	cli    
  41704b:	adc    edi,DWORD PTR [esi+eax*4]
  41704e:	sahf   
  41704f:	jecxz  0x4170ab
  417051:	xchg   DWORD PTR [ebx+ecx*8+0x18],ecx
  417055:	(bad)  
  417056:	in     eax,0x75
  417058:	mov    ah,0xa4
  41705a:	hlt    
  41705b:	push   0xd31f88fc
  417060:	xchg   esi,eax
  417061:	sbb    DWORD PTR [ecx],esi
  417063:	sbb    eax,ebx
  417065:	ss and eax,0x81e61ecf
  41706b:	push   ebx
  41706c:	ja     0x4170a7
  41706e:	imul   ebx,DWORD PTR [edx-0x29],0x3b2aa5a7
  417075:	mov    DWORD PTR [ebp+0x64],edx
  417078:	bound  ecx,QWORD PTR [ebx+0x12]
  41707b:	and    DWORD PTR [ebx-0x2a],edi
  41707e:	scas   al,BYTE PTR es:[edi]
  41707f:	add    BYTE PTR [edx],ah
  417081:	adc    ecx,DWORD PTR [edx]
  417083:	rol    dl,cl
  417085:	push   cs
  417086:	sbb    al,0x92
  417088:	retf   
  417089:	inc    edi
  41708a:	mov    BYTE PTR [ebx+eiz*1-0x13],al
  41708e:	je     0x4170cc
  417090:	fldcw  WORD PTR [eax+0x62]
  417093:	pop    esi
  417094:	ret    0x1b03
  417097:	fadd   QWORD PTR [eax]
  417099:	push   ecx
  41709a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709b:	sbb    al,0x8d
  41709d:	cmp    eax,0x2e6d8705
  4170a2:	fwait
  4170a3:	pop    eax
  4170a4:	mov    bl,bl
  4170a6:	mov    al,0x5a
  4170a8:	mov    ds:0x24ae7c96,eax
  4170ad:	stos   BYTE PTR es:[edi],al
  4170ae:	je     0x417034
  4170b0:	and    edi,DWORD PTR [ecx-0x41695922]
  4170b6:	test   al,0x58
  4170b8:	das    
  4170b9:	jns    0x417101
  4170bb:	icebp  
  4170bc:	dec    DWORD PTR [ebp-0x1f]
  4170bf:	xor    esp,eax
  4170c1:	pusha  
  4170c2:	fisubr WORD PTR [edx+0x3ecb7835]
  4170c8:	xor    ebp,eax
  4170ca:	cli    
  4170cb:	dec    esp
  4170cc:	ret    
  4170cd:	aaa    
  4170ce:	outs   dx,DWORD PTR ds:[esi]
  4170cf:	xchg   esi,eax
  4170d0:	sub    al,0xa0
  4170d2:	mov    dl,0x74
  4170d4:	loop   0x4170e1
  4170d6:	pusha  
  4170d7:	mov    DWORD PTR [ebx-0x2e],edx
  4170da:	shl    ch,cl
  4170dc:	jb     0x417103
  4170de:	shl    DWORD PTR [edx+0x5],0x94
  4170e2:	xchg   ebx,eax
  4170e3:	add    bl,BYTE PTR [ecx]
  4170e5:	add    BYTE PTR [esi],dh
  4170e7:	mov    al,ds:0xd4aa8d48
  4170ec:	fs shr esi,0x29
  4170f0:	scas   eax,DWORD PTR es:[edi]
  4170f1:	test   eax,0x2d3c8811
  4170f6:	mov    ebp,0x41f00830
  4170fb:	inc    edi
  4170fc:	push   eax
  4170fd:	lds    esi,FWORD PTR [edi+0x192ca1d8]
  417103:	out    0x32,eax
  417105:	sar    BYTE PTR [eax+0x69],0x4a
  417109:	out    dx,eax
  41710a:	mov    dl,0xee
  41710c:	add    dl,BYTE PTR [eax]
  41710e:	push   ss
  41710f:	push   0xc8656ac8
  417114:	add    eax,0xbdac10fe
  417119:	retf   
  41711a:	mov    esi,edi
  41711c:	cwde   
  41711d:	mov    WORD PTR [edx-0xf],gs
  417120:	jns    0x41719c
  417122:	pop    ecx
  417123:	in     eax,dx
  417124:	int3   
  417125:	dec    ebx
  417126:	inc    ecx
  417127:	push   cs
  417128:	and    ebp,edi
  41712a:	sub    al,0xd6
  41712c:	out    0x77,al
  41712e:	hlt    
  41712f:	mov    ebp,0xd2ec4acb
  417134:	sub    cl,BYTE PTR [ecx+0x7c82b524]
  41713a:	sub    eax,DWORD PTR [esi-0x78]
  41713d:	and    DWORD PTR [ebx-0xa],0xffffffa5
  417141:	push   ebp
  417142:	jmp    0x47e0247c
  417147:	je     0x417101
  417149:	in     eax,0xe7
  41714b:	pop    edx
  41714c:	mov    esi,0x2ee8b88b
  417151:	and    BYTE PTR [esi-0x70],bl
  417154:	or     DWORD PTR [ebp-0x61c7c738],eax
  41715a:	ins    BYTE PTR es:[edi],dx
  41715b:	jmp    0xb9a7097
  417160:	xchg   ebp,eax
  417161:	stc    
  417162:	mov    ds:0x17b78af4,al
  417167:	sub    BYTE PTR [ebx],dh
  417169:	pushf  
  41716a:	cwde   
  41716b:	inc    esi
  41716c:	push   ebx
  41716d:	push   ecx
  41716e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41716f:	and    eax,0x4bad972a
  417174:	sbb    BYTE PTR [edx],dl
  417176:	push   ecx
  417177:	or     eax,0xf80a1121
  41717c:	lds    ebp,FWORD PTR [ebx+0x7b]
  41717f:	mov    al,ds:0x431d85df
  417184:	add    BYTE PTR [edi-0x3ae7fa9b],ah
  41718a:	es sub eax,0x5064e3b6
  417190:	in     al,0xc6
  417192:	push   edi
  417193:	mov    ?,WORD PTR [ebp+esi*8-0x2e773d1]
  41719a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719b:	out    dx,eax
  41719c:	pop    esi
  41719d:	cld    
  41719e:	adc    BYTE PTR [ebx],bh
  4171a0:	dec    edi
  4171a1:	leave  
  4171a2:	cmp    eax,0x3ab90138
  4171a7:	es push es
  4171a9:	fwait
  4171aa:	dec    esp
  4171ab:	in     eax,dx
  4171ac:	stc    
  4171ad:	repz xchg ebx,eax
  4171af:	or     eax,0xe538003
  4171b4:	sbb    ebp,DWORD PTR [edx+0x6c]
  4171b7:	rcl    DWORD PTR [eax+0x5f],cl
  4171ba:	jae    0x4171a0
  4171bc:	shl    BYTE PTR [ebp+edx*8+0x1b],0xb4
  4171c1:	out    0x5d,eax
  4171c3:	jae    0x41722c
  4171c5:	cli    
  4171c6:	aam    0x27
  4171c8:	xor    BYTE PTR [esi+0x7884bc3a],ch
  4171ce:	push   es
  4171cf:	ins    BYTE PTR es:[edi],dx
  4171d0:	hlt    
  4171d1:	mov    dl,0x18
  4171d3:	jb     0x41721e
  4171d5:	retf   0x84e8
  4171d8:	jns    0x4171a7
  4171da:	cmp    DWORD PTR [ebp+0x56ff863c],esp
  4171e0:	fnstsw WORD PTR [ebx+0x76]
  4171e3:	ret    
  4171e4:	xchg   esp,eax
  4171e5:	dec    ecx
  4171e6:	adc    bh,BYTE PTR [esi-0x7954e85c]
  4171ec:	and    esp,ebp
  4171ee:	test   eax,0xba38fce6
  4171f3:	mov    ah,0xc9
  4171f5:	mov    al,ds:0x3d521943
  4171fa:	sbb    esp,ecx
  4171fc:	pop    ebx
  4171fd:	sar    al,0xab
  417200:	fwait
  417201:	cmp    BYTE PTR [eax+eax*2],bl
  417204:	arpl   WORD PTR [ecx-0x12],si
  417207:	in     al,dx
  417208:	dec    ebp
  417209:	inc    ebp
  41720a:	jp     0x417276
  41720c:	arpl   sp,di
  41720e:	adc    ebx,DWORD PTR [ebx-0x1c3b9aa1]
  417214:	push   esi
  417215:	test   DWORD PTR [ebx+ebp*2-0x456ad025],0xc2f937a7
  417220:	push   0x61
  417222:	xchg   ebx,eax
  417223:	rcr    BYTE PTR [edi-0x78],1
  417226:	stos   DWORD PTR es:[edi],eax
  417227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417228:	pusha  
  417229:	xchg   edx,eax
  41722a:	(bad)  
  41722b:	retf   0x72e3
  41722e:	retf   0x4284
  417231:	js     0x4171c9
  417233:	pop    esp
  417234:	daa    
  417235:	dec    ecx
  417236:	xor    DWORD PTR [ecx-0x8c4e9eb],ecx
  41723c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41723d:	lds    edi,FWORD PTR [edi-0x39223c15]
  417243:	or     BYTE PTR [edx],ah
  417245:	mov    WORD PTR [edx],ss
  417247:	push   eax
  417248:	mov    bl,0x4
  41724a:	xchg   edi,eax
  41724b:	xor    al,0x65
  41724d:	leave  
  41724e:	mov    dh,0x3e
  417250:	inc    ebp
  417251:	icebp  
  417252:	repnz cmp edx,eax
  417255:	sbb    BYTE PTR [esi+edx*2-0x47],bl
  417259:	inc    DWORD PTR [eax]
  41725b:	dec    ebx
  41725c:	mov    WORD PTR [ebx-0x45],?
  41725f:	mov    dl,0x86
  417261:	enter  0x96ec,0xf7
  417265:	mov    ebx,0xcb027899
  41726a:	push   0x40
  41726c:	dec    esi
  41726d:	in     al,dx
  41726e:	popf   
  41726f:	addr16 int 0xdf
  417272:	cmc    
  417273:	mov    esi,edi
  417275:	inc    eax
  417276:	sbb    dl,bl
  417278:	loopne 0x4172d2
  41727a:	mov    ds:0x243cead9,eax
  41727f:	mov    ds:0xb96ddf98,eax
  417284:	or     eax,0xabf44b7d
  417289:	xor    al,0x45
  41728b:	retf   0x534a
  41728e:	inc    eax
  41728f:	pusha  
  417290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417291:	jbe    0x417221
  417293:	frstor [ebp+0x7c]
  417296:	and    esi,ebx
  417298:	fwait
  417299:	call   0x9b51:0xa991631e
  4172a0:	jbe    0x4172dc
  4172a2:	imul   ebp,DWORD PTR [eax],0xfa52da3
  4172a8:	pop    edi
  4172a9:	call   0x4a6e:0xc8c6ff5d
  4172b0:	xchg   ebp,eax
  4172b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b2:	mov    cl,0x6
  4172b4:	push   edx
  4172b5:	js     0x4172d5
  4172b7:	lods   eax,DWORD PTR ds:[esi]
  4172b8:	stc    
  4172b9:	cmp    ebp,ebx
  4172bb:	adc    eax,0x4635d0d1
  4172c0:	pusha  
  4172c1:	sub    eax,0xa3f586ae
  4172c6:	mov    eax,0x5749b6ec
  4172cb:	iret   
  4172cc:	hlt    
  4172cd:	mov    al,0xd8
  4172cf:	and    dl,cl
  4172d1:	and    BYTE PTR [ecx-0xb],al
  4172d4:	ds jno 0x417302
  4172d7:	push   cs
  4172d8:	mov    bl,0x51
  4172da:	cmp    eax,0xb9ef777b
  4172df:	enter  0x7c39,0x4a
  4172e3:	jo     0x4172ad
  4172e5:	and    BYTE PTR [eax],dl
  4172e7:	xchg   ebx,eax
  4172e8:	fimul  WORD PTR [ebx+0x469a9a9a]
  4172ee:	mov    ch,0xcd
  4172f0:	in     al,0xf
  4172f2:	std    
  4172f3:	xor    BYTE PTR [edi-0x4f],bh
  4172f6:	adc    BYTE PTR [esi-0x7cff9ef2],bl
  4172fc:	into   
  4172fd:	shr    dl,1
  4172ff:	mov    ds:0x88d8a290,eax
  417304:	sub    DWORD PTR [edi+ecx*1-0xf],esp
  417308:	lods   al,BYTE PTR ds:[esi]
  417309:	jmp    0x4172bd
  41730b:	in     eax,dx
  41730c:	cwde   
  41730d:	mov    bh,0x30
  41730f:	mov    edi,0xbeccdc61
  417314:	fwait
  417315:	pusha  
  417316:	icebp  
  417317:	xchg   ebx,eax
  417318:	ja     0x417304
  41731a:	(bad)  
  41731b:	retf   
  41731c:	dec    ebx
  41731d:	out    0x80,al
  41731f:	mov    ch,0xe3
  417321:	jbe    0x417325
  417323:	sbb    al,0xb3
  417325:	loop   0x41739c
  417327:	repnz xchg edx,eax
  417329:	xlat   BYTE PTR ds:[ebx]
  41732a:	xchg   ebp,eax
  41732b:	xor    bl,ch
  41732d:	clc    
  41732e:	lods   al,BYTE PTR ds:[esi]
  41732f:	xchg   ecx,eax
  417330:	fwait
  417331:	xchg   ebp,eax
  417332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417333:	addr16 jge 0x4172ba
  417336:	jo     0x417366
  417338:	cmp    DWORD PTR [eax],edx
  41733a:	test   BYTE PTR [ebx-0x3a50ce63],ah
  417340:	fucom  st(0)
  417342:	stos   DWORD PTR es:[edi],eax
  417343:	inc    edi
  417344:	dec    edx
  417345:	iret   
  417346:	in     al,0x23
  417348:	call   0x7d7ad7f7
  41734d:	mov    eax,0x1f1ffc67
  417352:	pop    ds
  417353:	lds    edx,FWORD PTR [eax]
  417355:	sub    eax,0xaa3a312b
  41735a:	inc    ebp
  41735b:	or     al,0x58
  41735d:	outs   dx,BYTE PTR ds:[esi]
  41735e:	cmc    
  41735f:	outs   dx,BYTE PTR ds:[esi]
  417360:	inc    eax
  417361:	jb     0x41739a
  417363:	push   0xfd39add2
  417368:	inc    ebx
  417369:	imul   ebp,DWORD PTR [ebp-0x2c],0x72
  41736d:	sbb    bl,al
  41736f:	out    0x9a,al
  417371:	xchg   edi,eax
  417372:	dec    ebx
  417373:	pop    esp
  417374:	push   di
  417376:	ret    
  417377:	mov    cl,0x4c
  417379:	pop    ebx
  41737a:	fmul   DWORD PTR [bx+di]
  41737d:	pop    ss
  41737e:	hlt    
  41737f:	jmp    0x8fe7001a
  417384:	addr16 jmp 0x4173c0
  417387:	pop    esi
  417388:	test   BYTE PTR [esi-0x2496a52f],dl
  41738e:	jle    0x417347
  417390:	push   cs
  417391:	cmp    al,0x54
  417393:	sti    
  417394:	sbb    al,0xbd
  417396:	aaa    
  417397:	ror    DWORD PTR [esi+0x42],1
  41739a:	inc    ebx
  41739b:	lods   al,BYTE PTR ds:[esi]
  41739c:	cwde   
  41739d:	dec    edi
  41739e:	mov    eax,ds:0xf851f045
  4173a3:	push   edi
  4173a4:	cdq    
  4173a5:	adc    cl,BYTE PTR ds:0x9441ca35
  4173ab:	aam    0x73
  4173ad:	enter  0xfcbf,0xb0
  4173b1:	jl     0x417336
  4173b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173b4:	pop    eax
  4173b5:	retf   
  4173b6:	ror    ebp,cl
  4173b8:	cmp    bl,BYTE PTR [ecx-0x623c0638]
  4173be:	mov    ebp,0xd26c8489
  4173c3:	(bad)  
  4173c4:	retf   
  4173c5:	mov    edi,0x7859093
  4173ca:	pop    edi
  4173cb:	add    esp,DWORD PTR [esi+0x503bf3a9]
  4173d1:	(bad)  
  4173d2:	retf   0xb662
  4173d5:	inc    edi
  4173d6:	and    DWORD PTR [esi+0x3],0xffffff91
  4173da:	cmp    ebx,DWORD PTR [edi+eax*4-0x29348b6b]
  4173e1:	cli    
  4173e2:	mov    ecx,0x52505ad7
  4173e7:	jne    0x4173fb
  4173e9:	mov    edi,0xfde6dbb7
  4173ee:	mov    ecx,0xd56f78df
  4173f3:	test   esi,esp
  4173f5:	inc    esp
  4173f6:	int3   
  4173f7:	addr16 jo 0x417421
  4173fa:	faddp  st(4),st
  4173fc:	pop    ebx
  4173fd:	sub    DWORD PTR [ebp+0x59],eax
  417400:	lds    edx,FWORD PTR [esi+edi*4]
  417403:	xor    ch,BYTE PTR [eax+0x4d5bc145]
  417409:	mov    dl,BYTE PTR [edi-0x670f1aa2]
  41740f:	out    0x84,al
  417411:	push   0xf6192c6f
  417416:	jbe    0x41739d
  417418:	sbb    DWORD PTR [edx+0x11],ebp
  41741b:	pop    esp
  41741c:	inc    edi
  41741d:	int    0x33
  41741f:	add    eax,0xaa2cbca6
  417424:	sub    BYTE PTR [ecx+0x4a0b1824],ch
  41742a:	sub    ebx,DWORD PTR [eax-0x1ee3e235]
  417430:	sti    
  417431:	jle    0x4174a6
  417433:	cmp    ebp,DWORD PTR [ebx+ecx*1+0x587f489d]
  41743a:	push   ds
  41743b:	mov    eax,0x9c4bee0d
  417440:	lods   al,BYTE PTR ds:[esi]
  417441:	cs pop edi
  417443:	add    bh,BYTE PTR [ecx+ebp*2+0x1c]
  417447:	ss adc al,0x3f
  41744a:	outs   dx,DWORD PTR ds:[esi]
  41744b:	xchg   edi,eax
  41744c:	jg     0x41740c
  41744e:	xor    DWORD PTR [esp+edx*1],0x74
  417452:	loope  0x417439
  417454:	js     0x417491
  417456:	pop    esi
  417457:	jne    0x4174c1
  417459:	aam    0xc9
  41745b:	ss or  al,0x32
  41745e:	jmp    0x3248:0x8ff8619b
  417465:	jecxz  0x4173ea
  417467:	inc    ebp
  417468:	jns    0x417428
  41746a:	retf   
  41746b:	in     eax,dx
  41746c:	pusha  
  41746d:	arpl   si,bx
  41746f:	push   eax
  417470:	cmp    al,0xa9
  417472:	jp     0x41743a
  417474:	mov    cl,0xfc
  417476:	mov    ebx,0xf88b0639
  41747b:	(bad)  
  41747c:	loopne 0x417498
  41747e:	das    
  41747f:	pop    edx
  417480:	aas    
  417481:	or     eax,0xf1465f0b
  417486:	(bad)  
  417487:	loopne 0x417495
  417489:	or     DWORD PTR [esi+edx*8-0x42],eax
  41748d:	push   edx
  41748e:	push   cs
  41748f:	jae    0x417505
  417491:	or     eax,0x1cb7c171
  417496:	add    eax,esp
  417498:	xchg   ebp,eax
  417499:	mov    ecx,edi
  41749b:	add    dl,cl
  41749d:	pop    ebp
  41749e:	push   es
  41749f:	cdq    
  4174a0:	aam    0xc6
  4174a2:	xor    esi,ecx
  4174a4:	fwait
  4174a5:	out    dx,eax
  4174a6:	addr16 out 0x7d,al
  4174a9:	lods   eax,DWORD PTR ds:[esi]
  4174aa:	jo     0x41751c
  4174ac:	push   ecx
  4174ad:	fnsave [eax]
  4174af:	pop    esp
  4174b0:	pop    ecx
  4174b1:	lock or bh,BYTE PTR [esi]
  4174b4:	push   edx
  4174b5:	mov    ds:0x20c99bf0,al
  4174ba:	nop
  4174bb:	rol    DWORD PTR [edx],cl
  4174bd:	cmp    al,bh
  4174bf:	adc    cl,BYTE PTR [ebp+0x3e]
  4174c2:	aam    0x5b
  4174c4:	inc    edx
  4174c5:	add    ch,bl
  4174c7:	retf   0x72ba
  4174ca:	pop    esi
  4174cb:	xchg   ebx,eax
  4174cc:	daa    
  4174cd:	pop    esi
  4174ce:	cdq    
  4174cf:	dec    edx
  4174d0:	not    BYTE PTR [esi+0x462fc7cb]
  4174d6:	scas   eax,DWORD PTR es:[edi]
  4174d7:	mov    esi,0x6fca5f69
  4174dc:	pop    esi
  4174dd:	mov    ebx,DWORD PTR [esi+0x6fee0def]
  4174e3:	leave  
  4174e4:	cmc    
  4174e5:	xor    DWORD PTR [edi-0x1c],ecx
  4174e8:	test   BYTE PTR [edi],cl
  4174ea:	stc    
  4174eb:	pop    eax
  4174ec:	push   ecx
  4174ed:	(bad)  
  4174ee:	and    cl,bh
  4174f0:	shr    DWORD PTR [edx+0x179096c9],1
  4174f6:	add    ah,BYTE PTR [ecx+0x714543d6]
  4174fc:	stc    
  4174fd:	inc    ecx
  4174fe:	test   al,0x6d
  417500:	cmp    al,BYTE PTR [ebx-0x61]
  417503:	push   0x33333874
  417508:	xchg   ch,cl
  41750a:	dec    ebx
  41750b:	or     al,0x13
  41750d:	add    al,0x67
  41750f:	sub    DWORD PTR [eax+0x490fb852],esp
  417515:	mov    edx,0x6b91009a
  41751a:	daa    
  41751b:	pop    ebx
  41751c:	lea    eax,[esi]
  41751e:	pop    esp
  41751f:	mov    DWORD PTR [eax],ebx
  417521:	out    0x96,al
  417523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417524:	rol    BYTE PTR [esi-0xc],cl
  417527:	std    
  417528:	imul   edx,DWORD PTR [ebx-0x43f24e32],0x759a7f6e
  417532:	neg    BYTE PTR [ebx]
  417534:	add    bl,BYTE PTR [esi+0x6f8f946f]
  41753a:	popf   
  41753b:	aam    0x6e
  41753d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41753e:	jmp    DWORD PTR [ebx+ebp*1+0x4c]
  417542:	stos   BYTE PTR es:[edi],al
  417543:	mov    bh,0x88
  417545:	mov    edi,DWORD PTR [ebx+0x6]
  417548:	mov    bl,al
  41754a:	mov    bl,0x24
  41754c:	lods   eax,DWORD PTR ds:[esi]
  41754d:	inc    esi
  41754e:	lods   eax,DWORD PTR ds:[esi]
  41754f:	test   BYTE PTR [eax+0x42],dl
  417552:	or     eax,eax
  417554:	or     eax,0x67db0fb7
  417559:	test   ah,ah
  41755b:	add    al,0x6d
  41755d:	jbe    0x4175cf
  41755f:	daa    
  417560:	ja     0x4175c0
  417562:	sub    DWORD PTR [edx-0x4e3b7359],ebp
  417568:	popa   
  417569:	rcr    BYTE PTR [edx+0x79],0x4f
  41756d:	xlat   BYTE PTR ds:[ebx]
  41756e:	jae    0x417589
  417570:	sub    BYTE PTR [ecx+eax*1],cl
  417573:	(bad)  
  417574:	push   0x8650d11c
  417579:	push   cs
  41757a:	(bad)  
  41757c:	div    DWORD PTR [edi+0x20]
  41757f:	xor    dl,al
  417581:	xor    al,0x6a
  417583:	xchg   ebx,eax
  417584:	xor    al,0x3f
  417586:	jnp    0x4175a8
  417588:	push   DWORD PTR [ebp-0x5ae1f18e]
  41758e:	scas   al,BYTE PTR es:[edi]
  41758f:	(bad)  [ebx-0x5e]
  417592:	aas    
  417593:	jno    0x417521
  417595:	push   ds
  417596:	(bad)  
  417597:	push   DWORD PTR [edi]
  417599:	jne    0x4175cc
  41759b:	or     eax,0xd4700b59
  4175a0:	popf   
  4175a1:	fldcw  WORD PTR [edx]
  4175a3:	adc    edi,ebx
  4175a5:	jmp    0x4175fb
  4175a7:	rol    BYTE PTR [ebp-0x4c],1
  4175aa:	retf   0xe56a
  4175ad:	not    DWORD PTR [ecx-0x47a76670]
  4175b3:	call   0x9250:0x32387d0d
  4175ba:	(bad)  
  4175bb:	mov    al,ds:0xbf57ecb9
  4175c0:	retf   0x8365
  4175c3:	out    dx,al
  4175c4:	xor    dl,BYTE PTR [edx]
  4175c6:	mov    cl,0xaf
  4175c8:	lea    eax,[ecx+eax*1-0x74cbe5f1]
  4175cf:	fcomp  QWORD PTR [eax-0x1b]
  4175d2:	pop    es
  4175d3:	inc    esp
  4175d4:	xchg   bl,al
  4175d6:	je     0x417600
  4175d8:	sub    edx,DWORD PTR [esi+0xf]
  4175db:	pusha  
  4175dc:	xchg   edi,eax
  4175dd:	fcom   DWORD PTR [edx-0x4b2ef92f]
  4175e3:	or     eax,0x8870daf7
  4175e8:	bnd ret 0x9859
  4175ec:	xor    ebx,ebx
  4175ee:	add    DWORD PTR [ebx+0x4],edi
  4175f1:	mov    ebx,0xbacbfb5f
  4175f6:	call   0xd26be16e
  4175fb:	or     BYTE PTR [esi],ch
  4175fd:	mov    ch,0xc
  4175ff:	mov    BYTE PTR [esi+0x2d],0xe7
  417603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417604:	lahf   
  417605:	aaa    
  417606:	jnp    0x417683
  417608:	pop    edx
  417609:	xor    eax,0xcf7b1d2c
  41760e:	shl    BYTE PTR [ebp+0x11],1
  417611:	pusha  
  417612:	retf   0x7fed
  417615:	loope  0x417653
  417617:	xor    dh,BYTE PTR [eax-0x3b]
  41761a:	retf   
  41761b:	mov    WORD PTR [edx],ss
  41761d:	adc    BYTE PTR [ebx+0x39d19eab],al
  417623:	push   ebp
  417624:	div    BYTE PTR [ecx]
  417626:	mov    es,ecx
  417628:	dec    eax
  417629:	call   0x34bb4f2e
  41762e:	or     BYTE PTR fs:[esi],dh
  417631:	or     al,0x49
  417633:	xchg   esi,eax
  417634:	sbb    edx,DWORD PTR [edx+0x47]
  417637:	lahf   
  417638:	aad    0x3d
  41763a:	repz loop 0x4175e9
  41763d:	xlat   BYTE PTR ds:[ebx]
  41763e:	jb     0x4175f6
  417640:	pop    ebx
  417641:	out    0x8a,eax
  417643:	pop    ss
  417644:	sbb    BYTE PTR [esi+0x34959d2e],ah
  41764a:	mov    ch,BYTE PTR [esi+0x3fe83cb3]
  417650:	fiadd  WORD PTR [esi]
  417652:	mov    ch,0x54
  417654:	enter  0x9490,0x89
  417658:	lods   al,BYTE PTR ds:[esi]
  417659:	imul   esi,DWORD PTR [ecx+0x23],0x6e
  41765d:	(bad)  [ebp-0x25]
  417660:	mov    ebx,0xa053648e
  417665:	add    al,0xbe
  417667:	inc    eax
  417668:	stc    
  417669:	xor    al,0x51
  41766b:	in     al,0xc9
  41766d:	sbb    esi,0x716dd212
  417673:	mov    al,ds:0x1838e986
  417678:	call   0xbf69:0x3250c877
  41767f:	in     eax,dx
  417680:	mov    cl,0x18
  417682:	pusha  
  417683:	cmp    ecx,DWORD PTR [ebx]
  417685:	xor    al,0x22
  417687:	ja     0x417694
  417689:	fucomip st,st(4)
  41768b:	dec    bl
  41768d:	pop    esp
  41768e:	inc    edx
  41768f:	xchg   edx,eax
  417690:	inc    ebx
  417691:	sbb    dl,BYTE PTR [ebx-0x44]
  417694:	pop    ecx
  417695:	inc    esi
  417696:	mov    dl,0x17
  417698:	pop    eax
  417699:	pop    esi
  41769a:	mov    esi,0x4d937864
  41769f:	and    edi,ebp
  4176a1:	dec    esi
  4176a2:	push   eax
  4176a3:	sub    DWORD PTR [eax+ebp*8-0xb],ebx
  4176a7:	sub    dh,dh
  4176a9:	mov    ?,WORD PTR [edi+0x6c]
  4176ac:	data16 xor ah,BYTE PTR [edi]
  4176af:	adc    al,0x8b
  4176b1:	and    eax,0x41fc117a
  4176b6:	jne    0x4176c9
  4176b8:	out    dx,eax
  4176b9:	jb     0x41770d
  4176bb:	out    0x6,al
  4176bd:	xchg   BYTE PTR [esp+esi*1],ch
  4176c0:	jmp    0x4176e4
  4176c2:	push   ss
  4176c3:	xor    cl,BYTE PTR [edi-0x2d364bb9]
  4176c9:	out    0xb1,eax
  4176cb:	jle    0x41769e
  4176cd:	outs   dx,BYTE PTR ds:[esi]
  4176ce:	adc    edx,eax
  4176d0:	cmp    eax,0xbf062e92
  4176d5:	cmp    ebx,DWORD PTR [edx+0x4d]
  4176d8:	mov    bl,0x41
  4176da:	jbe    0x417666
  4176dc:	stos   BYTE PTR es:[edi],al
  4176dd:	aaa    
  4176de:	fld    DWORD PTR [edi+0x79]
  4176e1:	adc    eax,0xa3abb120
  4176e6:	fimul  DWORD PTR [eax-0x773ec1eb]
  4176ec:	sub    al,0x97
  4176ee:	daa    
  4176ef:	or     DWORD PTR [ecx-0xd8b2071],edi
  4176f5:	push   esi
  4176f6:	jecxz  0x41769c
  4176f8:	or     al,0xf
  4176fa:	and    DWORD PTR [eax],0xffffff9b
  4176fd:	mov    edx,0x23135cd1
  417702:	and    al,0xa7
  417704:	xchg   BYTE PTR [ebx-0x38],cl
  417707:	cmp    al,0xdc
  417709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41770a:	rcl    DWORD PTR [ebx-0x62],0x23
  41770e:	inc    ebp
  41770f:	xor    DWORD PTR [ebp+0x4ec82279],ebx
  417715:	out    dx,eax
  417716:	adc    DWORD PTR [edi+0x617bfecd],esp
  41771c:	rcr    BYTE PTR [ebx-0x4a],1
  41771f:	or     dh,BYTE PTR [edx]
  417721:	out    0x2e,al
  417723:	test   DWORD PTR [edx*2+0x2154f184],eax
  41772a:	sahf   
  41772b:	gs xor al,0xc5
  41772e:	push   ds
  41772f:	aaa    
  417730:	outs   dx,DWORD PTR ds:[esi]
  417731:	aas    
  417732:	add    BYTE PTR [si-0x6d91],bh
  417737:	repnz fdivr QWORD PTR [edx-0x4292e7f0]
  41773e:	mov    bh,0xd2
  417740:	inc    edi
  417741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417742:	mov    bl,0x54
  417744:	stc    
  417745:	imul   edi,DWORD PTR [ebx],0xb2cfa653
  41774b:	iret   
  41774c:	jmp    0x417765
  41774e:	xor    ebp,DWORD PTR [ebp-0x6e]
  417751:	shl    DWORD PTR [ebx+eiz*8],1
  417754:	les    esi,FWORD PTR [ebx-0x4f]
  417757:	mov    esi,0x40348d6
  41775c:	sti    
  41775d:	lods   al,BYTE PTR ds:[esi]
  41775e:	out    dx,al
  41775f:	test   DWORD PTR [esi+0x77ea33d7],0x2621d7c4
  417769:	leave  
  41776a:	xchg   esp,eax
  41776b:	xor    al,0x24
  41776d:	cmp    dl,ch
  41776f:	mov    eax,0xf7de9e64
  417774:	aam    0x0
  417776:	aad    0x3d
  417778:	sbb    esp,DWORD PTR [ebx+0x3e]
  41777b:	inc    ecx
  41777c:	ds add eax,0x13d56aee
  417782:	push   eax
  417783:	aaa    
  417784:	and    BYTE PTR [edx],ch
  417786:	ja     0x41777a
  417788:	mov    ch,0x49
  41778a:	aaa    
  41778b:	xor    BYTE PTR [edi],bh
  41778d:	mov    ah,0x1b
  41778f:	and    al,0x68
  417791:	inc    esi
  417792:	pop    ecx
  417793:	retf   
  417794:	mov    edx,0x5e6a3747
  417799:	inc    eax
  41779a:	popa   
  41779b:	cmp    DWORD PTR [ebp+0x687e606b],ebx
  4177a1:	mov    ebx,0x4efa443b
  4177a6:	pop    edi
  4177a7:	mov    ecx,esi
  4177a9:	dec    ebx
  4177aa:	fnstsw WORD PTR [ebp+0x46332606]
  4177b0:	sbb    eax,0xb995a881
  4177b5:	jmp    0x417752
  4177b7:	enter  0x1ff2,0x15
  4177bb:	push   esi
  4177bd:	add    edi,DWORD PTR [eax-0x31]
  4177c0:	ja     0x4177b7
  4177c2:	fidivr WORD PTR [edx+0x70]
  4177c5:	retf   0xf10
  4177c8:	mov    ch,0xe8
  4177ca:	xor    ah,BYTE PTR [esi]
  4177cc:	loope  0x417771
  4177ce:	push   es
  4177cf:	call   0x6257:0x34213191
  4177d6:	(bad)  
  4177d7:	jecxz  0x4177ac
  4177d9:	cmp    BYTE PTR [ecx-0x4012913d],dh
  4177df:	adc    ecx,DWORD PTR [ecx]
  4177e1:	iret   
  4177e2:	ret    
  4177e3:	xchg   ecx,eax
  4177e4:	lock unpckhps xmm6,XMMWORD PTR [edx]
  4177e8:	xor    al,0x59
  4177ea:	xchg   ebp,eax
  4177eb:	sub    dl,bh
  4177ed:	sub    esp,DWORD PTR [eax+0x5a]
  4177f0:	mov    esi,0xcdb47b82
  4177f5:	mov    ds,WORD PTR [eax-0x4b]
  4177f8:	pusha  
  4177f9:	lea    edx,[ebx]
  4177fb:	out    dx,eax
  4177fc:	sub    BYTE PTR [esi+0x3a],0xca
  417800:	stc    
  417801:	nop
  417802:	inc    ecx
  417803:	repnz sbb dl,BYTE PTR [edi]
  417806:	cmp    al,0xc8
  417808:	cmp    eax,0x1ca6f789
  41780d:	add    al,0xf
  41780f:	pop    esp
  417810:	out    dx,al
  417811:	call   0xf2b02ba3
  417816:	mov    dl,0x76
  417818:	sbb    al,0x30
  41781a:	js     0x4177e0
  41781c:	jecxz  0x4177de
  41781e:	cli    
  41781f:	xor    DWORD PTR [esi+0x3300eb02],esi
  417825:	jbe    0x417831
  417827:	dec    edi
  417828:	jo     0x41787e
  41782a:	sbb    ebp,0xcfa9fbb8
  417830:	int3   
  417831:	xlat   BYTE PTR ds:[ebx]
  417832:	jne    0x417862
  417834:	imul   edi,DWORD PTR [edi],0xffffffac
  417837:	push   cs
  417838:	cmp    BYTE PTR [ebx+ebp*8-0x724c668d],dl
  41783f:	sbb    ebp,DWORD PTR [ebx]
  417841:	push   ebp
  417842:	sub    eax,0xbae828b4
  417847:	jge    0x417850
  417849:	fild   WORD PTR [esi]
  41784b:	pop    edx
  41784c:	mov    ebx,DWORD PTR [ecx-0x405e1ad6]
  417852:	xchg   edi,eax
  417853:	into   
  417854:	xchg   ebp,eax
  417855:	jle    0x4178bf
  417857:	add    cl,BYTE PTR ds:[edx+eax*1]
  41785b:	mov    eax,0x82f0765f
  417860:	(bad)  
  417861:	cmp    cl,dl
  417863:	mov    eax,ds:0x3b34e3fd
  417868:	adc    bl,bh
  41786a:	pop    ds
  41786b:	dec    esp
  41786c:	in     eax,0x1e
  41786e:	rol    bh,0xd2
  417871:	cmp    dl,cl
  417873:	retf   0x25f2
  417876:	push   es
  417877:	sbb    ecx,DWORD PTR [ebp+0x10958e2c]
  41787d:	jl     0x417806
  41787f:	cdq    
  417880:	push   ss
  417881:	stc    
  417882:	out    0x59,al
  417884:	or     BYTE PTR [ecx],0xa8
  417887:	ss sahf 
  417889:	cwde   
  41788a:	ror    DWORD PTR [ebx],0x9
  41788d:	adc    al,0xfa
  41788f:	lea    edi,[edx]
  417891:	dec    ebp
  417892:	fidiv  DWORD PTR [ebx+0x70ccf16e]
  417898:	and    DWORD PTR ds:0x3dc9900a,ecx
  41789e:	pop    edi
  41789f:	or     dl,0x44
  4178a2:	imul   ebp,eax,0xd5182e01
  4178a8:	cld    
  4178a9:	mov    bl,0xad
  4178ab:	call   0x7a73f5ae
  4178b0:	adc    al,0x41
  4178b2:	adc    DWORD PTR [ebp-0x43],esp
  4178b5:	or     eax,0x5842759
  4178ba:	mov    dl,0x71
  4178bc:	cmp    BYTE PTR [ecx+0x63b87c17],cl
  4178c2:	adc    DWORD PTR gs:[edx],edx
  4178c5:	sub    esi,0xaf8e0b5
  4178cb:	sub    eax,0x1950330a
  4178d0:	adc    bl,BYTE PTR [ebx+edi*2-0x3e]
  4178d4:	or     eax,0x893a7424
  4178d9:	stos   BYTE PTR es:[edi],al
  4178da:	sub    eax,0xaa170a80
  4178df:	add    DWORD PTR [eax+0x6c07936c],eax
  4178e5:	out    dx,eax
  4178e6:	not    DWORD PTR [ebp+0x23]
  4178e9:	dec    esi
  4178ea:	mov    edi,0x6351b6da
  4178ef:	dec    ebp
  4178f0:	icebp  
  4178f1:	xor    BYTE PTR [ecx],cl
  4178f3:	ret    0xa7c0
  4178f6:	sub    edx,esi
  4178f8:	xchg   edx,eax
  4178f9:	mov    ds:0xd0f3d94,al
  4178fe:	ja     0x417907
  417900:	stos   BYTE PTR es:[edi],al
  417901:	mov    cs,WORD PTR [esi+eax*1-0x26de968f]
  417908:	sub    ebp,DWORD PTR [esi+eiz*2+0x2e1d4463]
  41790f:	loope  0x4178fe
  417911:	adc    eax,0x3c61673
  417916:	cmp    esi,edi
  417918:	cdq    
  417919:	pop    ebp
  41791a:	iret   
  41791b:	ret    
  41791c:	test   BYTE PTR [esi+esi*8],bl
  41791f:	inc    edi
  417920:	xchg   ebp,eax
  417921:	push   0xb314c408
  417926:	mov    eax,0x1632bd86
  41792b:	sar    al,0xc1
  41792e:	in     al,0x8d
  417930:	fwait
  417931:	dec    esp
  417932:	mov    ebp,0xa2c337e1
  417937:	pop    edi
  417938:	xchg   edi,ebx
  41793a:	xor    eax,0xf17d4d2f
  41793f:	cwde   
  417940:	fdiv   QWORD PTR [ebx-0x31020c22]
  417946:	test   BYTE PTR [ecx],al
  417948:	ja     0x41798f
  41794a:	jg     0x4178e6
  41794c:	mov    bl,0xb0
  41794e:	mov    ah,0xab
  417950:	int3   
  417951:	add    DWORD PTR [edx],esi
  417953:	xor    eax,0x8064ba2b
  417958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417959:	fldz   
  41795b:	mov    BYTE PTR [edx],cl
  41795d:	ins    DWORD PTR es:[edi],dx
  41795e:	outs   dx,BYTE PTR ds:[esi]
  41795f:	inc    ebx
  417960:	das    
  417961:	ins    DWORD PTR es:[edi],dx
  417962:	out    dx,al
  417963:	adc    BYTE PTR [ebp-0x59],cl
  417966:	jo     0x4179a1
  417968:	ds pushf 
  41796a:	sub    eax,0x52506d15
  41796f:	xor    ecx,esi
  417971:	sbb    BYTE PTR [eax+0x52],0xea
  417975:	inc    edx
  417976:	mov    ds:0x2ea29e71,al
  41797b:	adc    bl,BYTE PTR [eax]
  41797d:	mov    al,0x61
  41797f:	push   edx
  417980:	rcl    edx,0x34
  417983:	sbb    eax,0x986b7cab
  417988:	sbb    esi,edx
  41798a:	int    0x8a
  41798c:	mov    edx,esp
  41798e:	xchg   BYTE PTR [esi],bh
  417990:	cli    
  417991:	(bad)  
  417993:	mov    esp,0xd75970b7
  417998:	ror    DWORD PTR [eax-0x7d],1
  41799b:	(bad)  
  41799c:	xchg   edi,eax
  41799d:	cld    
  41799e:	jno    0x417951
  4179a0:	jno    0x417982
  4179a2:	and    esp,DWORD PTR [edi+0x695157f0]
  4179a8:	cmp    eax,0x4f5d44ea
  4179ad:	out    dx,al
  4179ae:	out    0x85,al
  4179b0:	jecxz  0x4179ef
  4179b2:	not    DWORD PTR [edx+edi*1-0x4]
  4179b6:	iret   
  4179b7:	std    
  4179b8:	fisub  WORD PTR [esp+esi*2-0x5e]
  4179bc:	xor    BYTE PTR [edi*2+0x48b2e41c],bh
  4179c3:	sub    BYTE PTR [eax+0x7c5f00f9],dl
  4179c9:	sub    eax,0x5605ab5c
  4179ce:	add    eax,0xf4b5d0ee
  4179d3:	das    
  4179d4:	mov    dh,0x4e
  4179d6:	xlat   BYTE PTR ds:[ebx]
  4179d7:	and    dh,cl
  4179d9:	jb     0x4179d1
  4179db:	jno    0x417a0b
  4179dd:	jno    0x417a50
  4179df:	sub    eax,0x4cddf779
  4179e4:	sub    ch,BYTE PTR [ebp+0x629de4bf]
  4179ea:	daa    
  4179eb:	push   ss
  4179ec:	sbb    esp,DWORD PTR [ebx+ebx*4+0x2d]
  4179f0:	push   ebp
  4179f1:	mov    ecx,0x30e63276
  4179f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f7:	jmp    0x7a3107cd
  4179fc:	repz mov cl,0xa3
  4179ff:	bswap  ebx
  417a01:	addr16 mov esi,0x975db94f
  417a07:	mov    al,ds:0xe55f5d2d
  417a0c:	push   ss
  417a0d:	mov    edi,0x80dea96
  417a12:	pop    ebp
  417a13:	lock adc eax,0xa311c5af
  417a19:	mov    cl,0xa8
  417a1b:	jl     0x4179a2
  417a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a1e:	sub    DWORD PTR [ebx],edi
  417a20:	mov    edx,0xb098fb7c
  417a25:	inc    edx
  417a26:	loopne 0x417a39
  417a28:	inc    edx
  417a29:	lods   al,BYTE PTR ds:[esi]
  417a2a:	jns    0x417a58
  417a2c:	sbb    eax,0x3e38ef88
  417a31:	mov    ds:0x51f75fb7,eax
  417a36:	cmc    
  417a37:	clc    
  417a38:	pop    edx
  417a39:	iret   
  417a3a:	cli    
  417a3b:	(bad)  
  417a3c:	push   ss
  417a3d:	fmul   st(4),st
  417a3f:	aaa    
  417a40:	fnstcw WORD PTR [eax+edi*2-0x4d73c0]
  417a47:	adc    DWORD PTR [edi-0x1],esp
  417a4a:	imul   edi,DWORD PTR [edi-0x10135ac6],0xffffff87
  417a51:	mov    ebx,esp
  417a53:	pop    ecx
  417a54:	ret    0x9ed9
  417a57:	push   esi
  417a58:	jbe    0x417acc
  417a5a:	shl    BYTE PTR [edi],1
  417a5c:	sbb    esi,DWORD PTR [edx+0x4]
  417a5f:	cmc    
  417a60:	jmp    0x30a4:0x77e80acb
  417a67:	aas    
  417a68:	push   edx
  417a69:	adc    esi,DWORD PTR [ecx+0x6b]
  417a6c:	or     eax,0x2e87b207
  417a71:	pushf  
  417a72:	push   esi
  417a73:	in     eax,dx
  417a74:	or     eax,0xc4c3184e
  417a79:	sbb    eax,0xc6d97a67
  417a7e:	mov    esp,0x786e3507
  417a83:	push   eax
  417a84:	xchg   BYTE PTR [edx-0x7b],ah
  417a87:	in     eax,dx
  417a88:	test   bh,ah
  417a8a:	and    ebp,DWORD PTR [ebp+0x12]
  417a8d:	pop    ss
  417a8e:	or     esp,DWORD PTR [ecx+0x1635573]
  417a94:	pusha  
  417a95:	adc    ecx,ebp
  417a97:	popa   
  417a98:	call   0xd41c:0x9777fd58
  417a9f:	push   0x65
  417aa1:	mov    WORD PTR [eax-0x55361e41],gs
  417aa7:	outs   dx,DWORD PTR ds:[esi]
  417aa8:	mov    dh,0x6f
  417aaa:	retf   
  417aab:	mov    eax,0x95acb8e0
  417ab0:	idiv   BYTE PTR [eax]
  417ab2:	push   cs
  417ab3:	mov    fs:0xa0fb4e3a,eax
  417ab9:	out    0xfb,eax
  417abb:	xlat   BYTE PTR ds:[ebx]
  417abc:	dec    ecx
  417abd:	pop    ds
  417abe:	mov    cl,0x82
  417ac0:	jecxz  0x417ac8
  417ac2:	(bad)  
  417ac3:	rol    DWORD PTR [edi+0x4b],0x54
  417ac7:	fiadd  DWORD PTR [edi+0x1ac8a7bb]
  417acd:	and    ebx,edi
  417acf:	(bad)  
  417ad0:	ror    DWORD PTR [eax+0x43],cl
  417ad3:	jae    0x417aa9
  417ad5:	add    DWORD PTR [esi-0x42],ecx
  417ad8:	aad    0x38
  417ada:	jbe    0x417b3f
  417adc:	dec    ebp
  417add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ade:	dec    ecx
  417adf:	fwait
  417ae0:	and    bh,BYTE PTR [eax-0x613cad10]
  417ae6:	xor    eax,0x399b8e1f
  417aeb:	popf   
  417aec:	xchg   esi,eax
  417aed:	mov    dh,BYTE PTR ds:0xd8ba7808
  417af3:	in     eax,0x4f
  417af5:	pop    ebp
  417af6:	push   0xb6f555df
  417afb:	jmp    0x417ad5
  417afd:	xor    cl,0xf8
  417b00:	dec    esi
  417b01:	(bad)  
  417b02:	lahf   
  417b03:	int3   
  417b04:	mov    edi,0xb4186f97
  417b09:	fs and al,0xc5
  417b0c:	sbb    esi,ebp
  417b0e:	xchg   esp,eax
  417b0f:	pushf  
  417b10:	or     eax,0x63932dd
  417b15:	push   ebp
  417b16:	lods   al,BYTE PTR ds:[esi]
  417b17:	xlat   BYTE PTR ds:[ebx]
  417b18:	adc    dl,BYTE PTR [esi+0x33670811]
  417b1e:	es scas al,BYTE PTR es:[edi]
  417b20:	(bad)  
  417b21:	es dec esp
  417b23:	mov    cl,0xee
  417b25:	adc    al,0x43
  417b27:	push   eax
  417b28:	mov    edi,0x83f5781c
  417b2d:	and    ebp,DWORD PTR [ebp+0x57cbaacc]
  417b33:	test   dl,bh
  417b35:	mov    cl,0x34
  417b37:	push   edx
  417b38:	std    
  417b39:	shl    ah,0xe9
  417b3c:	mov    ds:0x58a46568,eax
  417b41:	iret   
  417b42:	imul   eax,DWORD PTR [edx-0x20bba053],0xffffffbb
  417b49:	fisub  DWORD PTR [esi-0x73f5fd3]
  417b4f:	pop    ebx
  417b50:	fwait
  417b51:	pop    edi
  417b52:	aaa    
  417b53:	xchg   ebx,eax
  417b54:	push   cs
  417b55:	adc    esi,DWORD PTR [eax+0x4954620d]
  417b5b:	pop    ecx
  417b5c:	mov    ds:0xd5e0c877,al
  417b61:	xchg   esp,eax
  417b62:	jns    0x417b1e
  417b64:	in     al,dx
  417b65:	ret    
  417b66:	cmc    
  417b67:	adc    al,0x16
  417b69:	scas   al,BYTE PTR es:[edi]
  417b6a:	scas   al,BYTE PTR es:[edi]
  417b6b:	dec    eax
  417b6c:	leave  
  417b6d:	aam    0xdf
  417b6f:	dec    ebx
  417b70:	mov    WORD PTR [ebx+eax*1],?
  417b73:	ret    0xf316
  417b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b77:	stc    
  417b78:	and    dl,BYTE PTR [ebx]
  417b7a:	ret    
  417b7b:	dec    edi
  417b7c:	xchg   edi,eax
  417b7d:	bound  eax,QWORD PTR [ecx]
  417b7f:	add    BYTE PTR es:[edx],dh
  417b82:	mov    dl,0xe2
  417b84:	adc    eax,0xcdde271f
  417b89:	or     ebx,ecx
  417b8b:	jae    0x417b9b
  417b8d:	out    0x72,eax
  417b8f:	push   esi
  417b90:	xor    esi,DWORD PTR [ebp-0x74c33145]
  417b96:	(bad)  
  417b97:	jnp    0x417bea
  417b99:	pop    ss
  417b9a:	add    BYTE PTR [ecx+0x74],cl
  417b9d:	ret    0x7dab
  417ba0:	and    al,0x41
  417ba2:	test   DWORD PTR [ecx-0x296bb5c0],ecx
  417ba8:	pop    eax
  417ba9:	retf   
  417baa:	loop   0x417b2f
  417bac:	pop    ds
  417bad:	or     esp,DWORD PTR [edi-0x3419bd2f]
  417bb3:	cmp    edi,ecx
  417bb5:	lahf   
  417bb6:	sub    ecx,DWORD PTR [ecx]
  417bb8:	in     al,0x7c
  417bba:	div    BYTE PTR [eax+0x10a86872]
  417bc0:	xor    BYTE PTR [edx-0x2617ba20],bh
  417bc6:	add    BYTE PTR [esp+edx*1-0x2e4e4f38],0xa3
  417bce:	cmp    al,0xe3
  417bd0:	sub    DWORD PTR [ebx-0xe],eax
  417bd3:	cmp    eax,DWORD PTR [edi-0xe71ba26]
  417bd9:	fadd   DWORD PTR [bx+di+0x56]
  417bdd:	int3   
  417bde:	sbb    eax,0x33397474
  417be3:	inc    eax
  417be4:	jne    0x417c4e
  417be6:	xlat   BYTE PTR ds:[ebx]
  417be7:	inc    esp
  417be8:	(bad)  
  417be9:	std    
  417bea:	ja     0x417c24
  417bec:	and    BYTE PTR [ebx-0x61],al
  417bef:	inc    ebp
  417bf0:	xor    dh,al
  417bf2:	inc    ebx
  417bf3:	add    edx,DWORD PTR [eax+0x63b7a219]
  417bf9:	(bad)  [ecx+0x46]
  417bfc:	fbstp  TBYTE PTR [ebx]
  417bfe:	addr16 gs jns 0x417c71
  417c02:	mov    bh,0x79
  417c04:	rcr    BYTE PTR [ebp-0x15],cl
  417c07:	push   edx
  417c08:	pop    ebx
  417c09:	ja     0x417c20
  417c0b:	xchg   edx,eax
  417c0c:	or     dl,BYTE PTR [ebx-0x5f9f4b7]
  417c12:	imul   ebx,DWORD PTR [eax],0xc
  417c15:	and    al,0x32
  417c17:	fdivr  DWORD PTR [edx+0x35]
  417c1a:	and    BYTE PTR [eax],0x4f
  417c1d:	loop   0x417c55
  417c1f:	and    eax,0x4796ae8f
  417c24:	shr    esp,0x24
  417c27:	cmp    ecx,ebp
  417c29:	add    bl,dh
  417c2b:	test   bh,bl
  417c2d:	push   edx
  417c2e:	inc    ecx
  417c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c30:	je     0x417c6b
  417c32:	fidivr DWORD PTR [ebp+0x60599cb2]
  417c38:	call   0xefc2:0xbcbf4d60
  417c3f:	pop    eax
  417c40:	adc    DWORD PTR [ecx+0x67fe34b],eax
  417c46:	in     al,0x10
  417c48:	push   edx
  417c49:	test   al,0x42
  417c4b:	loop   0x417c11
  417c4d:	outs   dx,BYTE PTR ds:[esi]
  417c4e:	ja     0x417be6
  417c50:	stos   BYTE PTR es:[edi],al
  417c51:	imul   edx,DWORD PTR [edi+0x10c571b2],0xffffffa3
  417c58:	xchg   dl,dh
  417c5a:	adc    bl,BYTE PTR [esp+esi*8-0x4d]
  417c5e:	adc    eax,esi
  417c60:	mov    bh,0xe2
  417c62:	cdq    
  417c63:	jle    0x417c4a
  417c65:	jae    0x417c32
  417c67:	xchg   esi,ebx
  417c69:	aad    0x7c
  417c6b:	push   esp
  417c6c:	or     BYTE PTR [edx],ch
  417c6e:	fisttp DWORD PTR [edx]
  417c70:	int    0x7
  417c72:	xchg   edx,eax
  417c73:	xchg   DWORD PTR ds:[eax],edi
  417c76:	in     al,0x2a
  417c78:	add    ah,BYTE PTR [eax-0x25]
  417c7b:	lahf   
  417c7c:	mov    eax,ds:0x67ef14c3
  417c81:	(bad)  
  417c83:	lahf   
  417c84:	mov    esp,ebx
  417c86:	mov    ch,0xf5
  417c88:	xor    DWORD PTR [esp+esi*2],0x9b5789ec
  417c8f:	fsubr  DWORD PTR [eax-0x603111e9]
  417c95:	fsub   QWORD PTR [edi+esi*8]
  417c98:	mov    ch,0x66
  417c9a:	xchg   DWORD PTR [ecx+0x5f],edi
  417c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c9e:	mov    ds:0xccfa106e,al
  417ca3:	jae    0x417d07
  417ca5:	call   0xc366:0xc77610e7
  417cac:	stos   BYTE PTR es:[edi],al
  417cad:	daa    
  417cae:	outs   dx,DWORD PTR ds:[esi]
  417caf:	push   ds
  417cb0:	jo     0x417d13
  417cb2:	sti    
  417cb3:	jp     0x417cf1
  417cb5:	loop   0x417c70
  417cb7:	mov    ds:0xc040a1bf,al
  417cbc:	xchg   esp,eax
  417cbd:	push   ds
  417cbe:	jg     0x417c60
  417cc0:	lods   al,BYTE PTR ds:[esi]
  417cc1:	jg     0x417cf4
  417cc3:	out    0x1c,al
  417cc5:	sub    ecx,DWORD PTR [edx-0x30d15753]
  417ccb:	test   eax,0xe4f9b40b
  417cd0:	mov    esi,0xdd962737
  417cd5:	xor    al,0x18
  417cd7:	in     eax,0xed
  417cd9:	adc    edx,DWORD PTR [eax+0x66]
  417cdc:	mov    eax,0xcfbef56b
  417ce1:	fmul   st,st(2)
  417ce3:	test   DWORD PTR [ecx+0xa],eax
  417ce6:	xor    al,0x81
  417ce8:	sahf   
  417ce9:	dec    BYTE PTR [ebx]
  417ceb:	mov    ecx,0x29b0212c
  417cf0:	add    dl,BYTE PTR [edi+0x677e24dd]
  417cf6:	daa    
  417cf7:	fcomp  QWORD PTR [ecx+0x49]
  417cfa:	pop    ds
  417cfb:	sub    ecx,ebp
  417cfd:	ins    BYTE PTR es:[edi],dx
  417cfe:	js     0x417cc1
  417d00:	sbb    cl,BYTE PTR [esi+0x50]
  417d03:	sysexit 
  417d05:	mov    bh,0x76
  417d07:	jmp    0xd021:0x57e72d87
  417d0e:	inc    edi
  417d0f:	xchg   ecx,eax
  417d10:	push   eax
  417d11:	xchg   ebp,eax
  417d12:	out    dx,eax
  417d13:	addr16 retf 
  417d15:	loop   0x417d4f
  417d17:	jb     0x417d28
  417d19:	das    
  417d1a:	xor    ecx,DWORD PTR [ebx+ebx*1-0x5a3162ea]
  417d21:	leave  
  417d22:	nop
  417d23:	inc    eax
  417d24:	pushf  
  417d25:	xchg   edx,eax
  417d26:	sub    dl,BYTE PTR [ecx-0x2d088a46]
  417d2c:	ffreep st(6)
  417d2e:	pop    ebp
  417d2f:	push   0x36b1b0e4
  417d34:	int    0x59
  417d36:	dec    edi
  417d37:	and    edi,DWORD PTR [eax]
  417d39:	mov    bl,0xf0
  417d3b:	shl    BYTE PTR [ebp-0x454d8a7],0x81
  417d42:	mul    BYTE PTR [edi]
  417d44:	test   eax,0xe4f485b7
  417d49:	jl     0x417d61
  417d4b:	test   eax,0x6072807f
  417d50:	dec    edi
  417d51:	sbb    ebx,ecx
  417d53:	add    eax,0x7b240ba2
  417d58:	push   ebx
  417d59:	jl     0x417dcb
  417d5b:	addr16 sti 
  417d5d:	inc    eax
  417d5e:	loope  0x417d5d
  417d60:	cmp    BYTE PTR [ebp+0x354ff774],bl
  417d66:	xchg   BYTE PTR [esi-0x56480211],ch
  417d6c:	mov    al,ds:0xc75432fb
  417d71:	test   BYTE PTR [edi-0x146d2b15],bl
  417d77:	mov    eax,DWORD PTR [ecx]
  417d79:	mov    cl,0xea
  417d7b:	scas   eax,DWORD PTR es:[edi]
  417d7c:	scas   al,BYTE PTR es:[edi]
  417d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d7e:	pop    es
  417d7f:	adc    al,0xd1
  417d81:	popf   
  417d82:	xor    bl,BYTE PTR [esi]
  417d84:	lahf   
  417d85:	popa   
  417d86:	pop    edx
  417d87:	mov    ecx,0x4d3563f9
  417d8c:	lea    eax,[eax+0x16dbfe57]
  417d92:	mov    ah,0xc3
  417d94:	push   0x96046531
  417d99:	pop    esi
  417d9a:	xchg   DWORD PTR ds:0xee3512f9,esp
  417da0:	sti    
  417da1:	sbb    al,BYTE PTR [esi]
  417da3:	xor    DWORD PTR [edx+ecx*2-0x232ae9fb],ebp
  417daa:	into   
  417dab:	sbb    eax,0x755ee5e6
  417db0:	inc    ebx
  417db1:	sub    DWORD PTR [ebx-0x876af23],esi
  417db7:	xor    bh,BYTE PTR [ecx]
  417db9:	jb     0x417e0a
  417dbb:	sti    
  417dbc:	out    dx,eax
  417dbd:	xor    eax,0xad2eb64a
  417dc2:	mov    bl,0xc6
  417dc4:	(bad)  
  417dc5:	test   al,0x48
  417dc7:	pop    ds
  417dc8:	xchg   esi,eax
  417dc9:	sbb    dl,BYTE PTR [edi-0x533a2bf1]
  417dcf:	mov    eax,0x982e88a
  417dd4:	ins    DWORD PTR es:[edi],dx
  417dd5:	scas   al,BYTE PTR es:[edi]
  417dd6:	inc    ecx
  417dd7:	push   ecx
  417dd8:	pusha  
  417dd9:	inc    ecx
  417dda:	mov    dl,0xf1
  417ddc:	mov    al,ds:0x352ff507
  417de1:	sub    al,0x78
  417de3:	mov    ch,0x5f
  417de5:	xor    BYTE PTR [ebp-0x66],dh
  417de8:	aad    0xce
  417dea:	ficom  WORD PTR [ecx-0x47571123]
  417df0:	xchg   edx,eax
  417df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df2:	ror    DWORD PTR [edi+0x72],1
  417df5:	test   eax,0xa618b79d
  417dfa:	and    eax,0xc5213aec
  417dff:	pusha  
  417e00:	jmp    DWORD PTR [ebp-0x1013432e]
  417e06:	push   eax
  417e07:	call   0xdaf1fe95
  417e0c:	(bad)  
  417e0d:	sub    bh,BYTE PTR ds:0x72938dda
  417e13:	ret    
  417e14:	test   DWORD PTR [ecx+0x4b],eax
  417e17:	or     al,0xea
  417e19:	pop    edx
  417e1a:	sub    bh,BYTE PTR [edi-0x77c9a6d7]
  417e20:	daa    
  417e21:	jg     0x417df6
  417e23:	in     eax,dx
  417e24:	add    dh,BYTE PTR [ebx+0x69]
  417e27:	stc    
  417e28:	test   eax,0x37f25eac
  417e2d:	call   0x6cc1:0x3f5c2347
  417e34:	jae    0x417e67
  417e36:	ins    BYTE PTR es:[edi],dx
  417e37:	jge    0x417dba
  417e39:	mov    eax,0x1b260083
  417e3e:	call   0xa5d4:0x786ea2f7
  417e45:	cmp    al,dh
  417e47:	push   ds
  417e48:	ds icebp 
  417e4a:	out    dx,al
  417e4b:	dec    ebp
  417e4c:	ins    DWORD PTR es:[edi],dx
  417e4d:	lahf   
  417e4e:	icebp  
  417e4f:	out    0x55,eax
  417e51:	dec    edi
  417e52:	inc    eax
  417e53:	sub    al,0x82
  417e55:	hlt    
  417e56:	mov    ebp,0xa895cfaf
  417e5b:	lea    esp,[edx-0x6d]
  417e5e:	ins    BYTE PTR es:[edi],dx
  417e5f:	push   eax
  417e60:	(bad)  
  417e61:	mov    eax,0x140f61f5
  417e66:	test   eax,0xf6534d6a
  417e6b:	add    ebx,DWORD PTR [edx]
  417e6d:	iret   
  417e6e:	into   
  417e6f:	rcr    BYTE PTR ds:[esi+0x7c],cl
  417e73:	mov    cl,BYTE PTR [ebp+ecx*4+0x4cf1bca8]
  417e7a:	ror    DWORD PTR [ebp-0x57e1c3f7],cl
  417e80:	and    cl,BYTE PTR [edx]
  417e82:	xor    al,0x99
  417e84:	push   edx
  417e85:	xchg   ebp,eax
  417e86:	mov    bl,0xe7
  417e88:	sub    al,0x7f
  417e8a:	push   ebp
  417e8b:	nop
  417e8c:	adc    BYTE PTR [edx],0x68
  417e8f:	cmp    DWORD PTR [ebx+0x7b13347f],ebp
  417e95:	test   ch,0x9f
  417e98:	lods   al,BYTE PTR ds:[esi]
  417e99:	lea    ecx,[ebp+0x25]
  417e9c:	push   esi
  417e9d:	(bad)  
  417e9e:	sbb    dh,BYTE PTR [ebx+0x435198]
  417ea4:	xor    ebx,DWORD PTR [eax-0x30]
  417ea7:	push   ebp
  417ea8:	es ret 
  417eaa:	dec    esi
  417eab:	out    0x73,al
  417ead:	in     eax,0xe5
  417eaf:	std    
  417eb0:	mov    eax,ds:0x87dbf18d
  417eb5:	or     bl,BYTE PTR [esi]
  417eb7:	retf   
  417eb8:	mov    ecx,0xb8da1698
  417ebd:	pop    ss
  417ebe:	sub    BYTE PTR [ebp-0x4e5b468b],0xaf
  417ec5:	loope  0x417f09
  417ec7:	(bad)  
  417ec8:	mov    edx,0xba675129
  417ecd:	cs dec ebx
  417ecf:	mov    esp,0xc4f1b142
  417ed4:	cmp    al,0xbb
  417ed6:	daa    
  417ed7:	loop   0x417e62
  417ed9:	fld    TBYTE PTR [esi+0x4f8666b0]
  417edf:	dec    ebp
  417ee0:	jb     0x417ee7
  417ee2:	or     BYTE PTR [edi],dl
  417ee4:	in     al,0xcd
  417ee6:	nop
  417ee7:	ret    
  417ee8:	das    
  417ee9:	lahf   
  417eea:	ja     0x417f35
  417eec:	ins    BYTE PTR es:[edi],dx
  417eed:	jl     0x417f58
  417eef:	sub    al,0xc3
  417ef1:	jno    0x417efe
  417ef3:	mov    ds:0x86432cb6,eax
  417ef8:	dec    esp
  417ef9:	lds    edi,FWORD PTR [ebp-0x50df7149]
  417eff:	jp     0x417e9e
  417f01:	fsubr  st(5),st
  417f03:	adc    al,0x30
  417f05:	ds mov ecx,0x728111f6
  417f0b:	add    eax,0x24cd7e13
  417f10:	mov    edi,0x213f3053
  417f15:	or     al,BYTE PTR [eax-0x21715595]
  417f1b:	jmp    0x417ec7
  417f1d:	shr    BYTE PTR cs:[ebp-0x79],1
  417f21:	test   eax,0x6709e677
  417f26:	mov    ds:0x12c0849c,eax
  417f2b:	mov    ds:0x693a7657,eax
  417f30:	sub    BYTE PTR [eax],ah
  417f32:	push   0x5779f4fd
  417f37:	jno    0x417f79
  417f39:	bound  esi,QWORD PTR [edi-0x3df28a6a]
  417f3f:	out    0xd6,eax
  417f41:	or     DWORD PTR [ebx-0x1c7de8f0],edx
  417f47:	call   0xe0f0:0x9a318b42
  417f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f4f:	fisubr WORD PTR [edi+0x49]
  417f52:	add    al,0x9d
  417f54:	div    ah
  417f56:	xor    DWORD PTR [eax+0x6a],ebp
  417f59:	push   es
  417f5a:	test   eax,0x4b370bcb
  417f5f:	xor    BYTE PTR [edx+0x6b],cl
  417f62:	or     ah,BYTE PTR [esi+0x7a2bc56d]
  417f68:	mov    bh,0xbe
  417f6a:	rcl    DWORD PTR [ecx-0x605c6961],cl
  417f70:	push   ss
  417f71:	call   DWORD PTR [esi-0x5a]
  417f74:	es push esi
  417f76:	stos   DWORD PTR es:[edi],eax
  417f77:	aas    
  417f78:	je     0x417f33
  417f7a:	in     eax,0xc
  417f7c:	push   esi
  417f7d:	mov    al,ds:0xbed6a3f9
  417f82:	sub    ecx,esi
  417f84:	(bad)  
  417f85:	xchg   esi,eax
  417f86:	mov    eax,ds:0x6c81699f
  417f8b:	fistp  DWORD PTR [ecx]
  417f8d:	xchg   edi,eax
  417f8e:	push   edx
  417f8f:	in     al,dx
  417f90:	int3   
  417f91:	jge    0x417f37
  417f93:	int3   
  417f94:	ins    BYTE PTR es:[edi],dx
  417f95:	div    BYTE PTR [eax+0x42]
  417f98:	pusha  
  417f99:	xchg   edi,eax
  417f9a:	sub    BYTE PTR [esi+0x27dd58e7],dl
  417fa0:	xlat   BYTE PTR ds:[ebx]
  417fa1:	int    0x75
  417fa3:	dec    ebx
  417fa4:	pop    eax
  417fa5:	sbb    eax,DWORD PTR [edx+0x4a829b90]
  417fab:	enter  0xba02,0x37
  417faf:	ss or  eax,0x7eaa0979
  417fb5:	dec    edi
  417fb6:	repz retf 0xe8a4
  417fba:	outs   dx,DWORD PTR ds:[esi]
  417fbb:	sbb    ah,BYTE PTR [ebx-0x2ebc6771]
  417fc1:	in     eax,dx
  417fc2:	fild   WORD PTR [esi]
  417fc4:	jnp    0x417fb2
  417fc6:	xchg   edi,eax
  417fc7:	inc    ecx
  417fc8:	sbb    BYTE PTR [edx+0x2e2bbd08],bl
  417fce:	cmc    
  417fcf:	mov    DWORD PTR [esi+0x4512b417],ebp
  417fd5:	icebp  
  417fd6:	lea    edi,ds:0xca212f32
  417fdc:	dec    esi
  417fdd:	cmp    ecx,edx
  417fdf:	inc    ebx
  417fe0:	jmp    0x7e866926
  417fe5:	fwait
  417fe6:	pusha  
  417fe7:	pop    eax
  417fe8:	mov    esp,?
  417fea:	xchg   edx,eax
  417feb:	mov    al,0x28
  417fed:	jecxz  0x417fe6
  417fef:	and    eax,0xbfa5f924
  417ff4:	stos   DWORD PTR es:[edi],eax
  417ff5:	inc    esi
  417ff6:	popa   
  417ff7:	push   ss
  417ff8:	and    edx,ebp
  417ffa:	inc    eax
  417ffb:	push   edx
  417ffc:	xchg   edi,eax
  417ffd:	test   al,0xf5
  417fff:	jno    0x418056
  418001:	cmp    eax,0x9360da25
  418006:	xor    al,0x2e
  418008:	mov    cl,0x15
  41800a:	and    al,BYTE PTR [eax-0x29]
  41800d:	(bad)  
  41800e:	jmp    0xd91a:0x2a6fb86a
  418015:	mov    bh,BYTE PTR [edx-0x27c8bcb7]
  41801b:	mov    ebp,DWORD PTR [ecx+0xec12199]
  418021:	pushf  
  418022:	sub    eax,0x37bcefb
  418027:	sub    al,0x47
  418029:	mov    bl,0x96
  41802b:	inc    eax
  41802c:	(bad)
  418030:	mov    WORD PTR [eax-0x4f4c28fa],ds
  418036:	mov    ecx,0xcc13e34d
  41803b:	xchg   ebx,eax
  41803c:	(bad)  
  41803d:	xchg   edx,eax
  41803e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41803f:	pop    esi
  418040:	mov    DWORD PTR [eax-0x7ac5af91],eax
  418046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418047:	iret   
  418048:	mul    dl
  41804a:	cmp    al,0xee
  41804c:	add    eax,0x4896c6eb
  418051:	das    
  418052:	push   0x4c88f104
  418057:	scas   al,BYTE PTR es:[edi]
  418058:	(bad)  
  418059:	push   ss
  41805a:	xor    DWORD PTR [edi+0x603f0ab0],edi
  418060:	jecxz  0x41806c
  418062:	call   edi
  418064:	stc    
  418065:	mov    eax,0xaab5d53e
  41806a:	rol    BYTE PTR fs:[esi-0x504d33f0],1
  418071:	jmp    0x5ab6:0xdbaaa5e3
  418078:	dec    eax
  418079:	dec    ebx
  41807a:	gs pop ss
  41807c:	jne    0x418020
  41807e:	dec    ecx
  41807f:	xchg   ecx,eax
  418080:	cmp    eax,esp
  418082:	(bad)  
  418083:	jne    0x41801b
  418085:	loop   0x418021
  418087:	out    0xfa,eax
  418089:	push   eax
  41808a:	xor    edi,ecx
  41808c:	in     eax,dx
  41808d:	das    
  41808e:	mov    BYTE PTR [ebp+0x2a35d963],ch
  418094:	iret   
  418095:	mov    ds:0x702f7061,eax
  41809a:	push   esi
  41809b:	dec    esi
  41809c:	jno    0x4180a0
  41809e:	repz pop esp
  4180a0:	scas   al,BYTE PTR es:[edi]
  4180a1:	push   ebp
  4180a2:	out    dx,al
  4180a3:	popa   
  4180a4:	loopne 0x41811b
  4180a6:	inc    BYTE PTR [eax+ecx*2-0x49]
  4180aa:	jns    0x418043
  4180ac:	dec    eax
  4180ad:	js     0x41807f
  4180af:	dec    ebx
  4180b0:	dec    esi
  4180b1:	jb     0x41808b
  4180b3:	in     eax,dx
  4180b4:	cs pop ss
  4180b6:	(bad)  
  4180b7:	xchg   esp,eax
  4180b8:	test   edx,esp
  4180ba:	fsubr  st(1),st
  4180bc:	xchg   edx,ebx
  4180be:	pushf  
  4180bf:	push   0xcd7b1730
  4180c4:	add    al,0x85
  4180c6:	call   0xf0f5:0xbf473667
  4180cd:	mov    eax,ds:0x87b8e825
  4180d2:	xchg   ebp,eax
  4180d3:	js     0x41813c
  4180d5:	ret    0x1c00
  4180d8:	fsub   st,st(1)
  4180da:	add    al,0xf1
  4180dc:	icebp  
  4180dd:	sub    eax,0xaf74f52f
  4180e2:	add    cl,BYTE PTR [edx+edx*1]
  4180e5:	xchg   ebx,eax
  4180e6:	dec    ecx
  4180e7:	mov    ecx,ebx
  4180e9:	adc    DWORD PTR [esp+eiz*8-0x11a6df2b],esi
  4180f0:	(bad)
  4180f3:	inc    esi
  4180f4:	sub    ebx,DWORD PTR [eax]
  4180f6:	mov    cl,0x67
  4180f8:	mov    ds:0x5bb37ac8,eax
  4180fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180fe:	pushf  
  4180ff:	mov    ebx,0x7715da2e
  418104:	push   0x68
  418106:	push   esi
  418107:	cbw    
  418109:	retf   0xacc2
  41810c:	mov    esp,0xa3b01613
  418111:	fidivr WORD PTR [esi-0x54]
  418114:	pop    esi
  418115:	outs   dx,BYTE PTR ds:[esi]
  418116:	xlat   BYTE PTR ds:[ebx]
  418117:	push   ss
  418118:	in     al,dx
  418119:	sub    eax,ebx
  41811b:	jecxz  0x418123
  41811d:	push   0xc8fbfbef
  418122:	xlat   BYTE PTR ds:[ebx]
  418123:	mov    BYTE PTR [esp+ebp*4-0x20],cl
  418127:	mov    ds:0xccd29bb2,eax
  41812c:	or     bh,bh
  41812e:	push   edi
  41812f:	retf   0x87e4
  418132:	hlt    
  418133:	outs   dx,BYTE PTR ds:[esi]
  418134:	add    bl,0xda
  418137:	jp     0x41810d
  418139:	mov    ecx,0x45d93e2c
  41813e:	fbld   TBYTE PTR ds:0x6b6fe231
  418144:	or     DWORD PTR [eax-0x56],esi
  418147:	pop    es
  418148:	loopne 0x418133
  41814a:	adc    bh,BYTE PTR [esi+0x2]
  41814d:	mov    dh,0x69
  41814f:	fsubr  QWORD PTR [ecx+0x73]
  418152:	scas   al,BYTE PTR es:[edi]
  418153:	adc    edi,DWORD PTR [ecx]
  418155:	dec    ebp
  418156:	popa   
  418157:	push   ds
  418158:	jmp    0x4181c4
  41815a:	addr16 push ebx
  41815c:	fld    DWORD PTR [edx]
  41815e:	dec    ebp
  41815f:	pop    ebx
  418160:	sub    al,0x68
  418162:	mov    cl,0x87
  418164:	sahf   
  418165:	and    eax,0xcbc0e44b
  41816a:	aam    0x96
  41816c:	or     cl,0x6
  41816f:	jnp    0x4181ae
  418171:	adc    eax,0xb9489a2d
  418176:	mov    ebp,DWORD PTR [ebx-0x60]
  418179:	inc    esi
  41817a:	inc    edi
  41817b:	icebp  
  41817c:	or     DWORD PTR [ecx-0x44224782],edi
  418182:	daa    
  418183:	lock mov bh,0xd7
  418186:	inc    eax
  418187:	xchg   DWORD PTR [edx-0x7f],ebx
  41818a:	mov    al,0x67
  41818c:	pop    edx
  41818d:	adc    ah,BYTE PTR [edx+edx*1+0x6e]
  418191:	mov    BYTE PTR ds:[eax+edx*8+0x23],cl
  418196:	scas   eax,DWORD PTR es:[edi]
  418197:	pop    esp
  418198:	mov    ah,0xe6
  41819a:	ins    BYTE PTR es:[edi],dx
  41819b:	pop    ebx
  41819c:	sbb    eax,0xb270502d
  4181a1:	pop    es
  4181a2:	sub    eax,DWORD PTR [edx+0x7a46759c]
  4181a8:	xchg   edx,eax
  4181a9:	neg    DWORD PTR [edx]
  4181ab:	mov    ebp,0xf1c1152
  4181b0:	imul   edx,DWORD PTR [edx-0x23a591dd],0xb
  4181b7:	sar    edi,cl
  4181b9:	push   esp
  4181ba:	xchg   esi,esi
  4181bc:	and    eax,0x75238f5e
  4181c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c2:	retf   0x7e71
  4181c5:	ficomp WORD PTR [ebp-0x25069bf6]
  4181cb:	mov    eax,DWORD PTR [edi+0x31]
  4181ce:	fcom   DWORD PTR [ebx+0x65406b59]
  4181d4:	out    0x66,eax
  4181d6:	or     eax,0xfab02f62
  4181db:	pop    eax
  4181dc:	fmul   DWORD PTR [ebx-0xd]
  4181df:	stos   DWORD PTR es:[edi],eax
  4181e0:	pop    ebx
  4181e1:	scas   al,BYTE PTR es:[edi]
  4181e2:	xlat   BYTE PTR ds:[ebx]
  4181e3:	mov    fs,WORD PTR [ebp+0x5f]
  4181e6:	or     DWORD PTR [edx+0x4dce9d54],0x67522416
  4181f0:	mov    bh,0x88
  4181f2:	pop    edx
  4181f3:	scas   al,BYTE PTR es:[edi]
  4181f4:	cli    
  4181f5:	and    al,BYTE PTR ds:[edx+ecx*8-0x58]
  4181fa:	scas   eax,DWORD PTR es:[edi]
  4181fb:	jb     0x418232
  4181fd:	data16 sti 
  4181ff:	fcomp  DWORD PTR [ecx-0x77]
  418202:	std    
  418203:	inc    esi
  418204:	xchg   ecx,eax
  418205:	and    al,0x55
  418207:	test   eax,0x6792f1ba
  41820c:	mov    cl,BYTE PTR [edx-0x1e0c4a5f]
  418212:	in     eax,dx
  418213:	mov    edx,0x9edfb3bf
  418218:	dec    ebp
  418219:	es jb  0x4181ca
  41821c:	lds    esp,FWORD PTR [edi]
  41821e:	neg    DWORD PTR [ecx-0x2ebcbaf3]
  418224:	pop    esi
  418225:	pop    ds
  418226:	out    0xe5,eax
  418228:	cmp    eax,0x2a4087b7
  41822d:	jmp    0x418203
  41822f:	out    0xc1,al
  418231:	or     edi,esi
  418233:	test   DWORD PTR [eax-0x1a92db25],0xc99f7308
  41823d:	into   
  41823e:	mov    eax,0x703e3679
  418243:	inc    esp
  418244:	clc    
  418245:	push   0x2ef91af3
  41824a:	(bad)  
  41824b:	scas   eax,DWORD PTR es:[edi]
  41824c:	je     0x4182be
  41824e:	fnstenv [edx+0x5fc39759]
  418254:	adc    esi,DWORD PTR [eax]
  418256:	push   eax
  418257:	fcom   st(5)
  418259:	inc    ebx
  41825a:	test   DWORD PTR ds:0x61b8171f,esi
  418260:	cmp    DWORD PTR [esp+esi*8+0x48],esi
  418264:	xchg   edi,esi
  418266:	stos   BYTE PTR es:[edi],al
  418267:	or     eax,0x1f5af73e
  41826c:	dec    eax
  41826d:	jne    0x4182e2
  41826f:	jne    0x418222
  418271:	mov    bh,0x8f
  418273:	psraw  mm7,mm5
  418276:	loopne 0x418234
  418278:	lahf   
  418279:	pusha  
  41827a:	out    dx,al
  41827b:	lock pusha 
  41827d:	push   edx
  41827e:	cs pop es
  418280:	mov    eax,ds:0x78fde004
  418285:	test   al,0xfe
  418287:	adc    esp,ebx
  418289:	xchg   edx,eax
  41828a:	pushf  
  41828b:	sar    DWORD PTR [ebx],1
  41828d:	pop    ds
  41828e:	and    eax,0x4c672968
  418293:	jp     0x4182ea
  418295:	mov    bh,0x6a
  418297:	pop    ecx
  418298:	mov    ebx,0xbd48dec6
  41829d:	test   BYTE PTR [esp+ebx*4-0x6158f6f2],dl
  4182a4:	fadd   st,st(0)
  4182a6:	mov    cl,0x65
  4182a8:	add    DWORD PTR [edx],ebx
  4182aa:	test   BYTE PTR [ebx+0x14d0380d],0xc7
  4182b1:	jae    0x418260
  4182b3:	dec    ebx
  4182b4:	outs   dx,BYTE PTR ds:[esi]
  4182b5:	je     0x4182bc
  4182b7:	shl    DWORD PTR [ebp+0x1b],0xb
  4182bb:	lea    ecx,[ebx+0x170c42ee]
  4182c1:	sub    BYTE PTR [edi],ah
  4182c3:	cdq    
  4182c4:	adc    ecx,DWORD PTR [bp+di]
  4182c7:	add    DWORD PTR [ebp+0x14429195],esp
  4182cd:	adc    eax,0x92216279
  4182d2:	sub    bh,al
  4182d4:	inc    edx
  4182d5:	fnstenv [ebp-0x1b]
  4182d8:	inc    ebp
  4182d9:	sbb    eax,0xf78b4d0f
  4182de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182df:	fs sub eax,0xced892ec
  4182e5:	lds    edi,FWORD PTR [ebp+edx*1+0x2d]
  4182e9:	xchg   esp,eax
  4182ea:	dec    eax
  4182eb:	add    ebp,ecx
  4182ed:	rcr    BYTE PTR [ebx],1
  4182ef:	fiadd  WORD PTR [ecx+edx*1-0x4b9c556b]
  4182f6:	fisttp DWORD PTR [esi+0x230e1934]
  4182fc:	in     al,0xb4
  4182fe:	inc    ebx
  4182ff:	inc    esi
  418300:	and    al,0x4
  418302:	xchg   esi,eax
  418303:	xchg   edi,eax
  418304:	sbb    esp,ecx
  418306:	dec    ecx
  418307:	test   ah,ah
  418309:	pop    ebp
  41830a:	lahf   
  41830b:	and    esp,DWORD PTR [ebp-0x7f78fc3b]
  418311:	sahf   
  418312:	call   0x2313:0x4be53a54
  418319:	dec    ebx
  41831a:	fisub  DWORD PTR [ebx-0x6493936a]
  418320:	(bad)  
  418321:	icebp  
  418322:	pop    eax
  418323:	sbb    DWORD PTR [esi-0x59593054],edi
  418329:	xchg   ebx,eax
  41832a:	mov    cs,WORD PTR [eax-0x3538e3c2]
  418330:	mov    eax,ds:0x291e504d
  418335:	or     BYTE PTR [edi+0x2ca3399],ah
  41833b:	mov    eax,ds:0x298560c2
  418340:	(bad)  
  418341:	and    BYTE PTR [edi-0x13f5d4d4],bh
  418347:	sti    
  418348:	inc    esi
  418349:	sub    eax,0xa494ac09
  41834e:	jl     0x418318
  418350:	jl     0x418354
  418352:	addr16 stc 
  418354:	int    0xd4
  418356:	xor    edi,ebx
  418358:	(bad)  
  418359:	jg     0x418324
  41835b:	fldcw  WORD PTR [ebp-0x3a]
  41835e:	bound  ebx,QWORD PTR [ecx-0x24]
  418361:	out    dx,al
  418362:	out    dx,al
  418363:	popf   
  418364:	adc    al,0x8b
  418366:	test   eax,0x98a0d5d5
  41836b:	les    ebp,FWORD PTR [edi-0x3fa2ec7c]
  418371:	lods   eax,DWORD PTR ds:[esi]
  418372:	xchg   esp,eax
  418373:	lods   eax,DWORD PTR ds:[esi]
  418374:	aad    0xaa
  418376:	dec    ecx
  418377:	call   0x5260ee5d
  41837c:	cmp    ch,BYTE PTR ds:0x434cbea2
  418382:	cmp    BYTE PTR es:[ebp+0x7a],0x3a
  418387:	call   0x827966f1
  41838c:	pop    ebp
  41838d:	aad    0x7b
  41838f:	aaa    
  418390:	into   
  418391:	rcr    BYTE PTR [edx-0x5e73e589],cl
  418397:	and    al,0xdd
  418399:	jge    0x418333
  41839b:	jns    0x4183f3
  41839d:	ds popa 
  41839f:	gs xchg esi,eax
  4183a1:	mov    ds:0xbfae862e,eax
  4183a6:	pop    eax
  4183a7:	xor    dl,ch
  4183a9:	push   eax
  4183aa:	pop    ecx
  4183ab:	jmp    0x418396
  4183ad:	inc    ecx
  4183ae:	stos   BYTE PTR es:[edi],al
  4183af:	loop   0x41834c
  4183b1:	or     al,0x7c
  4183b3:	xlat   BYTE PTR ds:[ebx]
  4183b4:	sub    BYTE PTR [esi+edx*4-0x3a],0xf0
  4183b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183ba:	jg     0x418343
  4183bc:	int    0x6c
  4183be:	mov    bl,0x7e
  4183c0:	fxam   
  4183c2:	sti    
  4183c3:	enter  0x3562,0x6d
  4183c7:	jno    0x418369
  4183c9:	cmova  edi,DWORD PTR [ecx-0x74]
  4183cd:	and    esi,DWORD PTR [eax+esi*4-0x62]
  4183d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d2:	enter  0x3393,0xba
  4183d6:	repz adc ebx,DWORD PTR [edi]
  4183d9:	daa    
  4183da:	and    al,0x6a
  4183dc:	xchg   esp,eax
  4183dd:	sbb    DWORD PTR [edi],ecx
  4183df:	pop    ebx
  4183e0:	adc    bh,BYTE PTR [edx+0x2463c9dd]
  4183e6:	jb     0x418375
  4183e8:	adc    ebx,DWORD PTR ds:0xdb05fc3e
  4183ee:	outs   dx,DWORD PTR ds:[esi]
  4183ef:	lock rcl BYTE PTR [ecx],cl
  4183f2:	inc    eax
  4183f3:	mov    bh,0x3c
  4183f5:	mov    ds:0x6890eb45,al
  4183fa:	repnz sub DWORD PTR [ebx],0xffffff93
  4183fe:	inc    ebp
  4183ff:	adc    al,0x68
  418401:	cwde   
  418402:	mov    bh,0x74
  418404:	inc    edi
  418405:	icebp  
  418406:	out    dx,al
  418407:	loop   0x4183fa
  418409:	dec    edx
  41840a:	lods   eax,DWORD PTR ds:[esi]
  41840b:	xor    DWORD PTR [eax-0x25b6ae3d],0xe9e028d3
  418415:	in     eax,0xca
  418417:	retf   
  418418:	lea    esi,[edx-0x3a]
  41841b:	lock jle 0x418404
  41841e:	cmp    eax,0x4ebc290b
  418423:	std    
  418424:	or     BYTE PTR [esi+0x6d46bde1],ch
  41842a:	jl     0x4183c9
  41842c:	or     DWORD PTR [edi-0x64],eax
  41842f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418430:	xor    DWORD PTR [ebp-0x48],esi
  418433:	mov    cl,0x8c
  418435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418436:	push   ss
  418437:	mov    bl,0xcb
  418439:	mov    ch,0xcb
  41843b:	stc    
  41843c:	or     bh,0x66
  41843f:	inc    edi
  418440:	mov    edx,0x25593e44
  418445:	cmp    ebp,DWORD PTR [ebp+0x17]
  418448:	pop    edi
  418449:	inc    ecx
  41844a:	jnp    0x4183df
  41844c:	sar    DWORD PTR [ebx+0x6dad1450],cl
  418452:	jno    0x418426
  418454:	xchg   ebp,eax
  418455:	inc    esi
  418456:	stos   DWORD PTR es:[edi],eax
  418457:	dec    ebp
  418458:	sub    eax,0x85a2016d
  41845d:	push   0x0
  41845f:	pop    es
  418460:	inc    edx
  418461:	push   esp
  418462:	pop    esi
  418463:	test   BYTE PTR [eax-0x5b],cl
  418466:	aas    
  418467:	popa   
  418468:	xchg   ebx,eax
  418469:	jb     0x4184a1
  41846b:	test   al,0xca
  41846d:	add    cl,bl
  41846f:	scas   eax,DWORD PTR es:[edi]
  418470:	adc    bl,BYTE PTR [ebx-0x5a]
  418473:	adc    ebp,DWORD PTR [esi+0x3e]
  418476:	cmp    DWORD PTR ds:0x3052bd40,ebp
  41847c:	dec    ecx
  41847d:	add    cl,BYTE PTR [edx+0x4f]
  418480:	pop    edx
  418481:	cmp    eax,0xa01a9e20
  418486:	out    dx,eax
  418487:	jns    0x418445
  418489:	cmp    esp,esi
  41848b:	push   0xffffffc1
  41848d:	xlat   BYTE PTR ds:[ebx]
  41848e:	jmp    0x418461
  418490:	mov    cl,0x58
  418492:	cld    
  418493:	push   0x42
  418495:	sbb    al,0x55
  418497:	xchg   ecx,eax
  418498:	mov    ebx,0x3e51879c
  41849d:	inc    eax
  41849e:	add    bl,cl
  4184a0:	das    
  4184a1:	jg     0x4184ba
  4184a3:	lahf   
  4184a4:	push   esi
  4184a5:	(bad)
  4184a8:	push   esi
  4184a9:	jge    0x418526
  4184ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ac:	pop    esp
  4184ad:	call   0x90fa7f55
  4184b2:	(bad)  
  4184b4:	bound  edx,QWORD PTR [edi+eiz*1+0x5753aa6]
  4184bb:	cld    
  4184bc:	(bad)  
  4184bd:	(bad)  
  4184be:	push   0x66adb8b1
  4184c3:	mov    DWORD PTR [edi],esp
  4184c5:	pop    ds
  4184c6:	mov    edx,0x871c537
  4184cb:	inc    ecx
  4184cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184cd:	lods   al,BYTE PTR ds:[esi]
  4184ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184cf:	xor    DWORD PTR [ebx-0xa1d34da],ebp
  4184d5:	shl    DWORD PTR [edi],cl
  4184d7:	or     eax,0xe296508c
  4184dc:	(bad)  
  4184dd:	and    BYTE PTR [ebx+esi*1-0x49],ch
  4184e1:	pop    esp
  4184e2:	stos   BYTE PTR es:[edi],al
  4184e3:	and    BYTE PTR [edi-0xc8b2739],al
  4184e9:	or     dl,dl
  4184eb:	or     BYTE PTR [esi-0x70f4800f],dh
  4184f1:	sub    BYTE PTR [ecx-0x16],bh
  4184f4:	cmp    dh,dh
  4184f6:	jae    0x41850d
  4184f8:	jl     0x4184be
  4184fa:	mov    eax,ds:0x5538e9f2
  4184ff:	pop    ebx
  418500:	stos   BYTE PTR es:[edi],al
  418501:	sbb    eax,0xbe628aba
  418506:	ret    0xff9b
  418509:	in     al,0xa1
  41850b:	or     ch,BYTE PTR [edi]
  41850d:	in     al,0x4c
  41850f:	jmp    0x41854a
  418511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418512:	dec    DWORD PTR [ecx+0x15521045]
  418518:	pop    edi
  418519:	(bad)  
  41851a:	jge    0x418579
  41851c:	push   0xd08b1164
  418521:	test   DWORD PTR [ebx],esp
  418523:	xor    eax,DWORD PTR [eax-0x69]
  418526:	push   ebx
  418527:	aas    
  418528:	nop
  418529:	xchg   edx,eax
  41852b:	cwde   
  41852c:	sbb    BYTE PTR [bp+di],dh
  41852f:	or     eax,0xa69c2791
  418534:	call   0xd722:0x36f39bc4
  41853b:	pushf  
  41853c:	cdq    
  41853d:	mov    BYTE PTR [edx],bl
  41853f:	or     BYTE PTR [ebp-0x44],ah
  418542:	mov    ds,WORD PTR [esi+0x6b8ab319]
  418548:	adc    eax,0xb4485c45
  41854d:	in     al,dx
  41854e:	cmp    ecx,ebp
  418550:	(bad)  
  418551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418552:	xchg   eax,esi
  418554:	sbb    eax,0x87a92150
  418559:	push   0x73b55bbf
  41855e:	adc    eax,0xaa88d01f
  418563:	ds pop ebp
  418565:	aam    0x10
  418567:	in     eax,0x1d
  418569:	lods   al,BYTE PTR ds:[esi]
  41856a:	mov    ch,0x8a
  41856c:	cmc    
  41856d:	cmp    al,0x6c
  41856f:	or     eax,0xe32086a6
  418574:	leave  
  418575:	dec    esi
  418576:	test   DWORD PTR [edx+0x20],esi
  418579:	and    DWORD PTR [edi-0x2edcea93],0xca666d9
  418583:	(bad)  
  418584:	pop    edi
  418585:	xchg   edx,eax
  418586:	fimul  DWORD PTR [ebx-0x62]
  418589:	inc    edi
  41858a:	push   edx
  41858b:	stos   BYTE PTR es:[edi],al
  41858c:	cwde   
  41858d:	add    al,0xa7
  41858f:	aaa    
  418590:	int3   
  418591:	xor    al,0xd5
  418593:	dec    edx
  418594:	or     DWORD PTR [esi*1+0x7e1dc2e2],0xb4d335d8
  41859f:	test   DWORD PTR [edi],ebx
  4185a1:	or     al,dl
  4185a3:	test   eax,0xc6f4499c
  4185a8:	call   0x3cb85977
  4185ad:	cmp    eax,0x5bb026e4
  4185b2:	shr    DWORD PTR [edx-0x7d870f98],1
  4185b8:	dec    ebx
  4185b9:	xchg   esp,eax
  4185ba:	js     0x4185ce
  4185bc:	mov    al,ds:0x85f03cab
  4185c1:	ds jmp 0x742e10de
  4185c7:	mov    ecx,0x270451df
  4185cc:	mov    bh,0x4b
  4185ce:	das    
  4185cf:	fmul   DWORD PTR [ebp+0x3]
  4185d2:	adc    ebp,DWORD PTR [ebx]
  4185d4:	adc    BYTE PTR [ecx],ch
  4185d6:	test   eax,0x4f7f15dc
  4185db:	ins    BYTE PTR es:[edi],dx
  4185dc:	xchg   BYTE PTR [edx],bh
  4185de:	ds and al,0x60
  4185e1:	aas    
  4185e2:	push   0x7245e79a
  4185e7:	cli    
  4185e8:	sbb    al,0xf5
  4185ea:	mov    ecx,0xf94aa531
  4185ef:	sub    BYTE PTR [edx+0xb071def],ch
  4185f5:	lahf   
  4185f6:	hlt    
  4185f7:	sub    al,0xcc
  4185f9:	or     eax,ebx
  4185fb:	push   ebp
  4185fc:	xor    eax,0x7f474137
  418601:	enter  0xc509,0xbc
  418605:	xchg   esp,eax
  418606:	cld    
  418607:	mov    BYTE PTR [ebx-0x6d],0x9f
  41860b:	mov    ah,BYTE PTR [ebp+0x1d]
  41860e:	pop    edx
  41860f:	cmp    eax,0x896173df
  418614:	push   esi
  418615:	shr    BYTE PTR [ebx+0x1f73e075],0x67
  41861c:	mov    ds,WORD PTR [ebx]
  41861e:	outs   dx,DWORD PTR ds:[esi]
  41861f:	jo     0x4185d9
  418621:	mov    dl,0x39
  418623:	mov    dh,0xa5
  418625:	xlat   BYTE PTR ds:[ebx]
  418626:	push   edx
  418627:	loope  0x4185aa
  418629:	sub    DWORD PTR [si+0x14bc],ecx
  41862e:	sbb    cl,bh
  418630:	push   ecx
  418631:	mov    dh,0x4
  418633:	push   0xffffffda
  418635:	sub    ebp,DWORD PTR [ecx]
  418637:	call   0xc448:0xe9e6738
  41863e:	jecxz  0x4185dd
  418640:	xor    ebp,esp
  418642:	aas    
  418643:	sub    bl,BYTE PTR [ecx+edi*2+0x4d28b8bb]
  41864a:	punpckhdq mm2,QWORD PTR [ebx-0x5d]
  41864e:	or     eax,0x8ad8b166
  418653:	xchg   BYTE PTR [ebx-0x5b185ba3],cl
  418659:	or     ah,BYTE PTR [edi+ebx*2]
  41865c:	inc    ebp
  41865d:	stos   BYTE PTR es:[edi],al
  41865e:	xchg   bh,ah
  418660:	pop    ebx
  418661:	xchg   edi,eax
  418662:	mov    ds:0xe95cdf9d,eax
  418667:	jmp    0x4186b7
  418669:	sbb    al,0x2e
  41866b:	jmp    0xf0e1:0xbaef4e1a
  418672:	mov    dh,0x83
  418674:	cli    
  418675:	push   ecx
  418676:	inc    eax
  418677:	push   ebp
  418678:	ins    BYTE PTR es:[edi],dx
  418679:	mov    ss,WORD PTR [edx+0x4ec57443]
  41867f:	cmp    DWORD PTR [eax],0xffffffe1
  418682:	inc    ecx
  418683:	retf   0xa07d
  418686:	mov    esi,0xb6058188
  41868b:	(bad)  
  41868c:	in     al,dx
  41868d:	xor    edx,ebp
  41868f:	ds dec esi
  418691:	push   0xffffffb1
  418693:	js     0x418633
  418695:	lds    ecx,FWORD PTR [edx*4-0x2cda6dac]
  41869c:	cmp    dh,BYTE PTR [eax+ebp*4-0x47a32c45]
  4186a3:	mov    ecx,ebx
  4186a5:	popa   
  4186a6:	fisub  WORD PTR es:0xecb1555d
  4186ad:	test   BYTE PTR [ecx],dl
  4186af:	mov    dl,0xf4
  4186b1:	mov    edx,0x86857e40
  4186b6:	ss (bad) 
  4186b8:	cdq    
  4186b9:	mov    eax,DWORD PTR [esp+edi*8]
  4186bc:	les    esi,FWORD PTR [ecx]
  4186be:	xchg   ecx,eax
  4186bf:	push   eax
  4186c0:	ins    DWORD PTR es:[edi],dx
  4186c1:	or     dh,BYTE PTR fs:[ecx-0x20]
  4186c5:	add    al,0x1e
  4186c7:	lods   eax,DWORD PTR ds:[esi]
  4186c8:	ja     0x41873a
  4186ca:	popa   
  4186cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186cc:	sahf   
  4186cd:	fcom   DWORD PTR [ecx]
  4186cf:	cli    
  4186d0:	and    bh,BYTE PTR [ebx]
  4186d2:	jbe    0x418716
  4186d4:	retf   
  4186d5:	cmp    eax,0xf86c4852
  4186da:	cmp    ebx,DWORD PTR [esi+0x8e02ed5]
  4186e0:	ss aad 0x15
  4186e3:	adc    eax,0xfdd33887
  4186e8:	jmp    0xd0af3ab9
  4186ed:	retf   
  4186ee:	stos   BYTE PTR es:[edi],al
  4186ef:	cwde   
  4186f0:	lds    esp,FWORD PTR [edx+0x5930b372]
  4186f6:	add    BYTE PTR [ebp-0x3e],dl
  4186f9:	in     al,0xbf
  4186fb:	pop    ds
  4186fc:	shr    BYTE PTR [ecx+0x7],0x4a
  418700:	jecxz  0x4186b8
  418702:	imul   edi,DWORD PTR [edx],0xffffffc1
  418705:	add    al,dh
  418707:	push   0x78
  418709:	pop    edi
  41870a:	jmp    0x41869b
  41870c:	or     dh,BYTE PTR [edi-0x6e857b87]
  418712:	jnp    0x418740
  418714:	or     BYTE PTR [edi+0x1b9cbb1f],dh
  41871a:	push   DWORD PTR [esp+ebx*4+0x35]
  41871e:	cmp    BYTE PTR [edx+0x375abee3],bl
  418724:	push   0xfffffff9
  418726:	rcl    DWORD PTR [ebp+0x12394ddc],1
  41872c:	jnp    0x4186b2
  41872e:	add    al,0xb6
  418730:	rcr    BYTE PTR [esi+0x1f],cl
  418733:	mov    esi,0xc0db55e7
  418738:	cli    
  418739:	bound  edx,QWORD PTR [esi-0x7a]
  41873c:	pop    ss
  41873d:	mov    ss,WORD PTR [esi]
  41873f:	sar    DWORD PTR [edi+0x2bc1a6fc],1
  418745:	pop    esp
  418746:	sub    bh,ah
  418748:	jecxz  0x4187c8
  41874a:	mov    ecx,0x54dd306b
  41874f:	jp     0x4187a8
  418751:	lods   eax,DWORD PTR ds:[esi]
  418752:	add    al,0x5b
  418754:	call   FWORD PTR [eax+0x55]
  418757:	sub    ebx,esp
  418759:	mov    esi,0x45ee3748
  41875e:	pop    ss
  41875f:	clc    
  418760:	pop    DWORD PTR [edx-0x3a]
  418763:	sahf   
  418764:	xor    bh,ch
  418766:	fwait
  418767:	sti    
  418768:	pusha  
  418769:	push   0x37116e3c
  41876e:	imul   edi,DWORD PTR [ebx-0x5b],0x38
  418772:	sub    dl,bh
  418774:	mov    esp,0xfc181fda
  418779:	adc    DWORD PTR [ebp-0x27],0x8aa82945
  418780:	pop    ss
  418781:	pop    esi
  418782:	and    DWORD PTR [ebx-0x6f9910c9],ebp
  418788:	imul   eax,DWORD PTR [ecx],0xfffffffc
  41878b:	mov    ch,0xad
  41878d:	out    0xb8,eax
  41878f:	ins    DWORD PTR es:[edi],dx
  418790:	sti    
  418791:	mov    al,ds:0xb7602635
  418796:	sub    eax,0xf7015f50
  41879b:	jl     0x418787
  41879d:	adc    dh,dl
  41879f:	xchg   edi,eax
  4187a0:	sahf   
  4187a1:	out    0xdf,eax
  4187a3:	and    ebx,DWORD PTR [esi+0x2]
  4187a6:	xchg   edi,eax
  4187a7:	cmp    DWORD PTR [edx-0x31],esp
  4187aa:	xchg   esp,eax
  4187ab:	adc    al,0x5f
  4187ad:	mov    ds:0xab33ef54,eax
  4187b2:	xor    BYTE PTR [edx-0x13],bh
  4187b5:	add    bl,BYTE PTR [ebx+0x71c4991e]
  4187bb:	(bad)  [bx-0x4794]
  4187c0:	loop   0x418743
  4187c2:	ret    0x64e0
  4187c5:	sub    DWORD PTR [ebp+0x43246b79],ebp
  4187cb:	fidiv  WORD PTR [eax+0x6d7e2fcd]
  4187d1:	inc    ebx
  4187d2:	dec    eax
  4187d3:	in     eax,dx
  4187d4:	sbb    ebx,esp
  4187d6:	sub    eax,0xf42d611a
  4187db:	pop    esi
  4187dc:	fwait
  4187dd:	mov    ds:0x8cd6bc0f,eax
  4187e2:	lods   al,BYTE PTR ds:[esi]
  4187e3:	xor    al,0xe7
  4187e5:	and    esp,esi
  4187e7:	adc    al,0x99
  4187e9:	xchg   edi,eax
  4187ea:	xchg   edi,eax
  4187eb:	push   eax
  4187ec:	jne    0x418858
  4187ee:	mov    cl,BYTE PTR [edx-0x13e0f8d]
  4187f4:	pop    esp
  4187f5:	jbe    0x418790
  4187f7:	jmp    0x90b0:0xe4414cf9
  4187fe:	cmp    DWORD PTR [esi-0x2d],ebp
  418801:	(bad)
  418805:	xchg   esp,eax
  418806:	xor    bh,dh
  418808:	daa    
  418809:	stos   BYTE PTR es:[edi],al
  41880a:	inc    ebx
  41880b:	mov    esp,0x779196d9
  418810:	mov    ds:0x26d2b379,eax
  418815:	mov    edi,0xe91b014e
  41881a:	call   0x85b553a0
  41881f:	xchg   bx,ax
  418821:	xor    al,0xd8
  418823:	xchg   edi,eax
  418825:	retf   0x6653
  418828:	mov    WORD PTR [ecx],fs
  41882a:	dec    ebx
  41882b:	push   ss
  41882c:	mov    al,0x1c
  41882e:	into   
  41882f:	jle    0x41887b
  418831:	xor    al,al
  418833:	mov    edi,0x7230320f
  418838:	cld    
  418839:	idiv   cl
  41883b:	mov    al,ds:0xaff0ee97
  418840:	iret   
  418841:	xchg   esi,eax
  418842:	sti    
  418843:	pop    DWORD PTR [esi-0x5]
  418846:	adc    eax,0x3afd3161
  41884b:	mov    ds:0xca8bdc7b,al
  418850:	les    ebp,FWORD PTR [ebp-0x7af6a75c]
  418856:	add    BYTE PTR [ebx+0x244c7b21],bl
  41885c:	cld    
  41885d:	out    dx,eax
  41885e:	pushf  
  41885f:	pop    esi
  418860:	and    al,0xcf
  418862:	sbb    ebx,eax
  418864:	sti    
  418865:	pop    ds
  418866:	lea    eax,[ebx]
  418868:	fimul  WORD PTR [ebx-0x2f8ee086]
  41886e:	mov    ch,0xb4
  418870:	ss aam 0xb3
  418873:	not    DWORD PTR [ecx-0x34]
  418876:	mov    ch,0x4d
  418878:	adc    eax,0x75bfb8b3
  41887d:	sub    BYTE PTR [edi],ah
  41887f:	mov    dh,0xd2
  418881:	ds xor al,0xca
  418884:	nop
  418885:	dec    ecx
  418886:	dec    eax
  418887:	test   al,0x8d
  418889:	push   eax
  41888a:	ss js  0x418906
  41888d:	push   edi
  41888e:	in     al,dx
  41888f:	adc    edx,DWORD PTR [edx+eiz*8-0x92606d8]
  418896:	mov    ebx,DWORD PTR [ebp-0x8]
  418899:	add    DWORD PTR ds:0x42c018,0x28a0
  4188a3:	xor    edx,eax
  4188a5:	xor    ebx,eax
  4188a7:	sub    edx,ebx
  4188a9:	sub    DWORD PTR ds:0x42a008,ebx
  4188af:	sub    edx,esi
  4188b1:	mov    DWORD PTR ds:0x42c000,0x11
  4188bb:	cmp    DWORD PTR ds:0x42c000,0x0
  4188c2:	je     0x418917
  4188c8:	cmp    DWORD PTR ds:0x42c000,0x9
  4188cf:	jne    0x4188e5
  4188d5:	push   0x42a018
  4188da:	push   0x42e165
  4188df:	call   DWORD PTR ds:0x42ed6f
  4188e5:	cmp    DWORD PTR ds:0x42c000,0xa
  4188ec:	jne    0x4188ff
  4188f2:	mov    ebx,DWORD PTR ds:0x42c000
  4188f8:	dec    ebx
  4188f9:	mov    DWORD PTR ds:0x42c000,ebx
  4188ff:	mov    ebx,DWORD PTR ds:0x42c000
  418905:	dec    ebx
  418906:	mov    DWORD PTR ds:0x42c000,ebx
  41890c:	jmp    0x4188bb
  418911:	sub    ebx,DWORD PTR ds:0x429004
  418917:	xor    edx,eax
  418919:	neg    ebx
  41891b:	mov    DWORD PTR [ebp+0x8],edx
  41891e:	mov    edx,DWORD PTR [ebp+0x8]
  418921:	mov    ebx,DWORD PTR [ebp-0x58]
  418924:	add    edx,0x5708f8
  41892a:	or     DWORD PTR ds:0x42d014,0x42c014
  418934:	imul   edx,ebx
  418937:	sub    DWORD PTR ds:0x42d004,0x2934
  418941:	mov    DWORD PTR [ebp-0x58],edx
  418944:	mov    edx,DWORD PTR [ebp+0x8]
  418947:	mov    ebx,DWORD PTR [ebp-0x54]
  41894a:	adc    DWORD PTR ds:0x429010,0x42c010
  418954:	add    edx,0x64f8da
  41895a:	sbb    DWORD PTR ds:0x429028,0xbc3
  418964:	or     edx,ebx
  418966:	xor    DWORD PTR ds:0x42b008,edi
  41896c:	mov    DWORD PTR [ebp-0x54],edx
  41896f:	mov    edx,DWORD PTR [ebp+0x8]
  418972:	and    DWORD PTR ds:0x42b018,ebx
  418978:	mov    ebx,DWORD PTR [ebp-0x50]
  41897b:	or     DWORD PTR ds:0x42c014,0x42b010
  418985:	add    edx,ecx
  418987:	xor    edx,ebx
  418989:	mov    DWORD PTR [ebp-0x50],edx
  41898c:	mov    edx,DWORD PTR [ebp+0x8]
  41898f:	mov    ebx,DWORD PTR [ebp-0x4c]
  418992:	add    edx,edi
  418994:	and    edx,ebx
  418996:	mov    DWORD PTR [ebp-0x4c],edx
  418999:	mov    edx,DWORD PTR [ebp+0x8]
  41899c:	mov    ebx,DWORD PTR [ebp-0x48]
  41899f:	lea    edx,[ebx+edx*1+0x241fc1f]
  4189a6:	mov    DWORD PTR [ebp-0x48],edx
  4189a9:	mov    edx,DWORD PTR [ebp+0x8]
  4189ac:	mov    ebx,0xfa5e15e2
  4189b1:	sub    ebx,edx
  4189b3:	add    ebx,DWORD PTR [ebp-0x44]
  4189b6:	mov    DWORD PTR [ebp-0x44],ebx
  4189b9:	mov    edx,DWORD PTR [ebp+0x8]
  4189bc:	xor    edx,eax
  4189be:	add    edx,esi
  4189c0:	jne    0x416500
  4189c6:	mov    edx,DWORD PTR [ebp-0xc]
  4189c9:	mov    dl,BYTE PTR [ebp+edx*1-0x98]
  4189d0:	mov    bl,BYTE PTR [ebp-0x1]
  4189d3:	cmp    dl,bl
  4189d5:	je     0x418a95
  4189db:	mov    edx,DWORD PTR [ebp-0xc]
  4189de:	mov    dl,BYTE PTR [ebp+edx*1-0x98]
  4189e5:	mov    ebx,DWORD PTR [ebp+0xc]
  4189e8:	cmp    dl,BYTE PTR [ebx]
  4189ea:	jne    0x4219f0
  4189f0:	mov    edx,DWORD PTR [ebp-0x18]
  4189f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4189f6:	movsx  ebx,BYTE PTR [ebx]
  4189f9:	xor    edx,eax
  4189fb:	add    edx,esi
  4189fd:	cmp    ebx,edx
  4189ff:	mov    edx,DWORD PTR [ebp-0x10]
  418a02:	mov    DWORD PTR [ebp+0x8],edx
  418a05:	mov    edx,DWORD PTR [ebp+0x8]
  418a08:	je     0x423e79
  418a0e:	jmp    0x418a86
  418a13:	mov    edx,DWORD PTR [ebp+0x8]
  418a16:	mov    ebx,DWORD PTR [ebp-0x8]
  418a19:	xor    edx,eax
  418a1b:	xor    ebx,eax
  418a1d:	sub    edx,ebx
  418a1f:	sub    edx,esi
  418a21:	xor    edx,eax
  418a23:	mov    DWORD PTR [ebp+0x8],edx
  418a26:	mov    edx,DWORD PTR [ebp+0x8]
  418a29:	mov    ebx,DWORD PTR [ebp-0x58]
  418a2c:	add    edx,0x5708f8
  418a32:	imul   edx,ebx
  418a35:	mov    DWORD PTR [ebp-0x58],edx
  418a38:	mov    edx,DWORD PTR [ebp+0x8]
  418a3b:	mov    ebx,DWORD PTR [ebp-0x54]
  418a3e:	add    edx,0x64f8da
  418a44:	or     edx,ebx
  418a46:	mov    DWORD PTR [ebp-0x54],edx
  418a49:	mov    edx,DWORD PTR [ebp+0x8]
  418a4c:	mov    ebx,DWORD PTR [ebp-0x50]
  418a4f:	add    edx,ecx
  418a51:	xor    edx,ebx
  418a53:	mov    DWORD PTR [ebp-0x50],edx
  418a56:	mov    edx,DWORD PTR [ebp+0x8]
  418a59:	mov    ebx,DWORD PTR [ebp-0x4c]
  418a5c:	add    edx,edi
  418a5e:	and    edx,ebx
  418a60:	mov    DWORD PTR [ebp-0x4c],edx
  418a63:	mov    edx,DWORD PTR [ebp+0x8]
  418a66:	mov    ebx,DWORD PTR [ebp-0x48]
  418a69:	lea    edx,[ebx+edx*1+0x241fc1f]
  418a70:	mov    DWORD PTR [ebp-0x48],edx
  418a73:	mov    edx,DWORD PTR [ebp+0x8]
  418a76:	mov    ebx,0xfa5e15e2
  418a7b:	sub    ebx,edx
  418a7d:	add    ebx,DWORD PTR [ebp-0x44]
  418a80:	mov    DWORD PTR [ebp-0x44],ebx
  418a83:	mov    edx,DWORD PTR [ebp+0x8]
  418a86:	xor    edx,eax
  418a88:	add    edx,esi
  418a8a:	jne    0x418a13
  418a90:	jmp    0x41aea6
  418a95:	mov    edx,DWORD PTR [ebp-0x10]
  418a98:	mov    DWORD PTR [ebp+0x8],edx
  418a9b:	jmp    0x41ae99
  418aa0:	mov    edx,DWORD PTR [ebp+0x8]
  418aa3:	mov    ebx,DWORD PTR [ebp-0x8]
  418aa6:	xor    edx,eax
  418aa8:	xor    ebx,eax
  418aaa:	sub    edx,ebx
  418aac:	sub    edx,esi
  418aae:	xor    edx,eax
  418ab0:	jmp    0x41ae39
  418ab5:	rcr    BYTE PTR [bx+di-0x68],cl
  418ab9:	iret   
  418aba:	ja     0x418a63
  418abc:	jno    0x418a89
  418abe:	into   
  418abf:	fidiv  WORD PTR [esp+0x39]
  418ac3:	mov    ebp,DWORD PTR [esi+0x7a7934dd]
  418ac9:	push   es
  418aca:	pop    edi
  418acb:	jp     0x418b47
  418acd:	pop    ebp
  418ace:	lds    esp,FWORD PTR [ebp+ebx*1+0x56a27ab8]
  418ad5:	(bad)  
  418ad6:	jo     0x418a68
  418ad8:	lods   eax,DWORD PTR ds:[esi]
  418ad9:	shl    dh,0xe9
  418adc:	xchg   ebp,eax
  418add:	xchg   ebp,eax
  418ade:	sub    ch,BYTE PTR [ebx+0x3b730603]
  418ae4:	shl    DWORD PTR [edx+edx*1+0x64],0xcf
  418ae9:	(bad)
  418aec:	fs sub eax,0xb6afa68d
  418af2:	pop    ss
  418af3:	(bad)  
  418af4:	xor    BYTE PTR [ebx-0x2c382eaa],al
  418afa:	sub    al,0x9e
  418afc:	enter  0x4f3,0x96
  418b00:	cmp    BYTE PTR [esi-0x10],dh
  418b03:	clc    
  418b04:	ds xchg edi,eax
  418b06:	or     ecx,DWORD PTR [ecx]
  418b08:	mov    ecx,0x6a0c80f
  418b0d:	jnp    0x418aae
  418b0f:	test   BYTE PTR [edx-0x27437138],cl
  418b15:	mov    cl,BYTE PTR [edx+0x534964e0]
  418b1b:	retf   0xb6e3
  418b1e:	dec    edi
  418b1f:	sub    al,0xfa
  418b21:	sub    DWORD PTR [ebp-0x47],ebx
  418b24:	mov    al,ds:0x646a023b
  418b29:	je     0x418ac6
  418b2b:	sbb    BYTE PTR [edx+0x6d3a3625],cl
  418b31:	xor    eax,DWORD PTR [ecx-0xd1876d3]
  418b37:	pop    edx
  418b38:	sbb    BYTE PTR [esi-0x5470746e],dh
  418b3e:	pop    edi
  418b3f:	adc    bh,BYTE PTR [edi+0x7a]
  418b42:	ret    0x7594
  418b45:	xchg   edx,eax
  418b46:	out    dx,al
  418b47:	bound  esi,QWORD PTR [eax]
  418b49:	test   al,0xd5
  418b4b:	and    al,0x12
  418b4d:	pop    ebp
  418b4e:	pop    ebx
  418b4f:	retf   
  418b50:	outs   dx,DWORD PTR ds:[esi]
  418b51:	sbb    DWORD PTR [edx],0x153159ef
  418b57:	cli    
  418b58:	sub    DWORD PTR [ebx-0x21],ebp
  418b5b:	pop    ebx
  418b5c:	stos   BYTE PTR es:[edi],al
  418b5d:	rcr    BYTE PTR [edi],0x4
  418b60:	retf   
  418b61:	sar    BYTE PTR [ebx],1
  418b63:	cmp    eax,0x23524b00
  418b68:	mov    dl,0xc2
  418b6a:	dec    ebp
  418b6b:	rcr    BYTE PTR [ebx-0x1c],1
  418b6e:	pop    ds
  418b6f:	ror    DWORD PTR [ebp+0x2b230faa],1
  418b75:	sub    DWORD PTR [ebx-0x4eae1199],edi
  418b7b:	mov    cl,0x5f
  418b7d:	shr    BYTE PTR [ebx-0x5b7031a7],cl
  418b83:	bound  esi,QWORD PTR [ebx-0x4c]
  418b86:	shl    esi,0xb6
  418b89:	es mov dl,0x2d
  418b8c:	xor    dh,bl
  418b8e:	outs   dx,BYTE PTR ds:[esi]
  418b8f:	clc    
  418b90:	dec    ebp
  418b91:	call   0xcaed4b78
  418b96:	sti    
  418b97:	mov    bh,0xdc
  418b99:	jp     0x418b21
  418b9b:	neg    BYTE PTR [edi-0x12]
  418b9e:	enter  0x8230,0xce
  418ba2:	test   BYTE PTR [edx+0x74c4b814],0x70
  418ba9:	mov    esp,0x35787336
  418bae:	shl    BYTE PTR [edx-0x79],cl
  418bb1:	rcl    BYTE PTR [ebx-0x39fd940a],0xec
  418bb8:	jg     0x418b6e
  418bba:	jge    0x418b75
  418bbc:	mov    esi,0x6124f007
  418bc1:	push   edi
  418bc2:	xchg   esp,eax
  418bc3:	lahf   
  418bc4:	and    cl,BYTE PTR [ebp-0x3d]
  418bc7:	and    ch,BYTE PTR [edx]
  418bc9:	mov    edi,0x4af53aec
  418bce:	jmp    0x7c78:0x261c8e79
  418bd5:	lds    eax,FWORD PTR [esi-0x299a7524]
  418bdb:	ror    BYTE PTR [edi+0x3a],cl
  418bde:	jecxz  0x418be5
  418be0:	add    ecx,DWORD PTR [edx]
  418be2:	or     dl,ch
  418be4:	enter  0xe36a,0x28
  418be8:	xor    DWORD PTR [edi],0x51c8e5c3
  418bee:	(bad)  
  418bef:	sbb    ebp,DWORD PTR [ebx+0x1a80b5c3]
  418bf5:	sbb    BYTE PTR [edx],cl
  418bf7:	mov    esi,0x2d6dac94
  418bfc:	test   edx,ebx
  418bfe:	fs in  eax,0xc8
  418c01:	push   ds
  418c02:	jae    0x418be7
  418c04:	outs   dx,BYTE PTR ds:[esi]
  418c05:	jmp    0xae3:0xda2eab7a
  418c0c:	fistp  QWORD PTR [esi]
  418c0e:	call   0x8b70fee8
  418c13:	push   ss
  418c14:	scas   al,BYTE PTR es:[edi]
  418c15:	(bad)  
  418c17:	cmp    DWORD PTR [edx+0x1f65e749],edx
  418c1d:	out    dx,eax
  418c1e:	arpl   WORD PTR [eax+edi*2+0x2d],di
  418c22:	test   eax,0xf0e2da94
  418c27:	ins    DWORD PTR es:[edi],dx
  418c28:	cmp    al,0x63
  418c2a:	shl    edx,1
  418c2c:	pop    edi
  418c2d:	sti    
  418c2e:	push   0x4337e587
  418c33:	les    eax,FWORD PTR [esi]
  418c35:	push   0xffffffdf
  418c37:	outs   dx,DWORD PTR ds:[esi]
  418c38:	or     BYTE PTR [esp+ebx*1-0x76],0x77
  418c3d:	hlt    
  418c3e:	aam    0x80
  418c40:	dec    edi
  418c41:	test   ah,cl
  418c43:	mov    ds:0x48c8d064,eax
  418c48:	outs   dx,BYTE PTR ds:[esi]
  418c49:	mov    ds:0x33659555,eax
  418c4e:	outs   dx,DWORD PTR ds:[esi]
  418c4f:	push   esp
  418c50:	pop    edi
  418c51:	pusha  
  418c52:	cdq    
  418c53:	lds    ebx,FWORD PTR [esi]
  418c55:	push   esi
  418c56:	test   DWORD PTR [ebx],0xa7fd6ce6
  418c5c:	sbb    ecx,esp
  418c5e:	ins    BYTE PTR es:[edi],dx
  418c5f:	loop   0x418bf5
  418c61:	lea    esi,[esi-0x7aeb7781]
  418c67:	aas    
  418c68:	popf   
  418c69:	mov    eax,ds:0x8fbdb7a
  418c6e:	xor    al,0xaf
  418c70:	mov    ss,WORD PTR [edi]
  418c72:	push   0x28
  418c74:	js     0x418c3d
  418c76:	mov    al,ds:0x56cfe06f
  418c7b:	mov    ebx,0x513560ea
  418c80:	sbb    ebx,edi
  418c82:	jp     0x418c06
  418c84:	lahf   
  418c85:	push   es
  418c86:	mov    dh,BYTE PTR [esi]
  418c88:	xor    eax,0xbf335433
  418c8d:	xor    ebx,ebp
  418c8f:	add    eax,0x7cc8d49d
  418c95:	xor    BYTE PTR [ebx-0x4],al
  418c98:	push   ss
  418c99:	(bad)  
  418c9a:	sbb    ebp,eax
  418c9c:	xchg   edi,eax
  418c9d:	add    cl,BYTE PTR [edi+0x5a]
  418ca0:	xchg   edi,eax
  418ca1:	sbb    BYTE PTR [ebp+edi*4+0x32],0x3
  418ca6:	fistp  WORD PTR [edi]
  418ca8:	push   es
  418ca9:	ins    BYTE PTR es:[edi],dx
  418caa:	add    al,0xc8
  418cac:	cmp    al,0xc8
  418cae:	nop
  418caf:	or     BYTE PTR [edx+0x5049d7e],al
  418cb5:	xlat   BYTE PTR ds:[ebx]
  418cb6:	cli    
  418cb7:	pop    edx
  418cb8:	das    
  418cb9:	and    eax,esp
  418cbb:	(bad)  
  418cbd:	dec    edi
  418cbe:	dec    esp
  418cbf:	jns    0x418c7e
  418cc1:	jg     0x418d2f
  418cc3:	xchg   DWORD PTR [ecx+0x64f6edd2],edi
  418cc9:	div    DWORD PTR [ecx-0x3bc2948]
  418ccf:	dec    ebx
  418cd0:	fst    DWORD PTR [ebp-0x3e]
  418cd3:	out    0x10,eax
  418cd5:	or     ah,cl
  418cd7:	pop    esi
  418cd8:	(bad)  [ecx+0x1e]
  418cdb:	cwde   
  418cdc:	shl    BYTE PTR [eiz*1-0x5d1d0ed4],cl
  418ce3:	sub    ah,BYTE PTR [ebx]
  418ce5:	jae    0x418d44
  418ce7:	cmp    al,0x95
  418ce9:	cmp    edi,eax
  418ceb:	fwait
  418cec:	jecxz  0x418d06
  418cee:	mov    esi,0xe0f6479e
  418cf3:	push   esp
  418cf4:	aam    0x31
  418cf6:	stos   BYTE PTR es:[edi],al
  418cf7:	cmp    eax,0xc18ae983
  418cfc:	dec    edx
  418cfd:	rcl    DWORD PTR [edx],cl
  418cff:	jae    0x418c97
  418d01:	ins    DWORD PTR es:[edi],dx
  418d02:	jno    0x418ca3
  418d04:	pop    ebx
  418d05:	cwde   
  418d06:	(bad)  
  418d07:	hlt    
  418d08:	fwait
  418d09:	stos   BYTE PTR es:[edi],al
  418d0a:	(bad)  
  418d0b:	repnz shr dh,1
  418d0e:	sub    DWORD PTR [edx-0x5f],ebp
  418d11:	xor    edx,DWORD PTR [esi]
  418d13:	adc    DWORD PTR [edi-0x5],ecx
  418d16:	mov    bh,0xda
  418d18:	mov    eax,ds:0xd65bdfe
  418d1d:	mov    WORD PTR cs:[si],?
  418d21:	inc    ecx
  418d22:	addr16 test al,0x57
  418d25:	test   eax,0x118ca06c
  418d2a:	mov    ebp,0x190b7f93
  418d2f:	push   eax
  418d30:	add    DWORD PTR [ebp+ebx*1+0x6d],esp
  418d34:	loope  0x418d8b
  418d36:	fwait
  418d37:	outs   dx,BYTE PTR ds:[esi]
  418d38:	call   0xcf47195c
  418d3d:	push   0xb
  418d3f:	push   es
  418d40:	jae    0x418cf4
  418d42:	sub    cl,BYTE PTR [ebp+ebx*4-0x3f81105f]
  418d49:	or     esi,DWORD PTR [eax]
  418d4b:	pop    ds
  418d4c:	cmp    al,0x56
  418d4e:	xchg   DWORD PTR [ebp-0x8],esi
  418d51:	cmp    cl,BYTE PTR [edi+0x2b]
  418d54:	retf   
  418d55:	popa   
  418d56:	adc    DWORD PTR [esi],edi
  418d58:	ficomp WORD PTR [edx+0x6d]
  418d5b:	adc    ecx,edi
  418d5d:	call   0xdc75a50d
  418d62:	mov    esi,0x80a9b231
  418d67:	rol    BYTE PTR [esi+ebx*8],cl
  418d6a:	iret   
  418d6b:	jb     0x418cfc
  418d6d:	mov    esi,0x3066c16d
  418d72:	into   
  418d73:	daa    
  418d74:	xchg   edi,eax
  418d75:	xor    DWORD PTR [ecx+0x495b5353],0xc6275a6c
  418d7f:	adc    eax,0x5d4d7a06
  418d84:	lahf   
  418d85:	or     BYTE PTR [ebx],dl
  418d87:	(bad)  
  418d88:	not    DWORD PTR [ebx+0x7a]
  418d8b:	push   0x4b29502d
  418d90:	jle    0x418da3
  418d92:	jmp    0xf150ff8f
  418d97:	jp     0x418d7a
  418d99:	aaa    
  418d9a:	neg    BYTE PTR [ecx+edi*4]
  418d9d:	and    eax,0x5a7df82c
  418da2:	sub    BYTE PTR [ecx-0x55],0x3f
  418da6:	adc    al,ah
  418da8:	push   ebx
  418da9:	addr16 mov ah,0xbc
  418dac:	push   ebp
  418dad:	cmp    ebp,edx
  418daf:	xor    al,0x26
  418db1:	jge    0x418d68
  418db3:	fisttp WORD PTR [ecx]
  418db5:	jbe    0x418d82
  418db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418db8:	gs mov dh,0x79
  418dbb:	xor    ah,BYTE PTR [eax]
  418dbd:	loopne 0x418e19
  418dbf:	fbstp  TBYTE PTR [eax-0x5a]
  418dc2:	jb     0x418e2f
  418dc4:	dec    eax
  418dc5:	cs dec ebx
  418dc7:	fdivr  DWORD PTR [eax+0x22]
  418dca:	fld    TBYTE PTR [ecx+0x7c]
  418dcd:	jne    0x418da7
  418dcf:	je     0x418e4b
  418dd1:	cli    
  418dd2:	dec    edx
  418dd3:	pop    esi
  418dd4:	aaa    
  418dd5:	dec    ebp
  418dd6:	jnp    0x418e11
  418dd8:	mov    esi,?
  418dda:	sbb    al,0xe1
  418ddc:	add    al,0xf8
  418dde:	hlt    
  418ddf:	out    dx,eax
  418de0:	xchg   DWORD PTR [eax+0x65fc536a],ebp
  418de6:	inc    ebx
  418de7:	int    0x8d
  418de9:	loop   0x418dde
  418deb:	ins    DWORD PTR es:[edi],dx
  418dec:	jge    0x418e41
  418dee:	stos   DWORD PTR es:[edi],eax
  418def:	icebp  
  418df0:	mov    cl,ah
  418df2:	or     DWORD PTR [edx],ebp
  418df4:	mov    ecx,0x31b5d73f
  418df9:	xchg   edx,eax
  418dfa:	ins    BYTE PTR es:[edi],dx
  418dfb:	jmp    0x25439d
  418e00:	push   0x13
  418e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e03:	mov    WORD PTR [ebp+0x62207a13],?
  418e09:	aas    
  418e0a:	mov    ebx,0xfc65c837
  418e0f:	fdivr  st,st(5)
  418e11:	rol    BYTE PTR [ebx-0x41],1
  418e14:	mov    ebp,0xd7e26ac8
  418e19:	mov    cl,0xa6
  418e1b:	jmp    0x51da28ca
  418e20:	cmp    dh,BYTE PTR [ecx]
  418e22:	arpl   WORD PTR [edi],dx
  418e24:	sbb    DWORD PTR [edx+esi*4+0x52],ecx
  418e28:	aaa    
  418e29:	jp     0x418e25
  418e2b:	test   DWORD PTR ds:0x90463b81,esp
  418e31:	adc    eax,0x8654c83e
  418e36:	or     ch,BYTE PTR [ecx+esi*2+0x29]
  418e3a:	sbb    eax,0xc645db2f
  418e3f:	retf   
  418e40:	fwait
  418e41:	std    
  418e42:	in     al,dx
  418e43:	dec    edx
  418e44:	mov    bh,0x2c
  418e46:	repz clc 
  418e48:	sar    BYTE PTR [ebx],1
  418e4a:	or     eax,0xca177b2e
  418e4f:	shr    DWORD PTR [edx-0x143e8bd2],cl
  418e55:	mov    ds:0x8c293f50,eax
  418e5a:	sbb    bl,BYTE PTR [ebx]
  418e5c:	xlat   BYTE PTR gs:[ebx]
  418e5e:	jo     0x418e52
  418e60:	fwait
  418e61:	xchg   edi,eax
  418e62:	cwde   
  418e63:	sar    BYTE PTR [ecx+0x40996103],cl
  418e69:	dec    eax
  418e6a:	bound  eax,QWORD PTR [eax+0x6c6f185]
  418e70:	xchg   esp,eax
  418e71:	mov    bl,0xfd
  418e73:	mov    esi,0xb8cf1916
  418e78:	stos   BYTE PTR es:[edi],al
  418e79:	jo     0x418ecd
  418e7b:	retf   0xad70
  418e7e:	data16 sbb bl,ah
  418e81:	pop    ss
  418e82:	les    ebx,FWORD PTR [edx+0x59f3d8a0]
  418e88:	jno    0x418e96
  418e8a:	mov    DWORD PTR [eax-0x2f167478],edi
  418e90:	pop    edx
  418e91:	ret    0x5bd
  418e94:	add    BYTE PTR [ebp+0x3d],ah
  418e97:	jmp    0x7bd0:0x76fdd37e
  418e9e:	call   0x8055:0xf53b8703
  418ea5:	test   eax,0xfe0062bd
  418eaa:	out    0x45,eax
  418eac:	inc    ecx
  418ead:	shr    cl,1
  418eaf:	lods   eax,DWORD PTR ds:[esi]
  418eb0:	scas   eax,DWORD PTR es:[edi]
  418eb1:	pop    DWORD PTR [edx+eax*8+0x282de837]
  418eb8:	push   ecx
  418eb9:	sub    ch,ah
  418ebb:	cmp    al,0x4a
  418ebd:	cmp    eax,0xeba5f3be
  418ec2:	push   0xffffff96
  418ec4:	or     BYTE PTR [ebp+0x58],0x1b
  418ec8:	iret   
  418ec9:	xchg   DWORD PTR [ebp-0x51],eax
  418ecc:	xchg   BYTE PTR [ebx-0x5ef6be16],ah
  418ed2:	int3   
  418ed3:	inc    edx
  418ed4:	arpl   WORD PTR [edi-0x2a62781b],bx
  418eda:	or     dh,BYTE PTR [ebx-0x41a3e544]
  418ee0:	pop    eax
  418ee1:	xor    BYTE PTR [edi-0x494cb4e3],dh
  418ee7:	or     ebp,DWORD PTR [edi+edx*2+0x23]
  418eeb:	js     0x418ebf
  418eed:	rol    BYTE PTR [ebx],1
  418eef:	shr    BYTE PTR [ebp+0x3457358c],1
  418ef5:	mov    ebp,0x5f2dc539
  418efa:	clc    
  418efb:	cmp    DWORD PTR [edi+0x705c951c],0xd2954dfd
  418f05:	ror    BYTE PTR [eax],0x21
  418f08:	mov    bl,0x48
  418f0a:	fldcw  WORD PTR [edi-0x6c]
  418f0d:	hlt    
  418f0e:	out    dx,eax
  418f0f:	jne    0x418f1d
  418f11:	lahf   
  418f12:	push   es
  418f13:	out    dx,eax
  418f14:	pusha  
  418f15:	test   ah,al
  418f17:	gs sbb ebp,ecx
  418f1a:	jo     0x418f70
  418f1c:	cmp    dh,BYTE PTR [edi-0x4d]
  418f1f:	das    
  418f20:	sbb    ch,bh
  418f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f23:	sub    eax,0x33a674ba
  418f28:	push   edx
  418f29:	psrad  mm6,QWORD PTR [ecx+0x4e]
  418f2d:	cs jle 0x418f98
  418f30:	(bad)  
  418f31:	ret    0xc383
  418f34:	jl     0x418ecc
  418f36:	and    BYTE PTR [esi-0x79],0x2c
  418f3a:	pop    ebx
  418f3b:	(bad)  
  418f3c:	popa   
  418f3d:	mov    edi,0x931ebc53
  418f42:	or     esp,DWORD PTR [edi+0x68549223]
  418f48:	or     al,BYTE PTR [eax+edi*4-0x5697802c]
  418f4f:	mov    dh,0xc0
  418f51:	aaa    
  418f52:	(bad)  
  418f53:	lahf   
  418f54:	inc    ebx
  418f55:	shr    BYTE PTR [ecx+0x10188dfd],0x7f
  418f5c:	push   ebp
  418f5d:	pop    ss
  418f5e:	call   0xd24f166d
  418f63:	dec    ebx
  418f64:	out    dx,eax
  418f65:	jmp    0xf28c:0xccfc4e57
  418f6c:	jmp    0xef04:0x378e54bc
  418f73:	add    dh,BYTE PTR [edi]
  418f75:	scas   eax,DWORD PTR es:[edi]
  418f76:	mov    edx,0x98cebf72
  418f7b:	xlat   BYTE PTR ds:[ebx]
  418f7c:	outs   dx,DWORD PTR ds:[esi]
  418f7d:	push   eax
  418f7e:	mov    esp,0x4139e8f2
  418f83:	sbb    eax,0xcec8f478
  418f88:	add    eax,0x8dd7e138
  418f8d:	ins    BYTE PTR es:[edi],dx
  418f8e:	aam    0xef
  418f90:	pop    edx
  418f91:	mov    ebp,0x9d0d2066
  418f96:	add    BYTE PTR [ebx+ebp*2-0x344ddcef],bh
  418f9d:	mov    gs,WORD PTR [ebp+eax*1-0x54]
  418fa1:	outs   dx,DWORD PTR ds:[esi]
  418fa2:	test   al,0x37
  418fa4:	leave  
  418fa5:	in     al,0xc2
  418fa7:	add    al,0xc
  418fa9:	dec    ebx
  418faa:	mov    BYTE PTR [ebx-0x7c94bf8],al
  418fb0:	hlt    
  418fb1:	adc    al,0xa9
  418fb3:	icebp  
  418fb4:	(bad)  
  418fb5:	sub    al,0xf9
  418fb7:	xchg   ecx,eax
  418fb8:	or     dl,BYTE PTR [edx-0x26ae08d]
  418fbe:	push   esp
  418fbf:	xchg   ecx,eax
  418fc0:	push   ss
  418fc1:	cld    
  418fc2:	mov    cl,0xe9
  418fc4:	add    eax,DWORD PTR [edi-0x7]
  418fc7:	dec    eax
  418fc8:	pusha  
  418fc9:	pop    esi
  418fca:	push   cs
  418fcb:	out    dx,al
  418fcc:	and    BYTE PTR [edi+0x5b],0x2
  418fd0:	fmulp  st(1),st
  418fd2:	icebp  
  418fd3:	shl    dh,0x75
  418fd6:	jmp    0x418f9c
  418fd8:	in     eax,0xc4
  418fda:	stos   DWORD PTR es:[edi],eax
  418fdb:	mov    edx,0x8dc5942f
  418fe0:	rol    DWORD PTR [ebx-0x6d2d16da],1
  418fe6:	clc    
  418fe7:	mov    al,0xab
  418fe9:	xchg   esp,eax
  418fea:	dec    edx
  418feb:	fdiv   DWORD PTR [eax]
  418fed:	inc    ecx
  418fee:	imul   eax,DWORD PTR [edx-0x1515d9a9],0x7b54efec
  418ff8:	bound  ecx,QWORD PTR [eax+0x55]
  418ffb:	xchg   ecx,eax
  418ffc:	test   al,0x82
  418ffe:	mov    WORD PTR [ebx],fs
  419000:	nop
  419001:	sub    DWORD PTR [ebp+0x3953731a],esi
  419007:	mov    edi,DWORD PTR [eax+0x37261dfa]
  41900d:	mov    DWORD PTR [esi+ecx*2+0x35e1d4bf],edi
  419014:	pop    edi
  419015:	sahf   
  419016:	cwde   
  419017:	pop    ds
  419018:	cs stos BYTE PTR es:[edi],al
  41901a:	fistp  WORD PTR [ecx]
  41901c:	stos   DWORD PTR es:[edi],eax
  41901d:	push   cs
  41901e:	and    ebp,DWORD PTR [edi+0x6c]
  419021:	fwait
  419022:	out    dx,al
  419023:	cmp    BYTE PTR [eax],bl
  419025:	jno    0x419009
  419027:	mov    cl,0x10
  419029:	push   ecx
  41902a:	mov    edi,0x6b1d119e
  41902f:	or     edi,eax
  419031:	sbb    ecx,DWORD PTR ds:0x1b0ae02
  419037:	lds    ebp,FWORD PTR [ecx]
  419039:	call   0x3bee:0x30b133c3
  419040:	hlt    
  419041:	mov    esp,0x26d0ed69
  419046:	push   es
  419047:	sbb    ebx,DWORD PTR [eax-0x20]
  41904a:	ins    BYTE PTR es:[edi],dx
  41904b:	sbb    eax,0xb01c8f73
  419050:	mov    eax,ds:0xb8f106da
  419055:	push   ebp
  419056:	mov    dl,0xd1
  419058:	cmp    eax,0xeb42e58d
  41905d:	push   ss
  41905e:	hlt    
  41905f:	std    
  419060:	push   edx
  419061:	hlt    
  419062:	xchg   BYTE PTR [ecx-0xc],bh
  419065:	lock imul esi,edx,0x3e276535
  41906c:	add    al,0xa
  41906e:	(bad)  
  41906f:	jnp    0x4190d4
  419071:	jecxz  0x419030
  419073:	sub    al,0x17
  419075:	add    esi,ebp
  419077:	ins    BYTE PTR es:[edi],dx
  419078:	div    BYTE PTR [edx+0x2b33c7b5]
  41907e:	je     0x4190c0
  419080:	ins    DWORD PTR es:[edi],dx
  419081:	lahf   
  419082:	mov    edx,ebp
  419084:	fwait
  419085:	push   es
  419086:	push   esi
  419087:	fnstcw WORD PTR [ebx-0x233fa7d3]
  41908d:	mov    ds:0x830f2052,al
  419092:	dec    edx
  419093:	faddp  st(1),st
  419095:	idiv   DWORD PTR [esi]
  419097:	loopne 0x4190ab
  419099:	add    dl,ah
  41909b:	mov    ?,WORD PTR [ecx]
  41909d:	push   eax
  41909e:	inc    ebp
  41909f:	sub    eax,0x37397684
  4190a4:	sub    al,0x7
  4190a6:	pop    ebx
  4190a7:	jg     0x419081
  4190a9:	leave  
  4190aa:	xor    dh,bh
  4190ac:	xchg   DWORD PTR [edx-0x6d],ebp
  4190af:	fisttp DWORD PTR [edi-0x68d5c639]
  4190b5:	ret    
  4190b6:	aaa    
  4190b7:	pushf  
  4190b8:	sub    DWORD PTR [edx+0x5c],esi
  4190bb:	push   edx
  4190bc:	push   ecx
  4190bd:	lds    edx,FWORD PTR ds:0x5e6d0529
  4190c3:	arpl   WORD PTR [esp+eiz*4],bp
  4190c6:	pop    ebx
  4190c7:	xchg   esi,ebx
  4190c9:	daa    
  4190ca:	xor    al,0xf4
  4190cc:	cmp    DWORD PTR [esp+ebx*1+0x2e],esi
  4190d0:	ret    
  4190d1:	mov    esp,0x9d915001
  4190d6:	ficomp WORD PTR [edi+0x1c0bc52d]
  4190dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190dd:	mov    esp,0x7446b854
  4190e2:	jns    0x419083
  4190e4:	push   esi
  4190e5:	imul   eax,DWORD PTR [edx+ebx*2],0x3c
  4190e9:	retf   0xcd46
  4190ec:	xor    eax,0x1fe9bb9
  4190f1:	(bad)  
  4190f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f4:	inc    esp
  4190f5:	(bad)  
  4190f6:	or     esi,DWORD PTR [edi+0x40]
  4190f9:	dec    ebp
  4190fa:	mov    al,0xe4
  4190fc:	sub    edi,DWORD PTR [ebx-0x517409ba]
  419102:	jbe    0x419127
  419104:	jb     0x4190e0
  419106:	lock and ecx,DWORD PTR [ecx-0x5]
  41910a:	in     al,0xcc
  41910c:	lds    edx,FWORD PTR [eax]
  41910e:	mov    ebx,0x346d7893
  419113:	xchg   ecx,eax
  419114:	xor    dh,BYTE PTR [ebx-0x6ce8849f]
  41911a:	push   edx
  41911b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911c:	fild   QWORD PTR [edi-0x50139627]
  419122:	scas   al,BYTE PTR es:[edi]
  419123:	aam    0x28
  419125:	sub    ah,ah
  419127:	mov    cl,0xdd
  419129:	mov    eax,ds:0x2c6a1997
  41912e:	popa   
  41912f:	popf   
  419130:	js     0x419136
  419132:	sbb    DWORD PTR [esp+ebx*8-0x63d697b],ebx
  419139:	loop   0x419117
  41913b:	les    esp,FWORD PTR [esi]
  41913d:	out    0xfc,eax
  41913f:	pop    DWORD PTR [esi-0x3f]
  419142:	xchg   ecx,eax
  419143:	fadd   QWORD PTR [edi+0x7d5208e5]
  419149:	jecxz  0x4190d1
  41914b:	xchg   esp,eax
  41914c:	xchg   ebx,eax
  41914d:	sahf   
  41914e:	mov    ds:0xb45e65d5,al
  419153:	cmp    cl,BYTE PTR [eax+0x68f02f4b]
  419159:	test   eax,0xd1e18f34
  41915e:	enter  0xe511,0xc8
  419162:	jbe    0x41914a
  419164:	ins    BYTE PTR es:[edi],dx
  419165:	push   cs
  419166:	scas   eax,DWORD PTR es:[edi]
  419167:	mov    BYTE PTR [esi-0x7a0b2e27],ah
  41916d:	xlat   BYTE PTR ds:[ebx]
  41916e:	cmp    BYTE PTR [ebx+eiz*8+0x2dcb1429],0xb1
  419176:	call   0x2c53:0x94b07a4
  41917d:	mov    bl,BYTE PTR [esi]
  41917f:	push   esp
  419180:	push   eax
  419181:	rol    DWORD PTR [esi],0x63
  419184:	imul   edx,DWORD PTR [edx-0x80],0xffffffc3
  419188:	sbb    dl,BYTE PTR [ebp-0x3a3abdf3]
  41918e:	adc    BYTE PTR [edx],bh
  419190:	leave  
  419191:	pop    DWORD PTR [edx+edx*1-0x50fb9bd9]
  419198:	ins    DWORD PTR es:[edi],dx
  419199:	out    0x16,al
  41919b:	pop    eax
  41919c:	mov    ecx,0x343db2b9
  4191a1:	mov    esi,0x4cd1097c
  4191a6:	mov    ds,WORD PTR [ecx]
  4191a8:	inc    esp
  4191a9:	shl    DWORD PTR [esi-0x677a03ff],1
  4191af:	mov    al,ds:0x3ec42d3b
  4191b4:	xor    al,0x8b
  4191b6:	jge    0x419157
  4191b8:	cmp    BYTE PTR [ecx],bl
  4191ba:	sub    BYTE PTR [ebx+0x58],al
  4191bd:	inc    eax
  4191be:	aam    0x9c
  4191c0:	push   ds
  4191c1:	test   al,0x53
  4191c3:	push   ds
  4191c4:	loop   0x41923d
  4191c6:	fwait
  4191c7:	and    eax,DWORD PTR [esi+0x62]
  4191ca:	jmp    0x419231
  4191cc:	adc    eax,0xdfe6e6f4
  4191d1:	stc    
  4191d2:	lods   al,BYTE PTR ds:[esi]
  4191d3:	dec    edi
  4191d4:	cmp    al,al
  4191d6:	inc    esi
  4191d7:	xor    al,0x80
  4191d9:	or     DWORD PTR [edx+0xb715f1],edx
  4191df:	ret    
  4191e0:	pop    ebx
  4191e1:	sub    al,0xd
  4191e3:	inc    ebp
  4191e4:	outs   dx,BYTE PTR ds:[esi]
  4191e5:	pop    ebx
  4191e6:	mov    ds:0xa9413060,al
  4191eb:	push   ds
  4191ec:	(bad)  
  4191ee:	retf   0x5dda
  4191f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f2:	(bad)  
  4191f3:	daa    
  4191f4:	xor    eax,0x95bbc0ba
  4191f9:	xor    eax,esp
  4191fb:	xchg   ebx,eax
  4191fc:	sub    eax,0xf5680e24
  419201:	jb     0x41920f
  419203:	cmp    eax,0x5472ce38
  419208:	push   0xbfb0d3b2
  41920d:	sbb    esp,DWORD PTR [edi+esi*2+0x2da13385]
  419214:	das    
  419215:	cmp    bl,cl
  419217:	rcr    cl,1
  419219:	jge    0x4191fd
  41921b:	push   eax
  41921c:	push   ds
  41921d:	sbb    ebp,edx
  41921f:	fisub  DWORD PTR [ebx]
  419221:	bnd ja 0x4191d2
  419224:	pop    esp
  419225:	mov    cl,0xc9
  419227:	sbb    DWORD PTR [eax+0x13],ebp
  41922a:	retf   
  41922b:	mov    ds:0xd02fd667,al
  419230:	xchg   BYTE PTR [ebx+0x18],al
  419233:	cld    
  419234:	adc    BYTE PTR [edi+eiz*8+0x1d],0xcd
  419239:	enter  0x8d0e,0xcc
  41923d:	or     BYTE PTR [ebp+0x2],cl
  419240:	addr16 dec ecx
  419242:	ins    BYTE PTR es:[edi],dx
  419243:	push   ds
  419244:	xlat   BYTE PTR ds:[ebx]
  419245:	mov    ch,dh
  419247:	push   cs
  419248:	sbb    cl,BYTE PTR [edx+0xb]
  41924b:	enter  0x1db8,0xb5
  41924f:	cmp    ah,BYTE PTR [ecx+0x67]
  419252:	add    ebp,esi
  419254:	mov    eax,ds:0x9e3114cb
  419259:	pushf  
  41925a:	pop    edi
  41925b:	cwde   
  41925c:	mov    esp,0x6f6121f4
  419261:	mov    esp,0xf304c8ca
  419266:	xchg   ebx,eax
  419267:	cmp    eax,DWORD PTR [eax-0x12]
  41926a:	in     eax,dx
  41926b:	and    DWORD PTR [ebx-0xe],edi
  41926e:	push   cs
  41926f:	aas    
  419270:	(bad)  
  419271:	xor    eax,0x4eb5eaf9
  419276:	xchg   ecx,eax
  419277:	retf   0x758e
  41927a:	pusha  
  41927b:	and    BYTE PTR [ecx-0x79],0xcb
  41927f:	loop   0x419291
  419281:	retf   0xdd5b
  419284:	lods   eax,DWORD PTR ds:[esi]
  419285:	xor    DWORD PTR [ebx+0x190cb351],0x2a51f372
  41928f:	mov    BYTE PTR [esi+0x11],cl
  419292:	cmc    
  419293:	xchg   edx,eax
  419294:	arpl   WORD PTR [edx],si
  419296:	ins    DWORD PTR es:[edi],dx
  419297:	rcl    DWORD PTR [ebx+eiz*1+0x71fa4ed3],cl
  41929e:	lahf   
  41929f:	out    dx,al
  4192a0:	loop   0x41925d
  4192a2:	fwait
  4192a3:	sbb    eax,0x9f4afc0
  4192a8:	idiv   DWORD PTR [edi+0x2ee794b0]
  4192ae:	test   ah,0xe6
  4192b1:	call   0x66a8:0xd7f42aa0
  4192b8:	pop    ebp
  4192b9:	mov    DWORD PTR [eax],ecx
  4192bb:	adc    DWORD PTR [edi],esp
  4192bd:	xchg   esi,eax
  4192be:	xchg   ebx,eax
  4192bf:	fdivr  DWORD PTR [ecx+ebp*1+0x74c0a79c]
  4192c6:	jno    0x419285
  4192c8:	dec    edi
  4192c9:	xor    BYTE PTR [esi],cl
  4192cb:	cwde   
  4192cc:	std    
  4192cd:	(bad)  
  4192ce:	ret    
  4192cf:	sar    BYTE PTR [ecx+0x681cdf8e],cl
  4192d5:	xchg   edx,eax
  4192d6:	lea    ebx,[esi]
  4192d8:	sbb    dl,al
  4192da:	ficomp DWORD PTR [ecx+0x37]
  4192dd:	loop   0x4192d6
  4192df:	jo     0x419271
  4192e1:	aam    0xf
  4192e3:	xchg   ebx,eax
  4192e4:	data16 add BYTE PTR [ebx],dh
  4192e7:	inc    ebp
  4192e8:	xchg   esi,eax
  4192e9:	mov    ds:0x7855f79d,eax
  4192ee:	and    BYTE PTR [edx-0x25e10f64],0xa0
  4192f5:	jecxz  0x41931d
  4192f7:	das    
  4192f8:	push   0x554df336
  4192fd:	jns    0x419355
  4192ff:	into   
  419300:	retf   
  419301:	inc    ebx
  419302:	ficomp WORD PTR [edx]
  419304:	cmp    eax,0x4a386427
  419309:	inc    ebp
  41930a:	jo     0x41933f
  41930c:	push   ebx
  41930d:	inc    edi
  41930e:	xchg   esp,eax
  41930f:	and    al,0x6c
  419311:	cwde   
  419312:	test   eax,0x8f78a021
  419317:	jno    0x4192ff
  419319:	hlt    
  41931a:	pop    edx
  41931b:	nop
  41931c:	adc    edx,DWORD PTR [ebx-0x5c1f2fcd]
  419322:	pop    edi
  419323:	repz push ebp
  419325:	mov    dh,0xb7
  419327:	js     0x4192ba
  419329:	mov    esp,0xdea21d73
  41932e:	aas    
  41932f:	xchg   ecx,eax
  419330:	loop   0x419367
  419332:	test   DWORD PTR ds:0xda019aac,0xc8dfaef
  41933c:	dec    edi
  41933d:	in     eax,0x18
  41933f:	mov    WORD PTR [edx],cs
  419341:	or     BYTE PTR [ecx+0x3a],dh
  419344:	rcl    DWORD PTR [esi],0xf9
  419347:	push   eax
  419348:	dec    esp
  419349:	jl     0x419370
  41934b:	inc    edi
  41934c:	jae    0x419316
  41934e:	imul   edi,DWORD PTR [ebp-0x3e],0x694066f8
  419355:	mov    al,ds:0x980453ff
  41935a:	imul   esi,DWORD PTR ss:[edx-0x43],0xffffffcd
  41935f:	push   eax
  419360:	dec    edx
  419361:	(bad)  [edx-0x58070909]
  419367:	test   dh,dl
  419369:	das    
  41936a:	mov    eax,ds:0xc33bb134
  41936f:	sub    bh,al
  419371:	imul   esp,ebx,0xf3f7cd2d
  419377:	push   cs
  419378:	rcl    BYTE PTR [edx+0x2fbc8bde],1
  41937e:	mov    edx,0xf1685606
  419383:	mov    edi,0x5964321c
  419388:	ficom  WORD PTR [esi-0x6e]
  41938b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41938c:	mov    bh,0x36
  41938e:	mov    al,ds:0xf7c138ba
  419393:	jbe    0x419410
  419395:	sub    eax,0x44a0882c
  41939a:	fidivr WORD PTR [eax+0x51dbda56]
  4193a0:	or     dh,BYTE PTR [esi]
  4193a2:	pop    edi
  4193a3:	sub    esp,0xffffffd8
  4193a6:	mov    al,0x44
  4193a8:	out    dx,eax
  4193a9:	xchg   BYTE PTR [ecx-0x65],cl
  4193ac:	fmul   QWORD PTR [eax]
  4193ae:	push   esp
  4193af:	imul   esp,DWORD PTR [ebx+0x3c],0xa7f80a88
  4193b6:	sub    BYTE PTR [edx-0x11],ah
  4193b9:	mov    dh,cl
  4193bb:	xchg   ecx,eax
  4193bc:	xor    BYTE PTR [ecx],0xf0
  4193bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c0:	into   
  4193c1:	cli    
  4193c2:	shr    DWORD PTR [edx+0x54606fb4],1
  4193c8:	cdq    
  4193c9:	mov    bl,0xd9
  4193cb:	loopne 0x4193d8
  4193cd:	ficomp DWORD PTR [esi+0x9]
  4193d0:	arpl   cx,bp
  4193d2:	xchg   DWORD PTR [esi+0x76f963d],ebp
  4193d8:	sahf   
  4193d9:	or     ch,dl
  4193db:	xchg   BYTE PTR [edi+0x46b1c441],dl
  4193e1:	cwde   
  4193e2:	mov    ds:0x8ee3b4a1,al
  4193e7:	pop    esi
  4193e8:	sub    BYTE PTR [ebx],0x6c
  4193eb:	int    0x77
  4193ed:	les    ebp,FWORD PTR [ebx+eiz*2+0x44896c1d]
  4193f4:	pushf  
  4193f5:	jnp    0x41940f
  4193f7:	outs   dx,BYTE PTR ds:[esi]
  4193f8:	mul    DWORD PTR [edx+0x2f230419]
  4193fe:	fnstsw WORD PTR [ecx+0x39]
  419401:	jp     0x4193e2
  419403:	cld    
  419404:	mov    bh,0x66
  419406:	sbb    DWORD PTR [ebx+0x49592c68],esi
  41940c:	out    0x1f,eax
  41940e:	ss icebp 
  419410:	pop    ecx
  419411:	sbb    ecx,edi
  419413:	sbb    edx,DWORD PTR gs:[eax]
  419416:	ret    0xa97
  419419:	leave  
  41941a:	int3   
  41941b:	jb     0x419441
  41941d:	ret    0x20c5
  419420:	pop    eax
  419421:	pop    eax
  419422:	xor    eax,0xf9a4037f
  419427:	xchg   esi,eax
  419428:	call   ebx
  41942a:	pop    ds
  41942b:	mov    edx,0x568a313f
  419430:	push   0xd4d98587
  419435:	fsub   st,st(7)
  419437:	jb     0x419429
  419439:	in     al,0x92
  41943b:	sub    DWORD PTR [ecx+0x7c],ebx
  41943e:	and    DWORD PTR [edi+0x751c28ee],0x58628f19
  419448:	adc    al,0xee
  41944a:	scas   eax,DWORD PTR es:[edi]
  41944b:	int    0x90
  41944d:	aaa    
  41944e:	mov    ecx,0xdad69349
  419453:	shl    BYTE PTR [eax-0x787f36ac],cl
  419459:	or     al,BYTE PTR [ebx+0x4cf81033]
  41945f:	lds    edx,FWORD PTR [esi]
  419461:	bnd jmp 0xcd08f982
  419467:	arpl   WORD PTR [edi-0x78],bx
  41946a:	rep es stos BYTE PTR es:[edi],al
  41946d:	mov    bl,dl
  41946f:	rcr    BYTE PTR [ebx],cl
  419471:	imul   ecx,DWORD PTR [esi+ecx*1+0x76],0x317b37ec
  419479:	sahf   
  41947a:	jg     0x4194bd
  41947c:	aaa    
  41947d:	dec    ecx
  41947e:	lea    edi,[ebx]
  419480:	add    eax,0x9c2b65df
  419485:	jnp    0x41943b
  419487:	mov    DWORD PTR [edx],esp
  419489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41948a:	stc    
  41948b:	sub    ah,BYTE PTR [ecx]
  41948d:	jb     0x41942f
  41948f:	cmp    bl,dl
  419491:	dec    eax
  419492:	out    0xb2,eax
  419494:	lods   eax,DWORD PTR ds:[esi]
  419495:	call   0x15e14a23
  41949a:	and    dh,BYTE PTR [ebp+0x31]
  41949d:	push   es
  41949e:	push   es
  41949f:	sub    eax,0x2ce96b13
  4194a4:	aaa    
  4194a5:	sahf   
  4194a6:	inc    edx
  4194a7:	dec    esi
  4194a8:	(bad)  
  4194a9:	add    DWORD PTR [ecx+0xc4c049d],esp
  4194af:	popf   
  4194b0:	add    ah,BYTE PTR [ebx+edi*4+0x6a670d36]
  4194b7:	aas    
  4194b8:	into   
  4194b9:	cmp    DWORD PTR [eax-0x599a06d0],edx
  4194bf:	push   esp
  4194c0:	inc    esp
  4194c1:	dec    edx
  4194c2:	dec    esi
  4194c3:	iret   
  4194c4:	mov    dl,0x4b
  4194c6:	xchg   edx,eax
  4194c7:	retf   
  4194c8:	mov    eax,ds:0x4b50f90f
  4194cd:	and    ch,bh
  4194cf:	jns    0x419503
  4194d1:	data16 cmp dl,BYTE PTR [ecx-0x53]
  4194d5:	shr    BYTE PTR [eax],0x2b
  4194d8:	in     eax,dx
  4194d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194da:	adc    cl,BYTE PTR [ecx+ecx*2]
  4194dd:	loope  0x4194a4
  4194df:	(bad)  
  4194e0:	clc    
  4194e1:	push   es
  4194e2:	xchg   al,al
  4194e4:	fwait
  4194e5:	mov    ch,0xab
  4194e7:	jmp    0x41951e
  4194e9:	daa    
  4194ea:	shl    BYTE PTR [edx],1
  4194ec:	jbe    0x4194d0
  4194ee:	xlat   BYTE PTR ds:[ebx]
  4194ef:	test   al,0x12
  4194f1:	mov    ds:0x593ff7e9,al
  4194f6:	xchg   ecx,eax
  4194f7:	jge    0x41956d
  4194f9:	add    al,0x6a
  4194fb:	bound  eax,QWORD PTR [edx-0x67]
  4194fe:	sub    dl,BYTE PTR [ecx+0x4d3b4762]
  419504:	outs   dx,DWORD PTR ds:[esi]
  419505:	sbb    BYTE PTR [edi-0x48],ch
  419508:	aam    0x2b
  41950a:	pop    ds
  41950b:	sbb    eax,0x7cdfde4
  419510:	mov    ds:0xf369140b,eax
  419515:	loopne 0x419508
  419517:	sar    DWORD PTR [ebx-0x3bc8a11a],1
  41951d:	in     al,dx
  41951e:	aad    0x41
  419520:	mov    edx,0x3a45095f
  419525:	dec    eax
  419526:	hlt    
  419527:	sbb    BYTE PTR [esi-0x54cd69d4],bl
  41952d:	xor    BYTE PTR [edx],dl
  41952f:	mov    ds:0xa586f449,al
  419534:	ror    eax,cl
  419536:	xchg   ebp,eax
  419537:	mov    ah,0x1e
  419539:	rcr    DWORD PTR [ebp-0x6da955a],0xce
  419540:	mov    cs,WORD PTR [edx-0x10e2bc25]
  419546:	pop    ebp
  419547:	sub    eax,0xe1cca36a
  41954c:	ins    BYTE PTR es:[edi],dx
  41954d:	push   cs
  41954e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41954f:	mov    bh,0x12
  419551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419552:	xor    bh,BYTE PTR [esi-0x5b]
  419555:	ds sub al,0x99
  419558:	cmp    DWORD PTR [ebx],ecx
  41955a:	push   ebx
  41955b:	or     ebp,DWORD PTR [esi+0x2e]
  41955e:	(bad)  
  419560:	mov    ebx,ss
  419562:	mov    ecx,0x5a4dc182
  419567:	enter  0xb623,0xcf
  41956b:	pushf  
  41956c:	fld    st(1)
  41956e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41956f:	xor    esi,ebx
  419571:	push   eax
  419572:	popa   
  419573:	mov    eax,ds:0xb0195440
  419578:	add    dl,BYTE PTR ds:[edi-0xf]
  41957c:	xchg   al,cl
  41957e:	data16 das 
  419580:	adc    ebp,DWORD PTR [eax]
  419582:	sbb    al,0xe1
  419584:	ret    
  419585:	es sbb esi,eax
  419588:	adc    DWORD PTR [ebp+0x54],ecx
  41958b:	daa    
  41958c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41958d:	sbb    cl,dl
  41958f:	push   ecx
  419590:	push   ebp
  419591:	rcl    DWORD PTR [esi+ecx*4+0x52],1
  419595:	inc    edi
  419596:	xor    DWORD PTR [ebx+0x4d],ebp
  419599:	cdq    
  41959a:	mov    esi,0x5f2cadb2
  41959f:	push   0xffffffb7
  4195a1:	or     esp,eax
  4195a3:	js     0x419595
  4195a5:	(bad)  
  4195a6:	fnstenv [esi+0x4b]
  4195a9:	loop   0x419569
  4195ab:	add    esp,0xf917f6b
  4195b1:	adc    edx,DWORD PTR [edx+0x3e]
  4195b4:	shl    BYTE PTR [ecx+ecx*4],cl
  4195b7:	inc    BYTE PTR ds:0xb20a5ed0
  4195bd:	adc    eax,0xc3adb874
  4195c2:	aam    0x6a
  4195c4:	loope  0x4195fa
  4195c6:	add    bh,BYTE PTR [esi]
  4195c8:	push   esi
  4195c9:	jg     0x419632
  4195cb:	outs   dx,DWORD PTR ds:[esi]
  4195cc:	mov    esi,0x573af3d1
  4195d1:	lds    edx,FWORD PTR [ebx+edx*2]
  4195d4:	shl    BYTE PTR ds:[ecx-0x22d93506],cl
  4195db:	or     BYTE PTR [edx-0x2bbfa3eb],bl
  4195e1:	fld    QWORD PTR [eax]
  4195e3:	xchg   esp,eax
  4195e4:	rol    BYTE PTR [edi+0x23],0x48
  4195e8:	sub    esi,ecx
  4195ea:	cdq    
  4195eb:	mov    ah,0x9f
  4195ed:	fcmovbe st,st(7)
  4195ef:	inc    esi
  4195f0:	jnp    0x419592
  4195f2:	add    esp,esi
  4195f4:	xchg   DWORD PTR [eax-0x40b5cd90],eax
  4195fa:	mov    dh,0x73
  4195fc:	scas   eax,DWORD PTR es:[edi]
  4195fd:	cmp    DWORD PTR [eax],ebp
  4195ff:	cli    
  419600:	and    edx,DWORD PTR [edx-0x7d]
  419603:	jae    0x41959c
  419605:	cdq    
  419606:	mov    ebp,ebx
  419608:	pop    DWORD PTR [edx-0x27]
  41960b:	es mov al,0xc
  41960e:	add    DWORD PTR [ebx+edx*1],ecx
  419611:	mov    ah,0x65
  419613:	jb     0x4195a7
  419615:	push   ebp
  419616:	jp     0x4195ef
  419618:	shr    esi,0xe8
  41961b:	lahf   
  41961c:	dec    esp
  41961d:	cdq    
  41961e:	div    DWORD PTR [edx+edi*2+0x651ef41d]
  419625:	mov    ebx,0x3b0229e2
  41962a:	inc    esi
  41962b:	xor    eax,0x21b41677
  419630:	(bad)  
  419631:	std    
  419632:	cs jae 0x419647
  419635:	jecxz  0x4195f5
  419637:	scas   eax,DWORD PTR es:[edi]
  419638:	and    ebp,DWORD PTR [ebp+0x455dd347]
  41963e:	sub    eax,0xbdca6778
  419643:	push   ss
  419644:	cmp    eax,0x3ae1d1d2
  419649:	int3   
  41964a:	iret   
  41964b:	stos   DWORD PTR es:[edi],eax
  41964c:	inc    ebx
  41964d:	inc    esi
  41964e:	shl    DWORD PTR ds:0xd2f680ed,cl
  419654:	stos   BYTE PTR es:[edi],al
  419655:	mov    al,0x85
  419657:	inc    eax
  419658:	inc    edi
  419659:	inc    esi
  41965a:	push   es
  41965b:	pop    eax
  41965c:	dec    ecx
  41965d:	mov    bl,0x34
  41965f:	mov    ebp,DWORD PTR [eax]
  419661:	sbb    eax,0x1852c92a
  419666:	xchg   cl,cl
  419668:	sub    BYTE PTR [ecx],ch
  41966a:	push   eax
  41966b:	cdq    
  41966c:	(bad)  
  41966d:	lock mov ebx,0xfe9df4c9
  419673:	(bad)
  419676:	ror    BYTE PTR [ecx+0x2a19a0ab],1
  41967c:	push   ebx
  41967d:	enter  0x3784,0x26
  419681:	and    DWORD PTR [edx+0x7e842cff],ecx
  419687:	jbe    0x41960f
  419689:	mov    ecx,DWORD PTR [ebp+0x5ba39a9b]
  41968f:	test   DWORD PTR [eax],edx
  419691:	push   ecx
  419692:	jbe    0x41966d
  419694:	jns    0x419671
  419696:	(bad)  
  419698:	popa   
  419699:	cmp    BYTE PTR fs:[ecx],bl
  41969c:	stos   BYTE PTR es:[edi],al
  41969d:	mov    ecx,0x912ef3a6
  4196a2:	sub    ebp,DWORD PTR [ebp+edi*4+0x3f]
  4196a6:	add    al,0xff
  4196a8:	mov    ds:0xe33c8f2b,eax
  4196ad:	ja     0x41970e
  4196af:	fs dec edi
  4196b1:	test   DWORD PTR [edx+esi*2],ebp
  4196b4:	int3   
  4196b5:	and    al,0x65
  4196b7:	pop    ebp
  4196b8:	and    al,0x49
  4196ba:	rol    BYTE PTR [edi-0x37f21718],1
  4196c0:	xchg   edx,eax
  4196c1:	sbb    bl,BYTE PTR [ebx-0x58]
  4196c4:	dec    ebx
  4196c5:	arpl   dx,si
  4196c7:	in     eax,dx
  4196c8:	ss loop 0x419668
  4196cb:	test   BYTE PTR [ebx],0x5c
  4196ce:	or     al,0xd6
  4196d0:	jg     0x41965d
  4196d2:	cmp    al,0xa7
  4196d4:	pop    edi
  4196d5:	and    al,0xd0
  4196d7:	sti    
  4196d8:	cmp    BYTE PTR [edi+0x8d0865a],al
  4196de:	mov    ds:0x476fc5c3,al
  4196e3:	outs   dx,BYTE PTR ds:[esi]
  4196e4:	sub    eax,0x83cf6f96
  4196e9:	and    BYTE PTR ds:0x65bf0c3a,al
  4196ef:	ins    BYTE PTR es:[edi],dx
  4196f0:	push   cs
  4196f1:	sub    BYTE PTR [ebx+edx*4-0x1c],0x57
  4196f6:	scas   al,BYTE PTR es:[edi]
  4196f7:	int    0x9e
  4196f9:	mov    bl,0x5c
  4196fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196fc:	or     DWORD PTR [eax-0x14f59181],ebx
  419702:	retf   
  419703:	clc    
  419704:	ss pop es
  419706:	cmp    al,0x71
  419708:	mov    esi,0xfc01757a
  41970d:	adc    BYTE PTR [ebx],0x8d
  419710:	loope  0x419704
  419712:	addr16 loope 0x41977a
  419715:	stc    
  419716:	mov    eax,ss
  419718:	(bad)  
  419719:	js     0x4196c7
  41971b:	es push cs
  41971d:	dec    esi
  41971e:	inc    ebp
  41971f:	xlat   BYTE PTR ds:[ebx]
  419720:	inc    edi
  419721:	cmp    BYTE PTR [edi+ebp*1+0x656a53ef],dl
  419728:	ins    BYTE PTR es:[edi],dx
  419729:	adc    al,0x60
  41972b:	(bad)  [esi]
  41972d:	or     ah,ah
  41972f:	dec    edi
  419730:	lods   al,BYTE PTR ds:[esi]
  419731:	adc    eax,0xb7a82a9e
  419736:	xor    dh,bh
  419738:	pop    ds
  419739:	fadd   QWORD PTR [eax+0x1c779cf6]
  41973f:	mov    ebp,0xe8bdecff
  419744:	loop   0x419762
  419746:	mov    bl,0x4c
  419748:	xlat   BYTE PTR ds:[ebx]
  419749:	xchg   DWORD PTR [edi-0x2d],esi
  41974c:	mov    ds:0x96293809,al
  419751:	and    eax,0x64219e9d
  419756:	pop    esp
  419757:	jge    0x41973a
  419759:	wbinvd 
  41975b:	pop    ebp
  41975c:	jmp    0x419790
  41975e:	icebp  
  41975f:	retf   
  419760:	push   esp
  419761:	pop    ebx
  419762:	stos   DWORD PTR es:[edi],eax
  419763:	in     eax,dx
  419764:	or     ah,BYTE PTR [ecx+edi*1+0x30f3da99]
  41976b:	ins    DWORD PTR es:[edi],dx
  41976c:	out    0xbc,al
  41976e:	dec    esi
  41976f:	xor    DWORD PTR [ebp+edi*4-0xcbf3568],ebx
  419776:	pop    eax
  419777:	inc    eax
  419778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419779:	mov    esi,0xe91b07f6
  41977e:	arpl   WORD PTR [eax+esi*1+0x54],si
  419782:	ret    
  419783:	jmp    0xc7fde9be
  419788:	icebp  
  419789:	mov    ebx,0x5da63b2a
  41978e:	add    al,0x16
  419790:	jl     0x41972a
  419792:	adc    DWORD PTR [ecx*4-0x1a524750],ebp
  419799:	lods   eax,DWORD PTR fs:[esi]
  41979b:	dec    edx
  41979c:	xchg   edi,eax
  41979d:	inc    ebp
  41979e:	rcr    BYTE PTR [ebp+0x26],1
  4197a1:	lods   al,BYTE PTR ds:[esi]
  4197a2:	xchg   ecx,eax
  4197a3:	jns    0x4197d0
  4197a5:	jl     0x4197a0
  4197a7:	sbb    BYTE PTR [edx+0x43],bh
  4197aa:	push   0x2dfaad04
  4197af:	bnd jl 0x419734
  4197b2:	mov    ds:0x15ae5009,al
  4197b7:	mov    ebx,0x110bcc12
  4197bc:	pop    ecx
  4197bd:	das    
  4197be:	cli    
  4197bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c0:	pop    esi
  4197c1:	ror    DWORD PTR [eax-0x21],1
  4197c4:	(bad)  
  4197c5:	xchg   ebp,eax
  4197c6:	test   DWORD PTR [edi],ebx
  4197c8:	sbb    edx,edi
  4197ca:	mov    ds:0x5da3f00f,al
  4197cf:	push   ebx
  4197d0:	push   esi
  4197d1:	or     cl,BYTE PTR [edi-0x1a]
  4197d4:	int3   
  4197d5:	cmp    al,0xcc
  4197d7:	xor    al,0xc0
  4197d9:	pusha  
  4197da:	repnz mov esp,0xdf6d6d3c
  4197e0:	jg     0x4197ad
  4197e2:	cld    
  4197e3:	inc    edi
  4197e4:	mov    ch,0xe8
  4197e6:	adc    al,0x6f
  4197e8:	stc    
  4197e9:	push   ss
  4197ea:	loopne 0x41979e
  4197ec:	push   esp
  4197ed:	add    BYTE PTR [esi-0x1f],al
  4197f0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f2:	imul   ecx,eax,0xdd56f353
  4197f8:	cmp    DWORD PTR [ecx-0x2b],0xffffffbe
  4197fc:	mov    ds:0x953f0101,eax
  419801:	(bad)  
  419802:	xor    esp,DWORD PTR [edx+ebp*4]
  419805:	dec    ecx
  419806:	add    bl,BYTE PTR ds:0x58e17881
  41980c:	hlt    
  41980d:	loope  0x419886
  41980f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419810:	add    esi,DWORD PTR [esi]
  419812:	fdiv   QWORD PTR [eax-0x3d2f184e]
  419818:	loopne 0x4197b2
  41981a:	xchg   esp,eax
  41981b:	repnz sub esi,DWORD PTR [ebx-0x651bb3fc]
  419822:	dec    esp
  419823:	mov    bh,ch
  419825:	pop    eax
  419826:	(bad)  
  419827:	adc    al,0x76
  419829:	jo     0x419833
  41982b:	xchg   ecx,eax
  41982c:	dec    dx
  41982e:	das    
  41982f:	icebp  
  419830:	sub    BYTE PTR [edi+0x72d175b2],bl
  419836:	xor    eax,0x52205d3a
  41983b:	es cdq 
  41983d:	aam    0x13
  41983f:	fwait
  419840:	clc    
  419841:	xor    al,0xfc
  419843:	into   
  419844:	icebp  
  419845:	pop    ss
  419846:	call   FWORD PTR [esi+0x51]
  419849:	cmp    DWORD PTR [edx],eax
  41984b:	ror    ebp,0xa6
  41984e:	fdivr  DWORD PTR [edx-0x7e372d9b]
  419854:	sub    eax,0xddca24b5
  419859:	push   esi
  41985a:	leave  
  41985b:	adc    eax,edi
  41985d:	push   cs
  41985e:	mov    ds:0x102a0a09,al
  419863:	adc    bl,BYTE PTR [edx]
  419865:	adc    eax,0xd84d0be5
  41986a:	mov    edi,0x7b2c08
  41986f:	adc    eax,0x17d49394
  419874:	cs in  eax,0x34
  419877:	mov    ebx,DWORD PTR [esi]
  419879:	mov    bl,0x26
  41987b:	xchg   DWORD PTR [esi+0x60],edx
  41987e:	xor    ecx,ecx
  419880:	imul   ebp,DWORD PTR [edx+edx*8-0x40],0xee2cce2
  419888:	(bad)  
  419889:	jnp    0x4198a4
  41988b:	pop    ss
  41988c:	mov    esi,0xa67d0b13
  419891:	dec    eax
  419892:	xchg   edx,eax
  419893:	test   DWORD PTR [ebx],ebx
  419895:	(bad)  
  419896:	cmp    WORD PTR [edi-0x3d270228],si
  41989d:	pop    esi
  41989e:	scas   eax,DWORD PTR es:[edi]
  41989f:	cmp    DWORD PTR [ebp+0x5b],edx
  4198a2:	sub    eax,0x72b20358
  4198a7:	jo     0x4198d3
  4198a9:	mov    esi,0x4257ed82
  4198ae:	push   cs
  4198af:	(bad)  
  4198b0:	(bad)  
  4198b1:	out    0x5d,eax
  4198b3:	pop    eax
  4198b4:	cmp    BYTE PTR [ebx+0x2a40ca2],dh
  4198ba:	jno    0x4198a4
  4198bc:	(bad)
  4198c1:	hlt    
  4198c2:	dec    esp
  4198c3:	push   ebx
  4198c4:	in     eax,0x7f
  4198c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c7:	(bad)  
  4198c8:	in     eax,dx
  4198c9:	cli    
  4198ca:	cmp    eax,0xafb8ba8e
  4198cf:	cmp    eax,0x449f4942
  4198d4:	bound  esi,QWORD PTR [ecx+0x584e831c]
  4198da:	mov    bh,0xaf
  4198dc:	test   al,0xc3
  4198de:	mov    al,ds:0x259d3b92
  4198e3:	in     eax,dx
  4198e4:	mov    ebx,0x6603d3f2
  4198e9:	adc    eax,0x58948a39
  4198ee:	outs   dx,DWORD PTR ds:[esi]
  4198ef:	mov    dh,0xc7
  4198f1:	cld    
  4198f2:	out    0xfd,al
  4198f4:	and    al,0xcc
  4198f6:	(bad)  
  4198f7:	fidiv  DWORD PTR [edi+0x2c]
  4198fa:	sbb    esp,DWORD PTR [bx]
  4198fd:	dec    esp
  4198fe:	inc    ebp
  4198ff:	jae    0x4198b1
  419901:	add    ebx,DWORD PTR [eax+0x17]
  419904:	stc    
  419905:	repnz push ebx
  419907:	into   
  419908:	push   esp
  419909:	cmp    al,0x11
  41990b:	ror    DWORD PTR [ebx+0x8ce2625],cl
  419911:	lahf   
  419912:	mov    WORD PTR [edx-0x41773c31],?
  419918:	test   al,0x1e
  41991a:	and    al,0xf
  41991c:	dec    ecx
  41991d:	inc    esp
  41991e:	loop   0x419932
  419920:	push   ebp
  419921:	sbb    DWORD PTR [edi],esi
  419923:	xchg   esp,eax
  419924:	and    bl,BYTE PTR [ebx-0x5c]
  419927:	xchg   esi,eax
  419928:	call   0x9080fb0f
  41992d:	sbb    DWORD PTR ds:0x750cde7b,eax
  419933:	fcom   DWORD PTR [ebx-0x32]
  419936:	fldenv [eax+0x2ef23fbb]
  41993c:	add    BYTE PTR [ebp+0x4d],ah
  41993f:	cwde   
  419940:	add    DWORD PTR fs:[edi-0x1000d1ff],0x3136fcc
  41994b:	(bad)  
  41994c:	mov    esi,0xc2a12f7b
  419951:	hlt    
  419952:	pop    esi
  419953:	mov    cl,0x3c
  419955:	cwde   
  419956:	xchg   DWORD PTR [ebx+0x402d745c],edi
  41995c:	jb     0x4198e6
  41995e:	retf   0x2163
  419961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419962:	(bad)  
  419963:	mov    esp,0x825f9cd
  419968:	xchg   edi,eax
  419969:	xor    ah,BYTE PTR [ecx-0x7f77143f]
  41996f:	loopne 0x4198f8
  419971:	xchg   ecx,eax
  419972:	mov    ds:0xccd97df3,al
  419977:	out    dx,eax
  419978:	or     ebp,esp
  41997a:	mov    ecx,0x43b74591
  41997f:	sbb    BYTE PTR ds:0xf634dba2,dh
  419985:	push   0x4a
  419987:	adc    dh,dh
  419989:	shl    DWORD PTR [esi-0x5ae4856f],cl
  41998f:	add    al,0x3e
  419991:	sub    ah,BYTE PTR ds:0xbc4ddd20
  419997:	lahf   
  419998:	or     esp,DWORD PTR [ebx]
  41999a:	ret    0x6237
  41999d:	jmp    0xe67:0x70f1b651
  4199a4:	xchg   ebx,eax
  4199a5:	push   eax
  4199a6:	inc    ebp
  4199a7:	pop    es
  4199a8:	inc    ebx
  4199a9:	and    al,0x8e
  4199ab:	shl    BYTE PTR [eax-0x36],0x34
  4199af:	xchg   DWORD PTR [edx-0x5ba28769],eax
  4199b5:	mov    dh,ch
  4199b7:	mov    ebp,0x8bc02110
  4199bc:	lods   eax,DWORD PTR ds:[esi]
  4199bd:	xchg   ebx,eax
  4199be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199bf:	jne    0x419956
  4199c1:	sbb    ecx,DWORD PTR [eax+0x14]
  4199c4:	fadd   QWORD PTR [esi-0x2a]
  4199c7:	nop
  4199c8:	imul   esi,esi,0xffffffaf
  4199cb:	scas   al,BYTE PTR es:[edi]
  4199cc:	test   al,0xf1
  4199ce:	mov    eax,0x85073b75
  4199d3:	dec    DWORD PTR [ebx-0x512d0a80]
  4199d9:	pop    esp
  4199da:	xchg   ecx,eax
  4199db:	sbb    eax,0xbfa55f8f
  4199e0:	xchg   BYTE PTR [ebp-0x4f450314],bl
  4199e6:	xor    DWORD PTR [eax+ecx*1-0x33],esi
  4199ea:	cdq    
  4199eb:	push   ss
  4199ec:	aaa    
  4199ed:	lods   eax,DWORD PTR ds:[esi]
  4199ee:	lock mov dl,0x35
  4199f1:	mov    ds:0x1141a784,eax
  4199f6:	sbb    BYTE PTR [eax],ch
  4199f8:	daa    
  4199f9:	xchg   ecx,eax
  4199fa:	mov    eax,ds:0x305e4c81
  4199ff:	pop    ds
  419a00:	repnz stos DWORD PTR es:[edi],eax
  419a02:	dec    eax
  419a03:	mov    WORD PTR [ecx],?
  419a05:	pushf  
  419a06:	pop    eax
  419a07:	cmp    BYTE PTR [ebx],bh
  419a09:	aas    
  419a0a:	push   ds
  419a0b:	jmp    0x419a28
  419a0d:	lahf   
  419a0e:	call   0x5c3c403e
  419a13:	lods   eax,DWORD PTR ds:[esi]
  419a14:	adc    eax,0x411bf010
  419a19:	mov    dl,0xf1
  419a1b:	mov    al,ds:0x415e4875
  419a20:	pop    ds
  419a21:	pushf  
  419a22:	cmp    al,0x4d
  419a24:	mov    cs,WORD PTR [ebx]
  419a26:	sub    BYTE PTR [ebx+0xe216f86],0x87
  419a2d:	call   0x9ab0:0xc2946bd2
  419a34:	cmp    BYTE PTR [edx],ch
  419a36:	and    eax,DWORD PTR [edx+edi*2]
  419a39:	into   
  419a3a:	out    dx,eax
  419a3b:	push   ss
  419a3c:	mov    esi,0x9f5e81c3
  419a41:	xchg   esp,eax
  419a42:	xor    eax,0x2b4d1154
  419a47:	loop   0x419a67
  419a49:	jae    0x419aae
  419a4b:	dec    ch
  419a4d:	scas   al,BYTE PTR es:[edi]
  419a4e:	adc    al,0x73
  419a50:	add    DWORD PTR [edi-0x60],esi
  419a53:	cmp    DWORD PTR [esi+0x49ec6cfe],eax
  419a59:	scas   eax,DWORD PTR es:[edi]
  419a5a:	mov    eax,ds:0xa3b5b
  419a5f:	aad    0xb1
  419a61:	sbb    al,0x12
  419a63:	mov    eax,0xef994302
  419a68:	imul   ebp,DWORD PTR [esi-0x63],0x9
  419a6c:	push   ebx
  419a6d:	mov    esp,ebp
  419a6f:	or     DWORD PTR [ecx],0x6a
  419a72:	les    esi,FWORD PTR [ebp+0x39]
  419a75:	call   0xfc51:0x8a31813e
  419a7c:	adc    bh,BYTE PTR [ecx+0x35e63396]
  419a82:	test   al,0x51
  419a84:	retf   0x3099
  419a87:	push   eax
  419a88:	adc    DWORD PTR [ecx+0x4a03b47b],edi
  419a8e:	mov    bh,0x53
  419a90:	inc    edx
  419a91:	jb     0x419a3f
  419a93:	xlat   BYTE PTR ds:[ebx]
  419a94:	push   eax
  419a95:	jge    0x419ab2
  419a97:	mov    eax,0xc1948e07
  419a9c:	sar    BYTE PTR ds:[ebx-0x4e],cl
  419aa0:	or     BYTE PTR [ebx+0x4f],ch
  419aa3:	push   ss
  419aa4:	ret    
  419aa5:	data16 loope 0x419ab7
  419aa8:	int3   
  419aa9:	jno    0x419a9c
  419aab:	pop    edi
  419aac:	lea    ebp,[edx+ecx*8-0x7c]
  419ab0:	aaa    
  419ab1:	loopne 0x419a37
  419ab3:	mov    ds:0x2b990f9a,eax
  419ab8:	mov    WORD PTR [edx+edi*2-0x3d],ss
  419abc:	hlt    
  419abd:	mov    esp,0x15049e47
  419ac2:	dec    edx
  419ac3:	add    al,0xa6
  419ac5:	cmp    al,BYTE PTR [esi+0x3e]
  419ac8:	cmp    esp,eax
  419aca:	inc    edi
  419acb:	fsubp  st(4),st
  419acd:	hlt    
  419ace:	scas   eax,DWORD PTR es:[edi]
  419acf:	xor    BYTE PTR [esi-0x63],ah
  419ad2:	pop    edi
  419ad3:	cmp    al,0x70
  419ad5:	sub    eax,0xd2cb07a4
  419ada:	or     dl,BYTE PTR [ecx-0x733ddc46]
  419ae0:	cdq    
  419ae1:	jmp    0xc1df:0xe5f12d93
  419ae8:	fisttp QWORD PTR [edi]
  419aea:	loope  0x419aa6
  419aec:	dec    ecx
  419aed:	int3   
  419aee:	mov    cl,BYTE PTR [ebx]
  419af0:	and    eax,0x6ae7b6d3
  419af5:	es xor al,0x1e
  419af8:	sub    DWORD PTR [ecx+0x736eb2a4],ebp
  419afe:	mov    ds:0xcd4ecde0,eax
  419b03:	out    0x2c,al
  419b05:	(bad)
  419b08:	xchg   DWORD PTR [ebx+0x11c59c78],ecx
  419b0e:	or     al,0xc8
  419b10:	shl    DWORD PTR [ecx],1
  419b12:	leave  
  419b13:	loopne 0x419b92
  419b15:	retf   0x2e75
  419b18:	les    eax,FWORD PTR [edx+edx*1-0x1a]
  419b1c:	loopne 0x419ad4
  419b1e:	add    eax,0xebecd29d
  419b23:	sub    ebp,esi
  419b25:	(bad)  
  419b26:	dec    edx
  419b27:	jb     0x419aa9
  419b29:	fmul   st(7),st
  419b2b:	or     ah,BYTE PTR [esi-0x69]
  419b2e:	ret    
  419b2f:	mov    bl,0xb6
  419b31:	pop    esi
  419b32:	dec    ebp
  419b33:	(bad)  
  419b34:	add    ah,cl
  419b36:	xlat   BYTE PTR ds:[ebx]
  419b37:	ins    DWORD PTR es:[edi],dx
  419b38:	mov    eax,ds:0x1525a5b8
  419b3d:	bound  edi,QWORD PTR [edx+0x15374dbc]
  419b43:	adc    DWORD PTR [ebx+0x12],edi
  419b46:	pop    es
  419b47:	sub    eax,0x2c256174
  419b4c:	mov    ds:0x92237bef,eax
  419b51:	cmp    BYTE PTR [eax],bl
  419b53:	call   0xbaf548e5
  419b58:	jg     0x419b6c
  419b5a:	sub    eax,0xdeac195
  419b5f:	inc    edx
  419b60:	sbb    DWORD PTR [ecx],edi
  419b62:	int    0x38
  419b64:	add    eax,0x2f8786b5
  419b69:	fiadd  WORD PTR [esi]
  419b6b:	xchg   esi,eax
  419b6c:	lods   eax,DWORD PTR ds:[esi]
  419b6d:	loope  0x419b4e
  419b6f:	call   DWORD PTR ss:[eax+esi*8+0x2f]
  419b74:	imul   ebx,DWORD PTR [eax+0x73e2be1d],0xffffff9b
  419b7b:	(bad)  
  419b7d:	ins    DWORD PTR es:[edi],dx
  419b7e:	repz test DWORD PTR [edi-0x765d318f],esp
  419b85:	sub    dh,BYTE PTR [edi]
  419b87:	jp     0x419bb4
  419b89:	jno    0x419c09
  419b8b:	sub    BYTE PTR [edx-0x56],0x8c
  419b8f:	rcr    BYTE PTR [eax+ecx*1+0x7a603112],0x92
  419b97:	fnstenv [ebp-0x5a]
  419b9a:	adc    DWORD PTR [edx+0x77913e69],ebx
  419ba0:	out    dx,eax
  419ba1:	sahf   
  419ba2:	neg    ch
  419ba4:	xchg   edx,eax
  419ba5:	mov    eax,ds:0xe9fa4a8
  419baa:	mov    ss,edx
  419bac:	popa   
  419bad:	cmp    al,0xa3
  419baf:	add    bh,BYTE PTR [esp+ebx*2+0xd738cd3]
  419bb6:	sbb    DWORD PTR [ebp+ecx*1-0x4a],edi
  419bba:	dec    esi
  419bbb:	mov    ebp,0xd00e4125
  419bc0:	xchg   esp,eax
  419bc1:	loop   0x419bca
  419bc3:	sbb    bh,bl
  419bc5:	dec    ebx
  419bc6:	and    al,0x31
  419bc8:	stc    
  419bc9:	out    dx,al
  419bca:	pop    ebx
  419bcb:	sti    
  419bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bcd:	or     BYTE PTR [ebp+0x4f],ch
  419bd0:	add    ch,bl
  419bd2:	in     eax,0x13
  419bd4:	(bad)  
  419bd5:	in     eax,dx
  419bd6:	and    eax,0xa1067e0d
  419bdb:	mov    esp,DWORD PTR [ebp+edi*8+0x7c472d72]
  419be2:	xchg   ecx,eax
  419be3:	xor    BYTE PTR [edi+0x4d],bl
  419be6:	mov    bh,0xe5
  419be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be9:	icebp  
  419bea:	pop    esi
  419beb:	jnp    0x419b85
  419bed:	xchg   dl,cl
  419bef:	and    eax,0xb743fa32
  419bf4:	cmp    al,0x75
  419bf6:	std    
  419bf7:	ret    
  419bf8:	(bad)  
  419bf9:	cld    
  419bfa:	shl    ebp,1
  419bfc:	jns    0x419bc5
  419bfe:	mov    ch,BYTE PTR [esi+0x7c]
  419c01:	mov    ebp,0x24626183
  419c06:	inc    ebp
  419c07:	adc    al,0x50
  419c09:	xor    al,0x92
  419c0b:	cmp    eax,0x14d3a0d7
  419c10:	pop    ecx
  419c11:	jmp    0x419c61
  419c13:	scas   eax,DWORD PTR es:[edi]
  419c14:	gs jno 0x419c6f
  419c17:	cdq    
  419c18:	mov    ebp,?
  419c1a:	mov    edi,0x31159780
  419c1f:	cdq    
  419c20:	add    ecx,DWORD PTR [ebx]
  419c22:	pcmpgtd mm4,mm1
  419c25:	cdq    
  419c26:	stc    
  419c27:	xlat   BYTE PTR es:[ebx]
  419c29:	sbb    eax,0x51993559
  419c2e:	idiv   BYTE PTR [edi]
  419c30:	dec    edx
  419c31:	cmp    al,0x31
  419c33:	inc    esi
  419c34:	test   DWORD PTR [edx+0x6d],esi
  419c37:	aam    0x5d
  419c39:	push   es
  419c3a:	xchg   BYTE PTR [ecx],ch
  419c3c:	add    eax,0xd657a9e7
  419c41:	add    dl,BYTE PTR [ebx-0x749f967c]
  419c47:	pop    esp
  419c48:	ret    0x2e54
  419c4b:	pop    ebx
  419c4c:	inc    eax
  419c4d:	mov    BYTE PTR ds:0x7c1670c1,ch
  419c53:	mov    al,ds:0xef714cec
  419c58:	int3   
  419c59:	mov    es,esi
  419c5b:	mov    DWORD PTR [ecx-0x2b738a91],0x5e6b1c4e
  419c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c66:	shr    BYTE PTR [edx],cl
  419c68:	loope  0x419ca2
  419c6a:	and    DWORD PTR [eax],edi
  419c6c:	mov    dh,0x81
  419c6e:	loop   0x419c1c
  419c70:	fnstsw WORD PTR [ecx+0x320e29b8]
  419c76:	ja     0x419c20
  419c78:	aas    
  419c79:	push   edi
  419c7a:	stos   BYTE PTR es:[edi],al
  419c7b:	imul   eax,DWORD PTR [eax],0x9ee94a84
  419c81:	stos   BYTE PTR es:[edi],al
  419c82:	enter  0x6290,0x25
  419c86:	inc    esi
  419c87:	sti    
  419c88:	data16 jmp 0x419cff
  419c8b:	mov    ebp,0x1b40cf81
  419c90:	bound  edx,QWORD PTR [ebp-0x70f0ec0b]
  419c96:	adc    al,0xdb
  419c98:	adc    eax,0x8e4f7be9
  419c9d:	xchg   ecx,eax
  419c9e:	pop    edx
  419c9f:	sbb    eax,DWORD PTR es:[edi-0x19]
  419ca3:	and    DWORD PTR [edx+0xbb663ce],0x338fa129
  419cad:	arpl   WORD PTR [eax+eax*2-0x39b09a66],si
  419cb4:	cli    
  419cb5:	iret   
  419cb6:	sbb    eax,0xd501155
  419cbb:	inc    ebp
  419cbc:	imul   esi,ebx,0x8f18da20
  419cc2:	inc    eax
  419cc3:	adc    esp,DWORD PTR [bx]
  419cc6:	(bad)  
  419cc7:	cmp    BYTE PTR [eax],cl
  419cc9:	dec    edx
  419cca:	inc    ecx
  419ccb:	int3   
  419ccc:	mov    ds:0x3273fd73,al
  419cd1:	std    
  419cd2:	dec    esp
  419cd3:	test   DWORD PTR [edx],esi
  419cd5:	lods   eax,DWORD PTR ds:[esi]
  419cd6:	call   DWORD PTR ds:0xc2adec58
  419cdc:	ret    
  419cdd:	and    DWORD PTR [edx-0x64be4944],edx
  419ce3:	sti    
  419ce4:	sbb    eax,0xfc9c9ac4
  419ce9:	(bad)  
  419cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ceb:	jno    0x419d10
  419ced:	mov    dh,0xfd
  419cef:	nop
  419cf0:	loope  0x419d33
  419cf2:	imul   edx,DWORD PTR [eax+ebx*2],0xe004db41
  419cf9:	sub    esi,DWORD PTR [edx+0x37]
  419cfc:	test   al,0x10
  419cfe:	in     al,dx
  419cff:	mov    esp,0xd375e2ff
  419d04:	mov    esp,?
  419d06:	out    dx,eax
  419d07:	int    0x87
  419d09:	arpl   WORD PTR [edx+0x1004d517],dx
  419d0f:	cmp    al,0xb0
  419d11:	or     ah,BYTE PTR [ebx+0x47af7123]
  419d17:	xor    eax,0xb2678607
  419d1c:	jb     0x419d43
  419d1e:	mov    edx,0xd5251c60
  419d23:	adc    esp,DWORD PTR [ebp+eiz*4+0x76b38000]
  419d2a:	cdq    
  419d2b:	cmp    BYTE PTR [ecx+0x3e0c2326],cl
  419d31:	add    eax,0xbbf1d482
  419d36:	jg     0x419d21
  419d38:	jle    0x419d13
  419d3a:	pop    esp
  419d3b:	or     DWORD PTR [edx],esi
  419d3d:	fld    QWORD PTR [ebp+edi*8+0x6c]
  419d41:	outs   dx,BYTE PTR ds:[esi]
  419d42:	pop    esp
  419d43:	pop    ecx
  419d44:	pop    ecx
  419d45:	add    ah,al
  419d47:	pop    edx
  419d48:	fisubr WORD PTR [ebx]
  419d4a:	ror    DWORD PTR [ebx+0x3e07c412],1
  419d50:	xlat   BYTE PTR ds:[ebx]
  419d51:	adc    dh,BYTE PTR [edi+0x71ad6434]
  419d57:	cmp    DWORD PTR [edi-0x38c28aae],0x53
  419d5e:	call   0xfa98:0x3e4c9d9
  419d65:	jle    0x419d9a
  419d67:	jo     0x419d50
  419d69:	dec    edi
  419d6a:	cmp    ecx,DWORD PTR [edi+eax*8-0x75a42cb7]
  419d71:	add    DWORD PTR [esp+ecx*8+0x6d43a8e4],0xbafcf4e8
  419d7c:	xor    eax,0xb203c4b4
  419d81:	jbe    0x419dbd
  419d83:	push   ds
  419d84:	sub    esp,ecx
  419d86:	nop
  419d87:	je     0x419d6d
  419d89:	xchg   ecx,eax
  419d8a:	imul   edx,DWORD PTR ds:0xcde63489,0x1e7deb48
  419d94:	retf   0x4198
  419d97:	push   esi
  419d98:	mov    bh,0x6e
  419d9a:	sti    
  419d9b:	and    bh,bh
  419d9d:	cwde   
  419d9e:	push   eax
  419d9f:	hlt    
  419da0:	rol    BYTE PTR [ecx-0x7],cl
  419da3:	and    al,0x13
  419da5:	mov    al,ds:0x2de7249a
  419daa:	add    eax,0x8b7ff69d
  419daf:	sti    
  419db0:	mov    al,0x23
  419db2:	cdq    
  419db3:	add    eax,0xee9ac22e
  419db8:	(bad)  
  419db9:	bnd js 0x419d5d
  419dbc:	inc    ebp
  419dbd:	mov    esi,0x133ae03b
  419dc2:	mov    ds:0x32e0cee7,eax
  419dc7:	out    0xae,al
  419dc9:	cmp    bh,BYTE PTR [edi+0x172b43be]
  419dcf:	dec    ebp
  419dd0:	outs   dx,DWORD PTR ds:[esi]
  419dd1:	pop    ecx
  419dd2:	fdivr  QWORD PTR [ebx+0x18]
  419dd5:	xor    eax,0x42e97add
  419dda:	test   al,0xd7
  419ddc:	or     BYTE PTR ds:0xada59c91,ch
  419de2:	gs mov esi,?
  419de5:	mov    esi,0xb06e06d6
  419dea:	fadd   st,st(3)
  419dec:	lahf   
  419ded:	push   edx
  419dee:	fldcw  WORD PTR [esi-0xf43cac2]
  419df4:	xchg   edx,eax
  419df5:	xor    eax,0xc04eb33
  419dfa:	std    
  419dfb:	test   BYTE PTR [edi-0x78d6c220],dl
  419e01:	add    dl,BYTE PTR [edx]
  419e03:	adc    eax,DWORD PTR [ebp-0x1f]
  419e06:	jno    0x419e5b
  419e08:	mov    eax,ds:0x45cd00c6
  419e0d:	dec    esi
  419e0e:	clc    
  419e0f:	arpl   WORD PTR [edi],ax
  419e11:	nop
  419e12:	xchg   dh,bh
  419e14:	fld    QWORD PTR [ecx-0x71b91087]
  419e1a:	fbstp  TBYTE PTR [esi]
  419e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e1d:	and    al,dh
  419e1f:	icebp  
  419e20:	ret    
  419e21:	sahf   
  419e22:	loop   0x419e67
  419e24:	es inc eax
  419e26:	push   eax
  419e27:	ins    BYTE PTR es:[edi],dx
  419e28:	std    
  419e29:	pop    ebx
  419e2a:	mov    dl,0x36
  419e2c:	push   ecx
  419e2d:	sub    eax,0x85cde563
  419e32:	or     al,0xb9
  419e34:	xchg   esi,eax
  419e35:	pop    eax
  419e36:	scas   al,BYTE PTR es:[edi]
  419e37:	mov    ds:0x3391d762,eax
  419e3c:	sbb    al,al
  419e3e:	ja     0x419e1c
  419e40:	mov    bl,0xb5
  419e42:	or     eax,0x9bfab7f5
  419e47:	mov    esp,0xbf5cffbe
  419e4c:	mov    ebp,0xd33bbfba
  419e52:	es out 0xc7,al
  419e55:	jge    0x419e23
  419e57:	and    DWORD PTR ds:0x9509ff1e,ebx
  419e5d:	mov    WORD PTR [esi-0x37],ds
  419e60:	loope  0x419e4b
  419e62:	out    0x6,al
  419e64:	stos   DWORD PTR es:[edi],eax
  419e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e66:	push   0xffffff98
  419e68:	mov    es,ecx
  419e6a:	fisubr DWORD PTR [edx-0x60df682f]
  419e70:	or     dl,BYTE PTR [esi]
  419e72:	(bad)
  419e76:	gs loop 0x419ead
  419e79:	pop    es
  419e7a:	adc    ecx,DWORD PTR [ecx]
  419e7c:	mov    ch,0xa1
  419e7e:	xchg   esi,eax
  419e7f:	cmp    DWORD PTR [ebx-0x67ee2dbb],ebx
  419e85:	or     edi,esi
  419e87:	mov    WORD PTR [eax+0x15a37bbc],gs
  419e8d:	rcl    cl,1
  419e8f:	int3   
  419e90:	loope  0x419e33
  419e92:	popa   
  419e93:	imul   edi,DWORD PTR [esi],0xc
  419e96:	mov    al,0x1c
  419e98:	loopne 0x419efa
  419e9a:	jp     0x419e6a
  419e9c:	out    0x6c,eax
  419e9e:	xor    ch,BYTE PTR [ebx+ebx*1-0x4e849b7f]
  419ea5:	in     al,0x2b
  419ea7:	icebp  
  419ea8:	(bad)  
  419eaa:	push   esi
  419eab:	je     0x419e9e
  419ead:	call   0x3027:0xd1cc7bf2
  419eb4:	jle    0x419f04
  419eb6:	add    ah,BYTE PTR [ebx]
  419eb8:	xor    DWORD PTR [ebx],0x10
  419ebb:	repnz xchg edi,eax
  419ebd:	dec    eax
  419ebe:	retf   0xf8c8
  419ec1:	xor    al,0xa0
  419ec3:	loopne 0x419f38
  419ec5:	aas    
  419ec6:	pavgb  mm6,QWORD PTR [edi-0x4bc94c83]
  419ecd:	(bad)  
  419ece:	retf   0x7b0
  419ed1:	in     al,dx
  419ed2:	xchg   edi,eax
  419ed3:	scas   al,BYTE PTR es:[edi]
  419ed4:	mov    bl,0x2b
  419ed6:	pusha  
  419ed7:	pop    ss
  419ed8:	push   eax
  419ed9:	out    dx,eax
  419eda:	shr    DWORD PTR [eax-0x41],1
  419edd:	fsubp  st(2),st
  419edf:	xlat   BYTE PTR ds:[ebx]
  419ee0:	sbb    al,0x39
  419ee2:	cli    
  419ee3:	mov    esi,ebp
  419ee5:	ins    BYTE PTR es:[edi],dx
  419ee6:	pop    ebp
  419ee7:	aad    0x73
  419ee9:	xchg   esp,eax
  419eea:	cwde   
  419eeb:	pop    esp
  419eec:	push   ebp
  419eed:	call   0xa9c7dd54
  419ef2:	sbb    cl,BYTE PTR [esp+ebx*8-0x68a10a11]
  419ef9:	mov    edi,0xc50d2f07
  419efe:	sbb    eax,0x7e413755
  419f03:	mov    ds:0x3b3924db,eax
  419f08:	(bad)
  419f0b:	dec    eax
  419f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f0d:	mov    cl,dh
  419f0f:	xchg   esp,eax
  419f10:	js     0x419f08
  419f12:	bnd ret 
  419f14:	call   0x1b1f:0x3c8e055
  419f1b:	adc    BYTE PTR [esi+esi*2+0xeac24fc],bh
  419f22:	adc    BYTE PTR [ecx+0x4c9d295e],bh
  419f28:	and    BYTE PTR [esi+0x6e],al
  419f2b:	add    bl,bl
  419f2d:	dec    ecx
  419f2e:	push   esp
  419f2f:	rcr    BYTE PTR [esi+edx*4],1
  419f32:	gs ins BYTE PTR es:[edi],dx
  419f34:	adc    esi,ecx
  419f36:	sub    al,0x8
  419f38:	loop   0x419f95
  419f3a:	into   
  419f3b:	fs addr16 es iret 
  419f3f:	rcl    BYTE PTR [edx+edi*4-0x26],1
  419f43:	mov    eax,0x436b6570
  419f48:	lods   al,BYTE PTR ds:[esi]
  419f49:	or     eax,0xe8f4997e
  419f4e:	sbb    esi,ebp
  419f50:	mov    ecx,0x3fef0149
  419f55:	lock imul esp,DWORD PTR [ebx+0x3bac6c89],0x71
  419f5d:	test   BYTE PTR [edi],0x32
  419f60:	push   ss
  419f61:	cmp    eax,0xb472a66f
  419f66:	inc    ax
  419f68:	cmp    al,0x3a
  419f6a:	xchg   edi,eax
  419f6b:	mov    cl,0x84
  419f6d:	cmp    cl,BYTE PTR [ebp-0xbe7228]
  419f73:	push   0x78
  419f75:	(bad)  
  419f76:	gs int3 
  419f78:	sbb    ah,BYTE PTR [esi-0x7f]
  419f7b:	out    dx,eax
  419f7c:	sar    DWORD PTR [esi+0x54bc681f],1
  419f82:	jl     0x419f04
  419f84:	pop    esi
  419f85:	lea    esp,[ebx]
  419f87:	mov    DWORD PTR [edi+eax*4-0x101ce318],eax
  419f8e:	(bad)  
  419f8f:	clc    
  419f90:	sbb    BYTE PTR [edx-0x73da1bff],al
  419f96:	push   edx
  419f97:	cmp    DWORD PTR [esi+0x71],0x68
  419f9b:	mov    BYTE PTR [ebp+0x5c],bh
  419f9e:	in     eax,0xdd
  419fa0:	dec    eax
  419fa1:	adc    dh,0x3c
  419fa4:	or     DWORD PTR [eax+0x7fc15d73],0xffffffc6
  419fab:	push   ebx
  419fac:	test   eax,0xdd2a732d
  419fb1:	in     al,0xac
  419fb3:	mov    cs,esp
  419fb5:	bound  esp,QWORD PTR [ebx+0x7f235ff9]
  419fbb:	jecxz  0x419fe3
  419fbd:	jne    0x419f47
  419fbf:	push   ds
  419fc0:	inc    eax
  419fc1:	out    dx,eax
  419fc2:	test   BYTE PTR [edi],0xa
  419fc5:	jmp    0x572db7f5
  419fca:	sub    ebp,eax
  419fcc:	adc    BYTE PTR [esi-0x26fda94e],bl
  419fd2:	dec    edi
  419fd3:	in     al,dx
  419fd4:	lock sub BYTE PTR [ebp-0x20],bl
  419fd8:	je     0x419f89
  419fda:	or     bl,BYTE PTR [esi+0x513931b6]
  419fe0:	pop    edx
  419fe1:	push   cs
  419fe2:	cmp    DWORD PTR [ecx+ebp*4],0x306ff9b4
  419fe9:	adc    bh,dh
  419feb:	push   ebx
  419fec:	popa   
  419fed:	jle    0x41a056
  419fef:	add    al,0x98
  419ff1:	test   dl,bh
  419ff3:	adc    BYTE PTR [edx+0x251dcf66],dl
  419ff9:	xor    bh,al
  419ffb:	repnz xchg ebx,eax
  419ffd:	xor    dh,BYTE PTR [ebx]
  419fff:	jnp    0x419fef
  41a001:	mov    bh,0x18
  41a003:	ja     0x41a017
  41a005:	cmp    BYTE PTR ds:0x3b2bbee2,cl
  41a00b:	pop    ebp
  41a00c:	mov    al,ds:0xb9524a3
  41a011:	add    esi,DWORD PTR [ebx]
  41a013:	aad    0x4
  41a015:	mov    dl,0x18
  41a017:	push   0x8e54b881
  41a01c:	push   ebp
  41a01d:	test   edi,esp
  41a01f:	mov    ebx,es
  41a021:	dec    ebx
  41a022:	and    eax,0x5887bd54
  41a027:	sbb    BYTE PTR [ecx+0xe],bl
  41a02a:	pop    ecx
  41a02b:	push   es
  41a02c:	int3   
  41a02d:	dec    ebp
  41a02e:	jp     0x41a08a
  41a030:	xchg   ebp,eax
  41a031:	jge    0x41a04d
  41a033:	fldz   
  41a035:	and    ah,dl
  41a037:	clc    
  41a038:	cmp    BYTE PTR [esi+0x224dcaa5],0x1f
  41a03f:	mov    WORD PTR [esi+0x70],?
  41a042:	xchg   edx,eax
  41a043:	push   0x22644494
  41a048:	ficomp WORD PTR [esi+esi*2]
  41a04b:	adc    al,0x35
  41a04d:	and    esi,DWORD PTR [edx+ecx*1+0x73577ffc]
  41a054:	(bad)  
  41a055:	(bad)  
  41a056:	adc    al,0x6e
  41a058:	inc    ebx
  41a059:	into   
  41a05a:	popf   
  41a05b:	xor    al,al
  41a05d:	push   ds
  41a05e:	xlat   BYTE PTR ds:[ebx]
  41a05f:	jmp    0x89f94dc4
  41a064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a065:	mov    bh,0x55
  41a067:	mov    eax,0xbe8b6d7d
  41a06d:	adc    eax,0x4c4a8a2d
  41a072:	es dec edx
  41a074:	fidiv  DWORD PTR [edx+0x6]
  41a077:	or     eax,0x8caf1dca
  41a07c:	jnp    0x41a020
  41a07e:	call   0x8ba7:0x13059395
  41a085:	xchg   ebx,eax
  41a086:	xchg   ebp,eax
  41a087:	sti    
  41a088:	cs jbe 0x41a067
  41a08b:	clc    
  41a08c:	std    
  41a08d:	adc    ebx,DWORD PTR [ebx+ebp*4+0x720e85f0]
  41a094:	xchg   esi,eax
  41a095:	sbb    al,0xca
  41a097:	std    
  41a098:	mov    bl,0xf7
  41a09a:	mov    esp,edi
  41a09c:	mov    al,BYTE PTR [edi]
  41a09e:	mov    DWORD PTR [edx-0x370ef4b],ebp
  41a0a4:	xor    DWORD PTR [ebp+edi*1-0x741efe08],edx
  41a0ab:	mov    eax,0xaa742308
  41a0b0:	mov    ch,0x64
  41a0b2:	sar    ecx,cl
  41a0b4:	cli    
  41a0b5:	cwde   
  41a0b6:	dec    ecx
  41a0b7:	jo     0x41a0cd
  41a0b9:	dec    esp
  41a0ba:	adc    ebx,DWORD PTR [ebp-0x4227e3b8]
  41a0c0:	lods   al,BYTE PTR ds:[esi]
  41a0c1:	mov    dl,0x91
  41a0c3:	lods   eax,DWORD PTR ds:[esi]
  41a0c4:	push   edx
  41a0c5:	jle    0x41a0e8
  41a0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c8:	cmp    eax,0x54fde238
  41a0cd:	repz out 0x39,al
  41a0d0:	mov    ch,0x18
  41a0d2:	sub    eax,0x445cafc0
  41a0d7:	fldln2 
  41a0d9:	data16 add BYTE PTR [eax-0x73],dl
  41a0dd:	outs   dx,DWORD PTR ds:[esi]
  41a0de:	dec    ebp
  41a0df:	loope  0x41a08c
  41a0e1:	leave  
  41a0e2:	sub    al,0xca
  41a0e4:	fsub   DWORD PTR [ecx+0x37]
  41a0e7:	add    eax,0x6c68907d
  41a0ec:	jo     0x41a0dd
  41a0ee:	fiadd  WORD PTR ds:[esp+ecx*4+0x5e17f43c]
  41a0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0f7:	ins    BYTE PTR es:[edi],dx
  41a0f8:	daa    
  41a0f9:	sbb    al,0x7f
  41a0fb:	cmp    eax,0x3483ae3b
  41a100:	dec    ebx
  41a101:	das    
  41a102:	mov    edx,db0
  41a105:	mov    cl,0xd4
  41a107:	cli    
  41a108:	sti    
  41a109:	(bad)  ds:0xbdd5458e
  41a10f:	adc    BYTE PTR gs:[edx-0x49],ah
  41a113:	cmp    eax,0x1efee144
  41a118:	add    eax,edx
  41a11a:	mov    ds:0x71348073,eax
  41a11f:	or     eax,0x24b366d9
  41a124:	arpl   WORD PTR [esi],bx
  41a126:	push   es
  41a127:	inc    eax
  41a128:	cmp    ebx,ecx
  41a12a:	xchg   ecx,eax
  41a12b:	mov    DWORD PTR [ecx-0x5ceb28dc],esp
  41a131:	or     BYTE PTR [si],ch
  41a134:	cmp    BYTE PTR [ebx+0x7d],dl
  41a137:	jl     0x41a195
  41a139:	or     eax,0x53569da2
  41a13e:	jnp    0x41a0ed
  41a140:	rcl    DWORD PTR [edx+0x14d00627],cl
  41a146:	xor    DWORD PTR [ebx],esi
  41a148:	sub    BYTE PTR [ebx+eiz*1+0x36],0x99
  41a14d:	mov    bh,0xca
  41a14f:	mov    dl,0x3
  41a151:	sbb    DWORD PTR [edx],0xf599840a
  41a157:	push   ecx
  41a158:	xchg   esp,eax
  41a159:	cdq    
  41a15a:	add    DWORD PTR [eax],edx
  41a15c:	ds dec ebp
  41a15e:	cmp    bl,bl
  41a160:	mov    DWORD PTR [edi-0x16b09712],ecx
  41a166:	push   es
  41a167:	int    0x78
  41a169:	jno    0x41a1ae
  41a16b:	pop    ecx
  41a16c:	sub    ebp,DWORD PTR [edx-0x2e]
  41a16f:	arpl   WORD PTR [ebx-0x33],sp
  41a172:	mov    al,ds:0xaab70f1a
  41a177:	shr    DWORD PTR [edi-0x60b63d6d],1
  41a17d:	scas   al,BYTE PTR es:[edi]
  41a17e:	aas    
  41a17f:	sub    esp,DWORD PTR [ecx+edx*1+0x5]
  41a183:	add    esp,esp
  41a185:	sub    DWORD PTR [edi-0x29],esp
  41a188:	cmp    eax,0x9fe839fd
  41a18d:	and    DWORD PTR [edx+0x11],ebp
  41a190:	mov    esi,0x64f10d75
  41a195:	out    dx,al
  41a196:	sub    BYTE PTR [eax-0x35],bh
  41a199:	or     ebp,DWORD PTR [edx-0x60]
  41a19c:	xchg   esp,eax
  41a19d:	test   BYTE PTR [ebp+0x4d],dh
  41a1a0:	addr16 in al,dx
  41a1a2:	jmp    0x72eb:0x55e76bf5
  41a1a9:	mov    bh,BYTE PTR [ebp+0x4dd5284]
  41a1af:	retf   
  41a1b0:	sbb    ch,BYTE PTR [ebp-0x1fed61cf]
  41a1b6:	(bad)  
  41a1b7:	xlat   BYTE PTR ds:[ebx]
  41a1b8:	mov    bl,0xd9
  41a1ba:	hlt    
  41a1bb:	imul   eax,DWORD PTR [edx+edi*8-0x7a],0xffffffbd
  41a1c0:	in     eax,dx
  41a1c1:	adc    bl,BYTE PTR [eax]
  41a1c3:	jmp    0xfa83819e
  41a1c8:	or     cl,bh
  41a1ca:	push   ss
  41a1cb:	sbb    DWORD PTR [ebx-0x6e84a48b],ebx
  41a1d1:	mov    ebx,0x113c9b53
  41a1d6:	or     ebx,ebx
  41a1d8:	or     bh,ch
  41a1da:	mov    ebp,0x1c50797b
  41a1df:	add    al,BYTE PTR [ebp+0x7c]
  41a1e2:	in     al,0xc8
  41a1e4:	cmp    edx,eax
  41a1e6:	or     edx,DWORD PTR [edx]
  41a1e8:	rcr    DWORD PTR [ecx+0x29c59ca4],1
  41a1ee:	xchg   esi,eax
  41a1ef:	test   eax,0x70d694e0
  41a1f4:	aas    
  41a1f5:	add    eax,DWORD PTR [eax]
  41a1f7:	jmp    0x90b43c47
  41a1fc:	cmp    eax,0x2f150d08
  41a201:	bound  ebx,QWORD PTR [ecx+0x5453f60b]
  41a207:	in     al,dx
  41a208:	mov    esi,0xb9eba4cc
  41a20d:	mov    ds:0x8f10e259,eax
  41a212:	lea    ecx,[ebp+ecx*8-0x51]
  41a216:	lds    edx,FWORD PTR [edi]
  41a218:	rep ins DWORD PTR es:[edi],dx
  41a21a:	cs sbb edi,edx
  41a21d:	sbb    eax,0x1994861
  41a222:	mov    edx,0x70bcf8f0
  41a227:	ins    DWORD PTR es:[edi],dx
  41a228:	or     al,0x98
  41a22a:	in     al,0xb9
  41a22c:	mov    ebp,0xefac586d
  41a231:	adc    DWORD PTR [eax],ebp
  41a233:	mov    eax,ds:0x64b18664
  41a238:	rcl    BYTE PTR [edi-0x44],1
  41a23b:	(bad)  
  41a23c:	cld    
  41a23d:	scas   eax,DWORD PTR es:[edi]
  41a23e:	fs mov al,0x47
  41a241:	pop    esp
  41a242:	sbb    DWORD PTR [ebx+ebp*2+0x43],0x7041be54
  41a24a:	sbb    eax,0xba279723
  41a24f:	aaa    
  41a250:	pop    ss
  41a251:	test   BYTE PTR [esi+0x7c],ch
  41a254:	jmp    0x89e8:0x14d56c45
  41a25b:	lods   al,BYTE PTR ds:[esi]
  41a25c:	(bad)  
  41a25d:	std    
  41a25e:	add    al,0x19
  41a260:	out    dx,al
  41a261:	pop    ebp
  41a262:	mov    bl,BYTE PTR [ebx+0x6eae1b97]
  41a268:	jnp    0x41a2db
  41a26a:	mov    cl,0xb2
  41a26c:	mov    esp,0x2d2467ad
  41a271:	clc    
  41a272:	dec    eax
  41a273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a274:	add    esi,DWORD PTR [ebp+0x5]
  41a277:	popf   
  41a278:	add    ah,cl
  41a27a:	and    eax,0x732d17e8
  41a27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a280:	cmc    
  41a281:	nop
  41a282:	mov    esp,DWORD PTR [ecx+0x34]
  41a285:	out    dx,ax
  41a287:	(bad)  
  41a288:	dec    edx
  41a289:	sti    
  41a28a:	ret    
  41a28b:	push   ds
  41a28c:	and    cl,BYTE PTR [edi-0x72]
  41a28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a290:	outs   dx,DWORD PTR ds:[esi]
  41a291:	cmp    DWORD PTR [eax-0x23],0xffffff8e
  41a295:	dec    eax
  41a296:	(bad)  
  41a297:	rcr    ebx,1
  41a299:	and    eax,0x80b602b7
  41a29e:	jbe    0x41a310
  41a2a0:	adc    al,0xb
  41a2a2:	sub    DWORD PTR [esi+ecx*4],esp
  41a2a5:	sub    al,0x21
  41a2a7:	xchg   DWORD PTR [ecx],ecx
  41a2a9:	into   
  41a2aa:	retf   
  41a2ab:	sub    esi,edi
  41a2ad:	outs   dx,DWORD PTR ds:[esi]
  41a2ae:	pop    edx
  41a2af:	je     0x41a251
  41a2b1:	leave  
  41a2b2:	loope  0x41a2be
  41a2b4:	test   eax,0x1eb7deb0
  41a2b9:	add    BYTE PTR [esi-0x64],cl
  41a2bc:	pop    esp
  41a2bd:	loop   0x41a31d
  41a2bf:	(bad)  
  41a2c0:	xchg   esi,eax
  41a2c1:	lds    edi,FWORD PTR [ebx]
  41a2c3:	loopne 0x41a2cd
  41a2c5:	gs push edx
  41a2c7:	push   es
  41a2c8:	js     0x41a27f
  41a2ca:	ret    0x721d
  41a2cd:	sbb    ebx,DWORD PTR [edx+esi*8]
  41a2d0:	ror    BYTE PTR [ebx-0x5b],0xc1
  41a2d4:	xor    al,BYTE PTR [ebx-0x690cfb35]
  41a2da:	pminub mm6,mm3
  41a2dd:	mov    ch,0x2b
  41a2df:	outs   dx,BYTE PTR ds:[esi]
  41a2e0:	retf   0xbf63
  41a2e3:	fidiv  WORD PTR [edx-0x1706f049]
  41a2e9:	aas    
  41a2ea:	(bad)  
  41a2eb:	adc    BYTE PTR fs:[ecx],dh
  41a2ee:	cmp    al,0xc2
  41a2f0:	jl     0x41a288
  41a2f2:	mov    ebx,0xd031d4eb
  41a2f7:	push   ebp
  41a2f8:	pop    eax
  41a2f9:	jge    0x41a291
  41a2fb:	sbb    al,0x55
  41a2fd:	push   ds
  41a2fe:	call   0xc746:0xd52fd09a
  41a305:	dec    eax
  41a306:	pop    eax
  41a307:	add    eax,0x5ca24f6e
  41a30c:	outs   dx,BYTE PTR ds:[esi]
  41a30d:	adc    eax,0x3e0495c1
  41a312:	xchg   ebx,eax
  41a313:	jo     0x41a369
  41a315:	pop    eax
  41a316:	shr    DWORD PTR [ecx],1
  41a318:	mov    edi,0x61d19bc5
  41a31d:	and    eax,0x7c93528d
  41a322:	and    ebx,DWORD PTR [edx+0x63bc26d6]
  41a328:	cmp    BYTE PTR [edi],dh
  41a32a:	enter  0x6d75,0x92
  41a32e:	mov    ah,0xf7
  41a330:	hlt    
  41a331:	mov    edi,0x16eb6fe3
  41a336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a337:	pushf  
  41a338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a339:	sbb    dl,al
  41a33b:	mov    eax,0x48edd316
  41a340:	and    al,0xf3
  41a342:	jg     0x41a3a7
  41a344:	and    ah,cl
  41a346:	fdiv   QWORD PTR [ecx-0x6193f707]
  41a34c:	xor    BYTE PTR [ecx],bh
  41a34e:	lock inc eax
  41a350:	pop    ss
  41a351:	ror    BYTE PTR [ebx+0x2c],1
  41a354:	jle    0x41a343
  41a356:	mov    edi,0xd63c6a54
  41a35b:	mov    eax,0x2397d874
  41a360:	outs   dx,BYTE PTR ds:[esi]
  41a361:	(bad)  [ebp-0x2e]
  41a364:	mov    edx,0xa951fd60
  41a369:	xor    bl,BYTE PTR [eax-0x50644671]
  41a36f:	sub    BYTE PTR [eax+0x73735754],al
  41a375:	(bad)  
  41a376:	icebp  
  41a377:	mov    al,0x2
  41a379:	es call 0x83b3:0xcb16696f
  41a381:	jmp    0x41a3ec
  41a383:	rol    ebp,1
  41a385:	pop    ss
  41a386:	mov    eax,ds:0x13ed865b
  41a38b:	xlat   BYTE PTR ds:[ebx]
  41a38c:	scas   al,BYTE PTR es:[edi]
  41a38d:	inc    ebx
  41a38e:	dec    esp
  41a38f:	sbb    DWORD PTR [ebx-0x3bc285c],edi
  41a395:	cmc    
  41a396:	pop    edx
  41a397:	lds    ecx,FWORD PTR [edx]
  41a399:	leave  
  41a39a:	out    dx,al
  41a39b:	inc    esi
  41a39c:	sbb    BYTE PTR [ecx],bl
  41a39e:	leave  
  41a39f:	inc    esi
  41a3a0:	jp     0x41a3e6
  41a3a2:	dec    edi
  41a3a3:	ss clc 
  41a3a5:	bound  esi,QWORD PTR [esi-0x3e]
  41a3a8:	or     al,0x44
  41a3aa:	cld    
  41a3ab:	repnz or al,0x90
  41a3ae:	sbb    dl,BYTE PTR ds:0xc517565f
  41a3b4:	pusha  
  41a3b5:	jo     0x41a413
  41a3b7:	test   al,0x46
  41a3b9:	mov    bl,0xd
  41a3bb:	jle    0x41a3ae
  41a3bd:	out    dx,al
  41a3be:	les    eax,FWORD PTR [eax+0x66]
  41a3c1:	stos   BYTE PTR es:[edi],al
  41a3c2:	fisttp DWORD PTR [eax-0x5]
  41a3c5:	mov    dh,0x61
  41a3c7:	stc    
  41a3c8:	cwde   
  41a3c9:	jl     0x41a3bc
  41a3cb:	add    eax,DWORD PTR [edx]
  41a3cd:	loope  0x41a3e9
  41a3cf:	and    BYTE PTR [eax],al
  41a3d1:	test   DWORD PTR [ecx+esi*1-0x6c],edx
  41a3d5:	imul   ebp,DWORD PTR [ebx],0xffffff89
  41a3d8:	or     eax,0xcc75da76
  41a3dd:	(bad)  
  41a3de:	rcr    DWORD PTR [ebx-0xd],cl
  41a3e1:	daa    
  41a3e2:	add    BYTE PTR [ecx],al
  41a3e4:	xchg   ebx,eax
  41a3e5:	arpl   bp,ax
  41a3e7:	sub    BYTE PTR [ecx+0x65],bh
  41a3ea:	push   0x77
  41a3ec:	mov    esp,0x93237ee8
  41a3f1:	(bad)  
  41a3f2:	fs loope 0x41a3de
  41a3f5:	lock sahf 
  41a3f7:	mov    edx,eax
  41a3f9:	les    esi,FWORD PTR [ebp+0x5572ce00]
  41a3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a400:	idiv   DWORD PTR [edi+0x4d656fde]
  41a406:	pop    ebx
  41a407:	inc    edi
  41a408:	jne    0x41a3a8
  41a40a:	fldcw  WORD PTR [ebp-0x80]
  41a40d:	jb     0x41a3ed
  41a40f:	ret    
  41a410:	inc    ebp
  41a411:	outs   dx,BYTE PTR ds:[esi]
  41a412:	mov    edx,0x90522080
  41a417:	loop   0x41a44e
  41a419:	retf   
  41a41a:	push   edx
  41a41b:	xor    ecx,DWORD PTR [edi+edi*2-0x7]
  41a41f:	sbb    DWORD PTR ds:0x1c903c43,0x5f
  41a426:	aas    
  41a427:	sbb    eax,DWORD PTR [ebx+0x41]
  41a42a:	pop    ecx
  41a42b:	and    ebp,eax
  41a42d:	out    dx,eax
  41a42e:	inc    ecx
  41a42f:	stos   DWORD PTR es:[edi],eax
  41a430:	xchg   edi,eax
  41a431:	dec    ecx
  41a432:	shr    eax,1
  41a434:	jmp    DWORD PTR [ebx+0x7b563368]
  41a43a:	mov    dh,0x83
  41a43c:	mov    BYTE PTR [edx+0x1a13730d],ah
  41a442:	jge    0x41a4b9
  41a444:	and    edx,DWORD PTR [ebx+edi*2+0x3e]
  41a448:	sbb    BYTE PTR ds:0xdc8b0ec,bl
  41a44e:	jecxz  0x41a4bd
  41a450:	test   DWORD PTR [edi-0x4626ed06],ebp
  41a456:	stc    
  41a457:	pop    ebp
  41a458:	(bad)  
  41a459:	cmc    
  41a45a:	fnop   
  41a45c:	imul   esi,DWORD PTR [edx-0x47],0x78c23a78
  41a463:	or     bp,WORD PTR [eax-0x24]
  41a467:	pop    ss
  41a468:	lds    edx,FWORD PTR [esi+0x14]
  41a46b:	loop   0x41a428
  41a46d:	imul   edi,DWORD PTR [eax-0x436136d7],0xffffffc8
  41a474:	xor    al,0xec
  41a476:	outs   dx,BYTE PTR ds:[esi]
  41a477:	xor    ah,BYTE PTR [ecx-0x51]
  41a47a:	inc    ebp
  41a47b:	mov    bl,0xcb
  41a47d:	stos   DWORD PTR es:[edi],eax
  41a47e:	pop    esi
  41a47f:	sub    BYTE PTR [edx],ch
  41a481:	arpl   WORD PTR [edx-0x3b],si
  41a484:	mov    esi,0xeb193f77
  41a489:	aad    0xab
  41a48b:	lods   al,BYTE PTR ds:[esi]
  41a48c:	add    BYTE PTR [edi-0x66],0x78
  41a490:	add    DWORD PTR [ebx-0x77794bd6],0x778305a
  41a49a:	fcmovne st,st(2)
  41a49c:	pop    ecx
  41a49d:	pop    edx
  41a49e:	push   esp
  41a49f:	sub    cl,BYTE PTR [ebx-0x5e15d93f]
  41a4a5:	mov    eax,0xe8c55634
  41a4aa:	popf   
  41a4ab:	fidivr WORD PTR [edi+ebp*2+0x57888612]
  41a4b2:	fcmovu st,st(7)
  41a4b4:	jae    0x41a4e5
  41a4b6:	inc    esi
  41a4b7:	fcmovb st,st(5)
  41a4b9:	pop    esp
  41a4ba:	out    0x1b,al
  41a4bc:	mov    ecx,0x141064e
  41a4c1:	jg     0x41a51e
  41a4c3:	das    
  41a4c4:	jecxz  0x41a4eb
  41a4c6:	adc    eax,0xbda3c2cb
  41a4cb:	push   esp
  41a4cc:	adc    eax,0x473e3514
  41a4d1:	xchg   esi,eax
  41a4d2:	fidiv  DWORD PTR [eax]
  41a4d4:	xchg   ebp,eax
  41a4d5:	xchg   esi,eax
  41a4d6:	mov    ch,dh
  41a4d8:	add    DWORD PTR gs:[ecx],0x69
  41a4dc:	sbb    BYTE PTR [edi+0x41],dl
  41a4df:	in     al,dx
  41a4e0:	retf   0x685c
  41a4e3:	pop    ebx
  41a4e4:	inc    eax
  41a4e5:	sbb    bl,BYTE PTR [ebp+0x7082d3e4]
  41a4eb:	dec    ecx
  41a4ec:	add    esi,DWORD PTR [edx-0x5d]
  41a4ef:	and    bh,BYTE PTR [eax-0xe1d27a7]
  41a4f5:	xlat   BYTE PTR ds:[ebx]
  41a4f6:	jae    0x41a4c5
  41a4f8:	cdq    
  41a4f9:	lods   eax,DWORD PTR ds:[esi]
  41a4fa:	pop    ebx
  41a4fb:	addr16 pop ds
  41a4fd:	outs   dx,BYTE PTR ds:[esi]
  41a4fe:	xor    edx,0xffffff94
  41a501:	fwait
  41a502:	pop    ecx
  41a503:	xor    bh,BYTE PTR [ecx]
  41a505:	pcmpeqb mm1,QWORD PTR [ebx-0x6]
  41a509:	mov    al,0x36
  41a50b:	adc    DWORD PTR [edi-0x2e],ebx
  41a50e:	xchg   ebx,eax
  41a50f:	fucomip st,st(6)
  41a511:	sub    eax,0x8fc97ab7
  41a516:	mov    eax,ds:0x5304b488
  41a51b:	lods   al,BYTE PTR ds:[esi]
  41a51c:	fild   WORD PTR [ecx]
  41a51e:	retf   0x7281
  41a521:	int    0xf5
  41a523:	mov    dl,0x6c
  41a525:	icebp  
  41a526:	sub    DWORD PTR [ebx],edx
  41a528:	adc    eax,0x72e8f76
  41a52d:	cld    
  41a52e:	mov    dh,0x10
  41a530:	(bad)
  41a533:	sbb    ebp,ebp
  41a535:	pop    esi
  41a536:	outs   dx,BYTE PTR ds:[esi]
  41a537:	push   0x38061236
  41a53c:	stos   DWORD PTR es:[edi],eax
  41a53d:	inc    eax
  41a53e:	push   edi
  41a53f:	ss xchg ebp,eax
  41a541:	pop    ds
  41a542:	adc    BYTE PTR [edx],bh
  41a544:	sar    BYTE PTR [ebx+edi*1+0x13727c0],1
  41a54b:	dec    eax
  41a54c:	mov    eax,0x726986f9
  41a551:	das    
  41a552:	icebp  
  41a553:	stos   DWORD PTR es:[edi],eax
  41a554:	push   ebx
  41a555:	sbb    eax,0x42c4081f
  41a55a:	popa   
  41a55b:	callw  0xc172
  41a55f:	rol    edi,0xcd
  41a562:	xor    eax,0xf3f0deb7
  41a567:	cmc    
  41a568:	add    BYTE PTR [ebp+eax*4+0x3e],0xe8
  41a56d:	popa   
  41a56e:	iret   
  41a56f:	dec    ebx
  41a570:	jmp    0x38894412
  41a575:	bswap  ecx
  41a577:	xchg   edx,ebp
  41a579:	or     eax,0xc03dde3c
  41a57e:	xor    DWORD PTR [edi+0x33],eax
  41a581:	mov    ebp,0x59159a7c
  41a586:	(bad)  
  41a587:	xor    ebx,DWORD PTR [ebx-0x71]
  41a58a:	sub    ah,BYTE PTR [esi+0x3ec3ed9e]
  41a590:	bound  edx,QWORD PTR [edi]
  41a592:	mov    al,ds:0xc00ecf60
  41a597:	pop    esi
  41a598:	mov    bl,0xe1
  41a59a:	mov    ebx,0x8c4c4511
  41a59f:	or     DWORD PTR [ecx-0x77],edi
  41a5a2:	fld    QWORD PTR [esi-0x197d9bbc]
  41a5a8:	fucom  st(1)
  41a5aa:	ins    DWORD PTR es:[edi],dx
  41a5ab:	gs pop eax
  41a5ad:	lock pop edi
  41a5af:	xor    al,BYTE PTR ds:0x20392802
  41a5b5:	mov    ecx,0xdc83c13d
  41a5ba:	lahf   
  41a5bb:	cmp    al,0x10
  41a5bd:	xor    ecx,DWORD PTR [ecx-0x5048ce53]
  41a5c3:	retf   0x7145
  41a5c6:	xor    ebp,DWORD PTR [edx+0x6ae8fb04]
  41a5cc:	or     ebp,edi
  41a5ce:	xlat   BYTE PTR ds:[ebx]
  41a5cf:	mov    ds:0x357af7d,al
  41a5d4:	aam    0x2
  41a5d6:	and    eax,ecx
  41a5d8:	cli    
  41a5d9:	int3   
  41a5da:	or     ah,bh
  41a5dc:	aas    
  41a5dd:	scas   al,BYTE PTR es:[edi]
  41a5de:	cmp    DWORD PTR [ebp+0x3c],0x1537d187
  41a5e5:	cmp    bh,BYTE PTR [esi+0x15]
  41a5e8:	pop    ebp
  41a5e9:	ins    DWORD PTR es:[edi],dx
  41a5ea:	xchg   DWORD PTR [eax],edx
  41a5ec:	mov    edx,0x777f2cb5
  41a5f1:	dec    ebp
  41a5f2:	(bad)
  41a5f6:	and    ah,BYTE PTR [edi-0x6c17ec89]
  41a5fc:	and    eax,0x29dc53b9
  41a601:	imul   ebx,ebp,0xffffffc2
  41a604:	inc    edx
  41a605:	pop    ds
  41a606:	mov    cl,0x38
  41a608:	fwait
  41a609:	xchg   esi,eax
  41a60a:	sbb    esp,DWORD PTR [edx-0x63]
  41a60d:	lahf   
  41a60e:	xor    al,0x3c
  41a610:	push   ebx
  41a611:	stc    
  41a612:	mov    ds:0xa415b0e9,eax
  41a617:	arpl   dx,bp
  41a619:	cdq    
  41a61a:	pop    eax
  41a61b:	push   es
  41a61c:	out    0xd3,eax
  41a61e:	push   DWORD PTR [edi+0x4d]
  41a621:	cdq    
  41a622:	in     al,0x79
  41a624:	xor    eax,0x478e42cd
  41a629:	xor    bh,BYTE PTR [ebx]
  41a62b:	fisubr DWORD PTR [ebx-0x6b77c09b]
  41a631:	inc    esp
  41a632:	or     al,ch
  41a634:	hlt    
  41a635:	push   ss
  41a636:	enter  0xabbc,0x3c
  41a63a:	fs nop
  41a63c:	in     eax,0x6e
  41a63e:	mov    edi,0xb3564785
  41a643:	add    al,0xb0
  41a645:	arpl   WORD PTR [eax],ax
  41a647:	push   ebp
  41a648:	add    ebx,0x73
  41a64b:	jo     0x41a664
  41a64d:	sbb    DWORD PTR [ecx-0x603bbb5],0xedc4eddc
  41a657:	jp     0x41a5ff
  41a659:	loope  0x41a5fa
  41a65b:	jecxz  0x41a62f
  41a65d:	add    ebp,DWORD PTR [ecx+0x6a04fc5a]
  41a663:	mov    bh,0xa5
  41a665:	push   es
  41a666:	ja     0x41a6e6
  41a668:	dec    esi
  41a669:	mov    cl,0xf9
  41a66b:	sub    BYTE PTR [ebx],al
  41a66d:	xchg   edi,eax
  41a66e:	push   ebx
  41a66f:	iret   
  41a670:	pop    edx
  41a671:	je     0x41a6bb
  41a673:	jg     0x41a6e9
  41a675:	fs jge 0x41a679
  41a678:	shr    DWORD PTR es:[edi],1
  41a67b:	add    eax,0x671a9239
  41a680:	and    DWORD PTR [esi-0x1c05de13],eax
  41a686:	out    0x1d,al
  41a688:	sbb    al,0xa4
  41a68a:	mov    ?,WORD PTR [edi-0x735031ff]
  41a690:	outs   dx,BYTE PTR ds:[esi]
  41a691:	add    DWORD PTR [edi-0x52ab2fa0],eax
  41a697:	jo     0x41a641
  41a699:	xor    DWORD PTR [edi],0x37c819b7
  41a69f:	jp     0x41a6d2
  41a6a1:	adc    dh,0x64
  41a6a4:	mov    BYTE PTR [esi-0x56],bl
  41a6a7:	dec    ebx
  41a6a8:	cmp    BYTE PTR [ecx],bh
  41a6aa:	es sub bl,bh
  41a6ad:	(bad)  
  41a6ae:	js     0x41a72d
  41a6b0:	pop    ss
  41a6b1:	cmp    al,BYTE PTR [edi]
  41a6b3:	or     DWORD PTR [ebx+0x6f],edx
  41a6b6:	sub    ebp,DWORD PTR [edx+0xf]
  41a6b9:	xchg   edi,eax
  41a6ba:	jns    0x41a663
  41a6bc:	not    BYTE PTR [ebp-0x6d20a054]
  41a6c2:	addr16 pop esp
  41a6c4:	imul   ebx,DWORD PTR ds:0xe9d286c2,0xd4a4857e
  41a6ce:	iret   
  41a6cf:	cmc    
  41a6d0:	int    0x63
  41a6d2:	sub    edi,edx
  41a6d4:	fisub  WORD PTR [ecx-0x6fc9c5b2]
  41a6da:	lea    eax,[edx-0x53]
  41a6dd:	dec    ebx
  41a6de:	adc    eax,0xcab40a91
  41a6e3:	mov    al,ds:0x96761c09
  41a6e8:	pop    es
  41a6e9:	hlt    
  41a6ea:	sub    BYTE PTR [ecx],ah
  41a6ec:	loope  0x41a6e7
  41a6ee:	add    dh,BYTE PTR [edx+0xa]
  41a6f1:	pop    es
  41a6f2:	fsub   DWORD PTR [ecx+0x6ee3f80e]
  41a6f8:	xchg   DWORD PTR [ebp+0x3862c15b],ebx
  41a6fe:	(bad)  
  41a6ff:	(bad)  
  41a700:	jp     0x41a6ec
  41a702:	mov    ds:0x98fd622b,eax
  41a707:	popf   
  41a708:	jnp    0x41a6f6
  41a70a:	cmc    
  41a70b:	dec    esi
  41a70c:	adc    ebp,DWORD PTR [ebp+0x35ac96b1]
  41a712:	push   0x1e21af20
  41a717:	inc    ebp
  41a718:	mov    ecx,0xcce0db02
  41a71d:	loopne 0x41a774
  41a71f:	sub    al,0x2c
  41a721:	push   ss
  41a722:	dec    ebx
  41a723:	push   cs
  41a724:	cmp    bh,BYTE PTR [ecx]
  41a726:	pusha  
  41a727:	mov    ebp,0x87626c07
  41a72c:	xchg   BYTE PTR [ebx],bh
  41a72e:	and    DWORD PTR ds:0xddc7e90e,ebx
  41a734:	pop    ss
  41a735:	stos   BYTE PTR es:[edi],al
  41a736:	pop    ecx
  41a737:	lea    eax,[edx]
  41a739:	not    BYTE PTR [ebp+eax*2+0x5b]
  41a73d:	stos   DWORD PTR es:[edi],eax
  41a73e:	(bad)  
  41a741:	ret    0xe0e4
  41a744:	ins    DWORD PTR es:[edi],dx
  41a745:	(bad)  
  41a746:	ss push ss
  41a748:	fs jno 0x41a789
  41a74b:	shl    DWORD PTR [ebp+0x63],cl
  41a74e:	jge    0x41a73f
  41a750:	ins    BYTE PTR es:[edi],dx
  41a751:	and    ecx,esp
  41a753:	jmp    0x41a705
  41a755:	inc    esi
  41a756:	sub    ebp,DWORD PTR [esi+eiz*1+0x70]
  41a75a:	test   eax,0x67b35bf
  41a75f:	stos   DWORD PTR es:[edi],eax
  41a760:	fmul   st,st(0)
  41a762:	dec    edi
  41a763:	(bad)  
  41a764:	mov    ebp,0x25e67a90
  41a769:	retf   
  41a76a:	rol    DWORD PTR [edi+0xa],cl
  41a76d:	mov    al,ds:0x1beb7401
  41a772:	mov    ah,0xbe
  41a774:	dec    edx
  41a775:	popa   
  41a776:	test   al,0x88
  41a778:	jge    0x41a772
  41a77a:	out    0x18,eax
  41a77c:	fadd   QWORD PTR [esi]
  41a77e:	xor    al,BYTE PTR [esi-0x3c4271a1]
  41a784:	in     al,0x85
  41a786:	test   eax,0x7f227f0e
  41a78b:	addr16 retf 0xfbd9
  41a78f:	jns    0x41a80f
  41a791:	or     ebp,DWORD PTR [eax]
  41a793:	mul    DWORD PTR [edi]
  41a795:	mov    ah,0x4a
  41a797:	scas   al,BYTE PTR es:[edi]
  41a798:	loop   0x41a7dd
  41a79a:	cmp    edx,DWORD PTR [esi+0xc6ef066]
  41a7a0:	das    
  41a7a1:	or     ch,dl
  41a7a3:	xchg   edi,eax
  41a7a4:	ret    0x142a
  41a7a7:	ficomp WORD PTR [ecx+0x51]
  41a7aa:	(bad)  
  41a7ac:	dec    edi
  41a7ad:	in     al,0xd3
  41a7af:	and    al,0x95
  41a7b1:	lods   eax,DWORD PTR ds:[esi]
  41a7b2:	inc    edi
  41a7b3:	sahf   
  41a7b4:	imul   edi,DWORD PTR [ebx],0x1c4316bc
  41a7ba:	jle    0x41a797
  41a7bc:	push   ss
  41a7bd:	repz push edi
  41a7bf:	leave  
  41a7c0:	in     eax,0xa7
  41a7c2:	sahf   
  41a7c3:	cwde   
  41a7c4:	retf   
  41a7c5:	dec    BYTE PTR [ebp-0xd6c0bf5]
  41a7cb:	mov    ds:0xac2f1dc8,eax
  41a7d0:	ja     0x41a7df
  41a7d2:	pop    ebp
  41a7d3:	sub    BYTE PTR [esi-0x6efc296c],0xf
  41a7da:	and    esp,esp
  41a7dc:	or     BYTE PTR [edx-0x8c61c91],dh
  41a7e2:	out    0xa0,al
  41a7e4:	fwait
  41a7e5:	out    dx,al
  41a7e6:	jno    0x41a7b8
  41a7e8:	sbb    DWORD PTR [ecx-0x16b5d91b],eax
  41a7ee:	sub    ebx,ebx
  41a7f0:	(bad)  
  41a7f1:	repnz arpl di,si
  41a7f4:	jns    0x41a865
  41a7f6:	pop    ebp
  41a7f7:	aaa    
  41a7f8:	fwait
  41a7f9:	jb     0x41a7c0
  41a7fb:	cdq    
  41a7fc:	js     0x41a7dd
  41a7fe:	ss call 0x1018:0xf08fdf72
  41a806:	(bad)  [edi-0x3e]
  41a809:	pop    es
  41a80a:	cmp    esp,DWORD PTR [edx+0x59]
  41a80d:	cmp    eax,0xf19393b1
  41a812:	fidivr DWORD PTR [edx-0x50b11d53]
  41a818:	mov    edi,0xaa83dde2
  41a81d:	aaa    
  41a81e:	xchg   ecx,eax
  41a81f:	add    cl,BYTE PTR [edi]
  41a821:	outs   dx,DWORD PTR ds:[esi]
  41a822:	xor    al,0x70
  41a824:	sub    eax,DWORD PTR [ebx]
  41a826:	sub    al,0x83
  41a828:	cdq    
  41a829:	pop    eax
  41a82a:	pop    edx
  41a82b:	dec    esp
  41a82c:	dec    ebx
  41a82d:	(bad)  
  41a82e:	ins    DWORD PTR es:[edi],dx
  41a82f:	call   FWORD PTR [ecx]
  41a831:	imul   ebx,ebp,0x8e2218bb
  41a837:	int    0x27
  41a839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a83a:	les    edi,FWORD PTR [ebx+0x72fd5423]
  41a840:	outs   dx,BYTE PTR ds:[esi]
  41a841:	stos   BYTE PTR es:[edi],al
  41a842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a843:	rcr    DWORD PTR [esi],1
  41a845:	pop    ds
  41a846:	rol    DWORD PTR [edi],0x68
  41a849:	and    BYTE PTR [ebx],ah
  41a84b:	stos   DWORD PTR es:[edi],eax
  41a84c:	xchg   BYTE PTR ds:0x29504aae,cl
  41a852:	mov    ecx,DWORD PTR [edi-0x3d]
  41a855:	les    ebp,FWORD PTR [ebp-0x6743dfc7]
  41a85b:	cmc    
  41a85c:	xor    ebx,edx
  41a85e:	mov    edi,gs
  41a860:	hlt    
  41a861:	in     al,0xd4
  41a863:	or     eax,0xe3da1331
  41a868:	neg    BYTE PTR ss:[edi-0x13]
  41a86c:	and    ch,BYTE PTR [eax*2+0x53de8c21]
  41a873:	push   ebx
  41a874:	gs in  eax,0x9
  41a877:	inc    edi
  41a878:	retf   0xd887
  41a87b:	pusha  
  41a87c:	push   esp
  41a87d:	pop    edx
  41a87e:	cmc    
  41a87f:	dec    ecx
  41a880:	imul   esi,edx,0xffffffa7
  41a883:	loope  0x41a8f3
  41a885:	inc    ecx
  41a886:	mov    al,0x30
  41a888:	imul   ebp,DWORD PTR [ecx+0x6],0xf1ade14a
  41a88f:	cdq    
  41a890:	ins    DWORD PTR es:[edi],dx
  41a891:	rol    ecx,0xa8
  41a894:	jmp    0x4912:0xefbba510
  41a89b:	(bad)  
  41a89c:	enter  0x15a9,0xe2
  41a8a0:	out    0xc6,al
  41a8a2:	sbb    esi,edi
  41a8a4:	dec    ebp
  41a8a5:	xchg   edi,eax
  41a8a6:	icebp  
  41a8a7:	mov    ch,bh
  41a8a9:	sbb    ah,dl
  41a8ab:	mov    esi,0xc4b4109c
  41a8b0:	cmp    DWORD PTR [edx],edi
  41a8b2:	in     eax,0xfa
  41a8b4:	lods   eax,DWORD PTR ds:[esi]
  41a8b5:	xchg   BYTE PTR [edx-0x34bca5da],dh
  41a8bb:	jno    0x41a8f5
  41a8bd:	sbb    DWORD PTR [edx],edx
  41a8bf:	les    ecx,FWORD PTR [esp+0x50]
  41a8c3:	shl    edx,1
  41a8c5:	mov    ?,WORD PTR [eax-0x5703e63c]
  41a8cb:	or     bl,BYTE PTR [edx+ecx*2-0x78a1c8cf]
  41a8d2:	in     eax,0x9c
  41a8d4:	rol    BYTE PTR [ecx+0x51],1
  41a8d7:	or     BYTE PTR [edx-0x4e27a166],ch
  41a8dd:	mov    eax,ds:0xf9ee378e
  41a8e2:	jg     0x41a890
  41a8e4:	ds jge 0x41a928
  41a8e7:	lock bound ecx,QWORD PTR [ebp+0x6c7bd8c1]
  41a8ee:	fsub   QWORD PTR ds:0x77af2dd5
  41a8f4:	jnp    0x41a96d
  41a8f6:	rcl    BYTE PTR [esp+ebx*1-0x67aa626a],1
  41a8fd:	or     ecx,ecx
  41a8ff:	xor    eax,0xad67dbee
  41a904:	aad    0x4b
  41a906:	jbe    0x41a919
  41a908:	mov    ?,esi
  41a90a:	inc    ebp
  41a90b:	jne    0x41a8e1
  41a90d:	mov    edx,ebp
  41a90f:	jl     0x41a89a
  41a911:	cmp    ecx,DWORD PTR [ebx+eiz*2]
  41a914:	or     DWORD PTR [ecx+edx*1-0x6a3f82a6],ecx
  41a91b:	(bad)  
  41a91d:	adc    esp,esp
  41a91f:	out    dx,al
  41a920:	add    DWORD PTR [edi-0x13],eax
  41a923:	jmp    DWORD PTR [edx+edx*1]
  41a926:	aam    0x93
  41a928:	dec    edi
  41a929:	xlat   BYTE PTR ds:[ebx]
  41a92a:	addr16 jl 0x41a946
  41a92d:	dec    esi
  41a92e:	add    al,0xf9
  41a930:	scas   eax,DWORD PTR es:[edi]
  41a931:	xchg   edx,eax
  41a932:	shl    al,cl
  41a934:	add    al,0x6a
  41a936:	pop    ecx
  41a937:	sbb    ebp,DWORD PTR ds:0xf3e0b69f
  41a93d:	or     eax,0x6c4453a6
  41a942:	int    0x76
  41a944:	inc    ebp
  41a945:	inc    edx
  41a946:	leave  
  41a947:	bswap  esp
  41a949:	mov    ah,0xbd
  41a94b:	mov    ecx,0xfe66e0d3
  41a950:	das    
  41a951:	mov    eax,fs:0x86b4a97a
  41a957:	mov    dh,0x76
  41a959:	cmp    ch,BYTE PTR es:[edx+0x7cc0d7cd]
  41a960:	ret    
  41a961:	mov    cl,0xc9
  41a963:	in     eax,0xa
  41a965:	pop    ss
  41a966:	or     eax,0x657ba84e
  41a96b:	mov    BYTE PTR [edi-0x42650c4b],dl
  41a971:	data16 cmp cl,dl
  41a974:	aaa    
  41a975:	jbe    0x41a925
  41a977:	inc    ebp
  41a978:	jo     0x41a9f5
  41a97a:	dec    edx
  41a97b:	jnp    0x41a968
  41a97d:	shl    DWORD PTR [esi-0x58a98b2e],cl
  41a983:	fimul  DWORD PTR [ebx-0x70]
  41a986:	jmp    0x7d05e3fa
  41a98b:	dec    edx
  41a98c:	fs and eax,0xe463f5f3
  41a992:	and    edx,DWORD PTR [eax-0xe]
  41a995:	adc    eax,0x2ca728b8
  41a99a:	pop    esp
  41a99b:	or     dh,al
  41a99d:	xor    eax,0x5ad686d8
  41a9a2:	fild   DWORD PTR [ebx+0x32dc1dd4]
  41a9a8:	xor    esi,DWORD PTR [edi+0x4665c112]
  41a9ae:	call   0xce59b3b2
  41a9b3:	fsubr  QWORD PTR [ebp+0x30]
  41a9b6:	sbb    al,0xe5
  41a9b8:	add    esi,ebx
  41a9ba:	mov    cl,0x2
  41a9bc:	mov    ch,dh
  41a9be:	sub    esp,DWORD PTR [ecx+0x1aa95f87]
  41a9c4:	das    
  41a9c5:	push   edx
  41a9c6:	iret   
  41a9c7:	xor    eax,0x5f2e03d
  41a9cc:	frstor [ecx-0x69]
  41a9cf:	nop
  41a9d0:	add    dh,dh
  41a9d2:	mov    dl,0x8c
  41a9d4:	aam    0xc5
  41a9d6:	popa   
  41a9d7:	push   ecx
  41a9d8:	ja     0x41a9cd
  41a9da:	fistp  WORD PTR [edx+ecx*4-0x3f]
  41a9de:	loopne 0x41aa4c
  41a9e0:	cmp    eax,0xfd3b8a62
  41a9e5:	aaa    
  41a9e6:	jne    0x41aa24
  41a9e8:	xlat   BYTE PTR ds:[ebx]
  41a9e9:	and    ecx,DWORD PTR [ebx]
  41a9eb:	cmc    
  41a9ec:	(bad)  
  41a9ee:	(bad)  
  41a9ef:	and    bl,BYTE PTR [eax-0x1e]
  41a9f2:	les    ebx,FWORD PTR [edi-0x68]
  41a9f5:	xor    eax,0x58ae848d
  41a9fa:	pusha  
  41a9fb:	out    0x11,al
  41a9fd:	xor    eax,DWORD PTR [edx-0xebe61a0]
  41aa03:	inc    esp
  41aa04:	test   DWORD PTR [esi+0x706204e4],0xd32dea1a
  41aa0e:	shr    esi,1
  41aa10:	inc    edx
  41aa11:	in     al,dx
  41aa12:	call   0x2303:0xcd289233
  41aa19:	popa   
  41aa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa1b:	dec    ebx
  41aa1c:	sub    edx,esp
  41aa1e:	xchg   edx,eax
  41aa1f:	cwde   
  41aa20:	cmp    bh,BYTE PTR [eax+0x11876e1e]
  41aa26:	xchg   esi,eax
  41aa27:	pop    edi
  41aa28:	scas   al,BYTE PTR es:[edi]
  41aa29:	lea    ecx,[ebx+0x29]
  41aa2c:	xor    al,0x92
  41aa2e:	push   edx
  41aa2f:	js     0x41a9f7
  41aa31:	cs jmp 0x41aa9a
  41aa34:	jle    0x41aa7b
  41aa36:	in     al,0xdb
  41aa38:	clc    
  41aa39:	mov    al,0x96
  41aa3b:	or     DWORD PTR [esi+0x45],eax
  41aa3e:	in     al,dx
  41aa3f:	sub    ecx,DWORD PTR [ebx]
  41aa41:	gs inc esi
  41aa44:	in     al,dx
  41aa45:	rol    BYTE PTR [edx*8+0x70883900],0xcf
  41aa4d:	cwde   
  41aa4e:	fadd   QWORD PTR [ebx]
  41aa50:	pop    eax
  41aa51:	dec    ebx
  41aa52:	hlt    
  41aa53:	sbb    esp,DWORD PTR [ecx-0x1f202504]
  41aa59:	push   ebx
  41aa5a:	jp     0x41aaa8
  41aa5c:	push   ecx
  41aa5d:	sbb    BYTE PTR [ebp+0x4c],dl
  41aa60:	inc    edi
  41aa61:	ins    DWORD PTR es:[edi],dx
  41aa62:	jmp    0x4774:0xbde4979b
  41aa69:	push   edx
  41aa6a:	mov    ds:0x13561b27,eax
  41aa6f:	push   cs
  41aa70:	pusha  
  41aa71:	enter  0xbc22,0xbe
  41aa75:	test   al,0x76
  41aa77:	in     al,dx
  41aa78:	retf   0x440d
  41aa7b:	(bad)  
  41aa7c:	lock dec ebx
  41aa7e:	xor    al,0xd7
  41aa80:	jmp    0x41aa3d
  41aa82:	lahf   
  41aa83:	mov    ds:0x4f8f1cf2,al
  41aa88:	nop
  41aa89:	push   ds
  41aa8a:	sub    esp,DWORD PTR [ebp-0x5a]
  41aa8d:	scas   eax,DWORD PTR es:[edi]
  41aa8e:	dec    ebp
  41aa8f:	(bad)
  41aa92:	ficomp DWORD PTR [ecx+0x50]
  41aa95:	test   al,0xc6
  41aa97:	adc    DWORD PTR [edx],ebx
  41aa99:	jp     0x41aad5
  41aa9b:	pop    ebx
  41aa9c:	jae    0x41aa3c
  41aa9e:	(bad)  
  41aa9f:	popf   
  41aaa0:	fsubrp st(6),st
  41aaa2:	xor    al,0xcc
  41aaa4:	sub    eax,0xcabef6bb
  41aaa9:	mov    ebp,0xc27ff6e
  41aaae:	fisub  WORD PTR [edx+edi*8-0x33c7b627]
  41aab5:	jmp    0xbb9:0xb2e81a72
  41aabc:	jle    0x41aa67
  41aabe:	repz xchg ebx,esp
  41aac1:	sbb    eax,0xff2ac571
  41aac6:	es pop esi
  41aac9:	mov    ch,0xd0
  41aacb:	(bad)  
  41aacc:	sar    BYTE PTR [edx-0x59c5305],cl
  41aad2:	xchg   BYTE PTR [eax-0x3925ae27],cl
  41aad8:	ret    
  41aad9:	pushf  
  41aada:	cmp    al,BYTE PTR ds:[esp+eax*4]
  41aade:	add    edi,eax
  41aae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae1:	rol    BYTE PTR [eax],cl
  41aae3:	pop    ss
  41aae4:	jae    0x41aa72
  41aae6:	inc    esp
  41aae7:	fidivr WORD PTR [eax]
  41aae9:	dec    edi
  41aaea:	rcl    BYTE PTR [bp+di],1
  41aaed:	leave  
  41aaee:	add    edx,0x254a5e6f
  41aaf4:	cmp    eax,0x3b411123
  41aaf9:	pop    ss
  41aafa:	push   es
  41aafb:	add    edi,DWORD PTR [edx-0x2dd0e368]
  41ab01:	(bad)  
  41ab02:	mov    ebp,DWORD PTR [edx+0x5a]
  41ab05:	inc    edx
  41ab06:	ss (bad) 
  41ab09:	inc    esi
  41ab0a:	neg    ecx
  41ab0c:	ds and eax,0x99d33d2f
  41ab12:	fild   DWORD PTR [esi-0x6fccb406]
  41ab18:	fimul  DWORD PTR [edx]
  41ab1a:	inc    ecx
  41ab1b:	xchg   esp,eax
  41ab1c:	push   ebp
  41ab1d:	jnp    0x41aac6
  41ab1f:	sub    edx,DWORD PTR [eax+ecx*1-0x5c]
  41ab23:	test   eax,0x79ee34e3
  41ab28:	shl    BYTE PTR [edi],cl
  41ab2a:	or     al,0x92
  41ab2c:	cmp    edx,ebp
  41ab2e:	or     bh,BYTE PTR [esi+0x6c]
  41ab31:	sti    
  41ab32:	sub    dl,BYTE PTR [ebx-0xb8ac2af]
  41ab38:	cs popa 
  41ab3a:	sbb    eax,0xa723b0b9
  41ab3f:	out    dx,eax
  41ab40:	adc    BYTE PTR [eax+edi*1],al
  41ab43:	jae    0x41ab0a
  41ab45:	xchg   BYTE PTR [ebx],bh
  41ab47:	iret   
  41ab48:	sbb    BYTE PTR [edx-0x1350b883],cl
  41ab4e:	jbe    0x41ab1b
  41ab50:	nop
  41ab51:	add    BYTE PTR [esi-0x48],dl
  41ab54:	sti    
  41ab55:	xchg   ebx,eax
  41ab56:	retf   
  41ab57:	add    al,0x3f
  41ab59:	or     esi,ebp
  41ab5b:	(bad)  
  41ab5c:	lea    edi,[edi]
  41ab5e:	mov    ah,0x6
  41ab60:	push   ds
  41ab61:	addr16 popf 
  41ab63:	test   eax,0x2fb3f36b
  41ab68:	push   esi
  41ab69:	mov    ds:0xfcef58e3,eax
  41ab6e:	into   
  41ab6f:	imul   esi,DWORD PTR [esi-0x64],0x7e
  41ab73:	dec    eax
  41ab74:	ds mov esp,0x96e95f26
  41ab7a:	enter  0x71,0xbc
  41ab7e:	sub    bh,BYTE PTR [esi+0x64]
  41ab81:	icebp  
  41ab82:	aad    0xb1
  41ab84:	jo     0x41abac
  41ab86:	jbe    0x41ac01
  41ab88:	repnz pusha 
  41ab8a:	cmp    eax,0x37bacbe0
  41ab8f:	and    eax,0x86231257
  41ab94:	xor    eax,0x8d95c5e7
  41ab99:	jge    0x41ab88
  41ab9b:	dec    eax
  41ab9c:	and    DWORD PTR [eax+0x20],ecx
  41ab9f:	push   cs
  41aba0:	gs mov ebp,0x186af070
  41aba6:	xor    al,0xee
  41aba8:	push   esp
  41aba9:	fisub  DWORD PTR [edi+0x3e853db]
  41abaf:	lahf   
  41abb0:	or     dh,ch
  41abb2:	and    ebp,DWORD PTR [eax+0x68606cd0]
  41abb8:	mov    dl,0xb2
  41abba:	mov    al,ds:0xeb93c2fe
  41abbf:	pop    esp
  41abc0:	(bad)  
  41abc2:	dec    edx
  41abc3:	inc    edx
  41abc4:	(bad)  
  41abc5:	or     al,0x64
  41abc7:	repz ret 
  41abc9:	idiv   bl
  41abcb:	sub    ecx,DWORD PTR fs:[edx+0x6388ded5]
  41abd2:	cmp    al,0xbe
  41abd4:	jmp    0x6b7d:0x13a2bd5d
  41abdb:	mov    ebx,DWORD PTR [edi]
  41abdd:	inc    esp
  41abde:	test   cl,dl
  41abe0:	jecxz  0x41aba8
  41abe2:	sub    eax,0xd19c9ffb
  41abe7:	daa    
  41abe8:	xor    DWORD PTR [edx],esp
  41abea:	sub    eax,0x918b4d59
  41abef:	test   DWORD PTR [ebp-0x729b1559],ebp
  41abf5:	loop   0x41abed
  41abf7:	mov    edi,0x3fae930b
  41abfc:	xlat   BYTE PTR ds:[ebx]
  41abfd:	jae    0x41abca
  41abff:	fs js  0x41abb3
  41ac02:	jno    0x41abfa
  41ac04:	mov    ds:0x947c825b,eax
  41ac09:	aad    0xba
  41ac0b:	or     DWORD PTR [edx+0x2b9a29d4],esp
  41ac11:	inc    bl
  41ac13:	bound  ebx,QWORD PTR [edi+0x57e4c8dd]
  41ac19:	mov    edx,0x821bb4c7
  41ac1e:	out    dx,al
  41ac1f:	xor    al,0x6b
  41ac21:	fcom   QWORD PTR [ecx+0x52177bc0]
  41ac27:	leave  
  41ac28:	mov    eax,0x57a94707
  41ac2d:	sub    ebx,0x11
  41ac30:	push   ds
  41ac31:	pop    esp
  41ac32:	dec    ebx
  41ac33:	or     edi,DWORD PTR [ecx]
  41ac35:	mov    edx,0xf5b1bdd9
  41ac3a:	imul   ebp,DWORD PTR [ecx+eiz*2],0x1e7ba832
  41ac41:	mov    eax,ds:0xae2d4fec
  41ac46:	popf   
  41ac47:	jl     0x41ac5d
  41ac49:	or     eax,0x23f6155f
  41ac4e:	pop    eax
  41ac4f:	xchg   edx,eax
  41ac50:	adc    edi,DWORD PTR [ecx+0x24]
  41ac53:	mov    ds:0x904be9aa,eax
  41ac58:	sahf   
  41ac59:	retf   0xd650
  41ac5c:	dec    esp
  41ac5d:	push   ebp
  41ac5e:	ret    
  41ac5f:	xchg   DWORD PTR [ebx],esi
  41ac61:	push   esp
  41ac62:	out    0xde,al
  41ac64:	mov    cs,ebx
  41ac66:	ins    BYTE PTR es:[edi],dx
  41ac67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac68:	mov    ecx,0xda712579
  41ac6d:	inc    edx
  41ac6e:	inc    ecx
  41ac6f:	jne    0x41ac1e
  41ac71:	xchg   ecx,eax
  41ac72:	jnp    0x41ac6d
  41ac74:	mov    eax,DWORD PTR [ecx-0x58e592f6]
  41ac7a:	in     eax,0xc5
  41ac7c:	jnp    0x41ac83
  41ac7e:	(bad)  
  41ac7f:	pop    edx
  41ac80:	dec    ebx
  41ac81:	pushf  
  41ac82:	enter  0x63b5,0x5
  41ac86:	mov    eax,0x6bc5cea3
  41ac8b:	mov    al,0x93
  41ac8d:	retf   0xe4e3
  41ac90:	idiv   DWORD PTR [ebp+0x1d]
  41ac93:	clc    
  41ac94:	pop    ecx
  41ac95:	pop    es
  41ac96:	dec    ebp
  41ac97:	(bad)  
  41ac98:	sbb    cl,ch
  41ac9a:	or     DWORD PTR [ebx],edi
  41ac9c:	sub    edx,esp
  41ac9e:	(bad)  
  41ac9f:	test   esp,0x264382b
  41aca5:	push   edx
  41aca6:	or     al,0xb9
  41aca8:	cdq    
  41aca9:	push   es
  41acaa:	enter  0x72b9,0xbe
  41acae:	adc    al,0x1e
  41acb0:	in     al,dx
  41acb1:	daa    
  41acb2:	pop    ecx
  41acb3:	outs   dx,DWORD PTR ds:[esi]
  41acb4:	cdq    
  41acb5:	add    esp,esp
  41acb7:	push   cs
  41acb8:	into   
  41acb9:	jb     0x41ad0b
  41acbb:	out    dx,eax
  41acbc:	les    eax,FWORD PTR ds:0xb0c21c77
  41acc2:	jae    0x41ac91
  41acc4:	fadd   st(3),st
  41acc6:	xchg   DWORD PTR [eax-0x1ed5d358],edx
  41accc:	nop
  41accd:	fisubr DWORD PTR [ebp+ebp*8-0x486f180f]
  41acd4:	pusha  
  41acd5:	cmp    bh,BYTE PTR [ecx]
  41acd7:	jmp    0x41ad3b
  41acd9:	adc    DWORD PTR [ebx-0x34],edx
  41acdc:	inc    ebx
  41acdd:	add    al,0xf9
  41acdf:	mov    ecx,0x7254a6e9
  41ace4:	out    0xd1,eax
  41ace6:	push   es
  41ace7:	enter  0x9464,0x6
  41aceb:	clc    
  41acec:	mov    cl,0x32
  41acee:	mov    al,0xbb
  41acf0:	mov    ds:0xf6904c20,al
  41acf5:	pop    eax
  41acf6:	dec    esi
  41acf7:	(bad)  
  41acf8:	bound  esi,QWORD PTR [esi-0x30]
  41acfb:	icebp  
  41acfc:	sub    al,0xb7
  41acfe:	mov    bl,BYTE PTR [ebx-0x51]
  41ad01:	jns    0x41ad73
  41ad03:	(bad)  
  41ad04:	dec    edi
  41ad05:	nop
  41ad06:	or     dl,ah
  41ad08:	stos   DWORD PTR es:[edi],eax
  41ad09:	adc    al,0x62
  41ad0b:	adc    DWORD PTR [ebx-0x3d],esi
  41ad0e:	xchg   edx,eax
  41ad0f:	pop    edx
  41ad10:	push   ebx
  41ad11:	lods   eax,DWORD PTR ds:[esi]
  41ad12:	mov    ecx,DWORD PTR [edi+0x6b]
  41ad15:	repnz adc dl,BYTE PTR [esi]
  41ad18:	add    ecx,ebp
  41ad1a:	push   eax
  41ad1b:	stc    
  41ad1c:	ins    DWORD PTR es:[edi],dx
  41ad1d:	mov    ch,0xe1
  41ad1f:	pop    es
  41ad20:	std    
  41ad21:	adc    eax,0xdc57cc4b
  41ad26:	inc    esi
  41ad27:	sbb    al,dh
  41ad29:	out    dx,al
  41ad2a:	sub    DWORD PTR [edx+0x66f906e6],eax
  41ad30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad31:	pop    ecx
  41ad32:	xchg   ecx,eax
  41ad33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad34:	or     eax,0x567342a4
  41ad39:	push   es
  41ad3a:	sbb    eax,0xd182d893
  41ad3f:	pop    es
  41ad40:	xor    ebx,DWORD PTR [esp+edx*8-0x6d139d14]
  41ad47:	xor    al,0x72
  41ad49:	cli    
  41ad4a:	xchg   BYTE PTR [esi-0x52c3dbe0],bl
  41ad50:	xlat   BYTE PTR ds:[ebx]
  41ad51:	mov    bh,0x69
  41ad53:	pushf  
  41ad54:	int    0x97
  41ad56:	sbb    BYTE PTR [edx],cl
  41ad58:	stos   BYTE PTR es:[edi],al
  41ad59:	inc    ebp
  41ad5a:	jle    0x41ad16
  41ad5c:	in     eax,0x23
  41ad5e:	popf   
  41ad5f:	test   al,0x57
  41ad61:	mov    ch,0xd9
  41ad63:	dec    esi
  41ad64:	fiadd  DWORD PTR [eax-0x39]
  41ad67:	mov    ds:0xbdcd4417,eax
  41ad6c:	retf   0x63cc
  41ad6f:	mov    bl,0x3f
  41ad71:	dec    ecx
  41ad72:	repnz idiv BYTE PTR ds:0xee44d245
  41ad79:	dec    ebx
  41ad7a:	fnsave [ecx]
  41ad7c:	repz ret 
  41ad7e:	pop    edi
  41ad7f:	jmp    0x7e72ca79
  41ad84:	pusha  
  41ad85:	int    0xab
  41ad87:	mov    al,fs:0xf8ae76f6
  41ad8d:	in     al,0x95
  41ad8f:	daa    
  41ad90:	es inc edx
  41ad92:	dec    esi
  41ad93:	cs pop edx
  41ad95:	stos   DWORD PTR es:[edi],eax
  41ad96:	xchg   BYTE PTR [edx+edi*8],ch
  41ad99:	push   0x2501a0f6
  41ad9e:	out    dx,eax
  41ad9f:	popa   
  41ada0:	dec    ebx
  41ada1:	inc    ebp
  41ada2:	lds    esi,FWORD PTR ds:0x197b1093
  41ada8:	cwde   
  41ada9:	mov    ch,0xae
  41adab:	dec    esi
  41adac:	(bad)  
  41adad:	dec    ebp
  41adae:	xchg   esi,eax
  41adaf:	or     cl,BYTE PTR ds:0x6ff9fa7
  41adb5:	sbb    ebx,DWORD PTR [ecx]
  41adb7:	mov    eax,ds:0xacebc330
  41adbc:	mov    WORD PTR [eax-0x43],ds
  41adbf:	shr    cl,cl
  41adc1:	lock loop 0x41ae2f
  41adc4:	cs inc bx
  41adc7:	loop   0x41ad71
  41adc9:	imul   DWORD PTR [edx-0x19]
  41adcc:	icebp  
  41adcd:	xchg   ebp,eax
  41adce:	and    DWORD PTR [ebp+ebx*4+0x1a69d9a1],edx
  41add5:	dec    ecx
  41add6:	sbb    eax,0x764c35b3
  41addb:	mov    ebx,0xb2c6b2db
  41ade0:	xchg   ebx,eax
  41ade1:	aaa    
  41ade2:	inc    esi
  41ade3:	icebp  
  41ade4:	xor    DWORD PTR [edx+0x5a5626be],esi
  41adea:	jmp    0xcfca:0x1521c3c3
  41adf1:	(bad)  
  41adf2:	xchg   esi,eax
  41adf3:	sub    DWORD PTR [ebx],eax
  41adf5:	je     0x41ae68
  41adf7:	lods   eax,DWORD PTR ds:[esi]
  41adf8:	cmc    
  41adf9:	aam    0x3c
  41adfb:	(bad)  
  41adfc:	mov    ebp,0x859b6a5e
  41ae01:	test   eax,0x323a0105
  41ae06:	and    bl,bh
  41ae08:	mov    dl,0xb
  41ae0a:	(bad)  [eax]
  41ae0c:	sbb    eax,0x16f468cf
  41ae11:	dec    ebx
  41ae12:	pop    esp
  41ae13:	cmp    DWORD PTR [ebx-0x5f],0xffffff94
  41ae17:	and    BYTE PTR [edx+0x33],cl
  41ae1a:	mov    ds:0xa01088a8,eax
  41ae1f:	lds    ebp,FWORD PTR [ebx-0x61f924]
  41ae25:	test   BYTE PTR cs:[ebp-0x396e90ce],al
  41ae2c:	mov    dh,0x9a
  41ae2e:	repnz imul esp,DWORD PTR [edi+0x2c],0xe7daa77
  41ae36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae37:	mov    edi,0x8558943
  41ae3c:	mov    edx,DWORD PTR [ebp+0x8]
  41ae3f:	mov    ebx,DWORD PTR [ebp-0x58]
  41ae42:	add    edx,0x5708f8
  41ae48:	imul   edx,ebx
  41ae4b:	mov    DWORD PTR [ebp-0x58],edx
  41ae4e:	mov    edx,DWORD PTR [ebp+0x8]
  41ae51:	mov    ebx,DWORD PTR [ebp-0x54]
  41ae54:	add    edx,0x64f8da
  41ae5a:	or     edx,ebx
  41ae5c:	mov    DWORD PTR [ebp-0x54],edx
  41ae5f:	mov    edx,DWORD PTR [ebp+0x8]
  41ae62:	mov    ebx,DWORD PTR [ebp-0x50]
  41ae65:	add    edx,ecx
  41ae67:	xor    edx,ebx
  41ae69:	mov    DWORD PTR [ebp-0x50],edx
  41ae6c:	mov    edx,DWORD PTR [ebp+0x8]
  41ae6f:	mov    ebx,DWORD PTR [ebp-0x4c]
  41ae72:	add    edx,edi
  41ae74:	and    edx,ebx
  41ae76:	mov    DWORD PTR [ebp-0x4c],edx
  41ae79:	mov    edx,DWORD PTR [ebp+0x8]
  41ae7c:	mov    ebx,DWORD PTR [ebp-0x48]
  41ae7f:	lea    edx,[ebx+edx*1+0x241fc1f]
  41ae86:	mov    DWORD PTR [ebp-0x48],edx
  41ae89:	mov    edx,DWORD PTR [ebp+0x8]
  41ae8c:	mov    ebx,0xfa5e15e2
  41ae91:	sub    ebx,edx
  41ae93:	add    ebx,DWORD PTR [ebp-0x44]
  41ae96:	mov    DWORD PTR [ebp-0x44],ebx
  41ae99:	mov    edx,DWORD PTR [ebp+0x8]
  41ae9c:	xor    edx,eax
  41ae9e:	add    edx,esi
  41aea0:	jne    0x418aa0
  41aea6:	mov    edx,DWORD PTR [ebp-0x10]
  41aea9:	mov    DWORD PTR [ebp+0x8],edx
  41aeac:	jmp    0x41f633
  41aeb1:	mov    edx,DWORD PTR [ebp+0x8]
  41aeb4:	mov    ebx,DWORD PTR [ebp-0x8]
  41aeb7:	xor    edx,eax
  41aeb9:	xor    ebx,eax
  41aebb:	sub    edx,ebx
  41aebd:	sub    edx,esi
  41aebf:	xor    edx,eax
  41aec1:	mov    DWORD PTR [ebp+0x8],edx
  41aec4:	mov    edx,DWORD PTR [ebp+0x8]
  41aec7:	mov    ebx,DWORD PTR [ebp-0x58]
  41aeca:	add    edx,0x5708f8
  41aed0:	imul   edx,ebx
  41aed3:	mov    DWORD PTR [ebp-0x58],edx
  41aed6:	mov    edx,DWORD PTR [ebp+0x8]
  41aed9:	mov    ebx,DWORD PTR [ebp-0x54]
  41aedc:	add    edx,0x64f8da
  41aee2:	or     edx,ebx
  41aee4:	mov    DWORD PTR [ebp-0x54],edx
  41aee7:	mov    edx,DWORD PTR [ebp+0x8]
  41aeea:	jmp    0x41d273
  41aeef:	out    0x8c,al
  41aef1:	dec    eax
  41aef2:	mov    ch,0xf0
  41aef4:	jne    0x41aee1
  41aef6:	jae    0x41aebf
  41aef8:	or     al,0x4b
  41aefa:	cdq    
  41aefb:	(bad)  ds:0x1869b1f7
  41af01:	jns    0x41af7d
  41af03:	push   es
  41af04:	pop    edi
  41af05:	jp     0x41af81
  41af07:	xchg   ch,ch
  41af09:	nop
  41af0a:	fld    QWORD PTR [edx]
  41af0c:	dec    ebp
  41af0d:	mov    ebx,0x133aff2d
  41af12:	imul   ebp,DWORD PTR [ebx-0x22783b39],0x6ebffccf
  41af1c:	std    
  41af1d:	aas    
  41af1e:	lock pop edx
  41af20:	sub    al,0xca
  41af22:	dec    ebp
  41af23:	lahf   
  41af24:	ret    
  41af25:	cld    
  41af26:	xor    eax,0x49fbab69
  41af2b:	ss sbb al,0xa
  41af2e:	mov    bh,0xc4
  41af30:	xchg   ebx,eax
  41af31:	cmp    eax,0x902dd5b5
  41af36:	test   eax,0x17b3a940
  41af3b:	das    
  41af3c:	retf   0x451f
  41af3f:	leave  
  41af40:	aaa    
  41af41:	mov    ecx,0x82ec3122
  41af46:	sti    
  41af47:	pop    ds
  41af48:	mov    eax,ds:0x30d697ef
  41af4d:	addr16 cli 
  41af4f:	iret   
  41af50:	(bad)  [ecx-0x45f6dac6]
  41af56:	jle    0x41afa1
  41af58:	cmp    ecx,edi
  41af5a:	sub    ah,BYTE PTR [ebx+0x5954f359]
  41af60:	jmp    0x9479:0xcb053cac
  41af67:	add    dh,BYTE PTR [edi+0x33]
  41af6a:	mov    bh,0xdc
  41af6c:	jge    0xaa42d759
  41af72:	iret   
  41af73:	into   
  41af74:	imul   DWORD PTR [ecx+0x37]
  41af77:	jg     0x41af16
  41af79:	and    al,0xff
  41af7b:	ins    BYTE PTR es:[edi],dx
  41af7c:	xor    BYTE PTR [edi],dl
  41af7e:	and    eax,0x25c1871d
  41af83:	into   
  41af84:	(bad)  
  41af85:	jecxz  0x41af3f
  41af87:	jg     0x41b007
  41af89:	xlat   BYTE PTR ds:[ebx]
  41af8a:	int    0x97
  41af8c:	scas   al,BYTE PTR es:[edi]
  41af8d:	or     bl,BYTE PTR [ebp-0x176b2b5b]
  41af93:	shr    dh,cl
  41af95:	fsubrp st(1),st
  41af97:	xlat   BYTE PTR ds:[ebx]
  41af98:	pop    edi
  41af99:	xchg   DWORD PTR [edi-0x777a73cf],edi
  41af9f:	sub    esi,0xffffffc9
  41afa2:	jo     0x41af9e
  41afa4:	(bad)
  41afa7:	ror    DWORD PTR [ebx+0x2abbb464],1
  41afad:	sbb    bl,ch
  41afaf:	jp     0x41af6f
  41afb1:	clc    
  41afb2:	into   
  41afb3:	cmp    DWORD PTR [ecx+0x39],eax
  41afb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb7:	mov    dl,0x42
  41afb9:	aad    0xe0
  41afbb:	xor    ah,BYTE PTR [ebx-0x5301147]
  41afc1:	mov    DWORD PTR [eax+0x5e],ecx
  41afc4:	fdiv   DWORD PTR [esi-0xbdd9835]
  41afca:	fisub  DWORD PTR [edi+ebx*4+0x740685f3]
  41afd1:	push   ds
  41afd2:	stc    
  41afd3:	clc    
  41afd4:	arpl   WORD PTR [esi],bx
  41afd6:	mov    ds:0xfb968e3c,eax
  41afdb:	pushf  
  41afdc:	sbb    eax,0x177e13ed
  41afe1:	std    
  41afe2:	stc    
  41afe3:	hlt    
  41afe4:	jae    0x41b01a
  41afe6:	xchg   ecx,eax
  41afe7:	test   al,0x5d
  41afe9:	inc    ecx
  41afea:	arpl   WORD PTR [eax-0x1fbb812b],di
  41aff0:	je     0x41afc4
  41aff2:	call   0xab5e:0xb4cda94d
  41aff9:	dec    ebp
  41affa:	in     eax,0xe5
  41affc:	push   ds
  41affd:	mov    eax,0xbfe720e4
  41b002:	adc    ecx,edi
  41b004:	sub    eax,0x343c5a8d
  41b009:	push   es
  41b00a:	xor    ch,BYTE PTR [ecx+edi*4+0x62]
  41b00e:	dec    ebp
  41b00f:	xor    eax,0xf7c3ce54
  41b014:	sub    ebx,edx
  41b016:	mov    WORD PTR [esi-0x4ecc7b4c],?
  41b01c:	cmc    
  41b01d:	pop    es
  41b01e:	mov    BYTE PTR [ebp+0x71f23266],bh
  41b024:	test   eax,0x6d524c5c
  41b029:	mov    dh,0x2b
  41b02b:	add    al,0x85
  41b02d:	push   eax
  41b02e:	and    bl,ah
  41b030:	jp     0x41b053
  41b032:	jo     0x41b05c
  41b034:	aas    
  41b035:	hlt    
  41b036:	test   DWORD PTR [esi+0x72],ebp
  41b039:	loope  0x41b099
  41b03b:	lahf   
  41b03c:	jl     0x41b036
  41b03e:	adc    ebp,DWORD PTR [edx+eax*1+0x568b3d5f]
  41b045:	push   ds
  41b046:	inc    esi
  41b047:	ret    
  41b048:	les    edx,FWORD PTR [eax-0x50b0f663]
  41b04e:	xor    al,0xac
  41b050:	sbb    esi,esp
  41b052:	xchg   edi,eax
  41b053:	xchg   ebx,eax
  41b054:	fst    QWORD PTR [edi-0x26]
  41b057:	sbb    al,0xa7
  41b059:	mov    DWORD PTR [eax-0x1b17b384],edi
  41b05f:	push   ss
  41b060:	repz enter 0x5b9,0x9e
  41b065:	sbb    bh,BYTE PTR [ebx-0x326722a5]
  41b06b:	mov    ah,0x59
  41b06d:	ins    DWORD PTR es:[edi],dx
  41b06e:	test   BYTE PTR [ebp-0x7f],cl
  41b071:	in     eax,0x84
  41b073:	lock jge 0x41b075
  41b076:	pushf  
  41b077:	test   eax,0xe2483970
  41b07c:	loope  0x41b067
  41b07e:	pusha  
  41b07f:	mov    ch,0xef
  41b081:	pop    eax
  41b082:	ret    0xace4
  41b085:	add    BYTE PTR [ecx-0x775bd669],0x29
  41b08c:	lds    ecx,FWORD PTR [esp+ebp*1+0x60cd8520]
  41b093:	jle    0x41b094
  41b095:	fwait
  41b096:	and    eax,0xb8867d4f
  41b09b:	ja     0x41b0b5
  41b09d:	loope  0x41b053
  41b09f:	dec    ebp
  41b0a0:	jo     0x41b0d3
  41b0a2:	es stos DWORD PTR es:[edi],eax
  41b0a4:	add    ch,BYTE PTR [edx-0x3de38d7f]
  41b0aa:	test   BYTE PTR [ecx+edi*8],dl
  41b0ad:	sbb    al,0x6d
  41b0af:	xchg   edx,eax
  41b0b0:	mov    gs,eax
  41b0b2:	xchg   esi,eax
  41b0b3:	jge    0x41b0bc
  41b0b5:	test   DWORD PTR [edi-0x61ab0410],edx
  41b0bb:	pop    eax
  41b0bc:	in     eax,dx
  41b0bd:	jge    0x41b121
  41b0bf:	div    ecx
  41b0c1:	xor    al,0xfd
  41b0c3:	(bad)  
  41b0c4:	fist   WORD PTR [esi+ecx*1]
  41b0c7:	int    0x99
  41b0c9:	mov    edx,DWORD PTR [esi+0x6914dae4]
  41b0cf:	jecxz  0x41b093
  41b0d1:	rol    esi,1
  41b0d3:	fcmovnbe st,st(7)
  41b0d5:	adc    ch,dh
  41b0d7:	jno    0x41b102
  41b0d9:	xchg   esp,eax
  41b0da:	not    BYTE PTR [esi]
  41b0dc:	adc    al,0x4e
  41b0de:	push   ecx
  41b0df:	pop    edx
  41b0e0:	shl    BYTE PTR [ecx-0x5332883a],0x9
  41b0e7:	push   ss
  41b0e8:	mov    edi,0xd6caa2d1
  41b0ed:	ins    BYTE PTR es:[edi],dx
  41b0ee:	neg    BYTE PTR [eax-0x4806160a]
  41b0f4:	imul   ebx,DWORD PTR [ebp+edx*1+0x70352b2a],0x5a
  41b0fc:	dec    esp
  41b0fd:	es adc al,0xfc
  41b100:	inc    ebp
  41b101:	sbb    bl,BYTE PTR [ebx+0x34]
  41b104:	push   cs
  41b105:	in     eax,dx
  41b106:	les    ebp,FWORD PTR [ebp-0x5]
  41b109:	fwait
  41b10a:	add    BYTE PTR [esi+0x70705f35],al
  41b110:	imul   esi,DWORD PTR [eax+0x2b41c86c],0xffffffb3
  41b117:	ins    DWORD PTR es:[edi],dx
  41b118:	push   eax
  41b119:	pop    es
  41b11a:	fistp  QWORD PTR ds:0xe97ef5e3
  41b120:	out    0xba,al
  41b122:	jb     0x41b14d
  41b124:	mov    esp,0xdfa86807
  41b129:	adc    dl,bl
  41b12b:	popa   
  41b12c:	call   0x9ad7cb8e
  41b131:	cdq    
  41b132:	std    
  41b133:	daa    
  41b134:	in     al,0xd2
  41b136:	push   ecx
  41b137:	jo     0x41b0fd
  41b139:	test   BYTE PTR [eax],dh
  41b13b:	fldenv [ecx-0xc]
  41b13e:	mov    ch,0x1c
  41b140:	mov    edx,0xfebd67fa
  41b145:	jmp    0x9c7b08b4
  41b14a:	jl     0x41b166
  41b14c:	add    ebx,DWORD PTR [eax]
  41b14e:	call   0x7252:0x42a8304a
  41b155:	mov    dl,0x2c
  41b157:	cmp    al,0x61
  41b159:	nop
  41b15a:	shr    ebp,0xc1
  41b15d:	sbb    dh,BYTE PTR [ebp-0x5]
  41b160:	adc    cl,BYTE PTR [edi+0x4]
  41b163:	(bad)  
  41b164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b165:	or     BYTE PTR [ecx],dh
  41b167:	push   es
  41b168:	and    DWORD PTR [eax-0x3d2dfccc],edi
  41b16e:	sbb    DWORD PTR [edx-0x73897c7f],esi
  41b174:	icebp  
  41b175:	or     ch,BYTE PTR [ecx-0x37ac4f0b]
  41b17b:	fisttp QWORD PTR [ecx+ebx*4+0x3e]
  41b17f:	pop    ebp
  41b180:	ss mov edx,0x1834590
  41b186:	sbb    ch,0x81
  41b189:	mov    edx,eax
  41b18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18c:	xor    eax,0x853a1a6d
  41b191:	outs   dx,BYTE PTR ds:[esi]
  41b192:	jl     0x41b211
  41b194:	int    0xaf
  41b196:	mov    ah,0xa7
  41b198:	sbb    BYTE PTR ds:[edx-0x57],bh
  41b19c:	cld    
  41b19d:	push   ecx
  41b19e:	stos   BYTE PTR es:[edi],al
  41b19f:	push   es
  41b1a0:	adc    ch,BYTE PTR [edx+0x4e23c15c]
  41b1a6:	inc    ebp
  41b1a7:	mov    bl,0x7e
  41b1a9:	jno    0x41b18f
  41b1ab:	dec    esi
  41b1ac:	js     0x41b1cf
  41b1ae:	sbb    eax,0x9a42e7ec
  41b1b3:	mov    eax,ds:0x64bb5794
  41b1b8:	add    al,0x54
  41b1ba:	ins    DWORD PTR es:[edi],dx
  41b1bb:	mov    ds:0xe52b44bf,al
  41b1c0:	xchg   ebp,eax
  41b1c1:	lods   al,BYTE PTR ds:[esi]
  41b1c2:	icebp  
  41b1c3:	int3   
  41b1c4:	or     ah,BYTE PTR [edi+0x17]
  41b1c7:	push   eax
  41b1c8:	add    al,BYTE PTR [bx+si+0xe]
  41b1cc:	xchg   esp,eax
  41b1cd:	push   esi
  41b1ce:	aam    0x9c
  41b1d0:	pusha  
  41b1d1:	sbb    cl,ch
  41b1d3:	stos   BYTE PTR es:[edi],al
  41b1d4:	mov    ds:0xac50f,al
  41b1d9:	aad    0xca
  41b1db:	je     0x41b1d1
  41b1dd:	xor    DWORD PTR [esi],ebp
  41b1df:	fmul   QWORD PTR [edx+0x11]
  41b1e2:	in     al,dx
  41b1e3:	ds pop eax
  41b1e5:	cmp    ch,cl
  41b1e7:	in     al,dx
  41b1e8:	aas    
  41b1e9:	hlt    
  41b1ea:	stc    
  41b1eb:	inc    esp
  41b1ec:	stos   BYTE PTR es:[edi],al
  41b1ed:	pusha  
  41b1ee:	mov    DWORD PTR [esi+0x7b],ecx
  41b1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f2:	dec    edi
  41b1f3:	dec    esp
  41b1f4:	mov    ebx,0x48efdd23
  41b1f9:	add    esp,DWORD PTR [ecx]
  41b1fb:	nop
  41b1fc:	mov    ah,0x2c
  41b1fe:	data16 (bad) 
  41b200:	es test ebx,0xd695659e
  41b207:	sub    dl,BYTE PTR [eax+0x1e]
  41b20a:	pop    edi
  41b20b:	and    dl,dh
  41b20d:	daa    
  41b20e:	(bad)  
  41b20f:	fcomp  DWORD PTR [ebp+0x22]
  41b212:	jmp    0x41b28a
  41b214:	xchg   ebp,esi
  41b216:	pop    ss
  41b217:	xor    BYTE PTR [ebx+0x46ced6cd],ch
  41b21d:	mov    ch,BYTE PTR [ebx+0x4e]
  41b220:	lds    ecx,FWORD PTR [ebx-0x2b]
  41b223:	xchg   edi,eax
  41b224:	mov    cs,WORD PTR [eax]
  41b226:	push   esp
  41b227:	imul   ecx,eax,0x3b
  41b22a:	punpcklbw mm6,DWORD PTR [ebp+0x11]
  41b22e:	mov    eax,0x5c3f31eb
  41b233:	test   eax,0x707975db
  41b238:	(bad)  
  41b239:	mov    ebp,0x107fe767
  41b23e:	es jl  0x41b23d
  41b241:	sti    
  41b242:	dec    esp
  41b243:	ficom  WORD PTR [eax+0x28c47404]
  41b249:	jb     0x41b283
  41b24b:	sbb    cl,bl
  41b24d:	lods   eax,DWORD PTR ds:[esi]
  41b24e:	(bad)  
  41b24f:	xor    al,BYTE PTR fs:[ebx+0x59]
  41b253:	or     ebp,DWORD PTR [edi-0x68]
  41b256:	mov    al,ds:0xcfd60e44
  41b25b:	aam    0xa1
  41b25d:	cmp    al,0x9c
  41b25f:	jmp    0x41b219
  41b261:	call   0x5ad9:0x6ecc710b
  41b268:	and    BYTE PTR [edx+esi*1+0x77],ah
  41b26c:	xor    DWORD PTR [ebx-0x33c5ed5],eax
  41b272:	jnp    0x41b21c
  41b274:	(bad)  
  41b275:	dec    esi
  41b276:	je     0x41b20d
  41b278:	out    0x38,eax
  41b27a:	das    
  41b27b:	push   esi
  41b27c:	lahf   
  41b27d:	icebp  
  41b27e:	int    0xae
  41b280:	into   
  41b281:	nop
  41b282:	push   cs
  41b283:	aam    0x53
  41b285:	(bad)  
  41b286:	data16 ror BYTE PTR [edi],1
  41b289:	out    dx,al
  41b28a:	mov    ch,0xe6
  41b28c:	arpl   cx,bp
  41b28e:	(bad)
  41b291:	arpl   dx,dx
  41b293:	fistp  QWORD PTR [ecx+0x6e31791a]
  41b299:	test   DWORD PTR fs:[edx],edi
  41b29c:	and    bl,0x6b
  41b29f:	aaa    
  41b2a0:	jg     0x41b2ff
  41b2a2:	push   ds
  41b2a3:	jp     0x41b281
  41b2a5:	mul    BYTE PTR [ecx]
  41b2a7:	imul   esp,ebp,0x5b
  41b2aa:	(bad)  
  41b2ab:	fwait
  41b2ac:	jmp    0x841c:0xf62c224
  41b2b3:	sbb    ebx,DWORD PTR [ecx]
  41b2b5:	ss (bad) 
  41b2b7:	dec    esi
  41b2b8:	ins    BYTE PTR es:[edi],dx
  41b2b9:	imul   BYTE PTR [ebp-0x39]
  41b2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bd:	mov    bh,BYTE PTR ds:0x198a349f
  41b2c3:	and    ecx,DWORD PTR [edi-0x7]
  41b2c6:	retf   0x70d5
  41b2c9:	jmp    0x64d:0x1235a10a
  41b2d0:	add    bl,BYTE PTR [ebx-0xb9cdea8]
  41b2d6:	mov    ebp,0x8c54696
  41b2db:	mov    eax,ds:0x78e63908
  41b2e0:	(bad)
  41b2e3:	lock fst DWORD PTR [esi+0x16]
  41b2e7:	mov    edi,0x6d867114
  41b2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ed:	fsub   st,st(4)
  41b2ef:	mov    esi,0x592edfa
  41b2f4:	push   edx
  41b2f5:	cmp    eax,DWORD PTR ds:0x516447fc
  41b2fb:	fidivr WORD PTR [esi+0x5c]
  41b2fe:	out    dx,al
  41b2ff:	and    eax,0x1ab6ae8a
  41b304:	aam    0xa7
  41b306:	lds    ebx,FWORD PTR [ecx]
  41b308:	into   
  41b309:	jmp    0x41b2cd
  41b30b:	call   0xf11085dd
  41b310:	mov    ah,BYTE PTR [ecx]
  41b312:	jl     0x41b35f
  41b314:	or     edi,esp
  41b316:	test   al,0x92
  41b318:	imul   ebx,DWORD PTR [esi],0xfffffff4
  41b31b:	jp     0x41b2e9
  41b31d:	push   es
  41b31e:	jno    0x41b2da
  41b320:	out    dx,al
  41b321:	mov    ah,bh
  41b323:	pop    ss
  41b324:	mov    dl,0xb1
  41b326:	arpl   dx,bx
  41b328:	fisttp DWORD PTR [esi]
  41b32a:	mov    ebp,0x425815d7
  41b32f:	call   0x7735:0x8e9355e3
  41b336:	scas   eax,DWORD PTR es:[edi]
  41b337:	push   ds
  41b338:	sub    BYTE PTR [ebp-0x52afe82b],bh
  41b33e:	out    0xd5,al
  41b340:	sbb    BYTE PTR [eax-0x34],al
  41b343:	std    
  41b344:	mov    ds:0x2f378a5f,al
  41b349:	cmp    al,0x97
  41b34b:	inc    esp
  41b34c:	int3   
  41b34d:	jmp    0x8103:0xbd4f92f5
  41b354:	mov    bl,0x5c
  41b356:	pop    eax
  41b357:	sbb    al,dh
  41b359:	popf   
  41b35a:	inc    BYTE PTR [ebx+edx*2-0x269a4065]
  41b361:	aam    0xa5
  41b363:	push   eax
  41b364:	repz das 
  41b366:	clc    
  41b367:	cmp    BYTE PTR [ebp-0x3],cl
  41b36a:	imul   eax,DWORD PTR [edx],0x3d25acfb
  41b370:	in     al,0xa1
  41b372:	add    BYTE PTR [ecx-0x48],dl
  41b375:	mov    eax,ds:0x220df565
  41b37a:	pusha  
  41b37b:	adc    dh,ah
  41b37d:	pop    edx
  41b37e:	adc    bl,ah
  41b380:	xchg   ecx,eax
  41b381:	jae    0x41b3c9
  41b383:	inc    edi
  41b384:	in     al,0x6c
  41b386:	adc    BYTE PTR [edx-0x5a3377a8],bl
  41b38c:	jp     0x41b378
  41b38e:	xor    eax,0x7165f006
  41b393:	inc    edi
  41b394:	call   0x29207325
  41b399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b39a:	and    BYTE PTR [edx-0x25],dh
  41b39d:	test   al,0x85
  41b39f:	cmp    esi,eax
  41b3a1:	sub    esi,DWORD PTR [edi+edx*8]
  41b3a4:	xchg   ebp,eax
  41b3a5:	jae    0x41b3cb
  41b3a7:	out    dx,al
  41b3a8:	lock fldenv ds:0xacda46f8
  41b3af:	and    DWORD PTR [ebx+0x40],edx
  41b3b2:	push   ebx
  41b3b3:	rep outs dx,BYTE PTR ds:[esi]
  41b3b5:	mov    dl,0x5d
  41b3b7:	mov    eax,0xd62ffb14
  41b3bc:	icebp  
  41b3bd:	mov    BYTE PTR ds:0x48e985b,cl
  41b3c3:	inc    edi
  41b3c4:	test   BYTE PTR [ebx-0xd],cl
  41b3c7:	mov    ebx,0x6b600967
  41b3cc:	pop    esi
  41b3cd:	jl     0x41b3cd
  41b3cf:	call   0x4113:0x869d20a
  41b3d6:	mov    dl,0x64
  41b3d8:	pushw  ss
  41b3da:	pop    ebp
  41b3db:	stc    
  41b3dc:	jecxz  0x41b3fe
  41b3de:	rcl    DWORD PTR [ecx+0x28],0xbe
  41b3e2:	mov    ebx,0x67ea3097
  41b3e7:	inc    edi
  41b3e8:	adc    DWORD PTR [edi+ebp*1+0x3e],ebx
  41b3ec:	mov    ds:0x873f1d3c,al
  41b3f1:	dec    edi
  41b3f2:	jnp    0x41b437
  41b3f4:	out    0x8e,eax
  41b3f6:	sub    edi,0xa3cf33e7
  41b3fc:	stc    
  41b3fd:	sahf   
  41b3fe:	push   0xffffffd9
  41b400:	out    dx,al
  41b401:	xor    DWORD PTR [edi],edx
  41b403:	xchg   DWORD PTR [ebx],edi
  41b405:	ret    0xdfcf
  41b408:	fmul   QWORD PTR [esi-0x51]
  41b40b:	or     bh,al
  41b40d:	sub    ebx,edx
  41b40f:	(bad)  
  41b410:	loopne 0x41b43b
  41b412:	mov    ch,0xd7
  41b414:	ins    BYTE PTR es:[edi],dx
  41b415:	push   edx
  41b416:	push   es
  41b417:	scas   al,BYTE PTR es:[edi]
  41b418:	sub    BYTE PTR [eax-0x76f7095],dl
  41b41e:	int    0x7f
  41b420:	int    0x66
  41b422:	jno    0x41b407
  41b424:	mov    edx,0x23cf62da
  41b429:	idiv   BYTE PTR [edi-0x27]
  41b42c:	sbb    edi,DWORD PTR [esi-0x38b1496]
  41b432:	xor    BYTE PTR [eax+0x6f21ff0b],al
  41b438:	sbb    bl,BYTE PTR [esi]
  41b43a:	test   dh,dl
  41b43c:	push   0xffffffc1
  41b43e:	push   es
  41b43f:	adc    esp,DWORD PTR gs:[ecx+0x398281c6]
  41b446:	mov    ah,0xd8
  41b448:	outs   dx,BYTE PTR ds:[esi]
  41b449:	xchg   edx,eax
  41b44a:	sbb    eax,0x72a435f3
  41b44f:	repnz or ah,0x97
  41b453:	outs   dx,BYTE PTR ds:[esi]
  41b454:	and    eax,DWORD PTR [edi]
  41b456:	push   esp
  41b457:	sub    eax,0xaddc4c0b
  41b45c:	mov    dh,0x94
  41b45e:	nop
  41b45f:	pop    edi
  41b460:	adc    eax,0x2e2afd87
  41b465:	mov    ebp,DWORD PTR [edi+0x7a]
  41b468:	jle    0x41b3ef
  41b46a:	adc    eax,0x4a75cd9d
  41b46f:	into   
  41b470:	adc    esi,DWORD PTR [ebx+esi*8-0x6c03ad05]
  41b477:	and    al,0xeb
  41b479:	outs   dx,DWORD PTR ds:[esi]
  41b47a:	mov    bh,0x23
  41b47c:	in     eax,dx
  41b47d:	pop    ebp
  41b47e:	xor    al,0x20
  41b480:	mov    ebp,0xe82e0f0f
  41b485:	cmp    al,BYTE PTR [eax]
  41b487:	out    0xd2,al
  41b489:	mov    bh,0xb
  41b48b:	outs   dx,BYTE PTR ds:[esi]
  41b48c:	stos   DWORD PTR es:[edi],eax
  41b48d:	test   DWORD PTR [eax],0x232a036a
  41b493:	xor    eax,0x246d9aec
  41b498:	iret   
  41b499:	(bad)  
  41b49a:	data16 jl 0x41b460
  41b49d:	outs   dx,DWORD PTR ds:[esi]
  41b49e:	push   cs
  41b49f:	in     eax,dx
  41b4a0:	and    DWORD PTR [esi-0x60],edi
  41b4a3:	sbb    eax,0x334018dd
  41b4a8:	aad    0x92
  41b4aa:	cmc    
  41b4ab:	lahf   
  41b4ac:	pusha  
  41b4ad:	loope  0x41b477
  41b4af:	outs   dx,DWORD PTR ds:[esi]
  41b4b0:	fcomip st,st(0)
  41b4b2:	call   0x2e84b9e6
  41b4b7:	mov    edx,0x1387b0c6
  41b4bc:	dec    esi
  41b4bd:	push   ebp
  41b4be:	ins    BYTE PTR es:[edi],dx
  41b4bf:	push   eax
  41b4c0:	pop    es
  41b4c1:	aam    0x63
  41b4c3:	mov    ebx,0xd139d816
  41b4c8:	arpl   WORD PTR [edx],bp
  41b4ca:	adc    ebx,DWORD PTR [edi+0x7e]
  41b4cd:	sbb    DWORD PTR [eax],0x4dff7814
  41b4d3:	lock rcr ebp,1
  41b4d6:	xlat   BYTE PTR ds:[ebx]
  41b4d7:	cmp    BYTE PTR [edx+0x58],0xa2
  41b4db:	xchg   esi,edx
  41b4dd:	mov    esp,0xafad5afc
  41b4e2:	lods   eax,DWORD PTR ds:[esi]
  41b4e3:	and    eax,0x6ef4750f
  41b4e8:	retf   0x7499
  41b4eb:	clc    
  41b4ec:	mov    ebx,0xcb7e1432
  41b4f1:	sub    eax,0x88de8bd5
  41b4f6:	cmc    
  41b4f7:	pop    ds
  41b4f8:	je     0x41b4bc
  41b4fa:	clc    
  41b4fb:	add    ecx,DWORD PTR [eax]
  41b4fd:	shr    esp,1
  41b4ff:	out    dx,eax
  41b500:	sbb    ebx,DWORD PTR [edi]
  41b502:	popa   
  41b503:	stos   DWORD PTR es:[edi],eax
  41b504:	inc    ebp
  41b505:	mov    ebx,0x47096afe
  41b50a:	mov    eax,0x3cdf3ba6
  41b50f:	fistp  DWORD PTR [edi+eiz*4]
  41b512:	sahf   
  41b513:	mov    ?,WORD PTR [edi]
  41b515:	aam    0xd6
  41b517:	push   esp
  41b518:	xor    al,0x53
  41b51a:	mov    BYTE PTR ds:0x55e5db3,bh
  41b520:	add    dh,ah
  41b522:	sub    eax,0x3490178d
  41b527:	sub    eax,0xcce29f7d
  41b52c:	inc    edi
  41b52d:	add    DWORD PTR [ebx-0xbb8613f],0x7982831d
  41b537:	xor    BYTE PTR [edx+0x5e],0x53
  41b53b:	shl    DWORD PTR [esi+0x24],0xf8
  41b53f:	dec    edx
  41b540:	ds dec ebp
  41b542:	les    edi,FWORD PTR [edi+0x16f9cf5c]
  41b548:	cs repz sub bh,ah
  41b54c:	loopne 0x41b52b
  41b54e:	sbb    ebx,esi
  41b550:	sbb    BYTE PTR [edi-0x5d8c3ed],dl
  41b556:	fist   WORD PTR [edx+edx*1-0x2]
  41b55a:	sub    al,0x65
  41b55c:	fstp   QWORD PTR [edi+eiz*2+0x12]
  41b560:	push   ss
  41b561:	fwait
  41b562:	bound  esi,QWORD PTR [ecx]
  41b564:	sar    ebx,cl
  41b566:	dec    ebx
  41b567:	aam    0x33
  41b569:	and    eax,DWORD PTR [edi-0x40]
  41b56c:	fild   WORD PTR [esi+0x7d]
  41b56f:	push   edi
  41b570:	xor    BYTE PTR [eax+0x3e],bl
  41b573:	or     edx,DWORD PTR [ebp+eiz*8-0x58e7a2eb]
  41b57a:	ficom  WORD PTR [edi]
  41b57c:	mov    al,0xe9
  41b57e:	mov    ch,0xb7
  41b580:	fsub   QWORD PTR [edx]
  41b582:	push   cs
  41b583:	mov    cl,0x26
  41b585:	cmp    eax,0xf060eefc
  41b58a:	imul   ecx,DWORD PTR [esp+ebx*8],0x559a9e5a
  41b591:	cmp    DWORD PTR [ecx-0x78],esp
  41b594:	and    eax,DWORD PTR [esp+ebp*2-0x1c]
  41b598:	pop    ebx
  41b599:	jle    0x41b563
  41b59b:	mov    al,0x85
  41b59d:	sub    eax,0x9e2d0d5c
  41b5a2:	pop    es
  41b5a3:	int3   
  41b5a4:	adc    eax,0xdecd454
  41b5a9:	mov    esi,DWORD PTR [eax+esi*4-0x49]
  41b5ad:	leave  
  41b5ae:	js     0x41b556
  41b5b0:	ds stc 
  41b5b2:	inc    ebp
  41b5b3:	imul   BYTE PTR [ebp-0x15460113]
  41b5b9:	xlat   BYTE PTR ds:[ebx]
  41b5ba:	mov    ecx,0x995c6558
  41b5bf:	cld    
  41b5c0:	adc    eax,0x11f5bf77
  41b5c5:	jbe    0x41b5fd
  41b5c7:	gs xor dh,cl
  41b5ca:	push   0x53f65b61
  41b5cf:	add    eax,0x83433a14
  41b5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5d5:	loopne 0x41b621
  41b5d7:	or     eax,0xc32581c4
  41b5dc:	and    al,0x97
  41b5de:	aam    0x59
  41b5e0:	inc    esp
  41b5e1:	mov    ah,0x17
  41b5e3:	es pop esp
  41b5e5:	stos   DWORD PTR es:[edi],eax
  41b5e6:	fld    DWORD PTR [edx]
  41b5e8:	gs jle 0x41b66a
  41b5eb:	xor    edx,eax
  41b5ed:	scas   eax,DWORD PTR es:[edi]
  41b5ee:	mov    BYTE PTR [edx],0xbb
  41b5f1:	sbb    ebp,esp
  41b5f3:	imul   esi,DWORD PTR [edi-0x7],0x42
  41b5f7:	mov    ebp,0xc13dd087
  41b5fc:	nop
  41b5fd:	inc    esp
  41b5fe:	ret    0x5a57
  41b601:	popf   
  41b602:	inc    edi
  41b603:	mov    ch,0xa7
  41b605:	dec    eax
  41b606:	rcr    ebp,cl
  41b608:	inc    esi
  41b609:	cs in  eax,dx
  41b60b:	jnp    0x41b5cd
  41b60d:	arpl   cx,bx
  41b60f:	dec    eax
  41b610:	jbe    0x41b657
  41b612:	sbb    al,0xa6
  41b614:	and    eax,DWORD PTR [edx-0x332eab83]
  41b61a:	fisttp WORD PTR [esi+0x3c]
  41b61d:	clc    
  41b61e:	jmp    0xfe5:0x2679bbb9
  41b625:	test   DWORD PTR [eax+0x55],0xa6da1f8d
  41b62c:	fs call 0xe5e250dc
  41b632:	dec    edi
  41b633:	cmp    al,0xd7
  41b635:	push   cs
  41b636:	push   ebp
  41b637:	cs aad 0xc9
  41b63a:	push   edi
  41b63b:	adc    ch,BYTE PTR [ebx+0x3f]
  41b63e:	xlat   BYTE PTR cs:[ebx]
  41b640:	jmp    0xe290:0x5ee6f350
  41b647:	repnz out dx,eax
  41b649:	cmp    BYTE PTR [ebx+esi*2+0x3d],bh
  41b64d:	fwait
  41b64e:	stc    
  41b64f:	popf   
  41b650:	in     al,0x91
  41b652:	mov    cs,WORD PTR [esi*8-0x1bf13b6]
  41b659:	mov    eax,ds:0xd7e722c2
  41b65e:	add    dl,ch
  41b660:	mov    bl,0x9c
  41b663:	pushf  
  41b664:	stc    
  41b665:	inc    eax
  41b666:	sar    BYTE PTR [ebp-0x45],1
  41b669:	xchg   esi,eax
  41b66a:	out    0x94,eax
  41b66c:	dec    esp
  41b66d:	aad    0x8d
  41b66f:	xchg   esp,eax
  41b670:	inc    ebp
  41b671:	test   DWORD PTR [esi],ebx
  41b673:	pop    esi
  41b674:	jp     0x41b666
  41b676:	call   0xe97f:0xcc10499e
  41b67d:	pop    edx
  41b67e:	mov    bh,0x48
  41b680:	mov    WORD PTR ds:0x8427b7da,gs
  41b686:	rcl    DWORD PTR [edx+ebx*1+0x66],cl
  41b68a:	push   esp
  41b68b:	adc    edx,eax
  41b68d:	sti    
  41b68e:	and    al,0x4d
  41b690:	xlat   BYTE PTR ds:[ebx]
  41b691:	loope  0x41b684
  41b693:	and    DWORD PTR [eax-0x6d3be617],edi
  41b699:	dec    edi
  41b69a:	sub    eax,0xead4e161
  41b69f:	out    0xf5,eax
  41b6a1:	add    al,0xf1
  41b6a3:	adc    bh,al
  41b6a5:	mov    edi,0xfb10f411
  41b6aa:	faddp  st(5),st
  41b6ac:	jmp    0x41b67b
  41b6ae:	push   esi
  41b6af:	jne    0x41b651
  41b6b1:	push   0xffffffeb
  41b6b3:	mov    ebp,0xf82d8652
  41b6b8:	in     al,0x66
  41b6ba:	(bad)  
  41b6bb:	out    0xa4,al
  41b6bd:	jge    0x41b68f
  41b6bf:	push   ecx
  41b6c0:	enter  0x17e9,0x42
  41b6c4:	xor    eax,0xa9d8797a
  41b6c9:	or     al,0xb0
  41b6cb:	inc    edi
  41b6cc:	inc    ebp
  41b6cd:	inc    esp
  41b6ce:	dec    ebp
  41b6cf:	adc    ebx,DWORD PTR [edx-0x3e264390]
  41b6d5:	xor    dl,ch
  41b6d7:	fwait
  41b6d8:	cli    
  41b6d9:	xchg   edi,eax
  41b6da:	outs   dx,DWORD PTR ds:[esi]
  41b6db:	mov    ds:0xaa9a2f75,al
  41b6e0:	jns    0x41b676
  41b6e2:	ds jmp 0x46558952
  41b6e8:	bound  eax,QWORD PTR ds:0xa103af02
  41b6ee:	das    
  41b6ef:	jnp    0x41b700
  41b6f1:	cmp    edx,DWORD PTR [edx]
  41b6f3:	aas    
  41b6f4:	and    eax,DWORD PTR [ebp+0xd8e4d3a]
  41b6fa:	jle    0x41b73c
  41b6fc:	cmp    al,0x2b
  41b6fe:	push   edi
  41b6ff:	push   ebx
  41b700:	push   ecx
  41b701:	fist   DWORD PTR [eax-0x34b6df23]
  41b707:	retf   
  41b708:	dec    ebx
  41b709:	jmp    0xba16:0x5e707473
  41b710:	fld    DWORD PTR [ebx+ecx*8-0x57]
  41b714:	es int3 
  41b716:	fwait
  41b717:	outs   dx,BYTE PTR ds:[esi]
  41b718:	js     0x41b726
  41b71a:	jo     0x87ab8333
  41b720:	mov    ds:0xd1e9d309,eax
  41b725:	scas   al,BYTE PTR es:[edi]
  41b726:	sub    eax,0x6e0bfc2b
  41b72b:	push   ds
  41b72c:	fisub  DWORD PTR [ebp-0x3f]
  41b72f:	repnz cmp esp,ebp
  41b732:	inc    ebx
  41b733:	aas    
  41b734:	jne    0x41b749
  41b736:	lods   eax,DWORD PTR ds:[esi]
  41b737:	(bad)  
  41b738:	dec    esp
  41b739:	add    eax,0x7259a9bc
  41b73e:	and    DWORD PTR [ecx+0xac673b0],0xdbc9cfcb
  41b748:	and    esi,DWORD PTR [edi+0x28518d3b]
  41b74e:	retf   
  41b74f:	daa    
  41b750:	dec    ebp
  41b751:	or     DWORD PTR [ebp+0x6e],ebp
  41b754:	or     ah,BYTE PTR [ecx+0x464006c2]
  41b75a:	mov    ds:0x8cde9822,eax
  41b75f:	and    ah,dl
  41b761:	out    dx,eax
  41b762:	mov    al,0x67
  41b764:	ss lock ror ebx,cl
  41b768:	test   BYTE PTR [esi-0x630ecc59],dh
  41b76e:	bound  esi,QWORD PTR [edi-0x30]
  41b771:	add    al,0x84
  41b773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b775:	push   ebx
  41b776:	std    
  41b777:	fild   QWORD PTR [ebx+0x55]
  41b77a:	ss sar bh,0x47
  41b77e:	rcl    BYTE PTR [ebx-0x80],0xe4
  41b782:	adc    esi,DWORD PTR [ecx]
  41b784:	out    0xd3,eax
  41b786:	xchg   ebx,eax
  41b787:	jecxz  0x41b7fc
  41b789:	jo     0x41b7b2
  41b78b:	(bad)  
  41b78c:	push   ss
  41b78d:	mov    WORD PTR [bp+si+0x70],?
  41b791:	xor    esi,eax
  41b793:	adc    DWORD PTR [ecx-0x6f],eax
  41b796:	adc    ecx,DWORD PTR [ebp-0x1f]
  41b799:	dec    esi
  41b79a:	jb     0x41b765
  41b79c:	test   BYTE PTR [ebp+0x73ceaaef],0xa2
  41b7a3:	jl     0x41b7c4
  41b7a5:	sub    DWORD PTR [eax],esp
  41b7a7:	in     al,0xbb
  41b7a9:	mov    bl,ah
  41b7ab:	inc    esi
  41b7ac:	(bad)  
  41b7ad:	fnsave [edi+0x66]
  41b7b0:	mov    ch,0x24
  41b7b2:	push   eax
  41b7b3:	fcmovbe st,st(4)
  41b7b5:	mov    edx,0xf52d35ff
  41b7ba:	pop    esi
  41b7bb:	xor    al,0x45
  41b7bd:	(bad)  
  41b7be:	enter  0xe75c,0x3f
  41b7c2:	and    eax,0x50f111d2
  41b7c7:	retf   0xbb44
  41b7ca:	leave  
  41b7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7cc:	mov    cl,BYTE PTR es:[edx+0x4]
  41b7d0:	jp     0x41b7ae
  41b7d2:	sbb    bh,BYTE PTR [esi+0x7f9db5c]
  41b7d8:	lahf   
  41b7d9:	call   0x6b09:0xd9835034
  41b7e0:	popa   
  41b7e1:	or     DWORD PTR [ebx-0x72],esp
  41b7e4:	jno    0x41b864
  41b7e6:	cmp    ebp,0xffffff9f
  41b7e9:	outs   dx,BYTE PTR ds:[esi]
  41b7ea:	and    eax,0x2195ed94
  41b7ef:	xor    ah,BYTE PTR [edi+0x1]
  41b7f2:	fucomip st,st(3)
  41b7f4:	push   0xffffffe7
  41b7f6:	pop    ds
  41b7f7:	jmp    0x41b809
  41b7f9:	mov    ah,0x92
  41b7fb:	fisub  DWORD PTR [ebp-0x313f0283]
  41b801:	dec    edx
  41b802:	mov    ch,0xdc
  41b804:	cmp    al,0x46
  41b806:	mov    esp,0x9049c7b1
  41b80b:	stos   BYTE PTR es:[edi],al
  41b80c:	sets   BYTE PTR [edi]
  41b80f:	dec    eax
  41b810:	je     0x41b828
  41b812:	or     bl,ah
  41b814:	nop
  41b815:	mov    bl,0x5d
  41b817:	stos   BYTE PTR es:[edi],al
  41b818:	lods   eax,DWORD PTR ds:[esi]
  41b819:	pop    ebx
  41b81a:	lds    edx,FWORD PTR [ecx]
  41b81c:	or     eax,0x77ce9a57
  41b821:	jecxz  0x41b867
  41b823:	cmp    esi,DWORD PTR [edx]
  41b825:	test   eax,0x795578f2
  41b82a:	dec    esp
  41b82b:	mov    bh,BYTE PTR [eax+ecx*8-0x72f9feb7]
  41b832:	or     BYTE PTR [ecx+ecx*2-0x8832a11],dh
  41b839:	shl    DWORD PTR [esp+eiz*8-0xf989b9d],0xc7
  41b841:	adc    dh,BYTE PTR [ebx-0x76158518]
  41b847:	ins    DWORD PTR es:[edi],dx
  41b848:	add    dh,BYTE PTR [ebx+0x43]
  41b84b:	or     bl,BYTE PTR [ecx]
  41b84d:	push   0xa4c39638
  41b852:	sbb    bl,dh
  41b854:	loopne 0x41b826
  41b856:	push   ss
  41b857:	cmp    BYTE PTR [edi-0x28ae3f06],cl
  41b85d:	xchg   edx,eax
  41b85e:	stos   BYTE PTR es:[edi],al
  41b85f:	(bad)  
  41b860:	stos   BYTE PTR es:[edi],al
  41b861:	pop    ebx
  41b862:	js     0x41b838
  41b864:	sbb    al,0xc1
  41b866:	stos   BYTE PTR es:[edi],al
  41b867:	cmc    
  41b868:	push   0x57
  41b86a:	ins    BYTE PTR es:[edi],dx
  41b86b:	shr    dh,1
  41b86d:	pop    esi
  41b86e:	xchg   ebx,eax
  41b86f:	mov    al,0x25
  41b871:	pop    edi
  41b872:	rol    DWORD PTR [edi-0x597016a3],0x7e
  41b879:	fimul  DWORD PTR [edi-0x3b]
  41b87c:	pop    ss
  41b87d:	(bad)  
  41b87e:	in     eax,0xf0
  41b880:	mov    eax,0x4f516007
  41b885:	mov    dl,0xe5
  41b887:	(bad)  
  41b888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b889:	popf   
  41b88a:	sahf   
  41b88b:	mov    edx,?
  41b88d:	xor    al,BYTE PTR [bx]
  41b890:	dec    edi
  41b891:	sub    DWORD PTR [ecx-0x4fac4558],ecx
  41b897:	xor    edi,DWORD PTR ds:0x213b179b
  41b89d:	je     0x41b901
  41b89f:	ins    DWORD PTR es:[edi],dx
  41b8a0:	pop    ebx
  41b8a1:	inc    ebp
  41b8a2:	scas   eax,DWORD PTR es:[edi]
  41b8a3:	aas    
  41b8a4:	add    esi,DWORD PTR [edx]
  41b8a6:	xchg   edx,eax
  41b8a7:	scas   al,BYTE PTR es:[edi]
  41b8a8:	outs   dx,BYTE PTR ds:[esi]
  41b8a9:	and    ah,BYTE PTR [edx+0x56]
  41b8ac:	ficomp WORD PTR [esi-0x1]
  41b8af:	jno    0x41b87b
  41b8b1:	bound  esp,QWORD PTR [esi+eiz*1]
  41b8b4:	je     0x41b863
  41b8b6:	(bad)  
  41b8b7:	lock jne 0x41b87c
  41b8ba:	lahf   
  41b8bb:	fs cmp al,0xd
  41b8be:	mov    bl,0x25
  41b8c0:	js     0x41b904
  41b8c2:	adc    al,0xec
  41b8c4:	jne    0x41b8c7
  41b8c6:	jne    0x41b910
  41b8c8:	cmp    ebx,DWORD PTR [esi+0x78fb71e4]
  41b8ce:	push   0x1532ccad
  41b8d3:	pop    ecx
  41b8d4:	add    DWORD PTR [eax+0x3d],eax
  41b8d7:	ins    DWORD PTR es:[edi],dx
  41b8d8:	add    BYTE PTR [edx-0x101576cd],bl
  41b8de:	addr16 cli 
  41b8e0:	std    
  41b8e1:	pushf  
  41b8e2:	add    al,bl
  41b8e4:	mov    cl,0xf
  41b8e6:	ds mov eax,0x28a62c39
  41b8ec:	lahf   
  41b8ed:	sbb    al,0xe8
  41b8ef:	sbb    ecx,ecx
  41b8f1:	mov    DWORD PTR [eax-0xe],ebx
  41b8f4:	jg     0x41b8d4
  41b8f6:	retf   
  41b8f7:	sub    ebx,ebp
  41b8f9:	sbb    BYTE PTR [edx-0x2c],bl
  41b8fc:	sub    al,0x1a
  41b8fe:	xchg   edi,edi
  41b900:	cld    
  41b901:	mov    al,0x25
  41b903:	fwait
  41b904:	xor    eax,0xdc0d5244
  41b909:	cmp    eax,0x901eabad
  41b90e:	mov    al,0x1b
  41b910:	js     0x41b8fc
  41b912:	imul   esi,DWORD PTR [edi+0x2591b5a7],0x53
  41b919:	dec    ebp
  41b91a:	fsubr  QWORD PTR [eax]
  41b91c:	xchg   ecx,eax
  41b91d:	sub    esi,0xffffffd5
  41b920:	imul   esi,edi,0xffffffaa
  41b923:	push   edi
  41b924:	js     0x41b992
  41b926:	int3   
  41b927:	push   ss
  41b928:	daa    
  41b929:	jg     0x41b934
  41b92b:	jmp    0x6daff229
  41b930:	sbb    al,0x3d
  41b932:	xchg   BYTE PTR [esi+0x41],ch
  41b935:	sub    cl,0x20
  41b938:	cmp    al,0x39
  41b93a:	mov    fs,WORD PTR [ecx]
  41b93c:	mov    al,BYTE PTR [ecx-0x74]
  41b93f:	jns    0x41b965
  41b941:	(bad)  
  41b942:	dec    eax
  41b943:	mov    bh,BYTE PTR [eax]
  41b945:	xor    al,0x27
  41b947:	jnp    0x41b97b
  41b949:	(bad)  
  41b94b:	imul   eax,DWORD PTR [ebp+0x4ba7cc6d],0x29
  41b952:	mov    dl,0x75
  41b954:	jno    0x41b92d
  41b956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b957:	jne    0x41b9aa
  41b959:	pop    ebx
  41b95a:	push   ebx
  41b95b:	leave  
  41b95c:	outs   dx,DWORD PTR ds:[esi]
  41b95d:	repz mov edi,0xdc0dbb60
  41b963:	(bad)  cs:[esi+0x4d7b15f9]
  41b96a:	outs   dx,DWORD PTR ds:[esi]
  41b96b:	out    dx,eax
  41b96c:	push   ds
  41b96d:	inc    ebx
  41b96e:	add    al,0x54
  41b970:	aam    0x68
  41b972:	add    dh,BYTE PTR [esi+0x299cd594]
  41b978:	hlt    
  41b979:	push   edx
  41b97a:	adc    DWORD PTR [edx],esi
  41b97c:	push   di
  41b97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b97f:	push   ebx
  41b980:	add    al,0xc5
  41b982:	jb     0x41b9a6
  41b984:	dec    edx
  41b985:	enter  0xb4d9,0x9c
  41b989:	dec    esp
  41b98a:	pop    es
  41b98b:	and    DWORD PTR [edi],edi
  41b98d:	fwait
  41b98e:	or     al,BYTE PTR [esi+esi*4]
  41b991:	int3   
  41b992:	pop    es
  41b993:	jbe    0x41ba00
  41b995:	ret    0xe397
  41b998:	sub    eax,0xf3146a44
  41b99d:	xor    dl,BYTE PTR [ecx+0x261226fe]
  41b9a3:	pop    esp
  41b9a4:	cmp    DWORD PTR [ecx],edi
  41b9a6:	mov    dl,0xc7
  41b9a8:	iret   
  41b9a9:	cmp    dh,BYTE PTR [edi+0x2957665d]
  41b9af:	mov    esp,0xbd72600d
  41b9b4:	clc    
  41b9b5:	stc    
  41b9b6:	frstor [eax]
  41b9b8:	jecxz  0x41b9b1
  41b9ba:	mov    eax,0x2d27fe98
  41b9bf:	mov    bh,0x70
  41b9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9c2:	lds    ebp,FWORD PTR [ebx+ecx*8]
  41b9c5:	dec    edi
  41b9c6:	pop    esp
  41b9c7:	jne    0x41b9c9
  41b9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ca:	and    DWORD PTR [edx],esp
  41b9cc:	repz jmp 0x41b973
  41b9cf:	push   cs
  41b9d0:	push   ebx
  41b9d1:	stc    
  41b9d2:	aas    
  41b9d3:	add    cl,BYTE PTR [eax-0x3f8ef483]
  41b9d9:	outs   dx,BYTE PTR ds:[esi]
  41b9da:	inc    ebx
  41b9db:	dec    eax
  41b9dc:	leave  
  41b9dd:	jae    0x41ba2f
  41b9df:	in     al,dx
  41b9e0:	adc    bh,al
  41b9e2:	lea    eax,ds:0xe6f20532
  41b9e8:	sub    eax,0x65acf109
  41b9ed:	fiadd  DWORD PTR [eax]
  41b9ef:	(bad)  
  41b9f0:	retf   0x60e1
  41b9f3:	adc    eax,DWORD PTR [edi+0x684017b4]
  41b9f9:	retf   
  41b9fa:	dec    esi
  41b9fb:	push   cs
  41b9fc:	mov    ebx,0x1774ba8
  41ba01:	and    bl,bh
  41ba03:	and    al,0x28
  41ba05:	sub    al,0x7
  41ba07:	aam    0xe8
  41ba09:	mov    ebx,ss
  41ba0b:	inc    ebp
  41ba0c:	push   ss
  41ba0d:	fld    DWORD PTR [eax-0x72]
  41ba10:	lds    esi,FWORD PTR [ecx+eax*2+0x760005bf]
  41ba17:	adc    BYTE PTR [eax+0x5a],dh
  41ba1a:	lock push 0x5f252e8b
  41ba20:	and    bh,dl
  41ba22:	leave  
  41ba23:	mov    dl,0xf1
  41ba25:	pop    ds
  41ba26:	loopne 0x41b9ee
  41ba28:	aas    
  41ba29:	jecxz  0x41baa5
  41ba2b:	jbe    0x41ba48
  41ba2d:	push   edx
  41ba2e:	mov    bh,0xad
  41ba30:	sub    ecx,DWORD PTR [esi]
  41ba32:	mul    BYTE PTR [ebp+0x7a872ab3]
  41ba38:	les    edi,FWORD PTR [esi-0x4]
  41ba3b:	hlt    
  41ba3c:	pop    esp
  41ba3d:	cld    
  41ba3e:	in     eax,0xcd
  41ba40:	lea    eax,[edx-0x73]
  41ba43:	sub    DWORD PTR [ebp-0x1207babd],0x747804df
  41ba4d:	ins    BYTE PTR es:[edi],dx
  41ba4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba4f:	mov    DWORD PTR [ecx],edi
  41ba51:	mov    edx,0x1d3f1ee5
  41ba56:	das    
  41ba57:	sub    ebx,DWORD PTR [edi]
  41ba59:	pop    edx
  41ba5a:	les    edi,FWORD PTR [ecx-0x3c]
  41ba5d:	scas   al,BYTE PTR es:[edi]
  41ba5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba5f:	lods   eax,DWORD PTR ds:[esi]
  41ba60:	and    al,0xba
  41ba62:	mov    eax,ds:0x3ceacc3b
  41ba67:	cmp    eax,edx
  41ba69:	stos   DWORD PTR es:[edi],eax
  41ba6a:	(bad)  
  41ba6b:	retf   0xecdf
  41ba6e:	js     0x41bad0
  41ba70:	arpl   WORD PTR [edi+eiz*2],dx
  41ba73:	cmp    al,0x39
  41ba75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba76:	aad    0xc9
  41ba78:	mov    ecx,0x8c9b626e
  41ba7d:	add    eax,esi
  41ba7f:	xchg   ebx,eax
  41ba80:	mov    DWORD PTR [ecx+0x33c5b06],eax
  41ba86:	mov    al,ds:0xcf7ddda2
  41ba8b:	inc    esp
  41ba8c:	aas    
  41ba8d:	pop    esi
  41ba8e:	sub    DWORD PTR [eax+0x47],eax
  41ba91:	dec    esi
  41ba92:	fsub   st,st(2)
  41ba94:	jb     0x41ba9b
  41ba96:	sahf   
  41ba97:	bnd jne 0x41ba35
  41ba9a:	imul   ebx,DWORD PTR [esi-0xd9231c0],0x3081c48d
  41baa4:	rcr    DWORD PTR [edx-0x57],1
  41baa7:	dec    BYTE PTR [eax]
  41baa9:	in     eax,0x9b
  41baab:	xor    bl,bl
  41baad:	xchg   ecx,eax
  41baae:	pop    ebp
  41baaf:	mov    dh,0x12
  41bab1:	pop    esp
  41bab2:	dec    ebx
  41bab3:	dec    ecx
  41bab4:	jmp    0xf390:0xbbcc6236
  41babb:	xchg   esi,eax
  41babc:	pop    ebp
  41babd:	sahf   
  41babe:	in     al,dx
  41babf:	repz data16 mov ah,0x69
  41bac3:	stos   DWORD PTR es:[edi],eax
  41bac4:	add    BYTE PTR [ecx-0x4c],bh
  41bac7:	fstp   TBYTE PTR [ecx-0x7d113e3c]
  41bacd:	jmp    0x41bad1
  41bacf:	cmp    eax,0x56a71bd7
  41bad4:	add    DWORD PTR [ecx-0x36efea22],ebp
  41bada:	push   ds
  41badb:	repnz test DWORD PTR [esi-0x2ef69f36],esi
  41bae2:	and    eax,0x96d6ca0c
  41bae7:	iret   
  41bae8:	iret   
  41bae9:	outs   dx,DWORD PTR ds:[esi]
  41baea:	push   edi
  41baeb:	shr    BYTE PTR [esi-0x71],0x1d
  41baef:	adc    eax,0x789913c1
  41baf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf5:	cwde   
  41baf6:	adc    eax,0x15e0078b
  41bafb:	stc    
  41bafc:	add    eax,0xac65fd9b
  41bb01:	lds    ebx,FWORD PTR ds:0x8f7df30b
  41bb07:	jle    0x41ba9b
  41bb09:	int    0x4b
  41bb0b:	iret   
  41bb0c:	mov    esi,0x8e355e5b
  41bb11:	pop    esi
  41bb12:	and    al,0x9
  41bb14:	or     edi,eax
  41bb16:	loopne 0x41bb88
  41bb18:	call   0xc1e4:0x6b19a83e
  41bb1f:	sti    
  41bb20:	dec    edx
  41bb21:	test   DWORD PTR [edx],ebx
  41bb23:	cwde   
  41bb24:	jle    0x41bba0
  41bb26:	dec    edx
  41bb27:	sbb    BYTE PTR [ecx+0x42b3466c],dh
  41bb2d:	fwait
  41bb2e:	out    dx,eax
  41bb2f:	push   es
  41bb30:	aas    
  41bb31:	das    
  41bb32:	jo     0x41bba7
  41bb34:	inc    ebx
  41bb35:	xchg   edx,eax
  41bb36:	cdq    
  41bb37:	je     0x41bb83
  41bb39:	ficomp WORD PTR [edx+edx*2+0x28]
  41bb3d:	loop   0x41bbaa
  41bb3f:	jl     0x41bb09
  41bb41:	cmp    edx,DWORD PTR [edi+ebp*4]
  41bb44:	(bad)  
  41bb45:	jns    0x41bb71
  41bb47:	add    DWORD PTR [esi-0x60],ebx
  41bb4a:	mov    bh,0x7b
  41bb4c:	jmp    0x3f19:0xd3376b5b
  41bb53:	add    DWORD PTR [ecx],ecx
  41bb55:	or     DWORD PTR [ebx],edx
  41bb57:	mov    esi,0xbafa9e50
  41bb5c:	out    dx,eax
  41bb5d:	mov    ds:0xead198d,eax
  41bb62:	xchg   ebp,eax
  41bb63:	cmp    eax,0x63f9804a
  41bb68:	popf   
  41bb69:	dec    eax
  41bb6a:	(bad)  
  41bb6c:	add    BYTE PTR [esi+eax*8+0x24],0x21
  41bb71:	mov    esp,0xc5d4d98b
  41bb76:	enter  0x9fe5,0xe9
  41bb7a:	pop    es
  41bb7b:	test   al,0x26
  41bb7d:	cmp    dl,BYTE PTR [ebp+eax*1+0x20]
  41bb81:	repnz stc 
  41bb83:	xor    eax,0x77547d24
  41bb88:	les    eax,FWORD PTR [esi-0x409f49e]
  41bb8e:	inc    eax
  41bb8f:	enter  0xa9dc,0xf5
  41bb93:	scas   al,BYTE PTR es:[edi]
  41bb94:	jle    0x41bb5f
  41bb96:	fmul   QWORD PTR ds:0x966c7f0d
  41bb9c:	inc    esp
  41bb9d:	mov    ecx,0xf951433e
  41bba2:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41bba4:	push   esi
  41bba5:	stc    
  41bba6:	stos   BYTE PTR es:[edi],al
  41bba7:	xor    eax,DWORD PTR [ebp+esi*2+0x77]
  41bbab:	mov    ch,0x2d
  41bbad:	jmp    0x3deb11a9
  41bbb2:	pushf  
  41bbb3:	fs dec esp
  41bbb5:	sub    dh,ah
  41bbb7:	cmp    eax,0x21e506d0
  41bbbc:	lea    ebp,[esi+eax*8]
  41bbbf:	cli    
  41bbc0:	sub    ebp,0xffffffe3
  41bbc3:	aad    0xed
  41bbc5:	mov    ebx,ebx
  41bbc7:	xor    esi,DWORD PTR [esi-0x2d]
  41bbca:	xor    bl,BYTE PTR [edi-0x761da791]
  41bbd0:	int3   
  41bbd1:	jno    0x41bb7e
  41bbd3:	into   
  41bbd4:	dec    eax
  41bbd5:	fcom   DWORD PTR [esi+0x267e0578]
  41bbdb:	jmp    0xea48bd12
  41bbe0:	sbb    cl,BYTE PTR [ebx-0x17]
  41bbe3:	dec    ebx
  41bbe4:	and    DWORD PTR [ebx],esp
  41bbe6:	xlat   BYTE PTR ds:[ebx]
  41bbe7:	cmp    esp,ebx
  41bbe9:	and    bl,BYTE PTR [ebx-0x2d]
  41bbec:	scas   al,BYTE PTR es:[edi]
  41bbed:	add    eax,0x7e0c47f6
  41bbf2:	aam    0xe7
  41bbf4:	mov    DWORD PTR gs:[eax],edx
  41bbf7:	(bad)
  41bbfa:	(bad)  
  41bbfb:	push   cs
  41bbfc:	bound  ebx,QWORD PTR [esi-0x442556bb]
  41bc02:	std    
  41bc03:	inc    edx
  41bc04:	fistp  DWORD PTR ds:0x76f40b7a
  41bc0a:	push   eax
  41bc0b:	push   0x25
  41bc0d:	sbb    edi,edx
  41bc0f:	pushf  
  41bc10:	dec    edx
  41bc11:	mov    dh,BYTE PTR [ebx-0x4837025c]
  41bc17:	mov    esi,0x3f144177
  41bc1c:	xlat   BYTE PTR ds:[ebx]
  41bc1d:	pop    edx
  41bc1e:	(bad)  
  41bc1f:	dec    esp
  41bc20:	popf   
  41bc21:	sti    
  41bc22:	sub    al,BYTE PTR [ebp-0x4f77c826]
  41bc28:	idiv   DWORD PTR [eax-0x47f35299]
  41bc2e:	sub    DWORD PTR [esi+0x857a737],eax
  41bc34:	or     al,0xb8
  41bc36:	dec    edx
  41bc37:	jae    0x41bc50
  41bc39:	inc    esp
  41bc3a:	mov    DWORD PTR [esi-0x42],ecx
  41bc3d:	fdiv   DWORD PTR [eax+0x74]
  41bc40:	or     ch,BYTE PTR [ebp-0x54]
  41bc43:	push   edi
  41bc44:	sbb    BYTE PTR [ecx+0x60],cl
  41bc47:	(bad)  
  41bc48:	jne    0x41bc23
  41bc4a:	(bad)
  41bc4d:	jecxz  0x41bc5f
  41bc4f:	mov    ecx,0x88418b9d
  41bc54:	xor    ax,0x5aeb
  41bc58:	mov    dh,ah
  41bc5a:	inc    ebp
  41bc5b:	and    ax,0x7bcd
  41bc5f:	out    0x72,eax
  41bc61:	adc    DWORD PTR [esi],ebp
  41bc63:	dec    BYTE PTR [esi-0x6840bc8b]
  41bc69:	add    eax,0xfaf959cb
  41bc6e:	rcl    BYTE PTR [ebx],0xf3
  41bc71:	fcomp  DWORD PTR [ebx+0x3a]
  41bc74:	leave  
  41bc75:	mov    bh,0x63
  41bc77:	jmp    0x8722:0xb807c938
  41bc7e:	sbb    eax,esp
  41bc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc81:	xor    al,0x9
  41bc83:	(bad)  [esp+edi*1]
  41bc86:	mov    es,WORD PTR [edx-0x463681cb]
  41bc8c:	mov    esp,0xe121f838
  41bc91:	inc    ebx
  41bc92:	mov    ebp,0x55149a43
  41bc97:	js     0x41bca5
  41bc99:	pop    esi
  41bc9a:	in     al,dx
  41bc9b:	fwait
  41bc9c:	dec    ebx
  41bc9d:	in     eax,0x35
  41bc9f:	stos   BYTE PTR es:[edi],al
  41bca0:	push   0xffffffd4
  41bca2:	inc    esp
  41bca3:	push   0x5d
  41bca5:	xchg   BYTE PTR [edi-0x6b12da86],dl
  41bcab:	push   ebx
  41bcac:	popw   ds
  41bcae:	pop    esi
  41bcaf:	fcmovne st,st(0)
  41bcb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb2:	rcl    BYTE PTR ds:0x7e73df29,0x9d
  41bcb9:	add    dl,ch
  41bcbb:	aas    
  41bcbc:	push   cs
  41bcbd:	jecxz  0x41bd18
  41bcbf:	int    0x67
  41bcc1:	jge    0x41bc87
  41bcc3:	inc    ecx
  41bcc4:	loopne 0x41bc62
  41bcc6:	mov    ebx,0xf05e0c50
  41bccb:	xor    eax,esp
  41bccd:	mov    cl,0xef
  41bccf:	jo     0x41bc74
  41bcd1:	test   eax,0xf4a65bf0
  41bcd6:	adc    BYTE PTR [eax+0x5f662cea],ah
  41bcdc:	les    edx,FWORD PTR [edi]
  41bcde:	sub    ecx,DWORD PTR [ebp-0x167a7d49]
  41bce4:	iret   
  41bce5:	pop    ds
  41bce6:	fisubr WORD PTR [esi+0x5432daab]
  41bcec:	xor    eax,0x6682dec9
  41bcf1:	adc    esi,DWORD PTR gs:[ebx]
  41bcf4:	jnp    0x41bc94
  41bcf6:	sbb    ebp,DWORD PTR [ebp+0x15f00bd8]
  41bcfc:	js     0x41bd53
  41bcfe:	std    
  41bcff:	jno    0x41bc9d
  41bd01:	mov    ebp,0x2d9b06f4
  41bd06:	push   ss
  41bd07:	xor    ch,BYTE PTR [edx+0x75]
  41bd0a:	pop    es
  41bd0b:	and    al,dl
  41bd0d:	push   ss
  41bd0e:	sar    edi,0x8d
  41bd11:	in     al,0xdb
  41bd13:	clc    
  41bd14:	pusha  
  41bd15:	fsubr  DWORD PTR [edx-0x4b498316]
  41bd1b:	sub    eax,0xfff14f01
  41bd20:	dec    ecx
  41bd21:	out    dx,al
  41bd22:	cmp    BYTE PTR [esi-0x744f1dec],dh
  41bd28:	cmp    ah,dh
  41bd2a:	cld    
  41bd2b:	push   ecx
  41bd2c:	jne    0x41bd4d
  41bd2e:	push   ss
  41bd2f:	inc    ebx
  41bd30:	push   0xffffffe7
  41bd32:	es fs xchg edi,eax
  41bd35:	add    eax,0x456646d2
  41bd3a:	iret   
  41bd3b:	add    DWORD PTR [edi+0x3e],0x96539549
  41bd42:	ret    0x4a76
  41bd45:	xor    al,0xaa
  41bd47:	outs   dx,DWORD PTR ds:[esi]
  41bd48:	mov    dh,0x27
  41bd4a:	pop    esp
  41bd4b:	mov    dh,0x60
  41bd4d:	cmp    esp,DWORD PTR [ecx+0x64]
  41bd50:	in     eax,dx
  41bd51:	xor    al,0x52
  41bd53:	mov    ebp,0x7ac2bf93
  41bd58:	or     dl,bl
  41bd5a:	das    
  41bd5b:	jno    0x41bd05
  41bd5d:	cmp    al,0x3f
  41bd5f:	inc    edi
  41bd60:	mov    eax,0xfc7fbfba
  41bd65:	pushf  
  41bd66:	popa   
  41bd67:	sbb    BYTE PTR [edi-0x40224b50],ch
  41bd6d:	sub    ecx,eax
  41bd6f:	cmp    BYTE PTR [ecx+0x98e549b],cl
  41bd75:	mov    eax,ds:0x7c777421
  41bd7a:	inc    ebx
  41bd7b:	int3   
  41bd7c:	xor    edx,DWORD PTR [ebx-0x4b3e9861]
  41bd82:	sub    ebx,ebx
  41bd84:	stos   DWORD PTR es:[edi],eax
  41bd85:	sub    BYTE PTR [ebp+ebp*2+0x44],ch
  41bd89:	mul    BYTE PTR [edx]
  41bd8b:	mov    ch,al
  41bd8d:	pop    esi
  41bd8e:	hlt    
  41bd8f:	push   ecx
  41bd90:	or     eax,0xb101b5c5
  41bd95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd96:	jnp    0x41bdf4
  41bd98:	inc    edx
  41bd99:	push   ecx
  41bd9a:	pop    esp
  41bd9b:	cdq    
  41bd9c:	mov    ebx,0x262b0a7e
  41bda1:	mov    al,0xa5
  41bda3:	fistp  QWORD PTR [edi-0x5a796816]
  41bda9:	adc    al,BYTE PTR [eax-0x3d]
  41bdac:	test   BYTE PTR [ebx-0x47],dl
  41bdaf:	out    dx,al
  41bdb0:	dec    ebp
  41bdb1:	call   0x9e7f:0xf8054ebc
  41bdb8:	cmp    ecx,DWORD PTR [ecx-0x3a499fcc]
  41bdbe:	jecxz  0x41be15
  41bdc0:	cs clc 
  41bdc2:	scas   eax,DWORD PTR es:[edi]
  41bdc3:	retf   0xaf15
  41bdc6:	shl    ecx,0x28
  41bdc9:	pop    esp
  41bdca:	mov    DWORD PTR [esi],eax
  41bdcc:	hlt    
  41bdcd:	sar    ah,0x57
  41bdd0:	scas   eax,DWORD PTR es:[edi]
  41bdd1:	int    0x59
  41bdd3:	adc    al,0xd2
  41bdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdd6:	lds    eax,FWORD PTR [ecx-0x5669fd67]
  41bddc:	and    DWORD PTR [ebx],eax
  41bdde:	jmp    0x19fb9b8a
  41bde3:	sbb    DWORD PTR [eax],esi
  41bde5:	out    dx,al
  41bde6:	pop    ecx
  41bde7:	ins    BYTE PTR es:[edi],dx
  41bde8:	push   ecx
  41bde9:	fs pop ebp
  41bdeb:	cmp    esi,DWORD PTR [ebp+0x9]
  41bdee:	xor    BYTE PTR [ebx],0xaf
  41bdf1:	xchg   ecx,eax
  41bdf2:	or     esp,DWORD PTR [ebx+0x37]
  41bdf5:	cmc    
  41bdf6:	xchg   ebp,eax
  41bdf7:	and    eax,0x43cdf510
  41bdfc:	mov    BYTE PTR [edi-0x280c625b],cl
  41be02:	xor    eax,0x9786b2cb
  41be07:	or     dl,cl
  41be09:	int    0xdd
  41be0b:	jle    0x41bdbb
  41be0d:	test   eax,0xc4172a13
  41be12:	aaa    
  41be13:	imul   ecx
  41be15:	pop    esi
  41be16:	adc    al,0x2a
  41be18:	mov    esp,0xe3d9ad3f
  41be1d:	cmc    
  41be1e:	jle    0x41bdf1
  41be20:	pop    edi
  41be21:	adc    eax,0xe17d96db
  41be26:	fucomip st,st(2)
  41be28:	cmp    ch,BYTE PTR [esi-0x669bda60]
  41be2e:	mov    esp,0x12c7d8fb
  41be33:	push   cs
  41be34:	pop    es
  41be35:	fimul  DWORD PTR [ecx+0x4cb82d0d]
  41be3b:	lea    eax,[esp+eiz*8]
  41be3e:	xor    DWORD PTR [esi-0x1b27fcc0],0xfffffff4
  41be45:	or     edx,esp
  41be47:	packuswb mm0,mm5
  41be4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be4b:	jmp    0xa378e0ed
  41be50:	add    al,BYTE PTR [edi+0x288e86b2]
  41be56:	into   
  41be57:	xchg   edx,eax
  41be58:	mov    bh,0xba
  41be5a:	int3   
  41be5b:	das    
  41be5c:	xchg   ebx,eax
  41be5d:	mov    ah,0xb0
  41be5f:	(bad)  
  41be60:	int3   
  41be61:	cdq    
  41be62:	mov    fs,edi
  41be64:	mov    esp,0x47523670
  41be69:	and    eax,0x4674dc78
  41be6e:	mov    ds:0xdc2a937d,al
  41be73:	xor    BYTE PTR [ebp-0x78],ah
  41be76:	out    0x67,al
  41be78:	ret    
  41be79:	jns    0x41be07
  41be7b:	jbe    0x41be77
  41be7d:	jl     0x41be65
  41be7f:	mov    eax,0x3312d076
  41be84:	fdiv   st,st(7)
  41be86:	sahf   
  41be87:	test   DWORD PTR [edi-0x2e],0x123d41b2
  41be8e:	ret    
  41be8f:	jne    0x41be83
  41be91:	cmp    cl,dh
  41be93:	stc    
  41be94:	pushf  
  41be95:	sbb    esp,ebx
  41be97:	add    al,0x4e
  41be99:	mov    edx,0x4f3929ec
  41be9e:	fs lahf 
  41bea0:	out    0x61,al
  41bea2:	stos   DWORD PTR es:[edi],eax
  41bea3:	in     eax,0xf9
  41bea5:	hlt    
  41bea6:	ja     0x41bec1
  41bea8:	jo     0x41be98
  41beaa:	jl     0x41be68
  41beac:	loopne 0x41bf18
  41beae:	xchg   ebp,eax
  41beaf:	sahf   
  41beb0:	(bad)  
  41beb1:	imul   edi,ebp,0xffffff9e
  41beb4:	lds    ebp,FWORD PTR [eax-0x4f945be9]
  41beba:	neg    DWORD PTR [ecx+eiz*8-0x3f]
  41bebe:	rcr    BYTE PTR [ecx],0xa
  41bec1:	xor    esi,esp
  41bec3:	(bad)  
  41bec5:	sub    al,0x0
  41bec7:	pop    ebx
  41bec8:	pop    ebx
  41bec9:	cmp    dh,BYTE PTR [edx+0x35]
  41becc:	mov    ah,0xc3
  41bece:	and    dh,BYTE PTR [ecx-0x2f]
  41bed1:	loopne 0x41be77
  41bed3:	aam    0x12
  41bed5:	ds xor al,0xe2
  41bed8:	mov    ss,ebx
  41beda:	mov    edi,0x74fbbe2a
  41bedf:	loop   0x41bef0
  41bee1:	cld    
  41bee2:	or     dh,ch
  41bee4:	stc    
  41bee5:	xlat   BYTE PTR ds:[ebx]
  41bee6:	retf   
  41bee7:	push   ds
  41bee8:	and    esi,DWORD PTR [ebp-0x7277febf]
  41beee:	jnp    0x41bead
  41bef0:	aad    0x26
  41bef2:	pop    eax
  41bef3:	sbb    bl,BYTE PTR [ebx+0x2a]
  41bef6:	jle    0x41bf4e
  41bef8:	mov    edi,0xc3209314
  41befd:	mov    eax,ds:0x9dc801b3
  41bf02:	ret    0x6599
  41bf05:	jo     0x41bf16
  41bf07:	shl    BYTE PTR [ebp-0x5a],cl
  41bf0a:	push   0xffffff8b
  41bf0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf0d:	addr16 iret 
  41bf0f:	jge    0x41bf01
  41bf11:	push   ecx
  41bf12:	mov    eax,0x244cdce1
  41bf17:	(bad)  
  41bf19:	(bad)  
  41bf1a:	cli    
  41bf1b:	call   0xb274:0x6e1c2398
  41bf22:	or     BYTE PTR [eax],0xb9
  41bf25:	inc    ebp
  41bf26:	scas   eax,DWORD PTR es:[edi]
  41bf27:	sub    eax,DWORD PTR [ebx+eax*1+0x1fc0f5af]
  41bf2e:	cwde   
  41bf2f:	push   eax
  41bf30:	(bad)  
  41bf32:	lea    ebx,[edi+0x2c]
  41bf35:	pop    es
  41bf36:	sub    esi,ebp
  41bf38:	shr    BYTE PTR [edi-0x40643e22],1
  41bf3e:	add    dh,ah
  41bf40:	(bad)  
  41bf41:	jne    0x41bf3e
  41bf43:	arpl   si,dx
  41bf45:	or     dl,0x8c
  41bf48:	lods   al,BYTE PTR ds:[esi]
  41bf49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf4a:	jae    0x41bed7
  41bf4c:	adc    al,0x4c
  41bf4e:	and    BYTE PTR [esi+0x2e],bh
  41bf51:	enter  0xf68b,0xc3
  41bf55:	jp     0x41bef2
  41bf57:	(bad)  
  41bf58:	pop    ss
  41bf59:	mov    bh,0x48
  41bf5b:	adc    DWORD PTR [esi-0x66],eax
  41bf5e:	retf   
  41bf5f:	inc    edx
  41bf60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf61:	and    edi,DWORD PTR [edx+0x3a]
  41bf64:	sar    DWORD PTR [eax+0x1e896c99],1
  41bf6a:	cmp    al,0x2b
  41bf6c:	sti    
  41bf6d:	cmp    al,0xb3
  41bf6f:	jnp    0x41bf91
  41bf71:	sbb    al,0xa6
  41bf73:	lahf   
  41bf74:	sbb    BYTE PTR [ebx],al
  41bf76:	test   eax,0xfaa89152
  41bf7b:	push   esi
  41bf7c:	or     al,0xf8
  41bf7e:	ror    cx,1
  41bf81:	jbe    0x41bf39
  41bf83:	push   edx
  41bf84:	jne    0x41bf09
  41bf86:	adc    al,0xa9
  41bf88:	pop    edx
  41bf89:	dec    esi
  41bf8a:	in     eax,0xa6
  41bf8c:	sbb    edx,DWORD PTR [edx+0x6e]
  41bf8f:	ficomp WORD PTR [ebx]
  41bf91:	push   cs
  41bf92:	pop    esp
  41bf93:	or     al,0xf2
  41bf95:	out    0x46,eax
  41bf97:	add    eax,0x5ecf3962
  41bf9c:	ret    
  41bf9d:	popf   
  41bf9e:	idiv   DWORD PTR [ecx+0x6f15034f]
  41bfa4:	in     al,dx
  41bfa5:	sahf   
  41bfa6:	das    
  41bfa7:	stc    
  41bfa8:	mov    ds:0x36710af8,al
  41bfad:	sbb    BYTE PTR [eax+eiz*2-0x7d0f37a6],ch
  41bfb4:	inc    edi
  41bfb5:	xchg   ebp,edi
  41bfb7:	int    0xd
  41bfb9:	adc    ebp,0x61
  41bfbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfbd:	pop    edx
  41bfbe:	and    edi,DWORD PTR [edx+0x5341266]
  41bfc4:	mov    ebp,0x45c55dbb
  41bfc9:	lds    ebp,FWORD PTR [ecx-0x6b7feb34]
  41bfcf:	fsubr  DWORD PTR ds:0xa7b8beaf
  41bfd5:	out    0x65,eax
  41bfd7:	cmp    al,0xb
  41bfd9:	pop    esp
  41bfda:	dec    edi
  41bfdb:	cmp    ecx,esp
  41bfdd:	mov    BYTE PTR [esi-0x579be658],bh
  41bfe3:	ins    BYTE PTR es:[edi],dx
  41bfe4:	retf   
  41bfe5:	cmp    BYTE PTR [edx],dh
  41bfe7:	and    eax,DWORD PTR [ebx+0x59]
  41bfea:	jp     0x41bfdb
  41bfec:	dec    ebx
  41bfed:	loopne 0x41c051
  41bfef:	loop   0x41bfff
  41bff1:	or     BYTE PTR [ecx],dl
  41bff3:	das    
  41bff4:	mov    esi,0xfdf0291b
  41bff9:	push   ebp
  41bffa:	int    0x43
  41bffc:	outs   dx,BYTE PTR ds:[esi]
  41bffd:	sub    eax,0x36f5d0fb
  41c002:	inc    esi
  41c003:	dec    eax
  41c004:	and    ah,al
  41c006:	ins    DWORD PTR es:[edi],dx
  41c007:	and    ah,BYTE PTR [esi]
  41c009:	adc    al,BYTE PTR [esp+edi*4-0x2dde84f2]
  41c010:	gs push ebx
  41c012:	and    al,BYTE PTR [ebx+0x77]
  41c015:	ds push ecx
  41c017:	lock push es
  41c019:	imul   esi,DWORD PTR [ebp+0x330a24f0],0xdc142e65
  41c023:	push   esi
  41c024:	pop    ebp
  41c025:	mov    ah,0x42
  41c027:	or     BYTE PTR [edi*8-0x4e02c6ff],cl
  41c02e:	jecxz  0x41c087
  41c030:	inc    esp
  41c031:	sub    ah,BYTE PTR [ecx-0x56c3fe68]
  41c037:	int3   
  41c038:	inc    edi
  41c039:	xor    eax,0x923179ab
  41c03e:	rcl    BYTE PTR [edx],cl
  41c040:	dec    esi
  41c041:	pop    ebp
  41c042:	mov    dh,0xf3
  41c044:	in     al,0xa2
  41c046:	mov    edx,0x55dcbcd1
  41c04b:	cmp    DWORD PTR [ecx+0x581d090f],ebp
  41c051:	sub    BYTE PTR [esi],dl
  41c053:	push   cs
  41c054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c055:	jg     0x41c03c
  41c057:	lods   al,BYTE PTR ds:[esi]
  41c058:	out    0x30,eax
  41c05a:	imul   ebx,DWORD PTR [esi+0x14],0x2b737518
  41c061:	mov    ecx,0xe31c5d73
  41c066:	mov    dh,al
  41c068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c069:	xadd   BYTE PTR [esi-0x50ba2a47],ch
  41c070:	mov    dh,0xb4
  41c072:	icebp  
  41c073:	cwde   
  41c074:	sub    al,0x98
  41c076:	inc    edx
  41c077:	and    esi,esi
  41c079:	adc    al,0xf0
  41c07b:	into   
  41c07c:	test   al,0xcd
  41c07e:	mov    cs,WORD PTR [edi-0x68]
  41c081:	inc    DWORD PTR [ecx-0x5ce2916c]
  41c087:	xor    BYTE PTR [ecx+0x7a],al
  41c08a:	pop    edi
  41c08b:	mov    dh,0x53
  41c08d:	add    BYTE PTR [ebp+edx*8+0x67],dh
  41c091:	and    al,0x76
  41c093:	pop    edi
  41c094:	sub    dl,al
  41c096:	and    esp,0x9ffb41b6
  41c09c:	in     al,0x3a
  41c09e:	fisttp DWORD PTR [esi]
  41c0a0:	sub    ebx,DWORD PTR [eax-0x25]
  41c0a3:	into   
  41c0a4:	icebp  
  41c0a5:	sub    eax,0xdc4ff3d7
  41c0aa:	ficom  WORD PTR [esi+0x5f81325f]
  41c0b0:	pop    edx
  41c0b1:	jb     0x41c12a
  41c0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0b4:	jmp    0x41c0c7
  41c0b6:	shr    bl,1
  41c0b8:	jmp    0x41c066
  41c0ba:	aas    
  41c0bb:	inc    ebx
  41c0bc:	jne    0x41c126
  41c0be:	push   eax
  41c0bf:	mov    edx,0xb25bba9a
  41c0c4:	out    dx,al
  41c0c5:	mov    bh,0x28
  41c0c7:	mov    esi,0x98dd5306
  41c0cc:	aad    0x45
  41c0ce:	cmp    eax,0x5ae5d8a5
  41c0d3:	jecxz  0x41c0a4
  41c0d5:	test   eax,0xa136360b
  41c0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0db:	out    0xd9,al
  41c0dd:	pop    eax
  41c0de:	int3   
  41c0df:	cmp    edi,edx
  41c0e1:	jg     0x41c0f5
  41c0e3:	pop    ebp
  41c0e4:	fild   DWORD PTR [edx+0x1b]
  41c0e7:	mov    dl,0x58
  41c0e9:	mov    ss,WORD PTR [ecx]
  41c0eb:	add    al,0xb9
  41c0ed:	cmc    
  41c0ee:	xchg   ecx,eax
  41c0ef:	add    edi,DWORD PTR [edi]
  41c0f1:	push   eax
  41c0f2:	inc    ecx
  41c0f3:	jecxz  0x41c079
  41c0f5:	add    edx,DWORD PTR [esi]
  41c0f7:	out    0xf4,al
  41c0f9:	push   esi
  41c0fa:	push   esi
  41c0fb:	ret    0x1d30
  41c0fe:	jl     0x41c101
  41c100:	lock cmp edi,DWORD PTR [edi]
  41c103:	stos   DWORD PTR es:[di],eax
  41c105:	aaa    
  41c106:	sub    al,0x3b
  41c108:	pushf  
  41c109:	adc    BYTE PTR [esi+ecx*4],ch
  41c10c:	fisttp WORD PTR [ebp-0x5]
  41c10f:	and    DWORD PTR [esi],ecx
  41c111:	cdq    
  41c112:	mov    ebx,0x823c34f9
  41c117:	les    eax,FWORD PTR [ebp-0x30]
  41c11a:	xor    BYTE PTR [esp+ebp*8-0x49a2ef9e],dh
  41c121:	pop    ecx
  41c122:	cmp    ecx,esp
  41c124:	cmp    BYTE PTR [eax-0x4010d2f5],bl
  41c12a:	jb     0x41c0cd
  41c12c:	(bad)  
  41c12d:	mov    edx,0xb4c49402
  41c132:	inc    esp
  41c133:	test   al,0x82
  41c135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c136:	nop
  41c137:	dec    esp
  41c138:	and    DWORD PTR [ebx-0x7f],esp
  41c13b:	ins    DWORD PTR es:[edi],dx
  41c13c:	inc    esi
  41c13d:	inc    esi
  41c13e:	xchg   ebx,eax
  41c13f:	xor    eax,0xf4d0d2e7
  41c144:	adc    BYTE PTR [ecx+0x79f83ba0],cl
  41c14a:	xor    DWORD PTR [edi-0x9],0x43
  41c14e:	mov    bh,0x28
  41c150:	cmc    
  41c151:	pop    ebp
  41c152:	icebp  
  41c153:	jmp    0x4cc9:0x1c653fb9
  41c15a:	leave  
  41c15b:	ret    
  41c15c:	push   ecx
  41c15d:	adc    edi,DWORD PTR [edi+edx*1-0x64c38019]
  41c164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c165:	xchg   dl,ah
  41c167:	pop    esi
  41c168:	out    dx,al
  41c169:	lea    esi,[ebp+0xc08da5a]
  41c16f:	mov    bl,0x3c
  41c171:	jl     0x41c1a3
  41c173:	ret    
  41c174:	fabs   
  41c176:	lds    edi,FWORD PTR [ebx-0x48]
  41c179:	adc    DWORD PTR [esi],esp
  41c17b:	jle    0x41c14b
  41c17d:	jae    0x41c1dc
  41c17f:	xor    al,0x1e
  41c181:	not    DWORD PTR [bx+si+0x7132]
  41c186:	inc    edi
  41c187:	push   edx
  41c188:	ds push cs
  41c18a:	(bad)  
  41c18b:	dec    ebx
  41c18c:	dec    edx
  41c18d:	sub    ebp,DWORD PTR [edx+0x6a]
  41c190:	fbstp  TBYTE PTR [ebp+0x24aaa643]
  41c196:	or     eax,0xfc9be2e2
  41c19b:	pop    edi
  41c19c:	mov    al,ds:0x692724b2
  41c1a1:	fimul  DWORD PTR [eax-0xc]
  41c1a4:	adc    ah,BYTE PTR [ebx]
  41c1a6:	mov    ebx,0x292ba422
  41c1ab:	add    cl,BYTE PTR [edi+0x21]
  41c1ae:	imul   edi,DWORD PTR [edx+eax*2],0x21f8b917
  41c1b5:	mov    ah,al
  41c1b7:	xlat   BYTE PTR ds:[ebx]
  41c1b8:	and    eax,DWORD PTR [ebx-0x276370e6]
  41c1be:	int    0x83
  41c1c0:	sar    DWORD PTR [esi+0x567c4502],1
  41c1c6:	add    al,0x58
  41c1c8:	xor    DWORD PTR [edx+0x17],0xb16f2096
  41c1cf:	add    BYTE PTR [edx],al
  41c1d1:	mov    eax,0x3af9face
  41c1d6:	adc    BYTE PTR [eax+eax*8],0xa
  41c1da:	jo     0x41c1cf
  41c1dc:	xchg   ecx,eax
  41c1dd:	mov    edx,esi
  41c1df:	cmp    ah,BYTE PTR [ebp+0x75107b5e]
  41c1e5:	test   BYTE PTR [edx+0x55b253d],cl
  41c1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ec:	mov    esi,0xff83f5e3
  41c1f1:	inc    ebx
  41c1f2:	push   ebx
  41c1f3:	lea    ebx,[edi+0x3c4fb278]
  41c1f9:	(bad)  
  41c1fa:	fcmovnbe st,st(2)
  41c1fc:	ret    0x6dbe
  41c1ff:	xchg   BYTE PTR [eax-0x362e2bb9],cl
  41c205:	mov    ebp,0xbb127d74
  41c20a:	int3   
  41c20b:	mov    al,0x8a
  41c20d:	mov    eax,ds:0xa6fa868
  41c212:	call   0xdab4:0x44d568c6
  41c219:	leave  
  41c21a:	push   ss
  41c21b:	(bad)
  41c21f:	mov    eax,0x4d21ef98
  41c224:	mov    ds,WORD PTR [edx+0x55]
  41c227:	and    BYTE PTR [bp+0x26e4],bl
  41c22c:	jp     0x41c1b6
  41c22e:	cli    
  41c22f:	cmp    bl,BYTE PTR [edi-0x7e]
  41c232:	add    eax,0x5ed718f6
  41c237:	stos   BYTE PTR es:[edi],al
  41c238:	cmp    BYTE PTR [edx],ch
  41c23a:	div    BYTE PTR [edx+0x68]
  41c23d:	int3   
  41c23e:	xchg   esp,eax
  41c23f:	dec    ecx
  41c240:	loope  0x41c235
  41c242:	and    bh,BYTE PTR [ecx-0x52764e9a]
  41c248:	xchg   ebx,eax
  41c249:	shl    BYTE PTR [ebp-0x2d],cl
  41c24c:	fbstp  TBYTE PTR [edi+0x65]
  41c24f:	mov    ds:0x3d4f7c87,eax
  41c254:	inc    ebx
  41c255:	cmc    
  41c256:	aam    0xe9
  41c258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c259:	call   0x3a33e537
  41c25e:	jge    0x41c2a4
  41c260:	pop    ebp
  41c261:	sub    ecx,ebx
  41c263:	jne    0x41c2b6
  41c265:	iret   
  41c266:	push   es
  41c267:	sbb    DWORD PTR [edx],0x512b03cd
  41c26d:	aaa    
  41c26e:	adc    DWORD PTR [edx],edi
  41c270:	outs   dx,BYTE PTR ds:[esi]
  41c271:	xchg   BYTE PTR [ebx-0x31],ch
  41c274:	jns    0x41c2f5
  41c276:	mov    eax,0x5df4a7d6
  41c27b:	ret    
  41c27c:	adc    eax,0xe6d1c1ac
  41c281:	mov    al,ds:0x41732d22
  41c286:	lods   al,BYTE PTR ds:[esi]
  41c287:	jnp    0x41c23d
  41c289:	je     0x41c264
  41c28b:	les    esp,FWORD PTR [esi+esi*2-0x495f622d]
  41c292:	xlat   BYTE PTR ds:[ebx]
  41c293:	in     al,0xef
  41c295:	repz enter 0x1230,0x75
  41c29a:	rcr    BYTE PTR [esp+esi*8-0x222aea29],1
  41c2a1:	cmp    BYTE PTR [esi],bh
  41c2a3:	or     eax,0x7fe1cf05
  41c2a8:	aad    0x73
  41c2aa:	adc    ch,dh
  41c2ac:	(bad)  
  41c2ad:	scas   eax,DWORD PTR es:[edi]
  41c2ae:	repz mov cs,WORD PTR [edx+0xe]
  41c2b2:	adc    al,BYTE PTR [ebp+0x653c0077]
  41c2b8:	push   ebp
  41c2b9:	mov    esp,0x1b9ed362
  41c2be:	neg    DWORD PTR [eax-0x35]
  41c2c1:	stc    
  41c2c2:	bound  edi,QWORD PTR [esi]
  41c2c4:	cwde   
  41c2c5:	sub    dh,BYTE PTR [edi]
  41c2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c8:	sbb    DWORD PTR [esp+ebx*1],esp
  41c2cb:	xchg   DWORD PTR [edi-0x41],ebp
  41c2ce:	in     al,0x46
  41c2d0:	sti    
  41c2d1:	aam    0x3f
  41c2d3:	je     0x41c2bf
  41c2d5:	xor    cl,BYTE PTR [ebx-0x2a]
  41c2d8:	ss mov edi,0x7c2ee7a5
  41c2de:	xchg   ebx,eax
  41c2df:	mov    edx,db7
  41c2e2:	js     0x41c329
  41c2e4:	and    edi,DWORD PTR [edx+edx*2-0x2f]
  41c2e8:	add    BYTE PTR [edx-0x58],al
  41c2eb:	ja     0x41c315
  41c2ed:	jl     0x41c2fe
  41c2ef:	pop    ebp
  41c2f0:	ins    BYTE PTR es:[edi],dx
  41c2f1:	jg     0x41c2d3
  41c2f3:	retf   0x71a9
  41c2f6:	cmp    edi,esp
  41c2f8:	add    BYTE PTR [ebx+0x64],dl
  41c2fb:	push   ebx
  41c2fc:	bound  eax,QWORD PTR [edi-0x10]
  41c2ff:	rol    DWORD PTR [ecx-0x2e11f0cd],1
  41c305:	sbb    al,0x15
  41c307:	lods   al,BYTE PTR ds:[esi]
  41c308:	jnp    0x41c2ad
  41c30a:	call   0x7939c8e0
  41c30f:	repnz cmp DWORD PTR [ebp+0x32],edx
  41c313:	inc    ebx
  41c314:	or     bh,BYTE PTR [ecx-0x2fe37a15]
  41c31a:	push   esi
  41c31b:	fwait
  41c31c:	cwde   
  41c31d:	push   cs
  41c31e:	lgs    ecx,FWORD PTR [edx-0x3b]
  41c322:	jnp    0x41c307
  41c324:	pop    ecx
  41c325:	je     0x41c31b
  41c327:	popa   
  41c328:	adc    edx,DWORD PTR [ebx-0x29e0bbe1]
  41c32e:	jnp    0x41c317
  41c330:	ds sar edi,1
  41c333:	es (bad) 
  41c335:	enter  0xb825,0xb1
  41c339:	cdq    
  41c33a:	andps  xmm2,XMMWORD PTR [esi+0x605705a1]
  41c341:	and    bh,0x19
  41c344:	xchg   esi,eax
  41c345:	add    al,0xd9
  41c347:	cli    
  41c348:	je     0x41c333
  41c34a:	dec    eax
  41c34b:	sub    dh,BYTE PTR [ebx-0x28993f9d]
  41c351:	xor    DWORD PTR [ecx+0x2a],ebp
  41c354:	sahf   
  41c355:	push   edi
  41c356:	dec    ecx
  41c357:	(bad)  
  41c358:	jmp    0x41c302
  41c35a:	mov    ebp,0x824eb730
  41c35f:	or     al,0x9a
  41c361:	adc    esp,ecx
  41c363:	add    DWORD PTR [eax],esp
  41c365:	enter  0x73dc,0xa1
  41c369:	jecxz  0x41c2f4
  41c36b:	jl     0x41c3b4
  41c36d:	fs imul esp,eax,0xd4c3a174
  41c374:	push   ecx
  41c375:	cs push esp
  41c377:	aad    0x87
  41c379:	rol    DWORD PTR [ebx+0x20],1
  41c37c:	jge    0x41c363
  41c37e:	out    0xde,al
  41c380:	push   es
  41c381:	sahf   
  41c382:	pusha  
  41c383:	or     BYTE PTR [edx],cl
  41c385:	sub    eax,0x3ee2cd5e
  41c38a:	adc    esi,DWORD PTR [ecx-0x41]
  41c38d:	fld    TBYTE PTR [esi]
  41c38f:	sub    esi,ecx
  41c391:	repz push ecx
  41c393:	pop    ebx
  41c394:	push   edx
  41c395:	sub    al,BYTE PTR [ecx-0x7d3b7cf3]
  41c39b:	sub    esp,DWORD PTR [ecx]
  41c39d:	lahf   
  41c39e:	push   ebp
  41c39f:	mov    al,BYTE PTR [ecx+0x25]
  41c3a2:	stos   DWORD PTR es:[edi],eax
  41c3a3:	dec    ecx
  41c3a4:	dec    ecx
  41c3a5:	hlt    
  41c3a6:	jge    0x41c3ac
  41c3a8:	(bad)  
  41c3a9:	(bad)  
  41c3ab:	fimul  WORD PTR [ecx+0x7268eb29]
  41c3b1:	test   eax,0x804b0486
  41c3b6:	cli    
  41c3b7:	fs (bad) 
  41c3b9:	loope  0x41c37d
  41c3bb:	mov    ebp,DWORD PTR [eax+0x6e42dfc8]
  41c3c1:	jo     0x41c399
  41c3c3:	fmul   DWORD PTR [ecx+0xd805033]
  41c3c9:	les    ebx,FWORD PTR [ebx]
  41c3cb:	and    al,0xe3
  41c3cd:	imul   ebx,DWORD PTR [edx-0x659aaa75],0xeed2332b
  41c3d7:	inc    ecx
  41c3d8:	js     0x41c3e1
  41c3da:	call   DWORD PTR [edi-0x7abf0466]
  41c3e0:	push   ds
  41c3e1:	cmc    
  41c3e2:	mov    edi,0xdabaab39
  41c3e7:	nop
  41c3e8:	repnz pop edi
  41c3ea:	call   0xdafc:0xe57bc1bf
  41c3f1:	push   ecx
  41c3f2:	cli    
  41c3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f4:	adc    ch,BYTE PTR [ecx-0x4a]
  41c3f7:	jae    0x41c3f8
  41c3f9:	adc    BYTE PTR [edx+0x486c8202],bl
  41c3ff:	cmp    eax,DWORD PTR [edx]
  41c401:	ins    DWORD PTR es:[edi],dx
  41c402:	ds push 0x51bca26f
  41c408:	and    dl,0x5f
  41c40b:	push   esi
  41c40c:	addr16 dec esp
  41c40e:	dec    esp
  41c40f:	out    0x31,eax
  41c411:	pop    esp
  41c412:	addr16 mov bh,0xa1
  41c415:	(bad)  
  41c416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c417:	xchg   edx,eax
  41c418:	gs push ecx
  41c41a:	retf   0xc88b
  41c41d:	icebp  
  41c41e:	cmp    DWORD PTR [ecx-0x10],ebx
  41c421:	xchg   ebx,eax
  41c422:	imul   ecx,DWORD PTR [eax+edx*8+0x27ee2ead],0x10
  41c42a:	rcr    BYTE PTR [esp+ebp*1+0x3a],cl
  41c42e:	nop
  41c42f:	ds and eax,0x12ea7f49
  41c435:	inc    eax
  41c436:	loop   0x41c481
  41c438:	retf   
  41c439:	xor    dh,0x21
  41c43c:	mov    edi,0x5a09355e
  41c441:	scas   al,BYTE PTR es:[edi]
  41c442:	jmp    0xb122:0xabecd4d4
  41c449:	sub    al,0x96
  41c44b:	adc    eax,0x2395976d
  41c450:	mov    esp,0xe8ceb15b
  41c455:	mov    al,0x60
  41c457:	shl    BYTE PTR [edi+0x4e],cl
  41c45a:	addr16 std 
  41c45c:	pusha  
  41c45d:	stc    
  41c45e:	jge    0x41c4c6
  41c460:	add    edi,DWORD PTR [edi]
  41c462:	sub    BYTE PTR [esi+0x27788771],dl
  41c468:	or     ecx,DWORD PTR [ecx+edx*8+0x30]
  41c46c:	mov    esi,?
  41c46e:	push   ebx
  41c46f:	mov    ecx,0x9a6f26f3
  41c474:	cwde   
  41c475:	imul   esp,DWORD PTR [ebp+ecx*1-0x28baa162],0x78
  41c47d:	add    eax,DWORD PTR ds:0x5988b2d5
  41c483:	push   esp
  41c484:	dec    ebp
  41c485:	popa   
  41c486:	adc    cl,0x92
  41c489:	mov    eax,0xebc6468a
  41c48e:	nop
  41c48f:	ja     0x41c467
  41c491:	pop    ebp
  41c492:	aam    0x39
  41c494:	push   ebp
  41c495:	imul   edx,DWORD PTR [ecx+0x78],0x881aa4b0
  41c49c:	clc    
  41c49d:	dec    eax
  41c49e:	xor    ebx,ebp
  41c4a0:	inc    ecx
  41c4a1:	iret   
  41c4a2:	xor    esp,DWORD PTR [edx-0xf8a506c]
  41c4a8:	imul   edx,esp,0xffffff8b
  41c4ab:	stc    
  41c4ac:	adc    al,0xfa
  41c4ae:	push   ecx
  41c4af:	add    DWORD PTR [eax-0x6708f2d],eax
  41c4b5:	xchg   dl,cl
  41c4b7:	retf   
  41c4b8:	mov    esi,0x37155a34
  41c4bd:	inc    eax
  41c4be:	xchg   esi,eax
  41c4bf:	dec    edx
  41c4c0:	ret    
  41c4c1:	mov    cl,0xbe
  41c4c3:	or     ch,dh
  41c4c5:	push   eax
  41c4c6:	sti    
  41c4c7:	push   es
  41c4c8:	popa   
  41c4c9:	pop    ss
  41c4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4cb:	popf   
  41c4cc:	xchg   ebp,eax
  41c4cd:	mov    edi,DWORD PTR [ebx-0x65]
  41c4d0:	and    bh,BYTE PTR ds:0x9f4da9e1
  41c4d6:	sub    dh,ch
  41c4d8:	adc    al,0x65
  41c4da:	add    eax,0xaf0bca42
  41c4df:	popf   
  41c4e0:	call   0xae6b:0xed0f9fe1
  41c4e7:	fldenv [esi+0x545838a]
  41c4ed:	xor    al,0xaa
  41c4ef:	fistp  DWORD PTR [eax+0x79]
  41c4f2:	pop    edx
  41c4f3:	mov    dh,0x85
  41c4f5:	loop   0x41c4f4
  41c4f7:	sub    dh,dh
  41c4f9:	dec    edx
  41c4fa:	into   
  41c4fb:	push   edx
  41c4fc:	jle    0x41c4a0
  41c4fe:	sub    ah,BYTE PTR [esp+edx*1]
  41c501:	pop    es
  41c502:	jnp    0x41c4bf
  41c504:	ret    0x5033
  41c507:	ror    BYTE PTR [eax-0x5313f197],cl
  41c50d:	mov    ds:0x5d73468f,eax
  41c512:	cwde   
  41c513:	out    0x54,eax
  41c515:	loopne 0x41c564
  41c517:	(bad)  
  41c518:	(bad)  
  41c51a:	sub    ebx,edi
  41c51c:	mov    esi,0x3bcf7636
  41c521:	adc    DWORD PTR [ebx-0x57b30c3f],esi
  41c527:	in     al,dx
  41c528:	hlt    
  41c529:	shr    DWORD PTR [ebp+ebx*2+0x75],1
  41c52d:	imul   ebp,DWORD PTR [edi-0x7283e421],0x588b40bd
  41c537:	dec    esi
  41c538:	test   BYTE PTR [ebx+ecx*4],dh
  41c53b:	sbb    DWORD PTR [esi-0x1f48d997],0xffffffe1
  41c542:	sbb    BYTE PTR [ecx],al
  41c544:	sub    al,0x83
  41c546:	inc    edx
  41c547:	(bad)  
  41c548:	sbb    DWORD PTR [eax+0x3ff1447f],eax
  41c54e:	cli    
  41c54f:	cmp    dh,al
  41c551:	sub    DWORD PTR [esp+edx*2-0x11],edi
  41c555:	in     eax,dx
  41c556:	inc    ecx
  41c557:	cmp    BYTE PTR [eax+0x637da65f],ah
  41c55d:	jno    0x41c59a
  41c55f:	repz hlt 
  41c561:	or     esp,DWORD PTR [ebp+eax*8+0x4f]
  41c565:	(bad)  
  41c566:	jp     0x41c5c1
  41c568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c569:	cmp    DWORD PTR [ecx],ebp
  41c56b:	add    DWORD PTR [edi+0x27c43342],ebx
  41c571:	fdiv   QWORD PTR [edx+edx*1-0xaed6c28]
  41c578:	fmulp  st(0),st
  41c57a:	xor    DWORD PTR [edi-0x2b],esi
  41c57d:	(bad)  
  41c57f:	imul   edi,DWORD PTR [edx-0x41c5670b],0x69b23446
  41c589:	mov    esi,0x1906272c
  41c58e:	sbb    eax,0x6900a46
  41c593:	inc    DWORD PTR [ecx]
  41c595:	ds jl  0x41c545
  41c598:	mov    ds:0x99acd90a,al
  41c59d:	pop    esp
  41c59e:	adc    al,0xcc
  41c5a0:	mov    cl,0xef
  41c5a2:	sti    
  41c5a3:	xor    eax,0x4bfe7a77
  41c5a8:	pop    ebp
  41c5a9:	and    BYTE PTR [esi+0x29],ah
  41c5ac:	mov    WORD PTR ds:0x3b29d85f,fs
  41c5b2:	sbb    bh,BYTE PTR [ecx+0x4d31a38b]
  41c5b8:	lock add bh,BYTE PTR [edi-0x60546b21]
  41c5bf:	(bad)  [edi+0x229e0612]
  41c5c5:	outs   dx,BYTE PTR ds:[esi]
  41c5c6:	out    dx,al
  41c5c7:	push   edx
  41c5c8:	adc    eax,DWORD PTR [ebp+eax*8+0x2f]
  41c5cc:	mov    eax,ds:0x9eaefc8e
  41c5d1:	fstp   DWORD PTR [ebx+0x533055c7]
  41c5d7:	shl    DWORD PTR [eax+0x7d],1
  41c5da:	(bad)  
  41c5db:	xchg   edi,eax
  41c5dc:	and    BYTE PTR [edx+0x2a],0xb3
  41c5e0:	cdq    
  41c5e1:	cmp    BYTE PTR gs:[eax],bh
  41c5e4:	adc    al,0xf6
  41c5e6:	sbb    cl,BYTE PTR [ebx+0x2a]
  41c5e9:	xchg   BYTE PTR [eax+0x2d1716c3],bl
  41c5ef:	push   ebx
  41c5f0:	sub    eax,0x40c1b6ed
  41c5f5:	inc    ecx
  41c5f6:	adc    al,0x44
  41c5f8:	mov    bl,0x23
  41c5fa:	mov    esp,0xe4ef8682
  41c5ff:	cmp    al,0x12
  41c601:	cwde   
  41c602:	and    esi,DWORD PTR [edi]
  41c604:	aad    0x83
  41c606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c607:	add    al,0xf1
  41c609:	cmp    ebp,DWORD PTR [edx+0x68f9e784]
  41c60f:	jmp    0x5dbfeee9
  41c614:	test   DWORD PTR [eax+0x67],esi
  41c617:	adc    esp,ebx
  41c619:	xchg   esi,eax
  41c61a:	and    DWORD PTR [ecx],0xffffffc2
  41c61d:	and    BYTE PTR [eax-0x6222827d],0x3d
  41c624:	aad    0xa8
  41c626:	jmp    0x41c5d2
  41c628:	sbb    eax,0x67bf50ce
  41c62d:	push   0x7f
  41c62f:	imul   ecx,DWORD PTR [ebx],0x59
  41c632:	pop    esi
  41c633:	into   
  41c634:	and    al,0x7f
  41c636:	and    eax,0xa21ad43a
  41c63b:	in     eax,dx
  41c63c:	jnp    0x41c698
  41c63e:	pop    ebp
  41c63f:	and    eax,0xf6db1623
  41c644:	popa   
  41c645:	sub    DWORD PTR [ecx+edx*1-0x56c92a95],ecx
  41c64c:	inc    esi
  41c64d:	fmul   QWORD PTR [ecx+0x14]
  41c650:	(bad)  
  41c651:	fcom   QWORD PTR [esp+ebp*2+0x569db7a]
  41c658:	out    dx,al
  41c659:	outs   dx,BYTE PTR ds:[esi]
  41c65a:	inc    ebp
  41c65b:	out    dx,eax
  41c65c:	leave  
  41c65d:	mov    edi,DWORD PTR [edi-0x5d1b731d]
  41c663:	lods   eax,DWORD PTR ds:[esi]
  41c664:	ss scas eax,DWORD PTR es:[edi]
  41c666:	loopne 0x41c64e
  41c668:	leave  
  41c669:	sub    bh,BYTE PTR [ebp+0x13048ce8]
  41c66f:	fcmovb st,st(7)
  41c671:	mov    eax,ds:0x1622226e
  41c676:	in     eax,0x8d
  41c678:	mov    esp,0xd351a6e6
  41c67d:	loop   0x41c68e
  41c67f:	sub    eax,0xd8baeda7
  41c684:	add    al,0x57
  41c686:	scas   eax,DWORD PTR es:[edi]
  41c687:	sti    
  41c688:	jecxz  0x41c6dd
  41c68a:	sbb    cl,ah
  41c68c:	dec    eax
  41c68d:	setno  BYTE PTR [esi+0x7a]
  41c691:	fwait
  41c692:	pop    esi
  41c693:	loopne 0x41c670
  41c695:	jbe    0x41c6c4
  41c697:	push   esp
  41c698:	pop    esp
  41c699:	fsub   st,st(5)
  41c69b:	mov    ebx,0x825f5963
  41c6a0:	bound  edi,QWORD PTR [eax]
  41c6a2:	or     al,0x94
  41c6a4:	lea    ebx,[edx-0x4b8bbdd0]
  41c6aa:	push   ebp
  41c6ab:	jp     0x41c6a8
  41c6ad:	push   ecx
  41c6ae:	loope  0x41c6dc
  41c6b0:	jle    0x41c670
  41c6b2:	push   0x35
  41c6b4:	and    dh,BYTE PTR [eax-0x503bc2ed]
  41c6ba:	js     0x41c6ea
  41c6bc:	cli    
  41c6bd:	arpl   WORD PTR [ebp+0x1e],di
  41c6c0:	sub    al,0x64
  41c6c2:	bound  eax,QWORD PTR [ecx-0x10b813b4]
  41c6c8:	xchg   esi,eax
  41c6c9:	jmp    0xfdd0:0xcf6fd8e4
  41c6d0:	jge    0x41c70f
  41c6d2:	jo     0x41c732
  41c6d4:	sbb    al,0x4a
  41c6d6:	jne    0x41c6b8
  41c6d8:	stc    
  41c6d9:	fsubrp st(5),st
  41c6db:	jge    0x41c72f
  41c6dd:	outs   dx,DWORD PTR ds:[esi]
  41c6de:	aaa    
  41c6df:	aad    0x68
  41c6e1:	(bad)  
  41c6e2:	iret   
  41c6e3:	sub    al,0xa4
  41c6e5:	mov    al,0x65
  41c6e7:	lods   eax,DWORD PTR ds:[esi]
  41c6e8:	jmp    DWORD PTR [ecx+eiz*2-0x476d1e31]
  41c6ef:	mov    edi,0xd051a09e
  41c6f4:	and    dl,dh
  41c6f6:	sub    dl,BYTE PTR [eax+0x310872c7]
  41c6fc:	mov    cl,0xab
  41c6fe:	jb     0x41c75e
  41c700:	ja     0x41c6d8
  41c702:	sub    al,0x25
  41c704:	not    DWORD PTR [esi-0x2d]
  41c707:	scas   al,BYTE PTR es:[edi]
  41c708:	xchg   edx,eax
  41c709:	mov    esp,0x40bf3a89
  41c70e:	in     al,0x50
  41c710:	mov    eax,0x8fea4122
  41c715:	inc    ebp
  41c716:	cmp    eax,0xdaf24559
  41c71b:	hlt    
  41c71c:	dec    eax
  41c71d:	stc    
  41c71e:	xchg   esp,eax
  41c71f:	adc    dl,BYTE PTR [esi]
  41c721:	fcmovbe st,st(4)
  41c723:	or     ah,bl
  41c725:	shl    DWORD PTR [esi+ebp*4],1
  41c728:	xor    ecx,edx
  41c72a:	add    DWORD PTR [esi-0x19e7dfae],0xaf61063f
  41c734:	sti    
  41c735:	and    bl,al
  41c737:	(bad)  [ebp+esi*2-0x5ed69ed6]
  41c73e:	sub    DWORD PTR [ebx],0xffffff98
  41c741:	mov    ds:0x2027ac70,eax
  41c746:	sbb    al,0x0
  41c748:	xor    ch,BYTE PTR [ebp+0x76]
  41c74b:	mov    edx,0x59383e75
  41c750:	outs   dx,BYTE PTR ds:[esi]
  41c751:	ficom  WORD PTR [bx-0x41]
  41c755:	xor    bl,BYTE PTR [edx+0x50537fd3]
  41c75b:	out    dx,al
  41c75c:	mov    dh,0x62
  41c75e:	sbb    BYTE PTR [ebp+0x65013f64],ch
  41c764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c765:	sbb    eax,0xdd7818e5
  41c76a:	rcl    DWORD PTR [edx+0x1c],1
  41c76d:	sub    cl,BYTE PTR [ecx]
  41c76f:	test   DWORD PTR [esi+0x77c3332b],0x5b832179
  41c779:	fimul  DWORD PTR [edi-0x68633ba9]
  41c77f:	inc    ebp
  41c780:	add    bh,BYTE PTR [edx+edx*1+0x9daf2e2]
  41c787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c788:	xchg   esp,eax
  41c789:	test   al,0xa6
  41c78b:	out    0xd3,al
  41c78d:	inc    ebp
  41c78e:	imul   edx,DWORD PTR [edx+ebx*8],0xffffff92
  41c792:	jl     0x41c75d
  41c794:	scas   eax,DWORD PTR es:[edi]
  41c795:	in     eax,dx
  41c796:	enter  0x5d19,0x9c
  41c79a:	int3   
  41c79b:	jp     0x41c75e
  41c79d:	clc    
  41c79e:	xor    al,0x2
  41c7a0:	dec    ebx
  41c7a1:	xchg   edi,eax
  41c7a2:	nop
  41c7a3:	cdq    
  41c7a4:	xchg   ebx,eax
  41c7a5:	xchg   edi,eax
  41c7a6:	adc    al,0xda
  41c7a8:	pushf  
  41c7a9:	div    BYTE PTR [ebx]
  41c7ab:	push   cs
  41c7ac:	loop   0x41c7e3
  41c7ae:	shl    bh,cl
  41c7b0:	sti    
  41c7b1:	mov    dh,0xd1
  41c7b3:	xor    eax,0x3b3ae2a7
  41c7b8:	outs   dx,DWORD PTR ds:[esi]
  41c7b9:	push   ecx
  41c7ba:	call   0xc3e6:0xe414c278
  41c7c1:	jge    0x41c745
  41c7c3:	rcl    BYTE PTR [edi],0x15
  41c7c6:	arpl   WORD PTR [ecx+0x30],dx
  41c7c9:	test   bl,0x32
  41c7cc:	add    ecx,DWORD PTR [edi-0x4270db19]
  41c7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d3:	or     esp,DWORD PTR [edi-0xb]
  41c7d6:	pop    ss
  41c7d7:	loopne 0x41c82c
  41c7d9:	push   0x67
  41c7db:	sub    eax,0x2317b50
  41c7e0:	dec    ebp
  41c7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7e2:	mov    bl,0x5e
  41c7e4:	inc    edx
  41c7e5:	fs cs test eax,0xa1249452
  41c7ec:	iret   
  41c7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ee:	jb     0x41c7b7
  41c7f0:	dec    esp
  41c7f1:	mov    bl,0xcc
  41c7f3:	adc    DWORD PTR [esi-0x3d],ecx
  41c7f6:	sub    eax,0xab8ac4df
  41c7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7fc:	retf   
  41c7fd:	fiadd  DWORD PTR [eax+0x6d]
  41c800:	es cmp eax,0x45e5cec
  41c806:	jnp    0x41c7ed
  41c808:	out    dx,eax
  41c809:	or     DWORD PTR [ecx-0x7f],0x76
  41c80d:	popf   
  41c80e:	dec    edi
  41c80f:	in     eax,0x92
  41c811:	inc    edx
  41c812:	sub    DWORD PTR [esp+ebp*1+0x5fcd9114],0x5e
  41c81a:	test   esp,ebx
  41c81c:	jae    0x41c7da
  41c81e:	inc    edx
  41c81f:	clc    
  41c820:	or     BYTE PTR [ecx],dh
  41c822:	and    eax,0x341760b2
  41c827:	call   0x749:0x4a0bb744
  41c82e:	pop    ebx
  41c82f:	sub    al,0xcd
  41c831:	fst    QWORD PTR [eax]
  41c833:	sbb    BYTE PTR [eax-0x5fbd8fae],0x47
  41c83a:	cmp    dh,BYTE PTR [ebp+ecx*2+0x72]
  41c83e:	mov    edx,0x94cd6b8f
  41c843:	shr    DWORD PTR [esi-0x229eda9e],0x9b
  41c84a:	mov    ch,ch
  41c84c:	pushw  cs
  41c84e:	mov    bl,0x77
  41c850:	or     BYTE PTR [eax-0x23],al
  41c853:	test   eax,0x10db7750
  41c858:	rol    DWORD PTR [esi-0x7a078118],0x7d
  41c85f:	sti    
  41c860:	mov    esp,0xa9b90e58
  41c865:	push   edi
  41c866:	cdq    
  41c867:	add    BYTE PTR [eax],al
  41c869:	dec    ebp
  41c86a:	inc    esi
  41c86b:	(bad)  
  41c86c:	loopne 0x41c8a5
  41c86e:	loopne 0x41c84a
  41c870:	fsub   DWORD PTR [eax-0x147eca30]
  41c876:	xor    bl,al
  41c878:	push   ebx
  41c879:	sbb    BYTE PTR [ebx],dh
  41c87b:	inc    esp
  41c87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87d:	hlt    
  41c87e:	push   eax
  41c87f:	daa    
  41c880:	pop    ss
  41c881:	(bad)  
  41c882:	hlt    
  41c883:	ror    BYTE PTR [esi+edx*4],0xa7
  41c887:	xor    DWORD PTR [ebx-0x29],edx
  41c88a:	lahf   
  41c88b:	loopne 0x41c879
  41c88d:	aam    0xc7
  41c88f:	xor    eax,0xdb48de3c
  41c894:	loope  0x41c8b0
  41c896:	in     eax,dx
  41c897:	push   edi
  41c898:	mov    gs,edi
  41c89a:	fdivr  st(6),st
  41c89c:	pop    edi
  41c89d:	test   DWORD PTR [ecx+0x1b078572],ebp
  41c8a3:	ds push eax
  41c8a5:	cld    
  41c8a6:	lods   al,BYTE PTR ds:[esi]
  41c8a7:	push   esi
  41c8a8:	mov    ebp,0x747608e9
  41c8ad:	int3   
  41c8ae:	call   0x573fbfb2
  41c8b3:	adc    DWORD PTR [ecx],esi
  41c8b5:	xchg   ebp,eax
  41c8b6:	mov    eax,ds:0xdf53541f
  41c8bb:	enter  0xb11f,0xe9
  41c8bf:	pop    esi
  41c8c0:	xchg   edx,eax
  41c8c1:	and    al,0xf2
  41c8c3:	sub    BYTE PTR [ecx],cl
  41c8c5:	gs jbe 0x41c86b
  41c8c8:	mov    esp,0x347d2102
  41c8cd:	mov    ebp,0xce9e3614
  41c8d2:	outs   dx,DWORD PTR ds:[esi]
  41c8d3:	add    BYTE PTR [edx+0x1a8ee437],dh
  41c8d9:	arpl   sp,bx
  41c8db:	cmp    al,BYTE PTR [ecx]
  41c8dd:	mov    esi,0xf06d1327
  41c8e2:	cmp    eax,0x6068a6a6
  41c8e7:	cmp    ecx,ebx
  41c8e9:	jp     0x41c903
  41c8eb:	(bad)  
  41c8ec:	out    dx,al
  41c8ed:	inc    edi
  41c8ee:	xor    al,0x5
  41c8f0:	outs   dx,BYTE PTR ds:[esi]
  41c8f1:	imul   eax,DWORD PTR [ebx],0x36f81aca
  41c8f7:	enter  0x9d7b,0x70
  41c8fb:	out    dx,eax
  41c8fc:	mov    esi,0xcb6dd81b
  41c901:	sbb    DWORD PTR [esi+0x3bcd9c98],eax
  41c907:	(bad)  
  41c908:	jl     0x41c903
  41c90a:	not    BYTE PTR [ebp+0x34]
  41c90d:	sub    BYTE PTR [esi+0x4],cl
  41c910:	ret    0xc8d0
  41c913:	mov    BYTE PTR [eax],0x96
  41c916:	lock adc eax,0xf3769b01
  41c91c:	push   eax
  41c91d:	mov    esp,0x11b1d030
  41c922:	jbe    0x41c95f
  41c924:	inc    ebx
  41c925:	mov    dh,0x5d
  41c927:	sti    
  41c928:	es mov dl,0x91
  41c92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92c:	dec    edi
  41c92d:	cld    
  41c92e:	std    
  41c92f:	outs   dx,DWORD PTR ds:[esi]
  41c930:	or     esi,DWORD PTR [edi-0x7c]
  41c933:	mov    edx,DWORD PTR ds:0xfb00e1e2
  41c939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c93a:	outs   dx,DWORD PTR ds:[esi]
  41c93b:	stos   DWORD PTR es:[edi],eax
  41c93c:	mov    ds:0x944d6e49,eax
  41c941:	popf   
  41c942:	in     al,dx
  41c943:	stos   BYTE PTR es:[edi],al
  41c944:	add    ebx,0x429bace2
  41c94a:	mov    bl,0xf4
  41c94c:	cmp    DWORD PTR [edi],ecx
  41c94e:	enter  0x3898,0x9c
  41c952:	enter  0xf8dd,0x2a
  41c956:	mov    ch,0x2c
  41c958:	adc    bl,BYTE PTR [edx-0x4a4473f1]
  41c95e:	shl    BYTE PTR [edx-0x57],cl
  41c961:	add    BYTE PTR [eax],dh
  41c963:	enter  0x7619,0xe6
  41c967:	dec    ebx
  41c968:	or     esp,DWORD PTR [esi+0x15]
  41c96b:	out    dx,al
  41c96c:	sar    ch,cl
  41c96e:	test   ch,cl
  41c970:	pop    eax
  41c971:	jg     0x41c9a3
  41c973:	or     al,0x10
  41c975:	lods   eax,DWORD PTR ds:[esi]
  41c976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c977:	enter  0x65d0,0x31
  41c97b:	push   eax
  41c97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c97d:	sub    BYTE PTR [esi+0x48ee93f3],al
  41c983:	pop    es
  41c984:	push   edx
  41c985:	shr    BYTE PTR [edx+0x30],1
  41c988:	bound  eax,QWORD PTR [ebx]
  41c98a:	and    eax,0x675c353a
  41c98f:	adc    ebx,DWORD PTR [eax-0x4c]
  41c992:	mov    esi,0xdc34eab1
  41c997:	or     al,0x28
  41c999:	iret   
  41c99a:	adc    BYTE PTR [ebp+0x4e62e87c],dl
  41c9a0:	inc    esi
  41c9a1:	inc    esp
  41c9a2:	mov    ch,0x7f
  41c9a4:	and    cl,dl
  41c9a6:	iret   
  41c9a7:	aaa    
  41c9a8:	mov    cl,0xfc
  41c9aa:	jnp    0x41c955
  41c9ac:	jne    0x41c9dd
  41c9ae:	mov    bl,0x95
  41c9b0:	pop    ss
  41c9b1:	daa    
  41c9b2:	mov    ?,WORD PTR [ecx-0x7f]
  41c9b5:	mov    DWORD PTR [ebx],esp
  41c9b7:	mov    ecx,0xfde9cd4f
  41c9bc:	(bad)  
  41c9bd:	pop    eax
  41c9be:	loopne 0x41c9e0
  41c9c0:	ss push edi
  41c9c2:	jecxz  0x41c98a
  41c9c4:	xlat   BYTE PTR ds:[ebx]
  41c9c5:	mov    edi,esp
  41c9c7:	ds push eax
  41c9c9:	jecxz  0x41ca3c
  41c9cb:	mov    ecx,0xb354903c
  41c9d0:	mov    bl,0x22
  41c9d2:	push   eax
  41c9d3:	xchg   BYTE PTR [ecx-0x271bcecc],bl
  41c9d9:	rcl    BYTE PTR [edi],1
  41c9db:	xor    ebp,DWORD PTR [edx-0x48630fa0]
  41c9e1:	fist   DWORD PTR [ecx+eiz*2]
  41c9e4:	inc    esp
  41c9e5:	mov    gs,WORD PTR [ebx]
  41c9e7:	mov    ecx,0x2d640b28
  41c9ec:	mov    esp,0xa990193f
  41c9f1:	jge    0x41c9e1
  41c9f3:	sbb    eax,0xb2d5db96
  41c9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f9:	ret    0x3ee8
  41c9fc:	jnp    0x41ca68
  41c9fe:	fwait
  41c9ff:	jg     0x41c9c6
  41ca01:	push   eax
  41ca02:	mov    eax,ds:0x3979c89f
  41ca07:	repz and eax,0x2fa6c2df
  41ca0d:	mov    bh,0x23
  41ca0f:	xchg   DWORD PTR [esi],edx
  41ca11:	mov    ebp,0x63165991
  41ca16:	stos   DWORD PTR es:[edi],eax
  41ca17:	inc    ebp
  41ca18:	or     edx,DWORD PTR [esp+ebx*1-0x5b]
  41ca1c:	pop    ebx
  41ca1d:	fcmovb st,st(0)
  41ca1f:	jno    0x41c9b9
  41ca21:	rol    BYTE PTR [eax+0x58],cl
  41ca24:	(bad)  
  41ca25:	jno    0x41ca18
  41ca27:	aam    0x37
  41ca29:	pop    ecx
  41ca2a:	and    DWORD PTR [edx+0xfecaf72],ecx
  41ca30:	ins    DWORD PTR es:[edi],dx
  41ca31:	and    eax,0x75f35764
  41ca36:	arpl   si,dx
  41ca38:	(bad)  
  41ca39:	loopne 0x41ca51
  41ca3b:	sub    eax,DWORD PTR [ecx+0x71ec547b]
  41ca41:	out    dx,eax
  41ca42:	dec    esi
  41ca44:	data16 and al,0x3b
  41ca47:	and    cl,ch
  41ca49:	or     DWORD PTR [ebx+0x3abac0c3],edx
  41ca4f:	sbb    DWORD PTR [eax],0xc93e0813
  41ca55:	loop   0x41ca29
  41ca57:	stc    
  41ca58:	loop   0x41ca68
  41ca5a:	mov    eax,0x8c8e634
  41ca5f:	shr    DWORD PTR [ebp+ebx*2-0x4ade14f9],1
  41ca66:	(bad)  
  41ca67:	ror    BYTE PTR [ecx],1
  41ca69:	aam    0x69
  41ca6b:	push   ebx
  41ca6c:	int3   
  41ca6d:	jl     0x41ca41
  41ca6f:	jns    0x41ca90
  41ca71:	mov    esp,0x4963e804
  41ca76:	mov    BYTE PTR [ecx+eax*1+0x27c53e0d],bl
  41ca7d:	iret   
  41ca7e:	inc    edx
  41ca7f:	retf   
  41ca80:	jg     0x41cac5
  41ca82:	(bad)  
  41ca83:	xlat   BYTE PTR ds:[ebx]
  41ca84:	out    dx,eax
  41ca85:	sbb    bl,BYTE PTR [ecx-0x20bc729e]
  41ca8b:	bound  esi,QWORD PTR [ecx-0x19c54105]
  41ca91:	mov    edx,0xd08b790d
  41ca96:	xor    esi,DWORD PTR [ebx]
  41ca98:	xor    ah,dl
  41ca9a:	enter  0x282,0x19
  41ca9e:	push   0x454823ae
  41caa3:	pop    ds
  41caa4:	xlat   BYTE PTR ds:[ebx]
  41caa5:	ds cdq 
  41caa7:	adc    ebp,DWORD PTR [esi+0x10]
  41caaa:	push   ebp
  41caab:	mov    dh,0x6c
  41caad:	sti    
  41caae:	fld    DWORD PTR [esi-0xc0b5c13]
  41cab4:	daa    
  41cab5:	fdivr  DWORD PTR [eax+0x4567a3b6]
  41cabb:	inc    esp
  41cabd:	sub    ecx,ebx
  41cabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac0:	push   ebx
  41cac1:	es xchg ebp,eax
  41cac3:	jl     0x41caac
  41cac5:	mov    bh,0x3f
  41cac7:	mov    ds:0x62497e1e,eax
  41cacc:	mov    edx,0x2eb1fc63
  41cad1:	mov    ds:0xcec7e75b,eax
  41cad6:	aaa    
  41cad7:	and    ecx,DWORD PTR [esi-0x504d94e5]
  41cadd:	ror    BYTE PTR [ebp+0x2],1
  41cae0:	retf   
  41cae1:	inc    eax
  41cae2:	in     eax,0x16
  41cae4:	push   esp
  41cae5:	sar    BYTE PTR [ebx],1
  41cae7:	or     eax,0x1d8cc53e
  41caec:	rcl    DWORD PTR [ebx-0x1bf06a41],0x47
  41caf3:	xchg   esi,eax
  41caf4:	or     eax,0x4986357d
  41caf9:	data16 jge 0x41cb58
  41cafc:	fistp  DWORD PTR [ebx+0x435af7dc]
  41cb02:	jns    0x41cb57
  41cb04:	int    0x68
  41cb06:	jne    0x41caa7
  41cb08:	jne    0x41cb20
  41cb0a:	jae    0x41cb24
  41cb0c:	inc    esp
  41cb0d:	popa   
  41cb0e:	jmp    0x41cb64
  41cb10:	mov    dh,0xf4
  41cb12:	pop    ecx
  41cb13:	jge    0x41caeb
  41cb15:	push   es
  41cb16:	loopne 0x41caa5
  41cb18:	xor    cl,cl
  41cb1a:	mov    BYTE PTR [esp+esi*8+0x6c],0x60
  41cb1f:	sub    esp,DWORD PTR [ecx+0x23]
  41cb22:	mov    eax,0xef036509
  41cb27:	test   BYTE PTR [ebp-0x2d],cl
  41cb2a:	fst    QWORD PTR [edi-0x56]
  41cb2d:	retf   0xc3d6
  41cb30:	je     0x41cbad
  41cb32:	out    dx,al
  41cb33:	dec    eax
  41cb34:	push   ecx
  41cb35:	dec    ebp
  41cb36:	push   edi
  41cb37:	fld    QWORD PTR [esi]
  41cb39:	test   BYTE PTR [eax],ch
  41cb3b:	and    eax,0xce01c446
  41cb40:	aad    0xda
  41cb42:	push   eax
  41cb43:	aad    0x70
  41cb45:	stc    
  41cb46:	scas   al,BYTE PTR es:[edi]
  41cb47:	out    dx,al
  41cb48:	mov    edi,0x97e04736
  41cb4d:	pop    eax
  41cb4e:	add    eax,0xe9c4b54a
  41cb53:	daa    
  41cb54:	inc    esp
  41cb55:	jp     0x41cb6f
  41cb57:	or     DWORD PTR [esi+0x1a],edx
  41cb5a:	mov    ecx,fs
  41cb5c:	lock jae 0x41cb1c
  41cb5f:	pop    esi
  41cb60:	bound  edi,QWORD PTR [ebp+0x17]
  41cb63:	call   0x2b2f2f5f
  41cb68:	stos   BYTE PTR es:[edi],al
  41cb69:	jbe    0x41cb47
  41cb6b:	shr    DWORD PTR [edx+0x1764a19a],cl
  41cb71:	xchg   DWORD PTR [ebx-0x24],ecx
  41cb74:	leave  
  41cb75:	test   eax,0xbcb1ecbf
  41cb7a:	pop    ebp
  41cb7b:	xor    eax,0x51da40b7
  41cb80:	and    al,0x53
  41cb82:	rcl    DWORD PTR [esi+0x4d971536],1
  41cb88:	dec    ebp
  41cb89:	mov    ds:0x430f37fa,eax
  41cb8e:	les    ebp,FWORD PTR [ecx+0x3eb1f330]
  41cb94:	(bad)  
  41cb96:	inc    ebp
  41cb97:	es stos DWORD PTR es:[edi],eax
  41cb99:	inc    ebx
  41cb9a:	mov    ebp,0x16c9de56
  41cb9f:	aaa    
  41cba0:	fisub  WORD PTR [edi+0x7e]
  41cba3:	push   es
  41cba4:	nop
  41cba5:	mov    ecx,0xe62af655
  41cbaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbab:	or     al,0x11
  41cbad:	call   0xce71:0x12c5d971
  41cbb4:	inc    ebp
  41cbb5:	add    ecx,DWORD PTR [ebx-0x3ac4ba11]
  41cbbb:	mov    bl,0x7a
  41cbbd:	int    0xd4
  41cbbf:	test   eax,0xc84cfcfe
  41cbc4:	sar    BYTE PTR [ebp+0x2e],0xeb
  41cbc8:	jbe    0x41cb5f
  41cbca:	addr16 mov eax,gs
  41cbcd:	ret    0x400c
  41cbd0:	(bad)  
  41cbd1:	into   
  41cbd2:	ficomp DWORD PTR [esi+ebp*4+0x5a47d354]
  41cbd9:	mov    eax,0xc6a6b465
  41cbde:	xchg   BYTE PTR [esi-0x7d9fb334],dl
  41cbe4:	dec    edx
  41cbe5:	inc    ebx
  41cbe6:	icebp  
  41cbe7:	jb     0x41cb76
  41cbe9:	call   0x9b9e5ba5
  41cbee:	cdq    
  41cbef:	xchg   edx,eax
  41cbf0:	sub    ecx,DWORD PTR [ebp-0x6e416ddb]
  41cbf6:	cli    
  41cbf7:	xchg   ebp,eax
  41cbf8:	jns    0x41cbe9
  41cbfa:	jle    0x41cc35
  41cbfc:	outs   dx,DWORD PTR ds:[esi]
  41cbfd:	inc    ecx
  41cbfe:	add    al,0xbf
  41cc00:	ret    
  41cc01:	jae    0x41cbc1
  41cc03:	mov    DWORD PTR [edx+0x3c],edx
  41cc06:	lods   al,BYTE PTR ds:[esi]
  41cc07:	push   esp
  41cc08:	stc    
  41cc09:	add    DWORD PTR [ebx+0x2e106019],0x4a
  41cc10:	xor    eax,0x5b0c9eb2
  41cc15:	mov    esp,0x73b26522
  41cc1a:	xor    eax,0x1d93af45
  41cc1f:	sbb    eax,0xb04e51ca
  41cc24:	jbe    0x41cbc5
  41cc26:	std    
  41cc27:	arpl   cx,cx
  41cc29:	jb     0x41cc46
  41cc2b:	imul   eax,DWORD PTR [ebp-0x6],0x5e8097f4
  41cc32:	push   esp
  41cc33:	mov    dh,0x2
  41cc35:	push   eax
  41cc36:	inc    esi
  41cc37:	inc    ebp
  41cc38:	dec    esi
  41cc39:	mov    eax,ds:0xa6639334
  41cc3e:	ins    DWORD PTR es:[edi],dx
  41cc3f:	jno    0x41cbd6
  41cc41:	jae    0x41cbd3
  41cc43:	imul   eax,DWORD PTR [edi-0x23],0xd62084a2
  41cc4a:	add    edx,DWORD PTR [edi-0x34]
  41cc4d:	stc    
  41cc4e:	push   es
  41cc4f:	adc    bh,BYTE PTR [esi+0x6b632852]
  41cc55:	xlat   BYTE PTR ds:[ebx]
  41cc56:	(bad)  
  41cc57:	and    ah,ch
  41cc59:	aam    0xab
  41cc5b:	adc    eax,DWORD PTR [esp+ebx*2+0xd]
  41cc5f:	sub    eax,0x3191106c
  41cc64:	scas   al,BYTE PTR es:[edi]
  41cc65:	fst    DWORD PTR [ebp-0x3c]
  41cc68:	pop    edi
  41cc69:	cmp    DWORD PTR [ebx+0x2a5ae799],eax
  41cc6f:	push   cs
  41cc70:	add    eax,0x2bc410a2
  41cc75:	dec    edx
  41cc76:	jmp    0xa3e43ec2
  41cc7b:	sub    edi,ecx
  41cc7d:	leave  
  41cc7e:	out    0xe0,al
  41cc80:	dec    ebx
  41cc81:	push   esp
  41cc82:	xchg   BYTE PTR [ebx-0x70377be2],dl
  41cc88:	sbb    al,bh
  41cc8a:	cmc    
  41cc8b:	mov    edx,0xc4723540
  41cc90:	int3   
  41cc91:	(bad)  
  41cc92:	loop   0x41cc17
  41cc94:	pop    ds
  41cc95:	in     al,0x25
  41cc97:	das    
  41cc98:	cs fadd st(1),st
  41cc9b:	jne    0x41ccb8
  41cc9d:	(bad)  
  41cc9e:	shr    BYTE PTR ds:[ebx-0x20],cl
  41cca2:	sub    BYTE PTR [eax],0xac
  41cca5:	xor    al,0x13
  41cca7:	lds    ecx,FWORD PTR [edi]
  41cca9:	cdq    
  41ccaa:	mov    dl,0x1e
  41ccac:	sbb    ebp,DWORD PTR ds:0xe1c1279a
  41ccb2:	or     bl,BYTE PTR [edx-0x4d995f02]
  41ccb8:	and    al,BYTE PTR [edi-0x4]
  41ccbb:	loopne 0x41cc64
  41ccbd:	and    DWORD PTR [edi+0x3],esp
  41ccc0:	dec    sp
  41ccc2:	jl     0x41cca0
  41ccc4:	xlat   BYTE PTR ds:[ebx]
  41ccc5:	or     ah,BYTE PTR [ebp-0x7c]
  41ccc8:	add    eax,0x78b98cc7
  41cccd:	fstp   QWORD PTR [eax+0xc]
  41ccd0:	es pop edi
  41ccd2:	out    0xfe,al
  41ccd4:	push   esp
  41ccd5:	hlt    
  41ccd6:	dec    edx
  41ccd7:	or     ecx,DWORD PTR [eax]
  41ccd9:	pushf  
  41ccda:	inc    edx
  41ccdb:	add    ch,ah
  41ccdd:	inc    eax
  41ccde:	xchg   edi,eax
  41ccdf:	aaa    
  41cce0:	jbe    0x41cca0
  41cce2:	cmp    al,dl
  41cce4:	or     edi,DWORD PTR [ebp+0x5ef3ed26]
  41ccea:	mov    ds:0x47a932b0,eax
  41ccef:	sub    DWORD PTR [ecx],0x549835cc
  41ccf5:	cmp    DWORD PTR [edi],esi
  41ccf7:	add    al,0x64
  41ccf9:	sbb    DWORD PTR [ebx+0x48],ebx
  41ccfc:	aas    
  41ccfd:	int3   
  41ccfe:	cli    
  41ccff:	push   eax
  41cd00:	cdq    
  41cd01:	(bad)  
  41cd02:	popf   
  41cd03:	in     al,dx
  41cd04:	mov    eax,0xf0999666
  41cd09:	bound  esp,QWORD PTR [edx-0x74a29ceb]
  41cd0f:	pop    edi
  41cd10:	cwde   
  41cd11:	adc    al,0x2f
  41cd13:	scas   al,BYTE PTR es:[edi]
  41cd14:	xchg   ebx,eax
  41cd15:	push   0x40
  41cd17:	cmp    DWORD PTR [ecx],0x48
  41cd1a:	pushf  
  41cd1b:	sbb    esi,DWORD PTR [eax+0x6fe4e95b]
  41cd21:	mov    eax,esp
  41cd23:	cmp    dh,BYTE PTR ds:0x88ed3c9d
  41cd29:	lods   al,BYTE PTR ds:[esi]
  41cd2a:	inc    esp
  41cd2b:	mov    eax,DWORD PTR [ebx+0x13]
  41cd2e:	ret    
  41cd2f:	jb     0x41cccb
  41cd31:	or     BYTE PTR [edi],cl
  41cd33:	xor    bh,BYTE PTR [edi-0x4c]
  41cd36:	xor    WORD PTR [edx+0x6e],cx
  41cd3a:	(bad)  
  41cd3b:	sbb    bl,BYTE PTR [edi+0x72]
  41cd3e:	push   esi
  41cd3f:	int3   
  41cd40:	jae    0x41cd8c
  41cd42:	ja     0x41cd46
  41cd44:	sub    BYTE PTR [esi-0x5f8e8f2a],al
  41cd4a:	out    0x8e,al
  41cd4c:	jmp    0x41ccd9
  41cd4e:	iret   
  41cd4f:	xor    dl,BYTE PTR [ebx+0x3ef7af26]
  41cd55:	jp     0x41cdd0
  41cd57:	xor    bh,BYTE PTR [edi-0x2840b601]
  41cd5d:	(bad)  
  41cd5e:	xor    cl,BYTE PTR [esi+0x5]
  41cd61:	jae    0x41cdad
  41cd63:	jns    0x41cd6c
  41cd65:	inc    edi
  41cd66:	pop    esp
  41cd67:	adc    dl,dl
  41cd69:	test   BYTE PTR [eax-0x2],ch
  41cd6c:	cmp    BYTE PTR [esi+0x63],bl
  41cd6f:	push   cs
  41cd70:	jg     0x41cdb0
  41cd72:	arpl   WORD PTR [edi-0x41],bx
  41cd75:	sti    
  41cd76:	mov    ah,0xdd
  41cd78:	dec    edx
  41cd79:	lods   al,BYTE PTR ds:[esi]
  41cd7a:	push   cs
  41cd7b:	sahf   
  41cd7c:	(bad)  
  41cd7d:	jb     0x41cda8
  41cd7f:	in     al,dx
  41cd80:	int3   
  41cd81:	jge    0x41ce01
  41cd83:	cmp    edi,DWORD PTR [ebp+0x70ddb718]
  41cd89:	xchg   ecx,eax
  41cd8a:	xchg   edi,eax
  41cd8b:	aaa    
  41cd8c:	inc    esp
  41cd8d:	fstp   st(0)
  41cd8f:	pusha  
  41cd90:	adc    ch,al
  41cd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd93:	adc    eax,DWORD PTR [esi+0x7a]
  41cd96:	pop    ebp
  41cd97:	sbb    BYTE PTR [edx+0x10e2b67d],ah
  41cd9d:	mov    BYTE PTR [ebp-0x3029a8c6],0x30
  41cda4:	dec    edi
  41cda5:	sbb    esi,DWORD PTR [ebx]
  41cda7:	dec    edx
  41cda8:	jnp    0x41cd35
  41cdaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdab:	lea    ebx,[edi+0x32]
  41cdae:	lods   al,BYTE PTR ds:[esi]
  41cdaf:	cmp    DWORD PTR [esi+0x6b],eax
  41cdb2:	outs   dx,BYTE PTR ds:[esi]
  41cdb3:	mov    bh,0xc2
  41cdb5:	inc    edx
  41cdb6:	and    edi,DWORD PTR [ecx-0x2a]
  41cdb9:	dec    edi
  41cdba:	xchg   BYTE PTR [ecx],dl
  41cdbc:	pushf  
  41cdbd:	push   eax
  41cdbe:	mov    ebx,0xafd277ba
  41cdc3:	in     eax,dx
  41cdc4:	xor    dl,BYTE PTR [ecx+0xa]
  41cdc7:	xchg   ebx,eax
  41cdc8:	ret    
  41cdc9:	shl    edx,1
  41cdcb:	mov    eax,ds:0x516edd63
  41cdd0:	dec    ebx
  41cdd1:	mov    al,0xc0
  41cdd4:	inc    eax
  41cdd5:	jmp    0x41ce37
  41cdd7:	mov    cl,0x13
  41cdd9:	(bad)  
  41cdda:	dec    ecx
  41cddb:	(bad)  
  41cddd:	cli    
  41cdde:	int    0x71
  41cde0:	cmp    BYTE PTR [eax-0x2e],bl
  41cde3:	retf   
  41cde4:	inc    ecx
  41cde5:	push   ds
  41cde6:	fnstsw WORD PTR [edx-0x45ef09b8]
  41cdec:	push   0xfe4e7b8d
  41cdf1:	cmp    eax,0xa86c8f2b
  41cdf6:	pop    ss
  41cdf7:	test   eax,0xf7a2549c
  41cdfc:	fiadd  WORD PTR [ebx+0x6d]
  41cdff:	add    esp,DWORD PTR [esi+0x17]
  41ce02:	cwde   
  41ce03:	arpl   WORD PTR [eax],si
  41ce05:	aaa    
  41ce06:	xchg   ebp,eax
  41ce07:	adc    bh,dh
  41ce09:	mov    ch,0x50
  41ce0b:	das    
  41ce0c:	fist   DWORD PTR [edi-0x40]
  41ce0f:	xor    ah,BYTE PTR [edx+0x72]
  41ce12:	popw   ss
  41ce14:	mov    ebx,0x296f0ab5
  41ce19:	bound  esp,QWORD PTR [edx-0x26d5116e]
  41ce1f:	add    cl,BYTE PTR [ebx]
  41ce21:	sahf   
  41ce22:	adc    al,0x44
  41ce24:	scas   al,BYTE PTR es:[edi]
  41ce25:	and    al,0x7c
  41ce27:	adc    dl,BYTE PTR [ebp+0x76e94751]
  41ce2d:	mov    bl,0xb0
  41ce2f:	rcr    DWORD PTR [ebx],cl
  41ce31:	jge    0x41cdce
  41ce33:	inc    ebx
  41ce34:	add    BYTE PTR [edi-0x79],ch
  41ce37:	push   edx
  41ce38:	cmp    al,0x3
  41ce3a:	test   DWORD PTR ds:0xa2c32876,eax
  41ce40:	sahf   
  41ce41:	imul   edi,DWORD PTR [ebx],0xffffffed
  41ce44:	cmp    al,ah
  41ce46:	loope  0x41ceae
  41ce48:	fcomp  st(1)
  41ce4a:	xchg   edi,eax
  41ce4b:	fsub   DWORD PTR [esi]
  41ce4d:	cmp    BYTE PTR [edi+0x61],al
  41ce50:	inc    eax
  41ce51:	jge    0x41ce70
  41ce53:	daa    
  41ce54:	pop    ebx
  41ce55:	mov    al,ds:0x3a974ac4
  41ce5a:	aaa    
  41ce5b:	fincstp 
  41ce5d:	call   0xc030:0x82d84303
  41ce64:	adc    al,0x66
  41ce66:	lods   eax,DWORD PTR ds:[esi]
  41ce67:	cmp    al,0x61
  41ce69:	scas   al,BYTE PTR es:[edi]
  41ce6a:	ins    BYTE PTR es:[edi],dx
  41ce6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce6c:	fadd   DWORD PTR [edx]
  41ce6e:	mov    esi,0x24b5c2e6
  41ce73:	fimul  DWORD PTR [ebx+0x41]
  41ce76:	shl    cl,1
  41ce78:	xchg   ebp,eax
  41ce79:	call   esp
  41ce7b:	push   0xffffff98
  41ce7d:	xor    bl,BYTE PTR [ebp*2-0x48153e14]
  41ce84:	push   esp
  41ce85:	and    bh,BYTE PTR [edx+0x3c478782]
  41ce8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce8c:	stos   DWORD PTR es:[edi],eax
  41ce8d:	cs xchg ebx,eax
  41ce8f:	cmp    bh,BYTE PTR [ebx-0x5a048ee4]
  41ce95:	pop    edi
  41ce96:	push   edx
  41ce97:	jmp    0x41ce92
  41ce99:	shl    BYTE PTR [edx],cl
  41ce9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce9c:	ins    DWORD PTR es:[edi],dx
  41ce9d:	sbb    BYTE PTR [esi],dl
  41ce9f:	sahf   
  41cea0:	jp     0x41cec1
  41cea2:	push   cs
  41cea3:	mov    al,0x0
  41cea5:	inc    esp
  41cea6:	outs   dx,BYTE PTR ds:[esi]
  41cea7:	or     esp,DWORD PTR [ecx+eiz*1+0x5b]
  41ceab:	ret    
  41ceac:	js     0x41ce7e
  41ceae:	jno    0x41cf21
  41ceb0:	jne    0x41cec7
  41ceb2:	mov    BYTE PTR [ecx+esi*1],ah
  41ceb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb6:	add    DWORD PTR [ecx],ebx
  41ceb8:	ss or  al,0x2d
  41cebb:	iret   
  41cebc:	int    0xb0
  41cebe:	xor    al,0xd0
  41cec0:	adc    dh,BYTE PTR [eax-0x76]
  41cec3:	add    DWORD PTR [ebp+0x74c8b589],edi
  41cec9:	mov    ds:0xc125c528,al
  41cece:	pop    DWORD PTR [esi-0x80]
  41ced1:	push   ebx
  41ced2:	call   0x523027eb
  41ced7:	ja     0x41ce8a
  41ced9:	sbb    eax,edx
  41cedb:	cld    
  41cedc:	into   
  41cedd:	stos   DWORD PTR es:[edi],eax
  41cede:	into   
  41cedf:	push   edi
  41cee0:	push   eax
  41cee1:	sub    dl,bh
  41cee3:	dec    esp
  41cee4:	add    esi,DWORD PTR [ebx-0x951ae70]
  41ceea:	fld    DWORD PTR [ebp+0x26333886]
  41cef0:	mov    eax,ds:0x8e7334fd
  41cef5:	sbb    al,0x12
  41cef7:	arpl   WORD PTR [esi-0x6f],bp
  41cefa:	mov    bh,0xc7
  41cefc:	mov    ss,WORD PTR [edi+0x6c88653c]
  41cf02:	adc    BYTE PTR [ecx+0x1d5e16ad],al
  41cf08:	cmp    ch,bl
  41cf0a:	sbb    eax,0x536c685f
  41cf0f:	xchg   ebx,eax
  41cf10:	dec    esi
  41cf11:	push   0x9cf5f371
  41cf16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf17:	shl    BYTE PTR [edi-0x7f],1
  41cf1a:	repz cmp eax,DWORD PTR [ebp-0x52]
  41cf1e:	lods   al,BYTE PTR es:[esi]
  41cf20:	xchg   ebx,eax
  41cf21:	lahf   
  41cf22:	xchg   edi,eax
  41cf23:	pop    ebx
  41cf24:	xchg   edi,eax
  41cf25:	dec    eax
  41cf26:	lea    ebx,[ebx+0x5c2ed11c]
  41cf2c:	add    dl,BYTE PTR [ebx]
  41cf2e:	push   ebp
  41cf2f:	pop    es
  41cf30:	dec    edx
  41cf31:	in     al,0x6f
  41cf33:	adc    DWORD PTR [eax],esi
  41cf35:	pop    es
  41cf36:	pop    ds
  41cf37:	outs   dx,DWORD PTR ds:[esi]
  41cf38:	stc    
  41cf39:	test   al,0xf0
  41cf3b:	int    0xe9
  41cf3d:	xor    esp,ebp
  41cf3f:	xor    eax,0x2c551756
  41cf44:	dec    edx
  41cf45:	popf   
  41cf46:	imul   edx,DWORD PTR ds:0xd3b65d17,0xffffffa8
  41cf4d:	data16 daa 
  41cf4f:	sbb    DWORD PTR [ecx+ebx*2-0x14],eax
  41cf53:	fnsave [esi]
  41cf55:	adc    edi,DWORD PTR [edx+ebp*1-0x76]
  41cf59:	call   FWORD PTR [ebp+0xf268734]
  41cf5f:	jae    0x41cf60
  41cf61:	or     al,0xe8
  41cf63:	xchg   ebx,eax
  41cf64:	std    
  41cf65:	into   
  41cf66:	test   DWORD PTR [edx+0x4a],ecx
  41cf69:	cmp    ah,BYTE PTR [ebp-0x1d]
  41cf6c:	lock xlat BYTE PTR ds:[ebx]
  41cf6e:	inc    edx
  41cf6f:	sub    bl,BYTE PTR [esi]
  41cf71:	in     al,0x66
  41cf73:	cmp    eax,0x973c3032
  41cf78:	lods   eax,DWORD PTR ds:[esi]
  41cf79:	out    dx,eax
  41cf7a:	xchg   esp,eax
  41cf7b:	xor    eax,0x14269f00
  41cf80:	inc    eax
  41cf81:	push   ecx
  41cf82:	mov    ds:0x2da6a8b3,al
  41cf87:	dec    esi
  41cf88:	cmp    BYTE PTR [edx],ch
  41cf8a:	inc    edx
  41cf8b:	sub    ebx,edi
  41cf8d:	dec    edi
  41cf8e:	cmp    al,0xeb
  41cf90:	dec    esp
  41cf91:	xchg   ebp,eax
  41cf92:	jnp    0x41cfc3
  41cf94:	mov    ecx,0xa58de484
  41cf99:	xchg   edx,eax
  41cf9a:	retf   
  41cf9b:	cmove  eax,DWORD PTR [esi]
  41cf9e:	pop    di
  41cfa0:	cwde   
  41cfa1:	push   ebx
  41cfa2:	dec    edx
  41cfa3:	aas    
  41cfa4:	mov    cl,0x60
  41cfa6:	out    0x67,al
  41cfa8:	mov    cl,0xd
  41cfaa:	shl    esp,1
  41cfac:	and    BYTE PTR [eax],0x5e
  41cfaf:	inc    ebx
  41cfb0:	xlat   BYTE PTR ds:[ebx]
  41cfb1:	add    al,0xae
  41cfb3:	push   ds
  41cfb4:	mov    edx,0x837e0645
  41cfb9:	loope  0x41cf73
  41cfbb:	jne    0x41cf88
  41cfbd:	push   eax
  41cfbe:	xchg   edx,eax
  41cfbf:	retf   
  41cfc0:	xchg   esi,eax
  41cfc1:	mov    cl,al
  41cfc3:	test   DWORD PTR [edi-0x1116654a],ecx
  41cfc9:	fdivr  QWORD PTR [edi-0x761780c3]
  41cfcf:	leave  
  41cfd0:	xor    eax,ebp
  41cfd2:	push   ds
  41cfd3:	push   ss
  41cfd4:	dec    esi
  41cfd5:	ror    DWORD PTR [ecx+eiz*4-0x5f7d1c23],cl
  41cfdc:	(bad)  
  41cfdd:	outs   dx,DWORD PTR ds:[esi]
  41cfde:	mov    edx,0x9980a925
  41cfe3:	sar    ecx,cl
  41cfe5:	iret   
  41cfe6:	pop    edi
  41cfe7:	push   es
  41cfe8:	pusha  
  41cfe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfea:	hlt    
  41cfeb:	push   esi
  41cfec:	in     eax,dx
  41cfed:	leave  
  41cfee:	imul   eax,DWORD PTR [esi],0x3
  41cff1:	repz add al,0x5a
  41cff4:	mov    eax,ds:0x7c5408d5
  41cff9:	sub    ah,BYTE PTR [eax+0x22d3085f]
  41cfff:	jecxz  0x41cfac
  41d001:	arpl   WORD PTR [ebp+eax*4-0x68],di
  41d005:	call   0xaf89fe5a
  41d00a:	mov    ch,0xb2
  41d00c:	add    cl,BYTE PTR [ecx+0x2e]
  41d00f:	sbb    ch,BYTE PTR [esp+eiz*8]
  41d012:	mov    cl,0x72
  41d014:	(bad)  
  41d015:	popf   
  41d016:	cmp    eax,0xab61200b
  41d01b:	mov    al,0xa4
  41d01d:	jmp    0x5aaffa15
  41d022:	out    0x4d,al
  41d024:	imul   ebx,DWORD PTR [edx+0x39],0x5935a1c8
  41d02b:	daa    
  41d02c:	imul   ebp,DWORD PTR [edi],0x1c
  41d02f:	test   BYTE PTR [eax],ch
  41d031:	or     al,0x95
  41d033:	popa   
  41d034:	outs   dx,DWORD PTR ds:[esi]
  41d035:	adc    DWORD PTR [edi-0x352435a0],esi
  41d03b:	jg     0x41cfdf
  41d03d:	xchg   ecx,eax
  41d03e:	in     eax,0xec
  41d040:	outs   dx,BYTE PTR ds:[esi]
  41d041:	mov    BYTE PTR ds:0x73ce,bh
  41d046:	mov    WORD PTR [edi-0x20754cb0],es
  41d04c:	das    
  41d04d:	adc    eax,0x6359e5cc
  41d052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d053:	daa    
  41d054:	pushf  
  41d055:	loop   0x41d03c
  41d057:	mov    dl,0x20
  41d059:	push   esp
  41d05a:	sub    DWORD PTR [ecx+0x29],ecx
  41d05d:	xor    bl,BYTE PTR [ecx+eiz*2]
  41d060:	outs   dx,BYTE PTR ds:[esi]
  41d061:	cmp    al,0x88
  41d063:	sbb    cl,dh
  41d065:	outs   dx,BYTE PTR ds:[esi]
  41d066:	add    BYTE PTR [ebx],al
  41d068:	iret   
  41d069:	mov    eax,0x69a624b3
  41d06e:	retf   0x4e85
  41d071:	mov    ebp,0x7d93a6b
  41d076:	jl     0x41d0a6
  41d078:	mov    es,ebx
  41d07a:	clc    
  41d07b:	xchg   DWORD PTR [edx],esp
  41d07d:	mov    ah,0x4d
  41d07f:	popa   
  41d080:	lds    ecx,FWORD PTR [edx+ecx*2+0x29736a56]
  41d087:	lea    ecx,[edi+0x43]
  41d08a:	dec    si
  41d08c:	dec    ebx
  41d08d:	add    edx,DWORD PTR [edi+0xf]
  41d090:	in     eax,0x75
  41d092:	fs push esp
  41d094:	scas   al,BYTE PTR es:[edi]
  41d095:	mov    eax,DWORD PTR [eax]
  41d097:	mov    bl,0x5d
  41d099:	xor    BYTE PTR [ebp-0x4f39396c],cl
  41d09f:	cmc    
  41d0a0:	stos   BYTE PTR es:[edi],al
  41d0a1:	push   ss
  41d0a2:	(bad)  
  41d0a3:	cs inc ecx
  41d0a5:	xor    dl,BYTE PTR [edx+0x468fc7de]
  41d0ab:	dec    dl
  41d0ad:	mov    fs,esi
  41d0af:	ds adc BYTE PTR es:[ebx-0x47025353],0x85
  41d0b8:	aad    0x2d
  41d0ba:	sbb    BYTE PTR [eiz*4+0x7edc4a07],ch
  41d0c1:	jne    0x41d12e
  41d0c3:	dec    ebx
  41d0c4:	push   ebp
  41d0c5:	scas   eax,DWORD PTR es:[edi]
  41d0c6:	in     al,dx
  41d0c7:	in     eax,0x9a
  41d0c9:	cmp    bl,ch
  41d0cb:	repz mov al,0xe0
  41d0ce:	jne    0x41d114
  41d0d0:	sub    al,cl
  41d0d2:	mov    ch,0x4f
  41d0d4:	js     0x41d127
  41d0d6:	in     al,0x2a
  41d0d8:	jmp    0x41d0ed
  41d0da:	fnstsw WORD PTR ds:0x60d83c37
  41d0e0:	ror    DWORD PTR [ecx-0x6ba903a3],cl
  41d0e6:	pop    eax
  41d0e7:	pop    ss
  41d0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e9:	jo     0x41d142
  41d0eb:	(bad)  
  41d0ec:	sbb    al,0xf
  41d0ee:	dec    esi
  41d0ef:	std    
  41d0f0:	in     eax,0x53
  41d0f2:	int3   
  41d0f3:	mov    ds:0x270b0adf,al
  41d0f8:	(bad)  [eax]
  41d0fa:	sti    
  41d0fb:	xor    edx,esi
  41d0fd:	adc    DWORD PTR [eax-0x29],edx
  41d100:	scas   eax,DWORD PTR es:[edi]
  41d101:	(bad)  
  41d102:	push   edx
  41d103:	or     DWORD PTR [ebx],esp
  41d105:	jecxz  0x41d0c6
  41d107:	sub    BYTE PTR [edi+ebx*2-0x31796eb5],bh
  41d10e:	outs   dx,BYTE PTR ds:[esi]
  41d10f:	jns    0x41d172
  41d111:	dec    ebp
  41d112:	cwde   
  41d113:	in     al,0xfc
  41d115:	je     0x41d11b
  41d117:	into   
  41d118:	jl     0x41d10b
  41d11a:	adc    BYTE PTR [ebx-0x17],bh
  41d11d:	test   al,0x92
  41d11f:	aam    0xbc
  41d121:	hlt    
  41d122:	mov    WORD PTR [edx],?
  41d124:	sbb    al,0x47
  41d126:	sbb    al,0xa7
  41d128:	push   edx
  41d129:	add    eax,0x2c82a19c
  41d12e:	ds mov ah,0xeb
  41d131:	push   esp
  41d132:	mov    dl,0x66
  41d134:	or     BYTE PTR [edx],0x78
  41d137:	retf   
  41d138:	fwait
  41d139:	mov    ch,0x81
  41d13b:	cdq    
  41d13c:	jg     0x41d0e8
  41d13e:	adc    dh,BYTE PTR ds:0x98f4b7a7
  41d144:	sahf   
  41d145:	jb     0x41d0e9
  41d147:	pop    esi
  41d148:	mov    esp,0x64514309
  41d14d:	movlps xmm6,QWORD PTR [ecx+ebp*4+0x1024675b]
  41d155:	mov    esi,0x146c7bca
  41d15a:	and    edx,DWORD PTR [edi+0x73ec87b8]
  41d160:	addr16 and bl,al
  41d163:	xor    ecx,DWORD PTR [eax+0x7a]
  41d166:	call   0xea1f1740
  41d16b:	mov    ds:0xdc4ab78e,al
  41d170:	or     BYTE PTR [eax+0x1e32e796],al
  41d176:	gs call 0xff4fe34d
  41d17c:	mov    bh,BYTE PTR [ebx]
  41d17e:	(bad)  
  41d17f:	hlt    
  41d180:	pop    eax
  41d181:	adc    bh,cl
  41d183:	mov    esp,0x696492d8
  41d188:	sbb    al,BYTE PTR [esi-0x33d44e44]
  41d18e:	(bad)  
  41d18f:	adc    al,0x9
  41d191:	dec    edi
  41d192:	sub    cl,BYTE PTR [esi-0x18]
  41d195:	dec    eax
  41d196:	cld    
  41d197:	aaa    
  41d198:	jp     0x41d1bc
  41d19a:	arpl   WORD PTR [edx+0x525fc9c2],ax
  41d1a0:	pop    ds
  41d1a1:	sub    edi,DWORD PTR [ecx]
  41d1a3:	(bad)  
  41d1a4:	mov    ecx,0x8ae28294
  41d1a9:	sub    DWORD PTR [eax],ecx
  41d1ab:	cmc    
  41d1ac:	dec    esp
  41d1ad:	loopne 0x41d22d
  41d1af:	push   ecx
  41d1b0:	fidivr WORD PTR [edi+0x61]
  41d1b3:	and    cl,bh
  41d1b5:	mov    bh,0x17
  41d1b7:	pop    edx
  41d1b8:	add    eax,0x9d10fa75
  41d1bd:	mov    ecx,0x57042ea6
  41d1c2:	sub    esi,DWORD PTR [ecx+esi*2]
  41d1c5:	push   eax
  41d1c6:	icebp  
  41d1c7:	adc    BYTE PTR [ecx-0x58],ch
  41d1ca:	lea    edx,[ebp-0x16c59362]
  41d1d0:	loop   0x41d228
  41d1d2:	(bad)  
  41d1d3:	xchg   edx,eax
  41d1d4:	repz mov ds:0x91c9096d,eax
  41d1da:	ficomp WORD PTR [ebp-0x277fea40]
  41d1e0:	pusha  
  41d1e1:	rcr    BYTE PTR [ecx+ecx*2],1
  41d1e4:	jmp    0x988c:0xa03e9f1f
  41d1eb:	mov    ss,WORD PTR [edx+edi*4]
  41d1ee:	(bad)  
  41d1ef:	in     eax,dx
  41d1f0:	sbb    eax,0xc83e7959
  41d1f5:	adc    dh,0x1
  41d1f8:	or     ecx,DWORD PTR [ebp+0x6f]
  41d1fb:	mov    ecx,0x339b34ae
  41d200:	inc    dx
  41d202:	cmp    BYTE PTR [edi],cl
  41d204:	fwait
  41d205:	pop    edi
  41d206:	or     eax,0x3d0a9dd0
  41d20b:	sar    eax,cl
  41d20d:	push   eax
  41d20e:	dec    edi
  41d20f:	out    dx,eax
  41d210:	les    ebx,FWORD PTR [ecx+edx*1]
  41d213:	mov    ds:0x2353152a,eax
  41d218:	xor    DWORD PTR [edx-0x1a77c776],0xffffffc1
  41d21f:	fwait
  41d220:	(bad)  
  41d221:	mov    cl,0xb5
  41d223:	aas    
  41d224:	jle    0x41d252
  41d226:	sub    esi,DWORD PTR [eax+0x7a]
  41d229:	retf   
  41d22a:	std    
  41d22b:	pop    eax
  41d22c:	inc    ebx
  41d22d:	(bad)  
  41d22e:	dec    esi
  41d22f:	cmp    BYTE PTR [ebx],dh
  41d231:	dec    esp
  41d232:	mov    ebp,0x80c6899b
  41d237:	jg     0x41d248
  41d239:	xor    DWORD PTR [ebp+0x27ec7780],ecx
  41d23f:	jecxz  0x41d224
  41d241:	fcomp  QWORD PTR [edi-0x14]
  41d244:	popa   
  41d245:	test   al,0xe2
  41d247:	sub    BYTE PTR [eax-0x6],dl
  41d24a:	pop    ebp
  41d24b:	add    al,ah
  41d24d:	and    al,0x1f
  41d24f:	scas   eax,DWORD PTR es:[edi]
  41d250:	and    eax,0x2db46972
  41d255:	jo     0x41d1e0
  41d257:	jg     0x41d1ea
  41d259:	leave  
  41d25a:	sbb    BYTE PTR [eax+0x1b],0x1e
  41d25e:	xor    DWORD PTR [ebp+0x4b],esi
  41d261:	imul   ebx,DWORD PTR [ebx+0x55525079],0xb20b3328
  41d26b:	call   0xed0:0xd2f3bbac
  41d272:	mov    ebx,DWORD PTR [di-0x50]
  41d276:	add    edx,ecx
  41d278:	xor    edx,ebx
  41d27a:	mov    DWORD PTR [ebp-0x50],edx
  41d27d:	mov    edx,DWORD PTR [ebp+0x8]
  41d280:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d283:	add    edx,edi
  41d285:	and    edx,ebx
  41d287:	mov    DWORD PTR [ebp-0x4c],edx
  41d28a:	mov    edx,DWORD PTR [ebp+0x8]
  41d28d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d290:	lea    edx,[ebx+edx*1+0x241fc1f]
  41d297:	mov    DWORD PTR [ebp-0x48],edx
  41d29a:	mov    edx,DWORD PTR [ebp+0x8]
  41d29d:	mov    ebx,0xfa5e15e2
  41d2a2:	sub    ebx,edx
  41d2a4:	jmp    0x41f62d
  41d2a9:	xchg   esp,eax
  41d2aa:	pop    ebx
  41d2ab:	and    DWORD PTR [ebx],ebx
  41d2ad:	mov    eax,ds:0x93db941b
  41d2b2:	jo     0x41d32d
  41d2b4:	push   ebp
  41d2b5:	aam    0xe9
  41d2b7:	and    eax,0x79fdf5e8
  41d2bc:	jp     0x41d2c4
  41d2be:	pop    edi
  41d2bf:	jp     0x41d33b
  41d2c1:	or     eax,0x735eee56
  41d2c6:	frstor [edi]
  41d2c8:	jb     0x41d2b2
  41d2ca:	mul    DWORD PTR [edi-0x526acd72]
  41d2d0:	push   eax
  41d2d1:	xor    DWORD PTR [edi],edx
  41d2d3:	add    eax,0xc086194e
  41d2d8:	popf   
  41d2d9:	(bad)  
  41d2db:	enter  0xadde,0x3
  41d2df:	ins    BYTE PTR es:[edi],dx
  41d2e0:	das    
  41d2e1:	fwait
  41d2e2:	or     dh,dh
  41d2e4:	adc    edi,ebx
  41d2e6:	sbb    eax,0xea678972
  41d2eb:	mov    esp,0x6f0cd9ed
  41d2f0:	pop    ecx
  41d2f1:	mov    ebx,0x8c9e1adc
  41d2f6:	dec    esi
  41d2f7:	icebp  
  41d2f8:	stos   BYTE PTR es:[edi],al
  41d2f9:	inc    edx
  41d2fa:	aam    0xa8
  41d2fc:	and    DWORD PTR [edi-0x623c379d],0xffffff88
  41d303:	xor    BYTE PTR [eax+0x1b0fa00c],0x6b
  41d30a:	dec    ebp
  41d30b:	stos   BYTE PTR es:[edi],al
  41d30c:	std    
  41d30d:	sub    al,0x99
  41d30f:	adc    DWORD PTR [ebp+0x22a78a5e],esi
  41d315:	and    esp,edi
  41d317:	push   edx
  41d318:	sub    ebx,DWORD PTR [esi+0x5e]
  41d31b:	in     al,dx
  41d31c:	and    ecx,edi
  41d31e:	shr    DWORD PTR [edx-0x4cc2f158],0xe2
  41d325:	out    dx,al
  41d326:	cdq    
  41d327:	push   cs
  41d328:	cld    
  41d329:	in     eax,0x21
  41d32b:	stc    
  41d32c:	aaa    
  41d32d:	arpl   WORD PTR [ebx-0x3d],cx
  41d330:	imul   edx,DWORD PTR [esp+ebx*4],0xffffffb0
  41d334:	pop    esp
  41d335:	mov    dl,0x7b
  41d337:	mov    ch,0x8f
  41d339:	leave  
  41d33a:	(bad)  
  41d33b:	cld    
  41d33c:	fistp  DWORD PTR [edi+esi*4-0x7cd4754]
  41d343:	into   
  41d344:	push   edi
  41d345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d346:	test   BYTE PTR [eax],dl
  41d348:	mov    bh,0x3f
  41d34a:	hlt    
  41d34b:	xchg   ebx,eax
  41d34c:	pushf  
  41d34d:	sbb    bh,BYTE PTR [ecx+esi*4-0x36]
  41d351:	xchg   ebp,eax
  41d352:	das    
  41d353:	sti    
  41d354:	push   esp
  41d355:	jns    0x41d387
  41d357:	adc    al,0x9
  41d359:	rol    BYTE PTR ds:0xa39a8def,1
  41d35f:	inc    eax
  41d360:	jae    0x41d340
  41d362:	lods   al,BYTE PTR ds:[esi]
  41d363:	ja     0x41d3c2
  41d365:	or     al,0x33
  41d367:	push   edi
  41d368:	fisubr WORD PTR [edx+ebp*1-0x2]
  41d36c:	fmul   QWORD PTR [esi]
  41d36e:	sub    DWORD PTR [ebp-0x3b],0xffffff89
  41d372:	xchg   edi,eax
  41d373:	inc    ebx
  41d374:	pop    ss
  41d375:	retf   0x7f52
  41d378:	sbb    BYTE PTR [edx],al
  41d37a:	int    0x55
  41d37c:	fadd   DWORD PTR [edi-0x32]
  41d37f:	imul   ebx,DWORD PTR [ebx],0x1a
  41d382:	add    edi,0x4e
  41d385:	jbe    0x41d3e2
  41d387:	fist   WORD PTR [esi]
  41d389:	push   esp
  41d38a:	sub    al,0xf2
  41d38c:	dec    ebp
  41d38d:	push   ebx
  41d38e:	jle    0x41d349
  41d390:	add    DWORD PTR [ecx],0xffffff8e
  41d393:	ds (bad) 
  41d396:	int3   
  41d397:	add    eax,0xc6823ad2
  41d39c:	das    
  41d39d:	sbb    al,0x14
  41d39f:	popa   
  41d3a0:	daa    
  41d3a1:	lods   al,BYTE PTR ds:[esi]
  41d3a2:	outs   dx,BYTE PTR ds:[esi]
  41d3a3:	push   ecx
  41d3a4:	hlt    
  41d3a5:	sub    al,0xf2
  41d3a7:	adc    al,0xe5
  41d3a9:	inc    ebp
  41d3aa:	stos   DWORD PTR es:[edi],eax
  41d3ab:	mov    al,ds:0x3f098869
  41d3b0:	aam    0xe5
  41d3b2:	fs aaa 
  41d3b4:	stos   DWORD PTR es:[edi],eax
  41d3b5:	lock out 0x52,al
  41d3b8:	sbb    bl,BYTE PTR [ebp-0x28d13e82]
  41d3be:	pop    edx
  41d3bf:	repnz and al,0xc1
  41d3c2:	ret    0x7bee
  41d3c5:	mov    al,0x2d
  41d3c7:	fidiv  DWORD PTR [edx+0x4c]
  41d3ca:	clc    
  41d3cb:	lods   eax,DWORD PTR ds:[esi]
  41d3cc:	adc    esp,ecx
  41d3ce:	xchg   edi,eax
  41d3cf:	cmp    al,0xf1
  41d3d1:	sbb    al,0x9
  41d3d3:	outs   dx,BYTE PTR ds:[esi]
  41d3d4:	mov    ah,0x9d
  41d3d6:	enter  0xd093,0xdf
  41d3da:	out    dx,eax
  41d3db:	les    edx,FWORD PTR [esi+0x75]
  41d3de:	jp     0x41d42b
  41d3e0:	sbb    DWORD PTR [ebx+0x3c],ebp
  41d3e3:	fcomip st,st(2)
  41d3e5:	push   ebp
  41d3e6:	add    BYTE PTR [ecx],0x92
  41d3e9:	pop    ecx
  41d3ea:	xor    esi,esi
  41d3ec:	test   al,0x6a
  41d3ee:	jg     0x41d3bd
  41d3f0:	(bad)  
  41d3f1:	scas   eax,DWORD PTR es:[edi]
  41d3f2:	imul   ebp,DWORD PTR [edx],0x58
  41d3f5:	pxor   mm2,mm3
  41d3f8:	push   edx
  41d3f9:	shr    DWORD PTR [edx+0x1f4cb2db],1
  41d3ff:	popa   
  41d400:	add    DWORD PTR gs:[edi-0x5f0f03e5],esi
  41d407:	cli    
  41d408:	scas   eax,DWORD PTR es:[edi]
  41d409:	outs   dx,BYTE PTR ds:[esi]
  41d40a:	xchg   esp,eax
  41d40b:	mov    eax,0x6f828cb4
  41d410:	sub    DWORD PTR [edx-0x74],ecx
  41d413:	and    cl,ah
  41d415:	rcr    BYTE PTR [esi-0x4c],0x3e
  41d419:	push   esp
  41d41a:	jb     0x41d3d4
  41d41c:	jecxz  0x41d422
  41d41e:	shl    ch,1
  41d420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d421:	and    edi,eax
  41d423:	into   
  41d424:	adc    al,0xa0
  41d426:	std    
  41d427:	test   BYTE PTR [edi],0x53
  41d42a:	clc    
  41d42b:	rcl    BYTE PTR [ebp-0x4b],cl
  41d42e:	dec    ebp
  41d42f:	sbb    DWORD PTR [ecx+0x30],eax
  41d432:	addr16 popa 
  41d434:	add    cl,ah
  41d436:	jge    0x41d3f8
  41d438:	test   al,0x2f
  41d43a:	inc    edi
  41d43b:	ss pop ds
  41d43d:	jge    0x41d4a3
  41d43f:	aas    
  41d440:	ret    0xcb35
  41d443:	test   DWORD PTR [ebp-0x2f21be5],esi
  41d449:	das    
  41d44a:	pop    eax
  41d44b:	lock aam 0x3a
  41d44e:	dec    eax
  41d44f:	xor    BYTE PTR [edx],al
  41d451:	push   ebx
  41d452:	and    edi,DWORD PTR [edi+0x71]
  41d455:	es fwait
  41d457:	push   esi
  41d458:	call   0xf28d:0xc8070c5c
  41d45f:	cdq    
  41d460:	xchg   BYTE PTR [edi+0x3e],ah
  41d463:	sbb    eax,0xf8e994af
  41d468:	call   0x62fc:0xde7c847c
  41d46f:	push   edi
  41d470:	lock add al,0x83
  41d473:	inc    eax
  41d474:	je     0x41d46a
  41d476:	bnd jns 0x41d4d8
  41d479:	retf   0x66b1
  41d47c:	int    0x32
  41d47e:	out    dx,eax
  41d47f:	pop    eax
  41d480:	into   
  41d481:	mov    ecx,0x3f1badf7
  41d486:	cwde   
  41d487:	dec    ah
  41d489:	mov    ebp,0xe346e535
  41d48e:	xchg   esi,eax
  41d48f:	xchg   esi,eax
  41d490:	stos   BYTE PTR es:[edi],al
  41d491:	outs   dx,BYTE PTR ds:[esi]
  41d492:	cs ss addr16 pop ebp
  41d496:	jge    0x41d443
  41d498:	add    al,0xc1
  41d49a:	ret    0xc852
  41d49d:	cmc    
  41d49e:	inc    esp
  41d49f:	repnz mov ebp,0x11641370
  41d4a5:	inc    ebx
  41d4a6:	add    DWORD PTR [ebp-0x28],eax
  41d4a9:	not    DWORD PTR [eax]
  41d4ab:	popa   
  41d4ac:	mov    al,ds:0xf7e03f14
  41d4b1:	pop    esp
  41d4b2:	shl    al,cl
  41d4b4:	xor    DWORD PTR [esi-0xb257fb8],ecx
  41d4ba:	jl     0x41d49f
  41d4bc:	fbstp  TBYTE PTR [eax+eax*4-0x3c]
  41d4c0:	rol    ecx,cl
  41d4c2:	icebp  
  41d4c3:	xchg   esi,eax
  41d4c4:	(bad)  
  41d4c5:	stos   BYTE PTR es:[edi],al
  41d4c6:	stos   BYTE PTR es:[edi],al
  41d4c7:	and    edx,ecx
  41d4c9:	scas   al,BYTE PTR es:[edi]
  41d4ca:	rcr    DWORD PTR [eax-0x58],cl
  41d4cd:	popf   
  41d4ce:	fisttp WORD PTR [ecx-0x13]
  41d4d1:	rcl    BYTE PTR [edi],0x74
  41d4d4:	mov    BYTE PTR [eax],ah
  41d4d6:	aaa    
  41d4d7:	mul    bh
  41d4d9:	enter  0x5472,0x23
  41d4dd:	adc    al,BYTE PTR [ebx+0x60]
  41d4e0:	fidiv  DWORD PTR [eax]
  41d4e2:	push   edi
  41d4e3:	add    DWORD PTR ds:0x9cefcfd2,eax
  41d4e9:	sti    
  41d4ea:	jns    0x41d545
  41d4ec:	jle    0x41d551
  41d4ee:	test   eax,0x70105724
  41d4f3:	add    ebx,DWORD PTR [edi-0x713d5fb4]
  41d4f9:	pushf  
  41d4fa:	rol    bl,0x5d
  41d4fd:	dec    ecx
  41d4fe:	push   ebx
  41d4ff:	nop
  41d500:	lock xor BYTE PTR [eax],bl
  41d503:	cmp    dh,0x5a
  41d506:	shl    BYTE PTR [edi],cl
  41d508:	enter  0xc63d,0x2e
  41d50c:	or     dh,BYTE PTR [ecx]
  41d50e:	mov    dh,BYTE PTR [ebp+0x54b9313b]
  41d514:	xor    al,0xe3
  41d516:	out    0xd1,al
  41d518:	or     BYTE PTR [ebx-0x50bbd37e],al
  41d51e:	lods   al,BYTE PTR ds:[esi]
  41d51f:	jmp    0xd555:0x2ec023d4
  41d526:	or     eax,0x2a5e0abf
  41d52b:	or     dl,BYTE PTR [ecx-0x63]
  41d52e:	in     eax,0xf3
  41d530:	lods   al,BYTE PTR ds:[esi]
  41d531:	call   0x1db3:0x857e60d5
  41d538:	dec    edx
  41d539:	dec    edx
  41d53a:	dec    esp
  41d53b:	(bad)  [esi]
  41d53d:	adc    eax,0x56b5b14c
  41d542:	in     al,dx
  41d543:	mov    ds:0x2ec67a84,al
  41d548:	or     bh,BYTE PTR [eax+0x3fe5a6be]
  41d54e:	mov    ecx,DWORD PTR [ebp-0x1f]
  41d551:	jae    0x41d5b7
  41d553:	cmp    eax,0x63223f1c
  41d558:	mov    dh,0xce
  41d55a:	outs   dx,DWORD PTR ds:[esi]
  41d55b:	mov    ch,0xe2
  41d55d:	shl    BYTE PTR [ebx-0x76],1
  41d560:	cwde   
  41d561:	iretw  
  41d563:	leave  
  41d564:	jl     0x41d57e
  41d566:	jl     0x41d556
  41d568:	push   0x9a70652f
  41d56d:	cdq    
  41d56e:	mov    ds:0x90b795f6,eax
  41d573:	push   ecx
  41d574:	add    eax,0xb7702b4e
  41d579:	mov    ecx,0xe6d7e586
  41d57e:	(bad)  
  41d57f:	mov    bl,0xc4
  41d581:	jmp    0x41d524
  41d583:	pop    ebx
  41d584:	mov    edx,0x8fccf484
  41d589:	mov    ecx,DWORD PTR [esi+0x6ee49fab]
  41d58f:	and    DWORD PTR [ebp-0x42],ebx
  41d592:	cdq    
  41d593:	xchg   esi,eax
  41d594:	sti    
  41d595:	pop    eax
  41d596:	les    eax,FWORD PTR [eax-0x6816cb65]
  41d59c:	mov    ebx,0x52b940cb
  41d5a1:	scas   eax,DWORD PTR es:[edi]
  41d5a2:	xor    al,0xde
  41d5a4:	stc    
  41d5a5:	into   
  41d5a6:	cmp    esi,DWORD PTR [esi+edx*4+0x19]
  41d5aa:	shr    BYTE PTR [esi-0x39],0x4e
  41d5ae:	enter  0x84ae,0xd6
  41d5b2:	test   eax,0xc4dc952b
  41d5b7:	into   
  41d5b8:	div    BYTE PTR [esi-0x48]
  41d5bb:	test   BYTE PTR [esi+0x33],ah
  41d5be:	dec    eax
  41d5bf:	cmp    al,0x6c
  41d5c1:	sub    DWORD PTR [ecx-0x46],edi
  41d5c4:	je     0x41d5f6
  41d5c6:	xor    ecx,DWORD PTR [ecx+0x1a]
  41d5c9:	in     al,dx
  41d5ca:	sub    eax,0xfb49f308
  41d5cf:	test   BYTE PTR [ecx],bl
  41d5d1:	jg     0x41d5fa
  41d5d3:	xor    al,0xa8
  41d5d5:	xchg   edi,eax
  41d5d6:	in     eax,0x1b
  41d5d8:	add    eax,DWORD PTR [esi]
  41d5da:	xor    eax,0xa90eba58
  41d5df:	cmp    BYTE PTR [edi+0x134480cb],ah
  41d5e5:	int3   
  41d5e6:	ja     0x41d5e0
  41d5e8:	(bad)  
  41d5ea:	mov    ds:0x3c1f0347,al
  41d5ef:	int    0xff
  41d5f1:	and    eax,0x593660cb
  41d5f6:	sub    cl,al
  41d5f8:	xor    DWORD PTR [edi-0x2f],0xffffff92
  41d5fc:	ja     0x41d64d
  41d5fe:	and    al,0xad
  41d600:	ins    BYTE PTR es:[edi],dx
  41d601:	or     al,0x77
  41d603:	jb     0x41d5ab
  41d605:	push   0x42
  41d607:	sahf   
  41d608:	jns    0x41d5a9
  41d60a:	mov    ?,WORD PTR [eax+0x28d3dbb9]
  41d610:	xchg   esp,eax
  41d611:	repnz pop ecx
  41d613:	pusha  
  41d614:	adc    al,0xd0
  41d616:	std    
  41d617:	mov    bh,0xc6
  41d619:	scas   al,BYTE PTR es:[edi]
  41d61a:	call   0xe3f9a166
  41d61f:	mov    ds:0x6353f603,eax
  41d624:	sahf   
  41d625:	imul   DWORD PTR [edi-0x7dbed557]
  41d62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d62c:	out    0x77,eax
  41d62e:	mov    ecx,0x74fa2e3
  41d633:	test   eax,0x88964891
  41d638:	aam    0x93
  41d63a:	test   al,0x96
  41d63c:	ret    
  41d63d:	adc    eax,0xb3e22dc9
  41d642:	outs   dx,DWORD PTR ds:[esi]
  41d643:	push   ds
  41d644:	ins    DWORD PTR es:[edi],dx
  41d645:	pop    ebx
  41d646:	push   0x7522ffdd
  41d64b:	mov    eax,DWORD PTR [esi-0x2173f2e]
  41d651:	pop    edi
  41d652:	xchg   esi,eax
  41d653:	mov    dh,0xda
  41d655:	pop    esp
  41d656:	xchg   DWORD PTR [eax+0x3b751488],ebp
  41d65c:	inc    esp
  41d65d:	int3   
  41d65e:	lods   al,BYTE PTR ds:[esi]
  41d65f:	dec    edi
  41d660:	lock ret 
  41d662:	dec    esp
  41d663:	mov    eax,ds:0x91c61ee
  41d668:	sahf   
  41d669:	stc    
  41d66a:	pop    edx
  41d66b:	mov    cx,si
  41d66e:	adc    al,0x21
  41d670:	in     eax,0xe3
  41d672:	push   ebx
  41d673:	cmp    edx,edi
  41d675:	faddp  st(1),st
  41d677:	out    dx,eax
  41d678:	xchg   esi,eax
  41d679:	outs   dx,BYTE PTR ds:[esi]
  41d67a:	xchg   esp,eax
  41d67b:	(bad)  
  41d67c:	(bad)  
  41d67d:	addr16 pop eax
  41d67f:	bound  esi,QWORD PTR [edi]
  41d681:	jp     0x41d619
  41d683:	add    al,0x8f
  41d685:	test   eax,edx
  41d687:	push   ebx
  41d688:	dec    ebp
  41d689:	stc    
  41d68a:	imul   edx,DWORD PTR [edi],0x5477e70e
  41d690:	push   ebp
  41d691:	jns    0x41d6bf
  41d693:	out    0x24,eax
  41d695:	in     al,dx
  41d696:	mov    edx,ecx
  41d698:	mov    al,0x8e
  41d69a:	out    0x22,al
  41d69c:	xchg   ebx,eax
  41d69d:	sti    
  41d69e:	mov    dh,0xf7
  41d6a0:	pop    ss
  41d6a1:	pop    esp
  41d6a2:	jp     0x41d6b9
  41d6a4:	inc    esi
  41d6a5:	jmp    0x41d6b1
  41d6a7:	jp     0x41d65f
  41d6a9:	dec    eax
  41d6aa:	pop    ds
  41d6ab:	push   es
  41d6ac:	pop    edx
  41d6ad:	xchg   ebp,eax
  41d6ae:	(bad)  
  41d6b0:	cwde   
  41d6b1:	je     0x41d664
  41d6b3:	into   
  41d6b4:	mov    al,ds:0x4898c697
  41d6b9:	je     0x41d6b5
  41d6bb:	jae    0x41d66f
  41d6bd:	rcl    BYTE PTR [ecx],0x9b
  41d6c0:	xchg   ebx,eax
  41d6c1:	add    esp,DWORD PTR [eax+ebx*1]
  41d6c4:	leave  
  41d6c5:	pop    ss
  41d6c6:	adc    eax,0x709cf870
  41d6cb:	mov    eax,ds:0xd0e1cf0a
  41d6d0:	ins    BYTE PTR es:[edi],dx
  41d6d1:	mov    eax,ds:0x9bfd161f
  41d6d6:	stos   BYTE PTR es:[edi],al
  41d6d7:	sub    BYTE PTR [ebx],0x92
  41d6da:	and    DWORD PTR ds:0x6da88f7d,edi
  41d6e0:	sbb    eax,0x1790f8f1
  41d6e5:	iret   
  41d6e6:	add    eax,0x9aebafdf
  41d6eb:	jge    0x41d714
  41d6ed:	aas    
  41d6ee:	fdivr  st,st(0)
  41d6f0:	fmul   QWORD PTR [esi]
  41d6f2:	dec    eax
  41d6f3:	pop    ss
  41d6f4:	sbb    bh,al
  41d6f6:	jnp    0x41d6ca
  41d6f8:	fisub  DWORD PTR [edi+edi*2+0x50723e2f]
  41d6ff:	xchg   ebx,eax
  41d700:	je     0x41d744
  41d702:	lods   eax,DWORD PTR ds:[esi]
  41d703:	into   
  41d704:	pop    edx
  41d705:	les    ecx,FWORD PTR [edx]
  41d707:	jb     0x41d69d
  41d709:	neg    BYTE PTR [edx-0x5e]
  41d70c:	add    esi,DWORD PTR [esi-0x642266c1]
  41d712:	frstor [edi+eiz*8+0x44]
  41d716:	(bad)  
  41d717:	scas   eax,DWORD PTR es:[edi]
  41d718:	pusha  
  41d719:	sub    cl,BYTE PTR [ebx+ecx*8+0x3e341b1]
  41d720:	imul   edx,DWORD PTR [ecx],0x2a
  41d723:	cdq    
  41d724:	out    dx,al
  41d725:	bnd call 0x16c7a400
  41d72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d72c:	xchg   edi,eax
  41d72d:	or     ch,dh
  41d72f:	lahf   
  41d730:	ja     0x41d739
  41d732:	or     al,0x24
  41d734:	sbb    BYTE PTR [ecx*1-0x4a885b13],0xea
  41d73c:	push   ss
  41d73d:	sbb    BYTE PTR [ecx+ecx*4-0x42dec59c],0x73
  41d745:	cmp    eax,0x413458b
  41d74a:	popf   
  41d74b:	mov    al,ds:0x9c6a1d34
  41d750:	in     eax,0xff
  41d752:	sbb    al,BYTE PTR [ecx+0x2e055bce]
  41d758:	xchg   BYTE PTR [esi+0x3d],ah
  41d75b:	out    0xbe,eax
  41d75d:	mov    esp,0x210e6f65
  41d762:	nop
  41d763:	js     0x41d79b
  41d765:	pop    ecx
  41d766:	jb     0x41d796
  41d768:	mov    dh,0xbf
  41d76a:	sbb    ecx,ebp
  41d76c:	(bad)  
  41d76d:	mov    ecx,0xcf561c6
  41d772:	popa   
  41d773:	mov    dh,0xdb
  41d775:	repnz test DWORD PTR [eax],esi
  41d778:	inc    eax
  41d779:	clc    
  41d77a:	xor    cl,BYTE PTR [edi-0x4f]
  41d77d:	test   BYTE PTR [ebx+0xa],ch
  41d780:	enter  0x130,0x9c
  41d784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d785:	lods   eax,DWORD PTR es:[esi]
  41d787:	imul   ebx,DWORD PTR [esi-0x10],0xffffffe0
  41d78b:	jmp    DWORD PTR [edi-0x7940adb0]
  41d791:	into   
  41d792:	xor    edi,DWORD PTR [esi+eax*4+0x27]
  41d796:	push   ds
  41d797:	shl    DWORD PTR [eax-0x72e0de9d],1
  41d79d:	or     eax,edi
  41d79f:	xor    DWORD PTR ds:0x9036a024,edx
  41d7a5:	enter  0x9329,0x5a
  41d7a9:	add    esi,edx
  41d7ab:	xor    esi,ebp
  41d7ad:	retf   
  41d7ae:	mul    DWORD PTR [ecx+0x35]
  41d7b1:	or     bl,BYTE PTR [esi-0x17]
  41d7b4:	sub    eax,0x111d936d
  41d7b9:	loope  0x41d79d
  41d7bb:	cs je  0x41d794
  41d7be:	sub    al,BYTE PTR [edx-0x57f5743e]
  41d7c4:	in     al,0xfa
  41d7c6:	dec    edi
  41d7c7:	mov    gs,ecx
  41d7c9:	fnstenv [edi-0x7abf21ec]
  41d7cf:	aam    0x1b
  41d7d1:	mov    dh,BYTE PTR [edx]
  41d7d3:	push   edx
  41d7d4:	pop    edx
  41d7d5:	jne    0x41d7e6
  41d7d7:	cmp    ebx,DWORD PTR [ecx]
  41d7d9:	cs (bad) 
  41d7db:	adc    DWORD PTR [esi],ebx
  41d7dd:	push   es
  41d7de:	inc    edi
  41d7df:	ror    DWORD PTR [esi+0x3953c9a3],cl
  41d7e5:	add    DWORD PTR [edi],edx
  41d7e7:	xor    al,ch
  41d7e9:	les    esi,FWORD PTR [eax]
  41d7eb:	mov    ds:0xf13bb63d,eax
  41d7f0:	ins    BYTE PTR es:[edi],dx
  41d7f1:	pusha  
  41d7f2:	sbb    edx,ebp
  41d7f4:	mov    ah,0x72
  41d7f6:	and    ah,bl
  41d7f8:	xor    al,0x53
  41d7fa:	loope  0x41d77e
  41d7fc:	add    al,0xab
  41d7fe:	xchg   edi,eax
  41d7ff:	pushf  
  41d800:	sub    eax,0x71d39e7c
  41d805:	fisttp DWORD PTR [esi+0x23]
  41d808:	pushw  es
  41d80a:	jnp    0x41d83c
  41d80c:	ins    DWORD PTR es:[edi],dx
  41d80d:	stc    
  41d80e:	les    esi,FWORD PTR [ebx+0x7f]
  41d811:	clc    
  41d812:	xor    al,0x4b
  41d814:	div    DWORD PTR [ebp+eiz*2+0x16]
  41d818:	xchg   ebx,eax
  41d819:	fst    st(4)
  41d81b:	xchg   ebx,eax
  41d81c:	retf   0x6948
  41d81f:	mov    cs,WORD PTR [edi]
  41d821:	push   esi
  41d822:	jbe    0x41d891
  41d824:	mov    edx,ss
  41d826:	pop    ecx
  41d827:	dec    edx
  41d828:	adc    esi,eax
  41d82a:	xchg   DWORD PTR [edx-0xb3dfbc9],ecx
  41d830:	pop    es
  41d831:	sub    esp,DWORD PTR [esi+eiz*1]
  41d834:	mov    al,0xd7
  41d836:	pop    esp
  41d837:	xor    DWORD PTR [esi],ebx
  41d839:	mov    al,ds:0x381114cf
  41d83e:	popa   
  41d83f:	mov    dl,0x73
  41d841:	shl    DWORD PTR [esi+0x42f32c99],cl
  41d847:	xor    edi,DWORD PTR [edi+0x76aba4c]
  41d84d:	inc    eax
  41d84e:	test   BYTE PTR [ebp+0x35],al
  41d851:	jge    0x41d818
  41d853:	xor    al,0x3
  41d855:	addr16 mov ah,0x2c
  41d858:	scas   eax,DWORD PTR es:[edi]
  41d859:	add    ch,bh
  41d85b:	repz pop ecx
  41d85d:	add    BYTE PTR [edi],bl
  41d85f:	call   0x34263b1a
  41d864:	mov    ebp,DWORD PTR [eax]
  41d866:	lods   al,BYTE PTR ds:[esi]
  41d867:	imul   DWORD PTR [ecx-0x7dadbaf1]
  41d86d:	mov    ds:0x781060d3,al
  41d872:	mov    eax,0x2b3c8fb1
  41d877:	push   eax
  41d878:	pusha  
  41d879:	cmp    edx,esi
  41d87b:	clc    
  41d87c:	popa   
  41d87d:	xchg   ecx,eax
  41d87e:	push   es
  41d87f:	lea    ebx,[edx+ebx*2-0x3]
  41d883:	sbb    DWORD PTR [ebx+0x1f],0x37
  41d887:	popa   
  41d888:	inc    eax
  41d889:	xor    al,0xda
  41d88b:	add    al,0xd6
  41d88d:	adc    eax,0x18ebb619
  41d892:	mov    eax,ds:0xd8c5a249
  41d897:	or     eax,0xc30d2351
  41d89c:	aaa    
  41d89d:	scas   al,BYTE PTR es:[edi]
  41d89e:	cmp    ecx,esp
  41d8a0:	adc    eax,0x516ac1c
  41d8a5:	sahf   
  41d8a6:	scas   al,BYTE PTR es:[di]
  41d8a8:	mov    bh,ch
  41d8aa:	xor    eax,0x5f86b9e5
  41d8af:	hlt    
  41d8b0:	cmp    al,0x8a
  41d8b2:	mov    DWORD PTR [eax+0x60],eax
  41d8b5:	cwde   
  41d8b6:	push   ds
  41d8b7:	pop    ss
  41d8b8:	and    BYTE PTR [ecx+0x1d],al
  41d8bb:	xchg   DWORD PTR [esi],esi
  41d8bd:	or     eax,0xb63fc30c
  41d8c2:	clc    
  41d8c3:	push   0x7face482
  41d8c8:	dec    BYTE PTR [eax]
  41d8ca:	repz jb 0x41d8b1
  41d8cd:	push   ebp
  41d8ce:	inc    eax
  41d8cf:	pop    ecx
  41d8d0:	scas   eax,DWORD PTR es:[edi]
  41d8d1:	dec    ebp
  41d8d2:	outs   dx,DWORD PTR ds:[esi]
  41d8d3:	dec    eax
  41d8d4:	lahf   
  41d8d5:	mov    al,ds:0x8751b141
  41d8da:	ins    DWORD PTR es:[edi],dx
  41d8db:	dec    ecx
  41d8dc:	lods   eax,DWORD PTR ds:[esi]
  41d8dd:	sub    BYTE PTR [ecx+0x7f],bl
  41d8e0:	xchg   ebp,eax
  41d8e1:	mov    ecx,0xcbd41d14
  41d8e6:	retf   0xb671
  41d8e9:	xchg   edx,eax
  41d8ea:	in     eax,0xd6
  41d8ec:	scas   al,BYTE PTR es:[edi]
  41d8ed:	xor    BYTE PTR [ebx+esi*4+0x19],0x45
  41d8f2:	call   0xcf3f79db
  41d8f7:	and    cl,BYTE PTR [edi+0x7e204ff7]
  41d8fd:	ins    BYTE PTR es:[edi],dx
  41d8fe:	mov    esp,0x115ed03d
  41d903:	cld    
  41d904:	dec    edi
  41d905:	pushf  
  41d906:	repz jle 0x41d92e
  41d909:	lock xchg ebx,eax
  41d90b:	xor    eax,0x684248a9
  41d910:	xchg   esp,eax
  41d911:	pusha  
  41d912:	(bad)  
  41d913:	in     al,0xfa
  41d915:	pop    ecx
  41d916:	and    BYTE PTR [eax-0x16],bl
  41d919:	dec    ecx
  41d91a:	pop    edi
  41d91b:	or     eax,0x88732eec
  41d920:	push   esp
  41d921:	aam    0xa7
  41d923:	jae    0x41d8fa
  41d925:	cmp    BYTE PTR [ecx],cl
  41d927:	sbb    DWORD PTR [ecx+0x69903ce2],edx
  41d92d:	iret   
  41d92e:	(bad)  
  41d92f:	sar    edi,cl
  41d931:	pusha  
  41d932:	inc    edx
  41d933:	adc    eax,esi
  41d935:	imul   edx,DWORD PTR [esi-0x22],0x1611bc80
  41d93c:	sub    al,0x9a
  41d93e:	xor    eax,0x102487f3
  41d943:	lods   al,BYTE PTR ds:[esi]
  41d944:	cs mov ch,0x4
  41d947:	or     eax,0xcf1b8370
  41d94c:	scas   eax,DWORD PTR es:[edi]
  41d94d:	retf   0xcde
  41d950:	jmp    0x41d92d
  41d952:	ja     0x41d9cc
  41d954:	sti    
  41d955:	lds    ebx,FWORD PTR [eax+0x32]
  41d958:	mov    al,0x39
  41d95a:	or     eax,ebx
  41d95c:	xchg   esp,eax
  41d95d:	ins    BYTE PTR es:[edi],dx
  41d95e:	or     BYTE PTR [esi+ecx*2-0x65],ah
  41d962:	cmp    eax,0x4cca6f8c
  41d967:	mov    ecx,DWORD PTR [ebx-0x18]
  41d96a:	adc    eax,0x18edefd3
  41d96f:	loopne 0x41d907
  41d971:	xor    eax,0x21ed6018
  41d976:	push   edx
  41d977:	cmp    esi,DWORD PTR [edx-0x2855ff67]
  41d97d:	cmp    al,0x4d
  41d97f:	and    eax,esp
  41d981:	and    dh,BYTE PTR [eax-0xe78e223]
  41d987:	xlat   BYTE PTR ds:[ebx]
  41d988:	cmp    cl,BYTE PTR [edi-0x1feb884c]
  41d98e:	pop    ebx
  41d98f:	pop    ebx
  41d990:	sahf   
  41d991:	call   0x5a0675d6
  41d996:	sbb    eax,0xb008f9c7
  41d99b:	xchg   ecx,eax
  41d99c:	test   BYTE PTR [edi],dl
  41d99e:	add    al,0x57
  41d9a0:	add    DWORD PTR [esi-0x8],eax
  41d9a3:	pop    DWORD PTR [ebp+0x26b55373]
  41d9a9:	add    BYTE PTR [ebx],ah
  41d9ab:	xchg   ch,dh
  41d9ad:	sbb    BYTE PTR [esi+0x5fd35dd8],ch
  41d9b3:	jno    0x41d9b6
  41d9b5:	or     BYTE PTR es:[edx],bh
  41d9b8:	mov    cr1,edi
  41d9bb:	out    0xde,al
  41d9bd:	call   0x6652:0xf186dca3
  41d9c4:	inc    eax
  41d9c5:	sub    DWORD PTR [ebp+edi*1+0x179d3651],ecx
  41d9cc:	shl    DWORD PTR [edx],0x94
  41d9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d0:	and    ecx,DWORD PTR [esi+0x5]
  41d9d3:	(bad)  
  41d9d4:	rcr    edi,1
  41d9d6:	dec    ebx
  41d9d7:	test   BYTE PTR ds:0x2cd0b83d,bl
  41d9dd:	dec    ecx
  41d9de:	xchg   dl,ch
  41d9e0:	in     al,0x1d
  41d9e2:	call   0x13871cd2
  41d9e7:	fs test al,0x14
  41d9ea:	sahf   
  41d9eb:	sub    ah,bl
  41d9ed:	rol    BYTE PTR [ecx-0x5b],0xc4
  41d9f1:	jle    0x41d99c
  41d9f3:	mov    ds:0x17d6b139,eax
  41d9f8:	ret    0xdd50
  41d9fb:	stos   DWORD PTR es:[edi],eax
  41d9fc:	js     0x41d9d9
  41d9fe:	mov    ebp,0x23888fec
  41da03:	xchg   DWORD PTR [esi],eax
  41da05:	(bad)  
  41da07:	push   ss
  41da08:	fldenv [ebp-0x6e]
  41da0b:	mov    cl,0xf0
  41da0d:	sahf   
  41da0e:	mov    BYTE PTR [ecx-0x78bcb78d],cl
  41da14:	pop    edi
  41da15:	mov    esp,0xd29e3fe8
  41da1a:	inc    edx
  41da1b:	das    
  41da1c:	sar    BYTE PTR [ecx+0x79],1
  41da1f:	jmp    0x8fce:0xda02e38b
  41da26:	arpl   WORD PTR [ebx],di
  41da28:	sbb    eax,0x1be431ad
  41da2d:	enter  0xe0da,0x36
  41da31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da32:	cwde   
  41da33:	add    DWORD PTR [edx+0x73],0xd9f62350
  41da3a:	inc    edx
  41da3b:	rcl    ah,1
  41da3d:	push   esi
  41da3e:	add    ah,BYTE PTR [ecx-0x64]
  41da41:	adc    bl,BYTE PTR [ebp+eiz*1+0x29]
  41da45:	(bad)  
  41da47:	mov    ds:0x338b62fb,eax
  41da4c:	pop    ecx
  41da4d:	test   eax,0x71019e43
  41da52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da53:	cmp    edi,esp
  41da55:	mov    bl,0x77
  41da57:	mov    bl,0xc7
  41da59:	(bad)  
  41da5a:	or     al,0x2
  41da5c:	mov    al,ds:0x5f188c71
  41da61:	repz dec ecx
  41da63:	pop    es
  41da64:	pop    ds
  41da65:	nop
  41da66:	mov    ecx,DWORD PTR [eax]
  41da68:	add    esp,DWORD PTR [ecx]
  41da6a:	cmp    DWORD PTR [bp+di-0x57],0x4f
  41da6f:	test   DWORD PTR [ebp-0x3375b965],0x4cafdc31
  41da79:	mov    BYTE PTR [ecx-0x5c3cd07b],bl
  41da7f:	or     eax,0x893f8837
  41da84:	scas   eax,DWORD PTR es:[edi]
  41da85:	nop
  41da86:	xor    ecx,DWORD PTR [esp+eax*8-0x5e7e9bdb]
  41da8d:	shl    BYTE PTR [edi+0x26f09585],0x29
  41da94:	xlat   BYTE PTR ds:[ebx]
  41da95:	xchg   esi,eax
  41da96:	and    BYTE PTR [edx],dl
  41da98:	and    edx,edi
  41da9a:	jb     0x41da52
  41da9c:	jge    0x41da45
  41da9e:	(bad)  
  41daa0:	jmp    0x41da6a
  41daa2:	icebp  
  41daa3:	nop
  41daa4:	je     0x41db0d
  41daa6:	sub    BYTE PTR [ecx+0x40a5128c],ah
  41daac:	pop    esi
  41daad:	push   0x9c9cdd06
  41dab2:	mov    ds:0xe8b9ff7d,eax
  41dab7:	mov    edx,0xc503a76c
  41dabc:	pop    edi
  41dabd:	xchg   DWORD PTR [ecx],esp
  41dabf:	sbb    al,0xc9
  41dac1:	gs retf 0xe7b0
  41dac5:	inc    eax
  41dac6:	(bad)  [eax+eiz*8-0x4c]
  41daca:	loope  0x41db0e
  41dacc:	xchg   edi,eax
  41dace:	nop
  41dacf:	shr    dl,1
  41dad1:	xchg   ebp,eax
  41dad2:	sti    
  41dad3:	and    ah,BYTE PTR [edx]
  41dad5:	xchg   edx,eax
  41dad6:	(bad)  
  41dad7:	sbb    DWORD PTR [ebx+0x19],ebx
  41dada:	xor    bl,BYTE PTR [edi-0x66b20dbf]
  41dae0:	pop    ebx
  41dae1:	ret    0xc903
  41dae4:	pop    ebp
  41dae5:	cmp    BYTE PTR [eax],dl
  41dae7:	call   0xe8d66bd3
  41daec:	jecxz  0x41dacd
  41daee:	std    
  41daef:	adc    DWORD PTR [eax+0x22],eax
  41daf2:	ins    BYTE PTR es:[edi],dx
  41daf3:	and    DWORD PTR [eax-0x2bed00f3],0xbdac3e66
  41dafd:	sub    DWORD PTR [ebx],ebx
  41daff:	les    esi,FWORD PTR [ecx-0x15]
  41db02:	pop    ebx
  41db03:	jle    0x41db47
  41db05:	mov    ds:0x1ec3a934,al
  41db0a:	xor    eax,0x79e6eba6
  41db0f:	je     0x41db2d
  41db11:	(bad)  
  41db12:	push   esp
  41db13:	shl    DWORD PTR [eax],cl
  41db15:	and    eax,0xbabf8150
  41db1a:	xor    eax,0x9b2fb39a
  41db1f:	push   esi
  41db20:	dec    ebx
  41db21:	sub    DWORD PTR [edi-0x55aaf177],edi
  41db27:	mov    DWORD PTR [edi-0x4bccca34],ebx
  41db2d:	mov    ds:0xb549d6d,eax
  41db32:	gs int 0x38
  41db35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db36:	sahf   
  41db37:	lods   eax,DWORD PTR ds:[esi]
  41db38:	sub    eax,0x2c7f2222
  41db3d:	pop    ebp
  41db3e:	xchg   esp,eax
  41db3f:	sti    
  41db40:	fidiv  WORD PTR [ecx]
  41db42:	ins    DWORD PTR es:[edi],dx
  41db43:	pop    esi
  41db44:	mov    ds:0xda2a90b,eax
  41db49:	dec    ebp
  41db4a:	pusha  
  41db4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db4c:	cmp    DWORD PTR [ebx-0x38860aa8],edx
  41db52:	pushf  
  41db53:	mov    bh,dl
  41db55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db56:	rcr    BYTE PTR [esi],0x5e
  41db59:	es cdq 
  41db5b:	jmp    0x41db2f
  41db5d:	ret    0x411d
  41db60:	stc    
  41db61:	jae    0x41db54
  41db63:	xor    BYTE PTR [ecx+0x2e],ch
  41db66:	xor    BYTE PTR [ebx],bl
  41db68:	shl    BYTE PTR [ebx-0x21516206],cl
  41db6e:	xchg   esp,eax
  41db6f:	pusha  
  41db70:	push   esp
  41db71:	cwde   
  41db72:	nop
  41db73:	xchg   ebx,eax
  41db74:	repz xor BYTE PTR [ecx],cl
  41db77:	mov    ecx,0x253a7684
  41db7c:	dec    ebp
  41db7d:	jbe    0x41db7b
  41db7f:	jmp    0x20b60fb5
  41db84:	(bad)  
  41db86:	mov    eax,ds:0x9c44a39a
  41db8b:	arpl   WORD PTR [ecx+0x3ded4151],di
  41db91:	fst    DWORD PTR gs:[ecx+ecx*2]
  41db95:	or     BYTE PTR [ecx],dh
  41db97:	inc    edi
  41db98:	outs   dx,DWORD PTR ds:[esi]
  41db99:	fs jmp 0x2392:0x8adcc1a
  41dba1:	mov    WORD PTR [esi],fs
  41dba3:	repnz pop edi
  41dba5:	pop    ss
  41dba6:	add    esp,eax
  41dba8:	call   0x7c9ff9f2
  41dbad:	mov    edi,0x8f46bf62
  41dbb2:	cdq    
  41dbb3:	pop    esp
  41dbb4:	fidivr DWORD PTR [esp+edi*2]
  41dbb7:	pushf  
  41dbb8:	xchg   ebx,eax
  41dbb9:	bound  esp,QWORD PTR [edx-0x45]
  41dbbc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41dbbe:	jmp    0x8ad52a7c
  41dbc3:	ins    BYTE PTR es:[edi],dx
  41dbc4:	into   
  41dbc5:	xchg   edx,eax
  41dbc6:	jp     0x41dbef
  41dbc8:	cmp    al,0x77
  41dbca:	adc    BYTE PTR [esi-0xbd7cf68],cl
  41dbd0:	scas   eax,DWORD PTR es:[edi]
  41dbd1:	inc    esi
  41dbd2:	or     DWORD PTR [ebx-0x3b],ebp
  41dbd5:	shr    DWORD PTR [esi+0x20fe6e58],cl
  41dbdb:	sub    eax,0xcc7fae86
  41dbe0:	aad    0xf3
  41dbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe3:	and    BYTE PTR [ecx],ah
  41dbe5:	sub    ecx,DWORD PTR [ecx-0x4dcccea5]
  41dbeb:	cwde   
  41dbec:	cwde   
  41dbed:	mov    edi,0x7b9ef483
  41dbf2:	out    dx,eax
  41dbf3:	das    
  41dbf4:	jmp    FWORD PTR [eax]
  41dbf6:	pop    ebx
  41dbf7:	jmp    0xbddc:0x23a65598
  41dbfe:	fnstenv [ebx+0x32]
  41dc01:	sbb    BYTE PTR [eax],dh
  41dc03:	bound  esp,QWORD PTR [edi+eiz*2+0x1f]
  41dc07:	lds    ecx,FWORD PTR [esi+ebp*8]
  41dc0a:	sub    ecx,DWORD PTR [ecx+ebx*1]
  41dc0d:	stos   BYTE PTR es:[edi],al
  41dc0e:	loope  0x41db97
  41dc10:	xchg   edx,eax
  41dc11:	or     DWORD PTR [eax+ebp*1-0x68],0x2d
  41dc16:	int3   
  41dc17:	lea    ebx,[edx]
  41dc19:	iret   
  41dc1a:	lods   eax,DWORD PTR ds:[esi]
  41dc1b:	stos   BYTE PTR es:[edi],al
  41dc1c:	lea    esi,[edx-0x6390f2c6]
  41dc22:	inc    esp
  41dc23:	mov    ds:0x2ef2261c,eax
  41dc28:	repnz mov ch,0x8a
  41dc2b:	loope  0x41dc8a
  41dc2d:	fld    QWORD PTR [esi-0x23]
  41dc30:	cdq    
  41dc31:	jnp    0x41dbbd
  41dc33:	xor    BYTE PTR [ecx+0x5c7187da],bl
  41dc39:	je     0x41dc31
  41dc3b:	cmp    ch,BYTE PTR [ecx]
  41dc3d:	jl     0x41dbde
  41dc3f:	adc    DWORD PTR [eax],ecx
  41dc41:	stc    
  41dc42:	arpl   WORD PTR [ebx-0x6d],dx
  41dc45:	pop    ecx
  41dc46:	mov    ebp,0x96ac039f
  41dc4b:	jbe    0x41dc20
  41dc4d:	xchg   esi,eax
  41dc4e:	cwde   
  41dc4f:	add    DWORD PTR [eax],edi
  41dc51:	retf   
  41dc52:	sbb    ecx,edi
  41dc54:	das    
  41dc55:	inc    ecx
  41dc56:	jae    0x41dc7f
  41dc58:	lods   al,BYTE PTR ds:[esi]
  41dc59:	or     eax,0xf3cd433f
  41dc5e:	pop    esi
  41dc5f:	rcr    bh,1
  41dc61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc62:	sub    bl,BYTE PTR [ebx+0x3d]
  41dc65:	mov    ds:0x3e0ef305,eax
  41dc6a:	mov    dl,0x6f
  41dc6c:	(bad)  
  41dc6d:	cmp    BYTE PTR [esi+0x30449195],dl
  41dc73:	xchg   ebx,ebp
  41dc75:	mov    eax,DWORD PTR [ecx-0x3003e008]
  41dc7b:	sub    dh,BYTE PTR [edx+0x1757f222]
  41dc81:	xor    DWORD PTR [edx+0x2c479593],edx
  41dc87:	int    0x8c
  41dc89:	sbb    BYTE PTR [eax-0x52],cl
  41dc8c:	fadd   st(4),st
  41dc8e:	mov    cl,0xb1
  41dc90:	cdq    
  41dc91:	inc    esi
  41dc92:	in     al,0xf4
  41dc94:	(bad)  
  41dc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc98:	xchg   esi,eax
  41dc99:	call   0x981ae251
  41dc9e:	cmp    ah,BYTE PTR [ebx]
  41dca0:	or     DWORD PTR [ecx],0xffffffec
  41dca3:	jno    0x41dc9b
  41dca5:	ds sub dh,cl
  41dca8:	ss pop es
  41dcaa:	xchg   ebx,eax
  41dcab:	cmp    DWORD PTR [edi+0x32],esi
  41dcae:	jmp    0x41dc9b
  41dcb0:	cli    
  41dcb1:	cdq    
  41dcb2:	scas   eax,DWORD PTR es:[edi]
  41dcb3:	jge    0x41dca6
  41dcb5:	(bad)  
  41dcb6:	loope  0x41dce9
  41dcb8:	pop    ebp
  41dcb9:	inc    esp
  41dcba:	add    DWORD PTR [esi],esp
  41dcbc:	jnp    0x41dc53
  41dcbe:	add    bh,BYTE PTR [ecx]
  41dcc0:	push   ebp
  41dcc1:	sbb    eax,0x4937cfa7
  41dcc6:	xchg   edx,eax
  41dcc7:	outs   dx,DWORD PTR ds:[esi]
  41dcc8:	daa    
  41dcc9:	xlat   BYTE PTR ds:[ebx]
  41dcca:	sbb    eax,0x69200f1a
  41dccf:	test   DWORD PTR [esi-0x45],ebp
  41dcd2:	pusha  
  41dcd3:	adc    BYTE PTR [ebx],ch
  41dcd5:	xchg   DWORD PTR gs:[ebx+0x7d],esp
  41dcd9:	imul   esp,DWORD PTR [ebx-0x105c0c34],0x24e411ee
  41dce3:	bound  ebp,QWORD PTR [ecx+ebx*2+0xb]
  41dce7:	sub    al,0xd1
  41dce9:	ins    DWORD PTR es:[edi],dx
  41dcea:	ja     0x41dcdf
  41dcec:	push   ebx
  41dced:	mov    ecx,0xf5304fcd
  41dcf2:	pop    esi
  41dcf3:	ds iret 
  41dcf5:	and    BYTE PTR [ebx+0x65634055],al
  41dcfb:	jno    0x41dca2
  41dcfd:	ins    BYTE PTR es:[edi],dx
  41dcfe:	sub    al,0xc6
  41dd00:	push   eax
  41dd01:	push   ebp
  41dd02:	enter  0x254,0xc2
  41dd06:	pop    ss
  41dd07:	dec    ebx
  41dd08:	stos   BYTE PTR es:[edi],al
  41dd09:	xor    eax,DWORD PTR [esi+eax*1-0xadb122c]
  41dd10:	jbe    0x41dcc0
  41dd12:	scas   al,BYTE PTR es:[edi]
  41dd13:	xor    cl,al
  41dd15:	mov    ds:0xc5b27d7b,al
  41dd1a:	in     al,dx
  41dd1b:	jo     0x41dd4b
  41dd1d:	es dec edi
  41dd1f:	or     DWORD PTR [edx],esi
  41dd21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd22:	fs inc ebp
  41dd24:	adc    esi,DWORD PTR ss:[ecx-0x12]
  41dd28:	aaa    
  41dd29:	outs   dx,BYTE PTR ds:[esi]
  41dd2a:	jo     0x41dcd1
  41dd2c:	test   BYTE PTR [edx+0x37],cl
  41dd2f:	out    dx,al
  41dd30:	sahf   
  41dd31:	sbb    ebp,DWORD PTR [ecx]
  41dd33:	and    dl,BYTE PTR [eax+0x24]
  41dd36:	sti    
  41dd37:	mov    edi,0x4e5ef9d7
  41dd3c:	fninit 
  41dd3e:	sub    BYTE PTR [ebx],cl
  41dd40:	inc    ebx
  41dd41:	pop    ss
  41dd42:	lahf   
  41dd43:	nop
  41dd44:	cdq    
  41dd45:	inc    edx
  41dd46:	jmp    0xf3011933
  41dd4b:	and    BYTE PTR [ecx],dl
  41dd4d:	dec    edi
  41dd4e:	loopne 0x41dce7
  41dd50:	jmp    0x41dd92
  41dd52:	xchg   ecx,eax
  41dd53:	and    ch,BYTE PTR [ebp+0x3b]
  41dd56:	(bad)  
  41dd57:	out    dx,al
  41dd58:	xor    eax,0x5c9eb48d
  41dd5d:	(bad)  
  41dd5e:	push   esi
  41dd5f:	daa    
  41dd60:	push   0xffffffa4
  41dd62:	mov    edx,0xf6ca469a
  41dd67:	cmp    al,0x68
  41dd69:	idiv   BYTE PTR [ecx]
  41dd6b:	fcmove st,st(3)
  41dd6d:	pop    esp
  41dd6e:	dec    ebx
  41dd6f:	fstp   DWORD PTR [ebx-0x10]
  41dd72:	shl    esi,1
  41dd74:	daa    
  41dd75:	add    DWORD PTR [ecx+0x48a0c4cc],0xce3d86a5
  41dd7f:	outs   dx,DWORD PTR ds:[esi]
  41dd80:	jae    0x41dd46
  41dd82:	retf   0x2440
  41dd85:	add    dh,BYTE PTR [esi+0x13]
  41dd88:	out    0x68,eax
  41dd8a:	mov    DWORD PTR [ecx+eiz*2+0x50],ebp
  41dd8e:	stos   DWORD PTR es:[edi],eax
  41dd8f:	xor    bl,BYTE PTR [edx]
  41dd91:	and    ch,BYTE PTR [ebx+0x67db1643]
  41dd97:	inc    eax
  41dd98:	hlt    
  41dd99:	mov    bl,0xce
  41dd9b:	aaa    
  41dd9c:	push   ebp
  41dd9d:	pop    ebx
  41dd9e:	xor    dh,BYTE PTR [ebp+edi*2-0x60]
  41dda2:	dec    eax
  41dda3:	cli    
  41dda4:	xor    BYTE PTR [esi+0x6f0f19ad],bl
  41ddaa:	icebp  
  41ddab:	adc    esi,DWORD PTR [esi+0x3e04e432]
  41ddb1:	call   0x80fcc94d
  41ddb6:	cmp    dh,BYTE PTR [ecx+0x45]
  41ddb9:	sub    DWORD PTR [esi],0xffffff87
  41ddbc:	mov    gs,WORD PTR [ebp-0x60905693]
  41ddc2:	mov    dh,0xb
  41ddc4:	or     edi,DWORD PTR [ecx-0x4d]
  41ddc7:	jb     0x41dd75
  41ddc9:	out    dx,eax
  41ddca:	fcomip st,st(7)
  41ddcc:	lahf   
  41ddcd:	xor    BYTE PTR [ebx],bl
  41ddcf:	outs   dx,BYTE PTR ds:[esi]
  41ddd0:	mov    edx,0x37fe1d24
  41ddd5:	popa   
  41ddd6:	xor    ebp,DWORD PTR [edi+0x7e8e72e8]
  41dddc:	pop    eax
  41dddd:	xor    BYTE PTR ds:[eax],0x1a
  41dde1:	fiadd  WORD PTR ds:0xf1264ae7
  41dde7:	std    
  41dde8:	dec    ebx
  41dde9:	mov    gs,WORD PTR [eax+0x50c4fbbd]
  41ddef:	shr    DWORD PTR [ebx],cl
  41ddf1:	adc    DWORD PTR cs:[ecx+edi*8-0x4232b0d1],edx
  41ddf9:	aaa    
  41ddfa:	jo     0x41ddf2
  41ddfc:	adc    al,0xa
  41ddfe:	sub    dl,BYTE PTR [ecx-0x4044f865]
  41de04:	pop    ss
  41de05:	hlt    
  41de06:	xchg   edx,eax
  41de07:	cld    
  41de08:	or     eax,0x9ebe8c07
  41de0d:	hlt    
  41de0e:	mov    WORD PTR [edi-0x3b],gs
  41de11:	cmp    eax,0x26f10a9e
  41de16:	lahf   
  41de17:	sbb    edi,ebp
  41de19:	xor    eax,0x80232094
  41de1e:	cmp    dl,ah
  41de20:	jg     0x41dde3
  41de22:	mov    ecx,DWORD PTR [ebp-0x2d]
  41de25:	rcr    BYTE PTR [eax-0xc46d241],0xb3
  41de2c:	imul   edx,esi,0xb1187a3d
  41de32:	(bad)  
  41de33:	jns    0x41deaf
  41de35:	retf   
  41de36:	push   ebx
  41de37:	test   BYTE PTR [ebp-0x24],dh
  41de3a:	outs   dx,BYTE PTR ds:[esi]
  41de3b:	icebp  
  41de3c:	adc    ecx,esp
  41de3e:	gs iret 
  41de40:	cli    
  41de41:	popa   
  41de42:	inc    esp
  41de43:	ret    0x4e58
  41de46:	xor    eax,0x602951cb
  41de4b:	cld    
  41de4c:	retf   
  41de4d:	ja     0x41deb7
  41de4f:	fs cdq 
  41de51:	sbb    bh,BYTE PTR [ecx+edi*4]
  41de54:	je     0x41dec3
  41de56:	sahf   
  41de57:	mov    DWORD PTR [edi+0x3ed55454],0x8d374c62
  41de61:	ins    BYTE PTR es:[edi],dx
  41de62:	push   edx
  41de63:	shl    ah,0xb0
  41de66:	dec    esp
  41de67:	adc    BYTE PTR [ebx],cl
  41de69:	add    eax,0xd44edd42
  41de6e:	in     eax,dx
  41de6f:	dec    edx
  41de70:	adc    DWORD PTR [eax+edx*1+0x58],ecx
  41de74:	test   edx,0xae287efe
  41de7a:	daa    
  41de7b:	adc    BYTE PTR ds:0x1b618740,ch
  41de81:	ror    cl,cl
  41de83:	in     eax,0x5
  41de85:	lods   eax,DWORD PTR ds:[esi]
  41de86:	mov    ds:0x95f75ca7,al
  41de8b:	ror    BYTE PTR [eax-0x53099ea0],0xf0
  41de92:	xor    ch,bl
  41de94:	ret    
  41de95:	aam    0x8c
  41de97:	and    al,0xc5
  41de99:	arpl   WORD PTR [esi-0x60],sp
  41de9c:	(bad)  
  41de9d:	ds jae 0x41de31
  41dea0:	cmp    al,0x31
  41dea2:	inc    eax
  41dea3:	or     DWORD PTR [ebp-0xfdabe25],eax
  41dea9:	ja     0x41ded0
  41deab:	and    al,0x8c
  41dead:	(bad)  
  41deae:	in     al,0x1d
  41deb0:	xchg   esi,eax
  41deb1:	pop    ecx
  41deb2:	cdq    
  41deb3:	in     eax,0x46
  41deb5:	(bad)  
  41deb6:	xor    ebp,DWORD PTR [eax-0x51]
  41deb9:	add    al,0xe5
  41debc:	xchg   ecx,eax
  41debd:	xlat   BYTE PTR ds:[ebx]
  41debe:	jno    0x41de79
  41dec0:	and    eax,0xf3548b11
  41dec5:	jbe    0x41df09
  41dec7:	or     edx,DWORD PTR [ecx-0x41787233]
  41decd:	cld    
  41dece:	outs   dx,BYTE PTR ds:[esi]
  41decf:	pop    ds
  41ded0:	push   ss
  41ded1:	(bad)  
  41ded2:	push   0x2c
  41ded4:	mov    cl,0x2a
  41ded6:	outs   dx,DWORD PTR ds:[esi]
  41ded7:	xor    BYTE PTR [ebp+0x17d8d10e],bh
  41dedd:	test   BYTE PTR [eax-0x63],ah
  41dee0:	mov    BYTE PTR [eax],dh
  41dee2:	push   ss
  41dee3:	fimul  WORD PTR [edx]
  41dee5:	je     0x41de93
  41dee7:	mov    ch,bl
  41dee9:	xor    eax,0x3335d9b7
  41deee:	push   cs
  41deef:	push   eax
  41def0:	rol    esp,0xaf
  41def3:	jg     0x41df35
  41def5:	scas   al,BYTE PTR es:[edi]
  41def6:	(bad)  
  41def7:	test   eax,0xd944a081
  41defc:	lods   eax,DWORD PTR ds:[esi]
  41defd:	mov    WORD PTR [ebp+edx*1+0xd1ca955],es
  41df04:	sub    eax,0xda67fde5
  41df09:	add    al,0xbc
  41df0b:	push   0x86b64569
  41df10:	fst    DWORD PTR [ebx-0x2b23bf05]
  41df16:	inc    esi
  41df17:	jb     0x41df32
  41df19:	dec    edx
  41df1a:	jns    0x41dec6
  41df1c:	ffree  st(2)
  41df1e:	cmp    al,0x76
  41df20:	sub    bh,0x2c
  41df23:	jmp    0xe4688fbd
  41df28:	aaa    
  41df29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df2a:	mov    ebx,0x8802efc6
  41df2f:	cld    
  41df30:	mov    BYTE PTR [ebp+0x1f],al
  41df33:	mov    al,0xcd
  41df35:	push   cs
  41df36:	ds fxtract 
  41df39:	es or  BYTE PTR gs:[edx],bl
  41df3d:	cmp    cl,dl
  41df3f:	jl     0x41def1
  41df41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df42:	jle    0x41dfb1
  41df44:	jle    0x41dfb3
  41df46:	loop   0x41df3c
  41df48:	adc    BYTE PTR [ecx],bl
  41df4a:	imul   ebp,ebx,0xffffffa9
  41df4d:	add    BYTE PTR [edi],dh
  41df4f:	ins    BYTE PTR es:[edi],dx
  41df50:	sbb    BYTE PTR [eax+edx*1+0x57226a8a],dh
  41df57:	rcr    ch,0xcb
  41df5a:	test   BYTE PTR [ebx+0x57df612d],bl
  41df60:	out    0xca,eax
  41df62:	lahf   
  41df63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df64:	lods   eax,DWORD PTR ds:[esi]
  41df65:	adc    BYTE PTR [edi],dl
  41df67:	cmp    eax,DWORD PTR [edi+0x5aab3aac]
  41df6d:	pop    es
  41df6e:	sbb    BYTE PTR [esi+edx*1-0x69d9276d],0x8
  41df76:	add    BYTE PTR [ebp-0x6a],cl
  41df79:	push   es
  41df7a:	icebp  
  41df7b:	jmp    0x9f2f30a5
  41df80:	call   FWORD PTR [eax-0x243719de]
  41df86:	push   0xffffffee
  41df88:	dec    ecx
  41df89:	inc    esi
  41df8a:	adc    edx,DWORD PTR [edi+eiz*1-0x33]
  41df8e:	jecxz  0x41df77
  41df90:	test   al,0xc4
  41df92:	mov    edi,0xaacd1cd4
  41df97:	ret    
  41df98:	mov    DWORD PTR [ebp+eiz*1+0x1348ff3b],edx
  41df9f:	leave  
  41dfa0:	mov    ah,0x35
  41dfa2:	loope  0x41dfd5
  41dfa4:	arpl   WORD PTR [edx+0x1a],di
  41dfa7:	mov    dl,0x36
  41dfa9:	jno    0x41dfc8
  41dfab:	test   BYTE PTR [ecx+edx*8],bh
  41dfae:	mov    DWORD PTR [edi+0x54ad380f],esp
  41dfb4:	test   al,bh
  41dfb6:	ss dec edx
  41dfb8:	std    
  41dfb9:	shr    DWORD PTR [edx-0x65],1
  41dfbc:	(bad)  
  41dfbd:	mov    eax,0x9e337b4d
  41dfc2:	mov    ch,0x34
  41dfc4:	test   eax,0xfbbac009
  41dfc9:	pop    ds
  41dfca:	cmp    BYTE PTR [eax+eax*8-0x80],0xbd
  41dfcf:	lock nop
  41dfd1:	int    0xbb
  41dfd3:	jnp    0x41e040
  41dfd5:	xor    eax,DWORD PTR [eax-0x4f72b243]
  41dfdb:	push   ecx
  41dfdc:	pop    edi
  41dfdd:	add    BYTE PTR [ecx],bl
  41dfdf:	into   
  41dfe0:	sbb    DWORD PTR [ebx-0x5b],0x6dce901a
  41dfe7:	iret   
  41dfe8:	jecxz  0x41dfad
  41dfea:	add    al,0x8e
  41dfec:	push   ds
  41dfed:	jl     0x41e058
  41dfef:	stos   BYTE PTR es:[edi],al
  41dff0:	mov    esp,0xab89d378
  41dff5:	(bad)  
  41dff7:	push   ds
  41dff8:	das    
  41dff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dffa:	mov    ah,0x5f
  41dffc:	sbb    BYTE PTR [eax+0x9],ah
  41dfff:	pushf  
  41e000:	xchg   edx,eax
  41e001:	call   0xff97:0x63abc59e
  41e008:	nop
  41e009:	lods   eax,DWORD PTR ds:[esi]
  41e00a:	(bad)  
  41e00b:	and    esi,DWORD PTR [edi]
  41e00d:	jne    0x41dfd4
  41e00f:	mov    ds:0xc77d315c,al
  41e014:	ins    DWORD PTR es:[edi],dx
  41e015:	mov    al,0x7f
  41e017:	dec    edx
  41e018:	into   
  41e019:	mov    eax,ds:0xfa95e16c
  41e01e:	enter  0xde5a,0xcc
  41e022:	mov    esi,0xe04ce233
  41e027:	cli    
  41e028:	in     eax,dx
  41e029:	mov    dh,0x37
  41e02b:	stos   DWORD PTR es:[edi],eax
  41e02c:	sub    al,0xe1
  41e02e:	inc    esi
  41e02f:	sbb    al,dl
  41e031:	(bad)  
  41e032:	scas   eax,DWORD PTR es:[edi]
  41e033:	ins    BYTE PTR es:[edi],dx
  41e034:	test   eax,0x4782b9cb
  41e039:	inc    edi
  41e03a:	push   ebp
  41e03b:	or     dl,BYTE PTR [esi+0x4d08a6d7]
  41e041:	mov    ds,WORD PTR [edi+0x1b]
  41e044:	je     0x41dfe2
  41e046:	or     eax,0x773ce040
  41e04b:	push   ebx
  41e04c:	adc    al,0xf6
  41e04e:	scas   eax,DWORD PTR es:[edi]
  41e04f:	fimul  DWORD PTR [edi-0x51]
  41e052:	jp     0x41e04e
  41e054:	adc    cl,BYTE PTR [esi]
  41e056:	(bad)  
  41e057:	int    0x87
  41e059:	mov    ecx,0x609e5a43
  41e05e:	pop    eax
  41e05f:	push   esp
  41e060:	aam    0xd6
  41e062:	dec    esp
  41e063:	(bad)  
  41e064:	int    0xf
  41e066:	sbb    DWORD PTR [edi+0x49],esi
  41e069:	and    ebx,ebp
  41e06b:	out    dx,eax
  41e06c:	hlt    
  41e06d:	jae    0x41dfef
  41e06f:	shl    DWORD PTR [esi-0x69],1
  41e072:	mov    eax,0xff3aaeae
  41e077:	xchg   BYTE PTR [ecx],al
  41e079:	sbb    esi,DWORD PTR [edx-0x3]
  41e07c:	pop    edi
  41e07d:	daa    
  41e07e:	fs pushf 
  41e080:	clc    
  41e081:	fstp   st(1)
  41e083:	shr    DWORD PTR [edx+0x2c],0x1c
  41e087:	icebp  
  41e088:	not    BYTE PTR [ebp-0x57334154]
  41e08e:	js     0x41e02e
  41e090:	(bad)  
  41e091:	fwait
  41e092:	pop    eax
  41e093:	call   0xa067:0x7ad517dc
  41e09a:	and    al,0xe6
  41e09c:	mov    bh,0x9d
  41e09e:	jg     0x41e0af
  41e0a0:	mov    ch,0x4b
  41e0a2:	mov    esi,0xe5604345
  41e0a7:	imul   eax,edi,0xffffffb6
  41e0aa:	jo     0x41e063
  41e0ac:	pop    es
  41e0ad:	into   
  41e0ae:	int3   
  41e0af:	inc    edx
  41e0b0:	mov    esp,0xe77064e4
  41e0b5:	xchg   esp,eax
  41e0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b7:	lods   al,BYTE PTR ds:[esi]
  41e0b8:	sub    BYTE PTR [esi],bh
  41e0ba:	mov    dl,dh
  41e0bc:	or     eax,0xd19d0805
  41e0c1:	bound  ecx,QWORD PTR [ebp-0x70]
  41e0c4:	iret   
  41e0c5:	lahf   
  41e0c6:	fnsave [ecx+0x5a]
  41e0c9:	and    DWORD PTR [ebx-0x4e6d52cd],eax
  41e0cf:	sbb    DWORD PTR [ebx+0x35],ebp
  41e0d2:	sbb    ah,bh
  41e0d4:	mov    ds:0xf605eed7,al
  41e0d9:	lds    esp,FWORD PTR [edi]
  41e0db:	jmp    0x7f1f:0x198335e4
  41e0e2:	cwde   
  41e0e3:	jmp    0x41e075
  41e0e5:	cdq    
  41e0e6:	cmp    DWORD PTR [eax],0xffffffbd
  41e0e9:	add    dh,dh
  41e0eb:	sub    al,0xe1
  41e0ed:	(bad)  
  41e0ee:	push   ebp
  41e0ef:	and    BYTE PTR [esi+0x4c],bh
  41e0f2:	sub    dh,BYTE PTR [esi]
  41e0f4:	ds stos BYTE PTR es:[edi],al
  41e0f6:	outs   dx,BYTE PTR ds:[esi]
  41e0f7:	fadd   st,st(7)
  41e0f9:	psrlq  mm0,mm2
  41e0fc:	aad    0x36
  41e0fe:	adc    eax,0xb769910d
  41e103:	mov    BYTE PTR [edi-0x57],cl
  41e106:	adc    eax,0x93ce862c
  41e10b:	push   eax
  41e10c:	leave  
  41e10d:	scas   al,BYTE PTR es:[edi]
  41e10e:	push   edx
  41e10f:	rcr    DWORD PTR [eax-0x303afaef],0xe0
  41e116:	in     al,dx
  41e117:	scas   eax,DWORD PTR es:[edi]
  41e118:	aam    0x16
  41e11a:	loope  0x41e12c
  41e11c:	xchg   esi,eax
  41e11d:	inc    edx
  41e11e:	(bad)  
  41e11f:	mov    ebx,0xd728f353
  41e125:	pop    ebx
  41e126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e127:	sbb    edx,esi
  41e129:	ja     0x41e167
  41e12b:	loop   0x41e0f1
  41e12d:	fldenv [esp+ebx*2-0x42]
  41e131:	sub    BYTE PTR [edi-0x1936551d],cl
  41e137:	xor    al,0xae
  41e139:	jnp    0x41e1a4
  41e13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e13c:	sub    eax,0x5fcdb5f3
  41e141:	adc    al,BYTE PTR [ebp-0x22]
  41e144:	xchg   ecx,eax
  41e145:	ss push di
  41e148:	stos   BYTE PTR es:[edi],al
  41e149:	xor    eax,0x641c3f3
  41e14e:	sahf   
  41e14f:	pop    ds
  41e150:	pop    esp
  41e151:	sub    esp,ebx
  41e153:	clc    
  41e154:	jge    0x41e12f
  41e156:	daa    
  41e157:	jecxz  0x41e17c
  41e159:	mov    dh,0x5c
  41e15b:	mov    edx,0x6e9c8594
  41e160:	push   ds
  41e161:	mov    edi,0xc299ec
  41e166:	pop    ss
  41e167:	ds call 0x771f6b7c
  41e16d:	cwde   
  41e16e:	repz sbb DWORD PTR [ecx],ebp
  41e171:	xchg   DWORD PTR [eax+0x1b],esp
  41e174:	arpl   WORD PTR [esi+0x26],ax
  41e177:	shl    BYTE PTR [edx],cl
  41e179:	cld    
  41e17a:	(bad)  
  41e17b:	in     eax,dx
  41e17c:	test   BYTE PTR [edx+eax*4+0x25],0x27
  41e181:	mov    ebp,0x31a066bc
  41e186:	jecxz  0x41e1e3
  41e188:	xchg   ecx,eax
  41e189:	loope  0x41e1ab
  41e18b:	or     eax,0xd71ba611
  41e190:	jno    0x41e1af
  41e192:	sbb    DWORD PTR [edi],0x7f6f5263
  41e198:	mov    ds:0x2b9ab352,al
  41e19d:	jnp    0x41e1e6
  41e19f:	out    dx,eax
  41e1a0:	sub    bl,BYTE PTR [edx-0x787e7d58]
  41e1a6:	out    dx,eax
  41e1a7:	mov    eax,0x28317e16
  41e1ac:	and    ebp,ebp
  41e1ae:	daa    
  41e1af:	jne    0x41e173
  41e1b1:	and    eax,0x17852ee2
  41e1b6:	rcr    BYTE PTR [ebx-0x7a],cl
  41e1b9:	es cli 
  41e1bb:	int3   
  41e1bc:	sub    DWORD PTR [edx+0x51f4b4d4],esi
  41e1c2:	mov    al,0xc8
  41e1c4:	pushw  ds
  41e1c6:	es std 
  41e1c8:	adc    al,0x52
  41e1ca:	nop
  41e1cb:	pop    eax
  41e1cc:	mov    dh,0x7
  41e1ce:	loop   0x41e194
  41e1d0:	dec    esp
  41e1d1:	pop    edi
  41e1d2:	xor    al,0xd4
  41e1d4:	fwait
  41e1d5:	int3   
  41e1d6:	mov    bl,0x46
  41e1d8:	push   edi
  41e1d9:	inc    ebp
  41e1da:	adc    bh,BYTE PTR [edx]
  41e1dc:	hlt    
  41e1dd:	int    0x6b
  41e1df:	sbb    al,0x99
  41e1e1:	retf   
  41e1e2:	mov    edx,0x330ec6e1
  41e1e7:	addr16 push ebp
  41e1e9:	pop    edx
  41e1ea:	fwait
  41e1eb:	outs   dx,BYTE PTR es:[esi]
  41e1ed:	ficomp WORD PTR [edx+0x13]
  41e1f0:	ret    0xcf85
  41e1f3:	sahf   
  41e1f4:	call   0xcc26:0xb2605090
  41e1fb:	sbb    al,0x65
  41e1fd:	sahf   
  41e1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ff:	xchg   esi,eax
  41e200:	pop    ecx
  41e201:	ds loope 0x41e1ac
  41e204:	add    dh,BYTE PTR [ebx-0x7d8ece97]
  41e20a:	mov    cl,0x87
  41e20c:	dec    esi
  41e20d:	dec    edi
  41e20e:	mov    WORD PTR [esi+0x6912d18b],ss
  41e214:	(bad)  [esi-0x7ca41cad]
  41e21a:	data16 xor ch,bh
  41e21d:	leave  
  41e21e:	mov    ah,0x8
  41e220:	pop    ecx
  41e221:	add    cl,bl
  41e223:	sub    eax,0xb8e35c45
  41e228:	jne    0x41e219
  41e22a:	jg     0x41e1bd
  41e22c:	mov    edx,0x89b1a8ab
  41e231:	idiv   esi
  41e233:	popa   
  41e234:	dec    edx
  41e235:	ins    BYTE PTR es:[edi],dx
  41e236:	xchg   ecx,eax
  41e237:	pop    edx
  41e238:	test   eax,0x4851d023
  41e23d:	pop    eax
  41e23e:	imul   esi,DWORD PTR ds:0x288ca2c6,0x7ff200fe
  41e248:	clc    
  41e249:	sub    eax,0xbfc55843
  41e24e:	push   ecx
  41e24f:	inc    edx
  41e250:	dec    esp
  41e251:	cld    
  41e252:	sub    eax,0xb55315b5
  41e257:	lahf   
  41e258:	xlat   BYTE PTR ds:[ebx]
  41e259:	mov    bl,0x36
  41e25b:	rol    DWORD PTR [edx],0x88
  41e25e:	hlt    
  41e25f:	outs   dx,BYTE PTR ds:[esi]
  41e260:	sti    
  41e261:	imul   ebp,DWORD PTR [edi+ebp*4-0x6091b8df],0x26
  41e269:	push   eax
  41e26a:	xor    ch,BYTE PTR [esi+0x3f537308]
  41e270:	mov    edx,0xd58b9f3c
  41e275:	mov    bl,0x17
  41e277:	sbb    DWORD PTR [edi*2-0x7b270ede],esi
  41e27e:	cmp    esi,edi
  41e280:	push   0x214ad067
  41e285:	adc    BYTE PTR [ebx+edx*1-0x31],ah
  41e289:	stos   BYTE PTR es:[edi],al
  41e28a:	pop    eax
  41e28b:	retf   
  41e28c:	pushf  
  41e28d:	test   ecx,esi
  41e28f:	pushf  
  41e290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e291:	ins    BYTE PTR es:[edi],dx
  41e292:	test   eax,0x682fd242
  41e297:	pop    esp
  41e298:	push   0x8ab27e94
  41e29d:	fldenv [ebx+0x27a0a848]
  41e2a3:	imul   edx,DWORD PTR [esi+edi*1+0x46],0x33f25344
  41e2ab:	stc    
  41e2ac:	pusha  
  41e2ad:	lea    esi,[edi+0x1d]
  41e2b0:	out    0xfa,al
  41e2b2:	test   eax,0xd0a591
  41e2b7:	pop    edx
  41e2b8:	sub    eax,0x8d866e5b
  41e2bd:	push   ss
  41e2be:	sti    
  41e2bf:	cmp    al,0xec
  41e2c1:	clc    
  41e2c2:	gs sbb al,0xe0
  41e2c5:	jae    0x41e25f
  41e2c7:	mov    edi,0xd9c1c834
  41e2cc:	pop    eax
  41e2cd:	das    
  41e2ce:	repnz and bh,al
  41e2d1:	jp     0x41e2a7
  41e2d3:	dec    esi
  41e2d4:	gs int 0xee
  41e2d7:	aad    0xd1
  41e2d9:	fs inc edx
  41e2db:	cpuid  
  41e2dd:	jb     0x41e2e1
  41e2df:	mov    eax,0x64d61c98
  41e2e4:	jl     0x41e277
  41e2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e7:	(bad)
  41e2ea:	loopne 0x41e2cc
  41e2ec:	int    0x15
  41e2ee:	aas    
  41e2ef:	sbb    ebx,edi
  41e2f1:	mov    edi,0x3040f577
  41e2f6:	(bad)  
  41e2f7:	iret   
  41e2f8:	(bad)  [eax]
  41e2fa:	and    al,ah
  41e2fc:	dec    edi
  41e2fd:	call   0x496fc79b
  41e302:	pop    ebx
  41e303:	inc    edx
  41e304:	xlat   BYTE PTR ds:[ebx]
  41e305:	cdq    
  41e306:	popa   
  41e307:	adc    ebx,DWORD PTR [edx+edi*4-0x11]
  41e30b:	inc    ecx
  41e30c:	pusha  
  41e30d:	imul   ebx,eax,0xffffffa2
  41e310:	pop    esi
  41e311:	(bad)  
  41e312:	shl    BYTE PTR [ebp+eiz*1+0x58],1
  41e316:	jmp    0x55:0x95d4a4df
  41e31d:	fisubr WORD PTR [ecx-0x19bc6ace]
  41e323:	ret    
  41e324:	je     0x41e366
  41e326:	fbstp  TBYTE PTR [ebx]
  41e328:	mov    ch,0xc9
  41e32a:	cmp    ch,BYTE PTR [ecx+ebp*8+0x28]
  41e32e:	outs   dx,DWORD PTR ds:[esi]
  41e32f:	lock rcr BYTE PTR [edi],0x61
  41e333:	and    BYTE PTR [ebx-0x5b],dl
  41e336:	fsubr  DWORD PTR [ebp+0x31]
  41e339:	cwde   
  41e33a:	jge    0x41e370
  41e33c:	pushf  
  41e33d:	fwait
  41e33e:	push   ebx
  41e33f:	xchg   esi,eax
  41e340:	loope  0x41e393
  41e342:	pop    ebx
  41e343:	loop   0x41e2ea
  41e345:	fdivp  st(2),st
  41e347:	mov    DWORD PTR [ecx+0xd202172],ebp
  41e34d:	stos   DWORD PTR es:[edi],eax
  41e34e:	mov    dh,0x49
  41e350:	scas   eax,DWORD PTR es:[edi]
  41e351:	das    
  41e352:	jl     0x41e3ba
  41e354:	out    dx,al
  41e355:	jl     0x41e3ce
  41e357:	cmp    edi,esp
  41e359:	push   0xffffffb2
  41e35b:	add    eax,0x4a493426
  41e360:	dec    esi
  41e361:	cmp    ebx,DWORD PTR [eax+0x78a4409b]
  41e367:	mov    al,0xfc
  41e369:	out    0xe9,al
  41e36b:	addr16 mov ebx,0x41fc1752
  41e371:	jle    0x41e3bb
  41e373:	pop    esi
  41e374:	sbb    al,0x91
  41e376:	rol    bl,cl
  41e378:	inc    ebx
  41e379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e37a:	mov    dl,0x6e
  41e37c:	xchg   edi,eax
  41e37d:	push   ss
  41e37e:	pop    ds
  41e37f:	sbb    ebx,ebp
  41e381:	hlt    
  41e382:	fst    st(5)
  41e384:	sub    DWORD PTR [edx+0x0],0xffffffcf
  41e388:	dec    ecx
  41e389:	push   esi
  41e38a:	sub    eax,0xee45d5bd
  41e38f:	dec    esp
  41e390:	xlat   BYTE PTR ds:[ebx]
  41e391:	mov    ebx,0x2e67af1a
  41e396:	sub    BYTE PTR [eax],0xae
  41e399:	or     BYTE PTR [eax],dh
  41e39b:	mov    eax,ss
  41e39d:	ret    
  41e39e:	cmp    al,0xbd
  41e3a0:	in     al,dx
  41e3a1:	repnz pop eax
  41e3a3:	mov    ebp,0x8e66369d
  41e3a8:	test   DWORD PTR [ecx],ebp
  41e3aa:	push   ebp
  41e3ab:	jo     0x41e33d
  41e3ad:	cmp    eax,0xa811ff36
  41e3b2:	in     al,0x52
  41e3b4:	dec    ecx
  41e3b5:	xor    DWORD PTR [edx+0x45482562],eax
  41e3bb:	add    al,cl
  41e3bd:	cli    
  41e3be:	fdiv   st,st(7)
  41e3c0:	jmp    0x41e354
  41e3c2:	push   eax
  41e3c3:	xor    bh,BYTE PTR [ebp+0x4a05c223]
  41e3c9:	mov    bh,BYTE PTR [esi]
  41e3cb:	loope  0x41e3fa
  41e3cd:	push   0xffffff98
  41e3cf:	add    ebp,DWORD PTR [edx+0x2db10682]
  41e3d5:	lods   eax,DWORD PTR ds:[esi]
  41e3d6:	into   
  41e3d7:	jle    0x41e3a6
  41e3d9:	loopne 0x41e43d
  41e3db:	xchg   edi,eax
  41e3dc:	mov    eax,0x4ee02f26
  41e3e1:	ins    DWORD PTR es:[edi],dx
  41e3e2:	adc    DWORD PTR [eax+0x74b59537],ebp
  41e3e8:	lds    esp,FWORD PTR [esi+0x32864e04]
  41e3ee:	cs push ss
  41e3f0:	repz inc esi
  41e3f2:	mov    ah,0xb2
  41e3f4:	(bad)  
  41e3f5:	xchg   esp,eax
  41e3f6:	xor    DWORD PTR [edx],0x2671686e
  41e3fc:	pop    ds
  41e3fd:	fcmove st,st(6)
  41e3ff:	xchg   ecx,eax
  41e400:	outs   dx,DWORD PTR ds:[esi]
  41e401:	adc    bl,BYTE PTR [edx+0x20]
  41e404:	test   al,0xd2
  41e406:	push   ss
  41e407:	add    ebx,DWORD PTR [ecx]
  41e409:	mov    al,0x94
  41e40b:	mov    BYTE PTR [ebx],cl
  41e40d:	jmp    0x35d9081
  41e412:	mov    bh,0x20
  41e414:	daa    
  41e415:	fld1   
  41e417:	mov    edx,gs
  41e419:	das    
  41e41a:	pop    ebp
  41e41b:	shl    DWORD PTR [edi],0x29
  41e41e:	mov    ds:0x4f55e875,eax
  41e423:	scas   al,BYTE PTR es:[edi]
  41e424:	push   ecx
  41e425:	mov    eax,0x7754f271
  41e42a:	lods   al,BYTE PTR ds:[esi]
  41e42b:	adc    ebx,DWORD PTR [ecx+0x2ad9072e]
  41e431:	pusha  
  41e432:	data16 aam 0xe9
  41e435:	loope  0x41e452
  41e437:	shl    dl,0xd4
  41e43a:	xchg   ecx,eax
  41e43b:	push   eax
  41e43c:	pop    edx
  41e43d:	xchg   ebx,eax
  41e43e:	ror    DWORD PTR [edi],0xc1
  41e441:	daa    
  41e442:	jp     0x41e3ea
  41e444:	outs   dx,DWORD PTR ds:[esi]
  41e445:	jg     0x41e416
  41e447:	sbb    eax,0xc8556278
  41e44c:	or     dh,BYTE PTR [ebx+0x1c53fd54]
  41e452:	sbb    al,BYTE PTR [edx]
  41e454:	int3   
  41e455:	fistp  DWORD PTR [eax+0x1f]
  41e458:	fcmovu st,st(6)
  41e45a:	jmp    0xae044216
  41e45f:	pop    edi
  41e460:	or     al,0xe7
  41e462:	ins    BYTE PTR es:[edi],dx
  41e463:	ja     0x41e453
  41e465:	dec    esi
  41e466:	push   cs
  41e467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e468:	xchg   esi,eax
  41e469:	pop    ss
  41e46a:	mov    ecx,0x65b78343
  41e46f:	fidiv  WORD PTR [ebx+0x53]
  41e472:	js     0x41e4e3
  41e474:	pop    ebx
  41e475:	loopne 0x41e469
  41e477:	sbb    al,0xef
  41e479:	(bad)  
  41e47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47b:	pusha  
  41e47c:	imul   edi,DWORD PTR [edi+ebp*1-0x3d],0xffffff8b
  41e481:	shl    BYTE PTR [esi+0x33b29eb],cl
  41e487:	xchg   esp,eax
  41e488:	or     DWORD PTR [edx-0x7b],0x17
  41e48c:	jmp    0x78f3:0xaaccf025
  41e493:	popa   
  41e494:	xor    al,BYTE PTR [ebx-0x33d99009]
  41e49a:	push   eax
  41e49b:	add    bh,bl
  41e49d:	mov    edi,0x6ae94fe6
  41e4a2:	pusha  
  41e4a3:	cwde   
  41e4a4:	stc    
  41e4a5:	push   0xffffffbb
  41e4a7:	idiv   DWORD PTR [eax]
  41e4a9:	inc    ebx
  41e4aa:	xor    esi,0x10
  41e4ad:	and    dh,cl
  41e4af:	mov    edi,0x84806253
  41e4b4:	jnp    0x41e499
  41e4b6:	add    DWORD PTR [edx-0x56],edi
  41e4b9:	dec    BYTE PTR [ebx]
  41e4bb:	fdiv   QWORD PTR [esi-0x78]
  41e4be:	mov    bl,0x6d
  41e4c0:	ret    0x7e43
  41e4c3:	add    dh,bl
  41e4c5:	icebp  
  41e4c6:	cmp    al,0xa2
  41e4c8:	stos   DWORD PTR es:[edi],eax
  41e4c9:	sub    esp,DWORD PTR [ebp-0x3954e818]
  41e4cf:	mov    ebp,0xa48387c6
  41e4d4:	dec    esi
  41e4d5:	jl     0x41e4fb
  41e4d7:	out    0x9c,eax
  41e4d9:	push   ebx
  41e4da:	imul   ecx
  41e4dc:	inc    edi
  41e4dd:	mov    eax,0xf8137225
  41e4e2:	xor    DWORD PTR [edx+eiz*8],edx
  41e4e5:	cmp    ebx,DWORD PTR [edx]
  41e4e7:	cmp    ebp,DWORD PTR [eax-0x3fd8650d]
  41e4ed:	rol    ah,0xe9
  41e4f0:	cmp    eax,0xbc6f4d80
  41e4f5:	xchg   ebp,eax
  41e4f6:	push   esp
  41e4f7:	fld    QWORD PTR ds:0x919618cb
  41e4fd:	cli    
  41e4fe:	sahf   
  41e4ff:	lea    ebp,[eax-0x16]
  41e502:	jmp    0x5814:0x700e68d7
  41e509:	arpl   WORD PTR [ecx+0x119224df],dx
  41e50f:	add    BYTE PTR [eax+0x62],bl
  41e512:	dec    edi
  41e513:	mov    cl,0x80
  41e515:	into   
  41e516:	sub    dl,BYTE PTR [edi]
  41e518:	xchg   ebp,eax
  41e519:	sub    eax,0x8ba871e3
  41e51e:	or     al,0x64
  41e520:	add    BYTE PTR [edi+edi*8+0x1],0x37
  41e525:	xor    al,0xc9
  41e527:	mov    al,ds:0x1df0b8e8
  41e52c:	shl    DWORD PTR [ecx+0x55e7708d],cl
  41e532:	mov    ch,0xfa
  41e534:	mov    BYTE PTR [edx+0xd2d6cd6],dh
  41e53a:	shl    BYTE PTR [eax-0xef1a044],cl
  41e540:	repz (bad) 
  41e542:	xchg   ebp,eax
  41e543:	mov    ebp,0x6bb0adb8
  41e548:	scas   eax,DWORD PTR es:[edi]
  41e549:	pop    esp
  41e54a:	xor    BYTE PTR [ecx],bh
  41e54c:	pop    edi
  41e54d:	push   ds
  41e54e:	scas   eax,DWORD PTR es:[edi]
  41e54f:	iret   
  41e550:	shl    DWORD PTR [eax-0x4c],0x9e
  41e554:	xor    ecx,DWORD PTR [ecx-0x6]
  41e557:	fldcw  WORD PTR [ecx+0x4]
  41e55a:	or     BYTE PTR [eax-0x34],bh
  41e55d:	xchg   DWORD PTR cs:[eax+0xc],ebp
  41e561:	mov    ch,0x4
  41e563:	scas   eax,DWORD PTR es:[edi]
  41e564:	xchg   BYTE PTR [esi+0x710c8b05],bh
  41e56a:	std    
  41e56b:	pop    ebp
  41e56c:	mov    WORD PTR [ebp+0x73daa2e7],ds
  41e572:	push   edx
  41e573:	cld    
  41e574:	pop    ebp
  41e575:	fidivr WORD PTR [edi-0x68]
  41e578:	pop    eax
  41e579:	push   esp
  41e57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e57b:	es loope 0x41e584
  41e57e:	call   0x613e:0xa49a3e68
  41e585:	retf   
  41e586:	rcl    bl,1
  41e588:	sbb    al,0x92
  41e58a:	(bad)  
  41e58b:	pop    esi
  41e58c:	icebp  
  41e58d:	push   esi
  41e58e:	ins    BYTE PTR es:[edi],dx
  41e58f:	push   ebx
  41e590:	mov    dh,0x35
  41e592:	push   esp
  41e593:	hlt    
  41e594:	lds    edi,FWORD PTR [edx]
  41e596:	mov    edi,0x39d427e6
  41e59b:	inc    eax
  41e59c:	dec    eax
  41e59d:	popa   
  41e59e:	idiv   BYTE PTR [eax+0x1590f0b4]
  41e5a4:	xor    esi,DWORD PTR [eax+0x9]
  41e5a7:	xchg   ecx,eax
  41e5a8:	mov    BYTE PTR [eax],ah
  41e5aa:	cmc    
  41e5ab:	stc    
  41e5ac:	xor    cl,BYTE PTR [edi+0x29a87d5]
  41e5b2:	dec    edi
  41e5b3:	mov    cl,0x46
  41e5b5:	cdq    
  41e5b6:	mov    eax,esi
  41e5b8:	dec    edx
  41e5b9:	cmc    
  41e5ba:	ins    DWORD PTR es:[edi],dx
  41e5bb:	sbb    DWORD PTR [esi],edx
  41e5bd:	pop    ecx
  41e5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5bf:	adc    ch,dl
  41e5c1:	cmc    
  41e5c2:	call   0x899d:0x3d504db1
  41e5c9:	rcl    DWORD PTR [edx-0x57],cl
  41e5cc:	ja     0x41e568
  41e5ce:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d0:	mov    ?,WORD PTR [esi-0x68781365]
  41e5d6:	mov    ecx,0xe70e7ce6
  41e5db:	cld    
  41e5dc:	cdq    
  41e5dd:	mov    edi,0x9ed0cc1d
  41e5e2:	pop    eax
  41e5e3:	mov    WORD PTR [ebp+ecx*8+0x13],fs
  41e5e7:	mov    cl,0x31
  41e5e9:	mov    cl,BYTE PTR [esi+0xa166895]
  41e5ef:	bound  ecx,QWORD PTR [edi]
  41e5f1:	(bad)  
  41e5f2:	das    
  41e5f3:	xchg   BYTE PTR [edi-0x5a],dl
  41e5f6:	mov    DWORD PTR [ebx+0x37],edx
  41e5f9:	mov    edi,0xf60d0616
  41e5fe:	repnz (bad) 
  41e600:	scas   eax,DWORD PTR es:[edi]
  41e601:	add    eax,0xe86a7e24
  41e606:	pop    ss
  41e607:	sub    BYTE PTR [ecx-0x1536fd2c],0xe
  41e60e:	or     al,0xe1
  41e610:	scas   eax,DWORD PTR es:[edi]
  41e611:	je     0x41e5a1
  41e613:	pop    edx
  41e614:	(bad)  [eax]
  41e616:	inc    edi
  41e617:	fild   QWORD PTR [edx+0x4f]
  41e61a:	add    esi,esp
  41e61c:	sbb    DWORD PTR [ebx],ecx
  41e61e:	shl    BYTE PTR [ecx+0x69],1
  41e621:	test   al,0x48
  41e623:	adc    eax,0x6594477e
  41e628:	bound  edx,QWORD PTR [ebp-0x2f]
  41e62b:	add    edx,DWORD PTR [ebx]
  41e62d:	or     DWORD PTR [ecx],eax
  41e62f:	fnsave [edx-0xd]
  41e632:	daa    
  41e633:	pop    esp
  41e634:	cmp    al,0x94
  41e636:	loope  0x41e607
  41e638:	jmp    0x41e5d9
  41e63a:	mov    ch,0x48
  41e63c:	adc    BYTE PTR [edx+0x12ebb3e5],bh
  41e642:	xlat   BYTE PTR ds:[ebx]
  41e643:	scas   al,BYTE PTR es:[edi]
  41e644:	dec    esp
  41e645:	ins    DWORD PTR es:[edi],dx
  41e646:	addr16 or al,0x74
  41e649:	dec    eax
  41e64a:	inc    ebx
  41e64b:	jmp    0xf5d81472
  41e650:	das    
  41e651:	xor    ebp,esi
  41e653:	add    DWORD PTR [esi],0x7c
  41e656:	push   0x4ec061ad
  41e65b:	out    0xf6,al
  41e65d:	sbb    bl,BYTE PTR [edi+0x5ec975fd]
  41e663:	mov    ds:0x857dc225,al
  41e668:	push   ds
  41e669:	adc    al,0x6f
  41e66b:	mov    ebx,DWORD PTR [esi]
  41e66d:	push   ebp
  41e66e:	or     eax,0xa482aefa
  41e673:	and    al,0x12
  41e675:	jns    0x41e6ed
  41e677:	stos   DWORD PTR es:[edi],eax
  41e678:	shl    DWORD PTR [edx],1
  41e67a:	mov    ebx,0xcd240b5a
  41e67f:	cmc    
  41e680:	rcr    cl,1
  41e682:	cmp    esp,DWORD PTR [edx]
  41e684:	fistp  QWORD PTR [ebx+0x46]
  41e687:	sbb    al,0xff
  41e689:	sub    ebx,DWORD PTR [edi-0x6718c824]
  41e68f:	aas    
  41e690:	repz cmp ebx,edx
  41e693:	in     eax,dx
  41e694:	stos   BYTE PTR es:[edi],al
  41e695:	mov    ebx,esi
  41e697:	icebp  
  41e698:	jno    0x41e6bb
  41e69a:	xor    DWORD PTR [ecx+0x44],edx
  41e69d:	pop    ebx
  41e69e:	jl     0x41e66f
  41e6a0:	fnstcw WORD PTR [edx+0x6bddfce3]
  41e6a6:	inc    ecx
  41e6a7:	xlat   BYTE PTR ds:[ebx]
  41e6a8:	sbb    ah,ch
  41e6aa:	push   ss
  41e6ab:	mov    eax,ds:0x435c7faa
  41e6b0:	sbb    al,0xb6
  41e6b2:	lods   eax,DWORD PTR ds:[esi]
  41e6b3:	fstp   QWORD PTR [esi+0x75]
  41e6b6:	ficomp DWORD PTR [esi]
  41e6b8:	shl    BYTE PTR [ebp-0x3fbc3d66],1
  41e6be:	scas   al,BYTE PTR es:[edi]
  41e6bf:	outs   dx,DWORD PTR ds:[esi]
  41e6c0:	pushf  
  41e6c1:	xor    ecx,DWORD PTR [ecx-0x7d45407e]
  41e6c7:	aam    0xe
  41e6c9:	lock cwde 
  41e6cb:	inc    esi
  41e6cc:	out    0x66,al
  41e6ce:	push   ecx
  41e6cf:	lods   eax,DWORD PTR ds:[esi]
  41e6d0:	adc    al,BYTE PTR [eiz*8+0x57be75a2]
  41e6d7:	add    edx,eax
  41e6d9:	adc    esp,0x8edd9200
  41e6df:	loope  0x41e70f
  41e6e1:	(bad)  
  41e6e2:	sub    bh,bh
  41e6e4:	fnstenv [ebx]
  41e6e6:	adc    al,0x23
  41e6e8:	retf   0xc87a
  41e6eb:	cmp    BYTE PTR [edi-0x42],bh
  41e6ee:	or     ah,BYTE PTR [edx+0x1cd2f1c7]
  41e6f4:	fldenv [edx-0x19]
  41e6f7:	pop    ecx
  41e6f8:	icebp  
  41e6f9:	xchg   esi,eax
  41e6fa:	mov    eax,ds:0xcb16fe5f
  41e6ff:	jnp    0x41e6e7
  41e701:	xor    eax,0x452aa26c
  41e706:	sub    DWORD PTR [edi+0x3e],edx
  41e709:	mov    ebp,0x4e3154af
  41e70e:	pop    es
  41e70f:	jg     0x41e69f
  41e711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e712:	scas   al,BYTE PTR es:[edi]
  41e713:	adc    DWORD PTR ds:0x3c8aaaad,ebp
  41e719:	test   ebx,0xe9c4d683
  41e71f:	aaa    
  41e720:	jno    0x41e76d
  41e722:	sub    dh,bl
  41e724:	outs   dx,BYTE PTR ds:[esi]
  41e725:	mov    esi,DWORD PTR [edx]
  41e727:	icebp  
  41e728:	xchg   BYTE PTR [esi-0x1f],al
  41e72b:	dec    esi
  41e72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e72d:	mov    es,WORD PTR [edx-0x4a0e358e]
  41e733:	or     ah,bh
  41e735:	vphsubd xmm1,xmm0,XMMWORD PTR [ecx-0x2e]
  41e73b:	sysexit 
  41e73d:	pusha  
  41e73e:	imul   ecx,DWORD PTR [ebx+0x2],0xffffffdd
  41e742:	dec    ecx
  41e743:	jno    0x41e713
  41e745:	out    dx,eax
  41e746:	es (bad) 
  41e748:	sub    al,0x35
  41e74a:	add    BYTE PTR ds:0x44ef8d63,ch
  41e750:	sbb    DWORD PTR [ebx+0x39],0x79
  41e754:	adc    esp,edi
  41e756:	in     eax,0x15
  41e758:	pusha  
  41e759:	and    BYTE PTR [ecx-0x526b99c4],bh
  41e75f:	in     al,0x16
  41e761:	or     ch,BYTE PTR [esi-0x68cdaf94]
  41e767:	gs pop ecx
  41e769:	in     al,dx
  41e76a:	push   ebx
  41e76b:	add    eax,0x860ad5af
  41e770:	clc    
  41e771:	jl     0x41e74a
  41e773:	xchg   ecx,eax
  41e774:	out    dx,al
  41e775:	mov    eax,ds:0x8a824219
  41e77a:	iret   
  41e77b:	or     DWORD PTR [esi+0xea5f24f],esp
  41e781:	loop   0x41e780
  41e783:	inc    ebp
  41e784:	inc    edi
  41e785:	or     ah,BYTE PTR [ebx]
  41e787:	jg     0x41e768
  41e789:	jmp    FWORD PTR [eax]
  41e78b:	call   DWORD PTR [edx-0x23]
  41e78e:	ds mov ebp,0x100633f3
  41e794:	repnz inc esi
  41e796:	or     DWORD PTR [eax-0x46],edx
  41e799:	jecxz  0x41e7a2
  41e79b:	fld    DWORD PTR [edx]
  41e79d:	jns    0x41e763
  41e79f:	and    al,0x2d
  41e7a1:	call   0x2bb3d47a
  41e7a6:	xlat   BYTE PTR ds:[ebx]
  41e7a7:	jae    0x41e7ff
  41e7a9:	jae    0x41e7bf
  41e7ab:	daa    
  41e7ac:	pand   mm3,QWORD PTR [eax-0x4eabae8b]
  41e7b3:	push   ds
  41e7b4:	cli    
  41e7b5:	sub    DWORD PTR [ecx+0x6bbfe39f],eax
  41e7bb:	or     dh,ah
  41e7bd:	test   DWORD PTR [ecx+eiz*4-0x741da647],eax
  41e7c4:	das    
  41e7c5:	dec    DWORD PTR [esi+esi*8-0x5982e4ff]
  41e7cc:	mov    edx,0x93fc643f
  41e7d1:	(bad)  
  41e7d2:	or     BYTE PTR [edi-0x7c959041],dh
  41e7d8:	push   ebp
  41e7d9:	push   0xb9407368
  41e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7df:	cdq    
  41e7e0:	cli    
  41e7e1:	sbb    DWORD PTR [esi+0x48],0x28036085
  41e7e8:	mov    edi,0xd1a6cb90
  41e7ed:	add    BYTE PTR [edi],0x7a
  41e7f0:	stos   BYTE PTR es:[edi],al
  41e7f1:	lds    ebx,FWORD PTR [edx+0x1e238186]
  41e7f7:	ret    0x20b1
  41e7fa:	inc    edx
  41e7fb:	fcom   DWORD PTR [edi]
  41e7fd:	ficomp WORD PTR [edx+0x47]
  41e800:	fcmovu st,st(5)
  41e802:	ins    DWORD PTR es:[edi],dx
  41e803:	mov    ah,0x71
  41e805:	outs   dx,BYTE PTR ds:[esi]
  41e806:	mov    dl,0x3b
  41e808:	stos   BYTE PTR es:[edi],al
  41e809:	jo     0x41e860
  41e80b:	outs   dx,BYTE PTR ds:[esi]
  41e80c:	cs jp  0x41e7cd
  41e80f:	xchg   esp,eax
  41e810:	(bad)  
  41e811:	mov    bh,0x94
  41e813:	mov    ds:0x553eeddb,eax
  41e818:	add    BYTE PTR [edx+0x2012d585],al
  41e81e:	jge    0x41e866
  41e820:	and    al,0xfd
  41e822:	pop    fs
  41e824:	push   edx
  41e825:	mov    BYTE PTR [ecx-0x42],0x4c
  41e829:	xlat   BYTE PTR ds:[ebx]
  41e82a:	leave  
  41e82b:	jmp    0x32f9:0xd9d5b2a9
  41e832:	stos   BYTE PTR es:[edi],al
  41e833:	push   edi
  41e834:	sub    al,BYTE PTR [edx+0x33314be3]
  41e83a:	jl     0x41e812
  41e83c:	inc    ecx
  41e83d:	or     eax,0xf5c42248
  41e842:	cmp    BYTE PTR [ecx-0x3e67f896],0xed
  41e849:	hlt    
  41e84a:	sub    ecx,DWORD PTR [ebx-0x73ee5541]
  41e850:	mov    DWORD PTR [eax-0x1fd0b20d],ecx
  41e856:	popf   
  41e857:	mov    eax,ds:0xeaa4cc67
  41e85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e85d:	pop    esp
  41e85e:	or     eax,0xd3fdde57
  41e863:	mov    ah,0x86
  41e865:	call   0x3b990237
  41e86a:	sub    BYTE PTR [edx-0x4e961924],bl
  41e870:	cmp    DWORD PTR [edi-0x3b],eax
  41e873:	and    al,cl
  41e875:	push   0xc9f465d9
  41e87a:	add    BYTE PTR [esp+edx*1],ch
  41e87d:	jnp    0x41e8ec
  41e87f:	shl    DWORD PTR [ebp+ebx*1-0x75959781],1
  41e886:	jle    0x41e8f3
  41e888:	xchg   ebx,eax
  41e889:	adc    al,0xe3
  41e88b:	lds    ecx,FWORD PTR [ebx-0x53]
  41e88e:	fsubr  st,st(7)
  41e890:	push   ss
  41e891:	pusha  
  41e892:	mov    esp,0xa7ad6f91
  41e897:	lods   al,BYTE PTR ds:[esi]
  41e898:	or     eax,DWORD PTR ds:0x7c49b79a
  41e89e:	mov    eax,0x32c90da7
  41e8a3:	cmp    DWORD PTR [ecx+0x7],edi
  41e8a6:	cmp    DWORD PTR ss:[edi+edx*1-0x32],0x44
  41e8ac:	pop    esp
  41e8ad:	pop    edx
  41e8ae:	pushf  
  41e8af:	mov    edx,0x38cf4483
  41e8b4:	fs aaa 
  41e8b6:	lds    ecx,FWORD PTR [edx-0x65]
  41e8b9:	or     BYTE PTR [esi+0x16ad7211],cl
  41e8bf:	xlat   BYTE PTR ds:[ebx]
  41e8c0:	inc    esi
  41e8c1:	fdivr  st(6),st
  41e8c3:	sub    eax,0x8e917070
  41e8c8:	xchg   ebp,eax
  41e8c9:	cmp    DWORD PTR [edx+ebx*1-0x6e503912],ebp
  41e8d0:	xor    BYTE PTR [ebp+0x3d],dh
  41e8d3:	mov    eax,ds:0xe925cde8
  41e8d8:	call   0x2d7f:0x86d20097
  41e8df:	mov    ebx,0xe7d7524a
  41e8e4:	(bad)  
  41e8e5:	out    0x55,al
  41e8e7:	adc    al,0xc6
  41e8e9:	ins    DWORD PTR es:[edi],dx
  41e8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8eb:	leave  
  41e8ec:	loope  0x41e90f
  41e8ee:	fistp  DWORD PTR [ecx-0x70]
  41e8f1:	or     eax,0xb3f4dfda
  41e8f6:	in     eax,0xc4
  41e8f8:	push   ds
  41e8f9:	(bad)  
  41e8fa:	pop    esp
  41e8fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8fc:	dec    eax
  41e8fd:	ror    DWORD PTR [ebx+0x18],1
  41e900:	fld    QWORD PTR [edx-0x16]
  41e903:	clc    
  41e904:	xchg   ebx,eax
  41e905:	mov    bl,0x72
  41e907:	mov    eax,0x13187dbb
  41e90c:	in     eax,dx
  41e90d:	inc    ecx
  41e90e:	(bad)  
  41e90f:	jns    0x41e989
  41e911:	jl     0x41e92e
  41e913:	cli    
  41e914:	dec    esp
  41e915:	mov    dl,0xe2
  41e917:	pop    esp
  41e918:	xchg   ebp,eax
  41e919:	mov    ebx,0xc01327f
  41e91e:	jmp    0x41e92c
  41e920:	dec    ecx
  41e921:	xchg   DWORD PTR fs:[esi-0x4dcb2fbf],edx
  41e928:	mov    ch,0x9d
  41e92a:	popf   
  41e92b:	ror    bl,1
  41e92d:	arpl   WORD PTR [esi],bx
  41e92f:	cld    
  41e930:	fst    DWORD PTR [ecx+0x7d69b467]
  41e936:	xchg   DWORD PTR [edi+0x74caf720],edx
  41e93c:	ror    ah,0x56
  41e93f:	inc    edi
  41e940:	inc    edi
  41e941:	jbe    0x41e8e5
  41e943:	cmp    ecx,DWORD PTR [ebx-0x5e]
  41e946:	xchg   esi,eax
  41e947:	and    DWORD PTR [eax+0x63],esi
  41e94a:	jge    0x41e8fe
  41e94c:	bnd jnp 0x41e96e
  41e94f:	jle    0x41e921
  41e951:	mov    BYTE PTR [ebp+0x7a852c00],0x86
  41e958:	das    
  41e959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e95a:	or     BYTE PTR [ecx-0x3d23ce64],cl
  41e960:	leave  
  41e961:	push   eax
  41e962:	add    BYTE PTR [ecx-0x1d],cl
  41e965:	int3   
  41e966:	pop    edx
  41e967:	xor    dh,BYTE PTR [ebx+0x3ba923a]
  41e96d:	mov    ebp,0xb93f42e5
  41e972:	inc    edi
  41e973:	dec    ebp
  41e974:	(bad)  
  41e975:	jns    0x41e9d3
  41e977:	dec    edx
  41e978:	outs   dx,BYTE PTR ds:[esi]
  41e979:	retf   0x3be3
  41e97c:	jmp    0x8fdd2a22
  41e981:	adc    bl,ah
  41e983:	pop    edi
  41e984:	push   edi
  41e985:	xor    eax,0x201e28db
  41e98a:	(bad)  
  41e98b:	shl    DWORD PTR [edx+edi*4-0x29],1
  41e98f:	and    dl,BYTE PTR [esp+ebx*1-0x78605682]
  41e996:	mov    ebx,ds
  41e998:	inc    edi
  41e999:	xor    eax,DWORD PTR [ebp+eax*8-0x45e2d945]
  41e9a0:	adc    dl,BYTE PTR [edi-0x49]
  41e9a3:	sbb    ebx,DWORD PTR [eax]
  41e9a5:	jno    0x41e9d7
  41e9a7:	push   ebp
  41e9a8:	arpl   cx,dx
  41e9aa:	or     DWORD PTR [ecx],edi
  41e9ac:	jns    0x41e962
  41e9ae:	adc    al,0x45
  41e9b0:	loope  0x41e9af
  41e9b2:	cmc    
  41e9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9b4:	xchg   edi,esp
  41e9b6:	add    al,BYTE PTR [ebp+0x43]
  41e9b9:	mov    cl,0xe2
  41e9bb:	mov    al,ds:0xaa7cd588
  41e9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9c1:	sub    eax,DWORD PTR [edx-0x4c]
  41e9c4:	add    DWORD PTR [ecx+edx*1+0x161bb44b],0xfffffff4
  41e9cc:	sar    edi,1
  41e9ce:	mov    ah,0x81
  41e9d0:	dec    BYTE PTR [ebx+0x12]
  41e9d3:	call   0x75ed:0x9bd3f5e2
  41e9da:	out    0xc5,al
  41e9dc:	in     al,0x1
  41e9de:	shr    DWORD PTR [ecx+0x29d1fe87],0xb1
  41e9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e6:	jb     0x41e9e3
  41e9e8:	das    
  41e9e9:	imul   edi,DWORD PTR [edx*4+0x22ab0860],0x65
  41e9f1:	retf   0x99ab
  41e9f4:	jnp    0x41e97b
  41e9f6:	call   0x81b698f5
  41e9fb:	js     0x41ea18
  41e9fd:	ret    
  41e9fe:	mov    ch,BYTE PTR [ebx]
  41ea00:	gs push ss
  41ea02:	jns    0x41ea0b
  41ea04:	es in  al,dx
  41ea06:	std    
  41ea07:	pusha  
  41ea08:	mov    ebp,0xeadd4188
  41ea0d:	sahf   
  41ea0e:	pop    ebp
  41ea0f:	sbb    BYTE PTR cs:[edx-0x59d5b9e],dh
  41ea16:	mov    esp,DWORD PTR [edi+eax*4+0xd6cddc6]
  41ea1d:	lahf   
  41ea1e:	sbb    ah,BYTE PTR [edx]
  41ea20:	xlat   BYTE PTR ds:[ebx]
  41ea21:	mov    ch,0xdd
  41ea23:	jb     0x41e9fc
  41ea25:	int3   
  41ea26:	ins    DWORD PTR es:[edi],dx
  41ea27:	xor    eax,ebx
  41ea29:	mov    bh,0xc5
  41ea2b:	xor    bl,ah
  41ea2d:	stos   DWORD PTR es:[edi],eax
  41ea2e:	mov    ebp,ebp
  41ea30:	inc    edi
  41ea31:	pop    ebp
  41ea32:	mov    edi,0x5e03b19d
  41ea37:	mov    ds:0xed4e49a8,eax
  41ea3c:	je     0x41e9cb
  41ea3e:	push   esi
  41ea3f:	mov    WORD PTR [eax-0x42f05f81],es
  41ea45:	test   al,0xb7
  41ea47:	or     al,BYTE PTR ds:0xb96f72d8
  41ea4d:	clc    
  41ea4e:	repz repz push esp
  41ea51:	mov    dl,0xf2
  41ea53:	aad    0x9b
  41ea55:	cmp    eax,0xc973c4f4
  41ea5a:	mov    cl,0x43
  41ea5c:	fidivr WORD PTR [esi+0x58]
  41ea5f:	bound  ebx,QWORD PTR [eax+0x1c]
  41ea62:	aad    0x5c
  41ea64:	outs   dx,DWORD PTR ds:[esi]
  41ea65:	pop    ss
  41ea66:	pop    ecx
  41ea67:	xchg   ebx,eax
  41ea68:	sub    eax,edx
  41ea6a:	pop    esi
  41ea6b:	xor    esi,DWORD PTR [ebp+0x6e33bc74]
  41ea71:	xchg   edx,eax
  41ea72:	fs push ebx
  41ea74:	and    cl,BYTE PTR [edx-0x65]
  41ea77:	dec    edx
  41ea78:	and    ah,dl
  41ea7a:	sub    eax,0xe19bbe3b
  41ea7f:	out    dx,eax
  41ea80:	cdq    
  41ea81:	sbb    al,0x80
  41ea83:	sub    ecx,DWORD PTR [edi-0x58e31bcf]
  41ea89:	xor    al,0xdc
  41ea8b:	in     eax,0x1e
  41ea8d:	fbld   TBYTE PTR [ecx-0x76ec4ceb]
  41ea93:	jg     0x41eaa1
  41ea95:	retf   
  41ea96:	jo     0x41ea1e
  41ea98:	pushf  
  41ea99:	xor    dh,BYTE PTR [edi]
  41ea9b:	add    al,0xf6
  41ea9d:	stos   DWORD PTR es:[edi],eax
  41ea9e:	test   dh,0x25
  41eaa1:	mov    ah,0x76
  41eaa3:	fisttp QWORD PTR [esi]
  41eaa5:	mov    ebx,es
  41eaa7:	pop    ds
  41eaa8:	stos   BYTE PTR es:[edi],al
  41eaa9:	sub    edi,edx
  41eaab:	and    al,0x90
  41eaad:	cmp    DWORD PTR [eax],ecx
  41eaaf:	mov    ch,0x9a
  41eab1:	jp     0x41eae9
  41eab3:	mov    ecx,0x4538b943
  41eab8:	test   eax,0xe82d3dbc
  41eabd:	pushf  
  41eabe:	sub    al,0xb3
  41eac0:	dec    ebx
  41eac1:	cmc    
  41eac2:	mov    bh,0x86
  41eac4:	and    edi,DWORD PTR ds:0xbee00dde
  41eaca:	imul   BYTE PTR [ebx]
  41eacc:	not    ch
  41eace:	push   0x2b
  41ead0:	inc    esi
  41ead1:	mov    cl,0xae
  41ead3:	inc    eax
  41ead4:	data16 mov ds:0xbfa85b64,al
  41eada:	(bad)  
  41eadc:	jbe    0x41ea92
  41eade:	in     eax,0xd4
  41eae0:	inc    edi
  41eae1:	lahf   
  41eae2:	cli    
  41eae3:	add    dh,BYTE PTR [ebx-0x33c066ca]
  41eae9:	push   es
  41eaea:	pop    edx
  41eaeb:	jnp    0x41ea80
  41eaed:	inc    esp
  41eaee:	dec    esp
  41eaef:	cmp    al,0x7a
  41eaf1:	shl    dl,0xae
  41eaf4:	xchg   ecx,eax
  41eaf5:	(bad)  
  41eaf6:	(bad)  
  41eaf7:	call   0xe217:0xb2cd413f
  41eafe:	repnz adc BYTE PTR ds:0x7a9076fe,0xaa
  41eb06:	sub    esi,DWORD PTR ds:0x15ac1c27
  41eb0c:	or     DWORD PTR [ebx+0x1767f8a0],0xffffffa3
  41eb13:	hlt    
  41eb14:	int    0xa8
  41eb16:	sbb    esp,DWORD PTR [ebp+0xc]
  41eb19:	fld    st(3)
  41eb1b:	dec    esi
  41eb1c:	fldcw  WORD PTR [esi]
  41eb1e:	es jo  0x41eaee
  41eb21:	pop    ebx
  41eb22:	leave  
  41eb23:	out    0x41,al
  41eb25:	mov    edi,0x118cb23d
  41eb2a:	inc    ebx
  41eb2b:	jecxz  0x41eac0
  41eb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb2e:	ins    BYTE PTR es:[edi],dx
  41eb2f:	xchg   bl,bh
  41eb31:	mov    eax,edx
  41eb33:	pop    edi
  41eb34:	sbb    DWORD PTR [edx],edx
  41eb36:	jbe    0x41eae8
  41eb38:	popa   
  41eb39:	ret    
  41eb3a:	stos   DWORD PTR es:[edi],eax
  41eb3b:	out    0xba,eax
  41eb3d:	fadd   st(0),st
  41eb3f:	fidiv  WORD PTR [ebx+0x4d]
  41eb42:	sub    eax,0xbe6fec60
  41eb47:	fbstp  TBYTE PTR [ebx-0x516c9d4a]
  41eb4d:	lds    eax,FWORD PTR [eax-0x1b]
  41eb50:	or     edi,DWORD PTR ds:0x82fe5076
  41eb56:	test   eax,0x75771715
  41eb5b:	repnz push ebx
  41eb5d:	cmp    BYTE PTR [edx+0x6d],ch
  41eb60:	sbb    bh,bh
  41eb62:	or     eax,0xebeedf35
  41eb67:	push   ecx
  41eb68:	pop    eax
  41eb69:	ret    0xa5ea
  41eb6c:	in     al,dx
  41eb6d:	icebp  
  41eb6e:	or     bl,BYTE PTR [edi]
  41eb70:	lock mov ebx,0x60c4dce3
  41eb76:	sahf   
  41eb77:	adc    BYTE PTR [ecx-0x5],dh
  41eb7a:	loopne 0x41ebe1
  41eb7c:	pop    ecx
  41eb7d:	jae    0x41ebe8
  41eb7f:	es cmc 
  41eb81:	sbb    DWORD PTR [edx-0xe],edi
  41eb84:	dec    ecx
  41eb85:	dec    ebp
  41eb86:	sar    BYTE PTR [edx+0x3bb2322f],cl
  41eb8c:	ins    DWORD PTR es:[edi],dx
  41eb8d:	or     DWORD PTR [edi+ebp*8],0xe2f0b3a2
  41eb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb95:	scas   eax,DWORD PTR es:[edi]
  41eb96:	mov    esi,0x6dc00cb9
  41eb9b:	add    DWORD PTR [esi+0x2d30850e],ebp
  41eba1:	and    eax,0xdf92d586
  41eba6:	test   bl,0xc6
  41eba9:	je     0x41eb33
  41ebab:	lahf   
  41ebac:	xor    eax,0x3cd5a057
  41ebb1:	push   cs
  41ebb2:	pop    edx
  41ebb3:	fdivr  st,st(4)
  41ebb5:	dec    ebp
  41ebb6:	out    0x55,al
  41ebb8:	bound  ebx,QWORD PTR [ebx]
  41ebba:	add    eax,0xbda2155b
  41ebbf:	cmc    
  41ebc0:	rcr    DWORD PTR [eax+0x774f9160],1
  41ebc6:	out    0xb1,eax
  41ebc8:	jmp    0xc6da:0xd2ab605f
  41ebcf:	dec    eax
  41ebd0:	and    BYTE PTR [ecx],0x53
  41ebd3:	(bad)  
  41ebd5:	push   eax
  41ebd6:	test   eax,0x3af6f139
  41ebdb:	fild   DWORD PTR [eax]
  41ebdd:	sub    bl,BYTE PTR [edx-0x1240a94f]
  41ebe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe4:	xor    eax,0x928868f9
  41ebe9:	push   es
  41ebea:	and    ah,BYTE PTR [eax+0x6c]
  41ebed:	jo     0x41ec47
  41ebef:	rsqrtps xmm5,xmm2
  41ebf2:	loop   0x41eb89
  41ebf4:	clc    
  41ebf5:	dec    ebx
  41ebf6:	pop    ebp
  41ebf7:	mov    eax,0x7728f9ab
  41ebfc:	das    
  41ebfd:	aas    
  41ebfe:	mov    cl,0xf8
  41ec00:	mov    BYTE PTR [ebx+0x59],al
  41ec03:	push   0xc09b8c48
  41ec08:	(bad)  
  41ec09:	bound  eax,QWORD PTR [esi-0x145e0c4a]
  41ec0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec10:	or     ecx,DWORD PTR [esi+0x4057c946]
  41ec16:	shl    bl,0xd
  41ec19:	dec    esp
  41ec1a:	mov    dh,0x77
  41ec1c:	push   esp
  41ec1d:	std    
  41ec1e:	adc    eax,0xa37c4cb8
  41ec23:	jmp    DWORD PTR [ebp+0x3a4a6ccb]
  41ec29:	jb     0x41ec23
  41ec2b:	lods   al,BYTE PTR ds:[esi]
  41ec2c:	xchg   edi,eax
  41ec2d:	scas   al,BYTE PTR es:[edi]
  41ec2e:	push   0xb8d93ff7
  41ec33:	add    ch,cl
  41ec35:	xchg   esi,eax
  41ec36:	stc    
  41ec37:	dec    ebp
  41ec38:	cs pop edi
  41ec3a:	in     eax,dx
  41ec3b:	mov    dh,0x37
  41ec3d:	fucomp st(7)
  41ec3f:	mov    WORD PTR [eax-0x23],ds
  41ec42:	mov    cl,0x1a
  41ec44:	nop
  41ec45:	mov    bl,0x3c
  41ec47:	jbe    0x41ec2c
  41ec49:	mov    ch,0x11
  41ec4b:	ja     0x41ec10
  41ec4d:	sbb    dl,BYTE PTR [ecx-0x295eff78]
  41ec53:	and    al,0xe1
  41ec55:	shl    BYTE PTR [edi],cl
  41ec57:	scas   al,BYTE PTR es:[edi]
  41ec58:	pop    esi
  41ec59:	sbb    BYTE PTR [esp+0x63],0xe3
  41ec5e:	stc    
  41ec5f:	ds mov dh,0x94
  41ec62:	sub    al,0xbb
  41ec64:	fist   WORD PTR [ebp-0x25]
  41ec67:	add    eax,0x2815c26a
  41ec6c:	adc    BYTE PTR [edx+0x52],bl
  41ec6f:	push   0x2208757c
  41ec74:	test   al,0xc1
  41ec76:	lock out dx,al
  41ec78:	imul   ebp,DWORD PTR ds:0x7859e2f9,0x71
  41ec7f:	in     al,0x81
  41ec81:	cmp    DWORD PTR [eax-0x1d],ebp
  41ec84:	mov    al,0xbb
  41ec86:	xchg   DWORD PTR [edx],esp
  41ec88:	xor    esi,DWORD PTR [ebx+0x4bc4891e]
  41ec8e:	test   al,0xcf
  41ec90:	cmp    DWORD PTR ds:0x6c8e2b74,ecx
  41ec96:	push   ds
  41ec97:	repnz push ebx
  41ec99:	dec    ebx
  41ec9a:	mov    ah,0x9d
  41ec9c:	ins    BYTE PTR es:[edi],dx
  41ec9d:	pop    es
  41ec9e:	push   esp
  41ec9f:	or     al,0xb8
  41eca1:	imul   edi,DWORD PTR [edx+ecx*2+0x53],0xffffff9a
  41eca6:	pop    ebp
  41eca7:	pop    edx
  41eca8:	ins    BYTE PTR es:[edi],dx
  41eca9:	sub    edi,DWORD PTR [eax+0x23]
  41ecac:	mov    ds:0xb5713fe,al
  41ecb1:	test   BYTE PTR [ebp-0x45],al
  41ecb4:	in     al,0xed
  41ecb6:	push   edi
  41ecb7:	sbb    dl,0x66
  41ecba:	xor    ch,ch
  41ecbc:	test   DWORD PTR ds:0xdb68e7b1,ecx
  41ecc2:	xchg   ebx,eax
  41ecc3:	cmc    
  41ecc4:	ins    BYTE PTR es:[edi],dx
  41ecc5:	ja     0x41ec76
  41ecc7:	fcom   DWORD PTR [ebx+ecx*4]
  41ecca:	cli    
  41eccb:	dec    ebx
  41eccc:	fidivr DWORD PTR [ecx-0x1b]
  41eccf:	xor    BYTE PTR [ebx-0x14],0x8
  41ecd3:	je     0x41ecd7
  41ecd5:	mov    cl,0x9a
  41ecd7:	jo     0x41ecdb
  41ecd9:	mov    al,ds:0x94a75317
  41ecde:	pop    ecx
  41ecdf:	ds mov edx,0xacc03994
  41ece5:	mov    edx,0x39918869
  41ecea:	out    0x3e,al
  41ecec:	lods   al,BYTE PTR ds:[esi]
  41eced:	cmp    eax,0x511a47ed
  41ecf2:	loop   0x41ecca
  41ecf4:	sti    
  41ecf5:	pushf  
  41ecf6:	hlt    
  41ecf7:	(bad)  
  41ecf8:	mov    ebx,0x7710e8a9
  41ecfd:	push   0x493368f9
  41ed02:	mov    BYTE PTR [edi],bh
  41ed04:	cmc    
  41ed05:	out    0x1b,al
  41ed07:	add    al,0xd6
  41ed09:	push   0x8188856f
  41ed0e:	mov    ebx,0x92bc529f
  41ed13:	xor    ecx,ebp
  41ed15:	(bad)  
  41ed16:	xchg   edx,eax
  41ed17:	cmp    ch,bh
  41ed19:	jnp    0x41ecaa
  41ed1b:	mov    eax,ds:0xe6b8fbcc
  41ed20:	(bad)  
  41ed21:	xor    ebp,DWORD PTR [ebp+0x365f87d4]
  41ed27:	imul   esp,DWORD PTR [ecx],0xd02d1115
  41ed2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2e:	das    
  41ed2f:	inc    esi
  41ed30:	aaa    
  41ed31:	sub    DWORD PTR [ecx+0x443f6f15],ebx
  41ed37:	and    BYTE PTR [ecx-0x7d],cl
  41ed3a:	int3   
  41ed3b:	sbb    eax,edi
  41ed3d:	sub    DWORD PTR [ebp+0xe997566],edi
  41ed43:	xchg   esp,ecx
  41ed45:	stc    
  41ed46:	fucomp st(2)
  41ed48:	loop   0x41edaf
  41ed4a:	inc    ebx
  41ed4b:	cwde   
  41ed4c:	mov    WORD PTR [ebx+0x6],cs
  41ed4f:	and    al,0x2
  41ed51:	mov    esi,0x65264ccf
  41ed56:	ret    0x26be
  41ed59:	loope  0x41eda7
  41ed5b:	and    BYTE PTR [ebx],al
  41ed5d:	je     0x41edbd
  41ed5f:	loopne 0x41edc0
  41ed61:	jbe    0x41ed02
  41ed63:	(bad)  [edi-0x56deacbe]
  41ed69:	mov    BYTE PTR [ebx+0x6d],bl
  41ed6c:	dec    edx
  41ed6d:	xchg   ecx,eax
  41ed6e:	fdivrp st(1),st
  41ed70:	cli    
  41ed71:	sbb    al,0x16
  41ed73:	aad    0xa8
  41ed75:	in     eax,0x18
  41ed77:	dec    edx
  41ed78:	push   ds
  41ed79:	(bad)  
  41ed7a:	mov    ds:0x23c063e2,eax
  41ed7f:	popa   
  41ed80:	mov    dl,0x34
  41ed82:	push   edx
  41ed83:	mov    ebp,?
  41ed85:	arpl   WORD PTR [edi],dx
  41ed87:	xchg   ebx,eax
  41ed88:	push   cs
  41ed89:	lods   eax,DWORD PTR ds:[esi]
  41ed8a:	cwde   
  41ed8b:	mov    al,ds:0x88d20215
  41ed90:	pop    esi
  41ed91:	sahf   
  41ed92:	cmc    
  41ed93:	fdivr  QWORD PTR [edi-0xfc51030]
  41ed99:	push   ecx
  41ed9a:	leave  
  41ed9b:	sbb    BYTE PTR ds:[esi+edi*4-0x78344949],dl
  41eda3:	out    dx,eax
  41eda4:	add    eax,0xa97704e5
  41eda9:	mov    ds:0x38b49051,al
  41edae:	cld    
  41edaf:	xor    eax,0xc727a6bb
  41edb4:	aad    0x4c
  41edb6:	pop    esi
  41edb7:	arpl   cx,si
  41edb9:	ss hlt 
  41edbb:	or     eax,0x5c254b6f
  41edc0:	dec    ebx
  41edc1:	mov    ecx,0x1077959c
  41edc6:	clc    
  41edc7:	out    0xf8,al
  41edc9:	int    0x61
  41edcb:	fnstsw WORD PTR [ebx-0x4aef6a3f]
  41edd1:	inc    ecx
  41edd2:	mov    cl,0x44
  41edd4:	push   cs
  41edd5:	push   eax
  41edd6:	js     0x41edeb
  41edd8:	mov    esi,0x9b18273d
  41eddd:	(bad)  
  41edde:	mov    edi,0x97127e51
  41ede3:	test   eax,0x6026e20e
  41ede8:	cmp    eax,0x6a929c30
  41eded:	pop    edi
  41edee:	or     BYTE PTR [edi+ebp*2+0x6b277dc],al
  41edf5:	retf   0xe2d7
  41edf8:	mov    cs,WORD PTR [eax]
  41edfa:	(bad)  
  41edfb:	and    eax,0xc1386c42
  41ee00:	push   eax
  41ee01:	iret   
  41ee02:	inc    esi
  41ee03:	out    dx,al
  41ee04:	shr    al,0x42
  41ee07:	mov    ds:0x46af7105,eax
  41ee0c:	out    0xfb,al
  41ee0e:	imul   ebx,esi,0xffffff8f
  41ee11:	outs   dx,DWORD PTR ds:[esi]
  41ee12:	les    ebx,FWORD PTR fs:[edx+0x58]
  41ee16:	repnz xor bl,BYTE PTR [ecx]
  41ee19:	call   0x5e06:0x8bd2ff19
  41ee20:	arpl   WORD PTR [edi],bx
  41ee22:	aaa    
  41ee23:	mov    dl,0xd7
  41ee25:	inc    esi
  41ee26:	and    eax,0xedc34ff1
  41ee2b:	push   cs
  41ee2c:	and    al,0x12
  41ee2e:	or     edx,DWORD PTR [edi]
  41ee30:	jo     0x41ee15
  41ee32:	or     al,0xab
  41ee34:	xchg   esp,eax
  41ee35:	mov    bh,BYTE PTR [esi-0x47c239f8]
  41ee3b:	cwde   
  41ee3c:	out    dx,eax
  41ee3d:	mov    WORD PTR [ecx],ds
  41ee3f:	adc    DWORD PTR [esi-0x4b44c61b],esi
  41ee45:	(bad)  
  41ee46:	outs   dx,DWORD PTR ds:[esi]
  41ee47:	sahf   
  41ee48:	jae    0x41eeb5
  41ee4a:	lock sub eax,0xcbe57cbb
  41ee50:	repnz mov esi,0x1337e57c
  41ee56:	popf   
  41ee57:	jo     0x8be2be76
  41ee5d:	pop    ebx
  41ee5e:	cli    
  41ee5f:	sub    al,0x0
  41ee61:	dec    ebx
  41ee62:	pop    esp
  41ee63:	mov    esp,0xcbf64ec3
  41ee68:	xor    eax,DWORD PTR [edi-0x2286c2ad]
  41ee6e:	xchg   esp,eax
  41ee6f:	mov    cl,0x1c
  41ee71:	adc    al,BYTE PTR [edx-0x52]
  41ee74:	pop    ss
  41ee75:	(bad)  
  41ee77:	inc    edx
  41ee78:	xchg   ebp,eax
  41ee79:	and    al,0x20
  41ee7b:	pop    edi
  41ee7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee7d:	(bad)  
  41ee7e:	scas   eax,DWORD PTR es:[edi]
  41ee7f:	mov    ds:0xfab68972,al
  41ee84:	jbe    0x41ee78
  41ee86:	(bad)  
  41ee87:	pop    ebx
  41ee88:	xor    eax,0xe86b7826
  41ee8e:	stos   DWORD PTR es:[edi],eax
  41ee8f:	(bad)
  41ee92:	gs sub eax,0xe0c8c444
  41ee98:	call   FWORD PTR [ecx]
  41ee9a:	aas    
  41ee9b:	and    BYTE PTR [ebx+0x11301dff],al
  41eea1:	cmp    eax,0x40eab92c
  41eea6:	shl    esi,1
  41eea8:	sbb    eax,DWORD PTR [ecx+0x4]
  41eeab:	clc    
  41eeac:	xchg   DWORD PTR [esi+0x6f467057],esp
  41eeb2:	loopne 0x41ee36
  41eeb4:	mov    ecx,0xd78b0a6a
  41eeb9:	cwde   
  41eeba:	stos   DWORD PTR es:[edi],eax
  41eebb:	add    BYTE PTR [eax+0x5b5d3175],ch
  41eec1:	and    eax,0xac8a3776
  41eec6:	mov    bl,0x49
  41eec8:	mov    dh,0x4a
  41eeca:	in     eax,dx
  41eecb:	sub    ebp,DWORD PTR ds:[edx+0x681f0c42]
  41eed2:	adc    ch,BYTE PTR ds:0x14fb5573
  41eed8:	push   es
  41eed9:	in     al,dx
  41eeda:	aad    0xdd
  41eedc:	fdivr  QWORD PTR [eax-0x37]
  41eedf:	gs pop ds
  41eee1:	cs scas eax,DWORD PTR es:[edi]
  41eee3:	or     bl,BYTE PTR [edx+edi*4-0x17122dd1]
  41eeea:	mov    bl,0x7b
  41eeec:	in     eax,dx
  41eeed:	bound  ebp,QWORD PTR [ecx]
  41eeef:	cmp    BYTE PTR [ebx],cl
  41eef1:	dec    edi
  41eef2:	push   edi
  41eef3:	dec    BYTE PTR [esi+esi*1]
  41eef6:	fdiv   QWORD PTR [ebp+0x6074c1d8]
  41eefc:	pop    esi
  41eefd:	pop    esi
  41eefe:	inc    esp
  41eeff:	pop    ecx
  41ef00:	imul   ebp,edi,0x46a03b28
  41ef06:	adc    DWORD PTR [ebx-0x9ea562a],0x1141a29d
  41ef10:	pop    edi
  41ef11:	lock int3 
  41ef13:	imul   edx,DWORD PTR [edx+eax*1+0x61f8419e],0x38c433a3
  41ef1e:	xchg   DWORD PTR [ecx-0x54581304],eax
  41ef24:	xchg   edx,eax
  41ef25:	test   DWORD PTR [esi],eax
  41ef27:	bswap  ecx
  41ef29:	aaa    
  41ef2a:	sbb    edx,DWORD PTR fs:[eax]
  41ef2d:	mov    edx,0xeb73d031
  41ef32:	pusha  
  41ef33:	sub    edi,ecx
  41ef35:	ret    
  41ef36:	mov    bl,0xbd
  41ef38:	add    eax,0x2087becf
  41ef3d:	es leave 
  41ef3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef40:	rol    DWORD PTR [ecx-0x4e],cl
  41ef43:	sbb    eax,0x3aaf49d5
  41ef48:	(bad)  
  41ef49:	sub    al,0x35
  41ef4b:	mov    al,ds:0xaa65a476
  41ef50:	sub    ebx,DWORD PTR [edx+0x72]
  41ef53:	dec    edx
  41ef54:	jle    0x41eef9
  41ef56:	push   edi
  41ef57:	hlt    
  41ef58:	das    
  41ef59:	loop   0x41ef71
  41ef5b:	stos   BYTE PTR es:[edi],al
  41ef5c:	pop    esp
  41ef5d:	add    al,0x2
  41ef5f:	in     al,0xbc
  41ef61:	push   0xffffff90
  41ef63:	cmp    al,0x74
  41ef65:	cmp    eax,0x847eb395
  41ef6a:	dec    ebx
  41ef6b:	or     al,0xc2
  41ef6d:	ins    BYTE PTR es:[edi],dx
  41ef6e:	jmp    0x41efea
  41ef70:	adc    bl,BYTE PTR [ebx+0x69]
  41ef73:	outs   dx,DWORD PTR ds:[esi]
  41ef74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef75:	sub    dl,BYTE PTR [eax-0x62]
  41ef78:	outs   dx,BYTE PTR ds:[esi]
  41ef79:	xchg   bh,bl
  41ef7b:	mov    esp,0xe82acbcb
  41ef80:	fdiv   QWORD PTR ds:[ebx-0x5c]
  41ef84:	test   DWORD PTR [eax],ebx
  41ef86:	cs ret 0x39c0
  41ef8a:	xchg   ebx,edi
  41ef8c:	sub    eax,DWORD PTR [ecx+0x4ca0dd56]
  41ef92:	lock ss pop es
  41ef95:	xor    al,0xf5
  41ef97:	pop    ebp
  41ef98:	in     al,dx
  41ef99:	xor    BYTE PTR [edx-0x1df99619],0x9d
  41efa0:	outs   dx,DWORD PTR ds:[esi]
  41efa1:	jmp    0xd2ae54ce
  41efa6:	retf   0x4faf
  41efa9:	test   cl,dh
  41efab:	or     dh,bl
  41efad:	mov    ebp,0x3b45256a
  41efb2:	jno    0x41f02f
  41efb4:	in     al,0xc3
  41efb6:	or     BYTE PTR [eax-0x56ce6a6a],ch
  41efbc:	jp     0x41f015
  41efbe:	and    edi,DWORD PTR [edi+0x60]
  41efc1:	push   ebp
  41efc2:	dec    BYTE PTR gs:0x680c7a50
  41efc9:	stos   BYTE PTR es:[edi],al
  41efca:	out    0xfc,al
  41efcc:	mov    ds:0xe4c7286c,al
  41efd1:	fsubr  st(5),st
  41efd3:	mov    ebx,0xda203884
  41efd8:	inc    eax
  41efd9:	ins    DWORD PTR es:[edi],dx
  41efda:	jbe    0x41f020
  41efdc:	mov    edx,0x8a08128f
  41efe1:	xor    BYTE PTR [ecx+0x35],bl
  41efe4:	aas    
  41efe5:	iret   
  41efe6:	mov    ch,0xdd
  41efe8:	in     eax,dx
  41efe9:	retf   0x9875
  41efec:	retf   0xcfed
  41efef:	jg     0x41efe5
  41eff1:	mov    esi,0x8b5299c0
  41eff6:	ins    DWORD PTR es:[edi],dx
  41eff7:	cli    
  41eff8:	jnp    0x41efee
  41effa:	and    al,0xf1
  41effc:	jbe    0x41efce
  41effe:	ror    ecx,0xd5
  41f001:	in     eax,0x43
  41f003:	int3   
  41f004:	inc    esp
  41f005:	ins    DWORD PTR es:[edi],dx
  41f006:	retf   0xbc48
  41f009:	cmp    ecx,esp
  41f00b:	pop    es
  41f00c:	rol    DWORD PTR [edx-0x57],1
  41f00f:	sub    edi,edi
  41f011:	stc    
  41f012:	push   ds
  41f013:	xchg   ebp,eax
  41f014:	std    
  41f015:	push   cs
  41f016:	xor    ebp,DWORD PTR [edi]
  41f018:	call   0x90e3dd65
  41f01d:	xchg   edi,edi
  41f01f:	icebp  
  41f020:	push   ecx
  41f021:	clc    
  41f022:	cmp    DWORD PTR [eax-0x1e],ebx
  41f025:	adc    BYTE PTR [eax],bl
  41f027:	int    0xb9
  41f029:	shr    edx,0xa0
  41f02c:	xor    eax,0x5454d8b5
  41f031:	outs   dx,BYTE PTR ds:[esi]
  41f032:	inc    esp
  41f033:	(bad)  
  41f034:	push   edx
  41f035:	push   esi
  41f036:	(bad)  
  41f037:	mov    ch,0x51
  41f039:	xor    ecx,0x169aa5b6
  41f03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f040:	cmp    cl,ah
  41f042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f043:	je     0x41f0a6
  41f045:	mov    ah,0x1b
  41f047:	jno    0x41f004
  41f049:	sbb    eax,0xfaf1c830
  41f04e:	push   eax
  41f04f:	cmp    eax,0x5a589847
  41f054:	mov    ebx,0x49af3aa5
  41f059:	push   ds
  41f05a:	pop    eax
  41f05b:	jnp    0x41f07e
  41f05d:	jge    0x41f0d9
  41f05f:	mov    ds:0xce07c691,eax
  41f064:	add    edi,DWORD PTR [ebp-0x35]
  41f067:	sahf   
  41f068:	jbe    0x41efef
  41f06a:	jne    0x41f011
  41f06c:	mov    cl,0xe0
  41f06e:	lods   eax,DWORD PTR ds:[esi]
  41f06f:	fcomp  QWORD PTR fs:[eax]
  41f072:	cmp    eax,DWORD PTR [ebx]
  41f074:	iret   
  41f075:	sbb    eax,esp
  41f077:	ja     0x41f094
  41f079:	mov    bl,BYTE PTR [esi+0x73]
  41f07c:	add    BYTE PTR fs:[eax-0x1d136d19],bl
  41f083:	ja     0x41f0e2
  41f085:	cwde   
  41f086:	in     eax,dx
  41f087:	inc    ebp
  41f088:	rcr    bl,0xee
  41f08b:	inc    eax
  41f08c:	repz (bad) 
  41f08e:	adc    eax,DWORD PTR [eax-0x16ad2fe8]
  41f094:	xchg   esi,eax
  41f095:	ficom  WORD PTR [edi]
  41f097:	lea    edx,[edx+0x51]
  41f09a:	xchg   ebp,eax
  41f09b:	inc    ebx
  41f09c:	sub    cl,BYTE PTR [ebx+0x75]
  41f09f:	cmp    ecx,esi
  41f0a1:	add    BYTE PTR ds:0x69c056ba,dl
  41f0a7:	and    BYTE PTR [ebx-0x3eaadd03],dl
  41f0ad:	sbb    BYTE PTR [ebp-0x4406db8c],bl
  41f0b3:	dec    edi
  41f0b4:	outs   dx,DWORD PTR ds:[esi]
  41f0b5:	sbb    DWORD PTR [edi+0x27],edx
  41f0b8:	js     0x41f0b1
  41f0ba:	aam    0x58
  41f0bc:	pop    ebx
  41f0bd:	dec    BYTE PTR [eax]
  41f0bf:	mov    fs,WORD PTR [edi-0x61]
  41f0c2:	jmp    0x66207fca
  41f0c7:	outs   dx,DWORD PTR ds:[esi]
  41f0c8:	push   edi
  41f0c9:	and    al,0x79
  41f0cb:	mov    al,0x9c
  41f0cd:	sub    DWORD PTR gs:[edi+0x7439de4a],ebx
  41f0d4:	dec    edi
  41f0d5:	mov    ecx,0xb3d0e3e6
  41f0da:	mov    cl,0xaf
  41f0dc:	cmc    
  41f0dd:	xor    cl,dh
  41f0df:	cdq    
  41f0e0:	inc    ebx
  41f0e1:	jo     0x41f0cd
  41f0e3:	fwait
  41f0e4:	push   eax
  41f0e5:	fwait
  41f0e6:	xor    ebx,esp
  41f0e8:	jae    0x41f14f
  41f0ea:	lods   eax,DWORD PTR ds:[esi]
  41f0eb:	fwait
  41f0ec:	cmp    al,0xfc
  41f0ee:	sbb    eax,0x420f1a7c
  41f0f3:	iret   
  41f0f4:	mov    al,0xc9
  41f0f6:	jno    0x41f083
  41f0f8:	mov    ecx,0x5200e2c5
  41f0fd:	dec    ebp
  41f0fe:	mov    dl,0x1b
  41f100:	aas    
  41f101:	lock sbb DWORD PTR [edi-0x42],edx
  41f105:	repnz out 0x6,al
  41f108:	mov    al,0xec
  41f10a:	xor    eax,DWORD PTR [ebp+0x5c]
  41f10d:	xchg   DWORD PTR [eax-0x48],esi
  41f110:	fwait
  41f111:	cmp    DWORD PTR [eax+edx*2+0x1c],0x706061f0
  41f119:	ficom  WORD PTR [edx+0x537e350b]
  41f11f:	loopne 0x41f0a5
  41f121:	sbb    BYTE PTR [ebp+0x2bb74824],al
  41f127:	inc    ebp
  41f128:	stc    
  41f129:	cdq    
  41f12a:	rcr    DWORD PTR [ebx],0xf2
  41f12d:	and    bl,0x13
  41f130:	or     dh,BYTE PTR [ebp+0x3b]
  41f133:	mov    bh,0x29
  41f135:	jmp    0x41f0fa
  41f137:	iret   
  41f138:	fisubr DWORD PTR [edx+0x2952aef4]
  41f13e:	and    edi,DWORD PTR [edx-0x4bff1fa9]
  41f144:	shr    BYTE PTR [edi],0x99
  41f147:	sub    eax,0x78c3a5c8
  41f14c:	pusha  
  41f14d:	aad    0x68
  41f14f:	cmp    esi,DWORD PTR [ebx+0x5bd6e164]
  41f155:	outs   dx,DWORD PTR ds:[esi]
  41f156:	or     BYTE PTR [eax-0x13],cl
  41f159:	mov    ebx,0x457bbef
  41f15e:	into   
  41f15f:	sbb    edx,DWORD PTR [esi-0x526a77c]
  41f165:	cmc    
  41f166:	xor    bh,ch
  41f168:	mov    esi,0x324ed6ad
  41f16d:	call   0x3471:0xd9fea0af
  41f174:	push   ecx
  41f175:	sar    DWORD PTR [ebp+0x37],0x1c
  41f179:	jmp    0x41f15d
  41f17b:	adc    BYTE PTR [eax-0xdbd878d],ah
  41f181:	mov    ch,0xd
  41f183:	mov    ds:0xf9a71c4d,al
  41f188:	loope  0x41f159
  41f18a:	cdq    
  41f18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f18c:	mov    bh,0x90
  41f18e:	mov    esp,0x545bf41a
  41f193:	iret   
  41f194:	test   al,0x93
  41f196:	mov    ds:0x7bc23cab,al
  41f19b:	mov    ds:0x1229b42f,eax
  41f1a0:	repz idiv ebx
  41f1a3:	sar    BYTE PTR [esi+0x52],cl
  41f1a6:	jnp    0x41f1a2
  41f1a8:	mov    cl,0xa5
  41f1aa:	adc    edx,ecx
  41f1ac:	xor    eax,DWORD PTR [ecx-0x10]
  41f1af:	sbb    esi,DWORD PTR [edi+0x205cb790]
  41f1b5:	mov    ch,0x60
  41f1b7:	cwde   
  41f1b8:	xchg   ebx,eax
  41f1b9:	ret    
  41f1ba:	mov    al,0x66
  41f1bc:	xor    BYTE PTR [ebp-0x2a],al
  41f1bf:	mov    BYTE PTR [edi],dh
  41f1c1:	cmp    BYTE PTR [ebp+0x29df81b6],al
  41f1c7:	adc    esp,DWORD PTR [ebp+0x29165916]
  41f1cd:	int    0xd6
  41f1cf:	daa    
  41f1d0:	jb     0x41f1ef
  41f1d2:	inc    ebx
  41f1d3:	adc    esi,ebx
  41f1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d6:	mov    ch,0xfc
  41f1d8:	push   ds
  41f1d9:	test   BYTE PTR [esi-0x19],ah
  41f1dc:	dec    ebx
  41f1dd:	mov    gs,WORD PTR [ecx]
  41f1df:	in     eax,dx
  41f1e0:	out    0x56,eax
  41f1e2:	push   esp
  41f1e3:	sti    
  41f1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e5:	outs   dx,DWORD PTR ds:[esi]
  41f1e6:	mov    edx,DWORD PTR [eax]
  41f1e8:	xchg   BYTE PTR [esi+0x1ddd693b],bl
  41f1ee:	js     0x41f173
  41f1f0:	xchg   ecx,eax
  41f1f1:	xchg   DWORD PTR ds:0xe9ccfa2b,ecx
  41f1f7:	or     al,BYTE PTR [eax-0x7006d3f8]
  41f1fd:	jnp    0x41f212
  41f1ff:	cwde   
  41f200:	xchg   esi,eax
  41f201:	sbb    al,BYTE PTR [ecx-0x45b1e86d]
  41f207:	stc    
  41f208:	ficom  DWORD PTR [esi-0x1ce319f8]
  41f20e:	sub    al,0x8d
  41f210:	or     ebp,eax
  41f212:	mov    ?,WORD PTR [eax-0x4e]
  41f215:	lods   eax,DWORD PTR ds:[esi]
  41f216:	or     cl,BYTE PTR [esi+edi*1]
  41f219:	lea    edx,[ebp+0x61]
  41f21c:	mov    DWORD PTR [ebp+edx*4+0x4fac6c1e],ecx
  41f223:	lods   eax,DWORD PTR ds:[esi]
  41f224:	sbb    eax,0xa792bdf0
  41f229:	sbb    BYTE PTR [ebp+0x754881d2],cl
  41f22f:	inc    ebx
  41f230:	(bad)  
  41f231:	int    0x6e
  41f233:	(bad)
  41f236:	mov    ebp,0xd4ae3eb4
  41f23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23c:	jmp    FWORD PTR [ecx+0x6ccc89f6]
  41f242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f243:	add    esp,DWORD PTR [ebx]
  41f245:	nop
  41f246:	sti    
  41f247:	jbe    0x41f22c
  41f249:	ror    BYTE PTR [ecx],0xba
  41f24c:	push   eax
  41f24d:	aaa    
  41f24e:	or     esp,edx
  41f250:	jmp    0x41f2bd
  41f252:	and    DWORD PTR [ecx],0x73
  41f255:	xlat   BYTE PTR ds:[ebx]
  41f256:	or     eax,DWORD PTR [ebx-0x9]
  41f259:	xchg   esi,eax
  41f25a:	mov    ecx,0x4a2e1588
  41f25f:	push   ebx
  41f260:	je     0x41f243
  41f262:	imul   esi,DWORD PTR [esp+ebx*2+0xd],0x1a
  41f267:	out    dx,al
  41f268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f269:	jle    0x41f2bc
  41f26b:	lods   al,BYTE PTR ds:[esi]
  41f26c:	bound  esp,QWORD PTR [eax]
  41f26e:	mov    ebp,0x37fc5c5b
  41f273:	sbb    DWORD PTR [esi+0x969cc5b],ecx
  41f279:	cmp    ah,BYTE PTR [edx]
  41f27b:	mov    ebp,0xce61f0f5
  41f280:	das    
  41f281:	adc    al,0xbc
  41f283:	test   BYTE PTR cs:[esi],0x3
  41f287:	mov    ds:0xb0acc754,al
  41f28c:	push   ebx
  41f28d:	fbld   TBYTE PTR [esi+ebp*4+0x7b778f9a]
  41f294:	or     DWORD PTR [eax-0x77e3b8a4],ecx
  41f29a:	xchg   esi,eax
  41f29b:	jne    0x41f220
  41f29d:	sbb    ebx,DWORD PTR [ebp-0x3d]
  41f2a0:	mov    edx,DWORD PTR [edi-0x7411aca5]
  41f2a6:	dec    edi
  41f2a7:	pusha  
  41f2a8:	cmp    al,0xbd
  41f2aa:	in     eax,0x56
  41f2ac:	cmp    al,0x9e
  41f2ae:	jmp    0x41f2de
  41f2b0:	add    ebp,DWORD PTR [ebx-0xf69b0e4]
  41f2b6:	aaa    
  41f2b7:	std    
  41f2b8:	rol    bl,0x57
  41f2bb:	mov    al,ds:0x39f3accc
  41f2c0:	add    DWORD PTR [eax+0xc],edx
  41f2c3:	jl     0x41f25f
  41f2c5:	cmc    
  41f2c6:	not    cl
  41f2c8:	test   eax,0x1d541118
  41f2cd:	or     BYTE PTR ds:0xcb861e62,bl
  41f2d3:	cmc    
  41f2d4:	sub    ebx,DWORD PTR [ebx-0x35851d8e]
  41f2da:	mov    cl,0x44
  41f2dc:	pop    ebx
  41f2dd:	xchg   ecx,eax
  41f2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2df:	inc    ebp
  41f2e0:	jbe    0x41f298
  41f2e2:	aam    0x3c
  41f2e4:	jns    0x41f2f9
  41f2e6:	jp     0x41f278
  41f2e8:	pop    es
  41f2e9:	outs   dx,DWORD PTR ds:[esi]
  41f2ea:	xchg   DWORD PTR [eax+0x70],eax
  41f2ed:	inc    esp
  41f2ee:	pop    es
  41f2ef:	xchg   esi,eax
  41f2f0:	sbb    edx,ebx
  41f2f2:	(bad)  
  41f2f4:	cld    
  41f2f5:	test   al,0x36
  41f2f7:	shl    DWORD PTR [esi],0x3b
  41f2fa:	xchg   esi,eax
  41f2fb:	es popa 
  41f2fd:	or     DWORD PTR [ecx],edi
  41f2ff:	rol    dl,cl
  41f301:	adc    bl,cl
  41f303:	or     DWORD PTR [esi],ebp
  41f305:	dec    ecx
  41f306:	xor    esi,ecx
  41f308:	lock inc eax
  41f30a:	repz sub DWORD PTR [edi],ebx
  41f30d:	xlat   BYTE PTR ds:[ebx]
  41f30e:	aam    0xd9
  41f310:	or     BYTE PTR [ebx+0x7cee95d0],dh
  41f316:	jnp    0x41f310
  41f318:	pop    ebp
  41f319:	mov    es,WORD PTR [eax]
  41f31b:	fsubr  DWORD PTR [ebx+0x4]
  41f31e:	mov    ds:0xbc82aa80,eax
  41f323:	shl    BYTE PTR [ebx-0x644bb248],1
  41f329:	fs (bad) 
  41f32b:	fs mov ebx,0x278a1b38
  41f331:	jmp    0x41f34d
  41f333:	mov    al,0x30
  41f335:	adc    ch,bh
  41f337:	(bad)  
  41f338:	push   ecx
  41f339:	jp     0x41f3aa
  41f33b:	aas    
  41f33c:	xor    cl,dh
  41f33e:	iret   
  41f33f:	addr16 pusha 
  41f341:	pop    ebp
  41f342:	retf   
  41f343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f344:	nop
  41f345:	ds dec edx
  41f347:	dec    edi
  41f349:	es inc ebx
  41f34b:	and    DWORD PTR ds:0x8c212967,ecx
  41f351:	scas   eax,DWORD PTR es:[edi]
  41f352:	les    ebx,FWORD PTR [edi]
  41f354:	cmp    edi,edx
  41f356:	inc    edx
  41f357:	inc    esp
  41f358:	xchg   BYTE PTR [edx+0x5a],bl
  41f35b:	xchg   DWORD PTR [edi-0x19],ecx
  41f35e:	ins    DWORD PTR es:[edi],dx
  41f35f:	icebp  
  41f360:	cmc    
  41f361:	and    BYTE PTR [eax-0xb],al
  41f364:	jno    0x41f329
  41f366:	ins    DWORD PTR es:[edi],dx
  41f367:	rol    BYTE PTR [eax],0x1
  41f36a:	inc    ebp
  41f36b:	data16 and BYTE PTR [ecx],bl
  41f36e:	push   ecx
  41f36f:	inc    edx
  41f370:	mov    ds:0xaacb60f,eax
  41f375:	mov    fs,WORD PTR [ecx+0x5612da1b]
  41f37b:	stc    
  41f37c:	std    
  41f37d:	jecxz  0x41f3c3
  41f37f:	mov    esi,0x2fcd703f
  41f384:	jo     0x41f30d
  41f386:	fwait
  41f387:	rol    DWORD PTR [ebx+ebp*1-0x465a6b08],cl
  41f38e:	push   ds
  41f38f:	cld    
  41f390:	fcomp  DWORD PTR [eax+0x5ceb1142]
  41f396:	imul   DWORD PTR [eax]
  41f398:	push   edi
  41f399:	call   0x7dac4e81
  41f39e:	push   0xffffff86
  41f3a0:	mov    al,ds:0xb16813e7
  41f3a5:	adc    esi,DWORD PTR [eax+0x7a]
  41f3a8:	add    eax,edi
  41f3aa:	imul   BYTE PTR [edi+0x275faf6d]
  41f3b0:	push   es
  41f3b1:	arpl   WORD PTR ds:0x85a538d,cx
  41f3b7:	pop    ss
  41f3b8:	repz fistp DWORD PTR [ecx]
  41f3bb:	sub    BYTE PTR [ecx+esi*4-0x56],ch
  41f3bf:	ret    0x41f8
  41f3c2:	mov    al,0xee
  41f3c4:	adc    edx,DWORD PTR ds:0x42360b3f
  41f3ca:	fisubr WORD PTR [esi-0x6a2636bb]
  41f3d0:	push   ebp
  41f3d1:	sub    DWORD PTR [esi],0x302d24c9
  41f3d7:	or     DWORD PTR [esi],esp
  41f3d9:	xchg   ecx,eax
  41f3da:	sub    eax,0x98a89d84
  41f3df:	xor    ecx,edx
  41f3e1:	mov    eax,0x86e94514
  41f3e6:	ja     0x41f3d3
  41f3e8:	inc    edi
  41f3e9:	inc    eax
  41f3ea:	sub    ebp,DWORD PTR [esi+0x679714b4]
  41f3f0:	fst    DWORD PTR [eax-0x3bc39657]
  41f3f6:	daa    
  41f3f7:	adc    edx,edi
  41f3f9:	and    eax,0x15786af0
  41f3fe:	rol    BYTE PTR [ebp+0x9af453b],cl
  41f404:	mov    eax,DWORD PTR [eax]
  41f406:	push   cs
  41f407:	rcl    dl,cl
  41f409:	mov    DWORD PTR [ecx+eiz*8+0x30],ecx
  41f40d:	je     0x41f3a9
  41f40f:	(bad)  
  41f411:	push   cs
  41f412:	fimul  WORD PTR [ebx-0x5c0db671]
  41f418:	lds    esi,FWORD PTR [ebp+0x349ca9b0]
  41f41e:	popa   
  41f41f:	ins    DWORD PTR es:[edi],dx
  41f420:	dec    eax
  41f421:	jno    0x41f3a8
  41f423:	or     DWORD PTR ds:0x552719f4,esi
  41f429:	push   si
  41f42b:	imul   sp,WORD PTR [ebp-0x566a4dc9],0x7a
  41f433:	mov    ebx,0xf4a960ba
  41f438:	std    
  41f439:	pop    esp
  41f43a:	rol    DWORD PTR [eax+edi*4+0x60dde689],1
  41f441:	cmp    dh,BYTE PTR [ecx+0x7a]
  41f444:	xchg   esp,eax
  41f445:	std    
  41f446:	push   cs
  41f447:	inc    ebp
  41f448:	mov    DWORD PTR [edx],ebx
  41f44a:	or     ebx,DWORD PTR [edx-0x3b]
  41f44d:	jmp    0x820:0x51202a01
  41f454:	pop    ebp
  41f455:	(bad)  
  41f456:	test   eax,0xdd71a788
  41f45b:	test   BYTE PTR [ebx],dl
  41f45d:	cld    
  41f45e:	push   0x77
  41f460:	cmc    
  41f461:	pushf  
  41f462:	clc    
  41f463:	or     eax,0xf5a75735
  41f468:	test   al,0xca
  41f46a:	and    DWORD PTR [ebp+0x5c50455d],ebx
  41f470:	in     eax,dx
  41f471:	je     0x41f429
  41f473:	xchg   esp,esp
  41f475:	test   BYTE PTR ds:0xd379436e,dl
  41f47b:	xchg   BYTE PTR [esi-0x55],bh
  41f47e:	inc    ebp
  41f47f:	bound  ebx,QWORD PTR ds:0xf77c433f
  41f485:	icebp  
  41f486:	xchg   ecx,eax
  41f487:	mov    ebx,?
  41f489:	pop    esi
  41f48a:	and    ebp,DWORD PTR [ecx+0x67ada480]
  41f490:	cli    
  41f491:	(bad)  
  41f492:	sbb    eax,ebp
  41f494:	inc    ecx
  41f495:	mov    ds:0xb47b624,al
  41f49a:	mov    WORD PTR ds:0xbca89c6f,?
  41f4a0:	lds    eax,FWORD PTR [eax-0x6d]
  41f4a3:	jge    0x41f433
  41f4a5:	xchg   ebx,eax
  41f4a6:	pop    esp
  41f4a7:	and    ebp,eax
  41f4a9:	(bad)  
  41f4aa:	sub    dl,BYTE PTR ds:0xf0dc499d
  41f4b0:	or     DWORD PTR [edx],0xfffffffb
  41f4b3:	(bad)  
  41f4b4:	cmp    DWORD PTR [edi],ecx
  41f4b6:	retf   0x2b32
  41f4b9:	enter  0x41d9,0x96
  41f4bd:	sub    ebx,ecx
  41f4bf:	or     al,0x6a
  41f4c1:	(bad)  
  41f4c2:	pop    ss
  41f4c3:	imul   BYTE PTR [edx+0x28f068f1]
  41f4c9:	dec    ebp
  41f4ca:	jmp    0xc809278c
  41f4cf:	imul   DWORD PTR [edx+0x7c]
  41f4d2:	call   0xb0006864
  41f4d7:	dec    esp
  41f4d8:	sub    eax,0x46078ca
  41f4dd:	retf   
  41f4de:	stos   BYTE PTR es:[edi],al
  41f4df:	out    0x45,al
  41f4e1:	retf   
  41f4e2:	pop    ss
  41f4e3:	or     al,0x63
  41f4e5:	push   ecx
  41f4e6:	mov    WORD PTR [eax],ds
  41f4e8:	mov    esp,0xf13ea8e0
  41f4ed:	mov    WORD PTR [ebx+esi*4+0x70],ss
  41f4f1:	cli    
  41f4f2:	outs   dx,DWORD PTR ds:[esi]
  41f4f3:	xor    BYTE PTR [ecx-0x6a],cl
  41f4f6:	xchg   esi,eax
  41f4f7:	imul   eax,DWORD PTR [esi],0x763c6ad3
  41f4fd:	jno    0x41f4ee
  41f4ff:	xor    ah,BYTE PTR [esi-0x623fba81]
  41f505:	mov    WORD PTR [ecx+0x62c2fd4e],ds
  41f50b:	jae    0x41f53b
  41f50d:	sbb    eax,0x3286999
  41f512:	add    al,0x35
  41f514:	jle    0x41f4d5
  41f516:	mov    edx,0x4b24fbb6
  41f51b:	inc    ecx
  41f51c:	fnsave [ecx-0x1f]
  41f51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f520:	mov    cl,0x77
  41f522:	stos   DWORD PTR es:[edi],eax
  41f523:	fcmovne st,st(1)
  41f525:	stc    
  41f526:	arpl   WORD PTR [ebp+0x18],ax
  41f529:	push   es
  41f52a:	push   ecx
  41f52b:	jp     0x41f57d
  41f52d:	lea    ecx,[ecx-0x3243cb25]
  41f533:	pop    edi
  41f534:	xor    DWORD PTR [edi+0x60],0x12
  41f538:	add    edx,eax
  41f53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53b:	out    0x9d,al
  41f53d:	mov    cs,WORD PTR [edi]
  41f53f:	jb     0x41f503
  41f541:	cmp    al,0x13
  41f543:	nop
  41f544:	or     al,0xd4
  41f546:	push   edi
  41f547:	sbb    edi,ecx
  41f549:	mov    al,0x31
  41f54b:	push   ecx
  41f54c:	test   BYTE PTR [edx],ah
  41f54e:	ins    DWORD PTR es:[edi],dx
  41f54f:	into   
  41f550:	jl     0x41f560
  41f552:	xor    esi,DWORD PTR gs:[ebx-0x1b95c9f6]
  41f559:	or     cl,BYTE PTR [ecx+edi*1-0x33]
  41f55d:	(bad)  
  41f55e:	sbb    dh,BYTE PTR [edi+0x189e5b7c]
  41f564:	inc    eax
  41f565:	xor    bh,bh
  41f567:	jl     0x41f5e2
  41f569:	mov    al,ds:0xa2577656
  41f56e:	mov    bl,0x84
  41f570:	ds cwde 
  41f572:	push   0x531120b1
  41f577:	sbb    eax,ecx
  41f579:	adc    DWORD PTR [edx+0x173cf68b],eax
  41f57f:	popf   
  41f580:	dec    esp
  41f581:	push   cs
  41f582:	and    al,0xf6
  41f584:	(bad)  
  41f586:	out    dx,eax
  41f587:	or     eax,DWORD PTR [edx+0x6f]
  41f58a:	paddusb mm5,QWORD PTR [esi]
  41f58d:	add    BYTE PTR [ebp-0x1a662cec],dh
  41f593:	xchg   ebx,eax
  41f594:	inc    esi
  41f595:	bound  esi,QWORD PTR [edi+0x287624bf]
  41f59b:	or     ebx,edi
  41f59d:	in     eax,0xe3
  41f59f:	mov    eax,ds:0x1b10da46
  41f5a4:	outs   dx,BYTE PTR ds:[esi]
  41f5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5a6:	ja     0x41f620
  41f5a8:	jae    0x41f5b7
  41f5aa:	ficomp DWORD PTR [ecx-0x353f2819]
  41f5b0:	(bad)  
  41f5b1:	outs   dx,DWORD PTR ds:[esi]
  41f5b2:	pop    esp
  41f5b3:	adc    edx,esi
  41f5b5:	or     cl,BYTE PTR [eax]
  41f5b7:	mov    dh,0xc5
  41f5b9:	repnz adc eax,0x764e2ab2
  41f5bf:	add    edx,DWORD PTR [edi]
  41f5c1:	(bad)  
  41f5c2:	enter  0xc5c5,0xa9
  41f5c6:	or     BYTE PTR ds:0x8ebcdf2d,cl
  41f5cc:	ret    0xe6c5
  41f5cf:	dec    ebp
  41f5d0:	out    0x62,eax
  41f5d2:	inc    esp
  41f5d3:	test   BYTE PTR [ebx],0x36
  41f5d6:	mov    dh,BYTE PTR [edi-0x6a]
  41f5d9:	cmp    eax,0xf005d235
  41f5de:	xchg   ebp,eax
  41f5df:	pop    ss
  41f5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5e1:	lods   eax,DWORD PTR ds:[esi]
  41f5e2:	xor    esp,DWORD PTR [edi-0x7a]
  41f5e5:	nop
  41f5e6:	and    eax,DWORD PTR [esi+eax*8-0x61]
  41f5ea:	pop    ss
  41f5eb:	dec    ecx
  41f5ec:	inc    ebx
  41f5ed:	xor    edx,0x45be5cd6
  41f5f3:	xlat   BYTE PTR ds:[ebx]
  41f5f4:	sub    esp,DWORD PTR [ecx]
  41f5f6:	and    BYTE PTR [ebx-0x4fccf902],ch
  41f5fc:	adc    eax,DWORD PTR [edx+0xfe013b]
  41f602:	xor    BYTE PTR [edi],0x6f
  41f605:	sbb    ah,bh
  41f607:	ror    BYTE PTR [ecx-0xc7021c0],0xc9
  41f60e:	pop    ebx
  41f60f:	inc    ecx
  41f610:	cmp    DWORD PTR [esi],ecx
  41f612:	outs   dx,BYTE PTR ds:[esi]
  41f613:	jmp    0x41f67f
  41f615:	stc    
  41f616:	sbb    eax,0x74d613de
  41f61b:	std    
  41f61c:	mov    esp,0xec9a553
  41f621:	mov    eax,ds:0xf9d4ef22
  41f626:	cmp    BYTE PTR [ecx+edi*8+0x17],ch
  41f62a:	in     eax,0x78
  41f62c:	inc    edi
  41f62d:	add    ebx,DWORD PTR [ebp-0x44]
  41f630:	mov    DWORD PTR [ebp-0x44],ebx
  41f633:	mov    edx,DWORD PTR [ebp+0x8]
  41f636:	xor    edx,eax
  41f638:	add    edx,esi
  41f63a:	jne    0x41aeb1
  41f640:	mov    edx,DWORD PTR [ebp-0x8]
  41f643:	mov    ebx,DWORD PTR [ebp-0xc]
  41f646:	xor    edx,eax
  41f648:	lea    edx,[edx+ebx*1+0x3272e0]
  41f64f:	mov    DWORD PTR [ebp-0xc],edx
  41f652:	inc    DWORD PTR [ebp+0xc]
  41f655:	mov    edx,DWORD PTR [ebp-0x14]
  41f658:	xor    edx,eax
  41f65a:	add    edx,esi
  41f65c:	jmp    0x4219e5
  41f661:	out    dx,al
  41f662:	(bad)  
  41f664:	call   0xc42ec61c
  41f669:	jmp    0xfad5:0x3411cc5e
  41f670:	sub    al,BYTE PTR [ecx+0x67a79c2]
  41f676:	pop    edi
  41f677:	jp     0x41f6f3
  41f679:	or     DWORD PTR [ecx+0x6d],ebp
  41f67c:	or     DWORD PTR [edx],esp
  41f67e:	mov    ch,0x6b
  41f680:	clc    
  41f681:	inc    esp
  41f682:	inc    esp
  41f683:	jmp    0x41f619
  41f685:	dec    ecx
  41f686:	dec    ebp
  41f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f688:	mov    bl,0x9a
  41f68a:	add    DWORD PTR [esi],0x3db0a439
  41f690:	test   al,0x27
  41f692:	adc    BYTE PTR [edi],dh
  41f694:	popa   
  41f695:	icebp  
  41f696:	pop    ecx
  41f697:	jb     0x41f6b9
  41f699:	stos   BYTE PTR es:[edi],al
  41f69a:	stos   DWORD PTR es:[edi],eax
  41f69b:	lock push ss
  41f69d:	cmp    eax,0xc2f22f2c
  41f6a2:	(bad)  
  41f6a3:	mov    ebx,0x40d5fac5
  41f6a8:	enter  0xc662,0xb6
  41f6ac:	(bad)  
  41f6ad:	ins    BYTE PTR es:[edi],dx
  41f6ae:	cmc    
  41f6af:	retf   
  41f6b0:	pop    es
  41f6b1:	dec    ecx
  41f6b2:	sub    eax,DWORD PTR [ebx-0x53]
  41f6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6b6:	add    esp,DWORD PTR [ecx]
  41f6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b9:	lods   al,BYTE PTR ds:[esi]
  41f6ba:	inc    eax
  41f6bb:	sub    BYTE PTR [ecx-0x2],al
  41f6be:	fnstcw WORD PTR [esi-0x12]
  41f6c1:	push   ds
  41f6c2:	mov    ebx,0xac7ab910
  41f6c7:	test   DWORD PTR [edi+eiz*8+0x13771747],ecx
  41f6ce:	inc    ebx
  41f6cf:	std    
  41f6d0:	icebp  
  41f6d1:	cld    
  41f6d2:	std    
  41f6d3:	push   cs
  41f6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6d5:	mov    cl,0x46
  41f6d7:	pop    ebx
  41f6d8:	pop    eax
  41f6d9:	sbb    cl,BYTE PTR [ecx-0x3f5d428]
  41f6df:	or     bh,BYTE PTR [eax]
  41f6e1:	out    0xf,eax
  41f6e3:	add    ah,al
  41f6e5:	mov    ch,BYTE PTR [edi+0x3bade785]
  41f6eb:	pop    eax
  41f6ec:	aam    0xde
  41f6ee:	fidiv  WORD PTR [eax-0x4f]
  41f6f1:	push   esp
  41f6f2:	pop    edx
  41f6f3:	nop
  41f6f4:	out    dx,eax
  41f6f5:	imul   esi,DWORD PTR [eax-0x27],0xffffff9f
  41f6f9:	mov    WORD PTR [eax+0x33],ss
  41f6fc:	or     DWORD PTR [ebx-0x4b3a504],ebp
  41f702:	addr16 jp 0x41f779
  41f705:	push   edi
  41f706:	(bad)  [ecx-0x3534b2a6]
  41f70c:	dec    edi
  41f70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f70e:	push   edi
  41f70f:	(bad)  
  41f710:	sbb    DWORD PTR [edi-0x52452ea2],ebp
  41f716:	out    dx,eax
  41f717:	inc    ebp
  41f718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f719:	retf   
  41f71a:	inc    edx
  41f71b:	icebp  
  41f71c:	call   0x231e3a69
  41f721:	add    DWORD PTR [eax+0x59],ebp
  41f724:	stos   BYTE PTR es:[edi],al
  41f725:	dec    ebx
  41f726:	mov    al,ch
  41f728:	push   esi
  41f729:	shl    esi,1
  41f72b:	imul   DWORD PTR [edx]
  41f72d:	inc    edx
  41f72e:	(bad)  
  41f72f:	loop   0x41f6fc
  41f731:	jb     0x41f767
  41f733:	arpl   WORD PTR [ebx+0x598372c6],dx
  41f739:	or     DWORD PTR [ecx+0x3e23a344],ebp
  41f73f:	or     BYTE PTR [edx-0x23],0xc1
  41f743:	xchg   ebp,eax
  41f744:	dec    ebx
  41f745:	lea    edx,[ecx+0x7bc0ff77]
  41f74b:	loope  0x41f6d1
  41f74d:	push   edi
  41f74e:	sub    BYTE PTR [ebx-0x3d],ah
  41f751:	xchg   ch,cl
  41f753:	push   0xffffffa5
  41f755:	bound  esp,QWORD PTR [eax]
  41f757:	icebp  
  41f758:	mov    BYTE PTR [di+0x16],0xb2
  41f75d:	mov    dh,0x3d
  41f75f:	cld    
  41f760:	shr    BYTE PTR [eax],1
  41f762:	xchg   ebx,eax
  41f763:	inc    ecx
  41f764:	(bad)  
  41f765:	sti    
  41f766:	pop    ss
  41f767:	popf   
  41f768:	pop    ss
  41f769:	sub    bl,ah
  41f76b:	adc    ebx,DWORD PTR ds:0xcbd623ca
  41f771:	push   ebp
  41f772:	jle    0x41f797
  41f774:	jb     0x41f7d2
  41f776:	mov    ebp,0x43a2f3db
  41f77b:	mov    cl,0xd0
  41f77d:	data16 and ch,0xc
  41f781:	out    dx,eax
  41f782:	add    eax,0x92415f68
  41f787:	or     dh,BYTE PTR [ecx]
  41f789:	outs   dx,BYTE PTR ds:[esi]
  41f78a:	push   esp
  41f78b:	lods   eax,DWORD PTR ds:[esi]
  41f78c:	jmp    0x41f768
  41f78e:	pop    es
  41f78f:	adc    al,0xe7
  41f791:	jmp    0x41f78f
  41f793:	jge    0x41f7cd
  41f795:	jbe    0x41f7eb
  41f797:	mov    esi,0x925c1022
  41f79c:	jbe    0x41f767
  41f79e:	jne    0x41f810
  41f7a0:	outs   dx,DWORD PTR ds:[esi]
  41f7a1:	es pop edi
  41f7a3:	dec    ebx
  41f7a4:	inc    ebx
  41f7a5:	mov    ?,WORD PTR [esi+0x69]
  41f7a8:	fist   WORD PTR ds:0xbb0b3ab
  41f7ae:	(bad)  
  41f7af:	push   0xffffff91
  41f7b1:	scas   al,BYTE PTR es:[edi]
  41f7b2:	xchg   ebp,eax
  41f7b3:	mov    es,WORD PTR [ebx]
  41f7b5:	lods   eax,DWORD PTR ds:[esi]
  41f7b6:	imul   BYTE PTR [edx-0x35c3665e]
  41f7bc:	push   ecx
  41f7bd:	jge    0x41f7ac
  41f7bf:	pop    eax
  41f7c0:	add    al,0x18
  41f7c2:	cli    
  41f7c3:	jge    0x41f7e7
  41f7c5:	xchg   esi,eax
  41f7c6:	cmp    eax,0xcf57647b
  41f7cb:	ja     0x41f7e7
  41f7cd:	cmp    BYTE PTR ds:0x2f82e685,0xcd
  41f7d4:	and    BYTE PTR [ecx],ah
  41f7d6:	aam    0x30
  41f7d8:	push   edx
  41f7d9:	dec    ecx
  41f7da:	test   eax,0x60d9a6d6
  41f7df:	xchg   DWORD PTR [esi-0x14],ecx
  41f7e2:	pop    edx
  41f7e3:	dec    esi
  41f7e4:	jle    0x41f79b
  41f7e6:	stos   BYTE PTR es:[edi],al
  41f7e7:	shl    DWORD PTR [edi-0x231cc0fc],1
  41f7ed:	inc    ebp
  41f7ee:	scas   al,BYTE PTR es:[edi]
  41f7ef:	test   BYTE PTR [ebp+0x761251ec],dh
  41f7f5:	enter  0x53e3,0x47
  41f7f9:	xchg   ebp,eax
  41f7fa:	mov    gs,WORD PTR [ecx+0x6f]
  41f7fd:	cdq    
  41f7fe:	dec    ecx
  41f7ff:	adc    edx,DWORD PTR [eax+esi*4-0x51]
  41f803:	and    BYTE PTR [ebp+0x62],ah
  41f806:	nop
  41f807:	sbb    bl,BYTE PTR [edi]
  41f809:	or     al,0x3d
  41f80b:	inc    ebx
  41f80c:	adc    al,0xc4
  41f80e:	jp     0x41f82a
  41f810:	push   es
  41f811:	mov    eax,ds:0x90836e47
  41f816:	mov    dh,0xe0
  41f818:	outs   dx,BYTE PTR ds:[esi]
  41f819:	inc    esp
  41f81a:	sub    eax,0x4decd402
  41f81f:	ja     0x41f7d9
  41f821:	xchg   ebp,eax
  41f822:	jmp    0x41f86e
  41f824:	les    edx,FWORD PTR [esi+0x79]
  41f827:	test   al,0x6
  41f829:	cwde   
  41f82a:	dec    eax
  41f82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82c:	fucomip st,st(2)
  41f82e:	push   esi
  41f82f:	nop
  41f830:	xchg   esi,eax
  41f831:	and    BYTE PTR [eax],ch
  41f833:	or     dl,ah
  41f835:	push   0xfffffffa
  41f837:	sub    eax,0x61d6a736
  41f83c:	test   ebx,edi
  41f83e:	(bad)  
  41f83f:	xchg   edx,eax
  41f840:	and    eax,0xe62bf14
  41f845:	je     0x41f8a1
  41f847:	inc    esp
  41f848:	adc    DWORD PTR [edi-0x11],ebp
  41f84b:	lds    ebp,FWORD PTR [eax-0x4a]
  41f84e:	adc    DWORD PTR [ebx+edi*4],ebx
  41f851:	pushf  
  41f852:	fwait
  41f853:	mov    cs,bx
  41f856:	xchg   esi,eax
  41f857:	xchg   edx,eax
  41f858:	dec    ebx
  41f859:	sub    ch,BYTE PTR [ebp-0x50]
  41f85c:	outs   dx,BYTE PTR ds:[esi]
  41f85d:	sbb    bh,BYTE PTR [ebp-0x50]
  41f860:	sub    BYTE PTR [edi-0x50],dh
  41f863:	mov    cl,0xf3
  41f865:	daa    
  41f866:	pop    esi
  41f867:	sbb    DWORD PTR [ebp-0x24],esp
  41f86a:	push   cs
  41f86b:	fnstenv [eax+edx*2-0x4acccaa2]
  41f872:	pusha  
  41f873:	fsub   QWORD PTR ds:0x34e010d0
  41f879:	mov    ebp,0xe3ce4b16
  41f87e:	bound  eax,QWORD PTR [ebx]
  41f880:	sbb    al,0x99
  41f882:	sbb    BYTE PTR [ebp+0x3f80d740],dl
  41f888:	push   ss
  41f889:	shl    BYTE PTR [ecx],1
  41f88b:	aad    0x1c
  41f88d:	sub    eax,esp
  41f88f:	(bad)  [edi-0x11]
  41f892:	popa   
  41f893:	pusha  
  41f894:	aad    0x6d
  41f896:	sbb    BYTE PTR [ecx],bh
  41f898:	cld    
  41f899:	and    esi,DWORD PTR [edx-0x18]
  41f89c:	xchg   ch,cl
  41f89e:	stc    
  41f89f:	inc    edi
  41f8a0:	dec    edx
  41f8a1:	sub    edi,DWORD PTR [eax+0x101fd88a]
  41f8a7:	sbb    edx,DWORD PTR [esi]
  41f8a9:	or     al,BYTE PTR [ecx-0x32]
  41f8ac:	pop    edx
  41f8ad:	fisub  WORD PTR [ebx]
  41f8af:	mov    bl,0xad
  41f8b1:	mov    al,0x7
  41f8b3:	shr    DWORD PTR [eax],1
  41f8b5:	and    BYTE PTR [eax+0x78ee0e0f],al
  41f8bb:	in     eax,dx
  41f8bc:	sub    eax,0x6b8d78a9
  41f8c1:	pop    esi
  41f8c2:	out    dx,eax
  41f8c3:	push   ebp
  41f8c4:	sti    
  41f8c5:	mov    WORD PTR [ebx+0x7e006f26],ds
  41f8cb:	dec    ebp
  41f8cc:	pop    ecx
  41f8cd:	shr    DWORD PTR [ecx-0xc96d3c5],0x9e
  41f8d4:	mov    cl,0x69
  41f8d6:	rcl    DWORD PTR [ebx+0x58315387],1
  41f8dc:	mov    dh,0x59
  41f8de:	test   al,0x9b
  41f8e0:	jns    0x41f92a
  41f8e2:	and    al,0xe8
  41f8e4:	xcrypt-ofb (bad)
  41f8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e6:	ins    DWORD PTR es:[edi],dx
  41f8e7:	out    dx,eax
  41f8e8:	aam    0x9c
  41f8ea:	jmp    0xb96b:0x1c3d7e9c
  41f8f1:	sub    esi,ecx
  41f8f3:	ret    
  41f8f4:	adc    dh,BYTE PTR [ebp-0x45]
  41f8f7:	fsubr  QWORD PTR [ebx-0x3fa71815]
  41f8fd:	mov    eax,DWORD PTR [ecx-0xf]
  41f900:	adc    ebx,DWORD PTR [ebx]
  41f902:	and    bl,BYTE PTR [eax]
  41f904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f905:	shr    DWORD PTR [ebx+0xe175564],cl
  41f90b:	cmp    ecx,esp
  41f90d:	mov    ds:0xe625dd7f,eax
  41f912:	es popa 
  41f914:	push   cs
  41f915:	xchg   edi,eax
  41f916:	or     edx,DWORD PTR [ebp+0x75]
  41f919:	mov    esp,0x284fd7d0
  41f91e:	ror    BYTE PTR [esi+0x6057d487],cl
  41f924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f925:	cwde   
  41f926:	add    ch,BYTE PTR ds:0x85570a14
  41f92c:	cld    
  41f92d:	or     BYTE PTR [ecx-0x21],dh
  41f930:	ja     0x41f92c
  41f932:	cwde   
  41f933:	pop    esp
  41f934:	addr16 (bad) 
  41f936:	loopne 0x41f96c
  41f938:	xor    ch,0x39
  41f93b:	inc    ebx
  41f93c:	and    BYTE PTR [edi-0x4b],bh
  41f93f:	push   ds
  41f940:	sbb    dl,BYTE PTR [ecx+esi*1]
  41f943:	add    al,0x36
  41f945:	(bad)  
  41f947:	iret   
  41f948:	adc    eax,edx
  41f94a:	scas   eax,DWORD PTR es:[edi]
  41f94b:	mov    ah,0x11
  41f94d:	jmp    edi
  41f94f:	cmc    
  41f950:	jns    0x41f8e9
  41f952:	push   edx
  41f953:	mov    edx,0x2b2a214b
  41f958:	xchg   edx,eax
  41f959:	(bad)  
  41f95a:	or     al,0x8e
  41f95c:	or     al,0x2b
  41f95e:	adc    eax,0xaaefc78c
  41f963:	push   0xffffffe6
  41f965:	mov    BYTE PTR [esi+ecx*2],cl
  41f968:	fist   DWORD PTR [esp+ecx*4+0x5b]
  41f96c:	in     eax,0x2e
  41f96e:	push   ebp
  41f96f:	mov    edx,DWORD PTR [edi+0xd]
  41f972:	lock dec ebp
  41f974:	pop    edi
  41f975:	(bad)  
  41f976:	std    
  41f977:	int    0xe8
  41f979:	popf   
  41f97a:	out    dx,eax
  41f97b:	and    eax,0x51091a3d
  41f980:	cmp    al,0xb1
  41f982:	das    
  41f983:	pop    ecx
  41f984:	clc    
  41f985:	je     0x41f94d
  41f987:	nop
  41f988:	call   0xfcb:0x6594f53e
  41f98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f990:	push   eax
  41f991:	ds inc edx
  41f993:	pop    ebx
  41f994:	cli    
  41f995:	jg     0x41f91a
  41f997:	pop    edx
  41f998:	rol    ah,0x74
  41f99b:	sbb    ebp,DWORD PTR [ecx+0x7ea12c83]
  41f9a1:	cli    
  41f9a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a3:	add    DWORD PTR [esi-0x7707db88],eax
  41f9a9:	push   edx
  41f9aa:	out    dx,al
  41f9ab:	outs   dx,BYTE PTR ds:[esi]
  41f9ac:	or     eax,0x109a17da
  41f9b1:	pop    ebx
  41f9b2:	inc    ebp
  41f9b3:	push   esi
  41f9b4:	out    0x46,eax
  41f9b6:	cmp    al,0x80
  41f9b8:	(bad)  
  41f9ba:	jae    0x41f996
  41f9bc:	pop    es
  41f9bd:	push   ss
  41f9be:	jp     0x41fa3b
  41f9c0:	imul   esi,DWORD PTR [edx-0x77ce35d3],0xffffffdc
  41f9c7:	test   eax,0x650f7b94
  41f9cc:	inc    eax
  41f9cd:	mov    WORD PTR [eax+0x74],cs
  41f9d0:	cdq    
  41f9d1:	ror    DWORD PTR [eax+edx*8],cl
  41f9d4:	out    dx,al
  41f9d5:	sub    al,bl
  41f9d7:	inc    dh
  41f9d9:	(bad)  
  41f9da:	enter  0x3e91,0x13
  41f9de:	loope  0x41f9d3
  41f9e0:	jb     0x41f988
  41f9e2:	jp     0x41f974
  41f9e4:	dec    esp
  41f9e5:	rcr    DWORD PTR [ebx-0x50],cl
  41f9e8:	mov    al,ds:0xc0ac0e36
  41f9ed:	mov    al,ds:0x70df6792
  41f9f2:	add    eax,0xf9cd6d45
  41f9f7:	mov    ecx,esi
  41f9f9:	add    DWORD PTR [edx+0x5cb3c15],0xffffff92
  41fa00:	mov    edi,0x6c9115c0
  41fa05:	aaa    
  41fa06:	cdq    
  41fa07:	cmp    ebx,DWORD PTR [ebx-0x78d2a77d]
  41fa0d:	adc    BYTE PTR [esi+0x66],0x82
  41fa11:	push   cs
  41fa12:	push   esi
  41fa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa15:	cmp    al,0x3a
  41fa17:	aam    0x65
  41fa19:	repnz sub bh,BYTE PTR [ecx]
  41fa1c:	repnz or DWORD PTR [ebx+0x3],esp
  41fa20:	repnz or eax,0x43646b37
  41fa26:	xchg   edi,eax
  41fa27:	pop    es
  41fa28:	cld    
  41fa29:	out    dx,al
  41fa2a:	mov    al,0xfc
  41fa2c:	aas    
  41fa2d:	adc    BYTE PTR [ebx-0x3e],ch
  41fa30:	int3   
  41fa31:	push   0x45
  41fa33:	aaa    
  41fa34:	sahf   
  41fa35:	rol    BYTE PTR [edx-0x18d53671],0x24
  41fa3c:	test   al,0x6b
  41fa3e:	(bad)  
  41fa3f:	aad    0xea
  41fa41:	push   0x5b
  41fa43:	mov    ah,0x8f
  41fa45:	mov    cl,0x87
  41fa47:	or     al,0xcc
  41fa49:	cmp    BYTE PTR [edi-0x7cdb56],ah
  41fa4f:	jne    0x41faa7
  41fa51:	mov    ah,0x1
  41fa53:	xor    bh,ah
  41fa55:	test   ah,0xa
  41fa58:	jno    0x41f9e5
  41fa5a:	adc    BYTE PTR [ecx],0x9f
  41fa5d:	inc    ebx
  41fa5e:	and    al,0xad
  41fa60:	dec    edx
  41fa61:	push   cs
  41fa62:	fsub   QWORD PTR [edx]
  41fa64:	add    ebx,esi
  41fa66:	add    al,0xef
  41fa68:	scas   al,BYTE PTR es:[edi]
  41fa69:	add    bh,dl
  41fa6b:	mov    dh,0x23
  41fa6d:	inc    edi
  41fa6e:	inc    ebx
  41fa6f:	sub    cl,ah
  41fa71:	pop    esi
  41fa72:	ret    
  41fa73:	bswap  ebp
  41fa75:	loopne 0x41fa31
  41fa77:	inc    ecx
  41fa78:	pushf  
  41fa79:	mov    DWORD PTR [ecx],0x40c6ebd4
  41fa7f:	or     DWORD PTR [ebx-0x3aefaed7],esp
  41fa85:	into   
  41fa86:	push   es
  41fa87:	mov    ecx,0x532859fe
  41fa8c:	xor    ebp,esp
  41fa8e:	dec    edi
  41fa8f:	shl    BYTE PTR [esi-0x7dffaafa],1
  41fa95:	sub    eax,0xf7205937
  41fa9a:	mov    BYTE PTR [bp+si+0x5a0e],ch
  41fa9f:	adc    al,0xf7
  41faa1:	leave  
  41faa2:	sub    bh,BYTE PTR [eax-0x1c6f1c3e]
  41faa8:	rcr    DWORD PTR [ebx-0x69],1
  41faab:	or     cl,bh
  41faad:	fistp  QWORD PTR [eax+eiz*8-0x4b]
  41fab1:	cmp    BYTE PTR [ebx-0x1c],0x50
  41fab5:	xchg   ebx,eax
  41fab6:	(bad)  
  41fab7:	mov    ebp,0x516ef71b
  41fabc:	aam    0x7
  41fabe:	fcomi  st,st(0)
  41fac0:	and    BYTE PTR [ebp-0x64],cl
  41fac3:	out    dx,al
  41fac4:	inc    ecx
  41fac5:	stos   BYTE PTR es:[edi],al
  41fac6:	ror    BYTE PTR [ebp+0x5e],cl
  41fac9:	iret   
  41faca:	pop    esp
  41facb:	std    
  41facc:	xor    DWORD PTR [ebx-0x76],eax
  41facf:	lods   al,BYTE PTR ds:[esi]
  41fad0:	(bad)  
  41fad1:	test   al,0xd8
  41fad3:	mov    WORD PTR [eax+0x68],?
  41fad6:	cmp    al,0xf7
  41fad8:	int3   
  41fad9:	sbb    bh,BYTE PTR [edi+0x60fa73d3]
  41fadf:	mov    cl,0xf0
  41fae1:	pop    ss
  41fae2:	mov    ebx,0x280f32b6
  41fae7:	add    BYTE PTR [ecx],dl
  41fae9:	mov    edx,DWORD PTR [esi+0x19fe34f3]
  41faef:	add    eax,0x1db360ad
  41faf4:	into   
  41faf5:	adc    ch,BYTE PTR [ebx]
  41faf7:	sar    BYTE PTR [ebx],cl
  41faf9:	rcr    BYTE PTR [ecx+ecx*8],0xc2
  41fafd:	mov    edx,0x4885e9b
  41fb02:	mov    cs,WORD PTR [ecx+0x39]
  41fb05:	add    eax,0x2377a0f3
  41fb0a:	mul    BYTE PTR [eax]
  41fb0c:	test   BYTE PTR [edi],al
  41fb0e:	imul   BYTE PTR [eax-0x4f]
  41fb11:	jns    0x41fb12
  41fb13:	lock pop eax
  41fb15:	ficom  DWORD PTR [ecx+0xe39bbc]
  41fb1b:	sti    
  41fb1c:	inc    al
  41fb1e:	dec    eax
  41fb1f:	ror    DWORD PTR [eax+0x9854506],0xf8
  41fb26:	fcom   DWORD PTR [ecx-0x478eb3c6]
  41fb2c:	mov    bl,0x65
  41fb2e:	imul   eax,eax,0x34
  41fb31:	fimul  WORD PTR [ecx]
  41fb33:	and    esi,0xc29cf044
  41fb39:	outs   dx,DWORD PTR ds:[esi]
  41fb3a:	xlat   BYTE PTR ds:[ebx]
  41fb3b:	enter  0xa8f4,0x3f
  41fb3f:	add    BYTE PTR [ecx],0x73
  41fb42:	fs inc esi
  41fb44:	iret   
  41fb45:	les    ebp,FWORD PTR [edx+0x1c86701b]
  41fb4b:	cmp    eax,0x367d6f46
  41fb50:	jg     0x41fafe
  41fb52:	xchg   edi,eax
  41fb53:	mov    edx,ecx
  41fb55:	ins    BYTE PTR es:[edi],dx
  41fb56:	xchg   ch,ah
  41fb58:	scas   al,BYTE PTR es:[edi]
  41fb59:	xchg   edx,eax
  41fb5a:	jp     0x41fb93
  41fb5c:	out    dx,eax
  41fb5d:	cmp    eax,0x10b20544
  41fb62:	pop    edx
  41fb63:	push   ebp
  41fb64:	in     al,0x16
  41fb66:	xchg   edi,eax
  41fb67:	jge    0x41fb6a
  41fb69:	fsub   DWORD PTR [edx-0x62c1cb42]
  41fb6f:	pop    esp
  41fb70:	xchg   edx,eax
  41fb71:	aad    0x7d
  41fb73:	(bad)  
  41fb74:	call   0x9509:0xdb192e38
  41fb7b:	ss mov edx,0x8e5d77e4
  41fb81:	and    al,0xa9
  41fb83:	inc    esp
  41fb84:	mov    edi,0x681e09f2
  41fb89:	and    edx,DWORD PTR [eax+0x4d]
  41fb8c:	pop    esi
  41fb8d:	addr16 pushf 
  41fb8f:	jecxz  0x41fb15
  41fb91:	push   0x6
  41fb93:	dec    esp
  41fb94:	xlat   BYTE PTR ds:[ebx]
  41fb95:	mov    dl,0xf8
  41fb97:	inc    ebp
  41fb98:	cmp    al,0x10
  41fb9a:	cmc    
  41fb9b:	xchg   ebx,eax
  41fb9c:	shr    BYTE PTR [edi],cl
  41fb9e:	cmp    BYTE PTR [eax+eiz*4],dh
  41fba1:	leave  
  41fba2:	push   edi
  41fba3:	aad    0x5f
  41fba5:	and    al,0x8d
  41fba7:	aas    
  41fba8:	arpl   WORD PTR [esi],sp
  41fbaa:	ins    DWORD PTR es:[edi],dx
  41fbab:	lea    ecx,[edi-0x35e8f450]
  41fbb1:	xchg   edi,eax
  41fbb2:	neg    BYTE PTR [eax-0x76]
  41fbb5:	popa   
  41fbb6:	jl     0x41fbb2
  41fbb8:	outs   dx,BYTE PTR ds:[esi]
  41fbb9:	hlt    
  41fbba:	daa    
  41fbbb:	test   al,0x73
  41fbbd:	dec    esi
  41fbbe:	into   
  41fbbf:	push   cs
  41fbc0:	xchg   edx,eax
  41fbc1:	sahf   
  41fbc2:	cdq    
  41fbc3:	or     cl,BYTE PTR [eax+ecx*4+0x54]
  41fbc7:	xor    edi,ebp
  41fbc9:	xchg   ebx,eax
  41fbca:	sahf   
  41fbcb:	xchg   ebp,eax
  41fbcc:	int    0xd8
  41fbce:	mov    ebx,0x46d20f7
  41fbd3:	or     ebp,eax
  41fbd5:	(bad)  
  41fbd6:	cmp    eax,0x8b41cb64
  41fbdb:	sti    
  41fbdc:	pop    edi
  41fbdd:	sbb    BYTE PTR [esp+edx*1-0x4a121459],cl
  41fbe4:	fwait
  41fbe5:	cs ss out 0x26,eax
  41fbe9:	lods   al,BYTE PTR ds:[esi]
  41fbea:	lahf   
  41fbeb:	mul    DWORD PTR [esi-0xf160c03]
  41fbf1:	mov    ds:0x23422229,eax
  41fbf6:	pop    ecx
  41fbf7:	inc    eax
  41fbf8:	mov    ecx,0xbc88f6f1
  41fbfd:	imul   ebp,DWORD PTR [edi-0x5b],0x47
  41fc01:	push   esi
  41fc02:	(bad)  
  41fc03:	jecxz  0x41fc32
  41fc05:	mov    esi,0x5c1e3065
  41fc0a:	pushf  
  41fc0b:	push   esi
  41fc0c:	(bad)  
  41fc0d:	push   ebx
  41fc0e:	xor    dl,BYTE PTR [ebx+0x68a68eb2]
  41fc14:	enter  0xa77,0x18
  41fc18:	jmp    0xed4fbd51
  41fc1d:	out    dx,eax
  41fc1e:	mov    ?,edi
  41fc20:	retf   
  41fc21:	nop
  41fc22:	popa   
  41fc23:	push   es
  41fc24:	test   al,0x43
  41fc26:	cmc    
  41fc27:	sahf   
  41fc28:	push   eax
  41fc29:	shl    DWORD PTR [ebp-0x61],cl
  41fc2c:	in     al,dx
  41fc2d:	es sahf 
  41fc2f:	sbb    al,0x1b
  41fc31:	push   ecx
  41fc32:	xor    dl,BYTE PTR [ebx]
  41fc34:	xchg   ebx,eax
  41fc35:	loope  0x41fc4d
  41fc37:	sar    BYTE PTR [ecx-0x40],1
  41fc3a:	or     eax,0x7ce0bd33
  41fc3f:	mov    cl,0x4c
  41fc41:	dec    ebp
  41fc42:	adc    BYTE PTR [ebx+0xa5ec472],dh
  41fc48:	dec    eax
  41fc49:	and    ebx,DWORD PTR [esi+ebx*4-0x3cb6f60a]
  41fc50:	and    eax,DWORD PTR [edi+0x2f]
  41fc53:	adc    eax,0x1d570199
  41fc58:	jl     0x41fbf6
  41fc5a:	mov    esi,0x6794d676
  41fc5f:	mov    edx,0x83809aa
  41fc64:	std    
  41fc65:	sar    DWORD PTR [ebx],0x58
  41fc68:	push   0xffffffcf
  41fc6a:	aas    
  41fc6b:	inc    ebp
  41fc6c:	sahf   
  41fc6d:	push   0x27c286bf
  41fc72:	test   BYTE PTR [edi-0x6f],0x3f
  41fc76:	clc    
  41fc77:	jns    0x41fc77
  41fc79:	jp     0x41fc84
  41fc7b:	arpl   WORD PTR [ebp-0x39],di
  41fc7e:	sbb    edx,DWORD PTR [edx-0x68f7bd73]
  41fc84:	pushf  
  41fc85:	adc    eax,0x44e0259f
  41fc8a:	shr    DWORD PTR [ebx],0xf0
  41fc8d:	sub    DWORD PTR [esp+ebx*8],edi
  41fc90:	mov    al,0x50
  41fc92:	jns    0x41fc8d
  41fc94:	jne    0x41fc2f
  41fc96:	and    BYTE PTR [edx+0x10],ah
  41fc99:	pop    ecx
  41fc9a:	test   eax,0x6e414827
  41fc9f:	mov    DWORD PTR [ebp+0x39],ecx
  41fca2:	loope  0x41fc26
  41fca4:	cmp    eax,0x353b0d8a
  41fca9:	retf   
  41fcaa:	stc    
  41fcab:	xor    eax,eax
  41fcad:	hlt    
  41fcae:	push   ss
  41fcaf:	fmul   DWORD PTR [ebx-0x6b6f5b1]
  41fcb5:	push   edx
  41fcb6:	sub    eax,0x28a4a8c8
  41fcbb:	into   
  41fcbc:	popf   
  41fcbd:	aas    
  41fcbe:	or     ecx,edx
  41fcc0:	cwde   
  41fcc1:	pop    esi
  41fcc2:	jmp    0x99af949c
  41fcc7:	and    bh,BYTE PTR [eax]
  41fcc9:	in     al,dx
  41fcca:	shl    BYTE PTR [edi-0x58],1
  41fccd:	push   ds
  41fcce:	cmp    ch,BYTE PTR [esi+edx*2]
  41fcd1:	dec    esp
  41fcd2:	adc    ebx,DWORD PTR [edi-0x78]
  41fcd5:	inc    eax
  41fcd6:	stc    
  41fcd7:	dec    edi
  41fcd8:	popa   
  41fcd9:	sub    ch,dl
  41fcdb:	sub    DWORD PTR [eax-0x5e],ebx
  41fcde:	ds push eax
  41fce0:	ja     0x41fd21
  41fce2:	push   ss
  41fce3:	mov    ds:0xc5c50fc3,al
  41fce8:	push   ebx
  41fce9:	pop    esi
  41fcea:	aaa    
  41fceb:	call   0x5caa:0x6e481d5
  41fcf2:	test   DWORD PTR [edi+0x7c0027a1],0x692b8ce4
  41fcfc:	push   ss
  41fcfd:	lahf   
  41fcfe:	lahf   
  41fcff:	int3   
  41fd00:	mov    edx,0x16981341
  41fd05:	in     eax,dx
  41fd06:	mov    edi,0x26e50c8c
  41fd0b:	push   esp
  41fd0c:	and    BYTE PTR ds:0xc39c1d19,dh
  41fd12:	dec    ebp
  41fd13:	and    DWORD PTR [edx],ecx
  41fd15:	sbb    bh,BYTE PTR [edi-0x47]
  41fd18:	dec    eax
  41fd19:	mov    WORD PTR [eax-0x34b160b2],?
  41fd1f:	std    
  41fd20:	es xchg ebp,eax
  41fd22:	xor    DWORD PTR [ebx+0x4be60b22],esp
  41fd28:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41fd2a:	lods   al,BYTE PTR ds:[esi]
  41fd2b:	xor    eax,0xa09f0379
  41fd30:	loopne 0x41fce7
  41fd32:	jge    0x41fd6f
  41fd34:	gs push es
  41fd36:	enter  0x7c33,0xdc
  41fd3a:	loopne 0x41fd5d
  41fd3c:	aam    0x20
  41fd3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd3f:	add    al,0xbe
  41fd41:	sbb    BYTE PTR [eax+0x1fe9d8cb],cl
  41fd47:	xchg   ah,cl
  41fd49:	rcr    BYTE PTR [eax+0x34546132],cl
  41fd4f:	cmp    DWORD PTR [esi-0x284af691],ebp
  41fd55:	fwait
  41fd56:	lahf   
  41fd57:	in     eax,dx
  41fd58:	sub    BYTE PTR [ebp-0x4847e232],0xc8
  41fd5f:	and    edx,DWORD PTR [edx+0x6a]
  41fd62:	sub    al,0x79
  41fd64:	outs   dx,BYTE PTR ds:[esi]
  41fd65:	lock mov eax,0x2e1c1ffa
  41fd6b:	test   BYTE PTR [esp+edi*2+0x79594cee],dl
  41fd72:	sbb    al,0x65
  41fd74:	mov    ecx,0x835357d9
  41fd79:	aad    0x92
  41fd7b:	xor    BYTE PTR [ecx+esi*1],cl
  41fd7e:	out    0x57,al
  41fd80:	stos   BYTE PTR es:[edi],al
  41fd81:	inc    ecx
  41fd82:	sti    
  41fd83:	lods   al,BYTE PTR ds:[esi]
  41fd84:	mov    BYTE PTR [eax+0x40],dl
  41fd87:	pusha  
  41fd88:	and    ebx,DWORD PTR [edi]
  41fd8a:	jne    0x41fd50
  41fd8c:	jno    0x41fe06
  41fd8e:	or     BYTE PTR [esi+0x1e482cf8],ah
  41fd94:	add    ecx,edx
  41fd96:	mov    dh,0xd1
  41fd98:	dec    ebp
  41fd99:	pop    ebp
  41fd9a:	pop    esi
  41fd9b:	xor    cl,al
  41fd9d:	or     eax,0xa8ec032
  41fda2:	xor    BYTE PTR [eax+ebx*1],bh
  41fda5:	test   DWORD PTR [edi],0xfc7ef9f7
  41fdab:	daa    
  41fdac:	out    dx,al
  41fdad:	hlt    
  41fdae:	lea    esp,[eax+0x10]
  41fdb1:	xchg   ebp,eax
  41fdb2:	outs   dx,BYTE PTR ds:[esi]
  41fdb3:	lahf   
  41fdb4:	fwait
  41fdb5:	ret    
  41fdb6:	mov    eax,0xc8f215f2
  41fdbb:	loope  0x41fe03
  41fdbd:	add    cl,BYTE PTR [ebx]
  41fdbf:	into   
  41fdc0:	mov    ecx,0xbcbb7a47
  41fdc5:	outs   dx,BYTE PTR ds:[esi]
  41fdc6:	mov    ah,0x48
  41fdc8:	push   edx
  41fdc9:	adc    ebp,DWORD PTR [eax-0x47]
  41fdcc:	and    al,0xa5
  41fdce:	xchg   DWORD PTR [edx+0x40],esi
  41fdd1:	add    bl,BYTE PTR [eax-0x5e]
  41fdd4:	sbb    al,0x94
  41fdd6:	mov    ds:0xba73b3e8,al
  41fddb:	div    cl
  41fddd:	scas   eax,DWORD PTR es:[edi]
  41fdde:	add    BYTE PTR [ebp+0x302afad9],0xc2
  41fde5:	sti    
  41fde6:	xchg   esp,eax
  41fde7:	pop    es
  41fde8:	js     0x41fe54
  41fdea:	push   ss
  41fdeb:	rcr    esp,0xb3
  41fdee:	fsub   QWORD PTR [eax+0x74]
  41fdf1:	push   ebp
  41fdf2:	mov    ecx,0x83f14c09
  41fdf7:	sub    eax,0x6222dba3
  41fdfc:	fsubr  st,st(7)
  41fdfe:	sti    
  41fdff:	(bad)  
  41fe00:	xor    cl,BYTE PTR [ecx]
  41fe02:	inc    ebp
  41fe03:	or     ecx,eax
  41fe05:	cli    
  41fe06:	xor    dl,BYTE PTR [edi]
  41fe08:	mov    ebx,0xc9e8d61a
  41fe0d:	cmc    
  41fe0e:	or     eax,0xb5ae70ff
  41fe13:	jb     0x41fdb0
  41fe15:	mov    BYTE PTR [ecx-0x927b715],ch
  41fe1b:	jp     0x41fdbc
  41fe1d:	ret    0x6371
  41fe20:	out    dx,al
  41fe21:	dec    eax
  41fe22:	ins    DWORD PTR es:[edi],dx
  41fe23:	popf   
  41fe24:	cdq    
  41fe25:	rcr    BYTE PTR [ebp-0x20ad979e],0xd7
  41fe2c:	xor    al,0xb6
  41fe2e:	out    0x18,eax
  41fe30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe31:	cdq    
  41fe32:	int    0x8a
  41fe34:	xor    BYTE PTR [ebx+0x38],cl
  41fe37:	data16 aam 0xce
  41fe3a:	fcomp  QWORD PTR [edx-0x34]
  41fe3d:	ins    DWORD PTR es:[edi],dx
  41fe3e:	pop    esi
  41fe3f:	imul   DWORD PTR [esi+ebp*1]
  41fe42:	sbb    ch,BYTE PTR [eax+0x2fef604b]
  41fe48:	jne    0x41fe0f
  41fe4a:	movaps XMMWORD PTR [edi+ecx*1-0x80],xmm5
  41fe4f:	sub    BYTE PTR es:[ebp+0x5dfea8d7],cl
  41fe56:	mov    cl,0x41
  41fe58:	inc    ecx
  41fe59:	pop    edi
  41fe5a:	jp     0x41fe6f
  41fe5c:	out    0x74,eax
  41fe5e:	js     0x41fe55
  41fe60:	mov    dh,0xd9
  41fe62:	inc    edx
  41fe63:	icebp  
  41fe64:	mov    dh,0xd1
  41fe66:	dec    eax
  41fe67:	adc    DWORD PTR [eax],ecx
  41fe69:	sub    eax,0x8aacf50b
  41fe6e:	sub    al,0xab
  41fe70:	inc    eax
  41fe71:	cld    
  41fe72:	mov    cl,0xbe
  41fe74:	pop    ss
  41fe75:	xchg   esp,eax
  41fe76:	or     DWORD PTR [edi+0x4a],eax
  41fe79:	push   eax
  41fe7a:	mov    dl,0xa2
  41fe7c:	sub    DWORD PTR [esi],esp
  41fe7e:	mov    bh,0xfa
  41fe80:	(bad)
  41fe83:	mov    edx,0x5834117
  41fe88:	pop    eax
  41fe89:	das    
  41fe8a:	call   0x9e12:0x8099c483
  41fe91:	test   DWORD PTR [ecx],esp
  41fe93:	repz add dl,BYTE PTR ss:[esi+0xda0df28]
  41fe9b:	call   0xc50feecf
  41fea0:	sub    edx,DWORD PTR [edi]
  41fea2:	dec    ecx
  41fea3:	mov    fs,WORD PTR ds:[esi+0x56bfe5ff]
  41feaa:	mov    ah,0x6a
  41feac:	add    eax,ecx
  41feae:	xchg   ebp,eax
  41feaf:	shl    BYTE PTR [ecx+esi*4-0xf4617c],0x99
  41feb7:	sti    
  41feb8:	loop   0x41fe44
  41feba:	ss (bad) 
  41febc:	rol    BYTE PTR [edi],0xc7
  41febf:	dec    ebp
  41fec0:	int    0x39
  41fec2:	dec    esi
  41fec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fec4:	dec    ecx
  41fec5:	call   0x4c29:0x95c07937
  41fecc:	adc    DWORD PTR [ebx],eax
  41fece:	cmp    BYTE PTR ds:0x3fb5e532,0xe4
  41fed5:	test   DWORD PTR [ebp-0x26312e3],esp
  41fedb:	push   edx
  41fedc:	leave  
  41fedd:	stc    
  41fede:	mov    edi,0x6bde421
  41fee3:	mov    eax,0x59227604
  41fee8:	test   DWORD PTR [edx+0x7c69f333],esi
  41feee:	test   eax,0xfc133c52
  41fef3:	mov    ah,0x23
  41fef5:	iret   
  41fef6:	repnz push ds
  41fef8:	pop    ds
  41fef9:	lea    edi,[esi]
  41fefb:	jnp    0x41ff4e
  41fefd:	mov    ah,0xf0
  41feff:	rcl    al,0xf7
  41ff02:	(bad)  
  41ff04:	ss push ss
  41ff06:	fdiv   QWORD PTR [eax-0x41]
  41ff09:	mov    ebp,ebp
  41ff0b:	xchg   ebp,eax
  41ff0c:	xchg   edi,eax
  41ff0d:	in     eax,dx
  41ff0e:	idiv   BYTE PTR [esi+ecx*4]
  41ff11:	or     eax,0x7a0afa2e
  41ff16:	mov    ebx,0xcf78fbca
  41ff1b:	sub    esi,DWORD PTR [ebx+0x7b]
  41ff1e:	and    DWORD PTR [edx+0x57],esi
  41ff21:	cld    
  41ff22:	push   ebp
  41ff23:	or     esp,DWORD PTR [ebx+edi*1-0x3a]
  41ff27:	mov    BYTE PTR [edi+ebp*2+0x3e],bh
  41ff2b:	push   0xffffffe0
  41ff2d:	stc    
  41ff2e:	mov    ecx,0x6d4a646f
  41ff33:	sbb    DWORD PTR [ebx],0x19
  41ff36:	test   al,ah
  41ff38:	xor    al,0x3
  41ff3a:	dec    eax
  41ff3b:	jne    0x41fefc
  41ff3d:	repz push ecx
  41ff3f:	pop    ds
  41ff40:	shr    ah,0x24
  41ff43:	pop    ebp
  41ff44:	ror    DWORD PTR [esi],0x40
  41ff47:	rcl    DWORD PTR es:[edx-0x7c386282],cl
  41ff4e:	jp     0x41fef2
  41ff50:	mov    BYTE PTR [edi],cl
  41ff52:	test   al,0xc8
  41ff54:	jno    0x41ff9d
  41ff56:	in     eax,dx
  41ff57:	inc    ecx
  41ff58:	push   cs
  41ff59:	mov    BYTE PTR [eax-0x38],0x1f
  41ff5d:	push   es
  41ff5e:	add    DWORD PTR [ebp+0x43],edi
  41ff61:	mov    edi,0x64727a07
  41ff66:	call   DWORD PTR [esi+0x6c848fe0]
  41ff6c:	dec    esp
  41ff6d:	(bad)  
  41ff6e:	mov    ebp,0x3d6bdfbd
  41ff73:	test   BYTE PTR [ebp+0x5c],dh
  41ff76:	dec    edx
  41ff77:	mov    dl,0x72
  41ff79:	gs ins DWORD PTR es:[edi],dx
  41ff7b:	xor    eax,0xcea51f98
  41ff80:	arpl   bp,sp
  41ff82:	or     BYTE PTR [esi-0x72],ah
  41ff85:	sbb    BYTE PTR [esi-0x573fc40],dh
  41ff8b:	shl    BYTE PTR [ebp+0x1694454f],1
  41ff91:	int    0x74
  41ff93:	(bad)  
  41ff94:	dec    ebx
  41ff95:	(bad)  
  41ff96:	sub    ebx,DWORD PTR [ecx-0x734988e5]
  41ff9c:	push   ds
  41ff9d:	inc    eax
  41ff9e:	push   ss
  41ff9f:	push   cs
  41ffa0:	jns    0x41ff77
  41ffa2:	enter  0x40b3,0x2c
  41ffa6:	pop    es
  41ffa7:	sbb    al,0x9
  41ffa9:	es dec edx
  41ffab:	pop    edi
  41ffac:	jmp    0x41ffac
  41ffae:	mov    ds:0x7341723,eax
  41ffb3:	pop    es
  41ffb4:	shl    cl,0xdd
  41ffb7:	xor    al,0x6
  41ffb9:	aad    0x8b
  41ffbb:	(bad)  
  41ffbc:	mov    ebx,0x86e0c259
  41ffc1:	add    ax,0x590f
  41ffc5:	pmaddwd mm0,QWORD PTR [esp+ebp*4+0x56]
  41ffca:	mov    bl,0x86
  41ffcc:	into   
  41ffcd:	push   eax
  41ffce:	mov    dl,0x39
  41ffd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffd1:	out    dx,eax
  41ffd2:	lds    ebx,FWORD PTR [edi+esi*4-0x2d]
  41ffd6:	inc    esp
  41ffd7:	mov    eax,DWORD PTR es:[ebx]
  41ffda:	(bad)  
  41ffdb:	push   edi
  41ffdc:	gs int3 
  41ffde:	mov    bh,0xa1
  41ffe0:	cmc    
  41ffe1:	xchg   edi,eax
  41ffe2:	loop   0x41ff65
  41ffe4:	sbb    al,0x10
  41ffe6:	or     ah,BYTE PTR [ebx-0x11]
  41ffe9:	sti    
  41ffea:	add    eax,DWORD PTR [edx-0x79]
  41ffed:	cmp    ah,bh
  41ffef:	xor    DWORD PTR [eax+edi*1],edx
  41fff2:	push   eax
  41fff3:	dec    eax
  41fff4:	fsub   DWORD PTR [edi+ebx*4+0x64]
  41fff8:	push   ecx
  41fff9:	adc    eax,0x272c0324
  41fffe:	popa   
  41ffff:	xchg   esi,eax
  420000:	mov    esp,0xf4295581
  420005:	pushf  
  420006:	push   cs
  420007:	fwait
  420008:	addr16 out 0xe5,al
  42000b:	cs nop
  42000d:	push   0xcbd860fa
  420012:	mov    cl,0x5b
  420014:	cld    
  420015:	in     eax,dx
  420016:	add    DWORD PTR [ebx-0x4e],edi
  420019:	cmp    eax,0xe10620ff
  42001e:	scas   eax,DWORD PTR es:[edi]
  42001f:	jp     0x42009e
  420021:	pushf  
  420022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420023:	pop    ss
  420024:	pop    ebx
  420025:	xchg   esi,eax
  420026:	mov    ds:0x37159c00,eax
  42002b:	test   eax,0x84f9e8dd
  420030:	add    BYTE PTR [ecx],dl
  420032:	pop    es
  420033:	cs ret 
  420035:	mov    dl,0xd7
  420037:	into   
  420038:	jge    0x42002e
  42003a:	bndstx [ebp-0x3a195369],(bad)
  420041:	xor    dl,BYTE PTR [ecx+ebp*1]
  420044:	pop    edi
  420045:	jns    0x41ffe8
  420047:	rcr    DWORD PTR [edx],0x46
  42004a:	fdiv   st,st(5)
  42004c:	ds icebp 
  42004e:	repnz and al,BYTE PTR [edi-0x7659a636]
  420055:	sar    BYTE PTR ds:0x501f963f,cl
  42005b:	fmul   DWORD PTR [edi]
  42005d:	(bad)  
  42005e:	stos   DWORD PTR es:[edi],eax
  42005f:	test   DWORD PTR [eax-0x29403455],edx
  420065:	iret   
  420066:	mov    bh,0xb7
  420068:	mov    edi,0x12fa3269
  42006d:	xor    al,0x5f
  42006f:	repz dec ecx
  420071:	inc    edi
  420072:	xlat   BYTE PTR fs:[ebx]
  420074:	out    0x3a,eax
  420076:	jae    0x4200e2
  420078:	rol    DWORD PTR [esi],1
  42007a:	shl    DWORD PTR [ebp-0x39],0xd5
  42007e:	dec    ebx
  42007f:	mov    al,ds:0x2c24c61e
  420084:	iret   
  420085:	ret    0xebba
  420088:	shr    DWORD PTR [esi+0x28],cl
  42008b:	mov    ebp,0x28a17577
  420090:	mov    DWORD PTR [esi+edx*8],ebx
  420093:	fisubr DWORD PTR [ebx-0x77a1403b]
  420099:	(bad)  
  42009a:	rol    eax,cl
  42009c:	popf   
  42009d:	dec    edx
  42009e:	std    
  42009f:	xlat   BYTE PTR ds:[ebx]
  4200a0:	outs   dx,DWORD PTR ds:[esi]
  4200a1:	add    eax,0xad273cd5
  4200a6:	jecxz  0x420114
  4200a8:	cli    
  4200a9:	std    
  4200aa:	sbb    bh,bl
  4200ac:	dec    ebx
  4200ad:	stos   BYTE PTR es:[edi],al
  4200ae:	test   al,0x32
  4200b0:	mov    eax,ds:0x94e62181
  4200b5:	dec    ebp
  4200b6:	clc    
  4200b7:	and    bl,BYTE PTR [esi-0x53]
  4200ba:	enter  0xa877,0xda
  4200be:	adc    BYTE PTR [esi-0x394cffb2],al
  4200c4:	xchg   edx,eax
  4200c5:	pop    edx
  4200c6:	cdq    
  4200c7:	xor    ebp,0xffffff9a
  4200ca:	mov    ?,WORD PTR [eax]
  4200cc:	cmp    DWORD PTR [ebp-0x1c],0xdce855c9
  4200d3:	ret    0xbbab
  4200d6:	mov    ecx,0xa6d20742
  4200db:	or     esp,0x53c0403a
  4200e1:	imul   ecx,DWORD PTR [ebx],0x2b779013
  4200e7:	mov    ebp,DWORD PTR [edx+ecx*2]
  4200ea:	mov    cl,0x7c
  4200ec:	pop    edi
  4200ed:	test   eax,0xbf8c2813
  4200f2:	or     ch,cl
  4200f4:	mov    DWORD PTR [edx],ebx
  4200f6:	scas   al,BYTE PTR es:[edi]
  4200f7:	dec    ebp
  4200f8:	inc    ebx
  4200f9:	sub    bh,cl
  4200fb:	sub    al,0x83
  4200fd:	into   
  4200fe:	test   DWORD PTR [eax-0x2848024b],edi
  420104:	mov    ah,0xda
  420106:	ret    0x59f
  420109:	adc    BYTE PTR [eax+0x55],dl
  42010c:	call   0x1c4af38
  420111:	cmp    eax,0x4fd59cb1
  420116:	jg     0x420111
  420118:	in     al,0x6d
  42011a:	dec    esp
  42011b:	xor    BYTE PTR [ecx],al
  42011d:	not    DWORD PTR [ecx+esi*4]
  420120:	in     eax,0xd7
  420122:	out    0x2d,al
  420124:	mov    al,ds:0xa39ab689
  420129:	xchg   edx,ebx
  42012b:	jo     0x42013f
  42012d:	jnp    0x420180
  42012f:	push   ds
  420130:	mov    DWORD PTR [eax],ebp
  420132:	sub    BYTE PTR [esi],0xfc
  420135:	(bad)  
  420136:	mov    eax,?
  420138:	cmp    eax,0x82d4c1d
  42013d:	mov    dh,0xc
  42013f:	inc    esi
  420140:	sub    bl,BYTE PTR [ecx+0x51f4e3f7]
  420146:	pop    ebx
  420147:	aad    0x47
  420149:	jl     0x4200e0
  42014b:	xchg   ebp,eax
  42014c:	xchg   BYTE PTR [ebp-0x49],dl
  42014f:	add    cl,BYTE PTR [ebx-0xc4d6c08]
  420155:	data16 xlat BYTE PTR ds:[ebx]
  420157:	fcom   QWORD PTR [edi+0x54]
  42015a:	dec    BYTE PTR [ecx-0x24]
  42015d:	cmp    cl,bl
  42015f:	jmp    0x42015a
  420161:	call   0x413e:0x53112641
  420168:	pop    es
  420169:	out    dx,al
  42016a:	xchg   esp,eax
  42016b:	sar    BYTE PTR [ebx-0x51],0x19
  42016f:	mov    ds:0x3f825ec4,al
  420174:	mov    edx,?
  420176:	adc    cl,dh
  420178:	mov    bh,BYTE PTR [ebx+0x43]
  42017b:	add    eax,DWORD PTR [esi]
  42017d:	xchg   BYTE PTR [eax+0x31],dh
  420180:	(bad)  
  420182:	dec    esi
  420183:	push   ebx
  420184:	fsubp  st(5),st
  420186:	adc    al,0xc6
  420188:	lds    ebx,FWORD PTR ds:0x2e29ed26
  42018e:	adc    eax,0x8a49c9cf
  420193:	ret    0x5670
  420196:	fsub   st,st(2)
  420198:	js     0x420171
  42019a:	mov    dl,ah
  42019c:	cli    
  42019d:	adc    dl,dl
  42019f:	inc    ebx
  4201a0:	push   ds
  4201a1:	sti    
  4201a2:	xchg   ecx,eax
  4201a3:	pop    ebp
  4201a4:	jg     0x420126
  4201a6:	fwait
  4201a7:	(bad)  
  4201a8:	popf   
  4201a9:	add    al,0x16
  4201ab:	cmp    ebp,ebp
  4201ad:	cmp    DWORD PTR [edx+0x7e524c1a],0x53
  4201b4:	jno    0x4201a1
  4201b6:	jae    0x420229
  4201b8:	shr    DWORD PTR [edi-0x3d2f89b2],cl
  4201be:	shl    BYTE PTR [edx+0x3d],0x7b
  4201c2:	(bad)  
  4201c3:	and    esi,DWORD PTR [esi]
  4201c5:	fs or  al,0xd7
  4201c8:	rcl    DWORD PTR [ecx],cl
  4201ca:	test   ecx,edi
  4201cc:	add    BYTE PTR [ebx],dh
  4201ce:	retf   
  4201cf:	inc    ecx
  4201d0:	add    DWORD PTR [edx],esi
  4201d2:	push   ebp
  4201d3:	jo     0x42018d
  4201d5:	mov    eax,ebx
  4201d7:	jmp    0xfb1d:0x315544c0
  4201de:	fisub  DWORD PTR [edi+0x56]
  4201e1:	mov    dh,0x72
  4201e3:	ss aad 0x10
  4201e6:	sub    ebx,DWORD PTR [eax+0x14d0c644]
  4201ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ee:	jg     0x42025c
  4201f0:	ficomp DWORD PTR [ebx-0x5d]
  4201f3:	jl     0x4201f8
  4201f5:	mov    fs,ecx
  4201f7:	aaa    
  4201f8:	int    0x37
  4201fa:	push   ebp
  4201fb:	aad    0x6a
  4201fd:	aam    0x21
  4201ff:	iret   
  420200:	xor    eax,0xf17a3089
  420205:	sti    
  420206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420207:	dec    esp
  420208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420209:	and    BYTE PTR [esi-0x6e],al
  42020c:	push   ecx
  42020d:	sahf   
  42020e:	daa    
  42020f:	sub    eax,0x8faaf761
  420214:	fsubr  DWORD PTR [ecx+0x5c8d581]
  42021a:	cmp    dh,ah
  42021c:	sbb    eax,0xdce243e1
  420221:	jle    0x42020e
  420223:	jns    0x420205
  420225:	xchg   esp,eax
  420226:	or     BYTE PTR [eax],bl
  420228:	fwait
  420229:	sbb    DWORD PTR [ebp+0x277be718],ebx
  42022f:	jl     0x42024d
  420231:	push   ebx
  420232:	inc    edx
  420233:	mov    ch,0xe2
  420235:	push   0xf7c5e3d4
  42023a:	mov    bh,0x9e
  42023c:	fisttp WORD PTR [ebx+0x1a478cf5]
  420242:	xor    eax,esp
  420244:	sub    eax,DWORD PTR [edi]
  420246:	hlt    
  420247:	mov    edx,DWORD PTR [ebx+0x79903a3b]
  42024d:	add    bh,BYTE PTR [ebp-0x6daa37aa]
  420253:	ret    
  420254:	cwde   
  420255:	dec    esi
  420256:	pop    edi
  420257:	add    ah,ch
  420259:	xor    eax,0xef4b1d0a
  42025e:	out    0x79,al
  420260:	shl    bh,0xd8
  420263:	aam    0xce
  420265:	retf   
  420266:	or     ch,BYTE PTR [eax]
  420268:	data16 add bl,cl
  42026b:	add    dl,BYTE PTR [eax-0x429b04b5]
  420271:	sbb    eax,0x9c4fe715
  420276:	xchg   edx,eax
  420277:	cmp    al,0x7c
  420279:	call   DWORD PTR [esi-0x458b9fac]
  42027f:	sbb    ebp,DWORD PTR [ecx+0x5a]
  420282:	xor    al,0x7d
  420284:	out    0x32,eax
  420286:	push   cs
  420287:	push   0x6180bcfc
  42028c:	in     eax,dx
  42028d:	outs   dx,DWORD PTR ds:[esi]
  42028e:	jp     0x4202e5
  420290:	sub    ecx,DWORD PTR [edx-0x65b211bd]
  420296:	lods   al,BYTE PTR ds:[esi]
  420297:	scas   eax,DWORD PTR es:[edi]
  420298:	mov    edx,DWORD PTR [ebx]
  42029a:	ficomp WORD PTR [edi+ebx*8-0x1633380f]
  4202a1:	fist   WORD PTR [ebx]
  4202a3:	(bad)  
  4202a5:	pop    ebx
  4202a6:	inc    ecx
  4202a7:	shl    ebp,0xe2
  4202aa:	and    ebx,edx
  4202ac:	xchg   edi,eax
  4202ad:	mov    ebp,0x898b5633
  4202b2:	mov    ds:0x6370a77c,al
  4202b7:	fldenv [esi-0x67]
  4202ba:	or     eax,0x2fafdc56
  4202bf:	(bad)  
  4202c0:	addr16 jo 0x4202f9
  4202c3:	mov    ecx,0x569bfe78
  4202c8:	fisttp QWORD PTR [ebp+ebx*2+0x62]
  4202cc:	inc    ebp
  4202cd:	push   ds
  4202ce:	and    al,cl
  4202d0:	mov    cl,0x86
  4202d2:	xor    DWORD PTR [ecx-0x1f24948f],0x69
  4202d9:	rcr    DWORD PTR [ebp+0x6c],cl
  4202dc:	je     0x4202a2
  4202de:	push   edi
  4202df:	rcr    ebx,cl
  4202e1:	loopne 0x420332
  4202e3:	nop
  4202e4:	not    BYTE PTR [ecx+ecx*8-0x63473912]
  4202eb:	imul   DWORD PTR ds:0x36b8d37a
  4202f1:	push   eax
  4202f2:	sbb    DWORD PTR [edx-0x4],0xffffffc1
  4202f6:	dec    edi
  4202f7:	xor    dh,BYTE PTR [edx+0x426ed24e]
  4202fd:	(bad)
  420300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420301:	hlt    
  420302:	mov    BYTE PTR [esi],0xf3
  420305:	(bad)  
  420306:	popa   
  420307:	mov    ecx,0xfc1687cb
  42030c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42030d:	add    al,0xef
  42030f:	scas   al,BYTE PTR es:[edi]
  420310:	es mov bl,0xb1
  420313:	push   0x8e75f98c
  420318:	test   al,0xfa
  42031a:	adc    eax,0x819f6db9
  42031f:	xor    BYTE PTR [ebp+ebp*4+0x4d],bl
  420323:	or     ebp,DWORD PTR [ecx]
  420325:	(bad)  
  420327:	mov    eax,ds:0xfce5f5ec
  42032c:	cli    
  42032d:	leave  
  42032e:	mov    al,0x88
  420330:	mov    ch,0x7a
  420332:	jns    0x4202c4
  420334:	jnp    0x420330
  420336:	pop    edx
  420337:	inc    ecx
  420338:	jecxz  0x4202ed
  42033a:	dec    edi
  42033b:	adc    eax,0x55ce6c19
  420340:	push   ss
  420341:	mov    ebx,0xd2e873ba
  420346:	xor    BYTE PTR [ebp-0x6d],dh
  420349:	mov    fs,WORD PTR [edi]
  42034b:	int3   
  42034c:	pop    edi
  42034d:	fcmovbe st,st(0)
  42034f:	in     eax,dx
  420350:	adc    BYTE PTR [edx],dh
  420352:	scas   al,BYTE PTR es:[edi]
  420353:	rol    esp,0x23
  420356:	imul   ebp,DWORD PTR [edx-0xf6f4910],0xffffffd6
  42035d:	cwde   
  42035e:	ror    DWORD PTR [ebx-0x5f],0x81
  420362:	mov    edi,0x634d44ca
  420367:	cmp    DWORD PTR [ecx+0x6a0ccdd5],ebx
  42036d:	std    
  42036e:	out    dx,eax
  42036f:	and    BYTE PTR [eax-0x1f6da39b],bl
  420375:	pop    ds
  420376:	sbb    bl,BYTE PTR [edi]
  420378:	cmp    al,0xa5
  42037a:	popa   
  42037b:	in     al,dx
  42037c:	(bad)  
  42037d:	call   0xe471c6b0
  420382:	setbe  BYTE PTR [ecx+0x60]
  420386:	in     al,0xc5
  420388:	xor    BYTE PTR [ebx],0x9f
  42038b:	(bad)  
  42038c:	sbb    eax,0x556fdd92
  420391:	stos   DWORD PTR es:[edi],eax
  420392:	sub    al,0x8b
  420394:	pop    edx
  420395:	xchg   edx,eax
  420396:	pop    edi
  420397:	(bad)  
  420398:	pextrw esp,(bad),0xc5
  42039a:	and    eax,0xd57df81d
  42039f:	stos   BYTE PTR es:[edi],al
  4203a0:	cmc    
  4203a1:	jmp    FWORD PTR [edx]
  4203a3:	mov    ah,0x38
  4203a5:	leave  
  4203a6:	adc    al,0xc0
  4203a8:	adc    BYTE PTR [ebx+eax*2+0x2c],dl
  4203ac:	sbb    eax,0x209f824c
  4203b1:	mov    edi,0xc887bbd0
  4203b6:	jnp    0x42041f
  4203b8:	or     al,0xb
  4203ba:	idiv   DWORD PTR [eax-0x2f8491b6]
  4203c0:	data16 fcomp st(5)
  4203c3:	push   0x2a5c1f7b
  4203c8:	mov    ds:0x118782ef,al
  4203cd:	test   eax,0x88ac4582
  4203d2:	cli    
  4203d3:	fs jp  0x4203a3
  4203d6:	xchg   edi,eax
  4203d7:	mov    gs,WORD PTR [ecx]
  4203d9:	stc    
  4203da:	cmp    BYTE PTR [esi+0x5f4f8d7c],cl
  4203e0:	push   edi
  4203e1:	int3   
  4203e2:	xor    ebp,edx
  4203e4:	cmp    esi,esi
  4203e6:	add    cl,BYTE PTR [edx+0x5a3b6e61]
  4203ec:	add    eax,0x473e2ef0
  4203f1:	and    dl,BYTE PTR [eax]
  4203f3:	inc    ebx
  4203f4:	fucomi st,st(4)
  4203f6:	sub    DWORD PTR [ecx+0x4cc643ae],ebx
  4203fc:	mov    eax,ds:0xd83cc93a
  420401:	cmp    ebx,DWORD PTR [ebp+0xd5824ed]
  420407:	sbb    DWORD PTR [edx+0x54f1c46],eax
  42040d:	imul   esp,DWORD PTR [edx*4+0x24680e5],0xffffff82
  420415:	jp     0x42039a
  420417:	sbb    DWORD PTR [esi-0x45],ecx
  42041a:	mov    ebx,0xe3fc3dd1
  42041f:	cwde   
  420420:	mov    eax,ds:0x718eedf0
  420425:	or     edx,esi
  420427:	sar    BYTE PTR [edx],cl
  420429:	aaa    
  42042a:	or     al,0x2
  42042c:	scas   al,BYTE PTR es:[edi]
  42042d:	cs adc eax,0xffffffcc
  420431:	imul   esp,edx,0x1f
  420434:	sbb    eax,0x488b751d
  420439:	js     0x4204a7
  42043b:	fucomi st,st(0)
  42043d:	push   edx
  42043e:	test   DWORD PTR [edi+0x79],ebp
  420441:	adc    eax,0x84c32424
  420446:	dec    ebp
  420447:	aaa    
  420448:	mov    ebx,0x9a1848c0
  42044d:	dec    eax
  42044e:	or     esi,DWORD PTR [esp+ebp*4]
  420451:	sbb    ebx,edx
  420453:	cwde   
  420454:	inc    ebx
  420455:	into   
  420456:	aas    
  420457:	sub    al,0x5
  420459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045a:	inc    edx
  42045b:	mov    ch,0x5b
  42045d:	or     DWORD PTR [ebp-0x5d9cdb80],esp
  420463:	test   DWORD PTR ds:0xebc6abf1,esi
  420469:	xlat   BYTE PTR ds:[ebx]
  42046a:	mov    ds:0xc98f7489,eax
  42046f:	mov    cl,0xc5
  420471:	aad    0x41
  420473:	dec    esi
  420474:	enter  0x5853,0x66
  420478:	adc    BYTE PTR [edi-0x42a68ea5],dh
  42047e:	es add eax,0x591e947a
  420484:	mov    dh,0xe7
  420486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420487:	and    dh,BYTE PTR [eax]
  420489:	in     al,0x18
  42048b:	pusha  
  42048c:	fwait
  42048d:	loope  0x42050d
  42048f:	rcl    DWORD PTR [edx+0x3b],cl
  420492:	scas   al,BYTE PTR es:[edi]
  420493:	(bad)  
  420494:	pop    ss
  420495:	push   esp
  420496:	adc    BYTE PTR [eax+0x18],al
  420499:	outs   dx,BYTE PTR ds:[esi]
  42049a:	sar    DWORD PTR [esi+0x1d],0x77
  42049e:	cli    
  42049f:	idiv   DWORD PTR [ecx+ebx*4-0x13]
  4204a3:	push   ss
  4204a4:	adc    al,0x44
  4204a6:	mov    edi,0xcf080f42
  4204ab:	mov    edx,0x8917f2aa
  4204b0:	xor    al,0xef
  4204b2:	inc    edi
  4204b3:	push   eax
  4204b4:	in     eax,dx
  4204b5:	pop    es
  4204b6:	and    al,0x61
  4204b8:	and    DWORD PTR [edx+0x4c],edx
  4204bb:	pusha  
  4204bc:	je     0x4204c6
  4204be:	add    al,0xcd
  4204c0:	lds    ebx,FWORD PTR [esi+0x6c]
  4204c3:	pop    esp
  4204c4:	(bad)  
  4204c5:	fbld   TBYTE PTR [ebx+0x7f8fa60b]
  4204cb:	retf   0x9080
  4204ce:	out    0xd4,eax
  4204d0:	(bad)  
  4204d1:	or     edx,DWORD PTR [ecx+edi*8]
  4204d4:	pop    esi
  4204d5:	fwait
  4204d6:	dec    edx
  4204d7:	mov    ds:0xc3d0c6ac,al
  4204dc:	dec    esp
  4204dd:	aam    0xf8
  4204df:	popf   
  4204e0:	cwde   
  4204e1:	fisub  WORD PTR [esi]
  4204e3:	ins    DWORD PTR es:[edi],dx
  4204e4:	repnz pushf 
  4204e6:	xchg   DWORD PTR ds:0x61d31c18,edx
  4204ec:	adc    al,0xd1
  4204ee:	add    al,BYTE PTR [edx-0x7c]
  4204f1:	out    dx,al
  4204f2:	in     eax,dx
  4204f3:	and    al,0xd7
  4204f5:	scas   al,BYTE PTR es:[edi]
  4204f6:	dec    esi
  4204f7:	push   ebp
  4204f8:	inc    edi
  4204f9:	pop    ecx
  4204fa:	adc    eax,0x75614fc6
  4204ff:	xchg   edi,eax
  420500:	mov    ch,0x51
  420502:	retf   0x4f27
  420505:	add    BYTE PTR [esi-0x3c],bl
  420508:	dec    ebp
  420509:	call   0xf2bbeae6
  42050e:	(bad)  [ebx-0x1c]
  420511:	jae    0x4204d9
  420513:	outs   dx,BYTE PTR ds:[esi]
  420514:	lods   al,BYTE PTR ds:[esi]
  420515:	bound  edi,QWORD PTR [eax]
  420517:	inc    edi
  420518:	adc    ah,BYTE PTR [esi]
  42051a:	dec    ecx
  42051b:	adc    BYTE PTR [ebx+0x57f2ae17],ah
  420521:	dec    esp
  420522:	add    esi,edx
  420524:	xor    DWORD PTR [eax+edx*8-0x412db632],0xffffffb7
  42052c:	and    eax,0x23cb11d7
  420531:	jmp    0x57b3:0xb06cbe6
  420538:	sbb    BYTE PTR [ebp+0x3d06ac4a],bh
  42053e:	or     esp,esp
  420540:	aas    
  420541:	mov    cl,0x33
  420543:	cs jns 0x4204df
  420546:	popf   
  420547:	call   0x8e87c6d6
  42054c:	aaa    
  42054d:	in     eax,dx
  42054e:	jo     0x420542
  420550:	xor    DWORD PTR [ebx],esp
  420552:	shl    ecx,cl
  420554:	add    al,0xa3
  420556:	adc    eax,0x8e224d59
  42055b:	sub    al,0xcf
  42055d:	cmp    edx,ebp
  42055f:	clc    
  420560:	setp   BYTE PTR [ecx+eax*1-0x1a]
  420565:	xor    BYTE PTR [edx-0x6f],0x3d
  420569:	les    ecx,FWORD PTR [ebx]
  42056b:	loopne 0x4205b0
  42056d:	shl    DWORD PTR [esi-0x5d],1
  420570:	loope  0x4205e8
  420572:	frstor [edi+0x8]
  420575:	xor    ecx,ebp
  420577:	push   ecx
  420578:	in     al,0x7a
  42057a:	shl    esi,0x8f
  42057d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42057f:	lods   al,BYTE PTR ds:[esi]
  420580:	imul   ebx,ebx,0x3a50d3fb
  420586:	mov    ecx,0xc9b519ec
  42058b:	adc    dl,cl
  42058d:	jbe    0x4205d6
  42058f:	pop    esi
  420590:	jp     0x420567
  420592:	iret   
  420593:	cwde   
  420594:	mov    esi,0x4d90a37c
  420599:	lahf   
  42059a:	and    al,0x2f
  42059c:	aam    0xf7
  42059e:	add    DWORD PTR [ebp+esi*4+0x151abb5d],0xb
  4205a6:	sub    edx,DWORD PTR [ecx+0x4e25b26b]
  4205ac:	push   edi
  4205ad:	das    
  4205ae:	retf   0xdc0a
  4205b1:	test   DWORD PTR [edx-0x1],edi
  4205b4:	xchg   edi,eax
  4205b5:	pop    esp
  4205b6:	mov    WORD PTR [edi+0x2e32387],es
  4205bc:	push   esp
  4205bd:	subps  xmm4,XMMWORD PTR [ebx+0x7f631600]
  4205c4:	aad    0x39
  4205c6:	dec    edx
  4205c7:	mov    bl,0xc4
  4205c9:	cld    
  4205ca:	push   esp
  4205cb:	mov    edx,0xb7ade761
  4205d0:	jbe    0x420595
  4205d2:	jnp    0x4205b1
  4205d4:	mov    al,ds:0xcbbe3e1a
  4205d9:	dec    eax
  4205da:	hlt    
  4205db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205dc:	inc    ebx
  4205dd:	fdivr  st,st(4)
  4205df:	or     eax,0x30ebf747
  4205e4:	rcl    DWORD PTR [eax],0x12
  4205e7:	xor    esp,0xffffffb3
  4205ea:	mov    bl,0xde
  4205ec:	xor    edx,esi
  4205ee:	test   eax,0x2aac5ceb
  4205f3:	cmp    al,0x41
  4205f5:	push   ss
  4205f6:	xor    ebx,DWORD PTR [ecx+0x3c57a2f6]
  4205fc:	push   ss
  4205fd:	push   edx
  4205fe:	fwait
  4205ff:	icebp  
  420600:	mov    esp,0xb56e9c2c
  420605:	mov    bh,0x16
  420607:	mov    edx,0x8dbd1ecc
  42060c:	pop    esp
  42060d:	aam    0x18
  42060f:	cld    
  420610:	add    cl,dh
  420612:	sar    esi,0x55
  420615:	pop    ecx
  420616:	dec    esi
  420617:	jl     0x420685
  420619:	mov    esi,0xeadfcc88
  42061e:	lea    edx,[ebp+0x5a]
  420621:	call   0x7a72e2b5
  420626:	xchg   esi,eax
  420627:	icebp  
  420628:	add    DWORD PTR [esi],edx
  42062a:	cwde   
  42062b:	sbb    al,0x14
  42062d:	push   edi
  42062e:	retf   
  42062f:	pop    ecx
  420630:	out    0xf6,al
  420632:	cmp    cl,BYTE PTR [eax+0x4ad25eac]
  420638:	add    DWORD PTR ds:0x863efd3a,esi
  42063e:	fucomip st,st(6)
  420640:	cmp    eax,0xb29f69d9
  420645:	hlt    
  420646:	neg    DWORD PTR [edi]
  420648:	jmp    0xbdea:0x2dc14602
  42064f:	add    ch,BYTE PTR [ecx]
  420651:	mov    ecx,0x53d1281c
  420656:	push   ecx
  420657:	jle    0x42069e
  420659:	sbb    al,0x2c
  42065b:	je     0x420654
  42065d:	sub    bh,BYTE PTR [ecx+eax*8+0x39]
  420661:	retf   
  420662:	scas   al,BYTE PTR es:[edi]
  420663:	pop    esi
  420664:	sahf   
  420665:	push   0xffffffdf
  420667:	pop    esi
  420668:	inc    eax
  420669:	sbb    al,0x41
  42066b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42066c:	rol    BYTE PTR [edx],1
  42066e:	add    edx,DWORD PTR [edi]
  420670:	pop    ecx
  420671:	in     al,0x90
  420673:	mov    BYTE PTR [ebx-0xb],al
  420676:	ret    
  420677:	xchg   esp,eax
  420678:	sbb    al,0x76
  42067a:	or     bh,BYTE PTR [eax]
  42067c:	mov    cs,WORD PTR [edx-0x288e0fb5]
  420682:	loopne 0x42068e
  420684:	pop    es
  420685:	inc    edx
  420686:	mov    dh,0x33
  420688:	hlt    
  420689:	and    BYTE PTR [eax+0x10],bh
  42068c:	fstp   DWORD PTR [eax-0x27]
  42068f:	mov    ch,0x6e
  420691:	sbb    al,0xd7
  420693:	daa    
  420694:	add    al,0x4f
  420696:	es daa 
  420698:	inc    edi
  420699:	jecxz  0x420669
  42069b:	in     al,0x4a
  42069d:	jle    0x420711
  42069f:	out    0xf7,eax
  4206a1:	push   ss
  4206a2:	mov    WORD PTR [esi],cs
  4206a4:	dec    esp
  4206a5:	jge    0x42063e
  4206a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a8:	std    
  4206a9:	adc    DWORD PTR [ebp+edx*8-0x3b],edx
  4206ad:	xlat   BYTE PTR ds:[ebx]
  4206ae:	push   0xffffffcc
  4206b0:	fadd   DWORD PTR [edi+0x18def548]
  4206b6:	aaa    
  4206b7:	pop    es
  4206b8:	inc    edx
  4206b9:	fsubrp st(6),st
  4206bb:	pushf  
  4206bc:	aad    0x9
  4206be:	out    dx,al
  4206bf:	fadd   QWORD PTR [edx+0x41]
  4206c2:	mov    esi,DWORD PTR [edx+0x55]
  4206c5:	xchg   esp,eax
  4206c6:	mov    dh,0x24
  4206c8:	mov    ds:0x3d97f730,al
  4206cd:	ds sbb ch,dh
  4206d0:	nop
  4206d1:	call   0xbd1:0x3986cd4c
  4206d8:	and    ah,bl
  4206da:	xchg   edx,eax
  4206db:	fwait
  4206dc:	xor    esp,esp
  4206de:	jge    0x4206bc
  4206e0:	ja     0x420752
  4206e2:	mov    edi,0xd67354fa
  4206e7:	stos   BYTE PTR es:[edi],al
  4206e8:	jae    0x420759
  4206ea:	adc    eax,0x32341dee
  4206ef:	push   esp
  4206f0:	jp     0x4206b6
  4206f2:	ds aad 0x86
  4206f5:	mov    bl,0x8c
  4206f7:	ss mov dl,0x2b
  4206fa:	xchg   edi,eax
  4206fb:	popa   
  4206fc:	mov    ah,0x38
  4206fe:	inc    esi
  4206ff:	fldcw  WORD PTR [edx-0x1426dc2c]
  420705:	sbb    BYTE PTR [ebp-0x50],dh
  420708:	sbb    bl,BYTE PTR [esi]
  42070a:	xchg   esp,eax
  42070b:	comiss xmm4,DWORD PTR [ebx]
  42070e:	or     ebx,DWORD PTR [esi-0x6f]
  420711:	cmp    al,0xf2
  420713:	in     eax,dx
  420714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420715:	psadbw mm0,mm6
  420718:	rcl    eax,cl
  42071a:	inc    edi
  42071b:	sub    BYTE PTR [ebx+0x17],ah
  42071e:	xor    esp,DWORD PTR [ebp+0x2b757ea7]
  420724:	jg     0x420766
  420726:	cmp    DWORD PTR [edi-0x10bc90a7],ecx
  42072c:	aad    0x10
  42072e:	(bad)  
  42072f:	sub    al,0x25
  420731:	mov    esp,0xc22a8905
  420736:	adc    esp,ebp
  420738:	mov    ebx,esi
  42073a:	clc    
  42073b:	inc    ebp
  42073c:	ins    BYTE PTR es:[edi],dx
  42073d:	dec    esi
  42073e:	iret   
  42073f:	(bad)  
  420740:	mov    bh,0xc9
  420742:	mov    ah,0x35
  420744:	gs xchg edi,eax
  420746:	and    DWORD PTR [edx+0x1b],ebx
  420749:	or     BYTE PTR [edi+0xe],dh
  42074c:	adc    dh,cl
  42074e:	jns    0x420782
  420750:	add    cl,BYTE PTR [ebx+0x19a57bee]
  420756:	or     cl,dh
  420758:	shl    DWORD PTR [ebx+edi*2+0x47e98433],cl
  42075f:	test   DWORD PTR [ebp-0x4eed196],eax
  420765:	fwait
  420766:	in     al,0x59
  420768:	je     0x420779
  42076a:	dec    edi
  42076b:	push   eax
  42076c:	pop    ecx
  42076d:	fldcw  WORD PTR [eax+0x4e45deb8]
  420773:	call   0xc87f:0xe3f32a29
  42077a:	ror    DWORD PTR [esi+0x43ed7d14],0x31
  420781:	test   DWORD PTR [ebx+ebx*4-0x61],0x7cefc2d1
  420789:	and    DWORD PTR gs:[ecx],ecx
  42078c:	push   0xffffffc3
  42078e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42078f:	xchg   edx,eax
  420790:	imul   esp,DWORD PTR [edi-0x14],0xb92ba154
  420797:	pop    esi
  420798:	mov    esi,0x2ae5497f
  42079d:	add    esi,esp
  42079f:	mov    edi,0x2e425f76
  4207a4:	jmp    0xf2d4266f
  4207a9:	push   edi
  4207aa:	push   eax
  4207ab:	mov    ebx,0xb9649bc2
  4207b0:	mov    ds:0xff41832a,eax
  4207b5:	mov    edx,0x496abfcc
  4207ba:	cli    
  4207bb:	mov    ds:0x11af20a1,al
  4207c0:	adc    edi,0x33d59a57
  4207c6:	sub    BYTE PTR [ecx+0x7d],cl
  4207c9:	lahf   
  4207ca:	shr    ch,0x8b
  4207cd:	or     ah,al
  4207cf:	xor    eax,0x4be4e982
  4207d4:	inc    esi
  4207d5:	arpl   bx,dx
  4207d7:	mov    edx,0x56f292d6
  4207dc:	pop    ecx
  4207dd:	stos   BYTE PTR es:[edi],al
  4207de:	or     DWORD PTR [ebp+0x2e48b2d1],ebp
  4207e4:	xor    al,0x22
  4207e6:	pop    ds
  4207e7:	mov    ds:0x78d8715e,al
  4207ec:	mov    dh,0x7f
  4207ee:	xchg   edi,eax
  4207ef:	popa   
  4207f0:	push   ss
  4207f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207f2:	jmp    0x4207d0
  4207f4:	nop
  4207f5:	xlat   BYTE PTR ds:[ebx]
  4207f6:	push   edx
  4207f7:	jmp    0xe841:0x9181c525
  4207fe:	pushf  
  4207ff:	sahf   
  420800:	lock loope 0x42087e
  420803:	ins    BYTE PTR es:[edi],dx
  420804:	xchg   esp,eax
  420805:	pusha  
  420806:	pop    esp
  420807:	lahf   
  420808:	mov    ebx,0x3126e075
  42080d:	xlat   BYTE PTR ds:[ebx]
  42080e:	lock sub bl,dh
  420811:	cmp    ch,BYTE PTR [ebx]
  420813:	xor    bl,BYTE PTR [ebx]
  420815:	jg     0x4207e8
  420817:	xchg   esi,eax
  420819:	call   0x39af:0x1703dc6b
  420820:	(bad)  
  420821:	sahf   
  420822:	iret   
  420823:	xchg   esi,eax
  420824:	pop    edx
  420825:	add    al,0x29
  420827:	ins    BYTE PTR es:[edi],dx
  420828:	sti    
  420829:	and    BYTE PTR [ebp+0x46d874fc],bl
  42082f:	ja     0x4207c8
  420831:	repnz mov edi,0x82f95dc0
  420837:	enter  0x2c42,0xcc
  42083b:	outs   dx,BYTE PTR ds:[esi]
  42083c:	or     cl,al
  42083e:	inc    esp
  42083f:	std    
  420840:	cmp    ah,dl
  420842:	dec    esi
  420843:	push   ss
  420844:	pop    edi
  420845:	cmp    eax,0x2e42dc4
  42084a:	mov    al,ds:0x385f4ef7
  42084f:	fwait
  420850:	push   0x5e
  420852:	adc    ch,BYTE PTR [ecx+0x64]
  420855:	push   0xffffffcb
  420857:	call   0x4a1b8321
  42085c:	mov    edx,0x7fe98e88
  420861:	inc    edi
  420862:	dec    DWORD PTR gs:[ebp+0x53]
  420866:	arpl   WORD PTR [eax+ebx*2],sp
  420869:	inc    edx
  42086a:	mov    esi,0xa5f7185d
  42086f:	das    
  420870:	in     eax,0x9f
  420872:	retf   
  420873:	xor    dh,BYTE PTR [ecx]
  420875:	popa   
  420876:	into   
  420877:	sub    edx,DWORD PTR [ebp-0x14]
  42087a:	lods   eax,DWORD PTR ds:[esi]
  42087b:	push   ebp
  42087c:	(bad)  
  42087d:	call   0xe03a:0xc78f8a33
  420884:	pusha  
  420885:	mov    WORD PTR [esi+0x1eb4da5c],?
  42088b:	lods   al,BYTE PTR ds:[esi]
  42088c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088d:	sahf   
  42088e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088f:	push   eax
  420890:	xchg   ebx,eax
  420891:	xchg   DWORD PTR [eax+0x66997b63],edi
  420897:	xchg   esp,eax
  420898:	pop    es
  420899:	mov    esp,0x869fa9e2
  42089e:	cmp    DWORD PTR [edx],edx
  4208a0:	lods   al,BYTE PTR ds:[esi]
  4208a1:	mov    al,ds:0x9447188f
  4208a6:	mov    dh,0x3a
  4208a8:	loop   0x42084e
  4208aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ab:	push   edi
  4208ac:	retf   
  4208ad:	xor    ebx,DWORD PTR [eax+0x621c8da8]
  4208b3:	ror    DWORD PTR [edx],0x1f
  4208b6:	dec    ebp
  4208b7:	lds    esp,FWORD PTR [edx-0x6]
  4208ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208bb:	jmp    0x94fd:0xdc4da0f8
  4208c2:	dec    BYTE PTR [esi+ecx*2+0x19190ca9]
  4208c9:	mov    dl,0x44
  4208cb:	sub    al,0xb7
  4208cd:	mov    ch,0xee
  4208cf:	pop    ss
  4208d0:	fnsave [edi-0x2c2dedce]
  4208d6:	add    DWORD PTR [eax-0x6],edx
  4208d9:	mov    ch,0x20
  4208db:	jle    0x42095b
  4208dd:	sti    
  4208de:	in     al,0x15
  4208e0:	mov    cl,0x79
  4208e2:	pop    ss
  4208e3:	pop    es
  4208e4:	lahf   
  4208e5:	and    edi,DWORD PTR [ecx-0x4b]
  4208e8:	sbb    dh,BYTE PTR [edi]
  4208ea:	ds retf 
  4208ec:	mov    esi,0x29dd8512
  4208f1:	add    DWORD PTR [ecx+0x6b],edi
  4208f4:	jns    0x4208f5
  4208f6:	mov    WORD PTR [ecx],ss
  4208f8:	test   eax,0x64d6de2f
  4208fd:	inc    edx
  4208fe:	mov    dl,0x90
  420900:	sar    DWORD PTR [ebx+0x1],cl
  420903:	lods   al,BYTE PTR ds:[esi]
  420904:	lds    bp,DWORD PTR [ecx-0x67]
  420908:	cmp    cl,BYTE PTR [ebp+0x40]
  42090b:	cmp    eax,0xf27bfc99
  420910:	adc    ch,cl
  420912:	icebp  
  420913:	ja     0x420969
  420915:	je     0x420970
  420917:	xor    esp,DWORD PTR [ebx+ebp*4-0x6f]
  42091b:	jecxz  0x4208d0
  42091d:	arpl   WORD PTR [eax],sp
  42091f:	pusha  
  420920:	into   
  420921:	cli    
  420922:	jmp    0xfe2c59d6
  420927:	mov    edi,0xd9256731
  42092c:	mov    bh,0x4e
  42092e:	push   edi
  42092f:	scas   al,BYTE PTR es:[edi]
  420930:	push   ebx
  420931:	push   eax
  420932:	sub    BYTE PTR [ebx-0x4dd16f55],al
  420938:	lods   eax,DWORD PTR ds:[esi]
  420939:	cmc    
  42093a:	mov    al,0x6a
  42093c:	mov    ch,0x4c
  42093e:	pop    edi
  42093f:	dec    ebp
  420940:	cli    
  420941:	mov    esp,0x8f134c52
  420946:	icebp  
  420947:	jnp    0x4208dc
  420949:	test   BYTE PTR [ecx-0x38b3cadf],0x23
  420950:	jb     0x4208d3
  420952:	mov    esi,0x3efbd30a
  420957:	adc    al,0x61
  420959:	imul   eax,DWORD PTR [esi-0x73],0xc784ca8b
  420960:	mov    ebx,0xf96feb
  420965:	ss lods eax,DWORD PTR ds:[esi]
  420968:	dec    esp
  420969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42096a:	and    ah,BYTE PTR [eax+edx*2-0x7542de5b]
  420971:	retf   
  420972:	jl     0x4209e5
  420974:	addr16 loopne 0x42097a
  420977:	cli    
  420978:	add    BYTE PTR [ecx],ah
  42097a:	ffree  st(0)
  42097c:	pop    ecx
  42097d:	rcl    DWORD PTR [edx],1
  42097f:	hlt    
  420980:	xlat   BYTE PTR ds:[ebx]
  420981:	sahf   
  420982:	push   esi
  420983:	mov    dh,0xd3
  420985:	mov    bl,0xf4
  420987:	cmp    al,0xef
  420989:	sub    ebx,DWORD PTR [eax+0x34a15e06]
  42098f:	retf   
  420990:	(bad)  
  420991:	jmp    0x4209e1
  420993:	adc    DWORD PTR [edx+0x198433b0],esp
  420999:	popa   
  42099a:	stos   BYTE PTR es:[edi],al
  42099b:	pop    ebp
  42099c:	lods   al,BYTE PTR ds:[esi]
  42099d:	mov    bl,0xc7
  42099f:	enter  0x6f21,0x5
  4209a3:	lds    esp,FWORD PTR [ebp-0x5a9c3f10]
  4209a9:	or     DWORD PTR [edx-0x4c],ecx
  4209ac:	shl    DWORD PTR [ebx-0x74652f74],cl
  4209b2:	ret    
  4209b3:	mov    eax,0x8e961eeb
  4209b8:	mov    DWORD PTR [ebx+0x724cc114],ebp
  4209be:	rol    DWORD PTR [esi],1
  4209c0:	arpl   WORD PTR [edx+0x63],sp
  4209c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c4:	push   ecx
  4209c5:	sub    bl,BYTE PTR [ecx]
  4209c7:	rol    esi,cl
  4209c9:	jmp    0x420a41
  4209cb:	fbstp  TBYTE PTR [ecx]
  4209cd:	in     eax,0x11
  4209cf:	test   eax,0xd7a3c193
  4209d4:	dec    ebp
  4209d5:	add    ecx,DWORD PTR [ecx]
  4209d7:	cmp    ecx,DWORD PTR [esi]
  4209d9:	cmp    esp,DWORD PTR [esi+edi*4+0x2dd47845]
  4209e0:	das    
  4209e1:	dec    ecx
  4209e2:	dec    edx
  4209e3:	ins    BYTE PTR es:[edi],dx
  4209e4:	out    0x17,al
  4209e6:	xchg   ebx,eax
  4209e7:	sar    BYTE PTR [eax+0x5],1
  4209ea:	mov    edx,0x44db4591
  4209ef:	mov    ds:0x7bbaf7ca,al
  4209f4:	mov    dl,0xb5
  4209f6:	mov    al,ds:0xf157a308
  4209fb:	add    DWORD PTR [edx+0x52a719f4],0x116afe8b
  420a05:	pop    eax
  420a06:	mov    bl,0x16
  420a08:	xor    al,0xf0
  420a0a:	(bad)  
  420a0c:	and    eax,0xdd6c09bc
  420a11:	mov    ?,edi
  420a13:	and    cl,bl
  420a15:	add    BYTE PTR [ebp-0x4b378266],ah
  420a1b:	std    
  420a1c:	and    dh,BYTE PTR [ecx-0x2a07405b]
  420a22:	scas   eax,DWORD PTR es:[edi]
  420a23:	xchg   DWORD PTR [edi],ebx
  420a25:	jnp    0x420a0a
  420a27:	repnz les ebp,FWORD PTR [ebp-0x34454eb1]
  420a2e:	mov    ah,0xa
  420a30:	sub    ch,BYTE PTR [eax]
  420a32:	stc    
  420a33:	ror    edi,1
  420a35:	xor    bh,BYTE PTR [eax]
  420a37:	ret    
  420a38:	stc    
  420a39:	sbb    BYTE PTR [ebp+0x42],bh
  420a3c:	aad    0x28
  420a3e:	cmp    esp,DWORD PTR [edx+0x61]
  420a41:	adc    DWORD PTR [edi*2-0x37a42bf8],ebp
  420a48:	ins    DWORD PTR es:[edi],dx
  420a49:	retf   0x2f77
  420a4c:	movlps QWORD PTR [ecx+0x5aca722f],xmm2
  420a53:	jmp    0x4b1e:0x5132f85a
  420a5a:	inc    edi
  420a5b:	(bad)  
  420a5c:	adc    DWORD PTR ds:0xd7bfb6,ebp
  420a62:	jbe    0x420a3e
  420a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a65:	push   cs
  420a66:	cmp    eax,0xfe2e8a14
  420a6b:	(bad)  
  420a6c:	dec    esi
  420a6d:	sub    ebx,ecx
  420a6f:	jae    0x420ab7
  420a71:	xor    eax,0xe41a74a6
  420a76:	mov    DWORD PTR [edx],esi
  420a78:	out    0x23,eax
  420a7a:	lods   al,BYTE PTR ds:[esi]
  420a7b:	nop
  420a7c:	dec    esp
  420a7d:	leave  
  420a7e:	retf   0x3908
  420a81:	push   0xc
  420a83:	push   0xffffffe3
  420a85:	and    al,0xec
  420a87:	(bad)  [edx-0x5d22b8f5]
  420a8d:	inc    ebx
  420a8e:	cmp    al,0x51
  420a90:	test   esp,esi
  420a92:	push   edi
  420a93:	ss sbb al,0x53
  420a96:	js     0x420a24
  420a98:	pushf  
  420a99:	(bad)  
  420a9a:	xchg   esp,eax
  420a9b:	and    al,0x2f
  420a9d:	ror    BYTE PTR [esi+0x18],0x1d
  420aa1:	shr    DWORD PTR [ebp-0x2c],0x5a
  420aa5:	loopne 0x420a99
  420aa7:	into   
  420aa8:	clc    
  420aa9:	cdq    
  420aaa:	fs inc ebx
  420aac:	inc    edx
  420aad:	adc    DWORD PTR [edi+ecx*1-0x364b0aa2],0x15e1136b
  420ab8:	std    
  420ab9:	rcr    BYTE PTR [edi+0x22451634],cl
  420abf:	xor    ebx,ecx
  420ac1:	aaa    
  420ac2:	fcom   QWORD PTR [edx]
  420ac4:	fadd   st(4),st
  420ac6:	loope  0x420aa3
  420ac8:	(bad)  
  420ac9:	mov    esi,DWORD PTR [ebx-0x32e76bf1]
  420acf:	fld    QWORD PTR [esi+esi*8]
  420ad2:	inc    eax
  420ad3:	dec    ecx
  420ad4:	xchg   ecx,eax
  420ad5:	mov    WORD PTR [ecx-0x7276c4dd],gs
  420adb:	xor    BYTE PTR fs:[esi-0x51],0xad
  420ae0:	repnz add al,0x8e
  420ae3:	pop    ss
  420ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae5:	sahf   
  420ae6:	es es xchg ebx,eax
  420ae9:	stc    
  420aea:	popa   
  420aeb:	inc    ecx
  420aec:	in     eax,0x78
  420aee:	xchg   edx,eax
  420aef:	aam    0xad
  420af1:	ins    BYTE PTR es:[edi],dx
  420af2:	mov    ch,BYTE PTR [ecx]
  420af4:	jns    0x420b25
  420af6:	pop    esi
  420af7:	cmp    ecx,DWORD PTR [eax+ebx*4]
  420afa:	xor    ah,ch
  420afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420afd:	(bad)  
  420aff:	xor    eax,esp
  420b01:	(bad)  
  420b02:	loop   0x420b63
  420b04:	pusha  
  420b05:	jo     0x420a92
  420b07:	xchg   ecx,eax
  420b08:	push   ebp
  420b09:	fcom   QWORD PTR [esi]
  420b0b:	lock pushf 
  420b0d:	jbe    0x420b3b
  420b0f:	fs and cl,bl
  420b12:	push   ebp
  420b13:	nop
  420b14:	add    ecx,DWORD PTR [eax]
  420b16:	jns    0x420b71
  420b18:	fistp  DWORD PTR [edx+0x67]
  420b1b:	leave  
  420b1c:	mov    DWORD PTR ds:0x8938768e,ecx
  420b22:	jne    0x420b10
  420b24:	out    dx,al
  420b25:	xchg   ebp,eax
  420b26:	push   ecx
  420b27:	fs dec ebx
  420b29:	js     0x420b6f
  420b2b:	imul   ebp,esi,0x75
  420b2e:	sub    ch,BYTE PTR [esi]
  420b30:	rcl    BYTE PTR [ebp+eiz*2-0x1a],0x88
  420b35:	stos   DWORD PTR es:[edi],eax
  420b36:	out    dx,al
  420b37:	into   
  420b38:	mov    bh,0x7e
  420b3a:	out    dx,eax
  420b3b:	(bad)  
  420b3c:	in     eax,dx
  420b3d:	int    0xb1
  420b3f:	push   ebp
  420b40:	add    BYTE PTR [bp+si+0x6e],bl
  420b44:	jmp    0x4c0188ec
  420b49:	imul   BYTE PTR [ebx+ebx*4]
  420b4c:	mov    ebp,0x271d984a
  420b51:	push   esi
  420b52:	inc    esi
  420b53:	pop    esp
  420b54:	shr    BYTE PTR [ebp+0x28],0xeb
  420b58:	or     cl,BYTE PTR [ebp+0x2a]
  420b5b:	(bad)  
  420b5c:	popa   
  420b5d:	imul   edx,DWORD PTR [edx],0x7c20e9c0
  420b63:	xor    bh,BYTE PTR [ecx]
  420b65:	sbb    BYTE PTR [ebx],ch
  420b67:	cdq    
  420b68:	(bad)  
  420b69:	sahf   
  420b6a:	sahf   
  420b6b:	lahf   
  420b6c:	out    dx,eax
  420b6d:	mov    eax,0xd9173b3a
  420b72:	jecxz  0x420b9c
  420b74:	outs   dx,DWORD PTR ds:[esi]
  420b75:	mov    BYTE PTR cs:[ecx-0xbfabaeb],al
  420b7c:	push   cs
  420b7d:	add    bh,bh
  420b7f:	aad    0xb5
  420b81:	push   0x7a99223a
  420b86:	mov    al,ds:0x713fe66e
  420b8b:	out    dx,al
  420b8c:	dec    edi
  420b8d:	xchg   esp,eax
  420b8e:	mov    ebx,0x73f9d368
  420b93:	(bad)  
  420b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b95:	jne    0x420b95
  420b97:	popa   
  420b98:	push   esi
  420b99:	and    BYTE PTR [ebx+edi*2],bh
  420b9c:	loop   0x420be0
  420b9e:	push   cs
  420b9f:	outs   dx,DWORD PTR ds:[esi]
  420ba0:	pop    ds
  420ba1:	sub    dl,BYTE PTR [edx+0x350c55df]
  420ba7:	(bad)  
  420ba8:	adc    eax,0x76d96cf7
  420bad:	ins    DWORD PTR es:[edi],dx
  420bae:	repz loop 0x420ba3
  420bb1:	test   al,0x8b
  420bb3:	lock mov eax,ds:0x323a68b
  420bb9:	or     ecx,DWORD PTR [ebx+0x52a298ea]
  420bbf:	cwde   
  420bc0:	xchg   edi,eax
  420bc1:	fstp   QWORD PTR [edx]
  420bc3:	add    al,0xb3
  420bc5:	push   es
  420bc6:	add    dl,cl
  420bc8:	jne    0x420b54
  420bca:	inc    edi
  420bcb:	pop    esi
  420bcc:	mov    ch,0x36
  420bce:	inc    ebx
  420bcf:	xchg   DWORD PTR [eax-0x33],edi
  420bd2:	mov    ch,0xcd
  420bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd5:	xor    edx,DWORD PTR [ebx]
  420bd7:	dec    eax
  420bd8:	and    BYTE PTR [esi-0x34],dh
  420bdb:	push   0x538a1d
  420be0:	cli    
  420be1:	aas    
  420be2:	push   ds
  420be3:	div    dh
  420be5:	add    BYTE PTR [edi-0x3d86e83e],ch
  420beb:	cli    
  420bec:	add    al,0xa0
  420bee:	test   DWORD PTR [ebx+esi*8],esp
  420bf1:	les    esp,FWORD PTR [esi]
  420bf3:	adc    al,0x25
  420bf5:	or     eax,0x5d5387a6
  420bfa:	fiadd  DWORD PTR [edx]
  420bfc:	inc    edi
  420bfd:	xchg   BYTE PTR [ebx+0x30],ch
  420c00:	pop    ebx
  420c01:	jae    0x420c58
  420c03:	pop    es
  420c04:	cmp    DWORD PTR [ebp+0x6c],esp
  420c07:	ret    0xa64b
  420c0a:	and    al,0x6e
  420c0c:	cmc    
  420c0d:	jno    0x420c7f
  420c0f:	jmp    0x707:0xf0f36d4d
  420c16:	xchg   ebp,eax
  420c17:	adc    BYTE PTR [edx+0x5e],bh
  420c1a:	(bad)  [si+0x2b]
  420c1e:	(bad)  
  420c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c20:	push   ebx
  420c21:	sub    eax,0xae3533a4
  420c26:	pop    edx
  420c27:	data16 (bad) 
  420c29:	adc    esi,edx
  420c2b:	sar    DWORD PTR [edi],0x52
  420c2e:	xchg   edi,eax
  420c2f:	mov    ah,ah
  420c31:	push   esi
  420c33:	sub    eax,DWORD PTR [edi]
  420c35:	push   eax
  420c36:	xchg   BYTE PTR [edi],ah
  420c38:	(bad)  
  420c39:	int    0x3d
  420c3b:	loop   0x420bd4
  420c3d:	lods   al,BYTE PTR ds:[esi]
  420c3e:	hlt    
  420c3f:	ficom  DWORD PTR [ecx-0x2d792414]
  420c45:	out    dx,eax
  420c46:	in     eax,0xb7
  420c48:	out    0x20,eax
  420c4a:	cwde   
  420c4b:	das    
  420c4c:	hlt    
  420c4d:	push   0xbdd97d74
  420c52:	sbb    ah,bl
  420c54:	mov    bh,0x46
  420c56:	mov    BYTE PTR [eax+0x48],bl
  420c59:	cdq    
  420c5a:	and    al,0xf6
  420c5c:	pusha  
  420c5d:	ret    0x48a7
  420c60:	std    
  420c61:	adc    DWORD PTR [edi+0x77dfe97],edx
  420c67:	int3   
  420c68:	arpl   ax,dx
  420c6a:	or     al,0xac
  420c6c:	add    BYTE PTR ds:0x2c52a2bb,dh
  420c72:	and    esp,eax
  420c74:	xlat   BYTE PTR ds:[ebx]
  420c75:	ficom  DWORD PTR [edx+0x42fc3c]
  420c7b:	and    eax,DWORD PTR [ebx+ebx*8]
  420c7e:	js     0x420ceb
  420c80:	ins    BYTE PTR es:[edi],dx
  420c81:	pop    ecx
  420c82:	mov    dl,0x18
  420c84:	cmp    eax,0x81a05af4
  420c89:	add    cl,cl
  420c8b:	dec    ebx
  420c8c:	or     eax,DWORD PTR [ebp+0x6b]
  420c8f:	jb     0x420c13
  420c91:	aam    0xa
  420c93:	or     BYTE PTR ds:0x2162b03e,cl
  420c99:	xor    eax,0x19569f53
  420c9f:	mov    bh,BYTE PTR [ebx+ecx*8-0x522d3ee]
  420ca6:	inc    ebp
  420ca7:	in     al,dx
  420ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ca9:	out    dx,al
  420caa:	das    
  420cab:	arpl   WORD PTR [ebp+0x26ebf9f6],cx
  420cb1:	lock push edi
  420cb3:	xchg   DWORD PTR [esi+0xd],ebx
  420cb6:	add    BYTE PTR [ebx-0x18],ch
  420cb9:	clc    
  420cba:	sbb    eax,0x72aa119
  420cbf:	dec    ecx
  420cc0:	lods   eax,DWORD PTR ds:[esi]
  420cc1:	inc    esp
  420cc2:	or     BYTE PTR [eax],ch
  420cc4:	xchg   esi,eax
  420cc5:	shr    DWORD PTR [ebx],0xf9
  420cc8:	xor    cl,bl
  420cca:	call   FWORD PTR [edi-0x13]
  420ccd:	dec    DWORD PTR [edi]
  420ccf:	mov    bl,0x3
  420cd2:	push   ebp
  420cd3:	mov    esi,0x2119ebdc
  420cd8:	pop    esi
  420cd9:	xchg   ebx,eax
  420cda:	stos   BYTE PTR es:[edi],al
  420cdb:	inc    eax
  420cdc:	mov    ah,0x96
  420cde:	in     eax,0x5f
  420ce0:	jo     0x420ca2
  420ce2:	xchg   edx,eax
  420ce3:	pushf  
  420ce4:	jg     0x420d36
  420ce6:	dec    ecx
  420ce7:	add    DWORD PTR [edi],ecx
  420ce9:	mov    dh,0xeb
  420ceb:	push   0xffffff8e
  420ced:	out    0x77,al
  420cef:	add    edx,esi
  420cf1:	out    dx,al
  420cf2:	retf   
  420cf3:	ror    dh,0x6b
  420cf6:	sbb    BYTE PTR [edi-0xb],ah
  420cf9:	cmc    
  420cfa:	mov    cl,0x32
  420cfc:	gs and al,0x72
  420cff:	sbb    DWORD PTR ds:0x2dfcad38,esp
  420d05:	shr    BYTE PTR [esi+0x61bccce6],0x89
  420d0c:	mov    eax,DWORD PTR [ebx+0x4d94e6e1]
  420d12:	dec    ebx
  420d13:	sub    DWORD PTR [esi+edi*1+0x567d4d38],esp
  420d1a:	ins    BYTE PTR es:[edi],dx
  420d1b:	loop   0x420cf0
  420d1d:	js     0x420d8d
  420d1f:	pop    ebp
  420d20:	cmc    
  420d21:	adc    ebx,ecx
  420d23:	cwde   
  420d24:	(bad)  
  420d25:	jmp    0xb581:0xc5ad6125
  420d2c:	inc    edx
  420d2d:	int3   
  420d2e:	test   DWORD PTR [edx+0x6f72d2af],esp
  420d34:	sti    
  420d35:	cmp    eax,0xea6d94a5
  420d3a:	aaa    
  420d3b:	fwait
  420d3c:	jno    0x420d3d
  420d3e:	inc    ebx
  420d3f:	or     BYTE PTR [edi-0x4],dl
  420d42:	repnz and edi,DWORD PTR [ebp+0x56]
  420d46:	dec    ebp
  420d47:	ss jecxz 0x420d01
  420d4a:	pop    ss
  420d4b:	sahf   
  420d4c:	mov    WORD PTR [ebp-0x4c],ss
  420d4f:	mov    ecx,0x71fecea7
  420d54:	stc    
  420d55:	cmp    eax,0xf4df06d6
  420d5a:	mov    fs,WORD PTR [ebx-0x180bc3]
  420d60:	mov    eax,ds:0x9b4fd31d
  420d65:	aam    0x86
  420d67:	push   0xf47b0776
  420d6c:	push   edi
  420d6d:	in     eax,dx
  420d6e:	(bad)  
  420d6f:	xor    eax,0x8721f0bc
  420d74:	mov    eax,ds:0xf318430d
  420d79:	mov    BYTE PTR [edi-0x44],ah
  420d7c:	pop    es
  420d7d:	jae    0x420da8
  420d7f:	out    0x52,al
  420d81:	adc    BYTE PTR [ebx],al
  420d83:	cli    
  420d84:	and    BYTE PTR [esi+0x2539d65d],0xe0
  420d8b:	out    0x51,eax
  420d8d:	(bad)  
  420d8e:	sub    BYTE PTR [ebp-0x7c],cl
  420d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d92:	popf   
  420d93:	inc    ecx
  420d94:	jmp    DWORD PTR ds:0xa6d28419
  420d9b:	ret    0x1675
  420d9e:	or     al,0x81
  420da0:	sar    DWORD PTR [edi+ebp*4-0x6c],0x7
  420da5:	retf   0xbd69
  420da8:	into   
  420da9:	out    dx,eax
  420daa:	mov    ch,0x81
  420dac:	lods   eax,DWORD PTR ds:[esi]
  420dad:	mov    cl,0x43
  420daf:	test   al,0x16
  420db1:	xchg   edi,eax
  420db2:	adc    eax,0x98e6fa47
  420db7:	dec    ecx
  420db8:	ins    BYTE PTR es:[edi],dx
  420db9:	xchg   edi,eax
  420dba:	mov    al,ds:0x66e11ff0
  420dbf:	test   eax,0xcf9bf489
  420dc4:	xchg   esp,eax
  420dc5:	jne    0x420e10
  420dc7:	or     eax,0x75862629
  420dcc:	fwait
  420dcd:	push   esi
  420dce:	push   cs
  420dcf:	mov    edi,0x65844e41
  420dd4:	mov    al,0x30
  420dd6:	mov    ch,0xa5
  420dd8:	lods   al,BYTE PTR ds:[esi]
  420dd9:	shl    DWORD PTR es:[edx-0x2a],cl
  420ddd:	(bad)  
  420ddf:	or     bl,BYTE PTR [ecx]
  420de1:	daa    
  420de2:	cpuid  
  420de4:	sub    esi,DWORD PTR [ecx]
  420de6:	pop    ecx
  420de7:	adc    eax,DWORD PTR [ebp+0x75]
  420dea:	ret    
  420deb:	cmp    eax,0x46797835
  420df0:	call   0xd14e:0x89304482
  420df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df8:	mov    esi,0x4e94d4b7
  420dfd:	cmc    
  420dfe:	sbb    DWORD PTR [eax+0x45],0x4075bdf7
  420e05:	cmc    
  420e06:	cmp    DWORD PTR [ebp+eax*2+0x2d],ecx
  420e0a:	aam    0x0
  420e0c:	call   0xfc48bae7
  420e11:	sbb    edi,DWORD PTR [eax*8+0x302589fa]
  420e18:	clc    
  420e19:	mov    ds:0xf9e015a2,eax
  420e1e:	jmp    0xbec1:0x450d2a04
  420e25:	test   BYTE PTR [edi-0x22],0x72
  420e29:	inc    eax
  420e2a:	pop    esi
  420e2b:	ins    BYTE PTR es:[edi],dx
  420e2c:	scas   al,BYTE PTR es:[edi]
  420e2d:	ficomp DWORD PTR [ebx-0x74]
  420e30:	and    esp,DWORD PTR [edi]
  420e32:	jb     0x420e2a
  420e34:	aas    
  420e35:	jle    0x420e47
  420e37:	push   ecx
  420e38:	pop    ebp
  420e39:	sbb    dl,BYTE PTR [ebx]
  420e3b:	(bad)  
  420e3c:	dec    edx
  420e3d:	jo     0x420dca
  420e3f:	dec    edi
  420e40:	inc    esi
  420e41:	sbb    dl,al
  420e43:	push   edi
  420e44:	jb     0x420eb5
  420e46:	mov    ebp,0xd1d74a22
  420e4b:	jmp    0x420e26
  420e4d:	rcl    DWORD PTR [bx+si],1
  420e50:	push   edi
  420e51:	clc    
  420e52:	sbb    al,0x91
  420e54:	dec    edx
  420e55:	sub    dh,BYTE PTR [edi-0x4e]
  420e58:	gs pop edx
  420e5a:	sti    
  420e5b:	sbb    ah,BYTE PTR [ebx*8-0x79eaa730]
  420e62:	mov    DWORD PTR [esi-0x4ce660c],ebx
  420e68:	jmp    0x58b6:0xd96253a6
  420e6f:	and    DWORD PTR [esi+eax*2+0x64],edi
  420e73:	scas   al,BYTE PTR es:[edi]
  420e74:	je     0x420e30
  420e76:	or     BYTE PTR [ebx+0x64],dl
  420e79:	not    ecx
  420e7b:	in     al,dx
  420e7c:	mov    bl,0xd0
  420e7e:	shr    DWORD PTR [edi-0x6c],cl
  420e81:	sub    bl,BYTE PTR [ebp+0x27]
  420e84:	mov    al,ds:0x26c47b33
  420e89:	jno    0x420ee3
  420e8b:	pop    ecx
  420e8c:	add    dh,cl
  420e8e:	cmp    DWORD PTR [ebx+0x47],ebx
  420e91:	or     DWORD PTR [ebp-0x54df1b16],eax
  420e97:	(bad)  
  420e98:	sub    DWORD PTR [ebp-0x3e],ebx
  420e9b:	add    eax,0x591501df
  420ea0:	adc    edx,DWORD PTR [edx]
  420ea2:	cwde   
  420ea3:	(bad)  
  420ea4:	cmp    al,0x6f
  420ea6:	dec    edx
  420ea7:	dec    edx
  420ea8:	repz fsubr QWORD PTR [edi-0x7e2194b7]
  420eaf:	pop    ecx
  420eb0:	mov    ecx,esp
  420eb2:	or     ebp,ecx
  420eb4:	in     eax,dx
  420eb5:	mov    cl,bl
  420eb7:	sbb    eax,0x525a2ec3
  420ebc:	jne    0x420e53
  420ebe:	mov    eax,ds:0x361a5704
  420ec3:	leave  
  420ec4:	pop    ebx
  420ec5:	adc    bh,0x46
  420ec8:	repz std 
  420eca:	shl    BYTE PTR [ecx],0xf0
  420ecd:	adc    BYTE PTR [ebx-0x19e4c815],dh
  420ed3:	xor    eax,0xa30e17c7
  420ed8:	xor    BYTE PTR [edx+0x1d],bh
  420edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420edc:	dec    edi
  420edd:	xchg   edi,eax
  420ede:	sbb    eax,0x3595431d
  420ee3:	fldenv ds:0xf7daf5e9
  420ee9:	aas    
  420eea:	stos   BYTE PTR es:[edi],al
  420eeb:	mov    ebx,0x4260a051
  420ef0:	(bad)  
  420ef1:	fcom   st(1)
  420ef3:	(bad)  
  420ef4:	adc    bh,0x50
  420ef7:	add    eax,0x4cf44629
  420efc:	fnstenv [ebp+0x11eb435c]
  420f02:	sbb    BYTE PTR [edi],al
  420f04:	leave  
  420f05:	mov    bl,0x37
  420f07:	enter  0x8887,0xff
  420f0b:	out    0x2d,al
  420f0d:	retf   
  420f0e:	xchg   ebx,eax
  420f0f:	pop    ecx
  420f10:	push   0x792d6440
  420f15:	pop    esp
  420f16:	out    dx,al
  420f17:	scas   al,BYTE PTR es:[edi]
  420f18:	inc    ebp
  420f19:	pop    eax
  420f1a:	add    DWORD PTR [edi],ecx
  420f1c:	sub    DWORD PTR [esi],edi
  420f1e:	cmovo  eax,DWORD PTR [esi+0x5a6da47b]
  420f25:	js     0x420f76
  420f27:	fmul   QWORD PTR [edi+0x27c87730]
  420f2d:	and    edi,eax
  420f2f:	fild   WORD PTR [edx+eax*2]
  420f32:	das    
  420f33:	inc    eax
  420f34:	push   ss
  420f35:	jmp    0x420f06
  420f37:	mov    BYTE PTR [ecx],ah
  420f39:	inc    esi
  420f3a:	lods   eax,DWORD PTR ds:[esi]
  420f3b:	xchg   esi,eax
  420f3c:	mov    edx,ecx
  420f3e:	cli    
  420f3f:	sub    eax,0x5c0f056
  420f44:	jmp    0xdffcafee
  420f49:	mov    al,ds:0x1c18c0a
  420f4e:	xlat   BYTE PTR ds:[ebx]
  420f4f:	mov    ah,0x96
  420f51:	hlt    
  420f52:	jne    0x420ef8
  420f54:	data16 das 
  420f56:	inc    ebx
  420f57:	push   edx
  420f58:	xchg   al,ah
  420f5a:	and    ebp,DWORD PTR [esi+ebp*8+0x56a9e62f]
  420f61:	imul   edx,DWORD PTR [eax-0x19a5226d],0x28d93aef
  420f6b:	je     0x420f1e
  420f6d:	mov    cl,0x9
  420f6f:	adc    al,0x15
  420f71:	mov    al,ds:0xae024778
  420f76:	xchg   esp,eax
  420f77:	adc    ch,BYTE PTR [eax-0x68]
  420f7a:	push   ebx
  420f7b:	and    DWORD PTR [ecx+ebp*4-0x73],edi
  420f7f:	retf   
  420f80:	jecxz  0x420f2f
  420f82:	fld    DWORD PTR [ebx+0x5e]
  420f85:	arpl   WORD PTR [edx-0x510cf269],dx
  420f8b:	rcl    DWORD PTR [esp+ecx*2-0x713d8a65],cl
  420f92:	lods   al,BYTE PTR ds:[esi]
  420f93:	pop    ecx
  420f94:	adc    eax,0x71029d9f
  420f99:	cmp    DWORD PTR [edi],eax
  420f9b:	retf   
  420f9c:	mov    dh,0x8b
  420f9e:	dec    esp
  420f9f:	dec    esp
  420fa0:	nop
  420fa1:	push   ecx
  420fa2:	pop    eax
  420fa3:	push   edx
  420fa4:	into   
  420fa5:	fcom   DWORD PTR [esi+ebx*1-0x46]
  420fa9:	mov    eax,ds:0x1de0dca6
  420fae:	ins    DWORD PTR es:[edi],dx
  420faf:	mov    eax,0x5bac0b08
  420fb4:	dec    ebp
  420fb5:	jmp    0xeffa:0xb98573ff
  420fbc:	cmp    eax,0x1c6c0277
  420fc1:	arpl   di,bp
  420fc3:	repz scas eax,DWORD PTR es:[edi]
  420fc5:	xchg   ebp,eax
  420fc6:	inc    edx
  420fc7:	mov    es,WORD PTR [esi-0x10]
  420fca:	pushf  
  420fcb:	xchg   ecx,eax
  420fcc:	mov    cl,0xd2
  420fce:	paddsw mm2,QWORD PTR [esi*4+0x4fbbd99a]
  420fd6:	mov    dl,0xb
  420fd8:	imul   esp,DWORD PTR [ebx+edi*4-0x1d],0x92a67484
  420fe0:	jp     0x42105a
  420fe2:	dec    BYTE PTR [eax+0x22920d3b]
  420fe8:	loopne 0x42104a
  420fea:	addr16 add eax,0x3a545b00
  420ff0:	or     eax,DWORD PTR [ebx+0x289860b3]
  420ff6:	nop
  420ff7:	pop    eax
  420ff8:	cmc    
  420ff9:	and    ebx,edi
  420ffb:	popa   
  420ffc:	and    esi,DWORD PTR ds:0x869bb4f1
  421002:	xor    al,0x1c
  421004:	cwde   
  421005:	(bad)  
  421006:	out    0xb,eax
  421008:	mov    al,ds:0x3ddc531d
  42100d:	pop    es
  42100e:	outs   dx,BYTE PTR ds:[esi]
  42100f:	popa   
  421010:	mov    dh,0xb2
  421012:	stos   DWORD PTR es:[edi],eax
  421013:	adc    ah,BYTE PTR [edi-0xf5b05d6]
  421019:	inc    edx
  42101a:	shr    ah,cl
  42101c:	dec    ecx
  42101d:	push   ebp
  42101e:	jne    0x420ff0
  421020:	retf   
  421021:	or     BYTE PTR [esp+ecx*8],dl
  421024:	jl     0x420fb3
  421026:	sbb    DWORD PTR ds:0xe0f7ec31,ebx
  42102c:	jmp    0x42106e
  42102e:	ja     0x421021
  421030:	ud1    ebx,DWORD PTR [esp+eax*8-0x107bbb6a]
  421038:	rol    DWORD PTR [esp+esi*4-0xda7dcb8],cl
  42103f:	mov    edi,0x7b03476d
  421044:	bound  edx,QWORD PTR [ebp-0x6]
  421047:	ret    0x97bd
  42104a:	dec    edi
  42104b:	jo     0x4210c6
  42104d:	out    dx,al
  42104e:	fst    DWORD PTR [esi-0x5b]
  421051:	inc    ebp
  421052:	jbe    0x420ff8
  421054:	push   edi
  421055:	pop    esp
  421056:	enter  0x7569,0x4d
  42105a:	jg     0x4210c4
  42105c:	cdq    
  42105d:	mov    al,ds:0xf61b2a6
  421062:	stos   BYTE PTR es:[edi],al
  421063:	cmp    DWORD PTR [eax+0x29c44ddd],edx
  421069:	jno    0x421099
  42106b:	xchg   ebx,eax
  42106c:	add    al,0x29
  42106e:	jno    0x421046
  421070:	lahf   
  421071:	sub    BYTE PTR [ebx],ah
  421073:	push   esp
  421074:	and    eax,0x54d8b182
  421079:	ret    
  42107a:	or     DWORD PTR [ebx],ebp
  42107c:	inc    eax
  42107d:	mov    ah,0x59
  42107f:	fimul  WORD PTR [edi]
  421081:	add    dl,bh
  421083:	mov    bh,0x6a
  421085:	fild   WORD PTR [ebx-0x65]
  421088:	dec    ebp
  421089:	or     DWORD PTR [ecx+0x5a],esi
  42108c:	pop    es
  42108d:	jbe    0x4210b2
  42108f:	cmp    al,0xde
  421091:	adc    al,BYTE PTR [ebp-0x2cfc33e5]
  421097:	repz mov ch,0xc2
  42109a:	mov    al,0x29
  42109c:	shl    BYTE PTR [ecx],0x10
  42109f:	out    dx,eax
  4210a0:	cmp    DWORD PTR [eax-0x14],edi
  4210a3:	inc    ebp
  4210a4:	sti    
  4210a5:	ret    0x8222
  4210a8:	mov    edx,DWORD PTR [esi+edi*4]
  4210ab:	push   ss
  4210ac:	sti    
  4210ad:	mov    al,0x19
  4210af:	jo     0x421082
  4210b1:	clc    
  4210b2:	lods   eax,DWORD PTR ds:[esi]
  4210b3:	js     0x42110d
  4210b5:	aam    0x13
  4210b7:	setbe  BYTE PTR [eax]
  4210ba:	cmc    
  4210bb:	dec    ebx
  4210bc:	mov    bh,0x46
  4210be:	or     BYTE PTR [ebx+ecx*4-0x56],0x69
  4210c3:	inc    eax
  4210c4:	lahf   
  4210c5:	mov    ah,0x2
  4210c7:	pusha  
  4210c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c9:	js     0x421103
  4210cb:	sub    BYTE PTR [ebp+0x9],ah
  4210ce:	jle    0x421086
  4210d0:	mov    edi,0x8b4d333
  4210d5:	jl     0x421088
  4210d7:	loope  0x4210a4
  4210d9:	test   DWORD PTR [esp+eax*2+0x3fc77f30],ebp
  4210e0:	and    DWORD PTR [edi+0x50],0x75e89fa5
  4210e7:	call   0x93bbf5a1
  4210ec:	sti    
  4210ed:	pop    edi
  4210ee:	(bad)  [eax]
  4210f0:	or     al,0x76
  4210f2:	pop    esi
  4210f3:	mov    dh,0x76
  4210f5:	add    eax,0x6b537864
  4210fa:	(bad)  [edi+0x6036cf9f]
  421100:	stc    
  421101:	enter  0x1be2,0xbf
  421105:	rcl    DWORD PTR ds:0x3a46092c,0x58
  42110c:	mov    edx,0xb2f891a0
  421111:	mov    bh,0xa6
  421113:	out    dx,al
  421114:	mov    ch,0x9
  421116:	adc    DWORD PTR [ecx+ebx*8+0x273bf806],0x6bdca2dd
  421121:	fwait
  421122:	lock int3 
  421124:	cmp    eax,0x752a7705
  421129:	adc    BYTE PTR [esi+0x55],dl
  42112c:	pop    ebp
  42112d:	(bad)  
  42112e:	jb     0x421127
  421130:	icebp  
  421131:	mov    ebx,DWORD PTR [eax]
  421133:	cmp    edi,DWORD PTR [edx+esi*4-0x7c]
  421137:	and    DWORD PTR [ebp+0x58],ebx
  42113a:	sahf   
  42113b:	cmc    
  42113c:	ds out 0x1c,eax
  42113f:	retf   
  421140:	inc    ecx
  421141:	int    0x32
  421143:	push   0x15
  421145:	outs   dx,DWORD PTR ds:[esi]
  421146:	test   BYTE PTR [edx-0xa],dh
  421149:	cld    
  42114a:	aad    0x1e
  42114c:	cs mov bh,0x59
  42114f:	mov    ecx,0x124d65de
  421154:	push   cs
  421155:	and    eax,0x73649a9
  42115a:	fwait
  42115b:	enter  0xed5a,0x2a
  42115f:	cmp    DWORD PTR [edx],0xa5236b16
  421165:	out    dx,al
  421166:	pop    esp
  421167:	cmp    BYTE PTR [ebp+0x4e],ch
  42116a:	xor    esp,DWORD PTR [esp+ebx*2-0xeb3ed64]
  421171:	in     eax,dx
  421172:	scas   al,BYTE PTR es:[edi]
  421173:	lods   eax,DWORD PTR ds:[esi]
  421174:	push   cs
  421175:	cmp    eax,0xdff22f65
  42117a:	xor    eax,0xbcf1d3bd
  42117f:	maxps  xmm6,XMMWORD PTR [esi-0x67]
  421183:	inc    ebp
  421184:	xchg   edx,eax
  421185:	cmp    DWORD PTR [ecx-0x4b60d374],edi
  42118b:	ins    DWORD PTR es:[edi],dx
  42118c:	jae    0x421204
  42118e:	cli    
  42118f:	mov    edx,0x3b02ea4b
  421194:	xor    eax,0x171348f9
  421199:	push   0x638113ef
  42119e:	dec    esp
  42119f:	or     ch,BYTE PTR [ebp+0x50]
  4211a2:	gs mov esp,0x5f8b00f6
  4211a8:	pushf  
  4211a9:	shl    DWORD PTR [edi-0x6b6a0a0b],cl
  4211af:	std    
  4211b0:	(bad)  
  4211b1:	jae    0x421188
  4211b3:	ins    BYTE PTR es:[edi],dx
  4211b4:	push   esi
  4211b5:	int3   
  4211b6:	push   ebx
  4211b7:	lea    esi,[eax-0x44]
  4211ba:	xor    al,0xcb
  4211bc:	call   0x91055695
  4211c1:	div    edi
  4211c3:	and    DWORD PTR [esi+0x6b9e5b56],edi
  4211c9:	mov    cl,0x9f
  4211cb:	ins    DWORD PTR es:[edi],dx
  4211cc:	push   eax
  4211cd:	enter  0xe2af,0x57
  4211d1:	mov    edx,0x8c118bfb
  4211d6:	dec    ebx
  4211d7:	adc    esp,DWORD PTR [ebx-0x75]
  4211da:	sub    ch,ah
  4211dc:	sub    BYTE PTR [esi-0x4b],ch
  4211df:	xchg   esi,eax
  4211e0:	sub    dh,BYTE PTR [ecx-0x56]
  4211e3:	mov    eax,0xa18ca4b9
  4211e8:	cmp    BYTE PTR [edi-0xa],ah
  4211eb:	out    0x4e,al
  4211ed:	test   al,0x8f
  4211ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f0:	fadd   QWORD PTR [esi-0x44331a09]
  4211f6:	inc    ebx
  4211f8:	push   ss
  4211f9:	inc    edi
  4211fa:	pushw  0xe9d
  4211fe:	(bad)
  421202:	xor    ch,bl
  421204:	or     eax,DWORD PTR [eax-0x2a21e7d1]
  42120a:	sbb    DWORD PTR [edx-0x80],0x5a
  42120e:	clc    
  42120f:	pop    esi
  421210:	adc    esp,edx
  421212:	xchg   DWORD PTR [ebp+0x5b],ebx
  421215:	fimul  DWORD PTR [esp+ebx*8-0x5e54089c]
  42121c:	jmp    0x421294
  42121e:	outs   dx,BYTE PTR ds:[esi]
  42121f:	daa    
  421220:	ret    
  421221:	inc    ebx
  421222:	mov    DWORD PTR [eax],esp
  421224:	in     eax,dx
  421225:	call   FWORD PTR [esi+0x8]
  421228:	dec    ebp
  421229:	aas    
  42122a:	and    ebp,esi
  42122c:	add    ebp,DWORD PTR [eax]
  42122e:	ffree  st(7)
  421230:	lods   eax,DWORD PTR ds:[esi]
  421231:	jmp    0xc03a:0x8831b503
  421238:	cmp    al,0x89
  42123a:	push   ebx
  42123b:	add    DWORD PTR [edi+edi*4],edi
  42123e:	and    edx,DWORD PTR [eax-0x27]
  421241:	inc    edx
  421242:	sbb    ebx,DWORD PTR [ecx]
  421244:	test   al,0x46
  421246:	icebp  
  421247:	fwait
  421248:	retf   
  421249:	scas   al,BYTE PTR es:[edi]
  42124a:	fsubr  DWORD PTR [ebp-0x8]
  42124d:	retf   
  42124e:	ss inc esp
  421250:	dec    ecx
  421251:	pop    es
  421252:	das    
  421253:	xor    ecx,DWORD PTR ds:0x6b0f3376
  421259:	and    al,0x2d
  42125b:	cmp    al,0x56
  42125d:	inc    esi
  42125e:	dec    edx
  42125f:	push   ecx
  421260:	and    al,BYTE PTR [eax]
  421262:	add    DWORD PTR [edi-0x16],edi
  421265:	call   0x66ff:0xe3fd49d
  42126c:	popf   
  42126d:	adc    bl,BYTE PTR [ecx+0x4ec6ea45]
  421273:	(bad)
  421276:	pcmpgtd mm0,QWORD PTR [edi-0x84bfc8d]
  42127d:	mov    BYTE PTR [edi-0x77],dh
  421280:	dec    ecx
  421281:	sub    BYTE PTR fs:[ebp-0x6f],ah
  421285:	push   cs
  421286:	pushf  
  421287:	jl     0x4212d4
  421289:	sbb    eax,0x62bc7d03
  42128e:	push   eax
  42128f:	adc    BYTE PTR ds:0x3da8627c,bl
  421295:	pushf  
  421296:	xchg   ebp,eax
  421297:	call   0xf295a61a
  42129c:	loope  0x42122b
  42129e:	jbe    0x421255
  4212a0:	icebp  
  4212a1:	cmc    
  4212a2:	push   es
  4212a3:	out    dx,al
  4212a4:	cmp    BYTE PTR [eax-0x1],0x24
  4212a8:	loopne 0x421320
  4212aa:	outs   dx,DWORD PTR ds:[esi]
  4212ab:	jle    0x421309
  4212ad:	jnp    0x421242
  4212af:	fisubr DWORD PTR [edi]
  4212b1:	lods   al,BYTE PTR ds:[esi]
  4212b2:	maxps  xmm7,XMMWORD PTR [ebx+0x3abd28e4]
  4212b9:	push   cs
  4212ba:	cwde   
  4212bb:	sub    al,0x6a
  4212bd:	mov    esi,0x93226203
  4212c2:	mov    ds,WORD PTR [edx-0x7]
  4212c5:	lods   eax,DWORD PTR ds:[esi]
  4212c6:	xchg   ebx,eax
  4212c7:	fcomp  DWORD PTR [esi-0x73]
  4212ca:	adc    DWORD PTR [ecx+edi*4],0x78
  4212ce:	shl    BYTE PTR ds:0xec0093d8,0x34
  4212d5:	lahf   
  4212d6:	retf   
  4212d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212d8:	std    
  4212d9:	sub    bl,BYTE PTR [edx+edi*1-0x543e242e]
  4212e0:	mov    ebx,0x495e91d
  4212e5:	outs   dx,BYTE PTR ds:[esi]
  4212e6:	mov    WORD PTR [ecx],ss
  4212e8:	xchg   ebx,eax
  4212e9:	repnz outs dx,DWORD PTR ds:[esi]
  4212eb:	adc    ch,bl
  4212ed:	mov    al,dh
  4212ef:	ret    
  4212f0:	push   esp
  4212f1:	add    BYTE PTR [eax],dh
  4212f3:	repz out dx,eax
  4212f5:	jbe    0x421347
  4212f7:	test   eax,0x2f23d883
  4212fc:	push   esi
  4212fd:	leave  
  4212fe:	std    
  4212ff:	ret    0x5537
  421302:	hlt    
  421303:	out    dx,al
  421304:	jno    0x4212e0
  421306:	shl    esp,0xf9
  421309:	adc    eax,0xe7e7c36
  42130e:	inc    edx
  42130f:	fiadd  DWORD PTR [eax+0x2a]
  421312:	jbe    0x4212d4
  421314:	adc    esp,DWORD PTR [esi+0x58]
  421317:	pop    edx
  421318:	dec    edx
  421319:	or     DWORD PTR [ebx-0x4245e3a1],esi
  42131f:	adc    esi,esp
  421321:	lock xor esi,esi
  421324:	call   0x45bedc38
  421329:	sub    esi,edx
  42132b:	mov    dh,0x6a
  42132d:	xchg   esi,eax
  42132e:	cdq    
  42132f:	(bad)  
  421330:	fld    QWORD PTR [esp+edx*4-0x18]
  421334:	push   esp
  421335:	jbe    0x421381
  421337:	fmul   DWORD PTR [edi+0x35]
  42133a:	mov    al,ds:0x8cc260c1
  42133f:	call   0x9a91:0x29dd0b60
  421346:	xor    al,0x82
  421348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421349:	sbb    dl,dh
  42134b:	xchg   esp,eax
  42134c:	push   edx
  42134d:	scas   eax,DWORD PTR es:[edi]
  42134e:	push   ebx
  42134f:	ret    0x2467
  421352:	in     eax,0x96
  421354:	push   ecx
  421355:	inc    esi
  421356:	push   esp
  421357:	xchg   edx,eax
  421358:	retf   
  421359:	and    al,0xe5
  42135b:	dec    edx
  42135c:	fstp   QWORD PTR ds:0x461898ec
  421362:	pop    esp
  421363:	(bad)  
  421364:	sahf   
  421365:	xor    al,0x1d
  421367:	js     0x42139c
  421369:	mov    ch,0xe8
  42136b:	jmp    0x42130d
  42136d:	or     al,BYTE PTR [edi+0x6b]
  421370:	fucom  st(5)
  421372:	xchg   DWORD PTR [ebp+0x17],ebp
  421375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421376:	mov    al,ds:0x39aad5e5
  42137b:	mov    esp,0x5f7a58f4
  421380:	out    0x97,eax
  421382:	mov    WORD PTR [esi+0x100b99],cs
  421388:	cmp    esi,ebx
  42138a:	lock push eax
  42138c:	add    eax,0x574cfa6d
  421391:	test   eax,0x8c03d3ec
  421396:	jg     0x42138f
  421398:	rol    BYTE PTR [eax+0x2a],0xe9
  42139c:	and    al,0xbe
  42139e:	rcr    DWORD PTR [ebx+0x2c],cl
  4213a1:	aam    0xab
  4213a3:	aad    0x10
  4213a5:	and    ecx,DWORD PTR [esi-0x56865d19]
  4213ab:	xor    DWORD PTR ds:0x662b3f8c,eax
  4213b1:	lods   eax,DWORD PTR ds:[esi]
  4213b2:	mov    edi,DWORD PTR [esi+esi*8]
  4213b5:	fsubr  st(3),st
  4213b7:	xchg   edx,eax
  4213b8:	stos   BYTE PTR es:[edi],al
  4213b9:	ins    BYTE PTR es:[edi],dx
  4213ba:	cmp    BYTE PTR [esi+0x73],ah
  4213bd:	add    BYTE PTR [eax],bl
  4213bf:	add    DWORD PTR [esi],esi
  4213c1:	shl    DWORD PTR [ecx-0x5c],0x2d
  4213c5:	aaa    
  4213c6:	in     al,dx
  4213c7:	popf   
  4213c8:	push   esi
  4213c9:	dec    edi
  4213ca:	jle    0x421434
  4213cc:	test   al,0xe2
  4213ce:	mov    edi,0x96ed00d6
  4213d3:	ret    
  4213d4:	dec    esp
  4213d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d6:	in     al,dx
  4213d7:	call   0xb84d0b32
  4213dc:	push   0xa9cb5790
  4213e1:	xchg   edi,eax
  4213e2:	mov    esi,0x95a86d22
  4213e7:	sbb    dh,BYTE PTR [edi-0x4f79e81e]
  4213ed:	call   0xba7cadb2
  4213f2:	xchg   esi,eax
  4213f3:	or     eax,0x38cb7a79
  4213f8:	ja     0x4213b8
  4213fa:	add    esp,eax
  4213fc:	push   edx
  4213fd:	pushf  
  4213fe:	sub    al,0x69
  421400:	rol    BYTE PTR [eax+0xf],cl
  421403:	sbb    DWORD PTR [ebx+ebp*8+0x8a14c5],eax
  42140a:	mov    bl,0x70
  42140c:	or     DWORD PTR [edi-0xe],ebp
  42140f:	or     ch,BYTE PTR [edi]
  421411:	(bad)  
  421412:	in     eax,0x72
  421414:	dec    edi
  421415:	pop    ecx
  421416:	addr16 aad 0x46
  421419:	pop    ecx
  42141a:	mov    edi,ebp
  42141c:	out    0xea,eax
  42141e:	sar    BYTE PTR [ebp-0x77],cl
  421421:	inc    ebx
  421422:	int3   
  421423:	ins    DWORD PTR es:[edi],dx
  421424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421425:	in     al,0xf7
  421427:	pop    ds
  421428:	jbe    0x421403
  42142a:	xor    edi,DWORD PTR [eax-0x68]
  42142d:	push   esi
  42142e:	fnstsw WORD PTR [esi-0x1e]
  421431:	shr    BYTE PTR [eax+0x56d4b67b],cl
  421437:	add    DWORD PTR [edi],edx
  421439:	into   
  42143a:	mov    esi,0xd23ef724
  42143f:	cld    
  421440:	arpl   ax,ax
  421442:	js     0x421488
  421444:	dec    bx
  421446:	mov    eax,0x32d70928
  42144b:	lods   al,BYTE PTR ds:[esi]
  42144c:	mov    ds:0x429d9b4f,al
  421451:	add    BYTE PTR ds:0x974a3740,0x4e
  421458:	mov    ebp,0xe313242d
  42145d:	mov    al,BYTE PTR [eax]
  42145f:	nop
  421460:	test   ebx,edx
  421462:	jmp    FWORD PTR [ebp+0x39]
  421465:	outs   dx,BYTE PTR ds:[esi]
  421466:	sahf   
  421467:	fist   DWORD PTR [bp+di-0x7717]
  42146c:	inc    ebx
  42146d:	in     eax,dx
  42146e:	ret    0x6f0e
  421471:	mov    ecx,0x20a49521
  421476:	fs jne 0x42142d
  421479:	dec    ecx
  42147a:	jno    0x42145d
  42147c:	aas    
  42147d:	pushf  
  42147e:	stos   BYTE PTR es:[edi],al
  42147f:	scas   eax,DWORD PTR es:[edi]
  421480:	outs   dx,BYTE PTR ds:[esi]
  421481:	fbstp  TBYTE PTR [ecx-0x48c5f3f7]
  421487:	scas   eax,DWORD PTR es:[edi]
  421488:	adc    al,0x1a
  42148a:	or     al,0x3d
  42148c:	or     DWORD PTR [esi-0x22],ebp
  42148f:	dec    edx
  421490:	inc    esp
  421491:	or     eax,0x67b08a63
  421496:	jp     0x421424
  421498:	in     al,dx
  421499:	jmp    0xbfcc:0xab8bed62
  4214a0:	dec    esp
  4214a1:	daa    
  4214a2:	or     esi,DWORD PTR [edx-0x3e]
  4214a5:	aad    0xf0
  4214a7:	mov    bh,0x38
  4214a9:	sbb    DWORD PTR [edx],0x6e
  4214ac:	je     0x42150f
  4214ae:	jnp    0x4214a9
  4214b0:	and    BYTE PTR [ebp+eax*2+0x11],bh
  4214b4:	push   ebp
  4214b5:	lea    ebp,[ebx+0x19ad2f27]
  4214bb:	not    DWORD PTR [ebx-0x3e]
  4214be:	std    
  4214bf:	aas    
  4214c0:	dec    ebx
  4214c1:	ins    BYTE PTR es:[edi],dx
  4214c2:	fimul  DWORD PTR [eax-0x3e]
  4214c5:	xor    DWORD PTR [eax+0x3689da1f],edi
  4214cb:	pushf  
  4214cc:	sbb    bh,BYTE PTR [edx-0x2268dc06]
  4214d2:	xlat   BYTE PTR ds:[ebx]
  4214d3:	imul   ebx,esi,0x7a
  4214d6:	dec    edx
  4214d7:	ins    BYTE PTR es:[edi],dx
  4214d8:	aam    0xe5
  4214da:	mov    ebp,0xb433c324
  4214df:	sahf   
  4214e0:	adc    esp,DWORD PTR [eax+0x50277830]
  4214e6:	inc    esp
  4214e7:	and    DWORD PTR [edi+0x6d7cee2b],esp
  4214ed:	dec    esi
  4214ee:	inc    esp
  4214ef:	leave  
  4214f0:	jmp    0xb26087aa
  4214f5:	in     eax,0x72
  4214f7:	pop    ds
  4214f8:	mov    esi,DWORD PTR [ebx]
  4214fa:	or     DWORD PTR [eax],ebp
  4214fc:	scas   al,BYTE PTR es:[edi]
  4214fd:	hlt    
  4214fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ff:	mov    edi,0x14ba1602
  421504:	pop    ecx
  421505:	adc    DWORD PTR [esi+0x5eb8ff52],ecx
  42150b:	xchg   ecx,eax
  42150c:	xlat   BYTE PTR ds:[ebx]
  42150d:	rol    BYTE PTR [ecx],cl
  42150f:	out    dx,al
  421510:	pop    ds
  421511:	nop
  421512:	jg     0x4214ef
  421514:	sub    DWORD PTR [esi+0x2d981dc0],0xffffffa6
  42151b:	add    BYTE PTR ds:0x2726c666,ch
  421521:	or     eax,0xe943cafc
  421526:	test   DWORD PTR [esi-0x69757957],ebp
  42152c:	jg     0x421589
  42152e:	mov    edi,0x31393051
  421533:	dec    ecx
  421534:	jns    0x421578
  421536:	mov    edx,ebx
  421538:	test   eax,0xfca7217f
  42153d:	add    eax,0xa7b0a6a3
  421542:	retf   
  421543:	mov    dh,0xa2
  421545:	xchg   ebx,eax
  421546:	jae    0x421551
  421548:	mov    ah,0xb6
  42154a:	and    eax,0xda0ae94f
  42154f:	sbb    al,0xb0
  421551:	fstp   DWORD PTR [edx]
  421553:	xor    al,0xac
  421555:	mov    esp,0xff7057b3
  42155a:	push   esi
  42155b:	mov    ch,0x20
  42155d:	push   ebx
  42155e:	call   0xa7ef1c77
  421563:	cdq    
  421564:	enter  0x5be3,0x36
  421568:	out    dx,eax
  421569:	pop    ebx
  42156a:	push   ss
  42156b:	in     al,0xc0
  42156d:	xchg   BYTE PTR [ebx],cl
  42156f:	sahf   
  421570:	mov    bh,0xed
  421572:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  421574:	jl     0x42150f
  421576:	test   BYTE PTR [ecx],bh
  421578:	xor    eax,0x1bf2ac5a
  42157d:	or     BYTE PTR [edx+0x0],dh
  421580:	scas   eax,DWORD PTR es:[edi]
  421581:	add    BYTE PTR [esi+0xb6158a6],0x2d
  421588:	add    eax,0x920c9688
  42158d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42158e:	dec    ecx
  42158f:	call   0x5571:0x162bf3
  421596:	sbb    al,0xa7
  421598:	xchg   edi,eax
  421599:	cmc    
  42159a:	sbb    al,0xd
  42159c:	je     0x4215e0
  42159e:	fisttp DWORD PTR [ebx]
  4215a0:	ins    DWORD PTR es:[edi],dx
  4215a1:	push   cs
  4215a2:	sbb    al,0x86
  4215a4:	adc    al,0x46
  4215a6:	fsub   DWORD PTR [eax-0x2454161f]
  4215ac:	inc    ecx
  4215ad:	xchg   ebx,eax
  4215ae:	mov    dh,0x3a
  4215b0:	nop
  4215b1:	test   al,0x2c
  4215b3:	int    0x8a
  4215b5:	push   0x74
  4215b7:	xor    al,0xb8
  4215b9:	das    
  4215ba:	or     BYTE PTR [ebx+0x5e],cl
  4215bd:	out    dx,eax
  4215be:	jle    0x421545
  4215c0:	popf   
  4215c1:	jbe    0x42158a
  4215c3:	and    eax,0x3395d3a6
  4215c8:	jmp    0xf606e532
  4215cd:	jmp    0x1c8dc5c3
  4215d2:	clc    
  4215d3:	mov    esi,0xcc857a47
  4215d8:	adc    al,0x33
  4215da:	mov    eax,ds:0x77ac3cb5
  4215df:	xchg   BYTE PTR [esi+0x37478454],ch
  4215e5:	push   edi
  4215e6:	cli    
  4215e7:	aas    
  4215e8:	pop    es
  4215e9:	xor    BYTE PTR [ecx+eiz*8],bl
  4215ec:	pusha  
  4215ed:	add    BYTE PTR [ebx-0x7e],0x6b
  4215f1:	jns    0x42166f
  4215f3:	mov    ebp,0x184641ae
  4215f8:	mov    ah,0x41
  4215fa:	inc    ecx
  4215fb:	xor    al,0x47
  4215fd:	cld    
  4215fe:	bound  ecx,QWORD PTR ss:[edi-0x72]
  421602:	sub    ah,BYTE PTR ds:0x881ef880
  421608:	inc    eax
  421609:	sub    al,BYTE PTR [edi-0x10]
  42160c:	push   eax
  42160d:	shr    DWORD PTR [ebx+ebp*4],cl
  421610:	cmp    cl,BYTE PTR [ecx]
  421612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421613:	xchg   edi,eax
  421614:	(bad)  
  421616:	jecxz  0x4215f1
  421618:	gs out 0x42,eax
  42161b:	inc    edi
  42161c:	jmp    0xaccd:0xbc60414
  421623:	repz xchg ecx,eax
  421625:	xor    esi,DWORD PTR [eax-0x64]
  421628:	js     0x4216a3
  42162a:	pop    ss
  42162b:	repnz sub ecx,ecx
  42162e:	rol    BYTE PTR gs:[eax-0x4c],1
  421632:	pushf  
  421633:	cwde   
  421634:	pop    edi
  421635:	sub    DWORD PTR [ebx-0x54],0x8
  421639:	mov    dl,0x68
  42163b:	dec    ebx
  42163c:	fimul  WORD PTR [ebx+0x3193ffff]
  421642:	popa   
  421643:	xchg   esi,eax
  421644:	mov    dh,0xeb
  421646:	mov    ?,ecx
  421648:	pop    ds
  421649:	dec    bh
  42164b:	mov    dl,0xf9
  42164d:	leave  
  42164e:	xchg   DWORD PTR [edi+0x6489da09],ebp
  421654:	sbb    al,0x25
  421656:	or     ecx,eax
  421658:	outs   dx,BYTE PTR ds:[esi]
  421659:	mov    edx,0x9842f12d
  42165e:	popa   
  42165f:	or     BYTE PTR [eax-0x2c],0x23
  421663:	jle    0x4216a7
  421665:	mov    edi,0x97c8b306
  42166a:	or     BYTE PTR [eax-0x62a15d1a],ah
  421670:	or     bl,bh
  421672:	clc    
  421673:	dec    ebx
  421674:	inc    ebx
  421675:	ja     0x4216b2
  421677:	push   ecx
  421678:	xchg   edx,eax
  421679:	jae    0x42165b
  42167b:	xor    ah,BYTE PTR [eax-0x4930167e]
  421681:	sbb    DWORD PTR [eax-0x3e],eax
  421684:	retf   0xddc9
  421687:	test   eax,0x31b2ae17
  42168c:	cmp    al,0xe8
  42168e:	inc    edi
  42168f:	sar    bh,cl
  421691:	or     eax,0x6fa4e87
  421696:	sub    dl,ch
  421698:	in     eax,dx
  421699:	adc    ch,BYTE PTR [ebx-0x250faf49]
  42169f:	imul   ebp,DWORD PTR [edx+0x1a],0x37
  4216a3:	xchg   esi,eax
  4216a4:	imul   edi,DWORD PTR [ebx-0x54],0xfffffff2
  4216a8:	ror    DWORD PTR [esi+ebx*4-0xc],1
  4216ac:	add    al,0xd6
  4216ae:	xor    esp,DWORD PTR [ebx-0x6c]
  4216b1:	cli    
  4216b2:	int3   
  4216b3:	int3   
  4216b4:	pop    edi
  4216b5:	jo     0x4216b7
  4216b7:	in     al,dx
  4216b8:	push   ebp
  4216b9:	mov    edi,0xc3bfac79
  4216be:	int    0x1a
  4216c0:	mov    al,0xbf
  4216c2:	push   esp
  4216c3:	push   es
  4216c4:	neg    BYTE PTR ds:0xbbd7a9
  4216ca:	into   
  4216cb:	xchg   edx,eax
  4216cc:	sbb    al,0x8b
  4216ce:	pop    es
  4216cf:	mov    ah,al
  4216d1:	jmp    0x421744
  4216d3:	rol    BYTE PTR [eax+0x66c45a01],0xe5
  4216da:	and    ah,BYTE PTR [ebx-0x13]
  4216dd:	test   eax,0x573fb353
  4216e2:	mov    esi,0x6057c7ed
  4216e7:	sar    ebp,1
  4216e9:	fbstp  TBYTE PTR [esi+edi*1+0x31]
  4216ed:	js     0x42168c
  4216ef:	ret    
  4216f0:	and    edi,DWORD PTR [eax+0x5536dcf8]
  4216f6:	repnz lods eax,DWORD PTR ds:[esi]
  4216f8:	and    ecx,DWORD PTR [edx-0x7bcd5dea]
  4216fe:	mov    bh,0xe8
  421700:	push   ecx
  421701:	add    DWORD PTR [edx],eax
  421703:	add    ebp,esp
  421705:	add    eax,0xc0624b60
  42170a:	pop    esi
  42170b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42170c:	nop
  42170d:	jge    0x42168f
  42170f:	clc    
  421710:	cmp    cl,BYTE PTR [edx+0x2eeb1c9]
  421716:	push   ebx
  421717:	pop    esi
  421718:	jne    0x421729
  42171a:	das    
  42171b:	data16 fdiv DWORD PTR [esi*4-0x4337409c]
  421723:	(bad)  
  421725:	and    eax,0x1062c478
  42172a:	imul   BYTE PTR [ebx-0x1c]
  42172d:	mov    dh,0x26
  42172f:	pushf  
  421730:	js     0x421791
  421732:	pop    edx
  421733:	jns    0x421784
  421735:	jmp    0x421799
  421737:	gs aaa 
  421739:	addr16 add eax,0x20cbdf9c
  42173f:	enter  0xb644,0x73
  421743:	cmp    al,0x21
  421745:	(bad)  
  421746:	mov    dl,0xa8
  421748:	ds or  eax,0x94ef498
  42174e:	jge    0x421764
  421750:	jb     0x4216ff
  421752:	inc    edx
  421753:	das    
  421754:	pop    esp
  421755:	in     al,0x5
  421757:	ret    
  421758:	sbb    BYTE PTR [esp+ecx*8],bl
  42175b:	mov    es,eax
  42175d:	sbb    ah,bh
  42175f:	push   ss
  421760:	rol    BYTE PTR [ecx],1
  421762:	(bad)  
  421763:	(bad)  
  421764:	adc    ch,BYTE PTR [edx]
  421766:	and    cl,al
  421768:	into   
  421769:	stos   DWORD PTR es:[edi],eax
  42176a:	push   edi
  42176b:	push   ss
  42176c:	cmp    ebx,DWORD PTR [ebx+esi*1-0x437f4179]
  421773:	jae    0x421712
  421775:	push   0x775973ef
  42177a:	rol    ebx,1
  42177c:	sub    ch,BYTE PTR [ecx-0x1b0dd28b]
  421782:	es (bad) 
  421784:	leave  
  421785:	mov    ds:0xef1c2efd,al
  42178a:	or     bl,ch
  42178c:	dec    esi
  42178d:	push   ds
  42178e:	(bad)  
  42178f:	and    al,0x76
  421791:	and    al,BYTE PTR [ebp+0x34]
  421794:	out    dx,al
  421795:	mov    edx,0x302edbed
  42179a:	sahf   
  42179b:	sub    BYTE PTR [edi],0x8d
  42179e:	pop    esi
  42179f:	jb     0x421813
  4217a1:	inc    ecx
  4217a2:	pop    ebp
  4217a3:	mov    ch,0x74
  4217a5:	add    BYTE PTR [eax-0x35],ah
  4217a8:	push   edx
  4217a9:	ret    
  4217aa:	or     BYTE PTR [ecx*4+0x456d32f7],bh
  4217b1:	mov    fs,WORD PTR ds:0x7e0a33c8
  4217b7:	push   ss
  4217b8:	xor    al,0x88
  4217ba:	ret    0x3040
  4217bd:	inc    ebp
  4217be:	fisub  WORD PTR [ebx-0x4a870f76]
  4217c4:	dec    ebx
  4217c5:	ss jae 0x4217ad
  4217c8:	loope  0x42180a
  4217ca:	or     edi,DWORD PTR [ebp-0x3c]
  4217cd:	mov    esi,0x8737668e
  4217d2:	pop    ebp
  4217d3:	mov    bl,bh
  4217d5:	or     al,0xf8
  4217d7:	fwait
  4217d8:	out    0x72,eax
  4217da:	push   ss
  4217db:	push   eax
  4217dc:	jo     0x421823
  4217de:	imul   ebx,DWORD PTR [ebx],0x3b3eb8e2
  4217e4:	scas   al,BYTE PTR es:[edi]
  4217e5:	pop    ebx
  4217e6:	push   ds
  4217e7:	inc    ebp
  4217e8:	sbb    cl,BYTE PTR [ebp-0x7a]
  4217eb:	push   ecx
  4217ec:	add    esp,DWORD PTR [edx+0x20fe96c0]
  4217f2:	in     eax,dx
  4217f3:	add    eax,0xe3e88151
  4217f8:	(bad)  
  4217f9:	stc    
  4217fa:	sbb    bl,0x1e
  4217fd:	xor    DWORD PTR ds:0x2242e383,esp
  421804:	inc    eax
  421805:	fidiv  WORD PTR fs:[ecx-0x1dd2d805]
  42180c:	mov    edi,edx
  42180e:	mov    eax,0xefe0c915
  421813:	xor    esi,DWORD PTR [ecx-0x49e8c6d5]
  421819:	pop    ebp
  42181a:	fistp  QWORD PTR [eax-0xb]
  42181d:	rcr    DWORD PTR [ecx],0xf9
  421820:	in     eax,dx
  421821:	push   ds
  421822:	cdq    
  421823:	jno    0x421803
  421825:	sub    ebx,edi
  421827:	cmp    al,0x60
  421829:	pusha  
  42182a:	sub    ecx,DWORD PTR [ecx-0x64]
  42182d:	sar    DWORD PTR [ebx+0x6f],0xa7
  421831:	iret   
  421832:	sbb    al,BYTE PTR [ecx+0x40d40524]
  421838:	add    cl,0xf1
  42183b:	jno    0x421883
  42183d:	shr    DWORD PTR [ebx-0x10],1
  421840:	mov    al,0x2c
  421842:	pop    edx
  421843:	call   0x9511:0x819cb7
  42184a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184b:	loop   0x421817
  42184d:	xor    DWORD PTR [ecx+0x21],ebx
  421850:	retf   
  421851:	and    BYTE PTR [ebx],ah
  421853:	test   BYTE PTR [edx-0x6de59f0b],al
  421859:	jle    0x421818
  42185b:	cmp    ch,BYTE PTR [edx+0x65]
  42185e:	in     eax,0x2a
  421860:	jg     0x421810
  421862:	addr16 mov bl,0xdf
  421865:	mov    ebx,0x615730f6
  42186a:	(bad)  
  42186b:	out    dx,al
  42186c:	mov    cl,0x6b
  42186e:	mov    WORD PTR [ecx+0x39e5b6c5],gs
  421874:	jne    0x4218a0
  421876:	gs (bad) 
  421878:	das    
  421879:	dec    eax
  42187a:	xlat   BYTE PTR ds:[ebx]
  42187b:	lods   eax,DWORD PTR ds:[esi]
  42187c:	cmp    ch,BYTE PTR [edi]
  42187e:	inc    edi
  42187f:	and    BYTE PTR [eax],bl
  421881:	int3   
  421882:	sub    eax,0x801f3927
  421887:	mov    ebx,0x6d712efc
  42188c:	int    0x79
  42188e:	pop    eax
  42188f:	adc    ecx,ebx
  421891:	dec    ebx
  421892:	jle    0x4218f0
  421894:	sub    BYTE PTR [esi],al
  421896:	pop    ss
  421897:	mov    dl,0xda
  421899:	push   0xd5303e94
  42189e:	js     0x421859
  4218a0:	inc    ecx
  4218a1:	pop    ecx
  4218a2:	in     al,0x1b
  4218a4:	mov    ch,BYTE PTR ds:0x35061f2e
  4218aa:	sbb    al,0xd8
  4218ac:	aad    0x54
  4218ae:	adc    eax,0x41db40ee
  4218b3:	mov    eax,DWORD PTR [edx]
  4218b5:	ins    BYTE PTR es:[edi],dx
  4218b6:	ja     0x421881
  4218b8:	aas    
  4218b9:	outs   dx,DWORD PTR ds:[esi]
  4218ba:	adc    DWORD PTR [ebx],ebx
  4218bc:	jg     0x421915
  4218be:	(bad)
  4218c1:	inc    esp
  4218c2:	push   edi
  4218c3:	or     BYTE PTR [edx-0x69],ch
  4218c6:	mov    WORD PTR [ebp+0x7870fdd0],?
  4218cc:	loopne 0x4218fd
  4218ce:	xchg   ebx,eax
  4218cf:	xchg   ebx,eax
  4218d0:	fcomp  QWORD PTR [ebp-0x5995c6ce]
  4218d6:	paddd  mm0,mm5
  4218d9:	sub    esp,DWORD PTR ds:0x609e3b42
  4218df:	rcr    DWORD PTR [esi],cl
  4218e1:	dec    eax
  4218e2:	jp     0x421902
  4218e4:	stos   DWORD PTR es:[edi],eax
  4218e5:	jbe    0x42194a
  4218e7:	out    0x7d,eax
  4218e9:	sbb    al,bh
  4218eb:	xlat   BYTE PTR ds:[ebx]
  4218ec:	repnz dec edi
  4218ee:	repnz sbb BYTE PTR [edx+0x2a405dce],0x75
  4218f6:	dec    ebp
  4218f7:	cld    
  4218f8:	jge    0x421971
  4218fa:	out    0x98,al
  4218fc:	pop    ebx
  4218fd:	rol    DWORD PTR [ebp+0x3bd73e35],1
  421903:	sub    dh,BYTE PTR [ecx-0x70]
  421906:	cld    
  421907:	mov    al,ds:0x424e32d3
  42190c:	mov    esi,DWORD PTR [edi-0x18]
  42190f:	mov    ds:0x5bc7da26,eax
  421914:	pop    ebp
  421915:	loope  0x4218c3
  421917:	pop    ecx
  421918:	jmp    0x421910
  42191a:	ror    ah,cl
  42191c:	call   0x2395:0x251606c0
  421923:	lods   eax,DWORD PTR ds:[esi]
  421924:	in     eax,dx
  421925:	jo     0x4218b9
  421927:	loop   0x4218da
  421929:	mov    esi,DWORD PTR [eax+0x337c9092]
  42192f:	sbb    BYTE PTR [edi-0x52],dh
  421932:	mov    dl,BYTE PTR [esi]
  421934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421935:	pop    edx
  421936:	adc    DWORD PTR [edx-0x25],edi
  421939:	jmp    DWORD PTR [esi]
  42193b:	sbb    cl,ah
  42193d:	adc    al,0x3c
  42193f:	fidivr WORD PTR [edi]
  421941:	div    BYTE PTR [esi]
  421943:	ins    BYTE PTR es:[edi],dx
  421944:	in     al,dx
  421945:	outs   dx,DWORD PTR ds:[esi]
  421946:	cwde   
  421947:	push   0x75989358
  42194c:	or     BYTE PTR [edi],bh
  42194e:	pushf  
  42194f:	mov    esi,0x6b80e875
  421954:	jbe    0x42191d
  421956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421957:	dec    ebp
  421958:	mov    ch,0xc2
  42195a:	adc    dl,BYTE PTR [eax+0x4c]
  42195d:	xchg   ebx,eax
  42195e:	adc    ecx,esp
  421960:	scas   al,BYTE PTR es:[edi]
  421961:	fiadd  DWORD PTR [ecx+ebx*4+0x1d]
  421965:	icebp  
  421966:	aaa    
  421967:	int3   
  421968:	mov    ds:0x5f2be614,al
  42196d:	jo     0x421945
  42196f:	call   0xa7d8:0xe0ec6693
  421976:	cli    
  421977:	mov    al,0x20
  421979:	mov    ch,0x4d
  42197b:	lahf   
  42197c:	inc    eax
  42197d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42197e:	ss push ebp
  421980:	mov    edx,0x4a9fb6d2
  421985:	loop   0x4219e0
  421987:	ret    0xb890
  42198a:	rol    DWORD PTR [edx-0x1e0f720a],1
  421990:	cmp    BYTE PTR [ebx],dh
  421992:	sbb    ah,BYTE PTR [eax]
  421994:	aam    0xae
  421996:	call   0x6fd2:0xd4f88b8d
  42199d:	inc    eax
  42199e:	(bad)  
  42199f:	jb     0x4219b5
  4219a1:	int    0xaf
  4219a3:	das    
  4219a4:	push   esp
  4219a5:	inc    ecx
  4219a6:	push   edi
  4219a7:	jnp    0x42193e
  4219a9:	rol    DWORD PTR [ebx-0x70],0xd2
  4219ad:	aas    
  4219ae:	add    BYTE PTR [ecx+eax*4],dh
  4219b1:	xchg   esp,eax
  4219b2:	xchg   esp,eax
  4219b3:	ret    
  4219b4:	ja     0x421a10
  4219b6:	pop    ebp
  4219b7:	(bad)  
  4219b8:	js     0x421a34
  4219ba:	xchg   BYTE PTR [ebx+0x721433cb],cl
  4219c0:	xor    dh,al
  4219c2:	imul   eax,DWORD PTR [edi],0x6
  4219c5:	fidivr DWORD PTR [edi+0x5a94856f]
  4219cb:	shl    eax,1
  4219cd:	dec    ebp
  4219ce:	ins    BYTE PTR es:[edi],dx
  4219cf:	es aam 0xd8
  4219d2:	jmp    DWORD PTR [ebp-0x58b59bda]
  4219d8:	lods   al,BYTE PTR ds:[esi]
  4219d9:	aas    
  4219da:	shl    BYTE PTR [eax-0x1a229d5f],0xdf
  4219e1:	jmp    DWORD PTR [edi]
  4219e3:	iret   
  4219e4:	retf   
  4219e5:	jne    0x414081
  4219eb:	jmp    0x423e83
  4219f0:	mov    edx,DWORD PTR [ebp-0x10]
  4219f3:	mov    DWORD PTR [ebp+0x8],edx
  4219f6:	jmp    0x423df4
  4219fb:	mov    edx,DWORD PTR [ebp+0x8]
  4219fe:	mov    ebx,DWORD PTR [ebp-0x8]
  421a01:	xor    edx,eax
  421a03:	xor    ebx,eax
  421a05:	sub    edx,ebx
  421a07:	sub    edx,esi
  421a09:	xor    edx,eax
  421a0b:	mov    DWORD PTR [ebp+0x8],edx
  421a0e:	mov    edx,DWORD PTR [ebp+0x8]
  421a11:	mov    ebx,DWORD PTR [ebp-0x58]
  421a14:	add    edx,0x5708f8
  421a1a:	jmp    0x423da3
  421a1f:	sub    BYTE PTR [edx],ch
  421a21:	addr16 jnp 0x421a8b
  421a24:	jnp    0x4219b2
  421a26:	jne    0x421a11
  421a28:	jne    0x421a13
  421a2a:	imul   DWORD PTR [ebx+0x2d866efc]
  421a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a31:	jns    0x421aad
  421a33:	push   es
  421a34:	pop    edi
  421a35:	jp     0x421ab1
  421a37:	mov    esp,0x5acd621a
  421a3c:	(bad)  
  421a3d:	jp     0x4219f1
  421a3f:	(bad)  
  421a40:	mov    edx,0x6f5785e4
  421a45:	popf   
  421a46:	sbb    eax,0x8c21abc1
  421a4b:	sbb    ah,BYTE PTR [ebx-0x9cff6d2]
  421a51:	sbb    eax,0x1f08fad5
  421a56:	call   FWORD PTR [ecx]
  421a58:	xchg   esi,eax
  421a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a5a:	ins    BYTE PTR es:[edi],dx
  421a5b:	add    esi,0x8cc4cbc5
  421a61:	dec    eax
  421a62:	out    dx,eax
  421a63:	sub    BYTE PTR [ebx-0x63],ah
  421a66:	mov    bl,0x9f
  421a68:	sub    cl,bl
  421a6a:	je     0x421a86
  421a6c:	cmp    al,0x9b
  421a6e:	jno    0x421a2a
  421a70:	xchg   esi,eax
  421a71:	mov    eax,?
  421a73:	jge    0x421a8e
  421a75:	dec    ebx
  421a76:	adc    DWORD PTR gs:0x31bc8fb2,esp
  421a7d:	xchg   esp,eax
  421a7e:	jmp    0x9f945fc7
  421a83:	sub    ecx,ebx
  421a85:	jnp    0x421ae9
  421a87:	frstor [edi]
  421a89:	xor    eax,ecx
  421a8b:	(bad)  
  421a8d:	cdq    
  421a8e:	or     DWORD PTR [edi],esi
  421a90:	mov    bh,cl
  421a92:	or     al,0x22
  421a94:	push   esi
  421a95:	(bad)  [ebp-0x6efa238a]
  421a9b:	in     al,0x90
  421a9d:	or     eax,0xac07bee3
  421aa2:	sbb    eax,0xf90fa742
  421aa7:	cwde   
  421aa8:	and    eax,0x1041aba9
  421aad:	icebp  
  421aae:	stos   BYTE PTR es:[edi],al
  421aaf:	mov    al,ds:0xebe3f103
  421ab4:	mov    ch,0x97
  421ab6:	outs   dx,DWORD PTR ds:[esi]
  421ab7:	sub    al,0xab
  421ab9:	stos   BYTE PTR es:[edi],al
  421aba:	jb     0x421afe
  421abc:	fisub  DWORD PTR [ebp-0x3ee0bca6]
  421ac2:	pop    ebp
  421ac3:	punpcklbw mm4,DWORD PTR [ebx+0x7e]
  421ac7:	adc    ah,BYTE PTR [eax+0x32]
  421aca:	aas    
  421acb:	xchg   DWORD PTR [edx+0x46],edi
  421ace:	mul    DWORD PTR [ecx-0x7e]
  421ad1:	into   
  421ad2:	or     ah,bl
  421ad4:	jg     0x421afc
  421ad6:	cli    
  421ad7:	cmp    al,0x50
  421ad9:	pop    esp
  421ada:	(bad)  [esp+ebp*2-0x6e20ceb8]
  421ae1:	mov    bh,0x0
  421ae3:	test   BYTE PTR [edi-0x291fa5aa],bh
  421ae9:	cmp    DWORD PTR [eax],ebx
  421aeb:	sub    al,0xe6
  421aed:	lods   eax,DWORD PTR ds:[esi]
  421aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af0:	pop    ds
  421af1:	stos   DWORD PTR es:[edi],eax
  421af2:	jns    0x421b2e
  421af4:	scas   al,BYTE PTR es:[edi]
  421af5:	(bad)  
  421af6:	aam    0x2c
  421af8:	push   ebx
  421af9:	imul   edi,ecx,0x7c66e354
  421aff:	inc    eax
  421b00:	mov    ah,0xaa
  421b02:	jnp    0x421a9b
  421b04:	mov    bl,0xf1
  421b06:	scas   al,BYTE PTR es:[edi]
  421b07:	jne    0x421b35
  421b09:	jno    0x421a8f
  421b0b:	mov    ds:0x2c20fe19,al
  421b10:	fisub  DWORD PTR [ecx]
  421b12:	call   0x8ea33aa2
  421b17:	lea    edi,[eax+0x7b]
  421b1a:	xor    al,0x88
  421b1c:	int3   
  421b1d:	out    dx,eax
  421b1e:	aaa    
  421b1f:	test   al,0x55
  421b21:	sub    DWORD PTR [edi+0x3e1a74e8],esp
  421b27:	in     al,0x1c
  421b29:	ror    BYTE PTR [eax-0x5a83c702],cl
  421b2f:	sbb    al,BYTE PTR [eax+0xa]
  421b32:	arpl   WORD PTR [eax],cx
  421b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b35:	into   
  421b36:	scas   eax,DWORD PTR es:[edi]
  421b37:	repnz iret 
  421b39:	xchg   esp,eax
  421b3a:	repnz (bad) 
  421b3d:	arpl   WORD PTR [ecx+esi*8],bp
  421b40:	pop    ecx
  421b41:	scas   al,BYTE PTR es:[edi]
  421b42:	and    BYTE PTR [edx-0x7f316410],ch
  421b48:	mulps  xmm4,XMMWORD PTR [ebp-0x22c149e6]
  421b4f:	sbb    bh,bl
  421b51:	mov    ebp,0x63489693
  421b56:	sbb    BYTE PTR [ecx],dl
  421b58:	pop    ebx
  421b59:	dec    eax
  421b5a:	dec    ecx
  421b5b:	push   0x30
  421b5d:	mov    esi,0x97ecf5c3
  421b62:	loopne 0x421bd3
  421b64:	add    al,BYTE PTR [ebx+0x2f8db1f8]
  421b6a:	out    dx,eax
  421b6b:	add    ebp,DWORD PTR [ebx-0x24]
  421b6e:	mov    esi,DWORD PTR ds:0x80e2a564
  421b74:	inc    edi
  421b75:	lds    ebx,FWORD PTR [ecx]
  421b77:	and    DWORD PTR [edx-0x1c344a90],ebx
  421b7d:	scas   al,BYTE PTR es:[edi]
  421b7e:	and    al,0x3b
  421b80:	or     eax,0x64338f7c
  421b85:	push   esi
  421b86:	dec    edx
  421b87:	fistp  DWORD PTR [esi]
  421b89:	lods   al,BYTE PTR ds:[esi]
  421b8a:	(bad)  
  421b8b:	fsubr  QWORD PTR [ecx-0x23e4709d]
  421b91:	jns    0x421ba5
  421b93:	jp     0x421bf0
  421b95:	xor    ebx,DWORD PTR [ebx+0x3b4820a3]
  421b9b:	out    0xb9,eax
  421b9d:	xor    edi,eax
  421b9f:	mov    ds:0xcfd624d3,eax
  421ba4:	ret    0x1a07
  421ba7:	retf   
  421ba8:	mov    al,ds:0x6195e6da
  421bad:	or     eax,0xe42bd73c
  421bb2:	sub    edx,eax
  421bb4:	out    0x2,eax
  421bb6:	loopne 0x421bba
  421bb8:	sub    eax,0x4d72d05a
  421bbe:	(bad)  
  421bbf:	mov    esi,0x3187275c
  421bc4:	repnz inc esp
  421bc6:	in     eax,0x25
  421bc8:	cmp    edx,esp
  421bca:	jbe    0x421b95
  421bcc:	(bad)
  421bcf:	lods   eax,DWORD PTR ds:[esi]
  421bd0:	pop    ebx
  421bd1:	out    dx,al
  421bd2:	int3   
  421bd3:	aad    0x8e
  421bd5:	bound  ebx,QWORD PTR [edi+0x2dfeaf8a]
  421bdb:	outs   dx,BYTE PTR ds:[esi]
  421bdc:	pop    ebx
  421bdd:	mov    eax,0xbed7651a
  421be2:	jns    0x421b98
  421be4:	addr16 js 0x421b6c
  421be7:	mov    ebx,0xd94ce698
  421bec:	mov    cl,0x65
  421bee:	dec    esp
  421bef:	shl    DWORD PTR [ebx+ebx*2+0x73f3fe2c],1
  421bf6:	pop    es
  421bf7:	bts    DWORD PTR [eax+0x6f1b66b0],ecx
  421bfe:	mov    bl,0xca
  421c00:	or     eax,0x5c2d143a
  421c05:	xor    BYTE PTR [ecx-0x33],bh
  421c08:	test   BYTE PTR [edx+0xd9f8f2b],bh
  421c0e:	and    BYTE PTR [edx],0x11
  421c11:	adc    BYTE PTR [ebp-0x32ac7e8e],cl
  421c17:	mov    ecx,0x52efcfee
  421c1c:	and    al,0x39
  421c1e:	mov    ecx,0xd2328cac
  421c23:	test   al,0x84
  421c25:	mov    edx,0x6855d035
  421c2a:	xor    al,0x85
  421c2c:	bound  eax,QWORD PTR [eax+0x73]
  421c2f:	in     al,0x16
  421c31:	scas   al,BYTE PTR es:[edi]
  421c32:	add    DWORD PTR [ebx+0xb],esp
  421c35:	mov    ds:0x1365ef03,eax
  421c3a:	mov    ds:0xcda382ca,eax
  421c3f:	faddp  st(1),st
  421c41:	in     eax,dx
  421c42:	pop    eax
  421c43:	dec    esp
  421c44:	jne    0x421bf3
  421c46:	xchg   edi,eax
  421c47:	int    0xa7
  421c49:	cmp    eax,DWORD PTR ds:0xafad86e9
  421c4f:	out    0xe5,al
  421c51:	fwait
  421c52:	shr    BYTE PTR [ecx+0x69044c8b],cl
  421c58:	pop    esi
  421c59:	inc    ecx
  421c5a:	push   0x8492bccc
  421c5f:	push   es
  421c60:	(bad)  
  421c61:	or     BYTE PTR [ebp-0x43],0xe2
  421c65:	retf   0x5fc3
  421c68:	repnz pop dx
  421c6b:	inc    edi
  421c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6d:	sub    al,0x17
  421c6f:	and    DWORD PTR [esi],eax
  421c71:	jbe    0x421c0e
  421c73:	mov    ds,edi
  421c75:	loope  0x421cd2
  421c77:	mov    bl,0x2a
  421c79:	adc    DWORD PTR [ebp+0x38417014],0x586c2534
  421c83:	not    DWORD PTR [edx]
  421c85:	sbb    eax,0xeb2df0cd
  421c8a:	sbb    al,0xb9
  421c8c:	fdivr  DWORD PTR [eax-0x79]
  421c8f:	add    dl,bh
  421c91:	xchg   esp,eax
  421c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c93:	scas   al,BYTE PTR es:[edi]
  421c94:	inc    eax
  421c95:	jb     0x421ce4
  421c97:	push   edi
  421c98:	pusha  
  421c99:	or     al,0x1a
  421c9b:	mov    ch,0x79
  421c9d:	fld    QWORD PTR [ecx-0x4a0558e]
  421ca3:	test   eax,0x4be0b4f0
  421ca8:	es cmp al,0x9f
  421cab:	outs   dx,BYTE PTR ds:[esi]
  421cac:	out    0xdb,eax
  421cae:	pop    ebp
  421caf:	mov    edx,DWORD PTR [ebx]
  421cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb2:	jle    0x421c71
  421cb4:	or     eax,0x5e13f6b1
  421cb9:	sub    DWORD PTR [ebx-0x44],esi
  421cbc:	out    dx,al
  421cbd:	enter  0xf6c5,0xf7
  421cc1:	es add BYTE PTR es:0xcedb19f9,ch
  421cc9:	or     esp,DWORD PTR [eax]
  421ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ccc:	jecxz  0x421cf7
  421cce:	mov    cl,0xa9
  421cd0:	pop    ebp
  421cd1:	pop    esp
  421cd2:	data16 icebp 
  421cd4:	xchg   ebp,eax
  421cd5:	push   cs
  421cd6:	mov    WORD PTR [esi-0x1a93e2ad],ss
  421cdc:	xchg   edx,eax
  421cdd:	push   esp
  421cde:	push   0xffffffb4
  421ce0:	test   BYTE PTR [edi-0x63dea998],0x78
  421ce7:	dec    eax
  421ce8:	jb     0x421cf6
  421cea:	adc    eax,0x957a96c6
  421cef:	cld    
  421cf0:	inc    ebp
  421cf1:	lahf   
  421cf2:	mov    al,ds:0xe4017def
  421cf7:	fidiv  WORD PTR [edi-0x955b545]
  421cfd:	test   BYTE PTR cs:[ebx],dl
  421d00:	pusha  
  421d01:	call   0xa724:0x30be2acf
  421d08:	aad    0x2d
  421d0a:	push   eax
  421d0b:	and    dl,BYTE PTR [edx]
  421d0d:	mov    ?,WORD PTR [esi+ebp*8]
  421d10:	lock mov eax,ds:0x24bbcd77
  421d16:	mov    DWORD PTR [ebx+0x19ac9182],eax
  421d1c:	imul   edx,DWORD PTR [edx],0xffffffb1
  421d1f:	imul   eax,eax,0x2a
  421d22:	mov    ch,0x8c
  421d24:	pop    ecx
  421d25:	adc    eax,0xe7943bd
  421d2a:	(bad)  
  421d2b:	arpl   WORD PTR [ecx+0x1d],di
  421d2e:	xchg   edi,eax
  421d2f:	push   ss
  421d30:	dec    edi
  421d31:	ss xor ch,0xad
  421d35:	aam    0xd8
  421d37:	fs aad 0xc6
  421d3a:	(bad)  
  421d3b:	xor    BYTE PTR [ecx],0x8b
  421d3e:	inc    ecx
  421d3f:	stc    
  421d40:	mov    ch,BYTE PTR [eax+0x2a9b669b]
  421d46:	sti    
  421d47:	cmc    
  421d48:	or     eax,0x25c864b3
  421d4d:	ss push edx
  421d4f:	popa   
  421d50:	mov    ebx,0xe1780aa
  421d55:	sub    BYTE PTR [edi],0x6c
  421d58:	bound  ebp,QWORD PTR [edx]
  421d5a:	icebp  
  421d5b:	aas    
  421d5c:	dec    eax
  421d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d5e:	rcr    DWORD PTR [edx],1
  421d60:	bound  esp,QWORD PTR [edi+0x18768858]
  421d66:	dec    ecx
  421d67:	repnz bound esp,QWORD PTR [eax-0x7231fc38]
  421d6e:	loop   0x421d0f
  421d70:	xchg   ebp,eax
  421d71:	cld    
  421d72:	mov    ebx,0xb411685d
  421d77:	fwait
  421d78:	ret    
  421d79:	je     0x421d62
  421d7b:	mov    esp,DWORD PTR [ecx-0x5510d098]
  421d81:	sub    ebp,DWORD PTR [esi]
  421d83:	mov    edx,0x871eb3d4
  421d88:	mov    eax,ds:0x3b31ac81
  421d8d:	test   eax,0xe2a79a6a
  421d92:	mov    dl,0x50
  421d94:	mov    eax,ds:0x82a54a22
  421d99:	pop    ebp
  421d9a:	cmp    eax,0xa8f224d1
  421d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421da0:	jmp    0x421e09
  421da2:	rcl    BYTE PTR ds:0x412a5d6c,cl
  421da8:	jle    0x421d44
  421daa:	sub    BYTE PTR [edi+ebx*1+0xb56905f],0xd1
  421db2:	lock cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  421db5:	cmc    
  421db6:	xchg   edi,eax
  421db7:	(bad)  
  421db8:	xchg   DWORD PTR fs:[edx+0x32],ebp
  421dbc:	test   esp,esp
  421dbe:	jno    0x421e0a
  421dc0:	pop    DWORD PTR [ecx+0x6e3fc4be]
  421dc6:	dec    edx
  421dc7:	jae    0x421da2
  421dc9:	js     0x421d8f
  421dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dcc:	ins    BYTE PTR es:[edi],dx
  421dcd:	mov    WORD PTR [ebp+0x61],cs
  421dd0:	aas    
  421dd1:	push   ebx
  421dd2:	push   edx
  421dd3:	(bad)  
  421dd4:	rcr    BYTE PTR [edi-0x1cdece58],1
  421dda:	push   eax
  421ddb:	inc    ecx
  421ddc:	add    al,0x33
  421dde:	push   ebp
  421ddf:	xchg   ebp,eax
  421de0:	lahf   
  421de1:	or     BYTE PTR [edi],dl
  421de3:	paddd  mm7,QWORD PTR ds:0xa228b8ed
  421dea:	cmp    bh,dh
  421dec:	cmp    BYTE PTR [edx],bl
  421dee:	rcr    BYTE PTR [edx-0x42df507a],cl
  421df4:	inc    esi
  421df5:	inc    edx
  421df6:	jno    0x421d85
  421df8:	push   ecx
  421df9:	ja     0x421d99
  421dfb:	enter  0x9602,0x5f
  421dff:	out    0x4,eax
  421e01:	dec    ebx
  421e02:	dec    ecx
  421e03:	fs dec ebp
  421e05:	inc    eax
  421e06:	pop    ecx
  421e07:	cli    
  421e08:	pop    eax
  421e09:	in     eax,0x6e
  421e0b:	sar    BYTE PTR [ecx-0x33],1
  421e0e:	repnz addr16 inc ebx
  421e11:	mov    dh,0x87
  421e13:	repnz push esp
  421e15:	aam    0xfa
  421e17:	leave  
  421e18:	rol    DWORD PTR [eax+0x69],1
  421e1b:	inc    esi
  421e1c:	std    
  421e1d:	idiv   BYTE PTR [ebx]
  421e1f:	(bad)  
  421e20:	std    
  421e21:	cmp    BYTE PTR [esi-0x1b],bl
  421e24:	cmp    eax,0xb17d399
  421e29:	sar    bl,cl
  421e2b:	xchg   ecx,eax
  421e2c:	mov    bl,0x9a
  421e2e:	(bad)  
  421e2f:	popf   
  421e30:	cmp    BYTE PTR [edi],bl
  421e32:	sbb    DWORD PTR [ebp-0x31342cf5],0x929796f1
  421e3c:	inc    ecx
  421e3d:	(bad)  
  421e3e:	lea    eax,[ecx+eiz*4+0x2b5d2670]
  421e45:	mov    ebp,0x659157a1
  421e4a:	dec    esi
  421e4b:	inc    ebp
  421e4c:	jg     0x421e67
  421e4e:	bound  eax,QWORD PTR [edi+0x1aa95b39]
  421e54:	and    BYTE PTR [esi+0x48f53e82],0xa4
  421e5b:	ja     0x421e19
  421e5d:	rcl    DWORD PTR [ecx+eax*4],0x5e
  421e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e62:	add    BYTE PTR [edx-0x46],bl
  421e65:	adc    al,0xcf
  421e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e68:	cmp    BYTE PTR [ebx+0x0],ah
  421e6b:	push   edx
  421e6c:	pop    edi
  421e6d:	sbb    edi,esp
  421e6f:	loop   0x421e12
  421e71:	xchg   ebx,eax
  421e72:	and    BYTE PTR ds:[edi],0x44
  421e76:	orps   xmm5,XMMWORD PTR [ebx+0x74]
  421e7a:	mov    ecx,0x4a72cffb
  421e7f:	jmp    0x421e14
  421e81:	mov    eax,0xc7ab4b61
  421e86:	nop
  421e87:	shl    DWORD PTR [esi],1
  421e89:	mov    WORD PTR [esi],?
  421e8b:	rcr    BYTE PTR [esp+eax*4+0x4046a56c],0xb0
  421e93:	xor    BYTE PTR [edi+0xb424872],0xc1
  421e9a:	cld    
  421e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9c:	outs   dx,DWORD PTR ds:[esi]
  421e9d:	stos   BYTE PTR es:[edi],al
  421e9e:	xchg   DWORD PTR [edx],eax
  421ea0:	jecxz  0x421e97
  421ea2:	xchg   ecx,eax
  421ea3:	retf   0xc172
  421ea6:	sahf   
  421ea7:	adc    eax,0x4120425e
  421eac:	and    al,0x67
  421eae:	and    BYTE PTR [ecx],bl
  421eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eb1:	mov    al,ds:0xd18e05b1
  421eb6:	lea    ebx,[esi+0x7a]
  421eb9:	fadd   DWORD PTR [ecx+0x1ea1f58]
  421ebf:	std    
  421ec0:	int    0x8c
  421ec2:	push   eax
  421ec3:	arpl   di,bx
  421ec5:	hlt    
  421ec6:	test   eax,0x99be6ee6
  421ecb:	repz mov ebx,0xe21c37d2
  421ed1:	sub    bl,BYTE PTR [ebx]
  421ed3:	sbb    DWORD PTR [edi+0x154f1c53],0xb05b8e3a
  421edd:	loop   0x421f1b
  421edf:	pusha  
  421ee0:	xchg   edi,eax
  421ee1:	push   edx
  421ee2:	aad    0x1c
  421ee4:	xchg   ebp,eax
  421ee5:	fstp   TBYTE PTR [edi+eax*1-0x723eee9c]
  421eec:	into   
  421eed:	mov    al,ds:0xd000a05a
  421ef2:	jo     0x421ead
  421ef4:	shl    BYTE PTR [eax-0x1d8cb76f],0xd7
  421efb:	div    DWORD PTR [ebx-0x7a4ba5b2]
  421f01:	xchg   edx,eax
  421f02:	jle    0x421ef5
  421f04:	dec    ebp
  421f05:	jnp    0x421ebe
  421f07:	pop    ds
  421f08:	xchg   ebp,eax
  421f09:	in     eax,0xe3
  421f0b:	xchg   ecx,eax
  421f0c:	xchg   esp,eax
  421f0d:	cmc    
  421f0e:	push   edx
  421f0f:	and    al,0x68
  421f11:	cmp    al,0x30
  421f13:	inc    esp
  421f14:	sbb    DWORD PTR [edx],0xa46552c2
  421f1a:	mov    ?,WORD PTR [ecx-0x5]
  421f1d:	cmc    
  421f1e:	iret   
  421f1f:	inc    BYTE PTR [esi-0x20]
  421f22:	dec    eax
  421f23:	inc    esi
  421f24:	lock push esp
  421f26:	pop    DWORD PTR [esi+0x40]
  421f29:	(bad)  
  421f2a:	jns    0x421eb3
  421f2c:	pop    ds
  421f2d:	jo     0x421ee1
  421f2f:	adc    eax,DWORD PTR [ebx+0x68]
  421f32:	or     al,0x36
  421f34:	adc    ecx,DWORD PTR [esi-0x1f]
  421f37:	scas   al,BYTE PTR es:[edi]
  421f38:	or     eax,0xca71d72a
  421f3d:	sbb    edx,DWORD PTR ds:0xc72c5b69
  421f43:	clc    
  421f44:	in     al,dx
  421f45:	pop    edx
  421f46:	fsubr  QWORD PTR [eax-0x72]
  421f49:	call   0xe5dd24ce
  421f4e:	nop
  421f4f:	inc    esi
  421f50:	into   
  421f51:	scas   eax,DWORD PTR es:[edi]
  421f52:	inc    ecx
  421f53:	push   esp
  421f54:	xlat   BYTE PTR ds:[ebx]
  421f55:	sbb    DWORD PTR [ebx+0xb7c358f],eax
  421f5b:	xlat   BYTE PTR ds:[ebx]
  421f5c:	and    eax,0x4682e0b6
  421f61:	(bad)  
  421f62:	ror    BYTE PTR [ecx-0x6d],1
  421f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f66:	pop    ss
  421f67:	(bad)  
  421f68:	aad    0x19
  421f6a:	pop    edx
  421f6b:	ret    
  421f6c:	shl    BYTE PTR [ecx+ebx*4-0x4f91cf6c],1
  421f73:	dec    ebp
  421f74:	jmp    0x20d2:0xf1cc1b48
  421f7b:	arpl   WORD PTR [ebx+0x63],bx
  421f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f7f:	inc    eax
  421f80:	cmp    DWORD PTR [esi],edx
  421f82:	mov    bl,0x64
  421f84:	jmp    0x421f51
  421f86:	in     al,dx
  421f87:	mov    ds:0xece990aa,eax
  421f8c:	add    esp,DWORD PTR [ecx+0x46]
  421f8f:	adc    eax,0xb10f744
  421f94:	(bad)  
  421f96:	xchg   ecx,eax
  421f97:	lds    edx,FWORD PTR [esi-0x7a]
  421f9a:	lock shld DWORD PTR [ecx],ebp,0xfb
  421f9f:	rcr    eax,0xf7
  421fa2:	xchg   ebp,eax
  421fa3:	dec    eax
  421fa4:	cmc    
  421fa5:	or     edi,ecx
  421fa7:	(bad)  
  421fa8:	mov    ds:0x16a0a65b,al
  421fad:	(bad)  
  421fae:	in     al,dx
  421faf:	mov    ecx,0x55ba0c96
  421fb4:	ficomp DWORD PTR [edi]
  421fb6:	test   esp,esi
  421fb8:	js     0x421f8e
  421fba:	sbb    eax,0xb2f4bbaa
  421fbf:	in     al,dx
  421fc0:	jnp    0x421ff5
  421fc2:	in     al,0xa5
  421fc4:	mov    WORD PTR [eax],fs
  421fc6:	loope  0x422023
  421fc8:	cld    
  421fc9:	fldl2t 
  421fcb:	lea    esp,[eax+0x2a]
  421fce:	or     al,0x4f
  421fd0:	xchg   DWORD PTR [eax],esp
  421fd2:	mov    dh,0x66
  421fd4:	(bad)  [ebp-0x19d69faf]
  421fda:	(bad)  [esp+eax*2-0x497b29ba]
  421fe1:	xlat   BYTE PTR ds:[ebx]
  421fe2:	xchg   ecx,eax
  421fe3:	fwait
  421fe4:	xchg   esi,eax
  421fe5:	js     0x422013
  421fe7:	and    eax,0x5fb52953
  421fec:	out    0xd,eax
  421fee:	and    eax,0x3a037bbb
  421ff3:	sbb    ebp,DWORD PTR [edi-0x80]
  421ff6:	jns    0x421fc2
  421ff8:	adc    edx,DWORD PTR [esi+eax*8-0x9]
  421ffc:	xchg   ebx,eax
  421ffd:	rcl    BYTE PTR [edi-0x2f],0x30
  422001:	and    BYTE PTR [esi-0x8],ch
  422004:	das    
  422005:	jecxz  0x422032
  422007:	mov    ch,0xe6
  422009:	aam    0xf7
  42200b:	sub    BYTE PTR [esi+0x1f87e60e],dh
  422011:	in     eax,dx
  422012:	aad    0x53
  422014:	xor    eax,0x8f27ac28
  422019:	out    0x84,al
  42201b:	fistp  WORD PTR [esi]
  42201d:	sub    DWORD PTR [ebx+ecx*4+0x48],ebp
  422021:	aaa    
  422022:	sbb    esi,eax
  422024:	pop    ds
  422025:	xchg   esi,eax
  422026:	cwde   
  422027:	fdivr  DWORD PTR [edi-0x10]
  42202a:	mov    al,0xde
  42202c:	repnz leave 
  42202e:	inc    edi
  42202f:	into   
  422030:	int3   
  422031:	sahf   
  422032:	(bad)  
  422034:	dec    eax
  422035:	dec    ebp
  422036:	cmp    DWORD PTR [ebx*1+0x479e90bf],edx
  42203d:	xchg   esi,eax
  42203e:	mov    al,ds:0xd3c03cae
  422043:	ror    dh,0x85
  422046:	push   0xa9b33171
  42204b:	es sbb edi,ecx
  42204e:	retf   
  42204f:	xchg   esp,eax
  422050:	pop    esp
  422051:	scas   eax,DWORD PTR es:[edi]
  422052:	adc    esp,DWORD PTR [edi]
  422054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422055:	mov    al,ds:0x429c73f
  42205a:	ja     0x42208f
  42205c:	mov    ebx,0x22b3096f
  422061:	aaa    
  422062:	call   0xfe66:0xff08e0c2
  422069:	sub    al,0x78
  42206b:	push   edi
  42206c:	(bad)  
  42206d:	ret    
  42206e:	lock stos BYTE PTR es:[edi],al
  422070:	pop    ebp
  422071:	xor    al,0x29
  422073:	jmp    0x670b:0xb08f8b4a
  42207a:	aas    
  42207b:	jo     0x42200e
  42207d:	push   edi
  42207e:	(bad)  
  42207f:	into   
  422080:	mov    ds,edx
  422082:	aad    0x8a
  422084:	pushf  
  422085:	and    eax,0xb72bad07
  42208a:	sub    DWORD PTR [ecx],eax
  42208c:	xchg   edi,eax
  42208d:	cmp    BYTE PTR [ecx-0x35c6ae3e],0xd1
  422094:	push   di
  422096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422097:	xchg   BYTE PTR [ebx+0x69ce6045],ah
  42209d:	call   0xe65ba93c
  4220a2:	aam    0xe8
  4220a4:	push   edi
  4220a5:	pop    ds
  4220a6:	sub    ah,dh
  4220a8:	dec    esp
  4220a9:	push   edx
  4220aa:	arpl   WORD PTR [edi],bx
  4220ac:	inc    ebx
  4220ad:	and    DWORD PTR [edx-0x6772299e],ebx
  4220b3:	push   ebx
  4220b4:	dec    ebx
  4220b5:	push   ebp
  4220b6:	imul   edx,DWORD PTR [eax-0x16],0xfd2499e3
  4220bd:	mov    esp,0xc158ea81
  4220c2:	dec    edx
  4220c3:	dec    edi
  4220c4:	push   ecx
  4220c5:	and    dh,BYTE PTR [esi+0x6061def3]
  4220cb:	(bad)
  4220ce:	pusha  
  4220cf:	pop    esp
  4220d0:	fisub  WORD PTR [esi]
  4220d2:	loop   0x4220a3
  4220d4:	adc    BYTE PTR [ebx],0x19
  4220d7:	jg     0x42211a
  4220d9:	jnp    0x422071
  4220db:	dec    ebx
  4220dc:	shl    DWORD PTR [ebp+0x2],1
  4220df:	int3   
  4220e0:	push   edx
  4220e1:	add    DWORD PTR [eax-0x5a82462c],edi
  4220e7:	inc    ebx
  4220e8:	push   0xe331d21e
  4220ed:	or     bl,0xaa
  4220f0:	ins    DWORD PTR es:[edi],dx
  4220f1:	jno    0x422120
  4220f3:	inc    ebx
  4220f4:	in     eax,0x2f
  4220f6:	xor    al,0xd2
  4220f8:	(bad)  
  4220f9:	into   
  4220fa:	mov    bh,dh
  4220fc:	or     ebx,DWORD PTR [edi+0x4251e42d]
  422102:	mov    eax,0xfaf63bf7
  422107:	sub    BYTE PTR [ecx-0x10],bh
  42210a:	ins    DWORD PTR es:[edi],dx
  42210b:	fndisi(8087 only) 
  42210d:	mov    eax,0x8c4a6f4d
  422112:	sbb    dh,BYTE PTR [ecx-0x47]
  422115:	rol    BYTE PTR [edi],1
  422117:	fild   DWORD PTR [ebx+0x400812cd]
  42211d:	xchg   ebp,eax
  42211e:	xor    DWORD PTR [ecx-0x586d4f34],esp
  422124:	sbb    eax,0xcc075687
  422129:	lods   eax,DWORD PTR ds:[esi]
  42212a:	hlt    
  42212b:	dec    esp
  42212c:	push   ecx
  42212d:	add    cl,ah
  42212f:	or     al,0x8a
  422131:	sub    dl,bl
  422133:	xchg   esi,eax
  422134:	ss or  ecx,ebp
  422137:	(bad)  
  422138:	push   ecx
  422139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42213a:	mov    BYTE PTR [ebx],0x57
  42213d:	retf   0xc0ea
  422140:	mov    dh,0x7d
  422142:	jle    0x422160
  422144:	aaa    
  422145:	push   cs
  422146:	sti    
  422147:	stos   DWORD PTR es:[edi],eax
  422148:	sahf   
  422149:	leave  
  42214a:	or     ah,0x68
  42214d:	sbb    esp,ecx
  42214f:	mov    eax,0x977ef59f
  422154:	sbb    BYTE PTR [eax-0x6175b72c],bl
  42215a:	cmp    edx,DWORD PTR [edx+0x195e47fa]
  422160:	cmp    edi,DWORD PTR [ebp+edx*1-0x459f82e0]
  422167:	push   0xf18b2e8f
  42216c:	cmc    
  42216d:	jp     0x42215e
  42216f:	or     ecx,DWORD PTR [esi]
  422171:	and    dl,BYTE PTR [ebp+0x1e]
  422174:	ja     0x4221a7
  422176:	or     eax,0x39dd24f7
  42217b:	jo     0x4221ef
  42217d:	shl    esi,0x97
  422180:	lods   al,BYTE PTR ds:[esi]
  422181:	stos   DWORD PTR es:[edi],eax
  422182:	es ja  0x422157
  422185:	fldenv [ebx]
  422187:	test   eax,0xc62fef0e
  42218c:	pop    ebx
  42218d:	aaa    
  42218e:	cwde   
  42218f:	xor    eax,DWORD PTR [ebx+0x56]
  422192:	push   edi
  422193:	imul   ecx,DWORD PTR [ebp+0x438270d7],0xffffff91
  42219a:	inc    esi
  42219b:	sbb    eax,0xd6ba07e7
  4221a0:	sbb    DWORD PTR [ebx-0x3e],esi
  4221a3:	dec    eax
  4221a4:	clc    
  4221a5:	push   eax
  4221a6:	xor    al,0xdc
  4221a8:	popf   
  4221a9:	test   eax,0x24e475ab
  4221ae:	les    ebx,FWORD PTR [ebx-0x41dc2bd3]
  4221b4:	cdq    
  4221b5:	repz sub al,0x15
  4221b8:	(bad)  
  4221b9:	jmp    0xfee6:0xfefdca3c
  4221c0:	addr16 cmp al,0xf9
  4221c3:	add    ecx,edi
  4221c5:	fs in  al,0xaf
  4221c8:	lock adc bh,BYTE PTR [edx]
  4221cb:	sahf   
  4221cc:	ins    DWORD PTR es:[edi],dx
  4221cd:	dec    esp
  4221ce:	ds pop es
  4221d0:	xchg   ebp,eax
  4221d1:	jmp    0x4221f7
  4221d3:	cmc    
  4221d4:	bound  esp,QWORD PTR [esi+0x6e]
  4221d7:	adc    BYTE PTR ds:0x5bc42d4a,ah
  4221dd:	inc    edx
  4221de:	push   ds
  4221df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e0:	pop    es
  4221e1:	cmp    bh,BYTE PTR [edx]
  4221e3:	out    0xf4,eax
  4221e5:	fist   DWORD PTR [ecx]
  4221e7:	dec    esi
  4221e8:	sub    edx,DWORD PTR [edi-0x7]
  4221eb:	fs jmp 0xbe7dbd2d
  4221f1:	bound  eax,QWORD PTR ds:0x346e
  4221f6:	gs out dx,al
  4221f8:	inc    edx
  4221f9:	fld    st(6)
  4221fb:	gs test ebx,ecx
  4221fe:	push   esi
  4221ff:	jmp    0x422231
  422201:	add    DWORD PTR [esi-0xf],0x4d41d785
  422208:	adc    esp,DWORD PTR [esi-0x5e]
  42220b:	add    eax,0xe5bfb760
  422210:	cmp    DWORD PTR [edi+0x37],ebp
  422213:	mov    al,ds:0x2936f166
  422218:	icebp  
  422219:	test   eax,0x965d582f
  42221e:	mov    esi,0xe1768669
  422223:	mov    ebp,0x7618190d
  422228:	pop    ss
  422229:	aam    0x53
  42222b:	mov    al,0x3b
  42222d:	(bad)  
  42222f:	repnz mov cl,0x29
  422232:	inc    edx
  422233:	fwait
  422234:	mov    esp,0x9b37e98
  422239:	push   ebp
  42223a:	and    DWORD PTR [edx+0x36],esi
  42223d:	inc    ecx
  42223e:	mov    dh,0x91
  422240:	or     esi,DWORD PTR [eax+0x5617a11c]
  422246:	sub    al,0x1f
  422248:	ins    DWORD PTR es:[edi],dx
  422249:	and    DWORD PTR [ebp+0x3e],0xc2d37c59
  422250:	outs   dx,BYTE PTR ds:[esi]
  422251:	enter  0xf899,0x2c
  422255:	xor    edx,DWORD PTR [ebx]
  422257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422258:	and    DWORD PTR [ecx+esi*8],eax
  42225b:	jnp    0x422298
  42225d:	scas   eax,DWORD PTR es:[edi]
  42225e:	mov    ebx,0xe75cdafc
  422263:	(bad)  
  422264:	sahf   
  422265:	ret    0x6c0f
  422268:	setp   BYTE PTR [ecx-0x560e612c]
  42226f:	stos   BYTE PTR es:[edi],al
  422270:	je     0x4222d4
  422272:	sti    
  422273:	imul   BYTE PTR [edx-0x28]
  422276:	cmp    eax,0x7465dd72
  42227b:	mov    ebp,0x55539d11
  422280:	mov    esi,0xd5cced01
  422285:	fidivr DWORD PTR [eax-0x23258993]
  42228b:	sbb    cl,BYTE PTR [esi]
  42228d:	dec    edi
  42228e:	cwde   
  42228f:	or     eax,0x4feb460
  422294:	add    bh,ah
  422296:	cmp    dh,BYTE PTR ds:[ebx]
  422299:	add    edi,DWORD PTR [ebp-0x120c74a1]
  42229f:	xchg   ebx,eax
  4222a0:	push   ecx
  4222a1:	add    DWORD PTR [edi-0x13],ebx
  4222a4:	push   edi
  4222a5:	sbb    ecx,DWORD PTR [eax+0x1d326568]
  4222ab:	xor    eax,0xf34c6af0
  4222b0:	scas   al,BYTE PTR es:[edi]
  4222b1:	aad    0x2f
  4222b3:	push   ss
  4222b4:	test   BYTE PTR [edi],cl
  4222b6:	cmp    eax,0xe0103b8
  4222bb:	aam    0x7a
  4222bd:	popa   
  4222be:	clc    
  4222bf:	mov    dh,0x74
  4222c1:	sbb    ch,bl
  4222c3:	xchg   ebx,eax
  4222c4:	mov    ebp,0xff6a11d2
  4222c9:	push   ecx
  4222ca:	mov    bh,0x75
  4222cc:	and    esp,edi
  4222ce:	or     al,0xf7
  4222d0:	(bad)  
  4222d1:	int    0xd8
  4222d3:	add    BYTE PTR [esi],bh
  4222d5:	lock push cs
  4222d7:	aas    
  4222d8:	add    eax,0x940e55e0
  4222dd:	jp     0x422263
  4222df:	xor    dh,BYTE PTR [ebx]
  4222e1:	xlat   BYTE PTR ds:[ebx]
  4222e2:	popa   
  4222e3:	sbb    DWORD PTR [ebp-0xdfcdef0],ebx
  4222e9:	je     0x4222e7
  4222eb:	jl     0x422361
  4222ed:	or     bh,cl
  4222ef:	push   esi
  4222f0:	dec    ebp
  4222f1:	mov    al,ds:0xad1ce4d0
  4222f6:	popa   
  4222f7:	inc    edi
  4222f8:	sub    ax,0x71ac
  4222fc:	aas    
  4222fd:	xchg   DWORD PTR [ebp-0x418c5271],ebx
  422303:	mov    esp,0xdff9c549
  422308:	dec    ebp
  422309:	and    BYTE PTR [ebx-0x39],0x74
  42230d:	inc    eax
  42230e:	or     eax,0x6bdbe31
  422313:	mov    BYTE PTR [edx],bh
  422315:	add    DWORD PTR ds:0x1168b230,edi
  42231b:	sub    BYTE PTR [ecx],0x7a
  42231e:	daa    
  42231f:	iret   
  422320:	enter  0x84b8,0x2b
  422324:	call   0xc8c0adf9
  422329:	out    0x64,eax
  42232b:	and    BYTE PTR [ebp-0x48118af5],dl
  422331:	mov    cl,0x8a
  422333:	adc    BYTE PTR [ecx],cl
  422335:	and    ch,BYTE PTR [ebp-0x2bf5af1a]
  42233b:	push   esi
  42233c:	cwde   
  42233d:	jmp    0x4222ea
  42233f:	shr    DWORD PTR [eax],cl
  422341:	cmp    al,0x44
  422343:	pop    ebx
  422344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422345:	mov    eax,ds:0x7f7a58fb
  42234a:	mov    bl,0x31
  42234c:	or     ebp,esi
  42234e:	mov    cl,0xf7
  422350:	fcom   DWORD PTR cs:[ebx+0x4b563531]
  422357:	(bad)  
  422358:	(bad)  [eax]
  42235a:	dec    ebp
  42235b:	cmp    dh,BYTE PTR [esi-0x65]
  42235e:	stc    
  42235f:	xor    DWORD PTR [eax],esi
  422361:	add    eax,0xe6665ac0
  422366:	or     al,0x42
  422368:	jle    0x422343
  42236a:	xchg   edx,eax
  42236b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236c:	fwait
  42236d:	add    esp,DWORD PTR [ecx-0x47]
  422370:	pop    edx
  422371:	xchg   edi,eax
  422372:	popa   
  422373:	hlt    
  422374:	stc    
  422375:	cmp    BYTE PTR ds:0x2d2bd911,bl
  42237b:	iret   
  42237c:	xchg   BYTE PTR [ebx],dl
  42237e:	inc    esp
  42237f:	sub    DWORD PTR [eax-0x21],ebx
  422382:	sar    BYTE PTR [edx+0x19],1
  422385:	retf   0xf33a
  422388:	xchg   esi,eax
  422389:	ret    0x591b
  42238c:	ret    
  42238d:	ds iret 
  42238f:	and    eax,0x2ed1131
  422394:	(bad)  
  422396:	xor    dh,bl
  422398:	mov    bh,ah
  42239a:	push   ss
  42239b:	mov    ebp,0xc3721db1
  4223a0:	xlat   BYTE PTR ds:[ebx]
  4223a1:	lock inc esi
  4223a3:	lock xchg BYTE PTR [esi],cl
  4223a6:	or     eax,DWORD PTR [ebp+0x21]
  4223a9:	sahf   
  4223aa:	mov    ecx,edx
  4223ac:	cmp    BYTE PTR [edx-0x29],al
  4223af:	ret    0x281f
  4223b2:	pop    ebx
  4223b3:	fld    DWORD PTR [esi+eiz*2]
  4223b6:	mov    ecx,DWORD PTR [edi+0x3f]
  4223b9:	(bad)
  4223bc:	lea    esi,[edx+esi*8]
  4223bf:	or     al,0x32
  4223c1:	scas   al,BYTE PTR es:[edi]
  4223c2:	inc    BYTE PTR ds:0x2e38b034
  4223c8:	fnstenv ds:0xa2bc4fcb
  4223ce:	(bad)  
  4223cf:	das    
  4223d0:	push   es
  4223d1:	ret    
  4223d2:	dec    esp
  4223d3:	lea    ebx,[esi]
  4223d5:	(bad)  
  4223d6:	iret   
  4223d7:	fisttp QWORD PTR [edx-0xdce9891]
  4223dd:	mov    al,0xe0
  4223df:	(bad)  
  4223e0:	mov    eax,ds:0xe1435622
  4223e5:	nop
  4223e6:	dec    ecx
  4223e7:	cmc    
  4223e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e9:	sbb    BYTE PTR [eax-0x3b],cl
  4223ec:	pop    ebx
  4223ed:	or     bh,BYTE PTR [ecx-0x6e]
  4223f0:	out    0xdc,eax
  4223f2:	adc    eax,0x9b6c5a9a
  4223f7:	std    
  4223f8:	cmp    DWORD PTR [ecx+ebx*1+0x5a],ecx
  4223fc:	or     eax,0xad3fdf7
  422401:	retf   
  422402:	lock sub al,0x93
  422405:	push   ss
  422406:	mov    ecx,ebx
  422408:	in     al,0x1b
  42240a:	xchg   DWORD PTR [edx+0x5],esi
  42240d:	clc    
  42240e:	les    ecx,FWORD PTR [eax]
  422410:	mov    dh,BYTE PTR [ebp+0x242285a5]
  422416:	stos   DWORD PTR es:[edi],eax
  422417:	inc    edi
  422418:	xchg   esi,eax
  422419:	dec    ebx
  42241a:	xor    BYTE PTR [esp+esi*4-0x4787d213],dh
  422421:	push   edx
  422422:	mov    ds,WORD PTR [ebx+eax*8]
  422425:	add    eax,0x2b3ab3be
  42242a:	mov    dh,0x5b
  42242c:	stos   BYTE PTR es:[edi],al
  42242d:	or     cl,BYTE PTR [esi-0x1d3141b6]
  422433:	sbb    BYTE PTR [ebp*1-0x286ba06b],cl
  42243a:	ja     0x42244c
  42243c:	mul    ebx
  42243e:	jp     0x42246c
  422440:	dec    edi
  422441:	xor    BYTE PTR [ecx],dl
  422443:	fisttp WORD PTR [eax]
  422445:	or     bh,BYTE PTR [esi]
  422447:	repnz les ecx,FWORD PTR [eax]
  42244a:	sbb    eax,esi
  42244c:	arpl   sp,bp
  42244e:	test   al,ch
  422450:	push   eax
  422451:	mov    edi,0x9f85a6c3
  422456:	(bad)  
  422457:	pushf  
  422458:	pusha  
  422459:	push   ebx
  42245a:	popa   
  42245b:	jg     0x4224a4
  42245d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245e:	dec    ebp
  42245f:	xchg   ecx,eax
  422460:	retf   
  422461:	mov    eax,ds:0xef5c8df0
  422466:	jne    0x422445
  422468:	mov    dl,BYTE PTR [ebp+0x3fea8c2f]
  42246e:	mov    ds:0xde80540c,eax
  422473:	rcr    BYTE PTR [edx-0x6913d90d],cl
  422479:	jb     0x42248d
  42247b:	stos   DWORD PTR es:[edi],eax
  42247c:	lds    esi,FWORD PTR [ebx]
  42247e:	cdq    
  42247f:	ret    
  422480:	ror    DWORD PTR [eax-0x26],cl
  422483:	push   ds
  422484:	ret    0x6ee8
  422487:	jae    0x4224f7
  422489:	and    edx,0xc
  42248c:	sbb    ebp,DWORD PTR es:[edx-0x7f]
  422490:	into   
  422491:	sbb    al,0x15
  422493:	jg     0x422426
  422495:	out    0x5e,al
  422497:	fmul   DWORD PTR [eax-0x78]
  42249a:	fs jbe 0x4224ad
  42249d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42249e:	and    al,0xb
  4224a0:	lds    edi,FWORD PTR [ebx+eiz*1+0x11e55a24]
  4224a7:	stc    
  4224a8:	sub    ecx,DWORD PTR [ebp+0x311f31f8]
  4224ae:	mov    ecx,0xc99e3291
  4224b3:	or     ebx,DWORD PTR ds:0xb35715f3
  4224b9:	rol    BYTE PTR [esi+0x112ff71a],1
  4224bf:	push   ecx
  4224c0:	test   BYTE PTR cs:[ebx+0x298b521f],cl
  4224c7:	out    0x26,al
  4224c9:	xor    BYTE PTR [edi-0x55],dl
  4224cc:	jmp    0x422479
  4224ce:	cmpxchg bl,bh
  4224d1:	sub    eax,0xb7429b87
  4224d6:	in     eax,dx
  4224d7:	mov    al,ds:0x1f5a315b
  4224dc:	add    BYTE PTR [edx+0x5ff091de],cl
  4224e2:	dec    esp
  4224e3:	add    eax,0x413693ae
  4224e8:	ins    DWORD PTR es:[edi],dx
  4224e9:	adc    al,0x38
  4224eb:	leave  
  4224ec:	mov    ebp,0x584802a9
  4224f1:	adc    al,0x85
  4224f3:	(bad)  
  4224f4:	jecxz  0x422494
  4224f6:	jno    0x4224fd
  4224f8:	inc    ebp
  4224f9:	jl     0x42254b
  4224fb:	lds    ebp,FWORD PTR [ebx+0x53]
  4224fe:	push   edi
  4224ff:	push   0x21
  422501:	cdq    
  422502:	cld    
  422503:	sbb    eax,0x446c5294
  422508:	mov    esp,0xb6cf4db9
  42250d:	push   eax
  42250e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250f:	ja     0x422513
  422511:	mov    al,ds:0xbf5c4e27
  422516:	ins    DWORD PTR es:[edi],dx
  422517:	push   ebp
  422518:	das    
  422519:	sbb    eax,0xd6df462f
  42251e:	sub    ah,BYTE PTR [ecx]
  422520:	(bad)  
  422521:	in     al,0xe5
  422523:	jl     0x422547
  422525:	and    DWORD PTR [edx-0x39],esp
  422528:	mov    cs,WORD PTR [ebp-0x60]
  42252b:	or     al,0x40
  42252d:	push   ebx
  42252e:	or     al,0x12
  422530:	pop    ds
  422531:	add    BYTE PTR ds:[eax+edi*4],ch
  422535:	add    DWORD PTR [edi+0x79],0xa085a5f3
  42253c:	cmp    ecx,DWORD PTR [edx-0x6f229d]
  422542:	inc    di
  422544:	lock mov dh,0x67
  422547:	icebp  
  422548:	sub    esp,esp
  42254a:	por    mm0,QWORD PTR [edi+0x8650f6b]
  422551:	cmp    edi,DWORD PTR [ebx+ebp*4-0x7bab8b43]
  422558:	dec    ebp
  422559:	inc    edx
  42255a:	or     eax,0xdd2cc596
  42255f:	and    eax,0xef90f82b
  422564:	push   esi
  422565:	lods   eax,DWORD PTR ds:[esi]
  422566:	cmp    eax,0x68867337
  42256b:	push   esi
  42256c:	ins    DWORD PTR es:[edi],dx
  42256d:	es jp  0x422516
  422570:	pop    DWORD PTR [ebp+ebx*2-0x28006d74]
  422577:	sbb    bh,bh
  422579:	mov    ebp,0x8d421420
  42257e:	push   edx
  42257f:	out    0xc5,eax
  422581:	dec    ebx
  422582:	mov    ch,al
  422584:	into   
  422585:	loop   0x42256f
  422587:	retf   
  422588:	and    esp,DWORD PTR [ebp-0x27]
  42258b:	stos   BYTE PTR es:[edi],al
  42258c:	int3   
  42258d:	mov    dh,0x71
  42258f:	mov    esi,0xbfaf9fb6
  422594:	jecxz  0x422526
  422596:	xchg   ebx,eax
  422597:	push   ebp
  422598:	add    al,0x2b
  42259a:	imul   esi,DWORD PTR [eax+0x72],0x4f
  42259e:	ins    DWORD PTR es:[edi],dx
  42259f:	mov    eax,0xbe22165b
  4225a4:	dec    ebp
  4225a5:	je     0x42260e
  4225a7:	popf   
  4225a8:	add    al,0xad
  4225aa:	sub    DWORD PTR [edi+0x7f54bc13],edi
  4225b0:	cmp    al,0x8d
  4225b2:	push   es
  4225b3:	gs enter 0x5658,0x86
  4225b8:	push   ss
  4225b9:	push   ebx
  4225ba:	loope  0x4225c2
  4225bc:	mov    al,0xf3
  4225be:	sub    bh,BYTE PTR [eax-0x11]
  4225c1:	jb     0x422582
  4225c3:	jno    0x422599
  4225c5:	leave  
  4225c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c7:	sahf   
  4225c8:	ja     0x422564
  4225ca:	dec    edx
  4225cb:	ss aam 0x40
  4225ce:	inc    ebp
  4225cf:	sbb    ecx,DWORD PTR [eax+ebp*4+0x12]
  4225d3:	in     eax,dx
  4225d4:	pop    ecx
  4225d5:	sar    DWORD PTR [ecx],1
  4225d7:	ror    DWORD PTR [esi+0x9],cl
  4225da:	jmp    0x42260c
  4225dc:	pop    ebx
  4225dd:	retf   
  4225de:	xor    DWORD PTR [esi-0x1d],ebx
  4225e1:	push   eax
  4225e2:	js     0x422608
  4225e4:	sub    ecx,DWORD PTR [edi+edx*1+0x55]
  4225e8:	test   DWORD PTR [edi],edx
  4225ea:	xor    ah,bl
  4225ec:	repz ret 0x4103
  4225f0:	inc    ebp
  4225f1:	sub    eax,0x604f0794
  4225f6:	nop
  4225f7:	xchg   edi,eax
  4225f8:	push   edi
  4225f9:	lods   al,BYTE PTR ds:[esi]
  4225fa:	int3   
  4225fb:	xchg   esp,eax
  4225fc:	mov    ds:0x4dfad36f,al
  422601:	add    DWORD PTR [esp+ebx*2],esi
  422604:	pop    eax
  422605:	ret    0x90a2
  422608:	fadd   QWORD PTR ds:0x719305d2
  42260e:	mov    edx,0x1bcc06a0
  422613:	cmp    BYTE PTR [edx+ebp*4],0xd5
  422617:	mov    ah,0xa6
  422619:	sub    DWORD PTR [ecx-0x6e],esi
  42261c:	fld    TBYTE PTR [ebx-0x76]
  42261f:	mov    BYTE PTR [esi-0x15e8a995],bh
  422625:	jp     0x422678
  422627:	push   ecx
  422628:	mov    ebp,DWORD PTR [ebx]
  42262a:	out    dx,al
  42262b:	mov    ah,BYTE PTR [edi-0x20639e64]
  422631:	sub    BYTE PTR [edi],ch
  422633:	adc    bh,ch
  422635:	loope  0x42263d
  422637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422638:	pop    esi
  422639:	lds    esi,FWORD PTR [ebx+0x21b6cb4c]
  42263f:	sbb    DWORD PTR [ebx+0x48ddc528],0xffffffaa
  422646:	mov    ebp,0x3c199fb9
  42264b:	cld    
  42264c:	in     eax,dx
  42264d:	or     al,0x75
  42264f:	push   ds
  422650:	push   edi
  422651:	jo     0x4225ff
  422653:	xor    BYTE PTR [eax-0x58],0xe2
  422657:	hlt    
  422658:	jl     0x4225e0
  42265a:	cs (bad) 
  42265c:	jmp    0x4226d3
  42265e:	dec    esi
  42265f:	or     ebp,DWORD PTR ds:0x2588869c
  422665:	bound  esp,QWORD PTR [esi-0x80]
  422668:	call   0xc74f:0x137705b1
  42266f:	xchg   esi,eax
  422670:	ror    BYTE PTR [ebx+0x54],cl
  422673:	push   0xc81c4509
  422678:	adc    eax,0x484eafc3
  42267d:	mov    ebx,ebx
  42267f:	int    0xb2
  422681:	mov    al,ds:0x6f004799
  422686:	sti    
  422687:	mov    eax,0xd7fa3567
  42268c:	push   edx
  42268d:	aas    
  42268e:	hlt    
  42268f:	dec    DWORD PTR [eax]
  422691:	add    BYTE PTR [si],cl
  422694:	rol    DWORD PTR [eax+0x36c7fdea],cl
  42269a:	push   ecx
  42269b:	int3   
  42269c:	dec    ecx
  42269d:	sub    DWORD PTR [eax],ebp
  42269f:	sar    DWORD PTR [eax],cl
  4226a1:	cli    
  4226a2:	imul   edx,DWORD PTR [ecx+ecx*4],0x636a8764
  4226a9:	loopne 0x4226cd
  4226ab:	test   eax,0xa5810603
  4226b0:	inc    eax
  4226b1:	push   ds
  4226b2:	and    edi,DWORD PTR [edx-0x5b7abb8f]
  4226b8:	dec    edx
  4226b9:	jns    0x422685
  4226bb:	out    0x76,al
  4226bd:	adc    BYTE PTR [eax],dl
  4226bf:	shl    DWORD PTR [ebx+0x7e1d6492],cl
  4226c5:	pop    es
  4226c6:	sub    DWORD PTR [esi-0xb4cf483],edi
  4226cc:	adc    al,BYTE PTR [edi-0x33]
  4226cf:	fadd   DWORD PTR [edx+0x4d]
  4226d2:	adc    esp,ebx
  4226d4:	mov    ebp,DWORD PTR [eax-0x34]
  4226d7:	clc    
  4226d8:	push   esp
  4226da:	mov    BYTE PTR [esi+0xbf7df22],ch
  4226e0:	jmp    0x7a639586
  4226e5:	jge    0x422724
  4226e7:	inc    ecx
  4226e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e9:	mov    ebp,0x15cdbcda
  4226ee:	cli    
  4226ef:	push   ebx
  4226f0:	out    dx,eax
  4226f1:	mov    ebp,0x2adc4eb8
  4226f6:	pop    edx
  4226f7:	jg     0x422750
  4226f9:	lock xor al,0xce
  4226fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226fd:	sub    ch,bl
  4226ff:	xor    BYTE PTR [ecx+0x4f5758c2],ch
  422705:	pop    eax
  422706:	xchg   BYTE PTR [eax+0x77eed1e3],ah
  42270c:	add    eax,0x1227f23a
  422711:	push   DWORD PTR [ebx+0x66]
  422714:	imul   esi,DWORD PTR [ecx-0xa4add51],0x78a3cd52
  42271e:	sbb    eax,0x3c812bd3
  422723:	fld    QWORD PTR [ebx-0x9]
  422726:	out    dx,eax
  422727:	retf   0x3517
  42272a:	xchg   edi,eax
  42272b:	call   DWORD PTR [eax-0x7071bccc]
  422731:	imul   esi,ecx,0xecb4af03
  422737:	aam    0xcd
  422739:	outs   dx,DWORD PTR ds:[esi]
  42273a:	(bad)  
  42273b:	loopne 0x4227a2
  42273d:	cld    
  42273e:	in     eax,0xad
  422740:	cmp    BYTE PTR [ebp+0x71],al
  422743:	pop    ebx
  422744:	jle    0x422756
  422746:	dec    ebp
  422747:	jne    0x422794
  422749:	or     ch,BYTE PTR [ebx-0x62aa244a]
  42274f:	rol    BYTE PTR [edi],1
  422751:	adc    esi,DWORD PTR [eax-0x4b]
  422754:	scas   eax,DWORD PTR es:[edi]
  422755:	or     esi,DWORD PTR [ecx+0x5c]
  422758:	int3   
  422759:	(bad)  
  42275b:	jae    0x4227b8
  42275d:	mov    ds:0x9fa75eb2,al
  422762:	ret    
  422763:	adc    bh,ch
  422765:	xchg   esp,eax
  422766:	das    
  422767:	xor    DWORD PTR [ebx],edi
  422769:	pushf  
  42276a:	push   0xffffffd8
  42276c:	mov    al,ds:0xec37fb4c
  422771:	and    al,0x14
  422773:	(bad)  
  422774:	out    0xb7,al
  422776:	loop   0x422741
  422778:	mov    ebx,0x76ebd7a0
  42277d:	sub    DWORD PTR ds:0xbcd0472c,edi
  422783:	jmp    0xe7a8:0x12557dfc
  42278a:	mov    ebx,DWORD PTR [edi+eax*4]
  42278d:	arpl   WORD PTR [ebp-0x3f0f6d65],bx
  422793:	add    BYTE PTR [esi+0x2c2bd849],dl
  422799:	xor    edi,esp
  42279b:	pop    edi
  42279c:	sbb    BYTE PTR ds:0xe145af63,0xe
  4227a3:	inc    edi
  4227a4:	retf   
  4227a5:	scas   eax,DWORD PTR es:[edi]
  4227a6:	add    al,0x26
  4227a8:	aaa    
  4227a9:	mov    WORD PTR [edx-0x215866aa],ds
  4227af:	xchg   edi,eax
  4227b0:	(bad)  [edx]
  4227b2:	pcmpeqd mm7,QWORD PTR [esi-0x639fabf0]
  4227b9:	sti    
  4227ba:	pop    edi
  4227bb:	lods   al,BYTE PTR ds:[esi]
  4227bc:	pop    esi
  4227bd:	cli    
  4227be:	ret    0x1515
  4227c1:	or     al,0x96
  4227c3:	add    esi,DWORD PTR [esi]
  4227c5:	loope  0x422813
  4227c7:	pushf  
  4227c8:	out    dx,eax
  4227c9:	cmp    eax,ebx
  4227cb:	adc    DWORD PTR [ebx+0x5c],ebx
  4227ce:	mov    dh,0x73
  4227d0:	gs test al,0xa2
  4227d3:	hlt    
  4227d4:	cli    
  4227d5:	or     al,0x80
  4227d7:	and    esp,DWORD PTR [edi-0x5a42a0e]
  4227dd:	xor    al,0xd6
  4227df:	enter  0x176e,0x73
  4227e3:	mov    esp,0x823af8fd
  4227e8:	push   0x882e8b1e
  4227ed:	pop    edi
  4227ee:	mov    eax,0x971bd7f6
  4227f3:	lahf   
  4227f4:	ja     0x422854
  4227f6:	scas   eax,DWORD PTR es:[edi]
  4227f7:	jge    0x42280b
  4227f9:	mov    eax,0x674dc8f2
  4227fe:	mov    al,0x4d
  422800:	jmp    0xceea:0xf5281b3c
  422807:	inc    ebp
  422808:	ins    BYTE PTR es:[edi],dx
  422809:	or     bh,cl
  42280b:	(bad)  
  42280c:	sti    
  42280d:	mov    edi,0x5176475e
  422812:	jmp    0x99c3b4b2
  422817:	jle    0x422870
  422819:	mov    ecx,0x5dc4d54c
  42281e:	push   0x7f
  422820:	jmp    0x6859:0x778af13c
  422827:	push   edi
  422828:	and    al,0x96
  42282a:	pop    edx
  42282b:	iret   
  42282c:	(bad)  
  42282d:	fmul   QWORD PTR [esi+0x1f8c637b]
  422833:	add    eax,0xc35a0734
  422838:	push   es
  422839:	add    BYTE PTR [eax+0x501d556e],bl
  42283f:	mov    ah,bl
  422841:	cli    
  422842:	outs   dx,DWORD PTR ds:[esi]
  422843:	sbb    esi,DWORD PTR [ebp-0x39367c65]
  422849:	arpl   WORD PTR [di],ax
  42284c:	push   ss
  42284d:	xor    esi,esp
  42284f:	and    DWORD PTR [edx],0x30
  422852:	fs pusha 
  422854:	jns    0x4228b8
  422856:	ffreep st(5)
  422858:	or     cl,BYTE PTR [ebp+0x4]
  42285b:	mov    ebp,0x206e0eb1
  422860:	and    DWORD PTR [ebx+0x341e2ed2],esi
  422866:	loopne 0x42289c
  422868:	and    al,0xd5
  42286a:	and    al,0xa7
  42286c:	inc    esp
  42286d:	bound  esi,QWORD PTR [edx-0x1fd14c99]
  422873:	sub    cl,dh
  422875:	pop    ecx
  422876:	enter  0xf51,0xfb
  42287a:	jmp    0x2fbb:0x92a5e60b
  422881:	iret   
  422882:	cli    
  422883:	fsubr  st(7),st
  422885:	add    eax,0xbdc3c5
  42288a:	(bad)  
  42288b:	adc    esp,DWORD PTR [esi+0x34c3eb08]
  422891:	xchg   esp,eax
  422892:	mov    ebp,0x61a38ad3
  422897:	push   edi
  422898:	or     eax,0xe55d6dea
  42289d:	xchg   ecx,eax
  42289e:	(bad)
  4228a1:	or     eax,ecx
  4228a3:	hlt    
  4228a4:	enter  0xddea,0x30
  4228a8:	lods   al,BYTE PTR ds:[esi]
  4228a9:	or     BYTE PTR [eax-0x56149bdd],dl
  4228af:	hlt    
  4228b0:	ja     0x422931
  4228b2:	mov    cs,ecx
  4228b4:	mov    cs,WORD PTR [esi-0x59bd0725]
  4228ba:	dec    ebx
  4228bb:	data16 jbe 0x422913
  4228be:	fldz   
  4228c0:	mov    ebx,0xf5ee9e25
  4228c5:	loope  0x42290d
  4228c7:	stos   DWORD PTR es:[edi],eax
  4228c8:	mov    bl,0x1b
  4228ca:	push   es
  4228cb:	xor    ch,BYTE PTR [ebx]
  4228cd:	adc    al,0xcc
  4228cf:	xor    DWORD PTR ss:0x4122fbcd,ebp
  4228d6:	jmp    0x422933
  4228d8:	pop    esi
  4228d9:	pop    eax
  4228da:	jecxz  0x4228b3
  4228dc:	mov    dl,0x54
  4228de:	fnstcw WORD PTR [esi+0x4d]
  4228e1:	imul   edx,DWORD PTR [eax],0x23
  4228e4:	es push edx
  4228e6:	mov    bl,bl
  4228e8:	or     edi,DWORD PTR [edx]
  4228ea:	(bad)  
  4228eb:	dec    edi
  4228ec:	xchg   esi,eax
  4228ed:	hlt    
  4228ee:	adc    al,0x15
  4228f0:	or     ch,dl
  4228f2:	push   esp
  4228f3:	cmp    eax,ebx
  4228f5:	mov    al,BYTE PTR [eax]
  4228f7:	rol    BYTE PTR fs:[ebp+0x59],cl
  4228fb:	cmp    esi,DWORD PTR [edi-0x5c782368]
  422901:	mov    ch,0xa2
  422903:	imul   edx,DWORD PTR [edi],0x631e52db
  422909:	imul   esp,DWORD PTR [edx-0x2f],0xb65fa16a
  422910:	mov    al,0x3e
  422912:	stos   BYTE PTR es:[edi],al
  422913:	ror    DWORD PTR [ecx],0xa6
  422916:	call   0x2b6d783
  42291b:	pushf  
  42291c:	xchg   esp,eax
  42291d:	bound  ecx,QWORD PTR [ecx-0x68b10b9f]
  422923:	sbb    ebx,DWORD PTR [ebx]
  422925:	icebp  
  422926:	test   eax,0x6e0dcde9
  42292b:	add    al,0xd
  42292d:	pop    es
  42292e:	mov    ds:0x79c4343,eax
  422933:	sub    eax,0xc8a54dae
  422938:	and    DWORD PTR [eax+0x64],ebp
  42293b:	inc    BYTE PTR [ecx+ebx*8+0x14]
  42293f:	pop    ss
  422940:	mov    al,ds:0x9c89f8f1
  422945:	pop    ss
  422946:	test   eax,0xb1f205e9
  42294b:	cli    
  42294c:	and    bh,ah
  42294e:	and    BYTE PTR ds:0x3edf374c,ch
  422954:	inc    edx
  422955:	out    dx,eax
  422956:	cwde   
  422957:	push   es
  422958:	jg     0x422930
  42295a:	(bad)
  42295d:	jnp    0x422905
  42295f:	jae    0x4229dc
  422961:	retf   0x256e
  422964:	cmp    ebp,0x16
  422967:	icebp  
  422968:	inc    eax
  422969:	inc    si
  42296b:	loopne 0x4229bc
  42296d:	xor    al,0xab
  42296f:	cmp    DWORD PTR [ebx+0x27cd8b12],esp
  422975:	sti    
  422976:	sti    
  422977:	pop    ebx
  422978:	cmp    DWORD PTR [eax+eax*2+0x489335d],edi
  42297f:	ret    0x294e
  422982:	std    
  422983:	cmp    dl,bl
  422985:	add    al,0x9a
  422987:	hlt    
  422988:	stc    
  422989:	adc    eax,DWORD PTR [esi-0x18487cb4]
  42298f:	mov    bh,0x98
  422991:	into   
  422992:	adc    al,0x56
  422994:	dec    edi
  422995:	jmp    DWORD PTR [ecx-0x4d33e7fd]
  42299b:	test   DWORD PTR [edx],esi
  42299d:	aaa    
  42299e:	cmp    ah,bl
  4229a0:	inc    esp
  4229a1:	fisttp DWORD PTR [edx+0x315d9a02]
  4229a7:	imul   DWORD PTR [ecx+0x35]
  4229aa:	into   
  4229ab:	out    dx,al
  4229ac:	test   BYTE PTR [ecx],ah
  4229ae:	jo     0x42293b
  4229b0:	pop    esp
  4229b1:	test   esi,edx
  4229b3:	or     DWORD PTR [eax+edi*4+0x1faa167],ecx
  4229ba:	mov    esp,eax
  4229bc:	mov    esi,0x7bc2066
  4229c1:	dec    esi
  4229c2:	sti    
  4229c3:	int3   
  4229c4:	cdq    
  4229c5:	xor    ebx,ebp
  4229c7:	jb     0x422997
  4229c9:	jl     0x422a49
  4229cb:	in     eax,dx
  4229cc:	mov    ah,0x87
  4229ce:	xlat   BYTE PTR ds:[ebx]
  4229cf:	in     al,0xd9
  4229d1:	cdq    
  4229d2:	iret   
  4229d3:	call   0x92502e4
  4229d8:	mov    cl,ah
  4229da:	pop    edi
  4229db:	and    DWORD PTR [di],edx
  4229de:	xor    BYTE PTR [ebp+ebx*1-0x7d],ah
  4229e2:	cdq    
  4229e3:	shl    eax,cl
  4229e5:	jnp    0x422987
  4229e7:	mov    esi,gs
  4229e9:	mov    edi,0xc79502e4
  4229ee:	iret   
  4229ef:	jle    0x422a46
  4229f1:	mov    bh,0x34
  4229f3:	loop   0x422a2c
  4229f5:	shr    al,1
  4229f7:	mov    DWORD PTR [edx+0x765fa6ca],edi
  4229fd:	test   al,0xb5
  4229ff:	lds    edi,FWORD PTR [edx]
  422a01:	iret   
  422a02:	bound  edx,QWORD PTR [ecx-0xc4504e4]
  422a08:	and    ecx,ebx
  422a0a:	add    al,0x80
  422a0c:	pop    es
  422a0d:	inc    ebp
  422a0e:	fstp   DWORD PTR [eax+edx*2+0x7c]
  422a12:	bswap  ecx
  422a14:	mov    dl,0x3c
  422a16:	pop    ebp
  422a17:	dec    ebx
  422a18:	into   
  422a19:	aas    
  422a1a:	jg     0x4229b4
  422a1c:	(bad)  
  422a1d:	jmp    0x2ae3ca46
  422a22:	ss jno 0x4229a6
  422a25:	adc    ch,BYTE PTR [edi]
  422a27:	pop    ss
  422a28:	retf   
  422a29:	push   cs
  422a2a:	pop    ecx
  422a2b:	mov    BYTE PTR [edx-0x75],bl
  422a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2f:	xor    DWORD PTR [edi],ecx
  422a31:	pop    es
  422a32:	ficom  WORD PTR [ebp+ebx*2-0x4c]
  422a36:	adc    BYTE PTR [edi],ah
  422a38:	outs   dx,BYTE PTR ds:[esi]
  422a39:	sbb    ebp,eax
  422a3b:	rcr    BYTE PTR [ebp+0x360cffe3],0xec
  422a42:	mov    edi,0x68f96de4
  422a47:	mov    esp,0x30b149cf
  422a4c:	ret    
  422a4d:	and    eax,DWORD PTR [esi-0x45]
  422a50:	push   ebx
  422a51:	adc    ch,BYTE PTR [esi-0x71]
  422a54:	mov    WORD PTR [eax],ds
  422a56:	repz push edx
  422a58:	or     BYTE PTR [esi],0x5c
  422a5b:	mov    dh,BYTE PTR [edi+0x79]
  422a5e:	ins    DWORD PTR es:[edi],dx
  422a5f:	mov    bl,0xa9
  422a61:	xchg   esi,eax
  422a62:	scas   al,BYTE PTR es:[edi]
  422a63:	adc    DWORD PTR [ebx-0x4f4c894c],0x1fbeb37e
  422a6d:	pop    ss
  422a6e:	jns    0x422a15
  422a70:	call   0xf148:0xf283e047
  422a77:	fstp   DWORD PTR [edi-0x41]
  422a7a:	test   eax,0x67d71f90
  422a7f:	xchg   esi,eax
  422a80:	scas   eax,DWORD PTR es:[edi]
  422a81:	cmp    esp,esi
  422a83:	jb     0x422a5d
  422a85:	das    
  422a86:	imul   edi,DWORD PTR [esi+0x7b625df8],0xffffffc4
  422a8d:	pop    esi
  422a8e:	or     BYTE PTR [ebp+0x68],bh
  422a91:	(bad)  
  422a92:	dec    edi
  422a93:	cmp    DWORD PTR es:[ecx+0x425871d6],0x4
  422a9b:	sbb    BYTE PTR [edx+0x23],dl
  422a9e:	les    ebp,FWORD PTR [edx-0x7c87b8b0]
  422aa4:	push   esi
  422aa5:	push   0xffffffce
  422aa7:	bound  ebp,QWORD PTR [ebp+0x50f6d29c]
  422aad:	scas   al,BYTE PTR es:[edi]
  422aae:	daa    
  422aaf:	repnz pop ds
  422ab1:	jp     0x422a5d
  422ab3:	mov    ecx,0x2e7e3d81
  422ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ab9:	popa   
  422aba:	sahf   
  422abb:	in     al,dx
  422abc:	lds    ecx,FWORD PTR [ebx+ebp*8]
  422abf:	dec    esp
  422ac0:	adc    DWORD PTR [eax-0x36c88782],ebx
  422ac6:	dec    ecx
  422ac7:	push   0xdd4a41a2
  422acc:	xlat   BYTE PTR ds:[ebx]
  422acd:	cdq    
  422ace:	sub    DWORD PTR [edi+0x66fff2e1],0xd5975b44
  422ad8:	ins    DWORD PTR es:[edi],dx
  422ad9:	pop    eax
  422ada:	jmp    DWORD PTR [ebx+0x5ccf588f]
  422ae0:	push   ds
  422ae1:	jb     0x422a76
  422ae3:	cmc    
  422ae4:	(bad)  
  422ae5:	and    DWORD PTR cs:0xb19670b6,0xfffffff5
  422aed:	test   BYTE PTR [eax+0x4eeceefb],al
  422af3:	mov    dl,0x74
  422af5:	push   ebp
  422af6:	jno    0x422b29
  422af8:	(bad)  
  422af9:	cmp    esi,DWORD PTR [edx]
  422afb:	mov    eax,0xd6825bbd
  422b00:	jmp    0x422b54
  422b02:	push   esp
  422b03:	push   ds
  422b04:	inc    ebp
  422b05:	mov    eax,ds:0x4319852f
  422b0a:	or     DWORD PTR [ecx],eax
  422b0c:	mov    BYTE PTR [edi-0x1523ec39],bh
  422b12:	mov    bl,0xd5
  422b14:	mov    ds,WORD PTR [ebp+0x54463b41]
  422b1a:	aaa    
  422b1b:	xchg   esp,eax
  422b1c:	int3   
  422b1d:	ficom  DWORD PTR [ebx]
  422b1f:	or     edx,edx
  422b21:	sub    eax,0xcd4ad1b8
  422b26:	adc    cl,BYTE PTR [edx+ebx*4]
  422b29:	sub    BYTE PTR [ebx+0x133a25a3],bh
  422b2f:	out    0x1e,eax
  422b31:	pop    edi
  422b32:	xchg   ebx,eax
  422b33:	mov    ebp,0xb86bfb47
  422b38:	out    0x8e,al
  422b3a:	ins    DWORD PTR es:[edi],dx
  422b3b:	outs   dx,DWORD PTR ds:[esi]
  422b3c:	aaa    
  422b3d:	adc    cl,dl
  422b3f:	outs   dx,DWORD PTR ds:[esi]
  422b40:	or     dl,BYTE PTR [esi+0x36633d86]
  422b46:	repz add al,0xa0
  422b49:	outs   dx,DWORD PTR ds:[esi]
  422b4a:	mov    bl,0x69
  422b4c:	jae    0x422b92
  422b4e:	pop    ss
  422b4f:	dec    edx
  422b50:	push   ecx
  422b51:	pavgw  mm1,QWORD PTR [edi-0x43]
  422b55:	inc    ebx
  422b56:	inc    ebp
  422b57:	in     eax,dx
  422b58:	pop    ecx
  422b59:	lods   eax,DWORD PTR ds:[esi]
  422b5a:	je     0x422b83
  422b5c:	shl    BYTE PTR [ebx+0x4c],cl
  422b5f:	mov    bl,0x98
  422b61:	xchg   ecx,eax
  422b62:	fisubr WORD PTR ds:0xfa820c1f
  422b68:	lock cli 
  422b6a:	and    eax,0x7cedcb43
  422b70:	cdq    
  422b71:	xor    DWORD PTR [eax],eax
  422b73:	sbb    DWORD PTR fs:[ecx+0x3],esp
  422b77:	sub    ebx,edi
  422b79:	inc    edi
  422b7a:	push   ss
  422b7b:	lods   al,BYTE PTR ds:[esi]
  422b7c:	pop    esp
  422b7d:	retf   
  422b7e:	adc    eax,0x82ca7112
  422b83:	add    al,0x4b
  422b85:	scas   al,BYTE PTR es:[edi]
  422b86:	cwde   
  422b87:	pop    ebp
  422b88:	jnp    0x422bfd
  422b8a:	clc    
  422b8b:	sub    edx,esp
  422b8d:	pusha  
  422b8e:	mov    dh,0x6
  422b90:	mov    bh,0xc8
  422b92:	in     al,dx
  422b93:	dec    ebp
  422b94:	mov    fs,WORD PTR [esp+eiz*8]
  422b97:	xchg   edi,eax
  422b98:	inc    esi
  422b99:	ror    dl,1
  422b9b:	sti    
  422b9c:	ret    
  422b9d:	and    dh,BYTE PTR [ebx-0x50]
  422ba0:	or     edi,eax
  422ba2:	shl    DWORD PTR [ebx],0xa6
  422ba5:	adc    DWORD PTR [eax+0x3dbce187],edi
  422bab:	into   
  422bac:	xor    edi,ecx
  422bae:	in     eax,0x88
  422bb0:	fs std 
  422bb2:	aaa    
  422bb3:	into   
  422bb4:	adc    eax,0xc87c7cc4
  422bb9:	call   0x1e9f52bd
  422bbe:	int    0xd9
  422bc0:	dec    eax
  422bc1:	push   ss
  422bc2:	pop    ebp
  422bc3:	push   ds
  422bc4:	jnp    0x422b77
  422bc6:	sub    eax,DWORD PTR [ebx+0x66]
  422bc9:	xchg   esp,eax
  422bca:	push   ebx
  422bcb:	je     0x422c2d
  422bcd:	jo     0x422b6d
  422bcf:	sti    
  422bd0:	cmp    al,0xab
  422bd2:	loop   0x422b63
  422bd4:	jno    0x422b73
  422bd6:	clc    
  422bd7:	lods   al,BYTE PTR ds:[esi]
  422bd8:	mov    ds:0x33eb52db,al
  422bdd:	or     BYTE PTR [ebx-0x39],bh
  422be0:	xchg   DWORD PTR [edx-0x384980c1],esi
  422be6:	xor    BYTE PTR [edi+0x1c],ch
  422be9:	pop    edx
  422bea:	sbb    eax,0xc6092b6a
  422bef:	mov    ch,ch
  422bf1:	push   ecx
  422bf2:	adc    DWORD PTR [ebp+0x51],ebx
  422bf5:	dec    esp
  422bf6:	lods   eax,DWORD PTR ds:[esi]
  422bf7:	pop    es
  422bf8:	inc    ebx
  422bf9:	outs   dx,DWORD PTR ds:[esi]
  422bfa:	push   ecx
  422bfb:	mov    bl,0x56
  422bfe:	and    BYTE PTR [edx-0x522ea53f],cl
  422c04:	mov    eax,ds:0x7ee7edbe
  422c09:	sub    eax,0x6cffafb8
  422c0e:	aaa    
  422c0f:	sub    cl,BYTE PTR cs:[edx+0x5e]
  422c13:	jo     0x422c6d
  422c15:	mov    edx,0x86385fbd
  422c1a:	retf   
  422c1b:	mov    esi,0x1f96622b
  422c20:	repz sub DWORD PTR [ecx-0x76],edx
  422c24:	cli    
  422c25:	inc    edi
  422c26:	or     al,0x71
  422c28:	jo     0x422ca4
  422c2a:	mov    ebp,0x8e2bf00a
  422c2f:	ret    
  422c30:	(bad)
  422c34:	data16 cli 
  422c36:	loope  0x422ca6
  422c38:	out    0x19,al
  422c3a:	or     ch,BYTE PTR [ebx-0x40]
  422c3d:	out    dx,eax
  422c3e:	aam    0xa0
  422c40:	test   BYTE PTR [ecx+eiz*1+0x21],0xe2
  422c45:	xor    DWORD PTR [esi],ebx
  422c47:	mov    dl,0x4e
  422c49:	xor    al,0x83
  422c4b:	add    edi,ebx
  422c4d:	mov    ?,WORD PTR [ecx-0x52]
  422c50:	mov    cl,0xd3
  422c52:	dec    eax
  422c53:	and    eax,0x1a6101ed
  422c58:	xor    bh,BYTE PTR [esi+ecx*4-0x3f98f37e]
  422c5f:	jg     0x422cc1
  422c61:	loopne 0x422bee
  422c63:	mov    ecx,0x771a5e32
  422c68:	je     0x422cb3
  422c6a:	je     0x422c24
  422c6c:	add    BYTE PTR [eax],dh
  422c6e:	mov    ch,BYTE PTR [ebp-0xa]
  422c71:	(bad)  
  422c72:	sub    DWORD PTR [eax+0x60],esp
  422c75:	sub    cl,al
  422c77:	hlt    
  422c78:	das    
  422c79:	neg    BYTE PTR [ebx-0x6bfcafa0]
  422c7f:	mov    dl,0x7e
  422c81:	add    dl,bh
  422c83:	cmp    DWORD PTR [esi],ebp
  422c85:	(bad)  
  422c86:	sbb    BYTE PTR gs:[edi+0x41ec9f77],ah
  422c8d:	inc    edx
  422c8e:	mov    al,ds:0x2da543f3
  422c93:	lock lods eax,DWORD PTR ds:[esi]
  422c95:	add    DWORD PTR [ecx-0x154d3437],edx
  422c9b:	out    0xc2,al
  422c9d:	mov    BYTE PTR [edi],ah
  422c9f:	cmp    ecx,DWORD PTR [ebp+0x22]
  422ca2:	and    ebp,DWORD PTR [edx]
  422ca4:	jbe    0x422cf6
  422ca6:	jnp    0x422cab
  422ca8:	(bad)  [eax]
  422caa:	push   ebp
  422cab:	xor    DWORD PTR [edi+0x238ce1f4],ebx
  422cb1:	gs scas eax,DWORD PTR es:[edi]
  422cb3:	jae    0x422d13
  422cb5:	mov    ch,0xbe
  422cb7:	gs clc 
  422cb9:	push   0x5b
  422cbb:	or     al,dl
  422cbd:	popa   
  422cbe:	out    0x9e,al
  422cc0:	push   ebp
  422cc1:	xchg   DWORD PTR [edi],esp
  422cc3:	ror    BYTE PTR [ebp-0x49024cff],0xb6
  422cca:	mov    edi,0x9106988c
  422ccf:	stc    
  422cd0:	pop    ecx
  422cd1:	mov    ecx,0xe0e46c0f
  422cd6:	push   cs
  422cd7:	rcr    cl,0x6a
  422cda:	cmp    BYTE PTR [ecx],ah
  422cdc:	in     al,dx
  422cdd:	loope  0x422d43
  422cdf:	scas   eax,DWORD PTR es:[edi]
  422ce0:	fisubr DWORD PTR [edx+0x6ce7d4b8]
  422ce6:	cmp    dl,ch
  422ce8:	fwait
  422ce9:	popf   
  422cea:	lahf   
  422ceb:	gs shr bh,1
  422cee:	sbb    BYTE PTR [edi-0x32014120],bl
  422cf4:	add    DWORD PTR [edx+eiz*1+0x1fc7fd99],esi
  422cfb:	mov    bh,0x87
  422cfd:	jp     0x422d10
  422cff:	scas   eax,DWORD PTR es:[edi]
  422d00:	jge    0x422c9a
  422d02:	lea    edx,[ecx+0x24]
  422d05:	cmp    eax,DWORD PTR ds:0x6950e609
  422d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d0c:	fld    TBYTE PTR [ecx-0x7f]
  422d0f:	cs jmp 0x9522:0xa9681175
  422d17:	out    0xf6,al
  422d19:	jne    0x422d25
  422d1b:	push   ss
  422d1c:	mov    ebp,0xc174f648
  422d21:	mov    ebx,0xf35994c1
  422d26:	sbb    BYTE PTR ds:0x2c7b86ec,dl
  422d2c:	cmc    
  422d2d:	inc    ebp
  422d2e:	inc    ebp
  422d2f:	cmp    eax,0x18e5027d
  422d34:	test   BYTE PTR [esi-0x45883794],bl
  422d3a:	iret   
  422d3b:	ss leave 
  422d3d:	dec    ebx
  422d3e:	(bad)  [edx+0x23]
  422d41:	aas    
  422d42:	outs   dx,BYTE PTR ds:[esi]
  422d43:	adc    DWORD PTR [ebx+0x4bf69dcd],eax
  422d49:	std    
  422d4a:	lods   al,BYTE PTR ds:[esi]
  422d4b:	xchg   ah,bl
  422d4d:	cdq    
  422d4e:	mov    ah,0xc5
  422d50:	mov    bl,BYTE PTR [esi-0x1f]
  422d53:	shl    DWORD PTR [ebp+0x30def961],cl
  422d59:	or     DWORD PTR [esp+edx*2+0x67],edx
  422d5d:	(bad)  
  422d5e:	push   ebp
  422d5f:	xor    eax,0x96ed2e64
  422d64:	repz cmp dh,dl
  422d67:	ins    DWORD PTR es:[edi],dx
  422d68:	mov    dh,0xd0
  422d6a:	xor    eax,0x18865385
  422d6f:	inc    edx
  422d70:	xor    cl,bh
  422d72:	mov    al,ds:0x8b50f27c
  422d77:	pusha  
  422d78:	ret    0xd071
  422d7b:	in     al,dx
  422d7c:	xlat   BYTE PTR ds:[ebx]
  422d7d:	(bad)
  422d80:	xor    al,0xf0
  422d82:	xchg   edx,eax
  422d83:	sar    dh,cl
  422d85:	cli    
  422d86:	jmp    DWORD PTR ds:0xc60d610
  422d8c:	and    eax,0x35ecabe3
  422d91:	fbld   TBYTE PTR [esi]
  422d93:	mov    edx,0x58c522c3
  422d98:	retf   0x7821
  422d9b:	aam    0xbe
  422d9d:	or     al,0x75
  422d9f:	loopne 0x422d67
  422da1:	sbb    al,0x5e
  422da3:	(bad)  
  422da5:	lock imul ebp,DWORD PTR [esi-0x8a5505f],0x42
  422dad:	sti    
  422dae:	inc    esi
  422daf:	and    ebx,DWORD PTR [ecx-0x75336d85]
  422db5:	xchg   DWORD PTR [eax],esi
  422db7:	repz mov ecx,0x98c92ccd
  422dbd:	pop    edi
  422dbe:	pop    edi
  422dbf:	test   BYTE PTR [esi],dl
  422dc1:	imul   DWORD PTR ds:0x72e4b4f1
  422dc7:	mov    bl,0x8a
  422dc9:	cmp    eax,DWORD PTR [esi+0x6abc315f]
  422dcf:	mov    DWORD PTR [esp+edi*4-0x7c],edx
  422dd3:	sub    DWORD PTR [edx-0x19],edi
  422dd6:	fcomp  DWORD PTR [edx]
  422dd8:	ret    
  422dd9:	mov    bl,0x7b
  422ddb:	(bad)  
  422ddc:	scas   eax,DWORD PTR es:[edi]
  422ddd:	add    BYTE PTR [eax-0x68],bl
  422de0:	and    DWORD PTR [eax-0x4f5e2e54],ebp
  422de6:	test   eax,0x1f94beb4
  422deb:	mov    eax,ds:0x5d0f0123
  422df0:	pop    ds
  422df1:	or     BYTE PTR [edx],bl
  422df3:	mov    al,ds:0xa4f812
  422df8:	dec    edi
  422df9:	mov    ah,0x4c
  422dfb:	and    DWORD PTR [eax-0x40],0x6c1444ac
  422e02:	push   esp
  422e03:	xor    esp,0xec03d9eb
  422e09:	mov    edx,0x2fc966d4
  422e0e:	daa    
  422e0f:	or     eax,0x10f59e93
  422e14:	call   0x364d27d4
  422e19:	push   edx
  422e1a:	xchg   esi,eax
  422e1b:	jns    0x422df3
  422e1d:	inc    DWORD PTR [eax+0x1e23e1c5]
  422e23:	inc    ecx
  422e24:	repnz outs dx,DWORD PTR ds:[esi]
  422e26:	gs sti 
  422e28:	mov    ebp,0xa28c4db
  422e2d:	adc    ah,BYTE PTR [esi-0x3d4e3df6]
  422e33:	enter  0xfe51,0x6f
  422e37:	iret   
  422e38:	fs push ss
  422e3a:	xor    al,0xb3
  422e3c:	aad    0xee
  422e3e:	jb     0x422e84
  422e40:	jl     0x422dc5
  422e42:	mov    al,ds:0xe13996d
  422e47:	xchg   edx,eax
  422e48:	icebp  
  422e49:	mov    dl,0x31
  422e4b:	inc    ecx
  422e4c:	push   eax
  422e4d:	pop    ds
  422e4e:	pushf  
  422e4f:	lahf   
  422e50:	sub    DWORD PTR [eax+0xb],0xf835ca31
  422e57:	xor    eax,0x41be0433
  422e5c:	adc    al,0x29
  422e5e:	scas   eax,DWORD PTR es:[edi]
  422e5f:	and    eax,0xf859008a
  422e64:	mov    esi,0x7f0e0b75
  422e69:	push   edx
  422e6a:	test   al,0x73
  422e6d:	enter  0x281b,0x50
  422e71:	cmc    
  422e72:	loop   0x422ebf
  422e74:	out    dx,eax
  422e75:	cwde   
  422e76:	pop    ds
  422e77:	pop    ebp
  422e78:	aaa    
  422e79:	adc    al,BYTE PTR ds:0x5fd391b3
  422e7f:	jp     0x422ea4
  422e81:	xchg   ebp,eax
  422e82:	jnp    0x422e46
  422e84:	shr    BYTE PTR [ebx],cl
  422e86:	mov    eax,ds:0xee9552e1
  422e8b:	push   esp
  422e8c:	bound  eax,QWORD PTR [eax]
  422e8e:	stos   BYTE PTR es:[edi],al
  422e8f:	pop    edx
  422e90:	mov    bl,0xab
  422e92:	dec    ecx
  422e93:	mov    al,0x37
  422e95:	adc    ch,BYTE PTR [esi-0x3baf36a7]
  422e9b:	in     al,dx
  422e9c:	pop    edi
  422e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e9e:	arpl   bp,si
  422ea0:	cli    
  422ea1:	or     BYTE PTR [esi+0x42],cl
  422ea4:	sbb    edi,DWORD PTR [ecx]
  422ea6:	loope  0x422e41
  422ea8:	or     edx,DWORD PTR [esi]
  422eaa:	shr    DWORD PTR ds:0x589ec132,cl
  422eb0:	push   es
  422eb1:	jno    0x422ef4
  422eb3:	pop    edi
  422eb4:	push   ds
  422eb5:	xor    DWORD PTR [ebx-0x62b06472],eax
  422ebb:	int    0x3e
  422ebd:	ret    
  422ebe:	cmp    dh,BYTE PTR [ebx+0x2dd8af71]
  422ec4:	push   0x7df73e0a
  422ec9:	fwait
  422eca:	(bad)  
  422ecb:	push   ebx
  422ecc:	xchg   eax,ecx
  422ece:	call   0xe598:0xcba24ed
  422ed5:	ret    
  422ed6:	cdq    
  422ed7:	cmp    ah,BYTE PTR [eax-0x64]
  422eda:	(bad)  
  422edb:	xchg   esp,eax
  422edc:	xchg   ebx,eax
  422edd:	inc    esi
  422ede:	test   DWORD PTR [eax],edi
  422ee0:	push   es
  422ee1:	xchg   ebp,eax
  422ee2:	mov    dl,0xae
  422ee4:	mov    esi,0x656a8d04
  422ee9:	xor    eax,0x5e131346
  422eee:	js     0x422e82
  422ef0:	mov    ebx,0xd3ca7f4c
  422ef5:	repz add BYTE PTR [esi-0x29ba69b5],bl
  422efc:	add    BYTE PTR [eax+edi*4+0x2e],ah
  422f00:	scas   al,BYTE PTR es:[edi]
  422f01:	jmp    0x422e8f
  422f03:	or     esp,esp
  422f05:	scas   eax,DWORD PTR es:[edi]
  422f06:	icebp  
  422f07:	ret    0xa67d
  422f0a:	adc    eax,0x9993c325
  422f0f:	dec    ecx
  422f10:	aas    
  422f11:	jne    0x422e9b
  422f13:	jl     0x422ec4
  422f15:	cmp    DWORD PTR [esi+0x64],eax
  422f18:	mov    esi,0xf6ecf93d
  422f1d:	jge    0x422e9f
  422f1f:	ret    0x21cc
  422f22:	les    ecx,FWORD PTR [esi]
  422f24:	ror    BYTE PTR [edx*4+0x5fec2be0],1
  422f2b:	push   ss
  422f2c:	inc    edx
  422f2d:	jae    0x422ecc
  422f2f:	retf   0xacb3
  422f32:	add    edx,DWORD PTR [ebx-0x97e0f34]
  422f38:	sub    eax,0xb399b66d
  422f3d:	pop    ss
  422f3e:	std    
  422f3f:	(bad)  
  422f40:	in     eax,dx
  422f41:	inc    ebx
  422f42:	lock mov ecx,0x40e31418
  422f48:	cld    
  422f49:	mov    DWORD PTR [ebx],eax
  422f4b:	mov    BYTE PTR [ebp-0x2c],dh
  422f4e:	test   al,0xe2
  422f50:	and    eax,0xa9ca7075
  422f55:	xchg   ecx,eax
  422f56:	cmp    eax,esi
  422f58:	push   esp
  422f59:	sbb    al,0x65
  422f5b:	call   0x858b1628
  422f60:	test   eax,0x19ed5e46
  422f65:	jg     0x422f1c
  422f67:	test   eax,0x733cdd02
  422f6c:	and    al,0xf0
  422f6e:	xchg   ecx,eax
  422f6f:	mov    WORD PTR [esi+0xd],ss
  422f72:	pop    esp
  422f73:	pusha  
  422f74:	push   eax
  422f75:	test   DWORD PTR [esi],ebx
  422f77:	sbb    dl,cl
  422f79:	add    BYTE PTR ds:0x2ae87a49,bl
  422f7f:	pop    edx
  422f80:	fisttp QWORD PTR [esi+0x5942975]
  422f86:	sbb    DWORD PTR [ecx+eiz*4-0x6f32f532],edx
  422f8d:	sbb    al,0xbd
  422f8f:	std    
  422f90:	jge    0x422fd4
  422f92:	xchg   ebp,eax
  422f93:	nop
  422f94:	(bad)  
  422f95:	inc    ebx
  422f96:	pop    esp
  422f97:	in     al,dx
  422f98:	daa    
  422f99:	shl    BYTE PTR [ebp+0x5f096849],0x71
  422fa0:	inc    esp
  422fa1:	mov    BYTE PTR [edx+0x33c5c291],bh
  422fa7:	push   eax
  422fa8:	ins    DWORD PTR es:[edi],dx
  422fa9:	addr16 je 0x422f44
  422fac:	jp     0x422f7f
  422fae:	push   esp
  422faf:	mov    bl,cl
  422fb1:	sub    BYTE PTR [edx],0x6c
  422fb4:	ror    DWORD PTR [edx],cl
  422fb6:	bound  edi,QWORD PTR [eax-0x1d]
  422fb9:	test   bl,bl
  422fbb:	enter  0x33c2,0xf6
  422fbf:	or     BYTE PTR [edx+0x2716b675],0xf
  422fc6:	fidiv  WORD PTR [ecx-0x36]
  422fc9:	jae    0x422fd1
  422fcb:	scas   eax,DWORD PTR es:[edi]
  422fcc:	(bad)
  422fcf:	fwait
  422fd0:	pop    ds
  422fd1:	std    
  422fd2:	call   0x3c33:0x2b4d7c81
  422fd9:	push   eax
  422fda:	out    0x44,al
  422fdc:	(bad)  
  422fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fde:	add    al,0xfa
  422fe0:	adc    BYTE PTR [ebx+0x4c09013f],0xd0
  422fe7:	xor    eax,0x36a793d1
  422fec:	cmp    BYTE PTR [edi+0x4f],al
  422fef:	jecxz  0x42305b
  422ff1:	test   BYTE PTR [edx],bh
  422ff3:	cwde   
  422ff4:	mov    DWORD PTR [ecx-0x15],esi
  422ff7:	inc    edi
  422ff8:	test   bl,ch
  422ffa:	mov    eax,0x5bc4fb6f
  422fff:	jg     0x422f9f
  423001:	mov    ebp,0x521fbb4
  423006:	xor    esi,esp
  423008:	shl    DWORD PTR [edi-0x5e],1
  42300b:	fimul  DWORD PTR [ecx-0x58]
  42300e:	push   cs
  42300f:	mov    ebp,db0
  423012:	jbe    0x423023
  423014:	pop    esi
  423015:	push   ds
  423016:	aas    
  423017:	int3   
  423018:	push   ss
  423019:	je     0x423057
  42301b:	pop    edi
  42301c:	adc    al,BYTE PTR [ecx]
  42301e:	jmp    0x92a6:0x3e44d64b
  423025:	sub    bh,BYTE PTR [edi+0x5220b4cf]
  42302b:	xor    al,0x3e
  42302d:	out    dx,al
  42302e:	sbb    ecx,edi
  423030:	mov    dl,0x1
  423032:	adc    BYTE PTR [ebx-0x576ebe6e],ch
  423038:	in     al,dx
  423039:	ins    BYTE PTR es:[edi],dx
  42303a:	and    bh,BYTE PTR [eax+esi*4]
  42303d:	outs   dx,DWORD PTR ds:[esi]
  42303e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303f:	enter  0xe2a4,0x7f
  423043:	addr16 int 0x66
  423046:	pop    ss
  423047:	and    DWORD PTR [ecx],0xffffffed
  42304a:	add    esp,0x5
  42304d:	pop    es
  42304e:	mov    ah,0xc6
  423050:	xor    eax,0x139601e7
  423055:	loope  0x42304f
  423057:	out    dx,al
  423058:	fmul   QWORD PTR [esi]
  42305a:	sar    BYTE PTR [edx],0x15
  42305d:	push   ds
  42305e:	mov    cl,0x85
  423060:	lahf   
  423061:	scas   eax,DWORD PTR es:[edi]
  423062:	xor    esp,esp
  423064:	xchg   ebx,eax
  423065:	sub    ah,BYTE PTR [eax+0x6028df02]
  42306b:	dec    ebp
  42306c:	and    DWORD PTR [esi-0x76],ebx
  42306f:	adc    esp,eax
  423071:	cmp    cl,ch
  423073:	xor    edi,DWORD PTR [esi+0x4a]
  423076:	sbb    ch,ah
  423078:	xchg   ecx,eax
  423079:	push   ds
  42307a:	fs das 
  42307c:	add    dh,0x10
  42307f:	push   eax
  423080:	les    edx,FWORD PTR [edx+edi*2]
  423083:	pop    esp
  423084:	fnstcw WORD PTR [edi+0x54]
  423087:	cmp    BYTE PTR [ecx+ebp*2+0x48],dl
  42308b:	jb     0x4230cb
  42308d:	cmp    al,0xab
  42308f:	cmp    ch,BYTE PTR [ebx]
  423091:	cli    
  423092:	or     cl,BYTE PTR [ecx+eax*4-0x4d]
  423096:	iret   
  423097:	mov    cl,0x67
  423099:	daa    
  42309a:	add    al,0x82
  42309c:	mov    ds:0x4e8d9b52,al
  4230a1:	and    eax,0x1f288d8c
  4230a6:	nop
  4230a7:	lock imul ebp,DWORD PTR [ecx],0x5e09f171
  4230ae:	adc    eax,0x6e7cb948
  4230b3:	dec    esp
  4230b4:	cmp    al,0xd
  4230b6:	push   eax
  4230b7:	popf   
  4230b8:	cmc    
  4230b9:	in     eax,dx
  4230ba:	xchg   BYTE PTR [edx-0x1c7615bd],dl
  4230c0:	lds    esp,FWORD PTR [esi+ecx*2-0x43]
  4230c4:	pusha  
  4230c5:	into   
  4230c6:	repnz mov bh,ah
  4230c9:	and    eax,DWORD PTR [esi+0x7288f558]
  4230cf:	xchg   edi,eax
  4230d0:	out    dx,al
  4230d1:	jmp    0x4230a9
  4230d3:	xchg   esp,eax
  4230d4:	jae    0x423129
  4230d6:	popa   
  4230d7:	repz jecxz 0x423124
  4230da:	adc    al,0x5c
  4230dc:	xchg   esp,eax
  4230dd:	adc    BYTE PTR [ebx-0x433d8eb7],bh
  4230e3:	adc    al,BYTE PTR [eax-0x14]
  4230e6:	mov    bh,0x8
  4230e8:	outs   dx,DWORD PTR ds:[esi]
  4230ea:	ret    
  4230eb:	aas    
  4230ec:	mov    edx,esi
  4230ee:	out    0xe7,al
  4230f0:	pop    eax
  4230f1:	jne    0x423143
  4230f3:	cwde   
  4230f4:	int3   
  4230f5:	xor    ecx,DWORD PTR [eax]
  4230f7:	xchg   DWORD PTR [edx+0x53da7e1],esp
  4230fd:	in     eax,0x90
  4230ff:	push   ds
  423100:	sbb    DWORD PTR [edi],ebx
  423102:	push   edx
  423103:	and    al,0x30
  423105:	xor    esi,DWORD PTR [edi+0x16]
  423108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423109:	add    ebx,DWORD PTR [ebx]
  42310b:	and    BYTE PTR [ebx+0x45e9b7d3],dh
  423111:	sub    ecx,DWORD PTR [ecx+edi*4-0x3e]
  423115:	out    0x1a,al
  423117:	aam    0xf
  423119:	aaa    
  42311a:	stos   DWORD PTR es:[edi],eax
  42311b:	out    dx,eax
  42311c:	xchg   ecx,eax
  42311d:	xor    ah,ch
  42311f:	fbstp  TBYTE PTR [ebp+0x53]
  423122:	push   ebp
  423123:	xor    DWORD PTR [ecx+0x5e4e31f9],edi
  423129:	(bad)  
  42312a:	sub    edx,DWORD PTR [edi]
  42312c:	inc    edx
  42312d:	sub    al,0xee
  42312f:	cs ds mov bh,0xe5
  423133:	cmp    dh,dl
  423135:	imul   ebp,edx,0xebb45053
  42313b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42313c:	xchg   ebx,eax
  42313d:	adc    cl,BYTE PTR [ebp+eax*1+0x5a93128f]
  423144:	pop    es
  423145:	mov    esi,0xbb9845ca
  42314a:	dec    ebx
  42314b:	add    BYTE PTR [edi],ah
  42314d:	aaa    
  42314e:	xchg   ebp,eax
  42314f:	push   edx
  423150:	div    BYTE PTR [eax+edi*8+0x7b]
  423154:	ins    DWORD PTR es:[edi],dx
  423155:	inc    ebx
  423156:	inc    esi
  423157:	(bad)  
  423158:	pop    ebp
  423159:	into   
  42315a:	mov    dh,0x7e
  42315c:	xor    dh,BYTE PTR [eax-0x60]
  42315f:	cmp    al,0x48
  423161:	pop    edx
  423162:	into   
  423163:	addr16 pop esp
  423165:	push   0xb
  423167:	dec    edx
  423168:	shl    BYTE PTR ds:0xc12cbd7b,cl
  42316e:	(bad)  
  423170:	shl    BYTE PTR [ecx-0x10277bc7],0x75
  423177:	add    eax,0x4017732e
  42317c:	dec    esi
  42317d:	xor    al,0x7
  42317f:	rcr    BYTE PTR [ebp-0x39],0x64
  423183:	imul   edx
  423185:	dec    ebp
  423186:	mov    ecx,0xe6ac814f
  42318b:	sbb    al,0xc
  42318d:	repz push eax
  42318f:	mov    ds:0xaae76b17,al
  423194:	hlt    
  423195:	add    al,0x35
  423197:	jge    0x42311b
  423199:	cmp    eax,0xa1dd3261
  42319e:	mov    edi,0x787d5ecb
  4231a3:	and    al,0xb7
  4231a5:	(bad)  
  4231a6:	loop   0x4231da
  4231a8:	mov    ?,WORD PTR [eax]
  4231aa:	jle    0x423182
  4231ac:	mov    ds:0xc7d508ed,al
  4231b1:	adc    ebx,esp
  4231b3:	push   esi
  4231b4:	mov    esi,0x3f4c0039
  4231b9:	jmp    0x42316c
  4231bb:	mov    DWORD PTR [esi-0x67],edx
  4231be:	aaa    
  4231bf:	jle    0x4231c1
  4231c1:	sub    esp,DWORD PTR [eax]
  4231c3:	or     BYTE PTR [edi],cl
  4231c5:	sar    BYTE PTR [esi-0x34],cl
  4231c8:	cld    
  4231c9:	push   esp
  4231ca:	mov    edi,ebp
  4231cc:	addr16 push cs
  4231ce:	or     al,0xd3
  4231d0:	arpl   WORD PTR [ebx],sp
  4231d2:	imul   edx,DWORD PTR [eax-0x50074dba],0x28
  4231d9:	sbb    dh,dh
  4231db:	and    DWORD PTR [ebx],ebx
  4231dd:	bound  ecx,QWORD PTR [edi-0x46e09f05]
  4231e3:	push   ss
  4231e4:	mov    cl,0x1c
  4231e6:	mov    DWORD PTR [edi+0x2b],esi
  4231e9:	dec    edi
  4231ea:	mov    esp,gs
  4231ec:	pop    edi
  4231ed:	pushf  
  4231ee:	mov    ss,ebx
  4231f0:	add    DWORD PTR [ecx],esi
  4231f2:	pop    es
  4231f3:	dec    esi
  4231f4:	in     eax,dx
  4231f5:	xlat   BYTE PTR ds:[ebx]
  4231f6:	call   0xdd68bdd0
  4231fb:	mov    ebx,0xc10dc35a
  423200:	cwde   
  423201:	sbb    bl,BYTE PTR [eax+eiz*2+0x5e]
  423205:	dec    esi
  423206:	lods   eax,DWORD PTR ds:[esi]
  423207:	in     eax,dx
  423208:	jl     0x4231f9
  42320a:	adc    BYTE PTR [edi+0x15ba6463],0xb0
  423211:	and    esp,DWORD PTR [esi]
  423213:	ret    0xe429
  423216:	add    eax,0x6b1f8a0f
  42321b:	dec    edx
  42321c:	dec    edx
  42321d:	sbb    DWORD PTR [edx+0xf],edi
  423220:	mov    WORD PTR [ebx+0x12],ss
  423223:	sbb    eax,ecx
  423225:	sbb    DWORD PTR [edx+0xa6dc4eb],ebx
  42322b:	adc    al,0x44
  42322d:	jmp    0xa44db586
  423232:	arpl   dx,bp
  423234:	push   cs
  423235:	pop    esp
  423236:	sub    ebx,DWORD PTR [edi]
  423238:	cmp    DWORD PTR [ecx+0x27],ebx
  42323b:	mov    al,0xb5
  42323d:	es xchg esi,eax
  42323f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423240:	push   0x21
  423242:	xchg   ebx,eax
  423243:	aad    0x9b
  423245:	adc    eax,0xcf291138
  42324a:	imul   esp,DWORD PTR [esi-0x54]
  42324e:	repnz xchg ebp,eax
  423250:	push   cs
  423251:	add    ebp,edi
  423253:	sti    
  423254:	mov    ebx,0x83213e12
  423259:	cdq    
  42325a:	add    eax,0x1528704e
  42325f:	in     al,0xe8
  423261:	jns    0x4232a5
  423263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423264:	and    ecx,DWORD PTR [esi+eiz*4+0x998d3bc]
  42326b:	jmp    0x423245
  42326d:	pusha  
  42326e:	test   edi,ecx
  423270:	aaa    
  423271:	push   0x7630ddf0
  423276:	in     al,dx
  423277:	cs pop ebp
  423279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42327a:	pop    esi
  42327b:	repnz sub eax,0xbed93a4
  423281:	jmp    0x891da6fd
  423286:	icebp  
  423287:	pop    ebp
  423288:	jge    0x423221
  42328a:	imul   esi,DWORD PTR [ecx+0x34862ca7],0x7c3e0f5c
  423294:	mov    ss,WORD PTR [ebx+0x39]
  423297:	pop    ds
  423298:	out    0x5d,eax
  42329a:	test   DWORD PTR [eax+0xdce94d1],ebx
  4232a0:	xchg   edx,eax
  4232a1:	fdivr  DWORD PTR [eax+ecx*2]
  4232a4:	push   edx
  4232a5:	xchg   BYTE PTR [ebx+0x35],ah
  4232a8:	in     eax,0x5f
  4232aa:	pop    edi
  4232ab:	jns    0x4232d7
  4232ad:	scas   al,BYTE PTR es:[edi]
  4232ae:	xchg   esp,eax
  4232af:	adc    ebp,ecx
  4232b1:	xlat   BYTE PTR ds:[ebx]
  4232b2:	mov    dl,0x53
  4232b4:	xor    al,0x6b
  4232b6:	retf   
  4232b7:	cs jne 0x423264
  4232ba:	dec    esp
  4232bb:	fstp   QWORD PTR [ebx+eax*2-0x297b77c3]
  4232c3:	dec    edx
  4232c4:	loopne 0x423246
  4232c6:	inc    esp
  4232c7:	or     bh,BYTE PTR [edx-0x33e3ab4b]
  4232cd:	popf   
  4232ce:	and    al,BYTE PTR [edi+0x515087cd]
  4232d4:	pusha  
  4232d5:	push   es
  4232d6:	aas    
  4232d7:	xor    cl,0x9e
  4232da:	das    
  4232db:	sub    al,0x10
  4232dd:	shl    BYTE PTR [edi],0x53
  4232e0:	mov    edi,0x5ae19593
  4232e5:	in     eax,dx
  4232e6:	xrelease xchg DWORD PTR [edx+0x7d],ebx
  4232ea:	ja     0x4232f1
  4232ec:	jbe    0x42326e
  4232ee:	enter  0xc8ab,0xe2
  4232f2:	sub    ecx,DWORD PTR [edx+0x46]
  4232f5:	sahf   
  4232f6:	out    dx,eax
  4232f7:	jo     0x423289
  4232f9:	pushf  
  4232fa:	je     0x42336f
  4232fc:	mov    edx,0x6ab533a8
  423301:	fld    DWORD PTR ds:0x99366e65
  423307:	cmp    ah,bl
  423309:	test   BYTE PTR [esi],0xab
  42330c:	or     ebp,DWORD PTR [eax+0x0]
  42330f:	loop   0x4232c2
  423311:	stc    
  423312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423313:	and    eax,0x48603b56
  423318:	ds popf 
  42331a:	jecxz  0x423320
  42331c:	cmp    BYTE PTR [edi+0x33470854],ah
  423322:	or     al,0x46
  423324:	push   esi
  423325:	jnp    0x4232ab
  423327:	push   0x76abfdec
  42332c:	push   ds
  42332d:	imul   al
  42332f:	sbb    eax,0xc821ba91
  423334:	xchg   ecx,eax
  423335:	adc    edx,ebx
  423337:	out    dx,eax
  423338:	xchg   ebp,eax
  423339:	in     al,dx
  42333a:	pop    eax
  42333b:	std    
  42333c:	add    DWORD PTR [edi],eax
  42333e:	jae    0x423301
  423340:	in     al,dx
  423341:	mov    al,ds:0x2209dba8
  423346:	repnz int3 
  423348:	mov    cl,0x7
  42334a:	ss xchg esi,eax
  42334c:	sahf   
  42334d:	pop    ds
  42334e:	call   0xc3860a4
  423353:	sub    esp,esi
  423355:	cmp    BYTE PTR [esi+0x73],cl
  423358:	bound  edi,QWORD PTR cs:[ebx+0x3a7c3e60]
  42335f:	sbb    eax,0x8f4a8238
  423364:	ss mov dh,0x11
  423367:	and    ebp,DWORD PTR [eax]
  423369:	call   0xf6cc170a
  42336e:	es xchg esi,eax
  423370:	pop    ss
  423371:	xchg   edi,eax
  423372:	icebp  
  423373:	inc    ebp
  423374:	mov    ds:0xcf446808,al
  423379:	push   eax
  42337a:	shr    DWORD PTR [edx+0x6b2bd3c2],1
  423380:	not    DWORD PTR cs:[eax]
  423383:	cmp    eax,ecx
  423385:	pop    ecx
  423386:	mov    ds:0xf5985747,eax
  42338b:	sbb    DWORD PTR [esp+edx*8+0x7c26321e],ecx
  423392:	fs dec ebp
  423394:	xor    esp,DWORD PTR [ebp-0x59]
  423397:	jl     0x423346
  423399:	cmp    al,0x9c
  42339b:	dec    edi
  42339c:	(bad)  
  42339d:	aad    0x4b
  42339f:	stos   DWORD PTR es:[edi],eax
  4233a0:	cmp    DWORD PTR [ebx-0x4c],edi
  4233a3:	repnz push 0x3fdb94f5
  4233a9:	repz jge 0x4233b8
  4233ac:	sub    al,0x45
  4233ae:	ds push es
  4233b0:	cmp    al,0xd9
  4233b2:	mov    esp,0x44477a3f
  4233b7:	jo     0x42333f
  4233b9:	fs adc ebx,eax
  4233bc:	mov    esi,0xf97f5393
  4233c1:	push   0x4504cfa4
  4233c6:	je     0x42336a
  4233c8:	icebp  
  4233c9:	mov    WORD PTR [edx-0x37d8bea4],?
  4233cf:	pop    edx
  4233d0:	add    al,BYTE PTR ds:0x6a4b76c9
  4233d6:	adc    ecx,0x5593b4ab
  4233dc:	xchg   edx,eax
  4233dd:	pop    esi
  4233de:	lds    ebx,FWORD PTR [ecx-0x63bcbefd]
  4233e4:	mov    al,0x86
  4233e6:	sub    eax,0xbabff55a
  4233eb:	out    dx,eax
  4233ec:	iret   
  4233ed:	jmp    0xffc832fa
  4233f2:	ret    0x7db6
  4233f5:	adc    edi,DWORD PTR [ecx-0x6b1e5ad3]
  4233fb:	mov    ds:0x2cbc9301,al
  423400:	adc    DWORD PTR ss:[ebx-0x5a976f4d],ecx
  423407:	icebp  
  423408:	push   ecx
  423409:	daa    
  42340a:	js     0x42347b
  42340c:	dec    ecx
  42340d:	rol    DWORD PTR [eax],0x4e
  423410:	mov    ds,WORD PTR [ecx+0x72]
  423413:	lods   eax,DWORD PTR ds:[esi]
  423414:	pop    eax
  423415:	xor    ebx,DWORD PTR [ecx+0x6f]
  423418:	adc    BYTE PTR [ebp+esi*2+0xf],ah
  42341c:	mov    edi,0xd693feb4
  423421:	je     0x42340c
  423423:	test   BYTE PTR [edx],0x6e
  423426:	ins    DWORD PTR es:[edi],dx
  423427:	and    DWORD PTR [ebx+0x1100ae7d],edx
  42342d:	ins    DWORD PTR es:[edi],dx
  42342e:	mov    ch,0x7a
  423430:	push   ecx
  423431:	cmc    
  423432:	mov    BYTE PTR [edx-0x693b3d63],dh
  423438:	add    BYTE PTR [eax-0x33f88297],ch
  42343e:	jl     0x423444
  423440:	shl    eax,0x8c
  423443:	pop    ecx
  423444:	scas   al,BYTE PTR es:[edi]
  423445:	in     eax,0x7a
  423447:	jp     0x42341e
  423449:	push   ds
  42344a:	push   ebx
  42344b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42344c:	or     eax,0xd4abe3a0
  423451:	or     eax,0x41778d3f
  423456:	mov    DWORD PTR [ecx+0x466b0c81],esp
  42345c:	into   
  42345d:	mov    ah,0xb9
  42345f:	(bad)  [eax]
  423461:	adc    dh,0xa3
  423464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423465:	mov    dl,0x44
  423467:	cmp    al,0xc9
  423469:	push   ebp
  42346a:	jecxz  0x4234ba
  42346c:	cmc    
  42346d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42346e:	shr    BYTE PTR [edx+0xd],0xd9
  423472:	xor    BYTE PTR [esi],bh
  423474:	call   0x5f482275
  423479:	xlat   BYTE PTR ds:[ebx]
  42347a:	push   0xe6c2cf3
  42347f:	rcl    DWORD PTR [ecx+0x6457309d],1
  423485:	adc    al,0x69
  423487:	popa   
  423488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423489:	test   edi,ebx
  42348b:	push   ecx
  42348c:	mov    ch,0x56
  42348e:	ja     0x423416
  423490:	sub    ch,BYTE PTR [eax]
  423492:	push   esp
  423493:	je     0x423485
  423495:	xchg   esp,ebp
  423497:	bound  esp,QWORD PTR [ebp-0x68]
  42349a:	js     0x423457
  42349c:	sar    BYTE PTR [edi],1
  42349e:	dec    eax
  42349f:	fistp  QWORD PTR [edi+0x1f]
  4234a2:	jnp    0x4234b1
  4234a4:	dec    ebp
  4234a5:	pop    esp
  4234a6:	sbb    dh,BYTE PTR es:[ebp+0x693d37d7]
  4234ad:	pop    edx
  4234ae:	test   al,0xac
  4234b0:	and    esp,DWORD PTR [esp+edi*4-0x4c]
  4234b4:	and    DWORD PTR [edx+ebp*1-0x6c],esp
  4234b8:	sahf   
  4234b9:	icebp  
  4234ba:	aad    0x53
  4234bc:	test   al,0x22
  4234be:	xor    al,0x63
  4234c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234c1:	jge    0x42350e
  4234c3:	dec    esp
  4234c4:	icebp  
  4234c5:	adc    BYTE PTR [edi+ebx*2-0x5d],bh
  4234c9:	jl     0x423532
  4234cb:	imul   eax,ebp,0x37
  4234ce:	sbb    bh,dh
  4234d0:	adc    DWORD PTR [esi+0x57d1e51],esi
  4234d6:	cmp    edi,DWORD PTR [ecx]
  4234d8:	int3   
  4234d9:	out    dx,eax
  4234da:	dec    eax
  4234db:	call   0x7b41913e
  4234e0:	(bad)  
  4234e1:	int    0x9
  4234e3:	add    al,0x29
  4234e5:	or     DWORD PTR ds:0xbc6a63b4,edx
  4234eb:	(bad)  
  4234ec:	dec    DWORD PTR [edi+edi*2]
  4234ef:	ins    BYTE PTR es:[edi],dx
  4234f0:	cmp    dl,BYTE PTR [eax+0x7]
  4234f3:	pop    esi
  4234f4:	mov    ch,bl
  4234f6:	xor    ah,ch
  4234f8:	test   DWORD PTR [edx-0x73984264],edx
  4234fe:	imul   eax,esp,0xffffff94
  423501:	xor    al,0x70
  423504:	repz adc ebx,edx
  423507:	inc    esp
  423508:	test   al,0x41
  42350a:	xchg   esi,eax
  42350b:	push   ebp
  42350c:	mov    edi,0x800ef461
  423511:	jl     0x4234c4
  423513:	(bad)  
  423514:	neg    BYTE PTR [eax+0x30]
  423517:	sar    BYTE PTR [eax+0x77],0x2f
  42351b:	mov    esi,0xf1fc66c0
  423520:	ficom  WORD PTR [edx]
  423522:	or     ch,BYTE PTR [eax]
  423524:	cdq    
  423525:	loopne 0x423558
  423527:	mov    cl,0x6c
  423529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42352a:	mov    esp,ebp
  42352c:	adc    ah,0xc7
  42352f:	shr    ah,cl
  423531:	push   edx
  423532:	ret    0x4de8
  423535:	sub    al,0xc5
  423537:	fnstcw WORD PTR [ebp-0x64]
  42353a:	jmp    0x4d5c83b0
  42353f:	jns    0x42351b
  423541:	adc    al,0x28
  423543:	push   ecx
  423544:	(bad)  
  423546:	ficomp DWORD PTR gs:[esi+0x6e1d625c]
  42354d:	in     eax,dx
  42354e:	jns    0x42353b
  423550:	and    ebp,DWORD PTR [si+0x1b]
  423554:	adc    eax,0x99b6f6c8
  423559:	dec    ebp
  42355a:	cmp    ebp,esi
  42355c:	sub    bh,BYTE PTR [esi+0x4]
  42355f:	ror    edi,cl
  423561:	mov    edi,0x3b8690f5
  423566:	sub    eax,0x838f5fa6
  42356b:	jne    0x42352b
  42356d:	lods   al,BYTE PTR ds:[esi]
  42356e:	sbb    ch,BYTE PTR [eax]
  423570:	imul   edx,edi,0xfffffffd
  423573:	mov    edi,0x4c27108f
  423578:	fcmovnbe st,st(7)
  42357a:	jnp    0x42356c
  42357c:	lods   al,BYTE PTR ds:[esi]
  42357d:	not    bh
  42357f:	ins    BYTE PTR es:[edi],dx
  423580:	pop    eax
  423581:	stos   DWORD PTR es:[edi],eax
  423582:	loop   0x423525
  423584:	shr    DWORD PTR [ecx+0x16],cl
  423587:	fcmovu st,st(4)
  423589:	cmp    DWORD PTR ds:0xee8ee73f,eax
  42358f:	sahf   
  423590:	sub    eax,0x764c7b66
  423595:	repnz mov bh,0xca
  423598:	and    eax,ebp
  42359a:	jl     0x42356e
  42359c:	mov    esi,0x6002a241
  4235a1:	inc    ebx
  4235a2:	ss push eax
  4235a4:	or     ebp,edx
  4235a6:	leave  
  4235a7:	mov    dl,0x50
  4235a9:	inc    ebx
  4235aa:	outs   dx,BYTE PTR ds:[esi]
  4235ab:	xchg   BYTE PTR [edi-0x40],bl
  4235ae:	cmp    BYTE PTR [ebx-0x7a],al
  4235b1:	popf   
  4235b2:	call   DWORD PTR [ebp+0x33]
  4235b5:	dec    esp
  4235b6:	adc    DWORD PTR [esi-0x57a8a9e1],0x2f
  4235bd:	xchg   BYTE PTR [ecx-0x6e],dh
  4235c0:	dec    edi
  4235c1:	mov    ebp,0xe5dc16d0
  4235c6:	jmp    0x4e6638dd
  4235cb:	mov    edx,0x399919a3
  4235d0:	add    DWORD PTR [edx-0x3],esp
  4235d3:	inc    esi
  4235d4:	mov    ds:0x6285247d,al
  4235d9:	stc    
  4235da:	jl     0x4235fe
  4235dc:	ss inc ebp
  4235de:	xor    dh,0xe4
  4235e1:	xor    al,0xb3
  4235e3:	aaa    
  4235e4:	sti    
  4235e5:	cmp    eax,0xcb997869
  4235ea:	aad    0x71
  4235ec:	test   eax,0xf3c4f686
  4235f1:	mov    ecx,0xed35751b
  4235f6:	mov    edx,0x34b7f8e
  4235fb:	nop
  4235fc:	push   ds
  4235fd:	inc    BYTE PTR [ecx+eax*4]
  423600:	adc    eax,DWORD PTR [esi+0x4e]
  423603:	xor    BYTE PTR [esi+0x2d22fa71],bl
  423609:	cli    
  42360a:	lock lock cmp eax,0xc1a5f252
  423611:	mov    dh,0x50
  423613:	jne    0x423617
  423615:	iret   
  423616:	and    al,0x3e
  423618:	inc    ecx
  423619:	rep outs dx,DWORD PTR ds:[esi]
  42361b:	xor    al,0x22
  42361d:	sub    al,0x21
  42361f:	sar    BYTE PTR [edi],0x3f
  423622:	loop   0x423612
  423624:	xchg   ebx,eax
  423625:	sub    BYTE PTR [eax],ah
  423627:	(bad)  
  423628:	mov    edx,0xfecd1573
  42362d:	add    dl,BYTE PTR [edx-0x359113d3]
  423633:	sub    al,0x29
  423635:	mov    ecx,0x90bbccbe
  42363a:	xor    DWORD PTR [esi],0xe1af45ee
  423640:	inc    ebp
  423641:	xchg   ecx,eax
  423642:	pop    esp
  423643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423644:	stos   DWORD PTR es:[edi],eax
  423645:	mov    ch,0x96
  423647:	mov    bl,BYTE PTR [eax]
  423649:	jo     0x423652
  42364b:	in     eax,0x8c
  42364d:	cdq    
  42364e:	pop    eax
  42364f:	mov    ch,0xe2
  423651:	push   ss
  423652:	xchg   ecx,eax
  423653:	push   edi
  423654:	xor    DWORD PTR [edx-0x527c55f5],esp
  42365a:	push   eax
  42365b:	fadd   DWORD PTR [ebx]
  42365d:	pushf  
  42365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365f:	in     eax,dx
  423660:	ss call 0x436:0xe86731ad
  423668:	leave  
  423669:	inc    esi
  42366a:	inc    edi
  42366b:	adc    eax,DWORD PTR [ecx]
  42366d:	std    
  42366e:	add    eax,0x393be18b
  423673:	cmc    
  423674:	loop   0x423645
  423676:	xchg   al,cl
  423678:	js     0x4236b9
  42367a:	ds (bad) 
  42367c:	iret   
  42367d:	inc    edi
  42367e:	ret    0x6abd
  423681:	bound  edi,QWORD PTR [edi-0x78]
  423684:	adc    esi,DWORD PTR [edx+eax*4+0x65]
  423688:	or     eax,DWORD PTR [ecx-0x56b9526f]
  42368e:	repnz push edi
  423690:	sahf   
  423691:	(bad)
  423695:	xchg   ebp,eax
  423696:	(bad)  
  423697:	push   ss
  423698:	mov    ds:0x118b5670,al
  42369d:	lods   al,BYTE PTR ds:[esi]
  42369e:	sti    
  42369f:	(bad)  
  4236a0:	ss rol eax,1
  4236a3:	push   0xffffffd5
  4236a5:	sti    
  4236a6:	mov    eax,ds:0x79f358b4
  4236ab:	jnp    0x4236dc
  4236ad:	mov    al,0xea
  4236af:	ror    ebp,0xc3
  4236b2:	inc    ecx
  4236b3:	mov    ds:0xe6b7d1fe,al
  4236b8:	jne    0x42366f
  4236ba:	cmp    eax,0xea0cf89a
  4236bf:	loopne 0x423654
  4236c1:	nop
  4236c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c3:	mul    BYTE PTR [edi+0x24]
  4236c6:	fdiv   QWORD PTR [eax-0xd8f1559]
  4236cc:	xor    DWORD PTR [ebp+0x26e8b80e],edi
  4236d2:	aas    
  4236d3:	cli    
  4236d4:	daa    
  4236d5:	dec    ebx
  4236d6:	aad    0x9b
  4236d8:	push   eax
  4236d9:	mov    ds:0xbd67a507,eax
  4236de:	mov    ecx,DWORD PTR [esi+0x68f6034d]
  4236e4:	jg     0x4236d8
  4236e6:	xchg   WORD PTR [edi-0x1d],bx
  4236ea:	es mov dh,0xbb
  4236ed:	push   ss
  4236ee:	call   0xcccf2fe1
  4236f3:	inc    esp
  4236f4:	pop    ebp
  4236f5:	and    eax,0x8958601b
  4236fa:	xchg   ebp,eax
  4236fb:	xchg   BYTE PTR [esi+0x4b],ah
  4236fe:	cmp    eax,0x445b6327
  423703:	ins    DWORD PTR es:[edi],dx
  423704:	mov    al,0x76
  423706:	dec    esi
  423707:	sub    al,0xa2
  423709:	mov    bl,0x8
  42370b:	fmul   DWORD PTR [edx-0x434cae22]
  423711:	adc    dh,BYTE PTR [edx]
  423713:	cmp    bh,BYTE PTR [ebp-0x15]
  423716:	fnstenv [ebx+0x12]
  423719:	test   BYTE PTR ds:0x52b1fa16,dh
  42371f:	(bad)  
  423720:	call   0x8a3c:0x2a9dcf30
  423727:	mov    ebp,DWORD PTR [eax-0x15bcc88c]
  42372d:	(bad)  
  42372f:	jb     0x423764
  423731:	dec    esp
  423732:	ret    
  423733:	add    DWORD PTR ds:0x29efe394,edi
  423739:	mov    dh,0xa1
  42373b:	fwait
  42373c:	jbe    0x42376e
  42373e:	in     eax,dx
  42373f:	(bad)  
  423740:	ror    ebx,1
  423742:	or     al,BYTE PTR [ebx]
  423744:	(bad)  
  423745:	retf   
  423746:	fsub   DWORD PTR [ebx+0x15]
  423749:	pop    esp
  42374a:	fistp  QWORD PTR [ebp+0x6]
  42374d:	idiv   BYTE PTR [ebp+0x5b]
  423750:	pop    edi
  423751:	out    dx,eax
  423752:	add    BYTE PTR [edx-0x14],al
  423755:	xor    DWORD PTR [esi],eax
  423757:	clc    
  423758:	jno    0x423724
  42375a:	sub    dh,BYTE PTR [edx]
  42375c:	rcl    BYTE PTR [ecx+ebx*8+0x138db5c5],0x96
  423764:	pop    ebp
  423765:	add    BYTE PTR [eax-0x4b],0x10
  423769:	jecxz  0x423719
  42376b:	add    DWORD PTR [ebp+0x38ceb615],0xffffffc8
  423772:	mov    eax,0x6c7c6aa7
  423777:	sbb    edi,DWORD PTR [ebx+0x35]
  42377a:	shl    BYTE PTR [ebp-0x46],0xaf
  42377e:	stc    
  42377f:	(bad)  
  423780:	fcmovb st,st(2)
  423782:	popf   
  423783:	cwde   
  423784:	jge    0x423763
  423786:	shl    edx,1
  423788:	in     eax,dx
  423789:	push   esp
  42378a:	mov    WORD PTR [edi],cs
  42378c:	iret   
  42378d:	and    BYTE PTR [ebx+0xb],0x47
  423791:	sar    DWORD PTR [esi],0x9f
  423794:	dec    edi
  423795:	mov    ds:0x78ce8659,al
  42379a:	dec    esp
  42379b:	sbb    edx,edx
  42379d:	jmp    0x423720
  42379f:	cwde   
  4237a0:	adc    ecx,edx
  4237a2:	fs jp  0x4237c1
  4237a5:	fidiv  DWORD PTR [edx+0x5b]
  4237a8:	mov    esi,0xf11e7a2c
  4237ad:	mov    eax,0xdd52326d
  4237b2:	inc    esi
  4237b3:	imul   ebp,DWORD PTR [eax+ebp*4+0x2],0x303540ab
  4237bb:	add    ebx,ebx
  4237bd:	mov    ah,BYTE PTR [ebx+0x20]
  4237c0:	int3   
  4237c1:	add    BYTE PTR [eax+0x46142e5e],0x94
  4237c8:	add    DWORD PTR [edi],ebp
  4237ca:	mov    esi,0x5540588e
  4237cf:	sub    al,0x69
  4237d1:	cli    
  4237d2:	lods   al,BYTE PTR ds:[esi]
  4237d3:	xchg   BYTE PTR [esi],cl
  4237d5:	fild   WORD PTR es:[edi]
  4237d8:	xlat   BYTE PTR ds:[ebx]
  4237d9:	dec    esp
  4237da:	jae    0x4237ea
  4237dc:	mov    ecx,0x65c43b21
  4237e1:	inc    esi
  4237e2:	jnp    0x42381b
  4237e4:	xchg   ecx,eax
  4237e5:	xor    edi,ecx
  4237e7:	jmp    0xa943c189
  4237ec:	cmp    eax,0xc2058759
  4237f1:	pop    ecx
  4237f2:	shl    eax,0x74
  4237f5:	cmp    ebp,DWORD PTR [eax-0x2a]
  4237f8:	mov    ds,WORD PTR [edx+0x38]
  4237fb:	gs push edx
  4237fd:	xchg   ebx,eax
  4237fe:	mov    ch,BYTE PTR [ecx]
  423800:	fwait
  423801:	dec    edi
  423802:	in     eax,dx
  423803:	ss (bad) 
  423805:	fwait
  423806:	out    dx,al
  423807:	(bad)  
  423809:	xor    eax,0x4b03cceb
  42380e:	out    0x7a,al
  423810:	xchg   esi,eax
  423811:	push   ecx
  423812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423814:	je     0x4237a7
  423816:	clc    
  423817:	sub    dh,bl
  423819:	jnp    0x423890
  42381b:	xchg   esp,eax
  42381c:	mov    al,0xd4
  42381e:	add    cl,BYTE PTR [eax*1-0x39904bf6]
  423825:	sbb    DWORD PTR [ecx+0x50],edi
  423828:	ds mov ecx,0xa6508f45
  42382e:	pop    ebx
  42382f:	ret    
  423830:	into   
  423831:	add    al,0x49
  423833:	sbb    ecx,DWORD PTR [ebx]
  423835:	aam    0xf0
  423837:	popa   
  423838:	and    BYTE PTR [ebp-0x7c],ch
  42383b:	cwde   
  42383c:	fcmovnbe st,st(0)
  42383e:	push   ebp
  42383f:	pop    eax
  423840:	xchg   esp,eax
  423841:	lahf   
  423842:	cmc    
  423843:	repnz add BYTE PTR [esi+0x4bd4e191],0x9
  42384b:	jb     0x42380f
  42384d:	push   edi
  42384e:	in     eax,0x48
  423850:	cmp    eax,esi
  423852:	addr16 loopne 0x423891
  423855:	std    
  423856:	xchg   esp,eax
  423857:	add    eax,0x76c95aab
  42385c:	clc    
  42385d:	or     al,0x83
  42385f:	pop    ecx
  423860:	pop    edx
  423861:	push   0x47
  423863:	lods   eax,DWORD PTR ds:[esi]
  423864:	cs cmp ebx,edx
  423867:	and    al,0xb2
  423869:	push   cs
  42386a:	cmp    ecx,eax
  42386c:	push   esi
  42386d:	fiadd  WORD PTR [ebp-0x3]
  423870:	and    BYTE PTR [eax+edx*4-0x59],bh
  423874:	dec    ebx
  423875:	dec    edx
  423876:	in     al,dx
  423877:	mov    ebp,0x7008d40a
  42387c:	pop    ds
  42387d:	int    0x37
  42387f:	or     DWORD PTR [ebx-0x7b7da507],edi
  423885:	or     eax,0x11fc6ad4
  42388a:	cli    
  42388b:	cmc    
  42388c:	retf   0x2aeb
  42388f:	sahf   
  423890:	pushf  
  423891:	mov    bl,0x93
  423893:	mov    ecx,0xcea08a88
  423898:	or     DWORD PTR [eax+0x11e061c6],0xffffffe2
  42389f:	add    ebp,ecx
  4238a1:	xor    DWORD PTR [eax+edi*2],edx
  4238a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238a5:	test   BYTE PTR [eax-0x2a],0xdd
  4238a9:	icebp  
  4238aa:	ds mov eax,0xeddf4c97
  4238b0:	lahf   
  4238b1:	or     al,BYTE PTR [edi]
  4238b3:	xor    eax,0x8cf18265
  4238b8:	in     al,0x48
  4238ba:	jmp    0x423903
  4238bc:	repnz aas 
  4238be:	add    al,0xd3
  4238c0:	(bad)  
  4238c1:	sub    ebp,ebx
  4238c3:	adc    BYTE PTR [esi+ebx*8+0xe5ebb0c],0x3a
  4238cb:	icebp  
  4238cc:	and    DWORD PTR [edi+0x47e14e1],0x2b
  4238d3:	scas   eax,DWORD PTR es:[edi]
  4238d4:	outs   dx,DWORD PTR ds:[esi]
  4238d5:	jo     0x4238f9
  4238d7:	mov    bl,0x8
  4238d9:	cmp    ecx,DWORD PTR [ebp+0x2a]
  4238dc:	ret    
  4238dd:	cmc    
  4238de:	pop    ebx
  4238df:	(bad)  
  4238e0:	dec    ecx
  4238e1:	sub    esp,DWORD PTR [ecx+0x72]
  4238e4:	jno    0x4238d0
  4238e6:	std    
  4238e7:	std    
  4238e8:	dec    eax
  4238e9:	loop   0x4238bf
  4238eb:	or     eax,ecx
  4238ed:	cmp    al,0xd5
  4238ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238f0:	mov    ecx,0x6cbe7484
  4238f5:	and    DWORD PTR [ecx],edx
  4238f7:	xor    esp,DWORD PTR [eax]
  4238f9:	sbb    BYTE PTR [edi+0x1cbff885],bh
  4238ff:	add    eax,0x185f5e23
  423904:	lods   eax,DWORD PTR ds:[esi]
  423905:	adc    BYTE PTR [ebx-0x2f],ch
  423908:	xchg   edx,eax
  423909:	ror    BYTE PTR [ecx-0x3b],0x13
  42390d:	jne    0x42396b
  42390f:	ret    
  423910:	ins    DWORD PTR es:[edi],dx
  423911:	and    DWORD PTR [ebx],ebx
  423913:	pop    ebx
  423914:	aam    0xac
  423916:	push   ebp
  423917:	jae    0x423997
  423919:	and    edi,DWORD PTR [edi+eax*1]
  42391c:	mov    ds:0x6aef8b32,al
  423921:	or     ebx,0x4121246b
  423927:	add    dh,ch
  423929:	mul    DWORD PTR [edx+0x45b485b6]
  42392f:	pop    edi
  423930:	fwait
  423931:	int    0xcf
  423933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423934:	fwait
  423935:	mov    al,al
  423937:	cdq    
  423938:	hlt    
  423939:	sbb    BYTE PTR [ebp-0x4181a860],dl
  42393f:	cld    
  423940:	cld    
  423941:	jmp    0x59b9:0xb10eaf1a
  423948:	ret    
  423949:	ret    0xa472
  42394c:	ja     0x4238ed
  42394e:	scas   al,BYTE PTR es:[edi]
  42394f:	mov    esp,ds
  423951:	inc    eax
  423952:	(bad)  
  423953:	in     al,dx
  423954:	enter  0xf375,0xe0
  423958:	icebp  
  423959:	jmp    0x617ed4ef
  42395e:	xor    DWORD PTR cs:[ebp-0x75],ebp
  423962:	pop    ss
  423963:	push   ebx
  423964:	(bad)  
  423965:	rcl    DWORD PTR [eax+0x13],1
  423968:	ins    DWORD PTR es:[edi],dx
  423969:	in     eax,dx
  42396a:	cmp    eax,0x437615ef
  42396f:	dec    esp
  423970:	and    BYTE PTR [esi-0xa8eb262],0x76
  423977:	xchg   ecx,eax
  423978:	fist   WORD PTR [ebp+0x3fe6411e]
  42397e:	pop    esi
  42397f:	repnz inc ebx
  423981:	rcl    BYTE PTR [edx],cl
  423983:	lock pop eax
  423985:	addr16 mov dh,0x17
  423988:	dec    esp
  423989:	and    cl,cl
  42398b:	fisubr WORD PTR [ebx+0x3771a6ef]
  423991:	jne    0x423913
  423993:	fldcw  WORD PTR [eax+0x59]
  423996:	xor    edi,DWORD PTR [ecx+0x30cf4e3a]
  42399c:	cmc    
  42399d:	ror    BYTE PTR [esi-0x27],1
  4239a0:	in     eax,dx
  4239a1:	repz js 0x423980
  4239a4:	std    
  4239a5:	imul   eax,DWORD PTR [edx+esi*4-0x55],0xffffff8a
  4239aa:	or     bl,bh
  4239ac:	jge    0x4239ce
  4239ae:	push   0xfffffff9
  4239b0:	mov    ch,0x35
  4239b2:	dec    esi
  4239b3:	ja     0x4239fb
  4239b5:	mov    edi,0xb9876aa8
  4239ba:	clc    
  4239bb:	stos   BYTE PTR es:[edi],al
  4239bc:	pop    ss
  4239bd:	in     al,dx
  4239be:	xlat   BYTE PTR ds:[ebx]
  4239bf:	jl     0x4239a5
  4239c1:	iret   
  4239c2:	push   esp
  4239c3:	mov    bl,0x20
  4239c5:	test   eax,0x4bffc7ba
  4239ca:	enter  0xbb4d,0xa4
  4239ce:	(bad)
  4239d2:	xchg   esp,eax
  4239d3:	xor    eax,0x81c5e8d7
  4239d8:	sub    eax,edi
  4239da:	mov    eax,DWORD PTR [esi]
  4239dc:	xor    edx,ebx
  4239de:	stos   BYTE PTR es:[edi],al
  4239df:	mov    dl,0x64
  4239e1:	inc    DWORD PTR [edx]
  4239e3:	sub    al,0xbc
  4239e5:	push   esp
  4239e6:	and    DWORD PTR [esp+eiz*2-0x71],esp
  4239ea:	xlat   BYTE PTR ds:[ebx]
  4239eb:	dec    ebx
  4239ec:	popf   
  4239ed:	lock sbb bh,BYTE PTR [esi]
  4239f0:	enter  0xfab5,0x19
  4239f4:	imul   edi,DWORD PTR [esi+0x67],0x3a
  4239f8:	and    al,0x18
  4239fa:	sar    BYTE PTR [eax],cl
  4239fc:	shl    DWORD PTR [eax+ecx*1-0x6a],cl
  423a00:	(bad)  
  423a01:	dec    ebp
  423a02:	sbb    eax,0x3e5a2d8e
  423a07:	jl     0x4239e2
  423a09:	add    DWORD PTR [edi+0x54900a49],0x4e982dc9
  423a13:	xor    al,0xce
  423a15:	sti    
  423a16:	pop    edx
  423a17:	dec    eax
  423a18:	xchg   BYTE PTR [ecx+edi*1-0x6eea5caa],dl
  423a1f:	leave  
  423a20:	mov    edi,0xd1e7a01c
  423a25:	add    dh,BYTE PTR ds:[esi-0x6ed091d7]
  423a2c:	pop    edx
  423a2d:	enter  0x13a4,0xfd
  423a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a32:	iret   
  423a33:	fistp  DWORD PTR [edx-0x2a]
  423a36:	xor    ebx,DWORD PTR [edi+0x4b]
  423a39:	mov    ecx,0xe77ea4cd
  423a3e:	out    dx,eax
  423a3f:	or     dl,ah
  423a41:	clc    
  423a42:	bound  eax,QWORD PTR [ebp-0x3b]
  423a45:	fbld   TBYTE PTR [eax-0x58ce5ceb]
  423a4b:	inc    eax
  423a4c:	outs   dx,DWORD PTR ds:[esi]
  423a4d:	mov    dl,0x71
  423a4f:	test   esi,ecx
  423a51:	pop    eax
  423a52:	xor    esi,DWORD PTR [esi]
  423a54:	(bad)  
  423a55:	mov    al,0xb5
  423a57:	mov    eax,ds:0x44f03e4f
  423a5c:	mov    ds:0x17252cd9,eax
  423a61:	add    DWORD PTR [ecx-0x5eb9a857],0xb9feed89
  423a6b:	pop    ds
  423a6c:	add    al,0x83
  423a6e:	addr16 pop ecx
  423a70:	jp     0x423a48
  423a72:	jle    0x423aee
  423a74:	aaa    
  423a75:	sub    eax,0x27271a5b
  423a7a:	or     eax,0x3009997c
  423a7f:	cmp    BYTE PTR [ebx+ecx*2+0x5fae7ac0],dl
  423a86:	push   0x97c2c483
  423a8b:	shl    DWORD PTR [edx+0x788b6ca5],1
  423a91:	cmp    BYTE PTR [ebp+0x44625a34],bh
  423a97:	neg    DWORD PTR [ecx+0x48f6ea37]
  423a9d:	pop    ss
  423a9e:	mov    bl,0xb3
  423aa0:	xor    ah,0xf7
  423aa3:	call   0x1718:0xdf181997
  423aaa:	cmp    al,0x0
  423aac:	adc    DWORD PTR es:[ebp-0x80],eax
  423ab0:	std    
  423ab1:	cwde   
  423ab2:	pusha  
  423ab3:	mov    eax,ds:0x252801b6
  423ab8:	mov    ebp,0x97172010
  423abd:	in     al,dx
  423abe:	sub    DWORD PTR [edx+eax*8],ebp
  423ac1:	hlt    
  423ac2:	repnz xchg edx,eax
  423ac4:	mov    eax,ds:0x2e37e5f7
  423ac9:	(bad)  
  423aca:	pusha  
  423acb:	daa    
  423acc:	sub    DWORD PTR [esi+0x1cc79a7],ebp
  423ad2:	jb     0x423b30
  423ad4:	and    dl,ah
  423ad6:	jecxz  0x423aab
  423ad8:	or     al,0x44
  423ada:	je     0x423ae7
  423adc:	jbe    0x423a62
  423ade:	adc    BYTE PTR [edx-0x67],ah
  423ae1:	add    eax,0x729ea8f3
  423ae6:	sbb    DWORD PTR [eax+0x7a],esp
  423ae9:	pop    ds
  423aea:	lds    edx,FWORD PTR [eax+0x4c]
  423aed:	sub    BYTE PTR [edx+0x57cc377b],dh
  423af3:	sahf   
  423af4:	cdq    
  423af5:	mov    ecx,0xf02ea230
  423afa:	xchg   BYTE PTR [ecx+ebp*2-0x1],cl
  423afe:	mov    gs,WORD PTR [ebx-0x1f]
  423b01:	fsubr  DWORD PTR [esi-0x1e2d5b5d]
  423b07:	sbb    eax,0x1eb5ab9f
  423b0c:	rol    BYTE PTR [ecx-0x17],cl
  423b0f:	push   edi
  423b10:	icebp  
  423b11:	push   esi
  423b12:	jge    0x423b11
  423b14:	mov    ds:0xc3f90c4d,al
  423b19:	mov    esi,0x88810cb
  423b1e:	mov    edi,0x825b7633
  423b23:	imul   eax,DWORD PTR [ebx+0x70],0x3ae321ec
  423b2a:	aaa    
  423b2b:	xor    al,BYTE PTR [edi+0x1f]
  423b2e:	fdivr  QWORD PTR [edi]
  423b30:	sbb    BYTE PTR [esi],al
  423b32:	into   
  423b33:	imul   ebx,DWORD PTR [edi-0x126dd707],0xd62fb1b3
  423b3d:	jecxz  0x423b8e
  423b3f:	pushf  
  423b40:	jp     0x423ba1
  423b42:	and    ch,dh
  423b44:	cmp    al,0xe8
  423b46:	and    DWORD PTR [ebx-0x78],0xa33fc565
  423b4d:	pusha  
  423b4e:	xchg   ecx,eax
  423b4f:	(bad)  
  423b50:	mov    ch,0x27
  423b52:	(bad)  
  423b53:	dec    ebp
  423b54:	dec    ebp
  423b55:	inc    edx
  423b56:	retf   0x99c2
  423b59:	mov    ds:0xfee5cb8b,eax
  423b5e:	enter  0xe3c2,0x4d
  423b62:	pop    ds
  423b63:	ret    0x26fd
  423b66:	mov    esi,0xa56ca25b
  423b6b:	sub    eax,0x984be246
  423b70:	push   esi
  423b71:	inc    eax
  423b72:	sbb    al,0x29
  423b74:	scas   al,BYTE PTR es:[edi]
  423b75:	mov    ebx,0xd3fd3233
  423b7a:	mov    edi,0xcc202efa
  423b7f:	mov    ds:0xb49f8164,al
  423b84:	sti    
  423b85:	fwait
  423b86:	push   0xd8477910
  423b8b:	mov    ah,BYTE PTR [edi-0x5f5602a5]
  423b91:	mov    ds:0xc74344f1,al
  423b96:	and    al,0x6f
  423b98:	stc    
  423b99:	out    dx,al
  423b9a:	adc    DWORD PTR [esi],esp
  423b9c:	mov    ecx,0x100141d9
  423ba1:	sbb    bh,BYTE PTR [ecx+0x6caaf866]
  423ba7:	push   eax
  423ba8:	test   eax,0x6c4057b3
  423bad:	shr    DWORD PTR [ecx-0x6c],cl
  423bb0:	test   al,0xc9
  423bb2:	sbb    esp,DWORD PTR [ebp-0x62f7891b]
  423bb8:	test   eax,0x38842342
  423bbd:	mul    ebp
  423bbf:	or     al,0x5
  423bc1:	pop    esi
  423bc2:	jecxz  0x423b5c
  423bc4:	rol    ah,0xe3
  423bc7:	cmp    ecx,eax
  423bc9:	nop
  423bca:	addr16 adc ah,al
  423bcd:	lahf   
  423bce:	xor    eax,0x874d8ee7
  423bd3:	addr16 xchg dh,dh
  423bd6:	mov    al,0x9c
  423bd8:	mov    esp,0x82f828df
  423bdd:	clc    
  423bde:	ins    DWORD PTR es:[edi],dx
  423bdf:	pop    edi
  423be0:	dec    ebx
  423be1:	scas   eax,DWORD PTR es:[edi]
  423be2:	sub    al,al
  423be4:	(bad)  
  423be5:	xchg   ebp,eax
  423be6:	dec    esp
  423be7:	xor    esp,ebp
  423be9:	das    
  423bea:	pop    ss
  423beb:	jg     0x423ba4
  423bed:	xchg   esp,eax
  423bee:	cmp    al,0xd9
  423bf0:	(bad)  
  423bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf2:	fs xor eax,0x148d0bec
  423bf8:	pop    ss
  423bf9:	into   
  423bfa:	add    eax,0x9bdcfe3f
  423bff:	fild   WORD PTR [edx]
  423c01:	cdq    
  423c02:	out    dx,eax
  423c03:	shl    BYTE PTR [ebx+ebx*4+0x597ce8aa],0x41
  423c0b:	(bad)  
  423c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c0d:	cmp    al,0x4d
  423c10:	pop    edx
  423c11:	cmp    BYTE PTR [eax-0x7ea4f9de],dl
  423c17:	xchg   ecx,eax
  423c18:	adc    eax,DWORD PTR [ecx+0x5a673fdf]
  423c1e:	cli    
  423c1f:	push   ecx
  423c20:	bound  ecx,QWORD PTR [esi+0x34]
  423c23:	push   esi
  423c24:	mov    BYTE PTR [ebp+0x56f45736],cl
  423c2a:	mov    cl,0x41
  423c2c:	adc    ah,BYTE PTR [ebp-0x78a8116]
  423c32:	fimul  DWORD PTR [esi+ecx*4-0x1e]
  423c36:	inc    esp
  423c37:	dec    esp
  423c38:	jo     0x423c6b
  423c3a:	or     DWORD PTR [eax],0xd06c340a
  423c40:	sbb    BYTE PTR [ecx+0x157610e9],bh
  423c46:	rol    BYTE PTR [esi+0x6a],cl
  423c49:	push   eax
  423c4a:	xchg   DWORD PTR [eax],edi
  423c4c:	iret   
  423c4d:	arpl   di,dx
  423c4f:	jg     0x423c01
  423c51:	adc    DWORD PTR [eax],edi
  423c53:	mov    ds:0xadb50467,al
  423c58:	loop   0x423ca6
  423c5a:	add    al,0x20
  423c5c:	out    dx,eax
  423c5d:	iret   
  423c5e:	sub    al,0x1d
  423c60:	jge    0x423cbf
  423c62:	ins    DWORD PTR es:[edi],dx
  423c63:	or     edx,esi
  423c65:	gs push ecx
  423c67:	(bad)  
  423c68:	int    0x74
  423c6a:	into   
  423c6b:	movntps XMMWORD PTR [esi],xmm6
  423c6e:	xlat   BYTE PTR ds:[ebx]
  423c6f:	ins    BYTE PTR es:[edi],dx
  423c70:	mov    al,0x7c
  423c72:	ss jecxz 0x423cf3
  423c75:	adc    esi,esi
  423c77:	sub    dh,BYTE PTR [eax-0x54b46268]
  423c7d:	sbb    al,0x43
  423c7f:	aam    0xc7
  423c81:	mov    eax,0xbbc2d9b3
  423c86:	pop    edi
  423c87:	(bad)  
  423c88:	or     DWORD PTR [ebp+eiz*1-0x55],ecx
  423c8c:	add    DWORD PTR [ebx+0x7e],0xffffffc6
  423c90:	and    ecx,DWORD PTR [ebx]
  423c92:	xor    ch,ch
  423c94:	sub    ecx,edx
  423c96:	ss xchg esp,eax
  423c98:	mov    ds:0x264c004a,al
  423c9d:	sub    ah,BYTE PTR [esi]
  423c9f:	jmp    0x57e08f0d
  423ca4:	imul   esp,DWORD PTR [esi+ecx*4],0x6
  423ca8:	xchg   esi,eax
  423ca9:	pop    edi
  423caa:	(bad)  
  423cab:	clc    
  423cac:	daa    
  423cad:	(bad)  
  423cae:	xchg   ecx,eax
  423caf:	cmc    
  423cb0:	aas    
  423cb1:	aas    
  423cb2:	sub    edx,DWORD PTR [edx-0x214a1d7a]
  423cb8:	stos   DWORD PTR es:[edi],eax
  423cb9:	pop    esi
  423cba:	dec    eax
  423cbb:	mul    ebp
  423cbd:	jmp    0xe37cc590
  423cc2:	mov    eax,ds:0x3f1581e6
  423cc7:	pop    eax
  423cc8:	stc    
  423cc9:	lods   eax,DWORD PTR ds:[esi]
  423cca:	jecxz  0x423cb9
  423ccc:	mov    ds:0x4a75d110,al
  423cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd2:	sub    cl,BYTE PTR [eax+0x2736aeb1]
  423cd8:	shl    DWORD PTR [eax-0x327f3b8f],1
  423cde:	jl     0x423d3b
  423ce0:	call   DWORD PTR [eax-0x625df7c2]
  423ce6:	inc    BYTE PTR [edi-0x2248fe77]
  423cec:	push   esp
  423ced:	adc    BYTE PTR [eax+0x6e],bl
  423cf0:	and    BYTE PTR ds:0x29e59cb1,0x33
  423cf7:	fld    TBYTE PTR [ebx]
  423cf9:	aas    
  423cfa:	push   es
  423cfb:	ret    0x5e5b
  423cfe:	or     DWORD PTR [eax+0x4c79c7da],esp
  423d04:	scas   al,BYTE PTR es:[edi]
  423d05:	fidivr WORD PTR [eax+0x5749535a]
  423d0b:	adc    ebx,DWORD PTR [ecx]
  423d0d:	xchg   edx,eax
  423d0e:	scas   al,BYTE PTR es:[edi]
  423d0f:	dec    ecx
  423d10:	xor    al,BYTE PTR [ebx+0x5f]
  423d13:	cmp    eax,DWORD PTR [esi+0x655f5802]
  423d19:	lods   al,BYTE PTR ds:[esi]
  423d1a:	retf   0x6975
  423d1d:	(bad)  
  423d1e:	stc    
  423d1f:	mov    eax,ds:0xac945083
  423d24:	mov    al,0x42
  423d26:	(bad)  
  423d27:	pop    eax
  423d28:	mov    eax,ds:0xe87a26be
  423d2d:	dec    ebp
  423d2e:	push   edx
  423d2f:	jmp    0xd46ce2be
  423d34:	retf   0x3d92
  423d37:	into   
  423d38:	stc    
  423d39:	sub    DWORD PTR gs:[ecx],edx
  423d3c:	stc    
  423d3d:	popf   
  423d3e:	jbe    0x423d58
  423d40:	ret    0xe658
  423d43:	fxam   
  423d45:	and    esp,ecx
  423d47:	sbb    ah,BYTE PTR ds:0xfb2aece2
  423d4d:	out    dx,al
  423d4e:	mov    ebp,0x910e8949
  423d53:	adc    BYTE PTR [esi+0x42cd6d73],al
  423d59:	leave  
  423d5a:	test   eax,0x5caa0142
  423d5f:	jne    0x423d46
  423d61:	out    dx,eax
  423d62:	cld    
  423d63:	idiv   DWORD PTR [ecx]
  423d65:	xchg   ecx,eax
  423d66:	out    0x1a,eax
  423d68:	and    al,0x2f
  423d6a:	pop    edi
  423d6b:	mov    edx,0x1bb4e544
  423d70:	imul   esp,DWORD PTR [ebp-0x11],0xdd440a95
  423d77:	cli    
  423d78:	fwait
  423d79:	xchg   al,bl
  423d7b:	cbw    
  423d7d:	xchg   DWORD PTR [edx],ecx
  423d7f:	push   edx
  423d80:	ins    BYTE PTR es:[edi],dx
  423d81:	jle    0x423db3
  423d83:	sbb    eax,0x99173229
  423d88:	outs   dx,DWORD PTR ds:[esi]
  423d89:	pop    ebp
  423d8a:	xchg   esi,eax
  423d8b:	mov    ds:0x8309421a,eax
  423d90:	mov    ch,0xbb
  423d92:	inc    ebp
  423d93:	rcl    BYTE PTR [ebx-0x46c55cfc],1
  423d99:	sub    ebp,DWORD PTR [eax+0x43fa0875]
  423d9f:	lahf   
  423da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423da1:	push   esi
  423da2:	out    0xf,al
  423da4:	scas   eax,DWORD PTR es:[edi]
  423da5:	ror    DWORD PTR [ecx+0x558ba855],cl
  423dab:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  423db1:	(bad)  
  423db3:	add    BYTE PTR fs:[ebx],cl
  423db6:	ror    DWORD PTR [ecx+0x558bac55],cl
  423dbc:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  423dc2:	xor    edx,ebx
  423dc4:	mov    DWORD PTR [ebp-0x50],edx
  423dc7:	mov    edx,DWORD PTR [ebp+0x8]
  423dca:	mov    ebx,DWORD PTR [ebp-0x4c]
  423dcd:	add    edx,edi
  423dcf:	and    edx,ebx
  423dd1:	mov    DWORD PTR [ebp-0x4c],edx
  423dd4:	mov    edx,DWORD PTR [ebp+0x8]
  423dd7:	mov    ebx,DWORD PTR [ebp-0x48]
  423dda:	lea    edx,[ebx+edx*1+0x241fc1f]
  423de1:	mov    DWORD PTR [ebp-0x48],edx
  423de4:	mov    edx,DWORD PTR [ebp+0x8]
  423de7:	mov    ebx,0xfa5e15e2
  423dec:	sub    ebx,edx
  423dee:	add    ebx,DWORD PTR [ebp-0x44]
  423df1:	mov    DWORD PTR [ebp-0x44],ebx
  423df4:	mov    edx,DWORD PTR [ebp+0x8]
  423df7:	xor    edx,eax
  423df9:	add    edx,esi
  423dfb:	jne    0x4219fb
  423e01:	jmp    0x423e8f
  423e06:	mov    edx,DWORD PTR [ebp+0x8]
  423e09:	mov    ebx,DWORD PTR [ebp-0x8]
  423e0c:	xor    edx,eax
  423e0e:	xor    ebx,eax
  423e10:	sub    edx,ebx
  423e12:	sub    edx,esi
  423e14:	xor    edx,eax
  423e16:	mov    DWORD PTR [ebp+0x8],edx
  423e19:	mov    edx,DWORD PTR [ebp+0x8]
  423e1c:	mov    ebx,DWORD PTR [ebp-0x58]
  423e1f:	add    edx,0x5708f8
  423e25:	imul   edx,ebx
  423e28:	mov    DWORD PTR [ebp-0x58],edx
  423e2b:	mov    edx,DWORD PTR [ebp+0x8]
  423e2e:	mov    ebx,DWORD PTR [ebp-0x54]
  423e31:	add    edx,0x64f8da
  423e37:	or     edx,ebx
  423e39:	mov    DWORD PTR [ebp-0x54],edx
  423e3c:	mov    edx,DWORD PTR [ebp+0x8]
  423e3f:	mov    ebx,DWORD PTR [ebp-0x50]
  423e42:	add    edx,ecx
  423e44:	xor    edx,ebx
  423e46:	mov    DWORD PTR [ebp-0x50],edx
  423e49:	mov    edx,DWORD PTR [ebp+0x8]
  423e4c:	mov    ebx,DWORD PTR [ebp-0x4c]
  423e4f:	add    edx,edi
  423e51:	and    edx,ebx
  423e53:	mov    DWORD PTR [ebp-0x4c],edx
  423e56:	mov    edx,DWORD PTR [ebp+0x8]
  423e59:	mov    ebx,DWORD PTR [ebp-0x48]
  423e5c:	lea    edx,[ebx+edx*1+0x241fc1f]
  423e63:	mov    DWORD PTR [ebp-0x48],edx
  423e66:	mov    edx,DWORD PTR [ebp+0x8]
  423e69:	mov    ebx,0xfa5e15e2
  423e6e:	sub    ebx,edx
  423e70:	add    ebx,DWORD PTR [ebp-0x44]
  423e73:	mov    DWORD PTR [ebp-0x44],ebx
  423e76:	mov    edx,DWORD PTR [ebp+0x8]
  423e79:	xor    edx,eax
  423e7b:	add    edx,esi
  423e7d:	jne    0x423e06
  423e83:	mov    ecx,DWORD PTR [ebp-0x8]
  423e86:	xor    ecx,eax
  423e88:	mov    eax,DWORD PTR [ebp+0x10]
  423e8b:	add    ecx,esi
  423e8d:	mov    DWORD PTR [eax],ecx
  423e8f:	pop    edi
  423e90:	jmp    0x424bca
  423e95:	imul   ecx,DWORD PTR [ebx-0x448b1756],0x58d8b2f
  423e9f:	scas   eax,DWORD PTR es:[edi]
  423ea0:	repnz (bad) 
  423ea2:	and    esp,esi
  423ea4:	sub    al,0xb9
  423ea6:	mov    edi,DWORD PTR [ecx+0x7a]
  423ea9:	push   ebp
  423eaa:	gs jp  0x423f27
  423ead:	dec    esi
  423eae:	and    ch,BYTE PTR [esi]
  423eb0:	push   es
  423eb1:	daa    
  423eb2:	icebp  
  423eb3:	cmp    DWORD PTR [edx],ecx
  423eb5:	fwait
  423eb6:	xor    BYTE PTR [edi+edx*8-0x4c771d57],dh
  423ebd:	bound  esp,QWORD PTR [edi]
  423ebf:	push   eax
  423ec0:	pusha  
  423ec1:	ins    DWORD PTR es:[edi],dx
  423ec2:	push   ds
  423ec3:	pop    ebp
  423ec4:	cld    
  423ec5:	fbld   TBYTE PTR [ecx]
  423ec7:	xchg   edx,eax
  423ec8:	sub    DWORD PTR [ebx-0x5],esp
  423ecb:	mov    dl,0x97
  423ecd:	arpl   bp,ax
  423ecf:	mov    dl,0xa0
  423ed1:	pusha  
  423ed2:	adc    esi,DWORD PTR [esi-0x5fb23a57]
  423ed8:	and    eax,0x9581b6fc
  423edd:	out    dx,al
  423ede:	push   esp
  423edf:	push   esi
  423ee0:	daa    
  423ee1:	jns    0x423e72
  423ee3:	dec    edi
  423ee4:	pop    esp
  423ee5:	imul   ebp,esi,0x2d
  423ee8:	js     0x423e8b
  423eea:	push   ebx
  423eeb:	clc    
  423eec:	mov    ds:0xe117db8d,eax
  423ef1:	and    ch,BYTE PTR [ebx+eax*8-0x2c]
  423ef5:	add    al,BYTE PTR [eax+0x3c7f64b0]
  423efb:	fwait
  423efc:	loop   0x423f03
  423efe:	rcr    BYTE PTR [eax+0x7a4113a1],0xc6
  423f05:	sbb    al,0x7f
  423f07:	sub    DWORD PTR [edx+0x74],0x23
  423f0b:	pop    ebp
  423f0c:	fcom   QWORD PTR [edi]
  423f0e:	mov    bl,0xe
  423f10:	sbb    dl,BYTE PTR [esi]
  423f12:	or     ah,ch
  423f14:	cld    
  423f15:	dec    ebp
  423f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f17:	sub    esp,edx
  423f19:	adc    ecx,DWORD PTR [edx-0x31]
  423f1c:	ret    0xb91e
  423f1f:	mov    cl,0x5d
  423f21:	daa    
  423f22:	mov    edx,0x81c59b12
  423f27:	sahf   
  423f28:	mov    al,ds:0x223a4bd8
  423f2d:	add    DWORD PTR [eax],0xad26ff6f
  423f33:	or     al,0x16
  423f35:	ret    
  423f36:	fwait
  423f37:	push   edx
  423f38:	stc    
  423f39:	outs   dx,BYTE PTR ds:[esi]
  423f3a:	xchg   ebx,eax
  423f3b:	ds gs pop es
  423f3e:	mov    bl,0xb6
  423f40:	mov    ah,0xfe
  423f42:	mov    eax,DWORD PTR [edi]
  423f44:	sbb    ebp,DWORD PTR [esi+0x7c7f3554]
  423f4a:	out    dx,eax
  423f4b:	fadd   QWORD PTR [edi+0x2857dfbb]
  423f51:	inc    edi
  423f52:	inc    esi
  423f53:	cmp    bl,BYTE PTR [edx]
  423f55:	mov    ds:0x283a8729,al
  423f5a:	mov    DWORD PTR [ebp+eiz*4-0x113e1108],esi
  423f61:	push   0xc7044413
  423f66:	jmp    0x1264508f
  423f6b:	lods   eax,DWORD PTR ds:[esi]
  423f6c:	and    BYTE PTR [edi],ch
  423f6e:	gs push ds
  423f70:	inc    ecx
  423f71:	and    eax,0x3bae430e
  423f76:	push   ss
  423f77:	cdq    
  423f78:	adc    al,0x4b
  423f7a:	jo     0x423f41
  423f7c:	mov    eax,0x7fbba2c3
  423f81:	sar    edi,1
  423f83:	fisttp DWORD PTR [ecx+esi*1+0x9ef7fba]
  423f8a:	leave  
  423f8b:	or     bh,ch
  423f8d:	stos   BYTE PTR es:[edi],al
  423f8e:	jae    0x423f79
  423f90:	cld    
  423f91:	sub    cl,BYTE PTR [ecx-0x1aeae8c6]
  423f97:	bound  edx,QWORD PTR [esi]
  423f99:	in     eax,dx
  423f9a:	sub    al,0x68
  423f9c:	pop    ebx
  423f9d:	mov    ?,WORD PTR [esi-0x5581ae4]
  423fa3:	cmp    DWORD PTR [eax-0xe],esp
  423fa6:	inc    ecx
  423fa7:	add    ch,ch
  423fa9:	sbb    esp,ebp
  423fab:	jns    0x423f87
  423fad:	call   0x79c15591
  423fb2:	jmp    0x423f5b
  423fb4:	xor    ecx,DWORD PTR [edx+0x52148e33]
  423fba:	lock (bad) 
  423fbc:	jo     0x423fb4
  423fbe:	call   0xef2d:0x582989d
  423fc5:	xor    BYTE PTR [edi+0x7d],dl
  423fc8:	repnz aad 0x3c
  423fcb:	adc    eax,0x4a12d880
  423fd0:	push   edi
  423fd1:	mov    esi,0xabdb0e06
  423fd6:	jno    0x423fd9
  423fd8:	xchg   esp,eax
  423fd9:	mov    cl,0x19
  423fdb:	push   ebp
  423fdc:	jbe    0x423f62
  423fde:	call   0x2757:0x455c9652
  423fe5:	inc    edi
  423fe6:	pop    eax
  423fe7:	test   eax,0xb21f7a6c
  423fec:	or     esp,edx
  423fee:	add    BYTE PTR ds:0xb9c654c3,ch
  423ff4:	xchg   edi,eax
  423ff5:	mov    ebx,0xf730425f
  423ffa:	jge    0x424070
  423ffc:	repz and al,0x6f
  423fff:	fidivr DWORD PTR [ebp+0x3d]
  424002:	pop    ecx
  424003:	cmp    edx,esp
  424005:	mov    ds:0x5b533cb6,al
  42400a:	or     al,0xce
  42400c:	and    DWORD PTR [eax+0x2f],eax
  42400f:	pop    eax
  424010:	jmp    0x5d658557
  424015:	retf   
  424016:	sbb    BYTE PTR [eax-0x6f],dh
  424019:	push   esi
  42401a:	jmp    0x3885c6ae
  42401f:	dec    esp
  424020:	sar    BYTE PTR [eax],cl
  424022:	ins    DWORD PTR es:[edi],dx
  424023:	dec    ebp
  424024:	lahf   
  424025:	scas   eax,DWORD PTR es:[edi]
  424026:	mov    ebx,0x36ddef90
  42402b:	or     ebx,esp
  42402d:	inc    eax
  42402e:	sbb    DWORD PTR [esi],ebp
  424030:	mov    eax,ds:0xe63f632c
  424035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424036:	repnz pop ds
  424038:	test   BYTE PTR [ecx+edi*1-0x4b],0x54
  42403d:	adc    BYTE PTR [ebx],0xcf
  424040:	popa   
  424041:	jb     0x424029
  424043:	jb     0x424002
  424045:	int3   
  424046:	adc    BYTE PTR [edx-0x28],0xdd
  42404a:	inc    ecx
  42404b:	mov    ah,BYTE PTR [ecx]
  42404d:	xor    al,0x14
  42404f:	cmp    DWORD PTR [eax+esi*2+0x21],esp
  424053:	and    DWORD PTR [ecx-0x6],ebp
  424056:	pop    ebx
  424057:	inc    edi
  424058:	pop    edx
  424059:	pop    ecx
  42405a:	sbb    dh,BYTE PTR [esp+eax*1]
  42405d:	lds    esi,FWORD PTR [edx+edi*2+0x5eeca30c]
  424064:	cmp    al,0xf5
  424066:	sbb    cl,BYTE PTR [ebx]
  424068:	push   ecx
  424069:	add    eax,ecx
  42406b:	pop    edx
  42406c:	mov    esi,DWORD PTR ds:0x23a014e5
  424072:	sub    eax,0x3404ac12
  424077:	lock jmp 0xbfa:0xff8ffbd1
  42407f:	sbb    bl,bh
  424081:	inc    edi
  424082:	xchg   ebx,eax
  424083:	jmp    0x4240db
  424085:	dec    ch
  424087:	xchg   esi,eax
  424088:	xor    dl,BYTE PTR [edx-0x50c6bcca]
  42408e:	jae    0x42401a
  424090:	(bad)  
  424091:	shl    esi,cl
  424093:	and    esi,DWORD PTR [eax+0x105cc5f0]
  424099:	push   ss
  42409a:	push   ebp
  42409b:	push   edi
  42409c:	out    dx,al
  42409d:	cmp    bl,BYTE PTR [esi+0x32]
  4240a0:	fwait
  4240a1:	adc    al,0xef
  4240a3:	stos   DWORD PTR es:[edi],eax
  4240a4:	add    eax,0x90a22797
  4240a9:	outs   dx,DWORD PTR ds:[esi]
  4240aa:	int    0xaa
  4240ac:	mov    esp,0xbe210897
  4240b1:	ficom  DWORD PTR [edi]
  4240b3:	ret    
  4240b4:	out    dx,al
  4240b5:	aad    0x79
  4240b7:	lods   eax,DWORD PTR ds:[esi]
  4240b8:	ficom  WORD PTR [eax]
  4240ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240bb:	mov    ebp,0x537eb75c
  4240c0:	mov    bl,0xb0
  4240c2:	mov    ch,0xc5
  4240c4:	xor    DWORD PTR [eax],ebp
  4240c6:	ud1    esi,ebp
  4240c9:	cmp    eax,0x1bb68b94
  4240ce:	ss xor eax,0x10d7311a
  4240d4:	add    DWORD PTR [ebx+eiz*4-0x3d29d41f],0xffffffee
  4240dc:	js     0x424146
  4240de:	retf   
  4240df:	adc    DWORD PTR [ebx+0x3a],esp
  4240e2:	adc    bl,dl
  4240e4:	cmp    al,0xd5
  4240e6:	jnp    0x424112
  4240e8:	mov    edx,esp
  4240ea:	or     BYTE PTR [ebp-0x6acddf53],0x8a
  4240f1:	push   ebp
  4240f2:	test   BYTE PTR [esi],cl
  4240f4:	jmp    0xc03b3215
  4240f9:	std    
  4240fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240fb:	xchg   BYTE PTR [eax],ch
  4240fd:	xchg   esi,eax
  4240fe:	hlt    
  4240ff:	mov    cl,0x5a
  424101:	fcomp  QWORD PTR [ecx-0xa]
  424104:	sbb    BYTE PTR [ebp-0xf10481e],al
  42410a:	mov    edx,0x28853eb6
  42410f:	adc    DWORD PTR [edx+0x2d],0x32
  424113:	sbb    DWORD PTR [esi+0x67],edi
  424116:	cld    
  424117:	pop    es
  424118:	mov    esp,0x41ef764f
  42411d:	mov    esi,cs
  42411f:	out    0x6b,al
  424121:	retf   0x1374
  424124:	stos   DWORD PTR es:[edi],eax
  424125:	stos   BYTE PTR es:[edi],al
  424126:	inc    ebp
  424127:	jge    0x4241a0
  424129:	pop    ebx
  42412a:	adc    ah,dh
  42412c:	xor    al,0xfb
  42412e:	sbb    eax,ebx
  424130:	push   eax
  424131:	retf   0x3415
  424134:	or     DWORD PTR [eax-0x32],esi
  424137:	mov    edx,DWORD PTR [esi-0x59]
  42413a:	sub    al,0x6a
  42413c:	mov    eax,ds:0xd5fdd0f4
  424141:	comiss xmm4,DWORD PTR [eax+0x5a]
  424145:	sub    edx,DWORD PTR [edi+0x5f90e7bc]
  42414b:	jmp    0x90ec03f2
  424150:	sbb    dl,BYTE PTR [esi-0x79]
  424153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424154:	cmp    BYTE PTR ds:0xacb182ec,cl
  42415a:	cmp    edx,eax
  42415c:	or     cl,BYTE PTR [edx+0x2e4562bb]
  424162:	xchg   DWORD PTR ds:0x3e36aea,esp
  424168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424169:	bound  edi,QWORD PTR [eax+eax*2+0x7d90023f]
  424170:	ret    
  424171:	ret    0x5f0a
  424174:	leave  
  424175:	dec    eax
  424176:	fprem  
  424178:	xchg   esi,eax
  424179:	mov    edx,0x1bc74fc8
  42417e:	mov    ebx,0x86c42510
  424183:	push   ds
  424184:	and    eax,0x6c9b3324
  424189:	in     al,0x7b
  42418b:	xor    eax,esp
  42418d:	xchg   ecx,eax
  42418e:	ss mov ebx,0x1c4e637f
  424194:	xchg   esi,eax
  424195:	jo     0x42412c
  424197:	mov    al,0x60
  424199:	clc    
  42419a:	gs dec ebp
  42419c:	je     0x4241cd
  42419e:	(bad)  
  42419f:	pop    ebp
  4241a0:	mov    WORD PTR [ecx+eiz*2],gs
  4241a3:	mov    ds:0x4508dbca,eax
  4241a8:	es loope 0x42415a
  4241ab:	pop    edx
  4241ac:	inc    esi
  4241ad:	push   edi
  4241ae:	mov    ch,BYTE PTR [ebx+0x56]
  4241b1:	jnp    0x4241d2
  4241b3:	and    eax,0x744e6637
  4241b8:	sub    eax,0xc9c338b0
  4241bd:	and    bh,BYTE PTR [edi]
  4241bf:	lds    eax,FWORD PTR [edi+eax*2]
  4241c2:	rol    BYTE PTR [esi-0x5ab88860],1
  4241c8:	je     0x4241dc
  4241ca:	lea    edx,[eax]
  4241cc:	std    
  4241cd:	mov    DWORD PTR [ecx],esi
  4241cf:	pushf  
  4241d0:	add    al,0x4a
  4241d2:	outs   dx,BYTE PTR ds:[esi]
  4241d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241d4:	call   0x15bb93f
  4241d9:	imul   esp,ebx,0x73
  4241dc:	push   ebp
  4241dd:	sub    bh,dh
  4241df:	lidtd  [eax+0x4bde090b]
  4241e6:	add    edi,eax
  4241e8:	mov    dl,0x79
  4241ea:	icebp  
  4241eb:	std    
  4241ec:	xchg   DWORD PTR [edx+eax*8-0x55],edx
  4241f0:	es in  al,dx
  4241f2:	push   ss
  4241f3:	retf   0x8e9d
  4241f6:	mov    ebp,0x1e0da13
  4241fb:	imul   ebx,DWORD PTR [ecx+0x3ec52bfd],0x6022c296
  424205:	push   edx
  424206:	call   0x5c4dda1
  42420b:	outs   dx,DWORD PTR ds:[esi]
  42420c:	add    eax,0xcd75270b
  424211:	or     eax,0xc888a2e3
  424216:	sahf   
  424217:	add    DWORD PTR [eax],ebp
  424219:	xchg   ebp,eax
  42421a:	mov    al,BYTE PTR [esi]
  42421c:	mov    bl,0xb
  42421e:	jns    0x424247
  424220:	sbb    esi,DWORD PTR [esi+0x77f6e9bd]
  424226:	aam    0x4b
  424228:	call   0x3fe457db
  42422d:	inc    edx
  42422e:	adc    eax,0x748f3f29
  424233:	mov    cl,0x66
  424235:	fild   WORD PTR [esi-0x1949583f]
  42423b:	mov    edx,0xbeea802b
  424240:	ror    ecx,1
  424242:	adc    ebp,DWORD PTR [ecx-0x80]
  424245:	movaps xmm2,XMMWORD PTR [ecx+ebp*2+0x69]
  42424a:	cld    
  42424b:	mov    ebx,0x72c8a601
  424250:	ficomp WORD PTR [ebx+0x579221aa]
  424256:	sbb    eax,0xc1dfdbb8
  42425b:	adc    DWORD PTR [ebp-0x674541ec],esi
  424261:	push   edx
  424262:	ds rcr dh,cl
  424265:	xchg   edx,eax
  424266:	inc    esp
  424267:	in     eax,0x50
  424269:	das    
  42426a:	nop
  42426b:	outs   dx,DWORD PTR ds:[esi]
  42426c:	ds inc esp
  42426e:	xchg   edi,eax
  42426f:	xor    cl,BYTE PTR [eax+0x78bb0dcc]
  424275:	pop    es
  424276:	imul   DWORD PTR [ebp+0x1b7d460e]
  42427c:	push   es
  42427d:	cmp    esi,DWORD PTR [eax+0x7d20a0e8]
  424283:	pop    ebp
  424284:	int    0x70
  424286:	sbb    al,0x74
  424288:	ficomp WORD PTR [eax-0x3e7729e]
  42428e:	push   ebp
  42428f:	push   0x7d
  424291:	mov    ebx,0xb75669f2
  424296:	xor    BYTE PTR [esi],al
  424298:	inc    eax
  424299:	mov    ah,0x9b
  42429b:	les    edx,FWORD PTR [edi+0x64]
  42429e:	adc    al,0x43
  4242a0:	push   eax
  4242a1:	fsubr  QWORD PTR [ebx-0x2bb3f7f5]
  4242a7:	outs   dx,BYTE PTR ds:[esi]
  4242a8:	int3   
  4242a9:	sbb    eax,0xdf3c8988
  4242ae:	sbb    eax,0xfffffffe
  4242b1:	cmp    al,0xa7
  4242b3:	aam    0xd8
  4242b5:	xlat   BYTE PTR ds:[ebx]
  4242b6:	mov    ah,0x77
  4242b8:	cld    
  4242b9:	ins    DWORD PTR es:[edi],dx
  4242ba:	pop    edx
  4242bb:	shl    DWORD PTR cs:[ebx-0x68ca1bf7],0x91
  4242c3:	xlat   BYTE PTR ds:[ebx]
  4242c4:	ins    DWORD PTR es:[edi],dx
  4242c5:	and    ah,BYTE PTR [ebp-0x588040cd]
  4242cb:	jg     0x42432b
  4242cd:	push   cs
  4242ce:	mov    WORD PTR [edi+0xd],fs
  4242d1:	enter  0xa26d,0x74
  4242d5:	sub    al,0xbb
  4242d7:	(bad)  
  4242d8:	rcr    BYTE PTR [esp+ebp*1-0x6f],1
  4242dc:	xchg   esp,eax
  4242dd:	inc    ebp
  4242de:	inc    edx
  4242df:	int3   
  4242e0:	inc    ebx
  4242e1:	dec    ebx
  4242e2:	fadd   QWORD PTR [edx-0x8737ac4]
  4242e8:	or     DWORD PTR [ebx-0x364fc087],esp
  4242ee:	mov    ds:0x9e4a4ad0,eax
  4242f3:	daa    
  4242f4:	mov    ?,esi
  4242f6:	mov    bh,0xc8
  4242f8:	mov    cl,0x48
  4242fa:	repz push edx
  4242fc:	lods   eax,DWORD PTR ds:[esi]
  4242fd:	push   ecx
  4242fe:	ror    BYTE PTR [edx],cl
  424300:	jle    0x424370
  424302:	push   ds
  424303:	test   BYTE PTR [esi],al
  424305:	rcr    bh,1
  424307:	sbb    ebx,0x1b57ae53
  42430d:	or     eax,0x17696afb
  424312:	and    al,BYTE PTR [ecx+0x3e]
  424315:	dec    ebx
  424316:	inc    esp
  424317:	and    esi,DWORD PTR [eax]
  424319:	and    al,BYTE PTR [esi-0x47f35a14]
  42431f:	cmp    BYTE PTR [ebp+ebx*2+0x5d],cl
  424323:	je     0x424315
  424325:	arpl   WORD PTR [edi],ax
  424327:	dec    ecx
  424328:	lahf   
  424329:	sub    eax,0xfdc88e50
  42432e:	jp     0x424317
  424330:	imul   esi,DWORD PTR [ecx],0xffffffd2
  424333:	add    BYTE PTR [eax],dh
  424335:	inc    ebp
  424336:	les    ecx,FWORD PTR [edx-0xe]
  424339:	and    al,0xe6
  42433b:	inc    ebx
  42433c:	imul   ebp,DWORD PTR [edx],0x5fb54133
  424342:	and    DWORD PTR [eax-0x37],edx
  424345:	xchg   esp,eax
  424346:	fisttp QWORD PTR [edi+0x56bc3a46]
  42434c:	arpl   WORD PTR [edx],dx
  42434e:	inc    esi
  42434f:	popf   
  424350:	fwait
  424351:	jg     0x4242f7
  424353:	adc    DWORD PTR fs:[ecx+0x61],edi
  424357:	sahf   
  424358:	cmp    al,BYTE PTR [eax+eax*2-0x4b525404]
  42435f:	and    al,0xcb
  424361:	(bad)  
  424362:	test   BYTE PTR [esi-0x1c3871e2],0x9d
  424369:	xchg   DWORD PTR ss:[edi+esi*4],esi
  42436d:	mov    ecx,DWORD PTR ds:0xf4789e1d
  424373:	ins    DWORD PTR es:[edi],dx
  424374:	icebp  
  424375:	inc    edx
  424376:	pop    ebx
  424377:	(bad)  
  424378:	push   ss
  424379:	pop    ebx
  42437a:	jge    0x424368
  42437c:	les    ecx,FWORD PTR [eax-0x14]
  42437f:	popa   
  424380:	or     eax,0x31eb9037
  424385:	mov    dh,0x16
  424387:	neg    DWORD PTR [ebp+0x1a358efa]
  42438d:	jecxz  0x42438b
  42438f:	aas    
  424390:	mov    esi,0x10865b43
  424395:	dec    DWORD PTR [ebx]
  424397:	clc    
  424398:	add    bl,BYTE PTR [esi+0x682afe9d]
  42439e:	mov    dl,0xc2
  4243a0:	imul   eax,DWORD PTR [eax+0x76],0x4ff6d40c
  4243a7:	test   BYTE PTR [edx],bl
  4243a9:	cmp    al,0x6
  4243ab:	sbb    eax,0xa1a23517
  4243b0:	xchg   esp,eax
  4243b1:	push   ecx
  4243b2:	dec    edi
  4243b3:	popf   
  4243b4:	(bad)  
  4243b5:	jbe    0x4243b3
  4243b7:	push   edi
  4243b8:	cmp    BYTE PTR [edx+0x5eb670f4],ah
  4243be:	sub    eax,0x77f49d8f
  4243c3:	mov    ebp,0x7cfa9f19
  4243c8:	mov    eax,ds:0x361dfe4d
  4243cd:	xor    BYTE PTR [edx],dh
  4243cf:	xchg   esp,eax
  4243d0:	sbb    al,0xa6
  4243d2:	lods   eax,DWORD PTR ds:[esi]
  4243d3:	push   ds
  4243d4:	or     esi,eax
  4243d6:	int3   
  4243d7:	lahf   
  4243d8:	ds xchg edi,eax
  4243da:	sub    eax,eax
  4243dc:	std    
  4243dd:	add    BYTE PTR [esi+0x25],ah
  4243e0:	scas   al,BYTE PTR es:[edi]
  4243e1:	pop    ecx
  4243e2:	and    bh,bl
  4243e4:	push   edx
  4243e5:	dec    edi
  4243e6:	jge    0x42441d
  4243e8:	cmp    bl,dl
  4243ea:	out    0x10,eax
  4243ec:	out    0x26,eax
  4243ee:	test   eax,0x6709e42
  4243f3:	(bad)  
  4243f4:	lods   al,BYTE PTR ds:[esi]
  4243f5:	add    DWORD PTR [esi-0x64ad0e86],edx
  4243fb:	and    eax,eax
  4243fd:	outs   dx,BYTE PTR ds:[esi]
  4243fe:	test   al,bl
  424400:	mov    edx,0x60171c6c
  424405:	xchg   esi,eax
  424406:	test   DWORD PTR [edi+ebp*1-0x7a],esp
  42440a:	sbb    DWORD PTR [edx+eiz*1],0x1fcacc4b
  424411:	xor    ebp,edi
  424413:	daa    
  424414:	jecxz  0x4243ad
  424416:	sbb    dl,0xd2
  424419:	imul   eax,DWORD PTR [ebp-0x6c],0x68cb675
  424420:	mov    bl,0x96
  424422:	mov    bl,0x8f
  424424:	leave  
  424425:	mov    ecx,0xd9ff1b7e
  42442a:	aas    
  42442b:	dec    esp
  42442c:	adc    BYTE PTR [eax],dl
  42442e:	xchg   ebp,eax
  42442f:	nop
  424430:	fidivr DWORD PTR [esi+0x35c3f3dd]
  424436:	and    BYTE PTR [edx],cl
  424438:	ds loope 0x424425
  42443b:	dec    edx
  42443c:	jbe    0x42447f
  42443e:	out    dx,al
  42443f:	xchg   edi,eax
  424440:	test   al,cl
  424442:	mov    ds:0x3ef1e277,al
  424447:	repnz nop
  424449:	mov    al,ds:0x582533b9
  42444e:	in     eax,dx
  42444f:	mul    DWORD PTR [ecx]
  424451:	mov    bl,0x62
  424453:	out    dx,eax
  424454:	pop    ebp
  424455:	xor    ebp,ebx
  424457:	stos   DWORD PTR es:[edi],eax
  424458:	mov    DWORD PTR [eax],esp
  42445a:	inc    ecx
  42445b:	cmp    al,0xd5
  42445d:	ins    DWORD PTR es:[edi],dx
  42445e:	jnp    0x424483
  424460:	and    ebx,DWORD PTR [esi-0x16]
  424463:	or     dl,BYTE PTR [ebx+edi*8+0x88dde0]
  42446a:	ror    bl,0x83
  42446d:	or     DWORD PTR [esi+0x58],eax
  424470:	ds out dx,al
  424472:	aas    
  424473:	(bad)
  424478:	jmp    0x99eb:0x6384bdeb
  42447f:	in     eax,dx
  424480:	xchg   DWORD PTR [ebp+0x29],ecx
  424483:	(bad)  [edi-0x72851b07]
  424489:	fmul   DWORD PTR [eax]
  42448b:	les    ebx,FWORD PTR [edx]
  42448d:	or     BYTE PTR [ecx+0x1c],0x59
  424491:	fidivr WORD PTR [esi+0x143d2582]
  424497:	ror    DWORD PTR [eax],1
  424499:	or     BYTE PTR [ebp+0x2847a92c],0x63
  4244a0:	call   0x62ca:0x6b1b405
  4244a7:	adc    BYTE PTR [eax+0x65],0x8c
  4244ab:	ins    BYTE PTR es:[edi],dx
  4244ac:	fist   DWORD PTR [esi]
  4244ae:	jns    0x4244e4
  4244b0:	enter  0xe668,0x1a
  4244b4:	dec    esp
  4244b5:	pop    es
  4244b6:	pusha  
  4244b7:	sub    al,0x17
  4244b9:	fmul   QWORD PTR [ecx+edx*2]
  4244bc:	ficomp DWORD PTR [edx-0x7c]
  4244bf:	pop    esp
  4244c0:	add    al,0x27
  4244c2:	jp     0x4244b2
  4244c4:	fcom   DWORD PTR [esi+ecx*2-0xc]
  4244c8:	add    eax,0x3d4706bc
  4244cd:	xor    al,0xa0
  4244cf:	out    dx,eax
  4244d0:	xchg   ebp,eax
  4244d1:	in     eax,0xad
  4244d3:	lods   eax,DWORD PTR ds:[esi]
  4244d4:	enter  0x25,0x5
  4244d8:	push   esi
  4244d9:	push   ss
  4244da:	fld    QWORD PTR [esi]
  4244dc:	and    BYTE PTR ds:0x860f487d,dh
  4244e2:	xor    ax,0xe43f
  4244e6:	rol    DWORD PTR [ecx],0x9f
  4244e9:	(bad)  
  4244ea:	and    BYTE PTR [edx+0x136475fd],ch
  4244f0:	mov    ah,0x7
  4244f2:	mov    dl,0xde
  4244f4:	inc    DWORD PTR [edi-0x67d63452]
  4244fa:	and    al,0x9
  4244fc:	xlat   BYTE PTR ds:[ebx]
  4244fd:	in     al,0x36
  4244ff:	mov    ch,0xcb
  424501:	jne    0x42452f
  424503:	mov    ebx,DWORD PTR [ecx+0xb]
  424506:	xlat   BYTE PTR ds:[ebx]
  424507:	jl     0x424509
  424509:	add    ecx,DWORD PTR [esi-0x58]
  42450c:	fsub   QWORD PTR [eax-0x50]
  42450f:	and    eax,0x538c18f1
  424514:	sbb    al,0x80
  424516:	lock shl DWORD PTR [esi+0x32],cl
  42451a:	fild   DWORD PTR [edi+0x5]
  42451d:	mov    ch,0x9f
  42451f:	push   0xb5c63444
  424524:	cmp    al,dh
  424526:	adc    DWORD PTR [eax-0xd],edi
  424529:	sub    cl,BYTE PTR [edx-0xf]
  42452c:	and    ecx,DWORD PTR [ebp-0xc7fdbbd]
  424532:	or     eax,0xcd5064d6
  424537:	js     0x4244e4
  424539:	mov    ecx,0x14bfe19d
  42453e:	sub    eax,0x2e7d3fcd
  424543:	push   es
  424544:	inc    esp
  424545:	push   esp
  424546:	ins    DWORD PTR es:[edi],dx
  424547:	xchg   DWORD PTR [esi+0x36],esi
  42454a:	lods   eax,DWORD PTR ds:[esi]
  42454b:	outs   dx,DWORD PTR ds:[esi]
  42454c:	mov    esp,0x4f10e82b
  424551:	out    dx,eax
  424552:	mov    ss,WORD PTR [ebp+0x33]
  424555:	or     BYTE PTR [ebx],0x2e
  424558:	in     al,dx
  424559:	stos   BYTE PTR es:[edi],al
  42455a:	adc    eax,0xda572ede
  42455f:	jmp    0x5a18:0x97db3527
  424566:	fwait
  424567:	stos   DWORD PTR es:[edi],eax
  424568:	push   cs
  424569:	cmp    al,0x93
  42456b:	out    dx,al
  42456c:	aaa    
  42456d:	int    0x7c
  42456f:	pop    ebx
  424570:	xor    ebx,DWORD PTR [ebx]
  424572:	push   esp
  424573:	lods   eax,DWORD PTR ds:[esi]
  424574:	and    DWORD PTR [edi],esp
  424576:	ins    DWORD PTR es:[edi],dx
  424577:	scas   eax,DWORD PTR es:[edi]
  424578:	ficom  DWORD PTR [edi]
  42457a:	sbb    eax,0x4aad5e69
  42457f:	ror    DWORD PTR [edi+0x247ff2d],cl
  424585:	pop    ebp
  424586:	ss aaa 
  424588:	sbb    DWORD PTR [ecx-0x7b72696b],esp
  42458e:	rcr    BYTE PTR [ecx-0x18],cl
  424591:	mov    ch,dl
  424593:	rol    DWORD PTR [ecx+0x16642ce],cl
  424599:	rcl    BYTE PTR [ecx-0x62],1
  42459c:	jo     0x4245d6
  42459e:	cmp    dh,BYTE PTR ds:0x110707c2
  4245a4:	sub    al,BYTE PTR [ecx+0x23]
  4245a7:	scas   eax,DWORD PTR es:[edi]
  4245a8:	pop    ebp
  4245a9:	fwait
  4245aa:	iret   
  4245ab:	test   BYTE PTR [edi+0x7f],0x4c
  4245af:	sub    al,0x10
  4245b1:	push   ebx
  4245b2:	jo     0x424602
  4245b4:	ret    0xb756
  4245b7:	jge    0x42459a
  4245b9:	fistp  DWORD PTR [edi-0x29ba80dc]
  4245bf:	or     DWORD PTR [ebp-0x2e],edi
  4245c2:	mov    eax,ds:0x7814ab83
  4245c7:	sysret 
  4245c9:	cwde   
  4245ca:	dec    esi
  4245cb:	and    DWORD PTR [ecx],0xe9231ba5
  4245d1:	jnp    0x4245f7
  4245d3:	sub    eax,0xdc000745
  4245d8:	push   esi
  4245d9:	sbb    eax,DWORD PTR [esi+0x77]
  4245dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245dd:	hlt    
  4245de:	cmp    ch,BYTE PTR [edx-0x24]
  4245e1:	fwait
  4245e2:	jmp    0x424621
  4245e4:	sbb    ch,BYTE PTR [ebx]
  4245e6:	jge    0x4245f4
  4245e8:	mov    al,ds:0x2c301c85
  4245ed:	jno    0x424613
  4245ef:	and    BYTE PTR [eax-0x257b0353],dh
  4245f5:	mov    al,ds:0xac1f02d9
  4245fa:	stc    
  4245fb:	cmp    DWORD PTR [esi-0x2d7368fb],edi
  424601:	repz push 0x7fc3e72b
  424607:	(bad)  
  424608:	pop    esi
  424609:	ins    DWORD PTR es:[edi],dx
  42460a:	xchg   ebp,eax
  42460b:	push   es
  42460c:	mov    edi,0xcd3513e8
  424611:	into   
  424612:	or     ebp,DWORD PTR [esi]
  424614:	fist   WORD PTR [edx-0x69242cd3]
  42461a:	fistp  WORD PTR [eax+0x9]
  42461d:	mov    dl,0x69
  42461f:	rcr    DWORD PTR [ebx-0x2d6bd678],1
  424625:	enter  0x9981,0x3b
  424629:	rcr    DWORD PTR [ecx+0x15],0x37
  42462d:	mov    al,ds:0x1bf5d46e
  424632:	lahf   
  424633:	mov    DWORD PTR [eax],esp
  424635:	jmp    0x244e:0x789aaad7
  42463c:	hlt    
  42463d:	(bad)  
  42463e:	mov    al,ds:0x17c7b600
  424643:	push   ss
  424644:	inc    edi
  424645:	popf   
  424646:	(bad)  
  424647:	jnp    0x424637
  424649:	sub    BYTE PTR [ebx-0x77],ah
  42464c:	inc    edi
  42464d:	mov    DWORD PTR [edi],edx
  42464f:	and    eax,0xec8bfa63
  424654:	fidiv  WORD PTR [ebp+0x68cf4f76]
  42465a:	jmp    0x42469e
  42465c:	mov    eax,0xf9d080f5
  424661:	xchg   esp,eax
  424662:	(bad)
  424666:	int3   
  424667:	pop    ebp
  424668:	mov    ebx,0xa769518
  42466d:	jp     0x424663
  42466f:	mov    edx,0x446c7e59
  424674:	xchg   DWORD PTR [ebx+esi*4],edx
  424677:	cli    
  424678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424679:	mov    al,0x2a
  42467b:	cmp    DWORD PTR [edi],edx
  42467d:	not    DWORD PTR [edx]
  42467f:	pop    edx
  424680:	test   BYTE PTR [ecx+0x3d4240d8],0xb4
  424687:	js     0x4246d1
  424689:	scas   eax,DWORD PTR es:[edi]
  42468a:	xchg   DWORD PTR [ebx],ebp
  42468c:	cdq    
  42468d:	imul   edi,ebx,0x79106b85
  424693:	mov    dh,cl
  424695:	rol    edx,0xbe
  424698:	les    edx,FWORD PTR [eax+0x4c]
  42469b:	add    BYTE PTR [ebx-0x34],dl
  42469e:	das    
  42469f:	adc    esi,esp
  4246a1:	stc    
  4246a2:	fisttp DWORD PTR [ebp-0x37df640d]
  4246a8:	ret    
  4246a9:	or     edx,DWORD PTR [esp+edx*1+0x68]
  4246ad:	mov    ebp,0xa9d6830a
  4246b2:	jp     0x4246d8
  4246b4:	(bad)  
  4246b5:	stc    
  4246b6:	shr    DWORD PTR [ebp-0x25],0x5e
  4246ba:	lods   al,BYTE PTR ds:[esi]
  4246bb:	in     al,dx
  4246bc:	arpl   WORD PTR [ecx-0x9],dx
  4246bf:	xchg   ecx,eax
  4246c0:	push   ss
  4246c1:	sbb    BYTE PTR [ebp+eiz*2+0x71],bh
  4246c5:	data16 stos BYTE PTR es:[edi],al
  4246c7:	mov    esi,DWORD PTR [ebp-0x6f]
  4246ca:	cmp    BYTE PTR [edx-0x39],0xd2
  4246ce:	retf   0x2691
  4246d1:	rcr    BYTE PTR [edx-0x56e67749],0xfd
  4246d8:	(bad)  
  4246da:	xor    ch,BYTE PTR [ebx-0x706bdb40]
  4246e0:	ins    DWORD PTR es:[edi],dx
  4246e1:	dec    ebp
  4246e2:	adc    ecx,0xfda8c7da
  4246e8:	pop    es
  4246e9:	retf   0xa6d4
  4246ec:	or     esp,ebp
  4246ee:	fst    DWORD PTR [ecx-0x5d]
  4246f1:	adc    DWORD PTR [eax+0x5b],0xf50dad7e
  4246f8:	sub    DWORD PTR [esi-0x62],edi
  4246fb:	fist   DWORD PTR [ecx-0x1f]
  4246fe:	dec    ecx
  4246ff:	cmp    al,ah
  424701:	push   ebp
  424702:	daa    
  424703:	sub    esi,ebp
  424705:	leave  
  424706:	rol    ebx,0x67
  424709:	retf   0x95bf
  42470c:	add    BYTE PTR [esi],dh
  42470e:	outs   dx,BYTE PTR ds:[esi]
  42470f:	and    eax,0x75389b41
  424714:	ret    0x631f
  424717:	lods   eax,DWORD PTR ds:[esi]
  424718:	icebp  
  424719:	add    BYTE PTR [eax+0xb5b14e1],cl
  42471f:	pop    es
  424720:	icebp  
  424721:	sbb    eax,0x3cd1b22d
  424726:	mov    ebx,DWORD PTR [edx+ebx*1]
  424729:	adc    ah,ah
  42472b:	mov    dl,0x2a
  42472d:	cmp    ch,0xba
  424730:	in     eax,0x88
  424732:	xor    DWORD PTR [edx],ebx
  424734:	mov    ch,BYTE PTR [edi]
  424736:	scas   eax,DWORD PTR es:[edi]
  424737:	mov    edx,0x3a8dcf9b
  42473c:	icebp  
  42473d:	mul    DWORD PTR [esi+0x2c]
  424740:	cmp    ebp,ebx
  424742:	test   BYTE PTR ds:0x53a0eba7,dl
  424748:	fs sbb dh,dl
  42474b:	and    DWORD PTR [ebp-0x36e1cd69],ebp
  424751:	pop    ebx
  424752:	(bad)  
  424753:	mov    edx,0xcfb84feb
  424758:	fst    DWORD PTR [ecx-0x61ba50bc]
  42475e:	fucomp st(3)
  424760:	clc    
  424761:	cmp    ebx,DWORD PTR [edx+0x2d]
  424764:	push   ecx
  424765:	pop    esp
  424766:	in     al,dx
  424767:	inc    BYTE PTR ds:0xbda3db0a
  42476d:	xor    al,0xd1
  42476f:	in     eax,dx
  424770:	ret    
  424771:	(bad)  
  424773:	sbb    BYTE PTR [esi],cl
  424775:	ffreep st(7)
  424777:	xchg   edx,eax
  424778:	mov    ecx,ecx
  42477a:	in     al,0x14
  42477c:	es adc eax,0x7df130f3
  424782:	icebp  
  424783:	push   edi
  424784:	xchg   ecx,eax
  424785:	adc    bh,BYTE PTR [esi]
  424787:	cmp    DWORD PTR [edi-0x2c],esi
  42478a:	into   
  42478b:	loop   0x424742
  42478d:	xor    edi,DWORD PTR ds:0x1683f443
  424793:	(bad)  
  424794:	push   esi
  424795:	pushf  
  424796:	cmp    DWORD PTR [eax-0x4f],eax
  424799:	jo     0x4247e4
  42479b:	dec    ecx
  42479c:	adc    eax,0x67b1d1bf
  4247a1:	imul   edx,DWORD PTR [eax+0x3a4c96a3],0xffffffc4
  4247a8:	mov    WORD PTR [ebp+0x2cd04445],cs
  4247ae:	aam    0x3
  4247b0:	mul    DWORD PTR [edx]
  4247b2:	ja     0x4247d2
  4247b4:	pop    es
  4247b5:	xchg   DWORD PTR [ebp-0x1e],ebp
  4247b8:	div    DWORD PTR [esi]
  4247ba:	pop    edx
  4247bb:	mov    esp,0x8ef79bea
  4247c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247c1:	daa    
  4247c2:	sbb    ah,BYTE PTR [esi]
  4247c4:	fimul  WORD PTR [esi+ebx*8+0x7f]
  4247c8:	add    BYTE PTR [ecx+0x40ac80ca],bl
  4247ce:	fadd   QWORD PTR ds:0x584a5ddb
  4247d4:	sahf   
  4247d5:	inc    edi
  4247d6:	xchg   esp,eax
  4247d7:	lea    ecx,[ebp+0x27]
  4247da:	mov    ecx,0x7ed65210
  4247df:	cmp    BYTE PTR [edi-0x5fb8bec9],ah
  4247e5:	mov    fs,WORD PTR [ecx-0x56]
  4247e8:	or     al,0x2a
  4247ea:	shl    ah,cl
  4247ec:	(bad)  
  4247ed:	ret    
  4247ee:	jmp    0x42479a
  4247f0:	loope  0x42477b
  4247f2:	mov    dh,0x65
  4247f4:	mov    DWORD PTR [ecx],edx
  4247f6:	call   0xd67cafa
  4247fb:	addr16 call 0x5c00:0xa0dc0053
  424803:	sar    BYTE PTR [ebx+0x26c02276],1
  424809:	out    dx,al
  42480a:	xor    eax,0xa6de4402
  42480f:	cmp    BYTE PTR [eax+0x2b],cl
  424812:	inc    ebx
  424814:	mov    ch,0xd8
  424816:	mov    ebp,0xa7661e25
  42481b:	and    edx,edx
  42481d:	out    0xf8,al
  42481f:	shr    BYTE PTR [edx],0x9
  424822:	mov    ch,al
  424824:	xchg   dh,cl
  424826:	cmp    ch,BYTE PTR [ebx+eiz*8-0x51]
  42482a:	and    BYTE PTR [ecx-0x672e45e7],bl
  424830:	mov    ecx,0x1a52dc7d
  424835:	xlat   BYTE PTR ds:[ebx]
  424836:	mov    ds,WORD PTR [edi+0x65]
  424839:	in     eax,0xf1
  42483b:	data16 cli 
  42483d:	ret    
  42483e:	stos   BYTE PTR es:[edi],al
  42483f:	aas    
  424840:	adc    DWORD PTR [edx-0x5572e28f],0x1
  424847:	lods   eax,DWORD PTR ds:[esi]
  424848:	jmp    0x424846
  42484a:	popf   
  42484b:	out    dx,eax
  42484c:	das    
  42484d:	mov    bl,0xf5
  42484f:	pop    edx
  424850:	xchg   ebx,eax
  424851:	int    0xc8
  424853:	les    ebx,FWORD PTR [edi-0x78]
  424856:	jge    0x4247e7
  424858:	add    DWORD PTR fs:[ebx-0x62b1baf8],ebx
  42485f:	inc    BYTE PTR [edi-0x7d131693]
  424865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424866:	sbb    al,0xd7
  424868:	imul   edx,DWORD PTR [ebx],0x193ec6a6
  42486e:	lock push edx
  424870:	mov    dl,BYTE PTR [ecx-0x36cfe2f2]
  424876:	ja     0x42482c
  424878:	int3   
  424879:	push   ds
  42487a:	xchg   edx,eax
  42487b:	out    0x9c,eax
  42487d:	out    dx,al
  42487e:	outs   dx,DWORD PTR ds:[esi]
  42487f:	dec    edi
  424880:	push   ebp
  424881:	adc    DWORD PTR [edx+0x14c2ad2c],0xeb538a0
  42488b:	mov    al,ds:0x618f812e
  424890:	xchg   edi,eax
  424891:	pop    edx
  424892:	popa   
  424893:	mov    ds:0xdafe424a,al
  424898:	push   ds
  424899:	sti    
  42489a:	fst    QWORD PTR [ebx+ebx*4-0x25]
  42489e:	dec    esp
  42489f:	mov    edi,DWORD PTR [eax]
  4248a1:	push   ss
  4248a2:	std    
  4248a3:	pop    edx
  4248a4:	and    eax,0x28f895fa
  4248a9:	in     al,dx
  4248aa:	mov    dl,0x40
  4248ac:	cmp    eax,0xf959d34e
  4248b1:	inc    esp
  4248b2:	mov    ah,BYTE PTR [edi]
  4248b4:	xor    cl,BYTE PTR [ecx+0x20]
  4248b7:	push   ebx
  4248b8:	popa   
  4248b9:	add    al,0x2e
  4248bb:	mov    WORD PTR [ecx],?
  4248bd:	push   esi
  4248be:	adc    DWORD PTR [ecx+ebp*2+0x68019927],eax
  4248c5:	xor    al,0x83
  4248c7:	mov    ecx,0xd61699ce
  4248cc:	sbb    BYTE PTR [ecx],cl
  4248ce:	adc    eax,0xb42c2b55
  4248d3:	sub    al,bh
  4248d5:	jecxz  0x424878
  4248d7:	sbb    DWORD PTR [eax-0x2cf05b5d],ecx
  4248dd:	scas   al,BYTE PTR es:[edi]
  4248de:	iret   
  4248df:	xor    BYTE PTR [ebp+0x64c4f75b],0xac
  4248e6:	push   0xffffffd6
  4248e8:	sub    eax,0x97f1f88b
  4248ed:	loope  0x4248e1
  4248ef:	sub    al,BYTE PTR ds:0x9f559bbc
  4248f5:	in     al,dx
  4248f6:	mov    edx,0x130f8c5a
  4248fb:	les    eax,FWORD PTR [edi-0x5b]
  4248fe:	out    0x74,eax
  424900:	jmp    0x51abe742
  424905:	mov    eax,?
  424907:	shl    DWORD PTR [edx],cl
  424909:	rol    BYTE PTR [edx],0x20
  42490c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42490d:	daa    
  42490e:	imul   ebx,ebp,0xffffff9b
  424911:	repnz fmulp st(1),st
  424914:	je     0x42490a
  424916:	test   DWORD PTR [edi],0xc5dac97e
  42491c:	cmp    al,0x0
  42491e:	sub    BYTE PTR [ebx+0x74],0x58
  424922:	push   ebx
  424923:	imul   DWORD PTR [ebx-0x6]
  424926:	jge    0x4248bd
  424928:	lods   eax,DWORD PTR ds:[esi]
  424929:	sbb    DWORD PTR [ebx-0x36db4cca],edi
  42492f:	and    al,0x4d
  424931:	inc    edx
  424932:	pop    eax
  424933:	xchg   bh,cl
  424935:	push   ebx
  424936:	mov    al,0x3d
  424938:	and    dl,BYTE PTR [edi-0x3d]
  42493b:	in     eax,0xb9
  42493d:	outs   dx,BYTE PTR ds:[esi]
  42493e:	call   0xb9a47743
  424943:	jp     0x424950
  424945:	add    edi,esi
  424947:	jae    0x424959
  424949:	jb     0x424995
  42494b:	out    0x14,al
  42494d:	mov    esi,0x22696185
  424952:	pop    esi
  424953:	cwde   
  424954:	mov    ch,0xb4
  424956:	sub    BYTE PTR [ebp+0x5c],0x35
  42495a:	or     eax,0xfd44fab5
  42495f:	out    0x5d,al
  424961:	dec    esi
  424962:	or     BYTE PTR [edx-0x1750576d],al
  424968:	ins    DWORD PTR es:[edi],dx
  424969:	outs   dx,BYTE PTR ds:[esi]
  42496a:	jae    0x4249b5
  42496c:	push   ds
  42496d:	cmc    
  42496e:	jecxz  0x424949
  424970:	adc    DWORD PTR [edx-0x24],ebx
  424973:	not    DWORD PTR [edi-0xe]
  424976:	(bad)  
  424977:	push   ds
  424978:	mov    ds:0x75911d9c,eax
  42497d:	call   0xc4a3:0x72ed1afe
  424984:	dec    eax
  424985:	jecxz  0x42495d
  424987:	dec    edx
  424988:	push   esp
  424989:	dec    esp
  42498a:	and    al,0x8c
  42498c:	mov    ds:0x3fcc9195,al
  424991:	fucomp st(2)
  424993:	(bad)
  424998:	fdivr  DWORD PTR [eax+eiz*4-0x4d]
  42499c:	mov    cl,0xa0
  42499e:	ror    DWORD PTR [ebp-0x466ba7c8],0x7c
  4249a5:	sbb    DWORD PTR fs:[ebx],ebp
  4249a8:	and    edi,DWORD PTR [ebx+0x1f58675f]
  4249ae:	mov    al,ds:0xf8f659e9
  4249b3:	pusha  
  4249b4:	push   eax
  4249b5:	jb     0x4249e1
  4249b7:	cli    
  4249b8:	mov    WORD PTR [edi-0x3c086df7],fs
  4249be:	nop
  4249bf:	jmp    0x8e4b:0xb1715ae8
  4249c6:	mov    fs,WORD PTR [edi-0x7199a633]
  4249cc:	scas   al,BYTE PTR es:[edi]
  4249cd:	mov    ds:0x3cc36434,eax
  4249d2:	sub    bh,BYTE PTR [eax+ebx*1]
  4249d5:	shl    DWORD PTR [ecx],0xd0
  4249d8:	out    dx,eax
  4249d9:	sbb    BYTE PTR [edi],ch
  4249db:	imul   ecx,DWORD PTR [ecx],0x28
  4249de:	dec    edi
  4249df:	iret   
  4249e0:	inc    ebx
  4249e1:	and    DWORD PTR [edx+0x2aad4c21],esi
  4249e7:	shl    BYTE PTR [edx+eax*8+0x130c612],0xfb
  4249ef:	inc    ecx
  4249f0:	inc    DWORD PTR [ecx+0x65]
  4249f3:	fs xchg edi,eax
  4249f5:	(bad)  
  4249f6:	out    0x62,al
  4249f8:	cmp    DWORD PTR [eax],ebp
  4249fa:	call   0xcda7ffac
  4249ff:	fiadd  WORD PTR [edx]
  424a01:	pusha  
  424a02:	gs (bad) 
  424a04:	and    DWORD PTR [esi-0x385e6731],esi
  424a0a:	dec    esi
  424a0b:	scas   eax,DWORD PTR es:[edi]
  424a0c:	push   es
  424a0d:	sbb    al,0x4d
  424a0f:	pop    ds
  424a10:	mov    edx,0xb8eebdd6
  424a15:	pop    ds
  424a16:	cmp    BYTE PTR [ebx],dl
  424a18:	adc    eax,0x6699d260
  424a1d:	xor    al,0xb
  424a1f:	leave  
  424a20:	pop    eax
  424a21:	repnz int3 
  424a23:	in     eax,dx
  424a24:	dec    ecx
  424a25:	inc    esp
  424a26:	and    DWORD PTR [ecx],ecx
  424a28:	mov    BYTE PTR [ecx],al
  424a2a:	lock call 0x4984:0x6a8d5d0a
  424a32:	jo     0x424aa4
  424a34:	(bad)  
  424a35:	arpl   dx,di
  424a37:	jmp    0xf056:0xd40faa2d
  424a3e:	inc    esi
  424a3f:	sbb    ebx,ebx
  424a41:	popa   
  424a42:	ret    
  424a43:	mov    esi,0x692c0616
  424a48:	icebp  
  424a49:	or     BYTE PTR [edi+0x55],dh
  424a4c:	and    al,ch
  424a4e:	enter  0x7d2c,0x60
  424a52:	cwde   
  424a53:	lea    edi,[esi-0x32]
  424a56:	lea    esp,[ebx]
  424a58:	push   ds
  424a59:	dec    edx
  424a5a:	lods   eax,DWORD PTR ds:[esi]
  424a5b:	mov    bh,0x16
  424a5d:	cmp    eax,0x18a3fddb
  424a62:	(bad)  
  424a63:	out    0xa6,al
  424a65:	(bad)  
  424a66:	icebp  
  424a67:	fcmovnu st,st(2)
  424a69:	or     edx,esp
  424a6b:	dec    esp
  424a6c:	hlt    
  424a6d:	lods   ax,WORD PTR ds:[esi]
  424a6f:	add    al,0x2b
  424a71:	jo     0x424a97
  424a73:	adc    ebx,DWORD PTR [edi+0x5]
  424a76:	loope  0x424a3b
  424a78:	repnz cli 
  424a7a:	pop    ss
  424a7b:	cmc    
  424a7c:	scas   al,BYTE PTR es:[edi]
  424a7d:	call   0x6f29:0xf5383b35
  424a84:	call   0x4038:0x3e18e66a
  424a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a8c:	dec    ebp
  424a8d:	(bad)  
  424a8e:	adc    DWORD PTR [ebx+esi*2-0x2f],ebp
  424a92:	js     0x424a65
  424a94:	sub    eax,0x9e0e08e0
  424a99:	je     0x424ae8
  424a9b:	xor    DWORD PTR [ebx],0x40
  424a9e:	loope  0x424a34
  424aa0:	cmp    BYTE PTR [esi],dl
  424aa2:	std    
  424aa3:	imul   ebp,DWORD PTR [ebx],0xffffffd3
  424aa6:	scas   al,BYTE PTR es:[edi]
  424aa7:	out    0x34,eax
  424aa9:	push   ebx
  424aaa:	loop   0x424ab3
  424aac:	jbe    0x424b15
  424aae:	jmp    esi
  424ab0:	adc    al,0x7
  424ab2:	add    BYTE PTR [ebx+edx*2-0x7f01df0b],0xf3
  424aba:	neg    DWORD PTR [esi-0x2d81df6f]
  424ac0:	ret    0xe0c2
  424ac3:	push   ds
  424ac4:	jle    0x424b15
  424ac6:	adc    dh,dh
  424ac8:	xor    bh,BYTE PTR [ebp+0x1a927d0b]
  424ace:	jmp    0x8c286856
  424ad3:	imul   esi,eax,0x76
  424ad6:	(bad)  
  424ad7:	mov    ah,0x5f
  424ad9:	shl    DWORD PTR [edi+0x9012dc4],0x88
  424ae0:	outs   dx,BYTE PTR es:[esi]
  424ae2:	sub    eax,esi
  424ae4:	pop    ds
  424ae5:	cmc    
  424ae6:	lods   al,BYTE PTR ds:[esi]
  424ae7:	and    cl,BYTE PTR [ebp+0x8c94528]
  424aed:	shl    DWORD PTR [edi],cl
  424aef:	jge    0x424b05
  424af1:	mov    edx,0xc1ea5c7f
  424af6:	das    
  424af7:	cmp    BYTE PTR [edx+0x391f722],dh
  424afd:	outs   dx,BYTE PTR ds:[esi]
  424afe:	cld    
  424aff:	test   eax,0xde9abe2d
  424b04:	and    esp,DWORD PTR [eax]
  424b06:	pop    es
  424b07:	push   edx
  424b08:	es call 0x527a67fc
  424b0e:	std    
  424b0f:	push   edi
  424b10:	and    eax,0xb5039c23
  424b15:	mov    al,BYTE PTR [edx]
  424b17:	ret    
  424b18:	mov    eax,ds:0x5949cb74
  424b1d:	repz jecxz 0x424b93
  424b20:	pop    ebx
  424b21:	push   cs
  424b22:	cli    
  424b23:	stos   BYTE PTR es:[edi],al
  424b24:	je     0x424b89
  424b26:	mov    dh,0xeb
  424b28:	aaa    
  424b29:	xchg   esi,eax
  424b2a:	sub    al,0xab
  424b2c:	aaa    
  424b2d:	repz dec esi
  424b2f:	dec    esp
  424b30:	stos   BYTE PTR es:[edi],al
  424b31:	push   ebx
  424b32:	pop    es
  424b33:	dec    ecx
  424b34:	cmp    al,0x1a
  424b36:	lods   eax,DWORD PTR ds:[esi]
  424b37:	or     DWORD PTR [ebx],eax
  424b39:	mov    eax,0x4ded8ce9
  424b3e:	ds cmc 
  424b40:	outs   dx,DWORD PTR ds:[esi]
  424b41:	pop    eax
  424b42:	xchg   esi,eax
  424b43:	cmp    edx,edx
  424b45:	cli    
  424b46:	sbb    eax,0x46266240
  424b4b:	fisttp QWORD PTR [eax-0x5445571b]
  424b51:	and    edx,DWORD PTR [ecx]
  424b53:	(bad)  
  424b54:	dec    eax
  424b55:	fnstsw WORD PTR [edx-0x5b]
  424b58:	xchg   ebp,eax
  424b59:	outs   dx,DWORD PTR ds:[esi]
  424b5a:	cs dec ebx
  424b5c:	add    al,0x7a
  424b5e:	test   DWORD PTR [eax+0x55],eax
  424b61:	ds jne 0x424b06
  424b64:	mov    ebx,0x7a1e742a
  424b69:	push   ecx
  424b6a:	in     al,0x4d
  424b6c:	shl    BYTE PTR [edx+0x36022a6d],cl
  424b72:	mov    ss,WORD PTR [ecx]
  424b74:	popa   
  424b75:	inc    ebx
  424b76:	push   0xde27591f
  424b7b:	test   eax,0x8b969f51
  424b80:	sar    esp,0xed
  424b83:	lods   al,BYTE PTR ds:[esi]
  424b84:	cmp    DWORD PTR [esi+0x3c],edx
  424b87:	or     eax,0x27ea0eff
  424b8c:	inc    ebx
  424b8d:	cmp    dh,ch
  424b8f:	ret    0xee5c
  424b92:	mov    ebp,0x24e2bd2f
  424b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b98:	mov    ?,esp
  424b9a:	cmp    DWORD PTR [esi+0x3d23f339],edx
  424ba0:	fwait
  424ba1:	mov    ah,0x17
  424ba3:	jo     0x424bf5
  424ba5:	(bad)  
  424ba6:	xor    eax,0xdbe1198c
  424bab:	jb     0x424b98
  424bad:	sub    bh,BYTE PTR [edi+0x5a]
  424bb0:	cmc    
  424bb1:	inc    ecx
  424bb2:	call   0x27ebfdd7
  424bb7:	dec    eax
  424bb8:	inc    esp
  424bb9:	js     0x424bd1
  424bbb:	mov    ?,WORD PTR [edi*4+0x4b6b5c59]
  424bc2:	(bad)  
  424bc3:	lock not DWORD PTR [edi+0x543d878a]
  424bca:	pop    esi
  424bcb:	pop    ebx
  424bcc:	leave  
  424bcd:	ret    0xc
  424bd0:	add    BYTE PTR [eax-0x5ffbffbe],ah
  424bd6:	inc    edx
  424bd7:	add    BYTE PTR [eax],cl
  424bd9:	mov    al,ds:0xa00c0042
  424bde:	inc    edx
  424bdf:	add    BYTE PTR [eax],dl
  424be1:	mov    al,ds:0xa0140042
  424be6:	inc    edx
  424be7:	add    BYTE PTR [eax],bl
  424be9:	mov    al,ds:0xa01c0042
  424bee:	inc    edx
  424bef:	add    BYTE PTR [eax],al
  424bf1:	rol    BYTE PTR [edx+0x0],1
  424bf4:	add    al,0xd0
  424bf6:	inc    edx
  424bf7:	add    BYTE PTR [eax],cl
  424bf9:	rol    BYTE PTR [edx+0x0],1
  424bfc:	or     al,0xd0
  424bfe:	inc    edx
  424bff:	add    BYTE PTR [eax],dl
  424c01:	rol    BYTE PTR [edx+0x0],1
  424c04:	adc    al,0xd0
  424c06:	inc    edx
  424c07:	add    BYTE PTR [eax],bl
  424c09:	rol    BYTE PTR [edx+0x0],1
  424c0c:	sbb    al,0xd0
  424c0e:	inc    edx
  424c0f:	add    BYTE PTR [eax],al
  424c11:	add    BYTE PTR [eax],al
  424c13:	add    BYTE PTR [edx],bl
  424c15:	hlt    
  424c16:	xlat   BYTE PTR ds:[ebx]
  424c17:	dec    ebp
  424c18:	add    BYTE PTR [eax],al
  424c1a:	add    BYTE PTR [eax],al
  424c1c:	add    al,BYTE PTR [eax]
  424c1e:	add    BYTE PTR [eax],al
  424c20:	cmp    eax,0x10000000
  424c25:	dec    ebp
  424c26:	add    al,BYTE PTR [eax]
  424c28:	adc    BYTE PTR [ecx+0x2],al
	...
  424c33:	add    BYTE PTR [edx],bl
  424c35:	hlt    
  424c36:	xlat   BYTE PTR ds:[ebx]
  424c37:	dec    ebp
  424c38:	add    BYTE PTR [eax],al
  424c3a:	add    BYTE PTR [eax],al
  424c3c:	bound  ecx,QWORD PTR [edx+eax*1+0x0]
  424c40:	add    DWORD PTR [eax],eax
  424c42:	add    BYTE PTR [eax],al
  424c44:	add    DWORD PTR [eax],eax
  424c46:	add    BYTE PTR [eax],al
  424c48:	add    DWORD PTR [eax],eax
  424c4a:	add    BYTE PTR [eax],al
  424c4c:	pop    eax
  424c4d:	dec    esp
  424c4e:	add    al,BYTE PTR [eax]
  424c50:	pop    esp
  424c51:	dec    esp
  424c52:	add    al,BYTE PTR [eax]
  424c54:	pusha  
  424c55:	dec    esp
  424c56:	add    al,BYTE PTR [eax]
  424c58:	xor    eax,0x6e00002a
  424c5d:	dec    esp
  424c5e:	add    al,BYTE PTR [eax]
  424c60:	add    BYTE PTR [eax],al
  424c62:	inc    esp
  424c63:	jns    0x424cd3
  424c65:	popa   
  424c66:	ins    DWORD PTR es:[edi],dx
  424c67:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  424c6e:	aas    
  424c6f:	inc    edi
  424c70:	gs je  0x424cc8
  424c73:	jae    0x424cda
  424c75:	jb     0x424cc6
  424c77:	bound  ebp,QWORD PTR [edx+0x65]
  424c7a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  424c7e:	arpl   WORD PTR [ebp+0x72],si
  424c81:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  424c89:	gs jb  0x424cdb
  424c8c:	bound  ebp,QWORD PTR [edx+0x65]
  424c8f:	arpl   WORD PTR [ebx+edx*2+0x65],si
  424c93:	arpl   WORD PTR [ebp+0x0],si
  424c96:	nop
  424c97:	inc    edx
  424c98:	add    BYTE PTR [eax+edx*4],al
  424c9b:	inc    edx
  424c9c:	add    BYTE PTR [eax],cl
  424c9e:	nop
  424c9f:	inc    edx
  424ca0:	add    BYTE PTR [eax+edx*4],cl
  424ca3:	inc    edx
  424ca4:	add    BYTE PTR [eax],dl
  424ca6:	nop
  424ca7:	inc    edx
  424ca8:	add    BYTE PTR [eax+edx*4],dl
  424cab:	inc    edx
  424cac:	add    BYTE PTR [eax],bl
  424cae:	nop
  424caf:	inc    edx
  424cb0:	add    BYTE PTR [eax+edx*4],bl
  424cb3:	inc    edx
  424cb4:	add    BYTE PTR [eax],ah
  424cb6:	nop
  424cb7:	inc    edx
  424cb8:	add    BYTE PTR [eax+edx*4],ah
  424cbb:	inc    edx
  424cbc:	add    BYTE PTR [eax],ch
  424cbe:	nop
  424cbf:	inc    edx
  424cc0:	add    BYTE PTR [eax],al
  424cc2:	mov    al,0x42
  424cc4:	add    BYTE PTR [eax+esi*4],al
  424cc7:	inc    edx
  424cc8:	add    BYTE PTR [eax],cl
  424cca:	mov    al,0x42
  424ccc:	add    BYTE PTR [eax+esi*4],cl
  424ccf:	inc    edx
  424cd0:	add    BYTE PTR [eax],dl
  424cd2:	mov    al,0x42
  424cd4:	add    BYTE PTR [eax+esi*4],dl
  424cd7:	inc    edx
  424cd8:	add    BYTE PTR [eax],bl
  424cda:	mov    al,0x42
  424cdc:	add    BYTE PTR [eax+esi*4],bl
  424cdf:	inc    edx
  424ce0:	add    BYTE PTR [eax],al
  424ce2:	rol    BYTE PTR [edx+0x0],0x4
  424ce6:	rol    BYTE PTR [edx+0x0],0x8
  424cea:	rol    BYTE PTR [edx+0x0],0xc
  424cee:	rol    BYTE PTR [edx+0x0],0x10
  424cf2:	rol    BYTE PTR [edx+0x0],0x14
  424cf6:	rol    BYTE PTR [edx+0x0],0x18
  424cfa:	rol    BYTE PTR [edx+0x0],0x1c
  424cfe:	rol    BYTE PTR [edx+0x0],0x0
	...
  424d0e:	add    BYTE PTR [eax],al
  424d10:	push   edx
  424d11:	push   ebx
  424d12:	inc    esp
  424d13:	push   ebx
  424d14:	dec    eax
  424d15:	stos   DWORD PTR es:[edi],eax
  424d16:	xor    DWORD PTR [eax],ebx
  424d18:	aad    0x83
  424d1a:	add    eax,0xb2dd9247
  424d1f:	adc    BYTE PTR [esi],ch
  424d21:	add    eax,eax
  424d23:	retf   
  424d24:	add    DWORD PTR [eax],eax
  424d26:	add    BYTE PTR [eax],al
  424d28:	inc    ebx
  424d29:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  424d2d:	jb     0x424da1
  424d2f:	outs   dx,BYTE PTR gs:[esi]
  424d31:	je     0x424d77
  424d33:	popa   
  424d34:	je     0x424d97
  424d36:	pop    esp
  424d37:	dec    ebp
  424d38:	outs   dx,DWORD PTR ds:[esi]
  424d39:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  424d41:	ins    BYTE PTR es:[edi],dx
  424d42:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  424d49:	dec    esi
  424d4a:	gs ja  0x424d4d
  424d4d:	mov    edx,DWORD PTR [ebp-0x14]
  424d50:	sub    esp,0xe4
  424d56:	push   ebx
  424d57:	mov    eax,ebx
  424d59:	xchg   ecx,eax
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	cmp    eax,0xf89c85b9
  424d62:	jne    0x4250f4
  424d68:	mov    eax,DWORD PTR [ebp+0xc]
  424d6b:	cmp    eax,0xf89c85b8
  424d70:	jne    0x4250f4
  424d76:	mov    eax,DWORD PTR [ebp+0x24]
  424d79:	mov    DWORD PTR [ebp-0x4],eax
  424d7c:	mov    BYTE PTR [ebp-0x18],0x3
  424d80:	mov    BYTE PTR [ebp-0x17],0x1e
  424d84:	mov    BYTE PTR [ebp-0x16],0x1
  424d88:	mov    BYTE PTR [ebp-0x15],0x4f
  424d8c:	mov    BYTE PTR [ebp-0x14],0x48
  424d90:	mov    BYTE PTR [ebp-0x13],0x7a
  424d94:	mov    BYTE PTR [ebp-0x20],0xd
  424d98:	mov    BYTE PTR [ebp-0x1f],0xf
  424d9c:	mov    BYTE PTR [ebp-0x1e],0x1d
  424da0:	mov    BYTE PTR [ebp-0x1d],0x8
  424da4:	mov    BYTE PTR [ebp-0x1c],0x4f
  424da8:	mov    BYTE PTR [ebp-0x1b],0x48
  424dac:	mov    BYTE PTR [ebp-0x1a],0x7a
  424db0:	mov    BYTE PTR [ebp-0x28],0xf
  424db4:	mov    BYTE PTR [ebp-0x27],0x2
  424db8:	push   esi
  424db9:	mov    BYTE PTR [ebp-0x26],0x6
  424dbd:	mov    BYTE PTR [ebp-0x25],0xf3
  424dc1:	push   edi
  424dc2:	mov    BYTE PTR [ebp-0x24],0x19
  424dc6:	mov    BYTE PTR [ebp-0x23],0xa
  424dca:	push   0x73
  424dcc:	mov    BYTE PTR [ebp-0x22],0x1
  424dd0:	xor    edi,edi
  424dd2:	mov    BYTE PTR [ebp-0x21],0x7a
  424dd6:	xor    esi,esi
  424dd8:	pop    edx
  424dd9:	mov    eax,0xf7
  424dde:	lea    ecx,[ebp+esi*1-0x18]
  424de2:	movzx  ebx,BYTE PTR [ecx]
  424de5:	xor    ebx,edx
  424de7:	add    ebx,eax
  424de9:	inc    esi
  424dea:	mov    BYTE PTR [ecx],bl
  424dec:	cmp    esi,0x6
  424def:	jb     0x424dde
  424df1:	xor    esi,esi
  424df3:	lea    ecx,[ebp+esi*1-0x20]
  424df7:	movzx  ebx,BYTE PTR [ecx]
  424dfa:	xor    ebx,edx
  424dfc:	add    ebx,eax
  424dfe:	inc    esi
  424dff:	mov    BYTE PTR [ecx],bl
  424e01:	cmp    esi,0x7
  424e04:	jb     0x424df3
  424e06:	xor    esi,esi
  424e08:	lea    ecx,[ebp+esi*1-0x28]
  424e0c:	movzx  ebx,BYTE PTR [ecx]
  424e0f:	xor    ebx,edx
  424e11:	add    ebx,eax
  424e13:	push   0x8
  424e15:	mov    BYTE PTR [ecx],bl
  424e17:	inc    esi
  424e18:	pop    ecx
  424e19:	cmp    esi,ecx
  424e1b:	jb     0x424e08
  424e1d:	lea    eax,[ebp-0x2c]
  424e20:	mov    DWORD PTR [ebp-0x8],eax
  424e23:	mov    esi,DWORD PTR [ebp-0x8]
  424e26:	mov    eax,0x7113fcef
  424e2b:	mov    DWORD PTR [esi],eax
  424e2d:	mov    esi,DWORD PTR [ebp-0x2c]
  424e30:	cmp    esi,eax
  424e32:	jne    0x424e42
  424e34:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  424e3b:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  424e42:	mov    eax,DWORD PTR [ebp-0x4]
  424e45:	mov    eax,DWORD PTR [eax+0x18c]
  424e4b:	cmp    DWORD PTR [eax],edi
  424e4d:	jne    0x42509d
  424e53:	mov    eax,DWORD PTR [ebp-0x4]
  424e56:	mov    eax,DWORD PTR [eax+0x17c]
  424e5c:	mov    DWORD PTR [eax],edi
  424e5e:	mov    eax,DWORD PTR [ebp-0x4]
  424e61:	mov    eax,DWORD PTR [eax+0x180]
  424e67:	mov    DWORD PTR [eax],edi
  424e69:	mov    edi,0x4e3c
  424e6e:	mov    eax,0x4f8f
  424e73:	mov    WORD PTR [ebp-0x78],ax
  424e77:	mov    eax,edi
  424e79:	mov    WORD PTR [ebp-0x76],ax
  424e7d:	add    eax,0x43
  424e80:	mov    WORD PTR [ebp-0x74],ax
  424e84:	lea    eax,[edi+0x3]
  424e87:	mov    WORD PTR [ebp-0x72],ax
  424e8b:	mov    eax,0x4fac
  424e90:	mov    WORD PTR [ebp-0x70],ax
  424e94:	lea    eax,[edi-0x4]
  424e97:	mov    WORD PTR [ebp-0x6e],ax
  424e9b:	add    eax,0x45
  424e9e:	mov    WORD PTR [ebp-0x6c],ax
  424ea2:	lea    eax,[edi-0x2]
  424ea5:	mov    WORD PTR [ebp-0x6a],ax
  424ea9:	mov    eax,edi
  424eab:	mov    WORD PTR [ebp-0x68],ax
  424eaf:	dec    eax
  424eb0:	mov    WORD PTR [ebp-0x66],ax
  424eb4:	mov    eax,0x99ff
  424eb9:	mov    WORD PTR [ebp-0x64],ax
  424ebd:	mov    eax,0x8288
  424ec2:	mov    WORD PTR [ebp-0x62],ax
  424ec6:	mov    eax,0xd78d
  424ecb:	mov    WORD PTR [ebp-0x60],ax
  424ecf:	add    eax,0x1c
  424ed2:	mov    WORD PTR [ebp-0x5e],ax
  424ed6:	mov    eax,0x27aa
  424edb:	mov    WORD PTR [ebp-0x5c],ax
  424edf:	mov    eax,0x47aa
  424ee4:	mov    WORD PTR [ebp-0x5a],ax
  424ee8:	lea    eax,[edi-0x3]
  424eeb:	mov    WORD PTR [ebp-0x58],ax
  424eef:	mov    DWORD PTR [ebp-0x10],0xf306020f
  424ef6:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  424efd:	lea    eax,[ebp-0x10]
  424f00:	mov    bl,BYTE PTR [eax]
  424f02:	xor    bl,dl
  424f04:	sub    bl,0x9
  424f07:	mov    BYTE PTR [eax],bl
  424f09:	inc    eax
  424f0a:	dec    ecx
  424f0b:	jne    0x424f00
  424f0d:	lea    eax,[ebp-0x10]
  424f10:	mov    DWORD PTR [ebp-0xb8],eax
  424f16:	lea    eax,[ebp-0xbc]
  424f1c:	push   eax
  424f1d:	mov    eax,DWORD PTR [ebp+0xc]
  424f20:	mov    ebx,0x7510899
  424f25:	xor    eax,ebx
  424f27:	mov    esi,0x3272e0
  424f2c:	add    eax,esi
  424f2e:	push   eax
  424f2f:	mov    eax,DWORD PTR [ebp-0x4]
  424f32:	add    eax,0x66
  424f35:	push   eax
  424f36:	mov    eax,DWORD PTR [ebp-0x4]
  424f39:	mov    eax,DWORD PTR [eax+0x198]
  424f3f:	mov    DWORD PTR [ebp-0xbc],0x1
  424f49:	push   DWORD PTR [eax]
  424f4b:	mov    eax,DWORD PTR [ebp+0x10]
  424f4e:	call   eax
  424f50:	mov    ecx,DWORD PTR [ebp+0x8]
  424f53:	xor    ecx,ebx
  424f55:	add    ecx,esi
  424f57:	mov    DWORD PTR [ebp-0x8],eax
  424f5a:	cmp    eax,ecx
  424f5c:	jne    0x424f77
  424f5e:	mov    eax,ds:0x33730bee
  424f63:	or     eax,0x22150bef
  424f68:	mov    ds:0x33730bee,eax
  424f6d:	add    eax,0x3372e90f
  424f72:	mov    ds:0x33730bee,eax
  424f77:	mov    ecx,0x4f84
  424f7c:	mov    eax,ecx
  424f7e:	mov    WORD PTR [ebp-0x40],ax
  424f82:	mov    eax,0x4e71
  424f87:	mov    edx,eax
  424f89:	mov    WORD PTR [ebp-0x3e],dx
  424f8d:	lea    edx,[ecx+0x15]
  424f90:	mov    WORD PTR [ebp-0x3c],dx
  424f94:	add    edx,0xfffffff8
  424f97:	mov    WORD PTR [ebp-0x3a],dx
  424f9b:	lea    edx,[ecx+0xf]
  424f9e:	mov    WORD PTR [ebp-0x38],dx
  424fa2:	add    edx,0x1b
  424fa5:	mov    WORD PTR [ebp-0x36],dx
  424fa9:	lea    edx,[ecx+0x21]
  424fac:	mov    WORD PTR [ebp-0x34],dx
  424fb0:	mov    WORD PTR [ebp-0x32],cx
  424fb4:	mov    ecx,edi
  424fb6:	mov    WORD PTR [ebp-0x30],cx
  424fba:	lea    ecx,[edx-0x1]
  424fbd:	mov    edx,ecx
  424fbf:	mov    WORD PTR [ebp-0x54],dx
  424fc3:	mov    edx,eax
  424fc5:	mov    WORD PTR [ebp-0x52],dx
  424fc9:	add    edx,0x8
  424fcc:	mov    WORD PTR [ebp-0x50],dx
  424fd0:	mov    WORD PTR [ebp-0x4e],ax
  424fd4:	add    eax,0x2
  424fd7:	mov    WORD PTR [ebp-0x4c],ax
  424fdb:	lea    eax,[ecx-0x16]
  424fde:	mov    WORD PTR [ebp-0x4a],ax
  424fe2:	add    eax,0xfffffff7
  424fe5:	mov    WORD PTR [ebp-0x48],ax
  424fe9:	mov    WORD PTR [ebp-0x46],cx
  424fed:	mov    WORD PTR [ebp-0x44],di
  424ff1:	mov    eax,DWORD PTR [ebp+0x8]
  424ff4:	movzx  ecx,WORD PTR [ebp-0x54]
  424ff8:	xor    eax,ebx
  424ffa:	add    eax,esi
  424ffc:	xor    eax,ecx
  424ffe:	mov    WORD PTR [ebp-0x54],ax
  425002:	mov    eax,DWORD PTR [ebp+0x8]
  425005:	movzx  ecx,WORD PTR [ebp-0x40]
  425009:	xor    eax,ebx
  42500b:	add    eax,esi
  42500d:	xor    eax,ecx
  42500f:	mov    WORD PTR [ebp-0x40],ax
  425013:	xor    eax,eax
  425015:	mov    WORD PTR [ebp-0xd0],ax
  42501c:	mov    WORD PTR [ebp-0xe4],ax
  425023:	mov    edi,DWORD PTR [ebp+0x24]
  425026:	lea    eax,[ebp-0xd0]
  42502c:	lea    edx,[ebp-0x54]
  42502f:	mov    DWORD PTR [ebp-0xbc],0x2
  425039:	mov    DWORD PTR [ebp-0xb8],eax
  42503f:	call   0x4279a8
  425044:	mov    DWORD PTR [ebp-0xb4],eax
  42504a:	lea    eax,[ebp-0xbc]
  425050:	push   eax
  425051:	mov    eax,DWORD PTR [ebp+0xc]
  425054:	xor    eax,ebx
  425056:	add    eax,esi
  425058:	push   eax
  425059:	lea    eax,[ebp-0x78]
  42505c:	push   eax
  42505d:	push   DWORD PTR [ebp-0x8]
  425060:	mov    eax,DWORD PTR [ebp+0x10]
  425063:	call   eax
  425065:	mov    edi,DWORD PTR [ebp+0x24]
  425068:	lea    eax,[ebp-0xe4]
  42506e:	lea    edx,[ebp-0x40]
  425071:	mov    DWORD PTR [ebp-0xb8],eax
  425077:	call   0x4279a8
  42507c:	mov    DWORD PTR [ebp-0xb4],eax
  425082:	lea    eax,[ebp-0xbc]
  425088:	push   eax
  425089:	mov    eax,DWORD PTR [ebp+0xc]
  42508c:	xor    eax,ebx
  42508e:	add    eax,esi
  425090:	push   eax
  425091:	lea    eax,[ebp-0x78]
  425094:	push   eax
  425095:	push   DWORD PTR [ebp-0x8]
  425098:	mov    eax,DWORD PTR [ebp+0x10]
  42509b:	call   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x14]
  4250a0:	push   DWORD PTR [ebp-0x4]
  4250a3:	push   DWORD PTR [ebp+0x20]
  4250a6:	push   DWORD PTR [ebp+0x1c]
  4250a9:	push   DWORD PTR [ebp+0x18]
  4250ac:	push   DWORD PTR [ebp+0x10]
  4250af:	push   DWORD PTR [ebp+0x8]
  4250b2:	push   DWORD PTR [ebp+0xc]
  4250b5:	call   0x42624c
  4250ba:	add    DWORD PTR [ebp-0x4],eax
  4250bd:	mov    eax,DWORD PTR [ebp-0x4]
  4250c0:	mov    eax,DWORD PTR [ebp-0x4]
  4250c3:	mov    edi,DWORD PTR [eax+0x190]
  4250c9:	mov    eax,DWORD PTR [ebp-0x4]
  4250cc:	mov    eax,DWORD PTR [eax+0x18c]
  4250d2:	mov    esi,DWORD PTR [eax]
  4250d4:	lea    ecx,[ebp+0x4]
  4250d7:	mov    edx,DWORD PTR [ecx]
  4250d9:	cmp    edx,esi
  4250db:	jb     0x4250f2
  4250dd:	mov    eax,DWORD PTR [edi]
  4250df:	mov    edi,DWORD PTR [eax+0x3c]
  4250e2:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  4250e6:	add    edi,esi
  4250e8:	cmp    edx,edi
  4250ea:	jae    0x4250f2
  4250ec:	sub    eax,esi
  4250ee:	add    eax,edx
  4250f0:	mov    DWORD PTR [ecx],eax
  4250f2:	pop    edi
  4250f3:	pop    esi
  4250f4:	pop    ebx
  4250f5:	leave  
  4250f6:	ret    0x20
  4250f9:	push   edi
  4250fa:	push   esi
  4250fb:	push   ebx
  4250fc:	push   ebp
  4250fd:	mov    ebp,esp
  4250ff:	mov    eax,DWORD PTR [ebp+0x24]
  425102:	add    DWORD PTR [ebp+0x28],eax
  425105:	push   eax
  425106:	cld    
  425107:	mov    esi,DWORD PTR [ebp+0x18]
  42510a:	add    DWORD PTR [ebp+0x1c],esi
  42510d:	push   esi
  42510e:	mov    esi,DWORD PTR [ebp+0x14]
  425111:	lods   eax,DWORD PTR ds:[esi]
  425112:	xchg   edx,eax
  425113:	push   edx
  425114:	mov    cl,BYTE PTR [esi-0x2]
  425117:	or     eax,0xffffffff
  42511a:	shl    eax,cl
  42511c:	not    eax
  42511e:	push   eax
  42511f:	mov    cl,dh
  425121:	or     eax,0xffffffff
  425124:	shl    eax,cl
  425126:	not    eax
  425128:	push   eax
  425129:	add    cl,dl
  42512b:	mov    edi,esi
  42512d:	sub    esp,0xc
  425130:	sub    eax,eax
  425132:	inc    eax
  425133:	push   eax
  425134:	push   eax
  425135:	push   eax
  425136:	push   eax
  425137:	push   eax
  425138:	push   edi
  425139:	sub    esi,esi
  42513b:	push   esi
  42513c:	or     ebx,0xffffffff
  42513f:	mov    eax,0x300
  425144:	shl    eax,cl
  425146:	lea    ecx,[eax+0x736]
  42514c:	mov    eax,0x4000400
  425151:	shr    ecx,1
  425153:	rep stos DWORD PTR es:[edi],eax
  425155:	push   0x5
  425157:	pop    ecx
  425158:	call   0x425443
  42515d:	loop   0x425158
  42515f:	lea    esi,[esi]
  425161:	lea    edi,[edi]
  425163:	mov    edi,DWORD PTR [ebp-0x4]
  425166:	mov    eax,DWORD PTR [ebp-0x10]
  425169:	sub    edi,DWORD PTR [ebp+0x24]
  42516c:	and    eax,edi
  42516e:	mov    DWORD PTR [ebp-0x18],eax
  425171:	mov    al,0x0
  425173:	call   0x42545b
  425178:	jne    0x425213
  42517e:	mov    cl,BYTE PTR [ebp-0xc]
  425181:	and    edi,DWORD PTR [ebp-0x14]
  425184:	shl    edi,cl
  425186:	sub    cl,0x8
  425189:	neg    cl
  42518b:	shr    esi,cl
  42518d:	pop    eax
  42518e:	add    edi,esi
  425190:	pop    esi
  425191:	lea    edi,[edi+edi*2]
  425194:	shl    edi,0x8
  425197:	cmp    al,0x7
  425199:	pop    edx
  42519a:	lea    ecx,[esi+edi*2+0xe6c]
  4251a1:	push   ecx
  4251a2:	push   esi
  4251a3:	mov    esi,0x100
  4251a8:	push   eax
  4251a9:	mov    al,0x1
  4251ab:	jb     0x4251e1
  4251ad:	mov    edi,DWORD PTR [ebp-0x4]
  4251b0:	sub    edi,DWORD PTR [ebp-0x24]
  4251b3:	movzx  edi,BYTE PTR [edi]
  4251b6:	mov    ebp,DWORD PTR [ebp-0x34]
  4251b9:	shl    edi,1
  4251bb:	mov    ecx,esi
  4251bd:	and    esi,edi
  4251bf:	add    ecx,esi
  4251c1:	lea    ebp,[ebp+ecx*2+0x0]
  4251c5:	call   0x42547a
  4251ca:	mov    ecx,eax
  4251cc:	shr    esi,0x8
  4251cf:	and    ecx,0x1
  4251d2:	cmp    esi,ecx
  4251d4:	mov    esi,0x100
  4251d9:	jne    0x4251e9
  4251db:	cmp    eax,esi
  4251dd:	jb     0x4251b6
  4251df:	jmp    0x4251f5
  4251e1:	mov    ebp,DWORD PTR [ebp-0x34]
  4251e4:	call   0x42547a
  4251e9:	inc    eax
  4251ea:	inc    esi
  4251eb:	sub    eax,0x1
  4251ee:	sub    esi,0x1
  4251f1:	cmp    eax,esi
  4251f3:	jb     0x4251e1
  4251f5:	pop    edx
  4251f6:	inc    edx
  4251f7:	cmp    edx,0x5
  4251fa:	dec    edx
  4251fb:	mov    ecx,edx
  4251fd:	jb     0x42520e
  4251ff:	inc    edx
  425200:	cmp    edx,0xb
  425203:	dec    edx
  425204:	mov    cl,0x4
  425206:	dec    cl
  425208:	jb     0x42520e
  42520a:	mov    cl,0x7
  42520c:	dec    cl
  42520e:	sub    edx,ecx
  425210:	push   edx
  425211:	jmp    0x425262
  425213:	mov    al,0xc1
  425215:	dec    al
  425217:	call   0x42546b
  42521c:	jne    0x425232
  42521e:	pop    eax
  42521f:	pop    edi
  425220:	pop    edx
  425221:	pop    ecx
  425222:	pop    edx
  425223:	pop    ecx
  425224:	push   DWORD PTR [esp]
  425227:	push   ecx
  425228:	push   edx
  425229:	mov    edx,0x664
  42522e:	mov    cl,0x0
  425230:	jmp    0x4252a5
  425232:	mov    al,0xcd
  425234:	dec    al
  425236:	call   0x42546b
  42523b:	jne    0x42526b
  42523d:	mov    al,0xf1
  42523f:	dec    al
  425241:	call   0x42545b
  425246:	jne    0x42529b
  425248:	pop    eax
  425249:	cmp    al,0x7
  42524b:	mov    al,0x9
  42524d:	jb     0x425251
  42524f:	mov    al,0xb
  425251:	push   eax
  425252:	mov    esi,DWORD PTR [ebp-0x4]
  425255:	sub    esi,DWORD PTR [ebp-0x24]
  425258:	cmp    esi,DWORD PTR [ebp+0x24]
  42525b:	jb     0x425432
  425261:	lods   al,BYTE PTR ds:[esi]
  425262:	mov    edi,DWORD PTR [ebp-0x4]
  425265:	stos   BYTE PTR es:[edi],al
  425266:	jmp    0x4253f9
  42526b:	mov    al,0xd8
  42526d:	call   0x42546b
  425272:	mov    esi,DWORD PTR [ebp-0x28]
  425275:	je     0x425292
  425277:	mov    al,0xe4
  425279:	call   0x42546b
  42527e:	mov    esi,DWORD PTR [ebp-0x2c]
  425281:	je     0x42528c
  425283:	mov    esi,DWORD PTR [ebp-0x30]
  425286:	mov    ecx,DWORD PTR [ebp-0x2c]
  425289:	mov    DWORD PTR [ebp-0x30],ecx
  42528c:	mov    ecx,DWORD PTR [ebp-0x28]
  42528f:	mov    DWORD PTR [ebp-0x2c],ecx
  425292:	mov    ecx,DWORD PTR [ebp-0x24]
  425295:	mov    DWORD PTR [ebp-0x28],ecx
  425298:	mov    DWORD PTR [ebp-0x24],esi
  42529b:	pop    eax
  42529c:	pop    edi
  42529d:	pop    ecx
  42529e:	mov    edx,0xa68
  4252a3:	mov    cl,0x8
  4252a5:	add    edx,edi
  4252a7:	push   edx
  4252a8:	push   edi
  4252a9:	cmp    al,0x7
  4252ab:	mov    al,cl
  4252ad:	jb     0x4252b1
  4252af:	add    al,0x3
  4252b1:	push   eax
  4252b2:	mov    ebp,DWORD PTR [ebp-0x34]
  4252b5:	call   0x425478
  4252ba:	jne    0x4252d0
  4252bc:	mov    eax,DWORD PTR [ebp-0x18]
  4252bf:	mov    edi,DWORD PTR [ebp-0x34]
  4252c2:	shl    eax,0x3
  4252c5:	sub    ecx,ecx
  4252c7:	push   0x8
  4252c9:	pop    esi
  4252ca:	lea    edi,[edi+eax*2+0x4]
  4252ce:	jmp    0x425305
  4252d0:	mov    ebp,DWORD PTR [ebp-0x34]
  4252d3:	add    ebp,0x2
  4252d6:	call   0x425478
  4252db:	jne    0x4252f5
  4252dd:	mov    eax,DWORD PTR [ebp-0x18]
  4252e0:	mov    edi,DWORD PTR [ebp-0x34]
  4252e3:	shl    eax,0x3
  4252e6:	push   0x8
  4252e8:	pop    ecx
  4252e9:	push   0x8
  4252eb:	pop    esi
  4252ec:	lea    edi,[edi+eax*2+0x104]
  4252f3:	jmp    0x425305
  4252f5:	mov    edi,0x204
  4252fa:	add    edi,DWORD PTR [ebp-0x34]
  4252fd:	push   0x10
  4252ff:	pop    ecx
  425300:	mov    esi,0x100
  425305:	mov    DWORD PTR [ebp-0x1c],ecx
  425308:	sub    eax,eax
  42530a:	inc    eax
  42530b:	mov    ebp,edi
  42530d:	call   0x42547a
  425312:	mov    ecx,eax
  425314:	sub    ecx,esi
  425316:	jb     0x42530b
  425318:	add    DWORD PTR [ebp-0x1c],ecx
  42531b:	cmp    DWORD PTR [ebp-0x3c],0x4
  42531f:	jae    0x4253d5
  425325:	add    DWORD PTR [ebp-0x3c],0x7
  425329:	mov    ecx,DWORD PTR [ebp-0x1c]
  42532c:	cmp    ecx,0x4
  42532f:	jb     0x425334
  425331:	push   0x3
  425333:	pop    ecx
  425334:	mov    edi,DWORD PTR [ebp-0x38]
  425337:	shl    ecx,0x6
  42533a:	sub    eax,eax
  42533c:	inc    eax
  42533d:	push   0x40
  42533f:	pop    esi
  425340:	lea    edi,[edi+ecx*2+0x360]
  425347:	mov    ebp,edi
  425349:	call   0x42547a
  42534e:	mov    ecx,eax
  425350:	sub    ecx,esi
  425352:	jb     0x425347
  425354:	mov    DWORD PTR [ebp-0x18],ecx
  425357:	mov    DWORD PTR [ebp-0x24],ecx
  42535a:	cmp    ecx,0x4
  42535d:	jb     0x4253d2
  42535f:	mov    esi,ecx
  425361:	and    DWORD PTR [ebp-0x24],0x1
  425365:	shr    esi,1
  425367:	or     DWORD PTR [ebp-0x24],0x2
  42536b:	dec    esi
  42536c:	cmp    ecx,0xe
  42536f:	jae    0x42538a
  425371:	mov    eax,0x2af
  425376:	sub    eax,ecx
  425378:	mov    ecx,esi
  42537a:	shl    BYTE PTR [ebp-0x24],cl
  42537d:	add    eax,DWORD PTR [ebp-0x24]
  425380:	shl    eax,1
  425382:	add    eax,DWORD PTR [ebp-0x38]
  425385:	mov    DWORD PTR [ebp-0x34],eax
  425388:	jmp    0x4253b7
  42538a:	sub    esi,0x4
  42538d:	call   0x425437
  425392:	shr    ebx,1
  425394:	shl    DWORD PTR [ebp-0x24],1
  425397:	cmp    DWORD PTR [ebp-0x20],ebx
  42539a:	jb     0x4253a2
  42539c:	inc    DWORD PTR [ebp-0x24]
  42539f:	sub    DWORD PTR [ebp-0x20],ebx
  4253a2:	dec    esi
  4253a3:	jne    0x42538d
  4253a5:	mov    eax,0x644
  4253aa:	add    eax,DWORD PTR [ebp-0x38]
  4253ad:	mov    DWORD PTR [ebp-0x34],eax
  4253b0:	shl    DWORD PTR [ebp-0x24],0x4
  4253b4:	push   0x4
  4253b6:	pop    esi
  4253b7:	sub    edi,edi
  4253b9:	inc    edi
  4253ba:	mov    eax,edi
  4253bc:	mov    ebp,DWORD PTR [ebp-0x34]
  4253bf:	call   0x42547a
  4253c4:	test   al,0x1
  4253c6:	je     0x4253cb
  4253c8:	or     DWORD PTR [ebp-0x24],edi
  4253cb:	shl    edi,1
  4253cd:	dec    esi
  4253ce:	jne    0x4253bc
  4253d0:	jmp    0x4253d2
  4253d2:	inc    DWORD PTR [ebp-0x24]
  4253d5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253d8:	add    ecx,0x2
  4253db:	mov    edi,DWORD PTR [ebp-0x4]
  4253de:	mov    eax,edi
  4253e0:	sub    eax,DWORD PTR [ebp+0x24]
  4253e3:	cmp    DWORD PTR [ebp-0x24],eax
  4253e6:	ja     0x425432
  4253e8:	mov    esi,edi
  4253ea:	sub    esi,DWORD PTR [ebp-0x24]
  4253ed:	mov    edx,DWORD PTR [ebp+0x28]
  4253f0:	lods   al,BYTE PTR ds:[esi]
  4253f1:	stos   BYTE PTR es:[edi],al
  4253f2:	cmp    edi,edx
  4253f4:	jae    0x4253f9
  4253f6:	dec    ecx
  4253f7:	jne    0x4253f0
  4253f9:	mov    DWORD PTR [ebp-0x4],edi
  4253fc:	movzx  esi,al
  4253ff:	cmp    edi,DWORD PTR [ebp+0x28]
  425402:	jb     0x425163
  425408:	call   0x425437
  42540d:	sub    eax,eax
  42540f:	lea    ebp,[esp+0x3c]
  425413:	mov    edx,DWORD PTR [ebp+0x20]
  425416:	mov    esi,DWORD PTR [ebp-0x8]
  425419:	sub    esi,DWORD PTR [ebp+0x18]
  42541c:	mov    DWORD PTR [edx],esi
  42541e:	mov    edx,DWORD PTR [ebp+0x2c]
  425421:	mov    edi,DWORD PTR [ebp-0x4]
  425424:	sub    edi,DWORD PTR [ebp+0x24]
  425427:	mov    DWORD PTR [edx],edi
  425429:	leave  
  42542a:	pop    ebx
  42542b:	pop    esi
  42542c:	pop    edi
  42542d:	ret    0x1c
  425430:	pop    esi
  425431:	pop    eax
  425432:	sub    eax,eax
  425434:	inc    eax
  425435:	jmp    0x42540f
  425437:	cmp    ebx,0x1000000
  42543d:	jb     0x425440
  42543f:	ret    
  425440:	shl    ebx,0x8
  425443:	push   esi
  425444:	mov    esi,DWORD PTR [ebp-0x8]
  425447:	cmp    esi,DWORD PTR [ebp+0x1c]
  42544a:	jae    0x425430
  42544c:	mov    eax,DWORD PTR [ebp-0x20]
  42544f:	shl    eax,0x8
  425452:	lods   al,BYTE PTR ds:[esi]
  425453:	mov    DWORD PTR [ebp-0x20],eax
  425456:	mov    DWORD PTR [ebp-0x8],esi
  425459:	pop    esi
  42545a:	ret    
  42545b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42545e:	movzx  eax,al
  425461:	shl    ecx,0x4
  425464:	add    eax,DWORD PTR [ebp-0x18]
  425467:	add    eax,ecx
  425469:	jmp    0x425471
  42546b:	movzx  eax,al
  42546e:	add    eax,DWORD PTR [ebp-0x3c]
  425471:	mov    ebp,DWORD PTR [ebp-0x38]
  425474:	lea    ebp,[ebp+eax*2+0x0]
  425478:	sub    eax,eax
  42547a:	lea    ebp,[ebp+eax*2+0x0]
  42547e:	cmp    ebx,0x1000000
  425484:	jae    0x4254a2
  425486:	mov    ecx,DWORD PTR [esp+0x38]
  42548a:	shl    DWORD PTR [esp+0x20],0x8
  42548f:	cmp    ecx,DWORD PTR [esp+0x5c]
  425493:	jae    0x425431
  425495:	mov    dl,BYTE PTR [ecx]
  425497:	inc    DWORD PTR [esp+0x38]
  42549b:	shl    ebx,0x8
  42549e:	mov    BYTE PTR [esp+0x20],dl
  4254a2:	mov    ecx,ebx
  4254a4:	movzx  edx,WORD PTR [ebp+0x0]
  4254a8:	shr    ecx,0xb
  4254ab:	imul   ecx,edx
  4254ae:	cmp    DWORD PTR [esp+0x20],ecx
  4254b2:	jae    0x4254cb
  4254b4:	mov    ebx,ecx
  4254b6:	mov    ecx,0x800
  4254bb:	sub    ecx,edx
  4254bd:	shr    ecx,0x5
  4254c0:	add    WORD PTR [ebp+0x0],cx
  4254c4:	add    eax,eax
  4254c6:	lea    ebp,[esp+0x40]
  4254ca:	ret    
  4254cb:	shr    edx,0x5
  4254ce:	sub    DWORD PTR [esp+0x20],ecx
  4254d2:	sub    ebx,ecx
  4254d4:	sub    WORD PTR [ebp+0x0],dx
  4254d8:	add    eax,eax
  4254da:	add    eax,0x1
  4254dd:	lea    ebp,[esp+0x40]
  4254e1:	ret    
  4254e2:	push   ebp
  4254e3:	mov    ebp,esp
  4254e5:	sub    esp,0x104
  4254eb:	push   ebx
  4254ec:	push   esi
  4254ed:	push   edi
  4254ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4254f5:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4254fc:	mov    eax,DWORD PTR [ebp+0x8]
  4254ff:	mov    DWORD PTR [ebp+0x8],eax
  425502:	mov    ecx,DWORD PTR [ebp-0x14]
  425505:	mov    ebx,0x7510899
  42550a:	xor    ecx,ebx
  42550c:	mov    eax,0x3272e0
  425511:	add    ecx,eax
  425513:	mov    DWORD PTR [ebp-0x28],ecx
  425516:	mov    ecx,DWORD PTR [ebp-0x14]
  425519:	xor    ecx,ebx
  42551b:	add    ecx,eax
  42551d:	mov    DWORD PTR [ebp-0x40],ecx
  425520:	mov    ecx,DWORD PTR [ebp-0x14]
  425523:	xor    ecx,ebx
  425525:	add    ecx,eax
  425527:	mov    DWORD PTR [ebp-0x3c],ecx
  42552a:	mov    ecx,DWORD PTR [ebp-0x14]
  42552d:	xor    ecx,ebx
  42552f:	add    ecx,eax
  425531:	mov    DWORD PTR [ebp-0xa0],ecx
  425537:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  42553e:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  425545:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  42554c:	push   0x24
  42554e:	pop    ecx
  42554f:	mov    DWORD PTR [ebp-0x2c],ecx
  425552:	mov    DWORD PTR [ebp-0x2c],ecx
  425555:	push   0x64
  425557:	pop    ecx
  425558:	mov    DWORD PTR [ebp-0x2c],ecx
  42555b:	mov    DWORD PTR [ebp-0x2c],ecx
  42555e:	mov    DWORD PTR [ebp-0x2c],0x4c
  425565:	mov    DWORD PTR [ebp-0x2c],0x42
  42556c:	mov    ecx,DWORD PTR [ebp-0x14]
  42556f:	xor    ecx,ebx
  425571:	add    ecx,eax
  425573:	mov    DWORD PTR [ebp-0x2c],ecx
  425576:	mov    ecx,DWORD PTR [ebp-0x14]
  425579:	xor    ecx,ebx
  42557b:	add    ecx,eax
  42557d:	mov    DWORD PTR [ebp-0x2c],ecx
  425580:	mov    DWORD PTR [ebp-0x24],0x256
  425587:	mov    DWORD PTR [ebp-0x34],0x34
  42558e:	mov    DWORD PTR [ebp-0x10],0x78
  425595:	lea    edi,[ebp-0xe4]
  42559b:	lea    esi,[ebp-0x104]
  4255a1:	call   0x4261bb
  4255a6:	dec    DWORD PTR [ebp-0x10]
  4255a9:	jne    0x425595
  4255ab:	dec    DWORD PTR [ebp-0x34]
  4255ae:	jne    0x42558e
  4255b0:	dec    DWORD PTR [ebp-0x24]
  4255b3:	jne    0x425587
  4255b5:	mov    DWORD PTR [ebp-0x24],0x400c
  4255bc:	mov    eax,DWORD PTR [ebp-0x14]
  4255bf:	xor    eax,ebx
  4255c1:	mov    esi,0x3272e0
  4255c6:	add    eax,esi
  4255c8:	mov    DWORD PTR [ebp-0x8],eax
  4255cb:	mov    eax,DWORD PTR [ebp-0x14]
  4255ce:	and    DWORD PTR [ebp-0x94],0x0
  4255d5:	xor    eax,ebx
  4255d7:	add    eax,esi
  4255d9:	mov    DWORD PTR [ebp-0x38],eax
  4255dc:	mov    eax,fs:0x18
  4255e2:	mov    DWORD PTR [ebp-0x94],eax
  4255e8:	mov    eax,DWORD PTR [eax+0x30]
  4255eb:	mov    DWORD PTR [ebp-0x98],eax
  4255f1:	mov    eax,DWORD PTR [eax+0xc]
  4255f4:	mov    DWORD PTR [ebp-0xc0],eax
  4255fa:	mov    eax,DWORD PTR [ebp+0x8]
  4255fd:	lea    ecx,[ebp-0x94]
  425603:	mov    DWORD PTR [eax+0x1a0],ecx
  425609:	mov    eax,DWORD PTR [ebp+0x8]
  42560c:	lea    ecx,[ebp-0x98]
  425612:	mov    DWORD PTR [eax+0x1a4],ecx
  425618:	mov    eax,DWORD PTR [ebp+0x8]
  42561b:	push   DWORD PTR [ebp+0x8]
  42561e:	lea    ecx,[ebp-0xc0]
  425624:	mov    DWORD PTR [eax+0x1a8],ecx
  42562a:	call   0x427979
  42562f:	mov    ecx,DWORD PTR [ebp-0x14]
  425632:	xor    ecx,ebx
  425634:	add    ecx,esi
  425636:	cmp    ecx,eax
  425638:	je     0x425915
  42563e:	mov    eax,DWORD PTR [ebp+0x8]
  425641:	mov    eax,DWORD PTR [eax+0x194]
  425647:	mov    ecx,DWORD PTR [eax]
  425649:	mov    eax,DWORD PTR [ebp+0x8]
  42564c:	mov    eax,DWORD PTR [eax+0x194]
  425652:	mov    eax,DWORD PTR [eax]
  425654:	add    eax,DWORD PTR [ecx+0x3c]
  425657:	mov    ecx,DWORD PTR [ebp+0x8]
  42565a:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425660:	lea    edx,[ebp-0xc4]
  425666:	push   edx
  425667:	mov    edx,DWORD PTR [ebp+0x8]
  42566a:	mov    edx,DWORD PTR [edx+0x18c]
  425670:	mov    edx,DWORD PTR [edx]
  425672:	add    edx,DWORD PTR [eax+0x88]
  425678:	push   0x4
  42567a:	push   DWORD PTR [eax+0x8c]
  425680:	push   edx
  425681:	call   DWORD PTR [ecx+0x1c]
  425684:	push   DWORD PTR [ebp+0x8]
  425687:	mov    edi,DWORD PTR [ebp+0x8]
  42568a:	mov    eax,DWORD PTR [ebp+0x8]
  42568d:	mov    edx,DWORD PTR [eax+0x1b8]
  425693:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  42569a:	mov    DWORD PTR [ebp-0x64],0x10a051f
  4256a1:	mov    WORD PTR [ebp-0x60],0x7a39
  4256a7:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  4256b1:	mov    DWORD PTR [ebp-0x8c],0x6390819
  4256bb:	mov    DWORD PTR [ebp-0x88],0x2419020a
  4256c5:	mov    DWORD PTR [ebp-0x84],0x81d050d
  4256cf:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  4256d6:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  4256dd:	mov    DWORD PTR [ebp-0x78],0x6390819
  4256e4:	mov    DWORD PTR [ebp-0x74],0x2419020a
  4256eb:	mov    DWORD PTR [ebp-0x70],0x81d050d
  4256f2:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  4256f9:	call   0x4279a8
  4256fe:	push   eax
  4256ff:	mov    eax,DWORD PTR [ebp+0x8]
  425702:	mov    eax,DWORD PTR [eax+0x1a8]
  425708:	push   DWORD PTR [eax]
  42570a:	call   0x42764a
  42570f:	test   eax,eax
  425711:	jne    0x425763
  425713:	mov    eax,DWORD PTR [ebp+0x8]
  425716:	mov    eax,DWORD PTR [eax+0x1d8]
  42571c:	mov    edi,DWORD PTR [ebp+0x8]
  42571f:	add    eax,0x4
  425722:	mov    DWORD PTR [ebp-0x20],eax
  425725:	mov    eax,DWORD PTR [ebp+0x8]
  425728:	mov    edx,DWORD PTR [eax+0x1b8]
  42572e:	call   0x4279a8
  425733:	push   eax
  425734:	mov    eax,DWORD PTR [ebp-0x20]
  425737:	call   DWORD PTR [eax]
  425739:	test   eax,eax
  42573b:	jne    0x425763
  42573d:	mov    eax,DWORD PTR [ebp+0x8]
  425740:	mov    eax,DWORD PTR [eax+0x1d8]
  425746:	mov    edi,DWORD PTR [ebp+0x8]
  425749:	add    eax,0x10
  42574c:	mov    DWORD PTR [ebp-0x20],eax
  42574f:	mov    eax,DWORD PTR [ebp+0x8]
  425752:	mov    edx,DWORD PTR [eax+0x1b8]
  425758:	call   0x4279a8
  42575d:	push   eax
  42575e:	mov    eax,DWORD PTR [ebp-0x20]
  425761:	call   DWORD PTR [eax]
  425763:	mov    eax,DWORD PTR [ebp-0x14]
  425766:	mov    ecx,DWORD PTR [ebp-0x24]
  425769:	xor    eax,ebx
  42576b:	add    eax,esi
  42576d:	cmp    eax,ecx
  42576f:	je     0x4258ee
  425775:	mov    eax,DWORD PTR [ebp-0x18]
  425778:	xor    eax,ebx
  42577a:	mov    ecx,0xffcd8d20
  42577f:	sub    ecx,eax
  425781:	add    ecx,DWORD PTR [ebp-0x24]
  425784:	mov    eax,DWORD PTR [ebp-0x8]
  425787:	cmp    eax,ecx
  425789:	ja     0x4258ee
  42578f:	mov    DWORD PTR [ebp-0x34],0x0
  425796:	push   DWORD PTR [ebp+0x8]
  425799:	mov    edi,DWORD PTR [ebp+0x8]
  42579c:	mov    eax,DWORD PTR [ebp+0x8]
  42579f:	mov    edx,DWORD PTR [eax+0x1b4]
  4257a5:	call   0x4279a8
  4257aa:	push   eax
  4257ab:	mov    eax,DWORD PTR [ebp+0x8]
  4257ae:	mov    eax,DWORD PTR [eax+0x1a8]
  4257b4:	push   DWORD PTR [eax]
  4257b6:	call   0x42764a
  4257bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4257be:	mov    ecx,DWORD PTR [ecx+0x19c]
  4257c4:	mov    DWORD PTR [ecx],eax
  4257c6:	mov    eax,DWORD PTR [ebp+0x8]
  4257c9:	mov    edi,DWORD PTR [eax+0x1d8]
  4257cf:	mov    esi,DWORD PTR [ebp+0x8]
  4257d2:	xor    eax,eax
  4257d4:	lea    edx,[ebp-0x7c]
  4257d7:	call   0x4279de
  4257dc:	push   eax
  4257dd:	mov    eax,DWORD PTR [ebp+0x8]
  4257e0:	mov    eax,DWORD PTR [eax+0x19c]
  4257e6:	push   DWORD PTR [eax]
  4257e8:	call   DWORD PTR [edi+0x8]
  4257eb:	mov    DWORD PTR [ebp-0x20],eax
  4257ee:	mov    eax,DWORD PTR [ebp+0x8]
  4257f1:	mov    edi,DWORD PTR [eax+0x1d8]
  4257f7:	mov    esi,DWORD PTR [ebp+0x8]
  4257fa:	xor    eax,eax
  4257fc:	lea    edx,[ebp-0x90]
  425802:	call   0x4279de
  425807:	push   eax
  425808:	mov    eax,DWORD PTR [ebp+0x8]
  42580b:	mov    eax,DWORD PTR [eax+0x19c]
  425811:	push   DWORD PTR [eax]
  425813:	call   DWORD PTR [edi+0x8]
  425816:	and    DWORD PTR [ebp-0x1c],0x0
  42581a:	mov    eax,DWORD PTR [ebp-0x1c]
  42581d:	and    eax,0x7
  425820:	add    eax,0x31
  425823:	push   eax
  425824:	call   DWORD PTR [ebp-0x20]
  425827:	test   eax,eax
  425829:	jne    0x425830
  42582b:	and    DWORD PTR [ebp-0x10],eax
  42582e:	jmp    0x425858
  425830:	mov    eax,DWORD PTR [ebp+0x8]
  425833:	mov    edi,DWORD PTR [eax+0x1d8]
  425839:	mov    esi,DWORD PTR [ebp+0x8]
  42583c:	xor    eax,eax
  42583e:	lea    edx,[ebp-0x68]
  425841:	call   0x4279de
  425846:	push   eax
  425847:	mov    eax,DWORD PTR [ebp+0x8]
  42584a:	mov    eax,DWORD PTR [eax+0x198]
  425850:	push   DWORD PTR [eax]
  425852:	call   DWORD PTR [edi+0x8]
  425855:	mov    DWORD PTR [ebp-0x10],eax
  425858:	inc    DWORD PTR [ebp-0x1c]
  42585b:	cmp    DWORD PTR [ebp-0x1c],0x10
  42585f:	jb     0x42581a
  425861:	mov    eax,DWORD PTR [ebp-0x18]
  425864:	mov    esi,DWORD PTR [ebp+0x8]
  425867:	xor    eax,ebx
  425869:	mov    edi,0x3272e0
  42586e:	add    eax,edi
  425870:	lea    edx,[ebp-0xe4]
  425876:	call   0x4279de
  42587b:	push   eax
  42587c:	mov    eax,DWORD PTR [ebp-0x14]
  42587f:	mov    esi,DWORD PTR [ebp+0x8]
  425882:	xor    eax,ebx
  425884:	add    eax,edi
  425886:	lea    edx,[ebp-0x104]
  42588c:	call   0x4279de
  425891:	push   eax
  425892:	call   DWORD PTR [ebp-0x10]
  425895:	mov    ecx,DWORD PTR [ebp-0x14]
  425898:	xor    ecx,ebx
  42589a:	add    ecx,edi
  42589c:	cmp    ecx,eax
  42589e:	jne    0x4258a7
  4258a0:	mov    DWORD PTR [ebp-0x34],0x1
  4258a7:	mov    eax,DWORD PTR [ebp-0x18]
  4258aa:	mov    ecx,DWORD PTR [ebp-0x8]
  4258ad:	xor    eax,ebx
  4258af:	lea    eax,[eax+ecx*1+0x3272e0]
  4258b6:	mov    DWORD PTR [ebp-0x8],eax
  4258b9:	mov    eax,DWORD PTR [ebp-0x34]
  4258bc:	test   eax,eax
  4258be:	je     0x4258d2
  4258c0:	mov    eax,DWORD PTR [ebp-0x18]
  4258c3:	mov    ecx,DWORD PTR [ebp-0x38]
  4258c6:	xor    eax,ebx
  4258c8:	lea    eax,[eax+ecx*1+0x3272e0]
  4258cf:	mov    DWORD PTR [ebp-0x38],eax
  4258d2:	mov    eax,DWORD PTR [ebp-0x18]
  4258d5:	xor    eax,ebx
  4258d7:	mov    ecx,0xffcd8d20
  4258dc:	sub    ecx,eax
  4258de:	add    ecx,DWORD PTR [ebp-0x24]
  4258e1:	mov    eax,DWORD PTR [ebp-0x8]
  4258e4:	cmp    eax,ecx
  4258e6:	jbe    0x42578f
  4258ec:	mov    esi,edi
  4258ee:	mov    eax,DWORD PTR [ebp-0x38]
  4258f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4258f4:	cmp    ecx,eax
  4258f6:	jne    0x425909
  4258f8:	push   DWORD PTR [ebp+0x8]
  4258fb:	lea    eax,[ebp-0x40]
  4258fe:	push   eax
  4258ff:	call   0x428457
  425904:	mov    DWORD PTR [ebp-0x28],eax
  425907:	jmp    0x425915
  425909:	mov    eax,DWORD PTR [ebp-0x28]
  42590c:	mov    ecx,DWORD PTR [ebp-0x18]
  42590f:	xor    ecx,ebx
  425911:	add    ecx,esi
  425913:	xor    DWORD PTR [eax],ecx
  425915:	mov    eax,DWORD PTR [ebp-0x14]
  425918:	mov    ecx,DWORD PTR [ebp-0x28]
  42591b:	xor    eax,ebx
  42591d:	add    eax,esi
  42591f:	cmp    eax,ecx
  425921:	je     0x426099
  425927:	mov    eax,DWORD PTR [ebp-0x14]
  42592a:	mov    ecx,DWORD PTR [ebp-0x40]
  42592d:	xor    eax,ebx
  42592f:	add    eax,esi
  425931:	cmp    eax,ecx
  425933:	je     0x426099
  425939:	mov    eax,DWORD PTR [ebp-0x14]
  42593c:	xor    eax,ebx
  42593e:	add    eax,esi
  425940:	jmp    0x42595e
  425942:	mov    edi,DWORD PTR [ebp-0x28]
  425945:	mov    cl,al
  425947:	and    cl,0x1f
  42594a:	or     dl,0xff
  42594d:	sub    dl,cl
  42594f:	add    BYTE PTR [edi+eax*1],dl
  425952:	mov    ecx,DWORD PTR [ebp-0x18]
  425955:	xor    ecx,ebx
  425957:	lea    eax,[eax+ecx*1+0x3272e0]
  42595e:	mov    ecx,DWORD PTR [ebp-0x40]
  425961:	cmp    eax,ecx
  425963:	jb     0x425942
  425965:	mov    eax,DWORD PTR [ebp-0x40]
  425968:	mov    DWORD PTR [ebp-0x24],eax
  42596b:	mov    eax,DWORD PTR [ebp-0x28]
  42596e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425975:	mov    DWORD PTR [ebp-0xbc],eax
  42597b:	mov    edi,0xf89c85b8
  425980:	mov    DWORD PTR [ebp-0x30],edi
  425983:	mov    eax,DWORD PTR [ebp-0x38]
  425986:	xor    eax,ebx
  425988:	add    eax,esi
  42598a:	mov    DWORD PTR [ebp-0xc],eax
  42598d:	mov    eax,DWORD PTR [ebp-0x38]
  425990:	xor    eax,ebx
  425992:	add    eax,esi
  425994:	mov    DWORD PTR [ebp-0x8],eax
  425997:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  42599e:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  4259a5:	mov    eax,DWORD PTR [ebp-0x38]
  4259a8:	mov    ecx,DWORD PTR [ebp-0x24]
  4259ab:	xor    eax,ebx
  4259ad:	add    eax,esi
  4259af:	cmp    ecx,eax
  4259b1:	je     0x425bb0
  4259b7:	jmp    0x425b8c
  4259bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4259bf:	mov    eax,DWORD PTR [ebp-0x24]
  4259c2:	sub    eax,ecx
  4259c4:	mov    ecx,DWORD PTR [ebp-0x48]
  4259c7:	xor    ecx,ebx
  4259c9:	add    ecx,esi
  4259cb:	xor    edx,edx
  4259cd:	div    ecx
  4259cf:	mov    DWORD PTR [ebp-0x8],eax
  4259d2:	mov    eax,DWORD PTR [ebp-0x54]
  4259d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4259d8:	xor    eax,ebx
  4259da:	add    eax,esi
  4259dc:	cmp    ecx,eax
  4259de:	jbe    0x4259ea
  4259e0:	mov    eax,DWORD PTR [ebp-0x54]
  4259e3:	xor    eax,ebx
  4259e5:	add    eax,esi
  4259e7:	mov    DWORD PTR [ebp-0x8],eax
  4259ea:	mov    eax,DWORD PTR [ebp-0x48]
  4259ed:	mov    ecx,DWORD PTR [ebp-0x8]
  4259f0:	xor    eax,ebx
  4259f2:	add    eax,esi
  4259f4:	imul   eax,ecx
  4259f7:	mov    DWORD PTR [ebp-0x8],eax
  4259fa:	mov    eax,DWORD PTR [ebp-0x38]
  4259fd:	mov    ecx,DWORD PTR [ebp-0x8]
  425a00:	xor    eax,ebx
  425a02:	add    eax,esi
  425a04:	cmp    ecx,eax
  425a06:	je     0x425b7a
  425a0c:	mov    eax,DWORD PTR [ebp-0x8]
  425a0f:	mov    DWORD PTR [ebp-0x10],eax
  425a12:	mov    eax,DWORD PTR [ebp-0xc]
  425a15:	add    eax,DWORD PTR [ebp-0xbc]
  425a1b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425a22:	mov    DWORD PTR [ebp-0x34],edi
  425a25:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  425a2f:	mov    DWORD PTR [ebp-0x8],eax
  425a32:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  425a39:	mov    DWORD PTR [ebp-0x1c],edi
  425a3c:	mov    eax,DWORD PTR [ebp-0x20]
  425a3f:	xor    eax,ebx
  425a41:	add    eax,esi
  425a43:	jmp    0x425b39
  425a48:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  425a52:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  425a5c:	mov    eax,DWORD PTR [ebp-0x1c]
  425a5f:	mov    ecx,DWORD PTR [ebp-0x44]
  425a62:	xor    eax,ebx
  425a64:	add    eax,esi
  425a66:	imul   eax,ecx
  425a69:	mov    ecx,DWORD PTR [ebp-0x8]
  425a6c:	mov    al,BYTE PTR [eax+ecx*1]
  425a6f:	mov    BYTE PTR [ebp-0x2],al
  425a72:	mov    eax,DWORD PTR [ebp-0x1c]
  425a75:	mov    ecx,DWORD PTR [ebp-0x44]
  425a78:	xor    eax,ebx
  425a7a:	add    eax,esi
  425a7c:	imul   eax,ecx
  425a7f:	mov    ecx,DWORD PTR [ebp-0xa8]
  425a85:	xor    ecx,ebx
  425a87:	add    eax,ecx
  425a89:	mov    ecx,DWORD PTR [ebp-0x8]
  425a8c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425a94:	mov    ecx,DWORD PTR [ebp-0xb0]
  425a9a:	xor    ecx,ebx
  425a9c:	lea    eax,[ecx+eax*1+0x3272e0]
  425aa3:	movzx  ecx,BYTE PTR [ebp-0x2]
  425aa7:	xor    ecx,eax
  425aa9:	mov    BYTE PTR [ebp-0x2],cl
  425aac:	mov    al,BYTE PTR [ebp-0x2]
  425aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ab2:	mov    edx,DWORD PTR [ebp-0x44]
  425ab5:	xor    ecx,ebx
  425ab7:	add    ecx,esi
  425ab9:	imul   ecx,edx
  425abc:	mov    edx,DWORD PTR [ebp-0x8]
  425abf:	mov    BYTE PTR [ecx+edx*1],al
  425ac2:	mov    eax,DWORD PTR [ebp-0x1c]
  425ac5:	mov    ecx,DWORD PTR [ebp-0x44]
  425ac8:	xor    eax,ebx
  425aca:	add    eax,esi
  425acc:	imul   eax,ecx
  425acf:	mov    ecx,DWORD PTR [ebp-0x8]
  425ad2:	mov    al,BYTE PTR [eax+ecx*1]
  425ad5:	mov    BYTE PTR [ebp-0x2],al
  425ad8:	mov    eax,DWORD PTR [ebp-0x1c]
  425adb:	mov    ecx,DWORD PTR [ebp-0x44]
  425ade:	xor    eax,ebx
  425ae0:	add    eax,esi
  425ae2:	imul   eax,ecx
  425ae5:	mov    ecx,DWORD PTR [ebp-0x34]
  425ae8:	xor    ecx,ebx
  425aea:	add    eax,ecx
  425aec:	mov    ecx,DWORD PTR [ebp-0x8]
  425aef:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425af7:	mov    ecx,DWORD PTR [ebp-0xb8]
  425afd:	xor    ecx,ebx
  425aff:	lea    eax,[ecx+eax*1+0x3272e0]
  425b06:	movzx  ecx,BYTE PTR [ebp-0x2]
  425b0a:	xor    ecx,eax
  425b0c:	mov    BYTE PTR [ebp-0x2],cl
  425b0f:	mov    al,BYTE PTR [ebp-0x2]
  425b12:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b15:	mov    edx,DWORD PTR [ebp-0x44]
  425b18:	xor    ecx,ebx
  425b1a:	add    ecx,esi
  425b1c:	imul   ecx,edx
  425b1f:	mov    edx,DWORD PTR [ebp-0x8]
  425b22:	mov    BYTE PTR [ecx+edx*1],al
  425b25:	mov    eax,DWORD PTR [ebp-0x2c]
  425b28:	mov    ecx,DWORD PTR [ebp-0x34]
  425b2b:	xor    eax,ebx
  425b2d:	xor    ecx,ebx
  425b2f:	add    eax,esi
  425b31:	add    ecx,esi
  425b33:	imul   eax,ecx
  425b36:	add    eax,DWORD PTR [ebp-0x44]
  425b39:	mov    DWORD PTR [ebp-0x44],eax
  425b3c:	mov    eax,DWORD PTR [ebp-0x44]
  425b3f:	mov    ecx,DWORD PTR [ebp-0x10]
  425b42:	cmp    ecx,eax
  425b44:	jb     0x425a48
  425b4a:	mov    eax,DWORD PTR [ebp-0x34]
  425b4d:	mov    ecx,DWORD PTR [ebp-0x10]
  425b50:	xor    eax,ebx
  425b52:	add    eax,esi
  425b54:	imul   eax,ecx
  425b57:	mov    ecx,DWORD PTR [ebp-0x20]
  425b5a:	xor    ecx,ebx
  425b5c:	add    ecx,esi
  425b5e:	or     eax,ecx
  425b60:	mov    ecx,DWORD PTR [ebp-0x30]
  425b63:	xor    ecx,ebx
  425b65:	add    eax,ecx
  425b67:	mov    ecx,DWORD PTR [ebp-0x30]
  425b6a:	xor    ecx,ebx
  425b6c:	add    eax,ecx
  425b6e:	mov    ecx,DWORD PTR [ebp-0xc]
  425b71:	lea    eax,[eax+ecx*1+0x64e5c0]
  425b78:	jmp    0x425b89
  425b7a:	mov    eax,DWORD PTR [ebp-0x30]
  425b7d:	mov    ecx,DWORD PTR [ebp-0xc]
  425b80:	xor    eax,ebx
  425b82:	lea    eax,[eax+ecx*1+0x3272e0]
  425b89:	mov    DWORD PTR [ebp-0xc],eax
  425b8c:	mov    eax,DWORD PTR [ebp-0x30]
  425b8f:	xor    eax,ebx
  425b91:	mov    ecx,0xffcd8d20
  425b96:	sub    ecx,eax
  425b98:	add    ecx,DWORD PTR [ebp-0x24]
  425b9b:	mov    eax,DWORD PTR [ebp-0x30]
  425b9e:	mov    edx,DWORD PTR [ebp-0xc]
  425ba1:	xor    eax,ebx
  425ba3:	add    eax,esi
  425ba5:	imul   eax,edx
  425ba8:	cmp    eax,ecx
  425baa:	jbe    0x4259bc
  425bb0:	mov    eax,DWORD PTR [ebp-0x14]
  425bb3:	mov    ecx,DWORD PTR [ebp-0x40]
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	mov    edx,DWORD PTR [ebp-0x4c]
  425bbc:	mov    eax,DWORD PTR [eax+0x1d8]
  425bc2:	xor    edx,ebx
  425bc4:	add    edx,esi
  425bc6:	push   edx
  425bc7:	mov    edx,DWORD PTR [ebp-0x3c]
  425bca:	xor    edx,ebx
  425bcc:	add    edx,esi
  425bce:	push   edx
  425bcf:	push   ecx
  425bd0:	mov    DWORD PTR [ebp-0x2c],ecx
  425bd3:	mov    ecx,DWORD PTR [ebp-0x14]
  425bd6:	xor    ecx,ebx
  425bd8:	add    ecx,esi
  425bda:	push   ecx
  425bdb:	call   DWORD PTR [eax+0x14]
  425bde:	mov    edi,eax
  425be0:	mov    eax,DWORD PTR [ebp-0x14]
  425be3:	xor    eax,ebx
  425be5:	add    eax,esi
  425be7:	cmp    eax,edi
  425be9:	je     0x425c44
  425beb:	mov    eax,DWORD PTR [ebp-0x14]
  425bee:	jmp    0x425c11
  425bf0:	mov    ecx,DWORD PTR [ebp-0x28]
  425bf3:	xor    eax,ebx
  425bf5:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  425bfc:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  425c03:	mov    ecx,DWORD PTR [ebp-0x18]
  425c06:	xor    ecx,ebx
  425c08:	lea    eax,[ecx+eax*1+0x3272e0]
  425c0f:	xor    eax,ebx
  425c11:	mov    ecx,DWORD PTR [ebp-0x40]
  425c14:	sub    ecx,esi
  425c16:	xor    ecx,ebx
  425c18:	cmp    eax,ecx
  425c1a:	jne    0x425bf0
  425c1c:	mov    eax,DWORD PTR [ebp+0x8]
  425c1f:	mov    ecx,DWORD PTR [ebp-0x50]
  425c22:	mov    eax,DWORD PTR [eax+0x1d8]
  425c28:	xor    ecx,ebx
  425c2a:	add    ecx,esi
  425c2c:	push   ecx
  425c2d:	mov    ecx,DWORD PTR [ebp-0x14]
  425c30:	xor    ecx,ebx
  425c32:	add    ecx,esi
  425c34:	push   ecx
  425c35:	push   DWORD PTR [ebp-0x28]
  425c38:	call   DWORD PTR [eax+0x18]
  425c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  425c3e:	mov    DWORD PTR [ebp-0x28],edi
  425c41:	mov    DWORD PTR [ebp-0x40],eax
  425c44:	mov    edi,DWORD PTR [ebp-0x28]
  425c47:	mov    eax,DWORD PTR [ebp-0x18]
  425c4a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c4d:	xor    eax,ebx
  425c4f:	mov    DWORD PTR [ebp-0x2c],edi
  425c52:	add    eax,esi
  425c54:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  425c5b:	mov    DWORD PTR [ebp-0x58],0x27123f12
  425c62:	jmp    0x425c96
  425c64:	xor    ecx,ebx
  425c66:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  425c6d:	xor    dl,0x73
  425c70:	sub    dl,0x9
  425c73:	mov    DWORD PTR [ebp-0x3c],ecx
  425c76:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  425c7e:	movzx  edx,dl
  425c81:	cmp    ecx,edx
  425c83:	jne    0x425ca0
  425c85:	mov    ecx,DWORD PTR [ebp-0x18]
  425c88:	mov    edx,DWORD PTR [ebp-0x3c]
  425c8b:	xor    ecx,ebx
  425c8d:	lea    ecx,[ecx+edx*1+0x3272e0]
  425c94:	xor    ecx,ebx
  425c96:	cmp    ecx,0xf89c85b1
  425c9c:	jne    0x425c64
  425c9e:	jmp    0x425ca7
  425ca0:	mov    eax,DWORD PTR [ebp-0x14]
  425ca3:	xor    eax,ebx
  425ca5:	add    eax,esi
  425ca7:	mov    ecx,DWORD PTR [ebp-0x14]
  425caa:	xor    ecx,ebx
  425cac:	add    ecx,esi
  425cae:	cmp    ecx,eax
  425cb0:	je     0x425e23
  425cb6:	mov    eax,DWORD PTR [edi+0x8]
  425cb9:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425cc0:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  425cc7:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  425cce:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425cd5:	mov    DWORD PTR [ebp-0x10],eax
  425cd8:	mov    eax,DWORD PTR [ebp+0x8]
  425cdb:	mov    ecx,DWORD PTR [ebp-0x20]
  425cde:	xor    ecx,ebx
  425ce0:	add    ecx,esi
  425ce2:	push   ecx
  425ce3:	mov    ecx,DWORD PTR [ebp-0x48]
  425ce6:	mov    eax,DWORD PTR [eax+0x1d8]
  425cec:	xor    ecx,ebx
  425cee:	add    ecx,esi
  425cf0:	push   ecx
  425cf1:	mov    ecx,DWORD PTR [ebp-0x3c]
  425cf4:	xor    ecx,ebx
  425cf6:	add    ecx,esi
  425cf8:	push   ecx
  425cf9:	mov    ecx,DWORD PTR [ebp-0xc]
  425cfc:	xor    ecx,ebx
  425cfe:	add    ecx,esi
  425d00:	push   ecx
  425d01:	call   DWORD PTR [eax+0x14]
  425d04:	mov    edi,eax
  425d06:	mov    eax,DWORD PTR [ebp+0x8]
  425d09:	mov    ecx,DWORD PTR [ebp-0x20]
  425d0c:	mov    eax,DWORD PTR [eax+0x1d8]
  425d12:	xor    ecx,ebx
  425d14:	add    ecx,esi
  425d16:	push   ecx
  425d17:	mov    ecx,DWORD PTR [ebp-0x48]
  425d1a:	xor    ecx,ebx
  425d1c:	add    ecx,esi
  425d1e:	push   ecx
  425d1f:	mov    ecx,DWORD PTR [ebp-0xc]
  425d22:	push   DWORD PTR [ebp-0x10]
  425d25:	xor    ecx,ebx
  425d27:	add    ecx,esi
  425d29:	push   ecx
  425d2a:	call   DWORD PTR [eax+0x14]
  425d2d:	mov    ecx,DWORD PTR [ebp-0xc]
  425d30:	xor    ecx,ebx
  425d32:	add    ecx,esi
  425d34:	mov    DWORD PTR [ebp-0x20],eax
  425d37:	cmp    ecx,edi
  425d39:	je     0x4260c6
  425d3f:	mov    ecx,DWORD PTR [ebp-0xc]
  425d42:	xor    ecx,ebx
  425d44:	add    ecx,esi
  425d46:	cmp    ecx,eax
  425d48:	je     0x4260c6
  425d4e:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  425d55:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  425d5c:	mov    ecx,DWORD PTR [ebp-0x3c]
  425d5f:	xor    cl,0x99
  425d62:	sub    cl,0x20
  425d65:	mov    BYTE PTR [edi],cl
  425d67:	mov    ecx,DWORD PTR [ebp-0xc]
  425d6a:	xor    cl,0x99
  425d6d:	sub    cl,0x20
  425d70:	mov    BYTE PTR [edi+0x1],cl
  425d73:	mov    ecx,DWORD PTR [ebp-0x4c]
  425d76:	xor    cl,0x99
  425d79:	sub    cl,0x20
  425d7c:	mov    BYTE PTR [edi+0x2],cl
  425d7f:	and    DWORD PTR [ebp-0xb4],0x0
  425d86:	and    DWORD PTR [ebp-0xa4],0x0
  425d8d:	lea    ecx,[ebp-0xa4]
  425d93:	push   ecx
  425d94:	push   DWORD PTR [ebp-0x10]
  425d97:	push   eax
  425d98:	lea    eax,[ebp-0xb4]
  425d9e:	push   eax
  425d9f:	mov    eax,DWORD PTR [ebp-0x2c]
  425da2:	push   DWORD PTR [eax+0xc]
  425da5:	mov    eax,DWORD PTR [ebp-0x28]
  425da8:	add    eax,0x10
  425dab:	push   eax
  425dac:	push   edi
  425dad:	call   0x4250f9
  425db2:	mov    DWORD PTR [ebp-0x3c],eax
  425db5:	mov    eax,DWORD PTR [ebp+0x8]
  425db8:	mov    ecx,DWORD PTR [ebp-0x50]
  425dbb:	mov    eax,DWORD PTR [eax+0x1d8]
  425dc1:	xor    ecx,ebx
  425dc3:	add    ecx,esi
  425dc5:	push   ecx
  425dc6:	mov    ecx,DWORD PTR [ebp-0xc]
  425dc9:	xor    ecx,ebx
  425dcb:	add    ecx,esi
  425dcd:	push   ecx
  425dce:	push   edi
  425dcf:	call   DWORD PTR [eax+0x18]
  425dd2:	mov    eax,DWORD PTR [ebp-0x3c]
  425dd5:	add    eax,0xffcd8d20
  425dda:	xor    eax,ebx
  425ddc:	cmp    eax,0xf89c85b9
  425de1:	mov    eax,DWORD PTR [ebp+0x8]
  425de4:	mov    eax,DWORD PTR [eax+0x1d8]
  425dea:	mov    ecx,DWORD PTR [ebp-0x50]
  425ded:	jne    0x425e10
  425def:	xor    ecx,ebx
  425df1:	add    ecx,esi
  425df3:	push   ecx
  425df4:	mov    ecx,DWORD PTR [ebp-0xc]
  425df7:	xor    ecx,ebx
  425df9:	add    ecx,esi
  425dfb:	push   ecx
  425dfc:	push   DWORD PTR [ebp-0x28]
  425dff:	call   DWORD PTR [eax+0x18]
  425e02:	mov    eax,DWORD PTR [ebp-0x20]
  425e05:	mov    DWORD PTR [ebp-0x28],eax
  425e08:	mov    eax,DWORD PTR [ebp-0x10]
  425e0b:	mov    DWORD PTR [ebp-0x40],eax
  425e0e:	jmp    0x425e23
  425e10:	xor    ecx,ebx
  425e12:	add    ecx,esi
  425e14:	push   ecx
  425e15:	mov    ecx,DWORD PTR [ebp-0xc]
  425e18:	xor    ecx,ebx
  425e1a:	add    ecx,esi
  425e1c:	push   ecx
  425e1d:	push   DWORD PTR [ebp-0x20]
  425e20:	call   DWORD PTR [eax+0x18]
  425e23:	mov    eax,DWORD PTR [ebp-0x40]
  425e26:	mov    DWORD PTR [ebp-0x38],eax
  425e29:	mov    eax,DWORD PTR [ebp-0x28]
  425e2c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  425e33:	mov    DWORD PTR [ebp-0x3c],eax
  425e36:	mov    edi,0xf89c85b8
  425e3b:	mov    DWORD PTR [ebp-0x30],edi
  425e3e:	mov    eax,DWORD PTR [ebp-0x24]
  425e41:	xor    eax,ebx
  425e43:	add    eax,esi
  425e45:	mov    DWORD PTR [ebp-0xc],eax
  425e48:	mov    eax,DWORD PTR [ebp-0x24]
  425e4b:	xor    eax,ebx
  425e4d:	add    eax,esi
  425e4f:	mov    DWORD PTR [ebp-0x10],eax
  425e52:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  425e59:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  425e60:	mov    eax,DWORD PTR [ebp-0x24]
  425e63:	mov    ecx,DWORD PTR [ebp-0x38]
  425e66:	xor    eax,ebx
  425e68:	add    eax,esi
  425e6a:	cmp    ecx,eax
  425e6c:	je     0x426062
  425e72:	jmp    0x42603e
  425e77:	mov    ecx,DWORD PTR [ebp-0xc]
  425e7a:	mov    eax,DWORD PTR [ebp-0x38]
  425e7d:	sub    eax,ecx
  425e7f:	mov    ecx,DWORD PTR [ebp-0x48]
  425e82:	xor    ecx,ebx
  425e84:	add    ecx,esi
  425e86:	xor    edx,edx
  425e88:	div    ecx
  425e8a:	mov    DWORD PTR [ebp-0x10],eax
  425e8d:	mov    eax,DWORD PTR [ebp-0x20]
  425e90:	mov    ecx,DWORD PTR [ebp-0x10]
  425e93:	xor    eax,ebx
  425e95:	add    eax,esi
  425e97:	cmp    ecx,eax
  425e99:	jbe    0x425ea5
  425e9b:	mov    eax,DWORD PTR [ebp-0x20]
  425e9e:	xor    eax,ebx
  425ea0:	add    eax,esi
  425ea2:	mov    DWORD PTR [ebp-0x10],eax
  425ea5:	mov    eax,DWORD PTR [ebp-0x48]
  425ea8:	mov    ecx,DWORD PTR [ebp-0x10]
  425eab:	xor    eax,ebx
  425ead:	add    eax,esi
  425eaf:	imul   eax,ecx
  425eb2:	mov    DWORD PTR [ebp-0x10],eax
  425eb5:	mov    eax,DWORD PTR [ebp-0x24]
  425eb8:	mov    ecx,DWORD PTR [ebp-0x10]
  425ebb:	xor    eax,ebx
  425ebd:	add    eax,esi
  425ebf:	cmp    ecx,eax
  425ec1:	je     0x42602c
  425ec7:	mov    eax,DWORD PTR [ebp-0x10]
  425eca:	mov    DWORD PTR [ebp-0x34],eax
  425ecd:	mov    eax,DWORD PTR [ebp-0xc]
  425ed0:	add    eax,DWORD PTR [ebp-0x3c]
  425ed3:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425eda:	mov    DWORD PTR [ebp-0x10],edi
  425edd:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  425ee4:	mov    DWORD PTR [ebp-0x1c],eax
  425ee7:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  425eee:	mov    DWORD PTR [ebp-0x8],edi
  425ef1:	mov    eax,DWORD PTR [ebp-0x54]
  425ef4:	xor    eax,ebx
  425ef6:	add    eax,esi
  425ef8:	jmp    0x425feb
  425efd:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  425f07:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  425f11:	mov    eax,DWORD PTR [ebp-0x8]
  425f14:	mov    ecx,DWORD PTR [ebp-0x18]
  425f17:	xor    eax,ebx
  425f19:	add    eax,esi
  425f1b:	imul   eax,ecx
  425f1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f21:	mov    al,BYTE PTR [eax+ecx*1]
  425f24:	mov    BYTE PTR [ebp-0x1],al
  425f27:	mov    eax,DWORD PTR [ebp-0x8]
  425f2a:	mov    ecx,DWORD PTR [ebp-0x18]
  425f2d:	xor    eax,ebx
  425f2f:	add    eax,esi
  425f31:	imul   eax,ecx
  425f34:	mov    ecx,DWORD PTR [ebp-0x4c]
  425f37:	xor    ecx,ebx
  425f39:	add    eax,ecx
  425f3b:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f3e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425f46:	mov    ecx,DWORD PTR [ebp-0xac]
  425f4c:	xor    ecx,ebx
  425f4e:	lea    eax,[ecx+eax*1+0x3272e0]
  425f55:	movzx  ecx,BYTE PTR [ebp-0x1]
  425f59:	xor    ecx,eax
  425f5b:	mov    BYTE PTR [ebp-0x1],cl
  425f5e:	mov    al,BYTE PTR [ebp-0x1]
  425f61:	mov    ecx,DWORD PTR [ebp-0x8]
  425f64:	mov    edx,DWORD PTR [ebp-0x18]
  425f67:	xor    ecx,ebx
  425f69:	add    ecx,esi
  425f6b:	imul   ecx,edx
  425f6e:	mov    edx,DWORD PTR [ebp-0x1c]
  425f71:	mov    BYTE PTR [ecx+edx*1],al
  425f74:	mov    eax,DWORD PTR [ebp-0x8]
  425f77:	mov    ecx,DWORD PTR [ebp-0x18]
  425f7a:	xor    eax,ebx
  425f7c:	add    eax,esi
  425f7e:	imul   eax,ecx
  425f81:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f84:	mov    al,BYTE PTR [eax+ecx*1]
  425f87:	mov    BYTE PTR [ebp-0x1],al
  425f8a:	mov    eax,DWORD PTR [ebp-0x8]
  425f8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f90:	xor    eax,ebx
  425f92:	add    eax,esi
  425f94:	imul   eax,ecx
  425f97:	mov    ecx,DWORD PTR [ebp-0x10]
  425f9a:	xor    ecx,ebx
  425f9c:	add    eax,ecx
  425f9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fa1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425fa9:	mov    ecx,DWORD PTR [ebp-0x9c]
  425faf:	xor    ecx,ebx
  425fb1:	lea    eax,[ecx+eax*1+0x3272e0]
  425fb8:	movzx  ecx,BYTE PTR [ebp-0x1]
  425fbc:	xor    ecx,eax
  425fbe:	mov    BYTE PTR [ebp-0x1],cl
  425fc1:	mov    al,BYTE PTR [ebp-0x1]
  425fc4:	mov    ecx,DWORD PTR [ebp-0x8]
  425fc7:	mov    edx,DWORD PTR [ebp-0x18]
  425fca:	xor    ecx,ebx
  425fcc:	add    ecx,esi
  425fce:	imul   ecx,edx
  425fd1:	mov    edx,DWORD PTR [ebp-0x1c]
  425fd4:	mov    BYTE PTR [ecx+edx*1],al
  425fd7:	mov    eax,DWORD PTR [ebp-0x2c]
  425fda:	mov    ecx,DWORD PTR [ebp-0x10]
  425fdd:	xor    eax,ebx
  425fdf:	xor    ecx,ebx
  425fe1:	add    eax,esi
  425fe3:	add    ecx,esi
  425fe5:	imul   eax,ecx
  425fe8:	add    eax,DWORD PTR [ebp-0x18]
  425feb:	mov    DWORD PTR [ebp-0x18],eax
  425fee:	mov    eax,DWORD PTR [ebp-0x18]
  425ff1:	mov    ecx,DWORD PTR [ebp-0x34]
  425ff4:	cmp    ecx,eax
  425ff6:	jb     0x425efd
  425ffc:	mov    eax,DWORD PTR [ebp-0x10]
  425fff:	mov    ecx,DWORD PTR [ebp-0x34]
  426002:	xor    eax,ebx
  426004:	add    eax,esi
  426006:	imul   eax,ecx
  426009:	mov    ecx,DWORD PTR [ebp-0x54]
  42600c:	xor    ecx,ebx
  42600e:	add    ecx,esi
  426010:	or     eax,ecx
  426012:	mov    ecx,DWORD PTR [ebp-0x30]
  426015:	xor    ecx,ebx
  426017:	add    eax,ecx
  426019:	mov    ecx,DWORD PTR [ebp-0x30]
  42601c:	xor    ecx,ebx
  42601e:	add    eax,ecx
  426020:	mov    ecx,DWORD PTR [ebp-0xc]
  426023:	lea    eax,[eax+ecx*1+0x64e5c0]
  42602a:	jmp    0x42603b
  42602c:	mov    eax,DWORD PTR [ebp-0x30]
  42602f:	mov    ecx,DWORD PTR [ebp-0xc]
  426032:	xor    eax,ebx
  426034:	lea    eax,[eax+ecx*1+0x3272e0]
  42603b:	mov    DWORD PTR [ebp-0xc],eax
  42603e:	mov    eax,DWORD PTR [ebp-0x30]
  426041:	xor    eax,ebx
  426043:	mov    ecx,0xffcd8d20
  426048:	sub    ecx,eax
  42604a:	add    ecx,DWORD PTR [ebp-0x38]
  42604d:	mov    eax,DWORD PTR [ebp-0x30]
  426050:	mov    edx,DWORD PTR [ebp-0xc]
  426053:	xor    eax,ebx
  426055:	add    eax,esi
  426057:	imul   eax,edx
  42605a:	cmp    eax,ecx
  42605c:	jbe    0x425e77
  426062:	push   DWORD PTR [ebp+0x8]
  426065:	mov    eax,DWORD PTR [ebp+0x8]
  426068:	push   DWORD PTR [eax+0x1cc]
  42606e:	lea    eax,[ebp-0xa0]
  426074:	push   eax
  426075:	mov    eax,DWORD PTR [ebp+0x8]
  426078:	mov    eax,DWORD PTR [eax+0x1c4]
  42607e:	push   DWORD PTR [eax]
  426080:	mov    eax,DWORD PTR [ebp+0x8]
  426083:	mov    eax,DWORD PTR [eax+0x1c0]
  426089:	push   DWORD PTR [eax]
  42608b:	push   DWORD PTR [ebp-0x40]
  42608e:	push   DWORD PTR [ebp-0x28]
  426091:	call   0x426b67
  426096:	mov    DWORD PTR [ebp-0x3c],eax
  426099:	mov    eax,DWORD PTR [ebp-0x14]
  42609c:	mov    ecx,DWORD PTR [ebp-0x28]
  42609f:	xor    eax,ebx
  4260a1:	add    eax,esi
  4260a3:	cmp    eax,ecx
  4260a5:	je     0x4260c6
  4260a7:	mov    eax,DWORD PTR [ebp+0x8]
  4260aa:	mov    ecx,DWORD PTR [ebp-0x50]
  4260ad:	mov    eax,DWORD PTR [eax+0x1d8]
  4260b3:	xor    ecx,ebx
  4260b5:	add    ecx,esi
  4260b7:	push   ecx
  4260b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4260bb:	xor    ecx,ebx
  4260bd:	add    ecx,esi
  4260bf:	push   ecx
  4260c0:	push   DWORD PTR [ebp-0x28]
  4260c3:	call   DWORD PTR [eax+0x18]
  4260c6:	pop    edi
  4260c7:	pop    esi
  4260c8:	pop    ebx
  4260c9:	leave  
  4260ca:	ret    0x4
  4260cd:	push   ebp
  4260ce:	mov    ebp,esp
  4260d0:	push   ecx
  4260d1:	push   ecx
  4260d2:	lea    eax,[ebp-0x8]
  4260d5:	mov    DWORD PTR [ebp-0x4],eax
  4260d8:	push   esi
  4260d9:	mov    esi,DWORD PTR [ebp-0x4]
  4260dc:	mov    eax,0xf881ba0f
  4260e1:	mov    DWORD PTR [esi],eax
  4260e3:	mov    esi,DWORD PTR [ebp-0x8]
  4260e6:	cmp    esi,eax
  4260e8:	pop    esi
  4260e9:	jne    0x4260f3
  4260eb:	mov    BYTE PTR [ecx+0xa],0x7a
  4260ef:	mov    BYTE PTR [edx+0x8],0x2f
  4260f3:	mov    BYTE PTR [edx+0xa],0x7a
  4260f7:	mov    BYTE PTR [ecx+0x2],0x4
  4260fb:	leave  
  4260fc:	ret    
  4260fd:	push   ebp
  4260fe:	mov    ebp,esp
  426100:	push   ecx
  426101:	push   ecx
  426102:	lea    eax,[ebp-0x8]
  426105:	mov    DWORD PTR [ebp-0x4],eax
  426108:	mov    edx,DWORD PTR [ebp-0x4]
  42610b:	mov    eax,0xf88b0be3
  426110:	mov    DWORD PTR [edx],eax
  426112:	mov    edx,DWORD PTR [ebp-0x8]
  426115:	cmp    edx,eax
  426117:	jne    0x426128
  426119:	mov    eax,DWORD PTR [ebp+0x8]
  42611c:	mov    BYTE PTR [ecx+0x9],0xe
  426120:	mov    BYTE PTR [eax+0x7],0x47
  426124:	mov    BYTE PTR [ecx+0x6],0xf
  426128:	mov    BYTE PTR [ecx+0x3],0x1e
  42612c:	leave  
  42612d:	ret    0x4
  426130:	push   ebp
  426131:	mov    ebp,esp
  426133:	push   ecx
  426134:	push   ecx
  426135:	lea    eax,[ebp-0x8]
  426138:	mov    DWORD PTR [ebp-0x4],eax
  42613b:	mov    edx,DWORD PTR [ebp-0x4]
  42613e:	mov    eax,0x7e0da0f
  426143:	mov    DWORD PTR [edx],eax
  426145:	mov    edx,DWORD PTR [ebp-0x8]
  426148:	cmp    edx,eax
  42614a:	jne    0x426150
  42614c:	mov    BYTE PTR [ecx+0x7],0x47
  426150:	mov    eax,DWORD PTR [ebp+0x8]
  426153:	mov    BYTE PTR [ecx+0x1],0x1
  426157:	mov    BYTE PTR [eax+0x9],0x2e
  42615b:	leave  
  42615c:	ret    0x4
  42615f:	push   ebp
  426160:	mov    ebp,esp
  426162:	push   ecx
  426163:	push   ecx
  426164:	lea    eax,[ebp-0x8]
  426167:	mov    DWORD PTR [ebp-0x4],eax
  42616a:	push   esi
  42616b:	mov    esi,DWORD PTR [ebp-0x4]
  42616e:	mov    eax,0x7060e3e
  426173:	mov    DWORD PTR [esi],eax
  426175:	mov    esi,DWORD PTR [ebp-0x8]
  426178:	cmp    esi,eax
  42617a:	pop    esi
  42617b:	jne    0x426187
  42617d:	mov    BYTE PTR [edx+0x4],0xb
  426181:	mov    WORD PTR [ecx+0x3],0xb1e
  426187:	mov    BYTE PTR [edx],0x3f
  42618a:	leave  
  42618b:	ret    
  42618c:	push   ebp
  42618d:	mov    ebp,esp
  42618f:	push   ecx
  426190:	push   ecx
  426191:	lea    eax,[ebp-0x8]
  426194:	mov    DWORD PTR [ebp-0x4],eax
  426197:	mov    edx,DWORD PTR [ebp-0x4]
  42619a:	mov    eax,0xf8870b3f
  42619f:	mov    DWORD PTR [edx],eax
  4261a1:	mov    edx,DWORD PTR [ebp-0x8]
  4261a4:	cmp    edx,eax
  4261a6:	jne    0x4261b3
  4261a8:	mov    eax,DWORD PTR [ebp+0x8]
  4261ab:	mov    BYTE PTR [ecx+0x8],0xf
  4261af:	mov    BYTE PTR [eax+0x1],0x1
  4261b3:	mov    BYTE PTR [ecx+0x5],0xf3
  4261b7:	leave  
  4261b8:	ret    0x4
  4261bb:	push   esi
  4261bc:	mov    ecx,edi
  4261be:	call   0x42618c
  4261c3:	mov    edx,edi
  4261c5:	mov    ecx,esi
  4261c7:	mov    BYTE PTR [esi],0x1f
  4261ca:	call   0x42615f
  4261cf:	push   esi
  4261d0:	mov    ecx,edi
  4261d2:	mov    BYTE PTR [esi+0x5],0xf3
  4261d6:	call   0x426130
  4261db:	push   esi
  4261dc:	mov    BYTE PTR [esi+0x6],0xf
  4261e0:	call   0x4260fd
  4261e5:	mov    BYTE PTR [esi+0x2],0x4
  4261e9:	mov    edx,esi
  4261eb:	jmp    0x4260cd
  4261f0:	push   ebp
  4261f1:	mov    ebp,esp
  4261f3:	push   ecx
  4261f4:	mov    ecx,DWORD PTR [edx+0x194]
  4261fa:	push   esi
  4261fb:	mov    esi,DWORD PTR [ebp+0x8]
  4261fe:	mov    esi,DWORD PTR [esi]
  426200:	mov    DWORD PTR [ecx],esi
  426202:	mov    ecx,DWORD PTR [edx+0x194]
  426208:	mov    ecx,DWORD PTR [ecx]
  42620a:	mov    esi,DWORD PTR [edx+0x190]
  426210:	mov    DWORD PTR [esi],ecx
  426212:	mov    eax,DWORD PTR [edx+0x194]
  426218:	mov    ecx,DWORD PTR [eax]
  42621a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42621d:	add    ecx,DWORD PTR [eax]
  42621f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  426226:	mov    eax,DWORD PTR [ebp-0x4]
  426229:	movzx  ecx,WORD PTR [ecx+0x16]
  42622d:	xor    eax,0x7510899
  426232:	add    eax,0x3272e0
  426237:	pop    esi
  426238:	test   ecx,eax
  42623a:	je     0x426248
  42623c:	mov    eax,DWORD PTR [edx+0x1c8]
  426242:	mov    DWORD PTR [eax],0xf89c85b8
  426248:	leave  
  426249:	ret    0x4
  42624c:	push   ebp
  42624d:	mov    ebp,esp
  42624f:	sub    esp,0x70
  426252:	and    DWORD PTR [ebp-0x20],0x0
  426256:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  42625d:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  426264:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  42626b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426272:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426279:	mov    eax,DWORD PTR [ebp+0x20]
  42627c:	mov    eax,DWORD PTR [eax+0x194]
  426282:	mov    DWORD PTR [ebp-0xc],eax
  426285:	mov    eax,DWORD PTR [ebp+0x20]
  426288:	push   ebx
  426289:	push   esi
  42628a:	mov    esi,DWORD PTR [eax+0x190]
  426290:	mov    eax,DWORD PTR [ebp+0x20]
  426293:	mov    eax,DWORD PTR [eax+0x18c]
  426299:	mov    DWORD PTR [ebp-0x8],eax
  42629c:	mov    eax,DWORD PTR [eax]
  42629e:	push   edi
  42629f:	mov    DWORD PTR [ebp-0x4],esi
  4262a2:	test   eax,eax
  4262a4:	jne    0x4262b1
  4262a6:	push   DWORD PTR [ebp+0x1c]
  4262a9:	mov    edx,DWORD PTR [ebp+0x20]
  4262ac:	call   0x4261f0
  4262b1:	mov    eax,DWORD PTR [esi]
  4262b3:	mov    ebx,DWORD PTR [esi]
  4262b5:	add    ebx,DWORD PTR [eax+0x3c]
  4262b8:	mov    eax,DWORD PTR [ebp+0xc]
  4262bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4262be:	mov    ecx,DWORD PTR [ecx]
  4262c0:	mov    esi,0x7510899
  4262c5:	xor    eax,esi
  4262c7:	mov    edi,0x3272e0
  4262cc:	add    eax,edi
  4262ce:	cmp    eax,ecx
  4262d0:	jne    0x426508
  4262d6:	mov    eax,DWORD PTR [ebp-0xc]
  4262d9:	mov    eax,DWORD PTR [eax]
  4262db:	mov    DWORD PTR [ebp-0x10],eax
  4262de:	mov    eax,DWORD PTR [ebx+0x50]
  4262e1:	mov    DWORD PTR [ebp-0x68],eax
  4262e4:	mov    eax,DWORD PTR [ebp-0x18]
  4262e7:	xor    eax,esi
  4262e9:	add    eax,edi
  4262eb:	mov    DWORD PTR [ebp-0x64],eax
  4262ee:	mov    eax,DWORD PTR [ebp-0x14]
  4262f1:	and    DWORD PTR [ebp-0x6c],0x0
  4262f5:	xor    eax,esi
  4262f7:	add    eax,edi
  4262f9:	mov    DWORD PTR [ebp-0x60],eax
  4262fc:	lea    eax,[ebp-0x70]
  4262ff:	push   eax
  426300:	mov    eax,DWORD PTR [ebp+0x8]
  426303:	xor    eax,esi
  426305:	add    eax,edi
  426307:	push   eax
  426308:	mov    eax,DWORD PTR [ebp+0x20]
  42630b:	add    eax,0xaa
  426310:	push   eax
  426311:	mov    eax,DWORD PTR [ebp+0x20]
  426314:	mov    eax,DWORD PTR [eax+0x198]
  42631a:	mov    DWORD PTR [ebp-0x70],0x4
  426321:	push   DWORD PTR [eax]
  426323:	mov    eax,DWORD PTR [ebp+0x10]
  426326:	call   eax
  426328:	mov    ecx,DWORD PTR [ebp-0xc]
  42632b:	mov    ecx,DWORD PTR [ecx]
  42632d:	mov    edx,DWORD PTR [ebp-0x8]
  426330:	mov    DWORD PTR [ebp-0x6c],eax
  426333:	mov    DWORD PTR [ebp+0x1c],eax
  426336:	mov    DWORD PTR [edx],ecx
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	mov    DWORD PTR [ecx],eax
  42633d:	mov    eax,DWORD PTR [ebx+0x50]
  426340:	mov    DWORD PTR [ebp-0x68],eax
  426343:	mov    eax,DWORD PTR [ebp-0x1c]
  426346:	xor    eax,esi
  426348:	add    eax,edi
  42634a:	mov    DWORD PTR [ebp-0x64],eax
  42634d:	lea    eax,[ebp-0x20]
  426350:	mov    DWORD PTR [ebp-0x60],eax
  426353:	lea    eax,[ebp-0x70]
  426356:	push   eax
  426357:	mov    eax,DWORD PTR [ebp+0x8]
  42635a:	xor    eax,esi
  42635c:	add    eax,edi
  42635e:	push   eax
  42635f:	mov    eax,DWORD PTR [ebp+0x20]
  426362:	add    eax,0xee
  426367:	push   eax
  426368:	mov    eax,DWORD PTR [ebp+0x20]
  42636b:	mov    eax,DWORD PTR [eax+0x198]
  426371:	mov    DWORD PTR [ebp-0x70],0x4
  426378:	push   DWORD PTR [eax]
  42637a:	mov    eax,DWORD PTR [ebp+0x10]
  42637d:	call   eax
  42637f:	test   eax,eax
  426381:	je     0x4263a6
  426383:	and    DWORD PTR [ebp+0xc],0x0
  426387:	cmp    DWORD PTR [ebx+0x50],0x0
  42638b:	jbe    0x4263a6
  42638d:	mov    eax,DWORD PTR [ebp+0x1c]
  426390:	mov    ecx,DWORD PTR [ebp-0x10]
  426393:	sub    ecx,eax
  426395:	mov    dl,BYTE PTR [ecx+eax*1]
  426398:	inc    DWORD PTR [ebp+0xc]
  42639b:	mov    BYTE PTR [eax],dl
  42639d:	mov    edx,DWORD PTR [ebp+0xc]
  4263a0:	inc    eax
  4263a1:	cmp    edx,DWORD PTR [ebx+0x50]
  4263a4:	jb     0x426395
  4263a6:	mov    edx,DWORD PTR [ebp+0x1c]
  4263a9:	mov    ecx,DWORD PTR [edx+0x3c]
  4263ac:	add    ecx,edx
  4263ae:	mov    eax,DWORD PTR [ecx+0xa0]
  4263b4:	mov    ebx,DWORD PTR [ecx+0x28]
  4263b7:	add    eax,edx
  4263b9:	sub    edx,DWORD PTR [ebp-0x10]
  4263bc:	add    ebx,DWORD PTR [ebp+0x1c]
  4263bf:	mov    DWORD PTR [ebp+0xc],edx
  4263c2:	mov    DWORD PTR [ebp-0x2c],ecx
  4263c5:	mov    DWORD PTR [ebp-0x14],ebx
  4263c8:	mov    DWORD PTR [ebp-0x8],0x0
  4263cf:	jmp    0x42644b
  4263d1:	add    edx,0xfffffff8
  4263d4:	shr    edx,1
  4263d6:	mov    DWORD PTR [ebp-0x18],edx
  4263d9:	je     0x426437
  4263db:	lea    edx,[eax+0x8]
  4263de:	mov    DWORD PTR [ebp-0x4],edx
  4263e1:	mov    edx,DWORD PTR [ebp-0x18]
  4263e4:	mov    DWORD PTR [ebp-0x18],edx
  4263e7:	mov    edx,DWORD PTR [ebp-0x4]
  4263ea:	movzx  edx,WORD PTR [edx]
  4263ed:	mov    DWORD PTR [ebp-0x24],edx
  4263f0:	and    edx,0xfff
  4263f6:	mov    DWORD PTR [ebp-0x28],edx
  4263f9:	mov    edx,DWORD PTR [ebp-0x24]
  4263fc:	shr    edx,0xc
  4263ff:	add    edx,0xffcd8d20
  426405:	xor    edx,esi
  426407:	cmp    edx,0xf89c85ba
  42640d:	jne    0x42642e
  42640f:	mov    edx,DWORD PTR [ebp-0x28]
  426412:	add    edx,DWORD PTR [ebp+0x1c]
  426415:	mov    ebx,DWORD PTR [eax]
  426417:	cmp    DWORD PTR [ebx+edx*1],0x0
  42641b:	je     0x42642b
  42641d:	mov    ecx,DWORD PTR [ebp+0xc]
  426420:	add    ecx,DWORD PTR [ebx+edx*1]
  426423:	mov    ebx,DWORD PTR [eax]
  426425:	mov    DWORD PTR [edx+ebx*1],ecx
  426428:	mov    ecx,DWORD PTR [ebp-0x2c]
  42642b:	mov    ebx,DWORD PTR [ebp-0x14]
  42642e:	add    DWORD PTR [ebp-0x4],0x2
  426432:	dec    DWORD PTR [ebp-0x18]
  426435:	jne    0x4263e7
  426437:	mov    edx,DWORD PTR [ebp-0xc]
  42643a:	add    DWORD PTR [ebp-0x8],edx
  42643d:	mov    edx,DWORD PTR [ebp-0x8]
  426440:	cmp    edx,DWORD PTR [ecx+0xa4]
  426446:	jae    0x426459
  426448:	add    eax,DWORD PTR [ebp-0xc]
  42644b:	mov    edx,DWORD PTR [eax+0x4]
  42644e:	mov    DWORD PTR [ebp-0xc],edx
  426451:	test   edx,edx
  426453:	jne    0x4263d1
  426459:	mov    eax,DWORD PTR [ebp-0x10]
  42645c:	mov    DWORD PTR [ebp-0x6c],eax
  42645f:	mov    DWORD PTR [ebp-0x70],0x4
  426466:	mov    eax,DWORD PTR [ecx+0x50]
  426469:	mov    DWORD PTR [ebp-0x68],eax
  42646c:	mov    eax,DWORD PTR [ebp-0x1c]
  42646f:	xor    eax,esi
  426471:	add    eax,edi
  426473:	mov    DWORD PTR [ebp-0x64],eax
  426476:	lea    eax,[ebp-0x20]
  426479:	mov    DWORD PTR [ebp-0x60],eax
  42647c:	lea    eax,[ebp-0x70]
  42647f:	push   eax
  426480:	mov    eax,DWORD PTR [ebp+0x8]
  426483:	xor    eax,esi
  426485:	add    eax,edi
  426487:	push   eax
  426488:	mov    eax,DWORD PTR [ebp+0x20]
  42648b:	add    eax,0xee
  426490:	push   eax
  426491:	mov    eax,DWORD PTR [ebp+0x20]
  426494:	mov    eax,DWORD PTR [eax+0x198]
  42649a:	push   DWORD PTR [eax]
  42649c:	mov    eax,DWORD PTR [ebp+0x10]
  42649f:	call   eax
  4264a1:	mov    eax,DWORD PTR [ebp+0x20]
  4264a4:	mov    eax,DWORD PTR [eax+0x180]
  4264aa:	add    eax,DWORD PTR [ebp+0xc]
  4264ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4264b0:	push   DWORD PTR [ebp+0x18]
  4264b3:	mov    DWORD PTR [eax],ecx
  4264b5:	push   DWORD PTR [ebp+0x14]
  4264b8:	push   DWORD PTR [ebp+0x1c]
  4264bb:	call   ebx
  4264bd:	mov    eax,DWORD PTR [ebp+0xc]
  4264c0:	add    eax,DWORD PTR [ebp+0x20]
  4264c3:	lea    ecx,[ebp+0x4]
  4264c6:	mov    DWORD PTR [ebp+0x20],eax
  4264c9:	mov    eax,DWORD PTR [ebp+0x20]
  4264cc:	mov    eax,DWORD PTR [ebp+0x20]
  4264cf:	mov    edx,DWORD PTR [eax+0x190]
  4264d5:	mov    eax,DWORD PTR [ebp+0x20]
  4264d8:	mov    eax,DWORD PTR [eax+0x18c]
  4264de:	mov    esi,DWORD PTR [eax]
  4264e0:	cmp    DWORD PTR [ecx],esi
  4264e2:	jb     0x426503
  4264e4:	mov    esi,DWORD PTR [edx]
  4264e6:	mov    edi,DWORD PTR [edx]
  4264e8:	mov    esi,DWORD PTR [esi+0x3c]
  4264eb:	lea    esi,[edi+esi*1+0x50]
  4264ef:	mov    edi,DWORD PTR [eax]
  4264f1:	add    edi,DWORD PTR [esi]
  4264f3:	cmp    DWORD PTR [ecx],edi
  4264f5:	jae    0x426503
  4264f7:	mov    esi,DWORD PTR [eax]
  4264f9:	mov    eax,DWORD PTR [ecx]
  4264fb:	mov    edx,DWORD PTR [edx]
  4264fd:	sub    eax,esi
  4264ff:	add    edx,eax
  426501:	mov    DWORD PTR [ecx],edx
  426503:	mov    eax,DWORD PTR [ebp+0xc]
  426506:	jmp    0x426549
  426508:	push   DWORD PTR [ebp+0x20]
  42650b:	call   0x4254e2
  426510:	mov    eax,DWORD PTR [ebp+0x20]
  426513:	mov    eax,DWORD PTR [eax+0x1c8]
  426519:	mov    eax,DWORD PTR [eax]
  42651b:	xor    eax,esi
  42651d:	add    eax,edi
  42651f:	mov    eax,DWORD PTR [ebp+0x20]
  426522:	jne    0x42653a
  426524:	mov    ecx,DWORD PTR [ebp+0x20]
  426527:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42652d:	push   DWORD PTR [ecx]
  42652f:	mov    eax,DWORD PTR [eax+0x1d8]
  426535:	call   DWORD PTR [eax+0x28]
  426538:	jmp    0x426547
  42653a:	mov    eax,DWORD PTR [eax+0x17c]
  426540:	mov    ecx,DWORD PTR [eax]
  426542:	lea    eax,[ebp+0x4]
  426545:	add    DWORD PTR [eax],ecx
  426547:	xor    eax,eax
  426549:	pop    edi
  42654a:	pop    esi
  42654b:	pop    ebx
  42654c:	leave  
  42654d:	ret    0x1c
  426550:	push   ebp
  426551:	mov    ebp,esp
  426553:	sub    esp,0x1c
  426556:	push   esi
  426557:	mov    esi,eax
  426559:	mov    eax,DWORD PTR [ecx+0x190]
  42655f:	cmp    DWORD PTR [eax],0x0
  426562:	je     0x426672
  426568:	test   edx,edx
  42656a:	je     0x426672
  426570:	test   esi,esi
  426572:	je     0x426672
  426578:	mov    eax,DWORD PTR [esi+0x88]
  42657e:	test   eax,eax
  426580:	je     0x42666d
  426586:	cmp    DWORD PTR [esi+0x8c],0x10
  42658d:	je     0x42666d
  426593:	cmp    DWORD PTR [esi+0x34],edx
  426596:	je     0x42666d
  42659c:	mov    esi,DWORD PTR [ecx+0x18c]
  4265a2:	and    DWORD PTR [ebp-0x10],0x0
  4265a6:	mov    ecx,edx
  4265a8:	sub    ecx,DWORD PTR [esi]
  4265aa:	add    eax,edx
  4265ac:	movzx  edx,WORD PTR [eax+0xc]
  4265b0:	mov    DWORD PTR [ebp-0x1c],ecx
  4265b3:	movzx  ecx,WORD PTR [eax+0xe]
  4265b7:	add    ecx,edx
  4265b9:	je     0x42666d
  4265bf:	lea    ecx,[eax+0x14]
  4265c2:	push   ebx
  4265c3:	mov    DWORD PTR [ebp-0x18],ecx
  4265c6:	mov    esi,0x7fffffff
  4265cb:	push   edi
  4265cc:	test   DWORD PTR [ecx],esi
  4265ce:	je     0x42664f
  4265d0:	mov    edx,DWORD PTR [ecx]
  4265d2:	and    DWORD PTR [ebp-0xc],0x0
  4265d6:	and    edx,esi
  4265d8:	add    edx,eax
  4265da:	movzx  edi,WORD PTR [edx+0xe]
  4265de:	movzx  ebx,WORD PTR [edx+0xc]
  4265e2:	add    edi,ebx
  4265e4:	je     0x42664f
  4265e6:	lea    ecx,[edx+0x14]
  4265e9:	mov    DWORD PTR [ebp-0x14],ecx
  4265ec:	test   DWORD PTR [ecx],esi
  4265ee:	je     0x426631
  4265f0:	mov    ecx,DWORD PTR [ecx]
  4265f2:	and    DWORD PTR [ebp-0x8],0x0
  4265f6:	and    ecx,esi
  4265f8:	add    ecx,eax
  4265fa:	movzx  edi,WORD PTR [ecx+0xe]
  4265fe:	movzx  ebx,WORD PTR [ecx+0xc]
  426602:	add    edi,ebx
  426604:	je     0x426631
  426606:	lea    edi,[ecx+0x14]
  426609:	mov    DWORD PTR [ebp-0x4],edi
  42660c:	mov    edi,DWORD PTR [ebp-0x4]
  42660f:	mov    edi,DWORD PTR [edi]
  426611:	test   edi,edi
  426613:	je     0x42661b
  426615:	mov    ebx,DWORD PTR [ebp-0x1c]
  426618:	add    DWORD PTR [edi+eax*1],ebx
  42661b:	movzx  edi,WORD PTR [ecx+0xe]
  42661f:	movzx  ebx,WORD PTR [ecx+0xc]
  426623:	inc    DWORD PTR [ebp-0x8]
  426626:	add    DWORD PTR [ebp-0x4],0x8
  42662a:	add    edi,ebx
  42662c:	cmp    DWORD PTR [ebp-0x8],edi
  42662f:	jb     0x42660c
  426631:	movzx  edi,WORD PTR [edx+0xe]
  426635:	movzx  ebx,WORD PTR [edx+0xc]
  426639:	mov    ecx,DWORD PTR [ebp-0x14]
  42663c:	inc    DWORD PTR [ebp-0xc]
  42663f:	add    ecx,0x8
  426642:	add    edi,ebx
  426644:	mov    DWORD PTR [ebp-0x14],ecx
  426647:	cmp    DWORD PTR [ebp-0xc],edi
  42664a:	jb     0x4265ec
  42664c:	mov    ecx,DWORD PTR [ebp-0x18]
  42664f:	movzx  edx,WORD PTR [eax+0xe]
  426653:	movzx  edi,WORD PTR [eax+0xc]
  426657:	inc    DWORD PTR [ebp-0x10]
  42665a:	add    ecx,0x8
  42665d:	add    edx,edi
  42665f:	mov    DWORD PTR [ebp-0x18],ecx
  426662:	cmp    DWORD PTR [ebp-0x10],edx
  426665:	jb     0x4265cc
  42666b:	pop    edi
  42666c:	pop    ebx
  42666d:	xor    eax,eax
  42666f:	inc    eax
  426670:	jmp    0x426674
  426672:	xor    eax,eax
  426674:	pop    esi
  426675:	leave  
  426676:	ret    
  426677:	push   ebp
  426678:	mov    ebp,esp
  42667a:	mov    ecx,DWORD PTR [ecx+0x190]
  426680:	mov    eax,DWORD PTR [ebp+0xc]
  426683:	sub    esp,0x10
  426686:	push   ebx
  426687:	xor    ebx,ebx
  426689:	push   esi
  42668a:	push   edi
  42668b:	cmp    DWORD PTR [ecx],ebx
  42668d:	je     0x426715
  426693:	cmp    eax,ebx
  426695:	je     0x426715
  426697:	cmp    DWORD PTR [eax+0x78],ebx
  42669a:	jne    0x4266a1
  42669c:	xor    eax,eax
  42669e:	inc    eax
  42669f:	jmp    0x426717
  4266a1:	mov    eax,DWORD PTR [eax+0x78]
  4266a4:	add    eax,DWORD PTR [ebp+0x8]
  4266a7:	mov    ecx,DWORD PTR [eax+0x1c]
  4266aa:	mov    edx,DWORD PTR [eax+0x24]
  4266ad:	mov    esi,DWORD PTR [eax+0x14]
  4266b0:	mov    edi,DWORD PTR [eax+0x18]
  4266b3:	add    ecx,DWORD PTR [ebp+0x8]
  4266b6:	add    edx,DWORD PTR [ebp+0x8]
  4266b9:	mov    DWORD PTR [ebp-0x4],esi
  4266bc:	cmp    esi,edi
  4266be:	ja     0x4266c3
  4266c0:	mov    DWORD PTR [ebp-0x4],edi
  4266c3:	mov    DWORD PTR [ebp-0x8],ebx
  4266c6:	cmp    DWORD PTR [ebp-0x4],ebx
  4266c9:	jbe    0x42669c
  4266cb:	cmp    ebx,DWORD PTR [eax+0x14]
  4266ce:	jae    0x4266d6
  4266d0:	movzx  esi,WORD PTR [edx+ebx*2]
  4266d4:	jmp    0x4266d8
  4266d6:	mov    esi,ebx
  4266d8:	lea    esi,[ecx+esi*4]
  4266db:	mov    edi,DWORD PTR [esi]
  4266dd:	test   edi,edi
  4266df:	je     0x42670a
  4266e1:	add    edi,DWORD PTR [ebp+0x8]
  4266e4:	mov    DWORD PTR [ebp-0x10],edi
  4266e7:	cmp    edi,eax
  4266e9:	jbe    0x4266fb
  4266eb:	mov    ebx,DWORD PTR [ebp+0xc]
  4266ee:	mov    ebx,DWORD PTR [ebx+0x7c]
  4266f1:	add    ebx,eax
  4266f3:	cmp    edi,ebx
  4266f5:	jae    0x4266fb
  4266f7:	mov    esi,DWORD PTR [esi]
  4266f9:	jmp    0x426703
  4266fb:	sub    edi,DWORD PTR [ebp+0x8]
  4266fe:	mov    DWORD PTR [esi],edi
  426700:	mov    esi,DWORD PTR [ebp-0x10]
  426703:	test   esi,esi
  426705:	je     0x426715
  426707:	mov    ebx,DWORD PTR [ebp-0x8]
  42670a:	inc    ebx
  42670b:	mov    DWORD PTR [ebp-0x8],ebx
  42670e:	cmp    ebx,DWORD PTR [ebp-0x4]
  426711:	jb     0x4266cb
  426713:	jmp    0x42669c
  426715:	xor    eax,eax
  426717:	pop    edi
  426718:	pop    esi
  426719:	pop    ebx
  42671a:	leave  
  42671b:	ret    0x8
  42671e:	push   ebp
  42671f:	mov    ebp,esp
  426721:	sub    esp,0x2c
  426724:	mov    edx,0xf89c85b9
  426729:	mov    DWORD PTR [ebp-0x4],edx
  42672c:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426733:	mov    eax,DWORD PTR [ebp-0x4]
  426736:	mov    ecx,DWORD PTR [ebp-0x4]
  426739:	mov    ecx,DWORD PTR [ebp-0x4]
  42673c:	mov    ecx,DWORD PTR [ebp-0x4]
  42673f:	mov    ecx,DWORD PTR [ebp-0x4]
  426742:	mov    ecx,DWORD PTR [ebp-0x4]
  426745:	push   ebx
  426746:	mov    ebx,DWORD PTR [ebp+0x10]
  426749:	push   esi
  42674a:	mov    esi,0x7510899
  42674f:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  426756:	mov    ecx,DWORD PTR [ebp-0x4]
  426759:	mov    ebx,DWORD PTR [ebx+0x190]
  42675f:	push   edi
  426760:	mov    edi,0x3272e0
  426765:	xor    ecx,esi
  426767:	xor    eax,esi
  426769:	add    eax,edi
  42676b:	add    ecx,edi
  42676d:	mov    DWORD PTR [ebp-0x18],eax
  426770:	cmp    ecx,DWORD PTR [ebx]
  426772:	je     0x4269f3
  426778:	mov    ebx,DWORD PTR [ebp-0x4]
  42677b:	mov    ecx,DWORD PTR [ebp+0xc]
  42677e:	xor    ebx,esi
  426780:	add    ebx,edi
  426782:	cmp    ebx,ecx
  426784:	je     0x4269f3
  42678a:	mov    ebx,DWORD PTR [ebp-0x4]
  42678d:	mov    ecx,DWORD PTR [ecx+0x80]
  426793:	xor    ebx,esi
  426795:	add    ebx,edi
  426797:	cmp    ecx,ebx
  426799:	je     0x4269ee
  42679f:	add    ecx,DWORD PTR [ebp+0x8]
  4267a2:	mov    DWORD PTR [ebp-0x2c],ecx
  4267a5:	mov    ebx,edx
  4267a7:	xor    ebx,esi
  4267a9:	add    ebx,edi
  4267ab:	mov    DWORD PTR [ebp-0x10],ebx
  4267ae:	mov    ebx,DWORD PTR [ebp-0x10]
  4267b1:	cmp    ebx,edx
  4267b3:	je     0x4267c7
  4267b5:	mov    edx,DWORD PTR [ebp-0x10]
  4267b8:	mov    ebx,DWORD PTR [ebp-0x4]
  4267bb:	imul   edx,edx,0x14
  4267be:	xor    ebx,esi
  4267c0:	add    ebx,edi
  4267c2:	cmp    DWORD PTR [edx+ecx*1],ebx
  4267c5:	jne    0x4267de
  4267c7:	mov    edx,DWORD PTR [ebp-0x10]
  4267ca:	mov    ebx,DWORD PTR [ebp-0x4]
  4267cd:	imul   edx,edx,0x14
  4267d0:	xor    ebx,esi
  4267d2:	add    ebx,edi
  4267d4:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4267d8:	je     0x4269e0
  4267de:	mov    eax,DWORD PTR [ebp-0x4]
  4267e1:	mov    ebx,DWORD PTR [ebp-0x4]
  4267e4:	mov    eax,DWORD PTR [ebp-0x10]
  4267e7:	imul   eax,eax,0x14
  4267ea:	add    eax,ecx
  4267ec:	mov    ecx,DWORD PTR [eax+0x10]
  4267ef:	add    ecx,DWORD PTR [ebp+0x8]
  4267f2:	xor    ebx,esi
  4267f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4267f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4267fa:	mov    edx,DWORD PTR [ebp-0x4]
  4267fd:	xor    ecx,esi
  4267ff:	add    ecx,edi
  426801:	xor    edx,esi
  426803:	mov    DWORD PTR [ebp-0x24],ecx
  426806:	mov    ecx,DWORD PTR [eax]
  426808:	add    edx,edi
  42680a:	add    ebx,edi
  42680c:	cmp    ecx,edx
  42680e:	je     0x426816
  426810:	add    ecx,DWORD PTR [ebp+0x8]
  426813:	mov    DWORD PTR [ebp-0x24],ecx
  426816:	mov    ecx,DWORD PTR [ebp-0x4]
  426819:	xor    ecx,esi
  42681b:	add    ecx,DWORD PTR [eax+0xc]
  42681e:	mov    eax,DWORD PTR [ebp+0x8]
  426821:	lea    eax,[ecx+eax*1+0x3272e0]
  426828:	mov    DWORD PTR [ebp+0xc],eax
  42682b:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  426832:	mov    eax,DWORD PTR [ebp+0x10]
  426835:	push   DWORD PTR [ebp+0xc]
  426838:	mov    eax,DWORD PTR [eax+0x1d8]
  42683e:	call   DWORD PTR [eax]
  426840:	mov    ecx,DWORD PTR [ebp-0x4]
  426843:	xor    ecx,esi
  426845:	add    ecx,edi
  426847:	mov    DWORD PTR [ebp-0xc],eax
  42684a:	cmp    ecx,eax
  42684c:	jne    0x426860
  42684e:	mov    eax,DWORD PTR [ebp+0x10]
  426851:	push   DWORD PTR [ebp+0xc]
  426854:	mov    eax,DWORD PTR [eax+0x1d8]
  42685a:	call   DWORD PTR [eax+0xc]
  42685d:	mov    DWORD PTR [ebp-0xc],eax
  426860:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  426867:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  42686e:	mov    eax,DWORD PTR [ebp-0x4]
  426871:	xor    eax,esi
  426873:	add    eax,edi
  426875:	cmp    eax,DWORD PTR [ebp-0xc]
  426878:	jne    0x42689d
  42687a:	mov    eax,DWORD PTR [ebp-0x8]
  42687d:	mov    ecx,DWORD PTR [ebp-0x20]
  426880:	xor    eax,esi
  426882:	xor    ecx,esi
  426884:	lea    ebx,[ebx+eax*1+0x3272e0]
  42688b:	mov    eax,DWORD PTR [ebp+0x10]
  42688e:	mov    eax,DWORD PTR [eax+0x1d8]
  426894:	add    ecx,edi
  426896:	imul   ecx,ebx
  426899:	push   ecx
  42689a:	call   DWORD PTR [eax+0x24]
  42689d:	mov    eax,DWORD PTR [ebp-0x4]
  4268a0:	xor    eax,esi
  4268a2:	add    eax,edi
  4268a4:	cmp    eax,DWORD PTR [ebp-0xc]
  4268a7:	jne    0x4268b8
  4268a9:	mov    eax,DWORD PTR [ebp-0x28]
  4268ac:	xor    eax,esi
  4268ae:	add    eax,edi
  4268b0:	cmp    ebx,eax
  4268b2:	jbe    0x426832
  4268b8:	mov    eax,DWORD PTR [ebp-0x4]
  4268bb:	xor    eax,esi
  4268bd:	add    eax,edi
  4268bf:	cmp    eax,DWORD PTR [ebp-0xc]
  4268c2:	jne    0x4268db
  4268c4:	mov    eax,DWORD PTR [ebp-0x8]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x18]
  4268ca:	xor    eax,esi
  4268cc:	lea    eax,[ecx+eax*1+0x3272e0]
  4268d3:	mov    DWORD PTR [ebp-0x18],eax
  4268d6:	jmp    0x4269ca
  4268db:	mov    DWORD PTR [ebp-0x14],0x1121b01
  4268e2:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  4268e9:	mov    ebx,DWORD PTR [ebp-0x4]
  4268ec:	xor    ebx,esi
  4268ee:	add    ebx,edi
  4268f0:	jmp    0x4269b7
  4268f5:	mov    eax,DWORD PTR [ebp-0x4]
  4268f8:	xor    eax,esi
  4268fa:	add    eax,edi
  4268fc:	mov    DWORD PTR [ebp-0x14],eax
  4268ff:	mov    eax,DWORD PTR [ebp-0x4]
  426902:	xor    eax,esi
  426904:	add    eax,edi
  426906:	mov    DWORD PTR [ebp+0xc],eax
  426909:	mov    ecx,DWORD PTR [ebp-0x4]
  42690c:	mov    eax,DWORD PTR [ebp-0x24]
  42690f:	xor    ecx,esi
  426911:	add    ecx,edi
  426913:	cmp    ecx,eax
  426915:	je     0x42691d
  426917:	mov    eax,DWORD PTR [eax+ebx*4]
  42691a:	mov    DWORD PTR [ebp-0x14],eax
  42691d:	mov    eax,DWORD PTR [ebp-0x1c]
  426920:	mov    eax,DWORD PTR [eax+ebx*4]
  426923:	mov    DWORD PTR [ebp+0xc],eax
  426926:	mov    eax,DWORD PTR [ebp-0x4]
  426929:	mov    ecx,DWORD PTR [ebp-0x14]
  42692c:	xor    eax,esi
  42692e:	add    eax,edi
  426930:	cmp    eax,ecx
  426932:	je     0x42695d
  426934:	mov    eax,DWORD PTR [ebp-0x4]
  426937:	mov    ecx,DWORD PTR [ebp-0x14]
  42693a:	xor    eax,esi
  42693c:	add    eax,edi
  42693e:	shr    ecx,0x1f
  426941:	cmp    eax,ecx
  426943:	je     0x42695d
  426945:	mov    ecx,DWORD PTR [ebp-0x14]
  426948:	mov    eax,DWORD PTR [ebp+0x10]
  42694b:	mov    eax,DWORD PTR [eax+0x1d8]
  426951:	movzx  ecx,cx
  426954:	push   ecx
  426955:	push   DWORD PTR [ebp-0xc]
  426958:	call   DWORD PTR [eax+0x8]
  42695b:	jmp    0x426976
  42695d:	mov    eax,DWORD PTR [ebp+0xc]
  426960:	add    eax,DWORD PTR [ebp+0x8]
  426963:	mov    ecx,DWORD PTR [ebp+0x10]
  426966:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42696c:	add    eax,0x2
  42696f:	push   eax
  426970:	push   DWORD PTR [ebp-0xc]
  426973:	call   DWORD PTR [ecx+0x8]
  426976:	mov    DWORD PTR [ebp+0xc],eax
  426979:	mov    eax,DWORD PTR [ebp-0x4]
  42697c:	mov    ecx,DWORD PTR [ebp+0xc]
  42697f:	xor    eax,esi
  426981:	add    eax,edi
  426983:	cmp    eax,ecx
  426985:	mov    eax,DWORD PTR [ebp-0x8]
  426988:	jne    0x42699b
  42698a:	mov    ecx,DWORD PTR [ebp-0x18]
  42698d:	xor    eax,esi
  42698f:	lea    eax,[ecx+eax*1+0x3272e0]
  426996:	mov    DWORD PTR [ebp-0x18],eax
  426999:	jmp    0x4269ab
  42699b:	mov    ecx,DWORD PTR [ebp+0xc]
  42699e:	xor    eax,esi
  4269a0:	add    eax,edi
  4269a2:	imul   eax,ecx
  4269a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4269a8:	mov    DWORD PTR [ecx+ebx*4],eax
  4269ab:	mov    eax,DWORD PTR [ebp-0x8]
  4269ae:	xor    eax,esi
  4269b0:	lea    ebx,[ebx+eax*1+0x3272e0]
  4269b7:	mov    eax,DWORD PTR [ebp-0x4]
  4269ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4269bd:	xor    eax,esi
  4269bf:	add    eax,edi
  4269c1:	cmp    DWORD PTR [ecx+ebx*4],eax
  4269c4:	jne    0x4268f5
  4269ca:	mov    edx,DWORD PTR [ebp-0x10]
  4269cd:	mov    eax,DWORD PTR [ebp-0x18]
  4269d0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4269d3:	sub    edx,0x3272df
  4269d9:	xor    edx,esi
  4269db:	jmp    0x4267a5
  4269e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269e3:	xor    ecx,esi
  4269e5:	add    ecx,edi
  4269e7:	cmp    eax,ecx
  4269e9:	mov    eax,DWORD PTR [ebp-0x4]
  4269ec:	jne    0x4269f6
  4269ee:	mov    eax,DWORD PTR [ebp-0x8]
  4269f1:	jmp    0x4269f6
  4269f3:	mov    eax,DWORD PTR [ebp-0x4]
  4269f6:	xor    eax,esi
  4269f8:	add    eax,edi
  4269fa:	pop    edi
  4269fb:	pop    esi
  4269fc:	pop    ebx
  4269fd:	leave  
  4269fe:	ret    0xc
  426a01:	push   ebp
  426a02:	mov    ebp,esp
  426a04:	sub    esp,0x28
  426a07:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426a0e:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426a15:	mov    eax,DWORD PTR [ebp+0xc]
  426a18:	mov    DWORD PTR [ebp+0xc],eax
  426a1b:	push   esi
  426a1c:	mov    eax,eax
  426a1e:	mov    eax,DWORD PTR [ebp-0x4]
  426a21:	mov    esi,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,0x7510899
  426a29:	xor    eax,ecx
  426a2b:	mov    edx,0x3272e0
  426a30:	add    eax,edx
  426a32:	cmp    esi,eax
  426a34:	je     0x426b5b
  426a3a:	mov    eax,DWORD PTR [ebp+0x8]
  426a3d:	mov    esi,DWORD PTR [ebp+0x8]
  426a40:	add    esi,DWORD PTR [eax+0x3c]
  426a43:	push   edi
  426a44:	mov    DWORD PTR [ebp+0xc],esi
  426a47:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  426a4e:	mov    eax,DWORD PTR [ebp-0x1c]
  426a51:	mov    esi,DWORD PTR [ebp-0x4]
  426a54:	mov    edi,DWORD PTR [ebp+0xc]
  426a57:	xor    esi,ecx
  426a59:	xor    eax,ecx
  426a5b:	add    esi,edx
  426a5d:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  426a64:	je     0x426b55
  426a6a:	mov    esi,DWORD PTR [ebp+0xc]
  426a6d:	mov    eax,DWORD PTR [ebp+0x8]
  426a70:	add    eax,DWORD PTR [esi+0xa0]
  426a76:	mov    esi,DWORD PTR [ebp+0x8]
  426a79:	mov    edi,DWORD PTR [ebp+0xc]
  426a7c:	sub    esi,DWORD PTR [edi+0x34]
  426a7f:	mov    edi,DWORD PTR [ebp-0x4]
  426a82:	xor    edi,ecx
  426a84:	add    edi,edx
  426a86:	mov    DWORD PTR [ebp-0x24],esi
  426a89:	cmp    esi,edi
  426a8b:	je     0x426b55
  426a91:	mov    esi,DWORD PTR [ebp-0x4]
  426a94:	xor    esi,ecx
  426a96:	add    esi,edx
  426a98:	mov    DWORD PTR [ebp-0x8],esi
  426a9b:	push   ebx
  426a9c:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  426aa3:	jmp    0x426b3f
  426aa8:	mov    esi,DWORD PTR [ebp-0x4]
  426aab:	xor    esi,ecx
  426aad:	lea    edi,[ebx-0x8]
  426ab0:	add    esi,edx
  426ab2:	shr    edi,1
  426ab4:	cmp    esi,edi
  426ab6:	jae    0x426b25
  426ab8:	sub    edi,esi
  426aba:	lea    ebx,[eax+esi*2+0x8]
  426abe:	mov    DWORD PTR [ebp-0x18],edi
  426ac1:	movzx  esi,WORD PTR [ebx]
  426ac4:	and    esi,0xfff
  426aca:	mov    DWORD PTR [ebp-0x14],esi
  426acd:	mov    edi,DWORD PTR [ebp-0x14]
  426ad0:	mov    esi,DWORD PTR [eax]
  426ad2:	sub    esi,edx
  426ad4:	add    edi,esi
  426ad6:	movzx  esi,WORD PTR [ebx]
  426ad9:	shr    esi,0xc
  426adc:	xor    edi,ecx
  426ade:	mov    DWORD PTR [ebp-0x20],edi
  426ae1:	mov    DWORD PTR [ebp-0x14],esi
  426ae4:	mov    esi,DWORD PTR [ebp-0x20]
  426ae7:	mov    edi,DWORD PTR [ebp+0x8]
  426aea:	xor    esi,ecx
  426aec:	lea    esi,[esi+edi*1+0x3272e0]
  426af3:	mov    DWORD PTR [ebp-0x20],esi
  426af6:	mov    esi,DWORD PTR [ebp-0x10]
  426af9:	mov    edi,DWORD PTR [ebp-0x14]
  426afc:	xor    esi,ecx
  426afe:	add    esi,edx
  426b00:	cmp    edi,esi
  426b02:	jne    0x426b1a
  426b04:	mov    esi,DWORD PTR [ebp-0x10]
  426b07:	mov    edi,DWORD PTR [ebp-0x14]
  426b0a:	xor    esi,ecx
  426b0c:	add    esi,edx
  426b0e:	cmp    edi,esi
  426b10:	jne    0x426b1a
  426b12:	mov    esi,DWORD PTR [ebp-0x20]
  426b15:	mov    edi,DWORD PTR [ebp-0x24]
  426b18:	add    DWORD PTR [esi],edi
  426b1a:	add    ebx,0x2
  426b1d:	dec    DWORD PTR [ebp-0x18]
  426b20:	jne    0x426ac1
  426b22:	mov    ebx,DWORD PTR [ebp-0xc]
  426b25:	add    DWORD PTR [ebp-0x8],ebx
  426b28:	mov    esi,DWORD PTR [ebp-0x1c]
  426b2b:	mov    edi,DWORD PTR [ebp-0x8]
  426b2e:	mov    ebx,DWORD PTR [ebp+0xc]
  426b31:	xor    esi,ecx
  426b33:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  426b3a:	jae    0x426b54
  426b3c:	add    eax,DWORD PTR [ebp-0xc]
  426b3f:	mov    esi,DWORD PTR [ebp-0x4]
  426b42:	mov    ebx,DWORD PTR [eax+0x4]
  426b45:	xor    esi,ecx
  426b47:	add    esi,edx
  426b49:	mov    DWORD PTR [ebp-0xc],ebx
  426b4c:	cmp    ebx,esi
  426b4e:	jne    0x426aa8
  426b54:	pop    ebx
  426b55:	mov    eax,DWORD PTR [ebp-0x28]
  426b58:	pop    edi
  426b59:	jmp    0x426b5e
  426b5b:	mov    eax,DWORD PTR [ebp-0x4]
  426b5e:	xor    eax,ecx
  426b60:	add    eax,edx
  426b62:	pop    esi
  426b63:	leave  
  426b64:	ret    0x8
  426b67:	push   ebp
  426b68:	mov    ebp,esp
  426b6a:	sub    esp,0x54
  426b6d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426b74:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  426b7b:	mov    eax,DWORD PTR [ebp-0x4]
  426b7e:	push   ebx
  426b7f:	push   esi
  426b80:	mov    esi,0x7510899
  426b85:	xor    eax,esi
  426b87:	mov    ebx,0x3272e0
  426b8c:	add    eax,ebx
  426b8e:	mov    DWORD PTR [ebp-0x18],eax
  426b91:	mov    eax,DWORD PTR [ebp-0x4]
  426b94:	xor    eax,esi
  426b96:	add    eax,ebx
  426b98:	mov    DWORD PTR [ebp-0x20],eax
  426b9b:	push   edi
  426b9c:	mov    edi,DWORD PTR [ebp+0x20]
  426b9f:	mov    eax,DWORD PTR [ebp-0x10]
  426ba2:	mov    ecx,DWORD PTR [ebp-0x10]
  426ba5:	xor    eax,ecx
  426ba7:	mov    DWORD PTR [ebp-0x10],eax
  426baa:	add    DWORD PTR [ebp-0x10],0xf89cb5b9
  426bb1:	mov    eax,DWORD PTR [ebp-0x8]
  426bb4:	mov    ecx,DWORD PTR [ebp-0x8]
  426bb7:	xor    eax,ecx
  426bb9:	mov    DWORD PTR [ebp-0x8],eax
  426bbc:	add    DWORD PTR [ebp-0x8],0xf89c85f9
  426bc3:	mov    eax,DWORD PTR [ebp-0xc]
  426bc6:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc9:	xor    eax,ecx
  426bcb:	mov    DWORD PTR [ebp-0xc],eax
  426bce:	add    DWORD PTR [ebp-0xc],0xf89c85bd
  426bd5:	mov    eax,DWORD PTR [ebp-0x14]
  426bd8:	mov    ecx,DWORD PTR [ebp-0x14]
  426bdb:	xor    eax,ecx
  426bdd:	mov    DWORD PTR [ebp-0x14],eax
  426be0:	add    DWORD PTR [ebp-0x14],0xf89f05b9
  426be7:	mov    eax,0x9471
  426bec:	mov    WORD PTR [ebp+0x20],ax
  426bf0:	mov    eax,DWORD PTR [ebp+0x8]
  426bf3:	test   eax,eax
  426bf5:	je     0x426fda
  426bfb:	mov    eax,DWORD PTR [ebp+0xc]
  426bfe:	test   eax,eax
  426c00:	je     0x426fda
  426c06:	mov    eax,DWORD PTR [ebp+0x18]
  426c09:	test   eax,eax
  426c0b:	je     0x426fda
  426c11:	mov    ax,WORD PTR [ebp+0x20]
  426c15:	mov    ecx,0x8a8c
  426c1a:	xor    ax,cx
  426c1d:	mov    ecx,0x3b50
  426c22:	add    ax,cx
  426c25:	mov    ecx,DWORD PTR [ebp+0x8]
  426c28:	cmp    WORD PTR [ecx],ax
  426c2b:	jne    0x426fda
  426c31:	mov    eax,DWORD PTR [ebp-0x4]
  426c34:	mov    ecx,DWORD PTR [ebp+0x8]
  426c37:	mov    eax,DWORD PTR [ebp+0x8]
  426c3a:	add    eax,DWORD PTR [ecx+0x3c]
  426c3d:	mov    DWORD PTR [ebp+0xc],eax
  426c40:	mov    eax,DWORD PTR [eax+0x50]
  426c43:	test   eax,eax
  426c45:	je     0x426fda
  426c4b:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426c52:	mov    eax,DWORD PTR [ebp-0x2c]
  426c55:	xor    eax,esi
  426c57:	add    eax,ebx
  426c59:	mov    DWORD PTR [ebp-0x2c],eax
  426c5c:	mov    eax,DWORD PTR [ebp-0x4]
  426c5f:	mov    eax,DWORD PTR [edi+0x190]
  426c65:	mov    ecx,DWORD PTR [eax]
  426c67:	mov    ecx,DWORD PTR [ecx+0x3c]
  426c6a:	add    ecx,DWORD PTR [eax]
  426c6c:	mov    eax,DWORD PTR [ebp-0x4]
  426c6f:	mov    eax,DWORD PTR [edi+0x18c]
  426c75:	mov    edx,DWORD PTR [eax]
  426c77:	mov    DWORD PTR [ebp-0x1c],ecx
  426c7a:	mov    DWORD PTR [ebp+0x20],edx
  426c7d:	cmp    edx,edx
  426c7f:	jne    0x426cb4
  426c81:	mov    eax,DWORD PTR [edi+0x1d8]
  426c87:	lea    edx,[ebp-0x18]
  426c8a:	push   edx
  426c8b:	mov    edx,DWORD PTR [ebp-0x8]
  426c8e:	xor    edx,esi
  426c90:	add    edx,ebx
  426c92:	push   edx
  426c93:	push   DWORD PTR [ecx+0x50]
  426c96:	push   DWORD PTR [ebp+0x20]
  426c99:	call   DWORD PTR [eax+0x1c]
  426c9c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c9f:	mov    eax,DWORD PTR [ecx+0x54]
  426ca2:	mov    ecx,DWORD PTR [ecx+0x50]
  426ca5:	sub    ecx,eax
  426ca7:	add    eax,DWORD PTR [ebp+0x20]
  426caa:	push   ecx
  426cab:	push   eax
  426cac:	call   0x4275ee
  426cb1:	mov    edx,DWORD PTR [ebp+0x20]
  426cb4:	mov    eax,DWORD PTR [edi+0x194]
  426cba:	mov    DWORD PTR [eax],edx
  426cbc:	mov    eax,DWORD PTR [ebp+0xc]
  426cbf:	push   DWORD PTR [eax+0x54]
  426cc2:	push   DWORD PTR [ebp+0x8]
  426cc5:	push   edx
  426cc6:	call   0x427495
  426ccb:	mov    ecx,DWORD PTR [ebp+0x20]
  426cce:	mov    eax,DWORD PTR [ecx+0x3c]
  426cd1:	add    eax,ecx
  426cd3:	movzx  ecx,WORD PTR [eax+0x14]
  426cd7:	lea    ecx,[ecx+eax*1+0x18]
  426cdb:	mov    DWORD PTR [ebp+0x18],ecx
  426cde:	mov    ecx,DWORD PTR [ebp-0x4]
  426ce1:	movzx  edx,WORD PTR [eax+0x6]
  426ce5:	xor    ecx,esi
  426ce7:	add    ecx,ebx
  426ce9:	mov    DWORD PTR [ebp+0xc],eax
  426cec:	cmp    edx,ecx
  426cee:	je     0x426d9c
  426cf4:	mov    ecx,DWORD PTR [ebp-0x4]
  426cf7:	xor    ecx,esi
  426cf9:	add    ecx,ebx
  426cfb:	mov    DWORD PTR [ebp-0x20],ecx
  426cfe:	mov    ecx,DWORD PTR [ebp-0x24]
  426d01:	movzx  edx,WORD PTR [eax+0x6]
  426d05:	xor    ecx,esi
  426d07:	sub    edx,ecx
  426d09:	sub    edx,ebx
  426d0b:	cmp    DWORD PTR [ebp-0x20],edx
  426d0e:	ja     0x426d9c
  426d14:	mov    edx,DWORD PTR [ebp+0x18]
  426d17:	add    edx,0x8
  426d1a:	mov    DWORD PTR [ebp+0x18],edx
  426d1d:	jmp    0x426d22
  426d1f:	mov    edx,DWORD PTR [ebp+0x18]
  426d22:	mov    eax,DWORD PTR [eax+0x38]
  426d25:	lea    ecx,[eax-0x1]
  426d28:	mov    DWORD PTR [ebp-0x30],eax
  426d2b:	mov    eax,DWORD PTR [edx]
  426d2d:	test   ecx,eax
  426d2f:	je     0x426d38
  426d31:	not    ecx
  426d33:	and    eax,ecx
  426d35:	add    eax,DWORD PTR [ebp-0x30]
  426d38:	push   eax
  426d39:	mov    eax,DWORD PTR [edx+0x4]
  426d3c:	add    eax,DWORD PTR [ebp+0x20]
  426d3f:	push   eax
  426d40:	call   0x4275ee
  426d45:	mov    edx,DWORD PTR [ebp-0x4]
  426d48:	mov    eax,DWORD PTR [ebp+0x18]
  426d4b:	mov    ecx,DWORD PTR [eax+0x8]
  426d4e:	xor    edx,esi
  426d50:	add    edx,ebx
  426d52:	cmp    ecx,edx
  426d54:	je     0x426d6d
  426d56:	push   ecx
  426d57:	mov    ecx,DWORD PTR [ebp+0x8]
  426d5a:	add    ecx,DWORD PTR [eax+0xc]
  426d5d:	mov    eax,DWORD PTR [eax+0x4]
  426d60:	add    eax,DWORD PTR [ebp+0x20]
  426d63:	push   ecx
  426d64:	push   eax
  426d65:	call   0x427495
  426d6a:	mov    eax,DWORD PTR [ebp+0x18]
  426d6d:	mov    ecx,DWORD PTR [ebp-0x24]
  426d70:	mov    edx,DWORD PTR [ebp-0x20]
  426d73:	add    eax,0x28
  426d76:	xor    ecx,esi
  426d78:	lea    ecx,[edx+ecx*1+0x3272e0]
  426d7f:	mov    edx,DWORD PTR [ebp+0xc]
  426d82:	mov    DWORD PTR [ebp+0x18],eax
  426d85:	mov    eax,DWORD PTR [ebp-0x24]
  426d88:	movzx  edx,WORD PTR [edx+0x6]
  426d8c:	xor    eax,esi
  426d8e:	sub    edx,eax
  426d90:	mov    eax,DWORD PTR [ebp+0xc]
  426d93:	sub    edx,ebx
  426d95:	mov    DWORD PTR [ebp-0x20],ecx
  426d98:	cmp    ecx,edx
  426d9a:	jbe    0x426d1f
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	mov    edx,DWORD PTR [edi+0x18c]
  426da5:	xor    ecx,esi
  426da7:	add    ecx,ebx
  426da9:	mov    DWORD PTR [ebp+0x18],ecx
  426dac:	mov    ecx,DWORD PTR [ebp+0x20]
  426daf:	cmp    ecx,DWORD PTR [edx]
  426db1:	jne    0x426dda
  426db3:	mov    eax,DWORD PTR [edi+0x1d8]
  426db9:	lea    edx,[ebp-0x18]
  426dbc:	push   edx
  426dbd:	mov    edx,DWORD PTR [ebp-0xc]
  426dc0:	xor    edx,esi
  426dc2:	add    edx,ebx
  426dc4:	push   edx
  426dc5:	mov    edx,DWORD PTR [ebp-0x1c]
  426dc8:	push   DWORD PTR [edx+0x54]
  426dcb:	push   ecx
  426dcc:	call   DWORD PTR [eax+0x1c]
  426dcf:	test   eax,eax
  426dd1:	je     0x426fcb
  426dd7:	mov    eax,DWORD PTR [ebp+0xc]
  426dda:	mov    ecx,DWORD PTR [edi+0x1c8]
  426de0:	mov    ecx,DWORD PTR [ecx]
  426de2:	xor    ecx,esi
  426de4:	add    ecx,ebx
  426de6:	je     0x426ef6
  426dec:	and    DWORD PTR [ebp-0x28],0x0
  426df0:	mov    eax,0x4f92
  426df5:	mov    WORD PTR [ebp-0x3c],ax
  426df9:	add    eax,0x16
  426dfc:	mov    WORD PTR [ebp-0x3a],ax
  426e00:	mov    eax,0x4f98
  426e05:	mov    WORD PTR [ebp-0x38],ax
  426e09:	add    eax,0xfffffff8
  426e0c:	and    DWORD PTR [ebp+0x8],0x0
  426e10:	mov    ecx,eax
  426e12:	mov    WORD PTR [ebp-0x34],ax
  426e16:	mov    eax,0x4e3c
  426e1b:	mov    WORD PTR [ebp-0x36],cx
  426e1f:	mov    WORD PTR [ebp-0x32],ax
  426e23:	mov    eax,DWORD PTR [ebp+0x8]
  426e26:	lea    eax,[ebp+eax*2-0x3c]
  426e2a:	mov    ecx,0x8a8c
  426e2f:	xor    cx,WORD PTR [eax]
  426e32:	mov    edx,0x3b50
  426e37:	add    cx,dx
  426e3a:	inc    DWORD PTR [ebp+0x8]
  426e3d:	cmp    DWORD PTR [ebp+0x8],0x6
  426e41:	mov    WORD PTR [eax],cx
  426e44:	jb     0x426e23
  426e46:	mov    DWORD PTR [ebp-0x54],0x3c081e26
  426e4d:	mov    DWORD PTR [ebp-0x50],0x3d1e0401
  426e54:	mov    DWORD PTR [ebp-0x4c],0xf1080e04
  426e5b:	mov    DWORD PTR [ebp-0x48],0x39080b3c
  426e62:	mov    DWORD PTR [ebp-0x44],0x1d081e1e
  426e69:	mov    WORD PTR [ebp-0x40],0xf0f
  426e6f:	mov    BYTE PTR [ebp-0x3e],0x7a
  426e73:	xor    ecx,ecx
  426e75:	lea    eax,[ebp+ecx*1-0x54]
  426e79:	mov    dl,BYTE PTR [eax]
  426e7b:	xor    dl,0x73
  426e7e:	sub    dl,0x9
  426e81:	inc    ecx
  426e82:	mov    BYTE PTR [eax],dl
  426e84:	cmp    ecx,0x17
  426e87:	jb     0x426e75
  426e89:	mov    eax,DWORD PTR [edi+0x1d8]
  426e8f:	lea    ecx,[ebp-0x3c]
  426e92:	push   ecx
  426e93:	call   DWORD PTR [eax+0x4]
  426e96:	mov    ecx,DWORD PTR [edi+0x1d8]
  426e9c:	lea    edx,[ebp-0x54]
  426e9f:	push   edx
  426ea0:	push   eax
  426ea1:	call   DWORD PTR [ecx+0x8]
  426ea4:	lea    ecx,[ebp-0x28]
  426ea7:	push   ecx
  426ea8:	mov    ecx,DWORD PTR [edi+0x18c]
  426eae:	push   DWORD PTR [ecx]
  426eb0:	call   eax
  426eb2:	mov    eax,DWORD PTR [ebp-0x28]
  426eb5:	test   eax,eax
  426eb7:	je     0x426ef3
  426eb9:	mov    DWORD PTR [ebp+0x8],eax
  426ebc:	jmp    0x426ec8
  426ebe:	mov    eax,DWORD PTR [eax]
  426ec0:	mov    DWORD PTR [ebp-0x28],eax
  426ec3:	cmp    eax,DWORD PTR [ebp+0x8]
  426ec6:	je     0x426ed5
  426ec8:	mov    edx,DWORD PTR [eax+0x18]
  426ecb:	mov    ecx,DWORD PTR [edi+0x18c]
  426ed1:	cmp    edx,DWORD PTR [ecx]
  426ed3:	jne    0x426ebe
  426ed5:	mov    edx,DWORD PTR [eax+0x18]
  426ed8:	mov    ecx,DWORD PTR [edi+0x18c]
  426ede:	cmp    edx,DWORD PTR [ecx]
  426ee0:	jne    0x426ef3
  426ee2:	mov    edx,DWORD PTR [ebp-0x1c]
  426ee5:	mov    ecx,DWORD PTR [edi+0x190]
  426eeb:	mov    edx,DWORD PTR [edx+0x28]
  426eee:	add    edx,DWORD PTR [ecx]
  426ef0:	mov    DWORD PTR [eax+0x1c],edx
  426ef3:	mov    eax,DWORD PTR [ebp+0xc]
  426ef6:	push   edi
  426ef7:	push   eax
  426ef8:	push   DWORD PTR [ebp+0x20]
  426efb:	call   0x42671e
  426f00:	test   eax,eax
  426f02:	je     0x426fcb
  426f08:	push   DWORD PTR [ebp+0xc]
  426f0b:	mov    ecx,edi
  426f0d:	push   DWORD PTR [ebp+0x20]
  426f10:	call   0x426677
  426f15:	test   eax,eax
  426f17:	je     0x426fcb
  426f1d:	mov    eax,DWORD PTR [ebp+0xc]
  426f20:	mov    edx,DWORD PTR [ebp+0x20]
  426f23:	mov    ecx,edi
  426f25:	call   0x426550
  426f2a:	test   eax,eax
  426f2c:	je     0x426fcb
  426f32:	push   edi
  426f33:	push   DWORD PTR [ebp+0x20]
  426f36:	call   0x426a01
  426f3b:	test   eax,eax
  426f3d:	je     0x426fcb
  426f43:	mov    eax,DWORD PTR [edi+0x18c]
  426f49:	mov    edx,DWORD PTR [ebp+0x20]
  426f4c:	cmp    edx,DWORD PTR [eax]
  426f4e:	jne    0x426f6a
  426f50:	mov    eax,DWORD PTR [edi+0x1d8]
  426f56:	lea    ecx,[ebp-0x18]
  426f59:	push   ecx
  426f5a:	push   DWORD PTR [ebp-0x18]
  426f5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f60:	push   DWORD PTR [ecx+0x54]
  426f63:	push   edx
  426f64:	call   DWORD PTR [eax+0x1c]
  426f67:	mov    edx,DWORD PTR [ebp+0x20]
  426f6a:	mov    eax,DWORD PTR [edi+0x1c8]
  426f70:	mov    eax,DWORD PTR [eax]
  426f72:	xor    eax,esi
  426f74:	add    eax,ebx
  426f76:	je     0x426faf
  426f78:	mov    ecx,DWORD PTR [ebp+0xc]
  426f7b:	mov    eax,DWORD PTR [ecx+0x28]
  426f7e:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426f85:	mov    esi,DWORD PTR [ebp+0x8]
  426f88:	push   DWORD PTR [ebp+0x14]
  426f8b:	xor    esi,0x899
  426f91:	push   DWORD PTR [ebp+0x10]
  426f94:	add    esi,0x72e0
  426f9a:	or     WORD PTR [ecx+0x16],si
  426f9e:	add    eax,edx
  426fa0:	push   edx
  426fa1:	call   eax
  426fa3:	mov    DWORD PTR [edi+0x1d0],0xf89c85b8
  426fad:	jmp    0x426fb9
  426faf:	mov    eax,DWORD PTR [ebp+0xc]
  426fb2:	mov    eax,DWORD PTR [eax+0x28]
  426fb5:	add    eax,edx
  426fb7:	call   eax
  426fb9:	mov    DWORD PTR [ebp-0x20],eax
  426fbc:	mov    eax,DWORD PTR [ebp-0x20]
  426fbf:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fc2:	mov    DWORD PTR [ecx],eax
  426fc4:	mov    DWORD PTR [ebp+0x18],0x1
  426fcb:	cmp    DWORD PTR [ebp+0x18],0x0
  426fcf:	jne    0x426fd5
  426fd1:	and    DWORD PTR [ebp+0x20],0x0
  426fd5:	mov    eax,DWORD PTR [ebp+0x20]
  426fd8:	jmp    0x426fdc
  426fda:	xor    eax,eax
  426fdc:	pop    edi
  426fdd:	pop    esi
  426fde:	pop    ebx
  426fdf:	leave  
  426fe0:	ret    0x1c
  426fe3:	push   ebp
  426fe4:	mov    ebp,esp
  426fe6:	movzx  edx,WORD PTR [ecx+0x6]
  426fea:	movzx  eax,WORD PTR [ecx+0x14]
  426fee:	push   ebx
  426fef:	push   edi
  426ff0:	xor    edi,edi
  426ff2:	lea    eax,[eax+ecx*1+0x18]
  426ff6:	test   edx,edx
  426ff8:	je     0x427019
  426ffa:	mov    ecx,DWORD PTR [eax+0xc]
  426ffd:	lea    ebx,[ecx+esi*1]
  427000:	cmp    DWORD PTR [ebp+0x8],ebx
  427003:	jb     0x427011
  427005:	mov    ebx,DWORD PTR [eax+0x8]
  427008:	add    ebx,ecx
  42700a:	add    ebx,esi
  42700c:	cmp    DWORD PTR [ebp+0x8],ebx
  42700f:	jb     0x42701b
  427011:	add    eax,0x28
  427014:	inc    edi
  427015:	cmp    edi,edx
  427017:	jb     0x426ffa
  427019:	xor    eax,eax
  42701b:	pop    edi
  42701c:	pop    ebx
  42701d:	pop    ebp
  42701e:	ret    0x4
  427021:	push   ebp
  427022:	mov    ebp,esp
  427024:	sub    esp,0x28
  427027:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42702e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  427035:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  42703c:	mov    eax,0x4f9d
  427041:	mov    WORD PTR [ebp-0xc],ax
  427045:	mov    eax,0x4e7d
  42704a:	mov    WORD PTR [ebp-0x4],ax
  42704e:	mov    eax,0x4fa6
  427053:	mov    WORD PTR [ebp-0x8],ax
  427057:	add    eax,0xffffffe0
  42705a:	mov    WORD PTR [ebp-0x8],ax
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    DWORD PTR [ebp-0x14],eax
  427064:	mov    eax,DWORD PTR [ebp+0xc]
  427067:	mov    DWORD PTR [ebp-0x18],eax
  42706a:	mov    eax,DWORD PTR [ebp-0x10]
  42706d:	push   ebx
  42706e:	mov    ecx,0x7510899
  427073:	xor    eax,ecx
  427075:	push   esi
  427076:	mov    esi,DWORD PTR [ebp-0x14]
  427079:	mov    edx,0x3272e0
  42707e:	add    eax,edx
  427080:	push   edi
  427081:	cmp    esi,eax
  427083:	je     0x427281
  427089:	mov    eax,DWORD PTR [ebp-0x10]
  42708c:	mov    esi,DWORD PTR [ebp-0x18]
  42708f:	xor    eax,ecx
  427091:	add    eax,edx
  427093:	cmp    esi,eax
  427095:	je     0x427281
  42709b:	mov    eax,DWORD PTR [ebp-0x10]
  42709e:	xor    eax,ecx
  4270a0:	add    eax,edx
  4270a2:	mov    DWORD PTR [ebp-0x20],eax
  4270a5:	mov    eax,DWORD PTR [ebp-0x10]
  4270a8:	xor    eax,ecx
  4270aa:	add    eax,edx
  4270ac:	mov    DWORD PTR [ebp-0x24],eax
  4270af:	movzx  esi,WORD PTR [ebp-0x4]
  4270b3:	movzx  edi,WORD PTR [ebp-0xc]
  4270b7:	mov    eax,0x8a8c
  4270bc:	xor    si,ax
  4270bf:	mov    ebx,0x8a8c
  4270c4:	xor    di,bx
  4270c7:	mov    eax,0x3b50
  4270cc:	add    si,ax
  4270cf:	add    di,ax
  4270d2:	sub    edi,esi
  4270d4:	mov    WORD PTR [ebp-0xc],di
  4270d8:	mov    esi,DWORD PTR [ebp-0x20]
  4270db:	mov    edi,DWORD PTR [ebp-0x14]
  4270de:	mov    si,WORD PTR [edi+esi*2]
  4270e2:	mov    WORD PTR [ebp+0x8],si
  4270e6:	mov    esi,DWORD PTR [ebp-0x24]
  4270e9:	mov    edi,DWORD PTR [ebp-0x18]
  4270ec:	mov    si,WORD PTR [edi+esi*2]
  4270f0:	mov    WORD PTR [ebp+0xc],si
  4270f4:	mov    esi,0x72e0
  4270f9:	jmp    0x427206
  4270fe:	mov    edi,DWORD PTR [ebp-0x10]
  427101:	mov    bx,WORD PTR [ebp+0xc]
  427105:	xor    edi,0x899
  42710b:	add    edi,esi
  42710d:	cmp    bx,di
  427110:	je     0x427230
  427116:	mov    edi,DWORD PTR [ebp-0x10]
  427119:	mov    ebx,DWORD PTR [ebp+0x10]
  42711c:	xor    edi,ecx
  42711e:	add    edi,edx
  427120:	cmp    ebx,edi
  427122:	mov    di,WORD PTR [ebp+0xc]
  427126:	mov    bx,WORD PTR [ebp+0x8]
  42712a:	je     0x4271bd
  427130:	cmp    bx,di
  427133:	je     0x4271c6
  427139:	mov    di,WORD PTR [ebp-0x4]
  42713d:	mov    ebx,0x8a8c
  427142:	xor    di,bx
  427145:	mov    bx,WORD PTR [ebp+0x8]
  427149:	add    di,ax
  42714c:	cmp    bx,di
  42714f:	jb     0x427177
  427151:	mov    di,WORD PTR [ebp-0x8]
  427155:	mov    ebx,0x8a8c
  42715a:	xor    di,bx
  42715d:	mov    bx,WORD PTR [ebp+0x8]
  427161:	add    di,ax
  427164:	cmp    bx,di
  427167:	ja     0x427177
  427169:	movzx  edi,WORD PTR [ebp+0x8]
  42716d:	movzx  ebx,WORD PTR [ebp-0xc]
  427171:	add    edi,ebx
  427173:	mov    WORD PTR [ebp+0x8],di
  427177:	mov    di,WORD PTR [ebp-0x4]
  42717b:	mov    ebx,0x8a8c
  427180:	xor    di,bx
  427183:	mov    bx,WORD PTR [ebp+0xc]
  427187:	add    di,ax
  42718a:	cmp    bx,di
  42718d:	jb     0x4271b5
  42718f:	mov    di,WORD PTR [ebp-0x8]
  427193:	mov    ebx,0x8a8c
  427198:	xor    di,bx
  42719b:	mov    bx,WORD PTR [ebp+0xc]
  42719f:	add    di,ax
  4271a2:	cmp    bx,di
  4271a5:	ja     0x4271b5
  4271a7:	movzx  edi,WORD PTR [ebp+0xc]
  4271ab:	movzx  ebx,WORD PTR [ebp-0xc]
  4271af:	add    edi,ebx
  4271b1:	mov    WORD PTR [ebp+0xc],di
  4271b5:	mov    di,WORD PTR [ebp+0xc]
  4271b9:	mov    bx,WORD PTR [ebp+0x8]
  4271bd:	cmp    bx,di
  4271c0:	jne    0x427281
  4271c6:	mov    edi,DWORD PTR [ebp-0x28]
  4271c9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271cc:	xor    edi,ecx
  4271ce:	lea    edi,[edi+ebx*1+0x3272e0]
  4271d5:	mov    DWORD PTR [ebp-0x14],edi
  4271d8:	mov    edi,DWORD PTR [ebp-0x28]
  4271db:	mov    ebx,DWORD PTR [ebp-0x18]
  4271de:	xor    edi,ecx
  4271e0:	lea    edi,[edi+ebx*1+0x3272e0]
  4271e7:	mov    DWORD PTR [ebp-0x18],edi
  4271ea:	mov    edi,DWORD PTR [ebp-0x20]
  4271ed:	mov    ebx,DWORD PTR [ebp-0x14]
  4271f0:	mov    di,WORD PTR [ebx+edi*2]
  4271f4:	mov    WORD PTR [ebp+0x8],di
  4271f8:	mov    edi,DWORD PTR [ebp-0x24]
  4271fb:	mov    ebx,DWORD PTR [ebp-0x18]
  4271fe:	mov    di,WORD PTR [ebx+edi*2]
  427202:	mov    WORD PTR [ebp+0xc],di
  427206:	mov    edi,DWORD PTR [ebp-0x10]
  427209:	mov    bx,WORD PTR [ebp+0x8]
  42720d:	xor    edi,0x899
  427213:	add    edi,esi
  427215:	cmp    bx,di
  427218:	jne    0x4270fe
  42721e:	mov    esi,DWORD PTR [ebp-0x1c]
  427221:	xor    esi,ecx
  427223:	mov    ecx,DWORD PTR [ebp-0x10]
  427226:	add    esi,edx
  427228:	imul   esi,ecx
  42722b:	mov    DWORD PTR [ebp-0x10],esi
  42722e:	jmp    0x427242
  427230:	mov    edx,DWORD PTR [ebp-0x10]
  427233:	xor    edx,ecx
  427235:	mov    ecx,DWORD PTR [ebp-0x1c]
  427238:	lea    ecx,[edx+ecx*1+0x3272e0]
  42723f:	mov    DWORD PTR [ebp-0x1c],ecx
  427242:	mov    edx,DWORD PTR [ebp-0x20]
  427245:	mov    esi,DWORD PTR [ebp-0x14]
  427248:	mov    si,WORD PTR [esi+edx*2]
  42724c:	mov    ecx,eax
  42724e:	sub    si,cx
  427251:	mov    edx,0x8a8c
  427256:	xor    si,dx
  427259:	mov    ecx,0x4e3c
  42725e:	cmp    si,cx
  427261:	jne    0x42727c
  427263:	mov    esi,DWORD PTR [ebp-0x24]
  427266:	mov    edi,DWORD PTR [ebp-0x18]
  427269:	mov    si,WORD PTR [edi+esi*2]
  42726d:	sub    si,ax
  427270:	xor    si,dx
  427273:	cmp    si,cx
  427276:	jne    0x42727c
  427278:	xor    eax,eax
  42727a:	jmp    0x427288
  42727c:	xor    eax,eax
  42727e:	inc    eax
  42727f:	jmp    0x427288
  427281:	mov    eax,DWORD PTR [ebp-0x1c]
  427284:	xor    eax,ecx
  427286:	add    eax,edx
  427288:	pop    edi
  427289:	pop    esi
  42728a:	pop    ebx
  42728b:	leave  
  42728c:	ret    0xc
  42728f:	push   ebp
  427290:	mov    ebp,esp
  427292:	push   ecx
  427293:	mov    cx,WORD PTR [eax]
  427296:	push   esi
  427297:	mov    esi,0x3b50
  42729c:	sub    cx,si
  42729f:	mov    esi,0x8a8c
  4272a4:	xor    cx,si
  4272a7:	mov    esi,0x4e3c
  4272ac:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  4272b3:	mov    edx,0xf89c85b9
  4272b8:	cmp    cx,si
  4272bb:	je     0x42731a
  4272bd:	push   ebx
  4272be:	push   edi
  4272bf:	movzx  ecx,cx
  4272c2:	mov    edi,0xffcd8d20
  4272c7:	mov    esi,0x7510899
  4272cc:	mov    ebx,0x4f80
  4272d1:	cmp    cx,bx
  4272d4:	jne    0x4272d9
  4272d6:	mov    DWORD PTR [ebp-0x4],edx
  4272d9:	lea    edx,[edi+0x1]
  4272dc:	xor    edx,esi
  4272de:	mov    edi,edx
  4272e0:	xor    edi,esi
  4272e2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  4272ea:	mov    ebx,0x3b50
  4272ef:	sub    cx,bx
  4272f2:	mov    ebx,0x8a8c
  4272f7:	xor    cx,bx
  4272fa:	mov    ebx,0x4e3c
  4272ff:	cmp    cx,bx
  427302:	jne    0x4272cc
  427304:	mov    ecx,DWORD PTR [ebp-0x4]
  427307:	pop    edi
  427308:	pop    ebx
  427309:	cmp    ecx,0xf89c8586
  42730f:	je     0x42731a
  427311:	xor    ecx,esi
  427313:	lea    eax,[eax+ecx*2+0x64e5c2]
  42731a:	pop    esi
  42731b:	leave  
  42731c:	ret    
  42731d:	push   ebp
  42731e:	mov    ebp,esp
  427320:	push   ecx
  427321:	push   esi
  427322:	push   edi
  427323:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  42732a:	mov    esi,0xf89c85b9
  42732f:	call   0x42728f
  427334:	mov    edi,eax
  427336:	mov    al,BYTE PTR [edi]
  427338:	add    al,0x9
  42733a:	xor    al,0x73
  42733c:	cmp    al,0x7a
  42733e:	je     0x4273a1
  427340:	mov    eax,edi
  427342:	mov    edx,0xffcd8d20
  427347:	mov    ecx,0x7510899
  42734c:	push   ebx
  42734d:	mov    ax,WORD PTR [eax]
  427350:	mov    ebx,0x3b50
  427355:	sub    ax,bx
  427358:	mov    ebx,0x8a8c
  42735d:	xor    ax,bx
  427360:	mov    ebx,0x4e52
  427365:	cmp    ax,bx
  427368:	jne    0x42736d
  42736a:	mov    DWORD PTR [ebp-0x4],esi
  42736d:	lea    esi,[edx+0x1]
  427370:	xor    esi,ecx
  427372:	mov    edx,esi
  427374:	xor    edx,ecx
  427376:	lea    eax,[edi+edx*2+0x64e5c0]
  42737d:	mov    bl,BYTE PTR [eax]
  42737f:	add    bl,0x9
  427382:	xor    bl,0x73
  427385:	cmp    bl,0x7a
  427388:	jne    0x42734d
  42738a:	mov    eax,DWORD PTR [ebp-0x4]
  42738d:	pop    ebx
  42738e:	cmp    eax,0xf89c8586
  427393:	je     0x4273a1
  427395:	xor    eax,ecx
  427397:	xor    ecx,ecx
  427399:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  4273a1:	mov    eax,edi
  4273a3:	pop    edi
  4273a4:	pop    esi
  4273a5:	leave  
  4273a6:	ret    
  4273a7:	push   ebp
  4273a8:	mov    ebp,esp
  4273aa:	push   ecx
  4273ab:	push   esi
  4273ac:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  4273b3:	mov    esi,0xf89c85b9
  4273b8:	call   0x42728f
  4273bd:	mov    cx,WORD PTR [eax]
  4273c0:	mov    edx,0x3b50
  4273c5:	sub    cx,dx
  4273c8:	mov    edx,0x8a8c
  4273cd:	xor    cx,dx
  4273d0:	mov    edx,0x4e3c
  4273d5:	cmp    cx,dx
  4273d8:	je     0x427431
  4273da:	push   ebx
  4273db:	push   edi
  4273dc:	movzx  ecx,cx
  4273df:	mov    edx,0xffcd8d20
  4273e4:	mov    edi,0x7510899
  4273e9:	mov    ebx,0x4e52
  4273ee:	cmp    cx,bx
  4273f1:	jne    0x4273f6
  4273f3:	mov    DWORD PTR [ebp-0x4],esi
  4273f6:	lea    esi,[edx+0x1]
  4273f9:	xor    esi,edi
  4273fb:	mov    edx,esi
  4273fd:	xor    edx,edi
  4273ff:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  427407:	mov    ebx,0x3b50
  42740c:	sub    cx,bx
  42740f:	mov    ebx,0x8a8c
  427414:	xor    cx,bx
  427417:	mov    ebx,0x4e3c
  42741c:	cmp    cx,bx
  42741f:	jne    0x4273e9
  427421:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  427428:	pop    edi
  427429:	pop    ebx
  42742a:	je     0x427431
  42742c:	xor    eax,eax
  42742e:	inc    eax
  42742f:	jmp    0x427433
  427431:	xor    eax,eax
  427433:	pop    esi
  427434:	leave  
  427435:	ret    
  427436:	push   ebp
  427437:	mov    ebp,esp
  427439:	push   ecx
  42743a:	mov    eax,DWORD PTR [ebp+0x8]
  42743d:	movzx  ecx,WORD PTR [eax]
  427440:	push   esi
  427441:	lea    eax,[ecx-0x3b50]
  427447:	mov    esi,0x8a8c
  42744c:	push   edi
  42744d:	xor    eax,esi
  42744f:	mov    edi,0x4e3c
  427454:	mov    DWORD PTR [ebp-0x4],edx
  427457:	cmp    ax,di
  42745a:	je     0x427487
  42745c:	mov    eax,DWORD PTR [ebp+0x8]
  42745f:	sub    eax,edx
  427461:	mov    DWORD PTR [ebp+0x8],eax
  427464:	jmp    0x427469
  427466:	mov    eax,DWORD PTR [ebp+0x8]
  427469:	mov    WORD PTR [edx],cx
  42746c:	add    edx,0x2
  42746f:	movzx  edi,WORD PTR [eax+edx*1]
  427473:	mov    ecx,edi
  427475:	add    edi,0xffffc4b0
  42747b:	xor    edi,esi
  42747d:	mov    eax,0x4e3c
  427482:	cmp    di,ax
  427485:	jne    0x427466
  427487:	xor    eax,eax
  427489:	pop    edi
  42748a:	mov    WORD PTR [edx],ax
  42748d:	mov    eax,DWORD PTR [ebp-0x4]
  427490:	pop    esi
  427491:	leave  
  427492:	ret    0x4
  427495:	push   ebp
  427496:	mov    ebp,esp
  427498:	sub    esp,0x18
  42749b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4274a2:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4274a9:	mov    eax,DWORD PTR [ebp-0x14]
  4274ac:	xor    eax,0x7510899
  4274b1:	add    eax,0x3272e0
  4274b6:	mov    DWORD PTR [ebp-0x8],eax
  4274b9:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4274c0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4274c7:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  4274ce:	mov    eax,DWORD PTR [ebp-0x14]
  4274d1:	xor    eax,0x7510899
  4274d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4274d9:	lea    eax,[ecx+eax*1+0x3272e0]
  4274e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4274e3:	xor    ecx,0x7510899
  4274e9:	add    ecx,0x3272e0
  4274ef:	mov    edx,DWORD PTR [ebp+0x10]
  4274f2:	imul   edx,ecx
  4274f5:	cmp    eax,edx
  4274f7:	jae    0x4275ea
  4274fd:	mov    eax,DWORD PTR [ebp+0x10]
  427500:	mov    ecx,DWORD PTR [ebp-0x8]
  427503:	sub    eax,ecx
  427505:	mov    ecx,DWORD PTR [ebp-0x10]
  427508:	xor    ecx,0x7510899
  42750e:	add    ecx,0x3272e0
  427514:	cmp    eax,ecx
  427516:	jbe    0x427548
  427518:	mov    eax,DWORD PTR [ebp+0x8]
  42751b:	add    eax,DWORD PTR [ebp-0x8]
  42751e:	mov    ecx,DWORD PTR [ebp+0xc]
  427521:	add    ecx,DWORD PTR [ebp-0x8]
  427524:	mov    edx,DWORD PTR [ecx]
  427526:	mov    DWORD PTR [eax],edx
  427528:	mov    ecx,DWORD PTR [ecx+0x4]
  42752b:	mov    DWORD PTR [eax+0x4],ecx
  42752e:	mov    eax,DWORD PTR [ebp-0x10]
  427531:	xor    eax,0x7510899
  427536:	mov    ecx,DWORD PTR [ebp-0x8]
  427539:	lea    eax,[ecx+eax*1+0x3272e0]
  427540:	mov    DWORD PTR [ebp-0x8],eax
  427543:	jmp    0x4275e5
  427548:	mov    eax,DWORD PTR [ebp+0x10]
  42754b:	mov    ecx,DWORD PTR [ebp-0x8]
  42754e:	sub    eax,ecx
  427550:	mov    ecx,DWORD PTR [ebp-0xc]
  427553:	xor    ecx,0x7510899
  427559:	add    ecx,0x3272e0
  42755f:	cmp    eax,ecx
  427561:	jbe    0x42758a
  427563:	mov    eax,DWORD PTR [ebp+0x8]
  427566:	add    eax,DWORD PTR [ebp-0x8]
  427569:	mov    ecx,DWORD PTR [ebp+0xc]
  42756c:	add    ecx,DWORD PTR [ebp-0x8]
  42756f:	mov    ecx,DWORD PTR [ecx]
  427571:	mov    DWORD PTR [eax],ecx
  427573:	mov    eax,DWORD PTR [ebp-0xc]
  427576:	xor    eax,0x7510899
  42757b:	mov    ecx,DWORD PTR [ebp-0x8]
  42757e:	lea    eax,[ecx+eax*1+0x3272e0]
  427585:	mov    DWORD PTR [ebp-0x8],eax
  427588:	jmp    0x4275e5
  42758a:	mov    eax,DWORD PTR [ebp+0x10]
  42758d:	mov    ecx,DWORD PTR [ebp-0x8]
  427590:	sub    eax,ecx
  427592:	mov    ecx,DWORD PTR [ebp-0x4]
  427595:	xor    ecx,0x7510899
  42759b:	add    ecx,0x3272e0
  4275a1:	cmp    eax,ecx
  4275a3:	jbe    0x4275ce
  4275a5:	mov    eax,DWORD PTR [ebp+0x8]
  4275a8:	add    eax,DWORD PTR [ebp-0x8]
  4275ab:	mov    ecx,DWORD PTR [ebp+0xc]
  4275ae:	add    ecx,DWORD PTR [ebp-0x8]
  4275b1:	mov    cx,WORD PTR [ecx]
  4275b4:	mov    WORD PTR [eax],cx
  4275b7:	mov    eax,DWORD PTR [ebp-0x4]
  4275ba:	xor    eax,0x7510899
  4275bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4275c2:	lea    eax,[ecx+eax*1+0x3272e0]
  4275c9:	mov    DWORD PTR [ebp-0x8],eax
  4275cc:	jmp    0x4275e5
  4275ce:	mov    eax,DWORD PTR [ebp+0x8]
  4275d1:	add    eax,DWORD PTR [ebp-0x8]
  4275d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4275d7:	add    ecx,DWORD PTR [ebp-0x8]
  4275da:	mov    cl,BYTE PTR [ecx]
  4275dc:	mov    BYTE PTR [eax],cl
  4275de:	mov    eax,DWORD PTR [ebp-0x8]
  4275e1:	inc    eax
  4275e2:	mov    DWORD PTR [ebp-0x8],eax
  4275e5:	jmp    0x4274ce
  4275ea:	leave  
  4275eb:	ret    0xc
  4275ee:	push   ebp
  4275ef:	mov    ebp,esp
  4275f1:	push   ecx
  4275f2:	push   ecx
  4275f3:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4275fa:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  427601:	xor    eax,eax
  427603:	inc    eax
  427604:	je     0x427646
  427606:	mov    eax,DWORD PTR [ebp-0x4]
  427609:	xor    eax,0x7510899
  42760e:	add    eax,0x3272e0
  427613:	cmp    DWORD PTR [ebp+0xc],eax
  427616:	jne    0x42761a
  427618:	jmp    0x427646
  42761a:	mov    eax,DWORD PTR [ebp-0x8]
  42761d:	xor    eax,0x7510899
  427622:	add    eax,0x3272e0
  427627:	mov    ecx,DWORD PTR [ebp+0xc]
  42762a:	sub    ecx,eax
  42762c:	mov    DWORD PTR [ebp+0xc],ecx
  42762f:	mov    eax,DWORD PTR [ebp-0x4]
  427632:	xor    eax,0x7510899
  427637:	add    eax,0x3272e0
  42763c:	mov    ecx,DWORD PTR [ebp+0x8]
  42763f:	add    ecx,DWORD PTR [ebp+0xc]
  427642:	mov    BYTE PTR [ecx],al
  427644:	jmp    0x427601
  427646:	leave  
  427647:	ret    0x8
  42764a:	push   ebp
  42764b:	mov    ebp,esp
  42764d:	sub    esp,0x21c
  427653:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42765a:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  427661:	mov    eax,DWORD PTR [ebp+0x10]
  427664:	mov    eax,DWORD PTR [ebp-0x4]
  427667:	mov    ecx,DWORD PTR [ebp+0x8]
  42766a:	push   esi
  42766b:	push   edi
  42766c:	mov    edi,0x7510899
  427671:	xor    eax,edi
  427673:	mov    esi,0x3272e0
  427678:	add    eax,esi
  42767a:	cmp    eax,ecx
  42767c:	mov    eax,DWORD PTR [ebp-0x4]
  42767f:	jne    0x42768a
  427681:	xor    eax,edi
  427683:	add    eax,esi
  427685:	jmp    0x427736
  42768a:	mov    ecx,DWORD PTR [ebp+0xc]
  42768d:	xor    eax,edi
  42768f:	add    eax,esi
  427691:	cmp    eax,ecx
  427693:	jne    0x42769a
  427695:	mov    eax,DWORD PTR [ebp-0x4]
  427698:	jmp    0x427681
  42769a:	lea    eax,[ebp-0x21c]
  4276a0:	mov    DWORD PTR [ebp-0x8],eax
  4276a3:	mov    eax,DWORD PTR [ebp+0xc]
  4276a6:	mov    DWORD PTR [ebp-0x10],eax
  4276a9:	mov    eax,DWORD PTR [ebp-0x4]
  4276ac:	xor    eax,edi
  4276ae:	add    eax,esi
  4276b0:	mov    DWORD PTR [ebp+0x10],eax
  4276b3:	mov    eax,DWORD PTR [ebp+0xc]
  4276b6:	push   ebx
  4276b7:	call   0x4273a7
  4276bc:	mov    ebx,eax
  4276be:	mov    eax,DWORD PTR [ebp+0x8]
  4276c1:	mov    eax,DWORD PTR [eax+0x14]
  4276c4:	jmp    0x42771e
  4276c6:	mov    eax,DWORD PTR [ebp+0xc]
  4276c9:	sub    eax,0x8
  4276cc:	mov    DWORD PTR [ebp-0xc],eax
  4276cf:	mov    eax,DWORD PTR [ebp-0xc]
  4276d2:	mov    eax,DWORD PTR [eax+0x28]
  4276d5:	call   0x42728f
  4276da:	mov    DWORD PTR [ebp+0x10],eax
  4276dd:	push   DWORD PTR [ebp+0x10]
  4276e0:	mov    edx,DWORD PTR [ebp-0x8]
  4276e3:	call   0x427436
  4276e8:	mov    eax,DWORD PTR [ebp-0x4]
  4276eb:	xor    eax,edi
  4276ed:	add    eax,esi
  4276ef:	cmp    eax,ebx
  4276f1:	jne    0x4276fb
  4276f3:	mov    eax,DWORD PTR [ebp-0x8]
  4276f6:	call   0x42731d
  4276fb:	mov    eax,DWORD PTR [ebp-0x14]
  4276fe:	xor    eax,edi
  427700:	add    eax,esi
  427702:	push   eax
  427703:	push   DWORD PTR [ebp-0x10]
  427706:	push   DWORD PTR [ebp-0x8]
  427709:	call   0x427021
  42770e:	mov    ecx,DWORD PTR [ebp-0x4]
  427711:	xor    ecx,edi
  427713:	add    ecx,esi
  427715:	cmp    eax,ecx
  427717:	je     0x42773c
  427719:	mov    eax,DWORD PTR [ebp+0xc]
  42771c:	mov    eax,DWORD PTR [eax]
  42771e:	mov    DWORD PTR [ebp+0xc],eax
  427721:	mov    eax,DWORD PTR [ebp+0x8]
  427724:	mov    ecx,DWORD PTR [ebp+0xc]
  427727:	add    eax,0x14
  42772a:	cmp    ecx,eax
  42772c:	jne    0x4276c6
  42772e:	mov    eax,DWORD PTR [ebp-0x4]
  427731:	xor    eax,edi
  427733:	add    eax,esi
  427735:	pop    ebx
  427736:	pop    edi
  427737:	pop    esi
  427738:	leave  
  427739:	ret    0xc
  42773c:	mov    eax,DWORD PTR [ebp-0xc]
  42773f:	mov    eax,DWORD PTR [eax+0x18]
  427742:	jmp    0x427735
  427744:	push   ebp
  427745:	mov    ebp,esp
  427747:	mov    eax,DWORD PTR [ebp+0xc]
  42774a:	sub    esp,0x10
  42774d:	cmp    DWORD PTR [ebp+0x8],0x0
  427751:	push   ebx
  427752:	push   esi
  427753:	push   edi
  427754:	je     0x427809
  42775a:	test   eax,eax
  42775c:	je     0x427809
  427762:	movzx  eax,WORD PTR [eax+0x20]
  427766:	mov    ecx,eax
  427768:	mov    DWORD PTR [ebp-0x10],eax
  42776b:	xor    edx,edx
  42776d:	and    DWORD PTR [ebp-0x8],edx
  427770:	mov    eax,0x8a8c
  427775:	xor    ecx,eax
  427777:	add    ecx,0x3b50
  42777d:	mov    DWORD PTR [ebp-0xc],ecx
  427780:	and    DWORD PTR [ebp-0x4],0x0
  427784:	xor    ecx,ecx
  427786:	push   0x78
  427788:	pop    edi
  427789:	cmp    cx,WORD PTR [ebp-0xc]
  42778d:	jae    0x4277f3
  42778f:	lea    esi,[edx-0x3b50]
  427795:	xor    esi,eax
  427797:	movzx  ecx,WORD PTR [ebp-0x4]
  42779b:	mov    ebx,DWORD PTR [ebp+0xc]
  42779e:	lea    ecx,[ebx+ecx*4]
  4277a1:	cmp    WORD PTR [ecx+0x2],si
  4277a5:	jne    0x4277de
  4277a7:	movzx  ecx,WORD PTR [ecx]
  4277aa:	mov    edi,0x4e3c
  4277af:	cmp    cx,di
  4277b2:	jne    0x4277c0
  4277b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4277b7:	movzx  edi,dx
  4277ba:	cmp    BYTE PTR [edi+ebx*1],0x0
  4277be:	je     0x4277ed
  4277c0:	mov    ebx,DWORD PTR [ebp+0x8]
  4277c3:	movzx  edi,dx
  4277c6:	movsx  di,BYTE PTR [edi+ebx*1]
  4277cb:	mov    ebx,0x3b50
  4277d0:	sub    di,bx
  4277d3:	xor    di,ax
  4277d6:	cmp    cx,di
  4277d9:	je     0x4277ed
  4277db:	push   0x7a
  4277dd:	pop    edi
  4277de:	inc    DWORD PTR [ebp-0x4]
  4277e1:	mov    cx,WORD PTR [ebp-0xc]
  4277e5:	cmp    WORD PTR [ebp-0x4],cx
  4277e9:	jb     0x427797
  4277eb:	jmp    0x4277f3
  4277ed:	inc    DWORD PTR [ebp-0x8]
  4277f0:	push   0x79
  4277f2:	pop    edi
  4277f3:	mov    esi,DWORD PTR [ebp+0x8]
  4277f6:	movzx  ecx,dx
  4277f9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4277fd:	je     0x427812
  4277ff:	inc    edx
  427800:	cmp    edi,0x7a
  427803:	jne    0x427780
  427809:	xor    eax,eax
  42780b:	pop    edi
  42780c:	pop    esi
  42780d:	pop    ebx
  42780e:	leave  
  42780f:	ret    0x8
  427812:	mov    ecx,DWORD PTR [ebp-0x8]
  427815:	add    ecx,0xffffc4b0
  42781b:	xor    cx,ax
  42781e:	xor    eax,eax
  427820:	cmp    cx,WORD PTR [ebp-0x10]
  427824:	sete   al
  427827:	jmp    0x42780b
  427829:	push   ebp
  42782a:	mov    ebp,esp
  42782c:	sub    esp,0x50
  42782f:	push   edi
  427830:	mov    edi,eax
  427832:	mov    eax,DWORD PTR [edi+0x1a8]
  427838:	cmp    DWORD PTR [eax],0x0
  42783b:	jne    0x427844
  42783d:	xor    eax,eax
  42783f:	jmp    0x427974
  427844:	push   0x2c
  427846:	push   DWORD PTR [ebp+0x8]
  427849:	call   0x4275ee
  42784e:	mov    edx,DWORD PTR [edi+0x1ac]
  427854:	lea    eax,[edi+0x22]
  427857:	mov    DWORD PTR [ebp-0x4c],eax
  42785a:	lea    eax,[edi+0x44]
  42785d:	mov    DWORD PTR [ebp-0x48],eax
  427860:	lea    eax,[edi+0x66]
  427863:	mov    DWORD PTR [ebp-0x44],eax
  427866:	lea    eax,[edi+0x88]
  42786c:	mov    DWORD PTR [ebp-0x40],eax
  42786f:	lea    eax,[edi+0xaa]
  427875:	mov    DWORD PTR [ebp-0x3c],eax
  427878:	lea    eax,[edi+0xcc]
  42787e:	mov    DWORD PTR [ebp-0x38],eax
  427881:	lea    eax,[edi+0xee]
  427887:	mov    DWORD PTR [ebp-0x34],eax
  42788a:	lea    eax,[edi+0x110]
  427890:	mov    DWORD PTR [ebp-0x30],eax
  427893:	lea    eax,[edi+0x132]
  427899:	mov    DWORD PTR [ebp-0x2c],eax
  42789c:	lea    eax,[edi+0x154]
  4278a2:	push   edi
  4278a3:	mov    DWORD PTR [ebp-0x50],edi
  4278a6:	mov    DWORD PTR [ebp-0x28],eax
  4278a9:	call   0x4279a8
  4278ae:	push   eax
  4278af:	mov    eax,DWORD PTR [edi+0x1a8]
  4278b5:	push   DWORD PTR [eax]
  4278b7:	call   0x42764a
  4278bc:	mov    DWORD PTR [ebp-0x10],eax
  4278bf:	test   eax,eax
  4278c1:	je     0x427974
  4278c7:	mov    ecx,DWORD PTR [eax+0x3c]
  4278ca:	push   ebx
  4278cb:	push   esi
  4278cc:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4278d0:	add    esi,eax
  4278d2:	mov    edi,DWORD PTR [esi+0x24]
  4278d5:	mov    ecx,DWORD PTR [esi+0x1c]
  4278d8:	mov    edx,DWORD PTR [esi+0x20]
  4278db:	mov    ebx,DWORD PTR [esi+0x18]
  4278de:	add    edi,eax
  4278e0:	mov    DWORD PTR [ebp-0x20],edi
  4278e3:	mov    edi,DWORD PTR [esi+0x14]
  4278e6:	add    ecx,eax
  4278e8:	add    edx,eax
  4278ea:	mov    DWORD PTR [ebp-0xc],ecx
  4278ed:	mov    DWORD PTR [ebp-0x1c],edx
  4278f0:	mov    DWORD PTR [ebp-0x8],edi
  4278f3:	cmp    edi,ebx
  4278f5:	ja     0x4278fa
  4278f7:	mov    DWORD PTR [ebp-0x8],ebx
  4278fa:	xor    ebx,ebx
  4278fc:	mov    DWORD PTR [ebp-0x18],ebx
  4278ff:	cmp    DWORD PTR [ebp-0x8],ebx
  427902:	jbe    0x427972
  427904:	jmp    0x427909
  427906:	mov    edx,DWORD PTR [ebp-0x1c]
  427909:	mov    edi,DWORD PTR [ebp-0x20]
  42790c:	movzx  edi,WORD PTR [edi+ebx*2]
  427910:	cmp    ebx,DWORD PTR [esi+0x18]
  427913:	jae    0x427972
  427915:	cmp    edi,DWORD PTR [esi+0x14]
  427918:	jae    0x427972
  42791a:	mov    ebx,DWORD PTR [edx+ebx*4]
  42791d:	mov    edx,DWORD PTR [ebp+0x8]
  427920:	mov    edi,DWORD PTR [ecx+edi*4]
  427923:	mov    DWORD PTR [ebp-0x4],edx
  427926:	lea    edx,[ebp-0x50]
  427929:	add    ebx,eax
  42792b:	add    edi,eax
  42792d:	sub    edx,DWORD PTR [ebp+0x8]
  427930:	mov    DWORD PTR [ebp-0x14],0xb
  427937:	mov    DWORD PTR [ebp-0x24],edx
  42793a:	mov    edx,DWORD PTR [ebp-0x4]
  42793d:	cmp    DWORD PTR [edx],0x0
  427940:	jne    0x42795d
  427942:	mov    eax,DWORD PTR [ebp-0x24]
  427945:	push   DWORD PTR [eax+edx*1]
  427948:	push   ebx
  427949:	call   0x427744
  42794e:	mov    ecx,DWORD PTR [ebp-0xc]
  427951:	test   eax,eax
  427953:	je     0x42795a
  427955:	mov    eax,DWORD PTR [ebp-0x4]
  427958:	mov    DWORD PTR [eax],edi
  42795a:	mov    eax,DWORD PTR [ebp-0x10]
  42795d:	add    DWORD PTR [ebp-0x4],0x4
  427961:	dec    DWORD PTR [ebp-0x14]
  427964:	jne    0x42793a
  427966:	mov    ebx,DWORD PTR [ebp-0x18]
  427969:	inc    ebx
  42796a:	mov    DWORD PTR [ebp-0x18],ebx
  42796d:	cmp    ebx,DWORD PTR [ebp-0x8]
  427970:	jb     0x427906
  427972:	pop    esi
  427973:	pop    ebx
  427974:	pop    edi
  427975:	leave  
  427976:	ret    0x4
  427979:	push   ebp
  42797a:	mov    ebp,esp
  42797c:	mov    eax,DWORD PTR [ebp+0x8]
  42797f:	push   esi
  427980:	push   DWORD PTR [eax+0x1d8]
  427986:	lea    esi,[eax+0x198]
  42798c:	mov    eax,DWORD PTR [ebp+0x8]
  42798f:	call   0x427829
  427994:	mov    ecx,DWORD PTR [esi]
  427996:	mov    DWORD PTR [ecx],eax
  427998:	mov    eax,DWORD PTR [esi]
  42799a:	xor    ecx,ecx
  42799c:	cmp    DWORD PTR [eax],ecx
  42799e:	pop    esi
  42799f:	setne  cl
  4279a2:	mov    eax,ecx
  4279a4:	pop    ebp
  4279a5:	ret    0x4
  4279a8:	mov    ecx,DWORD PTR [edi+0x188]
  4279ae:	push   ebx
  4279af:	jmp    0x4279c4
  4279b1:	xor    eax,0x8a8c
  4279b6:	add    eax,0x3b50
  4279bb:	mov    WORD PTR [ecx],ax
  4279be:	add    ecx,0x2
  4279c1:	add    edx,0x2
  4279c4:	movzx  eax,WORD PTR [edx]
  4279c7:	mov    ebx,0x4e3c
  4279cc:	cmp    ax,bx
  4279cf:	jne    0x4279b1
  4279d1:	xor    eax,eax
  4279d3:	mov    WORD PTR [ecx],ax
  4279d6:	mov    eax,DWORD PTR [edi+0x188]
  4279dc:	pop    ebx
  4279dd:	ret    
  4279de:	push   edi
  4279df:	mov    edi,eax
  4279e1:	mov    eax,DWORD PTR [esi+0x188]
  4279e7:	shl    edi,0x6
  4279ea:	add    eax,edi
  4279ec:	jmp    0x4279f8
  4279ee:	xor    cl,0x73
  4279f1:	sub    cl,0x9
  4279f4:	mov    BYTE PTR [eax],cl
  4279f6:	inc    eax
  4279f7:	inc    edx
  4279f8:	mov    cl,BYTE PTR [edx]
  4279fa:	cmp    cl,0x7a
  4279fd:	jne    0x4279ee
  4279ff:	mov    BYTE PTR [eax],0x0
  427a02:	mov    eax,DWORD PTR [esi+0x188]
  427a08:	add    eax,edi
  427a0a:	pop    edi
  427a0b:	ret    
  427a0c:	push   ebp
  427a0d:	mov    ebp,esp
  427a0f:	sub    esp,0x38
  427a12:	push   ebx
  427a13:	mov    ebx,0xf89c85b9
  427a18:	mov    DWORD PTR [ebp-0x4],ebx
  427a1b:	lea    eax,[ebx-0x1]
  427a1e:	push   esi
  427a1f:	mov    DWORD PTR [ebp-0x24],eax
  427a22:	mov    ecx,DWORD PTR [ebp-0x4]
  427a25:	mov    edx,DWORD PTR [ebp+0x8]
  427a28:	mov    esi,0x7510899
  427a2d:	push   edi
  427a2e:	xor    ecx,esi
  427a30:	mov    edi,0x3272e0
  427a35:	add    ecx,edi
  427a37:	cmp    edx,ecx
  427a39:	je     0x427ba7
  427a3f:	mov    ecx,DWORD PTR [ebp-0x4]
  427a42:	mov    edx,DWORD PTR [ebp+0xc]
  427a45:	xor    ecx,esi
  427a47:	add    ecx,edi
  427a49:	cmp    edx,ecx
  427a4b:	je     0x427ba7
  427a51:	mov    ecx,DWORD PTR [ebp+0x10]
  427a54:	mov    DWORD PTR [ebp-0x18],ecx
  427a57:	mov    ecx,DWORD PTR [ebp+0xc]
  427a5a:	mov    DWORD PTR [ebp-0x14],ecx
  427a5d:	mov    ecx,DWORD PTR [ebp+0x8]
  427a60:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  427a67:	mov    DWORD PTR [ebp-0x20],eax
  427a6a:	mov    DWORD PTR [ebp-0x10],ebx
  427a6d:	mov    DWORD PTR [ebp+0xc],eax
  427a70:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  427a77:	mov    eax,DWORD PTR [ebp+0xc]
  427a7a:	mov    DWORD PTR [ebp-0xc],ecx
  427a7d:	xor    eax,esi
  427a7f:	mov    ecx,0xffcd8d20
  427a84:	sub    ecx,eax
  427a86:	add    ecx,DWORD PTR [ebp-0x14]
  427a89:	mov    DWORD PTR [ebp+0x8],ecx
  427a8c:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  427a93:	jmp    0x427b97
  427a98:	mov    eax,DWORD PTR [ebp+0xc]
  427a9b:	mov    ecx,DWORD PTR [ebp+0xc]
  427a9e:	xor    eax,esi
  427aa0:	xor    ecx,esi
  427aa2:	lea    ecx,[eax+ecx*1+0x64e5c0]
  427aa9:	mov    eax,DWORD PTR [ebp+0x8]
  427aac:	xor    edx,edx
  427aae:	div    ecx
  427ab0:	mov    eax,DWORD PTR [ebp+0x10]
  427ab3:	mov    ecx,DWORD PTR [ebp+0xc]
  427ab6:	xor    eax,esi
  427ab8:	xor    ecx,esi
  427aba:	sub    eax,ecx
  427abc:	cmp    edx,eax
  427abe:	jne    0x427b53
  427ac4:	mov    eax,DWORD PTR [ebp+0x8]
  427ac7:	add    eax,DWORD PTR [ebp-0xc]
  427aca:	mov    dl,BYTE PTR [eax]
  427acc:	mov    eax,DWORD PTR [ebp-0x10]
  427acf:	mov    ecx,DWORD PTR [ebp-0x8]
  427ad2:	xor    eax,esi
  427ad4:	xor    ecx,esi
  427ad6:	add    eax,edi
  427ad8:	add    ecx,edi
  427ada:	cmp    eax,ecx
  427adc:	jae    0x427b24
  427ade:	lea    ecx,[eax-0x3272e0]
  427ae4:	mov    DWORD PTR [ebp-0x4],ecx
  427ae7:	mov    ebx,DWORD PTR [ebp-0x4]
  427aea:	xor    ebx,esi
  427aec:	add    ebx,0x7f55d8fb
  427af2:	lea    ecx,[ebp+eax*4-0x38]
  427af6:	mov    DWORD PTR [ecx],ebx
  427af8:	mov    ebx,DWORD PTR [ecx]
  427afa:	cmp    ebx,0x244ecbda
  427b00:	jbe    0x427b0a
  427b02:	add    DWORD PTR [ecx],0x405fc1d
  427b08:	jmp    0x427b10
  427b0a:	add    DWORD PTR [ecx],0xfdaf43e3
  427b10:	mov    ecx,DWORD PTR [ebp-0x8]
  427b13:	xor    ecx,esi
  427b15:	inc    eax
  427b16:	inc    DWORD PTR [ebp-0x4]
  427b19:	add    ecx,edi
  427b1b:	cmp    eax,ecx
  427b1d:	jb     0x427ae7
  427b1f:	mov    ebx,0xf89c85b9
  427b24:	mov    eax,DWORD PTR [ebp-0x18]
  427b27:	test   eax,eax
  427b29:	jne    0x427b33
  427b2b:	xor    dl,0x73
  427b2e:	sub    dl,0x9
  427b31:	jmp    0x427b49
  427b33:	mov    eax,DWORD PTR [ebp-0x1c]
  427b36:	xor    al,0x99
  427b38:	mov    cl,0x20
  427b3a:	sub    cl,al
  427b3c:	add    dl,cl
  427b3e:	mov    ecx,DWORD PTR [ebp-0x20]
  427b41:	xor    cl,0x99
  427b44:	sub    cl,0x20
  427b47:	ror    dl,cl
  427b49:	xor    eax,eax
  427b4b:	mov    eax,DWORD PTR [ebp+0x8]
  427b4e:	add    eax,DWORD PTR [ebp-0xc]
  427b51:	mov    BYTE PTR [eax],dl
  427b53:	mov    eax,DWORD PTR [ebp+0x8]
  427b56:	mov    ecx,DWORD PTR [ebp-0x10]
  427b59:	sub    eax,edi
  427b5b:	xor    eax,esi
  427b5d:	cmp    eax,ecx
  427b5f:	jne    0x427b85
  427b61:	mov    eax,DWORD PTR [ebp+0x10]
  427b64:	mov    ecx,DWORD PTR [ebp+0xc]
  427b67:	xor    eax,esi
  427b69:	xor    ecx,esi
  427b6b:	sub    eax,ecx
  427b6d:	sub    eax,edi
  427b6f:	xor    eax,esi
  427b71:	mov    DWORD PTR [ebp+0x10],eax
  427b74:	mov    eax,DWORD PTR [ebp+0xc]
  427b77:	xor    eax,esi
  427b79:	mov    ecx,0xffcd8d20
  427b7e:	sub    ecx,eax
  427b80:	add    ecx,DWORD PTR [ebp-0x14]
  427b83:	jmp    0x427b94
  427b85:	mov    eax,DWORD PTR [ebp+0xc]
  427b88:	xor    eax,esi
  427b8a:	mov    ecx,0xffcd8d20
  427b8f:	sub    ecx,eax
  427b91:	add    ecx,DWORD PTR [ebp+0x8]
  427b94:	mov    DWORD PTR [ebp+0x8],ecx
  427b97:	mov    eax,DWORD PTR [ebp+0x10]
  427b9a:	cmp    eax,ebx
  427b9c:	jne    0x427a98
  427ba2:	mov    eax,DWORD PTR [ebp-0x24]
  427ba5:	jmp    0x427baa
  427ba7:	mov    eax,DWORD PTR [ebp-0x4]
  427baa:	xor    eax,esi
  427bac:	add    eax,edi
  427bae:	pop    edi
  427baf:	pop    esi
  427bb0:	pop    ebx
  427bb1:	leave  
  427bb2:	ret    0xc
  427bb5:	push   ebp
  427bb6:	mov    ebp,esp
  427bb8:	sub    esp,0x14
  427bbb:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427bc2:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427bc9:	mov    eax,DWORD PTR [ebx]
  427bcb:	mov    DWORD PTR [ebp-0x8],eax
  427bce:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427bd5:	push   esi
  427bd6:	push   edi
  427bd7:	mov    DWORD PTR [ebp-0x14],0xead718d9
  427bde:	mov    edi,DWORD PTR [ebp-0x4]
  427be1:	mov    ecx,DWORD PTR [ebp-0x10]
  427be4:	mov    eax,0x7510899
  427be9:	xor    edi,eax
  427beb:	mov    edx,0x3272e0
  427bf0:	xor    ecx,eax
  427bf2:	add    edi,edx
  427bf4:	add    ecx,edx
  427bf6:	imul   edi,ecx
  427bf9:	jmp    0x427c41
  427bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  427bfe:	mov    esi,DWORD PTR [ebp-0x4]
  427c01:	xor    ecx,eax
  427c03:	xor    esi,eax
  427c05:	add    ecx,edx
  427c07:	add    esi,edx
  427c09:	test   esi,ecx
  427c0b:	mov    esi,DWORD PTR [ebp-0x8]
  427c0e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c11:	je     0x427c28
  427c13:	xor    ecx,eax
  427c15:	xor    esi,eax
  427c17:	add    ecx,edx
  427c19:	add    esi,edx
  427c1b:	shr    esi,cl
  427c1d:	mov    ecx,DWORD PTR [ebp-0x14]
  427c20:	xor    ecx,eax
  427c22:	add    ecx,edx
  427c24:	xor    esi,ecx
  427c26:	jmp    0x427c32
  427c28:	xor    esi,eax
  427c2a:	xor    ecx,eax
  427c2c:	add    esi,edx
  427c2e:	add    ecx,edx
  427c30:	shr    esi,cl
  427c32:	mov    DWORD PTR [ebp-0x8],esi
  427c35:	mov    ecx,DWORD PTR [ebp-0x4]
  427c38:	xor    ecx,eax
  427c3a:	lea    edi,[edi+ecx*1+0x3272e0]
  427c41:	mov    ecx,DWORD PTR [ebp-0xc]
  427c44:	mov    esi,DWORD PTR [ebp-0x4]
  427c47:	xor    esi,eax
  427c49:	xor    ecx,eax
  427c4b:	sub    ecx,esi
  427c4d:	cmp    edi,ecx
  427c4f:	jbe    0x427bfb
  427c51:	mov    eax,DWORD PTR [ebp-0x8]
  427c54:	pop    edi
  427c55:	mov    DWORD PTR [ebx],eax
  427c57:	mov    eax,DWORD PTR [ebp-0x8]
  427c5a:	pop    esi
  427c5b:	leave  
  427c5c:	ret    
  427c5d:	push   ebp
  427c5e:	mov    ebp,esp
  427c60:	sub    esp,0x420
  427c66:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  427c6d:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427c74:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  427c7b:	push   ebx
  427c7c:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  427c83:	mov    eax,DWORD PTR [ebp-0x14]
  427c86:	push   esi
  427c87:	mov    esi,0x7510899
  427c8c:	push   edi
  427c8d:	xor    eax,esi
  427c8f:	mov    edi,0x3272e0
  427c94:	add    eax,edi
  427c96:	mov    DWORD PTR [ebp-0x8],eax
  427c99:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  427ca0:	mov    DWORD PTR [ebp-0x4],0xead718d9
  427ca7:	mov    DWORD PTR [ebp-0x10],0x8
  427cae:	mov    ecx,ecx
  427cb0:	mov    eax,DWORD PTR [ebp-0xc]
  427cb3:	mov    ecx,DWORD PTR [ebp-0x14]
  427cb6:	xor    eax,esi
  427cb8:	xor    ecx,esi
  427cba:	add    eax,edi
  427cbc:	add    ecx,edi
  427cbe:	imul   eax,ecx
  427cc1:	jmp    0x427cf4
  427cc3:	mov    eax,DWORD PTR [ebp-0x4]
  427cc6:	sub    eax,edi
  427cc8:	xor    eax,esi
  427cca:	mov    DWORD PTR [ebp-0x8],eax
  427ccd:	lea    ebx,[ebp-0x8]
  427cd0:	call   0x427bb5
  427cd5:	mov    DWORD PTR [ebp-0x8],eax
  427cd8:	mov    eax,DWORD PTR [ebp-0x8]
  427cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  427cde:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427ce5:	mov    eax,DWORD PTR [ebp-0xc]
  427ce8:	mov    ecx,DWORD PTR [ebp-0x4]
  427ceb:	xor    eax,esi
  427ced:	lea    eax,[eax+ecx*1+0x3272e0]
  427cf4:	mov    DWORD PTR [ebp-0x4],eax
  427cf7:	mov    eax,DWORD PTR [ebp-0x18]
  427cfa:	mov    ecx,DWORD PTR [ebp-0xc]
  427cfd:	xor    ecx,esi
  427cff:	xor    eax,esi
  427d01:	sub    eax,ecx
  427d03:	mov    ecx,DWORD PTR [ebp-0x4]
  427d06:	cmp    ecx,eax
  427d08:	jbe    0x427cc3
  427d0a:	mov    eax,DWORD PTR [ebp-0x1c]
  427d0d:	xor    eax,esi
  427d0f:	add    eax,edi
  427d11:	mov    DWORD PTR [ebp-0x8],eax
  427d14:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  427d1b:	mov    ebx,ebx
  427d1d:	jmp    0x427d80
  427d1f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d22:	mov    eax,DWORD PTR [ebp-0x8]
  427d25:	xor    ecx,esi
  427d27:	add    ecx,edi
  427d29:	shr    eax,cl
  427d2b:	mov    DWORD PTR [ebp-0x4],eax
  427d2e:	mov    eax,DWORD PTR [ebp+0x8]
  427d31:	mov    cl,BYTE PTR [eax]
  427d33:	mov    BYTE PTR [ebp+0xb],cl
  427d36:	mov    cl,BYTE PTR [ebp+0xb]
  427d39:	mov    edx,DWORD PTR [ebp-0x8]
  427d3c:	movzx  ecx,cl
  427d3f:	xor    ecx,edx
  427d41:	mov    DWORD PTR [ebp+0x8],ecx
  427d44:	mov    ecx,DWORD PTR [ebp-0x18]
  427d47:	mov    edx,DWORD PTR [ebp+0x8]
  427d4a:	xor    ecx,esi
  427d4c:	add    ecx,edi
  427d4e:	and    ecx,edx
  427d50:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427d57:	mov    edx,DWORD PTR [ebp-0x4]
  427d5a:	xor    ecx,edx
  427d5c:	mov    DWORD PTR [ebp-0x8],ecx
  427d5f:	mov    ecx,DWORD PTR [ebp-0xc]
  427d62:	xor    ecx,esi
  427d64:	lea    eax,[eax+ecx*1+0x3272e0]
  427d6b:	mov    DWORD PTR [ebp+0x8],eax
  427d6e:	mov    eax,DWORD PTR [ebp-0xc]
  427d71:	xor    eax,esi
  427d73:	mov    ecx,0xffcd8d20
  427d78:	sub    ecx,eax
  427d7a:	add    ecx,DWORD PTR [ebp-0x10]
  427d7d:	mov    DWORD PTR [ebp-0x10],ecx
  427d80:	mov    eax,DWORD PTR [ebp-0x14]
  427d83:	mov    ecx,DWORD PTR [ebp-0x10]
  427d86:	xor    eax,esi
  427d88:	add    eax,edi
  427d8a:	cmp    ecx,eax
  427d8c:	jne    0x427d1f
  427d8e:	mov    eax,DWORD PTR [ebp-0x1c]
  427d91:	mov    ecx,DWORD PTR [ebp-0x8]
  427d94:	xor    eax,esi
  427d96:	add    eax,edi
  427d98:	pop    edi
  427d99:	pop    esi
  427d9a:	xor    eax,ecx
  427d9c:	pop    ebx
  427d9d:	leave  
  427d9e:	ret    0x4
  427da1:	push   ebp
  427da2:	mov    ebp,esp
  427da4:	mov    eax,DWORD PTR [ebp+0x1c]
  427da7:	mov    ecx,DWORD PTR [ebp+0x8]
  427daa:	mov    edx,DWORD PTR [ebp+0x10]
  427dad:	mov    eax,DWORD PTR [eax+0x190]
  427db3:	mov    eax,DWORD PTR [eax]
  427db5:	sub    esp,0x64
  427db8:	push   ebx
  427db9:	push   esi
  427dba:	push   edi
  427dbb:	mov    edi,0x7510899
  427dc0:	xor    ecx,edi
  427dc2:	mov    ebx,0x3272e0
  427dc7:	add    ecx,ebx
  427dc9:	cmp    ecx,edx
  427dcb:	jne    0x427ddc
  427dcd:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  427dd7:	jmp    0x4282d9
  427ddc:	mov    ecx,DWORD PTR [ebp+0x8]
  427ddf:	mov    esi,DWORD PTR [ebp+0x14]
  427de2:	mov    edx,DWORD PTR [esi]
  427de4:	xor    ecx,edi
  427de6:	add    ecx,ebx
  427de8:	cmp    edx,ecx
  427dea:	je     0x428294
  427df0:	mov    ecx,DWORD PTR [ebp+0x1c]
  427df3:	mov    DWORD PTR [ebp-0x1c],eax
  427df6:	mov    DWORD PTR [ebp+0x1c],ecx
  427df9:	mov    ecx,DWORD PTR [ebp+0x18]
  427dfc:	mov    eax,DWORD PTR [esi]
  427dfe:	mov    DWORD PTR [ebp-0x20],eax
  427e01:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427e08:	mov    edx,0xf89c85b8
  427e0d:	mov    DWORD PTR [ebp-0x8],edx
  427e10:	mov    eax,DWORD PTR [ebp+0x1c]
  427e13:	mov    DWORD PTR [ebp+0x1c],eax
  427e16:	mov    eax,DWORD PTR [ebp+0x1c]
  427e19:	mov    eax,DWORD PTR [eax+0x190]
  427e1f:	mov    eax,DWORD PTR [eax]
  427e21:	mov    DWORD PTR [ebp-0x24],ecx
  427e24:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e27:	mov    ecx,DWORD PTR [ecx+0x190]
  427e2d:	mov    ecx,DWORD PTR [ecx]
  427e2f:	add    ecx,DWORD PTR [eax+0x3c]
  427e32:	mov    DWORD PTR [ebp+0x10],ecx
  427e35:	mov    eax,DWORD PTR [ebp+0x8]
  427e38:	xor    eax,edi
  427e3a:	add    eax,ebx
  427e3c:	mov    DWORD PTR [ebp-0x4],eax
  427e3f:	mov    eax,DWORD PTR [ebp+0x8]
  427e42:	xor    eax,edi
  427e44:	add    eax,ebx
  427e46:	mov    DWORD PTR [ebp+0x18],eax
  427e49:	mov    eax,DWORD PTR [ebp+0x10]
  427e4c:	mov    eax,DWORD PTR [eax+0x50]
  427e4f:	sub    eax,0xc
  427e52:	mov    DWORD PTR [ebp-0x28],eax
  427e55:	mov    eax,DWORD PTR [ebp+0x10]
  427e58:	mov    eax,DWORD PTR [eax+0x38]
  427e5b:	mov    ecx,DWORD PTR [ebp+0x10]
  427e5e:	dec    eax
  427e5f:	test   DWORD PTR [ecx+0x54],eax
  427e62:	mov    eax,DWORD PTR [ebp+0x10]
  427e65:	je     0x427e7f
  427e67:	mov    eax,DWORD PTR [eax+0x38]
  427e6a:	mov    ecx,DWORD PTR [ebp+0x10]
  427e6d:	mov    ecx,DWORD PTR [ecx+0x54]
  427e70:	dec    eax
  427e71:	not    eax
  427e73:	and    ecx,eax
  427e75:	mov    eax,DWORD PTR [ebp+0x10]
  427e78:	mov    eax,DWORD PTR [eax+0x38]
  427e7b:	add    eax,ecx
  427e7d:	jmp    0x427e82
  427e7f:	mov    eax,DWORD PTR [eax+0x54]
  427e82:	mov    DWORD PTR [ebp+0x1c],eax
  427e85:	mov    eax,DWORD PTR [ebp+0x8]
  427e88:	xor    eax,edi
  427e8a:	add    eax,ebx
  427e8c:	mov    DWORD PTR [ebp+0x18],eax
  427e8f:	mov    eax,DWORD PTR [ebp+0x8]
  427e92:	xor    eax,edi
  427e94:	add    eax,ebx
  427e96:	mov    DWORD PTR [ebp+0x18],eax
  427e99:	mov    eax,DWORD PTR [ebp+0x8]
  427e9c:	mov    ecx,DWORD PTR [ebp-0x24]
  427e9f:	xor    eax,edi
  427ea1:	add    eax,ebx
  427ea3:	mov    DWORD PTR [ecx],eax
  427ea5:	mov    DWORD PTR [ebp+0x18],edx
  427ea8:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427eaf:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427eb6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427ebd:	mov    eax,DWORD PTR [ebp-0x8]
  427ec0:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ec3:	xor    eax,edi
  427ec5:	add    eax,ebx
  427ec7:	imul   eax,ecx
  427eca:	mov    ecx,DWORD PTR [ebp+0x8]
  427ecd:	mov    edx,DWORD PTR [ebp-0x28]
  427ed0:	xor    ecx,edi
  427ed2:	lea    ecx,[ecx+edx*1+0x3272e0]
  427ed9:	cmp    eax,ecx
  427edb:	jae    0x42828d
  427ee1:	mov    eax,DWORD PTR [ebp+0x8]
  427ee4:	xor    eax,edi
  427ee6:	add    eax,ebx
  427ee8:	mov    DWORD PTR [ebp+0x18],eax
  427eeb:	mov    eax,DWORD PTR [ebp+0x1c]
  427eee:	add    eax,DWORD PTR [ebp-0x1c]
  427ef1:	mov    DWORD PTR [ebp-0x4],eax
  427ef4:	push   DWORD PTR [ebp-0x4]
  427ef7:	mov    esi,DWORD PTR [ebp-0x1c]
  427efa:	mov    ecx,DWORD PTR [ebp+0x10]
  427efd:	call   0x426fe3
  427f02:	mov    DWORD PTR [ebp+0xc],eax
  427f05:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  427f0c:	mov    eax,DWORD PTR [ebp-0x18]
  427f0f:	xor    eax,edi
  427f11:	add    eax,ebx
  427f13:	push   eax
  427f14:	lea    eax,[ebp-0x40]
  427f17:	push   eax
  427f18:	call   0x4275ee
  427f1d:	mov    eax,DWORD PTR [ebp+0xc]
  427f20:	test   eax,eax
  427f22:	je     0x427f72
  427f24:	mov    eax,DWORD PTR [ebp-0x18]
  427f27:	xor    eax,edi
  427f29:	add    eax,ebx
  427f2b:	push   eax
  427f2c:	push   DWORD PTR [ebp+0xc]
  427f2f:	lea    eax,[ebp-0x40]
  427f32:	push   eax
  427f33:	call   0x427495
  427f38:	mov    eax,DWORD PTR [ebp-0x4]
  427f3b:	mov    DWORD PTR [ebp-0x18],eax
  427f3e:	mov    eax,DWORD PTR [ebp-0x18]
  427f41:	mov    ecx,DWORD PTR [ebp-0x1c]
  427f44:	sub    eax,ecx
  427f46:	mov    DWORD PTR [ebp-0x18],eax
  427f49:	mov    eax,DWORD PTR [ebp+0xc]
  427f4c:	mov    ecx,DWORD PTR [ebp+0xc]
  427f4f:	mov    eax,DWORD PTR [eax+0x10]
  427f52:	add    eax,DWORD PTR [ecx+0xc]
  427f55:	mov    ecx,DWORD PTR [ebp-0x18]
  427f58:	cmp    ecx,eax
  427f5a:	jb     0x427f72
  427f5c:	mov    eax,DWORD PTR [ebp+0xc]
  427f5f:	mov    eax,DWORD PTR [eax+0xc]
  427f62:	mov    ecx,DWORD PTR [ebp+0xc]
  427f65:	add    eax,DWORD PTR [ecx+0x8]
  427f68:	mov    ecx,DWORD PTR [ebp-0x18]
  427f6b:	sub    eax,ecx
  427f6d:	jmp    0x428260
  427f72:	push   0xc
  427f74:	push   DWORD PTR [ebp-0x4]
  427f77:	lea    eax,[ebp-0x4c]
  427f7a:	push   eax
  427f7b:	call   0x427495
  427f80:	mov    eax,0xf89c85b9
  427f85:	mov    DWORD PTR [ebp-0x2c],eax
  427f88:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427f8f:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  427f96:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427f9d:	lea    ecx,[ebp-0x2c]
  427fa0:	mov    DWORD PTR [ebp-0xc],ecx
  427fa3:	lea    ecx,[ebp-0x30]
  427fa6:	mov    DWORD PTR [ebp-0x10],ecx
  427fa9:	lea    ecx,[ebp-0x34]
  427fac:	mov    DWORD PTR [ebp+0xc],ecx
  427faf:	lea    ecx,[ebp-0x38]
  427fb2:	mov    DWORD PTR [ebp-0x14],ecx
  427fb5:	mov    ecx,DWORD PTR [ebp+0x8]
  427fb8:	xor    ecx,edi
  427fba:	add    ecx,ebx
  427fbc:	mov    DWORD PTR [ebp-0x18],ecx
  427fbf:	jmp    0x4281bb
  427fc4:	cmp    eax,0xf89c85bb
  427fc9:	je     0x4281cd
  427fcf:	mov    ecx,DWORD PTR [ebp-0x8]
  427fd2:	xor    ecx,edi
  427fd4:	mov    esi,eax
  427fd6:	add    ecx,ebx
  427fd8:	mov    DWORD PTR [ebp+0x18],ecx
  427fdb:	mov    eax,DWORD PTR [ebp-0x18]
  427fde:	xor    esi,edi
  427fe0:	lea    eax,[eax+esi*1+0x3272e0]
  427fe7:	mov    DWORD PTR [ebp-0x18],eax
  427fea:	mov    eax,DWORD PTR [ebp-0x8]
  427fed:	mov    ecx,DWORD PTR [ebp-0x18]
  427ff0:	xor    eax,edi
  427ff2:	add    eax,ebx
  427ff4:	cmp    ecx,eax
  427ff6:	jne    0x42800b
  427ff8:	mov    eax,DWORD PTR [ebp+0x8]
  427ffb:	xor    eax,edi
  427ffd:	add    eax,ebx
  427fff:	push   eax
  428000:	push   0xc
  428002:	lea    eax,[ebp-0x4c]
  428005:	push   eax
  428006:	call   0x427a0c
  42800b:	mov    eax,DWORD PTR [ebp-0xc]
  42800e:	mov    eax,DWORD PTR [eax]
  428010:	xor    eax,edi
  428012:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428019:	mov    ecx,DWORD PTR [ebp+0x8]
  42801c:	xor    ecx,edi
  42801e:	movzx  eax,al
  428021:	add    ecx,ebx
  428023:	cmp    eax,ecx
  428025:	je     0x4281a3
  42802b:	mov    eax,DWORD PTR [ebp-0x10]
  42802e:	mov    eax,DWORD PTR [eax]
  428030:	xor    eax,edi
  428032:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428039:	mov    ecx,DWORD PTR [ebp+0x8]
  42803c:	xor    ecx,edi
  42803e:	movzx  eax,al
  428041:	add    ecx,ebx
  428043:	cmp    eax,ecx
  428045:	je     0x4281a3
  42804b:	mov    eax,DWORD PTR [ebp+0xc]
  42804e:	mov    eax,DWORD PTR [eax]
  428050:	xor    eax,edi
  428052:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428059:	mov    ecx,DWORD PTR [ebp+0x8]
  42805c:	xor    ecx,edi
  42805e:	movzx  eax,al
  428061:	add    ecx,ebx
  428063:	cmp    eax,ecx
  428065:	je     0x4281a3
  42806b:	mov    eax,DWORD PTR [ebp-0x14]
  42806e:	mov    eax,DWORD PTR [eax]
  428070:	xor    eax,edi
  428072:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428079:	mov    ecx,DWORD PTR [ebp+0x8]
  42807c:	xor    ecx,edi
  42807e:	movzx  eax,al
  428081:	add    ecx,ebx
  428083:	cmp    eax,ecx
  428085:	je     0x4281a3
  42808b:	mov    eax,DWORD PTR [ebp-0x10]
  42808e:	mov    eax,DWORD PTR [eax]
  428090:	xor    eax,edi
  428092:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428099:	mov    ecx,DWORD PTR [ebp-0xc]
  42809c:	mov    ecx,DWORD PTR [ecx]
  42809e:	xor    ecx,edi
  4280a0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280a7:	xor    al,cl
  4280a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4280ac:	mov    ecx,DWORD PTR [ecx]
  4280ae:	xor    ecx,edi
  4280b0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280b7:	or     al,cl
  4280b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4280bc:	mov    ecx,DWORD PTR [ecx]
  4280be:	xor    ecx,edi
  4280c0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4280c7:	cmp    cl,al
  4280c9:	jne    0x4281a3
  4280cf:	mov    eax,DWORD PTR [ebp+0xc]
  4280d2:	mov    eax,DWORD PTR [eax]
  4280d4:	xor    eax,edi
  4280d6:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  4280dd:	mov    ecx,DWORD PTR [ebp-0x10]
  4280e0:	mov    ecx,DWORD PTR [ecx]
  4280e2:	xor    ecx,edi
  4280e4:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280eb:	xor    al,cl
  4280ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4280f0:	mov    ecx,DWORD PTR [ecx]
  4280f2:	xor    ecx,edi
  4280f4:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  4280fb:	or     al,cl
  4280fd:	mov    ecx,DWORD PTR [ebp-0x10]
  428100:	mov    ecx,DWORD PTR [ecx]
  428102:	xor    ecx,edi
  428104:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42810b:	cmp    cl,al
  42810d:	jne    0x4281a3
  428113:	mov    eax,DWORD PTR [ebp-0x14]
  428116:	mov    eax,DWORD PTR [eax]
  428118:	xor    eax,edi
  42811a:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428121:	mov    ecx,DWORD PTR [ebp+0xc]
  428124:	mov    ecx,DWORD PTR [ecx]
  428126:	xor    ecx,edi
  428128:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42812f:	xor    al,cl
  428131:	mov    ecx,DWORD PTR [ebp-0xc]
  428134:	mov    ecx,DWORD PTR [ecx]
  428136:	xor    ecx,edi
  428138:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42813f:	or     al,cl
  428141:	mov    ecx,DWORD PTR [ebp+0xc]
  428144:	mov    ecx,DWORD PTR [ecx]
  428146:	xor    ecx,edi
  428148:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42814f:	cmp    cl,al
  428151:	jne    0x4281a3
  428153:	mov    eax,DWORD PTR [ebp-0x14]
  428156:	mov    eax,DWORD PTR [eax]
  428158:	xor    eax,edi
  42815a:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428161:	mov    ecx,DWORD PTR [ebp-0xc]
  428164:	mov    ecx,DWORD PTR [ecx]
  428166:	xor    ecx,edi
  428168:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42816f:	xor    al,cl
  428171:	mov    ecx,DWORD PTR [ebp-0x10]
  428174:	mov    ecx,DWORD PTR [ecx]
  428176:	xor    ecx,edi
  428178:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42817f:	or     al,cl
  428181:	mov    ecx,DWORD PTR [ebp-0x14]
  428184:	mov    ecx,DWORD PTR [ecx]
  428186:	xor    ecx,edi
  428188:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42818f:	cmp    cl,al
  428191:	jne    0x4281a3
  428193:	lea    eax,[ebp-0x4c]
  428196:	push   eax
  428197:	call   0x427c5d
  42819c:	mov    ecx,DWORD PTR [ebp-0x44]
  42819f:	cmp    eax,ecx
  4281a1:	je     0x4281ad
  4281a3:	mov    eax,DWORD PTR [ebp+0x8]
  4281a6:	xor    eax,edi
  4281a8:	add    eax,ebx
  4281aa:	mov    DWORD PTR [ebp+0x18],eax
  4281ad:	mov    eax,DWORD PTR [ebp-0x8]
  4281b0:	xor    eax,edi
  4281b2:	lea    eax,[eax+esi*1+0x3272e0]
  4281b9:	xor    eax,edi
  4281bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4281be:	mov    edx,DWORD PTR [ebp+0x18]
  4281c1:	xor    ecx,edi
  4281c3:	add    ecx,ebx
  4281c5:	cmp    edx,ecx
  4281c7:	je     0x427fc4
  4281cd:	mov    eax,DWORD PTR [ebp+0x8]
  4281d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4281d3:	xor    eax,edi
  4281d5:	add    eax,ebx
  4281d7:	cmp    ecx,eax
  4281d9:	jne    0x4281ec
  4281db:	mov    eax,DWORD PTR [ebp-0x8]
  4281de:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281e1:	xor    eax,edi
  4281e3:	lea    eax,[eax+ecx*1+0x3272e0]
  4281ea:	jmp    0x428263
  4281ec:	push   0x18
  4281ee:	push   DWORD PTR [ebp-0x4]
  4281f1:	lea    eax,[ebp-0x64]
  4281f4:	push   eax
  4281f5:	call   0x427495
  4281fa:	mov    eax,DWORD PTR [ebp+0x8]
  4281fd:	mov    ecx,DWORD PTR [ebp-0x18]
  428200:	xor    eax,edi
  428202:	add    eax,ebx
  428204:	cmp    eax,ecx
  428206:	je     0x42821b
  428208:	mov    eax,DWORD PTR [ebp+0x8]
  42820b:	xor    eax,edi
  42820d:	add    eax,ebx
  42820f:	push   eax
  428210:	push   0x18
  428212:	lea    eax,[ebp-0x64]
  428215:	push   eax
  428216:	call   0x427a0c
  42821b:	mov    eax,DWORD PTR [ebp-0x4]
  42821e:	add    eax,0x18
  428221:	mov    DWORD PTR [ebp+0x18],eax
  428224:	push   DWORD PTR [ebp-0x50]
  428227:	push   DWORD PTR [ebp+0x18]
  42822a:	mov    eax,DWORD PTR [ebp-0x54]
  42822d:	add    eax,DWORD PTR [ebp-0x20]
  428230:	push   eax
  428231:	call   0x427495
  428236:	mov    eax,DWORD PTR [ebp+0x8]
  428239:	mov    ecx,DWORD PTR [ebp-0x18]
  42823c:	xor    eax,edi
  42823e:	add    eax,ebx
  428240:	cmp    eax,ecx
  428242:	je     0x428255
  428244:	push   0x0
  428246:	push   DWORD PTR [ebp-0x50]
  428249:	mov    eax,DWORD PTR [ebp-0x54]
  42824c:	add    eax,DWORD PTR [ebp-0x20]
  42824f:	push   eax
  428250:	call   0x427a0c
  428255:	mov    eax,DWORD PTR [ebp-0x24]
  428258:	mov    ecx,DWORD PTR [ebp-0x50]
  42825b:	add    DWORD PTR [eax],ecx
  42825d:	mov    eax,DWORD PTR [ebp-0x50]
  428260:	add    eax,DWORD PTR [ebp+0x1c]
  428263:	mov    DWORD PTR [ebp+0x1c],eax
  428266:	mov    eax,DWORD PTR [ebp-0x8]
  428269:	mov    ecx,DWORD PTR [ebp+0x1c]
  42826c:	xor    eax,edi
  42826e:	add    eax,ebx
  428270:	imul   eax,ecx
  428273:	mov    ecx,DWORD PTR [ebp+0x8]
  428276:	mov    edx,DWORD PTR [ebp-0x28]
  428279:	xor    ecx,edi
  42827b:	lea    ecx,[ecx+edx*1+0x3272e0]
  428282:	cmp    eax,ecx
  428284:	jb     0x427ee1
  42828a:	mov    esi,DWORD PTR [ebp+0x14]
  42828d:	mov    eax,DWORD PTR [ebp-0x20]
  428290:	mov    DWORD PTR [esi],eax
  428292:	jmp    0x4282d9
  428294:	mov    ecx,DWORD PTR [ebp+0x8]
  428297:	mov    edx,DWORD PTR [ebp+0xc]
  42829a:	xor    ecx,edi
  42829c:	xor    edx,edi
  42829e:	add    ecx,ebx
  4282a0:	add    edx,ebx
  4282a2:	cmp    ecx,edx
  4282a4:	jne    0x4282b8
  4282a6:	mov    eax,ds:0x7f642d1e
  4282ab:	imul   eax,eax,0x9f15fcef
  4282b1:	mov    ds:0x7f642d1e,eax
  4282b6:	jmp    0x4282d9
  4282b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4282bb:	xor    ecx,edi
  4282bd:	add    ecx,ebx
  4282bf:	cmp    eax,ecx
  4282c1:	je     0x4282cf
  4282c3:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4282cd:	jmp    0x4282d9
  4282cf:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  4282d9:	pop    edi
  4282da:	pop    esi
  4282db:	pop    ebx
  4282dc:	leave  
  4282dd:	ret    0x18
  4282e0:	push   ebp
  4282e1:	mov    ebp,esp
  4282e3:	and    esp,0xfffffff8
  4282e6:	mov    eax,DWORD PTR [ebp+0x20]
  4282e9:	sub    esp,0x14
  4282ec:	push   ebx
  4282ed:	mov    ebx,DWORD PTR [ebp+0x14]
  4282f0:	push   esi
  4282f1:	push   edi
  4282f2:	cmp    eax,0xf89c85b9
  4282f7:	jne    0x428303
  4282f9:	push   0xf89c85b8
  4282fe:	jmp    0x428435
  428303:	mov    eax,DWORD PTR [ebp+0x20]
  428306:	cmp    eax,0xf89c85b8
  42830b:	jne    0x428317
  42830d:	push   0xf89c85bb
  428312:	jmp    0x428435
  428317:	mov    eax,DWORD PTR [ebp+0x20]
  42831a:	cmp    eax,0xf89c85bb
  42831f:	jne    0x42832b
  428321:	push   0xf89c85ba
  428326:	jmp    0x428435
  42832b:	mov    eax,DWORD PTR [ebp+0x20]
  42832e:	cmp    eax,0xf89c85ba
  428333:	jne    0x42833f
  428335:	push   0xf89c85bd
  42833a:	jmp    0x428435
  42833f:	mov    ecx,DWORD PTR [ebp+0x20]
  428342:	mov    eax,0xf89c85be
  428347:	cmp    ecx,eax
  428349:	jne    0x428405
  42834f:	mov    eax,DWORD PTR [ebp+0x10]
  428352:	mov    DWORD PTR [esp+0xc],eax
  428356:	mov    eax,DWORD PTR [ebp+0x18]
  428359:	mov    DWORD PTR [esp+0x14],eax
  42835d:	mov    eax,DWORD PTR [ebp+0xc]
  428360:	mov    DWORD PTR [esp+0x18],eax
  428364:	mov    eax,DWORD PTR [ebp+0x8]
  428367:	mov    DWORD PTR [esp+0x10],eax
  42836b:	mov    eax,DWORD PTR [esp+0x10]
  42836f:	mov    ecx,DWORD PTR [esp+0x14]
  428373:	mov    edi,0x7510899
  428378:	xor    eax,edi
  42837a:	mov    esi,0x3272e0
  42837f:	add    eax,esi
  428381:	mov    DWORD PTR [ecx],eax
  428383:	mov    eax,DWORD PTR [esp+0xc]
  428387:	mov    eax,DWORD PTR [eax+0x194]
  42838d:	mov    ecx,DWORD PTR [eax]
  42838f:	mov    eax,DWORD PTR [esp+0xc]
  428393:	mov    eax,DWORD PTR [eax+0x194]
  428399:	mov    eax,DWORD PTR [eax]
  42839b:	add    eax,DWORD PTR [ecx+0x3c]
  42839e:	mov    ecx,DWORD PTR [esp+0xc]
  4283a2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4283a8:	mov    ecx,DWORD PTR [ecx+0x14]
  4283ab:	push   0x4
  4283ad:	push   0x3000
  4283b2:	push   DWORD PTR [eax+0x50]
  4283b5:	push   0x0
  4283b7:	call   ecx
  4283b9:	mov    DWORD PTR [ebx],eax
  4283bb:	mov    eax,DWORD PTR [esp+0x10]
  4283bf:	push   DWORD PTR [esp+0xc]
  4283c3:	xor    eax,edi
  4283c5:	add    eax,esi
  4283c7:	mov    DWORD PTR [esp+0x20],eax
  4283cb:	lea    eax,[esp+0x20]
  4283cf:	push   eax
  4283d0:	push   ebx
  4283d1:	push   DWORD PTR [esp+0x20]
  4283d5:	push   DWORD PTR [esp+0x28]
  4283d9:	push   DWORD PTR [esp+0x24]
  4283dd:	call   0x427da1
  4283e2:	mov    eax,DWORD PTR [esp+0x10]
  4283e6:	mov    ecx,DWORD PTR [ebx]
  4283e8:	xor    eax,edi
  4283ea:	add    eax,esi
  4283ec:	cmp    ecx,eax
  4283ee:	je     0x42844c
  4283f0:	mov    eax,DWORD PTR [esp+0x18]
  4283f4:	mov    ecx,DWORD PTR [esp+0x14]
  4283f8:	xor    eax,edi
  4283fa:	add    eax,esi
  4283fc:	imul   eax,DWORD PTR [esp+0x1c]
  428401:	mov    DWORD PTR [ecx],eax
  428403:	jmp    0x42844c
  428405:	mov    ecx,DWORD PTR [ebp+0x20]
  428408:	cmp    ecx,0xf89c85bd
  42840e:	jne    0x428417
  428410:	push   0xf89c85bc
  428415:	jmp    0x428435
  428417:	mov    ecx,DWORD PTR [ebp+0x20]
  42841a:	cmp    ecx,0xf89c85bc
  428420:	jne    0x428429
  428422:	push   0xf89c85bf
  428427:	jmp    0x428435
  428429:	mov    ecx,DWORD PTR [ebp+0x20]
  42842c:	cmp    ecx,0xf89c85bf
  428432:	jne    0x42844c
  428434:	push   eax
  428435:	push   DWORD PTR [ebp+0x1c]
  428438:	push   DWORD PTR [ebp+0x18]
  42843b:	push   ebx
  42843c:	push   DWORD PTR [ebp+0x10]
  42843f:	push   DWORD PTR [ebp+0xc]
  428442:	push   DWORD PTR [ebp+0x8]
  428445:	call   0x4282e0
  42844a:	mov    DWORD PTR [ebx],eax
  42844c:	mov    eax,DWORD PTR [ebx]
  42844e:	pop    edi
  42844f:	pop    esi
  428450:	pop    ebx
  428451:	mov    esp,ebp
  428453:	pop    ebp
  428454:	ret    0x1c
  428457:	push   ebp
  428458:	mov    ebp,esp
  42845a:	sub    esp,0xc
  42845d:	mov    eax,0xf89c85b9
  428462:	mov    DWORD PTR [ebp-0x8],eax
  428465:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  42846c:	mov    ecx,DWORD PTR [ebp-0x8]
  42846f:	xor    ecx,0x7510899
  428475:	add    ecx,0x3272e0
  42847b:	mov    DWORD PTR [ebp-0x4],ecx
  42847e:	mov    ecx,DWORD PTR [ebp+0xc]
  428481:	push   eax
  428482:	mov    DWORD PTR [ebp+0xc],ecx
  428485:	push   DWORD PTR [ebp+0xc]
  428488:	lea    eax,[ebp-0x4]
  42848b:	push   DWORD PTR [ebp+0x8]
  42848e:	push   eax
  42848f:	push   DWORD PTR [ebp+0xc]
  428492:	push   DWORD PTR [ebp-0xc]
  428495:	push   DWORD PTR [ebp-0x8]
  428498:	call   0x4282e0
  42849d:	mov    DWORD PTR [ebp-0x4],eax
  4284a0:	mov    eax,DWORD PTR [ebp-0x4]
  4284a3:	leave  
  4284a4:	ret    0x8
