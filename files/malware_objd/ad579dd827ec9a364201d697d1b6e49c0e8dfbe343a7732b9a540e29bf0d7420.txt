
ad579dd827ec9a364201d697d1b6e49c0e8dfbe343a7732b9a540e29bf0d7420.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	push   eax
  41107b:	sbb    BYTE PTR ds:0xe99a8323,ch
  411081:	mov    ds:0xd5b4e28c,al
  411086:	iret   
  411087:	enter  0xc67a,0xb7
  41108b:	ins    BYTE PTR es:[edi],dx
  41108c:	pushf  
  41108d:	iret   
  41108e:	or     BYTE PTR [edi-0x15],0xd3
  411092:	stc    
  411093:	or     al,0xfa
  411095:	xor    al,0x1c
  411097:	mov    bl,0x3d
  411099:	retf   
  41109a:	daa    
  41109b:	jae    0x411077
  41109d:	outs   dx,DWORD PTR ds:[esi]
  41109e:	(bad)  
  41109f:	into   
  4110a0:	fidiv  DWORD PTR [esi-0x10c6af4f]
  4110a6:	sbb    DWORD PTR [ecx+0x487ebf79],edx
  4110ac:	dec    ebx
  4110ad:	jl     0x4110a4
  4110af:	xchg   DWORD PTR [ecx+ecx*1-0x12aad83b],eax
  4110b6:	adc    DWORD PTR [esi-0x5e],esi
  4110b9:	xor    ch,ah
  4110bb:	stc    
  4110bc:	je     0x4110fc
  4110be:	adc    ebp,DWORD PTR [ebp+0x37]
  4110c1:	aad    0x76
  4110c3:	sub    ch,BYTE PTR [edx]
  4110c5:	pop    esi
  4110c6:	add    edi,eax
  4110c8:	les    ecx,FWORD PTR [edx]
  4110ca:	push   ecx
  4110cb:	mov    esi,0x65fc2fad
  4110d0:	ins    DWORD PTR es:[edi],dx
  4110d1:	jns    0x4110bd
  4110d3:	push   cs
  4110d4:	scas   al,BYTE PTR es:[edi]
  4110d5:	ja     0x4110d4
  4110d7:	jl     0x41111c
  4110d9:	sub    DWORD PTR [esi+eiz*2-0x73],edi
  4110dd:	xchg   esi,eax
  4110de:	in     al,0x2c
  4110e0:	shl    DWORD PTR [ebx],0x31
  4110e3:	(bad)
  4110e6:	(bad)  
  4110e8:	fwait
  4110e9:	add    ebp,esi
  4110eb:	cmp    BYTE PTR ds:0x9c922805,0x7e
  4110f2:	jp     0x41114e
  4110f4:	mov    eax,0x46c5f967
  4110f9:	iret   
  4110fa:	or     BYTE PTR [edi+edi*8-0x1c],ch
  4110fe:	stos   BYTE PTR es:[edi],al
  4110ff:	jbe    0x4110e2
  411101:	data16 jae 0x411085
  411104:	inc    esp
  411105:	adc    DWORD PTR [esi+0x15c5573a],esp
  41110b:	outs   dx,BYTE PTR ds:[esi]
  41110c:	push   edx
  41110d:	pop    ds
  41110e:	jle    0x41113d
  411110:	inc    ebp
  411111:	in     al,0xfe
  411113:	xor    ch,ah
  411115:	pusha  
  411116:	sbb    ebp,ebp
  411118:	jns    0x411182
  41111a:	rol    BYTE PTR [ebp+0x68cfc440],cl
  411120:	mov    ds:0xd7621ea9,eax
  411125:	jbe    0x411149
  411127:	adc    edx,DWORD PTR [ebx]
  411129:	stc    
  41112a:	mov    bh,ch
  41112c:	(bad)  
  41112d:	mov    ah,0xa0
  41112f:	cmp    DWORD PTR [ebx+edi*2-0x34f29d33],eax
  411136:	and    bh,dh
  411138:	mov    ah,0x60
  41113a:	xchg   esi,eax
  41113b:	add    edi,DWORD PTR [edx]
  41113d:	jnp    0x4110c8
  41113f:	lock mov ebp,0xc1b70bb3
  411145:	lods   al,BYTE PTR ds:[esi]
  411146:	rol    DWORD PTR [eax+0x29],1
  411149:	(bad)  
  41114a:	pop    ecx
  41114b:	xchg   esp,eax
  41114c:	icebp  
  41114d:	mov    al,0x14
  41114f:	inc    esp
  411150:	clc    
  411151:	cmp    ecx,0xfffffff6
  411154:	mov    edx,0x90348b75
  411159:	mov    ch,0xe6
  41115b:	and    dh,dh
  41115d:	mov    dl,0xf7
  41115f:	jbe    0x4110f9
  411161:	dec    esi
  411162:	bound  ecx,QWORD PTR [ebx]
  411164:	test   al,0x39
  411166:	sbb    al,dl
  411168:	xor    WORD PTR [edx],di
  41116b:	out    0xc6,eax
  41116d:	fcomi  st,st(1)
  41116f:	adc    dl,BYTE PTR [edi]
  411171:	test   DWORD PTR [ebp+0x5ff2579b],0x2b6757e5
  41117b:	js     0x411110
  41117d:	fdivr  QWORD PTR [edi+0x64]
  411180:	sbb    al,0x61
  411182:	cdq    
  411183:	add    BYTE PTR [eax],dl
  411185:	pop    edi
  411186:	sbb    BYTE PTR [ebp+0x3e],0xcb
  41118a:	or     DWORD PTR [edx-0x265ed458],eax
  411190:	call   0x7536da5d
  411195:	in     eax,0xc0
  411197:	js     0x411189
  411199:	or     eax,0x23bddaf8
  41119e:	cmc    
  41119f:	test   al,0x89
  4111a1:	xlat   BYTE PTR ds:[ebx]
  4111a2:	sub    al,0x2
  4111a4:	pusha  
  4111a5:	int3   
  4111a6:	loop   0x4111e5
  4111a8:	push   eax
  4111a9:	mov    ebx,0x20cdce7a
  4111ae:	pop    ebx
  4111af:	sti    
  4111b0:	push   edi
  4111b1:	dec    esp
  4111b2:	outs   dx,DWORD PTR ds:[esi]
  4111b3:	lea    esp,[eax]
  4111b5:	lock test eax,0xb60299c1
  4111bb:	hlt    
  4111bc:	nop
  4111bd:	cmp    ebx,DWORD PTR [ecx]
  4111bf:	sub    DWORD PTR [esi+0xd2a803e],ebx
  4111c5:	dec    ebp
  4111c6:	lods   eax,DWORD PTR ds:[esi]
  4111c7:	mov    ds:0x7dc9125,eax
  4111cc:	test   DWORD PTR [edx-0x361beff],eax
  4111d2:	inc    eax
  4111d3:	ret    
  4111d4:	push   ebx
  4111d5:	popa   
  4111d6:	push   ds
  4111d7:	pop    ds
  4111d8:	xchg   ebp,eax
  4111d9:	repnz push ebx
  4111db:	inc    ecx
  4111dc:	add    edi,DWORD PTR [eax]
  4111de:	out    dx,eax
  4111df:	in     al,dx
  4111e0:	and    ebp,DWORD PTR [ebx+edx*1+0x45]
  4111e4:	int    0x6c
  4111e6:	and    DWORD PTR [eax+ecx*1-0x717caf8d],edx
  4111ed:	jecxz  0x411178
  4111ef:	pop    edi
  4111f0:	cmp    ebx,DWORD PTR [edx+0x37]
  4111f3:	pushf  
  4111f4:	push   cs
  4111f5:	xchg   ecx,eax
  4111f6:	and    DWORD PTR [eax],esp
  4111f8:	hlt    
  4111f9:	xchg   BYTE PTR ds:0x6213f2cf,cl
  4111ff:	popa   
  411200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411201:	mov    BYTE PTR [ebp+0x1a],dl
  411204:	scas   eax,DWORD PTR es:[edi]
  411205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411206:	cwde   
  411207:	inc    ebx
  411208:	mov    al,ds:0x188ad324
  41120d:	jg     0x4111ca
  41120f:	jae    0x4111ff
  411211:	mov    BYTE PTR [eax-0x34],ch
  411214:	in     al,0xc9
  411216:	loope  0x411230
  411218:	pop    eax
  411219:	dec    ebp
  41121a:	fldcw  WORD PTR [ebx-0x2635c4c5]
  411220:	lds    esi,FWORD PTR [ebx]
  411222:	pop    ebp
  411223:	mov    WORD PTR [ecx+0x34],?
  411226:	xor    bl,BYTE PTR [esi]
  411228:	lods   al,BYTE PTR ds:[esi]
  411229:	pop    esp
  41122a:	xchg   ebx,eax
  41122b:	outs   dx,BYTE PTR ds:[esi]
  41122c:	fcom   QWORD PTR [edx]
  41122e:	push   es
  41122f:	add    BYTE PTR ds:0x4a166a75,0xe7
  411236:	adc    DWORD PTR [eax],0xc5178e45
  41123c:	and    BYTE PTR [ecx],bh
  41123e:	push   edx
  41123f:	test   edx,0xc50114a7
  411245:	adc    eax,0x4c2dc7f2
  41124a:	loopne 0x411297
  41124c:	pop    edi
  41124d:	out    0x3,al
  41124f:	inc    esp
  411250:	mov    ebx,0xb55a81a0
  411255:	cmp    ebx,DWORD PTR [ebx]
  411257:	stc    
  411258:	mov    eax,0xa6304b03
  41125d:	adc    ah,0x55
  411260:	or     edx,DWORD PTR [ecx-0x29]
  411263:	xor    DWORD PTR [edi+0x53],esi
  411266:	scas   al,BYTE PTR es:[edi]
  411267:	test   al,0x27
  411269:	not    BYTE PTR [eax-0x6ecde1f3]
  41126f:	das    
  411270:	push   0xffffffe5
  411272:	aaa    
  411273:	fsubr  st(2),st
  411275:	ret    0xc309
  411278:	mov    edi,0x5a9ff3b9
  41127d:	cmp    eax,0xa9d5c1dd
  411282:	(bad)  
  411283:	xor    al,0x9
  411285:	xchg   edx,esp
  411287:	not    eax
  411289:	stos   BYTE PTR es:[edi],al
  41128a:	and    BYTE PTR [edx+esi*8-0x25bdc122],bh
  411291:	cmp    dl,BYTE PTR [eax+ecx*8-0x5bb8995a]
  411298:	or     dh,bh
  41129a:	xchg   edx,eax
  41129b:	mov    al,ah
  41129d:	sti    
  41129e:	cmp    DWORD PTR [ebp+eiz*4+0x59],ebp
  4112a2:	fmul   DWORD PTR [esp+ebx*1]
  4112a5:	pusha  
  4112a6:	pop    edi
  4112a7:	cmc    
  4112a8:	and    ebp,esi
  4112aa:	mov    dl,0x4e
  4112ac:	or     eax,0x94080f2c
  4112b1:	test   BYTE PTR [esi],ch
  4112b3:	sbb    al,0xda
  4112b5:	cmc    
  4112b6:	ret    
  4112b7:	pop    esp
  4112b8:	mov    edx,0x68c40f87
  4112bd:	xlat   BYTE PTR ds:[ebx]
  4112be:	popa   
  4112bf:	mov    dh,0x10
  4112c1:	xor    eax,0x914a89f2
  4112c6:	jae    0x4112d7
  4112c8:	jecxz  0x4112c1
  4112ca:	js     0x4112ad
  4112cc:	fsubrp st(0),st
  4112ce:	cs jg  0x41130a
  4112d1:	imul   esp,DWORD PTR [ebx],0x26
  4112d4:	dec    esi
  4112d5:	int3   
  4112d6:	or     dl,BYTE PTR [ebx+edi*1+0x5b]
  4112da:	test   DWORD PTR [edi+0x5d97433e],ebp
  4112e0:	test   edi,eax
  4112e2:	mov    ecx,0x42709248
  4112e7:	pop    eax
  4112e8:	rcr    BYTE PTR [bp+di-0x70f1],1
  4112ed:	cmp    cl,BYTE PTR [ebx]
  4112ef:	mov    cs,esp
  4112f1:	sub    BYTE PTR [ebx],bh
  4112f3:	mov    BYTE PTR [ebp-0x74],dh
  4112f6:	jo     0x411339
  4112f8:	in     eax,dx
  4112f9:	xor    ebx,DWORD PTR ds:0x64f41422
  4112ff:	mov    bl,0xd
  411301:	mov    bh,0x31
  411303:	xchg   edx,eax
  411304:	sub    eax,0xa0676684
  411309:	je     0x411383
  41130b:	fs scas al,BYTE PTR es:[edi]
  41130d:	aad    0x3
  41130f:	push   ecx
  411310:	push   0x4ab85899
  411315:	pop    ecx
  411316:	out    0x6d,al
  411318:	inc    bl
  41131a:	jp     0x411317
  41131c:	mov    eax,ds:0xb93e7e97
  411321:	and    eax,0x6d289c15
  411326:	cmp    DWORD PTR [ebx+0x3b],0x8119e29b
  41132d:	sub    ebp,ecx
  41132f:	out    0xc1,eax
  411331:	pop    edi
  411332:	mov    dh,0xb6
  411334:	jle    0x4113ac
  411336:	mov    eax,ds:0x539d75b8
  41133b:	mov    ah,0xcd
  41133d:	in     eax,0x91
  41133f:	addr16 popf 
  411341:	jb     0x411397
  411343:	push   es
  411344:	adc    al,0xea
  411346:	xor    dh,BYTE PTR [esi]
  411348:	sub    eax,0x3c53369f
  41134d:	inc    edx
  41134e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134f:	mov    edi,0x229690ba
  411354:	pop    ebp
  411355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411356:	push   esp
  411357:	and    DWORD PTR [eax+ebp*8],edi
  41135a:	mov    dh,0xbe
  41135c:	popf   
  41135d:	sbb    dh,0x4f
  411360:	std    
  411361:	daa    
  411362:	leave  
  411363:	mov    cl,0xf
  411365:	lea    esi,[ebp+0x30743ba0]
  41136b:	mov    al,ds:0x8a465094
  411370:	js     0x411307
  411372:	stos   DWORD PTR es:[di],eax
  411374:	xlat   BYTE PTR ds:[ebx]
  411375:	shl    BYTE PTR ds:0xbfb655eb,0x16
  41137c:	add    al,0xc7
  41137e:	jle    0x4113f0
  411380:	and    DWORD PTR [edi+edx*2+0x31de3dc5],esp
  411387:	ja     0x4113a8
  411389:	call   DWORD PTR [esi-0x714577fc]
  41138f:	pop    ebp
  411390:	and    eax,0x31aa5b36
  411395:	lds    esi,FWORD PTR [eax+0x6e]
  411398:	lds    edx,FWORD PTR [ebp-0x5e070986]
  41139e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a0:	jne    0x4113e2
  4113a2:	in     al,dx
  4113a3:	shr    DWORD PTR [edx-0x6e],cl
  4113a6:	bnd jge 0x411332
  4113a9:	mov    BYTE PTR [eax+0x1d81fe55],cl
  4113af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b0:	pushf  
  4113b1:	push   0x28cf2b64
  4113b6:	imul   edi,DWORD PTR [esi-0x22768435],0x8399a4f6
  4113c0:	mov    ah,0xcd
  4113c2:	jbe    0x41142f
  4113c4:	test   al,0x26
  4113c6:	sbb    DWORD PTR ds:0x6742a5b5,0x3c7d258d
  4113d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d1:	and    al,0xcb
  4113d3:	push   edi
  4113d4:	stos   BYTE PTR es:[edi],al
  4113d5:	jne    0x411455
  4113d7:	pop    ds
  4113d8:	sub    bl,bh
  4113da:	cmp    al,0x6d
  4113dc:	jbe    0x411364
  4113de:	mov    ds:0xe8260175,al
  4113e3:	dec    esi
  4113e4:	dec    eax
  4113e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e6:	mov    edx,0x836e3a46
  4113eb:	and    ecx,eax
  4113ed:	push   0x1c
  4113ef:	shl    BYTE PTR [ebx-0x44d21816],cl
  4113f5:	es retf 0xe972
  4113f9:	sub    al,0x21
  4113fb:	cmp    DWORD PTR [ecx],ebx
  4113fd:	mov    ds:0x86e668ab,al
  411402:	inc    edx
  411403:	out    dx,al
  411404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411405:	je     0x411425
  411407:	out    dx,al
  411408:	in     eax,dx
  411409:	dec    eax
  41140a:	push   es
  41140b:	push   ecx
  41140c:	jnp    0x411484
  41140e:	cwde   
  41140f:	sub    dh,BYTE PTR [ecx+eax*8+0x4e46f2d4]
  411416:	jno    0x411418
  411418:	mov    ch,0x41
  41141a:	mov    dh,0xa1
  41141c:	mov    esp,0x24df466e
  411421:	mov    edi,0xeebd9e23
  411426:	sbb    edx,DWORD PTR [ebx-0x487e6b3b]
  41142c:	clc    
  41142d:	jl     0x411460
  41142f:	nop
  411430:	jp     0x41141e
  411432:	push   0x63fe0fbb
  411437:	dec    edx
  411438:	sti    
  411439:	ror    DWORD PTR [eax-0x24],1
  41143c:	in     eax,dx
  41143d:	imul   BYTE PTR [esi]
  41143f:	test   DWORD PTR [eax],esi
  411441:	stos   BYTE PTR es:[edi],al
  411442:	xchg   ebx,eax
  411443:	mov    esp,DWORD PTR [edi]
  411445:	pop    ebx
  411446:	inc    eax
  411447:	stc    
  411448:	or     eax,0xc9c6c8c7
  41144d:	cld    
  41144e:	shr    DWORD PTR ds:0xf241d449,0xae
  411455:	inc    esp
  411456:	jnp    0x411493
  411458:	(bad)  
  411459:	in     al,0x80
  41145b:	aas    
  41145c:	xor    eax,0xb28f691
  411461:	dec    ebp
  411462:	fs jne 0x411421
  411465:	dec    ebx
  411466:	xchg   BYTE PTR [esi-0x37],bl
  411469:	imul   BYTE PTR [esi+0x59dcbafa]
  41146f:	dec    edi
  411470:	pop    edx
  411471:	data16 ss in al,0xb7
  411475:	shr    DWORD PTR [eax],1
  411477:	mov    ebp,0x2505e172
  41147c:	mov    ds:0xa298079a,eax
  411481:	outs   dx,DWORD PTR ds:[esi]
  411482:	adc    edx,edx
  411484:	rcr    DWORD PTR es:[ecx+0x1246edac],0xb
  41148c:	call   0xa8ecd6a
  411491:	jno    0x411492
  411493:	lea    eax,[ebx-0x54]
  411496:	dec    esi
  411497:	(bad)  
  411498:	sti    
  411499:	stc    
  41149a:	dec    esi
  41149b:	sub    BYTE PTR [edi+0x66],0x33
  41149f:	dec    eax
  4114a0:	jo     0x4114e7
  4114a2:	xchg   ebp,eax
  4114a3:	dec    ah
  4114a5:	or     dl,ch
  4114a7:	lds    edx,FWORD PTR [edi-0x7a31e20d]
  4114ad:	das    
  4114ae:	sbb    BYTE PTR [edx-0x675ba200],ch
  4114b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b5:	aad    0xee
  4114b7:	mov    ch,0xb8
  4114b9:	jp     0x411448
  4114bb:	je     0x411445
  4114bd:	aam    0x28
  4114bf:	pop    eax
  4114c0:	push   ebx
  4114c1:	pop    ecx
  4114c2:	inc    esp
  4114c3:	xchg   esp,eax
  4114c4:	fcomp  QWORD PTR [edx+ebx*4]
  4114c7:	gs test al,0xb
  4114ca:	jge    0x4114f2
  4114cc:	retf   0xf474
  4114cf:	inc    ebp
  4114d0:	sbb    edi,ebx
  4114d2:	dec    esp
  4114d3:	lock mov esi,0x2b5e04c6
  4114d9:	xor    al,0x62
  4114db:	mov    ecx,0xed741f1a
  4114e0:	lods   eax,DWORD PTR ds:[esi]
  4114e1:	lods   al,BYTE PTR ds:[esi]
  4114e2:	mov    DWORD PTR [eax-0x17c26e25],0xa61418b
  4114ec:	add    edx,ecx
  4114ee:	test   BYTE PTR [edi],ch
  4114f0:	xor    eax,0xf879c5a0
  4114f5:	xchg   BYTE PTR [edx],dh
  4114f7:	sar    esi,0x4a
  4114fa:	xchg   ebp,eax
  4114fb:	push   edx
  4114fc:	add    bh,BYTE PTR [ebx]
  4114fe:	dec    ebp
  4114ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411500:	jae    0x411570
  411502:	jo     0x41149f
  411504:	pop    esi
  411505:	aas    
  411506:	adc    bh,al
  411508:	sbb    edi,DWORD PTR [edi]
  41150a:	shl    BYTE PTR [eax+0x1d5815ed],0x3
  411511:	int    0x94
  411513:	daa    
  411514:	mov    esp,DWORD PTR ds:0xf5a4a51b
  41151a:	inc    ebp
  41151b:	cmp    ah,BYTE PTR [ecx]
  41151d:	mov    ds:0xe43d5627,al
  411522:	or     DWORD PTR [esi+0x6e787598],esp
  411528:	jg     0x4114c5
  41152a:	mov    eax,ds:0x6ce8496a
  41152f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411530:	std    
  411531:	aad    0xbc
  411533:	push   ds
  411534:	(bad)  
  411535:	shr    BYTE PTR [eax+0x38d14161],0xb9
  41153c:	les    eax,FWORD PTR [ecx-0x3d84126e]
  411542:	push   esi
  411543:	jge    0x41151f
  411545:	das    
  411546:	icebp  
  411547:	aad    0x99
  411549:	icebp  
  41154a:	icebp  
  41154b:	sbb    BYTE PTR [edx],cl
  41154d:	gs es (bad) 
  411551:	and    eax,0x57c26ad8
  411556:	pop    esp
  411557:	sar    BYTE PTR [edx+edi*4+0x23],cl
  41155b:	cmc    
  41155c:	xor    edi,esp
  41155e:	xchg   ecx,eax
  41155f:	sub    ebp,DWORD PTR [ecx+0x2b]
  411562:	xor    ch,dl
  411564:	nop
  411565:	(bad)  
  411566:	fsub   QWORD PTR [edi+0x3622cc09]
  41156c:	xor    edx,DWORD PTR [ebx-0x7d]
  41156f:	lahf   
  411570:	push   esi
  411571:	sbb    ecx,DWORD PTR [ebx-0x26e39d73]
  411577:	(bad)  
  411578:	cmp    edx,DWORD PTR [edi]
  41157a:	int    0x68
  41157c:	pop    ss
  41157d:	and    BYTE PTR [ecx+0x38],0xc7
  411581:	cmp    ebp,DWORD PTR [esi+0x7a325656]
  411587:	out    dx,al
  411588:	fistp  QWORD PTR [esi+0x49]
  41158b:	xchg   ecx,eax
  41158c:	aad    0x3d
  41158e:	or     DWORD PTR [edx-0x6b],esp
  411591:	sub    esi,DWORD PTR [ecx+ebp*1]
  411594:	jno    0x411526
  411596:	popa   
  411597:	cmp    bh,BYTE PTR [edi-0x6a]
  41159a:	jle    0x4115c2
  41159c:	rcl    eax,0x2c
  41159f:	fs (bad) 
  4115a1:	xchg   edx,eax
  4115a2:	push   esp
  4115a3:	push   ecx
  4115a4:	int3   
  4115a5:	scas   eax,DWORD PTR es:[edi]
  4115a6:	aad    0x96
  4115a8:	mov    esi,0x80a18d67
  4115ad:	stos   DWORD PTR es:[edi],eax
  4115ae:	(bad)  
  4115af:	pop    ebp
  4115b0:	or     DWORD PTR [ebx-0x17a4e1a5],esp
  4115b6:	pop    es
  4115b7:	lds    ebp,FWORD PTR [eax-0x1ea6e6dd]
  4115bd:	fs push cs
  4115bf:	test   al,0xb6
  4115c1:	ins    DWORD PTR es:[edi],dx
  4115c2:	xor    eax,DWORD PTR [esi+0x32]
  4115c5:	pusha  
  4115c6:	call   0x3cb60cb4
  4115cb:	out    dx,al
  4115cc:	mov    ebp,0xcc4133d
  4115d1:	icebp  
  4115d2:	adc    dl,BYTE PTR [ebp+0x1b1830f]
  4115d8:	(bad)  
  4115d9:	sbb    edx,DWORD PTR [ebx+edx*1-0x39b680fb]
  4115e0:	lock shl BYTE PTR [edx-0x30],1
  4115e4:	int    0x50
  4115e6:	xchg   edi,eax
  4115e7:	mov    al,0xce
  4115e9:	add    ch,BYTE PTR [ecx-0x75]
  4115ec:	adc    DWORD PTR [esi*8+0x4afcddbf],ebp
  4115f3:	mov    gs:0x59e6b9a5,al
  4115f9:	mov    ds:0xafaba8b6,al
  4115fe:	sahf   
  4115ff:	out    dx,eax
  411600:	inc    esi
  411601:	xchg   esp,eax
  411602:	cdq    
  411603:	fstp   st(7)
  411605:	dec    esi
  411606:	fld    QWORD PTR [esi+0x27]
  411609:	push   cs
  41160a:	pop    esp
  41160b:	jl     0x4115b9
  41160d:	push   edi
  41160e:	or     DWORD PTR [eax-0x1e],edx
  411611:	rcr    DWORD PTR [eax-0x63566138],0x61
  411618:	push   ds
  411619:	out    dx,al
  41161a:	in     al,dx
  41161b:	ret    
  41161c:	daa    
  41161d:	ror    BYTE PTR [eax+edx*2-0x2a],cl
  411621:	aas    
  411622:	sahf   
  411623:	inc    edi
  411624:	sahf   
  411625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411626:	imul   ebp,DWORD PTR [edi+0x44317118],0x3c
  41162d:	push   0x55
  41162f:	jae    0x4116af
  411631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411632:	mov    ?,esi
  411634:	iret   
  411635:	mov    bl,0x5c
  411637:	lahf   
  411638:	std    
  411639:	icebp  
  41163a:	jne    0x411600
  41163c:	iret   
  41163d:	les    edi,FWORD PTR [edx+0xe]
  411640:	mov    ch,0x5b
  411642:	inc    edi
  411643:	xchg   edi,eax
  411644:	and    edi,DWORD PTR [ecx-0x4fffa912]
  41164a:	pop    esi
  41164b:	cmp    bh,BYTE PTR [ecx-0x21e3568c]
  411651:	push   edx
  411652:	adc    esi,DWORD PTR [eax+0x1f]
  411655:	(bad)  
  411656:	enter  0x716e,0xa0
  41165a:	xlat   BYTE PTR ds:[ebx]
  41165b:	xchg   dh,bl
  41165d:	cdq    
  41165e:	ja     0x411623
  411660:	mov    dh,0xcc
  411662:	pop    ecx
  411663:	lods   al,BYTE PTR ds:[esi]
  411664:	xchg   ebx,eax
  411665:	and    esp,DWORD PTR [ebx-0x55c313d8]
  41166b:	psubusb mm3,QWORD PTR [edi+ecx*1+0x2c5658ef]
  411673:	cmp    dl,al
  411675:	mov    eax,ds:0xabf8f1f2
  41167a:	clc    
  41167b:	mov    eax,ds:0x49245982
  411680:	mov    edx,0xe29da7cd
  411685:	inc    edx
  411686:	shl    DWORD PTR [ecx-0x283e7118],0x61
  41168d:	daa    
  41168e:	push   edx
  41168f:	mov    al,ds:0xe1a65e71
  411694:	pop    edi
  411695:	inc    ebx
  411696:	stos   DWORD PTR es:[edi],eax
  411697:	int    0x78
  411699:	mov    dl,0x51
  41169b:	pop    ecx
  41169c:	leave  
  41169d:	(bad)  
  41169e:	imul   eax,DWORD PTR [esi-0x10e07cff],0xffffff84
  4116a5:	leave  
  4116a6:	push   ebx
  4116a7:	or     al,0x9d
  4116a9:	dec    edx
  4116aa:	add    al,0x24
  4116ac:	in     al,0x61
  4116ae:	in     eax,0xe
  4116b0:	pop    edi
  4116b1:	mov    cl,0xb2
  4116b3:	cmp    esi,ebx
  4116b5:	out    dx,eax
  4116b6:	fcmovnbe st,st(1)
  4116b8:	xor    ah,BYTE PTR [ebp+eax*2-0x59]
  4116bc:	call   0xc24cbf42
  4116c1:	lods   eax,DWORD PTR ds:[esi]
  4116c2:	test   al,0xbc
  4116c4:	and    ebx,DWORD PTR [ebp+0x2a0053bc]
  4116ca:	fbstp  TBYTE PTR [edi+0x4c]
  4116cd:	cmp    ebp,DWORD PTR [edx-0x1d204889]
  4116d3:	test   al,0x18
  4116d5:	cmc    
  4116d6:	stc    
  4116d7:	sub    al,0x2f
  4116d9:	hlt    
  4116da:	or     DWORD PTR [edi],ebx
  4116dc:	push   es
  4116dd:	adc    al,0xc5
  4116df:	mov    DWORD PTR [esi+0x20e78a67],edx
  4116e5:	setnp  BYTE PTR [edx+eiz*1]
  4116e9:	hlt    
  4116ea:	jbe    0x411717
  4116ec:	push   edi
  4116ed:	(bad)  
  4116ee:	cmp    eax,0xf8edf841
  4116f3:	jns    0x411748
  4116f5:	lds    esp,FWORD PTR [edi-0x313bf59]
  4116fb:	fs push esi
  4116fd:	sub    ebx,DWORD PTR [ebx]
  4116ff:	mov    edx,fs
  411701:	nop
  411702:	nop
  411703:	(bad)  
  411704:	sbb    al,0x9c
  411706:	sub    esi,ebp
  411708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411709:	adc    DWORD PTR [esi+0x1e309f7d],0x7d2f0bd5
  411713:	add    ecx,edx
  411715:	push   esp
  411716:	(bad)  
  411717:	ins    DWORD PTR es:[edi],dx
  411718:	mov    bh,0x71
  41171a:	aas    
  41171b:	jl     0x411729
  41171d:	div    BYTE PTR [edx-0x45ff40bb]
  411723:	sbb    edi,DWORD PTR [edi]
  411725:	lds    ebx,FWORD PTR [eax-0x68f9e3fb]
  41172b:	in     al,0x64
  41172d:	test   BYTE PTR [ecx+0x7e],cl
  411730:	cmp    cl,BYTE PTR [ebp+0x29b9060d]
  411736:	icebp  
  411737:	call   0xc66b22b0
  41173c:	add    ch,ch
  41173e:	adc    dh,bh
  411740:	cmp    DWORD PTR [eax+0x6514c4eb],eax
  411746:	cmp    DWORD PTR [esi],eax
  411748:	aam    0xb8
  41174a:	mov    eax,ds:0xfc509efa
  41174f:	pop    ecx
  411750:	push   edi
  411751:	xor    al,0xf4
  411754:	out    dx,al
  411755:	mov    dl,0x9c
  411757:	int3   
  411758:	or     edi,DWORD PTR [ebx-0x7]
  41175b:	add    esp,DWORD PTR [eax+0x4d1f6738]
  411761:	mov    bl,0x86
  411763:	into   
  411764:	mov    ah,0x3c
  411766:	jl     0x4116f3
  411768:	push   0x5a795794
  41176d:	int    0x3c
  41176f:	imul   esp,DWORD PTR [esi+0x208ed5d2],0x363c291
  411779:	adc    eax,0x18eea38b
  41177e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177f:	jmp    0x7c7:0xdd0ed7c5
  411786:	lds    ecx,FWORD PTR [edi+0x5b263b06]
  41178c:	(bad)  
  41178d:	mov    cs,ebx
  41178f:	mov    ah,0xc7
  411791:	mov    ss,ecx
  411793:	lods   eax,DWORD PTR ds:[esi]
  411794:	mov    eax,0xe965a4c6
  411799:	and    BYTE PTR [ecx+esi*2+0x3b11ffdb],dh
  4117a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a1:	retf   
  4117a2:	jge    0x411755
  4117a4:	xor    BYTE PTR [edi],al
  4117a6:	mov    edx,0xbee167b5
  4117ab:	cmp    al,0x27
  4117ad:	cmp    BYTE PTR [eax],bh
  4117af:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4117b1:	pop    esi
  4117b2:	sti    
  4117b3:	fmul   DWORD PTR [edi]
  4117b5:	jl     0x411783
  4117b7:	mov    edx,cs
  4117b9:	addr16 ja 0x4117a0
  4117bc:	push   ebp
  4117bd:	shl    BYTE PTR [edx],1
  4117bf:	xor    ebx,edx
  4117c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c2:	(bad)  
  4117c3:	sub    eax,DWORD PTR [edx+0x7e]
  4117c6:	or     eax,0x556e6e3f
  4117cb:	add    BYTE PTR [ebx+0x4c],0x23
  4117cf:	jmp    0xd213:0x75b57d04
  4117d6:	mov    edx,0x3c2b0d4
  4117db:	dec    edi
  4117dc:	push   0xef7360cb
  4117e1:	jmp    FWORD PTR [edx]
  4117e3:	popa   
  4117e4:	fwait
  4117e5:	or     BYTE PTR [ebx-0x8b248af],dh
  4117eb:	jmp    0x2a37:0x2bf15dbc
  4117f2:	and    ah,BYTE PTR ds:0x8daeb635
  4117f8:	cmp    edx,DWORD PTR [edx+0x63f7a13b]
  4117fe:	inc    esi
  4117ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411800:	imul   BYTE PTR [edi]
  411802:	xor    al,bh
  411804:	(bad)  
  411805:	addr16 (bad) 
  411807:	fucom  st(4)
  411809:	enter  0x447c,0x15
  41180d:	and    esi,DWORD PTR [eax-0x66]
  411810:	mov    edi,0x5d48817
  411815:	scas   eax,DWORD PTR es:[edi]
  411816:	je     0x41184e
  411818:	dec    ebx
  411819:	push   ebx
  41181a:	lea    ebp,[edi+0x7efc4a8d]
  411820:	cmp    edi,DWORD PTR [edx+0x2d1c445c]
  411826:	and    al,0x82
  411828:	adc    DWORD PTR [edx+eiz*1-0x5507db69],ebx
  41182f:	pop    esi
  411830:	cmc    
  411831:	pop    ss
  411832:	aaa    
  411833:	jmp    0x58cf:0x8f7d4ed3
  41183a:	xchg   ebp,eax
  41183b:	mov    edx,0x46d0e374
  411840:	push   0xdfd3d6ab
  411845:	add    BYTE PTR [eax-0x5281ec6c],al
  41184b:	aam    0xc
  41184d:	mov    ds,WORD PTR [ebx-0x7a]
  411850:	test   al,0x21
  411852:	std    
  411853:	push   eax
  411854:	add    edx,eax
  411856:	inc    eax
  411857:	ins    DWORD PTR es:[edi],dx
  411858:	pop    ebp
  411859:	sbb    BYTE PTR [ebp-0x6c3e78a7],dh
  41185f:	sbb    ebp,DWORD PTR [ecx-0x36]
  411862:	jns    0x41189f
  411864:	pop    ebx
  411865:	xor    eax,0xccdba455
  41186a:	mov    dl,0x8
  41186c:	push   edx
  41186d:	(bad)  
  41186e:	pmaxsw mm1,QWORD PTR [esi+0x1c]
  411872:	dec    esp
  411873:	inc    ecx
  411874:	mov    ds:0x6fefbbd3,eax
  411879:	cmp    ecx,DWORD PTR [edx]
  41187b:	ss hlt 
  41187d:	cs scas ax,WORD PTR es:[edi]
  411880:	pop    eax
  411881:	inc    edx
  411882:	test   eax,0xbbe5f447
  411887:	stos   DWORD PTR es:[edi],eax
  411888:	and    eax,0x413604f2
  41188d:	test   eax,0x9c4f8682
  411892:	xor    ebx,DWORD PTR [ebx]
  411894:	mov    WORD PTR [edi+esi*4-0x20],es
  411898:	and    DWORD PTR [edi],0x19
  41189b:	push   ss
  41189c:	push   ebp
  41189d:	fild   QWORD PTR [edx+0x6c13af4e]
  4118a3:	sub    DWORD PTR [ebp+0x5f437700],0x54
  4118aa:	call   0x7d2c:0xf5508155
  4118b1:	(bad)  [esi+0x35]
  4118b4:	fs xchg esi,ecx
  4118b7:	pop    es
  4118b8:	push   ecx
  4118b9:	push   es
  4118ba:	mov    esi,edx
  4118bc:	das    
  4118bd:	add    edi,DWORD PTR [ecx+0x6a]
  4118c0:	dec    eax
  4118c1:	push   ebx
  4118c2:	pop    edi
  4118c3:	jl     0x411939
  4118c5:	adc    DWORD PTR [ebx],ebp
  4118c7:	adc    al,0x7e
  4118c9:	imul   BYTE PTR ds:0xfe09750f
  4118cf:	sub    eax,0xd40b4784
  4118d4:	xchg   edx,eax
  4118d5:	inc    eax
  4118d6:	mov    ch,0xaa
  4118d8:	jb     0x411956
  4118da:	push   eax
  4118db:	cs cmp DWORD PTR ss:[ebx+0x8bc396a],edx
  4118e3:	out    0xa9,eax
  4118e5:	mov    gs,WORD PTR gs:[ebx]
  4118e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118e9:	push   ecx
  4118ea:	pop    edx
  4118eb:	push   ds
  4118ec:	push   ecx
  4118ed:	sbb    al,al
  4118ef:	pop    edx
  4118f0:	xor    eax,0x86b68836
  4118f5:	pop    edx
  4118f6:	scas   eax,DWORD PTR es:[edi]
  4118f7:	into   
  4118f8:	mov    edx,gs
  4118fa:	push   eax
  4118fb:	xchg   DWORD PTR [ebp+0x780319e0],esp
  411901:	pop    esi
  411902:	push   cs
  411903:	add    eax,0x80a4cfd1
  411908:	jb     0x411940
  41190a:	loop   0x4118df
  41190c:	xor    ebx,edi
  41190e:	add    eax,0x26b6b6b9
  411913:	jp     0x4118a0
  411915:	dec    edi
  411916:	mov    esi,0x89783f69
  41191b:	mov    ds:0xd2fed138,eax
  411920:	and    DWORD PTR [edi],esp
  411922:	and    ebp,DWORD PTR [esi]
  411924:	mov    cl,0x3f
  411926:	mov    edi,0xdec2732f
  41192b:	call   0x3c6b46ed
  411930:	sti    
  411931:	cmc    
  411932:	xlat   BYTE PTR ds:[ebx]
  411933:	imul   esi,DWORD PTR [ebx-0x6],0x78
  411937:	into   
  411938:	test   DWORD PTR [esi+0x62],0xf619fd3f
  41193f:	xor    DWORD PTR [ebx+0x2a],ebp
  411942:	cmp    al,0xd8
  411944:	jge    0x411955
  411946:	mov    al,0xd2
  411948:	ins    BYTE PTR es:[edi],dx
  411949:	adc    ebx,edi
  41194b:	adc    eax,0x3b3f6c76
  411950:	xchg   edi,eax
  411951:	lods   al,BYTE PTR ds:[esi]
  411952:	aas    
  411953:	outs   dx,BYTE PTR ds:[esi]
  411954:	sub    DWORD PTR [edi],eax
  411956:	mov    ds:0x4fa34037,al
  41195b:	xchg   ebx,eax
  41195c:	xchg   esi,eax
  41195d:	stos   BYTE PTR es:[edi],al
  41195e:	repz and edi,ebp
  411961:	pop    es
  411962:	mov    edi,0xaff5b5d4
  411967:	ja     0x41195e
  411969:	mov    edi,0x56662e7d
  41196e:	leave  
  41196f:	bound  ecx,QWORD PTR ds:0xc6339d93
  411975:	mov    DWORD PTR [ebp+0x627e3a83],ecx
  41197b:	add    BYTE PTR [esi],bh
  41197d:	imul   esi,DWORD PTR [esi],0x68a771ea
  411983:	push   ebp
  411984:	jnp    0x41195c
  411986:	call   0xeed0:0x67aeca3e
  41198d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41198e:	jo     0x4119e4
  411990:	inc    DWORD PTR [ecx]
  411992:	mov    edx,0x4e1bbc9a
  411997:	or     al,0x1e
  411999:	mov    al,0x39
  41199b:	popf   
  41199c:	(bad)  [ecx+0x7ecf676]
  4119a2:	stos   DWORD PTR es:[edi],eax
  4119a3:	dec    edx
  4119a4:	mov    ch,0xe
  4119a6:	gs ror ebx,1
  4119a9:	ja     0x411940
  4119ab:	sbb    cl,bh
  4119ad:	xor    eax,0x44b35101
  4119b2:	mov    ds:0xef976ff3,al
  4119b7:	dec    ebp
  4119b8:	mov    ebp,0xb7681214
  4119bd:	scas   al,BYTE PTR es:[edi]
  4119be:	push   0x6c
  4119c0:	mov    edx,0xeeddea1b
  4119c5:	cmp    eax,0xc3100bf2
  4119ca:	cmp    edx,esi
  4119cc:	add    DWORD PTR [eax],esi
  4119ce:	add    bh,BYTE PTR [ebp+0x10decbbb]
  4119d4:	pop    ds
  4119d5:	stos   BYTE PTR es:[edi],al
  4119d6:	jecxz  0x41199b
  4119d8:	bound  ecx,QWORD PTR ds:0x68f520d5
  4119de:	ret    0xbcad
  4119e1:	adc    ecx,edx
  4119e3:	sub    dl,ch
  4119e5:	mov    ebp,0x21ef09bb
  4119ea:	test   cl,cl
  4119ec:	sbb    edi,edi
  4119ee:	sub    DWORD PTR [ebx-0x1e],ebp
  4119f1:	jl     0x411a40
  4119f3:	cmp    eax,0x2d2a0c2a
  4119f8:	dec    esi
  4119f9:	fistp  WORD PTR [eax]
  4119fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fc:	test   DWORD PTR ds:0x85cd36af,edx
  411a02:	outs   dx,DWORD PTR fs:[esi]
  411a04:	cld    
  411a05:	xchg   ecx,eax
  411a06:	inc    ebx
  411a07:	jbe    0x4119f4
  411a09:	fistp  QWORD PTR [ecx-0x3a60e10f]
  411a0f:	fstp   DWORD PTR [ecx+0x4775ddf9]
  411a15:	imul   eax,edi,0x1b313aff
  411a1b:	lods   al,BYTE PTR ds:[esi]
  411a1c:	xor    BYTE PTR [ebp+0x3d],dh
  411a1f:	repnz sub BYTE PTR [ecx-0x2301068c],bl
  411a26:	in     al,0x5d
  411a28:	imul   edx,DWORD PTR [edi],0xa877e289
  411a2e:	fcomip st,st(7)
  411a30:	loope  0x411a41
  411a32:	icebp  
  411a33:	or     al,0x62
  411a35:	clc    
  411a36:	test   BYTE PTR [edi-0x589d30b2],cl
  411a3c:	call   0x57d7164d
  411a41:	add    al,0xe1
  411a43:	pop    esp
  411a44:	hlt    
  411a45:	fsub   QWORD PTR [eax]
  411a47:	mov    WORD PTR [esi],es
  411a49:	fdivr  QWORD PTR [edx+ebx*1-0x42]
  411a4d:	stc    
  411a4e:	ins    DWORD PTR es:[edi],dx
  411a4f:	mov    edx,DWORD PTR [ecx+0x17]
  411a52:	or     eax,0xffffffc8
  411a55:	std    
  411a56:	and    eax,0xc9b8d4de
  411a5b:	dec    edx
  411a5c:	paddsw mm6,QWORD PTR [edi-0x2bfd0f34]
  411a63:	and    ch,cl
  411a65:	cwde   
  411a66:	imul   ecx,esi,0x5f
  411a69:	ror    esi,cl
  411a6b:	cld    
  411a6c:	stos   BYTE PTR es:[edi],al
  411a6d:	inc    edx
  411a6e:	cmp    di,WORD PTR [eax]
  411a71:	adc    DWORD PTR [edi-0xbcb3d96],0xffffffee
  411a78:	and    al,0xa5
  411a7a:	mov    ecx,0x2d5cdd62
  411a7f:	pushf  
  411a80:	fwait
  411a81:	movntq (bad),mm0
  411a82:	out    0xc3,eax
  411a84:	outs   dx,BYTE PTR ds:[esi]
  411a85:	pop    edi
  411a86:	adc    BYTE PTR [edx+0x43],bh
  411a89:	fidiv  DWORD PTR [esi+edi*8-0x14]
  411a8d:	fcmovbe st,st(2)
  411a8f:	push   0xf742607f
  411a94:	mov    eax,0xa2b370e7
  411a99:	fisttp QWORD PTR [eax-0x20]
  411a9c:	test   dh,dl
  411a9e:	mov    eax,0x20bdc5d0
  411aa3:	jo     0x411aab
  411aa5:	aaa    
  411aa6:	inc    esp
  411aa7:	repz popf 
  411aa9:	pushf  
  411aaa:	inc    edx
  411aab:	add    bl,dl
  411aad:	dec    esi
  411aae:	adc    ebp,DWORD PTR [ecx]
  411ab0:	jne    0x411a3a
  411ab2:	push   cs
  411ab3:	mov    ebx,0xcf6c7a08
  411ab8:	addr16 adc eax,0x4c2663d8
  411abe:	dec    eax
  411abf:	add    edi,DWORD PTR [eax+0x1198c471]
  411ac5:	or     al,0x37
  411ac7:	popa   
  411ac8:	aad    0x68
  411aca:	mov    cl,dh
  411acc:	xchg   edi,eax
  411acd:	and    BYTE PTR [edx-0x2],cl
  411ad0:	adc    dh,ch
  411ad2:	xor    dl,dl
  411ad4:	dec    ebp
  411ad5:	popf   
  411ad6:	dec    esi
  411ad7:	xlat   BYTE PTR ds:[ebx]
  411ad8:	mov    ch,0xff
  411ada:	sub    ah,BYTE PTR [ebx]
  411adc:	outs   dx,DWORD PTR ds:[esi]
  411add:	xlat   BYTE PTR ds:[ebx]
  411ade:	and    edi,DWORD PTR [ecx]
  411ae0:	or     BYTE PTR [esi],ch
  411ae2:	cwde   
  411ae3:	mov    esi,0x40120108
  411ae8:	sbb    DWORD PTR [esi],ecx
  411aea:	ror    eax,0x66
  411aed:	lods   eax,DWORD PTR ds:[esi]
  411aee:	pop    esp
  411aef:	sub    eax,0x80badb0
  411af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411af5:	fcos   
  411af7:	pop    es
  411af8:	and    al,0x7
  411afa:	xor    ebp,DWORD PTR [ebp+0x769d916]
  411b00:	sub    esp,eax
  411b02:	js     0x411a9c
  411b04:	adc    BYTE PTR [ebx],bl
  411b06:	fdiv   DWORD PTR [edx*1-0x6f37fffc]
  411b0d:	gs jl  0x411b3c
  411b10:	in     al,0xa5
  411b12:	nop
  411b13:	inc    edx
  411b14:	ja     0x411b35
  411b16:	ins    BYTE PTR es:[edi],dx
  411b17:	ins    BYTE PTR es:[edi],dx
  411b18:	sub    edx,DWORD PTR [edx+0x1d]
  411b1b:	out    dx,eax
  411b1c:	ja     0x411af5
  411b1e:	popf   
  411b1f:	sbb    ah,0xee
  411b22:	xchg   BYTE PTR [edx],bl
  411b24:	inc    esi
  411b25:	aad    0x4f
  411b27:	inc    edx
  411b28:	jmp    0x716ea604
  411b2d:	das    
  411b2e:	rcr    DWORD PTR [eax-0x58],1
  411b31:	popa   
  411b32:	hlt    
  411b33:	imul   edx,DWORD PTR [esi-0x5e],0x33
  411b37:	test   DWORD PTR [eax-0x59],esp
  411b3a:	repz out 0x82,eax
  411b3d:	es aas 
  411b3f:	inc    bl
  411b41:	out    0x25,eax
  411b43:	fs sti 
  411b45:	push   edi
  411b46:	xchg   esp,eax
  411b47:	mov    edx,0x420e4651
  411b4c:	cmp    BYTE PTR [esp+eiz*2+0x4d75acac],ah
  411b53:	cs mov bl,0x2c
  411b56:	xlat   BYTE PTR ds:[ebx]
  411b57:	mov    DWORD PTR [ebx],edx
  411b59:	sbb    DWORD PTR [eax+esi*1+0x5fcfbbb5],ecx
  411b60:	out    dx,eax
  411b61:	dec    ebp
  411b62:	ret    0xf7f4
  411b65:	test   eax,0x64d150d7
  411b6a:	imul   eax,DWORD PTR [edi],0xffffffe5
  411b6d:	popf   
  411b6e:	fstp   DWORD PTR [ecx]
  411b70:	adc    cl,BYTE PTR [eax]
  411b72:	push   ebp
  411b73:	stc    
  411b74:	scas   al,BYTE PTR es:[edi]
  411b75:	sbb    esp,DWORD PTR [eax]
  411b77:	(bad)  
  411b79:	popa   
  411b7a:	dec    ecx
  411b7b:	iret   
  411b7c:	and    ch,cl
  411b7e:	jne    0x411b24
  411b80:	pop    es
  411b81:	add    ch,ah
  411b83:	shl    DWORD PTR ds:0x70edc67b,cl
  411b89:	xchg   BYTE PTR [ebx],dl
  411b8b:	jg     0x411b78
  411b8d:	fisub  WORD PTR ds:0xeabb4904
  411b93:	aaa    
  411b94:	inc    DWORD PTR [ebx]
  411b96:	lea    edi,[ecx+0x51527988]
  411b9c:	call   0xb45a9e7e
  411ba1:	xchg   esp,eax
  411ba2:	fwait
  411ba3:	sbb    BYTE PTR [edi],bh
  411ba5:	and    BYTE PTR [eax],ch
  411ba7:	fild   WORD PTR [ebp+eiz*4-0x32f6fc0a]
  411bae:	les    esi,FWORD PTR [ecx-0x2c]
  411bb1:	cld    
  411bb2:	mov    ecx,ss
  411bb4:	or     al,0x67
  411bb6:	or     BYTE PTR [edi],ch
  411bb8:	add    BYTE PTR ds:0xeb90488d,dl
  411bbe:	ds inc edi
  411bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc1:	leave  
  411bc2:	shr    DWORD PTR [eax-0x7f],cl
  411bc5:	(bad)  
  411bc6:	jb     0x7051a273
  411bcc:	xor    eax,0xff44b970
  411bd1:	fstp   st(2)
  411bd3:	sbb    al,0x45
  411bd5:	test   al,0x81
  411bd7:	xor    BYTE PTR [esi+0x69d91a2a],bh
  411bdd:	retf   0x3a5
  411be0:	ins    BYTE PTR es:[edi],dx
  411be1:	pusha  
  411be2:	mov    esi,0xea36ba4b
  411be7:	(bad)  
  411be8:	push   bp
  411bea:	sbb    al,0x28
  411bec:	outs   dx,BYTE PTR ds:[esi]
  411bed:	or     BYTE PTR [esi-0x62],0xa6
  411bf1:	pop    esi
  411bf2:	push   es
  411bf3:	sub    al,0x6f
  411bf5:	cwde   
  411bf6:	shl    BYTE PTR [edx+0x26],cl
  411bf9:	lods   al,BYTE PTR ds:[esi]
  411bfa:	das    
  411bfb:	ror    ch,1
  411bfd:	push   ecx
  411bfe:	push   edx
  411bff:	sbb    eax,0x5aca9b08
  411c04:	or     BYTE PTR [eax-0x4f1d3975],dl
  411c0a:	stc    
  411c0b:	mov    dl,0x20
  411c0d:	add    ebp,DWORD PTR [esi+edx*8+0x936a171]
  411c14:	xor    al,0xcb
  411c17:	mov    ch,0x50
  411c19:	sbb    bl,BYTE PTR [eax-0x4bde27aa]
  411c1f:	mov    al,ds:0xaa9fdda5
  411c24:	sub    al,0x20
  411c26:	in     al,dx
  411c27:	sub    eax,0x76eb2aa3
  411c2c:	xchg   ecx,eax
  411c2d:	pop    ds
  411c2e:	call   DWORD PTR [esi+0x20dee39e]
  411c34:	jmp    0xe808:0x98a7ebfc
  411c3b:	add    al,0x30
  411c3d:	mov    ch,0xf3
  411c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c40:	call   0x8c7833b7
  411c45:	ins    BYTE PTR es:[edi],dx
  411c46:	cmp    ebp,DWORD PTR [esp+edx*4]
  411c49:	jmp    0x411ca0
  411c4b:	xchg   edi,eax
  411c4c:	test   eax,0x4842b3dc
  411c51:	jmp    0x7e31b3a5
  411c56:	jno    0x411c04
  411c58:	pop    edx
  411c59:	inc    esi
  411c5a:	or     eax,0xa50fc2b6
  411c5f:	mov    bl,0xac
  411c61:	int3   
  411c62:	and    DWORD PTR [edx],0x44
  411c65:	sahf   
  411c66:	psubd  mm2,mm4
  411c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c6a:	jp     0x411bf6
  411c6c:	xchg   BYTE PTR [ebp-0x5d1601ad],bh
  411c72:	mov    al,0x77
  411c74:	cs in  al,0x6
  411c77:	sbb    BYTE PTR [ebx+edx*2],al
  411c7a:	jno    0x411c3b
  411c7c:	test   DWORD PTR [edi-0x66],eax
  411c7f:	xor    ebp,ecx
  411c81:	pop    ecx
  411c82:	pop    esp
  411c83:	sub    bl,BYTE PTR [ebx]
  411c85:	add    DWORD PTR [edx],edi
  411c87:	jnp    0x411cb8
  411c89:	xchg   BYTE PTR ss:[ebx+0x4b],ch
  411c8d:	jb     0x411cd6
  411c8f:	fld    DWORD PTR [ebx]
  411c91:	sub    edi,ebx
  411c93:	mov    esi,edx
  411c95:	cwde   
  411c96:	(bad)  
  411c97:	out    0x31,al
  411c99:	inc    esi
  411c9a:	in     al,0x30
  411c9c:	mov    BYTE PTR [edx+0x2da87036],al
  411ca2:	imul   ecx,edx,0xb1231fc9
  411ca8:	stc    
  411ca9:	xor    al,BYTE PTR [edx]
  411cab:	(bad)  
  411cac:	xor    eax,0x42dc9385
  411cb1:	push   ebx
  411cb2:	je     0x411c8e
  411cb4:	aam    0x2e
  411cb6:	add    BYTE PTR [edi-0x31],dl
  411cb9:	add    BYTE PTR ds:0x7f7e4e3a,bh
  411cbf:	dec    dl
  411cc1:	or     ebp,esi
  411cc3:	mov    ds,WORD PTR [ecx+eax*1-0x13f83cc5]
  411cca:	mul    BYTE PTR [ecx+edi*2+0x78]
  411cce:	jmp    0xe02e:0xc6144915
  411cd5:	pop    esp
  411cd6:	stos   BYTE PTR es:[edi],al
  411cd7:	push   eax
  411cd8:	push   ebx
  411cd9:	cld    
  411cda:	cdq    
  411cdb:	mov    eax,0x641da36e
  411ce0:	rcl    DWORD PTR [edx-0x2a],0x3c
  411ce4:	shl    BYTE PTR [eax],cl
  411ce6:	and    DWORD PTR [esi],edi
  411ce8:	cs int 0x9d
  411ceb:	mov    eax,ds:0xc8031d3c
  411cf0:	or     BYTE PTR [eax+0x5f],al
  411cf3:	pop    ss
  411cf4:	int    0x27
  411cf6:	add    al,0xda
  411cf8:	das    
  411cf9:	das    
  411cfa:	cmp    eax,0xba9dab97
  411cff:	xor    eax,0xc959cd28
  411d04:	ss cdq 
  411d06:	in     al,dx
  411d07:	and    DWORD PTR [edx],0x3a6de51f
  411d0d:	push   esi
  411d0e:	imul   esi,edi,0x1a28dbfe
  411d14:	or     eax,0x6f2ce419
  411d19:	dec    eax
  411d1a:	jmp    0x8ce5:0xdd684274
  411d21:	xchg   esp,eax
  411d22:	in     eax,dx
  411d23:	push   es
  411d24:	ror    BYTE PTR [ecx+0x2e70c189],cl
  411d2a:	or     eax,DWORD PTR [ecx-0x2]
  411d2d:	repnz stos BYTE PTR es:[edi],al
  411d2f:	push   es
  411d30:	dec    BYTE PTR [ebx]
  411d32:	ins    DWORD PTR es:[edi],dx
  411d33:	jo     0x411d8f
  411d35:	mov    DWORD PTR [ebx+edx*4-0x52],esi
  411d39:	pop    ss
  411d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d3b:	mov    al,0x75
  411d3d:	mov    esi,0xf17b1e7b
  411d42:	mov    cl,BYTE PTR [ecx]
  411d44:	mov    esp,0xaca21763
  411d49:	or     bl,ah
  411d4b:	mov    ebp,DWORD PTR [edx-0x69680aec]
  411d51:	mov    cl,0x44
  411d53:	push   0x3b95173b
  411d58:	call   0x6b57764f
  411d5d:	aas    
  411d5e:	enter  0x99a1,0x5f
  411d62:	mov    ecx,0x7da00046
  411d67:	(bad)  
  411d68:	sar    DWORD PTR [esi-0x11],cl
  411d6b:	ficomp WORD PTR [eax+ebx*1+0x4]
  411d6f:	icebp  
  411d70:	fwait
  411d71:	mov    db3,eax
  411d74:	xchg   esp,eax
  411d75:	in     eax,0x4a
  411d77:	pop    eax
  411d78:	aam    0x43
  411d7a:	mov    edi,0x3f72261d
  411d7f:	mov    al,0x86
  411d81:	loop   0x411d04
  411d83:	(bad)  
  411d84:	pusha  
  411d85:	push   es
  411d86:	sub    al,0x73
  411d88:	adc    eax,0x5fd11ca7
  411d8d:	fwait
  411d8e:	in     eax,0xa
  411d90:	push   0x4c
  411d92:	mov    ah,0xe4
  411d94:	enter  0xec95,0x2a
  411d98:	int    0xe1
  411d9a:	rol    DWORD PTR [eax-0x52],1
  411d9d:	and    DWORD PTR [ebp+0x303dd072],ebp
  411da3:	je     0x411d76
  411da5:	jo     0x411e21
  411da7:	mov    dh,0x4b
  411da9:	ret    0xde9
  411dac:	cmp    DWORD PTR [eax+0x7a],esi
  411daf:	mov    ds:0x927cbd58,eax
  411db4:	fistp  DWORD PTR ds:0xe0b1111f
  411dba:	xor    edx,edi
  411dbc:	lea    ebp,[edx-0x7d124b6d]
  411dc2:	or     BYTE PTR [ecx+0x703d9ff4],0xa5
  411dc9:	lahf   
  411dca:	enter  0x88f5,0x5d
  411dce:	dec    ebp
  411dcf:	cwde   
  411dd0:	jecxz  0x411e25
  411dd2:	dec    edi
  411dd3:	int    0x89
  411dd5:	js     0x411dfd
  411dd7:	rol    BYTE PTR [edi],0xd5
  411dda:	or     eax,ebx
  411ddc:	mov    ah,0x2c
  411dde:	cs jnp 0x411e00
  411de1:	dec    ecx
  411de2:	add    cl,BYTE PTR cs:[ebx+0x20878274]
  411de9:	xchg   ebp,eax
  411dea:	or     DWORD PTR [ebx-0x48],ecx
  411ded:	into   
  411dee:	test   eax,0xbb8fc753
  411df3:	bound  ecx,QWORD PTR [edi+0x75e9817e]
  411df9:	fnstcw WORD PTR [edx+ebx*4]
  411dfc:	jl     0x411d9b
  411dfe:	test   DWORD PTR [eax+edi*8],eax
  411e01:	mov    dh,0xb1
  411e03:	inc    edi
  411e04:	scas   eax,DWORD PTR es:[edi]
  411e05:	cmp    eax,0xe1c30b56
  411e0a:	push   0xa2b53301
  411e0f:	mov    DWORD PTR [ebx+0x73],esp
  411e12:	cmp    bl,BYTE PTR [ebx]
  411e14:	cli    
  411e15:	sbb    BYTE PTR [ebp-0x5b],bh
  411e18:	test   BYTE PTR [eax-0x6e],dl
  411e1b:	imul   esi,DWORD PTR [ecx],0xfffffffb
  411e1e:	xor    edi,DWORD PTR [esi+edi*8+0x3]
  411e22:	add    DWORD PTR [edx-0x27],edi
  411e25:	(bad)  
  411e27:	mov    esp,DWORD PTR [edx+0x4418fd9f]
  411e2d:	jb     0x411dc6
  411e2f:	sar    DWORD PTR [ecx-0x5],cl
  411e32:	sahf   
  411e33:	ret    0xb353
  411e36:	pop    esp
  411e37:	add    ebp,DWORD PTR [edi-0x36]
  411e3a:	inc    esp
  411e3b:	ss repz leave 
  411e3e:	jmp    0x411e97
  411e40:	scas   eax,DWORD PTR es:[edi]
  411e41:	call   0xd75c:0x65f99115
  411e48:	jle    0x411e23
  411e4a:	shl    DWORD PTR [eax-0x61],1
  411e4d:	(bad)  
  411e4e:	fistp  DWORD PTR [ebx]
  411e50:	sub    al,0x52
  411e52:	or     al,0x91
  411e54:	shl    bh,cl
  411e56:	mov    dh,0x47
  411e58:	inc    esi
  411e59:	neg    DWORD PTR [ecx+0x2f]
  411e5c:	cmp    edx,DWORD PTR [edi+0x1b]
  411e5f:	sbb    ecx,ebx
  411e61:	dec    edi
  411e62:	or     eax,0x384d248f
  411e67:	stos   BYTE PTR es:[edi],al
  411e68:	aas    
  411e69:	jmp    0x8340e683
  411e6e:	sub    al,0x96
  411e70:	lds    edi,FWORD PTR [esi]
  411e72:	jmp    0x9b78300b
  411e77:	out    dx,eax
  411e78:	pusha  
  411e79:	(bad)  
  411e7a:	dec    ecx
  411e7b:	loope  0x411e51
  411e7d:	xor    DWORD PTR [edx+0x71feb781],eax
  411e83:	lock into 
  411e85:	mov    ecx,fs
  411e87:	nop
  411e88:	mov    ch,0x6f
  411e8a:	push   edi
  411e8b:	mov    BYTE PTR [esi-0x556b62b7],cl
  411e91:	fdiv   QWORD PTR [edi+ebx*8]
  411e94:	push   es
  411e95:	test   DWORD PTR [edi+edx*1],0x3edbbec5
  411e9c:	call   0x4983:0x39f2e729
  411ea3:	inc    ecx
  411ea4:	js     0x411e98
  411ea6:	ss inc ebx
  411ea8:	aad    0x43
  411eaa:	mov    ds:0x8708b610,eax
  411eaf:	dec    eax
  411eb0:	adc    esp,DWORD PTR [edi]
  411eb2:	fs iret 
  411eb4:	xor    bh,BYTE PTR [eax+eax*4]
  411eb7:	int3   
  411eb8:	xor    eax,0xe86a13c3
  411ebd:	aaa    
  411ebe:	mov    ebp,0xa560178e
  411ec3:	mov    ebp,0x1ea8b233
  411ec8:	imul   eax,DWORD PTR [ecx],0x89009236
  411ece:	xor    ecx,ecx
  411ed0:	out    dx,al
  411ed1:	int3   
  411ed2:	mov    edi,DWORD PTR [edi-0x5]
  411ed5:	mov    edx,0x3fc69404
  411eda:	or     eax,0x15e7d843
  411edf:	push   edx
  411ee0:	cdq    
  411ee1:	imul   esp,DWORD PTR gs:[bx+si-0x43],0xa0a72ed8
  411eea:	mov    bh,0x33
  411eec:	xor    eax,0xee5df436
  411ef1:	dec    edx
  411ef2:	das    
  411ef3:	out    0x6a,al
  411ef5:	add    al,bl
  411ef7:	pop    eax
  411ef8:	das    
  411ef9:	or     al,0x68
  411efb:	jns    0x411ebe
  411efd:	push   esp
  411efe:	xor    eax,0x395fe7a3
  411f03:	xchg   BYTE PTR [edi],dl
  411f05:	xor    eax,0x8c820cc1
  411f0a:	(bad)  
  411f0b:	(bad)  
  411f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0d:	(bad)  
  411f0e:	retf   0x767e
  411f11:	and    al,0x9c
  411f13:	outs   dx,BYTE PTR cs:[esi]
  411f15:	or     eax,0x3facfe0d
  411f1a:	sub    dl,BYTE PTR [edi]
  411f1c:	jg     0x411f0c
  411f1e:	pop    ss
  411f1f:	gs mov ebx,0x6fd634f
  411f25:	lea    eax,[edi]
  411f27:	mov    bh,0xce
  411f29:	xchg   ebp,eax
  411f2a:	xor    edx,DWORD PTR [edx+0x21]
  411f2d:	test   al,0x1
  411f2f:	push   ebx
  411f30:	pop    ebx
  411f31:	dec    ebp
  411f32:	std    
  411f33:	sub    BYTE PTR ds:0xee04f652,bh
  411f39:	sahf   
  411f3a:	stos   DWORD PTR es:[edi],eax
  411f3b:	test   eax,0x82ef0a4c
  411f40:	sar    DWORD PTR [edx],1
  411f42:	adc    DWORD PTR [ecx-0x2d378ea6],edi
  411f48:	jo     0x411ece
  411f4a:	xor    ecx,DWORD PTR [edi+esi*2]
  411f4d:	out    dx,al
  411f4e:	cmp    esi,DWORD PTR [edi+0x52650d21]
  411f54:	adc    eax,0xcf54e10f
  411f5a:	pop    ebp
  411f5b:	add    al,dh
  411f5d:	cdq    
  411f5e:	or     ch,BYTE PTR [ebx]
  411f60:	pushf  
  411f61:	test   DWORD PTR [edx],0xe602cbf7
  411f67:	sbb    esi,ebx
  411f69:	xchg   esp,eax
  411f6a:	in     eax,dx
  411f6b:	jne    0x411ef8
  411f6d:	mov    esp,0x9ff0cdaa
  411f72:	dec    edx
  411f73:	xor    ebx,eax
  411f75:	clc    
  411f76:	icebp  
  411f77:	lods   eax,DWORD PTR ds:[esi]
  411f78:	jno    0x411fa9
  411f7a:	mov    esi,0x2f9700a3
  411f7f:	push   ebx
  411f80:	fcomp  DWORD PTR [edi+0x51]
  411f83:	cmc    
  411f84:	cdq    
  411f85:	sub    BYTE PTR [eax],dh
  411f87:	cmp    ch,BYTE PTR [bx+si-0x1d]
  411f8b:	push   ecx
  411f8c:	nop
  411f8d:	add    ebx,DWORD PTR [eax-0x12]
  411f90:	xchg   edx,esp
  411f92:	das    
  411f93:	sbb    eax,0x238f4a2c
  411f98:	inc    ebp
  411f99:	sbb    DWORD PTR [edi+0x45],0x86ed9dea
  411fa0:	push   0x17
  411fa2:	aaa    
  411fa3:	adc    cl,BYTE PTR [ecx]
  411fa5:	pop    es
  411fa6:	test   BYTE PTR [esi+0x64],0x3f
  411faa:	jmp    0x411fe2
  411fac:	jno    0x411f30
  411fae:	xchg   esp,eax
  411faf:	call   0x57e7f6de
  411fb4:	jbe    0x412023
  411fb6:	(bad)  
  411fb7:	repnz pop eax
  411fb9:	mov    edx,0x1c04909b
  411fbe:	(bad)  
  411fbf:	pop    edi
  411fc0:	mov    BYTE PTR [esi+0x6b],dl
  411fc3:	mov    eax,ds:0x4184d1c6
  411fc8:	sub    edx,DWORD PTR [esi+0x55567d99]
  411fce:	inc    ecx
  411fcf:	cmp    dh,BYTE PTR [eax+0x37125604]
  411fd5:	and    eax,0x46a11c41
  411fda:	out    0x88,al
  411fdc:	jl     0x41202a
  411fde:	push   ds
  411fdf:	leave  
  411fe0:	pop    ebx
  411fe1:	sub    dh,BYTE PTR [edx]
  411fe3:	sbb    eax,0x6def7d6a
  411fe8:	inc    ebp
  411fe9:	mov    ebx,0x4532eb6d
  411fee:	inc    ecx
  411fef:	mov    edx,0xf7e507b8
  411ff4:	push   cs
  411ff5:	js     0x412039
  411ff7:	aad    0xaa
  411ff9:	adc    sp,si
  411ffc:	cli    
  411ffd:	or     eax,0x20826a8e
  412002:	dec    edx
  412003:	cdq    
  412004:	in     al,0xb0
  412006:	in     al,dx
  412007:	or     eax,0x26d35f68
  41200c:	add    ecx,DWORD PTR [eax]
  41200e:	or     DWORD PTR [esi+0x57],0xffffffb0
  412012:	jbe    0x412000
  412014:	jle    0x411fbb
  412016:	mov    DWORD PTR fs:[edx],0xf131e512
  41201d:	mov    al,0x7f
  41201f:	jno    0x411fdc
  412021:	jnp    0x411ff7
  412023:	sub    edi,DWORD PTR [edi-0x5]
  412026:	push   esp
  412027:	aam    0x68
  412029:	enter  0xadb3,0x78
  41202d:	mov    ecx,0x98bcb2ce
  412032:	les    ebx,FWORD PTR [ebp-0x4a]
  412035:	sbb    eax,0xc4380265
  41203a:	arpl   WORD PTR [ecx-0x40286c3],sp
  412040:	hlt    
  412041:	jnp    0x411fcc
  412043:	pop    esi
  412044:	jmp    0x412085
  412046:	fdivr  QWORD PTR [ecx+0x56]
  412049:	cmp    ebp,DWORD PTR [ecx+ecx*1+0x7f]
  41204d:	clc    
  41204e:	ret    
  41204f:	in     eax,dx
  412050:	push   es
  412051:	call   0xe7ba:0xc2309ef6
  412058:	sti    
  412059:	mov    esi,0x75b7405f
  41205e:	dec    esi
  41205f:	mov    bh,0xa3
  412061:	sbb    BYTE PTR [ecx],cl
  412063:	ffreep st(1)
  412065:	pop    es
  412066:	mov    bl,0x2c
  412068:	rol    BYTE PTR [edi+0x4a],1
  41206b:	push   ss
  41206c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41206d:	out    dx,eax
  41206e:	in     al,0xf9
  412070:	es xor al,0x70
  412073:	call   0x1205:0x542996a6
  41207a:	xchg   esp,eax
  41207b:	(bad)  
  41207c:	fmul   st,st(3)
  41207e:	xchg   ch,bh
  412080:	popa   
  412081:	push   ecx
  412082:	dec    esp
  412083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412084:	nop
  412085:	arpl   WORD PTR [ebp+0x3d461f3f],bp
  41208b:	cmp    DWORD PTR [edx],esp
  41208d:	jmp    0x4120c7
  41208f:	xor    al,0x18
  412091:	das    
  412092:	mov    eax,0xa7c02212
  412097:	clc    
  412098:	mov    ecx,0x44403040
  41209d:	sbb    ebp,esp
  41209f:	lods   eax,DWORD PTR ds:[esi]
  4120a0:	mov    cl,0x4
  4120a2:	stos   DWORD PTR es:[di],eax
  4120a4:	and    al,0xd
  4120a6:	shr    BYTE PTR [edi-0x3d],1
  4120a9:	fnstenv [eax-0x31]
  4120ac:	arpl   WORD PTR [edx+0x73],ax
  4120af:	mov    ebx,0xc2528c4e
  4120b4:	cwde   
  4120b5:	call   0x4325cc34
  4120ba:	ja     0x412071
  4120bc:	cdq    
  4120bd:	cdq    
  4120be:	mov    dh,0x66
  4120c0:	cmp    al,0x7b
  4120c2:	ins    DWORD PTR es:[edi],dx
  4120c3:	and    eax,DWORD PTR ds:0x41ced9f0
  4120c9:	pop    ebp
  4120ca:	test   DWORD PTR [edi+esi*1],0xd6bb58f7
  4120d1:	stc    
  4120d2:	xor    esi,DWORD PTR [eax]
  4120d4:	rcr    DWORD PTR [edx-0x1784b4f2],0x69
  4120db:	stc    
  4120dc:	sbb    BYTE PTR [ebx+ebx*1+0x4f],ch
  4120e0:	js     0x412083
  4120e2:	pusha  
  4120e3:	fmul   st,st(3)
  4120e5:	or     bh,BYTE PTR [ebp-0x6f]
  4120e8:	lea    esp,[edi]
  4120ea:	inc    ebx
  4120eb:	dec    edx
  4120ec:	xchg   edx,eax
  4120ed:	cmp    eax,0x95970d94
  4120f2:	pusha  
  4120f3:	lea    eax,[edi]
  4120f5:	xor    ch,BYTE PTR [edi]
  4120f7:	(bad)  
  4120f8:	jg     0x4120e9
  4120fa:	retf   
  4120fb:	ret    0xb5f2
  4120fe:	nop
  4120ff:	shl    BYTE PTR gs:[ebp+0x47],1
  412103:	sub    BYTE PTR [eax],0x8f
  412106:	jg     0x412186
  412108:	push   esi
  412109:	ja     0x4120b5
  41210b:	gs loop 0x4120a7
  41210e:	jae    0x412167
  412110:	call   0x1f9ee19a
  412115:	iret   
  412116:	(bad)  
  412117:	adc    DWORD PTR [ecx-0x25],eax
  41211a:	mov    al,ds:0xd6222e74
  41211f:	je     0x4120fc
  412121:	xchg   esi,eax
  412122:	test   eax,0x35690d0
  412127:	jp     0x4120c6
  412129:	and    esp,DWORD PTR [eax-0x41]
  41212c:	sbb    eax,0xdada4fe
  412131:	push   esi
  412132:	icebp  
  412133:	(bad)  
  412134:	pop    ds
  412135:	mov    ch,0x4c
  412137:	test   BYTE PTR [eax+0x148367fa],dh
  41213d:	fld    TBYTE PTR [ebx+0x37d748fb]
  412143:	fiadd  WORD PTR [ecx+0x5129279b]
  412149:	mov    cl,0xe2
  41214b:	into   
  41214c:	jl     0x412117
  41214e:	mov    bl,0x4d
  412150:	xchg   edi,eax
  412151:	je     0x4120ec
  412153:	mov    ds:0x4231a760,al
  412158:	in     eax,dx
  412159:	xchg   DWORD PTR [ecx-0xd],esi
  41215c:	mov    esp,0x7a718d12
  412161:	sti    
  412162:	adc    eax,0x58901461
  412167:	stc    
  412168:	pop    edi
  412169:	or     ecx,edi
  41216b:	pop    edx
  41216c:	retf   0x2ee3
  41216f:	xor    dh,0x51
  412172:	je     0x412139
  412174:	test   al,0xb4
  412176:	lds    edx,FWORD PTR fs:[ebx+0x31]
  41217a:	sub    al,0x8b
  41217c:	xor    BYTE PTR [esi],al
  41217e:	xor    al,BYTE PTR [ebx+0x72]
  412181:	pushw  ds
  412183:	aas    
  412184:	jbe    0x4121c1
  412186:	jge    0x412130
  412188:	icebp  
  412189:	test   al,0x78
  41218b:	sbb    bh,dh
  41218d:	scas   eax,DWORD PTR es:[edi]
  41218e:	cmc    
  41218f:	(bad)  
  412190:	imul   edx,DWORD PTR [ebp-0xe],0xadbb0a10
  412197:	mov    edi,0xdc55fadb
  41219c:	inc    edx
  41219d:	jnp    0x4121ec
  41219f:	xor    dh,BYTE PTR ds:0x37a61524
  4121a5:	or     eax,0x12804610
  4121aa:	mov    ecx,0x2fb16846
  4121af:	gs dec edx
  4121b1:	sub    ax,0x2d16
  4121b5:	add    al,0x53
  4121b7:	jns    0x412169
  4121b9:	sbb    DWORD PTR [edi-0x12],0x18
  4121bd:	mov    ch,0x7
  4121bf:	repz mov esp,0x6b8c4921
  4121c5:	lea    ebx,[ebp+0x4579a60c]
  4121cb:	xchg   ebp,eax
  4121cc:	hlt    
  4121cd:	xor    DWORD PTR ds:0x4c96dd47,esp
  4121d3:	or     DWORD PTR [edi],esi
  4121d5:	fist   WORD PTR [edx]
  4121d7:	stos   BYTE PTR es:[edi],al
  4121d8:	mov    dh,0x1c
  4121da:	jl     0x41215c
  4121dc:	mov    esi,0x6d1e297
  4121e1:	(bad)
  4121e4:	sti    
  4121e5:	(bad)  
  4121e7:	pop    es
  4121e8:	clc    
  4121e9:	out    dx,eax
  4121ea:	xor    dh,BYTE PTR [eax-0x57d6954f]
  4121f0:	dec    esi
  4121f1:	test   DWORD PTR [edx-0x64c1fad6],eax
  4121f7:	adc    BYTE PTR [eax-0x1ba9e0ce],0xf9
  4121fe:	shr    ebp,1
  412200:	push   esp
  412201:	sbb    BYTE PTR [edi],0xee
  412204:	test   eax,0x2e626cfd
  412209:	shl    BYTE PTR [ebp+0x741e1598],1
  41220f:	pop    ecx
  412210:	adc    dh,bh
  412212:	popa   
  412213:	cld    
  412214:	iret   
  412215:	pop    ebx
  412216:	ja     0x4121f2
  412218:	outs   dx,DWORD PTR ds:[esi]
  412219:	add    ebx,ebx
  41221b:	scas   eax,DWORD PTR es:[edi]
  41221c:	stos   BYTE PTR es:[edi],al
  41221d:	dec    edi
  41221e:	mov    al,0xdf
  412220:	sub    bl,BYTE PTR [esi]
  412222:	jb     0x412264
  412224:	hlt    
  412225:	inc    eax
  412226:	daa    
  412227:	mov    eax,0x693b2a0d
  41222c:	(bad)  
  41222d:	int3   
  41222e:	mov    BYTE PTR [eax],bh
  412230:	aad    0x3b
  412232:	ss xchg esi,eax
  412234:	and    BYTE PTR [eax+0x18],dl
  412237:	pop    edx
  412238:	rcl    BYTE PTR [eax-0x66c1e5e5],1
  41223e:	jle    0x4121cd
  412240:	ins    WORD PTR es:[edi],dx
  412242:	pusha  
  412243:	jo     0x4121dc
  412245:	fcmovnbe st,st(3)
  412247:	push   ebx
  412248:	inc    ecx
  412249:	push   esp
  41224a:	fwait
  41224b:	mov    esp,0xa1050169
  412250:	mov    eax,ds:0xe6fc3f3f
  412255:	pop    ds
  412256:	xchg   edi,eax
  412257:	or     al,0x53
  412259:	les    ebp,FWORD PTR [edi+0x3a]
  41225c:	mov    esi,0x65704197
  412261:	pop    esp
  412262:	in     al,0xa1
  412264:	loop   0x412224
  412266:	or     edx,DWORD PTR [eax-0x4d3663e5]
  41226c:	push   ebx
  41226d:	mov    esp,0x65fc682
  412272:	xchg   esi,eax
  412273:	jnp    0x41227c
  412275:	cld    
  412276:	or     ch,al
  412278:	or     DWORD PTR [edi+0x4e],0xffffffec
  41227c:	add    esp,DWORD PTR [edi-0x3a]
  41227f:	jnp    0x412267
  412281:	mov    ds:0x26a2ca7a,eax
  412286:	xchg   esi,eax
  412287:	sbb    BYTE PTR [edi+eiz*8-0x4d],cl
  41228b:	loop   0x4122b8
  41228d:	cmp    al,0x9e
  41228f:	in     eax,0x60
  412291:	(bad)  
  412292:	jmp    0x41221a
  412294:	in     al,dx
  412295:	fwait
  412296:	sbb    al,0x9
  412298:	pusha  
  412299:	pop    ecx
  41229a:	ja     0x412301
  41229c:	addr16 mov al,ds:0xeef5
  4122a0:	or     eax,0x7711b278
  4122a5:	es push es
  4122a7:	stos   BYTE PTR es:[edi],al
  4122a8:	and    eax,0x749179dd
  4122ad:	push   ebp
  4122ae:	sub    al,0x46
  4122b0:	mov    esi,0x80e0b7a4
  4122b5:	pop    ebx
  4122b6:	adc    bh,BYTE PTR cs:[edi+0x6a]
  4122ba:	mov    al,ds:0xe616c6ae
  4122bf:	(bad)  
  4122c0:	xor    dl,cl
  4122c2:	inc    edi
  4122c3:	push   DWORD PTR [eax-0x5b]
  4122c6:	xchg   esp,eax
  4122c7:	xlat   BYTE PTR ds:[ebx]
  4122c8:	cld    
  4122c9:	mov    eax,ds:0x5f104876
  4122ce:	les    eax,FWORD PTR [ebp+0x42654c56]
  4122d4:	pop    ebx
  4122d5:	pop    ds
  4122d6:	lods   eax,DWORD PTR ds:[esi]
  4122d7:	shl    DWORD PTR [ebx],0x33
  4122da:	fwait
  4122db:	xlat   BYTE PTR ds:[ebx]
  4122dc:	pop    ecx
  4122dd:	outs   dx,BYTE PTR ds:[esi]
  4122de:	pop    esp
  4122df:	das    
  4122e0:	imul   ebx,DWORD PTR [eax],0x3dcba000
  4122e6:	cli    
  4122e7:	push   ds
  4122e8:	xchg   esp,eax
  4122e9:	out    0xdf,eax
  4122eb:	or     eax,0xdba47f4
  4122f0:	xchg   edi,eax
  4122f1:	test   BYTE PTR [edx+ebp*4],dl
  4122f4:	cmp    ebp,DWORD PTR [esp+ecx*4-0x42abad1d]
  4122fb:	pop    ecx
  4122fc:	rcr    DWORD PTR [ecx],cl
  4122fe:	lods   eax,DWORD PTR ds:[esi]
  4122ff:	repz shr ecx,cl
  412302:	(bad)  
  412304:	jge    0x412294
  412306:	xor    DWORD PTR [edx+ebp*8+0x7b0b9c19],0x6c
  41230e:	arpl   WORD PTR [edi],sp
  412310:	or     BYTE PTR [edx+0x358b9b9c],ch
  412316:	pop    eax
  412317:	xchg   ebx,eax
  412318:	gs cdq 
  41231a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41231b:	adc    eax,0xa105fd14
  412320:	add    cl,bh
  412322:	ins    BYTE PTR es:[edi],dx
  412323:	xchg   edx,eax
  412324:	push   0x7f
  412326:	sti    
  412327:	ins    DWORD PTR es:[edi],dx
  412328:	xor    ah,BYTE PTR [ebx+esi*8]
  41232b:	mov    ds:0xceb46b53,al
  412330:	icebp  
  412331:	cmp    al,0x5f
  412333:	pop    ss
  412334:	sbb    edi,DWORD PTR [esi-0x4]
  412337:	out    0xbb,al
  412339:	push   edx
  41233a:	inc    esi
  41233b:	xchg   edi,eax
  41233c:	mov    bl,0x11
  41233e:	xor    al,0x3e
  412340:	pop    ds
  412341:	dec    ebx
  412342:	xor    al,0x65
  412344:	fwait
  412345:	inc    edx
  412346:	sub    eax,0xf0985dda
  41234b:	je     0x4123bb
  41234d:	jmp    0x8b75:0xa219814a
  412354:	into   
  412355:	fcom   QWORD PTR [ebp+0x3b8f69fd]
  41235b:	xchg   BYTE PTR [ecx],al
  41235d:	sbb    al,0x3e
  41235f:	push   es
  412360:	mov    ah,0xad
  412362:	call   0x4d74:0x30951328
  412369:	pop    ebp
  41236a:	inc    esp
  41236b:	xor    BYTE PTR [esi-0x660209b3],cl
  412371:	add    DWORD PTR [ebx-0x1a],esi
  412374:	ss ins DWORD PTR es:[edi],dx
  412376:	call   0xeb0c493c
  41237b:	(bad)  
  41237c:	xchg   ebx,eax
  41237d:	sub    bl,bh
  41237f:	(bad)  [edi+0x3d]
  412382:	mov    esp,0xc5a03b7c
  412387:	push   cs
  412388:	in     eax,dx
  412389:	inc    ebx
  41238a:	inc    edi
  41238b:	gs cmp eax,0xd99d143e
  412391:	test   al,0xbf
  412393:	out    dx,eax
  412394:	ret    0x7944
  412397:	add    al,0xa1
  412399:	bound  ecx,QWORD PTR [esi]
  41239b:	fs adc al,0xf5
  41239e:	arpl   WORD PTR [edi],bx
  4123a0:	xchg   edx,eax
  4123a1:	dec    eax
  4123a2:	xor    esi,DWORD PTR ds:0x78a54ea3
  4123a8:	cmp    ebp,DWORD PTR [ebx+0x4e]
  4123ab:	xor    al,0xb3
  4123ad:	dec    esi
  4123ae:	and    BYTE PTR [edx+ebp*2],ah
  4123b1:	mov    ebx,0x9630f3b5
  4123b6:	loopne 0x4123ae
  4123b8:	fisub  WORD PTR [ecx-0x3d2d3b23]
  4123be:	mov    BYTE PTR [eax-0x4be12176],cl
  4123c4:	das    
  4123c5:	dec    ebx
  4123c6:	fbstp  TBYTE PTR [eax+0x744af2b2]
  4123cc:	adc    DWORD PTR [edx-0x24],ebx
  4123cf:	aaa    
  4123d0:	loopne 0x41239e
  4123d2:	sbb    BYTE PTR [esi-0x19],bh
  4123d5:	mov    edi,0x86fd923
  4123da:	push   0x54d89f0f
  4123df:	idiv   DWORD PTR [edi*4+0x5ba1f4b]
  4123e6:	or     esi,ebx
  4123e8:	ss sub cl,ch
  4123eb:	aad    0xa7
  4123ed:	rol    esi,cl
  4123ef:	jge    0x412428
  4123f1:	pop    eax
  4123f2:	pop    ds
  4123f3:	jo     0x4123c5
  4123f5:	mov    al,0x32
  4123f7:	outs   dx,BYTE PTR ds:[esi]
  4123f8:	mov    ss,WORD PTR [edi+0x51448c3a]
  4123fe:	or     ebp,DWORD PTR ds:0xc9e263c1
  412404:	shl    BYTE PTR [ebp+0x7b],cl
  412407:	push   cs
  412408:	fsubr  QWORD PTR [eax-0x1e8b2764]
  41240e:	pop    esi
  41240f:	(bad)  
  412410:	dec    edi
  412411:	cmc    
  412412:	xor    BYTE PTR [ebp-0x417bcd86],dh
  412418:	aad    0x75
  41241a:	inc    edi
  41241b:	jne    0x41246d
  41241d:	and    ax,WORD PTR [esi]
  412420:	aam    0x6b
  412422:	test   al,0xf4
  412424:	adc    BYTE PTR [edx],ah
  412426:	std    
  412427:	cwde   
  412428:	shr    DWORD PTR [edx*4+0x36340db0],cl
  41242f:	scas   eax,DWORD PTR es:[di]
  412431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412432:	or     esp,DWORD PTR [edi]
  412434:	lahf   
  412435:	(bad)  
  412436:	dec    eax
  412437:	dec    edx
  412438:	cmp    BYTE PTR [edi-0x78],dl
  41243b:	xor    eax,0x2941279f
  412440:	jno    0x41246f
  412442:	nop
  412443:	lock jmp 0xf430:0x5e53063d
  41244b:	test   al,0xf1
  41244d:	mov    edi,0x325cf4ac
  412452:	(bad)  
  412454:	(bad)  
  412455:	sbb    cl,cl
  412457:	iret   
  412458:	test   edi,esi
  41245a:	sbb    dh,BYTE PTR [esp+eax*4]
  41245d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41245e:	jp     0x4124be
  412460:	dec    ebp
  412461:	into   
  412462:	ror    DWORD PTR [eax-0xc],1
  412465:	mul    cl
  412467:	fs stos BYTE PTR es:[edi],al
  412469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246a:	inc    eax
  41246b:	ss push esi
  41246d:	cmp    DWORD PTR [esi+0x7],esi
  412470:	fwait
  412471:	add    al,0x8c
  412473:	push   0xffffffa7
  412475:	out    0x25,eax
  412477:	and    cl,BYTE PTR [edx-0x5959b320]
  41247d:	or     al,0xac
  41247f:	inc    esp
  412480:	pop    edi
  412481:	add    BYTE PTR [esi],bl
  412483:	push   ebx
  412484:	aaa    
  412485:	jl     0x4124ab
  412487:	ret    0xd36
  41248a:	(bad)  
  41248b:	cmp    esp,DWORD PTR [eax+0x5b]
  41248e:	cmp    DWORD PTR [esi+0x522599a3],edi
  412494:	ror    BYTE PTR [ecx-0x53],cl
  412497:	dec    eax
  412498:	mov    cs:0x4bd79656,eax
  41249e:	adc    BYTE PTR [edi+edi*8],bh
  4124a1:	sbb    bl,dl
  4124a3:	inc    esp
  4124a4:	mov    ebp,0x4c014eb0
  4124a9:	jmp    0x923a:0x1d8f481
  4124b0:	push   esi
  4124b1:	dec    ebp
  4124b2:	pinsrw mm6,WORD PTR [ebp+0x19],0x84
  4124b7:	es mov al,0x9c
  4124ba:	cwde   
  4124bb:	mov    bh,0x7
  4124bd:	jp     0x4124a7
  4124bf:	hlt    
  4124c0:	stos   DWORD PTR es:[edi],eax
  4124c1:	ds gs mov esi,esp
  4124c5:	outs   dx,BYTE PTR ds:[esi]
  4124c6:	dec    ecx
  4124c7:	pusha  
  4124c8:	sahf   
  4124c9:	lods   eax,DWORD PTR ds:[esi]
  4124ca:	ficom  DWORD PTR ds:0xdb49cf97
  4124d0:	retf   0xe6a0
  4124d3:	sub    bh,BYTE PTR ds:0xe547e46e
  4124d9:	xchg   edi,eax
  4124da:	mov    WORD PTR [edx-0x13],es
  4124dd:	lahf   
  4124de:	stos   DWORD PTR es:[edi],eax
  4124df:	pop    ebp
  4124e0:	dec    edi
  4124e1:	fwait
  4124e2:	xchg   esp,eax
  4124e3:	in     al,0x2e
  4124e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e6:	iret   
  4124e7:	cld    
  4124e8:	dec    esi
  4124e9:	shl    DWORD PTR [esi+eiz*4-0x33fb5654],cl
  4124f0:	lock in eax,dx
  4124f2:	fwait
  4124f3:	out    dx,eax
  4124f4:	jo     0x41256a
  4124f6:	jo     0x41247a
  4124f8:	jb     0x412497
  4124fa:	adc    eax,0x89bea9f2
  4124ff:	les    ebp,FWORD PTR [edx]
  412501:	mov    ebx,0x24d42d50
  412506:	xor    bh,BYTE PTR [esi-0x5c]
  412509:	mov    eax,ds:0x6e90b6a
  41250e:	add    esi,DWORD PTR [eax+ebx*8+0x1b]
  412512:	add    BYTE PTR [ecx+ebp*1],dl
  412515:	test   dl,ah
  412517:	stos   DWORD PTR es:[edi],eax
  412518:	inc    ebp
  412519:	pop    ecx
  41251a:	mov    ds:0xf486474a,eax
  41251f:	xor    bh,BYTE PTR [ecx]
  412521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412522:	or     BYTE PTR [ebx-0x31],ah
  412525:	inc    ebx
  412526:	mov    DWORD PTR [eax+edi*8],esp
  412529:	(bad)  
  41252a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41252b:	inc    ebx
  41252c:	jmp    0x412512
  41252e:	push   edx
  41252f:	adc    eax,DWORD PTR [edx+ebp*2+0x15]
  412533:	fwait
  412534:	loopne 0x412557
  412536:	pop    es
  412537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412538:	cs imul edx,ebp,0x686af104
  41253f:	xchg   edi,eax
  412540:	imul   edx,DWORD PTR ds:0x3453c369,0xffffff81
  412547:	and    eax,DWORD PTR [esi]
  412549:	lock xchg ebp,eax
  41254b:	(bad)  
  41254c:	(bad)  
  41254d:	das    
  41254e:	pop    edi
  41254f:	push   ebx
  412550:	cmp    bh,cl
  412552:	and    DWORD PTR [bp-0x80],ebp
  412556:	push   es
  412557:	mov    dl,0x3a
  412559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41255a:	mov    dl,0xe0
  41255c:	or     esp,DWORD PTR [esi]
  41255e:	imul   DWORD PTR [esi+eax*8-0x6]
  412562:	imul   ecx,ecx,0xffffffab
  412565:	dec    ebx
  412566:	cdq    
  412567:	dec    edx
  412568:	cvtps2pd xmm6,QWORD PTR [edi]
  41256b:	cs cmc 
  41256d:	pop    edx
  41256e:	mov    al,0xc5
  412570:	outs   dx,DWORD PTR ds:[esi]
  412571:	add    DWORD PTR [edx+0x27bfdc4a],esp
  412577:	idiv   BYTE PTR [edi+eax*8-0x75b0f84]
  41257e:	daa    
  41257f:	push   edx
  412580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412581:	push   esp
  412582:	call   0x9ad9021
  412587:	push   ebp
  412588:	fucom  st(7)
  41258a:	mov    bh,BYTE PTR [edx-0x46]
  41258d:	imul   esp,DWORD PTR ds:0x7ed5233b,0xe81deced
  412597:	xor    esi,0x5c
  41259a:	sub    ch,dl
  41259c:	into   
  41259d:	and    al,ch
  41259f:	xor    al,0xd1
  4125a1:	jns    0x412523
  4125a3:	fnsave [ecx+0x1f]
  4125a6:	out    dx,al
  4125a7:	mov    ah,0xcc
  4125a9:	vcvtps2dq ymm1,YMMWORD PTR [edi]
  4125ad:	gs je  0x41262b
  4125b0:	mov    esp,0x8d485530
  4125b5:	sub    eax,eax
  4125b7:	inc    edx
  4125b8:	fdivr  DWORD PTR [edx+0x4b70ff1]
  4125be:	je     0x41254b
  4125c0:	js     0x4125a0
  4125c2:	pop    edx
  4125c3:	out    dx,al
  4125c4:	ffree  st(7)
  4125c6:	inc    ebx
  4125c7:	mov    esp,0x97e86e
  4125cc:	test   DWORD PTR [ebx-0x3a],esi
  4125cf:	ret    
  4125d0:	fs mov bh,0x11
  4125d3:	int3   
  4125d4:	mov    ch,0x78
  4125d6:	shr    DWORD PTR [edx+0x58],1
  4125d9:	cwde   
  4125da:	lock push cs
  4125dc:	mov    cl,0x71
  4125de:	cli    
  4125df:	mov    ?,ebx
  4125e1:	mov    ebx,DWORD PTR [edx-0x4341fd08]
  4125e7:	lea    eax,[ebx-0x3d291cc8]
  4125ed:	retf   
  4125ee:	sbb    dh,BYTE PTR [ebx+0x59]
  4125f1:	jo     0x412651
  4125f3:	shl    BYTE PTR [edx-0x5d656d9b],0x5a
  4125fa:	jae    0x412591
  4125fc:	iret   
  4125fd:	stos   DWORD PTR es:[edi],eax
  4125fe:	pop    ds
  4125ff:	cmp    al,0x6f
  412601:	outs   dx,DWORD PTR ds:[esi]
  412602:	jno    0x4125b0
  412604:	(bad)  
  412605:	call   0x26a4:0x74db16a3
  41260c:	add    al,0x60
  41260e:	(bad)  
  41260f:	xor    eax,0xf21d98d8
  412614:	fidivr DWORD PTR [ebp+0xd]
  412617:	push   ebx
  412618:	sub    BYTE PTR [ebx-0x52afa805],ch
  41261e:	push   edi
  41261f:	add    BYTE PTR [bx],dh
  412622:	or     dl,dl
  412624:	push   cs
  412625:	out    dx,eax
  412626:	push   0xf08c5bc9
  41262b:	mov    edi,0xa15d5761
  412630:	retf   
  412631:	cs jl  0x412697
  412634:	stos   BYTE PTR es:[edi],al
  412635:	add    eax,0x24ebe57c
  41263a:	xchg   esp,eax
  41263c:	(bad)  
  41263d:	push   0xffffffb7
  41263f:	push   eax
  412640:	mov    cl,0xf4
  412642:	in     al,dx
  412643:	mov    ecx,0x418d706f
  412648:	sahf   
  412649:	jl     0x41265c
  41264b:	jle    0x4125e6
  41264d:	repz int 0xae
  412650:	ss and eax,0x38a0ad8c
  412656:	push   cs
  412657:	unpckhps xmm2,XMMWORD PTR [ebx+0x7ccae187]
  41265e:	clc    
  41265f:	ret    0xcc4f
  412662:	ins    DWORD PTR es:[edi],dx
  412663:	push   0x30
  412665:	call   0xab57:0x50a4ae82
  41266c:	and    BYTE PTR [edi+0x7],ah
  41266f:	xchg   esp,eax
  412670:	(bad)  
  412671:	inc    esp
  412672:	int3   
  412673:	dec    edx
  412674:	into   
  412675:	(bad)  
  412676:	daa    
  412677:	rol    BYTE PTR [edi+0x50],0xd3
  41267b:	jbe    0x412600
  41267d:	pop    ecx
  41267e:	fs push es
  412680:	pop    esi
  412681:	add    DWORD PTR [esi-0x71],edx
  412684:	mov    ebx,0x9decbdd0
  412689:	dec    esp
  41268a:	clc    
  41268b:	stc    
  41268c:	fld    QWORD PTR [esi]
  41268e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41268f:	ret    0x656f
  412692:	ret    0xafa9
  412695:	xchg   edx,eax
  412696:	inc    di
  412698:	push   esp
  412699:	aaa    
  41269a:	pusha  
  41269b:	push   cs
  41269c:	out    dx,eax
  41269d:	add    eax,0x8e1d50a0
  4126a2:	inc    edi
  4126a3:	add    cl,dl
  4126a5:	mov    al,0xe2
  4126a7:	call   0x59bd01d3
  4126ac:	scas   al,BYTE PTR es:[edi]
  4126ad:	loop   0x4126cd
  4126af:	(bad)  
  4126b0:	outs   dx,BYTE PTR ds:[esi]
  4126b1:	mov    ecx,0x29ed6811
  4126b6:	(bad)  
  4126b7:	jg     0x4126d3
  4126b9:	pop    ebx
  4126ba:	mov    edi,0x6645d46c
  4126bf:	jge    0x41269e
  4126c1:	xor    esp,ebp
  4126c3:	push   esi
  4126c4:	lods   eax,DWORD PTR ds:[esi]
  4126c5:	lahf   
  4126c6:	lahf   
  4126c7:	daa    
  4126c8:	(bad)  
  4126c9:	retf   0x8189
  4126cc:	dec    esi
  4126cd:	and    edx,DWORD PTR [eax-0x1c2bb743]
  4126d3:	dec    edi
  4126d4:	jp     0x4126d2
  4126d6:	(bad)  
  4126d7:	xor    ax,0xd4f4
  4126db:	mov    edi,0x65f07f27
  4126e0:	sti    
  4126e1:	mov    ds:0xa1c2c107,eax
  4126e6:	popf   
  4126e7:	repz data16 fadd QWORD PTR ds:0x57b2b888
  4126ef:	pop    ebx
  4126f0:	fdiv   st(7),st
  4126f2:	xchg   ebp,eax
  4126f3:	pop    es
  4126f4:	fs push ecx
  4126f7:	add    cl,bh
  4126f9:	test   al,0x5b
  4126fb:	hlt    
  4126fc:	sub    ebx,DWORD PTR [edi-0x743961d4]
  412702:	int3   
  412703:	lods   al,BYTE PTR ds:[esi]
  412704:	jno    0x4126bc
  412706:	in     al,dx
  412707:	xor    esp,ebx
  412709:	fld    QWORD PTR [edi+0x76]
  41270c:	out    0x59,eax
  41270e:	mov    ebp,0x4623f91b
  412713:	mov    ch,0x98
  412715:	aas    
  412716:	jns    0x4126b2
  412718:	stos   DWORD PTR es:[edi],eax
  412719:	inc    eax
  41271a:	cmp    ch,ch
  41271c:	pop    esp
  41271d:	mov    edi,esp
  41271f:	xchg   esi,eax
  412720:	repz inc esp
  412722:	lods   eax,DWORD PTR ds:[esi]
  412723:	cmp    eax,DWORD PTR [esi-0x7384db20]
  412729:	retf   0x15a
  41272c:	loopne 0x4126ba
  41272e:	lahf   
  41272f:	sub    ecx,eax
  412731:	push   edi
  412732:	xchg   ecx,eax
  412733:	sub    eax,0xbf7a8c9c
  412738:	or     edi,DWORD PTR [eax-0x7e7d54bf]
  41273e:	mov    ds:0xe9a09b59,al
  412743:	js     0x4127b4
  412745:	std    
  412746:	jmp    0x412755
  412748:	bound  ecx,QWORD PTR [ebx+0x2dede29b]
  41274e:	mov    DWORD PTR [ebp-0x7f],ebx
  412751:	cmp    eax,0xcc096ac7
  412756:	xor    ebp,ebp
  412758:	mov    dh,0x66
  41275a:	pop    ebp
  41275b:	mov    ds:0x937189f7,eax
  412760:	sbb    BYTE PTR [ecx+0x7ab3117d],dl
  412766:	idiv   BYTE PTR [ebx+0x4074a93]
  41276c:	add    edi,ecx
  41276e:	inc    edi
  41276f:	add    al,0x49
  412771:	psubsw mm2,QWORD PTR [edi+0xf]
  412775:	pop    ebp
  412776:	dec    ecx
  412777:	mov    ebp,0xf385bbb7
  41277c:	jae    0x4127fb
  41277e:	sub    ebp,DWORD PTR [esi]
  412780:	call   0xe5d3:0x83b2d76e
  412787:	fdivr  QWORD PTR cs:[ebx-0x20d55201]
  41278e:	adc    BYTE PTR [edx],dh
  412790:	pop    ebp
  412791:	xor    eax,0xda440a20
  412796:	stos   DWORD PTR es:[edi],eax
  412797:	push   edx
  412798:	shr    DWORD PTR ds:[esi],0x96
  41279c:	lock fisttp DWORD PTR [ecx+eax*2-0x50]
  4127a1:	hlt    
  4127a2:	mov    eax,0x3a0f2c4a
  4127a7:	jmp    0x41279d
  4127a9:	mov    edx,DWORD PTR [edi-0x426494d2]
  4127af:	das    
  4127b0:	push   ecx
  4127b1:	jecxz  0x4127c4
  4127b3:	pop    eax
  4127b4:	hlt    
  4127b5:	inc    ebp
  4127b6:	xchg   ebp,eax
  4127b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b8:	test   eax,0xee81848c
  4127bd:	int    0x5f
  4127bf:	stos   DWORD PTR es:[edi],eax
  4127c0:	test   eax,0xb920434f
  4127c5:	and    ah,BYTE PTR [ecx+0x6]
  4127c8:	jecxz  0x412844
  4127ca:	inc    eax
  4127cb:	mov    bh,0x3e
  4127cd:	push   ecx
  4127ce:	lea    edx,[ebp+ecx*2+0x3a]
  4127d2:	sub    eax,0xa0464bb0
  4127d7:	pusha  
  4127d8:	adc    bh,dh
  4127da:	popa   
  4127db:	fcomp  DWORD PTR [esi-0x43]
  4127de:	shl    DWORD PTR [edx+0x1a],1
  4127e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127e2:	adc    bh,BYTE PTR [ecx+0x58e8e288]
  4127e8:	and    eax,0xf040d356
  4127ed:	sti    
  4127ee:	popf   
  4127ef:	bound  ebp,QWORD PTR [edx-0x52]
  4127f2:	jp     0x4127e1
  4127f4:	sbb    DWORD PTR [esi-0x13dc4cb7],0x5691da7f
  4127fe:	(bad)  
  4127ff:	dec    esp
  412800:	dec    ebp
  412801:	mov    bl,0xa0
  412803:	icebp  
  412804:	imul   ecx,DWORD PTR [ecx],0x7cfaef16
  41280a:	(bad)  
  41280b:	mov    ah,bh
  41280d:	push   eax
  41280e:	daa    
  41280f:	int    0x6a
  412811:	sub    edi,DWORD PTR [ebp-0x3d7c610a]
  412817:	xchg   ebx,eax
  412818:	push   0xffffffc9
  41281a:	jnp    0x4127d1
  41281c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41281d:	loopne 0x412899
  41281f:	scas   eax,DWORD PTR es:[edi]
  412820:	shr    DWORD PTR [edx+ebx*8],cl
  412823:	popa   
  412824:	cmp    eax,0xfa3b0b0e
  412829:	mov    esi,0x537cf4b7
  41282e:	xchg   BYTE PTR [esp+edi*2+0x2b],ah
  412832:	test   al,0x9e
  412834:	jo     0x4128b2
  412836:	xchg   ecx,eax
  412837:	stos   DWORD PTR es:[edi],eax
  412838:	xchg   esp,eax
  412839:	mov    esi,0x1021a886
  41283e:	dec    edi
  41283f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412840:	dec    edi
  412841:	lock xchg edx,eax
  412843:	in     al,dx
  412844:	(bad)  
  412845:	rcl    DWORD PTR [ebx+0x4a35caf6],1
  41284b:	jae    0x412812
  41284d:	icebp  
  41284e:	jno    0x412873
  412850:	adc    al,0x76
  412852:	sbb    al,al
  412854:	les    esp,FWORD PTR [edi+edx*4+0x75ff34c0]
  41285b:	jmp    0xbcf0:0x9deb873b
  412862:	in     eax,0x9d
  412864:	iret   
  412865:	hlt    
  412866:	loop   0x4128c9
  412868:	div    DWORD PTR [edi-0x10]
  41286b:	sbb    DWORD PTR [eax],0x6ea169a1
  412871:	push   ebx
  412872:	push   ecx
  412873:	sbb    BYTE PTR [eax+eax*2+0x49],al
  412877:	out    dx,eax
  412878:	push   ds
  412879:	jmp    0xa9c2aae8
  41287e:	shl    DWORD PTR [edx-0x2a23534a],cl
  412884:	in     eax,0xe6
  412886:	xchg   esp,eax
  412887:	js     0x412839
  412889:	clc    
  41288a:	mov    edi,0x6b6c9fa9
  41288f:	jnp    0x412847
  412891:	inc    ebx
  412892:	in     eax,0x97
  412894:	fsub   DWORD PTR [esi+0x64]
  412897:	sbb    ch,BYTE PTR [ecx+edi*8]
  41289a:	test   BYTE PTR [edi-0x73],ch
  41289d:	add    edi,DWORD PTR [ebp+0x29770bc1]
  4128a3:	jl     0x4128c3
  4128a5:	mov    edi,0x911f6310
  4128aa:	and    BYTE PTR [esi+0x40d0f815],cl
  4128b0:	push   edi
  4128b1:	cmp    al,0xf2
  4128b3:	call   0x772f:0xec3812c8
  4128ba:	out    dx,eax
  4128bb:	xchg   ebx,eax
  4128bc:	lds    eax,FWORD PTR [ecx]
  4128be:	or     dl,bh
  4128c0:	and    DWORD PTR [esi-0x44],esp
  4128c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c4:	xchg   esi,eax
  4128c5:	js     0x41293b
  4128c7:	push   eax
  4128c8:	dec    esi
  4128c9:	(bad)  
  4128ca:	in     al,dx
  4128cb:	stos   DWORD PTR es:[edi],eax
  4128cc:	dec    ecx
  4128cd:	arpl   WORD PTR [edi-0x364b017a],ax
  4128d3:	mov    dl,0xd9
  4128d5:	rcr    bl,cl
  4128d7:	(bad)  
  4128d8:	mov    bh,0x94
  4128da:	lods   eax,DWORD PTR ds:[esi]
  4128db:	addr16 loop 0x41286f
  4128de:	pop    ebp
  4128df:	add    ch,ah
  4128e1:	xchg   ecx,eax
  4128e2:	pop    ds
  4128e3:	cmp    eax,0x901b3a1e
  4128e8:	or     ebx,edx
  4128ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128eb:	aas    
  4128ec:	bound  edx,QWORD PTR [ebx-0x3cab3877]
  4128f2:	sbb    ebx,edx
  4128f4:	lea    eax,[ecx]
  4128f6:	mov    esi,0xf7602fb6
  4128fb:	add    DWORD PTR [esi],edi
  4128fd:	xor    bh,BYTE PTR [ebx]
  4128ff:	std    
  412900:	inc    esi
  412901:	inc    edx
  412902:	je     0x4128ba
  412904:	xchg   ebx,eax
  412905:	inc    esi
  412906:	outs   dx,BYTE PTR ds:[esi]
  412907:	fwait
  412908:	jmp    0x312d13e5
  41290d:	dec    ecx
  41290e:	adc    ah,BYTE PTR [esi+0xd66d4b3]
  412914:	vpermpd zmm3{k2}{z},zmm7,zmm5
  41291a:	push   0xffffffde
  41291c:	push   es
  41291d:	ins    DWORD PTR es:[edi],dx
  41291e:	stos   DWORD PTR es:[edi],eax
  41291f:	popa   
  412920:	xor    ecx,DWORD PTR [edx+0x6ae646ab]
  412926:	adc    al,0xb3
  412928:	mov    ?,WORD PTR [ebx]
  41292a:	call   0x5fe16134
  41292f:	mov    bl,0xc4
  412931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412932:	shl    DWORD PTR [eax+esi*1+0x41],1
  412936:	push   0xffffffbd
  412938:	loopne 0x41295e
  41293a:	push   ebp
  41293b:	jae    0x412935
  41293d:	and    eax,0x1ac951f7
  412942:	or     eax,0xb905c862
  412947:	inc    edi
  412948:	mov    ecx,eax
  41294a:	sub    eax,0xe8383a34
  41294f:	jmp    0x6704:0xd94b613a
  412956:	fimul  DWORD PTR [eax+0x70]
  412959:	jns    0x412954
  41295b:	or     BYTE PTR ds:0xab5f61bd,cl
  412961:	pop    edi
  412962:	mov    eax,ds:0x76a1ffc1
  412967:	scas   al,BYTE PTR es:[edi]
  412968:	sub    ecx,0x588d0c8d
  41296e:	shl    BYTE PTR [eax-0x4c],1
  412971:	or     ah,BYTE PTR ds:0x6fa2acf7
  412977:	sub    dl,BYTE PTR [edi+edx*1+0x25]
  41297b:	xor    eax,eax
  41297d:	pop    ss
  41297e:	stc    
  41297f:	cmp    al,0xd9
  412981:	std    
  412982:	lahf   
  412983:	xchg   bl,cl
  412985:	jnp    0x412975
  412987:	add    al,0xa8
  412989:	dec    esp
  41298a:	daa    
  41298b:	je     0x412919
  41298d:	int3   
  41298e:	mov    edx,0xc510da33
  412993:	pop    esp
  412994:	cli    
  412995:	loopne 0x4129c1
  412997:	dec    ecx
  412998:	jge    0x4129c4
  41299a:	cmc    
  41299b:	inc    ebx
  41299c:	or     ebx,DWORD PTR [esp+edx*8-0x14687827]
  4129a3:	sbb    DWORD PTR [eax+0x6184ec58],edi
  4129a9:	es mov esi,0xa7567ad
  4129af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b0:	cmp    esp,ebx
  4129b2:	xchg   ebx,eax
  4129b3:	push   esp
  4129b4:	ss aas 
  4129b6:	fnsave [ecx+0x434f5ccd]
  4129bc:	out    dx,al
  4129bd:	inc    edx
  4129be:	cs mov dl,0x78
  4129c1:	jl     0x41294f
  4129c3:	adc    BYTE PTR [edx+0x27d228fc],dh
  4129c9:	pop    ds
  4129ca:	retf   0x56f8
  4129cd:	daa    
  4129ce:	cdq    
  4129cf:	xchg   edx,eax
  4129d0:	adc    al,0x37
  4129d2:	imul   ebx,DWORD PTR [edx+0x66ca023f],0x1540e95d
  4129dc:	cmp    cl,ah
  4129de:	(bad)  
  4129df:	aam    0xda
  4129e1:	popa   
  4129e2:	inc    ebp
  4129e3:	scas   eax,DWORD PTR es:[edi]
  4129e4:	les    esi,FWORD PTR [edx+ecx*1-0x45]
  4129e8:	clc    
  4129e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ea:	jns    0x412a26
  4129ec:	pusha  
  4129ed:	icebp  
  4129ee:	lods   al,BYTE PTR ds:[esi]
  4129ef:	pop    ds
  4129f0:	lea    esi,[edi-0x33]
  4129f3:	sti    
  4129f4:	dec    ax
  4129f6:	fadd   QWORD PTR [ebx-0x5e]
  4129f9:	xchg   esp,edi
  4129fb:	and    bh,BYTE PTR [ecx+0x1276f88d]
  412a01:	pusha  
  412a02:	mov    cs:0x95979bd8,eax
  412a08:	xor    ebp,DWORD PTR [ebp-0x62626446]
  412a0e:	pop    eax
  412a0f:	sbb    eax,0x5262e6f1
  412a14:	fwait
  412a15:	icebp  
  412a16:	jnp    0x412a87
  412a18:	aam    0xc9
  412a1a:	lahf   
  412a1b:	addr16 push 0xffffffd8
  412a1e:	xchg   esp,eax
  412a1f:	jo     0x412a91
  412a21:	sub    edx,DWORD PTR [ebx]
  412a23:	dec    ebx
  412a24:	loope  0x4129fd
  412a26:	mov    ch,0x77
  412a28:	jge    0x412a84
  412a2a:	(bad)  
  412a2b:	sti    
  412a2c:	or     BYTE PTR [ebx+0x5d],bl
  412a2f:	dec    esp
  412a30:	pop    edi
  412a31:	and    esp,eax
  412a33:	nop
  412a34:	rcl    bh,0x5e
  412a37:	(bad)  
  412a38:	and    BYTE PTR [esi-0x15],cl
  412a3b:	ja     0x4129d7
  412a3d:	hlt    
  412a3e:	sbb    al,0xa
  412a40:	dec    esi
  412a41:	mov    dh,0xc6
  412a43:	push   ds
  412a44:	daa    
  412a45:	mov    dh,BYTE PTR [ebx-0x1f]
  412a48:	and    cl,cl
  412a4a:	and    esi,DWORD PTR [ecx-0x5474a4f7]
  412a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a51:	xor    bl,BYTE PTR [ebx+0x47]
  412a54:	movhps QWORD PTR [ecx+eax*8-0x49c63af9],xmm4
  412a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a5d:	pop    ebp
  412a5e:	hlt    
  412a5f:	lahf   
  412a60:	or     eax,DWORD PTR [edi-0x561a1308]
  412a66:	cld    
  412a67:	mov    WORD PTR [ecx-0x63],?
  412a6a:	jno    0x412a3e
  412a6c:	push   cs
  412a6d:	push   0xffffffe8
  412a6f:	jmp    0x412a27
  412a71:	pop    ecx
  412a72:	push   0xffffffeb
  412a74:	rol    DWORD PTR [eax-0x64],0x58
  412a78:	xor    eax,0xe0e805a3
  412a7d:	sahf   
  412a7e:	fsub   QWORD PTR [ebx+0x78]
  412a81:	retf   
  412a82:	(bad)  
  412a83:	push   esi
  412a84:	dec    ebx
  412a85:	mov    ebp,0xdc133946
  412a8a:	jnp    0x412ac6
  412a8c:	dec    edi
  412a8d:	add    dl,ah
  412a8f:	inc    edi
  412a90:	rcr    ch,1
  412a92:	mov    cl,0x47
  412a94:	jg     0x412a19
  412a96:	mov    WORD PTR [edx+edi*8+0x41],cs
  412a9a:	in     al,0x83
  412a9c:	jle    0x412b18
  412a9e:	sub    eax,0x2e296eba
  412aa3:	mov    esp,0xd598a9f8
  412aa8:	pop    esi
  412aa9:	test   al,0x10
  412aab:	xor    DWORD PTR [edx+ecx*2+0x2b696c30],0x2b7d6e3e
  412ab6:	ja     0x412a44
  412ab8:	in     eax,dx
  412ab9:	jmp    0x412ae2
  412abb:	adc    al,0x3e
  412abd:	js     0x412ae9
  412abf:	inc    ecx
  412ac0:	pop    ss
  412ac1:	inc    ebp
  412ac2:	mov    ah,0x35
  412ac4:	call   DWORD PTR [ecx+0x1]
  412ac7:	retf   
  412ac8:	mov    esi,0xf6d90e97
  412acd:	sub    al,BYTE PTR [ecx-0x29a34dd0]
  412ad3:	sbb    cl,ch
  412ad5:	dec    ebp
  412ad6:	lods   eax,DWORD PTR ds:[esi]
  412ad7:	dec    esp
  412ad8:	test   ch,ch
  412ada:	outs   dx,DWORD PTR ds:[esi]
  412adb:	mov    al,ds:0x98dffbec
  412ae0:	dec    ecx
  412ae1:	cmp    cl,BYTE PTR [esi-0x2d]
  412ae4:	xor    bh,cl
  412ae6:	hlt    
  412ae7:	xor    eax,0x46143cc8
  412aec:	xor    BYTE PTR [esi+0x5d],dh
  412aef:	dec    ecx
  412af0:	jl     0x412b67
  412af2:	ss retf 0x618f
  412af6:	xchg   ebx,eax
  412af7:	push   es
  412af8:	inc    esi
  412af9:	pop    DWORD PTR [edx]
  412afb:	mov    esi,0x96b44760
  412b00:	js     0x412b04
  412b02:	cli    
  412b03:	scas   al,BYTE PTR es:[edi]
  412b04:	sbb    ah,ah
  412b06:	out    dx,eax
  412b07:	mov    edi,0x1af574a7
  412b0c:	(bad)  
  412b0d:	jbe    0x412ae8
  412b0f:	and    al,BYTE PTR gs:[esi+0x33749598]
  412b16:	sub    al,dl
  412b18:	aam    0x4c
  412b1a:	lea    ebp,[edi-0x43]
  412b1d:	gs or  eax,0x4af03c77
  412b23:	sbb    BYTE PTR [ebx+0x3cb309d1],0xc5
  412b2a:	clc    
  412b2b:	jg     0x412b5a
  412b2d:	mov    ebx,0x94b25a68
  412b32:	stos   BYTE PTR es:[edi],al
  412b33:	pop    ss
  412b34:	push   0x94de686d
  412b39:	shl    BYTE PTR [ecx+0x3f558b2],1
  412b3f:	xor    ch,dh
  412b41:	pop    esi
  412b42:	jmp    0x412b1e
  412b44:	xor    ebx,edi
  412b46:	mov    bl,0xdb
  412b48:	add    BYTE PTR [edx-0x4bc6971f],0x89
  412b4f:	loopne 0x412b8b
  412b51:	pop    eax
  412b52:	and    eax,0xd75cdde5
  412b57:	xor    DWORD PTR [ecx+0x79],0xffffffca
  412b5b:	jmp    0xfa12:0xe8275101
  412b62:	ds iret 
  412b64:	pop    es
  412b65:	pop    ss
  412b66:	xlat   BYTE PTR ds:[ebx]
  412b67:	mov    bh,0x20
  412b69:	xchg   esi,eax
  412b6a:	stos   DWORD PTR es:[edi],eax
  412b6b:	push   ecx
  412b6c:	ret    
  412b6d:	lahf   
  412b6e:	in     eax,dx
  412b6f:	mov    gs,WORD PTR [eax]
  412b71:	jmp    0x412b4d
  412b73:	arpl   WORD PTR [edx+0x5c],ax
  412b76:	or     bl,BYTE PTR [eax-0x70]
  412b79:	lods   eax,DWORD PTR ds:[esi]
  412b7a:	xor    DWORD PTR [ebx+0x43],edi
  412b7d:	gs js  0x412b96
  412b80:	lea    edx,[ebp-0x73fa9f8d]
  412b86:	xor    eax,0xab0b09e2
  412b8b:	inc    eax
  412b8c:	cmc    
  412b8d:	xrelease mov BYTE PTR [edi],dl
  412b90:	xor    ebp,DWORD PTR [edi-0x22ff3927]
  412b96:	mov    esp,0x2f93aee1
  412b9b:	cmp    eax,0x904d40de
  412ba0:	ins    DWORD PTR es:[edi],dx
  412ba1:	adc    DWORD PTR [ebx+0x784b40b7],esi
  412ba7:	jb     0x412b86
  412ba9:	cmp    BYTE PTR [ebp+0x1289e4e1],dl
  412baf:	shl    DWORD PTR ds:0x21901555,1
  412bb5:	cmc    
  412bb6:	jmp    0xe8378c60
  412bbb:	pusha  
  412bbc:	idiv   DWORD PTR [ebx-0x2e0e4036]
  412bc2:	sbb    BYTE PTR [edi+0x2e],cl
  412bc5:	retf   0x24a5
  412bc8:	adc    dl,BYTE PTR [eax+eiz*8+0x3aa5c310]
  412bcf:	loopne 0x412b9a
  412bd1:	aaa    
  412bd2:	and    al,BYTE PTR [esi+0x1911ac2e]
  412bd8:	lock sub eax,0xf02f85b1
  412bde:	xchg   cl,ch
  412be0:	cs out dx,al
  412be2:	out    0xee,eax
  412be4:	mov    ch,0x63
  412be6:	or     DWORD PTR [edx+0x2c449d78],ecx
  412bec:	pop    ds
  412bed:	in     eax,dx
  412bee:	push   esp
  412bef:	popa   
  412bf0:	scas   al,BYTE PTR es:[edi]
  412bf1:	(bad)  
  412bf3:	daa    
  412bf4:	fnstsw WORD PTR [edi-0x1c]
  412bf7:	outs   dx,BYTE PTR ds:[esi]
  412bf8:	sub    eax,0xa4c1ea60
  412bfd:	rol    DWORD PTR [ebx],1
  412bff:	call   0xa02f7159
  412c04:	aad    0xb7
  412c06:	jno    0x412c5e
  412c08:	inc    esi
  412c09:	int    0x55
  412c0b:	jecxz  0x412c55
  412c0d:	shl    BYTE PTR [eax+0x51],0x64
  412c11:	jmp    0xc513:0x9d7fcf46
  412c18:	nop
  412c19:	or     bl,0x34
  412c1c:	dec    ecx
  412c1d:	mov    ecx,0xd9c11335
  412c22:	mov    ebp,DWORD PTR [ebx]
  412c24:	js     0x412bd7
  412c26:	(bad)  
  412c27:	mov    dl,BYTE PTR [eax+0x39]
  412c2a:	add    dl,dl
  412c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c2d:	pop    ecx
  412c2e:	push   eax
  412c2f:	pop    ebx
  412c30:	mov    bh,BYTE PTR [ecx]
  412c32:	mul    DWORD PTR [ebx-0x202823cb]
  412c38:	xchg   BYTE PTR [edi-0x1e],ch
  412c3b:	push   ebp
  412c3c:	ins    DWORD PTR es:[edi],dx
  412c3d:	mov    esi,0x4306d7e9
  412c42:	int    0xd8
  412c44:	jns    0x412c55
  412c46:	cmc    
  412c47:	inc    ebx
  412c48:	pop    ss
  412c49:	jmp    0x40a86f59
  412c4e:	jb     0x412c10
  412c50:	mov    ah,0x9e
  412c52:	test   BYTE PTR [edi],0x45
  412c55:	cdq    
  412c56:	ror    DWORD PTR [ebp-0x29],0x0
  412c5a:	je     0x412cb7
  412c5c:	adc    DWORD PTR [ebx-0x55ace9d3],esi
  412c62:	das    
  412c63:	xchg   ecx,eax
  412c64:	stos   BYTE PTR es:[edi],al
  412c65:	push   ss
  412c66:	js     0x412c3c
  412c68:	mov    dl,0xe6
  412c6a:	jmp    0x329b:0x703e4d65
  412c71:	or     ebx,DWORD PTR ds:0xe5522fe8
  412c77:	scas   al,BYTE PTR es:[edi]
  412c78:	adc    eax,0x41412e1b
  412c7d:	xchg   esp,eax
  412c7e:	imul   eax,DWORD PTR [edi-0x4e],0xffffffda
  412c82:	pop    eax
  412c83:	xchg   bx,ax
  412c85:	jo     0x412c43
  412c87:	sbb    bh,BYTE PTR ds:0x923d7583
  412c8d:	(bad)  
  412c8e:	or     al,0x97
  412c90:	es cs sub dl,al
  412c94:	sub    DWORD PTR [eax-0x33ad71d5],ebp
  412c9a:	mov    al,ds:0xd19db6e4
  412c9f:	push   0x48
  412ca1:	shr    BYTE PTR [ebx+0x46c17cce],cl
  412ca7:	and    eax,DWORD PTR [esi+0x43a95354]
  412cad:	repnz mov bh,0xa3
  412cb0:	and    bl,BYTE PTR [eax+0x22a6904d]
  412cb6:	sbb    al,0x88
  412cb8:	sbb    al,0x4b
  412cba:	cmp    eax,0x14d273d4
  412cbf:	xor    al,ch
  412cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc2:	push   0xffffffa0
  412cc4:	lods   eax,DWORD PTR ds:[esi]
  412cc5:	lds    ebx,FWORD PTR [edi]
  412cc7:	int    0x9b
  412cc9:	pop    ecx
  412cca:	or     eax,0xfa74293e
  412ccf:	add    al,BYTE PTR [edx+0x71]
  412cd2:	xor    BYTE PTR [ebx+0x58a785a1],bh
  412cd8:	je     0x412d4b
  412cda:	in     eax,dx
  412cdb:	idiv   DWORD PTR [ebp+0x276125c1]
  412ce1:	push   0xffffffdd
  412ce3:	bound  ecx,QWORD PTR [ebx-0x7e]
  412ce6:	mul    DWORD PTR [esi-0x7e]
  412ce9:	(bad)  
  412cea:	jbe    0x412cc1
  412cec:	int    0x46
  412cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cef:	push   ss
  412cf0:	icebp  
  412cf1:	gs (bad) 
  412cf3:	xchg   ebx,eax
  412cf4:	test   eax,0xb0dea4f2
  412cf9:	add    esp,DWORD PTR [ebx-0x1c1672db]
  412cff:	jae    0x412cab
  412d01:	(bad)  
  412d02:	pop    eax
  412d03:	test   BYTE PTR [ebp-0x3ee5cfc2],dl
  412d09:	mov    ds:0xb7da1737,eax
  412d0e:	mov    edi,0xafeb6e7f
  412d13:	test   eax,0xf043b0af
  412d18:	mov    al,0x1a
  412d1a:	loopne 0x412d60
  412d1c:	cld    
  412d1d:	dec    esi
  412d1e:	sar    DWORD PTR [ecx-0x25],0xaf
  412d22:	jae    0x412d70
  412d24:	adc    dl,BYTE PTR [edi]
  412d26:	repnz mov ds:0x68793669,eax
  412d2c:	das    
  412d2d:	repz out dx,al
  412d2f:	jno    0x412cb4
  412d31:	retf   0xa618
  412d34:	in     al,dx
  412d35:	jno    0x412d9d
  412d37:	lds    ebx,FWORD PTR [eax]
  412d39:	mov    dh,BYTE PTR ds:0xdfa954e
  412d3f:	jbe    0x412d5b
  412d41:	sub    dl,BYTE PTR [eax]
  412d43:	mov    ebx,0x6d09d628
  412d48:	aaa    
  412d49:	test   DWORD PTR [ebp+0x1e],0x2a64321c
  412d50:	nop
  412d51:	mov    esp,0xf296e173
  412d56:	hlt    
  412d57:	xor    al,0x8b
  412d59:	sbb    cl,BYTE PTR [edx+esi*4+0x26]
  412d5d:	inc    eax
  412d5e:	inc    esp
  412d5f:	jne    0x412d6e
  412d61:	inc    edx
  412d62:	add    eax,0xa09edea8
  412d67:	ss (bad) 
  412d69:	loopne 0x412d0d
  412d6b:	mov    bh,0xc5
  412d6d:	adc    DWORD PTR [ebx],esi
  412d6f:	and    bp,dx
  412d72:	mov    edx,0xb7f20e3d
  412d77:	lahf   
  412d78:	or     cl,0x76
  412d7b:	xchg   esi,eax
  412d7c:	mov    al,ds:0x63c18865
  412d81:	inc    esp
  412d82:	cli    
  412d83:	or     dh,BYTE PTR [ebx]
  412d85:	or     al,0x88
  412d87:	mov    al,ds:0x319cf305
  412d8c:	lahf   
  412d8d:	add    DWORD PTR [esi+0x45],ebp
  412d90:	inc    ecx
  412d91:	pop    ebx
  412d92:	add    eax,0xfa58e8c8
  412d97:	jecxz  0x412d89
  412d99:	lods   eax,DWORD PTR ds:[esi]
  412d9a:	mov    dh,0x69
  412d9c:	ja     0x412d77
  412d9e:	loop   0x412d71
  412da0:	or     edi,DWORD PTR [edx+0x1b]
  412da3:	sub    edx,DWORD PTR [edi-0x2da5d76]
  412da9:	or     edi,esi
  412dab:	add    eax,eax
  412dad:	or     cl,ah
  412daf:	in     al,dx
  412db0:	test   eax,0x7635d94a
  412db5:	and    BYTE PTR [ecx+ecx*4-0x2f3d7f58],bl
  412dbc:	jns    0x412d4d
  412dbe:	xchg   ebx,eax
  412dbf:	lock pop edi
  412dc1:	xchg   ebx,eax
  412dc2:	test   BYTE PTR [ebx+0x18],dh
  412dc5:	add    ebp,DWORD PTR [edi+edx*4-0x37]
  412dc9:	adc    BYTE PTR [edi+0x64],ch
  412dcc:	stc    
  412dcd:	repnz shl DWORD PTR [eax+ebx*4-0x61],cl
  412dd2:	cmp    cl,BYTE PTR [esi]
  412dd4:	hlt    
  412dd5:	xor    esp,ebp
  412dd7:	adc    BYTE PTR [esi+0x3a],ah
  412dda:	sub    eax,0xf4821a2f
  412ddf:	xchg   esi,eax
  412de0:	lods   al,BYTE PTR ds:[esi]
  412de1:	or     al,0xc6
  412de3:	and    ecx,DWORD PTR [eax]
  412de5:	into   
  412de6:	sub    DWORD PTR [ecx],esi
  412de8:	fs inc edi
  412dea:	int    0x29
  412dec:	push   esi
  412ded:	push   esi
  412dee:	sti    
  412def:	bound  eax,QWORD PTR [edi+0x3b]
  412df2:	call   0xd0aa:0x35469020
  412df9:	int3   
  412dfa:	sbb    al,0x63
  412dfc:	call   0x963ee1e1
  412e01:	jno    0x412e4d
  412e03:	add    bl,BYTE PTR ds:0xcc6da93b
  412e09:	ret    0xb125
  412e0c:	inc    eax
  412e0d:	stos   DWORD PTR es:[edi],eax
  412e0e:	in     eax,0xc0
  412e10:	push   esi
  412e11:	and    BYTE PTR [esi+0x4e],cl
  412e14:	jno    0x412e78
  412e16:	push   ecx
  412e17:	cmp    al,0x0
  412e19:	mov    edi,0x642da725
  412e1e:	mul    ah
  412e20:	and    al,0xf3
  412e22:	repnz adc eax,0xb21207e8
  412e28:	clc    
  412e29:	jp     0x412e01
  412e2b:	rol    BYTE PTR [ecx+0x1d4206b4],cl
  412e31:	retf   
  412e32:	out    0x16,al
  412e34:	lds    edi,FWORD PTR [esi]
  412e36:	lock scas eax,DWORD PTR es:[edi]
  412e38:	jne    0x412e5b
  412e3a:	out    0xe8,al
  412e3c:	shr    DWORD PTR [ebp+0x602929bc],0x1c
  412e43:	and    DWORD PTR [eax+0x4f49b358],0xffffffc4
  412e4a:	inc    ebp
  412e4b:	leave  
  412e4c:	cwde   
  412e4d:	jmp    0xae5d4d4d
  412e52:	lahf   
  412e53:	nop
  412e54:	call   0x2406:0x7d3937e0
  412e5b:	test   al,0xaa
  412e5d:	jmp    0x991c5a2a
  412e62:	inc    edx
  412e63:	adc    dl,BYTE PTR [ebx+0x34]
  412e66:	and    cl,BYTE PTR [edi-0x4a]
  412e69:	loop   0x412e02
  412e6b:	jnp    0x412ea8
  412e6d:	stos   DWORD PTR es:[edi],eax
  412e6e:	push   esp
  412e6f:	adc    DWORD PTR [edi-0xd],edx
  412e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e73:	pop    ecx
  412e74:	inc    esi
  412e75:	ret    0xd7b7
  412e78:	lahf   
  412e79:	push   ss
  412e7a:	dec    BYTE PTR [ebp-0x11e3afab]
  412e80:	retf   
  412e81:	ficom  DWORD PTR [ebx]
  412e83:	out    0x1e,eax
  412e85:	ficom  DWORD PTR [esi-0x135986f]
  412e8b:	mov    al,0xd4
  412e8d:	stc    
  412e8e:	adc    esi,DWORD PTR [ecx]
  412e90:	adc    al,0x31
  412e92:	mov    WORD PTR [ecx-0x7dbc394d],ds
  412e98:	jmp    0x412e3c
  412e9a:	jmp    0x412e50
  412e9c:	cmp    BYTE PTR [edx+0x22bc633e],cl
  412ea2:	sbb    bl,BYTE PTR [edi]
  412ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea5:	add    dh,BYTE PTR [ebp+0x22942511]
  412eab:	adc    eax,0x6af5af4b
  412eb0:	add    edx,DWORD PTR [edx]
  412eb2:	mov    ds:0x1bfb2fb,al
  412eb7:	push   ds
  412eb8:	sub    eax,0xe9d39f2f
  412ebd:	and    eax,0xda1148cd
  412ec2:	inc    esi
  412ec3:	cdq    
  412ec4:	inc    ebx
  412ec5:	mov    BYTE PTR [ebp+0x67],dl
  412ec8:	fcom   DWORD PTR [eax-0x1ff1b22a]
  412ece:	repnz hlt 
  412ed0:	adc    ecx,edi
  412ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed3:	mov    ax,WORD PTR [edx-0x7]
  412ed7:	sub    eax,0x8e54d4ad
  412edc:	push   es
  412edd:	arpl   WORD PTR [ebp+0x21b4d97b],bp
  412ee3:	(bad)  
  412ee4:	fwait
  412ee5:	ret    
  412ee6:	dec    edx
  412ee7:	mov    ds:0xe6b008d5,eax
  412eec:	mov    ebp,0x92e7b118
  412ef1:	jl     0x412eba
  412ef3:	add    edi,DWORD PTR [edi+edx*1]
  412ef6:	gs out dx,eax
  412ef8:	cmp    ecx,edx
  412efa:	cmp    BYTE PTR [edi],0xc8
  412efd:	pop    ebx
  412efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eff:	dec    ebp
  412f00:	mov    BYTE PTR ds:0x66f3df3d,dh
  412f06:	xchg   esi,eax
  412f07:	cld    
  412f08:	xchg   esi,eax
  412f09:	std    
  412f0a:	stos   BYTE PTR es:[edi],al
  412f0b:	cs inc eax
  412f0d:	mov    bh,0xb6
  412f0f:	jb     0x412f59
  412f11:	mov    dh,0x25
  412f13:	fst    DWORD PTR [edx]
  412f15:	add    eax,0x28bc5f0c
  412f1a:	out    0x89,eax
  412f1c:	dec    edx
  412f1d:	fidiv  DWORD PTR [esi+0x695986de]
  412f23:	fnstcw WORD PTR [edi-0x28]
  412f26:	pop    esp
  412f27:	inc    edi
  412f28:	add    DWORD PTR [ebx],edi
  412f2a:	add    esp,edi
  412f2c:	(bad)  
  412f2d:	fiadd  WORD PTR [edi]
  412f2f:	mov    ebx,0x5f1b2fa0
  412f34:	scas   al,BYTE PTR es:[edi]
  412f35:	or     eax,0xdc78a65c
  412f3a:	jecxz  0x412f78
  412f3c:	loopne 0x412f86
  412f3e:	inc    esp
  412f3f:	dec    DWORD PTR [ecx+0x18]
  412f42:	dec    edi
  412f43:	outs   dx,DWORD PTR ds:[esi]
  412f44:	push   edi
  412f45:	pop    esp
  412f46:	shr    DWORD PTR [esi-0x66adf6a5],1
  412f4c:	mov    bl,0x37
  412f4e:	int    0xbd
  412f50:	pop    ds
  412f51:	mov    WORD PTR [ebx+0x60],?
  412f54:	cmp    al,BYTE PTR [ecx+ecx*8-0x354a98a4]
  412f5b:	push   es
  412f5c:	push   edi
  412f5d:	out    0xb3,al
  412f5f:	idiv   bl
  412f61:	lock hlt 
  412f63:	(bad)  
  412f64:	adc    al,al
  412f66:	push   ebp
  412f67:	cmc    
  412f68:	fisub  WORD PTR [edi]
  412f6a:	sti    
  412f6b:	fistp  WORD PTR [ebp-0xec9fd41]
  412f71:	aad    0x10
  412f73:	add    DWORD PTR [edi*1-0x3d730bfc],ebp
  412f7a:	sahf   
  412f7b:	mov    ebp,0x41ff0b6d
  412f80:	(bad)  
  412f81:	pop    ebx
  412f82:	jle    0x412ffe
  412f84:	pop    es
  412f85:	sbb    eax,0x1d0ffbb
  412f8a:	sub    eax,0x82378ab2
  412f8f:	lods   eax,DWORD PTR ds:[esi]
  412f90:	ret    
  412f91:	loop   0x412f7c
  412f93:	cmp    ecx,DWORD PTR [edi-0x4d6422aa]
  412f99:	push   ss
  412f9a:	shl    BYTE PTR [ebp-0x53],1
  412f9d:	pop    ds
  412f9e:	sub    al,0xe2
  412fa0:	and    dl,BYTE PTR [ebx+0x2d4bb55a]
  412fa6:	jmp    0x412fe0
  412fa8:	dec    ebp
  412fa9:	xor    al,BYTE PTR [esi]
  412fab:	test   BYTE PTR [edi+0x227704f9],cl
  412fb1:	mov    esp,0xa0ee5417
  412fb6:	xchg   esp,eax
  412fb7:	xor    DWORD PTR [ebp+0x50],0x67
  412fbb:	or     BYTE PTR [ebx],al
  412fbd:	and    dl,BYTE PTR [ebx-0x64]
  412fc0:	fst    DWORD PTR [esi-0x2b]
  412fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc4:	sti    
  412fc5:	push   edx
  412fc6:	mov    ebp,0xbbf8fa94
  412fcb:	div    DWORD PTR [eax+0x7a]
  412fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fcf:	xor    al,ch
  412fd1:	cmp    eax,0xb5ba40f3
  412fd6:	xchg   bh,bh
  412fd8:	mov    ch,0xa
  412fda:	add    BYTE PTR [eax+0x3be748a9],ch
  412fe0:	sub    esp,DWORD PTR [edi-0x6]
  412fe3:	outs   dx,BYTE PTR ds:[esi]
  412fe4:	jae    0x413058
  412fe6:	push   esp
  412fe7:	adc    eax,0x2706bfe4
  412fec:	daa    
  412fed:	dec    ecx
  412fee:	jo     0x413030
  412ff0:	and    BYTE PTR [edi],0xe0
  412ff3:	bound  esp,QWORD PTR [ebx+edi*8]
  412ff6:	out    dx,al
  412ff7:	add    esp,ebp
  412ff9:	and    eax,0xf8d61d6a
  412ffe:	xor    dh,BYTE PTR [ecx]
  413000:	xor    ebp,DWORD PTR [ecx+0x6b]
  413003:	xlat   BYTE PTR ds:[ebx]
  413004:	test   al,0x86
  413006:	push   esi
  413007:	dec    ecx
  413008:	mov    al,ds:0x473b86f8
  41300d:	sbb    bl,dh
  41300f:	in     al,0x55
  413011:	cmp    eax,DWORD PTR ds:0xc12315b7
  413017:	addr16 mov eax,0xdd19f3ae
  41301d:	cmp    eax,0x4fa1e745
  413022:	mov    ds:0xba143c5d,al
  413027:	push   es
  413028:	or     bh,BYTE PTR [edx+0x3388227]
  41302e:	sub    ebx,DWORD PTR [ebp-0x53]
  413031:	out    dx,eax
  413032:	fild   DWORD PTR [ebx]
  413034:	pop    ecx
  413035:	jecxz  0x413043
  413037:	rol    BYTE PTR [esi],0xbe
  41303a:	add    cl,ch
  41303c:	mov    bh,0x8f
  41303e:	pusha  
  41303f:	(bad)  
  413040:	(bad)  
  413041:	js     0x412fd2
  413043:	cdq    
  413044:	push   ds
  413045:	mov    ah,0x6d
  413047:	into   
  413048:	dec    ebp
  413049:	nop
  41304a:	xchg   bl,dh
  41304c:	test   BYTE PTR [ecx+edx*4+0x39],cl
  413050:	mov    bl,cl
  413052:	(bad)  
  413053:	jmp    0xed05:0xe1550a18
  41305a:	(bad)  
  41305b:	pop    esp
  41305c:	out    dx,al
  41305d:	push   eax
  41305e:	fisttp DWORD PTR [eax]
  413060:	(bad)  
  413061:	cld    
  413062:	int    0xd1
  413064:	xor    cl,BYTE PTR [esi+0x4b]
  413067:	js     0x41307f
  413069:	ins    DWORD PTR es:[edi],dx
  41306a:	scas   al,BYTE PTR es:[edi]
  41306b:	cmp    eax,0xe313bb88
  413070:	mov    eax,ds:0x6105d65b
  413075:	pushf  
  413076:	cmp    eax,0x40886441
  41307b:	or     bh,bh
  41307d:	and    ah,BYTE PTR [edi+0x50f00f8b]
  413083:	dec    ecx
  413084:	in     eax,dx
  413085:	cli    
  413086:	mov    WORD PTR [esi+0x7],fs
  413089:	daa    
  41308a:	dec    eax
  41308b:	(bad)
  41308e:	sub    al,0x1d
  413090:	out    dx,al
  413091:	mov    esi,0x6f183da9
  413096:	xor    ch,BYTE PTR [edi+0x54]
  413099:	fnstsw WORD PTR [edi]
  41309b:	daa    
  41309c:	stos   DWORD PTR es:[edi],eax
  41309d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309e:	dec    eax
  41309f:	xchg   edi,eax
  4130a0:	hlt    
  4130a1:	fistp  DWORD PTR [ebx+0x6edd6d6b]
  4130a7:	xchg   esp,eax
  4130a8:	push   0xf5947b01
  4130ad:	mov    esi,0xd9e4ceb9
  4130b2:	ss test eax,0x61ea2844
  4130b8:	inc    ebp
  4130b9:	xchg   esi,eax
  4130ba:	lods   eax,DWORD PTR ds:[esi]
  4130bb:	dec    esi
  4130bc:	in     al,dx
  4130bd:	add    eax,0x75d75d1c
  4130c2:	push   ecx
  4130c3:	add    esp,DWORD PTR [ecx]
  4130c5:	jno    0x413105
  4130c7:	mov    ebp,DWORD PTR [edx+eiz*4-0x51]
  4130cb:	jae    0x4130c7
  4130cd:	sbb    al,0x1a
  4130cf:	in     al,0x89
  4130d1:	fdiv   DWORD PTR [edx]
  4130d3:	ror    DWORD PTR [ecx-0x6c6a7fff],cl
  4130d9:	xchg   ebx,eax
  4130da:	xor    bl,bl
  4130dc:	sub    eax,0x2bd281eb
  4130e1:	pushf  
  4130e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e3:	(bad)  
  4130e4:	pop    ds
  4130e5:	mov    edx,0xe3bc3bcb
  4130ea:	mov    BYTE PTR [ebp-0x62be4588],0xd9
  4130f1:	sti    
  4130f2:	leave  
  4130f3:	xchg   edx,eax
  4130f4:	sbb    ecx,edi
  4130f6:	fistp  DWORD PTR [ebp-0x611696eb]
  4130fc:	push   ebp
  4130fd:	sbb    BYTE PTR [eax-0x1f03350d],dl
  413103:	das    
  413104:	and    al,0xc3
  413106:	inc    ebx
  413107:	sub    bl,BYTE PTR [esi+edx*2]
  41310a:	jo     0x413103
  41310c:	outs   dx,BYTE PTR ds:[esi]
  41310d:	fbld   TBYTE PTR [esi]
  41310f:	ja     0x413175
  413111:	loopne 0x413094
  413113:	out    0x5e,al
  413115:	clc    
  413116:	mov    DWORD PTR [edi-0x45],0xe021ef41
  41311d:	and    BYTE PTR [ebx+ebp*8-0x169472c2],bh
  413124:	pop    ebx
  413125:	dec    edx
  413126:	pop    es
  413127:	out    0x53,al
  413129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312a:	mov    ds:0x69580669,eax
  41312f:	mov    cl,0x61
  413131:	retf   
  413132:	dec    esi
  413133:	shl    dh,1
  413135:	int3   
  413136:	pop    ebp
  413137:	or     eax,0xea1dfa31
  41313c:	jae    0x413182
  41313e:	repnz push esp
  413140:	(bad)  
  413142:	rol    dl,1
  413144:	loope  0x4131ad
  413146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413147:	xor    bl,BYTE PTR [ebx]
  413149:	sub    BYTE PTR [ebx-0x43],0x8b
  41314d:	jl     0x41317e
  41314f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413150:	mov    ecx,0xc1d4750d
  413155:	dec    esp
  413156:	out    dx,al
  413157:	pusha  
  413158:	dec    ebx
  413159:	mov    eax,0x1590383e
  41315e:	test   dl,cl
  413160:	neg    DWORD PTR [eax-0x7b763257]
  413166:	hlt    
  413167:	lahf   
  413168:	cmc    
  413169:	sbb    BYTE PTR [eax+esi*1],dh
  41316c:	xchg   ebp,eax
  41316d:	pusha  
  41316e:	and    DWORD PTR [ebx],edx
  413170:	inc    ecx
  413171:	sub    dh,0x6
  413174:	stos   BYTE PTR es:[edi],al
  413175:	test   al,0x7a
  413177:	and    eax,0x40b1cc4e
  41317c:	add    eax,0x8cd7f03d
  413181:	adc    ebp,DWORD PTR [ebp+0x4b]
  413184:	mov    edi,0x26744770
  413189:	xchg   BYTE PTR [edi],bh
  41318b:	loop   0x413188
  41318d:	fisttp DWORD PTR [edx+0x4b]
  413190:	dec    ebx
  413191:	mov    eax,0x1b61aac6
  413196:	sub    BYTE PTR [eax-0x302f478c],0x40
  41319d:	nop
  41319e:	inc    ecx
  41319f:	and    esp,edi
  4131a1:	xchg   edi,eax
  4131a2:	mov    ch,0x41
  4131a4:	pop    ecx
  4131a5:	gs js  0x41313c
  4131a8:	xchg   ecx,eax
  4131a9:	pop    esp
  4131aa:	sahf   
  4131ab:	nop
  4131ac:	mov    cl,0xd2
  4131ae:	outs   dx,BYTE PTR ds:[esi]
  4131af:	mulps  xmm7,xmm5
  4131b2:	jb     0x41319c
  4131b4:	and    al,0xc8
  4131b6:	retf   0x3902
  4131b9:	adc    eax,0x7561695
  4131be:	push   ds
  4131bf:	sti    
  4131c0:	stc    
  4131c1:	(bad)  
  4131c4:	(bad)  
  4131c5:	or     BYTE PTR [esi+0x40ec2313],al
  4131cb:	loope  0x413218
  4131cd:	xchg   DWORD PTR [esi-0x7e],edi
  4131d0:	cmp    ch,BYTE PTR [edi+0x499e7491]
  4131d6:	xor    al,0x98
  4131d8:	std    
  4131d9:	jmp    0x413242
  4131db:	mov    ecx,0x3fe925e0
  4131e0:	xor    al,BYTE PTR [edx-0x49a77eb6]
  4131e6:	and    bl,BYTE PTR [edx+0x564fbf39]
  4131ec:	retf   
  4131ed:	push   edx
  4131ee:	retf   
  4131ef:	push   ss
  4131f0:	call   0xf7c9:0x7d4fac89
  4131f7:	xchg   ecx,eax
  4131f8:	inc    ebx
  4131f9:	sbb    ebx,DWORD PTR [ebp+0x6d]
  4131fc:	and    eax,0x99981f2d
  413201:	into   
  413202:	loopne 0x4131cf
  413204:	jmp    0x41325e
  413206:	fwait
  413207:	jmp    0x413212
  413209:	dec    edx
  41320a:	mov    dl,0xc1
  41320c:	jns    0x4131db
  41320e:	in     eax,dx
  41320f:	lods   eax,DWORD PTR ds:[esi]
  413210:	stc    
  413211:	jnp    0x4131f7
  413213:	mov    dh,0xcd
  413215:	outs   dx,DWORD PTR ds:[esi]
  413216:	(bad)  
  413218:	dec    esp
  413219:	inc    esp
  41321a:	call   0x49d8:0x19e3cdf3
  413221:	outs   dx,BYTE PTR ds:[esi]
  413222:	mov    edx,0x3b385981
  413227:	mov    bl,0x5
  413229:	xchg   edx,eax
  41322a:	adc    BYTE PTR [esi+0x79f89e97],dl
  413230:	push   ss
  413231:	loopne 0x413297
  413233:	dec    ecx
  413234:	add    al,0xe0
  413236:	cmp    cl,dl
  413238:	jl     0x4131d2
  41323a:	push   0x5c20ac26
  41323f:	dec    edi
  413240:	ins    BYTE PTR es:[edi],dx
  413241:	and    al,0x4b
  413243:	std    
  413244:	mov    BYTE PTR [edi+0x4939768c],dl
  41324a:	push   esp
  41324b:	gs std 
  41324d:	in     eax,dx
  41324e:	inc    ecx
  41324f:	movd   DWORD PTR [edi],mm2
  413252:	cmp    eax,0x5912808f
  413257:	fwait
  413258:	jno    0x4132cb
  41325a:	(bad)  
  41325b:	jns    0x413274
  41325d:	mov    BYTE PTR [ecx-0x6b1be733],al
  413263:	popa   
  413264:	push   esp
  413265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413266:	fmul   QWORD PTR [ebx+0x3a852495]
  41326c:	pop    esp
  41326d:	jmp    0xc14a:0x97509421
  413274:	fcom   st(2)
  413276:	popf   
  413277:	mov    ch,0x9b
  413279:	or     eax,DWORD PTR [ebx]
  41327b:	cmp    al,0x78
  41327d:	jb     0x4132fd
  41327f:	mov    bl,0x4a
  413281:	push   ebx
  413282:	sbb    eax,0x7515db4e
  413287:	xchg   DWORD PTR [ebx-0x78],ebp
  41328a:	ins    BYTE PTR es:[edi],dx
  41328b:	aas    
  41328c:	test   BYTE PTR [ebp+0x55d55013],al
  413292:	inc    ebx
  413293:	push   ds
  413294:	mov    dh,0xa9
  413296:	xor    al,0xe8
  413298:	in     eax,dx
  413299:	in     al,dx
  41329a:	stos   BYTE PTR es:[edi],al
  41329b:	popa   
  41329c:	push   esi
  41329d:	mov    cl,0x96
  41329f:	sti    
  4132a0:	cs retf 
  4132a2:	adc    al,0x3e
  4132a4:	cwde   
  4132a5:	dec    edi
  4132a6:	xchg   edi,eax
  4132a7:	ror    DWORD PTR [edx+0x148bae],1
  4132ad:	mov    esp,0x8ea0d807
  4132b2:	pop    ss
  4132b3:	inc    edx
  4132b4:	leave  
  4132b5:	inc    esp
  4132b6:	ret    
  4132b7:	xor    dl,ah
  4132b9:	mov    ah,0x51
  4132bb:	xchg   esi,eax
  4132bc:	add    ebx,DWORD PTR [ebp+0x4246c12a]
  4132c2:	and    al,0xec
  4132c4:	es dec esi
  4132c6:	je     0x413333
  4132c8:	cmp    eax,esi
  4132ca:	stc    
  4132cb:	daa    
  4132cc:	ror    DWORD PTR [eax+0x39c53092],cl
  4132d2:	aaa    
  4132d3:	xor    ebx,esp
  4132d5:	adc    al,BYTE PTR [edi]
  4132d7:	imul   ecx,DWORD PTR [edx-0x80],0x61
  4132db:	adc    BYTE PTR [eax-0x96affeb],dl
  4132e1:	cli    
  4132e2:	mov    edx,0xe7d13528
  4132e7:	and    dl,BYTE PTR [esi]
  4132e9:	stos   DWORD PTR es:[edi],eax
  4132ea:	xor    eax,0xeeecafd9
  4132ef:	fdiv   st,st(6)
  4132f1:	push   0x5fbd1b1c
  4132f6:	js     0x413301
  4132f8:	mov    edi,0x7e0e1796
  4132fd:	retf   
  4132fe:	lock test al,0x24
  413301:	sub    dh,BYTE PTR [eax-0x1e9ce222]
  413307:	out    dx,al
  413308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413309:	push   0x9175c332
  41330e:	pop    esp
  41330f:	sar    cl,1
  413311:	xchg   edi,eax
  413312:	mov    ah,0x8f
  413314:	pop    edx
  413315:	out    0xd6,al
  413317:	pop    eax
  413318:	mov    edx,esi
  41331a:	mov    edi,0x67178a46
  41331f:	bound  esp,QWORD PTR ds:0xbc9c6064
  413325:	gs inc edx
  413327:	jl     0x41337e
  413329:	mov    cl,0x2f
  41332b:	or     al,0xd4
  41332d:	dec    eax
  41332e:	hlt    
  41332f:	dec    esp
  413330:	daa    
  413331:	add    BYTE PTR [eax],ch
  413333:	test   eax,0x93295248
  413338:	or     al,0x91
  41333a:	sar    DWORD PTR [ecx-0x78],0x7b
  41333e:	fiadd  DWORD PTR [edx+0x11598dab]
  413344:	jecxz  0x413315
  413346:	arpl   WORD PTR [ebp-0x2c],dx
  413349:	stos   DWORD PTR es:[edi],eax
  41334a:	or     eax,0x6294899
  41334f:	ret    
  413350:	sub    edx,edx
  413352:	sub    al,0x50
  413354:	xchg   ebp,eax
  413355:	add    BYTE PTR [edx+ebx*4-0x57],ah
  413359:	push   edi
  41335a:	fnstcw WORD PTR [edi+0x16370dac]
  413360:	rcr    BYTE PTR [ebx],1
  413362:	mov    ebp,0x45661bb7
  413367:	sub    BYTE PTR [edi+0x59],bl
  41336a:	imul   ecx,DWORD PTR [ecx+0x5a],0xcd6ca57
  413371:	call   DWORD PTR [ecx-0x16]
  413374:	jge    0x4133a0
  413376:	into   
  413377:	xchg   edx,ebx
  413379:	mov    dl,0xd
  41337b:	mov    esp,0x35d6ad52
  413380:	data16 fcomi st,st(5)
  413383:	sar    DWORD PTR [ecx-0x2866ef8e],0x1
  41338a:	or     BYTE PTR [edi+0x52eb91c8],0x22
  413391:	ret    
  413392:	push   es
  413393:	cwde   
  413394:	sub    DWORD PTR ds:0xb8ea21bf,eax
  41339a:	pop    sp
  41339c:	xor    eax,0xa574e1df
  4133a1:	scas   al,BYTE PTR es:[edi]
  4133a2:	sub    al,0x91
  4133a4:	pop    edx
  4133a5:	ret    0x5198
  4133a8:	dec    eax
  4133a9:	rcr    DWORD PTR es:[edi-0x61],0x50
  4133ae:	ficom  DWORD PTR [edx-0x3a]
  4133b1:	mov    cl,0x34
  4133b3:	mov    ah,0x2a
  4133b5:	pop    edi
  4133b6:	pushf  
  4133b7:	add    eax,0xa98bb50f
  4133bd:	shr    BYTE PTR [edi],1
  4133bf:	pusha  
  4133c0:	or     edi,DWORD PTR [ebp+0x527c1fc2]
  4133c6:	call   0x303c:0x301772ec
  4133cd:	inc    edx
  4133ce:	in     eax,0xfc
  4133d0:	pushf  
  4133d1:	call   0x9de1:0x82aa7ae3
  4133d8:	cld    
  4133d9:	(bad)  
  4133db:	sbb    eax,0xf1fc0497
  4133e0:	leave  
  4133e1:	dec    ebp
  4133e2:	mov    dh,0x9f
  4133e4:	sub    bl,BYTE PTR [ebx-0x73dd7170]
  4133ea:	iret   
  4133eb:	std    
  4133ec:	inc    ecx
  4133ed:	jge    0x41337a
  4133ef:	loope  0x41345d
  4133f1:	mul    ah
  4133f3:	and    BYTE PTR [ebx],dl
  4133f5:	sar    ch,0x1a
  4133f8:	dec    esi
  4133f9:	dec    esp
  4133fa:	mov    dh,0x4f
  4133fc:	rcl    DWORD PTR [edi+0x31cafb41],0x45
  413403:	mov    dh,0x38
  413405:	mov    ds:0x26345608,eax
  41340a:	arpl   bx,di
  41340c:	add    cl,BYTE PTR [edx-0x50bb5d35]
  413412:	xchg   ecx,eax
  413413:	loopne 0x413464
  413415:	stos   BYTE PTR es:[edi],al
  413416:	clc    
  413417:	mov    edi,0x18dd4721
  41341c:	popf   
  41341d:	mov    ds:0xad318fec,eax
  413422:	in     al,0xb6
  413424:	and    eax,0x88e9de8f
  413429:	(bad)  
  41342b:	dec    ecx
  41342c:	adc    al,0x5c
  41342e:	cmp    BYTE PTR [ebx+0xa6ec756],dh
  413434:	sbb    al,0x3c
  413436:	loop   0x413443
  413438:	cdq    
  413439:	push   ebp
  41343a:	cmp    BYTE PTR [edx+0x20],ch
  41343d:	inc    ebx
  41343e:	jle    0x4133f4
  413440:	pop    ebp
  413441:	push   ebp
  413442:	int3   
  413443:	mov    ds:0xe2fc268b,eax
  413448:	push   cs
  413449:	add    DWORD PTR [eax+edi*2-0x56],ebx
  41344d:	and    bh,BYTE PTR [edx-0x36]
  413450:	(bad)  
  413451:	popa   
  413452:	(bad)  
  413453:	jg     0x413461
  413455:	sahf   
  413456:	icebp  
  413457:	jle    0xe836756c
  41345d:	mov    eax,ds:0x91e9b4d1
  413462:	mov    esi,0x72616ba4
  413467:	in     al,dx
  413468:	popf   
  413469:	or     ebx,DWORD PTR [edi+0x54430069]
  41346f:	xor    al,0x2a
  413471:	mov    ebx,0x8a26582b
  413476:	dec    eax
  413477:	aas    
  413478:	jne    0x413466
  41347a:	cld    
  41347b:	xchg   edx,eax
  41347c:	push   edi
  41347d:	xor    edi,DWORD PTR [eax]
  41347f:	xchg   ebp,eax
  413480:	jbe    0x4134e3
  413482:	jmp    0x41340b
  413484:	cmp    DWORD PTR [ebx-0x6db4b8c2],eax
  41348a:	(bad)  
  41348b:	pop    ebx
  41348c:	mov    edi,0x39622213
  413491:	jmp    0xd894e622
  413496:	jb     0x413507
  413498:	(bad)  
  413499:	retf   
  41349a:	or     eax,0x9c2fe40a
  41349f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a0:	add    eax,0x21a8fdce
  4134a5:	jno    0x4134fd
  4134a7:	pusha  
  4134a8:	mov    esi,0xc984412e
  4134ad:	adc    bh,dl
  4134af:	dec    ecx
  4134b0:	xchg   BYTE PTR ds:0x55d9f1fb,ch
  4134b6:	dec    edi
  4134b7:	push   ss
  4134b8:	mov    bh,0x5d
  4134ba:	gs push 0xe
  4134bd:	cli    
  4134be:	hlt    
  4134bf:	lock mov bh,0xf7
  4134c2:	test   DWORD PTR [eax],esi
  4134c4:	mov    dl,0xd8
  4134c6:	popf   
  4134c7:	mov    WORD PTR fs:[eax-0x39],ss
  4134cb:	mov    edx,0xb148b6ac
  4134d0:	or     DWORD PTR [ecx-0x66],0x79
  4134d4:	push   ss
  4134d5:	sub    al,0x16
  4134d7:	push   cs
  4134d8:	mov    edi,0xeec7467b
  4134dd:	cs (bad) 
  4134df:	xchg   edi,eax
  4134e0:	xchg   edx,eax
  4134e1:	pushf  
  4134e2:	nop
  4134e3:	lods   eax,DWORD PTR ds:[esi]
  4134e4:	inc    esp
  4134e5:	(bad)  
  4134e7:	aad    0x1b
  4134e9:	sub    DWORD PTR [eax],ebx
  4134eb:	shl    DWORD PTR [ecx],cl
  4134ed:	inc    eax
  4134ee:	add    al,BYTE PTR [esi]
  4134f0:	call   0x1d708c52
  4134f5:	and    bl,BYTE PTR [esi]
  4134f7:	ret    
  4134f8:	xchg   edx,eax
  4134f9:	inc    ebx
  4134fa:	cld    
  4134fb:	stos   DWORD PTR es:[edi],eax
  4134fc:	es cmp al,0xe5
  4134ff:	or     BYTE PTR [ebp-0x7f],0x8d
  413503:	sub    bh,0x53
  413506:	inc    esi
  413507:	test   eax,0x4865da54
  41350c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41350d:	mov    al,ds:0x24b80ab8
  413512:	cld    
  413513:	in     eax,0x84
  413515:	pop    edi
  413516:	pop    ds
  413517:	mov    bl,0x6f
  413519:	in     al,dx
  41351a:	dec    eax
  41351b:	int    0x15
  41351d:	mov    eax,0x669978b3
  413522:	jo     0x4134fb
  413524:	loop   0x413535
  413526:	enter  0x1f52,0xd0
  41352a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41352b:	gs retf 
  41352d:	sbb    eax,0x4343895a
  413532:	dec    edi
  413533:	pop    ecx
  413534:	jne    0x413553
  413536:	push   esp
  413537:	out    0x9d,eax
  413539:	rcl    ah,1
  41353b:	and    ebp,DWORD PTR [esi-0x43]
  41353e:	sahf   
  41353f:	xchg   ecx,eax
  413540:	fcmovnu st,st(5)
  413542:	nop
  413543:	xor    ah,BYTE PTR [edx+ebp*8+0x72477216]
  41354a:	rcl    BYTE PTR [eax+eax*1+0x5d],0xb5
  41354f:	iret   
  413550:	mov    ebp,0x768d39aa
  413555:	mov    cs,WORD PTR [edi-0x7bff67cd]
  41355b:	idiv   BYTE PTR [edx-0x6e6d30a4]
  413561:	inc    ebx
  413562:	pusha  
  413563:	xchg   esp,eax
  413564:	xchg   esp,eax
  413565:	div    BYTE PTR [ebx-0x3e]
  413568:	xor    DWORD PTR [esi-0x6a],ebx
  41356b:	jb     0x4135e2
  41356d:	xor    DWORD PTR [ecx+0x26],esp
  413570:	and    DWORD PTR [ebx+0x3c],esp
  413573:	mov    cl,0x40
  413575:	xchg   edx,eax
  413576:	dec    eax
  413577:	int3   
  413578:	mov    edi,DWORD PTR [edi+0x26ef3111]
  41357e:	sahf   
  41357f:	imul   esp,DWORD PTR [eax-0x1d],0xffffffb6
  413583:	xchg   edi,eax
  413584:	into   
  413585:	into   
  413586:	fwait
  413587:	pusha  
  413588:	(bad)  
  41358a:	mov    ebp,0xd78089d8
  41358f:	cmp    dh,BYTE PTR [edi]
  413591:	cmp    al,0xe6
  413593:	rcr    BYTE PTR [ebp+0x14],cl
  413596:	and    DWORD PTR [eax-0x5a6d37d],ecx
  41359c:	mov    ecx,0x93300b65
  4135a1:	push   ss
  4135a2:	ds mov edx,0xb22d28c1
  4135a8:	inc    esp
  4135a9:	shl    DWORD PTR [esi-0x4a],0xa0
  4135ad:	mov    al,al
  4135af:	or     DWORD PTR [ecx+0x1307cd30],edx
  4135b5:	(bad)  
  4135b6:	fcom   st(7)
  4135b8:	push   esp
  4135b9:	mov    bh,0x6
  4135bb:	mov    eax,0x16d2cc62
  4135c0:	inc    ecx
  4135c1:	push   eax
  4135c2:	aas    
  4135c3:	mov    al,ah
  4135c5:	icebp  
  4135c6:	repnz sub eax,0x820088b0
  4135cc:	js     0x413586
  4135ce:	push   esp
  4135cf:	loope  0x413603
  4135d1:	test   DWORD PTR [edi-0x56],0x94b72f7e
  4135d8:	jbe    0x4135da
  4135da:	sbb    cl,BYTE PTR [eax+0x16792383]
  4135e0:	fs mov ecx,0x638cc085
  4135e6:	nop
  4135e7:	sub    BYTE PTR [edi+0x6f],cl
  4135ea:	aaa    
  4135eb:	cmp    ebx,esp
  4135ed:	sbb    al,0x58
  4135ef:	(bad)  
  4135f0:	stc    
  4135f1:	rcl    DWORD PTR [esi-0x3b70ddcc],cl
  4135f7:	jge    0x413590
  4135f9:	jns    0x4135f0
  4135fb:	or     al,BYTE PTR [eax]
  4135fd:	shr    BYTE PTR [edi+0x77],1
  413600:	call   0x8a6f:0xaf5281b2
  413607:	imul   ebp,DWORD PTR [edi],0x7bd48039
  41360d:	fist   WORD PTR [eax+0x4187185]
  413613:	mov    al,0x28
  413615:	jl     0x41360b
  413617:	and    dl,dh
  413619:	test   BYTE PTR [ecx],dh
  41361b:	lds    edx,FWORD PTR [ecx-0xd]
  41361e:	adc    BYTE PTR [eax+0x335739f0],bl
  413624:	mov    esp,0x85007dba
  413629:	jle    0x41368b
  41362b:	xor    ebx,DWORD PTR [eax-0x66d3ebdf]
  413631:	xlat   BYTE PTR ds:[ebx]
  413632:	sbb    eax,0x1bba62c6
  413637:	sub    eax,0x890a12b6
  41363c:	push   DWORD PTR [esi-0x559777dc]
  413642:	inc    ecx
  413643:	mov    eax,0xe80a5cf9
  413648:	icebp  
  413649:	lock ss in eax,dx
  41364c:	push   es
  41364d:	sub    ebx,DWORD PTR [edx-0x35075dad]
  413653:	dec    ecx
  413654:	ins    BYTE PTR es:[edi],dx
  413655:	mov    dl,0xf7
  413657:	sub    BYTE PTR [ebx],al
  413659:	sub    DWORD PTR [edi-0x70],edi
  41365c:	inc    edx
  41365d:	fisttp DWORD PTR [ebx-0x4f79a6dd]
  413663:	xchg   ecx,eax
  413664:	jmp    0x35ff6566
  413669:	jmp    0xa3b19ec8
  41366e:	and    cl,dh
  413670:	sbb    DWORD PTR [edx-0x41ff89c6],0x24
  413677:	into   
  413678:	ins    DWORD PTR es:[edi],dx
  413679:	test   al,0xd2
  41367b:	inc    ebx
  41367c:	and    eax,0x4334dd3d
  413681:	test   eax,0xd1833e76
  413686:	mov    al,ds:0xc254a641
  41368b:	push   ecx
  41368c:	push   edi
  41368d:	outs   dx,BYTE PTR ds:[esi]
  41368e:	push   esi
  41368f:	int    0xb5
  413691:	mov    esp,0x5d165cf
  413696:	(bad)  
  413697:	aaa    
  413698:	jecxz  0x413640
  41369a:	daa    
  41369b:	mov    esp,0x4e869059
  4136a0:	adc    al,al
  4136a2:	lods   al,BYTE PTR ds:[esi]
  4136a3:	fs leave 
  4136a5:	xchg   BYTE PTR [eax-0x6b9842f0],ah
  4136ab:	or     eax,0xeb803706
  4136b0:	push   ebp
  4136b1:	popf   
  4136b2:	stos   DWORD PTR es:[edi],eax
  4136b3:	pop    edx
  4136b4:	sub    DWORD PTR [ebp+0x25],edi
  4136b7:	mov    cl,0xf1
  4136b9:	cmp    al,ah
  4136bb:	rcr    DWORD PTR [ebx+0x3a],1
  4136be:	push   cs
  4136bf:	xchg   esi,eax
  4136c0:	fnstenv [esi]
  4136c2:	cmp    ebp,ecx
  4136c4:	mov    al,0xf7
  4136c6:	pop    DWORD PTR [ebp+0x7d06b166]
  4136cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136cd:	jge    0x41369c
  4136cf:	jo     0x41367b
  4136d1:	jnp    0x413694
  4136d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136d4:	mov    dh,0x2c
  4136d6:	xchg   ebp,eax
  4136d7:	push   esi
  4136d8:	jns    0x413684
  4136da:	mov    ds:0xf04b0958,eax
  4136df:	jp     0x4136c0
  4136e1:	icebp  
  4136e2:	dec    eax
  4136e3:	jne    0x4136b5
  4136e5:	or     BYTE PTR [edi],bh
  4136e7:	ins    DWORD PTR es:[edi],dx
  4136e8:	fidiv  WORD PTR [eax]
  4136ea:	cs pop esp
  4136ec:	mov    esi,0x81f1e5f0
  4136f1:	fnstsw WORD PTR [ebx+esi*8+0x5e]
  4136f5:	push   0x599c31a2
  4136fa:	int    0x3f
  4136fc:	mov    bh,0xc
  4136fe:	ds into 
  413700:	xchg   DWORD PTR [edi+edx*8-0x177e8bf4],eax
  413707:	push   esp
  413708:	jmp    0xffa4a8cb
  41370d:	lock cmp al,0x22
  413710:	jnp    0x41374c
  413712:	fistp  QWORD PTR [ebx]
  413714:	test   BYTE PTR [eax+0x654c001],bl
  41371a:	pop    esp
  41371b:	ret    
  41371c:	adc    edx,esp
  41371e:	in     eax,0xd9
  413720:	push   cs
  413721:	pop    ebx
  413722:	and    DWORD PTR ds:0x7828dcb,ecx
  413728:	push   cs
  413729:	xchg   ecx,eax
  41372a:	sbb    eax,0x6c5f28d6
  41372f:	test   ebx,eax
  413731:	or     al,0xed
  413733:	sbb    cl,BYTE PTR [esi-0x12]
  413736:	add    esi,ebp
  413738:	sbb    eax,0x93a59812
  41373d:	cld    
  41373e:	fs inc edi
  413740:	jnp    0x41374b
  413742:	fs shr bh,1
  413745:	(bad)  
  413746:	cwde   
  413747:	and    DWORD PTR [eax],eax
  413749:	and    ch,ch
  41374b:	data16 hlt 
  41374d:	mov    BYTE PTR [edx+ecx*4+0x4b],ch
  413751:	xor    bl,dl
  413753:	add    eax,0x4b4191fd
  413758:	dec    ecx
  413759:	in     al,0x1b
  41375b:	xor    esi,esp
  41375d:	push   es
  41375e:	aam    0x14
  413760:	xchg   ecx,eax
  413761:	dec    eax
  413762:	nop
  413763:	push   eax
  413764:	scas   al,BYTE PTR es:[edi]
  413765:	rcl    DWORD PTR [esi+0x53],0x71
  413769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41376a:	shl    DWORD PTR [edi-0x76],1
  41376d:	lea    esi,[ecx+0x34]
  413770:	mov    eax,ds:0xb010137b
  413775:	retf   
  413776:	icebp  
  413777:	xor    DWORD PTR [esi],eax
  413779:	cdq    
  41377a:	(bad)  
  41377b:	fld    QWORD PTR [esi+ecx*2]
  41377e:	lahf   
  41377f:	addr16 jbe 0x41375a
  413782:	dec    eax
  413783:	outs   dx,DWORD PTR ds:[esi]
  413784:	jmp    0x520d9b3f
  413789:	xchg   edi,eax
  41378a:	dec    ebp
  41378b:	ret    
  41378c:	std    
  41378d:	dec    edi
  41378e:	jno    0x413730
  413790:	or     bl,BYTE PTR [eax+0x7e9babaa]
  413796:	mov    bl,0x45
  413798:	sahf   
  413799:	inc    edx
  41379a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41379b:	es push 0xffffffcc
  41379e:	mov    ebp,0x442d3abd
  4137a3:	and    esp,eax
  4137a5:	int3   
  4137a6:	je     0x4137af
  4137a8:	push   cs
  4137a9:	fcmovb st,st(1)
  4137ab:	test   DWORD PTR [ebp+0x1a332655],ebx
  4137b1:	call   DWORD PTR [ebx-0x72711d72]
  4137b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137b8:	scas   al,BYTE PTR es:[edi]
  4137b9:	pop    ebx
  4137ba:	mov    cl,0xe5
  4137bc:	sbb    DWORD PTR [edi+0x4b3c6a53],esp
  4137c2:	pushf  
  4137c3:	mov    eax,0xcb06f68a
  4137c8:	nop
  4137c9:	ins    DWORD PTR es:[edi],dx
  4137ca:	or     ebp,eax
  4137cc:	jmp    0xf89b4838
  4137d1:	(bad)  
  4137d2:	adc    eax,DWORD PTR [edx+0x3ba13e51]
  4137d8:	jne    0x413773
  4137da:	pop    edi
  4137db:	loop   0x413838
  4137dd:	aaa    
  4137de:	dec    eax
  4137df:	pushfw 
  4137e1:	call   0x5458c20f
  4137e6:	or     eax,0xdcd0c3b4
  4137eb:	dec    ebp
  4137ec:	pop    esi
  4137ed:	jle    0x41386b
  4137ef:	jns    0x4137d6
  4137f1:	pop    es
  4137f2:	adc    bl,BYTE PTR [ebx-0xf]
  4137f5:	xor    DWORD PTR [eax+0x41],esp
  4137f8:	das    
  4137f9:	sub    dl,0x57
  4137fc:	jmp    0xfc58fab8
  413801:	push   0x79ffbf49
  413806:	fmul   DWORD PTR ds:0x980a6614
  41380c:	push   ebp
  41380d:	lea    edi,[edx-0x24]
  413810:	lea    edi,[edi+0x1e]
  413813:	mov    ch,0x76
  413815:	xor    DWORD PTR ds:0xa4dca38c,edi
  41381b:	mov    ebp,0x292aad8d
  413820:	inc    esp
  413821:	jns    0x4137d1
  413823:	fst    DWORD PTR [ecx+0x62]
  413826:	das    
  413827:	dec    edx
  413828:	sti    
  413829:	cmc    
  41382a:	mov    edx,0x53839fc3
  41382f:	es mov ecx,0xb33fcdb3
  413835:	mov    bl,0xb6
  413837:	push   ecx
  413838:	fisub  DWORD PTR [ecx-0x3643c0c0]
  41383e:	sbb    eax,0x2c2bfeb1
  413843:	sub    esi,DWORD PTR [edi]
  413845:	ins    BYTE PTR es:[edi],dx
  413846:	pop    ecx
  413847:	jmp    0xbea21921
  41384c:	fdiv   st(2),st
  41384e:	repnz fwait
  413850:	or     BYTE PTR [edi+0xeaf45fd],bl
  413856:	stos   BYTE PTR es:[edi],al
  413857:	ins    BYTE PTR es:[edi],dx
  413858:	xor    edi,DWORD PTR [edi+0x52ed237c]
  41385e:	dec    ebp
  41385f:	push   ebp
  413860:	stc    
  413861:	cmc    
  413862:	mov    eax,0x3dab9d1a
  413867:	add    ah,BYTE PTR [edi-0x5381edfd]
  41386d:	xor    bl,ch
  41386f:	pushf  
  413870:	test   BYTE PTR [esi-0x440a5a6d],bh
  413876:	outs   dx,BYTE PTR ds:[esi]
  413877:	les    esi,FWORD PTR [eax-0x36]
  41387a:	pop    ds
  41387b:	dec    ebx
  41387c:	sbb    DWORD PTR [eax+ebp*1],edx
  41387f:	push   ss
  413880:	xor    al,0xb7
  413882:	cmp    al,0xbd
  413884:	push   ds
  413885:	daa    
  413886:	sbb    al,BYTE PTR [eax+0xdfa3404]
  41388c:	jno    0x41385b
  41388e:	rol    DWORD PTR [ebp+0x16a3301f],1
  413894:	loopne 0x41389e
  413896:	cmp    esp,eax
  413898:	mov    esi,0x78367b9b
  41389d:	bound  ecx,QWORD PTR [ecx]
  41389f:	ja     0x41389a
  4138a1:	stos   DWORD PTR es:[edi],eax
  4138a2:	iret   
  4138a3:	aad    0x5c
  4138a5:	dec    ecx
  4138a6:	cdq    
  4138a7:	out    dx,al
  4138a8:	icebp  
  4138a9:	movzx  ebx,BYTE PTR [ebx+edi*8-0x49936be4]
  4138b1:	mov    edx,0x174083bd
  4138b6:	sub    BYTE PTR [edi+eax*1],al
  4138b9:	cwde   
  4138ba:	sbb    ebp,DWORD PTR [edx+0x24]
  4138bd:	sub    dh,BYTE PTR [esi]
  4138bf:	aas    
  4138c0:	jae    0x413921
  4138c2:	hlt    
  4138c3:	xor    DWORD PTR [ebx],0xb24adeea
  4138c9:	add    al,0xfa
  4138cb:	xchg   edi,eax
  4138cc:	loope  0x4138ba
  4138ce:	iret   
  4138cf:	(bad)
  4138d2:	dec    eax
  4138d3:	dec    ebp
  4138d4:	ds cmp eax,0xffce7e31
  4138da:	(bad)  
  4138db:	aam    0xf1
  4138dd:	inc    eax
  4138de:	call   0xd16d:0x39a76a05
  4138e5:	xor    esi,DWORD PTR [ebp-0x6d]
  4138e8:	sbb    DWORD PTR [eax+0x5],ebx
  4138eb:	mov    edi,0x1b482200
  4138f0:	cmp    DWORD PTR [ecx+0x32],ecx
  4138f3:	inc    ecx
  4138f4:	(bad)  
  4138f5:	mov    DWORD PTR [ebp+0x2678f66],ecx
  4138fb:	mov    dl,0x87
  4138fd:	lahf   
  4138fe:	lea    ebx,[edx-0x7ffb082b]
  413904:	fldl2t 
  413906:	pop    es
  413907:	mov    edi,DWORD PTR [ecx+0x3a]
  41390a:	out    0x8a,al
  41390c:	dec    bx
  41390e:	xchg   esi,eax
  41390f:	sbb    DWORD PTR [edx-0x7588ffc4],0xa
  413916:	xor    eax,0x2b99598a
  41391b:	sub    bh,al
  41391d:	fstp   DWORD PTR ds:0xac8c1ea5
  413923:	int3   
  413924:	mov    eax,DWORD PTR [esi+ecx*1-0xd987158]
  41392b:	es add dh,dl
  41392e:	mov    ecx,0x5df33cc6
  413933:	retf   
  413934:	xor    bh,bl
  413936:	sub    eax,DWORD PTR [ecx-0x31f1769c]
  41393c:	jmp    0x868de973
  413941:	and    esi,edx
  413943:	stos   DWORD PTR es:[edi],eax
  413944:	inc    BYTE PTR [ebx+edi*1+0x62]
  413948:	add    eax,0xa13cf982
  41394d:	jne    0x41397f
  41394f:	in     al,0x63
  413951:	or     dl,BYTE PTR [esi-0x53]
  413954:	sub    al,0xc9
  413956:	add    DWORD PTR [eax],eax
  413958:	xchg   esp,eax
  413959:	mov    ebx,0xc3566146
  41395e:	or     cl,BYTE PTR [ebx-0x6a1bf6b4]
  413964:	mov    ebp,0xd8d06c06
  413969:	mov    dl,0x3d
  41396b:	pop    ecx
  41396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41396d:	outs   dx,BYTE PTR ds:[esi]
  41396e:	xchg   ebx,eax
  41396f:	dec    ecx
  413970:	lahf   
  413971:	dec    eax
  413972:	call   0x5962:0xf3405999
  413979:	pop    eax
  41397a:	rcl    DWORD PTR [edi-0x2f],cl
  41397d:	bound  ebx,QWORD PTR [esi+ebp*2]
  413980:	out    0xc2,al
  413982:	stc    
  413983:	clc    
  413984:	sub    al,0x4c
  413986:	and    esi,DWORD PTR [ecx]
  413988:	in     eax,dx
  413989:	neg    cl
  41398b:	scas   al,BYTE PTR es:[edi]
  41398c:	mov    esi,0x97d99b0a
  413991:	stos   DWORD PTR es:[edi],eax
  413992:	daa    
  413993:	fcomp  QWORD PTR [esi-0x24]
  413996:	iret   
  413997:	loope  0x4139a1
  413999:	outs   dx,BYTE PTR ds:[esi]
  41399a:	jbe    0x4139a2
  41399c:	lock mov ebp,0xf8911e56
  4139a2:	enter  0x90f,0xee
  4139a6:	xor    al,0x88
  4139a8:	bound  edx,QWORD PTR [esi-0x6e9f6e0a]
  4139ae:	aaa    
  4139af:	gs xchg esi,eax
  4139b1:	dec    cx
  4139b3:	add    eax,0x8eb807f3
  4139b8:	add    esi,ebx
  4139ba:	scas   al,BYTE PTR es:[edi]
  4139bb:	test   BYTE PTR [esp+eax*8],bh
  4139be:	(bad)  
  4139bf:	mov    bh,0x2a
  4139c1:	push   edi
  4139c2:	push   ecx
  4139c3:	loopne 0x4139db
  4139c5:	std    
  4139c6:	or     ebx,ebx
  4139c8:	int    0x81
  4139ca:	push   ebx
  4139cb:	std    
  4139cc:	mov    cl,0x26
  4139ce:	std    
  4139cf:	add    eax,0x750d674d
  4139d4:	hlt    
  4139d5:	arpl   WORD PTR [esi+esi*1],dx
  4139d8:	or     bl,BYTE PTR [edx+0x0]
  4139db:	pusha  
  4139dc:	pushf  
  4139dd:	js     0x4139c9
  4139df:	test   eax,0x47415c90
  4139e4:	adc    edx,DWORD PTR [edx]
  4139e6:	and    esi,DWORD PTR [ebx-0x53]
  4139e9:	pop    edi
  4139ea:	lods   al,BYTE PTR ds:[esi]
  4139eb:	dec    ebx
  4139ec:	cdq    
  4139ed:	repnz rcl DWORD PTR [eax-0x2c],0x38
  4139f2:	add    ch,BYTE PTR [ebx-0x34]
  4139f5:	daa    
  4139f6:	jmp    0x2ba299dd
  4139fb:	mov    ebp,ss
  4139fd:	and    bl,al
  4139ff:	mov    dh,0x88
  413a01:	xor    eax,DWORD PTR [ecx-0x33]
  413a04:	sbb    edx,DWORD PTR [ebp-0x73]
  413a07:	and    eax,0xf1080b21
  413a0c:	shr    esp,cl
  413a0e:	in     eax,dx
  413a0f:	retf   
  413a10:	icebp  
  413a11:	aam    0xcd
  413a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a14:	sar    BYTE PTR [eax-0x6c],1
  413a17:	mov    eax,ds:0xe1d38087
  413a1c:	xchg   ecx,eax
  413a1d:	xor    eax,0xc239218a
  413a22:	loopne 0x413a5b
  413a24:	in     eax,0x7a
  413a26:	in     eax,dx
  413a27:	call   0x310cea9f
  413a2c:	or     BYTE PTR [edi],al
  413a2e:	and    BYTE PTR [eax-0x61],0x18
  413a32:	xor    ch,BYTE PTR [eax+0x26]
  413a35:	xchg   esp,eax
  413a36:	mov    ebx,0x3b0a6460
  413a3b:	mov    dl,0xbf
  413a3d:	pop    esp
  413a3e:	cli    
  413a3f:	out    0x79,al
  413a41:	(bad)  
  413a42:	in     al,dx
  413a43:	not    BYTE PTR [eax-0x86ad0b9]
  413a49:	add    BYTE PTR [esi+0x48],dl
  413a4c:	cwde   
  413a4d:	jl     0x413a1d
  413a4f:	push   edi
  413a50:	imul   ebx,DWORD PTR [edx],0x6ab9706
  413a56:	bound  eax,QWORD PTR [ebx+0x1ca448a7]
  413a5c:	gs jns 0x413abb
  413a5f:	lods   al,BYTE PTR ds:[esi]
  413a60:	xor    BYTE PTR [ebx],0xd1
  413a63:	nop
  413a64:	test   eax,0x39b35ca0
  413a69:	dec    ecx
  413a6a:	cdq    
  413a6b:	dec    ebx
  413a6c:	pop    ss
  413a6d:	adc    edx,esi
  413a6f:	repz sub al,0x10
  413a72:	adc    BYTE PTR [ebp-0x60],dh
  413a75:	outs   dx,BYTE PTR ds:[esi]
  413a76:	cwde   
  413a77:	je     0x413ae6
  413a79:	aas    
  413a7a:	xchg   ebx,eax
  413a7b:	cdq    
  413a7c:	lods   eax,DWORD PTR ds:[esi]
  413a7d:	scas   al,BYTE PTR es:[edi]
  413a7e:	rol    DWORD PTR [ecx-0x68],1
  413a81:	fnsave ds:0xc1fc2796
  413a87:	push   esi
  413a88:	(bad)  
  413a89:	int    0xb0
  413a8b:	adc    eax,0xbb07771e
  413a90:	fwait
  413a91:	pop    esp
  413a92:	push   edi
  413a93:	xchg   ecx,eax
  413a94:	and    al,0x94
  413a96:	stos   BYTE PTR es:[edi],al
  413a97:	sub    al,0xe3
  413a99:	adc    al,0x81
  413a9b:	sti    
  413a9c:	stos   DWORD PTR es:[edi],eax
  413a9d:	int3   
  413a9e:	adc    ecx,DWORD PTR [esi]
  413aa0:	std    
  413aa1:	int3   
  413aa2:	mov    ds:0x769e76e2,eax
  413aa7:	stc    
  413aa8:	dec    esi
  413aa9:	ins    DWORD PTR es:[edi],dx
  413aaa:	out    dx,eax
  413aab:	push   esp
  413aac:	add    ch,BYTE PTR [edi-0xadeedb7]
  413ab2:	add    al,0x60
  413ab4:	pop    edi
  413ab5:	jle    0x413a9f
  413ab7:	cdq    
  413ab8:	cld    
  413ab9:	mov    bl,0xd7
  413abb:	jge    0x413a71
  413abd:	repnz cdq 
  413abf:	or     eax,0x4ea9a183
  413ac4:	add    DWORD PTR [edx-0x5537b14f],ebp
  413aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413acb:	dec    ebp
  413acc:	int    0xdd
  413ace:	inc    ebp
  413acf:	adc    al,0xfa
  413ad1:	sbb    DWORD PTR ds:0x5751b464,edi
  413ad7:	aaa    
  413ad8:	gs mov ecx,0xd64b2220
  413ade:	inc    ecx
  413adf:	es jo  0x413abc
  413ae2:	imul   edi,DWORD PTR ds:[ebx+ebx*8],0x14d8f451
  413aea:	mov    DWORD PTR [eax+esi*1-0x19],esp
  413aee:	lods   al,BYTE PTR ds:[esi]
  413aef:	inc    ebp
  413af0:	mov    dh,0xc
  413af2:	jo     0x413b60
  413af4:	inc    ebp
  413af5:	cwde   
  413af6:	inc    esi
  413af7:	retf   
  413af8:	mov    bh,0x7f
  413afa:	popf   
  413afb:	or     eax,0x452fbd33
  413b00:	stos   BYTE PTR es:[edi],al
  413b01:	dec    eax
  413b02:	xor    cl,ch
  413b04:	push   eax
  413b05:	loop   0x413a93
  413b07:	fnstcw WORD PTR [ebp+ecx*2+0x59bff0bd]
  413b0e:	cmp    eax,0x3b9fac46
  413b13:	fs adc bh,bh
  413b16:	shl    DWORD PTR [eax-0x56],cl
  413b19:	test   al,0xc0
  413b1b:	call   0x5d7f:0x1e59a031
  413b22:	push   edx
  413b23:	pop    esi
  413b24:	or     BYTE PTR [ebx+0x46],0x67
  413b28:	bound  esp,QWORD PTR [ebx-0x2a]
  413b2b:	out    0x1b,eax
  413b2d:	iret   
  413b2e:	enter  0xf50b,0xa2
  413b32:	lahf   
  413b33:	call   0x2841:0x7910a87f
  413b3a:	sub    al,0x6c
  413b3c:	jmp    0x413ac8
  413b3e:	cmp    DWORD PTR [edx+0x30],eax
  413b41:	test   BYTE PTR [ebp+0x2e1069fb],bl
  413b47:	jg     0x413b00
  413b49:	cdq    
  413b4a:	test   DWORD PTR [edi-0x6277f9b3],eax
  413b50:	or     al,0x29
  413b52:	lock push es
  413b54:	mov    ch,0xcf
  413b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b57:	mov    eax,ds:0x1fc62457
  413b5c:	add    eax,DWORD PTR [ecx]
  413b5e:	jmp    0xb6b050bf
  413b63:	fucomi st,st(4)
  413b65:	in     eax,dx
  413b66:	and    dl,BYTE PTR ss:[eax]
  413b69:	dec    eax
  413b6a:	lds    ecx,FWORD PTR [esi-0x161c8538]
  413b70:	inc    ebp
  413b71:	inc    esi
  413b72:	or     eax,0x3ce5374c
  413b77:	shl    DWORD PTR gs:[ebx+0x14],0x86
  413b7c:	retf   0xec47
  413b7f:	loopne 0x413bd7
  413b81:	int3   
  413b82:	push   edi
  413b83:	fistp  QWORD PTR [ecx-0x6c]
  413b86:	push   cs
  413b87:	out    0xa7,eax
  413b89:	xor    BYTE PTR [ecx+0x9],cl
  413b8c:	xor    edi,ecx
  413b8e:	cmp    eax,0xc8a64b00
  413b93:	jle    0x413c0e
  413b95:	(bad)  
  413b96:	lock mov bh,0xa8
  413b99:	or     eax,0x10bfcaae
  413b9e:	jnp    0x413c1c
  413ba0:	xor    DWORD PTR [edx-0x73],edi
  413ba3:	test   al,0xfd
  413ba5:	mov    eax,0xc7c19c44
  413baa:	xor    al,0x89
  413bac:	or     eax,DWORD PTR [edi]
  413bae:	out    dx,al
  413baf:	sub    al,0xf2
  413bb1:	rcr    DWORD PTR [ebx],cl
  413bb3:	fwait
  413bb4:	pop    esi
  413bb5:	pop    ebx
  413bb6:	pusha  
  413bb7:	aas    
  413bb8:	pushf  
  413bb9:	jnp    0x413b62
  413bbb:	call   0x1b90:0x96cce988
  413bc2:	xchg   BYTE PTR [edi-0x31f2cefe],cl
  413bc8:	(bad)  
  413bc9:	xor    BYTE PTR [edx],ah
  413bcb:	sti    
  413bcc:	push   edi
  413bcd:	fcom   DWORD PTR [ecx]
  413bcf:	dec    esi
  413bd0:	sub    dl,BYTE PTR [eax-0x4f8ea51c]
  413bd6:	xchg   esp,eax
  413bd7:	jnp    0x413b8c
  413bd9:	out    dx,al
  413bda:	mov    al,ds:0x2669f348
  413bdf:	loopne 0x413bef
  413be1:	sahf   
  413be2:	ins    DWORD PTR es:[edi],dx
  413be3:	sti    
  413be4:	xchg   esi,eax
  413be5:	cwde   
  413be6:	fstp   QWORD PTR [edi-0x3c59fb5b]
  413bec:	push   0x26
  413bee:	jg     0x413b9e
  413bf0:	in     al,dx
  413bf1:	xchg   eax,ebx
  413bf3:	aad    0xcb
  413bf5:	sub    DWORD PTR [ebx-0x504e8a33],ecx
  413bfb:	and    ecx,ecx
  413bfd:	adc    ecx,DWORD PTR [eax-0x4c14c6]
  413c03:	mov    eax,ds:0x4473cac0
  413c08:	push   edx
  413c09:	ins    DWORD PTR es:[edi],dx
  413c0a:	cmp    DWORD PTR [edi+0x2b],ebx
  413c0d:	stos   BYTE PTR es:[edi],al
  413c0e:	arpl   WORD PTR [esi-0x41],di
  413c11:	dec    ecx
  413c12:	push   es
  413c13:	rcl    BYTE PTR [esi+0x4a],1
  413c16:	or     al,0xe7
  413c18:	gs sub eax,0xf62e24f8
  413c1e:	aam    0x5b
  413c20:	cmp    BYTE PTR [ecx+0x982d7a8],dh
  413c26:	pop    esp
  413c27:	dec    edx
  413c28:	ret    0xbc84
  413c2b:	jmp    0xa720:0x9112818b
  413c32:	sbb    BYTE PTR [esp+edx*1+0x1f],0x90
  413c37:	xor    cl,al
  413c39:	mov    eax,ds:0x3750876a
  413c3e:	sbb    al,0x14
  413c40:	shr    DWORD PTR [ebp-0x5c86449],1
  413c46:	pushf  
  413c47:	mov    cl,0x55
  413c49:	sbb    eax,0x1bdcd4a0
  413c4e:	xor    ah,al
  413c50:	mov    dh,0x50
  413c52:	ret    0x20e6
  413c55:	into   
  413c56:	loopne 0x413c0a
  413c58:	cli    
  413c59:	push   eax
  413c5a:	leave  
  413c5b:	xchg   edx,esp
  413c5d:	mov    bh,0x75
  413c5f:	push   0xaa68346d
  413c64:	push   es
  413c65:	enter  0xdab,0x6b
  413c69:	and    BYTE PTR [esi+edx*1+0x25],al
  413c6d:	add    DWORD PTR [eax-0x2],esp
  413c70:	repz cld 
  413c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c73:	cdq    
  413c74:	lock add BYTE PTR [edx+0x6544f1fd],al
  413c7b:	lds    ebx,FWORD PTR [ebx]
  413c7d:	or     DWORD PTR [eax-0x37],edi
  413c80:	dec    edi
  413c81:	rcr    DWORD PTR [ebx+0x63],0x1c
  413c85:	xor    DWORD PTR [edx],edi
  413c87:	xor    al,cl
  413c89:	lods   al,BYTE PTR ds:[esi]
  413c8a:	inc    edi
  413c8b:	stos   DWORD PTR es:[edi],eax
  413c8c:	dec    esi
  413c8d:	inc    ebp
  413c8e:	ror    ecx,0x22
  413c91:	test   esp,ebp
  413c93:	xor    edx,DWORD PTR [esp+eiz*2-0x22]
  413c97:	pop    esp
  413c98:	sbb    cl,BYTE PTR [eax]
  413c9a:	mov    dh,cl
  413c9c:	dec    edx
  413c9d:	fstp   TBYTE PTR [eax+ebx*4-0x53]
  413ca1:	cmp    ecx,esi
  413ca3:	mov    ebx,0x64060d4f
  413ca8:	shl    dl,0x3
  413cab:	scas   eax,DWORD PTR es:[edi]
  413cac:	sub    ah,dl
  413cae:	mov    al,ds:0x7fcc8fb8
  413cb3:	jge    0x413cbb
  413cb5:	in     eax,0x15
  413cb7:	sbb    ah,ch
  413cb9:	lahf   
  413cba:	jbe    0x413cb6
  413cbc:	add    ch,bh
  413cbe:	mov    ?,WORD PTR [esi-0x5b7acec0]
  413cc4:	sbb    bh,BYTE PTR [eax]
  413cc6:	inc    ebp
  413cc7:	push   ds
  413cc8:	adc    DWORD PTR [edi],ebp
  413cca:	mov    bl,0x8e
  413ccc:	pop    ebp
  413ccd:	cmp    ebx,DWORD PTR [eax]
  413ccf:	xor    eax,0xeff69917
  413cd4:	(bad)  
  413cd6:	add    eax,0xf907abbc
  413cdb:	bound  edi,QWORD PTR [edx]
  413cdd:	jge    0x413ce8
  413cdf:	cs inc esp
  413ce1:	div    BYTE PTR [edx+0x23506931]
  413ce7:	adc    edi,DWORD PTR [edi+edx*8+0x38045f21]
  413cee:	pop    edx
  413cef:	cdq    
  413cf0:	jnp    0x413c7a
  413cf2:	jmp    0x2ec7:0xde749766
  413cf9:	ret    0x1984
  413cfc:	sbb    al,BYTE PTR [ecx]
  413cfe:	stos   BYTE PTR es:[edi],al
  413cff:	inc    ecx
  413d00:	push   edx
  413d01:	cmp    ebx,eax
  413d03:	push   edi
  413d04:	xchg   edi,eax
  413d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d06:	clc    
  413d07:	ja     0x413cb2
  413d09:	pusha  
  413d0a:	stc    
  413d0b:	lea    ebx,[ebx+0x38003471]
  413d11:	fsubp  st(7),st
  413d13:	jecxz  0x413c9b
  413d15:	sbb    DWORD PTR [ebp+0x78],esp
  413d18:	push   ecx
  413d19:	mov    al,ds:0xd3398820
  413d1e:	imul   ebx,DWORD PTR [ecx],0xb457366c
  413d24:	sti    
  413d25:	xchg   DWORD PTR [esi+0xa],ebp
  413d28:	(bad)  
  413d29:	mov    ebp,0xf38eaec9
  413d2e:	xchg   ecx,eax
  413d2f:	lods   al,BYTE PTR ds:[esi]
  413d30:	sbb    DWORD PTR [ebp-0x513294d0],0x6f
  413d37:	fistp  WORD PTR [esi+0x32aa74b]
  413d3d:	and    ecx,DWORD PTR [ebx+ebp*2-0x870837c]
  413d44:	scas   eax,DWORD PTR es:[edi]
  413d45:	ja     0x413cd4
  413d47:	pop    ds
  413d48:	mov    edx,0xbebd8761
  413d4d:	mov    bl,0x26
  413d4f:	into   
  413d50:	outs   dx,DWORD PTR ds:[esi]
  413d51:	or     al,0x18
  413d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d54:	test   eax,0x10c66eea
  413d59:	mov    dh,0x81
  413d5b:	test   eax,0x1d80ceda
  413d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d61:	dec    edx
  413d62:	mov    fs:0x1d4f5d24,al
  413d68:	cmp    DWORD PTR [ecx-0x8],eax
  413d6b:	lods   eax,DWORD PTR ds:[esi]
  413d6c:	dec    edx
  413d6d:	cmp    cl,BYTE PTR [edi]
  413d6f:	lock daa 
  413d71:	lock rcl BYTE PTR [edx],0x6e
  413d75:	or     al,0x76
  413d77:	mov    ebp,0xc1920194
  413d7c:	inc    ebx
  413d7d:	sub    BYTE PTR [eax-0x80],dl
  413d80:	cmp    BYTE PTR ds:0x947a4240,cl
  413d86:	imul   esp,ebp,0x1f8e1a2d
  413d8c:	pop    ss
  413d8d:	jle    0x413d1b
  413d8f:	push   esp
  413d90:	pop    ebx
  413d91:	adc    eax,0xaf1bcc4e
  413d96:	retf   
  413d97:	jge    0x413d52
  413d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d9a:	in     al,dx
  413d9b:	pop    es
  413d9c:	cmc    
  413d9d:	mov    dh,0xdd
  413d9f:	mov    dl,0x92
  413da1:	pusha  
  413da2:	push   esi
  413da3:	rol    edi,0xe7
  413da6:	(bad)  [eax-0x101c440c]
  413dac:	push   ecx
  413dad:	and    bh,BYTE PTR [edx+0x32c04aa5]
  413db3:	imul   esp,DWORD PTR [eax-0x4d],0x743de2ef
  413dba:	adc    DWORD PTR [bp+0x313f],edi
  413dbf:	sub    BYTE PTR [edx],0x2e
  413dc2:	xchg   edi,eax
  413dc3:	in     eax,0xed
  413dc5:	rcr    DWORD PTR [esi],1
  413dc7:	mul    esp
  413dc9:	stc    
  413dca:	cld    
  413dcb:	mov    fs,WORD PTR [edx-0x7c]
  413dce:	shr    DWORD PTR [eax],cl
  413dd0:	sbb    bl,BYTE PTR [eax-0x72b4f4b2]
  413dd6:	(bad)  
  413dd7:	and    bh,BYTE PTR [esi+0x761664b7]
  413ddd:	dec    ebp
  413dde:	xchg   ebx,eax
  413ddf:	ja     0x413de3
  413de1:	inc    ebp
  413de2:	jp     0x413e01
  413de4:	repz push ss
  413de6:	mov    ah,0x9e
  413de8:	pop    ebp
  413de9:	push   ss
  413dea:	aam    0x4d
  413dec:	fpatan 
  413dee:	fwait
  413def:	inc    edi
  413df0:	lock rol DWORD PTR [eax+0x1823c15a],cl
  413df7:	inc    edx
  413df8:	xlat   BYTE PTR ds:[ebx]
  413df9:	mov    edx,0xc00f74b5
  413dfe:	fistp  WORD PTR [esi]
  413e00:	mov    al,ds:0x6f78aab0
  413e05:	fwait
  413e06:	popa   
  413e07:	cli    
  413e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e09:	xchg   edi,eax
  413e0a:	retf   
  413e0b:	cmovl  esp,DWORD PTR [ebx-0x64ba5e04]
  413e12:	cs out 0x4b,eax
  413e15:	dec    edi
  413e16:	std    
  413e17:	inc    ebp
  413e18:	addr16 jo 0x413e7f
  413e1b:	das    
  413e1c:	retf   
  413e1d:	mov    al,0x2
  413e1f:	jb     0x413e9b
  413e21:	imul   esi,DWORD PTR [eax+0x2b],0xe
  413e25:	pusha  
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	push   es
  413e28:	push   cs
  413e29:	dec    esi
  413e2a:	retf   
  413e2b:	ins    BYTE PTR es:[edi],dx
  413e2c:	or     eax,0xb5483d78
  413e31:	imul   eax,DWORD PTR [esi],0x2c
  413e34:	push   ecx
  413e35:	(bad)  [eax]
  413e37:	jg     0x413e5a
  413e39:	xchg   ebx,eax
  413e3a:	(bad)  
  413e3b:	mov    esp,0xdc52b6f2
  413e40:	call   0xd8a89b5b
  413e45:	or     esi,esp
  413e47:	pop    esp
  413e48:	dec    eax
  413e49:	mov    al,ds:0x4713956a
  413e4e:	hlt    
  413e4f:	ins    DWORD PTR es:[edi],dx
  413e50:	cmp    DWORD PTR [edx+0x53],0xa0b82195
  413e57:	mov    cl,0x96
  413e59:	pop    edi
  413e5a:	adc    DWORD PTR [esp+edi*8-0x785440cc],edi
  413e61:	pop    edi
  413e62:	inc    eax
  413e63:	ficomp DWORD PTR [eax-0x9311a6e]
  413e69:	retf   
  413e6a:	jmp    0xb23b:0x89209f64
  413e71:	bound  edx,QWORD PTR [edx]
  413e73:	pop    ds
  413e74:	(bad)  
  413e75:	mov    al,0x4d
  413e77:	add    eax,0x994d5eb8
  413e7c:	inc    edx
  413e7d:	xor    eax,0x8a7371e4
  413e82:	fnstsw WORD PTR [ebx+0x15aee8dc]
  413e88:	jg     0x413e8d
  413e8a:	rcl    DWORD PTR [eax],1
  413e8c:	xor    dh,ah
  413e8e:	add    ah,dh
  413e90:	mov    eax,ds:0x82fc2399
  413e95:	sbb    DWORD PTR [edx+0x59],0x23
  413e99:	xor    DWORD PTR [edx-0x74],edx
  413e9c:	stos   BYTE PTR es:[edi],al
  413e9d:	js     0x413f15
  413e9f:	cmp    dl,dh
  413ea1:	add    DWORD PTR [eax-0x67],ebx
  413ea4:	mov    ds:0xbbf97bf7,eax
  413ea9:	cs fcomip st,st(7)
  413eac:	push   ds
  413ead:	stc    
  413eae:	mov    dl,0xae
  413eb0:	or     ecx,DWORD PTR [esp+ebx*2]
  413eb3:	cli    
  413eb4:	push   esi
  413eb5:	sti    
  413eb6:	(bad)  
  413eb7:	sbb    eax,0x9d10e263
  413ebc:	mov    al,ds:0x8c9f1d0b
  413ec1:	(bad)
  413ec5:	shl    BYTE PTR [edi],1
  413ec7:	mov    ch,0x5c
  413ec9:	push   cs
  413eca:	psrld  mm7,QWORD PTR [ebp-0x28853ea]
  413ed1:	and    BYTE PTR [ebx+ebp*2+0x5f],0xa
  413ed6:	or     DWORD PTR ds:0x38df68b2,eax
  413edc:	push   edx
  413edd:	sar    BYTE PTR [eax+ecx*1+0x76230eea],cl
  413ee4:	adc    BYTE PTR [ebx],cl
  413ee6:	xor    ecx,DWORD PTR [ebx-0x6c]
  413ee9:	add    esp,DWORD PTR [ebx-0x7ff1ff58]
  413eef:	xchg   ebx,eax
  413ef0:	push   edi
  413ef1:	mov    esi,0xb2a20cc
  413ef6:	stos   DWORD PTR es:[edi],eax
  413ef7:	es xchg esp,eax
  413ef9:	adc    BYTE PTR [eax+0x6b2c9f2e],ah
  413eff:	push   esp
  413f00:	mov    edx,DWORD PTR [edx-0x13]
  413f03:	fwait
  413f04:	mov    fs,WORD PTR [ebx]
  413f06:	lods   eax,DWORD PTR ds:[esi]
  413f07:	push   ebx
  413f08:	cmp    ebx,DWORD PTR [eax+0x39]
  413f0b:	cmp    BYTE PTR [ebx-0x6f],bh
  413f0e:	aam    0x1f
  413f10:	sub    eax,0x3a1052cc
  413f15:	mov    al,0xa0
  413f17:	mov    eax,DWORD PTR [ecx]
  413f19:	cmp    DWORD PTR [edx-0x6b],edx
  413f1c:	in     eax,dx
  413f1d:	or     DWORD PTR [ecx+eiz*8-0x49],edi
  413f21:	fsub   QWORD PTR [ecx-0x72afe117]
  413f27:	arpl   WORD PTR [edx-0x3e7a1139],cx
  413f2d:	sbb    eax,0xe2e20bc
  413f32:	out    0x85,al
  413f34:	jnp    0x413f5d
  413f36:	xchg   esp,eax
  413f37:	jecxz  0x413ed8
  413f39:	fldenv [ebp-0xf]
  413f3c:	test   eax,0xa6199f6d
  413f41:	sub    BYTE PTR [ecx+0x48],cl
  413f44:	frstor [edi]
  413f46:	sbb    eax,0x2a8aaae1
  413f4b:	mov    al,ds:0x8692b7df
  413f50:	shr    DWORD PTR [ebx-0x4c],1
  413f53:	cli    
  413f54:	fist   WORD PTR [esi]
  413f56:	add    eax,0x6c3826cb
  413f5b:	stos   BYTE PTR es:[edi],al
  413f5c:	cmp    DWORD PTR ds:0xef82c77f,ebx
  413f62:	test   al,0x2f
  413f64:	call   0xbd3fa2ac
  413f69:	nop
  413f6a:	popa   
  413f6b:	std    
  413f6c:	jmp    0x7c3f:0x335d3a46
  413f73:	fcomp  QWORD PTR [ecx-0x5ea0d126]
  413f79:	mov    dl,0x64
  413f7b:	or     DWORD PTR [si-0x7a4],ebp
  413f80:	mov    al,0xca
  413f82:	xchg   ecx,eax
  413f83:	add    esp,eax
  413f85:	popa   
  413f86:	and    dh,dh
  413f88:	ja     0x413fa6
  413f8a:	mov    ebp,0xb7d41fba
  413f8f:	lock in eax,dx
  413f91:	mov    ds:0xfffdfe31,al
  413f96:	and    BYTE PTR [esi+0x5143ad30],ch
  413f9c:	inc    ebp
  413f9d:	(bad)  
  413f9e:	lods   eax,DWORD PTR ds:[esi]
  413f9f:	xrelease xchg BYTE PTR ds:0x2a7,al
  413fa5:	adc    cl,al
  413fa7:	push   ecx
  413fa8:	stc    
  413fa9:	jnp    0x413fc4
  413fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fac:	jae    0x413f2f
  413fae:	or     eax,DWORD PTR [ebx]
  413fb0:	inc    esi
  413fb1:	sub    dl,ah
  413fb3:	mov    ecx,edi
  413fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb6:	xor    al,0x77
  413fb8:	sbb    eax,0xd7476ad5
  413fbd:	test   al,0xaa
  413fbf:	mov    ch,ah
  413fc1:	test   eax,0x8933ccdb
  413fc6:	iret   
  413fc7:	hlt    
  413fc8:	add    DWORD PTR [ebx-0x2f717e36],ebx
  413fce:	sub    al,BYTE PTR [ebx-0x5b]
  413fd1:	jmp    0x413f64
  413fd3:	(bad)  
  413fd4:	pop    ebx
  413fd5:	nop
  413fd6:	sbb    bh,bl
  413fd8:	ror    BYTE PTR [ecx-0x53],cl
  413fdb:	adc    al,BYTE PTR [edx+ebp*8-0x1]
  413fdf:	fldenv fs:[ebx]
  413fe2:	add    eax,ecx
  413fe4:	fwait
  413fe5:	outs   dx,DWORD PTR ds:[esi]
  413fe6:	les    esp,FWORD PTR [esi]
  413fe8:	aam    0x3d
  413fea:	retf   
  413feb:	sbb    DWORD PTR [ebx],edx
  413fed:	jae    0x41401c
  413fef:	mov    ds:0x56fef372,eax
  413ff4:	xchg   edi,eax
  413ff5:	push   ebp
  413ff6:	dec    edx
  413ff7:	cmc    
  413ff8:	int    0xd
  413ffa:	das    
  413ffb:	ret    0x99f4
  413ffe:	dec    ebx
  413fff:	(bad)  
  414000:	fcmovnbe st,st(6)
  414002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414003:	in     eax,dx
  414004:	arpl   WORD PTR [ecx-0xd089a40],si
  41400a:	nop
  41400b:	mov    bh,0xa8
  41400d:	(bad)  
  41400e:	fld    DWORD PTR [ebp+edi*8-0x5d]
  414012:	push   cs
  414013:	pop    ds
  414014:	pop    es
  414015:	mov    ebp,0x6af3b6d6
  41401a:	mov    gs,WORD PTR [ecx+0x6b]
  41401d:	into   
  41401e:	sbb    BYTE PTR [edx],ah
  414020:	cdq    
  414021:	push   0x6e404b2a
  414026:	aas    
  414027:	jae    0x413fe7
  414029:	push   cs
  41402a:	imul   esp,DWORD PTR [ebx+ecx*8],0x65
  41402e:	movntps XMMWORD PTR [ebp-0x6af5bf6],xmm5
  414035:	xchg   ebp,eax
  414036:	ficom  DWORD PTR [edx+0x55]
  414039:	dec    esi
  41403a:	push   edx
  41403b:	push   es
  41403c:	test   BYTE PTR [edi-0x6e],0xe1
  414040:	stc    
  414041:	call   0x16a7:0xcdbcc480
  414048:	ret    
  414049:	test   DWORD PTR [eax],ebx
  41404b:	scas   al,BYTE PTR es:[edi]
  41404c:	cmp    bl,BYTE PTR cs:[esp+ebx*1-0x18cb56e8]
  414054:	mov    eax,ds:0xdf4dfea8
  414059:	adc    ah,BYTE PTR [eax-0x59]
  41405c:	push   0x77e21d7e
  414061:	dec    esp
  414062:	lds    eax,FWORD PTR [eax+edx*8]
  414065:	xchg   edi,eax
  414066:	leave  
  414067:	inc    ebp
  414068:	jmp    0x704:0x5fb56fc0
  41406f:	xchg   ecx,eax
  414070:	xchg   esi,eax
  414071:	jb     0x4140f0
  414073:	mov    bh,0xa5
  414075:	add    DWORD PTR [edi+0x2c04580],esp
  41407b:	pop    edi
  41407c:	xchg   edx,eax
  41407d:	cmp    BYTE PTR [ecx+0x32],bh
  414080:	mov    bl,0x73
  414082:	cmp    DWORD PTR [esi-0x3e940002],edi
  414088:	leave  
  414089:	test   BYTE PTR [edi-0x3e],0x2c
  41408d:	ss cld 
  41408f:	push   ds
  414090:	mov    ecx,0xa8080435
  414095:	pop    es
  414096:	mov    eax,0x858f1f78
  41409b:	pop    ebp
  41409c:	add    eax,0xa070f986
  4140a1:	adc    eax,DWORD PTR [ebx-0x78]
  4140a4:	push   ecx
  4140a5:	sub    bh,BYTE PTR [esp+ecx*1+0xdf56875]
  4140ac:	dec    ebx
  4140ad:	mov    eax,ds:0xf8dd5153
  4140b2:	pop    eax
  4140b3:	in     al,0xcb
  4140b5:	sbb    ebx,DWORD PTR [edx]
  4140b7:	sbb    ebp,DWORD PTR [edi+ebp*1]
  4140ba:	cs inc esp
  4140bc:	push   eax
  4140bd:	push   0x1d63e89a
  4140c2:	fld    TBYTE PTR [eax]
  4140c4:	add    eax,0xbe45fe88
  4140c9:	push   eax
  4140ca:	adc    DWORD PTR [edx],0xffffffbc
  4140cd:	bound  ebp,QWORD PTR [ebp-0x30]
  4140d0:	jae    0x414084
  4140d2:	loope  0x41412f
  4140d4:	adc    BYTE PTR [edi],0xe0
  4140d7:	aas    
  4140d8:	rcr    edi,0x9e
  4140db:	sbb    DWORD PTR [esi+0x6fd9c233],esp
  4140e1:	adc    eax,0xd3bf14f1
  4140e6:	adc    BYTE PTR [edx+0x6ccf6e42],ah
  4140ec:	scas   al,BYTE PTR es:[edi]
  4140ed:	xchg   DWORD PTR [ecx+0x5ab69155],esp
  4140f3:	scas   al,BYTE PTR es:[edi]
  4140f4:	xchg   DWORD PTR [edx-0x14],ecx
  4140f7:	shr    BYTE PTR [ebx-0x58ef2682],0x0
  4140fe:	mov    WORD PTR [ebp-0x4783d63e],gs
  414104:	sbb    edi,DWORD PTR [esi-0x3319d586]
  41410a:	inc    DWORD PTR [edi+0x7f12b033]
  414110:	out    0xbe,al
  414112:	pop    esp
  414113:	or     ah,dh
  414115:	jge    0x414166
  414117:	xchg   ecx,eax
  414118:	out    dx,al
  414119:	sysexit 
  41411b:	xor    ebx,DWORD PTR [eax+edi*8+0x3c6e75b6]
  414122:	int    0xdb
  414124:	pop    ecx
  414125:	lods   eax,DWORD PTR ds:[esi]
  414126:	stos   BYTE PTR es:[edi],al
  414127:	mov    bl,BYTE PTR [esi-0xc]
  41412a:	mov    bl,0x3b
  41412c:	stos   BYTE PTR es:[edi],al
  41412d:	into   
  41412e:	scas   eax,DWORD PTR es:[edi]
  41412f:	stos   BYTE PTR es:[edi],al
  414130:	fisttp QWORD PTR [edi]
  414132:	jmp    0x455c:0x8dc84c87
  414139:	or     BYTE PTR es:[edi+0x493cc6a4],0x2
  414141:	mov    edx,0x3f05cc0c
  414146:	sbb    eax,ecx
  414148:	add    al,BYTE PTR [ecx+ebx*4]
  41414b:	xchg   ecx,eax
  41414c:	jl     0x41418a
  41414e:	js     0x414172
  414150:	mov    esp,0x23409cb0
  414155:	jl     0x41416c
  414157:	push   edi
  414158:	xchg   edi,eax
  414159:	mov    eax,0x18b879b
  41415e:	addr16 xchg esp,eax
  414160:	pop    ss
  414161:	fisubr WORD PTR [ebx+0x336d1902]
  414167:	xchg   ebx,esp
  414169:	call   0x66aa0e7d
  41416e:	ss call 0x4ea8bb5e
  414174:	les    edx,FWORD PTR [esi]
  414176:	ret    
  414177:	jbe    0x414125
  414179:	xchg   ecx,eax
  41417a:	mov    DWORD PTR [eax],0xab43c324
  414180:	bound  esp,QWORD PTR [edx-0x4e]
  414183:	rcl    BYTE PTR [ecx+0xd],cl
  414186:	mov    al,ds:0x71657398
  41418b:	inc    eax
  41418c:	sbb    eax,0x16e8eaac
  414191:	mov    esp,0xfbefd19f
  414196:	ins    DWORD PTR es:[edi],dx
  414197:	sbb    BYTE PTR [esi-0x159be0f3],dl
  41419d:	and    dh,ch
  41419f:	ret    
  4141a0:	cmp    al,0xe5
  4141a2:	xchg   ebp,eax
  4141a3:	push   cs
  4141a4:	jmp    0x41416a
  4141a6:	xchg   ebp,eax
  4141a7:	idiv   BYTE PTR [ecx]
  4141a9:	dec    edx
  4141aa:	mov    ebp,0xb74bce38
  4141af:	mov    ds:0x86b4d53d,eax
  4141b4:	sbb    BYTE PTR ds:0xc8a7d7cd,ah
  4141ba:	add    eax,0x471759e9
  4141bf:	lahf   
  4141c0:	repnz dec ebx
  4141c2:	cmp    DWORD PTR [ecx],ecx
  4141c4:	jno    0x4141ca
  4141c6:	dec    edi
  4141c7:	test   BYTE PTR [ebp-0x33],dl
  4141ca:	div    DWORD PTR [ecx-0x20]
  4141cd:	xor    edx,DWORD PTR [esp+eiz*2+0x17855753]
  4141d4:	push   eax
  4141d5:	call   0x3f67:0x1c89c6ca
  4141dc:	sub    ebp,DWORD PTR [edi+esi*1-0x60]
  4141e0:	(bad)  
  4141e1:	out    0xc9,eax
  4141e3:	and    BYTE PTR [esi+0x66fbf971],0x53
  4141ea:	push   ebp
  4141eb:	and    eax,0x6afc80f7
  4141f0:	iret   
  4141f1:	pop    ecx
  4141f2:	dec    esp
  4141f3:	push   ds
  4141f4:	and    al,0x76
  4141f6:	out    dx,al
  4141f7:	dec    esp
  4141f8:	and    edi,DWORD PTR [edi+0x67]
  4141fb:	mov    BYTE PTR [ecx+edi*8],dh
  4141fe:	xchg   ecx,eax
  4141ff:	add    bh,BYTE PTR [eax-0x200e53ff]
  414205:	mov    esi,0xea5478ac
  41420a:	adc    DWORD PTR [ebx-0x78],ecx
  41420d:	xlat   BYTE PTR ds:[ebx]
  41420e:	bound  ebp,QWORD PTR [ebx-0x2b]
  414211:	add    eax,0xc89cb18
  414216:	inc    esi
  414217:	arpl   WORD PTR [ebx-0xda52344],di
  41421d:	xchg   DWORD PTR [ecx+0x6a02c1c2],eax
  414223:	iret   
  414224:	fst    st(2)
  414226:	xor    al,0x2b
  414228:	jl     0x414233
  41422a:	inc    ebp
  41422b:	(bad)  
  41422d:	add    BYTE PTR [ebx+eax*4-0x17],0xf7
  414232:	push   0xffffffea
  414234:	les    eax,FWORD PTR [ebx+ecx*2]
  414237:	push   eax
  414238:	std    
  414239:	out    dx,al
  41423a:	mov    WORD PTR ds:0xf5094dba,ss
  414240:	stos   BYTE PTR es:[edi],al
  414241:	jecxz  0x4141ee
  414243:	mov    ah,0xa8
  414245:	pop    esp
  414246:	mov    ds:0xc3f906cb,al
  41424b:	shr    BYTE PTR [esi-0x458d2d25],cl
  414251:	mov    dh,0xc3
  414253:	or     BYTE PTR [edi],bl
  414255:	std    
  414256:	add    BYTE PTR [eax+0x4c75862d],ch
  41425c:	sub    eax,DWORD PTR [edi]
  41425e:	xor    eax,0x9dac5d96
  414263:	adc    BYTE PTR [ebp-0xb],dl
  414266:	push   0x98f9742e
  41426b:	jne    0x4141ff
  41426d:	ins    BYTE PTR es:[edi],dx
  41426e:	jae    0x4141fd
  414270:	jge    0x414219
  414272:	pop    edi
  414273:	inc    ecx
  414274:	jl     0x414205
  414276:	mov    BYTE PTR [edi],bh
  414278:	push   edi
  414279:	imul   esp,ebx,0x7af2c569
  41427f:	xchg   ecx,eax
  414280:	ficomp DWORD PTR [edx-0x2d166bf2]
  414286:	adc    eax,0x1076cb84
  41428b:	dec    esp
  41428c:	pushf  
  41428d:	cld    
  41428e:	mov    es,WORD PTR [edx-0x70]
  414291:	mov    edi,0x7b7ead32
  414296:	loopne 0x414221
  414298:	into   
  414299:	out    dx,eax
  41429a:	fisub  WORD PTR [edx-0x1063dfe9]
  4142a0:	push   esi
  4142a1:	push   ss
  4142a2:	ja     0x41431b
  4142a4:	gs dec edi
  4142a6:	cld    
  4142a7:	mov    bl,0xc8
  4142a9:	push   edx
  4142aa:	add    eax,0x48ff2b9d
  4142af:	dec    esi
  4142b0:	jp     0x41430c
  4142b2:	cdq    
  4142b3:	add    edi,DWORD PTR [edi+0x2a]
  4142b6:	mov    eax,0x22752401
  4142bb:	push   esp
  4142bc:	(bad)  
  4142be:	inc    edx
  4142bf:	test   DWORD PTR [ecx],esi
  4142c1:	inc    edi
  4142c2:	push   0x27419fb1
  4142c7:	pop    ss
  4142c8:	daa    
  4142c9:	xor    BYTE PTR [ebp+0x34d8127],bh
  4142cf:	cwde   
  4142d0:	jns    0x4142ad
  4142d2:	dec    esi
  4142d3:	cmp    edx,DWORD PTR [edx+eax*8+0xc]
  4142d7:	cmp    ecx,DWORD PTR [ecx]
  4142d9:	data16 mov WORD PTR [esi+0x2d0bd990],?
  4142e0:	fdivr  st,st(3)
  4142e2:	dec    esp
  4142e3:	test   DWORD PTR [eax],esi
  4142e5:	xchg   DWORD PTR [eax+0x74483fec],eax
  4142eb:	and    BYTE PTR [ecx+0x3721df74],ah
  4142f1:	scas   al,BYTE PTR es:[edi]
  4142f2:	or     ebp,edi
  4142f4:	in     eax,0xe8
  4142f6:	ret    
  4142f7:	adc    cl,dl
  4142f9:	xor    DWORD PTR [edi-0x15],eax
  4142fc:	xor    edx,esi
  4142fe:	mov    ebx,0x9bcb72f3
  414303:	jo     0x41435e
  414305:	test   al,0x2a
  414307:	out    0xcb,eax
  414309:	pop    esi
  41430a:	popf   
  41430b:	pop    eax
  41430c:	sub    al,0x4d
  41430e:	inc    edx
  41430f:	cmp    DWORD PTR [eax+0x2abca8ac],esi
  414315:	in     eax,dx
  414316:	ins    DWORD PTR es:[edi],dx
  414317:	xchg   esp,eax
  414318:	loop   0x414327
  41431a:	add    DWORD PTR [ecx],0xffffffdb
  41431d:	xchg   BYTE PTR [esi-0x199b7682],dh
  414323:	stos   DWORD PTR es:[edi],eax
  414324:	pop    ds
  414325:	(bad)  
  414326:	out    0xb2,al
  414328:	push   esp
  414329:	xchg   ecx,eax
  41432a:	dec    ecx
  41432b:	lods   eax,DWORD PTR ds:[esi]
  41432c:	adc    bh,BYTE PTR [eax]
  41432e:	dec    eax
  41432f:	xchg   DWORD PTR [ecx+0x11146307],esp
  414335:	int3   
  414336:	fs gs push 0x47
  41433a:	cld    
  41433b:	mov    dl,0xb4
  41433d:	imul   edx,DWORD PTR [edi+0x1f],0xfffffff0
  414341:	sbb    al,0x6d
  414343:	inc    eax
  414344:	cwde   
  414345:	inc    esp
  414346:	mov    ecx,0x4dce1974
  41434b:	mov    esp,0x77f29b32
  414350:	test   eax,0x93cfaf99
  414355:	mov    cs,WORD PTR [eax]
  414357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414358:	aas    
  414359:	dec    esi
  41435a:	clc    
  41435b:	and    bl,BYTE PTR [ecx+0x37]
  41435e:	and    eax,0xb8f307a
  414363:	imul   esp,DWORD PTR [eax],0xffffffe8
  414366:	repz dec edx
  414368:	mov    ah,BYTE PTR [ebx+0x18]
  41436b:	and    BYTE PTR [edi-0x11],0x7c
  41436f:	xchg   DWORD PTR [esp+edx*4],ebp
  414372:	inc    ecx
  414373:	(bad)  
  414374:	mov    ah,BYTE PTR [ebp-0x93a3124]
  41437a:	pop    es
  41437b:	shl    esi,0xef
  41437e:	xor    eax,0x50cd143f
  414383:	or     eax,0xd2a4e007
  414388:	and    DWORD PTR fs:[esi-0x7d],ebp
  41438c:	aas    
  41438d:	sahf   
  41438e:	sti    
  41438f:	in     al,dx
  414390:	add    ch,BYTE PTR [edi-0x13]
  414393:	in     eax,0xcf
  414395:	add    DWORD PTR [eax],0x30
  414398:	mov    esi,0xce71a6d5
  41439d:	sub    ch,BYTE PTR [eax+0x38]
  4143a0:	jb     0x4143cc
  4143a2:	xchg   ebp,eax
  4143a3:	push   edx
  4143a4:	xchg   ecx,eax
  4143a5:	das    
  4143a6:	addr16 sub al,0xc7
  4143a9:	push   ebp
  4143aa:	cmp    ebx,eax
  4143ac:	jecxz  0x4143f2
  4143ae:	pop    ebx
  4143af:	icebp  
  4143b0:	nop
  4143b1:	sub    eax,0x1e6d1a8f
  4143b6:	cmc    
  4143b7:	sbb    al,0xaa
  4143b9:	inc    edi
  4143ba:	dec    edx
  4143bb:	dec    edi
  4143bc:	loope  0x4143d4
  4143be:	in     eax,dx
  4143bf:	into   
  4143c0:	push   ss
  4143c1:	mov    bh,BYTE PTR [eax+0x142a7185]
  4143c7:	pop    ss
  4143c8:	cmp    bh,BYTE PTR [edi-0x12]
  4143cb:	pop    ss
  4143cc:	xchg   edx,eax
  4143cd:	ficom  DWORD PTR [ecx-0x6fdaee2e]
  4143d3:	push   ebx
  4143d4:	in     eax,0x71
  4143d6:	int    0x7f
  4143d8:	push   ds
  4143d9:	loop   0x414367
  4143db:	dec    esp
  4143dc:	neg    BYTE PTR [ebp-0x34]
  4143df:	or     eax,0x5fe85185
  4143e4:	pusha  
  4143e5:	or     BYTE PTR [esi-0x769da472],cl
  4143eb:	scas   al,BYTE PTR es:[edi]
  4143ec:	jne    0x41446b
  4143ee:	daa    
  4143ef:	mov    dl,0x43
  4143f1:	sub    eax,0x946ae857
  4143f6:	inc    esi
  4143f7:	sbb    eax,0x7f3286bc
  4143fc:	rcl    eax,cl
  4143fe:	push   ebp
  4143ff:	xor    esp,ebp
  414401:	mov    ah,0x6b
  414403:	pop    ds
  414404:	mov    cl,0x88
  414406:	or     esi,DWORD PTR [ebx-0x5c]
  414409:	iret   
  41440a:	int    0x55
  41440c:	jno    0x4143fe
  41440e:	dec    esi
  41440f:	test   DWORD PTR [ebp-0x57733484],ecx
  414415:	stos   DWORD PTR es:[edi],eax
  414416:	jp     0x414479
  414418:	mov    al,ds:0x28290bc6
  41441d:	or     DWORD PTR ds:0xa83238c9,0x4f73dd08
  414427:	punpcklwd mm0,DWORD PTR [eax-0x26f4c3f]
  41442e:	lahf   
  41442f:	fbstp  TBYTE PTR [esp+edi*1]
  414432:	dec    ecx
  414433:	cli    
  414434:	sbb    eax,0xa61e4e1
  414439:	inc    ecx
  41443a:	lock mov ecx,0xe6a8adbc
  414440:	mov    edx,0xc6a2d348
  414445:	xor    esi,DWORD PTR [esi-0x5063d792]
  41444b:	jb     0x414441
  41444d:	aas    
  41444e:	daa    
  41444f:	mov    bl,0x59
  414451:	(bad)  
  414452:	lea    ecx,[edi+0x4d5cc2ef]
  414458:	fwait
  414459:	imul   ebx,edi,0xfffffffd
  41445c:	ficomp DWORD PTR [edx]
  41445e:	push   ebx
  41445f:	inc    DWORD PTR [edx-0x6d]
  414462:	ins    DWORD PTR es:[edi],dx
  414463:	push   eax
  414464:	mov    dl,0xa4
  414466:	enter  0xc2f9,0x6c
  41446a:	inc    ebx
  41446b:	mov    esp,0xfd16fd6b
  414470:	fadd   QWORD PTR [edx+ebx*1]
  414473:	dec    eax
  414474:	ficom  DWORD PTR [ebp+0x54]
  414477:	and    esi,edx
  414479:	and    ebp,ebp
  41447b:	jge    0x4144c7
  41447d:	imul   eax,DWORD PTR [esi+eiz*4],0x72
  414481:	arpl   WORD PTR [ebx-0x5b2a42cb],bp
  414487:	pop    ecx
  414488:	and    eax,0x4a95d9c5
  41448d:	out    dx,al
  41448e:	test   DWORD PTR [esi+ebx*2+0x4f],esp
  414492:	xor    al,0x47
  414494:	in     al,0x0
  414496:	jno    0x414493
  414498:	xlat   BYTE PTR ds:[ebx]
  414499:	pop    ecx
  41449a:	mov    cl,0xee
  41449c:	mov    cs,edi
  41449e:	imul   ecx,edx,0xe512847
  4144a4:	les    ebp,FWORD PTR [edx+0x44168d97]
  4144aa:	inc    edi
  4144ab:	mov    ebp,0x2b696ed5
  4144b0:	popf   
  4144b1:	jp     0x41451d
  4144b3:	gs stc 
  4144b5:	and    al,0x74
  4144b7:	pop    ebp
  4144b8:	dec    esi
  4144b9:	sbb    DWORD PTR [esi+ebp*1+0x235c929b],0x7a
  4144c1:	ja     0x414480
  4144c3:	xor    al,0x2
  4144c5:	aas    
  4144c6:	xor    al,0xc1
  4144c8:	in     eax,dx
  4144c9:	rcl    BYTE PTR [eax-0x1b],1
  4144cc:	pushf  
  4144cd:	mov    dl,0xfc
  4144cf:	jecxz  0x414455
  4144d1:	mov    BYTE PTR [eax],ch
  4144d3:	(bad)  
  4144d4:	cld    
  4144d5:	ss jmp 0x414465
  4144d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d9:	repnz cmp esp,DWORD PTR [eax+0x26]
  4144dd:	loope  0x414464
  4144df:	ja     0x4144d9
  4144e1:	jge    0x414531
  4144e3:	jg     0x414486
  4144e5:	pushf  
  4144e6:	push   esp
  4144e7:	loop   0x4144c6
  4144e9:	ret    0x24da
  4144ec:	push   0xcdfb48ad
  4144f1:	(bad)  
  4144f2:	cwde   
  4144f3:	mov    al,dh
  4144f5:	sbb    BYTE PTR [eax],bl
  4144f7:	popw   ds
  4144f9:	je     0x4144f6
  4144fb:	sbb    eax,0xffffffa7
  4144fe:	dec    esp
  4144ff:	xchg   esi,eax
  414500:	ins    BYTE PTR es:[edi],dx
  414501:	xchg   edi,eax
  414502:	mov    ah,0x9a
  414504:	data16 (bad) 
  414506:	fcom   QWORD PTR [ebp+0x7a]
  414509:	mov    al,ds:0xe1a70366
  41450e:	shl    DWORD PTR [esi-0x31266562],1
  414514:	push   ebp
  414515:	dec    ecx
  414516:	and    cl,bh
  414518:	cmp    bl,bh
  41451a:	hlt    
  41451b:	pop    ss
  41451c:	jbe    0x41450b
  41451e:	mov    DWORD PTR [esi+0x698333b4],edi
  414524:	add    eax,0x6f2721de
  414529:	frstor [ecx+ebx*1+0x2d78ca7d]
  414530:	in     al,0xb7
  414532:	ja     0x414522
  414534:	mov    DWORD PTR [edi],0x41b963ac
  41453a:	pop    ds
  41453b:	push   0xffffffee
  41453d:	scas   eax,DWORD PTR es:[edi]
  41453e:	imul   ecx,DWORD PTR ds:0x303cacdc,0xcd876055
  414548:	push   edx
  414549:	inc    edx
  41454a:	mov    edi,0x8ac26b7c
  41454f:	(bad)  
  414550:	or     esi,DWORD PTR [ecx-0x60c18748]
  414556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414557:	pushf  
  414558:	mov    dh,0xe
  41455a:	dec    esi
  41455b:	or     DWORD PTR [eax+ecx*1-0x6a2ac0c1],0x5f676192
  414566:	add    eax,0x6cc8c9bd
  41456b:	mov    ds:0x59d8d58d,eax
  414570:	scas   al,BYTE PTR es:[edi]
  414571:	stc    
  414572:	cmp    DWORD PTR [ebx-0x3ea12d55],ebp
  414578:	xchg   ecx,eax
  414579:	test   eax,0xc5979090
  41457e:	jmp    0x98400865
  414583:	mov    esi,0x688c5395
  414588:	lahf   
  414589:	iret   
  41458a:	or     eax,0x748037a8
  41458f:	ret    
  414590:	jge    0x4145dd
  414592:	mov    ch,0xc8
  414594:	lods   al,BYTE PTR ds:[esi]
  414595:	test   DWORD PTR [ebp+0x1e],edi
  414598:	repnz and BYTE PTR [eax+0xcd0e9b9],bl
  41459f:	(bad)  [ecx+0x3bca7641]
  4145a5:	sahf   
  4145a6:	adc    cl,BYTE PTR [ecx-0x4eb1951c]
  4145ac:	stos   BYTE PTR es:[edi],al
  4145ad:	data16 sbb bl,dl
  4145b0:	ss les esp,FWORD PTR ss:[ebx+0x10fb8807]
  4145b8:	test   eax,0x2acc424f
  4145bd:	mov    esp,0x5b4c290e
  4145c2:	or     al,0x1a
  4145c4:	inc    edx
  4145c5:	adc    DWORD PTR [ecx+ebx*2],eax
  4145c8:	inc    esi
  4145c9:	push   0x6
  4145cb:	popf   
  4145cc:	push   ds
  4145cd:	(bad)  
  4145ce:	adc    ch,BYTE PTR [eax+edi*8+0x25]
  4145d2:	or     al,0x32
  4145d4:	dec    eax
  4145d5:	xor    al,0x8c
  4145d7:	pop    ecx
  4145d8:	test   al,al
  4145da:	inc    ecx
  4145db:	jecxz  0x4145b3
  4145dd:	imul   ebp,DWORD PTR [ebx-0x787676],0x582862b
  4145e7:	(bad)  
  4145e8:	mov    esi,ecx
  4145ea:	mov    bh,0x6e
  4145ec:	jmp    0x414623
  4145ee:	shl    BYTE PTR [ebx+0x329f220d],cl
  4145f4:	inc    edx
  4145f5:	adc    ebp,DWORD PTR [esp+ebp*4]
  4145f8:	or     DWORD PTR [eax+ebp*4+0x4b],0xffffffb7
  4145fd:	or     dh,BYTE PTR [esi+edi*2]
  414600:	xchg   BYTE PTR [ebx-0x2d85f814],bh
  414606:	out    0x4,al
  414608:	imul   edi,DWORD PTR [ecx-0x3f],0x220643fe
  41460f:	dec    ebx
  414610:	outs   dx,BYTE PTR ds:[esi]
  414611:	dec    esp
  414612:	push   esi
  414613:	lock inc ebp
  414615:	add    BYTE PTR [edx+eax*2+0x44e0f6f7],0xac
  41461d:	mov    eax,ds:0x52db9ffb
  414622:	rcr    BYTE PTR [edx+0x52e6ae50],1
  414628:	dec    esi
  414629:	int    0x7d
  41462b:	clc    
  41462c:	add    esp,DWORD PTR [ebx-0x4ffcb3bc]
  414632:	cdq    
  414633:	add    al,0xb9
  414635:	and    al,0xc7
  414637:	jl     0x414694
  414639:	(bad)  
  41463a:	cmp    al,cl
  41463c:	xor    eax,0xb51cdc52
  414641:	pop    esp
  414642:	sub    eax,DWORD PTR [eax]
  414644:	sbb    dh,BYTE PTR [eax+ebp*1]
  414647:	dec    esi
  414648:	repz call 0x199a:0xa33a2374
  414650:	gs inc ebx
  414652:	nop
  414653:	jae    0x414627
  414655:	sub    ch,BYTE PTR [edi]
  414657:	mov    WORD PTR fs:[ebx],cs
  41465a:	mov    esp,0xff2719cd
  41465f:	cdq    
  414660:	hlt    
  414661:	mov    ds:0xcfcc8740,eax
  414666:	push   ebp
  414667:	xchg   edi,eax
  414668:	cmc    
  414669:	neg    DWORD PTR [ebx]
  41466b:	dec    edi
  41466c:	push   es
  41466d:	test   DWORD PTR [esi-0xa2d98d7],ebp
  414673:	scas   eax,DWORD PTR es:[edi]
  414674:	aad    0xeb
  414676:	xchg   ecx,eax
  414677:	jge    0x414641
  414679:	ins    BYTE PTR es:[edi],dx
  41467a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467b:	(bad)
  41467f:	out    0xee,al
  414681:	sub    ah,ch
  414683:	mov    dh,0x25
  414685:	scas   eax,DWORD PTR es:[edi]
  414686:	jle    0x4146df
  414688:	cdq    
  414689:	adc    al,0xab
  41468b:	pop    esp
  41468c:	mov    dh,0x91
  41468e:	loop   0x4146c9
  414690:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414692:	pop    edx
  414693:	fimul  WORD PTR ds:0x70bff950
  414699:	and    bl,BYTE PTR [esi+0x30]
  41469c:	idiv   BYTE PTR [eax+ebx*2-0x38227754]
  4146a3:	jle    0x4146fc
  4146a5:	inc    ebp
  4146a6:	mov    ecx,0xd4cf94c7
  4146ab:	mov    esi,es
  4146ad:	push   ebx
  4146ae:	mov    DWORD PTR [ecx],ecx
  4146b0:	cs push ecx
  4146b2:	pop    esp
  4146b3:	xchg   ecx,eax
  4146b4:	aaa    
  4146b5:	add    eax,esp
  4146b7:	jge    0x414713
  4146b9:	adc    BYTE PTR [ebp-0x63],dh
  4146bc:	stos   DWORD PTR es:[edi],eax
  4146bd:	or     dl,ch
  4146bf:	mul    BYTE PTR [ebp-0x7c]
  4146c2:	lods   eax,DWORD PTR ds:[esi]
  4146c3:	fistp  WORD PTR [ebp+0x34c95d68]
  4146c9:	test   DWORD PTR [esi-0x21d228f5],ecx
  4146cf:	int3   
  4146d0:	add    al,0x22
  4146d2:	sti    
  4146d3:	mov    eax,0xd11277ae
  4146d8:	cli    
  4146d9:	jo     0x414748
  4146db:	sbb    ebx,ebx
  4146dd:	and    bp,WORD PTR [esi-0x17290b56]
  4146e4:	cs jmp 0xa14e:0xff1f3039
  4146ec:	mov    ah,0xbf
  4146ee:	or     al,0xa6
  4146f0:	ret    0x3f91
  4146f3:	loope  0x414676
  4146f5:	cmp    eax,0x58cfc02b
  4146fa:	(bad)  
  4146fb:	addr16 addr16 pop esp
  4146fe:	popa   
  4146ff:	or     esi,ecx
  414701:	cld    
  414702:	add    bh,ah
  414704:	into   
  414705:	jo     0x4146fe
  414707:	push   ss
  414708:	je     0x41471c
  41470a:	inc    esp
  41470b:	sahf   
  41470c:	(bad)  
  41470d:	mov    ebx,0x196fa2ba
  414712:	mov    eax,ds:0x8e2d743e
  414717:	xchg   ebp,eax
  414718:	in     al,dx
  414719:	sar    BYTE PTR [ebx+0x3b],1
  41471c:	push   ebx
  41471d:	adc    cl,dh
  41471f:	mov    ecx,0xb4dcf87d
  414724:	stos   DWORD PTR es:[edi],eax
  414725:	dec    esp
  414726:	int    0x8c
  414728:	imul   esp,DWORD PTR [eax+0x7d9437a0],0xa682a7f9
  414732:	sbb    bh,BYTE PTR [ebp-0x58]
  414735:	push   ebx
  414736:	xchg   ebx,eax
  414737:	pop    edx
  414738:	pop    ebp
  414739:	dec    edx
  41473a:	int    0x12
  41473c:	js     0x414778
  41473e:	mov    ds:0x67e6724e,eax
  414743:	pusha  
  414744:	enter  0xd5c0,0x75
  414748:	jb     0x4147bb
  41474a:	fistp  QWORD PTR [ecx+0x42]
  41474d:	popf   
  41474e:	xor    bh,BYTE PTR [edx-0x4706f297]
  414754:	imul   edi,DWORD PTR [ecx+0x50a25d34],0xffffff95
  41475b:	nop
  41475c:	mov    bl,0x55
  41475e:	cs pushf 
  414760:	in     eax,0xb4
  414762:	retf   
  414763:	enter  0x34dc,0x59
  414767:	leave  
  414768:	mov    BYTE PTR [eax],bl
  41476a:	ret    
  41476b:	and    edi,DWORD PTR [ebx+0x75755af4]
  414771:	and    al,BYTE PTR [edx]
  414773:	xchg   ebp,eax
  414774:	cmp    eax,0x22abea26
  414779:	loop   0x4147bb
  41477b:	bound  eax,QWORD PTR [bx+0x6f]
  41477f:	jl     0x414768
  414781:	daa    
  414782:	jns    0x414750
  414784:	clc    
  414785:	enter  0x21a,0x64
  414789:	in     al,0x79
  41478b:	dec    edi
  41478c:	cdq    
  41478d:	inc    esp
  41478e:	div    DWORD PTR [edx+ebx*1+0x22]
  414792:	cmp    al,0x5b
  414794:	mov    ecx,0x3a17ebe2
  414799:	and    ch,BYTE PTR [edx+0x22]
  41479c:	(bad)  
  41479d:	jg     0x41477a
  41479f:	xor    BYTE PTR [ebp+0x28],bh
  4147a2:	jnp    0x4147ef
  4147a4:	fwait
  4147a5:	mov    cl,0xad
  4147a7:	neg    BYTE PTR [ebx+0x5bd31bbf]
  4147ad:	(bad)  
  4147ae:	jl     0x41479a
  4147b0:	pop    ecx
  4147b1:	enter  0x23c9,0xf5
  4147b5:	add    ch,BYTE PTR [eax+0x661a6303]
  4147bb:	inc    ebx
  4147bc:	fisubr DWORD PTR [ebp-0x2ba97b22]
  4147c2:	xchg   edx,eax
  4147c3:	and    esp,0x73
  4147c6:	test   al,0xaf
  4147c8:	mov    al,0x98
  4147ca:	leave  
  4147cb:	pop    ecx
  4147cc:	adc    al,0x99
  4147ce:	icebp  
  4147cf:	lahf   
  4147d0:	scas   eax,DWORD PTR es:[edi]
  4147d1:	push   ds
  4147d2:	xchg   ebx,eax
  4147d3:	cmp    al,0xa6
  4147d5:	xor    ecx,DWORD PTR [esi+ecx*8]
  4147d8:	pop    ebp
  4147d9:	mov    cl,0x66
  4147db:	jnp    0x414771
  4147dd:	mov    ds:0x17d7538a,al
  4147e2:	pop    edx
  4147e3:	jae    0x414830
  4147e5:	sbb    eax,0xcfed214c
  4147ea:	mov    DWORD PTR [ecx-0x15],edi
  4147ed:	jns    0x414773
  4147ef:	jno    0x4147c1
  4147f1:	scas   al,BYTE PTR es:[edi]
  4147f2:	cld    
  4147f3:	push   ebx
  4147f4:	jmp    0xe8468c6a
  4147f9:	in     eax,0xf0
  4147fb:	pushf  
  4147fc:	cmp    BYTE PTR [edi+0x63702729],bh
  414802:	pushf  
  414803:	out    dx,eax
  414804:	loop   0x4147a8
  414806:	retf   
  414807:	aaa    
  414808:	xor    edx,edx
  41480a:	xor    al,0xcd
  41480c:	xchg   BYTE PTR [esi-0x57],bl
  41480f:	cmp    ebx,DWORD PTR [eax]
  414811:	or     BYTE PTR [ebp+0x6c],cl
  414814:	push   0x6f
  414816:	pop    eax
  414817:	pop    eax
  414818:	cmp    dh,dl
  41481a:	fcom   DWORD PTR [edi-0x6da0f98a]
  414820:	fidiv  WORD PTR [esi+0x4907521d]
  414826:	adc    edi,DWORD PTR [edx-0xf]
  414829:	mov    bl,0x96
  41482b:	pop    ds
  41482c:	mov    cl,0x80
  41482e:	ret    
  41482f:	push   eax
  414830:	adc    al,0xe5
  414832:	inc    ebx
  414834:	mov    ecx,0x1ae5ec7e
  414839:	adc    esp,edx
  41483b:	pop    edx
  41483c:	repz iret 
  41483e:	push   esp
  41483f:	aad    0xe6
  414841:	pop    ebp
  414842:	sub    BYTE PTR [eax+esi*4],0xcc
  414846:	fistp  QWORD PTR ss:[edi+0x18]
  41484a:	dec    ebx
  41484b:	sub    edx,DWORD PTR [ecx-0x4d]
  41484e:	add    al,0x22
  414850:	popa   
  414851:	push   cs
  414852:	add    BYTE PTR [ebx],dh
  414854:	mov    DWORD PTR [esi],edx
  414856:	add    ch,BYTE PTR [edi+0x161b76e3]
  41485c:	xchg   edx,eax
  41485d:	or     al,0x40
  41485f:	in     eax,0xd4
  414861:	sbb    al,0xc0
  414863:	xchg   bh,ah
  414865:	test   al,0x2b
  414867:	les    edi,FWORD PTR [eax+0x48]
  41486a:	sbb    DWORD PTR [edi+esi*1],edi
  41486d:	mov    dh,0x55
  41486f:	fstp   QWORD PTR gs:[ebp+edx*1-0x49]
  414874:	jmp    0x4148ec
  414876:	rol    ecx,1
  414878:	mov    esi,0x5e556fd8
  41487d:	lds    edx,FWORD PTR [edi-0x729d2d4c]
  414883:	loop   0x414882
  414885:	add    ebx,DWORD PTR [edi-0x6f5d604b]
  41488b:	mov    eax,esp
  41488d:	mov    al,0xff
  41488f:	dec    ebp
  414890:	lds    ebp,FWORD PTR [edx+0x40255af4]
  414896:	sbb    eax,0x4422830c
  41489b:	sahf   
  41489c:	cmpxchg DWORD PTR [edi+0x4256b102],edx
  4148a3:	xor    al,0x10
  4148a5:	push   0x5e2a7795
  4148aa:	push   ebx
  4148ab:	daa    
  4148ac:	dec    ecx
  4148ad:	xchg   ebx,eax
  4148ae:	int    0xed
  4148b0:	lock sbb ebx,esi
  4148b3:	imul   ecx,DWORD PTR [edx],0xffffff8c
  4148b6:	sbb    BYTE PTR ds:[edx],bl
  4148b9:	in     al,0x80
  4148bb:	into   
  4148bc:	xor    eax,0xc45faa08
  4148c1:	push   0x5f07e32b
  4148c6:	repz or BYTE PTR [edx+edx*1-0x57a6bd35],dh
  4148ce:	scas   eax,DWORD PTR es:[edi]
  4148cf:	out    dx,eax
  4148d0:	cli    
  4148d1:	pop    esi
  4148d2:	jg     0x414935
  4148d4:	shl    DWORD PTR [ebx],1
  4148d6:	pop    edx
  4148d7:	push   eax
  4148d8:	in     eax,dx
  4148d9:	dec    edi
  4148da:	sub    ah,bh
  4148dc:	arpl   WORD PTR [ecx+0x64],ax
  4148df:	push   ebp
  4148e0:	fwait
  4148e1:	ss (bad) 
  4148e3:	sbb    DWORD PTR [ecx+0x47],esp
  4148e6:	in     al,0xe3
  4148e8:	cli    
  4148e9:	fbld   TBYTE PTR [edi-0x4a]
  4148ec:	adc    dl,BYTE PTR [esp+eiz*8-0x59]
  4148f0:	fisttp DWORD PTR [ecx+ecx*1+0x3f32122a]
  4148f7:	out    0x93,al
  4148f9:	cmp    al,0x18
  4148fb:	das    
  4148fc:	mov    ds:0xfe538552,eax
  414901:	jle    0x4148fd
  414903:	inc    esp
  414904:	pop    ebp
  414905:	mov    ds,WORD PTR [ecx]
  414907:	jmp    0x106c:0xe41bcebe
  41490e:	imul   edx,esi,0x53
  414911:	pop    eax
  414912:	or     cl,BYTE PTR [edi+0x45]
  414915:	enter  0xbc7b,0x27
  414919:	mov    cl,BYTE PTR [ebx-0x48]
  41491c:	aam    0x46
  41491e:	sti    
  41491f:	ins    DWORD PTR es:[edi],dx
  414920:	sbb    ch,BYTE PTR [ebp-0x656a5975]
  414926:	pop    ss
  414927:	sub    bl,BYTE PTR [eax]
  414929:	out    0x6d,eax
  41492b:	xchg   ebx,eax
  41492c:	sub    bl,BYTE PTR [edi-0x66]
  41492f:	nop
  414930:	dec    ebp
  414931:	jmp    0x4148fa
  414933:	out    0x2d,eax
  414935:	mov    esi,0xe7fb98df
  41493a:	fs mov bh,0xef
  41493d:	pop    eax
  41493e:	scas   eax,DWORD PTR es:[edi]
  41493f:	ins    DWORD PTR es:[edi],dx
  414940:	mov    edx,0x3b2bd9cc
  414945:	mov    bl,0x7
  414947:	xchg   BYTE PTR [eax+edx*8+0x7c3eab51],dl
  41494e:	or     DWORD PTR [eax],ecx
  414950:	mov    DWORD PTR [edi-0x57],esi
  414953:	lds    eax,FWORD PTR [ecx+0x6d63ab19]
  414959:	(bad)  
  41495a:	fcmovne st,st(5)
  41495c:	jns    0x41492d
  41495e:	mov    WORD PTR [eax+0x192c1f8],?
  414964:	pop    ds
  414965:	sub    edx,ebp
  414967:	ds fs loope 0x414946
  41496b:	(bad)  
  41496d:	mov    dh,0xab
  41496f:	imul   ecx,DWORD PTR [esi+ebp*8+0x35e1ccb1],0xd46a1bd5
  41497a:	xor    esp,eax
  41497c:	es pop ds
  41497e:	outs   dx,DWORD PTR ds:[esi]
  41497f:	xlat   BYTE PTR gs:[ebx]
  414981:	mov    fs,ebp
  414983:	add    al,0x39
  414985:	(bad)  
  414986:	ins    DWORD PTR es:[edi],dx
  414987:	das    
  414988:	lds    eax,FWORD PTR [ebx+0x3a]
  41498b:	call   0x56db:0xfd8e3def
  414992:	aam    0x2c
  414994:	ds and al,ch
  414997:	sub    al,0xba
  414999:	xor    eax,0x6adc58ec
  41499e:	jnp    0x414a1d
  4149a0:	loope  0x4149d5
  4149a2:	push   edx
  4149a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a4:	and    bl,ch
  4149a6:	lods   al,BYTE PTR ds:[esi]
  4149a8:	mov    ch,BYTE PTR [ecx+0x35]
  4149ab:	inc    ebp
  4149ac:	xor    eax,0x87edb543
  4149b1:	ficom  DWORD PTR [edx]
  4149b3:	mov    edx,0x1c35daea
  4149b8:	cwde   
  4149b9:	push   esp
  4149ba:	pop    ss
  4149bb:	and    esi,ebx
  4149bd:	ss dec ecx
  4149bf:	jns    0x414a1a
  4149c1:	mov    al,ds:0x744c1bfc
  4149c6:	int3   
  4149c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c8:	sbb    dl,BYTE PTR [edi+0x62]
  4149cb:	out    dx,al
  4149cc:	adc    cl,ch
  4149ce:	push   eax
  4149cf:	inc    edx
  4149d0:	(bad)  
  4149d1:	pop    ss
  4149d2:	leave  
  4149d3:	mov    esp,0xecac72ed
  4149d8:	(bad)  
  4149d9:	jbe    0x414a00
  4149db:	retf   
  4149dc:	stos   DWORD PTR es:[edi],eax
  4149dd:	test   eax,0x9c6a05ba
  4149e2:	retf   0x511a
  4149e5:	jecxz  0x414a09
  4149e7:	mov    ecx,ecx
  4149e9:	lahf   
  4149ea:	leave  
  4149eb:	pushf  
  4149ec:	mov    esp,0xd2171844
  4149f1:	cmc    
  4149f2:	cdq    
  4149f3:	mov    ?,WORD PTR [esi+0x225ab3d]
  4149f9:	sbb    DWORD PTR [ebx-0x75],esi
  4149fc:	xor    ebx,eax
  4149fe:	or     al,0xf5
  414a00:	mov    dl,0x2a
  414a02:	icebp  
  414a03:	inc    esp
  414a04:	xchg   esi,eax
  414a05:	xor    DWORD PTR [eax+0xe],ebp
  414a08:	adc    edi,ebx
  414a0a:	push   0xffffffa7
  414a0c:	inc    ebp
  414a0d:	xor    al,0x29
  414a0f:	sar    ch,1
  414a11:	pop    es
  414a12:	ret    
  414a13:	push   es
  414a14:	(bad)  
  414a15:	mov    BYTE PTR [esi-0x68cb6d14],0x3
  414a1c:	adc    al,0x39
  414a1e:	xor    BYTE PTR [ebx+0x1],cl
  414a21:	sub    cl,BYTE PTR fs:[ebx+edx*1-0x4d]
  414a26:	popf   
  414a27:	dec    ebx
  414a28:	outs   dx,DWORD PTR ds:[esi]
  414a29:	stc    
  414a2a:	aad    0x27
  414a2c:	mov    WORD PTR [esi+0x34],?
  414a2f:	test   edi,ecx
  414a31:	nop
  414a32:	push   0x3e
  414a34:	jno    0x414a85
  414a36:	mov    WORD PTR [edi+0x54],?
  414a39:	or     BYTE PTR [eax+0x24608d45],bh
  414a3f:	stos   BYTE PTR es:[edi],al
  414a40:	add    cl,BYTE PTR [esi-0x13c49e8b]
  414a46:	int    0x86
  414a48:	jns    0x414a50
  414a4a:	jae    0x414a86
  414a4c:	in     eax,0xa5
  414a4e:	repz int 0xdb
  414a51:	ja     0x414a7a
  414a53:	das    
  414a54:	sub    BYTE PTR [edi+eax*1-0x2a62487d],dh
  414a5b:	or     BYTE PTR [ebp+0x34d73a52],bl
  414a61:	or     dh,BYTE PTR [edx+ecx*4+0x4757de5a]
  414a68:	xchg   esi,eax
  414a69:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a6b:	test   al,0xf2
  414a6d:	in     eax,0x3e
  414a6f:	dec    eax
  414a70:	xchg   ecx,eax
  414a71:	mov    dh,0x58
  414a73:	loop   0x414a0d
  414a75:	jnp    0x414ae2
  414a77:	daa    
  414a78:	sub    eax,0x5632dd44
  414a7d:	xchg   edi,eax
  414a7e:	xchg   esp,eax
  414a7f:	aas    
  414a80:	outs   dx,DWORD PTR ds:[esi]
  414a81:	out    dx,al
  414a82:	mov    esi,0xddc436ca
  414a87:	out    0x12,al
  414a89:	gs jnp 0x414ade
  414a8c:	mov    eax,0x7d9ca425
  414a91:	add    esp,esp
  414a93:	sbb    edx,DWORD PTR [edi+0x1b0dd109]
  414a99:	dec    eax
  414a9a:	lahf   
  414a9b:	je     0x414aeb
  414a9d:	fwait
  414a9e:	mov    DWORD PTR [esi-0x40],edi
  414aa1:	sbb    eax,0x3feca313
  414aa6:	xchg   esp,eax
  414aa7:	and    esp,ebp
  414aa9:	jno    0x414ac6
  414aab:	mov    dl,0x18
  414aad:	and    bl,BYTE PTR [edx-0x659afbee]
  414ab3:	ss jl  0x414aaf
  414ab6:	das    
  414ab7:	lods   al,BYTE PTR ds:[esi]
  414ab8:	ror    BYTE PTR [edx],cl
  414aba:	aas    
  414abb:	push   esp
  414abc:	and    DWORD PTR [ebx-0x8],eax
  414abf:	dec    eax
  414ac0:	xchg   esi,eax
  414ac1:	push   ds
  414ac2:	sbb    esi,0x3b
  414ac5:	in     al,0x57
  414ac7:	clc    
  414ac8:	lock xchg DWORD PTR [ebx-0x3a37334e],edx
  414acf:	sub    ah,bl
  414ad1:	push   esp
  414ad2:	das    
  414ad3:	dec    edi
  414ad4:	ins    DWORD PTR es:[edi],dx
  414ad5:	fsubr  DWORD PTR es:[esi-0x48]
  414ad9:	add    al,0x36
  414adb:	(bad)  
  414adc:	sbb    al,0x54
  414ade:	fist   DWORD PTR [esi+0x54]
  414ae1:	add    eax,0xb0a5af8
  414ae6:	adc    eax,0x76f499c
  414aeb:	pop    es
  414aec:	paddd  mm5,QWORD PTR [ecx+0x77bde857]
  414af3:	cmp    ecx,DWORD PTR [edi+0x35]
  414af6:	dec    eax
  414af7:	jecxz  0x414ac1
  414af9:	lods   al,BYTE PTR ds:[esi]
  414afa:	lods   eax,DWORD PTR ds:[esi]
  414afb:	cs ins BYTE PTR es:[edi],dx
  414afd:	pop    edx
  414afe:	mov    ecx,0x96023e2a
  414b03:	inc    edx
  414b04:	sub    eax,0x96e0a96
  414b09:	push   edi
  414b0a:	cmp    eax,0xb5ab3cfb
  414b0f:	cmp    BYTE PTR [edx-0x7],ch
  414b12:	sub    DWORD PTR [ebp+0x6416f722],ebx
  414b18:	mov    BYTE PTR [edi-0x5d171a80],al
  414b1e:	jb     0x414b52
  414b20:	xchg   DWORD PTR [ebx],ebp
  414b22:	or     bl,ah
  414b24:	stos   BYTE PTR es:[edi],al
  414b25:	inc    eax
  414b26:	in     al,dx
  414b27:	lea    ebp,[ebx+0x368cde04]
  414b2d:	push   ebp
  414b2e:	arpl   ax,si
  414b30:	inc    ebp
  414b31:	jmp    0xc47ec77d
  414b36:	test   BYTE PTR [esi-0x2b8b69b9],al
  414b3c:	popf   
  414b3d:	cmc    
  414b3e:	push   eax
  414b3f:	dec    esp
  414b40:	iret   
  414b41:	jne    0x414b96
  414b43:	pushf  
  414b44:	test   BYTE PTR [ecx+0x18a78151],cl
  414b4a:	addr16 jp 0x414b29
  414b4d:	and    esp,DWORD PTR [esi-0x31]
  414b50:	xor    al,0xc9
  414b52:	mov    ah,0x27
  414b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b55:	push   ds
  414b56:	push   edi
  414b57:	mov    bh,0xa3
  414b59:	mov    eax,0x6d689e43
  414b5e:	push   edi
  414b5f:	add    al,0xd9
  414b61:	push   eax
  414b62:	jb     0x414b6f
  414b64:	jae    0x414b9b
  414b66:	jb     0x414b98
  414b68:	retf   
  414b69:	pop    ebx
  414b6a:	loopne 0x414b55
  414b6c:	ret    0x4897
  414b6f:	scas   al,BYTE PTR es:[edi]
  414b70:	pushf  
  414b71:	stos   BYTE PTR es:[edi],al
  414b72:	mov    cl,0xd4
  414b74:	(bad)  
  414b75:	rol    cl,0x37
  414b78:	push   ss
  414b79:	shl    BYTE PTR [esp+eax*8+0x6b20f805],0x89
  414b81:	jo     0x414b37
  414b83:	sar    BYTE PTR [esi+0x76],0x40
  414b87:	mov    ebp,0xc7397521
  414b8c:	or     al,0x71
  414b8e:	push   eax
  414b8f:	outs   dx,BYTE PTR ds:[esi]
  414b90:	sbb    dh,BYTE PTR [ebx+edi*2-0x1c19c3e9]
  414b97:	mov    ebp,0x829b5e5e
  414b9c:	sub    ebp,esp
  414b9e:	cs mov ah,dh
  414ba1:	xchg   edx,eax
  414ba2:	jne    0x414b9b
  414ba4:	cs in  al,dx
  414ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba7:	pop    esp
  414ba8:	mov    eax,ds:0x5aee021f
  414bad:	arpl   WORD PTR [esp+ecx*1],dx
  414bb0:	test   DWORD PTR [eax],0xeb183294
  414bb6:	pop    ecx
  414bb7:	add    bh,BYTE PTR [ebx+0x9fe81eb]
  414bbd:	(bad)  
  414bbe:	or     eax,DWORD PTR [edx]
  414bc0:	je     0x414b93
  414bc2:	out    dx,eax
  414bc3:	add    eax,0x3cdeb4c7
  414bc8:	mov    eax,0xc91262cb
  414bcd:	out    dx,eax
  414bce:	fld    QWORD PTR gs:[edx+0x5fd3f860]
  414bd5:	dec    ecx
  414bd6:	and    cl,BYTE PTR [esi+0x7fa7110d]
  414bdc:	jae    0x414b76
  414bde:	xor    DWORD PTR [ecx],edx
  414be0:	xchg   esp,eax
  414be1:	bound  edx,QWORD PTR ds:0x192c22ee
  414be7:	cdq    
  414be8:	push   esi
  414be9:	addr16 mov ch,0xbd
  414bec:	and    ebp,edi
  414bee:	or     eax,DWORD PTR [esi-0x31c94ab6]
  414bf4:	loope  0x414c60
  414bf6:	add    BYTE PTR [ebx+0x133887ac],0xc0
  414bfd:	je     0x414bef
  414bff:	or     ecx,esi
  414c01:	stc    
  414c02:	scas   al,BYTE PTR es:[edi]
  414c03:	pop    ecx
  414c04:	dec    esp
  414c05:	jne    0x414b99
  414c07:	adc    DWORD PTR [ebx+edx*2],0xa257fc60
  414c0e:	mov    esp,0x80084072
  414c13:	add    ah,dh
  414c15:	fimul  WORD PTR [ebp+0x39e09bf2]
  414c1b:	jp     0x414bf4
  414c1d:	scas   al,BYTE PTR es:[edi]
  414c1e:	mov    ?,WORD PTR [esi]
  414c20:	sahf   
  414c21:	add    edi,0xffffff97
  414c24:	loop   0x414c6c
  414c26:	sbb    cl,BYTE PTR [esi*4+0x37d5554a]
  414c2d:	cmp    esp,DWORD PTR [esi+edi*4+0x3886e71e]
  414c34:	int3   
  414c35:	pop    edx
  414c36:	cmp    eax,0x1e53afe0
  414c3b:	adc    eax,0x4bcaa84b
  414c40:	in     eax,0x2
  414c42:	adc    ch,BYTE PTR [eax-0x4e6689bf]
  414c48:	mov    ebp,0xf3669b47
  414c4d:	stos   DWORD PTR es:[edi],eax
  414c4e:	cmp    cl,BYTE PTR [ebx]
  414c50:	xlat   BYTE PTR gs:[ebx]
  414c52:	test   al,0x63
  414c54:	push   0x28
  414c56:	xchg   esi,eax
  414c57:	outs   dx,DWORD PTR ds:[esi]
  414c58:	and    DWORD PTR [edx+0x13a71977],0xfa711a33
  414c62:	daa    
  414c63:	mov    al,ds:0xedefbc50
  414c68:	mov    edi,DWORD PTR [ecx+0x60]
  414c6b:	xchg   edi,eax
  414c6c:	fwait
  414c6d:	ret    0xd3ee
  414c70:	adc    bh,bh
  414c72:	pop    ebp
  414c73:	jmp    0x4214:0x6b606bb5
  414c7a:	je     0x414caa
  414c7c:	dec    edx
  414c7d:	in     eax,0x28
  414c7f:	call   0x84fb:0x9d771c9c
  414c86:	push   esp
  414c87:	lods   al,BYTE PTR ds:[esi]
  414c88:	call   0x584c:0x1e982197
  414c8f:	pop    ebx
  414c90:	sub    al,0xb2
  414c92:	(bad)  
  414c93:	fisttp DWORD PTR [ecx]
  414c95:	cwde   
  414c96:	int3   
  414c97:	shl    BYTE PTR ds:0x8157feb,0x7d
  414c9e:	xlat   BYTE PTR ds:[ebx]
  414c9f:	cmp    al,0x4b
  414ca1:	popf   
  414ca2:	push   ds
  414ca3:	mov    edx,0x84febd99
  414ca8:	push   eax
  414ca9:	popa   
  414caa:	mov    eax,0x98c2d310
  414caf:	daa    
  414cb0:	adc    eax,0x568c6861
  414cb5:	jg     0x414cb8
  414cb7:	xor    BYTE PTR [edi],ch
  414cb9:	mov    esi,0x80b80ba
  414cbe:	test   al,0x79
  414cc0:	inc    ecx
  414cc1:	xlat   BYTE PTR ds:[ebx]
  414cc2:	push   ecx
  414cc3:	scas   eax,DWORD PTR es:[edi]
  414cc4:	jmp    0x8668:0x3c6e3d8f
  414ccb:	lahf   
  414ccc:	(bad)  
  414ccd:	call   0x486a45b1
  414cd2:	jno    0x414cb4
  414cd4:	popf   
  414cd5:	xchg   edx,eax
  414cd6:	pop    edx
  414cd7:	pop    ecx
  414cd8:	ss aad 0x1f
  414cdb:	arpl   WORD PTR [ecx-0x523da695],ax
  414ce1:	sub    DWORD PTR [esi],edx
  414ce3:	stc    
  414ce4:	inc    esi
  414ce5:	(bad)  
  414ce6:	in     eax,dx
  414ce7:	lock add al,0x30
  414cea:	fs jmp 0xa01e:0x8a412c9e
  414cf2:	sahf   
  414cf3:	jg     0x414cba
  414cf5:	xchg   edi,eax
  414cf6:	xor    ecx,DWORD PTR [ecx-0x1e]
  414cf9:	ficomp WORD PTR ds:0xe008a49f
  414cff:	xchg   edx,eax
  414d00:	mov    ebp,0x14a89a9b
  414d05:	mov    BYTE PTR [esi-0x7a],bh
  414d08:	in     al,dx
  414d09:	sti    
  414d0a:	mov    ah,0xdd
  414d0c:	push   esi
  414d0d:	shl    DWORD PTR [esi+0x44ad3df0],1
  414d13:	(bad)  
  414d14:	xor    ah,BYTE PTR [ebp+0x748b75f0]
  414d1a:	dec    ebx
  414d1b:	arpl   WORD PTR ds:0xc4333ab9,dx
  414d21:	adc    al,0x91
  414d23:	jmp    0xd2c036ea
  414d28:	inc    eax
  414d29:	xchg   BYTE PTR [ebp+0x4d],cl
  414d2c:	pop    ds
  414d2d:	das    
  414d2e:	test   eax,0xa9b70079
  414d33:	push   0x56
  414d35:	jbe    0x414cd7
  414d37:	leave  
  414d38:	cs call 0x47e7:0xb60e7a71
  414d40:	mov    cl,0x19
  414d42:	dec    eax
  414d43:	dec    ebp
  414d44:	hlt    
  414d45:	or     al,0xba
  414d47:	(bad)  
  414d48:	ror    DWORD PTR [esi],1
  414d4a:	(bad)  
  414d4b:	and    al,0x12
  414d4d:	push   ebx
  414d4e:	test   DWORD PTR es:[edx],eax
  414d51:	jne    0x414d9f
  414d53:	sub    BYTE PTR [esi+0x4fc7cab5],ah
  414d59:	lahf   
  414d5a:	adc    al,dl
  414d5c:	fisub  DWORD PTR [eax+0x6c]
  414d5f:	pop    eax
  414d60:	cld    
  414d61:	sbb    eax,ecx
  414d63:	or     eax,0x5ceb468b
  414d68:	mov    eax,0x719e3793
  414d6d:	adc    DWORD PTR [ecx],ebx
  414d6f:	shl    edx,cl
  414d71:	fwait
  414d72:	add    al,0xc
  414d74:	popa   
  414d75:	dec    ebp
  414d76:	jl     0x414d33
  414d78:	imul   esi,ebx,0x5c
  414d7b:	mov    dh,0xa7
  414d7d:	pop    edi
  414d7e:	into   
  414d7f:	fidivr WORD PTR [edx-0x2e]
  414d82:	mov    ds:0x6e898fd1,al
  414d87:	ja     0x414d13
  414d89:	mov    ecx,0xa4e71d1f
  414d8e:	adc    DWORD PTR [ecx+0x37],ebp
  414d91:	mov    bh,BYTE PTR ds:0x21795ad7
  414d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d98:	(bad)  
  414d99:	aad    0x56
  414d9b:	aad    0x1d
  414d9d:	stos   DWORD PTR es:[edi],eax
  414d9e:	retf   
  414d9f:	cmp    eax,0xc0a45f49
  414da4:	push   ebp
  414da5:	js     0x414d6b
  414da7:	shr    DWORD PTR [eax],0x6f
  414daa:	popf   
  414dab:	mov    esp,0xdecc8b27
  414db0:	cmp    al,0xed
  414db2:	sbb    DWORD PTR [eax],edi
  414db4:	jecxz  0x414e20
  414db6:	push   esp
  414db7:	in     al,0xa7
  414db9:	cld    
  414dba:	jecxz  0x414d59
  414dbc:	sbb    edi,ebx
  414dbe:	inc    esp
  414dbf:	add    al,BYTE PTR [edi]
  414dc1:	cli    
  414dc2:	push   es
  414dc3:	mov    edx,0x99a8dde8
  414dc8:	ins    DWORD PTR es:[edi],dx
  414dc9:	fiadd  WORD PTR [ecx]
  414dcb:	mov    WORD PTR [ecx+0x6b],cs
  414dce:	sbb    al,ch
  414dd0:	cli    
  414dd1:	cmp    BYTE PTR [edx+eax*4-0x71],ch
  414dd5:	nop
  414dd6:	push   ss
  414dd7:	in     al,dx
  414dd8:	adc    BYTE PTR [ecx-0x18],cl
  414ddb:	sbb    DWORD PTR [ebp-0x583b0ea0],eax
  414de1:	sbb    DWORD PTR [esi+0x6ac70862],ecx
  414de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de8:	mov    ah,0x1a
  414dea:	mov    ebp,0x64ef3fb7
  414def:	mov    esp,0x55c080ca
  414df4:	xchg   ebp,eax
  414df5:	xor    eax,0x2e4b3a59
  414dfa:	pop    ecx
  414dfb:	xor    dh,BYTE PTR [ecx+0x32]
  414dfe:	mov    ?,WORD PTR [eax]
  414e00:	mov    BYTE PTR [ecx+0x3b],bh
  414e03:	test   BYTE PTR [esi+esi*2+0x40178a7e],bh
  414e0a:	jo     0x414ddf
  414e0c:	jmp    0xb861:0x44167145
  414e13:	aad    0x41
  414e15:	and    ah,bl
  414e17:	pop    eax
  414e18:	jno    0x414df4
  414e1a:	push   ebx
  414e1b:	out    0x78,eax
  414e1d:	scas   eax,DWORD PTR es:[edi]
  414e1e:	jmp    0xc749:0x193c0da1
  414e25:	mov    eax,0x25fbe5c8
  414e2a:	sti    
  414e2b:	scas   eax,DWORD PTR es:[edi]
  414e2c:	sti    
  414e2d:	imul   DWORD PTR [edx-0x34f6006d]
  414e33:	sub    BYTE PTR [edi-0xc],dl
  414e36:	hlt    
  414e37:	retf   0x3757
  414e3a:	sub    DWORD PTR [eax+0x24],ecx
  414e3d:	enter  0xe8b0,0x83
  414e41:	push   edx
  414e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e43:	dec    ebx
  414e44:	mov    ebp,0x811e9302
  414e49:	xor    ebp,DWORD PTR [ebp-0x4c]
  414e4c:	push   esp
  414e4d:	pop    eax
  414e4e:	sub    BYTE PTR [edi+0x7ef262e7],0x7d
  414e55:	into   
  414e56:	lods   eax,DWORD PTR ds:[esi]
  414e57:	scas   eax,DWORD PTR es:[edi]
  414e58:	or     bl,ch
  414e5a:	stc    
  414e5b:	jns    0x414e55
  414e5d:	lahf   
  414e5e:	and    ah,BYTE PTR [esi-0x708e6c67]
  414e64:	cmp    ch,bh
  414e66:	sub    DWORD PTR [ecx+0xb71a68],0x4ebe081d
  414e70:	cmp    DWORD PTR [esi],ebp
  414e72:	jbe    0x414e32
  414e74:	inc    ebp
  414e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e76:	fs cs pop ds
  414e79:	ds inc esi
  414e7b:	mov    ds:0xfc79b29b,al
  414e80:	adc    esi,edi
  414e82:	add    DWORD PTR [eax+esi*8+0x5c],ebx
  414e86:	adc    al,0xf1
  414e88:	scas   al,BYTE PTR es:[edi]
  414e89:	sub    ebx,esp
  414e8b:	pop    eax
  414e8c:	adc    DWORD PTR [edx+0x6122e581],esi
  414e92:	outs   dx,BYTE PTR ds:[esi]
  414e93:	ins    BYTE PTR es:[edi],dx
  414e94:	mov    ecx,DWORD PTR [esi]
  414e96:	xor    bl,BYTE PTR [eax-0x4]
  414e99:	mov    edx,0x248e9e35
  414e9e:	imul   esp,DWORD PTR [eax+edi*2+0x36],0x11
  414ea3:	mov    ah,0x92
  414ea5:	ror    BYTE PTR [eax],cl
  414ea7:	sti    
  414ea8:	imul   ebp,DWORD PTR ds:0x290f7e33,0xffffffab
  414eaf:	pushf  
  414eb0:	aam    0x7a
  414eb2:	mov    ?,eax
  414eb4:	ss jge 0x414edf
  414eb7:	gs xchg edx,eax
  414eb9:	and    dl,BYTE PTR [eax+0x8]
  414ebc:	rcl    al,0x68
  414ebf:	aad    0xe4
  414ec1:	fisubr WORD PTR [eax-0xd6b1485]
  414ec7:	fcomip st,st(6)
  414ec9:	jmp    0x2eb7991d
  414ece:	add    esi,DWORD PTR [edi-0x4b]
  414ed1:	xor    bl,cl
  414ed3:	stos   BYTE PTR es:[edi],al
  414ed4:	fld    DWORD PTR [edi-0x3e]
  414ed7:	mov    esp,0x7ee566ec
  414edc:	push   ss
  414edd:	aas    
  414ede:	sub    BYTE PTR [ebx+eax*4+0x68],bl
  414ee2:	sbb    cl,BYTE PTR [eax]
  414ee4:	cld    
  414ee5:	mov    esi,0x23bedfe0
  414eea:	clc    
  414eeb:	iret   
  414eec:	out    0x7f,al
  414eee:	add    cl,bh
  414ef0:	pop    ebx
  414ef1:	add    BYTE PTR [edx],dh
  414ef3:	cmp    al,0xaf
  414ef5:	into   
  414ef6:	jo     0x414ea0
  414ef8:	shl    dl,0x78
  414efb:	jae    0x414eeb
  414efd:	add    al,0xa3
  414eff:	mov    ah,0xe4
  414f01:	jg     0x414f6c
  414f03:	cmp    BYTE PTR [eax],al
  414f05:	xchg   ebx,eax
  414f06:	sbb    BYTE PTR [edx],bh
  414f08:	das    
  414f09:	mov    ah,0xb0
  414f0b:	stos   BYTE PTR es:[edi],al
  414f0c:	arpl   ax,sp
  414f0e:	jne    0x414e9e
  414f10:	sbb    eax,0x6a21a024
  414f15:	lods   eax,DWORD PTR ds:[esi]
  414f16:	bnd jle 0x414ef4
  414f19:	nop
  414f1a:	sub    dh,bh
  414f1c:	das    
  414f1d:	imul   eax,DWORD PTR [edx-0x3f],0xffffff90
  414f21:	mov    DWORD PTR [ecx-0x3a433b0c],0x668c7fe6
  414f2b:	and    BYTE PTR [ebx],0x1e
  414f2e:	mov    esi,0x4b017251
  414f33:	dec    edi
  414f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f35:	pop    esi
  414f36:	mov    cl,0xe1
  414f38:	jnp    0x414f2e
  414f3a:	repz inc ecx
  414f3c:	rcr    bh,0x94
  414f3f:	or     edi,ebx
  414f41:	mov    edx,0xae83e75b
  414f46:	mov    ds:0xe1faf7e5,al
  414f4b:	lea    ecx,[eax+0x20]
  414f4e:	dec    esp
  414f4f:	sbb    ebp,ebx
  414f51:	int3   
  414f52:	int3   
  414f53:	mov    bh,0x4b
  414f55:	(bad)  
  414f56:	ins    DWORD PTR es:[edi],dx
  414f57:	and    bh,ah
  414f59:	add    ah,ch
  414f5b:	add    ah,dh
  414f5d:	cmp    al,0x30
  414f5f:	xchg   ebp,eax
  414f60:	jae    0x414faa
  414f62:	loopne 0x414f10
  414f64:	imul   edx,ebx,0x82302fc0
  414f6a:	cdq    
  414f6b:	mov    WORD PTR [ebx-0x50],ds
  414f6e:	sbb    eax,0x15c639a9
  414f73:	repz inc esi
  414f75:	jg     0x414fdb
  414f77:	or     al,BYTE PTR [esi+0x69044993]
  414f7d:	call   0x9d7cd6e
  414f82:	mov    eax,ds:0xb793b9da
  414f87:	jg     0x414f2c
  414f89:	dec    ebp
  414f8a:	inc    ecx
  414f8b:	in     ax,dx
  414f8d:	sbb    eax,0xf8c6d2ba
  414f92:	jo     0x414fc6
  414f94:	xor    eax,DWORD PTR [edx+0x41a48434]
  414f9a:	aas    
  414f9b:	mov    ebp,0x21cddc4a
  414fa0:	sbb    eax,0xc462c5af
  414fa5:	aad    0xf5
  414fa7:	call   0x211e:0xecf8bb67
  414fae:	inc    edx
  414faf:	and    DWORD PTR [eax],esi
  414fb1:	aam    0xf9
  414fb3:	ret    
  414fb4:	add    DWORD PTR [edx+0xa2fab4e],0xffffffdc
  414fbb:	mov    esi,0x92191285
  414fc0:	scas   eax,DWORD PTR es:[edi]
  414fc1:	adc    esp,esi
  414fc3:	sub    eax,0x8605b52
  414fc8:	mov    eax,0x3c97547b
  414fcd:	adc    ch,0x93
  414fd0:	arpl   ax,bx
  414fd2:	pusha  
  414fd3:	jnp    0x414faa
  414fd5:	jb     0x414fc3
  414fd7:	push   esi
  414fd8:	or     ebx,DWORD PTR [ecx+0x524343ca]
  414fde:	dec    esp
  414fdf:	jg     0x414f9c
  414fe1:	push   esp
  414fe2:	push   0xd451359
  414fe7:	sub    ch,BYTE PTR [ecx-0x3f05373e]
  414fed:	xlat   BYTE PTR ds:[ebx]
  414fee:	sbb    BYTE PTR [ebp-0x5dab026e],ah
  414ff4:	popf   
  414ff5:	pushf  
  414ff6:	dec    eax
  414ff7:	jl     0x415038
  414ff9:	ja     0x415050
  414ffb:	or     DWORD PTR [esi+0x6e645543],0xfd2d2d29
  415005:	mov    bh,0xa8
  415007:	repz repz dec esp
  41500a:	dec    ebx
  41500b:	enter  0x372,0xe9
  41500f:	mov    ah,0xf0
  415011:	push   0x4e
  415013:	cmp    DWORD PTR fs:[eax-0x59],ebp
  415017:	pop    esp
  415018:	or     al,0x55
  41501a:	in     eax,0x1b
  41501c:	pusha  
  41501d:	addr16 add dh,ah
  415020:	inc    esp
  415021:	add    BYTE PTR [edx+0x293e62a6],0x8d
  415028:	cmc    
  415029:	fdivr  QWORD PTR gs:[ebx+0x4473e63b]
  415030:	in     eax,0x65
  415032:	push   ss
  415033:	fdivr  DWORD PTR [esi-0x5c]
  415036:	sub    eax,0xefed2deb
  41503b:	push   0x32
  41503d:	shl    DWORD PTR [eax+0x23d4ec58],0x64
  415044:	adc    eax,0xc9cab9b4
  415049:	jmp    0xf1601add
  41504e:	lods   eax,DWORD PTR ds:[esi]
  41504f:	cmc    
  415050:	cmp    ebp,esi
  415052:	fs push esi
  415054:	or     eax,0x4083a8c5
  415059:	pop    ebx
  41505a:	dec    edx
  41505b:	std    
  41505c:	cmp    DWORD PTR [ecx-0x7428e5b7],edi
  415062:	xchg   edx,eax
  415063:	fs retf 
  415065:	xchg   ch,bh
  415067:	add    dl,ch
  415069:	adc    bl,ah
  41506b:	mov    bl,0x1d
  41506d:	(bad)  
  41506e:	outs   dx,BYTE PTR ds:[esi]
  41506f:	jmp    0xba34:0x71228c80
  415076:	hlt    
  415077:	pop    ecx
  415078:	dec    eax
  415079:	dec    edx
  41507a:	and    DWORD PTR [ecx],edi
  41507c:	sar    DWORD PTR [ebx+0x12],cl
  41507f:	cdq    
  415080:	inc    edi
  415081:	call   0xcde90bb0
  415086:	addr16 fimul DWORD PTR [bx+di]
  41508a:	fiadd  DWORD PTR [ecx-0x61e4d628]
  415090:	and    eax,DWORD PTR [edx-0x6a]
  415093:	ret    
  415094:	inc    esp
  415095:	push   ss
  415096:	xchg   edi,eax
  415097:	ret    0x8696
  41509a:	bound  eax,QWORD PTR [esi]
  41509c:	sbb    DWORD PTR [ebx-0x15],0x42
  4150a0:	sub    eax,0xbc1c7f09
  4150a5:	jmp    0x2052:0x442af91d
  4150ac:	jl     0x41509f
  4150ae:	ja     0x4150bd
  4150b0:	rcl    BYTE PTR [edx+0x11],cl
  4150b3:	pop    edx
  4150b4:	push   esi
  4150b5:	fsubr  QWORD PTR ds:0x4c5801f4
  4150bb:	dec    eax
  4150bc:	popa   
  4150bd:	(bad)  
  4150be:	loope  0x415100
  4150c0:	fstp   DWORD PTR [ebx]
  4150c2:	out    dx,al
  4150c3:	pop    edi
  4150c4:	xor    eax,0xeed7112e
  4150c9:	enter  0x1109,0xa6
  4150cd:	fisttp WORD PTR ds:[esi]
  4150d0:	jle    0x41509e
  4150d2:	cmc    
  4150d3:	retf   0xe21e
  4150d6:	xchg   ecx,eax
  4150d7:	sbb    BYTE PTR [esi-0x7f],0x67
  4150db:	sbb    ax,0xc02c
  4150df:	int    0x77
  4150e1:	cmp    eax,0x80128bfe
  4150e6:	xor    BYTE PTR [edi+0x64],ch
  4150e9:	(bad)  
  4150ea:	dec    esi
  4150eb:	jmp    0x4150fa
  4150ed:	pop    ebx
  4150ee:	pop    edi
  4150ef:	push   ebx
  4150f0:	add    al,0x4a
  4150f2:	shl    BYTE PTR [ebp-0x25a7bb4a],0x4a
  4150f9:	out    dx,eax
  4150fa:	ret    0xdb78
  4150fd:	xlat   BYTE PTR ds:[ebx]
  4150fe:	ficomp DWORD PTR [esi+ebp*1]
  415101:	imul   ebp,DWORD PTR [edi+0x5eb74ca2],0xffffffcf
  415108:	fs sahf 
  41510a:	sbb    dl,BYTE PTR [edi-0x770df234]
  415110:	or     ebx,eax
  415112:	mov    ebp,0x886cfd1b
  415117:	and    ebp,DWORD PTR [esi-0x20daa832]
  41511d:	aad    0xdd
  41511f:	sbb    eax,ecx
  415121:	ja     0x415125
  415123:	mov    eax,0xb34b0008
  415128:	sub    al,0xb3
  41512a:	mov    WORD PTR [esi-0x71258a9e],?
  415130:	pop    esi
  415131:	pop    ecx
  415132:	in     eax,dx
  415133:	popa   
  415134:	(bad)  
  415135:	idiv   ecx
  415137:	lods   al,BYTE PTR ds:[esi]
  415138:	out    0xa8,al
  41513a:	pop    ebp
  41513b:	imul   esi,DWORD PTR [edi+edx*1+0x1841ebf4],0xb62eac7d
  415146:	inc    ebp
  415147:	in     eax,dx
  415148:	jge    0x4150ce
  41514a:	dec    edi
  41514b:	scas   al,BYTE PTR es:[edi]
  41514c:	inc    edx
  41514d:	and    DWORD PTR fs:[edx-0x1d],ebx
  415151:	xor    ebp,DWORD PTR [ecx]
  415153:	retf   
  415154:	cmp    DWORD PTR [eax+0x5e9ab8eb],ecx
  41515a:	imul   ebp,DWORD PTR [edi+0x2f3d3516],0x55
  415161:	jbe    0x4151ac
  415163:	pusha  
  415164:	mov    eax,0x72d7f477
  415169:	sub    DWORD PTR [edi-0x6c],edi
  41516c:	pop    esi
  41516d:	aad    0x31
  41516f:	mov    dh,0xe3
  415171:	jns    0x41515f
  415173:	sub    BYTE PTR [edx-0x6195ea7a],ah
  415179:	ret    0xe824
  41517c:	lods   eax,DWORD PTR ds:[esi]
  41517d:	ja     0x4151c3
  41517f:	ret    0xdee4
  415182:	scas   eax,DWORD PTR es:[edi]
  415183:	fadd   st(4),st
  415185:	nop
  415186:	mov    esi,0x4de773cb
  41518b:	jb     0x415202
  41518d:	xlat   BYTE PTR ds:[ebx]
  41518e:	push   ebp
  41518f:	call   0x9afd3e3f
  415194:	aaa    
  415195:	pop    es
  415196:	push   es
  415197:	inc    esp
  415198:	ficomp DWORD PTR [eax-0x5c7252ae]
  41519e:	(bad)  
  41519f:	adc    al,0xe5
  4151a1:	inc    eax
  4151a2:	sub    al,0xc9
  4151a4:	mov    BYTE PTR [edi-0x697ec039],0x15
  4151ab:	mov    ch,0x5d
  4151ad:	push   ss
  4151ae:	out    dx,eax
  4151af:	imul   edi,edx,0xe0b99ec3
  4151b5:	cld    
  4151b6:	hlt    
  4151b7:	in     eax,dx
  4151b8:	fsubr  DWORD PTR [ebx+0x43]
  4151bb:	ins    BYTE PTR es:[edi],dx
  4151bc:	xlat   BYTE PTR ds:[ebx]
  4151bd:	mov    ebp,0xa34f30a5
  4151c2:	mov    bl,BYTE PTR [ebx-0x68]
  4151c5:	sub    edx,DWORD PTR [edx+edx*1+0x707b0d02]
  4151cc:	pmullw mm5,QWORD PTR [esi*1+0x7cec72c4]
  4151d4:	pop    esp
  4151d5:	push   0xffffff89
  4151d7:	pop    esp
  4151d8:	aaa    
  4151d9:	retf   0xacfc
  4151dc:	mov    ebx,DWORD PTR [ebx+0x3653926e]
  4151e2:	jp     0x415177
  4151e4:	xlat   BYTE PTR ds:[ebx]
  4151e5:	call   0xefb9417d
  4151ea:	rcl    BYTE PTR [ebp+0x5],cl
  4151ed:	push   0x671b6c1c
  4151f2:	dec    edi
  4151f3:	or     al,0xff
  4151f5:	jnp    0x4151c2
  4151f7:	test   cl,bh
  4151f9:	cmp    bl,ah
  4151fb:	inc    esp
  4151fc:	cli    
  4151fd:	fmul   QWORD PTR [eax]
  4151ff:	loope  0x415272
  415201:	aad    0x7b
  415203:	fcom   st(0)
  415205:	adc    DWORD PTR [ebp-0x73],edx
  415208:	icebp  
  415209:	cmp    DWORD PTR [edx],esi
  41520b:	ror    DWORD PTR [ecx+0x2f],1
  41520e:	sbb    esi,DWORD PTR [edx+ecx*2-0x72]
  415212:	add    BYTE PTR [esi-0x23],cl
  415215:	les    eax,FWORD PTR [edx+0x71e21d9]
  41521b:	dec    edi
  41521c:	pop    esp
  41521d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41521e:	lea    esp,[edx]
  415220:	push   0x4f
  415222:	daa    
  415223:	cwde   
  415224:	leave  
  415225:	ins    BYTE PTR es:[edi],dx
  415226:	xor    ebp,DWORD PTR [esi]
  415228:	inc    esi
  415229:	inc    ebx
  41522a:	fstp   DWORD PTR [ebx+0x7]
  41522d:	into   
  41522e:	sbb    dl,BYTE PTR [esi-0x3766ad65]
  415234:	out    0xb0,eax
  415236:	sbb    BYTE PTR [esi],dh
  415238:	dec    ecx
  415239:	push   ebp
  41523a:	xor    eax,0xd875be32
  41523f:	into   
  415240:	out    0x6,al
  415242:	xor    DWORD PTR [ecx-0x26],0x3f0174b2
  415249:	cs inc esp
  41524b:	cdq    
  41524c:	inc    esi
  41524d:	mov    esp,0xb0c88c07
  415252:	(bad)  
  415253:	leave  
  415254:	xchg   BYTE PTR [ecx-0x1e],dh
  415257:	cld    
  415258:	mov    cl,0x12
  41525a:	call   0x9f16:0x8f54a47c
  415261:	ficom  DWORD PTR [esi]
  415263:	pop    edi
  415264:	(bad)  
  415265:	retf   0xa237
  415268:	ins    DWORD PTR es:[edi],dx
  415269:	imul   esp,DWORD PTR fs:[ebx],0x24
  41526d:	cli    
  41526e:	sub    ecx,DWORD PTR [edx-0x17]
  415271:	dec    esi
  415272:	das    
  415273:	icebp  
  415274:	icebp  
  415275:	sub    eax,0x5bef6499
  41527a:	in     al,0xf9
  41527c:	aaa    
  41527d:	repnz mov ?,WORD PTR [ebp+0x40c7ac79]
  415284:	mov    dl,0x91
  415286:	fdiv   QWORD PTR [esi]
  415288:	mov    ah,BYTE PTR [eax-0x3c]
  41528b:	mov    edi,0x7fbccc9d
  415290:	ja     0x415240
  415292:	data16 aad 0xad
  415295:	cmp    ebx,ebx
  415297:	jmp    0x4152df
  415299:	and    eax,0xf19cd5a2
  41529e:	mov    ecx,0x228b8537
  4152a3:	xor    edi,DWORD PTR [ebx+0x74]
  4152a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a7:	xchg   DWORD PTR [eax+edx*1+0x13b79266],esp
  4152ae:	test   DWORD PTR [esi],ecx
  4152b0:	push   edx
  4152b1:	xchg   DWORD PTR [ebx-0x3a806086],esp
  4152b7:	or     eax,0x1a2786d2
  4152bc:	mov    al,0x59
  4152be:	dec    edx
  4152bf:	das    
  4152c0:	cli    
  4152c1:	push   edi
  4152c2:	outs   dx,BYTE PTR ds:[esi]
  4152c3:	in     eax,0xf5
  4152c5:	mov    edx,DWORD PTR [edx+esi*4+0x2]
  4152c9:	retf   
  4152ca:	jbe    0x415328
  4152cc:	dec    DWORD PTR [esi]
  4152ce:	loop   0x41525b
  4152d0:	test   BYTE PTR [ebx-0x4],cl
  4152d3:	bound  edi,QWORD PTR [ecx-0x705393d4]
  4152d9:	jmp    0x66c6:0x61be8a53
  4152e0:	dec    ecx
  4152e1:	loopne 0x4152a0
  4152e3:	fdivr  QWORD PTR [eax-0x4c6a7238]
  4152e9:	(bad)  
  4152ea:	dec    eax
  4152eb:	xlat   BYTE PTR ds:[ebx]
  4152ec:	adc    al,0x97
  4152ee:	xchg   DWORD PTR [edx+0x6d],edi
  4152f1:	mov    ds:0x52f1887b,eax
  4152f6:	mov    esi,0x49bb89cb
  4152fb:	sbb    edi,DWORD PTR [ecx-0x5b]
  4152fe:	or     dh,BYTE PTR [edi-0x55d0f6e8]
  415304:	or     eax,0x1e767e17
  415309:	mov    ecx,0xd31762a4
  41530e:	dec    edx
  41530f:	sti    
  415310:	das    
  415311:	add    eax,0xe79858de
  415316:	shl    BYTE PTR [ebx-0x1b],cl
  415319:	stos   DWORD PTR es:[edi],eax
  41531a:	pop    edi
  41531b:	sub    eax,ecx
  41531d:	and    ah,BYTE PTR [esi+0x9]
  415320:	into   
  415321:	jmp    0x51ba:0xa9e717d3
  415328:	(bad)  
  415329:	mov    ah,0xcb
  41532b:	sub    al,BYTE PTR [edi-0x3bee7ad1]
  415331:	loope  0x4152bb
  415333:	ror    DWORD PTR [ecx-0x6c4b627c],0x2
  41533a:	sar    BYTE PTR [edi+0x43e2d7db],1
  415340:	mov    eax,ds:0x82d68389
  415345:	cmp    bh,cl
  415347:	aas    
  415348:	adc    ah,BYTE PTR [edi+0x33e06c76]
  41534e:	sub    BYTE PTR [eax+esi*2],al
  415351:	test   al,0xfd
  415353:	int3   
  415354:	je     0x4152ec
  415356:	in     eax,0xc5
  415358:	stos   BYTE PTR es:[edi],al
  415359:	hlt    
  41535a:	adc    eax,0x2ae00938
  41535f:	mov    ch,0xd2
  415361:	jne    0x415373
  415363:	imul   edi,DWORD PTR [eax],0x35
  415366:	dec    ebp
  415367:	and    DWORD PTR [edi],ebx
  415369:	push   edx
  41536a:	inc    esp
  41536b:	mul    dh
  41536d:	cmp    BYTE PTR [ebx+0x7300950b],dl
  415373:	jbe    0x415398
  415375:	les    eax,FWORD PTR [edx+0x7fbd5702]
  41537b:	xchg   edx,eax
  41537c:	cli    
  41537d:	cli    
  41537e:	iret   
  41537f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415380:	lods   al,BYTE PTR ds:[esi]
  415381:	int3   
  415382:	(bad)  
  415384:	inc    ecx
  415385:	sbb    eax,0x363be678
  41538a:	jno    0x41536b
  41538c:	sbb    al,BYTE PTR [edi]
  41538e:	mov    edi,0xe0a53dbc
  415393:	call   0xb2a7:0xf2a0e398
  41539a:	retf   0x32bb
  41539d:	loope  0x4153f2
  41539f:	(bad)
  4153a3:	pop    ebx
  4153a4:	jns    0x415396
  4153a6:	pop    es
  4153a7:	addr16 jae 0x415407
  4153aa:	inc    ebx
  4153ab:	adc    eax,0x43eb8934
  4153b0:	sbb    DWORD PTR [edi+0x436ee695],ebp
  4153b6:	sbb    al,0x85
  4153b8:	add    BYTE PTR ds:0xbd013319,al
  4153be:	add    ebp,esp
  4153c0:	dec    eax
  4153c1:	sbb    eax,0xb9dff3d
  4153c6:	add    eax,0xe62d80e4
  4153cb:	fiadd  WORD PTR [eax]
  4153cd:	push   edx
  4153ce:	popf   
  4153cf:	xor    esp,DWORD PTR [eax+0x2a0348a]
  4153d5:	inc    BYTE PTR [edx-0x1d9ca0b6]
  4153db:	cmp    eax,0x4dde4c78
  4153e0:	outs   dx,DWORD PTR ds:[esi]
  4153e1:	mov    dh,0x5
  4153e3:	and    ah,BYTE PTR [esi+0x3109121b]
  4153e9:	fcmovnu st,st(2)
  4153eb:	(bad)  [esi-0x26]
  4153ee:	in     al,dx
  4153ef:	aad    0x68
  4153f1:	ds popf 
  4153f3:	mov    ebx,0xd0530846
  4153f8:	stos   BYTE PTR es:[edi],al
  4153f9:	mov    esi,0xc1ccf97
  4153fe:	lock ins BYTE PTR es:[edi],dx
  415400:	add    ch,cl
  415402:	mov    esp,0xf986064b
  415407:	lock jl 0x415433
  41540a:	dec    edi
  41540b:	cmp    DWORD PTR ds:0x64158078,esp
  415411:	push   ss
  415412:	lea    ecx,[edi]
  415414:	dec    ebp
  415415:	sub    BYTE PTR [ebp-0x12],ch
  415418:	sbb    BYTE PTR [edi-0x57836412],cl
  41541e:	shr    DWORD PTR [edx],cl
  415420:	icebp  
  415421:	les    eax,FWORD PTR [edi-0x58b858a6]
  415427:	repnz sar DWORD PTR [ecx],cl
  41542a:	adc    eax,0x7a1bc089
  41542f:	jge    0x415412
  415431:	lock mov ah,0xf3
  415434:	outs   dx,BYTE PTR ds:[esi]
  415435:	sub    DWORD PTR [eax-0x5f0dc052],edx
  41543b:	aas    
  41543c:	in     al,0x5f
  41543e:	pop    ds
  41543f:	stc    
  415440:	add    al,0x32
  415442:	scas   eax,DWORD PTR es:[edi]
  415443:	mov    dl,0x9b
  415445:	sahf   
  415446:	mov    DWORD PTR [esi-0x3cfa4631],0x5d938d7
  415450:	loopne 0x415402
  415452:	hlt    
  415453:	cmp    esp,DWORD PTR [eax]
  415455:	add    dh,BYTE PTR [esp+ebx*2-0x8]
  415459:	(bad)
  41545c:	ss stc 
  41545e:	ss stos DWORD PTR es:[edi],eax
  415460:	in     al,0x54
  415462:	pop    edx
  415463:	call   0xb7db:0x63d4e1e3
  41546a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41546b:	(bad)  
  41546c:	(bad)  
  41546d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41546e:	(bad)  
  41546f:	pop    esi
  415470:	aad    0xb2
  415472:	and    eax,0xfb79d2e
  415477:	in     al,dx
  415478:	js     0x4154a9
  41547a:	xor    al,0xbc
  41547c:	int3   
  41547d:	cmp    eax,DWORD PTR [edx-0x2cde491d]
  415483:	lock movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415486:	inc    ecx
  415487:	mov    al,ds:0x5ae51d51
  41548c:	dec    edi
  41548d:	clc    
  41548e:	std    
  41548f:	ficom  WORD PTR [ecx-0x79]
  415492:	inc    ebx
  415493:	xchg   ebx,eax
  415494:	in     al,dx
  415495:	add    BYTE PTR es:[edx],ch
  415498:	(bad)  
  415499:	pop    ebp
  41549a:	call   DWORD PTR [ebx-0x72988520]
  4154a0:	jae    0x415484
  4154a2:	sub    eax,0x5b01780f
  4154a7:	imul   edi,DWORD PTR [edi+0x7abd7a51],0x9084d793
  4154b1:	enter  0x769c,0xb6
  4154b5:	(bad)  
  4154b6:	shl    BYTE PTR [edx],cl
  4154b8:	neg    ebx
  4154ba:	call   0x10fb:0x1c51cd48
  4154c1:	xor    DWORD PTR [esi-0x4c2bdb7d],0x2
  4154c8:	lea    esp,[ecx]
  4154ca:	inc    edi
  4154cb:	xor    eax,0x19cf26c3
  4154d0:	fdivr  st(7),st
  4154d2:	xor    BYTE PTR [esp+edi*2+0x2d],0xd0
  4154d7:	jecxz  0x4154d4
  4154d9:	xor    ebp,DWORD PTR [edi-0x75]
  4154dc:	xor    BYTE PTR [edi-0x66b0c80b],ch
  4154e2:	mov    edx,0x30274574
  4154e7:	hlt    
  4154e8:	xor    bh,dh
  4154ea:	jbe    0x415475
  4154ec:	sbb    eax,0x5be8e05d
  4154f1:	daa    
  4154f2:	aaa    
  4154f3:	cld    
  4154f4:	jecxz  0x415516
  4154f6:	dec    ebp
  4154f7:	adc    DWORD PTR [eax+0x524da1c8],0x2b953b15
  415501:	mov    ch,0xac
  415503:	iret   
  415504:	pop    ss
  415505:	fnstsw WORD PTR [ecx+eax*2+0x63]
  415509:	scas   al,BYTE PTR es:[edi]
  41550a:	and    al,0x6
  41550c:	nop
  41550d:	sahf   
  41550e:	mov    ecx,0x1b2ce2ff
  415513:	sahf   
  415514:	leave  
  415515:	jl     0x415537
  415517:	ret    
  415518:	cmp    BYTE PTR [eax],bh
  41551a:	je     0x4154ea
  41551c:	cmc    
  41551d:	pop    ds
  41551e:	imul   edx,DWORD PTR ds:0x64296953,0x40
  415525:	add    eax,DWORD PTR [edx+0x2338484f]
  41552b:	mov    esp,0x78f4cd59
  415530:	sub    eax,0x83ccd60b
  415535:	sahf   
  415536:	lods   al,BYTE PTR ds:[esi]
  415537:	popf   
  415538:	mov    bh,0x49
  41553a:	push   ds
  41553b:	repz adc eax,0x61442c
  415541:	xchg   edx,eax
  415542:	cmp    eax,0x3032a41c
  415547:	ins    BYTE PTR es:[edi],dx
  415548:	lods   al,BYTE PTR ds:[esi]
  415549:	or     esi,DWORD PTR [esi]
  41554b:	jmp    0x4155b8
  41554d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554e:	pusha  
  41554f:	repz sahf 
  415551:	mov    ds:0x570913a5,eax
  415556:	sbb    BYTE PTR [edx],bh
  415558:	in     eax,dx
  415559:	push   esp
  41555a:	adc    ebx,ebp
  41555c:	push   ecx
  41555d:	inc    edi
  41555e:	jmp    0x4155dd
  415560:	inc    edi
  415561:	retf   0xdb01
  415564:	mov    ebx,0xeefaaf76
  415569:	ja     0x415540
  41556b:	xchg   ecx,eax
  41556c:	js     0x4154f9
  41556e:	ds mov al,0x4c
  415571:	iret   
  415572:	push   ebp
  415573:	jg     0x4155b6
  415575:	call   0xd247e64
  41557a:	ret    0xf635
  41557d:	test   al,0x96
  41557f:	dec    edi
  415580:	cmp    ebx,DWORD PTR [ebx+0x1d]
  415583:	xor    al,0x21
  415585:	mov    DWORD PTR [ebp+edx*2-0x7a83105a],ecx
  41558c:	or     DWORD PTR [ebp+edi*2+0x5e77814a],0xffffff90
  415594:	bound  edx,QWORD PTR [ebp-0x43fbbaca]
  41559a:	fs jl  0x4155e0
  41559d:	test   bh,ch
  41559f:	test   DWORD PTR [edx+0x2e6a5cc8],edx
  4155a5:	sbb    BYTE PTR [ebp+0x14a4c8da],0x70
  4155ac:	xor    al,0xc3
  4155ae:	fisubr WORD PTR [ebx+0x16f15e40]
  4155b4:	mov    ecx,0xff53889c
  4155b9:	pop    ss
  4155ba:	push   ss
  4155bb:	add    eax,0x3e41f63d
  4155c0:	into   
  4155c1:	(bad)  
  4155c2:	fst    DWORD PTR [ebx]
  4155c4:	jbe    0x41558d
  4155c6:	inc    ebx
  4155c7:	cs fneni(8087 only) 
  4155ca:	jp     0x41560f
  4155cc:	jno    0x4155e8
  4155ce:	lea    ebp,[edx]
  4155d0:	std    
  4155d1:	mov    ds:0x37944378,al
  4155d6:	(bad)  
  4155d7:	push   ss
  4155d8:	mov    al,0xdf
  4155da:	es loop 0x4155c1
  4155dd:	pop    ecx
  4155de:	mov    al,ds:0x89e1ef9
  4155e3:	cdq    
  4155e4:	les    ecx,FWORD PTR [edx+0x4ccd8637]
  4155ea:	and    DWORD PTR [ecx-0x503df7aa],edx
  4155f0:	jle    0x4155d5
  4155f2:	mov    gs,WORD PTR [ebx+0x47b344c8]
  4155f8:	jbe    0x41561d
  4155fa:	or     eax,DWORD PTR [ebx+esi*2-0x4991063f]
  415601:	inc    esi
  415602:	mov    al,0x9d
  415604:	add    ebp,eax
  415606:	rcl    bh,1
  415608:	out    dx,eax
  415609:	sub    BYTE PTR [edi+0x5fac06bc],dl
  41560f:	and    DWORD PTR [ebp+0x658aaadb],esi
  415615:	inc    edi
  415616:	and    esi,DWORD PTR [eax]
  415618:	(bad)  
  415619:	and    BYTE PTR [ecx],ah
  41561b:	fwait
  41561c:	mov    BYTE PTR [esi-0x33],0xbd
  415620:	fldcw  WORD PTR [eax+0x1f]
  415623:	push   cs
  415624:	inc    ecx
  415625:	and    cl,cl
  415627:	test   al,al
  415629:	mov    ebx,0x3d3f7386
  41562e:	mov    dh,0xc1
  415630:	xor    BYTE PTR [ebx],ch
  415632:	ja     0x415678
  415634:	pop    es
  415635:	fiadd  WORD PTR [eax+0x57]
  415638:	cmp    cl,BYTE PTR [edx+ecx*8-0x5364e175]
  41563f:	dec    edx
  415640:	ja     0x4155db
  415642:	int3   
  415643:	je     0x4155e2
  415645:	xor    ebp,DWORD PTR [edi-0x25]
  415648:	jno    0x41568a
  41564a:	ins    BYTE PTR es:[edi],dx
  41564b:	push   edx
  41564c:	je     0x4156a3
  41564e:	(bad)  
  41564f:	enter  0xce9a,0xb1
  415653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415654:	lds    edx,FWORD PTR [ecx-0x38]
  415657:	dec    edx
  415658:	sub    al,0xa5
  41565a:	rcr    DWORD PTR [edx+0x7bb10f16],0xf3
  415661:	pop    edi
  415662:	inc    ebp
  415663:	or     ebp,DWORD PTR [ebx-0x55]
  415666:	pop    esi
  415667:	pop    esi
  415668:	ins    DWORD PTR es:[edi],dx
  415669:	scas   eax,DWORD PTR es:[edi]
  41566a:	xlat   BYTE PTR ds:[ebx]
  41566b:	outs   dx,BYTE PTR ds:[esi]
  41566c:	sbb    al,0x82
  41566e:	imul   ecx,DWORD PTR [edi],0xffffff92
  415671:	mov    eax,0x1e8abcce
  415676:	dec    ebx
  415677:	mov    dl,0x43
  415679:	bound  ebp,QWORD PTR [bx+si]
  41567c:	pop    esp
  41567d:	out    dx,eax
  41567e:	add    BYTE PTR [ecx],ch
  415680:	(bad)  
  415681:	pop    ss
  415682:	outs   dx,DWORD PTR ds:[esi]
  415683:	scas   al,BYTE PTR es:[edi]
  415684:	cli    
  415685:	add    DWORD PTR [ebp+0x35711d34],edx
  41568b:	push   esp
  41568c:	xchg   edx,eax
  41568d:	int    0x75
  41568f:	outs   dx,DWORD PTR ds:[esi]
  415690:	inc    eax
  415691:	pushf  
  415692:	xchg   esp,eax
  415693:	daa    
  415694:	dec    eax
  415695:	adc    ah,0xcb
  415698:	fiadd  WORD PTR [eax]
  41569a:	retf   0x5249
  41569d:	xchg   esp,eax
  41569e:	dec    esi
  41569f:	push   ebx
  4156a0:	int3   
  4156a1:	xor    cl,BYTE PTR [esi]
  4156a3:	or     ch,BYTE PTR [ecx+0x180a663b]
  4156a9:	fstp   QWORD PTR [ecx-0x2b]
  4156ac:	push   ebx
  4156ad:	sub    bh,BYTE PTR [ebp-0x1f50c32f]
  4156b3:	push   cs
  4156b4:	cs sbb dh,al
  4156b7:	sub    DWORD PTR [ebx+0x50],0xffffffe9
  4156bb:	or     ecx,DWORD PTR [esi+0xc39dd3]
  4156c1:	inc    ecx
  4156c2:	push   ecx
  4156c3:	arpl   WORD PTR [esi],bx
  4156c5:	dec    ebx
  4156c6:	rol    ch,cl
  4156c8:	mov    al,ds:0x364996a0
  4156cd:	pushf  
  4156ce:	imul   edi,DWORD PTR [edi+edx*2-0x537a6158],0x9a03c0e6
  4156d9:	jl     0x4156a2
  4156db:	sub    ebp,DWORD PTR [edi+0x142d9a8f]
  4156e1:	leave  
  4156e2:	lods   eax,DWORD PTR ds:[esi]
  4156e3:	aaa    
  4156e4:	repz push ebx
  4156e6:	ret    0x1b59
  4156e9:	mov    al,ds:0xaa5c3eb7
  4156ee:	jbe    0x415739
  4156f0:	jns    0x4156b2
  4156f2:	leave  
  4156f3:	hlt    
  4156f4:	xchg   ebp,eax
  4156f5:	out    0xb4,eax
  4156f7:	xor    BYTE PTR [edx],dl
  4156f9:	mov    esp,0xda06e021
  4156fe:	ja     0x41573a
  415700:	pushf  
  415701:	int    0x85
  415703:	mov    DWORD PTR [esi],ebp
  415705:	mov    esi,esp
  415707:	mov    ch,0x5b
  415709:	jg     0x41574b
  41570b:	push   edx
  41570c:	and    bh,BYTE PTR [edi]
  41570e:	addr16 (bad) 
  415711:	mov    edx,DWORD PTR [eax-0x71]
  415714:	dec    ebp
  415715:	sti    
  415716:	or     al,0x1a
  415718:	sbb    al,BYTE PTR [edx*2+0x518791dd]
  41571f:	dec    DWORD PTR [edi+0x3ff06c71]
  415725:	mov    cl,0x6a
  415727:	xor    DWORD PTR [edx+0x4343f261],esi
  41572d:	addr16 je 0x41578c
  415730:	rol    DWORD PTR [ecx-0x19],1
  415733:	int    0xc7
  415735:	sub    DWORD PTR [edx+0x2f5d1dbc],0x54
  41573c:	push   ebp
  41573d:	retf   
  41573e:	fidiv  WORD PTR [edx+0x22009298]
  415744:	clc    
  415745:	lds    ecx,FWORD PTR [edx]
  415747:	mov    esi,0x257ff6a8
  41574c:	rcr    DWORD PTR [ebx+0x13],1
  41574f:	dec    edx
  415750:	shr    DWORD PTR [edx],cl
  415752:	frstor [ecx+0x5b91a1ec]
  415758:	pop    ss
  415759:	repz mov ds:0x346e34b2,ax
  415760:	mov    ecx,DWORD PTR [edx+0x5d]
  415763:	jp     0x41576a
  415765:	inc    ecx
  415766:	(bad)  
  415768:	inc    eax
  415769:	adc    eax,0xe2b6670e
  41576e:	aaa    
  41576f:	(bad)  
  415770:	out    dx,al
  415771:	jb     0x415713
  415773:	shl    ah,1
  415775:	fist   WORD PTR [eax-0x4364a77e]
  41577b:	pop    esp
  41577c:	inc    ebp
  41577d:	les    eax,FWORD PTR [edx+0x442a9843]
  415783:	sar    BYTE PTR [edi],0xda
  415786:	and    BYTE PTR [edi-0x2f],ch
  415789:	inc    edx
  41578a:	dec    edi
  41578b:	mov    al,0xc6
  41578d:	fsub   st,st(7)
  41578f:	xor    eax,0xc1781dff
  415794:	jmp    0xb7f6:0x611aad53
  41579b:	aas    
  41579c:	adc    BYTE PTR [eax],0x39
  41579f:	aas    
  4157a0:	jbe    0x41581b
  4157a2:	cs mov bl,0x32
  4157a5:	psubd  mm1,QWORD PTR [ebx+0x61db11f5]
  4157ac:	cmc    
  4157ad:	mov    ecx,0xdfbe7a8b
  4157b2:	arpl   sp,dx
  4157b4:	mov    esp,0xbf0ceb41
  4157b9:	sub    BYTE PTR [eax+ecx*2],dh
  4157bc:	ret    0x2d8b
  4157bf:	adc    esi,ebp
  4157c1:	add    BYTE PTR [ebp-0x178b34b7],ah
  4157c7:	outs   dx,DWORD PTR ds:[esi]
  4157c8:	pushf  
  4157c9:	inc    edi
  4157ca:	fisttp WORD PTR [ecx]
  4157cc:	pop    eax
  4157cd:	scas   al,BYTE PTR es:[edi]
  4157ce:	out    dx,al
  4157cf:	ins    BYTE PTR es:[edi],dx
  4157d0:	clc    
  4157d1:	push   eax
  4157d2:	xor    DWORD PTR [ebp-0x1e],eax
  4157d5:	and    DWORD PTR [ebp+0x1be5d1e7],ebx
  4157db:	mov    ah,0x0
  4157dd:	retf   
  4157de:	jno    0x415852
  4157e0:	sub    eax,0x30d6228c
  4157e5:	(bad)  
  4157e6:	cmovae edi,DWORD PTR [esi]
  4157e9:	inc    esp
  4157ea:	mov    al,0xdc
  4157ec:	aaa    
  4157ed:	adc    BYTE PTR [esi],0x39
  4157f0:	push   eax
  4157f1:	rcr    BYTE PTR [eax-0x46],cl
  4157f4:	out    dx,eax
  4157f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157f6:	cmp    ecx,DWORD PTR [ecx]
  4157f8:	or     ch,BYTE PTR [ebx+0x79]
  4157fb:	ror    DWORD PTR [ecx+eiz*1+0x56894d01],1
  415802:	inc    esi
  415803:	retf   
  415804:	add    BYTE PTR [esp+edx*4+0x51],al
  415808:	scas   al,BYTE PTR es:[edi]
  415809:	dec    edi
  41580a:	ret    0x9b8d
  41580d:	pop    es
  41580e:	adc    ax,0xebac
  415812:	mov    al,0xa8
  415814:	in     eax,0x64
  415816:	sbb    dl,BYTE PTR [edi]
  415818:	or     BYTE PTR es:[ebx],cl
  41581b:	xchg   bl,dl
  41581d:	and    ecx,DWORD PTR [ebp+0xd898f7f]
  415823:	add    ebp,0x0
  415826:	mov    dh,0x9a
  415828:	xor    BYTE PTR [ebx+0x78db13ca],bl
  41582e:	and    ah,cl
  415830:	xor    ebx,DWORD PTR [ebp-0x3127c287]
  415836:	das    
  415837:	mov    dh,0x7b
  41583a:	jp     0x415844
  41583c:	push   esi
  41583d:	push   es
  41583e:	xor    DWORD PTR [ebx+0x32],edi
  415841:	lods   eax,DWORD PTR ds:[esi]
  415842:	adc    eax,0x9e2b1f8c
  415847:	dec    edi
  415848:	mov    bl,0xbb
  41584a:	fsub   DWORD PTR [edx+0x59d85b05]
  415850:	call   0x898495a6
  415855:	test   cl,dl
  415857:	cld    
  415858:	ja     0x4158b8
  41585a:	sub    eax,0x313d324e
  41585f:	xor    eax,0xc689768d
  415864:	mov    al,0x82
  415866:	adc    edx,DWORD PTR [ecx-0x21]
  415869:	lock pushf 
  41586b:	popf   
  41586c:	inc    edx
  41586d:	dec    edx
  41586e:	push   0x8f3d7a03
  415873:	inc    ebx
  415874:	dec    ecx
  415875:	fst    DWORD PTR [eax]
  415877:	or     al,0x35
  415879:	dec    edx
  41587a:	aaa    
  41587b:	jae    0x41589e
  41587d:	sar    ch,0x99
  415880:	xor    al,0x31
  415882:	jecxz  0x415873
  415884:	push   es
  415885:	pushf  
  415886:	xchg   edi,eax
  415887:	shl    DWORD PTR [ebx-0x155b6d40],cl
  41588d:	inc    edi
  41588e:	shl    DWORD PTR [ecx-0x521a90f0],1
  415894:	xchg   edi,eax
  415895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415896:	pop    ebp
  415897:	adc    dl,BYTE PTR [ebx]
  415899:	ret    
  41589a:	into   
  41589b:	and    DWORD PTR [ecx-0x48619081],0x13707b02
  4158a5:	push   ebx
  4158a6:	test   eax,0x4ef8bb9e
  4158ab:	cmp    al,al
  4158ad:	or     BYTE PTR [edx],ch
  4158af:	sbb    BYTE PTR [ebx],dl
  4158b1:	jp     0x41583a
  4158b3:	jecxz  0x41591a
  4158b5:	cwde   
  4158b6:	sahf   
  4158b7:	jmp    0x1018969a
  4158bc:	add    dh,0x52
  4158bf:	in     al,dx
  4158c0:	test   al,0x7e
  4158c2:	ds push 0xffffffe1
  4158c5:	pop    es
  4158c6:	and    ecx,edi
  4158c8:	xchg   BYTE PTR ds:0x20781186,dl
  4158ce:	dec    edx
  4158cf:	cmp    ch,0x92
  4158d2:	and    ecx,DWORD PTR [ebp-0x92a440a]
  4158d8:	lahf   
  4158d9:	xor    al,0x9b
  4158db:	jmp    0x415906
  4158dd:	icebp  
  4158de:	push   es
  4158df:	cmp    al,0xfc
  4158e1:	(bad)  [ecx]
  4158e3:	test   eax,0x4c866a33
  4158e8:	pusha  
  4158e9:	mov    dh,0xb6
  4158eb:	call   0xa2a7:0xfcc545ac
  4158f2:	pop    ecx
  4158f3:	jo     0x41595b
  4158f5:	cld    
  4158f6:	add    BYTE PTR [esi],0x0
  4158f9:	div    cl
  4158fb:	call   0x3432a933
  415900:	stos   DWORD PTR es:[edi],eax
  415901:	pop    esi
  415902:	add    DWORD PTR [esi],esi
  415904:	fwait
  415905:	out    dx,al
  415906:	imul   ebx,DWORD PTR [ecx+0x56],0x1
  41590a:	ret    
  41590b:	xchg   ecx,eax
  41590c:	or     BYTE PTR [eax+0x77],bl
  41590f:	ret    
  415910:	mov    eax,0x24539f61
  415915:	hlt    
  415916:	pop    eax
  415917:	out    dx,eax
  415918:	add    DWORD PTR [eax-0x6b50701],0x17
  41591f:	out    0x80,eax
  415921:	(bad)  
  415922:	lahf   
  415923:	daa    
  415924:	jo     0x415948
  415926:	fsubr  QWORD PTR [ecx]
  415928:	and    BYTE PTR [ebx+0x3e],al
  41592b:	inc    ecx
  41592c:	jge    0x41598a
  41592e:	scas   al,BYTE PTR es:[edi]
  41592f:	mov    WORD PTR [edx+ebx*8+0x7e],cs
  415933:	outs   dx,BYTE PTR ds:[esi]
  415934:	imul   esp,ebx,0xffffffa6
  415937:	hlt    
  415938:	pushf  
  415939:	retf   
  41593a:	and    ecx,DWORD PTR [eax]
  41593c:	mov    eax,0x1729c6d2
  415941:	data16 mov dh,0x66
  415944:	(bad)  
  415945:	stos   BYTE PTR es:[edi],al
  415946:	js     0x41593d
  415948:	mov    cl,0xb0
  41594a:	loopne 0x4159b1
  41594c:	outs   dx,BYTE PTR ds:[esi]
  41594d:	aad    0xfa
  41594f:	xchg   esi,eax
  415950:	arpl   WORD PTR [eax],ax
  415952:	in     eax,0x56
  415954:	ret    
  415955:	cmc    
  415956:	in     eax,dx
  415957:	sar    BYTE PTR [esi-0x508d80c4],cl
  41595d:	mov    bl,al
  41595f:	and    bx,WORD PTR [eax-0x54]
  415963:	test   DWORD PTR [esi],edx
  415965:	add    esi,DWORD PTR [eax+0x2c]
  415968:	xor    dh,BYTE PTR [edx+0x378f494f]
  41596e:	sub    DWORD PTR [esi+0x2adccfc0],esp
  415974:	adc    bl,bh
  415976:	xchg   ebx,eax
  415977:	ror    BYTE PTR [ebx-0x56648b1],1
  41597d:	push   eax
  41597e:	(bad)  
  415980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415981:	inc    ebp
  415982:	mov    DWORD PTR [esi+0x4e93a24f],esi
  415988:	lea    edx,[eax-0x46]
  41598b:	stos   DWORD PTR es:[edi],eax
  41598c:	xor    bp,0x3b30
  415991:	cmp    al,0x39
  415993:	sub    dl,bl
  415995:	std    
  415996:	jne    0x4159c3
  415998:	push   ds
  415999:	xor    al,0x3e
  41599b:	add    DWORD PTR [ebx+edi*8+0x16a45146],esp
  4159a2:	inc    esp
  4159a3:	mov    ebp,DWORD PTR [ebp+0x79]
  4159a6:	and    eax,0xccc46ada
  4159ab:	ja     0x41599e
  4159ad:	clc    
  4159ae:	pop    ds
  4159af:	inc    esp
  4159b0:	adc    DWORD PTR [edx+0x59],0x57
  4159b4:	pop    es
  4159b5:	pop    es
  4159b6:	xor    DWORD PTR [ebp+ecx*2-0x39e0e025],esi
  4159bd:	(bad)  
  4159bf:	aam    0x84
  4159c1:	pop    ds
  4159c2:	int    0xda
  4159c4:	mov    ds:0x5aa1fd18,eax
  4159c9:	adc    eax,0x1607c5d7
  4159ce:	inc    esp
  4159cf:	stos   DWORD PTR es:[edi],eax
  4159d0:	push   eax
  4159d1:	aaa    
  4159d2:	push   ebp
  4159d3:	mov    al,ds:0x63fc6fd
  4159d8:	add    ch,BYTE PTR [ecx]
  4159da:	sbb    BYTE PTR [esp+ebx*1],dl
  4159dd:	je     0x4159e9
  4159df:	ins    DWORD PTR es:[edi],dx
  4159e0:	xchg   edx,eax
  4159e1:	or     BYTE PTR [ecx-0x1acdbb47],ch
  4159e7:	push   edi
  4159e8:	or     DWORD PTR ds:[ebx],0xffffffd7
  4159ec:	push   0x9e00bdae
  4159f1:	outs   dx,BYTE PTR fs:[esi]
  4159f3:	cmp    eax,0x97eafc81
  4159f8:	cmp    ah,BYTE PTR [ecx-0xe]
  4159fb:	or     dh,BYTE PTR [ecx-0x193f3fdc]
  415a01:	(bad)  
  415a02:	fdivp  st(7),st
  415a04:	mov    eax,0x9106deb5
  415a09:	jmp    0x415a2b
  415a0b:	or     al,0x3c
  415a0d:	cmp    esi,DWORD PTR [ebp+0xa]
  415a10:	or     al,0x9d
  415a12:	mov    esi,DWORD PTR [edi+eiz*8-0x6b795500]
  415a19:	or     eax,0x36e366ec
  415a1e:	jmp    0x415a20
  415a20:	inc    ebp
  415a21:	cmp    BYTE PTR [esi+0x76856eae],bl
  415a27:	and    BYTE PTR [esi],dl
  415a29:	or     edx,DWORD PTR [edx-0x30]
  415a2c:	mov    al,ds:0x17b41e01
  415a31:	addr16 dec ecx
  415a33:	out    dx,al
  415a34:	adc    esp,DWORD PTR [ebp+0x18]
  415a37:	aam    0xd6
  415a39:	aad    0xe2
  415a3b:	mov    al,ds:0x2379ccca
  415a40:	push   es
  415a41:	mov    WORD PTR [ecx+0x2913d4ea],?
  415a47:	push   edi
  415a48:	jmp    0xdd37b65b
  415a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4e:	loop   0x4159da
  415a50:	jns    0x415ac2
  415a52:	fiadd  WORD PTR [edx]
  415a54:	and    bl,BYTE PTR [edx+0xadf3bf3]
  415a5a:	mov    edi,0xdf432cc4
  415a5f:	mov    ebp,0xbdf3857a
  415a64:	add    BYTE PTR [esi],bh
  415a66:	inc    esp
  415a67:	or     eax,0xf0fa1ee4
  415a6c:	(bad)  
  415a6d:	bound  ebx,QWORD PTR [ebp+0xf]
  415a70:	mov    edi,0x59fc4ff1
  415a75:	shl    BYTE PTR [edi-0x21c59a62],cl
  415a7b:	loop   0x415a11
  415a7d:	test   eax,0xa8a689df
  415a82:	sbb    al,0xde
  415a84:	pop    eax
  415a85:	test   DWORD PTR ds:0xf0e398ac,ebx
  415a8b:	push   ebx
  415a8c:	fsubr  QWORD PTR [eax-0x1d]
  415a8f:	jae    0x415aa6
  415a91:	pop    edx
  415a92:	in     al,dx
  415a93:	push   cs
  415a94:	mov    eax,0x322e8655
  415a99:	addr16 inc edx
  415a9b:	sahf   
  415a9c:	dec    ebx
  415a9d:	xor    ch,BYTE PTR [edx-0x526cd656]
  415aa3:	cmp    eax,0x82726161
  415aa8:	cs mov ch,0xe8
  415aab:	pop    esp
  415aac:	int3   
  415aad:	lds    edi,FWORD PTR [ecx+0x14]
  415ab0:	xor    eax,0x5016304a
  415ab5:	icebp  
  415ab6:	je     0x415b1e
  415ab8:	xchg   edi,eax
  415ab9:	retf   
  415aba:	test   DWORD PTR [ebx+0x3843412f],0xb7fa1f5b
  415ac4:	push   0xc3fbdd8f
  415ac9:	(bad)  
  415aca:	fidivr DWORD PTR ds:0xd2576bce
  415ad0:	leave  
  415ad1:	cmp    esi,DWORD PTR [esi+ebp*1]
  415ad4:	pop    esp
  415ad5:	(bad)  
  415ad6:	fs cmp al,0xf9
  415ad9:	and    eax,0xa13ae08f
  415ade:	fs inc esi
  415ae0:	and    ebx,eax
  415ae2:	mov    bl,BYTE PTR [ecx]
  415ae4:	mov    eax,0xf47486f4
  415ae9:	fild   WORD PTR [ecx]
  415aeb:	aaa    
  415aec:	aad    0x1c
  415aee:	cld    
  415aef:	add    cl,al
  415af1:	mov    edi,0x8de8bb8b
  415af6:	dec    esp
  415af7:	mov    fs,WORD PTR [edx-0x4f]
  415afa:	mov    ebp,esi
  415afc:	adc    al,BYTE PTR [edx-0x55]
  415aff:	pop    edi
  415b00:	aam    0x56
  415b02:	retfw  0x1d70
  415b06:	int    0xd3
  415b08:	ret    0x6da2
  415b0b:	and    eax,0xbd030bc7
  415b10:	shr    DWORD PTR [eax-0x24b28393],1
  415b16:	ret    0xa3c8
  415b19:	xchg   ecx,eax
  415b1a:	lods   eax,DWORD PTR ds:[esi]
  415b1b:	popa   
  415b1c:	mov    bl,0x40
  415b1e:	jge    0x415b6a
  415b20:	or     dh,dh
  415b22:	shl    DWORD PTR [ecx+0x71],cl
  415b25:	pop    ecx
  415b26:	fdiv   DWORD PTR [ebp+0x20395e53]
  415b2c:	test   eax,0x922ad500
  415b31:	xchg   dl,bh
  415b33:	push   esp
  415b34:	push   0x57b18616
  415b39:	xchg   esi,eax
  415b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b3b:	adc    al,BYTE PTR [esi+0x3a]
  415b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b3f:	popf   
  415b40:	lea    ebp,[eax+0xc]
  415b43:	out    0x45,eax
  415b45:	(bad)  [ecx]
  415b47:	sub    bh,ch
  415b49:	xchg   esp,eax
  415b4a:	enter  0xcecc,0x2e
  415b4e:	mov    bh,dl
  415b50:	jp     0x415bb7
  415b52:	popa   
  415b53:	out    0xd1,al
  415b55:	inc    ebp
  415b56:	ret    
  415b57:	inc    edi
  415b58:	xchg   ecx,eax
  415b59:	inc    esp
  415b5a:	xor    BYTE PTR [ebx],ch
  415b5c:	inc    ecx
  415b5d:	or     BYTE PTR [edi+eiz*2-0x45],ah
  415b61:	and    DWORD PTR [eax+0x51],0xffffffad
  415b65:	push   ebp
  415b66:	es inc eax
  415b68:	loope  0x415ba2
  415b6a:	xchg   edi,eax
  415b6b:	add    DWORD PTR [edx+0x20],edi
  415b6e:	sar    BYTE PTR [eax],0x6e
  415b71:	adc    ch,BYTE PTR [eax+0x61]
  415b74:	ret    0x780c
  415b77:	iret   
  415b78:	jg     0x415b80
  415b7a:	fild   DWORD PTR [ebp+0x7bb1b0ff]
  415b80:	cmp    esi,DWORD PTR [edx-0x2a]
  415b83:	ds scas al,BYTE PTR es:[edi]
  415b85:	lods   eax,DWORD PTR ds:[esi]
  415b86:	pop    ebx
  415b87:	push   ss
  415b88:	sbb    ebx,DWORD PTR [edi]
  415b8a:	stc    
  415b8b:	mov    ah,0x4
  415b8d:	pop    eax
  415b8e:	sub    DWORD PTR [eax],ebp
  415b90:	mov    ebp,DWORD PTR [edi-0xaaf2d78]
  415b96:	dec    esi
  415b97:	jne    0x415b4f
  415b99:	add    al,0x7f
  415b9b:	jp     0x415b78
  415b9d:	inc    esi
  415b9e:	inc    BYTE PTR [eax-0x8979280]
  415ba4:	test   DWORD PTR [eax],esp
  415ba6:	(bad)  
  415ba7:	cmp    al,0xbf
  415ba9:	lods   al,BYTE PTR ds:[esi]
  415baa:	pop    esp
  415bab:	ret    
  415bac:	push   es
  415bad:	lock push esp
  415baf:	cs scas eax,DWORD PTR es:[edi]
  415bb1:	aam    0xe2
  415bb3:	cld    
  415bb4:	imul   ecx,DWORD PTR [ecx+0x62],0xffffffaa
  415bb8:	ja     0x415ba5
  415bba:	dec    ecx
  415bbb:	or     BYTE PTR [edi+0x61],ah
  415bbe:	dec    esp
  415bbf:	jmp    0x415b5e
  415bc1:	jge    0x415be6
  415bc3:	pop    es
  415bc4:	idiv   BYTE PTR [eax+0x2fa09b57]
  415bca:	je     0x415bf1
  415bcc:	cmp    ebx,eax
  415bce:	jno    0x415b79
  415bd0:	mov    ebp,0x5e74c99f
  415bd5:	or     DWORD PTR [edx],0xffffff85
  415bd8:	jmp    0x2ed4:0xe5e27780
  415bdf:	xchg   BYTE PTR [ebp+0x1654cb60],al
  415be5:	dec    esp
  415be6:	js     0x415c06
  415be8:	fnsave [esi]
  415bea:	jo     0x415c69
  415bec:	fcmovu st,st(0)
  415bee:	xchg   DWORD PTR [edx-0x74],ebx
  415bf1:	adc    esp,DWORD PTR [edi+eiz*4+0x7c]
  415bf5:	or     eax,0xe65d178a
  415bfa:	dec    esi
  415bfb:	pushf  
  415bfc:	daa    
  415bfd:	pop    edx
  415bfe:	jnp    0x415c52
  415c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c01:	inc    ebx
  415c02:	sub    ch,cl
  415c04:	inc    edi
  415c05:	je     0x415bc0
  415c07:	leave  
  415c08:	pusha  
  415c09:	mov    dh,0xf6
  415c0b:	clc    
  415c0c:	fild   DWORD PTR [esi]
  415c0e:	in     eax,dx
  415c0f:	imul   edi,DWORD PTR [esp+ebx*1],0x26
  415c13:	pop    ebp
  415c14:	and    al,ch
  415c16:	mov    eax,DWORD PTR [edx+0x3f66f449]
  415c1c:	mov    bl,0x93
  415c1e:	pop    esi
  415c1f:	adc    BYTE PTR [ecx+0x54f1c1e1],al
  415c25:	in     al,0x4a
  415c27:	xlat   BYTE PTR ds:[ebx]
  415c28:	pop    ebx
  415c29:	sub    DWORD PTR [eax-0x7c],edx
  415c2c:	jecxz  0x415c0c
  415c2e:	pop    ds
  415c2f:	xchg   al,cl
  415c31:	sub    esp,DWORD PTR [edi+0x403f9a54]
  415c37:	mov    ebx,0x2902095b
  415c3c:	test   DWORD PTR [esi+0x6ef2befd],0x2a6f064d
  415c46:	xchg   edi,eax
  415c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c48:	(bad)  
  415c49:	pop    esi
  415c4a:	frstor [ecx+eax*4+0x31]
  415c4e:	popa   
  415c4f:	sbb    cl,BYTE PTR [ebx+0x13]
  415c52:	in     al,dx
  415c53:	ficomp DWORD PTR [esi+0x4a34eee0]
  415c59:	outs   dx,WORD PTR ds:[esi]
  415c5b:	retf   0x7a66
  415c5e:	add    ch,al
  415c60:	mov    bl,0xc2
  415c62:	in     eax,dx
  415c63:	jo     0x415bed
  415c65:	mov    bh,0xbd
  415c67:	cs pop esi
  415c69:	sub    esi,DWORD PTR [eax+0xbab3cc1]
  415c6f:	sar    al,1
  415c71:	fistp  QWORD PTR [esi+ecx*8]
  415c74:	jecxz  0x415ce7
  415c76:	xor    ah,BYTE PTR cs:[eax+0x38]
  415c7a:	push   ss
  415c7b:	dec    edx
  415c7c:	out    dx,eax
  415c7d:	test   al,0xdc
  415c7f:	xchg   BYTE PTR [ecx+0x518bf50e],dh
  415c85:	sbb    al,0xe0
  415c87:	pop    esi
  415c88:	cli    
  415c89:	sub    BYTE PTR [ebp+0x7d9cb11],0x84
  415c90:	popa   
  415c91:	lds    ecx,FWORD PTR [ebp+0x636f90c7]
  415c97:	je     0x415d17
  415c99:	lds    eax,FWORD PTR [ecx+0x46bed1f0]
  415c9f:	adc    eax,0x3824327f
  415ca4:	mov    WORD PTR [ecx],cs
  415ca6:	cli    
  415ca7:	mov    ds:0xdfabc587,al
  415cac:	xchg   ebp,eax
  415cad:	pop    ds
  415cae:	dec    ebx
  415caf:	les    ebp,FWORD PTR [edx+0x25]
  415cb2:	daa    
  415cb3:	aad    0xe6
  415cb5:	fmulp  st(7),st
  415cb7:	mov    eax,0x75dc3990
  415cbc:	jnp    0x415d2a
  415cbe:	lds    edx,FWORD PTR [ebx+0x1c00cbe]
  415cc4:	sub    BYTE PTR [esi],0x9e
  415cc7:	in     eax,0x2b
  415cc9:	(bad)
  415ccc:	jp     0x415ce2
  415cce:	cdq    
  415ccf:	mov    ecx,0x6e8f7bef
  415cd4:	cmp    DWORD PTR [ebp+0x10a05f49],edi
  415cda:	and    eax,0x3c1b3e43
  415cdf:	fsub   st,st(5)
  415ce1:	jp     0x415cec
  415ce3:	int3   
  415ce4:	jecxz  0x415cd2
  415ce6:	or     esi,ecx
  415ce8:	adc    ebx,DWORD PTR [esi]
  415cea:	pop    ebp
  415ceb:	jne    0x415d32
  415ced:	push   esp
  415cee:	jmp    0x415c98
  415cf0:	jg     0x415c8d
  415cf2:	call   DWORD PTR [edx]
  415cf4:	fcomp  DWORD PTR [eax]
  415cf6:	jmp    0x9a2cd828
  415cfb:	sbb    BYTE PTR [eax],cl
  415cfd:	jmp    0x415cbc
  415cff:	call   FWORD PTR [ebp+0x4a]
  415d02:	sub    BYTE PTR [ebp-0x61],dl
  415d05:	mov    edx,0xa528c979
  415d0a:	jecxz  0x415d22
  415d0c:	mov    ds:0x3bd76c8c,eax
  415d11:	jne    0x415cbc
  415d13:	and    ch,BYTE PTR [ecx+ecx*4]
  415d16:	stc    
  415d17:	add    DWORD PTR [esi-0x3696dba5],ecx
  415d1d:	pop    ebx
  415d1e:	shl    BYTE PTR [ebp+0x6ba6c157],0x95
  415d25:	clc    
  415d26:	jne    0x415d5c
  415d28:	add    eax,0xa0668b61
  415d2d:	push   esi
  415d2e:	lods   eax,DWORD PTR ds:[esi]
  415d2f:	jge    0x415d76
  415d31:	int3   
  415d32:	push   0xffffffeb
  415d34:	dec    esp
  415d35:	add    dh,al
  415d37:	mov    dh,0xc8
  415d39:	mov    ah,0x6
  415d3b:	popf   
  415d3c:	(bad)
  415d3f:	out    0x1b,eax
  415d41:	(bad)  
  415d42:	xlat   BYTE PTR ds:[ebx]
  415d43:	imul   esi,DWORD PTR [ecx-0x41],0xffffffe0
  415d47:	push   esp
  415d48:	mov    WORD PTR [edi-0xe],fs
  415d4b:	jnp    0x415da0
  415d4d:	(bad)  
  415d4e:	push   esp
  415d4f:	call   0x5c10a626
  415d54:	jbe    0x415d6f
  415d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d57:	sar    edx,0x66
  415d5a:	mov    ebp,0x12cfff23
  415d5f:	div    DWORD PTR [ebx-0x57acb44f]
  415d65:	mov    edi,0x3d9b7262
  415d6a:	loop   0x415d86
  415d6c:	shr    dh,1
  415d6e:	into   
  415d6f:	dec    eax
  415d70:	int    0xb9
  415d72:	jnp    0x415d41
  415d74:	mov    ebx,0xe92279de
  415d79:	sub    DWORD PTR [esi+0xfe0afd2],esp
  415d7f:	push   0x4c8fbe86
  415d84:	mov    BYTE PTR [ebx-0x6fa22723],dl
  415d8a:	push   edi
  415d8b:	push   ebx
  415d8c:	cmp    ch,dl
  415d8e:	and    BYTE PTR [ebp+0x5b],dl
  415d91:	cli    
  415d92:	xor    ch,BYTE PTR [esi+0x5a]
  415d95:	ss mov ebx,ds
  415d98:	sti    
  415d99:	push   ebx
  415d9a:	jns    0x415d22
  415d9c:	adc    DWORD PTR [ebx],esp
  415d9e:	cwde   
  415d9f:	fcomp  QWORD PTR [ebp-0x3d52457c]
  415da5:	popa   
  415da6:	add    DWORD PTR [edx],esp
  415da8:	jne    0x415df1
  415daa:	adc    BYTE PTR [edi+edi*8],dh
  415dad:	sar    BYTE PTR [esi+ecx*4-0x2ba39b6d],1
  415db4:	fld    TBYTE PTR [ebx+0x3]
  415db7:	out    dx,eax
  415db8:	(bad)  
  415db9:	pop    esi
  415dba:	sbb    esi,DWORD PTR [ecx+0x7684f982]
  415dc0:	xchg   esi,eax
  415dc1:	xchg   ecx,eax
  415dc2:	mov    ds:0xd53aa7c9,al
  415dc7:	pop    ecx
  415dc8:	daa    
  415dc9:	dec    edx
  415dca:	data16 jo 0x415d99
  415dcd:	dec    esi
  415dce:	xchg   edi,eax
  415dcf:	aaa    
  415dd0:	mov    ah,BYTE PTR [eax-0x7a4c11f]
  415dd6:	popa   
  415dd7:	mov    dl,0xff
  415dd9:	jbe    0x415db6
  415ddb:	ins    DWORD PTR es:[edi],dx
  415ddc:	jb     0x415dc2
  415dde:	and    esi,DWORD PTR [ebx]
  415de0:	imul   ecx,ebp,0x681e46e7
  415de6:	out    dx,eax
  415de7:	les    esp,FWORD PTR [edx-0x7c6f3252]
  415ded:	xchg   edx,eax
  415dee:	out    0xb6,eax
  415df0:	xchg   esp,eax
  415df1:	mov    ebp,0x87d0897d
  415df6:	aaa    
  415df7:	jge    0x415e22
  415df9:	add    BYTE PTR [eax+ecx*1+0x267ea20b],0x29
  415e01:	push   edi
  415e02:	sub    dh,BYTE PTR [edi]
  415e04:	mov    esp,0xf0ffc11f
  415e09:	and    DWORD PTR [ebx],0xffffffea
  415e0c:	push   ss
  415e0d:	jp     0x415e0a
  415e0f:	xchg   ecx,eax
  415e10:	xor    ah,dl
  415e12:	jmp    0xd05d74b9
  415e17:	pop    ebx
  415e18:	push   edx
  415e19:	popa   
  415e1a:	jno    0x415dfd
  415e1c:	mov    ch,0x85
  415e1e:	scas   al,BYTE PTR es:[edi]
  415e1f:	mov    BYTE PTR ds:0xbf78ed39,dl
  415e25:	fs imul bl
  415e28:	xchg   esi,eax
  415e29:	jo     0x415e35
  415e2b:	aad    0x12
  415e2d:	mov    al,0x3
  415e2f:	(bad)  
  415e30:	(bad)  
  415e31:	hlt    
  415e32:	leave  
  415e33:	ror    DWORD PTR [edi+eiz*4],cl
  415e36:	scas   eax,DWORD PTR es:[edi]
  415e37:	push   ebx
  415e38:	add    BYTE PTR [ebp+eiz*2+0x1c2d4796],dh
  415e3f:	add    ebp,DWORD PTR [esi-0x2c37e620]
  415e45:	adc    ch,al
  415e47:	(bad)  
  415e48:	or     ax,WORD PTR [ecx-0x59]
  415e4c:	iret   
  415e4d:	fwait
  415e4e:	sbb    edx,DWORD PTR [ecx+0x6e36ac35]
  415e54:	(bad)
  415e58:	add    DWORD PTR [eax+0x40],ecx
  415e5b:	scas   eax,DWORD PTR es:[edi]
  415e5c:	mov    ah,0x2f
  415e5e:	inc    edi
  415e5f:	aad    0xd6
  415e61:	dec    esi
  415e62:	fcomp  DWORD PTR [ebp-0x7bd0290d]
  415e68:	sbb    cl,BYTE PTR [ebx+0x57]
  415e6b:	test   al,0x9b
  415e6d:	or     BYTE PTR [ebx+0x1e4c62e],dh
  415e73:	iret   
  415e74:	sbb    ecx,esi
  415e76:	ds cwde 
  415e78:	mov    dl,0xbc
  415e7a:	out    dx,al
  415e7b:	push   ss
  415e7c:	mov    ebx,0x19020bf6
  415e81:	jle    0x415e1e
  415e83:	rcl    BYTE PTR [eax],1
  415e85:	push   cs
  415e86:	test   eax,0xa94887c3
  415e8b:	and    ch,dl
  415e8d:	mov    ds:0xd7105416,eax
  415e92:	addr16 js 0x415e5f
  415e95:	lahf   
  415e96:	adc    esp,DWORD PTR [ecx+eax*8-0x12]
  415e9a:	jmp    0x415ea0
  415e9c:	inc    DWORD PTR [edx]
  415e9e:	aaa    
  415e9f:	into   
  415ea0:	leave  
  415ea1:	add    eax,0x3dd6c1e9
  415ea6:	adc    bh,BYTE PTR [edi+0x2692e27e]
  415eac:	(bad)  
  415ead:	pop    edx
  415eae:	rcr    BYTE PTR [ebx+0x2d889093],1
  415eb4:	fild   DWORD PTR [ecx]
  415eb6:	jmp    0x415e42
  415eb8:	imul   edx,DWORD PTR [esi+0x9861ab8],0xa7d4403
  415ec2:	mov    ecx,0xd2de2304
  415ec7:	imul   ecx,DWORD PTR [eax-0x199a8533],0x1c
  415ece:	imul   BYTE PTR [esi+0x2f]
  415ed1:	jne    0x415f1c
  415ed3:	dec    ecx
  415ed4:	call   0x144ae7a7
  415ed9:	cmp    dh,0x42
  415edc:	cld    
  415edd:	add    dl,BYTE PTR [edx-0x6ce71335]
  415ee3:	js     0x415f31
  415ee5:	arpl   sp,di
  415ee7:	dec    edi
  415ee8:	or     BYTE PTR [esi+ecx*8],cl
  415eeb:	fwait
  415eec:	popa   
  415eed:	das    
  415eee:	and    bh,bh
  415ef0:	call   0x7a183d23
  415ef5:	retf   
  415ef6:	(bad)  
  415ef7:	xlat   BYTE PTR ds:[ebx]
  415ef8:	lock push cs
  415efa:	jmp    0xcc9:0xfa31ec57
  415f01:	mov    dl,0x6b
  415f03:	popf   
  415f04:	xchg   edx,eax
  415f05:	push   ecx
  415f06:	mov    edx,DWORD PTR [esi+0x42]
  415f09:	mov    dh,0x8a
  415f0b:	pop    eax
  415f0c:	jns    0x415f7a
  415f0e:	in     eax,0xab
  415f10:	push   edi
  415f11:	add    esi,DWORD PTR [edx+0xf]
  415f14:	in     eax,0x6d
  415f16:	aas    
  415f17:	adc    al,0xc6
  415f19:	jbe    0x415f12
  415f1b:	ror    DWORD PTR [eax+0x5aff8b18],0xfd
  415f22:	shl    esp,cl
  415f24:	mov    dh,BYTE PTR [ebp-0x1650100a]
  415f2a:	mov    edi,0x52800996
  415f2f:	sti    
  415f30:	jae    0x415ed4
  415f32:	jns    0x415ef8
  415f34:	retf   0x9978
  415f37:	pop    ecx
  415f38:	lahf   
  415f39:	push   ecx
  415f3a:	mov    esp,DWORD PTR [eax+0x3e5e99f]
  415f40:	test   BYTE PTR [edx+0x2d6062ad],0x7e
  415f47:	jle    0x415f3d
  415f49:	xor    ebx,DWORD PTR [edi-0x5feba884]
  415f4f:	and    eax,0x14
  415f52:	mov    ch,0xdf
  415f54:	mov    WORD PTR [ebp-0x2a879e94],es
  415f5a:	fsubr  DWORD PTR [esp+eax*4+0x8ff00d]
  415f61:	mov    ds:0x7270bebc,al
  415f66:	push   eax
  415f67:	mov    eax,ds:0x825a5f0b
  415f6c:	(bad)  
  415f6e:	ret    0x3a4b
  415f71:	xchg   edi,eax
  415f72:	jne    0x415f7a
  415f74:	test   eax,0xbf650382
  415f79:	nop
  415f7a:	mov    ah,0x9b
  415f7c:	in     eax,dx
  415f7d:	dec    eax
  415f7e:	xchg   al,ch
  415f80:	loop   0x415f0b
  415f82:	adc    al,0x22
  415f84:	test   al,0x48
  415f86:	jl     0x415fb3
  415f88:	add    al,BYTE PTR [ecx+0x0]
  415f8b:	adc    ah,bh
  415f8d:	out    0xf,al
  415f8f:	cmp    DWORD PTR [esp+eax*4],0x135a43f2
  415f96:	jge    0x415ffb
  415f98:	xchg   BYTE PTR [ebp-0x10],ah
  415f9b:	mov    es,WORD PTR [edi-0x5c00854f]
  415fa1:	pop    esi
  415fa2:	sar    BYTE PTR [eax+0x6f],1
  415fa5:	and    DWORD PTR [edx-0x1a],ebp
  415fa8:	push   edi
  415fa9:	imul   edx,ebx,0xae9d91a4
  415faf:	cwde   
  415fb0:	call   0x49434b7b
  415fb5:	sahf   
  415fb6:	adc    BYTE PTR [eax-0x6a],dh
  415fb9:	adc    ah,dl
  415fbb:	xchg   ecx,ebp
  415fbd:	dec    ebp
  415fbe:	xor    al,0xc7
  415fc0:	jge    0x415fd1
  415fc2:	add    al,0xd9
  415fc4:	aaa    
  415fc5:	sar    DWORD PTR [edi+0x5dd62cfc],cl
  415fcb:	test   al,0xdf
  415fcd:	push   0x50
  415fcf:	adc    al,0x68
  415fd1:	xchg   ebp,eax
  415fd2:	shl    DWORD PTR [ebx+0x6b],0xf5
  415fd6:	sbb    bh,BYTE PTR ds:0x5cf00565
  415fdc:	add    edx,ebx
  415fde:	or     eax,0xacb97326
  415fe3:	and    al,0x4e
  415fe5:	leave  
  415fe6:	or     edx,DWORD PTR [ecx+0x1a]
  415fe9:	jne    0x415fd6
  415feb:	ja     0x41602c
  415fed:	mov    bh,0xfa
  415fef:	rcr    DWORD PTR [ecx+ecx*1+0x68c6789c],0x83
  415ff7:	lahf   
  415ff8:	mov    ah,0xdd
  415ffa:	mov    bl,0x55
  415ffc:	imul   eax,DWORD PTR [edi+0x49aff293],0x527afec7
  416006:	add    DWORD PTR es:[edi],esi
  416009:	jle    0x415f9f
  41600b:	dec    esi
  41600c:	jne    0x415fb4
  41600e:	or     ebx,ecx
  416010:	push   0x9c08fc93
  416015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416016:	shl    al,0x38
  416019:	adc    BYTE PTR [ecx-0x57ec239a],cl
  41601f:	cld    
  416020:	(bad)  
  416021:	fisubr WORD PTR [ebx+0x4854b21c]
  416027:	mov    edx,0x45d1d1bc
  41602c:	jno    0x416090
  41602e:	in     al,dx
  41602f:	int3   
  416030:	js     0x415fcf
  416032:	dec    eax
  416033:	inc    esp
  416034:	in     eax,0x90
  416036:	dec    esp
  416037:	int    0x96
  416039:	sbb    al,0xfb
  41603b:	xchg   esi,eax
  41603c:	sbb    al,0x13
  41603e:	mov    ?,WORD PTR [esi-0x1a053507]
  416044:	mov    al,ds:0x1bd4f51c
  416049:	pop    ds
  41604a:	retf   
  41604b:	mov    edi,0xa4563ea6
  416050:	bound  ecx,QWORD PTR [edi+0xbbd80e9]
  416056:	js     0x416015
  416058:	xchg   ebx,eax
  416059:	cwde   
  41605a:	inc    ebp
  41605b:	pop    ds
  41605c:	(bad)  
  41605d:	mov    al,0x2
  41605f:	jb     0x416033
  416061:	imul   esp,DWORD PTR [eax+0x9],0x6d
  416065:	sbb    DWORD PTR [ecx],ebp
  416067:	mov    dh,0x6b
  416069:	jnp    0x416095
  41606b:	pop    eax
  41606c:	pop    ebp
  41606d:	ins    BYTE PTR es:[edi],dx
  41606e:	adc    ch,dl
  416070:	jl     0x4160dd
  416072:	push   ebx
  416073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416074:	mov    eax,0x5799531a
  416079:	mov    WORD PTR [eax],?
  41607b:	sbb    eax,0xaebf575d
  416080:	dec    edi
  416081:	xchg   edx,eax
  416082:	and    ecx,edi
  416084:	add    BYTE PTR [eax],dh
  416086:	(bad)  
  416087:	sub    DWORD PTR [edi],ebp
  416089:	pop    edx
  41608a:	xchg   edi,eax
  41608b:	push   esi
  41608c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41608d:	lods   eax,DWORD PTR ds:[esi]
  41608e:	mov    esi,0xe9b2270c
  416093:	jae    0x4160ef
  416095:	scas   al,BYTE PTR es:[edi]
  416096:	jg     0x416070
  416098:	add    BYTE PTR [ebx-0x7b],bl
  41609b:	xor    dh,BYTE PTR [ecx]
  41609d:	dec    ebx
  41609e:	push   es
  41609f:	dec    ecx
  4160a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a1:	gs jo  0x41608d
  4160a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a5:	loope  0x416038
  4160a7:	lahf   
  4160a8:	adc    DWORD PTR [ecx+0x91f5a58],edi
  4160ae:	push   ebp
  4160af:	xor    DWORD PTR [edx-0x1d771be9],0x2d295818
  4160b9:	lock jnp 0x416116
  4160bc:	push   edx
  4160bd:	out    0xf7,eax
  4160bf:	outs   dx,DWORD PTR ds:[esi]
  4160c0:	or     al,0xf5
  4160c2:	(bad)  
  4160c3:	mov    ebp,0xba85d9bc
  4160c8:	pop    es
  4160c9:	dec    esp
  4160ca:	sub    edx,DWORD PTR [ecx+0x9a0d77]
  4160d0:	add    eax,0xad1da51d
  4160d5:	lahf   
  4160d6:	jb     0x41611b
  4160d8:	bndldx (bad),[edi]
  4160db:	pop    ebp
  4160dc:	cmp    BYTE PTR [ecx],cl
  4160de:	outs   dx,BYTE PTR ds:[esi]
  4160df:	and    edi,DWORD PTR [ebx+0x75ce3efa]
  4160e5:	sbb    esp,eax
  4160e7:	mov    ds:0x2b8335f1,al
  4160ec:	gs (bad) 
  4160ef:	fwait
  4160f0:	ins    DWORD PTR es:[edi],dx
  4160f1:	xadd   BYTE PTR [ecx-0x2dd9dcf6],dh
  4160f8:	jecxz  0x416105
  4160fa:	add    DWORD PTR [eax+ebp*8],ebp
  4160fd:	cmp    esp,edi
  4160ff:	xchg   edi,eax
  416100:	les    edx,FWORD PTR [ecx+0x71]
  416103:	or     esi,DWORD PTR [ebp+edi*2-0x7228aac1]
  41610a:	push   esi
  41610b:	and    WORD PTR [edi],bp
  41610e:	jae    0x416146
  416110:	fwait
  416111:	out    dx,al
  416112:	add    ah,BYTE PTR [ebx+0x2c]
  416115:	in     al,0x8b
  416117:	add    DWORD PTR [ecx+0x22],eax
  41611a:	add    BYTE PTR [ecx],bl
  41611c:	int3   
  41611d:	sub    BYTE PTR [esi-0x43],cl
  416120:	xchg   DWORD PTR [ecx],ebx
  416122:	and    DWORD PTR [esi+0x8],ecx
  416125:	inc    ecx
  416126:	rcl    BYTE PTR [esp+eiz*4],cl
  416129:	pusha  
  41612a:	sub    al,0x3
  41612c:	sbb    ebx,eax
  41612e:	clc    
  41612f:	push   ds
  416130:	mov    ds,WORD PTR [edi]
  416132:	das    
  416133:	add    dl,bl
  416135:	retf   
  416136:	imul   DWORD PTR [ecx+0x1a]
  416139:	sub    edx,DWORD PTR [edx-0x5af0f44b]
  41613f:	call   0x12d4825e
  416144:	mov    cl,0xd
  416146:	aam    0xb3
  416148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416149:	sti    
  41614a:	add    al,0x81
  41614c:	leave  
  41614d:	fdiv   DWORD PTR [esi-0x6ab91d69]
  416153:	scas   al,BYTE PTR es:[edi]
  416154:	push   ss
  416155:	dec    esi
  416156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416157:	repz sbb ch,BYTE PTR [ebx+0x72]
  41615b:	imul   DWORD PTR [ecx+0xd]
  41615e:	push   edx
  41615f:	rol    DWORD PTR [eax-0x6327eb4c],cl
  416165:	addr16 push eax
  416167:	xchg   ebx,eax
  416168:	adc    al,0xb5
  41616a:	cmp    DWORD PTR [ecx+0x4d],esi
  41616d:	icebp  
  41616e:	sub    al,0xee
  416170:	push   cs
  416171:	xor    DWORD PTR [ebx],ecx
  416173:	sahf   
  416174:	fs mov dl,0xdf
  416177:	jb     0x416199
  416179:	hlt    
  41617a:	push   esi
  41617b:	lods   al,BYTE PTR ds:[esi]
  41617c:	(bad)  
  41617d:	push   es
  41617e:	ss or  eax,0x5fdf3704
  416184:	and    eax,0x3b402dba
  416189:	pop    ecx
  41618a:	add    eax,0xe63946f1
  41618f:	(bad)  
  416190:	std    
  416191:	mov    esp,DWORD PTR [eax]
  416193:	ret    0x3552
  416196:	mov    bl,0x8f
  416198:	aaa    
  416199:	daa    
  41619a:	(bad)
  41619d:	xchg   sp,ax
  41619f:	in     al,dx
  4161a0:	xchg   esi,eax
  4161a1:	pop    ss
  4161a2:	jp     0x4161f4
  4161a4:	cmp    al,0x67
  4161a6:	pop    eax
  4161a7:	dec    edi
  4161a8:	loopne 0x41615d
  4161aa:	cmp    bh,BYTE PTR [esi+0x4381ed10]
  4161b0:	imul   ebp,DWORD PTR [eax+0x63114453],0xd
  4161b7:	test   DWORD PTR [esi+0x7d92129b],ecx
  4161bd:	mov    ah,0xe2
  4161bf:	xchg   esi,eax
  4161c0:	xchg   BYTE PTR [eax-0xb],bh
  4161c3:	test   al,0x7b
  4161c5:	adc    BYTE PTR [edi],bl
  4161c7:	lods   al,BYTE PTR ds:[esi]
  4161c8:	addr16 cmp cl,0x11
  4161cc:	fcomip st,st(0)
  4161ce:	mov    ?,ebp
  4161d0:	js     0x4161e5
  4161d2:	aaa    
  4161d3:	lea    ebx,[ebp-0x17c78ad9]
  4161d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161da:	mov    edx,eax
  4161dc:	xchg   ebp,eax
  4161dd:	sti    
  4161de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161df:	dec    ebp
  4161e0:	pop    esp
  4161e1:	or     BYTE PTR [eax+0x77],ah
  4161e4:	xchg   BYTE PTR [eax+0x1c],bh
  4161e7:	sub    edx,edx
  4161e9:	(bad)  
  4161ea:	int3   
  4161eb:	add    ebx,DWORD PTR [eax+0x768620ee]
  4161f1:	mov    ebp,DWORD PTR [ebx-0x7d4c257]
  4161f7:	pushf  
  4161f8:	jg     0x41622a
  4161fa:	or     BYTE PTR [esi],ah
  4161fc:	sub    ch,al
  4161fe:	loopne 0x416199
  416200:	push   esi
  416201:	ss push esi
  416203:	mov    eax,0x9dd99f7d
  416208:	pop    edi
  416209:	pop    edx
  41620a:	cli    
  41620b:	pusha  
  41620c:	cmp    al,0xe2
  41620e:	push   ebp
  41620f:	lods   al,BYTE PTR ds:[esi]
  416210:	pop    ebp
  416211:	pushf  
  416212:	cdq    
  416213:	je     0x41627f
  416215:	sub    dh,BYTE PTR [edx]
  416217:	mov    ds:0xb27ef2ee,eax
  41621c:	pop    ds
  41621d:	mov    al,ds:0x6f57ffba
  416222:	das    
  416223:	mov    BYTE PTR [ebp-0x46fbfdc],ch
  416229:	mov    eax,ds:0xec8dfb1e
  41622e:	lahf   
  41622f:	loopne 0x4161ea
  416231:	xor    edx,DWORD PTR [edx-0x7]
  416234:	pushf  
  416235:	iret   
  416236:	xlat   BYTE PTR ds:[ebx]
  416237:	xchg   edx,eax
  416238:	xchg   ebx,eax
  416239:	adc    DWORD PTR [esi],eax
  41623b:	push   esp
  41623c:	test   eax,0xd467e7a5
  416241:	mov    al,ds:0x69fc6277
  416246:	sub    BYTE PTR [eax+esi*2],bh
  416249:	xchg   ecx,eax
  41624a:	dec    BYTE PTR [edi-0x70]
  41624d:	jne    0x4161ff
  41624f:	ss push esp
  416251:	dec    ebx
  416252:	dec    eax
  416253:	fwait
  416254:	ret    
  416255:	cli    
  416256:	xor    BYTE PTR [eax-0xda21489],al
  41625c:	push   ecx
  41625d:	jecxz  0x4162ae
  41625f:	stos   DWORD PTR es:[edi],eax
  416260:	stc    
  416261:	repnz or al,0x93
  416264:	(bad)  
  416265:	jle    0x416226
  416267:	adc    al,0x17
  416269:	fst    QWORD PTR [ebp-0x12]
  41626c:	jl     0x41620f
  41626e:	push   cs
  41626f:	in     eax,dx
  416270:	mov    edx,0xf124df17
  416275:	lds    ecx,FWORD PTR [eax+0x26af86f2]
  41627b:	rcl    BYTE PTR [ebx-0x56],cl
  41627e:	popf   
  41627f:	movlps QWORD PTR [ebp-0x5c],xmm0
  416283:	(bad)  
  416284:	into   
  416285:	nop
  416286:	pop    esi
  416287:	cmp    BYTE PTR [edx+edi*8+0x74],cl
  41628b:	mov    bl,0x34
  41628d:	mov    al,0x1f
  41628f:	adc    BYTE PTR [edi],bl
  416291:	sub    BYTE PTR [edx-0x5],bl
  416294:	(bad)  
  416295:	jmp    0x4d75d485
  41629a:	cdq    
  41629b:	adc    BYTE PTR [edi-0x3f],cl
  41629e:	ror    DWORD PTR [edx+0x62],0x44
  4162a2:	or     bl,BYTE PTR ds:0x6e8cf5c2
  4162a8:	xor    ebp,DWORD PTR [esi+0x2c3835ae]
  4162ae:	stos   DWORD PTR es:[edi],eax
  4162af:	clc    
  4162b0:	int    0x83
  4162b2:	cmp    cl,BYTE PTR [ebx-0x20]
  4162b5:	mov    edi,0xd99e17d7
  4162ba:	mov    ch,0xf4
  4162bc:	and    DWORD PTR [esi-0x7b0c44ce],ebx
  4162c2:	mov    ebx,0x990347f3
  4162c7:	dec    esi
  4162c8:	sub    al,0x15
  4162ca:	pop    esp
  4162cb:	cld    
  4162cc:	arpl   WORD PTR [ebx],cx
  4162ce:	retf   
  4162cf:	pop    esp
  4162d0:	cld    
  4162d1:	mov    al,0xc0
  4162d3:	push   ds
  4162d4:	fmul   st(1),st
  4162d6:	xchg   edi,eax
  4162d7:	cmc    
  4162d8:	add    al,0xbd
  4162da:	leave  
  4162db:	xor    eax,0x5d9e7a3d
  4162e0:	and    BYTE PTR [ebx+edx*4],ch
  4162e3:	adc    cl,BYTE PTR [esi+0x53d5d2a9]
  4162e9:	inc    ebx
  4162ea:	cmp    eax,0x55e6ddbe
  4162ef:	fdivr  DWORD PTR [edx+0x3da35cc]
  4162f5:	cmp    DWORD PTR [ebp+0x6c953d6b],ebp
  4162fb:	pop    eax
  4162fc:	dec    ecx
  4162fd:	scas   eax,DWORD PTR es:[edi]
  4162fe:	xchg   ecx,eax
  4162ff:	pop    eax
  416300:	jg     0x416329
  416302:	cwde   
  416303:	and    eax,0xf6b47c31
  416308:	mov    ah,0x3b
  41630b:	adc    eax,0x971681e6
  416310:	dec    eax
  416311:	test   DWORD PTR [edx-0x21db4d2e],esp
  416317:	sub    eax,DWORD PTR [edx-0x2bcd788d]
  41631d:	add    al,0x22
  41631f:	mov    dh,0xed
  416321:	jb     0x4162a9
  416323:	xchg   ecx,eax
  416324:	fmul   st,st(3)
  416326:	mov    gs,WORD PTR [ebp-0x76]
  416329:	in     eax,0x36
  41632b:	aad    0xf
  41632d:	add    DWORD PTR [ebp+esi*1-0x7bbfbbc3],ebp
  416334:	aad    0xe1
  416336:	call   DWORD PTR [ecx]
  416338:	data16 adc BYTE PTR [edx+0x73],bh
  41633c:	lds    edx,FWORD PTR [eax]
  41633e:	outs   dx,BYTE PTR ds:[esi]
  41633f:	pop    esi
  416340:	pop    ebx
  416341:	out    dx,eax
  416342:	jl     0x416307
  416344:	xor    eax,0x72cf1fc4
  416349:	es data16 (bad) 
  41634c:	dec    esi
  41634d:	out    0xc5,eax
  41634f:	sub    eax,0x5adaa82a
  416354:	fmul   DWORD PTR [ecx+ecx*1]
  416357:	and    al,0x29
  416359:	cwde   
  41635a:	jge    0x41633b
  41635c:	clc    
  41635d:	test   eax,0xb12fa939
  416362:	or     al,BYTE PTR [edi-0x25]
  416365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416366:	in     eax,dx
  416367:	jno    0x41631a
  416369:	jne    0x41636a
  41636b:	in     eax,dx
  41636c:	scas   eax,DWORD PTR es:[edi]
  41636d:	push   ds
  41636e:	data16 mov ds:0xbffa7f39,al
  416374:	mov    eax,0x980ef62a
  416379:	sbb    DWORD PTR [ebx+0x78],ecx
  41637c:	outs   dx,BYTE PTR ds:[esi]
  41637d:	pop    esi
  41637e:	inc    edi
  41637f:	fild   QWORD PTR [ebp-0x1e]
  416382:	scas   eax,DWORD PTR es:[edi]
  416383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416384:	stc    
  416385:	cli    
  416386:	pop    edx
  416387:	push   ebx
  416388:	sbb    al,0x10
  41638a:	retf   0x78cf
  41638d:	or     ah,BYTE PTR [ecx]
  41638f:	push   eax
  416390:	inc    ebx
  416391:	data16 jo 0x416315
  416394:	inc    edx
  416395:	js     0x41632e
  416397:	sub    eax,0x6b92fc0c
  41639c:	xor    esp,eax
  41639e:	ds scas eax,DWORD PTR es:[edi]
  4163a0:	sbb    esp,eax
  4163a2:	mov    ch,0x72
  4163a4:	je     0x416420
  4163a6:	inc    ebp
  4163a7:	neg    BYTE PTR [ebp+0x5d]
  4163aa:	sahf   
  4163ab:	ret    
  4163ac:	push   esp
  4163ad:	and    eax,0xb24148bc
  4163b2:	jns    0x416387
  4163b4:	leave  
  4163b5:	imul   edx,edx,0x37dcf4b3
  4163bb:	fs jmp 0x9d32f3a
  4163c1:	repnz lods eax,DWORD PTR ds:[esi]
  4163c3:	repz xchg edx,eax
  4163c5:	iret   
  4163c6:	stos   DWORD PTR es:[edi],eax
  4163c7:	in     eax,0x14
  4163c9:	(bad)  
  4163ca:	xchg   esi,eax
  4163cb:	inc    ebx
  4163cc:	test   al,0xb1
  4163ce:	or     dh,BYTE PTR [eax]
  4163d0:	clc    
  4163d1:	rol    DWORD PTR [eax+0x924529e],cl
  4163d7:	hlt    
  4163d8:	out    0xae,eax
  4163da:	xchg   DWORD PTR [eax],esp
  4163dc:	aaa    
  4163dd:	fcom   QWORD PTR [esi+eiz*8-0x21fb2295]
  4163e4:	dec    edi
  4163e5:	xchg   ch,ah
  4163e7:	inc    esp
  4163e8:	push   DWORD PTR [ecx-0x7]
  4163eb:	push   ebp
  4163ec:	pushf  
  4163ed:	pop    eax
  4163ee:	mov    al,0xe3
  4163f0:	sbb    ch,BYTE PTR [ecx+ecx*8-0x545fd30d]
  4163f7:	xchg   ecx,eax
  4163f8:	out    0x33,eax
  4163fa:	push   eax
  4163fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fc:	sbb    bh,BYTE PTR [eax+0x4]
  4163ff:	aam    0xd4
  416401:	aas    
  416402:	popf   
  416403:	popa   
  416404:	nop
  416405:	mov    esi,0xff9d27d8
  41640a:	push   0x2acae28d
  41640f:	adc    eax,0x5474f26f
  416414:	mov    bl,0xd4
  416416:	push   cs
  416417:	ret    
  416418:	mov    esp,0x9e1e0a32
  41641d:	ret    
  41641e:	pop    ss
  41641f:	jle    0x416470
  416421:	inc    eax
  416422:	hlt    
  416423:	daa    
  416424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416425:	out    0x1e,al
  416427:	shr    BYTE PTR [esp+eax*2+0x292c4f0a],1
  41642e:	cmp    dh,BYTE PTR [ebx+ebx*8-0xc524281]
  416435:	je     0x4163f3
  416437:	loop   0x4164b1
  416439:	outs   dx,DWORD PTR ds:[esi]
  41643a:	jecxz  0x41648e
  41643c:	push   esp
  41643d:	fmul   QWORD PTR [esi-0x52]
  416440:	clc    
  416441:	out    0x43,eax
  416443:	rcr    BYTE PTR ds:0x463aa60f,cl
  416449:	sbb    cl,BYTE PTR [eax+0x7e]
  41644c:	pop    esi
  41644d:	sar    ah,0x2f
  416450:	sub    edi,ebp
  416452:	inc    edi
  416453:	enter  0x1877,0x94
  416457:	jmp    0x8794:0x43f49b49
  41645e:	rcr    BYTE PTR [ecx+0x3adf698d],0x67
  416465:	mov    ds:0x746262ca,eax
  41646a:	sbb    esp,eax
  41646c:	cwde   
  41646d:	repnz nop
  41646f:	int3   
  416470:	jnp    0x416406
  416472:	mov    esp,ds
  416474:	icebp  
  416475:	jmp    0x4164a9
  416477:	or     al,0xd2
  416479:	jecxz  0x4164c3
  41647b:	shl    BYTE PTR [ecx],0xb6
  41647e:	adc    eax,0x260d63f
  416483:	scas   al,BYTE PTR es:[edi]
  416484:	lea    esp,[edi-0x62c6209c]
  41648a:	inc    esp
  41648b:	mov    ebp,0x2973f8a9
  416490:	dec    ebx
  416491:	cmc    
  416492:	xor    dh,ah
  416494:	dec    esp
  416495:	jno    0x4164cb
  416497:	pop    edx
  416498:	std    
  416499:	jmp    0x7859:0xb24bf3d1
  4164a0:	(bad)  
  4164a1:	js     0x41645b
  4164a3:	xchg   ebp,eax
  4164a4:	mov    esp,0x4a972a52
  4164a9:	mov    ds:0x53617e4a,eax
  4164ae:	xchg   ebx,eax
  4164af:	dec    edx
  4164b0:	jno    0x41652c
  4164b2:	xchg   ebx,eax
  4164b3:	xchg   bx,ax
  4164b5:	fild   DWORD PTR [eax+ecx*1]
  4164b8:	push   0x867da16c
  4164bd:	clc    
  4164be:	mov    al,0x6b
  4164c0:	push   esp
  4164c1:	jo     0x416536
  4164c3:	hlt    
  4164c4:	mov    al,ds:0xfc7d83eb
  4164c9:	mov    esp,0xe83d2a95
  4164ce:	retf   
  4164cf:	shl    DWORD PTR [edi-0x3db4830e],0x6c
  4164d6:	shl    ebx,1
  4164d8:	(bad)  
  4164d9:	nop
  4164da:	push   ds
  4164db:	jbe    0x416543
  4164dd:	push   eax
  4164de:	dec    ebx
  4164df:	xchg   DWORD PTR [edx-0x69],esi
  4164e2:	sub    eax,0xeedc8af
  4164e7:	mov    cl,0x6c
  4164e9:	mov    ch,0xe1
  4164eb:	pop    edi
  4164ec:	sub    dl,BYTE PTR [ebx+ebx*4]
  4164ef:	call   0xcec6:0x3bd2d4a4
  4164f6:	std    
  4164f7:	mov    ecx,0x4d43c940
  4164fc:	push   edi
  4164fd:	jo     0x416552
  4164ff:	std    
  416500:	mov    dh,0xf5
  416502:	lods   al,BYTE PTR ds:[esi]
  416503:	mov    edi,0x59ea664d
  416508:	test   bl,0x79
  41650b:	jbe    0x41657b
  41650d:	mov    al,0xe5
  41650f:	inc    ecx
  416510:	push   ebp
  416511:	call   0xcf8756c0
  416516:	jecxz  0x416550
  416518:	xlat   BYTE PTR ds:[ebx]
  416519:	call   0x83c4:0x54a3a88b
  416520:	(bad)  
  416521:	pop    ecx
  416522:	mov    ecx,DWORD PTR [esp+eiz*2]
  416525:	push   0xbf5baecb
  41652a:	push   es
  41652b:	cmp    ah,BYTE PTR [eax-0x4b47fd16]
  416531:	inc    edi
  416532:	jb     0x4165ae
  416534:	ja     0x416538
  416536:	sub    BYTE PTR [ebp+0x9ea0df7],cl
  41653c:	out    dx,al
  41653d:	popf   
  41653e:	jl     0x4164fb
  416540:	call   0x13d6:0x4332bbc
  416547:	pop    ebx
  416548:	(bad)  
  416549:	aad    0xf1
  41654b:	or     DWORD PTR [eax],0x3b3939bf
  416551:	or     ah,BYTE PTR [esi-0x2ee71354]
  416557:	ds ss and eax,0xbbf4a741
  41655e:	add    BYTE PTR [edi-0x32bc516],ah
  416564:	imul   esp,DWORD PTR [edi+0x7f],0xffffffbc
  416568:	js     0x416577
  41656a:	jo     0x416598
  41656c:	pushf  
  41656d:	neg    esp
  41656f:	jo     0x4165b7
  416571:	cmp    BYTE PTR [esi+0x7],bl
  416574:	shr    DWORD PTR ss:[edi],0xb
  416578:	mov    al,ds:0xfb9c50aa
  41657d:	adc    al,0xa7
  41657f:	ret    
  416580:	sub    bh,BYTE PTR [ecx+0x18463a3d]
  416586:	sub    eax,0x7505febd
  41658b:	jbe    0x4165ab
  41658d:	adc    BYTE PTR [ecx-0x7b7359e5],dh
  416593:	add    eax,0x77fb8cbb
  416598:	and    BYTE PTR [esi-0x5c],al
  41659b:	dec    eax
  41659c:	adc    eax,0x660babae
  4165a1:	out    dx,eax
  4165a2:	xchg   edi,eax
  4165a3:	out    0x57,eax
  4165a5:	arpl   WORD PTR [edi-0x6e],dx
  4165a8:	dec    eax
  4165a9:	xchg   BYTE PTR [ebx],dh
  4165ab:	sub    eax,0x2541cf69
  4165b0:	add    ecx,DWORD PTR [edi+0x3f]
  4165b3:	jo     0x41657b
  4165b5:	dec    ecx
  4165b6:	jle    0x416571
  4165b8:	xchg   ebx,eax
  4165b9:	mov    ebx,0x70194e12
  4165be:	lahf   
  4165bf:	inc    ebp
  4165c0:	in     eax,0x33
  4165c2:	sbb    cl,BYTE PTR [ebx-0x127180e]
  4165c8:	push   ebp
  4165c9:	neg    DWORD PTR [eax-0xf3d4833]
  4165cf:	test   al,0x93
  4165d1:	fstp   TBYTE PTR [edi+0x3f]
  4165d4:	cmp    DWORD PTR [edi+0x51fd6e88],esi
  4165da:	push   ecx
  4165db:	jecxz  0x416632
  4165dd:	adc    esp,DWORD PTR [eax]
  4165df:	xor    eax,0xef64cf9e
  4165e4:	lods   al,BYTE PTR ds:[esi]
  4165e5:	sar    DWORD PTR [eax-0x6d99c476],0xa2
  4165ec:	push   eax
  4165ed:	call   0x80dd:0x53a5985
  4165f4:	scas   eax,DWORD PTR es:[edi]
  4165f5:	aaa    
  4165f6:	(bad)  
  4165f7:	adc    al,0xd7
  4165f9:	dec    edi
  4165fa:	jae    0x41661d
  4165fc:	push   ebp
  4165fd:	inc    esi
  4165fe:	jne    0x4165c0
  416600:	mov    al,0x9f
  416602:	inc    edi
  416603:	les    esp,FWORD PTR [ebp-0x54]
  416606:	sar    dl,cl
  416608:	dec    edx
  416609:	ret    0xa35
  41660c:	stos   DWORD PTR es:[edi],eax
  41660d:	out    dx,al
  41660e:	inc    edx
  41660f:	loop   0x416598
  416611:	sub    eax,0xd6fe3e93
  416616:	pop    edx
  416617:	test   dh,0x21
  41661a:	mov    dl,0x49
  41661c:	pop    edx
  41661d:	cwde   
  41661e:	mov    dl,dh
  416620:	add    eax,eax
  416622:	and    dh,BYTE PTR [esi-0x45]
  416625:	cmc    
  416626:	jne    0x416607
  416628:	cdq    
  416629:	loop   0x4165d0
  41662b:	inc    esp
  41662c:	mov    ds:0xc64b2cfa,al
  416631:	cmp    dh,BYTE PTR [esi]
  416633:	enter  0xe379,0xd8
  416637:	test   BYTE PTR [esi],cl
  416639:	pop    ss
  41663a:	es pop ss
  41663c:	xchg   edi,eax
  41663d:	push   ecx
  41663e:	lahf   
  41663f:	lock cmc 
  416641:	sub    eax,0x21fb11df
  416646:	sub    DWORD PTR [ebx+0x6ac68098],ecx
  41664c:	cmp    eax,0x921a5abb
  416651:	clc    
  416652:	inc    esp
  416653:	cmp    BYTE PTR [edx-0x1c54fa1e],ah
  416659:	sbb    BYTE PTR [ebx],dl
  41665b:	pop    ebx
  41665c:	push   es
  41665d:	fld    TBYTE PTR [ecx-0x1b8ea48e]
  416663:	les    esp,FWORD PTR [ecx+0x4f853b22]
  416669:	(bad)  
  41666a:	jno    0x41668b
  41666c:	mov    al,0x1f
  41666e:	repnz or DWORD PTR [eax+0x53],esp
  416672:	sbb    ch,BYTE PTR [edi+eax*1]
  416675:	pop    eax
  416676:	pop    esi
  416677:	push   esi
  416678:	pop    es
  416679:	in     eax,dx
  41667a:	and    bl,BYTE PTR [edx+0x3b]
  41667d:	add    BYTE PTR [edi-0xb],0xc1
  416681:	gs dec ebp
  416683:	rcl    BYTE PTR [ecx-0x55],cl
  416686:	fld    DWORD PTR [esi+0x5a3c9669]
  41668c:	mov    eax,ds:0xa085df20
  416691:	test   eax,0xcea60b4a
  416696:	xchg   ecx,eax
  416697:	shl    edx,1
  416699:	(bad)  
  41669a:	dec    ecx
  41669b:	mov    bl,0x9e
  41669d:	test   eax,0x4ad8bc16
  4166a2:	aaa    
  4166a3:	inc    esi
  4166a4:	aam    0x95
  4166a6:	xlat   BYTE PTR ds:[ebx]
  4166a7:	daa    
  4166a8:	das    
  4166a9:	popf   
  4166aa:	cmp    eax,0x104e1213
  4166af:	cli    
  4166b0:	fdivr  DWORD PTR [edi]
  4166b2:	and    BYTE PTR fs:[edi],dl
  4166b5:	and    bh,BYTE PTR [eax]
  4166b7:	sub    dl,BYTE PTR [ecx]
  4166b9:	pop    esi
  4166ba:	leave  
  4166bb:	mov    edx,0x60bb8609
  4166c0:	fnstcw WORD PTR [edx+0x6e5bc908]
  4166c6:	xor    BYTE PTR [ebx],al
  4166c8:	dec    esi
  4166c9:	lock push ebx
  4166cb:	iret   
  4166cc:	add    eax,0xb55916ba
  4166d1:	add    dl,BYTE PTR [edx-0x73]
  4166d4:	sbb    BYTE PTR [edi-0x78],al
  4166d7:	inc    esp
  4166d8:	sbb    ebp,DWORD PTR [edi]
  4166da:	mul    DWORD PTR [ebp+0x65]
  4166dd:	test   DWORD PTR [edi],ecx
  4166df:	loop   0x416703
  4166e1:	sub    BYTE PTR [esi],ah
  4166e3:	mov    dl,0x3d
  4166e5:	fmul   DWORD PTR [ebx+eax*1+0xcdb064c]
  4166ec:	xchg   ecx,eax
  4166ed:	shr    BYTE PTR [ebp-0x62a17d88],cl
  4166f3:	or     al,0xb5
  4166f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f6:	pop    ds
  4166f7:	dec    esi
  4166f8:	call   0x880d:0x46644e69
  4166ff:	fcom   DWORD PTR [ecx-0x3b9bd68f]
  416705:	sbb    edi,edi
  416707:	out    0x2c,eax
  416709:	adc    ah,BYTE PTR [ecx-0x7d]
  41670c:	inc    esp
  41670d:	scas   eax,DWORD PTR es:[edi]
  41670e:	cwde   
  41670f:	xchg   esp,eax
  416710:	clc    
  416711:	push   esp
  416712:	data16 sbb bl,BYTE PTR ds:0x3bbbb078
  416719:	mov    edx,0xffadd678
  41671e:	sub    BYTE PTR [ebp+0x4d],dl
  416721:	pop    ebp
  416722:	aaa    
  416723:	xchg   edx,eax
  416724:	aas    
  416725:	stos   DWORD PTR es:[edi],eax
  416726:	scas   eax,DWORD PTR es:[edi]
  416727:	cmp    al,0xe7
  416729:	inc    ebx
  41672a:	mov    ds:0x192eeffd,al
  41672f:	loopne 0x4166da
  416731:	cmp    al,0x59
  416733:	pop    edi
  416734:	addr16 push ds
  416736:	iret   
  416737:	pusha  
  416738:	lahf   
  416739:	mov    al,0xa7
  41673b:	fstp   st(2)
  41673d:	in     eax,dx
  41673e:	dec    ecx
  41673f:	xor    DWORD PTR [ebp-0x4],edx
  416742:	ret    0xc554
  416745:	mov    cs,WORD PTR [eax]
  416747:	gs (bad) 
  416749:	push   ss
  41674a:	popa   
  41674b:	jae    0x41677e
  41674d:	std    
  41674e:	push   0x51
  416750:	jns    0x416756
  416752:	aad    0xbe
  416754:	push   edi
  416755:	aad    0x44
  416757:	mov    edi,ds
  416759:	jl     0x416765
  41675b:	enter  0x25e5,0xbc
  41675f:	test   BYTE PTR [edi+ebp*8],ch
  416762:	arpl   sp,si
  416764:	mov    al,BYTE PTR [eax]
  416766:	adc    eax,0x77bf041e
  41676b:	pop    esp
  41676c:	or     DWORD PTR [ebx-0x3a],esp
  41676f:	js     0x416765
  416771:	shl    ecx,0x32
  416774:	(bad)  [eax+0x50]
  416777:	pop    esi
  416778:	es jae 0x41673b
  41677b:	dec    edx
  41677c:	aaa    
  41677d:	xchg   ecx,eax
  41677e:	push   eax
  41677f:	ins    BYTE PTR es:[edi],dx
  416780:	ret    
  416781:	mov    ch,0xf8
  416783:	xlat   BYTE PTR ds:[ebx]
  416784:	mov    ebp,0x2f27acae
  416789:	pusha  
  41678a:	sbb    ebx,DWORD PTR [esi+0x4a0baf7]
  416790:	add    eax,0x34a2b17e
  416795:	xor    eax,0x5c9942cc
  41679a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679b:	clc    
  41679c:	xlat   BYTE PTR ds:[ebx]
  41679d:	xor    eax,0x76f0f19b
  4167a2:	and    eax,0x2e4f3cde
  4167a7:	xor    eax,DWORD PTR [eax-0x6]
  4167aa:	jbe    0x41673f
  4167ac:	mov    WORD PTR [edi],es
  4167ae:	icebp  
  4167af:	aam    0x4a
  4167b1:	mov    bh,0x18
  4167b3:	sbb    DWORD PTR [eax+0x22],edx
  4167b6:	in     al,0x44
  4167b8:	enter  0x21ef,0x1
  4167bc:	pop    ebx
  4167bd:	xor    eax,0xcfa9aaa6
  4167c2:	fs iret 
  4167c4:	dec    ecx
  4167c5:	push   edi
  4167c6:	ins    DWORD PTR es:[edi],dx
  4167c7:	adc    eax,0x19f7a47e
  4167cc:	in     eax,dx
  4167cd:	imul   eax,edi,0x97df46b4
  4167d3:	push   esp
  4167d4:	sbb    eax,0xc46bff5b
  4167d9:	aam    0xfa
  4167db:	inc    edx
  4167dc:	int    0x78
  4167de:	clc    
  4167df:	stc    
  4167e0:	mov    esp,DWORD PTR [edi-0x6a08eb01]
  4167e6:	dec    esi
  4167e7:	pop    esi
  4167e8:	imul   ebx,DWORD PTR [ecx],0x1eefc8d2
  4167ee:	inc    BYTE PTR ds:0xb4144c4a
  4167f4:	imul   esp,ebp,0xec9693e6
  4167fa:	mov    ch,0x77
  4167fc:	jnp    0x416791
  4167fe:	mov    esi,0xecc6b7f4
  416803:	shl    DWORD PTR ds:0x1c638783,cl
  416809:	mov    ebx,0x473f5a68
  41680e:	fstp   QWORD PTR [ebx+0x64978d61]
  416814:	xchg   DWORD PTR [edi],eax
  416816:	push   es
  416817:	jnp    0x416842
  416819:	gs std 
  41681b:	adc    eax,0x505f0db0
  416820:	cmp    DWORD PTR [ebx+0x10144333],edx
  416826:	push   eax
  416827:	aad    0x24
  416829:	test   al,0x3
  41682b:	add    DWORD PTR [edi+0x70],ebx
  41682e:	icebp  
  41682f:	in     eax,dx
  416830:	sub    DWORD PTR [ebx+ecx*4-0x51],ebp
  416834:	leave  
  416835:	jne    0x4167de
  416837:	mov    bl,BYTE PTR [ecx]
  416839:	xchg   ecx,eax
  41683a:	cli    
  41683b:	(bad)  
  41683c:	sub    bh,cl
  41683e:	xchg   esp,eax
  41683f:	aad    0xbe
  416841:	add    DWORD PTR [ecx-0x13],edi
  416844:	jg     0x416831
  416846:	test   DWORD PTR [edi-0x10c27b48],edi
  41684c:	arpl   bp,bp
  41684e:	clc    
  41684f:	pop    esp
  416850:	xchg   BYTE PTR [ecx+0x2a],ah
  416853:	add    dl,ah
  416855:	cmp    eax,0x4774d6a3
  41685a:	sub    ecx,eax
  41685c:	ret    
  41685d:	popf   
  41685e:	mov    WORD PTR [eax+0x6638ca6],fs
  416864:	das    
  416865:	jmp    0x54831164
  41686a:	add    edi,DWORD PTR [eax+0x66]
  41686d:	or     DWORD PTR [ebx],0x6
  416870:	(bad)  
  416871:	out    dx,eax
  416872:	mov    bl,0x2c
  416874:	cmp    ebp,DWORD PTR [ecx-0x437a1d47]
  41687a:	jb     0x416868
  41687c:	dec    ebp
  41687d:	call   edx
  41687f:	jge    0x4168f1
  416881:	inc    esi
  416882:	pop    es
  416883:	sbb    edx,DWORD PTR [ecx+0x9]
  416886:	loope  0x416844
  416888:	inc    esi
  416889:	mov    dh,0x26
  41688b:	mov    bl,0x19
  41688d:	adc    DWORD PTR ds:0x63420adb,edi
  416893:	pop    edx
  416894:	add    eax,0xb4da1476
  416899:	push   es
  41689a:	mov    eax,0x5cf77f43
  41689f:	loop   0x41685f
  4168a1:	ror    esp,0x93
  4168a4:	ins    DWORD PTR es:[edi],dx
  4168a5:	mov    bh,0xc1
  4168a7:	mul    BYTE PTR [di]
  4168aa:	and    eax,0xba781f6d
  4168af:	data16 mov dl,BYTE PTR [eax]
  4168b2:	jge    0x4168fe
  4168b4:	adc    dl,BYTE PTR [ecx-0x5f6db5b0]
  4168ba:	jo     0x416894
  4168bc:	adc    cl,BYTE PTR [esi]
  4168be:	xchg   esi,eax
  4168bf:	lods   eax,DWORD PTR ds:[esi]
  4168c0:	add    DWORD PTR [edx],0x36
  4168c3:	xchg   esp,eax
  4168c4:	push   0x59ef7a4
  4168c9:	mov    eax,0x9bb2cbe9
  4168ce:	pop    esp
  4168cf:	cli    
  4168d0:	gs aaa 
  4168d2:	pop    es
  4168d3:	dec    ebp
  4168d4:	inc    ebx
  4168d5:	fwait
  4168d6:	ins    DWORD PTR es:[edi],dx
  4168d7:	loope  0x4168f1
  4168d9:	mov    cl,0x7e
  4168db:	add    BYTE PTR [ebx],bl
  4168dd:	call   0xd363f9c5
  4168e2:	mov    ebx,0x3dc6172
  4168e7:	imul   ebp,DWORD PTR [ecx+eiz*2],0x870e9850
  4168ee:	lods   eax,DWORD PTR ds:[esi]
  4168ef:	dec    esi
  4168f0:	push   es
  4168f1:	adc    ebp,esi
  4168f3:	mov    esi,DWORD PTR [edi+0x40]
  4168f6:	outs   dx,BYTE PTR ds:[esi]
  4168f7:	mov    ch,0x1c
  4168f9:	mov    cl,0xb7
  4168fb:	cmp    edx,eax
  4168fd:	or     al,0x3
  4168ff:	jge    0x416894
  416901:	cdq    
  416902:	sbb    bh,ah
  416904:	aad    0xa1
  416906:	ja     0x4168f5
  416908:	jl     0x41688a
  41690a:	mov    dl,0xcb
  41690c:	aaa    
  41690d:	fs add al,0xd0
  416910:	adc    BYTE PTR [edx-0x71],bl
  416913:	push   edx
  416914:	or     al,0x9d
  416916:	sti    
  416917:	push   ebp
  416918:	leave  
  416919:	ret    0xb46a
  41691c:	call   0x86d3:0x537ae984
  416923:	inc    eax
  416924:	jnp    0x41695e
  416926:	jmp    0x2b8616d2
  41692b:	(bad)  
  41692c:	mov    eax,0xa5039e89
  416931:	mov    bl,0xe2
  416933:	add    ebp,DWORD PTR [eax+0x47c3daa5]
  416939:	pop    edx
  41693a:	and    BYTE PTR [esi-0x53],dl
  41693d:	push   ebx
  41693e:	push   ecx
  41693f:	in     eax,0xcf
  416941:	ror    ecx,0x73
  416944:	adc    DWORD PTR [eax+ecx*8-0x277ec4fc],esp
  41694b:	push   ecx
  41694c:	repnz test eax,0x2d555d16
  416952:	push   edi
  416953:	sub    ch,BYTE PTR [eax]
  416955:	fild   QWORD PTR [esi]
  416957:	ja     0x4169c0
  416959:	repz adc edi,esp
  41695c:	cmp    edx,DWORD PTR [ecx-0x533b2ee6]
  416962:	and    DWORD PTR [ebx],0x4478f1d6
  416968:	fnstenv [ebx+0x4f62d82c]
  41696e:	add    al,0x78
  416970:	stos   BYTE PTR es:[edi],al
  416971:	inc    ebp
  416972:	gs repz xor eax,0x4934747e
  416979:	inc    edx
  41697a:	adc    eax,0xc40b367
  41697f:	mov    esp,0xb11326d4
  416984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416985:	xor    eax,0x41b3e75a
  41698a:	sti    
  41698b:	fcmovb st,st(6)
  41698d:	sub    DWORD PTR [eax+edx*4-0x7d],edx
  416991:	int3   
  416992:	mov    ch,0x78
  416994:	imul   edx,DWORD PTR [ecx+0x59],0xfffffff9
  416998:	or     dh,BYTE PTR [eax-0x254ed3a9]
  41699e:	dec    ah
  4169a0:	mov    ebx,DWORD PTR ds:0xf85f645b
  4169a6:	sub    DWORD PTR gs:[ebx],ecx
  4169a9:	mov    ebx,0x789b9567
  4169ae:	or     BYTE PTR [ebp-0x39],ch
  4169b1:	xchg   esi,eax
  4169b2:	loope  0x41697b
  4169b4:	or     ah,BYTE PTR [edi+0x3]
  4169b7:	xor    DWORD PTR [ebx+edi*4-0x44],ebp
  4169bb:	mov    ds:0x3cbd17df,eax
  4169c0:	and    DWORD PTR [eax-0x37],ebp
  4169c3:	loop   0x4169cc
  4169c5:	pop    ss
  4169c6:	push   ss
  4169c7:	scas   al,BYTE PTR es:[edi]
  4169c8:	call   0x7ec4:0x42182f08
  4169cf:	mov    gs,WORD PTR [ebp-0x2b]
  4169d2:	xchg   edx,eax
  4169d3:	add    DWORD PTR [edx],edx
  4169d5:	pusha  
  4169d6:	aam    0xcf
  4169d8:	in     al,0x91
  4169da:	stc    
  4169db:	push   0xffffffe2
  4169dd:	loope  0x416a48
  4169df:	push   eax
  4169e0:	test   BYTE PTR [ebp+0x5],al
  4169e3:	popa   
  4169e4:	mov    eax,ds:0xb9e4f7a3
  4169e9:	pop    esi
  4169ea:	loopne 0x4169f7
  4169ec:	inc    edi
  4169ed:	push   edx
  4169ee:	push   esp
  4169ef:	(bad)  
  4169f0:	sti    
  4169f1:	mov    eax,ds:0xec86e358
  4169f6:	jp     0x416a0d
  4169f8:	push   ebp
  4169f9:	adc    bl,BYTE PTR [edi]
  4169fb:	mov    edi,ecx
  4169fd:	hlt    
  4169fe:	xchg   DWORD PTR [esi-0x80],esi
  416a01:	into   
  416a02:	xchg   BYTE PTR [ecx+edi*1+0x7b],ah
  416a06:	jg     0x416a56
  416a08:	sub    ebp,DWORD PTR [edi+0x21cef31e]
  416a0e:	ins    BYTE PTR es:[edi],dx
  416a0f:	jecxz  0x4169cb
  416a11:	adc    DWORD PTR ds:0x782161e5,eax
  416a17:	(bad)  
  416a18:	in     eax,0x3d
  416a1a:	add    eax,0x10f2b4aa
  416a1f:	sbb    DWORD PTR ds:0xafa7b630,esp
  416a25:	ja     0x416a35
  416a27:	outs   dx,DWORD PTR ds:[esi]
  416a28:	call   0x10fe:0xc30a50df
  416a2f:	jne    0x4169cd
  416a31:	popf   
  416a32:	add    eax,0x7bf81cbc
  416a37:	adc    DWORD PTR [ebp+0x21],edx
  416a3a:	repz jno 0x416a75
  416a3d:	(bad)  
  416a3e:	jo     0x416a17
  416a40:	and    eax,0x760d5900
  416a45:	jo     0x416a86
  416a47:	sub    BYTE PTR [ebx],dl
  416a49:	jbe    0x416aa0
  416a4b:	inc    eax
  416a4c:	je     0x4169e0
  416a4e:	fdiv   DWORD PTR [ecx-0x11]
  416a51:	jmp    DWORD PTR [ecx+0x4a402ff9]
  416a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a58:	add    cl,BYTE PTR [ebp-0x4223a1d3]
  416a5e:	pop    ebx
  416a5f:	dec    edi
  416a60:	mov    dh,0x66
  416a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a63:	inc    eax
  416a64:	stos   DWORD PTR es:[edi],eax
  416a65:	out    0x77,al
  416a67:	push   0x9a8f4206
  416a6c:	xor    ch,bl
  416a6e:	(bad)  
  416a6f:	sti    
  416a70:	sbb    al,0x14
  416a72:	out    dx,al
  416a73:	push   ecx
  416a74:	jle    0x416acc
  416a76:	outs   dx,DWORD PTR ds:[esi]
  416a77:	stc    
  416a78:	mov    al,ds:0x4256b0b1
  416a7d:	xor    eax,DWORD PTR [edi]
  416a7f:	and    al,BYTE PTR [edx-0x6cba1fb9]
  416a85:	stc    
  416a86:	btc    DWORD PTR [ecx-0x39238714],0x9d
  416a8e:	ret    0xf993
  416a91:	iret   
  416a92:	pop    es
  416a93:	mov    gs,WORD PTR [eax]
  416a95:	pop    eax
  416a96:	cmp    eax,esi
  416a98:	scas   al,BYTE PTR es:[edi]
  416a99:	xor    ebp,eax
  416a9b:	mov    eax,ds:0x2f39abd2
  416aa0:	mov    edi,DWORD PTR [ebp-0x2b766e8]
  416aa6:	add    BYTE PTR [ebx-0x5e36cbec],bl
  416aac:	cmp    DWORD PTR [ebx-0x3f],ebx
  416aaf:	adc    DWORD PTR [eiz*2+0x37a67219],eax
  416ab6:	std    
  416ab7:	dec    ebx
  416ab8:	(bad)  
  416ab9:	mov    edx,0x6fa7c80f
  416abe:	jmp    0xba0cceeb
  416ac3:	mov    ebp,edi
  416ac5:	mov    eax,ds:0xce55d8bf
  416aca:	outs   dx,BYTE PTR ds:[esi]
  416acb:	out    dx,al
  416acc:	js     0x416aa4
  416ace:	aad    0x54
  416ad0:	cmp    DWORD PTR [edi+0x24],ecx
  416ad3:	sub    dh,cl
  416ad5:	neg    BYTE PTR ds:0x7f255991
  416adb:	jae    0x416a66
  416add:	add    BYTE PTR [eax],bl
  416adf:	and    DWORD PTR [ebx-0x1d],0x47886461
  416ae6:	jo     0x416b18
  416ae8:	push   ds
  416ae9:	inc    esi
  416aea:	pop    edi
  416aeb:	lods   al,BYTE PTR ss:[esi]
  416aed:	ret    
  416aee:	loop   0x416a98
  416af0:	adc    eax,0xf03becc7
  416af5:	dec    ebx
  416af6:	loope  0x416b25
  416af8:	sbb    dl,cl
  416afa:	ss jb  0x416acd
  416afd:	(bad)  
  416aff:	jle    0x416b05
  416b01:	sbb    esp,esp
  416b03:	ins    BYTE PTR es:[edi],dx
  416b04:	and    DWORD PTR [ecx-0x61512e53],0x24c21992
  416b0e:	out    0xb1,al
  416b10:	pop    ss
  416b11:	cmc    
  416b12:	fucom  st(6)
  416b14:	rol    DWORD PTR [edi+0x7ba175d],0x1d
  416b1b:	push   es
  416b1c:	mov    ecx,0x3a787f3e
  416b21:	sub    DWORD PTR [esi+0x438675da],ecx
  416b27:	cmp    eax,0x668f92f
  416b2c:	mov    ecx,0x4cdc44a
  416b31:	jno    0x416adf
  416b33:	sub    dl,BYTE PTR [edi+0x355518f8]
  416b39:	lds    ebx,FWORD PTR [ebx+0x561e3661]
  416b3f:	les    esi,FWORD PTR [ebp-0x9ee0753]
  416b45:	jecxz  0x416b8f
  416b47:	lahf   
  416b48:	lods   al,BYTE PTR ds:[esi]
  416b49:	push   0x2e3efeb2
  416b4e:	adc    ebp,esp
  416b50:	call   0x405c19b8
  416b55:	adc    edx,DWORD PTR [ecx+ecx*8+0x1f]
  416b59:	ins    DWORD PTR es:[edi],dx
  416b5a:	pushf  
  416b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b5c:	add    DWORD PTR [ebx],ebp
  416b5e:	repnz mov WORD PTR [eax-0x28],es
  416b62:	fist   DWORD PTR [esi+esi*1-0x712809f2]
  416b69:	test   al,0x5
  416b6b:	xor    BYTE PTR [eax+0x4e6ed2a9],ch
  416b71:	jnp    0x416b85
  416b73:	call   0x771a:0x570b94bb
  416b7a:	(bad)  
  416b7b:	clc    
  416b7c:	repnz mov bl,0xf4
  416b7f:	js     0x416be0
  416b81:	shr    DWORD PTR ds:0xd667ed2f,0x10
  416b88:	test   eax,0x94d50ef0
  416b8d:	xchg   edi,eax
  416b8e:	in     eax,0x82
  416b90:	ds mov esp,0xac8ed88b
  416b96:	dec    esp
  416b97:	lods   al,BYTE PTR ds:[esi]
  416b98:	lea    ebx,[edi-0x30dc7a5f]
  416b9e:	push   0xd9e116bd
  416ba3:	mov    bh,0x1
  416ba5:	fist   DWORD PTR [edx-0x2d947ba9]
  416bab:	and    al,0x58
  416bad:	sti    
  416bae:	repnz pop edi
  416bb0:	icebp  
  416bb1:	add    BYTE PTR [edx+ecx*2],dl
  416bb4:	inc    eax
  416bb5:	sub    DWORD PTR [esi+0x4c],ebx
  416bb8:	mov    dl,0x6f
  416bba:	mov    esp,0xe10c1130
  416bbf:	in     eax,0x80
  416bc1:	nop
  416bc2:	mov    fs,WORD PTR [ecx-0x36]
  416bc5:	enter  0xba0d,0x22
  416bc9:	mov    bl,0x54
  416bcb:	jp     0x416c0d
  416bcd:	or     DWORD PTR [edx-0x10],esi
  416bd0:	add    DWORD PTR [ecx-0x5276ad9c],esp
  416bd6:	or     al,0xec
  416bd8:	or     ebx,ebp
  416bda:	daa    
  416bdb:	xor    BYTE PTR [eax-0x15],0x43
  416bdf:	dec    edi
  416be0:	inc    ebx
  416be1:	pop    edi
  416be2:	cmc    
  416be3:	xor    BYTE PTR [ebx-0x4c],ah
  416be6:	and    dl,BYTE PTR [ecx-0x5188bfb2]
  416bec:	sub    bh,BYTE PTR [eax]
  416bee:	fdivr  st,st(6)
  416bf0:	adc    BYTE PTR [ecx],dh
  416bf2:	sahf   
  416bf3:	mov    ecx,0x8cecb916
  416bf8:	imul   edx,DWORD PTR [edx-0x7d770dbe],0x55f66397
  416c02:	fcmovu st,st(2)
  416c04:	dec    edx
  416c05:	in     eax,dx
  416c06:	pop    esi
  416c07:	mov    ebx,0x2e81a379
  416c0c:	adc    eax,0xe8304ae5
  416c11:	(bad)  
  416c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c13:	test   al,0xf2
  416c15:	mov    al,ds:0x1cbf2745
  416c1a:	xchg   BYTE PTR [edx-0x30ffd8d8],dh
  416c20:	scas   al,BYTE PTR es:[edi]
  416c21:	xor    eax,DWORD PTR [eax+ecx*8+0x28da22c2]
  416c28:	pop    es
  416c29:	lods   eax,DWORD PTR ds:[esi]
  416c2a:	xchg   DWORD PTR [edi-0x25a00d10],eax
  416c30:	cli    
  416c31:	clc    
  416c32:	(bad)  
  416c33:	push   ss
  416c34:	sbb    DWORD PTR es:[edx+0x60b2928e],esi
  416c3b:	dec    edi
  416c3c:	jg     0x416bd8
  416c3e:	fnstenv [edx-0x36]
  416c41:	push   edi
  416c42:	sbb    BYTE PTR [edi-0x1c],0x75
  416c46:	xor    al,0x3e
  416c48:	dec    esi
  416c49:	popf   
  416c4a:	xchg   esi,eax
  416c4b:	aas    
  416c4c:	add    ch,BYTE PTR [eax-0x7dd2eccd]
  416c52:	jnp    0x416c7b
  416c54:	sbb    al,0xa2
  416c56:	ret    0x5665
  416c59:	mov    ebx,0x84294885
  416c5e:	mov    esp,0xc5b87c46
  416c63:	out    0xa3,eax
  416c65:	in     eax,0x2
  416c67:	mov    ecx,0x967fc4df
  416c6c:	jb     0x416c99
  416c6e:	scas   eax,DWORD PTR es:[edi]
  416c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c70:	scas   al,BYTE PTR es:[edi]
  416c71:	mov    cl,0xe4
  416c73:	rcl    BYTE PTR [esi],0x42
  416c76:	sub    ah,BYTE PTR [ebp+0x3f]
  416c79:	lahf   
  416c7a:	xchg   ebp,eax
  416c7b:	cmc    
  416c7c:	sbb    BYTE PTR [edi+0x3a2d0f5b],dh
  416c82:	pop    edi
  416c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c84:	mov    ebp,?
  416c86:	cmp    DWORD PTR [ecx-0x78],esi
  416c89:	xor    eax,0xbfc73251
  416c8e:	cs stc 
  416c90:	cmc    
  416c91:	les    eax,FWORD PTR [ecx+eax*2]
  416c94:	int    0x6f
  416c96:	cmc    
  416c97:	iret   
  416c98:	mov    esi,ecx
  416c9a:	mov    WORD PTR [edx*8-0x29c16c0f],cs
  416ca1:	or     DWORD PTR [ebx-0x17bf8a31],eax
  416ca7:	(bad)  
  416ca8:	mov    fs,edx
  416caa:	bound  edx,QWORD PTR [edi-0x33b9fe85]
  416cb0:	(bad)  
  416cb1:	repz (bad) 
  416cb3:	aam    0x75
  416cb5:	sti    
  416cb6:	mov    bl,0xe0
  416cb8:	retf   
  416cb9:	imul   esp,DWORD PTR [edx-0x28],0x366b1c3b
  416cc0:	sub    eax,0xdb9169b7
  416cc5:	(bad)  
  416cc6:	fsub   QWORD PTR [eax-0xf3a3cba]
  416ccc:	test   al,0xa3
  416cce:	test   eax,0x208382d
  416cd3:	sbb    al,0x32
  416cd5:	cs test eax,0xfcc9a434
  416cdb:	loopne 0x416cad
  416cdd:	mov    al,ds:0x7901f2d9
  416ce2:	retf   
  416ce3:	cmp    al,0xb1
  416ce5:	lahf   
  416ce6:	call   0x478fd6b2
  416ceb:	out    dx,eax
  416cec:	popa   
  416ced:	mov    edx,0xa0fc7705
  416cf2:	sub    edi,DWORD PTR [eax-0x3425ae77]
  416cf8:	les    eax,FWORD PTR [edx]
  416cfa:	sbb    dh,BYTE PTR [edi+eiz*1]
  416cfd:	xchg   esp,eax
  416cfe:	mov    ecx,0x5563d5ed
  416d03:	out    0x1e,eax
  416d05:	cmp    DWORD PTR [edx+0x3e],ebx
  416d08:	push   0x57
  416d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d0b:	(bad)  
  416d0c:	cmc    
  416d0d:	fadd   st,st(7)
  416d0f:	jmp    0x6284:0x9c09e4ff
  416d16:	stos   BYTE PTR es:[edi],al
  416d17:	leave  
  416d18:	xor    eax,DWORD PTR ds:0x37de85d0
  416d1e:	and    bh,BYTE PTR [esp+edi*1-0x4021963f]
  416d25:	xchg   DWORD PTR [ebx],ecx
  416d27:	cmp    edx,DWORD PTR [ebx+0x5494f673]
  416d2d:	lahf   
  416d2e:	jmp    0x8128:0xf927d467
  416d35:	push   ebp
  416d36:	and    DWORD PTR [ebx+edx*4+0x45],ebp
  416d3a:	xor    DWORD PTR [edi],eax
  416d3c:	in     al,0x67
  416d3e:	and    eax,0x324f9e06
  416d43:	inc    ecx
  416d44:	add    bh,bh
  416d46:	pusha  
  416d47:	mov    ecx,0x7c2cd595
  416d4c:	xchg   ebx,eax
  416d4d:	xchg   edi,eax
  416d4e:	xchg   edi,eax
  416d4f:	cmc    
  416d50:	pop    edi
  416d51:	aad    0x73
  416d53:	jmp    0x80cc:0xed3d6b5a
  416d5a:	mov    al,0x9e
  416d5c:	xchg   ecx,eax
  416d5d:	add    esp,DWORD PTR [ecx]
  416d5f:	ret    0xeb9a
  416d62:	jl     0x416d30
  416d64:	mov    ebp,0x844bd00d
  416d69:	or     ecx,ebp
  416d6b:	daa    
  416d6c:	push   edx
  416d6d:	sub    bl,BYTE PTR [ecx+0x47f272a9]
  416d73:	rcr    BYTE PTR [ecx-0xce5a788],1
  416d79:	nop
  416d7a:	jnp    0x416d07
  416d7c:	jge    0x416d15
  416d7e:	mov    dl,0x68
  416d80:	add    eax,0xd6db3fef
  416d85:	arpl   WORD PTR [edi],cx
  416d87:	push   edx
  416d88:	mov    ebx,0x133a13ac
  416d8d:	or     bl,BYTE PTR [eax+0x1]
  416d90:	(bad)  
  416d91:	out    0x42,eax
  416d93:	cmp    DWORD PTR [ebx+0x5e],edi
  416d96:	dec    ebx
  416d97:	dec    eax
  416d98:	mov    ds:0x436d574c,eax
  416d9d:	loop   0x416d65
  416d9f:	ret    0xf06e
  416da2:	imul   eax,DWORD PTR [ebx],0xffffffd8
  416da5:	mov    bh,0xc
  416da7:	fs das 
  416da9:	pushf  
  416daa:	pop    es
  416dab:	inc    ebx
  416dac:	adc    WORD PTR [ecx-0x2],cx
  416db0:	adc    ebx,eax
  416db2:	mov    edx,0xac7ddbf2
  416db7:	dec    ebp
  416db8:	out    0x26,eax
  416dba:	push   es
  416dbb:	test   BYTE PTR [eax],0xa2
  416dbe:	stos   BYTE PTR es:[edi],al
  416dbf:	sbb    BYTE PTR ds:0xccbc4c6c,ah
  416dc5:	je     0x416d61
  416dc7:	clc    
  416dc8:	dec    edi
  416dc9:	push   ebp
  416dca:	or     al,0x3e
  416dcc:	mov    esp,0xfff97630
  416dd1:	call   0x47983693
  416dd6:	in     eax,dx
  416dd7:	cmp    ebx,DWORD PTR [edx-0x3f46fbac]
  416ddd:	fistp  QWORD PTR [eax+0x32]
  416de0:	jnp    0x416e54
  416de2:	in     eax,0xf8
  416de4:	jmp    0x416e61
  416de6:	fwait
  416de7:	sbb    DWORD PTR [edx],0xffffffbe
  416dea:	mov    ah,0x87
  416dec:	repnz xchg ecx,eax
  416dee:	mov    dl,0xb0
  416df0:	mov    WORD PTR [edx+0x7482d4c1],ss
  416df6:	xchg   ebx,eax
  416df7:	stc    
  416df8:	dec    edx
  416df9:	push   edx
  416dfa:	and    eax,0xd15ef7d9
  416dff:	cmp    bh,BYTE PTR [ecx+0x49]
  416e02:	out    dx,al
  416e03:	lods   al,BYTE PTR ds:[esi]
  416e04:	sub    BYTE PTR [eax],0x57
  416e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e08:	fs popf 
  416e0a:	sub    DWORD PTR [esi],ebp
  416e0c:	lods   eax,DWORD PTR ds:[esi]
  416e0d:	ins    BYTE PTR es:[edi],dx
  416e0e:	call   0x5fca:0x52b2a4bf
  416e15:	ret    
  416e16:	shl    DWORD PTR [ecx],cl
  416e18:	pop    esi
  416e19:	shl    DWORD PTR [edi+0x5],cl
  416e1c:	mov    cl,0x6c
  416e1e:	adc    BYTE PTR [ebx],bl
  416e20:	mov    bl,0x5a
  416e22:	out    dx,eax
  416e23:	push   es
  416e24:	jmp    0xbe648801
  416e29:	pop    es
  416e2a:	rol    DWORD PTR [esi+edx*1-0x1],1
  416e2e:	div    DWORD PTR [ebx]
  416e30:	sar    DWORD PTR [ecx+0x58a692e4],cl
  416e36:	and    BYTE PTR [ebx],dl
  416e38:	retf   0xa742
  416e3b:	and    DWORD PTR [edx-0x7d0d2710],esp
  416e41:	scas   al,BYTE PTR es:[edi]
  416e42:	cmp    eax,0xdfb30606
  416e47:	es mov ah,0x47
  416e4a:	jnp    0x416e72
  416e4c:	ja     0x416e8d
  416e4e:	ja     0x416e4a
  416e50:	stos   BYTE PTR es:[edi],al
  416e51:	out    dx,al
  416e52:	inc    eax
  416e53:	pop    ebx
  416e54:	push   edi
  416e55:	clc    
  416e56:	ja     0x416ebb
  416e58:	xor    eax,0x3bb25e84
  416e5d:	jl     0x416e07
  416e5f:	cmp    BYTE PTR [esi-0x65],0xa2
  416e63:	test   BYTE PTR [edx+0x501b48b9],bl
  416e69:	shl    BYTE PTR [edx-0x49e9bf8d],1
  416e6f:	push   ss
  416e70:	fmul   QWORD PTR [ebx]
  416e72:	pop    esp
  416e73:	sbb    al,0xde
  416e75:	xchg   esp,eax
  416e76:	ins    DWORD PTR es:[edi],dx
  416e77:	je     0x416e91
  416e79:	push   ecx
  416e7a:	pushf  
  416e7b:	and    eax,0xd5843b23
  416e80:	xchg   ebx,eax
  416e81:	xchg   esi,eax
  416e82:	jmp    0x416eeb
  416e84:	in     al,0xd3
  416e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e87:	jne    0x416e51
  416e89:	mov    esp,0x5e0c730c
  416e8e:	or     BYTE PTR [edi],0x45
  416e91:	retf   
  416e92:	mov    ebx,0xe9212b2d
  416e97:	pop    ds
  416e98:	jl     0x416ee3
  416e9a:	retf   
  416e9b:	lea    edi,[edx+0x1e]
  416e9e:	out    dx,eax
  416e9f:	popa   
  416ea0:	add    eax,0x36160414
  416ea5:	aas    
  416ea6:	inc    edx
  416ea7:	mov    esp,0x81693951
  416eac:	jno    0x416edc
  416eae:	jo     0x416ee7
  416eb0:	push   ebx
  416eb1:	loopne 0x416e9e
  416eb3:	mov    ebp,0xe5438991
  416eb8:	add    al,0xdf
  416eba:	repnz adc eax,edi
  416ebd:	sub    DWORD PTR [ebx+0x3f870cb6],ebx
  416ec3:	adc    DWORD PTR [ebx],esi
  416ec5:	mov    dh,0x3c
  416ec7:	pop    ds
  416ec8:	and    al,0x8f
  416eca:	cwde   
  416ecb:	fld    QWORD PTR [edi+eax*2-0x5e1c5c8f]
  416ed2:	mov    al,ds:0x74e7374c
  416ed7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416ed9:	mov    bl,0x9d
  416edb:	and    BYTE PTR [eax],bl
  416edd:	sub    edi,esi
  416edf:	aaa    
  416ee0:	retf   0xb798
  416ee3:	(bad)  
  416ee4:	fsub   st,st(1)
  416ee6:	pop    ebp
  416ee7:	mov    ds:0x2cf6b17d,al
  416eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eed:	cmp    ebp,DWORD PTR [edi-0x55]
  416ef0:	xchg   ebx,eax
  416ef1:	not    BYTE PTR [edx*1-0x41c9b607]
  416ef8:	pusha  
  416ef9:	repz mov eax,ds:0xc58a5c77
  416eff:	mov    DWORD PTR [edx+0x5f5029b],edx
  416f05:	inc    eax
  416f06:	lods   eax,DWORD PTR ds:[esi]
  416f07:	xchg   DWORD PTR [esi+0xe],eax
  416f0a:	mov    bh,0xe1
  416f0c:	xor    al,0xff
  416f0e:	ret    
  416f0f:	fdiv   DWORD PTR [ecx]
  416f11:	lds    ebx,FWORD PTR [edi-0x18]
  416f14:	das    
  416f15:	jmp    0xbff8b075
  416f1a:	xchg   ecx,eax
  416f1b:	xchg   ebp,eax
  416f1c:	fmul   QWORD PTR [esi-0x7d]
  416f1f:	jp     0x416f28
  416f21:	cmp    ch,BYTE PTR [edx+0x52]
  416f24:	repnz cwde 
  416f26:	xchg   ebx,eax
  416f27:	outs   dx,BYTE PTR ds:[esi]
  416f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f29:	push   ecx
  416f2a:	jns    0x416f97
  416f2c:	pop    eax
  416f2d:	cmp    esi,DWORD PTR [edi-0x4b9975aa]
  416f33:	xor    eax,0x72b254ca
  416f38:	and    eax,0xc14197a1
  416f3d:	leave  
  416f3e:	stos   DWORD PTR es:[edi],eax
  416f3f:	test   BYTE PTR ds:0x621be3bb,ah
  416f45:	xchg   ebx,eax
  416f46:	mov    ebx,eax
  416f48:	adc    al,0xa6
  416f4a:	push   ecx
  416f4b:	pop    edi
  416f4c:	aas    
  416f4d:	push   cs
  416f4e:	mov    es,WORD PTR [esi+0xce1a84d]
  416f54:	dec    ebp
  416f55:	cwde   
  416f56:	cs and eax,0xa1d2b28b
  416f5c:	pop    ss
  416f5d:	loope  0x416f8e
  416f5f:	adc    bl,BYTE PTR [esi-0x1fbf3b06]
  416f65:	arpl   WORD PTR [ecx-0xb],bp
  416f68:	lock add eax,0x3f130655
  416f6e:	hlt    
  416f6f:	sbb    cl,BYTE PTR [ecx+0x4f6d7f24]
  416f75:	xchg   esp,eax
  416f76:	jecxz  0x416fb4
  416f78:	fsub   QWORD PTR ss:[esi]
  416f7b:	inc    edi
  416f7c:	mov    bl,0x15
  416f7e:	dec    esi
  416f7f:	scas   eax,DWORD PTR es:[edi]
  416f80:	xchg   BYTE PTR [ecx+0x3ac9a015],bl
  416f86:	dec    ecx
  416f87:	mov    esi,0xef66b986
  416f8c:	jl     0x416fff
  416f8e:	adc    BYTE PTR [eax],bh
  416f90:	std    
  416f91:	push   ebx
  416f92:	nop
  416f93:	mov    ebp,0xc0a70357
  416f98:	(bad)  
  416f99:	adc    DWORD PTR ds:0xe58c81c3,ebx
  416f9f:	adc    al,0x9
  416fa1:	lods   al,BYTE PTR ds:[esi]
  416fa2:	fdivr  st(7),st
  416fa4:	fiadd  WORD PTR [ebx-0x35d19253]
  416faa:	mov    ebp,esp
  416fac:	or     dl,BYTE PTR [esi]
  416fae:	xor    esi,edx
  416fb0:	dec    ecx
  416fb1:	ss nop
  416fb3:	stos   DWORD PTR es:[edi],eax
  416fb4:	push   esp
  416fb5:	into   
  416fb6:	stos   BYTE PTR es:[edi],al
  416fb7:	dec    ebp
  416fb8:	dec    ebx
  416fb9:	idiv   DWORD PTR [eax+ecx*2-0x55]
  416fbd:	in     eax,dx
  416fbe:	xchg   DWORD PTR [edi],esp
  416fc0:	push   esp
  416fc1:	sub    DWORD PTR [edx-0x41a7bda2],0x415f06bb
  416fcb:	jne    0x416fb3
  416fcd:	inc    ebx
  416fce:	into   
  416fcf:	outs   dx,DWORD PTR ds:[esi]
  416fd0:	std    
  416fd1:	inc    ebx
  416fd2:	sub    eax,0x2fb58787
  416fd7:	inc    edi
  416fd8:	adc    DWORD PTR [edi+edi*8-0xf],ecx
  416fdc:	out    dx,al
  416fdd:	loop   0x416ff1
  416fdf:	push   0xffffffc5
  416fe1:	lds    ebp,FWORD PTR [edi-0x69]
  416fe4:	mov    ebp,0x981e8d0f
  416fe9:	or     al,0xdf
  416feb:	cs inc eax
  416fed:	adc    ebx,esp
  416fef:	mov    esi,0x17741cd
  416ff4:	rcr    BYTE PTR [esi+0xf],cl
  416ff7:	(bad)  
  416ff8:	cmp    al,0x67
  416ffa:	imul   esp,DWORD PTR [edx],0x1369d929
  417000:	push   ds
  417001:	push   0x8848349
  417006:	mov    esp,DWORD PTR [eax]
  417008:	fwait
  417009:	lock mov bl,0xdc
  41700c:	cdq    
  41700d:	(bad)  [ecx-0x1daf80f]
  417013:	test   BYTE PTR [eax+0x4a1f0a61],bl
  417019:	ror    DWORD PTR [eax-0x574bce59],cl
  41701f:	inc    esi
  417020:	add    bl,ah
  417022:	lahf   
  417023:	push   esp
  417024:	xor    BYTE PTR [ebx-0x1a],0x2e
  417028:	mov    dl,0x8f
  41702a:	fadd   DWORD PTR [ecx]
  41702c:	xchg   edx,eax
  41702d:	and    BYTE PTR [esi+0x7d7a7028],0xfa
  417034:	es or  al,0x73
  417037:	ss mov eax,0x6b821cab
  41703d:	xlat   BYTE PTR ds:[ebx]
  41703e:	adc    BYTE PTR [esi+0x6d],cl
  417041:	inc    esi
  417042:	mov    esi,?
  417044:	mov    ?,WORD PTR [edi-0x3c]
  417047:	inc    ecx
  417048:	shr    DWORD PTR [ebp+0x14],1
  41704b:	popf   
  41704c:	les    esp,FWORD PTR [edi]
  41704e:	push   ss
  41704f:	stos   DWORD PTR es:[edi],eax
  417050:	icebp  
  417051:	hlt    
  417052:	aaa    
  417053:	call   0x22758122
  417058:	cmp    ebp,DWORD PTR [eax+0x25d73519]
  41705e:	jb     0x4170a6
  417060:	iret   
  417061:	pushf  
  417062:	mov    ds:0x69dd7453,eax
  417067:	lock test esp,ebx
  41706a:	mov    ch,0xa6
  41706c:	ret    
  41706d:	shl    BYTE PTR [ebp-0x30],0x64
  417071:	mov    gs,esp
  417073:	(bad)  
  417074:	adc    dl,bh
  417076:	xlat   BYTE PTR ds:[ebx]
  417077:	retf   
  417078:	add    BYTE PTR [eax],dh
  41707a:	mov    edi,0x47cef077
  41707f:	mov    edi,0x6fa979fe
  417084:	or     BYTE PTR [ebp+0x6cb39b3b],ch
  41708a:	sub    dl,dh
  41708c:	or     ecx,ebp
  41708e:	push   ds
  41708f:	cmp    eax,0x63669697
  417094:	retf   0x3b58
  417097:	scas   al,BYTE PTR es:[edi]
  417098:	(bad)  
  417099:	aas    
  41709a:	arpl   WORD PTR [eax],di
  41709c:	dec    esi
  41709d:	mov    ch,0x84
  41709f:	mov    al,0x27
  4170a1:	in     eax,dx
  4170a2:	push   ss
  4170a3:	dec    edx
  4170a4:	ds xchg edx,ecx
  4170a7:	rcl    BYTE PTR [edx+ecx*8+0x1d],1
  4170ab:	es (bad) 
  4170ad:	mov    dh,BYTE PTR [ecx+0x4309baf1]
  4170b3:	arpl   WORD PTR [edx-0xed45cf6],dx
  4170b9:	jp     0x4170d7
  4170bb:	pop    esp
  4170bc:	fild   DWORD PTR [eax+0x19f04fd3]
  4170c2:	mov    ebx,0x8106e854
  4170c7:	les    esi,FWORD PTR [eax+edx*8-0x1c]
  4170cb:	mov    ebx,0x8d55155c
  4170d0:	and    cl,BYTE PTR [edi-0x14dae81e]
  4170d6:	inc    ebx
  4170d7:	jp     0x4170a0
  4170d9:	jge    0x4170ee
  4170db:	leave  
  4170dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170dd:	mov    eax,ds:0x5404bedd
  4170e2:	jmp    0x8eec4a22
  4170e7:	ss push esp
  4170e9:	ficomp WORD PTR [edi-0x25]
  4170ec:	mov    edi,0x58c84f79
  4170f1:	imul   ecx,DWORD PTR [ebx+0x44bc203f],0x235c75f7
  4170fb:	xor    ecx,DWORD PTR [ecx]
  4170fd:	inc    eax
  4170fe:	lahf   
  4170ff:	lods   al,BYTE PTR ds:[esi]
  417100:	mov    WORD PTR [ebx+0x6f],?
  417103:	push   ss
  417104:	std    
  417105:	push   esp
  417106:	mov    dh,BYTE PTR ds:0x1cce4c6
  41710c:	in     al,dx
  41710d:	mov    bh,0xbf
  41710f:	inc    ebx
  417110:	rol    DWORD PTR [ecx+0x6e],0xd5
  417114:	dec    ebx
  417115:	std    
  417116:	adc    DWORD PTR [edx],esi
  417118:	push   edx
  417119:	aas    
  41711a:	inc    ebx
  41711b:	les    ebx,FWORD PTR [ecx+0x1399d383]
  417121:	mov    ecx,0xb5bcf6ab
  417126:	sbb    DWORD PTR [edi-0x17570824],esi
  41712c:	pop    ds
  41712d:	mov    DWORD PTR [ecx-0x12],edx
  417130:	pop    ss
  417131:	mov    al,0x6f
  417133:	fnstenv [edx]
  417135:	sub    DWORD PTR [ebp-0x597271a1],0x3e
  41713c:	push   0x2be2cbc1
  417141:	cmp    al,0x86
  417143:	retf   0xa2a0
  417146:	lods   al,BYTE PTR ds:[esi]
  417147:	mov    ah,0x59
  417149:	repz das 
  41714b:	lds    esp,FWORD PTR [eax+esi*1-0x394e52d1]
  417152:	add    eax,0xa07a6095
  417157:	(bad)  
  417158:	cli    
  417159:	jg     0x417139
  41715b:	push   ecx
  41715c:	nop
  41715d:	xor    DWORD PTR [esi],eax
  41715f:	cmp    eax,0xbf043acd
  417164:	push   edx
  417165:	retf   0x483b
  417168:	mov    DWORD PTR [esi],0xcd96f84f
  41716e:	and    BYTE PTR [ebp-0x6d],0x2f
  417172:	xchg   ebp,eax
  417173:	inc    eax
  417174:	mov    es,esi
  417176:	cmp    DWORD PTR [ebx+eiz*8-0x3f],esp
  41717a:	sub    ah,BYTE PTR [edi-0x7e]
  41717d:	adc    al,dh
  41717f:	pop    edi
  417180:	mov    eax,0x88501b4a
  417185:	push   0x1c14297a
  41718a:	ror    dl,0xbb
  41718d:	in     eax,0xe9
  41718f:	pop    edi
  417190:	jne    0x417197
  417192:	call   0xc707eff8
  417197:	out    0x9c,eax
  417199:	cs xchg esp,eax
  41719b:	add    eax,0x6c3ab352
  4171a0:	nop
  4171a1:	dec    ecx
  4171a2:	lea    esp,[edx]
  4171a4:	or     al,0x20
  4171a6:	mov    ecx,0xdaac622c
  4171ab:	dec    ecx
  4171ac:	jmp    FWORD PTR [ebx+0x4d]
  4171af:	mov    edx,0x56332c47
  4171b4:	outs   dx,DWORD PTR ss:[esi]
  4171b6:	or     esp,DWORD PTR [ebp+0x411ec744]
  4171bc:	retf   0xb281
  4171bf:	pop    ebp
  4171c0:	push   ss
  4171c1:	mov    esi,0xf4603db4
  4171c6:	cdq    
  4171c7:	stos   DWORD PTR es:[edi],eax
  4171c8:	outs   dx,DWORD PTR ds:[esi]
  4171c9:	xor    ebx,DWORD PTR [ecx+0x56d15920]
  4171cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171d0:	(bad)  
  4171d1:	out    0x2a,eax
  4171d3:	ror    BYTE PTR [eax-0x6716b69f],0xfa
  4171da:	jg     0x417173
  4171dc:	cs jge 0x41721d
  4171df:	jmp    0x417219
  4171e1:	into   
  4171e2:	push   es
  4171e3:	daa    
  4171e4:	retf   0x34d
  4171e7:	and    DWORD PTR [ebp-0x3a4b693d],esi
  4171ed:	xchg   BYTE PTR [esi-0x10],bl
  4171f0:	int3   
  4171f1:	xor    edi,DWORD PTR [edx-0x52c0f82a]
  4171f7:	test   DWORD PTR [edi-0x23],0xde73dedd
  4171fe:	hlt    
  4171ff:	inc    ebp
  417200:	jmp    0xc83799f
  417205:	sbb    al,dl
  417207:	cmp    al,0x79
  417209:	scas   eax,DWORD PTR es:[edi]
  41720a:	add    al,0xec
  41720c:	loopne 0x417241
  41720e:	and    BYTE PTR [edi-0x7be6958c],dl
  417214:	pop    ss
  417215:	call   0x5306:0x19affdaa
  41721c:	xor    al,0x4d
  41721e:	mov    esp,0x89b2ac79
  417223:	sbb    DWORD PTR [eax],ebx
  417225:	sar    BYTE PTR [edi+0x1d],1
  417228:	and    bh,BYTE PTR [ecx+0x27]
  41722b:	retf   0x2a36
  41722e:	leave  
  41722f:	xchg   ecx,eax
  417230:	bound  edx,QWORD PTR [edx+0x21]
  417233:	sbb    cl,BYTE PTR [esi+0x599608a6]
  417239:	jmp    0x48cd:0x6449dba9
  417240:	repnz outs dx,DWORD PTR ds:[esi]
  417242:	retf   
  417243:	popf   
  417244:	cmp    dh,BYTE PTR [edi-0x380f8ae2]
  41724a:	hlt    
  41724b:	std    
  41724c:	jb     0x4171cf
  41724e:	jns    0x41725f
  417250:	and    al,0xde
  417252:	(bad)  
  417253:	mov    ecx,0xaabe6e2f
  417258:	mov    esp,0xb836cde6
  41725d:	push   0xffffffe5
  41725f:	cmp    ebx,DWORD PTR [edi-0x1a]
  417262:	add    al,0xa8
  417264:	iret   
  417265:	pop    ecx
  417266:	in     eax,0x47
  417268:	push   eax
  417269:	mov    bh,0x20
  41726b:	xchg   ebx,eax
  41726c:	add    ecx,DWORD PTR [ecx+eiz*4-0x6434389b]
  417273:	xlat   BYTE PTR ds:[ebx]
  417274:	mov    BYTE PTR [ecx],bh
  417276:	pop    ss
  417277:	test   eax,0xa23a27da
  41727c:	leave  
  41727d:	(bad)  
  41727e:	pop    eax
  41727f:	in     eax,dx
  417280:	hlt    
  417281:	fwait
  417282:	ret    
  417283:	ins    DWORD PTR es:[edi],dx
  417284:	int3   
  417285:	pop    edx
  417286:	and    BYTE PTR [ecx],cl
  417288:	(bad)  
  417289:	push   ds
  41728a:	fnstcw WORD PTR [eax-0x5f]
  41728d:	add    esp,DWORD PTR [esi]
  41728f:	bound  esi,QWORD PTR [ebx-0x60]
  417292:	not    BYTE PTR [ecx-0x14]
  417295:	mov    eax,0x71126995
  41729a:	sub    eax,DWORD PTR [edi+esi*2+0x23c0108b]
  4172a1:	in     al,0x85
  4172a3:	out    dx,eax
  4172a4:	retf   0xeefa
  4172a7:	cmc    
  4172a8:	jmp    0x41729d
  4172aa:	arpl   WORD PTR [ebp-0x11],bp
  4172ad:	fisttp WORD PTR [esi+0x3caec983]
  4172b3:	(bad)  
  4172b4:	jns    0x4172ad
  4172b6:	loope  0x41724e
  4172b8:	and    bl,bh
  4172ba:	xchg   bl,dl
  4172bc:	or     eax,0x67bd2d42
  4172c1:	out    0x7b,al
  4172c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c4:	fld    DWORD PTR [ecx+0x74a549d1]
  4172ca:	test   DWORD PTR [ebp+0x60152cfa],esp
  4172d0:	rcr    BYTE PTR [ecx],cl
  4172d2:	jg     0x4172c3
  4172d4:	shl    DWORD PTR [edi+0x6259c7ac],cl
  4172da:	dec    ebx
  4172db:	jne    0x417270
  4172dd:	mov    ah,0xf6
  4172df:	push   edx
  4172e0:	inc    edx
  4172e1:	xor    BYTE PTR [ebx],0x32
  4172e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e5:	sbb    BYTE PTR [esi-0x286a4b76],0x89
  4172ec:	jne    0x41732c
  4172ee:	fs push ebp
  4172f0:	out    dx,al
  4172f1:	icebp  
  4172f2:	xchg   esi,eax
  4172f3:	aaa    
  4172f4:	ins    BYTE PTR es:[edi],dx
  4172f5:	jmp    DWORD PTR [ecx]
  4172f7:	mov    eax,ds:0xe469e8fb
  4172fc:	or     edi,DWORD PTR [eax]
  4172fe:	popa   
  4172ff:	stos   BYTE PTR es:[edi],al
  417300:	retf   
  417301:	mov    ds,ebp
  417303:	xchg   esi,eax
  417304:	and    eax,ecx
  417306:	(bad)  
  417307:	ja     0x41737f
  417309:	ins    DWORD PTR es:[edi],dx
  41730a:	inc    BYTE PTR [edi+eax*8-0x111a9099]
  417311:	leave  
  417312:	stos   DWORD PTR es:[edi],eax
  417313:	jae    0x41732d
  417315:	jno    0x417300
  417317:	inc    esp
  417318:	inc    ebp
  417319:	(bad)  
  41731a:	jo     0x417318
  41731c:	shl    BYTE PTR [esi+eax*4-0x44],0xbe
  417321:	xchg   esp,eax
  417322:	mov    eax,0x9ffee425
  417327:	mov    eax,?
  417329:	mov    dl,0x1e
  41732b:	pop    ebx
  41732c:	jo     0x4172dd
  41732e:	cmp    al,0x8a
  417330:	mov    bh,cl
  417332:	(bad)  
  417333:	jmp    0x4172e1
  417335:	out    dx,eax
  417336:	std    
  417337:	retf   0x3a8f
  41733a:	fs xchg edx,eax
  41733c:	int    0x74
  41733e:	fwait
  41733f:	lea    eax,[edi-0x14758316]
  417345:	icebp  
  417346:	mov    al,ds:0x23e966f4
  41734b:	loope  0x417311
  41734d:	push   edx
  41734e:	test   BYTE PTR [eax*8+0x512d982d],0xae
  417356:	push   ebx
  417357:	data16 das 
  417359:	push   es
  41735a:	int3   
  41735b:	ja     0x4172fb
  41735d:	shl    BYTE PTR [eax+0x5f1d8c64],cl
  417363:	inc    edi
  417364:	pop    ds
  417365:	cdq    
  417366:	push   esp
  417367:	mov    esi,0xd3df0b7f
  41736c:	xchg   edi,eax
  41736d:	or     DWORD PTR [ecx-0xc],esi
  417370:	lea    ecx,ds:0x9694352b
  417376:	pop    edi
  417377:	pop    eax
  417378:	(bad)
  41737b:	cwde   
  41737c:	in     eax,0xaf
  41737e:	and    BYTE PTR [esi],dh
  417380:	pop    eax
  417381:	cmp    ecx,ebp
  417383:	popf   
  417384:	imul   esp,edi,0x22
  417387:	sub    al,0xae
  417389:	imul   ecx,ecx,0xffffffdb
  41738c:	xor    DWORD PTR [ebx],ecx
  41738e:	jbe    0x417340
  417390:	push   ebp
  417391:	mul    ebx
  417393:	add    edi,ebx
  417395:	in     eax,0x28
  417397:	ret    0x2b54
  41739a:	or     DWORD PTR [eax],0x6a
  41739d:	pop    ebx
  41739e:	or     edi,DWORD PTR [bx+si]
  4173a1:	dec    edx
  4173a2:	pop    eax
  4173a3:	(bad)  
  4173a4:	aad    0xa3
  4173a6:	mov    ecx,es
  4173a8:	inc    esi
  4173a9:	sahf   
  4173aa:	js     0x4173cc
  4173ac:	cmc    
  4173ad:	pop    esi
  4173ae:	fiadd  DWORD PTR [ecx-0x2eefd4ac]
  4173b4:	xchg   ecx,eax
  4173b5:	jl     0x417393
  4173b7:	jmp    0xcbbd:0x68966af0
  4173be:	push   edx
  4173bf:	ins    BYTE PTR es:[edi],dx
  4173c0:	xor    eax,0x73fa8c2c
  4173c5:	loope  0x4173c4
  4173c7:	lds    edx,FWORD PTR [ebp+0x69de8f5d]
  4173cd:	repnz xchg esi,eax
  4173cf:	dec    edi
  4173d0:	imul   ecx,esp,0x34e76aed
  4173d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d7:	jbe    0x41740f
  4173d9:	mov    cl,0xa
  4173db:	push   ebp
  4173dc:	nop
  4173dd:	sbb    al,0x24
  4173df:	(bad)  [ebx+esi*8]
  4173e2:	mov    ecx,0x119285d9
  4173e7:	neg    DWORD PTR [ebx-0x323d52e6]
  4173ed:	xchg   esp,eax
  4173ee:	xchg   esp,eax
  4173ef:	add    BYTE PTR [edi+0x1e005181],ch
  4173f5:	hlt    
  4173f6:	nop
  4173f7:	jmp    0x598:0x7ad3f796
  4173fe:	push   edi
  4173ff:	leave  
  417400:	jns    0x417471
  417402:	rol    DWORD PTR [edx-0x2834cca0],1
  417408:	(bad)  
  417409:	and    eax,0xe22f47dc
  41740e:	pop    edx
  41740f:	icebp  
  417410:	pop    ss
  417411:	in     eax,0x98
  417413:	sbb    eax,0x3adf834f
  417418:	sbb    BYTE PTR [esp+esi*8-0x15],ah
  41741c:	ja     0x4173b4
  41741e:	mov    ds:0x49c18aa2,al
  417423:	test   DWORD PTR [ebx],0xba6bd518
  417429:	test   DWORD PTR [ebx-0x3d],esp
  41742c:	xor    edx,DWORD PTR [ebp+0x7f67262c]
  417432:	cwde   
  417433:	scas   al,BYTE PTR es:[edi]
  417434:	jmp    0x2de7:0xb76ed25a
  41743b:	xchg   edx,ecx
  41743d:	test   al,0xdf
  41743f:	and    BYTE PTR [edi+0x61c40727],0x4f
  417446:	cs in  eax,dx
  417448:	out    dx,eax
  417449:	or     ecx,ebx
  41744b:	inc    edx
  41744c:	stc    
  41744d:	test   al,0x46
  41744f:	sub    BYTE PTR [ebp-0x50],al
  417452:	xor    eax,0xbea904ae
  417457:	fidivr WORD PTR [ecx-0x6f]
  41745a:	das    
  41745b:	xor    bh,dl
  41745d:	inc    esp
  41745e:	inc    eax
  41745f:	je     0x417451
  417461:	push   es
  417462:	dec    ebx
  417463:	lods   eax,DWORD PTR ds:[esi]
  417464:	push   ds
  417465:	leave  
  417466:	mov    ch,BYTE PTR [edx]
  417468:	mov    ?,WORD PTR [edi+0x172e2ecf]
  41746e:	retf   0x1849
  417471:	into   
  417472:	xchg   esi,eax
  417473:	push   0x30
  417475:	retf   0x5fb2
  417478:	pop    eax
  417479:	int    0x67
  41747b:	jns    0x41744d
  41747d:	cdq    
  41747e:	test   BYTE PTR [edx],0xb7
  417481:	bound  esi,QWORD PTR [edx-0x5c3f9015]
  417487:	mov    cl,0xde
  417489:	mov    edi,0x5322daab
  41748e:	mov    cl,0x10
  417490:	popa   
  417491:	dec    esi
  417492:	out    0x67,eax
  417494:	loop   0x4174a7
  417496:	jmp    0x8562a694
  41749b:	clc    
  41749c:	lods   eax,DWORD PTR ds:[esi]
  41749d:	adc    eax,0x428388f6
  4174a2:	jmp    0x6f31:0x626f73ac
  4174a9:	ficom  WORD PTR [eax*4+0x71888661]
  4174b0:	pop    edx
  4174b1:	mov    al,ds:0x2f36019a
  4174b6:	inc    ecx
  4174b7:	scas   eax,DWORD PTR es:[edi]
  4174b8:	mov    dh,0x8b
  4174ba:	adc    al,0xc
  4174bc:	inc    edi
  4174bd:	sahf   
  4174be:	hlt    
  4174bf:	sbb    DWORD PTR [edx+0x285144ba],ebp
  4174c5:	xor    DWORD PTR [ebx+ebp*2-0x88d119b],0xffffffbd
  4174cd:	es icebp 
  4174cf:	stc    
  4174d0:	sbb    eax,0xd933eeca
  4174d5:	js     0x41750a
  4174d7:	lock scas eax,DWORD PTR es:[edi]
  4174d9:	stos   BYTE PTR es:[edi],al
  4174da:	pop    esi
  4174db:	retf   0x29ea
  4174de:	ss mov ah,0x54
  4174e1:	iret   
  4174e2:	sbb    ah,BYTE PTR [edi]
  4174e4:	cld    
  4174e5:	mov    cl,0xf0
  4174e7:	pusha  
  4174e8:	push   ecx
  4174e9:	scas   eax,DWORD PTR es:[di]
  4174eb:	pop    ss
  4174ec:	ds lahf 
  4174ee:	stc    
  4174ef:	pop    ss
  4174f0:	jp     0x417562
  4174f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f3:	or     al,0x7c
  4174f5:	xor    eax,0x601c9600
  4174fa:	jmp    0xf890:0xbfb140e5
  417501:	adc    al,0x2c
  417503:	or     BYTE PTR [esi+edx*4],cl
  417506:	xchg   esi,eax
  417507:	cmp    esp,DWORD PTR [edx+0x4c]
  41750a:	scas   eax,DWORD PTR es:[edi]
  41750b:	cmp    DWORD PTR [esi-0x3e],eax
  41750e:	rcr    cl,1
  417510:	dec    esi
  417511:	push   esi
  417512:	lods   al,BYTE PTR ds:[esi]
  417513:	mov    ah,BYTE PTR [esi-0x76a6ef38]
  417519:	dec    edi
  41751a:	mov    al,0xf1
  41751c:	xor    eax,0x3d9d980f
  417521:	out    0x33,al
  417523:	adc    eax,0xf114ce16
  417528:	loope  0x417562
  41752a:	pop    ecx
  41752b:	mov    esp,0x528deccf
  417530:	jb     0x41754e
  417532:	mov    dl,0x33
  417534:	dec    ecx
  417535:	xchg   DWORD PTR [eax-0x66],ebx
  417538:	or     dl,BYTE PTR ds:0xd56b3d89
  41753e:	aas    
  41753f:	cmp    al,0xf8
  417541:	sbb    DWORD PTR es:[ebp+0x5cc8afe7],ebp
  417548:	dec    eax
  417549:	pushf  
  41754a:	idiv   DWORD PTR [esi]
  41754c:	hlt    
  41754d:	pop    ds
  41754e:	(bad)  
  41754f:	and    ah,BYTE PTR [ebx-0x1e]
  417552:	xchg   esp,eax
  417553:	clc    
  417554:	push   0x5e
  417556:	mov    ?,ebp
  417558:	sbb    dl,bh
  41755a:	aas    
  41755b:	in     eax,0x6e
  41755d:	xor    eax,0x78cd8c7a
  417562:	enter  0x2cf7,0x1
  417566:	mov    ch,bh
  417568:	int3   
  417569:	int3   
  41756a:	dec    eax
  41756b:	loopne 0x41753a
  41756d:	sahf   
  41756e:	mov    ch,0x59
  417570:	adc    DWORD PTR [edx],esi
  417572:	push   ebx
  417573:	retf   0x8dae
  417576:	cld    
  417577:	div    ecx
  417579:	xchg   bh,ch
  41757b:	inc    ebx
  41757c:	stos   DWORD PTR es:[edi],eax
  41757d:	inc    edi
  41757e:	xor    cl,BYTE PTR [eax+edi*1+0x5ab689dc]
  417585:	aaa    
  417586:	outs   dx,DWORD PTR ds:[esi]
  417587:	outs   dx,DWORD PTR ds:[esi]
  417588:	inc    ebx
  417589:	test   al,0x60
  41758c:	inc    ebp
  41758d:	and    al,0x57
  41758f:	cli    
  417590:	xor    BYTE PTR [edi+0x65],al
  417593:	fdiv   QWORD PTR [edi]
  417595:	fnsave [ebp-0x78]
  417598:	or     eax,0x870df85f
  41759d:	xor    DWORD PTR [eax],esi
  41759f:	clc    
  4175a0:	aaa    
  4175a1:	pop    esp
  4175a2:	(bad)  
  4175a3:	xlat   BYTE PTR ds:[ebx]
  4175a4:	push   cs
  4175a5:	pusha  
  4175a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a7:	int    0x31
  4175a9:	or     esi,DWORD PTR [edi-0x4bb870b7]
  4175af:	jo     0x417583
  4175b1:	pop    es
  4175b2:	lahf   
  4175b3:	clc    
  4175b4:	mov    al,es:0x266082f4
  4175ba:	je     0x4175ef
  4175bc:	adc    eax,0x60fe9725
  4175c1:	mov    al,ds:0xa2d7df35
  4175c6:	mov    edx,0x1a8e29fa
  4175cb:	ret    0xfbda
  4175ce:	push   ecx
  4175cf:	dec    esp
  4175d0:	dec    eax
  4175d1:	push   edx
  4175d2:	(bad)  
  4175d3:	mov    ds:0x13b36763,eax
  4175d8:	sub    dh,BYTE PTR [eax]
  4175da:	mov    esp,DWORD PTR [ebx]
  4175dc:	cmp    DWORD PTR [eax-0x26],eax
  4175df:	add    BYTE PTR [esi],dh
  4175e1:	jno    0x417570
  4175e3:	mov    ah,0x57
  4175e5:	jmp    0x417567
  4175e7:	mov    cl,0xf9
  4175e9:	je     0x41766a
  4175eb:	mov    edi,0xd8f62998
  4175f0:	or     BYTE PTR [eax],bh
  4175f2:	ds das 
  4175f4:	fidivr WORD PTR [ecx+ecx*4+0x3ad094ac]
  4175fb:	lds    edx,FWORD PTR [eax-0x47]
  4175fe:	ds fcmovb st,st(4)
  417601:	mov    edi,0x3b3b4971
  417606:	and    bl,bl
  417608:	(bad)  
  417609:	inc    esp
  41760b:	xor    dl,bh
  41760d:	mov    al,fs:0x53d9408f
  417613:	jo     0x4175fd
  417615:	pusha  
  417616:	xor    cl,cl
  417618:	(bad)  
  417619:	cmovnp edi,DWORD PTR [edi-0x55]
  41761d:	mov    cl,0xd3
  41761f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417620:	test   BYTE PTR [ebx-0x7b1e4ab],bl
  417626:	popf   
  417627:	call   0x8a42be04
  41762c:	add    BYTE PTR [ebx],bh
  41762e:	mov    ebp,0x6df7e4f8
  417633:	adc    ch,BYTE PTR [edx]
  417635:	xchg   ebx,eax
  417636:	pop    ebx
  417637:	add    al,BYTE PTR [ebx+0x47fce64c]
  41763d:	lahf   
  41763e:	scas   al,BYTE PTR es:[edi]
  41763f:	fsub   st(6),st
  417641:	repnz or al,0x8a
  417644:	test   DWORD PTR [esi],edx
  417646:	mov    ah,0x63
  417648:	jl     0x417636
  41764a:	mov    ecx,0x7d423b2a
  41764f:	sahf   
  417650:	sahf   
  417651:	sub    BYTE PTR [esp+eiz*2+0x4e],al
  417655:	xchg   ebp,eax
  417656:	and    BYTE PTR ds:0x33126d99,ch
  41765c:	adc    cl,BYTE PTR [edx+0x11cbaf58]
  417662:	mov    bl,0xc9
  417664:	adc    al,BYTE PTR ds:0xd95752ff
  41766a:	scas   eax,DWORD PTR es:[edi]
  41766b:	ins    BYTE PTR es:[edi],dx
  41766c:	lods   eax,DWORD PTR ds:[esi]
  41766d:	sahf   
  41766e:	inc    dh
  417670:	xor    DWORD PTR [ebx],edi
  417672:	push   ecx
  417673:	mov    WORD PTR [edx-0x18819a2c],?
  417679:	test   al,0x37
  41767b:	pushf  
  41767c:	fcom   QWORD PTR [ebp-0xc]
  41767f:	(bad)  
  417680:	jp     0x41765f
  417682:	clc    
  417683:	inc    esp
  417684:	cli    
  417685:	fcom   QWORD PTR [edx-0x385ac245]
  41768b:	stc    
  41768c:	in     eax,dx
  41768d:	daa    
  41768e:	fst    DWORD PTR [ecx+0x27b3db7a]
  417694:	lock hlt 
  417696:	mov    edx,0x973a6983
  41769b:	or     eax,DWORD PTR [edi*2-0x2d79763]
  4176a2:	xor    esi,DWORD PTR [edi-0x31d4a7bb]
  4176a8:	in     eax,dx
  4176a9:	xor    BYTE PTR [ecx],bl
  4176ab:	and    bh,al
  4176ad:	nop
  4176ae:	in     eax,dx
  4176af:	ja     0x417700
  4176b1:	loopne 0x417717
  4176b3:	dec    edx
  4176b4:	inc    eax
  4176b5:	aaa    
  4176b6:	stos   DWORD PTR es:[edi],eax
  4176b7:	pop    ebp
  4176b8:	lahf   
  4176b9:	repz repnz xor BYTE PTR [esi-0x2a],ch
  4176be:	cwde   
  4176bf:	push   edi
  4176c0:	jbe    0x41771c
  4176c2:	adc    dh,ah
  4176c4:	inc    ebp
  4176c5:	cmp    eax,ebp
  4176c7:	mov    ch,0x95
  4176c9:	test   BYTE PTR [eax+0x33],bl
  4176cc:	icebp  
  4176cd:	jl     0x4176a1
  4176cf:	sti    
  4176d0:	fbld   TBYTE PTR [ebx-0x1e]
  4176d3:	and    ch,dh
  4176d5:	in     eax,0xab
  4176d7:	pop    esi
  4176d8:	pusha  
  4176d9:	pop    edx
  4176da:	out    0x76,al
  4176dc:	fwait
  4176dd:	adc    BYTE PTR [ebx+0x58107cc2],0x21
  4176e4:	pop    edx
  4176e5:	popa   
  4176e6:	int    0xfc
  4176e8:	add    BYTE PTR [ebx-0x66af0881],ah
  4176ee:	inc    esi
  4176ef:	jnp    0x417742
  4176f1:	mov    esp,0x93d21725
  4176f7:	add    eax,ebp
  4176f9:	mov    ah,BYTE PTR [ecx+0x6a]
  4176fc:	pop    edx
  4176fd:	mov    ds:0x9baa9e26,eax
  417702:	mov    bl,0xb4
  417704:	cdq    
  417705:	(bad)  
  417707:	repnz popf 
  417709:	out    0xd2,al
  41770b:	fsub   st,st(1)
  41770d:	loop   0x4176f8
  41770f:	push   0x13
  417711:	ficom  DWORD PTR [eax-0x26]
  417714:	fldenv [esi-0x5f]
  417717:	and    cl,BYTE PTR [ebp+ebp*4-0x5d2aa2f]
  41771e:	add    ebp,ebx
  417720:	mov    BYTE PTR [ebp+ebp*8-0x42],al
  417724:	xor    eax,edx
  417726:	pusha  
  417727:	scas   al,BYTE PTR es:[edi]
  417728:	and    DWORD PTR [esi+0x126fe5b2],0xffffff9e
  41772f:	jle    0x4176e5
  417731:	sahf   
  417732:	mov    WORD PTR [ebx],cs
  417734:	mov    eax,DWORD PTR [ebp-0x3d]
  417737:	cmp    BYTE PTR [edx+edi*1+0x2e393e2e],dl
  41773e:	fldenv gs:[ebx-0x4ab72135]
  417745:	and    ecx,edi
  417747:	dec    edi
  417748:	lds    edx,FWORD PTR [edx+0x54]
  41774b:	or     BYTE PTR [edx-0x6e],0x29
  41774f:	mov    ds,WORD PTR [esi]
  417751:	mov    BYTE PTR [edi*4+0x515c4f1f],bh
  417758:	enter  0xee35,0x3d
  41775c:	add    ebp,DWORD PTR [ebp-0x3]
  41775f:	xchg   DWORD PTR [edi+0x4f],ebp
  417762:	aam    0x5
  417764:	mov    ebp,0xf5ecee35
  417769:	inc    esp
  41776a:	test   eax,0x83909b10
  41776f:	jno    0x41770c
  417771:	imul   ebx,DWORD PTR [ecx-0x33],0x67
  417775:	ror    edx,0x50
  417778:	xor    DWORD PTR [edx+0x6cdb43d5],edi
  41777e:	cmp    eax,0x7ab5f078
  417783:	ss dec ecx
  417785:	dec    esp
  417786:	push   ds
  417787:	das    
  417788:	hlt    
  417789:	shl    cl,1
  41778b:	xchg   edx,eax
  41778c:	xor    eax,0x87703ad7
  417791:	or     al,0x54
  417793:	mov    ecx,0x4f4210ec
  417798:	mov    al,ds:0x58bf0c23
  41779d:	mov    ds:0x80b89b19,eax
  4177a2:	fld    QWORD PTR ds:0x981a4861
  4177a8:	out    dx,eax
  4177a9:	aam    0xd7
  4177ab:	jno    0x4177c1
  4177ad:	icebp  
  4177ae:	adc    ecx,esi
  4177b0:	jecxz  0x4177f7
  4177b2:	add    BYTE PTR [ecx+0x25],cl
  4177b5:	pop    esp
  4177b6:	lds    edi,FWORD PTR [ecx]
  4177b8:	sbb    cl,ch
  4177ba:	xchg   edi,eax
  4177bb:	repz pushf 
  4177bd:	cmp    eax,0xb244154
  4177c2:	sub    cl,BYTE PTR [esi+0x60]
  4177c5:	mov    al,BYTE PTR [eax-0x15b59965]
  4177cb:	cmp    eax,0x515c16f6
  4177d0:	fisttp QWORD PTR [edx-0x1e573df4]
  4177d6:	sbb    esi,DWORD PTR [edi]
  4177d8:	pop    esp
  4177d9:	pop    eax
  4177da:	outs   dx,BYTE PTR ds:[esi]
  4177db:	fwait
  4177dc:	push   0xffffff83
  4177de:	push   cs
  4177df:	or     al,0x5d
  4177e1:	xor    ebp,esp
  4177e3:	push   0xffffff8e
  4177e5:	rcr    BYTE PTR [esi],0x80
  4177e8:	out    0xa0,al
  4177ea:	stos   DWORD PTR es:[edi],eax
  4177eb:	int    0x16
  4177ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ee:	xchg   ecx,eax
  4177ef:	push   esp
  4177f0:	pop    ss
  4177f1:	stc    
  4177f2:	mov    dh,BYTE PTR [si-0x5c]
  4177f6:	xchg   DWORD PTR [esi+0x12],esp
  4177f9:	push   esp
  4177fa:	or     eax,0x9afb0f5d
  4177ff:	inc    esp
  417800:	(bad)  
  417801:	outs   dx,DWORD PTR ds:[esi]
  417802:	(bad)  
  417803:	adc    bh,BYTE PTR [eax]
  417805:	stos   BYTE PTR es:[edi],al
  417806:	adc    al,BYTE PTR [esi]
  417808:	adc    ch,BYTE PTR [ebp+0x60]
  41780b:	out    dx,al
  41780c:	xchg   ecx,eax
  41780d:	push   es
  41780e:	das    
  41780f:	push   esp
  417810:	pop    ecx
  417811:	inc    ebx
  417812:	rcl    BYTE PTR [ebp*8+0x57f11fce],cl
  417819:	dec    esp
  41781a:	loop   0x4177a1
  41781c:	cmc    
  41781d:	arpl   WORD PTR [eax],di
  41781f:	push   ecx
  417820:	lods   eax,DWORD PTR ds:[esi]
  417821:	sub    bl,BYTE PTR [edx+ebp*8-0xba565e0]
  417828:	jl     0x98636f0a
  41782e:	(bad)  
  41782f:	(bad)  
  417830:	jp     0x3bb0342c
  417836:	jnp    0x4177ea
  417838:	out    dx,al
  417839:	jl     0x4177d2
  41783b:	sub    eax,0x87b0a849
  417840:	scas   al,BYTE PTR es:[edi]
  417841:	mov    BYTE PTR [edx],bh
  417843:	fidiv  WORD PTR [edi-0x45]
  417846:	jmp    0x95a5e6ab
  41784b:	add    DWORD PTR [esi+0x15],ebx
  41784e:	out    0x0,eax
  417850:	push   edx
  417851:	call   0xf6a4eee0
  417856:	jns    0x41785b
  417858:	inc    ebp
  417859:	xchg   esi,eax
  41785a:	daa    
  41785b:	and    DWORD PTR [ecx],ebp
  41785d:	sub    BYTE PTR [ebx],bh
  41785f:	ret    
  417860:	inc    esp
  417861:	xchg   edi,eax
  417862:	push   cs
  417863:	nop
  417864:	in     eax,0x47
  417866:	pop    ecx
  417868:	out    0xeb,eax
  41786a:	ret    
  41786b:	sbb    al,0xb5
  41786d:	mov    ecx,0x405d431d
  417872:	adc    DWORD PTR [ebx-0x7],eax
  417875:	jo     0x4178cc
  417877:	test   edx,0x79e29398
  41787d:	fiadd  DWORD PTR [edx]
  41787f:	cdq    
  417880:	test   DWORD PTR [ebx-0x4311013b],ebx
  417886:	les    esp,FWORD PTR [esi]
  417888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417889:	mov    ebx,0x1a0b7f64
  41788e:	dec    ecx
  41788f:	jnp    0x417893
  417891:	dec    ecx
  417892:	fcomp  st(2)
  417894:	cs scas eax,DWORD PTR es:[edi]
  417896:	ja     0x4178ea
  417898:	jge    0x417901
  41789a:	xchg   ecx,eax
  41789b:	push   ds
  41789c:	mov    cl,0x7f
  41789e:	je     0x4178e6
  4178a0:	lahf   
  4178a1:	clc    
  4178a2:	cmp    ebx,DWORD PTR [esi]
  4178a4:	adc    DWORD PTR [esi+ebx*1],eax
  4178a7:	scas   eax,DWORD PTR es:[edi]
  4178a8:	and    esi,DWORD PTR [edx+esi*1]
  4178ab:	and    edi,DWORD PTR [eax]
  4178ad:	loopne 0x417839
  4178af:	mov    al,0xa4
  4178b1:	pop    esi
  4178b2:	fstp   TBYTE PTR [edx-0x65]
  4178b5:	push   edi
  4178b6:	jg     0x4178f0
  4178b8:	aas    
  4178b9:	int3   
  4178ba:	shr    WORD PTR [ecx-0x31],cl
  4178be:	in     al,0x9
  4178c0:	xor    BYTE PTR [edi],ch
  4178c2:	sub    al,BYTE PTR [ebp-0x280ad4ab]
  4178c8:	jbe    0x4178b6
  4178ca:	push   ss
  4178cb:	adc    DWORD PTR [edi+0x3b],ebx
  4178ce:	cmp    BYTE PTR [edx],al
  4178d0:	aam    0x93
  4178d2:	ja     0x4178d7
  4178d4:	sub    ah,BYTE PTR [esi-0x10496012]
  4178da:	repnz bound esp,QWORD PTR [ebp+0x30]
  4178de:	jge    0x4178da
  4178e0:	xchg   ebx,eax
  4178e1:	xor    bh,al
  4178e3:	jne    0x417922
  4178e5:	hlt    
  4178e6:	mov    eax,0xce8fa677
  4178eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ec:	rol    DWORD PTR [ebx],0x74
  4178ef:	fmul   QWORD PTR [ecx+0x15]
  4178f2:	inc    edi
  4178f3:	cmp    al,0x33
  4178f5:	stc    
  4178f6:	push   ebx
  4178f7:	adc    ah,dl
  4178f9:	cmp    al,bh
  4178fb:	int3   
  4178fc:	mov    ah,0xa0
  4178fe:	add    al,ch
  417900:	mov    esi,0xd38d1594
  417905:	aas    
  417906:	cmp    eax,0x7e110960
  41790b:	push   edx
  41790c:	inc    eax
  41790d:	jb     0x4178af
  41790f:	pop    esi
  417910:	imul   BYTE PTR [ebx+0x75]
  417913:	idiv   bh
  417915:	cmp    al,0x11
  417917:	xchg   ebx,eax
  417918:	mov    ?,WORD PTR [ebp+0x6416bd22]
  41791e:	cli    
  41791f:	adc    al,0x33
  417921:	push   ebx
  417922:	popf   
  417923:	ins    DWORD PTR es:[edi],dx
  417924:	mov    bh,0x80
  417926:	inc    eax
  417927:	in     eax,dx
  417928:	cwde   
  417929:	dec    edi
  41792a:	es call 0x597e:0xf9fc5b77
  417932:	xchg   ecx,eax
  417933:	sbb    ah,BYTE PTR [eax+0xdc4791e]
  417939:	add    dl,al
  41793b:	add    BYTE PTR [ecx],ch
  41793d:	sub    ah,BYTE PTR ds:0x2c968a4a
  417943:	dec    esp
  417944:	xchg   edi,eax
  417945:	cli    
  417946:	popa   
  417947:	mov    cl,0x87
  417949:	push   ebp
  41794a:	sub    ch,BYTE PTR [edi-0x4f70739d]
  417950:	mov    al,ds:0x71c4f32
  417955:	repz pop esi
  417957:	dec    ebp
  417958:	jle    0x41792f
  41795a:	dec    esp
  41795b:	lods   al,BYTE PTR ds:[esi]
  41795c:	scas   al,BYTE PTR es:[edi]
  41795d:	cmp    al,0x70
  41795f:	dec    esp
  417960:	and    ecx,DWORD PTR ss:[esi+0x7c]
  417964:	cmp    ah,al
  417966:	xchg   ecx,eax
  417967:	scas   al,BYTE PTR es:[edi]
  417968:	push   edx
  417969:	cmp    al,0x50
  41796b:	pop    DWORD PTR [ecx-0x7ddd8c1]
  417971:	mov    BYTE PTR [edi],0xa3
  417974:	loopne 0x417930
  417976:	jmp    0x41790c
  417978:	jne    0x4179ec
  41797a:	xor    BYTE PTR [esi+ecx*4+0x35c64ed9],al
  417981:	fs xchg esp,eax
  417983:	rcl    DWORD PTR [eax-0x56],cl
  417986:	in     eax,dx
  417987:	into   
  417988:	or     DWORD PTR [ebx-0xda1cf4c],0x4a5dd7e4
  417992:	out    dx,eax
  417993:	iret   
  417994:	mov    esp,0xd15dc498
  417999:	lods   al,BYTE PTR ds:[esi]
  41799a:	cld    
  41799b:	jmp    0x2eaa7e0a
  4179a0:	call   0x9da1d216
  4179a5:	jne    0x417a23
  4179a7:	dec    ecx
  4179a8:	add    eax,ebp
  4179aa:	inc    esp
  4179ab:	lods   eax,DWORD PTR ds:[esi]
  4179ac:	aaa    
  4179ad:	mov    al,0x49
  4179af:	mov    cl,0xf8
  4179b1:	inc    ecx
  4179b2:	fbld   TBYTE PTR [edx-0x5]
  4179b5:	sub    DWORD PTR [edx+eax*2+0x63],edx
  4179b9:	cmp    cl,ch
  4179bb:	add    DWORD PTR [ebx-0x74c68c92],eax
  4179c1:	outs   dx,DWORD PTR ds:[esi]
  4179c2:	fcom   DWORD PTR [ebx+0x49c4b8da]
  4179c8:	push   ss
  4179c9:	test   DWORD PTR [edx-0x4d],ecx
  4179cc:	daa    
  4179cd:	push   edx
  4179ce:	jbe    0x4179b8
  4179d0:	outs   dx,DWORD PTR ds:[esi]
  4179d1:	push   ecx
  4179d2:	loopne 0x4179dc
  4179d4:	and    DWORD PTR [ebx],0x5bc39dd6
  4179da:	push   esp
  4179db:	xor    ch,ch
  4179dd:	cmp    al,0x3d
  4179df:	mov    dl,0xe7
  4179e1:	push   edx
  4179e2:	mov    bl,0xe9
  4179e4:	inc    eax
  4179e5:	push   cs
  4179e6:	aas    
  4179e7:	imul   ebx,edx,0xd4f6ad9a
  4179ed:	pop    esi
  4179ee:	inc    esi
  4179ef:	jo     0x417a3c
  4179f1:	jmp    0x5c57:0x20f9f348
  4179f8:	(bad)  
  4179f9:	mov    ecx,0xc362ea36
  4179fe:	in     eax,dx
  4179ff:	mov    cl,BYTE PTR [esi+eax*1+0x509f3f5d]
  417a06:	mov    edx,0x3400d385
  417a0b:	mov    esi,0xc2721e03
  417a10:	mov    al,ds:0xfd25047c
  417a15:	jmp    0x6857:0x56323d0
  417a1c:	aad    0x62
  417a1e:	add    DWORD PTR [ebp+0x2f],0x3b
  417a22:	push   esp
  417a23:	mov    edx,0x694ef78c
  417a28:	outs   dx,DWORD PTR ds:[esi]
  417a29:	lahf   
  417a2a:	jle    0x417a16
  417a2c:	sub    BYTE PTR [ecx],cl
  417a2e:	sbb    DWORD PTR cs:[edx-0x2f5cd6ff],eax
  417a35:	jb     0x417aad
  417a37:	popa   
  417a38:	imul   edx,DWORD PTR [ecx+0x69e77c98],0x7b
  417a3f:	or     eax,DWORD PTR [edx+eiz*1-0x4f]
  417a43:	adc    BYTE PTR [esi],0x3
  417a46:	xor    DWORD PTR [ecx],ecx
  417a48:	stos   BYTE PTR es:[edi],al
  417a49:	inc    eax
  417a4a:	gs hlt 
  417a4c:	mov    ebp,0x6037ba3b
  417a51:	mov    esp,0x3997a26
  417a56:	dec    eax
  417a57:	pushf  
  417a58:	mov    ds:0x7e2b02fa,eax
  417a5d:	fcom   DWORD PTR [edi+0x1c]
  417a60:	test   DWORD PTR [ecx-0x3b1f15b9],eax
  417a66:	and    ch,BYTE PTR [esi-0x70]
  417a69:	push   eax
  417a6a:	cld    
  417a6b:	add    al,0xea
  417a6d:	in     eax,dx
  417a6e:	sbb    cl,BYTE PTR [edi-0x62ecc08a]
  417a74:	and    ecx,DWORD PTR [edx-0x7294d83c]
  417a7a:	jl     0x417a9e
  417a7c:	jge    0x417aea
  417a7e:	push   ds
  417a7f:	rcr    BYTE PTR [esi+0x49d37e4e],cl
  417a85:	sbb    al,0xbe
  417a87:	jle    0x417ae6
  417a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8a:	pop    esp
  417a8b:	outs   dx,DWORD PTR ds:[esi]
  417a8c:	rcr    DWORD PTR [edx],cl
  417a8e:	adc    BYTE PTR [esp+ebp*8+0x3307af98],dh
  417a95:	xchg   edi,eax
  417a96:	outs   dx,BYTE PTR ds:[esi]
  417a97:	nop
  417a98:	xchg   BYTE PTR [eax+0x69469c05],al
  417a9e:	mov    al,0x7d
  417aa0:	inc    esp
  417aa1:	xchg   esi,eax
  417aa2:	loope  0x417a88
  417aa4:	inc    edx
  417aa5:	dec    edi
  417aa6:	sti    
  417aa7:	imul   edx,DWORD PTR [esi],0x5
  417aaa:	repz mov cl,bh
  417aad:	mov    ecx,0x2399b261
  417ab2:	add    eax,0x5f16d456
  417ab7:	mov    ch,0x53
  417ab9:	ret    
  417aba:	imul   edi,edi,0xffffffa8
  417abd:	xor    al,0xd8
  417abf:	neg    BYTE PTR [edi]
  417ac1:	dec    esp
  417ac2:	jp     0x417afe
  417ac4:	out    dx,eax
  417ac5:	je     0x417b0e
  417ac7:	xchg   edi,eax
  417ac8:	dec    eax
  417ac9:	xchg   esi,eax
  417aca:	xchg   edx,eax
  417acb:	push   edx
  417acc:	lods   al,BYTE PTR ds:[esi]
  417acd:	push   eax
  417ace:	jl     0x417aee
  417ad0:	xchg   esi,eax
  417ad1:	adc    BYTE PTR [eax],bl
  417ad3:	xlat   BYTE PTR ds:[ebx]
  417ad4:	cmp    al,0x2e
  417ad6:	ins    DWORD PTR es:[edi],dx
  417ad7:	sbb    BYTE PTR [ebx+0x58],0xa3
  417adb:	mov    esi,0xfcdd4f7
  417ae0:	jo     0x417af6
  417ae2:	ins    DWORD PTR es:[edi],dx
  417ae3:	loope  0x417abc
  417ae5:	xor    al,0x9c
  417ae7:	pop    esi
  417ae8:	lea    eax,ds:0x4fda262d
  417aee:	fs clc 
  417af0:	and    cl,BYTE PTR [ebp-0x30969649]
  417af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af7:	popa   
  417af8:	lea    esp,[edx-0x469c290d]
  417afe:	add    al,0xba
  417b00:	rol    ebx,0x98
  417b03:	int    0x7
  417b05:	sub    dh,BYTE PTR [ecx]
  417b07:	inc    ebp
  417b08:	push   es
  417b09:	add    eax,0xee3ed22e
  417b0e:	sbb    al,0x49
  417b10:	and    al,0x75
  417b12:	inc    esp
  417b13:	rol    DWORD PTR [edi-0x6f712dad],cl
  417b19:	and    ecx,ebp
  417b1b:	aas    
  417b1c:	xchg   edx,eax
  417b1d:	mov    ds,WORD PTR [ecx-0x16bd8575]
  417b23:	push   esi
  417b24:	gs fs ror bh,cl
  417b28:	dec    esi
  417b29:	jns    0x417b79
  417b2b:	popf   
  417b2c:	xchg   ebp,eax
  417b2d:	dec    esi
  417b2e:	out    dx,al
  417b2f:	mov    ecx,0x9a3ee754
  417b34:	push   0x17fb74d5
  417b39:	xor    eax,esi
  417b3b:	ror    bh,1
  417b3d:	shr    DWORD PTR [edx+0x18233f10],1
  417b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b44:	imul   dh
  417b46:	xor    esi,ebx
  417b48:	add    edi,DWORD PTR [esi+esi*8+0x7c55ee9f]
  417b4f:	xor    esp,DWORD PTR [ebx+edx*4+0xfa28a5]
  417b56:	mov    cl,0xe4
  417b58:	pusha  
  417b59:	sbb    al,0xbe
  417b5b:	retf   
  417b5c:	jb     0x417bc5
  417b5e:	mov    ch,0xae
  417b60:	adc    eax,0x3fc8aa0a
  417b65:	out    dx,al
  417b66:	sub    DWORD PTR [eax],ebx
  417b68:	aam    0x6e
  417b6a:	cwde   
  417b6b:	and    eax,0xe3fb244e
  417b70:	lds    esi,FWORD PTR [esi-0x5a26f4b9]
  417b76:	fild   QWORD PTR [esi+ecx*1+0x55cc3f82]
  417b7d:	loope  0x417b11
  417b7f:	pop    esp
  417b80:	test   eax,0xb3ec3edc
  417b85:	push   cs
  417b86:	aad    0xec
  417b88:	pop    ebx
  417b89:	data16 sbb BYTE PTR [edi],0x6c
  417b8d:	mov    ebp,0x7fe27689
  417b92:	or     ebp,DWORD PTR [eax]
  417b94:	(bad)  
  417b95:	das    
  417b96:	mov    WORD PTR [ecx+0x65],?
  417b99:	(bad)  
  417b9a:	repz jmp 0x417b36
  417b9d:	dec    ebx
  417b9e:	pop    ss
  417b9f:	mov    ecx,0xac9eb867
  417ba4:	ins    BYTE PTR es:[edi],dx
  417ba5:	pop    esi
  417ba6:	test   eax,0x959a7c3f
  417bab:	outs   dx,BYTE PTR ds:[esi]
  417bac:	dec    eax
  417bad:	xor    eax,0x1dacdb6d
  417bb2:	loop   0x417bce
  417bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb5:	jg     0x417c03
  417bb7:	and    al,0xea
  417bb9:	push   edi
  417bba:	(bad)
  417bbd:	cdq    
  417bbe:	in     eax,dx
  417bbf:	cs in  eax,dx
  417bc1:	push   ebp
  417bc2:	repnz out 0x3f,al
  417bc5:	shr    BYTE PTR [edx],1
  417bc7:	nop
  417bc8:	ss and al,0x86
  417bcb:	out    dx,eax
  417bcc:	sub    al,0x7b
  417bce:	mov    edi,0x19d78aa2
  417bd3:	dec    ecx
  417bd4:	push   eax
  417bd5:	data16 mov dh,0xc4
  417bd8:	xor    ah,dh
  417bda:	sub    al,0x87
  417bdc:	outs   dx,DWORD PTR ds:[esi]
  417bdd:	add    DWORD PTR [ecx],0xee3e1d12
  417be3:	loope  0x417b8b
  417be5:	add    esp,eax
  417be7:	pop    ecx
  417be8:	sar    BYTE PTR [ecx-0x22b27e3],cl
  417bee:	aaa    
  417bef:	ds jne 0x417b86
  417bf2:	pop    esi
  417bf3:	adc    BYTE PTR [esi-0x10],0xfd
  417bf7:	push   edx
  417bf8:	je     0x417c58
  417bfa:	xlat   BYTE PTR ds:[ebx]
  417bfb:	jbe    0x417c08
  417bfd:	mov    al,ds:0xfd912dc9
  417c02:	mov    ah,0x6e
  417c04:	sbb    eax,0xb8376268
  417c09:	inc    edx
  417c0a:	test   BYTE PTR [ebx+0x31bf0997],cl
  417c10:	es fwait
  417c12:	fwait
  417c13:	mov    ebp,0xf2fcd494
  417c18:	mov    al,ds:0x754c4795
  417c1d:	daa    
  417c1e:	int    0x24
  417c20:	cld    
  417c21:	les    esp,FWORD PTR [edx+0x719d6173]
  417c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c28:	inc    edi
  417c29:	xchg   esi,eax
  417c2a:	leave  
  417c2b:	inc    ecx
  417c2c:	xchg   edx,eax
  417c2d:	mov    ds:0xab3e2c01,eax
  417c32:	add    dl,BYTE PTR [ebp-0x6c]
  417c35:	call   0xb76e:0xbf2e14a9
  417c3c:	dec    edi
  417c3d:	jns    0x417c9a
  417c3f:	xchg   ebx,eax
  417c40:	mov    al,0x72
  417c42:	mov    bl,0xd9
  417c44:	pop    esp
  417c45:	mov    cs,WORD PTR [ebp+0x50d4d67f]
  417c4b:	(bad)  
  417c4c:	jnp    0x417bf3
  417c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c4f:	iret   
  417c50:	push   edx
  417c51:	jp     0x417c45
  417c53:	arpl   dx,ax
  417c55:	cmp    BYTE PTR [edi-0x70166edd],cl
  417c5b:	in     eax,0x9
  417c5d:	clc    
  417c5e:	std    
  417c5f:	push   ds
  417c60:	mov    cl,bh
  417c62:	icebp  
  417c63:	outs   dx,DWORD PTR ds:[esi]
  417c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c65:	enter  0xde5b,0x13
  417c69:	in     al,0x65
  417c6b:	loop   0x417cd4
  417c6d:	jmp    0x417c93
  417c6f:	mov    edx,0x54c544d1
  417c74:	mov    BYTE PTR [ebx+0x3b4a9edd],cl
  417c7a:	into   
  417c7b:	push   0x981e77ea
  417c80:	pop    ebp
  417c81:	out    0x72,eax
  417c83:	add    eax,edi
  417c85:	and    BYTE PTR [edi],ah
  417c87:	mov    ds:0x119f0f5d,al
  417c8c:	and    DWORD PTR [ebx+0x3b],0xe611b9fc
  417c93:	lock push ds
  417c95:	sbb    edx,DWORD PTR [edi-0x786f855a]
  417c9b:	or     BYTE PTR [ecx+esi*1+0x13],dh
  417c9f:	jno    0x417c80
  417ca1:	and    BYTE PTR [eax+ebx*4-0x7f],cl
  417ca5:	jg     0x417c55
  417ca7:	xor    esp,DWORD PTR ds:0x88dec5b0
  417cad:	jle    0x417c9a
  417caf:	push   0x54
  417cb1:	sbb    al,0x47
  417cb3:	mov    ebx,eax
  417cb5:	jle    0x417d09
  417cb7:	or     BYTE PTR [ecx-0x7b],dl
  417cba:	adc    bl,BYTE PTR [edx+0x1b8ffc78]
  417cc0:	pop    edx
  417cc1:	(bad)  
  417cc2:	cmp    ecx,esp
  417cc4:	mov    eax,0x52582dc1
  417cc9:	aas    
  417cca:	mov    dh,0xc
  417ccc:	stc    
  417ccd:	sbb    cl,BYTE PTR [edx+0x6fabd550]
  417cd3:	cmovno eax,DWORD PTR [edx+esi*1-0xb1d9300]
  417cdb:	aad    0xff
  417cdd:	jmp    0x18e01d75
  417ce2:	sbb    BYTE PTR [eax-0xafe8873],ah
  417ce8:	xchg   ebp,eax
  417ce9:	cmp    dh,BYTE PTR [ebx+0x44]
  417cec:	arpl   WORD PTR [ebp-0x32],cx
  417cef:	push   0x8e8dd5c0
  417cf4:	push   ds
  417cf5:	cwde   
  417cf6:	or     DWORD PTR [ebp+0x20207ec],0x4d
  417cfd:	dec    ebx
  417cfe:	test   BYTE PTR [edx+edx*4+0x5c194db7],ah
  417d05:	cli    
  417d06:	loop   0x417c8c
  417d08:	xchg   ebp,eax
  417d09:	cmp    edi,DWORD PTR [eax+0x468f09c2]
  417d0f:	dec    edi
  417d10:	push   esi
  417d11:	adc    edx,esi
  417d13:	jns    0x417d7b
  417d15:	clc    
  417d16:	jg     0x417d83
  417d18:	fbstp  TBYTE PTR [ecx-0x71c68f07]
  417d1e:	or     al,0x4d
  417d20:	push   eax
  417d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d22:	fcmovnbe st,st(5)
  417d24:	fsub   st(6),st
  417d26:	jge    0x417d53
  417d28:	push   ss
  417d29:	sbb    BYTE PTR [ebp+ebx*8+0x0],dh
  417d2d:	ins    BYTE PTR es:[edi],dx
  417d2e:	cmc    
  417d2f:	jmp    0x5298:0x71ca753c
  417d36:	ds sub eax,0x16838aef
  417d3c:	mov    ds:0x28fe4c66,eax
  417d41:	ret    
  417d42:	add    ch,BYTE PTR [esi]
  417d44:	rcr    eax,1
  417d46:	mov    ds:0xe46092c,al
  417d4b:	push   ds
  417d4c:	push   es
  417d4d:	add    bh,BYTE PTR [eax+0x5]
  417d50:	and    ecx,DWORD PTR [esi]
  417d52:	cmp    ch,al
  417d54:	test   DWORD PTR [edi-0x7e],esp
  417d57:	sub    eax,0x2aedd2c9
  417d5c:	dec    esp
  417d5d:	or     BYTE PTR [ecx+0x3888129e],0x82
  417d64:	cmp    BYTE PTR [esi+0x6e1360db],dh
  417d6a:	cmp    ecx,edi
  417d6c:	mov    al,ds:0xcc613ba5
  417d71:	xor    al,0x99
  417d73:	sub    eax,0x4410521f
  417d78:	data16 mov dl,0xd2
  417d7b:	xchg   esi,eax
  417d7c:	xchg   esp,eax
  417d7d:	and    eax,0x8b4ad9c9
  417d82:	dec    ecx
  417d83:	and    eax,0x7dffa6a9
  417d88:	xchg   ebp,eax
  417d89:	call   0x7cec3ccf
  417d8e:	ins    DWORD PTR es:[edi],dx
  417d8f:	loop   0x417d1b
  417d91:	push   edi
  417d92:	fld    st(6)
  417d94:	mov    dl,0xbc
  417d96:	or     eax,0xc6dcd7f9
  417d9b:	and    DWORD PTR [eax-0x2ab39a37],0xffffffad
  417da2:	(bad)  
  417da3:	or     al,BYTE PTR [edx]
  417da5:	pop    ebp
  417da6:	mov    ah,0xd8
  417da8:	pop    ebx
  417da9:	inc    eax
  417daa:	inc    edi
  417dab:	jo     0x417d88
  417dad:	or     eax,0x799799be
  417db2:	out    dx,eax
  417db3:	mov    al,ds:0xdf44746
  417db8:	pop    ebp
  417db9:	sti    
  417dba:	or     al,0x15
  417dbc:	cmp    al,0x9
  417dbe:	or     bl,BYTE PTR [ebx]
  417dc0:	test   ch,0xd7
  417dc3:	stos   BYTE PTR es:[edi],al
  417dc4:	aaa    
  417dc5:	add    dl,dh
  417dc7:	jo     0x417dcb
  417dc9:	das    
  417dca:	jne    0x417dbf
  417dcc:	in     al,0x35
  417dce:	cdq    
  417dcf:	rcr    BYTE PTR [edi],0x36
  417dd2:	sub    dl,BYTE PTR [eax+eiz*8-0x5f]
  417dd6:	sub    ecx,eax
  417dd8:	iret   
  417dd9:	fnsave [edi]
  417ddb:	sub    DWORD PTR [ebx+0x314d990],0x2d
  417de2:	mov    bh,0xa9
  417de4:	rcl    esp,0x35
  417de7:	lds    eax,FWORD PTR [edi]
  417de9:	ror    DWORD PTR [edi+0x13],cl
  417dec:	pop    ebp
  417ded:	or     eax,DWORD PTR [eax+0x8]
  417df0:	mov    ds:0xb32e4a56,al
  417df5:	(bad)  
  417df6:	xlat   BYTE PTR ds:[ebx]
  417df7:	inc    eax
  417df8:	sub    al,0xd4
  417dfa:	(bad)  
  417dfb:	fadd   DWORD PTR ds:0x310d9553
  417e01:	mov    cl,0x1f
  417e03:	mov    esp,0x8c279a7
  417e08:	ja     0x417e41
  417e0a:	add    al,0x30
  417e0c:	(bad)  
  417e0d:	(bad)  
  417e0e:	fldenv [edi+0x6a5077d4]
  417e14:	shr    DWORD PTR [edi+0x77db84d5],0x16
  417e1b:	push   ss
  417e1c:	out    dx,eax
  417e1d:	loopne 0x417db1
  417e1f:	stc    
  417e20:	add    BYTE PTR [edi+0x6ae0a586],dh
  417e26:	stos   BYTE PTR es:[edi],al
  417e27:	sub    edi,DWORD PTR [ecx-0x242c1a15]
  417e2d:	imul   ebp,ecx,0xfc36962c
  417e33:	inc    ebx
  417e34:	or     BYTE PTR [edx],bl
  417e36:	daa    
  417e37:	pop    es
  417e38:	jo     0x417e52
  417e3a:	fsubr  QWORD PTR [esi]
  417e3c:	test   al,0x3f
  417e3e:	dec    esi
  417e3f:	pop    ds
  417e40:	mov    al,ds:0xc97b4cfa
  417e45:	ds jle 0x417e1e
  417e48:	enter  0xc456,0x29
  417e4c:	imul   esi,edx,0x6e
  417e4f:	fsubr  QWORD PTR [edi]
  417e51:	adc    esp,DWORD PTR [ecx]
  417e53:	rcl    DWORD PTR [edx-0x676d5c65],1
  417e59:	(bad)  
  417e5a:	push   ecx
  417e5b:	out    dx,al
  417e5c:	clc    
  417e5d:	scas   al,BYTE PTR es:[edi]
  417e5e:	out    dx,al
  417e5f:	fdivr  st,st(1)
  417e61:	ret    
  417e62:	push   0xdedd5bec
  417e67:	and    ch,BYTE PTR [esi]
  417e69:	sub    al,0x58
  417e6b:	pop    eax
  417e6c:	cwde   
  417e6d:	sbb    DWORD PTR [edi+0x4b106b37],ebx
  417e73:	adc    al,0xde
  417e75:	jmp    0x417e42
  417e77:	adc    BYTE PTR [ebx],ch
  417e79:	cmp    BYTE PTR [edi+eax*1+0xa],0x62
  417e7e:	cmp    cl,BYTE PTR [esi+0x3af1c7b1]
  417e84:	out    dx,al
  417e85:	or     edi,DWORD PTR [ebp-0x61]
  417e88:	out    0xab,al
  417e8a:	mov    esp,0xe20199b8
  417e8f:	test   eax,0xc8f8faf9
  417e94:	inc    ebx
  417e95:	loope  0x417e84
  417e97:	xchg   edi,eax
  417e98:	jg     0x417edf
  417e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e9b:	xchg   ebp,eax
  417e9c:	shl    cl,cl
  417e9e:	hlt    
  417e9f:	test   BYTE PTR [ecx+0xf17817],bl
  417ea5:	call   0x51cad334
  417eaa:	pop    esp
  417eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eac:	xor    eax,0x7f1067a0
  417eb1:	inc    esi
  417eb2:	dec    esi
  417eb3:	mov    DWORD PTR [esp+edx*8-0x2],ebp
  417eb7:	nop
  417eb8:	daa    
  417eb9:	fcomp  DWORD PTR [ecx+0xf2f5b93]
  417ebf:	sbb    bh,dl
  417ec1:	or     eax,0xd21171c7
  417ec6:	imul   edi,DWORD PTR [edx+0x2742d927],0xffffffdf
  417ecd:	scas   al,BYTE PTR es:[edi]
  417ece:	mov    bh,0xbf
  417ed0:	jmp    0x417f03
  417ed2:	or     DWORD PTR [edx+0x7e],0x27826439
  417ed9:	out    dx,al
  417eda:	jmp    0xc8ba5ffc
  417edf:	jae    0x417f12
  417ee1:	(bad)  [eax+0x50]
  417ee4:	fidiv  WORD PTR [eax]
  417ee6:	xor    eax,0x1434fcb
  417eeb:	hlt    
  417eec:	scas   eax,DWORD PTR es:[edi]
  417eed:	xchg   edi,eax
  417eee:	adc    esp,DWORD PTR [eax]
  417ef0:	push   0x17fb3624
  417ef5:	scas   eax,DWORD PTR es:[edi]
  417ef6:	and    bh,al
  417ef8:	mov    ecx,0xd9849f74
  417efd:	or     DWORD PTR [edi-0x74],esi
  417f00:	adc    eax,0x4ff369ee
  417f05:	(bad)  
  417f06:	jmp    0xd055e918
  417f0b:	pop    esp
  417f0c:	pop    edx
  417f0d:	push   0x2b
  417f0f:	fstp   TBYTE PTR [esi+eiz*4]
  417f12:	in     eax,0x9c
  417f14:	push   ebx
  417f15:	sbb    eax,0xe37c03dc
  417f1a:	lods   al,BYTE PTR ds:[esi]
  417f1b:	sub    eax,0x8b0638b7
  417f20:	mov    BYTE PTR [edi+ebp*8],ch
  417f23:	xchg   ebx,eax
  417f24:	cmp    edx,DWORD PTR fs:[edx+0x29]
  417f28:	add    BYTE PTR [ecx+0x32cc67ff],dh
  417f2e:	shl    BYTE PTR [ebx-0x7a08ea93],cl
  417f34:	mov    ecx,0xdc0cbde8
  417f39:	ss sub eax,0xffd26c89
  417f3f:	mov    bh,0x5a
  417f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f42:	or     eax,0x12edef40
  417f47:	jle    0x417f26
  417f49:	cs and al,0x41
  417f4c:	shr    DWORD PTR [ecx-0x20],0xd5
  417f50:	pusha  
  417f51:	xchg   edi,eax
  417f52:	popf   
  417f53:	mov    ecx,0xa4d7ba52
  417f58:	jbe    0x417efb
  417f5a:	ins    BYTE PTR es:[edi],dx
  417f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f5c:	gs add al,dl
  417f5f:	sub    cl,BYTE PTR [edi-0xd]
  417f62:	adc    DWORD PTR [ebp-0x7d],ebp
  417f65:	sbb    BYTE PTR [esi],dl
  417f67:	sub    dl,BYTE PTR [edi]
  417f69:	and    DWORD PTR [ecx],esi
  417f6b:	fist   DWORD PTR ds:0xf0266812
  417f71:	mov    es,WORD PTR [esi]
  417f73:	in     al,dx
  417f74:	gs aas 
  417f76:	jmp    0x74713539
  417f7b:	jg     0x417f90
  417f7d:	fisubr DWORD PTR [ebp-0x18209b6f]
  417f83:	adc    BYTE PTR [ebx-0x2efc4d3b],bh
  417f89:	jle    0x417f2d
  417f8b:	std    
  417f8c:	adc    DWORD PTR [edx+0x179d4426],0x7
  417f93:	pop    eax
  417f94:	in     eax,0xe0
  417f96:	icebp  
  417f97:	fdivr  st(7),st
  417f99:	mov    eax,0xae700fe1
  417f9e:	mov    ecx,0x6603d096
  417fa3:	cld    
  417fa4:	(bad)  
  417fa5:	xor    al,0x1a
  417fa7:	addr16 push esp
  417fa9:	bound  esp,QWORD PTR [esp+edi*1]
  417fac:	scas   al,BYTE PTR es:[edi]
  417fad:	mov    edi,0x64fec59a
  417fb2:	aam    0xbc
  417fb4:	not    ebx
  417fb6:	(bad)  
  417fb8:	es push esp
  417fba:	sub    al,0xd5
  417fbc:	std    
  417fbd:	jle    0x41801c
  417fbf:	sub    esi,esi
  417fc1:	jb     0x41800c
  417fc3:	ror    DWORD PTR [ebx],cl
  417fc5:	dec    ecx
  417fc6:	jnp    0x417fcd
  417fc8:	mov    cl,0x8e
  417fca:	jg     0x417fcb
  417fcc:	mov    edx,0x1b9e9afb
  417fd1:	adc    BYTE PTR [edi+0x1e13d9d5],al
  417fd7:	(bad)  
  417fd8:	sahf   
  417fd9:	adc    ebp,DWORD PTR [ebp-0x37]
  417fdc:	jg     0x417f8c
  417fde:	pop    ecx
  417fdf:	retf   0xa07
  417fe2:	sar    DWORD PTR [ebx],0xe4
  417fe5:	or     ebx,esi
  417fe7:	mov    cl,0xd0
  417fe9:	inc    ebp
  417fea:	psubd  mm4,QWORD PTR [ebp+eax*4+0x38090f3e]
  417ff2:	dec    ebp
  417ff3:	xchg   ah,bl
  417ff5:	loop   0x418018
  417ff7:	int3   
  417ff8:	push   eax
  417ff9:	imul   DWORD PTR [ebx-0x6e]
  417ffc:	xor    al,0xe6
  417ffe:	hlt    
  417fff:	cmp    eax,0xae256c51
  418004:	inc    ebx
  418005:	loop   0x418008
  418007:	arpl   WORD PTR [esi],di
  418009:	and    DWORD PTR [edi-0x5611edcc],0x4500236b
  418013:	cli    
  418014:	mov    esp,0x904918ab
  418019:	jne    0x41800a
  41801b:	inc    ecx
  41801c:	inc    eax
  41801d:	aam    0x19
  41801f:	icebp  
  418020:	js     0x418087
  418022:	push   ecx
  418023:	sub    eax,0x5ee4bdfe
  418028:	je     0x417fb8
  41802a:	out    dx,al
  41802b:	ss popf 
  41802d:	imul   bl
  41802f:	push   ebx
  418030:	cwde   
  418031:	cmp    DWORD PTR [ebp-0x54],ecx
  418034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418035:	int3   
  418036:	mov    ah,0x24
  418038:	jmp    0x6440:0xff1deeb4
  41803f:	ja     0x4180bd
  418041:	outs   dx,BYTE PTR ds:[esi]
  418042:	jns    0x418082
  418044:	xor    DWORD PTR [ebp-0x8ecf54d],esi
  41804a:	jb     0x41808c
  41804c:	cmc    
  41804d:	sbb    eax,esp
  41804f:	cmp    edi,esp
  418051:	psubq  mm5,QWORD PTR [ecx-0x24d70e3e]
  418058:	pop    esi
  418059:	dec    edi
  41805a:	in     eax,dx
  41805b:	jge    0x41809e
  41805d:	test   eax,0x451817de
  418062:	nop
  418063:	and    ebp,DWORD PTR [edx]
  418065:	mov    al,BYTE PTR [edi-0x6c]
  418068:	shr    BYTE PTR [edx+0x7e],1
  41806b:	cmp    dl,dh
  41806d:	ins    BYTE PTR es:[edi],dx
  41806e:	mov    bh,0xbe
  418070:	dec    ecx
  418071:	dec    esp
  418072:	pop    ebx
  418073:	xchg   ebp,eax
  418074:	xchg   esp,eax
  418075:	sub    eax,0x837c35b3
  41807a:	stc    
  41807b:	jmp    0x418061
  41807d:	push   cs
  41807e:	rol    DWORD PTR [ebx+0x22f90bca],1
  418084:	fsubr  st,st(2)
  418086:	nop
  418087:	push   eax
  418088:	mov    ecx,DWORD PTR [edi]
  41808a:	enter  0x403e,0xbd
  41808e:	sbb    BYTE PTR [edx],dh
  418090:	enter  0x718c,0xe5
  418094:	lahf   
  418095:	sbb    esi,eax
  418097:	out    dx,eax
  418098:	clc    
  418099:	push   edx
  41809a:	push   ebp
  41809b:	mov    ebp,0xcd9b55f3
  4180a0:	outs   dx,BYTE PTR ds:[esi]
  4180a1:	add    dl,dl
  4180a3:	jg     0x418049
  4180a5:	adc    BYTE PTR [edx+ebx*2],bh
  4180a8:	(bad)  
  4180a9:	jno    0x4180f1
  4180ab:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4180ad:	mov    al,ds:0x98d3052
  4180b2:	in     al,dx
  4180b3:	and    DWORD PTR [ebp+0x1b],esi
  4180b6:	push   ebx
  4180b7:	fcom   DWORD PTR [ebx+0x67]
  4180ba:	push   ecx
  4180bb:	or     eax,esp
  4180bd:	sub    DWORD PTR [ebp+0x64],ebp
  4180c0:	test   eax,0x8115ab19
  4180c5:	push   0xcca8e0f6
  4180ca:	add    BYTE PTR [edi],ah
  4180cc:	cwde   
  4180cd:	out    dx,al
  4180ce:	mov    esi,ss
  4180d0:	sub    ebx,DWORD PTR [eax-0x68cf7f9f]
  4180d6:	pop    eax
  4180d7:	ins    BYTE PTR es:[edi],dx
  4180d8:	stos   BYTE PTR es:[edi],al
  4180d9:	ss adc eax,0x240f0bed
  4180df:	scas   eax,DWORD PTR es:[edi]
  4180e0:	into   
  4180e1:	imul   ecx,DWORD PTR [ebp-0x77a7896d],0x4a
  4180e8:	jge    0x418160
  4180ea:	inc    edx
  4180eb:	pop    ebp
  4180ec:	push   ebx
  4180ed:	pop    edi
  4180ee:	push   0xffffffc8
  4180f0:	xor    eax,0xf7c380e7
  4180f5:	mov    bh,0x9a
  4180f7:	sbb    BYTE PTR [esi+0xa1470e7],0x9d
  4180fe:	mov    ecx,0xe3f2f095
  418103:	outs   dx,BYTE PTR ds:[esi]
  418104:	ret    0x89f2
  418107:	inc    eax
  418108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418109:	mov    ch,0x1
  41810b:	outs   dx,DWORD PTR ds:[esi]
  41810c:	sbb    DWORD PTR [ecx],0x9
  41810f:	stos   DWORD PTR es:[edi],eax
  418110:	gs loop 0x4180c7
  418113:	pop    ebp
  418114:	(bad)  [eax-0x44983ea3]
  41811a:	cld    
  41811b:	and    eax,0x1b2ef800
  418120:	dec    ebp
  418121:	sbb    BYTE PTR [ebx],dh
  418123:	inc    eax
  418124:	fidivr WORD PTR [ecx-0x2b7a6bb5]
  41812a:	stc    
  41812b:	jbe    0x41819c
  41812d:	icebp  
  41812e:	jl     0x418167
  418130:	pusha  
  418131:	lock ins DWORD PTR es:[edi],dx
  418133:	jbe    0x418120
  418135:	scas   eax,DWORD PTR es:[edi]
  418136:	cmp    al,BYTE PTR [ebp-0x26]
  418139:	adc    DWORD PTR [ecx-0x45576514],0x1a
  418140:	enter  0x322b,0x7a
  418144:	mov    esi,DWORD PTR [ecx-0x4b]
  418147:	xchg   edx,eax
  418148:	enter  0xf200,0xb6
  41814c:	imul   DWORD PTR ds:0xd31272b8
  418152:	pop    ebp
  418153:	aas    
  418154:	shr    DWORD PTR [ecx],cl
  418156:	and    DWORD PTR [ecx+0x1ea304c6],eax
  41815c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41815d:	daa    
  41815e:	inc    edx
  41815f:	inc    ebx
  418160:	dec    esp
  418161:	popa   
  418162:	mov    esp,0xb9edc99d
  418167:	into   
  418168:	mov    ah,0x41
  41816a:	mov    DWORD PTR [esi],ecx
  41816c:	inc    esp
  41816d:	or     BYTE PTR [ebp+0x204fc6b9],cl
  418173:	jmp    0x41811c
  418175:	push   ds
  418176:	outs   dx,DWORD PTR ds:[esi]
  418177:	inc    ecx
  418178:	cwde   
  418179:	add    DWORD PTR [esi],edi
  41817b:	add    BYTE PTR [esi],ah
  41817d:	add    al,0xbf
  41817f:	sub    DWORD PTR [edx],esp
  418181:	mov    cl,0x1b
  418183:	push   eax
  418184:	fsub   DWORD PTR [esi+0x4a]
  418187:	pop    esp
  418188:	and    cl,BYTE PTR [ecx]
  41818a:	mov    ch,0x1c
  41818c:	shr    BYTE PTR [ebx],0x54
  41818f:	mov    ch,0xfe
  418191:	xchg   edi,eax
  418192:	(bad)  
  418193:	cmc    
  418194:	ds in  al,0x1c
  418197:	dec    edx
  418198:	sub    eax,0x73da5b1b
  41819d:	stos   BYTE PTR es:[edi],al
  41819e:	mov    ah,dh
  4181a0:	xor    esi,esi
  4181a2:	xchg   esi,eax
  4181a3:	in     al,dx
  4181a4:	leave  
  4181a5:	test   BYTE PTR [esi+0xa],bh
  4181a8:	lods   al,BYTE PTR ds:[esi]
  4181a9:	cmp    bh,BYTE PTR [edi-0x1b3f8b49]
  4181af:	adc    eax,0x775f569
  4181b4:	outs   dx,BYTE PTR ds:[esi]
  4181b5:	enter  0x68bd,0xd5
  4181b9:	pop    ebx
  4181ba:	jp     0x418145
  4181bc:	rcl    eax,0xa4
  4181bf:	addr16 mov bl,0x63
  4181c2:	dec    ebp
  4181c3:	es lock jecxz 0x4181c7
  4181c7:	prefetchwt1 BYTE PTR [ecx+0x5c]
  4181cb:	sub    bl,cl
  4181cd:	out    0x55,ax
  4181d0:	or     BYTE PTR [esi+0x32],al
  4181d3:	adc    DWORD PTR [ecx-0x46],esi
  4181d6:	or     esp,edi
  4181d8:	(bad)  
  4181d9:	sahf   
  4181da:	lods   eax,DWORD PTR ds:[esi]
  4181db:	out    dx,eax
  4181dc:	inc    eax
  4181dd:	(bad)  
  4181de:	xor    ebx,ebx
  4181e0:	aaa    
  4181e1:	mov    es,WORD PTR [edx-0xc]
  4181e4:	in     eax,dx
  4181e5:	mov    esi,0x21608f7b
  4181ea:	clc    
  4181eb:	sahf   
  4181ec:	(bad)  
  4181ed:	mov    dh,0xe9
  4181ef:	cmc    
  4181f0:	sub    BYTE PTR [eax+0x69896e44],ah
  4181f6:	xchg   BYTE PTR [eax],dh
  4181f8:	ja     0x4181d1
  4181fa:	out    dx,eax
  4181fb:	sbb    BYTE PTR [eax+edx*4],bl
  4181fe:	xchg   esi,eax
  4181ff:	aaa    
  418200:	or     DWORD PTR [eax-0x1626b196],ebp
  418206:	jnp    0x4181cc
  418208:	add    BYTE PTR [ecx-0x40],dl
  41820b:	sbb    al,0x49
  41820d:	sub    eax,0x3699b8c
  418212:	shl    DWORD PTR [ecx+0x4e1a3eb0],cl
  418218:	xchg   esp,eax
  418219:	sub    edx,edx
  41821b:	xchg   ecx,eax
  41821c:	or     eax,0x47633379
  418221:	fisttp QWORD PTR [eax-0x25]
  418224:	inc    ecx
  418225:	sub    al,0xd9
  418227:	repz ficom DWORD PTR [edx]
  41822a:	sbb    DWORD PTR [ecx-0x5a589883],ebx
  418230:	dec    esp
  418231:	sub    DWORD PTR [edx+0x9f22743],edi
  418237:	std    
  418238:	cmp    al,0x72
  41823a:	pop    edx
  41823b:	lods   eax,DWORD PTR ds:[esi]
  41823c:	or     BYTE PTR [eax+0x6a2a6789],bl
  418242:	imul   ecx,DWORD PTR [ecx],0xa8ca35ba
  418248:	push   esi
  418249:	das    
  41824a:	scas   al,BYTE PTR es:[edi]
  41824b:	jne    0x4181cd
  41824d:	repz xlat BYTE PTR fs:[ebx]
  418250:	aas    
  418251:	pop    ds
  418252:	fidivr WORD PTR [edi-0x6fd59428]
  418258:	pop    edi
  418259:	pop    esi
  41825a:	es mov ecx,0x7ae8ac42
  418260:	out    dx,eax
  418261:	sub    eax,0x7c4d09cb
  418266:	lods   al,BYTE PTR ds:[esi]
  418267:	cs hlt 
  418269:	rcr    DWORD PTR [ebp-0x65],1
  41826c:	leave  
  41826d:	sub    edx,DWORD PTR [ebp-0x6d]
  418270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418271:	xor    BYTE PTR [ebp-0x6770dadd],ah
  418277:	adc    DWORD PTR [edx+eax*4],edi
  41827a:	pop    esp
  41827b:	sbb    al,bl
  41827d:	out    dx,eax
  41827e:	test   al,0x9c
  418280:	mov    bl,BYTE PTR [eax+edx*1-0x59]
  418284:	rcr    BYTE PTR [eax-0x40eabcb5],cl
  41828a:	sbb    dh,BYTE PTR [esi-0x4771d51b]
  418290:	rcl    BYTE PTR [ecx+0x7335d226],cl
  418296:	xchg   ecx,eax
  418297:	dec    eax
  418298:	mov    ?,WORD PTR [ebx-0x44ac139a]
  41829e:	(bad)  
  41829f:	mov    BYTE PTR [edx],ch
  4182a1:	mov    dl,0x37
  4182a3:	(bad)  
  4182a4:	popf   
  4182a5:	xchg   esi,eax
  4182a6:	mov    ah,0xd9
  4182a8:	adc    BYTE PTR [edx-0x18],0xaa
  4182ac:	jl     0x4182df
  4182ae:	imul   eax,DWORD PTR [ecx+0x51c310cf],0xffffffbf
  4182b5:	leave  
  4182b6:	or     DWORD PTR [ebp+0x5e],edi
  4182b9:	or     al,0x7b
  4182bb:	inc    esi
  4182bc:	xor    ch,BYTE PTR [edx]
  4182be:	neg    cl
  4182c0:	leave  
  4182c1:	retf   0xd509
  4182c4:	push   ecx
  4182c5:	not    BYTE PTR [eax]
  4182c7:	dec    ebp
  4182c8:	icebp  
  4182c9:	bound  eax,QWORD PTR ds:0x3353d84e
  4182cf:	aaa    
  4182d0:	loop   0x418257
  4182d2:	fidiv  DWORD PTR [edx]
  4182d4:	popf   
  4182d5:	lds    edx,FWORD PTR [ebx+0x26]
  4182d8:	mov    bl,0x4b
  4182da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182db:	sub    ebx,ebx
  4182dd:	(bad)  
  4182de:	mov    WORD PTR [ebx-0x46],fs
  4182e1:	dec    edx
  4182e2:	mov    ecx,0x51552d78
  4182e7:	inc    ebp
  4182e8:	mov    DWORD PTR cs:[eax-0x63],edi
  4182ec:	xor    al,0xb7
  4182ee:	fistp  QWORD PTR [edx]
  4182f0:	jmp    0x4182e9
  4182f2:	imul   ebx,DWORD PTR [edx-0x4c904ea7],0x77
  4182f9:	sub    BYTE PTR [ebx],0x18
  4182fc:	push   ebx
  4182fd:	fisttp DWORD PTR [ebx+esi*4]
  418300:	stos   BYTE PTR es:[edi],al
  418301:	pusha  
  418302:	cld    
  418303:	in     eax,dx
  418304:	cmp    BYTE PTR [ebp+0x7d36af08],dh
  41830a:	mov    cl,0x47
  41830c:	inc    esi
  41830d:	push   es
  41830e:	dec    ebp
  41830f:	cmc    
  418310:	dec    esi
  418311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418312:	xchg   ebx,eax
  418313:	cli    
  418314:	jo     0x4182e8
  418316:	dec    esi
  418317:	inc    ebx
  418318:	(bad)  
  418319:	(bad)  
  41831a:	mov    bh,0xf4
  41831c:	aas    
  41831d:	stos   BYTE PTR es:[edi],al
  41831e:	inc    esi
  41831f:	pusha  
  418320:	pop    ecx
  418321:	sar    BYTE PTR [ebx+0x9a3bffd],1
  418327:	mov    cl,0x17
  418329:	jo     0x41834f
  41832b:	jae    0x418362
  41832d:	push   ecx
  41832e:	pusha  
  41832f:	xor    ch,BYTE PTR [eax+0x75c6c3b5]
  418335:	xchg   edx,eax
  418336:	call   0xdb8f:0xe9858880
  41833d:	pop    ss
  41833e:	into   
  41833f:	aad    0x98
  418341:	retf   
  418342:	retf   0xba62
  418345:	pop    esp
  418346:	jne    0x418326
  418348:	int3   
  418349:	and    DWORD PTR [eax],ecx
  41834b:	mov    cl,0xba
  41834d:	fwait
  41834e:	(bad)  
  41834f:	outs   dx,DWORD PTR ds:[esi]
  418350:	pop    esi
  418351:	hlt    
  418352:	push   0xfffffff8
  418354:	ds test al,0xd0
  418357:	loopne 0x4183cc
  418359:	pusha  
  41835a:	call   DWORD PTR [eax]
  41835c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835d:	xchg   edx,eax
  41835e:	jg     0x4183d8
  418360:	inc    esi
  418361:	ds pop ebx
  418363:	popf   
  418364:	pop    es
  418365:	fimul  DWORD PTR [ebx]
  418367:	sahf   
  418368:	cmp    al,0x38
  41836a:	cmp    DWORD PTR [ebp-0x1],ebx
  41836d:	xor    ah,BYTE PTR [edx]
  41836f:	(bad)  
  418370:	mov    ah,BYTE PTR [edi-0x80]
  418373:	mul    BYTE PTR ds:0x7a927bf0
  418379:	jae    0x41838d
  41837b:	popa   
  41837c:	mov    DWORD PTR [eax+0x4d],edi
  41837f:	cmp    dh,BYTE PTR [edi-0x67513d1f]
  418385:	nop
  418386:	add    eax,0x318c429f
  41838b:	mov    ds:0xa37b75fa,eax
  418390:	or     bh,al
  418392:	add    ecx,DWORD PTR [ebx-0x5]
  418395:	repnz jecxz 0x418414
  418398:	loope  0x4183f6
  41839a:	outs   dx,DWORD PTR ds:[esi]
  41839b:	lods   al,BYTE PTR ds:[esi]
  41839c:	std    
  41839d:	cmp    ch,BYTE PTR [ecx-0x13b04e28]
  4183a3:	in     al,dx
  4183a4:	mov    DWORD PTR [edi+ebp*4-0x74],ecx
  4183a8:	push   es
  4183a9:	xor    al,0x20
  4183ab:	or     ecx,DWORD PTR [ebx-0x1351dbfe]
  4183b1:	pop    DWORD PTR [ecx+edx*8-0x11]
  4183b5:	mov    ebp,DWORD PTR [edx+0x4f7d2a90]
  4183bb:	fcom   DWORD PTR [ebp+ebx*8+0x60]
  4183bf:	rol    DWORD PTR [edi+0x45],1
  4183c2:	mov    ebp,0x57a04a2f
  4183c7:	dec    ebp
  4183c8:	push   edx
  4183c9:	out    0x81,eax
  4183cb:	fstp   DWORD PTR [ebx-0x6f]
  4183ce:	cmp    BYTE PTR [esi],ch
  4183d0:	aaa    
  4183d1:	sbb    edx,DWORD PTR [eax]
  4183d3:	mov    esp,0x795deb61
  4183d8:	sar    BYTE PTR [eax+ebp*4-0xa],0xf8
  4183dd:	mov    al,0x9d
  4183df:	push   ss
  4183e0:	fldenv [edi-0xd290b0d]
  4183e6:	mov    ds:0xb090846f,eax
  4183eb:	cwde   
  4183ec:	sub    BYTE PTR cs:[esi],al
  4183ef:	xlat   BYTE PTR ds:[ebx]
  4183f0:	nop
  4183f1:	test   al,0xda
  4183f3:	fwait
  4183f4:	das    
  4183f5:	retf   0xc0d3
  4183f8:	pop    edx
  4183f9:	cmp    eax,edi
  4183fb:	or     al,0xa
  4183fd:	push   edi
  4183fe:	adc    ah,BYTE PTR [edx]
  418400:	bound  eax,QWORD PTR [edx+0x7a0b71bf]
  418406:	lahf   
  418407:	(bad)  
  418408:	pop    esi
  418409:	je     0x4183d2
  41840b:	ja     0x418464
  41840d:	cmp    eax,0x43c61e4
  418412:	sub    al,0x67
  418414:	and    BYTE PTR [ebx+0x29b66e16],al
  41841a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41841b:	cdq    
  41841c:	sub    al,0xc
  41841f:	mov    bh,0xa0
  418421:	lea    esi,[edx]
  418423:	(bad)  
  418424:	bound  esp,QWORD PTR [edx+0x24]
  418427:	mov    ds,WORD PTR cs:[ecx]
  41842a:	xchg   edx,eax
  41842b:	mul    BYTE PTR [eax]
  41842d:	pop    ds
  41842e:	not    dl
  418430:	pop    esi
  418431:	out    0x9c,al
  418433:	stc    
  418434:	fldl2e 
  418436:	bnd jb 0x418416
  418439:	push   eax
  41843a:	adc    DWORD PTR [esi+eax*1+0x5a910233],esi
  418441:	lods   eax,DWORD PTR ds:[esi]
  418442:	fst    st(7)
  418444:	cmp    eax,0x1602f484
  418449:	and    ecx,DWORD PTR [edx]
  41844b:	(bad)  
  41844c:	iret   
  41844d:	dec    ecx
  41844e:	push   ds
  41844f:	adc    bl,cl
  418451:	out    dx,al
  418452:	push   ss
  418453:	ja     0x418433
  418455:	mov    eax,0x9126176f
  41845a:	add    esp,DWORD PTR [ebp+0x1c]
  41845d:	mov    edx,0xbb19de96
  418462:	ss pop edx
  418464:	stos   BYTE PTR es:[edi],al
  418465:	inc    esp
  418466:	in     al,0x0
  418468:	push   ebx
  418469:	mov    fs,WORD PTR ds:0x6841d63d
  41846f:	mov    BYTE PTR [ebp+edx*8-0xf],0x9a
  418474:	xchg   ebp,eax
  418475:	jb     0x418400
  418477:	and    DWORD PTR [esi],0xcd1a3831
  41847d:	je     0x418447
  41847f:	shr    DWORD PTR [ecx-0x6d],cl
  418482:	fld    QWORD PTR [edi]
  418484:	sub    ah,ah
  418486:	ds nop
  418488:	aam    0x42
  41848a:	xchg   edx,eax
  41848b:	ja     0x418446
  41848d:	push   ds
  41848e:	test   DWORD PTR [ebp-0x2e],ebp
  418491:	das    
  418492:	fst    st(6)
  418494:	div    DWORD PTR [eax]
  418496:	rcr    BYTE PTR [ecx],1
  418498:	cdq    
  418499:	and    DWORD PTR [eax-0x66],edi
  41849c:	sbb    BYTE PTR [eax-0x6cbf27c6],dl
  4184a2:	mov    ch,0x37
  4184a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a5:	jmp    0x32f2:0x7e6ce7c9
  4184ac:	ins    DWORD PTR es:[edi],dx
  4184ad:	cs mov edi,edi
  4184b0:	dec    edx
  4184b1:	fcomp  QWORD PTR [edi-0x35ce71e6]
  4184b7:	cmp    BYTE PTR [edi-0x68efa389],0xd5
  4184be:	push   esp
  4184bf:	ja     0x418444
  4184c1:	imul   edx,DWORD PTR gs:[eax-0x74],0x7c796572
  4184c9:	sbb    ebx,DWORD PTR [ecx-0x7cf0f9ea]
  4184cf:	add    cl,dh
  4184d1:	(bad)  [edx]
  4184d3:	pop    eax
  4184d4:	push   eax
  4184d5:	outs   dx,DWORD PTR ss:[esi]
  4184d7:	add    eax,0xb6528b72
  4184dc:	shld   edi,ebp,cl
  4184df:	rcr    cl,1
  4184e1:	pop    esp
  4184e2:	xchg   ecx,eax
  4184e3:	dec    ebx
  4184e4:	lods   al,BYTE PTR ds:[esi]
  4184e5:	stos   DWORD PTR es:[edi],eax
  4184e6:	(bad)  
  4184e7:	xor    al,0xf6
  4184e9:	mov    bh,0xbf
  4184eb:	xchg   DWORD PTR [eax],edi
  4184ed:	test   al,0x49
  4184ef:	jns    0x41850a
  4184f1:	cmp    dh,BYTE PTR [ebx+0x2bdc9f14]
  4184f7:	inc    ebx
  4184f8:	test   BYTE PTR [edx],al
  4184fa:	jmp    0x4a4b359a
  4184ff:	pop    eax
  418500:	(bad)  
  418501:	xor    eax,ecx
  418503:	jg     0x41857f
  418505:	sub    bl,BYTE PTR [ecx-0x68c3b9e]
  41850b:	mov    BYTE PTR [edx],bl
  41850d:	fwait
  41850e:	mov    ebp,0x5e01d0e2
  418513:	push   eax
  418514:	cmp    dh,BYTE PTR [edx]
  418516:	std    
  418517:	jnp    0x4184c8
  418519:	mov    bl,0x91
  41851b:	xor    BYTE PTR [eax-0x63],0xea
  41851f:	loope  0x418535
  418521:	cmp    DWORD PTR [edx-0x56cafd3f],ebx
  418527:	icebp  
  418528:	mov    edx,DWORD PTR [esi+ebp*4]
  41852b:	je     0x418577
  41852d:	cmc    
  41852e:	jecxz  0x4184c3
  418530:	jmp    0x41853c
  418532:	fbld   TBYTE PTR [edx-0x3d1d7645]
  418538:	enter  0xeab2,0x3d
  41853c:	outs   dx,BYTE PTR ds:[esi]
  41853d:	mov    bl,0xe5
  41853f:	retf   
  418540:	xor    al,0xcc
  418542:	(bad)  
  418543:	mov    DWORD PTR [ebp-0x1],esi
  418546:	xor    al,0x65
  418548:	(bad)  [edx-0x2d17cbbd]
  41854e:	or     al,0x50
  418550:	push   ebx
  418551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418552:	enter  0xb9dd,0x15
  418556:	sbb    edx,edx
  418558:	and    DWORD PTR [edi+0x79],ebp
  41855b:	ja     0x418551
  41855d:	lods   eax,DWORD PTR ds:[esi]
  41855e:	jmp    0xf820b802
  418563:	inc    esi
  418564:	and    ah,BYTE PTR [ebx+0x6a98d5ee]
  41856a:	std    
  41856b:	xor    al,0x22
  41856d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856e:	scas   eax,DWORD PTR es:[edi]
  41856f:	lock cmp BYTE PTR [edi+0x3d],dl
  418573:	dec    ebx
  418574:	pop    ebx
  418575:	aam    0x13
  418577:	fs mov ah,cl
  41857a:	shl    BYTE PTR [eax-0x73b927bb],0x8c
  418581:	xor    eax,0x7cc3bdcd
  418586:	mov    dh,0x55
  418588:	pop    esi
  418589:	shr    DWORD PTR [edx],1
  41858b:	imul   ecx,DWORD PTR [ebx],0xffffffd8
  41858e:	pop    ebp
  41858f:	pop    eax
  418590:	jmp    DWORD PTR [ecx-0x27d7b4c2]
  418596:	mul    BYTE PTR [esi]
  418598:	ror    ch,0xad
  41859b:	fidivr DWORD PTR [eax]
  41859d:	shl    DWORD PTR [esi],cl
  41859f:	add    BYTE PTR [ebx],dl
  4185a1:	(bad)  
  4185a2:	jge    0x418573
  4185a4:	retf   
  4185a5:	sub    ebp,DWORD PTR ds:0xafd3d3a
  4185ab:	aaa    
  4185ac:	mov    ebp,0xf62aaf66
  4185b1:	sub    BYTE PTR ds:0xdb40bf00,bl
  4185b7:	das    
  4185b8:	mov    ecx,0x7e03069a
  4185bd:	cmp    cl,BYTE PTR [edx-0x18]
  4185c0:	out    dx,eax
  4185c1:	xchg   edi,eax
  4185c2:	in     al,0x38
  4185c4:	das    
  4185c5:	stos   BYTE PTR es:[edi],al
  4185c6:	lods   eax,DWORD PTR ds:[esi]
  4185c7:	cmp    edi,esi
  4185c9:	mov    bh,0x1d
  4185cb:	fsub   DWORD PTR [ebx]
  4185cd:	pop    esi
  4185ce:	push   eax
  4185cf:	adc    BYTE PTR [ebp-0x1c],0xf8
  4185d3:	adc    eax,0xccd6474f
  4185d8:	cmp    DWORD PTR [esp+ecx*1],ebx
  4185db:	test   BYTE PTR [esi],dl
  4185dd:	jbe    0x41862b
  4185df:	(bad)  [ecx-0x27]
  4185e2:	pop    ss
  4185e3:	sub    al,0x25
  4185e5:	mov    ebx,0x3ba82371
  4185ea:	daa    
  4185eb:	or     al,0x18
  4185ed:	adc    DWORD PTR [ebx],ecx
  4185ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185f0:	mov    eax,0x8756ceef
  4185f5:	mov    esp,0xc4e55b07
  4185fa:	ds mov dh,0x62
  4185fd:	aad    0x1e
  4185ff:	ins    DWORD PTR es:[edi],dx
  418600:	ror    esi,1
  418602:	sar    BYTE PTR [edi-0x26],0x77
  418606:	outs   dx,DWORD PTR ds:[esi]
  418607:	add    esp,DWORD PTR [ebx]
  418609:	pop    ebx
  41860a:	(bad)  
  41860b:	leave  
  41860c:	shl    DWORD PTR ds:0x2955ded4,1
  418612:	fstp   DWORD PTR [esi]
  418614:	sbb    ch,bh
  418616:	dec    ebp
  418617:	loop   0x4185e5
  418619:	adc    eax,0xa201d030
  41861e:	(bad)  
  41861f:	fsubr  QWORD PTR [ecx+eiz*8]
  418622:	adc    dh,dl
  418624:	imul   edx,DWORD PTR [ebp-0x74],0x1634e4f3
  41862b:	jmp    0x418627
  41862d:	loop   0x418664
  41862f:	jo     0x418677
  418631:	fs das 
  418633:	xor    edx,ebp
  418635:	and    esi,ebp
  418637:	mov    ah,0x39
  418639:	and    eax,0x43753634
  41863e:	sub    BYTE PTR [esi+0x5fed0475],bh
  418644:	pop    ds
  418645:	sbb    BYTE PTR ds:0x19afcecc,0x5f
  41864c:	sbb    BYTE PTR [edi-0x49a25ebe],al
  418652:	or     DWORD PTR [edi+0x4a7cb557],ecx
  418658:	cmp    DWORD PTR [ebp+0x51],esp
  41865b:	cdq    
  41865c:	dec    esp
  41865d:	inc    ebp
  41865e:	jg     0x418673
  418660:	imul   esp,DWORD PTR ds:0x9e87ae88,0x7a
  418667:	mov    al,0x78
  418669:	inc    esp
  41866a:	dec    edi
  41866b:	gs mov dl,0x66
  41866e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41866f:	(bad)  [edx+0x59148508]
  418675:	jl     0x418635
  418677:	add    ch,BYTE PTR [esi+0x6e]
  41867a:	not    BYTE PTR [edi+0x23]
  41867d:	lods   eax,DWORD PTR ds:[esi]
  41867e:	sahf   
  41867f:	ret    
  418680:	jo     0x4186f8
  418682:	cmp    DWORD PTR [ecx-0x12],0xffffffbb
  418686:	fst    QWORD PTR [eax+0x722628fd]
  41868c:	dec    edx
  41868d:	mov    edx,DWORD PTR [edi-0x6bc0c428]
  418693:	loopne 0x418617
  418695:	(bad)  
  418696:	mov    eax,DWORD PTR [ebp-0x74843a32]
  41869c:	in     eax,dx
  41869d:	adc    DWORD PTR [ecx-0x2218560c],edi
  4186a3:	push   es
  4186a4:	loope  0x41865a
  4186a6:	retf   
  4186a7:	xor    ax,0xc774
  4186ab:	sub    ebp,esp
  4186ad:	jmp    0x21f6ae40
  4186b2:	rcr    DWORD PTR [ecx+0x5d4a20eb],cl
  4186b8:	push   ebp
  4186b9:	call   0x29192842
  4186be:	call   0x9c480d42
  4186c3:	das    
  4186c4:	and    BYTE PTR [edi],al
  4186c6:	(bad)  
  4186c7:	std    
  4186c8:	push   0x470840c3
  4186cd:	imul   esi,DWORD PTR [esi+0x4e],0x19
  4186d1:	mov    edx,ss
  4186d3:	rcr    dh,1
  4186d5:	(bad)  
  4186d6:	out    0xf6,al
  4186d8:	xor    DWORD PTR [edi+0x1f],esi
  4186db:	cs sub eax,0xab51fafb
  4186e1:	push   edi
  4186e2:	mov    edx,0xc2c2b5f5
  4186e7:	inc    edx
  4186e8:	int    0xcf
  4186ea:	sub    DWORD PTR [ecx],edx
  4186ec:	sbb    BYTE PTR [ebx],dh
  4186ee:	imul   eax,esp,0xfffffff4
  4186f1:	popf   
  4186f2:	cmp    eax,0x290d80d5
  4186f7:	pop    ebx
  4186f8:	rcr    BYTE PTR [edx+eiz*4-0x4a],0x8b
  4186fd:	jnp    0x41871a
  4186ff:	jo     0x4186a1
  418701:	into   
  418702:	sub    ah,dl
  418704:	shl    BYTE PTR [ebp+edx*1-0x571b17c7],cl
  41870b:	sbb    ch,cl
  41870d:	mov    DWORD PTR [eax-0x6784689a],ebp
  418713:	pop    ecx
  418714:	fcomp  QWORD PTR [edx+0x7e4b0078]
  41871a:	dec    edi
  41871b:	dec    al
  41871d:	sub    dh,0xcd
  418720:	and    esi,DWORD PTR [ecx-0x3e]
  418723:	lds    eax,FWORD PTR [ecx+eax*2-0x66]
  418727:	or     ah,BYTE PTR [eax]
  418729:	or     dl,ch
  41872b:	lock sahf 
  41872d:	xchg   ecx,eax
  41872e:	adc    eax,esp
  418730:	mov    edx,0xf731923b
  418735:	sbb    cl,ah
  418737:	inc    esp
  418738:	dec    esi
  418739:	xor    DWORD PTR [ecx+0x36],esi
  41873c:	repz test BYTE PTR [ecx-0x5d],cl
  418740:	test   al,0x6b
  418742:	bound  ebx,QWORD PTR [edi-0x44]
  418745:	stc    
  418746:	inc    ecx
  418747:	xor    al,0x44
  418749:	lock in al,0x7e
  41874c:	push   ecx
  41874d:	test   al,0x39
  41874f:	jg     0x418745
  418751:	mov    esp,0x2e8dd379
  418756:	cli    
  418757:	dec    esp
  418758:	cmp    ecx,edi
  41875a:	loop   0x4187bf
  41875c:	jp     0x4187c5
  41875e:	mov    edx,0x869c1eec
  418763:	inc    ebp
  418764:	aad    0x21
  418766:	push   edx
  418767:	push   ds
  418768:	mov    ebx,0x6ee521b
  41876d:	add    DWORD PTR [edx-0x562e8a98],esp
  418773:	push   edi
  418774:	shr    DWORD PTR [esi-0x4a],1
  418777:	rcl    DWORD PTR gs:[ebx+0x85630e0],1
  41877e:	mov    ds:0x5932baf6,al
  418783:	sub    ebp,ebx
  418785:	fsubp  st(0),st
  418787:	push   ebx
  418788:	gs mov dh,0xf1
  41878c:	ja     0x4187b9
  41878e:	pop    es
  41878f:	mov    ds:0x952b1bca,eax
  418794:	bound  esi,QWORD PTR [edi+0x22]
  418797:	pushf  
  418798:	gs dec ecx
  41879a:	outs   dx,DWORD PTR ds:[esi]
  41879b:	sti    
  41879c:	inc    esp
  41879d:	mov    ds:0xefbf4d15,al
  4187a2:	or     bl,cl
  4187a4:	adc    edi,DWORD PTR [ecx]
  4187a6:	sbb    bh,BYTE PTR [edx+0x66789c00]
  4187ac:	pop    es
  4187ad:	out    0x6d,al
  4187af:	cmp    eax,0xbc75781d
  4187b4:	arpl   WORD PTR [edx+0x8],sp
  4187b7:	lds    eax,FWORD PTR [eax]
  4187b9:	pop    ds
  4187ba:	mov    cl,0x24
  4187bc:	ret    
  4187bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187be:	pushf  
  4187bf:	ins    DWORD PTR es:[edi],dx
  4187c0:	xor    al,0x96
  4187c2:	fidivr DWORD PTR [ebp-0x18]
  4187c5:	xor    al,0x4c
  4187c7:	xor    ebp,ebp
  4187c9:	push   edi
  4187ca:	test   eax,0xa2a346cf
  4187cf:	sub    cl,BYTE PTR [ebx]
  4187d1:	scas   al,BYTE PTR es:[edi]
  4187d2:	push   0x67e4c283
  4187d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d8:	gs and esp,edi
  4187db:	cmp    al,BYTE PTR [edi]
  4187dd:	inc    esi
  4187de:	push   ecx
  4187df:	mov    BYTE PTR [eax-0x3d0b101c],bl
  4187e5:	sbb    DWORD PTR [ebx+ebx*8-0x6fc4003c],0xffffff92
  4187ed:	dec    esi
  4187ee:	or     eax,DWORD PTR [esi+0x11]
  4187f1:	sbb    al,0xf
  4187f3:	mov    ebp,0x589e127f
  4187f8:	cmp    edx,DWORD PTR [edi+edx*2-0x4a]
  4187fc:	pop    ss
  4187fd:	sbb    esp,ebx
  4187ff:	lds    edi,FWORD PTR [ebp+0x7ef34d1e]
  418805:	mov    ds:0xc85dad91,al
  41880a:	sbb    al,0x41
  41880c:	popa   
  41880d:	scas   al,BYTE PTR es:[edi]
  41880e:	pop    esp
  41880f:	je     0x41887c
  418811:	cmc    
  418812:	jno    0x41881f
  418814:	pushf  
  418815:	sbb    BYTE PTR [ecx+eax*2+0x39],0xec
  41881a:	jns    0x41888f
  41881c:	or     esi,edi
  41881e:	push   edx
  41881f:	shl    BYTE PTR [eax+0x1],cl
  418822:	lods   eax,DWORD PTR ds:[esi]
  418823:	push   ds
  418824:	lods   al,BYTE PTR ds:[esi]
  418825:	std    
  418826:	repz sub ebp,edx
  418829:	adc    al,0x2d
  41882b:	loopne 0x4187ff
  41882d:	aad    0xc4
  41882f:	mov    es,edi
  418831:	fidivr DWORD PTR [edx-0x668f2b98]
  418837:	je     0x4188ac
  418839:	jg     0x41886b
  41883b:	lss    ecx,FWORD PTR [esi-0x22]
  41883f:	clc    
  418840:	cmp    DWORD PTR [edi],0x68
  418843:	xlat   BYTE PTR ds:[ebx]
  418844:	imul   esp,DWORD PTR [eax+eax*1+0x49],0xffffffa8
  418849:	bound  eax,QWORD PTR [ebp-0x44]
  41884c:	cs js  0x4188be
  41884f:	ret    0x4b1b
  418852:	and    eax,0xcb5ebf13
  418857:	push   esp
  418858:	mov    ah,0xad
  41885a:	and    eax,0x6abc2944
  41885f:	(bad)  
  418860:	lea    esi,[edx-0x3d]
  418863:	inc    edi
  418864:	loopne 0x418881
  418866:	daa    
  418867:	shl    ch,1
  418869:	cwde   
  41886a:	ja     0x4188a3
  41886c:	mov    WORD PTR [ebx],cs
  41886e:	mov    cl,0x53
  418870:	or     BYTE PTR [ebp-0x77],dl
  418873:	sbb    al,0xe3
  418875:	sub    al,0xa2
  418877:	jne    0x418855
  418879:	addr16 cwde 
  41887b:	dec    ebp
  41887c:	sbb    eax,0x17e3740f
  418881:	cmp    dl,BYTE PTR [ecx+edi*1+0x5]
  418885:	int3   
  418886:	pop    edx
  418887:	mov    bl,0xbb
  418889:	jbe    0x41882d
  41888b:	sub    eax,0xaa859abf
  418890:	inc    esi
  418891:	jae    0x41887f
  418893:	mov    dh,0xd0
  418895:	xchg   esp,eax
  418896:	lods   eax,DWORD PTR ds:[esi]
  418897:	rcr    BYTE PTR [ebp+0xbff083c],cl
  41889d:	sub    cl,BYTE PTR [edx-0x24d968a9]
  4188a3:	pop    ecx
  4188a4:	push   cs
  4188a5:	dec    ebp
  4188a6:	cmp    BYTE PTR [ecx],cl
  4188a8:	dec    ebx
  4188a9:	inc    esp
  4188aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ab:	adc    dl,BYTE PTR [eax-0x57]
  4188ae:	push   eax
  4188af:	jo     0x41887a
  4188b1:	mov    bh,0x12
  4188b3:	push   esp
  4188b4:	sahf   
  4188b5:	fsubr  QWORD PTR [esi-0x3]
  4188b8:	mov    dl,0x54
  4188ba:	jg     0x418876
  4188bc:	pop    edx
  4188bd:	cmp    eax,0x4d94ba4c
  4188c2:	das    
  4188c3:	xor    ch,al
  4188c5:	jg     0x41888a
  4188c7:	mov    esp,ds
  4188c9:	rol    BYTE PTR [eax],1
  4188cb:	and    bh,BYTE PTR [edi-0x697c3303]
  4188d1:	ins    DWORD PTR es:[edi],dx
  4188d2:	lea    edi,[edi-0x53]
  4188d5:	and    edx,DWORD PTR [eax-0x13f6b445]
  4188db:	jne    0x41894e
  4188dd:	ins    BYTE PTR es:[edi],dx
  4188de:	mov    esp,0xcfba08da
  4188e3:	mov    ecx,edx
  4188e5:	cwde   
  4188e6:	and    BYTE PTR [eax],ah
  4188e8:	mov    ebx,0x22b8b5b7
  4188ed:	jg     0x41896a
  4188ef:	out    0x25,al
  4188f1:	and    al,0xc7
  4188f3:	fcomp  DWORD PTR [ebx+0x6d]
  4188f6:	fcom   DWORD PTR [ebx]
  4188f8:	add    eax,0x5362d418
  4188fd:	xchg   ebp,eax
  4188fe:	xchg   ebp,eax
  4188ff:	mov    ebp,0x9c14ef57
  418904:	xor    DWORD PTR [ecx],ebx
  418906:	out    dx,eax
  418907:	ret    
  418908:	jns    0x4188e2
  41890a:	push   ss
  41890b:	adc    dh,cl
  41890d:	clc    
  41890e:	push   edx
  41890f:	xchg   ebp,eax
  418910:	lods   al,BYTE PTR fs:[esi]
  418912:	xchg   ecx,eax
  418913:	push   edx
  418914:	inc    esi
  418915:	ja     0x4188f7
  418917:	xchg   DWORD PTR [esi+esi*2-0x497a894e],edx
  41891e:	push   ecx
  41891f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418920:	sti    
  418921:	xlat   BYTE PTR ds:[ebx]
  418922:	push   ds
  418923:	add    dh,BYTE PTR [esi-0x4d]
  418926:	adc    DWORD PTR ds:0x2052e3d9,ecx
  41892c:	ds or  edx,esp
  41892f:	popf   
  418930:	ds retf 0x249e
  418934:	loopne 0x41894a
  418936:	cmp    ebx,DWORD PTR [eax]
  418938:	adc    BYTE PTR [edi-0x169d82c3],bl
  41893e:	dec    edi
  41893f:	test   BYTE PTR [edi+ebp*8],dh
  418942:	mov    ds:0x9e6505cf,eax
  418947:	popa   
  418948:	cwde   
  418949:	or     eax,0xe3dbf17b
  41894e:	test   cl,bh
  418950:	out    dx,al
  418951:	fs ins DWORD PTR es:[edi],dx
  418953:	cmp    edi,DWORD PTR [ebp+0x555cb858]
  418959:	push   0xfffffffc
  41895b:	push   es
  41895c:	add    BYTE PTR [edx],bh
  41895e:	pop    eax
  41895f:	imul   ebp,ebp,0xc3f4c69
  418965:	add    al,BYTE PTR [esp+ebx*2+0x16b98eb8]
  41896c:	xchg   esp,eax
  41896d:	push   es
  41896e:	iret   
  41896f:	out    0xb2,al
  418971:	out    dx,eax
  418972:	cld    
  418973:	retf   0xa534
  418976:	pop    ebp
  418977:	in     eax,dx
  418978:	or     al,0xd0
  41897a:	rcl    DWORD PTR [ebx],cl
  41897c:	leave  
  41897d:	push   0x2bdb6fd8
  418982:	mov    eax,ds:0x9143398d
  418987:	shr    DWORD PTR [ebp+0x65],0x31
  41898b:	add    DWORD PTR [eax+0x41],0xb476cb4e
  418992:	div    BYTE PTR [eax+0x3d0fc30d]
  418998:	div    BYTE PTR [ecx]
  41899a:	adc    edx,esp
  41899c:	mov    bh,BYTE PTR [ebx]
  41899e:	fmul   QWORD PTR [esi+0x26]
  4189a1:	sbb    BYTE PTR [eax+0xd],bl
  4189a4:	jnp    0x4189fd
  4189a6:	mov    ecx,gs
  4189a8:	je     0x418941
  4189aa:	push   cs
  4189ab:	stos   BYTE PTR es:[edi],al
  4189ac:	push   eax
  4189ad:	jmp    0xefcf1569
  4189b2:	std    
  4189b3:	out    0x1d,al
  4189b5:	adc    ch,0xdd
  4189b8:	(bad)  
  4189ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189bb:	jecxz  0x4189a2
  4189bd:	out    0xbe,al
  4189bf:	cmp    al,BYTE PTR [ecx]
  4189c1:	or     cl,dh
  4189c3:	jbe    0x4189ef
  4189c5:	push   edi
  4189c6:	(bad)  
  4189c7:	repnz and al,0x6
  4189ca:	rcr    al,0x18
  4189cd:	xor    eax,0x482b4d61
  4189d2:	push   ds
  4189d3:	dec    edi
  4189d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d5:	ins    DWORD PTR es:[edi],dx
  4189d6:	scas   al,BYTE PTR es:[edi]
  4189d7:	cli    
  4189d8:	sbb    bh,BYTE PTR [edi+0x3938a52c]
  4189de:	adc    DWORD PTR [edi+0x23],eax
  4189e1:	(bad)  
  4189e2:	neg    BYTE PTR [edi-0x46e9007f]
  4189e8:	mov    esi,0x16ff654
  4189ed:	ret    0x2798
  4189f0:	sbb    BYTE PTR [esi-0x6c],al
  4189f3:	loop   0x418a3f
  4189f5:	addr16 shl dh,cl
  4189f8:	jo     0x4189f3
  4189fa:	bound  ebp,QWORD PTR [esi]
  4189fc:	arpl   WORD PTR [eax+0x7f],bp
  4189ff:	pop    es
  418a00:	xchg   ecx,eax
  418a01:	pop    ebx
  418a02:	repz popa 
  418a04:	out    dx,al
  418a05:	ret    0x3b51
  418a08:	js     0x418a33
  418a0a:	call   FWORD PTR [edi+eax*1+0x58]
  418a0e:	jl     0x4189f6
  418a10:	pop    es
  418a11:	sub    ebx,DWORD PTR [ecx]
  418a13:	push   es
  418a14:	daa    
  418a15:	add    ch,al
  418a17:	xor    esi,ebx
  418a19:	sti    
  418a1a:	addr16 pop ss
  418a1c:	inc    esp
  418a1d:	rol    DWORD PTR [edi+0x573766b8],1
  418a23:	ins    BYTE PTR es:[edi],dx
  418a24:	aad    0x9
  418a26:	arpl   bp,cx
  418a28:	iret   
  418a29:	pop    esi
  418a2a:	fcmovu st,st(0)
  418a2c:	xchg   ebp,eax
  418a2d:	pop    eax
  418a2e:	out    0x31,al
  418a30:	mov    bl,0xb1
  418a32:	jnp    0x4189e1
  418a34:	push   ds
  418a35:	(bad)  
  418a36:	lds    esp,FWORD PTR [esi-0x32bc86a9]
  418a3c:	(bad)  
  418a3e:	es cmp al,0xb
  418a41:	mov    edx,0xf24294ff
  418a46:	and    cl,ah
  418a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a49:	dec    esp
  418a4a:	jo     0x418aa8
  418a4c:	pushf  
  418a4d:	pop    eax
  418a4e:	sub    ch,bl
  418a50:	neg    DWORD PTR [esi-0xa]
  418a53:	push   ss
  418a54:	popf   
  418a55:	mov    ebp,0xed74ea7a
  418a5a:	inc    esp
  418a5b:	ins    BYTE PTR es:[edi],dx
  418a5c:	hlt    
  418a5d:	outs   dx,DWORD PTR ds:[esi]
  418a5e:	mov    ah,0x1
  418a60:	add    DWORD PTR [esi-0x49ebce24],esp
  418a66:	sbb    al,0x3e
  418a68:	fwait
  418a69:	mov    dl,BYTE PTR [esi+edx*4]
  418a6c:	loopne 0x418ae1
  418a6e:	xor    DWORD PTR [edi+0x2d],edx
  418a71:	mov    eax,ds:0xdc07ac35
  418a76:	mov    dh,0x20
  418a78:	(bad)
  418a7b:	test   eax,0xf4bf397d
  418a80:	pop    eax
  418a81:	xchg   ecx,eax
  418a82:	or     BYTE PTR [ecx+0x27],0x89
  418a86:	push   0x1e4d238b
  418a8b:	sbb    edx,DWORD PTR [edi-0x8]
  418a8e:	jecxz  0x418ad3
  418a90:	stos   DWORD PTR es:[edi],eax
  418a91:	or     eax,0xa969c956
  418a96:	test   ebx,ebp
  418a98:	dec    edi
  418a99:	mov    dl,0xce
  418a9b:	cmc    
  418a9c:	dec    edx
  418a9d:	jmp    0xae34:0xc356165b
  418aa4:	pop    ecx
  418aa5:	sbb    eax,0xedd23b12
  418aaa:	pop    esi
  418aab:	addr16 jnp 0x418aa4
  418aae:	xchg   edi,eax
  418aaf:	mov    bh,0xf5
  418ab1:	scas   eax,DWORD PTR es:[edi]
  418ab2:	scas   eax,DWORD PTR es:[edi]
  418ab3:	popa   
  418ab4:	jl     0x418a91
  418ab6:	pop    es
  418ab7:	mov    al,ds:0x3ffddd7a
  418abc:	xchg   esp,esp
  418abe:	cld    
  418abf:	xor    BYTE PTR [ecx],al
  418ac1:	mov    esp,0x71ef7ed4
  418ac6:	loopne 0x418b39
  418ac8:	es ja  0x418b13
  418acb:	pop    ds
  418acc:	sar    BYTE PTR [ecx+0x4eac924b],1
  418ad2:	aas    
  418ad3:	cmp    al,BYTE PTR [esi-0xa]
  418ad6:	xor    esp,edi
  418ad8:	xlat   BYTE PTR ds:[ebx]
  418ad9:	ins    BYTE PTR es:[edi],dx
  418ada:	imul   BYTE PTR [ecx+eiz*4-0x2]
  418ade:	xlat   BYTE PTR ds:[ebx]
  418adf:	jle    0x418a6b
  418ae1:	lods   al,BYTE PTR ds:[esi]
  418ae2:	test   al,0x95
  418ae4:	push   esi
  418ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae6:	pop    edi
  418ae7:	xor    al,0x11
  418ae9:	push   cs
  418aea:	imul   edi,DWORD PTR ds:0x1d8d6de8,0x76
  418af1:	jbe    0x418aea
  418af3:	dec    esi
  418af4:	xchg   edi,eax
  418af5:	sub    cl,BYTE PTR [esi-0x2a]
  418af8:	push   ebp
  418af9:	call   0xd333:0xfad24738
  418b00:	xchg   esp,eax
  418b01:	js     0x418b77
  418b03:	cdq    
  418b04:	nop
  418b05:	add    ax,0x520a
  418b09:	popf   
  418b0a:	imul   DWORD PTR [ecx-0x604f8789]
  418b10:	fwait
  418b11:	jbe    0x418b2b
  418b13:	pusha  
  418b14:	xor    ah,BYTE PTR [esi+0x24]
  418b17:	inc    ebp
  418b18:	adc    edi,esi
  418b1a:	arpl   WORD PTR [edx],bp
  418b1c:	pop    esi
  418b1d:	jmp    0x418ac8
  418b1f:	int    0x0
  418b21:	mov    ebp,0x10c9f1f7
  418b26:	clc    
  418b27:	dec    ebx
  418b28:	sbb    eax,0xb727b01a
  418b2d:	dec    esp
  418b2e:	ds dec edi
  418b30:	retf   
  418b31:	lea    eax,[ebp-0x34]
  418b34:	and    eax,0x1c2ea982
  418b39:	or     eax,0xd12086f9
  418b3e:	ret    
  418b3f:	xchg   ebx,eax
  418b40:	cli    
  418b41:	adc    al,0xdc
  418b43:	(bad)
  418b46:	arpl   si,di
  418b48:	xor    eax,0xb650edd
  418b4d:	arpl   WORD PTR [edi],ax
  418b4f:	and    ebx,0x5c
  418b52:	and    ebx,DWORD PTR [edx]
  418b54:	cmp    DWORD PTR [ecx+0x7e7cb1d],ecx
  418b5a:	xchg   BYTE PTR [edx-0x6d46785e],ch
  418b60:	fcomp  st(0)
  418b62:	fnsave [esi]
  418b64:	mov    edi,eax
  418b66:	fdivr  DWORD PTR [esi+0x4d45a53a]
  418b6c:	or     BYTE PTR [ecx-0x5e],dl
  418b6f:	aad    0x28
  418b71:	pop    eax
  418b72:	shl    BYTE PTR [ebp+0x233e205b],0x29
  418b79:	outs   dx,DWORD PTR ds:[esi]
  418b7a:	mov    WORD PTR ds:0xa875f847,cs
  418b80:	push   0x2f
  418b82:	leave  
  418b83:	test   DWORD PTR [ecx+0x5a7453e2],ecx
  418b89:	pop    ss
  418b8a:	mul    dl
  418b8c:	sbb    BYTE PTR [ebx+0x7f],0x40
  418b90:	out    0xdb,eax
  418b92:	pop    eax
  418b93:	int    0x90
  418b95:	es push eax
  418b97:	push   esi
  418b98:	pop    ss
  418b99:	fsub   st,st(4)
  418b9b:	mov    edx,DWORD PTR [edx+0xbc7be49]
  418ba1:	push   es
  418ba2:	ficomp DWORD PTR [ebp+0x6]
  418ba5:	retf   0x2698
  418ba8:	xchg   ecx,eax
  418ba9:	fldenv [edx]
  418bab:	imul   esp,ebp,0xef31ceea
  418bb1:	gs int 0x9e
  418bb4:	fnstsw WORD PTR [edi]
  418bb6:	ja     0x418bc6
  418bb8:	push   0xab848401
  418bbd:	pop    edi
  418bbe:	call   0x23d:0x1bf76099
  418bc5:	jb     0x418c18
  418bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bc8:	push   es
  418bc9:	xlat   BYTE PTR ds:[ebx]
  418bca:	cmp    ecx,DWORD PTR [ebp-0x7]
  418bcd:	mov    ch,bl
  418bcf:	fnstcw WORD PTR [eax-0x4f46092e]
  418bd5:	jg     0x418b90
  418bd7:	push   cs
  418bd8:	int3   
  418bd9:	into   
  418bda:	xchg   BYTE PTR [edi-0x28],bh
  418bdd:	icebp  
  418bde:	jne    0x418b8b
  418be0:	mov    ?,WORD PTR [eax-0x80]
  418be3:	shr    BYTE PTR [edx-0x273bc60e],cl
  418be9:	rol    ah,1
  418beb:	jmp    0x40171f54
  418bf0:	int    0xda
  418bf2:	sbb    eax,0xe3825261
  418bf7:	adc    DWORD PTR [edx-0x35d0c8a4],ecx
  418bfd:	mov    esp,DWORD PTR [ecx-0x71]
  418c00:	leave  
  418c01:	cvttps2pi mm3,xmm7
  418c04:	mov    ch,0x79
  418c06:	retf   0x1a38
  418c09:	lods   al,BYTE PTR ds:[esi]
  418c0a:	mov    ah,0xff
  418c0c:	adc    BYTE PTR [ecx-0x1b],ch
  418c0f:	inc    ebx
  418c10:	mov    ah,0xea
  418c12:	dec    edi
  418c13:	out    dx,al
  418c14:	iret   
  418c15:	jbe    0x418bb7
  418c17:	sbb    bl,BYTE PTR [eax+0x34]
  418c1a:	mov    ebx,0x8f7a0493
  418c1f:	mov    eax,ds:0xe98d0bd6
  418c24:	xor    ecx,DWORD PTR [edx]
  418c26:	imul   esi,edx,0xda5939d1
  418c2c:	add    al,0x73
  418c2e:	or     eax,0x7a36f888
  418c33:	in     al,dx
  418c34:	pop    eax
  418c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c36:	ret    0x227a
  418c39:	repz inc edi
  418c3b:	fistp  DWORD PTR [ebx+edx*8]
  418c3e:	shl    BYTE PTR [edx-0x50c4730d],cl
  418c44:	sub    DWORD PTR [edi-0x69],0xffffffa2
  418c48:	xor    eax,0xdbcda2e1
  418c4d:	outs   dx,DWORD PTR ds:[esi]
  418c4e:	arpl   WORD PTR [edi-0x41],ax
  418c51:	or     al,0x4a
  418c53:	inc    edi
  418c54:	or     ah,bh
  418c56:	push   ss
  418c57:	or     BYTE PTR [edx-0x6592ec2e],0x9d
  418c5e:	call   0x813:0xe0defd86
  418c65:	cwde   
  418c66:	fisub  DWORD PTR [ebp-0x64]
  418c69:	bound  esp,QWORD PTR [ecx+ebx*4]
  418c6c:	es out dx,al
  418c6e:	adc    BYTE PTR [ecx-0x3b8c846],ch
  418c74:	(bad)  
  418c75:	setns  BYTE PTR [edi-0x16a8db92]
  418c7c:	imul   esi,DWORD PTR [eax+0x6d],0x70467d3f
  418c83:	mov    bh,0xf5
  418c85:	jb     0x418c6b
  418c87:	das    
  418c88:	or     bh,cl
  418c8a:	jnp    0x418d0a
  418c8c:	dec    ebp
  418c8d:	into   
  418c8e:	jp     0x418c74
  418c90:	mov    bh,0x1a
  418c92:	mov    BYTE PTR [ebx-0x4983f7e1],bh
  418c98:	icebp  
  418c99:	outs   dx,BYTE PTR ds:[esi]
  418c9a:	out    0x74,eax
  418c9c:	add    dl,bl
  418c9e:	adc    al,0x23
  418ca0:	xchg   edx,eax
  418ca1:	sbb    esi,0x36
  418ca4:	dec    eax
  418ca5:	and    al,0xed
  418ca7:	pop    es
  418ca8:	call   0x8ae9da85
  418cad:	fcom   DWORD PTR [ebx+0x65]
  418cb0:	loopne 0x418cbb
  418cb2:	stc    
  418cb3:	ror    dh,1
  418cb5:	xchg   ebx,eax
  418cb6:	lea    eax,[esi-0x3430df14]
  418cbc:	fidiv  DWORD PTR ds:0xbc9b511c
  418cc2:	ds sbb al,0xae
  418cc5:	inc    ebx
  418cc6:	test   eax,0x98c97945
  418ccb:	loopne 0x418d28
  418ccd:	push   ebx
  418cce:	repnz sbb al,0xf8
  418cd1:	inc    eax
  418cd2:	das    
  418cd3:	repz popf 
  418cd5:	aad    0x38
  418cd7:	push   esi
  418cd8:	fwait
  418cd9:	loop   0x418c5d
  418cdb:	jp     0x418cee
  418cdd:	ror    DWORD PTR [edx+ecx*8-0x59],0x42
  418ce2:	sbb    eax,0x188dcc37
  418ce7:	push   ss
  418ce8:	inc    esi
  418ce9:	test   BYTE PTR [eax-0x859120c],0x1c
  418cf0:	inc    esp
  418cf1:	es mov dh,al
  418cf4:	jp     0x418cd9
  418cf6:	nop
  418cf7:	in     al,0x1b
  418cf9:	sub    DWORD PTR [ebp-0x1],esi
  418cfc:	cmp    eax,0x6a4639ac
  418d01:	fwait
  418d02:	xchg   esp,eax
  418d03:	dec    BYTE PTR [edx-0x42]
  418d06:	sub    BYTE PTR [ebx-0x177a3bae],0x5f
  418d0d:	sbb    eax,0x3067888d
  418d12:	inc    esi
  418d13:	lods   al,BYTE PTR ds:[esi]
  418d14:	inc    ecx
  418d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d16:	xor    ebx,DWORD PTR [edi]
  418d18:	xchg   esi,eax
  418d19:	call   FWORD PTR [edi+0x6afb0fe2]
  418d1f:	mov    DWORD PTR [ebx+0x6e],ebp
  418d22:	dec    ebp
  418d23:	fimul  WORD PTR [ecx]
  418d25:	data16 cmp dl,al
  418d28:	iret   
  418d29:	ret    
  418d2a:	(bad)  
  418d2b:	outs   dx,BYTE PTR ds:[esi]
  418d2c:	adc    BYTE PTR [edx-0x70],0x89
  418d30:	or     eax,0xc1fa5a63
  418d35:	xchg   cl,bh
  418d37:	or     esi,edx
  418d39:	sbb    al,0x73
  418d3b:	enter  0x5c24,0x30
  418d3f:	sbb    eax,0x73c53771
  418d44:	xor    BYTE PTR [eax],0x5
  418d47:	jp     0x418d26
  418d49:	pop    esi
  418d4a:	sub    DWORD PTR [eax],ebx
  418d4c:	imul   edi,edi,0xffffffb1
  418d4f:	mov    al,ds:0x9b0109cd
  418d54:	call   0xe984e0f2
  418d59:	int3   
  418d5a:	std    
  418d5b:	add    al,0xcc
  418d5d:	inc    eax
  418d5e:	fs mov ecx,0x756ea646
  418d64:	jo     0x418dba
  418d66:	icebp  
  418d67:	fistp  QWORD PTR [edx+eax*4]
  418d6a:	jg     0x418d4e
  418d6c:	jp     0x418d63
  418d6e:	jnp    0x418da6
  418d70:	getsec 
  418d72:	push   es
  418d73:	xchg   BYTE PTR [esi-0x37],al
  418d76:	adc    BYTE PTR [bp+di+0x3fbd],0xb9
  418d7c:	rol    ch,0xff
  418d7f:	cmp    bh,BYTE PTR [ebx-0x5e]
  418d82:	cs jae 0x418d2b
  418d85:	push   esi
  418d86:	or     ebp,DWORD PTR [edi+0x51]
  418d89:	fwait
  418d8a:	addr16 xchg esp,eax
  418d8c:	push   edx
  418d8d:	fmul   DWORD PTR ds:0x6c7d702b
  418d93:	cs pop eax
  418d95:	sub    esi,DWORD PTR [edx+0x35]
  418d98:	out    dx,eax
  418d99:	fst    QWORD PTR [ebx]
  418d9b:	or     eax,0x655ddd64
  418da0:	xchg   esi,eax
  418da1:	xchg   ebx,eax
  418da2:	jb     0x418d97
  418da4:	aas    
  418da5:	mov    al,0x51
  418da7:	dec    edi
  418da8:	jmp    0xc85:0x1d15d875
  418daf:	push   edx
  418db0:	jb     0x418e1b
  418db2:	and    ebx,DWORD PTR [ebp-0x74837128]
  418db8:	sub    eax,0x63bc48f0
  418dbd:	(bad)  
  418dbe:	adc    BYTE PTR [eax+eax*8+0x44bcffdc],cl
  418dc5:	and    DWORD PTR [ebp-0x14ce69bd],eax
  418dcb:	js     0x418d8e
  418dcd:	push   ebp
  418dce:	jno    0x418d6b
  418dd0:	or     esp,DWORD PTR [edi+0x62]
  418dd3:	mov    bh,0x12
  418dd5:	fisttp QWORD PTR [edx]
  418dd7:	mov    ds:0x8c11b8d7,al
  418ddc:	inc    esi
  418ddd:	pop    esp
  418dde:	cdq    
  418ddf:	push   ss
  418de0:	(bad)
  418de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de5:	in     eax,dx
  418de6:	sub    DWORD PTR ds:[edi-0x3],esi
  418dea:	out    dx,al
  418deb:	add    ah,BYTE PTR [eax+esi*1-0x6cf6ccc6]
  418df2:	add    eax,0x3a68a057
  418df7:	std    
  418df8:	mov    ebx,0x682b42c6
  418dfd:	(bad)  
  418dfe:	popf   
  418dff:	in     al,0x40
  418e01:	xchg   edi,eax
  418e02:	push   ds
  418e03:	out    dx,eax
  418e04:	inc    ebx
  418e05:	mov    eax,0xd0cab3c5
  418e0a:	pop    esi
  418e0b:	les    ebp,FWORD PTR [eax]
  418e0d:	adc    eax,0x15bc2c30
  418e12:	jmp    0x47e5323c
  418e17:	jle    0x418e12
  418e19:	jns    0x418db5
  418e1b:	sbb    ch,BYTE PTR [edx]
  418e1d:	jmp    0xbe46:0x785bb1b8
  418e24:	or     DWORD PTR [esi],ebp
  418e26:	leave  
  418e27:	mov    eax,ds:0x746d040e
  418e2c:	imul   BYTE PTR [eax+0x57]
  418e2f:	lea    edi,[eax+0x30]
  418e32:	jp     0x418dcb
  418e34:	jg     0x418dda
  418e36:	push   ss
  418e37:	lds    ebp,FWORD PTR [eax-0x28db2e8a]
  418e3d:	mov    ds:0x894ac552,eax
  418e42:	(bad)  
  418e43:	mov    al,0x39
  418e45:	xor    edx,edi
  418e47:	shl    DWORD PTR [edx-0x7eb23a7e],cl
  418e4d:	pop    es
  418e4e:	jne    0x418dea
  418e50:	test   DWORD PTR ds:0x7e472e68,0xfe1fff53
  418e5a:	mov    edi,DWORD PTR [edx+0x2d]
  418e5d:	sub    DWORD PTR [ecx-0x40a512b1],ebx
  418e63:	or     ah,BYTE PTR [esi]
  418e65:	jmp    0x4d7c5ffe
  418e6a:	dec    esi
  418e6b:	mov    dl,BYTE PTR [eax+ebx*1]
  418e6e:	inc    esp
  418e6f:	ss mov ebp,0x94cb7dee
  418e75:	call   0xfa3a:0x73135dbc
  418e7c:	out    0xef,al
  418e7e:	xchg   edx,eax
  418e7f:	aas    
  418e80:	mov    eax,ds:0x4b38604c
  418e85:	jl     0x418e42
  418e87:	mov    cl,0x24
  418e89:	jle    0x418e52
  418e8b:	or     eax,0x44fd8fe6
  418e90:	and    dh,al
  418e92:	push   esi
  418e93:	ins    DWORD PTR es:[edi],dx
  418e94:	retf   0xc807
  418e97:	test   eax,0xd8703fbb
  418e9c:	in     al,dx
  418e9d:	mov    ds:0xa6a0e204,eax
  418ea2:	jge    0x418f09
  418ea4:	loop   0x418e53
  418ea6:	sahf   
  418ea7:	lock and bh,BYTE PTR [edi]
  418eaa:	add    eax,0xab6c7111
  418eaf:	ins    DWORD PTR es:[edi],dx
  418eb0:	add    DWORD PTR [esi+0x2765ee92],esi
  418eb6:	adc    ch,BYTE PTR [edi+0xa]
  418eb9:	stos   BYTE PTR es:[edi],al
  418eba:	aaa    
  418ebb:	fdiv   DWORD PTR [ebx+0x5d946c03]
  418ec1:	dec    edi
  418ec2:	xchg   esp,eax
  418ec3:	shr    ah,1
  418ec5:	icebp  
  418ec6:	sahf   
  418ec7:	(bad)  
  418ec8:	adc    BYTE PTR [edi],dl
  418eca:	(bad)  
  418ecb:	and    BYTE PTR [ebx],ch
  418ecd:	xlat   BYTE PTR ds:[ebx]
  418ece:	call   0x441d181c
  418ed3:	sahf   
  418ed4:	mov    al,ds:0xf7695af3
  418ed9:	push   ebx
  418eda:	push   ecx
  418edb:	mov    ebp,0x3e8aad94
  418ee0:	cmp    ah,BYTE PTR [edx-0x2cbbf5e5]
  418ee6:	out    0xe4,eax
  418ee8:	sbb    dl,BYTE PTR [edi+0x55c5311c]
  418eee:	xor    eax,0x4497301e
  418ef3:	stos   DWORD PTR es:[edi],eax
  418ef4:	mov    dl,0xe1
  418ef6:	lods   eax,DWORD PTR ds:[esi]
  418ef7:	inc    edx
  418ef8:	imul   eax,DWORD PTR [ecx+0x4e06625],0xd0a7e742
  418f02:	jno    0x418eb1
  418f04:	imul   BYTE PTR [ebp-0x57]
  418f07:	loopne 0x418eb3
  418f09:	push   edx
  418f0a:	test   DWORD PTR [esi+0x12],0x9f48e2ec
  418f11:	aad    0xcb
  418f13:	and    dh,bh
  418f15:	jp     0x418ee2
  418f17:	iret   
  418f18:	mov    edi,0x55740083
  418f1d:	ror    bh,0x6
  418f20:	pop    ebx
  418f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f22:	scas   eax,DWORD PTR es:[edi]
  418f23:	dec    esi
  418f24:	hlt    
  418f25:	cdq    
  418f26:	popf   
  418f27:	iret   
  418f28:	or     eax,0x5c1f0fa1
  418f2d:	sub    eax,0x381744d3
  418f32:	das    
  418f33:	test   BYTE PTR [edi-0x6c],cl
  418f36:	cs icebp 
  418f38:	imul   ecx,DWORD PTR ds:0xb851c918,0x1673a775
  418f42:	mov    dh,0x4e
  418f44:	mov    eax,0x3b50ac8f
  418f49:	rcr    DWORD PTR [edx],0xb2
  418f4c:	repnz das 
  418f4e:	sub    BYTE PTR [esi+0x68],ah
  418f51:	push   ebp
  418f52:	adc    al,0x2a
  418f54:	mov    ah,0x20
  418f56:	ja     0x418f3d
  418f58:	ss stos BYTE PTR es:[edi],al
  418f5a:	stos   BYTE PTR es:[edi],al
  418f5b:	jecxz  0x418ef5
  418f5d:	fstp   DWORD PTR [ebp+0xed519e1]
  418f63:	dec    ebx
  418f64:	nop
  418f65:	mov    si,0xb40c
  418f69:	mov    dl,0x31
  418f6b:	aas    
  418f6c:	inc    ebx
  418f6d:	retf   0xb1cb
  418f70:	sbb    DWORD PTR [ebp+0x3be9f0f0],0xffffffd1
  418f77:	repz pop ss
  418f79:	lock dec ebp
  418f7b:	sub    BYTE PTR [ebp+ecx*4-0x208d447f],dl
  418f82:	inc    ecx
  418f83:	in     eax,0x4b
  418f85:	in     al,dx
  418f86:	idiv   DWORD PTR [edx]
  418f88:	into   
  418f89:	stos   BYTE PTR es:[edi],al
  418f8a:	inc    eax
  418f8b:	jne    0x418f76
  418f8d:	pop    esi
  418f8e:	cs inc esp
  418f90:	cmp    bh,dl
  418f92:	sbb    DWORD PTR [ebx+0x180b8809],esp
  418f98:	pop    ebx
  418f99:	push   ecx
  418f9a:	jbe    0x418f84
  418f9c:	jl     0x418f23
  418f9e:	sbb    ebx,esp
  418fa0:	sbb    al,0x98
  418fa2:	retf   
  418fa3:	outs   dx,BYTE PTR ds:[esi]
  418fa4:	loop   0x41900a
  418fa6:	push   esp
  418fa7:	cdq    
  418fa8:	aaa    
  418fa9:	or     eax,0x4d2d6452
  418fae:	outs   dx,BYTE PTR ds:[esi]
  418faf:	mov    ecx,0x382bee2
  418fb4:	imul   esp,DWORD PTR [ecx+ecx*8+0x79],0xffffff94
  418fb9:	aas    
  418fba:	mov    eax,ds:0x18e37d32
  418fbf:	add    bl,BYTE PTR [edx+0x7]
  418fc2:	fidiv  DWORD PTR ds:0x8e18c47
  418fc8:	leave  
  418fc9:	xor    dh,BYTE PTR ds:0xcfb3b56f
  418fcf:	mov    WORD PTR [esi],gs
  418fd1:	pop    ecx
  418fd2:	mov    eax,DWORD PTR [ecx]
  418fd4:	or     ebp,ebp
  418fd6:	mov    esp,0x97a8d83f
  418fdb:	call   0x6af2:0xd6b2000b
  418fe2:	cmp    DWORD PTR [ecx],ebx
  418fe4:	sub    al,0x79
  418fe6:	inc    ecx
  418fe7:	addr16 mov ah,0xe2
  418fea:	jns    0x418f81
  418fec:	aaa    
  418fed:	pusha  
  418fee:	nop
  418fef:	fcom   st(7)
  418ff1:	bound  edx,QWORD PTR [eax]
  418ff3:	mov    dl,BYTE PTR [ebx+0x490edfe7]
  418ff9:	outs   dx,DWORD PTR ds:[esi]
  418ffa:	test   eax,0x889516c0
  418fff:	and    dl,BYTE PTR [eax]
  419001:	push   edi
  419002:	test   eax,0x648eb7d6
  419007:	sbb    DWORD PTR [ecx-0x67],eax
  41900a:	idiv   DWORD PTR [ebp-0x1b]
  41900d:	dec    ebp
  41900e:	fisubr WORD PTR [ecx+edi*2]
  419011:	push   esi
  419012:	jmp    0x2f06:0x118e3d4c
  419019:	push   ebp
  41901a:	(bad)  
  41901b:	pop    esp
  41901c:	int3   
  41901d:	xchg   edi,eax
  41901e:	neg    BYTE PTR [esp+edi*8]
  419021:	imul   ecx,DWORD PTR [ecx],0xffffffec
  419024:	in     al,0xef
  419026:	inc    ebx
  419027:	add    cl,BYTE PTR [ecx]
  419029:	sub    eax,0x39c3c454
  41902e:	pop    ecx
  41902f:	leave  
  419030:	not    BYTE PTR [edx-0x3b6a88ce]
  419036:	scas   eax,DWORD PTR es:[edi]
  419037:	cmc    
  419038:	(bad)  
  419039:	outs   dx,BYTE PTR ds:[esi]
  41903a:	int    0xd9
  41903c:	in     eax,0x7f
  41903e:	sbb    BYTE PTR [esi+0x1e],cl
  419041:	(bad)  
  419042:	imul   esp,DWORD PTR [edi],0x1e
  419045:	and    al,0x96
  419047:	ret    
  419048:	daa    
  419049:	jns    0x419026
  41904b:	popa   
  41904c:	push   cs
  41904d:	xchg   BYTE PTR [edx+0x31],bh
  419050:	int3   
  419051:	das    
  419052:	shr    BYTE PTR [ebx],0x9a
  419055:	adc    DWORD PTR [edi-0x3d6a1f45],edi
  41905b:	and    bl,ch
  41905d:	enter  0xd512,0xdd
  419061:	inc    esp
  419062:	es cmp al,ah
  419065:	mov    bl,al
  419067:	xchg   esi,eax
  419068:	rcl    DWORD PTR [edx-0x78],0x5b
  41906c:	push   cs
  41906d:	lock daa 
  41906f:	push   ecx
  419070:	xchg   ebp,eax
  419071:	fld    TBYTE PTR es:[ecx-0x67]
  419075:	bound  eax,QWORD PTR [ebx]
  419077:	les    ebp,FWORD PTR [ebp+0x56d61bdb]
  41907d:	add    DWORD PTR [eax+0x6555682b],esp
  419083:	rcl    cl,0xea
  419086:	fmul   QWORD PTR [ebx+0x4]
  419089:	mov    ds:0x2df5aec3,al
  41908e:	dec    ebx
  41908f:	pop    ds
  419090:	and    eax,0xe713e4ec
  419095:	sahf   
  419096:	push   ecx
  419097:	aam    0x9a
  419099:	mov    esi,0x4b5124c7
  41909e:	jb     0x419077
  4190a0:	xor    al,0x76
  4190a2:	repz sar BYTE PTR [ebx],1
  4190a5:	fwait
  4190a6:	retf   0xfa7b
  4190a9:	dec    edx
  4190aa:	or     al,0xc8
  4190ac:	lods   eax,DWORD PTR ds:[esi]
  4190ad:	fsubrp st(0),st
  4190af:	mov    al,ds:0xe8e1f573
  4190b4:	out    0xa4,eax
  4190b6:	fisub  WORD PTR [edi-0x4d]
  4190b9:	cdq    
  4190ba:	sar    cl,1
  4190bc:	in     eax,0x49
  4190be:	repz loopne 0x4190e6
  4190c1:	std    
  4190c2:	jmp    0xf791:0x2894e544
  4190c9:	or     esi,ecx
  4190cb:	mov    ebp,0x97bd9232
  4190d0:	cmc    
  4190d1:	jo     0x4190cf
  4190d3:	sub    al,0x6d
  4190d5:	mov    edi,0xb323f58b
  4190da:	loopne 0x4190bf
  4190dc:	mov    ds:0x1caabdaf,al
  4190e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e3:	xchg   DWORD PTR [eax+0x4aec10cf],esi
  4190e9:	leave  
  4190ea:	test   al,0xd8
  4190ec:	pop    ecx
  4190ed:	test   eax,0xe455338d
  4190f2:	push   edi
  4190f3:	dec    edi
  4190f4:	aad    0x4c
  4190f6:	into   
  4190f7:	push   ebx
  4190f8:	add    al,0xb4
  4190fa:	imul   ebx,eax,0xffffffd1
  4190fd:	pushf  
  4190fe:	not    ah
  419100:	mov    eax,ds:0x9d3ae4f5
  419105:	cmp    eax,0x61c7e43a
  41910a:	fistp  DWORD PTR [ecx-0x55e0564c]
  419110:	sub    eax,0xed69fb7a
  419115:	pop    edx
  419116:	fiadd  DWORD PTR [edi]
  419118:	icebp  
  419119:	xchg   esp,ebp
  41911b:	mov    dl,0x2e
  41911d:	push   ecx
  41911e:	adc    BYTE PTR [ebx-0x4c0992c9],bl
  419124:	ins    DWORD PTR es:[edi],dx
  419125:	inc    edx
  419126:	adc    eax,0xe29c2c90
  41912b:	jmp    0xb925251b
  419130:	mov    ah,0x53
  419132:	shr    bl,cl
  419134:	inc    eax
  419135:	xor    al,ch
  419137:	pushf  
  419138:	mov    eax,0x11abc057
  41913d:	ja     0x419124
  41913f:	dec    ebx
  419140:	inc    eax
  419141:	xor    eax,0x3bf5e3ea
  419146:	in     eax,0x90
  419148:	xor    DWORD PTR [eax+eax*1],ebp
  41914b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41914c:	inc    edi
  41914d:	ror    DWORD PTR [ebp+0x1f4eb60d],cl
  419153:	(bad)  
  419154:	or     DWORD PTR [esi],esi
  419156:	xchg   esp,eax
  419157:	adc    edx,DWORD PTR [edi]
  419159:	popa   
  41915a:	(bad)  
  41915b:	jno    0x4190f0
  41915d:	dec    ebp
  41915e:	add    DWORD PTR [esi],0x7a
  419161:	retf   
  419162:	push   esi
  419163:	aaa    
  419164:	xchg   BYTE PTR [ebp-0x69],bl
  419167:	test   DWORD PTR [ebp-0x3c],0xc1854ebb
  41916e:	xchg   ecx,eax
  41916f:	and    edx,ebp
  419171:	in     eax,0xf5
  419173:	jb     0x41914a
  419175:	sub    DWORD PTR [esi-0x16525c96],ebp
  41917b:	jmp    0x2745:0xc1a41e9d
  419182:	test   al,0x20
  419184:	pop    eax
  419185:	cmp    BYTE PTR [esi],0x20
  419188:	inc    edx
  419189:	ins    DWORD PTR es:[edi],dx
  41918a:	mov    eax,ds:0xb767fc80
  41918f:	cmp    ebp,ebx
  419191:	fsubp  st(4),st
  419193:	das    
  419194:	mov    al,ds:0x19fb43c4
  419199:	inc    edx
  41919a:	mov    esi,0x84fe2b8e
  41919f:	pop    esi
  4191a0:	test   eax,0xdb6087bf
  4191a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a6:	in     al,0x31
  4191a8:	test   al,0xc0
  4191aa:	jb     0x419146
  4191ac:	test   DWORD PTR [ebx-0x266c1b70],esi
  4191b2:	dec    esp
  4191b3:	imul   edi,eax,0x52
  4191b6:	dec    eax
  4191b7:	jmp    0x419200
  4191b9:	lds    esi,FWORD PTR [edi+0x27]
  4191bc:	adc    esp,DWORD PTR [eax]
  4191be:	es jge 0x4191a9
  4191c1:	mov    bh,0x25
  4191c3:	inc    ebx
  4191c4:	scas   al,BYTE PTR es:[edi]
  4191c5:	repz fucomp st(4)
  4191c8:	cmp    al,0x21
  4191ca:	mov    bh,0xe1
  4191cc:	out    0xe1,al
  4191ce:	mov    bh,0xa2
  4191d0:	mov    esi,DWORD PTR [esi-0xb346f3]
  4191d6:	(bad)  
  4191d7:	pop    ecx
  4191d8:	rcl    BYTE PTR [ebp-0x14],0xae
  4191dc:	xor    al,0x7e
  4191de:	add    cl,BYTE PTR [eax+0x5a]
  4191e1:	sub    eax,0x825500dc
  4191e6:	stc    
  4191e7:	out    dx,eax
  4191e8:	jmp    0x41917f
  4191ea:	leave  
  4191eb:	mov    eax,0x5e8355ee
  4191f0:	mov    bl,0xf8
  4191f2:	cmp    eax,0x612db779
  4191f7:	xchg   ebx,eax
  4191f8:	cld    
  4191f9:	add    DWORD PTR [ebx-0x2e],edi
  4191fc:	fadd   QWORD PTR ds:0xbbe83ac0
  419202:	adc    BYTE PTR [esi+0x4f],0xf9
  419206:	adc    DWORD PTR [eax-0x140598d9],esi
  41920c:	les    esi,FWORD PTR [edi]
  41920e:	inc    ebx
  41920f:	fidiv  WORD PTR [bp+di-0x1f27]
  419214:	cmp    eax,0x989ffcc9
  419219:	add    dh,BYTE PTR [esi]
  41921b:	int    0xcd
  41921d:	cmp    al,BYTE PTR [eax-0x1c]
  419220:	test   eax,0xdc79caef
  419225:	hlt    
  419226:	adc    ch,dl
  419228:	sub    DWORD PTR [ebx+0x51],eax
  41922b:	lds    ecx,FWORD PTR [esi-0x48]
  41922e:	arpl   WORD PTR [esi-0x265b5885],dx
  419234:	mov    ah,0x2
  419236:	cmp    al,0xd8
  419238:	inc    ebx
  419239:	push   edi
  41923a:	loope  0x419246
  41923c:	pop    edi
  41923d:	stos   BYTE PTR es:[edi],al
  41923e:	jno    0x4191dc
  419240:	int3   
  419241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419242:	jns    0x41922b
  419244:	psubusb mm1,mm4
  419247:	and    al,BYTE PTR [eax]
  419249:	cmp    BYTE PTR [eax-0xa],dh
  41924c:	js     0x419287
  41924e:	in     al,dx
  41924f:	dec    eax
  419250:	mov    ecx,0xad195994
  419255:	sti    
  419256:	push   esi
  419257:	sbb    bh,dh
  419259:	les    esp,FWORD PTR [eax+0x694da996]
  41925f:	pop    es
  419260:	or     eax,0xd36e0e59
  419265:	lods   eax,DWORD PTR ds:[esi]
  419266:	xchg   ebp,eax
  419267:	fcomp  QWORD PTR [ecx+edi*2-0x6760b163]
  41926e:	sbb    al,0x63
  419271:	out    dx,al
  419272:	jge    0x419288
  419274:	cmp    bl,dl
  419276:	repz mov ecx,0x3a11a200
  41927c:	pop    esi
  41927d:	mov    gs,WORD PTR [edi]
  41927f:	stos   DWORD PTR es:[edi],eax
  419280:	and    BYTE PTR [ebx-0x68],0x8d
  419284:	das    
  419285:	sbb    dh,dl
  419287:	ds stc 
  419289:	jae    0x4192c3
  41928b:	ds call 0x60b:0xd280e1c9
  419293:	les    eax,FWORD PTR [eax+ebx*4-0x6b]
  419297:	cmc    
  419298:	dec    ebp
  419299:	lods   al,BYTE PTR ds:[esi]
  41929a:	sti    
  41929b:	cmp    al,0x1e
  41929d:	cmp    BYTE PTR [ebx],cl
  41929f:	inc    eax
  4192a0:	push   ebp
  4192a1:	or     BYTE PTR [ebp+0x3fa7f2e9],dl
  4192a7:	bound  esi,QWORD PTR [eax+0x6e8c8794]
  4192ad:	inc    ecx
  4192ae:	add    al,0x1b
  4192b0:	iret   
  4192b1:	addr16 xchg ecx,eax
  4192b3:	ins    DWORD PTR es:[edi],dx
  4192b4:	inc    edx
  4192b5:	ss push ebx
  4192b7:	push   ecx
  4192b8:	loop   0x41931c
  4192ba:	fbld   TBYTE PTR [ecx-0x16d572cf]
  4192c0:	sbb    al,0x53
  4192c2:	sub    eax,0xbad017b1
  4192c7:	mov    bh,0x87
  4192c9:	fcom   QWORD PTR [edx+ebp*2]
  4192cc:	push   es
  4192cd:	pop    es
  4192ce:	pop    ebp
  4192cf:	mov    al,0x49
  4192d1:	jb     0x4192cb
  4192d3:	xchg   ecx,eax
  4192d4:	lahf   
  4192d5:	mov    bh,0xc3
  4192d7:	push   ss
  4192d8:	adc    DWORD PTR [edi],ebp
  4192da:	mov    ds:0x48d121cf,eax
  4192df:	call   0x67b3eec3
  4192e4:	shr    BYTE PTR [ebx],0x70
  4192e7:	dec    edx
  4192e8:	push   eax
  4192e9:	cmp    edi,ebp
  4192eb:	dec    esp
  4192ec:	int    0x5a
  4192ee:	ffree  st(1)
  4192f0:	cs push 0xec45626f
  4192f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192f7:	call   0xdeee1030
  4192fc:	mov    ds:0xbc5e299e,eax
  419301:	leave  
  419302:	mov    dl,0xae
  419304:	(bad)  
  419305:	sbb    eax,ebx
  419307:	jmp    0x5d519b1e
  41930c:	mov    edx,0xb6ea10f3
  419311:	test   BYTE PTR [ecx-0x3d],bl
  419314:	jmp    0x419383
  419316:	out    0xd8,al
  419318:	mov    edx,DWORD PTR [eax]
  41931a:	pushf  
  41931b:	(bad)  
  41931c:	mov    edx,0xc68e85e
  419321:	inc    esp
  419322:	leave  
  419323:	inc    edx
  419324:	lods   eax,DWORD PTR ds:[esi]
  419325:	cld    
  419326:	iret   
  419327:	pusha  
  419328:	cmp    al,0xfe
  41932a:	pop    esp
  41932b:	aaa    
  41932c:	mov    cl,0xe3
  41932e:	loop   0x419393
  419330:	shl    dl,0xa3
  419333:	mov    esi,0xcb7b0945
  419338:	sbb    DWORD PTR [eax+0x63],esi
  41933b:	jnp    0x41935b
  41933d:	cld    
  41933e:	and    eax,0x42386e9d
  419343:	cwde   
  419344:	sub    cl,bh
  419346:	jbe    0x419384
  419348:	fs or  eax,esi
  41934b:	xchg   esp,eax
  41934c:	or     ah,BYTE PTR [ebx]
  41934e:	out    dx,al
  41934f:	dec    edx
  419350:	jnp    0x419356
  419352:	mov    ds:0x72557095,al
  419357:	shl    DWORD PTR [esi-0x20],1
  41935a:	(bad)  
  41935b:	icebp  
  41935c:	xor    ecx,edx
  41935e:	mov    bl,0xfe
  419360:	adc    DWORD PTR [ebp-0x5],edx
  419363:	push   ebp
  419364:	mov    dl,0x84
  419366:	out    dx,al
  419367:	mov    WORD PTR [ebx-0x570a2df3],?
  41936d:	mov    ebx,DWORD PTR [ebx]
  41936f:	and    eax,0xe09229b6
  419374:	rcl    BYTE PTR [edi+0x1effc88e],cl
  41937a:	jle    0x419389
  41937c:	push   eax
  41937d:	std    
  41937e:	jmp    FWORD PTR [eax+ecx*4]
  419381:	mov    esp,0x79ace2ae
  419386:	pop    edx
  419387:	daa    
  419388:	xchg   ch,cl
  41938a:	sub    al,BYTE PTR [edi]
  41938c:	push   ecx
  41938d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41938e:	jecxz  0x41931e
  419390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419391:	mov    DWORD PTR [esi-0x7f],edx
  419394:	test   DWORD PTR [eax+0x49e3ac5e],esp
  41939a:	mov    dl,0x78
  41939c:	les    edi,FWORD PTR [eax-0x18]
  41939f:	mov    al,ds:0xae7e7e1e
  4193a4:	mov    al,ds:0x1042c71a
  4193a9:	push   ds
  4193aa:	jecxz  0x4193f2
  4193ac:	pop    ss
  4193ad:	rcr    BYTE PTR [eax],cl
  4193af:	pop    ecx
  4193b0:	jmp    0xb498cbc0
  4193b5:	push   es
  4193b6:	push   eax
  4193b7:	jge    0x419417
  4193b9:	mov    dh,0x47
  4193bb:	clc    
  4193bc:	xchg   edi,eax
  4193bd:	or     DWORD PTR [edi+0x55765188],esp
  4193c3:	jg     0x419369
  4193c5:	test   ch,ah
  4193c7:	jecxz  0x419444
  4193c9:	mov    ah,0x1d
  4193cb:	rcl    DWORD PTR [ecx],1
  4193cd:	dec    esi
  4193ce:	sbb    ecx,DWORD PTR [ecx]
  4193d0:	fnstenv [edx+0x52]
  4193d3:	dec    ebp
  4193d4:	mov    bh,0x9b
  4193d6:	dec    ecx
  4193d7:	loope  0x419436
  4193d9:	leave  
  4193da:	repnz ins BYTE PTR es:[edi],dx
  4193dc:	sar    ah,cl
  4193de:	hlt    
  4193df:	push   esp
  4193e0:	mov    bh,0x6c
  4193e2:	call   0x60e7:0x3a364ff3
  4193e9:	xor    DWORD PTR [ebx+0xb3d7752],ebx
  4193ef:	mov    ecx,?
  4193f1:	dec    edi
  4193f2:	mov    ch,0x77
  4193f4:	popf   
  4193f5:	jle    0x41945a
  4193f7:	outs   dx,DWORD PTR ds:[esi]
  4193f8:	test   BYTE PTR [ebx],0x62
  4193fb:	sub    esp,edx
  4193fd:	ins    BYTE PTR es:[edi],dx
  4193fe:	fst    DWORD PTR [esi]
  419400:	paddb  mm6,QWORD PTR [edi]
  419403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419404:	push   esi
  419405:	and    al,0x67
  419407:	pusha  
  419408:	mov    ebp,0x9dee3e49
  41940d:	iret   
  41940e:	imul   esi,ebx,0x59543c71
  419414:	push   es
  419415:	int3   
  419416:	pop    di
  419418:	mov    eax,0xdcd48cf4
  41941d:	adc    ecx,ebp
  41941f:	lods   al,BYTE PTR ds:[esi]
  419420:	push   edx
  419421:	test   DWORD PTR [eax-0x51],esp
  419424:	mov    al,0x47
  419426:	and    bh,bl
  419428:	jle    0x419447
  41942a:	or     al,0xf7
  41942c:	jns    0x4193f1
  41942e:	outs   dx,BYTE PTR ds:[esi]
  41942f:	push   0xffffffd7
  419431:	dec    edx
  419432:	sbb    DWORD PTR [ebp+0x65b8fb36],eax
  419438:	jo     0x4193bb
  41943a:	cmp    ebp,DWORD PTR [ebx-0x2c]
  41943d:	mov    al,ds:0x92e6f645
  419442:	rcr    DWORD PTR [ebp-0x9376494],1
  419448:	iret   
  419449:	or     BYTE PTR [eax+ebx*1+0x13],ch
  41944d:	jp     0x4193d5
  41944f:	jo     0x4193d7
  419451:	stc    
  419452:	sbb    DWORD PTR [ebx-0x2fb53b76],ecx
  419458:	pop    es
  419459:	ja     0x419433
  41945b:	imul   esi,edi,0x10
  41945e:	mov    ch,0xda
  419460:	add    DWORD PTR [eax],ebx
  419462:	adc    edi,ebx
  419464:	call   0xec25:0x1ad3d5e9
  41946b:	dec    ecx
  41946c:	sub    DWORD PTR [edx+0x650b176],edi
  419472:	pop    ds
  419473:	in     eax,dx
  419474:	push   edx
  419475:	cld    
  419476:	adc    ebx,DWORD PTR [edx]
  419478:	outs   dx,BYTE PTR ds:[esi]
  419479:	repnz adc eax,0x2cef90c2
  41947f:	(bad)  
  419480:	and    BYTE PTR [eax+0x4a579c5c],dh
  419486:	mov    ch,0x59
  419488:	push   es
  419489:	pop    edi
  41948a:	sbb    bh,al
  41948c:	outs   dx,BYTE PTR ds:[esi]
  41948d:	adc    BYTE PTR ds:0xd78c9274,al
  419493:	or     DWORD PTR [ebx],edx
  419495:	mov    al,0x55
  419497:	adc    edx,DWORD PTR [ebp-0x27]
  41949a:	fidiv  DWORD PTR [edx+0x2f80720]
  4194a0:	push   ss
  4194a1:	inc    esp
  4194a2:	sbb    edi,DWORD PTR [edi+0x7f5ed90d]
  4194a8:	retf   0xfbac
  4194ab:	adc    DWORD PTR [edx+eax*4],ecx
  4194ae:	or     esi,ebx
  4194b0:	sar    DWORD PTR [ebp-0x68],0xc1
  4194b4:	xchg   edx,eax
  4194b5:	scas   al,BYTE PTR es:[edi]
  4194b6:	addr16 mov bl,0x6a
  4194b9:	and    DWORD PTR [esi-0x316b2849],edx
  4194bf:	xor    ch,BYTE PTR [eax+ebx*4-0x68]
  4194c3:	dec    ebp
  4194c4:	pop    ds
  4194c5:	push   0x470b509a
  4194ca:	mov    ?,WORD PTR [edi-0x80]
  4194cd:	lods   eax,DWORD PTR ds:[esi]
  4194ce:	lds    edi,FWORD PTR es:[edi-0x6c22a2c9]
  4194d5:	fwait
  4194d6:	mov    dl,BYTE PTR [ecx+ebx*8]
  4194d9:	out    0xad,eax
  4194db:	pop    eax
  4194dc:	(bad)  
  4194dd:	jp     0x419474
  4194df:	cmc    
  4194e0:	push   0x7
  4194e2:	(bad)  [esi+0x1]
  4194e5:	test   eax,0x273cdeec
  4194ea:	sub    cl,ah
  4194ec:	imul   ebp,DWORD PTR [ebp-0x4d],0x76e4efb8
  4194f3:	loopne 0x419542
  4194f5:	pop    ss
  4194f6:	and    al,0xae
  4194f8:	xchg   ebp,eax
  4194f9:	retf   0x56aa
  4194fc:	xor    edx,ebp
  4194fe:	adc    al,0x5a
  419500:	jle    0x419482
  419502:	arpl   dx,ax
  419504:	mov    dh,0xee
  419506:	jmp    0x41955c
  419508:	pop    ebx
  419509:	retf   0x7996
  41950c:	xchg   esi,eax
  41950d:	repnz dec ecx
  41950f:	add    esp,eax
  419511:	or     al,0xdb
  419513:	ins    DWORD PTR es:[edi],dx
  419514:	fnstenv [ebx]
  419516:	in     eax,0x94
  419518:	mov    cs,edx
  41951a:	pop    esi
  41951b:	imul   ecx,DWORD PTR [esp+ebx*4],0x9f2b416b
  419522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419523:	and    al,0xf2
  419525:	in     al,dx
  419526:	(bad)
  419529:	fisub  DWORD PTR [edx+0x22944df0]
  41952f:	int    0x91
  419531:	push   esp
  419532:	fistp  DWORD PTR [edi-0x7f]
  419535:	adc    al,0x9f
  419537:	sub    al,0xd8
  419539:	jae    0x4194ec
  41953b:	add    DWORD PTR [edi-0xe],esi
  41953e:	fdivrp st(2),st
  419540:	inc    edx
  419541:	dec    esp
  419542:	pop    esp
  419543:	imul   edi,DWORD PTR ds:0xda4b59d2,0x48
  41954a:	inc    eax
  41954b:	pop    ecx
  41954c:	dec    edx
  41954d:	adc    al,BYTE PTR ds:[eax+0x4f]
  419551:	nop
  419552:	ins    DWORD PTR es:[edi],dx
  419553:	pop    esp
  419554:	gs test al,0xc4
  419557:	repnz pop ss
  419559:	pop    esi
  41955a:	in     eax,dx
  41955b:	sub    esp,edi
  41955d:	push   edi
  41955e:	scas   al,BYTE PTR es:[edi]
  41955f:	adc    eax,0x677990
  419564:	shr    DWORD PTR [edi+ecx*4-0x24],cl
  419568:	enter  0xf7ce,0x36
  41956c:	fbld   TBYTE PTR [edi+0x1]
  41956f:	fucomp st(7)
  419571:	sbb    al,0x37
  419573:	add    edi,ebx
  419575:	scas   eax,DWORD PTR es:[edi]
  419576:	add    al,0xba
  419578:	push   edx
  419579:	add    bh,al
  41957b:	out    dx,eax
  41957c:	mov    ds:0x14f87887,al
  419581:	push   esp
  419582:	call   0x9955:0x6bfb1e30
  419589:	setbe  BYTE PTR [edx+0x76b9b700]
  419590:	mov    eax,ds:0x8f3f93c5
  419595:	and    edi,DWORD PTR [eax+0x3c]
  419598:	ins    BYTE PTR es:[edi],dx
  419599:	xchg   ebx,eax
  41959a:	leave  
  41959b:	mov    BYTE PTR [eax-0x48],ch
  41959e:	mov    ah,0x26
  4195a0:	jmp    FWORD PTR [edi-0x5711698a]
  4195a6:	inc    esp
  4195a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a8:	push   esp
  4195a9:	jp     0x4195b4
  4195ab:	sbb    ch,BYTE PTR ds:0x484a165a
  4195b1:	inc    esi
  4195b2:	in     eax,dx
  4195b3:	xor    DWORD PTR [ebp-0x7d3a6937],edi
  4195b9:	adc    al,0x7a
  4195bb:	wrmsr  
  4195bd:	(bad)  
  4195bf:	and    DWORD PTR [ecx-0x44],ebp
  4195c2:	fiadd  WORD PTR [ebx-0x40]
  4195c5:	inc    edi
  4195c6:	xchg   ebx,eax
  4195c7:	pop    ds
  4195c8:	retf   0x88c9
  4195cb:	or     al,0x8a
  4195cd:	mov    ebp,DWORD PTR [ebx]
  4195cf:	retf   0xc93
  4195d2:	dec    esi
  4195d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195d4:	ds loope 0x419562
  4195d7:	jo     0x419561
  4195d9:	xchg   BYTE PTR [ecx+0x18],bl
  4195dc:	lock dec esp
  4195de:	(bad)  
  4195df:	pop    eax
  4195e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195e1:	into   
  4195e2:	push   ds
  4195e3:	mov    ecx,0x203eaebe
  4195e8:	and    edi,DWORD PTR [edi+ebp*8-0x542ea25e]
  4195ef:	mov    bl,0xf6
  4195f1:	or     BYTE PTR [esi+0xc],cl
  4195f4:	sbb    eax,edi
  4195f6:	adc    BYTE PTR [ebp+0x57caa44b],0x3e
  4195fd:	stc    
  4195fe:	pop    es
  4195ff:	add    DWORD PTR [edi+ebp*2+0x6f],edi
  419603:	jo     0x41966b
  419605:	adc    ebp,DWORD PTR [esi-0x6a4e5d8c]
  41960b:	shr    BYTE PTR [eax],0xbd
  41960e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41960f:	enter  0x8f2d,0x17
  419613:	in     al,dx
  419614:	push   ax
  419616:	xchg   DWORD PTR [ebx+eax*4-0x736796a6],ebp
  41961d:	pop    esi
  41961e:	shl    DWORD PTR [eax+edi*4+0x74],1
  419622:	pop    esi
  419623:	call   0x19345070
  419628:	int3   
  419629:	sub    al,0x3b
  41962b:	jae    0x419681
  41962d:	jb     0x41965a
  41962f:	add    ch,BYTE PTR [ebx]
  419631:	inc    ecx
  419632:	and    al,0x5c
  419634:	sbb    al,0x89
  419636:	xor    DWORD PTR [esi-0x4e5ea904],ebp
  41963c:	adc    BYTE PTR [edi-0x50],0x37
  419640:	mov    esi,0x4e322adc
  419645:	inc    ebx
  419646:	and    al,0xa8
  419648:	sub    al,0x2e
  41964a:	fsub   DWORD PTR [edx-0x6d]
  41964d:	div    DWORD PTR [edi-0x56fab7a4]
  419653:	ret    
  419654:	jl     0x419627
  419656:	push   edx
  419657:	inc    edx
  419658:	and    eax,0x1033682e
  41965d:	je     0x419676
  41965f:	pop    ebx
  419660:	sahf   
  419661:	push   0xaf57450b
  419666:	test   al,0x56
  419668:	(bad)
  41966b:	ret    
  41966c:	adc    eax,0xd4a13bff
  419671:	ret    
  419672:	unpcklps xmm4,XMMWORD PTR [ebx+0x3e]
  419676:	jp     0x419689
  419678:	call   0xe8a94d40
  41967d:	inc    esi
  41967e:	or     cl,BYTE PTR [ebx]
  419680:	stos   BYTE PTR es:[edi],al
  419681:	sub    ah,BYTE PTR [ebp+0x6b]
  419684:	jno    0x41963e
  419686:	iret   
  419687:	sub    eax,0x5086bdd8
  41968c:	dec    edi
  41968d:	cmp    DWORD PTR [edi+0x1299cabf],ebx
  419693:	add    cl,dl
  419695:	add    edi,esi
  419697:	out    dx,al
  419698:	lods   eax,DWORD PTR ds:[esi]
  419699:	addr16 push ecx
  41969b:	btc    DWORD PTR [esi+0x51],eax
  41969f:	or     BYTE PTR [ecx-0x3e09be14],ch
  4196a5:	inc    ebp
  4196a6:	and    BYTE PTR [edx*4-0x5711e2b8],dl
  4196ad:	pop    ss
  4196ae:	and    ah,cl
  4196b0:	out    0x6b,al
  4196b2:	add    eax,0xad913b3b
  4196b7:	pop    edi
  4196b8:	nop
  4196b9:	sbb    ah,dl
  4196bb:	call   0xa12e6cc5
  4196c0:	fstp   DWORD PTR [ecx-0x3d]
  4196c3:	cmp    ecx,DWORD PTR [ecx]
  4196c5:	ret    
  4196c6:	aaa    
  4196c7:	xor    DWORD PTR [ecx],edi
  4196c9:	inc    esi
  4196ca:	call   FWORD PTR ds:0xae7302ec
  4196d0:	nop
  4196d1:	xchg   ebx,eax
  4196d2:	or     BYTE PTR [ebx-0x379ec706],ch
  4196d8:	dec    ebp
  4196d9:	popa   
  4196da:	ficom  WORD PTR [ecx+0xd]
  4196dd:	lahf   
  4196de:	mov    esi,0x96eb1f25
  4196e3:	add    al,0xab
  4196e5:	pop    ebx
  4196e6:	call   FWORD PTR ds:0xffa7b5fb
  4196ec:	mov    esp,0x8d496564
  4196f1:	pop    ebp
  4196f2:	xchg   ebx,eax
  4196f3:	mov    al,ds:0x92c9689
  4196f8:	xor    eax,0x6a487f74
  4196fd:	adc    eax,0x460ff556
  419702:	mov    edx,0x648ec655
  419707:	iret   
  419708:	ret    
  419709:	loop   0x419765
  41970b:	daa    
  41970c:	add    edx,DWORD PTR [esi-0x37cccb67]
  419712:	inc    ebx
  419713:	cli    
  419714:	xchg   ebp,eax
  419715:	sti    
  419716:	push   cs
  419717:	mov    cl,BYTE PTR [edx]
  419719:	inc    edx
  41971a:	mov    al,0xa5
  41971c:	sub    DWORD PTR [edi-0x4b75e681],esp
  419722:	ins    DWORD PTR es:[edi],dx
  419723:	(bad)
  419726:	(bad)  
  419728:	test   BYTE PTR [ebx-0x274309d7],0x51
  41972f:	adc    DWORD PTR [ebp+0x4b],edx
  419732:	xchg   esp,eax
  419733:	sbb    cl,cl
  419735:	int    0x95
  419737:	je     0x4196d5
  419739:	fld    DWORD PTR [esi-0x13e20bbf]
  41973f:	fidiv  DWORD PTR [eax+0x7c]
  419742:	fsubr  DWORD PTR [ecx]
  419744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419745:	ret    0x90e0
  419748:	sahf   
  419749:	lods   al,BYTE PTR ds:[esi]
  41974a:	shl    DWORD PTR [esi-0x36d52b44],cl
  419750:	mov    dl,0x46
  419752:	out    dx,eax
  419753:	jns    0x1faa0db2
  419759:	mov    ah,0x87
  41975b:	sbb    DWORD PTR [edi+0x55],esp
  41975e:	sub    eax,0x40743375
  419763:	jo     0x4197b9
  419765:	fsubr  st(5),st
  419767:	or     eax,0xa5f0e62f
  41976c:	sbb    al,0x2b
  41976e:	jno    0x41973c
  419770:	pusha  
  419771:	mov    bh,0x19
  419773:	push   ds
  419774:	aas    
  419775:	dec    edi
  419776:	dec    edx
  419777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419778:	out    dx,eax
  419779:	sbb    DWORD PTR [esi+0x33116241],eax
  41977f:	test   BYTE PTR [ebx],dh
  419781:	(bad)  
  419782:	cmp    esp,edi
  419784:	jmp    0x419730
  419786:	pop    ebp
  419787:	jne    0x419738
  419789:	ins    BYTE PTR es:[edi],dx
  41978a:	mov    cl,0x3f
  41978c:	sbb    al,BYTE PTR [ebp+edi*8-0x25]
  419790:	pop    edi
  419791:	lods   eax,DWORD PTR ds:[esi]
  419792:	stc    
  419793:	loope  0x4197f2
  419795:	jbe    0x419813
  419797:	push   ebx
  419798:	jo     0x419810
  41979a:	push   esi
  41979b:	inc    ecx
  41979c:	or     cl,al
  41979e:	push   eax
  41979f:	push   0x22
  4197a1:	mov    ds:0x8317d6b3,eax
  4197a6:	vcmpss xmm3,xmm6,xmm0,0x6d
  4197ab:	fcomp  QWORD PTR [edx-0x69]
  4197ae:	mov    esi,0x3fb6dbea
  4197b3:	nop
  4197b4:	retf   
  4197b5:	mov    ah,0x93
  4197b7:	fldenv [ebp+0x1624e250]
  4197bd:	sar    BYTE PTR [esp+ecx*1-0x32],cl
  4197c1:	lahf   
  4197c2:	mov    dh,0x6c
  4197c4:	jg     0x4197b9
  4197c6:	call   0x89b5b7cd
  4197cb:	jmp    0x419808
  4197cd:	xor    eax,0xa460604d
  4197d2:	popa   
  4197d3:	jnp    0x419813
  4197d5:	push   es
  4197d6:	rcl    DWORD PTR [esi-0x78bb9196],cl
  4197dc:	std    
  4197dd:	jl     0x419833
  4197df:	push   ebp
  4197e0:	mov    dl,0x59
  4197e2:	pop    edx
  4197e3:	mov    esi,0x6f0325a1
  4197e8:	sub    dl,bl
  4197ea:	inc    esp
  4197eb:	mov    ebx,DWORD PTR [eax+0x1104609d]
  4197f1:	jo     0x41979b
  4197f3:	ss aaa 
  4197f5:	loopne 0x419832
  4197f7:	fbstp  TBYTE PTR [edx+ebx*1]
  4197fa:	mov    BYTE PTR [ebp+0x928b928],ah
  419800:	mul    DWORD PTR [ebx-0x23]
  419803:	pop    esi
  419804:	(bad)
  419808:	ret    
  419809:	xchg   edi,eax
  41980a:	arpl   WORD PTR [ebx],sp
  41980c:	ds int3 
  41980e:	jb     0x41982f
  419810:	retf   
  419811:	loop   0x4197bf
  419813:	stos   DWORD PTR es:[edi],eax
  419814:	push   esp
  419815:	iret   
  419816:	pop    ds
  419817:	das    
  419818:	fdiv   QWORD PTR [ecx+edi*1-0x3c73c0eb]
  41981f:	fsubp  st(2),st
  419821:	push   0x59
  419823:	xor    BYTE PTR [eax],ch
  419825:	sbb    ah,BYTE PTR [eax+0x42]
  419828:	dec    esp
  419829:	or     eax,0x4878923d
  41982e:	sub    cl,BYTE PTR [edx+0x77]
  419831:	pop    edi
  419832:	imul   eax,DWORD PTR [edi+0x55],0x1d
  419836:	out    0x95,eax
  419838:	cs loop 0x41985c
  41983b:	pop    esi
  41983c:	shl    DWORD PTR [ebx],cl
  41983e:	pop    eax
  41983f:	mov    eax,ds:0xebb2d113
  419844:	add    al,0x93
  419846:	lods   eax,DWORD PTR ds:[esi]
  419847:	sti    
  419848:	(bad)  
  419849:	into   
  41984a:	push   esp
  41984b:	pusha  
  41984c:	aad    0x75
  41984e:	scas   eax,DWORD PTR es:[edi]
  41984f:	sbb    ecx,eax
  419851:	fldenv [edx+0x45]
  419854:	mov    dh,0xd4
  419856:	data16 mov al,0x67
  419859:	pop    ds
  41985a:	repz test eax,0x15cc4971
  419860:	iret   
  419861:	mov    ds:0x3fe83040,al
  419866:	push   ebp
  419867:	jmp    0x873f94b5
  41986c:	jb     0x41985a
  41986e:	or     ebx,ebx
  419870:	loop   0x419867
  419872:	loope  0x419896
  419874:	shr    BYTE PTR [ebx-0x6f],cl
  419877:	xor    dh,dh
  419879:	into   
  41987a:	int    0x5
  41987c:	in     al,dx
  41987d:	bound  edi,QWORD PTR [eax]
  41987f:	dec    edx
  419880:	fucom  st(3)
  419882:	pop    ebp
  419883:	pop    gs
  419885:	call   0x86df:0x288627fe
  41988c:	fwait
  41988d:	cmp    eax,0xc3cd34a2
  419892:	jns    0x419870
  419894:	sahf   
  419895:	nop
  419896:	fist   WORD PTR [eax+0x74]
  419899:	sub    dh,BYTE PTR [edi+0x1b727715]
  41989f:	ja     0x419865
  4198a1:	add    edi,ecx
  4198a3:	xor    edx,edx
  4198a5:	push   es
  4198a6:	retf   
  4198a7:	aad    0xaf
  4198a9:	test   al,0x80
  4198ab:	xchg   edi,eax
  4198ac:	push   ebx
  4198ad:	shr    BYTE PTR [ebp+eiz*1-0x7e],cl
  4198b1:	(bad)  
  4198b2:	fcomp  QWORD PTR [eax]
  4198b4:	mov    esp,0x73e3e0fb
  4198b9:	icebp  
  4198ba:	xchg   esp,eax
  4198bb:	(bad)  
  4198bd:	and    BYTE PTR [eax],cl
  4198bf:	js     0x4198db
  4198c1:	daa    
  4198c2:	imul   ebp,DWORD PTR [edi],0xcf223bee
  4198c8:	mov    ch,0xcb
  4198ca:	ins    DWORD PTR es:[edi],dx
  4198cb:	stos   BYTE PTR es:[edi],al
  4198cc:	dec    ecx
  4198cd:	cmp    eax,DWORD PTR [edx+0x258e2420]
  4198d3:	xor    BYTE PTR [esi+esi*4],al
  4198d6:	in     eax,dx
  4198d7:	(bad)  
  4198d9:	jmp    0x419879
  4198db:	imul   ebp,DWORD PTR [esi+eax*1+0x71],0x23
  4198e0:	mov    dh,0x10
  4198e2:	dec    DWORD PTR [esp+edi*4+0x4d]
  4198e6:	inc    edi
  4198e7:	unpckhps xmm1,XMMWORD PTR [esi-0x479cfb7a]
  4198ee:	out    dx,al
  4198ef:	mov    ds:0xc4cc4f3a,al
  4198f4:	mov    bl,0x83
  4198f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198f7:	gs pop ecx
  4198f9:	sbb    BYTE PTR ds:0xfe9de548,bh
  4198ff:	xchg   DWORD PTR [edx+0x24af7ca8],eax
  419905:	pop    ebp
  419906:	retf   
  419907:	or     eax,0x5263ad5c
  41990c:	jecxz  0x4198fb
  41990e:	pop    edi
  41990f:	inc    edx
  419910:	loopne 0x41990c
  419912:	push   0x25
  419914:	add    ebx,0xc19866b6
  41991a:	sbb    bl,BYTE PTR [ecx-0x1048e3e9]
  419920:	fs cs or dl,dh
  419924:	leave  
  419925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419926:	sub    esp,DWORD PTR [ebx]
  419928:	fs aad 0x27
  41992b:	aad    0x89
  41992d:	jecxz  0x4199ad
  41992f:	bound  esp,QWORD PTR [ebx]
  419931:	test   BYTE PTR [esi+0x58e4e386],cl
  419937:	pop    ebp
  419938:	jo     0x419938
  41993a:	or     eax,0xa4c21701
  41993f:	inc    esi
  419940:	push   edx
  419941:	(bad)  
  419943:	int    0x97
  419945:	outs   dx,BYTE PTR ds:[esi]
  419946:	ins    DWORD PTR es:[edi],dx
  419947:	push   ebp
  419948:	and    eax,0x5f917b76
  41994d:	not    BYTE PTR [edi-0x6c]
  419950:	(bad)  
  419951:	jno    0x4198f5
  419953:	and    dl,dl
  419955:	in     al,0xb8
  419957:	(bad)  
  419958:	test   al,0xe5
  41995a:	sti    
  41995b:	fs jmp 0x1ea5:0x5dc99d0a
  419963:	mov    al,ds:0xfea81fe2
  419968:	ret    
  419969:	movd   mm3,ebp
  41996c:	scas   al,BYTE PTR es:[edi]
  41996d:	lods   al,BYTE PTR ds:[esi]
  41996e:	adc    al,0xf2
  419970:	pop    ss
  419971:	cwde   
  419972:	mov    ah,0xe2
  419974:	mov    ebx,0x8141b68d
  419979:	mov    edi,0xe1877df7
  41997e:	clc    
  41997f:	rol    DWORD PTR [esi+0x61],1
  419982:	mov    BYTE PTR [edi],ah
  419984:	nop
  419985:	imul   ebx,ecx,0x63
  419988:	sbb    DWORD PTR [eax-0x4269ab46],ebp
  41998e:	fistp  QWORD PTR [ebx]
  419990:	(bad)  
  419991:	adc    al,0xd0
  419993:	jmp    0xdcc047d9
  419998:	clc    
  419999:	jmp    0x118a:0xce1c54c9
  4199a0:	cld    
  4199a1:	pop    ecx
  4199a2:	sub    ah,dh
  4199a4:	pop    es
  4199a5:	or     eax,0xc4b7a842
  4199aa:	mov    ecx,0x70e032cb
  4199af:	xchg   DWORD PTR [edx+0xd],eax
  4199b2:	jns    0x419969
  4199b4:	out    dx,eax
  4199b5:	and    DWORD PTR [esi-0x5c],eax
  4199b8:	and    bh,BYTE PTR [ebx-0x132b28d4]
  4199be:	dec    esi
  4199bf:	jecxz  0x419a36
  4199c1:	mov    edi,0x60de1daa
  4199c6:	lods   al,BYTE PTR ds:[esi]
  4199c7:	out    dx,al
  4199c8:	daa    
  4199c9:	and    bl,bl
  4199cb:	ret    
  4199cc:	dec    esp
  4199cd:	mov    ecx,0x71b4a160
  4199d2:	mov    cl,dl
  4199d4:	jmp    0x54a5:0x2dcf59cc
  4199db:	dec    eax
  4199dc:	rcr    BYTE PTR [ebx],1
  4199de:	push   cs
  4199df:	jnp    0x419a15
  4199e1:	rol    edx,0x95
  4199e4:	inc    ecx
  4199e5:	dec    esi
  4199e6:	gs push ecx
  4199e8:	pop    ebx
  4199e9:	mov    ah,0x3c
  4199eb:	sub    edi,DWORD PTR [edi]
  4199ed:	lods   eax,DWORD PTR ds:[esi]
  4199ee:	dec    eax
  4199ef:	gs repnz mov edx,0xb012c336
  4199f6:	pop    es
  4199f7:	dec    esp
  4199f8:	pop    es
  4199f9:	mov    eax,ds:0x7a155f43
  4199fe:	aam    0x3f
  419a00:	lods   eax,DWORD PTR ds:[esi]
  419a01:	xor    al,0x3a
  419a03:	clc    
  419a04:	and    edi,DWORD PTR [edx+0x131c8ffa]
  419a0a:	inc    ebx
  419a0b:	repnz rcl DWORD PTR [edx+eiz*8],0xbb
  419a10:	xor    DWORD PTR [ebx+edx*4],eax
  419a13:	(bad)  
  419a14:	iret   
  419a15:	clc    
  419a16:	aad    0x8e
  419a18:	or     DWORD PTR [eax+esi*1-0x7c],eax
  419a1c:	dec    edi
  419a1d:	das    
  419a1e:	jp     0x4199e5
  419a20:	mov    eax,ds:0x6c0b2221
  419a25:	push   ss
  419a26:	add    BYTE PTR [ebp-0x79],cl
  419a29:	mov    ds:0xc8a869f3,eax
  419a2e:	and    esp,0xa84b69c9
  419a34:	out    0xc6,al
  419a36:	popa   
  419a37:	xchg   ebx,eax
  419a38:	pop    esi
  419a39:	call   0x2e16c5b3
  419a3e:	(bad)  
  419a3f:	jl     0x4199cd
  419a41:	out    0x91,eax
  419a43:	cdq    
  419a44:	fwait
  419a45:	lods   al,BYTE PTR ds:[esi]
  419a46:	cmp    al,0x58
  419a48:	(bad)  
  419a49:	or     eax,0x4bf9d550
  419a4e:	das    
  419a4f:	lods   eax,DWORD PTR ds:[esi]
  419a50:	in     al,0x94
  419a52:	mov    DWORD PTR cs:[ecx],ebx
  419a55:	into   
  419a56:	mov    WORD PTR [eax+0x19],es
  419a59:	dec    esp
  419a5a:	fbld   TBYTE PTR [ebp+0x760ed38d]
  419a60:	mov    ch,0x9e
  419a62:	ds xor bh,dl
  419a65:	add    DWORD PTR [ebp-0x24],edx
  419a68:	and    ch,BYTE PTR [ebx-0x56ae802e]
  419a6e:	push   eax
  419a6f:	mov    edi,0xbc854add
  419a74:	pop    es
  419a75:	stos   BYTE PTR es:[edi],al
  419a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a77:	push   edi
  419a78:	repnz loopne 0x419a65
  419a7b:	cmp    BYTE PTR [ebx-0x25c1b8ff],0xb5
  419a82:	in     eax,0x81
  419a84:	(bad)  
  419a85:	pop    ss
  419a86:	cmp    BYTE PTR [ebp-0x4f],bh
  419a89:	cli    
  419a8a:	lods   al,BYTE PTR ds:[esi]
  419a8b:	fcmovnb st,st(6)
  419a8d:	push   ebx
  419a8e:	cmp    BYTE PTR [ebx+esi*1],ah
  419a91:	outs   dx,BYTE PTR ds:[esi]
  419a92:	repz sti 
  419a94:	mul    BYTE PTR [edi]
  419a96:	cmp    eax,esp
  419a98:	or     DWORD PTR [ecx+0x12],esp
  419a9b:	mov    dh,0xb6
  419a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a9e:	icebp  
  419a9f:	dec    eax
  419aa0:	fmulp  st(1),st
  419aa2:	inc    edi
  419aa3:	fdiv   QWORD PTR [ebx+0x77]
  419aa6:	jmp    0x419ac5
  419aa8:	adc    bl,BYTE PTR [ebx]
  419aaa:	mul    BYTE PTR [eax]
  419aac:	sbb    cl,dh
  419aae:	outs   dx,DWORD PTR ds:[esi]
  419aaf:	cmp    cl,BYTE PTR [ecx]
  419ab1:	pop    ebx
  419ab2:	sbb    dh,BYTE PTR [edx-0x189f034a]
  419ab8:	xor    DWORD PTR [edx+0x45],0x71
  419abc:	iret   
  419abd:	scas   eax,DWORD PTR es:[edi]
  419abe:	jns    0x419b2c
  419ac0:	xchg   DWORD PTR [edx-0x40],eax
  419ac3:	mov    eax,0xb1fb20af
  419ac8:	adc    dh,ah
  419aca:	outs   dx,BYTE PTR ds:[esi]
  419acb:	lock mov DWORD PTR [ecx],eax
  419ace:	mov    esp,0x85873b4d
  419ad3:	call   FWORD PTR [edi-0x111ea6c]
  419ad9:	inc    ebx
  419ada:	fs jo  0x419aec
  419add:	imul   esi,DWORD PTR [edi],0xf4e2e8f3
  419ae3:	jmp    DWORD PTR [ebx]
  419ae5:	cmp    al,0x93
  419ae7:	scas   eax,DWORD PTR es:[edi]
  419ae8:	imul   ecx,ebp,0x3
  419aeb:	pop    ebp
  419aec:	std    
  419aed:	rcr    cl,1
  419aef:	xchg   edx,eax
  419af0:	pop    esp
  419af1:	push   0x30
  419af3:	cwde   
  419af4:	cld    
  419af5:	pop    esi
  419af6:	call   0xf8b8:0x54e21436
  419afd:	dec    edi
  419afe:	xor    al,0x66
  419b00:	in     al,0x57
  419b02:	dec    ebx
  419b03:	das    
  419b04:	jae    0x419aab
  419b06:	mov    DWORD PTR [ebp*4-0x18715a0a],edx
  419b0d:	rcl    BYTE PTR [edi-0x192ed79d],0xcb
  419b14:	adc    BYTE PTR ds:0x6ddb3129,0xe3
  419b1b:	(bad)  
  419b1c:	rcl    BYTE PTR [ebx+0x49c30a76],1
  419b22:	jg     0x419b07
  419b24:	pop    edi
  419b25:	popa   
  419b26:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  419b28:	lahf   
  419b29:	jb     0x419b4f
  419b2b:	das    
  419b2c:	xor    bl,ch
  419b2e:	jmp    0xf3e5:0xf75ca326
  419b35:	and    al,0x66
  419b37:	pop    esp
  419b38:	lods   al,BYTE PTR ds:[esi]
  419b39:	mov    ?,WORD PTR [eax+0x7f]
  419b3c:	popa   
  419b3d:	sbb    DWORD PTR [edi+esi*1-0x6d],edi
  419b41:	shr    BYTE PTR [eax-0x29],0x64
  419b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b46:	inc    DWORD PTR [ebx-0x22]
  419b49:	cli    
  419b4a:	clc    
  419b4b:	push   ebx
  419b4c:	xor    eax,0x30cad69f
  419b51:	sbb    DWORD PTR [ebp+0x66],ebp
  419b54:	ret    0xe084
  419b57:	inc    edi
  419b58:	pop    esp
  419b59:	retf   
  419b5a:	jo     0x419b19
  419b5c:	sar    BYTE PTR [esi+0x709dadb8],cl
  419b62:	imul   edi,esp,0x1af95cbf
  419b68:	inc    edx
  419b69:	sub    DWORD PTR [eax-0x80],edi
  419b6c:	nop
  419b6d:	mov    ebx,0xc1e355a0
  419b72:	dec    esi
  419b73:	jp     0x419af6
  419b75:	xor    BYTE PTR [edx-0x4a],al
  419b78:	add    ebx,DWORD PTR [ebp+0x295fbb4a]
  419b7e:	test   al,0xc8
  419b80:	push   0x9653f7bb
  419b85:	fidivr DWORD PTR [ebx-0x2d09c20f]
  419b8b:	daa    
  419b8c:	pop    ebx
  419b8d:	mov    al,ds:0xb47ca943
  419b92:	in     eax,0x11
  419b94:	icebp  
  419b95:	and    BYTE PTR [esi],0xf9
  419b98:	test   BYTE PTR ds:[eax-0x2b],ah
  419b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b9d:	retf   0xf2be
  419ba0:	fidivr WORD PTR [eax]
  419ba2:	in     eax,0x72
  419ba4:	mov    esp,0xd62d136c
  419ba9:	ror    BYTE PTR [ebx-0x6d],cl
  419bac:	cmp    BYTE PTR [ebx],dl
  419bae:	mov    edi,0xb9252c37
  419bb3:	mov    eax,0xf7fd5b6f
  419bb9:	test   BYTE PTR [ecx+0x3e],dh
  419bbc:	or     edi,DWORD PTR [ebx+0x78922545]
  419bc2:	pop    ss
  419bc3:	push   esi
  419bc4:	xchg   DWORD PTR [edx-0xe],eax
  419bc7:	das    
  419bc8:	xchg   BYTE PTR [ebp-0x9],bl
  419bcb:	loopne 0x419c43
  419bcd:	push   es
  419bce:	or     ah,0x31
  419bd1:	push   ecx
  419bd2:	outs   dx,DWORD PTR ds:[esi]
  419bd3:	sub    DWORD PTR [ebx+0x62],0x61
  419bd7:	jge    0x419bec
  419bd9:	adc    BYTE PTR [ebx-0x33f28a23],al
  419bdf:	sub    al,0xd
  419be1:	inc    ecx
  419be2:	scas   eax,DWORD PTR es:[edi]
  419be3:	cmp    ch,dl
  419be5:	xor    dh,BYTE PTR [ebp+0x557274e]
  419beb:	push   cs
  419bec:	call   ebx
  419bee:	mov    edi,DWORD PTR [ebx]
  419bf0:	jo     0x419c38
  419bf2:	pop    ebx
  419bf3:	pop    ecx
  419bf4:	push   esp
  419bf5:	in     al,dx
  419bf6:	movd   eax,mm5
  419bf9:	sbb    eax,0x7ce1efda
  419bfe:	repz mov ds:0x6772c101,eax
  419c04:	imul   esp,DWORD PTR [ebp-0x3b],0xfffffffc
  419c08:	popa   
  419c09:	push   esi
  419c0a:	push   esi
  419c0b:	mov    edi,0xf09e33c
  419c10:	cmp    al,0xdc
  419c12:	mov    edx,0x1924baa8
  419c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c18:	popa   
  419c19:	pop    ebp
  419c1a:	in     al,dx
  419c1b:	fs xchg ebp,eax
  419c1d:	jmp    0xc1859046
  419c22:	icebp  
  419c23:	out    0x44,al
  419c25:	ins    BYTE PTR es:[edi],dx
  419c26:	jge    0x419bf2
  419c28:	ror    DWORD PTR [ebx],cl
  419c2a:	popf   
  419c2b:	mov    bh,0xfe
  419c2d:	dec    esp
  419c2e:	test   al,0x71
  419c30:	mov    cs,WORD PTR [ebp+0x4a3a4799]
  419c36:	cmp    DWORD PTR [esi+0x22],ebp
  419c39:	pop    esp
  419c3a:	pop    es
  419c3b:	cwde   
  419c3c:	fidiv  DWORD PTR [edx-0x7a4ae9e3]
  419c42:	pop    esp
  419c43:	imul   ebp,DWORD PTR [ecx-0x7b94c05a],0x2e9061ed
  419c4d:	aas    
  419c4e:	and    ebx,DWORD PTR [eax+0x686961a2]
  419c54:	and    dh,BYTE PTR [ecx-0x68]
  419c57:	daa    
  419c58:	pop    esp
  419c59:	sub    ebx,esi
  419c5b:	mov    esp,0xf66958b3
  419c60:	add    DWORD PTR [esp+esi*1-0xe],0xbb71b035
  419c68:	int    0x14
  419c6a:	mov    al,ds:0x7a40af9d
  419c6f:	cmp    eax,0xb31e8776
  419c74:	mov    dh,0xd
  419c76:	aad    0x43
  419c78:	jo     0x419c3b
  419c7a:	xchg   BYTE PTR [esp+eax*1],dh
  419c7d:	dec    esp
  419c7e:	dec    esi
  419c7f:	ja     0x419c06
  419c81:	cdq    
  419c82:	(bad)  
  419c83:	shl    BYTE PTR [edx-0x1bc7e64b],cl
  419c89:	mov    DWORD PTR [ebp+edx*8+0x701fb8b0],ecx
  419c90:	dec    eax
  419c91:	dec    ebx
  419c92:	fwait
  419c93:	xlat   BYTE PTR ds:[ebx]
  419c94:	in     al,dx
  419c95:	(bad)  
  419c96:	fnstsw WORD PTR [eax+0xc]
  419c99:	xor    al,0xb2
  419c9b:	ficom  WORD PTR [esi-0x37fa418f]
  419ca1:	pop    ss
  419ca2:	sub    al,0xef
  419ca4:	mov    ebx,0xfb251ce4
  419ca9:	retf   0x3d3
  419cac:	mov    ds:0x9963bcca,eax
  419cb1:	shl    cl,1
  419cb3:	retf   0x969e
  419cb6:	dec    esp
  419cb7:	icebp  
  419cb8:	push   ecx
  419cb9:	cmp    bh,BYTE PTR [edi]
  419cbb:	popf   
  419cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbd:	mov    esi,0xa91c9e7c
  419cc2:	xchg   ebp,eax
  419cc3:	pop    ebp
  419cc4:	push   0xe0df6bef
  419cc9:	sub    eax,ebx
  419ccb:	add    eax,0x41e7982e
  419cd0:	push   cs
  419cd1:	sti    
  419cd2:	jmp    0x31210e2b
  419cd7:	leave  
  419cd8:	adc    al,0xe
  419cda:	jmp    0x419d2c
  419cdc:	or     DWORD PTR [esi-0x34ad8110],ebx
  419ce2:	adc    edi,DWORD PTR [esi+edx*2-0x782b6189]
  419ce9:	inc    ecx
  419cea:	mov    ebp,edi
  419cec:	cdq    
  419ced:	out    0xdb,al
  419cef:	mov    ch,BYTE PTR [ecx+ecx*4-0x70]
  419cf3:	repz les ecx,FWORD PTR [si+0x22]
  419cf8:	push   0x1f
  419cfa:	xchg   sp,ax
  419cfc:	pop    ebx
  419cfd:	xchg   esi,eax
  419cfe:	mov    esp,0x58ea6157
  419d03:	popf   
  419d04:	es jnp 0x419ca1
  419d07:	imul   eax,edx,0x44
  419d0a:	std    
  419d0b:	enter  0x94a7,0x49
  419d0f:	inc    edx
  419d10:	int3   
  419d11:	pop    ebx
  419d12:	out    dx,al
  419d13:	adc    eax,0xab9e4392
  419d18:	retf   0x61f1
  419d1b:	add    al,0x22
  419d1d:	cwde   
  419d1e:	fldpi  
  419d20:	shr    BYTE PTR [edx],cl
  419d22:	xchg   ecx,eax
  419d23:	push   esi
  419d24:	mov    cl,0xb2
  419d26:	push   ebp
  419d27:	aas    
  419d28:	lock add eax,0x65316305
  419d2e:	scas   eax,DWORD PTR es:[edi]
  419d2f:	sub    BYTE PTR [ebx+0x11],dl
  419d32:	scas   al,BYTE PTR es:[edi]
  419d33:	cdq    
  419d34:	inc    ebx
  419d35:	cmp    ebx,ebp
  419d37:	jmp    0xc107:0xf185bcad
  419d3e:	jp     0x419d37
  419d40:	push   ebp
  419d41:	int3   
  419d42:	adc    eax,0x24f1514e
  419d47:	ja     0x419d0c
  419d49:	cmc    
  419d4a:	aam    0xb3
  419d4c:	mov    ch,0xb5
  419d4e:	lock fcmove st,st(7)
  419d51:	iret   
  419d52:	add    DWORD PTR [edi+0xd],eax
  419d55:	imul   esp,DWORD PTR [ebx+0x5b5cc6e8],0xffffffd1
  419d5c:	and    dh,bl
  419d5e:	jo     0x419d76
  419d60:	push   ds
  419d61:	jg     0x419d69
  419d63:	xchg   esp,eax
  419d64:	ss int 0x1c
  419d67:	cdq    
  419d68:	push   ebx
  419d69:	rol    ecx,cl
  419d6b:	jbe    0x419d0f
  419d6d:	jle    0x419dce
  419d6f:	(bad)  
  419d71:	inc    edx
  419d72:	xchg   ebp,eax
  419d73:	push   ecx
  419d74:	in     al,dx
  419d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d76:	jmp    0x8f8cd47f
  419d7b:	push   cs
  419d7c:	inc    edi
  419d7d:	adc    edi,ebx
  419d7f:	push   edi
  419d80:	test   al,0x92
  419d82:	cli    
  419d83:	int    0x66
  419d85:	mov    ebx,0x12258da4
  419d8a:	jne    0x419d98
  419d8c:	or     ch,BYTE PTR [eax]
  419d8e:	fwait
  419d8f:	inc    eax
  419d90:	not    DWORD PTR [edx-0x3610c05a]
  419d96:	mov    bl,0x51
  419d98:	xlat   BYTE PTR ds:[ebx]
  419d99:	fadd   st,st(0)
  419d9b:	push   ebx
  419d9c:	(bad)  
  419d9d:	les    edi,FWORD PTR [ecx+0x389bc0bc]
  419da3:	xchg   ebx,eax
  419da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da5:	jmp    0x419d52
  419da7:	das    
  419da8:	stc    
  419da9:	cmp    BYTE PTR [esi-0x18],cl
  419dac:	inc    ebp
  419dad:	xchg   esp,eax
  419dae:	jb     0x419d39
  419db0:	neg    DWORD PTR [edi+0x17]
  419db3:	imul   ebx,edi,0x52
  419db6:	outs   dx,BYTE PTR ds:[esi]
  419db7:	aaa    
  419db8:	ins    DWORD PTR es:[edi],dx
  419db9:	rcr    BYTE PTR [esi],1
  419dbb:	jae    0x419dc3
  419dbd:	adc    al,0x4a
  419dbf:	jge    0x419dfa
  419dc1:	add    DWORD PTR [eax+0x3d],ebx
  419dc4:	and    esi,DWORD PTR [esi-0x63]
  419dc7:	jg     0x419dfd
  419dc9:	cwde   
  419dca:	inc    ebx
  419dcb:	xchg   ebx,eax
  419dcc:	push   eax
  419dcd:	and    cl,dh
  419dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd0:	ins    DWORD PTR es:[edi],dx
  419dd1:	mov    ah,al
  419dd3:	jp     0x419dd0
  419dd5:	cmc    
  419dd6:	pop    edx
  419dd7:	fcmovnu st,st(5)
  419dd9:	mov    eax,0x4e00ee78
  419dde:	in     al,0xb4
  419de0:	rcl    BYTE PTR [eiz*2-0x7186820f],cl
  419de7:	mov    esp,0xa1278f57
  419dec:	or     al,BYTE PTR ds:0x1bed330f
  419df2:	jno    0x419df8
  419df4:	cdq    
  419df5:	xchg   ebx,eax
  419df6:	fldenv [ecx+edi*4+0x1d]
  419dfa:	mov    edi,0x7c442b6f
  419dff:	aad    0x15
  419e01:	je     0x419dd4
  419e03:	mov    bl,0x96
  419e05:	jae    0x419db0
  419e07:	(bad)  
  419e08:	push   esi
  419e09:	dec    BYTE PTR [ebx+0x6e]
  419e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e0d:	retf   0xb229
  419e10:	mov    dh,0x44
  419e12:	jb     0x419e2c
  419e14:	dec    eax
  419e15:	sub    edi,DWORD PTR [ebx+0x56018a40]
  419e1b:	sbb    al,0xea
  419e1d:	shr    esi,1
  419e1f:	xchg   esp,eax
  419e20:	jecxz  0x419e14
  419e22:	jecxz  0x419e15
  419e24:	mov    ch,0xa3
  419e26:	sbb    BYTE PTR [ebx-0x5a],bl
  419e29:	test   BYTE PTR [esi],bl
  419e2b:	and    al,0xfc
  419e2d:	ret    
  419e2e:	mov    DWORD PTR [ebp+0x0],ebx
  419e31:	adc    eax,0x879fd2e1
  419e36:	push   ecx
  419e37:	adc    ebp,DWORD PTR [edi]
  419e39:	out    dx,al
  419e3a:	loopne 0x419e46
  419e3c:	es jbe 0x419ded
  419e3f:	(bad)  
  419e40:	mov    ah,0xcc
  419e42:	jle    0x419e59
  419e44:	icebp  
  419e45:	xor    al,0x9
  419e47:	push   0xffffff96
  419e49:	pop    edi
  419e4a:	inc    eax
  419e4b:	pushf  
  419e4c:	add    BYTE PTR [ecx-0x178918c6],dl
  419e52:	fist   WORD PTR [edx-0x6b]
  419e55:	sub    eax,0xb1e98147
  419e5a:	scas   al,BYTE PTR es:[edi]
  419e5b:	push   edi
  419e5c:	dec    edi
  419e5d:	sub    BYTE PTR [ecx+0x671d68c1],0x21
  419e64:	test   edx,esp
  419e66:	iret   
  419e67:	mov    dh,0x72
  419e69:	xor    esp,eax
  419e6b:	sub    dl,cl
  419e6d:	sub    bh,ah
  419e6f:	adc    edi,DWORD PTR [ebx+0x4e]
  419e72:	mov    ch,0x94
  419e74:	push   0xffffffa4
  419e76:	and    dl,BYTE PTR [edx+eiz*1+0x776215c2]
  419e7d:	mov    eax,ds:0xd54dfc7e
  419e82:	lea    ebx,[ebx-0x13b553d4]
  419e88:	sbb    DWORD PTR [ecx-0x611ce6c1],ebp
  419e8e:	pop    ecx
  419e8f:	sbb    ebx,DWORD PTR [eax]
  419e91:	dec    ebp
  419e92:	adc    eax,0x83087c0b
  419e97:	inc    edi
  419e98:	sbb    DWORD PTR [edx+0x18874d78],ecx
  419e9e:	fcom   QWORD PTR [esp+eax*1+0x8]
  419ea2:	cwde   
  419ea3:	mov    bh,0x33
  419ea5:	mov    ds:0xb77cdc9,al
  419eaa:	retf   0xc0c9
  419ead:	add    ebp,DWORD PTR [eax]
  419eaf:	sbb    eax,DWORD PTR [edx]
  419eb1:	push   ss
  419eb2:	loopne 0x419ec7
  419eb4:	mov    edi,ebx
  419eb6:	mov    eax,0xa8b28a53
  419ebb:	xor    ebx,0xffffff9b
  419ebe:	mov    dl,0xa4
  419ec0:	mul    BYTE PTR [edx]
  419ec2:	or     bh,dl
  419ec4:	jmp    0xc245:0x4fd9f591
  419ecb:	xor    eax,0xd25a220c
  419ed0:	outs   dx,BYTE PTR ds:[esi]
  419ed1:	or     BYTE PTR [ebx],dh
  419ed3:	xchg   edx,eax
  419ed4:	adc    BYTE PTR [edx-0xb],cl
  419ed7:	jmp    0x864c:0x1cb60ef
  419ede:	sbb    al,BYTE PTR [ebp+ebp*2-0x5d]
  419ee2:	ret    
  419ee3:	ficomp DWORD PTR [eax]
  419ee5:	push   0xffffffef
  419ee7:	je     0x419f15
  419ee9:	(bad)  
  419eea:	cld    
  419eeb:	cmp    dh,bl
  419eed:	inc    esi
  419eee:	sub    DWORD PTR [ebp-0x3686284d],ebp
  419ef4:	adc    al,BYTE PTR [eax]
  419ef6:	add    edx,DWORD PTR [edx+ecx*2-0x59ee083d]
  419efd:	mov    ah,0x6
  419eff:	mov    ah,0xf0
  419f01:	cmp    eax,0x8de9b4d7
  419f06:	hlt    
  419f07:	imul   ebx,DWORD PTR [edi-0x5f],0x2c
  419f0b:	dec    esp
  419f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f0d:	push   ss
  419f0e:	sbb    al,BYTE PTR [ecx+ebx*2+0x33dd4cdd]
  419f15:	fcom   st(4)
  419f17:	xor    BYTE PTR [ebx+0x739d5eb7],0x52
  419f1e:	xlat   BYTE PTR ds:[ebx]
  419f1f:	ins    BYTE PTR es:[edi],dx
  419f20:	sbb    ah,BYTE PTR [esi+0x1f38c3a1]
  419f26:	or     BYTE PTR [esi-0x4d],0x4e
  419f2a:	jmp    0x7d692158
  419f2f:	mov    ds:0xdbbea97d,al
  419f34:	mov    edi,0x16308b5d
  419f39:	bound  edi,QWORD PTR [ebx]
  419f3b:	adc    dl,cl
  419f3d:	out    dx,al
  419f3e:	in     eax,dx
  419f3f:	repz retf 0x233b
  419f43:	mov    edi,0x20041d8b
  419f48:	xor    DWORD PTR [esi+0x23],ebp
  419f4b:	sub    al,0xe0
  419f4d:	mov    ebp,DWORD PTR [esi-0x29]
  419f50:	or     al,0xc3
  419f52:	int    0xfa
  419f54:	add    bl,BYTE PTR [edx+0x63]
  419f57:	mov    ebp,0xa268264f
  419f5c:	pusha  
  419f5d:	and    ah,dh
  419f5f:	push   ebp
  419f60:	xor    BYTE PTR [ecx+edx*2],ah
  419f63:	xor    esi,eax
  419f65:	xchg   esi,eax
  419f66:	sub    al,0x4f
  419f68:	xor    eax,0xcac19f65
  419f6d:	inc    edi
  419f6e:	adc    al,0xb8
  419f70:	push   esi
  419f71:	movzx  edi,sp
  419f74:	ret    
  419f75:	repz mov edi,0xc2caa751
  419f7b:	ficom  DWORD PTR [ebx]
  419f7d:	or     bh,BYTE PTR [ebx-0x65]
  419f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f81:	pop    edi
  419f82:	(bad)  
  419f84:	jp     0x419f48
  419f86:	fcomp  QWORD PTR [esi+0x2e01109d]
  419f8c:	mov    dh,0x38
  419f8e:	lods   al,BYTE PTR ds:[esi]
  419f8f:	(bad)  
  419f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f91:	add    ch,BYTE PTR [ebp+edi*1+0x3767e98f]
  419f98:	xor    esi,DWORD PTR [edx]
  419f9a:	cwde   
  419f9b:	and    esp,ebp
  419f9d:	call   0xb8065edf
  419fa2:	repnz mov cs:0xcdbc1839,eax
  419fa9:	mov    edi,0xa1cd572d
  419fae:	adc    ah,cl
  419fb0:	call   0xfa341856
  419fb5:	xor    esp,DWORD PTR [ecx]
  419fb7:	retf   
  419fb8:	popf   
  419fb9:	popa   
  419fba:	xchg   esi,eax
  419fbb:	push   cs
  419fbc:	jne    0x41a027
  419fbe:	int3   
  419fbf:	call   0xf8ab5f9e
  419fc4:	mov    ecx,0x5f4a6f5c
  419fc9:	xchg   edi,eax
  419fca:	or     edx,DWORD PTR [edi]
  419fcc:	sub    al,BYTE PTR [eax-0x3484149a]
  419fd2:	icebp  
  419fd3:	jmp    0x419fd9
  419fd5:	xchg   esi,eax
  419fd6:	adc    BYTE PTR [esi],dh
  419fd8:	aaa    
  419fd9:	sub    al,0x4d
  419fdb:	xor    ch,dh
  419fdd:	sub    al,BYTE PTR [esi-0x79]
  419fe0:	scas   al,BYTE PTR es:[edi]
  419fe1:	jb     0x419fc4
  419fe3:	hlt    
  419fe4:	cmp    al,0xd9
  419fe6:	fcomp  QWORD PTR [ebx]
  419fe8:	xor    BYTE PTR [bx-0x3e],dh
  419fec:	sub    esp,DWORD PTR [edi]
  419fee:	pop    es
  419fef:	jle    0x419fcc
  419ff1:	mov    WORD PTR [edx+0x7270048b],?
  419ff7:	pop    edx
  419ff8:	sti    
  419ff9:	jo     0x41a078
  419ffb:	pop    es
  419ffc:	dec    ebp
  419ffd:	push   esi
  419ffe:	and    DWORD PTR [eax+0x7f28b9a7],esp
  41a004:	mov    ebx,0xf1441be1
  41a009:	mov    eax,ds:0x52475d30
  41a00e:	push   esi
  41a00f:	bound  edi,QWORD PTR [esi+0x8]
  41a012:	(bad)  
  41a014:	xchg   ebx,eax
  41a015:	mov    WORD PTR [ecx],fs
  41a017:	sbb    DWORD PTR ds:0x1ae70dee,0xffffffab
  41a01e:	adc    DWORD PTR [ecx],eax
  41a020:	sbb    al,0xf4
  41a022:	rcr    BYTE PTR [eax+0x3c37553b],0xf3
  41a029:	fimul  WORD PTR [ebp+0x3a]
  41a02c:	test   eax,0x66d7f1a4
  41a031:	jecxz  0x419fbb
  41a033:	lods   al,BYTE PTR ds:[esi]
  41a034:	mov    ebp,0xdbc4d088
  41a039:	cmp    DWORD PTR [ecx],ecx
  41a03b:	cs cmp eax,0xc3f10f02
  41a041:	lea    edi,[esi+0x50]
  41a044:	add    ebp,DWORD PTR [edi+ecx*2+0x2d710c3e]
  41a04b:	sub    ecx,esi
  41a04d:	xchg   edx,eax
  41a04e:	xor    eax,0xb01a7870
  41a053:	bound  esi,QWORD PTR [edi]
  41a055:	mov    DWORD PTR [ebx+0x15159bf3],ebp
  41a05b:	aaa    
  41a05c:	ret    
  41a05d:	jmp    0xf8bb:0x8e5bf41b
  41a064:	cmp    DWORD PTR [eax+0x56b4806b],esi
  41a06a:	or     eax,0xde6af777
  41a06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a070:	dec    ecx
  41a071:	mov    bl,0x39
  41a073:	int3   
  41a074:	dec    ebp
  41a075:	hlt    
  41a076:	mov    eax,0x654093c6
  41a07b:	dec    esp
  41a07c:	out    0x6f,eax
  41a07e:	leave  
  41a07f:	mov    eax,ds:0x5cd6de3a
  41a084:	pop    ds
  41a085:	jo     0x41a04b
  41a087:	mov    ecx,0x30e37f60
  41a08c:	push   0x9c226f84
  41a091:	scas   eax,DWORD PTR es:[edi]
  41a092:	sub    ah,BYTE PTR [edi-0x847c34f]
  41a098:	pop    eax
  41a099:	xchg   ecx,eax
  41a09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a09b:	pusha  
  41a09c:	aam    0x62
  41a09e:	ret    
  41a09f:	ret    0x9f80
  41a0a2:	shl    BYTE PTR [ecx+0x338487ef],1
  41a0a8:	mov    bh,0xdf
  41a0aa:	xchg   ebp,eax
  41a0ab:	jle    0x41a11a
  41a0ad:	mov    cl,0x8e
  41a0af:	nop
  41a0b0:	shl    dh,1
  41a0b2:	jl     0x41a063
  41a0b4:	mov    edx,0xd61eb337
  41a0b9:	sbb    DWORD PTR [ecx+esi*2-0x4f],ebp
  41a0bd:	inc    ecx
  41a0be:	inc    edi
  41a0bf:	sbb    DWORD PTR [ebp-0x4b],edx
  41a0c2:	aas    
  41a0c3:	mov    WORD PTR [ebx],ds
  41a0c5:	das    
  41a0c6:	loopne 0x41a050
  41a0c8:	test   BYTE PTR [edi+0x6],dl
  41a0cb:	sub    BYTE PTR [eax+0x3e2357f1],ch
  41a0d1:	dec    ecx
  41a0d2:	or     al,0x37
  41a0d4:	fcomp  st(7)
  41a0d6:	nop
  41a0d7:	jne    0x41a0a3
  41a0d9:	xchg   esi,eax
  41a0da:	add    eax,0x91143fce
  41a0df:	ins    BYTE PTR es:[edi],dx
  41a0e0:	sub    DWORD PTR [esi-0x52],ebp
  41a0e3:	outs   dx,BYTE PTR ds:[esi]
  41a0e4:	ja     0x41a0fb
  41a0e6:	popa   
  41a0e7:	data16 adc dl,BYTE PTR [ebx+ecx*1]
  41a0eb:	jmp    0x8cef:0x2ba879ea
  41a0f2:	mov    eax,ds:0xd178e73d
  41a0f7:	ja     0x41a094
  41a0f9:	ins    DWORD PTR es:[edi],dx
  41a0fa:	daa    
  41a0fb:	xor    ah,BYTE PTR [eax-0x14]
  41a0fe:	das    
  41a0ff:	push   ebp
  41a100:	or     eax,0x53803f72
  41a105:	mov    esp,0x23a8ef6
  41a10a:	mov    dh,0x84
  41a10c:	test   BYTE PTR [ebx],ch
  41a10e:	aad    0x2d
  41a110:	pusha  
  41a111:	adc    al,0xa0
  41a113:	aad    0xda
  41a115:	mov    edi,esi
  41a117:	iret   
  41a118:	popa   
  41a119:	popa   
  41a11a:	daa    
  41a11b:	retf   0x9e33
  41a11e:	push   edi
  41a11f:	dec    edx
  41a120:	shl    DWORD PTR [eax],0x58
  41a123:	retf   
  41a124:	or     ah,BYTE PTR [edi+0x19]
  41a127:	lea    esi,[edx-0x1ff82029]
  41a12d:	out    dx,al
  41a12e:	cmp    eax,0x5fec475f
  41a133:	mov    al,ds:0xa26ac637
  41a138:	jle    0x41a1b5
  41a13a:	cmp    DWORD PTR [ebx],ebp
  41a13c:	fmul   DWORD PTR [edi-0x4a]
  41a13f:	dec    edi
  41a140:	mov    cl,0x20
  41a142:	fsubr  st(5),st
  41a144:	adc    ecx,DWORD PTR [esi+0x330dfa57]
  41a14a:	xor    al,0x61
  41a14c:	adc    al,0xcf
  41a14e:	imul   edi,ecx,0xffffff9a
  41a151:	sub    BYTE PTR [eax],bh
  41a153:	add    edx,DWORD PTR [ecx]
  41a155:	sub    edi,DWORD PTR [edi-0x79dbd4a0]
  41a15b:	loopne 0x41a16c
  41a15d:	mov    eax,ds:0x182f5612
  41a162:	mov    al,ds:0x68dec53a
  41a167:	(bad)  
  41a168:	jb     0x41a169
  41a16a:	loop   0x41a16b
  41a16c:	scas   eax,DWORD PTR es:[edi]
  41a16d:	mov    ?,WORD PTR [ebx+0x32]
  41a170:	ret    0x4cec
  41a173:	mov    bh,0x86
  41a175:	mov    esp,0x649cd0b2
  41a17a:	jo     0x41a146
  41a17c:	sub    al,0xeb
  41a17e:	push   eax
  41a17f:	cdq    
  41a180:	retf   
  41a181:	repz xor eax,DWORD PTR [eax]
  41a184:	aaa    
  41a185:	imul   eax,DWORD PTR [ebp-0x1b],0x51
  41a189:	xchg   edi,eax
  41a18a:	adc    eax,0x57eb89cb
  41a18f:	pop    edi
  41a190:	pop    ss
  41a191:	cmp    eax,0x9edd7984
  41a196:	dec    eax
  41a197:	and    edx,DWORD PTR [edi]
  41a199:	xor    al,0x68
  41a19b:	dec    ebx
  41a19c:	inc    edi
  41a19d:	cwde   
  41a19e:	inc    edx
  41a19f:	xor    eax,0xb01a85ad
  41a1a4:	jmp    esp
  41a1a6:	gs cmp al,0xd5
  41a1a9:	mov    WORD PTR [ebx],?
  41a1ab:	add    eax,0xca652499
  41a1b0:	frstor [ebp-0x46]
  41a1b3:	pushf  
  41a1b4:	imul   DWORD PTR [esi+eiz*4]
  41a1b7:	cdq    
  41a1b8:	xchg   esi,eax
  41a1b9:	dec    ebx
  41a1ba:	out    0x5f,eax
  41a1bc:	in     al,0x80
  41a1be:	das    
  41a1bf:	std    
  41a1c0:	sub    bh,BYTE PTR [eax+0x1283499f]
  41a1c6:	mov    ?,WORD PTR [eax+0x74]
  41a1c9:	sub    al,0x90
  41a1cb:	add    eax,0x1d3acba5
  41a1d0:	inc    ebx
  41a1d1:	add    DWORD PTR [ebx+0xf],ebx
  41a1d4:	adc    BYTE PTR [edx-0x22a4bf6],0xee
  41a1db:	push   fs
  41a1dd:	test   BYTE PTR [ebx+eiz*4+0xe5ec915],dh
  41a1e4:	test   al,dl
  41a1e6:	mov    ecx,0x63d79b74
  41a1eb:	pop    ds
  41a1ec:	cwde   
  41a1ed:	mov    fs,ecx
  41a1ef:	jg     0x41a208
  41a1f1:	(bad)  
  41a1f2:	sub    BYTE PTR [esi-0x40],ch
  41a1f5:	mov    dh,0x8a
  41a1f7:	add    DWORD PTR [esi-0x3f333321],0xfffffff8
  41a1fe:	inc    ecx
  41a1ff:	jg     0x41a278
  41a201:	xor    edx,edx
  41a203:	pusha  
  41a204:	adc    eax,0x297525b
  41a209:	cld    
  41a20a:	xchg   ebx,eax
  41a20b:	(bad)  
  41a20d:	(bad)  
  41a20e:	mov    DWORD PTR [ebx+0x7285aa81],esi
  41a214:	jo     0x41a283
  41a216:	arpl   WORD PTR [edx+ecx*2+0x5f],di
  41a21a:	dec    eax
  41a21b:	(bad)
  41a21e:	imul   edx,DWORD PTR [ebp+0x47],0x7b2b7650
  41a225:	cmp    eax,0x306a280c
  41a22a:	outs   dx,BYTE PTR ds:[esi]
  41a22b:	pusha  
  41a22c:	sub    al,0x5e
  41a22e:	sahf   
  41a22f:	test   DWORD PTR [ecx-0x2181e6c3],0x3077a484
  41a239:	and    al,dh
  41a23b:	adc    DWORD PTR ds:0x2cab3147,ebx
  41a241:	pop    edi
  41a242:	dec    eax
  41a243:	lods   eax,DWORD PTR ds:[esi]
  41a244:	(bad)  
  41a245:	and    ebx,DWORD PTR [edi]
  41a247:	jb     0x41a1d0
  41a249:	push   edx
  41a24a:	pop    edx
  41a24b:	xor    ah,dl
  41a24d:	lock inc ebx
  41a24f:	int    0xa4
  41a251:	sub    ch,BYTE PTR [edi]
  41a253:	push   es
  41a254:	es sahf 
  41a256:	inc    eax
  41a257:	jp     0x41a236
  41a259:	jp     0x41a252
  41a25b:	loop   0x41a251
  41a25d:	clc    
  41a25e:	xchg   esp,eax
  41a25f:	cmp    bl,ch
  41a261:	pop    edx
  41a262:	add    BYTE PTR [eax+eiz*2],al
  41a265:	cmp    BYTE PTR [eax+ebp*8-0x5],ah
  41a269:	fwait
  41a26a:	jl     0x41a27e
  41a26c:	mov    esi,DWORD PTR [edx-0x2747aa15]
  41a272:	adc    ah,dl
  41a274:	mov    edx,0x458bb1
  41a279:	pop    ecx
  41a27a:	sbb    esp,esp
  41a27c:	dec    edx
  41a27d:	stos   BYTE PTR es:[edi],al
  41a27e:	retf   0xc088
  41a281:	dec    ebx
  41a282:	pop    ebx
  41a283:	mov    eax,ds:0x6424ba50
  41a288:	jne    0x41a2dd
  41a28a:	call   0xbed1361a
  41a28f:	rcr    BYTE PTR [ebx],1
  41a291:	mov    WORD PTR [ebp+0x4d],?
  41a294:	fld    TBYTE PTR [esi+0x31]
  41a297:	dec    esp
  41a298:	jo     0x41a22d
  41a29a:	mov    ah,0x43
  41a29c:	and    BYTE PTR [edi],cl
  41a29e:	mov    ch,0x34
  41a2a0:	sub    dh,BYTE PTR [ebx]
  41a2a2:	add    eax,0x64232f03
  41a2a7:	dec    esp
  41a2a8:	pushf  
  41a2a9:	retf   
  41a2aa:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a2ac:	fist   WORD PTR [ebx]
  41a2ae:	mov    ecx,0xc63629ea
  41a2b3:	jecxz  0x41a31f
  41a2b5:	pop    ds
  41a2b6:	hlt    
  41a2b7:	jle    0x41a2fb
  41a2b9:	ret    
  41a2ba:	loop   0x41a2df
  41a2bc:	in     eax,0xf
  41a2be:	daa    
  41a2bf:	retf   0x3f0
  41a2c2:	cs jg  0x41a248
  41a2c5:	xchg   ebp,eax
  41a2c6:	scas   al,BYTE PTR es:[edi]
  41a2c7:	iret   
  41a2c8:	pop    esi
  41a2c9:	jns    0x41a30b
  41a2cb:	inc    ecx
  41a2cc:	xchg   ebp,eax
  41a2cd:	in     eax,0x21
  41a2cf:	ins    BYTE PTR es:[edi],dx
  41a2d0:	pop    ebx
  41a2d1:	mov    bl,bl
  41a2d3:	imul   esp,DWORD PTR [edi],0xffffffc5
  41a2d6:	dec    esi
  41a2d7:	out    dx,eax
  41a2d8:	mov    ds:0xe6bcc347,al
  41a2dd:	adc    eax,edx
  41a2df:	cmp    eax,0x711e7495
  41a2e4:	not    BYTE PTR [ecx+0x599ba032]
  41a2ea:	push   eax
  41a2eb:	pop    edx
  41a2ec:	mov    cl,0xf3
  41a2ee:	sahf   
  41a2ef:	inc    ecx
  41a2f0:	div    DWORD PTR [ecx+0x2614602f]
  41a2f6:	sbb    ecx,DWORD PTR ds:0x66b2eb7e
  41a2fc:	xor    eax,0xe4ab6c7f
  41a301:	lods   eax,DWORD PTR ds:[esi]
  41a302:	scas   eax,DWORD PTR es:[edi]
  41a303:	jmp    0x1bbcf9e4
  41a308:	ficom  DWORD PTR [edi+0x4c]
  41a30b:	aam    0xeb
  41a30d:	xor    al,0x6e
  41a30f:	mov    ah,0xff
  41a311:	aaa    
  41a312:	pop    eax
  41a313:	jns    0x41a2f3
  41a315:	mov    edx,0x38ece549
  41a31a:	jp     0x41a2ec
  41a31c:	nop
  41a31d:	bound  esi,QWORD PTR [eax]
  41a31f:	or     al,0xc0
  41a321:	pop    es
  41a322:	fs jnp 0x41a341
  41a325:	daa    
  41a326:	in     eax,0xd8
  41a328:	jg     0x41a302
  41a32a:	sti    
  41a32b:	mov    ds:0x79e2ae8,al
  41a330:	(bad)  
  41a331:	dec    ebx
  41a332:	(bad)  
  41a333:	push   ebx
  41a334:	std    
  41a335:	aad    0x2d
  41a337:	xor    DWORD PTR [ebp+eiz*1+0x77ee7f20],edx
  41a33e:	or     BYTE PTR [edx+0x3f],bh
  41a341:	add    dh,dh
  41a343:	lea    edx,[edx-0x4972312a]
  41a349:	retf   0x8ac6
  41a34c:	sti    
  41a34d:	inc    esp
  41a34e:	jne    0x41a338
  41a350:	adc    BYTE PTR ds:0xa7fb3973,bh
  41a356:	push   es
  41a357:	mov    esp,0x433b51a8
  41a35c:	push   esi
  41a35d:	cwde   
  41a35e:	scas   eax,DWORD PTR es:[edi]
  41a35f:	shl    BYTE PTR [ecx+0x28dacb0a],cl
  41a365:	push   ebp
  41a366:	jo     0x41a355
  41a368:	daa    
  41a369:	sar    BYTE PTR [ecx+edi*4+0x54],1
  41a36d:	jl     0x41a2f1
  41a36f:	sub    al,0xae
  41a371:	inc    edi
  41a372:	pop    esi
  41a373:	(bad)  
  41a374:	es loope 0x41a314
  41a377:	sub    eax,0xa2f4fac6
  41a37c:	inc    ecx
  41a37d:	test   al,0x52
  41a37f:	mov    edx,0xbce3928d
  41a384:	xchg   esp,eax
  41a385:	mov    edi,0xc7e97444
  41a38a:	inc    edx
  41a38b:	mov    bh,0xaa
  41a38d:	push   ds
  41a38e:	sahf   
  41a38f:	xchg   edi,eax
  41a390:	mov    ecx,0x1264f7db
  41a395:	inc    edx
  41a396:	das    
  41a397:	leave  
  41a398:	hlt    
  41a399:	inc    edi
  41a39a:	daa    
  41a39b:	jecxz  0x41a378
  41a39d:	in     al,dx
  41a39e:	shl    BYTE PTR [eax-0xd128746],1
  41a3a4:	inc    esi
  41a3a5:	stos   BYTE PTR es:[edi],al
  41a3a6:	or     bh,bh
  41a3a8:	xchg   ecx,eax
  41a3a9:	lods   al,BYTE PTR ds:[esi]
  41a3aa:	cld    
  41a3ab:	dec    edx
  41a3ac:	sub    esi,DWORD PTR [ebp-0x617c6f9d]
  41a3b2:	adc    BYTE PTR [edx-0xcc693c4],dl
  41a3b8:	pop    es
  41a3b9:	loope  0x41a37b
  41a3bb:	jne    0x41a368
  41a3bd:	mov    al,0xf
  41a3bf:	imul   ebp,DWORD PTR [edi-0x76],0x43
  41a3c3:	mov    BYTE PTR [ecx+edx*2],bh
  41a3c6:	adc    esp,DWORD PTR [eax+ebx*8-0x66ceed40]
  41a3cd:	rcr    BYTE PTR fs:[esi],1
  41a3d0:	dec    eax
  41a3d1:	xor    ch,BYTE PTR [eax-0x3e]
  41a3d4:	dec    ebx
  41a3d5:	test   BYTE PTR [esi+ecx*1],ch
  41a3d8:	dec    ebp
  41a3d9:	rcr    DWORD PTR [ebx+0x1f2ff9a8],1
  41a3df:	stos   BYTE PTR es:[edi],al
  41a3e0:	pop    esp
  41a3e1:	add    eax,0xbc4a0af0
  41a3e6:	mov    bh,bh
  41a3e8:	(bad)  
  41a3e9:	loope  0x41a3d4
  41a3eb:	pop    edx
  41a3ec:	sub    eax,0xac79eb31
  41a3f1:	scas   al,BYTE PTR es:[edi]
  41a3f2:	sbb    BYTE PTR [ebx],0x74
  41a3f5:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a3f7:	mov    bh,BYTE PTR [edx+0x2b4f942e]
  41a3fd:	add    al,0xea
  41a3ff:	cmc    
  41a400:	js     0x41a3f0
  41a402:	sub    esp,DWORD PTR [ebx+0x69]
  41a405:	outs   dx,DWORD PTR ds:[esi]
  41a406:	pop    edi
  41a407:	loop   0x41a43d
  41a409:	push   esi
  41a40a:	pop    esp
  41a40b:	push   edi
  41a40c:	ss jmp 0x8456cd
  41a412:	rcl    ecx,cl
  41a414:	or     eax,0xc560e926
  41a419:	mov    ah,0xee
  41a41b:	fwait
  41a41c:	jge    0x41a45e
  41a41e:	or     eax,0xe9f0ef3e
  41a423:	xor    al,0xa2
  41a425:	jnp    0x41a461
  41a427:	pop    esp
  41a428:	inc    esp
  41a429:	jg     0x41a3f2
  41a42b:	sub    cl,bl
  41a42d:	xchg   ecx,eax
  41a42e:	fstp   QWORD PTR [eax-0x671adbdb]
  41a434:	js     0x41a4b5
  41a436:	or     al,0xf3
  41a438:	jecxz  0x41a42a
  41a43a:	mov    edx,DWORD PTR [ebx]
  41a43c:	pop    ss
  41a43d:	pusha  
  41a43e:	mov    WORD PTR [esi],cs
  41a440:	not    DWORD PTR [ecx-0x58]
  41a443:	pop    ss
  41a444:	add    al,0x2
  41a446:	inc    ebp
  41a447:	daa    
  41a448:	sub    eax,0xe4898fc8
  41a44d:	loopne 0x41a4a0
  41a44f:	retf   
  41a450:	(bad)  
  41a451:	ja     0x41a4c3
  41a453:	jno    0x41a4c5
  41a455:	and    ah,BYTE PTR [ecx-0x6b]
  41a458:	xchg   BYTE PTR [ebp-0x1960ba3c],ch
  41a45e:	or     al,0x97
  41a460:	pop    es
  41a461:	mov    al,ds:0x5d3998b2
  41a466:	rol    BYTE PTR ss:[eax+0x0],0xd6
  41a46b:	(bad)  
  41a46c:	div    BYTE PTR [ebp+0x7169b96]
  41a472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a473:	sahf   
  41a474:	ins    BYTE PTR es:[edi],dx
  41a475:	sub    ah,BYTE PTR [edx]
  41a477:	push   esi
  41a478:	mov    ah,0x74
  41a47a:	sub    ch,BYTE PTR [ebp-0x3e]
  41a47d:	js     0x41a4da
  41a47f:	sbb    al,0x57
  41a481:	adc    esi,esi
  41a483:	inc    esp
  41a484:	cmp    BYTE PTR [esi-0x62],al
  41a487:	pop    ebx
  41a488:	ret    
  41a489:	stos   DWORD PTR es:[edi],eax
  41a48a:	jp     0x41a4fe
  41a48c:	or     BYTE PTR [edx],bh
  41a48e:	(bad)  
  41a48f:	daa    
  41a490:	dec    esp
  41a491:	and    eax,0x2eb1726
  41a496:	sub    dh,bh
  41a498:	mov    BYTE PTR [esi-0x30],cl
  41a49b:	sbb    BYTE PTR [edx+edi*8],al
  41a49e:	imul   eax,ecx,0xffffffcc
  41a4a1:	sbb    al,0xdf
  41a4a3:	xchg   ecx,eax
  41a4a4:	lds    edx,FWORD PTR [ebx]
  41a4a6:	arpl   WORD PTR [ebx-0x25d93819],dx
  41a4ac:	pop    ss
  41a4ad:	xchg   ecx,eax
  41a4ae:	cli    
  41a4af:	scas   al,BYTE PTR es:[edi]
  41a4b0:	dec    esi
  41a4b1:	cmp    DWORD PTR [esi+0x1a5212dd],ebp
  41a4b7:	mov    dh,0x26
  41a4b9:	sub    ebp,DWORD PTR [ebp-0x30fb0d32]
  41a4bf:	sub    ch,BYTE PTR [edx]
  41a4c1:	jo     0x41a4d7
  41a4c3:	cld    
  41a4c4:	icebp  
  41a4c5:	mov    DWORD PTR [esi-0x2603f887],ebp
  41a4cb:	xchg   BYTE PTR [esi-0x25],bh
  41a4ce:	sahf   
  41a4cf:	fadd   st,st(4)
  41a4d1:	fistp  DWORD PTR [eax]
  41a4d3:	test   al,0x6f
  41a4d5:	mov    edi,?
  41a4d7:	ss xor eax,0x591b391
  41a4dd:	outs   dx,BYTE PTR ds:[esi]
  41a4de:	jae    0x41a52b
  41a4e0:	jne    0x41a4ce
  41a4e2:	iret   
  41a4e3:	ficom  DWORD PTR [ecx-0x5bdd51d]
  41a4e9:	mov    esp,0x26e0d51
  41a4ee:	aam    0xf1
  41a4f0:	or     esi,DWORD PTR [esi]
  41a4f2:	inc    ebx
  41a4f3:	or     bl,bh
  41a4f5:	sahf   
  41a4f6:	cmc    
  41a4f7:	add    eax,0x28a0bae3
  41a4fc:	inc    DWORD PTR [eax+0x4d]
  41a4ff:	leave  
  41a500:	push   ss
  41a501:	(bad)  
  41a502:	rcl    esp,1
  41a504:	push   0xfffffff0
  41a506:	dec    ebp
  41a507:	push   esp
  41a508:	retf   0xd3c
  41a50b:	adc    DWORD PTR [edx+0x4a],0x96af6286
  41a512:	adc    ch,bh
  41a514:	mov    dh,0x7
  41a516:	add    eax,0xe57bf4e
  41a51c:	push   cs
  41a51d:	icebp  
  41a51e:	enter  0x7dcb,0xaa
  41a522:	jo     0x41a544
  41a524:	shld   DWORD PTR [ecx-0x60238d89],eax,0xc9
  41a52c:	int3   
  41a52d:	sbb    DWORD PTR [ebx],0xaa31742e
  41a533:	or     dl,BYTE PTR [ebx]
  41a535:	pop    esp
  41a536:	push   edx
  41a537:	push   ebx
  41a538:	pop    edx
  41a539:	cmp    DWORD PTR [ebp-0x728f1838],ebx
  41a53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a540:	in     eax,0xdb
  41a542:	fst    DWORD PTR [esi+eiz*1-0x793c9835]
  41a549:	mov    ebp,0x37c794fd
  41a54e:	ins    BYTE PTR es:[edi],dx
  41a54f:	fidiv  WORD PTR [esi+0x1a]
  41a552:	jns    0xd2ad7bfc
  41a558:	mov    bl,0x2b
  41a55a:	adc    al,0x36
  41a55c:	shr    DWORD PTR [eax],cl
  41a55e:	aam    0x6b
  41a560:	pop    edi
  41a561:	div    DWORD PTR [edx-0x64]
  41a564:	fcmovbe st,st(7)
  41a566:	mov    dl,0x5e
  41a568:	outs   dx,DWORD PTR ds:[esi]
  41a569:	xchg   ebx,eax
  41a56a:	adc    eax,0x17aed540
  41a56f:	adc    ebx,ebx
  41a571:	cmp    DWORD PTR ds:0x42924f2f,edi
  41a577:	push   ds
  41a578:	iret   
  41a579:	(bad)  
  41a57a:	mov    al,ds:0x2fcffc82
  41a57f:	call   0xc12069f1
  41a584:	mov    BYTE PTR [ebp-0x5d],ch
  41a587:	sbb    BYTE PTR [eax],cl
  41a589:	rcl    DWORD PTR [ebx+0xd4c0b84],1
  41a58f:	(bad)  
  41a590:	push   ds
  41a591:	cmp    dl,BYTE PTR [ebp-0x139d48c1]
  41a597:	cdq    
  41a598:	or     eax,0x458387e1
  41a59d:	inc    ecx
  41a59e:	cmp    eax,0x3d84f451
  41a5a3:	adc    al,0x95
  41a5a5:	add    esp,edi
  41a5a7:	sbb    eax,0x20d2db03
  41a5ac:	jecxz  0x41a60a
  41a5ae:	mov    al,0xc3
  41a5b0:	mov    ds:0x2b1c5b64,al
  41a5b5:	test   DWORD PTR [ebx],ebp
  41a5b7:	iret   
  41a5b8:	stos   BYTE PTR es:[edi],al
  41a5b9:	inc    ecx
  41a5ba:	aam    0x77
  41a5bc:	(bad)  
  41a5bd:	imul   ecx,DWORD PTR [bp-0x7a73],0xaf2804bc
  41a5c6:	add    eax,0x434befde
  41a5cb:	xchg   esp,eax
  41a5cc:	test   DWORD PTR [ebx-0x55],esp
  41a5cf:	js     0x41a62f
  41a5d1:	lods   al,BYTE PTR ds:[esi]
  41a5d2:	xchg   esi,eax
  41a5d3:	xor    DWORD PTR [ebp-0x5380e477],eax
  41a5d9:	hlt    
  41a5da:	iret   
  41a5db:	ja     0x41a646
  41a5dd:	scas   al,BYTE PTR es:[edi]
  41a5de:	sub    BYTE PTR ss:0xfa2219ea,0x69
  41a5e6:	mov    cl,0xe
  41a5e8:	cvtps2pd xmm4,QWORD PTR [ebx-0x75055ff7]
  41a5ef:	(bad)  
  41a5f0:	jae    0x41a66d
  41a5f2:	fcom   st(3)
  41a5f4:	popa   
  41a5f5:	in     al,dx
  41a5f6:	xchg   ebp,eax
  41a5f7:	int3   
  41a5f8:	scas   al,BYTE PTR es:[edi]
  41a5f9:	jmp    0x5caa1265
  41a5fe:	jnp    0x41a5ad
  41a600:	add    al,0x36
  41a602:	adc    al,0x17
  41a604:	push   0xffffffdd
  41a606:	cmp    al,BYTE PTR [edx-0x395fdade]
  41a60c:	dec    esp
  41a60d:	ret    0x7a2f
  41a610:	cli    
  41a611:	mov    ebx,0x10152f37
  41a616:	or     edx,DWORD PTR [ebp-0x3d]
  41a619:	mov    bh,0xd2
  41a61b:	js     0x41a5ff
  41a61d:	cdq    
  41a61e:	scas   al,BYTE PTR es:[edi]
  41a61f:	(bad)  
  41a620:	jne    0x41a660
  41a622:	rcl    BYTE PTR [ebp-0x1f],0xf1
  41a626:	xor    bh,bh
  41a628:	jb     0x41a6a9
  41a62a:	call   0x7c41c746
  41a62f:	int3   
  41a630:	xchg   edx,eax
  41a631:	jno    0x41a629
  41a633:	inc    edi
  41a634:	or     al,0xa6
  41a636:	scas   al,BYTE PTR es:[edi]
  41a637:	inc    edx
  41a638:	or     ch,bh
  41a63a:	sbb    BYTE PTR [eax+0xc],0xe6
  41a63e:	out    dx,al
  41a63f:	adc    BYTE PTR [esi+ebx*8],bl
  41a642:	(bad)  
  41a643:	push   ebx
  41a644:	hlt    
  41a645:	adc    eax,0x273a5e86
  41a64a:	imul   eax,DWORD PTR [ebp-0x41],0xcf93acf1
  41a651:	inc    esi
  41a652:	lods   eax,DWORD PTR ds:[esi]
  41a653:	adc    eax,0x16dc3063
  41a658:	mov    WORD PTR [edi+0x3de3aa4],es
  41a65e:	repz test al,0xa6
  41a661:	xchg   edx,eax
  41a662:	stos   DWORD PTR es:[edi],eax
  41a663:	lea    ecx,[ebp+eax*8-0x13]
  41a667:	adc    BYTE PTR [edi-0x2],bh
  41a66a:	rcr    BYTE PTR [edi+0x9eccee9],0x3c
  41a671:	push   esi
  41a672:	jbe    0x41a653
  41a674:	add    esp,0xffffffa0
  41a677:	cld    
  41a678:	push   cs
  41a679:	inc    edx
  41a67a:	add    bh,bh
  41a67c:	jg     0x41a625
  41a67e:	std    
  41a67f:	sbb    al,0xbf
  41a681:	call   0x94ce:0x5482d134
  41a688:	xchg   ecx,eax
  41a689:	pop    ebp
  41a68a:	mov    cl,BYTE PTR [esi+0x49]
  41a68d:	retf   0x5bc3
  41a690:	rcr    BYTE PTR [esp],1
  41a693:	aad    0x10
  41a695:	es or  esp,DWORD PTR fs:[ebp-0x1e]
  41a69a:	push   eax
  41a69b:	jne    0x41a6f9
  41a69d:	scas   al,BYTE PTR es:[edi]
  41a69e:	xchg   ecx,eax
  41a69f:	xchg   edx,eax
  41a6a0:	dec    eax
  41a6a1:	pushf  
  41a6a2:	and    dl,BYTE PTR [edi+ebp*2+0x43daabca]
  41a6a9:	in     eax,0xa1
  41a6ab:	xor    DWORD PTR [ecx-0x4a],0x6bd4304d
  41a6b2:	and    DWORD PTR [ecx+0x71],esi
  41a6b5:	jmp    0x8733:0xf66624c
  41a6bc:	mov    esp,0x37c7d
  41a6c1:	cmp    dh,bh
  41a6c3:	jle    0x41a6d7
  41a6c5:	mov    ecx,0xfdfaa921
  41a6ca:	xor    DWORD PTR [ecx-0x52],edi
  41a6cd:	adc    BYTE PTR [ebx],dl
  41a6cf:	xchg   ch,bh
  41a6d1:	inc    ebp
  41a6d2:	cld    
  41a6d3:	push   edi
  41a6d4:	div    ah
  41a6d6:	cmp    eax,edi
  41a6d8:	in     al,dx
  41a6d9:	int3   
  41a6da:	in     eax,dx
  41a6db:	mov    ebx,0x56740ae3
  41a6e0:	dec    ebp
  41a6e1:	es test al,0x67
  41a6e4:	imul   ebx,DWORD PTR [edi+0x28],0x36b4bc35
  41a6eb:	add    al,0x37
  41a6ed:	xchg   ebx,eax
  41a6ee:	dec    ecx
  41a6ef:	aaa    
  41a6f0:	dec    edi
  41a6f1:	in     eax,dx
  41a6f2:	pusha  
  41a6f3:	xchg   esp,eax
  41a6f4:	(bad)  
  41a6f5:	aad    0x23
  41a6f7:	ss cmc 
  41a6f9:	push   edi
  41a6fa:	push   edx
  41a6fb:	xor    DWORD PTR [ebp-0x71a044a3],edi
  41a701:	pop    edx
  41a702:	jae    0x41a77c
  41a704:	jg     0x41a711
  41a706:	es xor al,0x53
  41a709:	and    esp,DWORD PTR [eax+0x5]
  41a70c:	test   ecx,0xd9d7e2d3
  41a712:	mov    ebp,0x949459a6
  41a717:	or     al,BYTE PTR [eax+0x434bef74]
  41a71d:	or     eax,0xe95aebe7
  41a722:	mov    ds:0xb0b78e88,al
  41a727:	repnz push ds
  41a729:	dec    ecx
  41a72a:	js     0x41a7a4
  41a72c:	std    
  41a72d:	or     BYTE PTR [ebp+ebp*4+0x2101e6d7],bh
  41a734:	sti    
  41a735:	lahf   
  41a736:	adc    edx,DWORD PTR [ebx+0x15]
  41a739:	dec    ebx
  41a73a:	fstp   QWORD PTR [ecx-0x68]
  41a73d:	sub    al,0x2b
  41a73f:	in     al,dx
  41a740:	mov    eax,ds:0x87b96bb4
  41a745:	cmp    dl,BYTE PTR [edx-0x4ab77b21]
  41a74b:	outs   dx,BYTE PTR ds:[esi]
  41a74c:	dec    esp
  41a74d:	pop    ebp
  41a74e:	pop    esp
  41a74f:	daa    
  41a750:	add    ah,ah
  41a752:	cmp    al,0xdf
  41a754:	add    ebp,ecx
  41a756:	das    
  41a757:	fldcw  WORD PTR [esi+0x40e6af63]
  41a75d:	shl    BYTE PTR [ebx+0x6839cd7d],0xd8
  41a764:	test   al,0xe5
  41a766:	ret    0xb7d
  41a769:	or     DWORD PTR [edi-0x16],0x72
  41a76d:	mov    dl,0xf5
  41a76f:	pushf  
  41a770:	mov    ecx,0x6ddb5384
  41a775:	(bad)  
  41a777:	push   0x8c1b7495
  41a77c:	jb     0x41a77a
  41a77e:	xor    ah,BYTE PTR [edi+ecx*4+0x7ae16a30]
  41a785:	scas   eax,DWORD PTR es:[edi]
  41a786:	xchg   esp,eax
  41a787:	mov    bl,0xaa
  41a789:	xlat   BYTE PTR ds:[ebx]
  41a78a:	pop    ss
  41a78b:	inc    ecx
  41a78c:	adc    bh,BYTE PTR [ebx+0x5b654b1]
  41a792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a793:	adc    al,ah
  41a795:	(bad)  
  41a796:	hlt    
  41a797:	ss add esi,esp
  41a79a:	mov    bh,0xea
  41a79c:	and    DWORD PTR [ecx],ebx
  41a79e:	xlat   BYTE PTR ds:[ebx]
  41a79f:	addr16 cwde 
  41a7a1:	or     DWORD PTR [edx-0x38],esi
  41a7a4:	dec    esi
  41a7a5:	mov    ds:0xc9e5eb46,eax
  41a7aa:	repnz push ebx
  41a7ac:	lock push esi
  41a7ae:	les    esi,FWORD PTR [edi*4+0x129a4a1c]
  41a7b5:	into   
  41a7b6:	adc    ch,BYTE PTR [eax-0x74fb4a54]
  41a7bc:	sar    DWORD PTR [eax+0x1],0xe5
  41a7c0:	push   cs
  41a7c1:	js     0x41a81f
  41a7c3:	pop    esp
  41a7c4:	push   ecx
  41a7c5:	call   0x9eaa0158
  41a7ca:	and    BYTE PTR [eax-0x4dc64b43],0xc7
  41a7d1:	push   0x10a50798
  41a7d6:	push   ds
  41a7d7:	jae    0x41a836
  41a7d9:	call   0x1633:0xef3c7da0
  41a7e0:	add    BYTE PTR ds:0x3f169de7,dh
  41a7e6:	add    BYTE PTR [ebx+0x64c0d87a],ah
  41a7ec:	out    dx,al
  41a7ed:	cmp    ah,bl
  41a7ef:	pusha  
  41a7f0:	add    eax,0x4a37106a
  41a7f5:	sbb    al,0x97
  41a7f7:	sbb    BYTE PTR [ebx-0x7fd0063],bl
  41a7fd:	dec    eax
  41a7fe:	xor    DWORD PTR ss:[esi+eax*4+0x7d],eax
  41a803:	mov    ebx,0x9658e56f
  41a808:	fdivr  DWORD PTR [eax-0x3]
  41a80b:	pop    edi
  41a80c:	in     eax,dx
  41a80d:	pushf  
  41a80e:	mov    ebx,0x272a0499
  41a813:	mov    eax,DWORD PTR [ebx+0x749a32d4]
  41a819:	xchg   ebp,eax
  41a81a:	cmc    
  41a81b:	mov    ebx,0xf1f68a80
  41a820:	sub    al,0x41
  41a822:	mov    dh,BYTE PTR [ecx-0x5a1c7302]
  41a828:	arpl   WORD PTR [esi-0x72aae693],si
  41a82e:	inc    ebx
  41a82f:	and    DWORD PTR [edi],edi
  41a831:	fwait
  41a832:	push   0xfffffff1
  41a834:	int3   
  41a835:	push   cs
  41a836:	jle    0x41a7d0
  41a838:	dec    esp
  41a839:	mov    DWORD PTR [eax+0x9268737],edi
  41a83f:	inc    esi
  41a840:	cmc    
  41a841:	cwde   
  41a842:	pop    edx
  41a843:	push   ebx
  41a844:	sbb    al,0x8
  41a846:	in     al,dx
  41a847:	jecxz  0x41a815
  41a849:	sub    DWORD PTR [edx-0x22ec9ef7],0x8bcaa10a
  41a853:	call   FWORD PTR [esi+ecx*2+0x9b87cf3]
  41a85a:	add    BYTE PTR [edi-0x118d3c92],ah
  41a860:	push   ebx
  41a861:	or     dh,dl
  41a863:	(bad)  
  41a864:	mov    dh,0x61
  41a866:	mov    bh,BYTE PTR [ebx+0x64079ec4]
  41a86c:	test   ah,cl
  41a86e:	xchg   DWORD PTR [eax-0x3c],esp
  41a871:	pop    edx
  41a872:	lea    ebp,[ebp+0x59c295ae]
  41a878:	sbb    al,BYTE PTR [ebp+0x3693980c]
  41a87e:	push   0xb7348ddb
  41a883:	aam    0x9f
  41a885:	push   ss
  41a886:	outs   dx,BYTE PTR ds:[esi]
  41a887:	pusha  
  41a888:	xchg   edi,eax
  41a889:	(bad)  
  41a88a:	pop    eax
  41a88b:	xor    esi,ebp
  41a88d:	mov    ebx,0xd34c2576
  41a892:	clc    
  41a893:	out    0x3d,al
  41a895:	or     edx,edi
  41a897:	dec    esi
  41a898:	loop   0x41a8e6
  41a89a:	fmul   DWORD PTR [ebx-0x4b6c1087]
  41a8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a1:	dec    esp
  41a8a2:	inc    eax
  41a8a3:	xor    cl,BYTE PTR [eax+0x6b]
  41a8a6:	mov    ebp,DWORD PTR [ecx+0x3d]
  41a8a9:	(bad)  
  41a8aa:	and    DWORD PTR es:[eax+0x7e],eax
  41a8ae:	iret   
  41a8af:	jbe    0x41a887
  41a8b1:	xor    edx,DWORD PTR [ebp+0x2b]
  41a8b4:	retf   0x5be
  41a8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8b8:	jle    0x41a85c
  41a8ba:	jge    0x41a840
  41a8bc:	ficom  WORD PTR [edi-0x1b]
  41a8bf:	dec    esp
  41a8c0:	xor    DWORD PTR [edi],0x4ad6e772
  41a8c6:	out    dx,al
  41a8c7:	repz mov edx,0x21d958bb
  41a8cd:	xchg   ebp,eax
  41a8ce:	mov    dh,dl
  41a8d0:	leave  
  41a8d1:	test   al,0x4e
  41a8d3:	dec    eax
  41a8d4:	je     0x41a8d4
  41a8d6:	aad    0x4a
  41a8d8:	or     al,0x59
  41a8da:	mov    cl,0xdf
  41a8dc:	icebp  
  41a8dd:	imul   edx,DWORD PTR [esi],0xeeb3546d
  41a8e3:	arpl   WORD PTR [ebx+0x41ac36d],si
  41a8e9:	lods   al,BYTE PTR ds:[esi]
  41a8ea:	mov    ds,WORD PTR [ebp+0x75]
  41a8ed:	pop    edi
  41a8ee:	jne    0x41a94d
  41a8f0:	mov    ch,0x4f
  41a8f2:	mov    eax,ds:0x2ae9dcff
  41a8f7:	push   ecx
  41a8f8:	(bad)  
  41a8f9:	mov    edi,0x93b30597
  41a8fe:	retf   
  41a8ff:	mov    ebx,0xd3ae3a73
  41a904:	outs   dx,BYTE PTR ds:[esi]
  41a905:	(bad)  
  41a907:	ror    BYTE PTR [ebx+0x72b31971],0x61
  41a90e:	scas   eax,DWORD PTR es:[edi]
  41a90f:	adc    ecx,ebp
  41a911:	sbb    eax,0x4bc65f46
  41a916:	xor    edx,DWORD PTR [edx]
  41a918:	sub    esi,ecx
  41a91a:	add    ah,BYTE PTR [edx+0x73]
  41a91d:	inc    ebp
  41a91e:	jg     0x41a992
  41a920:	es arpl di,si
  41a923:	push   0x7b
  41a925:	mov    ch,0xb4
  41a927:	jns    0x41a8e1
  41a929:	in     al,dx
  41a92a:	cdq    
  41a92b:	fnsave [ecx+0x74]
  41a92e:	sbb    ebx,edx
  41a930:	inc    edi
  41a931:	int    0x41
  41a933:	in     al,dx
  41a934:	gs push 0xffffffdb
  41a937:	xor    ebp,DWORD PTR [edx]
  41a939:	dec    eax
  41a93a:	add    BYTE PTR [esi+0x52],ah
  41a93d:	test   BYTE PTR [esi],al
  41a93f:	cmp    DWORD PTR [edx],esi
  41a941:	mov    edx,0x2e0f4cb5
  41a946:	xor    eax,0x6e963c51
  41a94b:	fldln2 
  41a94d:	jb     0x41a8fa
  41a94f:	shl    DWORD PTR [edx+0x49],0x85
  41a953:	(bad)  [eax-0x4c]
  41a956:	rcl    BYTE PTR ss:[edi-0x5b8b449e],cl
  41a95d:	mov    al,0xb
  41a95f:	pusha  
  41a960:	inc    esp
  41a961:	mov    edx,0xa8d547d7
  41a966:	adc    cl,BYTE PTR [ebx-0x6fd7fb99]
  41a96c:	jo     0x41a8fc
  41a96e:	adc    edx,esi
  41a970:	in     eax,0x61
  41a972:	jge    0x41a90c
  41a974:	or     al,0x7a
  41a976:	mov    eax,DWORD PTR [ebp-0x7d]
  41a979:	jbe    0x41a930
  41a97b:	xor    bh,al
  41a97d:	rcr    DWORD PTR [edx],1
  41a97f:	aad    0x44
  41a981:	dec    esi
  41a982:	dec    edx
  41a983:	cld    
  41a984:	dec    esi
  41a985:	mov    eax,0x710054cb
  41a98a:	mov    BYTE PTR [ecx+eiz*8-0x18],0x9b
  41a98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a990:	dec    ecx
  41a991:	data16 fdivr DWORD PTR [ebx]
  41a994:	lahf   
  41a995:	xor    eax,0x1bb0bdfb
  41a99a:	xor    ebp,DWORD PTR [ecx-0x472fff4d]
  41a9a0:	dec    esp
  41a9a1:	arpl   WORD PTR [eax-0xe47c9a0],bx
  41a9a7:	enter  0xd346,0x39
  41a9ab:	fdivr  st(6),st
  41a9ad:	xchg   ecx,eax
  41a9ae:	push   0x59
  41a9b0:	jb     0x41a9f3
  41a9b2:	(bad)  
  41a9b3:	imul   eax,DWORD PTR [edx],0xda90e726
  41a9b9:	and    BYTE PTR [ebx-0x2d],ah
  41a9bc:	or     edi,DWORD PTR [ecx-0x1d60965f]
  41a9c2:	jge    0x41aa14
  41a9c4:	xchg   BYTE PTR [edi+0x66e090bb],cl
  41a9ca:	pop    ecx
  41a9cb:	rcl    BYTE PTR [ecx+0x7b],1
  41a9ce:	pushf  
  41a9cf:	inc    edx
  41a9d0:	out    0x19,eax
  41a9d2:	fs pushf 
  41a9d4:	fdiv   st(7),st
  41a9d6:	mov    dh,0xea
  41a9d8:	push   esp
  41a9d9:	popa   
  41a9da:	ins    DWORD PTR es:[edi],dx
  41a9db:	inc    ebx
  41a9dc:	fucomp st(1)
  41a9de:	and    al,0x82
  41a9e0:	das    
  41a9e1:	mov    eax,0xdd8b4692
  41a9e6:	push   di
  41a9e8:	add    al,BYTE PTR [edi]
  41a9ea:	pop    ebp
  41a9eb:	mov    esp,0x9c0df71a
  41a9f0:	adc    eax,0xbf71931c
  41a9f5:	jle    0x41a991
  41a9f7:	sbb    ah,BYTE PTR [edi]
  41a9f9:	pusha  
  41a9fa:	gs and ah,bh
  41a9fd:	sub    BYTE PTR [edx+0x3f],0x58
  41aa01:	loope  0x41aa38
  41aa03:	pushf  
  41aa04:	shl    DWORD PTR [esi-0x54],0x71
  41aa08:	dec    ecx
  41aa09:	fwait
  41aa0a:	dec    edi
  41aa0b:	pop    edx
  41aa0c:	lds    esp,FWORD PTR [edx]
  41aa0e:	iret   
  41aa0f:	fild   QWORD PTR [edi-0x3bb512f]
  41aa15:	and    al,0xb1
  41aa17:	jae    0x41aa28
  41aa19:	jnp    0x41aa2e
  41aa1b:	and    ecx,DWORD PTR [edx]
  41aa1d:	push   es
  41aa1e:	sahf   
  41aa1f:	add    cl,bh
  41aa21:	push   0xffffffc3
  41aa23:	test   DWORD PTR [eax-0x5c],0x8e6eb189
  41aa2a:	pop    es
  41aa2b:	mov    ecx,0xef4c6c6e
  41aa30:	jbe    0x41a9d2
  41aa32:	jmp    0xe894ee11
  41aa37:	setae  cl
  41aa3a:	div    DWORD PTR [edi]
  41aa3c:	clc    
  41aa3d:	je     0x41aa14
  41aa3f:	sub    edx,ebx
  41aa41:	and    BYTE PTR [edx-0x69],dh
  41aa44:	xlat   BYTE PTR ds:[ebx]
  41aa45:	addr16 dec ebx
  41aa47:	pusha  
  41aa48:	mov    eax,0x79add33d
  41aa4d:	push   ss
  41aa4e:	js     0x41aa90
  41aa50:	test   BYTE PTR [ebx],bl
  41aa52:	setge  BYTE PTR [edx]
  41aa55:	ja     0x41aa3f
  41aa57:	pop    ebx
  41aa58:	mov    ebp,0x46df527c
  41aa5d:	mov    esp,0xee148e32
  41aa62:	jo     0x41aa6f
  41aa64:	and    eax,0x8b111636
  41aa69:	aaa    
  41aa6a:	fst    QWORD PTR [ecx+ebp*1+0x5b]
  41aa6e:	mov    edx,0x7e87a9fb
  41aa73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa74:	stos   DWORD PTR es:[edi],eax
  41aa75:	sub    BYTE PTR [eax+ebx*2+0x3d9f27e3],al
  41aa7c:	sbb    DWORD PTR [ebx],ebp
  41aa7e:	sti    
  41aa7f:	mov    edx,0xedf5995
  41aa84:	enter  0xe012,0x85
  41aa88:	push   es
  41aa89:	stc    
  41aa8a:	cld    
  41aa8b:	pop    ds
  41aa8c:	mov    BYTE PTR [esi],bh
  41aa8e:	and    BYTE PTR [eax+0x2a],cl
  41aa91:	imul   edx,DWORD PTR [ebx],0x1c1fc107
  41aa97:	mov    bl,0xc3
  41aa99:	cmp    esi,esi
  41aa9b:	and    esi,ecx
  41aa9d:	jmp    0xb90c9b97
  41aaa2:	inc    eax
  41aaa3:	loope  0x41aa99
  41aaa5:	sbb    ah,BYTE PTR ds:0x25aaa461
  41aaab:	pop    ebx
  41aaac:	mov    ah,0xed
  41aaae:	(bad)  
  41aaaf:	retf   
  41aab0:	iret   
  41aab1:	pop    ds
  41aab2:	xchg   edx,eax
  41aab3:	fcom   DWORD PTR [ecx]
  41aab5:	in     eax,dx
  41aab6:	mov    ecx,0x5eb15ae
  41aabb:	nop
  41aabc:	sub    ecx,DWORD PTR [ebx-0x3e]
  41aabf:	push   0xafc82e93
  41aac4:	aam    0xc1
  41aac6:	adc    BYTE PTR [edi],ch
  41aac8:	loop   0x41aadc
  41aaca:	fwait
  41aacb:	lea    ecx,ds:0x28651dc
  41aad1:	js     0x41ab4b
  41aad3:	ja     0x41ab00
  41aad5:	sahf   
  41aad6:	push   es
  41aad7:	cmp    DWORD PTR [ebp-0x5e90be64],ebx
  41aadd:	(bad)  
  41aade:	xchg   edx,eax
  41aadf:	xchg   esi,eax
  41aae0:	ja     0x41aadb
  41aae2:	pop    esp
  41aae3:	aas    
  41aae4:	pop    edi
  41aae5:	cmp    BYTE PTR [edi+0x46],bl
  41aae8:	mov    ch,0x1a
  41aaea:	xor    ah,BYTE PTR [ecx]
  41aaec:	inc    edx
  41aaed:	cmp    ch,BYTE PTR [ebp+0x5f7eb5dd]
  41aaf3:	jnp    0x41ab6d
  41aaf5:	pop    eax
  41aaf6:	(bad)  
  41aaf7:	lods   eax,DWORD PTR ds:[esi]
  41aaf8:	mov    ch,0xcd
  41aafa:	clc    
  41aafb:	cli    
  41aafc:	dec    esi
  41aafd:	fild   QWORD PTR [ecx-0xff727e4]
  41ab03:	popa   
  41ab04:	xor    al,0xa6
  41ab06:	push   eax
  41ab07:	fist   DWORD PTR [ebp+0x70]
  41ab0a:	jns    0x41ab1a
  41ab0c:	in     eax,0x5c
  41ab0e:	scas   eax,DWORD PTR es:[edi]
  41ab0f:	lods   eax,DWORD PTR ds:[esi]
  41ab10:	push   ds
  41ab11:	loop   0x41ab4d
  41ab13:	jge    0x41ab4a
  41ab15:	push   eax
  41ab16:	mov    ch,BYTE PTR [esi+0x55]
  41ab19:	(bad)  
  41ab1a:	das    
  41ab1b:	in     al,dx
  41ab1c:	inc    ebx
  41ab1d:	lea    edi,[edi-0x51]
  41ab20:	and    eax,0xaf75de80
  41ab25:	adc    edi,edi
  41ab27:	mov    edi,0xd73cba4e
  41ab2c:	in     al,dx
  41ab2d:	cs dec esp
  41ab2f:	into   
  41ab30:	xor    bh,BYTE PTR [ebp+0x58]
  41ab33:	scas   al,BYTE PTR es:[edi]
  41ab34:	cmp    esp,DWORD PTR [eax]
  41ab36:	(bad)  [ebp-0x4e]
  41ab39:	rcl    BYTE PTR [ebx+eiz*4-0x23],1
  41ab3d:	xchg   ebx,eax
  41ab3e:	shl    edx,1
  41ab40:	pop    ss
  41ab41:	mov    ds:0xf702fb23,eax
  41ab46:	push   es
  41ab47:	and    esi,DWORD PTR [esi-0x623ff4ff]
  41ab4d:	xchg   ecx,eax
  41ab4e:	fsub   DWORD PTR ds:0xb638dde9
  41ab54:	xchg   ebx,eax
  41ab55:	js     0x41ab42
  41ab57:	push   ebp
  41ab58:	rcl    esi,0x56
  41ab5b:	nop
  41ab5c:	mov    ah,0x70
  41ab5e:	je     0x41aba7
  41ab60:	push   cs
  41ab61:	add    eax,0x6f8d7c0b
  41ab66:	mov    esp,0x2dcbb96a
  41ab6b:	popf   
  41ab6c:	jg     0x41ab56
  41ab6e:	outs   dx,DWORD PTR ds:[esi]
  41ab6f:	scas   al,BYTE PTR es:[edi]
  41ab70:	pop    eax
  41ab71:	rcl    ebp,1
  41ab73:	rcl    bh,cl
  41ab75:	jbe    0x41ab24
  41ab77:	and    al,0x9b
  41ab79:	icebp  
  41ab7a:	das    
  41ab7b:	or     al,0x47
  41ab7d:	pop    es
  41ab7e:	out    0xca,al
  41ab80:	inc    esi
  41ab81:	popf   
  41ab82:	loope  0x41ab2a
  41ab84:	ret    0xe67c
  41ab87:	ror    BYTE PTR [ecx+eiz*8-0x2c5d6925],0x43
  41ab8f:	test   al,0x7e
  41ab91:	push   cs
  41ab92:	xlat   BYTE PTR ds:[ebx]
  41ab93:	or     BYTE PTR [ecx-0x6],bh
  41ab96:	jl     0x41abec
  41ab98:	or     ebp,DWORD PTR [esi+0x72eae0dc]
  41ab9e:	gs retf 
  41aba0:	fsubr  st(5),st
  41aba2:	fmul   DWORD PTR [ecx+ebx*4+0x6a07936b]
  41aba9:	and    DWORD PTR ds:0xb0b256ad,0xffffff87
  41abb0:	mov    ch,0xa3
  41abb2:	push   ds
  41abb3:	mov    ah,0xfc
  41abb5:	imul   BYTE PTR [ebp+0x26]
  41abb8:	inc    ebp
  41abb9:	fnsave [edx-0x4191e188]
  41abbf:	out    dx,al
  41abc0:	pop    ebp
  41abc1:	test   eax,0x53a88c3e
  41abc6:	sub    BYTE PTR [edx-0x5e2c141f],0xe
  41abcd:	cmp    eax,0x8adae6c7
  41abd2:	cwde   
  41abd3:	push   ebx
  41abd4:	idiv   DWORD PTR [edi-0x5f98d1c4]
  41abda:	fstp   QWORD PTR [eax+ebp*2]
  41abdd:	pop    ebp
  41abde:	mov    bh,0x23
  41abe0:	loopne 0x41ab96
  41abe2:	and    DWORD PTR [edx-0x47622e38],esp
  41abe8:	cmc    
  41abe9:	mov    ss,edx
  41abeb:	test   eax,0x41d07875
  41abf0:	dec    edi
  41abf1:	out    0xb7,eax
  41abf3:	inc    esi
  41abf4:	fnstenv [edi]
  41abf6:	push   0x32
  41abf8:	sbb    ch,BYTE PTR [eax-0x49c98ff5]
  41abfe:	rcl    DWORD PTR [ebx-0x4a],1
  41ac01:	sub    eax,0xbc3cb4ef
  41ac06:	je     0x41abbf
  41ac08:	ud0    ebp,eax
  41ac0b:	push   ds
  41ac0c:	ss cli 
  41ac0e:	push   esp
  41ac0f:	mov    al,ds:0x62f31a12
  41ac14:	ret    0x5ef8
  41ac17:	bound  esi,QWORD PTR [eax-0x53]
  41ac1a:	daa    
  41ac1b:	into   
  41ac1c:	push   edi
  41ac1d:	adc    eax,0x5d01c647
  41ac22:	or     ch,BYTE PTR [ebx+ebp*4+0x827e21b]
  41ac29:	inc    edi
  41ac2a:	mov    bh,0x3e
  41ac2c:	icebp  
  41ac2d:	push   ecx
  41ac2e:	jmp    0x41aca1
  41ac30:	push   edx
  41ac31:	fcomip st,st(2)
  41ac33:	(bad)  
  41ac34:	and    al,0xe3
  41ac36:	mov    ecx,0x95db6767
  41ac3b:	fst    DWORD PTR ds:0xe803a769
  41ac41:	mov    ds:0x500d4ea9,eax
  41ac46:	mov    ebp,0x67bf64a9
  41ac4b:	es push edx
  41ac4d:	stos   DWORD PTR es:[edi],eax
  41ac4e:	jo     0x41ac96
  41ac50:	leave  
  41ac51:	mov    dh,0x6f
  41ac53:	inc    edi
  41ac54:	pop    esi
  41ac55:	xor    eax,eax
  41ac57:	dec    esp
  41ac58:	mul    BYTE PTR ss:[edi]
  41ac5b:	rol    BYTE PTR [ebx+0x1ad198d3],1
  41ac61:	(bad)
  41ac64:	shl    ebp,cl
  41ac66:	test   eax,0xa2779b51
  41ac6b:	pop    edi
  41ac6c:	add    al,0xb9
  41ac6e:	xchg   DWORD PTR [ebx-0x72],ecx
  41ac71:	jo     0x41ac95
  41ac73:	mov    bl,0x1a
  41ac75:	mov    ah,0x26
  41ac77:	lds    edx,FWORD PTR [eax-0x5e]
  41ac7a:	enter  0x1678,0x1d
  41ac7e:	sbb    DWORD PTR [edi],0xffffffa7
  41ac81:	gs jge 0x41ac06
  41ac84:	fs jmp 0x35242783
  41ac8a:	daa    
  41ac8b:	pop    es
  41ac8c:	mov    al,0xdc
  41ac8e:	rep stos DWORD PTR es:[edi],eax
  41ac90:	push   ecx
  41ac91:	cdq    
  41ac92:	mov    eax,ds:0x80b7d408
  41ac97:	xlat   BYTE PTR ds:[ebx]
  41ac98:	lahf   
  41ac99:	sahf   
  41ac9a:	add    DWORD PTR [ebx],ebp
  41ac9c:	cmp    BYTE PTR [esi+0x28],0x4c
  41aca0:	inc    eax
  41aca1:	add    ebx,DWORD PTR [edi+0x67]
  41aca4:	mov    bl,0x64
  41aca6:	and    al,0x2f
  41aca8:	xlat   BYTE PTR ds:[ebx]
  41aca9:	test   eax,0x4c6bfc30
  41acae:	imul   ecx,DWORD PTR [esi-0x22],0xfffffffd
  41acb2:	aam    0xa1
  41acb4:	or     ebx,DWORD PTR [ebx-0x657d5ccc]
  41acba:	push   eax
  41acbb:	dec    esi
  41acbc:	ja     0x41ac62
  41acbe:	arpl   WORD PTR [ebp+ebp*8+0x56f5113a],sp
  41acc5:	inc    esi
  41acc6:	push   es
  41acc7:	lods   eax,DWORD PTR ds:[esi]
  41acc8:	sbb    DWORD PTR [ebx+0x2b5367a3],ecx
  41acce:	mov    ecx,0x3feff6ee
  41acd3:	scas   eax,DWORD PTR es:[edi]
  41acd4:	mov    ch,0x50
  41acd6:	outs   dx,DWORD PTR ss:[esi]
  41acd8:	sub    BYTE PTR [ecx-0x4f],bl
  41acdb:	loope  0x41ad39
  41acdd:	jbe    0x41aca5
  41acdf:	dec    esi
  41ace0:	and    al,0xf0
  41ace2:	retf   
  41ace3:	ficom  DWORD PTR [eax-0xe]
  41ace6:	aaa    
  41ace7:	mov    eax,ds:0x5dbbbccb
  41acec:	dec    ecx
  41aced:	mov    ds:0x38db0dcc,al
  41acf2:	xor    eax,0x99d8387a
  41acf7:	cmp    eax,esi
  41acf9:	icebp  
  41acfa:	test   DWORD PTR [esi-0x56],0x71524988
  41ad01:	pop    ds
  41ad02:	lahf   
  41ad03:	sbb    esi,DWORD PTR [edx-0x5376c5af]
  41ad09:	loop   0x41ad28
  41ad0b:	xor    eax,DWORD PTR [eax]
  41ad0d:	gs scas eax,DWORD PTR es:[edi]
  41ad0f:	mov    eax,ds:0x223104d2
  41ad14:	xchg   DWORD PTR [ebp+edi*8+0x7829e87a],ebx
  41ad1b:	scas   eax,DWORD PTR es:[edi]
  41ad1c:	sbb    eax,0x22b9f161
  41ad21:	sbb    al,0x5d
  41ad23:	mov    eax,ds:0x6a5109ce
  41ad28:	jne    0x41ad53
  41ad2a:	(bad)  
  41ad2b:	mov    dh,0x89
  41ad2d:	sbb    eax,0xaf4fffc3
  41ad32:	hlt    
  41ad33:	mov    ebx,0xd0e1459b
  41ad38:	sub    esi,DWORD PTR [edx-0x1d020029]
  41ad3e:	sbb    esi,eax
  41ad40:	jbe    0x41ad77
  41ad42:	popf   
  41ad43:	test   BYTE PTR [ecx-0xd33ea70],ch
  41ad49:	imul   esi,edi,0x87027b6a
  41ad4f:	dec    edi
  41ad50:	sbb    edx,DWORD PTR ss:[ebp-0x1015b472]
  41ad57:	mov    WORD PTR [ecx+0x51523622],gs
  41ad5d:	mov    bl,0x9a
  41ad5f:	xor    eax,0xf3e9186b
  41ad64:	pextrw esi,(bad),0xc5
  41ad66:	mov    bh,0xfe
  41ad68:	pop    ebx
  41ad69:	mov    eax,0xcf0c5943
  41ad6e:	in     eax,0xee
  41ad70:	mov    eax,0xea38c78b
  41ad75:	fcmovnu st,st(2)
  41ad77:	dec    edx
  41ad78:	push   cs
  41ad79:	loop   0x41ad4c
  41ad7b:	pop    ss
  41ad7c:	xchg   DWORD PTR ds:0xd0ce8172,eax
  41ad82:	add    edx,DWORD PTR [esi-0x680099c6]
  41ad88:	mov    dl,0x5
  41ad8a:	pop    ebp
  41ad8b:	(bad)  
  41ad8c:	push   ebp
  41ad8d:	mov    ah,0xbe
  41ad8f:	pop    ecx
  41ad90:	jle    0x41ad9b
  41ad92:	cdq    
  41ad93:	xor    al,0x51
  41ad95:	and    esi,0x63
  41ad98:	pop    esi
  41ad99:	mov    dl,0x76
  41ad9b:	ja     0x41ada6
  41ad9d:	sub    ebx,DWORD PTR [edi+esi*1]
  41ada0:	sbb    al,0xfb
  41ada2:	cmp    eax,0xe28466e7
  41ada7:	sbb    ah,BYTE PTR [edi+edx*1-0x20]
  41adab:	push   ebp
  41adac:	(bad)  
  41adad:	cmp    al,0xc8
  41adaf:	sbb    al,0x83
  41adb1:	xchg   ebx,eax
  41adb2:	data16 ins BYTE PTR es:[edi],dx
  41adb4:	pop    eax
  41adb5:	sahf   
  41adb6:	xor    BYTE PTR [edi+esi*2],bh
  41adb9:	sbb    ah,BYTE PTR [ebx]
  41adbb:	pusha  
  41adbc:	repz inc edx
  41adbe:	xchg   ebp,eax
  41adbf:	shl    BYTE PTR [edx],1
  41adc1:	daa    
  41adc2:	enter  0x7a51,0x68
  41adc6:	lock das 
  41adc8:	xchg   ecx,eax
  41adc9:	and    edx,DWORD PTR [eax+edx*8+0x38]
  41adcd:	sbb    DWORD PTR [ebx-0x76],edi
  41add0:	pop    ds
  41add1:	loop   0x41ad5b
  41add3:	sti    
  41add4:	add    bh,ah
  41add6:	pusha  
  41add7:	pop    ecx
  41add8:	xchg   DWORD PTR [ecx-0x64d64038],ebp
  41adde:	adc    DWORD PTR [ebx-0x4ce8b8f9],0xbea90ed7
  41ade8:	add    DWORD PTR [esp+eax*8-0x659aae54],edi
  41adef:	retf   0x329f
  41adf2:	mov    esp,0x9f047fcd
  41adf7:	inc    esp
  41adf8:	pop    ecx
  41adf9:	mov    esp,0x3c2601c6
  41adfe:	sub    eax,0x85c64768
  41ae03:	jbe    0x41ad85
  41ae05:	shr    BYTE PTR [edi-0x1e],cl
  41ae08:	cli    
  41ae09:	enter  0x2cb0,0x54
  41ae0d:	mov    bh,0x10
  41ae0f:	popf   
  41ae10:	xor    DWORD PTR [ebx+0x65bd82e3],0x6553566
  41ae1a:	xchg   eax,eax
  41ae1c:	push   0xfffffff2
  41ae1e:	xor    BYTE PTR [ebp-0x3417f0f7],al
  41ae24:	cmp    al,0xd0
  41ae26:	aas    
  41ae27:	or     al,0xfe
  41ae29:	push   cs
  41ae2a:	adc    BYTE PTR [eax-0x6b61566c],dh
  41ae30:	imul   esi,eax,0xffffffff
  41ae33:	inc    ebp
  41ae34:	mov    eax,0xdd6e76ef
  41ae39:	jp     0x41ae75
  41ae3b:	jge    0x41ae10
  41ae3d:	mov    bl,0x31
  41ae3f:	daa    
  41ae40:	sbb    al,0x4
  41ae42:	rcr    BYTE PTR [edx-0x48074494],0xa0
  41ae49:	xor    bh,ah
  41ae4b:	mov    bl,0x62
  41ae4d:	cwde   
  41ae4e:	(bad)  
  41ae4f:	stc    
  41ae50:	shl    DWORD PTR [eax-0x5e],1
  41ae53:	(bad)  
  41ae55:	sub    bh,al
  41ae57:	(bad)  
  41ae58:	sbb    al,0x3b
  41ae5a:	inc    eax
  41ae5b:	xor    ecx,ecx
  41ae5d:	test   esp,0x40124ed2
  41ae63:	add    eax,0xa1bfed9d
  41ae68:	jo     0x41ae8e
  41ae6a:	xor    al,0xeb
  41ae6c:	push   esp
  41ae6d:	or     BYTE PTR [ecx],bl
  41ae6f:	aaa    
  41ae70:	xor    al,0x9e
  41ae72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae73:	sub    eax,0x20cd544b
  41ae78:	mov    dl,0xd5
  41ae7a:	mov    ebx,0x685ffcf1
  41ae7f:	shl    bl,cl
  41ae81:	dec    ecx
  41ae82:	shl    bl,cl
  41ae84:	arpl   WORD PTR [eax+0x41dd84fa],si
  41ae8a:	fdivr  DWORD PTR [ecx+eax*8-0x13]
  41ae8e:	scas   al,BYTE PTR es:[edi]
  41ae8f:	pop    edx
  41ae90:	push   edx
  41ae91:	test   eax,0xa6415b82
  41ae96:	mov    ds:0x153e737e,al
  41ae9b:	js     0x41ae57
  41ae9d:	test   DWORD PTR [bx+di+0x6fca],ecx
  41aea2:	mov    ah,0xaa
  41aea4:	fs mov cl,0x9f
  41aea7:	test   ah,bl
  41aea9:	sbb    BYTE PTR [ebp+edi*8-0x3],dh
  41aead:	out    dx,eax
  41aeae:	call   0xe798:0x5d0cbb2a
  41aeb5:	cmp    eax,0x487b6749
  41aeba:	aas    
  41aebb:	stc    
  41aebc:	daa    
  41aebd:	cmc    
  41aebe:	or     ebx,DWORD PTR [ebx]
  41aec0:	loop   0x41aef1
  41aec2:	data16 mov bh,0x18
  41aec5:	loopne 0x41af3b
  41aec7:	shl    BYTE PTR ds:[edx+eax*8],cl
  41aecb:	dec    edi
  41aecc:	cwde   
  41aecd:	scas   al,BYTE PTR es:[edi]
  41aece:	jp     0x41aed1
  41aed0:	adc    ebx,esi
  41aed2:	push   ss
  41aed3:	sub    BYTE PTR [esp+edi*8],ah
  41aed6:	jmp    0xd4e6:0x6f5f01ee
  41aedd:	xor    al,0x75
  41aedf:	stos   BYTE PTR es:[edi],al
  41aee0:	jbe    0x41aece
  41aee2:	out    0x7f,eax
  41aee4:	les    edi,FWORD PTR [ecx]
  41aee6:	add    ebx,DWORD PTR [edx-0x7c74bd8a]
  41aeec:	jno    0x41af35
  41aeee:	je     0x41aed9
  41aef0:	jl     0x41ae9f
  41aef2:	mov    ds:0x5025b469,eax
  41aef7:	cwde   
  41aef8:	stc    
  41aef9:	mov    DWORD PTR [ebp-0x2b],esp
  41aefc:	scas   eax,DWORD PTR es:[edi]
  41aefd:	jl     0x41aed9
  41aeff:	aaa    
  41af00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af01:	cmc    
  41af02:	rcl    BYTE PTR [esi+0x6d4e22c9],0xab
  41af09:	in     al,0xa7
  41af0b:	adc    esi,DWORD PTR [edx+0x2a683389]
  41af11:	lahf   
  41af12:	mov    al,0x8d
  41af14:	sub    eax,0x855ce804
  41af19:	cld    
  41af1a:	(bad)  
  41af1b:	sub    bl,BYTE PTR [ebp+ebx*8+0x6932d58d]
  41af22:	pop    ss
  41af23:	xchg   ebp,eax
  41af24:	and    DWORD PTR [edi+eax*4+0x3761ac3c],0x66
  41af2c:	add    cl,0x9d
  41af2f:	aad    0x29
  41af31:	loopne 0x41af3f
  41af33:	ins    BYTE PTR es:[edi],dx
  41af34:	leave  
  41af35:	iret   
  41af36:	pop    ss
  41af37:	outs   dx,DWORD PTR ds:[esi]
  41af38:	and    ah,0x35
  41af3b:	mov    WORD PTR [ecx-0x46dd82e8],ds
  41af41:	push   esi
  41af42:	push   cs
  41af43:	in     eax,dx
  41af44:	rol    BYTE PTR [ebp+edx*4+0x2912fb3],cl
  41af4b:	shr    DWORD PTR [ebx+0x18],cl
  41af4e:	adc    ebp,DWORD PTR [bp+si+0xf]
  41af52:	and    eax,0xe3678487
  41af57:	gs das 
  41af59:	push   edx
  41af5a:	bound  edx,QWORD PTR [ebp+0x20]
  41af5d:	xor    al,0xa8
  41af5f:	and    cl,BYTE PTR [edi-0x72]
  41af62:	hlt    
  41af63:	repnz inc edx
  41af65:	xor    eax,0xd52af342
  41af6a:	inc    edi
  41af6b:	cmp    al,0xc
  41af6d:	mov    ch,0xcf
  41af6f:	mov    ch,0x46
  41af71:	out    0x48,eax
  41af73:	or     dh,BYTE PTR [ecx+ebp*2+0x65]
  41af77:	leave  
  41af78:	cs dec ecx
  41af7a:	and    eax,0xa8573487
  41af7f:	mov    ebx,0xf378b790
  41af84:	push   ebx
  41af85:	pop    ecx
  41af86:	in     eax,dx
  41af87:	pop    eax
  41af88:	and    DWORD PTR cs:[eiz*2+0x29c099ed],edi
  41af90:	(bad)  
  41af91:	(bad)  
  41af92:	stos   BYTE PTR es:[edi],al
  41af93:	rcl    DWORD PTR [ebx],cl
  41af95:	adc    edx,DWORD PTR [ebx]
  41af97:	pop    esp
  41af98:	cwde   
  41af99:	xchg   edx,eax
  41af9a:	enter  0x1cc0,0x8f
  41af9e:	push   0x7adcfa38
  41afa3:	inc    ecx
  41afa4:	test   eax,0xc31df823
  41afa9:	add    BYTE PTR [esi],0xf6
  41afac:	mov    ebp,0x77a9d2c7
  41afb1:	jo     0x41af99
  41afb3:	mov    esi,DWORD PTR [eax+ecx*2+0x4e]
  41afb7:	dec    ecx
  41afb8:	retf   0x33c1
  41afbb:	in     al,0xda
  41afbd:	div    ebx
  41afbf:	sbb    al,al
  41afc1:	mov    dh,0x62
  41afc3:	jnp    0x41af8d
  41afc5:	add    eax,0x100ce413
  41afca:	sbb    DWORD PTR [ebx+0x55],ebx
  41afcd:	mov    dh,0x3b
  41afcf:	aam    0x2c
  41afd1:	fs loop 0x41af7f
  41afd4:	mov    esp,0x3d76ffeb
  41afd9:	retf   0x708f
  41afdc:	jne    0x41b03a
  41afde:	cwde   
  41afdf:	mov    al,0xb2
  41afe1:	mul    BYTE PTR [eax]
  41afe3:	xchg   ecx,eax
  41afe4:	rcr    DWORD PTR [edx],1
  41afe6:	je     0x41afe0
  41afe8:	dec    eax
  41afe9:	mov    bh,0xcd
  41afeb:	xor    ebx,edx
  41afed:	aam    0x37
  41afef:	or     bh,BYTE PTR [ebp-0x6c8f686c]
  41aff5:	add    eax,0xfaa5e0b9
  41affa:	xacquire xchg BYTE PTR [ebx+0x33051158],al
  41b001:	add    eax,0xf44c4647
  41b006:	(bad)
  41b009:	adc    ch,al
  41b00b:	adc    eax,0x31a7e39e
  41b010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b011:	cdq    
  41b012:	inc    edi
  41b013:	out    dx,al
  41b014:	je     0x41b036
  41b016:	xor    BYTE PTR [ebx],ch
  41b018:	sti    
  41b019:	arpl   cx,ax
  41b01b:	int    0x25
  41b01d:	mov    ?,ebx
  41b01f:	mov    ds:0x763364d8,al
  41b024:	into   
  41b025:	in     al,0xff
  41b027:	mov    bl,0xc0
  41b029:	shl    DWORD PTR [ebx+eax*1],0xf4
  41b02d:	lock repz mov edx,0x12f954dc
  41b034:	lea    ebx,[edx]
  41b036:	nop
  41b037:	push   esp
  41b038:	adc    BYTE PTR [edx+eax*8-0x1399e198],al
  41b03f:	sbb    DWORD PTR [ecx],ecx
  41b041:	or     DWORD PTR [ebx+eax*8+0x7c1aaea2],esi
  41b048:	dec    ecx
  41b049:	push   ecx
  41b04a:	sbb    DWORD PTR [ebx-0xbb45d88],ebx
  41b050:	dec    ebp
  41b051:	std    
  41b052:	dec    esi
  41b053:	jno    0x41b002
  41b055:	sahf   
  41b056:	xchg   ecx,eax
  41b057:	popf   
  41b058:	xchg   edi,eax
  41b059:	aam    0xe9
  41b05b:	adc    BYTE PTR [eax],ch
  41b05d:	or     BYTE PTR [ebp-0x5028efe],ah
  41b063:	pop    ebp
  41b064:	push   0x55b9dc1e
  41b069:	pmaxsw mm5,mm5
  41b06c:	jb     0x41b07e
  41b06e:	sahf   
  41b06f:	mov    ds,WORD PTR [eax+ebp*4-0x4a]
  41b073:	test   DWORD PTR [esi+edi*8],ebp
  41b076:	jp     0x41b084
  41b078:	pop    ecx
  41b079:	xor    eax,0xe1ecebe8
  41b07e:	sbb    BYTE PTR [eax+0xf],cl
  41b081:	call   0x8157:0xc9c4abd8
  41b088:	push   edi
  41b089:	test   DWORD PTR [ecx],esp
  41b08b:	cld    
  41b08c:	xor    BYTE PTR [eax+0x834a37f],bh
  41b092:	cld    
  41b093:	jo     0x41b046
  41b095:	jp     0x41b0fe
  41b097:	gs leave 
  41b099:	dec    ebx
  41b09a:	mov    cl,0xab
  41b09c:	in     eax,dx
  41b09d:	adc    WORD PTR [edi-0xa],bx
  41b0a1:	sub    dl,cl
  41b0a3:	(bad)  
  41b0a5:	cwde   
  41b0a6:	dec    eax
  41b0a7:	(bad)  
  41b0a8:	aam    0xf4
  41b0aa:	ss mov eax,0x963c29e1
  41b0b0:	retf   0x89d7
  41b0b3:	or     BYTE PTR [edi-0x34],0x4
  41b0b7:	mov    bl,0x69
  41b0b9:	je     0x41b0e3
  41b0bb:	sahf   
  41b0bc:	gs fwait
  41b0be:	mov    bl,0xcf
  41b0c0:	jo     0x41b08d
  41b0c2:	lods   eax,DWORD PTR ds:[esi]
  41b0c3:	jl     0x41b04b
  41b0c5:	lds    ecx,FWORD PTR ss:[ecx+0x4f327163]
  41b0cc:	mov    dl,0xd6
  41b0ce:	ret    0xcec6
  41b0d1:	push   ebx
  41b0d2:	sbb    DWORD PTR [ebx-0x41],0xffffffc8
  41b0d6:	daa    
  41b0d7:	add    eax,0xa0f1205b
  41b0dc:	or     cl,BYTE PTR [eax]
  41b0de:	shl    ebx,cl
  41b0e0:	pop    es
  41b0e1:	dec    esi
  41b0e2:	fsubr  st(4),st
  41b0e4:	stos   BYTE PTR es:[edi],al
  41b0e5:	jae    0x41b0fc
  41b0e7:	adc    DWORD PTR [ecx-0x3],ecx
  41b0ea:	adc    bl,BYTE PTR [edi-0x41]
  41b0ed:	scas   al,BYTE PTR es:[edi]
  41b0ee:	stos   BYTE PTR es:[edi],al
  41b0ef:	xor    al,0xd0
  41b0f1:	aam    0xba
  41b0f3:	(bad)  
  41b0f4:	jl     0x41b10f
  41b0f6:	test   al,0x2b
  41b0f8:	clc    
  41b0f9:	add    dl,BYTE PTR [ecx-0x609c3127]
  41b0ff:	inc    esp
  41b100:	popa   
  41b101:	(bad)  
  41b102:	jmp    0xe711ccac
  41b107:	in     al,dx
  41b108:	mov    esi,0x4b573246
  41b10d:	imul   edi,DWORD PTR [esi-0x51010df6],0x1b0f0b39
  41b117:	pop    ebx
  41b118:	and    esi,DWORD PTR [ecx]
  41b11a:	adc    DWORD PTR [edx-0x30903f0a],esp
  41b120:	out    dx,eax
  41b121:	sbb    al,0x86
  41b123:	sub    ebp,ebx
  41b125:	js     0x41b17a
  41b127:	add    BYTE PTR [edx+0x1a],0x42
  41b12b:	sub    DWORD PTR [esi+0x1412cb29],ebp
  41b131:	jge    0x41b19d
  41b133:	mov    ah,0xe9
  41b135:	fs xchg edx,edx
  41b138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b139:	push   0xffffff9a
  41b13b:	outs   dx,BYTE PTR ds:[esi]
  41b13c:	inc    ebp
  41b13d:	pop    es
  41b13e:	call   0x1239c6eb
  41b143:	pop    es
  41b144:	cli    
  41b145:	xor    ah,BYTE PTR [ebp+0x2d]
  41b148:	enter  0xa315,0xb6
  41b14c:	or     BYTE PTR [eax-0x4d],cl
  41b14f:	mov    DWORD PTR [ebp+0x64bcca89],eax
  41b155:	adc    BYTE PTR [edi+0x15e18ea0],0x9c
  41b15c:	(bad)  
  41b15d:	pop    eax
  41b15e:	or     BYTE PTR [ecx],dh
  41b160:	hlt    
  41b161:	ss mov al,0xeb
  41b164:	loopne 0x41b1b8
  41b166:	push   esp
  41b167:	pop    edi
  41b168:	jnp    0x41b10a
  41b16a:	cwde   
  41b16b:	mov    ds:0x5f72f9a7,al
  41b170:	arpl   WORD PTR [edx-0x4c],bx
  41b173:	inc    esi
  41b174:	fwait
  41b175:	cmp    DWORD PTR [ebx+0x4a],edi
  41b178:	sub    BYTE PTR [edi],bh
  41b17a:	pop    edx
  41b17b:	mov    cl,0x55
  41b17d:	add    eax,0xe2755451
  41b182:	or     edx,DWORD PTR [esi+0x2a]
  41b185:	pop    edi
  41b186:	les    edx,FWORD PTR [ebx]
  41b188:	dec    edx
  41b189:	out    dx,al
  41b18a:	rcr    DWORD PTR [ebp+0x51],1
  41b18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b18e:	(bad)  [esi+0x12784eb0]
  41b194:	shl    dh,1
  41b196:	lods   eax,DWORD PTR ds:[esi]
  41b197:	sub    DWORD PTR [ecx],esp
  41b199:	push   cs
  41b19a:	sub    ebp,ecx
  41b19c:	jb     0x41b1ad
  41b19e:	or     dl,BYTE PTR ds:0xf2018f50
  41b1a4:	outs   dx,BYTE PTR ds:[esi]
  41b1a5:	add    al,0x58
  41b1a7:	mov    ah,0x1c
  41b1a9:	lds    ebx,FWORD PTR [edi+0x1e2debfc]
  41b1af:	addr16 inc edi
  41b1b1:	cli    
  41b1b2:	push   ds
  41b1b3:	dec    ebp
  41b1b4:	mov    ds:0x3b646141,eax
  41b1b9:	add    BYTE PTR [edx+0x6a9dc7ec],cl
  41b1bf:	mov    ch,0x0
  41b1c1:	in     al,dx
  41b1c2:	in     eax,0xb3
  41b1c4:	call   0x35fde15e
  41b1c9:	push   0x78
  41b1cb:	lods   al,BYTE PTR ds:[esi]
  41b1cc:	add    BYTE PTR [eax+eax*4+0x552c8dea],ah
  41b1d3:	jae    0x41b189
  41b1d5:	(bad)  
  41b1d6:	pop    ss
  41b1d7:	mov    ah,0x2e
  41b1d9:	jecxz  0x41b179
  41b1db:	sti    
  41b1dc:	sub    cl,BYTE PTR ss:[ecx+0x609ce29d]
  41b1e3:	push   esp
  41b1e4:	push   0x19de93b4
  41b1e9:	inc    ebx
  41b1ea:	add    al,0xf
  41b1ec:	jnp    0x41b26a
  41b1ee:	pushf  
  41b1ef:	mov    ch,BYTE PTR [edi]
  41b1f1:	mov    cl,0xd6
  41b1f3:	and    al,0xa6
  41b1f5:	repz xchg edi,eax
  41b1f7:	adc    ebx,DWORD PTR cs:[ebx]
  41b1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1fb:	or     BYTE PTR [edx-0x6],bl
  41b1fe:	fdivr  DWORD PTR [eax-0x2aa88405]
  41b204:	mov    edi,0x4945c711
  41b209:	out    0xe,al
  41b20b:	aaa    
  41b20c:	push   es
  41b20d:	mov    esp,0x872b9bf6
  41b212:	call   DWORD PTR [ecx]
  41b214:	dec    eax
  41b215:	or     eax,0xe4d99c85
  41b21a:	call   0x74a:0xa954c41e
  41b221:	stos   BYTE PTR es:[edi],al
  41b222:	test   al,0xc
  41b224:	sbb    esi,DWORD PTR es:[ebp+0x3b]
  41b228:	inc    edi
  41b229:	add    BYTE PTR [esi-0x70],bh
  41b22c:	mov    ds:0xa9239ba0,eax
  41b231:	inc    eax
  41b232:	or     al,0x5c
  41b234:	mov    cl,0x29
  41b236:	push   eax
  41b237:	cmp    bl,ch
  41b239:	and    ah,ch
  41b23b:	cmp    al,0xce
  41b23d:	ja     0x41b244
  41b23f:	xor    dl,BYTE PTR [ebp-0x32]
  41b242:	xchg   BYTE PTR [edi],bh
  41b244:	mov    ecx,0xee70adfe
  41b249:	jmp    0xd383:0x61466118
  41b250:	adc    DWORD PTR [edx+edi*1+0x1943109c],eax
  41b257:	mov    ah,0x93
  41b259:	ds xor ebp,ebp
  41b25c:	push   edx
  41b25d:	lods   al,BYTE PTR ds:[esi]
  41b25e:	ja     0x41b26b
  41b260:	and    eax,0xcca8961e
  41b265:	mov    ebx,0x95cd671c
  41b26a:	jge    0x41b2c9
  41b26c:	rcr    DWORD PTR [ebp-0x2c7df5c9],1
  41b272:	dec    ebp
  41b273:	in     eax,dx
  41b274:	mov    DWORD PTR [ebx+0x23c0442e],ecx
  41b27a:	repz rol BYTE PTR [esi-0x2c970b2],0xaf
  41b282:	out    dx,al
  41b283:	(bad)  
  41b284:	lahf   
  41b285:	stos   DWORD PTR es:[edi],eax
  41b286:	fdivp  st(1),st
  41b288:	sti    
  41b289:	dec    ebx
  41b28a:	mov    edx,0x571655e4
  41b28f:	or     DWORD PTR [ebx+edi*1+0x2061a847],edx
  41b296:	inc    ebp
  41b297:	pop    ebx
  41b298:	sti    
  41b299:	into   
  41b29a:	out    dx,eax
  41b29b:	mov    ecx,DWORD PTR [esi]
  41b29d:	ja     0x41b27d
  41b29f:	add    al,0x58
  41b2a1:	(bad)
  41b2a4:	ret    
  41b2a5:	imul   ecx,edx,0x6a
  41b2a8:	xchg   ecx,eax
  41b2a9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ab:	jmp    0x41b2b9
  41b2ad:	shl    BYTE PTR [eax+ecx*1+0x62a09c54],cl
  41b2b4:	cld    
  41b2b5:	xchg   esp,eax
  41b2b6:	cmp    DWORD PTR [ecx+edx*4+0x38],esp
  41b2ba:	sti    
  41b2bb:	lds    ebx,FWORD PTR [ebp+edx*8-0x38]
  41b2bf:	cmp    eax,0x4d1be425
  41b2c4:	(bad)  
  41b2c5:	lds    esp,FWORD PTR [ebp+eax*2-0x16]
  41b2c9:	xor    esi,DWORD PTR [ebp+0x5d93d0a0]
  41b2cf:	add    ebx,DWORD PTR [ebx-0x33]
  41b2d2:	mov    bh,0x8e
  41b2d4:	xchg   edx,eax
  41b2d5:	out    0x70,eax
  41b2d7:	lea    ecx,[eax-0x75e9ddf4]
  41b2dd:	jmp    0xcb4a220c
  41b2e2:	bound  ebp,QWORD PTR [esi-0x2eb5f70e]
  41b2e8:	mov    WORD PTR [edx],?
  41b2ea:	scas   al,BYTE PTR es:[edi]
  41b2eb:	stc    
  41b2ec:	ds pop edx
  41b2ee:	in     eax,0x4d
  41b2f0:	adc    dh,BYTE PTR [ebp-0x3bed435a]
  41b2f6:	mov    cl,al
  41b2f8:	repz mov eax,ds:0xa1ea0597
  41b2fe:	das    
  41b2ff:	cmp    eax,0x40c2e548
  41b304:	ret    0xf2a1
  41b307:	mul    BYTE PTR [ebp+0x5b]
  41b30a:	jmp    0x26bb0155
  41b30f:	inc    ebp
  41b310:	scas   eax,DWORD PTR es:[edi]
  41b311:	sub    DWORD PTR fs:[eax+0x32866413],edi
  41b318:	std    
  41b319:	jmp    0xa1ab8d9a
  41b31e:	(bad)  
  41b31f:	mov    ebx,0xc0b333e6
  41b324:	inc    ebp
  41b325:	cmc    
  41b326:	out    0x80,al
  41b328:	fcom   DWORD PTR [esi-0x5ff01b85]
  41b32e:	mov    edx,0x8771f17
  41b333:	sar    BYTE PTR [eax+0x1b5c68e9],0x93
  41b33a:	mov    dh,0xdd
  41b33c:	adc    al,0x7
  41b33e:	add    eax,0x8f93886f
  41b343:	loopne 0x41b37f
  41b345:	pop    ss
  41b346:	rcl    DWORD PTR [ebx+ebx*2+0x31],cl
  41b34a:	out    dx,eax
  41b34b:	or     ch,bl
  41b34d:	test   eax,0x34f55f3a
  41b352:	inc    edi
  41b353:	xchg   esp,eax
  41b354:	div    DWORD PTR [esi-0x1ae5a697]
  41b35a:	lea    edx,[ebx]
  41b35c:	dec    esp
  41b35d:	mov    ah,0x79
  41b35f:	pop    ecx
  41b360:	dec    ebx
  41b361:	das    
  41b362:	push   ds
  41b363:	xchg   ecx,eax
  41b364:	push   ebp
  41b365:	int    0xa9
  41b367:	or     edx,eax
  41b369:	mov    ds:0xd2edcb81,eax
  41b36e:	enter  0x4ed5,0x5e
  41b372:	xlat   BYTE PTR ds:[ebx]
  41b373:	fdivr  QWORD PTR [ebx+0x7950b48]
  41b379:	inc    esi
  41b37a:	dec    eax
  41b37b:	bound  edx,QWORD PTR [edx]
  41b37d:	sbb    eax,0x80b70fd3
  41b382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b383:	cmp    al,0x12
  41b385:	frstor [esi*8-0x71625860]
  41b38c:	(bad)  
  41b38d:	sub    dh,al
  41b38f:	mov    eax,ds:0xb8352833
  41b394:	mov    eax,DWORD PTR [ecx]
  41b396:	add    BYTE PTR [edx+0x53],al
  41b399:	xchg   edi,eax
  41b39a:	jmp    0x64e32196
  41b39f:	or     eax,0xbe568b8c
  41b3a4:	jl     0x41b400
  41b3a6:	cmp    BYTE PTR [edi+0x4d],bl
  41b3a9:	fstp   QWORD PTR [eax-0x3322b9d1]
  41b3af:	and    DWORD PTR [esi+0x5ca0eb7f],edi
  41b3b5:	ins    DWORD PTR es:[edi],dx
  41b3b6:	mov    al,0x4b
  41b3b8:	cmp    eax,0x9220174e
  41b3bd:	stos   DWORD PTR es:[edi],eax
  41b3be:	mov    al,ds:0x3e73965
  41b3c3:	dec    eax
  41b3c4:	mov    edi,0x49171a01
  41b3c9:	call   0xb4860e80
  41b3ce:	sub    eax,0x15bd3cc7
  41b3d3:	popf   
  41b3d4:	scas   al,BYTE PTR es:[edi]
  41b3d5:	js     0x41b3df
  41b3d7:	push   cs
  41b3d8:	sub    ah,BYTE PTR [edi+0x653f7f49]
  41b3de:	push   ss
  41b3df:	cmp    edi,DWORD PTR [eax+ecx*1+0x69]
  41b3e3:	inc    eax
  41b3e4:	sbb    DWORD PTR [ebp-0x2848a853],ecx
  41b3ea:	les    esi,FWORD PTR [eax]
  41b3ec:	jecxz  0x41b3f0
  41b3ee:	xchg   edi,eax
  41b3ef:	ss jg  0x41b37b
  41b3f2:	jbe    0x41b444
  41b3f4:	lods   eax,DWORD PTR ds:[esi]
  41b3f5:	adc    ch,BYTE PTR [ebp+0x1d609a7c]
  41b3fb:	mov    dl,0x10
  41b3fd:	or     eax,0xac0c2539
  41b402:	push   es
  41b403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b404:	idiv   DWORD PTR [eax-0x20d04fe0]
  41b40a:	stc    
  41b40b:	iret   
  41b40c:	inc    ebp
  41b40d:	fisttp DWORD PTR [eax+0x65e74ae]
  41b413:	sub    esp,DWORD PTR [ecx+0x13]
  41b416:	loopne 0x41b3d9
  41b418:	in     al,0xfa
  41b41a:	(bad)  
  41b41b:	rol    BYTE PTR [ebp+0x4c794c27],1
  41b421:	retf   
  41b422:	adc    eax,DWORD PTR [edx+0x4bd49435]
  41b428:	ret    
  41b429:	inc    edx
  41b42a:	or     esp,esi
  41b42c:	inc    ebp
  41b42d:	pop    ds
  41b42e:	jne    0x41b3e0
  41b430:	cmp    DWORD PTR [ebp+edx*2-0x16c02a1a],0xc241e33a
  41b43b:	jns    0x41b4b5
  41b43d:	mov    cl,BYTE PTR [ecx-0x40]
  41b440:	or     eax,DWORD PTR [edx-0x3]
  41b443:	mov    ecx,0x63c880e
  41b448:	add    BYTE PTR [ecx+0x5f],0x48
  41b44c:	stos   DWORD PTR es:[edi],eax
  41b44d:	loopne 0x41b417
  41b44f:	mov    ebx,0xd83abd9b
  41b454:	mov    al,ds:0x8a2c21c0
  41b459:	icebp  
  41b45a:	jle    0x41b435
  41b45c:	loope  0x41b4bc
  41b45e:	push   ecx
  41b45f:	pop    edi
  41b460:	xlat   BYTE PTR ds:[ebx]
  41b461:	xor    al,0x31
  41b463:	sbb    al,0x56
  41b465:	xchg   ebp,eax
  41b466:	add    BYTE PTR [esi-0x52a6198a],ch
  41b46c:	sbb    eax,0xc384c823
  41b471:	adc    BYTE PTR [eax+ebx*8+0x42ec914f],dl
  41b478:	dec    edx
  41b479:	test   eax,0x76b804d7
  41b47e:	mov    dl,0x18
  41b480:	lea    ecx,[ecx+0x215916f3]
  41b486:	leave  
  41b487:	ror    DWORD PTR [esi+0x790b5122],cl
  41b48d:	je     0x41b492
  41b48f:	push   ds
  41b490:	jmp    0x41b4fa
  41b492:	jne    0x41b48d
  41b494:	call   0x204245f
  41b499:	sbb    cl,dh
  41b49b:	into   
  41b49c:	scas   al,BYTE PTR es:[edi]
  41b49d:	and    eax,0x4b488d91
  41b4a2:	mov    edi,0x2aaf4e8f
  41b4a7:	(bad)  
  41b4a8:	xor    edi,DWORD PTR [eax+0x216828da]
  41b4ae:	fxch   st(7)
  41b4b0:	pop    ecx
  41b4b1:	add    BYTE PTR [edi+0x6d],bh
  41b4b4:	mov    esp,0xd98b2772
  41b4b9:	stc    
  41b4ba:	clc    
  41b4bb:	and    eax,0x517d5d3c
  41b4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c1:	icebp  
  41b4c2:	fisttp WORD PTR [ecx]
  41b4c4:	mov    esi,0x662f32e5
  41b4c9:	pop    eax
  41b4ca:	mov    esi,0xa64431a0
  41b4cf:	ss mov al,0xea
  41b4d2:	jecxz  0x41b4a7
  41b4d4:	sti    
  41b4d5:	ins    BYTE PTR es:[edi],dx
  41b4d6:	call   DWORD PTR [esi-0x14d587c0]
  41b4dc:	mov    cl,0xb4
  41b4de:	mov    DWORD PTR [edx+0x6b4ce8dc],edx
  41b4e4:	xor    al,0x9c
  41b4e6:	push   esi
  41b4e7:	iret   
  41b4e8:	das    
  41b4e9:	inc    esi
  41b4ea:	(bad)
  41b4ed:	(bad)  
  41b4ee:	std    
  41b4ef:	nop
  41b4f0:	adc    ch,dl
  41b4f2:	mov    esi,DWORD PTR [edx-0x26778511]
  41b4f8:	outs   dx,DWORD PTR ds:[esi]
  41b4f9:	dec    esp
  41b4fa:	lds    esi,FWORD PTR [esi-0x35]
  41b4fd:	and    BYTE PTR [esi],0x3
  41b500:	dec    ecx
  41b501:	pop    edi
  41b502:	push   0xa928638a
  41b507:	xor    al,0x1a
  41b509:	inc    eax
  41b50a:	push   ebx
  41b50b:	addr16 dec esp
  41b50d:	leave  
  41b50e:	xchg   esi,eax
  41b50f:	bound  edx,QWORD PTR [ebp-0x3]
  41b512:	retf   
  41b513:	mov    eax,0x117634fd
  41b518:	test   BYTE PTR [edi+0x60],0x60
  41b51c:	pop    ecx
  41b51d:	mov    edi,0xc3c86e5
  41b522:	xor    ebx,edi
  41b524:	fs jmp 0xbf64:0xad4af909
  41b52c:	fimul  WORD PTR [ebx]
  41b52e:	and    DWORD PTR ds:0x8cbae257,0xffffffcb
  41b535:	xchg   edi,eax
  41b536:	push   ds
  41b537:	test   DWORD PTR [edi+0x7f2cb49a],esi
  41b53d:	sbb    eax,0x80935b62
  41b542:	pop    esi
  41b543:	lahf   
  41b544:	add    edi,DWORD PTR [ebx-0x765079b1]
  41b54a:	sub    bh,BYTE PTR [eax+0x141f2ded]
  41b550:	les    ebx,FWORD PTR [esi]
  41b552:	and    al,0xf6
  41b554:	out    dx,eax
  41b555:	clc    
  41b556:	sbb    dh,BYTE PTR [edx]
  41b558:	(bad)  [ecx+0x44]
  41b55b:	xchg   ebp,eax
  41b55c:	scas   al,BYTE PTR es:[edi]
  41b55d:	dec    ecx
  41b55e:	inc    edx
  41b55f:	jl     0x41b547
  41b561:	shl    BYTE PTR [edi-0x1500d301],0x5d
  41b568:	in     al,dx
  41b569:	xor    ebp,DWORD PTR [ecx]
  41b56b:	pop    ecx
  41b56c:	dec    ebp
  41b56d:	xchg   BYTE PTR [edx],dl
  41b56f:	ins    BYTE PTR es:[edi],dx
  41b570:	cmp    al,BYTE PTR [edx]
  41b572:	pushf  
  41b573:	cli    
  41b574:	push   esp
  41b575:	jns    0x41b52f
  41b577:	inc    esi
  41b578:	pushf  
  41b579:	(bad)  
  41b57a:	shr    DWORD PTR [esi],0x9c
  41b57d:	add    ecx,DWORD PTR [edi-0x1]
  41b580:	test   DWORD PTR [esp+ecx*2],0x1242849e
  41b587:	xchg   edx,eax
  41b588:	mov    bh,0x3c
  41b58a:	lods   eax,DWORD PTR ds:[esi]
  41b58b:	mov    edx,0xccc1fb5f
  41b590:	aam    0xfd
  41b592:	fmul   DWORD PTR [edx-0x1c3ea05b]
  41b598:	int    0x26
  41b59a:	popa   
  41b59b:	jecxz  0x41b5ea
  41b59d:	sub    BYTE PTR [ebp-0x49694d63],ch
  41b5a3:	imul   esi,DWORD PTR [edx-0x47],0xad721b3e
  41b5aa:	fsubp  st(0),st
  41b5ac:	xchg   dh,ah
  41b5ae:	fstp   TBYTE PTR [eax]
  41b5b0:	lea    esi,[ebx-0x2ad2893]
  41b5b6:	in     eax,dx
  41b5b7:	fimul  DWORD PTR [ebx+0x344fa19f]
  41b5bd:	ficom  DWORD PTR [eax]
  41b5bf:	ret    0xe2fa
  41b5c2:	ds and al,0x6e
  41b5c5:	ficom  DWORD PTR [eax]
  41b5c7:	dec    edx
  41b5c8:	jnp    0x41b590
  41b5ca:	repnz retf 0xc111
  41b5ce:	cmc    
  41b5cf:	cdq    
  41b5d0:	mov    DWORD PTR [eax],eax
  41b5d2:	mov    ds:0x226ac968,eax
  41b5d7:	sbb    BYTE PTR [ebp+0x28],dh
  41b5da:	xor    BYTE PTR [esi-0x205030f9],al
  41b5e0:	push   ss
  41b5e1:	mov    ebx,0x749ed633
  41b5e6:	adc    DWORD PTR [edx+0x66],0xffffffe2
  41b5ea:	jno    0x41b5ad
  41b5ec:	fnclex 
  41b5ee:	test   al,0x4d
  41b5f0:	stos   DWORD PTR es:[edi],eax
  41b5f1:	pop    eax
  41b5f2:	ds pop ebp
  41b5f4:	pop    ebp
  41b5f5:	rol    BYTE PTR [edx+0x76bcab64],cl
  41b5fb:	adc    ch,BYTE PTR [edi+edi*1]
  41b5fe:	dec    edi
  41b5ff:	cmp    dl,bl
  41b601:	and    BYTE PTR [ecx-0x38da4bd4],dl
  41b607:	xor    bh,BYTE PTR [ebx+0x1a46ed10]
  41b60d:	idiv   al
  41b60f:	cs inc eax
  41b611:	pop    edi
  41b612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b613:	and    DWORD PTR [edx],0x10
  41b616:	cli    
  41b617:	test   eax,0x8055f1cc
  41b61c:	idiv   DWORD PTR [esi]
  41b61e:	push   0xffffffba
  41b620:	aas    
  41b621:	cmp    ch,dl
  41b623:	or     al,0xb0
  41b625:	shl    DWORD PTR [eax-0x1f],1
  41b628:	adc    eax,0x7cf97e68
  41b62d:	cmp    edi,DWORD PTR [ebx+0x14287a2]
  41b633:	jmp    0xfcd71656
  41b638:	push   es
  41b639:	fild   WORD PTR [edi+ebx*4]
  41b63c:	pop    edx
  41b63d:	xlat   BYTE PTR ds:[ebx]
  41b63e:	cwde   
  41b63f:	push   es
  41b640:	adc    DWORD PTR [edx+0x17ac8a4a],eax
  41b646:	jp     0x41b5ee
  41b648:	mov    bh,0x75
  41b64a:	push   ss
  41b64b:	cmp    ecx,DWORD PTR [ecx+ecx*4]
  41b64e:	into   
  41b64f:	(bad)  
  41b650:	repnz dec ebp
  41b652:	inc    ebp
  41b653:	or     al,0x5f
  41b655:	shr    ebx,0x62
  41b658:	push   edi
  41b659:	repz jo 0x41b6d5
  41b65c:	push   es
  41b65d:	out    dx,eax
  41b65e:	jp     0x41b696
  41b660:	sbb    ah,bl
  41b662:	cwde   
  41b663:	cli    
  41b664:	xchg   esi,eax
  41b665:	bound  ecx,QWORD PTR [edx+0x66]
  41b668:	xchg   esi,eax
  41b669:	push   ss
  41b66a:	push   cs
  41b66b:	in     al,0x3
  41b66d:	mov    dh,0x9c
  41b66f:	inc    esi
  41b670:	dec    ebx
  41b671:	push   ecx
  41b672:	jae    0x41b5f5
  41b674:	(bad)  
  41b675:	mov    ah,0x1
  41b677:	clc    
  41b678:	pop    ss
  41b679:	les    ebp,FWORD PTR [eax+0x279aee48]
  41b67f:	sar    DWORD PTR [eax-0x68],1
  41b682:	jecxz  0x41b619
  41b684:	sti    
  41b685:	cld    
  41b686:	pop    ecx
  41b687:	mov    esi,0x64430141
  41b68c:	or     al,0xd0
  41b68e:	repnz pop ebx
  41b690:	cld    
  41b691:	push   0x68269397
  41b696:	adc    BYTE PTR [ebx-0x284304df],ch
  41b69c:	test   eax,0xa77f44ca
  41b6a1:	scas   eax,DWORD PTR es:[edi]
  41b6a2:	pusha  
  41b6a3:	inc    eax
  41b6a4:	sar    DWORD PTR [esi+0x2db36af],1
  41b6aa:	push   ss
  41b6ab:	cs js  0x41b654
  41b6ae:	(bad)  
  41b6b1:	cmp    ah,ah
  41b6b3:	sub    BYTE PTR [edx-0x69],bl
  41b6b6:	and    edx,eax
  41b6b8:	sbb    eax,0xbaa1e029
  41b6bd:	cwde   
  41b6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6bf:	sub    bl,BYTE PTR [eax+0x50]
  41b6c2:	dec    eax
  41b6c3:	retf   0xc3
  41b6c6:	mov    edx,DWORD PTR [edx+0x660f33a5]
  41b6cc:	xchg   DWORD PTR [eax-0x7c],ebx
  41b6cf:	mov    cl,0x76
  41b6d1:	xchg   esp,eax
  41b6d2:	push   edx
  41b6d3:	cmc    
  41b6d4:	jecxz  0x41b680
  41b6d6:	or     BYTE PTR [ecx-0x43],al
  41b6d9:	cmp    eax,0xa9fd076a
  41b6de:	mov    dl,0x9c
  41b6e0:	pop    esi
  41b6e1:	xor    al,0xb8
  41b6e3:	push   0x52daf0d7
  41b6e8:	inc    esp
  41b6e9:	mov    cl,0xe8
  41b6eb:	outs   dx,BYTE PTR ds:[esi]
  41b6ec:	add    cl,dh
  41b6ee:	ret    0x583a
  41b6f1:	sti    
  41b6f2:	repnz push ecx
  41b6f4:	cli    
  41b6f5:	imul   dl
  41b6f7:	jp     0x41b737
  41b6f9:	inc    ebp
  41b6fa:	popa   
  41b6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6fc:	retf   0xe0f6
  41b6ff:	pop    ds
  41b700:	jb     0x41b6c0
  41b702:	fs (bad) 
  41b704:	ss stc 
  41b706:	jne    0x41b6e3
  41b708:	js     0x41b712
  41b70a:	lock or BYTE PTR [edx-0x7e79b898],cl
  41b711:	addr16 pop ebx
  41b713:	xor    al,0x11
  41b715:	(bad)  
  41b716:	jb     0x41b797
  41b718:	lods   eax,DWORD PTR ds:[esi]
  41b719:	sbb    dh,bh
  41b71b:	daa    
  41b71c:	xchg   edx,eax
  41b71d:	(bad)  
  41b71e:	cld    
  41b71f:	mov    dl,0x51
  41b721:	mov    ds:0x268dc6fb,eax
  41b726:	stos   BYTE PTR es:[edi],al
  41b727:	dec    esi
  41b728:	lea    eax,[ecx-0x69]
  41b72b:	int3   
  41b72c:	pushf  
  41b72d:	in     eax,dx
  41b72e:	mov    fs:0x5ddb11fe,al
  41b734:	retf   
  41b735:	bound  esi,QWORD PTR [ebx+esi*4+0x23]
  41b739:	test   DWORD PTR [ecx],esp
  41b73b:	arpl   WORD PTR gs:[edi-0x4369b8b5],dx
  41b742:	push   ebp
  41b743:	xor    BYTE PTR [edi+eax*4+0x10303016],dl
  41b74a:	inc    edi
  41b74b:	lods   al,BYTE PTR ds:[esi]
  41b74c:	or     dh,BYTE PTR [esi+0x4e]
  41b74f:	pop    ebx
  41b750:	pop    edi
  41b751:	dec    eax
  41b752:	or     eax,0xd16bb521
  41b757:	fnstsw WORD PTR [ebx-0x1e863ba4]
  41b75d:	jl     0x41b777
  41b75f:	icebp  
  41b760:	es push eax
  41b762:	popa   
  41b763:	dec    ebp
  41b764:	ret    0xf92
  41b767:	(bad)
  41b76a:	(bad)
  41b76e:	pop    esi
  41b76f:	inc    esi
  41b770:	inc    eax
  41b771:	or     eax,0x4f
  41b774:	fidivr WORD PTR [ecx+0x5c]
  41b777:	push   0x2e
  41b779:	jno    0x41b71e
  41b77b:	adc    bl,bl
  41b77d:	jle    0x41b7c7
  41b77f:	mov    bh,BYTE PTR [ebx]
  41b781:	test   BYTE PTR [ecx-0x6e],al
  41b784:	std    
  41b785:	ds jle 0x41b7d5
  41b788:	xchg   esp,eax
  41b789:	mov    edi,0xc953d08a
  41b78e:	fisub  WORD PTR [eax-0x63]
  41b791:	enter  0x7a5b,0x34
  41b795:	push   esp
  41b796:	retf   
  41b797:	and    DWORD PTR [ebp+eax*8-0x6e],ecx
  41b79b:	jge    0x41b7b2
  41b79d:	sub    al,bl
  41b79f:	scas   eax,DWORD PTR es:[edi]
  41b7a0:	jne    0x41b7f9
  41b7a2:	in     al,0xcd
  41b7a4:	repz xchg ebx,eax
  41b7a6:	mov    esp,0x82b348f5
  41b7ab:	xor    BYTE PTR [esi+0x4ae4dedf],cl
  41b7b1:	dec    ebx
  41b7b2:	enter  0xf825,0xf
  41b7b6:	xchg   esp,eax
  41b7b7:	mov    BYTE PTR [eax-0x130644b2],dh
  41b7bd:	dec    ebp
  41b7be:	pop    eax
  41b7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7c0:	loope  0x41b7a3
  41b7c2:	popf   
  41b7c3:	imul   dh
  41b7c5:	mov    esp,0x3add9d9a
  41b7ca:	inc    eax
  41b7cb:	adc    ch,al
  41b7cd:	loopne 0x41b771
  41b7cf:	sbb    ebx,DWORD PTR [esi]
  41b7d1:	sub    bh,BYTE PTR [ebx+0x4619d127]
  41b7d7:	popf   
  41b7d8:	out    0x35,al
  41b7da:	nop
  41b7db:	xchg   DWORD PTR [eax+0x27],esp
  41b7de:	rcr    DWORD PTR [edx+ebx*8],0xbc
  41b7e2:	inc    ecx
  41b7e3:	in     eax,dx
  41b7e4:	jbe    0x41b7ed
  41b7e6:	pop    es
  41b7e7:	mov    bl,bl
  41b7e9:	stos   BYTE PTR es:[edi],al
  41b7ea:	inc    esi
  41b7eb:	dec    edi
  41b7ed:	jecxz  0x41b779
  41b7ef:	xchg   esi,eax
  41b7f0:	(bad)  
  41b7f1:	mov    bl,0xc4
  41b7f3:	cmp    eax,0xcfec8267
  41b7f8:	jb     0x41b788
  41b7fa:	in     eax,0xea
  41b7fc:	test   DWORD PTR [ebx-0x10],ecx
  41b7ff:	pop    es
  41b800:	xor    al,bh
  41b802:	ret    0x24cb
  41b805:	les    esp,FWORD PTR [ecx+0x2f0d20c6]
  41b80b:	and    ch,BYTE PTR [edx-0x77c8d513]
  41b811:	aad    0x80
  41b813:	mov    ebp,0x5207fd9a
  41b818:	ins    DWORD PTR es:[edi],dx
  41b819:	stos   DWORD PTR es:[edi],eax
  41b81a:	sbb    al,0x9b
  41b81c:	lock inc esp
  41b81e:	push   esp
  41b81f:	push   eax
  41b820:	jle    0x41b882
  41b822:	cmc    
  41b823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b824:	pop    eax
  41b825:	cmp    DWORD PTR [ebx-0x7d5724ec],0x73
  41b82c:	ja     0x41b837
  41b82e:	ds pop ds
  41b830:	nop
  41b831:	popa   
  41b832:	push   edi
  41b833:	cld    
  41b834:	hlt    
  41b835:	sub    al,0xd2
  41b837:	shr    BYTE PTR [edi-0x2a],cl
  41b83a:	es inc ecx
  41b83c:	and    esp,DWORD PTR cs:[ecx+ebp*1-0x3a23c294]
  41b844:	jmp    0x41b870
  41b846:	and    al,0x54
  41b848:	mov    edi,DWORD PTR [edi+0x411c4a4e]
  41b84e:	push   0xffffff92
  41b850:	fwait
  41b851:	push   esi
  41b852:	lds    eax,FWORD PTR [ecx]
  41b854:	mov    dl,0x5b
  41b856:	adc    DWORD PTR [edi+edx*8+0x5d],edi
  41b85a:	rcr    bh,cl
  41b85c:	sub    al,BYTE PTR [ebx+eax*8-0x6f]
  41b860:	adc    al,0xa8
  41b862:	pop    ecx
  41b863:	test   DWORD PTR [esi+0x38287e63],esp
  41b869:	(bad)  
  41b86a:	fist   WORD PTR [edi]
  41b86c:	push   eax
  41b86d:	mov    BYTE PTR [edx-0xfc64b4c],cl
  41b873:	imul   ebx,DWORD PTR [edi-0x1d],0x1a7ccd5
  41b87a:	das    
  41b87b:	cmp    eax,edx
  41b87d:	into   
  41b87e:	jb     0x41b819
  41b880:	jmp    0xf3c707ed
  41b885:	nop
  41b886:	es sahf 
  41b888:	ja     0x41b873
  41b88a:	mov    dh,BYTE PTR ds:0x24abed16
  41b890:	enter  0xa1,0x1e
  41b894:	aaa    
  41b895:	sbb    edx,esi
  41b897:	add    ah,al
  41b899:	mov    al,ds:0xbc689592
  41b89e:	push   0xffffffdc
  41b8a0:	mov    ch,0x10
  41b8a2:	or     esi,DWORD PTR [ecx]
  41b8a4:	sub    al,ah
  41b8a6:	ins    BYTE PTR es:[edi],dx
  41b8a7:	test   DWORD PTR ds:0x5a5221dd,ebp
  41b8ad:	cdq    
  41b8ae:	loopne 0x41b832
  41b8b0:	out    0xbe,eax
  41b8b2:	mov    dl,0x42
  41b8b4:	pop    ecx
  41b8b5:	cmc    
  41b8b6:	add    al,0x46
  41b8b8:	inc    ecx
  41b8b9:	mov    dl,0xef
  41b8bb:	adc    DWORD PTR [ecx-0xc],eax
  41b8be:	inc    ebp
  41b8bf:	leave  
  41b8c0:	je     0x41b84f
  41b8c2:	mov    dl,0xa0
  41b8c4:	ret    
  41b8c5:	pop    ss
  41b8c6:	faddp  st(1),st
  41b8c8:	dec    esp
  41b8c9:	test   al,0x49
  41b8cb:	test   al,0x6b
  41b8cd:	sub    ch,BYTE PTR [eax]
  41b8cf:	xacquire xchg BYTE PTR [bx+si],bl
  41b8d3:	mov    ebp,0x65c26924
  41b8d8:	xor    DWORD PTR [edi+0x332d19ad],edi
  41b8de:	in     al,0x87
  41b8e0:	test   al,0xd4
  41b8e2:	push   edi
  41b8e3:	xchg   BYTE PTR [edi+0x5921e6b],al
  41b8e9:	ret    0xd54e
  41b8ec:	pop    esp
  41b8ed:	inc    edx
  41b8ee:	sub    al,0x10
  41b8f0:	jg     0x41b8e7
  41b8f2:	and    eax,0x8ad3819b
  41b8f7:	xor    DWORD PTR [ebx+0x17],ebx
  41b8fa:	jns    0x41b961
  41b8fc:	fistp  WORD PTR [edx]
  41b8fe:	out    dx,eax
  41b8ff:	addr16 in eax,0xfb
  41b902:	mov    bh,0x13
  41b904:	ds push eax
  41b906:	mov    cl,0x99
  41b908:	and    ah,dh
  41b90a:	gs (bad) 
  41b90c:	pop    ss
  41b90d:	mov    dl,0x89
  41b90f:	pop    ecx
  41b910:	lea    ebx,[ebp+eax*1-0x718664d2]
  41b917:	bound  eax,QWORD PTR [eax-0x3f20183b]
  41b91d:	mov    bh,0xc
  41b91f:	jno    0x41b8ba
  41b921:	nop
  41b922:	jb     0x41b8dc
  41b924:	mov    esi,0xd3dd562
  41b929:	pop    esi
  41b92a:	xchg   esi,eax
  41b92b:	(bad)
  41b92e:	sub    al,0xaf
  41b930:	mov    dl,0xe4
  41b932:	mov    WORD PTR [ebx-0x3998a05a],fs
  41b938:	sbb    DWORD PTR [esi+0x1b62c0f7],eax
  41b93e:	jg     0x41b8d8
  41b940:	test   BYTE PTR [edi-0x52],al
  41b943:	and    eax,0x686eb11a
  41b948:	stos   DWORD PTR es:[edi],eax
  41b949:	pop    esi
  41b94a:	mov    edi,0x495050ce
  41b94f:	mov    ch,0x95
  41b951:	mov    edx,0x9f90be7a
  41b956:	ret    
  41b957:	js     0x41b933
  41b959:	and    DWORD PTR [ebx+0x35],ebx
  41b95c:	imul   esp,edi,0xd8d2713
  41b962:	scas   al,BYTE PTR es:[edi]
  41b963:	dec    eax
  41b964:	test   DWORD PTR [edi-0xbbdfe1e],esi
  41b96a:	stc    
  41b96b:	xchg   esp,eax
  41b96c:	sub    eax,0xa55029de
  41b971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b972:	int    0x10
  41b974:	jae    0x41b937
  41b976:	rol    BYTE PTR [edx],cl
  41b978:	das    
  41b979:	imul   BYTE PTR [edx-0x67]
  41b97c:	and    al,0xa6
  41b97e:	xor    eax,0x26b08a39
  41b983:	in     eax,dx
  41b984:	ins    BYTE PTR es:[edi],dx
  41b985:	jge    0x41b9fa
  41b987:	or     bl,dh
  41b989:	ins    BYTE PTR es:[edi],dx
  41b98a:	ins    BYTE PTR es:[edi],dx
  41b98b:	jecxz  0x41b92b
  41b98d:	lods   eax,DWORD PTR ds:[esi]
  41b98e:	push   0x41a336ef
  41b993:	inc    BYTE PTR [edi-0x81f2ac3]
  41b999:	jecxz  0x41b9b6
  41b99b:	aad    0xcb
  41b99d:	push   eax
  41b99e:	adc    BYTE PTR [esi],bl
  41b9a0:	jge    0x41b9cd
  41b9a2:	or     eax,0x98030768
  41b9a7:	sbb    al,0x1f
  41b9a9:	jg     0x41b9f8
  41b9ab:	and    DWORD PTR [eax+edi*8+0x410a175a],ebp
  41b9b2:	retf   
  41b9b3:	cdq    
  41b9b4:	(bad)  [ebp+0x3006881e]
  41b9ba:	jbe    0x41b954
  41b9bc:	add    BYTE PTR [eax-0x82b08cc],0xf4
  41b9c3:	cmp    ebx,edi
  41b9c5:	into   
  41b9c6:	and    eax,0xcdc8e16f
  41b9cb:	daa    
  41b9cc:	out    0xeb,eax
  41b9ce:	fistp  QWORD PTR [ebx+0x72]
  41b9d1:	test   eax,0xd0747ccf
  41b9d6:	fst    DWORD PTR [esi-0xc6fa6f0]
  41b9dc:	adc    al,BYTE PTR [ebx-0x3]
  41b9df:	pop    edx
  41b9e0:	shr    DWORD PTR [ecx],cl
  41b9e2:	mov    ecx,0x25111787
  41b9e7:	pop    es
  41b9e8:	in     eax,0x62
  41b9ea:	int    0x36
  41b9ec:	(bad)  
  41b9ed:	push   ebp
  41b9ee:	in     eax,0xf
  41b9f0:	fiadd  WORD PTR [edx]
  41b9f2:	push   ebp
  41b9f3:	add    eax,0xc1bf7a5d
  41b9f8:	fisubr DWORD PTR ds:0x16b3a5ad
  41b9fe:	push   eax
  41b9ff:	mov    edi,0x7e769ff3
  41ba04:	mov    edi,0x12d2cd63
  41ba09:	es inc ebx
  41ba0b:	xchg   edi,eax
  41ba0c:	fldcw  WORD PTR [edx+0x6494a453]
  41ba12:	jecxz  0x41ba52
  41ba14:	push   ebx
  41ba15:	jae    0x41b9f2
  41ba17:	add    eax,0xe84f595c
  41ba1c:	cmp    al,0xdd
  41ba1e:	pop    ds
  41ba1f:	ror    ebp,0xfe
  41ba22:	mov    al,ds:0x6cf69df4
  41ba27:	mov    BYTE PTR [edi-0x52b7db6],dh
  41ba2d:	leave  
  41ba2e:	push   0xfcebd17f
  41ba33:	adc    ebp,esp
  41ba35:	mov    ebp,DWORD PTR [eax-0x46]
  41ba38:	xor    bh,bl
  41ba3a:	mov    ch,0x45
  41ba3c:	lock hlt 
  41ba3e:	adc    eax,0x88996ab7
  41ba43:	mov    ah,0x3f
  41ba45:	cli    
  41ba46:	xchg   BYTE PTR [edx+0x1569a0fc],bh
  41ba4c:	adc    esi,DWORD PTR [edx]
  41ba4e:	retf   0xd819
  41ba51:	push   ss
  41ba52:	adc    ah,BYTE PTR [eax]
  41ba54:	xor    BYTE PTR [ebx],al
  41ba56:	cs popa 
  41ba58:	es inc edi
  41ba5a:	pop    esi
  41ba5b:	jne    0x41bad3
  41ba5d:	mov    edi,0xdc1d6d94
  41ba62:	mov    ebp,0xe6efa532
  41ba67:	js     0x41baa0
  41ba69:	push   ss
  41ba6a:	pop    edx
  41ba6b:	xor    ah,bh
  41ba6d:	jo     0x41ba99
  41ba6f:	pusha  
  41ba70:	lea    edx,[ebx]
  41ba72:	adc    edx,DWORD PTR [ecx]
  41ba74:	mov    eax,ds:0x615a0276
  41ba79:	and    edx,DWORD PTR [ecx+eiz*2+0x68]
  41ba7d:	shr    DWORD PTR [eax-0x2d62bfad],cl
  41ba83:	inc    ecx
  41ba84:	cmp    ebp,DWORD PTR [ebp-0x22f792da]
  41ba8a:	in     al,0x38
  41ba8c:	push   ecx
  41ba8d:	add    al,0xb8
  41ba8f:	aam    0x85
  41ba91:	and    eax,DWORD PTR [edi]
  41ba93:	sbb    DWORD PTR [edx],esi
  41ba95:	add    esi,DWORD PTR [eax+0x4f]
  41ba98:	cs gs inc ebp
  41ba9b:	in     al,0x5
  41ba9d:	inc    esp
  41ba9e:	stos   DWORD PTR es:[edi],eax
  41ba9f:	ret    
  41baa0:	fidiv  WORD PTR [ecx-0x73]
  41baa3:	sub    BYTE PTR [esi],cl
  41baa5:	mov    ebx,0xabf3fa3b
  41baaa:	push   cs
  41baab:	xor    DWORD PTR [esi-0x2c],ecx
  41baae:	fdiv   QWORD PTR [edi]
  41bab0:	cld    
  41bab1:	mov    ss,WORD PTR [eax-0x5ddeb658]
  41bab7:	lods   eax,DWORD PTR ds:[esi]
  41bab8:	out    0x1f,eax
  41baba:	gs pop es
  41babc:	not    BYTE PTR [edi+0x4313d7c1]
  41bac2:	adc    al,0xe9
  41bac4:	out    0x26,eax
  41bac6:	push   ss
  41bac7:	and    ebx,DWORD PTR [esi]
  41bac9:	cld    
  41baca:	test   DWORD PTR [eax+0x6e],ebp
  41bacd:	xor    al,0x5e
  41bacf:	aaa    
  41bad0:	push   0xffffffff
  41bad2:	shl    BYTE PTR [eax+edx*8+0x11],1
  41bad6:	dec    edi
  41bad7:	sbb    ecx,ebp
  41bad9:	ss dec esi
  41badb:	rol    DWORD PTR [ecx+eax*4+0x3c],cl
  41badf:	add    BYTE PTR [ebx+eax*4],0xcb
  41bae3:	fild   WORD PTR [ebx+0x48]
  41bae6:	xchg   edi,eax
  41bae7:	adc    al,BYTE PTR [ebx-0x700a1680]
  41baed:	sub    edx,DWORD PTR [ecx+0xb]
  41baf0:	cmp    ebx,DWORD PTR [esi-0x6f7207fc]
  41baf6:	hlt    
  41baf7:	dec    esi
  41baf8:	pop    ss
  41baf9:	dec    esp
  41bafa:	or     BYTE PTR fs:[edi],dh
  41bafd:	mov    cs,edx
  41baff:	cmp    eax,0xcc7975fa
  41bb04:	mov    bl,0xe6
  41bb06:	cwde   
  41bb07:	sub    DWORD PTR [esp+ebp*8+0x19ae00c0],0x66
  41bb0f:	shl    DWORD PTR [esi+0x62],1
  41bb12:	jecxz  0x41bab0
  41bb14:	lock inc ebx
  41bb16:	cld    
  41bb17:	sub    eax,0x7e6f9a23
  41bb1c:	inc    dx
  41bb1e:	add    al,0x57
  41bb20:	dec    ebp
  41bb21:	mov    eax,ds:0x57ee0a29
  41bb26:	add    al,0x6d
  41bb28:	or     BYTE PTR [ebp-0x2c90a0ad],dh
  41bb2e:	cmp    al,0xc5
  41bb30:	fstp   TBYTE PTR [eax-0x424973af]
  41bb36:	dec    edi
  41bb37:	xchg   esi,eax
  41bb38:	xor    al,0xde
  41bb3a:	mov    ds:0xbfa892b3,eax
  41bb3f:	test   al,0x7d
  41bb41:	mov    cl,0x88
  41bb43:	(bad)  [edx-0x421f9fa8]
  41bb49:	jecxz  0x41bb5d
  41bb4b:	push   ebx
  41bb4c:	and    edi,DWORD PTR [eax]
  41bb4e:	stc    
  41bb4f:	sahf   
  41bb50:	leave  
  41bb51:	pop    esi
  41bb52:	push   ebx
  41bb53:	or     ah,bl
  41bb55:	clc    
  41bb56:	jae    0x41bba7
  41bb58:	out    dx,eax
  41bb59:	jb     0x41bbbf
  41bb5b:	adc    esi,edi
  41bb5d:	mov    al,0x61
  41bb5f:	lock sahf 
  41bb61:	dec    ebx
  41bb62:	pop    esi
  41bb63:	push   DWORD PTR ds:0xd5439bec
  41bb69:	in     al,dx
  41bb6a:	sbb    esp,esp
  41bb6c:	aam    0x40
  41bb6e:	imul   edi,DWORD PTR [eax+0x16],0x9c9d61bb
  41bb75:	stos   DWORD PTR es:[edi],eax
  41bb76:	enter  0x1222,0xe5
  41bb7a:	out    0x10,eax
  41bb7c:	xchg   esp,eax
  41bb7d:	ds shl eax,1
  41bb80:	and    BYTE PTR [ebx+0x37],bl
  41bb83:	inc    ebx
  41bb84:	pop    ebp
  41bb85:	mov    eax,0xa748c305
  41bb8a:	mov    ds:0xaf4057c1,eax
  41bb8f:	lea    ebp,[esi]
  41bb91:	dec    edx
  41bb92:	in     eax,dx
  41bb93:	ja     0x41bbfd
  41bb95:	or     al,0x43
  41bb97:	fwait
  41bb98:	push   cs
  41bb99:	in     al,dx
  41bb9a:	scas   al,BYTE PTR es:[edi]
  41bb9b:	test   al,0x8d
  41bb9d:	popa   
  41bb9e:	jl     0x41bb59
  41bba0:	xchg   ecx,eax
  41bba1:	sbb    dh,ah
  41bba3:	push   0xffffff88
  41bba5:	int    0x36
  41bba7:	mov    dh,0xb7
  41bba9:	xchg   bl,cl
  41bbab:	pop    ebx
  41bbac:	xchg   BYTE PTR [esi],bh
  41bbae:	mov    ds:0x4fe62dca,eax
  41bbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbb4:	fild   QWORD PTR [edi]
  41bbb6:	or     ch,BYTE PTR [edx-0x5cc9d209]
  41bbbc:	and    al,0xde
  41bbbe:	call   0x2c882f8d
  41bbc3:	and    ebp,ebp
  41bbc5:	mov    edx,0x896c744f
  41bbca:	dec    edi
  41bbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbcc:	push   ebx
  41bbcd:	leave  
  41bbce:	cmp    al,0xd3
  41bbd0:	inc    edi
  41bbd1:	popa   
  41bbd2:	outs   dx,BYTE PTR ds:[esi]
  41bbd3:	not    al
  41bbd5:	jmp    0x41bb97
  41bbd7:	arpl   di,dx
  41bbd9:	outs   dx,BYTE PTR ds:[esi]
  41bbda:	lods   al,BYTE PTR ds:[esi]
  41bbdb:	ror    dh,cl
  41bbdd:	and    BYTE PTR es:[edi-0xe836bf3],dh
  41bbe4:	mov    edi,0x4a4b81ac
  41bbe9:	es es pop edx
  41bbec:	popa   
  41bbed:	cs push ss
  41bbef:	xor    al,0x50
  41bbf1:	adc    eax,0xe6a55e52
  41bbf6:	ret    0x2fdc
  41bbf9:	or     eax,0xf7ce33c3
  41bbfe:	(bad)  
  41bbff:	jne    0x41bc44
  41bc01:	xor    al,0x9
  41bc03:	aas    
  41bc04:	pop    edx
  41bc05:	out    dx,eax
  41bc06:	pop    ss
  41bc07:	jge    0x41bbcb
  41bc09:	pop    ds
  41bc0a:	(bad)  
  41bc0c:	jge    0x41bbea
  41bc0e:	inc    eax
  41bc0f:	mov    WORD PTR [edx+eiz*2-0x26],ds
  41bc13:	mov    ds:0xb30cd768,al
  41bc18:	mov    al,0x6a
  41bc1a:	stos   DWORD PTR es:[edi],eax
  41bc1b:	std    
  41bc1c:	retf   
  41bc1d:	add    al,BYTE PTR [ebp+0x25]
  41bc20:	mov    dh,BYTE PTR [eax-0x2c6c3450]
  41bc26:	test   eax,0xebde7a02
  41bc2b:	cmp    edi,edx
  41bc2d:	push   eax
  41bc2e:	in     eax,dx
  41bc2f:	jmp    0x288da992
  41bc34:	fdivr  QWORD PTR [eax+edx*4]
  41bc37:	mov    dl,0xc9
  41bc39:	pop    ecx
  41bc3a:	add    DWORD PTR [edx-0x1d],edx
  41bc3d:	in     eax,0x81
  41bc3f:	icebp  
  41bc40:	cmp    BYTE PTR [edx-0x31d5d36c],cl
  41bc46:	stos   BYTE PTR es:[edi],al
  41bc47:	hlt    
  41bc48:	push   edi
  41bc49:	adc    eax,0x835ab165
  41bc4e:	out    0x41,al
  41bc50:	rcl    ecx,1
  41bc52:	sub    edx,esp
  41bc54:	pop    ebx
  41bc55:	add    eax,0xa34db09c
  41bc5a:	pop    eax
  41bc5b:	jns    0x41bc9c
  41bc5d:	in     al,dx
  41bc5e:	je     0x41bc6f
  41bc60:	mov    edx,0x86b1143f
  41bc65:	pop    es
  41bc66:	pop    ebx
  41bc67:	(bad)  
  41bc69:	daa    
  41bc6a:	pushf  
  41bc6b:	adc    BYTE PTR [edx+eax*4+0x126cbe54],ah
  41bc72:	dec    esp
  41bc73:	mov    bl,0xb5
  41bc75:	inc    esi
  41bc76:	cwde   
  41bc77:	outs   dx,BYTE PTR ds:[esi]
  41bc78:	mov    BYTE PTR [ebx-0x19bb33be],dh
  41bc7e:	xchg   edi,eax
  41bc7f:	cmp    cl,ch
  41bc81:	mov    ds:0xb7f11381,al
  41bc86:	fsub   st(0),st
  41bc88:	jmp    0x41bc57
  41bc8a:	and    ebp,DWORD PTR [edi]
  41bc8c:	test   eax,0x75e78bb
  41bc91:	mov    WORD PTR [edi+0x603f40b2],ds
  41bc97:	add    ebp,ebp
  41bc99:	mov    cl,0xe2
  41bc9b:	sar    esp,1
  41bc9d:	xchg   ebx,eax
  41bc9e:	adc    cl,ah
  41bca0:	dec    esi
  41bca1:	(bad)  
  41bca2:	les    esp,FWORD PTR [ebx+esi*8+0x4d27681d]
  41bca9:	jbe    0x41bc44
  41bcab:	xor    al,0x9e
  41bcad:	jg     0x41bcea
  41bcaf:	inc    ebp
  41bcb0:	jle    0x41bd02
  41bcb2:	(bad)
  41bcb7:	push   esp
  41bcb8:	lds    esi,FWORD PTR [edx]
  41bcba:	rol    DWORD PTR [ebx+0x7],cl
  41bcbd:	mov    DWORD PTR [ecx],edi
  41bcbf:	mov    ds:0x17daa932,al
  41bcc4:	xor    dh,BYTE PTR [ebx-0x10c3aef6]
  41bcca:	push   ecx
  41bccb:	mov    cl,0x73
  41bccd:	scas   eax,DWORD PTR es:[edi]
  41bcce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bccf:	repz and al,0x40
  41bcd2:	lea    ecx,[ebp-0x2bcc8c35]
  41bcd8:	mov    ds:0x6ca36ffc,al
  41bcdd:	call   0xf5c8:0x99758fa2
  41bce4:	ja     0x41bc6d
  41bce6:	adc    DWORD PTR [ebx-0x3dfe841a],ebx
  41bcec:	cmp    al,0xed
  41bcee:	or     DWORD PTR [edx-0x3a1e17ea],ebp
  41bcf4:	pop    ecx
  41bcf5:	mov    WORD PTR [esi],?
  41bcf7:	sub    al,dh
  41bcf9:	pop    eax
  41bcfa:	out    0x8f,eax
  41bcfc:	les    eax,FWORD PTR [edi+esi*1+0x5babe60c]
  41bd03:	and    eax,edx
  41bd05:	mov    bl,0xe0
  41bd07:	mov    ds:0xe5f391d2,eax
  41bd0c:	pop    ss
  41bd0d:	mov    DWORD PTR ds:0x3eec88ef,ecx
  41bd13:	push   esp
  41bd14:	jle    0x41bc9f
  41bd16:	fs adc eax,0x7d575539
  41bd1c:	fucom  st(1)
  41bd1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd1f:	cmc    
  41bd20:	dec    esp
  41bd21:	pusha  
  41bd22:	in     eax,dx
  41bd23:	jnp    0x41bd46
  41bd25:	push   ecx
  41bd26:	cmp    DWORD PTR [ebx-0x3e008be2],ecx
  41bd2c:	sar    ah,1
  41bd2e:	scas   al,BYTE PTR es:[edi]
  41bd2f:	sbb    BYTE PTR [ecx],dl
  41bd31:	push   0xf5edbec
  41bd36:	shl    al,0x94
  41bd39:	pushf  
  41bd3a:	retf   0x7062
  41bd3d:	jmp    0x41bd3e
  41bd3f:	adc    DWORD PTR [edx+0xa],0xb73935d4
  41bd46:	xor    BYTE PTR [esi+0x44],0x39
  41bd4a:	xchg   edx,eax
  41bd4b:	sahf   
  41bd4c:	inc    esi
  41bd4d:	mov    al,BYTE PTR [eax+0x7ac426e0]
  41bd53:	retf   0xff75
  41bd56:	jnp    0x41bd88
  41bd58:	loop   0x41bd2a
  41bd5a:	ficomp DWORD PTR [ebx+0x42]
  41bd5d:	push   edi
  41bd5e:	jmp    0x98fb7879
  41bd63:	dec    ebp
  41bd64:	push   0x74
  41bd66:	test   cl,al
  41bd68:	jle    0x41bd45
  41bd6a:	or     cl,BYTE PTR [edi-0x312e04fe]
  41bd70:	push   edi
  41bd71:	cmp    ebp,ebx
  41bd73:	jp     0x41bd25
  41bd75:	cli    
  41bd76:	cmp    ebx,DWORD PTR [esi-0x6fe44b0d]
  41bd7c:	adc    ebx,DWORD PTR [ebp+eiz*2+0x5a]
  41bd80:	and    al,0x78
  41bd82:	and    BYTE PTR [ebp+0x29740610],cl
  41bd88:	stc    
  41bd89:	xor    eax,0xfad87084
  41bd8e:	dec    edx
  41bd8f:	pop    ecx
  41bd90:	rcl    BYTE PTR [esi+0x4aa06500],1
  41bd96:	out    dx,al
  41bd97:	sti    
  41bd98:	loope  0x41bd8a
  41bd9a:	push   eax
  41bd9b:	sub    BYTE PTR [esi+ecx*8+0x73],dl
  41bd9f:	loopne 0x41bddc
  41bda1:	leave  
  41bda2:	mov    ds:0x16b30144,eax
  41bda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda8:	or     al,BYTE PTR [edx-0x3c4e6727]
  41bdae:	inc    eax
  41bdaf:	or     BYTE PTR [ecx],ch
  41bdb1:	jge    0x41bd7e
  41bdb3:	push   esp
  41bdb4:	js     0x41be2d
  41bdb6:	or     BYTE PTR [ecx],0x5b
  41bdb9:	xor    BYTE PTR [ebp-0xcbfed33],al
  41bdbf:	pop    es
  41bdc0:	sar    DWORD PTR [esi],1
  41bdc2:	in     al,0xd1
  41bdc4:	and    al,BYTE PTR [ecx+0x15]
  41bdc7:	sub    edi,edx
  41bdc9:	push   ecx
  41bdca:	fstp   DWORD PTR [eax-0x5b]
  41bdcd:	dec    esp
  41bdce:	imul   esp,DWORD PTR [eax-0x1dcf00db],0xd061a998
  41bdd8:	xor    al,0xa1
  41bdda:	sub    BYTE PTR [edx],cl
  41bddc:	sar    DWORD PTR [ecx+0x33],cl
  41bddf:	ror    DWORD PTR [eax],cl
  41bde1:	pop    edx
  41bde2:	mov    ch,0xde
  41bde4:	xchg   ebx,eax
  41bde5:	pop    edi
  41bde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde7:	pushf  
  41bde8:	int3   
  41bde9:	out    dx,al
  41bdea:	and    DWORD PTR [ecx-0xe],ebx
  41bded:	ja     0x41be0b
  41bdef:	scas   al,BYTE PTR es:[edi]
  41bdf0:	pop    edi
  41bdf1:	rcl    BYTE PTR [ecx+0x3d35d38e],0x5c
  41bdf8:	test   ch,0x29
  41bdfb:	nop
  41bdfc:	test   eax,0xf37a2f6c
  41be01:	cli    
  41be02:	leave  
  41be03:	popa   
  41be04:	leave  
  41be05:	xlat   BYTE PTR ds:[ebx]
  41be06:	out    0x16,al
  41be08:	push   esi
  41be09:	adc    BYTE PTR [esi+ebp*4+0x67],cl
  41be0d:	enter  0x9781,0xd7
  41be11:	jb     0x41be08
  41be13:	cld    
  41be14:	lods   al,BYTE PTR ss:[esi]
  41be16:	xchg   ecx,eax
  41be17:	mov    dh,0xe8
  41be19:	mov    ecx,0x88c9e967
  41be1e:	(bad)
  41be21:	(bad)  
  41be23:	test   eax,0x1f07a6ee
  41be28:	and    cl,al
  41be2a:	cmp    al,0x5d
  41be2c:	stc    
  41be2d:	xor    BYTE PTR [esi-0x70],bl
  41be30:	fdivr  DWORD PTR [edi+0x79389cf6]
  41be36:	lods   al,BYTE PTR ds:[esi]
  41be37:	hlt    
  41be38:	fldcw  WORD PTR [esi]
  41be3a:	mov    al,bh
  41be3c:	lods   al,BYTE PTR ds:[esi]
  41be3d:	pop    ss
  41be3e:	(bad)  
  41be3f:	or     esp,DWORD PTR [bp+si+0x1ad6]
  41be44:	jno    0x41bebd
  41be46:	mul    al
  41be48:	mov    dl,0x40
  41be4a:	mov    ds:0xea5db5f2,eax
  41be4f:	dec    ecx
  41be50:	inc    BYTE PTR [ebx-0x65]
  41be53:	imul   ebp,DWORD PTR [edi-0x1e],0xe
  41be57:	cmc    
  41be58:	lea    esp,[ecx+esi*4-0x7c]
  41be5c:	outs   dx,BYTE PTR ds:[esi]
  41be5d:	fwait
  41be5e:	sub    DWORD PTR [edx],edi
  41be60:	aaa    
  41be61:	jle    0x41beac
  41be63:	xchg   BYTE PTR [eax+edi*2-0x29],ch
  41be67:	scas   al,BYTE PTR es:[edi]
  41be68:	adc    eax,0xb0697110
  41be6d:	jbe    0x41be5a
  41be6f:	hlt    
  41be70:	adc    BYTE PTR [eax],bl
  41be72:	lahf   
  41be73:	cld    
  41be74:	outs   dx,DWORD PTR gs:[esi]
  41be76:	adc    bl,bh
  41be78:	xor    BYTE PTR [eax+0x56],dl
  41be7b:	out    0xd6,al
  41be7d:	loope  0x41be95
  41be7f:	and    BYTE PTR [esp+edi*4+0x55],ah
  41be83:	sahf   
  41be84:	dec    edi
  41be85:	leave  
  41be86:	mov    DWORD PTR [ecx+0x50],0x9992fc64
  41be8d:	fisttp WORD PTR [esi+eiz*4-0x57]
  41be91:	les    ebx,FWORD PTR [eax-0x6a]
  41be94:	add    eax,0x15f5edff
  41be99:	inc    esp
  41be9a:	sub    eax,0x1cb6ce3b
  41be9f:	adc    DWORD PTR [eax],esi
  41bea1:	addr16 pop ebp
  41bea3:	mov    bh,0xf3
  41bea5:	and    DWORD PTR ds:0x12151ae8,0x1c
  41beac:	push   ss
  41bead:	xlat   BYTE PTR ds:[ebx]
  41beae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beaf:	clc    
  41beb0:	jle    0x41be62
  41beb2:	mov    dl,0x7d
  41beb4:	ja     0x41bec9
  41beb6:	cdq    
  41beb7:	push   ss
  41beb8:	lods   al,BYTE PTR ds:[esi]
  41beb9:	adc    ebp,DWORD PTR [edi+ebx*4-0x64]
  41bebd:	pop    edi
  41bebe:	inc    ebp
  41bebf:	pop    esi
  41bec0:	mov    esp,0x73625d2f
  41bec5:	mov    ch,0x71
  41bec7:	cmp    BYTE PTR [edi],al
  41bec9:	or     edx,0xf89b700b
  41becf:	inc    edx
  41bed0:	add    dh,BYTE PTR [edx]
  41bed2:	jnp    0x41bf45
  41bed4:	clc    
  41bed5:	sar    DWORD PTR [edx],1
  41bed7:	xor    BYTE PTR [eax-0x1be079a7],0xe9
  41bede:	pop    esi
  41bedf:	mov    BYTE PTR [ebx-0x70a402bb],ch
  41bee5:	test   eax,0x3e96f332
  41beea:	sub    al,0x87
  41beec:	dec    edi
  41beed:	xchg   esp,eax
  41beee:	imul   DWORD PTR [edx+0x49]
  41bef1:	dec    ebp
  41bef2:	jg     0x41bec2
  41bef4:	mov    bh,0x56
  41bef6:	pop    es
  41bef7:	push   edx
  41bef8:	aad    0x5d
  41befa:	leave  
  41befb:	fwait
  41befc:	or     al,0x1b
  41befe:	xchg   ebp,eax
  41beff:	stos   BYTE PTR es:[edi],al
  41bf00:	pop    ebp
  41bf01:	cmp    eax,0xeca08b82
  41bf06:	sbb    ah,BYTE PTR [edx-0x63]
  41bf09:	jb     0x41bf4e
  41bf0b:	inc    edi
  41bf0c:	ret    
  41bf0d:	nop
  41bf0e:	out    0x94,al
  41bf10:	cdq    
  41bf11:	push   es
  41bf12:	icebp  
  41bf13:	inc    ecx
  41bf14:	push   esi
  41bf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf16:	(bad)  
  41bf17:	jae    0x41bf2d
  41bf19:	hlt    
  41bf1a:	push   ss
  41bf1b:	pop    ebp
  41bf1c:	lods   al,BYTE PTR ds:[esi]
  41bf1d:	outs   dx,BYTE PTR ds:[esi]
  41bf1e:	scas   al,BYTE PTR es:[edi]
  41bf1f:	and    al,0xd
  41bf21:	push   ebx
  41bf22:	out    dx,al
  41bf23:	and    DWORD PTR [ebx+0x6e4fabb4],esi
  41bf29:	adc    ebx,DWORD PTR [eax-0x76]
  41bf2c:	(bad)  
  41bf2e:	lods   eax,DWORD PTR ds:[esi]
  41bf2f:	sub    dl,BYTE PTR [ebx+0x75524366]
  41bf35:	mov    ebx,0xc6003a09
  41bf3a:	or     BYTE PTR [ecx+esi*1],dh
  41bf3d:	(bad)  
  41bf3e:	stos   BYTE PTR es:[edi],al
  41bf3f:	repz jne 0x41bf14
  41bf42:	lods   eax,DWORD PTR ds:[esi]
  41bf43:	mov    ebx,0x9867ffec
  41bf48:	xchg   esp,eax
  41bf49:	cs xchg ebx,eax
  41bf4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf4c:	loopne 0x41befc
  41bf4e:	js     0x41bf13
  41bf50:	dec    esi
  41bf51:	mov    eax,ds:0xda8572b2
  41bf56:	sub    cl,ch
  41bf58:	loope  0x41bee5
  41bf5a:	rcr    BYTE PTR [esi-0x1a4e68b2],0xfe
  41bf61:	imul   esp,DWORD PTR [esi+0x4c],0xeb08a4fb
  41bf68:	push   ebp
  41bf69:	pop    ebx
  41bf6a:	jle    0x41bf67
  41bf6c:	ins    DWORD PTR es:[edi],dx
  41bf6d:	inc    esi
  41bf6e:	dec    ebp
  41bf6f:	shl    BYTE PTR [esi-0x25],cl
  41bf72:	xor    dl,ch
  41bf74:	jno    0x41bf5e
  41bf76:	pop    ebx
  41bf77:	jl     0x41bf8a
  41bf79:	fldenv [ebp+0x3]
  41bf7c:	inc    ebx
  41bf7d:	fmul   st,st(2)
  41bf7f:	mov    ds:0xcd02f81b,al
  41bf84:	add    al,0x3a
  41bf86:	jo     0x41bfd9
  41bf88:	(bad)  
  41bf89:	retf   0x20e6
  41bf8c:	sub    ecx,ebp
  41bf8e:	fwait
  41bf8f:	and    bl,dl
  41bf91:	stos   BYTE PTR es:[edi],al
  41bf92:	(bad)  
  41bf93:	lahf   
  41bf94:	jmp    0xb2c8:0x9e69420b
  41bf9b:	cmp    ebx,edx
  41bf9d:	mov    cl,bl
  41bf9f:	sub    DWORD PTR [ebp+0x4c],ecx
  41bfa2:	jg     0x41bf93
  41bfa4:	mov    eax,0x6fe2aa6d
  41bfa9:	or     esi,DWORD PTR [eax-0x23]
  41bfac:	fdivp  st(5),st
  41bfae:	(bad)  
  41bfaf:	and    esi,esi
  41bfb1:	outs   dx,DWORD PTR ds:[esi]
  41bfb2:	lds    esp,FWORD PTR [edi-0x14bebae0]
  41bfb8:	jno    0x41bf3a
  41bfba:	fcom   QWORD PTR [esi-0x68]
  41bfbd:	ret    0xe8c5
  41bfc0:	(bad)  
  41bfc1:	jl     0x41bfb1
  41bfc3:	dec    edi
  41bfc4:	das    
  41bfc5:	adc    al,0x23
  41bfc7:	(bad)  
  41bfc8:	mov    esp,DWORD PTR ds:0xa1bf1eae
  41bfce:	pop    es
  41bfcf:	and    al,0xc0
  41bfd1:	push   edx
  41bfd2:	cmp    ebp,edi
  41bfd4:	jmp    0x41c049
  41bfd6:	aaa    
  41bfd7:	adc    BYTE PTR [edi+0x19ac946a],0xa6
  41bfde:	and    eax,DWORD PTR [ebx-0x740bd274]
  41bfe4:	push   edi
  41bfe5:	add    ah,ah
  41bfe7:	pop    ebp
  41bfe8:	test   BYTE PTR [ebx+ebp*8+0x3cf28f6c],0x4f
  41bff0:	pushf  
  41bff1:	inc    edx
  41bff2:	mov    ecx,0xb49e1678
  41bff7:	xor    al,0x53
  41bff9:	test   BYTE PTR [esi],ch
  41bffb:	mov    edi,0xdb314f03
  41c000:	push   edi
  41c001:	pop    ds
  41c002:	xor    bl,BYTE PTR [ebx-0x76]
  41c005:	lahf   
  41c006:	fisub  DWORD PTR [edx+0x12461bb7]
  41c00c:	and    al,0x7a
  41c00e:	jl     0x41bff8
  41c010:	or     DWORD PTR [ebp+esi*1+0x2b14f315],edi
  41c017:	xchg   edx,eax
  41c018:	imul   edi,DWORD PTR [ebx],0xa8117a60
  41c01e:	cmp    eax,0x979e2087
  41c023:	sbb    eax,0x62dd7aba
  41c028:	fdivr  QWORD PTR [ecx]
  41c02a:	mov    eax,ds:0xcd898887
  41c02f:	inc    ecx
  41c030:	cli    
  41c031:	std    
  41c032:	pushf  
  41c033:	jnp    0x41c018
  41c035:	gs sub esi,0x57
  41c039:	test   DWORD PTR [ecx-0x7d372ccb],eax
  41c03f:	dec    eax
  41c040:	pop    es
  41c041:	inc    eax
  41c042:	pop    ecx
  41c043:	lea    edi,[ebp+0x190faf48]
  41c049:	mov    ch,0x37
  41c04b:	cmp    eax,0x771c2fd9
  41c050:	dec    ebx
  41c051:	xor    eax,DWORD PTR [eax]
  41c053:	sub    BYTE PTR [ebp*1+0x45d6b144],cl
  41c05a:	xchg   esi,eax
  41c05c:	mov    edi,0xac6043eb
  41c061:	aam    0xb7
  41c063:	lds    edx,FWORD PTR [edi-0x190d0ba4]
  41c069:	add    DWORD PTR [eax+0x8],esi
  41c06c:	scas   eax,DWORD PTR es:[edi]
  41c06d:	or     edi,ebp
  41c06f:	mov    WORD PTR [ecx-0xefef955],ss
  41c075:	cs cmp al,0xfd
  41c078:	sar    al,cl
  41c07a:	inc    ecx
  41c07b:	xchg   BYTE PTR [ecx+0x3314cdce],ah
  41c081:	fisttp QWORD PTR cs:[ebx]
  41c084:	push   0xffffffa8
  41c086:	add    al,0x93
  41c088:	pop    edx
  41c089:	push   es
  41c08a:	mov    edx,esp
  41c08c:	inc    esp
  41c08d:	mov    edx,0xcb0b873f
  41c092:	rcl    ebp,0x5c
  41c095:	push   0x84ff3e04
  41c09a:	jno    0x41c0e3
  41c09c:	lock mov cs:0x894963a9,eax
  41c0a3:	jne    0x41c05e
  41c0a5:	push   esi
  41c0a6:	push   edx
  41c0a7:	pop    esi
  41c0a8:	js     0x41c05a
  41c0aa:	fsubr  QWORD PTR [eax]
  41c0ac:	inc    edi
  41c0ad:	pop    ebp
  41c0ae:	add    DWORD PTR [eax],ebx
  41c0b0:	dec    edx
  41c0b1:	lock lods al,BYTE PTR ds:[esi]
  41c0b3:	loop   0x41c125
  41c0b5:	in     al,dx
  41c0b6:	push   0xffffffd2
  41c0b8:	push   ebx
  41c0b9:	add    eax,0x4a35f41e
  41c0be:	sub    eax,esi
  41c0c0:	dec    esi
  41c0c1:	inc    edx
  41c0c2:	loope  0x41c0ce
  41c0c4:	mov    BYTE PTR [ebx],dl
  41c0c6:	into   
  41c0c7:	loopne 0x41c06b
  41c0c9:	cmp    eax,0xb58c1846
  41c0ce:	push   cs
  41c0cf:	mov    al,0x86
  41c0d1:	jns    0x41c058
  41c0d3:	add    BYTE PTR [ecx],0xcf
  41c0d6:	mov    al,0x56
  41c0d8:	inc    ebx
  41c0d9:	mov    DWORD PTR [edi-0x76c6b67f],ebp
  41c0df:	mov    ebx,0xa8f691fe
  41c0e4:	in     al,0xda
  41c0e6:	jne    0x41c128
  41c0e8:	pop    esp
  41c0e9:	pop    es
  41c0ea:	jmp    0x86e15411
  41c0ef:	push   ebx
  41c0f0:	mov    al,0xcb
  41c0f2:	jmp    DWORD PTR [edx+edi*1+0x1295b82b]
  41c0f9:	repnz dec esp
  41c0fb:	mov    ecx,0x3236d3e1
  41c100:	aad    0x81
  41c102:	cmp    edx,eax
  41c104:	sub    bh,bl
  41c106:	pop    eax
  41c107:	jns    0x41c0e5
  41c109:	call   0x600e:0xa7e92581
  41c110:	cmc    
  41c111:	or     DWORD PTR [edx+0x56],ecx
  41c114:	mov    dl,0xa9
  41c116:	sub    al,0xc4
  41c118:	and    BYTE PTR [esi+eiz*1-0x1c038eb],bl
  41c11f:	mov    ch,0x84
  41c121:	xchg   edi,eax
  41c122:	mov    esp,0xb0ed7322
  41c127:	ror    ebp,1
  41c129:	push   ebx
  41c12a:	xor    BYTE PTR [esi],0x16
  41c12d:	xor    bl,dl
  41c12f:	inc    esp
  41c130:	mov    al,ds:0x22c8e40
  41c135:	or     DWORD PTR [edi],ecx
  41c137:	or     BYTE PTR [edi-0x3933b6f7],dh
  41c13d:	cmp    esi,DWORD PTR [ebx-0x57739ba5]
  41c143:	mov    dl,0xda
  41c145:	repz jp 0x41c194
  41c148:	fld    DWORD PTR [esi-0x38]
  41c14b:	adc    eax,0xbe4bab9d
  41c150:	add    edx,DWORD PTR [edi-0x7c08ea2b]
  41c156:	pop    eax
  41c157:	push   0xffffffa8
  41c159:	mov    ebx,0x5db04b18
  41c15e:	push   0xd161010c
  41c163:	es aad 0x89
  41c166:	adc    BYTE PTR [esi],cl
  41c168:	or     dl,ch
  41c16a:	and    ebx,ebp
  41c16c:	jge    0x41c1e6
  41c16e:	fcom   DWORD PTR [ebp-0x3b]
  41c171:	test   DWORD PTR [edi+0x40896c52],eax
  41c177:	lock fxch st(1)
  41c17a:	jnp    0x41c158
  41c17c:	(bad)  
  41c17d:	(bad)
  41c180:	sbb    eax,DWORD PTR [eax]
  41c182:	lds    ebp,FWORD PTR [esi-0x45177d08]
  41c188:	push   0xffffff87
  41c18a:	pop    edx
  41c18b:	lock xchg DWORD PTR [ecx+0x1f],edx
  41c18f:	cwde   
  41c190:	xchg   ebx,eax
  41c191:	push   cs
  41c192:	push   es
  41c193:	imul   ebx,DWORD PTR [ebx+0x4f],0x3f4c2245
  41c19a:	sbb    bl,BYTE PTR [esi+0x2f37d68d]
  41c1a0:	in     eax,0x31
  41c1a2:	adc    BYTE PTR [ecx-0x2f91ae91],0x78
  41c1a9:	xchg   edi,eax
  41c1aa:	sti    
  41c1ab:	jnp    0x41c227
  41c1ad:	in     al,dx
  41c1ae:	mov    esi,0x14c1ef91
  41c1b3:	xchg   esp,eax
  41c1b4:	pop    ecx
  41c1b5:	sbb    esi,0x71
  41c1b8:	nop
  41c1b9:	inc    edx
  41c1ba:	pop    ds
  41c1bb:	jo     0x41c21a
  41c1bd:	pop    edx
  41c1be:	sub    ah,bh
  41c1c0:	data16 test BYTE PTR [edi+0x9],0x44
  41c1c5:	push   edx
  41c1c6:	xor    ch,BYTE PTR [ebx-0x6bfdb060]
  41c1cc:	(bad)  [edi+0x3a]
  41c1cf:	pushf  
  41c1d0:	cmp    DWORD PTR [eax-0x10],ecx
  41c1d3:	mov    ecx,?
  41c1d5:	fimul  DWORD PTR [eax]
  41c1d7:	pop    ebx
  41c1d8:	test   eax,0x34fc1b8d
  41c1dd:	pop    ebp
  41c1de:	(bad)  
  41c1df:	fdiv   st(5),st
  41c1e1:	sub    BYTE PTR [ebx+eiz*1-0x2b],bl
  41c1e5:	or     al,0x18
  41c1e7:	push   ss
  41c1e8:	sub    DWORD PTR [edx+0x25],ecx
  41c1eb:	sar    BYTE PTR [edx-0x2],0x1c
  41c1ef:	jge    0x41c206
  41c1f1:	sub    esp,ecx
  41c1f3:	mov    ecx,0xf193673a
  41c1f8:	stos   DWORD PTR es:[edi],eax
  41c1f9:	xchg   ecx,eax
  41c1fa:	xor    edi,DWORD PTR [edi-0xf]
  41c1fd:	aam    0xec
  41c1ff:	mov    ch,0x0
  41c201:	cs (bad) 
  41c203:	sti    
  41c204:	jg     0x41c260
  41c206:	mov    al,0x41
  41c208:	nop
  41c209:	scas   al,BYTE PTR es:[edi]
  41c20a:	shl    ch,1
  41c20c:	retf   
  41c20d:	pop    ebx
  41c20e:	cs cdq 
  41c210:	test   BYTE PTR [ecx+0x35],ch
  41c213:	sub    DWORD PTR [esi+0x225ea56a],eax
  41c219:	loopne 0x41c237
  41c21b:	push   DWORD PTR [ecx+0x7a2117dd]
  41c221:	popa   
  41c222:	cmp    BYTE PTR [esi-0x45a84dc7],0xee
  41c229:	aaa    
  41c22a:	jne    0x41c233
  41c22c:	add    eax,0x1dfe1fb1
  41c231:	lods   al,BYTE PTR ds:[esi]
  41c232:	mov    WORD PTR [edi],ss
  41c234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c235:	call   0xe774:0x84fc6d6b
  41c23c:	sahf   
  41c23d:	pop    esi
  41c23e:	jns    0x41c22a
  41c240:	add    edx,esp
  41c242:	in     eax,dx
  41c243:	ja     0x41c2a6
  41c245:	sub    DWORD PTR [ecx],eax
  41c247:	inc    esi
  41c248:	mov    bh,0x5b
  41c24a:	sub    eax,0x7785c591
  41c24f:	out    dx,al
  41c250:	mov    edx,0x2445847c
  41c255:	dec    esi
  41c256:	stos   DWORD PTR es:[edi],eax
  41c257:	(bad)  
  41c258:	call   0x52f6:0xdf3c0337
  41c25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c260:	mov    bh,0x76
  41c262:	xchg   BYTE PTR [eax+0x3f],dl
  41c265:	fsubr  QWORD PTR [edx]
  41c267:	cmp    esp,edi
  41c269:	jp     0x41c291
  41c26b:	test   esp,ebp
  41c26d:	in     eax,0x6b
  41c26f:	into   
  41c270:	pop    ss
  41c271:	ss out 0xf5,al
  41c274:	mov    bh,0xea
  41c277:	call   0x837deb0c
  41c27c:	das    
  41c27d:	loope  0x41c28a
  41c27f:	into   
  41c280:	pushf  
  41c281:	je     0x41c2d6
  41c283:	jecxz  0x41c229
  41c285:	mov    al,ds:0x451bc9f
  41c28a:	lods   al,BYTE PTR ds:[esi]
  41c28b:	test   BYTE PTR [ebp+0x43],dl
  41c28e:	into   
  41c28f:	arpl   WORD PTR [eax+0x39],bx
  41c292:	leave  
  41c293:	sub    al,bl
  41c295:	jae    0x41c278
  41c297:	sub    eax,0xc383df
  41c29c:	mov    esi,edi
  41c29e:	sub    ecx,eax
  41c2a0:	ret    0xa638
  41c2a3:	cmp    eax,eax
  41c2a5:	(bad)  
  41c2a6:	cmc    
  41c2a7:	sub    ebx,esi
  41c2a9:	dec    edx
  41c2aa:	xor    ecx,DWORD PTR [eax+0xf]
  41c2ad:	inc    edx
  41c2ae:	mov    WORD PTR [eax],gs
  41c2b0:	mov    esi,0xa4335580
  41c2b5:	dec    edx
  41c2b6:	ds xchg ebp,eax
  41c2b8:	call   0x6fb1:0xc8da0981
  41c2bf:	in     eax,0x85
  41c2c1:	lods   eax,DWORD PTR ds:[esi]
  41c2c2:	mov    al,ds:0x70a09ff4
  41c2c7:	jns    0x41c312
  41c2c9:	pushw  ss
  41c2cb:	in     al,dx
  41c2cc:	and    DWORD PTR ds:[esi-0x16],edx
  41c2d0:	xchg   edx,eax
  41c2d1:	(bad)  
  41c2d2:	cmp    BYTE PTR [edi+0x105f06d5],cl
  41c2d8:	iret   
  41c2d9:	inc    eax
  41c2da:	inc    eax
  41c2db:	ins    BYTE PTR es:[edi],dx
  41c2dc:	(bad)
  41c2df:	mov    bh,0xc6
  41c2e1:	dec    eax
  41c2e2:	add    eax,0x49c9565c
  41c2e7:	pushf  
  41c2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e9:	(bad)  
  41c2eb:	jp     0x41c2fa
  41c2ed:	sti    
  41c2ee:	or     al,0x5b
  41c2f0:	cmp    ah,dh
  41c2f2:	mov    eax,DWORD PTR [ebp-0x45ae8b7f]
  41c2f8:	test   eax,0x13bf5e5
  41c2fd:	fwait
  41c2fe:	or     dl,BYTE PTR [esi-0x4e]
  41c301:	adc    eax,0xa7e18ee6
  41c306:	idiv   DWORD PTR [ecx-0x18]
  41c309:	in     eax,dx
  41c30a:	sub    esi,DWORD PTR [edi-0x23d76246]
  41c310:	shr    BYTE PTR [eax+0x74],1
  41c313:	rol    BYTE PTR [ebx-0x7d68ba7d],cl
  41c319:	sbb    eax,0x726eee9e
  41c31e:	sub    edx,DWORD PTR [esi-0x18]
  41c321:	cmp    BYTE PTR [esi],al
  41c323:	jg     0x41c379
  41c325:	jge    0x41c2ab
  41c327:	sbb    ah,cl
  41c329:	or     al,BYTE PTR [eax+esi*8+0x4b]
  41c32d:	inc    ebx
  41c32e:	inc    edi
  41c32f:	or     al,0x21
  41c331:	and    al,0x3
  41c333:	inc    eax
  41c334:	pusha  
  41c335:	fs call 0xe12f9ad1
  41c33b:	into   
  41c33c:	sub    al,0x2b
  41c33e:	fimul  WORD PTR [esi+0x52]
  41c341:	icebp  
  41c342:	ins    DWORD PTR es:[edi],dx
  41c343:	adc    eax,0x375f8415
  41c348:	xor    eax,0x4a455829
  41c34d:	gs addr16 jge 0x41c37f
  41c351:	cli    
  41c352:	wbinvd 
  41c354:	(bad)  
  41c355:	in     al,0x52
  41c357:	fidiv  DWORD PTR [esi]
  41c359:	jecxz  0x41c312
  41c35b:	pop    ss
  41c35c:	jge    0x41c333
  41c35e:	out    0x6b,al
  41c360:	jp     0x41c2e4
  41c362:	loope  0x41c2fc
  41c364:	(bad)  
  41c365:	dec    esi
  41c366:	inc    esi
  41c367:	inc    edx
  41c368:	mov    esi,0x19f89bc9
  41c36d:	mov    ebx,0x969715d5
  41c372:	mov    ch,0x0
  41c374:	fcomp  DWORD PTR [ecx]
  41c376:	mov    WORD PTR [esi+0x545c1566],ss
  41c37c:	cdq    
  41c37d:	inc    ebx
  41c37e:	push   ss
  41c37f:	jmp    0x41c367
  41c381:	cmp    ecx,DWORD PTR [eax]
  41c383:	and    cl,bh
  41c385:	iret   
  41c386:	call   0xf363:0x50c2a5f2
  41c38d:	ins    DWORD PTR es:[edi],dx
  41c38e:	mov    ds:0x4f3b181b,al
  41c393:	iret   
  41c394:	xchg   ebx,eax
  41c395:	scas   al,BYTE PTR es:[edi]
  41c396:	cmp    dh,dl
  41c398:	test   al,0xb5
  41c39a:	xchg   edi,eax
  41c39b:	dec    esi
  41c39c:	xchg   ecx,eax
  41c39d:	pop    ebx
  41c39e:	mov    DWORD PTR ds:0x48dbf4d5,ebx
  41c3a4:	and    DWORD PTR [ebx],ebp
  41c3a6:	push   edx
  41c3a7:	pop    edx
  41c3a8:	jns    0x41c349
  41c3aa:	dec    edi
  41c3ab:	out    0x47,eax
  41c3ad:	inc    ebp
  41c3ae:	fsub   DWORD PTR [eax]
  41c3b0:	icebp  
  41c3b1:	xchg   BYTE PTR [eax-0x494073e3],bh
  41c3b7:	mov    edi,0x197db08a
  41c3bc:	push   edx
  41c3bd:	aam    0x4
  41c3bf:	not    BYTE PTR [esp+ecx*1+0x2b]
  41c3c3:	add    eax,0x810e7875
  41c3c8:	inc    ebx
  41c3c9:	mov    esp,0x384e23
  41c3ce:	jle    0x41c386
  41c3d0:	cmp    dl,BYTE PTR [eax+edx*1-0x25]
  41c3d4:	aad    0xab
  41c3d6:	ret    
  41c3d7:	jecxz  0x41c365
  41c3d9:	in     al,dx
  41c3da:	jb     0x41c38c
  41c3dc:	xchg   ebp,eax
  41c3dd:	and    eax,0x36e3afc2
  41c3e2:	mov    bh,0xcd
  41c3e4:	addr16 pop esp
  41c3e6:	add    eax,0xdb1ba30
  41c3eb:	je     0x41c37a
  41c3ed:	adc    eax,0x3d63ec63
  41c3f2:	scas   eax,DWORD PTR es:[edi]
  41c3f3:	mov    ch,0xff
  41c3f5:	push   edi
  41c3f6:	and    DWORD PTR [ebx-0x2547f444],eax
  41c3fc:	jmp    0xe706ed43
  41c401:	in     al,0x83
  41c403:	sti    
  41c404:	(bad)  
  41c405:	sbb    ah,BYTE PTR [ebx+0x6e]
  41c408:	fsub   QWORD PTR [edx-0x175539c2]
  41c40e:	cmp    bl,BYTE PTR [edi+0x1f72cea8]
  41c414:	adc    cl,BYTE PTR [edx+0x7f39ce0]
  41c41a:	pop    edx
  41c41b:	lahf   
  41c41c:	xchg   ecx,eax
  41c41d:	test   dh,0x14
  41c420:	mov    ecx,0x34f1b7a4
  41c425:	and    eax,0xf915ff13
  41c42a:	repz int3 
  41c42c:	or     eax,0x256a4128
  41c431:	pop    eax
  41c432:	aas    
  41c433:	mov    ch,0xe1
  41c435:	cmp    al,0x48
  41c437:	data16 xlat BYTE PTR ds:[ebx]
  41c439:	mov    edi,0x3a26fdf7
  41c43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c43f:	lods   al,BYTE PTR ds:[esi]
  41c440:	pop    ss
  41c441:	pop    eax
  41c442:	mov    cs,WORD PTR [ebp-0x5b42be50]
  41c448:	adc    al,0x50
  41c44a:	or     edi,DWORD PTR [edx+0x74]
  41c44d:	(bad)  
  41c44e:	cwde   
  41c44f:	std    
  41c450:	jp     0x41c47c
  41c452:	mov    esp,0x484994fd
  41c457:	js     0x41c470
  41c459:	xorps  xmm3,XMMWORD PTR [ecx+0x47e1fc16]
  41c460:	pop    ds
  41c461:	clc    
  41c462:	push   cs
  41c463:	pop    ebp
  41c464:	(bad)  
  41c465:	out    dx,al
  41c466:	xchg   edx,eax
  41c467:	xor    eax,0x4d5f45c6
  41c46c:	cmp    BYTE PTR [edi-0x67],ah
  41c46f:	sbb    dh,BYTE PTR [edx+ecx*8-0x3f605571]
  41c476:	call   FWORD PTR [ebp+0x78]
  41c479:	dec    ecx
  41c47a:	inc    edx
  41c47b:	das    
  41c47c:	mov    al,0x56
  41c47e:	push   eax
  41c47f:	out    0x9e,al
  41c481:	mov    cl,0x15
  41c483:	loope  0x41c448
  41c485:	jnp    0x41c40e
  41c487:	enter  0xddf1,0xed
  41c48b:	mov    ch,0x8d
  41c48d:	data16 out dx,al
  41c48f:	jb     0x41c42e
  41c491:	clc    
  41c492:	sbb    ecx,ebp
  41c494:	icebp  
  41c495:	cmp    edx,DWORD PTR [ebp-0xc]
  41c498:	repnz and eax,0xb4b34bc
  41c49e:	jb     0x41c465
  41c4a0:	pop    es
  41c4a1:	lahf   
  41c4a2:	cmp    eax,DWORD PTR [eax+ecx*2]
  41c4a5:	icebp  
  41c4a6:	pop    esp
  41c4a7:	repnz test BYTE PTR [edi+ecx*8-0x47],0x22
  41c4ad:	sar    DWORD PTR ds:0x38c5261b,0x64
  41c4b4:	xchg   ebx,eax
  41c4b5:	in     al,dx
  41c4b6:	sub    dl,BYTE PTR [esi+0x5c]
  41c4b9:	pminsw mm3,QWORD PTR [eax-0x33]
  41c4bd:	dec    ebx
  41c4be:	xor    ebp,ecx
  41c4c0:	xor    al,0x68
  41c4c2:	xor    eax,0x9db416f3
  41c4c7:	push   ebp
  41c4c8:	mov    dh,0x26
  41c4ca:	or     bh,BYTE PTR [ebp-0x71b2c357]
  41c4d0:	stc    
  41c4d1:	mov    ecx,0xda1fdfe0
  41c4d6:	inc    ebp
  41c4d7:	cs sub al,0xc
  41c4da:	repz pop es
  41c4dc:	nop
  41c4dd:	das    
  41c4de:	out    0xdc,eax
  41c4e0:	mov    ah,0xb5
  41c4e2:	ja     0x41c4b8
  41c4e4:	jmp    0x3844:0xc707d4a7
  41c4eb:	push   es
  41c4ec:	daa    
  41c4ed:	rcr    edx,1
  41c4ef:	lock sbb al,bl
  41c4f2:	inc    edx
  41c4f3:	xor    al,0xb5
  41c4f5:	frstor [ebp+eiz*1+0x5ed852bf]
  41c4fc:	lds    edx,FWORD PTR [ecx-0x59]
  41c4ff:	ss jmp 0x41c502
  41c502:	mov    ah,ch
  41c504:	cmp    eax,0xf65a852
  41c509:	scas   eax,DWORD PTR es:[edi]
  41c50a:	shl    DWORD PTR [ebx+0x48],0x25
  41c50e:	push   es
  41c50f:	in     eax,0xc
  41c511:	xchg   ebx,eax
  41c512:	push   ds
  41c513:	pop    ebx
  41c514:	xchg   esp,eax
  41c516:	jecxz  0x41c510
  41c518:	push   ecx
  41c519:	ret    0x7b60
  41c51c:	fwait
  41c51d:	int3   
  41c51e:	sub    bh,BYTE PTR [ebx-0x78]
  41c521:	ror    BYTE PTR [ebx-0x68],1
  41c524:	mov    eax,DWORD PTR [edi-0x47]
  41c527:	(bad)  
  41c528:	xor    eax,0x65bfd718
  41c52d:	ror    DWORD PTR ds:0x7cbcb5ab,0x56
  41c534:	mov    edi,0x6513b535
  41c539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c53a:	mov    cl,0x92
  41c53c:	sbb    eax,0xa80dc2d3
  41c541:	sbb    BYTE PTR [ebp+0x271d7d03],dl
  41c547:	je     0x41c526
  41c549:	xchg   ebp,eax
  41c54a:	cwde   
  41c54b:	retf   
  41c54c:	push   cs
  41c54d:	das    
  41c54e:	cmp    edi,DWORD PTR [edi]
  41c550:	dec    ebp
  41c551:	scas   al,BYTE PTR es:[edi]
  41c552:	and    ebp,DWORD PTR [esi-0x27]
  41c555:	fdivr  QWORD PTR [ecx]
  41c557:	cwde   
  41c558:	jp     0x41c582
  41c55a:	cmc    
  41c55b:	mov    DWORD PTR [edx],ecx
  41c55d:	cmp    al,0x41
  41c55f:	aam    0x8b
  41c561:	nop
  41c562:	test   al,0xad
  41c564:	imul   ebx,esp,0x981ccf09
  41c56a:	aaa    
  41c56b:	repnz cmp BYTE PTR [eax-0x6c3df8ce],0xd4
  41c573:	cld    
  41c574:	mov    ds:0xf2d32a41,al
  41c579:	cmp    BYTE PTR [edi],dl
  41c57b:	enter  0xee8e,0x1
  41c57f:	cmp    al,0x3
  41c581:	and    al,0xa1
  41c583:	ss jmp 0x41c5ca
  41c586:	push   ebx
  41c587:	mov    al,0xc7
  41c589:	and    eax,0xa73f1ae2
  41c58e:	out    dx,al
  41c58f:	popf   
  41c590:	jp     0x41c604
  41c592:	(bad)  
  41c593:	mov    esi,0x668105fe
  41c598:	cmp    eax,0x673a1ab7
  41c59d:	lds    edx,FWORD PTR [ebx-0xdfe8519]
  41c5a3:	mov    esp,0xefde1d7f
  41c5a8:	lods   al,BYTE PTR ds:[esi]
  41c5a9:	shl    DWORD PTR [esi+0x2cea8094],cl
  41c5af:	nop
  41c5b0:	jle    0x41c5bb
  41c5b2:	mov    al,ds:0xf2d33a4d
  41c5b7:	push   edx
  41c5b8:	(bad)  
  41c5b9:	fld    QWORD PTR [ecx]
  41c5bb:	push   cs
  41c5bc:	sub    eax,0x83f8f8f0
  41c5c1:	mov    ds:0xf6f6a480,al
  41c5c6:	jmp    DWORD PTR [ebx]
  41c5c8:	mov    dl,0x16
  41c5ca:	push   ss
  41c5cb:	push   DWORD PTR [esi+0xd]
  41c5ce:	cmc    
  41c5cf:	shl    esp,cl
  41c5d1:	outs   dx,DWORD PTR ds:[esi]
  41c5d2:	jl     0x41c583
  41c5d4:	or     DWORD PTR [edx+0x6],0xd64647a8
  41c5db:	mov    eax,0x31e9d820
  41c5e0:	add    ah,BYTE PTR [ebx+0x41]
  41c5e3:	stc    
  41c5e4:	lds    ebx,FWORD PTR [eax-0x5409c2d6]
  41c5ea:	xor    ecx,DWORD PTR [ecx+0x20]
  41c5ed:	sub    DWORD PTR [edi],0xef722e2a
  41c5f3:	repnz and bh,BYTE PTR [edx+0x3c]
  41c5f7:	mov    ds:0x7b208bfe,eax
  41c5fc:	inc    esp
  41c5fd:	mov    cl,0x74
  41c5ff:	mov    edx,0xbe41efe9
  41c604:	sub    edx,DWORD PTR [eax+0x2f51deb2]
  41c60a:	sub    BYTE PTR [eax],0x55
  41c60d:	xor    al,0xae
  41c60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c610:	xor    edi,DWORD PTR [ebx+0x6]
  41c613:	pop    ss
  41c614:	ret    
  41c615:	mov    dh,0x8
  41c617:	lds    ebx,FWORD PTR [ecx-0x21]
  41c61a:	mov    dl,0x13
  41c61c:	xor    DWORD PTR [esi],ebp
  41c61e:	adc    DWORD PTR [edx+0x549fe17b],eax
  41c624:	xchg   ebp,eax
  41c625:	pop    eax
  41c626:	add    bl,ch
  41c628:	sar    BYTE PTR [ebx],cl
  41c62a:	daa    
  41c62b:	out    dx,eax
  41c62c:	mov    si,0x72a8
  41c630:	out    0xe6,ax
  41c633:	mov    al,BYTE PTR [eax]
  41c635:	sbb    eax,0xfc2a05d
  41c63a:	repz lds edi,FWORD PTR [edx+0x356456f3]
  41c641:	cmp    eax,0x2fc31e53
  41c646:	shl    BYTE PTR [ebp-0xb],1
  41c649:	cdq    
  41c64a:	dec    esi
  41c64b:	(bad)  
  41c64c:	cmp    al,0xb8
  41c64e:	fstp   DWORD PTR [ebp+0x4ee9dc76]
  41c654:	repnz adc dh,BYTE PTR [edx+ebp*2+0x2f]
  41c659:	sub    al,0x31
  41c65b:	jae    0x41c6d5
  41c65d:	jb     0x41c652
  41c65f:	ret    0xac2b
  41c662:	mov    ebp,0x4e028065
  41c667:	in     eax,dx
  41c668:	xor    eax,0x718e3a16
  41c66d:	gs push 0xffffffbe
  41c670:	cs fs sub ebp,edx
  41c674:	out    dx,al
  41c675:	ss cmp dh,dh
  41c678:	fs xchg esi,eax
  41c67a:	jne    0x41c6a2
  41c67c:	and    dl,BYTE PTR [edi-0x41]
  41c67f:	push   esp
  41c680:	cmc    
  41c681:	pop    edx
  41c682:	sub    BYTE PTR ds:0x9726d64a,ah
  41c688:	std    
  41c689:	inc    esp
  41c68a:	xor    ah,BYTE PTR [esi+0x21]
  41c68d:	je     0x41c6e4
  41c68f:	cmp    dl,ch
  41c691:	inc    ebx
  41c692:	clc    
  41c693:	cmp    al,0x23
  41c695:	es mov al,0xed
  41c698:	push   esi
  41c699:	loopne 0x41c680
  41c69b:	xchg   cx,ax
  41c69d:	outs   dx,DWORD PTR ds:[esi]
  41c69e:	rcl    DWORD PTR [edx+ecx*8],0xca
  41c6a2:	push   es
  41c6a3:	call   0xfc5a:0x349b1ab
  41c6aa:	xor    ebp,DWORD PTR [edi+edx*4+0x13]
  41c6ae:	div    dh
  41c6b0:	mov    ebp,0xa1e002b4
  41c6b5:	fmul   st,st(4)
  41c6b7:	repz into 
  41c6b9:	nop
  41c6ba:	jg     0x41c661
  41c6bc:	out    0x15,al
  41c6be:	jp     0x41c713
  41c6c0:	js     0x41c665
  41c6c2:	hlt    
  41c6c3:	xchg   ebp,eax
  41c6c4:	sbb    ebx,eax
  41c6c6:	pop    esi
  41c6c7:	sub    al,0x67
  41c6c9:	inc    eax
  41c6ca:	(bad)  
  41c6cb:	xor    ah,BYTE PTR [ecx+0x44]
  41c6ce:	popa   
  41c6cf:	fisubr WORD PTR [esi+eax*8]
  41c6d2:	xchg   esi,eax
  41c6d3:	rcr    BYTE PTR [edi],cl
  41c6d5:	rcr    ch,1
  41c6d7:	sbb    eax,0xb5eefdfd
  41c6dc:	mov    ch,0x5b
  41c6de:	sbb    dh,BYTE PTR [ecx-0x3a]
  41c6e1:	pushf  
  41c6e2:	adc    dh,BYTE PTR [eax-0x2852859d]
  41c6e8:	add    DWORD PTR [edx+0x564f4704],ebx
  41c6ee:	inc    ebx
  41c6ef:	test   eax,0x1a32f024
  41c6f4:	sbb    DWORD PTR [edi],esp
  41c6f6:	lahf   
  41c6f7:	sbb    BYTE PTR [ebp-0x3e],bh
  41c6fa:	and    bl,BYTE PTR [edi-0xe]
  41c6fd:	push   0x31
  41c6ff:	pop    ss
  41c700:	rol    ebx,1
  41c702:	cmp    BYTE PTR [eax+edx*4-0x65a357ac],bh
  41c709:	dec    ebp
  41c70a:	scas   al,BYTE PTR es:[edi]
  41c70b:	add    eax,0x2b522dc2
  41c710:	mov    eax,eax
  41c712:	push   eax
  41c713:	mov    WORD PTR [ebx],es
  41c715:	mov    ch,0x8a
  41c717:	shr    DWORD PTR [ebx+ebx*4+0x3d],1
  41c71b:	mov    al,0x8c
  41c71d:	pop    esi
  41c71e:	xchg   ebx,eax
  41c71f:	bound  ebx,QWORD PTR [edx]
  41c721:	xchg   esp,eax
  41c722:	out    dx,al
  41c723:	fdivrp st(5),st
  41c725:	out    dx,al
  41c726:	mov    edi,0x8c1cf711
  41c72b:	sbb    DWORD PTR [ecx+eax*1+0x62],esp
  41c72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c731:	cs int 0x65
  41c734:	sub    al,BYTE PTR [eax-0x43]
  41c737:	jp     0x41c6d2
  41c739:	xor    ebp,DWORD PTR [edx]
  41c73b:	(bad)  
  41c73c:	mov    dh,0x22
  41c73e:	imul   esi,DWORD PTR [esp+esi*2],0xffffffa2
  41c742:	pop    es
  41c743:	mov    DWORD PTR [edx-0x65],esi
  41c746:	scas   al,BYTE PTR es:[edi]
  41c747:	pop    es
  41c748:	mov    esp,0x500901bb
  41c74d:	lahf   
  41c74e:	xchg   edx,eax
  41c74f:	mov    ds:0x60037c9c,eax
  41c754:	and    edx,DWORD PTR [ebp-0x73d49980]
  41c75a:	sbb    al,0x27
  41c75c:	inc    eax
  41c75d:	dec    eax
  41c75e:	pop    ds
  41c75f:	xchg   ecx,eax
  41c760:	adc    eax,0xc798f855
  41c765:	mov    al,dl
  41c767:	push   eax
  41c768:	call   0x56f38db3
  41c76d:	fst    DWORD PTR [edx+ebp*8-0x42]
  41c771:	inc    ecx
  41c772:	push   ebp
  41c773:	and    DWORD PTR [edx-0x65ce86c1],eax
  41c779:	push   es
  41c77a:	pop    eax
  41c77b:	cld    
  41c77c:	je     0x41c729
  41c77e:	or     esp,DWORD PTR [edi]
  41c780:	xor    edi,DWORD PTR [ebx]
  41c782:	inc    esi
  41c783:	add    al,0xef
  41c785:	sbb    ch,BYTE PTR [ebp+0x65b58e9]
  41c78b:	ja     0x41c7ed
  41c78d:	ins    DWORD PTR es:[edi],dx
  41c78e:	out    0xe8,eax
  41c790:	fadd   st(0),st
  41c792:	fsubr  DWORD PTR ds:0x4a468e88
  41c798:	adc    dh,BYTE PTR [edx]
  41c79a:	ins    DWORD PTR es:[edi],dx
  41c79b:	ds mov ah,0xc0
  41c79e:	dec    esp
  41c79f:	addr16 add eax,0x54a83879
  41c7a5:	sbb    esi,DWORD PTR [ebp+0x67]
  41c7a8:	shl    ecx,cl
  41c7aa:	sub    ecx,DWORD PTR [ebx]
  41c7ac:	dec    ebx
  41c7ad:	call   0xfc44:0x507bf2b0
  41c7b4:	(bad)  [eax+edx*8+0x5e]
  41c7b8:	inc    ebx
  41c7b9:	pop    ds
  41c7ba:	mov    ah,BYTE PTR [esp+edi*1-0x3c]
  41c7be:	aaa    
  41c7bf:	ja     0x41c81c
  41c7c1:	test   eax,0x4548ebbe
  41c7c6:	out    dx,eax
  41c7c7:	(bad)  
  41c7c8:	push   ecx
  41c7c9:	fnstenv ds:0xa108ded1
  41c7cf:	sbb    edi,ecx
  41c7d1:	and    al,0x3a
  41c7d3:	gs push eax
  41c7d5:	pop    ecx
  41c7d6:	adc    eax,0x37f15618
  41c7db:	cmp    eax,0xfdb13c3b
  41c7e0:	fstp   st(7)
  41c7e2:	inc    esp
  41c7e3:	jb     0x41c7c5
  41c7e5:	add    eax,0x3d702d5d
  41c7ea:	inc    esp
  41c7eb:	jo     0x41c7a3
  41c7ed:	test   al,0xbd
  41c7ef:	or     DWORD PTR [esi-0x498af8e5],eax
  41c7f5:	and    ch,BYTE PTR [ecx-0x185e0c9f]
  41c7fb:	push   es
  41c7fc:	lods   eax,DWORD PTR ds:[esi]
  41c7fd:	pop    ds
  41c7fe:	in     eax,dx
  41c7ff:	mov    dl,ah
  41c801:	add    BYTE PTR ds:0x7b408663,0x54
  41c808:	cmovnp cx,WORD PTR [esi]
  41c80c:	xchg   edi,eax
  41c80d:	sar    BYTE PTR [ebp-0x3edb337c],1
  41c813:	lahf   
  41c814:	xlat   BYTE PTR ds:[ebx]
  41c815:	mov    ch,0xfa
  41c817:	or     al,0x37
  41c819:	stos   BYTE PTR es:[edi],al
  41c81a:	mov    al,ds:0xa9797f1a
  41c81f:	(bad)  
  41c820:	and    al,0x48
  41c822:	jge    0x41c880
  41c824:	mov    dl,0x37
  41c826:	lods   al,BYTE PTR ds:[esi]
  41c827:	push   es
  41c828:	loopne 0x41c843
  41c82a:	push   cs
  41c82b:	dec    edi
  41c82c:	rcr    al,0xa4
  41c82f:	sbb    BYTE PTR [ecx],dl
  41c831:	push   ecx
  41c832:	adc    eax,ebx
  41c834:	test   DWORD PTR [esi],edi
  41c836:	mov    dl,0x3d
  41c838:	out    dx,eax
  41c839:	(bad)  
  41c83a:	jbe    0x41c8ac
  41c83c:	rcr    DWORD PTR [edx+0x12],0x36
  41c840:	push   edi
  41c841:	loop   0x41c832
  41c843:	icebp  
  41c844:	mov    ch,BYTE PTR [ecx+0x52]
  41c847:	ja     0x41c7fd
  41c849:	lea    ebx,[ecx]
  41c84b:	xor    BYTE PTR [edi-0x12],ah
  41c84e:	mov    dh,0xdb
  41c850:	imul   esp,DWORD PTR [ecx+eiz*2+0x67],0xde8a5fb5
  41c858:	add    edx,DWORD PTR [ecx+0x61]
  41c85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c85c:	jbe    0x41c821
  41c85e:	xor    eax,0x38adae81
  41c863:	or     al,0x8d
  41c865:	loope  0x41c872
  41c867:	xor    bl,ch
  41c869:	add    dh,ah
  41c86b:	js     0x41c810
  41c86d:	inc    eax
  41c86e:	mov    ?,WORD PTR [ebx]
  41c870:	cwde   
  41c871:	mov    ebx,0x2f2071f0
  41c876:	push   ebx
  41c877:	sahf   
  41c878:	sbb    ebx,DWORD PTR [ecx]
  41c87a:	cmp    edx,DWORD PTR [ebx+edx*2]
  41c87d:	mov    al,BYTE PTR ss:[ebp+0x69]
  41c881:	sub    ecx,DWORD PTR [ebp+0x36]
  41c884:	or     ecx,DWORD PTR [ebp-0x73]
  41c887:	sbb    BYTE PTR [ebx+0x16946296],ch
  41c88d:	sar    edi,1
  41c88f:	rcl    DWORD PTR [eax+0x56850ec9],1
  41c895:	out    0x39,al
  41c897:	aaa    
  41c898:	mov    eax,DWORD PTR [eax]
  41c89a:	mov    al,ds:0xd8e96adc
  41c89f:	pop    ecx
  41c8a0:	pop    ebx
  41c8a1:	(bad)  
  41c8a2:	push   eax
  41c8a3:	fisubr DWORD PTR [eax+ecx*8-0x2df3d8c5]
  41c8aa:	(bad)  
  41c8ab:	(bad)  
  41c8ac:	jmp    0x9f62:0x81c9ed60
  41c8b3:	jmp    0x41c899
  41c8b5:	pop    ebx
  41c8b6:	in     al,dx
  41c8b7:	mov    es,WORD PTR [edx-0x6ead8059]
  41c8bd:	div    dl
  41c8bf:	mov    ecx,DWORD PTR [esi-0x1198ea3b]
  41c8c5:	inc    ebx
  41c8c6:	cwde   
  41c8c7:	add    eax,0x22109753
  41c8cc:	pushf  
  41c8cd:	scas   al,BYTE PTR es:[edi]
  41c8ce:	and    BYTE PTR [eax+edi*8-0x304697de],bl
  41c8d5:	jp     0x41c954
  41c8d7:	xor    BYTE PTR [edx+edi*8],0xb5
  41c8db:	dec    eax
  41c8dc:	shr    dh,1
  41c8de:	cmp    DWORD PTR [ebx],ecx
  41c8e0:	fiadd  DWORD PTR [ecx+0x22]
  41c8e3:	jmp    0x34bb:0x1be3fce3
  41c8ea:	mov    DWORD PTR [ecx+0x1ccc8d1b],ebx
  41c8f0:	loop   0x41c891
  41c8f2:	lods   eax,DWORD PTR ds:[esi]
  41c8f3:	loope  0x41c907
  41c8f5:	loop   0x41c8c8
  41c8f7:	sub    BYTE PTR ds:0xb2d99304,dh
  41c8fd:	fs out 0x96,al
  41c900:	enter  0x2517,0x46
  41c904:	mov    bh,0xf6
  41c906:	cmp    BYTE PTR [esi-0x2e],cl
  41c909:	dec    ecx
  41c90a:	inc    ebp
  41c90b:	inc    esi
  41c90c:	into   
  41c90d:	mov    esi,0xb4a9add4
  41c912:	aad    0xf6
  41c914:	cmp    cl,BYTE PTR [edi]
  41c916:	cmp    DWORD PTR [edi],0xffffffd5
  41c919:	popf   
  41c91a:	or     ah,BYTE PTR [ebx-0x60232e0c]
  41c920:	out    dx,eax
  41c921:	adc    eax,0x94b34c8d
  41c926:	or     dh,dh
  41c928:	sub    BYTE PTR [eax],ah
  41c92a:	or     BYTE PTR [ecx],ch
  41c92c:	es data16 std 
  41c92f:	push   ebp
  41c930:	hlt    
  41c931:	mov    ecx,0xdb74e79e
  41c936:	cmp    ch,BYTE PTR [ebx+0x2d]
  41c939:	mov    ebx,0x6cb3e00d
  41c93e:	inc    ebx
  41c93f:	das    
  41c940:	fadd   DWORD PTR [ebx+0x6308567d]
  41c946:	in     al,0x1d
  41c948:	daa    
  41c949:	adc    eax,0xa71b04c
  41c94e:	popa   
  41c94f:	push   cs
  41c950:	adc    ecx,DWORD PTR [esi]
  41c952:	sub    BYTE PTR [ebx+0x2a77b009],bh
  41c958:	scas   al,BYTE PTR es:[edi]
  41c959:	dec    edx
  41c95a:	xchg   edi,eax
  41c95b:	fdivr  DWORD PTR [edi-0x73]
  41c95e:	push   edi
  41c95f:	jo     0x41c9e0
  41c961:	mov    gs,WORD PTR [esi-0x565858e7]
  41c967:	jno    0x41c976
  41c969:	sbb    BYTE PTR [edx-0x17123929],al
  41c96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c970:	xchg   DWORD PTR [ebx+eiz*8],eax
  41c973:	pop    es
  41c974:	call   0xa7a8:0x780f648f
  41c97b:	bound  esi,QWORD PTR [ebp-0x39]
  41c97e:	(bad)  
  41c97f:	and    DWORD PTR [esi],ebp
  41c981:	retf   
  41c982:	fimul  WORD PTR [ebp+eax*8+0x6d]
  41c986:	xor    edi,edi
  41c988:	push   edi
  41c989:	jmp    0x962e:0x73d43ad
  41c990:	sub    al,0x8c
  41c992:	les    esp,FWORD PTR [ebx+eax*8-0x3ba6b662]
  41c999:	cdq    
  41c99a:	inc    eax
  41c99b:	fadd   st(4),st
  41c99d:	loope  0x41c9ae
  41c99f:	add    al,0x25
  41c9a1:	xchg   edx,eax
  41c9a2:	addr16 mov ds:0x4a85,eax
  41c9a6:	jne    0x41c940
  41c9a8:	xor    eax,0x489b6cdf
  41c9ad:	push   edx
  41c9ae:	ret    0xcd34
  41c9b1:	pop    eax
  41c9b2:	loopne 0x41ca18
  41c9b4:	ds jp  0x41c9b4
  41c9b7:	mov    dh,0x25
  41c9b9:	test   al,0xf4
  41c9bb:	ret    
  41c9bc:	into   
  41c9bd:	pop    edx
  41c9be:	(bad)  
  41c9bf:	sbb    DWORD PTR [ebx+0x40],edx
  41c9c2:	idiv   DWORD PTR [ebp+0x61925da2]
  41c9c8:	sbb    DWORD PTR [ebx+eax*4+0x5e],esi
  41c9cc:	lds    edx,FWORD PTR [eax+0x24]
  41c9cf:	xchg   edx,eax
  41c9d0:	xchg   ebx,eax
  41c9d1:	(bad)  
  41c9d2:	icebp  
  41c9d3:	call   0xc7ec4511
  41c9d8:	jne    0x41c9e1
  41c9da:	or     DWORD PTR [edx],edx
  41c9dc:	mov    ebp,0x20003c9
  41c9e1:	(bad)  
  41c9e2:	cli    
  41c9e3:	xor    eax,0x97baa1d7
  41c9e8:	xchg   esi,eax
  41c9e9:	add    al,0x34
  41c9eb:	add    esp,DWORD PTR [esi+0x66]
  41c9ee:	push   0x4e05a976
  41c9f3:	jmp    0x3101:0x50c54e66
  41c9fa:	dec    edx
  41c9fb:	dec    ebp
  41c9fc:	(bad)  
  41c9fd:	mov    cl,0x6c
  41c9ff:	aam    0xb
  41ca01:	(bad)
  41ca04:	dec    ebp
  41ca05:	inc    ebx
  41ca06:	pusha  
  41ca07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca08:	je     0x41ca71
  41ca0a:	hlt    
  41ca0b:	jle    0x41ca43
  41ca0d:	inc    ebp
  41ca0e:	jge    0x41c998
  41ca10:	mov    dh,0xdc
  41ca12:	imul   esi,DWORD PTR [ecx-0x42],0x55b03c78
  41ca19:	push   0xef451821
  41ca1e:	sti    
  41ca1f:	out    dx,eax
  41ca20:	and    dh,BYTE PTR [ebx-0x5bcd5ced]
  41ca26:	inc    esi
  41ca27:	in     al,dx
  41ca28:	lods   eax,DWORD PTR ds:[esi]
  41ca29:	ins    DWORD PTR es:[edi],dx
  41ca2a:	aam    0x20
  41ca2c:	or     esp,DWORD PTR [ebx-0x7e]
  41ca2f:	mov    bh,0x5f
  41ca31:	js     0x41ca19
  41ca33:	xchg   edi,ebp
  41ca35:	pusha  
  41ca36:	je     0x41ca0b
  41ca38:	xchg   ebp,eax
  41ca39:	aam    0x8f
  41ca3b:	pop    ecx
  41ca3c:	dec    edi
  41ca3d:	stc    
  41ca3e:	loop   0x41c9ce
  41ca40:	mov    ecx,0x59e41e20
  41ca45:	stos   DWORD PTR es:[edi],eax
  41ca46:	shl    BYTE PTR [ebx],cl
  41ca48:	push   esi
  41ca49:	jae    0x41c9d0
  41ca4b:	out    dx,eax
  41ca4c:	stos   BYTE PTR es:[edi],al
  41ca4d:	popf   
  41ca4e:	sbb    al,0x3f
  41ca50:	xchg   ecx,eax
  41ca51:	ror    ecx,0xfb
  41ca54:	mov    eax,0x6f897359
  41ca59:	ror    ah,0x83
  41ca5c:	push   ecx
  41ca5d:	ss js  0x41cac3
  41ca60:	mov    ds:0xdb7e030b,al
  41ca65:	push   esp
  41ca66:	xchg   ebx,eax
  41ca67:	jle    0x41caa9
  41ca69:	data16 aam 0x6
  41ca6c:	pop    ecx
  41ca6d:	hlt    
  41ca6e:	add    ebx,eax
  41ca70:	test   eax,0xd32b9697
  41ca75:	cdq    
  41ca76:	ss pop eax
  41ca78:	mov    dh,0x25
  41ca7a:	cmp    BYTE PTR [esi-0x383e0f6d],ch
  41ca80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca81:	xchg   esp,eax
  41ca82:	add    DWORD PTR [edi],ebx
  41ca84:	inc    ecx
  41ca85:	test   eax,0xc8dd769a
  41ca8a:	scas   al,BYTE PTR es:[edi]
  41ca8b:	mov    bl,0x33
  41ca8d:	es es inc esi
  41ca90:	test   ebp,ecx
  41ca92:	les    ebx,FWORD PTR [edi-0x581faa2b]
  41ca98:	pop    ss
  41ca99:	inc    ebx
  41ca9a:	outs   dx,DWORD PTR ds:[esi]
  41ca9b:	mov    esi,0x96466a7e
  41caa0:	enter  0xe130,0xaa
  41caa4:	and    esi,DWORD PTR [ebx-0x25]
  41caa7:	mov    al,0x21
  41caa9:	cli    
  41caaa:	popf   
  41caab:	leave  
  41caac:	fcomp  DWORD PTR [eax+edx*1]
  41caaf:	or     BYTE PTR [ecx-0x5dc311ca],dh
  41cab5:	in     al,dx
  41cab6:	push   ebp
  41cab7:	fs mov bh,0xaf
  41caba:	mov    dl,BYTE PTR [ecx-0xb70bbd]
  41cac0:	lods   al,BYTE PTR ds:[esi]
  41cac1:	enter  0x6312,0x8f
  41cac5:	inc    esi
  41cac6:	or     ecx,DWORD PTR [ebx-0x4e]
  41cac9:	add    bh,BYTE PTR [edx+ebx*2]
  41cacc:	cmp    ebp,0xffffffca
  41cacf:	aaa    
  41cad0:	lds    edi,FWORD PTR [edi+0xf]
  41cad3:	or     ch,BYTE PTR [edi-0x19]
  41cad6:	and    eax,0x12f3be3e
  41cadb:	push   ebx
  41cadc:	idiv   BYTE PTR [edi]
  41cade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cadf:	pop    ebx
  41cae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae1:	test   DWORD PTR [edx+0x1eaf8d00],ebp
  41cae7:	(bad)  
  41cae8:	jg     0x41cb19
  41caea:	fild   DWORD PTR [esi+0x577ee6ed]
  41caf0:	sbb    al,BYTE PTR [esi+0x12]
  41caf3:	xchg   BYTE PTR [ecx-0x1c287aea],dl
  41caf9:	test   al,0x40
  41cafb:	pushf  
  41cafc:	ret    0x7253
  41caff:	pop    ds
  41cb00:	push   esi
  41cb01:	adc    DWORD PTR [edx-0x5],eax
  41cb04:	call   0x8d1d:0x305fab0
  41cb0b:	ja     0x41ca99
  41cb0d:	jmp    0xda05224b
  41cb12:	pop    esi
  41cb13:	aas    
  41cb14:	pusha  
  41cb15:	ret    0xed74
  41cb18:	shr    BYTE PTR [esi+0x431d128f],cl
  41cb1e:	sahf   
  41cb1f:	add    esi,DWORD PTR [eax]
  41cb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb22:	(bad)  
  41cb23:	dec    ecx
  41cb24:	mov    dl,0x6e
  41cb26:	mov    edi,0x215cd439
  41cb2b:	mov    dh,0x43
  41cb2d:	in     al,dx
  41cb2e:	fisub  DWORD PTR [edi+0x24]
  41cb31:	cdq    
  41cb32:	lock test BYTE PTR [ecx],dl
  41cb35:	cmp    al,BYTE PTR [edi+0x4a]
  41cb38:	sbb    BYTE PTR [eax],0x36
  41cb3b:	dec    edx
  41cb3c:	or     DWORD PTR [edx-0x5f],eax
  41cb3f:	arpl   WORD PTR [ecx+ecx*8-0x65],bx
  41cb43:	cmp    bl,BYTE PTR [ebp+eiz*2+0x10]
  41cb47:	mov    eax,ds:0xf5a4d465
  41cb4c:	sub    esi,DWORD PTR [ecx+0x4dad7c56]
  41cb52:	std    
  41cb53:	je     0x41cbb8
  41cb55:	hlt    
  41cb56:	and    ah,bl
  41cb58:	ficom  WORD PTR [edi-0x2035586d]
  41cb5e:	pushf  
  41cb5f:	fist   DWORD PTR [esi+edx*2-0x2abb7a6d]
  41cb66:	es fadd st,st(2)
  41cb69:	cmp    al,0xf6
  41cb6b:	mov    al,0x54
  41cb6d:	dec    edx
  41cb6e:	fild   QWORD PTR [ebp*8+0x56ccd0b2]
  41cb75:	test   al,0x2a
  41cb77:	jae    0x41cba1
  41cb79:	nop
  41cb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7b:	into   
  41cb7c:	push   eax
  41cb7d:	les    edx,FWORD PTR [ebp-0x6a540a4a]
  41cb83:	pop    edx
  41cb84:	jmp    0x8a69:0x50b9822d
  41cb8b:	fmul   DWORD PTR [edi-0x2b703033]
  41cb91:	add    ax,0x44b
  41cb95:	pop    esi
  41cb96:	jmp    0x41cb60
  41cb98:	cwde   
  41cb99:	fadd   QWORD PTR [ebp-0x1]
  41cb9c:	(bad)  
  41cb9d:	mov    al,ds:0x872d070c
  41cba2:	mov    edx,DWORD PTR [edx]
  41cba4:	mov    dl,0x34
  41cba6:	pop    esi
  41cba7:	or     bl,bl
  41cba9:	in     al,0xec
  41cbab:	imul   esi,DWORD PTR [esi+0x4ae69644],0x552d58f3
  41cbb5:	mov    esp,cs
  41cbb7:	imul   edx,DWORD PTR [esi-0x6d9e6c22],0x2cf90adc
  41cbc1:	stos   DWORD PTR es:[edi],eax
  41cbc2:	jl     0x41cb9b
  41cbc4:	pop    ebp
  41cbc5:	or     bh,ah
  41cbc7:	push   esp
  41cbc8:	lahf   
  41cbc9:	nop
  41cbca:	arpl   WORD PTR [ecx],di
  41cbcc:	iret   
  41cbcd:	add    al,0x53
  41cbd0:	neg    BYTE PTR [edx+0x466458ac]
  41cbd6:	aas    
  41cbd7:	mov    ds:0x127626bd,eax
  41cbdc:	iret   
  41cbdd:	into   
  41cbde:	push   ebp
  41cbdf:	or     eax,0x11aebb96
  41cbe4:	and    al,0xf8
  41cbe6:	or     al,0x96
  41cbe8:	sbb    ebx,DWORD PTR [ebx]
  41cbea:	mov    al,ds:0xda3fb592
  41cbef:	jmp    0x41cbbe
  41cbf1:	mov    eax,ds:0x80817567
  41cbf6:	adc    al,0x2
  41cbf8:	mov    eax,ds:0x6332b0de
  41cbfd:	push   ds
  41cbfe:	test   al,0xf5
  41cc00:	mov    cl,0x4e
  41cc02:	lahf   
  41cc03:	retf   
  41cc04:	retf   0xa86f
  41cc07:	mov    esp,DWORD PTR [eax+0x21]
  41cc0a:	sub    eax,0x9d25675
  41cc0f:	int    0xa9
  41cc11:	mov    ?,WORD PTR [ebx]
  41cc13:	lock fld st(7)
  41cc16:	pop    ds
  41cc17:	dec    eax
  41cc18:	repnz or bl,BYTE PTR [eax]
  41cc1b:	cwde   
  41cc1c:	mov    al,BYTE PTR [edx]
  41cc1e:	aas    
  41cc1f:	pop    esi
  41cc20:	push   edx
  41cc21:	pop    ecx
  41cc22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc23:	(bad)  
  41cc24:	rol    DWORD PTR [esi+ecx*1-0x49],1
  41cc28:	sub    edi,esi
  41cc2a:	sbb    eax,0xa2f12ab8
  41cc2f:	mov    ecx,0xa85b52f7
  41cc34:	add    al,0x91
  41cc36:	pop    ebp
  41cc37:	sbb    DWORD PTR [ebx+eax*2+0x25fb5c48],edx
  41cc3e:	mov    ebp,0x77c4723f
  41cc43:	xor    DWORD PTR [ebx+0x596aac9f],ebx
  41cc49:	fsubr  QWORD PTR [ecx+ebx*8-0x7f]
  41cc4d:	jnp    0x41cc8c
  41cc4f:	jge    0x41cc19
  41cc51:	jbe    0x41ccc8
  41cc53:	xchg   BYTE PTR [ebp-0x1b],al
  41cc56:	push   edx
  41cc57:	ja     0x41ccb6
  41cc59:	nop
  41cc5a:	jnp    0x41cc70
  41cc5c:	fst    QWORD PTR [ebp+0x1c6bb087]
  41cc62:	(bad)  
  41cc63:	pop    esi
  41cc64:	mov    dl,0x95
  41cc66:	mov    ebx,0x63f8796b
  41cc6b:	(bad)  
  41cc6d:	jmp    0xf952:0x4f252e69
  41cc74:	mov    bl,0x34
  41cc76:	push   0xffffffd1
  41cc78:	sub    DWORD PTR [edx+0x5f16996],edx
  41cc7e:	mov    esi,ss
  41cc80:	cdq    
  41cc81:	add    al,0xf4
  41cc83:	sbb    esi,DWORD PTR [eax+eax*2+0x61f25974]
  41cc8a:	shr    BYTE PTR [edi],cl
  41cc8c:	push   edx
  41cc8d:	add    eax,0x7a7a21c8
  41cc92:	(bad)  
  41cc93:	sar    DWORD PTR [ebx],1
  41cc95:	hlt    
  41cc96:	pop    edx
  41cc97:	stos   BYTE PTR es:[edi],al
  41cc98:	cmp    DWORD PTR [ebx-0x323cc869],esi
  41cc9e:	mov    eax,gs:0xf314e022
  41cca4:	add    eax,0x22fbf0b9
  41cca9:	jnp    0x41cc7c
  41ccab:	inc    ecx
  41ccac:	loopne 0x41cce9
  41ccae:	outs   dx,DWORD PTR ds:[esi]
  41ccaf:	inc    ebp
  41ccb0:	pop    es
  41ccb1:	and    DWORD PTR [edx],edx
  41ccb3:	jb     0x41cce1
  41ccb5:	push   es
  41ccb6:	mov    dh,0xae
  41ccb8:	push   esi
  41ccb9:	(bad)  
  41ccba:	jo     0x41cc93
  41ccbc:	int3   
  41ccbd:	rcr    DWORD PTR [edx-0x7c1a02f8],1
  41ccc3:	push   cs
  41ccc4:	mov    eax,0x320f70b2
  41ccc9:	imul   edx,edi,0x45
  41cccc:	arpl   WORD PTR [eax],bx
  41ccce:	loop   0x41ccb5
  41ccd0:	cs pop edx
  41ccd2:	mov    ecx,0x6f93fb7e
  41ccd7:	jne    0x41ccde
  41ccd9:	out    dx,al
  41ccda:	push   esi
  41ccdb:	adc    esp,edi
  41ccdd:	(bad)  
  41ccde:	cld    
  41ccdf:	push   0xd801b72b
  41cce4:	mov    ds,WORD PTR [edi+0x3f]
  41cce7:	and    eax,0xdd6ab42e
  41ccec:	fild   DWORD PTR [ecx-0x5a]
  41ccef:	into   
  41ccf0:	pop    ecx
  41ccf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccf2:	sub    DWORD PTR [ecx],eax
  41ccf4:	std    
  41ccf5:	cld    
  41ccf6:	sub    BYTE PTR [edi],bl
  41ccf8:	mov    ebp,0x52b1e0d4
  41ccfd:	mov    al,0x91
  41ccff:	add    al,0xa2
  41cd01:	arpl   WORD PTR [eiz*2+0x4e2b2ee7],bx
  41cd08:	in     al,0xc4
  41cd0a:	add    DWORD PTR [eax+0x0],0x74702f3
  41cd11:	xlat   BYTE PTR ds:[ebx]
  41cd12:	jl     0x41cd5f
  41cd14:	inc    esi
  41cd15:	mov    al,ds:0x411399c9
  41cd1a:	lock pop edx
  41cd1c:	push   esp
  41cd1d:	jg     0x41cd9e
  41cd1f:	sbb    ch,BYTE PTR [ebx]
  41cd21:	add    eax,0x98f9a9db
  41cd26:	enter  0x43dc,0x28
  41cd2a:	or     BYTE PTR [edi+0x73],0x6
  41cd2e:	pop    ecx
  41cd2f:	dec    esi
  41cd30:	xor    eax,DWORD PTR [edi]
  41cd32:	sbb    al,0x97
  41cd34:	test   al,0xee
  41cd36:	sub    DWORD PTR [esi+eax*8-0x28],ebx
  41cd3a:	packssdw mm4,QWORD PTR [edx+esi*4-0x7e28322f]
  41cd42:	jmp    0x41ccca
  41cd44:	cli    
  41cd45:	sbb    al,0xbf
  41cd47:	mov    bh,dl
  41cd49:	test   DWORD PTR [edx+0x2b],0xb3de2a79
  41cd50:	retf   
  41cd51:	mov    eax,ds:0x38fc98d6
  41cd56:	dec    eax
  41cd57:	mov    bl,0x28
  41cd59:	push   ss
  41cd5a:	test   al,cl
  41cd5c:	scas   eax,DWORD PTR es:[edi]
  41cd5d:	push   ebx
  41cd5e:	xor    eax,0xa6036497
  41cd63:	push   ebp
  41cd64:	mov    al,ds:0x9c77c0e8
  41cd69:	xchg   esi,eax
  41cd6a:	call   0xe6503229
  41cd6f:	jae    0x41cd83
  41cd71:	addr16 pop eax
  41cd73:	pop    eax
  41cd74:	sub    esi,edi
  41cd76:	sub    dh,al
  41cd78:	or     edx,ebx
  41cd7a:	dec    ebp
  41cd7b:	gs cli 
  41cd7d:	clc    
  41cd7e:	add    DWORD PTR [edi],esp
  41cd80:	sbb    BYTE PTR [esi+0x73282621],ah
  41cd86:	arpl   WORD PTR [edi*4+0x2988d90b],bp
  41cd8d:	mov    al,0xf7
  41cd8f:	cmp    cl,bl
  41cd91:	arpl   WORD PTR [ecx+0x78ca4ecd],si
  41cd97:	mov    dl,0xb6
  41cd99:	and    al,0x8f
  41cd9b:	outs   dx,DWORD PTR ds:[esi]
  41cd9c:	(bad)  
  41cd9d:	cmp    esi,DWORD PTR [esi-0x18]
  41cda0:	mov    ecx,0x1abf8589
  41cda5:	push   es
  41cda6:	xchg   esp,eax
  41cda7:	dec    edi
  41cda8:	lahf   
  41cda9:	sbb    BYTE PTR [edx-0x5890c1f5],bh
  41cdaf:	fimul  WORD PTR [eax+0x47]
  41cdb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb3:	mov    esi,esp
  41cdb5:	retf   0x4de5
  41cdb8:	ins    DWORD PTR es:[edi],dx
  41cdb9:	inc    esi
  41cdba:	jb     0x41cd7b
  41cdbc:	(bad)  
  41cdbd:	mov    ah,0x82
  41cdbf:	jns    0x41cd7f
  41cdc1:	or     dh,bl
  41cdc3:	push   ss
  41cdc4:	pop    ebx
  41cdc5:	or     DWORD PTR [ebx+0x41],eax
  41cdc8:	cmp    DWORD PTR [eax+ebx*4],esp
  41cdcb:	test   eax,0x70f1626f
  41cdd0:	fidivr WORD PTR [ecx]
  41cdd2:	mov    ebx,0x71b6f123
  41cdd7:	jo     0x41ce2f
  41cdd9:	mov    ebx,0x5339f81e
  41cdde:	(bad)  
  41cddf:	scas   eax,DWORD PTR es:[edi]
  41cde0:	sbb    edi,ebx
  41cde2:	test   bl,bh
  41cde4:	inc    ebx
  41cde5:	dec    ebx
  41cde6:	mov    eax,gs:0xae84297b
  41cdec:	sub    BYTE PTR [ecx+0x478e9156],ah
  41cdf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf3:	or     eax,0x9ce96c7f
  41cdf8:	shl    cl,1
  41cdfa:	sub    DWORD PTR [edx],esp
  41cdfc:	sub    DWORD PTR [eax+esi*4],esp
  41cdff:	std    
  41ce00:	jnp    0x41cda2
  41ce02:	(bad)  
  41ce03:	push   ss
  41ce04:	popa   
  41ce05:	fnstsw WORD PTR [esi]
  41ce07:	push   ss
  41ce08:	mov    esi,DWORD PTR [edi]
  41ce0a:	mov    cl,0xa4
  41ce0c:	dec    edi
  41ce0d:	jecxz  0x41ce2c
  41ce0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce10:	cmp    DWORD PTR ds:0x3d874197,edx
  41ce16:	test   al,0x5d
  41ce18:	jmp    0x163200cd
  41ce1d:	jmp    0xdb77:0xdc0f3e96
  41ce24:	mov    esp,DWORD PTR [ebx+0x21c0e03c]
  41ce2a:	jo     0x41ce38
  41ce2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce2d:	(bad)  
  41ce2e:	xor    eax,0xde623f8
  41ce33:	(bad)  
  41ce34:	xor    eax,DWORD PTR [edx-0x1b]
  41ce37:	lock je 0x41cdcd
  41ce3a:	mov    bh,0xbf
  41ce3c:	mov    edi,0x8cb69178
  41ce41:	cmp    ch,BYTE PTR [ecx+eax*2]
  41ce44:	int3   
  41ce45:	arpl   dx,sp
  41ce47:	cmp    bh,BYTE PTR [edi+0x8cd1efd]
  41ce4d:	cmp    BYTE PTR ds:0xbf6aee69,dl
  41ce53:	aad    0x84
  41ce55:	jmp    0x99bbb4c
  41ce5a:	mov    ecx,0xd713c938
  41ce5f:	and    al,0x37
  41ce61:	ins    BYTE PTR es:[edi],dx
  41ce62:	fsub   QWORD PTR [eax]
  41ce64:	enter  0xb6fd,0x54
  41ce68:	fwait
  41ce69:	aad    0x27
  41ce6b:	(bad)  
  41ce6c:	and    al,0x7c
  41ce6e:	int3   
  41ce6f:	imul   eax,DWORD PTR [ebx+0x29571528],0xc2dce333
  41ce79:	dec    ecx
  41ce7a:	test   eax,0x2f580e9b
  41ce7f:	mov    edx,0x925f02ed
  41ce84:	pop    esi
  41ce85:	sahf   
  41ce86:	in     eax,0x12
  41ce88:	inc    ebx
  41ce89:	pop    ebx
  41ce8a:	push   eax
  41ce8b:	mov    eax,0x417f720b
  41ce90:	xchg   ebx,eax
  41ce91:	mov    ds,WORD PTR [edx+0x3]
  41ce94:	(bad)
  41ce97:	mov    eax,0x48cfa2a4
  41ce9c:	sbb    bl,BYTE PTR [ebx-0x16500c3b]
  41cea2:	xor    edi,DWORD PTR [edi+0x6f]
  41cea5:	out    0x67,al
  41cea7:	outs   dx,BYTE PTR ds:[esi]
  41cea8:	popf   
  41cea9:	mul    esi
  41ceab:	jmp    0x4347aa2c
  41ceb0:	mov    eax,0xf7f7e225
  41ceb5:	adc    al,0x35
  41ceb7:	mov    al,0xf
  41ceb9:	dec    eax
  41ceba:	idiv   dh
  41cebc:	and    dh,BYTE PTR [esi]
  41cebe:	ret    
  41cebf:	sub    BYTE PTR ds:0x8b9b31ef,dh
  41cec5:	cmp    eax,0x1e4d3b2e
  41ceca:	(bad)  
  41cecc:	das    
  41cecd:	paddsb mm5,QWORD PTR [edi+eax*8+0x78060c8c]
  41ced5:	sbb    DWORD PTR [ecx-0x7fd40c4d],eax
  41cedb:	dec    eax
  41cedc:	shl    BYTE PTR [ecx+0x6fd2cc40],cl
  41cee2:	je     0x41ce9e
  41cee4:	xlat   BYTE PTR ds:[ebx]
  41cee5:	mov    esp,ebx
  41cee7:	in     eax,0x8b
  41cee9:	xchg   ebx,eax
  41ceea:	jns    0x41ce99
  41ceec:	mov    ?,WORD PTR [edx+eax*4+0x39564f48]
  41cef3:	(bad)  
  41cef4:	pop    ss
  41cef5:	ja     0x41cf5c
  41cef7:	push   ebx
  41cef8:	pop    ebp
  41cef9:	mov    WORD PTR [esi+0x56],?
  41cefc:	in     eax,dx
  41cefd:	rcl    ch,cl
  41ceff:	push   ss
  41cf00:	ds xchg esp,eax
  41cf02:	jp     0x41cefd
  41cf04:	pop    ebx
  41cf05:	inc    eax
  41cf06:	pop    ebp
  41cf07:	mov    ds:0x40272fe1,al
  41cf0c:	push   esi
  41cf0d:	xchg   ebp,eax
  41cf0e:	test   al,0xc6
  41cf10:	jp     0x41cf04
  41cf12:	jb     0x41cec0
  41cf14:	mov    eax,0x1961ac78
  41cf19:	cmp    bh,dh
  41cf1b:	fstp   st(0)
  41cf1d:	scas   eax,DWORD PTR es:[edi]
  41cf1e:	enter  0x666e,0xcf
  41cf22:	into   
  41cf23:	sub    al,BYTE PTR [ebp+edi*4-0x3e]
  41cf27:	add    eax,0xc9acfd09
  41cf2c:	(bad)  
  41cf2d:	(bad)  
  41cf2e:	retf   0x8ef1
  41cf31:	mov    eax,ds:0x1bfdd144
  41cf36:	dec    eax
  41cf37:	hlt    
  41cf38:	cli    
  41cf39:	push   ebx
  41cf3a:	pop    ss
  41cf3b:	shl    eax,0xf3
  41cf3e:	test   BYTE PTR [ebx-0x59],bl
  41cf41:	jle    0x41cf5a
  41cf43:	fcom   DWORD PTR [edx+esi*8-0x48]
  41cf47:	stos   BYTE PTR es:[edi],al
  41cf48:	into   
  41cf49:	jl     0x41ced4
  41cf4b:	xchg   edi,eax
  41cf4c:	leave  
  41cf4d:	cmp    eax,0x8159924a
  41cf52:	push   ecx
  41cf53:	rcl    DWORD PTR [ecx],0x4d
  41cf56:	sar    DWORD PTR cs:[ebx+0x66],cl
  41cf5a:	cmp    esp,DWORD PTR [edx]
  41cf5c:	lds    ebp,FWORD PTR [edi-0x43140983]
  41cf62:	pop    ecx
  41cf63:	push   esi
  41cf64:	js     0x41cf5c
  41cf66:	dec    ebx
  41cf67:	inc    eax
  41cf68:	cmp    esi,ecx
  41cf6a:	mov    ds:0x4734e9ce,eax
  41cf6f:	sub    BYTE PTR [edi],bh
  41cf71:	rcl    BYTE PTR [edx-0x6bce6c61],0x68
  41cf78:	lock mov dl,0x1d
  41cf7b:	inc    ecx
  41cf7c:	push   DWORD PTR [ecx+0x24]
  41cf7f:	jmp    0xc32d:0x7e5c7b0b
  41cf86:	sub    DWORD PTR [ebx+eax*2-0x6f],0x650770ea
  41cf8e:	xchg   esp,eax
  41cf8f:	mov    DWORD PTR [edi+0x2c],ebp
  41cf92:	xor    al,0x96
  41cf94:	jns    0x41cf9d
  41cf96:	loopne 0x41cf60
  41cf98:	cmp    BYTE PTR [eax],ah
  41cf9a:	or     ebx,DWORD PTR [eax+0x27fa8f1]
  41cfa0:	adc    DWORD PTR [esi-0x4f680ae5],ebx
  41cfa6:	data16 stos BYTE PTR es:[edi],al
  41cfa8:	mov    dh,0xb9
  41cfaa:	pop    eax
  41cfab:	cwde   
  41cfac:	mov    eax,ds:0x7d02f6f4
  41cfb1:	data16 or bh,cl
  41cfb4:	push   es
  41cfb5:	mov    esi,esp
  41cfb7:	outs   dx,BYTE PTR ds:[esi]
  41cfb8:	xchg   DWORD PTR [eax],ecx
  41cfba:	lds    esp,FWORD PTR [esp+edx*4-0x6c]
  41cfbe:	(bad)  
  41cfbf:	imul   BYTE PTR [esi]
  41cfc1:	test   al,0x88
  41cfc3:	cmp    ebx,esp
  41cfc5:	jg     0x41d00f
  41cfc7:	add    BYTE PTR [eax],0x27
  41cfca:	js     0x41cfe2
  41cfcc:	add    DWORD PTR [esi],ecx
  41cfce:	jl     0x41cf58
  41cfd0:	or     eax,0xc3b63604
  41cfd5:	sbb    BYTE PTR [ebp+0x5108516a],0x64
  41cfdc:	cmp    eax,0xd2c15ea4
  41cfe1:	rcr    BYTE PTR [ebx-0x3ab52456],0xd4
  41cfe8:	or     al,0x8
  41cfea:	push   ss
  41cfeb:	cmp    bh,cl
  41cfed:	add    cl,BYTE PTR [edi-0x31804171]
  41cff3:	mov    BYTE PTR [esi+0xcb9f106],bl
  41cff9:	fldenv [ecx]
  41cffb:	add    BYTE PTR [edx],dl
  41cffd:	jne    0x41cfdd
  41cfff:	mov    esi,0x89ea1a4d
  41d004:	jns    0x41d064
  41d006:	shl    BYTE PTR [ebx-0x22],1
  41d009:	push   ecx
  41d00a:	cmp    esp,ebp
  41d00c:	bound  esp,QWORD PTR [edi+eax*8+0x58df663e]
  41d013:	xlat   BYTE PTR ds:[ebx]
  41d014:	arpl   WORD PTR [ebp-0x3ed2cd43],bp
  41d01a:	data16 cmp al,BYTE PTR [eax]
  41d01d:	pop    edi
  41d01e:	xchg   ebx,eax
  41d01f:	mov    edx,ecx
  41d021:	(bad)  
  41d023:	repnz or eax,0x2f46c2da
  41d029:	inc    esi
  41d02a:	mov    cl,0xf3
  41d02c:	xchg   BYTE PTR [esi],bh
  41d02e:	rcl    DWORD PTR [edi+0x6],cl
  41d031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d032:	lahf   
  41d033:	in     eax,dx
  41d034:	mov    al,0xb3
  41d036:	scas   al,BYTE PTR es:[edi]
  41d037:	dec    edi
  41d038:	sub    edi,eax
  41d03a:	dec    esp
  41d03b:	xlat   BYTE PTR ds:[ebx]
  41d03c:	fwait
  41d03d:	mov    ?,WORD PTR [edi-0x26e496be]
  41d043:	cmp    eax,0x945ebb9d
  41d048:	call   0xa4e30e09
  41d04d:	aad    0x20
  41d04f:	sar    edi,1
  41d051:	dec    ebx
  41d052:	(bad)  
  41d053:	mov    ds:0x8f48c4de,al
  41d058:	push   eax
  41d059:	cmp    esi,edi
  41d05b:	add    al,0x5d
  41d05d:	clc    
  41d05e:	jle    0x41d0b6
  41d060:	fnstsw WORD PTR [edx]
  41d062:	sub    BYTE PTR [eax+0x22],cl
  41d065:	xor    esi,DWORD PTR [esi+0x27fd8e13]
  41d06b:	xchg   ebx,eax
  41d06c:	icebp  
  41d06d:	inc    esi
  41d06e:	jb     0x41d0bf
  41d070:	in     al,dx
  41d071:	cmp    DWORD PTR [edi-0x15d48d5e],edx
  41d077:	out    0xb4,eax
  41d079:	not    ecx
  41d07b:	outs   dx,BYTE PTR ds:[esi]
  41d07c:	lock jns 0x41d005
  41d07f:	jp     0x41d06f
  41d081:	rcl    eax,1
  41d083:	js     0x41d0e8
  41d085:	xor    esi,eax
  41d087:	ret    
  41d088:	shl    DWORD PTR [edx],1
  41d08a:	retf   0xf4c2
  41d08d:	sub    al,0x2
  41d08f:	dec    edi
  41d090:	(bad)  
  41d091:	cs push cs
  41d093:	push   esi
  41d094:	outs   dx,BYTE PTR ds:[esi]
  41d095:	pop    edi
  41d096:	dec    edx
  41d097:	popf   
  41d098:	retf   0x40cd
  41d09b:	jl     0x41d115
  41d09d:	push   ebp
  41d09e:	cmp    BYTE PTR [ebx],0xcc
  41d0a1:	xchg   edx,eax
  41d0a2:	xor    DWORD PTR [edi+0xd],ebx
  41d0a5:	dec    ebp
  41d0a6:	mov    ah,0x46
  41d0a8:	pusha  
  41d0a9:	sub    eax,0x1379932a
  41d0ae:	add    al,0xf9
  41d0b0:	and    eax,0x5cf256c9
  41d0b5:	int    0x49
  41d0b7:	sbb    eax,0x4720f9ca
  41d0bc:	and    al,0x8f
  41d0be:	jmp    0x1072:0xf02c1224
  41d0c5:	mov    ebx,DWORD PTR [ebx+0x5ccb2e2]
  41d0cb:	out    0x8e,eax
  41d0cd:	push   ebx
  41d0ce:	dec    ebp
  41d0cf:	fdivrp st(2),st
  41d0d1:	inc    esp
  41d0d2:	jnp    0x41d0c9
  41d0d4:	mov    ch,0xc9
  41d0d6:	sbb    eax,DWORD PTR [ebp+0x37277b4d]
  41d0dc:	xor    eax,DWORD PTR [esp+ebp*4+0x44e0ddca]
  41d0e3:	and    eax,0x3e43fffe
  41d0e8:	sub    ch,BYTE PTR [eax+eax*8]
  41d0eb:	add    al,0x8e
  41d0ed:	pop    esi
  41d0ee:	xchg   ebx,eax
  41d0ef:	cdq    
  41d0f0:	xchg   edi,eax
  41d0f1:	jb     0x41d0e7
  41d0f3:	(bad)  
  41d0f4:	push   esp
  41d0f5:	cwde   
  41d0f6:	sub    ah,cl
  41d0f8:	ds out dx,eax
  41d0fa:	clc    
  41d0fb:	mov    cl,0x68
  41d0fd:	(bad)  
  41d0fe:	fistp  DWORD PTR [edi+ecx*1]
  41d101:	and    esi,ebx
  41d103:	lds    ebp,FWORD PTR [ebx+0x2e]
  41d106:	and    dl,BYTE PTR ds:0x61c7299d
  41d10c:	les    edx,FWORD PTR [ebp+0x46]
  41d10f:	or     al,0x1c
  41d111:	imul   esp,DWORD PTR [esi+0x2390e196],0x29e0809e
  41d11b:	push   es
  41d11c:	std    
  41d11d:	dec    edx
  41d11e:	xor    al,0x3
  41d120:	leave  
  41d121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d122:	mov    ch,0x4
  41d124:	push   0xdecb102
  41d129:	add    ebx,DWORD PTR [edx+0x6b]
  41d12c:	rcl    DWORD PTR [esi],1
  41d12e:	stc    
  41d12f:	cmp    ecx,ebx
  41d131:	xchg   ebx,eax
  41d132:	sbb    DWORD PTR [ebx+0x5c],esp
  41d135:	sbb    bl,0xdd
  41d138:	adc    DWORD PTR ds:[ebp+0xc],edi
  41d13c:	push   es
  41d13d:	call   0xae0077c7
  41d142:	gs jns 0x41d0f3
  41d145:	jmp    0x41d0fa
  41d147:	into   
  41d148:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d14a:	loopne 0x41d0df
  41d14c:	daa    
  41d14d:	sub    ah,BYTE PTR [ebp+ecx*8-0x66cec2d9]
  41d154:	and    DWORD PTR [eax],esp
  41d156:	sbb    BYTE PTR [eax],bl
  41d158:	mov    edx,0x7dfe7450
  41d15d:	xchg   al,bh
  41d15f:	dec    eax
  41d160:	dec    esp
  41d161:	sbb    BYTE PTR [ecx+0x55b9228f],dh
  41d167:	cmp    eax,0x62233e23
  41d16c:	retf   0xbf0a
  41d16f:	push   edx
  41d170:	pop    edx
  41d171:	cdq    
  41d172:	mov    edi,0xe1dc929b
  41d177:	mov    WORD PTR ds:0xbb8c5aa1,gs
  41d17d:	add    bl,BYTE PTR [eax+ebx*2+0x39]
  41d181:	das    
  41d182:	sbb    dl,ah
  41d184:	mov    ch,0x4a
  41d186:	in     al,dx
  41d187:	das    
  41d188:	mov    esi,edx
  41d18a:	xor    eax,0x27bf207d
  41d18f:	into   
  41d190:	sbb    al,0x96
  41d192:	add    ebp,DWORD PTR [esi+0x592b52f3]
  41d198:	or     BYTE PTR [edx-0x23d7e95a],al
  41d19e:	or     DWORD PTR [eax],0x1ec3c69a
  41d1a4:	xchg   ebp,eax
  41d1a5:	adc    dl,dh
  41d1a7:	nop
  41d1a8:	or     BYTE PTR [ecx+ebx*8],ch
  41d1ab:	leave  
  41d1ac:	xchg   esp,eax
  41d1ad:	xlat   BYTE PTR ds:[ebx]
  41d1ae:	stc    
  41d1af:	inc    ecx
  41d1b0:	and    eax,0x5aa8ecba
  41d1b5:	xchg   BYTE PTR [esi+0x3b],ah
  41d1b8:	retf   
  41d1b9:	pop    ecx
  41d1ba:	push   ss
  41d1bb:	cld    
  41d1bc:	retf   
  41d1bd:	loope  0x41d203
  41d1bf:	fistp  DWORD PTR [ebx-0x38]
  41d1c2:	imul   edx,DWORD PTR [ebp+edi*4-0x3355777d],0x6f297317
  41d1cd:	in     al,0x65
  41d1cf:	inc    ebp
  41d1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1d1:	cld    
  41d1d2:	cld    
  41d1d3:	je     0x41d1cf
  41d1d5:	cli    
  41d1d6:	out    dx,eax
  41d1d7:	not    al
  41d1d9:	xchg   ebp,eax
  41d1da:	or     BYTE PTR [eax],0x14
  41d1dd:	sbb    al,0xe2
  41d1df:	in     al,dx
  41d1e0:	das    
  41d1e1:	dec    eax
  41d1e2:	stos   DWORD PTR es:[edi],eax
  41d1e3:	jbe    0x41d1f6
  41d1e5:	repz sti 
  41d1e7:	mov    esp,DWORD PTR [ecx-0x44045d5b]
  41d1ed:	adc    BYTE PTR [esi+0x33],cl
  41d1f0:	cli    
  41d1f1:	jmp    DWORD PTR [edx-0x6357e83d]
  41d1f7:	pop    esi
  41d1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f9:	inc    DWORD PTR [ecx]
  41d1fb:	jle    0x41d1a4
  41d1fd:	je     0x41d23c
  41d1ff:	shl    BYTE PTR [ebx],1
  41d201:	lods   eax,DWORD PTR ds:[esi]
  41d202:	adc    al,0xe5
  41d204:	mov    ah,bh
  41d206:	dec    edx
  41d207:	ds cmc 
  41d209:	rep stos BYTE PTR es:[edi],al
  41d20b:	pop    ecx
  41d20c:	pop    eax
  41d20d:	scas   eax,DWORD PTR es:[edi]
  41d20e:	pop    ecx
  41d20f:	inc    eax
  41d210:	and    eax,0xb9c7079c
  41d215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d216:	mov    BYTE PTR [edi-0x36],dh
  41d219:	pop    ds
  41d21a:	jbe    0x41d289
  41d21c:	dec    ecx
  41d21d:	rcr    eax,0x6d
  41d220:	lea    ecx,[ebx-0x5edaba0a]
  41d226:	mov    esi,0xcec4c43f
  41d22b:	rcl    DWORD PTR [ebp-0x1cbd17f2],1
  41d231:	cmp    BYTE PTR [ebp+0x51b9803b],ch
  41d237:	push   esp
  41d238:	dec    edi
  41d239:	rcr    BYTE PTR [ecx+edx*4+0x3f3b8282],cl
  41d240:	cdq    
  41d241:	and    BYTE PTR [esi],bl
  41d243:	push   ebx
  41d244:	(bad)  es:[esi]
  41d247:	mov    esi,0xec268efa
  41d24c:	lahf   
  41d24d:	xchg   edx,eax
  41d24e:	sbb    eax,0x6c97788
  41d253:	idiv   DWORD PTR fs:[esi+0x1839be7e]
  41d25a:	loop   0x41d2aa
  41d25c:	push   ds
  41d25d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d25e:	pop    ecx
  41d25f:	cmp    dl,BYTE PTR [ebx]
  41d261:	pushf  
  41d262:	pop    ecx
  41d263:	mov    ebp,0xe4c9f3c3
  41d268:	jns    0x41d2c8
  41d26a:	jmp    0x41d1f8
  41d26c:	loope  0x41d2a8
  41d26e:	pop    eax
  41d26f:	imul   edi,DWORD PTR [eax],0x5d4c7efd
  41d275:	lock push ss
  41d277:	mov    esp,DWORD PTR ds:0x72c28143
  41d27d:	adc    ebp,eax
  41d27f:	loope  0x41d28e
  41d281:	iret   
  41d282:	dec    BYTE PTR [edi-0x3e0658a7]
  41d288:	and    eax,0xbfb7ddc6
  41d28d:	fcomp  DWORD PTR [ebp+0x6440c221]
  41d293:	mov    esi,cs
  41d295:	sub    al,0x21
  41d297:	repnz loopne 0x41d2c4
  41d29a:	inc    ebx
  41d29b:	mov    bh,dl
  41d29d:	stc    
  41d29e:	push   eax
  41d29f:	(bad)  
  41d2a0:	shl    DWORD PTR [edx],cl
  41d2a2:	mov    BYTE PTR ds:0x810464ec,ah
  41d2a8:	cs popf 
  41d2aa:	mov    esi,0x855cef88
  41d2af:	daa    
  41d2b0:	mov    esp,DWORD PTR [edx]
  41d2b2:	ret    0xc2da
  41d2b5:	dec    edx
  41d2b6:	and    DWORD PTR [ecx-0x31],esp
  41d2b9:	stos   BYTE PTR es:[edi],al
  41d2ba:	mov    bl,bl
  41d2bc:	or     al,BYTE PTR [ebp+0x6611f823]
  41d2c2:	mov    dl,0xce
  41d2c4:	pop    ecx
  41d2c5:	mov    ebp,0xdaac7296
  41d2ca:	les    ebx,FWORD PTR [esi+0x61a4259c]
  41d2d0:	xchg   BYTE PTR [esi+0x11c97c34],ch
  41d2d6:	inc    edx
  41d2d7:	bnd jl 0x41d34e
  41d2da:	sbb    eax,DWORD PTR [eax]
  41d2dc:	sub    eax,0x86b36108
  41d2e1:	inc    esi
  41d2e2:	push   0xffffffc2
  41d2e4:	pop    ds
  41d2e5:	test   eax,0x4bc017e7
  41d2ea:	mov    ch,0x2d
  41d2ec:	dec    esp
  41d2ed:	and    ecx,ecx
  41d2ef:	jg     0x41d2fb
  41d2f1:	jns    0x41d2eb
  41d2f3:	push   ds
  41d2f4:	mov    ebp,DWORD PTR [ebx+0x3e44cc12]
  41d2fa:	push   esi
  41d2fb:	fs xchg edi,eax
  41d2fd:	xchg   al,dl
  41d2ff:	mov    ah,0xaa
  41d301:	inc    esi
  41d302:	cdq    
  41d303:	fstp   DWORD PTR [edx-0x24003833]
  41d309:	pop    edx
  41d30a:	mov    al,ds:0x5614afb0
  41d30f:	push   0xa8b30866
  41d314:	sahf   
  41d315:	mov    edi,0xa48c8e94
  41d31a:	daa    
  41d31b:	enter  0xf6b6,0xd3
  41d31f:	jmp    FWORD PTR [ebx+0xf]
  41d322:	adc    BYTE PTR [eax],ah
  41d324:	fistp  QWORD PTR [edx-0x64fdb1b5]
  41d32a:	add    al,0x2f
  41d32c:	pop    ds
  41d32d:	adc    DWORD PTR [edx],esi
  41d32f:	push   ss
  41d330:	push   ebp
  41d331:	stos   BYTE PTR es:[edi],al
  41d332:	enter  0x44bf,0xce
  41d336:	aam    0xd
  41d338:	stos   DWORD PTR es:[edi],eax
  41d339:	ud1    esp,DWORD PTR [ebx-0x6d]
  41d33d:	dec    ebx
  41d33e:	xchg   eax,esi
  41d340:	cld    
  41d341:	daa    
  41d342:	aad    0x75
  41d344:	cmp    DWORD PTR [edx],eax
  41d346:	dec    DWORD PTR [ebx+0x49]
  41d349:	sbb    al,0x55
  41d34b:	stos   BYTE PTR es:[edi],al
  41d34c:	adc    al,0x5
  41d34e:	dec    edx
  41d34f:	mov    cl,0xf3
  41d351:	stc    
  41d352:	pop    esp
  41d353:	(bad)  
  41d354:	jb     0x41d388
  41d356:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41d358:	inc    ecx
  41d359:	mov    cl,0x72
  41d35b:	nop
  41d35c:	inc    edi
  41d35d:	arpl   ax,bx
  41d35f:	and    BYTE PTR [ebx+0xd],al
  41d362:	je     0x41d305
  41d364:	or     DWORD PTR [eax],edi
  41d366:	inc    ebx
  41d367:	adc    al,0xf1
  41d369:	xchg   BYTE PTR [ebx-0xc],bh
  41d36c:	nop
  41d36d:	popa   
  41d36e:	pop    esi
  41d36f:	fld    QWORD PTR ds:0x745f29f8
  41d375:	es mov ecx,0x1ee73f3f
  41d37b:	(bad)  [ebx+0x3c]
  41d37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d37f:	popf   
  41d380:	dec    ebx
  41d381:	sti    
  41d382:	sbb    eax,0xd0429d32
  41d387:	sbb    al,0x35
  41d389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38a:	sbb    eax,0xf6fa525c
  41d38f:	ret    
  41d390:	mov    ecx,0x329137
  41d395:	and    cl,al
  41d397:	inc    ecx
  41d398:	dec    ebp
  41d399:	pop    es
  41d39a:	int3   
  41d39b:	es push esp
  41d39d:	out    0x96,eax
  41d39f:	xor    eax,0x25913b40
  41d3a4:	ret    0x7205
  41d3a7:	nop
  41d3a8:	repz or BYTE PTR [ecx+ebp*2-0x40],cl
  41d3ad:	mov    bl,0x5d
  41d3af:	mov    eax,ds:0x29ef623d
  41d3b4:	or     BYTE PTR [edx+0x704a10d6],cl
  41d3ba:	inc    edx
  41d3bb:	(bad)  
  41d3bc:	jne    0x41d3c9
  41d3be:	call   0x26263d3c
  41d3c3:	fstp   QWORD PTR [ebp+0x1adaa62c]
  41d3c9:	add    BYTE PTR [ecx-0x1f],ch
  41d3cc:	hlt    
  41d3cd:	xchg   esp,eax
  41d3ce:	jno    0x41d40e
  41d3d0:	dec    ecx
  41d3d1:	mov    ch,0x32
  41d3d3:	imul   esp,DWORD PTR [eax+0x515bc9cd],0x5f3dccaa
  41d3dd:	sar    DWORD PTR [bx+di-0x4098],0xee
  41d3e3:	sub    al,0x1c
  41d3e5:	(bad)  
  41d3e6:	cli    
  41d3e7:	test   DWORD PTR [edi+0x5a],0x5d00e7bf
  41d3ee:	sar    dl,0x8
  41d3f1:	sub    edx,edx
  41d3f3:	ja     0x41d40b
  41d3f5:	push   cs
  41d3f6:	out    dx,al
  41d3f7:	ror    eax,0x6c
  41d3fa:	mov    dl,0xe4
  41d3fc:	push   cs
  41d3fd:	jns    0x41d391
  41d3ff:	int3   
  41d400:	push   ds
  41d401:	push   ss
  41d402:	mov    dh,0xea
  41d404:	ja     0x41d3ee
  41d406:	dec    eax
  41d407:	xchg   edx,eax
  41d408:	pop    es
  41d409:	test   DWORD PTR [ecx],ecx
  41d40b:	mov    ecx,0xab68ba73
  41d410:	les    edi,FWORD PTR ds:0x51e4697e
  41d416:	stos   BYTE PTR es:[edi],al
  41d417:	out    dx,al
  41d418:	mov    BYTE PTR [edx-0x64],cl
  41d41b:	dec    eax
  41d41c:	jge    0x41d3c5
  41d41e:	sar    BYTE PTR [esi],0x2a
  41d421:	(bad)  
  41d422:	fs je  0x41d3ba
  41d425:	pop    eax
  41d426:	loop   0x41d470
  41d428:	imul   ebp,DWORD PTR [eax+0x25f08075],0x74
  41d42f:	ficom  WORD PTR [eax]
  41d431:	sar    BYTE PTR [ebx+0x5],1
  41d434:	clc    
  41d435:	sub    DWORD PTR [edi+0x10],edi
  41d438:	(bad)  
  41d439:	mov    ebp,0x2c6522bb
  41d43e:	adc    ebx,DWORD PTR [edi+0xb]
  41d441:	dec    ebx
  41d442:	rcl    DWORD PTR ds:0xf09b4c51,0x4
  41d449:	cmp    DWORD PTR [ecx-0x2b],edi
  41d44c:	dec    eax
  41d44d:	and    edi,DWORD PTR ds:0x86494dce
  41d453:	pop    ss
  41d454:	mov    esi,0x7bc1df1f
  41d459:	or     edi,edx
  41d45b:	jne    0x41d429
  41d45d:	inc    edi
  41d45e:	mov    dh,0x3b
  41d460:	fist   WORD PTR [ebp+0x1568abcf]
  41d466:	push   eax
  41d467:	push   ds
  41d468:	cmp    eax,0x497dda80
  41d46d:	mov    ebp,0xcff37e6b
  41d472:	jnp    0x41d489
  41d474:	mov    ch,0xae
  41d476:	test   al,dh
  41d478:	sub    al,0xdb
  41d47a:	es and al,0xf2
  41d47d:	dec    edx
  41d47e:	loope  0x41d45d
  41d480:	jmp    0x9c410dc1
  41d485:	push   ebp
  41d486:	stos   DWORD PTR es:[edi],eax
  41d487:	adc    eax,0xdf0d9925
  41d48c:	ret    0x7673
  41d48f:	pusha  
  41d490:	inc    eax
  41d491:	jno    0x41d4ec
  41d493:	dec    ebx
  41d494:	dec    esp
  41d495:	mov    dh,0x4c
  41d497:	leave  
  41d498:	xchg   edi,eax
  41d499:	mov    edi,0x2db2c82d
  41d49e:	cdq    
  41d49f:	sti    
  41d4a0:	or     ebp,eax
  41d4a2:	cmp    ebx,DWORD PTR [ebp+0x70]
  41d4a5:	retf   0x5073
  41d4a8:	icebp  
  41d4a9:	adc    BYTE PTR [edi-0x5247b9d5],cl
  41d4af:	push   edx
  41d4b0:	stos   DWORD PTR es:[edi],eax
  41d4b1:	mov    bl,0x45
  41d4b3:	and    BYTE PTR [edx],ah
  41d4b5:	cmp    eax,0xe422b653
  41d4ba:	push   0x4a
  41d4bc:	arpl   WORD PTR [ebp-0x56],bp
  41d4bf:	das    
  41d4c0:	imul   eax,DWORD PTR [esp+ebx*8-0x7cad7634],0x546c3579
  41d4cb:	jmp    0x41d4f8
  41d4cd:	and    ebp,DWORD PTR [ebp-0x2f]
  41d4d0:	cmp    al,0xc3
  41d4d2:	shl    BYTE PTR [edi+0x74],0x67
  41d4d6:	sub    eax,DWORD PTR [ebx]
  41d4d8:	mov    WORD PTR [ebx+0x97f746],es
  41d4de:	fld    QWORD PTR [ebx-0x37]
  41d4e1:	dec    esi
  41d4e2:	or     eax,0x6e3b8b15
  41d4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e8:	sub    DWORD PTR [edi-0xe6aecfb],edi
  41d4ee:	inc    esi
  41d4ef:	sti    
  41d4f0:	lods   eax,DWORD PTR ds:[esi]
  41d4f1:	inc    esp
  41d4f2:	mov    ebx,0x5f7a302e
  41d4f7:	pop    esp
  41d4f8:	mul    DWORD PTR [edx]
  41d4fa:	sbb    al,0xaa
  41d4fc:	inc    edi
  41d4fd:	sub    eax,0x37a539f8
  41d502:	shr    ah,0xa0
  41d505:	pushf  
  41d506:	sbb    DWORD PTR [eax-0x4bfb7d25],0x5
  41d50d:	addr16 (bad) 
  41d50f:	jo     0x41d4b2
  41d511:	cli    
  41d512:	xor    al,0x87
  41d514:	aaa    
  41d515:	retf   0x9ca
  41d518:	(bad)  
  41d51a:	arpl   sp,bx
  41d51c:	mov    eax,ds:0x41cf8541
  41d521:	sub    cl,BYTE PTR [ebp+0xf7e2311]
  41d527:	mov    ecx,0x8509e153
  41d52c:	ret    0x719d
  41d52f:	sbb    DWORD PTR [eax],ecx
  41d531:	push   ebp
  41d532:	mov    ds:0xe1dba291,eax
  41d537:	jecxz  0x41d511
  41d539:	dec    ebp
  41d53a:	add    esp,esi
  41d53c:	mov    es,WORD PTR [eax-0x349fb32b]
  41d542:	push   ebp
  41d543:	lea    ebx,[eax-0x39]
  41d546:	inc    esp
  41d547:	sbb    dl,BYTE PTR [eax+0x12]
  41d54a:	fsub   QWORD PTR [esi-0x4e]
  41d54d:	int3   
  41d54e:	aam    0x2a
  41d550:	in     eax,dx
  41d551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d552:	or     edx,esp
  41d554:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d556:	xchg   ebp,eax
  41d557:	push   esp
  41d558:	hlt    
  41d559:	jns    0x41d5cd
  41d55b:	push   ss
  41d55c:	scas   eax,DWORD PTR es:[edi]
  41d55d:	sbb    bh,BYTE PTR gs:[ebp-0x54]
  41d561:	idiv   esi
  41d563:	repnz mov ebp,0xf23e6e4b
  41d569:	xchg   edx,eax
  41d56a:	stc    
  41d56b:	push   esi
  41d56c:	push   edx
  41d56d:	js     0x41d4ef
  41d56f:	xor    al,0x2f
  41d571:	pusha  
  41d572:	mov    ch,BYTE PTR [edi-0x205e9cd1]
  41d578:	mov    al,ds:0x5bcca93d
  41d57d:	stos   DWORD PTR es:[edi],eax
  41d57e:	les    esp,FWORD PTR [esi-0x21e0ad6b]
  41d584:	add    esp,edi
  41d586:	idiv   BYTE PTR [ecx+0x6b8c69fd]
  41d58c:	mov    al,ds:0xb409d7a7
  41d591:	cmp    DWORD PTR [esi+edx*2+0x23],edi
  41d595:	rol    bh,cl
  41d597:	push   ss
  41d598:	sbb    ch,ah
  41d59a:	mov    WORD PTR [ecx],ss
  41d59c:	and    BYTE PTR [edi-0x47af98b1],ah
  41d5a2:	xor    DWORD PTR [edi+0x6ae9b07e],0xffffffb6
  41d5a9:	ds daa 
  41d5ab:	das    
  41d5ac:	and    ebp,DWORD PTR [edi+0x20bcc285]
  41d5b2:	les    esi,FWORD PTR [ecx+eax*1-0x5d81fa40]
  41d5b9:	or     BYTE PTR [edx+0x13],ah
  41d5bc:	call   0xb41e:0xc537be4a
  41d5c3:	push   0xffffff84
  41d5c5:	mov    ebx,0x425fc935
  41d5ca:	mov    esp,0x20d9c02e
  41d5cf:	inc    esi
  41d5d0:	daa    
  41d5d1:	and    al,0x6
  41d5d3:	dec    ebp
  41d5d4:	pop    esp
  41d5d5:	cdq    
  41d5d6:	jnp    0x41d5bf
  41d5d8:	in     eax,dx
  41d5d9:	or     esi,DWORD PTR [ebx]
  41d5db:	adc    cl,BYTE PTR [esi-0x197dab10]
  41d5e1:	aam    0x95
  41d5e3:	lods   eax,DWORD PTR ds:[esi]
  41d5e4:	je     0x41d650
  41d5e6:	xchg   esi,eax
  41d5e7:	fsub   st,st(0)
  41d5e9:	jl     0x41d607
  41d5eb:	pushf  
  41d5ec:	sbb    BYTE PTR [eax],bh
  41d5ee:	dec    ebp
  41d5ef:	jmp    0x261a1955
  41d5f4:	jmp    0x41d587
  41d5f6:	sub    ch,dl
  41d5f8:	pop    edi
  41d5f9:	sbb    eax,DWORD PTR [edi+0x161dd802]
  41d5ff:	fcom   st(5)
  41d601:	xchg   esp,eax
  41d602:	jp     0x41d646
  41d604:	sbb    eax,0x2881cc5
  41d609:	lea    ebx,[ebp-0x6f0aa8bc]
  41d60f:	or     al,0x56
  41d611:	cld    
  41d612:	sub    eax,DWORD PTR [edi]
  41d614:	gs inc ebp
  41d616:	jbe    0x41d5a7
  41d618:	nop
  41d619:	pop    esp
  41d61a:	or     DWORD PTR [ebx-0x4f3793b0],esi
  41d620:	push   ss
  41d621:	pop    DWORD PTR [edi-0x2a]
  41d624:	sub    eax,0x6444a162
  41d629:	sub    ah,dl
  41d62b:	jb     0x41d63d
  41d62d:	xor    esp,ecx
  41d62f:	sbb    al,bh
  41d631:	popf   
  41d632:	fbstp  TBYTE PTR [ecx]
  41d634:	(bad)  
  41d635:	int    0xcc
  41d637:	adc    cl,BYTE PTR [edx]
  41d639:	xchg   ebp,eax
  41d63a:	imul   ecx,DWORD PTR [esi+esi*2+0x41],0xffffffc9
  41d63f:	(bad)  
  41d640:	out    dx,al
  41d641:	pop    edi
  41d642:	xchg   ebx,ebx
  41d644:	data16 ins BYTE PTR es:[edi],dx
  41d646:	and    al,0xd3
  41d648:	outs   dx,DWORD PTR ds:[esi]
  41d649:	popf   
  41d64a:	loop   0x41d6a8
  41d64c:	push   eax
  41d64d:	pop    esp
  41d64e:	jo     0x41d5e0
  41d650:	and    al,0x2b
  41d652:	xchg   bl,bl
  41d654:	(bad)  
  41d656:	or     DWORD PTR [ebx],eax
  41d658:	xchg   edx,eax
  41d659:	adc    BYTE PTR [bp+di+0x5d],cl
  41d65d:	lock mov cl,0x50
  41d660:	push   ebx
  41d661:	sub    al,0xf8
  41d663:	retf   
  41d664:	not    bh
  41d666:	daa    
  41d667:	fistp  QWORD PTR [esi+0x653f1c3a]
  41d66d:	std    
  41d66e:	mov    eax,0x43498192
  41d673:	jge    0x41d657
  41d675:	xchg   BYTE PTR [esi],ah
  41d677:	loope  0x41d6bd
  41d679:	(bad)  
  41d67a:	jbe    0x41d626
  41d67c:	sub    DWORD PTR ds:0x845c8ba7,esi
  41d682:	push   ebx
  41d683:	jl     0x41d624
  41d685:	xchg   edi,eax
  41d686:	das    
  41d687:	fsubr  DWORD PTR [esi-0x12ca9b46]
  41d68d:	pop    esi
  41d68e:	adc    dh,ch
  41d690:	int    0xcb
  41d692:	adc    ecx,edx
  41d694:	xor    bh,ah
  41d696:	sub    eax,edx
  41d698:	(bad)  
  41d699:	clc    
  41d69a:	mov    dh,0xe6
  41d69c:	dec    esp
  41d69d:	ret    0xbc01
  41d6a0:	fisubr WORD PTR ds:0x6bb50d14
  41d6a6:	adc    DWORD PTR [ebp+0x7d],eax
  41d6a9:	inc    ecx
  41d6aa:	mov    ss,WORD PTR [esi-0x71]
  41d6ad:	(bad)  
  41d6ae:	xchg   esi,eax
  41d6af:	adc    eax,0xfdee8b85
  41d6b4:	fmul   DWORD PTR [esi+0x7e]
  41d6b7:	retf   0x64ff
  41d6ba:	xor    al,0x24
  41d6bc:	scas   eax,DWORD PTR es:[edi]
  41d6bd:	or     al,0x2
  41d6bf:	xchg   esi,eax
  41d6c0:	xor    DWORD PTR [ecx-0x12],0x508d287c
  41d6c7:	mov    ch,0x6e
  41d6c9:	mov    bl,0x8e
  41d6cb:	arpl   WORD PTR [edx-0x16],si
  41d6ce:	mov    WORD PTR [eax],es
  41d6d0:	dec    ecx
  41d6d1:	adc    al,0xd3
  41d6d3:	loop   0x41d67e
  41d6d5:	xchg   BYTE PTR [eax-0x7aaecac3],dl
  41d6db:	les    ecx,FWORD PTR [esi]
  41d6dd:	test   BYTE PTR [ebp-0x1e953d46],cl
  41d6e3:	and    ah,ah
  41d6e5:	sub    al,0xdd
  41d6e7:	or     BYTE PTR ds:0x6aac788,ah
  41d6ed:	retf   0xc787
  41d6f0:	mov    esp,0xdbc18c1c
  41d6f5:	cmp    edi,edx
  41d6f7:	sub    ch,ch
  41d6f9:	test   eax,0xe06f4efd
  41d6fe:	stos   DWORD PTR es:[edi],eax
  41d6ff:	jl     0x41d731
  41d701:	mov    bl,0x5e
  41d703:	jo     0x41d6e9
  41d705:	pop    eax
  41d706:	loop   0x41d6cd
  41d708:	xchg   ebp,eax
  41d709:	add    esi,DWORD PTR [edx+ebx*8]
  41d70c:	mov    cl,0x61
  41d70e:	xchg   esp,eax
  41d70f:	jp     0x41d751
  41d711:	aad    0x59
  41d713:	mov    edx,0x634bc6da
  41d718:	shr    BYTE PTR [edx+edi*4-0x20b65e69],0x54
  41d720:	mov    ecx,0x1746529c
  41d725:	std    
  41d726:	and    DWORD PTR [ebp-0x21],edx
  41d729:	call   0x3207:0xc85593b
  41d730:	scas   al,BYTE PTR es:[edi]
  41d731:	pop    ecx
  41d732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d733:	popa   
  41d734:	inc    esi
  41d735:	inc    ecx
  41d736:	cmp    BYTE PTR [eax+0x41],al
  41d739:	xlat   BYTE PTR ds:[ebx]
  41d73a:	jp     0x41d6d9
  41d73c:	inc    esp
  41d73d:	or     ch,bl
  41d73f:	inc    edx
  41d740:	inc    ebp
  41d741:	xor    eax,0x416600c8
  41d746:	cmp    ch,BYTE PTR [ecx]
  41d748:	in     eax,0x9f
  41d74a:	and    eax,0xcfc8166c
  41d74f:	inc    ecx
  41d750:	mov    ch,0x62
  41d752:	popa   
  41d753:	adc    eax,DWORD PTR [esi+0x5b8229d4]
  41d759:	push   es
  41d75a:	jl     0x41d73f
  41d75c:	jge    0x41d7c0
  41d75e:	sub    BYTE PTR [esi-0x3c],bl
  41d761:	xor    BYTE PTR [eax],cl
  41d763:	jne    0x41d758
  41d765:	outs   dx,BYTE PTR ds:[esi]
  41d766:	int    0x60
  41d768:	xchg   BYTE PTR [esi-0x50],bl
  41d76b:	mov    ecx,0x5abe7653
  41d770:	inc    ecx
  41d771:	sbb    ch,ch
  41d773:	repnz mov esi,0xb53791fc
  41d779:	mov    edx,DWORD PTR [edx+0x2e7b1b0]
  41d77f:	call   0x34f5:0x454d544b
  41d786:	mov    esp,0x99f3edf2
  41d78b:	adc    BYTE PTR [edx-0x1c],0xf4
  41d78f:	idiv   BYTE PTR [ecx+0x6d6100d8]
  41d795:	mov    eax,0xb9aae4aa
  41d79a:	sub    cl,al
  41d79c:	lea    edx,[ecx-0x20]
  41d79f:	loop   0x41d7de
  41d7a1:	inc    ecx
  41d7a2:	fld    st(5)
  41d7a4:	es sub al,0x47
  41d7a7:	cdq    
  41d7a8:	sbb    ah,BYTE PTR [ebx]
  41d7aa:	dec    esi
  41d7ab:	jae    0x41d7a8
  41d7ad:	sbb    dl,BYTE PTR [edx]
  41d7af:	into   
  41d7b0:	inc    edi
  41d7b1:	and    eax,0xafde13c
  41d7b6:	rcl    DWORD PTR [ebp-0x3a],1
  41d7b9:	repz sub BYTE PTR [ecx],0x6d
  41d7bd:	xor    esi,ecx
  41d7bf:	push   edi
  41d7c0:	mov    ds:0x3bc75f8b,eax
  41d7c5:	loop   0x41d843
  41d7c7:	dec    edx
  41d7c8:	stc    
  41d7c9:	lea    esi,[ecx+0xd]
  41d7cc:	mov    ecx,0x9f75884f
  41d7d1:	aam    0xbc
  41d7d3:	jo     0x41d80d
  41d7d5:	retf   
  41d7d6:	fidivr WORD PTR [ebx-0x63]
  41d7d9:	xchg   ebx,eax
  41d7da:	jp     0x41d75e
  41d7dc:	mov    dh,0x34
  41d7de:	shr    ebx,cl
  41d7e0:	mov    ds:0x88278422,eax
  41d7e5:	xor    eax,0xf32f0d7a
  41d7ea:	mov    ecx,0xcef87e0a
  41d7ef:	mov    ch,0x50
  41d7f1:	fistp  QWORD PTR [esi]
  41d7f3:	ret    
  41d7f4:	sahf   
  41d7f5:	stos   DWORD PTR es:[edi],eax
  41d7f6:	std    
  41d7f7:	jne    0x41d809
  41d7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7fa:	pop    eax
  41d7fb:	cli    
  41d7fc:	sub    eax,0x5aa034ae
  41d801:	add    ecx,DWORD PTR [ebx-0x7e]
  41d804:	test   al,al
  41d806:	fs and eax,0xddd79337
  41d80c:	adc    DWORD PTR [edx],0xb416131e
  41d812:	and    DWORD PTR [ecx+0x59e2c806],esp
  41d818:	inc    ebx
  41d819:	cmp    BYTE PTR [ecx+0x1c],al
  41d81c:	retf   
  41d81d:	dec    ebx
  41d81e:	das    
  41d81f:	and    DWORD PTR [esp+ebx*8-0x31b536d1],edi
  41d826:	addr16 add al,0xd8
  41d829:	and    DWORD PTR [edx],edx
  41d82b:	sub    al,0xb6
  41d82d:	push   ecx
  41d82e:	ss jae 0x41d7de
  41d831:	mov    esi,DWORD PTR [edx]
  41d833:	(bad)  
  41d834:	aas    
  41d835:	pop    ebp
  41d836:	dec    edx
  41d837:	addr16 aam 0xb1
  41d83a:	mov    dl,0x87
  41d83c:	sbb    BYTE PTR [esi+0x1fa5ed03],ch
  41d842:	clc    
  41d843:	xor    eax,0xbf7f49e6
  41d848:	retf   
  41d849:	sub    eax,0xd2ad8ef6
  41d84e:	xchg   esi,eax
  41d84f:	xchg   BYTE PTR [ecx+0x37],bh
  41d852:	or     ecx,edx
  41d854:	cmc    
  41d855:	xor    eax,0x28d24ad1
  41d85a:	js     0x41d884
  41d85c:	dec    ebx
  41d85d:	adc    BYTE PTR [eax+ebp*1+0x43],ah
  41d861:	dec    edi
  41d862:	int3   
  41d863:	clc    
  41d864:	mov    esi,DWORD PTR [edi-0x330a4a4]
  41d86a:	mov    edi,DWORD PTR ds:0xe11657eb
  41d870:	lock push es
  41d872:	in     eax,dx
  41d873:	mov    bh,0x77
  41d875:	loop   0x41d832
  41d877:	or     BYTE PTR [ecx+0x5755c5e2],ah
  41d87d:	ss mov bh,0x25
  41d880:	fisubr WORD PTR [ebp-0x33d725f4]
  41d886:	test   cl,0x80
  41d889:	in     eax,0xea
  41d88b:	out    dx,al
  41d88c:	add    BYTE PTR [ebx+0x6c],0xd4
  41d890:	neg    edi
  41d892:	and    BYTE PTR [edx-0x3125ee63],ch
  41d898:	jb     0x41d8ca
  41d89a:	jb     0x41d81d
  41d89c:	mov    edi,0xd532125d
  41d8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a2:	cld    
  41d8a3:	test   eax,0xbb279b53
  41d8a8:	dec    esi
  41d8a9:	sub    esi,DWORD PTR [ecx]
  41d8ab:	xchg   ebp,eax
  41d8ac:	cmp    DWORD PTR [edi-0x3ed293dc],esp
  41d8b2:	fistp  DWORD PTR [ecx]
  41d8b4:	xchg   esi,eax
  41d8b5:	sbb    BYTE PTR [edx-0x5574fc88],ch
  41d8bb:	cs push eax
  41d8bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8be:	ins    DWORD PTR es:[edi],dx
  41d8bf:	out    dx,eax
  41d8c0:	out    0xe1,eax
  41d8c2:	stc    
  41d8c3:	inc    ebx
  41d8c4:	mov    DWORD PTR [eax-0x53],ebp
  41d8c7:	xor    BYTE PTR [ebx],dl
  41d8c9:	and    al,0x30
  41d8cb:	in     al,dx
  41d8cc:	rcr    BYTE PTR [edx+0x75],cl
  41d8cf:	(bad)  [ecx]
  41d8d1:	mov    ah,0x98
  41d8d3:	or     DWORD PTR gs:[ebp-0x19bf088d],0xbadc33fe
  41d8de:	xchg   esi,eax
  41d8df:	pop    edx
  41d8e0:	xchg   edx,eax
  41d8e1:	dec    edi
  41d8e2:	neg    dh
  41d8e4:	cmp    DWORD PTR [ecx],esp
  41d8e6:	dec    ebp
  41d8e7:	fwait
  41d8e8:	sbb    eax,DWORD PTR [esi]
  41d8ea:	jg     0x41d8a7
  41d8ec:	inc    ebp
  41d8ed:	mov    esp,0xb0a1ce51
  41d8f2:	loopne 0x41d966
  41d8f4:	mov    esp,0x815bfd25
  41d8f9:	mov    ebx,DWORD PTR [eax+0x5e]
  41d8fc:	(bad)  
  41d8fd:	sub    eax,0x5493db6b
  41d902:	ffreep st(0)
  41d904:	dec    edx
  41d905:	jb     0x41d8e3
  41d907:	cmc    
  41d908:	xor    al,0x17
  41d90a:	inc    edx
  41d90b:	cmp    bl,BYTE PTR ds:0x4cc5004c
  41d911:	mov    esi,0xefb56a6a
  41d916:	dec    ebp
  41d917:	mov    ebx,DWORD PTR [edi+0x25873d]
  41d91d:	and    edi,DWORD PTR [ebx+0x3589026f]
  41d923:	mov    dh,0x65
  41d925:	xlat   BYTE PTR ds:[ebx]
  41d926:	fbstp  TBYTE PTR [ecx+0x27]
  41d929:	sub    al,0x94
  41d92b:	sub    ch,BYTE PTR [ecx+0x38]
  41d92e:	lds    edx,FWORD PTR [esi]
  41d930:	xor    al,0x8e
  41d932:	add    BYTE PTR [ebx+edx*4+0x2c],0x1a
  41d937:	test   DWORD PTR [ecx],ecx
  41d939:	aam    0x37
  41d93b:	ins    DWORD PTR es:[edi],dx
  41d93c:	mov    bl,0x95
  41d93e:	cwde   
  41d93f:	xchg   esp,eax
  41d940:	das    
  41d941:	jl     0x41d965
  41d943:	(bad)  
  41d944:	push   ebx
  41d945:	or     BYTE PTR [esi+0x5d7471db],dh
  41d94b:	lahf   
  41d94c:	test   al,0xdd
  41d94e:	pop    edx
  41d94f:	inc    edx
  41d950:	mov    ds:0x20ac6687,al
  41d955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d956:	mov    ebx,0x4cd4c58a
  41d95b:	fiadd  DWORD PTR [ebx]
  41d95d:	hlt    
  41d95e:	jno    0x41d938
  41d960:	loop   0x41d960
  41d962:	jge    0x41d97c
  41d964:	xor    eax,0x88248561
  41d969:	mov    ch,BYTE PTR [ebx-0x3b]
  41d96c:	in     eax,0xd4
  41d96e:	xchg   edi,eax
  41d96f:	mov    dh,0xe7
  41d971:	std    
  41d972:	dec    esp
  41d973:	out    dx,eax
  41d974:	aaa    
  41d975:	pop    esp
  41d976:	and    ebp,DWORD PTR [eax]
  41d978:	bound  ecx,QWORD PTR [ebp-0x78ca0a8c]
  41d97e:	icebp  
  41d97f:	dec    eax
  41d980:	push   ebx
  41d981:	icebp  
  41d982:	(bad)  
  41d983:	out    dx,al
  41d984:	rcr    BYTE PTR [esi],cl
  41d986:	in     eax,0xec
  41d988:	sub    ecx,DWORD PTR [eax+0x6f]
  41d98b:	jg     0x41d949
  41d98d:	mov    ecx,cr4
  41d990:	push   ebx
  41d991:	mov    WORD PTR [ebp-0x1aefd653],cs
  41d997:	mov    bh,0x8b
  41d999:	retf   0xffc2
  41d99c:	mov    dh,0x89
  41d99e:	imul   ecx,DWORD PTR [edi],0x2d
  41d9a1:	std    
  41d9a2:	jno    0x41d937
  41d9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a5:	dec    esp
  41d9a6:	daa    
  41d9a7:	jp     0x41da1b
  41d9a9:	jb     0x41d95e
  41d9ab:	jmp    0xdf8a:0x4fd2d736
  41d9b2:	push   eax
  41d9b3:	imul   ebp,DWORD PTR fs:[ebx],0x67
  41d9b7:	mov    edx,es
  41d9b9:	mov    dl,BYTE PTR [ecx+0x5799beaf]
  41d9bf:	ficomp DWORD PTR [eax]
  41d9c1:	inc    esi
  41d9c2:	and    BYTE PTR [edi-0xd],ah
  41d9c5:	xor    edx,DWORD PTR [edi-0x33]
  41d9c8:	cmp    eax,0xeaa1a866
  41d9cd:	mov    ds:0xb75c1a75,eax
  41d9d2:	test   DWORD PTR [ebp-0x619f2eb6],eax
  41d9d8:	stos   DWORD PTR es:[edi],eax
  41d9d9:	iret   
  41d9da:	retf   0x483d
  41d9dd:	xchg   ecx,eax
  41d9de:	outs   dx,BYTE PTR ds:[esi]
  41d9df:	inc    ecx
  41d9e0:	pop    esp
  41d9e1:	mov    DWORD PTR [edi],edx
  41d9e3:	jg     0x41d97f
  41d9e5:	scas   eax,DWORD PTR es:[edi]
  41d9e6:	aam    0x35
  41d9e8:	pop    DWORD PTR [eax-0x2b]
  41d9eb:	xchg   edi,eax
  41d9ed:	xchg   dl,ah
  41d9ef:	pop    ecx
  41d9f0:	and    eax,0x954bc72f
  41d9f5:	out    dx,al
  41d9f6:	ds or  al,0xed
  41d9f9:	daa    
  41d9fa:	std    
  41d9fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9fc:	sbb    ecx,DWORD PTR [esp-0x3c]
  41da00:	aam    0x63
  41da02:	jne    0x41da52
  41da04:	aam    0xa0
  41da06:	adc    al,0x12
  41da08:	aad    0xd8
  41da0a:	sahf   
  41da0b:	rcl    BYTE PTR [esi-0x7f149127],0x86
  41da12:	and    ch,ch
  41da14:	mov    cl,BYTE PTR [eax-0x712e82af]
  41da1a:	lahf   
  41da1b:	and    al,0x3c
  41da1d:	sbb    al,0xc9
  41da1f:	jb     0x41da57
  41da21:	sahf   
  41da22:	jns    0x41d9d2
  41da24:	adc    cl,BYTE PTR [esi]
  41da26:	fdiv   DWORD PTR [ecx]
  41da28:	sbb    DWORD PTR [ebx+0x12595af1],esi
  41da2e:	imul   ebp,DWORD PTR ds:0x81d4d26,0x28
  41da35:	aaa    
  41da36:	dec    ecx
  41da37:	cwd    
  41da39:	in     al,dx
  41da3a:	repnz pushf 
  41da3c:	mov    eax,ds:0x398719da
  41da41:	into   
  41da42:	pop    ebp
  41da43:	cmp    BYTE PTR [esi],ah
  41da45:	cli    
  41da46:	aam    0xad
  41da48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da49:	lods   eax,DWORD PTR ds:[esi]
  41da4a:	test   DWORD PTR [ecx+0x5a],0x3a056bb7
  41da51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da52:	out    dx,eax
  41da53:	mov    cl,0x59
  41da55:	stc    
  41da56:	daa    
  41da57:	mov    esi,0xb467f2bc
  41da5c:	adc    bh,BYTE PTR [esi-0x16]
  41da5f:	mov    al,0xc7
  41da61:	sub    DWORD PTR ds:0x20c824f6,edx
  41da67:	dec    ebp
  41da68:	nop
  41da69:	test   DWORD PTR [edx],edi
  41da6b:	repnz mov ecx,eax
  41da6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da6f:	(bad)  [ebp+0x318b623d]
  41da75:	cmp    BYTE PTR [esp+esi*8],bh
  41da78:	add    eax,esi
  41da7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da7b:	cmp    al,0xc3
  41da7d:	jge    0x41dab0
  41da7f:	retf   
  41da80:	xchg   edx,eax
  41da81:	int3   
  41da82:	ja     0x41dace
  41da84:	call   0x28cf:0xe3499abb
  41da8b:	or     eax,0x2c2e4a0f
  41da90:	jmp    0x6131:0xf0cbb042
  41da97:	(bad)  
  41da9a:	sub    DWORD PTR [ebx+0x75],esi
  41da9d:	mov    al,ds:0x6fcdaf57
  41daa2:	or     BYTE PTR ds:0xb71b8069,0xd
  41daa9:	fs fcmovnb st,st(0)
  41daac:	pop    edx
  41daad:	mov    ebx,0xf64e0966
  41dab2:	mov    WORD PTR [edi+0x27],gs
  41dab5:	adc    al,0x91
  41dab7:	mov    cl,0x83
  41dab9:	adc    DWORD PTR [esi-0x5b],0x19
  41dabd:	cmp    DWORD PTR [edx],eax
  41dabf:	adc    dl,dl
  41dac1:	mov    dh,0x34
  41dac3:	aas    
  41dac4:	shl    ah,cl
  41dac6:	hlt    
  41dac7:	js     0x41da52
  41dac9:	sub    BYTE PTR [ebp+0x19],al
  41dacc:	inc    esi
  41dacd:	and    eax,0xd2e00295
  41dad2:	in     al,0x43
  41dad4:	mov    ecx,0xa52554d3
  41dada:	cmp    DWORD PTR [esi+0x4d],0xda56bb9f
  41dae1:	jecxz  0x41db38
  41dae3:	fs xchg esi,eax
  41dae5:	(bad)  
  41dae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae7:	ficom  WORD PTR [eax]
  41dae9:	mov    ds:0x9fea1422,al
  41daee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daef:	mov    eax,ss
  41daf1:	or     DWORD PTR [esp+ebx*8],0x66
  41daf5:	popf   
  41daf6:	sub    BYTE PTR [ebp+0x4a],dl
  41daf9:	hlt    
  41dafa:	stos   DWORD PTR es:[edi],eax
  41dafb:	push   ss
  41dafc:	cwde   
  41dafd:	mov    ah,0xcb
  41daff:	pop    ebp
  41db00:	mov    al,0x54
  41db02:	push   ebx
  41db03:	repnz iret 
  41db05:	xor    dh,BYTE PTR [ecx]
  41db07:	xchg   esp,eax
  41db08:	loope  0x41db14
  41db0a:	neg    DWORD PTR [edx]
  41db0c:	cmp    edx,DWORD PTR [ecx+0x19d955af]
  41db12:	jg     0x41db4f
  41db14:	inc    ebx
  41db15:	int    0x81
  41db17:	nop
  41db18:	aas    
  41db19:	gs ret 0x1787
  41db1d:	div    BYTE PTR [ebx+0x53]
  41db20:	test   DWORD PTR [ebp-0x60364be0],edi
  41db26:	sahf   
  41db27:	aaa    
  41db28:	retf   0x53c1
  41db2b:	cld    
  41db2c:	push   edi
  41db2d:	push   cs
  41db2e:	(bad)  
  41db2f:	jmp    0x129d4c7e
  41db34:	pop    ds
  41db35:	mov    ds:0xc6ab4df4,eax
  41db3a:	sbb    al,0x1b
  41db3c:	lods   al,BYTE PTR ds:[esi]
  41db3d:	in     al,dx
  41db3e:	sbb    BYTE PTR [ebx-0x3e],cl
  41db41:	inc    ebp
  41db42:	ror    DWORD PTR [edi-0x56f01902],0x5
  41db49:	pushf  
  41db4a:	daa    
  41db4b:	dec    esi
  41db4c:	cdq    
  41db4d:	sub    BYTE PTR [esi],al
  41db4f:	mov    ch,0xd6
  41db51:	jge    0x41dba5
  41db53:	push   cs
  41db54:	sbb    DWORD PTR cs:[edi],ecx
  41db57:	mov    al,ds:0x1add5d44
  41db5c:	push   eax
  41db5d:	add    eax,0x228bb2d0
  41db62:	bound  edx,QWORD PTR [edi+0x62036a62]
  41db68:	outs   dx,BYTE PTR ds:[esi]
  41db69:	sbb    al,0xec
  41db6b:	jo     0x41dbcb
  41db6d:	bound  ax,DWORD PTR [ebx]
  41db70:	sbb    DWORD PTR [esi+0xf],ebx
  41db73:	dec    esp
  41db74:	push   esi
  41db75:	fcom   QWORD PTR [ecx+esi*4+0x6c]
  41db79:	aam    0xad
  41db7b:	mov    ?,WORD PTR [ebx]
  41db7d:	or     al,0x1f
  41db7f:	cld    
  41db80:	fisubr DWORD PTR [ebp-0x6f1026e6]
  41db86:	or     al,0x0
  41db88:	cmp    ebp,DWORD PTR [ebx-0x8]
  41db8b:	nop
  41db8c:	daa    
  41db8d:	mov    ebx,0xbc27cdc
  41db92:	cld    
  41db93:	xchg   dl,bl
  41db95:	jnp    0x41dbb7
  41db97:	push   ecx
  41db98:	bound  edi,QWORD PTR [eax+0x67]
  41db9b:	int3   
  41db9c:	pop    esp
  41db9d:	jl     0x41db85
  41db9f:	or     al,ch
  41dba1:	ins    DWORD PTR es:[edi],dx
  41dba2:	add    al,0x53
  41dba4:	retf   
  41dba5:	call   0x2607:0x25db9442
  41dbac:	inc    ecx
  41dbad:	mov    WORD PTR [eax-0x572ca001],ss
  41dbb3:	scas   eax,DWORD PTR es:[edi]
  41dbb4:	fild   QWORD PTR [esp+esi*2-0x109a2060]
  41dbbb:	or     eax,0x19dedcbe
  41dbc0:	cmp    eax,0xf9c5da00
  41dbc5:	add    BYTE PTR [edi],0x9d
  41dbc8:	push   ebx
  41dbc9:	fwait
  41dbca:	xchg   ecx,eax
  41dbcb:	sub    bl,BYTE PTR [edi+eax*4-0x56004421]
  41dbd2:	cmp    al,0x31
  41dbd4:	bound  edi,QWORD PTR [ebx]
  41dbd6:	ss and ebx,ebx
  41dbd9:	pushf  
  41dbda:	add    cl,ah
  41dbdc:	popf   
  41dbdd:	sbb    cl,BYTE PTR [ecx-0x579540fc]
  41dbe3:	sahf   
  41dbe4:	daa    
  41dbe5:	sub    al,0x72
  41dbe7:	push   esp
  41dbe8:	rcr    BYTE PTR [edx-0x49fa8576],1
  41dbee:	xchg   ebx,eax
  41dbef:	ret    0xb8e6
  41dbf2:	mov    ch,0x28
  41dbf4:	mov    esp,0x5fd19796
  41dbf9:	cmc    
  41dbfa:	les    ebp,FWORD PTR [eax]
  41dbfc:	scas   eax,DWORD PTR es:[edi]
  41dbfd:	ds addr16 inc esi
  41dc00:	imul   BYTE PTR [edx]
  41dc02:	iret   
  41dc03:	iret   
  41dc04:	cmc    
  41dc05:	retf   0x3444
  41dc08:	sbb    eax,0xd0e80597
  41dc0d:	pop    ebx
  41dc0e:	int    0xe0
  41dc10:	inc    ebx
  41dc11:	jmp    0xf9af01c9
  41dc16:	push   ds
  41dc17:	inc    ecx
  41dc18:	ins    BYTE PTR es:[edi],dx
  41dc19:	outs   dx,BYTE PTR ds:[esi]
  41dc1a:	icebp  
  41dc1b:	xlat   BYTE PTR ds:[ebx]
  41dc1c:	mov    ds:0x74547cbf,eax
  41dc21:	(bad)  
  41dc22:	fucompp 
  41dc24:	addr16 dec edi
  41dc26:	cli    
  41dc27:	fwait
  41dc28:	(bad)  
  41dc29:	jae    0x41dc8f
  41dc2b:	or     BYTE PTR [ebx-0x5f],ah
  41dc2e:	jae    0x41dbb1
  41dc30:	push   edx
  41dc31:	aaa    
  41dc32:	push   0xb23ca9fd
  41dc37:	enter  0x9d4f,0xd0
  41dc3b:	(bad)  
  41dc3d:	sahf   
  41dc3e:	or     eax,0xb385ce58
  41dc43:	jl     0x41dc53
  41dc45:	add    DWORD PTR [ecx-0x2bf811f6],edi
  41dc4b:	(bad)  
  41dc4c:	ds xchg esp,eax
  41dc4e:	xchg   cl,bl
  41dc50:	and    ebx,edx
  41dc52:	and    BYTE PTR [ebp-0x72024182],0x50
  41dc59:	callw  0x9148
  41dc5d:	cdq    
  41dc5e:	call   0xd5c3:0xbca61fca
  41dc65:	sbb    eax,DWORD PTR [ecx-0x25]
  41dc68:	call   0x30b70eba
  41dc6d:	or     eax,0x26818152
  41dc72:	mov    dh,0x22
  41dc74:	xor    bh,BYTE PTR [esi+0x66]
  41dc77:	hlt    
  41dc78:	lds    esi,FWORD PTR [edx-0x10]
  41dc7b:	jp     0x41dca3
  41dc7d:	jmp    0x6767:0x510b7469
  41dc84:	dec    esi
  41dc85:	mov    ebp,0x92e21e52
  41dc8a:	fist   DWORD PTR ds:0x6c306739
  41dc90:	fs and eax,0x1a4b27d5
  41dc96:	mov    edx,0x47e8b5e6
  41dc9b:	mov    dl,BYTE PTR [eax+0x34b6bdec]
  41dca1:	scas   al,BYTE PTR es:[edi]
  41dca2:	pop    ecx
  41dca3:	call   0x544f:0xd5c36080
  41dcaa:	xor    al,0xc9
  41dcac:	fdivrp st(5),st
  41dcae:	push   ebp
  41dcaf:	pop    eax
  41dcb0:	pop    ss
  41dcb1:	mov    ?,WORD PTR [eax-0xc]
  41dcb4:	lea    edi,[ebx+esi*8]
  41dcb7:	mov    al,ds:0x41e7d28b
  41dcbc:	xor    DWORD PTR [esi+eiz*4-0x1169953],0xf0dbee2e
  41dcc7:	shr    BYTE PTR [esp+ebp*8],cl
  41dcca:	pushf  
  41dccb:	ja     0x41dd49
  41dccd:	pop    edx
  41dcce:	sti    
  41dccf:	aam    0x46
  41dcd1:	and    eax,0xe2d35797
  41dcd6:	sub    ebx,DWORD PTR [ecx+ecx*4-0x4d]
  41dcda:	mov    dh,0x8c
  41dcdc:	push   ebx
  41dcdd:	inc    ebp
  41dcde:	mov    bl,0x4d
  41dce0:	push   edi
  41dce1:	mov    dl,0xd9
  41dce3:	nop
  41dce4:	cmp    BYTE PTR [esi],bl
  41dce6:	je     0x41dce6
  41dce8:	aaa    
  41dce9:	inc    esi
  41dcea:	push   eax
  41dceb:	pop    es
  41dcec:	repz pop ss
  41dcee:	call   0xb175:0x33fc6736
  41dcf5:	sbb    dl,BYTE PTR [eax-0x58]
  41dcf8:	aam    0x2a
  41dcfa:	arpl   WORD PTR [edx+0x4a4e0517],si
  41dd00:	(bad)  
  41dd02:	clc    
  41dd03:	inc    ecx
  41dd04:	(bad)  
  41dd05:	sti    
  41dd06:	push   cs
  41dd07:	enter  0xa7f8,0x8c
  41dd0b:	fwait
  41dd0c:	cmp    esp,DWORD PTR ds:0xcea64b1b
  41dd12:	mov    WORD PTR [esi-0x22],es
  41dd15:	ja     0x41dd2c
  41dd17:	fisttp QWORD PTR [ecx+0x6e]
  41dd1a:	retf   0x6120
  41dd1d:	cld    
  41dd1e:	mov    cl,BYTE PTR [edx-0x7a0494cb]
  41dd24:	xchg   edx,eax
  41dd25:	icebp  
  41dd26:	pop    ecx
  41dd27:	jmp    0x1bdd649f
  41dd2c:	rcl    DWORD PTR [ecx+0x3],0x94
  41dd30:	sbb    eax,0x76d0c531
  41dd35:	xor    bl,cl
  41dd37:	push   0xffffffef
  41dd39:	lock stos BYTE PTR es:[edi],al
  41dd3b:	jnp    0x41dccc
  41dd3d:	cmp    DWORD PTR [edx+0x2c],0x4b11f136
  41dd44:	mov    WORD PTR [ecx-0x395f36c3],fs
  41dd4a:	iret   
  41dd4b:	in     al,0xbe
  41dd4d:	xchg   ecx,eax
  41dd4e:	rcr    DWORD PTR [ecx+0x4b47783e],1
  41dd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd55:	mov    WORD PTR [ebx+0x639906ad],es
  41dd5b:	(bad)  
  41dd5c:	fisub  DWORD PTR [eiz*1-0x4ff57eb]
  41dd63:	daa    
  41dd64:	xchg   BYTE PTR [edx-0x165aedbb],al
  41dd6a:	inc    ecx
  41dd6b:	popa   
  41dd6c:	lea    ebp,[ecx+edi*1-0xa]
  41dd70:	repz mov ds:0x91a1a9d6,eax
  41dd76:	test   DWORD PTR [ecx+0x4fd8cdb5],esi
  41dd7c:	adc    al,0x7c
  41dd7f:	adc    DWORD PTR [esi+ecx*4],ebp
  41dd82:	or     eax,0xb0ca039f
  41dd87:	and    DWORD PTR [ebx+eax*4-0x54],edi
  41dd8b:	out    0x2c,al
  41dd8d:	into   
  41dd8e:	adc    bh,dh
  41dd90:	or     edi,0x2a87d35b
  41dd96:	fild   QWORD PTR [esi]
  41dd98:	xor    BYTE PTR [ebx+0x4a18e6f9],dl
  41dd9e:	mov    es,WORD PTR ds:[esi-0x2ea2a200]
  41dda5:	ins    BYTE PTR es:[edi],dx
  41dda6:	xchg   edi,eax
  41dda7:	dec    ebx
  41dda8:	sti    
  41dda9:	push   eax
  41ddaa:	lds    eax,FWORD PTR [edi]
  41ddac:	dec    ebp
  41ddad:	je     0x41ddc7
  41ddaf:	mov    ah,0x47
  41ddb1:	fadd   st,st(2)
  41ddb3:	sbb    DWORD PTR [ebx-0x59f83eb9],ebx
  41ddb9:	ds dec esi
  41ddbb:	out    dx,al
  41ddbc:	adc    ebx,ebp
  41ddbe:	and    cl,BYTE PTR [ebx+eiz*4-0x6b]
  41ddc2:	dec    edi
  41ddc3:	adc    eax,0xa79527bb
  41ddc8:	pop    esi
  41ddc9:	or     BYTE PTR [edi+edx*8],ah
  41ddcc:	fstp   QWORD PTR [ebx-0x54]
  41ddd0:	into   
  41ddd1:	je     0x41de20
  41ddd3:	bnd jnp 0x41dd6c
  41ddd6:	div    ebx
  41ddd8:	mov    esp,0x9c856c50
  41dddd:	pop    ebx
  41ddde:	xchg   edx,eax
  41dddf:	mov    ecx,eax
  41dde1:	sar    esi,1
  41dde3:	mul    BYTE PTR [edi+esi*2]
  41dde6:	mov    ch,0x59
  41dde8:	xor    al,0xed
  41ddea:	sbb    al,0x8f
  41ddec:	je     0x41ddcb
  41ddee:	xor    BYTE PTR [eax+eiz*1-0x7e],cl
  41ddf2:	push   edx
  41ddf3:	out    dx,eax
  41ddf4:	jmp    0x83fecac8
  41ddf9:	fdiv   st,st(0)
  41ddfb:	sbb    eax,0xd68b516a
  41de00:	mov    cl,0x3e
  41de02:	mov    ch,0x7a
  41de04:	cld    
  41de05:	and    eax,0xcd6c1427
  41de0a:	inc    eax
  41de0b:	pop    edi
  41de0c:	cmp    edi,DWORD PTR [esi+0x5275ba93]
  41de12:	stos   BYTE PTR es:[edi],al
  41de13:	jp     0x41dda6
  41de15:	xchg   esp,eax
  41de16:	mov    cl,0x4
  41de18:	mov    ch,0x58
  41de1a:	push   eax
  41de1b:	mov    bl,0xca
  41de1d:	arpl   sp,sp
  41de1f:	mov    ch,BYTE PTR [edi-0x2563e904]
  41de25:	test   eax,0x4d9315a0
  41de2a:	push   ebx
  41de2b:	ds fwait
  41de2d:	dec    edi
  41de2e:	lods   al,BYTE PTR ds:[esi]
  41de2f:	pusha  
  41de30:	imul   esp,DWORD PTR [ebp+0x36326f25],0xffffffd0
  41de37:	xchg   esp,eax
  41de38:	add    al,0xfc
  41de3a:	int3   
  41de3b:	fist   WORD PTR [edx-0x3d]
  41de3e:	pop    esp
  41de3f:	or     DWORD PTR [edx+0x73],ebx
  41de42:	push   eax
  41de43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de44:	adc    BYTE PTR [ecx+0x63],0x8f
  41de48:	jno    0x41deb5
  41de4a:	scas   eax,DWORD PTR es:[edi]
  41de4b:	fs not BYTE PTR ss:[eax-0x4d65656f]
  41de53:	pop    ebp
  41de54:	sbb    eax,esi
  41de56:	pop    edi
  41de57:	adc    BYTE PTR [ecx],0x93
  41de5a:	or     al,0x16
  41de5c:	js     0x41ded4
  41de5e:	enter  0x851a,0x56
  41de62:	adc    ah,BYTE PTR [edx+0x22]
  41de65:	adc    ebx,DWORD PTR [edx-0x784dc655]
  41de6b:	cli    
  41de6c:	(bad)  
  41de6d:	ins    BYTE PTR es:[edi],dx
  41de6e:	mov    BYTE PTR [edi],cl
  41de70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de71:	mov    esi,0xa6a2004b
  41de76:	les    edi,FWORD PTR [edx+0x50]
  41de79:	fnstenv [edx+0x438fd37e]
  41de7f:	dec    DWORD PTR [ecx]
  41de81:	stos   BYTE PTR es:[edi],al
  41de82:	sub    al,BYTE PTR [edi+0x71]
  41de85:	pop    ds
  41de86:	add    BYTE PTR [eax+0x23],bh
  41de89:	jbe    0x41de2b
  41de8b:	aas    
  41de8c:	dec    esp
  41de8d:	sbb    edi,ebx
  41de8f:	cdq    
  41de90:	repz mov eax,ds:0x68d14a2e
  41de96:	dec    edi
  41de97:	pop    edx
  41de98:	cdq    
  41de99:	cmp    BYTE PTR [edx+0x77],bl
  41de9c:	jb     0x41de9f
  41de9e:	pushf  
  41de9f:	and    BYTE PTR [eax],cl
  41dea1:	and    al,0x39
  41dea3:	stos   DWORD PTR es:[edi],eax
  41dea4:	push   esp
  41dea5:	push   eax
  41dea6:	jg     0x41de4b
  41dea8:	or     DWORD PTR [ebx-0xb],ecx
  41deab:	retf   0x8836
  41deae:	push   eax
  41deaf:	add    BYTE PTR [esi],ah
  41deb1:	xor    eax,0x4cff3626
  41deb6:	je     0x41df24
  41deb8:	clc    
  41deb9:	push   ecx
  41deba:	std    
  41debb:	pop    edi
  41debc:	jo     0x41de59
  41debe:	mov    ch,0x64
  41dec0:	mov    esi,0xfebf73f0
  41dec5:	es mov ebp,0x586cfcfb
  41decb:	dec    cx
  41decd:	cdq    
  41dece:	dec    ecx
  41decf:	xlat   BYTE PTR ds:[ebx]
  41ded0:	clc    
  41ded1:	mov    ebx,0x114c44f3
  41ded6:	aas    
  41ded7:	fsub   DWORD PTR [eax+0x31]
  41deda:	(bad)  
  41dedb:	adc    al,0x46
  41dedd:	das    
  41dede:	imul   BYTE PTR [ebx+0x14]
  41dee1:	xchg   edx,eax
  41dee2:	and    eax,0x71e0e01a
  41dee7:	jge    0x41df22
  41dee9:	xlat   BYTE PTR ds:[ebx]
  41deea:	mov    eax,ds:0x121e01f1
  41deef:	mov    eax,ds:0x4f94de25
  41def4:	cs jmp 0x45e3290f
  41defa:	sbb    eax,DWORD PTR [eax]
  41defc:	fstp   TBYTE PTR [ebx]
  41defe:	iret   
  41deff:	add    al,0xe5
  41df01:	xchg   ecx,eax
  41df02:	mov    eax,ds:0x268ae511
  41df07:	mov    al,BYTE PTR [edx-0x8]
  41df0a:	lea    esp,[edx+0x7]
  41df0d:	outs   dx,DWORD PTR ds:[esi]
  41df0e:	rcl    BYTE PTR [esi+0x0],0x74
  41df12:	mov    esi,0xa36d3692
  41df17:	xchg   ebx,eax
  41df18:	or     ecx,ebx
  41df1a:	in     al,0xa
  41df1c:	ins    BYTE PTR es:[edi],dx
  41df1d:	jb     0x41df59
  41df1f:	mov    bl,0x2a
  41df21:	int3   
  41df22:	repz bnd jl 0x41dec4
  41df26:	stos   DWORD PTR es:[edi],eax
  41df27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df28:	rep ins BYTE PTR es:[edi],dx
  41df2a:	stos   BYTE PTR es:[edi],al
  41df2b:	jnp    0x41dec9
  41df2d:	shl    BYTE PTR [ecx+0x28],cl
  41df30:	aad    0xfc
  41df32:	lea    ebx,[esi-0x50df5973]
  41df38:	fdiv   QWORD PTR [edi]
  41df3a:	out    0x62,eax
  41df3c:	lods   eax,DWORD PTR ds:[esi]
  41df3d:	xlat   BYTE PTR ds:[ebx]
  41df3e:	mov    ebx,0xfe174d4c
  41df43:	outs   dx,DWORD PTR ds:[esi]
  41df44:	push   eax
  41df45:	hlt    
  41df46:	jmp    0x2cd6:0x9b4c176e
  41df4d:	test   ah,cl
  41df4f:	xchg   ebp,eax
  41df50:	fcomip st,st(6)
  41df52:	lods   al,BYTE PTR ds:[esi]
  41df53:	aad    0x54
  41df55:	ins    DWORD PTR es:[edi],dx
  41df56:	add    edx,ecx
  41df58:	jmp    0x41dfd7
  41df5a:	dec    ebx
  41df5b:	int3   
  41df5c:	or     BYTE PTR [edx],bl
  41df5e:	xor    dh,BYTE PTR [ebp+0xb4ea00b]
  41df64:	or     eax,DWORD PTR [eax+0x367ec3a9]
  41df6a:	or     esi,edx
  41df6c:	cwde   
  41df6d:	retf   0x5d92
  41df70:	dec    edi
  41df71:	fisttp DWORD PTR [edi+edi*1+0x3b]
  41df75:	pop    edi
  41df76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df77:	xor    al,0x32
  41df79:	add    bh,cl
  41df7b:	mov    ds:0x506ab49f,eax
  41df80:	jp     0x41dfd9
  41df82:	(bad)  
  41df83:	xlat   BYTE PTR ds:[ebx]
  41df84:	jb     0x41df55
  41df86:	mov    al,0xc
  41df88:	dec    edx
  41df89:	lods   al,BYTE PTR ds:[esi]
  41df8a:	sbb    esp,DWORD PTR [ebp-0x35]
  41df8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8e:	cmp    al,bh
  41df90:	leave  
  41df91:	xor    al,0x2a
  41df94:	adc    cl,0x8d
  41df97:	mov    ch,0x34
  41df99:	scas   al,BYTE PTR es:[edi]
  41df9a:	push   esp
  41df9b:	dec    eax
  41df9c:	xor    ebx,DWORD PTR ds:0x1bcab1d6
  41dfa2:	xchg   ecx,eax
  41dfa3:	(bad)  
  41dfa4:	ja     0x41dfb6
  41dfa6:	add    eax,esp
  41dfa8:	in     eax,dx
  41dfa9:	cmp    eax,0x7890c3a1
  41dfae:	fadd   DWORD PTR [edx+0x76]
  41dfb1:	mov    ds:0x6f4ed4a3,eax
  41dfb6:	pop    eax
  41dfb7:	sar    BYTE PTR [edi+0x5d],1
  41dfba:	sbb    ecx,DWORD PTR [esi]
  41dfbc:	data16 ja 0x41dff5
  41dfbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc0:	mov    dl,0xbb
  41dfc2:	sbb    ch,al
  41dfc4:	jle    0x41df51
  41dfc6:	mov    esi,0xa50a0474
  41dfcb:	fadd   st(1),st
  41dfcd:	jle    0x41df70
  41dfcf:	cmp    eax,0xad03e22d
  41dfd4:	xchg   ebx,eax
  41dfd5:	(bad)  
  41dfd6:	xchg   ebp,eax
  41dfd7:	les    ebx,FWORD PTR [ebx]
  41dfd9:	adc    eax,0x3c99e318
  41dfde:	fidivr DWORD PTR [eax+ecx*4]
  41dfe1:	test   al,0x44
  41dfe3:	cmp    DWORD PTR [ecx+ecx*8-0x1e2c5035],eax
  41dfea:	(bad)  
  41dfeb:	mov    bl,0xb9
  41dfed:	mov    esi,0x62dfcaf2
  41dff2:	cmp    eax,edx
  41dff4:	ins    DWORD PTR es:[edi],dx
  41dff5:	int    0xdb
  41dff7:	popa   
  41dff8:	and    DWORD PTR [ebp+0x25],esi
  41dffb:	jnp    0x41dfa2
  41dffd:	cdq    
  41dffe:	xor    al,0xb5
  41e000:	fistp  DWORD PTR [esi]
  41e002:	jmp    0xf9fe:0x4b06882c
  41e009:	ds cmp eax,0x236c52c1
  41e00f:	xchg   esi,eax
  41e010:	inc    ebx
  41e011:	(bad)  
  41e012:	mov    ecx,0x4ae17491
  41e017:	fisubr WORD PTR [edi+0x4aacd8c3]
  41e01d:	mov    ecx,0xeed06c36
  41e022:	cmp    dh,ch
  41e024:	imul   eax,DWORD PTR [ebp+ebp*8+0x660fbf53],0xfffffff4
  41e02c:	and    BYTE PTR [edi+0x58caf337],bl
  41e032:	xor    bl,BYTE PTR [ebp+0x3a5acf6e]
  41e038:	jb     0x41dfeb
  41e03a:	adc    al,0xc2
  41e03c:	and    dl,BYTE PTR [edi]
  41e03e:	int3   
  41e03f:	push   0x2f
  41e041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e042:	hlt    
  41e043:	sub    ecx,DWORD PTR [esp+ebp*2+0x51]
  41e047:	xor    esi,DWORD PTR [edi+esi*4+0x26]
  41e04b:	mov    ecx,0x83a3732
  41e050:	cmp    eax,0x880b7cc1
  41e055:	xor    DWORD PTR [edx-0x45],0x544cc568
  41e05c:	mov    ds:0x7a1e737a,eax
  41e061:	std    
  41e062:	(bad)  
  41e063:	scas   al,BYTE PTR es:[edi]
  41e064:	fist   DWORD PTR [ecx+0x61d6856e]
  41e06a:	mov    ebx,0x2c5a368
  41e06f:	cwde   
  41e070:	rcr    BYTE PTR [esi],1
  41e072:	(bad)  
  41e073:	pushf  
  41e074:	inc    edx
  41e075:	mov    ds:0x20e58883,al
  41e07a:	dec    edi
  41e07b:	cmp    eax,0x419a1f0e
  41e080:	and    dl,cl
  41e082:	lock adc ebx,DWORD PTR [eax+0x41fbb14]
  41e089:	cmc    
  41e08a:	inc    edi
  41e08b:	mov    eax,ds:0x45103fb4
  41e090:	daa    
  41e091:	inc    esi
  41e092:	or     ebp,esi
  41e094:	mov    WORD PTR [ebx-0x17],es
  41e097:	(bad)  
  41e098:	cdq    
  41e099:	xor    esp,DWORD PTR [ebx-0x78f086d6]
  41e09f:	arpl   WORD PTR [edi-0x32123cf3],bx
  41e0a5:	xchg   ebp,eax
  41e0a6:	cmp    al,0xf8
  41e0a8:	(bad)  
  41e0a9:	shr    BYTE PTR [ebx-0xeb3717a],0xb2
  41e0b0:	push   es
  41e0b1:	div    DWORD PTR [esi+ebp*8+0x1f]
  41e0b5:	lock lahf 
  41e0b7:	aad    0xea
  41e0b9:	outs   dx,BYTE PTR ds:[esi]
  41e0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0bb:	pop    eax
  41e0bc:	add    eax,0x4837dfe
  41e0c1:	adc    al,0x95
  41e0c3:	pop    eax
  41e0c4:	or     bh,BYTE PTR [edx+eax*1+0x39143e73]
  41e0cb:	lds    edx,FWORD PTR [edx-0x5e]
  41e0ce:	jae    0x41e0d2
  41e0d0:	add    bh,bh
  41e0d2:	inc    esi
  41e0d3:	sar    BYTE PTR [edi+0x6f92ea67],0x53
  41e0da:	mov    ebp,0x2146244f
  41e0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e0:	fwait
  41e0e1:	dec    esi
  41e0e2:	xchg   edx,eax
  41e0e3:	fcomp  QWORD PTR [ecx+0x65]
  41e0e6:	jne    0x41e087
  41e0e8:	push   esp
  41e0e9:	ds mov ebx,0x3eb2857d
  41e0ef:	cmp    BYTE PTR [ecx],ah
  41e0f1:	xchg   ecx,esp
  41e0f3:	outs   dx,BYTE PTR ds:[esi]
  41e0f4:	xlat   BYTE PTR ds:[ebx]
  41e0f5:	adc    esi,DWORD PTR [esi+0x3ca48e3e]
  41e0fb:	js     0x41e104
  41e0fd:	and    BYTE PTR [ecx+edi*2+0x7e],al
  41e101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e102:	shl    BYTE PTR ds:0xa2a2d282,1
  41e108:	lods   al,BYTE PTR ds:[esi]
  41e109:	cdq    
  41e10a:	addr16 mov ah,0xfa
  41e10d:	imul   edx,DWORD PTR [esi],0xfffffff7
  41e110:	xor    eax,esi
  41e112:	into   
  41e113:	shl    ch,cl
  41e115:	or     edx,DWORD PTR [edx]
  41e117:	pop    ebx
  41e118:	mov    ah,0x7d
  41e11a:	pop    eax
  41e11b:	inc    ebx
  41e11c:	adc    eax,0x1a378dc6
  41e121:	retf   
  41e122:	outs   dx,DWORD PTR ds:[esi]
  41e123:	test   al,0x17
  41e125:	sub    eax,0x60fb5658
  41e12a:	enter  0x7a22,0x8c
  41e12e:	mov    esp,0x40100b84
  41e133:	xchg   ebx,eax
  41e134:	xor    al,0xdd
  41e136:	rcr    edi,cl
  41e138:	dec    ebx
  41e139:	sub    DWORD PTR [ebp-0x4b76806b],ebp
  41e13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e140:	mov    ch,0xaa
  41e142:	cmp    DWORD PTR [eax+0x56],esi
  41e145:	nop
  41e146:	pop    eax
  41e147:	out    0xc0,al
  41e149:	stos   BYTE PTR es:[edi],al
  41e14a:	inc    eax
  41e14b:	sbb    DWORD PTR [ebx+eax*2],0xa8c25ae8
  41e152:	(bad)  
  41e153:	cmc    
  41e154:	and    eax,0x7cfcd160
  41e159:	repnz pusha 
  41e15b:	or     DWORD PTR [eax-0x5af06cbc],0x6553e288
  41e165:	mov    ds:0xe29a6b2,al
  41e16a:	enter  0xf24d,0xcd
  41e16e:	sar    BYTE PTR [ecx],1
  41e170:	pop    ebp
  41e171:	xor    ebp,esp
  41e173:	inc    esp
  41e174:	mov    ds:0x7f256a1d,eax
  41e179:	push   0xde7babf7
  41e17e:	fimul  WORD PTR [ecx+0x70]
  41e181:	dec    ecx
  41e182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e183:	lock adc bh,BYTE PTR [ecx-0x7]
  41e187:	xor    BYTE PTR [ecx],ch
  41e189:	fwait
  41e18a:	mov    ecx,?
  41e18c:	or     eax,0xe6ec64e8
  41e191:	fldenv [esi]
  41e193:	popa   
  41e194:	retf   
  41e195:	js     0x41e17e
  41e197:	mov    cl,BYTE PTR [ebx+0x52]
  41e19a:	das    
  41e19b:	xchg   edi,eax
  41e19c:	cmp    BYTE PTR [esi-0x7e],dl
  41e19f:	arpl   WORD PTR [edx],si
  41e1a1:	cmp    eax,0xc57761d2
  41e1a6:	or     BYTE PTR [ecx],dh
  41e1a8:	out    0x81,eax
  41e1aa:	sti    
  41e1ab:	sbb    bh,BYTE PTR [eax-0x69]
  41e1ae:	stc    
  41e1af:	mov    eax,0x695a1c62
  41e1b4:	jge    0x41e1b6
  41e1b6:	and    eax,0xeccb4272
  41e1bb:	ror    bh,0xa5
  41e1be:	cmp    al,0x61
  41e1c0:	xchg   esp,eax
  41e1c1:	(bad)  
  41e1c2:	pop    esi
  41e1c3:	test   BYTE PTR [ecx],cl
  41e1c5:	jnp    0x41e168
  41e1c7:	ficomp DWORD PTR [eax]
  41e1c9:	dec    esp
  41e1ca:	jmp    0x92e54b64
  41e1cf:	xchg   DWORD PTR [ecx+0x91ccae5],ebx
  41e1d5:	pop    esp
  41e1d6:	jno    0x41e218
  41e1d8:	sbb    DWORD PTR [edx],edi
  41e1da:	int    0x87
  41e1dc:	stc    
  41e1dd:	adc    eax,0x45453fa8
  41e1e2:	ror    esp,0x7f
  41e1e5:	adc    edi,DWORD PTR [edx-0x34a8c4ad]
  41e1eb:	aas    
  41e1ec:	inc    ecx
  41e1ed:	cli    
  41e1ee:	mov    ds:0x1f83c0f2,eax
  41e1f3:	ja     0x41e20c
  41e1f5:	rol    DWORD PTR [edx+0x29],0x48
  41e1f9:	sub    ch,BYTE PTR [ebx+eiz*4]
  41e1fc:	add    al,0xd7
  41e1fe:	xchg   DWORD PTR [edi],ebx
  41e200:	ficomp DWORD PTR [ebp-0x6cfbf203]
  41e206:	xchg   ebp,eax
  41e207:	pop    ss
  41e208:	and    eax,0x41fe2bf1
  41e20d:	mov    cl,0x7f
  41e20f:	dec    ebp
  41e210:	shl    DWORD PTR [edx+0x600767f4],0xbb
  41e217:	xchg   ebx,eax
  41e218:	sub    DWORD PTR [ebp+ebp*2+0x1d],edx
  41e21c:	pop    ebx
  41e21d:	out    0x66,al
  41e21f:	shl    ecx,1
  41e221:	jle    0x41e214
  41e223:	pop    edx
  41e224:	sub    ch,dl
  41e226:	call   0xd229:0x34325e4b
  41e22d:	sbb    ch,al
  41e22f:	aas    
  41e230:	test   BYTE PTR [edx-0x280f14aa],cl
  41e236:	enter  0x6db5,0x79
  41e23a:	mov    eax,ds:0x7c1615c9
  41e23f:	adc    al,0xb
  41e241:	out    dx,eax
  41e242:	shl    DWORD PTR [eax+0x4a],cl
  41e245:	(bad)
  41e248:	ins    BYTE PTR es:[edi],dx
  41e249:	and    esp,DWORD PTR [eax+0x65]
  41e24c:	push   es
  41e24d:	mov    dl,0x18
  41e24f:	pop    esp
  41e250:	ret    0xbd14
  41e253:	fisttp QWORD PTR ds:0x46476d83
  41e259:	test   eax,0x20ab62ac
  41e25e:	std    
  41e25f:	loop   0x41e248
  41e261:	or     BYTE PTR [ebp+0x6d97e896],bh
  41e267:	popa   
  41e268:	div    DWORD PTR [esi]
  41e26a:	lock imul ecx,DWORD PTR es:[ebx+0x2e],0xd8ec14da
  41e273:	out    dx,al
  41e274:	leave  
  41e275:	sti    
  41e276:	adc    cl,dh
  41e278:	inc    edx
  41e279:	add    esi,esi
  41e27b:	cmp    ah,ch
  41e27d:	dec    eax
  41e27e:	push   ss
  41e27f:	in     al,dx
  41e280:	dec    esi
  41e281:	jmp    0x5aa7:0xc7d6f9fb
  41e288:	ja     0x41e20c
  41e28a:	test   al,0x66
  41e28c:	out    0x1f,eax
  41e28e:	sub    esp,DWORD PTR [ebx+0x4bbd9363]
  41e294:	test   bh,dl
  41e296:	push   ecx
  41e297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e298:	test   BYTE PTR [edx],ah
  41e29a:	loop   0x41e27c
  41e29c:	hlt    
  41e29d:	add    DWORD PTR ds:0xf02b1cf2,0xb3e145a
  41e2a7:	pop    ecx
  41e2a8:	scas   al,BYTE PTR es:[edi]
  41e2a9:	jne    0x41e2dd
  41e2ab:	adc    ah,BYTE PTR [ebx+0x6baf976f]
  41e2b1:	mov    ds:0x6e4c9826,eax
  41e2b6:	jno    0x41e32c
  41e2b8:	test   al,bl
  41e2ba:	data16 ins BYTE PTR es:[edi],dx
  41e2bc:	aam    0xc3
  41e2be:	mov    ?,WORD PTR [edi]
  41e2c0:	pop    ss
  41e2c1:	cmp    esi,DWORD PTR [edx-0x6f]
  41e2c4:	push   ds
  41e2c5:	or     eax,eax
  41e2c7:	sub    al,0xb1
  41e2c9:	jp     0x41e31c
  41e2cb:	and    dh,BYTE PTR [ecx+0x48]
  41e2ce:	out    dx,eax
  41e2cf:	jg     0x41e2c1
  41e2d1:	stos   BYTE PTR es:[edi],al
  41e2d2:	and    dh,ch
  41e2d4:	cld    
  41e2d5:	jb     0x41e334
  41e2d7:	cmp    edi,esp
  41e2d9:	cli    
  41e2da:	sub    dl,bl
  41e2dc:	and    eax,0xbebd32d1
  41e2e1:	sbb    eax,0x41bfb10b
  41e2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e7:	xor    eax,0x98063018
  41e2ec:	sbb    eax,0x8a17fac2
  41e2f1:	adc    DWORD PTR [edx],eax
  41e2f3:	ror    bl,0xbd
  41e2f6:	rcl    DWORD PTR [eax-0x5],0x9f
  41e2fa:	pop    eax
  41e2fb:	lds    edx,FWORD PTR [ebp-0x58]
  41e2fe:	and    ch,BYTE PTR [edx]
  41e300:	arpl   WORD PTR [esi],di
  41e302:	pop    esp
  41e303:	sar    DWORD PTR [eax+0xfddc414],cl
  41e309:	xchg   edx,eax
  41e30a:	xchg   ebx,eax
  41e30b:	cli    
  41e30c:	mov    ecx,0x7fd0ddfc
  41e311:	xor    BYTE PTR ds:0x45246a53,dl
  41e317:	call   0x2e78:0x9afbe00e
  41e31e:	gs lock (bad) 
  41e321:	iret   
  41e322:	shl    DWORD PTR [ecx],cl
  41e324:	sbb    al,BYTE PTR [edi-0x54a1ad6a]
  41e32a:	cmp    al,0x94
  41e32c:	std    
  41e32d:	rcr    ch,1
  41e32f:	sub    esi,DWORD PTR [edi]
  41e331:	lahf   
  41e332:	out    0x54,al
  41e334:	pop    ds
  41e335:	cs pop ebx
  41e337:	mov    cl,0x98
  41e339:	sbb    BYTE PTR [eax+0x12],bl
  41e33c:	sti    
  41e33d:	inc    ebp
  41e33e:	fstp   TBYTE PTR [edx-0x5b]
  41e341:	jo     0x41e3a9
  41e343:	mov    ebx,0xbec29f92
  41e348:	add    al,0xe5
  41e34a:	mov    dh,0x39
  41e34c:	ds in  al,0xa4
  41e34f:	pop    ecx
  41e350:	rcl    DWORD PTR [ecx+0x41],1
  41e353:	pop    ss
  41e354:	ret    
  41e355:	std    
  41e356:	push   0xffffffd6
  41e358:	sub    al,BYTE PTR [edi+0x5862ce7e]
  41e35e:	or     BYTE PTR [edi-0x37],ah
  41e361:	test   al,0xc
  41e363:	mov    cl,0x7f
  41e365:	test   DWORD PTR [ebp+edi*8-0x7],0x75707177
  41e36d:	(bad)  
  41e36e:	loop   0x41e378
  41e370:	jmp    0xda86:0x6a52bbe7
  41e377:	mov    ah,0x6f
  41e379:	mov    ecx,0x3066ce60
  41e37e:	sbb    BYTE PTR [ebx],dh
  41e380:	pop    ss
  41e381:	sbb    ecx,ebx
  41e383:	sbb    eax,0x531ef299
  41e388:	lods   al,BYTE PTR ds:[esi]
  41e389:	in     al,0xa9
  41e38b:	xchg   BYTE PTR [edi+0x17],bl
  41e38e:	loope  0x41e3e5
  41e390:	stos   BYTE PTR es:[edi],al
  41e391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e392:	sahf   
  41e393:	sub    eax,0x11bde09d
  41e398:	or     al,0x34
  41e39a:	test   BYTE PTR [eax],al
  41e39c:	mov    BYTE PTR [ebx],dh
  41e39e:	jmp    DWORD PTR [esi+edx*4]
  41e3a1:	mov    ds:0x638bd47e,al
  41e3a6:	cld    
  41e3a7:	dec    eax
  41e3a8:	repnz push edi
  41e3aa:	pop    esp
  41e3ab:	(bad)  
  41e3ac:	adc    BYTE PTR [eax+0x3403281d],dh
  41e3b2:	push   0xc0e9e583
  41e3b7:	push   0xfffffff8
  41e3b9:	mov    es,WORD PTR [ebx+0x26274688]
  41e3bf:	iret   
  41e3c0:	int3   
  41e3c1:	mov    al,0x5a
  41e3c3:	sub    BYTE PTR [ecx-0x45d0b816],dh
  41e3c9:	push   cs
  41e3ca:	popa   
  41e3cb:	ds xchg edi,eax
  41e3cd:	jno    0x41e448
  41e3cf:	hlt    
  41e3d0:	in     al,0x3f
  41e3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d3:	xor    al,0xc9
  41e3d5:	sbb    bh,cl
  41e3d7:	mov    edi,0x5ddf1a83
  41e3dc:	dec    edx
  41e3dd:	xchg   BYTE PTR es:[edi+ebx*8],ah
  41e3e1:	push   ds
  41e3e2:	loop   0x41e391
  41e3e4:	aam    0x2a
  41e3e6:	retf   
  41e3e7:	xlat   BYTE PTR ds:[ebx]
  41e3e8:	fsub   QWORD PTR [ebx]
  41e3ea:	fld    DWORD PTR [eax+0x3d]
  41e3ed:	das    
  41e3ee:	in     al,0x7d
  41e3f0:	mov    ds:0x7350bb45,al
  41e3f5:	pop    eax
  41e3f6:	jge    0x41e3a3
  41e3f8:	into   
  41e3f9:	jmp    0x10b1d394
  41e3fe:	div    esp
  41e400:	sar    bh,0x9f
  41e403:	adc    al,0x94
  41e405:	loope  0x41e40f
  41e407:	ins    DWORD PTR es:[edi],dx
  41e408:	ss dec edx
  41e40a:	aas    
  41e40b:	add    ebp,edi
  41e40d:	adc    bl,bh
  41e40f:	sbb    BYTE PTR [ecx+0x38],bh
  41e412:	mov    ah,0x5f
  41e414:	lds    ebx,FWORD PTR [eax+0x4d]
  41e417:	arpl   si,cx
  41e419:	xchg   ebx,eax
  41e41a:	jge    0x41e3fb
  41e41c:	clc    
  41e41d:	dec    edx
  41e41e:	cwde   
  41e41f:	(bad)  
  41e420:	jbe    0x41e3e4
  41e422:	xor    DWORD PTR [ecx+esi*8+0x25d6111f],0xffffff8b
  41e42a:	xor    eax,0xcabc6331
  41e42f:	cmp    bl,bl
  41e431:	jecxz  0x41e417
  41e433:	scas   eax,DWORD PTR es:[edi]
  41e434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e435:	push   ebp
  41e436:	pop    ds
  41e437:	mov    cl,0x85
  41e439:	dec    esi
  41e43a:	int    0xcc
  41e43c:	jnp    0x41e415
  41e43e:	dec    ecx
  41e43f:	push   0x49de3dc1
  41e444:	fst    QWORD PTR [esi-0x47]
  41e447:	pop    esi
  41e448:	dec    esi
  41e449:	ror    DWORD PTR [eax-0x8],1
  41e44c:	add    esi,DWORD PTR [eax-0x1b]
  41e44f:	lahf   
  41e450:	dec    ecx
  41e451:	outs   dx,DWORD PTR ds:[esi]
  41e452:	popf   
  41e453:	cli    
  41e454:	dec    esi
  41e455:	dec    eax
  41e456:	je     0x41e45e
  41e458:	mov    al,0x2c
  41e45a:	test   al,0x54
  41e45c:	add    al,0xee
  41e45e:	push   0xc7270254
  41e463:	lock push ebp
  41e465:	jp     0x41e3ea
  41e467:	sbb    al,BYTE PTR [esi+0x6b8daf05]
  41e46d:	xor    dh,0x9f
  41e470:	jmp    0x212c:0x53031b5e
  41e477:	(bad)  
  41e479:	jbe    0x41e4cb
  41e47b:	ins    BYTE PTR es:[edi],dx
  41e47c:	xchg   BYTE PTR [esi],ah
  41e47e:	sbb    BYTE PTR [edi],bh
  41e480:	inc    ecx
  41e481:	push   es
  41e482:	jno    0x41e4d9
  41e484:	jb     0x41e456
  41e486:	lds    esp,FWORD PTR [esi-0x752e3923]
  41e48c:	(bad)  
  41e48d:	xor    al,0x3e
  41e48f:	xchg   esi,eax
  41e490:	inc    ebx
  41e491:	shl    ah,0xe0
  41e494:	fiadd  DWORD PTR [ebx+0x5b]
  41e497:	push   ebp
  41e498:	cmp    edi,DWORD PTR [edi-0x3bd1b96d]
  41e49e:	or     cl,BYTE PTR ds:0x62598654
  41e4a4:	mov    esi,0xb22f1a9c
  41e4a9:	mov    cl,0xaa
  41e4ab:	jecxz  0x41e485
  41e4ad:	out    dx,eax
  41e4ae:	daa    
  41e4af:	xchg   esp,eax
  41e4b0:	jb     0x41e521
  41e4b2:	and    ah,BYTE PTR [ebx+edi*2+0x5db2fde8]
  41e4b9:	adc    al,bh
  41e4bb:	sti    
  41e4bc:	sub    ch,BYTE PTR [ebx]
  41e4be:	xchg   BYTE PTR [edi+0x22c53910],cl
  41e4c4:	test   eax,0x77a8b6c6
  41e4c9:	add    dh,bl
  41e4cb:	(bad)
  41e4ce:	mov    eax,ds:0xd3632ba7
  41e4d3:	push   ds
  41e4d4:	call   0xe60953f3
  41e4d9:	bound  edx,QWORD PTR [ecx]
  41e4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4dc:	jno    0x41e4bf
  41e4de:	dec    edi
  41e4df:	push   eax
  41e4e0:	jmp    0x8cc9:0xc87e5f39
  41e4e7:	jecxz  0x41e4ea
  41e4e9:	xchg   edi,eax
  41e4ea:	mov    ch,0x1f
  41e4ec:	mov    ah,0x98
  41e4ee:	jge    0x41e562
  41e4f0:	pop    esi
  41e4f1:	inc    eax
  41e4f2:	push   ds
  41e4f3:	mov    al,ds:0x340f710c
  41e4f8:	test   eax,0x7b4fcfb6
  41e4fd:	jmp    0x76faad59
  41e502:	push   ebx
  41e503:	adc    dl,bh
  41e505:	dec    ecx
  41e506:	and    edi,ecx
  41e508:	sbb    edi,DWORD PTR [esi+ebp*2-0x2dfb9f82]
  41e50f:	jnp    0x41e4b5
  41e511:	mov    ah,0xd3
  41e513:	out    dx,al
  41e514:	sti    
  41e515:	mov    ecx,0xa31e4398
  41e51a:	pop    DWORD PTR ds:0x81e8215f
  41e520:	test   eax,0xf6a0448a
  41e525:	push   ds
  41e526:	imul   al
  41e528:	or     esi,DWORD PTR [ecx+0x4e]
  41e52b:	xchg   esi,eax
  41e52c:	mov    edi,0x8ab9e3c8
  41e531:	adc    eax,0xcd742d67
  41e536:	or     BYTE PTR ds:0x4975dada,cl
  41e53c:	(bad)  
  41e53d:	lds    esi,FWORD PTR [edx+0x4c]
  41e540:	xchg   ebx,eax
  41e541:	(bad)  [edi+0x5cbb30e5]
  41e547:	mov    al,ds:0x4318fe20
  41e54c:	fdiv   QWORD PTR [edi+0x8543d87]
  41e552:	in     eax,dx
  41e553:	dec    esi
  41e554:	xor    BYTE PTR [edx],bh
  41e556:	xor    eax,DWORD PTR [esi+0x71399c97]
  41e55c:	mov    edi,0x6b1d7153
  41e561:	xchg   esp,eax
  41e562:	enter  0xe849,0x72
  41e566:	fstp   DWORD PTR [ebp-0xc486632]
  41e56c:	(bad)  
  41e56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e56e:	ror    BYTE PTR [eax],1
  41e570:	(bad)  
  41e571:	call   edi
  41e573:	jmp    0x41e5c8
  41e575:	popf   
  41e576:	fistp  DWORD PTR [esi]
  41e578:	adc    edx,DWORD PTR cs:[esi+ebx*8+0x58b1bd3b]
  41e580:	jo     0x41e601
  41e582:	scas   al,BYTE PTR es:[edi]
  41e583:	cmp    BYTE PTR [ebp-0x60],cl
  41e586:	test   al,0x3
  41e588:	dec    edx
  41e589:	add    cl,bl
  41e58b:	push   ebx
  41e58c:	adc    dl,BYTE PTR [esi]
  41e58e:	mov    ebx,0x59265814
  41e593:	lods   eax,DWORD PTR ds:[esi]
  41e594:	push   cs
  41e595:	ds xchg esi,eax
  41e597:	into   
  41e598:	out    0x85,al
  41e59a:	pop    eax
  41e59b:	test   eax,0x21052e15
  41e5a0:	imul   DWORD PTR [eax-0x1f3bc834]
  41e5a6:	lea    ecx,[eax]
  41e5a8:	push   esi
  41e5a9:	stos   DWORD PTR es:[edi],eax
  41e5aa:	fiadd  DWORD PTR [edi-0x7334413f]
  41e5b0:	add    bh,0xa8
  41e5b3:	sar    DWORD PTR [edi],1
  41e5b5:	ficom  WORD PTR [eax]
  41e5b7:	push   edx
  41e5b8:	repz cmp cl,BYTE PTR [edx-0x86d03e9]
  41e5bf:	shr    BYTE PTR [ebx],cl
  41e5c1:	or     DWORD PTR [esi],esp
  41e5c3:	fbld   TBYTE PTR [edi+0x33]
  41e5c6:	pusha  
  41e5c7:	jmp    0xd665286b
  41e5cc:	xchg   ecx,eax
  41e5cd:	xchg   edx,eax
  41e5ce:	add    bh,BYTE PTR [edi+0x5bc10136]
  41e5d4:	jle    0x41e570
  41e5d6:	fadd   DWORD PTR [edi+0x6f100a43]
  41e5dc:	aam    0x8f
  41e5de:	cmp    DWORD PTR [edx-0x1e],esi
  41e5e1:	mov    ah,0x9
  41e5e3:	xchg   ecx,eax
  41e5e4:	stc    
  41e5e5:	push   edi
  41e5e6:	fld    DWORD PTR [ebx-0x79]
  41e5e9:	addr16 cmp edi,ebx
  41e5ec:	in     eax,dx
  41e5ed:	cmp    ah,dh
  41e5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f0:	adc    cl,bh
  41e5f2:	(bad)  
  41e5f3:	xlat   BYTE PTR ds:[ebx]
  41e5f4:	cdq    
  41e5f5:	jge    0x41e597
  41e5f7:	popa   
  41e5f8:	imul   DWORD PTR [eax*8-0x17cff35d]
  41e5ff:	adc    ebx,DWORD PTR [edi-0x5294d28]
  41e605:	sbb    ecx,esi
  41e607:	loop   0x41e5b0
  41e609:	rcr    BYTE PTR [eax],1
  41e60b:	xchg   ebp,eax
  41e60c:	dec    DWORD PTR [edi-0x48]
  41e60f:	popf   
  41e610:	pop    es
  41e611:	in     al,0x23
  41e613:	push   ebx
  41e614:	aam    0xa9
  41e616:	inc    edx
  41e617:	in     al,0x2b
  41e619:	fdiv   DWORD PTR [ebx+0x4afe5d5e]
  41e61f:	scas   al,BYTE PTR es:[edi]
  41e620:	mov    ah,0xdd
  41e622:	scas   eax,DWORD PTR es:[edi]
  41e623:	mov    ebp,0x5e5697ef
  41e628:	rcr    DWORD PTR [ecx],cl
  41e62a:	jae    0x3df4fa1b
  41e630:	mov    esp,0x5d551b8a
  41e635:	fsub   QWORD PTR [edi+edi*2+0x454b4406]
  41e63c:	jecxz  0x41e630
  41e63e:	leave  
  41e63f:	xchg   ecx,eax
  41e640:	mov    bh,0x1a
  41e642:	aam    0xa3
  41e644:	and    edx,esp
  41e646:	aad    0x7e
  41e648:	lea    edi,[edi+0x6d]
  41e64b:	push   esi
  41e64c:	mov    cl,BYTE PTR [eax+0x72a0e777]
  41e652:	aaa    
  41e653:	adc    eax,0x50fc54ca
  41e658:	rol    DWORD PTR [edx-0x38c3911d],cl
  41e65e:	popa   
  41e65f:	bnd jmp 0x41e6db
  41e662:	add    edx,0x59d7a52e
  41e668:	mov    esp,0x93a07b23
  41e66d:	fwait
  41e66e:	xchg   esp,eax
  41e66f:	mov    ch,bl
  41e671:	push   edi
  41e672:	jg     0x41e6e8
  41e674:	or     al,bl
  41e676:	or     al,0x2c
  41e678:	in     al,dx
  41e679:	leave  
  41e67a:	mov    bl,0x64
  41e67c:	cld    
  41e67d:	das    
  41e67e:	test   al,0xc0
  41e680:	push   edi
  41e681:	lds    ebx,FWORD PTR [ecx+0x368a76]
  41e687:	push   ecx
  41e688:	jge    0x41e6fc
  41e68a:	or     cl,dl
  41e68c:	xchg   esi,eax
  41e68d:	mov    edx,0x9ee604fe
  41e692:	push   ds
  41e693:	add    bh,BYTE PTR [eax]
  41e695:	mov    ebp,DWORD PTR [edi-0x32]
  41e698:	aas    
  41e699:	pop    ds
  41e69a:	retf   
  41e69b:	sub    eax,0xd7668680
  41e6a0:	sub    esi,DWORD PTR [esi-0x73d06756]
  41e6a6:	sub    BYTE PTR es:[edx+0x46],bl
  41e6aa:	out    0x6a,al
  41e6ac:	out    0xdd,eax
  41e6ae:	dec    edi
  41e6af:	lods   eax,DWORD PTR ds:[esi]
  41e6b0:	sbb    cl,BYTE PTR [eax+0x51e78ef9]
  41e6b6:	mov    edx,0x2215fe65
  41e6bb:	xchg   ebp,eax
  41e6bc:	bound  edx,QWORD PTR [ecx+eax*1]
  41e6bf:	inc    edx
  41e6c0:	lods   al,BYTE PTR ds:[esi]
  41e6c1:	adc    eax,0x24659e63
  41e6c6:	ror    ebx,1
  41e6c8:	push   esi
  41e6c9:	div    BYTE PTR [ecx]
  41e6cb:	stos   BYTE PTR es:[edi],al
  41e6cc:	pop    esi
  41e6cd:	fimul  WORD PTR es:[ebx]
  41e6d0:	or     ah,al
  41e6d2:	and    esp,DWORD PTR [ecx]
  41e6d4:	je     0x41e6d1
  41e6d6:	js     0x41e697
  41e6d8:	sub    al,BYTE PTR [ebx-0x172d08cb]
  41e6de:	loop   0x41e663
  41e6e0:	cli    
  41e6e1:	stc    
  41e6e2:	int3   
  41e6e3:	adc    BYTE PTR [edi-0xf],bh
  41e6e6:	ret    0xccca
  41e6e9:	sub    DWORD PTR [ebx+edx*8+0x2d],eax
  41e6ed:	mov    bh,0x6e
  41e6ef:	ins    DWORD PTR es:[edi],dx
  41e6f0:	sub    DWORD PTR [eax-0x7c4287d8],ecx
  41e6f6:	dec    ebp
  41e6f7:	sbb    edx,ecx
  41e6f9:	and    esi,DWORD PTR cs:[edi-0x2f]
  41e6fd:	shl    BYTE PTR [ecx+0x1fc66b00],0xbc
  41e704:	jnp    0x41e75b
  41e706:	je     0x41e6c6
  41e708:	jle    0x41e699
  41e70a:	xchg   BYTE PTR [edx+0x21],al
  41e70d:	lods   eax,DWORD PTR ds:[esi]
  41e70e:	aam    0x3e
  41e710:	out    0x39,eax
  41e712:	dec    esi
  41e713:	jns    0x41e77f
  41e715:	(bad)  
  41e716:	sbb    DWORD PTR [eax+ebp*1+0x7a8fba60],ebx
  41e71d:	mov    ebx,0xf9b81f0c
  41e722:	cmc    
  41e723:	test   al,0xf7
  41e725:	add    BYTE PTR [esi-0x2a2cb70d],dh
  41e72b:	jmp    0x41e6e7
  41e72d:	daa    
  41e72e:	aas    
  41e72f:	or     DWORD PTR [ecx-0x6e],ecx
  41e732:	inc    ecx
  41e733:	rcl    ebp,cl
  41e735:	in     al,dx
  41e736:	add    dl,BYTE PTR [eax+0x3a]
  41e739:	mov    eax,0xfcb460cb
  41e73e:	in     al,0x78
  41e740:	push   esi
  41e741:	push   0xffffff8c
  41e743:	ins    BYTE PTR es:[edi],dx
  41e744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e745:	mov    ds:0x138fba2d,al
  41e74a:	xor    BYTE PTR [esi+ebx*8+0x78],cl
  41e74e:	xchg   ecx,eax
  41e74f:	test   DWORD PTR [ecx-0x75],0x96404694
  41e756:	repz dec esi
  41e758:	push   ss
  41e759:	inc    esi
  41e75a:	lds    ebx,FWORD PTR [edx+0x6c]
  41e75d:	les    ecx,FWORD PTR [edx]
  41e75f:	or     ebp,DWORD PTR [eax+0x79]
  41e762:	mov    dh,0xef
  41e764:	or     DWORD PTR [ebx],esp
  41e766:	push   DWORD PTR [edi]
  41e768:	pusha  
  41e769:	pushf  
  41e76a:	add    ebp,DWORD PTR [eax-0x45]
  41e76d:	sti    
  41e76e:	or     esi,DWORD PTR [eax-0x2c80c52a]
  41e774:	sbb    BYTE PTR [edx-0x37],0x7d
  41e778:	xor    cl,ch
  41e77a:	push   ebp
  41e77b:	lock sub DWORD PTR [eax],esp
  41e77e:	inc    edi
  41e77f:	pop    es
  41e780:	call   0xbb2f4026
  41e785:	add    ecx,DWORD PTR [esi+0x12]
  41e788:	in     eax,dx
  41e789:	lahf   
  41e78a:	pop    ecx
  41e78b:	cmp    BYTE PTR [ecx-0x63],dh
  41e78e:	push   ecx
  41e78f:	push   ss
  41e790:	xor    al,0xb6
  41e792:	adc    eax,0xbed13598
  41e797:	sbb    eax,0x37d7bede
  41e79c:	ds (bad) 
  41e79e:	sub    ch,BYTE PTR [ecx]
  41e7a0:	and    al,0x4d
  41e7a2:	mov    esi,0xa20eb993
  41e7a7:	cmp    ch,BYTE PTR [esi+ebp*8-0xd268dcf]
  41e7ae:	push   esi
  41e7af:	imul   ecx,ebp,0xbc18d03b
  41e7b5:	data16 icebp 
  41e7b7:	jnp    0x41e7f6
  41e7b9:	ds call 0x7251:0x561565df
  41e7c1:	jo     0x41e79e
  41e7c3:	add    DWORD PTR [eax-0x6b],edx
  41e7c6:	jge    0x41e81e
  41e7c8:	fs xchg ecx,eax
  41e7ca:	push   0xffffff90
  41e7cc:	dec    ebp
  41e7cd:	pop    es
  41e7ce:	cmp    dh,BYTE PTR [ecx]
  41e7d0:	mov    ah,0xbf
  41e7d2:	xchg   edi,eax
  41e7d3:	sbb    al,0x37
  41e7d5:	xchg   edx,eax
  41e7d6:	xor    DWORD PTR [esi+eiz*8-0xbe9c2f4],edi
  41e7dd:	mov    esp,0xc6b6c57d
  41e7e2:	ja     0x41e838
  41e7e4:	out    0xb2,eax
  41e7e6:	push   ebp
  41e7e7:	push   0xfffffffa
  41e7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ea:	pop    edi
  41e7eb:	cs stos DWORD PTR es:[edi],eax
  41e7ed:	cmc    
  41e7ee:	stos   BYTE PTR es:[edi],al
  41e7ef:	aad    0x12
  41e7f1:	and    esp,DWORD PTR ds:0x8f5279fb
  41e7f7:	shl    DWORD PTR [ecx+0x7f4c6e36],1
  41e7fd:	dec    esp
  41e7fe:	es xor al,0xcb
  41e801:	sub    ah,dl
  41e803:	inc    ebx
  41e804:	dec    ecx
  41e805:	lahf   
  41e806:	cdq    
  41e807:	mov    ecx,DWORD PTR [ebx-0x776ca725]
  41e80d:	dec    ebx
  41e80e:	jns    0x41e7fc
  41e810:	icebp  
  41e811:	sahf   
  41e812:	inc    esi
  41e813:	mov    ebx,esp
  41e815:	jno    0x41e7aa
  41e817:	xchg   ebx,eax
  41e818:	push   cs
  41e819:	mov    edx,0x4dd15c92
  41e81e:	mov    dh,0x81
  41e820:	pop    edx
  41e821:	cmp    BYTE PTR [esp+edi*2-0x6e97fa77],bl
  41e828:	mov    ecx,0xcba42892
  41e82d:	mov    ch,0x92
  41e82f:	sbb    edi,DWORD PTR [esi]
  41e831:	mov    BYTE PTR [ebx],bh
  41e833:	jb     0x41e7b6
  41e835:	(bad)  
  41e836:	(bad)  
  41e837:	push   ebx
  41e838:	sub    BYTE PTR [ebx+0x79],ah
  41e83b:	(bad)  
  41e83c:	(bad)  
  41e83d:	mov    ch,0x3f
  41e83f:	fcomp  DWORD PTR [ebp+0x49]
  41e842:	sub    BYTE PTR [ebx+0x14],ch
  41e845:	push   0x268c4aee
  41e84a:	pop    esi
  41e84b:	mov    edi,0xa8b7020a
  41e850:	je     0x41e881
  41e852:	inc    ecx
  41e853:	add    eax,0x91aa5d7a
  41e858:	pusha  
  41e859:	cld    
  41e85a:	mov    edi,esp
  41e85c:	mov    al,ds:0x8fd0e49f
  41e861:	(bad)  
  41e862:	xchg   esi,eax
  41e863:	test   eax,0x899bcd3b
  41e868:	pop    edx
  41e869:	dec    ebp
  41e86a:	aad    0xab
  41e86c:	xchg   ecx,eax
  41e86d:	pop    ebp
  41e86e:	xor    al,0x3f
  41e870:	call   0x2d6bb785
  41e875:	mov    ecx,0x7b852190
  41e87a:	push   ss
  41e87b:	sbb    bl,BYTE PTR [ecx]
  41e87d:	out    dx,al
  41e87e:	cli    
  41e87f:	and    al,0x10
  41e881:	js     0x41e804
  41e883:	or     eax,0x10e29e66
  41e888:	repnz retf 0xaf79
  41e88c:	(bad)  
  41e88d:	sbb    ebp,eax
  41e88f:	adc    al,0xd3
  41e891:	jl     0x41e8d6
  41e893:	cmp    bh,BYTE PTR [ebx]
  41e895:	sbb    esi,0x90d6a960
  41e89b:	xor    BYTE PTR ds:0xf43b96eb,dl
  41e8a1:	hlt    
  41e8a2:	clc    
  41e8a3:	jg     0x41e890
  41e8a5:	cwde   
  41e8a6:	mov    ah,0x5
  41e8a8:	mov    al,0x4f
  41e8aa:	lods   eax,DWORD PTR ds:[esi]
  41e8ab:	retf   
  41e8ac:	(bad)  
  41e8ad:	mov    al,ds:0x3de44e74
  41e8b2:	into   
  41e8b3:	mov    esp,0xf0f2e09a
  41e8b8:	stos   DWORD PTR es:[edi],eax
  41e8b9:	dec    esi
  41e8ba:	inc    esp
  41e8bb:	pop    edx
  41e8bc:	mov    ch,0x72
  41e8be:	push   es
  41e8bf:	shl    DWORD PTR [edi-0x68517f03],1
  41e8c5:	imul   edx,DWORD PTR [edx-0x39],0x332ca3ef
  41e8cc:	loop   0x41e8a3
  41e8ce:	jo     0x41e886
  41e8d0:	mov    ebp,0x6f1e965b
  41e8d5:	stos   BYTE PTR es:[edi],al
  41e8d6:	xor    esp,ebx
  41e8d8:	arpl   WORD PTR [ebp+0x76],bp
  41e8db:	aam    0xf
  41e8dd:	call   0xb0beb631
  41e8e2:	xchg   BYTE PTR ds:0x958bf8a2,cl
  41e8e8:	lods   eax,DWORD PTR ds:[esi]
  41e8e9:	sahf   
  41e8ea:	add    ebp,DWORD PTR [ecx-0x17]
  41e8ed:	xchg   ebp,eax
  41e8ee:	lds    ebp,FWORD PTR [ecx]
  41e8f0:	dec    ebp
  41e8f1:	repnz daa 
  41e8f3:	inc    ebp
  41e8f4:	inc    ecx
  41e8f5:	fadd   QWORD PTR [eax+0x1a8b137]
  41e8fb:	mov    DWORD PTR [eax+0x68],ecx
  41e8fe:	popa   
  41e8ff:	clc    
  41e900:	pop    eax
  41e901:	mov    bl,0x80
  41e903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e904:	data16 ja 0x41e917
  41e907:	jo     0x41e8a8
  41e909:	dec    ebp
  41e90a:	adc    BYTE PTR [ebp-0x2a],0xc3
  41e90e:	jne    0x41e8e0
  41e910:	popa   
  41e911:	jmp    0x2a6f:0xb9b67b13
  41e918:	inc    edi
  41e919:	push   edi
  41e91a:	xchg   BYTE PTR [esi+0x24],bl
  41e91d:	shl    DWORD PTR ds:0x43377987,1
  41e923:	mov    eax,ds:0x7a6d2494
  41e928:	add    BYTE PTR [edi],0x26
  41e92b:	bound  edi,QWORD PTR [eax]
  41e92d:	inc    ecx
  41e92e:	sti    
  41e92f:	es push ebp
  41e931:	fisubr DWORD PTR [esi+0x3e]
  41e934:	pop    ds
  41e935:	dec    ebp
  41e936:	push   esi
  41e937:	push   ss
  41e938:	pop    eax
  41e939:	nop
  41e93a:	std    
  41e93b:	sub    DWORD PTR ds:0xfbdfa3eb,0x52988a08
  41e945:	js     0x41e947
  41e947:	push   cs
  41e948:	dec    edx
  41e949:	mov    ah,0xd6
  41e94b:	test   al,0xd2
  41e94e:	cld    
  41e94f:	dec    esp
  41e950:	or     edi,DWORD PTR [ecx-0x13]
  41e953:	retf   0x16b9
  41e956:	or     cl,dl
  41e958:	pop    edi
  41e959:	add    al,0xc6
  41e95b:	hlt    
  41e95c:	xor    eax,esp
  41e95e:	scas   al,BYTE PTR es:[edi]
  41e95f:	sub    BYTE PTR [ebx-0x1b08a30b],0xbd
  41e966:	bound  esp,QWORD PTR ds:[eax+0x5cf2dc59]
  41e96d:	ror    DWORD PTR [edi-0x4bb37420],cl
  41e973:	push   ss
  41e974:	stc    
  41e975:	sub    DWORD PTR [ebx-0x7075a6e6],esp
  41e97b:	lods   eax,DWORD PTR ds:[esi]
  41e97c:	stc    
  41e97d:	neg    bh
  41e97f:	imul   ebp,DWORD PTR [esi],0xffffffc1
  41e982:	retf   
  41e983:	das    
  41e984:	pop    edi
  41e985:	sbb    ebp,DWORD PTR [ebx+0x11bdef8f]
  41e98b:	dec    edx
  41e98c:	ja     0x41e9c1
  41e98e:	idiv   BYTE PTR [ebx-0x3c]
  41e991:	jle    0x41e9cf
  41e993:	cmp    cl,cl
  41e995:	cmp    bh,BYTE PTR ds:0xb3de61c6
  41e99b:	lods   eax,DWORD PTR ds:[esi]
  41e99c:	sub    DWORD PTR [ebx],ebp
  41e99e:	loope  0x41e993
  41e9a0:	jbe    0x41ea16
  41e9a2:	xor    DWORD PTR [eax-0x39],esi
  41e9a5:	mov    eax,0x4c97f9ee
  41e9aa:	mov    ebp,0xca80e8ad
  41e9af:	hlt    
  41e9b0:	int    0x1e
  41e9b2:	or     al,0x98
  41e9b4:	mov    ds:0x9f2852f9,eax
  41e9b9:	dec    edx
  41e9ba:	cmp    eax,0x19bae847
  41e9bf:	sbb    DWORD PTR [ecx-0x6a],esi
  41e9c2:	aas    
  41e9c3:	inc    esi
  41e9c4:	lds    esp,FWORD PTR [edx-0x6e]
  41e9c7:	rcr    BYTE PTR [esi-0x2478a552],1
  41e9cd:	out    0x13,al
  41e9cf:	(bad)  
  41e9d0:	stos   DWORD PTR es:[edi],eax
  41e9d1:	dec    ecx
  41e9d2:	xor    ebp,DWORD PTR [esi]
  41e9d4:	ins    DWORD PTR es:[edi],dx
  41e9d5:	xor    esi,DWORD PTR [ebx]
  41e9d7:	adc    eax,0x4b5685b4
  41e9dc:	mov    dh,0xbc
  41e9de:	fcmovnu st,st(6)
  41e9e0:	fsubr  DWORD PTR [ebp+0x65edbb59]
  41e9e6:	or     eax,DWORD PTR [edx-0x682e483c]
  41e9ec:	sub    cl,BYTE PTR [esp+ebp*8]
  41e9ef:	xchg   esp,eax
  41e9f0:	and    al,0x26
  41e9f2:	stos   DWORD PTR es:[edi],eax
  41e9f3:	push   ecx
  41e9f4:	stos   BYTE PTR es:[edi],al
  41e9f5:	popa   
  41e9f6:	stc    
  41e9f7:	aas    
  41e9f8:	rcr    edx,0xb3
  41e9fb:	std    
  41e9fc:	nop
  41e9fd:	arpl   dx,ax
  41e9ff:	jp     0x41e9ca
  41ea01:	cmp    ch,BYTE PTR [ebx+0x61]
  41ea04:	mov    ecx,0x31e43
  41ea09:	or     BYTE PTR [esp+ecx*2-0x51],al
  41ea0d:	ret    
  41ea0e:	sbb    eax,0x821e0c40
  41ea13:	or     ecx,esi
  41ea15:	push   ebp
  41ea16:	jmp    0xc6a8663f
  41ea1b:	xchg   ebx,eax
  41ea1c:	inc    ecx
  41ea1d:	lahf   
  41ea1e:	retf   
  41ea1f:	mov    ebp,0xddc0c891
  41ea24:	shr    BYTE PTR [edx-0x45],1
  41ea27:	sti    
  41ea28:	invd   
  41ea2a:	iret   
  41ea2b:	adc    DWORD PTR [edx+0x5e],edx
  41ea2e:	mov    esp,0x9bb29f83
  41ea33:	pavgb  mm4,QWORD PTR [ecx+ebp*8+0x3e95b97d]
  41ea3b:	in     al,dx
  41ea3c:	ficom  DWORD PTR [esi-0x15]
  41ea3f:	ret    0x5587
  41ea42:	sbb    DWORD PTR [ebx-0x31],esp
  41ea45:	pop    edx
  41ea46:	pusha  
  41ea47:	pop    ds
  41ea48:	pmaxub mm1,QWORD PTR [ebp-0x42]
  41ea4c:	call   0xbae7:0xee669499
  41ea53:	(bad)  
  41ea54:	out    dx,eax
  41ea55:	jmp    0xb2c9fcfe
  41ea5a:	inc    eax
  41ea5b:	jmp    0xdfe4:0xd903e8a1
  41ea62:	cmp    ecx,esi
  41ea64:	out    0xbf,eax
  41ea66:	xor    eax,0x84a32b96
  41ea6b:	push   0x6f
  41ea6d:	ins    DWORD PTR es:[edi],dx
  41ea6e:	imul   ecx,DWORD PTR [edx]
  41ea71:	sbb    al,0xc2
  41ea73:	inc    ebx
  41ea74:	inc    edi
  41ea75:	adc    DWORD PTR [ecx+0x13],ebp
  41ea78:	sub    al,0xe3
  41ea7a:	sbb    BYTE PTR [eax],dh
  41ea7c:	stos   BYTE PTR es:[edi],al
  41ea7d:	sub    edi,DWORD PTR [ecx]
  41ea7f:	dec    ecx
  41ea80:	and    al,0x6
  41ea82:	enter  0x5885,0xe6
  41ea86:	out    0x1,al
  41ea88:	cmp    al,0xd9
  41ea8a:	inc    edx
  41ea8b:	loop   0x41ea35
  41ea8d:	popf   
  41ea8e:	test   al,0x6d
  41ea90:	add    dl,cl
  41ea92:	out    0xbc,eax
  41ea94:	pop    esp
  41ea95:	das    
  41ea96:	jae    0x41ea5b
  41ea98:	jge    0x41eb18
  41ea9a:	mov    esp,DWORD PTR [ebx+0x19ca5bd]
  41eaa0:	and    eax,ecx
  41eaa2:	sub    eax,0x2982d7fd
  41eaa7:	add    bh,BYTE PTR [ebp-0x3ef173cc]
  41eaad:	mov    esp,DWORD PTR [eax+ebp*1+0x745ea6b2]
  41eab4:	xlat   BYTE PTR ds:[ebx]
  41eab5:	rol    BYTE PTR [edi],0x3a
  41eab8:	jp     0x41ea9e
  41eaba:	and    DWORD PTR [edx+0x4a],ecx
  41eabd:	add    ch,BYTE PTR [edx+eiz*2]
  41eac0:	ins    DWORD PTR es:[edi],dx
  41eac1:	clc    
  41eac2:	std    
  41eac3:	push   ss
  41eac4:	push   0x37fc12cf
  41eac9:	popa   
  41eaca:	mov    bl,0xf
  41eacc:	clc    
  41eacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eace:	add    al,0x66
  41ead0:	sub    ah,cl
  41ead2:	cmp    BYTE PTR [eax],cl
  41ead4:	xchg   edx,eax
  41ead5:	pop    edx
  41ead6:	rcr    DWORD PTR [edi],0xc5
  41ead9:	retf   0x65c4
  41eadc:	call   0xbf2e:0xe7bd4ef8
  41eae3:	push   ds
  41eae4:	div    BYTE PTR [ebp-0x5e6969d4]
  41eaea:	mov    ecx,DWORD PTR [edx+0x77030e3]
  41eaf0:	jmp    FWORD PTR [esi-0x7fe5cff8]
  41eaf6:	adc    BYTE PTR [esi-0x5490f7fe],ch
  41eafc:	loop   0x41eb5f
  41eafe:	nop
  41eaff:	lock add cl,bh
  41eb02:	pop    edi
  41eb03:	xor    ecx,DWORD PTR [eax-0x3c0a9f28]
  41eb09:	outs   dx,BYTE PTR ds:[esi]
  41eb0a:	dec    eax
  41eb0b:	lods   al,BYTE PTR ds:[esi]
  41eb0c:	push   esi
  41eb0d:	fwait
  41eb0e:	push   es
  41eb0f:	sub    edx,esi
  41eb11:	sub    dh,BYTE PTR [ecx+ebx*2+0x730ee7c6]
  41eb18:	int3   
  41eb19:	imul   ebp,edi,0xffffff88
  41eb1c:	stos   DWORD PTR es:[edi],eax
  41eb1d:	sbb    al,0xb8
  41eb1f:	and    ch,dl
  41eb21:	sbb    dl,BYTE PTR cs:[esi]
  41eb24:	jae    0x41eb33
  41eb26:	push   ebx
  41eb27:	or     dh,BYTE PTR [edi-0x74da5482]
  41eb2d:	dec    edx
  41eb2e:	mov    eax,ds:0x2b881f3a
  41eb33:	push   ss
  41eb34:	add    DWORD PTR [eax+0x1a76c4d7],ebx
  41eb3a:	inc    edx
  41eb3b:	stos   DWORD PTR es:[edi],eax
  41eb3c:	in     eax,dx
  41eb3d:	xchg   ecx,eax
  41eb3e:	sbb    eax,0xc30ccbc2
  41eb43:	outs   dx,BYTE PTR ds:[esi]
  41eb44:	dec    ebp
  41eb45:	adc    DWORD PTR [edx+0x1df329a0],esi
  41eb4b:	into   
  41eb4c:	popa   
  41eb4d:	lock (bad) 
  41eb50:	xor    eax,0x67bb4ceb
  41eb55:	mov    ebp,0xa639449
  41eb5a:	xor    BYTE PTR [edx+ebp*4-0x4283db45],0x92
  41eb62:	test   BYTE PTR [eax],0xf0
  41eb65:	pop    eax
  41eb66:	push   ebx
  41eb67:	call   0xdcf091b9
  41eb6c:	and    BYTE PTR [ecx],al
  41eb6e:	fs js  0x41eb00
  41eb71:	in     eax,dx
  41eb72:	cs xor eax,0x1dfaf2c6
  41eb78:	cmp    al,BYTE PTR [esi]
  41eb7a:	int    0x6
  41eb7c:	mov    ebp,0x2a918c52
  41eb81:	or     BYTE PTR [ebx],cl
  41eb83:	cmp    ecx,eax
  41eb85:	test   eax,0x878be3ee
  41eb8a:	push   cs
  41eb8b:	jecxz  0x41eb25
  41eb8d:	push   ebx
  41eb8e:	pop    ecx
  41eb8f:	sub    BYTE PTR [edi-0x33],ah
  41eb92:	lods   al,BYTE PTR ds:[esi]
  41eb93:	pop    eax
  41eb94:	mov    BYTE PTR [ebp+0x75],al
  41eb97:	stos   DWORD PTR es:[edi],eax
  41eb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb99:	scas   eax,DWORD PTR es:[di]
  41eb9b:	push   cs
  41eb9c:	adc    BYTE PTR [esi-0x39],bl
  41eb9f:	jmp    0x62cbcd7d
  41eba4:	out    0x71,eax
  41eba6:	das    
  41eba7:	or     DWORD PTR [esi+0x4bb6000f],ebx
  41ebad:	jne    0x41ebee
  41ebaf:	pop    ds
  41ebb0:	jmp    0xcfab:0x559bf8b3
  41ebb7:	out    0x73,eax
  41ebb9:	neg    DWORD PTR [ecx-0x69]
  41ebbc:	gs dec edi
  41ebbe:	imul   edi,DWORD PTR [edx],0xffffffc0
  41ebc1:	(bad)  
  41ebc2:	in     eax,0x77
  41ebc4:	movzx  edx,BYTE PTR [esi-0x1e]
  41ebc8:	mov    dl,0xc8
  41ebca:	lods   al,BYTE PTR ds:[esi]
  41ebcb:	retf   0x5727
  41ebce:	sbb    DWORD PTR [edx],esi
  41ebd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd1:	and    cl,BYTE PTR [ebp+0x606bd33e]
  41ebd7:	rcr    BYTE PTR [edi+ebp*4+0x1f05fb68],0x91
  41ebdf:	mov    edx,0xbea641c0
  41ebe4:	mov    bl,0xbd
  41ebe6:	dec    eax
  41ebe7:	enter  0x1255,0x66
  41ebeb:	inc    esi
  41ebec:	and    DWORD PTR [ebx-0x27a9bd1],ebp
  41ebf2:	pop    ds
  41ebf3:	sti    
  41ebf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf6:	dec    ebx
  41ebf7:	jne    0x41ec70
  41ebf9:	adc    DWORD PTR [edi+esi*8],edx
  41ebfc:	pop    esp
  41ebfd:	cmp    BYTE PTR [edi],bh
  41ebff:	pop    ss
  41ec00:	pop    ss
  41ec01:	sub    DWORD PTR [ebx-0x6b86cbd5],ecx
  41ec07:	mov    ah,0xb5
  41ec09:	or     al,0x19
  41ec0b:	test   al,0xf5
  41ec0d:	imul   edi,DWORD PTR [edi-0x1c8ab641],0x7eb7bed
  41ec17:	push   0xffffffe9
  41ec19:	mov    ah,0x61
  41ec1b:	mov    esp,0x8a31fea3
  41ec20:	xor    al,0xc6
  41ec22:	scas   eax,DWORD PTR es:[edi]
  41ec23:	out    0xdb,al
  41ec25:	mov    ds:0x4924124c,eax
  41ec2a:	push   es
  41ec2b:	add    eax,0xf6bf5d40
  41ec30:	cs mov ecx,0xce84774f
  41ec36:	adc    DWORD PTR [ebp+0x346406a6],eax
  41ec3c:	ins    BYTE PTR es:[edi],dx
  41ec3d:	cmp    BYTE PTR [edx],dh
  41ec3f:	retf   
  41ec40:	jnp    0x41ec25
  41ec42:	(bad)  
  41ec43:	aad    0x76
  41ec45:	mov    esp,0xc83da4b4
  41ec4a:	jecxz  0x41ec78
  41ec4c:	cmp    BYTE PTR [eax+0x29e2e70a],cl
  41ec52:	stc    
  41ec53:	retf   
  41ec54:	cld    
  41ec55:	and    BYTE PTR ds:0x62829580,bl
  41ec5b:	cdq    
  41ec5c:	xchg   ebp,eax
  41ec5d:	jo     0x41ecc0
  41ec5f:	fistp  DWORD PTR [ecx]
  41ec61:	std    
  41ec62:	push   ebx
  41ec63:	shl    BYTE PTR [edx],0x52
  41ec66:	xchg   ecx,eax
  41ec67:	ins    BYTE PTR es:[edi],dx
  41ec68:	inc    ebp
  41ec69:	gs mov dl,0xd
  41ec6c:	dec    ebx
  41ec6d:	div    bh
  41ec6f:	leave  
  41ec70:	test   DWORD PTR [ebx-0x42cd54f4],esp
  41ec76:	mov    al,ds:0xb0233d45
  41ec7b:	stc    
  41ec7c:	nop
  41ec7d:	adc    ch,ah
  41ec7f:	(bad)  
  41ec80:	repnz xor eax,DWORD PTR [edx]
  41ec83:	retf   0xe1bc
  41ec86:	sar    DWORD PTR ds:0xa3efddc,cl
  41ec8c:	mov    ds:0x5550a01b,al
  41ec91:	cmp    eax,0x3403175
  41ec96:	and    al,0x68
  41ec98:	leave  
  41ec99:	loop   0x41ec66
  41ec9b:	adc    dl,ch
  41ec9d:	inc    esi
  41ec9e:	adc    ch,cl
  41eca0:	push   eax
  41eca1:	dec    eax
  41eca2:	lods   al,BYTE PTR ds:[esi]
  41eca3:	lea    ebx,[eax-0x939d531]
  41eca9:	enter  0x12e3,0x2
  41ecad:	inc    ebp
  41ecae:	cli    
  41ecaf:	mov    ecx,0x43262f1f
  41ecb4:	ds dec ebx
  41ecb6:	xchg   DWORD PTR [edi-0x6d],edi
  41ecb9:	lds    ecx,FWORD PTR [ebx]
  41ecbb:	clc    
  41ecbc:	inc    ebp
  41ecbd:	sbb    BYTE PTR [ecx-0x62],0x64
  41ecc1:	cs push eax
  41ecc3:	and    al,0x30
  41ecc5:	push   esi
  41ecc6:	leave  
  41ecc7:	pop    edx
  41ecc8:	cmp    al,0x4e
  41ecca:	ficomp DWORD PTR [ecx]
  41eccc:	mov    al,ds:0xe8bdc22d
  41ecd1:	les    edx,FWORD PTR [eax-0x44]
  41ecd4:	jle    0x41ed4f
  41ecd6:	add    eax,0xcc754390
  41ecdb:	enter  0xe714,0xc6
  41ecdf:	gs mov ah,0x56
  41ece2:	in     al,0xd7
  41ece4:	fwait
  41ece5:	xor    al,0xd
  41ece7:	cs jno 0x41ed31
  41ecea:	rcr    esp,1
  41ecec:	pop    ebp
  41eced:	in     al,0xd6
  41ecef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecf0:	mov    ebx,0xb119c188
  41ecf5:	jg     0x41ed0f
  41ecf7:	lds    ecx,FWORD PTR [edi+0x588cbb40]
  41ecfd:	adc    al,0x54
  41ecff:	xchg   edx,eax
  41ed00:	aas    
  41ed01:	lahf   
  41ed02:	xor    eax,0x52239a3b
  41ed07:	jno    0x41ec97
  41ed09:	xchg   ebp,eax
  41ed0a:	sbb    al,0x5e
  41ed0c:	nop
  41ed0d:	adc    BYTE PTR [ebx+0x15d9db7e],ah
  41ed13:	adc    eax,0xdae91ba5
  41ed18:	into   
  41ed19:	fidivr WORD PTR [ebx+0x2d775864]
  41ed1f:	cmp    DWORD PTR [edi],edi
  41ed21:	push   0x38557e25
  41ed26:	cmp    eax,0x4bed6c8c
  41ed2b:	mov    dh,BYTE PTR [eax+eiz*8+0xc]
  41ed2f:	jnp    0x41ecd9
  41ed31:	xor    bl,al
  41ed33:	das    
  41ed34:	add    eax,0x60f88bbd
  41ed39:	popa   
  41ed3a:	sbb    BYTE PTR [ebx],ch
  41ed3c:	and    eax,0x4d957a56
  41ed41:	and    DWORD PTR [ecx-0x42],ecx
  41ed44:	pop    ss
  41ed45:	aam    0xe
  41ed47:	fs js  0x41ed61
  41ed4a:	inc    esp
  41ed4b:	mov    ah,0xe
  41ed4d:	and    cl,dh
  41ed4f:	cmp    eax,0x36f48f42
  41ed54:	int3   
  41ed55:	aaa    
  41ed56:	mov    al,0x7
  41ed58:	sub    eax,0xb0cf0993
  41ed5d:	xor    eax,0xd1cf1be6
  41ed62:	es xchg esp,ebp
  41ed65:	es cmp al,cl
  41ed68:	(bad)  
  41ed69:	je     0x41ed6c
  41ed6b:	sub    edi,DWORD PTR [edx+ebx*4+0x6c]
  41ed6f:	outs   dx,BYTE PTR ds:[esi]
  41ed70:	jge    0x41ed10
  41ed72:	xchg   al,dh
  41ed74:	or     DWORD PTR [ebp-0x5e879585],esi
  41ed7a:	mov    dh,0x78
  41ed7c:	cmp    eax,0x5c3d6576
  41ed81:	lds    esp,FWORD PTR [edi]
  41ed83:	inc    esi
  41ed84:	push   0xffffffc5
  41ed86:	ins    BYTE PTR es:[edi],dx
  41ed87:	(bad)  
  41ed88:	enter  0x1db6,0xab
  41ed8c:	sub    ch,ch
  41ed8e:	sti    
  41ed8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed90:	mov    esp,0x853a8c36
  41ed95:	xchg   esi,eax
  41ed96:	aad    0xd5
  41ed98:	lahf   
  41ed99:	or     eax,0x55df966b
  41ed9e:	xchg   ecx,eax
  41ed9f:	push   0x77
  41eda1:	lahf   
  41eda2:	popf   
  41eda3:	in     al,dx
  41eda4:	dec    eax
  41eda5:	push   edx
  41eda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eda7:	int3   
  41eda8:	test   al,0x78
  41edaa:	fnsave [ecx-0x7ed82988]
  41edb0:	fwait
  41edb1:	mov    eax,0xf4ecf6b9
  41edb6:	pop    ds
  41edb7:	adc    ch,dh
  41edb9:	inc    ecx
  41edba:	pop    edi
  41edbb:	cwde   
  41edbc:	cmp    cl,BYTE PTR [edx]
  41edbe:	push   edx
  41edbf:	push   edi
  41edc0:	jno    0x41edb9
  41edc2:	add    DWORD PTR [eax+0x6c],edx
  41edc5:	cld    
  41edc6:	mov    edi,0x6684e9e7
  41edcb:	jmp    0x84cf7508
  41edd0:	xchg   BYTE PTR [esi+ecx*2+0x33d0e589],bh
  41edd7:	xor    BYTE PTR [ebx],dl
  41edd9:	push   eax
  41edda:	jne    0x41ed9a
  41eddc:	xor    DWORD PTR [ebx],edi
  41edde:	jno    0x41ed60
  41ede0:	xchg   BYTE PTR [ecx-0x6e],ah
  41ede3:	xor    BYTE PTR [ebx],bh
  41ede5:	loopne 0x41eda7
  41ede7:	pusha  
  41ede8:	shr    DWORD PTR [ecx+0x5e],1
  41edeb:	pop    ds
  41edec:	hlt    
  41eded:	adc    BYTE PTR [ebx+0x6601e856],ah
  41edf3:	mov    al,ds:0x5fffdb64
  41edf8:	popa   
  41edf9:	mov    edi,esi
  41edfb:	mov    WORD PTR [edi+0x31efddb7],fs
  41ee01:	mov    BYTE PTR [eax],cl
  41ee03:	les    ebp,FWORD PTR [esi+0x5c]
  41ee06:	lods   al,BYTE PTR ds:[esi]
  41ee07:	fwait
  41ee08:	mov    esi,0xb2be1a00
  41ee0d:	imul   edx,DWORD PTR [ebx-0x7ed22550],0x59
  41ee14:	push   ds
  41ee15:	push   edi
  41ee16:	dec    esp
  41ee17:	in     al,dx
  41ee18:	fs out 0x71,al
  41ee1b:	pusha  
  41ee1c:	out    dx,eax
  41ee1d:	jge    0x41ee9a
  41ee1f:	pop    ebx
  41ee20:	mov    ecx,0x902fa6b2
  41ee25:	fwait
  41ee26:	(bad)  
  41ee27:	imul   edx,DWORD PTR [ebx-0x23],0x67db1e41
  41ee2e:	out    0xec,eax
  41ee30:	mov    bl,0x95
  41ee32:	data16 mov ds:0xabaf0da4,al
  41ee38:	inc    edi
  41ee39:	xchg   BYTE PTR [edx-0xd],cl
  41ee3c:	loope  0x41eebb
  41ee3e:	push   esi
  41ee3f:	pop    ebx
  41ee40:	xchg   ecx,eax
  41ee41:	mov    ebp,0xff77d481
  41ee46:	fldcw  WORD PTR [ecx-0x1d]
  41ee49:	fwait
  41ee4a:	sub    dl,dh
  41ee4c:	mov    edi,0xa161cd5b
  41ee52:	jb     0x41ee0b
  41ee54:	out    dx,eax
  41ee55:	mov    DWORD PTR [esi+0x6f6095ae],edi
  41ee5b:	cmc    
  41ee5c:	jge    0x41ee0b
  41ee5e:	into   
  41ee5f:	rcl    DWORD PTR [eax+0x9],1
  41ee62:	out    dx,eax
  41ee63:	arpl   bp,ax
  41ee65:	cwde   
  41ee66:	sub    al,0x44
  41ee68:	lea    edx,[eax+0x1c]
  41ee6b:	or     eax,0x1f311a11
  41ee70:	sbb    BYTE PTR [ebp+0x2c78c878],0xcb
  41ee77:	mov    eax,0x250c2ef9
  41ee7c:	and    ebx,ebx
  41ee7e:	(bad)  [ecx-0x1500712f]
  41ee84:	and    eax,0x6a9e4b87
  41ee89:	out    dx,eax
  41ee8a:	xchg   ebx,eax
  41ee8b:	mov    ch,0xa3
  41ee8d:	xor    BYTE PTR [edx],ah
  41ee8f:	sub    esp,eax
  41ee91:	inc    eax
  41ee92:	call   0x69eaaacf
  41ee97:	cld    
  41ee98:	std    
  41ee99:	cmp    ebx,edx
  41ee9b:	jae    0x41eeac
  41ee9d:	cmp    dh,al
  41ee9f:	jno    0x41eec5
  41eea1:	in     al,0xce
  41eea3:	fadd   QWORD PTR ds:0xce05f2d2
  41eea9:	js     0x41ef09
  41eeab:	and    BYTE PTR [ebx+0x4],0x7
  41eeaf:	cmp    bh,dh
  41eeb1:	adc    eax,0x117b5c40
  41eeb6:	adc    eax,0xef28d1a2
  41eebb:	sub    dl,ch
  41eebd:	and    BYTE PTR [ecx+eax*8],cl
  41eec0:	addr16 std 
  41eec2:	in     eax,0xef
  41eec4:	pop    esi
  41eec5:	jmp    0xaa6:0x36b7bd54
  41eecc:	inc    edi
  41eecd:	ret    
  41eece:	mov    ebx,DWORD PTR [edx]
  41eed0:	push   esp
  41eed1:	push   ss
  41eed2:	mov    edx,0xc23e29c6
  41eed7:	pop    esp
  41eed8:	fsubrp st(4),st
  41eeda:	loop   0x41eebd
  41eedc:	pop    ebp
  41eedd:	fwait
  41eede:	push   es
  41eedf:	lock fcmovne st,st(7)
  41eee2:	xor    bh,BYTE PTR [ecx-0x115cb500]
  41eee8:	push   0x50209e99
  41eeed:	jo     0x41ef2e
  41eeef:	pushf  
  41eef0:	xor    eax,0xafaf663c
  41eef5:	mov    eax,0xef24b903
  41eefa:	mov    ebx,0xa2cd0d76
  41eeff:	imul   ecx,DWORD PTR [eax-0x2eea4cf6],0xeed1c746
  41ef09:	into   
  41ef0a:	test   ah,bl
  41ef0c:	loope  0x41eebd
  41ef0e:	fs push ebx
  41ef10:	inc    edx
  41ef11:	lahf   
  41ef12:	push   es
  41ef13:	dec    ecx
  41ef14:	fwait
  41ef15:	es pushf 
  41ef17:	jne    0x41ef7e
  41ef19:	mov    bl,0xf8
  41ef1b:	(bad)  
  41ef1c:	xlat   BYTE PTR ds:[ebx]
  41ef1d:	mov    al,0x5b
  41ef1f:	addr16 (bad) 
  41ef21:	xchg   ebp,eax
  41ef22:	pop    ds
  41ef23:	shl    DWORD PTR [edi-0x1eed4bec],cl
  41ef29:	fdivr  st(0),st
  41ef2b:	(bad)  
  41ef2c:	loop   0x41eece
  41ef2e:	fisub  DWORD PTR [eax-0x14]
  41ef31:	sbb    ah,BYTE PTR [eax+0x79849f27]
  41ef37:	out    0xad,eax
  41ef39:	scas   al,BYTE PTR es:[edi]
  41ef3a:	in     eax,dx
  41ef3b:	outs   dx,DWORD PTR ds:[esi]
  41ef3c:	shr    BYTE PTR [esi-0x67],1
  41ef3f:	jle    0x41ef55
  41ef41:	sub    dh,BYTE PTR [ebp+eiz*4+0x18]
  41ef45:	xor    BYTE PTR [edi],bl
  41ef47:	xor    eax,0xba13242c
  41ef4c:	xor    BYTE PTR [esi+0x14cf4e0],0x61
  41ef53:	pop    esp
  41ef54:	outs   dx,BYTE PTR ds:[esi]
  41ef55:	stos   BYTE PTR es:[edi],al
  41ef56:	ret    
  41ef57:	mov    BYTE PTR [esi-0x35],0xd2
  41ef5b:	mov    bh,0x7e
  41ef5d:	xchg   edx,eax
  41ef5e:	cwde   
  41ef5f:	cmp    DWORD PTR [edx+ecx*1-0x3d8564c0],0x3a5cff50
  41ef6a:	shl    DWORD PTR [edi],1
  41ef6c:	mov    edx,0xf74cc6d8
  41ef71:	adc    al,0xe
  41ef73:	jns    0x41ef4b
  41ef75:	push   ss
  41ef76:	retf   
  41ef77:	inc    ebx
  41ef78:	inc    esi
  41ef79:	lahf   
  41ef7a:	jbe    0x41efb3
  41ef7c:	add    edx,esi
  41ef7e:	fisubr DWORD PTR [edx]
  41ef80:	(bad)  
  41ef81:	and    DWORD PTR [ecx-0x64f4eb4c],eax
  41ef87:	test   DWORD PTR [eax+edx*1],esp
  41ef8a:	jns    0x41ef6d
  41ef8c:	inc    esi
  41ef8d:	in     eax,dx
  41ef8e:	sar    ebp,cl
  41ef90:	fst    st(2)
  41ef92:	xlat   BYTE PTR ds:[ebx]
  41ef93:	stos   DWORD PTR es:[edi],eax
  41ef94:	inc    esi
  41ef95:	jbe    0x41ef2d
  41ef97:	inc    esp
  41ef98:	adc    BYTE PTR [edx],ch
  41ef9a:	fwait
  41ef9b:	mov    ch,0xf1
  41ef9d:	arpl   WORD PTR [ebx-0x28],dx
  41efa0:	shr    DWORD PTR [esi],cl
  41efa2:	sub    BYTE PTR [edx-0xcc8daf7],0xca
  41efa9:	fdivrp st(5),st
  41efab:	aas    
  41efac:	xchg   esi,eax
  41efad:	adc    dl,al
  41efaf:	out    0xeb,eax
  41efb1:	(bad)  
  41efb2:	lock fsubr DWORD PTR ds:[ebx]
  41efb6:	fs stc 
  41efb8:	inc    ebx
  41efb9:	out    0x95,eax
  41efbb:	jmp    0xa696:0x57d2cd34
  41efc2:	shl    BYTE PTR [eax-0x7dc31136],0x30
  41efc9:	es (bad) 
  41efcb:	mov    DWORD PTR [esi+0x5daba627],ebx
  41efd1:	ins    BYTE PTR es:[edi],dx
  41efd2:	pop    edx
  41efd3:	pop    esp
  41efd4:	out    0x1f,al
  41efd6:	or     ecx,DWORD PTR [eax+0x2b7861cd]
  41efdc:	cmp    al,dl
  41efde:	fdivr  st(4),st
  41efe0:	add    bh,cl
  41efe2:	fdiv   st,st(1)
  41efe4:	push   ebx
  41efe5:	jne    0x41efc5
  41efe7:	inc    ebp
  41efe8:	mov    dl,BYTE PTR [edx-0x1255d3f6]
  41efee:	and    edi,DWORD PTR [edi+0x12]
  41eff1:	mov    DWORD PTR [ebx-0x78],esp
  41eff4:	push   ebx
  41eff5:	in     eax,dx
  41eff6:	and    eax,DWORD PTR [edi+0x61]
  41eff9:	sbb    al,0xed
  41effb:	and    ebp,DWORD PTR [ebp+0x69793d54]
  41f001:	js     0x41f059
  41f003:	inc    ebp
  41f004:	aam    0x85
  41f006:	scas   eax,DWORD PTR es:[edi]
  41f007:	inc    esp
  41f008:	xchg   esp,eax
  41f009:	jns    0x41efc7
  41f00b:	jne    0x41ef97
  41f00d:	arpl   WORD PTR [ecx-0x4125f4d9],dx
  41f013:	jp     0x41efbd
  41f015:	add    edx,ecx
  41f017:	repnz rol bl,0xd0
  41f01b:	push   cs
  41f01c:	xor    eax,0xcd5b1811
  41f021:	clc    
  41f022:	and    eax,0x24f8c14c
  41f027:	adc    eax,0x7e03a6c9
  41f02c:	loop   0x41efc1
  41f02e:	inc    edx
  41f02f:	sbb    DWORD PTR [esi-0x4580d6ca],ecx
  41f035:	icebp  
  41f036:	gs lock cdq 
  41f039:	xchg   edi,eax
  41f03a:	sbb    eax,0x3e22ebd7
  41f03f:	add    eax,0x7502293c
  41f044:	mov    ah,0x6f
  41f046:	ret    
  41f047:	(bad)  
  41f048:	fwait
  41f049:	outs   dx,DWORD PTR ds:[esi]
  41f04a:	call   0x1e9b:0xb26c6460
  41f051:	shld   DWORD PTR [eax+ebp*8-0x6c],ebx,0xf5
  41f057:	xor    esp,esp
  41f059:	out    0x4b,al
  41f05b:	push   ss
  41f05c:	(bad)  
  41f05d:	loope  0x41f000
  41f05f:	pop    ss
  41f060:	sbb    DWORD PTR [edx],edx
  41f062:	ret    
  41f063:	mov    ecx,0x59f85ca0
  41f068:	fsubr  st(1),st
  41f06a:	adc    edi,DWORD PTR [ebp+0x78]
  41f06d:	into   
  41f06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f06f:	inc    DWORD PTR [esi-0x1f]
  41f072:	adc    bh,BYTE PTR [edi-0x29ccc8bc]
  41f078:	mov    ah,0x20
  41f07a:	and    BYTE PTR [bx+si],al
  41f07d:	fcmovne st,st(6)
  41f07f:	rol    BYTE PTR [edi],1
  41f081:	inc    esp
  41f082:	shl    DWORD PTR [edi],0xcd
  41f085:	leave  
  41f086:	and    al,0xc4
  41f088:	jns    0x41f077
  41f08a:	fwait
  41f08b:	xchg   BYTE PTR [ebx+ebx*8+0x645dd8e8],ah
  41f092:	add    DWORD PTR [eax-0x7a],esi
  41f095:	adc    BYTE PTR [ebx-0x7d],al
  41f098:	out    0x4a,eax
  41f09a:	call   0x8a37c67d
  41f09f:	cmp    al,0xa6
  41f0a1:	add    eax,0xfd5a0b9
  41f0a6:	or     eax,0x8e7e222d
  41f0ab:	add    edx,DWORD PTR [eax-0x8]
  41f0ae:	pusha  
  41f0af:	repnz inc ecx
  41f0b1:	xor    ebp,edx
  41f0b3:	pop    esi
  41f0b4:	xchg   ecx,eax
  41f0b5:	mov    bl,0xf
  41f0b7:	inc    ebx
  41f0b8:	cmc    
  41f0b9:	or     ebx,DWORD PTR [ecx+0x16af1754]
  41f0bf:	sbb    BYTE PTR [esi],ch
  41f0c1:	fist   DWORD PTR [ebp+0x53363b96]
  41f0c7:	sub    ebp,0x4a
  41f0ca:	or     al,0xe3
  41f0cc:	addr16 mov ch,0x46
  41f0cf:	inc    ebp
  41f0d0:	inc    BYTE PTR [edi-0x23]
  41f0d3:	ss (bad) 
  41f0d5:	std    
  41f0d6:	jge    0x41f087
  41f0d8:	add    BYTE PTR [ebp-0x6b],bh
  41f0db:	jnp    0x41f075
  41f0dd:	cmp    bl,BYTE PTR [edx+0x6c266614]
  41f0e3:	das    
  41f0e4:	arpl   bx,bx
  41f0e6:	push   0x30f15020
  41f0eb:	push   edi
  41f0ec:	xchg   BYTE PTR [esi-0x20f11dfa],bl
  41f0f2:	sub    ch,cl
  41f0f4:	pop    ss
  41f0f5:	xchg   edx,eax
  41f0f6:	pusha  
  41f0f7:	sbb    bh,BYTE PTR [ebx]
  41f0f9:	inc    esi
  41f0fa:	fwait
  41f0fb:	inc    edx
  41f0fc:	jno    0x41f0f8
  41f0fe:	in     eax,dx
  41f0ff:	pop    esp
  41f100:	mov    ah,0x94
  41f102:	cli    
  41f103:	pop    ss
  41f104:	xchg   BYTE PTR ss:[edi+0x47],ah
  41f108:	daa    
  41f109:	or     cl,dl
  41f10b:	push   ebx
  41f10c:	scas   al,BYTE PTR es:[edi]
  41f10d:	xor    edi,DWORD PTR [ebp+esi*2-0x46]
  41f111:	mov    ebp,0x5d28c1b5
  41f116:	mov    DWORD PTR [edx+0x2fe3aec5],eax
  41f11c:	mov    dl,0xb6
  41f11e:	pushf  
  41f11f:	shl    cl,1
  41f121:	push   edx
  41f122:	sbb    al,0x7e
  41f124:	cmp    DWORD PTR [ecx-0x97de39e],0xfff450a0
  41f12e:	shr    BYTE PTR [ebx+0x44f334e6],cl
  41f134:	enter  0xef70,0x69
  41f138:	mov    esp,0x3a2bd1d0
  41f13d:	sti    
  41f13e:	add    ebp,DWORD PTR [edi+eiz*8-0x7e9959e2]
  41f145:	stos   DWORD PTR es:[edi],eax
  41f146:	inc    ecx
  41f147:	call   0x1b3aea6b
  41f14c:	test   BYTE PTR [edx],dl
  41f14e:	mov    dh,0x3e
  41f150:	mov    ah,0x3b
  41f152:	pop    ecx
  41f153:	icebp  
  41f154:	scas   al,BYTE PTR es:[edi]
  41f155:	adc    al,0xc2
  41f157:	retf   
  41f158:	bound  ebx,QWORD PTR [eax]
  41f15a:	sub    eax,0x97f5a58
  41f15f:	das    
  41f160:	pop    ss
  41f161:	pusha  
  41f162:	(bad)  
  41f163:	jnp    0x41f11f
  41f165:	out    dx,eax
  41f166:	xlat   BYTE PTR ds:[ebx]
  41f167:	arpl   WORD PTR [edi-0xd9cf1f9],ax
  41f16d:	dec    ecx
  41f16e:	stc    
  41f16f:	retf   
  41f170:	push   edi
  41f171:	test   al,dl
  41f173:	fild   DWORD PTR [eax]
  41f175:	stc    
  41f176:	mov    edi,0xb77d4d50
  41f17b:	cld    
  41f17c:	xchg   ebp,eax
  41f17d:	int3   
  41f17e:	pop    ds
  41f17f:	mov    bl,0x0
  41f181:	dec    eax
  41f182:	push   0xb46b0a9
  41f187:	jae    0x41f19c
  41f189:	adc    al,0x71
  41f18b:	cmp    al,0x7a
  41f18d:	enter  0xa247,0x78
  41f191:	mov    bh,BYTE PTR ds:0xb886588f
  41f197:	jae    0x41f1eb
  41f199:	enter  0xc2f1,0x1d
  41f19d:	inc    ebp
  41f19e:	dec    esi
  41f19f:	push   ds
  41f1a0:	imul   dx,WORD PTR ds:0x4affc2db,0x4b
  41f1a8:	or     DWORD PTR [ebp+0x5f1bcf59],esi
  41f1ae:	fwait
  41f1af:	out    dx,al
  41f1b0:	iret   
  41f1b1:	sub    dh,ah
  41f1b3:	pop    esi
  41f1b4:	sbb    al,0x96
  41f1b6:	jp     0x41f1bb
  41f1b8:	inc    ecx
  41f1b9:	push   edx
  41f1ba:	imul   ebp,DWORD PTR [edi+0x15a4dcc8],0xfffffff8
  41f1c1:	sub    al,0x10
  41f1c3:	shl    DWORD PTR ds:0x561db03f,1
  41f1c9:	jmp    DWORD PTR [ebx-0x4a]
  41f1cc:	dec    esp
  41f1cd:	sub    eax,esp
  41f1cf:	sub    eax,0xbb3ad446
  41f1d4:	xchg   edi,eax
  41f1d5:	mov    es,WORD PTR [ecx-0x3e]
  41f1d8:	push   ebx
  41f1d9:	jns    0x41f21c
  41f1db:	add    BYTE PTR [edx+0xd],0xaf
  41f1df:	push   cs
  41f1e0:	mov    ebx,0xb0044119
  41f1e5:	xchg   ebp,eax
  41f1e6:	sbb    eax,0x64427fb8
  41f1eb:	je     0x41f1f3
  41f1ed:	inc    ebx
  41f1ee:	mov    ecx,DWORD PTR ds:0x382a5c26
  41f1f4:	(bad)  
  41f1f5:	pop    ecx
  41f1f6:	lods   al,BYTE PTR ds:[esi]
  41f1f7:	adc    ebp,DWORD PTR [edi+ebx*8]
  41f1fa:	popf   
  41f1fb:	xchg   edi,eax
  41f1fc:	aam    0xc1
  41f1fe:	inc    ebp
  41f1ff:	push   cs
  41f200:	in     eax,dx
  41f201:	ins    DWORD PTR es:[edi],dx
  41f202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f203:	(bad)  
  41f204:	lods   al,BYTE PTR ds:[esi]
  41f205:	out    0xa2,eax
  41f207:	and    eax,0x7eb61e6
  41f20c:	mov    cl,0x21
  41f20e:	xchg   esi,eax
  41f20f:	adc    BYTE PTR [ecx+0x45cd638f],0x78
  41f216:	inc    ebx
  41f217:	popa   
  41f218:	adc    al,0xef
  41f21a:	mov    ebx,0x946706a1
  41f21f:	jg     0x41f1ce
  41f221:	cmp    eax,DWORD PTR [ecx+0x23]
  41f224:	scas   al,BYTE PTR es:[edi]
  41f225:	test   BYTE PTR [ebx-0x2e501dff],0xd4
  41f22c:	xor    al,0xe7
  41f22e:	out    dx,al
  41f22f:	pop    edx
  41f230:	push   ecx
  41f231:	sbb    eax,0x9c8c5c3
  41f236:	cmp    DWORD PTR [ebp-0xe],esi
  41f239:	gs ret 
  41f23b:	push   esi
  41f23c:	out    0x7d,eax
  41f23e:	je     0x41f235
  41f240:	mov    BYTE PTR [esi],ah
  41f242:	cdq    
  41f243:	aas    
  41f244:	loope  0x41f253
  41f246:	sahf   
  41f247:	fld    QWORD PTR [ebp-0x73d896bf]
  41f24d:	sti    
  41f24e:	jns    0x41f1f8
  41f250:	stc    
  41f251:	(bad)  
  41f252:	call   0x616a28ab
  41f257:	push   edi
  41f258:	call   0x85c8121d
  41f25d:	lea    ebp,[edi-0x2]
  41f260:	daa    
  41f261:	cmp    eax,0xd5f027e3
  41f266:	aaa    
  41f267:	bsf    esi,edi
  41f26a:	outs   dx,DWORD PTR ds:[esi]
  41f26b:	popa   
  41f26c:	cwde   
  41f26d:	sub    al,0x78
  41f26f:	aad    0x9a
  41f271:	push   edi
  41f272:	pop    ss
  41f273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f274:	imul   esi,DWORD PTR ds:0x4e0881,0xffffff9c
  41f27b:	inc    ebx
  41f27c:	dec    ecx
  41f27d:	(bad)  
  41f27e:	jmp    0x41f272
  41f280:	ja     0x41f2a8
  41f282:	mov    bl,0xf4
  41f284:	fiadd  DWORD PTR [edi+0x14d1deb0]
  41f28a:	xchg   DWORD PTR [edi+0x23323b72],esi
  41f290:	hlt    
  41f291:	ret    0x22e0
  41f294:	(bad)  
  41f295:	jecxz  0x41f2cb
  41f297:	push   esi
  41f298:	and    DWORD PTR [eax-0x19881c0b],esi
  41f29e:	dec    ecx
  41f29f:	jmp    0x36018ec7
  41f2a4:	adc    al,0x2f
  41f2a6:	mov    esp,0x83e417d0
  41f2ab:	jmp    DWORD PTR [edx+0x18]
  41f2ae:	div    DWORD PTR [edi+0xa]
  41f2b1:	lock loopne 0x41f320
  41f2b4:	jae    0x41f31a
  41f2b6:	jnp    0x41f261
  41f2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2b9:	(bad)  
  41f2bc:	je     0x41f289
  41f2be:	add    ah,BYTE PTR [edi+0x3d8cc1dd]
  41f2c4:	mov    eax,0x3e3ecb0e
  41f2c9:	fnstsw WORD PTR [ecx+0x376002e9]
  41f2cf:	mov    ch,0x7e
  41f2d1:	push   ecx
  41f2d2:	xor    eax,0x23a1bbde
  41f2d7:	mov    al,0x10
  41f2d9:	aad    0xbd
  41f2db:	and    BYTE PTR [edi],dl
  41f2dd:	dec    DWORD PTR ds:0xb474a6f7
  41f2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2e4:	rcl    ebx,1
  41f2e6:	dec    ebp
  41f2e7:	and    DWORD PTR [eax],0x24
  41f2ea:	jae    0x41f2a0
  41f2ec:	cmp    eax,0xce8ddc8f
  41f2f1:	fstp   TBYTE PTR [edi+0x445e3e45]
  41f2f7:	sbb    DWORD PTR [ebp+0x5060eb36],esi
  41f2fd:	mov    esi,0x77347489
  41f302:	aas    
  41f303:	pushf  
  41f304:	jo     0x41f334
  41f306:	jle    0x41f36a
  41f308:	retf   0x7d17
  41f30b:	cmc    
  41f30c:	mov    bl,0x84
  41f30e:	or     BYTE PTR [eax+eax*2-0x769d75dc],dl
  41f315:	push   esi
  41f316:	dec    ebx
  41f317:	ja     0x41f333
  41f319:	inc    ebx
  41f31a:	inc    ebp
  41f31b:	jb     0x41f305
  41f31d:	lods   eax,DWORD PTR ds:[esi]
  41f31e:	push   ebx
  41f31f:	(bad)
  41f323:	arpl   WORD PTR [edx+0x24283a5],si
  41f329:	pop    ss
  41f32a:	adc    eax,0xcd8473cb
  41f32f:	retf   
  41f330:	pop    ebx
  41f331:	mov    ch,0xc5
  41f333:	in     eax,dx
  41f334:	sbb    al,0x4b
  41f336:	cmp    DWORD PTR [ebx-0x75],esi
  41f339:	xor    BYTE PTR [eax+0x70],0x9d
  41f33d:	jno    0x41f2f3
  41f33f:	mov    bl,0x0
  41f341:	and    BYTE PTR ds:0xf4e6711,ch
  41f347:	std    
  41f348:	test   edx,ebx
  41f34a:	mov    al,0x37
  41f34c:	inc    ebp
  41f34d:	inc    eax
  41f34e:	jl     0x41f3ac
  41f350:	pop    es
  41f351:	pop    ecx
  41f352:	pushf  
  41f353:	adc    edi,DWORD PTR [eax+ebp*8-0x916f3b5]
  41f35a:	sbb    edx,DWORD PTR [ebp+0x72]
  41f35d:	scas   al,BYTE PTR es:[edi]
  41f35e:	dec    edi
  41f35f:	hlt    
  41f360:	imul   eax,ebx,0x4afc4f99
  41f366:	or     ah,cl
  41f368:	out    dx,eax
  41f369:	jmp    0x41f317
  41f36b:	jg     0x41f37a
  41f36d:	js     0x41f37d
  41f36f:	lahf   
  41f370:	push   ecx
  41f371:	in     al,dx
  41f372:	inc    ebx
  41f373:	sbb    BYTE PTR [ecx+eiz*2],0xb5
  41f377:	mov    bh,0x86
  41f379:	jmp    0x41f326
  41f37b:	adc    DWORD PTR [esi+edi*4+0xd8a3866],esp
  41f382:	loope  0x41f39d
  41f384:	jns    0x41f342
  41f386:	xchg   ebx,eax
  41f387:	mov    dh,0x94
  41f389:	jle    0x41f3cf
  41f38b:	xor    al,bh
  41f38d:	popf   
  41f38e:	add    eax,0xdf562e62
  41f393:	in     al,0x15
  41f395:	xor    ebp,eax
  41f397:	and    eax,0x920b59bb
  41f39c:	stos   BYTE PTR es:[edi],al
  41f39d:	sub    eax,0x348f2ebb
  41f3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a3:	(bad)  
  41f3a4:	int3   
  41f3a5:	sbb    eax,0xde5f9d06
  41f3aa:	shl    BYTE PTR [edx+0x4b],1
  41f3ad:	or     BYTE PTR [bp-0x5ac8],dl
  41f3b2:	xor    ebp,ebx
  41f3b4:	xchg   dh,dl
  41f3b6:	mov    edx,0xc92baf7d
  41f3bb:	sbb    al,0xa0
  41f3bd:	pushf  
  41f3be:	inc    ecx
  41f3bf:	cmc    
  41f3c0:	sar    DWORD PTR [ebp+0x2d93fb],1
  41f3c6:	inc    esp
  41f3c7:	hlt    
  41f3c8:	pop    ebp
  41f3c9:	loop   0x41f358
  41f3cb:	lds    esp,FWORD PTR [edi]
  41f3cd:	mov    edi,0x831b3252
  41f3d2:	imul   esi,DWORD PTR [eax+0x1e],0xfffffff8
  41f3d6:	loop   0x41f449
  41f3d8:	call   0x49ebe935
  41f3dd:	xlat   BYTE PTR ds:[ebx]
  41f3de:	scas   eax,DWORD PTR es:[edi]
  41f3df:	jae    0x41f364
  41f3e1:	xor    DWORD PTR [edx+0x4e],edx
  41f3e4:	jge    0x41f465
  41f3e6:	cmp    ch,BYTE PTR [ebp+0x2fd1ee90]
  41f3ec:	cld    
  41f3ed:	dec    eax
  41f3ee:	and    BYTE PTR [edi],cl
  41f3f0:	mov    DWORD PTR [edx],esp
  41f3f2:	xor    bh,bl
  41f3f4:	pop    ebp
  41f3f5:	pop    edi
  41f3f6:	jmp    0x94a4734d
  41f3fb:	lods   eax,DWORD PTR ds:[esi]
  41f3fc:	or     ch,BYTE PTR [edi+0x4980460f]
  41f402:	jo     0x41f3aa
  41f404:	mov    esp,0x5a57264f
  41f409:	push   edi
  41f40a:	and    BYTE PTR [esi-0x62c6e16b],ch
  41f410:	jmp    0x5e8eba0e
  41f415:	pop    edi
  41f416:	and    BYTE PTR [edi-0xb],0x97
  41f41a:	pop    edx
  41f41b:	xor    eax,eax
  41f41d:	pop    ebp
  41f41e:	cmp    ah,bh
  41f420:	pop    edi
  41f421:	jp     0x41f3df
  41f423:	jnp    0x41f496
  41f425:	xchg   edx,eax
  41f426:	push   edi
  41f427:	adc    al,0x80
  41f429:	xor    DWORD PTR [esi-0xc86b4a4],ebx
  41f42f:	loop   0x41f4a4
  41f431:	aam    0xaf
  41f433:	mov    cl,0xc4
  41f435:	loopne 0x41f3db
  41f437:	mov    edi,0x35fa55d5
  41f43c:	fisubr DWORD PTR [ebp-0xf]
  41f43f:	and    DWORD PTR [edi-0x463fd6d1],edx
  41f445:	dec    edi
  41f446:	je     0x41f40e
  41f448:	xlat   BYTE PTR ds:[ebx]
  41f449:	test   BYTE PTR [ecx+0x51],dh
  41f44c:	jns    0x41f45f
  41f44e:	xor    DWORD PTR [eax+0x64],esp
  41f451:	pusha  
  41f452:	in     eax,0x10
  41f454:	sbb    esp,0x14
  41f457:	add    eax,0x2b0c25bc
  41f45c:	sbb    BYTE PTR [ecx],ch
  41f45e:	dec    eax
  41f45f:	and    ecx,DWORD PTR [ebx-0x24]
  41f462:	pop    eax
  41f463:	xor    BYTE PTR [eax+0x7],al
  41f466:	arpl   WORD PTR [ebx-0x58],bp
  41f469:	data16 fmulp st(1),st
  41f46c:	call   0x3193:0x3d80b3df
  41f473:	push   ds
  41f474:	adc    al,0xa7
  41f476:	inc    esi
  41f477:	cli    
  41f478:	pop    eax
  41f479:	xor    bl,bh
  41f47b:	sbb    DWORD PTR [ebp-0x3],ecx
  41f47e:	lds    edx,FWORD PTR [edi-0x3e]
  41f481:	sbb    al,0x95
  41f483:	xor    al,0x1a
  41f485:	rcr    BYTE PTR [eax+0x60],1
  41f488:	ins    BYTE PTR es:[edi],dx
  41f489:	cdq    
  41f48a:	dec    esi
  41f48b:	icebp  
  41f48c:	inc    ebp
  41f48d:	sahf   
  41f48e:	xchg   ebx,eax
  41f48f:	sahf   
  41f490:	fs in  al,dx
  41f492:	xchg   esi,eax
  41f493:	fwait
  41f494:	mov    DWORD PTR [ebp+0xa0f21c8],ecx
  41f49a:	aas    
  41f49b:	inc    ebp
  41f49c:	mov    BYTE PTR [esi+ebx*4-0xb],al
  41f4a0:	mov    ebx,0xfbf92271
  41f4a5:	repnz ficomp DWORD PTR [ecx]
  41f4a8:	lahf   
  41f4a9:	push   0xccd3938e
  41f4ae:	aas    
  41f4af:	push   edi
  41f4b0:	shl    BYTE PTR [edx-0x334cfbc0],0x13
  41f4b7:	dec    edi
  41f4b8:	sub    bl,bh
  41f4ba:	scas   al,BYTE PTR es:[edi]
  41f4bb:	pop    esi
  41f4bc:	xchg   ebx,eax
  41f4bd:	push   ebx
  41f4be:	xor    DWORD PTR [esi],0xffffff8b
  41f4c1:	mov    WORD PTR [edi],?
  41f4c3:	dec    esp
  41f4c4:	xchg   esp,eax
  41f4c5:	jns    0x41f487
  41f4c7:	shl    BYTE PTR [esi-0x4],cl
  41f4ca:	mov    ?,eax
  41f4cc:	add    eax,ebx
  41f4ce:	xchg   edi,eax
  41f4cf:	and    DWORD PTR [ecx+0x2e],esi
  41f4d2:	jnp    0x41f533
  41f4d4:	sbb    dh,BYTE PTR [ebp-0x64b4afbe]
  41f4da:	fcmove st,st(0)
  41f4dc:	mov    bl,BYTE PTR [eax+ebx*8-0xf]
  41f4e0:	cdq    
  41f4e1:	stc    
  41f4e2:	and    eax,0xc4d95e3a
  41f4e7:	test   BYTE PTR [eax-0x13164276],ch
  41f4ed:	mov    dl,0x66
  41f4ef:	in     al,dx
  41f4f0:	cmp    ecx,DWORD PTR [ebx+0x76d8c118]
  41f4f6:	ins    DWORD PTR es:[edi],dx
  41f4f7:	mov    eax,0xeed66dd7
  41f4fc:	dec    ecx
  41f4fd:	nop
  41f4fe:	ds mov dl,0x5d
  41f501:	in     al,dx
  41f502:	ror    ah,cl
  41f504:	in     al,0x12
  41f506:	nop
  41f507:	jns    0x41f555
  41f509:	ret    0x12d9
  41f50c:	(bad)  
  41f50d:	mov    cs,WORD PTR [edi]
  41f50f:	mov    cl,0x80
  41f511:	outs   dx,DWORD PTR ds:[esi]
  41f512:	sub    BYTE PTR [edi-0x1f072d07],bl
  41f518:	add    bh,0x51
  41f51b:	dec    ecx
  41f51c:	arpl   WORD PTR [edx+0x5e],sp
  41f51f:	out    dx,eax
  41f520:	add    ecx,DWORD PTR [ebx]
  41f522:	shl    cl,0xc
  41f525:	push   esp
  41f526:	mov    edi,0x96c9f56e
  41f52b:	ss pushf 
  41f52d:	inc    edi
  41f52e:	ja     0x41f4e8
  41f530:	ss pop esi
  41f532:	mov    bl,0x58
  41f534:	add    DWORD PTR [ecx-0x260756c7],0x528b5515
  41f53e:	fcomp  st(6)
  41f540:	jne    0x41f50b
  41f542:	cld    
  41f543:	sub    dh,BYTE PTR [edi-0x12]
  41f546:	cmp    BYTE PTR [esi-0x5f],dl
  41f549:	xor    ebx,DWORD PTR [edi]
  41f54b:	sbb    ebx,ecx
  41f54d:	nop
  41f54e:	idiv   dh
  41f550:	imul   BYTE PTR [esi+eax*4]
  41f553:	ds cmp eax,esp
  41f556:	jecxz  0x41f57f
  41f558:	cmc    
  41f559:	jp     0x41f549
  41f55b:	shr    BYTE PTR ds:0xf2d70a94,1
  41f561:	push   eax
  41f562:	dec    ecx
  41f563:	and    dl,ah
  41f565:	xor    eax,0x19a62e5
  41f56a:	aam    0xd6
  41f56c:	test   al,0x3c
  41f56e:	or     eax,0x5092004b
  41f573:	sbb    dh,cl
  41f575:	out    dx,al
  41f576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f577:	fsub   DWORD PTR [eax+0x7]
  41f57a:	add    al,0x77
  41f57c:	cli    
  41f57d:	out    dx,eax
  41f57e:	call   0x4c00e58
  41f583:	adc    al,BYTE PTR [ebx+eiz*8+0x105755d0]
  41f58a:	xor    ebx,DWORD PTR [eax-0x7e]
  41f58d:	loop   0x41f5e6
  41f58f:	psadbw mm3,QWORD PTR [eax-0x2ea43bc6]
  41f596:	and    eax,0xa6cb268b
  41f59b:	xchg   edx,eax
  41f59c:	pop    esp
  41f59d:	mov    bl,BYTE PTR ds:0x7122760
  41f5a3:	xor    eax,0x502f5dc2
  41f5a8:	data16 ja 0x41f61c
  41f5ab:	push   0xcb464fe2
  41f5b0:	mov    edi,0x3d8e60d0
  41f5b5:	nop
  41f5b6:	sti    
  41f5b7:	cmp    BYTE PTR fs:[ebx],ah
  41f5ba:	lea    ebp,[esp+edi*4-0x26]
  41f5be:	sub    DWORD PTR [eax+0x6b],esi
  41f5c1:	sbb    al,0x64
  41f5c3:	inc    edx
  41f5c4:	lock popf 
  41f5c6:	cmc    
  41f5c7:	add    edi,ebx
  41f5c9:	repnz mov cl,BYTE PTR [ecx]
  41f5cc:	xlat   BYTE PTR ds:[ebx]
  41f5cd:	addr16 popa 
  41f5cf:	icebp  
  41f5d0:	pop    esi
  41f5d1:	mov    eax,0x488cce3
  41f5d6:	push   es
  41f5d7:	cs ins BYTE PTR es:[edi],dx
  41f5d9:	add    al,0x8d
  41f5db:	jp     0x41f5a6
  41f5dd:	or     cl,al
  41f5df:	(bad)  
  41f5e0:	es cld 
  41f5e2:	mov    ch,0xb3
  41f5e4:	sbb    edi,DWORD PTR [ecx+eax*1+0x68a5799e]
  41f5eb:	scas   eax,DWORD PTR es:[edi]
  41f5ec:	(bad)  
  41f5ed:	retf   0xa0d
  41f5f0:	adc    al,0xe0
  41f5f2:	push   edx
  41f5f3:	adc    BYTE PTR [ebp-0x6133a4dd],cl
  41f5f9:	les    esp,FWORD PTR ds:0xf498ef71
  41f5ff:	mov    bh,0x58
  41f601:	shl    BYTE PTR [esi+0xe43c278],cl
  41f607:	cmp    al,BYTE PTR [eax+edx*2-0x7854a6c8]
  41f60e:	in     eax,0xb0
  41f610:	push   ebx
  41f611:	jp     0x41f677
  41f613:	dec    ebp
  41f614:	jns    0x41f616
  41f616:	sti    
  41f617:	(bad)  
  41f618:	ficomp DWORD PTR [ecx]
  41f61a:	inc    ecx
  41f61b:	mov    ecx,0xd8eca7cd
  41f620:	adc    DWORD PTR [ebx],esp
  41f622:	(bad)  
  41f623:	push   ss
  41f624:	or     eax,0x663db739
  41f629:	dec    eax
  41f62a:	jae    0x41f6a6
  41f62c:	mov    al,ds:0xbe65041f
  41f631:	(bad)  
  41f632:	inc    BYTE PTR [ecx]
  41f634:	int3   
  41f635:	mov    ds:0x34d3c1e7,al
  41f63a:	push   0x919be178
  41f63f:	test   eax,0x92fca78c
  41f644:	fwait
  41f645:	in     eax,0x63
  41f647:	enter  0xd9e5,0xb2
  41f64b:	cmp    eax,0x356aa76f
  41f650:	xchg   edx,eax
  41f651:	pop    esp
  41f652:	xor    ebx,eax
  41f654:	mov    ebx,0x3234df0d
  41f659:	xor    cl,bh
  41f65b:	cmc    
  41f65c:	add    bh,BYTE PTR [esi]
  41f65e:	hlt    
  41f65f:	(bad)
  41f663:	or     eax,0x26887798
  41f668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f669:	push   edi
  41f66a:	je     0x41f6d1
  41f66c:	pop    edi
  41f66d:	jb     0x41f6b7
  41f66f:	outs   dx,DWORD PTR ds:[esi]
  41f670:	popf   
  41f671:	xor    DWORD PTR [esi+0x53ba4b18],0xebf5bb32
  41f67b:	fnstenv cs:[eax+0x62e4ed1]
  41f682:	scas   al,BYTE PTR es:[edi]
  41f683:	jl     0x41f645
  41f685:	popf   
  41f686:	or     dh,BYTE PTR [edx]
  41f688:	mov    ch,0xb9
  41f68a:	cdq    
  41f68b:	jb     0x41f6e1
  41f68d:	stc    
  41f68e:	xchg   DWORD PTR [ebx+edx*1],edx
  41f691:	push   ecx
  41f692:	sbb    al,0xb3
  41f694:	(bad)  [ebp+0x36ae814]
  41f69a:	inc    ecx
  41f69b:	test   esi,edi
  41f69d:	pop    ecx
  41f69e:	or     DWORD PTR [edx-0x6f],esp
  41f6a1:	out    dx,eax
  41f6a2:	mov    esi,0x78485c36
  41f6a7:	cs aas 
  41f6a9:	inc    edi
  41f6aa:	rcr    BYTE PTR [edx-0x4f9d0626],0x67
  41f6b1:	mov    bh,0x4c
  41f6b3:	mov    DWORD PTR [edx+0x6d],edi
  41f6b6:	ja     0x41f678
  41f6b8:	cmp    eax,0xfccd8d6e
  41f6bd:	aam    0xca
  41f6bf:	xor    al,0x78
  41f6c1:	push   ebp
  41f6c2:	add    eax,0x776179ab
  41f6c7:	cmp    dl,BYTE PTR [eax+0x13]
  41f6ca:	jg     0x41f73d
  41f6cc:	sub    al,0x68
  41f6ce:	adc    BYTE PTR [ecx+0x168e85e],0x27
  41f6d5:	mov    esp,0x7d61cdc6
  41f6da:	xchg   edx,eax
  41f6db:	into   
  41f6dc:	enter  0xecbe,0x12
  41f6e0:	mov    dl,0xa4
  41f6e2:	leave  
  41f6e3:	jne    0x41f667
  41f6e5:	mov    esp,0x797d09e6
  41f6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6eb:	pop    esp
  41f6ec:	or     DWORD PTR ss:[eax+0x2a338d1f],ebx
  41f6f3:	pusha  
  41f6f4:	stos   DWORD PTR es:[edi],eax
  41f6f5:	and    eax,0x7c1d457f
  41f6fa:	jge    0x41f76c
  41f6fc:	mov    WORD PTR [ecx],ds
  41f6fe:	loope  0x41f6b4
  41f700:	sbb    al,0xad
  41f702:	loope  0x41f6ba
  41f704:	(bad)  
  41f705:	sti    
  41f706:	mov    ds:0x1e24d0b2,al
  41f70b:	push   edi
  41f70c:	int    0xc6
  41f70e:	xchg   eax,edx
  41f710:	fwait
  41f711:	imul   esp,DWORD PTR [eax+0x4c],0x4697cd1a
  41f718:	add    BYTE PTR [esi+0x4a],dh
  41f71b:	cmp    dh,BYTE PTR [eax+0x1b]
  41f71e:	shl    BYTE PTR [ecx+0x66624252],1
  41f724:	pop    fs
  41f726:	push   0xe67fc188
  41f72b:	cli    
  41f72c:	add    BYTE PTR ds:0x9b51cabd,bh
  41f732:	mov    ds:0xd9bee625,al
  41f737:	xor    DWORD PTR [esi-0xb],0xffffff8d
  41f73b:	mov    ax,ds:0x12f0a330
  41f741:	mov    ebp,0x4e911eb6
  41f746:	enter  0x4a73,0x88
  41f74a:	mov    cl,0xf0
  41f74c:	sub    ecx,edx
  41f74e:	sar    BYTE PTR ds:0xbce61743,cl
  41f754:	cmp    eax,0xbe6994cf
  41f759:	xchg   BYTE PTR [edx],dl
  41f75b:	push   edi
  41f75c:	mov    dl,0x0
  41f75e:	pop    esi
  41f75f:	sbb    DWORD PTR [esi],ebx
  41f761:	sub    ecx,DWORD PTR [eax]
  41f763:	jmp    0xef653585
  41f768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f769:	out    0x2f,al
  41f76b:	push   ss
  41f76c:	pop    ss
  41f76d:	out    0xfb,al
  41f76f:	je     0x41f78e
  41f771:	xchg   DWORD PTR [ecx],esp
  41f773:	daa    
  41f774:	cmp    ebx,DWORD PTR [ebp-0x369bcfdc]
  41f77a:	inc    edx
  41f77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f77c:	inc    ebp
  41f77d:	fwait
  41f77e:	icebp  
  41f77f:	outs   dx,BYTE PTR ds:[esi]
  41f780:	sar    DWORD PTR [edi],cl
  41f782:	xchg   ecx,eax
  41f783:	(bad)  
  41f784:	sar    BYTE PTR [ebx-0x5b],1
  41f787:	frstor [edx-0x8]
  41f78a:	iret   
  41f78b:	xor    al,0xa4
  41f78d:	int    0xb8
  41f78f:	mov    ds:0x48c37b39,eax
  41f794:	shr    BYTE PTR [edi],0xc5
  41f797:	addr16 mov ebx,0x7036d5b
  41f79d:	arpl   ax,ax
  41f79f:	jge    0x41f78e
  41f7a1:	fist   DWORD PTR [eax]
  41f7a3:	push   ss
  41f7a4:	mov    eax,0x8246aacf
  41f7a9:	sbb    bl,bl
  41f7ab:	(bad)  
  41f7ac:	dec    esp
  41f7ad:	lahf   
  41f7ae:	stos   BYTE PTR es:[edi],al
  41f7af:	popa   
  41f7b0:	ds inc edi
  41f7b2:	push   cs
  41f7b3:	leave  
  41f7b4:	lock loopne 0x41f764
  41f7b7:	xor    esi,ebp
  41f7b9:	rcr    edx,0x75
  41f7bc:	or     BYTE PTR [edx],dh
  41f7be:	inc    ecx
  41f7bf:	in     eax,0xd6
  41f7c1:	cmp    DWORD PTR [ecx-0x40e143ec],0x38
  41f7c8:	(bad)  
  41f7c9:	jmp    0x28dc808e
  41f7ce:	test   eax,0xf75b4bc5
  41f7d3:	rcl    BYTE PTR [ecx+0x25],cl
  41f7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7d7:	(bad)  
  41f7d8:	dec    ebp
  41f7d9:	cmp    al,0xab
  41f7db:	sub    eax,0x5a783c52
  41f7e0:	in     eax,dx
  41f7e1:	test   al,0x41
  41f7e3:	into   
  41f7e4:	(bad)  
  41f7e5:	call   FWORD PTR [eax]
  41f7e7:	push   es
  41f7e8:	add    al,0x95
  41f7ea:	xlat   BYTE PTR ds:[ebx]
  41f7eb:	push   ecx
  41f7ec:	and    DWORD PTR [ebp-0x65],ecx
  41f7ef:	arpl   dx,di
  41f7f1:	js     0x41f858
  41f7f3:	push   esp
  41f7f4:	lods   eax,DWORD PTR ds:[esi]
  41f7f5:	mov    dl,0x83
  41f7f7:	popf   
  41f7f8:	or     DWORD PTR [ebx],edx
  41f7fa:	xchg   ebp,eax
  41f7fb:	shl    dl,0xa
  41f7fe:	aam    0xb0
  41f800:	aam    0x88
  41f802:	clc    
  41f803:	push   ebx
  41f804:	inc    ebx
  41f805:	cmp    DWORD PTR [eax],ecx
  41f807:	out    dx,eax
  41f808:	pop    ebp
  41f809:	add    bh,dh
  41f80b:	and    al,bh
  41f80d:	and    al,0xfb
  41f80f:	or     BYTE PTR [edx-0x7e],bl
  41f812:	pop    ss
  41f813:	jb     0x41f7af
  41f815:	mov    eax,ds:0x42764d61
  41f81a:	outs   dx,DWORD PTR ds:[esi]
  41f81b:	(bad)  
  41f81c:	out    0xb,al
  41f81e:	add    BYTE PTR [esi],0xd5
  41f821:	inc    eax
  41f822:	lods   eax,DWORD PTR ds:[esi]
  41f823:	jns    0x41f86e
  41f825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f826:	(bad)  
  41f827:	adc    esi,ecx
  41f829:	out    dx,al
  41f82a:	mov    ebx,0xfc4411cf
  41f82f:	sub    eax,0x75071fc8
  41f834:	(bad)  
  41f835:	fsubp  st(7),st
  41f837:	xlat   BYTE PTR ds:[ebx]
  41f838:	adc    eax,0xf8f21bfd
  41f83d:	inc    eax
  41f83e:	inc    esp
  41f83f:	ret    0x3534
  41f842:	dec    esi
  41f843:	inc    edi
  41f844:	mov    dl,0x39
  41f846:	inc    edi
  41f847:	cmp    bh,dl
  41f849:	pop    edx
  41f84a:	je     0x41f7e6
  41f84c:	jae    0x4ffe5f93
  41f852:	fisttp DWORD PTR [edx+0x173ff6bf]
  41f858:	mov    esi,edx
  41f85a:	ret    
  41f85b:	add    BYTE PTR [edi],dl
  41f85d:	jg     0x41f82d
  41f85f:	push   0x29a4bdad
  41f864:	leave  
  41f865:	mov    dl,0xf2
  41f867:	lahf   
  41f868:	jb     0x41f86e
  41f86a:	loope  0x41f87c
  41f86c:	mov    ds:0xe1f55b6c,eax
  41f871:	sub    ebp,0xc2d8934f
  41f877:	idiv   DWORD PTR [edx-0x4e]
  41f87a:	retf   
  41f87b:	shl    dl,1
  41f87d:	sub    ch,BYTE PTR [eax-0x3bb83fdc]
  41f883:	xchg   ebx,eax
  41f884:	sub    edi,ebp
  41f886:	xor    DWORD PTR [edi+0x31],edx
  41f889:	pop    ecx
  41f88a:	fs out dx,eax
  41f88c:	mov    edx,0x10ffc982
  41f891:	inc    ebx
  41f892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f893:	mov    esp,0xd7339807
  41f898:	sbb    eax,DWORD PTR [ebx+0x22bcc4d]
  41f89e:	(bad)  
  41f89f:	out    dx,eax
  41f8a0:	outs   dx,DWORD PTR ds:[esi]
  41f8a1:	push   ds
  41f8a2:	test   BYTE PTR [ebx],cl
  41f8a4:	fs jmp 0x41f8da
  41f8a7:	les    ebx,FWORD PTR [eax]
  41f8a9:	xchg   BYTE PTR [ecx-0x63],ch
  41f8ac:	adc    ebp,DWORD PTR [esi-0x29]
  41f8af:	inc    esi
  41f8b0:	sahf   
  41f8b1:	dec    ecx
  41f8b2:	cmp    ecx,DWORD PTR [edi]
  41f8b4:	cmp    al,0xde
  41f8b6:	push   cs
  41f8b7:	mov    dl,0x81
  41f8b9:	add    cl,BYTE PTR [ebx+ebp*1-0x40]
  41f8bd:	xor    BYTE PTR [edx],ah
  41f8bf:	push   eax
  41f8c0:	repnz or al,0x77
  41f8c3:	sahf   
  41f8c4:	inc    esi
  41f8c5:	mov    WORD PTR [ecx-0x5],cs
  41f8c8:	lds    ebp,FWORD PTR [ecx]
  41f8ca:	cpuid  
  41f8cc:	and    edi,esi
  41f8ce:	and    BYTE PTR [edx+0x5ae24671],ah
  41f8d4:	in     al,0xca
  41f8d6:	xchg   edx,eax
  41f8d7:	push   ss
  41f8d8:	jns    0x41f860
  41f8da:	jns    0x41f8a4
  41f8dc:	leave  
  41f8dd:	ret    
  41f8de:	cmp    DWORD PTR [eax+0xa157c8],0x1cd46f04
  41f8e8:	jge    0x41f94f
  41f8ea:	into   
  41f8eb:	mov    esp,0xdfafc890
  41f8f0:	adc    ebp,esp
  41f8f2:	fisttp WORD PTR [ebp+0x2a1b3239]
  41f8f8:	icebp  
  41f8f9:	xchg   esi,eax
  41f8fa:	je     0x41f8a6
  41f8fc:	test   al,0x7d
  41f8fe:	and    BYTE PTR [edi+0x7e],0x5c
  41f902:	in     al,0xd6
  41f904:	jb     0x41f95e
  41f906:	pop    edx
  41f907:	adc    edx,DWORD PTR [edi+0x249bdebc]
  41f90d:	mov    al,ds:0xcca221a1
  41f912:	xor    al,0xd8
  41f914:	pop    edi
  41f915:	call   DWORD PTR [eax-0x21]
  41f918:	mov    eax,0x194ba63
  41f91d:	cmp    al,0xe3
  41f91f:	mov    bh,0x4e
  41f921:	mov    ds:0x619c4806,al
  41f926:	sbb    DWORD PTR [ecx-0x22],ebp
  41f929:	popf   
  41f92a:	ss aam 0xf8
  41f92d:	daa    
  41f92e:	repz aam 0x47
  41f931:	mov    dl,0xb2
  41f933:	cmp    ebx,DWORD PTR [esi+0x8dda9e9]
  41f939:	sbb    esp,DWORD PTR [esi-0xd]
  41f93c:	inc    esp
  41f93d:	in     al,0xf8
  41f93f:	mov    ds:0x60825f14,al
  41f944:	imul   eax,DWORD PTR [edi-0x3210d9d7],0x7a
  41f94b:	xchg   DWORD PTR [esi-0x56323c14],esi
  41f951:	and    al,0xf
  41f953:	cs das 
  41f955:	loop   0x41f8f3
  41f957:	push   ebp
  41f958:	out    0x5f,al
  41f95a:	xchg   ecx,eax
  41f95b:	mov    BYTE PTR [eax+0x33b3bf5],dl
  41f961:	popa   
  41f962:	or     bh,BYTE PTR [esi+0x74]
  41f965:	test   eax,0x8d9ed65e
  41f96a:	xchg   BYTE PTR [edi],dl
  41f96c:	stos   DWORD PTR es:[edi],eax
  41f96d:	xchg   esi,eax
  41f96e:	inc    ebp
  41f96f:	retf   
  41f970:	lahf   
  41f971:	shl    DWORD PTR [ebx],0x84
  41f974:	test   al,0x9a
  41f976:	les    esp,FWORD PTR [ebp+0x528befbc]
  41f97c:	jae    0x41f9d8
  41f97e:	push   0x78
  41f980:	push   0x1253c3bc
  41f985:	inc    esp
  41f986:	es push ecx
  41f988:	jno    0x41fa02
  41f98a:	fimul  WORD PTR [edi+ecx*4]
  41f98d:	jbe    0x41fa0e
  41f98f:	fldcw  WORD PTR [edx]
  41f991:	outs   dx,BYTE PTR ds:[esi]
  41f992:	sar    BYTE PTR [esp+esi*8-0x62dc917f],1
  41f999:	inc    ebx
  41f99a:	test   DWORD PTR [esi],ebp
  41f99c:	cmp    eax,0x5479f535
  41f9a1:	sub    dh,ah
  41f9a3:	pop    esi
  41f9a4:	inc    esp
  41f9a5:	inc    ebx
  41f9a6:	xchg   DWORD PTR [esi],esp
  41f9a8:	xchg   esi,eax
  41f9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9aa:	jne    0x41f9dd
  41f9ac:	jmp    0x41f9e4
  41f9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9af:	pop    ss
  41f9b0:	(bad)  
  41f9b1:	mov    esi,0x18a20f62
  41f9b6:	xchg   ebx,eax
  41f9b7:	mov    ds:0x72912b4c,al
  41f9bc:	or     eax,0x7b9a9ce4
  41f9c1:	jns    0x41f9fc
  41f9c3:	mov    ds:0xacc2c487,al
  41f9c8:	outs   dx,BYTE PTR ds:[esi]
  41f9c9:	jl     0x41f9df
  41f9cb:	(bad)  
  41f9cc:	cmp    esp,esi
  41f9ce:	xchg   edx,eax
  41f9cf:	pop    ebx
  41f9d0:	cmp    DWORD PTR [eax+eiz*1+0x1c],esp
  41f9d4:	inc    ebx
  41f9d5:	das    
  41f9d6:	pop    ebp
  41f9d7:	std    
  41f9d8:	aad    0x89
  41f9da:	sub    edx,DWORD PTR [esi]
  41f9dc:	push   ebx
  41f9dd:	pushf  
  41f9de:	mov    ecx,0xfd210da4
  41f9e3:	pop    ecx
  41f9e4:	sbb    BYTE PTR [esi],dl
  41f9e6:	and    DWORD PTR [ecx],eax
  41f9e8:	(bad)  
  41f9e9:	mov    ds:0xfc033929,eax
  41f9ee:	in     eax,0x29
  41f9f0:	mov    al,0x5b
  41f9f2:	inc    ebx
  41f9f3:	jns    0x41fa2d
  41f9f5:	int    0x88
  41f9f7:	or     DWORD PTR [esi+0x56969463],ebp
  41f9fd:	push   ecx
  41f9fe:	jae    0x41fa0c
  41fa00:	in     eax,dx
  41fa01:	pop    ds
  41fa02:	push   ss
  41fa03:	xor    al,0x43
  41fa05:	(bad)  
  41fa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa08:	mov    ebp,0x9da6e112
  41fa0d:	bound  ebp,QWORD PTR [edx]
  41fa0f:	jle    0x41f9b9
  41fa11:	daa    
  41fa12:	mov    ecx,0x42ed7303
  41fa17:	test   eax,0xe70ecb59
  41fa1c:	pop    esi
  41fa1d:	push   cs
  41fa1e:	xchg   ebx,eax
  41fa1f:	sbb    edi,DWORD PTR [edi+0x37]
  41fa22:	les    edx,FWORD PTR [eax-0x19]
  41fa25:	cwde   
  41fa26:	xor    ebx,DWORD PTR [esi]
  41fa28:	jg     0x41fa17
  41fa2a:	mov    esi,0xab74012b
  41fa2f:	loope  0x41f9d0
  41fa31:	xor    dh,BYTE PTR [esi]
  41fa33:	pusha  
  41fa34:	or     al,0x9f
  41fa36:	fwait
  41fa37:	jge    0x41fa68
  41fa39:	inc    edx
  41fa3a:	xor    cl,BYTE PTR [edx]
  41fa3c:	fwait
  41fa3d:	jae    0x41f9d0
  41fa3f:	push   eax
  41fa40:	icebp  
  41fa41:	cmp    al,0xf5
  41fa43:	xchg   DWORD PTR [esi],ebp
  41fa45:	jge    0x41fa3f
  41fa47:	iret   
  41fa48:	xlat   BYTE PTR ds:[ebx]
  41fa49:	repnz sub dl,bh
  41fa4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa4d:	or     BYTE PTR [ebp+0x3ef419e5],ah
  41fa53:	aaa    
  41fa54:	dec    eax
  41fa55:	das    
  41fa56:	aaa    
  41fa57:	out    0x69,eax
  41fa59:	xchg   ebx,eax
  41fa5a:	pop    ds
  41fa5b:	loopne 0x41fa9a
  41fa5d:	(bad)  
  41fa5e:	jmp    0xf62d:0xcf7e87ea
  41fa65:	lods   eax,DWORD PTR ds:[esi]
  41fa66:	jnp    0x41fa95
  41fa68:	adc    eax,0x72e0d1ef
  41fa6d:	fdivr  DWORD PTR [esi]
  41fa6f:	sbb    BYTE PTR [eax-0x4f3e9aee],bl
  41fa75:	cmp    ecx,0x26
  41fa78:	adc    al,BYTE PTR [eax-0x4c]
  41fa7b:	dec    DWORD PTR [ebx]
  41fa7d:	jg     0x41fa83
  41fa7f:	in     al,0xf1
  41fa81:	hlt    
  41fa82:	push   cs
  41fa83:	push   ebp
  41fa84:	push   ds
  41fa85:	cli    
  41fa86:	cwde   
  41fa87:	(bad)  
  41fa88:	(bad)  
  41fa8a:	cmc    
  41fa8b:	dec    ebp
  41fa8c:	mov    eax,ds:0x243a16b3
  41fa91:	popa   
  41fa92:	pop    esp
  41fa93:	cmp    eax,0xe490ba70
  41fa98:	xor    eax,0x476a3a86
  41fa9d:	mov    BYTE PTR [eax+0x69],bh
  41faa0:	(bad)  
  41faa4:	mov    BYTE PTR [ecx+0x4],0xbf
  41faa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa9:	dec    esp
  41faaa:	sti    
  41faab:	adc    DWORD PTR [edi-0x230a47a4],0x3b
  41fab2:	jns    0x41faa6
  41fab4:	sar    DWORD PTR [ecx+0xab280a0],0xb4
  41fabb:	int    0x91
  41fabd:	jae    0x41fb29
  41fabf:	leave  
  41fac0:	add    BYTE PTR [esi+0x4e],al
  41fac3:	add    DWORD PTR [eax],ecx
  41fac5:	xchg   edi,eax
  41fac6:	fild   WORD PTR [eax]
  41fac8:	das    
  41fac9:	out    0xb2,al
  41facb:	xor    BYTE PTR [eax+0x41],0xe6
  41facf:	ins    DWORD PTR es:[edi],dx
  41fad0:	cmp    dh,BYTE PTR [edi]
  41fad2:	dec    ebx
  41fad3:	jo     0x41fb34
  41fad5:	mov    ds:0x1b5e2ecc,al
  41fada:	xor    al,BYTE PTR [ebx-0x5bf6165d]
  41fae0:	push   esi
  41fae1:	outs   dx,BYTE PTR ds:[esi]
  41fae2:	retf   
  41fae3:	mov    bh,0xd2
  41fae5:	cmp    bh,ch
  41fae7:	imul   ebx,DWORD PTR [esi],0xffffff9b
  41faea:	jl     0x41fb12
  41faec:	mov    ch,0x90
  41faee:	test   DWORD PTR [esi],ecx
  41faf0:	dec    esp
  41faf1:	jp     0x41face
  41faf3:	jg     0x41fb05
  41faf5:	add    BYTE PTR [edx],dh
  41faf7:	xor    DWORD PTR [eax],0x6b390dd7
  41fafd:	mov    cl,0x88
  41faff:	lods   al,BYTE PTR ds:[esi]
  41fb00:	das    
  41fb01:	fwait
  41fb02:	mov    eax,ds:0x826f572b
  41fb07:	mov    ds:0xe170416,al
  41fb0c:	cmp    eax,0x3c5a512
  41fb11:	adc    BYTE PTR [ecx-0x4f],bh
  41fb14:	(bad)  
  41fb15:	or     eax,0xc035d596
  41fb1a:	xchg   DWORD PTR [edx],esp
  41fb1c:	sub    dl,BYTE PTR [ebp-0x728a3c12]
  41fb22:	lock and ecx,DWORD PTR [esi+ecx*1+0x4d2da8e6]
  41fb2a:	ins    BYTE PTR es:[edi],dx
  41fb2b:	mov    al,BYTE PTR [edx+0x5]
  41fb2e:	add    DWORD PTR [eax],edx
  41fb30:	lea    eax,ds:0xe7b39a82
  41fb36:	rcl    edi,0x72
  41fb39:	ret    
  41fb3a:	jno    0x41fba5
  41fb3c:	(bad)  
  41fb3e:	mov    bh,0xc9
  41fb40:	cdq    
  41fb41:	mov    eax,0x488f49f5
  41fb46:	or     al,0x2a
  41fb48:	imul   edx,DWORD PTR [ebx-0x53bd84d8],0x19
  41fb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb50:	repz (bad) 
  41fb52:	push   edi
  41fb53:	and    eax,0xdf92181f
  41fb58:	and    al,0x94
  41fb5a:	inc    edx
  41fb5b:	sub    eax,0xb80e49d4
  41fb60:	mov    esp,DWORD PTR [edx-0x75]
  41fb63:	adc    eax,0x63c3d732
  41fb68:	adc    eax,edx
  41fb6a:	rcr    BYTE PTR [edi-0x30],0x4e
  41fb6e:	je     0x41fb14
  41fb70:	sub    ch,dl
  41fb72:	mov    DWORD PTR [eax],eax
  41fb74:	int3   
  41fb75:	mov    dh,0x62
  41fb77:	xchg   edx,eax
  41fb78:	add    BYTE PTR [edi+0xfd4ae55],cl
  41fb7e:	mov    ch,0xf7
  41fb80:	ins    BYTE PTR es:[edi],dx
  41fb81:	inc    edi
  41fb82:	addr16 xchg ebx,eax
  41fb84:	inc    ebp
  41fb85:	in     al,dx
  41fb86:	xor    eax,esi
  41fb88:	add    esp,edx
  41fb8a:	popf   
  41fb8b:	sub    eax,0xc9a4b885
  41fb90:	jae    0x41fb70
  41fb92:	xor    DWORD PTR [edx+0x6f],0xdd8e524c
  41fb99:	mov    dl,0x13
  41fb9b:	mov    edi,0x2bc65a5e
  41fba0:	stos   BYTE PTR es:[edi],al
  41fba1:	ret    0xc3af
  41fba4:	rcl    BYTE PTR [eax],1
  41fba6:	sub    BYTE PTR [edx],dh
  41fba8:	push   ecx
  41fba9:	jne    0x41fb57
  41fbab:	mov    eax,0xc42e850b
  41fbb0:	popa   
  41fbb1:	in     al,dx
  41fbb2:	pop    edx
  41fbb3:	adc    al,BYTE PTR [ebx]
  41fbb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb6:	or     BYTE PTR [edi-0x78],bh
  41fbb9:	mov    edi,DWORD PTR [ebx-0x53]
  41fbbc:	cs cmp eax,0x95d0fb23
  41fbc2:	in     eax,dx
  41fbc3:	bswap  ebx
  41fbc5:	div    BYTE PTR [esp+esi*1+0x70f7908c]
  41fbcc:	outs   dx,BYTE PTR ds:[esi]
  41fbcd:	xor    al,0xad
  41fbcf:	aam    0x5
  41fbd1:	mov    esi,0xb93bd49
  41fbd6:	imul   eax,DWORD PTR [ebp-0xdcbc226],0xb14bd02f
  41fbe0:	ins    BYTE PTR es:[edi],dx
  41fbe1:	mov    edx,DWORD PTR [esi+0x43]
  41fbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe5:	mov    dh,0x8
  41fbe7:	cld    
  41fbe8:	lock inc ebx
  41fbea:	ret    
  41fbeb:	xchg   esp,eax
  41fbec:	xor    BYTE PTR [ecx-0x26],bl
  41fbef:	jg     0x41fba8
  41fbf1:	inc    ecx
  41fbf2:	adc    ch,BYTE PTR [edi]
  41fbf4:	adc    DWORD PTR [eax+0x2e],eax
  41fbf7:	(bad)  
  41fbf8:	call   0x49256819
  41fbfd:	xchg   edx,eax
  41fbfe:	mov    eax,ds:0x9f1472e6
  41fc03:	inc    esp
  41fc04:	mov    ecx,0xc637f6e8
  41fc09:	pop    es
  41fc0a:	mov    al,ds:0x8a282a75
  41fc0f:	mov    esp,0xb1d77a5a
  41fc14:	stos   BYTE PTR es:[edi],al
  41fc15:	cmc    
  41fc16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc17:	scas   al,BYTE PTR es:[edi]
  41fc18:	and    DWORD PTR [ecx],esp
  41fc1a:	and    DWORD PTR [ecx+0xbd8277d],edx
  41fc20:	and    eax,0xaf9cf20a
  41fc25:	loopne 0x41fc8f
  41fc27:	xor    edx,DWORD PTR [esi-0x443fd887]
  41fc2d:	add    dh,BYTE PTR [ebp+0x113f522e]
  41fc33:	sub    DWORD PTR [ebp-0x16ae335c],ecx
  41fc39:	repnz pop esp
  41fc3b:	xor    ebp,edi
  41fc3d:	pop    ds
  41fc3e:	fdivr  st,st(7)
  41fc40:	jno    0x41fc74
  41fc42:	and    al,BYTE PTR [edi+0x65]
  41fc45:	sbb    al,0xec
  41fc47:	mov    al,0x3
  41fc49:	clc    
  41fc4a:	in     eax,dx
  41fc4b:	das    
  41fc4c:	adc    BYTE PTR [eax+esi*2+0x21a927b6],ch
  41fc53:	shl    BYTE PTR [edi+ecx*4+0x248faed8],0x8c
  41fc5b:	inc    edi
  41fc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc5d:	aad    0x73
  41fc5f:	pop    esi
  41fc60:	stos   BYTE PTR es:[edi],al
  41fc61:	shr    DWORD PTR [edx-0x20],cl
  41fc64:	js     0x41fc87
  41fc66:	cwde   
  41fc67:	(bad)  
  41fc68:	cli    
  41fc69:	popa   
  41fc6a:	ins    BYTE PTR es:[edi],dx
  41fc6b:	sar    BYTE PTR [edi],cl
  41fc6d:	scas   eax,DWORD PTR es:[edi]
  41fc6e:	stos   BYTE PTR es:[edi],al
  41fc6f:	loopne 0x41fcb7
  41fc71:	lods   eax,DWORD PTR ds:[esi]
  41fc72:	dec    ebp
  41fc73:	das    
  41fc74:	fs call 0x3280:0x2de1ffd
  41fc7c:	lock (bad) [ebx]
  41fc7f:	jns    0x41fcab
  41fc81:	dec    edx
  41fc82:	sbb    esi,ebp
  41fc84:	neg    BYTE PTR ds:0x50d9d0e9
  41fc8a:	call   0x9d96474c
  41fc8f:	mov    dh,BYTE PTR [eax+0x763bcf0d]
  41fc95:	out    0x21,eax
  41fc97:	push   ds
  41fc98:	rcl    ebp,1
  41fc9a:	pop    ebp
  41fc9b:	retf   0x5299
  41fc9e:	cmp    dh,bh
  41fca0:	mov    ah,0xa8
  41fca2:	enter  0x18e3,0x26
  41fca6:	jle    0x41fcad
  41fca8:	scas   al,BYTE PTR es:[edi]
  41fca9:	xor    bh,BYTE PTR [ebx+0x1e]
  41fcac:	jge    0x41fcca
  41fcae:	pop    ebp
  41fcaf:	in     al,0xef
  41fcb1:	jb     0x41fcfe
  41fcb3:	es sub al,0x2d
  41fcb6:	call   0xd7c96a76
  41fcbb:	cmp    bh,BYTE PTR [ebx-0x3212e5bc]
  41fcc1:	(bad)  
  41fcc2:	cld    
  41fcc3:	jne    0x41fc55
  41fcc5:	imul   eax,DWORD PTR [esi+ebp*4-0xdb983f],0x7c9c5823
  41fcd0:	push   ebx
  41fcd1:	out    dx,al
  41fcd2:	mov    ebx,0x9f0f336f
  41fcd7:	pop    ds
  41fcd8:	push   esi
  41fcd9:	test   BYTE PTR [edi+0x69ec8d58],ch
  41fcdf:	lods   eax,DWORD PTR ds:[esi]
  41fce0:	xor    ebx,esp
  41fce2:	getsec 
  41fce4:	leave  
  41fce5:	std    
  41fce6:	aad    0x60
  41fce8:	sub    eax,0xcc43a4c5
  41fced:	ins    DWORD PTR es:[edi],dx
  41fcee:	inc    ebx
  41fcef:	mov    dh,0xf9
  41fcf1:	cmp    DWORD PTR [eax+eax*2],ecx
  41fcf4:	push   edx
  41fcf5:	sub    DWORD PTR [ebx+0x74e0d6f0],ecx
  41fcfb:	xor    esp,edx
  41fcfd:	xchg   edx,eax
  41fcfe:	test   al,0xb5
  41fd00:	push   ebp
  41fd01:	push   edi
  41fd02:	mov    al,ds:0x3a075391
  41fd07:	cmp    dl,BYTE PTR [eax+0x46e8d4ae]
  41fd0d:	sbb    bl,bh
  41fd0f:	cs leave 
  41fd11:	xor    al,0xbe
  41fd13:	or     eax,0x3ddc0b57
  41fd18:	xor    al,0xf8
  41fd1a:	repnz rol eax,1
  41fd1d:	data16 loopne 0x41fd28
  41fd20:	test   DWORD PTR [ebx+0x4f],eax
  41fd23:	xor    DWORD PTR [esi],ebp
  41fd25:	fsubr  QWORD PTR [edx-0x64]
  41fd28:	ret    0x119
  41fd2b:	mov    eax,ds:0x61157726
  41fd30:	rol    DWORD PTR [ebx+0xc],cl
  41fd33:	lods   eax,DWORD PTR ds:[esi]
  41fd34:	popa   
  41fd35:	push   ebx
  41fd36:	ja     0x41fd45
  41fd38:	out    dx,al
  41fd39:	les    ebp,FWORD PTR [edx+0x46]
  41fd3c:	test   al,dl
  41fd3e:	push   es
  41fd3f:	add    DWORD PTR [esi+edx*8],eax
  41fd42:	mov    al,0x8b
  41fd44:	loop   0x41fd7b
  41fd46:	sbb    eax,0xd6ae6a9
  41fd4b:	jns    0x41fda5
  41fd4d:	mov    dl,0x7c
  41fd4f:	dec    ebp
  41fd50:	dec    edx
  41fd51:	xchg   ecx,eax
  41fd52:	jge    0x41fdb9
  41fd54:	shl    DWORD PTR [edx-0x7f],0xb3
  41fd58:	jne    0x41fd06
  41fd5a:	add    al,al
  41fd5c:	pop    ss
  41fd5d:	and    edi,DWORD PTR [esi+0x53546670]
  41fd63:	(bad)  
  41fd64:	fcmovnb st,st(6)
  41fd66:	pop    ebp
  41fd67:	sbb    al,0x9f
  41fd69:	xor    al,0xf4
  41fd6b:	les    ecx,FWORD PTR gs:[esi+0xc]
  41fd6f:	pop    ss
  41fd70:	dec    esi
  41fd71:	mov    eax,ds:0x17f8384b
  41fd76:	add    al,BYTE PTR gs:[ebx+0x2e]
  41fd7a:	xlat   BYTE PTR ds:[ebx]
  41fd7b:	and    DWORD PTR [edi+0x6dc56627],0xd76642c7
  41fd85:	xor    eax,edx
  41fd87:	int3   
  41fd88:	pop    ebp
  41fd89:	mov    edx,0xfb7690cc
  41fd8e:	push   0x6f0bfec1
  41fd93:	retf   0x5745
  41fd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd97:	sub    cl,BYTE PTR [eax+0x2b5cd427]
  41fd9d:	sbb    al,0x72
  41fd9f:	fcmovb st,st(0)
  41fda1:	or     DWORD PTR [ebx+0x6a],ecx
  41fda4:	adc    al,0xc
  41fda6:	into   
  41fda7:	sbb    bl,BYTE PTR [esi]
  41fda9:	mov    ebp,0x96e0070b
  41fdae:	mov    eax,ds:0x4716bb6c
  41fdb3:	dec    ebx
  41fdb4:	fldcw  WORD PTR [edx+0x1d]
  41fdb7:	pop    esi
  41fdb8:	lods   eax,DWORD PTR ds:[esi]
  41fdb9:	fldcw  WORD PTR [esi]
  41fdbb:	mov    WORD PTR [edi+ebp*2],es
  41fdbe:	out    dx,eax
  41fdbf:	scas   eax,DWORD PTR es:[edi]
  41fdc0:	dec    esp
  41fdc1:	xor    DWORD PTR [ebx+edi*1-0x36],eax
  41fdc5:	adc    ebx,DWORD PTR fs:[ebp-0x27f5122b]
  41fdcc:	adc    DWORD PTR [ebx-0x3ad55e9a],0x23
  41fdd3:	pop    ds
  41fdd4:	cmp    bl,BYTE PTR [esi]
  41fdd6:	adc    al,0xe6
  41fdd8:	sbb    DWORD PTR [ecx-0x3de53dcb],ebx
  41fdde:	inc    edx
  41fddf:	push   edi
  41fde0:	cdq    
  41fde1:	mov    ds:0x2d82df7d,eax
  41fde6:	into   
  41fde7:	inc    esi
  41fde8:	xchg   esp,eax
  41fde9:	dec    esi
  41fdea:	adc    DWORD PTR [ebp-0x6b],eax
  41fded:	std    
  41fdee:	sub    edi,DWORD PTR [edx+0x26]
  41fdf1:	push   edi
  41fdf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdf3:	jmp    0x5125:0xb09f1a0a
  41fdfa:	sti    
  41fdfb:	sti    
  41fdfc:	daa    
  41fdfd:	daa    
  41fdfe:	ror    BYTE PTR [edi-0x471e3e45],0x3
  41fe05:	cmp    DWORD PTR [edi-0x28],eax
  41fe08:	jb     0x41fddb
  41fe0a:	ins    BYTE PTR es:[edi],dx
  41fe0b:	and    ebp,DWORD PTR [edi+esi*2+0x5b]
  41fe0f:	mov    esi,0x60b34550
  41fe14:	mov    eax,ds:0x1ea86450
  41fe19:	sub    dh,al
  41fe1b:	cwde   
  41fe1c:	popf   
  41fe1d:	mov    DWORD PTR [ebp+0x2105226c],esi
  41fe23:	jmp    0x41fe89
  41fe25:	pop    esp
  41fe26:	jno    0x41fe4e
  41fe28:	and    ecx,esi
  41fe2a:	push   ss
  41fe2b:	aad    0x3d
  41fe2d:	std    
  41fe2e:	inc    edx
  41fe2f:	sbb    al,0xfb
  41fe31:	or     eax,DWORD PTR [edx+0x38]
  41fe34:	xchg   ebx,eax
  41fe35:	outs   dx,BYTE PTR ds:[esi]
  41fe36:	call   0x977bde0c
  41fe3b:	mov    al,fs:0xfa9716dc
  41fe41:	repz add ecx,DWORD PTR [edx]
  41fe44:	dec    ebp
  41fe45:	jae    0x41fe54
  41fe47:	adc    dh,dh
  41fe49:	add    DWORD PTR ds:0x1e988fe8,esp
  41fe4f:	out    0x8,al
  41fe51:	repnz push eax
  41fe53:	(bad)  
  41fe55:	lods   eax,DWORD PTR ds:[esi]
  41fe56:	sub    DWORD PTR ds:0x6e36421d,ebx
  41fe5c:	hlt    
  41fe5d:	lahf   
  41fe5e:	jb     0x41fe85
  41fe60:	(bad)  
  41fe61:	mov    esi,0x4cd49a74
  41fe66:	push   eax
  41fe67:	(bad)  
  41fe69:	mov    ebx,esp
  41fe6b:	jl     0x41fe31
  41fe6d:	mov    ecx,0xf52baa78
  41fe72:	fadd   QWORD PTR [eax+0x510638b4]
  41fe78:	sar    BYTE PTR [edi],cl
  41fe7a:	test   BYTE PTR [esi-0x76],ch
  41fe7d:	ins    BYTE PTR es:[edi],dx
  41fe7e:	call   0xfcfc7d18
  41fe83:	imul   ebp,DWORD PTR [edi-0x58361eee],0x45
  41fe8a:	arpl   si,di
  41fe8c:	pop    ss
  41fe8d:	ret    
  41fe8e:	retf   0x3535
  41fe91:	(bad)  
  41fe92:	pop    DWORD PTR [esi+ebp*4-0x3b]
  41fe96:	cmp    cl,al
  41fe98:	and    cl,bl
  41fe9a:	ret    0xc587
  41fe9d:	push   ss
  41fe9e:	fdiv   DWORD PTR [edi-0x1b]
  41fea1:	sbb    ebx,esp
  41fea3:	mov    ?,WORD PTR [esi-0x35efc95b]
  41fea9:	in     eax,dx
  41feaa:	or     ah,dh
  41feac:	mov    dh,0x1d
  41feae:	xchg   esi,eax
  41feaf:	inc    edx
  41feb0:	rcr    bh,1
  41feb2:	int    0xb2
  41feb4:	mov    dl,0xbb
  41feb6:	xchg   edx,eax
  41feb7:	popf   
  41feb8:	inc    edi
  41feb9:	adc    dh,BYTE PTR [eax-0x461a7150]
  41febf:	mov    eax,0xc3bda853
  41fec4:	outs   dx,DWORD PTR ds:[esi]
  41fec5:	jl     0x41fe94
  41fec7:	jg     0x41feea
  41fec9:	scas   al,BYTE PTR es:[edi]
  41feca:	cmp    al,BYTE PTR [eax+0x79]
  41fecd:	mov    ch,0xbb
  41fecf:	cmp    BYTE PTR [ecx-0x16fcbecc],ch
  41fed5:	sahf   
  41fed6:	pop    es
  41fed7:	into   
  41fed8:	pop    ebp
  41fed9:	pushf  
  41feda:	mov    WORD PTR [edx],es
  41fedc:	inc    ecx
  41fedd:	mov    ecx,0x15fca37e
  41fee2:	je     0x41ff08
  41fee4:	dec    ecx
  41fee5:	mov    esp,0xafba4b45
  41feea:	imul   ebx,ebx,0xffffff98
  41feed:	sbb    al,0x73
  41feef:	test   BYTE PTR es:[eax],0x14
  41fef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef4:	arpl   WORD PTR [ecx+0x14e49f87],bx
  41fefa:	fcomip st,st(3)
  41fefc:	fisubr DWORD PTR [ecx-0x71d30857]
  41ff02:	adc    ecx,DWORD PTR [ebx]
  41ff04:	lds    edi,FWORD PTR [ebx]
  41ff06:	xchg   edi,eax
  41ff07:	dec    ebp
  41ff08:	and    eax,0x99ce0b2d
  41ff0d:	pop    edi
  41ff0e:	xlat   BYTE PTR ds:[ebx]
  41ff0f:	aaa    
  41ff10:	push   edx
  41ff11:	adc    BYTE PTR [eax+esi*4-0x10],cl
  41ff15:	shl    DWORD PTR [ebx+0x69],0x72
  41ff19:	addr16 jmp 0xf545b4f4
  41ff1f:	outs   dx,BYTE PTR ds:[esi]
  41ff20:	adc    bh,ah
  41ff22:	popf   
  41ff23:	lds    ebp,FWORD PTR [eax]
  41ff25:	pop    esi
  41ff26:	gs out 0x75,al
  41ff29:	leave  
  41ff2a:	push   es
  41ff2b:	push   ebx
  41ff2c:	mov    ds:0xec2f989f,eax
  41ff31:	imul   DWORD PTR [edx]
  41ff33:	dec    ebx
  41ff34:	jns    0x41fef2
  41ff36:	xor    eax,0xc587dea6
  41ff3b:	loopne 0x41ff08
  41ff3d:	sar    BYTE PTR [ebp+0x46ccf1cc],0x40
  41ff44:	jmp    0x8ea54149
  41ff49:	rcl    BYTE PTR [ecx+edi*1-0x22bdba99],cl
  41ff50:	inc    esi
  41ff51:	call   0xafb0:0xd65d5c23
  41ff58:	xor    eax,0xc9655eb9
  41ff5d:	sti    
  41ff5e:	xchg   edx,eax
  41ff5f:	jns    0x41ff5f
  41ff61:	mov    bl,0xf9
  41ff63:	mov    eax,ds:0x9a1f517a
  41ff68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff69:	adc    al,BYTE PTR [edx]
  41ff6b:	mov    ch,0x71
  41ff6d:	push   edi
  41ff6e:	cmp    edi,DWORD PTR [esi-0x1a]
  41ff71:	mov    ah,0xa8
  41ff73:	xlat   BYTE PTR ds:[ebx]
  41ff74:	sub    bh,BYTE PTR [ecx+0x74]
  41ff77:	rcl    BYTE PTR [ecx],cl
  41ff79:	arpl   WORD PTR [esi+0x2],dx
  41ff7c:	cmp    al,0xb6
  41ff7e:	test   eax,0x44edca7b
  41ff83:	and    BYTE PTR [edi-0x3d32a5f9],0xf7
  41ff8a:	push   eax
  41ff8b:	dec    ebp
  41ff8c:	fld    QWORD PTR [ecx]
  41ff8e:	ficom  DWORD PTR [eax*8+0x3b029594]
  41ff95:	push   eax
  41ff96:	dec    esp
  41ff97:	mov    ch,0x3f
  41ff99:	pop    ds
  41ff9a:	mov    eax,0x6fe44936
  41ff9f:	or     bl,BYTE PTR [edi+ebp*2+0x1547887f]
  41ffa6:	call   0x6508:0x9629a240
  41ffad:	test   al,0x5c
  41ffaf:	xchg   edx,eax
  41ffb0:	xor    ch,ch
  41ffb2:	test   BYTE PTR [edx],dl
  41ffb4:	adc    edi,DWORD PTR [ebx]
  41ffb6:	adc    al,0x14
  41ffb8:	int3   
  41ffb9:	pushf  
  41ffba:	add    ecx,DWORD PTR [edi]
  41ffbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbd:	and    BYTE PTR [eax],ch
  41ffbf:	cli    
  41ffc0:	mov    ebp,esp
  41ffc2:	test   BYTE PTR [esi],dl
  41ffc4:	xchg   esi,eax
  41ffc5:	out    0xbf,eax
  41ffc7:	lds    eax,FWORD PTR [ecx+eiz*1-0x611d6bda]
  41ffce:	in     eax,dx
  41ffcf:	call   0x37e1836e
  41ffd4:	mov    eax,ds:0x3872247a
  41ffd9:	retf   0xae26
  41ffdc:	dec    edx
  41ffdd:	imul   ebp,DWORD PTR [ebp-0xe4eac4b],0xd9aec0b0
  41ffe7:	(bad)  
  41ffe8:	mov    ds:0x846cb3c1,eax
  41ffed:	mov    esi,0x3ed15cdf
  41fff2:	xchg   edi,eax
  41fff3:	jg     0x41ff8c
  41fff5:	adc    DWORD PTR [edi-0x581c122],ecx
  41fffb:	mov    DWORD PTR [edi+0x58],ecx
  41fffe:	jb     0x420057
  420000:	sbb    edi,DWORD PTR [edi+0x22]
  420003:	add    esi,DWORD PTR [esi+0x29]
  420006:	jmp    0x842d0b42
  42000b:	cmp    DWORD PTR [eax-0x2ec18b6a],esi
  420011:	les    esp,FWORD PTR [edi]
  420013:	dec    eax
  420014:	mov    bl,0x2f
  420016:	int    0x4b
  420018:	push   ds
  420019:	gs mov ch,0xee
  42001c:	dec    ebx
  42001d:	dec    edx
  42001e:	popf   
  42001f:	pop    gs
  420021:	xchg   BYTE PTR [edi-0x66],al
  420024:	sub    dl,BYTE PTR [edx+0x72]
  420027:	shr    DWORD PTR [esi+edx*8-0x7d0bd14f],cl
  42002e:	(bad)  
  42002f:	fwait
  420030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420031:	and    bl,dh
  420033:	push   esi
  420034:	cmp    eax,0xc5c8bdad
  420039:	push   es
  42003a:	lahf   
  42003b:	ret    
  42003c:	pop    ebp
  42003d:	aaa    
  42003e:	xchg   ebx,eax
  42003f:	fild   WORD PTR [ecx-0x66]
  420042:	mov    dl,0xa3
  420044:	add    al,0x8e
  420046:	pop    edi
  420047:	in     al,dx
  420048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420049:	mov    esp,0xdfc61501
  42004e:	outs   dx,BYTE PTR gs:[esi]
  420050:	cwde   
  420051:	repnz rol DWORD PTR [ebx-0x7c],cl
  420055:	in     al,0x1e
  420057:	adc    al,BYTE PTR [eax+0x1236fb1f]
  42005d:	test   edx,eax
  42005f:	mov    WORD PTR [esi+0x19],cs
  420062:	sub    bh,BYTE PTR [eax-0x381b0e84]
  420068:	or     al,0x8a
  42006a:	sub    BYTE PTR [esi],ah
  42006c:	and    BYTE PTR [esi],al
  42006e:	adc    al,0x3e
  420070:	adc    cl,BYTE PTR [ebp-0x6e]
  420073:	mov    ch,0x14
  420075:	(bad)  
  420076:	sbb    ebp,esi
  420078:	and    al,0x42
  42007a:	(bad)
  42007e:	cmp    dh,cl
  420080:	imul   eax,DWORD PTR ds:[edi+0x718cf891],0x2a4896e9
  42008b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008c:	xchg   ebp,eax
  42008d:	pop    ebp
  42008e:	xchg   edi,eax
  42008f:	sub    al,bl
  420091:	mov    esp,0x42bd19ef
  420096:	daa    
  420097:	cld    
  420098:	pop    ebx
  420099:	mov    dh,0x1f
  42009b:	enter  0x1d35,0x6e
  42009f:	jo     0x42011f
  4200a1:	jae    0x420114
  4200a3:	mov    al,ds:0xd9037e9c
  4200a8:	mov    BYTE PTR [esi-0x4e2aa71],al
  4200ae:	and    al,0x3f
  4200b0:	fwait
  4200b1:	xor    eax,0x65b4a1f2
  4200b6:	adc    ch,BYTE PTR [ebx]
  4200b8:	imul   ebx,DWORD PTR [bx+di+0x6b9d],0xfffffff8
  4200be:	push   ss
  4200bf:	call   0x34a8fadf
  4200c4:	cld    
  4200c5:	retf   0x5f33
  4200c8:	sbb    eax,0xf03eef8c
  4200cd:	lds    esp,FWORD PTR [ecx-0x25d679d7]
  4200d3:	out    0x69,al
  4200d5:	je     0x42011b
  4200d7:	mov    eax,ds:0x69d894b2
  4200dc:	cmp    ebx,DWORD PTR [ebp+eiz*2-0x48929191]
  4200e3:	std    
  4200e4:	mov    ch,0xb
  4200e6:	aam    0x41
  4200e8:	lds    ecx,FWORD PTR [eax-0x403931b]
  4200ee:	and    edi,esp
  4200f0:	sahf   
  4200f1:	dec    ebx
  4200f2:	arpl   WORD PTR [ebp-0x6bce9d2a],bx
  4200f8:	cmc    
  4200f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fa:	jno    0x420159
  4200fc:	icebp  
  4200fd:	rol    BYTE PTR [ebx+0x2aaf98e5],1
  420103:	scas   eax,DWORD PTR es:[edi]
  420104:	inc    edi
  420105:	loope  0x420097
  420107:	in     al,dx
  420108:	jno    0x420161
  42010a:	imul   esi,esi,0xffffffb2
  42010d:	cs push edi
  42010f:	push   esp
  420110:	les    ebx,FWORD PTR [edx+eax*1+0x1a]
  420114:	and    eax,0xa3f7fb45
  420119:	mov    ah,0xe1
  42011b:	sub    eax,0xd601c0bb
  420120:	(bad)  [ecx+ecx*2-0x63cdda2a]
  420127:	ins    DWORD PTR es:[edi],dx
  420128:	and    eax,0xff9344a4
  42012d:	es inc esi
  42012f:	imul   eax,DWORD PTR [eax-0x189708db],0x96164dcf
  420139:	and    edx,DWORD PTR [ecx+edi*2+0x44e2539c]
  420140:	jns    0x4200d1
  420142:	sbb    BYTE PTR [ecx],dh
  420144:	sub    ebx,DWORD PTR es:[esi-0xf]
  420148:	and    BYTE PTR [ebx],al
  42014a:	sbb    DWORD PTR [edi-0x7c],edx
  42014d:	pop    edi
  42014e:	in     eax,dx
  42014f:	add    eax,0xa4488b58
  420154:	jl     0x4201b7
  420156:	jno    0x420182
  420158:	fcmovne st,st(5)
  42015a:	add    BYTE PTR [eax],ch
  42015c:	and    ebx,ebp
  42015e:	loopne 0x420133
  420160:	nop
  420161:	xor    al,0xf5
  420163:	and    DWORD PTR [esi],edi
  420165:	or     ecx,DWORD PTR [eax]
  420167:	sbb    DWORD PTR [ebp+esi*8+0x73a1d1d2],esp
  42016e:	jnp    0x420163
  420170:	fs rol edx,0xe3
  420174:	xchg   esp,eax
  420175:	and    ebx,DWORD PTR [esi]
  420177:	mov    esp,0x4f28ef34
  42017c:	pushf  
  42017d:	lds    ebx,FWORD PTR [ebp+0x69]
  420180:	subps  xmm7,xmm6
  420183:	mov    eax,ds:0xc218989d
  420188:	mov    eax,ds:0xf4dce970
  42018d:	or     eax,0x9584ca37
  420192:	fadd   QWORD PTR [edx]
  420194:	outs   dx,BYTE PTR ds:[esi]
  420195:	jo     0x420172
  420197:	xor    eax,0x58e9bc18
  42019c:	jmp    0x4201e9
  42019e:	xor    ebp,DWORD PTR [edx]
  4201a0:	sahf   
  4201a1:	lods   eax,DWORD PTR ds:[esi]
  4201a2:	call   0xb485ba72
  4201a7:	hlt    
  4201a8:	cs lahf 
  4201aa:	add    BYTE PTR [ecx+0x59],bh
  4201ad:	mov    esi,0xf72f99e0
  4201b2:	jns    0x4201b2
  4201b4:	sub    DWORD PTR [eax-0x2b],eax
  4201b7:	in     eax,dx
  4201b8:	jmp    0xab85:0xe07635a9
  4201bf:	jge    0x4201b1
  4201c1:	loop   0x420176
  4201c3:	cld    
  4201c4:	mov    ds:0xfe60cbe3,al
  4201c9:	lds    eax,FWORD PTR [edi+0x36983ac6]
  4201cf:	repnz aam 0x49
  4201d2:	lds    ecx,FWORD PTR [edi+0x1c]
  4201d5:	xchg   DWORD PTR [eax-0x669a32b8],esp
  4201db:	call   0x2e20:0xb03a9957
  4201e2:	cmp    bh,BYTE PTR [edx+eax*4]
  4201e5:	dec    ecx
  4201e6:	cmp    al,0xab
  4201e8:	dec    esp
  4201e9:	mov    dl,0xb0
  4201eb:	xor    eax,0xd46e378c
  4201f0:	int    0x54
  4201f2:	test   esi,0xc149ed2e
  4201f8:	aas    
  4201f9:	and    dl,BYTE PTR [ebx+0x64a68afc]
  4201ff:	inc    ebx
  420200:	call   0x8b5b:0x577ac867
  420207:	xchg   edi,eax
  420208:	jg     0x4201b5
  42020a:	fidivr WORD PTR [edi+ebp*8+0x47]
  42020e:	push   ss
  42020f:	test   DWORD PTR [eax],ecx
  420211:	xchg   ecx,eax
  420212:	retf   
  420213:	add    BYTE PTR [eax-0x45dd3f9a],ah
  420219:	mov    edx,0xb03a6caf
  42021e:	or     cl,BYTE PTR [ebx]
  420220:	pop    esp
  420221:	les    edi,FWORD PTR [esi+0x5bdd05a7]
  420227:	jle    0x4201ab
  420229:	leave  
  42022a:	push   ecx
  42022b:	loopne 0x420238
  42022d:	dec    esi
  42022e:	jmp    0x2e65e892
  420233:	lods   eax,DWORD PTR ds:[esi]
  420234:	lea    edx,[esi+0xe5dc52c]
  42023a:	(bad)  
  42023b:	push   ds
  42023c:	xor    dh,cl
  42023e:	cmc    
  42023f:	xchg   edx,eax
  420240:	pop    ds
  420241:	mov    al,0xd5
  420243:	pop    eax
  420244:	push   esi
  420245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420246:	fwait
  420247:	jg     0x420224
  420249:	cdq    
  42024a:	push   es
  42024b:	jb     0x4202bd
  42024d:	push   es
  42024e:	dec    ebp
  42024f:	int3   
  420250:	inc    edi
  420251:	dec    eax
  420252:	mov    ah,0xc5
  420254:	pop    ecx
  420255:	cwde   
  420256:	test   eax,0xadb4f2b9
  42025b:	sub    dh,BYTE PTR [ecx+0x2b4e4e1d]
  420261:	imul   esi,esp,0xffffffca
  420264:	stos   DWORD PTR es:[edi],eax
  420265:	data16 arpl WORD PTR [ecx+0x2d],sp
  420269:	sub    dl,BYTE PTR [edi+0x706abf95]
  42026f:	sbb    DWORD PTR [ebx+0xe],edi
  420272:	jno    0x42021c
  420274:	mov    eax,ds:0xf3ab7f86
  420279:	adc    eax,0x2cebcabd
  42027e:	sbb    ah,al
  420280:	jge    0x4202fb
  420282:	add    DWORD PTR [edx+0x2eb83537],edi
  420288:	sar    BYTE PTR [ebx],0x7
  42028b:	rcl    BYTE PTR [ecx],0x49
  42028e:	and    BYTE PTR [edi+0x47bb036c],cl
  420294:	jno    0x4202ae
  420296:	push   ds
  420297:	aam    0xcf
  420299:	das    
  42029a:	loop   0x4202c3
  42029c:	xor    edi,ebp
  42029e:	or     al,0x9b
  4202a0:	mov    eax,ds:0x28d5c426
  4202a5:	fistp  QWORD PTR [edx+0x58]
  4202a8:	adc    DWORD PTR ds:0x9623b038,ebp
  4202ae:	jno    0x420289
  4202b0:	fild   WORD PTR [edx+ecx*8-0x45ad98f0]
  4202b7:	test   al,0xd7
  4202b9:	loopne 0x42026d
  4202bb:	jae    0x420285
  4202bd:	inc    edx
  4202be:	or     esi,edx
  4202c0:	or     eax,0x55ccc776
  4202c5:	pop    ecx
  4202c6:	dec    edi
  4202c7:	mov    ah,0x3b
  4202c9:	jne    0x4202a3
  4202cb:	lahf   
  4202cc:	pop    ebp
  4202cd:	lds    edx,FWORD PTR [edx-0x2bbaeedd]
  4202d3:	outs   dx,DWORD PTR ds:[esi]
  4202d4:	retf   
  4202d5:	rcr    BYTE PTR ds:0x329f77b5,0xbe
  4202dc:	adc    dh,cl
  4202de:	jmp    0x28c5:0xcd211b8b
  4202e5:	sub    eax,0xfc28c8a0
  4202ea:	es cdq 
  4202ec:	and    BYTE PTR [ecx+esi*8-0x2d7a7e71],0xcb
  4202f4:	cs sbb edx,eax
  4202f7:	push   edx
  4202f8:	out    dx,al
  4202f9:	mov    ebx,0xa0ee41c
  4202fe:	xor    BYTE PTR [ecx-0x2c],bh
  420301:	icebp  
  420302:	push   ss
  420303:	sub    al,0x48
  420305:	iret   
  420306:	sub    al,0x11
  420308:	dec    ebx
  420309:	adc    dl,BYTE PTR ds:0xa77f2227
  42030f:	mov    bh,0x7c
  420311:	aam    0x81
  420313:	mov    al,ds:0x56cf9d37
  420318:	ror    DWORD PTR [edx-0x7c],1
  42031b:	add    DWORD PTR [edx+0x5f],eax
  42031e:	and    ah,BYTE PTR [edx+0x21]
  420321:	pop    es
  420322:	and    dl,BYTE PTR [esi-0x5d53151]
  420328:	mov    ch,BYTE PTR [eax]
  42032a:	jecxz  0x420336
  42032c:	dec    edi
  42032d:	xor    bl,bl
  42032f:	mov    dh,0xd2
  420331:	ins    DWORD PTR es:[edi],dx
  420332:	pushf  
  420333:	jg     0x420383
  420335:	cmp    ah,ah
  420337:	out    dx,eax
  420338:	rdmsr  
  42033a:	and    al,0x91
  42033c:	and    al,0x1d
  42033e:	call   0xf174a410
  420343:	xchg   DWORD PTR [esi+0x64],edi
  420346:	fmul   QWORD PTR [ebx]
  420348:	cmp    ch,bh
  42034a:	ret    0xeb28
  42034d:	inc    edi
  42034e:	clc    
  42034f:	jge    0x420331
  420351:	pop    eax
  420352:	mov    eax,0xa38b937f
  420357:	xor    eax,0x26061573
  42035c:	jmp    0x17ab:0x19bbe917
  420363:	mov    bl,0x9e
  420365:	xchg   DWORD PTR [ebx+esi*8],ecx
  420368:	mov    es,WORD PTR [edi+0x3f]
  42036b:	in     eax,dx
  42036c:	(bad)  
  42036d:	ins    BYTE PTR es:[edi],dx
  42036e:	(bad)  
  42036f:	dec    edi
  420370:	xchg   esi,eax
  420371:	jle    0x420310
  420373:	scas   al,BYTE PTR es:[edi]
  420374:	mov    ebp,DWORD PTR [eax-0x5dc0b09d]
  42037a:	mov    ecx,0xae9083fb
  42037f:	dec    esp
  420380:	mov    DWORD PTR [ebx+ecx*8+0x56],ebp
  420384:	dec    esi
  420385:	pop    ss
  420386:	cmp    eax,0x6c10af6d
  42038b:	call   0x19977cdb
  420390:	sbb    esp,0xfcf51ad3
  420396:	ret    0x3439
  420399:	nop
  42039a:	mov    dl,BYTE PTR fs:[eax]
  42039d:	sbb    eax,0x5ec46fda
  4203a2:	das    
  4203a3:	push   ecx
  4203a4:	in     eax,dx
  4203a5:	add    DWORD PTR [edi-0x50],edi
  4203a8:	xlat   BYTE PTR ds:[bx]
  4203aa:	inc    edi
  4203ab:	xor    al,0x96
  4203ad:	je     0x4203b3
  4203af:	mov    WORD PTR ds:0xcd9aecb2,ss
  4203b5:	mov    ah,0xad
  4203b7:	into   
  4203b8:	loopne 0x4203e3
  4203ba:	jl     0x42036c
  4203bc:	jnp    0x420349
  4203be:	aad    0xb8
  4203c0:	test   DWORD PTR [eax+0x32e6007],esi
  4203c6:	jg     0x42036c
  4203c8:	rol    BYTE PTR [ebp-0x4],1
  4203cb:	xlat   BYTE PTR ds:[ebx]
  4203cc:	push   ss
  4203cd:	fsub   QWORD PTR [ebx-0x57b6b2a4]
  4203d3:	xchg   BYTE PTR [ebp-0x16],bl
  4203d6:	sub    eax,0x3bc2c808
  4203db:	cmc    
  4203dc:	push   edi
  4203dd:	jne    0x42037b
  4203df:	loop   0x42044d
  4203e1:	sbb    al,0x14
  4203e3:	add    DWORD PTR [esi-0x6d],0x13
  4203e7:	adc    eax,0xe5e5b1d6
  4203ec:	lds    edx,FWORD PTR [edx-0x46da3538]
  4203f2:	jp     0x420431
  4203f4:	cli    
  4203f5:	push   ebp
  4203f6:	fcom   QWORD PTR [edi]
  4203f8:	push   esi
  4203f9:	in     eax,0x48
  4203fb:	xchg   ecx,eax
  4203fc:	xor    esp,ebx
  4203fe:	sbb    edi,DWORD PTR [ecx]
  420400:	pop    ebp
  420401:	mov    ebp,ds
  420403:	(bad)  
  420405:	icebp  
  420406:	mov    ax,0x65b2
  42040a:	jmp    0x420391
  42040c:	sti    
  42040d:	std    
  42040e:	lahf   
  42040f:	das    
  420410:	lock adc eax,0x41a5dd11
  420416:	xor    DWORD PTR [edi+0x26],ebp
  420419:	outs   dx,DWORD PTR ds:[esi]
  42041a:	iret   
  42041b:	sahf   
  42041c:	retf   
  42041d:	mov    ebx,0xb8d449d4
  420422:	mov    ah,0x43
  420424:	mov    bl,0x9
  420426:	mov    eax,ds:0xebcf2f68
  42042b:	(bad)  
  42042c:	mov    eax,0x36a2cf4d
  420431:	xchg   DWORD PTR [edi],esp
  420433:	int    0x2d
  420435:	sar    BYTE PTR ds:0xd6d170ee,0xba
  42043c:	in     eax,0xbf
  42043e:	push   ebx
  42043f:	in     al,dx
  420440:	mov    al,0xd4
  420442:	in     eax,0x74
  420444:	jne    0x4203c9
  420446:	or     BYTE PTR [esi+0x3b],cl
  420449:	pop    ds
  42044a:	xchg   edx,eax
  42044b:	jbe    0x420469
  42044d:	mov    cl,0xdd
  42044f:	mov    DWORD PTR [eax-0x3c30d0f1],esp
  420455:	ret    
  420456:	je     0x420455
  420458:	ror    BYTE PTR [esi],0xbd
  42045b:	mov    ch,0xfa
  42045d:	inc    esp
  42045e:	gs push esp
  420460:	bnd jmp 0x420457
  420463:	push   edx
  420464:	aam    0x33
  420466:	push   0xc112e909
  42046b:	pushf  
  42046c:	pusha  
  42046d:	jmp    0x3156b73e
  420472:	or     eax,0xd027799e
  420477:	push   cs
  420478:	aaa    
  420479:	xor    eax,0x9f8b8b59
  42047e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42047f:	outs   dx,DWORD PTR ds:[esi]
  420480:	pop    edi
  420481:	cmp    DWORD PTR [ecx-0x223429fe],ebx
  420487:	adc    al,BYTE PTR [ebx+0x36d423b0]
  42048d:	popf   
  42048e:	retf   0x833b
  420491:	xor    BYTE PTR [edx],bl
  420493:	sbb    dl,BYTE PTR [edi+0x69a2e1b5]
  420499:	mov    ds:0x9e513f18,al
  42049e:	jg     0x42047d
  4204a0:	jmp    0x5c3064b5
  4204a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a6:	pop    esi
  4204a7:	mov    cl,0x56
  4204a9:	icebp  
  4204aa:	popa   
  4204ab:	sub    al,0xcf
  4204ad:	in     al,dx
  4204ae:	ds loope 0x42048e
  4204b1:	and    BYTE PTR [esi+0x8],al
  4204b4:	xor    dl,ch
  4204b6:	sti    
  4204b7:	call   0x26426b2
  4204bc:	lock and BYTE PTR [ebx+0x67],dh
  4204c0:	or     dl,BYTE PTR [eax-0x5c192268]
  4204c6:	retf   
  4204c7:	add    al,0x9e
  4204c9:	jmp    0x360ca2b3
  4204ce:	(bad)  
  4204d0:	inc    esi
  4204d1:	dec    edi
  4204d2:	xchg   ebx,eax
  4204d3:	pop    es
  4204d4:	inc    edi
  4204d5:	inc    esi
  4204d6:	fwait
  4204d7:	jnp    0x4204fd
  4204d9:	jns    0x4204e4
  4204db:	ret    0xf192
  4204de:	mov    ?,WORD PTR [edx+ecx*4+0x4d465bd3]
  4204e5:	(bad)  
  4204e6:	out    dx,eax
  4204e7:	out    dx,eax
  4204e8:	mov    bl,0xf1
  4204ea:	(bad)  
  4204eb:	pop    edi
  4204ec:	sbb    eax,0xb214612e
  4204f1:	(bad)  
  4204f3:	imul   edi,DWORD PTR [ebp-0x58],0x5a
  4204f7:	mov    eax,0x7780ac81
  4204fc:	ins    DWORD PTR es:[edi],dx
  4204fd:	push   ss
  4204fe:	lea    ebp,[edx]
  420500:	lds    edx,FWORD PTR [ebp-0x1ea2e4db]
  420506:	push   edx
  420507:	fistp  DWORD PTR [ecx+0x6f]
  42050a:	pop    esp
  42050b:	xor    BYTE PTR [edx-0x2e],ah
  42050e:	call   0x3b04:0xf5b6d3c2
  420515:	repz mov ah,0x68
  420518:	push   ebp
  420519:	jle    0x420563
  42051b:	push   es
  42051c:	jmp    0x4204f6
  42051e:	add    DWORD PTR [esi],esi
  420520:	mov    bl,0xc9
  420522:	pop    ss
  420523:	scas   eax,DWORD PTR es:[edi]
  420524:	pop    ebp
  420525:	in     al,0xf7
  420527:	imul   edi,esi,0x2e
  42052a:	xchg   edx,eax
  42052b:	push   edx
  42052c:	adc    eax,0xc8dad6a4
  420531:	lea    edx,[esi+edi*2-0x4a]
  420535:	in     eax,dx
  420536:	aam    0x34
  420538:	cs fadd st,st(5)
  42053b:	mov    eax,ds:0x56e4e2d3
  420540:	ret    0x1b04
  420543:	clc    
  420544:	(bad)  
  420545:	retf   
  420546:	(bad)  
  420547:	scas   eax,DWORD PTR es:[edi]
  420548:	pop    edi
  420549:	shr    esi,0xc2
  42054c:	les    esi,FWORD PTR [esi]
  42054e:	xchg   edi,eax
  42054f:	adc    DWORD PTR [esi+eax*2],eax
  420552:	xchg   DWORD PTR [edi],edi
  420554:	call   0x825c:0xfdbdecd8
  42055b:	stc    
  42055c:	push   ss
  42055d:	(bad)  
  42055e:	jne    0x4205dc
  420560:	jle    0x42054c
  420562:	pop    ds
  420563:	xchg   DWORD PTR [esi-0x5f4523bc],edi
  420569:	neg    BYTE PTR [esi-0x4c83b0d3]
  42056f:	outs   dx,BYTE PTR ds:[esi]
  420570:	push   eax
  420571:	in     eax,dx
  420572:	jecxz  0x42057a
  420574:	jno    0x4205c9
  420576:	jne    0x4205de
  420578:	xlat   BYTE PTR ds:[ebx]
  420579:	jns    0x420534
  42057b:	mov    DWORD PTR es:[esi],ecx
  42057e:	retf   
  42057f:	dec    ebp
  420580:	jmp    0x6c2e:0x22f9f4fa
  420587:	and    BYTE PTR [edx+0x29],ah
  42058a:	(bad)  
  42058c:	sub    esp,DWORD PTR [ebp-0x59]
  42058f:	and    BYTE PTR [esi-0x66],0x46
  420593:	mov    ebx,0xc74811a4
  420598:	dec    edi
  420599:	xchg   ebp,eax
  42059a:	(bad)  
  42059b:	jb     0x420545
  42059d:	ret    0xa6c1
  4205a0:	and    DWORD PTR [eax+eax*4],eax
  4205a3:	test   eax,0x66460cbb
  4205a8:	sbb    DWORD PTR [eax+0x4f],0x7bce6f4c
  4205af:	push   esi
  4205b0:	mov    dh,0xa2
  4205b2:	jns    0x4205b4
  4205b4:	jns    0x4205f3
  4205b6:	out    0x2c,eax
  4205b8:	dec    edx
  4205b9:	leave  
  4205ba:	into   
  4205bb:	inc    ecx
  4205bc:	pop    ecx
  4205bd:	out    dx,eax
  4205be:	cmc    
  4205bf:	or     BYTE PTR [edx+0x32],0xf9
  4205c3:	fld    QWORD PTR ds:0x4a5d0f07
  4205c9:	retf   0x3c45
  4205cc:	data16 or al,0x20
  4205cf:	dec    eax
  4205d0:	scas   al,BYTE PTR es:[edi]
  4205d1:	idiv   BYTE PTR [ecx]
  4205d3:	(bad)
  4205d6:	xchg   BYTE PTR ss:[esi-0xd5f5b0f],cl
  4205dd:	add    al,0xab
  4205df:	sub    al,0xd0
  4205e1:	push   cs
  4205e2:	aas    
  4205e3:	and    al,0xd0
  4205e5:	in     eax,dx
  4205e6:	rol    BYTE PTR [esp-0x57],1
  4205ea:	daa    
  4205eb:	dec    DWORD PTR [edx-0x2d493dd0]
  4205f1:	mov    BYTE PTR [eax-0x169e6609],ah
  4205f7:	or     eax,0x7849d7d4
  4205fc:	push   ebx
  4205fd:	fdiv   QWORD PTR [edi+ebx*8]
  420600:	and    cl,BYTE PTR [ebp-0x1c5678a5]
  420606:	push   cs
  420607:	push   ds
  420608:	jae    0x42066e
  42060a:	add    edi,DWORD PTR cs:[eax-0x1002ed9f]
  420611:	idiv   BYTE PTR [ecx]
  420613:	bound  ebx,QWORD PTR [ebp-0x6910cc85]
  420619:	retf   0x23d5
  42061c:	xchg   ebp,eax
  42061d:	js     0x42067f
  42061f:	(bad)
  420622:	cmc    
  420623:	xchg   ebx,eax
  420624:	sbb    BYTE PTR [edx],0x7f
  420627:	pushf  
  420628:	xchg   edi,eax
  420629:	out    0x70,eax
  42062b:	ss xchg edi,eax
  42062d:	lds    eax,FWORD PTR [esi-0x35223ef1]
  420633:	inc    esi
  420634:	out    dx,eax
  420635:	mov    esp,0xb6c74ecf
  42063a:	shr    DWORD PTR [edx+0x3],cl
  42063d:	mov    ebp,0x4806a20a
  420642:	jge    0x420686
  420644:	shl    esi,1
  420646:	and    DWORD PTR [ecx-0xb],edx
  420649:	inc    eax
  42064a:	test   DWORD PTR [esi-0x1e],0x9da455f1
  420651:	into   
  420652:	add    dl,BYTE PTR [edx-0x5e0b1fd1]
  420658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420659:	cmp    BYTE PTR [edi+esi*1+0x3f4e4204],bh
  420660:	imul   ebx,DWORD PTR [ebx+0x2eba559a],0xbf48de17
  42066a:	mov    ds:0x464437f1,eax
  42066f:	and    esp,edi
  420671:	push   esi
  420672:	shl    edx,1
  420674:	mov    ecx,0xe4616ba6
  420679:	dec    esp
  42067a:	imul   ecx,edi,0x5473c9df
  420680:	mov    ebx,0x6ca0ac90
  420685:	push   ds
  420686:	cli    
  420687:	mov    dl,0x66
  420689:	sub    eax,0xff8a82ad
  42068e:	push   cs
  42068f:	sbb    edi,edx
  420691:	mov    bh,0xc4
  420693:	popa   
  420694:	inc    edx
  420695:	loopne 0x42064e
  420697:	pop    esp
  420698:	rol    DWORD PTR [esi],1
  42069a:	jecxz  0x42064b
  42069c:	scas   eax,DWORD PTR es:[edi]
  42069d:	adc    al,0xb8
  42069f:	repnz pop eax
  4206a1:	or     eax,0xe698f588
  4206a6:	fild   DWORD PTR [edx+ebx*8+0x79a5feb2]
  4206ad:	dec    esi
  4206ae:	cmp    ebp,ebx
  4206b0:	mov    eax,ds:0x9c33d450
  4206b5:	xor    ebp,eax
  4206b7:	mov    dh,0x72
  4206b9:	xchg   ebp,eax
  4206ba:	call   ebx
  4206bc:	pop    ebx
  4206bd:	jae    0x420725
  4206bf:	push   ecx
  4206c0:	dec    ecx
  4206c1:	jle    0x420655
  4206c3:	mov    esi,0x35e26a80
  4206c8:	push   ds
  4206c9:	hlt    
  4206ca:	pop    edi
  4206cb:	push   0x2b3a1647
  4206d0:	call   0x78d0293a
  4206d5:	je     0x42074f
  4206d7:	lock into 
  4206d9:	xchg   ecx,eax
  4206da:	jmp    0xe578:0x8e771814
  4206e1:	jb     0x420720
  4206e3:	dec    bp
  4206e5:	and    esi,ebp
  4206e7:	adc    BYTE PTR [ebp+0x7b],bl
  4206ea:	mov    ebp,DWORD PTR [ebp+0x22]
  4206ed:	push   DWORD PTR [ebx]
  4206ef:	cmp    edx,DWORD PTR [esp+edx*8]
  4206f2:	or     BYTE PTR [eax-0x28c72ba],bl
  4206f8:	jae    0x420779
  4206fa:	ror    DWORD PTR [ebx+eiz*4-0x6b],1
  4206fe:	test   eax,0x4940d6a3
  420703:	aas    
  420704:	mov    ds:0xf8860dab,eax
  420709:	cmp    BYTE PTR [ecx],dl
  42070b:	out    dx,eax
  42070c:	js     0x420720
  42070e:	pop    ebx
  42070f:	sub    DWORD PTR [edi],0x84f6e987
  420715:	pop    ebp
  420716:	adc    al,0xed
  420718:	mov    esi,0x45cbd366
  42071d:	into   
  42071e:	jp     0x4206a5
  420720:	or     al,0x94
  420722:	jnp    0x4206c4
  420724:	pushf  
  420725:	pop    eax
  420726:	stos   BYTE PTR es:[edi],al
  420727:	in     al,dx
  420728:	lea    edx,[ebx+0x52]
  42072b:	jecxz  0x42074b
  42072d:	xchg   ax,ax
  42072f:	or     bh,0x60
  420732:	fistp  DWORD PTR [edx-0x54e3fd46]
  420738:	adc    eax,0x2b82305f
  42073d:	or     esp,DWORD PTR es:[edi+edi*8-0x39]
  420742:	mov    esp,0x191a609
  420747:	shr    BYTE PTR [eax+esi*4],0xba
  42074b:	xor    cl,BYTE PTR ds:0x2db03649
  420751:	fsub   QWORD PTR [edi-0x48c02958]
  420757:	or     DWORD PTR [edx*2+0x51c3dcef],esi
  42075e:	push   edi
  42075f:	jecxz  0x420798
  420761:	xor    BYTE PTR [edx-0x55],al
  420764:	push   edi
  420765:	shr    DWORD PTR [ebx],1
  420767:	add    ecx,esi
  420769:	stc    
  42076a:	sbb    BYTE PTR [edi-0x7909af4d],0x50
  420771:	je     0x4207da
  420773:	xchg   ebp,eax
  420774:	add    DWORD PTR [ecx+0x1ab8fa08],0x18
  42077b:	inc    ecx
  42077c:	dec    esi
  42077d:	mov    cl,0xb6
  42077f:	add    al,0x7f
  420781:	fstp   TBYTE PTR [edx]
  420783:	jns    0x42074f
  420785:	dec    esi
  420786:	mov    ds:0x704579bf,eax
  42078b:	sub    DWORD PTR [ecx+edx*4],ebx
  42078e:	mov    eax,ds:0xe58cbcf2
  420793:	xchg   BYTE PTR [ecx-0x43568221],dh
  420799:	xchg   ebx,eax
  42079a:	imul   ebx,ebp,0x7e7a0723
  4207a0:	(bad)
  4207a5:	aas    
  4207a6:	and    esi,DWORD PTR [ecx]
  4207a8:	(bad)  
  4207a9:	jmp    0x281e4c56
  4207ae:	jns    0x420808
  4207b0:	push   esp
  4207b1:	retf   
  4207b2:	mov    bl,0x50
  4207b4:	sar    BYTE PTR [ebx+0x37f07cc2],0xa
  4207bb:	sar    BYTE PTR [edx],0xa9
  4207be:	icebp  
  4207bf:	xchg   ebp,eax
  4207c0:	cs je  0x420825
  4207c3:	push   esi
  4207c4:	adc    DWORD PTR [edx-0x41],ecx
  4207c7:	cli    
  4207c8:	in     al,0xf3
  4207ca:	jnp    0x420809
  4207cc:	cli    
  4207cd:	retf   
  4207ce:	xchg   DWORD PTR [esp+edx*2-0x78],ebp
  4207d2:	loop   0x4207ee
  4207d4:	sbb    BYTE PTR [edx],ah
  4207d6:	test   DWORD PTR [ebx+0x62b36ba4],esp
  4207dc:	cwde   
  4207dd:	jno    0x4207e8
  4207df:	pop    ecx
  4207e0:	jecxz  0x420817
  4207e2:	sub    al,0xf2
  4207e4:	jmp    0x42077c
  4207e6:	les    ecx,FWORD PTR [esi+0x7baba31d]
  4207ec:	and    bl,BYTE PTR [edx-0x5782a9a6]
  4207f2:	push   ebp
  4207f3:	jmp    0x63846ffc
  4207f8:	loope  0x4207bd
  4207fa:	and    ecx,DWORD PTR [ebp+0x528460e3]
  420800:	sub    DWORD PTR [edi],0x41
  420803:	aad    0x5f
  420805:	add    DWORD PTR [esi+0x59ddf63e],0x38bc0e00
  42080f:	jae    0x4207e1
  420811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420812:	xchg   ebx,eax
  420813:	gs (bad) 
  420815:	loopne 0x420852
  420817:	sbb    eax,0x3f74d35f
  42081c:	pop    esp
  42081d:	push   0x94ee524a
  420822:	mov    dh,0xc4
  420824:	add    eax,0x57e73ce3
  420829:	sbb    al,0x60
  42082b:	lock out dx,al
  42082d:	mov    cl,0x5e
  42082f:	mov    edi,0x242b15de
  420834:	int    0xad
  420836:	pop    edx
  420837:	jle    0x420838
  420839:	xchg   esi,eax
  42083a:	cmp    eax,0xbeb63a75
  42083f:	and    edi,ebx
  420841:	xchg   edi,eax
  420842:	add    dl,dh
  420844:	sub    dl,BYTE PTR [edx]
  420846:	icebp  
  420847:	jle    0x420875
  420849:	idiv   DWORD PTR ds:0x87fd0aaf
  42084f:	in     al,dx
  420850:	mov    ch,BYTE PTR [ebp-0x3]
  420853:	popf   
  420854:	jb     0x4207ee
  420856:	pop    es
  420857:	sti    
  420858:	mov    esp,0x91cab40d
  42085d:	retf   
  42085e:	jecxz  0x4208df
  420860:	xchg   ebx,eax
  420861:	cld    
  420862:	in     eax,0xb0
  420864:	sbb    ah,ah
  420866:	jg     0x4207f3
  420868:	add    ecx,DWORD PTR [eax+0x47d2b8e1]
  42086e:	data16 (bad) 
  420870:	xchg   DWORD PTR [esi-0x43],eax
  420873:	js     0x4208ae
  420875:	shl    DWORD PTR [eax+ecx*8],cl
  420878:	xchg   ecx,eax
  420879:	jl     0x42086a
  42087b:	dec    esp
  42087c:	cmp    eax,0xf917419
  420881:	dec    eax
  420882:	jp     0x4208f0
  420884:	(bad)  
  420886:	mov    cl,0xbe
  420888:	or     bl,BYTE PTR [eax]
  42088a:	jmp    0xba1e:0x91d6100b
  420891:	mov    ebx,0x70e3e381
  420896:	mov    esi,0x1148da90
  42089b:	xchg   edx,eax
  42089c:	mov    ebp,0x8310492c
  4208a1:	sub    dl,BYTE PTR [eax-0x29]
  4208a4:	popf   
  4208a5:	sbb    al,0x50
  4208a7:	adc    ebx,ebx
  4208a9:	les    esp,FWORD PTR [ebp+0x249468a0]
  4208af:	xlat   BYTE PTR ds:[ebx]
  4208b0:	repz adc edi,DWORD PTR ds:0xb912dd43
  4208b7:	xchg   esp,eax
  4208b8:	or     ebp,DWORD PTR ds:0x76c47169
  4208be:	ss dec esp
  4208c1:	mov    edi,0xc4853f01
  4208c6:	push   esp
  4208c7:	jl     0x42084c
  4208c9:	jge    0x4208ca
  4208cb:	mov    cl,0x71
  4208cd:	ins    DWORD PTR es:[edi],dx
  4208ce:	pop    esi
  4208cf:	fwait
  4208d0:	loop   0x42085c
  4208d2:	or     cl,BYTE PTR [ecx+ecx*4]
  4208d5:	jbe    0x4208ef
  4208d7:	iret   
  4208d8:	adc    ebp,DWORD PTR [edx]
  4208da:	into   
  4208db:	xchg   edi,eax
  4208dc:	ins    BYTE PTR es:[edi],dx
  4208dd:	icebp  
  4208de:	mov    esp,0xa4ac7b95
  4208e3:	sti    
  4208e4:	xor    BYTE PTR [esi+0x77],ah
  4208e7:	cmp    dh,BYTE PTR [esi+0x5593ea7a]
  4208ed:	inc    BYTE PTR [eax]
  4208ef:	jo     0x420915
  4208f1:	pusha  
  4208f2:	jg     0x4208b6
  4208f4:	aas    
  4208f5:	lea    edi,[edi-0x3]
  4208f8:	sar    DWORD PTR [edi+edx*8-0x14],1
  4208fc:	sub    eax,0xb8a9ff36
  420901:	or     eax,esi
  420903:	and    al,BYTE PTR [esi-0x6faae600]
  420909:	pop    esp
  42090a:	aaa    
  42090b:	lahf   
  42090c:	pop    ss
  42090d:	cmp    DWORD PTR [ebp+0x7c],esp
  420910:	mov    ebp,0x992cf81c
  420915:	jp     0x4208ea
  420917:	mov    dh,0xba
  420919:	push   ds
  42091a:	pop    esp
  42091b:	push   0xffffffd2
  42091d:	mov    al,ds:0xea00a5f9
  420922:	dec    esi
  420923:	cdq    
  420924:	jb     0x420929
  420926:	jae    0x4208c7
  420928:	test   BYTE PTR [edi],ch
  42092a:	loope  0x42091b
  42092c:	repz dec eax
  42092e:	sub    edi,eax
  420930:	cmp    BYTE PTR [ecx-0x725266d6],cl
  420936:	pop    es
  420937:	add    BYTE PTR [esi-0x6d323359],cl
  42093d:	xor    cl,dh
  42093f:	mov    ss,WORD PTR [edi]
  420941:	pop    ds
  420942:	stos   BYTE PTR es:[edi],al
  420943:	or     DWORD PTR [ebp-0x21],ecx
  420946:	jbe    0x4208fa
  420948:	into   
  420949:	aad    0x41
  42094b:	(bad)  
  42094c:	loope  0x42091e
  42094e:	push   esi
  42094f:	int3   
  420950:	clc    
  420951:	adc    al,0xd0
  420953:	ja     0x4209c7
  420955:	nop
  420956:	pop    DWORD PTR [edi-0x3318a815]
  42095c:	sub    bl,BYTE PTR [ebp+0x3c]
  42095f:	call   0x7faad580
  420964:	push   eax
  420965:	xlat   BYTE PTR ds:[ebx]
  420966:	sahf   
  420967:	mov    edx,0x2a6b4c28
  42096c:	mov    ch,0xc
  42096e:	ret    0x24c0
  420971:	xlat   BYTE PTR ds:[ebx]
  420972:	mov    eax,edi
  420974:	sbb    al,0xb9
  420976:	or     bh,BYTE PTR [edx]
  420978:	mov    ds:0xffa76b3c,eax
  42097d:	cwde   
  42097e:	(bad)
  420982:	dec    ebx
  420983:	int3   
  420984:	dec    edi
  420985:	mov    edi,0x57957b7f
  42098a:	fld    QWORD PTR [edx+0x64584be2]
  420990:	xor    DWORD PTR [edi+0x2d],esi
  420993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420994:	mov    edi,DWORD PTR [ebx+edi*8]
  420997:	pop    eax
  420998:	push   edi
  420999:	hlt    
  42099a:	cmp    DWORD PTR [eax+eax*8],ebp
  42099d:	fist   WORD PTR [ebx-0x67fc578]
  4209a4:	sbb    al,0x5f
  4209a6:	dec    eax
  4209a7:	(bad)  
  4209a8:	fidivr DWORD PTR [edi+edx*8+0x681c9150]
  4209af:	sbb    ah,BYTE PTR [edi+edx*2]
  4209b2:	sbb    edx,edx
  4209b4:	xchg   ebx,eax
  4209b5:	and    al,0x8c
  4209b7:	push   edi
  4209b8:	jnp    0x4209ef
  4209ba:	mov    DWORD PTR ds:[ebx+0x57a545a3],esp
  4209c1:	mov    ebx,0x79c2d3e2
  4209c6:	sbb    al,0x70
  4209c8:	push   cs
  4209c9:	push   eax
  4209ca:	add    DWORD PTR [ebp-0x7c507a33],ecx
  4209d0:	dec    esi
  4209d1:	(bad)  
  4209d4:	pop    ebx
  4209d5:	sti    
  4209d6:	pop    ecx
  4209d7:	cli    
  4209d8:	ins    DWORD PTR es:[edi],dx
  4209d9:	push   ds
  4209da:	jecxz  0x420998
  4209dc:	xchg   edi,eax
  4209dd:	xchg   esi,eax
  4209de:	retf   0x7caa
  4209e1:	cmovle eax,DWORD PTR [ebx+eiz*1+0x45]
  4209e6:	sub    DWORD PTR [edx],ecx
  4209e8:	neg    BYTE PTR [ecx-0x11]
  4209eb:	lods   al,BYTE PTR ds:[esi]
  4209ec:	bound  esi,QWORD PTR [ecx-0x49ec6c00]
  4209f2:	inc    esp
  4209f3:	es aas 
  4209f5:	dec    ebx
  4209f6:	scas   eax,DWORD PTR es:[edi]
  4209f7:	mov    ch,0x6d
  4209f9:	mov    edi,0xc06a13ba
  4209fe:	jecxz  0x4209db
  420a00:	xlat   BYTE PTR ds:[ebx]
  420a01:	outs   dx,BYTE PTR ds:[esi]
  420a02:	push   ss
  420a03:	repz out dx,eax
  420a05:	jle    0x4209b2
  420a07:	sti    
  420a08:	push   edi
  420a09:	scas   al,BYTE PTR es:[edi]
  420a0a:	add    DWORD PTR ss:[eax+edi*8],ebp
  420a0e:	mov    ds:0xd9079035,eax
  420a13:	pop    ebx
  420a14:	cwde   
  420a15:	jne    0x420a65
  420a17:	adc    ah,0x8b
  420a1a:	neg    al
  420a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a1d:	hlt    
  420a1e:	adc    BYTE PTR [esi+ebx*2],0x4b
  420a22:	imul   ebp,ebx,0xc0ad84f
  420a28:	aas    
  420a29:	(bad)  
  420a2a:	retf   
  420a2b:	ss nop
  420a2d:	or     DWORD PTR [edx-0x6d],ecx
  420a30:	pop    es
  420a31:	popf   
  420a32:	sub    eax,0x93287c9f
  420a37:	dec    edx
  420a38:	iret   
  420a39:	in     eax,dx
  420a3a:	mov    ch,0x83
  420a3c:	outs   dx,BYTE PTR ds:[esi]
  420a3d:	push   ss
  420a3e:	cmp    BYTE PTR [edx-0x5e52471a],al
  420a44:	push   edx
  420a45:	std    
  420a46:	mov    dh,0x1f
  420a48:	xchg   edi,eax
  420a49:	gs retf 0x7578
  420a4d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420a4f:	inc    edx
  420a50:	ds jae 0x420a6c
  420a53:	add    dl,dh
  420a55:	xchg   DWORD PTR [esi-0x30],eax
  420a58:	iret   
  420a59:	test   DWORD PTR [ecx-0x59],ebp
  420a5c:	sbb    DWORD PTR [ebx],ebp
  420a5e:	jge    0xea917856
  420a64:	jg     0x420a82
  420a66:	dec    ecx
  420a67:	jno    0x420a6c
  420a69:	repnz sbb BYTE PTR [edi+ebp*8],dh
  420a6d:	add    DWORD PTR [ebx-0x58],eax
  420a70:	inc    esi
  420a71:	jecxz  0x420a81
  420a73:	popa   
  420a74:	outs   dx,DWORD PTR ds:[esi]
  420a75:	std    
  420a76:	jo     0x420a87
  420a78:	cmc    
  420a79:	arpl   WORD PTR [ecx-0x4b],si
  420a7c:	pop    ecx
  420a7d:	push   ebp
  420a7e:	inc    esp
  420a7f:	jmp    0xc0589a5a
  420a84:	ror    DWORD PTR [ebx-0x21],1
  420a87:	clc    
  420a88:	into   
  420a89:	shr    esp,1
  420a8b:	sbb    eax,0xc6e2af6d
  420a90:	jns    0x420ae7
  420a92:	inc    ebx
  420a93:	add    al,0xbc
  420a95:	sbb    BYTE PTR [eax+0x3d2c4c79],0xe4
  420a9c:	sar    BYTE PTR [eax-0x617db85d],0x19
  420aa3:	mov    bh,0xd9
  420aa5:	fst    st(3)
  420aa8:	hlt    
  420aa9:	mov    al,ds:0x5da61f97
  420aae:	adc    eax,0x60dbf9a2
  420ab3:	int3   
  420ab4:	sbb    ebp,DWORD PTR [esi+0x6e]
  420ab7:	xchg   esp,eax
  420ab8:	sbb    bh,BYTE PTR ds:0x4c655d75
  420abe:	push   eax
  420abf:	push   cs
  420ac0:	pcmpgtw mm6,mm7
  420ac3:	cmp    al,0xef
  420ac5:	pop    eax
  420ac6:	inc    esp
  420ac7:	test   DWORD PTR [eax-0x32df06d8],esp
  420acd:	and    esi,DWORD PTR [edx+eiz*8]
  420ad0:	ins    DWORD PTR es:[edi],dx
  420ad1:	bound  edi,QWORD PTR [eax+0x18]
  420ad4:	pop    edx
  420ad5:	push   ebp
  420ad6:	fcom   DWORD PTR [edi+0x63]
  420ad9:	push   ebx
  420ada:	jmp    0x61ad0fc1
  420adf:	icebp  
  420ae0:	in     al,dx
  420ae1:	dec    esp
  420ae2:	shl    BYTE PTR [esi-0x11911fce],1
  420ae8:	popf   
  420ae9:	rcr    DWORD PTR [edi],cl
  420aeb:	loop   0x420ab1
  420aed:	xchg   DWORD PTR [ebx+0x71],esp
  420af0:	rcr    DWORD PTR [esi-0x1c],1
  420af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420af4:	call   0x93f9d046
  420af9:	add    BYTE PTR [ecx-0x3e5d4ddf],al
  420aff:	cmp    eax,DWORD PTR [ecx]
  420b01:	dec    esi
  420b02:	dec    esp
  420b03:	fadd   DWORD PTR [ebx-0x7e]
  420b06:	(bad)  
  420b07:	out    0xd6,eax
  420b09:	fcmovne st,st(6)
  420b0b:	add    bh,BYTE PTR [edx]
  420b0d:	or     dh,BYTE PTR [eax]
  420b0f:	lea    ebp,[edi+0xe]
  420b12:	jmp    0x684b:0xa79800da
  420b19:	jo     0x420b62
  420b1b:	leave  
  420b1c:	xchg   esi,eax
  420b1d:	add    dh,BYTE PTR [edx]
  420b1f:	(bad)  
  420b20:	fsub   QWORD PTR [ecx]
  420b22:	mov    DWORD PTR [ebp-0x464e99f3],ebx
  420b28:	shl    BYTE PTR [eax],cl
  420b2a:	mov    edi,0xcf4d7708
  420b2f:	jle    0x420b23
  420b31:	sub    eax,0xdec4a5c3
  420b36:	stc    
  420b37:	shl    DWORD PTR [ecx*4+0x7d7fbf18],cl
  420b3e:	jno    0x420baf
  420b40:	push   edx
  420b41:	ret    
  420b42:	mov    ah,0x31
  420b44:	sub    eax,ecx
  420b46:	cmc    
  420b47:	mov    dh,0xfb
  420b49:	(bad)  
  420b4a:	adc    bl,bl
  420b4c:	aas    
  420b4d:	mov    ebp,0x2c90f25
  420b52:	or     BYTE PTR [esi],0x6f
  420b55:	mov    dl,dl
  420b57:	pop    edx
  420b58:	(bad)  
  420b59:	cmp    al,0x3c
  420b5b:	xchg   ebp,eax
  420b5c:	lock xor eax,0x7eddf3c0
  420b62:	sub    eax,0xda3e66c1
  420b67:	jmp    0x3784525e
  420b6c:	jmp    0xf9eb:0x329805b3
  420b73:	js     0x420b04
  420b75:	push   0xbe2c378
  420b7a:	cmp    al,0xc0
  420b7c:	dec    edi
  420b7d:	in     eax,dx
  420b7e:	in     al,0xc8
  420b80:	fild   DWORD PTR [edi+0x8]
  420b83:	and    DWORD PTR [edx],esp
  420b85:	xchg   ebx,eax
  420b86:	jne    0x420b61
  420b88:	push   es
  420b89:	cli    
  420b8a:	sub    ah,BYTE PTR [eax]
  420b8c:	jae    0x420bcb
  420b8e:	ret    0xc9e8
  420b91:	adc    BYTE PTR [edx],cl
  420b93:	or     BYTE PTR [eax+0x1f],ah
  420b96:	mov    DWORD PTR [edx+0x5ac104e4],esi
  420b9c:	push   cs
  420b9d:	pop    edi
  420b9e:	cmp    eax,DWORD PTR [eax]
  420ba0:	mul    BYTE PTR [edx+0x16009d8c]
  420ba6:	cmp    BYTE PTR [ecx+ebx*8-0x7a],bh
  420baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bab:	inc    ebp
  420bac:	(bad)  
  420bad:	ins    DWORD PTR es:[edi],dx
  420bae:	sub    esp,DWORD PTR [ecx+0x39b51b0d]
  420bb4:	mov    dl,ah
  420bb6:	into   
  420bb7:	ins    DWORD PTR es:[edi],dx
  420bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb9:	mov    ah,0xba
  420bbb:	cmc    
  420bbc:	adc    ah,BYTE PTR [ebx]
  420bbe:	fadd   st,st(5)
  420bc0:	jae    0x420b69
  420bc2:	jb     0x420be1
  420bc4:	cmp    al,0x31
  420bc6:	shl    BYTE PTR [ecx-0x6a],cl
  420bc9:	fdivr  DWORD PTR [edi+ebp*2]
  420bcc:	test   al,0x6b
  420bce:	mov    esp,0xc724885f
  420bd3:	pop    edi
  420bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bd5:	sbb    eax,0x2657a36f
  420bda:	fld    DWORD PTR [edx+0x66]
  420bdd:	aas    
  420bde:	jmp    0x420c5c
  420be0:	out    0xb6,al
  420be2:	mov    cl,BYTE PTR [edi-0x1041a04e]
  420be8:	popa   
  420be9:	(bad)  [ecx-0x5472c10c]
  420bef:	shl    DWORD PTR [edi-0x67],1
  420bf2:	(bad)  
  420bf3:	in     eax,0xea
  420bf5:	(bad)  
  420bf6:	xor    al,0x59
  420bf8:	sub    DWORD PTR [ecx-0x32],esi
  420bfb:	daa    
  420bfc:	outs   dx,DWORD PTR ds:[esi]
  420bfd:	in     al,0x49
  420bff:	out    0xe4,al
  420c01:	leave  
  420c02:	sub    al,0xf4
  420c04:	mov    ecx,DWORD PTR [ebx+0x1c154ea0]
  420c0a:	push   ebx
  420c0b:	addr16 jbe 0x420c72
  420c0e:	cld    
  420c0f:	lods   eax,DWORD PTR ds:[esi]
  420c10:	sbb    ebx,DWORD PTR [eax]
  420c12:	add    BYTE PTR [ebx],bh
  420c14:	xchg   ebp,eax
  420c15:	mov    ebx,0xb51ef1b2
  420c1a:	pop    ecx
  420c1b:	test   al,0xaa
  420c1d:	pop    ebx
  420c1e:	ja     0x420bcf
  420c20:	push   eax
  420c21:	daa    
  420c22:	jns    0x420c65
  420c24:	mov    dh,0x7d
  420c26:	std    
  420c27:	add    BYTE PTR gs:[ebx+0x57],dl
  420c2b:	mov    WORD PTR [ebp-0x1a],cs
  420c2e:	imul   ecx,edi,0xffffff84
  420c31:	es pop ebx
  420c33:	sar    DWORD PTR ds:[esi+0x1941bedd],0xad
  420c3b:	fisubr WORD PTR [edx+esi*4+0x47ef742]
  420c42:	add    eax,0xf193c958
  420c47:	popa   
  420c48:	loope  0x420c36
  420c4a:	push   0xfffffff3
  420c4c:	pop    edx
  420c4d:	fdiv   DWORD PTR [edi]
  420c4f:	xchg   esi,eax
  420c50:	push   esi
  420c51:	(bad)  
  420c53:	retf   0xd407
  420c56:	cmpxchg DWORD PTR [ecx-0x3f003464],esp
  420c5d:	lea    ecx,[ebx]
  420c5f:	push   0x20
  420c61:	call   0x7c81:0xe5167ab9
  420c68:	xchg   esi,eax
  420c69:	xchg   DWORD PTR [edx+0x5],edi
  420c6c:	jmp    0x420c17
  420c6e:	jp     0x420cb1
  420c70:	js     0x420c22
  420c72:	gs add eax,0xd1d9116d
  420c78:	mov    al,ds:0x8cc0ea4b
  420c7d:	mov    ds:0xcf3cdc72,al
  420c82:	mov    ds:0x4e3045b5,eax
  420c87:	gs push ss
  420c89:	inc    edx
  420c8a:	push   eax
  420c8b:	repnz xor dh,al
  420c8e:	and    al,0xe0
  420c90:	xchg   ecx,eax
  420c91:	pop    edi
  420c92:	lahf   
  420c93:	sbb    BYTE PTR [edi+0x6e],ch
  420c96:	call   0xd814871
  420c9b:	js     0x420cf8
  420c9d:	je     0x420c49
  420c9f:	jnp    0x420d09
  420ca1:	jle    0x420c8b
  420ca3:	sahf   
  420ca4:	xchg   edi,eax
  420ca5:	sub    eax,eax
  420ca7:	outs   dx,BYTE PTR ds:[esi]
  420ca8:	inc    edx
  420ca9:	fcmovb st,st(0)
  420cab:	shr    BYTE PTR [ebx],1
  420cad:	mov    ds:0x996decd,eax
  420cb2:	or     edi,DWORD PTR [edx+eax*1+0x6cf82fa7]
  420cb9:	aad    0x90
  420cbb:	mov    ds:0x5efaf8cb,al
  420cc0:	lds    esi,FWORD PTR [ecx-0x4b775d3]
  420cc6:	mov    esp,0xb22bcaaa
  420ccb:	xor    BYTE PTR [eax-0xc],al
  420cce:	push   es
  420ccf:	mov    bh,0x3c
  420cd1:	push   ss
  420cd2:	js     0x420c82
  420cd4:	push   edx
  420cd5:	xchg   esi,eax
  420cd6:	add    ebp,DWORD PTR [eax-0x352e2350]
  420cdc:	rol    BYTE PTR [ecx+0x146c4a25],0x6
  420ce3:	repnz clc 
  420ce5:	xchg   ebp,eax
  420ce6:	cmp    al,0xf8
  420ce8:	loope  0x420ced
  420cea:	mov    WORD PTR [edi+0x5d13fc4],gs
  420cf0:	pop    DWORD PTR [eax]
  420cf2:	mov    eax,0x5d9eb90c
  420cf7:	js     0x420d6f
  420cf9:	out    0xcd,al
  420cfb:	leave  
  420cfc:	rcr    DWORD PTR [edi],cl
  420cfe:	ds js  0x420cf2
  420d01:	lahf   
  420d02:	lods   al,BYTE PTR ds:[esi]
  420d03:	lods   eax,DWORD PTR ds:[esi]
  420d04:	inc    ecx
  420d05:	fwait
  420d06:	icebp  
  420d07:	test   eax,0xcd097857
  420d0c:	(bad)  
  420d0e:	mov    ch,BYTE PTR [ebx-0x6e0faf38]
  420d14:	sbb    DWORD PTR [edi],ebx
  420d16:	inc    ebx
  420d17:	lahf   
  420d18:	or     BYTE PTR ds:0x382b940c,0x7a
  420d1f:	ds jae 0x420ccf
  420d22:	aas    
  420d23:	mov    al,ds:0x540ef5
  420d28:	dec    ebx
  420d29:	fnsave ds:0x1124a276
  420d2f:	loop   0x420d95
  420d31:	addr16 call 0x2c9675aa
  420d37:	in     eax,dx
  420d38:	pop    ebp
  420d39:	mov    ecx,0xba1408d2
  420d3e:	or     BYTE PTR [eax+0x58bac9f5],ah
  420d44:	mov    edi,0x964e8be8
  420d49:	cld    
  420d4a:	test   al,0xc8
  420d4c:	je     0x420db5
  420d4e:	mov    esp,0xb2a09a6b
  420d53:	mov    ?,edi
  420d55:	aad    0x8a
  420d57:	jns    0x420d17
  420d59:	scas   eax,DWORD PTR es:[edi]
  420d5a:	sbb    BYTE PTR [esp+ecx*1+0x19],ah
  420d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5f:	cmp    al,0x28
  420d61:	xchg   edx,eax
  420d62:	push   esp
  420d63:	xchg   BYTE PTR ds:0x93b318a1,al
  420d69:	pop    esi
  420d6a:	xor    eax,0x7a5ec23e
  420d6f:	out    dx,al
  420d70:	inc    eax
  420d71:	cdq    
  420d72:	mov    eax,0xc3eb1018
  420d77:	loop   0x420dd5
  420d79:	data16 repz jmp 0x420d1b
  420d7d:	(bad)  
  420d7e:	mov    ebx,0xe9884c99
  420d83:	std    
  420d84:	fs inc edi
  420d86:	and    BYTE PTR [ecx-0x71366f29],dl
  420d8c:	or     eax,0xb1db77db
  420d91:	mov    ds:0xb45f210f,eax
  420d96:	inc    esi
  420d97:	and    ebx,DWORD PTR [esi-0x7014410e]
  420d9d:	push   ebx
  420d9e:	ja     0x420d23
  420da0:	fsubr  DWORD PTR [ecx]
  420da2:	push   cs
  420da3:	scas   eax,DWORD PTR es:[edi]
  420da4:	or     eax,0xe4f6385c
  420da9:	inc    ecx
  420daa:	loope  0x420d4f
  420dac:	sbb    al,0xdb
  420dae:	hlt    
  420daf:	add    DWORD PTR [esp+ecx*4],0xfb14d22a
  420db6:	stos   BYTE PTR es:[edi],al
  420db7:	imul   ebp,edi,0x452976c8
  420dbd:	mov    al,0x5e
  420dbf:	into   
  420dc0:	mov    esi,0x3a32a1c7
  420dc5:	pop    es
  420dc6:	les    ebx,FWORD PTR [ecx+0x1f]
  420dc9:	sbb    BYTE PTR [ebp-0x7a75c1af],cl
  420dcf:	ins    BYTE PTR es:[edi],dx
  420dd0:	ss dec edi
  420dd2:	xchg   sp,ax
  420dd4:	inc    eax
  420dd5:	adc    BYTE PTR [edi-0x1271fe11],dh
  420ddb:	jae    0x420d87
  420ddd:	push   ebx
  420dde:	xchg   ebp,eax
  420ddf:	mov    ebx,0x4e28d203
  420de4:	outs   dx,DWORD PTR ds:[esi]
  420de5:	fbstp  TBYTE PTR [edx+0x31]
  420de8:	adc    al,0xe
  420dea:	cmc    
  420deb:	jno    0x420e31
  420ded:	push   edx
  420dee:	aam    0xf5
  420df0:	inc    ebx
  420df1:	push   esp
  420df2:	cmp    eax,edx
  420df4:	cmc    
  420df5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  420df7:	fnstcw WORD PTR [edx+0x1b5717e4]
  420dfd:	(bad)  
  420dfe:	cwde   
  420dff:	mov    ds:0x95e485cb,eax
  420e04:	sbb    cl,0x2d
  420e07:	dec    esp
  420e08:	cmp    eax,0x8fb94266
  420e0d:	inc    edi
  420e0e:	jnp    0x420e04
  420e10:	test   DWORD PTR [eax-0x70497e26],esi
  420e16:	std    
  420e17:	(bad)  [ecx+0x67177122]
  420e1d:	pop    ebp
  420e1e:	fmul   DWORD PTR [edi-0x61]
  420e21:	out    dx,al
  420e22:	std    
  420e23:	mov    gs,WORD PTR [ebx]
  420e25:	sbb    ch,cl
  420e27:	adc    DWORD PTR [ebx],0xd287a0d1
  420e2d:	icebp  
  420e2e:	adc    bh,BYTE PTR [edi-0x76]
  420e31:	adc    ebp,DWORD PTR [edx-0x482364d8]
  420e37:	or     esi,ebp
  420e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e3a:	pop    ebx
  420e3b:	gs int 0x45
  420e3e:	add    al,0xa7
  420e40:	popf   
  420e41:	sub    eax,0x2575d727
  420e46:	sahf   
  420e47:	sbb    edx,DWORD PTR ds:0xb68a3a2b
  420e4d:	push   ss
  420e4e:	out    0x97,al
  420e50:	cmp    eax,0xa1a04629
  420e55:	and    al,0x7d
  420e57:	test   BYTE PTR [ecx],dh
  420e59:	and    eax,0x6ff020f8
  420e5e:	xchg   esi,eax
  420e5f:	sub    DWORD PTR cs:0xf0f6e8b8,edx
  420e66:	aam    0x8e
  420e68:	cli    
  420e69:	pop    edx
  420e6a:	pop    ecx
  420e6b:	pusha  
  420e6c:	(bad)  
  420e6d:	or     bh,BYTE PTR [ebp+ecx*8-0x7a]
  420e71:	fcom   st(2)
  420e73:	sti    
  420e74:	les    eax,FWORD PTR [edx-0x14]
  420e77:	adc    dh,BYTE PTR [esi+0x624b8f0d]
  420e7d:	adc    ebx,ecx
  420e7f:	(bad)  
  420e80:	outs   dx,DWORD PTR ds:[esi]
  420e81:	je     0x420e6c
  420e83:	scas   eax,DWORD PTR es:[edi]
  420e84:	sbb    esi,DWORD PTR [edi+0x6c]
  420e87:	sti    
  420e88:	xchg   edi,eax
  420e89:	mov    ebx,0x4bc8ef11
  420e8e:	shl    esi,cl
  420e90:	adc    BYTE PTR [ecx],cl
  420e92:	push   esi
  420e93:	or     dl,ah
  420e95:	inc    esp
  420e96:	inc    eax
  420e97:	pop    esp
  420e98:	cmc    
  420e99:	imul   esp,ebp
  420e9c:	(bad)  
  420e9d:	jl     0x420e43
  420e9f:	add    eax,0xedf62966
  420ea4:	mov    cl,0x40
  420ea6:	clc    
  420ea7:	addr16 push eax
  420ea9:	jo     0x420e91
  420eab:	lea    ebx,[ecx]
  420ead:	aam    0xc5
  420eaf:	mov    ecx,0x7e9df354
  420eb4:	hlt    
  420eb5:	sti    
  420eb6:	dec    ebx
  420eb7:	push   edx
  420eb8:	repnz clc 
  420eba:	xchg   ebp,eax
  420ebb:	mov    dh,0x94
  420ebd:	jp     0x420f3a
  420ebf:	test   eax,0x79e71bef
  420ec4:	dec    edi
  420ec5:	xchg   esi,eax
  420ec6:	pop    ss
  420ec7:	(bad)  
  420ec8:	fdivp  st(6),st
  420eca:	mov    esi,0xe488ca9b
  420ecf:	pop    edi
  420ed0:	dec    ebp
  420ed1:	mov    edx,0x9143b5eb
  420ed6:	loope  0x420ecf
  420ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed9:	sub    eax,0x9936ff8b
  420ede:	fbld   TBYTE PTR [esp+eiz*8+0x1866b2fc]
  420ee5:	cmp    al,0x7e
  420ee7:	mov    eax,ds:0x35962886
  420eec:	xchg   BYTE PTR [ebx+0x13c7f0bf],dh
  420ef2:	mov    esp,0x1e3f4b09
  420ef7:	jae    0x420f24
  420ef9:	push   ds
  420efa:	(bad)  
  420efb:	xchg   edi,eax
  420efc:	xor    al,0x5f
  420efe:	or     DWORD PTR ds:0x896bcb62,esp
  420f04:	cmp    DWORD PTR [edi+0x55],esp
  420f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f08:	push   esp
  420f09:	(bad)  
  420f0a:	mov    eax,ds:0xb774c16a
  420f0f:	push   ss
  420f10:	or     BYTE PTR [esi+0x71],0x2f
  420f14:	popf   
  420f15:	xchg   esp,eax
  420f16:	daa    
  420f17:	je     0x420f3c
  420f19:	push   ebx
  420f1a:	rcl    dl,cl
  420f1c:	push   cs
  420f1d:	fdivr  DWORD PTR [edi*8-0x42b5b929]
  420f24:	mov    ah,0x46
  420f26:	lahf   
  420f27:	jge    0x420ef8
  420f29:	shr    DWORD PTR [esi],0xe5
  420f2c:	push   ecx
  420f2d:	lds    ebx,FWORD PTR [edx+0x62c8cc06]
  420f33:	xor    cl,BYTE PTR [ebx-0x2d2ee80d]
  420f39:	adc    DWORD PTR [eax],edi
  420f3b:	popf   
  420f3c:	push   cs
  420f3d:	stos   DWORD PTR es:[edi],eax
  420f3e:	stc    
  420f3f:	pop    ebx
  420f40:	jns    0x420f6b
  420f42:	repnz out 0xa2,eax
  420f45:	cs xor ch,cl
  420f48:	mov    esi,0x149ab517
  420f4d:	mov    ah,0x4e
  420f4f:	cmp    bh,cl
  420f51:	jge    0x420ee6
  420f53:	pop    esp
  420f54:	lock adc BYTE PTR [bx+si+0x50de],bh
  420f5a:	data16 loope 0x420fb5
  420f5d:	or     al,0xfc
  420f5f:	repz adc DWORD PTR [edi],ecx
  420f62:	out    dx,al
  420f63:	pop    ebx
  420f64:	pop    ebp
  420f65:	mov    ebp,0xb90c35dd
  420f6a:	(bad)  
  420f6b:	mov    cl,0x80
  420f6d:	ss mov edx,ebp
  420f70:	and    BYTE PTR [ecx+0x1d],dl
  420f73:	fwait
  420f74:	test   DWORD PTR [ebp+0x5b],edx
  420f77:	sub    eax,0xc186e5a6
  420f7c:	cmp    al,0xdd
  420f7e:	push   0x4d
  420f80:	out    dx,eax
  420f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f82:	mov    ?,eax
  420f84:	or     bh,bl
  420f86:	clc    
  420f87:	call   DWORD PTR [eax+0x61]
  420f8a:	dec    esi
  420f8b:	cli    
  420f8c:	dec    edx
  420f8d:	test   BYTE PTR [eax-0x7a],ch
  420f90:	bound  edi,QWORD PTR [edi]
  420f92:	xchg   BYTE PTR [ebx],al
  420f94:	aaa    
  420f95:	fbld   TBYTE PTR [edi]
  420f97:	inc    ebx
  420f98:	popa   
  420f99:	cmp    dh,BYTE PTR [eax-0x6ff01c8d]
  420f9f:	dec    ecx
  420fa0:	xchg   ch,bl
  420fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa3:	mov    cs,WORD PTR [ebx+0x12]
  420fa6:	movd   DWORD PTR [edx-0x59de1ddb],mm5
  420fad:	and    ebx,DWORD PTR [edx-0x6c]
  420fb0:	hlt    
  420fb1:	in     al,dx
  420fb2:	sub    BYTE PTR [edi+edx*2],ch
  420fb5:	pop    esi
  420fb6:	popf   
  420fb7:	or     dh,BYTE PTR [eax]
  420fb9:	leave  
  420fba:	in     eax,0x8c
  420fbc:	cli    
  420fbd:	lds    ebx,FWORD PTR es:[esi]
  420fc0:	dec    eax
  420fc1:	sbb    al,0x2e
  420fc3:	pop    eax
  420fc4:	(bad)  
  420fc5:	jle    0x420fdf
  420fc7:	sbb    DWORD PTR [ecx],esp
  420fc9:	xor    eax,0x16e3fedd
  420fce:	mov    ebp,0x21c6ed4f
  420fd3:	cwde   
  420fd4:	adc    DWORD PTR [ebx-0x316c50e5],edx
  420fda:	sbb    ebx,DWORD PTR [ebx+0x58207dbb]
  420fe0:	dec    edx
  420fe1:	jmp    0x78921dd9
  420fe6:	addr16 imul esi,esi,0xffffffd8
  420fea:	sbb    BYTE PTR [esi],dh
  420fec:	and    BYTE PTR [eax],ah
  420fee:	sbb    DWORD PTR fs:[edi-0x4d53d043],esp
  420ff5:	pushf  
  420ff6:	ins    DWORD PTR es:[edi],dx
  420ff7:	jae    0x421015
  420ff9:	mov    gs,edx
  420ffb:	xor    bl,BYTE PTR [ebx]
  420ffd:	pop    ds
  420ffe:	mov    bh,0xc9
  421000:	rol    BYTE PTR [esi-0x59],cl
  421003:	cmp    ecx,esi
  421005:	sub    BYTE PTR [esi+0x1c03a275],0x53
  42100c:	push   edi
  42100d:	jo     0x420fe3
  42100f:	push   eax
  421010:	out    0x75,eax
  421012:	jne    0x420fbf
  421014:	test   DWORD PTR [eax+0xe],edx
  421017:	dec    esp
  421018:	dec    edi
  421019:	mov    al,ds:0x33501414
  42101e:	jo     0x420fc1
  421020:	pop    eax
  421021:	test   eax,0xe5a5f634
  421026:	xchg   edx,eax
  421027:	retf   
  421028:	dec    edx
  421029:	or     edx,edx
  42102b:	mov    ds:0x77a22c57,al
  421030:	int    0xea
  421032:	pop    ds
  421033:	std    
  421034:	mov    edx,0x50038d35
  421039:	test   BYTE PTR [edi-0x31db849f],0x4e
  421040:	jns    0x4210ba
  421042:	pop    ebp
  421043:	fbstp  TBYTE PTR [edi-0x799987a3]
  421049:	xchg   esi,eax
  42104a:	(bad)
  42104d:	mov    dl,0xbc
  42104f:	iret   
  421050:	dec    ebx
  421051:	push   esi
  421052:	jmp    FWORD PTR [esi]
  421054:	jg     0x42102d
  421056:	test   al,0xda
  421058:	(bad)  
  421059:	shl    BYTE PTR [edi-0x496e215c],1
  42105f:	jp     0x421010
  421061:	ror    BYTE PTR [ecx],1
  421063:	lea    ebp,[edi+0x13]
  421066:	sbb    DWORD PTR [ebx+0x7f5c3a53],esi
  42106c:	imul   DWORD PTR [ebx-0x51]
  42106f:	(bad)  
  421071:	push   cs
  421072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421073:	push   edx
  421074:	or     al,0xcc
  421076:	loop   0x42108a
  421078:	aas    
  421079:	neg    ebp
  42107b:	inc    esi
  42107c:	inc    edx
  42107d:	adc    al,0xe8
  42107f:	pop    eax
  421080:	sub    ebp,DWORD PTR [edx+0x4597ab45]
  421086:	(bad)  [ebp+0x49aa345b]
  42108c:	lock rol BYTE PTR [ebx+0x48],0x3
  421091:	push   ebx
  421092:	nop
  421093:	xchg   BYTE PTR [eax+0x68390d18],bl
  421099:	pop    eax
  42109a:	adc    bh,BYTE PTR [edi]
  42109c:	push   esi
  42109d:	pop    eax
  42109e:	out    dx,eax
  42109f:	mov    eax,ds:0x550dbf9e
  4210a4:	shl    DWORD PTR ds:0x34d8a219,1
  4210aa:	call   DWORD PTR [edx+0x22]
  4210ad:	icebp  
  4210ae:	pop    es
  4210af:	out    dx,al
  4210b0:	jae    0x421086
  4210b2:	and    eax,0x47e76856
  4210b7:	mov    ebx,0xf9714df2
  4210bc:	adc    eax,0x1daf40b6
  4210c1:	(bad)  
  4210c2:	cs dec edx
  4210c4:	push   esi
  4210c5:	mov    esi,0x9d6e5ba5
  4210ca:	xchg   ebp,eax
  4210cb:	(bad)  
  4210cc:	ffree  st(6)
  4210ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210cf:	dec    ebp
  4210d0:	out    dx,eax
  4210d1:	and    al,0xbf
  4210d3:	inc    ecx
  4210d4:	add    dh,BYTE PTR [ebx]
  4210d6:	cmp    eax,0xb4627de2
  4210db:	ins    DWORD PTR es:[edi],dx
  4210dc:	das    
  4210dd:	and    al,0x91
  4210df:	jno    0x4210d7
  4210e1:	mov    ah,0x72
  4210e3:	jmp    0x42113f
  4210e5:	jmp    0x42106c
  4210e7:	mov    ds:0xbd8ad8fe,eax
  4210ec:	test   bh,dl
  4210ee:	ror    dh,1
  4210f0:	sbb    eax,0x8cc8f4b5
  4210f5:	loopne 0x4210a7
  4210f7:	adc    al,0x59
  4210f9:	outs   dx,BYTE PTR ds:[esi]
  4210fa:	aam    0xfd
  4210fc:	jno    0x421093
  4210fe:	adc    al,0xaf
  421100:	dec    edx
  421101:	sub    ah,ch
  421103:	das    
  421104:	jmp    DWORD PTR [ecx+0x23]
  421107:	xchg   edx,eax
  421108:	inc    edi
  421109:	pop    esp
  42110a:	loop   0x42112c
  42110c:	or     al,0xa6
  42110e:	add    eax,0x8028c113
  421113:	jle    0x4210d1
  421115:	pusha  
  421116:	xchg   BYTE PTR [ebx+0x18],bh
  421119:	out    dx,al
  42111a:	out    dx,al
  42111b:	not    BYTE PTR [edi]
  42111d:	retf   
  42111e:	jecxz  0x42115a
  421120:	inc    esp
  421121:	push   0x7a
  421123:	xchg   ebp,eax
  421124:	pop    esp
  421125:	and    bl,BYTE PTR [ebx]
  421127:	sbb    esi,DWORD PTR [edx+0x7306abf3]
  42112d:	js     0x421137
  42112f:	add    eax,0x1279bfae
  421134:	pop    ds
  421135:	das    
  421136:	nop
  421137:	jns    0x421128
  421139:	adc    edx,ebp
  42113b:	cdq    
  42113c:	jg     0x4210ef
  42113e:	add    ebp,ecx
  421140:	(bad)  
  421141:	leave  
  421142:	les    eax,FWORD PTR [edx+ebx*1+0xa]
  421146:	bound  ebp,QWORD PTR [edx-0x79]
  421149:	push   esp
  42114a:	mov    al,0x6f
  42114c:	mov    al,ds:0x8cb6e201
  421151:	fwait
  421152:	mov    ebp,0x9c97adad
  421157:	cmp    BYTE PTR [eax],bh
  421159:	lea    ebp,[eax]
  42115b:	pop    es
  42115c:	popa   
  42115d:	mov    bh,0x61
  42115f:	and    eax,0xcb0f9369
  421164:	sub    bh,BYTE PTR [esp]
  421167:	dec    edx
  421168:	fnsave [ebp+0x3b]
  42116b:	out    dx,al
  42116c:	xor    BYTE PTR [esi-0x73d03296],dl
  421172:	xchg   ebp,eax
  421173:	push   ebp
  421174:	inc    ebx
  421175:	je     0x421175
  421177:	fdivrp st(6),st
  421179:	xor    eax,0xffd4a295
  42117e:	outs   dx,DWORD PTR ds:[esi]
  42117f:	mov    edi,0x68318cc6
  421184:	dec    esi
  421185:	dec    eax
  421186:	mov    ds:0x73276ec4,eax
  42118b:	mov    WORD PTR [ebp-0x33],ss
  42118e:	div    DWORD PTR [ebp-0x43171f77]
  421194:	jg     0x42120a
  421196:	adc    dl,BYTE PTR [esi]
  421198:	lods   al,BYTE PTR ds:[esi]
  421199:	sbb    al,0xfa
  42119b:	sbb    eax,0xf0ae99e1
  4211a0:	(bad)  
  4211a2:	inc    ecx
  4211a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a4:	pop    ebx
  4211a5:	int    0xf3
  4211a7:	pop    ss
  4211a8:	in     eax,0x31
  4211aa:	daa    
  4211ab:	push   cs
  4211ac:	sub    ecx,DWORD PTR [edx+ebx*1-0x61]
  4211b0:	jmp    0x63383f11
  4211b5:	js     0x4211c3
  4211b7:	adc    eax,0x75e0936f
  4211bc:	gs pop es
  4211be:	sub    bl,BYTE PTR [eax+0x4dcb9bc1]
  4211c4:	sbb    DWORD PTR [edi+0x4c],esi
  4211c7:	lock out 0xfa,eax
  4211ca:	outs   dx,BYTE PTR ds:[esi]
  4211cb:	aad    0xc9
  4211cd:	sub    BYTE PTR [esi+0x4fa2070a],cl
  4211d3:	sub    DWORD PTR [eax-0x22],eax
  4211d6:	cwde   
  4211d7:	dec    DWORD PTR [ebp-0x3a6cc89f]
  4211dd:	and    eax,0x1779345b
  4211e2:	popf   
  4211e3:	xor    bl,BYTE PTR [edx-0x17]
  4211e6:	int    0x24
  4211e8:	inc    esi
  4211e9:	into   
  4211ea:	jb     0x421206
  4211ec:	je     0x421241
  4211ee:	mov    ch,0x74
  4211f0:	not    DWORD PTR [edx+0x34]
  4211f3:	push   ss
  4211f4:	lahf   
  4211f5:	inc    edx
  4211f6:	or     bh,bl
  4211f8:	jns    0x42117f
  4211fa:	pop    ds
  4211fb:	jb     0x421225
  4211fd:	sbb    dl,BYTE PTR [esi+ebp*4+0x60]
  421201:	lahf   
  421202:	or     DWORD PTR [eax-0x6fec011],ecx
  421208:	mov    edx,0xc61fe5ba
  42120d:	push   0x91b15faa
  421212:	xor    edi,DWORD PTR [eax-0x4a327f48]
  421218:	(bad)  
  421219:	retf   0x54fd
  42121c:	mov    ah,0xbe
  42121e:	scas   al,BYTE PTR es:[edi]
  42121f:	dec    esi
  421220:	inc    dh
  421222:	lock inc ebx
  421224:	hlt    
  421225:	xor    BYTE PTR [ebp+0xa],ch
  421228:	cld    
  421229:	add    DWORD PTR [ebx],ecx
  42122b:	cmp    esi,DWORD PTR [eax-0x7f]
  42122e:	enter  0x1b19,0xba
  421232:	dec    ebp
  421233:	lds    esi,FWORD PTR [edx]
  421235:	psrlw  mm5,mm2
  421238:	xchg   edx,eax
  421239:	scas   eax,DWORD PTR es:[edi]
  42123a:	es jne 0x4211c9
  42123d:	scas   al,BYTE PTR es:[edi]
  42123e:	adc    eax,0xa2aea7df
  421243:	inc    esi
  421244:	or     al,0x56
  421246:	bound  eax,QWORD PTR [edi-0x24]
  421249:	cld    
  42124a:	fidivr DWORD PTR [ebp+0x2fb0c9e8]
  421250:	test   DWORD PTR [eax+eax*1+0x51],ebp
  421254:	(bad)  
  421255:	mov    esi,0x91d3fceb
  42125a:	pop    eax
  42125b:	push   0xfaa09eed
  421260:	adc    esp,esp
  421262:	xor    dl,bl
  421264:	or     DWORD PTR [ecx-0x83e4c5e],0xe8b57e2b
  42126e:	dec    esi
  42126f:	push   eax
  421270:	sub    BYTE PTR [ecx],ah
  421272:	daa    
  421273:	enter  0x5fab,0xff
  421277:	popf   
  421278:	shl    BYTE PTR [ecx-0x68],0x87
  42127c:	mov    es,WORD PTR [ebx]
  42127e:	cmp    al,BYTE PTR [edx+eiz*1+0x5234fc18]
  421285:	in     al,dx
  421286:	leave  
  421287:	retf   0x56f7
  42128a:	call   0xf8c02559
  42128f:	bound  esi,QWORD PTR [edx+0x345f4cd3]
  421295:	aaa    
  421296:	lock popf 
  421298:	dec    esi
  421299:	repnz pop ebx
  42129b:	sbb    bl,dl
  42129d:	leave  
  42129e:	mov    edx,?
  4212a0:	(bad)  [ebp+ebx*1-0x53]
  4212a4:	popa   
  4212a5:	into   
  4212a6:	and    BYTE PTR [edi+ebp*1-0x2e],dl
  4212aa:	fwait
  4212ab:	gs add al,0xb1
  4212ae:	addr16 pop eax
  4212b0:	ds jmp 0x5c4d:0x5ee174e9
  4212b8:	les    esp,FWORD PTR [esi]
  4212ba:	add    ebp,DWORD PTR [ecx]
  4212bc:	addr16 popf 
  4212be:	call   0xaec7:0xb9a7cc3d
  4212c5:	daa    
  4212c6:	or     al,0x1
  4212c8:	in     eax,0xc2
  4212ca:	adc    al,cl
  4212cc:	xor    BYTE PTR [esi+0x48],cl
  4212cf:	xchg   edx,edi
  4212d1:	jno    0x42130a
  4212d3:	adc    ecx,DWORD PTR [ecx-0x42b8bb2a]
  4212d9:	cmc    
  4212da:	fimul  DWORD PTR [ecx+ebx*4]
  4212dd:	fisub  WORD PTR [eax+0x59e1e4dc]
  4212e3:	or     eax,0x20d1d552
  4212e8:	ror    eax,0x46
  4212eb:	inc    ecx
  4212ec:	lods   al,BYTE PTR ds:[esi]
  4212ed:	fisub  WORD PTR [ebx]
  4212ef:	ss in  eax,0x74
  4212f2:	mov    al,ds:0x5d6bb8bd
  4212f7:	push   0x24
  4212f9:	(bad)  
  4212fa:	pop    ss
  4212fb:	push   ebp
  4212fc:	data16 std 
  4212fe:	mov    al,0x89
  421300:	cld    
  421301:	adc    BYTE PTR [edi],cl
  421303:	iret   
  421304:	cwde   
  421305:	ja     0x42131c
  421307:	mov    edi,0x93fa932c
  42130c:	adc    ebx,DWORD PTR [ebx-0x7]
  42130f:	popa   
  421310:	imul   ecx,DWORD PTR [ebp+0x4e],0x2d2fd358
  421317:	xchg   ecx,eax
  421318:	les    ecx,FWORD PTR [edx]
  42131a:	(bad)  
  42131b:	lea    ecx,[ecx]
  42131d:	sahf   
  42131e:	add    ecx,esp
  421320:	cld    
  421321:	lar    eax,WORD PTR [eax]
  421324:	dec    eax
  421325:	mov    ecx,0xf8344ce9
  42132a:	inc    edi
  42132b:	das    
  42132c:	test   eax,0x8bc96649
  421331:	mov    ah,BYTE PTR [eax]
  421333:	aad    0x26
  421335:	mov    ecx,eax
  421337:	repz xchg edx,eax
  421339:	shl    DWORD PTR [edx],cl
  42133b:	sbb    eax,0x8f9794c1
  421340:	imul   edx,DWORD PTR ds:0x31c47483,0xefd480c3
  42134a:	out    dx,eax
  42134b:	mov    edx,0x8ccfa263
  421350:	or     dh,bl
  421352:	clc    
  421353:	inc    edx
  421354:	icebp  
  421355:	xchg   esi,eax
  421356:	mov    ds:0xa8e793e6,al
  42135b:	ss sbb eax,ecx
  42135e:	jl     0x42138d
  421360:	ss ret 0xcc02
  421364:	int3   
  421365:	jmp    0x94623e91
  42136a:	fdiv   st,st(7)
  42136c:	aad    0xa
  42136e:	mov    ebx,0x5237299e
  421373:	fidivr WORD PTR [ecx-0x3e]
  421376:	mov    ah,BYTE PTR [edx-0x15eeeb30]
  42137c:	mov    eax,ds:0x7ffd9813
  421381:	and    DWORD PTR [edi],0xc4bd0e82
  421387:	(bad)  
  421388:	fcom   QWORD PTR [esi+0x6d5cdad1]
  42138e:	add    al,0x3
  421390:	pop    ecx
  421391:	aam    0x63
  421393:	out    0x54,al
  421395:	outs   dx,BYTE PTR ds:[esi]
  421396:	mov    edx,0xe8cc8879
  42139b:	hlt    
  42139c:	cwde   
  42139d:	xor    al,0xcb
  42139f:	xchg   edx,eax
  4213a0:	daa    
  4213a1:	(bad)  
  4213a2:	(bad)  [ecx]
  4213a4:	mov    ebp,0xe69badea
  4213a9:	xchg   esi,eax
  4213aa:	(bad)  
  4213ab:	in     al,0xe1
  4213ad:	imul   ebx,ecx,0xffffffb4
  4213b0:	sub    DWORD PTR [edi-0x72a34f0f],0x2a4829c6
  4213ba:	gs adc al,0xd2
  4213bd:	nop
  4213be:	out    0x28,al
  4213c0:	imul   esi,DWORD PTR [esi+ebx*4+0x1b2f0cce],0xfffffff5
  4213c8:	adc    esi,DWORD PTR [edi-0x24109b79]
  4213ce:	push   cs
  4213cf:	pop    ebp
  4213d0:	xchg   ebx,eax
  4213d1:	jecxz  0x4213de
  4213d3:	(bad)  
  4213d4:	in     eax,dx
  4213d5:	icebp  
  4213d6:	test   DWORD PTR [edi],ebp
  4213d8:	rcl    ebx,1
  4213da:	ja     0x42136a
  4213dc:	cmp    DWORD PTR [ecx+edi*4],edx
  4213df:	popf   
  4213e0:	add    DWORD PTR [eax],edx
  4213e2:	lea    eax,[ebp+0x23e6ff93]
  4213e8:	gs jecxz 0x42142e
  4213eb:	jmp    0x554c:0xbce5bb4
  4213f2:	cli    
  4213f3:	aad    0x35
  4213f5:	loope  0x4213b9
  4213f7:	push   cs
  4213f8:	mov    dh,0x1f
  4213fa:	aam    0x3a
  4213fc:	and    al,0x61
  4213fe:	retf   0xfb24
  421401:	mov    ebp,DWORD PTR es:[ecx+0x69]
  421405:	sub    DWORD PTR [esi-0x1c],esi
  421408:	rcl    DWORD PTR [eax-0x27],cl
  42140b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140c:	xchg   edi,eax
  42140d:	and    BYTE PTR [esi-0x1a],bl
  421410:	mov    ebp,0x5aeeb9a3
  421415:	inc    esi
  421416:	jg     0x4213e9
  421418:	pop    es
  421419:	addr16 leave 
  42141b:	mov    DWORD PTR [edi+ecx*2+0x1cad5fac],eax
  421422:	icebp  
  421423:	(bad)  
  421424:	(bad)  [eax]
  421426:	sub    BYTE PTR [edx],cl
  421428:	jge    0x421427
  42142a:	cmc    
  42142b:	xlat   BYTE PTR ds:[ebx]
  42142c:	stc    
  42142d:	mov    ch,0xc6
  42142f:	ss push eax
  421431:	pop    eax
  421432:	pusha  
  421433:	lods   al,BYTE PTR ds:[esi]
  421434:	dec    ecx
  421435:	and    ebp,DWORD PTR [esi+0x12f2dbcc]
  42143b:	call   0xe2d21096
  421440:	xor    BYTE PTR [ebx+0x1862adf3],dl
  421446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421447:	js     0x421455
  421449:	dec    esp
  42144a:	adc    esi,DWORD PTR [edi+0x3f]
  42144d:	pop    esi
  42144e:	test   ebp,ecx
  421450:	add    ecx,ebx
  421452:	fisubr WORD PTR [edx+0x237abd63]
  421458:	ficom  DWORD PTR [eax-0x11a50e7f]
  42145e:	jmp    0x42145c
  421460:	(bad)  
  421462:	push   ss
  421463:	cmp    ah,BYTE PTR [ecx]
  421465:	jns    0x421407
  421467:	cmp    eax,0x4f443172
  42146c:	push   esp
  42146d:	mov    ds:0x391a9c90,al
  421472:	loop   0x4214e4
  421474:	arpl   WORD PTR [edi+0x62],cx
  421477:	nop
  421478:	or     esi,DWORD PTR [eax+0x9]
  42147b:	test   eax,0x330323e3
  421480:	mov    ds:0x3884d75f,al
  421485:	mov    esp,edi
  421487:	pop    ss
  421488:	dec    edi
  421489:	jmp    0xeacf:0xc7cb038f
  421490:	je     0x42142b
  421492:	test   DWORD PTR [ebx+edx*1-0x22944e87],esp
  421499:	mov    edi,0xd427a732
  42149e:	arpl   WORD PTR [edi+0x67],bx
  4214a1:	and    al,0xc9
  4214a3:	mov    dl,ch
  4214a5:	clc    
  4214a6:	or     BYTE PTR [esi],dl
  4214a8:	mov    edi,0xd1e07334
  4214ad:	xor    dl,dh
  4214af:	jmp    0x1d6e8e4a
  4214b4:	pop    ds
  4214b5:	jp     0x4214e0
  4214b7:	or     BYTE PTR [edx+0x485100b5],bh
  4214bd:	sbb    eax,0xef246db4
  4214c2:	jnp    0x4214c6
  4214c4:	xchg   ecx,eax
  4214c5:	lods   eax,DWORD PTR ds:[esi]
  4214c6:	cmp    DWORD PTR ds:0xe5eaee85,edi
  4214cc:	pop    eax
  4214cd:	dec    eax
  4214ce:	dec    ebx
  4214cf:	call   0x12dad290
  4214d4:	pushw  0xffae
  4214d7:	sar    BYTE PTR [ebx-0x60],1
  4214da:	mov    dl,0x6a
  4214dc:	dec    eax
  4214dd:	mov    ds:0x62576d39,eax
  4214e2:	leave  
  4214e3:	loop   0x421492
  4214e5:	push   eax
  4214e6:	sbb    DWORD PTR [esi-0x48a1f639],0x9aebcf5
  4214f0:	inc    esp
  4214f1:	mov    esi,0xea21d2e2
  4214f6:	ins    DWORD PTR es:[edi],dx
  4214f7:	jmp    0x4214d3
  4214f9:	adc    ebx,DWORD PTR [ebx]
  4214fb:	xor    ch,BYTE PTR [esi+0x2f]
  4214fe:	sar    BYTE PTR [ecx],1
  421500:	jae    0x42153b
  421502:	rcr    BYTE PTR [edi],0x2c
  421505:	cmp    esi,DWORD PTR [eax]
  421507:	ja     0x42150e
  421509:	adc    bh,dl
  42150b:	mov    ah,0xbe
  42150d:	jae    0x4214c6
  42150f:	xchg   ch,dh
  421511:	jecxz  0x4214fd
  421513:	mov    WORD PTR [ebp+0x2e],?
  421516:	mov    ds:0x505157d5,al
  42151b:	(bad)  
  42151c:	adc    ecx,ebp
  42151e:	cli    
  42151f:	add    dl,bl
  421521:	loop   0x421597
  421523:	in     eax,0xcb
  421525:	stc    
  421526:	push   edx
  421527:	pop    ebx
  421528:	or     BYTE PTR [ebx-0x85cb6fb],bh
  42152e:	xchg   esi,eax
  42152f:	mov    bl,0x7e
  421531:	outs   dx,BYTE PTR ds:[esi]
  421532:	push   ebp
  421533:	xlat   BYTE PTR ds:[ebx]
  421534:	jl     0x4215a3
  421536:	xor    ecx,DWORD PTR [esi+0x4fe57b4f]
  42153c:	jo     0x4215b5
  42153e:	ret    0xe8b4
  421541:	or     DWORD PTR [ebp+0x5e],0x5d
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x48],0x0
  42155e:	mov    DWORD PTR [ebp-0x70],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x10],0x0
  421573:	mov    DWORD PTR [ebp-0x14],0x0
  42157a:	mov    DWORD PTR [ebp-0x30],0x0
  421581:	mov    DWORD PTR [ebp-0x58],0x0
  421588:	mov    DWORD PTR [ebp-0x54],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x60],0x0
  42159d:	mov    DWORD PTR [ebp-0x50],0x0
  4215a4:	mov    DWORD PTR [ebp-0xc],0x0
  4215ab:	mov    DWORD PTR [ebp-0x6c],0x0
  4215b2:	mov    DWORD PTR [ebp-0x5c],0x0
  4215b9:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x68],0x0
  4215c7:	mov    DWORD PTR [ebp-0x4],0x0
  4215ce:	mov    DWORD PTR [ebp-0x4c],0x0
  4215d5:	mov    eax,ds:0x428140
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428144
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428148
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42814c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428130
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x428134
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428138
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x42813c
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x42813e
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x2c],0x40
  42162c:	push   0x64
  42162e:	push   0x0
  421630:	call   DWORD PTR ds:0x42801c
  421636:	lea    eax,[ebp-0xc]
  421639:	push   eax
  42163a:	lea    ecx,[ebp-0xc]
  42163d:	push   ecx
  42163e:	lea    edx,[ebp-0x14]
  421641:	push   edx
  421642:	call   DWORD PTR ds:0x428004
  421648:	test   eax,eax
  42164a:	je     0x421661
  42164c:	push   0x0
  42164e:	mov    eax,DWORD PTR [ebp-0x6c]
  421651:	push   eax
  421652:	call   DWORD PTR ds:0x428118
  421658:	mov    ecx,DWORD PTR [ebp-0xc]
  42165b:	add    ecx,0x1
  42165e:	mov    DWORD PTR [ebp-0xc],ecx
  421661:	push   0x0
  421663:	push   0x0
  421665:	push   0x0
  421667:	call   DWORD PTR ds:0x428000
  42166d:	mov    BYTE PTR [ebp-0x40],0x56
  421671:	call   DWORD PTR ds:0x428018
  421677:	mov    DWORD PTR [ebp-0x30],eax
  42167a:	mov    BYTE PTR [ebp-0x3e],0x72
  42167e:	movzx  edx,WORD PTR [ebp-0x30]
  421682:	test   edx,edx
  421684:	jne    0x4216ce
  421686:	mov    BYTE PTR [ebp-0x34],0x0
  42168a:	mov    DWORD PTR [ebp-0x14],0xe0d
  421691:	lea    eax,[ebp-0x28]
  421694:	push   eax
  421695:	call   DWORD PTR ds:0x428014
  42169b:	mov    DWORD PTR [ebp-0x60],eax
  42169e:	mov    DWORD PTR [ebp-0x50],0x3a
  4216a5:	lea    ecx,[ebp-0x40]
  4216a8:	push   ecx
  4216a9:	mov    edx,DWORD PTR [ebp-0x60]
  4216ac:	push   edx
  4216ad:	call   DWORD PTR ds:0x428010
  4216b3:	mov    DWORD PTR [ebp-0x44],eax
  4216b6:	mov    DWORD PTR [ebp-0x8],0x8fddb625
  4216bd:	push   0xa
  4216bf:	call   DWORD PTR ds:0x42811c
  4216c5:	mov    DWORD PTR [ebp-0x68],0x10d757
  4216cc:	jmp    0x4216e3
  4216ce:	mov    BYTE PTR ds:0x445160,0x0
  4216d5:	mov    BYTE PTR ds:0x42bf40,0x0
  4216dc:	mov    BYTE PTR ds:0x442930,0x0
  4216e3:	push   DWORD PTR [ebp-0x2c]
  4216e6:	push   0x1000
  4216eb:	mov    eax,DWORD PTR [ebp-0x14]
  4216ee:	add    eax,0x23
  4216f1:	add    eax,0x23
  4216f4:	push   eax
  4216f5:	xor    eax,eax
  4216f7:	push   eax
  4216f8:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fb:	call   ecx
  4216fd:	mov    edx,eax
  4216ff:	mov    DWORD PTR [ebp-0x4],edx
  421702:	mov    eax,DWORD PTR [ebp-0x68]
  421705:	sub    eax,0xdae0b
  42170a:	mov    DWORD PTR [ebp-0x68],eax
  42170d:	cmp    DWORD PTR [ebp-0x4],0x0
  421711:	jne    0x421724
  421713:	push   0x0
  421715:	push   0x0
  421717:	call   DWORD PTR ds:0x428120
  42171d:	mov    BYTE PTR ds:0x442930,0x0
  421724:	mov    ecx,DWORD PTR [ebp-0x4]
  421727:	add    ecx,DWORD PTR [ebp-0x14]
  42172a:	mov    edx,DWORD PTR [ebp-0x8]
  42172d:	mov    DWORD PTR [ecx],edx
  42172f:	push   DWORD PTR ds:0x428014
  421735:	pop    edx
  421736:	mov    DWORD PTR [ebp-0x70],edx
  421739:	mov    DWORD PTR [ebp-0x30],0x410000
  421740:	call   DWORD PTR ds:0x42800c
  421746:	mov    eax,DWORD PTR [ebp-0x4]
  421749:	add    eax,DWORD PTR [ebp-0x50]
  42174c:	mov    DWORD PTR [ebp-0x5c],eax
  42174f:	mov    ecx,DWORD PTR ds:0x428010
  421755:	mov    DWORD PTR [ebp-0x4c],ecx
  421758:	mov    edx,DWORD PTR [ebp-0x4]
  42175b:	add    edx,DWORD PTR [ebp-0x14]
  42175e:	mov    eax,DWORD PTR [ebp+0x8]
  421761:	mov    DWORD PTR [edx+0x4],eax
  421764:	mov    ecx,DWORD PTR [ebp-0x4]
  421767:	add    ecx,DWORD PTR [ebp-0x14]
  42176a:	mov    DWORD PTR [ebp-0x10],ecx
  42176d:	push   0x0
  42176f:	push   0x1
  421771:	mov    edx,DWORD PTR [ebp-0x60]
  421774:	push   edx
  421775:	call   DWORD PTR ds:0x428030
  42177b:	cmp    DWORD PTR [ebp-0x68],0x0
  42177f:	jbe    0x42179c
  421781:	mov    eax,DWORD PTR [ebp-0x10]
  421784:	push   eax
  421785:	mov    ecx,DWORD PTR [ebp-0x14]
  421788:	push   ecx
  421789:	mov    edx,DWORD PTR [ebp-0x30]
  42178c:	add    edx,DWORD PTR [ebp-0x68]
  42178f:	push   edx
  421790:	mov    eax,DWORD PTR [ebp-0x4]
  421793:	push   eax
  421794:	call   0x411000
  421799:	add    esp,0x10
  42179c:	call   DWORD PTR ds:0x428044
  4217a2:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217a6:	je     0x4217ba
  4217a8:	mov    ecx,DWORD PTR [ebp-0x4c]
  4217ab:	push   ecx
  4217ac:	push   DWORD PTR [ebp-0x70]
  4217af:	mov    esi,DWORD PTR [ebp-0x5c]
  4217b2:	push   edx
  4217b3:	pop    eax
  4217b4:	push   ecx
  4217b5:	nop
  4217b6:	jmp    esi
  4217b8:	jmp    0x4217cd
  4217ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4217bd:	mov    DWORD PTR [ebp-0x18],ecx
  4217c0:	push   0x0
  4217c2:	push   0x83232
  4217c7:	call   DWORD PTR ds:0x42804c
  4217cd:	mov    eax,0x1
  4217d2:	pop    esi
  4217d3:	mov    esp,ebp
  4217d5:	pop    ebp
  4217d6:	ret    
  4217d7:	int3   
  4217d8:	int3   
  4217d9:	int3   
  4217da:	int3   
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	push   0x0
  4217e9:	push   0x1
  4217eb:	push   0x0
  4217ed:	mov    DWORD PTR [ebp-0x4],0x0
  4217f4:	call   DWORD PTR ds:0x428030
  4217fa:	mov    eax,ds:0x428018
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   DWORD PTR ds:0x428028
  42180a:	push   0x0
  42180c:	push   0x4e
  42180e:	push   0x1e
  421810:	push   0x0
  421812:	push   0xffffffff
  421814:	call   DWORD PTR ds:0x428024
  42181a:	mov    esi,DWORD PTR [ebp-0x8]
  42181d:	call   esi
  42181f:	mov    DWORD PTR [ebp-0x4],eax
  421822:	cmp    DWORD PTR [ebp-0x4],0x57
  421826:	jne    0x42183d
  421828:	push   0xc07071a4
  42182d:	call   0x421550
  421832:	add    esp,0x4
  421835:	push   0x0
  421837:	call   DWORD PTR ds:0x428020
  42183d:	xor    eax,eax
  42183f:	pop    esi
  421840:	mov    esp,ebp
  421842:	pop    ebp
  421843:	ret    
  421844:	nop
  421845:	nop
  421846:	nop
  421847:	nop
  421848:	nop
  421849:	nop
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   esi
  421854:	push   0x3
  421856:	push   0x0
  421858:	push   0x18
  42185a:	push   0x0
  42185c:	call   DWORD PTR ds:0x428128
  421862:	push   0x0
  421864:	push   0x0
  421866:	call   DWORD PTR ds:0x428124
  42186c:	lea    eax,[esp+0x4]
  421870:	push   eax
  421871:	call   DWORD PTR ds:0x428038
  421877:	push   0x0
  421879:	call   DWORD PTR ds:0x428034
  42187f:	cmp    WORD PTR [esp+0x4],0x0
  421885:	mov    esi,DWORD PTR ds:0x428048
  42188b:	push   0x0
  42188d:	je     0x4218a0
  42188f:	call   esi
  421891:	push   0x0
  421893:	call   0x4217e0
  421898:	add    esp,0x4
  42189b:	jmp    0x4229d8
  4218a0:	push   0xa
  4218a2:	push   0x0
  4218a4:	push   0xffffffff
  4218a6:	call   0x422a00
  4218ab:	push   DWORD PTR [eax-0x6b570160]
  4218b1:	aam    0xe9
  4218b3:	adc    BYTE PTR [eax-0x7f],cl
  4218b6:	add    BYTE PTR [edx],0x8e
  4218b9:	add    bh,dl
  4218bb:	outs   dx,BYTE PTR ds:[esi]
  4218bc:	adc    BYTE PTR [edi+0x4c10e9d4],dl
  4218c2:	add    DWORD PTR [eax-0x5028ebe],0xd497a86e
  4218cc:	jmp    0x80c364e1
  4218d1:	add    dh,BYTE PTR [ecx-0x3]
  4218d4:	cli    
  4218d5:	outs   dx,BYTE PTR ds:[esi]
  4218d6:	test   al,0x97
  4218d8:	aam    0xe9
  4218da:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  4218de:	add    dh,BYTE PTR [ecx-0x3]
  4218e1:	cli    
  4218e2:	outs   dx,BYTE PTR ds:[esi]
  4218e3:	test   al,0x97
  4218e5:	aam    0xe9
  4218e7:	adc    BYTE PTR [ecx+eax*4-0x1d80fd80],dh
  4218ee:	inc    eax
  4218ef:	pusha  
  4218f0:	test   al,0x23
  4218f2:	frstor [ecx+esi*1]
  4218f5:	hlt    
  4218f6:	or     ah,0xcf
  4218f9:	push   eax
  4218fa:	test   eax,0xb7db0792
  4218ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421900:	fwait
  421901:	jg     0x42192e
  421903:	repz loope 0x421975
  421906:	push   ecx
  421907:	sahf   
  421908:	fwait
  421909:	add    dh,al
  42190b:	clc    
  42190c:	mov    al,ds:0xa12972c9
  421911:	bnd ja 0x421933
  421914:	fst    QWORD PTR [ebx-0x642c7800]
  42191a:	mov    edx,0xe4ee2130
  42191f:	addr16 pop edi
  421921:	lock mul DWORD PTR [esp+ecx*4-0x69]
  421926:	aam    0xe9
  421928:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  42192c:	add    eax,0x2da301e8
  421931:	push   eax
  421932:	add    eax,0xdee8aade
  421937:	mov    eax,ebx
  421939:	cli    
  42193a:	jecxz  0x421933
  42193c:	mov    ds:0x8b9da40b,al
  421941:	adc    DWORD PTR [edx+0x3ae5d946],eax
  421947:	jnp    0x421988
  421949:	add    bh,ah
  42194b:	mov    ds:0x1ad0b1cf,al
  421950:	and    al,0x79
  421952:	adc    cl,BYTE PTR [eax]
  421954:	pop    ebp
  421955:	jae    0x42191a
  421957:	fs out dx,al
  421959:	outs   dx,DWORD PTR ds:[esi]
  42195a:	inc    esi
  42195b:	jecxz  0x4219b7
  42195d:	int3   
  42195e:	nop
  42195f:	mov    cl,BYTE PTR [eax-0x77]
  421962:	outs   dx,DWORD PTR ds:[esi]
  421963:	lock and al,0x28
  421966:	xchg   esi,eax
  421967:	fidiv  WORD PTR [ecx-0x3c742118]
  42196d:	cli    
  42196e:	loop   0x421967
  421970:	rcl    BYTE PTR [edi+0x316b9d3a],cl
  421976:	nop
  421977:	inc    esi
  421978:	int3   
  421979:	js     0x42190b
  42197b:	jnp    0x421922
  42197d:	lahf   
  42197e:	push   ebx
  42197f:	mov    ds:0x1a7b2c9f,al
  421984:	adc    al,0xe4
  421986:	mov    BYTE PTR [eax],cl
  421988:	xor    eax,DWORD PTR ds:0xf2f06468
  42198e:	fninit 
  421990:	push   edx
  421991:	mov    ah,0x13
  421993:	mov    dl,BYTE PTR [eax+0x18]
  421996:	sahf   
  421997:	xchg   edx,eax
  421998:	sub    eax,0xe9de0550
  42199d:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  4219a1:	add    dh,BYTE PTR [ecx-0x3]
  4219a4:	stos   BYTE PTR es:[edi],al
  4219a5:	sub    ebp,DWORD PTR [eax+0x12e89897]
  4219ab:	dec    esp
  4219ac:	ins    DWORD PTR es:[edi],dx
  4219ad:	arpl   WORD PTR [ebp+0x3e],bx
  4219b0:	std    
  4219b1:	cli    
  4219b2:	outs   dx,BYTE PTR ds:[esi]
  4219b3:	test   al,0x97
  4219b5:	aam    0xe9
  4219b7:	adc    BYTE PTR [ecx+eax*4-0x385fc7d],ch
  4219be:	lock outs dx,BYTE PTR ds:[esi]
  4219c0:	test   al,0x7b
  4219c2:	shr    cl,1
  4219c4:	adc    BYTE PTR [eax-0x79],cl
  4219c7:	add    BYTE PTR [edx],0x71
  4219ca:	std    
  4219cb:	cli    
  4219cc:	outs   dx,DWORD PTR ds:[esi]
  4219cd:	adc    eax,0xe9d497
  4219d2:	dec    esp
  4219d3:	add    DWORD PTR [eax-0x5028bfe],0xd497e96e
  4219dd:	stc    
  4219de:	adc    BYTE PTR [ecx+eax*4-0x7e],cl
  4219e2:	add    dh,BYTE PTR [ecx-0x8]
  4219e5:	cli    
  4219e6:	outs   dx,DWORD PTR ds:[esi]
  4219e7:	test   al,0x97
  4219e9:	aam    0xe9
  4219eb:	adc    BYTE PTR [ecx-0x7f],cl
  4219ee:	add    DWORD PTR [edx],0x6efafd71
  4219f4:	test   al,0x17
  4219f6:	fucomip st,st(1)
  4219f8:	adc    BYTE PTR [eax-0x7f],cl
  4219fb:	cmp    BYTE PTR [edi+0x6cfaf840],0xa8
  421a02:	xchg   edi,eax
  421a03:	push   esp
  421a04:	jmp    0x80c37619
  421a09:	adc    dh,BYTE PTR [ecx-0x3]
  421a0c:	cli    
  421a0d:	outs   dx,BYTE PTR ds:[esi]
  421a0e:	mov    eax,0x10f9d497
  421a13:	dec    esp
  421a14:	add    DWORD PTR [eax-0x5128efe],0xd497a86e
  421a1e:	jmp    0x80c36633
  421a23:	add    dh,ch
  421a25:	xchg   ebx,eax
  421a26:	icebp  
  421a27:	outs   dx,BYTE PTR ds:[esi]
  421a28:	rcl    DWORD PTR [esp+edx*8-0x7583ef17],0x80
  421a30:	int    0x4c
  421a32:	std    
  421a33:	cli    
  421a34:	outs   dx,BYTE PTR ds:[esi]
  421a35:	test   al,0x97
  421a37:	aam    0xe9
  421a39:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a3d:	add    dh,BYTE PTR [ecx-0x3]
  421a40:	cli    
  421a41:	outs   dx,BYTE PTR ds:[esi]
  421a42:	test   al,0x97
  421a44:	aam    0xe9
  421a46:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a4a:	add    dh,BYTE PTR [ecx-0x3]
  421a4d:	cli    
  421a4e:	outs   dx,BYTE PTR ds:[esi]
  421a4f:	test   al,0x97
  421a51:	aam    0xe9
  421a53:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a57:	add    dh,BYTE PTR [ecx-0x3]
  421a5a:	cli    
  421a5b:	outs   dx,BYTE PTR ds:[esi]
  421a5c:	test   al,0x97
  421a5e:	aam    0xe9
  421a60:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a64:	add    dh,BYTE PTR [ecx-0x3]
  421a67:	cli    
  421a68:	outs   dx,BYTE PTR ds:[esi]
  421a69:	test   al,0x97
  421a6b:	aam    0xe9
  421a6d:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a71:	add    dh,BYTE PTR [ecx-0x3]
  421a74:	cli    
  421a75:	outs   dx,BYTE PTR ds:[esi]
  421a76:	test   al,0x97
  421a78:	aam    0xe9
  421a7a:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a7e:	add    dh,BYTE PTR [ecx-0x3]
  421a81:	cli    
  421a82:	outs   dx,BYTE PTR ds:[esi]
  421a83:	test   al,0x97
  421a85:	aam    0xe9
  421a87:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a8b:	add    dh,BYTE PTR [ecx-0x3]
  421a8e:	cli    
  421a8f:	outs   dx,BYTE PTR ds:[esi]
  421a90:	test   al,0x97
  421a92:	aam    0xe9
  421a94:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421a98:	add    dh,BYTE PTR [ecx-0x3]
  421a9b:	cli    
  421a9c:	inc    eax
  421a9d:	fdivr  st(2),st
  421a9f:	lods   al,BYTE PTR ds:[esi]
  421aa0:	popf   
  421aa1:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421aa5:	and    bh,BYTE PTR [edx-0x3]
  421aa8:	cli    
  421aa9:	jle    0x421a53
  421aab:	xchg   edi,eax
  421aac:	aam    0xd3
  421aae:	adc    al,0x4c
  421ab0:	add    DWORD PTR [edx+eax*1+0x2dbfad71],0xe99bc39a
  421abb:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421abf:	add    dl,BYTE PTR [ecx-0x3]
  421ac2:	cli    
  421ac3:	mov    es,WORD PTR [esi+0x739ba7e5]
  421ac9:	dec    esp
  421aca:	add    DWORD PTR [eax-0x502defe],0xd49c986e
  421ad4:	jmp    0x80c36719
  421ad9:	cmp    al,0x75
  421adb:	std    
  421adc:	cli    
  421add:	outs   dx,BYTE PTR ds:[esi]
  421ade:	test   al,0x97
  421ae0:	aam    0xe9
  421ae2:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421ae6:	add    dh,BYTE PTR [ecx-0x23]
  421ae9:	cli    
  421aea:	outs   dx,BYTE PTR ds:[esi]
  421aeb:	dec    eax
  421aec:	xchg   edi,eax
  421aed:	aam    0xe9
  421aef:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421af3:	add    dh,BYTE PTR [ecx-0x3]
  421af6:	cli    
  421af7:	outs   dx,BYTE PTR ds:[esi]
  421af8:	test   al,0x97
  421afa:	aam    0xe9
  421afc:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b00:	add    dh,BYTE PTR [ecx-0x3]
  421b03:	cli    
  421b04:	outs   dx,BYTE PTR ds:[esi]
  421b05:	test   al,0x97
  421b07:	aam    0xe9
  421b09:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b0d:	add    dh,BYTE PTR [ecx-0x3]
  421b10:	cli    
  421b11:	outs   dx,BYTE PTR ds:[esi]
  421b12:	test   al,0x97
  421b14:	aam    0xe9
  421b16:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b1a:	add    dh,BYTE PTR [ecx-0x3]
  421b1d:	cli    
  421b1e:	outs   dx,BYTE PTR ds:[esi]
  421b1f:	test   al,0x97
  421b21:	aam    0xe9
  421b23:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b27:	add    dh,BYTE PTR [ecx-0x3]
  421b2a:	cli    
  421b2b:	outs   dx,BYTE PTR ds:[esi]
  421b2c:	test   al,0x97
  421b2e:	aam    0xe9
  421b30:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b34:	add    dh,BYTE PTR [ecx-0x3]
  421b37:	cli    
  421b38:	outs   dx,BYTE PTR ds:[esi]
  421b39:	test   al,0x97
  421b3b:	aam    0xe9
  421b3d:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b41:	add    dh,BYTE PTR [ecx-0x3]
  421b44:	cli    
  421b45:	outs   dx,BYTE PTR ds:[esi]
  421b46:	test   al,0x97
  421b48:	aam    0xe9
  421b4a:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b4e:	add    dh,BYTE PTR [ecx-0x3]
  421b51:	cli    
  421b52:	outs   dx,BYTE PTR ds:[esi]
  421b53:	test   al,0x97
  421b55:	aam    0xe9
  421b57:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b5b:	add    dh,BYTE PTR [ecx-0x3]
  421b5e:	cli    
  421b5f:	outs   dx,BYTE PTR ds:[esi]
  421b60:	test   al,0x97
  421b62:	aam    0xe9
  421b64:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b68:	add    dh,BYTE PTR [ecx-0x3]
  421b6b:	cli    
  421b6c:	outs   dx,BYTE PTR ds:[esi]
  421b6d:	test   al,0x97
  421b6f:	aam    0xe9
  421b71:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b75:	add    dh,BYTE PTR [ecx-0x3]
  421b78:	cli    
  421b79:	outs   dx,BYTE PTR ds:[esi]
  421b7a:	test   al,0x97
  421b7c:	aam    0xe9
  421b7e:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b82:	add    dh,BYTE PTR [ecx-0x3]
  421b85:	cli    
  421b86:	outs   dx,BYTE PTR ds:[esi]
  421b87:	test   al,0x97
  421b89:	aam    0xe9
  421b8b:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b8f:	add    dh,BYTE PTR [ecx-0x3]
  421b92:	cli    
  421b93:	outs   dx,BYTE PTR ds:[esi]
  421b94:	test   al,0x97
  421b96:	aam    0xe9
  421b98:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421b9c:	add    dh,BYTE PTR [ecx-0x3]
  421b9f:	cli    
  421ba0:	outs   dx,BYTE PTR ds:[esi]
  421ba1:	test   al,0x97
  421ba3:	aam    0xe9
  421ba5:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421ba9:	add    dh,BYTE PTR [ecx-0x3]
  421bac:	cli    
  421bad:	outs   dx,BYTE PTR ds:[esi]
  421bae:	test   al,0x97
  421bb0:	aam    0xe9
  421bb2:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421bb6:	add    dh,BYTE PTR [ecx-0x3]
  421bb9:	cli    
  421bba:	outs   dx,BYTE PTR ds:[esi]
  421bbb:	test   al,0x97
  421bbd:	aam    0xe9
  421bbf:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421bc3:	add    dh,BYTE PTR [ecx-0x3]
  421bc6:	cli    
  421bc7:	outs   dx,BYTE PTR ds:[esi]
  421bc8:	test   al,0x97
  421bca:	aam    0xe9
  421bcc:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421bd0:	add    dh,BYTE PTR [ecx-0x3]
  421bd3:	cli    
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	test   al,0x97
  421bd7:	aam    0xe9
  421bd9:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421bdd:	add    dh,BYTE PTR [ecx-0x3]
  421be0:	cli    
  421be1:	outs   dx,BYTE PTR ds:[esi]
  421be2:	test   al,0x97
  421be4:	aam    0xe9
  421be6:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421bea:	add    dh,BYTE PTR [ecx-0x3]
  421bed:	cli    
  421bee:	outs   dx,BYTE PTR ds:[esi]
  421bef:	test   al,0x97
  421bf1:	aam    0xe9
  421bf3:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421bf7:	add    dh,BYTE PTR [ecx-0x3]
  421bfa:	cli    
  421bfb:	outs   dx,BYTE PTR ds:[esi]
  421bfc:	test   al,0x97
  421bfe:	aam    0xe9
  421c00:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c04:	add    dh,BYTE PTR [ecx-0x3]
  421c07:	cli    
  421c08:	outs   dx,BYTE PTR ds:[esi]
  421c09:	test   al,0x97
  421c0b:	aam    0xe9
  421c0d:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c11:	add    dh,BYTE PTR [ecx-0x3]
  421c14:	cli    
  421c15:	outs   dx,BYTE PTR ds:[esi]
  421c16:	test   al,0x97
  421c18:	aam    0xe9
  421c1a:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c1e:	add    dh,BYTE PTR [ecx-0x3]
  421c21:	cli    
  421c22:	outs   dx,BYTE PTR ds:[esi]
  421c23:	test   al,0x97
  421c25:	aam    0xe9
  421c27:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c2b:	add    dh,BYTE PTR [ecx-0x3]
  421c2e:	cli    
  421c2f:	outs   dx,BYTE PTR ds:[esi]
  421c30:	test   al,0x97
  421c32:	aam    0xe9
  421c34:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c38:	add    dh,BYTE PTR [ecx-0x3]
  421c3b:	cli    
  421c3c:	outs   dx,BYTE PTR ds:[esi]
  421c3d:	test   al,0x97
  421c3f:	aam    0xe9
  421c41:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c45:	add    dh,BYTE PTR [ecx-0x3]
  421c48:	cli    
  421c49:	outs   dx,BYTE PTR ds:[esi]
  421c4a:	test   al,0x97
  421c4c:	aam    0xe9
  421c4e:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c52:	add    dh,BYTE PTR [ecx-0x3]
  421c55:	cli    
  421c56:	outs   dx,BYTE PTR ds:[esi]
  421c57:	test   al,0x97
  421c59:	aam    0xe9
  421c5b:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c5f:	add    dh,BYTE PTR [ecx-0x3]
  421c62:	cli    
  421c63:	outs   dx,BYTE PTR ds:[esi]
  421c64:	test   al,0x97
  421c66:	aam    0xe9
  421c68:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c6c:	add    dh,BYTE PTR [ecx-0x3]
  421c6f:	cli    
  421c70:	outs   dx,BYTE PTR ds:[esi]
  421c71:	test   al,0x97
  421c73:	aam    0xe9
  421c75:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c79:	add    dh,BYTE PTR [ecx-0x3]
  421c7c:	cli    
  421c7d:	outs   dx,BYTE PTR ds:[esi]
  421c7e:	test   al,0x97
  421c80:	aam    0xe9
  421c82:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c86:	add    dh,BYTE PTR [ecx-0x3]
  421c89:	cli    
  421c8a:	outs   dx,BYTE PTR ds:[esi]
  421c8b:	test   al,0x97
  421c8d:	aam    0xe9
  421c8f:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421c93:	add    dh,BYTE PTR [ecx-0x3]
  421c96:	cli    
  421c97:	outs   dx,BYTE PTR ds:[esi]
  421c98:	test   al,0x97
  421c9a:	aam    0xe9
  421c9c:	adc    BYTE PTR [ecx+eax*4-0x80],cl
  421ca0:	add    dh,BYTE PTR [ecx-0x3]
  421ca3:	cli    
  421ca4:	outs   dx,BYTE PTR ds:[esi]
  421ca5:	test   al,0x97
  421ca7:	aam    0xe9
  421ca9:	adc    BYTE PTR [ecx+eax*4-0x39],cl
  421cad:	in     al,dx
  421cae:	jnp    0x421cad
  421cb0:	aad    0x6e
  421cb2:	test   al,0x87
  421cb4:	aam    0xe9
  421cb6:	cmp    ch,dh
  421cb8:	pop    ebx
  421cb9:	icebp  
  421cba:	fs mov ss,eax
  421cbd:	fs jmp 0x22497bb
  421cc3:	add    edi,eax
  421cc5:	adc    al,0xe6
  421cc7:	jae    0x421cbe
  421cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cca:	jmp    0xb9c33cae
  421ccf:	or     eax,0xae47cd9a
  421cd4:	pusha  
  421cd5:	loope  0x421c99
  421cd7:	ret    
  421cd8:	pop    ebp
  421cd9:	out    0x26,eax
  421cdb:	ret    
  421cdc:	retf   
  421cdd:	adc    BYTE PTR [ebx+0x26],ch
  421ce0:	or     BYTE PTR [edi+0x20],dl
  421ce3:	nop
  421ce4:	push   ebx
  421ce5:	pop    esp
  421ce6:	xchg   ebp,eax
  421ce7:	dec    edx
  421ce8:	rcr    BYTE PTR [eax+0x70],0x5c
  421cec:	fisub  DWORD PTR [esi+0x5b949e13]
  421cf2:	add    cl,BYTE PTR [edi+0x2d]
  421cf5:	clc    
  421cf6:	cs popf 
  421cf8:	sbb    BYTE PTR [edi-0x4a],bh
  421cfb:	jb     0x421cb9
  421cfd:	fs clc 
  421cff:	into   
  421d00:	popa   
  421d01:	xchg   ebx,eax
  421d02:	inc    ebx
  421d03:	nop
  421d04:	das    
  421d05:	push   eax
  421d06:	hlt    
  421d07:	popf   
  421d08:	mov    bl,0xdf
  421d0a:	sub    ah,BYTE PTR [ecx-0x4a]
  421d0d:	out    dx,eax
  421d0e:	fstp   st(0)
  421d10:	mov    al,ds:0xa3b201d
  421d15:	(bad)  
  421d17:	add    ebx,DWORD PTR [ecx+ebx*4]
  421d1a:	xchg   ebp,eax
  421d1b:	popf   
  421d1c:	mov    cl,0xbf
  421d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1f:	(bad)  
  421d20:	pop    ds
  421d21:	inc    eax
  421d22:	bound  esp,QWORD PTR [edi+0x4a8ab9b6]
  421d28:	jle    0x421d2e
  421d2a:	mov    ds:0x20aa9493,al
  421d2f:	push   es
  421d30:	call   0xa640:0x4a2a6476
  421d37:	retf   0x6117
  421d3a:	push   edx
  421d3b:	push   eax
  421d3c:	and    edx,DWORD PTR [edi+eiz*4]
  421d3f:	mov    dl,0x50
  421d41:	stc    
  421d42:	adc    al,0x18
  421d44:	stos   BYTE PTR es:[edi],al
  421d45:	les    esp,FWORD PTR [edi-0x4427977d]
  421d4b:	aas    
  421d4c:	stos   BYTE PTR es:[edi],al
  421d4d:	inc    ebx
  421d4e:	mov    ds,ecx
  421d50:	(bad)
  421d55:	aas    
  421d56:	xchg   DWORD PTR [ecx],esp
  421d58:	arpl   WORD PTR [ecx+0x2326835c],bx
  421d5e:	push   es
  421d5f:	in     eax,dx
  421d60:	mov    ch,0x66
  421d62:	jae    0x421cf0
  421d64:	mov    edx,0xc24392a7
  421d69:	xchg   ebx,eax
  421d6a:	cs addr16 push edi
  421d6d:	retf   0xba19
  421d70:	pushf  
  421d71:	xchg   esp,esi
  421d73:	jl     0x421d3c
  421d75:	mov    eax,ds:0xb74a1a42
  421d7a:	pushf  
  421d7b:	push   ebp
  421d7c:	sahf   
  421d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d7e:	push   ebx
  421d7f:	daa    
  421d80:	and    dh,BYTE PTR [ebp+0x5e6a394]
  421d86:	jae    0x421d84
  421d88:	out    dx,al
  421d89:	xchg   ecx,eax
  421d8a:	loopne 0x421df8
  421d8c:	xchg   BYTE PTR [esi-0x6f90546],ch
  421d92:	jns    0x421dbd
  421d94:	push   ds
  421d95:	push   ss
  421d96:	add    al,0xc9
  421d98:	mov    ds:0x8329215b,al
  421d9d:	int3   
  421d9e:	inc    edi
  421d9f:	sub    eax,0x3229bea2
  421da4:	fxch   st(5)
  421da6:	(bad)  
  421da7:	mov    eax,ds:0xd22cfb0d
  421dac:	push   0xe318d35e
  421db1:	sbb    al,0xc
  421db3:	(bad)  
  421db4:	jne    0x421dfb
  421db6:	add    ebx,DWORD PTR [eax-0x6f]
  421db9:	xor    esp,DWORD PTR [edx]
  421dbb:	sub    al,bh
  421dbd:	iret   
  421dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dbf:	pop    edx
  421dc0:	push   0xfffffffc
  421dc2:	cwde   
  421dc3:	sub    DWORD PTR [eax+0x4a],eax
  421dc6:	ret    
  421dc7:	sbb    ebp,0x3452aaad
  421dcd:	(bad)  
  421dce:	cmp    DWORD PTR fs:[edi-0x5205c5fc],0xf47c838c
  421dd9:	in     al,dx
  421dda:	cdq    
  421ddb:	sub    DWORD PTR [ecx+ebx*2-0x2af320d],ecx
  421de2:	mov    ch,0xc4
  421de4:	sar    dl,cl
  421de6:	dec    eax
  421de7:	sbb    al,dh
  421de9:	xchg   ecx,eax
  421dea:	test   cl,ah
  421dec:	in     al,0x9c
  421dee:	cli    
  421def:	lods   eax,DWORD PTR ds:[esi]
  421df0:	fdiv   DWORD PTR [ebp-0xc]
  421df3:	mov    dl,0x2b
  421df5:	std    
  421df6:	cs cli 
  421df8:	ds mov esp,0xbd401e19
  421dfe:	xchg   ebp,eax
  421dff:	inc    edi
  421e00:	fcom   QWORD PTR [edx]
  421e02:	ds sti 
  421e04:	jle    0x421de2
  421e06:	daa    
  421e07:	adc    al,0x6e
  421e09:	jmp    0x3b4f:0x58f53e70
  421e10:	or     bh,BYTE PTR [esi]
  421e12:	jp     0x421e8b
  421e14:	sbb    BYTE PTR [esi],ah
  421e16:	test   eax,0xf9503861
  421e1b:	xchg   edx,eax
  421e1c:	dec    ecx
  421e1d:	cmc    
  421e1e:	inc    esp
  421e1f:	pushf  
  421e20:	data16 mov dh,0x1d
  421e23:	rcl    BYTE PTR [edx+0x46ee9771],1
  421e29:	sbb    al,0x9f
  421e2b:	imul   esi,DWORD PTR [edi+0x120fddaa],0x1208bc1b
  421e35:	rcr    DWORD PTR [ebx],1
  421e37:	(bad)
  421e3b:	call   0xab4f:0x5a13b10f
  421e42:	adc    ebx,0xffffffaa
  421e45:	cli    
  421e46:	add    ebp,DWORD PTR [ebx+0x30]
  421e49:	ja     0x421e16
  421e4b:	dec    eax
  421e4c:	jo     0x421eb2
  421e4e:	mov    BYTE PTR [edi+eiz*8],0x8d
  421e52:	imul   ebp,DWORD PTR [edx],0xe46ca143
  421e58:	mov    bh,0x5
  421e5a:	in     eax,0xcb
  421e5c:	call   0x4f089bae
  421e61:	sub    DWORD PTR [eax+edi*4-0x7d],0xfffffffa
  421e66:	out    0x2e,eax
  421e68:	jno    0x421e72
  421e6a:	and    eax,0x66bdc2c0
  421e6f:	pop    ds
  421e70:	(bad)  
  421e71:	mov    ebp,0x1bca258
  421e76:	pop    ebx
  421e77:	push   cs
  421e78:	fisttp QWORD PTR [edi]
  421e7a:	pop    ecx
  421e7b:	jp     0x421e4a
  421e7d:	fsub   QWORD PTR [edi+0xa]
  421e80:	pushf  
  421e81:	out    0x6b,al
  421e83:	jne    0x421eac
  421e85:	in     al,dx
  421e86:	xchg   ebp,eax
  421e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e88:	and    esp,DWORD PTR [eax+0x389e45b5]
  421e8e:	jecxz  0x421eff
  421e90:	or     DWORD PTR [edi],0x32
  421e93:	sbb    ah,BYTE PTR [ebx+0x5c]
  421e96:	inc    eax
  421e97:	push   ds
  421e98:	pop    eax
  421e99:	inc    esi
  421e9a:	pusha  
  421e9b:	push   esi
  421e9c:	mov    esi,edi
  421e9e:	shl    BYTE PTR [ebx-0x5d],0xef
  421ea2:	inc    ebx
  421ea3:	xchg   BYTE PTR [edi],bl
  421ea5:	or     bh,cl
  421ea7:	out    0x17,al
  421ea9:	sbb    eax,0xa04c0d75
  421eae:	dec    ebx
  421eaf:	mov    edx,ebx
  421eb1:	jmp    0x1e7f0c90
  421eb6:	mov    cl,0xea
  421eb8:	shl    DWORD PTR [ebp+0x7c],0x3f
  421ebc:	aas    
  421ebd:	outs   dx,BYTE PTR ds:[esi]
  421ebe:	test   DWORD PTR [edx],ecx
  421ec0:	hlt    
  421ec1:	jmp    0xe4a3d16d
  421ec6:	inc    ebx
  421ec7:	push   edi
  421ec8:	pop    eax
  421ec9:	aaa    
  421eca:	ror    bh,0xed
  421ecd:	outs   dx,BYTE PTR ds:[esi]
  421ece:	jmp    0x2b78:0x2b05a0b9
  421ed5:	jae    0x421ef6
  421ed7:	sbb    BYTE PTR [eax+0x7fec9557],dh
  421edd:	cmp    BYTE PTR [ebx+0x2d1f6bb0],ch
  421ee3:	mov    ecx,0xde0ae9ae
  421ee8:	(bad)  
  421ee9:	retf   
  421eea:	jmp    0x421ee7
  421eec:	jmp    0x421eff
  421eee:	les    esi,FWORD PTR [ebx]
  421ef0:	mov    eax,0x2b109221
  421ef5:	dec    ecx
  421ef6:	sbb    ebp,eax
  421ef8:	mov    ecx,0x7ce6dfa9
  421efd:	push   cs
  421efe:	mov    ds,ebp
  421f00:	pop    edx
  421f01:	mov    WORD PTR [ebp-0x7c],ds
  421f04:	jb     0x421f77
  421f06:	pop    es
  421f07:	add    dl,bh
  421f09:	pop    esi
  421f0a:	sti    
  421f0b:	enter  0x716d,0xe4
  421f0f:	xor    ecx,esp
  421f11:	add    al,0x0
  421f13:	and    al,0xd6
  421f15:	cmp    BYTE PTR [ebx],cl
  421f17:	inc    esi
  421f18:	xor    al,0xad
  421f1a:	inc    ebp
  421f1b:	mov    ebp,0x1cd8c0bd
  421f20:	daa    
  421f21:	nop
  421f22:	ret    
  421f23:	push   esp
  421f24:	sbb    DWORD PTR [ecx+edx*1],0x3aaa1870
  421f2b:	pop    ds
  421f2c:	sbb    cl,BYTE PTR [edx-0x3b8bbc03]
  421f32:	aad    0xd5
  421f34:	popa   
  421f35:	imul   edi,ebx,0xffffffea
  421f38:	jl     0x421f9f
  421f3a:	lea    eax,[esi]
  421f3c:	xor    ebx,eax
  421f3e:	fadd   st,st(2)
  421f40:	push   edx
  421f41:	fidivr DWORD PTR [ecx+ebp*4-0x34977508]
  421f48:	cmp    dh,BYTE PTR [ebp-0x4e]
  421f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f4c:	jl     0x421f4f
  421f4e:	jmp    0x6a2e660b
  421f53:	push   edx
  421f54:	cmp    al,0xb2
  421f56:	xor    DWORD PTR [ecx],ebx
  421f58:	xor    BYTE PTR [ebx],dl
  421f5a:	xchg   esp,eax
  421f5b:	fwait
  421f5c:	call   0xd001:0x591216b4
  421f63:	add    al,0x87
  421f65:	inc    ebp
  421f66:	push   edx
  421f67:	ret    
  421f68:	test   eax,0xe0e199f7
  421f6d:	adc    cl,dh
  421f6f:	inc    ebp
  421f70:	and    BYTE PTR [ecx],ah
  421f72:	and    DWORD PTR [ebx],ebx
  421f74:	ja     0x421fa4
  421f76:	imul   esp,eax,0x30
  421f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f7a:	inc    si
  421f7c:	mov    al,BYTE PTR [edx-0x64bd63a5]
  421f82:	imul   eax,DWORD PTR [ebx-0x5103b8c4],0x7d
  421f89:	(bad)
  421f8c:	jbe    0x421fac
  421f8e:	pop    ds
  421f8f:	ret    
  421f90:	in     al,dx
  421f91:	pushf  
  421f92:	sti    
  421f93:	rol    BYTE PTR ds:0x675d2297,cl
  421f99:	mov    BYTE PTR [esi],bh
  421f9b:	fsub   st(3),st
  421f9d:	or     DWORD PTR [esi+0x45],ebp
  421fa0:	mov    ebp,0x86252fc1
  421fa5:	push   es
  421fa6:	xchg   DWORD PTR [ebx+0x73ab1505],esi
  421fac:	mov    ds:0x694886fa,al
  421fb1:	sar    BYTE PTR [ecx],cl
  421fb3:	jge    0x421f54
  421fb5:	xchg   esi,eax
  421fb6:	ret    
  421fb7:	fmul   DWORD PTR [edi]
  421fb9:	push   0xb37bf048
  421fbe:	stos   BYTE PTR es:[edi],al
  421fbf:	xchg   edx,eax
  421fc1:	and    eax,0xd9e8ac90
  421fc6:	mov    eax,ds:0x40817f2d
  421fcb:	(bad)  
  421fcc:	js     0x421fcb
  421fce:	pop    esi
  421fcf:	pop    esi
  421fd0:	fcmovnb st,st(1)
  421fd2:	clc    
  421fd3:	mov    ebx,0x6eeeba8b
  421fd8:	les    edx,FWORD PTR [eax+ebx*8]
  421fdb:	sbb    bh,BYTE PTR [eax+0x24aeddf2]
  421fe1:	mov    esp,DWORD PTR [ebp-0x4f]
  421fe4:	not    BYTE PTR [esi+ecx*4]
  421fe7:	and    cl,BYTE PTR [ebx]
  421fe9:	push   ss
  421fea:	ins    BYTE PTR es:[edi],dx
  421feb:	and    al,0x18
  421fed:	repnz retf 0x52fb
  421ff1:	loope  0x422051
  421ff3:	iret   
  421ff4:	repnz push cs
  421ff6:	add    edi,DWORD PTR [ebp-0x51]
  421ff9:	dec    edi
  421ffa:	loopne 0x422000
  421ffc:	fnstsw WORD PTR [ecx]
  421ffe:	scas   eax,DWORD PTR es:[edi]
  421fff:	sti    
  422000:	ss jecxz 0x421ff3
  422003:	or     BYTE PTR [edi-0x1eee8786],dl
  422009:	ss scas eax,DWORD PTR es:[edi]
  42200b:	and    esi,DWORD PTR [esi-0x68d93700]
  422011:	add    ecx,DWORD PTR ds:0x6faa296e
  422017:	sbb    edi,DWORD PTR [edi-0x42]
  42201a:	and    ah,bh
  42201c:	cld    
  42201d:	into   
  42201e:	idiv   BYTE PTR [edi]
  422020:	or     esi,DWORD PTR [edx-0x2c]
  422023:	and    BYTE PTR [edi+ebp*1+0x22568f9e],dh
  42202a:	mov    ds:0x63246430,eax
  42202f:	mov    DWORD PTR [esi+edx*2+0x124ae14c],ebx
  422036:	mov    ah,0x23
  422038:	xchg   ebp,eax
  422039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42203a:	shr    cl,0xe3
  42203d:	mov    al,ds:0x7d76d83a
  422042:	sti    
  422043:	out    dx,eax
  422044:	pop    edx
  422045:	inc    eax
  422046:	jecxz  0x4220b7
  422048:	push   ebx
  422049:	icebp  
  42204a:	jmp    0xe283:0x6bc6eef4
  422051:	clc    
  422052:	dec    esp
  422053:	fs and eax,0xfbcd8b4c
  422059:	mov    eax,0x303351e4
  42205e:	gs sti 
  422060:	jle    0x42201d
  422062:	add    BYTE PTR [ebx],ch
  422064:	scas   eax,DWORD PTR es:[edi]
  422065:	mov    bl,0x47
  422067:	mul    DWORD PTR [esi-0x21]
  42206a:	mov    al,0xb2
  42206c:	retf   
  42206d:	mov    ds:0x30511214,al
  422072:	add    BYTE PTR [ebx+0x718498e5],ah
  422078:	add    DWORD PTR [ebp+0x23f67b6c],0xbbf3c208
  422082:	pop    esp
  422083:	sub    ecx,ecx
  422085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422086:	test   DWORD PTR [edx],ebp
  422088:	dec    eax
  422089:	push   esp
  42208a:	addr16 mov ch,0xf2
  42208d:	enter  0x3be6,0x4
  422091:	call   0xaa5b:0xfc7c005a
  422098:	or     al,cl
  42209a:	adc    al,0xb6
  42209c:	dec    esi
  42209d:	cli    
  42209e:	mov    edi,0x481958fc
  4220a3:	jb     0x4220e9
  4220a5:	push   ds
  4220a6:	add    eax,0xedd95615
  4220ab:	adc    BYTE PTR [ebp+0x1],0x31
  4220af:	xchg   esp,eax
  4220b0:	out    0x66,al
  4220b2:	or     esp,esi
  4220b4:	pop    esp
  4220b5:	or     al,0x8
  4220b7:	ja     0x4220fd
  4220b9:	push   ebp
  4220ba:	mov    DWORD PTR [esi+0xbafcfb5],0x6d9e6151
  4220c4:	inc    ebx
  4220c5:	ins    BYTE PTR es:[edi],dx
  4220c6:	mov    dh,0x8b
  4220c8:	or     BYTE PTR [ebx-0x51529f6d],cl
  4220ce:	pop    edx
  4220cf:	(bad)  
  4220d0:	shl    DWORD PTR ds:0x68da9b9f,cl
  4220d6:	outs   dx,BYTE PTR ds:[esi]
  4220d7:	cmp    al,0x84
  4220d9:	int3   
  4220da:	not    dl
  4220dc:	shr    DWORD PTR [ebx+0x40f688a9],1
  4220e2:	add    eax,DWORD PTR [edi-0x21feb6a1]
  4220e8:	nop
  4220e9:	jmp    0x4220b3
  4220eb:	pop    ebp
  4220ec:	jno    0x422161
  4220ee:	cs jae 0x42209c
  4220f1:	sbb    esp,esp
  4220f3:	fistp  QWORD PTR [eax]
  4220f5:	inc    ecx
  4220f6:	out    dx,eax
  4220f7:	jmp    0x7438:0xfe8fccb0
  4220fe:	pop    eax
  4220ff:	mov    edi,0xede6fdd4
  422104:	xchg   esp,eax
  422105:	fs push ebp
  422107:	hlt    
  422108:	xchg   DWORD PTR [eax+0x75],esp
  42210b:	stc    
  42210c:	xchg   BYTE PTR ds:0x250fe9f1,ch
  422112:	push   0x38
  422114:	(bad)  
  422115:	pop    ss
  422116:	and    eax,0x7f6ef43a
  42211b:	(bad)  
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	fimul  WORD PTR [edi+0x6f]
  422120:	sti    
  422121:	ror    BYTE PTR [esi-0x7f],cl
  422124:	fadd   DWORD PTR [edx-0x38a41509]
  42212a:	repz mov eax,0xe62faead
  422130:	call   0x4631:0xcaac6f5e
  422137:	adc    eax,0x2243d0ec
  42213c:	and    BYTE PTR [esi],bl
  42213e:	xchg   esp,eax
  42213f:	adc    bh,ah
  422141:	jne    0x42212f
  422143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422144:	mov    ch,0x28
  422146:	sub    eax,0x31
  422149:	repnz mov eax,ds:0x3c34a11e
  42214f:	dec    ebp
  422150:	push   ebp
  422151:	and    al,0xe3
  422153:	dec    ebx
  422154:	in     eax,0x4b
  422156:	jb     0x422155
  422158:	fadd   st(2),st
  42215a:	(bad)  
  42215b:	jp     0x422186
  42215d:	and    DWORD PTR ds:0xdc569eab,ebp
  422163:	lea    esi,ds:0x8ff58043
  422169:	mov    ch,0x8b
  42216b:	cwde   
  42216c:	xchg   esp,eax
  42216d:	bound  esp,QWORD PTR [ebp-0x51042f9c]
  422173:	ja     0x422154
  422175:	enter  0x26ba,0xb6
  422179:	fcmovnb st,st(2)
  42217b:	lds    ecx,FWORD PTR [ecx-0x3d]
  42217e:	jb     0x422110
  422180:	mov    bl,0x56
  422182:	dec    ebp
  422183:	(bad)  
  422184:	in     eax,dx
  422185:	adc    ecx,DWORD PTR [esi]
  422187:	scas   al,BYTE PTR es:[edi]
  422188:	(bad)  
  422189:	cli    
  42218a:	xchg   edi,eax
  42218b:	adc    eax,0x96ebda4a
  422190:	jg     0x42220d
  422192:	dec    edx
  422193:	scas   al,BYTE PTR es:[edi]
  422194:	mov    al,ds:0x2dc67293
  422199:	xchg   ecx,eax
  42219a:	xchg   esp,eax
  42219b:	(bad)  
  42219c:	or     al,0x36
  42219e:	and    eax,0x3a37c2c4
  4221a3:	pop    ecx
  4221a4:	into   
  4221a5:	aam    0x4d
  4221a7:	stos   DWORD PTR es:[edi],eax
  4221a8:	mov    esp,0xd6eb7d73
  4221ad:	xor    DWORD PTR [edx+edx*2],0xcaf04768
  4221b4:	mov    ch,0xd2
  4221b6:	enter  0x6b60,0x9a
  4221ba:	push   0x2744b15e
  4221bf:	sti    
  4221c0:	arpl   WORD PTR [ebx],cx
  4221c2:	dec    edx
  4221c3:	pop    ss
  4221c4:	push   0xffffffcb
  4221c6:	stos   DWORD PTR es:[edi],eax
  4221c7:	mov    bh,0x75
  4221c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ca:	xchg   ecx,eax
  4221cb:	in     al,0xcc
  4221cd:	cs js  0x42220f
  4221d0:	inc    eax
  4221d1:	sbb    ch,BYTE PTR [esi-0x79]
  4221d4:	(bad)  
  4221d5:	ficom  WORD PTR [ecx+0x39]
  4221d8:	retf   
  4221d9:	ret    
  4221da:	dec    eax
  4221db:	inc    esp
  4221dc:	test   DWORD PTR ds:0xf562b264,edi
  4221e2:	dec    edi
  4221e3:	and    BYTE PTR [edx],ch
  4221e5:	call   0xaba4242
  4221ea:	sub    ebx,DWORD PTR [eax]
  4221ec:	rcr    ebx,0x44
  4221ef:	mov    esp,0x11def0a6
  4221f4:	push   ss
  4221f5:	and    al,0x3e
  4221f7:	mov    dl,0x6a
  4221f9:	fimul  WORD PTR ds:0x22586c38
  4221ff:	xchg   esp,eax
  422200:	mov    cl,0x96
  422202:	retf   0xd93d
  422205:	fsub   DWORD PTR [eax]
  422207:	adc    BYTE PTR [edx],0x6f
  42220a:	outs   dx,BYTE PTR ds:[esi]
  42220b:	push   es
  42220c:	pop    ecx
  42220d:	inc    edx
  42220e:	pop    edx
  42220f:	std    
  422210:	les    esi,FWORD PTR [edx+0x46]
  422213:	(bad)  
  422215:	mov    bh,0x38
  422217:	jno    0x422249
  422219:	loope  0x42219e
  42221b:	sub    eax,DWORD PTR [esi]
  42221d:	xchg   ebx,eax
  42221e:	and    eax,0x1cb38b86
  422223:	adc    DWORD PTR [ecx+0x32],ebx
  422226:	and    DWORD PTR [ebx+ecx*2-0x71],edi
  42222a:	fbstp  TBYTE PTR [ebp+0x172b6909]
  422230:	jg     0x422298
  422232:	fcmovb st,st(0)
  422234:	sbb    BYTE PTR [ecx-0xd],dl
  422237:	inc    ebp
  422238:	retf   0xcc39
  42223b:	enter  0x132d,0x95
  42223f:	fcmove st,st(0)
  422241:	nop
  422242:	lods   al,BYTE PTR ds:[esi]
  422243:	inc    BYTE PTR [edx+0x67]
  422246:	adc    BYTE PTR [esi+esi*8+0x26],bl
  42224a:	int3   
  42224b:	popa   
  42224c:	add    dh,BYTE PTR [edi+0xa4eb43d]
  422252:	push   edx
  422253:	sbb    al,0x54
  422255:	stos   DWORD PTR es:[edi],eax
  422256:	icebp  
  422257:	mov    edx,0xb64311cc
  42225c:	push   esp
  42225d:	add    ebx,DWORD PTR [esi+0x7b]
  422260:	adc    DWORD PTR [eax+0x95f8fc1],eax
  422266:	push   ss
  422267:	test   al,0xee
  422269:	mov    ds:0x71e167c0,al
  42226e:	add    DWORD PTR [eax-0x55f5898d],esi
  422274:	push   0x4e
  422276:	add    ebx,DWORD PTR [ebx+esi*1-0x1]
  42227a:	jge    0x4222c8
  42227c:	cmp    al,0x8b
  42227e:	mov    eax,ds:0x5dde3243
  422283:	out    0x1,eax
  422285:	inc    esp
  422286:	jno    0x4222ca
  422288:	fist   DWORD PTR [edi-0x1f6632e5]
  42228e:	pop    esp
  42228f:	jno    0x422281
  422291:	sahf   
  422292:	mov    dl,0x86
  422294:	mov    edi,0x8ca92b47
  422299:	pop    eax
  42229a:	shl    BYTE PTR [edx-0x21],0xf1
  42229e:	sub    BYTE PTR [eax-0x6634ab04],bh
  4222a4:	pop    eax
  4222a5:	adc    al,0x2a
  4222a7:	pop    esi
  4222a8:	hlt    
  4222a9:	neg    DWORD PTR [ebx+0x76]
  4222ac:	pop    ebp
  4222ad:	push   cs
  4222ae:	inc    ebx
  4222af:	ja     0x4222fc
  4222b1:	mov    dh,0x94
  4222b3:	lahf   
  4222b4:	nop
  4222b5:	sub    BYTE PTR [ebx+0x20daac2a],0x20
  4222bc:	mov    WORD PTR [edi],?
  4222be:	sub    DWORD PTR [esi-0x78806e92],eax
  4222c4:	mov    bl,0x1d
  4222c6:	mov    edx,0xd63495e1
  4222cb:	xchg   esp,eax
  4222cc:	jbe    0x4222ec
  4222ce:	in     eax,0x20
  4222d0:	inc    BYTE PTR [esi-0x8]
  4222d3:	(bad)
  4222d6:	fdivr  DWORD PTR [ebx+0x14afb03b]
  4222dc:	sub    DWORD PTR [esi+0x77],esi
  4222df:	cmc    
  4222e0:	mov    esp,0x73b4fa38
  4222e5:	pop    edx
  4222e6:	lahf   
  4222e7:	lods   eax,DWORD PTR ds:[esi]
  4222e8:	in     eax,0x56
  4222ea:	pop    ds
  4222eb:	and    BYTE PTR [edi],cl
  4222ed:	push   ecx
  4222ee:	xchg   ebp,eax
  4222ef:	in     al,0x0
  4222f1:	jge    0x4222d7
  4222f3:	test   al,0xda
  4222f5:	(bad)  [edi+0xcc32d39]
  4222fb:	fimul  DWORD PTR [ebx+0x1f2e67af]
  422301:	push   ds
  422302:	inc    ebx
  422303:	push   ebx
  422304:	adc    BYTE PTR [bp+0x77b6],bh
  422309:	pop    ebp
  42230a:	sbb    al,0x5d
  42230c:	sub    al,cl
  42230e:	cmp    eax,0x1ece4630
  422313:	mov    eax,0xff9cdc10
  422318:	mov    bh,BYTE PTR [ecx+0x1f2eae6f]
  42231e:	aad    0x35
  422320:	dec    eax
  422321:	add    bl,bh
  422323:	lods   al,BYTE PTR ds:[esi]
  422324:	inc    ebx
  422325:	arpl   WORD PTR [esi-0x448749d],dx
  42232b:	push   0xffffffc3
  42232d:	inc    esi
  42232e:	sbb    BYTE PTR [ebx-0x700bf951],cl
  422334:	lock sub BYTE PTR [ebp+eax*4-0x5a],al
  422339:	fiadd  WORD PTR [eax-0x2d]
  42233c:	push   ebp
  42233d:	push   ds
  42233e:	xchg   cl,cl
  422340:	retf   
  422341:	push   0x183570ab
  422346:	dec    esi
  422347:	in     al,0x26
  422349:	(bad)  
  42234a:	mov    dl,0xf0
  42234c:	fiadd  WORD PTR ds:0x2f1f582
  422352:	jnp    0x422321
  422354:	jae    0x4223b5
  422356:	dec    edx
  422357:	jbe    0x422392
  422359:	mov    bh,0x71
  42235b:	dec    esi
  42235c:	push   ebx
  42235d:	ds popf 
  42235f:	push   edi
  422360:	enter  0x5182,0xcf
  422364:	dec    eax
  422365:	mov    eax,0xeefac175
  42236a:	mov    esp,0x9849325e
  42236f:	popa   
  422370:	pop    esi
  422371:	and    eax,0xfbfd4f9d
  422376:	cmp    al,BYTE PTR [edi+edi*1]
  422379:	xlat   BYTE PTR ds:[ebx]
  42237a:	(bad)  
  42237b:	gs mov cl,0xeb
  42237e:	xchg   edx,eax
  42237f:	sbb    BYTE PTR [ecx-0x3a],0x49
  422383:	push   ds
  422384:	and    BYTE PTR [ebx+0x8],0x24
  422388:	stos   DWORD PTR es:[edi],eax
  422389:	in     al,0x1d
  42238b:	ins    DWORD PTR es:[edi],dx
  42238c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42238d:	test   eax,0x510bb182
  422392:	and    edx,DWORD PTR [ebp-0x57]
  422395:	push   ss
  422396:	pop    esp
  422397:	pop    ebp
  422398:	inc    esp
  422399:	lods   al,BYTE PTR ds:[esi]
  42239a:	pop    ss
  42239b:	push   ebx
  42239c:	ss mov cx,0x2dd7
  4223a1:	std    
  4223a2:	sbb    al,0xfd
  4223a4:	stos   BYTE PTR es:[edi],al
  4223a5:	push   0xfffffffa
  4223a7:	xlat   BYTE PTR ds:[ebx]
  4223a8:	xor    esp,DWORD PTR [eax+0x38c69a14]
  4223ae:	inc    edi
  4223af:	cmc    
  4223b0:	jmp    ebx
  4223b2:	mov    ch,0x25
  4223b4:	push   edx
  4223b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b6:	or     al,0x12
  4223b8:	cdq    
  4223b9:	add    esp,DWORD PTR [edi]
  4223bb:	lock push ebp
  4223bd:	in     al,0xc0
  4223bf:	or     al,0x91
  4223c1:	cmc    
  4223c2:	imul   esi,DWORD PTR [edx-0x77],0xffffffd1
  4223c6:	std    
  4223c7:	push   0x6bc40bb9
  4223cc:	adc    dl,cl
  4223ce:	aad    0x35
  4223d0:	jb     0x422397
  4223d2:	or     DWORD PTR [ebp+0x32],ecx
  4223d5:	outs   dx,BYTE PTR ds:[esi]
  4223d6:	push   ebp
  4223d7:	outs   dx,BYTE PTR ds:[esi]
  4223d8:	in     eax,dx
  4223d9:	sub    al,0xa0
  4223db:	sbb    bh,ch
  4223dd:	popa   
  4223de:	mov    bh,0x64
  4223e0:	add    BYTE PTR ss:[esi+edi*1],bh
  4223e4:	bound  esp,QWORD PTR [eax]
  4223e6:	xchg   edi,eax
  4223e7:	mov    cl,0x23
  4223e9:	sub    dl,al
  4223eb:	mov    dh,0x9c
  4223ed:	fdiv   DWORD PTR [edi]
  4223ef:	div    DWORD PTR [edi-0x12]
  4223f2:	mov    al,ds:0xa48dcb7a
  4223f7:	mov    cl,0xfc
  4223f9:	fidiv  DWORD PTR [edx]
  4223fb:	loope  0x4223b9
  4223fd:	lock cmp BYTE PTR [eax-0x62f08a70],ah
  422404:	jecxz  0x422469
  422406:	(bad)  
  422407:	hlt    
  422408:	xchg   edx,eax
  422409:	inc    esp
  42240a:	push   es
  42240b:	int3   
  42240c:	es stos BYTE PTR es:[edi],al
  42240e:	sub    esi,ecx
  422410:	push   esp
  422411:	leave  
  422412:	out    dx,al
  422413:	xor    DWORD PTR [esi-0x169f4e45],eax
  422419:	xchg   BYTE PTR [edi],bl
  42241b:	cs jg  0x422446
  42241e:	push   edx
  42241f:	mov    edx,0x8ce82b6
  422424:	iret   
  422425:	icebp  
  422426:	pop    ss
  422427:	in     eax,dx
  422428:	sti    
  422429:	xor    ecx,edx
  42242b:	(bad)  
  42242c:	jno    0x422431
  42242e:	adc    DWORD PTR [esi+0x53],0x9
  422432:	sbb    al,0xcf
  422434:	sub    edi,ebx
  422436:	shl    BYTE PTR [ebx],cl
  422438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42243a:	into   
  42243b:	mov    al,0xe0
  42243d:	arpl   WORD PTR [esi+0xc],si
  422440:	aas    
  422441:	push   ss
  422442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422443:	cwde   
  422444:	fs push ebx
  422446:	(bad)  
  422447:	mov    BYTE PTR [esi+0x28de4f18],dh
  42244d:	call   0x4c60:0xdf3b21d3
  422454:	mov    esp,fs
  422456:	aam    0x8c
  422458:	out    dx,al
  422459:	fcom   DWORD PTR [ecx+0x10]
  42245c:	xor    dh,0xb2
  42245f:	or     eax,DWORD PTR [eax+0x2172160e]
  422465:	leave  
  422466:	stos   BYTE PTR es:[edi],al
  422467:	into   
  422468:	xchg   ah,ch
  42246a:	jae    0x422483
  42246c:	sub    BYTE PTR [ebx-0x29cef64f],0xc6
  422473:	mov    dh,0xc3
  422475:	and    ecx,DWORD PTR [edi-0x71]
  422478:	or     esi,DWORD PTR [ebp+edi*8+0x62]
  42247c:	mov    fs,WORD PTR [esi-0xd326779]
  422482:	in     eax,dx
  422483:	nop
  422484:	lods   eax,DWORD PTR ds:[esi]
  422485:	cmp    DWORD PTR [edx],ebp
  422487:	add    DWORD PTR [ebx],0x97e93f0a
  42248d:	dec    eax
  42248e:	jge    0x42247f
  422490:	pop    ss
  422491:	sbb    bh,BYTE PTR [ecx+edx*2]
  422494:	mov    bh,dh
  422496:	aad    0xb
  422498:	movhps xmm7,QWORD PTR [edi+0x39aa7f5b]
  42249f:	neg    DWORD PTR [edx-0x25c817d3]
  4224a5:	push   edx
  4224a6:	dec    edx
  4224a7:	xchg   edx,eax
  4224a8:	jbe    0x4224e5
  4224aa:	or     al,0x87
  4224ac:	adc    al,0x13
  4224ae:	adc    eax,0xeb9a5968
  4224b3:	mov    ch,0x89
  4224b5:	(bad)  
  4224b6:	xchg   edx,esp
  4224b8:	fcmovu st,st(5)
  4224ba:	imul   ecx,DWORD PTR [edx]
  4224bd:	sbb    DWORD PTR [edx+eiz*2],0xffffffaf
  4224c1:	dec    ebp
  4224c2:	std    
  4224c3:	jbe    0x422530
  4224c5:	out    dx,eax
  4224c6:	mov    eax,ds:0xc7462a88
  4224cb:	xlat   BYTE PTR ds:[ebx]
  4224cc:	mov    ecx,0x8dc2cca4
  4224d1:	in     eax,0x72
  4224d3:	shl    esi,0x8e
  4224d6:	sub    dl,ch
  4224d8:	xchg   BYTE PTR [edi+0x1b],cl
  4224db:	clc    
  4224dc:	mov    dl,0x2a
  4224de:	(bad)  
  4224e0:	jbe    0x422549
  4224e2:	lods   al,BYTE PTR fs:[esi]
  4224e4:	xchg   esi,eax
  4224e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224e6:	add    al,0xf2
  4224e8:	sub    al,0x30
  4224ea:	ret    0xbff9
  4224ed:	dec    ecx
  4224ee:	pop    edi
  4224ef:	loop   0x42251b
  4224f1:	cmp    ch,BYTE PTR [eax-0x6c]
  4224f4:	mov    edi,DWORD PTR [eax]
  4224f6:	jae    0x42253e
  4224f8:	or     ch,BYTE PTR [ebx-0x73]
  4224fb:	fs push ebp
  4224fd:	dec    ebx
  4224fe:	xchg   edx,eax
  4224ff:	data16 (bad) 
  422501:	adc    BYTE PTR [ecx],dh
  422503:	sub    edx,DWORD PTR [eax-0x29b663db]
  422509:	shl    BYTE PTR [edx],0xec
  42250c:	jnp    0x422517
  42250e:	in     eax,0x15
  422510:	sbb    eax,DWORD PTR [edx+0x605294ed]
  422516:	neg    DWORD PTR [edx-0x34]
  422519:	cmp    edi,DWORD PTR [edi+esi*8-0x1f]
  42251d:	pop    ebp
  42251e:	sbb    esi,edi
  422520:	sub    ah,BYTE PTR [edi-0x1f]
  422523:	and    BYTE PTR [ecx+edx*1-0x7d10e578],cl
  42252a:	add    edi,DWORD PTR [ebp-0x729fa8d6]
  422530:	mov    bl,0x68
  422532:	jmp    0xe0c3158f
  422537:	adc    eax,0x77b8b008
  42253c:	in     al,dx
  42253d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253e:	push   esi
  42253f:	sub    eax,esi
  422541:	std    
  422542:	nop
  422543:	js     0x422592
  422545:	push   edi
  422546:	imul   eax,DWORD PTR [ecx+0x16],0xffffffd2
  42254a:	mov    bh,0x52
  42254c:	dec    eax
  42254d:	loopne 0x422551
  42254f:	adc    edi,DWORD PTR [ebx]
  422551:	adc    esi,ebp
  422553:	sub    al,0x0
  422555:	daa    
  422556:	sub    eax,0x4d878711
  42255b:	xchg   esi,eax
  42255c:	cli    
  42255d:	sti    
  42255e:	mov    ds:0x92a811f1,eax
  422563:	shr    BYTE PTR [esp+edx*2+0x60ff90df],0x8a
  42256b:	xchg   esi,eax
  42256c:	fcomp  QWORD PTR [edi+0x4e]
  42256f:	sysexit 
  422571:	test   DWORD PTR [ebp+esi*2-0x7d],ebx
  422575:	jg     0x422530
  422577:	lds    esi,FWORD PTR ds:0x8e52436e
  42257d:	adc    edi,DWORD PTR [edx+0x15bd7a9a]
  422583:	sbb    dl,dl
  422585:	ror    BYTE PTR [ebp-0x38],cl
  422588:	cmp    BYTE PTR [edx],dh
  42258a:	adc    eax,0xbc04de3b
  42258f:	mov    eax,0x60dfd7ed
  422594:	add    eax,0xc4ddba39
  422599:	mov    ah,0xc0
  42259b:	xor    BYTE PTR [ecx+0x7e2df275],0x5f
  4225a2:	pop    edi
  4225a3:	fbstp  TBYTE PTR ds:0x1479a9ed
  4225a9:	pop    es
  4225aa:	inc    edx
  4225ab:	leave  
  4225ac:	js     0x422567
  4225ae:	sbb    eax,0xf3a82bec
  4225b3:	add    ah,BYTE PTR [ecx-0x1]
  4225b6:	mov    ds:0xb1651788,eax
  4225bb:	ss push edi
  4225bd:	mov    DWORD PTR [eax-0x48],ebp
  4225c0:	jg     0x42259b
  4225c2:	jns    0x42263f
  4225c4:	test   ch,bh
  4225c6:	sti    
  4225c7:	pop    eax
  4225c8:	sub    DWORD PTR [eax+esi*1+0xa3b6ef1],edx
  4225cf:	pop    ebx
  4225d0:	rol    DWORD PTR [ebx-0x5c],0x99
  4225d4:	sar    BYTE PTR [esi-0x66],0xba
  4225d8:	je     0x422622
  4225da:	mov    eax,0x97e4ddb2
  4225df:	xchg   BYTE PTR [edi-0x12],ah
  4225e2:	add    BYTE PTR [ebp-0x61],al
  4225e5:	clc    
  4225e6:	jmp    0x9f6b:0x27e7c4b9
  4225ed:	cmp    DWORD PTR [ecx+edx*8],eax
  4225f0:	retf   0x5f63
  4225f3:	adc    DWORD PTR [esi-0x2b],ebp
  4225f6:	xor    esp,DWORD PTR [ecx-0x498fe744]
  4225fc:	aam    0xf5
  4225fe:	ds inc esp
  422600:	popa   
  422601:	loopne 0x4225bb
  422603:	adc    ebp,DWORD PTR [edx+ebp*4-0x2cc6f749]
  42260a:	arpl   WORD PTR [ebx-0x4a],ax
  42260d:	jecxz  0x4225c9
  42260f:	jp     0x4225d0
  422611:	fdiv   st,st(4)
  422613:	test   DWORD PTR [eax-0x59],ebp
  422616:	aam    0xa1
  422618:	cmp    eax,0xf7931059
  42261d:	sub    BYTE PTR [eax],0xb
  422620:	cmc    
  422621:	addr16 out 0x6f,al
  422624:	outs   dx,DWORD PTR ds:[esi]
  422625:	or     cl,BYTE PTR [eax+0x18]
  422628:	shr    BYTE PTR [edx+0x56],0xd3
  42262c:	pop    ds
  42262d:	or     DWORD PTR fs:[edx-0x56],0xbc0cb912
  422635:	push   ecx
  422636:	cmp    eax,0xa0d0ad8
  42263b:	inc    esi
  42263c:	bsf    eax,eax
  42263f:	enter  0x20b9,0x8c
  422643:	jecxz  0x42261f
  422645:	mov    al,ds:0x7c8b6be4
  42264a:	dec    ecx
  42264b:	jo     0x422642
  42264d:	in     al,dx
  42264e:	pop    ebx
  42264f:	lods   al,BYTE PTR ds:[esi]
  422650:	xor    eax,0xc87b9b23
  422655:	push   eax
  422656:	repnz pop ecx
  422658:	ins    BYTE PTR es:[edi],dx
  422659:	daa    
  42265a:	loope  0x42264d
  42265c:	imul   eax,DWORD PTR cs:[edi-0x275758df],0x93b84c52
  422667:	add    al,0xd9
  422669:	mov    WORD PTR [edi+edx*4-0x5dcec902],es
  422670:	aam    0x84
  422672:	adc    al,0x53
  422674:	push   cs
  422675:	cmp    edx,DWORD PTR [edi]
  422677:	ss fcmovnb st,st(2)
  42267a:	or     al,0x73
  42267c:	jp     0x422641
  42267e:	test   DWORD PTR [edx],ebx
  422680:	js     0x4226cb
  422682:	push   edi
  422683:	lods   eax,DWORD PTR ds:[esi]
  422684:	das    
  422685:	add    ecx,0xffffff90
  422688:	jmp    0x42269f
  42268a:	sti    
  42268b:	and    eax,0x152cc0ac
  422690:	jle    0x422637
  422692:	dec    eax
  422693:	cmp    eax,0xcf603eb4
  422698:	dec    eax
  422699:	data16 arpl si,dx
  42269c:	push   ss
  42269d:	xor    BYTE PTR [ecx],al
  42269f:	shl    BYTE PTR [edx],1
  4226a1:	pop    esi
  4226a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a3:	and    eax,0xb32c9b2e
  4226a8:	push   edi
  4226aa:	fild   QWORD PTR [ecx+0x772985cc]
  4226b0:	xor    esi,DWORD PTR [ebx+0x6c]
  4226b3:	lds    esi,FWORD PTR [ecx]
  4226b5:	lods   al,BYTE PTR ds:[esi]
  4226b6:	xchg   ebx,eax
  4226b7:	sbb    bl,BYTE PTR [esi-0x1c1dcaa]
  4226bd:	mov    ds:0x14f2efe6,al
  4226c2:	add    al,0x94
  4226c4:	pop    DWORD PTR [edx-0x65]
  4226c7:	dec    esp
  4226c8:	pop    ebp
  4226c9:	xor    BYTE PTR [ebx+0x7f],dh
  4226cc:	(bad)  [ecx+0x3b]
  4226cf:	jns    0x4226c4
  4226d1:	cmp    eax,0xd6456d1
  4226d6:	or     ch,ch
  4226d8:	jle    0x42268e
  4226da:	mov    eax,ds:0x1cc43dd7
  4226df:	dec    ecx
  4226e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e1:	xchg   ecx,eax
  4226e2:	mov    ebp,0x4beed0ff
  4226e7:	enter  0x13aa,0xaa
  4226eb:	pop    edx
  4226ec:	retf   
  4226ed:	outs   dx,BYTE PTR ds:[esi]
  4226ee:	xchg   edi,eax
  4226ef:	xor    BYTE PTR [ebx-0x5a],ah
  4226f2:	jbe    0x422682
  4226f4:	sbb    ch,BYTE PTR [ebp+0x24]
  4226f7:	rcr    DWORD PTR [esi+0x1492fb28],cl
  4226fd:	lock clc 
  4226ff:	aad    0xda
  422701:	fucomp st(6)
  422703:	mov    al,ds:0xe9a838dd
  422708:	jne    0x4226dd
  42270a:	jle    0x42271e
  42270c:	pop    esi
  42270d:	je     0x422742
  42270f:	shl    eax,0xda
  422712:	les    edi,FWORD PTR [ecx]
  422714:	push   ebp
  422715:	jo     0x4226ad
  422717:	fisub  WORD PTR es:[esi]
  42271a:	rol    DWORD PTR [edx+0x32],0xc4
  42271e:	sub    ebx,esp
  422720:	sub    bh,dl
  422722:	mov    DWORD PTR [esi-0x59cea154],ebx
  422728:	inc    BYTE PTR [ebx]
  42272a:	mov    dl,0xea
  42272c:	mov    ecx,0xf8474493
  422731:	cs jmp 0x422719
  422734:	scas   eax,DWORD PTR es:[edi]
  422735:	cld    
  422736:	into   
  422737:	popa   
  422738:	pushf  
  422739:	scas   al,BYTE PTR es:[edi]
  42273a:	sub    al,0xc2
  42273c:	ror    ebp,1
  42273e:	sub    BYTE PTR [esi],0xcf
  422741:	aad    0xd7
  422743:	enter  0xabdb,0x41
  422747:	gs scas eax,DWORD PTR es:[edi]
  422749:	add    BYTE PTR [eax+eiz*1],bh
  42274c:	push   ebx
  42274d:	daa    
  42274e:	loopne 0x4227a2
  422750:	push   edi
  422752:	ds inc edx
  422754:	stc    
  422755:	stos   DWORD PTR es:[edi],eax
  422756:	arpl   sp,cx
  422758:	and    cl,BYTE PTR [ebx+0x158dab81]
  42275e:	jmp    0x4226f9
  422760:	and    al,0xb2
  422762:	pop    ds
  422763:	stc    
  422764:	mov    ch,0xd3
  422766:	xor    al,BYTE PTR [edx-0x7dc336a2]
  42276c:	clc    
  42276d:	out    0xc9,eax
  42276f:	sti    
  422770:	fmul   DWORD PTR [ecx+0x7d6e0e6e]
  422776:	and    bl,ah
  422778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422779:	xchg   edi,eax
  42277a:	dec    ecx
  42277b:	xor    al,0x70
  42277d:	fdiv   st,st(5)
  42277f:	inc    ebx
  422780:	les    edx,FWORD PTR [edi-0x66]
  422783:	xor    eax,0x49f5eca8
  422788:	xchg   esi,eax
  422789:	push   0xffffffd9
  42278b:	ins    BYTE PTR es:[edi],dx
  42278c:	cmp    al,0xf1
  42278e:	fs mov bh,0x20
  422791:	sub    BYTE PTR [ecx-0x3e],al
  422794:	test   BYTE PTR [ecx-0xfb10940],cl
  42279a:	jl     0x4227ad
  42279c:	ror    DWORD PTR [ebx+0x2c],1
  42279f:	and    DWORD PTR [edi+0x5454f684],edx
  4227a5:	cmp    al,0xcc
  4227a7:	adc    al,BYTE PTR [esi+0x7c]
  4227aa:	dec    esi
  4227ab:	daa    
  4227ac:	pop    ds
  4227ad:	ror    DWORD PTR [eax+0x21],cl
  4227b0:	mov    ecx,0x46afa835
  4227b5:	sbb    dh,BYTE PTR [ebp-0x2d]
  4227b8:	push   ebx
  4227b9:	mov    ds:0x2ba3b430,eax
  4227be:	mov    bl,0xaa
  4227c0:	test   eax,0xf0ea0e69
  4227c5:	xchg   BYTE PTR [eax+0x2e],dl
  4227c8:	pop    es
  4227c9:	int    0xea
  4227cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227cc:	jg     0x42280d
  4227ce:	push   edx
  4227cf:	pop    esp
  4227d0:	push   ss
  4227d1:	or     ch,0x13
  4227d4:	ja     0x2f3671b8
  4227da:	jge    0x422779
  4227dc:	enter  0x40be,0x32
  4227e0:	sbb    DWORD PTR [esi+esi*2],ebx
  4227e3:	mov    BYTE PTR [edx+0x21],ch
  4227e6:	pop    ebp
  4227e7:	inc    esp
  4227e8:	cmc    
  4227e9:	rol    DWORD PTR [ebx],cl
  4227eb:	mov    esi,0x3a18375e
  4227f0:	retf   0xa8cc
  4227f3:	push   eax
  4227f4:	mov    edx,esp
  4227f6:	xchg   ebx,eax
  4227f7:	mov    dh,0x66
  4227f9:	cmc    
  4227fa:	adc    eax,DWORD PTR [ebp+0x142b71aa]
  422800:	mov    dh,0x98
  422802:	pop    edx
  422803:	mov    bh,0x85
  422805:	mov    DWORD PTR [eax],eax
  422807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422808:	jno    0x4227bb
  42280a:	sub    DWORD PTR [ecx-0x153a0e98],edi
  422810:	sub    al,BYTE PTR [ebx+0x1f]
  422813:	cs pop esp
  422815:	cdq    
  422816:	test   BYTE PTR [eax-0xb],cl
  422819:	ss mov esi,0xcb9b0762
  42281f:	jmp    0x6c0e:0xc8ccaec4
  422826:	mov    al,0xe9
  422828:	mov    eax,ds:0xf829b6b9
  42282d:	out    dx,al
  42282e:	mov    DWORD PTR [edi],esi
  422830:	sbb    bh,ah
  422832:	mov    esp,0x2dac3fcc
  422837:	scas   al,BYTE PTR es:[edi]
  422838:	push   0x59
  42283a:	clc    
  42283b:	dec    esi
  42283c:	mov    ss,WORD PTR [ebx+0x699b61f5]
  422842:	loop   0x42284d
  422844:	cdq    
  422845:	mov    ebx,0x4cb52d38
  42284a:	or     DWORD PTR [edi-0x6a],0xb8075a4a
  422851:	jecxz  0x42280a
  422853:	dec    esi
  422854:	imul   edi,DWORD PTR [eax-0x56],0xcd69a5ab
  42285b:	add    DWORD PTR [ebp+0x6e],ebx
  42285e:	xchg   edi,eax
  42285f:	out    0x1b,eax
  422861:	adc    eax,0x613f1596
  422866:	inc    ebp
  422867:	mov    ebp,0xa6230df4
  42286c:	xlat   BYTE PTR ds:[ebx]
  42286d:	ss sti 
  42286f:	pushf  
  422870:	and    ebp,edx
  422872:	sbb    ah,BYTE PTR [eax+ebp*4]
  422875:	push   ebp
  422876:	xor    eax,0x36a7f205
  42287b:	enter  0xc090,0xab
  42287f:	cmc    
  422880:	push   ebx
  422881:	or     al,0xa7
  422883:	cmp    DWORD PTR [edi],eax
  422885:	sub    DWORD PTR [ebp-0x1f5a491e],edx
  42288b:	cmova  edx,DWORD PTR [edx+eiz*2-0x5e]
  422890:	popf   
  422891:	push   edx
  422892:	in     eax,dx
  422893:	adc    eax,0x42d56c87
  422898:	mov    dl,0x6f
  42289a:	add    DWORD PTR [ecx+0x5e821a1d],ecx
  4228a0:	mov    edx,DWORD PTR [esi-0x47]
  4228a3:	jg     0x422844
  4228a5:	xor    al,0x78
  4228a7:	xor    ebp,DWORD PTR [edi]
  4228a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228aa:	mov    al,ds:0xd86f2f44
  4228af:	arpl   WORD PTR [esi-0x31],bx
  4228b2:	add    ch,BYTE PTR [ebx]
  4228b4:	sub    esi,DWORD PTR [eax-0x52]
  4228b7:	pop    ebx
  4228b8:	mov    DWORD PTR [esp+ebp*2+0x3a9e66b2],edx
  4228bf:	ja     0x4228bf
  4228c1:	xchg   esp,eax
  4228c2:	cs xchg ebp,eax
  4228c4:	dec    eax
  4228c5:	add    al,0x76
  4228c7:	jae    0x4228ee
  4228c9:	fisttp QWORD PTR [ebx+0x73]
  4228cc:	fld    QWORD PTR [esi-0x11]
  4228cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d0:	add    ebp,DWORD PTR [edx-0x73da15bf]
  4228d6:	sub    BYTE PTR [ebx-0x2c],cl
  4228d9:	push   es
  4228da:	mov    es,WORD PTR [ebx]
  4228dc:	push   esp
  4228dd:	sbb    DWORD PTR [edx+0x6d],ecx
  4228e0:	lahf   
  4228e1:	jge    0x422930
  4228e3:	xchg   edi,eax
  4228e4:	mov    DWORD PTR [eax+0x5e],edi
  4228e7:	das    
  4228e8:	cmp    esi,DWORD PTR [edi-0x26]
  4228eb:	hlt    
  4228ec:	push   es
  4228ed:	cli    
  4228ee:	cmp    al,0x32
  4228f0:	mov    eax,DWORD PTR [ebx]
  4228f2:	or     eax,0xf4fc88b8
  4228f7:	pop    ecx
  4228f8:	inc    edx
  4228f9:	aas    
  4228fa:	adc    ch,al
  4228fc:	into   
  4228fd:	dec    esp
  4228fe:	fdivr  st(3),st
  422900:	xor    eax,0xcb3e03a1
  422905:	out    0xe9,eax
  422907:	inc    eax
  422908:	out    dx,al
  422909:	mov    esp,0x34f03882
  42290e:	(bad)  
  42290f:	xchg   edx,eax
  422910:	cs pusha 
  422912:	gs in  al,dx
  422914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422915:	das    
  422916:	push   ebp
  422917:	out    0x53,al
  422919:	jb     0x42297e
  42291b:	xchg   dl,al
  42291d:	popa   
  42291e:	ds push 0xffffff9c
  422921:	push   ds
  422922:	adc    DWORD PTR [esp+edi*1],0x8c1ab37c
  422929:	jnp    0x422910
  42292b:	lods   eax,DWORD PTR ds:[esi]
  42292c:	out    dx,eax
  42292d:	jb     0x42299d
  42292f:	pop    eax
  422930:	sbb    BYTE PTR [ebp+0x214f8bc2],dh
  422936:	imul   esp,DWORD PTR [esi+eiz*4-0x2e455525],0x5e3595a3
  422941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422942:	sub    ah,cl
  422944:	pop    ds
  422945:	jae    0x4228fb
  422947:	mov    ch,0xd7
  422949:	ret    0x4a9
  42294c:	mov    edx,edi
  42294e:	dec    esi
  42294f:	jmp    0xa300b54a
  422954:	daa    
  422955:	jne    0x4228d8
  422957:	cmp    eax,0xcb28da0e
  42295c:	mov    DWORD PTR [ebp-0x80],esp
  42295f:	inc    ch
  422961:	jecxz  0x4228f3
  422963:	clc    
  422964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422966:	rol    BYTE PTR [ecx+esi*2],1
  422969:	and    esp,esi
  42296b:	adc    ch,BYTE PTR [ebx]
  42296d:	fwait
  42296e:	mov    ebp,0x8f9edfd
  422973:	out    dx,eax
  422974:	outs   dx,DWORD PTR ds:[esi]
  422975:	fwait
  422976:	jle    0x4228fe
  422978:	xor    bh,dh
  42297a:	mov    dh,0xc0
  42297c:	jge    0x42292e
  42297e:	pmulhuw mm0,QWORD PTR [eax-0x628adb89]
  422985:	dec    ecx
  422986:	aas    
  422987:	aas    
  422988:	push   0xbd1d1f34
  42298d:	daa    
  42298e:	dec    edi
  42298f:	je     0x4229e4
  422991:	out    0xf5,eax
  422993:	pop    ecx
  422994:	bound  eax,QWORD PTR [edi-0x51]
  422997:	or     DWORD PTR [eax+ecx*2],edx
  42299a:	xor    DWORD PTR [edi+esi*2],edi
  42299d:	cdq    
  42299e:	and    eax,0xbc03240c
  4229a3:	icebp  
  4229a4:	(bad)  
  4229a6:	lahf   
  4229a7:	les    esp,FWORD PTR [esi+0x7bb3a8c]
  4229ad:	retf   
  4229ae:	mov    bl,0x98
  4229b0:	lahf   
  4229b1:	add    dl,bh
  4229b3:	jle    0x4229d2
  4229b5:	cdq    
  4229b6:	jp     0x422a26
  4229b8:	mov    eax,0x4422150e
  4229bd:	jl     0x4229bb
  4229bf:	retf   0xb575
  4229c2:	iret   
  4229c3:	aas    
  4229c4:	inc    ebx
  4229c5:	fs ret 
  4229c7:	inc    esi
  4229c8:	or     esp,DWORD PTR fs:[eax+esi*2+0x32]
  4229cd:	out    0xfa,eax
  4229cf:	shl    DWORD PTR [eax-0x7],cl
  4229d2:	inc    esi
  4229d3:	dec    eax
  4229d4:	pop    ecx
  4229d5:	inc    edx
  4229d6:	mov    ebx,0x68046a57
  4229db:	add    BYTE PTR [eax],dl
  4229dd:	add    BYTE PTR [eax],al
  4229df:	push   0x4cf
  4229e4:	push   0x1000
  4229e9:	call   DWORD PTR ds:0x42802c
  4229ef:	push   0x0
  4229f1:	call   esi
  4229f3:	xor    eax,eax
  4229f5:	pop    esi
  4229f6:	add    esp,0x10
  4229f9:	ret    0x10
  4229fc:	nop
  4229fd:	nop
  4229fe:	nop
  4229ff:	nop
  422a00:	jmp    DWORD PTR ds:0x428110
  422a06:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a0d:	jne    0x422a14
  422a0f:	call   0x422f52
  422a14:	push   DWORD PTR [esp+0x4]
  422a18:	call   0x422ddb
  422a1d:	push   0xff
  422a22:	call   DWORD PTR ds:0x45f294
  422a28:	pop    ecx
  422a29:	pop    ecx
  422a2a:	ret    
  422a2b:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a32:	jne    0x422a39
  422a34:	call   0x422f52
  422a39:	push   DWORD PTR [esp+0x4]
  422a3d:	call   0x422ddb
  422a42:	push   0xff
  422a47:	call   0x422c21
  422a4c:	pop    ecx
  422a4d:	pop    ecx
  422a4e:	ret    
  422a4f:	push   0x60
  422a51:	push   0x428150
  422a56:	call   0x423940
  422a5b:	mov    edi,0x94
  422a60:	mov    eax,edi
  422a62:	call   0x423990
  422a67:	mov    DWORD PTR [ebp-0x18],esp
  422a6a:	mov    esi,esp
  422a6c:	mov    DWORD PTR [esi],edi
  422a6e:	push   esi
  422a6f:	call   DWORD PTR ds:0x42805c
  422a75:	mov    ecx,DWORD PTR [esi+0x10]
  422a78:	mov    DWORD PTR ds:0x45fba4,ecx
  422a7e:	mov    eax,DWORD PTR [esi+0x4]
  422a81:	mov    ds:0x45fbb0,eax
  422a86:	mov    edx,DWORD PTR [esi+0x8]
  422a89:	mov    DWORD PTR ds:0x45fbb4,edx
  422a8f:	mov    esi,DWORD PTR [esi+0xc]
  422a92:	and    esi,0x7fff
  422a98:	mov    DWORD PTR ds:0x45fba8,esi
  422a9e:	cmp    ecx,0x2
  422aa1:	je     0x422aaf
  422aa3:	or     esi,0x8000
  422aa9:	mov    DWORD PTR ds:0x45fba8,esi
  422aaf:	shl    eax,0x8
  422ab2:	add    eax,edx
  422ab4:	mov    ds:0x45fbac,eax
  422ab9:	xor    esi,esi
  422abb:	push   esi
  422abc:	mov    edi,DWORD PTR ds:0x428014
  422ac2:	call   edi
  422ac4:	cmp    WORD PTR [eax],0x5a4d
  422ac9:	jne    0x422aea
  422acb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ace:	add    ecx,eax
  422ad0:	cmp    DWORD PTR [ecx],0x4550
  422ad6:	jne    0x422aea
  422ad8:	movzx  eax,WORD PTR [ecx+0x18]
  422adc:	cmp    eax,0x10b
  422ae1:	je     0x422b02
  422ae3:	cmp    eax,0x20b
  422ae8:	je     0x422aef
  422aea:	mov    DWORD PTR [ebp-0x1c],esi
  422aed:	jmp    0x422b16
  422aef:	cmp    DWORD PTR [ecx+0x84],0xe
  422af6:	jbe    0x422aea
  422af8:	xor    eax,eax
  422afa:	cmp    DWORD PTR [ecx+0xf8],esi
  422b00:	jmp    0x422b10
  422b02:	cmp    DWORD PTR [ecx+0x74],0xe
  422b06:	jbe    0x422aea
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b10:	setne  al
  422b13:	mov    DWORD PTR [ebp-0x1c],eax
  422b16:	push   0x1
  422b18:	call   0x4238ed
  422b1d:	pop    ecx
  422b1e:	test   eax,eax
  422b20:	jne    0x422b2a
  422b22:	push   0x1c
  422b24:	call   0x422a2b
  422b29:	pop    ecx
  422b2a:	call   0x423864
  422b2f:	test   eax,eax
  422b31:	jne    0x422b3b
  422b33:	push   0x10
  422b35:	call   0x422a2b
  422b3a:	pop    ecx
  422b3b:	call   0x42374d
  422b40:	mov    DWORD PTR [ebp-0x4],esi
  422b43:	call   0x42354f
  422b48:	test   eax,eax
  422b4a:	jge    0x422b54
  422b4c:	push   0x1b
  422b4e:	call   0x422a06
  422b53:	pop    ecx
  422b54:	call   DWORD PTR ds:0x42800c
  422b5a:	mov    ds:0x460354,eax
  422b5f:	call   0x42342d
  422b64:	mov    ds:0x45fb94,eax
  422b69:	call   0x42338b
  422b6e:	test   eax,eax
  422b70:	jge    0x422b7a
  422b72:	push   0x8
  422b74:	call   0x422a06
  422b79:	pop    ecx
  422b7a:	call   0x423158
  422b7f:	test   eax,eax
  422b81:	jge    0x422b8b
  422b83:	push   0x9
  422b85:	call   0x422a06
  422b8a:	pop    ecx
  422b8b:	call   0x422c63
  422b90:	mov    DWORD PTR [ebp-0x20],eax
  422b93:	cmp    eax,esi
  422b95:	je     0x422b9e
  422b97:	push   eax
  422b98:	call   0x422a06
  422b9d:	pop    ecx
  422b9e:	mov    DWORD PTR [ebp-0x38],esi
  422ba1:	lea    eax,[ebp-0x64]
  422ba4:	push   eax
  422ba5:	call   DWORD PTR ds:0x428058
  422bab:	call   0x4230ef
  422bb0:	mov    DWORD PTR [ebp-0x68],eax
  422bb3:	test   BYTE PTR [ebp-0x38],0x1
  422bb7:	je     0x422bbf
  422bb9:	movzx  eax,WORD PTR [ebp-0x34]
  422bbd:	jmp    0x422bc2
  422bbf:	push   0xa
  422bc1:	pop    eax
  422bc2:	push   eax
  422bc3:	push   DWORD PTR [ebp-0x68]
  422bc6:	push   esi
  422bc7:	push   esi
  422bc8:	call   edi
  422bca:	push   eax
  422bcb:	call   0x421850
  422bd0:	mov    edi,eax
  422bd2:	mov    DWORD PTR [ebp-0x6c],edi
  422bd5:	cmp    DWORD PTR [ebp-0x1c],esi
  422bd8:	jne    0x422be0
  422bda:	push   edi
  422bdb:	call   0x422d9b
  422be0:	call   0x422dbd
  422be5:	jmp    0x422c12
  422be7:	mov    eax,DWORD PTR [ebp-0x14]
  422bea:	mov    ecx,DWORD PTR [eax]
  422bec:	mov    ecx,DWORD PTR [ecx]
  422bee:	mov    DWORD PTR [ebp-0x70],ecx
  422bf1:	push   eax
  422bf2:	push   ecx
  422bf3:	call   0x422f8b
  422bf8:	pop    ecx
  422bf9:	pop    ecx
  422bfa:	ret    
  422bfb:	mov    esp,DWORD PTR [ebp-0x18]
  422bfe:	mov    edi,DWORD PTR [ebp-0x70]
  422c01:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c05:	jne    0x422c0d
  422c07:	push   edi
  422c08:	call   0x422dac
  422c0d:	call   0x422dcc
  422c12:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c16:	mov    eax,edi
  422c18:	lea    esp,[ebp-0x7c]
  422c1b:	call   0x42397b
  422c20:	ret    
  422c21:	push   0x42816c
  422c26:	call   DWORD PTR ds:0x428014
  422c2c:	test   eax,eax
  422c2e:	je     0x422c46
  422c30:	push   0x42815c
  422c35:	push   eax
  422c36:	call   DWORD PTR ds:0x428010
  422c3c:	test   eax,eax
  422c3e:	je     0x422c46
  422c40:	push   DWORD PTR [esp+0x4]
  422c44:	call   eax
  422c46:	push   DWORD PTR [esp+0x4]
  422c4a:	call   DWORD PTR ds:0x428060
  422c50:	int3   
  422c51:	push   0x8
  422c53:	call   0x423aff
  422c58:	pop    ecx
  422c59:	ret    
  422c5a:	push   0x8
  422c5c:	call   0x423a6b
  422c61:	pop    ecx
  422c62:	ret    
  422c63:	mov    eax,ds:0x460350
  422c68:	test   eax,eax
  422c6a:	je     0x422c6e
  422c6c:	call   eax
  422c6e:	push   esi
  422c6f:	push   edi
  422c70:	mov    ecx,0x42a00c
  422c75:	mov    edi,0x42a018
  422c7a:	xor    eax,eax
  422c7c:	cmp    ecx,edi
  422c7e:	mov    esi,ecx
  422c80:	jae    0x422c99
  422c82:	test   eax,eax
  422c84:	jne    0x422cc5
  422c86:	mov    ecx,DWORD PTR [esi]
  422c88:	test   ecx,ecx
  422c8a:	je     0x422c8e
  422c8c:	call   ecx
  422c8e:	add    esi,0x4
  422c91:	cmp    esi,edi
  422c93:	jb     0x422c82
  422c95:	test   eax,eax
  422c97:	jne    0x422cc5
  422c99:	push   0x423791
  422c9e:	call   0x423c10
  422ca3:	mov    esi,0x42a000
  422ca8:	mov    eax,esi
  422caa:	mov    edi,0x42a008
  422caf:	cmp    eax,edi
  422cb1:	pop    ecx
  422cb2:	jae    0x422cc3
  422cb4:	mov    eax,DWORD PTR [esi]
  422cb6:	test   eax,eax
  422cb8:	je     0x422cbc
  422cba:	call   eax
  422cbc:	add    esi,0x4
  422cbf:	cmp    esi,edi
  422cc1:	jb     0x422cb4
  422cc3:	xor    eax,eax
  422cc5:	pop    edi
  422cc6:	pop    esi
  422cc7:	ret    
  422cc8:	push   ebp
  422cc9:	mov    ebp,esp
  422ccb:	push   esi
  422ccc:	push   edi
  422ccd:	push   0x8
  422ccf:	call   0x423aff
  422cd4:	xor    esi,esi
  422cd6:	inc    esi
  422cd7:	cmp    DWORD PTR ds:0x45fbe4,esi
  422cdd:	pop    ecx
  422cde:	jne    0x422cf0
  422ce0:	push   DWORD PTR [ebp+0x8]
  422ce3:	call   DWORD PTR ds:0x428068
  422ce9:	push   eax
  422cea:	call   DWORD PTR ds:0x428064
  422cf0:	cmp    DWORD PTR [ebp+0xc],0x0
  422cf4:	mov    al,BYTE PTR [ebp+0x10]
  422cf7:	mov    DWORD PTR ds:0x45fbe0,esi
  422cfd:	mov    ds:0x45fbdc,al
  422d02:	jne    0x422d56
  422d04:	mov    ecx,DWORD PTR ds:0x460348
  422d0a:	test   ecx,ecx
  422d0c:	je     0x422d37
  422d0e:	mov    eax,ds:0x460344
  422d13:	sub    eax,0x4
  422d16:	cmp    eax,ecx
  422d18:	jmp    0x422d30
  422d1a:	mov    eax,DWORD PTR [eax]
  422d1c:	test   eax,eax
  422d1e:	je     0x422d22
  422d20:	call   eax
  422d22:	mov    eax,ds:0x460344
  422d27:	sub    eax,0x4
  422d2a:	cmp    eax,DWORD PTR ds:0x460348
  422d30:	mov    ds:0x460344,eax
  422d35:	jae    0x422d1a
  422d37:	mov    eax,0x42a01c
  422d3c:	mov    esi,0x42a020
  422d41:	cmp    eax,esi
  422d43:	mov    edi,eax
  422d45:	jae    0x422d56
  422d47:	mov    eax,DWORD PTR [edi]
  422d49:	test   eax,eax
  422d4b:	je     0x422d4f
  422d4d:	call   eax
  422d4f:	add    edi,0x4
  422d52:	cmp    edi,esi
  422d54:	jb     0x422d47
  422d56:	mov    eax,0x42a024
  422d5b:	mov    esi,0x42a028
  422d60:	cmp    eax,esi
  422d62:	mov    edi,eax
  422d64:	jae    0x422d75
  422d66:	mov    eax,DWORD PTR [edi]
  422d68:	test   eax,eax
  422d6a:	je     0x422d6e
  422d6c:	call   eax
  422d6e:	add    edi,0x4
  422d71:	cmp    edi,esi
  422d73:	jb     0x422d66
  422d75:	cmp    DWORD PTR [ebp+0x10],0x0
  422d79:	pop    edi
  422d7a:	pop    esi
  422d7b:	je     0x422d86
  422d7d:	push   0x8
  422d7f:	call   0x423a6b
  422d84:	jmp    0x422d98
  422d86:	push   DWORD PTR [ebp+0x8]
  422d89:	mov    DWORD PTR ds:0x45fbe4,0x1
  422d93:	call   0x422c21
  422d98:	pop    ecx
  422d99:	pop    ebp
  422d9a:	ret    
  422d9b:	push   0x0
  422d9d:	push   0x0
  422d9f:	push   DWORD PTR [esp+0xc]
  422da3:	call   0x422cc8
  422da8:	add    esp,0xc
  422dab:	ret    
  422dac:	push   0x0
  422dae:	push   0x1
  422db0:	push   DWORD PTR [esp+0xc]
  422db4:	call   0x422cc8
  422db9:	add    esp,0xc
  422dbc:	ret    
  422dbd:	push   0x1
  422dbf:	push   0x0
  422dc1:	push   0x0
  422dc3:	call   0x422cc8
  422dc8:	add    esp,0xc
  422dcb:	ret    
  422dcc:	push   0x1
  422dce:	push   0x1
  422dd0:	push   0x0
  422dd2:	call   0x422cc8
  422dd7:	add    esp,0xc
  422dda:	ret    
  422ddb:	push   ebp
  422ddc:	mov    ebp,esp
  422dde:	sub    esp,0x10c
  422de4:	mov    eax,ds:0x45f510
  422de9:	xor    eax,DWORD PTR [ebp+0x4]
  422dec:	mov    ecx,DWORD PTR [ebp+0x8]
  422def:	push   ebx
  422df0:	push   esi
  422df1:	mov    DWORD PTR [ebp-0x4],eax
  422df4:	xor    edx,edx
  422df6:	push   edi
  422df7:	xor    eax,eax
  422df9:	cmp    ecx,DWORD PTR [eax*8+0x45f2a0]
  422e00:	je     0x422e08
  422e02:	inc    eax
  422e03:	cmp    eax,0x12
  422e06:	jb     0x422df9
  422e08:	mov    esi,eax
  422e0a:	shl    esi,0x3
  422e0d:	cmp    ecx,DWORD PTR [esi+0x45f2a0]
  422e13:	jne    0x422f3c
  422e19:	mov    eax,ds:0x45fb9c
  422e1e:	cmp    eax,0x1
  422e21:	je     0x422f17
  422e27:	cmp    eax,edx
  422e29:	jne    0x422e38
  422e2b:	cmp    DWORD PTR ds:0x45f298,0x1
  422e32:	je     0x422f17
  422e38:	cmp    ecx,0xfc
  422e3e:	je     0x422f3c
  422e44:	push   0x104
  422e49:	lea    eax,[ebp-0x10c]
  422e4f:	push   eax
  422e50:	push   edx
  422e51:	mov    BYTE PTR [ebp-0x8],dl
  422e54:	call   DWORD PTR ds:0x428074
  422e5a:	test   eax,eax
  422e5c:	jne    0x422e71
  422e5e:	lea    eax,[ebp-0x10c]
  422e64:	push   0x4284c4
  422e69:	push   eax
  422e6a:	call   0x423d20
  422e6f:	pop    ecx
  422e70:	pop    ecx
  422e71:	lea    eax,[ebp-0x10c]
  422e77:	push   eax
  422e78:	lea    edi,[ebp-0x10c]
  422e7e:	call   0x423f50
  422e83:	inc    eax
  422e84:	cmp    eax,0x3c
  422e87:	pop    ecx
  422e88:	jbe    0x422eb3
  422e8a:	lea    eax,[ebp-0x10c]
  422e90:	push   eax
  422e91:	call   0x423f50
  422e96:	mov    edi,eax
  422e98:	lea    eax,[ebp-0x10c]
  422e9e:	sub    eax,0x3b
  422ea1:	push   0x3
  422ea3:	add    edi,eax
  422ea5:	push   0x4284c0
  422eaa:	push   edi
  422eab:	call   0x423e20
  422eb0:	add    esp,0x10
  422eb3:	push   edi
  422eb4:	call   0x423f50
  422eb9:	push   DWORD PTR [esi+0x45f2a4]
  422ebf:	mov    ebx,eax
  422ec1:	call   0x423f50
  422ec6:	lea    eax,[ebx+eax*1+0x1c]
  422eca:	pop    ecx
  422ecb:	add    eax,0x3
  422ece:	pop    ecx
  422ecf:	and    eax,0xfffffffc
  422ed2:	call   0x423990
  422ed7:	mov    ebx,esp
  422ed9:	push   0x4284a4
  422ede:	push   ebx
  422edf:	call   0x423d20
  422ee4:	push   edi
  422ee5:	push   ebx
  422ee6:	call   0x423d30
  422eeb:	push   0x4284a0
  422ef0:	push   ebx
  422ef1:	call   0x423d30
  422ef6:	push   DWORD PTR [esi+0x45f2a4]
  422efc:	push   ebx
  422efd:	call   0x423d30
  422f02:	push   0x12010
  422f07:	push   0x428478
  422f0c:	push   ebx
  422f0d:	call   0x423c22
  422f12:	add    esp,0x2c
  422f15:	jmp    0x422f3c
  422f17:	push   edx
  422f18:	lea    eax,[ebp+0x8]
  422f1b:	push   eax
  422f1c:	lea    esi,[esi+0x45f2a4]
  422f22:	push   DWORD PTR [esi]
  422f24:	call   0x423f50
  422f29:	pop    ecx
  422f2a:	push   eax
  422f2b:	push   DWORD PTR [esi]
  422f2d:	push   0xfffffff4
  422f2f:	call   DWORD PTR ds:0x428070
  422f35:	push   eax
  422f36:	call   DWORD PTR ds:0x42806c
  422f3c:	lea    esp,[ebp-0x118]
  422f42:	mov    ecx,DWORD PTR [ebp-0x4]
  422f45:	xor    ecx,DWORD PTR [ebp+0x4]
  422f48:	call   0x42400c
  422f4d:	pop    edi
  422f4e:	pop    esi
  422f4f:	pop    ebx
  422f50:	leave  
  422f51:	ret    
  422f52:	mov    eax,ds:0x45fb9c
  422f57:	cmp    eax,0x1
  422f5a:	je     0x422f69
  422f5c:	test   eax,eax
  422f5e:	jne    0x422f8a
  422f60:	cmp    DWORD PTR ds:0x45f298,0x1
  422f67:	jne    0x422f8a
  422f69:	push   0xfc
  422f6e:	call   0x422ddb
  422f73:	mov    eax,ds:0x45fbe8
  422f78:	test   eax,eax
  422f7a:	pop    ecx
  422f7b:	je     0x422f7f
  422f7d:	call   eax
  422f7f:	push   0xff
  422f84:	call   0x422ddb
  422f89:	pop    ecx
  422f8a:	ret    
  422f8b:	push   ebp
  422f8c:	mov    ebp,esp
  422f8e:	push   ecx
  422f8f:	push   ebx
  422f90:	push   esi
  422f91:	push   edi
  422f92:	call   0x4237f3
  422f97:	mov    edi,DWORD PTR [ebp+0x8]
  422f9a:	mov    esi,eax
  422f9c:	mov    edx,DWORD PTR [esi+0x54]
  422f9f:	mov    eax,ds:0x45f3b4
  422fa4:	mov    ecx,edx
  422fa6:	cmp    DWORD PTR [ecx],edi
  422fa8:	je     0x422fb7
  422faa:	lea    ebx,[eax+eax*2]
  422fad:	add    ecx,0xc
  422fb0:	lea    ebx,[edx+ebx*4]
  422fb3:	cmp    ecx,ebx
  422fb5:	jb     0x422fa6
  422fb7:	lea    eax,[eax+eax*2]
  422fba:	lea    eax,[edx+eax*4]
  422fbd:	cmp    ecx,eax
  422fbf:	jae    0x422fc5
  422fc1:	cmp    DWORD PTR [ecx],edi
  422fc3:	je     0x422fc7
  422fc5:	xor    ecx,ecx
  422fc7:	test   ecx,ecx
  422fc9:	je     0x4230e1
  422fcf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fd2:	test   ebx,ebx
  422fd4:	mov    DWORD PTR [ebp+0x8],ebx
  422fd7:	je     0x4230e1
  422fdd:	cmp    ebx,0x5
  422fe0:	jne    0x422fee
  422fe2:	and    DWORD PTR [ecx+0x8],0x0
  422fe6:	xor    eax,eax
  422fe8:	inc    eax
  422fe9:	jmp    0x4230ea
  422fee:	cmp    ebx,0x1
  422ff1:	je     0x4230dc
  422ff7:	mov    eax,DWORD PTR [esi+0x58]
  422ffa:	mov    DWORD PTR [ebp-0x4],eax
  422ffd:	mov    eax,DWORD PTR [ebp+0xc]
  423000:	mov    DWORD PTR [esi+0x58],eax
  423003:	mov    eax,DWORD PTR [ecx+0x4]
  423006:	cmp    eax,0x8
  423009:	jne    0x4230ce
  42300f:	mov    edx,DWORD PTR ds:0x45f3a8
  423015:	mov    eax,ds:0x45f3ac
  42301a:	add    eax,edx
  42301c:	cmp    edx,eax
  42301e:	jge    0x423047
  423020:	lea    eax,[edx+edx*2]
  423023:	shl    eax,0x2
  423026:	mov    edi,DWORD PTR [esi+0x54]
  423029:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42302e:	mov    edi,DWORD PTR ds:0x45f3a8
  423034:	mov    ebx,DWORD PTR ds:0x45f3ac
  42303a:	inc    edx
  42303b:	add    ebx,edi
  42303d:	add    eax,0xc
  423040:	cmp    edx,ebx
  423042:	jl     0x423026
  423044:	mov    ebx,DWORD PTR [ebp+0x8]
  423047:	mov    ecx,DWORD PTR [ecx]
  423049:	cmp    ecx,0xc000008e
  42304f:	mov    edi,DWORD PTR [esi+0x5c]
  423052:	jne    0x42305d
  423054:	mov    DWORD PTR [esi+0x5c],0x83
  42305b:	jmp    0x4230c1
  42305d:	cmp    ecx,0xc0000090
  423063:	jne    0x42306e
  423065:	mov    DWORD PTR [esi+0x5c],0x81
  42306c:	jmp    0x4230c1
  42306e:	cmp    ecx,0xc0000091
  423074:	jne    0x42307f
  423076:	mov    DWORD PTR [esi+0x5c],0x84
  42307d:	jmp    0x4230c1
  42307f:	cmp    ecx,0xc0000093
  423085:	jne    0x423090
  423087:	mov    DWORD PTR [esi+0x5c],0x85
  42308e:	jmp    0x4230c1
  423090:	cmp    ecx,0xc000008d
  423096:	jne    0x4230a1
  423098:	mov    DWORD PTR [esi+0x5c],0x82
  42309f:	jmp    0x4230c1
  4230a1:	cmp    ecx,0xc000008f
  4230a7:	jne    0x4230b2
  4230a9:	mov    DWORD PTR [esi+0x5c],0x86
  4230b0:	jmp    0x4230c1
  4230b2:	cmp    ecx,0xc0000092
  4230b8:	jne    0x4230c1
  4230ba:	mov    DWORD PTR [esi+0x5c],0x8a
  4230c1:	push   DWORD PTR [esi+0x5c]
  4230c4:	push   0x8
  4230c6:	call   ebx
  4230c8:	pop    ecx
  4230c9:	mov    DWORD PTR [esi+0x5c],edi
  4230cc:	jmp    0x4230d5
  4230ce:	and    DWORD PTR [ecx+0x8],0x0
  4230d2:	push   eax
  4230d3:	call   ebx
  4230d5:	mov    eax,DWORD PTR [ebp-0x4]
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x58],eax
  4230dc:	or     eax,0xffffffff
  4230df:	jmp    0x4230ea
  4230e1:	push   DWORD PTR [ebp+0xc]
  4230e4:	call   DWORD PTR ds:0x428078
  4230ea:	pop    edi
  4230eb:	pop    esi
  4230ec:	pop    ebx
  4230ed:	leave  
  4230ee:	ret    
  4230ef:	cmp    DWORD PTR ds:0x46034c,0x0
  4230f6:	jne    0x4230fd
  4230f8:	call   0x42452c
  4230fd:	push   esi
  4230fe:	mov    esi,DWORD PTR ds:0x460354
  423104:	test   esi,esi
  423106:	jne    0x42310f
  423108:	mov    esi,0x4284db
  42310d:	jmp    0x423154
  42310f:	mov    al,BYTE PTR [esi]
  423111:	cmp    al,0x22
  423113:	jne    0x42313d
  423115:	inc    esi
  423116:	mov    al,BYTE PTR [esi]
  423118:	cmp    al,0x22
  42311a:	je     0x42314d
  42311c:	test   al,al
  42311e:	je     0x423136
  423120:	movzx  eax,al
  423123:	push   eax
  423124:	call   0x42404b
  423129:	test   eax,eax
  42312b:	pop    ecx
  42312c:	je     0x42312f
  42312e:	inc    esi
  42312f:	inc    esi
  423130:	mov    al,BYTE PTR [esi]
  423132:	cmp    al,0x22
  423134:	jne    0x42311c
  423136:	cmp    BYTE PTR [esi],0x22
  423139:	jne    0x42314e
  42313b:	jmp    0x42314d
  42313d:	cmp    al,0x20
  42313f:	jbe    0x42314e
  423141:	inc    esi
  423142:	cmp    BYTE PTR [esi],0x20
  423145:	ja     0x423141
  423147:	jmp    0x42314e
  423149:	cmp    al,0x20
  42314b:	ja     0x423154
  42314d:	inc    esi
  42314e:	mov    al,BYTE PTR [esi]
  423150:	test   al,al
  423152:	jne    0x423149
  423154:	mov    eax,esi
  423156:	pop    esi
  423157:	ret    
  423158:	push   ebx
  423159:	xor    ebx,ebx
  42315b:	cmp    DWORD PTR ds:0x46034c,ebx
  423161:	push   esi
  423162:	push   edi
  423163:	jne    0x42316a
  423165:	call   0x42452c
  42316a:	mov    esi,DWORD PTR ds:0x45fb94
  423170:	xor    edi,edi
  423172:	cmp    esi,ebx
  423174:	jne    0x423188
  423176:	jmp    0x4231a8
  423178:	cmp    al,0x3d
  42317a:	je     0x42317d
  42317c:	inc    edi
  42317d:	push   esi
  42317e:	call   0x423f50
  423183:	pop    ecx
  423184:	lea    esi,[esi+eax*1+0x1]
  423188:	mov    al,BYTE PTR [esi]
  42318a:	cmp    al,bl
  42318c:	jne    0x423178
  42318e:	lea    eax,[edi*4+0x4]
  423195:	push   eax
  423196:	call   0x424662
  42319b:	mov    edi,eax
  42319d:	cmp    edi,ebx
  42319f:	pop    ecx
  4231a0:	mov    DWORD PTR ds:0x45fbc4,edi
  4231a6:	jne    0x4231ad
  4231a8:	or     eax,0xffffffff
  4231ab:	jmp    0x423205
  4231ad:	mov    esi,DWORD PTR ds:0x45fb94
  4231b3:	push   ebp
  4231b4:	jmp    0x4231e0
  4231b6:	push   esi
  4231b7:	call   0x423f50
  4231bc:	mov    ebp,eax
  4231be:	inc    ebp
  4231bf:	cmp    BYTE PTR [esi],0x3d
  4231c2:	pop    ecx
  4231c3:	je     0x4231de
  4231c5:	push   ebp
  4231c6:	call   0x424662
  4231cb:	cmp    eax,ebx
  4231cd:	pop    ecx
  4231ce:	mov    DWORD PTR [edi],eax
  4231d0:	je     0x423209
  4231d2:	push   esi
  4231d3:	push   eax
  4231d4:	call   0x423d20
  4231d9:	pop    ecx
  4231da:	pop    ecx
  4231db:	add    edi,0x4
  4231de:	add    esi,ebp
  4231e0:	cmp    BYTE PTR [esi],bl
  4231e2:	jne    0x4231b6
  4231e4:	push   DWORD PTR ds:0x45fb94
  4231ea:	call   0x42454a
  4231ef:	mov    DWORD PTR ds:0x45fb94,ebx
  4231f5:	mov    DWORD PTR [edi],ebx
  4231f7:	mov    DWORD PTR ds:0x460340,0x1
  423201:	xor    eax,eax
  423203:	pop    ecx
  423204:	pop    ebp
  423205:	pop    edi
  423206:	pop    esi
  423207:	pop    ebx
  423208:	ret    
  423209:	push   DWORD PTR ds:0x45fbc4
  42320f:	call   0x42454a
  423214:	mov    DWORD PTR ds:0x45fbc4,ebx
  42321a:	or     eax,0xffffffff
  42321d:	jmp    0x423203
  42321f:	push   ebp
  423220:	mov    ebp,esp
  423222:	push   ecx
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0xc]
  423227:	xor    edx,edx
  423229:	cmp    DWORD PTR [ebp+0x8],edx
  42322c:	push   edi
  42322d:	mov    DWORD PTR [esi],edx
  42322f:	mov    edi,ecx
  423231:	mov    DWORD PTR [ebx],0x1
  423237:	je     0x423242
  423239:	mov    ecx,DWORD PTR [ebp+0x8]
  42323c:	add    DWORD PTR [ebp+0x8],0x4
  423240:	mov    DWORD PTR [ecx],edi
  423242:	cmp    BYTE PTR [eax],0x22
  423245:	jne    0x423255
  423247:	xor    ecx,ecx
  423249:	test   edx,edx
  42324b:	sete   cl
  42324e:	inc    eax
  42324f:	mov    edx,ecx
  423251:	mov    cl,0x22
  423253:	jmp    0x423282
  423255:	inc    DWORD PTR [esi]
  423257:	test   edi,edi
  423259:	je     0x423260
  42325b:	mov    cl,BYTE PTR [eax]
  42325d:	mov    BYTE PTR [edi],cl
  42325f:	inc    edi
  423260:	mov    cl,BYTE PTR [eax]
  423262:	movzx  ebx,cl
  423265:	inc    eax
  423266:	test   BYTE PTR [ebx+0x460001],0x4
  42326d:	je     0x42327b
  42326f:	inc    DWORD PTR [esi]
  423271:	test   edi,edi
  423273:	je     0x42327a
  423275:	mov    bl,BYTE PTR [eax]
  423277:	mov    BYTE PTR [edi],bl
  423279:	inc    edi
  42327a:	inc    eax
  42327b:	test   cl,cl
  42327d:	mov    ebx,DWORD PTR [ebp+0xc]
  423280:	je     0x4232b4
  423282:	test   edx,edx
  423284:	jne    0x423242
  423286:	cmp    cl,0x20
  423289:	je     0x423290
  42328b:	cmp    cl,0x9
  42328e:	jne    0x423242
  423290:	test   edi,edi
  423292:	je     0x423298
  423294:	and    BYTE PTR [edi-0x1],0x0
  423298:	and    DWORD PTR [ebp-0x4],0x0
  42329c:	cmp    BYTE PTR [eax],0x0
  42329f:	je     0x42337b
  4232a5:	mov    cl,BYTE PTR [eax]
  4232a7:	cmp    cl,0x20
  4232aa:	je     0x4232b1
  4232ac:	cmp    cl,0x9
  4232af:	jne    0x4232b7
  4232b1:	inc    eax
  4232b2:	jmp    0x4232a5
  4232b4:	dec    eax
  4232b5:	jmp    0x423298
  4232b7:	cmp    BYTE PTR [eax],0x0
  4232ba:	je     0x42337b
  4232c0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232c4:	je     0x4232cf
  4232c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232c9:	add    DWORD PTR [ebp+0x8],0x4
  4232cd:	mov    DWORD PTR [ecx],edi
  4232cf:	inc    DWORD PTR [ebx]
  4232d1:	xor    ebx,ebx
  4232d3:	inc    ebx
  4232d4:	xor    edx,edx
  4232d6:	jmp    0x4232da
  4232d8:	inc    eax
  4232d9:	inc    edx
  4232da:	cmp    BYTE PTR [eax],0x5c
  4232dd:	je     0x4232d8
  4232df:	cmp    BYTE PTR [eax],0x22
  4232e2:	jne    0x42330a
  4232e4:	test   dl,0x1
  4232e7:	jne    0x423308
  4232e9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232ed:	je     0x4232fb
  4232ef:	lea    ecx,[eax+0x1]
  4232f2:	cmp    BYTE PTR [ecx],0x22
  4232f5:	jne    0x4232fb
  4232f7:	mov    eax,ecx
  4232f9:	jmp    0x4232fd
  4232fb:	xor    ebx,ebx
  4232fd:	xor    ecx,ecx
  4232ff:	cmp    DWORD PTR [ebp-0x4],ecx
  423302:	sete   cl
  423305:	mov    DWORD PTR [ebp-0x4],ecx
  423308:	shr    edx,1
  42330a:	test   edx,edx
  42330c:	je     0x42331b
  42330e:	test   edi,edi
  423310:	je     0x423316
  423312:	mov    BYTE PTR [edi],0x5c
  423315:	inc    edi
  423316:	inc    DWORD PTR [esi]
  423318:	dec    edx
  423319:	jne    0x42330e
  42331b:	mov    cl,BYTE PTR [eax]
  42331d:	test   cl,cl
  42331f:	je     0x423369
  423321:	cmp    DWORD PTR [ebp-0x4],0x0
  423325:	jne    0x423331
  423327:	cmp    cl,0x20
  42332a:	je     0x423369
  42332c:	cmp    cl,0x9
  42332f:	je     0x423369
  423331:	test   ebx,ebx
  423333:	je     0x423363
  423335:	test   edi,edi
  423337:	je     0x423352
  423339:	movzx  edx,cl
  42333c:	test   BYTE PTR [edx+0x460001],0x4
  423343:	je     0x42334b
  423345:	mov    BYTE PTR [edi],cl
  423347:	inc    edi
  423348:	inc    eax
  423349:	inc    DWORD PTR [esi]
  42334b:	mov    cl,BYTE PTR [eax]
  42334d:	mov    BYTE PTR [edi],cl
  42334f:	inc    edi
  423350:	jmp    0x423361
  423352:	movzx  ecx,cl
  423355:	test   BYTE PTR [ecx+0x460001],0x4
  42335c:	je     0x423361
  42335e:	inc    eax
  42335f:	inc    DWORD PTR [esi]
  423361:	inc    DWORD PTR [esi]
  423363:	inc    eax
  423364:	jmp    0x4232d1
  423369:	test   edi,edi
  42336b:	je     0x423371
  42336d:	and    BYTE PTR [edi],0x0
  423370:	inc    edi
  423371:	inc    DWORD PTR [esi]
  423373:	mov    ebx,DWORD PTR [ebp+0xc]
  423376:	jmp    0x42329c
  42337b:	mov    eax,DWORD PTR [ebp+0x8]
  42337e:	test   eax,eax
  423380:	je     0x423385
  423382:	and    DWORD PTR [eax],0x0
  423385:	inc    DWORD PTR [ebx]
  423387:	pop    edi
  423388:	pop    ebx
  423389:	leave  
  42338a:	ret    
  42338b:	push   ebp
  42338c:	mov    ebp,esp
  42338e:	push   ecx
  42338f:	push   ecx
  423390:	push   ebx
  423391:	push   esi
  423392:	push   edi
  423393:	xor    edi,edi
  423395:	cmp    DWORD PTR ds:0x46034c,edi
  42339b:	jne    0x4233a2
  42339d:	call   0x42452c
  4233a2:	and    BYTE PTR ds:0x45fcf4,0x0
  4233a9:	push   0x104
  4233ae:	mov    esi,0x45fbf0
  4233b3:	push   esi
  4233b4:	push   edi
  4233b5:	call   DWORD PTR ds:0x428074
  4233bb:	mov    eax,ds:0x460354
  4233c0:	cmp    eax,edi
  4233c2:	mov    DWORD PTR ds:0x45fbd4,esi
  4233c8:	je     0x4233d1
  4233ca:	cmp    BYTE PTR [eax],0x0
  4233cd:	mov    ebx,eax
  4233cf:	jne    0x4233d3
  4233d1:	mov    ebx,esi
  4233d3:	lea    eax,[ebp-0x4]
  4233d6:	push   eax
  4233d7:	push   edi
  4233d8:	lea    esi,[ebp-0x8]
  4233db:	xor    ecx,ecx
  4233dd:	mov    eax,ebx
  4233df:	call   0x42321f
  4233e4:	mov    esi,DWORD PTR [ebp-0x4]
  4233e7:	mov    eax,DWORD PTR [ebp-0x8]
  4233ea:	shl    esi,0x2
  4233ed:	add    eax,esi
  4233ef:	push   eax
  4233f0:	call   0x424662
  4233f5:	mov    edi,eax
  4233f7:	add    esp,0xc
  4233fa:	test   edi,edi
  4233fc:	jne    0x423403
  4233fe:	or     eax,0xffffffff
  423401:	jmp    0x423428
  423403:	lea    eax,[ebp-0x4]
  423406:	push   eax
  423407:	lea    ecx,[esi+edi*1]
  42340a:	push   edi
  42340b:	lea    esi,[ebp-0x8]
  42340e:	mov    eax,ebx
  423410:	call   0x42321f
  423415:	mov    eax,DWORD PTR [ebp-0x4]
  423418:	dec    eax
  423419:	pop    ecx
  42341a:	mov    ds:0x45fbb8,eax
  42341f:	pop    ecx
  423420:	mov    DWORD PTR ds:0x45fbbc,edi
  423426:	xor    eax,eax
  423428:	pop    edi
  423429:	pop    esi
  42342a:	pop    ebx
  42342b:	leave  
  42342c:	ret    
  42342d:	push   ecx
  42342e:	push   ecx
  42342f:	mov    eax,ds:0x45fcf8
  423434:	push   ebx
  423435:	push   ebp
  423436:	push   esi
  423437:	push   edi
  423438:	mov    edi,DWORD PTR ds:0x42808c
  42343e:	xor    ebx,ebx
  423440:	xor    esi,esi
  423442:	cmp    eax,ebx
  423444:	push   0x2
  423446:	pop    ebp
  423447:	jne    0x423476
  423449:	call   edi
  42344b:	mov    esi,eax
  42344d:	cmp    esi,ebx
  42344f:	je     0x42345d
  423451:	mov    DWORD PTR ds:0x45fcf8,0x1
  42345b:	jmp    0x42347b
  42345d:	call   DWORD PTR ds:0x428018
  423463:	cmp    eax,0x78
  423466:	jne    0x423471
  423468:	mov    eax,ebp
  42346a:	mov    ds:0x45fcf8,eax
  42346f:	jmp    0x423476
  423471:	mov    eax,ds:0x45fcf8
  423476:	cmp    eax,0x1
  423479:	jne    0x4234f8
  42347b:	cmp    esi,ebx
  42347d:	jne    0x423487
  42347f:	call   edi
  423481:	mov    esi,eax
  423483:	cmp    esi,ebx
  423485:	je     0x423500
  423487:	cmp    WORD PTR [esi],bx
  42348a:	mov    eax,esi
  42348c:	je     0x42349c
  42348e:	add    eax,ebp
  423490:	cmp    WORD PTR [eax],bx
  423493:	jne    0x42348e
  423495:	add    eax,ebp
  423497:	cmp    WORD PTR [eax],bx
  42349a:	jne    0x42348e
  42349c:	mov    edi,DWORD PTR ds:0x428088
  4234a2:	push   ebx
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	sub    eax,esi
  4234a7:	push   ebx
  4234a8:	sar    eax,1
  4234aa:	inc    eax
  4234ab:	push   eax
  4234ac:	push   esi
  4234ad:	push   ebx
  4234ae:	push   ebx
  4234af:	mov    DWORD PTR [esp+0x34],eax
  4234b3:	call   edi
  4234b5:	mov    ebp,eax
  4234b7:	cmp    ebp,ebx
  4234b9:	je     0x4234ed
  4234bb:	push   ebp
  4234bc:	call   0x424662
  4234c1:	cmp    eax,ebx
  4234c3:	pop    ecx
  4234c4:	mov    DWORD PTR [esp+0x10],eax
  4234c8:	je     0x4234ed
  4234ca:	push   ebx
  4234cb:	push   ebx
  4234cc:	push   ebp
  4234cd:	push   eax
  4234ce:	push   DWORD PTR [esp+0x24]
  4234d2:	push   esi
  4234d3:	push   ebx
  4234d4:	push   ebx
  4234d5:	call   edi
  4234d7:	test   eax,eax
  4234d9:	jne    0x4234e9
  4234db:	push   DWORD PTR [esp+0x10]
  4234df:	call   0x42454a
  4234e4:	pop    ecx
  4234e5:	mov    DWORD PTR [esp+0x10],ebx
  4234e9:	mov    ebx,DWORD PTR [esp+0x10]
  4234ed:	push   esi
  4234ee:	call   DWORD PTR ds:0x428084
  4234f4:	mov    eax,ebx
  4234f6:	jmp    0x423548
  4234f8:	cmp    eax,ebp
  4234fa:	je     0x423504
  4234fc:	cmp    eax,ebx
  4234fe:	je     0x423504
  423500:	xor    eax,eax
  423502:	jmp    0x423548
  423504:	call   DWORD PTR ds:0x428080
  42350a:	mov    esi,eax
  42350c:	cmp    esi,ebx
  42350e:	je     0x423500
  423510:	cmp    BYTE PTR [esi],bl
  423512:	je     0x42351e
  423514:	inc    eax
  423515:	cmp    BYTE PTR [eax],bl
  423517:	jne    0x423514
  423519:	inc    eax
  42351a:	cmp    BYTE PTR [eax],bl
  42351c:	jne    0x423514
  42351e:	sub    eax,esi
  423520:	inc    eax
  423521:	mov    ebp,eax
  423523:	push   ebp
  423524:	call   0x424662
  423529:	mov    edi,eax
  42352b:	cmp    edi,ebx
  42352d:	pop    ecx
  42352e:	jne    0x423534
  423530:	xor    edi,edi
  423532:	jmp    0x42353f
  423534:	push   ebp
  423535:	push   esi
  423536:	push   edi
  423537:	call   0x424680
  42353c:	add    esp,0xc
  42353f:	push   esi
  423540:	call   DWORD PTR ds:0x42807c
  423546:	mov    eax,edi
  423548:	pop    edi
  423549:	pop    esi
  42354a:	pop    ebp
  42354b:	pop    ebx
  42354c:	pop    ecx
  42354d:	pop    ecx
  42354e:	ret    
  42354f:	sub    esp,0x48
  423552:	push   ebx
  423553:	mov    ebx,0x480
  423558:	push   ebx
  423559:	call   0x424662
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	jne    0x42356b
  423563:	or     eax,0xffffffff
  423566:	jmp    0x423748
  42356b:	mov    ds:0x460240,eax
  423570:	mov    DWORD PTR ds:0x460228,0x20
  42357a:	lea    ecx,[eax+0x480]
  423580:	jmp    0x4235a0
  423582:	and    BYTE PTR [eax+0x4],0x0
  423586:	or     DWORD PTR [eax],0xffffffff
  423589:	and    DWORD PTR [eax+0x8],0x0
  42358d:	mov    BYTE PTR [eax+0x5],0xa
  423591:	mov    ecx,DWORD PTR ds:0x460240
  423597:	add    eax,0x24
  42359a:	add    ecx,0x480
  4235a0:	cmp    eax,ecx
  4235a2:	jb     0x423582
  4235a4:	push   ebp
  4235a5:	push   esi
  4235a6:	push   edi
  4235a7:	lea    eax,[esp+0x14]
  4235ab:	push   eax
  4235ac:	call   DWORD PTR ds:0x428058
  4235b2:	cmp    WORD PTR [esp+0x46],0x0
  4235b8:	je     0x4236a7
  4235be:	mov    eax,DWORD PTR [esp+0x48]
  4235c2:	test   eax,eax
  4235c4:	je     0x4236a7
  4235ca:	mov    edi,DWORD PTR [eax]
  4235cc:	lea    ebp,[eax+0x4]
  4235cf:	lea    eax,[edi+ebp*1]
  4235d2:	mov    DWORD PTR [esp+0x10],eax
  4235d6:	mov    eax,0x800
  4235db:	cmp    edi,eax
  4235dd:	jl     0x4235e1
  4235df:	mov    edi,eax
  4235e1:	cmp    DWORD PTR ds:0x460228,edi
  4235e7:	jge    0x423637
  4235e9:	mov    esi,0x460244
  4235ee:	push   ebx
  4235ef:	call   0x424662
  4235f4:	test   eax,eax
  4235f6:	pop    ecx
  4235f7:	je     0x423631
  4235f9:	add    DWORD PTR ds:0x460228,0x20
  423600:	mov    DWORD PTR [esi],eax
  423602:	lea    ecx,[eax+0x480]
  423608:	jmp    0x423620
  42360a:	and    BYTE PTR [eax+0x4],0x0
  42360e:	or     DWORD PTR [eax],0xffffffff
  423611:	and    DWORD PTR [eax+0x8],0x0
  423615:	mov    BYTE PTR [eax+0x5],0xa
  423619:	mov    ecx,DWORD PTR [esi]
  42361b:	add    eax,0x24
  42361e:	add    ecx,ebx
  423620:	cmp    eax,ecx
  423622:	jb     0x42360a
  423624:	add    esi,0x4
  423627:	cmp    DWORD PTR ds:0x460228,edi
  42362d:	jl     0x4235ee
  42362f:	jmp    0x423637
  423631:	mov    edi,DWORD PTR ds:0x460228
  423637:	xor    ebx,ebx
  423639:	test   edi,edi
  42363b:	jle    0x4236a7
  42363d:	mov    eax,DWORD PTR [esp+0x10]
  423641:	mov    eax,DWORD PTR [eax]
  423643:	cmp    eax,0xffffffff
  423646:	je     0x42369c
  423648:	mov    cl,BYTE PTR [ebp+0x0]
  42364b:	test   cl,0x1
  42364e:	je     0x42369c
  423650:	test   cl,0x8
  423653:	jne    0x423660
  423655:	push   eax
  423656:	call   DWORD PTR ds:0x428094
  42365c:	test   eax,eax
  42365e:	je     0x42369c
  423660:	mov    ecx,ebx
  423662:	mov    eax,ebx
  423664:	and    eax,0x1f
  423667:	lea    eax,[eax+eax*8]
  42366a:	sar    ecx,0x5
  42366d:	mov    ecx,DWORD PTR [ecx*4+0x460240]
  423674:	lea    esi,[ecx+eax*4]
  423677:	mov    eax,DWORD PTR [esp+0x10]
  42367b:	mov    eax,DWORD PTR [eax]
  42367d:	mov    DWORD PTR [esi],eax
  42367f:	mov    al,BYTE PTR [ebp+0x0]
  423682:	mov    BYTE PTR [esi+0x4],al
  423685:	lea    eax,[esi+0xc]
  423688:	push   0xfa0
  42368d:	push   eax
  42368e:	call   0x4249cd
  423693:	test   eax,eax
  423695:	pop    ecx
  423696:	pop    ecx
  423697:	je     0x4236c7
  423699:	inc    DWORD PTR [esi+0x8]
  42369c:	add    DWORD PTR [esp+0x10],0x4
  4236a1:	inc    ebx
  4236a2:	inc    ebp
  4236a3:	cmp    ebx,edi
  4236a5:	jl     0x42363d
  4236a7:	xor    ebx,ebx
  4236a9:	mov    ecx,DWORD PTR ds:0x460240
  4236af:	lea    eax,[ebx+ebx*8]
  4236b2:	lea    esi,[ecx+eax*4]
  4236b5:	cmp    DWORD PTR [esi],0xffffffff
  4236b8:	jne    0x423729
  4236ba:	test   ebx,ebx
  4236bc:	mov    BYTE PTR [esi+0x4],0x81
  4236c0:	jne    0x4236cc
  4236c2:	push   0xfffffff6
  4236c4:	pop    eax
  4236c5:	jmp    0x4236d6
  4236c7:	or     eax,0xffffffff
  4236ca:	jmp    0x423745
  4236cc:	mov    eax,ebx
  4236ce:	dec    eax
  4236cf:	neg    eax
  4236d1:	sbb    eax,eax
  4236d3:	add    eax,0xfffffff5
  4236d6:	push   eax
  4236d7:	call   DWORD PTR ds:0x428070
  4236dd:	mov    edi,eax
  4236df:	cmp    edi,0xffffffff
  4236e2:	je     0x423723
  4236e4:	push   edi
  4236e5:	call   DWORD PTR ds:0x428094
  4236eb:	test   eax,eax
  4236ed:	je     0x423723
  4236ef:	and    eax,0xff
  4236f4:	cmp    eax,0x2
  4236f7:	mov    DWORD PTR [esi],edi
  4236f9:	jne    0x423701
  4236fb:	or     BYTE PTR [esi+0x4],0x40
  4236ff:	jmp    0x42370a
  423701:	cmp    eax,0x3
  423704:	jne    0x42370a
  423706:	or     BYTE PTR [esi+0x4],0x8
  42370a:	lea    eax,[esi+0xc]
  42370d:	push   0xfa0
  423712:	push   eax
  423713:	call   0x4249cd
  423718:	test   eax,eax
  42371a:	pop    ecx
  42371b:	pop    ecx
  42371c:	je     0x4236c7
  42371e:	inc    DWORD PTR [esi+0x8]
  423721:	jmp    0x42372d
  423723:	or     BYTE PTR [esi+0x4],0x40
  423727:	jmp    0x42372d
  423729:	or     BYTE PTR [esi+0x4],0x80
  42372d:	inc    ebx
  42372e:	cmp    ebx,0x3
  423731:	jl     0x4236a9
  423737:	push   DWORD PTR ds:0x460228
  42373d:	call   DWORD PTR ds:0x428090
  423743:	xor    eax,eax
  423745:	pop    edi
  423746:	pop    esi
  423747:	pop    ebp
  423748:	pop    ebx
  423749:	add    esp,0x48
  42374c:	ret    
  42374d:	push   0xc
  42374f:	push   0x4284e0
  423754:	call   0x423940
  423759:	mov    DWORD PTR [ebp-0x1c],0x428f38
  423760:	cmp    DWORD PTR [ebp-0x1c],0x428f38
  423767:	jae    0x42378b
  423769:	and    DWORD PTR [ebp-0x4],0x0
  42376d:	mov    eax,DWORD PTR [ebp-0x1c]
  423770:	mov    eax,DWORD PTR [eax]
  423772:	test   eax,eax
  423774:	je     0x423781
  423776:	call   eax
  423778:	jmp    0x423781
  42377a:	xor    eax,eax
  42377c:	inc    eax
  42377d:	ret    
  42377e:	mov    esp,DWORD PTR [ebp-0x18]
  423781:	or     DWORD PTR [ebp-0x4],0xffffffff
  423785:	add    DWORD PTR [ebp-0x1c],0x4
  423789:	jmp    0x423760
  42378b:	call   0x42397b
  423790:	ret    
  423791:	push   0xc
  423793:	push   0x4284f0
  423798:	call   0x423940
  42379d:	mov    DWORD PTR [ebp-0x1c],0x428f40
  4237a4:	cmp    DWORD PTR [ebp-0x1c],0x428f40
  4237ab:	jae    0x4237cf
  4237ad:	and    DWORD PTR [ebp-0x4],0x0
  4237b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237b4:	mov    eax,DWORD PTR [eax]
  4237b6:	test   eax,eax
  4237b8:	je     0x4237c5
  4237ba:	call   eax
  4237bc:	jmp    0x4237c5
  4237be:	xor    eax,eax
  4237c0:	inc    eax
  4237c1:	ret    
  4237c2:	mov    esp,DWORD PTR [ebp-0x18]
  4237c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237c9:	add    DWORD PTR [ebp-0x1c],0x4
  4237cd:	jmp    0x4237a4
  4237cf:	call   0x42397b
  4237d4:	ret    
  4237d5:	call   0x423a16
  4237da:	mov    eax,ds:0x45f3dc
  4237df:	cmp    eax,0xffffffff
  4237e2:	je     0x4237f2
  4237e4:	push   eax
  4237e5:	call   DWORD PTR ds:0x42809c
  4237eb:	or     DWORD PTR ds:0x45f3dc,0xffffffff
  4237f2:	ret    
  4237f3:	push   ebx
  4237f4:	push   esi
  4237f5:	call   DWORD PTR ds:0x428018
  4237fb:	push   DWORD PTR ds:0x45f3dc
  423801:	mov    ebx,eax
  423803:	call   DWORD PTR ds:0x4280ac
  423809:	mov    esi,eax
  42380b:	test   esi,esi
  42380d:	jne    0x423858
  42380f:	push   0x88
  423814:	push   0x1
  423816:	call   0x424a58
  42381b:	mov    esi,eax
  42381d:	test   esi,esi
  42381f:	pop    ecx
  423820:	pop    ecx
  423821:	je     0x423850
  423823:	push   esi
  423824:	push   DWORD PTR ds:0x45f3dc
  42382a:	call   DWORD PTR ds:0x4280a8
  423830:	test   eax,eax
  423832:	je     0x423850
  423834:	mov    DWORD PTR [esi+0x54],0x45f330
  42383b:	mov    DWORD PTR [esi+0x14],0x1
  423842:	call   DWORD PTR ds:0x4280a4
  423848:	or     DWORD PTR [esi+0x4],0xffffffff
  42384c:	mov    DWORD PTR [esi],eax
  42384e:	jmp    0x423858
  423850:	push   0x10
  423852:	call   0x422a06
  423857:	pop    ecx
  423858:	push   ebx
  423859:	call   DWORD PTR ds:0x4280a0
  42385f:	mov    eax,esi
  423861:	pop    esi
  423862:	pop    ebx
  423863:	ret    
  423864:	call   0x4239cd
  423869:	test   eax,eax
  42386b:	je     0x42387d
  42386d:	call   DWORD PTR ds:0x4280b0
  423873:	cmp    eax,0xffffffff
  423876:	mov    ds:0x45f3dc,eax
  42387b:	jne    0x423885
  42387d:	call   0x4237d5
  423882:	xor    eax,eax
  423884:	ret    
  423885:	push   esi
  423886:	push   0x88
  42388b:	push   0x1
  42388d:	call   0x424a58
  423892:	mov    esi,eax
  423894:	test   esi,esi
  423896:	pop    ecx
  423897:	pop    ecx
  423898:	je     0x4238ca
  42389a:	push   esi
  42389b:	push   DWORD PTR ds:0x45f3dc
  4238a1:	call   DWORD PTR ds:0x4280a8
  4238a7:	test   eax,eax
  4238a9:	je     0x4238ca
  4238ab:	mov    DWORD PTR [esi+0x54],0x45f330
  4238b2:	mov    DWORD PTR [esi+0x14],0x1
  4238b9:	call   DWORD PTR ds:0x4280a4
  4238bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238c3:	mov    DWORD PTR [esi],eax
  4238c5:	xor    eax,eax
  4238c7:	inc    eax
  4238c8:	pop    esi
  4238c9:	ret    
  4238ca:	call   0x4237d5
  4238cf:	xor    eax,eax
  4238d1:	pop    esi
  4238d2:	ret    
  4238d3:	cmp    DWORD PTR ds:0x45fba4,0x2
  4238da:	jne    0x4238e9
  4238dc:	cmp    DWORD PTR ds:0x45fbb0,0x5
  4238e3:	jb     0x4238e9
  4238e5:	xor    eax,eax
  4238e7:	inc    eax
  4238e8:	ret    
  4238e9:	push   0x3
  4238eb:	pop    eax
  4238ec:	ret    
  4238ed:	xor    eax,eax
  4238ef:	cmp    DWORD PTR [esp+0x4],eax
  4238f3:	push   0x0
  4238f5:	sete   al
  4238f8:	push   0x1000
  4238fd:	push   eax
  4238fe:	call   DWORD PTR ds:0x4280b8
  423904:	test   eax,eax
  423906:	mov    ds:0x460220,eax
  42390b:	je     0x423937
  42390d:	call   0x4238d3
  423912:	cmp    eax,0x3
  423915:	mov    ds:0x460224,eax
  42391a:	jne    0x42393a
  42391c:	push   0x3f8
  423921:	call   0x424cda
  423926:	test   eax,eax
  423928:	pop    ecx
  423929:	jne    0x42393a
  42392b:	push   DWORD PTR ds:0x460220
  423931:	call   DWORD PTR ds:0x4280b4
  423937:	xor    eax,eax
  423939:	ret    
  42393a:	xor    eax,eax
  42393c:	inc    eax
  42393d:	ret    
  42393e:	int3   
  42393f:	int3   
  423940:	push   0x425808
  423945:	mov    eax,fs:0x0
  42394b:	push   eax
  42394c:	mov    eax,DWORD PTR [esp+0x10]
  423950:	mov    DWORD PTR [esp+0x10],ebp
  423954:	lea    ebp,[esp+0x10]
  423958:	sub    esp,eax
  42395a:	push   ebx
  42395b:	push   esi
  42395c:	push   edi
  42395d:	mov    eax,DWORD PTR [ebp-0x8]
  423960:	mov    DWORD PTR [ebp-0x18],esp
  423963:	push   eax
  423964:	mov    eax,DWORD PTR [ebp-0x4]
  423967:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42396e:	mov    DWORD PTR [ebp-0x8],eax
  423971:	lea    eax,[ebp-0x10]
  423974:	mov    fs:0x0,eax
  42397a:	ret    
  42397b:	mov    ecx,DWORD PTR [ebp-0x10]
  42397e:	mov    DWORD PTR fs:0x0,ecx
  423985:	pop    ecx
  423986:	pop    edi
  423987:	pop    esi
  423988:	pop    ebx
  423989:	leave  
  42398a:	push   ecx
  42398b:	ret    
  42398c:	int3   
  42398d:	int3   
  42398e:	int3   
  42398f:	int3   
  423990:	cmp    eax,0x1000
  423995:	jae    0x4239a5
  423997:	neg    eax
  423999:	add    eax,esp
  42399b:	add    eax,0x4
  42399e:	test   DWORD PTR [eax],eax
  4239a0:	xchg   esp,eax
  4239a1:	mov    eax,DWORD PTR [eax]
  4239a3:	push   eax
  4239a4:	ret    
  4239a5:	push   ecx
  4239a6:	lea    ecx,[esp+0x8]
  4239aa:	sub    ecx,0x1000
  4239b0:	sub    eax,0x1000
  4239b5:	test   DWORD PTR [ecx],eax
  4239b7:	cmp    eax,0x1000
  4239bc:	jae    0x4239aa
  4239be:	sub    ecx,eax
  4239c0:	mov    eax,esp
  4239c2:	test   DWORD PTR [ecx],eax
  4239c4:	mov    esp,ecx
  4239c6:	mov    ecx,DWORD PTR [eax]
  4239c8:	mov    eax,DWORD PTR [eax+0x4]
  4239cb:	push   eax
  4239cc:	ret    
  4239cd:	push   esi
  4239ce:	push   edi
  4239cf:	xor    esi,esi
  4239d1:	mov    edi,0x45fd00
  4239d6:	cmp    DWORD PTR [esi*8+0x45f3f4],0x1
  4239de:	jne    0x4239fe
  4239e0:	lea    eax,[esi*8+0x45f3f0]
  4239e7:	mov    DWORD PTR [eax],edi
  4239e9:	push   0xfa0
  4239ee:	push   DWORD PTR [eax]
  4239f0:	add    edi,0x18
  4239f3:	call   0x4249cd
  4239f8:	test   eax,eax
  4239fa:	pop    ecx
  4239fb:	pop    ecx
  4239fc:	je     0x423a0a
  4239fe:	inc    esi
  4239ff:	cmp    esi,0x24
  423a02:	jl     0x4239d6
  423a04:	xor    eax,eax
  423a06:	inc    eax
  423a07:	pop    edi
  423a08:	pop    esi
  423a09:	ret    
  423a0a:	and    DWORD PTR [esi*8+0x45f3f0],0x0
  423a12:	xor    eax,eax
  423a14:	jmp    0x423a07
  423a16:	push   ebx
  423a17:	mov    ebx,DWORD PTR ds:0x428098
  423a1d:	push   esi
  423a1e:	mov    esi,0x45f3f0
  423a23:	push   edi
  423a24:	mov    edi,DWORD PTR [esi]
  423a26:	test   edi,edi
  423a28:	je     0x423a3d
  423a2a:	cmp    DWORD PTR [esi+0x4],0x1
  423a2e:	je     0x423a3d
  423a30:	push   edi
  423a31:	call   ebx
  423a33:	push   edi
  423a34:	call   0x42454a
  423a39:	and    DWORD PTR [esi],0x0
  423a3c:	pop    ecx
  423a3d:	add    esi,0x8
  423a40:	cmp    esi,0x45f510
  423a46:	jl     0x423a24
  423a48:	mov    esi,0x45f3f0
  423a4d:	pop    edi
  423a4e:	mov    eax,DWORD PTR [esi]
  423a50:	test   eax,eax
  423a52:	je     0x423a5d
  423a54:	cmp    DWORD PTR [esi+0x4],0x1
  423a58:	jne    0x423a5d
  423a5a:	push   eax
  423a5b:	call   ebx
  423a5d:	add    esi,0x8
  423a60:	cmp    esi,0x45f510
  423a66:	jl     0x423a4e
  423a68:	pop    esi
  423a69:	pop    ebx
  423a6a:	ret    
  423a6b:	push   ebp
  423a6c:	mov    ebp,esp
  423a6e:	mov    eax,DWORD PTR [ebp+0x8]
  423a71:	push   DWORD PTR [eax*8+0x45f3f0]
  423a78:	call   DWORD PTR ds:0x428020
  423a7e:	pop    ebp
  423a7f:	ret    
  423a80:	push   ebp
  423a81:	mov    ebp,esp
  423a83:	push   esi
  423a84:	mov    esi,DWORD PTR [ebp+0x8]
  423a87:	lea    esi,[esi*8+0x45f3f0]
  423a8e:	cmp    DWORD PTR [esi],0x0
  423a91:	je     0x423a98
  423a93:	xor    eax,eax
  423a95:	inc    eax
  423a96:	jmp    0x423afc
  423a98:	push   edi
  423a99:	push   0x18
  423a9b:	call   0x424662
  423aa0:	mov    edi,eax
  423aa2:	test   edi,edi
  423aa4:	pop    ecx
  423aa5:	jne    0x423ab6
  423aa7:	call   0x4258e0
  423aac:	mov    DWORD PTR [eax],0xc
  423ab2:	xor    eax,eax
  423ab4:	jmp    0x423afb
  423ab6:	push   0xa
  423ab8:	call   0x423aff
  423abd:	cmp    DWORD PTR [esi],0x0
  423ac0:	pop    ecx
  423ac1:	jne    0x423ae9
  423ac3:	push   0xfa0
  423ac8:	push   edi
  423ac9:	call   0x4249cd
  423ace:	test   eax,eax
  423ad0:	pop    ecx
  423ad1:	pop    ecx
  423ad2:	jne    0x423ae5
  423ad4:	push   edi
  423ad5:	call   0x42454a
  423ada:	push   0xa
  423adc:	call   0x423a6b
  423ae1:	pop    ecx
  423ae2:	pop    ecx
  423ae3:	jmp    0x423aa7
  423ae5:	mov    DWORD PTR [esi],edi
  423ae7:	jmp    0x423af0
  423ae9:	push   edi
  423aea:	call   0x42454a
  423aef:	pop    ecx
  423af0:	push   0xa
  423af2:	call   0x423a6b
  423af7:	xor    eax,eax
  423af9:	pop    ecx
  423afa:	inc    eax
  423afb:	pop    edi
  423afc:	pop    esi
  423afd:	pop    ebp
  423afe:	ret    
  423aff:	push   ebp
  423b00:	mov    ebp,esp
  423b02:	mov    eax,DWORD PTR [ebp+0x8]
  423b05:	push   esi
  423b06:	lea    esi,[eax*8+0x45f3f0]
  423b0d:	cmp    DWORD PTR [esi],0x0
  423b10:	jne    0x423b25
  423b12:	push   eax
  423b13:	call   0x423a80
  423b18:	test   eax,eax
  423b1a:	pop    ecx
  423b1b:	jne    0x423b25
  423b1d:	push   0x11
  423b1f:	call   0x422a06
  423b24:	pop    ecx
  423b25:	push   DWORD PTR [esi]
  423b27:	call   DWORD PTR ds:0x4280c4
  423b2d:	pop    esi
  423b2e:	pop    ebp
  423b2f:	ret    
  423b30:	push   esi
  423b31:	push   DWORD PTR ds:0x460348
  423b37:	call   0x425a96
  423b3c:	pop    ecx
  423b3d:	mov    ecx,DWORD PTR ds:0x460344
  423b43:	mov    esi,eax
  423b45:	mov    eax,ds:0x460348
  423b4a:	mov    edx,ecx
  423b4c:	sub    edx,eax
  423b4e:	add    edx,0x4
  423b51:	cmp    esi,edx
  423b53:	jae    0x423ba3
  423b55:	mov    ecx,0x800
  423b5a:	cmp    esi,ecx
  423b5c:	jae    0x423b60
  423b5e:	mov    ecx,esi
  423b60:	add    ecx,esi
  423b62:	push   ecx
  423b63:	push   eax
  423b64:	call   0x4258e9
  423b69:	test   eax,eax
  423b6b:	pop    ecx
  423b6c:	pop    ecx
  423b6d:	jne    0x423b86
  423b6f:	add    esi,0x10
  423b72:	push   esi
  423b73:	push   DWORD PTR ds:0x460348
  423b79:	call   0x4258e9
  423b7e:	test   eax,eax
  423b80:	pop    ecx
  423b81:	pop    ecx
  423b82:	jne    0x423b86
  423b84:	pop    esi
  423b85:	ret    
  423b86:	mov    ecx,DWORD PTR ds:0x460344
  423b8c:	sub    ecx,DWORD PTR ds:0x460348
  423b92:	mov    ds:0x460348,eax
  423b97:	sar    ecx,0x2
  423b9a:	lea    ecx,[eax+ecx*4]
  423b9d:	mov    DWORD PTR ds:0x460344,ecx
  423ba3:	mov    DWORD PTR [ecx],edi
  423ba5:	add    DWORD PTR ds:0x460344,0x4
  423bac:	mov    eax,edi
  423bae:	pop    esi
  423baf:	ret    
  423bb0:	push   0x80
  423bb5:	call   0x424662
  423bba:	test   eax,eax
  423bbc:	pop    ecx
  423bbd:	mov    ds:0x460348,eax
  423bc2:	jne    0x423bc8
  423bc4:	push   0x18
  423bc6:	pop    eax
  423bc7:	ret    
  423bc8:	and    DWORD PTR [eax],0x0
  423bcb:	mov    eax,ds:0x460348
  423bd0:	mov    ds:0x460344,eax
  423bd5:	xor    eax,eax
  423bd7:	ret    
  423bd8:	push   0xc
  423bda:	push   0x428500
  423bdf:	call   0x423940
  423be4:	call   0x422c51
  423be9:	and    DWORD PTR [ebp-0x4],0x0
  423bed:	mov    edi,DWORD PTR [ebp+0x8]
  423bf0:	call   0x423b30
  423bf5:	mov    DWORD PTR [ebp-0x1c],eax
  423bf8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bfc:	call   0x423c0a
  423c01:	mov    eax,DWORD PTR [ebp-0x1c]
  423c04:	call   0x42397b
  423c09:	ret    
  423c0a:	call   0x422c5a
  423c0f:	ret    
  423c10:	push   DWORD PTR [esp+0x4]
  423c14:	call   0x423bd8
  423c19:	neg    eax
  423c1b:	sbb    eax,eax
  423c1d:	neg    eax
  423c1f:	pop    ecx
  423c20:	dec    eax
  423c21:	ret    
  423c22:	push   ebp
  423c23:	mov    ebp,esp
  423c25:	sub    esp,0x10
  423c28:	push   ebx
  423c29:	xor    ebx,ebx
  423c2b:	cmp    DWORD PTR ds:0x45fe50,ebx
  423c31:	push   esi
  423c32:	push   edi
  423c33:	jne    0x423ca2
  423c35:	push   0x428570
  423c3a:	call   DWORD PTR ds:0x4280c8
  423c40:	mov    edi,eax
  423c42:	cmp    edi,ebx
  423c44:	je     0x423cdd
  423c4a:	mov    esi,DWORD PTR ds:0x428010
  423c50:	push   0x428564
  423c55:	push   edi
  423c56:	call   esi
  423c58:	test   eax,eax
  423c5a:	mov    ds:0x45fe50,eax
  423c5f:	je     0x423cdd
  423c61:	push   0x428554
  423c66:	push   edi
  423c67:	call   esi
  423c69:	push   0x428540
  423c6e:	push   edi
  423c6f:	mov    ds:0x45fe54,eax
  423c74:	call   esi
  423c76:	cmp    DWORD PTR ds:0x45fba4,0x2
  423c7d:	mov    ds:0x45fe58,eax
  423c82:	jne    0x423ca2
  423c84:	push   0x428524
  423c89:	push   edi
  423c8a:	call   esi
  423c8c:	test   eax,eax
  423c8e:	mov    ds:0x45fe60,eax
  423c93:	je     0x423ca2
  423c95:	push   0x42850c
  423c9a:	push   edi
  423c9b:	call   esi
  423c9d:	mov    ds:0x45fe5c,eax
  423ca2:	mov    eax,ds:0x45fe5c
  423ca7:	test   eax,eax
  423ca9:	je     0x423ce7
  423cab:	call   eax
  423cad:	test   eax,eax
  423caf:	je     0x423cce
  423cb1:	lea    ecx,[ebp-0x4]
  423cb4:	push   ecx
  423cb5:	push   0xc
  423cb7:	lea    ecx,[ebp-0x10]
  423cba:	push   ecx
  423cbb:	push   0x1
  423cbd:	push   eax
  423cbe:	call   DWORD PTR ds:0x45fe60
  423cc4:	test   eax,eax
  423cc6:	je     0x423cce
  423cc8:	test   BYTE PTR [ebp-0x8],0x1
  423ccc:	jne    0x423ce7
  423cce:	cmp    DWORD PTR ds:0x45fbb0,0x4
  423cd5:	jb     0x423ce1
  423cd7:	or     BYTE PTR [ebp+0x12],0x20
  423cdb:	jmp    0x423d06
  423cdd:	xor    eax,eax
  423cdf:	jmp    0x423d16
  423ce1:	or     BYTE PTR [ebp+0x12],0x4
  423ce5:	jmp    0x423d06
  423ce7:	mov    eax,ds:0x45fe54
  423cec:	test   eax,eax
  423cee:	je     0x423d06
  423cf0:	call   eax
  423cf2:	mov    ebx,eax
  423cf4:	test   ebx,ebx
  423cf6:	je     0x423d06
  423cf8:	mov    eax,ds:0x45fe58
  423cfd:	test   eax,eax
  423cff:	je     0x423d06
  423d01:	push   ebx
  423d02:	call   eax
  423d04:	mov    ebx,eax
  423d06:	push   DWORD PTR [ebp+0x10]
  423d09:	push   DWORD PTR [ebp+0xc]
  423d0c:	push   DWORD PTR [ebp+0x8]
  423d0f:	push   ebx
  423d10:	call   DWORD PTR ds:0x45fe50
  423d16:	pop    edi
  423d17:	pop    esi
  423d18:	pop    ebx
  423d19:	leave  
  423d1a:	ret    
  423d1b:	int3   
  423d1c:	int3   
  423d1d:	int3   
  423d1e:	int3   
  423d1f:	int3   
  423d20:	push   edi
  423d21:	mov    edi,DWORD PTR [esp+0x8]
  423d25:	jmp    0x423d95
  423d27:	lea    esp,[esp+0x0]
  423d2e:	mov    edi,edi
  423d30:	mov    ecx,DWORD PTR [esp+0x4]
  423d34:	push   edi
  423d35:	test   ecx,0x3
  423d3b:	je     0x423d50
  423d3d:	mov    al,BYTE PTR [ecx]
  423d3f:	add    ecx,0x1
  423d42:	test   al,al
  423d44:	je     0x423d83
  423d46:	test   ecx,0x3
  423d4c:	jne    0x423d3d
  423d4e:	mov    edi,edi
  423d50:	mov    eax,DWORD PTR [ecx]
  423d52:	mov    edx,0x7efefeff
  423d57:	add    edx,eax
  423d59:	xor    eax,0xffffffff
  423d5c:	xor    eax,edx
  423d5e:	add    ecx,0x4
  423d61:	test   eax,0x81010100
  423d66:	je     0x423d50
  423d68:	mov    eax,DWORD PTR [ecx-0x4]
  423d6b:	test   al,al
  423d6d:	je     0x423d92
  423d6f:	test   ah,ah
  423d71:	je     0x423d8d
  423d73:	test   eax,0xff0000
  423d78:	je     0x423d88
  423d7a:	test   eax,0xff000000
  423d7f:	je     0x423d83
  423d81:	jmp    0x423d50
  423d83:	lea    edi,[ecx-0x1]
  423d86:	jmp    0x423d95
  423d88:	lea    edi,[ecx-0x2]
  423d8b:	jmp    0x423d95
  423d8d:	lea    edi,[ecx-0x3]
  423d90:	jmp    0x423d95
  423d92:	lea    edi,[ecx-0x4]
  423d95:	mov    ecx,DWORD PTR [esp+0xc]
  423d99:	test   ecx,0x3
  423d9f:	je     0x423dbe
  423da1:	mov    dl,BYTE PTR [ecx]
  423da3:	add    ecx,0x1
  423da6:	test   dl,dl
  423da8:	je     0x423e10
  423daa:	mov    BYTE PTR [edi],dl
  423dac:	add    edi,0x1
  423daf:	test   ecx,0x3
  423db5:	jne    0x423da1
  423db7:	jmp    0x423dbe
  423db9:	mov    DWORD PTR [edi],edx
  423dbb:	add    edi,0x4
  423dbe:	mov    edx,0x7efefeff
  423dc3:	mov    eax,DWORD PTR [ecx]
  423dc5:	add    edx,eax
  423dc7:	xor    eax,0xffffffff
  423dca:	xor    eax,edx
  423dcc:	mov    edx,DWORD PTR [ecx]
  423dce:	add    ecx,0x4
  423dd1:	test   eax,0x81010100
  423dd6:	je     0x423db9
  423dd8:	test   dl,dl
  423dda:	je     0x423e10
  423ddc:	test   dh,dh
  423dde:	je     0x423e07
  423de0:	test   edx,0xff0000
  423de6:	je     0x423dfa
  423de8:	test   edx,0xff000000
  423dee:	je     0x423df2
  423df0:	jmp    0x423db9
  423df2:	mov    DWORD PTR [edi],edx
  423df4:	mov    eax,DWORD PTR [esp+0x8]
  423df8:	pop    edi
  423df9:	ret    
  423dfa:	mov    WORD PTR [edi],dx
  423dfd:	mov    eax,DWORD PTR [esp+0x8]
  423e01:	mov    BYTE PTR [edi+0x2],0x0
  423e05:	pop    edi
  423e06:	ret    
  423e07:	mov    WORD PTR [edi],dx
  423e0a:	mov    eax,DWORD PTR [esp+0x8]
  423e0e:	pop    edi
  423e0f:	ret    
  423e10:	mov    BYTE PTR [edi],dl
  423e12:	mov    eax,DWORD PTR [esp+0x8]
  423e16:	pop    edi
  423e17:	ret    
  423e18:	int3   
  423e19:	int3   
  423e1a:	int3   
  423e1b:	int3   
  423e1c:	int3   
  423e1d:	int3   
  423e1e:	int3   
  423e1f:	int3   
  423e20:	mov    ecx,DWORD PTR [esp+0xc]
  423e24:	push   edi
  423e25:	test   ecx,ecx
  423e27:	je     0x423ebf
  423e2d:	push   esi
  423e2e:	push   ebx
  423e2f:	mov    ebx,ecx
  423e31:	mov    esi,DWORD PTR [esp+0x14]
  423e35:	test   esi,0x3
  423e3b:	mov    edi,DWORD PTR [esp+0x10]
  423e3f:	jne    0x423e4c
  423e41:	shr    ecx,0x2
  423e44:	jne    0x423ecf
  423e4a:	jmp    0x423e73
  423e4c:	mov    al,BYTE PTR [esi]
  423e4e:	add    esi,0x1
  423e51:	mov    BYTE PTR [edi],al
  423e53:	add    edi,0x1
  423e56:	sub    ecx,0x1
  423e59:	je     0x423e86
  423e5b:	test   al,al
  423e5d:	je     0x423e8e
  423e5f:	test   esi,0x3
  423e65:	jne    0x423e4c
  423e67:	mov    ebx,ecx
  423e69:	shr    ecx,0x2
  423e6c:	jne    0x423ecf
  423e6e:	and    ebx,0x3
  423e71:	je     0x423e86
  423e73:	mov    al,BYTE PTR [esi]
  423e75:	add    esi,0x1
  423e78:	mov    BYTE PTR [edi],al
  423e7a:	add    edi,0x1
  423e7d:	test   al,al
  423e7f:	je     0x423eb8
  423e81:	sub    ebx,0x1
  423e84:	jne    0x423e73
  423e86:	mov    eax,DWORD PTR [esp+0x10]
  423e8a:	pop    ebx
  423e8b:	pop    esi
  423e8c:	pop    edi
  423e8d:	ret    
  423e8e:	test   edi,0x3
  423e94:	je     0x423eac
  423e96:	mov    BYTE PTR [edi],al
  423e98:	add    edi,0x1
  423e9b:	sub    ecx,0x1
  423e9e:	je     0x423f3c
  423ea4:	test   edi,0x3
  423eaa:	jne    0x423e96
  423eac:	mov    ebx,ecx
  423eae:	shr    ecx,0x2
  423eb1:	jne    0x423f27
  423eb3:	mov    BYTE PTR [edi],al
  423eb5:	add    edi,0x1
  423eb8:	sub    ebx,0x1
  423ebb:	jne    0x423eb3
  423ebd:	pop    ebx
  423ebe:	pop    esi
  423ebf:	mov    eax,DWORD PTR [esp+0x8]
  423ec3:	pop    edi
  423ec4:	ret    
  423ec5:	mov    DWORD PTR [edi],edx
  423ec7:	add    edi,0x4
  423eca:	sub    ecx,0x1
  423ecd:	je     0x423e6e
  423ecf:	mov    edx,0x7efefeff
  423ed4:	mov    eax,DWORD PTR [esi]
  423ed6:	add    edx,eax
  423ed8:	xor    eax,0xffffffff
  423edb:	xor    eax,edx
  423edd:	mov    edx,DWORD PTR [esi]
  423edf:	add    esi,0x4
  423ee2:	test   eax,0x81010100
  423ee7:	je     0x423ec5
  423ee9:	test   dl,dl
  423eeb:	je     0x423f19
  423eed:	test   dh,dh
  423eef:	je     0x423f0f
  423ef1:	test   edx,0xff0000
  423ef7:	je     0x423f05
  423ef9:	test   edx,0xff000000
  423eff:	jne    0x423ec5
  423f01:	mov    DWORD PTR [edi],edx
  423f03:	jmp    0x423f1d
  423f05:	and    edx,0xffff
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	jmp    0x423f1d
  423f0f:	and    edx,0xff
  423f15:	mov    DWORD PTR [edi],edx
  423f17:	jmp    0x423f1d
  423f19:	xor    edx,edx
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	add    edi,0x4
  423f20:	xor    eax,eax
  423f22:	sub    ecx,0x1
  423f25:	je     0x423f33
  423f27:	xor    eax,eax
  423f29:	mov    DWORD PTR [edi],eax
  423f2b:	add    edi,0x4
  423f2e:	sub    ecx,0x1
  423f31:	jne    0x423f29
  423f33:	and    ebx,0x3
  423f36:	jne    0x423eb3
  423f3c:	mov    eax,DWORD PTR [esp+0x10]
  423f40:	pop    ebx
  423f41:	pop    esi
  423f42:	pop    edi
  423f43:	ret    
  423f44:	int3   
  423f45:	int3   
  423f46:	int3   
  423f47:	int3   
  423f48:	int3   
  423f49:	int3   
  423f4a:	int3   
  423f4b:	int3   
  423f4c:	int3   
  423f4d:	int3   
  423f4e:	int3   
  423f4f:	int3   
  423f50:	mov    ecx,DWORD PTR [esp+0x4]
  423f54:	test   ecx,0x3
  423f5a:	je     0x423f80
  423f5c:	mov    al,BYTE PTR [ecx]
  423f5e:	add    ecx,0x1
  423f61:	test   al,al
  423f63:	je     0x423fb3
  423f65:	test   ecx,0x3
  423f6b:	jne    0x423f5c
  423f6d:	add    eax,0x0
  423f72:	lea    esp,[esp+0x0]
  423f79:	lea    esp,[esp+0x0]
  423f80:	mov    eax,DWORD PTR [ecx]
  423f82:	mov    edx,0x7efefeff
  423f87:	add    edx,eax
  423f89:	xor    eax,0xffffffff
  423f8c:	xor    eax,edx
  423f8e:	add    ecx,0x4
  423f91:	test   eax,0x81010100
  423f96:	je     0x423f80
  423f98:	mov    eax,DWORD PTR [ecx-0x4]
  423f9b:	test   al,al
  423f9d:	je     0x423fd1
  423f9f:	test   ah,ah
  423fa1:	je     0x423fc7
  423fa3:	test   eax,0xff0000
  423fa8:	je     0x423fbd
  423faa:	test   eax,0xff000000
  423faf:	je     0x423fb3
  423fb1:	jmp    0x423f80
  423fb3:	lea    eax,[ecx-0x1]
  423fb6:	mov    ecx,DWORD PTR [esp+0x4]
  423fba:	sub    eax,ecx
  423fbc:	ret    
  423fbd:	lea    eax,[ecx-0x2]
  423fc0:	mov    ecx,DWORD PTR [esp+0x4]
  423fc4:	sub    eax,ecx
  423fc6:	ret    
  423fc7:	lea    eax,[ecx-0x3]
  423fca:	mov    ecx,DWORD PTR [esp+0x4]
  423fce:	sub    eax,ecx
  423fd0:	ret    
  423fd1:	lea    eax,[ecx-0x4]
  423fd4:	mov    ecx,DWORD PTR [esp+0x4]
  423fd8:	sub    eax,ecx
  423fda:	ret    
  423fdb:	push   0x8
  423fdd:	push   0x428580
  423fe2:	call   0x423940
  423fe7:	and    DWORD PTR [ebp-0x4],0x0
  423feb:	push   0x0
  423fed:	push   0x1
  423fef:	call   0x425b62
  423ff4:	pop    ecx
  423ff5:	pop    ecx
  423ff6:	jmp    0x423fff
  423ff8:	xor    eax,eax
  423ffa:	inc    eax
  423ffb:	ret    
  423ffc:	mov    esp,DWORD PTR [ebp-0x18]
  423fff:	or     DWORD PTR [ebp-0x4],0xffffffff
  424003:	push   0x3
  424005:	call   DWORD PTR ds:0x428060
  42400b:	int3   
  42400c:	cmp    ecx,DWORD PTR ds:0x45f510
  424012:	jne    0x424015
  424014:	ret    
  424015:	jmp    0x423fdb
  42401a:	movzx  eax,BYTE PTR [esp+0x4]
  42401f:	mov    cl,BYTE PTR [esp+0xc]
  424023:	test   BYTE PTR [eax+0x460001],cl
  424029:	jne    0x424047
  42402b:	cmp    DWORD PTR [esp+0x8],0x0
  424030:	je     0x424040
  424032:	movzx  eax,WORD PTR [eax*2+0x42897a]
  42403a:	and    eax,DWORD PTR [esp+0x8]
  42403e:	jmp    0x424042
  424040:	xor    eax,eax
  424042:	test   eax,eax
  424044:	jne    0x424047
  424046:	ret    
  424047:	xor    eax,eax
  424049:	inc    eax
  42404a:	ret    
  42404b:	push   0x4
  42404d:	push   0x0
  42404f:	push   DWORD PTR [esp+0xc]
  424053:	call   0x42401a
  424058:	add    esp,0xc
  42405b:	ret    
  42405c:	sub    eax,0x3a4
  424061:	je     0x424085
  424063:	sub    eax,0x4
  424066:	je     0x42407f
  424068:	sub    eax,0xd
  42406b:	je     0x424079
  42406d:	dec    eax
  42406e:	je     0x424073
  424070:	xor    eax,eax
  424072:	ret    
  424073:	mov    eax,0x404
  424078:	ret    
  424079:	mov    eax,0x412
  42407e:	ret    
  42407f:	mov    eax,0x804
  424084:	ret    
  424085:	mov    eax,0x411
  42408a:	ret    
  42408b:	push   edi
  42408c:	push   0x40
  42408e:	xor    eax,eax
  424090:	pop    ecx
  424091:	mov    edi,0x460000
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	stos   BYTE PTR es:[edi],al
  424099:	xor    eax,eax
  42409b:	mov    ds:0x460104,eax
  4240a0:	mov    ds:0x45fffc,eax
  4240a5:	mov    ds:0x45fff4,eax
  4240aa:	mov    edi,0x460110
  4240af:	stos   DWORD PTR es:[edi],eax
  4240b0:	stos   DWORD PTR es:[edi],eax
  4240b1:	stos   DWORD PTR es:[edi],eax
  4240b2:	pop    edi
  4240b3:	ret    
  4240b4:	push   ebp
  4240b5:	mov    ebp,esp
  4240b7:	sub    esp,0x518
  4240bd:	mov    eax,ds:0x45f510
  4240c2:	xor    eax,DWORD PTR [ebp+0x4]
  4240c5:	push   esi
  4240c6:	mov    DWORD PTR [ebp-0x4],eax
  4240c9:	lea    eax,[ebp-0x18]
  4240cc:	push   eax
  4240cd:	push   DWORD PTR ds:0x460104
  4240d3:	call   DWORD PTR ds:0x4280d4
  4240d9:	cmp    eax,0x1
  4240dc:	mov    esi,0x100
  4240e1:	jne    0x4241f4
  4240e7:	xor    eax,eax
  4240e9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240f0:	inc    eax
  4240f1:	cmp    eax,esi
  4240f3:	jb     0x4240e9
  4240f5:	mov    al,BYTE PTR [ebp-0x12]
  4240f8:	test   al,al
  4240fa:	mov    BYTE PTR [ebp-0x118],0x20
  424101:	je     0x424139
  424103:	push   ebx
  424104:	lea    edx,[ebp-0x11]
  424107:	push   edi
  424108:	movzx  ecx,BYTE PTR [edx]
  42410b:	movzx  eax,al
  42410e:	cmp    eax,ecx
  424110:	ja     0x42412f
  424112:	sub    ecx,eax
  424114:	inc    ecx
  424115:	mov    ebx,ecx
  424117:	shr    ecx,0x2
  42411a:	lea    edi,[ebp+eax*1-0x118]
  424121:	mov    eax,0x20202020
  424126:	rep stos DWORD PTR es:[edi],eax
  424128:	mov    ecx,ebx
  42412a:	and    ecx,0x3
  42412d:	rep stos BYTE PTR es:[edi],al
  42412f:	inc    edx
  424130:	mov    al,BYTE PTR [edx]
  424132:	inc    edx
  424133:	test   al,al
  424135:	jne    0x424108
  424137:	pop    edi
  424138:	pop    ebx
  424139:	push   0x0
  42413b:	push   DWORD PTR ds:0x45fff4
  424141:	lea    eax,[ebp-0x518]
  424147:	push   DWORD PTR ds:0x460104
  42414d:	push   eax
  42414e:	push   esi
  42414f:	lea    eax,[ebp-0x118]
  424155:	push   eax
  424156:	push   0x1
  424158:	call   0x426068
  42415d:	push   0x0
  42415f:	push   DWORD PTR ds:0x460104
  424165:	lea    eax,[ebp-0x218]
  42416b:	push   esi
  42416c:	push   eax
  42416d:	push   esi
  42416e:	lea    eax,[ebp-0x118]
  424174:	push   eax
  424175:	push   esi
  424176:	push   DWORD PTR ds:0x45fff4
  42417c:	call   0x425cac
  424181:	push   0x0
  424183:	push   DWORD PTR ds:0x460104
  424189:	lea    eax,[ebp-0x318]
  42418f:	push   esi
  424190:	push   eax
  424191:	push   esi
  424192:	lea    eax,[ebp-0x118]
  424198:	push   eax
  424199:	push   0x200
  42419e:	push   DWORD PTR ds:0x45fff4
  4241a4:	call   0x425cac
  4241a9:	add    esp,0x5c
  4241ac:	xor    eax,eax
  4241ae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241b6:	test   cl,0x1
  4241b9:	je     0x4241d1
  4241bb:	or     BYTE PTR [eax+0x460001],0x10
  4241c2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241c9:	mov    BYTE PTR [eax+0x460120],cl
  4241cf:	jmp    0x4241ed
  4241d1:	test   cl,0x2
  4241d4:	je     0x4241e6
  4241d6:	or     BYTE PTR [eax+0x460001],0x20
  4241dd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241e4:	jmp    0x4241c9
  4241e6:	and    BYTE PTR [eax+0x460120],0x0
  4241ed:	inc    eax
  4241ee:	cmp    eax,esi
  4241f0:	jb     0x4241ae
  4241f2:	jmp    0x424238
  4241f4:	xor    eax,eax
  4241f6:	cmp    eax,0x41
  4241f9:	jb     0x424214
  4241fb:	cmp    eax,0x5a
  4241fe:	ja     0x424214
  424200:	or     BYTE PTR [eax+0x460001],0x10
  424207:	mov    cl,al
  424209:	add    cl,0x20
  42420c:	mov    BYTE PTR [eax+0x460120],cl
  424212:	jmp    0x424233
  424214:	cmp    eax,0x61
  424217:	jb     0x42422c
  424219:	cmp    eax,0x7a
  42421c:	ja     0x42422c
  42421e:	or     BYTE PTR [eax+0x460001],0x20
  424225:	mov    cl,al
  424227:	sub    cl,0x20
  42422a:	jmp    0x42420c
  42422c:	and    BYTE PTR [eax+0x460120],0x0
  424233:	inc    eax
  424234:	cmp    eax,esi
  424236:	jb     0x4241f6
  424238:	mov    ecx,DWORD PTR [ebp-0x4]
  42423b:	xor    ecx,DWORD PTR [ebp+0x4]
  42423e:	pop    esi
  42423f:	call   0x42400c
  424244:	leave  
  424245:	ret    
  424246:	push   ebp
  424247:	mov    ebp,esp
  424249:	sub    esp,0x1c
  42424c:	mov    eax,ds:0x45f510
  424251:	xor    eax,DWORD PTR [ebp+0x4]
  424254:	push   ebx
  424255:	push   esi
  424256:	mov    esi,DWORD PTR [ebp+0x8]
  424259:	xor    ebx,ebx
  42425b:	cmp    esi,ebx
  42425d:	mov    DWORD PTR [ebp-0x4],eax
  424260:	push   edi
  424261:	je     0x4243bb
  424267:	xor    edx,edx
  424269:	xor    eax,eax
  42426b:	cmp    DWORD PTR [eax+0x45f520],esi
  424271:	je     0x4242d8
  424273:	add    eax,0x30
  424276:	inc    edx
  424277:	cmp    eax,0xf0
  42427c:	jb     0x42426b
  42427e:	lea    eax,[ebp-0x1c]
  424281:	push   eax
  424282:	push   esi
  424283:	call   DWORD PTR ds:0x4280d4
  424289:	cmp    eax,0x1
  42428c:	jne    0x4243b3
  424292:	push   0x40
  424294:	xor    eax,eax
  424296:	cmp    DWORD PTR [ebp-0x1c],0x1
  42429a:	pop    ecx
  42429b:	mov    edi,0x460000
  4242a0:	rep stos DWORD PTR es:[edi],eax
  4242a2:	stos   BYTE PTR es:[edi],al
  4242a3:	mov    DWORD PTR ds:0x460104,esi
  4242a9:	mov    DWORD PTR ds:0x45fff4,ebx
  4242af:	jbe    0x4243a1
  4242b5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242b9:	je     0x424379
  4242bf:	lea    ecx,[ebp-0x15]
  4242c2:	mov    dl,BYTE PTR [ecx]
  4242c4:	test   dl,dl
  4242c6:	je     0x424379
  4242cc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242d0:	movzx  edx,dl
  4242d3:	jmp    0x424369
  4242d8:	push   0x40
  4242da:	xor    eax,eax
  4242dc:	pop    ecx
  4242dd:	mov    edi,0x460000
  4242e2:	rep stos DWORD PTR es:[edi],eax
  4242e4:	lea    ecx,[edx+edx*2]
  4242e7:	shl    ecx,0x4
  4242ea:	mov    DWORD PTR [ebp-0x8],ebx
  4242ed:	stos   BYTE PTR es:[edi],al
  4242ee:	lea    ebx,[ecx+0x45f530]
  4242f4:	mov    al,BYTE PTR [ebx]
  4242f6:	mov    esi,ebx
  4242f8:	jmp    0x424323
  4242fa:	mov    dl,BYTE PTR [esi+0x1]
  4242fd:	test   dl,dl
  4242ff:	je     0x424327
  424301:	movzx  eax,al
  424304:	movzx  edi,dl
  424307:	cmp    eax,edi
  424309:	ja     0x42431f
  42430b:	mov    edx,DWORD PTR [ebp-0x8]
  42430e:	mov    dl,BYTE PTR [edx+0x45f518]
  424314:	or     BYTE PTR [eax+0x460001],dl
  42431a:	inc    eax
  42431b:	cmp    eax,edi
  42431d:	jbe    0x424314
  42431f:	inc    esi
  424320:	inc    esi
  424321:	mov    al,BYTE PTR [esi]
  424323:	test   al,al
  424325:	jne    0x4242fa
  424327:	inc    DWORD PTR [ebp-0x8]
  42432a:	add    ebx,0x8
  42432d:	cmp    DWORD PTR [ebp-0x8],0x4
  424331:	jb     0x4242f4
  424333:	mov    eax,DWORD PTR [ebp+0x8]
  424336:	mov    ds:0x460104,eax
  42433b:	mov    DWORD PTR ds:0x45fffc,0x1
  424345:	call   0x42405c
  42434a:	lea    ecx,[ecx+0x45f524]
  424350:	mov    esi,ecx
  424352:	mov    edi,0x460110
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424359:	mov    ds:0x45fff4,eax
  42435e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435f:	jmp    0x4243c0
  424361:	or     BYTE PTR [eax+0x460001],0x4
  424368:	inc    eax
  424369:	cmp    eax,edx
  42436b:	jbe    0x424361
  42436d:	inc    ecx
  42436e:	inc    ecx
  42436f:	cmp    BYTE PTR [ecx-0x1],0x0
  424373:	jne    0x4242c2
  424379:	xor    ecx,ecx
  42437b:	inc    ecx
  42437c:	mov    eax,ecx
  42437e:	or     BYTE PTR [eax+0x460001],0x8
  424385:	inc    eax
  424386:	cmp    eax,0xff
  42438b:	jb     0x42437e
  42438d:	mov    eax,esi
  42438f:	call   0x42405c
  424394:	mov    ds:0x45fff4,eax
  424399:	mov    DWORD PTR ds:0x45fffc,ecx
  42439f:	jmp    0x4243a7
  4243a1:	mov    DWORD PTR ds:0x45fffc,ebx
  4243a7:	xor    eax,eax
  4243a9:	mov    edi,0x460110
  4243ae:	stos   DWORD PTR es:[edi],eax
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	stos   DWORD PTR es:[edi],eax
  4243b1:	jmp    0x4243c0
  4243b3:	cmp    DWORD PTR ds:0x45fe64,ebx
  4243b9:	je     0x4243c9
  4243bb:	call   0x42408b
  4243c0:	call   0x4240b4
  4243c5:	xor    eax,eax
  4243c7:	jmp    0x4243cc
  4243c9:	or     eax,0xffffffff
  4243cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243cf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243d2:	pop    edi
  4243d3:	pop    esi
  4243d4:	pop    ebx
  4243d5:	call   0x42400c
  4243da:	leave  
  4243db:	ret    
  4243dc:	push   0x14
  4243de:	push   0x428590
  4243e3:	call   0x423940
  4243e8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243ec:	push   0xd
  4243ee:	call   0x423aff
  4243f3:	pop    ecx
  4243f4:	xor    edi,edi
  4243f6:	mov    DWORD PTR [ebp-0x4],edi
  4243f9:	mov    DWORD PTR ds:0x45fe64,edi
  4243ff:	mov    eax,DWORD PTR [ebp+0x8]
  424402:	cmp    eax,0xfffffffe
  424405:	jne    0x424419
  424407:	mov    DWORD PTR ds:0x45fe64,0x1
  424411:	call   DWORD PTR ds:0x4280d0
  424417:	jmp    0x424444
  424419:	cmp    eax,0xfffffffd
  42441c:	jne    0x424430
  42441e:	mov    DWORD PTR ds:0x45fe64,0x1
  424428:	call   DWORD PTR ds:0x4280cc
  42442e:	jmp    0x424444
  424430:	cmp    eax,0xfffffffc
  424433:	jne    0x424444
  424435:	mov    DWORD PTR ds:0x45fe64,0x1
  42443f:	mov    eax,ds:0x45fe94
  424444:	mov    DWORD PTR [ebp+0x8],eax
  424447:	cmp    eax,DWORD PTR ds:0x460104
  42444d:	je     0x42450e
  424453:	mov    esi,DWORD PTR ds:0x45fff8
  424459:	mov    DWORD PTR [ebp-0x20],esi
  42445c:	cmp    esi,edi
  42445e:	je     0x424464
  424460:	cmp    DWORD PTR [esi],edi
  424462:	je     0x424474
  424464:	push   0x220
  424469:	call   0x424662
  42446e:	pop    ecx
  42446f:	mov    esi,eax
  424471:	mov    DWORD PTR [ebp-0x20],esi
  424474:	cmp    esi,edi
  424476:	je     0x4244f7
  424478:	push   DWORD PTR [ebp+0x8]
  42447b:	call   0x424246
  424480:	pop    ecx
  424481:	mov    DWORD PTR [ebp-0x1c],eax
  424484:	cmp    eax,edi
  424486:	jne    0x4244f7
  424488:	mov    DWORD PTR [esi],edi
  42448a:	mov    eax,ds:0x460104
  42448f:	mov    DWORD PTR [esi+0x4],eax
  424492:	mov    eax,ds:0x45fffc
  424497:	mov    DWORD PTR [esi+0x8],eax
  42449a:	mov    eax,ds:0x45fff4
  42449f:	mov    DWORD PTR [esi+0xc],eax
  4244a2:	xor    eax,eax
  4244a4:	mov    DWORD PTR [ebp-0x24],eax
  4244a7:	cmp    eax,0x5
  4244aa:	jge    0x4244bc
  4244ac:	mov    cx,WORD PTR [eax*2+0x460110]
  4244b4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244b9:	inc    eax
  4244ba:	jmp    0x4244a4
  4244bc:	xor    eax,eax
  4244be:	mov    DWORD PTR [ebp-0x24],eax
  4244c1:	cmp    eax,0x101
  4244c6:	jge    0x4244d5
  4244c8:	mov    cl,BYTE PTR [eax+0x460000]
  4244ce:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244d2:	inc    eax
  4244d3:	jmp    0x4244be
  4244d5:	xor    eax,eax
  4244d7:	mov    DWORD PTR [ebp-0x24],eax
  4244da:	cmp    eax,0x100
  4244df:	jge    0x4244f1
  4244e1:	mov    cl,BYTE PTR [eax+0x460120]
  4244e7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244ee:	inc    eax
  4244ef:	jmp    0x4244d7
  4244f1:	mov    DWORD PTR ds:0x45fff8,esi
  4244f7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244fb:	jne    0x424511
  4244fd:	cmp    esi,DWORD PTR ds:0x45fff8
  424503:	je     0x424511
  424505:	push   esi
  424506:	call   0x42454a
  42450b:	pop    ecx
  42450c:	jmp    0x424511
  42450e:	mov    DWORD PTR [ebp-0x1c],edi
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x424523
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	call   0x42397b
  424522:	ret    
  424523:	push   0xd
  424525:	call   0x423a6b
  42452a:	pop    ecx
  42452b:	ret    
  42452c:	cmp    DWORD PTR ds:0x46034c,0x0
  424533:	jne    0x424547
  424535:	push   0xfffffffd
  424537:	call   0x4243dc
  42453c:	pop    ecx
  42453d:	mov    DWORD PTR ds:0x46034c,0x1
  424547:	xor    eax,eax
  424549:	ret    
  42454a:	push   0xc
  42454c:	push   0x4285a0
  424551:	call   0x423940
  424556:	mov    esi,DWORD PTR [ebp+0x8]
  424559:	test   esi,esi
  42455b:	je     0x4245b5
  42455d:	cmp    DWORD PTR ds:0x460224,0x3
  424564:	jne    0x4245a6
  424566:	push   0x4
  424568:	call   0x423aff
  42456d:	pop    ecx
  42456e:	and    DWORD PTR [ebp-0x4],0x0
  424572:	push   esi
  424573:	call   0x424d22
  424578:	pop    ecx
  424579:	mov    DWORD PTR [ebp-0x1c],eax
  42457c:	test   eax,eax
  42457e:	je     0x424589
  424580:	push   esi
  424581:	push   eax
  424582:	call   0x424d4d
  424587:	pop    ecx
  424588:	pop    ecx
  424589:	or     DWORD PTR [ebp-0x4],0xffffffff
  42458d:	call   0x42459d
  424592:	cmp    DWORD PTR [ebp-0x1c],0x0
  424596:	jne    0x4245b5
  424598:	push   DWORD PTR [ebp+0x8]
  42459b:	jmp    0x4245a7
  42459d:	push   0x4
  42459f:	call   0x423a6b
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	push   esi
  4245a7:	push   0x0
  4245a9:	push   DWORD PTR ds:0x460220
  4245af:	call   DWORD PTR ds:0x4280c0
  4245b5:	call   0x42397b
  4245ba:	ret    
  4245bb:	push   0xc
  4245bd:	push   0x4285b0
  4245c2:	call   0x423940
  4245c7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ca:	cmp    DWORD PTR ds:0x460224,0x3
  4245d1:	jne    0x424601
  4245d3:	cmp    esi,DWORD PTR ds:0x45ffe4
  4245d9:	ja     0x424601
  4245db:	push   0x4
  4245dd:	call   0x423aff
  4245e2:	pop    ecx
  4245e3:	and    DWORD PTR [ebp-0x4],0x0
  4245e7:	push   esi
  4245e8:	call   0x425501
  4245ed:	pop    ecx
  4245ee:	mov    DWORD PTR [ebp-0x1c],eax
  4245f1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245f5:	call   0x42462d
  4245fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4245fd:	test   eax,eax
  4245ff:	jne    0x424624
  424601:	test   esi,esi
  424603:	jne    0x424606
  424605:	inc    esi
  424606:	cmp    DWORD PTR ds:0x460224,0x1
  42460d:	je     0x424615
  42460f:	add    esi,0xf
  424612:	and    esi,0xfffffff0
  424615:	push   esi
  424616:	push   0x0
  424618:	push   DWORD PTR ds:0x460220
  42461e:	call   DWORD PTR ds:0x4280d8
  424624:	call   0x42397b
  424629:	ret    
  42462a:	mov    esi,DWORD PTR [ebp+0x8]
  42462d:	push   0x4
  42462f:	call   0x423a6b
  424634:	pop    ecx
  424635:	ret    
  424636:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42463b:	ja     0x42465f
  42463d:	push   DWORD PTR [esp+0x4]
  424641:	call   0x4245bb
  424646:	test   eax,eax
  424648:	pop    ecx
  424649:	jne    0x424661
  42464b:	cmp    DWORD PTR [esp+0x8],eax
  42464f:	je     0x424661
  424651:	push   DWORD PTR [esp+0x4]
  424655:	call   0x426222
  42465a:	test   eax,eax
  42465c:	pop    ecx
  42465d:	jne    0x42463d
  42465f:	xor    eax,eax
  424661:	ret    
  424662:	push   DWORD PTR ds:0x45fea8
  424668:	push   DWORD PTR [esp+0x8]
  42466c:	call   0x424636
  424671:	pop    ecx
  424672:	pop    ecx
  424673:	ret    
  424674:	int3   
  424675:	int3   
  424676:	int3   
  424677:	int3   
  424678:	int3   
  424679:	int3   
  42467a:	int3   
  42467b:	int3   
  42467c:	int3   
  42467d:	int3   
  42467e:	int3   
  42467f:	int3   
  424680:	push   ebp
  424681:	mov    ebp,esp
  424683:	push   edi
  424684:	push   esi
  424685:	mov    esi,DWORD PTR [ebp+0xc]
  424688:	mov    ecx,DWORD PTR [ebp+0x10]
  42468b:	mov    edi,DWORD PTR [ebp+0x8]
  42468e:	mov    eax,ecx
  424690:	mov    edx,ecx
  424692:	add    eax,esi
  424694:	cmp    edi,esi
  424696:	jbe    0x4246a0
  424698:	cmp    edi,eax
  42469a:	jb     0x42481c
  4246a0:	test   edi,0x3
  4246a6:	jne    0x4246bc
  4246a8:	shr    ecx,0x2
  4246ab:	and    edx,0x3
  4246ae:	cmp    ecx,0x8
  4246b1:	jb     0x4246dc
  4246b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b5:	jmp    DWORD PTR [edx*4+0x4247cc]
  4246bc:	mov    eax,edi
  4246be:	mov    edx,0x3
  4246c3:	sub    ecx,0x4
  4246c6:	jb     0x4246d4
  4246c8:	and    eax,0x3
  4246cb:	add    ecx,eax
  4246cd:	jmp    DWORD PTR [eax*4+0x4246e0]
  4246d4:	jmp    DWORD PTR [ecx*4+0x4247dc]
  4246db:	nop
  4246dc:	jmp    DWORD PTR [ecx*4+0x424760]
  4246e3:	nop
  4246e4:	lock inc esi
  4246e6:	inc    edx
  4246e7:	add    BYTE PTR [edi+eax*2],bl
  4246ea:	inc    edx
  4246eb:	add    BYTE PTR [eax+0x47],al
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx],ah
  4246f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246f7:	inc    esi
  4246f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246fe:	add    al,cl
  424700:	jmp    0x289cf07
  424705:	add    esi,0x3
  424708:	add    edi,0x3
  42470b:	cmp    ecx,0x8
  42470e:	jb     0x4246dc
  424710:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424712:	jmp    DWORD PTR [edx*4+0x4247cc]
  424719:	lea    ecx,[ecx+0x0]
  42471c:	and    edx,ecx
  42471e:	mov    al,BYTE PTR [esi]
  424720:	mov    BYTE PTR [edi],al
  424722:	mov    al,BYTE PTR [esi+0x1]
  424725:	shr    ecx,0x2
  424728:	mov    BYTE PTR [edi+0x1],al
  42472b:	add    esi,0x2
  42472e:	add    edi,0x2
  424731:	cmp    ecx,0x8
  424734:	jb     0x4246dc
  424736:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424738:	jmp    DWORD PTR [edx*4+0x4247cc]
  42473f:	nop
  424740:	and    edx,ecx
  424742:	mov    al,BYTE PTR [esi]
  424744:	mov    BYTE PTR [edi],al
  424746:	add    esi,0x1
  424749:	shr    ecx,0x2
  42474c:	add    edi,0x1
  42474f:	cmp    ecx,0x8
  424752:	jb     0x4246dc
  424754:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424756:	jmp    DWORD PTR [edx*4+0x4247cc]
  42475d:	lea    ecx,[ecx+0x0]
  424760:	ret    
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax-0x57ffbdb9],dh
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424771:	inc    edi
  424772:	inc    edx
  424773:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424779:	inc    edi
  42477a:	inc    edx
  42477b:	add    BYTE PTR [eax-0x74ffbdb9],al
  424781:	inc    esp
  424782:	mov    fs,esp
  424784:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424794:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247b8:	lea    eax,[ecx*4+0x0]
  4247bf:	add    esi,eax
  4247c1:	add    edi,eax
  4247c3:	jmp    DWORD PTR [edx*4+0x4247cc]
  4247ca:	mov    edi,edi
  4247cc:	fadd   QWORD PTR [edi+0x42]
  4247cf:	add    ah,ah
  4247d1:	inc    edi
  4247d2:	inc    edx
  4247d3:	add    al,dh
  4247d5:	inc    edi
  4247d6:	inc    edx
  4247d7:	add    BYTE PTR [eax+ecx*2],al
  4247da:	inc    edx
  4247db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247e1:	leave  
  4247e2:	ret    
  4247e3:	nop
  4247e4:	mov    al,BYTE PTR [esi]
  4247e6:	mov    BYTE PTR [edi],al
  4247e8:	mov    eax,DWORD PTR [ebp+0x8]
  4247eb:	pop    esi
  4247ec:	pop    edi
  4247ed:	leave  
  4247ee:	ret    
  4247ef:	nop
  4247f0:	mov    al,BYTE PTR [esi]
  4247f2:	mov    BYTE PTR [edi],al
  4247f4:	mov    al,BYTE PTR [esi+0x1]
  4247f7:	mov    BYTE PTR [edi+0x1],al
  4247fa:	mov    eax,DWORD PTR [ebp+0x8]
  4247fd:	pop    esi
  4247fe:	pop    edi
  4247ff:	leave  
  424800:	ret    
  424801:	lea    ecx,[ecx+0x0]
  424804:	mov    al,BYTE PTR [esi]
  424806:	mov    BYTE PTR [edi],al
  424808:	mov    al,BYTE PTR [esi+0x1]
  42480b:	mov    BYTE PTR [edi+0x1],al
  42480e:	mov    al,BYTE PTR [esi+0x2]
  424811:	mov    BYTE PTR [edi+0x2],al
  424814:	mov    eax,DWORD PTR [ebp+0x8]
  424817:	pop    esi
  424818:	pop    edi
  424819:	leave  
  42481a:	ret    
  42481b:	nop
  42481c:	lea    esi,[ecx+esi*1-0x4]
  424820:	lea    edi,[ecx+edi*1-0x4]
  424824:	test   edi,0x3
  42482a:	jne    0x424850
  42482c:	shr    ecx,0x2
  42482f:	and    edx,0x3
  424832:	cmp    ecx,0x8
  424835:	jb     0x424844
  424837:	std    
  424838:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483a:	cld    
  42483b:	jmp    DWORD PTR [edx*4+0x424968]
  424842:	mov    edi,edi
  424844:	neg    ecx
  424846:	jmp    DWORD PTR [ecx*4+0x424918]
  42484d:	lea    ecx,[ecx+0x0]
  424850:	mov    eax,edi
  424852:	mov    edx,0x3
  424857:	cmp    ecx,0x4
  42485a:	jb     0x424868
  42485c:	and    eax,0x3
  42485f:	sub    ecx,eax
  424861:	jmp    DWORD PTR [eax*4+0x42486c]
  424868:	jmp    DWORD PTR [ecx*4+0x424968]
  42486f:	nop
  424870:	jl     0x4248ba
  424872:	inc    edx
  424873:	add    BYTE PTR [eax-0x37ffbdb8],ah
  424879:	dec    eax
  42487a:	inc    edx
  42487b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424881:	mov    BYTE PTR [edi+0x3],al
  424884:	sub    esi,0x1
  424887:	shr    ecx,0x2
  42488a:	sub    edi,0x1
  42488d:	cmp    ecx,0x8
  424890:	jb     0x424844
  424892:	std    
  424893:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424895:	cld    
  424896:	jmp    DWORD PTR [edx*4+0x424968]
  42489d:	lea    ecx,[ecx+0x0]
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	and    edx,ecx
  4248a5:	mov    BYTE PTR [edi+0x3],al
  4248a8:	mov    al,BYTE PTR [esi+0x2]
  4248ab:	shr    ecx,0x2
  4248ae:	mov    BYTE PTR [edi+0x2],al
  4248b1:	sub    esi,0x2
  4248b4:	sub    edi,0x2
  4248b7:	cmp    ecx,0x8
  4248ba:	jb     0x424844
  4248bc:	std    
  4248bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248bf:	cld    
  4248c0:	jmp    DWORD PTR [edx*4+0x424968]
  4248c7:	nop
  4248c8:	mov    al,BYTE PTR [esi+0x3]
  4248cb:	and    edx,ecx
  4248cd:	mov    BYTE PTR [edi+0x3],al
  4248d0:	mov    al,BYTE PTR [esi+0x2]
  4248d3:	mov    BYTE PTR [edi+0x2],al
  4248d6:	mov    al,BYTE PTR [esi+0x1]
  4248d9:	shr    ecx,0x2
  4248dc:	mov    BYTE PTR [edi+0x1],al
  4248df:	sub    esi,0x3
  4248e2:	sub    edi,0x3
  4248e5:	cmp    ecx,0x8
  4248e8:	jb     0x424844
  4248ee:	std    
  4248ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248f1:	cld    
  4248f2:	jmp    DWORD PTR [edx*4+0x424968]
  4248f9:	lea    ecx,[ecx+0x0]
  4248fc:	sbb    al,0x49
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],ah
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],ch
  424906:	inc    edx
  424907:	add    BYTE PTR [ecx+ecx*2],dh
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ecx+ecx*2],bh
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2+0x42],al
  424913:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  424917:	add    BYTE PTR [edi+0x49],bl
  42491a:	inc    edx
  42491b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424921:	inc    esp
  424922:	(bad)  
  424923:	sbb    al,0x8b
  424925:	inc    esp
  424926:	mov    ds,WORD PTR [eax]
  424928:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424930:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424938:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424940:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424948:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424950:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424954:	lea    eax,[ecx*4+0x0]
  42495b:	add    esi,eax
  42495d:	add    edi,eax
  42495f:	jmp    DWORD PTR [edx*4+0x424968]
  424966:	mov    edi,edi
  424968:	js     0x4249b3
  42496a:	inc    edx
  42496b:	add    BYTE PTR [eax-0x6fffbdb7],al
  424971:	dec    ecx
  424972:	inc    edx
  424973:	add    BYTE PTR [ecx+ecx*2+0x458b0042],ah
  42497a:	or     BYTE PTR [esi+0x5f],bl
  42497d:	leave  
  42497e:	ret    
  42497f:	nop
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    eax,DWORD PTR [ebp+0x8]
  424989:	pop    esi
  42498a:	pop    edi
  42498b:	leave  
  42498c:	ret    
  42498d:	lea    ecx,[ecx+0x0]
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    al,BYTE PTR [esi+0x2]
  424999:	mov    BYTE PTR [edi+0x2],al
  42499c:	mov    eax,DWORD PTR [ebp+0x8]
  42499f:	pop    esi
  4249a0:	pop    edi
  4249a1:	leave  
  4249a2:	ret    
  4249a3:	nop
  4249a4:	mov    al,BYTE PTR [esi+0x3]
  4249a7:	mov    BYTE PTR [edi+0x3],al
  4249aa:	mov    al,BYTE PTR [esi+0x2]
  4249ad:	mov    BYTE PTR [edi+0x2],al
  4249b0:	mov    al,BYTE PTR [esi+0x1]
  4249b3:	mov    BYTE PTR [edi+0x1],al
  4249b6:	mov    eax,DWORD PTR [ebp+0x8]
  4249b9:	pop    esi
  4249ba:	pop    edi
  4249bb:	leave  
  4249bc:	ret    
  4249bd:	push   DWORD PTR [esp+0x4]
  4249c1:	call   DWORD PTR ds:0x4280dc
  4249c7:	xor    eax,eax
  4249c9:	inc    eax
  4249ca:	ret    0x8
  4249cd:	push   0x10
  4249cf:	push   0x4285f8
  4249d4:	call   0x423940
  4249d9:	mov    eax,ds:0x45fe68
  4249de:	test   eax,eax
  4249e0:	jne    0x424a19
  4249e2:	cmp    DWORD PTR ds:0x45fba4,0x1
  4249e9:	je     0x424a0f
  4249eb:	push   0x4285e4
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	test   eax,eax
  4249f8:	je     0x424a0f
  4249fa:	push   0x4285bc
  4249ff:	push   eax
  424a00:	call   DWORD PTR ds:0x428010
  424a06:	mov    ds:0x45fe68,eax
  424a0b:	test   eax,eax
  424a0d:	jne    0x424a19
  424a0f:	mov    eax,0x4249bd
  424a14:	mov    ds:0x45fe68,eax
  424a19:	and    DWORD PTR [ebp-0x4],0x0
  424a1d:	push   DWORD PTR [ebp+0xc]
  424a20:	push   DWORD PTR [ebp+0x8]
  424a23:	call   eax
  424a25:	mov    DWORD PTR [ebp-0x1c],eax
  424a28:	jmp    0x424a4e
  424a2a:	mov    eax,DWORD PTR [ebp-0x14]
  424a2d:	mov    eax,DWORD PTR [eax]
  424a2f:	mov    eax,DWORD PTR [eax]
  424a31:	mov    DWORD PTR [ebp-0x20],eax
  424a34:	xor    eax,eax
  424a36:	inc    eax
  424a37:	ret    
  424a38:	mov    esp,DWORD PTR [ebp-0x18]
  424a3b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a42:	jne    0x424a4c
  424a44:	push   0x8
  424a46:	call   DWORD PTR ds:0x4280a0
  424a4c:	xor    eax,eax
  424a4e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a52:	call   0x42397b
  424a57:	ret    
  424a58:	push   0x10
  424a5a:	push   0x428608
  424a5f:	call   0x423940
  424a64:	mov    esi,DWORD PTR [ebp+0x8]
  424a67:	imul   esi,DWORD PTR [ebp+0xc]
  424a6b:	mov    DWORD PTR [ebp-0x1c],esi
  424a6e:	test   esi,esi
  424a70:	jne    0x424a73
  424a72:	inc    esi
  424a73:	xor    edi,edi
  424a75:	mov    DWORD PTR [ebp-0x20],edi
  424a78:	cmp    esi,0xffffffe0
  424a7b:	ja     0x424ae2
  424a7d:	cmp    DWORD PTR ds:0x460224,0x3
  424a84:	jne    0x424acd
  424a86:	add    esi,0xf
  424a89:	and    esi,0xfffffff0
  424a8c:	mov    DWORD PTR [ebp+0xc],esi
  424a8f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a92:	cmp    ebx,DWORD PTR ds:0x45ffe4
  424a98:	ja     0x424acd
  424a9a:	push   0x4
  424a9c:	call   0x423aff
  424aa1:	pop    ecx
  424aa2:	and    DWORD PTR [ebp-0x4],edi
  424aa5:	push   ebx
  424aa6:	call   0x425501
  424aab:	pop    ecx
  424aac:	mov    DWORD PTR [ebp-0x20],eax
  424aaf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ab3:	call   0x424b02
  424ab8:	mov    edi,DWORD PTR [ebp-0x20]
  424abb:	test   edi,edi
  424abd:	je     0x424ad1
  424abf:	push   DWORD PTR [ebp-0x1c]
  424ac2:	push   0x0
  424ac4:	push   edi
  424ac5:	call   0x426240
  424aca:	add    esp,0xc
  424acd:	test   edi,edi
  424acf:	jne    0x424b0b
  424ad1:	push   esi
  424ad2:	push   0x8
  424ad4:	push   DWORD PTR ds:0x460220
  424ada:	call   DWORD PTR ds:0x4280d8
  424ae0:	mov    edi,eax
  424ae2:	test   edi,edi
  424ae4:	jne    0x424b0b
  424ae6:	cmp    DWORD PTR ds:0x45fea8,edi
  424aec:	je     0x424b0b
  424aee:	push   esi
  424aef:	call   0x426222
  424af4:	pop    ecx
  424af5:	test   eax,eax
  424af7:	jne    0x424a73
  424afd:	jmp    0x424b0d
  424aff:	mov    esi,DWORD PTR [ebp+0xc]
  424b02:	push   0x4
  424b04:	call   0x423a6b
  424b09:	pop    ecx
  424b0a:	ret    
  424b0b:	mov    eax,edi
  424b0d:	call   0x42397b
  424b12:	ret    
  424b13:	push   esi
  424b14:	mov    esi,DWORD PTR [esp+0x8]
  424b18:	mov    eax,DWORD PTR [esi+0x3c]
  424b1b:	push   edi
  424b1c:	xor    edi,edi
  424b1e:	cmp    eax,DWORD PTR ds:0x45feb4
  424b24:	je     0x424b89
  424b26:	cmp    eax,edi
  424b28:	je     0x424b89
  424b2a:	mov    eax,DWORD PTR [esi+0x2c]
  424b2d:	cmp    DWORD PTR [eax],edi
  424b2f:	jne    0x424b89
  424b31:	mov    eax,DWORD PTR [esi+0x34]
  424b34:	cmp    eax,edi
  424b36:	je     0x424b54
  424b38:	cmp    DWORD PTR [eax],edi
  424b3a:	jne    0x424b54
  424b3c:	cmp    eax,DWORD PTR ds:0x45ffd0
  424b42:	je     0x424b54
  424b44:	push   eax
  424b45:	call   0x42454a
  424b4a:	push   DWORD PTR [esi+0x3c]
  424b4d:	call   0x42648f
  424b52:	pop    ecx
  424b53:	pop    ecx
  424b54:	mov    eax,DWORD PTR [esi+0x30]
  424b57:	cmp    eax,edi
  424b59:	je     0x424b77
  424b5b:	cmp    DWORD PTR [eax],edi
  424b5d:	jne    0x424b77
  424b5f:	cmp    eax,DWORD PTR ds:0x45ffd4
  424b65:	je     0x424b77
  424b67:	push   eax
  424b68:	call   0x42454a
  424b6d:	push   DWORD PTR [esi+0x3c]
  424b70:	call   0x426430
  424b75:	pop    ecx
  424b76:	pop    ecx
  424b77:	push   DWORD PTR [esi+0x2c]
  424b7a:	call   0x42454a
  424b7f:	push   DWORD PTR [esi+0x3c]
  424b82:	call   0x42454a
  424b87:	pop    ecx
  424b88:	pop    ecx
  424b89:	mov    eax,DWORD PTR [esi+0x40]
  424b8c:	cmp    eax,DWORD PTR ds:0x45ffcc
  424b92:	je     0x424bac
  424b94:	cmp    eax,edi
  424b96:	je     0x424bac
  424b98:	cmp    DWORD PTR [eax],edi
  424b9a:	jne    0x424bac
  424b9c:	push   eax
  424b9d:	call   0x42454a
  424ba2:	push   DWORD PTR [esi+0x44]
  424ba5:	call   0x42454a
  424baa:	pop    ecx
  424bab:	pop    ecx
  424bac:	mov    eax,DWORD PTR [esi+0x50]
  424baf:	cmp    eax,DWORD PTR ds:0x45feb0
  424bb5:	je     0x424bd3
  424bb7:	cmp    eax,edi
  424bb9:	je     0x424bd3
  424bbb:	cmp    DWORD PTR [eax+0xb4],edi
  424bc1:	jne    0x424bd3
  424bc3:	push   eax
  424bc4:	call   0x4262a0
  424bc9:	push   DWORD PTR [esi+0x50]
  424bcc:	call   0x42454a
  424bd1:	pop    ecx
  424bd2:	pop    ecx
  424bd3:	push   esi
  424bd4:	call   0x42454a
  424bd9:	pop    ecx
  424bda:	pop    edi
  424bdb:	pop    esi
  424bdc:	ret    
  424bdd:	push   esi
  424bde:	call   0x4237f3
  424be3:	mov    esi,eax
  424be5:	mov    eax,DWORD PTR [esi+0x64]
  424be8:	cmp    eax,DWORD PTR ds:0x45f66c
  424bee:	je     0x424c9a
  424bf4:	test   eax,eax
  424bf6:	je     0x424c27
  424bf8:	mov    ecx,DWORD PTR [eax+0x2c]
  424bfb:	dec    DWORD PTR [eax]
  424bfd:	test   ecx,ecx
  424bff:	je     0x424c03
  424c01:	dec    DWORD PTR [ecx]
  424c03:	mov    ecx,DWORD PTR [eax+0x34]
  424c06:	test   ecx,ecx
  424c08:	je     0x424c0c
  424c0a:	dec    DWORD PTR [ecx]
  424c0c:	mov    ecx,DWORD PTR [eax+0x30]
  424c0f:	test   ecx,ecx
  424c11:	je     0x424c15
  424c13:	dec    DWORD PTR [ecx]
  424c15:	mov    ecx,DWORD PTR [eax+0x40]
  424c18:	test   ecx,ecx
  424c1a:	je     0x424c1e
  424c1c:	dec    DWORD PTR [ecx]
  424c1e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c21:	dec    DWORD PTR [ecx+0xb4]
  424c27:	mov    ecx,DWORD PTR ds:0x45f66c
  424c2d:	mov    DWORD PTR [esi+0x64],ecx
  424c30:	mov    ecx,DWORD PTR ds:0x45f66c
  424c36:	inc    DWORD PTR [ecx]
  424c38:	mov    ecx,DWORD PTR ds:0x45f66c
  424c3e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c41:	test   ecx,ecx
  424c43:	je     0x424c47
  424c45:	inc    DWORD PTR [ecx]
  424c47:	mov    ecx,DWORD PTR ds:0x45f66c
  424c4d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c50:	test   ecx,ecx
  424c52:	je     0x424c56
  424c54:	inc    DWORD PTR [ecx]
  424c56:	mov    ecx,DWORD PTR ds:0x45f66c
  424c5c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c5f:	test   ecx,ecx
  424c61:	je     0x424c65
  424c63:	inc    DWORD PTR [ecx]
  424c65:	mov    ecx,DWORD PTR ds:0x45f66c
  424c6b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c6e:	test   ecx,ecx
  424c70:	je     0x424c74
  424c72:	inc    DWORD PTR [ecx]
  424c74:	mov    ecx,DWORD PTR ds:0x45f66c
  424c7a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c7d:	inc    DWORD PTR [ecx+0xb4]
  424c83:	test   eax,eax
  424c85:	je     0x424c9a
  424c87:	cmp    DWORD PTR [eax],0x0
  424c8a:	jne    0x424c9a
  424c8c:	cmp    eax,0x45f618
  424c91:	je     0x424c9a
  424c93:	push   eax
  424c94:	call   0x424b13
  424c99:	pop    ecx
  424c9a:	mov    eax,DWORD PTR [esi+0x64]
  424c9d:	pop    esi
  424c9e:	ret    
  424c9f:	push   0xc
  424ca1:	push   0x428798
  424ca6:	call   0x423940
  424cab:	push   0xc
  424cad:	call   0x423aff
  424cb2:	pop    ecx
  424cb3:	and    DWORD PTR [ebp-0x4],0x0
  424cb7:	call   0x424bdd
  424cbc:	mov    DWORD PTR [ebp-0x1c],eax
  424cbf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cc3:	call   0x424cd1
  424cc8:	mov    eax,DWORD PTR [ebp-0x1c]
  424ccb:	call   0x42397b
  424cd0:	ret    
  424cd1:	push   0xc
  424cd3:	call   0x423a6b
  424cd8:	pop    ecx
  424cd9:	ret    
  424cda:	push   0x140
  424cdf:	push   0x0
  424ce1:	push   DWORD PTR ds:0x460220
  424ce7:	call   DWORD PTR ds:0x4280d8
  424ced:	test   eax,eax
  424cef:	mov    ds:0x45ffe0,eax
  424cf4:	jne    0x424cf7
  424cf6:	ret    
  424cf7:	mov    ecx,DWORD PTR [esp+0x4]
  424cfb:	and    DWORD PTR ds:0x45ffd8,0x0
  424d02:	and    DWORD PTR ds:0x45ffdc,0x0
  424d09:	mov    ds:0x45ffe8,eax
  424d0e:	xor    eax,eax
  424d10:	mov    DWORD PTR ds:0x45ffe4,ecx
  424d16:	mov    DWORD PTR ds:0x45ffec,0x10
  424d20:	inc    eax
  424d21:	ret    
  424d22:	mov    eax,ds:0x45ffdc
  424d27:	lea    ecx,[eax+eax*4]
  424d2a:	mov    eax,ds:0x45ffe0
  424d2f:	lea    ecx,[eax+ecx*4]
  424d32:	jmp    0x424d46
  424d34:	mov    edx,DWORD PTR [esp+0x4]
  424d38:	sub    edx,DWORD PTR [eax+0xc]
  424d3b:	cmp    edx,0x100000
  424d41:	jb     0x424d4c
  424d43:	add    eax,0x14
  424d46:	cmp    eax,ecx
  424d48:	jb     0x424d34
  424d4a:	xor    eax,eax
  424d4c:	ret    
  424d4d:	push   ebp
  424d4e:	mov    ebp,esp
  424d50:	sub    esp,0x10
  424d53:	mov    ecx,DWORD PTR [ebp+0x8]
  424d56:	mov    eax,DWORD PTR [ecx+0x10]
  424d59:	push   esi
  424d5a:	mov    esi,DWORD PTR [ebp+0xc]
  424d5d:	push   edi
  424d5e:	mov    edi,esi
  424d60:	sub    edi,DWORD PTR [ecx+0xc]
  424d63:	add    esi,0xfffffffc
  424d66:	shr    edi,0xf
  424d69:	mov    ecx,edi
  424d6b:	imul   ecx,ecx,0x204
  424d71:	lea    ecx,[ecx+eax*1+0x144]
  424d78:	mov    DWORD PTR [ebp-0x10],ecx
  424d7b:	mov    ecx,DWORD PTR [esi]
  424d7d:	dec    ecx
  424d7e:	test   cl,0x1
  424d81:	mov    DWORD PTR [ebp-0x4],ecx
  424d84:	jne    0x425061
  424d8a:	push   ebx
  424d8b:	lea    ebx,[ecx+esi*1]
  424d8e:	mov    edx,DWORD PTR [ebx]
  424d90:	mov    DWORD PTR [ebp-0xc],edx
  424d93:	mov    edx,DWORD PTR [esi-0x4]
  424d96:	mov    DWORD PTR [ebp-0x8],edx
  424d99:	mov    edx,DWORD PTR [ebp-0xc]
  424d9c:	test   dl,0x1
  424d9f:	mov    DWORD PTR [ebp+0xc],ebx
  424da2:	jne    0x424e18
  424da4:	sar    edx,0x4
  424da7:	dec    edx
  424da8:	cmp    edx,0x3f
  424dab:	jbe    0x424db0
  424dad:	push   0x3f
  424daf:	pop    edx
  424db0:	mov    ecx,DWORD PTR [ebx+0x4]
  424db3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424db6:	jne    0x424dfa
  424db8:	cmp    edx,0x20
  424dbb:	mov    ebx,0x80000000
  424dc0:	jae    0x424ddb
  424dc2:	mov    ecx,edx
  424dc4:	shr    ebx,cl
  424dc6:	lea    ecx,[edx+eax*1+0x4]
  424dca:	not    ebx
  424dcc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dd0:	dec    BYTE PTR [ecx]
  424dd2:	jne    0x424df7
  424dd4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dd7:	and    DWORD PTR [ecx],ebx
  424dd9:	jmp    0x424df7
  424ddb:	lea    ecx,[edx-0x20]
  424dde:	shr    ebx,cl
  424de0:	lea    ecx,[edx+eax*1+0x4]
  424de4:	not    ebx
  424de6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ded:	dec    BYTE PTR [ecx]
  424def:	jne    0x424df7
  424df1:	mov    ecx,DWORD PTR [ebp+0x8]
  424df4:	and    DWORD PTR [ecx+0x4],ebx
  424df7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dfa:	mov    edx,DWORD PTR [ebx+0x8]
  424dfd:	mov    ebx,DWORD PTR [ebx+0x4]
  424e00:	mov    ecx,DWORD PTR [ebp-0x4]
  424e03:	add    ecx,DWORD PTR [ebp-0xc]
  424e06:	mov    DWORD PTR [edx+0x4],ebx
  424e09:	mov    edx,DWORD PTR [ebp+0xc]
  424e0c:	mov    ebx,DWORD PTR [edx+0x4]
  424e0f:	mov    edx,DWORD PTR [edx+0x8]
  424e12:	mov    DWORD PTR [ebx+0x8],edx
  424e15:	mov    DWORD PTR [ebp-0x4],ecx
  424e18:	mov    edx,ecx
  424e1a:	sar    edx,0x4
  424e1d:	dec    edx
  424e1e:	cmp    edx,0x3f
  424e21:	jbe    0x424e26
  424e23:	push   0x3f
  424e25:	pop    edx
  424e26:	mov    ebx,DWORD PTR [ebp-0x8]
  424e29:	and    ebx,0x1
  424e2c:	mov    DWORD PTR [ebp-0xc],ebx
  424e2f:	jne    0x424ec4
  424e35:	sub    esi,DWORD PTR [ebp-0x8]
  424e38:	mov    ebx,DWORD PTR [ebp-0x8]
  424e3b:	sar    ebx,0x4
  424e3e:	push   0x3f
  424e40:	mov    DWORD PTR [ebp+0xc],esi
  424e43:	dec    ebx
  424e44:	pop    esi
  424e45:	cmp    ebx,esi
  424e47:	jbe    0x424e4b
  424e49:	mov    ebx,esi
  424e4b:	add    ecx,DWORD PTR [ebp-0x8]
  424e4e:	mov    edx,ecx
  424e50:	sar    edx,0x4
  424e53:	dec    edx
  424e54:	cmp    edx,esi
  424e56:	mov    DWORD PTR [ebp-0x4],ecx
  424e59:	jbe    0x424e5d
  424e5b:	mov    edx,esi
  424e5d:	cmp    ebx,edx
  424e5f:	je     0x424ebf
  424e61:	mov    ecx,DWORD PTR [ebp+0xc]
  424e64:	mov    esi,DWORD PTR [ecx+0x4]
  424e67:	cmp    esi,DWORD PTR [ecx+0x8]
  424e6a:	jne    0x424ea7
  424e6c:	cmp    ebx,0x20
  424e6f:	mov    esi,0x80000000
  424e74:	jae    0x424e8d
  424e76:	mov    ecx,ebx
  424e78:	shr    esi,cl
  424e7a:	not    esi
  424e7c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e80:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e84:	jne    0x424ea7
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	and    DWORD PTR [ecx],esi
  424e8b:	jmp    0x424ea7
  424e8d:	lea    ecx,[ebx-0x20]
  424e90:	shr    esi,cl
  424e92:	not    esi
  424e94:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e9b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e9f:	jne    0x424ea7
  424ea1:	mov    ecx,DWORD PTR [ebp+0x8]
  424ea4:	and    DWORD PTR [ecx+0x4],esi
  424ea7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eaa:	mov    esi,DWORD PTR [ecx+0x8]
  424ead:	mov    ecx,DWORD PTR [ecx+0x4]
  424eb0:	mov    DWORD PTR [esi+0x4],ecx
  424eb3:	mov    ecx,DWORD PTR [ebp+0xc]
  424eb6:	mov    esi,DWORD PTR [ecx+0x4]
  424eb9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ebc:	mov    DWORD PTR [esi+0x8],ecx
  424ebf:	mov    esi,DWORD PTR [ebp+0xc]
  424ec2:	jmp    0x424ec7
  424ec4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ec7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ecb:	jne    0x424ed5
  424ecd:	cmp    ebx,edx
  424ecf:	je     0x424f55
  424ed5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ed8:	lea    ecx,[ecx+edx*8]
  424edb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ede:	mov    DWORD PTR [esi+0x8],ecx
  424ee1:	mov    DWORD PTR [esi+0x4],ebx
  424ee4:	mov    DWORD PTR [ecx+0x4],esi
  424ee7:	mov    ecx,DWORD PTR [esi+0x4]
  424eea:	mov    DWORD PTR [ecx+0x8],esi
  424eed:	mov    ecx,DWORD PTR [esi+0x4]
  424ef0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ef3:	jne    0x424f55
  424ef5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ef9:	mov    BYTE PTR [ebp+0xf],cl
  424efc:	inc    cl
  424efe:	cmp    edx,0x20
  424f01:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f05:	jae    0x424f2c
  424f07:	cmp    BYTE PTR [ebp+0xf],0x0
  424f0b:	jne    0x424f1b
  424f0d:	mov    ecx,edx
  424f0f:	mov    ebx,0x80000000
  424f14:	shr    ebx,cl
  424f16:	mov    ecx,DWORD PTR [ebp+0x8]
  424f19:	or     DWORD PTR [ecx],ebx
  424f1b:	mov    ebx,0x80000000
  424f20:	mov    ecx,edx
  424f22:	shr    ebx,cl
  424f24:	lea    eax,[eax+edi*4+0x44]
  424f28:	or     DWORD PTR [eax],ebx
  424f2a:	jmp    0x424f55
  424f2c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f30:	jne    0x424f42
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    ebx,0x80000000
  424f3a:	shr    ebx,cl
  424f3c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f3f:	or     DWORD PTR [ecx+0x4],ebx
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    edx,0x80000000
  424f4a:	shr    edx,cl
  424f4c:	lea    eax,[eax+edi*4+0xc4]
  424f53:	or     DWORD PTR [eax],edx
  424f55:	mov    eax,DWORD PTR [ebp-0x4]
  424f58:	mov    DWORD PTR [esi],eax
  424f5a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f5e:	mov    eax,DWORD PTR [ebp-0x10]
  424f61:	dec    DWORD PTR [eax]
  424f63:	jne    0x425060
  424f69:	mov    eax,ds:0x45ffd8
  424f6e:	test   eax,eax
  424f70:	je     0x425052
  424f76:	mov    ecx,DWORD PTR ds:0x45fff0
  424f7c:	mov    esi,DWORD PTR ds:0x4280bc
  424f82:	push   0x4000
  424f87:	shl    ecx,0xf
  424f8a:	add    ecx,DWORD PTR [eax+0xc]
  424f8d:	mov    ebx,0x8000
  424f92:	push   ebx
  424f93:	push   ecx
  424f94:	call   esi
  424f96:	mov    ecx,DWORD PTR ds:0x45fff0
  424f9c:	mov    eax,ds:0x45ffd8
  424fa1:	mov    edx,0x80000000
  424fa6:	shr    edx,cl
  424fa8:	or     DWORD PTR [eax+0x8],edx
  424fab:	mov    eax,ds:0x45ffd8
  424fb0:	mov    eax,DWORD PTR [eax+0x10]
  424fb3:	mov    ecx,DWORD PTR ds:0x45fff0
  424fb9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fc1:	mov    eax,ds:0x45ffd8
  424fc6:	mov    eax,DWORD PTR [eax+0x10]
  424fc9:	dec    BYTE PTR [eax+0x43]
  424fcc:	mov    eax,ds:0x45ffd8
  424fd1:	mov    ecx,DWORD PTR [eax+0x10]
  424fd4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fd8:	jne    0x424fe3
  424fda:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fde:	mov    eax,ds:0x45ffd8
  424fe3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fe7:	jne    0x425052
  424fe9:	push   ebx
  424fea:	push   0x0
  424fec:	push   DWORD PTR [eax+0xc]
  424fef:	call   esi
  424ff1:	mov    eax,ds:0x45ffd8
  424ff6:	push   DWORD PTR [eax+0x10]
  424ff9:	push   0x0
  424ffb:	push   DWORD PTR ds:0x460220
  425001:	call   DWORD PTR ds:0x4280c0
  425007:	mov    eax,ds:0x45ffdc
  42500c:	mov    edx,DWORD PTR ds:0x45ffe0
  425012:	lea    eax,[eax+eax*4]
  425015:	shl    eax,0x2
  425018:	mov    ecx,eax
  42501a:	mov    eax,ds:0x45ffd8
  42501f:	sub    ecx,eax
  425021:	lea    ecx,[ecx+edx*1-0x14]
  425025:	push   ecx
  425026:	lea    ecx,[eax+0x14]
  425029:	push   ecx
  42502a:	push   eax
  42502b:	call   0x426880
  425030:	mov    eax,DWORD PTR [ebp+0x8]
  425033:	add    esp,0xc
  425036:	dec    DWORD PTR ds:0x45ffdc
  42503c:	cmp    eax,DWORD PTR ds:0x45ffd8
  425042:	jbe    0x425048
  425044:	sub    DWORD PTR [ebp+0x8],0x14
  425048:	mov    eax,ds:0x45ffe0
  42504d:	mov    ds:0x45ffe8,eax
  425052:	mov    eax,DWORD PTR [ebp+0x8]
  425055:	mov    ds:0x45ffd8,eax
  42505a:	mov    DWORD PTR ds:0x45fff0,edi
  425060:	pop    ebx
  425061:	pop    edi
  425062:	pop    esi
  425063:	leave  
  425064:	ret    
  425065:	mov    eax,ds:0x45ffdc
  42506a:	mov    ecx,DWORD PTR ds:0x45ffec
  425070:	push   edi
  425071:	xor    edi,edi
  425073:	cmp    eax,ecx
  425075:	jne    0x4250ab
  425077:	lea    eax,[ecx+ecx*4+0x50]
  42507b:	shl    eax,0x2
  42507e:	push   eax
  42507f:	push   DWORD PTR ds:0x45ffe0
  425085:	push   edi
  425086:	push   DWORD PTR ds:0x460220
  42508c:	call   DWORD PTR ds:0x4280e0
  425092:	cmp    eax,edi
  425094:	jne    0x42509a
  425096:	xor    eax,eax
  425098:	pop    edi
  425099:	ret    
  42509a:	add    DWORD PTR ds:0x45ffec,0x10
  4250a1:	mov    ds:0x45ffe0,eax
  4250a6:	mov    eax,ds:0x45ffdc
  4250ab:	mov    ecx,DWORD PTR ds:0x45ffe0
  4250b1:	push   esi
  4250b2:	push   0x41c4
  4250b7:	push   0x8
  4250b9:	push   DWORD PTR ds:0x460220
  4250bf:	lea    eax,[eax+eax*4]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	call   DWORD PTR ds:0x4280d8
  4250cb:	cmp    eax,edi
  4250cd:	mov    DWORD PTR [esi+0x10],eax
  4250d0:	jne    0x4250d6
  4250d2:	xor    eax,eax
  4250d4:	jmp    0x425119
  4250d6:	push   0x4
  4250d8:	push   0x2000
  4250dd:	push   0x100000
  4250e2:	push   edi
  4250e3:	call   DWORD PTR ds:0x42802c
  4250e9:	cmp    eax,edi
  4250eb:	mov    DWORD PTR [esi+0xc],eax
  4250ee:	jne    0x425102
  4250f0:	push   DWORD PTR [esi+0x10]
  4250f3:	push   edi
  4250f4:	push   DWORD PTR ds:0x460220
  4250fa:	call   DWORD PTR ds:0x4280c0
  425100:	jmp    0x4250d2
  425102:	or     DWORD PTR [esi+0x8],0xffffffff
  425106:	mov    DWORD PTR [esi],edi
  425108:	mov    DWORD PTR [esi+0x4],edi
  42510b:	inc    DWORD PTR ds:0x45ffdc
  425111:	mov    eax,DWORD PTR [esi+0x10]
  425114:	or     DWORD PTR [eax],0xffffffff
  425117:	mov    eax,esi
  425119:	pop    esi
  42511a:	pop    edi
  42511b:	ret    
  42511c:	push   ebp
  42511d:	mov    ebp,esp
  42511f:	push   ecx
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp+0x8]
  425124:	mov    eax,DWORD PTR [ecx+0x8]
  425127:	push   ebx
  425128:	push   esi
  425129:	mov    esi,DWORD PTR [ecx+0x10]
  42512c:	push   edi
  42512d:	xor    ebx,ebx
  42512f:	jmp    0x425134
  425131:	shl    eax,1
  425133:	inc    ebx
  425134:	test   eax,eax
  425136:	jge    0x425131
  425138:	mov    eax,ebx
  42513a:	imul   eax,eax,0x204
  425140:	lea    eax,[eax+esi*1+0x144]
  425147:	push   0x3f
  425149:	mov    DWORD PTR [ebp-0x8],eax
  42514c:	pop    edx
  42514d:	mov    DWORD PTR [eax+0x8],eax
  425150:	mov    DWORD PTR [eax+0x4],eax
  425153:	add    eax,0x8
  425156:	dec    edx
  425157:	jne    0x42514d
  425159:	push   0x4
  42515b:	mov    edi,ebx
  42515d:	push   0x1000
  425162:	shl    edi,0xf
  425165:	add    edi,DWORD PTR [ecx+0xc]
  425168:	push   0x8000
  42516d:	push   edi
  42516e:	call   DWORD PTR ds:0x42802c
  425174:	test   eax,eax
  425176:	jne    0x425180
  425178:	or     eax,0xffffffff
  42517b:	jmp    0x42521d
  425180:	lea    edx,[edi+0x7000]
  425186:	cmp    edi,edx
  425188:	mov    DWORD PTR [ebp-0x4],edx
  42518b:	ja     0x4251d0
  42518d:	mov    ecx,edx
  42518f:	sub    ecx,edi
  425191:	shr    ecx,0xc
  425194:	lea    eax,[edi+0x10]
  425197:	inc    ecx
  425198:	or     DWORD PTR [eax-0x8],0xffffffff
  42519c:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251a3:	lea    edx,[eax+0xffc]
  4251a9:	mov    DWORD PTR [eax],edx
  4251ab:	lea    edx,[eax-0x1004]
  4251b1:	mov    DWORD PTR [eax-0x4],0xff0
  4251b8:	mov    DWORD PTR [eax+0x4],edx
  4251bb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251c5:	add    eax,0x1000
  4251ca:	dec    ecx
  4251cb:	jne    0x425198
  4251cd:	mov    edx,DWORD PTR [ebp-0x4]
  4251d0:	mov    eax,DWORD PTR [ebp-0x8]
  4251d3:	add    eax,0x1f8
  4251d8:	lea    ecx,[edi+0xc]
  4251db:	mov    DWORD PTR [eax+0x4],ecx
  4251de:	mov    DWORD PTR [ecx+0x8],eax
  4251e1:	lea    ecx,[edx+0xc]
  4251e4:	mov    DWORD PTR [eax+0x8],ecx
  4251e7:	mov    DWORD PTR [ecx+0x4],eax
  4251ea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ef:	xor    edi,edi
  4251f1:	inc    edi
  4251f2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251f9:	mov    al,BYTE PTR [esi+0x43]
  4251fc:	mov    cl,al
  4251fe:	inc    cl
  425200:	test   al,al
  425202:	mov    eax,DWORD PTR [ebp+0x8]
  425205:	mov    BYTE PTR [esi+0x43],cl
  425208:	jne    0x42520d
  42520a:	or     DWORD PTR [eax+0x4],edi
  42520d:	mov    edx,0x80000000
  425212:	mov    ecx,ebx
  425214:	shr    edx,cl
  425216:	not    edx
  425218:	and    DWORD PTR [eax+0x8],edx
  42521b:	mov    eax,ebx
  42521d:	pop    edi
  42521e:	pop    esi
  42521f:	pop    ebx
  425220:	leave  
  425221:	ret    
  425222:	push   ebp
  425223:	mov    ebp,esp
  425225:	sub    esp,0xc
  425228:	mov    ecx,DWORD PTR [ebp+0x8]
  42522b:	mov    eax,DWORD PTR [ecx+0x10]
  42522e:	push   ebx
  42522f:	push   esi
  425230:	mov    esi,DWORD PTR [ebp+0x10]
  425233:	push   edi
  425234:	mov    edi,DWORD PTR [ebp+0xc]
  425237:	mov    edx,edi
  425239:	sub    edx,DWORD PTR [ecx+0xc]
  42523c:	add    esi,0x17
  42523f:	shr    edx,0xf
  425242:	mov    ecx,edx
  425244:	imul   ecx,ecx,0x204
  42524a:	lea    ecx,[ecx+eax*1+0x144]
  425251:	mov    DWORD PTR [ebp-0xc],ecx
  425254:	mov    ecx,DWORD PTR [edi-0x4]
  425257:	and    esi,0xfffffff0
  42525a:	dec    ecx
  42525b:	cmp    esi,ecx
  42525d:	lea    edi,[ecx+edi*1-0x4]
  425261:	mov    ebx,DWORD PTR [edi]
  425263:	mov    DWORD PTR [ebp+0x10],ecx
  425266:	mov    DWORD PTR [ebp-0x4],ebx
  425269:	jle    0x4253c4
  42526f:	test   bl,0x1
  425272:	jne    0x4253bd
  425278:	add    ebx,ecx
  42527a:	cmp    esi,ebx
  42527c:	jg     0x4253bd
  425282:	mov    ecx,DWORD PTR [ebp-0x4]
  425285:	sar    ecx,0x4
  425288:	dec    ecx
  425289:	cmp    ecx,0x3f
  42528c:	mov    DWORD PTR [ebp-0x8],ecx
  42528f:	jbe    0x425297
  425291:	push   0x3f
  425293:	pop    ecx
  425294:	mov    DWORD PTR [ebp-0x8],ecx
  425297:	mov    ebx,DWORD PTR [edi+0x4]
  42529a:	cmp    ebx,DWORD PTR [edi+0x8]
  42529d:	jne    0x4252e2
  42529f:	cmp    ecx,0x20
  4252a2:	mov    ebx,0x80000000
  4252a7:	jae    0x4252c3
  4252a9:	shr    ebx,cl
  4252ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4252ae:	lea    ecx,[ecx+eax*1+0x4]
  4252b2:	not    ebx
  4252b4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252b8:	dec    BYTE PTR [ecx]
  4252ba:	jne    0x4252e2
  4252bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252bf:	and    DWORD PTR [ecx],ebx
  4252c1:	jmp    0x4252e2
  4252c3:	add    ecx,0xffffffe0
  4252c6:	shr    ebx,cl
  4252c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252cb:	lea    ecx,[ecx+eax*1+0x4]
  4252cf:	not    ebx
  4252d1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252d8:	dec    BYTE PTR [ecx]
  4252da:	jne    0x4252e2
  4252dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252df:	and    DWORD PTR [ecx+0x4],ebx
  4252e2:	mov    ecx,DWORD PTR [edi+0x8]
  4252e5:	mov    ebx,DWORD PTR [edi+0x4]
  4252e8:	mov    DWORD PTR [ecx+0x4],ebx
  4252eb:	mov    ecx,DWORD PTR [edi+0x4]
  4252ee:	mov    edi,DWORD PTR [edi+0x8]
  4252f1:	mov    DWORD PTR [ecx+0x8],edi
  4252f4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252f7:	sub    ecx,esi
  4252f9:	add    DWORD PTR [ebp-0x4],ecx
  4252fc:	cmp    DWORD PTR [ebp-0x4],0x0
  425300:	jle    0x4253ab
  425306:	mov    edi,DWORD PTR [ebp-0x4]
  425309:	mov    ecx,DWORD PTR [ebp+0xc]
  42530c:	sar    edi,0x4
  42530f:	dec    edi
  425310:	cmp    edi,0x3f
  425313:	lea    ecx,[ecx+esi*1-0x4]
  425317:	jbe    0x42531c
  425319:	push   0x3f
  42531b:	pop    edi
  42531c:	mov    ebx,DWORD PTR [ebp-0xc]
  42531f:	lea    ebx,[ebx+edi*8]
  425322:	mov    DWORD PTR [ebp+0x10],ebx
  425325:	mov    ebx,DWORD PTR [ebx+0x4]
  425328:	mov    DWORD PTR [ecx+0x4],ebx
  42532b:	mov    ebx,DWORD PTR [ebp+0x10]
  42532e:	mov    DWORD PTR [ecx+0x8],ebx
  425331:	mov    DWORD PTR [ebx+0x4],ecx
  425334:	mov    ebx,DWORD PTR [ecx+0x4]
  425337:	mov    DWORD PTR [ebx+0x8],ecx
  42533a:	mov    ebx,DWORD PTR [ecx+0x4]
  42533d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425340:	jne    0x425399
  425342:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425346:	mov    BYTE PTR [ebp+0x13],cl
  425349:	inc    cl
  42534b:	cmp    edi,0x20
  42534e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425352:	jae    0x425370
  425354:	cmp    BYTE PTR [ebp+0x13],0x0
  425358:	jne    0x425368
  42535a:	mov    ecx,edi
  42535c:	mov    ebx,0x80000000
  425361:	shr    ebx,cl
  425363:	mov    ecx,DWORD PTR [ebp+0x8]
  425366:	or     DWORD PTR [ecx],ebx
  425368:	lea    eax,[eax+edx*4+0x44]
  42536c:	mov    ecx,edi
  42536e:	jmp    0x425390
  425370:	cmp    BYTE PTR [ebp+0x13],0x0
  425374:	jne    0x425386
  425376:	lea    ecx,[edi-0x20]
  425379:	mov    ebx,0x80000000
  42537e:	shr    ebx,cl
  425380:	mov    ecx,DWORD PTR [ebp+0x8]
  425383:	or     DWORD PTR [ecx+0x4],ebx
  425386:	lea    eax,[eax+edx*4+0xc4]
  42538d:	lea    ecx,[edi-0x20]
  425390:	mov    edx,0x80000000
  425395:	shr    edx,cl
  425397:	or     DWORD PTR [eax],edx
  425399:	mov    edx,DWORD PTR [ebp+0xc]
  42539c:	mov    ecx,DWORD PTR [ebp-0x4]
  42539f:	lea    eax,[edx+esi*1-0x4]
  4253a3:	mov    DWORD PTR [eax],ecx
  4253a5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253a9:	jmp    0x4253ae
  4253ab:	mov    edx,DWORD PTR [ebp+0xc]
  4253ae:	lea    eax,[esi+0x1]
  4253b1:	mov    DWORD PTR [edx-0x4],eax
  4253b4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253b8:	jmp    0x4254f9
  4253bd:	xor    eax,eax
  4253bf:	jmp    0x4254fc
  4253c4:	jge    0x4254f9
  4253ca:	mov    ebx,DWORD PTR [ebp+0xc]
  4253cd:	sub    DWORD PTR [ebp+0x10],esi
  4253d0:	lea    ecx,[esi+0x1]
  4253d3:	mov    DWORD PTR [ebx-0x4],ecx
  4253d6:	lea    ebx,[ebx+esi*1-0x4]
  4253da:	mov    esi,DWORD PTR [ebp+0x10]
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	mov    DWORD PTR [ebp+0xc],ebx
  4253e7:	mov    DWORD PTR [ebx-0x4],ecx
  4253ea:	jbe    0x4253ef
  4253ec:	push   0x3f
  4253ee:	pop    esi
  4253ef:	test   BYTE PTR [ebp-0x4],0x1
  4253f3:	jne    0x425479
  4253f9:	mov    esi,DWORD PTR [ebp-0x4]
  4253fc:	sar    esi,0x4
  4253ff:	dec    esi
  425400:	cmp    esi,0x3f
  425403:	jbe    0x425408
  425405:	push   0x3f
  425407:	pop    esi
  425408:	mov    ecx,DWORD PTR [edi+0x4]
  42540b:	cmp    ecx,DWORD PTR [edi+0x8]
  42540e:	jne    0x425452
  425410:	cmp    esi,0x20
  425413:	mov    ebx,0x80000000
  425418:	jae    0x425433
  42541a:	mov    ecx,esi
  42541c:	shr    ebx,cl
  42541e:	lea    esi,[esi+eax*1+0x4]
  425422:	not    ebx
  425424:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425428:	dec    BYTE PTR [esi]
  42542a:	jne    0x42544f
  42542c:	mov    ecx,DWORD PTR [ebp+0x8]
  42542f:	and    DWORD PTR [ecx],ebx
  425431:	jmp    0x42544f
  425433:	lea    ecx,[esi-0x20]
  425436:	shr    ebx,cl
  425438:	lea    ecx,[esi+eax*1+0x4]
  42543c:	not    ebx
  42543e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425445:	dec    BYTE PTR [ecx]
  425447:	jne    0x42544f
  425449:	mov    ecx,DWORD PTR [ebp+0x8]
  42544c:	and    DWORD PTR [ecx+0x4],ebx
  42544f:	mov    ebx,DWORD PTR [ebp+0xc]
  425452:	mov    ecx,DWORD PTR [edi+0x8]
  425455:	mov    esi,DWORD PTR [edi+0x4]
  425458:	mov    DWORD PTR [ecx+0x4],esi
  42545b:	mov    esi,DWORD PTR [edi+0x8]
  42545e:	mov    ecx,DWORD PTR [edi+0x4]
  425461:	mov    DWORD PTR [ecx+0x8],esi
  425464:	mov    esi,DWORD PTR [ebp+0x10]
  425467:	add    esi,DWORD PTR [ebp-0x4]
  42546a:	mov    DWORD PTR [ebp+0x10],esi
  42546d:	sar    esi,0x4
  425470:	dec    esi
  425471:	cmp    esi,0x3f
  425474:	jbe    0x425479
  425476:	push   0x3f
  425478:	pop    esi
  425479:	mov    ecx,DWORD PTR [ebp-0xc]
  42547c:	lea    ecx,[ecx+esi*8]
  42547f:	mov    edi,DWORD PTR [ecx+0x4]
  425482:	mov    DWORD PTR [ebx+0x8],ecx
  425485:	mov    DWORD PTR [ebx+0x4],edi
  425488:	mov    DWORD PTR [ecx+0x4],ebx
  42548b:	mov    ecx,DWORD PTR [ebx+0x4]
  42548e:	mov    DWORD PTR [ecx+0x8],ebx
  425491:	mov    ecx,DWORD PTR [ebx+0x4]
  425494:	cmp    ecx,DWORD PTR [ebx+0x8]
  425497:	jne    0x4254f0
  425499:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42549d:	mov    BYTE PTR [ebp+0xf],cl
  4254a0:	inc    cl
  4254a2:	cmp    esi,0x20
  4254a5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254a9:	jae    0x4254c7
  4254ab:	cmp    BYTE PTR [ebp+0xf],0x0
  4254af:	jne    0x4254bf
  4254b1:	mov    ecx,esi
  4254b3:	mov    edi,0x80000000
  4254b8:	shr    edi,cl
  4254ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4254bd:	or     DWORD PTR [ecx],edi
  4254bf:	lea    eax,[eax+edx*4+0x44]
  4254c3:	mov    ecx,esi
  4254c5:	jmp    0x4254e7
  4254c7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254cb:	jne    0x4254dd
  4254cd:	lea    ecx,[esi-0x20]
  4254d0:	mov    edi,0x80000000
  4254d5:	shr    edi,cl
  4254d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254da:	or     DWORD PTR [ecx+0x4],edi
  4254dd:	lea    eax,[eax+edx*4+0xc4]
  4254e4:	lea    ecx,[esi-0x20]
  4254e7:	mov    edx,0x80000000
  4254ec:	shr    edx,cl
  4254ee:	or     DWORD PTR [eax],edx
  4254f0:	mov    eax,DWORD PTR [ebp+0x10]
  4254f3:	mov    DWORD PTR [ebx],eax
  4254f5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254f9:	xor    eax,eax
  4254fb:	inc    eax
  4254fc:	pop    edi
  4254fd:	pop    esi
  4254fe:	pop    ebx
  4254ff:	leave  
  425500:	ret    
  425501:	push   ebp
  425502:	mov    ebp,esp
  425504:	sub    esp,0x14
  425507:	mov    ecx,DWORD PTR [ebp+0x8]
  42550a:	mov    eax,ds:0x45ffdc
  42550f:	mov    edx,DWORD PTR ds:0x45ffe0
  425515:	add    ecx,0x17
  425518:	and    ecx,0xfffffff0
  42551b:	push   ebx
  42551c:	mov    DWORD PTR [ebp-0x10],ecx
  42551f:	sar    ecx,0x4
  425522:	push   esi
  425523:	lea    eax,[eax+eax*4]
  425526:	push   edi
  425527:	dec    ecx
  425528:	cmp    ecx,0x20
  42552b:	lea    edi,[edx+eax*4]
  42552e:	mov    DWORD PTR [ebp-0x4],edi
  425531:	jge    0x42553e
  425533:	or     esi,0xffffffff
  425536:	shr    esi,cl
  425538:	or     DWORD PTR [ebp-0x8],0xffffffff
  42553c:	jmp    0x42554b
  42553e:	add    ecx,0xffffffe0
  425541:	or     eax,0xffffffff
  425544:	xor    esi,esi
  425546:	shr    eax,cl
  425548:	mov    DWORD PTR [ebp-0x8],eax
  42554b:	mov    eax,ds:0x45ffe8
  425550:	mov    ebx,eax
  425552:	mov    DWORD PTR [ebp-0xc],esi
  425555:	cmp    ebx,edi
  425557:	jmp    0x42556d
  425559:	mov    ecx,DWORD PTR [ebx+0x4]
  42555c:	mov    edi,DWORD PTR [ebx]
  42555e:	and    ecx,DWORD PTR [ebp-0x8]
  425561:	and    edi,esi
  425563:	or     ecx,edi
  425565:	jne    0x425572
  425567:	add    ebx,0x14
  42556a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42556d:	mov    DWORD PTR [ebp+0x8],ebx
  425570:	jb     0x425559
  425572:	cmp    ebx,DWORD PTR [ebp-0x4]
  425575:	jne    0x42559b
  425577:	mov    ebx,edx
  425579:	jmp    0x42558c
  42557b:	mov    ecx,DWORD PTR [ebx+0x4]
  42557e:	mov    edi,DWORD PTR [ebx]
  425580:	and    ecx,DWORD PTR [ebp-0x8]
  425583:	and    edi,esi
  425585:	or     ecx,edi
  425587:	jne    0x425593
  425589:	add    ebx,0x14
  42558c:	cmp    ebx,eax
  42558e:	mov    DWORD PTR [ebp+0x8],ebx
  425591:	jb     0x42557b
  425593:	cmp    ebx,eax
  425595:	je     0x42562f
  42559b:	mov    DWORD PTR ds:0x45ffe8,ebx
  4255a1:	mov    eax,DWORD PTR [ebx+0x10]
  4255a4:	mov    edx,DWORD PTR [eax]
  4255a6:	cmp    edx,0xffffffff
  4255a9:	mov    DWORD PTR [ebp-0x4],edx
  4255ac:	je     0x4255c2
  4255ae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255b5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255b9:	and    ecx,DWORD PTR [ebp-0x8]
  4255bc:	and    edi,esi
  4255be:	or     ecx,edi
  4255c0:	jne    0x4255f8
  4255c2:	mov    edx,DWORD PTR [eax+0xc4]
  4255c8:	and    edx,DWORD PTR [ebp-0x8]
  4255cb:	and    DWORD PTR [ebp-0x4],0x0
  4255cf:	lea    ecx,[eax+0x44]
  4255d2:	mov    esi,DWORD PTR [ecx]
  4255d4:	and    esi,DWORD PTR [ebp-0xc]
  4255d7:	or     edx,esi
  4255d9:	mov    esi,DWORD PTR [ebp-0xc]
  4255dc:	jne    0x4255f5
  4255de:	mov    edx,DWORD PTR [ecx+0x84]
  4255e4:	and    edx,DWORD PTR [ebp-0x8]
  4255e7:	inc    DWORD PTR [ebp-0x4]
  4255ea:	add    ecx,0x4
  4255ed:	mov    edi,DWORD PTR [ecx]
  4255ef:	and    edi,esi
  4255f1:	or     edx,edi
  4255f3:	je     0x4255de
  4255f5:	mov    edx,DWORD PTR [ebp-0x4]
  4255f8:	mov    ecx,edx
  4255fa:	imul   ecx,ecx,0x204
  425600:	lea    ecx,[ecx+eax*1+0x144]
  425607:	mov    DWORD PTR [ebp-0xc],ecx
  42560a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42560e:	xor    edi,edi
  425610:	and    ecx,esi
  425612:	jne    0x425681
  425614:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42561b:	and    ecx,DWORD PTR [ebp-0x8]
  42561e:	push   0x20
  425620:	pop    edi
  425621:	jmp    0x425681
  425623:	cmp    DWORD PTR [ebx+0x8],0x0
  425627:	jne    0x425634
  425629:	add    ebx,0x14
  42562c:	mov    DWORD PTR [ebp+0x8],ebx
  42562f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425632:	jb     0x425623
  425634:	cmp    ebx,DWORD PTR [ebp-0x4]
  425637:	jne    0x42565f
  425639:	mov    ebx,edx
  42563b:	jmp    0x425646
  42563d:	cmp    DWORD PTR [ebx+0x8],0x0
  425641:	jne    0x42564d
  425643:	add    ebx,0x14
  425646:	cmp    ebx,eax
  425648:	mov    DWORD PTR [ebp+0x8],ebx
  42564b:	jb     0x42563d
  42564d:	cmp    ebx,eax
  42564f:	jne    0x42565f
  425651:	call   0x425065
  425656:	mov    ebx,eax
  425658:	test   ebx,ebx
  42565a:	mov    DWORD PTR [ebp+0x8],ebx
  42565d:	je     0x425677
  42565f:	push   ebx
  425660:	call   0x42511c
  425665:	pop    ecx
  425666:	mov    ecx,DWORD PTR [ebx+0x10]
  425669:	mov    DWORD PTR [ecx],eax
  42566b:	mov    eax,DWORD PTR [ebx+0x10]
  42566e:	cmp    DWORD PTR [eax],0xffffffff
  425671:	jne    0x42559b
  425677:	xor    eax,eax
  425679:	jmp    0x4257f8
  42567e:	shl    ecx,1
  425680:	inc    edi
  425681:	test   ecx,ecx
  425683:	jge    0x42567e
  425685:	mov    ecx,DWORD PTR [ebp-0xc]
  425688:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42568c:	mov    ecx,DWORD PTR [edx]
  42568e:	sub    ecx,DWORD PTR [ebp-0x10]
  425691:	mov    esi,ecx
  425693:	sar    esi,0x4
  425696:	dec    esi
  425697:	cmp    esi,0x3f
  42569a:	mov    DWORD PTR [ebp-0x8],ecx
  42569d:	jle    0x4256a2
  42569f:	push   0x3f
  4256a1:	pop    esi
  4256a2:	cmp    esi,edi
  4256a4:	je     0x4257ab
  4256aa:	mov    ecx,DWORD PTR [edx+0x4]
  4256ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b0:	jne    0x42570e
  4256b2:	cmp    edi,0x20
  4256b5:	mov    ebx,0x80000000
  4256ba:	jge    0x4256e2
  4256bc:	mov    ecx,edi
  4256be:	shr    ebx,cl
  4256c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256c3:	lea    edi,[eax+edi*1+0x4]
  4256c7:	not    ebx
  4256c9:	mov    DWORD PTR [ebp-0x14],ebx
  4256cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256d4:	dec    BYTE PTR [edi]
  4256d6:	jne    0x42570b
  4256d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256db:	mov    ebx,DWORD PTR [ebp+0x8]
  4256de:	and    DWORD PTR [ebx],ecx
  4256e0:	jmp    0x42570e
  4256e2:	lea    ecx,[edi-0x20]
  4256e5:	shr    ebx,cl
  4256e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256ea:	lea    ecx,[eax+ecx*4+0xc4]
  4256f1:	lea    edi,[eax+edi*1+0x4]
  4256f5:	not    ebx
  4256f7:	and    DWORD PTR [ecx],ebx
  4256f9:	dec    BYTE PTR [edi]
  4256fb:	mov    DWORD PTR [ebp-0x14],ebx
  4256fe:	jne    0x42570b
  425700:	mov    ebx,DWORD PTR [ebp+0x8]
  425703:	mov    ecx,DWORD PTR [ebp-0x14]
  425706:	and    DWORD PTR [ebx+0x4],ecx
  425709:	jmp    0x42570e
  42570b:	mov    ebx,DWORD PTR [ebp+0x8]
  42570e:	cmp    DWORD PTR [ebp-0x8],0x0
  425712:	mov    ecx,DWORD PTR [edx+0x8]
  425715:	mov    edi,DWORD PTR [edx+0x4]
  425718:	mov    DWORD PTR [ecx+0x4],edi
  42571b:	mov    ecx,DWORD PTR [edx+0x4]
  42571e:	mov    edi,DWORD PTR [edx+0x8]
  425721:	mov    DWORD PTR [ecx+0x8],edi
  425724:	je     0x4257b7
  42572a:	mov    ecx,DWORD PTR [ebp-0xc]
  42572d:	lea    ecx,[ecx+esi*8]
  425730:	mov    edi,DWORD PTR [ecx+0x4]
  425733:	mov    DWORD PTR [edx+0x8],ecx
  425736:	mov    DWORD PTR [edx+0x4],edi
  425739:	mov    DWORD PTR [ecx+0x4],edx
  42573c:	mov    ecx,DWORD PTR [edx+0x4]
  42573f:	mov    DWORD PTR [ecx+0x8],edx
  425742:	mov    ecx,DWORD PTR [edx+0x4]
  425745:	cmp    ecx,DWORD PTR [edx+0x8]
  425748:	jne    0x4257a8
  42574a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42574e:	mov    BYTE PTR [ebp+0xb],cl
  425751:	inc    cl
  425753:	cmp    esi,0x20
  425756:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42575a:	jge    0x42577f
  42575c:	cmp    BYTE PTR [ebp+0xb],0x0
  425760:	jne    0x42576d
  425762:	mov    edi,0x80000000
  425767:	mov    ecx,esi
  425769:	shr    edi,cl
  42576b:	or     DWORD PTR [ebx],edi
  42576d:	mov    ecx,esi
  42576f:	mov    edi,0x80000000
  425774:	shr    edi,cl
  425776:	mov    ecx,DWORD PTR [ebp-0x4]
  425779:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42577d:	jmp    0x4257a8
  42577f:	cmp    BYTE PTR [ebp+0xb],0x0
  425783:	jne    0x425792
  425785:	lea    ecx,[esi-0x20]
  425788:	mov    edi,0x80000000
  42578d:	shr    edi,cl
  42578f:	or     DWORD PTR [ebx+0x4],edi
  425792:	mov    ecx,DWORD PTR [ebp-0x4]
  425795:	lea    edi,[eax+ecx*4+0xc4]
  42579c:	lea    ecx,[esi-0x20]
  42579f:	mov    esi,0x80000000
  4257a4:	shr    esi,cl
  4257a6:	or     DWORD PTR [edi],esi
  4257a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ab:	test   ecx,ecx
  4257ad:	je     0x4257ba
  4257af:	mov    DWORD PTR [edx],ecx
  4257b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257b5:	jmp    0x4257ba
  4257b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ba:	mov    esi,DWORD PTR [ebp-0x10]
  4257bd:	add    edx,ecx
  4257bf:	lea    ecx,[esi+0x1]
  4257c2:	mov    DWORD PTR [edx],ecx
  4257c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257c8:	mov    esi,DWORD PTR [ebp-0xc]
  4257cb:	mov    ecx,DWORD PTR [esi]
  4257cd:	test   ecx,ecx
  4257cf:	lea    edi,[ecx+0x1]
  4257d2:	mov    DWORD PTR [esi],edi
  4257d4:	jne    0x4257f0
  4257d6:	cmp    ebx,DWORD PTR ds:0x45ffd8
  4257dc:	jne    0x4257f0
  4257de:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e1:	cmp    ecx,DWORD PTR ds:0x45fff0
  4257e7:	jne    0x4257f0
  4257e9:	and    DWORD PTR ds:0x45ffd8,0x0
  4257f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f3:	mov    DWORD PTR [eax],ecx
  4257f5:	lea    eax,[edx+0x4]
  4257f8:	pop    edi
  4257f9:	pop    esi
  4257fa:	pop    ebx
  4257fb:	leave  
  4257fc:	ret    
  4257fd:	int3   
  4257fe:	int3   
  4257ff:	int3   
  425800:	push   esi
  425801:	inc    ebx
  425802:	xor    dh,BYTE PTR [eax]
  425804:	pop    eax
  425805:	inc    ebx
  425806:	xor    BYTE PTR [eax],dh
  425808:	push   ebp
  425809:	mov    ebp,esp
  42580b:	sub    esp,0x8
  42580e:	push   ebx
  42580f:	push   esi
  425810:	push   edi
  425811:	push   ebp
  425812:	cld    
  425813:	mov    ebx,DWORD PTR [ebp+0xc]
  425816:	mov    eax,DWORD PTR [ebp+0x8]
  425819:	test   DWORD PTR [eax+0x4],0x6
  425820:	jne    0x4258a8
  425826:	mov    DWORD PTR [ebp-0x8],eax
  425829:	mov    eax,DWORD PTR [ebp+0x10]
  42582c:	mov    DWORD PTR [ebp-0x4],eax
  42582f:	lea    eax,[ebp-0x8]
  425832:	mov    DWORD PTR [ebx-0x4],eax
  425835:	mov    esi,DWORD PTR [ebx+0xc]
  425838:	mov    edi,DWORD PTR [ebx+0x8]
  42583b:	cmp    esi,0xffffffff
  42583e:	je     0x4258a1
  425840:	lea    ecx,[esi+esi*2]
  425843:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425848:	je     0x42588f
  42584a:	push   esi
  42584b:	push   ebp
  42584c:	lea    ebp,[ebx+0x10]
  42584f:	call   DWORD PTR [edi+ecx*4+0x4]
  425853:	pop    ebp
  425854:	pop    esi
  425855:	mov    ebx,DWORD PTR [ebp+0xc]
  425858:	or     eax,eax
  42585a:	je     0x42588f
  42585c:	js     0x42589a
  42585e:	mov    edi,DWORD PTR [ebx+0x8]
  425861:	push   ebx
  425862:	call   0x426790
  425867:	add    esp,0x4
  42586a:	lea    ebp,[ebx+0x10]
  42586d:	push   esi
  42586e:	push   ebx
  42586f:	call   0x4267d2
  425874:	add    esp,0x8
  425877:	lea    ecx,[esi+esi*2]
  42587a:	push   0x1
  42587c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425880:	call   0x426866
  425885:	mov    eax,DWORD PTR [edi+ecx*4]
  425888:	mov    DWORD PTR [ebx+0xc],eax
  42588b:	call   DWORD PTR [edi+ecx*4+0x8]
  42588f:	mov    edi,DWORD PTR [ebx+0x8]
  425892:	lea    ecx,[esi+esi*2]
  425895:	mov    esi,DWORD PTR [edi+ecx*4]
  425898:	jmp    0x42583b
  42589a:	mov    eax,0x0
  42589f:	jmp    0x4258bd
  4258a1:	mov    eax,0x1
  4258a6:	jmp    0x4258bd
  4258a8:	push   ebp
  4258a9:	lea    ebp,[ebx+0x10]
  4258ac:	push   0xffffffff
  4258ae:	push   ebx
  4258af:	call   0x4267d2
  4258b4:	add    esp,0x8
  4258b7:	pop    ebp
  4258b8:	mov    eax,0x1
  4258bd:	pop    ebp
  4258be:	pop    edi
  4258bf:	pop    esi
  4258c0:	pop    ebx
  4258c1:	mov    esp,ebp
  4258c3:	pop    ebp
  4258c4:	ret    
  4258c5:	push   ebp
  4258c6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ca:	mov    ebp,DWORD PTR [ecx]
  4258cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258cf:	push   eax
  4258d0:	mov    eax,DWORD PTR [ecx+0x18]
  4258d3:	push   eax
  4258d4:	call   0x4267d2
  4258d9:	add    esp,0x8
  4258dc:	pop    ebp
  4258dd:	ret    0x4
  4258e0:	call   0x4237f3
  4258e5:	add    eax,0x8
  4258e8:	ret    
  4258e9:	push   0x14
  4258eb:	push   0x4287a8
  4258f0:	call   0x423940
  4258f5:	mov    edi,DWORD PTR [ebp+0x8]
  4258f8:	xor    ebx,ebx
  4258fa:	cmp    edi,ebx
  4258fc:	jne    0x42590c
  4258fe:	push   DWORD PTR [ebp+0xc]
  425901:	call   0x424662
  425906:	pop    ecx
  425907:	jmp    0x425a90
  42590c:	mov    esi,DWORD PTR [ebp+0xc]
  42590f:	cmp    esi,ebx
  425911:	jne    0x42591f
  425913:	push   edi
  425914:	call   0x42454a
  425919:	pop    ecx
  42591a:	jmp    0x425a8e
  42591f:	cmp    DWORD PTR ds:0x460224,0x3
  425926:	jne    0x425a5a
  42592c:	mov    DWORD PTR [ebp-0x1c],ebx
  42592f:	cmp    esi,0xffffffe0
  425932:	ja     0x425a29
  425938:	push   0x4
  42593a:	call   0x423aff
  42593f:	pop    ecx
  425940:	mov    DWORD PTR [ebp-0x4],ebx
  425943:	push   edi
  425944:	call   0x424d22
  425949:	pop    ecx
  42594a:	mov    DWORD PTR [ebp-0x20],eax
  42594d:	cmp    eax,ebx
  42594f:	je     0x4259f9
  425955:	cmp    esi,DWORD PTR ds:0x45ffe4
  42595b:	ja     0x4259a9
  42595d:	push   esi
  42595e:	push   edi
  42595f:	push   eax
  425960:	call   0x425222
  425965:	add    esp,0xc
  425968:	test   eax,eax
  42596a:	je     0x425971
  42596c:	mov    DWORD PTR [ebp-0x1c],edi
  42596f:	jmp    0x4259a9
  425971:	push   esi
  425972:	call   0x425501
  425977:	pop    ecx
  425978:	mov    DWORD PTR [ebp-0x1c],eax
  42597b:	cmp    eax,ebx
  42597d:	je     0x4259a9
  42597f:	mov    eax,DWORD PTR [edi-0x4]
  425982:	dec    eax
  425983:	mov    DWORD PTR [ebp-0x24],eax
  425986:	cmp    eax,esi
  425988:	jb     0x42598c
  42598a:	mov    eax,esi
  42598c:	push   eax
  42598d:	push   edi
  42598e:	push   DWORD PTR [ebp-0x1c]
  425991:	call   0x424680
  425996:	push   edi
  425997:	call   0x424d22
  42599c:	mov    DWORD PTR [ebp-0x20],eax
  42599f:	push   edi
  4259a0:	push   eax
  4259a1:	call   0x424d4d
  4259a6:	add    esp,0x18
  4259a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259ac:	jne    0x4259f9
  4259ae:	cmp    esi,ebx
  4259b0:	jne    0x4259b8
  4259b2:	xor    esi,esi
  4259b4:	inc    esi
  4259b5:	mov    DWORD PTR [ebp+0xc],esi
  4259b8:	add    esi,0xf
  4259bb:	and    esi,0xfffffff0
  4259be:	mov    DWORD PTR [ebp+0xc],esi
  4259c1:	push   esi
  4259c2:	push   ebx
  4259c3:	push   DWORD PTR ds:0x460220
  4259c9:	call   DWORD PTR ds:0x4280d8
  4259cf:	mov    DWORD PTR [ebp-0x1c],eax
  4259d2:	cmp    eax,ebx
  4259d4:	je     0x4259f9
  4259d6:	mov    eax,DWORD PTR [edi-0x4]
  4259d9:	dec    eax
  4259da:	mov    DWORD PTR [ebp-0x24],eax
  4259dd:	cmp    eax,esi
  4259df:	jb     0x4259e3
  4259e1:	mov    eax,esi
  4259e3:	push   eax
  4259e4:	push   edi
  4259e5:	push   DWORD PTR [ebp-0x1c]
  4259e8:	call   0x424680
  4259ed:	push   edi
  4259ee:	push   DWORD PTR [ebp-0x20]
  4259f1:	call   0x424d4d
  4259f6:	add    esp,0x14
  4259f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fd:	call   0x425a51
  425a02:	cmp    DWORD PTR [ebp-0x20],ebx
  425a05:	jne    0x425a29
  425a07:	cmp    esi,ebx
  425a09:	jne    0x425a0e
  425a0b:	xor    esi,esi
  425a0d:	inc    esi
  425a0e:	add    esi,0xf
  425a11:	and    esi,0xfffffff0
  425a14:	mov    DWORD PTR [ebp+0xc],esi
  425a17:	push   esi
  425a18:	push   edi
  425a19:	push   ebx
  425a1a:	push   DWORD PTR ds:0x460220
  425a20:	call   DWORD PTR ds:0x4280e0
  425a26:	mov    DWORD PTR [ebp-0x1c],eax
  425a29:	mov    eax,DWORD PTR [ebp-0x1c]
  425a2c:	cmp    eax,ebx
  425a2e:	jne    0x425a90
  425a30:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a36:	je     0x425a90
  425a38:	push   esi
  425a39:	call   0x426222
  425a3e:	pop    ecx
  425a3f:	test   eax,eax
  425a41:	jne    0x42592c
  425a47:	jmp    0x425a8e
  425a49:	xor    ebx,ebx
  425a4b:	mov    esi,DWORD PTR [ebp+0xc]
  425a4e:	mov    edi,DWORD PTR [ebp+0x8]
  425a51:	push   0x4
  425a53:	call   0x423a6b
  425a58:	pop    ecx
  425a59:	ret    
  425a5a:	xor    eax,eax
  425a5c:	cmp    esi,0xffffffe0
  425a5f:	ja     0x425a77
  425a61:	cmp    esi,ebx
  425a63:	jne    0x425a68
  425a65:	xor    esi,esi
  425a67:	inc    esi
  425a68:	push   esi
  425a69:	push   edi
  425a6a:	push   ebx
  425a6b:	push   DWORD PTR ds:0x460220
  425a71:	call   DWORD PTR ds:0x4280e0
  425a77:	cmp    eax,ebx
  425a79:	jne    0x425a90
  425a7b:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a81:	je     0x425a90
  425a83:	push   esi
  425a84:	call   0x426222
  425a89:	pop    ecx
  425a8a:	test   eax,eax
  425a8c:	jne    0x425a5a
  425a8e:	xor    eax,eax
  425a90:	call   0x42397b
  425a95:	ret    
  425a96:	push   0x10
  425a98:	push   0x4287b8
  425a9d:	call   0x423940
  425aa2:	cmp    DWORD PTR ds:0x460224,0x3
  425aa9:	jne    0x425ae5
  425aab:	push   0x4
  425aad:	call   0x423aff
  425ab2:	pop    ecx
  425ab3:	and    DWORD PTR [ebp-0x4],0x0
  425ab7:	mov    esi,DWORD PTR [ebp+0x8]
  425aba:	push   esi
  425abb:	call   0x424d22
  425ac0:	pop    ecx
  425ac1:	mov    DWORD PTR [ebp-0x1c],eax
  425ac4:	test   eax,eax
  425ac6:	je     0x425ad3
  425ac8:	mov    esi,DWORD PTR [esi-0x4]
  425acb:	sub    esi,0x9
  425ace:	mov    DWORD PTR [ebp-0x20],esi
  425ad1:	jmp    0x425ad6
  425ad3:	mov    esi,DWORD PTR [ebp-0x20]
  425ad6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ada:	call   0x425b03
  425adf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ae3:	jne    0x425af8
  425ae5:	push   DWORD PTR [ebp+0x8]
  425ae8:	push   0x0
  425aea:	push   DWORD PTR ds:0x460220
  425af0:	call   DWORD PTR ds:0x4280e4
  425af6:	mov    esi,eax
  425af8:	mov    eax,esi
  425afa:	call   0x42397b
  425aff:	ret    
  425b00:	mov    esi,DWORD PTR [ebp-0x20]
  425b03:	push   0x4
  425b05:	call   0x423a6b
  425b0a:	pop    ecx
  425b0b:	ret    
  425b0c:	push   ebp
  425b0d:	mov    ebp,esp
  425b0f:	sub    esp,0x10
  425b12:	push   esi
  425b13:	lea    eax,[ebp-0x8]
  425b16:	push   eax
  425b17:	call   DWORD PTR ds:0x4280f0
  425b1d:	mov    esi,DWORD PTR [ebp-0x4]
  425b20:	xor    esi,DWORD PTR [ebp-0x8]
  425b23:	call   DWORD PTR ds:0x428044
  425b29:	xor    esi,eax
  425b2b:	call   DWORD PTR ds:0x4280a4
  425b31:	xor    esi,eax
  425b33:	call   DWORD PTR ds:0x4280ec
  425b39:	xor    esi,eax
  425b3b:	lea    eax,[ebp-0x10]
  425b3e:	push   eax
  425b3f:	call   DWORD PTR ds:0x4280e8
  425b45:	mov    eax,DWORD PTR [ebp-0xc]
  425b48:	xor    eax,DWORD PTR [ebp-0x10]
  425b4b:	xor    esi,eax
  425b4d:	mov    DWORD PTR ds:0x45f510,esi
  425b53:	jne    0x425b5f
  425b55:	mov    DWORD PTR ds:0x45f510,0xbb40e64e
  425b5f:	pop    esi
  425b60:	leave  
  425b61:	ret    
  425b62:	push   0x118
  425b67:	push   0x428968
  425b6c:	call   0x423940
  425b71:	mov    eax,ds:0x45f510
  425b76:	xor    eax,DWORD PTR [ebp+0x4]
  425b79:	mov    DWORD PTR [ebp-0x1c],eax
  425b7c:	mov    eax,ds:0x45fe78
  425b81:	xor    ecx,ecx
  425b83:	cmp    eax,ecx
  425b85:	je     0x425ba6
  425b87:	mov    DWORD PTR [ebp-0x4],ecx
  425b8a:	push   DWORD PTR [ebp+0xc]
  425b8d:	push   DWORD PTR [ebp+0x8]
  425b90:	call   eax
  425b92:	pop    ecx
  425b93:	pop    ecx
  425b94:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b98:	jmp    0x425ca4
  425b9d:	xor    eax,eax
  425b9f:	inc    eax
  425ba0:	ret    
  425ba1:	mov    esp,DWORD PTR [ebp-0x18]
  425ba4:	jmp    0x425b94
  425ba6:	mov    eax,DWORD PTR [ebp+0x8]
  425ba9:	dec    eax
  425baa:	je     0x425bbf
  425bac:	mov    edi,0x428944
  425bb1:	mov    DWORD PTR [ebp-0x20],0x428890
  425bb8:	mov    esi,0xd4
  425bbd:	jmp    0x425bd0
  425bbf:	mov    edi,0x428870
  425bc4:	mov    DWORD PTR [ebp-0x20],0x4287d0
  425bcb:	mov    esi,0xb9
  425bd0:	mov    BYTE PTR [ebp-0x24],cl
  425bd3:	push   0x104
  425bd8:	lea    eax,[ebp-0x128]
  425bde:	push   eax
  425bdf:	push   ecx
  425be0:	call   DWORD PTR ds:0x428074
  425be6:	test   eax,eax
  425be8:	jne    0x425bfd
  425bea:	push   0x4284c4
  425bef:	lea    eax,[ebp-0x128]
  425bf5:	push   eax
  425bf6:	call   0x423d20
  425bfb:	pop    ecx
  425bfc:	pop    ecx
  425bfd:	lea    ebx,[ebp-0x128]
  425c03:	lea    eax,[ebp-0x128]
  425c09:	push   eax
  425c0a:	call   0x423f50
  425c0f:	pop    ecx
  425c10:	add    eax,0xb
  425c13:	cmp    eax,0x3c
  425c16:	jbe    0x425c41
  425c18:	lea    eax,[ebp-0x128]
  425c1e:	push   eax
  425c1f:	call   0x423f50
  425c24:	mov    ebx,eax
  425c26:	lea    eax,[ebp-0x128]
  425c2c:	sub    eax,0x31
  425c2f:	add    ebx,eax
  425c31:	push   0x3
  425c33:	push   0x4284c0
  425c38:	push   ebx
  425c39:	call   0x423e20
  425c3e:	add    esp,0x10
  425c41:	push   ebx
  425c42:	call   0x423f50
  425c47:	pop    ecx
  425c48:	lea    eax,[eax+esi*1+0xc]
  425c4c:	add    eax,0x3
  425c4f:	and    eax,0xfffffffc
  425c52:	call   0x423990
  425c57:	mov    DWORD PTR [ebp-0x18],esp
  425c5a:	mov    esi,esp
  425c5c:	push   edi
  425c5d:	push   esi
  425c5e:	call   0x423d20
  425c63:	mov    edi,0x4284a0
  425c68:	push   edi
  425c69:	push   esi
  425c6a:	call   0x423d30
  425c6f:	push   0x4287c4
  425c74:	push   esi
  425c75:	call   0x423d30
  425c7a:	push   ebx
  425c7b:	push   esi
  425c7c:	call   0x423d30
  425c81:	push   edi
  425c82:	push   esi
  425c83:	call   0x423d30
  425c88:	push   DWORD PTR [ebp-0x20]
  425c8b:	push   esi
  425c8c:	call   0x423d30
  425c91:	push   0x12010
  425c96:	push   0x428478
  425c9b:	push   esi
  425c9c:	call   0x423c22
  425ca1:	add    esp,0x3c
  425ca4:	push   0x3
  425ca6:	call   0x422dac
  425cab:	int3   
  425cac:	push   0x38
  425cae:	push   0x428d88
  425cb3:	call   0x423940
  425cb8:	xor    ebx,ebx
  425cba:	cmp    DWORD PTR ds:0x45fe9c,ebx
  425cc0:	jne    0x425cfa
  425cc2:	push   ebx
  425cc3:	push   ebx
  425cc4:	xor    esi,esi
  425cc6:	inc    esi
  425cc7:	push   esi
  425cc8:	push   0x428d84
  425ccd:	push   0x100
  425cd2:	push   ebx
  425cd3:	call   DWORD PTR ds:0x4280fc
  425cd9:	test   eax,eax
  425cdb:	je     0x425ce5
  425cdd:	mov    DWORD PTR ds:0x45fe9c,esi
  425ce3:	jmp    0x425cfa
  425ce5:	call   DWORD PTR ds:0x428018
  425ceb:	cmp    eax,0x78
  425cee:	jne    0x425cfa
  425cf0:	mov    DWORD PTR ds:0x45fe9c,0x2
  425cfa:	cmp    DWORD PTR [ebp+0x14],ebx
  425cfd:	jle    0x425d1a
  425cff:	mov    ecx,DWORD PTR [ebp+0x14]
  425d02:	mov    eax,DWORD PTR [ebp+0x10]
  425d05:	dec    ecx
  425d06:	cmp    BYTE PTR [eax],bl
  425d08:	je     0x425d12
  425d0a:	inc    eax
  425d0b:	cmp    ecx,ebx
  425d0d:	jne    0x425d05
  425d0f:	or     ecx,0xffffffff
  425d12:	or     eax,0xffffffff
  425d15:	sub    eax,ecx
  425d17:	add    DWORD PTR [ebp+0x14],eax
  425d1a:	mov    eax,ds:0x45fe9c
  425d1f:	cmp    eax,0x2
  425d22:	je     0x425f04
  425d28:	cmp    eax,ebx
  425d2a:	je     0x425f04
  425d30:	cmp    eax,0x1
  425d33:	jne    0x425f37
  425d39:	xor    edi,edi
  425d3b:	mov    DWORD PTR [ebp-0x1c],edi
  425d3e:	mov    DWORD PTR [ebp-0x20],ebx
  425d41:	mov    DWORD PTR [ebp-0x24],ebx
  425d44:	cmp    DWORD PTR [ebp+0x20],ebx
  425d47:	jne    0x425d51
  425d49:	mov    eax,ds:0x45fe94
  425d4e:	mov    DWORD PTR [ebp+0x20],eax
  425d51:	push   ebx
  425d52:	push   ebx
  425d53:	push   DWORD PTR [ebp+0x14]
  425d56:	push   DWORD PTR [ebp+0x10]
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d5e:	setne  al
  425d61:	lea    eax,[eax*8+0x1]
  425d68:	push   eax
  425d69:	push   DWORD PTR [ebp+0x20]
  425d6c:	call   DWORD PTR ds:0x4280f8
  425d72:	mov    esi,eax
  425d74:	mov    DWORD PTR [ebp-0x28],esi
  425d77:	cmp    esi,ebx
  425d79:	je     0x425f37
  425d7f:	mov    DWORD PTR [ebp-0x4],0x1
  425d86:	lea    eax,[esi+esi*1]
  425d89:	add    eax,0x3
  425d8c:	and    eax,0xfffffffc
  425d8f:	call   0x423990
  425d94:	mov    DWORD PTR [ebp-0x18],esp
  425d97:	mov    eax,esp
  425d99:	mov    DWORD PTR [ebp-0x2c],eax
  425d9c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da0:	jmp    0x425dbd
  425da2:	xor    eax,eax
  425da4:	inc    eax
  425da5:	ret    
  425da6:	mov    esp,DWORD PTR [ebp-0x18]
  425da9:	call   0x426dd5
  425dae:	xor    ebx,ebx
  425db0:	mov    DWORD PTR [ebp-0x2c],ebx
  425db3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dba:	mov    esi,DWORD PTR [ebp-0x28]
  425dbd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dc0:	jne    0x425dde
  425dc2:	lea    eax,[esi+esi*1]
  425dc5:	push   eax
  425dc6:	call   0x424662
  425dcb:	pop    ecx
  425dcc:	mov    DWORD PTR [ebp-0x2c],eax
  425dcf:	cmp    eax,ebx
  425dd1:	je     0x425f37
  425dd7:	mov    DWORD PTR [ebp-0x20],0x1
  425dde:	push   esi
  425ddf:	push   DWORD PTR [ebp-0x2c]
  425de2:	push   DWORD PTR [ebp+0x14]
  425de5:	push   DWORD PTR [ebp+0x10]
  425de8:	push   0x1
  425dea:	push   DWORD PTR [ebp+0x20]
  425ded:	call   DWORD PTR ds:0x4280f8
  425df3:	test   eax,eax
  425df5:	je     0x425ee1
  425dfb:	push   ebx
  425dfc:	push   ebx
  425dfd:	push   esi
  425dfe:	push   DWORD PTR [ebp-0x2c]
  425e01:	push   DWORD PTR [ebp+0xc]
  425e04:	push   DWORD PTR [ebp+0x8]
  425e07:	call   DWORD PTR ds:0x4280fc
  425e0d:	mov    edi,eax
  425e0f:	mov    DWORD PTR [ebp-0x1c],edi
  425e12:	cmp    edi,ebx
  425e14:	je     0x425ee1
  425e1a:	test   BYTE PTR [ebp+0xd],0x4
  425e1e:	je     0x425e4d
  425e20:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e23:	je     0x425ee1
  425e29:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e2c:	jg     0x425ee1
  425e32:	push   DWORD PTR [ebp+0x1c]
  425e35:	push   DWORD PTR [ebp+0x18]
  425e38:	push   esi
  425e39:	push   DWORD PTR [ebp-0x2c]
  425e3c:	push   DWORD PTR [ebp+0xc]
  425e3f:	push   DWORD PTR [ebp+0x8]
  425e42:	call   DWORD PTR ds:0x4280fc
  425e48:	jmp    0x425ee1
  425e4d:	mov    DWORD PTR [ebp-0x4],0x2
  425e54:	lea    eax,[edi+edi*1]
  425e57:	add    eax,0x3
  425e5a:	and    eax,0xfffffffc
  425e5d:	call   0x423990
  425e62:	mov    DWORD PTR [ebp-0x18],esp
  425e65:	mov    eax,esp
  425e67:	mov    DWORD PTR [ebp-0x30],eax
  425e6a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e6e:	jmp    0x425e8b
  425e70:	xor    eax,eax
  425e72:	inc    eax
  425e73:	ret    
  425e74:	mov    esp,DWORD PTR [ebp-0x18]
  425e77:	call   0x426dd5
  425e7c:	xor    ebx,ebx
  425e7e:	mov    DWORD PTR [ebp-0x30],ebx
  425e81:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e85:	mov    edi,DWORD PTR [ebp-0x1c]
  425e88:	mov    esi,DWORD PTR [ebp-0x28]
  425e8b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e8e:	jne    0x425ea8
  425e90:	lea    eax,[edi+edi*1]
  425e93:	push   eax
  425e94:	call   0x424662
  425e99:	pop    ecx
  425e9a:	mov    DWORD PTR [ebp-0x30],eax
  425e9d:	cmp    eax,ebx
  425e9f:	je     0x425ee1
  425ea1:	mov    DWORD PTR [ebp-0x24],0x1
  425ea8:	push   edi
  425ea9:	push   DWORD PTR [ebp-0x30]
  425eac:	push   esi
  425ead:	push   DWORD PTR [ebp-0x2c]
  425eb0:	push   DWORD PTR [ebp+0xc]
  425eb3:	push   DWORD PTR [ebp+0x8]
  425eb6:	call   DWORD PTR ds:0x4280fc
  425ebc:	test   eax,eax
  425ebe:	je     0x425ee1
  425ec0:	push   ebx
  425ec1:	push   ebx
  425ec2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ec5:	jne    0x425ecb
  425ec7:	push   ebx
  425ec8:	push   ebx
  425ec9:	jmp    0x425ed1
  425ecb:	push   DWORD PTR [ebp+0x1c]
  425ece:	push   DWORD PTR [ebp+0x18]
  425ed1:	push   edi
  425ed2:	push   DWORD PTR [ebp-0x30]
  425ed5:	push   ebx
  425ed6:	push   DWORD PTR [ebp+0x20]
  425ed9:	call   DWORD PTR ds:0x428088
  425edf:	mov    edi,eax
  425ee1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ee4:	je     0x425eef
  425ee6:	push   DWORD PTR [ebp-0x30]
  425ee9:	call   0x42454a
  425eee:	pop    ecx
  425eef:	cmp    DWORD PTR [ebp-0x20],ebx
  425ef2:	je     0x425efd
  425ef4:	push   DWORD PTR [ebp-0x2c]
  425ef7:	call   0x42454a
  425efc:	pop    ecx
  425efd:	mov    eax,edi
  425eff:	jmp    0x42605f
  425f04:	mov    DWORD PTR [ebp-0x34],ebx
  425f07:	xor    edi,edi
  425f09:	mov    DWORD PTR [ebp-0x38],ebx
  425f0c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f0f:	jne    0x425f19
  425f11:	mov    eax,ds:0x45fe84
  425f16:	mov    DWORD PTR [ebp+0x8],eax
  425f19:	cmp    DWORD PTR [ebp+0x20],ebx
  425f1c:	jne    0x425f26
  425f1e:	mov    eax,ds:0x45fe94
  425f23:	mov    DWORD PTR [ebp+0x20],eax
  425f26:	push   DWORD PTR [ebp+0x8]
  425f29:	call   0x426bbd
  425f2e:	pop    ecx
  425f2f:	mov    DWORD PTR [ebp-0x3c],eax
  425f32:	cmp    eax,0xffffffff
  425f35:	jne    0x425f3e
  425f37:	xor    eax,eax
  425f39:	jmp    0x42605f
  425f3e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f41:	je     0x426035
  425f47:	push   ebx
  425f48:	push   ebx
  425f49:	lea    ecx,[ebp+0x14]
  425f4c:	push   ecx
  425f4d:	push   DWORD PTR [ebp+0x10]
  425f50:	push   eax
  425f51:	push   DWORD PTR [ebp+0x20]
  425f54:	call   0x426c06
  425f59:	add    esp,0x18
  425f5c:	mov    DWORD PTR [ebp-0x34],eax
  425f5f:	cmp    eax,ebx
  425f61:	je     0x425f37
  425f63:	push   ebx
  425f64:	push   ebx
  425f65:	push   DWORD PTR [ebp+0x14]
  425f68:	push   eax
  425f69:	push   DWORD PTR [ebp+0xc]
  425f6c:	push   DWORD PTR [ebp+0x8]
  425f6f:	call   DWORD PTR ds:0x4280f4
  425f75:	mov    esi,eax
  425f77:	mov    DWORD PTR [ebp-0x40],esi
  425f7a:	cmp    esi,ebx
  425f7c:	je     0x426024
  425f82:	mov    DWORD PTR [ebp-0x4],ebx
  425f85:	add    eax,0x3
  425f88:	and    eax,0xfffffffc
  425f8b:	call   0x423990
  425f90:	mov    DWORD PTR [ebp-0x18],esp
  425f93:	mov    edi,esp
  425f95:	mov    DWORD PTR [ebp-0x44],edi
  425f98:	push   esi
  425f99:	push   ebx
  425f9a:	push   edi
  425f9b:	call   0x426240
  425fa0:	add    esp,0xc
  425fa3:	jmp    0x425fb5
  425fa5:	xor    eax,eax
  425fa7:	inc    eax
  425fa8:	ret    
  425fa9:	mov    esp,DWORD PTR [ebp-0x18]
  425fac:	call   0x426dd5
  425fb1:	xor    ebx,ebx
  425fb3:	xor    edi,edi
  425fb5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fb9:	cmp    edi,ebx
  425fbb:	jne    0x425fe0
  425fbd:	push   DWORD PTR [ebp-0x40]
  425fc0:	call   0x424662
  425fc5:	pop    ecx
  425fc6:	mov    edi,eax
  425fc8:	cmp    edi,ebx
  425fca:	je     0x425ffd
  425fcc:	push   DWORD PTR [ebp-0x40]
  425fcf:	push   ebx
  425fd0:	push   edi
  425fd1:	call   0x426240
  425fd6:	add    esp,0xc
  425fd9:	mov    DWORD PTR [ebp-0x38],0x1
  425fe0:	push   DWORD PTR [ebp-0x40]
  425fe3:	push   edi
  425fe4:	push   DWORD PTR [ebp+0x14]
  425fe7:	push   DWORD PTR [ebp-0x34]
  425fea:	push   DWORD PTR [ebp+0xc]
  425fed:	push   DWORD PTR [ebp+0x8]
  425ff0:	call   DWORD PTR ds:0x4280f4
  425ff6:	mov    DWORD PTR [ebp-0x40],eax
  425ff9:	cmp    eax,ebx
  425ffb:	jne    0x426001
  425ffd:	xor    esi,esi
  425fff:	jmp    0x426027
  426001:	push   DWORD PTR [ebp+0x1c]
  426004:	push   DWORD PTR [ebp+0x18]
  426007:	lea    eax,[ebp-0x40]
  42600a:	push   eax
  42600b:	push   edi
  42600c:	push   DWORD PTR [ebp+0x20]
  42600f:	push   DWORD PTR [ebp-0x3c]
  426012:	call   0x426c06
  426017:	add    esp,0x18
  42601a:	mov    esi,eax
  42601c:	neg    esi
  42601e:	sbb    esi,esi
  426020:	neg    esi
  426022:	jmp    0x426027
  426024:	mov    esi,DWORD PTR [ebp-0x48]
  426027:	cmp    DWORD PTR [ebp-0x38],ebx
  42602a:	je     0x42604f
  42602c:	push   edi
  42602d:	call   0x42454a
  426032:	pop    ecx
  426033:	jmp    0x42604f
  426035:	push   DWORD PTR [ebp+0x1c]
  426038:	push   DWORD PTR [ebp+0x18]
  42603b:	push   DWORD PTR [ebp+0x14]
  42603e:	push   DWORD PTR [ebp+0x10]
  426041:	push   DWORD PTR [ebp+0xc]
  426044:	push   DWORD PTR [ebp+0x8]
  426047:	call   DWORD PTR ds:0x4280f4
  42604d:	mov    esi,eax
  42604f:	cmp    DWORD PTR [ebp-0x34],ebx
  426052:	je     0x42605d
  426054:	push   DWORD PTR [ebp-0x34]
  426057:	call   0x42454a
  42605c:	pop    ecx
  42605d:	mov    eax,esi
  42605f:	lea    esp,[ebp-0x54]
  426062:	call   0x42397b
  426067:	ret    
  426068:	push   0x1c
  42606a:	push   0x428db0
  42606f:	call   0x423940
  426074:	xor    esi,esi
  426076:	cmp    DWORD PTR ds:0x45fea0,esi
  42607c:	jne    0x4260b3
  42607e:	lea    eax,[ebp-0x1c]
  426081:	push   eax
  426082:	xor    edi,edi
  426084:	inc    edi
  426085:	push   edi
  426086:	push   0x428d84
  42608b:	push   edi
  42608c:	call   DWORD PTR ds:0x428104
  426092:	test   eax,eax
  426094:	je     0x42609e
  426096:	mov    DWORD PTR ds:0x45fea0,edi
  42609c:	jmp    0x4260b3
  42609e:	call   DWORD PTR ds:0x428018
  4260a4:	cmp    eax,0x78
  4260a7:	jne    0x4260b3
  4260a9:	mov    DWORD PTR ds:0x45fea0,0x2
  4260b3:	mov    eax,ds:0x45fea0
  4260b8:	cmp    eax,0x2
  4260bb:	je     0x4261ab
  4260c1:	cmp    eax,esi
  4260c3:	je     0x4261ab
  4260c9:	cmp    eax,0x1
  4260cc:	jne    0x4261d1
  4260d2:	mov    DWORD PTR [ebp-0x20],esi
  4260d5:	mov    DWORD PTR [ebp-0x24],esi
  4260d8:	cmp    DWORD PTR [ebp+0x18],esi
  4260db:	jne    0x4260e5
  4260dd:	mov    eax,ds:0x45fe94
  4260e2:	mov    DWORD PTR [ebp+0x18],eax
  4260e5:	push   esi
  4260e6:	push   esi
  4260e7:	push   DWORD PTR [ebp+0x10]
  4260ea:	push   DWORD PTR [ebp+0xc]
  4260ed:	xor    eax,eax
  4260ef:	cmp    DWORD PTR [ebp+0x20],esi
  4260f2:	setne  al
  4260f5:	lea    eax,[eax*8+0x1]
  4260fc:	push   eax
  4260fd:	push   DWORD PTR [ebp+0x18]
  426100:	call   DWORD PTR ds:0x4280f8
  426106:	mov    edi,eax
  426108:	mov    DWORD PTR [ebp-0x28],edi
  42610b:	test   edi,edi
  42610d:	je     0x4261d1
  426113:	and    DWORD PTR [ebp-0x4],0x0
  426117:	lea    ebx,[edi+edi*1]
  42611a:	mov    eax,ebx
  42611c:	add    eax,0x3
  42611f:	and    eax,0xfffffffc
  426122:	call   0x423990
  426127:	mov    DWORD PTR [ebp-0x18],esp
  42612a:	mov    esi,esp
  42612c:	mov    DWORD PTR [ebp-0x2c],esi
  42612f:	push   ebx
  426130:	push   0x0
  426132:	push   esi
  426133:	call   0x426240
  426138:	add    esp,0xc
  42613b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42613f:	jmp    0x426156
  426141:	xor    eax,eax
  426143:	inc    eax
  426144:	ret    
  426145:	mov    esp,DWORD PTR [ebp-0x18]
  426148:	call   0x426dd5
  42614d:	xor    esi,esi
  42614f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426153:	mov    edi,DWORD PTR [ebp-0x28]
  426156:	test   esi,esi
  426158:	jne    0x426171
  42615a:	push   edi
  42615b:	push   0x2
  42615d:	call   0x424a58
  426162:	pop    ecx
  426163:	pop    ecx
  426164:	mov    esi,eax
  426166:	test   esi,esi
  426168:	je     0x4261d1
  42616a:	mov    DWORD PTR [ebp-0x24],0x1
  426171:	push   edi
  426172:	push   esi
  426173:	push   DWORD PTR [ebp+0x10]
  426176:	push   DWORD PTR [ebp+0xc]
  426179:	push   0x1
  42617b:	push   DWORD PTR [ebp+0x18]
  42617e:	call   DWORD PTR ds:0x4280f8
  426184:	test   eax,eax
  426186:	je     0x426199
  426188:	push   DWORD PTR [ebp+0x14]
  42618b:	push   eax
  42618c:	push   esi
  42618d:	push   DWORD PTR [ebp+0x8]
  426190:	call   DWORD PTR ds:0x428104
  426196:	mov    DWORD PTR [ebp-0x20],eax
  426199:	cmp    DWORD PTR [ebp-0x24],0x0
  42619d:	je     0x4261a6
  42619f:	push   esi
  4261a0:	call   0x42454a
  4261a5:	pop    ecx
  4261a6:	mov    eax,DWORD PTR [ebp-0x20]
  4261a9:	jmp    0x426219
  4261ab:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261ae:	cmp    ebx,esi
  4261b0:	jne    0x4261b8
  4261b2:	mov    ebx,DWORD PTR ds:0x45fe84
  4261b8:	mov    edi,DWORD PTR [ebp+0x18]
  4261bb:	test   edi,edi
  4261bd:	jne    0x4261c5
  4261bf:	mov    edi,DWORD PTR ds:0x45fe94
  4261c5:	push   ebx
  4261c6:	call   0x426bbd
  4261cb:	pop    ecx
  4261cc:	cmp    eax,0xffffffff
  4261cf:	jne    0x4261d5
  4261d1:	xor    eax,eax
  4261d3:	jmp    0x426219
  4261d5:	cmp    eax,edi
  4261d7:	je     0x4261f7
  4261d9:	push   0x0
  4261db:	push   0x0
  4261dd:	lea    ecx,[ebp+0x10]
  4261e0:	push   ecx
  4261e1:	push   DWORD PTR [ebp+0xc]
  4261e4:	push   eax
  4261e5:	push   edi
  4261e6:	call   0x426c06
  4261eb:	add    esp,0x18
  4261ee:	mov    esi,eax
  4261f0:	test   esi,esi
  4261f2:	je     0x4261d1
  4261f4:	mov    DWORD PTR [ebp+0xc],esi
  4261f7:	push   DWORD PTR [ebp+0x14]
  4261fa:	push   DWORD PTR [ebp+0x10]
  4261fd:	push   DWORD PTR [ebp+0xc]
  426200:	push   DWORD PTR [ebp+0x8]
  426203:	push   ebx
  426204:	call   DWORD PTR ds:0x428100
  42620a:	mov    edi,eax
  42620c:	test   esi,esi
  42620e:	je     0x426217
  426210:	push   esi
  426211:	call   0x42454a
  426216:	pop    ecx
  426217:	mov    eax,edi
  426219:	lea    esp,[ebp-0x38]
  42621c:	call   0x42397b
  426221:	ret    
  426222:	mov    eax,ds:0x45fea4
  426227:	test   eax,eax
  426229:	je     0x42623a
  42622b:	push   DWORD PTR [esp+0x4]
  42622f:	call   eax
  426231:	test   eax,eax
  426233:	pop    ecx
  426234:	je     0x42623a
  426236:	xor    eax,eax
  426238:	inc    eax
  426239:	ret    
  42623a:	xor    eax,eax
  42623c:	ret    
  42623d:	int3   
  42623e:	int3   
  42623f:	int3   
  426240:	mov    edx,DWORD PTR [esp+0xc]
  426244:	mov    ecx,DWORD PTR [esp+0x4]
  426248:	test   edx,edx
  42624a:	je     0x42629b
  42624c:	xor    eax,eax
  42624e:	mov    al,BYTE PTR [esp+0x8]
  426252:	push   edi
  426253:	mov    edi,ecx
  426255:	cmp    edx,0x4
  426258:	jb     0x42628b
  42625a:	neg    ecx
  42625c:	and    ecx,0x3
  42625f:	je     0x42626d
  426261:	sub    edx,ecx
  426263:	mov    BYTE PTR [edi],al
  426265:	add    edi,0x1
  426268:	sub    ecx,0x1
  42626b:	jne    0x426263
  42626d:	mov    ecx,eax
  42626f:	shl    eax,0x8
  426272:	add    eax,ecx
  426274:	mov    ecx,eax
  426276:	shl    eax,0x10
  426279:	add    eax,ecx
  42627b:	mov    ecx,edx
  42627d:	and    edx,0x3
  426280:	shr    ecx,0x2
  426283:	je     0x42628b
  426285:	rep stos DWORD PTR es:[edi],eax
  426287:	test   edx,edx
  426289:	je     0x426295
  42628b:	mov    BYTE PTR [edi],al
  42628d:	add    edi,0x1
  426290:	sub    edx,0x1
  426293:	jne    0x42628b
  426295:	mov    eax,DWORD PTR [esp+0x8]
  426299:	pop    edi
  42629a:	ret    
  42629b:	mov    eax,DWORD PTR [esp+0x4]
  42629f:	ret    
  4262a0:	push   esi
  4262a1:	mov    esi,DWORD PTR [esp+0x8]
  4262a5:	test   esi,esi
  4262a7:	je     0x42642e
  4262ad:	push   DWORD PTR [esi+0x4]
  4262b0:	call   0x42454a
  4262b5:	push   DWORD PTR [esi+0x8]
  4262b8:	call   0x42454a
  4262bd:	push   DWORD PTR [esi+0xc]
  4262c0:	call   0x42454a
  4262c5:	push   DWORD PTR [esi+0x10]
  4262c8:	call   0x42454a
  4262cd:	push   DWORD PTR [esi+0x14]
  4262d0:	call   0x42454a
  4262d5:	push   DWORD PTR [esi+0x18]
  4262d8:	call   0x42454a
  4262dd:	push   DWORD PTR [esi]
  4262df:	call   0x42454a
  4262e4:	push   DWORD PTR [esi+0x20]
  4262e7:	call   0x42454a
  4262ec:	push   DWORD PTR [esi+0x24]
  4262ef:	call   0x42454a
  4262f4:	push   DWORD PTR [esi+0x28]
  4262f7:	call   0x42454a
  4262fc:	push   DWORD PTR [esi+0x2c]
  4262ff:	call   0x42454a
  426304:	push   DWORD PTR [esi+0x30]
  426307:	call   0x42454a
  42630c:	push   DWORD PTR [esi+0x34]
  42630f:	call   0x42454a
  426314:	push   DWORD PTR [esi+0x1c]
  426317:	call   0x42454a
  42631c:	push   DWORD PTR [esi+0x38]
  42631f:	call   0x42454a
  426324:	push   DWORD PTR [esi+0x3c]
  426327:	call   0x42454a
  42632c:	add    esp,0x40
  42632f:	push   DWORD PTR [esi+0x40]
  426332:	call   0x42454a
  426337:	push   DWORD PTR [esi+0x44]
  42633a:	call   0x42454a
  42633f:	push   DWORD PTR [esi+0x48]
  426342:	call   0x42454a
  426347:	push   DWORD PTR [esi+0x4c]
  42634a:	call   0x42454a
  42634f:	push   DWORD PTR [esi+0x50]
  426352:	call   0x42454a
  426357:	push   DWORD PTR [esi+0x54]
  42635a:	call   0x42454a
  42635f:	push   DWORD PTR [esi+0x58]
  426362:	call   0x42454a
  426367:	push   DWORD PTR [esi+0x5c]
  42636a:	call   0x42454a
  42636f:	push   DWORD PTR [esi+0x60]
  426372:	call   0x42454a
  426377:	push   DWORD PTR [esi+0x64]
  42637a:	call   0x42454a
  42637f:	push   DWORD PTR [esi+0x68]
  426382:	call   0x42454a
  426387:	push   DWORD PTR [esi+0x6c]
  42638a:	call   0x42454a
  42638f:	push   DWORD PTR [esi+0x70]
  426392:	call   0x42454a
  426397:	push   DWORD PTR [esi+0x74]
  42639a:	call   0x42454a
  42639f:	push   DWORD PTR [esi+0x78]
  4263a2:	call   0x42454a
  4263a7:	push   DWORD PTR [esi+0x7c]
  4263aa:	call   0x42454a
  4263af:	add    esp,0x40
  4263b2:	push   DWORD PTR [esi+0x80]
  4263b8:	call   0x42454a
  4263bd:	push   DWORD PTR [esi+0x84]
  4263c3:	call   0x42454a
  4263c8:	push   DWORD PTR [esi+0x88]
  4263ce:	call   0x42454a
  4263d3:	push   DWORD PTR [esi+0x8c]
  4263d9:	call   0x42454a
  4263de:	push   DWORD PTR [esi+0x90]
  4263e4:	call   0x42454a
  4263e9:	push   DWORD PTR [esi+0x94]
  4263ef:	call   0x42454a
  4263f4:	push   DWORD PTR [esi+0x98]
  4263fa:	call   0x42454a
  4263ff:	push   DWORD PTR [esi+0x9c]
  426405:	call   0x42454a
  42640a:	push   DWORD PTR [esi+0xa0]
  426410:	call   0x42454a
  426415:	push   DWORD PTR [esi+0xa4]
  42641b:	call   0x42454a
  426420:	push   DWORD PTR [esi+0xa8]
  426426:	call   0x42454a
  42642b:	add    esp,0x2c
  42642e:	pop    esi
  42642f:	ret    
  426430:	push   esi
  426431:	mov    esi,DWORD PTR [esp+0x8]
  426435:	test   esi,esi
  426437:	je     0x42648d
  426439:	mov    eax,DWORD PTR [esi]
  42643b:	mov    ecx,DWORD PTR ds:0x45fa14
  426441:	cmp    eax,DWORD PTR [ecx]
  426443:	je     0x426454
  426445:	cmp    eax,DWORD PTR ds:0x45f9e4
  42644b:	je     0x426454
  42644d:	push   eax
  42644e:	call   0x42454a
  426453:	pop    ecx
  426454:	mov    eax,DWORD PTR [esi+0x4]
  426457:	mov    ecx,DWORD PTR ds:0x45fa14
  42645d:	cmp    eax,DWORD PTR [ecx+0x4]
  426460:	je     0x426471
  426462:	cmp    eax,DWORD PTR ds:0x45f9e8
  426468:	je     0x426471
  42646a:	push   eax
  42646b:	call   0x42454a
  426470:	pop    ecx
  426471:	mov    esi,DWORD PTR [esi+0x8]
  426474:	mov    eax,ds:0x45fa14
  426479:	cmp    esi,DWORD PTR [eax+0x8]
  42647c:	je     0x42648d
  42647e:	cmp    esi,DWORD PTR ds:0x45f9ec
  426484:	je     0x42648d
  426486:	push   esi
  426487:	call   0x42454a
  42648c:	pop    ecx
  42648d:	pop    esi
  42648e:	ret    
  42648f:	push   esi
  426490:	mov    esi,DWORD PTR [esp+0x8]
  426494:	test   esi,esi
  426496:	je     0x426566
  42649c:	mov    eax,DWORD PTR [esi+0xc]
  42649f:	mov    ecx,DWORD PTR ds:0x45fa14
  4264a5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264a8:	je     0x4264b9
  4264aa:	cmp    eax,DWORD PTR ds:0x45f9f0
  4264b0:	je     0x4264b9
  4264b2:	push   eax
  4264b3:	call   0x42454a
  4264b8:	pop    ecx
  4264b9:	mov    eax,DWORD PTR [esi+0x10]
  4264bc:	mov    ecx,DWORD PTR ds:0x45fa14
  4264c2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264c5:	je     0x4264d6
  4264c7:	cmp    eax,DWORD PTR ds:0x45f9f4
  4264cd:	je     0x4264d6
  4264cf:	push   eax
  4264d0:	call   0x42454a
  4264d5:	pop    ecx
  4264d6:	mov    eax,DWORD PTR [esi+0x14]
  4264d9:	mov    ecx,DWORD PTR ds:0x45fa14
  4264df:	cmp    eax,DWORD PTR [ecx+0x14]
  4264e2:	je     0x4264f3
  4264e4:	cmp    eax,DWORD PTR ds:0x45f9f8
  4264ea:	je     0x4264f3
  4264ec:	push   eax
  4264ed:	call   0x42454a
  4264f2:	pop    ecx
  4264f3:	mov    eax,DWORD PTR [esi+0x18]
  4264f6:	mov    ecx,DWORD PTR ds:0x45fa14
  4264fc:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ff:	je     0x426510
  426501:	cmp    eax,DWORD PTR ds:0x45f9fc
  426507:	je     0x426510
  426509:	push   eax
  42650a:	call   0x42454a
  42650f:	pop    ecx
  426510:	mov    eax,DWORD PTR [esi+0x1c]
  426513:	mov    ecx,DWORD PTR ds:0x45fa14
  426519:	cmp    eax,DWORD PTR [ecx+0x1c]
  42651c:	je     0x42652d
  42651e:	cmp    eax,DWORD PTR ds:0x45fa00
  426524:	je     0x42652d
  426526:	push   eax
  426527:	call   0x42454a
  42652c:	pop    ecx
  42652d:	mov    eax,DWORD PTR [esi+0x20]
  426530:	mov    ecx,DWORD PTR ds:0x45fa14
  426536:	cmp    eax,DWORD PTR [ecx+0x20]
  426539:	je     0x42654a
  42653b:	cmp    eax,DWORD PTR ds:0x45fa04
  426541:	je     0x42654a
  426543:	push   eax
  426544:	call   0x42454a
  426549:	pop    ecx
  42654a:	mov    esi,DWORD PTR [esi+0x24]
  42654d:	mov    eax,ds:0x45fa14
  426552:	cmp    esi,DWORD PTR [eax+0x24]
  426555:	je     0x426566
  426557:	cmp    esi,DWORD PTR ds:0x45fa08
  42655d:	je     0x426566
  42655f:	push   esi
  426560:	call   0x42454a
  426565:	pop    ecx
  426566:	pop    esi
  426567:	ret    
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	push   ebp
  426571:	mov    ebp,esp
  426573:	push   esi
  426574:	xor    eax,eax
  426576:	push   eax
  426577:	push   eax
  426578:	push   eax
  426579:	push   eax
  42657a:	push   eax
  42657b:	push   eax
  42657c:	push   eax
  42657d:	push   eax
  42657e:	mov    edx,DWORD PTR [ebp+0xc]
  426581:	lea    ecx,[ecx+0x0]
  426584:	mov    al,BYTE PTR [edx]
  426586:	or     al,al
  426588:	je     0x426593
  42658a:	add    edx,0x1
  42658d:	bts    DWORD PTR [esp],eax
  426591:	jmp    0x426584
  426593:	mov    esi,DWORD PTR [ebp+0x8]
  426596:	or     ecx,0xffffffff
  426599:	lea    ecx,[ecx+0x0]
  42659c:	add    ecx,0x1
  42659f:	mov    al,BYTE PTR [esi]
  4265a1:	or     al,al
  4265a3:	je     0x4265ae
  4265a5:	add    esi,0x1
  4265a8:	bt     DWORD PTR [esp],eax
  4265ac:	jae    0x42659c
  4265ae:	mov    eax,ecx
  4265b0:	add    esp,0x20
  4265b3:	pop    esi
  4265b4:	leave  
  4265b5:	ret    
  4265b6:	int3   
  4265b7:	int3   
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    edx,DWORD PTR [esp+0x4]
  4265c4:	mov    ecx,DWORD PTR [esp+0x8]
  4265c8:	test   edx,0x3
  4265ce:	jne    0x42660c
  4265d0:	mov    eax,DWORD PTR [edx]
  4265d2:	cmp    al,BYTE PTR [ecx]
  4265d4:	jne    0x426604
  4265d6:	or     al,al
  4265d8:	je     0x426600
  4265da:	cmp    ah,BYTE PTR [ecx+0x1]
  4265dd:	jne    0x426604
  4265df:	or     ah,ah
  4265e1:	je     0x426600
  4265e3:	shr    eax,0x10
  4265e6:	cmp    al,BYTE PTR [ecx+0x2]
  4265e9:	jne    0x426604
  4265eb:	or     al,al
  4265ed:	je     0x426600
  4265ef:	cmp    ah,BYTE PTR [ecx+0x3]
  4265f2:	jne    0x426604
  4265f4:	add    ecx,0x4
  4265f7:	add    edx,0x4
  4265fa:	or     ah,ah
  4265fc:	jne    0x4265d0
  4265fe:	mov    edi,edi
  426600:	xor    eax,eax
  426602:	ret    
  426603:	nop
  426604:	sbb    eax,eax
  426606:	shl    eax,1
  426608:	add    eax,0x1
  42660b:	ret    
  42660c:	test   edx,0x1
  426612:	je     0x42662c
  426614:	mov    al,BYTE PTR [edx]
  426616:	add    edx,0x1
  426619:	cmp    al,BYTE PTR [ecx]
  42661b:	jne    0x426604
  42661d:	add    ecx,0x1
  426620:	or     al,al
  426622:	je     0x426600
  426624:	test   edx,0x2
  42662a:	je     0x4265d0
  42662c:	mov    ax,WORD PTR [edx]
  42662f:	add    edx,0x2
  426632:	cmp    al,BYTE PTR [ecx]
  426634:	jne    0x426604
  426636:	or     al,al
  426638:	je     0x426600
  42663a:	cmp    ah,BYTE PTR [ecx+0x1]
  42663d:	jne    0x426604
  42663f:	or     ah,ah
  426641:	je     0x426600
  426643:	add    ecx,0x2
  426646:	jmp    0x4265d0
  426648:	int3   
  426649:	int3   
  42664a:	int3   
  42664b:	int3   
  42664c:	int3   
  42664d:	int3   
  42664e:	int3   
  42664f:	int3   
  426650:	mov    eax,DWORD PTR [esp+0xc]
  426654:	test   eax,eax
  426656:	je     0x4266a2
  426658:	mov    edx,DWORD PTR [esp+0x4]
  42665c:	push   esi
  42665d:	push   edi
  42665e:	mov    esi,edx
  426660:	mov    edi,DWORD PTR [esp+0x10]
  426664:	or     edx,edi
  426666:	and    edx,0x3
  426669:	je     0x4266a3
  42666b:	test   eax,0x1
  426670:	je     0x426683
  426672:	mov    cl,BYTE PTR [esi]
  426674:	cmp    cl,BYTE PTR [edi]
  426676:	jne    0x4266d0
  426678:	add    esi,0x1
  42667b:	add    edi,0x1
  42667e:	sub    eax,0x1
  426681:	je     0x4266a0
  426683:	mov    cl,BYTE PTR [esi]
  426685:	mov    dl,BYTE PTR [edi]
  426687:	cmp    cl,dl
  426689:	jne    0x4266d0
  42668b:	mov    cl,BYTE PTR [esi+0x1]
  42668e:	mov    dl,BYTE PTR [edi+0x1]
  426691:	cmp    cl,dl
  426693:	jne    0x4266d0
  426695:	add    edi,0x2
  426698:	add    esi,0x2
  42669b:	sub    eax,0x2
  42669e:	jne    0x426683
  4266a0:	pop    edi
  4266a1:	pop    esi
  4266a2:	ret    
  4266a3:	mov    ecx,eax
  4266a5:	and    eax,0x3
  4266a8:	shr    ecx,0x2
  4266ab:	je     0x4266d8
  4266ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266af:	je     0x4266d8
  4266b1:	mov    ecx,DWORD PTR [esi-0x4]
  4266b4:	mov    edx,DWORD PTR [edi-0x4]
  4266b7:	cmp    cl,dl
  4266b9:	jne    0x4266cb
  4266bb:	cmp    ch,dh
  4266bd:	jne    0x4266cb
  4266bf:	shr    ecx,0x10
  4266c2:	shr    edx,0x10
  4266c5:	cmp    cl,dl
  4266c7:	jne    0x4266cb
  4266c9:	cmp    ch,dh
  4266cb:	mov    eax,0x0
  4266d0:	sbb    eax,eax
  4266d2:	pop    edi
  4266d3:	sbb    eax,0xffffffff
  4266d6:	pop    esi
  4266d7:	ret    
  4266d8:	test   eax,eax
  4266da:	je     0x4266a0
  4266dc:	mov    edx,DWORD PTR [esi]
  4266de:	mov    ecx,DWORD PTR [edi]
  4266e0:	cmp    dl,cl
  4266e2:	jne    0x4266cb
  4266e4:	sub    eax,0x1
  4266e7:	je     0x426705
  4266e9:	cmp    dh,ch
  4266eb:	jne    0x4266cb
  4266ed:	sub    eax,0x1
  4266f0:	je     0x426705
  4266f2:	and    ecx,0xff0000
  4266f8:	and    edx,0xff0000
  4266fe:	cmp    edx,ecx
  426700:	jne    0x4266cb
  426702:	sub    eax,0x1
  426705:	pop    edi
  426706:	pop    esi
  426707:	ret    
  426708:	int3   
  426709:	int3   
  42670a:	int3   
  42670b:	int3   
  42670c:	int3   
  42670d:	int3   
  42670e:	int3   
  42670f:	int3   
  426710:	push   ebp
  426711:	mov    ebp,esp
  426713:	push   edi
  426714:	push   esi
  426715:	push   ebx
  426716:	mov    ecx,DWORD PTR [ebp+0x10]
  426719:	jecxz  0x426742
  42671b:	mov    ebx,ecx
  42671d:	mov    edi,DWORD PTR [ebp+0x8]
  426720:	mov    esi,edi
  426722:	xor    eax,eax
  426724:	repnz scas al,BYTE PTR es:[edi]
  426726:	neg    ecx
  426728:	add    ecx,ebx
  42672a:	mov    edi,esi
  42672c:	mov    esi,DWORD PTR [ebp+0xc]
  42672f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426731:	mov    al,BYTE PTR [esi-0x1]
  426734:	xor    ecx,ecx
  426736:	cmp    al,BYTE PTR [edi-0x1]
  426739:	ja     0x426740
  42673b:	je     0x426742
  42673d:	sub    ecx,0x2
  426740:	not    ecx
  426742:	mov    eax,ecx
  426744:	pop    ebx
  426745:	pop    esi
  426746:	pop    edi
  426747:	leave  
  426748:	ret    
  426749:	int3   
  42674a:	int3   
  42674b:	int3   
  42674c:	int3   
  42674d:	int3   
  42674e:	int3   
  42674f:	int3   
  426750:	push   ebp
  426751:	mov    ebp,esp
  426753:	push   esi
  426754:	xor    eax,eax
  426756:	push   eax
  426757:	push   eax
  426758:	push   eax
  426759:	push   eax
  42675a:	push   eax
  42675b:	push   eax
  42675c:	push   eax
  42675d:	push   eax
  42675e:	mov    edx,DWORD PTR [ebp+0xc]
  426761:	lea    ecx,[ecx+0x0]
  426764:	mov    al,BYTE PTR [edx]
  426766:	or     al,al
  426768:	je     0x426773
  42676a:	add    edx,0x1
  42676d:	bts    DWORD PTR [esp],eax
  426771:	jmp    0x426764
  426773:	mov    esi,DWORD PTR [ebp+0x8]
  426776:	mov    edi,edi
  426778:	mov    al,BYTE PTR [esi]
  42677a:	or     al,al
  42677c:	je     0x42678a
  42677e:	add    esi,0x1
  426781:	bt     DWORD PTR [esp],eax
  426785:	jae    0x426778
  426787:	lea    eax,[esi-0x1]
  42678a:	add    esp,0x20
  42678d:	pop    esi
  42678e:	leave  
  42678f:	ret    
  426790:	push   ebp
  426791:	mov    ebp,esp
  426793:	push   ebx
  426794:	push   esi
  426795:	push   edi
  426796:	push   ebp
  426797:	push   0x0
  426799:	push   0x0
  42679b:	push   0x4267a8
  4267a0:	push   DWORD PTR [ebp+0x8]
  4267a3:	call   0x42721e
  4267a8:	pop    ebp
  4267a9:	pop    edi
  4267aa:	pop    esi
  4267ab:	pop    ebx
  4267ac:	mov    esp,ebp
  4267ae:	pop    ebp
  4267af:	ret    
  4267b0:	mov    ecx,DWORD PTR [esp+0x4]
  4267b4:	test   DWORD PTR [ecx+0x4],0x6
  4267bb:	mov    eax,0x1
  4267c0:	je     0x4267d1
  4267c2:	mov    eax,DWORD PTR [esp+0x8]
  4267c6:	mov    edx,DWORD PTR [esp+0x10]
  4267ca:	mov    DWORD PTR [edx],eax
  4267cc:	mov    eax,0x3
  4267d1:	ret    
  4267d2:	push   ebx
  4267d3:	push   esi
  4267d4:	push   edi
  4267d5:	mov    eax,DWORD PTR [esp+0x10]
  4267d9:	push   eax
  4267da:	push   0xfffffffe
  4267dc:	push   0x4267b0
  4267e1:	push   DWORD PTR fs:0x0
  4267e8:	mov    DWORD PTR fs:0x0,esp
  4267ef:	mov    eax,DWORD PTR [esp+0x20]
  4267f3:	mov    ebx,DWORD PTR [eax+0x8]
  4267f6:	mov    esi,DWORD PTR [eax+0xc]
  4267f9:	cmp    esi,0xffffffff
  4267fc:	je     0x42682c
  4267fe:	cmp    esi,DWORD PTR [esp+0x24]
  426802:	je     0x42682c
  426804:	lea    esi,[esi+esi*2]
  426807:	mov    ecx,DWORD PTR [ebx+esi*4]
  42680a:	mov    DWORD PTR [esp+0x8],ecx
  42680e:	mov    DWORD PTR [eax+0xc],ecx
  426811:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426816:	jne    0x42682a
  426818:	push   0x101
  42681d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426821:	call   0x426866
  426826:	call   DWORD PTR [ebx+esi*4+0x8]
  42682a:	jmp    0x4267ef
  42682c:	pop    DWORD PTR fs:0x0
  426833:	add    esp,0xc
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	ret    
  42683a:	xor    eax,eax
  42683c:	mov    ecx,DWORD PTR fs:0x0
  426843:	cmp    DWORD PTR [ecx+0x4],0x4267b0
  42684a:	jne    0x42685c
  42684c:	mov    edx,DWORD PTR [ecx+0xc]
  42684f:	mov    edx,DWORD PTR [edx+0xc]
  426852:	cmp    DWORD PTR [ecx+0x8],edx
  426855:	jne    0x42685c
  426857:	mov    eax,0x1
  42685c:	ret    
  42685d:	push   ebx
  42685e:	push   ecx
  42685f:	mov    ebx,0x45fa2c
  426864:	jmp    0x426870
  426866:	push   ebx
  426867:	push   ecx
  426868:	mov    ebx,0x45fa2c
  42686d:	mov    ecx,DWORD PTR [ebp+0x8]
  426870:	mov    DWORD PTR [ebx+0x8],ecx
  426873:	mov    DWORD PTR [ebx+0x4],eax
  426876:	mov    DWORD PTR [ebx+0xc],ebp
  426879:	pop    ecx
  42687a:	pop    ebx
  42687b:	ret    0x4
  42687e:	int3   
  42687f:	int3   
  426880:	push   ebp
  426881:	mov    ebp,esp
  426883:	push   edi
  426884:	push   esi
  426885:	mov    esi,DWORD PTR [ebp+0xc]
  426888:	mov    ecx,DWORD PTR [ebp+0x10]
  42688b:	mov    edi,DWORD PTR [ebp+0x8]
  42688e:	mov    eax,ecx
  426890:	mov    edx,ecx
  426892:	add    eax,esi
  426894:	cmp    edi,esi
  426896:	jbe    0x4268a0
  426898:	cmp    edi,eax
  42689a:	jb     0x426a1c
  4268a0:	test   edi,0x3
  4268a6:	jne    0x4268bc
  4268a8:	shr    ecx,0x2
  4268ab:	and    edx,0x3
  4268ae:	cmp    ecx,0x8
  4268b1:	jb     0x4268dc
  4268b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	jmp    DWORD PTR [edx*4+0x4269cc]
  4268bc:	mov    eax,edi
  4268be:	mov    edx,0x3
  4268c3:	sub    ecx,0x4
  4268c6:	jb     0x4268d4
  4268c8:	and    eax,0x3
  4268cb:	add    ecx,eax
  4268cd:	jmp    DWORD PTR [eax*4+0x4268e0]
  4268d4:	jmp    DWORD PTR [ecx*4+0x4269dc]
  4268db:	nop
  4268dc:	jmp    DWORD PTR [ecx*4+0x426960]
  4268e3:	nop
  4268e4:	lock push 0x691c0042
  4268ea:	inc    edx
  4268eb:	add    BYTE PTR [eax+0x69],al
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx],ah
  4268f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4268f7:	inc    esi
  4268f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4268fe:	add    al,cl
  426900:	jmp    0x289f107
  426905:	add    esi,0x3
  426908:	add    edi,0x3
  42690b:	cmp    ecx,0x8
  42690e:	jb     0x4268dc
  426910:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426912:	jmp    DWORD PTR [edx*4+0x4269cc]
  426919:	lea    ecx,[ecx+0x0]
  42691c:	and    edx,ecx
  42691e:	mov    al,BYTE PTR [esi]
  426920:	mov    BYTE PTR [edi],al
  426922:	mov    al,BYTE PTR [esi+0x1]
  426925:	shr    ecx,0x2
  426928:	mov    BYTE PTR [edi+0x1],al
  42692b:	add    esi,0x2
  42692e:	add    edi,0x2
  426931:	cmp    ecx,0x8
  426934:	jb     0x4268dc
  426936:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426938:	jmp    DWORD PTR [edx*4+0x4269cc]
  42693f:	nop
  426940:	and    edx,ecx
  426942:	mov    al,BYTE PTR [esi]
  426944:	mov    BYTE PTR [edi],al
  426946:	add    esi,0x1
  426949:	shr    ecx,0x2
  42694c:	add    edi,0x1
  42694f:	cmp    ecx,0x8
  426952:	jb     0x4268dc
  426954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426956:	jmp    DWORD PTR [edx*4+0x4269cc]
  42695d:	lea    ecx,[ecx+0x0]
  426960:	ret    
  426961:	imul   eax,DWORD PTR [edx+0x0],0x4269b0
  426968:	test   al,0x69
  42696a:	inc    edx
  42696b:	add    BYTE PTR [eax-0x67ffbd97],ah
  426971:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426978:	mov    BYTE PTR [ecx+0x42],ch
  42697b:	add    BYTE PTR [eax-0x74ffbd97],al
  426981:	inc    esp
  426982:	mov    fs,esp
  426984:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426994:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269b8:	lea    eax,[ecx*4+0x0]
  4269bf:	add    esi,eax
  4269c1:	add    edi,eax
  4269c3:	jmp    DWORD PTR [edx*4+0x4269cc]
  4269ca:	mov    edi,edi
  4269cc:	fsubr  QWORD PTR [ecx+0x42]
  4269cf:	add    ah,ah
  4269d1:	imul   eax,DWORD PTR [edx+0x0],0x4269f0
  4269d8:	add    al,0x6a
  4269da:	inc    edx
  4269db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269e1:	leave  
  4269e2:	ret    
  4269e3:	nop
  4269e4:	mov    al,BYTE PTR [esi]
  4269e6:	mov    BYTE PTR [edi],al
  4269e8:	mov    eax,DWORD PTR [ebp+0x8]
  4269eb:	pop    esi
  4269ec:	pop    edi
  4269ed:	leave  
  4269ee:	ret    
  4269ef:	nop
  4269f0:	mov    al,BYTE PTR [esi]
  4269f2:	mov    BYTE PTR [edi],al
  4269f4:	mov    al,BYTE PTR [esi+0x1]
  4269f7:	mov    BYTE PTR [edi+0x1],al
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	pop    esi
  4269fe:	pop    edi
  4269ff:	leave  
  426a00:	ret    
  426a01:	lea    ecx,[ecx+0x0]
  426a04:	mov    al,BYTE PTR [esi]
  426a06:	mov    BYTE PTR [edi],al
  426a08:	mov    al,BYTE PTR [esi+0x1]
  426a0b:	mov    BYTE PTR [edi+0x1],al
  426a0e:	mov    al,BYTE PTR [esi+0x2]
  426a11:	mov    BYTE PTR [edi+0x2],al
  426a14:	mov    eax,DWORD PTR [ebp+0x8]
  426a17:	pop    esi
  426a18:	pop    edi
  426a19:	leave  
  426a1a:	ret    
  426a1b:	nop
  426a1c:	lea    esi,[ecx+esi*1-0x4]
  426a20:	lea    edi,[ecx+edi*1-0x4]
  426a24:	test   edi,0x3
  426a2a:	jne    0x426a50
  426a2c:	shr    ecx,0x2
  426a2f:	and    edx,0x3
  426a32:	cmp    ecx,0x8
  426a35:	jb     0x426a44
  426a37:	std    
  426a38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a3a:	cld    
  426a3b:	jmp    DWORD PTR [edx*4+0x426b68]
  426a42:	mov    edi,edi
  426a44:	neg    ecx
  426a46:	jmp    DWORD PTR [ecx*4+0x426b18]
  426a4d:	lea    ecx,[ecx+0x0]
  426a50:	mov    eax,edi
  426a52:	mov    edx,0x3
  426a57:	cmp    ecx,0x4
  426a5a:	jb     0x426a68
  426a5c:	and    eax,0x3
  426a5f:	sub    ecx,eax
  426a61:	jmp    DWORD PTR [eax*4+0x426a6c]
  426a68:	jmp    DWORD PTR [ecx*4+0x426b68]
  426a6f:	nop
  426a70:	jl     0x426adc
  426a72:	inc    edx
  426a73:	add    BYTE PTR [eax-0x37ffbd96],ah
  426a79:	push   0x42
  426a7b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a81:	mov    BYTE PTR [edi+0x3],al
  426a84:	sub    esi,0x1
  426a87:	shr    ecx,0x2
  426a8a:	sub    edi,0x1
  426a8d:	cmp    ecx,0x8
  426a90:	jb     0x426a44
  426a92:	std    
  426a93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a95:	cld    
  426a96:	jmp    DWORD PTR [edx*4+0x426b68]
  426a9d:	lea    ecx,[ecx+0x0]
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	and    edx,ecx
  426aa5:	mov    BYTE PTR [edi+0x3],al
  426aa8:	mov    al,BYTE PTR [esi+0x2]
  426aab:	shr    ecx,0x2
  426aae:	mov    BYTE PTR [edi+0x2],al
  426ab1:	sub    esi,0x2
  426ab4:	sub    edi,0x2
  426ab7:	cmp    ecx,0x8
  426aba:	jb     0x426a44
  426abc:	std    
  426abd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abf:	cld    
  426ac0:	jmp    DWORD PTR [edx*4+0x426b68]
  426ac7:	nop
  426ac8:	mov    al,BYTE PTR [esi+0x3]
  426acb:	and    edx,ecx
  426acd:	mov    BYTE PTR [edi+0x3],al
  426ad0:	mov    al,BYTE PTR [esi+0x2]
  426ad3:	mov    BYTE PTR [edi+0x2],al
  426ad6:	mov    al,BYTE PTR [esi+0x1]
  426ad9:	shr    ecx,0x2
  426adc:	mov    BYTE PTR [edi+0x1],al
  426adf:	sub    esi,0x3
  426ae2:	sub    edi,0x3
  426ae5:	cmp    ecx,0x8
  426ae8:	jb     0x426a44
  426aee:	std    
  426aef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af1:	cld    
  426af2:	jmp    DWORD PTR [edx*4+0x426b68]
  426af9:	lea    ecx,[ecx+0x0]
  426afc:	sbb    al,0x6b
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],ah
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],ch
  426b06:	inc    edx
  426b07:	add    BYTE PTR [ebx+ebp*2],dh
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx+ebp*2],bh
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b13:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b17:	add    BYTE PTR [edi+0x6b],bl
  426b1a:	inc    edx
  426b1b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b21:	inc    esp
  426b22:	(bad)  
  426b23:	sbb    al,0x8b
  426b25:	inc    esp
  426b26:	mov    ds,WORD PTR [eax]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b30:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b40:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b50:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b54:	lea    eax,[ecx*4+0x0]
  426b5b:	add    esi,eax
  426b5d:	add    edi,eax
  426b5f:	jmp    DWORD PTR [edx*4+0x426b68]
  426b66:	mov    edi,edi
  426b68:	js     0x426bd5
  426b6a:	inc    edx
  426b6b:	add    BYTE PTR [eax-0x6fffbd95],al
  426b71:	imul   eax,DWORD PTR [edx+0x0],0xffffffa4
  426b75:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b79:	inc    ebp
  426b7a:	or     BYTE PTR [esi+0x5f],bl
  426b7d:	leave  
  426b7e:	ret    
  426b7f:	nop
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    eax,DWORD PTR [ebp+0x8]
  426b89:	pop    esi
  426b8a:	pop    edi
  426b8b:	leave  
  426b8c:	ret    
  426b8d:	lea    ecx,[ecx+0x0]
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    al,BYTE PTR [esi+0x2]
  426b99:	mov    BYTE PTR [edi+0x2],al
  426b9c:	mov    eax,DWORD PTR [ebp+0x8]
  426b9f:	pop    esi
  426ba0:	pop    edi
  426ba1:	leave  
  426ba2:	ret    
  426ba3:	nop
  426ba4:	mov    al,BYTE PTR [esi+0x3]
  426ba7:	mov    BYTE PTR [edi+0x3],al
  426baa:	mov    al,BYTE PTR [esi+0x2]
  426bad:	mov    BYTE PTR [edi+0x2],al
  426bb0:	mov    al,BYTE PTR [esi+0x1]
  426bb3:	mov    BYTE PTR [edi+0x1],al
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	pop    esi
  426bba:	pop    edi
  426bbb:	leave  
  426bbc:	ret    
  426bbd:	push   ebp
  426bbe:	mov    ebp,esp
  426bc0:	sub    esp,0xc
  426bc3:	mov    eax,ds:0x45f510
  426bc8:	xor    eax,DWORD PTR [ebp+0x4]
  426bcb:	and    BYTE PTR [ebp-0x6],0x0
  426bcf:	push   0x6
  426bd1:	mov    DWORD PTR [ebp-0x4],eax
  426bd4:	lea    eax,[ebp-0xc]
  426bd7:	push   eax
  426bd8:	push   0x1004
  426bdd:	push   DWORD PTR [ebp+0x8]
  426be0:	call   DWORD PTR ds:0x428108
  426be6:	test   eax,eax
  426be8:	jne    0x426bef
  426bea:	or     eax,0xffffffff
  426bed:	jmp    0x426bf9
  426bef:	lea    eax,[ebp-0xc]
  426bf2:	push   eax
  426bf3:	call   0x426efe
  426bf8:	pop    ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	xor    ecx,DWORD PTR [ebp+0x4]
  426bff:	call   0x42400c
  426c04:	leave  
  426c05:	ret    
  426c06:	push   0x38
  426c08:	push   0x428ee8
  426c0d:	call   0x423940
  426c12:	mov    eax,ds:0x45f510
  426c17:	xor    eax,DWORD PTR [ebp+0x4]
  426c1a:	mov    DWORD PTR [ebp-0x1c],eax
  426c1d:	xor    edi,edi
  426c1f:	mov    DWORD PTR [ebp-0x20],edi
  426c22:	mov    DWORD PTR [ebp-0x24],edi
  426c25:	mov    eax,DWORD PTR [ebp+0x14]
  426c28:	mov    ebx,DWORD PTR [eax]
  426c2a:	mov    DWORD PTR [ebp-0x28],ebx
  426c2d:	mov    DWORD PTR [ebp-0x2c],edi
  426c30:	mov    eax,DWORD PTR [ebp+0x8]
  426c33:	cmp    eax,DWORD PTR [ebp+0xc]
  426c36:	je     0x426daf
  426c3c:	lea    ecx,[ebp-0x40]
  426c3f:	push   ecx
  426c40:	push   eax
  426c41:	mov    esi,DWORD PTR ds:0x4280d4
  426c47:	call   esi
  426c49:	test   eax,eax
  426c4b:	je     0x426c6d
  426c4d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c51:	jne    0x426c6d
  426c53:	lea    eax,[ebp-0x40]
  426c56:	push   eax
  426c57:	push   DWORD PTR [ebp+0xc]
  426c5a:	call   esi
  426c5c:	test   eax,eax
  426c5e:	je     0x426c6d
  426c60:	cmp    DWORD PTR [ebp-0x40],0x1
  426c64:	jne    0x426c6d
  426c66:	mov    DWORD PTR [ebp-0x2c],0x1
  426c6d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c70:	je     0x426c8c
  426c72:	cmp    ebx,0xffffffff
  426c75:	je     0x426c7b
  426c77:	mov    esi,ebx
  426c79:	jmp    0x426c87
  426c7b:	push   DWORD PTR [ebp+0x10]
  426c7e:	call   0x423f50
  426c83:	pop    ecx
  426c84:	mov    esi,eax
  426c86:	inc    esi
  426c87:	mov    DWORD PTR [ebp-0x44],esi
  426c8a:	jmp    0x426c8f
  426c8c:	mov    esi,DWORD PTR [ebp-0x44]
  426c8f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c92:	jne    0x426cae
  426c94:	push   edi
  426c95:	push   edi
  426c96:	push   ebx
  426c97:	push   DWORD PTR [ebp+0x10]
  426c9a:	push   0x1
  426c9c:	push   DWORD PTR [ebp+0x8]
  426c9f:	call   DWORD PTR ds:0x4280f8
  426ca5:	mov    esi,eax
  426ca7:	mov    DWORD PTR [ebp-0x44],esi
  426caa:	cmp    esi,edi
  426cac:	je     0x426d06
  426cae:	mov    DWORD PTR [ebp-0x4],edi
  426cb1:	lea    eax,[esi+esi*1]
  426cb4:	add    eax,0x3
  426cb7:	and    eax,0xfffffffc
  426cba:	call   0x423990
  426cbf:	mov    DWORD PTR [ebp-0x18],esp
  426cc2:	mov    ebx,esp
  426cc4:	mov    DWORD PTR [ebp-0x48],ebx
  426cc7:	lea    eax,[esi+esi*1]
  426cca:	push   eax
  426ccb:	push   edi
  426ccc:	push   ebx
  426ccd:	call   0x426240
  426cd2:	add    esp,0xc
  426cd5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cd9:	jmp    0x426cf2
  426cdb:	xor    eax,eax
  426cdd:	inc    eax
  426cde:	ret    
  426cdf:	mov    esp,DWORD PTR [ebp-0x18]
  426ce2:	call   0x426dd5
  426ce7:	xor    edi,edi
  426ce9:	xor    ebx,ebx
  426ceb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cef:	mov    esi,DWORD PTR [ebp-0x44]
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426d14
  426cf6:	push   esi
  426cf7:	push   0x2
  426cf9:	call   0x424a58
  426cfe:	pop    ecx
  426cff:	pop    ecx
  426d00:	mov    ebx,eax
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d0d
  426d06:	xor    eax,eax
  426d08:	jmp    0x426dc1
  426d0d:	mov    DWORD PTR [ebp-0x24],0x1
  426d14:	push   esi
  426d15:	push   ebx
  426d16:	push   DWORD PTR [ebp-0x28]
  426d19:	push   DWORD PTR [ebp+0x10]
  426d1c:	push   0x1
  426d1e:	push   DWORD PTR [ebp+0x8]
  426d21:	call   DWORD PTR ds:0x4280f8
  426d27:	test   eax,eax
  426d29:	je     0x426db2
  426d2f:	cmp    DWORD PTR [ebp+0x18],edi
  426d32:	je     0x426d54
  426d34:	push   edi
  426d35:	push   edi
  426d36:	push   DWORD PTR [ebp+0x1c]
  426d39:	push   DWORD PTR [ebp+0x18]
  426d3c:	push   esi
  426d3d:	push   ebx
  426d3e:	push   edi
  426d3f:	push   DWORD PTR [ebp+0xc]
  426d42:	call   DWORD PTR ds:0x428088
  426d48:	test   eax,eax
  426d4a:	je     0x426db2
  426d4c:	mov    eax,DWORD PTR [ebp+0x18]
  426d4f:	mov    DWORD PTR [ebp-0x20],eax
  426d52:	jmp    0x426db2
  426d54:	cmp    DWORD PTR [ebp-0x2c],edi
  426d57:	jne    0x426d6f
  426d59:	push   edi
  426d5a:	push   edi
  426d5b:	push   edi
  426d5c:	push   edi
  426d5d:	push   esi
  426d5e:	push   ebx
  426d5f:	push   edi
  426d60:	push   DWORD PTR [ebp+0xc]
  426d63:	call   DWORD PTR ds:0x428088
  426d69:	mov    esi,eax
  426d6b:	cmp    esi,edi
  426d6d:	je     0x426db2
  426d6f:	push   esi
  426d70:	push   0x1
  426d72:	call   0x424a58
  426d77:	pop    ecx
  426d78:	pop    ecx
  426d79:	mov    DWORD PTR [ebp-0x20],eax
  426d7c:	cmp    eax,edi
  426d7e:	je     0x426db2
  426d80:	push   edi
  426d81:	push   edi
  426d82:	push   esi
  426d83:	push   eax
  426d84:	push   esi
  426d85:	push   ebx
  426d86:	push   edi
  426d87:	push   DWORD PTR [ebp+0xc]
  426d8a:	call   DWORD PTR ds:0x428088
  426d90:	cmp    eax,edi
  426d92:	jne    0x426da2
  426d94:	push   DWORD PTR [ebp-0x20]
  426d97:	call   0x42454a
  426d9c:	pop    ecx
  426d9d:	mov    DWORD PTR [ebp-0x20],edi
  426da0:	jmp    0x426db2
  426da2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426da6:	je     0x426db2
  426da8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dab:	mov    DWORD PTR [ecx],eax
  426dad:	jmp    0x426db2
  426daf:	mov    ebx,DWORD PTR [ebp-0x48]
  426db2:	cmp    DWORD PTR [ebp-0x24],edi
  426db5:	je     0x426dbe
  426db7:	push   ebx
  426db8:	call   0x42454a
  426dbd:	pop    ecx
  426dbe:	mov    eax,DWORD PTR [ebp-0x20]
  426dc1:	lea    esp,[ebp-0x54]
  426dc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dc7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dca:	call   0x42400c
  426dcf:	call   0x42397b
  426dd4:	ret    
  426dd5:	push   ebp
  426dd6:	mov    ebp,esp
  426dd8:	sub    esp,0x48
  426ddb:	push   ebx
  426ddc:	push   esi
  426ddd:	push   edi
  426dde:	push   0x4
  426de0:	pop    eax
  426de1:	call   0x423990
  426de6:	mov    ebx,esp
  426de8:	push   0x1c
  426dea:	lea    eax,[ebp-0x24]
  426ded:	push   eax
  426dee:	push   ebx
  426def:	call   DWORD PTR ds:0x42803c
  426df5:	test   eax,eax
  426df7:	je     0x426e6a
  426df9:	mov    edi,DWORD PTR [ebp-0x20]
  426dfc:	lea    eax,[ebp-0x48]
  426dff:	push   eax
  426e00:	call   DWORD PTR ds:0x428040
  426e06:	mov    eax,DWORD PTR [ebp-0x44]
  426e09:	lea    esi,[eax-0x1]
  426e0c:	not    esi
  426e0e:	and    esi,ebx
  426e10:	sub    esi,eax
  426e12:	mov    DWORD PTR [ebp-0x4],eax
  426e15:	mov    eax,ds:0x45fba4
  426e1a:	mov    ecx,eax
  426e1c:	dec    ecx
  426e1d:	neg    ecx
  426e1f:	sbb    ecx,ecx
  426e21:	and    ecx,0xffff1000
  426e27:	add    ecx,0x11000
  426e2d:	add    ecx,edi
  426e2f:	cmp    esi,ecx
  426e31:	jb     0x426e6a
  426e33:	cmp    eax,0x1
  426e36:	je     0x426e82
  426e38:	mov    ebx,edi
  426e3a:	mov    edi,0x1000
  426e3f:	push   0x1c
  426e41:	lea    eax,[ebp-0x24]
  426e44:	push   eax
  426e45:	push   ebx
  426e46:	call   DWORD PTR ds:0x42803c
  426e4c:	test   eax,eax
  426e4e:	je     0x426e6a
  426e50:	add    ebx,DWORD PTR [ebp-0x18]
  426e53:	test   DWORD PTR [ebp-0x14],edi
  426e56:	je     0x426e3f
  426e58:	test   BYTE PTR [ebp-0xf],0x1
  426e5c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e5f:	je     0x426e66
  426e61:	xor    eax,eax
  426e63:	inc    eax
  426e64:	jmp    0x426e9e
  426e66:	cmp    esi,ebx
  426e68:	jae    0x426e6e
  426e6a:	xor    eax,eax
  426e6c:	jmp    0x426e9e
  426e6e:	push   0x4
  426e70:	push   edi
  426e71:	push   DWORD PTR [ebp-0x4]
  426e74:	push   ebx
  426e75:	call   DWORD PTR ds:0x42802c
  426e7b:	mov    eax,ds:0x45fba4
  426e80:	jmp    0x426e84
  426e82:	mov    ebx,esi
  426e84:	dec    eax
  426e85:	neg    eax
  426e87:	sbb    eax,eax
  426e89:	and    eax,0x103
  426e8e:	lea    ecx,[ebp-0x8]
  426e91:	push   ecx
  426e92:	inc    eax
  426e93:	push   eax
  426e94:	push   DWORD PTR [ebp-0x4]
  426e97:	push   ebx
  426e98:	call   DWORD PTR ds:0x428050
  426e9e:	lea    esp,[ebp-0x54]
  426ea1:	pop    edi
  426ea2:	pop    esi
  426ea3:	pop    ebx
  426ea4:	leave  
  426ea5:	ret    
  426ea6:	int3   
  426ea7:	int3   
  426ea8:	int3   
  426ea9:	int3   
  426eaa:	int3   
  426eab:	int3   
  426eac:	int3   
  426ead:	int3   
  426eae:	int3   
  426eaf:	int3   
  426eb0:	push   ebp
  426eb1:	mov    ebp,esp
  426eb3:	push   edi
  426eb4:	push   esi
  426eb5:	push   ebx
  426eb6:	mov    esi,DWORD PTR [ebp+0xc]
  426eb9:	mov    edi,DWORD PTR [ebp+0x8]
  426ebc:	mov    al,0xff
  426ebe:	mov    edi,edi
  426ec0:	or     al,al
  426ec2:	je     0x426ef6
  426ec4:	mov    al,BYTE PTR [esi]
  426ec6:	add    esi,0x1
  426ec9:	mov    ah,BYTE PTR [edi]
  426ecb:	add    edi,0x1
  426ece:	cmp    ah,al
  426ed0:	je     0x426ec0
  426ed2:	sub    al,0x41
  426ed4:	cmp    al,0x1a
  426ed6:	sbb    cl,cl
  426ed8:	and    cl,0x20
  426edb:	add    al,cl
  426edd:	add    al,0x41
  426edf:	xchg   al,ah
  426ee1:	sub    al,0x41
  426ee3:	cmp    al,0x1a
  426ee5:	sbb    cl,cl
  426ee7:	and    cl,0x20
  426eea:	add    al,cl
  426eec:	add    al,0x41
  426eee:	cmp    al,ah
  426ef0:	je     0x426ec0
  426ef2:	sbb    al,al
  426ef4:	sbb    al,0xff
  426ef6:	movsx  eax,al
  426ef9:	pop    ebx
  426efa:	pop    esi
  426efb:	pop    edi
  426efc:	leave  
  426efd:	ret    
  426efe:	push   esi
  426eff:	push   edi
  426f00:	call   0x4237f3
  426f05:	mov    edi,DWORD PTR [eax+0x64]
  426f08:	cmp    edi,DWORD PTR ds:0x45f66c
  426f0e:	je     0x426f17
  426f10:	call   0x424c9f
  426f15:	mov    edi,eax
  426f17:	mov    esi,DWORD PTR [esp+0xc]
  426f1b:	cmp    DWORD PTR [edi+0x28],0x1
  426f1f:	movzx  eax,BYTE PTR [esi]
  426f22:	jle    0x426f32
  426f24:	push   0x8
  426f26:	push   eax
  426f27:	push   edi
  426f28:	call   0x426f86
  426f2d:	add    esp,0xc
  426f30:	jmp    0x426f3c
  426f32:	mov    ecx,DWORD PTR [edi+0x48]
  426f35:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f39:	and    eax,0x8
  426f3c:	test   eax,eax
  426f3e:	je     0x426f43
  426f40:	inc    esi
  426f41:	jmp    0x426f1b
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	cmp    ecx,0x2d
  426f4a:	mov    edx,ecx
  426f4c:	je     0x426f53
  426f4e:	cmp    ecx,0x2b
  426f51:	jne    0x426f57
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	xor    eax,eax
  426f59:	cmp    ecx,0x30
  426f5c:	jl     0x426f68
  426f5e:	cmp    ecx,0x39
  426f61:	jg     0x426f68
  426f63:	sub    ecx,0x30
  426f66:	jmp    0x426f6b
  426f68:	or     ecx,0xffffffff
  426f6b:	cmp    ecx,0xffffffff
  426f6e:	je     0x426f7c
  426f70:	lea    eax,[eax+eax*4]
  426f73:	lea    eax,[ecx+eax*2]
  426f76:	movzx  ecx,BYTE PTR [esi]
  426f79:	inc    esi
  426f7a:	jmp    0x426f59
  426f7c:	cmp    edx,0x2d
  426f7f:	pop    edi
  426f80:	pop    esi
  426f81:	jne    0x426f85
  426f83:	neg    eax
  426f85:	ret    
  426f86:	push   ebp
  426f87:	mov    ebp,esp
  426f89:	push   ecx
  426f8a:	mov    eax,DWORD PTR [ebp+0xc]
  426f8d:	lea    ecx,[eax+0x1]
  426f90:	cmp    ecx,0x100
  426f96:	mov    ecx,DWORD PTR [ebp+0x8]
  426f99:	ja     0x426fa4
  426f9b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f9e:	movzx  eax,WORD PTR [ecx+eax*2]
  426fa2:	jmp    0x426ff8
  426fa4:	push   esi
  426fa5:	mov    edx,eax
  426fa7:	sar    edx,0x8
  426faa:	push   edi
  426fab:	mov    edi,DWORD PTR [ecx+0x48]
  426fae:	movzx  esi,dl
  426fb1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fb6:	pop    edi
  426fb7:	pop    esi
  426fb8:	je     0x426fc9
  426fba:	and    BYTE PTR [ebp-0x2],0x0
  426fbe:	push   0x2
  426fc0:	mov    BYTE PTR [ebp-0x3],al
  426fc3:	mov    BYTE PTR [ebp-0x4],dl
  426fc6:	pop    eax
  426fc7:	jmp    0x426fd3
  426fc9:	and    BYTE PTR [ebp-0x3],0x0
  426fcd:	mov    BYTE PTR [ebp-0x4],al
  426fd0:	xor    eax,eax
  426fd2:	inc    eax
  426fd3:	push   0x1
  426fd5:	push   DWORD PTR [ecx+0x14]
  426fd8:	push   DWORD PTR [ecx+0x4]
  426fdb:	lea    ecx,[ebp+0xe]
  426fde:	push   ecx
  426fdf:	push   eax
  426fe0:	lea    eax,[ebp-0x4]
  426fe3:	push   eax
  426fe4:	push   0x1
  426fe6:	call   0x426068
  426feb:	add    esp,0x1c
  426fee:	test   eax,eax
  426ff0:	jne    0x426ff4
  426ff2:	leave  
  426ff3:	ret    
  426ff4:	movzx  eax,WORD PTR [ebp+0xe]
  426ff8:	and    eax,DWORD PTR [ebp+0x10]
  426ffb:	leave  
  426ffc:	ret    
  426ffd:	int3   
  426ffe:	int3   
  426fff:	int3   
  427000:	mov    eax,DWORD PTR [esp+0x8]
  427004:	mov    ecx,DWORD PTR [esp+0x10]
  427008:	or     ecx,eax
  42700a:	mov    ecx,DWORD PTR [esp+0xc]
  42700e:	jne    0x427019
  427010:	mov    eax,DWORD PTR [esp+0x4]
  427014:	mul    ecx
  427016:	ret    0x10
  427019:	push   ebx
  42701a:	mul    ecx
  42701c:	mov    ebx,eax
  42701e:	mov    eax,DWORD PTR [esp+0x8]
  427022:	mul    DWORD PTR [esp+0x14]
  427026:	add    ebx,eax
  427028:	mov    eax,DWORD PTR [esp+0x8]
  42702c:	mul    ecx
  42702e:	add    edx,ebx
  427030:	pop    ebx
  427031:	ret    0x10
  427034:	int3   
  427035:	int3   
  427036:	int3   
  427037:	int3   
  427038:	int3   
  427039:	int3   
  42703a:	int3   
  42703b:	int3   
  42703c:	int3   
  42703d:	int3   
  42703e:	int3   
  42703f:	int3   
  427040:	push   ebp
  427041:	mov    ebp,esp
  427043:	push   edi
  427044:	push   esi
  427045:	push   ebx
  427046:	mov    ecx,DWORD PTR [ebp+0x10]
  427049:	or     ecx,ecx
  42704b:	je     0x42709a
  42704d:	mov    esi,DWORD PTR [ebp+0x8]
  427050:	mov    edi,DWORD PTR [ebp+0xc]
  427053:	mov    bh,0x41
  427055:	mov    bl,0x5a
  427057:	mov    dh,0x20
  427059:	lea    ecx,[ecx+0x0]
  42705c:	mov    ah,BYTE PTR [esi]
  42705e:	or     ah,ah
  427060:	mov    al,BYTE PTR [edi]
  427062:	je     0x42708b
  427064:	or     al,al
  427066:	je     0x42708b
  427068:	add    esi,0x1
  42706b:	add    edi,0x1
  42706e:	cmp    ah,bh
  427070:	jb     0x427078
  427072:	cmp    ah,bl
  427074:	ja     0x427078
  427076:	add    ah,dh
  427078:	cmp    al,bh
  42707a:	jb     0x427082
  42707c:	cmp    al,bl
  42707e:	ja     0x427082
  427080:	add    al,dh
  427082:	cmp    ah,al
  427084:	jne    0x427091
  427086:	sub    ecx,0x1
  427089:	jne    0x42705c
  42708b:	xor    ecx,ecx
  42708d:	cmp    ah,al
  42708f:	je     0x42709a
  427091:	mov    ecx,0xffffffff
  427096:	jb     0x42709a
  427098:	neg    ecx
  42709a:	mov    eax,ecx
  42709c:	pop    ebx
  42709d:	pop    esi
  42709e:	pop    edi
  42709f:	leave  
  4270a0:	ret    
  4270a1:	int3   
  4270a2:	int3   
  4270a3:	int3   
  4270a4:	int3   
  4270a5:	int3   
  4270a6:	int3   
  4270a7:	int3   
  4270a8:	int3   
  4270a9:	int3   
  4270aa:	int3   
  4270ab:	int3   
  4270ac:	int3   
  4270ad:	int3   
  4270ae:	int3   
  4270af:	int3   
  4270b0:	push   esi
  4270b1:	mov    eax,DWORD PTR [esp+0x14]
  4270b5:	or     eax,eax
  4270b7:	jne    0x4270e1
  4270b9:	mov    ecx,DWORD PTR [esp+0x10]
  4270bd:	mov    eax,DWORD PTR [esp+0xc]
  4270c1:	xor    edx,edx
  4270c3:	div    ecx
  4270c5:	mov    ebx,eax
  4270c7:	mov    eax,DWORD PTR [esp+0x8]
  4270cb:	div    ecx
  4270cd:	mov    esi,eax
  4270cf:	mov    eax,ebx
  4270d1:	mul    DWORD PTR [esp+0x10]
  4270d5:	mov    ecx,eax
  4270d7:	mov    eax,esi
  4270d9:	mul    DWORD PTR [esp+0x10]
  4270dd:	add    edx,ecx
  4270df:	jmp    0x427128
  4270e1:	mov    ecx,eax
  4270e3:	mov    ebx,DWORD PTR [esp+0x10]
  4270e7:	mov    edx,DWORD PTR [esp+0xc]
  4270eb:	mov    eax,DWORD PTR [esp+0x8]
  4270ef:	shr    ecx,1
  4270f1:	rcr    ebx,1
  4270f3:	shr    edx,1
  4270f5:	rcr    eax,1
  4270f7:	or     ecx,ecx
  4270f9:	jne    0x4270ef
  4270fb:	div    ebx
  4270fd:	mov    esi,eax
  4270ff:	mul    DWORD PTR [esp+0x14]
  427103:	mov    ecx,eax
  427105:	mov    eax,DWORD PTR [esp+0x10]
  427109:	mul    esi
  42710b:	add    edx,ecx
  42710d:	jb     0x42711d
  42710f:	cmp    edx,DWORD PTR [esp+0xc]
  427113:	ja     0x42711d
  427115:	jb     0x427126
  427117:	cmp    eax,DWORD PTR [esp+0x8]
  42711b:	jbe    0x427126
  42711d:	dec    esi
  42711e:	sub    eax,DWORD PTR [esp+0x10]
  427122:	sbb    edx,DWORD PTR [esp+0x14]
  427126:	xor    ebx,ebx
  427128:	sub    eax,DWORD PTR [esp+0x8]
  42712c:	sbb    edx,DWORD PTR [esp+0xc]
  427130:	neg    edx
  427132:	neg    eax
  427134:	sbb    edx,0x0
  427137:	mov    ecx,edx
  427139:	mov    edx,ebx
  42713b:	mov    ebx,ecx
  42713d:	mov    ecx,eax
  42713f:	mov    eax,esi
  427141:	pop    esi
  427142:	ret    0x10
  427145:	int3   
  427146:	int3   
  427147:	int3   
  427148:	int3   
  427149:	int3   
  42714a:	int3   
  42714b:	int3   
  42714c:	int3   
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	lea    eax,[edx-0x1]
  427153:	pop    ebx
  427154:	ret    
  427155:	lea    esp,[esp+0x0]
  42715c:	lea    esp,[esp+0x0]
  427160:	xor    eax,eax
  427162:	mov    al,BYTE PTR [esp+0x8]
  427166:	push   ebx
  427167:	mov    ebx,eax
  427169:	shl    eax,0x8
  42716c:	mov    edx,DWORD PTR [esp+0x8]
  427170:	test   edx,0x3
  427176:	je     0x42718d
  427178:	mov    cl,BYTE PTR [edx]
  42717a:	add    edx,0x1
  42717d:	cmp    cl,bl
  42717f:	je     0x427150
  427181:	test   cl,cl
  427183:	je     0x4271d6
  427185:	test   edx,0x3
  42718b:	jne    0x427178
  42718d:	or     ebx,eax
  42718f:	push   edi
  427190:	mov    eax,ebx
  427192:	shl    ebx,0x10
  427195:	push   esi
  427196:	or     ebx,eax
  427198:	mov    ecx,DWORD PTR [edx]
  42719a:	mov    edi,0x7efefeff
  42719f:	mov    eax,ecx
  4271a1:	mov    esi,edi
  4271a3:	xor    ecx,ebx
  4271a5:	add    esi,eax
  4271a7:	add    edi,ecx
  4271a9:	xor    ecx,0xffffffff
  4271ac:	xor    eax,0xffffffff
  4271af:	xor    ecx,edi
  4271b1:	xor    eax,esi
  4271b3:	add    edx,0x4
  4271b6:	and    ecx,0x81010100
  4271bc:	jne    0x4271da
  4271be:	and    eax,0x81010100
  4271c3:	je     0x427198
  4271c5:	and    eax,0x1010100
  4271ca:	jne    0x4271d4
  4271cc:	and    esi,0x80000000
  4271d2:	jne    0x427198
  4271d4:	pop    esi
  4271d5:	pop    edi
  4271d6:	pop    ebx
  4271d7:	xor    eax,eax
  4271d9:	ret    
  4271da:	mov    eax,DWORD PTR [edx-0x4]
  4271dd:	cmp    al,bl
  4271df:	je     0x427217
  4271e1:	test   al,al
  4271e3:	je     0x4271d4
  4271e5:	cmp    ah,bl
  4271e7:	je     0x427210
  4271e9:	test   ah,ah
  4271eb:	je     0x4271d4
  4271ed:	shr    eax,0x10
  4271f0:	cmp    al,bl
  4271f2:	je     0x427209
  4271f4:	test   al,al
  4271f6:	je     0x4271d4
  4271f8:	cmp    ah,bl
  4271fa:	je     0x427202
  4271fc:	test   ah,ah
  4271fe:	je     0x4271d4
  427200:	jmp    0x427198
  427202:	pop    esi
  427203:	pop    edi
  427204:	lea    eax,[edx-0x1]
  427207:	pop    ebx
  427208:	ret    
  427209:	lea    eax,[edx-0x2]
  42720c:	pop    esi
  42720d:	pop    edi
  42720e:	pop    ebx
  42720f:	ret    
  427210:	lea    eax,[edx-0x3]
  427213:	pop    esi
  427214:	pop    edi
  427215:	pop    ebx
  427216:	ret    
  427217:	lea    eax,[edx-0x4]
  42721a:	pop    esi
  42721b:	pop    edi
  42721c:	pop    ebx
  42721d:	ret    
  42721e:	jmp    DWORD PTR ds:0x428054
