
2ce6ee956ec3e4df9915b00caf0047cd0fb5ddcbadb78df2ec0e7d2542925c30.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401020
  401008:	pop    ebp
  401009:	ret    
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	mov    eax,DWORD PTR [eax-0x4]
  401019:	pop    ebp
  40101a:	ret    
  40101b:	int3   
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401570
  401028:	mov    eax,ds:0x427960
  40102d:	push   eax
  40102e:	call   0x401010
  401033:	add    esp,0x4
  401036:	mov    ds:0x427964,eax
  40103b:	mov    ecx,DWORD PTR ds:0x427964
  401041:	push   ecx
  401042:	call   0x4019f0
  401047:	add    esp,0x4
  40104a:	mov    ds:0x427968,eax
  40104f:	pop    ebp
  401050:	ret    
  401051:	int3   
  401052:	int3   
  401053:	int3   
  401054:	int3   
  401055:	int3   
  401056:	int3   
  401057:	int3   
  401058:	int3   
  401059:	int3   
  40105a:	int3   
  40105b:	int3   
  40105c:	int3   
  40105d:	int3   
  40105e:	int3   
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	sub    esp,0x14
  401066:	mov    eax,ds:0x427884
  40106b:	mov    DWORD PTR [ebp-0x10],eax
  40106e:	mov    DWORD PTR [ebp-0xc],0x425000
  401075:	mov    DWORD PTR [ebp-0x4],0x42505c
  40107c:	mov    ecx,DWORD PTR [ebp-0x10]
  40107f:	movzx  edx,BYTE PTR [ecx]
  401082:	cmp    edx,0x55
  401085:	je     0x4010a4
  401087:	mov    eax,DWORD PTR [ebp-0x10]
  40108a:	movzx  ecx,BYTE PTR [eax]
  40108d:	cmp    ecx,0x8b
  401093:	je     0x4010a4
  401095:	mov    edx,DWORD PTR [ebp-0x10]
  401098:	movzx  eax,BYTE PTR [edx]
  40109b:	cmp    eax,0x6a
  40109e:	je     0x4010a4
  4010a0:	xor    eax,eax
  4010a2:	jmp    0x40110c
  4010a4:	mov    ecx,0x52
  4010a9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ac:	mov    WORD PTR [edx],cx
  4010af:	mov    eax,0x65
  4010b4:	mov    ecx,DWORD PTR [ebp-0x4]
  4010b7:	mov    WORD PTR [ecx+0x2],ax
  4010bb:	mov    edx,0x65
  4010c0:	mov    eax,DWORD PTR [ebp-0x4]
  4010c3:	mov    WORD PTR [eax+0xa],dx
  4010c7:	mov    ecx,0x6e
  4010cc:	mov    edx,DWORD PTR [ebp-0x4]
  4010cf:	mov    WORD PTR [edx+0xc],cx
  4010d3:	mov    eax,0x4b
  4010d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010db:	mov    WORD PTR [ecx+0xe],ax
  4010df:	mov    edx,DWORD PTR ds:0x42788c
  4010e5:	mov    DWORD PTR [ebp-0x8],edx
  4010e8:	lea    eax,[ebp-0x14]
  4010eb:	push   eax
  4010ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4010ef:	push   ecx
  4010f0:	push   0x80000002
  4010f5:	call   DWORD PTR [ebp-0x8]
  4010f8:	test   eax,eax
  4010fa:	jne    0x401105
  4010fc:	mov    eax,0x1
  401101:	jmp    0x40110c
  401103:	jmp    0x40110c
  401105:	call   0x401060
  40110a:	xor    eax,eax
  40110c:	mov    esp,ebp
  40110e:	pop    ebp
  40110f:	ret    
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	cmp    DWORD PTR [ebp+0x8],0x1
  401117:	jne    0x401121
  401119:	mov    eax,ds:0x42796c
  40111e:	mov    DWORD PTR [ebp+0x8],eax
  401121:	mov    ecx,DWORD PTR [ebp+0x10]
  401124:	push   ecx
  401125:	mov    edx,DWORD PTR [ebp+0xc]
  401128:	push   edx
  401129:	mov    eax,DWORD PTR [ebp+0x8]
  40112c:	push   eax
  40112d:	call   0x4015a0
  401132:	add    esp,0xc
  401135:	mov    ecx,DWORD PTR [ebp+0x8]
  401138:	push   ecx
  401139:	call   0x4019e0
  40113e:	add    esp,0x4
  401141:	mov    DWORD PTR [ebp+0x8],eax
  401144:	mov    eax,DWORD PTR [ebp+0x8]
  401147:	pop    ebp
  401148:	ret    
  401149:	int3   
  40114a:	int3   
  40114b:	int3   
  40114c:	int3   
  40114d:	int3   
  40114e:	int3   
  40114f:	int3   
  401150:	push   ebp
  401151:	mov    ebp,esp
  401153:	sub    esp,0x220
  401159:	mov    DWORD PTR [ebp-0x210],0x0
  401163:	mov    DWORD PTR [ebp-0x20c],0x425068
  40116d:	mov    eax,ds:0x427864
  401172:	mov    ds:0x427970,eax
  401177:	push   0x42506c
  40117c:	push   0x425078
  401181:	call   DWORD PTR ds:0x427868
  401187:	push   eax
  401188:	call   DWORD PTR ds:0x42786c
  40118e:	mov    ds:0x427974,eax
  401193:	mov    DWORD PTR [ebp-0x218],0x0
  40119d:	jmp    0x4011ae
  40119f:	mov    ecx,DWORD PTR [ebp-0x218]
  4011a5:	add    ecx,0x4
  4011a8:	mov    DWORD PTR [ebp-0x218],ecx
  4011ae:	mov    edx,DWORD PTR [ebp-0x218]
  4011b4:	cmp    edx,DWORD PTR [ebp+0xc]
  4011b7:	jae    0x401212
  4011b9:	mov    eax,DWORD PTR [ebp-0x218]
  4011bf:	add    eax,0x5b3e
  4011c4:	mov    ds:0x427978,eax
  4011c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4011cc:	add    ecx,DWORD PTR [ebp-0x218]
  4011d2:	mov    DWORD PTR [ebp-0x220],ecx
  4011d8:	mov    edx,DWORD PTR [ebp-0x220]
  4011de:	mov    eax,DWORD PTR [edx]
  4011e0:	add    eax,DWORD PTR [ebp-0x218]
  4011e6:	mov    ecx,DWORD PTR [ebp-0x220]
  4011ec:	mov    DWORD PTR [ecx],eax
  4011ee:	mov    edx,DWORD PTR [ebp-0x220]
  4011f4:	mov    DWORD PTR [ebp-0x21c],edx
  4011fa:	mov    eax,DWORD PTR [ebp-0x21c]
  401200:	mov    ecx,DWORD PTR [eax]
  401202:	xor    ecx,DWORD PTR ds:0x427978
  401208:	mov    edx,DWORD PTR [ebp-0x21c]
  40120e:	mov    DWORD PTR [edx],ecx
  401210:	jmp    0x40119f
  401212:	mov    esp,ebp
  401214:	pop    ebp
  401215:	ret    
  401216:	int3   
  401217:	int3   
  401218:	int3   
  401219:	int3   
  40121a:	int3   
  40121b:	int3   
  40121c:	int3   
  40121d:	int3   
  40121e:	int3   
  40121f:	int3   
  401220:	push   ebp
  401221:	mov    ebp,esp
  401223:	sub    esp,0x2cc
  401229:	push   ebx
  40122a:	push   esi
  40122b:	push   edi
  40122c:	mov    DWORD PTR [ebp-0x290],0x401a80
  401236:	mov    DWORD PTR ds:0x42797c,ebp
  40123c:	pusha  
  40123d:	mov    DWORD PTR [ebp-0x294],0x0
  401247:	mov    DWORD PTR [ebp-0x2a4],0x80000002
  401251:	call   0x401060
  401256:	test   eax,eax
  401258:	je     0x401292
  40125a:	call   0x401540
  40125f:	mov    eax,ds:0x427960
  401264:	push   eax
  401265:	call   0x401010
  40126a:	add    esp,0x4
  40126d:	mov    ds:0x427964,eax
  401272:	mov    ecx,DWORD PTR ds:0x427964
  401278:	push   ecx
  401279:	call   0x4019f0
  40127e:	add    esp,0x4
  401281:	mov    ds:0x427980,eax
  401286:	mov    edx,DWORD PTR ds:0x427964
  40128c:	mov    DWORD PTR [ebp-0x29c],edx
  401292:	mov    DWORD PTR [ebp-0x288],0x64
  40129c:	mov    DWORD PTR [ebp-0x224],0x2a
  4012a6:	mov    DWORD PTR [ebp-0x294],0x0
  4012b0:	mov    DWORD PTR [ebp-0x258],0x0
  4012ba:	mov    DWORD PTR [ebp-0x284],0x1
  4012c4:	mov    DWORD PTR [ebp-0x21c],0x0
  4012ce:	mov    eax,DWORD PTR [ebp-0x294]
  4012d4:	cmp    eax,DWORD PTR ds:0x427964
  4012da:	jae    0x401366
  4012e0:	mov    ecx,DWORD PTR [ebp-0x29c]
  4012e6:	push   ecx
  4012e7:	mov    edx,DWORD PTR [ebp-0x288]
  4012ed:	push   edx
  4012ee:	call   0x401b20
  4012f3:	add    esp,0x8
  4012f6:	mov    DWORD PTR [ebp-0x2a0],eax
  4012fc:	mov    eax,DWORD PTR [ebp-0x2a0]
  401302:	push   eax
  401303:	mov    ecx,DWORD PTR ds:0x427960
  401309:	add    ecx,DWORD PTR [ebp-0x258]
  40130f:	push   ecx
  401310:	mov    edx,DWORD PTR ds:0x427980
  401316:	add    edx,DWORD PTR [ebp-0x294]
  40131c:	push   edx
  40131d:	call   0x401860
  401322:	add    esp,0xc
  401325:	mov    eax,DWORD PTR [ebp-0x224]
  40132b:	add    eax,DWORD PTR [ebp-0x288]
  401331:	add    eax,DWORD PTR [ebp-0x258]
  401337:	mov    DWORD PTR [ebp-0x258],eax
  40133d:	mov    ecx,DWORD PTR [ebp-0x294]
  401343:	add    ecx,DWORD PTR [ebp-0x288]
  401349:	mov    DWORD PTR [ebp-0x294],ecx
  40134f:	mov    edx,DWORD PTR [ebp-0x29c]
  401355:	sub    edx,DWORD PTR [ebp-0x2a0]
  40135b:	mov    DWORD PTR [ebp-0x29c],edx
  401361:	jmp    0x4012ce
  401366:	mov    eax,ds:0x427964
  40136b:	push   eax
  40136c:	mov    ecx,DWORD PTR ds:0x427980
  401372:	push   ecx
  401373:	call   0x401150
  401378:	add    esp,0x8
  40137b:	mov    DWORD PTR [ebp-0x258],0x0
  401385:	mov    DWORD PTR [ebp-0x2c0],0x0
  40138f:	mov    edx,DWORD PTR ds:0x427964
  401395:	push   edx
  401396:	push   0x0
  401398:	mov    eax,ds:0x427968
  40139d:	push   eax
  40139e:	call   0x401000
  4013a3:	add    esp,0xc
  4013a6:	mov    ecx,DWORD PTR ds:0x427964
  4013ac:	mov    DWORD PTR [ebp-0x2c8],ecx
  4013b2:	mov    edx,DWORD PTR [ebp-0x2c0]
  4013b8:	cmp    edx,DWORD PTR ds:0x427964
  4013be:	jae    0x401449
  4013c4:	mov    eax,DWORD PTR [ebp-0x2c8]
  4013ca:	push   eax
  4013cb:	mov    ecx,DWORD PTR [ebp-0x288]
  4013d1:	push   ecx
  4013d2:	call   0x401b20
  4013d7:	add    esp,0x8
  4013da:	mov    DWORD PTR [ebp-0x2cc],eax
  4013e0:	mov    edx,DWORD PTR [ebp-0x2cc]
  4013e6:	push   edx
  4013e7:	mov    eax,ds:0x427960
  4013ec:	add    eax,DWORD PTR [ebp-0x258]
  4013f2:	push   eax
  4013f3:	mov    ecx,DWORD PTR ds:0x427968
  4013f9:	add    ecx,DWORD PTR [ebp-0x2c0]
  4013ff:	push   ecx
  401400:	call   0x401860
  401405:	add    esp,0xc
  401408:	mov    edx,DWORD PTR [ebp-0x224]
  40140e:	add    edx,DWORD PTR [ebp-0x288]
  401414:	add    edx,DWORD PTR [ebp-0x258]
  40141a:	mov    DWORD PTR [ebp-0x258],edx
  401420:	mov    eax,DWORD PTR [ebp-0x2c0]
  401426:	add    eax,DWORD PTR [ebp-0x288]
  40142c:	mov    DWORD PTR [ebp-0x2c0],eax
  401432:	mov    ecx,DWORD PTR [ebp-0x2c8]
  401438:	sub    ecx,DWORD PTR [ebp-0x2cc]
  40143e:	mov    DWORD PTR [ebp-0x2c8],ecx
  401444:	jmp    0x4013b2
  401449:	mov    edx,DWORD PTR ds:0x427964
  40144f:	push   edx
  401450:	mov    eax,ds:0x427968
  401455:	push   eax
  401456:	call   0x401150
  40145b:	add    esp,0x8
  40145e:	mov    DWORD PTR [ebp-0x290],0x401a80
  401468:	mov    ecx,DWORD PTR ds:0x427980
  40146e:	mov    edx,DWORD PTR ds:0x427968
  401474:	mov    DWORD PTR [ecx],edx
  401476:	push   0x19000
  40147b:	call   0x4019f0
  401480:	add    esp,0x4
  401483:	mov    ds:0x427984,eax
  401488:	mov    eax,ds:0x427984
  40148d:	add    eax,0x200
  401492:	mov    ds:0x427988,eax
  401497:	push   0x17700
  40149c:	mov    ecx,DWORD PTR ds:0x427980
  4014a2:	push   ecx
  4014a3:	mov    edx,DWORD PTR ds:0x427988
  4014a9:	push   edx
  4014aa:	call   0x401860
  4014af:	add    esp,0xc
  4014b2:	mov    eax,ds:0x427984
  4014b7:	add    eax,0x17590
  4014bc:	mov    ds:0x42798c,eax
  4014c1:	popa   
  4014c2:	push   0x37
  4014c4:	mov    eax,DWORD PTR [ebp-0x290]
  4014ca:	mov    ecx,esp
  4014cc:	sub    ecx,0x22
  4014cf:	mov    edx,0x1e
  4014d4:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  4014d8:	ret    
  4014d9:	xor    eax,eax
  4014db:	pop    edi
  4014dc:	pop    esi
  4014dd:	pop    ebx
  4014de:	mov    esp,ebp
  4014e0:	pop    ebp
  4014e1:	ret    
  4014e2:	int3   
  4014e3:	int3   
  4014e4:	int3   
  4014e5:	int3   
  4014e6:	int3   
  4014e7:	int3   
  4014e8:	int3   
  4014e9:	int3   
  4014ea:	int3   
  4014eb:	int3   
  4014ec:	int3   
  4014ed:	int3   
  4014ee:	int3   
  4014ef:	int3   
  4014f0:	push   ebp
  4014f1:	mov    ebp,esp
  4014f3:	call   0x401220
  4014f8:	pop    ebp
  4014f9:	ret    
  4014fa:	int3   
  4014fb:	int3   
  4014fc:	int3   
  4014fd:	int3   
  4014fe:	int3   
  4014ff:	int3   
  401500:	push   ebp
  401501:	mov    ebp,esp
  401503:	mov    eax,ds:0x427990
  401508:	sub    eax,0x8
  40150b:	shr    eax,1
  40150d:	mov    ds:0x427990,eax
  401512:	pop    ebp
  401513:	ret    
  401514:	int3   
  401515:	int3   
  401516:	int3   
  401517:	int3   
  401518:	int3   
  401519:	int3   
  40151a:	int3   
  40151b:	int3   
  40151c:	int3   
  40151d:	int3   
  40151e:	int3   
  40151f:	int3   
  401520:	push   ebp
  401521:	mov    ebp,esp
  401523:	pop    ebp
  401524:	ret    0x10
  401527:	int3   
  401528:	int3   
  401529:	int3   
  40152a:	int3   
  40152b:	int3   
  40152c:	int3   
  40152d:	int3   
  40152e:	int3   
  40152f:	int3   
  401530:	push   ebp
  401531:	mov    ebp,esp
  401533:	pop    ebp
  401534:	ret    0x10
  401537:	int3   
  401538:	int3   
  401539:	int3   
  40153a:	int3   
  40153b:	int3   
  40153c:	int3   
  40153d:	int3   
  40153e:	int3   
  40153f:	int3   
  401540:	push   ebp
  401541:	mov    ebp,esp
  401543:	sub    esp,0x10
  401546:	mov    DWORD PTR [ebp-0x10],0x40320e
  40154d:	mov    DWORD PTR [ebp-0x4],0x4
  401554:	mov    eax,DWORD PTR [ebp-0x10]
  401557:	add    eax,DWORD PTR [ebp-0x4]
  40155a:	mov    DWORD PTR [ebp-0xc],eax
  40155d:	mov    ecx,DWORD PTR [ebp-0xc]
  401560:	mov    DWORD PTR [ebp-0x8],ecx
  401563:	mov    edx,DWORD PTR [ebp-0x8]
  401566:	mov    DWORD PTR ds:0x427960,edx
  40156c:	mov    esp,ebp
  40156e:	pop    ebp
  40156f:	ret    
  401570:	push   ebp
  401571:	mov    ebp,esp
  401573:	sub    esp,0x8
  401576:	mov    DWORD PTR [ebp-0x4],0x4
  40157d:	mov    eax,DWORD PTR [ebp-0x4]
  401580:	add    eax,0x402f38
  401585:	mov    ds:0x427960,eax
  40158a:	mov    ecx,DWORD PTR ds:0x427890
  401590:	mov    DWORD PTR [ebp-0x8],ecx
  401593:	mov    esp,ebp
  401595:	pop    ebp
  401596:	ret    
  401597:	int3   
  401598:	int3   
  401599:	int3   
  40159a:	int3   
  40159b:	int3   
  40159c:	int3   
  40159d:	int3   
  40159e:	int3   
  40159f:	int3   
  4015a0:	push   ebp
  4015a1:	mov    ebp,esp
  4015a3:	sub    esp,0x8
  4015a6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015ad:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015b4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015bb:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015c2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015c9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015de:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015ec:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015f3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015fa:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401601:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401608:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40160f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401616:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40161d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401624:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40162b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401632:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401639:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401640:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401647:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40164e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401655:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40165c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401663:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40166a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401671:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401678:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40167f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401686:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40168d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401694:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40169b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016be:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016cc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016d3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016da:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ef:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016fd:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401704:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40170b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401712:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401719:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401720:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401727:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40172e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401735:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40173c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401743:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40174a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401751:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401758:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40175f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401766:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40176d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401774:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40177b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401782:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401789:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401790:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401797:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40179e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017a5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ac:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017b3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ba:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017c1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017c8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017cf:	mov    DWORD PTR [ebp-0x4],0x0
  4017d6:	jmp    0x4017e1
  4017d8:	mov    eax,DWORD PTR [ebp-0x4]
  4017db:	add    eax,0x1
  4017de:	mov    DWORD PTR [ebp-0x4],eax
  4017e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4017e4:	cmp    ecx,DWORD PTR ds:0x427990
  4017ea:	jae    0x40184f
  4017ec:	mov    edx,DWORD PTR [ebp-0x4]
  4017ef:	push   edx
  4017f0:	mov    eax,ds:0x427994
  4017f5:	push   eax
  4017f6:	call   0x401ac0
  4017fb:	add    esp,0x8
  4017fe:	sar    eax,0xc
  401801:	cmp    eax,0x3
  401804:	jne    0x40184d
  401806:	mov    ecx,DWORD PTR [ebp-0x4]
  401809:	push   ecx
  40180a:	mov    edx,DWORD PTR ds:0x427994
  401810:	push   edx
  401811:	call   0x401ac0
  401816:	add    esp,0x8
  401819:	and    eax,0xfff
  40181e:	add    eax,0x5d6fc8
  401823:	mov    DWORD PTR [ebp-0x8],eax
  401826:	mov    eax,DWORD PTR [ebp+0x8]
  401829:	mov    ecx,DWORD PTR [ebp+0xc]
  40182c:	add    ecx,DWORD PTR [eax]
  40182e:	mov    edx,DWORD PTR [ebp-0x8]
  401831:	mov    eax,DWORD PTR [ecx+edx*1-0x5d6fc8]
  401838:	add    eax,DWORD PTR [ebp+0x10]
  40183b:	mov    ecx,DWORD PTR [ebp+0x8]
  40183e:	mov    edx,DWORD PTR [ebp+0xc]
  401841:	add    edx,DWORD PTR [ecx]
  401843:	mov    ecx,DWORD PTR [ebp-0x8]
  401846:	mov    DWORD PTR [edx+ecx*1-0x5d6fc8],eax
  40184d:	jmp    0x4017d8
  40184f:	mov    esp,ebp
  401851:	pop    ebp
  401852:	ret    
  401853:	int3   
  401854:	int3   
  401855:	int3   
  401856:	int3   
  401857:	int3   
  401858:	int3   
  401859:	int3   
  40185a:	int3   
  40185b:	int3   
  40185c:	int3   
  40185d:	int3   
  40185e:	int3   
  40185f:	int3   
  401860:	push   ebp
  401861:	mov    ebp,esp
  401863:	sub    esp,0x214
  401869:	push   0x104
  40186e:	lea    eax,[ebp-0x208]
  401874:	push   eax
  401875:	call   DWORD PTR ds:0x427998
  40187b:	mov    DWORD PTR [ebp-0x210],0x0
  401885:	jmp    0x401896
  401887:	mov    ecx,DWORD PTR [ebp-0x210]
  40188d:	add    ecx,0x1
  401890:	mov    DWORD PTR [ebp-0x210],ecx
  401896:	mov    edx,DWORD PTR [ebp-0x210]
  40189c:	cmp    edx,DWORD PTR [ebp+0x10]
  40189f:	jge    0x401998
  4018a5:	cmp    DWORD PTR [ebp-0x210],0x0
  4018ac:	jne    0x40197d
  4018b2:	mov    DWORD PTR [ebp-0x214],0x4250a4
  4018bc:	mov    eax,0x5c
  4018c1:	mov    ecx,DWORD PTR [ebp-0x214]
  4018c7:	mov    WORD PTR [ecx],ax
  4018ca:	mov    edx,0x65
  4018cf:	mov    eax,DWORD PTR [ebp-0x214]
  4018d5:	mov    WORD PTR [eax+0xa],dx
  4018d9:	mov    ecx,0x6d
  4018de:	mov    edx,DWORD PTR [ebp-0x214]
  4018e4:	mov    WORD PTR [edx+0xc],cx
  4018e8:	mov    eax,0x33
  4018ed:	mov    ecx,DWORD PTR [ebp-0x214]
  4018f3:	mov    WORD PTR [ecx+0xe],ax
  4018f7:	mov    edx,0x32
  4018fc:	mov    eax,DWORD PTR [ebp-0x214]
  401902:	mov    WORD PTR [eax+0x10],dx
  401906:	mov    ecx,0x5c
  40190b:	mov    edx,DWORD PTR [ebp-0x214]
  401911:	mov    WORD PTR [edx+0x12],cx
  401915:	mov    eax,0x73
  40191a:	mov    ecx,DWORD PTR [ebp-0x214]
  401920:	mov    WORD PTR [ecx+0x16],ax
  401924:	mov    edx,0x65
  401929:	mov    eax,DWORD PTR [ebp-0x214]
  40192f:	mov    WORD PTR [eax+0x24],dx
  401933:	mov    ecx,DWORD PTR [ebp-0x214]
  401939:	push   ecx
  40193a:	lea    edx,[ebp-0x208]
  401940:	push   edx
  401941:	call   DWORD PTR ds:0x427970
  401947:	push   0x0
  401949:	push   0x80
  40194e:	push   0x3
  401950:	push   0x0
  401952:	push   0x3
  401954:	push   0x1
  401956:	lea    eax,[ebp-0x208]
  40195c:	push   eax
  40195d:	call   DWORD PTR ds:0x427974
  401963:	mov    DWORD PTR [ebp-0x20c],eax
  401969:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401970:	je     0x40197b
  401972:	cmp    DWORD PTR [ebp-0x20c],0x0
  401979:	jne    0x40197d
  40197b:	jmp    0x4019d2
  40197d:	mov    ecx,DWORD PTR [ebp+0x8]
  401980:	add    ecx,DWORD PTR [ebp-0x210]
  401986:	mov    edx,DWORD PTR [ebp+0xc]
  401989:	add    edx,DWORD PTR [ebp-0x210]
  40198f:	mov    al,BYTE PTR [edx]
  401991:	mov    BYTE PTR [ecx],al
  401993:	jmp    0x401887
  401998:	mov    ecx,DWORD PTR [ebp+0x8]
  40199b:	cmp    ecx,DWORD PTR ds:0x427988
  4019a1:	jne    0x4019c5
  4019a3:	mov    edx,DWORD PTR ds:0x427984
  4019a9:	sub    edx,0x400000
  4019af:	push   edx
  4019b0:	mov    eax,ds:0x427984
  4019b5:	push   eax
  4019b6:	mov    ecx,DWORD PTR ds:0x427968
  4019bc:	push   ecx
  4019bd:	call   0x401b60
  4019c2:	add    esp,0xc
  4019c5:	mov    edx,DWORD PTR [ebp-0x20c]
  4019cb:	push   edx
  4019cc:	call   DWORD PTR ds:0x427870
  4019d2:	mov    esp,ebp
  4019d4:	pop    ebp
  4019d5:	ret    
  4019d6:	int3   
  4019d7:	int3   
  4019d8:	int3   
  4019d9:	int3   
  4019da:	int3   
  4019db:	int3   
  4019dc:	int3   
  4019dd:	int3   
  4019de:	int3   
  4019df:	int3   
  4019e0:	push   ebp
  4019e1:	mov    ebp,esp
  4019e3:	mov    eax,DWORD PTR [ebp+0x8]
  4019e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4019e9:	add    ecx,DWORD PTR [eax+0x4]
  4019ec:	mov    eax,ecx
  4019ee:	pop    ebp
  4019ef:	ret    
  4019f0:	push   ebp
  4019f1:	mov    ebp,esp
  4019f3:	sub    esp,0x220
  4019f9:	mov    DWORD PTR [ebp-0x8],0x215
  401a00:	mov    DWORD PTR [ebp-0x220],0x3000
  401a0a:	mov    DWORD PTR [ebp-0x4],0x40
  401a11:	mov    DWORD PTR [ebp-0x214],0x0
  401a1b:	mov    DWORD PTR [ebp-0x218],0x0
  401a25:	mov    eax,ds:0x427874
  401a2a:	mov    ds:0x427998,eax
  401a2f:	push   0x104
  401a34:	lea    ecx,[ebp-0x210]
  401a3a:	push   ecx
  401a3b:	call   DWORD PTR ds:0x427998
  401a41:	mov    edx,DWORD PTR ds:0x427864
  401a47:	mov    DWORD PTR ds:0x427970,edx
  401a4d:	mov    eax,ds:0x427878
  401a52:	mov    ds:0x427974,eax
  401a57:	mov    ecx,DWORD PTR [ebp-0x4]
  401a5a:	push   ecx
  401a5b:	mov    edx,DWORD PTR [ebp-0x220]
  401a61:	push   edx
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	push   eax
  401a66:	mov    ecx,DWORD PTR [ebp-0x214]
  401a6c:	push   ecx
  401a6d:	push   0xffffffff
  401a6f:	call   DWORD PTR ds:0x42787c
  401a75:	mov    esp,ebp
  401a77:	pop    ebp
  401a78:	ret    
  401a79:	int3   
  401a7a:	int3   
  401a7b:	int3   
  401a7c:	int3   
  401a7d:	int3   
  401a7e:	int3   
  401a7f:	int3   
  401a80:	push   ebp
  401a81:	mov    ebp,esp
  401a83:	push   ecx
  401a84:	mov    DWORD PTR [ebp-0x4],0x5e3d
  401a8b:	mov    ecx,ecx
  401a8d:	mov    ecx,ecx
  401a8f:	mov    ecx,ecx
  401a91:	mov    ecx,ecx
  401a93:	mov    edx,edx
  401a95:	mov    edx,edx
  401a97:	mov    edx,edx
  401a99:	mov    ecx,ecx
  401a9b:	mov    esp,DWORD PTR ds:0x42797c
  401aa1:	mov    ecx,ecx
  401aa3:	mov    edx,edx
  401aa5:	mov    ecx,ecx
  401aa7:	mov    edx,edx
  401aa9:	add    esp,0x4
  401aac:	mov    edx,edx
  401aae:	mov    ecx,ecx
  401ab0:	mov    edx,edx
  401ab2:	mov    edx,edx
  401ab4:	jmp    DWORD PTR ds:0x42798c
  401aba:	mov    esp,ebp
  401abc:	pop    ebp
  401abd:	ret    
  401abe:	int3   
  401abf:	int3   
  401ac0:	push   ebp
  401ac1:	mov    ebp,esp
  401ac3:	sub    esp,0x18
  401ac6:	mov    eax,DWORD PTR [ebp+0x8]
  401ac9:	mov    DWORD PTR [ebp-0x8],eax
  401acc:	mov    ecx,DWORD PTR [ebp+0xc]
  401acf:	mov    DWORD PTR [ebp-0x4],ecx
  401ad2:	mov    DWORD PTR [ebp-0x10],0x19c
  401ad9:	mov    edx,DWORD PTR [ebp-0x8]
  401adc:	mov    DWORD PTR ds:0x42799c,edx
  401ae2:	mov    eax,DWORD PTR [ebp-0x4]
  401ae5:	mov    ds:0x4279a0,eax
  401aea:	mov    ecx,DWORD PTR ds:0x42799c
  401af0:	mov    DWORD PTR [ebp-0x14],ecx
  401af3:	mov    edx,DWORD PTR ds:0x4279a0
  401af9:	mov    DWORD PTR [ebp-0xc],edx
  401afc:	mov    eax,DWORD PTR [ebp-0xc]
  401aff:	mov    ecx,DWORD PTR [ebp-0x14]
  401b02:	lea    edx,[ecx+eax*2]
  401b05:	mov    DWORD PTR [ebp-0x18],edx
  401b08:	mov    eax,DWORD PTR [ebp-0x18]
  401b0b:	mov    DWORD PTR [ebp-0x14],eax
  401b0e:	mov    ecx,DWORD PTR [ebp-0x14]
  401b11:	movzx  edx,WORD PTR [ecx]
  401b14:	mov    DWORD PTR [ebp-0xc],edx
  401b17:	mov    eax,DWORD PTR [ebp-0xc]
  401b1a:	mov    esp,ebp
  401b1c:	pop    ebp
  401b1d:	ret    
  401b1e:	int3   
  401b1f:	int3   
  401b20:	push   ebp
  401b21:	mov    ebp,esp
  401b23:	sub    esp,0xc
  401b26:	mov    eax,DWORD PTR [ebp+0x8]
  401b29:	mov    DWORD PTR [ebp-0x8],eax
  401b2c:	mov    ecx,DWORD PTR [ebp+0xc]
  401b2f:	mov    DWORD PTR [ebp-0xc],ecx
  401b32:	mov    DWORD PTR [ebp-0x4],0x22b
  401b39:	mov    edx,DWORD PTR [ebp-0x8]
  401b3c:	cmp    edx,DWORD PTR [ebp-0xc]
  401b3f:	jae    0x401b4f
  401b41:	mov    DWORD PTR [ebp-0x4],0x22b
  401b48:	mov    eax,DWORD PTR [ebp-0x8]
  401b4b:	jmp    0x401b59
  401b4d:	jmp    0x401b59
  401b4f:	mov    DWORD PTR [ebp-0x4],0x22b
  401b56:	mov    eax,DWORD PTR [ebp-0xc]
  401b59:	mov    esp,ebp
  401b5b:	pop    ebp
  401b5c:	ret    
  401b5d:	int3   
  401b5e:	int3   
  401b5f:	int3   
  401b60:	push   ebp
  401b61:	mov    ebp,esp
  401b63:	sub    esp,0x8
  401b66:	mov    eax,DWORD PTR [ebp+0x8]
  401b69:	cmp    DWORD PTR [eax+0x4],0x0
  401b6d:	je     0x401bab
  401b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  401b72:	add    ecx,0x8
  401b75:	mov    DWORD PTR ds:0x427994,ecx
  401b7b:	mov    edx,DWORD PTR [ebp+0x8]
  401b7e:	mov    eax,DWORD PTR [edx+0x4]
  401b81:	mov    ds:0x427990,eax
  401b86:	call   0x401500
  401b8b:	mov    ecx,DWORD PTR [ebp+0x8]
  401b8e:	mov    DWORD PTR ds:0x42796c,ecx
  401b94:	mov    edx,DWORD PTR [ebp+0x10]
  401b97:	push   edx
  401b98:	mov    eax,DWORD PTR [ebp+0xc]
  401b9b:	push   eax
  401b9c:	push   0x1
  401b9e:	call   0x401110
  401ba3:	add    esp,0xc
  401ba6:	mov    DWORD PTR [ebp+0x8],eax
  401ba9:	jmp    0x401b66
  401bab:	mov    esp,ebp
  401bad:	pop    ebp
  401bae:	ret    
  401baf:	int3   
	...
  402f38:	add    BYTE PTR [edx],al
  402f3a:	add    BYTE PTR [eax],al
  402f3c:	ds pop ebx
  402f3e:	add    BYTE PTR [eax],al
  402f40:	push   esi
  402f41:	pop    ebx
  402f42:	add    BYTE PTR [eax],al
  402f44:	ret    0x9069
  402f47:	xor    dl,dl
  402f49:	imul   ebx,DWORD PTR [eax-0x5f963dce],0xa869e232
  402f53:	xor    bh,BYTE PTR [esi]
  402f55:	cmp    eax,DWORD PTR [ecx]
  402f57:	add    BYTE PTR [edx+0x5b],bl
  402f5a:	add    BYTE PTR [eax],al
  402f5c:	pop    ebp
  402f5d:	mov    di,WORD PTR ds:0x3d9a66ce
  402f64:	shl    DWORD PTR [esi-0x58],1
  402f67:	cmp    eax,0x3dd36698
  402f6c:	and    BYTE PTR [esi-0x18],0x3d
  402f70:	inc    edx
  402f71:	gs sub eax,0x5165053e
  402f77:	ds out 0x64,eax
  402f7a:	fnstsw WORD PTR [esi]
  402f7c:	pop    edx
  402f7d:	add    BYTE PTR fs:[eax],al
  402f80:	sub    eax,DWORD PTR ds:[ecx]
  402f83:	add    BYTE PTR [esi],dl
  402f85:	pop    ebx
  402f86:	add    BYTE PTR [eax],al
  402f88:	add    DWORD PTR [ebx-0x33],ebp
  402f8b:	xor    BYTE PTR [ebx],cl
  402f8d:	imul   eax,DWORD PTR [ecx+esi*1],0x4b
  402f91:	push   0x27
  402f93:	xor    eax,edx
  402f95:	imul   eax,ebx,0xe969e531
  402f9b:	xor    DWORD PTR [ecx],edx
  402f9d:	push   0xffffffff
  402f9f:	xor    DWORD PTR [eax],eax
	...
  402fc9:	add    BYTE PTR [edx+0x69],cl
  402fcc:	adc    dh,BYTE PTR [edx]
  402fce:	sbb    BYTE PTR [ecx+0x31],ch
  402fd1:	xor    ah,BYTE PTR [edi]
  402fd3:	imul   edi,DWORD PTR [edi],0x58697b32
  402fd9:	xor    bh,bh
  402fdb:	push   0x67b832c7
  402fe0:	mov    esi,DWORD PTR [ebx]
  402fe2:	stos   DWORD PTR es:[edi],eax
  402fe3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402fe5:	xor    ecx,DWORD PTR [esi-0x5dcc3299]
  402feb:	addr16 jmp 0xf834:0x216f3c33
  402ff3:	outs   dx,BYTE PTR ds:[esi]
  402ff4:	push   edi
  402ff5:	xor    al,0x2
  402ff7:	outs   dx,DWORD PTR ds:[esi]
  402ff8:	arpl   WORD PTR [edi+edx*1],si
  402ffb:	outs   dx,DWORD PTR ds:[esi]
  402ffc:	xor    BYTE PTR [esi+eax*8],0x6e
  403000:	xchg   ecx,eax
  403001:	xor    al,0xb1
  403003:	outs   dx,BYTE PTR ds:[esi]
  403004:	sahf   
  403005:	xor    al,0xd3
  403007:	outs   dx,BYTE PTR ds:[esi]
  403008:	mov    ebp,0xd46e7c34
  40300d:	xor    al,0x93
  40300f:	outs   dx,BYTE PTR ds:[esi]
  403010:	out    0x34,eax
  403012:	jo     0x403082
  403014:	add    dh,BYTE PTR ds:0x35486e4e
  40301a:	or     BYTE PTR [esi+0x54],ch
  40301d:	xor    eax,0x356a6ddb
  403022:	mov    esp,0x7635be6d
  403027:	ins    DWORD PTR es:[edi],dx
  403028:	aad    0x35
  40302a:	pop    ds
  40302b:	imul   ebp,ebx,0x35
	...
  403055:	add    BYTE PTR [eax],al
  403057:	add    BYTE PTR [edx],ch
  403059:	imul   edi,esi,0xe693735
  40305f:	ss dec edx
  403061:	imul   ebx,DWORD PTR ds:0x34696936,0x3f695436
  40306b:	sub    DWORD PTR ss:[ecx+0x49],0x36
  403070:	jo     0x4030db
  403072:	push   esp
  403073:	ss pop esp
  403075:	imul   ebp,DWORD PTR [eax+0x36],0x36726963
  40307c:	mov    ecx,0xf8369a69
  403081:	imul   ecx,esp,0xdc69ec36
  403087:	cmp    BYTE PTR ss:[edx+0x2b],ch
  40308b:	aaa    
  40308c:	push   es
  40308d:	push   0x4c
  40308f:	aaa    
  403090:	push   0x2737636a
  403095:	push   0x71
  403097:	aaa    
  403098:	aaa    
  403099:	push   0xffffff84
  40309b:	aaa    
  40309c:	mov    edx,0xdc379d6a
  4030a1:	push   0xffffffb1
  4030a3:	aaa    
  4030a4:	sub    DWORD PTR [edx-0x32],0x37
  4030a8:	push   0x3e37e56a
  4030ad:	pop    ebx
  4030ae:	add    BYTE PTR [eax],al
  4030b0:	ds pop ebx
  4030b2:	add    BYTE PTR [eax],al
  4030b4:	ds pop ebx
  4030b6:	add    BYTE PTR [eax],al
  4030b8:	ds pop ebx
	...
  4030e6:	ds pop ebx
  4030e8:	add    BYTE PTR [eax],al
  4030ea:	ds pop ebx
  4030ec:	add    BYTE PTR [eax],al
  4030ee:	ds pop ebx
  4030f0:	add    BYTE PTR [eax],al
  4030f2:	ds pop ebx
  4030f4:	add    BYTE PTR [eax],al
  4030f6:	ds pop ebx
  4030f8:	add    BYTE PTR [eax],al
  4030fa:	ds pop ebx
  4030fc:	add    BYTE PTR [eax],al
  4030fe:	ds pop ebx
  403100:	add    BYTE PTR [eax],al
  403102:	ds pop ebx
  403104:	add    BYTE PTR [eax],al
  403106:	ds pop ebx
  403108:	add    BYTE PTR [eax],al
  40310a:	ds pop ebx
  40310c:	add    BYTE PTR [eax],al
  40310e:	ds pop ebx
  403110:	add    BYTE PTR [eax],al
  403112:	ds pop ebx
  403114:	add    BYTE PTR [eax],al
  403116:	ds pop ebx
  403118:	add    BYTE PTR [eax],al
  40311a:	ds pop ebx
  40311c:	add    BYTE PTR [eax],al
  40311e:	ds pop ebx
  403120:	add    BYTE PTR [eax],al
  403122:	ds pop ebx
  403124:	add    BYTE PTR [eax],al
  403126:	ds pop ebx
  403128:	add    BYTE PTR [eax],al
  40312a:	ds pop ebx
  40312c:	add    BYTE PTR [eax],al
  40312e:	ds pop ebx
  403130:	add    BYTE PTR [eax],al
  403132:	ds pop ebx
  403134:	add    BYTE PTR [eax],al
  403136:	ds pop ebx
  403138:	add    BYTE PTR [eax],al
  40313a:	ds pop ebx
  40313c:	add    BYTE PTR [eax],al
  40313e:	ds pop ebx
  403140:	add    BYTE PTR [eax],al
  403142:	ds pop ebx
  403144:	add    BYTE PTR [eax],al
  403146:	ds pop ebx
	...
  403174:	ds pop ebx
  403176:	add    BYTE PTR [eax],al
  403178:	ds pop ebx
  40317a:	add    BYTE PTR [eax],al
  40317c:	ds pop ebx
  40317e:	add    BYTE PTR [eax],al
  403180:	ds pop ebx
  403182:	add    BYTE PTR [eax],al
  403184:	ds pop ebx
  403186:	add    BYTE PTR [eax],al
  403188:	ds pop ebx
  40318a:	add    BYTE PTR [eax],al
  40318c:	ds pop ebx
  40318e:	add    BYTE PTR [eax],al
  403190:	ds pop ebx
  403192:	add    BYTE PTR [eax],al
  403194:	ds pop ebx
  403196:	add    BYTE PTR [eax],al
  403198:	ds pop ebx
  40319a:	add    BYTE PTR [eax],al
  40319c:	ds pop ebx
  40319e:	add    BYTE PTR [eax],al
  4031a0:	ds pop ebx
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	ds pop ebx
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	ds pop ebx
  4031aa:	add    BYTE PTR [eax],al
  4031ac:	ds pop ebx
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	ds pop ebx
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	ds pop ebx
  4031b6:	add    BYTE PTR [eax],al
  4031b8:	ds pop ebx
  4031ba:	add    BYTE PTR [eax],al
  4031bc:	ds pop ebx
  4031be:	add    BYTE PTR [eax],al
  4031c0:	ds pop ebx
  4031c2:	add    BYTE PTR [eax],al
  4031c4:	ds pop ebx
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	ds pop ebx
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	ds pop ebx
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	ds pop ebx
  4031d2:	add    BYTE PTR [eax],al
  4031d4:	ds pop ebx
	...
  403202:	ds pop ebx
  403204:	add    BYTE PTR [eax],al
  403206:	ds pop ebx
  403208:	add    BYTE PTR [eax],al
  40320a:	ds pop ebx
  40320c:	add    BYTE PTR [eax],al
  40320e:	add    BYTE PTR [edi+0x1],dh
  403211:	add    BYTE PTR [esi],bh
  403213:	and    al,BYTE PTR [ecx+0x0]
  403216:	add    DWORD PTR [esi],edi
  403218:	je     0x40326a
  40321a:	sub    al,0x34
  40321c:	arpl   WORD PTR [ecx+0x22],ax
  40321f:	aas    
  403220:	jb     0x403287
  403222:	sub    eax,0xa000028
  403227:	xor    al,0x61
  403229:	add    dh,BYTE PTR fs:[edx]
  40322c:	bound  esi,QWORD PTR [edx+0x1f]
  40322f:	sub    DWORD PTR [ecx+0x45],edi
  403232:	push   es
  403233:	sbb    al,BYTE PTR [eax]
  403235:	add    BYTE PTR [edx],cl
  403237:	xor    al,0x61
  403239:	add    dh,BYTE PTR fs:[edx]
  40323c:	bound  esi,QWORD PTR [edx-0x21]
  40323f:	sub    BYTE PTR [ecx+0x45],bh
  403242:	out    0xb,al
  403244:	add    BYTE PTR [eax],al
  403246:	add    DWORD PTR [esi],edi
  403248:	je     0x403297
  40324a:	loope  0x40328a
  40324c:	jne    0x4032ba
  40324e:	jecxz  0x403262
  403250:	popa   
  403251:	outs   dx,BYTE PTR ds:[esi]
  403252:	fidiv  DWORD PTR [esi]
  403254:	gs inc ecx
  403256:	ds pop ebx
  403258:	add    BYTE PTR [eax],al
  40325a:	jge    0x403285
  40325c:	gs popa 
  40325e:	mov    dl,0x3e
  403260:	inc    esi
  403261:	imul   edx,DWORD PTR [edx-0x55ffbec2],0x9d727428
  40326b:	cmp    dh,BYTE PTR [ecx+eax*2+0x3e]
  40326f:	pop    ebx
  403270:	add    BYTE PTR [eax],al
  403272:	jns    0x4032b2
  403274:	je     0x4032cd
	...
  40329e:	add    BYTE PTR [eax],al
  4032a0:	addr16 xor eax,0x28696f64
  4032a6:	inc    esp
  4032a7:	imul   ebp,DWORD PTR [esi+edi*1+0x63],0x79295174
  4032af:	inc    ecx
  4032b0:	ds pop ebx
  4032b2:	add    BYTE PTR [eax],al
  4032b4:	jns    0x4032f4
  4032b6:	je     0x403305
  4032b8:	pop    ecx
  4032b9:	aas    
  4032ba:	jne    0x403328
  4032bc:	pop    ebx
  4032bd:	adc    esp,DWORD PTR [ecx+0x6e]
  4032c0:	and    dh,BYTE PTR [edi]
  4032c2:	gs push edi
  4032c4:	ds pop ebx
  4032c6:	add    BYTE PTR [eax],al
  4032c8:	inc    edx
  4032c9:	pop    ecx
  4032ca:	inc    eax
  4032cb:	add    BYTE PTR [edx+0x59],cl
  4032ce:	inc    eax
  4032cf:	add    BYTE PTR [edx+0x59],ah
  4032d2:	inc    eax
  4032d3:	add    BYTE PTR [edx+0x59],cl
  4032d6:	inc    eax
  4032d7:	add    dh,dh
  4032d9:	pop    eax
  4032da:	inc    eax
  4032db:	add    dl,ch
  4032dd:	pop    eax
  4032de:	inc    eax
  4032df:	add    dh,bl
  4032e1:	pop    eax
  4032e2:	inc    eax
  4032e3:	add    dh,dh
  4032e5:	pop    eax
  4032e6:	inc    eax
  4032e7:	add    BYTE PTR [ecx],al
  4032e9:	ds je  0x40333c
  4032ec:	in     al,dx
  4032ed:	xor    esp,DWORD PTR [ebx+0x41]
  4032f0:	loop   0x403330
  4032f2:	jb     0x403359
  4032f4:	int    0x27
  4032f6:	add    BYTE PTR [eax],al
  4032f8:	cli    
  4032f9:	xor    esp,DWORD PTR [ecx+0x64]
  4032fc:	repnz xor DWORD PTR [edx+0x72],esp
  403300:	lahf   
  403301:	sub    eax,0x4579
	...
  40332e:	mov    dh,0x1c
  403330:	add    BYTE PTR [eax],al
  403332:	xchg   ebp,eax
  403333:	cmp    BYTE PTR [edx+0x6e],dh
  403336:	fwait
  403337:	das    
  403338:	xor    esi,DWORD PTR [edx]
  40333a:	push   0x3e6c6c37
  40333f:	pop    ebx
  403340:	add    BYTE PTR [eax],al
  403342:	fwait
  403343:	cs jbe 0x4033a9
  403346:	mov    WORD PTR [edi],fs
  403348:	cs fs push 0x2f
  40334c:	add    BYTE PTR [eax],al
  40334e:	arpl   WORD PTR [eax],di
  403350:	ins    DWORD PTR es:[edi],dx
  403351:	jae    0x4033b6
  403353:	daa    
  403354:	add    BYTE PTR [eax],al
  403356:	push   ebx
  403357:	cs jbe 0x4033bd
  40335a:	dec    esp
  40335b:	daa    
  40335c:	cs bound ebp,QWORD PTR fs:[edi]
  403360:	add    BYTE PTR [eax],al
  403362:	pop    ebx
  403363:	cmp    BYTE PTR [ebp+0x63],ch
  403366:	dec    esi
  403367:	and    al,0x0
  403369:	add    BYTE PTR [eax],dl
  40336b:	xor    al,0x72
  40336d:	je     0x40339a
  40336f:	cmp    al,0x6c
  403371:	inc    ecx
  403372:	sbb    ch,BYTE PTR [edi]
  403374:	outs   dx,DWORD PTR ds:[esi]
  403375:	arpl   WORD PTR [esi],di
  403377:	pop    ebx
  403378:	add    BYTE PTR [eax],al
  40337a:	lock xor esi,DWORD PTR [edx+0x74]
  40337e:	or     edi,DWORD PTR [esp+ebp*2]
  403381:	inc    ecx
  403382:	sbb    ch,BYTE PTR [edi]
  403384:	outs   dx,DWORD PTR ds:[esi]
  403385:	arpl   WORD PTR [esi],di
  403387:	pop    ebx
  403388:	add    BYTE PTR [eax],al
  40338a:	adc    esi,DWORD PTR [ecx]
  40338c:	ins    DWORD PTR es:[edi],dx
  40338d:	popa   
  40338e:	out    dx,al
  40338f:	or     BYTE PTR [ecx+0x65],ch
	...
  4033ba:	add    BYTE PTR [eax],al
  4033bc:	icebp  
  4033bd:	adc    DWORD PTR [esi+0x46],esp
  4033c0:	xlat   BYTE PTR ds:[ebx]
  4033c1:	cs gs add al,dh
  4033c5:	xor    esi,DWORD PTR [edx+0x74]
  4033c8:	retf   
  4033c9:	cmp    ebp,DWORD PTR [eax+edx*2-0x34]
  4033cd:	xor    DWORD PTR [ebp+eiz*2-0x23],esi
  4033d1:	add    BYTE PTR es:[eax],al
  4033d4:	xchg   BYTE PTR [eax],bh
  4033d6:	popa   
  4033d7:	jo     0x403458
  4033d9:	das    
  4033da:	ins    BYTE PTR es:[edi],dx
  4033db:	outs   dx,DWORD PTR ds:[esi]
  4033dc:	popf   
  4033dd:	pop    ebx
  4033de:	add    BYTE PTR [eax],al
  4033e0:	xchg   ebp,eax
  4033e1:	cmp    BYTE PTR [edx+0x6e],dh
  4033e4:	mov    ds:0x6032332f,eax
  4033e9:	aaa    
  4033ea:	ins    BYTE PTR es:[edi],dx
  4033eb:	ins    BYTE PTR es:[edi],dx
  4033ec:	ds pop ebx
  4033ee:	add    BYTE PTR [eax],al
  4033f0:	jns    0x40342a
  4033f2:	je     0x403444
  4033f4:	ins    BYTE PTR es:[edi],dx
  4033f5:	xor    ah,BYTE PTR [ebx+0x65]
  4033f8:	ins    DWORD PTR es:[edi],dx
  4033f9:	cs dec eax
  4033fb:	gs pop edi
  4033fd:	sub    eax,DWORD PTR [eax]
  4033ff:	add    BYTE PTR [esi],bh
  403401:	pop    ebx
  403402:	add    WORD PTR [esi],di
  403405:	neg    DWORD PTR [ecx-0x70]
  403408:	ds mov ch,0x3
  40340b:	add    BYTE PTR [esi],bh
  40340d:	mov    al,0x3
  40340f:	add    BYTE PTR [esi],bh
  403411:	mov    eax,ds:0x6c3e00fb
  403416:	add    eax,DWORD PTR [eax]
  403418:	ds mov ah,0x3
  40341b:	add    BYTE PTR [esi],bh
  40341d:	je     0x403423
	...
  403447:	add    BYTE PTR [eax],al
  403449:	add    BYTE PTR [esi],bh
  40344b:	mov    ah,0x3
  40344d:	add    BYTE PTR [esi],bh
  40344f:	mov    ah,0x3
  403451:	add    BYTE PTR [esi],bh
  403453:	mov    ah,0x3
  403455:	add    BYTE PTR [esi],bh
  403457:	mov    ah,0x3
  403459:	add    BYTE PTR [esi],bh
  40345b:	mov    ah,0x3
  40345d:	add    BYTE PTR [esi],bh
  40345f:	mov    ah,0x3
  403461:	add    BYTE PTR [esi],bh
  403463:	mov    ah,0x3
  403465:	add    BYTE PTR [esi],bh
  403467:	mov    ah,0x3
  403469:	add    BYTE PTR [esi],bh
  40346b:	xor    al,0x4
  40346d:	add    BYTE PTR [esi],bh
  40346f:	mov    edx,0xb440ba1a
  403474:	scas   eax,DWORD PTR es:[edi]
  403475:	or     DWORD PTR [ebx-0x6e],edi
  403478:	mov    ebx,0x25eef201
  40347d:	push   esp
  40347e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40347f:	pop    ebx
  403480:	ja     0x4034a2
  403482:	scas   al,BYTE PTR es:[edi]
  403483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403484:	push   0x67
  403486:	lods   al,BYTE PTR ds:[esi]
  403487:	xchg   ebx,eax
  403488:	push   0x69939d20
  40348d:	outs   dx,BYTE PTR ds:[esi]
  40348e:	test   eax,0x9b62237e
  403493:	push   edx
  403494:	jbe    0x40350b
  403496:	cwde   
  403497:	push   edx
  403498:	ins    DWORD PTR es:[edi],dx
  403499:	outs   dx,BYTE PTR ds:[esi]
  40349a:	pop    esi
  40349b:	test   BYTE PTR [edx+0x53],0x1e
  40349f:	xchg   edi,eax
  4034a0:	push   0x64
  4034a2:	pop    ebx
  4034a3:	mov    al,ds:0x5b340d08
  4034a8:	int    0x3
  4034aa:	ds pop ebx
  4034ac:	jmp    0x4034b4
	...
  4034d5:	add    BYTE PTR [eax],al
  4034d7:	add    BYTE PTR [esi],bh
  4034d9:	pop    ebx
  4034da:	mov    ecx,0x9d5b3e40
  4034df:	add    al,0x3d
  4034e1:	pop    ebx
  4034e2:	imul   esp,DWORD PTR [edx+0x3e910c1],0x3e95b3e
  4034ec:	ds pop ebx
  4034ee:	or     DWORD PTR [ecx+edi*1],eax
  4034f1:	pop    edx
  4034f2:	repnz add al,0x3c
  4034f5:	ins    DWORD PTR es:[edi],dx
  4034f6:	jmp    0xe99b7416
  4034fb:	push   ebp
  4034fc:	ds pop ebx
  4034fe:	jmp    0x109b7306
  403503:	pop    es
  403504:	aas    
  403505:	pop    ebx
  403506:	jmp    0xe99b731e
  40350b:	xor    edi,DWORD PTR [edi]
  40350d:	pop    ebx
  40350e:	jmp    0xe99b3316
  403513:	adc    edi,DWORD PTR [esi]
  403515:	pop    ebx
  403516:	jmp    0xed9b7320
  40351b:	add    edi,DWORD PTR [esi]
  40351d:	pop    ebx
  40351e:	jmp    0xed9b7326
  403523:	add    edi,DWORD PTR [esi]
  403525:	pop    ebx
  403526:	jmp    0xe99b732e
  40352b:	xchg   ebx,eax
  40352c:	aas    
  40352d:	pop    ebx
  40352e:	jmp    0x5c9b7338
  403533:	out    0x3f,al
  403535:	pop    ebx
  403536:	jmp    0x40353b
  403538:	ds pop ebx
  40353a:	jmp    0x403542
	...
  403563:	add    BYTE PTR [eax],al
  403565:	add    BYTE PTR [esi],ch
  403567:	pop    ebx
  403568:	jmp    0xe99b7380
  40356d:	add    ebp,DWORD PTR [esi]
  40356f:	pop    ebx
  403570:	jmp    0x9b7388
  403575:	jmp    0xd94090b7
  40357a:	cmp    eax,0x3de9005b
  40357f:	pop    ebx
  403580:	add    cl,ch
  403582:	cmp    eax,0x5701005b
  403587:	pop    edx
  403588:	add    BYTE PTR [ecx],ah
  40358a:	cmp    eax,0x3de9005b
  40358f:	pop    ebx
  403590:	add    cl,ch
  403592:	cmp    eax,0x3de9005b
  403597:	pop    ebx
  403598:	add    cl,ch
  40359a:	cmp    eax,0x3de9005b
  40359f:	pop    ebx
  4035a0:	add    cl,ch
  4035a2:	cmp    eax,0x3de9005b
  4035a7:	pop    ebx
  4035a8:	add    cl,ch
  4035aa:	cmp    eax,0x3de9005b
  4035af:	pop    ebx
  4035b0:	add    cl,ch
  4035b2:	cmp    eax,0x3de9005b
  4035b7:	pop    ebx
  4035b8:	add    cl,ch
  4035ba:	cmp    eax,0x3de9005b
  4035bf:	pop    ebx
  4035c0:	add    cl,ch
  4035c2:	cmp    eax,0x3de9005b
  4035c7:	pop    ebx
  4035c8:	add    cl,ch
	...
  4035f2:	add    BYTE PTR [eax],al
  4035f4:	cmp    eax,0x3de9005b
  4035f9:	pop    ebx
  4035fa:	add    cl,ch
  4035fc:	cmp    eax,0x3de9005b
  403601:	pop    ebx
  403602:	add    cl,ch
  403604:	cmp    eax,0xbca9005b
  403609:	pop    esp
  40360a:	add    BYTE PTR [ecx+0x3d],bh
  40360d:	pop    ebx
  40360e:	add    cl,ch
  403610:	cmp    eax,0x3de9005b
  403615:	pop    ebx
  403616:	add    BYTE PTR [eax],al
  403618:	pop    ss
  403619:	pop    ebx
  40361a:	add    BYTE PTR [eax],al
  40361c:	out    0x5a,eax
  40361e:	add    BYTE PTR [eax],al
  403620:	out    0x5a,eax
  403622:	add    BYTE PTR [eax],al
  403624:	xlat   BYTE PTR ds:[ebx]
  403625:	pop    edx
  403626:	add    BYTE PTR [eax],al
  403628:	or     DWORD PTR [edi],ebp
  40362a:	gs js  0x4035e0
  40362d:	pop    edx
  40362e:	add    BYTE PTR [eax],al
  403630:	pushf  
  403631:	dec    ebx
  403632:	add    DWORD PTR [eax],eax
  403634:	xlat   BYTE PTR ds:[ebx]
  403635:	dec    edx
  403636:	add    BYTE PTR [eax],al
  403638:	xlat   BYTE PTR ds:[ebx]
  403639:	inc    edx
  40363a:	add    DWORD PTR [eax],eax
  40363c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363d:	pop    eax
  40363e:	add    BYTE PTR [eax],al
  403640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403641:	pop    edx
  403642:	add    BYTE PTR [eax],al
  403644:	xchg   edi,eax
  403645:	pop    edx
  403646:	add    BYTE PTR [eax],al
  403648:	xchg   edi,eax
  403649:	pop    edx
  40364a:	add    BYTE PTR [eax],al
  40364c:	inc    edi
  40364d:	push   edi
  40364e:	add    BYTE PTR [eax+0x39],ah
  403651:	and    eax,0x39f36164
	...
  403682:	xchg   edi,eax
  403683:	pop    ecx
  403684:	add    BYTE PTR [eax],al
  403686:	addr16 push 0x1
  403689:	add    BYTE PTR [edi+0x58],ah
  40368c:	add    BYTE PTR [eax],al
  40368e:	push   edi
  40368f:	inc    eax
  403690:	add    DWORD PTR [eax],eax
  403692:	push   edi
  403693:	pop    edx
  403694:	add    BYTE PTR [eax],al
  403696:	addr16 pop edx
  403698:	add    BYTE PTR [eax],al
  40369a:	addr16 pop edx
  40369c:	add    BYTE PTR [eax],al
  40369e:	pop    ss
  40369f:	push   edi
  4036a0:	add    BYTE PTR [eax+0x69],al
  4036a3:	(bad)  
  4036a4:	pusha  
  4036a5:	je     0x4036ed
  4036a7:	push   edi
  4036a8:	add    BYTE PTR [eax],al
  4036aa:	(bad)  
  4036ab:	adc    al,0x0
  4036ad:	add    BYTE PTR [edi],dl
  4036af:	sbb    al,BYTE PTR [ecx]
  4036b1:	add    BYTE PTR [edi],dl
  4036b3:	adc    BYTE PTR [eax],al
  4036b5:	add    BYTE PTR [edi],ah
  4036b7:	inc    esi
  4036b8:	add    DWORD PTR [eax],eax
  4036ba:	ds mov ah,0x3
  4036bd:	add    BYTE PTR [esi],bh
  4036bf:	mov    ah,0x3
  4036c1:	add    BYTE PTR [esi],bh
  4036c3:	mov    ah,0x3
  4036c5:	add    BYTE PTR [esi],bh
  4036c7:	hlt    
  4036c8:	add    eax,DWORD PTR [eax]
  4036ca:	(bad)  
  4036cb:	mov    bl,0x3
  4036cd:	add    BYTE PTR [esi],bh
  4036cf:	mov    ah,0x3
  4036d1:	add    BYTE PTR [esi],bh
  4036d3:	mov    ah,0x3
  4036d5:	add    BYTE PTR [esi],bh
  4036d7:	mov    ah,0x3
  4036d9:	add    BYTE PTR [esi],bh
  4036db:	fisttp WORD PTR [esp+ebp*8+0xf6bec6e]
  4036e2:	cs hlt 
  4036e4:	add    edi,eax
	...
  40370e:	add    BYTE PTR [eax],al
  403710:	sub    al,0xb3
  403712:	(bad)  
  403713:	push   DWORD PTR [ecx+0x3f6a0b1e]
  403719:	fiadd  DWORD PTR [ebx]
  40371b:	call   0x44b745
  403720:	xchg   ecx,esi
  403722:	add    BYTE PTR [eax],al
  403724:	jmp    0x40375e
  403726:	call   0x265c1d7b
  40372b:	adc    dh,bh
  40372d:	mov    bl,0xfb
  40372f:	jb     0x403770
  403731:	icebp  
  403732:	test   DWORD PTR [ebx+0x7403bbf3],0x8513935
  40373c:	mov    ch,0xa1
  40373e:	div    BYTE PTR [ebp+0x46]
  403741:	mov    ebp,0xf1870852
  403746:	add    BYTE PTR [eax],al
  403748:	repz cmp al,ch
  40374b:	cmp    DWORD PTR [edx-0x25],0x54
  40374f:	pop    eax
  403750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403751:	inc    edi
  403752:	adc    al,0x40
  403754:	sub    dh,BYTE PTR ds:[edx+0x1]
  403758:	std    
  403759:	sub    eax,0x5b3275f7
  40375e:	jbe    0x4037a1
  403760:	push   ss
  403761:	xchg   ebp,eax
  403762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403763:	idiv   DWORD PTR [esi]
  403765:	pop    ebx
  403766:	jmp    0xe146ec6e
  40376b:	mov    ch,BYTE PTR [ecx+esi*1]
  40376e:	jmp    0x3e8bab69
  403773:	jno    0x403775
	...
  40379d:	add    dl,dh
  40379f:	pushf  
  4037a0:	mov    esp,0xe126e9fb
  4037a5:	test   BYTE PTR [edi+eax*2+0x5b4ac230],0xb4
  4037ad:	mov    ah,dl
  4037af:	fsubr  DWORD PTR ds:0x81036efc
  4037b5:	test   DWORD PTR [esi],ebp
  4037b7:	sbb    ebp,ecx
  4037b9:	sti    
  4037ba:	sub    al,0x5a
  4037bc:	sub    dh,bh
  4037be:	jns    0x4037d6
  4037c0:	icebp  
  4037c1:	add    edi,DWORD PTR [esi]
  4037c3:	pop    ebx
  4037c4:	jmp    0xe9df3387
  4037c9:	add    edi,DWORD PTR [esi]
  4037cb:	pop    ebx
  4037cc:	jb     0x40381e
  4037ce:	inc    esi
  4037cf:	sar    bl,1
  4037d1:	mov    BYTE PTR [ebx],al
  4037d3:	mov    ds:0x9c3c6a39,eax
  4037d8:	cmp    al,0xf8
  4037da:	jns    0x403802
  4037dc:	shl    esi,0xeb
  4037df:	push   edx
  4037e0:	mov    dh,0x51
  4037e2:	push   edx
  4037e3:	shl    BYTE PTR [esp+edi*8],1
  4037e6:	ja     0x403781
  4037e8:	in     eax,dx
  4037e9:	add    esi,ebx
  4037eb:	iret   
  4037ec:	lea    eax,[edx+0x5c39a37a]
  4037f2:	(bad)  
  4037f3:	mov    ?,ecx
  4037f5:	inc    ebx
  4037f6:	mov    ds:0x9bfd04fb,eax
  4037fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037fd:	inc    eax
  4037fe:	ss pop ebx
  403800:	add    cl,ch
	...
  40382a:	add    BYTE PTR [eax],al
  40382c:	cmp    eax,0x2624c75b
  403831:	pop    ebx
  403832:	add    cl,ch
  403834:	cmp    eax,0xc4f155d0
  403839:	dec    eax
  40383a:	lea    ebp,[ebp+eax*1+0x8e86a0b]
  403841:	es cld 
  403843:	inc    esi
  403844:	outs   dx,BYTE PTR ds:[esi]
  403845:	mov    ds:0x9c45b4ff,eax
  40384a:	push   edx
  40384b:	(bad)  
  40384d:	and    eax,0x9bbc4108
  403852:	jmp    DWORD PTR [esi]
  403854:	ins    DWORD PTR es:[edi],dx
  403855:	rcl    BYTE PTR [ebp-0xf],1
  403858:	les    ecx,FWORD PTR [eax+0x6a]
  40385b:	jmp    0x953f93b7
  403860:	leave  
  403861:	fwait
  403862:	jne    0x403865
  403864:	mov    al,0x25
  403866:	or     dh,bh
  403868:	push   cs
  403869:	inc    edi
  40386a:	pop    eax
  40386b:	bound  ecx,QWORD PTR [esi]
  40386d:	mov    ds:0x60399403,eax
  403872:	rcr    BYTE PTR [edi-0x68],1
  403875:	jo     0x403837
  403877:	mov    al,0x7c
  403879:	push   edx
  40387a:	add    BYTE PTR [ecx-0x16ffa4c3],dl
  403880:	je     0x40381a
  403882:	or     cl,ch
  403884:	or     al,dl
  403886:	in     al,dx
  403887:	push   0x7e
  403889:	sahf   
  40388a:	push   eax
  40388b:	adc    edx,ebx
  40388d:	pop    edi
  40388e:	adc    DWORD PTR [ecx],ebp
	...
  4038b8:	add    BYTE PTR [eax],al
  4038ba:	cmp    ah,BYTE PTR [ebx-0x6481178e]
  4038c0:	call   DWORD PTR [edx+ebp*1]
  4038c3:	pushf  
  4038c4:	jne    0x4038a7
  4038c6:	push   ebp
  4038c7:	dec    DWORD PTR es:[esi+0xc04f4b]
  4038ce:	cmp    bl,BYTE PTR [ebx+0x5f23c2c8]
  4038d4:	mov    edx,DWORD PTR [ebp+0x1f]
  4038d7:	in     al,0x12
  4038d9:	lea    ebx,[edx-0x6d]
  4038dc:	push   eax
  4038dd:	(bad)  
  4038de:	cli    
  4038df:	outs   dx,BYTE PTR ds:[esi]
  4038e0:	push   DWORD PTR [ebp+0x23]
  4038e3:	nop
  4038e4:	jne    0x4038ee
  4038e6:	jo     0x403915
  4038e8:	or     al,0x85
  4038ea:	push   edi
  4038eb:	pop    ss
  4038ec:	adc    ecx,DWORD PTR [ebx+0x453b92aa]
  4038f2:	pop    ss
  4038f3:	or     al,BYTE PTR [edi]
  4038f5:	mov    eax,0x5ed6
  4038fa:	jl     0x403895
  4038fc:	sub    al,al
  4038fe:	sub    al,0x5d
  403900:	sub    eax,eax
  403902:	push   cs
  403903:	popf   
  403904:	or     al,0x0
  403906:	mov    ah,bl
  403908:	in     al,dx
  403909:	sbb    DWORD PTR [ebx],0xffffff93
  40390c:	push   esi
  40390d:	push   eax
  40390e:	fild   WORD PTR [esi]
  403910:	xchg   ebx,eax
  403911:	adc    edi,esp
  403913:	pop    esi
  403914:	clc    
  403915:	jb     0x4038ad
  403917:	fwait
  403918:	inc    DWORD PTR [ebx+0x74006212]
	...
  403946:	add    BYTE PTR [eax],al
  403948:	test   eax,0xa7087ddb
  40394d:	or     DWORD PTR [edi],eax
  40394f:	sub    edx,edi
  403951:	xor    cl,cl
  403953:	ret    0x5e63
  403956:	cmp    DWORD PTR [ebp-0x69],0x5e
  40395a:	jne    0x403966
  40395c:	mov    edi,0x5700005d
  403961:	xor    cl,cl
  403963:	ret    0x5e83
  403966:	mov    esi,DWORD PTR [ebp+0x53]
  403969:	xlat   BYTE PTR ds:[ebx]
  40396a:	inc    ebp
  40396b:	cld    
  40396c:	addr16 pop esi
  40396e:	add    BYTE PTR [eax],al
  403970:	ds std 
  403972:	dec    ebp
  403973:	or     BYTE PTR [ebp+0x3a458696],dh
  403979:	je     0x403970
  40397b:	jne    0x4039cb
  40397d:	jb     0x403974
  40397f:	jne    0x4039b7
  403981:	adc    DWORD PTR [ecx+0x10],edx
  403984:	mov    ebx,0x65077ac3
  403989:	inc    esp
  40398a:	push   ebp
  40398b:	leave  
  40398c:	cld    
  40398d:	xchg   DWORD PTR [ebx],eax
  40398f:	or     DWORD PTR [ebx+0x39750330],0x5d
  403996:	les    ebx,FWORD PTR [esi+0x7]
  403999:	inc    esi
  40399a:	pop    es
  40399b:	add    ch,al
  40399d:	mov    esi,0x5aee03f7
  4039a2:	aas    
  4039a3:	adc    BYTE PTR [ebx+0x40],ch
  4039a6:	mov    ebx,0x3843e01
  4039ab:	pop    esi
	...
  4039d4:	add    BYTE PTR [eax],al
  4039d6:	pop    es
  4039d7:	inc    esi
  4039d8:	pop    es
  4039d9:	add    BYTE PTR [ebx-0x3],dh
  4039dc:	out    0x81,al
  4039de:	cli    
  4039df:	imul   esp,esp,0xffffffff
  4039e2:	mov    ecx,0x4a685bf3
  4039e7:	mov    dh,0x43
  4039e9:	add    BYTE PTR [esi-0x5e3cfdeb],ah
  4039ef:	fld    QWORD PTR [ebx]
  4039f1:	push   0x3e
  4039f3:	cs pop es
  4039f5:	push   0x3e
  4039f7:	cs pop es
  4039f9:	push   0x8003843e
  4039fe:	sub    DWORD PTR [esi],0xd32de7fc
  403a04:	add    al,0x0
  403a06:	(bad)  
  403a07:	ds lock inc eax
  403a0a:	xrelease xchg DWORD PTR [edx+eax*8+0x5d8436],edi
  403a12:	retf   
  403a13:	pop    edx
  403a14:	sub    al,0xec
  403a16:	out    dx,al
  403a17:	add    ch,cl
  403a19:	adc    edi,DWORD PTR [esi]
  403a1b:	pop    ebx
  403a1c:	mov    DWORD PTR fs:[esi-0x77],eax
  403a20:	mov    ?,ebx
  403a22:	mov    ds,WORD PTR [eax+0x6f26effc]
  403a28:	js     0x403a2e
  403a2a:	ds fs test eax,0xf4983079
  403a31:	out    dx,eax
  403a32:	imul   ebx,DWORD PTR es:[eax+0x4],0xbd29443e
	...
  403a62:	add    BYTE PTR [eax],al
  403a64:	cld    
  403a65:	arpl   cx,bp
  403a67:	repnz mov edx,DWORD PTR [ebx-0x770976a4]
  403a6e:	inc    esi
  403a6f:	repz mov ds,WORD PTR [eax+0x66e1ffb4]
  403a76:	ss repz loope 0x403a56
  403a7a:	lods   al,BYTE PTR ds:[esi]
  403a7b:	jmp    0x403abb
  403a7d:	push   cs
  403a7e:	gs repz dec ebx
  403a81:	xchg   edi,eax
  403a82:	adc    ebp,ebx
  403a84:	into   
  403a85:	pop    ebx
  403a86:	jmp    0xe99b7a36
  403a8b:	add    eax,DWORD PTR [edi+0xb03f19d]
  403a91:	in     al,0xd
  403a93:	push   esp
  403a94:	push   es
  403a95:	add    edx,DWORD PTR [eax+0x16]
  403a98:	(bad)  
  403a99:	pop    edx
  403a9a:	icebp  
  403a9b:	jne    0x403adc
  403a9d:	pushf  
  403a9e:	out    0x5d,al
  403aa0:	cmp    al,0x5
  403aa2:	jmp    0xc1a34e99
  403aa7:	xchg   ecx,eax
  403aa8:	sbb    DWORD PTR [eax+0x5f7cbcce],0xffffffe9
  403aaf:	pop    eax
  403ab0:	lds    eax,FWORD PTR [edi-0x2d29b3e7]
  403ab6:	add    bl,bl
  403ab8:	std    
  403ab9:	pop    edx
  403aba:	clc    
  403abb:	cmp    eax,DWORD PTR [ebx-0x64]
  403abe:	call   DWORD PTR [ebx]
  403ac0:	cmp    al,BYTE PTR ds:0x62c69e00
  403ac6:	call   0x403ae1
	...
  403aef:	add    BYTE PTR [eax],al
  403af1:	add    BYTE PTR [edi-0x68],cl
  403af4:	jmp    DWORD PTR [eax+0x1c005f03]
  403afa:	mov    cl,0x87
  403afc:	and    DWORD PTR [ebp+0x1582b15],0xfffffff0
  403b03:	ins    BYTE PTR es:[edi],dx
  403b04:	inc    eax
  403b05:	jmp    0x2a41482f
  403b0a:	or     al,0x98
  403b0c:	jne    0x403afb
  403b0e:	mov    esp,0x762ef81d
  403b13:	xchg   edi,eax
  403b14:	add    cl,ch
  403b16:	cmp    eax,0xece96a5b
  403b1b:	or     eax,0x63663e0c
  403b20:	call   0xffd829cb
  403b25:	bound  esi,QWORD PTR [esi+0x63]
  403b28:	mov    edi,ebx
  403b2a:	int3   
  403b2b:	or     eax,0x93461efc
  403b30:	call   FWORD PTR [ebp+eax*8-0x50ead68]
  403b37:	pushf  
  403b38:	or     cl,ch
  403b3a:	push   ss
  403b3b:	in     al,0xec
  403b3d:	cdq    
  403b3e:	cmc    
  403b3f:	add    bl,BYTE PTR [eax]
  403b41:	(bad)  
  403b43:	pop    edx
  403b44:	clc    
  403b45:	jnp    0x403b89
  403b47:	pushf  
  403b48:	call   DWORD PTR [ebx+0x3a]
  403b4b:	cwde   
  403b4c:	jne    0x403b3f
  403b4e:	gs sar bh,0xd6
  403b52:	(bad)  
  403b53:	mov    eax,ds:0xe5c2
	...
  403b80:	cmp    eax,0x8b008b2e
  403b85:	adc    eax,0x48d41455
  403b8a:	add    BYTE PTR [ebp+0x53],dh
  403b8d:	aam    0xc2
  403b8f:	adc    BYTE PTR [edi-0x76],ah
  403b92:	jne    0x403ba4
  403b94:	cwde   
  403b95:	(bad)  
  403b97:	push   DWORD PTR [edx]
  403b99:	xchg   edi,eax
  403b9a:	out    0xe6,eax
  403b9c:	stos   BYTE PTR es:[edi],al
  403b9d:	mov    edi,edi
  403b9f:	mov    esi,DWORD PTR [edx+0x73]
  403ba2:	and    DWORD PTR [edx],eax
  403ba4:	out    dx,al
  403ba5:	popf   
  403ba6:	adc    BYTE PTR [eax],al
  403ba8:	push   edx
  403ba9:	sbb    ah,ch
  403bab:	adc    ebx,0xffffff8b
  403bae:	push   DWORD PTR [ebp-0x5]
  403bb1:	cmp    BYTE PTR [ecx*4-0xaf791e],al
  403bb8:	repnz xchg edx,eax
  403bba:	out    0xc3,eax
  403bbc:	push   0xa28bff8c
  403bc1:	xchg   esi,eax
  403bc2:	cmp    BYTE PTR [eax],0xe7
  403bc5:	push   cs
  403bc6:	pop    es
  403bc7:	mov    esp,DWORD PTR [edx+0x7cc80f86]
  403bcd:	pop    ebp
  403bce:	sub    eax,eax
  403bd0:	push   ds
  403bd1:	popf   
  403bd2:	or     BYTE PTR [eax],al
  403bd4:	xchg   edx,eax
  403bd5:	pop    ss
  403bd6:	in     al,dx
  403bd7:	and    DWORD PTR [ebx],0xffffff8b
  403bda:	push   DWORD PTR [ebp-0x25]
  403bdd:	cmp    BYTE PTR [edx],al
  403bdf:	(bad)  
  403be0:	loop   0x403b6e
  403be2:	push   eax
  403be3:	inc    DWORD PTR [eax]
	...
  403c0d:	add    BYTE PTR [edx],dh
  403c0f:	xchg   edx,eax
  403c10:	out    0x97,eax
  403c12:	test   al,0x8b
  403c14:	dec    DWORD PTR [ebx+0x388296d2]
  403c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c1b:	push   cs
  403c1c:	or     BYTE PTR [edi],cl
  403c1e:	mov    al,0x1d
  403c20:	inc    BYTE PTR [esi+0x2b02b7e3]
  403c26:	les    edi,FWORD PTR ds:[edx+0x568446c2]
  403c2d:	mov    esp,DWORD PTR [edx+0x1]
  403c30:	(bad)  
  403c31:	cld    
  403c32:	imul   ecx,DWORD PTR [edi+0x0],0x45ff3f6a
  403c39:	(bad)  
  403c3a:	out    dx,al
  403c3b:	les    esi,FWORD PTR [esi+0x8]
  403c3e:	pushw  0xfff1
  403c41:	dec    DWORD PTR [ecx+0x9]
  403c44:	inc    esi
  403c45:	or     al,0xbd
  403c47:	lods   al,BYTE PTR ds:[esi]
  403c48:	add    esi,DWORD PTR [eax+eax*2-0x4b]
  403c4c:	mov    ecx,0x5e93145
  403c51:	sub    edi,esi
  403c53:	retf   0x8c5
  403c56:	ds ja  0x403cd6
  403c59:	in     al,dx
  403c5a:	lds    ebp,FWORD PTR [esi+0x14]
  403c5d:	adc    DWORD PTR [esp+eax*4+0x76],0x4
  403c62:	test   DWORD PTR [ecx-0x1],0xffb700ff
  403c69:	(bad)  
  403c6a:	jae    0x403ce8
  403c6c:	fcmovnbe st,st(0)
  403c6e:	repnz sbb al,0xf0
  403c71:	or     eax,DWORD PTR [eax]
	...
  403c9b:	add    dh,bh
  403c9d:	into   
  403c9e:	cld    
  403c9f:	mov    cl,BYTE PTR [ebx+0x3e02c8b4]
  403ca5:	test   BYTE PTR [ebx],al
  403ca7:	add    ch,ah
  403ca9:	mov    ds,WORD PTR [ebp+0x1]
  403cac:	leave  
  403cad:	out    dx,al
  403cae:	(bad)  
  403caf:	dec    BYTE PTR [ebx+0x7c]
  403cb2:	fstp   TBYTE PTR ds:0xc9f064ba
  403cb8:	jl     0x403c49
  403cba:	add    edx,DWORD PTR [ebp-0x4b]
  403cbd:	addr16 test ah,al
  403cc0:	mov    ds:0x4a757cf5,al
  403cc5:	fiadd  DWORD PTR [ebx]
  403cc7:	(bad)  
  403cc8:	sti    
  403cc9:	pop    edx
  403cca:	in     eax,0x54
  403ccc:	mov    DWORD PTR [edi],ecx
  403cce:	stc    
  403ccf:	push   ebp
  403cd0:	or     DWORD PTR [edi],0x8604dbe1
  403cd6:	jmp    0x3ddb81de
  403cdb:	push   es
  403cdc:	mov    ebp,0xeb04bd17
  403ce1:	pop    ebp
  403ce2:	add    al,ah
  403ce4:	clc    
  403ce5:	mov    ds:0xe23e00ab,eax
  403cea:	sub    al,0xf0
  403cec:	cmp    eax,0x2e48d08b
  403cf1:	adc    BYTE PTR [edx-0x16a4c054],bh
  403cf7:	add    edx,DWORD PTR [eax+0x3e00aba2]
  403cfd:	cs jb  0x403ce0
	...
  403d28:	add    BYTE PTR [eax],al
  403d2a:	mov    edi,0x19eef19f
  403d2f:	xchg   ebp,eax
  403d30:	sbb    bl,BYTE PTR [ebx]
  403d32:	cmc    
  403d33:	add    ecx,ebp
  403d35:	pop    ecx
  403d36:	ds add ebx,ebp
  403d39:	pop    ecx
  403d3a:	ds add edx,ebp
  403d3d:	pop    ebx
  403d3e:	ds pop ebx
  403d40:	jmp    0xf54f2f08
  403d45:	fucomi st,st(6)
  403d47:	test   ecx,ebp
  403d49:	add    esi,DWORD PTR [edi+0x5244351e]
  403d4f:	sub    BYTE PTR [esi],ch
  403d51:	jns    0x403d99
  403d53:	adc    esp,0xffffffed
  403d56:	leave  
  403d57:	xchg   esp,eax
  403d58:	es dec ecx
  403d5a:	(bad)  
  403d5b:	pop    ebx
  403d5c:	jmp    0xb5207b64
  403d61:	sti    
  403d62:	les    ebp,FWORD PTR [ecx+0x74]
  403d65:	dec    ecx
  403d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d67:	sub    edx,DWORD PTR [ecx+0x5b3e83]
  403d6d:	jmp    0xeeb91c30
  403d72:	mov    al,ds:0x6e65094
  403d77:	arpl   di,di
  403d79:	cmp    edi,DWORD PTR [esi]
  403d7b:	fdivr  DWORD PTR [ebp-0x2f]
  403d7e:	cmp    eax,0x952a030e
  403d83:	jae    0x403d84
  403d85:	cmp    al,0x5a
  403d87:	out    0x85,al
  403d89:	inc    ecx
  403d8a:	push   ecx
  403d8b:	xchg   esp,eax
  403d8c:	call   FWORD PTR [ecx]
	...
  403db6:	add    BYTE PTR [eax],al
  403db8:	imul   ecx,DWORD PTR [esi],0x93eac1fc
  403dbe:	jmp    DWORD PTR [esi-0x148b2bbc]
  403dc4:	fs (bad) 
  403dc6:	call   FWORD PTR [esi+ebp*1]
  403dc9:	and    DWORD PTR [ebx-0x74a4c281],0xffffffaa
  403dd0:	je     0x403d74
  403dd2:	ret    0x3df1
  403dd5:	mov    eax,DWORD PTR cs:[ebp+0x6ef89ebc]
  403ddc:	xchg   esi,eax
  403ddd:	addr16 call 0xffd4526c
  403de3:	jo     0x403e5b
  403de5:	xchg   ebx,eax
  403de6:	(bad)  
  403de7:	lods   al,BYTE PTR ds:[esi]
  403de8:	jmp    0x3e293e47
  403ded:	xchg   esp,eax
  403dee:	jne    0x403de5
  403df0:	add    eax,0xd03efdd0
  403df5:	fist   WORD PTR [ebp-0x1b]
  403df8:	push   esp
  403df9:	imul   ebp,DWORD PTR [edx-0x17],0x9cff5b77
  403e00:	fst    DWORD PTR [ebx+0xdd02175]
  403e06:	or     BYTE PTR [esi],dl
  403e08:	ss addr16 (bad) 
  403e0b:	mov    ebx,0xc2a241
  403e10:	scas   eax,DWORD PTR es:[edi]
  403e11:	push   edi
  403e12:	push   ebp
  403e13:	mov    esi,DWORD PTR [ebx]
  403e15:	fld    st(4)
  403e17:	clc    
  403e18:	push   0xf823
	...
  403e45:	add    BYTE PTR [edi+0x5ac70057],ah
  403e4b:	mov    eax,DWORD PTR [eax]
  403e4d:	add    BYTE PTR [edi+0x5f558b57],dl
  403e53:	adc    dl,BYTE PTR [edx]
  403e55:	lea    ebx,[edx]
  403e57:	xchg   DWORD PTR [eax+0x6a],edx
  403e5a:	push   esi
  403e5b:	xchg   BYTE PTR [ebp-0x4],dh
  403e5e:	mov    al,ds:0x1afff80b
  403e63:	xchg   edi,eax
  403e64:	(bad)  
  403e65:	push   edx
  403e66:	imul   edx,DWORD PTR [edx],0x45
  403e69:	clc    
  403e6a:	mov    ds,WORD PTR [eax+0x120a0004]
  403e70:	in     al,dx
  403e71:	push   0x26
  403e73:	adc    al,BYTE PTR [ebp+0xc]
  403e76:	ja     0x403df8
  403e78:	jne    0x403e82
  403e7a:	iret   
  403e7b:	dec    esp
  403e7c:	cld    
  403e7d:	jmp    DWORD PTR [eax+0x2708c2d6]
  403e83:	sub    cl,BYTE PTR [ebx-0x729cc214]
  403e89:	inc    ebp
  403e8a:	adc    ebp,DWORD PTR [edi]
  403e8c:	push   DWORD PTR [ebp+0xf]
  403e8f:	mov    bh,0x1e
  403e91:	cld    
  403e92:	nop
  403e93:	or     cl,0xc2
  403e96:	fistp  WORD PTR [esi+0x55]
  403e99:	mov    edx,DWORD PTR [ebx-0x28f38224]
  403e9f:	or     dl,BYTE PTR [ebx+eax*4]
  403ea2:	xchg   edx,eax
  403ea3:	outs   dx,BYTE PTR ds:[esi]
  403ea4:	add    BYTE PTR [ecx+esi*8+0x7f],dh
  403ea8:	jne    0x403eba
	...
  403ed2:	add    BYTE PTR [eax],al
  403ed4:	and    BYTE PTR [edx],cl
  403ed6:	or     al,0xff
  403ed8:	stos   BYTE PTR es:[edi],al
  403ed9:	xchg   esi,eax
  403eda:	out    0xfd,eax
  403edc:	ds ins DWORD PTR es:[edi],dx
  403ede:	in     eax,dx
  403edf:	inc    DWORD PTR [edi+0x13000046]
  403ee5:	or     eax,0xb42bffe0
  403eea:	in     al,dx
  403eeb:	jne    0x403f33
  403eed:	pop    esp
  403eee:	mov    al,0xff
  403ef0:	xchg   ecx,eax
  403ef1:	add    DWORD PTR [eax+0x77842e7d],0x2fbd14
  403efb:	add    dl,dh
  403efd:	jns    0x403eeb
  403eff:	jne    0x403f4f
  403f01:	mov    eax,ds:0x4f690c76
  403f06:	cld    
  403f07:	out    0xa9,eax
  403f09:	shr    esp,1
  403f0b:	inc    DWORD PTR [edi-0x1500003a]
  403f11:	cld    
  403f12:	fiadd  WORD PTR [ebx+0x740387cb]
  403f18:	xor    al,0xf1
  403f1a:	jbe    0x403f28
  403f1c:	es fiadd WORD PTR ss:[eax]
  403f20:	fld    QWORD PTR ds:[ecx]
  403f23:	sub    edi,esi
  403f25:	jae    0x403f14
  403f27:	jne    0x403f5b
  403f29:	adc    DWORD PTR [esi+0x8],esi
  403f2c:	es push ebp
  403f2e:	in     al,dx
  403f2f:	call   DWORD PTR [ecx]
  403f31:	mov    ebx,0xcf3e08c1
  403f36:	js     0x403f24
	...
  403f60:	add    BYTE PTR [eax],al
  403f62:	add    DWORD PTR [edi+0x2921e7fb],esp
  403f68:	in     al,dx
  403f69:	dec    DWORD PTR [esi+0x7f67fb9e]
  403f6f:	int3   
  403f70:	inc    edx
  403f71:	add    cl,ah
  403f73:	(bad)  
  403f74:	sti    
  403f75:	out    0x4d,eax
  403f77:	dec    ecx
  403f78:	in     al,dx
  403f79:	jmp    DWORD PTR [esp+eax*4-0x14]
  403f7d:	jne    0x403fb5
  403f7f:	pop    ebx
  403f80:	adc    DWORD PTR [edi-0x3f],edx
  403f83:	xchg   ecx,eax
  403f84:	push   ds
  403f85:	pop    ecx
  403f86:	cmp    al,0xe0
  403f88:	lods   al,BYTE PTR ds:[esi]
  403f89:	inc    DWORD PTR [ecx]
  403f8b:	xchg   edx,eax
  403f8c:	xchg   esp,eax
  403f8d:	sti    
  403f8e:	mov    eax,ds:0xa1ec0635
  403f93:	add    al,0xeb
  403f95:	jle    0x403f9a
  403f97:	imul   ebx,DWORD PTR [ecx+0x1630bec],0x3e
  403f9e:	mov    DWORD PTR [ecx-0x6388b31a],edx
  403fa4:	in     eax,dx
  403fa5:	add    edx,DWORD PTR [ebx]
  403fa7:	out    0xc5,al
  403fa9:	xchg   DWORD PTR [edx-0x72],edi
  403fac:	into   
  403fad:	jno    0x403fe5
  403faf:	sbb    DWORD PTR [ecx],0xffffffee
  403fb2:	popa   
  403fb3:	xchg   ecx,eax
  403fb4:	adc    al,BYTE PTR [ecx+0x4a]
  403fb7:	in     al,0x2c
  403fb9:	call   0xfc1d577b
  403fbe:	xlat   BYTE PTR ds:[ebx]
  403fbf:	pop    edx
  403fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc1:	jno    0x403ff5
  403fc3:	xchg   edx,eax
  403fc4:	adc    al,0xfc
	...
  403fee:	add    BYTE PTR [eax],al
  403ff0:	and    DWORD PTR [ebx+edx*4-0x15],ebx
  403ff4:	xor    DWORD PTR [ecx+0x729e814],edx
  403ffa:	icebp  
  403ffb:	fstp   TBYTE PTR ds:0x19eb7e90
  404001:	pop    es
  404002:	loope  0x403fdf
  404004:	dec    edx
  404005:	(bad)  
  404006:	outs   dx,BYTE PTR ds:[esi]
  404007:	jmp    0x403fbe
  404009:	push   ss
  40400a:	gs mov ebp,0x50e963fc
  404010:	lds    edi,FWORD PTR [edi+0x6a]
  404013:	shr    dl,0x98
  404016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404017:	out    dx,eax
  404018:	ds pop ebx
  40401a:	jmp    0x3d56f322
  40401f:	push   esp
  404020:	fld    DWORD PTR [esi]
  404022:	add    cl,ah
  404024:	cmc    
  404025:	cmp    esi,ebp
  404027:	jmp    0xa2011669
  40402c:	es nop
  40402e:	jne    0x404021
  404030:	xchg   ebp,eax
  404031:	xchg   ebp,eax
  404032:	stc    
  404033:	push   ss
  404034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404035:	loop   0x40407c
  404037:	adc    DWORD PTR [ebp-0x7aee03fa],edx
  40403d:	jg     0x40403f
  40403f:	jmp    0xdfb510dc
  404044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404045:	push   es
  404046:	clc    
  404047:	cdq    
  404048:	jmp    0x4040a4
  40404a:	call   0x9b7fa7
  40404f:	jo     0x40404f
  404051:	xchg   bh,bh
  404053:	pop    esp
	...
  40407c:	add    BYTE PTR [eax],al
  40407e:	sbb    bx,0xffbd
  404082:	cmp    eax,0x623cff5b
  404087:	js     0x404064
  404089:	ret    0x9064
  40408c:	mov    ebp,DWORD PTR [esi+ecx*2]
  40408f:	pusha  
  404090:	enter  0x6db6,0x2b
  404094:	call   FWORD PTR [edx+eax*2]
  404097:	js     0x40402b
  404099:	lahf   
  40409a:	and    al,0x90
  40409c:	leave  
  40409d:	stos   DWORD PTR es:[edi],eax
  40409e:	xor    DWORD PTR [eax-0x23ee9dac],edx
  4040a4:	les    edi,FWORD PTR [ecx-0x4]
  4040a7:	adc    eax,0x5b3de9f4
  4040ac:	add    BYTE PTR [esi+edi*2-0x71],ah
  4040b0:	push   eax
  4040b1:	outs   dx,BYTE PTR ds:[esi]
  4040b2:	mov    fs,WORD PTR [ebx-0x18]
  4040b5:	sub    esi,esp
  4040b7:	pop    edx
  4040b8:	add    BYTE PTR [ebp+edi*8+0x12],ah
  4040bc:	dec    ebp
  4040bd:	push   esi
  4040be:	outs   dx,BYTE PTR ds:[esi]
  4040bf:	arpl   ax,bp
  4040c1:	jne    0x40409d
  4040c3:	(bad)  
  4040c4:	inc    DWORD PTR [eax]
  4040c6:	outs   dx,BYTE PTR ds:[esi]
  4040c7:	sbb    edi,eax
  4040c9:	sbb    DWORD PTR [edx+0x3b720483],0xffffffd8
  4040d0:	ins    DWORD PTR es:[edi],dx
  4040d1:	clc    
  4040d2:	jecxz  0x404058
  4040d4:	jne    0x4040d2
  4040d6:	das    
  4040d7:	add    eax,0x90a700ec
  4040dc:	mov    edi,0x75849574
  4040e1:	clc    
	...
  40410a:	add    BYTE PTR [eax],al
  40410c:	out    0x2d,eax
  40410e:	add    al,ch
  404110:	xchg   esi,eax
  404111:	pop    edx
  404112:	add    BYTE PTR [eax],al
  404114:	test   al,0xd3
  404116:	not    eax
  404118:	push   ds
  404119:	sbb    esi,esp
  40411b:	call   DWORD PTR [edx]
  40411d:	js     0x404107
  40411f:	imul   edx,DWORD PTR [bp+0x0],0xffffffeb
  404124:	jno    0x4040a8
  404126:	jne    0x404130
  404128:	jg     0x404159
  40412a:	sti    
  40412b:	(bad)  
  40412c:	js     0x40419b
  40412e:	ror    cl,0x95
  404131:	pop    edx
  404132:	add    bl,ch
  404134:	popa   
  404135:	outs   dx,BYTE PTR ds:[esi]
  404136:	ror    cl,0xa5
  404139:	pop    edx
  40413a:	add    BYTE PTR [edx+0x55],ch
  40413d:	sub    eax,0x8f22fffc
  404142:	out    0x4,eax
  404144:	fiadd  WORD PTR [edi+edi*8+0x18762c7]
  40414b:	add    BYTE PTR [edi],dl
  40414d:	pop    ebx
  40414e:	lea    eax,[ebp-0x59]
  404151:	daa    
  404152:	push   DWORD PTR [ebp+0xf]
  404155:	mov    bl,0xfa
  404157:	sti    
  404158:	mov    BYTE PTR [ebx+eax*4+0x7457877d],al
  40415f:	adc    cl,BYTE PTR [eax]
  404161:	sar    DWORD PTR [ebx],cl
  404163:	inc    ebp
  404164:	xchg   ebx,eax
  404165:	inc    BYTE PTR [esi]
  404167:	mov    eax,0x3833e
  40416c:	sbb    DWORD PTR ds:[edx],eax
  40416f:	sub    eax,DWORD PTR [eax]
	...
  404199:	add    dh,bh
  40419b:	sub    DWORD PTR [esi],eax
  40419d:	sub    edi,esi
  40419f:	dec    ebx
  4041a0:	mov    BYTE PTR [esi+edi*1],0xef
  4041a4:	jl     0x404192
  4041a6:	mov    ebp,0x7b8dec38
  4041ab:	cmp    BYTE PTR [edi+edi*8+0x33],dl
  4041af:	mov    ebx,ds
  4041b1:	sbb    ah,BYTE PTR [ebx+0x7e850384]
  4041b7:	in     al,dx
  4041b8:	sbb    al,0xff
  4041ba:	sub    ecx,DWORD PTR [ebx+ebx*8-0x17726912]
  4041c1:	mov    ebx,edi
  4041c3:	mov    ebp,eax
  4041c5:	jne    0x404151
  4041c7:	pop    esp
  4041c8:	in     eax,0xeb
  4041ca:	ds test ah,bh
  4041cd:	mov    edi,0x75e887f2
  4041d2:	inc    edx
  4041d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d4:	outs   dx,BYTE PTR ds:[esi]
  4041d5:	clc    
  4041d6:	push   cs
  4041d7:	pushf  
  4041d8:	or     edi,DWORD PTR cs:[esi]
  4041db:	test   al,ch
  4041dd:	jne    0x404239
  4041df:	lods   al,BYTE PTR ds:[esi]
  4041e0:	shr    bl,cl
  4041e2:	ds test al,ch
  4041e5:	jne    0x40421d
  4041e7:	pushf  
  4041e8:	sar    dl,cl
  4041ea:	inc    ecx
  4041eb:	mov    ch,0xba
  4041ed:	ret    0x8446
  4041f0:	dec    esi
  4041f1:	mov    esp,DWORD PTR [edx]
  4041f3:	add    DWORD PTR [edi-0x33667218],edi
  4041f9:	lea    edi,[ebx-0x28]
  4041fc:	push   ebx
  4041fd:	inc    DWORD PTR [eax]
	...
  404227:	add    BYTE PTR [ebx+0x22cadb8c],dl
  40422d:	test   BYTE PTR [ebx],al
  40422f:	test   esi,edi
  404231:	lods   al,BYTE PTR ds:[esi]
  404232:	jnp    0x4041eb
  404234:	ds pop ebx
  404236:	jmp    0xf1483b3e
  40423b:	fcmovnbe st,st(4)
  40423d:	xchg   edx,eax
  40423e:	push   esi
  40423f:	call   0xe89559fb
  404244:	imul   ecx,DWORD PTR [edi+0x5ae57851],0xffffffe9
  40424b:	cld    
  40424c:	xchg   ecx,eax
  40424d:	pop    ebp
  40424e:	ins    DWORD PTR es:[edi],dx
  40424f:	xchg   DWORD PTR [esi],edi
  404251:	pop    ebx
  404252:	jmp    0x26cbbdd1
  404257:	outs   dx,BYTE PTR ds:[esi]
  404258:	mov    dl,0x82
  40425a:	jnp    0x404260
  40425c:	aas    
  40425d:	pop    ebx
  40425e:	push   0xffffffbf
  404260:	inc    edx
  404261:	pop    eax
  404262:	jmp    0x999b506a
  404267:	(bad)  
  404269:	pop    edx
  40426a:	jmp    0x5580972
  40426f:	call   0x6841c987
  404274:	cmp    eax,0x8282e95c
  404279:	push   esi
  40427a:	in     al,0x3
  40427c:	ds imul ebp,ecx,0x53
  404280:	push   esi
  404281:	jmp    0xdc2c:0xe43e03e9
  404288:	in     al,0x5a
  40428a:	mov    esi,0x71
	...
  4042b3:	add    BYTE PTR [eax],al
  4042b5:	add    BYTE PTR [edx-0x73],ah
  4042b8:	cmp    al,0xf0
  4042ba:	dec    ecx
  4042bb:	pop    es
  4042bc:	shl    edi,0xcb
  4042bf:	mov    dl,BYTE PTR [ecx-0x16a5c2a3]
  4042c5:	cmp    dl,0x67
  4042c8:	pusha  
  4042c9:	inc    ecx
  4042ca:	lea    edx,es:[eax+ebp*8]
  4042ce:	push   ss
  4042cf:	inc    ebp
  4042d0:	xchg   edx,eax
  4042d1:	add    al,0x3e
  4042d3:	mov    esp,?
  4042d5:	sti    
  4042d6:	sbb    esi,eax
  4042d8:	add    BYTE PTR [ebx+0x21],dh
  4042db:	lea    ebp,[edx-0x1f]
  4042de:	cmp    BYTE PTR gs:[eax-0x58],cl
  4042e2:	cmp    eax,0x15f1758c
  4042e7:	pop    eax
  4042e8:	std    
  4042e9:	push   esi
  4042ea:	loope  0x40434c
  4042ec:	fmul   DWORD PTR [esi+0x6f]
  4042ef:	xchg   edi,edi
  4042f1:	mov    esp,0x3de274d5
  4042f6:	(bad)  [ebx+eiz*1-0x7f91eef]
  4042fd:	cs dec edi
  4042ff:	cmp    edi,0xffffff9c
  404302:	mov    ch,0x74
  404304:	or     BYTE PTR [ecx+ebx*4],bl
  404307:	mov    WORD PTR [ebx],fs
  404309:	xor    DWORD PTR [ecx+0x3101ec06],esp
  40430f:	pop    ebx
  404310:	add    cl,ch
  404312:	mov    al,ds:0x8911e806
  404317:	mov    edi,?
  404319:	jmp    0x40431e
	...
  404342:	add    BYTE PTR [eax],al
  404344:	mov    al,ds:0x8b010806
  404349:	xchg   edx,eax
  40434a:	jmp    esi
  40434c:	hlt    
  40434d:	xchg   edi,eax
  40434e:	pop    ebx
  40434f:	mov    al,0x7f
  404351:	push   edi
  404352:	add    BYTE PTR [eiz*8+0x624c837e],bh
  404359:	mov    WORD PTR [ebx-0xf],?
  40435c:	pusha  
  40435d:	push   es
  40435e:	or     cl,dl
  404360:	add    BYTE PTR [ecx-0x64db1700],0xc9
  404367:	stos   DWORD PTR es:[edi],eax
  404368:	inc    ecx
  404369:	mov    WORD PTR [edx+esi*2+0x11],ss
  40436d:	loopne 0x4043b4
  40436f:	icebp  
  404370:	fild   DWORD PTR ds:[eax]
  404373:	jmp    0x29aa6eb5
  404378:	add    dl,BYTE PTR [edi+0x582700ea]
  40437e:	leave  
  40437f:	ret    0x581b
  404382:	push   ebp
  404383:	mov    eax,ebx
  404385:	sbb    al,0xfc
  404387:	mov    edx,DWORD PTR [edx]
  404389:	nop
  40438a:	mov    cl,BYTE PTR [ebp-0xd]
  40438d:	js     0x40439d
  40438f:	push   ecx
  404390:	es scas eax,DWORD PTR es:[edi]
  404392:	add    ch,BYTE PTR [ebx]
  404394:	pop    ss
  404395:	mov    DWORD PTR [ebx+0x3775459],ebp
  40439b:	rep lods eax,DWORD PTR ds:[esi]
  40439d:	adc    al,0xc9
  40439f:	ret    0x57cf
  4043a2:	push   ebp
  4043a3:	mov    eax,DWORD PTR [ebx+0x8b571e]
	...
  4043d1:	add    BYTE PTR [edx-0x2574047d],dl
  4043d7:	(bad)
  4043db:	js     0x4043df
  4043dd:	repz sti 
  4043df:	adc    al,0x5e
  4043e1:	leave  
  4043e2:	push   ebp
  4043e3:	test   bh,bh
  4043e5:	push   esp
  4043e6:	or     al,0xa4
  4043e8:	push   esi
  4043e9:	push   edi
  4043ea:	or     al,0xb
  4043ec:	or     ah,bh
  4043ee:	sbb    al,0x53
  4043f0:	adc    BYTE PTR [ebx],ch
  4043f2:	push   edi
  4043f3:	adc    DWORD PTR [ebp+0xc],edi
  4043f6:	test   BYTE PTR [eax-0xd],bl
  4043f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043fa:	ins    BYTE PTR es:[edi],dx
  4043fb:	shl    BYTE PTR [ebp+0x1],1
  4043fe:	pop    ss
  4043ff:	push   ss
  404400:	pop    esi
  404401:	leave  
  404402:	xchg   ebp,eax
  404403:	xchg   edx,eax
  404404:	call   DWORD PTR [esp+ecx*8-0x4e]
  404408:	add    esp,0xffffff93
  40440b:	sbb    al,0x57
  40440d:	push   ebx
  40440e:	call   FWORD PTR [eax+0x1]
  404411:	add    BYTE PTR [edi+0x76],dl
  404414:	jne    0x40441e
  404416:	iret   
  404417:	out    dx,al
  404418:	(bad)  
  404419:	call   eax
  40441b:	add    al,0x7d
  40441d:	or     BYTE PTR [esi],bh
  40441f:	cmp    DWORD PTR ds:0x42c0c2b,edi
  404425:	add    DWORD PTR [esi],edi
  404427:	je     0x4044a4
  404429:	adc    al,0x54
  40442b:	or     al,dl
  40442d:	loop   0x404436
  40442f:	(bad)  
  404430:	data16 or BYTE PTR [ecx+0x41],bh
  404434:	jns    0x4044ab
	...
  40445e:	add    BYTE PTR [eax],al
  404460:	dec    edx
  404461:	cmp    bh,BYTE PTR [edi]
  404463:	(bad)  
  404464:	ds ins DWORD PTR es:[edi],dx
  404466:	mov    ebx,0xffff052b
  40446b:	cmp    dh,BYTE PTR [esi-0x7cff1b41]
  404471:	and    bh,BYTE PTR [edx+0x4]
  404474:	pcmpeqb mm7,QWORD PTR [esi]
  404477:	(bad)  
  404478:	cmp    DWORD PTR [edx],ecx
  40447a:	dec    edi
  40447b:	(bad)  
  40447c:	mov    ah,0x80
  40447e:	sub    DWORD PTR [eax+0x45797d42],ecx
  404484:	mov    cl,0xc
  404486:	add    BYTE PTR [edx],bh
  404488:	jmp    FWORD PTR [esi+esi*1+0x18762c10]
  40448f:	leave  
  404490:	cwde   
  404491:	xor    eax,0xe8f5d56f
  404496:	inc    ebp
  404497:	leave  
  404498:	jl     0x40441a
  40449a:	add    edx,DWORD PTR [ebp-0x4b]
  40449d:	mov    BYTE PTR [eax+0x4e4576c4],al
  4044a3:	push   edi
  4044a4:	jno    0x4044d5
  4044a6:	cld    
  4044a7:	pop    edx
  4044a8:	mov    ah,0x75
  4044aa:	jnp    0x4044f1
  4044ac:	arpl   si,di
  4044ae:	aas    
  4044af:	add    esi,eax
  4044b1:	aaa    
  4044b2:	call   0x3d819a42
  4044b7:	mov    edx,ebx
  4044b9:	jg     0x404477
  4044bb:	inc    ebp
  4044bc:	inc    esi
  4044bd:	je     0x4044c2
  4044bf:	add    BYTE PTR [esi],bh
  4044c1:	pop    ebx
  4044c2:	jb     0x4044fa
	...
  4044ec:	add    BYTE PTR [eax],al
  4044ee:	dec    esi
  4044ef:	jle    0x40451a
  4044f1:	out    0x83,al
  4044f3:	mov    dh,ah
  4044f5:	lods   eax,DWORD PTR ds:[esi]
  4044f6:	jnp    0x404480
  4044f8:	fisubr WORD PTR [ebp+0x4e714332]
  4044fe:	adc    DWORD PTR [ebx+0x14],ebx
  404501:	call   0xe86d163f
  404506:	mov    ah,0x6e
  404508:	mov    cl,0x7b
  40450a:	xchg   ebx,eax
  40450b:	mov    esi,esi
  40450d:	lods   eax,DWORD PTR ds:[esi]
  40450e:	jnp    0x404498
  404510:	jno    0x404521
  404512:	es pop edx
  404514:	lahf   
  404515:	ds loop 0x4044ec
  404518:	mov    ah,0xe4
  40451a:	(bad)  
  40451b:	outs   dx,BYTE PTR ds:[esi]
  40451c:	add    DWORD PTR [edx+0x6b],edi
  40451f:	mov    ch,bl
  404521:	dec    esi
  404522:	enter  0xddd4,0x29
  404526:	mov    ch,0x1f
  404528:	xor    DWORD PTR [ebx],esi
  40452a:	push   edx
  40452b:	dec    ebx
  40452c:	es ds mov dh,0x7c
  404530:	sub    DWORD PTR [ecx+0x3],edi
  404533:	mov    BYTE PTR [ecx+0x0],ah
  404536:	mov    ah,0x1f
  404538:	or     eax,0xa65bfd7b
  40453d:	inc    ebp
  40453e:	cmc    
  40453f:	xchg   ebx,eax
  404540:	sub    esi,edi
  404542:	mov    DWORD PTR [esi],ebp
  404544:	(bad)  
  404545:	xlat   BYTE PTR ds:[ebx]
  404546:	mov    edi,0x79e4fd9e
  40454b:	mov    DWORD PTR [edx],edi
  40454d:	das    
  40454e:	xchg   ebp,eax
  40454f:	xlat   BYTE PTR ds:[ebx]
  404550:	and    al,0xe0
	...
  40457a:	add    BYTE PTR [eax],al
  40457c:	push   cs
  40457d:	mov    bl,BYTE PTR [esp+ecx*1+0x56]
  404581:	movnti DWORD PTR [esi+edi*1],eax
  404585:	loopne 0x404530
  404587:	adc    eax,esi
  404589:	lock jmp 0xca8392
  40458f:	cmp    al,0x32
  404591:	jae    0x4045d8
  404593:	mov    bh,0x1d
  404595:	mov    DWORD PTR [ecx+0x7589162c],ecx
  40459b:	popf   
  40459c:	sbb    al,BYTE PTR [esi-0x17]
  40459f:	jmp    0x160099e1
  4045a4:	popf   
  4045a5:	rol    BYTE PTR [ebp+0x79],cl
  4045a8:	sbb    eax,0x9491f40f
  4045ad:	mov    edi,edi
  4045af:	jbe    0x404564
  4045b1:	push   ds
  4045b2:	clc    
  4045b3:	outs   dx,BYTE PTR ds:[esi]
  4045b4:	xchg   edi,eax
  4045b5:	(bad)  
  4045b6:	(bad)  
  4045b7:	fcom   QWORD PTR ds:0xda597589
  4045bd:	xlat   BYTE PTR ds:[ebx]
  4045be:	(bad)  
  4045bf:	push   esi
  4045c0:	fisttp QWORD PTR [eax+0x63ea4d75]
  4045c6:	jmp    0x75c883b4
  4045cb:	in     eax,dx
  4045cc:	aad    0x5f
  4045ce:	jmp    0xff6b83bc
  4045d3:	mov    ah,0x49
  4045d5:	(bad)  
  4045d6:	test   DWORD PTR [edi],edx
  4045d8:	pushf  
  4045d9:	mov    bh,bh
  4045db:	mov    ecx,0x16febe95
	...
  404608:	add    BYTE PTR [eax],al
  40460a:	popf   
  40460b:	mov    BYTE PTR [ebp+0x15],dh
  40460e:	popf   
  40460f:	push   cs
  404610:	clc    
  404611:	je     0x4045da
  404613:	jns    0x404613
  404615:	(bad)  
  404616:	pushf  
  404617:	sub    ebp,eax
  404619:	neg    DWORD PTR [edi+0x16eeff88]
  40461f:	push   ebx
  404620:	call   0xffc8d879
  404625:	push   ebx
  404626:	cmp    dh,bl
  404628:	sub    eax,0xff5afb21
  40462d:	push   esp
  40462e:	dec    edx
  40462f:	jae    0x4045ec
  404631:	add    BYTE PTR [ebp+0x7d],bh
  404634:	dec    DWORD PTR [ebx]
  404636:	lahf   
  404637:	jge    0x4046ae
  404639:	hlt    
  40463a:	mov    BYTE PTR [ebx],ah
  40463c:	clc    
  40463d:	push   DWORD PTR [edx+0x57]
  404640:	call   0xffbd23f0
  404645:	and    edi,edi
  404647:	jl     0x4046be
  404649:	clc    
  40464a:	mov    edi,0xc8fffdc8
  40464f:	jl     0x4046c6
  404651:	or     BYTE PTR [edi-0x77000846],ch
  404657:	fld    st(3)
  404659:	pop    ebx
  40465a:	ficomp WORD PTR [ebp-0x27adfff8]
  404660:	in     al,dx
  404661:	and    DWORD PTR [ebx],0xffffffb0
  404664:	push   edi
  404665:	mov    esp,DWORD PTR [edx+0x3c00a8f]
  40466b:	push   edx
  40466c:	mov    DWORD PTR [eax],0x0
	...
  404696:	add    BYTE PTR [eax],al
  404698:	out    0x5b,eax
  40469a:	add    BYTE PTR [eax],al
  40469c:	sub    al,0x7c
  40469e:	cmp    DWORD PTR [ebp-0x21],0x5e
  4046a2:	jne    0x4046ab
  4046a4:	dec    ebp
  4046a5:	pop    esp
  4046a6:	add    al,BYTE PTR [eax]
  4046a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a9:	js     0x4046ba
  4046ab:	sbb    edx,0xffffff83
  4046ae:	add    DWORD PTR [ebp-0x60],esi
  4046b1:	in     eax,0x0
  4046b3:	add    DWORD PTR [edi+0x7c02eb5b],edx
  4046b9:	int    0x81
  4046bb:	retf   0x5b9e
  4046be:	add    al,BYTE PTR [eax]
  4046c0:	sbb    dl,BYTE PTR [ebx]
  4046c2:	cld    
  4046c3:	push   eax
  4046c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c5:	cmc    
  4046c6:	(bad)  
  4046c7:	(bad)  
  4046c8:	repnz push edi
  4046ca:	push   DWORD PTR [ebp+0x6f]
  4046cd:	jae    0x404671
  4046cf:	jmp    0xc04ba22b
  4046d4:	ds daa 
  4046d6:	jno    0x404665
  4046d8:	add    ebp,DWORD PTR [edx+0xf3e6a34]
  4046de:	inc    edi
  4046df:	hlt    
  4046e0:	out    dx,al
  4046e1:	sub    eax,DWORD PTR [edi+edi*8]
  4046e4:	retf   
  4046e5:	mov    eax,ds:0x9d3a75e0
  4046ea:	(bad)
  4046ee:	or     al,0xc0
  4046f0:	mov    bl,0x38
  4046f2:	test   DWORD PTR [ebp+0x26],edi
  4046f5:	jne    0x40474e
  4046f7:	inc    esi
  4046f8:	mov    ebp,0x1d857
	...
  404725:	add    BYTE PTR [ebx+0x67d8476],cl
  40472b:	je     0x404784
  40472d:	cmp    dh,BYTE PTR [ebp-0x71bf23c9]
  404733:	fadd   QWORD PTR [edx-0x3]
  404736:	icebp  
  404737:	std    
  404738:	mov    eax,?
  40473a:	mov    ebx,0x8950dbbf
  40473f:	call   0x1057:0x153e6a03
  404746:	rol    edi,1
  404748:	fucomip st,st(0)
  40474a:	jno    0x404777
  40474c:	add    al,0x0
  40474e:	xor    eax,0x110a5834
  404753:	sbb    al,0x29
  404755:	std    
  404756:	mov    cl,0x3d
  404758:	sub    eax,0x8c7895ff
  40475d:	inc    ebp
  40475e:	dec    edx
  40475f:	jns    0x404724
  404761:	je     0x4047a6
  404763:	push   ebp
  404764:	push   edi
  404765:	clc    
  404766:	shl    DWORD PTR [eax+eiz*8+0x75],0x8a
  40476b:	ins    BYTE PTR es:[edi],dx
  40476c:	sbb    eax,0x8c743ee9
  404771:	mov    DWORD PTR [ebp+0x34],0x5bbd1c57
  404778:	fs cld 
  40477a:	aas    
  40477b:	or     dh,bh
  40477d:	mov    ebx,?
  40477f:	bound  ebp,QWORD PTR [ecx]
  404781:	xor    al,0x59
  404783:	adc    ch,dh
  404785:	loopne 0x404752
  404787:	push   0xffffffc6
  404789:	push   esi
	...
  4047b2:	add    BYTE PTR [eax],al
  4047b4:	cmp    al,BYTE PTR [esi+0x3c560c34]
  4047ba:	mov    dh,0xe0
  4047bc:	cmp    DWORD PTR [esi],esp
  4047be:	mov    al,ds:0x3c5b4ac5
  4047c3:	lea    ebx,[edx]
  4047c5:	fcomp  QWORD PTR [esp+ecx*1]
  4047c8:	aas    
  4047c9:	pop    ebx
  4047ca:	jmp    0x8e94db52
  4047cf:	push   ss
  4047d0:	sti    
  4047d1:	adc    ch,BYTE PTR [eax]
  4047d3:	add    al,0xb9
  4047d5:	pop    ds
  4047d6:	icebp  
  4047d7:	ins    DWORD PTR es:[edi],dx
  4047d8:	ds xchg ah,bh
  4047db:	idiv   eax
  4047dd:	psubusw mm4,mm0
  4047e0:	imul   edx,DWORD PTR [edi+0x66],0x56
  4047e4:	ss jae 0x40483c
  4047e7:	loope  0x4047ca
  4047e9:	test   DWORD PTR [eax],esp
  4047eb:	lds    ebp,FWORD PTR [esi]
  4047ed:	pop    ebx
  4047ee:	add    al,ah
  4047f0:	lds    ebp,FWORD PTR [edx+0x5387e518]
  4047f6:	jmp    0x43ec85fe
  4047fb:	push   esp
  4047fc:	dec    edx
  4047fd:	fdivr  QWORD PTR [ebx]
  4047ff:	adc    cl,ah
  404801:	mov    bl,0x25
  404803:	sub    BYTE PTR [ebx+ebp*2+0x794ef2f8],0x7
  40480b:	mov    dh,BYTE PTR [edx]
  40480d:	loopne 0x4047e8
  40480f:	mov    bh,bh
  404811:	pop    edx
  404812:	pop    es
  404813:	ret    
  404814:	adc    esp,DWORD PTR [ecx+0x362a]
	...
  404842:	mov    ch,0x76
  404844:	add    BYTE PTR [esi-0x9f7e036],bl
  40484a:	lods   al,BYTE PTR ds:[esi]
  40484b:	sar    DWORD PTR [ebp-0xb],1
  40484e:	mov    ah,0x17
  404850:	adc    dl,dh
  404852:	jb     0x404862
  404854:	sbb    BYTE PTR [edx-0x6e],ah
  404857:	fwait
  404858:	jmp    0x42c6:0x255e2fe1
  40485f:	pop    ebx
  404860:	add    BYTE PTR [edx+0x36],dh
  404863:	loopne 0x404895
  404865:	pusha  
  404866:	sbb    DWORD PTR [ebx+0x33],0xffffffab
  40486a:	jns    0x4048e5
  40486c:	call   0xc9653b0f
  404871:	stos   DWORD PTR es:[edi],eax
  404872:	dec    esi
  404873:	pop    ebx
  404874:	push   ebp
  404875:	bound  ecx,QWORD PTR [esi]
  404877:	sub    DWORD PTR [ebx+0x755b420c],eax
  40487d:	out    dx,al
  40487e:	add    BYTE PTR [edi],bl
  404880:	or     BYTE PTR [edx+0x72],cl
  404883:	sbb    al,BYTE PTR [eax]
  404885:	push   0x5f
  404887:	push   edi
  404888:	add    ah,dh
  40488a:	cmp    BYTE PTR [ebp+eax*2+0x41139cf5],bl
  404891:	jmp    0x41485796
  404896:	sar    DWORD PTR [ebp+0x0],cl
  404899:	jmp    0xbd3fec62
  40489e:	cmp    DWORD PTR [ebx+0x7],esi
  4048a1:	inc    esi
  4048a2:	cmp    bl,BYTE PTR [ebx+0x3]
  4048a5:	adc    DWORD PTR [eax],eax
	...
  4048cf:	add    ch,bh
  4048d1:	daa    
  4048d2:	call   0xffc4dac5
  4048d7:	jb     0x4048c3
  4048d9:	test   BYTE PTR [ebp-0xf],dh
  4048dc:	ins    BYTE PTR es:[edi],dx
  4048dd:	jae    0x4048f0
  4048df:	push   cs
  4048e0:	inc    edx
  4048e1:	pop    ebx
  4048e2:	call   DWORD PTR [ecx+eax*2-0x6eff17d8]
  4048e9:	jge    0x4048eb
  4048eb:	add    BYTE PTR [eax+ebx*4],cl
  4048ee:	pop    ebx
  4048ef:	leave  
  4048f0:	and    eax,0xdc550057
  4048f5:	mov    dl,BYTE PTR [ebx-0x7d]
  4048f8:	loop   0x404950
  4048fa:	add    BYTE PTR [ebp+0x58],dh
  4048fd:	popf   
  4048fe:	inc    ebp
  4048ff:	or     ah,al
  404901:	adc    BYTE PTR [ecx+0x0],al
  404904:	in     al,0xfa
  404906:	or     eax,DWORD PTR [eax]
  404908:	or     bl,BYTE PTR [edi+eax*8+0x45]
  40490c:	push   ebx
  40490d:	mov    ecx,0xa5274148
  404912:	jne    0x40491c
  404914:	(bad)  
  404915:	mov    edx,0xd11700e6
  40491a:	fdivr  st,st(7)
  40491c:	dec    edx
  40491d:	imul   ebp,eax,0xffffffb3
  404920:	leave  
  404921:	push   edi
  404922:	add    BYTE PTR [ebx],al
  404924:	iret   
  404925:	sbb    BYTE PTR [ebx-0x18],dl
  404928:	lods   al,BYTE PTR ds:[esi]
  404929:	mov    al,ds:0xc08cffff
  40492e:	push   DWORD PTR [ebp-0x21]
  404931:	dec    eax
  404932:	call   0x4049f4
	...
  40495b:	add    BYTE PTR [eax],al
  40495d:	add    BYTE PTR [ecx+0xaff0057],bh
  404963:	push   esp
  404964:	push   ebx
  404965:	call   0x40c707
  40496a:	data16 sti 
  40496c:	pop    es
  40496d:	mov    ds:0x74001e9f,eax
  404972:	iret   
  404973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404974:	jne    0x40497e
  404976:	outs   dx,DWORD PTR ds:[esi]
  404977:	mov    ch,0xfb
  404979:	push   DWORD PTR [eax-0x2f]
  40497c:	ret    
  40497d:	pop    ebx
  40497e:	pop    esi
  40497f:	call   0x83ec:0xd0ea0008
  404986:	pop    ebx
  404987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404988:	push   edi
  404989:	push   0x4773e
  40498e:	ds pop edx
  404990:	lods   eax,DWORD PTR ds:[esi]
  404991:	sti    
  404992:	mov    DWORD PTR [esp+ecx*4+0x45],ebx
  404996:	xor    al,0x1f
  404999:	fld    DWORD PTR ds:0xeb0003b3
  40499f:	outs   dx,DWORD PTR ds:[esi]
  4049a0:	jmp    0x3e6a:0xe0266916
  4049a7:	sub    BYTE PTR [edi+edi*8],al
  4049aa:	sar    DWORD PTR [ecx+0x69],cl
  4049ad:	add    BYTE PTR [ecx-0x72],dl
  4049b0:	mov    edx,0x8671ff4b
  4049b5:	rol    bh,0x49
  4049b8:	fnsave [ebp+0x3a]
  4049bb:	popf   
  4049bc:	imul   edi,ebx,0x45c5b231
	...
  4049ea:	add    BYTE PTR [eax],al
  4049ec:	sub    dh,BYTE PTR [ebp+0x3]
  4049ef:	add    BYTE PTR [esi],bh
  4049f1:	and    DWORD PTR [edi-0x178b80b5],edi
  4049f7:	sub    eax,0x458889c5
  4049fc:	ss (bad) 
  4049fe:	fdivr  QWORD PTR [edi+0x1]
  404a01:	add    bl,BYTE PTR [ebx]
  404a03:	inc    edx
  404a04:	inc    edx
  404a05:	jg     0x4049ff
  404a07:	imul   edi,DWORD PTR [esi],0x8e08421f
  404a0d:	lods   al,BYTE PTR ds:[esi]
  404a0e:	sub    cl,BYTE PTR [ebp+0x7f]
  404a11:	je     0x4049ef
  404a13:	xor    ah,dh
  404a15:	rcr    ch,0xff
  404a18:	sar    DWORD PTR [ebp-0x3d],1
  404a1b:	je     0x404a60
  404a1d:	or     eax,DWORD PTR [edi-0x4]
  404a20:	aad    0x8c
  404a22:	add    bh,0x42
  404a25:	cmc    
  404a26:	sbb    al,0x0
  404a28:	sub    esp,DWORD PTR [edx-0x77]
  404a2b:	inc    ebp
  404a2c:	stos   BYTE PTR es:[edi],al
  404a2d:	pop    ebx
  404a2e:	(bad)  
  404a2f:	retf   0x577c
  404a32:	jmp    0xbab00f6d
  404a37:	mov    bl,bh
  404a39:	push   edx
  404a3a:	loop   0x4049ff
  404a3c:	adc    bl,BYTE PTR [eax+0x69]
  404a3f:	sbb    al,0x3e
  404a41:	or     bl,dh
  404a43:	fwait
  404a44:	ds pop ebx
  404a46:	jmp    0x2bd45f4e
  404a4b:	or     BYTE PTR [esi],bh
  404a4d:	cmc    
  404a4e:	call   0x404abc
	...
  404a77:	add    BYTE PTR [eax],al
  404a79:	add    BYTE PTR [esi],bh
  404a7b:	cmc    
  404a7c:	jmp    0xe93588ea
  404a81:	imul   edi,DWORD PTR [esi+0x4903e95b],0x8
  404a88:	icebp  
  404a89:	jmp    0x404a19
  404a8b:	js     0x404a76
  404a8d:	add    eax,ebp
  404a8f:	mov    ds:0x77dc402,al
  404a94:	loop   0x404ac6
  404a96:	push   ss
  404a97:	mov    dl,0x8c
  404a99:	add    edi,DWORD PTR [esi]
  404a9b:	ret    
  404a9c:	call   0x329b88a4
  404aa1:	retf   
  404aa2:	cld    
  404aa3:	push   esi
  404aa4:	jmp    0x72aeffdf
  404aa9:	inc    esi
  404aaa:	ss push esi
  404aac:	test   eax,0xb1db4357
  404ab1:	add    ebp,DWORD PTR [ebx+0x54]
  404ab4:	xor    DWORD PTR [ebx],eax
  404ab6:	ds pop ebx
  404ab8:	jmp    0xe9974787
  404abd:	fcom   QWORD PTR [ebx+0x53]
  404ac0:	inc    ecx
  404ac1:	cwde   
  404ac2:	fistp  DWORD PTR [edx-0x17]
  404ac5:	add    dh,0x81
  404ac8:	mov    ebp,0xe96a970e
  404acd:	add    edi,DWORD PTR [esi]
  404acf:	push   edx
  404ad0:	add    BYTE PTR [ebp+edi*2+0x51],bl
  404ad4:	mov    dh,0x29
  404ad6:	xchg   esi,eax
  404ad7:	push   edi
  404ad8:	mov    eax,0x5b3de9
  404add:	xor    BYTE PTR [eax],al
	...
  404b07:	add    BYTE PTR [edi+0x56],bh
  404b0a:	add    BYTE PTR [esi+eax*8+0x6925836e],bh
  404b11:	hlt    
  404b12:	call   DWORD PTR [edx-0xe8a7dc3]
  404b18:	gs out 0xe5,al
  404b1b:	jmp    0x7600a15d
  404b20:	pop    ss
  404b21:	sub    edx,DWORD PTR [eax-0x2f]
  404b24:	loopne 0x404aaa
  404b26:	(bad)  
  404b27:	fmulp  st(3),st
  404b29:	pop    ss
  404b2a:	cld    
  404b2b:	xor    DWORD PTR [edx],ecx
  404b2d:	xor    BYTE PTR [ebp-0x33],0x65
  404b31:	pop    es
  404b32:	or     cl,dl
  404b34:	jecxz  0x404bad
  404b36:	add    cl,ch
  404b38:	dec    eax
  404b39:	fwait
  404b3a:	jne    0x404b21
  404b3c:	adc    al,0x7
  404b3e:	cld    
  404b3f:	rcr    DWORD PTR [ebp+0x51a6ff85],0x9b
  404b46:	jmp    0x404b32
  404b48:	enter  0xfc16,0xa0
  404b4c:	clc    
  404b4d:	push   edi
  404b4e:	add    BYTE PTR [ecx+edi*4],dh
  404b51:	outs   dx,DWORD PTR ds:[esi]
  404b52:	push   ebx
  404b53:	jb     0x404b9c
  404b55:	dec    edi
  404b56:	push   0xffffffd9
  404b58:	xor    BYTE PTR [ebx+0x7b],dh
  404b5b:	jae    0x404b72
  404b5d:	sub    DWORD PTR [edx-0x17],0xea6a5b5b
  404b64:	push   ebx
  404b65:	pop    ebx
  404b66:	push   0xffffffea
  404b68:	gs pop ebx
  404b6a:	add    cl,ch
	...
  404b94:	add    BYTE PTR [eax],al
  404b96:	mov    ebp,0xd5e17580
  404b9b:	xchg   esp,esp
  404b9d:	add    bh,dl
  404b9f:	pop    esp
  404ba0:	mov    DWORD PTR [ebx],eax
  404ba2:	out    0x10,eax
  404ba4:	pop    esp
  404ba5:	push   0xffffffa7
  404ba7:	dec    esp
  404ba8:	call   0x974de2
  404bad:	mov    esp,edx
  404baf:	pop    eax
  404bb0:	push   0x0
  404bb2:	lods   eax,DWORD PTR ds:[esi]
  404bb3:	pop    esp
  404bb4:	push   0x0
  404bb6:	mov    ebp,0x38006a56
  404bbb:	push   0x573227e8
  404bc0:	add    BYTE PTR [ebx],cl
  404bc2:	daa    
  404bc3:	sub    ebp,DWORD PTR [edi]
  404bc5:	mov    DWORD PTR [eax+eax*4+0x5cbd0069],esp
  404bcc:	push   0x0
  404bce:	or     eax,0x3fe8505b
  404bd3:	jp     0x404bd5
  404bd5:	add    dh,bl
  404bd7:	sbb    BYTE PTR [eax],cl
  404bd9:	or     edx,DWORD PTR [edi+0x4ff242b]
  404bdf:	pop    ebx
  404be0:	call   0x9c4fa0
  404be5:	push   DWORD PTR [esp+esi*2]
  404be8:	mov    ah,0xe4
  404bea:	pop    ss
  404beb:	pop    esp
  404bec:	mov    DWORD PTR [ebx],0xffffa4d8
  404bf2:	lods   al,BYTE PTR ds:[esi]
  404bf3:	push   edx
  404bf4:	push   DWORD PTR [ebx]
  404bf6:	mov    edi,0xe4ba
	...
  404c23:	add    BYTE PTR [edi],dl
  404c25:	popf   
  404c26:	add    edi,edi
  404c28:	mov    eax,0xa72bffa4
  404c2d:	pop    esi
  404c2e:	inc    ebx
  404c2f:	or     al,bl
  404c31:	or     al,al
  404c33:	pop    ebx
  404c34:	sahf   
  404c35:	xchg   ebp,eax
  404c36:	or     BYTE PTR [eax],al
  404c38:	mov    ds:0x4c53ecd0,al
  404c3d:	inc    ebx
  404c3e:	or     BYTE PTR [ebx+0x74db6d3e],al
  404c44:	xor    DWORD PTR [ecx],edx
  404c46:	push   esi
  404c47:	or     dh,dl
  404c49:	arpl   di,bx
  404c4b:	add    BYTE PTR [esi],bh
  404c4d:	inc    ecx
  404c4e:	push   esi
  404c4f:	add    al,0xa6
  404c51:	mov    edi,0x313e00df
  404c56:	push   ss
  404c57:	call   0x439a6d
  404c5c:	cmc    
  404c5d:	dec    edx
  404c5e:	lds    eax,FWORD PTR [esi+edi*1]
  404c61:	mov    edi,0x35bfec8e
  404c66:	jecxz  0x404c57
  404c68:	sbb    DWORD PTR [eax+0x31],0x4cbebd57
  404c6f:	dec    eax
  404c70:	push   DWORD PTR [ecx+0x3]
  404c73:	je     0x404cc8
  404c75:	jno    0x404c86
  404c77:	dec    ecx
  404c78:	div    BYTE PTR [edx]
  404c7a:	add    al,0xe8
  404c7c:	mov    edi,0x79ffd97a
  404c81:	outs   dx,BYTE PTR ds:[esi]
  404c82:	dec    edx
  404c83:	dec    eax
  404c84:	push   DWORD PTR [ecx+0x3]
	...
  404caf:	add    BYTE PTR [eax],al
  404cb1:	add    BYTE PTR [esi],bh
  404cb3:	jb     0x404c39
  404cb5:	cmp    eax,0x434c8b
  404cba:	ds inc eax
  404cbc:	out    dx,eax
  404cbd:	(bad)  
  404cbe:	jae    0x404d1f
  404cc0:	dec    esp
  404cc1:	inc    ecx
  404cc2:	ds in  al,dx
  404cc4:	gs stc 
  404cc6:	sbb    esi,ebx
  404cc8:	rol    DWORD PTR ds:0x433c83,0x3e
  404ccf:	je     0x404cd4
  404cd1:	add    BYTE PTR [ebx-0x6102c11],dh
  404cd7:	std    
  404cd8:	xor    ebp,eax
  404cda:	mov    ds:0xbbffd904,eax
  404cdf:	mul    edi
  404ce1:	out    dx,eax
  404ce2:	loope  0x404d3f
  404ce4:	data16 xor al,0xe6
  404ce7:	mov    esp,0xd0d1d959
  404cec:	lods   al,BYTE PTR ds:[esi]
  404ced:	xlat   BYTE PTR ds:[ebx]
  404cee:	outs   dx,BYTE PTR ds:[esi]
  404cef:	repz mov bh,0x4b
  404cf2:	jg     0x404d4f
  404cf4:	rol    DWORD PTR ds:0xec695b3e,1
  404cfa:	push   ds
  404cfb:	js     0x404ce6
  404cfd:	add    esi,DWORD PTR ds:0x57ede9b
  404d03:	pop    esp
  404d04:	jmp    0x1618ce0c
  404d09:	jmp    0x429cb9f
  404d0e:	ds pop ebx
  404d10:	es jg  0x404c99
  404d13:	outs   dx,BYTE PTR ds:[esi]
  404d14:	push   es
  404d15:	fld    DWORD PTR [eax]
	...
  404d3f:	add    BYTE PTR [ecx+0x4e],bh
  404d42:	jmp    0x839b314a
  404d47:	add    edx,esp
  404d49:	pop    edx
  404d4a:	add    DWORD PTR [ebx],0xffffffb3
  404d4d:	fsub   st,st(1)
  404d4f:	call   0x8779cbad
  404d54:	mov    ebx,0x49d8c67f
  404d59:	sub    ecx,esi
  404d5b:	mov    cs,WORD PTR [edx+0x6e]
  404d5e:	(bad)  
  404d5f:	fdivr  DWORD PTR [ecx]
  404d61:	or     BYTE PTR [ebp-0x1687a715],bh
  404d67:	add    esi,DWORD PTR ds:0x4d7ede9b
  404d6d:	pop    esp
  404d6e:	jmp    0x31fcf376
  404d73:	inc    ebx
  404d74:	ds repz aaa 
  404d77:	dec    esp
  404d78:	jg     0x404dd5
  404d7a:	adc    DWORD PTR [ecx+0x2],0xfe0c867e
  404d81:	dec    ebp
  404d82:	sar    BYTE PTR gs:[esi],cl
  404d85:	pop    ebx
  404d86:	add    cl,ch
  404d88:	mov    edx,0x9648daa
  404d8d:	outs   dx,BYTE PTR ds:[esi]
  404d8e:	jmp    DWORD PTR [esi+0xd]
  404d91:	sub    eax,ebp
  404d93:	call   0x4dfd:0xe2ff7de9
  404d9a:	test   BYTE PTR [ebx],dh
  404d9c:	cmp    eax,0x3870005b
  404da1:	jnp    0x404d92
  404da3:	add    BYTE PTR ds:[eax],al
	...
  404dce:	xchg   esi,eax
  404dcf:	iret   
  404dd0:	test   DWORD PTR [ecx-0x6a],eax
  404dd3:	jge    0x404dd4
  404dd5:	cdq    
  404dd6:	adc    eax,0x3da848d8
  404ddb:	jle    0x404d92
  404ddd:	or     DWORD PTR [esi+0x4381ff7d],esp
  404de3:	pop    ebx
  404de4:	add    BYTE PTR [ecx-0x6b],ch
  404de7:	lods   al,BYTE PTR ds:[esi]
  404de8:	sti    
  404de9:	push   es
  404dea:	xchg   esi,eax
  404deb:	push   ecx
  404dec:	shr    dh,0xf1
  404def:	mov    bh,0x0
  404df1:	jmp    0xe9392833
  404df6:	ss aad 0x9c
  404df9:	jmp    0xde90a93b
  404dfe:	scas   eax,DWORD PTR es:[edi]
  404dff:	jb     0x404df0
  404e01:	(bad)  
  404e02:	jno    0x404e2e
  404e04:	call   DWORD PTR [edx+ebp*2+0x2ac6ff6d]
  404e0b:	inc    esp
  404e0c:	cmc    
  404e0d:	mov    esi,0xc185cf09
  404e12:	and    DWORD PTR [ebp-0x1],edi
  404e15:	sbb    DWORD PTR [edx+0x422848e6],edx
  404e1b:	jl     0x404dd2
  404e1d:	mov    DWORD PTR [ecx],ebx
  404e1f:	jge    0x404e20
  404e21:	add    DWORD PTR [ebx+ebx*2],edi
  404e24:	add    BYTE PTR [ecx+0x12],ch
  404e27:	out    dx,al
  404e28:	cli    
  404e29:	add    al,al
  404e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2c:	or     eax,eax
  404e2e:	jmp    0x404e6c
  404e30:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  404e5b:	add    BYTE PTR [edi-0x2900008c],bh
  404e61:	push   cs
  404e62:	cmp    edx,DWORD PTR [eax-0x69]
  404e65:	rol    DWORD PTR [ebp-0x5b7f04],cl
  404e6b:	push   eax
  404e6c:	jg     0x404df4
  404e6e:	loop   0x404e70
  404e70:	xlat   BYTE PTR ds:[ebx]
  404e71:	dec    eax
  404e72:	lea    eax,[ebp-0x8bfd]
  404e78:	xlat   BYTE PTR ds:[ebx]
  404e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e7a:	mov    ch,0xec
  404e7c:	add    BYTE PTR [edi+edi*8-0x549e18],ah
  404e83:	(bad)  
  404e84:	jg     0x404e2b
  404e86:	mov    ch,0xe8
  404e88:	inc    eax
  404e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8a:	call   DWORD PTR [eax+0x30]
  404e8d:	jmp    0xdbe8:0xa430efec
  404e94:	jnp    0x404e3b
  404e96:	(bad)  
  404e97:	call   0x3fef33
  404e9c:	cmp    al,0x37
  404e9e:	lea    eax,[ebp-0x8aad]
  404ea4:	pop    ss
  404ea5:	outs   dx,DWORD PTR ds:[esi]
  404ea6:	fsub   st,st(2)
  404ea8:	addr16 pop eax
  404eaa:	inc    eax
  404eab:	push   eax
  404eac:	loop   0x404e88
  404eae:	cld    
  404eaf:	out    dx,eax
  404eb0:	jo     0x404e57
  404eb2:	push   eax
  404eb3:	(bad)  
  404eb4:	mov    edx,0xf0ffef74
  404eb9:	outs   dx,DWORD PTR ds:[esi]
  404eba:	mov    ah,0xf4
  404ebc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ebe:	call   0x404fac
	...
  404ee7:	add    BYTE PTR [eax],al
  404ee9:	add    al,ch
  404eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eec:	(bad)  
  404eed:	(bad)  
  404eee:	jp     0x404f68
  404ef0:	out    dx,eax
  404ef1:	push   DWORD PTR [eax+0x3ef7de6f]
  404ef7:	in     eax,0xd6
  404ef9:	(bad)  
  404efa:	mov    ebx,0xf9ffe6e5
  404eff:	jmp    0x75d5:0xfcf1fe8e
  404f06:	jmp    0x6972:0x3ee3ced9
  404f0d:	add    cl,bl
  404f0f:	(bad)  
  404f11:	out    dx,eax
  404f12:	rcr    DWORD PTR [ebx+ebp*8],1
  404f15:	outs   dx,DWORD PTR ds:[esi]
  404f16:	shl    BYTE PTR [esi+edx*8],cl
  404f19:	push   0x3e
  404f1b:	or     eax,0x14a9ec90
  404f20:	(bad)  
  404f21:	call   0x169542
  404f26:	mov    ebx,0xa1efdeee
  404f2b:	sub    al,0x33
  404f2d:	call   ebx
  404f2f:	popa   
  404f30:	out    0xff,al
  404f32:	xchg   ecx,eax
  404f33:	imul   edi,DWORD PTR [edx-0x1d],0xc080723e
  404f3a:	push   es
  404f3b:	mov    ecx,0x646eb5d6
  404f40:	(bad)  
  404f41:	jmp    DWORD PTR [esi-0x33]
  404f44:	out    0xff,al
  404f46:	imul   edi,edx,0x6c51e87f
  404f4c:	aad    0xff
	...
  404f76:	add    BYTE PTR [eax],al
  404f78:	xchg   ebx,eax
  404f79:	test   eax,0xa951ffe5
  404f7e:	outs   dx,BYTE PTR ds:[esi]
  404f7f:	test   DWORD PTR [ecx-0x5c],0x32f649a1
  404f86:	add    al,0xff
  404f88:	repz test al,0xe5
  404f8b:	push   DWORD PTR [ecx]
  404f8d:	lea    ecx,[ecx-0x1e]
  404f90:	test   BYTE PTR ds:[eax],cl
  404f93:	shr    BYTE PTR [edx+0x268d888d],0x5c
  404f9a:	xchg   esi,eax
  404f9b:	aad    0x11
  404f9d:	out    0x99,eax
  404f9f:	mov    DWORD PTR [ebx+0x24],ecx
  404fa2:	and    DWORD PTR [ebx+0x3e],eax
  404fa5:	outs   dx,BYTE PTR ds:[esi]
  404fa6:	inc    ebp
  404fa7:	aad    0xb3
  404fa9:	jg     0x404f41
  404fab:	aad    0xf1
  404fad:	cmp    DWORD PTR [ebx+0x645b3ee1],0x7f
  404fb4:	fimul  DWORD PTR [edx+0x7a6ed56e]
  404fba:	pushf  
  404fbb:	call   0xec9ecaa1
  404fc0:	add    al,0x7e
  404fc2:	jmp    0xd1dc0aca
  404fc7:	dec    eax
  404fc8:	mov    ecx,0xb1e555b0
  404fcd:	jp     0x405020
  404fcf:	or     DWORD PTR [ecx-0x4474c986],ebx
  404fd5:	cmp    DWORD PTR [esi],0xffffffd5
  404fd8:	cdq    
  404fd9:	jp     0x405037
  404fdb:	in     al,dx
	...
  405004:	add    BYTE PTR [eax],al
  405006:	mov    eax,ds:0x53ec1e7a
  40500b:	jb     0x405023
  40500d:	aad    0xdd
  40500f:	sub    BYTE PTR [ecx+0x3c7a3e42],ah
  405015:	loopne 0x405078
  405017:	jp     0x405017
  405019:	jmp    0x40506f
  40501b:	jl     0x405006
  40501d:	add    esi,DWORD PTR ds:0xc4f8759b
  405023:	call   0x7a9234f9
  405028:	jb     0x404ffd
  40502a:	mov    ch,0x38
  40502c:	and    al,0x4c
  40502e:	call   FWORD PTR [edx-0x26]
  405031:	lahf   
  405032:	cmp    DWORD PTR [eax+0x7a31e4cd],esi
  405038:	shl    DWORD PTR [edx-0x16ffa4e1],1
  40503e:	or     dh,BYTE PTR [eax+0x79f2bef0]
  405044:	call   0xffba6853
  405049:	sahf   
  40504a:	mov    eax,0xea96ef86
  40504f:	sbb    BYTE PTR [eax+0x7f],0x12
  405053:	jp     0x4050b4
  405055:	daa    
  405056:	add    eax,0xe172559e
  40505b:	add    al,0x8
  40505d:	sbb    edi,0xc66eff70
  405063:	mov    bh,bh
  405065:	sbb    al,0xb3
  405067:	and    al,BYTE PTR [ecx-0x17]
	...
  405092:	add    BYTE PTR [eax],al
  405094:	ret    0xff5c
  405097:	fdiv   QWORD PTR ds:0xc4e542ea
  40509d:	dec    edi
  40509e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40509f:	mov    cl,0xfc
  4050a1:	pop    edx
  4050a2:	leave  
  4050a3:	sub    ebp,DWORD PTR [ecx-0x669dab87]
  4050a9:	ffree  st(4)
  4050ab:	xor    DWORD PTR [edx-0x5e],ebp
  4050ae:	inc    ebp
  4050af:	and    DWORD PTR ds:0xbee9005b,edi
  4050b5:	test   DWORD PTR [edi],0xff4cf1e9
  4050bb:	xchg   esp,eax
  4050bc:	inc    ecx
  4050bd:	jp     0x405134
  4050bf:	icebp  
  4050c0:	out    0x5a,eax
  4050c2:	call   0xffb9d8c3
  4050c7:	pusha  
  4050c8:	and    BYTE PTR [edi-0x15],dh
  4050cb:	out    0x9a,al
  4050cd:	pop    ds
  4050ce:	cld    
  4050cf:	jmp    0x7240ac11
  4050d4:	das    
  4050d5:	ret    0x2848
  4050d8:	cmp    al,BYTE PTR [esi+0x77876213]
  4050de:	cmp    eax,DWORD PTR [eax]
  4050e0:	pusha  
  4050e1:	arpl   WORD PTR [ebp+0x9],si
  4050e4:	loopne 0x405108
  4050e6:	clc    
  4050e7:	add    DWORD PTR [edi],edx
  4050e9:	pop    ebp
  4050ea:	add    bl,ch
  4050ec:	and    edx,edi
  4050ee:	ds or  ebx,eax
  4050f1:	adc    ch,cl
  4050f3:	sub    DWORD PTR [edx],0xffffffa7
  4050f6:	add    BYTE PTR [ebp+0x0],dh
	...
  405121:	add    BYTE PTR [edi],bl
  405123:	mov    ?,WORD PTR [ebp-0x4]
  405126:	mov    edi,0xb8ffffe1
  40512b:	clc    
  40512c:	inc    esp
  40512d:	clc    
  40512e:	dec    eax
  40512f:	mov    dh,0xc2
  405131:	or     bh,dl
  405133:	xor    eax,0x37803d8b
  405138:	inc    ecx
  405139:	add    BYTE PTR [edi+esi*2+0x56],ch
  40513d:	mov    ebp,DWORD PTR [eax]
  40513f:	xchg   edi,eax
  405140:	imul   BYTE PTR ds:[eax-0x74]
  405144:	or     edi,edi
  405146:	xchg   edx,eax
  405147:	nop
  405148:	mov    DWORD PTR ds:0x4137c0,0x5c97
  405152:	enter  0x55a1,0x8b
  405156:	pop    ebx
  405157:	xor    al,0x56
  405159:	push   0xffffffa7
  40515b:	lea    esi,[ebp+0x8]
  40515e:	das    
  40515f:	int    0xf9
  405161:	jmp    FWORD PTR [eax]
  405163:	clc    
  405164:	idiv   edi
  405166:	shl    BYTE PTR [edi+eiz*8-0x15],cl
  40516a:	inc    edi
  40516b:	pop    edi
  40516c:	add    BYTE PTR [ebx+0xf765e3f],al
  405172:	rcr    ah,0x3f
  405175:	and    dl,dl
  405177:	jae    0x405174
  405179:	(bad)  
  40517a:	lock pop ebp
  40517c:	mov    ecx,eax
  40517e:	rcr    BYTE PTR fs:[edi+0x68],0x3e
  405183:	fnstsw WORD PTR [ebx]
  405185:	inc    ecx
	...
  4051ae:	add    BYTE PTR [eax],al
  4051b0:	ds xor esp,ebx
  4051b3:	push   0x1c
  4051b5:	add    BYTE PTR [ebx],0xb
  4051b8:	(bad)  
  4051b9:	sub    eax,0x867ec608
  4051be:	add    ebp,DWORD PTR [edx+0x7a]
  4051c1:	sbb    al,0x4
  4051c3:	push   edi
  4051c4:	es and dh,ah
  4051c7:	add    BYTE PTR [esi],bh
  4051c9:	ins    DWORD PTR es:[edi],dx
  4051ca:	ret    
  4051cb:	je     0x405208
  4051cd:	enter  0x3,0xe5
  4051d1:	test   cl,cl
  4051d3:	pop    es
  4051d4:	ds pop ecx
  4051d6:	fsubr  QWORD PTR [eax-0x7cfc7e22]
  4051dc:	out    0x84,al
  4051de:	pop    edx
  4051df:	add    eax,DWORD PTR [eax]
  4051e1:	add    DWORD PTR [ebx],0x329ff98b
  4051e7:	leave  
  4051e8:	cld    
  4051e9:	jge    0x4051ee
  4051eb:	push   ebp
  4051ec:	mov    ch,0x1d
  4051ee:	xchg   ah,al
  4051f0:	mov    edx,0x3b0c47fc
  4051f5:	xor    bl,0xff
  4051f8:	test   eax,0xabc5dbd1
  4051fd:	xor    dl,dl
  4051ff:	mov    DWORD PTR [ebx],eax
  405201:	inc    esi
  405202:	shl    BYTE PTR [ebp+0x42],cl
  405205:	inc    ecx
  405206:	pop    eax
  405207:	cld    
  405208:	mov    esi,ecx
  40520a:	sti    
  40520b:	out    0x95,eax
  40520d:	push   esi
  40520e:	sar    bh,cl
  405210:	jns    0x4051e0
  405212:	repz inc BYTE PTR [eax]
	...
  40523d:	add    bl,ch
  40523f:	ins    DWORD PTR es:[edi],dx
  405240:	shl    BYTE PTR [ebp+0x6a],cl
  405243:	dec    ecx
  405244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405245:	or     DWORD PTR [esi],edi
  405247:	adc    dl,0x75
  40524a:	pop    edx
  40524b:	pop    ecx
  40524c:	mov    dh,ch
  40524e:	push   ecx
  40524f:	pop    edx
  405250:	out    0xbb,al
  405252:	jl     0x4052ba
  405254:	jmp    0x3fc7078f
  405259:	xor    eax,0xfc547691
  40525e:	sbb    ebp,edx
  405260:	leave  
  405261:	add    al,0x3e
  405263:	retf   
  405264:	bnd ret 
  405266:	stos   DWORD PTR es:[edi],eax
  405267:	pop    esi
  405268:	push   ss
  405269:	sub    eax,0xfcaba478
  40526e:	adc    edx,esp
  405270:	and    al,0xfc
  405272:	mov    ecx,0xb574c1e2
  405277:	lock in al,0x1c
  40527a:	(bad)  
  40527b:	ja     0x4052cd
  40527d:	shl    ecx,1
  40527f:	jbe    0x405207
  405281:	je     0x40526f
  405283:	lds    ebx,FWORD PTR [ecx-0x7c]
  405286:	and    DWORD PTR [ebx-0x3],ebx
  405289:	jmp    0x5bde:0x53810a70
  405290:	jmp    0xe630dc91
  405295:	xor    BYTE PTR [ebp+0x15],ah
  405298:	and    dh,al
  40529a:	inc    esi
  40529b:	pop    ebx
  40529c:	pusha  
  40529d:	or     bh,BYTE PTR [ebp+0xdced9d]
	...
  4052cb:	add    BYTE PTR [eax+0x3e03e8b3],dl
  4052d1:	pop    ebx
  4052d2:	xchg   esi,eax
  4052d3:	sub    al,0xf8
  4052d5:	mov    ds:0xfe91fc2b,eax
  4052da:	mov    ebp,0x915aff3c
  4052df:	pop    ss
  4052e0:	neg    DWORD PTR [ebx]
  4052e2:	jmp    0xeb724c2
  4052e7:	shl    esi,1
  4052e9:	aad    0xb2
  4052eb:	inc    edx
  4052ec:	add    esp,DWORD PTR ds:[esi+edi*1-0x1]
  4052f1:	pop    edx
  4052f2:	add    BYTE PTR [ecx],al
  4052f4:	fidiv  DWORD PTR [ebp-0x1]
  4052f7:	out    dx,al
  4052f8:	cmc    
  4052f9:	adc    DWORD PTR [ebx+0x28],ecx
  4052fc:	inc    edx
  4052fd:	add    ecx,DWORD PTR [esi+0x30]
  405300:	std    
  405301:	pop    edx
  405302:	call   0xffb66257
  405307:	inc    ecx
  405308:	in     eax,0x21
  40530a:	inc    ecx
  40530b:	jmp    0x288c0595
  405310:	cmp    al,BYTE PTR [ebx+0x75eeb66a]
  405316:	push   0x1c531e
  40531b:	adc    DWORD PTR ds:0xe5e94123,eax
  405321:	adc    edi,edi
  405323:	xchg   esi,eax
  405324:	push   cs
  405325:	add    eax,DWORD PTR [edi+0x22]
  405328:	jge    0x405385
  40532a:	push   0x1c25b0
  40532f:	xchg   ecx,eax
	...
  405358:	add    BYTE PTR [eax],al
  40535a:	and    DWORD PTR [esi-0x1],esi
  40535d:	jbe    0x4053d4
  40535f:	stos   BYTE PTR es:[edi],al
  405360:	dec    ebx
  405361:	sub    BYTE PTR [edx],bh
  405363:	add    eax,DWORD PTR [edi]
  405365:	mov    dl,0x7c
  405367:	pop    ebx
  405368:	call   0xffb64289
  40536d:	rcl    esi,0x21
  405370:	inc    ecx
  405371:	jmp    0xa88b938b
  405376:	cmp    eax,0x8e3e2e83
  40537b:	jne    0x405340
  40537d:	pushf  
  40537e:	sbb    al,BYTE PTR [edi+0x6095a48b]
  405384:	rcr    BYTE PTR [ebp-0x16c724c0],0xe8
  40538b:	arpl   WORD PTR [eax+0x5b3de9],di
  405391:	and    BYTE PTR [ebx+0x5e],bh
  405394:	add    BYTE PTR [eax],al
  405396:	mov    WORD PTR [edi+0x61d717eb],gs
  40539c:	pop    esp
  40539d:	je     0x405409
  40539f:	fnstcw WORD PTR [eax]
  4053a1:	das    
  4053a2:	retf   0xba62
  4053a5:	add    DWORD PTR [edi+0x59],edx
  4053a8:	add    bl,ch
  4053aa:	pop    edx
  4053ab:	jecxz  0x4053ad
  4053ad:	add    BYTE PTR [edi],ah
  4053af:	pop    ecx
  4053b0:	inc    eax
  4053b1:	or     BYTE PTR [edi+0x5f],0x75
  4053b5:	in     al,0xac
  4053b7:	cdq    
  4053b8:	leave  
  4053b9:	ret    0x591b
  4053bc:	push   ebp
  4053bd:	mov    eax,DWORD PTR [eax]
	...
  4053e7:	add    BYTE PTR [ebx],al
  4053e9:	sub    eax,0x229c5356
  4053ee:	or     al,0x5
  4053f0:	pop    ss
  4053f1:	pop    ebp
  4053f2:	add    BYTE PTR [eax],al
  4053f4:	(bad)  
  4053f5:	jg     0x405447
  4053f7:	call   0x3fe750
  4053fc:	pop    esp
  4053fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053fe:	mov    ebx,eax
  405400:	ins    BYTE PTR es:[edi],dx
  405401:	adc    cl,BYTE PTR [eax]
  405403:	mov    edx,DWORD PTR [edx]
  405405:	pop    ebx
  405406:	jmp    0x40540a
  405408:	mov    esi,DWORD PTR [esi]
  40540a:	or     ecx,ecx
  40540c:	retf   
  40540d:	arpl   WORD PTR [eax-0xaec32c2],ax
  405413:	or     ecx,DWORD PTR [esi]
  405415:	adc    eax,DWORD PTR [edx]
  405417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405418:	ficom  WORD PTR [ecx-0x40]
  40541b:	stos   BYTE PTR es:[edi],al
  40541c:	sbb    dh,BYTE PTR [esi-0x67d3198b]
  405422:	pop    ebx
  405423:	pop    esi
  405424:	shl    BYTE PTR [edi+0x29a708c2],0x56
  40542b:	mov    ecx,0x589b
  405430:	pop    es
  405431:	dec    eax
  405432:	rcl    BYTE PTR [eax-0x536f3e9c],cl
  405438:	ds repnz (bad) 
  40543b:	mov    ch,0x7e
  40543d:	(bad)  
  405440:	into   
  405441:	test   DWORD PTR [eax+edx*4],0x900e40bd
  405448:	std    
  405449:	lods   eax,DWORD PTR ds:[esi]
  40544a:	push   ds
  40544b:	nop
	...
  405474:	add    BYTE PTR [eax],al
  405476:	retf   
  405477:	jnp    0x4054ec
  405479:	cmp    DWORD PTR [ebp+edi*1+0x74],0x43
  40547e:	add    dl,BYTE PTR [edx+0x74]
  405481:	jl     0x4054c7
  405483:	dec    esi
  405484:	or     eax,0x77fb190
  405489:	add    al,0x3d
  40548b:	rol    BYTE PTR [edx+0x3c],cl
  40548e:	jg     0x4054a2
  405490:	dec    edi
  405491:	or     ebx,DWORD PTR [edx+0x48]
  405494:	je     0x405515
  405496:	cmp    BYTE PTR [esi+0x44],dh
  405499:	nop
  40549a:	cmp    eax,0x9f3c42b2
  40549f:	repnz dec esi
  4054a1:	or     bh,BYTE PTR [edx]
  4054a3:	dec    eax
  4054a4:	je     0x405525
  4054a6:	cmp    esi,DWORD PTR [esi+0x410e0346]
  4054ac:	(bad)
  4054af:	loopne 0x405445
  4054b1:	rol    DWORD PTR [esp+eax*4],0x7a
  4054b5:	ret    0xba41
  4054b8:	(bad)  
  4054b9:	call   0x8bb3fdf4
  4054be:	cmc    
  4054bf:	icebp  
  4054c0:	sub    al,0x5b
  4054c2:	jge    0x40547a
  4054c4:	jp     0x4054b2
  4054c6:	or     eax,0xb5fc35ad
  4054cb:	mov    dh,0xfb
  4054cd:	(bad)  
  4054ce:	mov    ch,0xb6
  4054d0:	repz pop ebp
  4054d3:	mov    esi,0x494d8fff
  4054d8:	loop   0x4054fc
	...
  405502:	add    BYTE PTR [eax],al
  405504:	scas   al,BYTE PTR es:[edi]
  405505:	pop    edx
  405506:	mov    eax,0x1de89673
  40550b:	into   
  40550c:	jns    0x4054d8
  40550e:	ins    BYTE PTR es:[edi],dx
  40550f:	mov    esp,0xc44362f0
  405514:	push   esi
  405515:	bound  ebx,QWORD PTR [ecx+0x42]
  405518:	pop    esp
  405519:	jb     0x405574
  40551b:	sub    al,0xae
  40551d:	xlat   BYTE PTR ds:[ebx]
  40551e:	das    
  40551f:	pop    es
  405520:	scas   al,BYTE PTR es:[edi]
  405521:	xlat   BYTE PTR ds:[ebx]
  405522:	add    BYTE PTR [edi],al
  405524:	scas   al,BYTE PTR es:[edi]
  405525:	repz (bad) 
  405527:	je     0x4054de
  405529:	xchg   edi,eax
  40552a:	jns    0x40555a
  40552c:	cdq    
  40552d:	push   ss
  40552e:	mov    al,ds:0x345b42c2
  405533:	jns    0x40554f
  405535:	(bad)  [ebp-0x418cdf20]
  40553b:	xor    DWORD PTR [ebp-0x6a],esp
  40553e:	fs inc edi
  405540:	adc    cl,BYTE PTR [ecx+eax*2]
  405543:	xchg   esp,eax
  405544:	jbe    0x405562
  405546:	jmp    0x31d8a117
  40554b:	inc    ebx
  40554c:	xor    DWORD PTR ds:[ebx-0x53],0x3e
  405551:	pop    ebx
  405552:	loop   0x405517
  405554:	jae    0x405593
  405556:	xchg   BYTE PTR [edi+0x4e],dl
  405559:	jb     0x40554f
  40555b:	jmp    DWORD PTR [edi+0x5e]
  40555e:	add    eax,DWORD PTR [ecx+edx*8]
  405561:	call   0x6f942246
  405566:	push   ecx
  405567:	test   DWORD PTR [eax],eax
	...
  405591:	add    cl,ah
  405593:	pop    ebx
  405594:	jmp    0xe8294f91
  405599:	inc    eax
  40559a:	mov    cl,0xe8
  40559c:	dec    esp
  40559d:	fcomp  QWORD PTR [edx+edx*4]
  4055a0:	jmp    0xeed68aa8
  4055a5:	xchg   BYTE PTR [ebx+0x3de9005b],al
  4055ab:	loopne 0x405532
  4055ad:	cmp    bh,BYTE PTR [eax+0x72]
  4055b0:	(bad)  
  4055b1:	mov    ecx,0xe90156e5
  4055b6:	cmp    eax,0x3a374d83
  4055bb:	pop    ebx
  4055bc:	or     ebp,DWORD PTR [ecx]
  4055be:	imul   ebx,esi,0xffffffac
  4055c1:	jmp    0xe57db103
  4055c6:	cmp    al,0x5b
  4055c8:	add    dh,ah
  4055ca:	mov    edx,0x3de900bc
  4055cf:	add    eax,0x6eb87400
  4055d4:	(bad)  
  4055d5:	fimul  WORD PTR [edx]
  4055d7:	or     ebp,eax
  4055d9:	sbb    esp,eax
  4055db:	pop    edx
  4055dc:	add    BYTE PTR [eax+eax*8+0x6d],bl
  4055e0:	inc    dh
  4055e2:	repnz or ch,al
  4055e5:	sub    DWORD PTR [eax],ecx
  4055e7:	jb     0x4055e8
  4055e9:	loop   0x4055e8
  4055eb:	out    0x1b,eax
  4055ed:	inc    ecx
  4055ee:	frstor [edx]
  4055f0:	inc    ecx
  4055f1:	jmp    0xa0342e76
	...
  40561e:	add    BYTE PTR [eax],al
  405620:	or     dh,BYTE PTR [edx+0x50]
  405623:	add    DWORD PTR [edi-0x5710097],0x21907e7
  40562d:	cwde   
  40562e:	idiv   BYTE PTR [esi+0xa]
  405631:	xchg   BYTE PTR [edi],cl
  405633:	jbe    0x40569d
  405635:	arpl   WORD PTR [ebp-0x8f119c],cx
  40563b:	or     ax,0x6083
  40563f:	push   edi
  405640:	mov    dh,BYTE PTR [ecx-0x77]
  405643:	ins    BYTE PTR es:[edi],dx
  405644:	xchg   ecx,eax
  405645:	jo     0x405646
  405647:	dec    esi
  405648:	pop    es
  405649:	pop    ebx
  40564a:	push   0x0
  40564c:	xchg   edi,eax
  40564d:	adc    eax,DWORD PTR [edx]
  40564f:	push   0xffffffa7
  405651:	adc    eax,DWORD PTR [ebx]
  405653:	push   0xc0005da7
  405658:	pop    eax
  405659:	leave  
  40565a:	in     al,dx
  40565b:	(bad)  
  40565c:	pop    eax
  40565d:	lahf   
  40565e:	call   0x9e90c2
  405663:	mov    DWORD PTR [edx+0x6f7440a5],esp
  405669:	sahf   
  40566a:	jne    0x40567c
  40566c:	cmp    BYTE PTR [ecx],cl
  40566e:	or     al,0xff
  405670:	shl    BYTE PTR [ebp-0x60c50818],cl
  405676:	dec    DWORD PTR [ebx-0x78a60d1]
  40567c:	outs   dx,DWORD PTR ds:[esi]
  40567d:	xor    ebx,ebp
  40567f:	add    BYTE PTR [edi],ah
  405681:	jb     0x40565d
  405683:	jne    0x405685
	...
  4056ad:	add    BYTE PTR [esi+eiz*4],bl
  4056b0:	mov    ch,0xec
  4056b2:	stc    
  4056b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b4:	(bad)  
  4056b5:	call   0x411961
  4056ba:	fmul   st,st(2)
  4056bc:	in     al,dx
  4056bd:	dec    al
  4056bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c0:	call   0xffe51c2e
  4056c5:	mov    edx,esp
  4056c7:	inc    eax
  4056c8:	leave  
  4056c9:	ret    0x5ceb
  4056cc:	push   ebp
  4056cd:	mov    edi,DWORD PTR [ebx-0x46133b2a]
  4056d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d4:	call   DWORD PTR [ebx-0x48]
  4056d7:	or     cl,BYTE PTR [edi+edi*8]
  4056da:	shl    BYTE PTR [edi+eiz*2-0x50],cl
  4056de:	pop    ds
  4056df:	push   ss
  4056e0:	add    bh,bh
  4056e2:	xchg   edx,eax
  4056e3:	fwait
  4056e4:	dec    eax
  4056e5:	inc    ecx
  4056e6:	xlat   BYTE PTR ds:[ebx]
  4056e7:	xchg   esp,eax
  4056e8:	pop    edx
  4056e9:	cmc    
  4056ea:	sbb    BYTE PTR [ebx+ecx*1-0x7f86c140],ah
  4056f1:	fidivr DWORD PTR [esi]
  4056f3:	add    BYTE PTR [ebx],0x2b
  4056f6:	test   edi,esp
  4056f8:	sub    bh,0x98
  4056fb:	xor    ebx,ecx
  4056fd:	push   eax
  4056fe:	es jle 0x405705
  405701:	add    BYTE PTR [esi],bh
  405703:	sbb    dh,BYTE PTR [ebx]
  405705:	fnstsw WORD PTR [esi]
  405707:	cmp    dh,0xbf
  40570a:	dec    ecx
  40570b:	test   BYTE PTR [eax+0x8823e00],0x4
	...
  40573a:	add    BYTE PTR [eax],al
  40573c:	aas    
  40573d:	add    BYTE PTR [ebx],0xf
  405740:	mov    ecx,0x3e000434
  405745:	inc    DWORD PTR [eax-0x4]
  405748:	out    dx,al
  405749:	pop    ecx
  40574a:	pop    edi
  40574b:	jmp    0x85b8d899
  405750:	push   ecx
  405751:	js     0x40571d
  405753:	dec    DWORD PTR [esi+0x31fd3a8a]
  405759:	mov    esi,edi
  40575b:	mov    edi,0xa15b7eb3
  405760:	jbe    0x4057a5
  405762:	add    al,0x8d
  405764:	ret    
  405765:	mov    al,ds:0x5211ffc9
  40576a:	fmul   QWORD PTR [ecx-0x353eed]
  405770:	mov    ebp,DWORD PTR [edx+0x33]
  405773:	call   0xb1e8a
  405778:	in     eax,0x78
  40577a:	retf   0x3675
  40577d:	jo     0xcb193872
  405783:	push   eax
  405784:	out    0x60,al
  405786:	sar    edi,1
  405788:	rcl    DWORD PTR [ecx-0x35],1
  40578b:	jne    0x405757
  40578d:	push   ecx
  40578e:	fsub   QWORD PTR ds:0xca665ad5
  405794:	inc    ebp
  405795:	fwait
  405796:	aad    0x36
  405798:	mov    cl,0xe5
  40579a:	push   esp
  40579b:	fcmovnbe st,st(0)
  40579d:	or     DWORD PTR [esi-0x36],0x0
	...
  4057c8:	add    BYTE PTR [eax],al
  4057ca:	mov    bh,0x15
  4057cc:	inc    ecx
  4057cd:	xchg   BYTE PTR [ebx],bl
  4057cf:	jae    0x4057ba
  4057d1:	dec    edi
  4057d2:	cld    
  4057d3:	(bad)  [edi+ecx*8-0x384b9012]
  4057da:	xchg   esi,eax
  4057db:	mov    ecx,0xd63e0344
  4057e0:	sub    DWORD PTR [ebx+0x2c],ecx
  4057e3:	jo     0x405781
  4057e5:	iret   
  4057e6:	push   esi
  4057e7:	in     eax,0x2c
  4057e9:	add    edi,DWORD PTR [esi]
  4057eb:	sub    DWORD PTR fs:[edi+0x20],ecx
  4057ef:	or     edi,esi
  4057f1:	dec    edi
  4057f2:	push   esi
  4057f3:	or     BYTE PTR [edx-0x2c],0x49
  4057f7:	outs   dx,DWORD PTR ds:[esi]
  4057f8:	bound  ebp,QWORD PTR [ebx-0x33a3901a]
  4057fe:	lea    ecx,[ebx]
  405800:	shl    DWORD PTR [edi-0x362990d1],1
  405806:	mov    bl,0x67
  405808:	shr    DWORD PTR [ebx],0x2
  40580b:	pop    esp
  40580c:	jmp    0xbe9fdb8d
  405811:	dec    edi
  405812:	push   ss
  405813:	fucomip st,st(1)
  405815:	fist   DWORD PTR [esp+ebp*2-0x16fe3652]
  40581c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40581d:	(bad)  
  40581f:	sbb    DWORD PTR [esi+0x329ac5c9],0xffffffbb
  405826:	cld    
  405827:	arpl   cx,bp
  405829:	cs mov ch,0x7f
  40582c:	push   ds
  40582d:	jge    0x40582f
	...
  405857:	add    BYTE PTR [ebx+0x63],bl
  40585a:	xchg   edx,eax
  40585b:	repz push 0x4bef0082
  405861:	push   ss
  405862:	add    DWORD PTR [ecx+0x3f],esp
  405865:	push   ss
  405866:	and    BYTE PTR [esi],0x42
  405869:	call   0x16b71762
  40586e:	adc    BYTE PTR [esi],0x62
  405871:	out    0xe9,eax
  405873:	imul   esi,DWORD PTR [edi],0xc24c7460
  405879:	or     dh,BYTE PTR cs:[ebp-0x1fc02463]
  405880:	stc    
  405881:	xchg   ecx,eax
  405882:	mov    ebp,DWORD PTR [ebp+eax*4-0x6a0e8a93]
  405889:	jae    0x405866
  40588b:	jmp    0xea3932cd
  405890:	(bad)  
  405892:	or     BYTE PTR [ebp+0x7d206e35],0x68
  405899:	out    dx,al
  40589a:	jnp    0x40585d
  40589c:	xchg   BYTE PTR [eax+0x74],ah
  40589f:	out    0xbd,eax
  4058a1:	out    dx,eax
  4058a2:	aaa    
  4058a3:	out    dx,al
  4058a4:	inc    ebx
  4058a5:	jmp    0xf0ff:0x33816906
  4058ac:	adc    BYTE PTR [esi-0x3a],0x2d
  4058b0:	cmp    ch,BYTE PTR [esi+0x0]
  4058b3:	ret    0x823b
  4058b6:	add    dl,dl
  4058b8:	ror    DWORD PTR ds:0xabc9,1
	...
  4058e6:	adc    DWORD PTR [esi+0x54],ebp
  4058e9:	(bad)  
  4058eb:	fld    st(4)
  4058ed:	lds    ecx,FWORD PTR [edx-0x26]
  4058f0:	cmp    eax,0x1c3a7e
  4058f5:	jmp    0xd4c3a27b
  4058fa:	pop    edx
  4058fb:	and    al,BYTE PTR [ecx-0x17]
  4058fe:	cmp    eax,0x640008e7
  405903:	push   ebp
  405904:	or     DWORD PTR [ebx+0x26],0x57
  405908:	add    BYTE PTR [ebp-0x28],dh
  40590b:	dec    esi
  40590c:	rcr    BYTE PTR [ebx-0x62],0x97
  405910:	or     BYTE PTR [eax],al
  405912:	dec    esp
  405913:	rol    bh,0x45
  405916:	or     ebx,DWORD PTR [edx+0x0]
  405919:	add    BYTE PTR [edi-0x1807bb1c],dl
  40591f:	mov    ds:0x596d0875,al
  405924:	call   DWORD PTR ds:0x412ee8
  40592a:	pushf  
  40592b:	cdq    
  40592c:	je     0x405989
  40592e:	call   DWORD PTR [eax-0x1198ff25]
  405934:	iret   
  405935:	lea    ebx,[edx+0x776a509d]
  40593b:	daa    
  40593c:	call   DWORD PTR ds:0x412ed4
  405942:	dec    esp
  405943:	cdq    
  405944:	je     0x40596f
  405946:	sbb    BYTE PTR ds:0x1e4,ch
	...
  405974:	push   edi
  405975:	pop    ecx
  405976:	add    bh,bh
  405978:	retf   0x8fa1
  40597b:	inc    ebp
  40597c:	setne  BYTE PTR [ebp-0x4]
  405980:	mov    al,ds:0x9283ec1a
  405985:	jae    0x405986
  405987:	jae    0x4059a7
  405989:	scas   al,BYTE PTR es:[edi]
  40598a:	inc    ebp
  40598b:	lock and eax,0xec000059
  405991:	ins    BYTE PTR es:[edi],dx
  405992:	mov    BYTE PTR [ebp-0x39],0x57
  405996:	add    BYTE PTR [eax],al
  405998:	pop    ss
  405999:	adc    eax,DWORD PTR [eax]
  40599b:	push   0xffffffe7
  40599d:	adc    dl,BYTE PTR [eax]
  40599f:	lea    ebx,[edx]
  4059a1:	jnp    0x4059f3
  4059a3:	push   0x3e
  4059a5:	add    dh,0x75
  4059a8:	jmp    0x443:0x859af1dd
  4059af:	or     edi,esi
  4059b1:	data16 add al,0x43
  4059b4:	mov    ebp,0x4a00cf67
  4059b9:	jp     0x405981
  4059bb:	jne    0x40596f
  4059bd:	or     bh,cl
  4059bf:	fidivr DWORD PTR [esi]
  4059c1:	cmp    BYTE PTR [edx-0x3d],0x5
  4059c5:	cmp    eax,edx
  4059c7:	or     BYTE PTR [esi],bh
  4059c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ca:	jp     0x4059b8
  4059cc:	cdq    
  4059cd:	scas   eax,DWORD PTR es:[edi]
  4059ce:	sti    
  4059cf:	out    0x39,eax
  4059d1:	cmp    DWORD PTR [eax+eax*1],eax
  4059d4:	(bad)  
  4059d5:	rcr    ebx,1
  4059d7:	inc    ecx
	...
  405a00:	add    BYTE PTR [eax],al
  405a02:	mov    ?,WORD PTR ds:0xcf7950c7
  405a08:	sti    
  405a09:	dec    edi
  405a0a:	data16 data16 stos BYTE PTR es:[edi],al
  405a0d:	add    BYTE PTR [esi],bh
  405a0f:	stos   BYTE PTR es:[edi],al
  405a10:	mov    esp,0x30823ac2
  405a15:	mov    ebp,DWORD PTR [edx+0x1]
  405a18:	sar    ah,0xed
  405a1b:	add    BYTE PTR [ecx+0x8],cl
  405a1e:	ds out dx,eax
  405a20:	std    
  405a21:	sub    bh,BYTE PTR [esi-0x37]
  405a24:	mov    esp,0x1a8246c2
  405a29:	(bad)  [edx+eax*4-0x7d6bffa7]
  405a30:	pop    ecx
  405a31:	add    BYTE PTR [ecx],ah
  405a33:	pop    es
  405a34:	clc    
  405a35:	(bad)  
  405a36:	xchg   ebx,eax
  405a37:	push   0x59
  405a39:	add    BYTE PTR [edx+eax*4-0x7e1ac925],ah
  405a40:	add    ecx,DWORD PTR [ebx]
  405a42:	(bad)  
  405a43:	and    eax,0x5b838910
  405a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a49:	(bad)  
  405a4a:	imul   ebp,DWORD PTR [edi-0x6f],0xffffffcd
  405a4e:	fldcw  WORD PTR [ebx-0x6a]
  405a51:	cli    
  405a52:	mov    eax,ds:0xf67ac3e6
  405a57:	add    cl,ch
  405a59:	pop    ecx
  405a5a:	ds ins BYTE PTR es:[edi],dx
  405a5c:	hlt    
  405a5d:	(bad)  
  405a5e:	ins    DWORD PTR es:[edi],dx
  405a5f:	ins    BYTE PTR es:[edi],dx
  405a60:	cld    
  405a61:	test   eax,0x59e0e5
	...
  405a8f:	add    BYTE PTR [esi],bh
  405a91:	add    ecx,ebp
  405a93:	fild   DWORD PTR [eax+edx*4-0x17]
  405a97:	add    esi,DWORD PTR ds:0xcfbdc9b
  405a9d:	adc    DWORD PTR [ecx+0x126b99d6],0xffffffab
  405aa4:	lds    edx,FWORD PTR [edi+0x627cbca2]
  405aaa:	jmp    0xc3bf0fdf
  405aaf:	(bad)  
  405ab0:	jns    0x405a97
  405ab2:	lock fstp TBYTE PTR [ecx+0x77c61e6b]
  405ab9:	cwde   
  405aba:	in     eax,dx
  405abb:	add    ecx,DWORD PTR [ebx]
  405abd:	loopne 0x405abc
  405abf:	sbb    ebx,0x384fe95e
  405ac5:	fdivr  DWORD PTR [ebx+edi*8+0x49]
  405ac9:	out    0xee,al
  405acb:	sbb    bh,BYTE PTR [esi-0x5f]
  405ace:	sub    edi,ebx
  405ad0:	cmp    ebp,esi
  405ad2:	call   0xde98069b
  405ad7:	dec    edi
  405ad8:	ss jae 0x405a8a
  405adb:	test   eax,0xc3e25b3e
  405ae0:	xchg   edx,eax
  405ae1:	dec    ebx
  405ae2:	cwde   
  405ae3:	push   edi
  405ae4:	inc    edx
  405ae5:	push   0x34
  405ae7:	clc    
  405ae8:	or     cl,dh
  405aea:	jmp    eax
  405aec:	in     eax,0x1a
  405aee:	jmp    FWORD PTR [esi+0x72187703]
	...
  405b1c:	add    BYTE PTR [eax],al
  405b1e:	xor    DWORD PTR [edi+0x40],edx
  405b21:	cmp    DWORD PTR [edx],ecx
  405b23:	icebp  
  405b24:	out    dx,al
  405b25:	xchg   esi,eax
  405b26:	sti    
  405b27:	or     edi,edi
  405b29:	adc    al,0xd6
  405b2b:	sbb    bh,bh
  405b2d:	cld    
  405b2e:	aad    0x82
  405b30:	lahf   
  405b31:	mov    es,WORD PTR [ebx]
  405b33:	imul   ebx,DWORD PTR [eax-0x60],0xfffffffc
  405b37:	push   ebx
  405b38:	add    BYTE PTR [edi+esi*1],dl
  405b3b:	ja     0x405b93
  405b3d:	mov    esi,0xf17dde6e
  405b42:	cmp    eax,0x7a0208f0
  405b47:	push   es
  405b48:	pop    edi
  405b49:	scas   eax,DWORD PTR es:[edi]
  405b4a:	aam    0x9d
  405b4c:	or     cl,ch
  405b4e:	push   ss
  405b4f:	and    BYTE PTR [edx+ebp*2],cl
  405b52:	mov    ds:0xee290b5c,al
  405b57:	push   ebx
  405b58:	sub    ebp,DWORD PTR [ecx]
  405b5a:	daa    
  405b5b:	or     bl,BYTE PTR [esi+0x30]
  405b5e:	jl     0x405bb3
  405b60:	add    BYTE PTR [edx+0x21],dh
  405b63:	push   edi
  405b64:	mov    ebx,DWORD PTR [ebp+eiz*2+0x702fed5]
  405b6b:	add    DWORD PTR [ebx+0x3067bdef],ecx
  405b71:	jnp    0x405bba
  405b73:	jmp    0xfd80:0x5ff2b0fb
  405b7a:	dec    ebp
  405b7b:	jbe    0x405baa
  405b7d:	imul   edi,ecx,0xec721b
	...
  405bab:	add    BYTE PTR [ebp+0x225e4666],bh
  405bb1:	jmp    0xa:0x9ec228eb
  405bb8:	in     al,dx
  405bb9:	jb     0x405c3a
  405bbb:	cld    
  405bbc:	jbe    0x405bcb
  405bbe:	or     eax,0x7707cb80
  405bc3:	or     BYTE PTR [edi-0x6e],ah
  405bc6:	popa   
  405bc7:	and    BYTE PTR [ebx+0xc09ea63],0x9e
  405bce:	pop    ebx
  405bcf:	pop    edi
  405bd0:	sub    DWORD PTR [esi+0x61e708c2],esp
  405bd6:	xor    BYTE PTR [edx-0x31],dh
  405bd9:	popa   
  405bda:	cmp    DWORD PTR [edi-0x1d],esi
  405bdd:	push   ecx
  405bde:	xor    bl,ch
  405be0:	repnz popa 
  405be2:	inc    ecx
  405be3:	jb     0x405b82
  405be5:	popa   
  405be6:	inc    esi
  405be7:	ja     0x405b8a
  405be9:	push   ecx
  405bea:	inc    ecx
  405beb:	add    al,0xad
  405bed:	adc    BYTE PTR [edi],0x3c
  405bf0:	jbe    0x405bfd
  405bf2:	or     bh,BYTE PTR [ecx+eax*4]
  405bf5:	push   ss
  405bf6:	push   es
  405bf7:	sub    al,0x86
  405bf9:	imul   ecx,DWORD PTR [ecx],0xc0428eeb
  405bff:	pop    ebx
  405c00:	test   al,0x3f
  405c02:	leave  
  405c03:	ret    0x5d5f
  405c06:	shl    al,0x63
  405c09:	arpl   bx,ax
  405c0b:	stos   BYTE PTR es:[edi],al
  405c0c:	lods   al,BYTE PTR ds:[esi]
  405c0d:	and    al,BYTE PTR [ebx+0xc6]
	...
  405c37:	add    BYTE PTR [eax],al
  405c39:	add    BYTE PTR [ebp+0x62],dl
  405c3c:	fidiv  DWORD PTR [ebp-0x1a]
  405c3f:	aad    0x1
  405c41:	add    BYTE PTR [edi+0x5d],ah
  405c44:	pop    ebx
  405c45:	pop    edi
  405c46:	test   eax,0x5708c2a4
  405c4b:	ss push ebx
  405c4d:	push   eax
  405c4e:	iret   
  405c4f:	add    al,0x1f
  405c51:	sub    ah,BYTE PTR [edi+0x5f]
  405c54:	clc    
  405c55:	jb     0x405c6d
  405c57:	mov    ds:0x733ebbff,al
  405c5c:	add    eax,DWORD PTR [eax]
  405c5e:	(bad)  ds:[eax+0x2d727f4d]
  405c65:	add    DWORD PTR [ecx-0x76],esi
  405c68:	inc    edx
  405c69:	std    
  405c6a:	add    DWORD PTR [edx+0x65fad7e7],esi
  405c70:	ret    
  405c71:	mov    ecx,0xffc3c1f1
  405c76:	in     al,dx
  405c77:	sbb    ah,bh
  405c79:	push   es
  405c7a:	imul   ebx,edx,0xffffff8f
  405c7d:	ret    
  405c7e:	jne    0x405cb9
  405c80:	(bad)  
  405c81:	push   ebp
  405c82:	(bad)
  405c85:	(bad)  
  405c86:	into   
  405c87:	inc    ebp
  405c88:	push   esp
  405c89:	pop    eax
  405c8a:	push   esi
  405c8b:	dec    ebx
  405c8c:	out    dx,al
  405c8d:	aas    
  405c8e:	ds jmp 0x3d87:0x17d0135
  405c96:	mov    ebp,0x3e0044ad
  405c9b:	xchg   BYTE PTR ds:0x83,dl
	...
  405cc5:	add    BYTE PTR [eax],al
  405cc7:	add    BYTE PTR [ebx-0x3],bl
  405cca:	dec    esi
  405ccb:	inc    ecx
  405ccc:	ds jb  0x405d06
  405ccf:	or     DWORD PTR [ebp-0xb46d99],edi
  405cd5:	jno    0x405cda
  405cd7:	jne    0x405d1c
  405cd9:	pop    ebp
  405cda:	les    ebx,FWORD PTR [ebx-0x79]
  405cdd:	xor    eax,0xd456daef
  405ce2:	fadd   QWORD PTR [eax]
  405ce4:	call   FWORD PTR ds:[eax-0x4]
  405ce8:	in     al,dx
  405ce9:	fisttp DWORD PTR [ebx]
  405ceb:	push   eax
  405cec:	push   ecx
  405ced:	xchg   DWORD PTR [esi+0xe71ff4b],eax
  405cf3:	shl    BYTE PTR [ecx],0xf6
  405cf6:	xchg   ebx,eax
  405cf7:	add    BYTE PTR [esi],bh
  405cf9:	jb     0x405cc5
  405cfb:	inc    ebp
  405cfc:	ss pop ebx
  405cfe:	jmp    0x6c9b9b06
  405d03:	dec    eax
  405d04:	or     eax,DWORD PTR es:[ebx+0x4]
  405d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d09:	pop    ebx
  405d0a:	inc    ebx
  405d0b:	add    eax,0xc2c4ee11
  405d10:	xor    edx,esp
  405d12:	xor    al,BYTE PTR [ebp+0x3e]
  405d15:	push   esp
  405d16:	test   eax,0xf7736438
  405d1b:	fdivr  QWORD PTR [esi]
  405d1d:	pop    ebx
  405d1e:	push   0xffffffbb
  405d20:	fs out dx,al
  405d22:	or     BYTE PTR [edi+0x37e96363],al
  405d28:	je     0x405d92
  405d2a:	adc    al,0xbc
	...
  405d54:	add    BYTE PTR [eax],al
  405d56:	out    0x76,al
  405d58:	xchg   esp,eax
  405d59:	ret    0xd1c9
  405d5c:	and    al,0xb8
  405d5e:	mov    bl,0x1d
  405d60:	jno    0x405db5
  405d62:	mov    ecx,0x2bc270ed
  405d67:	outs   dx,DWORD PTR ds:[esi]
  405d68:	rol    DWORD PTR [ecx+ebp*4],cl
  405d6b:	in     eax,dx
  405d6c:	pop    esp
  405d6d:	ret    0xd44b
  405d70:	mov    ds:0x29543e44,al
  405d75:	aaa    
  405d76:	pusha  
  405d77:	aam    0xac
  405d79:	mov    bh,0xb5
  405d7b:	dec    edx
  405d7c:	ins    BYTE PTR es:[edi],dx
  405d7d:	dec    eax
  405d7e:	mov    cs,WORD PTR [edx]
  405d80:	fwait
  405d81:	ret    0xd853
  405d84:	mov    ds:0x29543e44,al
  405d89:	aaa    
  405d8a:	inc    esp
  405d8b:	repz xchg ebp,eax
  405d8d:	push   eax
  405d8e:	call   FWORD PTR [edx+0x16]
  405d91:	cmp    BYTE PTR [esi+0x72],cl
  405d94:	std    
  405d95:	fidivr DWORD PTR [esi]
  405d97:	pop    ebx
  405d98:	bnd ret 
  405d9a:	rcr    DWORD PTR [ecx-0x56],cl
  405d9d:	ret    0x6acb
  405da0:	add    BYTE PTR [ecx],al
  405da2:	jo     0x405d27
  405da4:	add    cl,ch
  405da6:	cld    
  405da7:	lock repz rol ebx,1
  405dab:	js     0x405dac
  405dad:	fdivp  st(7),st
  405daf:	lock sti 
  405db1:	rol    DWORD PTR [ecx-0x3d16ff7d],0x9a
  405db8:	pop    ebx
  405db9:	mov    al,0x0
	...
  405de3:	add    BYTE PTR [ebx],al
  405de5:	adc    DWORD PTR [ebx-0x3f604233],ecx
  405deb:	mov    bh,0xff
  405ded:	push   bx
  405def:	sbb    DWORD PTR [edx+0x7dd23ff3],edx
  405df5:	pop    ebx
  405df6:	clc    
  405df7:	sbb    edi,DWORD PTR ds:0xd96aff9a
  405dfd:	sbb    eax,0x5b3a284b
  405e02:	je     0x405de6
  405e04:	ret    0x4b28
  405e07:	xor    bh,BYTE PTR [ebp+0x5b]
  405e0a:	add    ch,bh
  405e0c:	push   ebx
  405e0d:	fidivr DWORD PTR ds:0x1c036a
  405e13:	jmp    0x1cc3b289
  405e18:	mov    bh,0x12
  405e1a:	inc    ecx
  405e1b:	jmp    0x2454e5d
  405e20:	jp     0x405e24
  405e22:	leave  
  405e23:	sub    bl,BYTE PTR [ebx-0x92b007f]
  405e29:	adc    DWORD PTR [ecx-0x17],eax
  405e2c:	les    esp,FWORD PTR [eax]
  405e2e:	hlt    
  405e2f:	es mov ecx,0x7f26fe97
  405e35:	xor    eax,DWORD PTR [ecx]
  405e37:	jmp    0x83404f79
  405e3c:	inc    ebx
  405e3d:	jae    0x405eb2
  405e3f:	xor    DWORD PTR [edx],edi
  405e41:	pop    ebx
  405e42:	add    DWORD PTR [eax],0x3f
  405e45:	pushf  
  405e46:	je     0x405e4c
	...
  405e70:	add    BYTE PTR [eax],al
  405e72:	popa   
  405e73:	pop    ecx
  405e74:	add    BYTE PTR [eax],al
  405e76:	sahf   
  405e77:	fmulp  st(0),st
  405e79:	(bad)  
  405e7a:	and    BYTE PTR [ebx-0x640c7a73],bl
  405e80:	(bad)  
  405e81:	jmp    DWORD PTR [edi-0x64]
  405e84:	mov    ch,0xc8
  405e86:	icebp  
  405e87:	call   0x0:0x874fe8ff
  405e8e:	or     al,0x9a
  405e90:	je     0x40b85a
  405e96:	jg     0x405ecd
  405e98:	dec    ebp
  405e99:	inc    ecx
  405e9a:	out    0xd4,eax
  405e9c:	test   eax,esi
  405e9e:	mov    eax,ds:0xcf50ff9a
  405ea3:	push   cs
  405ea4:	fld    DWORD PTR [eax]
  405ea6:	out    0x56,eax
  405ea8:	ror    BYTE PTR [edi],0x5b
  405eab:	lahf   
  405eac:	add    BYTE PTR [eax],al
  405eae:	xlat   BYTE PTR ds:[ebx]
  405eaf:	xchg   edx,eax
  405eb0:	test   esp,eax
  405eb2:	inc    ecx
  405eb3:	fwait
  405eb4:	inc    DWORD PTR [eax]
  405eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb7:	pop    ecx
  405eb8:	add    BYTE PTR [ebp-0x161e6],cl
  405ebe:	and    BYTE PTR [edx],cl
  405ec0:	push   DWORD PTR [ebp-0x6395]
  405ec6:	lock dec esp
  405ec8:	dec    ebx
  405ec9:	dec    ebx
  405eca:	out    0x59,al
  405ecc:	mov    edx,DWORD PTR [ebp-0x63a5]
  405ed2:	mov    WORD PTR [ecx+0x840f],ds
	...
  405f00:	cvtps2pd xmm0,QWORD PTR [eax]
  405f03:	add    BYTE PTR [esp+ecx*1-0xc],ch
  405f07:	pminub mm1,mm2
  405f0a:	add    BYTE PTR [eax],al
  405f0c:	push   edi
  405f0d:	call   0xffc0:0x4e3ed4b5
  405f14:	in     al,0x73
  405f16:	sub    eax,DWORD PTR [eax]
  405f18:	ds je  0x405f20
  405f1b:	call   0x43ab69
  405f20:	inc    ebp
  405f21:	xor    dh,BYTE PTR [edi]
  405f23:	jns    0x405eec
  405f25:	mov    edi,0x7e838dbb
  405f2a:	push   esp
  405f2b:	push   0x17415
  405f30:	sbb    DWORD PTR [eax],ecx
  405f32:	mov    esp,0x4af12bff
  405f37:	inc    ecx
  405f38:	ds imul eax,ebx,0x39a56674
  405f3f:	cld    
  405f40:	stc    
  405f41:	xchg   DWORD PTR [esi+0xa727f4b],eax
  405f47:	shl    BYTE PTR [edx+0x7b],0x42
  405f4b:	(bad)  
  405f4c:	mov    ebx,0xd9ffbeb2
  405f51:	jb     0x405f56
  405f53:	add    BYTE PTR [esi],bh
  405f55:	pop    es
  405f56:	mov    eax,eax
  405f58:	enter  0xbfdd,0x50
  405f5c:	push   esi
  405f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5e:	add    ecx,DWORD PTR [edi]
  405f60:	ficomp DWORD PTR ds:[ebx+0xd8]
	...
  405f8b:	add    BYTE PTR [eax],al
  405f8d:	add    BYTE PTR [esi],bh
  405f8f:	jb     0x405f9b
  405f91:	shl    BYTE PTR [ebx],0x67
  405f94:	cmp    BYTE PTR [ebp-0x40fb82],0x3e
  405f9b:	xchg   BYTE PTR [edi],cl
  405f9d:	dec    ebx
  405f9f:	xor    bh,BYTE PTR [esi+0x8ed89ff]
  405fa5:	(bad)
  405fa8:	add    ebp,ebx
  405faa:	sub    eax,0xebff1a19
  405faf:	xor    eax,0x5b90f0ac
  405fb4:	jmp    0x212ec0bc
  405fb9:	lods   al,BYTE PTR ds:[esi]
  405fba:	data16 (bad) 
  405fbc:	jmp    0xe93c4c4
  405fc1:	cmp    DWORD PTR [esi+0x73],eax
  405fc4:	daa    
  405fc5:	(bad)  
  405fc6:	ds pop ebx
  405fc8:	ins    BYTE PTR es:[edi],dx
  405fc9:	mov    DWORD PTR [edx],ecx
  405fcb:	idiv   BYTE PTR gs:[esi-0x33cb9b72]
  405fd2:	sub    BYTE PTR [esi+eiz*8-0x55],ah
  405fd6:	nop
  405fd7:	mov    ecx,gs
  405fd9:	add    esp,DWORD PTR [edi]
  405fdb:	pop    esi
  405fdc:	(bad)  
  405fdd:	mov    esi,0xcb946411
  405fe2:	or     BYTE PTR [esi+eax*8-0x55],ah
  405fe6:	ret    0xe98c
  405fe9:	add    eax,ebp
  405feb:	xchg   edi,eax
  405fec:	adc    cl,ch
  405fee:	std    
  405fef:	or     eax,0xaf62
	...
  40601c:	mov    ebp,0x8d53959e
  406021:	or     bh,BYTE PTR [ebx]
  406023:	push   edi
  406024:	jo     0x405ff6
  406026:	sub    al,0x10
  406028:	ret    
  406029:	shr    BYTE PTR [ecx+0x3],cl
  40602c:	ds pop ebx
  40602e:	je     0x406047
  406030:	sti    
  406031:	pop    edx
  406032:	jmp    0x92109e3a
  406037:	mov    al,BYTE PTR [esi-0x48fa7e67]
  40603d:	sbb    eax,0x53238a55
  406042:	jmp    0x9d82:0x695b80bc
  406049:	and    eax,DWORD PTR [edx]
  40604b:	mov    ebx,0x32015fbd
  406050:	xor    BYTE PTR [eax+0x42],bl
  406053:	jnp    0x406053
  406055:	pop    edx
  406056:	add    cl,ch
  406058:	cmp    eax,0xa5eac330
  40605d:	arpl   WORD PTR [ebp+0x15],ax
  406060:	mov    dl,0xb
  406062:	cmp    BYTE PTR [esi+edx*1+0x6b],ch
  406066:	(bad)  
  406067:	out    dx,eax
  406068:	cmp    bh,BYTE PTR [eax]
  40606a:	inc    ebp
  40606b:	xchg   BYTE PTR [eax-0x2b8ffbe4],al
  406071:	xchg   ebp,eax
  406072:	out    dx,eax
  406073:	adc    DWORD PTR es:[ebx-0x2],0x15
  406078:	mov    bh,0xc3
  40607a:	(bad)  
  40607b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607c:	cmp    ecx,ebp
  40607e:	push   ebx
  40607f:	sbb    eax,DWORD PTR [eax]
	...
  4060a9:	add    BYTE PTR [edx+0x62],cl
  4060ac:	jne    0x40607b
  4060ae:	fucomi st,st(0)
  4060b0:	pop    es
  4060b1:	fs jns 0x40611f
  4060b4:	push   eax
  4060b5:	shl    DWORD PTR [ecx],0x5b
  4060b8:	add    cl,ch
  4060ba:	shl    DWORD PTR [esp+eax*1-0x74a4c217],0x34
  4060c2:	dec    edx
  4060c3:	outs   dx,BYTE PTR ds:[esi]
  4060c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c5:	jnp    0x8282b9d0
  4060cb:	xchg   esp,eax
  4060cc:	ret    0x3ded
  4060cf:	or     BYTE PTR [ebx-0x368407b],cl
  4060d5:	aaa    
  4060d6:	jae    0x4060e3
  4060d8:	push   ebx
  4060d9:	sbb    BYTE PTR [esi+edx*8+0x75],ch
  4060dd:	in     eax,dx
  4060de:	(bad)  
  4060df:	loopne 0x4060e8
  4060e1:	(bad)  
  4060e2:	stc    
  4060e3:	dec    edx
  4060e4:	mov    DWORD PTR [esi+edi*2],esp
  4060e7:	(bad)  
  4060e8:	pop    es
  4060e9:	jb     0x4060ee
  4060eb:	push   edi
  4060ec:	mov    ebp,DWORD PTR [esi-0x1aa829bb]
  4060f2:	(bad)  
  4060f3:	xor    edx,DWORD PTR fs:[ebx-0x61]
  4060f7:	xor    eax,DWORD PTR gs:[eax]
  4060fa:	std    
  4060fb:	rol    DWORD PTR [edi+eax*1-0x28960581],1
  406102:	fs pop eax
  406104:	rol    eax,0x60
  406107:	pop    ebx
  406108:	ret    
  406109:	mov    ebx,DWORD PTR [esp+ebp*2]
  40610c:	clc    
  40610d:	and    eax,DWORD PTR [eax]
	...
  406137:	add    BYTE PTR [edi],bl
  406139:	ins    BYTE PTR es:[edi],dx
  40613a:	clc    
  40613b:	(bad)  
  40613c:	rol    DWORD PTR [edi+0x56],cl
  40613f:	mov    bh,0x20
  406141:	scas   eax,DWORD PTR es:[edi]
  406142:	add    edx,DWORD PTR [esi+0x53]
  406145:	popf   
  406146:	ret    0x240c
  406149:	mov    cs,WORD PTR [ebx+0x23a2f4f8]
  40614f:	cli    
  406150:	in     al,0xa2
  406152:	lea    ecx,[eax+ebp*1+0x43207083]
  406159:	pop    esp
  40615a:	dec    esi
  40615b:	or     dh,ah
  40615d:	pushf  
  40615e:	adc    DWORD PTR [ebx],eax
  406160:	fst    st(2)
  406162:	cli    
  406163:	xor    edi,edi
  406165:	jp     0x40615f
  406167:	xor    edi,edi
  406169:	rcr    BYTE PTR [edi+ebx*1-0x3e427007],1
  406170:	aam    0xff
  406172:	or     eax,ecx
  406174:	xchg   esp,eax
  406175:	inc    edi
  406176:	add    ebx,ecx
  406178:	dec    esp
  406179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40617a:	xor    edi,edx
  40617c:	add    al,0xa3
  40617e:	xor    edi,edx
  406180:	push   0xffffffda
  406182:	pop    es
  406183:	scas   eax,DWORD PTR es:[edi]
  406184:	enter  0xf521,0x3
  406188:	popa   
  406189:	inc    edi
  40618a:	rol    eax,0xa0
  40618d:	pop    edx
  40618e:	ret    
  40618f:	mov    ebp,DWORD PTR [ebx+ebp*2]
  406192:	clc    
  406193:	and    ebx,DWORD PTR [edi]
  406195:	imul   edi,eax,0xffffff8d
  406198:	adc    eax,DWORD PTR [edi+0x2a]
  40619b:	mov    BYTE PTR [eax],0x0
	...
  4061c6:	ds icebp 
  4061c8:	inc    ebx
  4061c9:	add    esi,eax
  4061cb:	addr16 ret 0x32c2
  4061cf:	jne    0x4061a4
  4061d1:	mov    esi,DWORD PTR [esi+0x64]
  4061d4:	mov    eax,0xb8647423
  4061d9:	lea    edi,[edx+0x2e461080]
  4061df:	or     al,0x0
  4061e1:	dec    esi
  4061e2:	ss xor eax,edx
  4061e5:	adc    DWORD PTR ds:0xdfa883e,edi
  4061eb:	dec    esp
  4061ec:	loopne 0x4061e6
  4061ee:	or     eax,0x599c8e5c
  4061f3:	jae    0x40618b
  4061f5:	inc    esi
  4061f6:	xor    esi,DWORD PTR [esi+0x5d]
  4061f9:	sbb    al,0xff
  4061fb:	xor    eax,0xee070315
  406200:	mov    esp,0xbf561433
  406205:	xor    edx,DWORD PTR [eax+edi*8]
  406208:	jg     0x406211
  40620a:	out    0xea,al
  40620c:	sub    DWORD PTR [ecx+0x3d],0x30
  406210:	in     al,0xc0
  406212:	(bad)  
  406213:	jns    0x40621b
  406215:	ret    
  406216:	lds    ebp,FWORD PTR [ebp-0x55e20709]
  40621c:	idiv   eax
  40621e:	mov    bl,0xde
  406220:	adc    ch,BYTE PTR [edi+0x38f36d1]
  406226:	push   0xc2c48e
	...
  406253:	add    BYTE PTR [edx],bh
  406255:	jne    0x40622a
  406257:	mov    eax,esi
  406259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40625a:	mov    esi,0xbea5b423
  40625f:	(bad)  
  406260:	ret    0x7479
  406263:	pop    ebx
  406264:	test   eax,0x564e06f1
  406269:	pop    ebx
  40626a:	sub    ch,al
  40626c:	das    
  40626d:	pop    esp
  40626e:	xor    ecx,DWORD PTR [edi-0x18aed36c]
  406274:	xchg   BYTE PTR [ecx+edx*2],ch
  406277:	mov    DWORD PTR [edx+0x1ad38740],esp
  40627d:	shr    dl,cl
  40627f:	pop    ecx
  406280:	and    bl,BYTE PTR [edx-0x7dc2edd6]
  406286:	bound  edi,QWORD PTR [ebp-0x41359ad3]
  40628c:	or     eax,0x39806c65
  406291:	cmp    eax,0x5bd593f8
  406296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406297:	repz jle 0x406235
  40629a:	out    dx,al
  40629b:	push   es
  40629c:	std    
  40629d:	rol    DWORD PTR [edx],cl
  40629f:	div    DWORD PTR [esi]
  4062a1:	cmp    al,0xf1
  4062a3:	mul    BYTE PTR [esi]
  4062a5:	into   
  4062a6:	push   ebp
  4062a7:	adc    ecx,ebp
  4062a9:	jmp    0x97e1b2e
  4062ae:	adc    eax,0xea4efcc5
  4062b3:	shl    DWORD PTR [ebp+0xbf1a62],cl
	...
  4062e1:	add    BYTE PTR [ebp+0x65],bl
  4062e4:	cli    
  4062e5:	mov    esi,0x89eececb
  4062ea:	jge    0x4062ce
  4062ec:	mov    es,WORD PTR [esi]
  4062ee:	js     0x406313
  4062f0:	test   al,0xc4
  4062f2:	dec    edi
  4062f3:	pop    esp
  4062f4:	mov    bl,0x8e
  4062f6:	aam    0x2b
  4062f8:	mov    eax,ds:0x912bd6e6
  4062fd:	mov    BYTE PTR [edx-0x75f437c1],ch
  406303:	adc    edx,ebp
  406305:	pop    ecx
  406306:	jp     0x4062a2
  406308:	stos   BYTE PTR es:[edi],al
  406309:	adc    DWORD PTR ds:0xea620082,edi
  40630f:	sub    edi,ebx
  406311:	retf   0x2be3
  406314:	stc    
  406315:	je     0x406330
  406317:	pop    eax
  406318:	bound  eax,QWORD PTR [esp+esi*1]
  40631b:	imul   eax,DWORD PTR [ebx],0xc09a89af
  406321:	in     al,0x38
  406323:	pushf  
  406324:	mov    eax,DWORD PTR [edx+0x70]
  406327:	and    eax,DWORD PTR [bx+si+0x68]
  40632b:	lea    ebx,fs:[ebp+0x4c]
  40632f:	sbb    esi,DWORD PTR [ebx+0x565b7da9]
  406335:	add    DWORD PTR [ebx+0x6dea099c],eax
  40633b:	sar    eax,cl
  40633d:	fimul  DWORD PTR [ebx-0x7a2504c5]
  406343:	int    0x8c
  406345:	test   BYTE PTR [eax],0x0
	...
  406370:	xchg   edx,eax
  406371:	add    DWORD PTR [esi-0x39],ebx
  406374:	cmp    BYTE PTR ds:0x4e02282c,cl
  40637a:	add    esp,DWORD PTR [ebx]
  40637c:	mov    al,0x61
  40637e:	xor    esp,eax
  406380:	and    esp,DWORD PTR [edi+0x33]
  406383:	jecxz  0x40633e
  406385:	mov    edi,0xa5ff831f
  40638a:	jmp    0xc3dc8b79
  40638f:	fld    QWORD PTR [edx-0x7c]
  406392:	mov    eax,eax
  406394:	jmp    0x4063f7
  406396:	and    esi,DWORD PTR [ebx+0x658d63f3]
  40639c:	aas    
  40639d:	add    BYTE PTR [eax],dl
  40639f:	(bad)  
  4063a0:	out    dx,eax
  4063a1:	pop    edx
  4063a2:	inc    esi
  4063a3:	cmc    
  4063a4:	cld    
  4063a5:	fwait
  4063a6:	add    eax,0xfbd302ea
  4063ab:	fiadd  DWORD PTR [ebp-0xbff06c6]
  4063b1:	lahf   
  4063b2:	lea    edx,[eax+ecx*4-0x6abbebf9]
  4063b9:	push   edi
  4063ba:	push   esi
  4063bb:	sub    dh,dl
  4063bd:	xchg   ebp,eax
  4063be:	or     DWORD PTR [ebx],eax
  4063c0:	push   edi
  4063c1:	sar    al,1
  4063c3:	xor    ebx,DWORD PTR ds:0xef33fa78
  4063c9:	aad    0x8c
  4063cb:	movhps xmm7,QWORD PTR [ecx+0x1464d8a1]
  4063d2:	cmp    al,0xc1
	...
  4063fc:	add    BYTE PTR [eax],al
  4063fe:	es push ecx
  406400:	add    ecx,edx
  406402:	fcomp  QWORD PTR [ebx+esi*1+0x339f34f9]
  406409:	cli    
  40640a:	rol    dl,cl
  40640c:	pop    ds
  40640d:	enter  0x881c,0xe7
  406411:	add    edx,DWORD PTR [ecx+0x4bc3c14a]
  406417:	push   edi
  406418:	(bad)  [ebx+0x23fa683e]
  40641e:	cmp    eax,0x9b8df868
  406423:	pop    esp
  406424:	out    0xcd,al
  406426:	ss jp  0x40642b
  406429:	inc    esi
  40642a:	dec    ebx
  40642b:	call   0xfb8b:0x972405c0
  406432:	and    al,0x9f
  406434:	and    edi,ecx
  406436:	and    al,0xa0
  406438:	lea    edx,[eax+ebx*1-0x5bc8f874]
  40643f:	push   esi
  406440:	push   esi
  406441:	cmp    BYTE PTR [esi-0x38fcf669],dl
  406447:	into   
  406448:	clc    
  406449:	xor    ebx,DWORD PTR [ebp-0x60cc058a]
  40644f:	aam    0x8c
  406451:	(bad)  
  406453:	in     eax,dx
  406454:	add    eax,0x4970cad5
  406459:	or     al,0x7f
  40645b:	mov    dl,0x9
  40645d:	add    eax,DWORD PTR [eax+ebp*8+0x33bc]
	...
  40648c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648d:	nop
  40648e:	mov    ebx,0x96fea433
  406493:	pop    ds
  406494:	stos   DWORD PTR es:[edi],eax
  406495:	pop    edi
  406496:	pop    ebp
  406497:	inc    ebp
  406498:	cmp    eax,0x7dc0e39e
  40649d:	pop    edi
  40649e:	add    al,0xd9
  4064a0:	mov    ch,0xa
  4064a2:	hlt    
  4064a3:	cli    
  4064a4:	sbb    eax,0xc3f8f41a
  4064a9:	idiv   edi
  4064ab:	add    al,0x57
  4064ad:	adc    BYTE PTR [edx+0x3],ch
  4064b0:	clc    
  4064b1:	addr16 ret 0x43c0
  4064b5:	jno    0x40647b
  4064b7:	mov    edx,DWORD PTR [ebp-0x80]
  4064ba:	mov    ebx,0xbc804723
  4064bf:	lea    ebp,[edx+0x29a3bb64]
  4064c5:	push   edi
  4064c6:	add    al,0x56
  4064c8:	inc    esi
  4064c9:	xor    eax,ebp
  4064cb:	or     DWORD PTR ds:0x6df88c42,edi
  4064d1:	push   0x7a4dfae3
  4064d6:	mov    DWORD PTR [ecx+eax*2-0x5e90fd65],ecx
  4064dd:	jno    0x406524
  4064df:	sbb    al,0xff
  4064e1:	mov    bl,0x6
  4064e3:	add    eax,DWORD PTR [edx+ebp*8]
  4064e6:	mov    ecx,0xbc51f733
  4064eb:	xor    esp,esp
  4064ed:	not    DWORD PTR [edi+0x1f]
	...
  406517:	add    BYTE PTR [eax],al
  406519:	add    BYTE PTR [esi+edi*1+0x5b3d8cea],dh
  406520:	inc    edi
  406521:	hlt    
  406522:	(bad)  
  406523:	cwde   
  406524:	cmc    
  406525:	add    ah,bh
  406527:	rcl    BYTE PTR [eax-0x6dd7380d],1
  40652d:	mov    edx,eax
  40652f:	push   esp
  406530:	sub    edi,ebp
  406532:	mov    bh,0x5c
  406534:	jmp    0x3d00:0xa99a523d
  40653b:	cwde   
  40653c:	bound  edi,QWORD PTR [ebx-0x43e59db3]
  406542:	ret    
  406543:	(bad)  
  406544:	test   BYTE PTR [eax+edx*4-0x17fc9216],0x3a
  40654c:	sub    dl,al
  40654e:	inc    ebp
  40654f:	pop    eax
  406550:	sbb    DWORD PTR [ebx-0xcbdd78a],ecx
  406556:	addr16 into 
  406558:	gs pop es
  40655a:	sbb    al,0xfa
  40655c:	dec    ebx
  40655d:	sub    DWORD PTR ds:0x7fc4d50d,edi
  406563:	dec    ebx
  406564:	jmp    0xdbb:0xda61b5c9
  40656b:	bound  ebx,QWORD PTR [eax+ebx*4+0x59]
  40656f:	dec    edi
  406570:	shl    DWORD PTR [eax-0x460a7cd],0xfe
  406577:	xchg   edi,eax
  406578:	fiadd  WORD PTR [edx]
  40657a:	pop    es
  40657b:	shl    al,1
  40657d:	repnz add BYTE PTR [eax],al
	...
  4065a8:	pop    ss
  4065a9:	sub    dl,ah
  4065ab:	mov    BYTE PTR [edx-0x3755daad],bh
  4065b1:	mov    dh,0xea
  4065b3:	cmp    eax,0xffa99a3a
  4065b8:	cmp    al,0x98
  4065ba:	jb     0x406576
  4065bc:	sub    eax,0xbbbbfa62
  4065c1:	mov    BYTE PTR [eax],0xde
  4065c4:	push   edx
  4065c5:	mov    esi,ds
  4065c7:	and    bh,BYTE PTR ds:0xffa81005
  4065cd:	dec    edi
  4065ce:	add    edi,DWORD PTR [ecx-0x6dcc9d4c]
  4065d4:	int3   
  4065d5:	popa   
  4065d6:	lea    ebx,[ebp+0x40]
  4065d9:	sti    
  4065da:	dec    edx
  4065db:	inc    edx
  4065dc:	jecxz  0x406635
  4065de:	dec    esi
  4065df:	fld    QWORD PTR [edx+0x77ea1099]
  4065e5:	iret   
  4065e6:	cli    
  4065e7:	mov    edx,0x74f927d5
  4065ec:	test   eax,0x109d703b
  4065f1:	popf   
  4065f2:	add    esi,DWORD PTR [edi-0x93c656b]
  4065f8:	cmp    al,0x82
  4065fa:	mov    eax,DWORD PTR [eax+0x6c]
  4065fd:	popa   
  4065fe:	xor    eax,DWORD PTR [edx-0x4a]
  406601:	(bad)  
  406602:	pop    es
  406603:	das    
  406604:	sub    eax,eax
  406606:	sub    dl,ch
  406608:	sbb    esp,DWORD PTR [edi]
  40660a:	shr    DWORD PTR [ecx],0x0
	...
  406635:	add    BYTE PTR [ecx+0x58],dl
  406638:	ret    
  406639:	jb     0x4065bf
  40663b:	daa    
  40663c:	stc    
  40663d:	fiadd  DWORD PTR [ebp-0x8096b33]
  406643:	and    BYTE PTR [ecx-0x3e8ec3ed],0x2b
  40664a:	xor    al,0x5e
  40664c:	shl    BYTE PTR [edx-0x1b],1
  40664f:	mov    ?,ebx
  406651:	mov    edx,0xf68be8d7
  406656:	nop
  406657:	mov    ebp,edi
  406659:	mov    ch,0x3f
  40665b:	test   eax,0x6bfda80c
  406660:	add    esp,DWORD PTR [ebx+0x3355c7]
  406666:	dec    DWORD PTR [eax+edi*8-0x73]
  40666a:	mov    esi,DWORD PTR [eax+0x5]
  40666d:	sbb    eax,0x5e035b5f
  406672:	out    dx,eax
  406673:	sbb    eax,0x35e417c3
  406678:	mov    edi,ecx
  40667a:	in     al,0x14
  40667c:	xor    edi,ebx
  40667e:	pop    edx
  40667f:	fild   DWORD PTR [esi]
  406681:	cmp    edi,esi
  406683:	sub    ebx,ecx
  406685:	add    esp,DWORD PTR [ecx+0x3b]
  406688:	rol    al,0xa3
  40668b:	pop    ebx
  40668c:	ret    
  40668d:	mov    ebp,DWORD PTR [esp+ecx*2]
  406690:	clc    
  406691:	xor    ecx,DWORD PTR [edi]
  406693:	loop   0x406628
  406695:	pop    ss
  406696:	add    dh,dh
  406698:	(bad)  
	...
  4066c2:	add    BYTE PTR [eax],al
  4066c4:	xchg   esp,eax
  4066c5:	test   al,0x30
  4066c7:	rcl    DWORD PTR [ebp+0x64],0x3
  4066cb:	rcr    ah,1
  4066cd:	push   ss
  4066ce:	xor    edi,ebx
  4066d0:	je     0x4066e6
  4066d2:	lea    ecx,[eax+ebx*2-0x775d83ea]
  4066d9:	pop    ebx
  4066da:	dec    esi
  4066db:	cmp    al,0x26
  4066dd:	push   ds
  4066de:	adc    BYTE PTR [ebx],al
  4066e0:	or     eax,0x1f33f9e4
  4066e5:	dec    esp
  4066e6:	clc    
  4066e7:	(bad)  
  4066e8:	retf   
  4066e9:	outs   dx,DWORD PTR ds:[esi]
  4066ea:	gs push esi
  4066ec:	jnp    0x406709
  4066ee:	add    ebx,DWORD PTR [esi+0x2f]
  4066f1:	sbb    eax,0x351417c3
  4066f6:	mov    edi,0xff0f28ff
  4066fb:	xor    ecx,DWORD PTR ds:0x1e33fb63
  406701:	loope  0x406686
  406703:	pop    es
  406704:	arpl   WORD PTR ds:0x453ef428,di
  40670a:	std    
  40670b:	sar    dh,0x41
  40670e:	add    bl,al
  406710:	mov    cl,0x20
  406712:	mov    ah,0xff
  406714:	jmp    0xe64c216d
  406719:	push   esp
  40671a:	mov    eax,0x8c30b28d
  40671f:	jmp    DWORD PTR [eax*4+0x32a5601]
  406726:	ror    DWORD PTR [edx],0x0
	...
  406751:	add    BYTE PTR ds:0xb9ff7414,bh
  406757:	call   0x4cf59b0f
  40675c:	mov    ecx,0x87c6a633
  406761:	psubusw mm4,QWORD PTR [edi+ecx*4]
  406765:	stos   DWORD PTR es:[edi],eax
  406766:	cmp    eax,0x7fc0fc7a
  40676b:	push   eax
  40676c:	add    dl,cl
  40676e:	leave  
  40676f:	mov    eax,0x7481ffb4
  406774:	mov    esp,0xba74770b
  406779:	(bad)  
  40677a:	rol    BYTE PTR [eax-0x6],cl
  40677d:	lahf   
  40677e:	int    0x97
  406780:	add    BYTE PTR [esi+0x4a],bl
  406783:	add    eax,0x15
  406786:	cmp    eax,0x51ff746b
  40678b:	xor    BYTE PTR [ebx+esi*1+0x33b84c44],0x47
  406793:	mov    esi,0xbfd077f
  406798:	pop    eax
  406799:	gs cmp eax,0xfec0f308
  40679f:	inc    eax
  4067a0:	add    bl,al
  4067a2:	loope  0x4067f5
  4067a4:	mov    bl,0xff
  4067a6:	sbb    DWORD PTR [esi],edx
  4067a8:	mov    edx,0x1a5c160b
  4067ad:	scas   eax,DWORD PTR es:[edi]
  4067ae:	mov    ebx,0xf295f5ef
  4067b3:	addr16 popw es
	...
  4067de:	add    BYTE PTR [eax],al
  4067e0:	nop
  4067e1:	addr16 test al,0xc6
  4067e4:	inc    esp
  4067e5:	pop    esp
  4067e6:	cdq    
  4067e7:	jae    0x4067d2
  4067e9:	pop    eax
  4067ea:	mov    esi,0xe2542db3
  4067ef:	lods   eax,DWORD PTR ds:[esi]
  4067f0:	or     eax,0x41805c53
  4067f5:	(bad)  
  4067f6:	popf   
  4067f7:	mov    ds:0xdc2f5cc9,eax
  4067fc:	(bad)  
  4067fd:	sbb    ah,dh
  4067ff:	push   es
  406800:	test   BYTE PTR [eax],bl
  406802:	mov    ?,WORD PTR [ebx-0x5445a74f]
  406808:	xor    eax,0xb3adba52
  40680d:	not    ebp
  40680f:	aam    0xfb
  406811:	fisub  WORD PTR [ebx+0x7]
  406814:	lock pop esi
  406816:	sub    bh,al
  406818:	xor    ebx,DWORD PTR [eax+eax*2+0x73]
  40681c:	sbb    DWORD PTR [eax+0x56],0xe2552db3
  406823:	scas   al,BYTE PTR es:[edi]
  406824:	sub    eax,0x41887452
  406829:	test   al,0xbf
  40682b:	pop    ebx
  40682c:	rcr    DWORD PTR [ebx-0x51],1
  40682f:	jecxz  0x4068af
  406831:	sbb    esp,edi
  406833:	push   es
  406834:	jge    0x40684e
  406836:	es mov bl,0x49
  406839:	pop    eax
  40683a:	fisubr DWORD PTR [ebp+esi*1-0x345125ad]
  406841:	out    dx,al
  406842:	cmc    
  406843:	mov    ds:0x0,eax
	...
  40686c:	add    BYTE PTR [eax],al
  40686e:	sbb    BYTE PTR [edi-0x686ff8f9],al
  406874:	sub    dh,al
  406876:	xor    al,0x5c
  406878:	add    BYTE PTR [ecx],bl
  40687a:	lea    ebx,[eax-0x1]
  40687d:	out    dx,al
  40687e:	int3   
  40687f:	mov    edi,ebx
  406881:	repnz fisttp DWORD PTR [ebx+0x68816cf8]
  406888:	adc    al,0x2a
  40688a:	inc    ebx
  40688b:	cld    
  40688c:	add    bl,BYTE PTR [edi]
  40688e:	inc    edx
  40688f:	sbb    al,cl
  406891:	test   BYTE PTR [eax+0x25],0xbf
  406895:	mov    esi,0xfaff57ac
  40689a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40689b:	arpl   cx,di
  40689d:	cli    
  40689e:	mov    ds:0x63069be5,eax
  4068a3:	push   0x8
  4068a5:	das    
  4068a6:	cmp    DWORD PTR [ecx+0x6d80a834],edi
  4068ac:	add    esi,DWORD PTR [eax-0x7900a7d4]
  4068b2:	in     al,dx
  4068b3:	mov    edi,edx
  4068b5:	repnz ror BYTE PTR [ebx+0x5fc164f9],1
  4068bc:	sub    bh,0xe8
  4068bf:	dec    edi
  4068c0:	add    ebp,DWORD PTR [edi-0x183fe5d3]
  4068c6:	cmp    BYTE PTR [edi+edi*4],bl
  4068c9:	push   esi
  4068ca:	lods   al,BYTE PTR ds:[esi]
  4068cb:	push   edi
  4068cc:	call   FWORD PTR [edx]
  4068ce:	mov    ds:0xfaf863,eax
	...
  4068fb:	add    BYTE PTR [eax+0x66d693e5],bl
  406901:	dec    ecx
  406902:	cmp    dh,BYTE PTR [eax+eax*2-0x4f]
  406906:	sub    al,0x28
  406908:	jnp    0x40696e
  40690a:	add    edi,DWORD PTR [ecx]
  40690c:	int3   
  40690d:	push   edi
  40690e:	call   FWORD PTR [esi]
  406910:	mov    WORD PTR [ebx-0x75141d05],cs
  406916:	clc    
  406917:	pop    esp
  406918:	mov    cl,0x66
  40691a:	mov    ebx,0x2a314500
  40691f:	add    edx,ecx
  406921:	push   edx
  406922:	rol    cl,0x20
  406925:	pop    esi
  406926:	retf   0x20bf
  406929:	or     eax,0x724ffff
  40692e:	or     edi,ecx
  406930:	and    al,0x5
  406932:	lea    ebx,[eax+esi*8-0x3792d17]
  406939:	pusha  
  40693a:	pop    esi
  40693b:	and    al,0x96
  40693d:	and    BYTE PTR ds:0x7dd89e03,dl
  406943:	or     dh,ah
  406945:	arpl   WORD PTR [ecx],ax
  406947:	pop    edi
  406948:	fistp  DWORD PTR [ecx+0x4f]
  40694b:	or     dh,dl
  40694d:	mov    bl,0xc
  40694f:	call   DWORD PTR [edx]
  406951:	or     ecx,DWORD PTR [ebp-0x76a3988a]
  406957:	bswap  ebp
  406959:	or     al,0xff
  40695b:	pop    edx
  40695c:	pop    esi
  40695d:	test   al,0x58
  40695f:	pop    edi
	...
  406988:	add    BYTE PTR [eax],al
  40698a:	inc    ecx
  40698b:	adc    al,dl
  40698d:	or     al,0xa7
  40698f:	lods   eax,DWORD PTR ds:[esi]
  406990:	mov    ebp,esp
  406992:	and    al,0x23
  406994:	clc    
  406995:	push   edi
  406996:	leave  
  406997:	scas   eax,DWORD PTR es:[edi]
  406998:	mov    DWORD PTR [ebp-0x1d],0x6700005e
  40699f:	or     esi,DWORD PTR [ebp+0xc]
  4069a2:	adc    BYTE PTR [esi+0x4a5ac7f8],bl
  4069a8:	mov    WORD PTR [ecx+0x57],es
  4069ab:	pop    ecx
  4069ac:	and    eax,DWORD PTR [ebp-0x78]
  4069af:	and    eax,DWORD PTR ds:0x99f234
  4069b5:	mov    esp,ebp
  4069b7:	adc    eax,0x425ac7ef
  4069bc:	mov    WORD PTR [ecx+0x3e],es
  4069bf:	inc    esp
  4069c0:	mov    cl,0xdc
  4069c2:	hlt    
  4069c3:	retf   
  4069c4:	leave  
  4069c5:	add    eax,0x43cf6a
  4069ca:	test   al,0xf0
  4069cc:	hlt    
  4069cd:	sgdtd  [edi+0x43]
  4069d1:	lea    edi,[edi+0x44]
  4069d4:	mov    bl,0xe1
  4069d6:	in     al,dx
  4069d7:	add    BYTE PTR [esp+ebx*1+0x2fc7eb5],bl
  4069de:	xor    DWORD PTR [eax],0x1d
  4069e1:	inc    eax
  4069e2:	data16 cmp BYTE PTR [edi+0x41],0x3e
  4069e7:	je     0x406985
  4069e9:	inc    eax
  4069ea:	fist   DWORD PTR [eax+esi*4]
  4069ed:	add    DWORD PTR [eax],0x0
	...
  406a18:	adc    DWORD PTR [eax],0x43
  406a1b:	call   0x43ae22
  406a20:	mov    ebp,0x4d40ac6e
  406a25:	push   ss
  406a26:	jl     0x406a85
  406a28:	mov    dh,0xc0
  406a2a:	les    eax,FWORD PTR [eax-0x3b]
  406a2d:	jle    0x406a2b
  406a2f:	add    al,BYTE PTR [ebx]
  406a31:	loopne 0x406a86
  406a33:	push   0x42c6fa
  406a38:	out    dx,al
  406a39:	fisttp DWORD PTR [ecx]
  406a3b:	in     eax,0x91
  406a3d:	les    eax,FWORD PTR [edx]
  406a3f:	pop    ebp
  406a40:	mov    al,BYTE PTR [ebp+0x2b34484]
  406a46:	add    eax,DWORD PTR [eax+0x75f898bd]
  406a4c:	push   ebp
  406a4d:	rcr    DWORD PTR [eax+ecx*1-0x5c7cb60e],0xba
  406a55:	mov    BYTE PTR [edx+0x0],0x3e
  406a59:	add    DWORD PTR [ebx],ebp
  406a5b:	mul    BYTE PTR [esi-0x48]
  406a5e:	add    eax,DWORD PTR [eax]
  406a60:	ds pop ebx
  406a62:	bound  edi,QWORD PTR [ebx-0x63e1aabf]
  406a68:	cmp    al,0xcf
  406a6a:	jecxz  0x4069ef
  406a6c:	fst    st(7)
  406a6e:	pop    esp
  406a6f:	inc    edx
  406a70:	ds pop ebx
  406a72:	stos   BYTE PTR es:[edi],al
  406a73:	sub    ebp,DWORD PTR [eax]
  406a75:	loope  0x406a1a
  406a77:	call   esi
  406a79:	arpl   cx,bp
  406a7b:	add    eax,DWORD PTR [eax]
	...
  406aa5:	add    BYTE PTR [esi],bh
  406aa7:	mov    BYTE PTR [ebx],bl
  406aa9:	mov    eax,0xffb1651f
  406aae:	idiv   eax
  406ab0:	push   0x605b7f81
  406ab5:	sbb    DWORD PTR [edx-0x1a],esi
  406ab8:	daa    
  406ab9:	add    al,0xd6
  406abb:	mov    bl,0xe9
  406abd:	add    edi,DWORD PTR [esi]
  406abf:	cli    
  406ac0:	clc    
  406ac1:	cmp    BYTE PTR [edi+0x5b],0x62
  406ac5:	sbb    DWORD PTR [edx],ecx
  406ac7:	out    0x27,al
  406ac9:	add    al,0xb5
  406acb:	data16 loope 0x406a4e
  406ace:	jg     0x406b2b
  406ad0:	out    dx,al
  406ad1:	mov    ebx,0xbce62149
  406ad6:	fisttp QWORD PTR [ebx-0x1dc1baa4]
  406adc:	fcomi  st,st(7)
  406ade:	mov    dl,0x9a
  406ae0:	jmp    0x64d3b661
  406ae5:	inc    ebp
  406ae6:	ds cli 
  406ae8:	lods   al,BYTE PTR ds:[esi]
  406ae9:	cmp    bh,0x5a
  406aec:	jb     0x406b07
  406aee:	(bad)  
  406aef:	in     eax,0xa7
  406af1:	add    ecx,DWORD PTR [ecx+0x23]
  406af4:	out    0xb9,al
  406af6:	popf   
  406af7:	xchg   edi,eax
  406af8:	pop    esp
  406af9:	inc    ebp
  406afa:	ds loop 0x406ad8
  406afd:	inc    ebx
  406afe:	mov    bl,0x9a
  406b00:	jmp    0x949d1e
  406b05:	mov    esp,0x5c30c32d
	...
  406b32:	add    BYTE PTR [eax],al
  406b34:	add    ebx,DWORD PTR [ebx-0x18]
  406b37:	fwait
  406b38:	cdq    
  406b39:	push   esp
  406b3a:	inc    edx
  406b3c:	mov    esi,DWORD PTR [ecx+ecx*8+0x555b3e2b]
  406b43:	(bad)  
  406b44:	(bad)  
  406b46:	ret    
  406b47:	add    DWORD PTR [ebx-0x170100ad],edx
  406b4d:	fild   WORD PTR [ebx]
  406b4f:	and    al,0xc6
  406b51:	in     eax,0x40
  406b53:	jmp    0x720ddadc
  406b58:	mov    esi,0xb5ee0099
  406b5d:	arpl   dx,cx
  406b5f:	pusha  
  406b60:	cmp    DWORD PTR [esi],esp
  406b62:	test   BYTE PTR [edx+eax*4+0x5b],bl
  406b66:	mov    ebp,ebx
  406b68:	(bad)  
  406b69:	loop   0x406af7
  406b6b:	sub    BYTE PTR [edx-0x66],al
  406b6e:	jne    0x406b04
  406b70:	bound  ebx,QWORD PTR [ebx]
  406b72:	jmp    FWORD PTR [esi+0x7403df98]
  406b78:	adc    eax,0x34e940e5
  406b7d:	outs   dx,DWORD PTR ds:[esi]
  406b7e:	lea    ecx,ds:0xda009a30
  406b84:	inc    ecx
  406b85:	out    0x4b,al
  406b87:	ja     0x406b83
  406b89:	pop    edx
  406b8a:	xor    edx,ebp
  406b8c:	mov    esi,0x3a288e9e
  406b91:	mov    dl,al
  406b93:	cwde   
  406b94:	jge    0x406b77
  406b96:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406bc2:	mov    ecx,0x2e940e4
  406bc7:	into   
  406bc8:	(bad)  
  406bc9:	bound  ecx,QWORD PTR [esi-0x75]
  406bcc:	lea    ebp,[eax+0x34e03d]
  406bd2:	arpl   dx,bx
  406bd4:	inc    eax
  406bd5:	add    ah,cl
  406bd7:	dec    edx
  406bd8:	aaa    
  406bd9:	lea    esp,[esi+0x5b35ff57]
  406bdf:	fiadd  DWORD PTR [eax+0x0]
  406be2:	enter  0xfca2,0xff
  406be6:	adc    bl,BYTE PTR [edi-0x2dd8be73]
  406bec:	inc    ebp
  406bed:	clc    
  406bee:	mov    ?,edx
  406bf0:	(bad)  
  406bf1:	(bad)  
  406bf2:	cmp    ch,dl
  406bf4:	(bad)  
  406bf5:	mov    esp,DWORD PTR [eax+0x9]
  406bf8:	shl    BYTE PTR [ebx],cl
  406bfa:	popa   
  406bfb:	cmp    eax,0x1d1cfc54
  406c00:	add    eax,DWORD PTR [edx+ecx*4]
  406c03:	repz mov WORD PTR [ecx-0x19],es
  406c07:	pop    ebx
  406c08:	inc    ebp
  406c09:	clc    
  406c0a:	loop   0x406bf1
  406c0c:	js     0x406b90
  406c0e:	sub    eax,0x68fc7500
  406c13:	call   0xc6c1:0xb1a89f8
  406c1a:	jmp    0x84cc6af2
  406c1f:	push   ds
  406c20:	ret    
  406c21:	add    eax,0x754126d4
	...
  406c4e:	add    BYTE PTR [eax],al
  406c50:	jmp    0x406c18
  406c52:	in     al,dx
  406c53:	dec    eax
  406c55:	add    BYTE PTR [ebx+0x33281cc6],cl
  406c5b:	inc    ebp
  406c5c:	mov    ebx,0xa303c14c
  406c61:	shl    esp,1
  406c63:	lea    esp,[esi+0x57]
  406c66:	add    eax,DWORD PTR [ebp+0xf]
  406c69:	pop    edx
  406c6a:	mov    eax,ds:0xff70feeb
  406c6f:	jne    0x406c8c
  406c71:	rol    BYTE PTR [ebp-0x8],1
  406c74:	ds mov ebx,0x7a7ffc2f
  406c7a:	push   cs
  406c7b:	mov    esp,DWORD PTR [eax-0x33]
  406c7e:	mov    cl,0xc1
  406c80:	jge    0x406cb9
  406c82:	add    al,bl
  406c84:	dec    DWORD PTR [esi]
  406c86:	sar    DWORD PTR [ecx-0x527ea6],cl
  406c8c:	mov    ch,0x81
  406c8e:	jns    0x406ce5
  406c90:	cmp    cl,BYTE PTR [ebp+0x46]
  406c93:	cld    
  406c94:	pop    ebp
  406c95:	xchg   ecx,eax
  406c96:	loope  0x406c5d
  406c98:	xor    eax,0xb3040186
  406c9d:	(bad)  
  406c9f:	inc    ecx
  406ca0:	ds inc ebp
  406ca2:	inc    esi
  406ca3:	clc    
  406ca4:	cmp    ebp,DWORD PTR [eax+0x70]
  406ca7:	sbb    edi,DWORD PTR [ecx-0x4e03c9c0]
  406cad:	jle    0x406c5b
  406caf:	mov    DWORD PTR [ebx+0x30],edi
  406cb2:	ret    0xc6
	...
  406cdd:	add    BYTE PTR [eax-0x43],dl
  406ce0:	lods   eax,DWORD PTR ds:[esi]
  406ce1:	mov    ebp,ebp
  406ce3:	add    al,al
  406ce5:	add    eax,0x7541fc3d
  406cea:	add    eax,0xd1ff9edb
  406cef:	or     BYTE PTR [eax-0x3a],bh
  406cf2:	mov    ch,0xe8
  406cf4:	out    dx,eax
  406cf5:	inc    esp
  406cf6:	ret    0xc134
  406cf9:	add    eax,DWORD PTR [edx-0x41]
  406cfc:	xchg   DWORD PTR [esi+0x450043ff],ecx
  406d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d03:	ss aad 0xc1
  406d06:	sbb    al,0xe
  406d08:	lods   al,BYTE PTR ds:[esi]
  406d09:	jne    0x406ca5
  406d0b:	rol    BYTE PTR [esi-0x8],0xc7
  406d0f:	inc    esi
  406d10:	scas   eax,DWORD PTR es:[edi]
  406d11:	rol    DWORD PTR [eax-0x4a0187df],0x5a
  406d18:	pop    edx
  406d19:	ret    0x577d
  406d1c:	jmp    0x4b02:0x39c7ffcb
  406d23:	mov    ebx,DWORD PTR [edx+eax*2+0x3e]
  406d27:	pop    esp
  406d28:	cld    
  406d29:	test   edx,0x1302e99b
  406d2f:	xchg   ebx,eax
  406d30:	fs inc edx
  406d32:	ds out 0xa3,al
  406d35:	scas   eax,DWORD PTR es:[edi]
  406d36:	aas    
  406d37:	pop    eax
  406d38:	in     eax,0x7e
  406d3a:	jg     0x406d97
  406d3c:	jb     0x406d84
  406d3e:	ss pop ebx
  406d40:	in     al,dx
  406d41:	inc    ebx
	...
  406d6a:	add    BYTE PTR [eax],al
  406d6c:	mov    ebx,0xfdbae99a
  406d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d72:	jb     0x406d13
  406d74:	sbb    edi,eax
  406d76:	icebp  
  406d77:	fwait
  406d78:	pop    eax
  406d79:	and    cl,ch
  406d7b:	add    edi,DWORD PTR [ebp+0x5835ee53]
  406d81:	push   eax
  406d82:	pop    esp
  406d83:	cld    
  406d84:	loope  0x406df6
  406d86:	scas   al,BYTE PTR es:[edi]
  406d87:	add    al,0x3e
  406d89:	fs test eax,0xce134131
  406d8f:	stos   DWORD PTR es:[edi],eax
  406d90:	loope  0x406de2
  406d92:	rcl    BYTE PTR [edi],cl
  406d94:	lds    ebx,FWORD PTR [ebx+0x1b4593ed]
  406d9a:	cmp    al,0x3
  406d9c:	xchg   BYTE PTR [eax-0x52],dl
  406d9f:	stos   DWORD PTR es:[edi],eax
  406da0:	rol    DWORD PTR [ebp+ebp*8+0x7e],0x3e
  406da5:	in     al,0xe8
  406da7:	mov    esp,0x50e9577c
  406dac:	mov    ch,0x3f
  406dae:	push   0xffffffc0
  406db0:	scas   al,BYTE PTR es:[edi]
  406db1:	lods   al,BYTE PTR ds:[esi]
  406db2:	mov    edx,0x135924ce
  406db7:	add    eax,0x81005d24
  406dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dbd:	and    DWORD PTR [eax],eax
  406dbf:	jmp    0xdd3fc17c
  406dc4:	inc    ebx
  406dc5:	inc    esp
  406dc6:	bound  esi,QWORD PTR [edx-0x7e]
  406dc9:	lds    edx,FWORD PTR [eax]
  406dcb:	dec    DWORD PTR fs:[edx+0x50]
  406dcf:	inc    ecx
	...
  406df8:	add    BYTE PTR [eax],al
  406dfa:	pop    ds
  406dfb:	cmp    eax,0x181c46ff
  406e00:	inc    ebp
  406e01:	cmp    DWORD PTR [eax],edi
  406e03:	pop    ebx
  406e04:	mov    esp,DWORD PTR [ebp+ebp*1-0x3d383327]
  406e0b:	popf   
  406e0c:	repnz push 0x67
  406e0f:	pop    edi
  406e10:	add    BYTE PTR [ebp-0x1abb1bc2],dl
  406e16:	enter  0x836f,0x8c
  406e1a:	sub    DWORD PTR [eax+0x74],edx
  406e1d:	repz ror ch,0x8
  406e21:	jmp    0xcd2bc574
  406e26:	test   al,0x5f
  406e28:	push   DWORD PTR [ebp+eax*1+0x38]
  406e2c:	ins    BYTE PTR es:[edi],dx
  406e2d:	out    0xa4,al
  406e2f:	dec    edi
  406e30:	and    ecx,0xffffffa4
  406e33:	lds    eax,FWORD PTR [edx]
  406e35:	ret    0xe239
  406e38:	inc    esp
  406e39:	aad    0x43
  406e3b:	imul   ecx,DWORD PTR [ebp+0x53aa922c],0xffffffd1
  406e42:	ret    0x20
  406e45:	jmp    0x353fc10a
  406e4a:	ret    0xe8ac
  406e4d:	jge    0x406e46
  406e4f:	pop    edx
  406e50:	add    dl,bl
  406e52:	and    bl,0xc2
  406e55:	xor    ch,bl
  406e57:	sbb    al,0xc
  406e59:	jmp    0x12c526c
	...
  406e86:	add    BYTE PTR [eax],al
  406e88:	xor    al,0xac
  406e8a:	cmp    DWORD PTR [ebp+0x77],0x5b
  406e8e:	jne    0x406e9b
  406e90:	dec    edi
  406e91:	push   edi
  406e92:	add    BYTE PTR [eax],al
  406e94:	xchg   edi,eax
  406e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e96:	pop    ebx
  406e97:	leave  
  406e98:	and    eax,0x928aff48
  406e9d:	inc    edi
  406e9e:	mov    edx,0x5b5700
  406ea3:	push   0x57
  406ea5:	add    al,0x75
  406ea7:	adc    BYTE PTR [eax-0x10f78afc],bh
  406ead:	jp     0x406e7d
  406eaf:	add    BYTE PTR [edi-0x26],dl
  406eb2:	mov    edi,0xf8586b7e
  406eb7:	sub    edx,ebp
  406eb9:	push   0xffffff83
  406ebb:	jge    0x406ef4
  406ebd:	pop    ebx
  406ebe:	jne    0x406ec7
  406ec0:	mov    WORD PTR [edi+0x0],ss
  406ec3:	add    BYTE PTR [edi],dl
  406ec5:	out    dx,al
  406ec6:	add    ebx,ebp
  406ec8:	pop    ebp
  406ec9:	int    0xc3
  406ecb:	pop    edi
  406ecc:	fmul   QWORD PTR [edi]
  406ece:	ret    0x170c
  406ed1:	lods   al,BYTE PTR ds:[esi]
  406ed2:	mov    ebp,esp
  406ed4:	xchg   esi,eax
  406ed5:	push   cs
  406ed6:	hlt    
  406ed7:	(bad)  
  406ed8:	loopne 0x406ede
  406eda:	push   DWORD PTR [ebp-0x1d]
  406edd:	rol    DWORD PTR [ebp-0xfaee0c],cl
  406ee3:	(bad)  
  406ee4:	pop    edx
  406ee5:	(bad)  
  406ee6:	std    
  406ee7:	inc    DWORD PTR [eax]
  406ee9:	pop    eax
	...
  406f16:	out    0x1b,eax
  406f18:	test   esp,edi
  406f1a:	xchg   ecx,eax
  406f1b:	add    al,0xff
  406f1d:	add    edi,edx
  406f1f:	pop    edx
  406f20:	add    BYTE PTR [ebp-0xa8d6],cl
  406f26:	rol    BYTE PTR [esi*2+0x4b53e08],1
  406f2d:	lea    edi,[ebx-0x66005618]
  406f33:	je     0x406f53
  406f35:	add    BYTE PTR [esp+eax*2],ah
  406f38:	jbe    0x406ebf
  406f3a:	mov    al,dh
  406f3c:	test   eax,0x459eeff
  406f41:	call   0x44f585
  406f46:	mov    ebp,0x4274a9bc
  406f4b:	cmp    ebx,eax
  406f4d:	jne    0x406f89
  406f4f:	jno    0x406f15
  406f51:	jmp    0x406f96
  406f53:	fadd   QWORD PTR [edx]
  406f55:	add    BYTE PTR [esi],bh
  406f57:	inc    esp
  406f58:	mov    edx,0x4e4436c2
  406f5d:	mov    edx,DWORD PTR [edx-0x3f]
  406f60:	sar    ah,0x8d
  406f63:	sub    esp,ecx
  406f65:	push   0xffffff94
  406f67:	ins    DWORD PTR es:[edi],dx
  406f68:	das    
  406f69:	or     BYTE PTR [esi],dl
  406f6b:	mov    bh,0xa9
  406f6d:	jmp    DWORD PTR [ecx]
  406f6f:	cmp    ebx,eax
  406f71:	je     0x406fe5
  406f73:	jmp    0x7f9b:0x4c8bff4c
	...
  406fa2:	add    BYTE PTR [eax],al
  406fa4:	or     DWORD PTR [ebp-0x58],eax
  406fa7:	or     edi,esi
  406fa9:	mov    BYTE PTR ds:0x4aa82eb,0x6a
  406fb0:	aas    
  406fb1:	mov    edi,0x258eff3e
  406fb6:	cs or  dh,dl
  406fb9:	jmp    0xbf7e7073
  406fbe:	ret    
  406fbf:	jle    0x406fcf
  406fc1:	leave  
  406fc2:	ds adc al,0x6
  406fc5:	jg     0x406f70
  406fc7:	jne    0x407005
  406fc9:	rol    DWORD PTR [edx],1
  406fcb:	mov    edx,DWORD PTR [ebx]
  406fcd:	pop    ebx
  406fce:	cmc    
  406fcf:	jl     0x40701d
  406fd1:	shr    ecx,0x1d
  406fd4:	aas    
  406fd5:	loopne 0x407002
  406fd7:	test   eax,0xf8144e0e
  406fdc:	cwde   
  406fdd:	test   al,0xd9
  406fdf:	test   al,0xb
  406fe1:	pop    edi
  406fe2:	xchg   ecx,eax
  406fe3:	pop    esp
  406fe4:	dec    bp
  406fe6:	jbe    0x406fd4
  406fe8:	cli    
  406fe9:	push   0xfffffffb
  406feb:	add    eax,0xcc6c5665
  406ff0:	jmp    0x2b24:0x5c471fe
  406ff7:	(bad)  
  406ff9:	test   al,0x62
  406ffb:	xchg   edi,eax
  406ffc:	mov    edi,0x51abe916
  407001:	dec    ebp
  407002:	call   0xa8:0x93c064dc
	...
  407031:	add    bl,cl
  407033:	bound  eax,QWORD PTR [ecx+0xb]
  407036:	cmp    DWORD PTR [ebp+0x26],ecx
  407039:	cld    
  40703a:	icebp  
  40703b:	mov    DWORD PTR [esi-0x63b37be3],0xe6219fb
  407045:	test   al,0x19
  407047:	popa   
  407048:	sub    DWORD PTR [esi],ebp
  40704a:	cmp    al,0x40
  40704c:	xchg   esi,eax
  40704d:	or     BYTE PTR [ebx+0x1fbe96b],0x4d
  407054:	ja     0x407056
  407056:	mov    dh,0x5b
  407058:	icebp  
  407059:	add    edi,DWORD PTR [esi]
  40705b:	inc    eax
  40705c:	jmp    0x8e04:0x436b837a
  407063:	fisub  WORD PTR [ebx+0x4]
  407066:	(bad)  
  407067:	dec    esp
  407068:	(bad)  
  407069:	push   esp
  40706a:	rol    esi,1
  40706c:	icebp  
  40706d:	fwait
  40706e:	push   cs
  40706f:	push   ds
  407070:	add    cl,ch
  407072:	cmp    eax,0x3c30bfd6
  407077:	inc    eax
  407078:	sub    al,0x1c
  40707a:	cmp    eax,0xdc6eb98
  40707f:	loopne 0x4070d5
  407081:	in     eax,0x24
  407083:	imul   ebp,DWORD PTR [edx-0x17],0xe984dded
  40708a:	in     eax,0x4c
  40708c:	call   FWORD PTR [ecx]
  40708e:	loope  0x407056
  407090:	or     al,0x76
  407092:	in     al,dx
  407093:	push   0x58
  407095:	rol    BYTE PTR [eax],0x0
	...
  4070c0:	(bad)  
  4070c1:	push   0xffffff83
  4070c3:	in     al,0x4d
  4070c5:	pop    ebx
  4070c6:	jne    0x4070b2
  4070c8:	cld    
  4070c9:	aas    
  4070ca:	add    al,0x6c
  4070cc:	jne    0x407095
  4070ce:	cdq    
  4070cf:	bound  edi,QWORD PTR [ebp-0x50]
  4070d2:	leave  
  4070d3:	sub    edx,DWORD PTR [esi+0x4c]
  4070d6:	push   esp
  4070d7:	jb     0x40707f
  4070d9:	fadd   st,st(3)
  4070db:	xor    ecx,esi
  4070dd:	xchg   edi,edi
  4070df:	ret    
  4070e0:	cmp    eax,0x359cffa4
  4070e5:	xor    al,0xc4
  4070e7:	ss loope 0x407135
  4070ea:	(bad)  
  4070eb:	lods   al,BYTE PTR ds:[esi]
  4070ec:	fstp   DWORD PTR [edx+0x0]
  4070ef:	jmp    0xf1955131
  4070f4:	xchg   esp,eax
  4070f5:	imul   ecx,DWORD PTR [ebp+0x6aaad5a4],0xfc9686ed
  4070ff:	cdq    
  407100:	mov    al,ds:0x8fe608c5
  407105:	pop    edi
  407106:	inc    edi
  407107:	push   0xe30d4f16
  40710c:	out    0x61,al
  40710e:	je     0x4070f3
  407110:	mov    esp,0xe700f8cd
  407115:	mov    cl,cl
  407117:	xor    edx,DWORD PTR [edi-0x6f74fb10]
  40711d:	fdivr  DWORD PTR [edi-0x3df1b7fd]
  407123:	add    al,0x0
	...
  40714d:	add    BYTE PTR [edi+0x14ec8baa],ah
  407153:	or     al,0xf4
  407155:	push   ebx
  407156:	pusha  
  407157:	outs   dx,DWORD PTR ds:[esi]
  407158:	cwde   
  407159:	cmp    ah,BYTE PTR [edi-0x271317a9]
  40715f:	hlt    
  407160:	dec    BYTE PTR [ecx+0x458d0362]
  407166:	add    ebp,DWORD PTR [eax-0xb2fd618]
  40716c:	(bad)  
  40716d:	xor    edi,esp
  40716f:	jno    0x40718f
  407171:	push   0x6d
  407173:	outs   dx,DWORD PTR ds:[esi]
  407174:	add    dl,bh
  407176:	push   edi
  407177:	push   edi
  407178:	push   DWORD PTR [ebp-0xd]
  40717b:	hlt    
  40717c:	je     0x407186
  40717e:	out    dx,eax
  40717f:	retf   
  407180:	(bad)  
  407181:	dec    DWORD PTR [eax]
  407183:	fstp   TBYTE PTR [edi+0x47d30f]
  407189:	add    BYTE PTR [edi],ah
  40718b:	add    dh,BYTE PTR [ebp-0xc]
  40718e:	dec    edi
  40718f:	adc    edi,0xff3348ff
  407195:	stc    
  407196:	pop    ss
  407197:	pop    edi
  407198:	jbe    0x40719f
  40719a:	bound  eax,QWORD PTR ds:[ecx]
  40719d:	add    BYTE PTR [edi],ah
  40719f:	add    dh,BYTE PTR [ebp-0xc]
  4071a2:	das    
  4071a3:	xchg   esp,eax
  4071a4:	(bad)  
  4071a5:	dec    DWORD PTR [eax]
  4071a7:	retf   
  4071a8:	shl    BYTE PTR [ebx+eiz*1+0x1],0x75
  4071ad:	hlt    
  4071ae:	pinsrw mm3,ecx,0xff
	...
  4071da:	add    BYTE PTR [eax],al
  4071dc:	or     ch,al
  4071de:	push   ebp
  4071df:	hlt    
  4071e0:	ds mov ebp,0x9c3e6a12
  4071e6:	lock and BYTE PTR [esi],bh
  4071e9:	xor    al,0xa4
  4071eb:	jne    0x4071b7
  4071ed:	or     DWORD PTR [edi],ebp
  4071ef:	hlt    
  4071f0:	shl    DWORD PTR [esi-0x8],0xc6
  4071f4:	add    ecx,DWORD PTR [esp+eax*1]
  4071f7:	add    BYTE PTR [esi],bh
  4071f9:	xor    al,0x1b
  4071fb:	sub    bh,cl
  4071fd:	jb     0x407203
  4071ff:	jmp    FWORD PTR [ebx]
  407201:	lock fwait
  407203:	into   
  407204:	test   DWORD PTR [ebx+eax*1],esi
  407207:	push   ebx
  407208:	inc    ebp
  407209:	hlt    
  40720a:	das    
  40720b:	ss mov ch,0xdc
  40720e:	sbb    ebp,DWORD PTR [edx]
  407210:	icebp  
  407211:	jb     0x407217
  407213:	call   0x447071
  407218:	cmp    eax,0xb5474dbc
  40721d:	mov    DWORD PTR [ebx-0x6c],ebp
  407220:	dec    edi
  407221:	xor    al,0x3
  407223:	mov    al,0x4b
  407225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407226:	push   esi
  407227:	mov    eax,0x323aa
  40722c:	adc    eax,0x4147be73
  407231:	xor    al,0x4c
  407233:	push   ebx
  407234:	fdivr  QWORD PTR es:[eax+0x3fcb3e00]
  40723b:	clc    
  40723c:	mov    DWORD PTR [edx+0xff3d],eax
	...
  40726a:	xor    edx,DWORD PTR [ecx]
  40726c:	dec    eax
  40726d:	push   0x41e954
  407272:	adc    edi,eax
  407274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407275:	call   0x44ff3d
  40727a:	ins    DWORD PTR es:[edi],dx
  40727b:	cmp    eax,0xbd8274c3
  407280:	lods   al,BYTE PTR ds:[esi]
  407281:	push   0x43365b34
  407286:	xor    esi,DWORD PTR ds:[edi-0x15a4c146]
  40728d:	stos   DWORD PTR es:[edi],eax
  40728e:	jno    0x407232
  407290:	(bad)  
  407291:	les    edx,FWORD PTR [edi+0x3e03d7ee]
  407297:	or     ebp,esp
  407299:	mov    cl,0x90
  40729b:	add    bl,BYTE PTR [ebp+0x12]
  40729e:	ds pop ebx
  4072a0:	add    al,bl
  4072a2:	js     0x407245
  4072a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a5:	add    edx,DWORD PTR [ecx]
  4072a7:	scas   al,BYTE PTR es:[edi]
  4072a8:	xchg   ecx,eax
  4072a9:	pusha  
  4072aa:	nop
  4072ab:	dec    ecx
  4072ac:	xchg   esi,eax
  4072ad:	js     0x4072a2
  4072af:	push   0xffffffe2
  4072b1:	ror    DWORD PTR [edx],1
  4072b3:	pop    edi
  4072b4:	jo     0x4072b7
  4072b6:	xchg   ebp,eax
  4072b7:	pusha  
  4072b8:	sbb    DWORD PTR [eax+esi*2+0x19a47628],ebx
  4072bf:	and    DWORD PTR [esi],esp
  4072c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c2:	inc    ebx
  4072c3:	stos   BYTE PTR es:[edi],al
  4072c4:	ret    0xf3a4
  4072c7:	dec    esi
  4072c8:	push   ecx
  4072c9:	fild   DWORD PTR [esi+0x805649]
	...
  4072f7:	add    bl,bl
  4072f9:	inc    edx
  4072fa:	jmp    0xac62ac2b
  4072ff:	stos   DWORD PTR es:[edi],eax
  407300:	ds pop ebx
  407302:	mov    DWORD PTR [ebx],eax
  407304:	inc    ecx
  407305:	iret   
  407306:	xor    DWORD PTR [ebx+esi*4+0x462e2e4f],esp
  40730d:	xor    ecx,DWORD PTR [esi]
  40730f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407310:	sub    DWORD PTR [ecx+0x1e],ecx
  407313:	sub    dh,BYTE PTR cs:[ecx+edx*4]
  407317:	int    0x19
  407319:	dec    ecx
  40731a:	loop   0x4072df
  40731c:	mov    ebx,DWORD PTR [ebp+0x12]
  40731f:	or     BYTE PTR ds:0xb50c751b,dh
  407325:	scas   al,BYTE PTR es:[edi]
  407326:	add    ch,bh
  407328:	jno    0x407397
  40732a:	push   DWORD PTR [ecx+ebp*8+0x49]
  40732e:	jne    0x40730d
  407330:	popf   
  407331:	lods   eax,DWORD PTR ds:[esi]
  407332:	xor    al,0x64
  407334:	cli    
  407335:	ret    
  407336:	add    eax,0x5b4392
  40733b:	jmp    0x73352200
  407340:	ror    BYTE PTR [ecx+0x75],1
  407343:	mov    ch,0x9d
  407345:	lods   eax,DWORD PTR ds:[esi]
  407346:	or     BYTE PTR [esi+0x41e84757],dh
  40734c:	jl     0x407396
  40734e:	push   DWORD PTR [edx-0x7f]
  407351:	test   al,0x5b
  407353:	mov    al,0x78
  407355:	push   edi
  407356:	add    BYTE PTR [ecx+ecx*8],bh
  407359:	aaa    
  40735a:	and    DWORD PTR [ebp+0x0],0x0
	...
  407385:	add    dl,ch
  407387:	scas   eax,DWORD PTR es:[edi]
  407388:	push   ebx
  407389:	ror    al,cl
  40738b:	mov    bl,0x0
  40738d:	leave  
  40738e:	cmp    eax,0x7c0ae85b
  407393:	dec    eax
  407394:	jmp    DWORD PTR [eax+0x7]
  407397:	inc    edi
  407398:	push   0xff485de9
  40739d:	push   ecx
  40739e:	and    al,0x29
  4073a0:	call   DWORD PTR [esi-0x35]
  4073a3:	sahf   
  4073a4:	mov    ah,0xc1
  4073a6:	cmp    eax,0x95e9007b
  4073ab:	xchg   edx,eax
  4073ac:	fidivr WORD PTR [esi]
  4073ae:	popf   
  4073af:	rol    BYTE PTR [ebp+esi*2-0x31],cl
  4073b3:	(bad)
  4073b6:	push   ds
  4073b7:	dec    eax
  4073b8:	(bad)  
  4073b9:	jmp    0x54337bce
  4073be:	cmc    
  4073bf:	popf   
  4073c0:	rcl    ch,0x3d
  4073c3:	pop    ebx
  4073c4:	add    BYTE PTR [esi],ah
  4073c6:	xchg   DWORD PTR [edi],ebp
  4073c8:	inc    DWORD PTR [eax]
  4073ca:	and    BYTE PTR [eax+eax*1-0x39],bl
  4073ce:	(bad)  
  4073d0:	(bad)  
  4073d1:	pop    ds
  4073d2:	out    0x5b,eax
  4073d4:	push   DWORD PTR [ebp-0x1d]
  4073d7:	in     al,dx
  4073d8:	inc    esp
  4073d9:	shl    al,1
  4073db:	bound  esi,QWORD PTR [edi+ecx*4+0x458d0b1a]
  4073e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e3:	mov    ebp,DWORD PTR [eax+0x0]
  4073e6:	out    0x5b,eax
  4073e8:	sub    BYTE PTR [edx+0x0],0x0
	...
  407414:	xlat   BYTE PTR ds:[ebx]
  407415:	cld    
  407416:	je     0x407420
  407418:	out    dx,eax
  407419:	test   dl,cl
  40741b:	add    BYTE PTR [edi-0x668b3fa8],ah
  407421:	loopne 0x40749f
  407423:	rcl    BYTE PTR [edi-0x2e16fa9e],1
  407429:	pop    ebx
  40742a:	add    BYTE PTR [eax],al
  40742c:	call   0xa14024c3
  407431:	pop    ebx
  407432:	add    BYTE PTR [ebp-0xaf50a6],cl
  407438:	mov    ah,BYTE PTR [edi+0x5b670068]
  40743e:	or     BYTE PTR [ebp-0x17afe0e6],0x45
  407445:	sbb    DWORD PTR [eax],eax
  407447:	add    BYTE PTR [ebx+ebx*1+0x75],ch
  40744b:	add    eax,0xb6fe
  407450:	fadd   DWORD PTR [si-0x4c]
  407454:	sbb    DWORD PTR [eax+eax*1-0x73],ebx
  407458:	sbb    BYTE PTR [ebx],0xb9
  40745b:	cmp    al,0x27
  40745d:	pop    ebx
  40745e:	add    BYTE PTR [ebx],dh
  407460:	addr16 in eax,dx
  407462:	test   eax,0x3c1adac7
  407467:	add    BYTE PTR [edi],dl
  407469:	pop    ebx
  40746a:	push   DWORD PTR [ebp+0x3e]
  40746d:	test   al,0x92
  40746f:	inc    ebp
  407470:	and    bh,BYTE PTR [esi+0x48]
  407473:	aam    0x9
  407475:	add    eax,DWORD PTR ds:[eax]
	...
  4074a0:	add    BYTE PTR [eax],al
  4074a2:	stc    
  4074a3:	call   DWORD PTR [edx+0x33459ff]
  4074a9:	lea    edi,[ebx+0x74]
  4074ac:	xor    ebp,DWORD PTR [edx+0x3e]
  4074af:	stos   BYTE PTR es:[edi],al
  4074b0:	add    al,0xff
  4074b2:	imul   ebp,eax,0xffffffab
  4074b5:	out    0x7,al
  4074b7:	xor    eax,0xb0fe0b03
  4074bc:	or     al,BYTE PTR [ebx+0x7503e44b]
  4074c2:	cmp    al,0x29
  4074c4:	and    al,0xff
  4074c6:	xor    edx,DWORD PTR [eax]
  4074c8:	mov    eax,ds:0x489cea75
  4074cd:	dec    edi
  4074ce:	push   DWORD PTR [ebx]
  4074d0:	mov    al,ds:0x1aece275
  4074d5:	leave  
  4074d6:	ds xor al,0x84
  4074d9:	les    ebp,FWORD PTR [esi]
  4074db:	and    eax,0x64664558
  4074e0:	add    BYTE PTR cs:[ecx+0x68e89f4f],al
  4074e7:	retf   0xffa1
  4074ea:	inc    ebp
  4074eb:	hlt    
  4074ec:	push   ss
  4074ed:	add    dl,BYTE PTR [ebp+0x67]
  4074f0:	mov    eax,DWORD PTR [ebp-0x5a]
  4074f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f4:	pop    ss
  4074f5:	mov    esp,0xcb4266
  4074fa:	ds add al,0xa0
  4074fd:	jne    0x407489
  4074ff:	popf   
  407500:	pop    ss
  407501:	mov    eax,0xff9bef56
	...
  40752e:	add    BYTE PTR [eax],al
  407530:	cmp    DWORD PTR [ecx],edi
  407532:	ret    
  407533:	jne    0x407571
  407535:	cdq    
  407536:	hlt    
  407537:	(bad)  
  407538:	mov    bl,0x5b
  40753a:	stc    
  40753b:	mov    al,ds:0x171e57ab
  407540:	(bad)  
  407541:	xor    bl,ah
  407543:	sahf   
  407544:	adc    DWORD PTR [esi+0x62],eax
  407547:	mov    esp,0xac41d009
  40754c:	cld    
  40754d:	adc    ebp,ecx
  40754f:	add    edi,ecx
  407551:	iret   
  407552:	cmp    eax,0xee2844ac
  407557:	mov    al,ds:0xaba5cfe9
  40755c:	cmp    al,0x28
  40755e:	fisub  WORD PTR [eax-0x542a3027]
  407564:	aam    0x26
  407566:	into   
  407567:	mov    al,ds:0x412219b5
  40756c:	neg    DWORD PTR [eax]
  40756e:	in     eax,dx
  40756f:	add    edx,DWORD PTR [ebx]
  407571:	rol    ah,cl
  407573:	test   BYTE PTR [edx+0x46],bh
  407576:	bound  eax,QWORD PTR [esi+0x3a]
  407579:	push   edx
  40757a:	test   eax,0xe91e3817
  40757f:	add    edi,DWORD PTR [esi]
  407581:	pop    ebx
  407582:	jmp    0xe987714f
  407587:	add    edi,DWORD PTR [esi]
  407589:	pop    ebx
  40758a:	je     0x4075d2
  40758c:	sub    BYTE PTR [edx+0x464a167e],0xfc
  407593:	or     eax,DWORD PTR [eax]
	...
  4075bd:	add    BYTE PTR [esi-0x4d],ah
  4075c0:	outs   dx,DWORD PTR ds:[esi]
  4075c1:	mov    al,ds:0x9fe3d969
  4075c6:	ds iret 
  4075c8:	imul   BYTE PTR ds:0xfdc463e
  4075ce:	push   ecx
  4075cf:	iret   
  4075d0:	dec    ebp
  4075d1:	stos   DWORD PTR es:[edi],eax
  4075d2:	lock inc esp
  4075d4:	inc    esi
  4075d5:	mov    al,ds:0x9fb445ee
  4075da:	es idiv edi
  4075dd:	adc    al,0xde
  4075df:	inc    esp
  4075e0:	pop    eax
  4075e1:	and    BYTE PTR [ebx],al
  4075e3:	push   esp
  4075e4:	add    BYTE PTR [edx+esi*4-0x46da7cc9],bh
  4075eb:	mov    ebp,0x5ab1acc7
  4075f0:	add    BYTE PTR [edi-0x1801610a],al
  4075f6:	cmp    eax,0x806c04b1
  4075fb:	inc    edi
  4075fc:	push   eax
  4075fd:	cmp    DWORD PTR [ebp+0x15e9005b],0x3de9ff44
  407607:	inc    esp
  407608:	jne    0x4075fb
  40760a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40760b:	popf   
  40760c:	leave  
  40760d:	jmp    0xe602884f
  407612:	cmp    eax,0xbdd58bae
  407617:	pop    ds
  407618:	lods   al,BYTE PTR ds:[esi]
  407619:	push   ss
  40761a:	ins    DWORD PTR es:[edi],dx
  40761b:	sbb    al,0x45
  40761d:	test   DWORD PTR [edx],edi
  40761f:	pop    ebx
  407620:	add    cl,ch
	...
  40764a:	add    BYTE PTR [eax],al
  40764c:	mov    WORD PTR [ecx],fs
  40764e:	push   0xff44ade9
  407653:	xchg   ecx,eax
  407654:	xor    BYTE PTR [edi],ah
  407656:	call   DWORD PTR [esi+0x1c09ec3]
  40765c:	inc    edx
  40765d:	imul   eax,DWORD PTR [eax],0xffffffe9
  407660:	aad    0xb2
  407662:	fdivr  QWORD PTR [esi-0x27]
  407665:	rol    BYTE PTR [ecx+esi*1+0x22],cl
  407669:	pop    ebx
  40766a:	adc    cl,ch
  40766c:	cmp    eax,0xc1455c33
  407671:	inc    esp
  407672:	mov    DWORD PTR [ecx+edi*8-0xcd2832b],esp
  407679:	xchg   BYTE PTR [eax],al
  40767b:	jmp    0x100febd
  407680:	add    al,0xb1
  407682:	mov    DWORD PTR [ebp+0x63],0x27ffff3b
  407689:	in     eax,0x74
  40768b:	ror    BYTE PTR [eax-0x3d002b6e],0x9f
  407692:	pop    DWORD PTR [ebp+0x37]
  407695:	sbb    al,0x45
  407697:	fsubr  DWORD PTR [eax]
  407699:	push   esp
  40769a:	add    BYTE PTR [eax],al
  40769c:	pusha  
  40769d:	xchg   edx,eax
  40769e:	hlt    
  40769f:	dec    DWORD PTR [eax]
  4076a1:	pop    eax
  4076a2:	add    BYTE PTR [ebp+0x68501ba2],cl
  4076a8:	out    0x57,eax
  4076aa:	add    BYTE PTR [eax+0x75ff57bd],al
	...
  4076d8:	add    BYTE PTR [eax],al
  4076da:	out    dx,eax
  4076db:	out    dx,eax
  4076dc:	imul   ecx,eax,0xc00b57e7
  4076e2:	jae    0x407741
  4076e4:	cmp    DWORD PTR [ebp-0x6d],0x57
  4076e8:	jne    0x4076ef
  4076ea:	out    dx,al
  4076eb:	cli    
  4076ec:	(bad)  
  4076ed:	jmp    DWORD PTR [edi-0x174fbae4]
  4076f3:	push   esp
  4076f4:	add    BYTE PTR [eax],al
  4076f6:	or     dl,BYTE PTR [ebx+0x62d850b0]
  4076fc:	mov    esp,0x57a768
  407701:	sbb    BYTE PTR [edx],0x93
  407704:	les    edx,FWORD PTR [eax-0x41]
  407707:	xchg   edx,eax
  407708:	enter  0x9700,0x50
  40770c:	shl    BYTE PTR [ebp+0x62],0xf6
  407710:	xlat   BYTE PTR ds:[ebx]
  407711:	add    BYTE PTR [edi+0x57],ah
  407714:	mov    eax,DWORD PTR [ebp+0x2f]
  407717:	push   ds
  407718:	add    BYTE PTR [eax],al
  40771a:	jmp    0x5f:0x3bb9c47a
  407721:	add    BYTE PTR [esi],bh
  407723:	popa   
  407724:	(bad)  
  407725:	repz xchg esp,eax
  407727:	jl     0x407771
  407729:	les    eax,FWORD PTR [edx]
  40772b:	xor    al,BYTE PTR [ebx]
  40772d:	add    BYTE PTR [ecx],bh
  40772f:	or     BYTE PTR [ebx-0x71],bl
  407732:	jnp    0x4076b8
  407734:	mov    BYTE PTR [ebp+0x6],0x72
  407738:	push   cs
  407739:	add    BYTE PTR [esi],bh
  40773b:	jno    0x407785
  40773d:	hlt    
	...
  407766:	add    BYTE PTR [eax],al
  407768:	sbb    DWORD PTR [edx],esi
  40776a:	add    eax,DWORD PTR [eax]
  40776c:	ret    
  40776d:	out    dx,eax
  40776e:	(bad)  
  40776f:	push   eax
  407770:	xchg   esp,eax
  407771:	xor    al,0x29
  407773:	add    BYTE PTR [ecx],al
  407775:	rcr    BYTE PTR [edi-0x18],0xf7
  407779:	jns    0x40777e
  40777b:	add    BYTE PTR [ebp+0x74],al
  40777e:	pop    ss
  40777f:	push   es
  407780:	mov    ebp,0x6b00b7af
  407785:	das    
  407786:	stos   BYTE PTR es:[edi],al
  407787:	mov    WORD PTR [esi],?
  407789:	xor    al,0x3
  40778b:	dec    DWORD PTR [ebx+0x44]
  40778e:	pushf  
  40778f:	jne    0x40778f
  407791:	adc    DWORD PTR [edi],edx
  407793:	mov    eax,0x414d4256
  407798:	add    DWORD PTR ds:[edi],edx
  40779b:	mov    esp,0xc5b2a6
  4077a0:	ds mov ch,0xc8
  4077a3:	adc    al,0x31
  4077a5:	mov    eax,ds:0x6deedc47
  4077aa:	add    al,0xff
  4077ac:	or     esi,esp
  4077ae:	stos   DWORD PTR es:[edi],eax
  4077af:	sti    
  4077b0:	xchg   cl,dl
  4077b2:	pushf  
  4077b3:	or     edi,DWORD PTR [esi+0x3f]
  4077b6:	add    ebx,ebp
  4077b8:	sbb    bl,cl
  4077ba:	inc    edi
  4077bb:	mov    ah,0x71
  4077bd:	aas    
  4077be:	push   edi
  4077bf:	call   0xffde2a63
  4077c4:	popa   
  4077c5:	pop    ebx
  4077c6:	fcomp  QWORD PTR [edi+0x66]
  4077c9:	push   0x27
  4077cb:	add    al,0x0
	...
  4077f5:	add    BYTE PTR [esi],bh
  4077f7:	stos   DWORD PTR es:[edi],eax
  4077f8:	push   esi
  4077f9:	pop    ss
  4077fa:	mov    al,BYTE PTR [edx-0x2c]
  4077fd:	push   edi
  4077fe:	push   esi
  4077ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407800:	inc    eax
  407801:	popf   
  407802:	cmp    DWORD PTR [esi+0x29],edx
  407805:	pop    ss
  407806:	cmp    al,0x36
  407808:	clc    
  407809:	sub    BYTE PTR [ebx+0x4a17e96b],0x42
  407810:	pushf  
  407811:	repz sbb al,cl
  407814:	in     eax,dx
  407815:	pushf  
  407816:	mov    eax,DWORD PTR [edi]
  407818:	add    DWORD PTR [edi+eax*1+0x42],eax
  40781c:	push   cs
  40781d:	or     esi,edi
  40781f:	(bad)  
  407820:	jmp    0x4077ca
  407822:	push   ecx
  407823:	(bad)  
  407824:	and    BYTE PTR [ecx],cl
  407826:	adc    eax,0x838ed8c7
  40782b:	out    dx,eax
  40782c:	cwde   
  40782d:	pushf  
  40782e:	imul   esp,DWORD PTR [edi-0x1a],0x16
  407832:	xchg   edx,eax
  407833:	xor    al,BYTE PTR [eax]
  407835:	cdq    
  407836:	rol    DWORD PTR [ecx+0x62],1
  407839:	mov    ebx,0xab95c7c9
  40783e:	cwde   
  40783f:	sbb    ecx,ebp
  407841:	add    edi,DWORD PTR [ecx-0x5f545639]
  407847:	and    al,0xb6
  407849:	pushf  
  40784a:	test   eax,0x98ab6dc7
  40784f:	and    al,0xa6
  407851:	pushf  
  407852:	cdq    
  407853:	(bad)  
  407854:	popa   
  407855:	stos   DWORD PTR es:[edi],eax
  407856:	jo     0x40787c
  407858:	xchg   esi,eax
  407859:	pushf  
	...
  407882:	add    BYTE PTR [eax],al
  407884:	mov    ebp,0xa033dbf
  407889:	push   ebx
  40788a:	xchg   BYTE PTR [esi],dl
  40788c:	stos   BYTE PTR es:[edi],al
  40788d:	xor    bl,BYTE PTR [ecx+0x4171b9]
  407893:	bound  edi,QWORD PTR [esi-0x5b]
  407896:	pop    edi
  407897:	mov    al,ds:0xbc006a7f
  40789c:	(bad)  
  40789d:	and    DWORD PTR cs:0x322badb5,0xffffffbe
  4078a5:	mov    edi,0x9129e90c
  4078aa:	add    esp,0x2d
  4078ad:	inc    ecx
  4078ae:	jae    0x407861
  4078b0:	rcl    BYTE PTR [esi-0x39356604],0xc
  4078b7:	inc    ecx
  4078b8:	sahf   
  4078b9:	sbb    DWORD PTR [eax],eax
  4078bb:	jmp    0xd9b89480
  4078c0:	mov    dl,0xc6
  4078c2:	or     al,0x1
  4078c4:	xor    ch,BYTE PTR ds:0x96b40eff
  4078ca:	clc    
  4078cb:	push   es
  4078cc:	push   eax
  4078cd:	aas    
  4078ce:	call   0x9c7160
  4078d3:	loop   0x4078d2
  4078d5:	(bad)  
  4078d6:	sbb    esi,ebp
  4078d8:	dec    ebx
  4078d9:	imul   edi,edi,0x5c
  4078dc:	mov    edx,0x4254ffab
  4078e1:	xor    eax,DWORD PTR [ebx]
  4078e3:	xlat   BYTE PTR ds:[ebx]
  4078e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e5:	inc    eax
  4078e6:	mov    esi,DWORD PTR [ecx+0x0]
	...
  407910:	add    BYTE PTR [eax],al
  407912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407913:	(bad)  
  407914:	cld    
  407915:	shr    DWORD PTR [edi+0x16],1
  407918:	add    cl,ch
  40791a:	aam    0xc6
  40791c:	or     al,0xc1
  40791e:	outs   dx,DWORD PTR ds:[esi]
  40791f:	daa    
  407920:	jmp    FWORD PTR [esi-0x4fa4e34f]
  407926:	or     BYTE PTR [edi+0x0],0x34
  40792a:	shr    DWORD PTR [edi],0x81
  40792d:	lods   eax,DWORD PTR ds:[esi]
  40792e:	xor    al,BYTE PTR [ecx-0x1]
  407931:	mov    ?,WORD PTR [edi-0x3eff8e2a]
  407937:	in     al,0xfe
  407939:	push   eax
  40793a:	dec    edi
  40793b:	push   esi
  40793c:	add    DWORD PTR [eax],eax
  40793e:	push   edi
  40793f:	hlt    
  407940:	pop    ss
  407941:	(bad)  
  407942:	push   edi
  407943:	pop    esp
  407944:	leave  
  407945:	ret    
  407946:	call   0x54:0x7283ebd1
  40794d:	je     0x40799f
  40794f:	fnstcw WORD PTR [eax+edx*1+0x57]
  407953:	push   eax
  407954:	sbb    edi,edi
  407956:	cli    
  407957:	das    
  407958:	(bad)  
  407959:	jne    0x40798a
  40795b:	hlt    
  40795c:	(bad)  
  40795e:	jo     0x407944
  407960:	(bad)  
  407961:	jne    0x40796a
  407963:	in     eax,0x74
  407965:	or     al,0x60
  407967:	push   0x8
  407969:	call   0x3f8686
  40796e:	pop    esi
  40796f:	sbb    DWORD PTR [eax],edx
  407971:	add    dl,cl
  407973:	shr    bl,1
  407975:	add    DWORD PTR [eax],0x0
	...
  4079a0:	ret    0x53
  4079a3:	je     0x4079b8
  4079a5:	fnstcw WORD PTR [esp+ecx*1-0x29]
  4079a9:	dec    edi
  4079aa:	push   ss
  4079ab:	jmp    FWORD PTR [edx+0x4c]
  4079ae:	(bad)  
  4079af:	jne    0x407980
  4079b1:	repz mov dl,0xd6
  4079b4:	lock in al,0xfe
  4079b7:	jne    0x40799c
  4079b9:	in     al,0x74
  4079bb:	or     bh,bh
  4079bd:	dec    ebp
  4079be:	xlat   BYTE PTR ds:[ebx]
  4079bf:	inc    DWORD PTR [eax-0x58f33df2]
  4079c5:	mov    cl,BYTE PTR [ebx-0xfffeb14]
  4079cb:	jmp    FWORD PTR [edx+0x53]
  4079ce:	call   0xff24fa18
  4079d3:	mov    DWORD PTR [edx+0x53],ebx
  4079d6:	cmp    DWORD PTR [ebp+0x3e],0x36
  4079da:	add    esi,DWORD PTR [eax+ebp*8-0x30]
  4079de:	(bad)  
  4079e0:	data16 cmp BYTE PTR [ecx-0x3cb38e01],0x74
  4079e8:	cld    
  4079e9:	mov    dh,0x40
  4079eb:	lock push cs
  4079ed:	mov    cl,0x10
  4079ef:	or     al,0x66
  4079f1:	sub    DWORD PTR [edx-0x3cb3ae01],edi
  4079f7:	je     0x407a05
  4079f9:	mov    bl,0x18
  4079fb:	cld    
  4079fc:	ds xor dh,bl
  4079ff:	jmp    FWORD PTR [esp+edx*2+0x759b]
	...
  407a2e:	xor    bh,BYTE PTR [esi+0x10]
  407a31:	clc    
  407a32:	push   ss
  407a33:	mov    ah,BYTE PTR [ebp-0x3cc5de01]
  407a39:	jne    0x407a6a
  407a3b:	jne    0x407a4d
  407a3d:	adc    BYTE PTR [ecx],dl
  407a3f:	call   0x6cd479da
  407a44:	call   0xf9ff:0x4a5c3675
  407a4b:	push   ebp
  407a4c:	mov    BYTE PTR [ebp-0x12],al
  407a4f:	in     al,0xaa
  407a51:	(bad)  
  407a52:	or     DWORD PTR [esi-0x67],eax
  407a55:	jmp    FWORD PTR [ebx+0x20]
  407a58:	stos   DWORD PTR es:[edi],eax
  407a59:	xchg   bh,dh
  407a5b:	xor    eax,0x30fcc999
  407a60:	add    edx,DWORD PTR [ebp-0x4b]
  407a63:	sbb    BYTE PTR [ebp+0xf0dcec4],al
  407a69:	or     al,0xa6
  407a6b:	loopne 0x407a26
  407a6d:	push   DWORD PTR [ecx-0x42f3c035]
  407a73:	xchg   DWORD PTR [eax],ecx
  407a75:	add    BYTE PTR [edx],ch
  407a77:	jne    0x407a12
  407a79:	jne    0x407ac5
  407a7b:	pop    ebx
  407a7c:	xchg   ecx,eax
  407a7d:	inc    esp
  407a7e:	jo     0x407abe
  407a80:	sahf   
  407a81:	or     eax,0x86dac77e
  407a86:	sti    
  407a87:	dec    edx
  407a88:	cmp    DWORD PTR [ecx-0x6e6eb10d],ebx
  407a8e:	nop
  407a8f:	ds jle 0x407a9f
	...
  407aba:	add    BYTE PTR [eax],al
  407abc:	jle    0x407a85
  407abe:	retf   0xe382
  407ac1:	ds jmp 0xda9ba8ca
  407ac7:	repnz push eax
  407ac9:	enter  0x98f9,0xd3
  407acd:	ds push esi
  407acf:	cmovbe edi,DWORD PTR [esi]
  407ad2:	aam    0xb
  407ad4:	xor    BYTE PTR es:[edi-0x67],al
  407ad8:	xor    eax,edx
  407ada:	mov    ds:0xcd338e93,eax
  407adf:	mov    eax,0xf2e3e21
  407ae4:	dec    edx
  407ae5:	xor    ecx,ebp
  407ae7:	mov    edx,0xc6303e11
  407aec:	cmp    bl,BYTE PTR [ebx-0x44]
  407aef:	mov    WORD PTR [edx],ss
  407af1:	fisub  DWORD PTR [esp+edx*4]
  407af4:	lea    esi,[edx+0x22]
  407af7:	cdq    
  407af8:	imul   edx,DWORD PTR [ebx+0x11],0x29
  407afc:	or     BYTE PTR [esi],bh
  407afe:	test   BYTE PTR [edx+0x176a537b],0x46
  407b05:	pop    ebx
  407b06:	pop    ebp
  407b07:	inc    edx
  407b08:	rol    edi,1
  407b0a:	icebp  
  407b0b:	stos   DWORD PTR es:[edi],eax
  407b0c:	in     eax,0x1f
  407b0e:	(bad)  
  407b0f:	cwde   
  407b10:	xor    eax,0xcad6551b
  407b15:	xchg   edi,eax
  407b16:	mov    ecx,0xf1c7b133
  407b1b:	stos   DWORD PTR es:[edi],eax
  407b1c:	int3   
  407b1d:	sbb    al,0x0
  407b1f:	mov    dh,0x0
	...
  407b49:	add    dh,al
  407b4b:	push   ecx
  407b4c:	shl    BYTE PTR ds:0xa57cdaa0,0x3d
  407b53:	pop    ebx
  407b54:	adc    cl,ch
  407b56:	xor    ch,BYTE PTR [ebx-0x1]
  407b59:	sbb    al,0xa6
  407b5b:	cmp    eax,0x77a59175
  407b60:	loop   0x407ae8
  407b62:	(bad)  
  407b63:	push   ecx
  407b64:	shl    ch,0x3c
  407b67:	call   0xe9e8:0xaaca2c8d
  407b6e:	xchg   esi,eax
  407b6f:	cmp    eax,0x534066ff
  407b74:	call   0xff7e00a2
  407b79:	bound  edi,QWORD PTR [edx-0x5f]
  407b7c:	leave  
  407b7d:	sub    edi,DWORD PTR [ecx]
  407b7f:	cmp    eax,0xdad97254
  407b84:	ret    
  407b85:	jne    0x407b4e
  407b87:	cmp    al,0xff
  407b89:	mov    al,cs:0xb62efe03
  407b8f:	pop    ebx
  407b90:	add    cl,ch
  407b92:	cmp    eax,0x3aed44d0
  407b97:	sbb    esi,DWORD PTR [esp+ebp*8-0x43]
  407b9b:	add    DWORD PTR [eax],0xffffff94
  407b9e:	clc    
  407b9f:	xor    edi,DWORD PTR [eax-0x18]
  407ba2:	cmp    eax,0x4174ff5b
  407ba7:	xor    ebx,ebp
  407ba9:	or     al,dh
  407bab:	cmp    al,0xb
  407bad:	sub    DWORD PTR [eax],eax
	...
  407bd7:	add    BYTE PTR [eax+0x4c],cl
  407bda:	push   0x9a79cc
  407bdf:	fisubr WORD PTR [edi]
  407be1:	dec    edi
  407be2:	call   0xff7d05d9
  407be7:	ret    0xb347
  407bea:	jmp    0x72ff:0x966800
  407bf1:	push   ebx
  407bf2:	call   0xff254703
  407bf7:	mov    DWORD PTR [edx],esp
  407bf9:	lahf   
  407bfa:	(bad)  
  407bfb:	(bad)  
  407bfc:	fsubr  DWORD PTR [edi+0x3e]
  407bff:	add    DWORD PTR [edi-0x2a7a72a8],edx
  407c05:	in     eax,0xfe
  407c07:	push   DWORD PTR [edi]
  407c09:	out    dx,eax
  407c0a:	sbb    eax,0xffffffb8
  407c0d:	in     al,0x8c
  407c0f:	test   DWORD PTR [ebp+0x47fffee5],edx
  407c15:	in     al,0xb4
  407c17:	mov    eax,0xe8fee3e9
  407c1c:	mov    cl,0x18
  407c1e:	add    BYTE PTR [eax],al
  407c20:	into   
  407c21:	fnstcw WORD PTR [ebx+0x3fe3e8fe]
  407c27:	bt     DWORD PTR [ecx+0x0],eax
  407c2b:	add    BYTE PTR [edi],ah
  407c2d:	rcl    DWORD PTR [edx+eax*8-0x8011b97],cl
  407c34:	adc    eax,0x27ffff48
  407c39:	push   ebp
  407c3a:	test   BYTE PTR [ebx+0x0],al
	...
  407c64:	add    BYTE PTR [eax],al
  407c66:	daa    
  407c67:	pop    eax
  407c68:	add    BYTE PTR [ebp+0x684f33d5],cl
  407c6e:	aaa    
  407c6f:	xchg   esp,eax
  407c70:	inc    ecx
  407c71:	add    BYTE PTR [edi],bh
  407c73:	aam    0xc2
  407c75:	add    bh,ah
  407c77:	push   eax
  407c78:	shl    BYTE PTR [ebp-0x1e],0xee
  407c7c:	retf   
  407c7d:	add    bh,dl
  407c7f:	push   edi
  407c80:	lea    edx,[ebp-0x11adb]
  407c86:	dec    edx
  407c87:	call   0x414e:0xf96f502c
  407c8e:	xor    ch,BYTE PTR ds:[ebx+0x3317d72]
  407c95:	or     edi,DWORD PTR [esi+0x7e]
  407c98:	add    ecx,ebp
  407c9a:	fnstenv [ecx]
  407c9c:	add    eax,DWORD PTR [eax]
  407c9e:	mov    eax,ds:0x57e8087e
  407ca3:	adc    DWORD PTR [esi+0xff245ff],edx
  407ca9:	movhps xmm2,QWORD PTR [ebx-0x1ac1beb5]
  407cb0:	(bad)  
  407cb2:	fs mov bx,0x71ff
  407cb7:	call   0xbd7ee6c4
  407cbc:	adc    BYTE PTR [esi+edx*2],cl
  407cbf:	pop    eax
  407cc0:	mov    ebx,0x709e59ff
  407cc5:	ret    0xb450
  407cc8:	xchg   esi,eax
  407cc9:	lea    eax,[eax]
	...
  407cf3:	add    ah,ch
  407cf5:	dec    ebp
  407cf6:	xor    dl,BYTE PTR [eax+0x56]
  407cf9:	aam    0xb9
  407cfb:	(bad)  
  407cfc:	cmp    ebp,esi
  407cfe:	xchg   ebp,eax
  407cff:	jne    0x407d57
  407d01:	mov    eax,ds:0xf0291410
  407d06:	repnz dec edi
  407d08:	and    eax,edi
  407d0a:	or     ch,al
  407d0c:	push   cs
  407d0d:	mov    edx,DWORD PTR [esi-0x5156d901]
  407d13:	dec    DWORD PTR [ecx]
  407d15:	dec    esi
  407d16:	and    ecx,DWORD PTR [ebp-0x7a73df84]
  407d1c:	mov    dl,0x6a
  407d1e:	xchg   esi,eax
  407d1f:	(bad)  
  407d20:	mov    ebp,0x72fff2df
  407d25:	inc    esi
  407d26:	stos   BYTE PTR es:[edi],al
  407d27:	adc    ah,cl
  407d29:	mov    bh,0xf3
  407d2b:	(bad)  
  407d2c:	xchg   ebx,eax
  407d2d:	jo     0x407cc4
  407d2f:	call   ecx
  407d31:	pop    ebx
  407d32:	ror    DWORD PTR [ebp+0x8e95bfd],1
  407d38:	(bad)  
  407d39:	scas   eax,DWORD PTR es:[edi]
  407d3a:	adc    al,0x2c
  407d3c:	fbld   TBYTE PTR [ebx-0x4f4efbd8]
  407d42:	cmc    
  407d43:	stos   DWORD PTR es:[edi],eax
  407d44:	dec    edi
  407d45:	push   ss
  407d46:	mov    esi,0x7cf0a195
  407d4b:	xchg   esi,eax
  407d4c:	cdq    
  407d4d:	cmp    bl,BYTE PTR [ecx]
  407d4f:	lods   al,BYTE PTR ds:[esi]
  407d50:	not    DWORD PTR ds:0xddee95a6
  407d56:	sbb    edi,esp
	...
  407d80:	add    BYTE PTR [eax],al
  407d82:	sub    DWORD PTR [esi+0x4ef394e5],0x62eb9539
  407d8c:	xchg   BYTE PTR [edi],ch
  407d8e:	inc    esi
  407d8f:	inc    esi
  407d90:	in     eax,dx
  407d91:	xchg   esp,eax
  407d92:	jmp    0x407de2
  407d94:	sbb    DWORD PTR [ebp+0x308162d3],edx
  407d9a:	push   ebx
  407d9b:	cmp    ah,BYTE PTR [esi-0x54]
  407d9e:	cld    
  407d9f:	adc    DWORD PTR [esi-0x6b],ebx
  407da2:	mov    bl,0xe0
  407da4:	sub    dl,BYTE PTR [esi-0x6b46c5c7]
  407daa:	jmp    0x407da2
  407dac:	inc    esi
  407dad:	xchg   ebp,eax
  407dae:	sub    DWORD PTR [ebx-0x71],eax
  407db1:	ret    0x5b3e
  407db4:	ins    BYTE PTR es:[edi],dx
  407db5:	les    ecx,FWORD PTR [ecx-0x20]
  407db8:	aaa    
  407db9:	xchg   esi,eax
  407dba:	adc    DWORD PTR [edx],edi
  407dbc:	es dec edi
  407dbe:	retf   0x1e38
  407dc1:	xchg   ebp,eax
  407dc2:	push   ss
  407dc3:	cld    
  407dc4:	sub    al,BYTE PTR [esi+edi*1]
  407dc7:	cmp    dl,BYTE PTR [esp+ebx*2-0x10]
  407dcb:	cmp    DWORD PTR [esi],eax
  407dcd:	lods   al,BYTE PTR ds:[esi]
  407dce:	dec    esp
  407dcf:	adc    bh,dh
  407dd1:	xchg   esp,eax
  407dd2:	neg    DWORD PTR [eax+eax*1]
  407dd5:	fnstsw WORD PTR ds:0x27fd8b90
  407ddb:	pop    ebx
  407ddc:	call   FWORD PTR [esi+ecx*8+0x38]
  407de0:	jne    0x407ddb
  407de2:	stos   BYTE PTR es:[edi],al
  407de3:	scas   eax,DWORD PTR es:[edi]
  407de4:	or     al,0xd6
	...
  407e0e:	add    BYTE PTR [eax],al
  407e10:	dec    eax
  407e11:	arpl   ax,bp
  407e13:	push   cs
  407e14:	enter  0xff39,0xb0
  407e18:	jg     0x407e64
  407e1a:	add    BYTE PTR [edi+esi*4],dl
  407e1d:	inc    esi
  407e1e:	(bad)  
  407e1f:	cmp    al,0x46
  407e21:	inc    ebx
  407e22:	inc    ecx
  407e23:	xchg   edx,eax
  407e24:	stos   BYTE PTR es:[edi],al
  407e25:	cmp    DWORD PTR [ebx],ecx
  407e27:	test   eax,0x14ff5939
  407e2c:	mov    ch,BYTE PTR [ecx+0x39b7a6e8]
  407e32:	(bad)  
  407e33:	cmp    ebx,ecx
  407e35:	scas   eax,DWORD PTR es:[edi]
  407e36:	sbb    BYTE PTR [esi+0x7e504f38],al
  407e3c:	xor    BYTE PTR [ebx-0x18],ah
  407e3f:	aaa    
  407e40:	mov    dl,0x39
  407e42:	inc    DWORD PTR [ecx+0x66ff1092]
  407e48:	je     0x407e66
  407e4a:	adc    al,0xe9
  407e4c:	adc    dh,ah
  407e4e:	jmp    0x407ea6
  407e50:	dec    eax
  407e51:	dec    edi
  407e52:	call   esp
  407e54:	sub    eax,0x57f5753a
  407e59:	push   ebp
  407e5a:	push   DWORD PTR [ebp+esi*1-0x4dc946bd]
  407e61:	cmp    bh,bh
  407e63:	mov    ah,0x21
  407e65:	cmp    dh,BYTE PTR [ebp-0x7]
  407e68:	mov    dl,0xae
  407e6a:	or     al,0x93
  407e6c:	push   ds
  407e6d:	cmp    dh,BYTE PTR [ebp-0x1f]
  407e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e71:	add    edi,edi
  407e73:	push   cs
	...
  407e9c:	add    BYTE PTR [eax],al
  407e9e:	retf   0x7538
  407ea1:	add    BYTE PTR [ebx],cl
  407ea3:	shl    BYTE PTR [eax+edx*1-0x20],1
  407ea7:	data16 or al,0x6a
  407eaa:	repz iret 
  407eac:	je     0x407eb6
  407eae:	aas    
  407eaf:	stos   DWORD PTR es:[edi],eax
  407eb0:	(bad)  
  407eb1:	jmp    eax
  407eb3:	test   cl,0x10
  407eb6:	xlat   BYTE PTR ds:[ebx]
  407eb7:	jae    0x407e44
  407eb9:	in     al,dx
  407eba:	and    al,0x23
  407ebc:	lock push ebx
  407ebe:	imul   esi,DWORD PTR [ebx+ebp*1-0x25],0xff0ca22c
  407ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ec7:	fld    QWORD PTR [eax+edi*8-0x30]
  407ecb:	push   edx
  407ecc:	or     BYTE PTR [edi+0x45c6cb5a],cl
  407ed2:	stos   DWORD PTR es:[edi],eax
  407ed3:	pop    edi
  407ed4:	add    BYTE PTR [eax],al
  407ed6:	xchg   edi,eax
  407ed7:	loope  0x407f15
  407ed9:	lahf   
  407eda:	sbb    al,0x9e
  407edc:	add    BYTE PTR [eax],al
  407ede:	dec    ebx
  407edf:	imul   eax,DWORD PTR [ebx+0x745c6f7d],0x56
  407ee6:	shl    BYTE PTR [ecx+0x5e3d50f0],cl
  407eec:	push   0x0
  407eee:	cmp    eax,0x477d835f
  407ef3:	pop    esp
  407ef4:	je     0x407efb
  407ef6:	loopne 0x407f49
  407ef8:	adc    bl,ch
  407efa:	and    eax,0x276a0056
  407eff:	fild   DWORD PTR [eax+edi*8+0x0]
	...
  407f2b:	add    bh,al
  407f2d:	int3   
  407f2e:	adc    al,0x9f
  407f30:	in     al,dx
  407f31:	sahf   
  407f32:	add    BYTE PTR [ebx],cl
  407f34:	addr16 push ebx
  407f36:	das    
  407f37:	and    edx,0xffffffcf
  407f3a:	push   DWORD PTR [ebx-0x12]
  407f3d:	mov    eax,0x9a8c0c45
  407f42:	lock cmp edi,DWORD PTR [esi]
  407f45:	cmp    bl,BYTE PTR [edx]
  407f47:	pop    ss
  407f48:	jge    0x407fb0
  407f4a:	jg     0x407fc1
  407f4c:	repnz lods al,BYTE PTR ds:[esi]
  407f4e:	adc    DWORD PTR [eax],ecx
  407f50:	mov    ch,0x6
  407f52:	xchg   ebx,eax
  407f53:	jecxz  0x407f91
  407f55:	xor    eax,0x167b8b67
  407f5a:	xchg   edx,eax
  407f5b:	jne    0x407f2b
  407f5d:	mov    al,0x3
  407f5f:	dec    DWORD PTR [ebx+0xe]
  407f62:	fwait
  407f63:	out    0x7e,al
  407f65:	inc    ecx
  407f66:	add    ecx,DWORD PTR [ebx+0x5b32887d]
  407f6c:	ja     0x407f71
  407f6e:	(bad)  
  407f6f:	dec    DWORD PTR [edx]
  407f71:	lods   eax,DWORD PTR ds:[esi]
  407f72:	lahf   
  407f73:	add    DWORD PTR [edx-0x16a9ca13],0xffffff99
  407f7a:	into   
  407f7b:	dec    edi
  407f7c:	inc    DWORD PTR [ecx-0x65]
  407f7f:	ins    BYTE PTR es:[edi],dx
  407f80:	jg     0x407fc3
  407f82:	add    ecx,DWORD PTR [ebx-0x3b7f76a]
  407f88:	ds inc edx
  407f8a:	add    eax,DWORD PTR [eax]
  407f8c:	xor    eax,0x3e1702
	...
  407fb9:	add    dh,dl
  407fbb:	pop    ds
  407fbc:	xor    eax,DWORD PTR [ecx+0x3e]
  407fbf:	push   ebp
  407fc0:	pushf  
  407fc1:	hlt    
  407fc2:	jle    0x408005
  407fc4:	add    ecx,DWORD PTR [ebx]
  407fc6:	jle    0x407fdd
  407fc8:	loop   0x407f54
  407fca:	dec    esi
  407fcb:	or     DWORD PTR [edx+0x50],ecx
  407fce:	jg     0x408014
  407fd0:	ss call 0x4404f3
  407fd6:	xor    eax,0xb51e1784
  407fdb:	pushf  
  407fdc:	add    BYTE PTR [ebp+0x1a],0xd5
  407fe0:	call   0x950:0x344feec
  407fe7:	pop    esp
  407fe8:	xchg   BYTE PTR ds:[ebx+0x4417e937],al
  407fef:	repz out 0x3,eax
  407ff2:	ds pop ebx
  407ff4:	scas   al,BYTE PTR es:[edi]
  407ff5:	xor    DWORD PTR [ebp+0x3e4b2a24],eax
  407ffb:	pop    ebx
  407ffc:	jmp    0x92d5f904
  408001:	mov    esp,0x9f6290fd
  408006:	mov    ebp,0x385d91f
  40800b:	xchg   edx,eax
  40800c:	xor    al,BYTE PTR [ebx+0x3e]
  40800f:	pop    ebx
  408010:	pop    ebp
  408011:	idiv   BYTE PTR [eax+edi*2+0x5aff3d2e]
  408018:	jmp    0xfc1ab734
  40801d:	and    al,0x0
	...
  408047:	add    BYTE PTR ds:0xb03e99c,al
  40804d:	pop    esi
  40804e:	jno    0x408053
  408050:	ds pop ebx
  408052:	jmp    0x2428fe11
  408057:	mov    es,WORD PTR [eax-0x13616a5]
  40805d:	pop    ebx
  40805e:	jmp    0xe9997f2c
  408063:	leave  
  408064:	(bad)  
  408065:	pop    ecx
  408066:	jmp    0xe99f7f34
  40806b:	leave  
  40806c:	(bad)  
  40806d:	pop    edi
  40806e:	in     al,0x7e
  408070:	add    ebp,DWORD PTR [edi]
  408072:	mov    ecx,0xe9c13e1d
  408077:	sbb    eax,0x1de9c13e
  40807c:	ds shr ecx,0x1b
  408080:	pop    esi
  408081:	pop    ecx
  408082:	jmp    0xd3bc148a
  408087:	add    eax,0x33009fcb
  40808c:	dec    edx
  40808d:	ss adc eax,0x9c4a92
  408093:	repnz std 
  408095:	scas   eax,DWORD PTR es:[edi]
  408096:	add    dh,BYTE PTR [eax]
  408098:	add    ebx,DWORD PTR [esi]
  40809a:	inc    ebp
  40809b:	sbb    DWORD PTR [edx],edi
  40809d:	pop    ebx
  40809e:	add    cl,ch
  4080a0:	push   0xce99f0a0
  4080a5:	scas   eax,DWORD PTR es:[edi]
  4080a6:	hlt    
  4080a7:	xchg   ebx,eax
  4080a8:	cmp    eax,0x961536
	...
  4080d5:	add    BYTE PTR [edx],dl
  4080d7:	pushf  
  4080d8:	add    dl,ah
  4080da:	std    
  4080db:	scas   eax,DWORD PTR es:[edi]
  4080dc:	pop    es
  4080dd:	scas   al,BYTE PTR es:[edi]
  4080de:	js     0x40810b
  4080e0:	add    cl,ch
  4080e2:	cmp    eax,0xd65cff5b
  4080e7:	xor    eax,0x9c6b4a15
  4080ec:	add    BYTE PTR [edx-0x8],dh
  4080ef:	sub    cl,cl
  4080f1:	stos   BYTE PTR es:[edi],al
  4080f2:	push   eax
  4080f3:	loop   0x4080e0
  4080f5:	push   0x79
  4080f7:	loop   0x408085
  4080f9:	and    al,0xa
  4080fb:	mov    ebp,DWORD PTR [eax-0x69]
  4080fe:	(bad)  
  4080ff:	fwait
  408100:	add    BYTE PTR [ecx-0x6900c6b8],dl
  408106:	sub    eax,0x3415c062
  40810b:	fidivr DWORD PTR [ecx+esi*2+0x69]
  40810f:	lods   al,BYTE PTR ds:[esi]
  408110:	imul   ebp,DWORD PTR [eax+eax*1+0x2b],0x50
  408115:	adc    DWORD PTR [eax-0x3f16ffe6],0x3ec7781a
  40811f:	in     eax,dx
  408120:	inc    esp
  408121:	pop    esi
  408122:	ins    DWORD PTR es:[edi],dx
  408123:	fs mov dh,0xac
  408126:	iret   
  408127:	mov    ecx,DWORD PTR [edi]
  408129:	xchg   edi,eax
  40812a:	xor    BYTE PTR [esi],0x50
  40812d:	add    BYTE PTR [eax],ch
  40812f:	xchg   ebx,eax
  408130:	inc    ebp
  408131:	cld    
  408132:	mov    bh,0x5b
  408134:	mov    dh,0x45
  408136:	dec    esp
  408137:	push   0xb60f
	...
  408164:	loop   0x40814c
  408166:	dec    edi
  408167:	punpcklwd mm3,DWORD PTR [ebp-0x6d17af07]
  40816e:	inc    ebp
  40816f:	clc    
  408170:	mov    bh,0x5b
  408172:	mov    bh,0x45
  408174:	push   ecx
  408175:	push   0xcc92b70f
  40817a:	dec    edi
  40817b:	call   DWORD PTR [edx-0x38]
  40817e:	addr16 repz cwde 
  408181:	cdq    
  408182:	add    BYTE PTR [ebp-0x17af4b5e],cl
  408188:	mov    ecx,0x2400001f
  40818d:	and    esi,DWORD PTR [ecx*4-0x17b0249e]
  408194:	dec    ecx
  408195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408196:	add    BYTE PTR [eax],al
  408198:	inc    edi
  408199:	fiadd  DWORD PTR [esp+ecx*4+0x37]
  40819d:	push   edi
  40819e:	out    dx,al
  40819f:	dec    edi
  4081a0:	pop    di
  4081a2:	call   0xff24f994
  4081a7:	call   0x3f74df
  4081ac:	scas   al,BYTE PTR es:[edi]
  4081ad:	sbb    BYTE PTR [ebp-0x75],dl
  4081b0:	mov    ebx,0xb82cc3de
  4081b5:	in     al,0xfe
  4081b7:	push   ebx
  4081b8:	inc    eax
  4081b9:	push   ecx
  4081ba:	add    BYTE PTR [edx+0x67],ch
  4081bd:	in     eax,0x74
  4081bf:	or     BYTE PTR [edi-0x27002f28],bh
  4081c5:	mov    ch,0x45
  4081c7:	cld    
	...
  4081f0:	add    BYTE PTR [eax],al
  4081f2:	outs   dx,DWORD PTR ds:[esi]
  4081f3:	pop    edi
  4081f4:	add    bh,ch
  4081f6:	(bad)  
  4081f8:	je     0x408202
  4081fa:	ds call 0x9c1c:0xa529d0a0
  408202:	ds inc edx
  408204:	add    ecx,DWORD PTR [ebp-0x71de3d]
  40820a:	adc    edx,edx
  40820c:	call   0xbbc7:0x8f84f258
  408213:	loope  0x4081a2
  408215:	(bad)  
  408216:	stc    
  408217:	mov    ch,0x4
  408219:	add    BYTE PTR [esi],bh
  40821b:	mov    edi,0x64e96089
  408220:	(bad)  
  408221:	push   eax
  408222:	(bad)  
  408223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408224:	dec    edi
  408225:	add    BYTE PTR [esi],bh
  408227:	or     DWORD PTR [ebx+ebp*1+0x7451beec],edi
  40822e:	leave  
  40822f:	inc    esp
  408230:	mov    gs,ebx
  408232:	sub    eax,0x32ffcec2
  408237:	aas    
  408238:	dec    ecx
  408239:	add    DWORD PTR [esi],edi
  40823b:	inc    edx
  40823c:	add    ecx,DWORD PTR [ebx]
  40823e:	mov    WORD PTR [ebp+0x4239c603],cs
  408244:	inc    esi
  408245:	inc    ecx
  408246:	mov    edi,0x3e00831a
  40824b:	inc    edx
  40824c:	adc    ebp,esp
  40824e:	xor    eax,0x16161702
  408253:	fiadd  WORD PTR [edx]
	...
  40827d:	add    BYTE PTR [eax],al
  40827f:	add    BYTE PTR [esi],bh
  408281:	(bad)  
  408282:	mov    BYTE PTR [eax+0x71],ah
  408285:	int3   
  408286:	lea    edx,[eax+0x69]
  408289:	dec    esi
  40828a:	cld    
  40828b:	out    0xa2,eax
  40828d:	ror    DWORD PTR [ebp+0x194565ff],1
  408293:	add    ah,ah
  408295:	inc    ecx
  408296:	mov    ?,WORD PTR [ebp+0x36]
  408299:	ficomp DWORD PTR [eax+edx*8+0x41]
  40829d:	pop    edx
  40829e:	data16 fwait
  4082a0:	or     esi,DWORD PTR [ecx]
  4082a2:	pop    esi
  4082a3:	mov    cs,WORD PTR [esi+0x21fbdc32]
  4082a9:	(bad)  
  4082aa:	cmp    DWORD PTR [esi+0x7e9c421],ecx
  4082b0:	ds pop ebx
  4082b2:	push   ecx
  4082b3:	(bad)
  4082b6:	ss jl  0x40827c
  4082b9:	(bad)  
  4082ba:	mov    es,WORD PTR cs:[ecx]
  4082bd:	les    esp,FWORD PTR [esi]
  4082bf:	add    bh,BYTE PTR [esi]
  4082c1:	pop    ebx
  4082c2:	push   ds
  4082c3:	pop    eax
  4082c4:	xchg   edx,eax
  4082c5:	xor    dl,BYTE PTR [esi]
  4082c7:	mov    ss,WORD PTR [esi+0x5d]
  4082ca:	stc    
  4082cb:	add    edi,DWORD PTR [esi]
  4082cd:	ret    
  4082ce:	jmp    0x119bc0da
  4082d3:	call   0x3429de68
  4082d8:	leave  
  4082d9:	call   0x3302116a
  4082de:	out    0x17,al
  4082e0:	inc    esi
  4082e1:	inc    ebx
  4082e2:	inc    esi
  4082e3:	mov    ah,0x0
	...
  40830d:	add    BYTE PTR [ecx+0x3d8d4132],dh
  408313:	pop    ebx
  408314:	jmp    0xc6d06ea5
  408319:	lea    ebx,[ecx-0x6e0c173d]
  40831f:	xor    al,BYTE PTR [ecx+0x4]
  408322:	inc    edx
  408323:	pop    ebx
  408324:	jmp    0xe93205c4
  408329:	add    ecx,DWORD PTR [esi]
  40832b:	xor    dl,BYTE PTR [eax+esi*1+0x71]
  40832f:	xor    dl,BYTE PTR [esi-0x7e9d0c73]
  408335:	into   
  408336:	jno    0x40836a
  408338:	xchg   BYTE PTR [ebx+eax*4-0x117281d0],bl
  40833f:	xor    DWORD PTR [eax],eax
  408341:	cld    
  408342:	inc    ebp
  408343:	cmp    bh,dl
  408345:	sahf   
  408346:	mov    bl,0x32
  408348:	call   0xff724f05
  40834d:	ins    BYTE PTR es:[edi],dx
  40834e:	mov    ecx,0xbb56ff92
  408353:	mov    ch,BYTE PTR [eax+0x3f]
  408356:	arpl   WORD PTR [eax+eax*1-0xc532af],bx
  40835d:	ds xchg ebp,eax
  40835f:	fcom   DWORD PTR [ebx+0x36]
  408362:	mov    ebx,0x466c8331
  408367:	xor    bh,bh
  408369:	es inc edx
  40836b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40836c:	inc    ebp
  40836d:	push   0xffffff81
  40836f:	xchg   ebx,eax
  408370:	call   DWORD PTR [esi]
	...
  40839a:	add    BYTE PTR [eax],al
  40839c:	mov    ebx,0xbecd7246
  4083a1:	xlat   BYTE PTR ds:[ebx]
  4083a2:	push   edi
  4083a3:	push   es
  4083a4:	retf   
  4083a5:	xor    DWORD PTR [esi+edi*8],eax
  4083a8:	push   0xbaf6ff93
  4083ad:	xor    DWORD PTR [ebp-0x1f],esi
  4083b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b1:	jmp    0xde0b6a84
  4083b6:	lods   al,BYTE PTR ds:[esi]
  4083b7:	inc    ecx
  4083b8:	ret    
  4083b9:	xor    edi,edi
  4083bb:	in     eax,dx
  4083bc:	inc    edi
  4083bd:	xor    bh,bh
  4083bf:	push   esp
  4083c0:	mov    ds:0xcab6a639,al
  4083c5:	xor    edi,edi
  4083c7:	je     0x40842e
  4083c9:	xor    bh,bh
  4083cb:	mov    dh,0xba
  4083cd:	out    0x53,eax
  4083cf:	scas   al,BYTE PTR es:[edi]
  4083d0:	mov    dl,0x31
  4083d2:	call   FWORD PTR [edx+edi*2]
  4083d5:	cmp    DWORD PTR [edi-0x14ce3d52],esp
  4083db:	in     eax,0x47
  4083dd:	pop    ebx
  4083de:	push   0xffffffe9
  4083e0:	mov    dl,0xa7
  4083e2:	or     BYTE PTR [eax],al
  4083e4:	scas   eax,DWORD PTR es:[edi]
  4083e5:	mov    ds:0xded0ffcf,eax
  4083ea:	mov    ah,0x54
  4083ec:	rcr    dh,1
  4083ee:	(bad)  
  4083ef:	call   0x3f6f93
  4083f4:	mov    al,ds:0x90ff5c89
  4083f9:	(bad)  
  4083fb:	mov    ebp,0x2bfedf65
	...
  408428:	add    BYTE PTR [eax],al
  40842a:	ins    BYTE PTR es:[edi],dx
  40842b:	push   esp
  40842c:	cmp    dl,BYTE PTR [eax-0x1a]
  40842f:	pop    esp
  408430:	call   0x9d1570
  408435:	mov    DWORD PTR [edx+0x50fffe10],ebx
  40843b:	fstp   TBYTE PTR [esp+ebp*1+0xfedf20]
  408442:	retf   
  408443:	ds cmps DWORD PTR es:[si],DWORD PTR es:[di]
  408447:	popf   
  408448:	add    bh,bh
  40844a:	mov    dl,BYTE PTR [eax]
  40844c:	(bad)  
  40844d:	inc    DWORD PTR [eax-0x2c]
  408450:	mov    ebx,0xb5ce7bd
  408455:	ror    BYTE PTR [ebx+0x32],0x8c
  408459:	xchg   ebp,eax
  40845a:	xchg   edi,ebx
  40845c:	(bad)  
  40845d:	push   DWORD PTR [ebp-0x1c]
  408460:	iret   
  408461:	inc    ebx
  408462:	lods   al,BYTE PTR ds:[esi]
  408463:	add    DWORD PTR [ebp+0xc],esi
  408466:	and    bl,dl
  408468:	das    
  408469:	push   DWORD PTR [eax-0x1c]
  40846c:	dec    edi
  40846d:	call   0x4126e9
  408472:	in     eax,dx
  408473:	cmp    cl,BYTE PTR [ebp+eax*4-0x11a79]
  40847a:	daa    
  40847b:	in     al,0x74
  40847d:	or     bh,cl
  40847f:	jno    0x408450
  408481:	call   eax
  408483:	in     al,0x74
  408485:	cld    
  408486:	ds leave 
  408488:	adc    BYTE PTR [eax],cl
  40848a:	push   esi
  40848b:	call   0x41844a
	...
  4084b8:	pop    ecx
  4084b9:	jns    0x4084ea
  4084bb:	leave  
  4084bc:	jl     0x4084f4
  4084be:	add    edx,DWORD PTR [ebp-0x4b]
  4084c1:	(bad)  
  4084c2:	test   ah,al
  4084c4:	push   esi
  4084c5:	test   eax,0xfecbff8b
  4084ca:	xchg   BYTE PTR [eax+0x31],dl
  4084cd:	pop    es
  4084ce:	idiv   esi
  4084d0:	jae    0x408551
  4084d2:	cmp    al,0x41
  4084d4:	ds call 0xbffe:0x423ebe1d
  4084dc:	inc    ecx
  4084dd:	mov    bh,0xa3
  4084df:	add    BYTE PTR [esi],bh
  4084e1:	inc    edx
  4084e2:	ret    0x645
  4084e5:	inc    edx
  4084e6:	add    eax,DWORD PTR [eax]
  4084e8:	add    DWORD PTR ds:[ecx-0xc],0x338f1
  4084f0:	push   esp
  4084f1:	inc    edx
  4084f2:	sbb    eax,0x98b6b300
  4084f7:	neg    ecx
  4084f9:	pop    eax
  4084fa:	xor    al,0x6a
  4084fc:	ds mov edi,0xb76ef441
  408502:	xor    esp,0x508a40c9
  408508:	mov    ecx,0x2bff8c8e
  40850d:	push   cs
  40850e:	fwait
  40850f:	push   esp
  408510:	call   0x7e4b8856
  408515:	test   DWORD PTR [ecx],eax
  408517:	jmp    0x43c6ff
	...
  408544:	add    BYTE PTR [eax],al
  408546:	mov    ebp,0x89f797ae
  40854b:	call   0xc570f953
  408550:	dec    eax
  408551:	in     al,dx
  408552:	jno    0x4085ae
  408554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408555:	mov    bh,BYTE PTR [ecx]
  408557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408558:	in     al,0x8a
  40855a:	add    esi,DWORD PTR [ebx]
  40855c:	adc    BYTE PTR [ecx-0x2a],0x86
  408560:	cmp    BYTE PTR [ebp+0x3e],al
  408563:	fisubr WORD PTR [ebx-0x71]
  408566:	dec    ecx
  408567:	das    
  408568:	jle    0x40859d
  40856a:	push   esi
  40856b:	cdq    
  40856c:	aaa    
  40856d:	add    edi,DWORD PTR [esi]
  40856f:	fs test eax,0x6be0af0f
  408575:	fwait
  408576:	sub    DWORD PTR [edi],ebp
  408578:	pop    esi
  408579:	xor    edi,DWORD PTR [ebx+0x21925cd8]
  40857f:	das    
  408580:	mov    ecx,0x465f938a
  408585:	sar    dl,1
  408587:	mov    ds:0x191603a8,eax
  40858c:	sbb    eax,0x2963018a
  408591:	jg     0xe9d3f17b
  408597:	cs push ds
  408599:	sbb    edi,DWORD PTR [edi]
  40859b:	pop    ebx
  40859c:	push   es
  40859d:	dec    ecx
  40859e:	loope  0x408548
  4085a0:	loope  0x40853d
  4085a2:	sbb    DWORD PTR ds:0xf0bd8a06,0x920c
	...
  4085d4:	leave  
  4085d5:	cs call 0xea01b7eb
  4085db:	mov    dh,BYTE PTR [ebx]
  4085dd:	arpl   cx,dx
  4085df:	rol    BYTE PTR [ebx+0x349dde2e],1
  4085e5:	shr    eax,0x88
  4085e8:	sub    esp,DWORD PTR [ebx-0x3f]
  4085eb:	fmul   QWORD PTR [ebx-0x347639d2]
  4085f1:	inc    ebx
  4085f2:	mov    dh,0x89
  4085f4:	mov    DWORD PTR [esi],ebp
  4085f6:	add    BYTE PTR [edx+ebp*4+0x26],bh
  4085fa:	jmp    FWORD PTR [esi-0x6ef75739]
  408600:	xor    BYTE PTR ds:0xe8b79eff,bl
  408606:	out    dx,eax
  408607:	sahf   
  408608:	mov    bh,0x2e
  40860a:	call   0xff6f1340
  40860f:	xchg   BYTE PTR [ecx],dl
  408611:	xor    ebp,ecx
  408613:	shl    DWORD PTR [esi+0x3176ff2e],1
  408619:	das    
  40861a:	call   0x9c0714
  40861f:	xor    al,bh
  408621:	bound  eax,QWORD PTR [eax]
  408623:	mov    ah,0xaa
  408625:	aas    
  408626:	sub    DWORD PTR ds:0x4eff25de,0x99fc9891
  408630:	(bad)  
  408631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408632:	or     al,0x3e
  408634:	stc    
  408635:	push   ss
  408636:	dec    eax
  408637:	test   al,0x0
	...
  408661:	add    BYTE PTR ds:0x426c5b43,bh
  408667:	pop    ebx
  408668:	or     ebp,DWORD PTR [ecx]
  40866a:	not    esi
  40866c:	push   edx
  40866d:	call   0xad07e1af
  408672:	mov    ch,0x5a
  408674:	add    cl,ch
  408676:	cmp    eax,0xc6fd4516
  40867b:	push   ebp
  40867c:	add    cl,ch
  40867e:	sub    ebx,DWORD PTR [ebx+0x6a]
  408681:	jmp    0xe9aae1a9
  408686:	xor    BYTE PTR [eax-0x27d6c60c],bl
  40868c:	repz (bad) 
  40868e:	mov    dh,0x2d
  408690:	push   eax
  408691:	(bad)  
  408692:	xor    BYTE PTR [ebx],dh
  408694:	call   DWORD PTR [esi+eax*8+0x42]
  408698:	sub    eax,0x59ba00
  40869d:	or     edx,edi
  40869f:	pop    ebp
  4086a0:	add    eax,0x5861e9
  4086a5:	add    bh,bh
  4086a7:	mov    ecx,0xe2674148
  4086ac:	je     0x4086ba
  4086ae:	iret   
  4086af:	arpl   sp,dx
  4086b1:	dec    eax
  4086b3:	imul   ecx,DWORD PTR [ebx-0xb530530],0x4fe2b8f7
  4086bd:	push   edx
  4086be:	scas   eax,DWORD PTR es:[edi]
  4086bf:	push   ebx
  4086c0:	aam    0xff
  4086c2:	enter  0x85b0,0xf0
	...
  4086ee:	add    BYTE PTR [eax],al
  4086f0:	mov    al,0xe3
  4086f2:	(bad)  
  4086f3:	call   0x3f6f5b
  4086f8:	or     eax,0xe63d6859
  4086fd:	cdq    
  4086fe:	add    bh,bh
  408700:	mov    dl,0xc8
  408702:	idiv   bh
  408704:	js     0x4086e9
  408706:	xor    al,0xc5
  408708:	iret   
  408709:	cdq    
  40870a:	add    al,ch
  40870c:	push   ebx
  40870d:	out    0xfe,eax
  40870f:	call   FWORD PTR [esi-0x53]
  408712:	in     al,0xf7
  408714:	sbb    bl,ah
  408716:	imul   eax,DWORD PTR [eax],0x41519acf
  40871c:	xlat   BYTE PTR ds:[ebx]
  40871d:	jecxz  0x4086d3
  40871f:	lock xor bl,ah
  408722:	(bad)  
  408723:	call   DWORD PTR [edx-0x28beb813]
  408729:	shl    BYTE PTR [ebp-0x772b372d],1
  40872f:	test   DWORD PTR [ebx+0xdfffedc],edi
  408735:	push   edi
  408736:	push   0x96664f
  40873b:	(bad)  
  40873c:	ds iret 
  40873e:	xchg   ebx,eax
  40873f:	neg    DWORD PTR [ecx+0x7b35871d]
  408745:	push   0x45
  408747:	add    BYTE PTR [esi-0x7e004c56],dl
  40874d:	mov    ebx,0xfd71e881
  408752:	xchg   BYTE PTR [ebx+0x0],al
	...
  40877c:	add    BYTE PTR [eax],al
  40877e:	mov    bl,0xde
  408780:	mov    ?,edi
  408782:	imul   eax,DWORD PTR [edx+0xf],0x9887bd49
  408789:	neg    DWORD PTR [ecx-0x23]
  40878c:	add    esi,DWORD PTR [esi+edi*8-0x40]
  408790:	dec    ecx
  408791:	call   0xc834e7
  408796:	retf   0x1aec
  408799:	add    BYTE PTR [esi],bh
  40879b:	lods   eax,DWORD PTR ds:[esi]
  40879c:	inc    esi
  40879d:	jmp    FWORD PTR [ebx-0x50c64d6]
  4087a3:	mov    WORD PTR [edi-0x706a1401],es
  4087a9:	call   FWORD PTR [ecx]
  4087ab:	popf   
  4087ac:	adc    DWORD PTR [eax],ecx
  4087ae:	es std 
  4087b0:	mov    bh,0xff
  4087b2:	or     DWORD PTR [ebp+0x51],ebp
  4087b5:	call   0xffc7ecc3
  4087ba:	jae    0x4087f6
  4087bc:	fwait
  4087bd:	cmp    DWORD PTR [ebx],eax
  4087bf:	jne    0x408748
  4087c1:	push   DWORD PTR [ebx-0x1e0070ab]
  4087c7:	inc    esp
  4087c8:	adc    DWORD PTR [eax],ecx
  4087ca:	out    0x18,al
  4087cc:	mov    eax,0x5154d1ff
  4087d1:	in     al,0xd1
  4087d3:	sub    al,0x86
  4087d5:	call   0xffc7da0d
  4087da:	mov    ecx,0xb1f79866
  4087df:	pop    edx
  4087e0:	out    0x9b,al
	...
  40880a:	add    BYTE PTR [eax],al
  40880c:	cmp    al,0xb
  40880e:	fiadd  WORD PTR [esi-0x713f1a5f]
  408814:	cdq    
  408815:	sub    eax,ecx
  408817:	mov    es,WORD PTR [ecx-0x2c7939d5]
  40881d:	sub    dh,BYTE PTR [esi+0x3c2b8186]
  408823:	cld    
  408824:	popa   
  408825:	cmc    
  408826:	scas   al,BYTE PTR es:[edi]
  408827:	xchg   BYTE PTR [ecx+0x2b],dh
  40882a:	pop    esp
  40882b:	xchg   ebx,eax
  40882c:	jno    0x408859
  40882e:	sahf   
  40882f:	fwait
  408830:	sbb    BYTE PTR [ebx],0x96
  408833:	xchg   BYTE PTR [ecx-0x6b],bl
  408836:	xchg   ecx,eax
  408837:	pushf  
  408838:	xchg   edx,eax
  408839:	sub    al,0x86
  40883b:	xchg   BYTE PTR [ecx-0x5b],cl
  40883e:	jge    0x4087db
  408840:	inc    esp
  408841:	out    dx,eax
  408842:	call   0xe15e8f4a
  408847:	add    ecx,DWORD PTR [ebx+0x28254d6]
  40884d:	sub    bl,dl
  40884f:	add    edx,DWORD PTR [esp+ebx*2+0x33461056]
  408856:	pop    ecx
  408857:	mov    bh,0x11
  408859:	sub    esi,DWORD PTR [eax+0x40]
  40885c:	or     dh,BYTE PTR [edi+edx*4+0x365b7f33]
  408863:	adc    BYTE PTR [esi+0x33],al
  408866:	lds    eax,FWORD PTR [ebp+0x10912af1]
  40886c:	mov    ds,WORD PTR [ecx+ebp*8+0x86]
	...
  408897:	add    BYTE PTR [eax],al
  408899:	add    BYTE PTR [ebx+0x53],ch
  40889c:	add    DWORD PTR [esi],ebp
  40889e:	fsubr  DWORD PTR [edx]
  4088a0:	push   cs
  4088a1:	sbb    ebp,DWORD PTR [ebx-0x36fc5775]
  4088a7:	mov    al,0xf1
  4088a9:	fwait
  4088aa:	je     0x4088d5
  4088ac:	add    dh,dh
  4088ae:	ret    
  4088af:	mov    bl,0xbc
  4088b1:	cdq    
  4088b2:	cli    
  4088b3:	pop    edx
  4088b4:	call   FWORD PTR [edx+ebp*4+0x42]
  4088b8:	das    
  4088b9:	fdivr  QWORD PTR [ebx+0x52cd682a]
  4088bf:	pushf  
  4088c0:	add    dh,cl
  4088c2:	inc    ecx
  4088c3:	push   ebx
  4088c4:	call   0xff6b49d4
  4088c9:	push   ecx
  4088ca:	mov    DWORD PTR [ebx-0x4f3d16bf],ecx
  4088d0:	or     cl,al
  4088d2:	popa   
  4088d3:	daa    
  4088d4:	jmp    DWORD PTR [esi-0x61034f3d]
  4088da:	xor    DWORD PTR [ebx-0x18],edx
  4088dd:	mov    bl,0x96
  4088df:	sub    bh,bh
  4088e1:	mov    al,ds:0x1c005f7c
  4088e6:	(bad)  
  4088e7:	ss push 0xbe3a3de9
  4088ed:	jbe    0x408938
  4088ef:	push   edi
  4088f0:	push   esp
  4088f2:	xor    eax,0xc35c5242
  4088f7:	sub    ecx,ecx
  4088f9:	sub    esp,DWORD PTR [edx]
  4088fb:	sub    dl,BYTE PTR [edx+eiz*2+0x0]
	...
  408927:	add    BYTE PTR [esi+0x3ddd7cdd],dh
  40892d:	pop    edx
  40892e:	test   BYTE PTR [ebx],cl
  408930:	cmp    eax,0x313e005b
  408935:	push   edi
  408936:	call   0xff6a30f0
  40893b:	loop   0x40893a
  40893d:	scas   eax,DWORD PTR es:[edi]
  40893e:	adc    BYTE PTR [ecx-0x16be6ca4],dl
  408944:	mov    edx,0xd0010caf
  408949:	or     al,0xff
  40894b:	push   cs
  40894c:	push   ebp
  40894d:	mov    al,ds:0x5dad000c
  408952:	push   0x9ca679
  408957:	push   0x416e2b
  40895c:	mov    al,ds:0x5648c418
  408961:	pop    edi
  408962:	call   0xff1f6e80
  408967:	or     esp,edi
  408969:	pop    ecx
  40896a:	push   ds
  40896b:	push   eax
  40896c:	push   edi
  40896d:	loopne 0x4089e3
  40896f:	or     al,0x6f
  408971:	stos   DWORD PTR es:[edi],eax
  408972:	sar    bh,cl
  408974:	shr    BYTE PTR [ebp+0x50],0xff
  408978:	cmp    ah,BYTE PTR [edi]
  40897a:	out    0x91,eax
  40897c:	mov    al,ds:0xbbe8fede
  408981:	out    dx,eax
  408982:	(bad)  
  408983:	dec    edi
  408985:	dec    ch
  408987:	push   DWORD PTR [eax+0x680043]
	...
  4089b5:	add    BYTE PTR [esi],ch
  4089b7:	outs   dx,BYTE PTR ds:[esi]
  4089b8:	inc    ecx
  4089b9:	add    BYTE PTR [edi],ch
  4089bb:	fist   DWORD PTR [eax+0x41]
  4089be:	push   edi
  4089bf:	inc    ebp
  4089c0:	add    al,BYTE PTR [eax]
  4089c2:	daa    
  4089c3:	fucom  st(7)
  4089c5:	loope  0x40899d
  4089c7:	(bad)  
  4089c9:	or     edx,DWORD PTR [edi+0x58]
  4089cc:	push   ds
  4089cd:	push   eax
  4089ce:	out    0xdf,eax
  4089d0:	je     0x4089de
  4089d2:	jg     0x408a46
  4089d4:	sar    bh,cl
  4089d6:	sub    BYTE PTR [eax+edx*2-0x1],0xca
  4089db:	and    al,0xe7
  4089dd:	pop    ecx
  4089de:	inc    eax
  4089df:	(bad)  
  4089e1:	call   0x3f78a9
  4089e6:	jg     0x40896f
  4089e8:	into   
  4089e9:	jmp    DWORD PTR [eax]
  4089eb:	inc    edx
  4089ec:	add    BYTE PTR [eax-0x62],ch
  4089ef:	ins    DWORD PTR es:[edi],dx
  4089f0:	inc    ecx
  4089f1:	add    BYTE PTR [esi],bh
  4089f3:	ficomp DWORD PTR [ebx+0x51]
  4089f6:	jg     0x408a2a
  4089f8:	test   BYTE PTR ds:0x41eb03,dh
  4089fe:	(bad)  
  4089ff:	mov    dh,BYTE PTR [edx-0x3cc24601]
  408a05:	je     0x408a57
  408a07:	ret    0xff32
  408a0a:	xor    ebp,DWORD PTR [esi]
  408a0c:	imul   esp,DWORD PTR [ecx],0xffffff8c
  408a0f:	or     DWORD PTR [ebx-0x6ef11b0],eax
  408a15:	pop    es
  408a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a17:	push   edx
  408a18:	cmp    edi,0x0
	...
  408a43:	add    BYTE PTR [ecx-0x7e3208f6],cl
  408a49:	jmp    0xf1c8f8b9
  408a4e:	sub    BYTE PTR [edx+0x3e],0x9a
  408a52:	std    
  408a53:	push   eax
  408a54:	push   DWORD PTR [ecx]
  408a56:	jmp    0x4089fe
  408a58:	(bad)  
  408a5a:	add    al,0x68
  408a5c:	cmp    al,0x32
  408a5e:	add    eax,DWORD PTR [eax-0xaabd9a]
  408a64:	dec    ecx
  408a65:	sub    eax,0x42207443
  408a6a:	aam    0xfe
  408a6c:	mov    bl,0x3e
  408a6e:	imul   ebp,ecx,0xf
  408a71:	mov    ecx,0xc18e5083
  408a76:	stc    
  408a77:	pop    es
  408a78:	push   ss
  408a79:	mov    al,BYTE PTR [edx+0x3f9a19ff]
  408a7f:	into   
  408a80:	adc    DWORD PTR [ecx-0x5f07c994],ebx
  408a86:	sub    DWORD PTR [eax+0x67],0xffffffc3
  408a8a:	ret    
  408a8b:	(bad)  
  408a8c:	clc    
  408a8d:	out    0xe,al
  408a8f:	call   0xffc3cd9a
  408a94:	mov    ds,WORD PTR [ebx-0x47]
  408a97:	sub    BYTE PTR [ebx+0x53],0x11
  408a9b:	dec    ebx
  408a9c:	fsub   DWORD PTR [edi]
  408a9e:	push   ss
  408a9f:	ins    BYTE PTR es:[edi],dx
  408aa0:	xor    al,0x19
  408aa2:	push   cs
  408aa3:	or     ecx,0xffffffad
  408aa6:	cmc    
  408aa7:	imul   eax,DWORD PTR [eax],0x0
	...
  408ad2:	sub    al,0x19
  408ad4:	inc    BYTE PTR [edx+0x3e11c87]
  408ada:	or     edx,esp
  408adc:	cld    
  408add:	xchg   BYTE PTR [edx+0x1404532e],al
  408ae3:	pop    ebp
  408ae4:	fdivp  st(0),st
  408ae6:	inc    ecx
  408ae7:	xor    ebx,DWORD PTR ds:0x6027914f
  408aed:	enter  0xb285,0xec
  408af1:	add    al,0x3e
  408af3:	pop    ebx
  408af4:	ror    DWORD PTR [ecx],1
  408af6:	mov    BYTE PTR [edi],ah
  408af8:	mov    dh,0x8c
  408afa:	sti    
  408afb:	and    al,BYTE PTR [ecx+0x8]
  408afe:	aas    
  408aff:	pop    ebx
  408b00:	jmp    0x91637687
  408b05:	test   BYTE PTR [edi+0x7e0ee95a],dl
  408b0b:	scas   al,BYTE PTR es:[edi]
  408b0c:	cmc    
  408b0d:	inc    eax
  408b0e:	inc    edx
  408b0f:	pop    edx
  408b10:	jmp    0x7e965418
  408b15:	clc    
  408b16:	xor    DWORD PTR [edi],esp
  408b18:	cld    
  408b19:	or     esp,DWORD PTR [esi]
  408b1b:	aam    0x6e
  408b1d:	sub    BYTE PTR [ecx],0x33
  408b20:	icebp  
  408b21:	sub    BYTE PTR [ebx+0xbc25123],0x27
  408b28:	push   esi
  408b29:	in     eax,dx
  408b2a:	pop    ecx
  408b2b:	xor    edi,ecx
  408b2d:	push   ebp
  408b2e:	or     DWORD PTR [edi],esp
  408b30:	cdq    
  408b31:	or     BYTE PTR [ebx+0xf15153],0x0
	...
  408b60:	sti    
  408b61:	add    BYTE PTR es:[esi],dh
  408b64:	jecxz  0x408baa
  408b66:	call   0xff671f54
  408b6b:	bnd jge 0x408b1d
  408b6e:	adc    al,0x91
  408b70:	out    0x8b,al
  408b72:	inc    ecx
  408b73:	jmp    0x38ccca65
  408b78:	mov    esp,0xc6065026
  408b7d:	pop    esi
  408b7e:	call   0xff674b31
  408b83:	sbb    DWORD PTR [eax+0x33],0xffffffe1
  408b87:	sbb    BYTE PTR [esi+eiz*1+0x4aa6a90b],bh
  408b8e:	push   0x9b6d44
  408b93:	cmp    DWORD PTR [edx],esp
  408b95:	mov    eax,0x8bbfced1
  408b9a:	(bad)  
  408b9b:	cmp    al,0x32
  408b9d:	xor    esi,DWORD PTR [eax]
  408b9f:	mov    edi,0xd56a26bf
  408ba4:	in     eax,0x18
  408ba6:	shr    DWORD PTR [esi+0x1dc052bf],1
  408bac:	inc    esi
  408bad:	mov    bl,0x65
  408baf:	cmp    BYTE PTR [ebp+0x26],bh
  408bb2:	dec    edi
  408bb3:	sub    DWORD PTR [ebx+ecx*1-0x1],0x7525728e
  408bbb:	icebp  
  408bbc:	aad    0x4b
  408bbe:	(bad)  
  408bbf:	jle    0x408b80
  408bc1:	mov    al,0x0
  408bc3:	add    DWORD PTR [eax],eax
	...
  408bed:	add    BYTE PTR [ebx+ecx*4],ch
  408bf0:	inc    ecx
  408bf1:	jmp    0xa891660b
  408bf6:	cmp    eax,0xa243526
  408bfb:	fwait
  408bfc:	add    BYTE PTR [ecx-0x15],al
  408bff:	adc    eax,0x24f24eff
  408c04:	jne    0x408c06
  408c06:	(bad)  
  408c08:	icebp  
  408c09:	std    
  408c0a:	cmp    ah,bl
  408c0c:	imul   eax,DWORD PTR [eax],0x415020ff
  408c12:	xlat   BYTE PTR ds:[ebx]
  408c13:	xor    DWORD PTR [ebx-0xa669af],eax
  408c19:	xor    eax,0x401722
  408c1e:	aas    
  408c1f:	jo     0x408bf1
  408c21:	(bad)  
  408c22:	cmp    BYTE PTR [eax-0x40],bl
  408c25:	je     0x408c08
  408c27:	rol    BYTE PTR [esp+esi*8-0x48],1
  408c2b:	sub    al,0xf3
  408c2d:	push   DWORD PTR [edx]
  408c2f:	push   edx
  408c30:	call   0xff1b26e6
  408c35:	inc    DWORD PTR [edx]
  408c37:	mov    ds:0xdaea01e8,eax
  408c3c:	(bad)  
  408c3d:	push   0xffffffa7
  408c3f:	xor    DWORD PTR [ebp+0x51],ebp
  408c42:	push   esi
  408c43:	pop    edi
  408c44:	push   0xff1a26a7
  408c49:	(bad)  
  408c4a:	jb     0x408be8
  408c4c:	dec    eax
  408c4d:	inc    ecx
  408c4e:	addr16 mov cl,0x2
  408c51:	rol    BYTE PTR [eax],1
	...
  408c7b:	add    BYTE PTR [eax+0x42ff4fda],bl
  408c81:	push   edi
  408c82:	call   0xff1b4727
  408c87:	push   0x67
  408c89:	xor    DWORD PTR [eax+0x51],edi
  408c8c:	push   ss
  408c8d:	pop    edi
  408c8e:	push   0xff1a26a7
  408c93:	(bad)  
  408c94:	repnz popf 
  408c96:	dec    eax
  408c97:	inc    ecx
  408c98:	daa    
  408c99:	mov    cl,0xe2
  408c9b:	iret   
  408c9c:	cwde   
  408c9d:	fisttp DWORD PTR [edx]
  408c9f:	rol    BYTE PTR [ebx],0x43
  408ca2:	mov    DWORD PTR [ebp+0x73],eax
  408ca5:	(bad)  [esp+esi*8+0x3e]
  408ca9:	(bad)  
  408caa:	test   BYTE PTR [edi],0x16
  408cad:	adc    edi,DWORD PTR [esi-0x1]
  408cb0:	add    DWORD PTR [esi-0x5d190c0a],ebx
  408cb6:	dec    edi
  408cb7:	push   ecx
  408cb9:	sbb    BYTE PTR [ebx],al
  408cbb:	push   0xffc1c358
  408cc0:	pop    ecx
  408cc1:	mov    dh,0xd2
  408cc3:	inc    eax
  408cc4:	ds retf 0x4
  408cc8:	ds mov dl,0x6b
  408ccb:	mov    dl,0xf9
  408ccd:	push   ebp
  408cce:	adc    BYTE PTR [eax-0x3f],0xa7
  408cd2:	or     ebp,eax
  408cd4:	push   cs
  408cd5:	daa    
  408cd6:	jg     0x408cd7
  408cd8:	and    al,0x32
  408cda:	jmp    0x408d54
  408cdc:	psllq  mm0,QWORD PTR [edx]
  408cdf:	push   0x0
	...
  408d08:	add    BYTE PTR [eax],al
  408d0a:	mov    edx,0x21ffc563
  408d0f:	xor    BYTE PTR [ebx],al
  408d11:	add    BYTE PTR [esi-0x76306ce6],bh
  408d17:	adc    eax,0x40ac00b
  408d1c:	mov    WORD PTR [ebp+0x72],es
  408d1f:	in     eax,0xf8
  408d21:	repz jno 0x408d8b
  408d24:	or     al,0xe8
  408d26:	dec    edi
  408d27:	idiv   DWORD PTR [esi-0x1]
  408d2a:	popa   
  408d2b:	inc    edi
  408d2c:	js     0x408d16
  408d2e:	fcomip st,st(5)
  408d30:	jle    0x408d31
  408d32:	in     al,0x31
  408d34:	jmp    0x408da3
  408d36:	out    dx,eax
  408d37:	jb     0x408d3d
  408d39:	push   0xffc54399
  408d3e:	mov    eax,ds:0xbe000330
  408d43:	(bad)  
  408d45:	into   
  408d46:	sub    DWORD PTR [ebp+0x5babfed4],esi
  408d4c:	icebp  
  408d4d:	imul   edi,DWORD PTR [edi],0x26
  408d50:	pop    esi
  408d51:	jg     0x408cf7
  408d53:	pop    ebx
  408d54:	sar    esp,0x6e
  408d57:	call   0x3a8:0x89d8ebe9
  408d5e:	pop    cx
  408d60:	jmp    0xad734b68
  408d65:	dec    esi
  408d66:	jmp    0x6a846f8e
  408d6b:	dec    ebp
  408d6c:	jo     0x408d37
	...
  408d96:	add    BYTE PTR [eax],al
  408d98:	int    0x23
  408d9a:	xchg   esp,eax
  408d9b:	ja     0x408d6e
  408d9d:	lods   eax,DWORD PTR ds:[esi]
  408d9e:	loope  0x408e0b
  408da0:	cld    
  408da1:	es push cs
  408da3:	jg     0x408d66
  408da5:	lods   eax,DWORD PTR ds:[esi]
  408da6:	std    
  408da7:	imul   ecx,DWORD PTR [edi+edx*1-0x2],0x7e
  408dac:	mov    cl,0xad
  408dae:	cmc    
  408daf:	jle    0x408de4
  408db1:	push   ebx
  408db2:	add    DWORD PTR [ecx+0x4ce62377],ecx
  408db8:	jl     0x408e18
  408dba:	jmp    0x41775297
  408dbf:	add    al,0x3e
  408dc1:	xor    al,0x8f
  408dc3:	jle    0x408dd0
  408dc5:	push   edi
  408dc6:	xabort 0x41
  408dc9:	xor    edi,DWORD PTR [esp+esi*2+0x41a02371]
  408dd0:	ss pop ebx
  408dd2:	adc    al,0x8b
  408dd4:	push   edx
  408dd5:	fldcw  WORD PTR [edi+esi*4+0x469e2358]
  408ddc:	mov    ebx,0x497e96e2
  408de1:	pop    edx
  408de2:	jmp    0x2c10cbea
  408de7:	adc    BYTE PTR [ebp+0x1b],al
  408dea:	cmc    
  408deb:	or     BYTE PTR [esi+0x26e90063],bh
  408df1:	pop    eax
  408df2:	jmp    0x9bc907
  408df7:	pushw  ss
  408df9:	push   edi
  408dfa:	call   0x408ef8
	...
  408e23:	add    BYTE PTR [eax],al
  408e25:	add    BYTE PTR [eax+0x22],ch
  408e28:	jmp    edx
  408e2a:	jge    0x408dd4
  408e2c:	xadd   DWORD PTR [esi+0x78e94192],edx
  408e33:	test   al,0xc
  408e35:	push   ecx
  408e36:	add    edx,DWORD PTR [edx]
  408e38:	push   DWORD PTR [esi]
  408e3a:	push   esp
  408e3b:	push   eax
  408e3c:	push   0x9bf043
  408e41:	es (bad) 
  408e43:	push   esi
  408e44:	call   0xff630f27
  408e49:	pusha  
  408e4a:	mov    dh,0xe3
  408e4c:	std    
  408e4d:	push   cs
  408e4e:	inc    eax
  408e4f:	mov    bl,0x3e
  408e51:	call   0x64cde993
  408e56:	jmp    DWORD PTR [eax]
  408e58:	push   esi
  408e5a:	mov    WORD PTR [edx],?
  408e5c:	mov    bh,0x22
  408e5e:	and    BYTE PTR [edx],ah
  408e60:	lea    ebp,[esp+edi*8+0x20]
  408e64:	(bad)  
  408e65:	fisubr WORD PTR [edx+0x21]
  408e68:	mov    ch,0x91
  408e6a:	or     BYTE PTR [edx],ah
  408e6c:	inc    ecx
  408e6e:	adc    eax,0xc4e8ffe9
  408e73:	fdivr  DWORD PTR [ebx+0x4021f3bf]
  408e79:	out    0xc1,al
  408e7b:	es add cl,ch
  408e7e:	cmp    eax,0xd8ab94d0
  408e83:	and    edi,edi
  408e85:	xchg   esi,eax
  408e86:	cmp    al,0x4b
  408e88:	add    cl,ch
	...
  408eb2:	add    BYTE PTR [eax],al
  408eb4:	cmp    eax,0x7c5c65a7
  408eb9:	jbe    0x408f0b
  408ebb:	add    BYTE PTR [edi-0x49],cl
  408ebe:	dec    edi
  408ebf:	inc    ecx
  408ec0:	daa    
  408ec1:	mov    dh,0xc6
  408ec3:	mov    dh,0x17
  408ec5:	pop    esi
  408ec6:	or     eax,eax
  408ec8:	sub    bl,BYTE PTR [ecx-0x17]
  408ecb:	mov    cl,0x27
  408ecd:	pop    esi
  408ece:	add    BYTE PTR [ebp-0x16276],cl
  408ed4:	jo     0x408ea8
  408ed6:	inc    ecx
  408ed7:	sub    al,0xc7
  408ed9:	xor    eax,0x5da64fe1
  408ede:	call   0x97f88c
  408ee3:	or     edx,DWORD PTR [edi]
  408ee5:	sub    al,BYTE PTR [ecx+ebp*8]
  408ee8:	mov    edx,DWORD PTR [edi+0x0]
  408eeb:	add    BYTE PTR [edi-0x18beb804],ch
  408ef1:	sahf   
  408ef2:	jne    0x408f00
  408ef4:	aas    
  408ef5:	in     eax,0xcd
  408ef7:	push   DWORD PTR [eax]
  408ef9:	rcl    BYTE PTR [edx+eax*8-0x72005fbf],cl
  408f00:	aad    0x71
  408f02:	push   edx
  408f03:	push   eax
  408f04:	aas    
  408f05:	mov    eax,ds:0xd90ffce
  408f0a:	(bad)  
  408f0b:	jne    0x408ea4
  408f0d:	or     eax,0xb58f75fe
  408f12:	adc    bh,bh
  408f14:	jo     0x408eb4
  408f16:	call   0x409014
	...
  408f3f:	add    BYTE PTR [eax],al
  408f41:	add    ch,bl
  408f43:	sahf   
  408f44:	(bad)  
  408f45:	jmp    0x408f4b
  408f47:	rol    BYTE PTR [ecx+0x2c],cl
  408f4a:	out    dx,al
  408f4b:	fdiv   DWORD PTR [ebx+0x689eb0fe]
  408f51:	repz inc esi
  408f53:	push   ds
  408f54:	(bad)  
  408f55:	(bad)  
  408f56:	cli    
  408f57:	jmp    0xb5f18f59
  408f5c:	push   edx
  408f5d:	mov    bh,0x3e
  408f5f:	xor    al,0x3
  408f61:	or     edi,DWORD PTR [esi+0x47]
  408f64:	(bad)  
  408f65:	fild   QWORD PTR [bp+si-0x3d]
  408f69:	push   DWORD PTR [eax]
  408f6b:	sub    BYTE PTR [edi],cl
  408f6d:	call   0xffbc880c
  408f72:	and    DWORD PTR [eax-0x49],ebp
  408f75:	(bad)  
  408f76:	sbb    DWORD PTR [edx+0x70cae7d3],edi
  408f7c:	jl     0x408f7d
  408f7e:	outs   dx,BYTE PTR ds:[esi]
  408f7f:	loop   0x409000
  408f81:	jge    0x408fb1
  408f83:	xor    dh,bh
  408f85:	or     al,0x66
  408f87:	inc    esp
  408f88:	rol    BYTE PTR [eax+0x3e],cl
  408f8b:	ret    0x226a
  408f8e:	mov    cl,0x32
  408f90:	add    ebp,ebx
  408f92:	cmp    ebp,DWORD PTR [edx+0x323e0002]
  408f98:	(bad)  [edx]
  408f9a:	inc    dh
  408f9c:	or     DWORD PTR [edx-0x37],edx
  408f9f:	mov    edi,0x50a8e80a
  408fa4:	jl     0x408fa5
	...
  408fce:	add    BYTE PTR [eax],al
  408fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd1:	jle    0x40901c
  408fd3:	push   DWORD PTR [ecx-0x573d7951]
  408fd9:	sub    DWORD PTR [ebx+0x50],edi
  408fdc:	mov    eax,ds:0x99febf67
  408fe1:	cmp    DWORD PTR [eax+eax*1-0x38],ebp
  408fe5:	xor    al,BYTE PTR [ebx]
  408fe7:	test   DWORD PTR [esi+0x39],edi
  408fea:	adc    BYTE PTR [eax],0x81
  408fed:	adc    DWORD PTR [ebx-0x1],edi
  408ff0:	mov    bl,0xd6
  408ff2:	jns    0x408ff3
  408ff4:	jno    0x409000
  408ff6:	ja     0x408fad
  408ff8:	xor    bh,BYTE PTR ds:[edx-0x4b]
  408ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ffd:	lock jp 0x408fff
  409000:	pop    bx
  409002:	or     eax,0xb020514e
  409007:	inc    esi
  409008:	cmp    bl,BYTE PTR [ebx+0x3c]
  40900b:	(bad)  
  40900c:	push   edx
  40900d:	fsub   QWORD PTR [eax+edi*2+0x4859601]
  409014:	ds pop ebx
  409016:	jmp    0x81904395
  40901b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40901c:	lock pop ds
  40901e:	outs   dx,BYTE PTR ds:[esi]
  40901f:	paddd  mm4,QWORD PTR [esi+0x1f7b8d03]
  409026:	pop    esi
  409027:	icebp  
  409028:	cmp    DWORD PTR [eax],esp
  40902a:	fdiv   QWORD PTR [edi+0x16]
  40902d:	add    ebx,DWORD PTR [ebx+edi*2]
  409030:	stc    
  409031:	mov    al,BYTE PTR [esi-0xf]
	...
  40905c:	add    BYTE PTR [eax],al
  40905e:	cmc    
  40905f:	xor    bh,cl
  409061:	dec    ebp
  409062:	jmp    0xe601f686
  409067:	mov    ah,0xe8
  409069:	jp     0x4090be
  40906b:	pop    ds
  40906c:	es icebp 
  40906e:	cmp    DWORD PTR [ebx],esi
  409070:	aad    0x79
  409072:	leave  
  409073:	pop    ds
  409074:	push   ss
  409075:	icebp  
  409076:	lds    esi,FWORD PTR [edx]
  409078:	icebp  
  409079:	dec    ebp
  40907a:	mov    ecx,0x4246301f
  40907f:	pop    ebx
  409080:	xchg   esp,eax
  409081:	mov    ds,WORD PTR [edx-0x5f8bd327]
  409087:	pop    ds
  409088:	out    dx,al
  409089:	in     eax,dx
  40908a:	cdq    
  40908b:	mov    cl,0xea
  40908d:	jp     0x40909a
  40908f:	push   ebx
  409090:	shl    DWORD PTR [edx],1
  409092:	sbb    DWORD PTR [edi],0x1efb8cd6
  409098:	inc    ecx
  409099:	add    BYTE PTR [edi],bh
  40909b:	pop    ebx
  40909c:	jmp    0xbf684c29
  4090a1:	jp     0x40910c
  4090a3:	mov    al,BYTE PTR [eax]
  4090a5:	shl    DWORD PTR [esi+0x48e8ffe5],0x1b
  4090ac:	(bad)  
  4090ae:	cwde   
  4090af:	pop    edx
  4090b0:	add    cl,ch
  4090b2:	push   es
  4090b3:	push   edi
  4090b4:	add    ecx,ebp
  4090b6:	cmp    eax,0x3d718750
  4090bb:	pop    ebx
  4090bc:	add    BYTE PTR [ecx],dl
  4090be:	mov    al,ds:0xe9418c
	...
  4090eb:	add    BYTE PTR [esi-0x5b880928],dh
  4090f1:	push   ds
  4090f2:	push   eax
  4090f3:	sbb    DWORD PTR [edi],0xc266ff10
  4090f9:	fsubr  st,st(7)
  4090fb:	pop    edi
  4090fc:	test   BYTE PTR [esi],bl
  4090fe:	call   FWORD PTR [ebp+ecx*4-0x1ab100e3]
  409105:	pop    edx
  409106:	add    ecx,ebp
  409108:	cmp    eax,0x673684d0
  40910d:	push   ds
  40910e:	call   FWORD PTR [ecx-0x57b8062b]
  409114:	cmp    eax,0xfab8ffb3
  409119:	push   ds
  40911a:	addr16 and edx,esi
  40911d:	fwait
  40911e:	add    BYTE PTR [ecx],al
  409120:	clc    
  409121:	out    0xff,eax
  409123:	call   0xd8b4ac70
  409128:	mov    ds:0x2c648c1e,eax
  40912d:	sbb    eax,0x1d8cf6ff
  409132:	jne    0x409115
  409134:	and    eax,0x17e6fcc1
  409139:	push   ds
  40913a:	mov    ch,0xd9
  40913c:	add    al,0x1e
  40913e:	inc    DWORD PTR [ecx+0x3e]
  409141:	pop    esp
  409142:	add    cl,ch
  409144:	rcr    al,0xf6
  409147:	add    BYTE PTR [ecx-0x5c],bh
  40914a:	call   DWORD PTR [eax+0xf]
  40914d:	clc    
  40914e:	inc    edi
  40914f:	inc    ecx
	...
  409178:	add    BYTE PTR [eax],al
  40917a:	push   edi
  40917b:	xor    al,BYTE PTR [edx]
  40917d:	push   edx
  40917e:	es push edi
  409180:	push   0xff1a16f8
  409185:	out    0x4f,eax
  409187:	in     eax,dx
  409188:	(bad)  
  409189:	call   FWORD PTR [edx+ebx*4+0x74]
  40918d:	adc    DWORD PTR ds:0xb0858d57,edi
  409193:	mov    eax,ds:0xa447ffff
  409198:	jne    0x4091a2
  40919a:	mov    edi,0xa8fffc03
  40919f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a0:	mov    ch,0xf0
  4091a2:	cdq    
  4091a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a4:	(bad)  
  4091a5:	call   0x402281
  4091aa:	std    
  4091ab:	outs   dx,BYTE PTR ds:[esi]
  4091ac:	call   0xffe4ec42
  4091b1:	or     esp,DWORD PTR [edi]
  4091b3:	sub    ebx,DWORD PTR [ebx]
  4091b5:	push   0x400a1e
  4091ba:	(bad)  
  4091bb:	mov    cl,0x1d
  4091bd:	int    0x28
  4091bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c0:	push   eax
  4091c1:	push   0xffffffe7
  4091c3:	or     esi,edi
  4091c5:	jne    0x409196
  4091c7:	mov    cl,0x32
  4091c9:	std    
  4091ca:	sub    BYTE PTR [eax+ebp*8-0x5ba1e7],ah
  4091d1:	push   0x400a6f
  4091d6:	int    0x3f
  4091d8:	push   DWORD PTR [ebp-0x61]
  4091db:	mov    cl,0xaa
  4091dd:	inc    BYTE PTR [eax]
	...
  409207:	add    BYTE PTR [eax+0x56c868a2],ch
  40920d:	sbb    bh,bh
  40920f:	imul   esi,DWORD PTR [esp+eiz*4],0x1c3e0875
  409216:	pushf  
  409217:	(bad)  
  409218:	jns    0x409226
  40921a:	jmp    0x4091e3
  40921c:	(bad)  
  40921e:	add    al,0x6a
  409220:	dec    edx
  409221:	fucomp st(5)
  409223:	pop    es
  409224:	push   esi
  409225:	mov    bh,0x79
  409227:	call   FWORD PTR [ecx-0x14]
  40922a:	in     eax,dx
  40922b:	sti    
  40922c:	push   ecx
  40922d:	ds or  al,0xe8
  409230:	jmp    0x78400a2a
  409235:	icebp  
  409236:	(bad)  
  409237:	call   DWORD PTR [edx+0x3e6867b9]
  40923d:	xor    ch,BYTE PTR [eax-0x42]
  409240:	sub    DWORD PTR [eax],ebp
  409242:	pop    es
  409243:	jmp    FWORD PTR [ebx+0x28d76b3a]
  409249:	scas   al,BYTE PTR es:[edi]
  40924a:	js     0x409215
  40924c:	cld    
  40924d:	sub    al,BYTE PTR [ebx]
  40924f:	push   ebp
  409250:	mov    ch,0x8e
  409252:	test   ah,al
  409254:	push   es
  409255:	outs   dx,BYTE PTR ds:[esi]
  409256:	mov    esi,0x3323efb
  40925b:	add    bl,al
  40925d:	out    dx,eax
  40925e:	jbe    0x4092b0
  409260:	push   esi
  409261:	add    ch,dl
  409263:	inc    eax
  409264:	ds gs out dx,al
  409267:	or     ebx,ecx
  409269:	daa    
  40926a:	ds dec eax
	...
  409294:	add    BYTE PTR [eax],al
  409296:	jg     0x4092ca
  409298:	imul   edi,DWORD PTR [edx+0xb783df5],0xfffffffe
  40929f:	mov    esi,0x4a038918
  4092a4:	jmp    0x4092a6
  4092a6:	ds inc ebp
  4092a8:	mov    ecx,0x771e33ff
  4092ad:	jne    0x409255
  4092af:	and    eax,0xf2a607ed
  4092b4:	push   0xe65b91ff
  4092b9:	icebp  
  4092ba:	xchg   ecx,eax
  4092bb:	xor    ebp,DWORD PTR [ecx+0x4c]
  4092be:	sbb    DWORD PTR [eax+eiz*4],0x345b4642
  4092c5:	mov    esp,DWORD PTR [edx-0x26]
  4092c8:	lods   al,BYTE PTR ds:[esi]
  4092c9:	mov    al,0x68
  4092cb:	sbb    al,0xbe
  4092cd:	aas    
  4092ce:	mov    ebx,0x5977b6e3
  4092d3:	pop    ebx
  4092d4:	jmp    0x2c10d0dc
  4092d9:	or     BYTE PTR ds:0xbe01151b,dh
  4092df:	arpl   cx,bp
  4092e1:	lock inc edx
  4092e3:	xor    ah,ch
  4092e5:	add    al,0x3e
  4092e7:	pop    ebx
  4092e8:	xchg   cl,dh
  4092ea:	cmp    DWORD PTR [esp+esi*8],ebx
  4092ed:	pop    es
  4092ee:	push   ss
  4092ef:	das    
  4092f0:	mov    ds:0x198b1977,al
  4092f5:	ja     0x409282
  4092f7:	push   ebx
  4092f8:	push   ecx
  4092f9:	fiadd  WORD PTR [eax]
	...
  409323:	add    BYTE PTR [eax],cl
  409325:	sbb    al,0x5e
  409327:	ins    BYTE PTR es:[edi],dx
  409328:	inc    eax
  409329:	adc    edx,DWORD PTR [esi+0x77]
  40932c:	data16 ss sahf 
  40932f:	(bad)  
  409330:	icebp  
  409331:	sbb    al,0xbc
  409333:	pop    es
  409334:	(bad)  
  409335:	or     dh,BYTE PTR [edx]
  409337:	ja     0x40931a
  409339:	shr    DWORD PTR [ebx-0x44],1
  40933c:	fcomp  DWORD PTR [ebx]
  40933e:	cs in  al,dx
  409340:	adc    ebx,DWORD PTR [edx-0x17]
  409343:	add    edi,DWORD PTR [ebx-0x3e89d52b]
  409349:	sbb    edi,DWORD PTR [ecx+0xe13066b]
  40934f:	ja     0x409314
  409351:	aad    0x2a
  409353:	jbe    0x4092fe
  409355:	sbb    ebx,DWORD PTR [ecx-0x1d148a]
  40935b:	not    BYTE PTR [eax]
  40935d:	sbb    al,0xe8
  40935f:	jae    0x40932d
  409361:	pop    edx
  409362:	add    BYTE PTR [eax-0x42],dh
  409365:	fdivp  st(5),st
  409367:	fimul  WORD PTR [eax]
  409369:	fwait
  40936a:	(bad)  
  40936c:	fcomp  DWORD PTR [edx+0x0]
  40936f:	jmp    0xc802593a
  409374:	lock sbb esi,edi
  409377:	jmp    0x4093c6
  409379:	pop    ebx
  40937a:	add    cl,ch
  40937c:	imul   esp,DWORD PTR [edi+0x1cff548d],0x98b6a6ff
  409386:	sub    al,0x39
	...
  4093b0:	add    BYTE PTR [eax],al
  4093b2:	push   edx
  4093b3:	sti    
  4093b4:	dec    esi
  4093b5:	sub    BYTE PTR [edx+0x3],al
  4093b8:	push   ecx
  4093b9:	pop    edx
  4093ba:	cmp    eax,0x2ea90b5b
  4093bf:	pop    ebp
  4093c0:	jmp    0x4093e5
  4093c2:	mov    bh,0xf0
  4093c4:	shl    DWORD PTR [edi-0x70],0x1a
  4093c8:	lea    ebp,[ebx]
  4093ca:	stos   WORD PTR es:[edi],ax
  4093cc:	push   0x9c004b
  4093d1:	push   ecx
  4093d2:	push   eax
  4093d3:	into   
  4093d4:	(bad)  
  4093d5:	call   0xebb5af1e
  4093da:	fs fwait
  4093dc:	lea    ebx,[edi+edi*2+0x19]
  4093e0:	(bad)  
  4093e1:	ds mov dh,0x9d
  4093e4:	sub    al,0x60
  4093e6:	mov    esi,0x482efdcf
  4093eb:	and    DWORD PTR [ecx-0x1e4fd4f],0xffffff94
  4093f2:	cmp    DWORD PTR [ebx],eax
  4093f4:	cmp    al,0x22
  4093f6:	xor    BYTE PTR [edx],bl
  4093f8:	call   DWORD PTR [ecx+eiz*8+0x19]
  4093fc:	inc    DWORD PTR [eax]
  4093fe:	inc    eax
  4093ff:	cs out 0x84,eax
  409402:	ins    BYTE PTR es:[edi],dx
  409403:	xchg   ecx,eax
  409404:	(bad)  
  409405:	call   FWORD PTR [edx]
  409407:	outs   dx,BYTE PTR ds:[esi]
  409408:	push   eax
  409409:	call   0x40391a
  40940e:	inc    edi
  40940f:	das    
  409410:	(bad)  
  409411:	jne    0x4093a2
  409413:	xchg   BYTE PTR [ecx+0xfe],ah
	...
  40943d:	add    BYTE PTR [eax],al
  40943f:	add    BYTE PTR [eax-0x67861770],dl
  409445:	nop
  409446:	dec    DWORD PTR [ebp-0x16326]
  40944c:	mov    al,ds:0xd3b5fe2f
  409451:	nop
  409452:	(bad)  
  409453:	(bad)  
  409454:	jg     0x409410
  409456:	mov    dl,0x0
  409458:	push   edi
  409459:	cdq    
  40945a:	ror    BYTE PTR [edi],0xda
  40945d:	cli    
  40945e:	std    
  40945f:	call   eax
  409461:	(bad)  
  409462:	mov    ch,0xbc
  409464:	ror    DWORD PTR [edi-0x33201701],0xff
  40946b:	jmp    DWORD PTR [eax-0x6f014836]
  409471:	nop
  409472:	call   0xffd06cc0
  409477:	leave  
  409478:	push   ebp
  409479:	arpl   WORD PTR [eax],ax
  40947b:	push   ebp
  40947c:	mov    WORD PTR [ebx-0x6f6c3b7d],es
  409482:	jne    0x409490
  409484:	jg     0x409466
  409486:	retf   0x80ff
  409489:	out    0x44,al
  40948b:	cld    
  40948c:	in     al,dx
  40948d:	popf   
  40948e:	je     0x40f3f7
  409494:	jmp    DWORD PTR ds:0x8ed74152
  40949a:	jne    0x409498
  40949c:	das    
  40949d:	ror    ecx,1
  40949f:	(bad)  
  4094a0:	ds jno 0x409477
  4094a3:	add    BYTE PTR [bx+si],al
	...
  4094ce:	xlat   BYTE PTR ds:[ebx]
  4094cf:	aam    0xc1
  4094d1:	(bad)  
  4094d2:	stc    
  4094d3:	pusha  
  4094d4:	out    dx,eax
  4094d5:	pop    es
  4094d6:	xchg   esi,eax
  4094d7:	scas   eax,DWORD PTR es:[edi]
  4094d8:	jbe    0x4094d9
  4094da:	cdq    
  4094db:	pop    ebx
  4094dc:	or     edi,eax
  4094de:	xchg   ecx,eax
  4094df:	or     bl,ch
  4094e1:	pop    esp
  4094e2:	in     eax,dx
  4094e3:	inc    edx
  4094e4:	add    al,0xff
  4094e6:	or     edi,DWORD PTR [eax]
  4094e8:	imul   ebx,DWORD PTR [ebp+0x50743084],0xffffffe6
  4094ef:	mov    dl,al
  4094f1:	inc    eax
  4094f2:	ds je  0x40956a
  4094f5:	jne    0x40952d
  4094f7:	sub    al,0xf0
  4094f9:	std    
  4094fa:	pop    ecx
  4094fb:	shr    BYTE PTR [edx-0x16],1
  4094fe:	js     0x4094c8
  409500:	jae    0x40956a
  409502:	rcl    BYTE PTR [ebx+eax*8-0x1],1
  409506:	inc    eax
  409507:	outs   dx,BYTE PTR ds:[esi]
  409508:	js     0x4094f2
  40950a:	mov    edx,0x8eff73bc
  40950f:	pop    edx
  409510:	fwait
  409511:	push   ebx
  409512:	jg     0x409516
  409514:	sar    esi,cl
  409516:	stos   DWORD PTR es:[edi],eax
  409517:	or     ch,BYTE PTR [ebx+0x52]
  40951a:	sbb    BYTE PTR [edx-0x3ef8178c],dl
  409520:	jae    0x409521
  409522:	xchg   esi,eax
  409523:	xchg   edx,eax
  409524:	rol    BYTE PTR [eax+0x3e],1
  409527:	mov    ecx,0xcde6fbee
  40952c:	dec    eax
  40952d:	push   ecx
  40952f:	shr    dl,cl
  409531:	cwde   
	...
  40955a:	add    BYTE PTR [eax],al
  40955c:	(bad)  
  40955d:	ret    
  40955e:	add    dl,BYTE PTR [eax-0x1f]
  409561:	iret   
  409562:	or     ch,al
  409564:	(bad)  
  409566:	je     0x409567
  409568:	out    0xda,al
  40956a:	cmp    al,0xff
  40956c:	leave  
  40956d:	pop    ebx
  40956e:	es out dx,al
  409570:	lds    eax,FWORD PTR [ebx]
  409572:	dec    ecx
  409573:	cmp    eax,0x412018b9
  409578:	inc    esi
  409579:	pop    ebx
  40957a:	mov    ah,0x88
  40957c:	call   0xe985:0x9772cdc
  409583:	jmp    0xbbcadc5
  409588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409589:	sbb    ch,BYTE PTR [edx]
  40958b:	je     0x409516
  40958d:	loop   0x4095ba
  40958f:	jo     0x409546
  409591:	push   esi
  409592:	xor    BYTE PTR [esi+edi*8+0x3e33695a],bh
  409599:	(bad)  
  40959a:	adc    bl,ah
  40959c:	aaa    
  40959d:	lods   eax,DWORD PTR ds:[esi]
  40959e:	sub    BYTE PTR [ecx+ecx*1],al
  4095a1:	add    eax,ebp
  4095a3:	mov    dh,0x3e
  4095a5:	pop    ebx
  4095a6:	loop   0x4095eb
  4095a8:	retf   0x1678
  4095ab:	pop    esp
  4095ac:	push   es
  4095ad:	sub    esp,DWORD PTR [esi+0x151b3573]
  4095b3:	sbb    BYTE PTR [esi+0x7ed77083],cl
  4095b9:	pop    ebx
  4095ba:	cmp    DWORD PTR [ebx-0x4d],esi
  4095bd:	arpl   WORD PTR [ecx+0x5b],dx
	...
  4095e7:	add    BYTE PTR [eax],al
  4095e9:	add    BYTE PTR [ebx],ah
  4095eb:	sbb    BYTE PTR [esi+0x5c],bh
  4095ee:	mov    BYTE PTR [ecx],ah
  4095f0:	jbe    0x409665
  4095f2:	adc    cl,BYTE PTR [ecx+ebp*4-0x53]
  4095f6:	or     DWORD PTR [eax],ebx
  4095f8:	data16 jae 0x409607
  4095fb:	leave  
  4095fc:	and    BYTE PTR [ebx],cl
  4095fe:	jae    0x40961e
  409600:	ret    
  409601:	or     eax,0x5be18df1
  409606:	out    dx,eax
  409607:	sbb    BYTE PTR [esi+0x73],al
  40960a:	push   esp
  40960b:	cmp    al,0x3e
  40960d:	stc    
  40960e:	inc    ecx
  40960f:	add    eax,DWORD PTR [eax]
  409611:	dec    esi
  409612:	dec    esp
  409613:	sbb    bh,bh
  409615:	ret    
  409616:	cmp    DWORD PTR [eax],ebx
  409618:	jne    0x40960b
  40961a:	gs ss (bad) 
  40961d:	push   ds
  40961e:	sub    eax,0xb7162685
  409623:	pop    edi
  409624:	call   0xff58c263
  409629:	xchg   ecx,eax
  40962a:	xor    DWORD PTR [ebp-0x71f316bf],ebp
  409630:	or     BYTE PTR [ecx],al
  409632:	xchg   DWORD PTR [esi],edx
  409634:	(bad)  
  409635:	out    dx,al
  409636:	mov    eax,gs:0x183a2852
  40963c:	jne    0x40962f
  40963e:	adc    eax,0xecd6fd53
  409643:	add    BYTE PTR [eax-0x1e87cc5],0x3c
  40964a:	(bad)  
  40964b:	jmp    FWORD PTR [edx]
  40964d:	mov    esp,0x0
	...
  409676:	add    BYTE PTR [eax],al
  409678:	int3   
  409679:	pop    ss
  40967a:	push   0x9a6b87
  40967f:	scas   al,BYTE PTR es:[edi]
  409680:	inc    esi
  409681:	pop    edi
  409682:	call   0xff58658e
  409687:	adc    DWORD PTR [esi-0x5316be57],esp
  40968d:	nop
  40968e:	or     BYTE PTR [ecx-0x7900e7ae],al
  409694:	add    eax,0x4228536d
  409699:	push   ss
  40969a:	jne    0x40967d
  40969c:	jne    0x4096fd
  40969e:	std    
  40969f:	outs   dx,BYTE PTR ds:[esi]
  4096a0:	mov    WORD PTR [esi],ss
  4096a2:	jne    0x409709
  4096a4:	mov    WORD PTR [eax+0x1a2e5108],ss
  4096aa:	call   DWORD PTR [esi+0xc]
  4096ad:	and    al,0xc2
  4096af:	in     eax,0x3d
  4096b1:	mov    al,0x8b
  4096b3:	add    BYTE PTR [ebx-0x18f38323],cl
  4096b9:	push   cs
  4096ba:	adc    eax,0xff6a92ff
  4096bf:	jne    0x4096ac
  4096c1:	mov    DWORD PTR [ebp+0x8],esi
  4096c4:	das    
  4096c5:	retf   0xffea
  4096c8:	pop    eax
  4096c9:	mov    DWORD PTR [ebp+0xc],esi
  4096cc:	aas    
  4096cd:	in     eax,0xc4
  4096cf:	(bad)  
  4096d0:	cmp    BYTE PTR [edi-0x3e],dl
  4096d3:	or     al,0x97
  4096d5:	xor    ecx,DWORD PTR [edx-0x361db14]
  4096db:	push   0x0
	...
  409705:	add    BYTE PTR [edi-0x67eb8a77],ah
  40970b:	push   cs
  40970c:	ud0    esp,edx
  40970f:	pop    edx
  409710:	call   0xffcd46ae
  409715:	or     esp,DWORD PTR [edi+0x22895b13]
  40971b:	mov    ebp,DWORD PTR [eax+0xa]
  40971e:	inc    ebx
  40971f:	sbb    bh,bh
  409721:	(bad)  
  409722:	adc    cl,BYTE PTR [ebx-0x7361f318]
  409728:	jmp    FWORD PTR [eax+0x57]
  40972b:	pop    edx
  40972c:	out    dx,eax
  40972d:	mov    esi,0x8758c07
  409732:	iret   
  409733:	mov    ebp,0x36c8fffe
  409738:	adc    al,0x54
  40973a:	push   esi
  40973b:	pop    edi
  40973c:	push   DWORD PTR [ebp-0x45]
  40973f:	mov    dh,0xf1
  409741:	enter  0x8c98,0x68
  409745:	add    DWORD PTR [edi],esp
  409747:	jnp    0x409707
  409749:	push   eax
  40974a:	cwde   
  40974b:	push   cs
  40974c:	pop    es
  40974d:	call   0x4023df
  409752:	(bad)  
  409755:	inc    ecx
  409756:	ds add al,0x70
  409759:	jne    0x409745
  40975b:	fwait
  40975c:	pop    edx
  40975d:	enter  0x9ce1,0xdc
  409761:	add    DWORD PTR [esi],edi
  409763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409764:	mov    dl,0x50
  409766:	rcl    esi,1
  409768:	cli    
  409769:	out    0x0,eax
	...
  409793:	add    BYTE PTR [ecx+0x45],bl
  409796:	jno    0x409797
  409798:	shl    esi,0x6e
  40979b:	call   0xffb1d6ff
  4097a0:	xchg   DWORD PTR [ecx+0x14],eax
  4097a3:	add    BYTE PTR [ebx],dl
  4097a5:	jns    0x409807
  4097a7:	push   0xffc1f853
  4097ac:	cwde   
  4097ad:	mov    ?,edi
  4097af:	out    0xe2,eax
  4097b1:	cmp    esi,DWORD PTR [ecx-0x1]
  4097b4:	mov    DWORD PTR [esi+0x34965013],ecx
  4097ba:	cmp    edi,edi
  4097bc:	jns    0x4097f2
  4097be:	not    BYTE PTR [ebx]
  4097c0:	push   cs
  4097c1:	sub    eax,0x655607f6
  4097c6:	jno    0x4097c7
  4097c8:	popa   
  4097c9:	stos   DWORD PTR es:[edi],eax
  4097ca:	sub    edx,DWORD PTR [edi+edi*8+0x3]
  4097ce:	jo     0x409845
  4097d0:	inc    edx
  4097d1:	sbb    al,0x7d
  4097d3:	enter  0xc449,0x6f
  4097d7:	jne    0x409807
  4097d9:	push   esp
  4097da:	pop    esp
  4097db:	aad    0x6
  4097dd:	imul   BYTE PTR [edi-0x1]
  4097e0:	stos   DWORD PTR es:[edi],eax
  4097e1:	push   ss
  4097e2:	sar    esi,cl
  4097e4:	mov    bl,0xfa
  4097e6:	pop    edx
  4097e7:	sbb    al,0x21
  4097e9:	fisubr WORD PTR [edi-0x37]
  4097ec:	cld    
  4097ed:	xor    al,BYTE PTR [ebx]
  4097ef:	push   ebp
  4097f0:	(bad)
  4097f3:	les    ecx,FWORD PTR [edx]
  4097f5:	xchg   dh,dh
  4097f7:	or     eax,DWORD PTR [eax]
	...
  409821:	add    BYTE PTR [esi],dl
  409823:	pop    esp
  409824:	add    eax,0xf214f93b
  409829:	inc    ebx
  40982a:	push   0xffffffa1
  40982c:	pusha  
  40982d:	(bad)  
  40982e:	in     eax,0x83
  409830:	jmp    0xd1166938
  409835:	std    
  409836:	ins    DWORD PTR es:[edi],dx
  409837:	call   0xf636:0x174b70e9
  40983e:	inc    ecx
  40983f:	add    esp,DWORD PTR [edx+0x70]
  409842:	rcl    DWORD PTR [ecx+edx*4],0x2
  409846:	ds add al,0x5f
  409849:	fisttp DWORD PTR [edx-0x51]
  40984c:	test   al,0x3
  40984e:	test   eax,0x2b700d8e
  409853:	arpl   WORD PTR [ecx],dx
  409855:	stc    
  409856:	cwde   
  409857:	adc    al,0xfe
  409859:	fidivr DWORD PTR [edi]
  40985b:	pop    ebx
  40985c:	push   es
  40985d:	mov    cl,0x16
  40985f:	cmp    edx,DWORD PTR [ebp+0x5c1581c2]
  409865:	jo     0x4098e0
  409867:	mov    ?,ecx
  409869:	pop    ebx
  40986a:	fist   WORD PTR [ebx]
  40986c:	(bad)  
  40986d:	outs   dx,DWORD PTR ds:[esi]
  40986e:	imul   ecx,DWORD PTR [esi+0x1ee85ccd],0x19876fc6
  409878:	icebp  
  409879:	add    ebp,ebx
  40987b:	ffreep st(4)
  40987d:	add    DWORD PTR [edx-0x2bfbbce9],0x5d
  409884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409885:	stc    
	...
  4098ae:	add    BYTE PTR [eax],al
  4098b0:	inc    ecx
  4098b1:	add    eax,DWORD PTR [ecx+0x60143145]
  4098b7:	leave  
  4098b8:	and    eax,0x7ed3b283
  4098bd:	pop    ebx
  4098be:	adc    DWORD PTR [ebp+0x6ee99a6d],esp
  4098c4:	dec    ebx
  4098c5:	push   ds
  4098c6:	add    BYTE PTR [ecx],ah
  4098c8:	add    edx,DWORD PTR [esi+edi*8]
  4098cb:	hlt    
  4098cc:	add    eax,0x6967adfc
  4098d1:	adc    al,0x68
  4098d3:	dec    esp
  4098d4:	or     eax,0xa6c1009b
  4098d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098da:	inc    ecx
  4098db:	jmp    0xb205e730
  4098e0:	add    dl,BYTE PTR [esi+edi*8]
  4098e3:	mov    ah,0xd5
  4098e5:	sti    
  4098e6:	xchg   ebp,eax
  4098e7:	aaa    
  4098e8:	pop    ecx
  4098e9:	adc    al,0x68
  4098eb:	cmp    ebp,ebp
  4098ed:	call   0xe941:0xa7e29100
  4098f4:	and    BYTE PTR [esi-0x3b],cl
  4098f7:	mov    eax,ds:0x94fe1382
  4098fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fd:	sti    
  4098fe:	jge    0x409907
  409900:	sub    DWORD PTR [eax+ebp*2],edx
  409903:	(bad)  
  409904:	ins    BYTE PTR es:[edi],dx
  409905:	call   0xe941:0xa7e28100
  40990c:	adc    BYTE PTR [esi-0x3b],cl
  40990f:	xor    DWORD PTR [ebx+0x54fe13],eax
	...
  40993d:	add    BYTE PTR [edx-0x5],dh
  409940:	xlat   BYTE PTR gs:[ebx]
  409942:	fcom   DWORD PTR [ebx]
  409944:	push   0x9a8cb2
  409949:	push   ecx
  40994a:	add    DWORD PTR [eax+0x4de0e941],ebp
  409950:	lds    esp,FWORD PTR [ecx]
  409952:	adc    DWORD PTR [ebx],0xfffffffe
  409955:	xor    al,0x42
  409957:	sti    
  409958:	dec    ebp
  409959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40995a:	test   al,0x12
  40995c:	push   0x9c0c8c
  409961:	add    DWORD PTR [ecx-0x6f16be52],eax
  409967:	dec    eax
  409968:	lds    eax,FWORD PTR [eax]
  40996a:	dec    edi
  40996b:	sbb    bh,bh
  40996d:	dec    BYTE PTR [edx]
  40996f:	pop    ss
  409970:	out    0x36,eax
  409972:	xchg   ecx,eax
  409973:	cmp    edi,0x402d8568
  409979:	add    BYTE PTR [edi],cl
  40997b:	call   0xc535:0x81e74153
  409982:	lahf   
  409983:	pop    ss
  409984:	(bad)  
  409985:	dec    BYTE PTR [edx]
  409987:	pop    ss
  409988:	out    0x1e,eax
  40998a:	add    DWORD PTR [ecx+0x2d1068ff],0x99ff0040
  409994:	push   ebx
  409995:	inc    ecx
  409996:	xlat   BYTE PTR ds:[ebx]
  409997:	xor    DWORD PTR ds:0xff17efc5,0xe716cafe
  4099a1:	push   es
	...
  4099ca:	add    BYTE PTR [eax],al
  4099cc:	push   ecx
  4099cd:	cmp    edi,0x402d6c68
  4099d3:	add    BYTE PTR [edi-0x58bead49],ch
  4099d9:	add    DWORD PTR ss:[eax],eax
  4099dc:	xchg   edi,eax
  4099dd:	fdivp  st(6),st
  4099df:	jne    0x409980
  4099e1:	mov    dh,0xef
  4099e3:	std    
  4099e4:	pusha  
  4099e5:	sub    BYTE PTR [eax-0x13],0x34
  4099e9:	push   ds
  4099ea:	jmp    DWORD PTR [edi-0x36]
  4099ed:	sub    al,0x40
  4099ef:	add    bh,bh
  4099f1:	pop    esp
  4099f2:	add    BYTE PTR [eax],al
  4099f4:	out    0x7f,eax
  4099f6:	jne    0x409a00
  4099f8:	outs   dx,DWORD PTR ds:[esi]
  4099f9:	lahf   
  4099fa:	std    
  4099fb:	call   DWORD PTR [eax+0x1653f12f]
  409a01:	push   edi
  409a02:	push   0xff1e74a1
  409a07:	addr16 and eax,0x3e80005e
  409a0d:	jmp    0xc356a208
  409a12:	outs   dx,BYTE PTR ds:[esi]
  409a13:	call   FWORD PTR [ecx]
  409a15:	ins    BYTE PTR es:[edi],dx
  409a16:	ins    DWORD PTR es:[edi],dx
  409a17:	push   ebx
  409a18:	jg     0x409a1e
  409a1a:	(bad)  [eax+0x6804436d]
  409a20:	cmp    al,0x4
  409a22:	add    eax,DWORD PTR [eax-0x1804d107]
  409a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a29:	scas   al,BYTE PTR es:[edi]
  409a2a:	ins    DWORD PTR es:[edi],dx
  409a2b:	call   DWORD PTR [esi+0x4d]
  409a2e:	rol    DWORD PTR [eax+0x0],1
	...
  409a59:	add    BYTE PTR [esi],bh
  409a5b:	sbb    al,0x44
  409a5d:	push   ebx
  409a5e:	jg     0x409a64
  409a60:	fild   DWORD PTR [ecx]
  409a62:	ds add al,0x83
  409a65:	call   DWORD PTR [ebx-0x4]
  409a68:	pop    edx
  409a69:	xchg   ebx,eax
  409a6a:	ret    
  409a6b:	inc    eax
  409a6c:	ins    DWORD PTR es:[edi],dx
  409a6d:	push   0xffc1d4ab
  409a72:	sbb    DWORD PTR [ecx],edi
  409a74:	rol    DWORD PTR [eax+0x3e],1
  409a77:	fadd   QWORD PTR [eax]
  409a79:	add    BYTE PTR [esi],bh
  409a7b:	test   BYTE PTR [ebp+0x75],ch
  409a7e:	inc    esi
  409a7f:	ins    BYTE PTR es:[edi],dx
  409a80:	lock cld 
  409a82:	xchg   ecx,eax
  409a83:	adc    bl,bl
  409a85:	icebp  
  409a86:	in     eax,dx
  409a87:	ret    0x6802
  409a8a:	jns    0x409a80
  409a8c:	sar    edi,0xe1
  409a8f:	add    eax,0x30be0003
  409a94:	test   BYTE PTR [edi],0x56
  409a97:	sahf   
  409a98:	outs   dx,DWORD PTR ds:[esi]
  409a99:	jmp    DWORD PTR [ecx-0x65]
  409a9c:	ins    DWORD PTR es:[edi],dx
  409a9d:	push   ebx
  409a9e:	inc    DWORD PTR [ebx]
  409aa0:	fcmovnb st,st(6)
  409aa2:	in     eax,dx
  409aa3:	inc    edx
  409aa4:	add    al,0x68
  409aa6:	cmp    al,0x4
  409aa8:	add    eax,DWORD PTR [eax-0x1803b9bf]
  409aae:	mov    BYTE PTR [ebx-0x5c],bl
  409ab1:	ins    BYTE PTR es:[edi],dx
  409ab2:	xor    DWORD PTR [esi+0x63b36d03],eax
  409ab8:	cmp    edx,0xd98e1123
	...
  409ae6:	add    BYTE PTR [eax],al
  409ae8:	pop    esp
  409ae9:	adc    ah,bh
  409aeb:	sti    
  409aec:	sbb    DWORD PTR [ecx],edx
  409aee:	jl     0x409b5c
  409af0:	or     DWORD PTR [esi+0x638b6cd5],eax
  409af6:	xor    DWORD PTR [esi-0x5],0x6b6c6610
  409afd:	divps  xmm6,xmm6
  409b00:	inc    ecx
  409b01:	add    edx,DWORD PTR [ebx]
  409b03:	inc    esp
  409b04:	loope  0x409b16
  409b06:	and    BYTE PTR [ecx+0x42],al
  409b09:	pop    ebx
  409b0a:	pushf  
  409b0b:	js     0x409aef
  409b0d:	fdivr  QWORD PTR [ebx-0x35733601]
  409b13:	(bad)  [ecx-0x59]
  409b16:	test   al,0x3
  409b18:	mov    ecx,0xff5bf586
  409b1d:	sbb    BYTE PTR [esi],bl
  409b1f:	ins    BYTE PTR es:[edi],dx
  409b20:	push   cs
  409b21:	sub    ecx,0x3
  409b24:	xchg   ecx,eax
  409b25:	sar    DWORD PTR [eax+0x1163136c],1
  409b2b:	mov    ds:0x5afe10a6,eax
  409b30:	mov    eax,0x166bf61d
  409b35:	jp     0x409acc
  409b37:	ret    0x1179
  409b3a:	pop    esp
  409b3b:	clc    
  409b3c:	pop    ecx
  409b3d:	cmp    esp,DWORD PTR [edi+0x41ab696b]
  409b43:	add    eax,0xd48f003e
  409b48:	pop    eax
  409b49:	xchg   cl,dh
  409b4b:	pop    ebx
	...
  409b74:	add    BYTE PTR [eax],al
  409b76:	rol    DWORD PTR [edx],1
  409b78:	mov    esi,0x7e566b
  409b7d:	stos   DWORD PTR es:[edi],eax
  409b7e:	aad    0xf
  409b80:	push   0x9b0e35
  409b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b86:	das    
  409b87:	fs call 0xff511b2b
  409b8d:	cmp    DWORD PTR [edx],eax
  409b8f:	pop    edx
  409b90:	add    BYTE PTR [esi-0x1c],bh
  409b93:	stos   BYTE PTR es:[edi],al
  409b94:	(bad)  
  409b95:	cld    
  409b96:	adc    eax,0x95915df8
  409b9b:	adc    al,ch
  409b9d:	and    eax,0xa0ff1078
  409ba2:	and    BYTE PTR [ebx+0x0],0xbc
  409ba6:	jo     0x409ba7
  409ba8:	(bad)  
  409ba9:	aam    0xf1
  409bab:	not    DWORD PTR [edi+ebp*1+0x290b1055]
  409bb2:	into   
  409bb3:	jno    0x409c1d
  409bb5:	lods   al,BYTE PTR ds:[esi]
  409bb6:	add    DWORD PTR [ebx+0x3a659900],ebx
  409bbc:	(bad)  
  409bbd:	ss push ebp
  409bbf:	stos   DWORD PTR es:[edi],eax
  409bc0:	push   eax
  409bc1:	cs scas eax,DWORD PTR es:[edi]
  409bc3:	push   edi
  409bc4:	call   0xff50c05e
  409bc9:	adc    DWORD PTR ds:0x6316ff1d,esi
  409bcf:	sbb    eax,0xe46ee908
  409bd4:	jmp    0x409c40
  409bd6:	(bad)  
  409bd7:	cli    
  409bd8:	imul   ebp,ecx,0x0
	...
  409c02:	add    BYTE PTR [eax],al
  409c04:	adc    al,0x86
  409c06:	adc    dh,dh
  409c08:	mov    fs,WORD PTR [ebx-0x1]
  409c0b:	mov    ah,0xfe
  409c0d:	mov    ds:0x7515e941,al
  409c12:	(bad)
  409c15:	loope  0x409c5b
  409c17:	fld    QWORD PTR [ebx+0x2e54fe0f]
  409c1d:	adc    BYTE PTR [ebp+0x0],dh
  409c20:	dec    ebx
  409c21:	test   BYTE PTR ds:0xff160fc5,dh
  409c27:	out    0x53,eax
  409c29:	call   0x6afb:0x1b9effff
  409c30:	daa    
  409c31:	xor    BYTE PTR [ebp+0x18],0xc8
  409c35:	or     ecx,DWORD PTR [ebx]
  409c37:	inc    DWORD PTR [edx]
  409c39:	pushf  
  409c3a:	dec    eax
  409c3b:	inc    ecx
  409c3c:	daa    
  409c3d:	mov    bl,0xee
  409c3f:	les    edi,FWORD PTR [eax-0x40ba767f]
  409c45:	xchg   ebx,eax
  409c46:	inc    ebp
  409c47:	call   0x1cb61e73
  409c4c:	push   0x52ff0b0b
  409c51:	pushf  
  409c52:	dec    eax
  409c53:	inc    ecx
  409c54:	xlat   BYTE PTR ds:[ebx]
  409c55:	mov    dl,0xd6
  409c57:	les    ecx,FWORD PTR [eax+0x77458981]
  409c5d:	xor    bh,bh
  409c5f:	(bad)  
  409c60:	xchg   edx,eax
  409c61:	cmp    bh,bh
  409c63:	jne    0x409c40
  409c65:	xor    DWORD PTR ds:0xc5,0x0
	...
  409c8f:	add    BYTE PTR [eax],al
  409c91:	add    BYTE PTR [edi+0x67e7ff17],bl
  409c97:	dec    esi
  409c98:	(bad)  
  409c99:	jmp    FWORD PTR [esi]
  409c9b:	sbb    ebp,ebx
  409c9d:	(bad)  
  409c9e:	loop   0x409d1a
  409ca0:	push   eax
  409ca1:	inc    edx
  409ca3:	outs   dx,BYTE PTR ds:[esi]
  409ca4:	push   DWORD PTR [ebp+0x7b]
  409ca7:	xor    DWORD PTR ds:0xff17cfc5,0xff4defe7
  409cb1:	call   FWORD PTR [esi]
  409cb3:	sbb    esp,ebx
  409cb5:	sub    edx,0x75
  409cb8:	add    BYTE PTR [edi],cl
  409cba:	jecxz  0x409ca6
  409cbc:	(bad)  
  409cbd:	call   DWORD PTR [edi-0x29]
  409cc0:	jl     0x409cba
  409cc2:	ds add al,0xf8
  409cc5:	add    esp,0x4
  409cc8:	add    eax,DWORD PTR [eax]
  409cca:	mov    ebp,0x39007097
  409ccf:	js     0x409c55
  409cd1:	add    BYTE PTR [esi],bh
  409cd3:	add    al,0x68
  409cd5:	jne    0x409d3d
  409cd7:	mov    ebp,0xf2607ee
  409cdc:	test   eax,0xeeed29ff
  409ce1:	sti    
  409ce2:	and    DWORD PTR [edi-0x4],ebp
  409ce5:	out    0xaa,eax
  409ce7:	sahf   
  409ce8:	imul   edi,edi,0xff6b0f11
  409cee:	xchg   ebx,eax
  409cef:	or     al,0x5b
  409cf1:	popa   
  409cf2:	rol    BYTE PTR [ecx+ebp*2+0xff],0x0
	...
  409d1e:	add    BYTE PTR [eax],al
  409d20:	jae    0x409caa
  409d22:	imul   esi,DWORD PTR [ebp+0x46],0xe9bdd2ac
  409d29:	lods   al,BYTE PTR ds:[esi]
  409d2a:	cmp    DWORD PTR [ebp+0x16],0x11
  409d2e:	add    ebp,edi
  409d30:	cwde   
  409d31:	es idiv dh
  409d34:	dec    ebx
  409d35:	push   esp
  409d36:	imul   esi,DWORD PTR [ebp+0x36],0xc1bdc6ac
  409d3d:	inc    esp
  409d3e:	pop    ebp
  409d3f:	push   cs
  409d40:	mov    ecx,0x2bff5ac6
  409d45:	je     0x409db0
  409d47:	jne    0x409d7f
  409d49:	ins    BYTE PTR es:[edi],dx
  409d4a:	add    bh,BYTE PTR [esi+0x756964a1]
  409d50:	stos   BYTE PTR es:[edi],al
  409d51:	pop    esp
  409d52:	out    dx,eax
  409d53:	pop    es
  409d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d55:	sbb    al,0xa9
  409d57:	dec    DWORD PTR [ecx+0x3ee3e780]
  409d5d:	nop
  409d5e:	push   cs
  409d5f:	cmp    ebx,0x63
  409d62:	add    BYTE PTR [ebp+0x41],dh
  409d65:	pop    ebx
  409d66:	jb     0x409d26
  409d68:	pop    ebp
  409d69:	or     eax,0x62eb6919
  409d6e:	rcl    DWORD PTR [edi+0x5cce0d9b],0x44
  409d75:	sub    ecx,0xd162d368
  409d7b:	mov    ds:0x68b60d83,eax
  409d80:	mov    bl,0x7
  409d82:	shl    DWORD PTR [eax+0x0],0x0
	...
  409dae:	dec    BYTE PTR [esi+eiz*4]
  409db1:	push   0x48910fb3
  409db6:	dec    BYTE PTR [esi+edx*4]
  409db9:	push   0x50811393
  409dbe:	dec    BYTE PTR [esi+eax*4]
  409dc1:	push   0x38910b93
  409dc6:	dec    BYTE PTR [esi+esi*2]
  409dc9:	push   0x4080ff73
  409dce:	dec    BYTE PTR [esi+eiz*2]
  409dd1:	push   0xa850f773
  409dd6:	dec    BYTE PTR [esi+edx*2]
  409dd9:	cmp    bh,ah
  409ddb:	aaa    
  409ddc:	jmp    0x684062af
  409de1:	aas    
  409de2:	into   
  409de3:	add    al,0x3e
  409de5:	push   0x58e96856
  409dea:	clc    
  409deb:	adc    DWORD PTR [edx],0xffffffcf
  409dee:	(bad)  
  409def:	pop    edx
  409df0:	xchg   ecx,eax
  409df1:	push   ebx
  409df2:	adc    bl,BYTE PTR [edx-0x588b2417]
  409df8:	test   al,0x3
  409dfa:	sbb    dh,BYTE PTR es:[ebp+0x457491c2]
  409e01:	iret   
  409e02:	(bad)  
  409e03:	pop    edx
  409e04:	xchg   ecx,eax
  409e05:	inc    ecx
  409e06:	jmp    0xc85:0xe6e90099
  409e0d:	out    dx,al
  409e0e:	arpl   WORD PTR [eax+ebp*8+0x50],dx
	...
  409e3a:	add    BYTE PTR [eax],al
  409e3c:	loopne 0x409e49
  409e3e:	call   DWORD PTR [ecx+0x4d]
  409e41:	pop    ebx
  409e42:	out    dx,eax
  409e43:	xchg   edi,eax
  409e44:	jp     0x409eb6
  409e46:	push   ebp
  409e47:	sub    BYTE PTR [edx],bh
  409e49:	adc    DWORD PTR [edi],0x1c
  409e4c:	or     DWORD PTR [edi+eiz*2],0xfffffff2
  409e50:	outs   dx,BYTE PTR ds:[esi]
  409e51:	fwait
  409e52:	add    BYTE PTR [ecx-0x53],al
  409e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e56:	inc    ecx
  409e57:	jmp    0x28949371
  409e5c:	inc    edx
  409e5d:	cmp    edi,0x35
  409e60:	sti    
  409e61:	or     edi,esi
  409e63:	sbb    al,0x16
  409e65:	or     eax,0x5075e175
  409e6a:	inc    BYTE PTR [esi-0x16eb7c5f]
  409e70:	push   0xef567cd
  409e75:	fwait
  409e76:	add    BYTE PTR [ecx],al
  409e78:	adc    eax,0x5e941a7
  409e7d:	mov    dl,0x55
  409e7f:	test   al,0x3d
  409e81:	cmp    DWORD PTR [eax],0xffffffbc
  409e84:	add    cl,BYTE PTR [edi+eiz*2]
  409e87:	push   es
  409e88:	out    dx,eax
  409e89:	call   0xe941:0xa68ad100
  409e90:	pop    eax
  409e91:	xchg   BYTE PTR [esi+esi*1],cl
  409e94:	scas   eax,DWORD PTR es:[edi]
  409e95:	push   ebx
  409e96:	call   0xff4cba77
  409e9b:	je     0x409f1c
  409e9d:	(bad)  
  409e9f:	push   ds
	...
  409ec8:	add    BYTE PTR [eax],al
  409eca:	scas   eax,DWORD PTR es:[edi]
  409ecb:	pop    edi
  409ecc:	(bad)  
  409ecd:	fdiv   st(6),st
  409ecf:	mov    ds:0xa2f5e941,al
  409ed4:	lods   al,BYTE PTR ds:[esi]
  409ed5:	add    BYTE PTR [edi+0xac00b57],dl
  409edb:	add    al,dh
  409edd:	inc    ebp
  409ede:	outs   dx,DWORD PTR ds:[esi]
  409edf:	push   edi
  409ee0:	add    BYTE PTR [eax],al
  409ee2:	addr16 dec esp
  409ee4:	inc    ebp
  409ee5:	hlt    
  409ee6:	pusha  
  409ee7:	or     al,0xff
  409ee9:	dec    DWORD PTR ds:0xfd006a57
  409eef:	push   esi
  409ef0:	push   0x0
  409ef2:	repnz sbb dh,bl
  409ef5:	push   eax
  409ef6:	rcr    dl,cl
  409ef8:	repz test DWORD PTR [eax+0x7aff5074],0xe375ff77
  409f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f04:	push   ds
  409f05:	lods   al,BYTE PTR ds:[esi]
  409f06:	pop    ss
  409f07:	pop    edi
  409f08:	or     eax,eax
  409f0a:	dec    ebx
  409f0b:	pop    ebp
  409f0c:	jmp    0x409f4e
  409f0e:	aas    
  409f0f:	rol    BYTE PTR [edi+0x41],0x27
  409f13:	xor    BYTE PTR [ebp+0xc],0xaf
  409f17:	or     al,0xc2
  409f19:	inc    DWORD PTR [eax+0x6a8dd085]
  409f1f:	jp     0x409f18
  409f21:	jmp    DWORD PTR [eax+0x2e]
  409f24:	push   ecx
  409f25:	call   0x403cf2
  409f2a:	outs   dx,BYTE PTR ds:[esi]
  409f2b:	fucomi st,st(7)
  409f2d:	test   DWORD PTR [eax],0x0
	...
  409f57:	add    BYTE PTR [eax-0x7f],dh
  409f5a:	push   DWORD PTR [ebp-0x8689]
  409f60:	or     BYTE PTR [ebx],0x7
  409f63:	call   0x401f72
  409f68:	jo     0x409f35
  409f6a:	out    dx,eax
  409f6b:	mul    DWORD PTR [eax-0x7f]
  409f6e:	call   0xffc1c018
  409f73:	(bad)  
  409f74:	fidiv  DWORD PTR [esi-0x15]
  409f77:	xchg   ebp,eax
  409f78:	ds jno 0x409f6b
  409f7b:	sti    
  409f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7d:	inc    eax
  409f7e:	call   0x3e08:0x414b3e00
  409f85:	out    dx,eax
  409f86:	jns    0x409f74
  409f88:	mov    ebp,0x3e6a6738
  409f8d:	fdivp  st(4),st
  409f8f:	(bad)  
  409f90:	repz or ebx,DWORD PTR [ebx-0x46]
  409f94:	mov    ds:0x3896529,al
  409f99:	xor    ah,bl
  409f9b:	sub    dl,0x32
  409f9e:	add    al,0xff
  409fa0:	ror    DWORD PTR [ebx],cl
  409fa2:	pop    ebx
  409fa3:	mov    bh,0x40
  409fa5:	leave  
  409fa6:	fs push 0x3e
  409fa9:	pushf  
  409faa:	mov    ah,0x54
  409fac:	jg     0x409fa2
  409fae:	fiadd  DWORD PTR [edx-0xfbcc6e]
  409fb4:	imul   edi,DWORD PTR [edi-0x23c1bf45],0xfffffff0
  409fbb:	rol    DWORD PTR [eax],0x0
	...
  409fe6:	adc    ecx,ebx
  409fe8:	clc    
  409fe9:	mov    edi,0x4fd31192
  409fee:	add    DWORD PTR [edi],ecx
  409ff0:	sti    
  409ff1:	out    0xd3,eax
  409ff3:	(bad)  
  409ff4:	gs jmp esi
  409ff7:	cmp    esp,DWORD PTR [ebp+0x32de9ff]
  409ffd:	push   0xffc1cb9d
  40a002:	popa   
  40a003:	mov    dl,al
  40a005:	inc    eax
  40a006:	ds cdq 
  40a008:	das    
  40a009:	lds    esi,FWORD PTR [esi-0x4d]
  40a00c:	add    ch,al
  40a00e:	ja     0x40a046
  40a010:	inc    DWORD PTR gs:[ebp+0x34]
  40a014:	lock push cs
  40a016:	push   cs
  40a017:	in     al,0x63
  40a019:	jne    0x40a051
  40a01b:	pop    ebx
  40a01c:	adc    ecx,ebx
  40a01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a01f:	or     DWORD PTR [esi],ebx
  40a021:	pop    esp
  40a022:	cmp    dl,cl
  40a024:	adc    eax,0x815b2465
  40a029:	mov    bl,0xf2
  40a02b:	fwait
  40a02c:	jmp    0xa8ef5d0c
  40a031:	add    esp,esi
  40a033:	pop    esp
  40a034:	jmp    0xc9335e3c
  40a039:	inc    ecx
  40a03a:	imul   ecx,DWORD PTR [ecx],0x59ea43f2
  40a040:	cmp    esp,edx
  40a042:	pop    eax
  40a043:	(bad)  
  40a044:	loope  0x40a0a1
  40a046:	cld    
  40a047:	push   es
  40a048:	into   
  40a049:	add    BYTE PTR fs:[eax],al
	...
  40a074:	push   esi
  40a075:	ja     0xe9b4e1df
  40a07b:	fcmovnu st,st(4)
  40a07d:	xchg   ebx,eax
  40a07e:	sub    BYTE PTR [esi+eiz*4],al
  40a081:	icebp  
  40a082:	adc    al,0xc3
  40a084:	sub    DWORD PTR [ecx-0x24c1fc15],eax
  40a08a:	nop
  40a08b:	ins    BYTE PTR es:[edi],dx
  40a08c:	dec    DWORD PTR [eax]
  40a08e:	xchg   esi,eax
  40a08f:	clc    
  40a090:	ror    DWORD PTR [edi+0x879d3de],1
  40a096:	cld    
  40a097:	sti    
  40a098:	sbb    DWORD PTR [ebx+0x7d],esp
  40a09b:	fs stc 
  40a09d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a09f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a0:	icebp  
  40a0a1:	or     BYTE PTR [ebx],al
  40a0a3:	or     ch,cl
  40a0a5:	mov    ?,ecx
  40a0a7:	pop    ebx
  40a0a8:	fs pop es
  40a0aa:	pop    esi
  40a0ab:	fs fs cmp al,0x56
  40a0af:	out    dx,al
  40a0b0:	cmp    ebx,esi
  40a0b2:	fsub   DWORD PTR [edi-0x37]
  40a0b5:	or     bl,dl
  40a0b7:	pop    es
  40a0b8:	ror    DWORD PTR [esi+0x7205bf1],0x0
  40a0bf:	sbb    cl,BYTE PTR ss:[eax]
  40a0c2:	jne    0x40a0f1
  40a0c4:	and    cl,BYTE PTR [esi-0x38a3eef8]
  40a0ca:	(bad)  
  40a0cb:	push   ds
  40a0cc:	push   esp
  40a0cd:	sbb    eax,0xd580e904
  40a0d2:	jmp    0x40a13e
  40a0d4:	dec    ecx
  40a0d5:	pop    es
  40a0d6:	push   esi
  40a0d7:	sahf   
	...
  40a100:	add    BYTE PTR [eax],al
  40a102:	or     BYTE PTR [bx+di-0x1a],ch
  40a106:	loop   0x40a095
  40a108:	or     BYTE PTR [ecx],al
  40a10a:	inc    bl
  40a10c:	(bad)  
  40a10d:	out    dx,al
  40a10e:	out    0x9d,eax
  40a110:	cld    
  40a111:	jb     0x40a15a
  40a113:	xchg   edx,eax
  40a114:	dec    eax
  40a115:	sub    BYTE PTR [edx-0x2c],al
  40a118:	cmp    al,0x24
  40a11a:	sbb    BYTE PTR [ebx+0x5b1d6900],0x74
  40a121:	cmp    dl,BYTE PTR [edx-0x29]
  40a124:	push   esp
  40a125:	sub    BYTE PTR [edx-0x50],al
  40a128:	call   0x9b81f6
  40a12d:	loop   0x40a1ac
  40a12f:	(bad)  
  40a130:	pop    ds
  40a131:	aas    
  40a132:	xchg   edx,eax
  40a133:	dec    edi
  40a134:	enter  0x9d9e,0xab
  40a138:	push   0xbdf83de9
  40a13d:	add    ebx,ebx
  40a13f:	lods   eax,DWORD PTR ds:[esi]
  40a140:	inc    ecx
  40a141:	jmp    0xf1b5aa13
  40a146:	gs fwait
  40a148:	out    0x76,eax
  40a14a:	pop    ebp
  40a14b:	repz dec eax
  40a14d:	das    
  40a14e:	pop    ebp
  40a14f:	or     BYTE PTR [eax-0x7e],ch
  40a152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a153:	call   0xe9a9:0xcd65b600
  40a15a:	cmp    eax,0x3cd5c054
  40a15f:	mov    cl,0xe8
  40a161:	add    cl,dl
  40a163:	xchg   ebx,eax
  40a164:	(bad)  
  40a165:	inc    DWORD PTR [eax]
	...
  40a18f:	add    bh,dl
  40a191:	repz (bad) 
  40a193:	(bad)  
  40a194:	clc    
  40a195:	mov    esp,0x1ed2a967
  40a19a:	dec    DWORD PTR [edi+0x58]
  40a19d:	and    al,BYTE PTR [edi]
  40a19f:	call   0x401639
  40a1a4:	aas    
  40a1a5:	or     BYTE PTR [ebp+0x17838ff],bh
  40a1ab:	inc    esi
  40a1ac:	pop    ss
  40a1ad:	cmp    eax,0x153d7500
  40a1b2:	sti    
  40a1b3:	xor    esp,DWORD PTR [edi]
  40a1b5:	out    0xfe,al
  40a1b7:	call   FWORD PTR [eax+0x7c]
  40a1ba:	repnz scas al,BYTE PTR es:[edi]
  40a1bc:	pop    ds
  40a1bd:	push   esp
  40a1be:	jne    0x40a14d
  40a1c0:	js     0x40a1e4
  40a1c2:	sti    
  40a1c3:	push   edx
  40a1c5:	push   esi
  40a1c6:	call   0xffbd4e42
  40a1cb:	pop    edi
  40a1cc:	sbb    DWORD PTR [esi-0x3bd8fb3e],edx
  40a1d2:	mov    esp,ebp
  40a1d4:	jg     0x40a235
  40a1d6:	add    bh,ch
  40a1d8:	cdq    
  40a1d9:	repnz leave 
  40a1db:	push   ebp
  40a1dc:	push   esi
  40a1dd:	pop    edi
  40a1de:	push   DWORD PTR [ebp+0x2b]
  40a1e1:	jp     0x40a258
  40a1e3:	or     BYTE PTR [edi-0x47001955],bh
  40a1e9:	repnz (bad) 
  40a1eb:	jmp    FWORD PTR [eax+0x52d067bc]
  40a1f1:	and    bh,bh
  40a1f3:	inc    BYTE PTR [eax]
	...
  40a21d:	add    dl,dh
  40a21f:	push   esi
  40a220:	push   DWORD PTR [ebp-0x21]
  40a223:	jb     0x40a1dd
  40a225:	out    0x58,al
  40a227:	jns    0x40a1f2
  40a229:	ret    0x5acf
  40a22c:	push   ebp
  40a22d:	mov    edi,DWORD PTR [esi]
  40a22f:	mov    al,ds:0x9c3a7562
  40a234:	adc    al,dl
  40a236:	rcr    DWORD PTR [ebp-0x5cd3ff2],0xea
  40a23d:	mov    ah,0xb
  40a23f:	mov    bl,0x2
  40a241:	push   eax
  40a242:	xchg   esi,eax
  40a243:	test   eax,0xc4a1ff44
  40a248:	mov    dl,0xfe
  40a24a:	adc    ecx,DWORD PTR [ebx+ebp*2]
  40a24d:	stos   DWORD PTR es:[edi],eax
  40a24e:	xchg   ecx,eax
  40a24f:	ins    DWORD PTR es:[edi],dx
  40a250:	(bad)  
  40a251:	call   0xffa339fd
  40a256:	ja     0x40a28a
  40a258:	or     eax,DWORD PTR [eax]
  40a25a:	adc    ecx,DWORD PTR [ecx+0x107a836f]
  40a260:	in     al,dx
  40a261:	call   edi
  40a263:	sti    
  40a264:	popa   
  40a265:	jne    0x40a29d
  40a267:	sub    al,0x9d
  40a269:	mov    edx,0x458b2559
  40a26e:	push   edx
  40a26f:	call   0xffc3:0x4e966804
  40a276:	(bad)  
  40a278:	mov    dh,0x40
  40a27a:	lds    edx,FWORD PTR ds:[esi]
  40a27d:	lds    eax,FWORD PTR [esi+0xe80433]
	...
  40a2ab:	add    BYTE PTR [edi+0x35ff60b3],bh
  40a2b1:	mov    ah,0xd7
  40a2b3:	adc    ebp,DWORD PTR [esi+0x6c]
  40a2b6:	add    eax,DWORD PTR [eax]
  40a2b8:	and    DWORD PTR [esi-0x36c014c],ebp
  40a2be:	push   0x63
  40a2c0:	sbb    eax,0x8fe860dd
  40a2c5:	inc    edi
  40a2c6:	popa   
  40a2c7:	jmp    DWORD PTR [esp+esi*8-0x16]
  40a2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2cc:	nop
  40a2cd:	xor    eax,DWORD PTR [eax+ebp*2]
  40a2d0:	in     al,0x5a
  40a2d2:	mov    esp,0x1404d9c2
  40a2d7:	inc    edi
  40a2d8:	xchg   BYTE PTR [ecx+ebp*8+0x4e1b6c6b],bl
  40a2df:	popa   
  40a2e0:	xor    eax,0x9f7bd1b
  40a2e5:	jae    0x40a2cf
  40a2e7:	add    esp,DWORD PTR [ecx+0x336098c4]
  40a2ed:	push   ebx
  40a2ee:	inc    ecx
  40a2ef:	sbb    BYTE PTR [ebp+0x5c6c2605],bl
  40a2f5:	enter  0x611d,0x24
  40a2f9:	pop    ebx
  40a2fa:	sbb    DWORD PTR [ebx-0x14166410],0x3a8ad4d
  40a304:	jns    0x40a355
  40a306:	and    al,0xcc
  40a308:	(bad)  
  40a309:	pop    edx
  40a30a:	add    DWORD PTR ds:0xcee057e,esp
	...
  40a338:	add    BYTE PTR [eax],al
  40a33a:	jle    0x40a2ca
  40a33c:	div    BYTE PTR [ebx+0xc540609]
  40a342:	push   ax
  40a344:	(bad)  
  40a345:	pusha  
  40a346:	dec    ecx
  40a347:	repnz rcr BYTE PTR [edi+0x4530541],1
  40a34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34f:	ret    
  40a350:	push   ss
  40a351:	ret    
  40a352:	xor    DWORD PTR [ebp+0x15],edi
  40a355:	mov    edx,0x16ae5b7e
  40a35a:	sti    
  40a35b:	xchg   ebx,eax
  40a35c:	sub    BYTE PTR [esi+eiz*1],al
  40a35f:	add    ebx,DWORD PTR [esi+0x60]
  40a362:	adc    DWORD PTR [ecx-0x57],edx
  40a365:	xlat   BYTE PTR ds:[ebx]
  40a366:	cmp    BYTE PTR [ebx+0x538b6139],ch
  40a36c:	xchg   ecx,eax
  40a36d:	arpl   ax,di
  40a36f:	add    al,0x7e
  40a371:	imul   eax,DWORD PTR [eax],0xffffffc8
  40a374:	push   DWORD PTR [ebp+0x5e]
  40a377:	jno    0x40a379
  40a379:	add    DWORD PTR [ebp-0x53],edi
  40a37c:	inc    ecx
  40a37d:	jmp    0xa8968767
  40a382:	cmp    eax,0xf52c3504
  40a387:	fwait
  40a388:	add    BYTE PTR [ecx+0x6e],al
  40a38b:	(bad)  
  40a38c:	inc    BYTE PTR [esi+0x4a]
  40a38f:	sbb    esi,DWORD PTR [esi+ebp*8-0x13]
  40a393:	xchg   esp,eax
  40a394:	(bad)  
  40a395:	mov    esp,0x2fb5f335
  40a39a:	push   ds
  40a39b:	add    al,0xe8
  40a39d:	dec    ebp
	...
  40a3c6:	add    BYTE PTR [eax],al
  40a3c8:	mov    ecx,0x9193ff04
  40a3cd:	add    eax,0x2315e175
  40a3d2:	dec    BYTE PTR [esi]
  40a3d4:	push   ds
  40a3d5:	jno    0x40a3f1
  40a3d7:	push   es
  40a3d8:	nop
  40a3d9:	pop    esp
  40a3da:	call   0xff44830e
  40a3df:	and    DWORD PTR [edx],0x4
  40a3e2:	jne    0x40a3c5
  40a3e4:	aad    0x1e
  40a3e6:	(bad)  
  40a3e7:	out    0xf9,al
  40a3e9:	add    esi,DWORD PTR [ebp-0x23]
  40a3ec:	icebp  
  40a3ed:	lea    ecx,[eax]
  40a3ef:	shr    ebx,0xc1
  40a3f2:	dec    dh
  40a3f4:	repz sbb BYTE PTR [ecx+ebp*8],al
  40a3f8:	not    al
  40a3fa:	jmp    0x40a3ba
  40a3fc:	pop    ss
  40a3fd:	push   eax
  40a3fe:	call   0xff4526b0
  40a403:	loop   0x40a482
  40a405:	(bad)  
  40a406:	dec    esi
  40a407:	adc    DWORD PTR [ebp+ebp*4+0x41],ecx
  40a40b:	jmp    0xa9909fdd
  40a410:	imul   eax,DWORD PTR [eax+edx*2],0x7bca39
  40a417:	add    bh,ah
  40a419:	je     0x40a3d9
  40a41b:	push   0x3fcca2
  40a420:	inc    edi
  40a421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a422:	jne    0x40a42c
  40a424:	mov    edi,0x60ffe565
  40a429:	(bad)  
  40a42a:	add    WORD PTR [eax],ax
	...
  40a455:	add    bh,ah
  40a457:	je     0x40a417
  40a459:	push   0x3fcd13
  40a45e:	xchg   DWORD PTR [ebp+esi*2-0x1acdf0f8],esp
  40a465:	push   DWORD PTR [eax-0x39]
  40a468:	data16 add dl,BYTE PTR [edi-0x297418c]
  40a46f:	int3   
  40a470:	aas    
  40a471:	add    bh,dl
  40a473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a474:	jne    0x40a47e
  40a476:	das    
  40a477:	push   cs
  40a478:	in     al,0xff
  40a47a:	xor    BYTE PTR [edi+0x1a],dh
  40a47d:	mov    esp,0xc2c9a430
  40a482:	outs   dx,DWORD PTR ds:[esi]
  40a483:	push   edi
  40a484:	push   ebp
  40a485:	mov    eax,DWORD PTR [ebx-0x28]
  40a488:	ret    
  40a489:	cld    
  40a48a:	mov    ebp,0x50096a57
  40a48f:	and    al,BYTE PTR [edi]
  40a491:	call   0x3f8ab9
  40a496:	into   
  40a497:	adc    bh,bl
  40a499:	push   0x4d
  40a49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49c:	jne    0x40a4a6
  40a49e:	jg     0x40a477
  40a4a0:	(bad)  
  40a4a1:	inc    DWORD PTR [eax]
  40a4a3:	cmc    
  40a4a4:	and    edi,edi
  40a4a6:	push   0x4f
  40a4a8:	call   0xffe29523
  40a4ad:	push   0xfffffff3
  40a4af:	mov    eax,ds:0xf2af0875
  40a4b4:	std    
  40a4b5:	push   DWORD PTR [eax+0xfc75a1]
	...
  40a4e3:	add    BYTE PTR [esi],bh
  40a4e5:	jmp    0x4b56acc1
  40a4ea:	popf   
  40a4eb:	(bad)  
  40a4ec:	stc    
  40a4ed:	retf   
  40a4ee:	inc    eax
  40a4ef:	add    al,0x3e
  40a4f1:	addr16 mov ebp,esp
  40a4f4:	push   esp
  40a4f5:	hlt    
  40a4f6:	jmp    0x3368:0x4338926
  40a4fd:	rol    ebx,0xff
  40a500:	shl    BYTE PTR [edi+0x49],1
  40a503:	dec    eax
  40a504:	jg     0x40a4fa
  40a506:	push   0xffffffd2
  40a508:	adc    BYTE PTR [ecx-0x3f81f4a2],0xf7
  40a50f:	dec    edi
  40a510:	mov    cl,0xc7
  40a512:	repnz (bad) 
  40a514:	xor    edi,eax
  40a516:	mov    dl,0xfe
  40a518:	sub    edi,esp
  40a51a:	push   0xffffff98
  40a51c:	mov    ds:0xdfe85e39,al
  40a521:	jge    0x40a581
  40a523:	call   DWORD PTR [esp+esi*8]
  40a526:	jmp    0x5368:0x2b2e926
  40a52d:	loope  0x40a4f2
  40a52f:	(bad)  
  40a530:	fprem1 
  40a532:	add    al,BYTE PTR [eax]
  40a534:	mov    esi,0x61bea25c
  40a539:	icebp  
  40a53a:	or     al,al
  40a53c:	sar    dh,cl
  40a53e:	mov    dl,0xfe
  40a540:	retf   
  40a541:	add    ebx,DWORD PTR [ebp+esi*2+0x3a]
  40a545:	inc    esp
  40a546:	pop    ebp
  40a547:	jne    0x40a549
	...
  40a571:	add    BYTE PTR [esi],dh
  40a573:	sbb    al,0xeb
  40a575:	jecxz  0x40a5b0
  40a577:	sbb    DWORD PTR [edx+esi*2-0xb],ebp
  40a57b:	rcr    BYTE PTR [edi+edi*8-0x4d],0x24
  40a580:	pop    esp
  40a581:	jne    0x40a5b5
  40a583:	pushf  
  40a584:	or     DWORD PTR [edi+0x7f],edx
  40a587:	pop    ebx
  40a588:	jmp    0x919430e9
  40a58d:	and    BYTE PTR [edx],0x2
  40a590:	xchg   esi,eax
  40a591:	dec    ebx
  40a592:	cld    
  40a593:	dec    esi
  40a594:	jmp    0x6a2f6a4f
  40a599:	dec    eax
  40a59a:	bnd je 0x40a586
  40a59d:	jmp    0xc3ca7d9
  40a5a2:	(bad)  
  40a5a3:	(bad)  [eax]
  40a5a5:	pop    ebp
  40a5a6:	(bad)  
  40a5a8:	stos   DWORD PTR es:[edi],eax
  40a5a9:	pop    edi
  40a5aa:	pop    bx
  40a5ac:	jmp    0x5fb32e1d
  40a5b1:	mov    dh,0x7e
  40a5b3:	pop    ebx
  40a5b4:	dec    esi
  40a5b5:	xlat   BYTE PTR ds:[ebx]
  40a5b6:	inc    ecx
  40a5b7:	repz enter 0xb15c,0x1
  40a5bc:	rol    DWORD PTR [edx],1
  40a5be:	ds bnd jbe 0x40a5ae
  40a5c2:	ds stos BYTE PTR es:[edi],al
  40a5c4:	test   al,0x3
  40a5c6:	cdq    
  40a5c7:	xchg   ecx,esi
  40a5c9:	imul   eax,DWORD PTR [eax],0x2
  40a5cc:	push   ds
  40a5cd:	pop    ebp
  40a5ce:	mov    DWORD PTR [edi+0x530b5d15],eax
  40a5d4:	add    DWORD PTR [edi+0x0],esi
	...
  40a5ff:	add    BYTE PTR [esi+0x7c4b0601],dh
  40a605:	push   esi
  40a606:	jmp    0x682f5ac1
  40a60b:	dec    eax
  40a60c:	xchg   BYTE PTR [ecx],cl
  40a60e:	out    dx,al
  40a60f:	pop    esp
  40a610:	retf   
  40a611:	xchg   edi,eax
  40a612:	in     eax,0xb3
  40a614:	push   eax
  40a615:	xchg   ebp,ebp
  40a617:	pop    esp
  40a618:	adc    ebx,DWORD PTR [eax]
  40a61a:	and    ebx,eax
  40a61c:	inc    ecx
  40a61d:	stc    
  40a61e:	add    ah,BYTE PTR [ebp+0x43f25b3e]
  40a624:	inc    ecx
  40a625:	(bad)  
  40a626:	mov    al,ds:0x5b3e02
  40a62b:	scas   al,BYTE PTR es:[edi]
  40a62c:	clc    
  40a62d:	or     BYTE PTR [eax],al
  40a62f:	jmp    0x2d080171
  40a634:	jbe    0x40a636
  40a636:	pop    es
  40a637:	jmp    0x3411b79
  40a63c:	cmp    dh,BYTE PTR [ebp+0x0]
  40a63f:	add    eax,DWORD PTR [edx-0x32]
  40a642:	inc    esp
  40a643:	jge    0x40a5f2
  40a645:	iret   
  40a646:	test   BYTE PTR [ebp-0x6e],dh
  40a649:	add    bh,bh
  40a64b:	sbb    DWORD PTR [ebx-0xf91077a],eax
  40a651:	add    al,0xe8
  40a653:	gs fwait
  40a655:	pop    ebx
  40a656:	add    dl,dh
  40a658:	jge    0x40a5e1
  40a65a:	add    eax,0x5a4640
  40a65f:	jmp    0xa8886209
	...
  40a68c:	add    BYTE PTR [eax],al
  40a68e:	cmp    eax,0x15ed7500
  40a693:	mov    ?,WORD PTR [esi-0x7454fdca]
  40a699:	sbb    eax,ecx
  40a69b:	(bad)  
  40a69c:	repz push ds
  40a69e:	repnz dec DWORD PTR [edi-0x45]
  40a6a2:	adc    eax,0xe216be3e
  40a6a7:	rol    DWORD PTR [ecx+ebx*1+0x11ff0012],1
  40a6ae:	out    dx,al
  40a6af:	(bad)  
  40a6b0:	(bad)  
  40a6b1:	(bad)  
  40a6b2:	push   esi
  40a6b3:	add    BYTE PTR [edi+0x6b],ah
  40a6b6:	stos   BYTE PTR es:[edi],al
  40a6b7:	fwait
  40a6b8:	add    dh,ch
  40a6ba:	mov    bl,0xb
  40a6bc:	mul    esi
  40a6be:	cmc    
  40a6bf:	push   DWORD PTR [esp+eiz*4]
  40a6c2:	jp     0x40a65f
  40a6c4:	add    cl,al
  40a6c6:	leave  
  40a6c7:	mov    ebp,0xd5cbcefe
  40a6cc:	jecxz  0x40a6ce
  40a6ce:	lock mov ds:0xf4176aff,eax
  40a6d4:	xchg   edx,eax
  40a6d5:	push   edi
  40a6d6:	push   esi
  40a6d7:	push   edi
  40a6d8:	push   DWORD PTR [ebp-0x5429]
  40a6de:	fsubr  DWORD PTR [ecx-0x3b]
  40a6e1:	dec    eax
  40a6e2:	push   esi
  40a6e3:	push   edi
  40a6e4:	call   0xffe5115e
  40a6e9:	mov    DWORD PTR [edx+0x73],esp
  40a6ec:	idiv   edi
  40a6ee:	mov    eax,0x67fef0
	...
  40a71b:	add    BYTE PTR [esp+ecx*8+0x3f],ch
  40a71f:	add    BYTE PTR [eax-0x16],ch
  40a722:	out    dx,eax
  40a723:	imul   DWORD PTR [eax-0x5c]
  40a726:	push   DWORD PTR ds:0x400f22
  40a72c:	outs   dx,DWORD PTR ds:[esi]
  40a72d:	int3   
  40a72e:	mov    ebx,0x84ce68ff
  40a733:	call   0x6b404b48
  40a738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a739:	repz fwait
  40a73b:	push   edi
  40a73c:	(bad)  
  40a73d:	pop    ebx
  40a73e:	push   DWORD PTR [ebp-0x5399]
  40a744:	push   0xe648c56a
  40a749:	pop    ebx
  40a74a:	call   0xffe49188
  40a74f:	mov    DWORD PTR [edx],edx
  40a751:	ja     0x40a74a
  40a753:	dec    DWORD PTR [eax-0x2e]
  40a756:	test   al,bl
  40a758:	jo     0x40a6fe
  40a75a:	call   DWORD PTR [eax-0x31]
  40a75d:	mov    esp,0xa4574156
  40a762:	mov    ch,0xf0
  40a764:	push   eax
  40a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a766:	(bad)  
  40a767:	push   DWORD PTR [edx]
  40a769:	call   0xbd16:0x73574148
  40a770:	sub    DWORD PTR ds:[edx+0xb],ebx
  40a774:	(bad)  
  40a775:	test   al,0xfd
  40a777:	xor    bl,0xbc
  40a77a:	push   ecx
  40a77b:	jmp    FWORD PTR [ecx]
  40a77d:	stc    
  40a77e:	iret   
  40a77f:	sldt   WORD PTR [eax]
	...
  40a7aa:	and    DWORD PTR ds:0xc5fa858a,eax
  40a7b0:	pop    ecx
  40a7b1:	jmp    FWORD PTR [esi-0x14]
  40a7b4:	gs mov ecx,0x146dde09
  40a7ba:	xor    eax,0x8e05ceb4
  40a7bf:	fdiv   QWORD PTR [ecx]
  40a7c1:	mov    ecx,0x8541d5f1
  40a7c6:	or     al,BYTE PTR [esi-0xbb400a6]
  40a7cc:	add    al,BYTE PTR [eax]
  40a7ce:	mov    ebp,0xd1f75f2f
  40a7d3:	jne    0x40a7d8
  40a7d5:	je     0x40a83a
  40a7d7:	jno    0x40a771
  40a7d9:	in     al,dx
  40a7da:	leave  
  40a7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7dc:	pop    edx
  40a7dd:	add    BYTE PTR [edx],dh
  40a7df:	mov    al,0x85
  40a7e1:	mov    ebp,0xff5a3da6
  40a7e6:	ds enter 0x67b5,0x3e
  40a7eb:	hlt    
  40a7ec:	imul   edi,DWORD PTR [esi-0x17f53867],0xff5a9de8
  40a7f6:	mov    DWORD PTR [edi+0x6581f767],esp
  40a7fc:	pop    edx
  40a7fd:	jne    0x40a845
  40a7ff:	pop    esp
  40a800:	lods   eax,DWORD PTR ds:[esi]
  40a801:	mov    dh,0x71
  40a803:	push   ebp
  40a804:	pop    edx
  40a805:	mov    ch,0x56
  40a807:	add    eax,0x7f61ff59
  40a80c:	or     ebp,eax
	...
  40a836:	add    BYTE PTR [eax],al
  40a838:	mov    edx,0x51ff5a46
  40a83d:	pop    ebx
  40a83e:	pushf  
  40a83f:	pusha  
  40a840:	push   ecx
  40a841:	(bad)  
  40a842:	fstp   QWORD PTR [ecx-0x35]
  40a845:	push   edx
  40a846:	ror    DWORD PTR [edx+0x59cdfdf0],0xeb
  40a84d:	cli    
  40a84e:	mov    ebp,0x33fe2959
  40a853:	or     al,0x16
  40a855:	fstp   TBYTE PTR [esi+0x59]
  40a858:	sbb    esi,edi
  40a85a:	jae    0x40a894
  40a85c:	or     esi,edi
  40a85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a85f:	pop    ecx
  40a860:	xchg   ebx,eax
  40a861:	push   ebx
  40a862:	xchg   ecx,eax
  40a863:	hlt    
  40a864:	retf   
  40a865:	std    
  40a866:	xchg   ebp,eax
  40a867:	pop    ecx
  40a868:	mov    bl,0xf6
  40a86a:	xchg   ebp,eax
  40a86b:	pop    ecx
  40a86c:	icebp  
  40a86d:	repnz sbb al,0x9b
  40a870:	jmp    0xd2d02672
  40a875:	add    eax,0x93e65976
  40a87a:	xor    BYTE PTR [ecx-0x2f],bl
  40a87d:	std    
  40a87e:	fwait
  40a87f:	ins    BYTE PTR es:[edi],dx
  40a880:	sar    ebp,1
  40a882:	pop    ebp
  40a883:	ins    BYTE PTR es:[edi],dx
  40a884:	add    ah,al
  40a886:	push   ebp
  40a887:	pop    ecx
  40a888:	mov    ecx,0xb15148c7
  40a88d:	std    
  40a88e:	push   eax
  40a88f:	adc    eax,0x593dfde7
  40a894:	jmp    0x40a8a0
  40a896:	ds pop ecx
  40a898:	cdq    
  40a899:	repnz add BYTE PTR [ebx+0x0],bl
	...
  40a8c4:	add    BYTE PTR [eax],al
  40a8c6:	xchg   ecx,eax
  40a8c7:	std    
  40a8c8:	and    eax,0xd5f391bf
  40a8cd:	pop    ecx
  40a8ce:	cmp    ebp,0xf275cf15
  40a8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d5:	sahf   
  40a8d6:	ds pop ebx
  40a8d8:	xor    BYTE PTR [esi+0x36],al
  40a8db:	pop    ebx
  40a8dc:	xchg   esp,eax
  40a8dd:	mov    WORD PTR [edx-0x27],ss
  40a8e0:	jmp    FWORD PTR [edx+edi*8]
  40a8e3:	jo     0x40a8e5
  40a8e5:	add    DWORD PTR [edx-0x2],0x74
  40a8e9:	icebp  
  40a8ea:	aad    0x40
  40a8ec:	mov    dh,0xde
  40a8ee:	out    0xd3,al
  40a8f0:	inc    esp
  40a8f1:	aad    0xc0
  40a8f3:	xchg   esi,eax
  40a8f4:	clc    
  40a8f5:	cmp    DWORD PTR [edx],esp
  40a8f7:	xchg   esi,eax
  40a8f8:	push   edi
  40a8f9:	sub    BYTE PTR [edx+0x73],al
  40a8fc:	xor    edx,DWORD PTR [esi]
  40a8fe:	std    
  40a8ff:	cld    
  40a900:	std    
  40a901:	cld    
  40a902:	pop    eax
  40a903:	xchg   ebx,eax
  40a904:	inc    ecx
  40a905:	jmp    0xa6fba6af
  40a90a:	push   ax
  40a90c:	rcl    BYTE PTR ds:0xe8688d0f,0x3d
  40a913:	in     al,dx
  40a914:	mov    ebp,0x5005008e
  40a919:	xchg   al,bh
  40a91b:	push   esp
  40a91c:	call   0xff3cd092
  40a921:	or     DWORD PTR [edx-0x4791013d],0xb9f896
	...
  40a953:	add    ch,dl
  40a955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a956:	push   edi
  40a957:	test   al,0x3d
  40a959:	jae    0x40a98e
  40a95b:	mov    esi,0x14fdfc7c
  40a960:	jno    0x40a8f5
  40a962:	inc    ecx
  40a963:	jmp    0x3efbba7d
  40a968:	push   es
  40a969:	push   eax
  40a96a:	sar    BYTE PTR [ebp-0x14977372],0x3d
  40a971:	in     al,dx
  40a972:	mov    ebp,0x50047826
  40a977:	push   ds
  40a978:	jo     0x40a9ce
  40a97a:	call   0xff3ce13c
  40a97f:	add    esi,ebp
  40a981:	ret    0xfe
  40a984:	inc    eax
  40a985:	lock fs push edi
  40a988:	xchg   esi,eax
  40a989:	pop    eax
  40a98a:	push   DWORD PTR [ebp+0x5f]
  40a98d:	jo     0x40aa06
  40a98f:	std    
  40a990:	pusha  
  40a991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a992:	push   DWORD PTR [ebp+0x63]
  40a995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a996:	jne    0x40a9a0
  40a998:	outs   dx,DWORD PTR ds:[esi]
  40a999:	mov    ds:0x8e10ffb5,al
  40a99e:	ret    0x2704
  40a9a1:	retf   
  40a9a2:	mov    esp,ebp
  40a9a4:	xchg   esi,eax
  40a9a5:	fdivr  st(7),st
  40a9a8:	loopne 0x40a94d
  40a9aa:	lea    eax,[ebp-0x2d]
  40a9ad:	(bad)  
  40a9ae:	std    
  40a9af:	jne    0x40a9a4
  40a9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b2:	xor    eax,0xff164fc5
  40a9b7:	out    0x0,eax
	...
  40a9e1:	add    BYTE PTR [ebp-0x23000045],al
  40a9e7:	xchg   edi,eax
  40a9e8:	jne    0x40ff94
  40a9ee:	cwde   
  40a9ef:	sbb    edi,esi
  40a9f1:	add    bh,dl
  40a9f3:	push   edi
  40a9f4:	add    bh,al
  40a9f6:	sub    ch,BYTE PTR [ebx+0x57e707ff]
  40a9fc:	push   0x0
  40a9fe:	in     eax,dx
  40a9ff:	push   edi
  40aa00:	push   0x0
  40aa02:	in     eax,dx
  40aa03:	push   edi
  40aa04:	lea    eax,[ebp+0x1b]
  40aa07:	(bad)  
  40aa08:	mov    eax,DWORD PTR [ebp-0x73f5]
  40aa0e:	(bad)  
  40aa0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa10:	jne    0x40aa0a
  40aa12:	pusha  
  40aa13:	sub    bh,bl
  40aa15:	call   0x4085a5
  40aa1a:	pushf  
  40aa1b:	xchg   edi,eax
  40aa1c:	je     0x40aa23
  40aa1e:	fild   DWORD PTR cs:[eax]
  40aa21:	add    BYTE PTR [edi+0x3e489fef],dl
  40aa27:	mov    bl,0x2
  40aa29:	(bad)  
  40aa2a:	jmp    0x40aa49
  40aa2c:	imul   esi,DWORD PTR [ebp+0x505754a5],0xffffffb5
  40aa33:	popa   
  40aa34:	mov    DWORD PTR [ebp-0xaa03ae],eax
  40aa3a:	out    dx,al
  40aa3b:	fild   QWORD PTR [edx-0x5b]
  40aa3e:	test   esp,esi
  40aa40:	push   ebp
  40aa41:	mov    DWORD PTR [ebx+0xff4e21],edi
	...
  40aa6f:	add    BYTE PTR [ecx],bh
  40aa71:	sbb    eax,0x2a31b75a
  40aa76:	jmp    0xae064c7a
  40aa7b:	inc    eax
  40aa7c:	ds mov ecx,0xb211f08f
  40aa82:	push   ebp
  40aa83:	dec    DWORD PTR [ebx-0x41]
  40aa86:	retf   0x3e40
  40aa89:	int3   
  40aa8a:	pop    ecx
  40aa8b:	mov    edx,0x858bda01
  40aa90:	loop   0x40aa6b
  40aa92:	push   ebp
  40aa93:	jmp    DWORD PTR [esp+eax*1-0x15]
  40aa97:	stos   DWORD PTR es:[edi],eax
  40aa98:	xchg   ecx,eax
  40aa99:	inc    ebx
  40aa9a:	add    al,0xff
  40aa9c:	stos   DWORD PTR es:[edi],eax
  40aa9d:	je     0x40aaed
  40aa9f:	(bad)  
  40aaa0:	fnstenv [ecx+0x10]
  40aaa3:	lds    eax,FWORD PTR [esi-0x1417fbbd]
  40aaa9:	mov    esi,0x7fb7ff55
  40aaae:	idiv   DWORD PTR [bx+di-0x166f]
  40aab3:	call   FWORD PTR [ecx]
  40aab5:	iret   
  40aab6:	lods   eax,DWORD PTR ds:[esi]
  40aab7:	inc    eax
  40aab8:	mov    eax,ds:0x39a9f090
  40aabe:	push   esi
  40aabf:	call   DWORD PTR [ebx+0x47]
  40aac2:	retf   
  40aac3:	inc    eax
  40aac4:	ds pushf 
  40aac6:	xchg   esi,eax
  40aac7:	mov    edx,0x8c265b89
  40aacc:	mov    ebx,0x795615fb
  40aad1:	test   ecx,ebp
  40aad3:	jmp    0x40aad5
	...
  40aafd:	add    BYTE PTR [edi+0x6903a892],dh
  40ab03:	mov    al,0xf8
  40ab05:	dec    ebp
  40ab06:	popa   
  40ab07:	cli    
  40ab08:	std    
  40ab09:	jae    0x664453b2
  40ab0f:	mov    esp,0xe4495632
  40ab14:	imul   ebp,DWORD PTR [ecx+ecx*2-0x6],0xffffffdd
  40ab19:	jmp    0x5b7e:0xada58239
  40ab20:	into   
  40ab21:	(bad)  
  40ab22:	repnz lds edx,FWORD PTR cs:[ebp+0x21]
  40ab27:	xor    BYTE PTR [esp+ecx*8-0x7e3ea482],ah
  40ab2e:	aam    0xf9
  40ab30:	lods   eax,DWORD PTR ds:[esi]
  40ab31:	mov    eax,ebx
  40ab33:	push   ss
  40ab34:	sahf   
  40ab35:	push   ebp
  40ab36:	add    esi,ebx
  40ab38:	pop    ebx
  40ab39:	pusha  
  40ab3a:	icebp  
  40ab3b:	stc    
  40ab3c:	xchg   ebp,eax
  40ab3d:	add    al,0x6a
  40ab3f:	sub    BYTE PTR [edx-0x69],0xda
  40ab43:	icebp  
  40ab44:	test   DWORD PTR [ebp+0x3e],edx
  40ab47:	outs   dx,DWORD PTR ds:[esi]
  40ab48:	sbb    eax,0x7e029b81
  40ab4d:	push   ebp
  40ab4e:	rcr    DWORD PTR [edx-0xb],1
  40ab51:	mov    al,0x61
  40ab53:	pop    ebx
  40ab54:	jmp    0xd43a2bbd
  40ab59:	or     esp,DWORD PTR [esi-0x4eaa65f8]
  40ab5f:	stc    
  40ab60:	xchg   ebx,eax
  40ab61:	push   0x0
	...
  40ab8a:	add    BYTE PTR [eax],al
  40ab8c:	mov    cl,0xf9
  40ab8e:	inc    ebp
  40ab8f:	push   ebp
  40ab90:	sub    esp,DWORD PTR [ebx+0x51]
  40ab93:	ret    0xf9cd
  40ab96:	push   DWORD PTR ds:0x36e7afeb
  40ab9c:	repz stc 
  40ab9e:	(bad)  
  40ab9f:	pushf  
  40aba0:	xor    eax,0x13553403
  40aba5:	cli    
  40aba6:	(bad)  
  40aba7:	pop    esp
  40aba8:	fdivrp st(1),st
  40abaa:	dec    BYTE PTR [esi]
  40abac:	adc    esi,DWORD PTR [eax+0x8]
  40abaf:	adc    DWORD PTR [eax-0x51],eax
  40abb2:	(bad)  
  40abb3:	(bad)  
  40abb4:	repnz scas eax,DWORD PTR es:[edi]
  40abb6:	(bad)  
  40abb8:	jmp    0x1803:0x3574fef9
  40abbf:	popf   
  40abc0:	jmp    0xfef0:0x7194fef9
  40abc7:	(bad)  
  40abc8:	mov    ch,BYTE PTR [esi+0x8]
  40abcb:	shl    DWORD PTR [edi],0xaf
  40abce:	inc    dh
  40abd0:	mov    ch,BYTE PTR [esi-0x78d491d]
  40abd6:	out    0xc5,eax
  40abd8:	ret    
  40abd9:	clc    
  40abda:	(bad)  
  40abdb:	scas   al,BYTE PTR es:[edi]
  40abdc:	mov    eax,0x6aa6f707
  40abe1:	add    esp,ecx
  40abe3:	push   edi
  40abe4:	xchg   edx,eax
  40abe5:	clc    
  40abe6:	(bad)  
  40abe7:	pop    esp
  40abe8:	lock dec BYTE PTR gs:[esi-0x7949eeab]
	...
  40ac18:	add    BYTE PTR [eax],al
  40ac1a:	mov    bh,al
  40ac1c:	mov    ah,0x89
  40ac1e:	mov    bh,al
  40ac20:	inc    BYTE PTR [ecx+0x6efeb186]
  40ac26:	jb     0x40abd6
  40ac28:	fistp  DWORD PTR [esi+0x6a]
  40ac2b:	clc    
  40ac2c:	out    0x29,eax
  40ac2e:	retf   
  40ac2f:	clc    
  40ac30:	(bad)  
  40ac31:	push   esi
  40ac32:	shr    bl,0xf6
  40ac35:	dec    esi
  40ac36:	adc    bh,al
  40ac38:	je     0x40ac3a
  40ac3a:	scas   eax,DWORD PTR es:[edi]
  40ac3b:	test   BYTE PTR [edi],dh
  40ac3d:	(bad)  
  40ac3e:	pop    eax
  40ac3f:	(bad)  
  40ac40:	push   DWORD PTR [ebp-0x58a9]
  40ac46:	call   esi
  40ac48:	mov    ch,0xff
  40ac4a:	pop    eax
  40ac4b:	pop    DWORD PTR [ebp-0x8]
  40ac4e:	dec    esi
  40ac4f:	push   ds
  40ac50:	std    
  40ac51:	dec    DWORD PTR [eax-0x71]
  40ac54:	jne    0x40ac52
  40ac56:	aas    
  40ac57:	fwait
  40ac58:	mov    ds:0xc2a55700,al
  40ac5d:	or     BYTE PTR [edi-0x37],ah
  40ac60:	mov    esp,ebp
  40ac62:	in     al,0x37
  40ac64:	cld    
  40ac65:	push   0x57
  40ac67:	add    cl,BYTE PTR [ebx]
  40ac69:	jmp    edx
  40ac6b:	mul    dh
  40ac6d:	mov    ecx,0x89ff8bd4
  40ac72:	bound  ecx,QWORD PTR [ebx+0x1e70d868]
  40ac78:	(bad)  
  40ac79:	(bad)  
  40ac7a:	(bad)  
  40ac7b:	mul    esi
  40ac7d:	test   BYTE PTR [eax],0x0
	...
  40aca8:	fimul  DWORD PTR [ebx-0x74ad0001]
  40acae:	push   DWORD PTR [ebp+0x1f]
  40acb1:	xchg   esp,eax
  40acb2:	in     al,0xb3
  40acb4:	fmul   DWORD PTR [ebx+0x5be3c2c9]
  40acba:	push   ebp
  40acbb:	mov    edi,DWORD PTR [ebx-0x2f2f3c23]
  40acc1:	mov    edi,edi
  40acc3:	lea    edx,[edx]
  40acc5:	mov    edx,DWORD PTR [eax-0x1]
  40acc8:	shl    bh,cl
  40acca:	std    
  40accb:	xor    eax,0x3fb6a2
  40acd0:	mov    edi,0xd700a125
  40acd5:	clc    
  40acd6:	mov    esi,0x269220f
  40acdb:	add    BYTE PTR [esi],bh
  40acdd:	add    cl,BYTE PTR [edx+0x45]
  40ace0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ace1:	add    DWORD PTR [ebx],eax
  40ace3:	add    BYTE PTR [esi],bh
  40ace5:	dec    ecx
  40ace6:	leave  
  40ace7:	repz cdq 
  40ace9:	add    BYTE PTR [ebx],al
  40aceb:	add    BYTE PTR [edx+eax*1],ah
  40acee:	(bad)  
  40acf0:	pop    ss
  40acf1:	add    bl,ch
  40acf3:	push   DWORD PTR [edx-0x34afa93a]
  40acf9:	jle    0x40ad53
  40acfb:	div    DWORD PTR [ecx+0x50]
  40acfe:	mov    ah,0xfe
  40ad00:	repz dec ecx
  40ad02:	push   ebx
  40ad03:	jne    0x40ad67
  40ad05:	dec    ecx
  40ad06:	mov    edi,0xfe023ea1
  40ad0b:	mov    edi,0x0
	...
  40ad34:	add    BYTE PTR [eax],al
  40ad36:	retf   0x5c06
  40ad39:	std    
  40ad3a:	aas    
  40ad3b:	add    al,BYTE PTR [ebx]
  40ad3d:	push   0xffc5299f
  40ad42:	cmp    BYTE PTR [eax-0x342d1800],dl
  40ad48:	push   ecx
  40ad49:	push   DWORD PTR [ebp+0x2a857fb4]
  40ad4f:	mov    dh,0x51
  40ad51:	jmp    FWORD PTR [esi+0x52]
  40ad54:	pop    esp
  40ad55:	loope  0x40ad2e
  40ad57:	lods   eax,DWORD PTR ds:[esi]
  40ad58:	push   ecx
  40ad59:	mov    ebx,eax
  40ad5b:	mov    ah,0x59
  40ad5d:	inc    DWORD PTR [ecx]
  40ad5f:	dec    ebx
  40ad60:	add    al,0x68
  40ad62:	xor    bl,BYTE PTR [ebp+eax*8+0x5397f0ff]
  40ad69:	imul   ecx
  40ad6b:	in     eax,0x51
  40ad6d:	xor    eax,0xffc52cfb
  40ad72:	loope  0x40ad40
  40ad74:	mov    bh,bh
  40ad76:	sar    DWORD PTR [ebx-0x78],1
  40ad79:	in     al,0xd1
  40ad7b:	test   DWORD PTR [edx+0x6a],edx
  40ad7e:	ds pop ebx
  40ad80:	shr    DWORD PTR [eax],1
  40ad82:	push   ss
  40ad83:	pushf  
  40ad84:	jmp    0x5e2c98db
  40ad89:	push   edx
  40ad8a:	test   eax,0xf64913f6
  40ad8f:	fwait
  40ad90:	jmp    0x3df431f0
  40ad95:	push   edx
  40ad96:	(bad)  
  40ad97:	loopne 0x40addd
  40ad99:	pop    edx
	...
  40adc2:	add    BYTE PTR [eax],al
  40adc4:	mov    esi,esi
  40adc6:	ret    0x1603
  40adc9:	inc    ecx
  40adca:	rol    esp,0x79
  40adcd:	cmc    
  40adce:	push   ebx
  40adcf:	push   ebx
  40add0:	imul   esi,esi,0x20335215
  40add6:	mov    eax,ds:0x54fe61c4
  40addb:	mov    ebx,DWORD PTR [ecx-0xa]
  40adde:	outs   dx,DWORD PTR ds:[esi]
  40addf:	mov    BYTE PTR [esi-0x12],ah
  40ade2:	cmc    
  40ade3:	push   ecx
  40ade4:	aam    0x5a
  40ade6:	sbb    DWORD PTR [edx],0x50e99be6
  40adec:	repz jmp 0x471b:0xf63151d5
  40adf4:	jbe    0x40ad92
  40adf6:	jmp    0xc5f35e56
  40adfb:	push   ecx
  40adfc:	(bad)  
  40adfd:	(bad)  
  40adff:	pop    ecx
  40ae00:	adc    esi,esi
  40ae02:	arpl   WORD PTR [edi+0x51adedf2],ax
  40ae08:	outs   dx,BYTE PTR ds:[esi]
  40ae09:	adc    esi,0xffffffab
  40ae0c:	jle    0x40ae69
  40ae0e:	sahf   
  40ae0f:	xchg   edi,eax
  40ae10:	out    dx,al
  40ae11:	in     eax,dx
  40ae12:	xchg   ebp,eax
  40ae13:	push   ecx
  40ae14:	jmp    0x7efd5248
  40ae19:	pop    ebx
  40ae1a:	xchg   ecx,eax
  40ae1b:	fst    QWORD PTR [ecx-0x6e02820b]
  40ae21:	outs   dx,BYTE PTR ds:[esi]
  40ae22:	add    al,dl
  40ae24:	ret    0xd3b7
  40ae27:	jbe    0x40ae29
	...
  40ae51:	add    BYTE PTR [edi-0xa],ch
  40ae54:	add    ebx,esp
  40ae56:	lods   eax,DWORD PTR ds:[esi]
  40ae57:	hlt    
  40ae58:	das    
  40ae59:	outs   dx,BYTE PTR ds:[esi]
  40ae5a:	mov    ecx,0xf56f716
  40ae5f:	mov    ebp,eax
  40ae61:	adc    ecx,ecx
  40ae63:	cmc    
  40ae64:	(bad)  
  40ae65:	push   edx
  40ae66:	xchg   esi,eax
  40ae67:	pusha  
  40ae68:	shl    BYTE PTR [ebp+0x5e88b47],0xb1
  40ae6f:	cmc    
  40ae70:	(bad)  
  40ae71:	es mov ecx,0xf26f716
  40ae77:	push   eax
  40ae78:	add    cl,ch
  40ae7a:	cmp    eax,0x73984e8
  40ae7f:	idiv   dh
  40ae81:	mov    ecx,0xa8583185
  40ae86:	cmp    eax,0xf6f9b4f6
  40ae8b:	cmc    
  40ae8c:	(bad)  
  40ae8d:	div    BYTE PTR [eax]
  40ae8f:	and    BYTE PTR [eax-0x58],cl
  40ae92:	cmp    eax,0x8ea11d03
  40ae97:	hlt    
  40ae98:	mov    BYTE PTR [ebp+eiz*2-0x14],ah
  40ae9c:	(bad)  
  40ae9d:	(bad)  
  40ae9e:	ret    0xe3b6
  40aea1:	(bad)  
  40aea2:	mov    ?,esp
  40aea4:	push   ebp
  40aea6:	rcl    eax,0xff
  40aea9:	call   0xc5fd86eb
  40aeae:	data16 hlt 
  40aeb0:	(bad)  
  40aeb1:	jmp    0xe9ce8df4
	...
  40aede:	add    BYTE PTR [eax],al
  40aee0:	cmp    eax,0x955c835b
  40aee5:	in     al,dx
  40aee6:	(bad)  
  40aee7:	xchg   esi,eax
  40aee8:	cmp    eax,0x3d688464
  40aeed:	pop    ebx
  40aeee:	add    BYTE PTR [eax],al
  40aef0:	das    
  40aef1:	out    dx,eax
  40aef2:	(bad)  
  40aef3:	out    dx,al
  40aef4:	adc    DWORD PTR [ebx+0x24bf0875],ecx
  40aefa:	mov    al,0xff
  40aefc:	push   eax
  40aefd:	mov    esi,DWORD PTR [ebp-0x74e714]
  40af03:	dec    DWORD PTR [edx-0x392f1910]
  40af09:	mov    edi,edi
  40af0b:	dec    edx
  40af0d:	nop
  40af0e:	idiv   edi
  40af10:	add    BYTE PTR [ebx-0x6210f78b],cl
  40af16:	mov    cl,0xff
  40af18:	push   eax
  40af19:	mov    esi,DWORD PTR [ebp-0x74b71c]
  40af1f:	(bad)  
  40af20:	(bad)  
  40af22:	out    0xb4,al
  40af24:	push   ss
  40af25:	mov    edi,edi
  40af27:	dec    DWORD PTR [edx]
  40af29:	inc    esp
  40af2a:	idiv   edi
  40af2c:	xor    BYTE PTR [ebx+0x1c2f0875],cl
  40af32:	mov    al,0xff
  40af34:	push   eax
  40af35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af36:	mov    ch,0xe0
  40af38:	dec    eax
  40af39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af3a:	(bad)  
  40af3b:	dec    edx
  40af3d:	out    dx,eax
  40af3e:	out    0x98,al
  40af40:	(bad)  
  40af41:	mov    ds:0x83ff,eax
	...
  40af6e:	rol    BYTE PTR [esi-0x9],cl
  40af71:	call   DWORD PTR [eax]
  40af73:	pop    edi
  40af74:	je     0x40af91
  40af76:	xchg   esp,eax
  40af77:	retf   0xf7cf
  40af7a:	add    BYTE PTR [esp+eax*1-0x7a8f0a8b],ah
  40af81:	fmul   st,st(0)
  40af83:	mov    ds:0xa507ffff,eax
  40af88:	jne    0x40af92
  40af8a:	iret   
  40af8b:	repnz scas eax,DWORD PTR es:[edi]
  40af8d:	call   eax
  40af8f:	(bad)
  40af93:	add    cl,BYTE PTR [esi+0x75]
  40af96:	ss (bad) 
  40af99:	mov    al,0xd9
  40af9b:	fmul   QWORD PTR [esi-0x4b]
  40af9e:	fisubr DWORD PTR [edi+ecx*2-0x1]
  40afa2:	(bad)  
  40afa3:	cmp    eax,0x84c1ff98
  40afa8:	cdq    
  40afa9:	in     al,dx
  40afaa:	mov    cl,0x7c
  40afac:	dec    edi
  40afad:	call   0xff8f7db1
  40afb2:	test   eax,0xa1f75bd6
  40afb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afb8:	pop    esp
  40afb9:	rcr    BYTE PTR ss:[edi+ecx*2+0x57a1cbff],cl
  40afc1:	dec    DWORD PTR [ecx-0x7e4be467]
  40afc7:	inc    esp
  40afc8:	dec    edi
  40afc9:	mov    ch,0x96
  40afcb:	push   esp
  40afcc:	dec    edi
  40afcd:	jmp    DWORD PTR [esi+0x21]
  40afd0:	xchg   edi,eax
  40afd1:	inc    DWORD PTR [eax]
	...
  40affb:	add    BYTE PTR [ecx+0x4c],ch
  40affe:	cdq    
  40afff:	lock imul esp,DWORD PTR [edi+ecx*2-0x18],0xff4f3633
  40b008:	push   ecx
  40b009:	mov    esi,0xee73e94a
  40b00e:	dec    ebp
  40b00f:	inc    DWORD PTR [ecx+0x6e]
  40b012:	dec    edi
  40b013:	call   0x439487
  40b018:	pop    es
  40b019:	(bad)  
  40b01a:	cli    
  40b01b:	call   DWORD PTR [edx-0x57ca083]
  40b021:	and    cl,bl
  40b023:	jmp    DWORD PTR [edi+0x46754de7]
  40b029:	or     al,0x26
  40b02b:	mov    cl,0x9
  40b02d:	stos   BYTE PTR es:[edi],al
  40b02e:	jnp    0x40b075
  40b030:	add    bl,BYTE PTR [ebp+0x5b7f5806]
  40b036:	jmp    0x91a41b89
  40b03b:	shr    dl,1
  40b03d:	repnz xchg ebp,eax
  40b03f:	dec    esi
  40b040:	imul   ebp,edi,0xffffff8d
  40b043:	fadd   DWORD PTR [ecx+0x3]
  40b046:	sbb    edx,DWORD PTR [ebp+0x41aff2d1]
  40b04c:	inc    edx
  40b04d:	pop    ebx
  40b04e:	sbb    al,0x7b
  40b050:	rcr    ah,cl
  40b052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b053:	aas    
  40b054:	mov    cl,0xf2
  40b056:	gs cmp bl,0xee
  40b05a:	mov    eax,0x565f334e
  40b05f:	sbb    BYTE PTR [eax],al
	...
  40b089:	add    BYTE PTR [ebx-0x5d],bh
  40b08c:	test   al,0x3
  40b08e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b08f:	cli    
  40b090:	add    edi,DWORD PTR gs:[esi]
  40b093:	sub    si,di
  40b096:	ret    0xeb92
  40b099:	add    edi,DWORD PTR [esi]
  40b09b:	sbb    ah,BYTE PTR [ebx+ecx*2+0x3e95b3e]
  40b0a2:	jns    0x40b03c
  40b0a4:	adc    eax,0xe95b414e
  40b0a9:	fldenv [ecx-0x7c]
  40b0ac:	jmp    0xe9c50a8a
  40b0b1:	cmp    bl,0xe6
  40b0b4:	cwde   
  40b0b5:	add    bl,0xe7
  40b0b8:	std    
  40b0b9:	dec    ebp
  40b0ba:	inc    ecx
  40b0bb:	mov    ebp,esi
  40b0bd:	xlat   BYTE PTR ds:[ebx]
  40b0be:	xor    edx,esi
  40b0c0:	pop    ebx
  40b0c1:	push   eax
  40b0c2:	es mov ah,0x7d
  40b0c5:	add    al,0x3e
  40b0c7:	test   ax,0x3ad8
  40b0cb:	add    al,0xb
  40b0cd:	add    bh,BYTE PTR [esi]
  40b0cf:	pop    ebx
  40b0d0:	push   ecx
  40b0d1:	mov    ds:0x4ce99c86,eax
  40b0d6:	xchg   ebx,eax
  40b0d7:	pop    edi
  40b0d8:	add    cl,al
  40b0da:	add    al,0xa9
  40b0dc:	(bad)  
  40b0dd:	scas   al,BYTE PTR es:[edi]
  40b0de:	ja     0x40b0eb
  40b0e0:	lea    ebp,[esi+edx*4-0x16]
  40b0e4:	(bad)  
  40b0e5:	sahf   
  40b0e6:	mov    dl,0x8b
  40b0e8:	call   0xff327c13
  40b0ed:	pusha  
	...
  40b116:	add    BYTE PTR [eax],al
  40b118:	shr    edx,0xf6
  40b11b:	xchg   BYTE PTR [ebx+0x73ad84e0],al
  40b121:	repnz (bad) 
  40b123:	sbb    edx,esp
  40b125:	scas   eax,DWORD PTR es:[edi]
  40b126:	push   edi
  40b127:	sub    BYTE PTR [edx-0xe],al
  40b12a:	mov    ah,0x59
  40b12c:	or     esi,edx
  40b12e:	(bad)  
  40b12f:	pop    esi
  40b130:	push   ecx
  40b131:	sbb    BYTE PTR [eax-0x58],cl
  40b134:	cmp    eax,0xb975103
  40b139:	repnz mov BYTE PTR [esi+eiz*1-0x16],ch
  40b13e:	(bad)  
  40b13f:	ds fs icebp 
  40b142:	sbb    ax,0x9ad2
  40b146:	add    BYTE PTR [esi],ch
  40b148:	shr    edx,1
  40b14a:	mul    BYTE PTR [esi]
  40b14c:	add    esi,edx
  40b14e:	xor    al,0x24
  40b150:	stos   BYTE PTR es:[edi],al
  40b151:	call   0xefe:0xa94f0100
  40b158:	aad    0xd7
  40b15a:	jmp    0x40b15a
  40b15c:	add    dh,dl
  40b15e:	imul   ebp,ecx,0xa8581265
  40b164:	cmp    eax,0x92f9b4f2
  40b169:	lock (bad) 
  40b16b:	out    0x48,al
  40b16d:	push   ss
  40b16e:	dec    eax
  40b16f:	sub    BYTE PTR [edx+0x3],al
  40b172:	adc    eax,0x88f0729f
  40b177:	fs jne 0x40b162
  40b17a:	inc    BYTE PTR [eax]
	...
  40b1a4:	add    BYTE PTR [eax],al
  40b1a6:	clc    
  40b1a7:	adc    bh,bh
  40b1a9:	addr16 add eax,ebp
  40b1ac:	aas    
  40b1ad:	add    al,cl
  40b1af:	leave  
  40b1b0:	out    dx,eax
  40b1b1:	imul   DWORD PTR [eax-0x5dca0061]
  40b1b7:	mov    ah,0x3f
  40b1b9:	add    bh,cl
  40b1bb:	xchg   DWORD PTR [ebp-0x7a8a3701],esi
  40b1c1:	loopne 0x40b173
  40b1c3:	lahf   
  40b1c4:	dec    DWORD PTR [ebp-0x8bb9e]
  40b1ca:	dec    eax
  40b1cb:	lods   al,BYTE PTR ds:[esi]
  40b1cc:	data16 fild QWORD PTR [edi]
  40b1cf:	sbb    al,0xff
  40b1d1:	(bad)  
  40b1d2:	jb     0x40b160
  40b1d4:	idiv   edi
  40b1d6:	sbb    BYTE PTR [edi+0x1defc535],bl
  40b1dc:	jmp    edi
  40b1de:	arpl   cx,cx
  40b1e0:	(bad)  
  40b1e1:	call   FWORD PTR [esp+ebx*4-0x1edbec8c]
  40b1e8:	xlat   BYTE PTR ds:[ebx]
  40b1e9:	test   DWORD PTR [eax-0x61],0x9f9d7504
  40b1f0:	xor    BYTE PTR [edi-0x8c01e],cl
  40b1f6:	sbb    BYTE PTR [ebx+0x3fe2c70a],dl
  40b1fc:	idiv   edi
  40b1fe:	dec    eax
  40b1ff:	jmp    0xaca8b202
  40b204:	out    0x95,al
  40b206:	adc    eax,0x8dff9f
	...
  40b233:	add    dl,ah
  40b235:	sub    esi,edi
  40b237:	dec    DWORD PTR [eax-0x53]
  40b23a:	data16 (bad) 
  40b23c:	iret   
  40b23d:	sbb    al,0xff
  40b23f:	(bad)  
  40b240:	rol    BYTE PTR [esi-0x5bf70009],cl
  40b246:	xor    eax,0xc53a3ec5
  40b24b:	jmp    DWORD PTR [ecx]
  40b24d:	jb     0x40b1e0
  40b24f:	call   DWORD PTR [ecx]
  40b251:	in     eax,dx
  40b252:	inc    edx
  40b253:	je     0x40b282
  40b255:	test   DWORD PTR [ecx+0x4aa909d0],ecx
  40b25b:	add    al,0x73
  40b25d:	cld    
  40b25e:	dec    ecx
  40b25f:	xor    cl,al
  40b261:	jle    0x40b293
  40b263:	imul   ecx
  40b265:	rcr    BYTE PTR [esi+0xa],1
  40b268:	stc    
  40b269:	jle    0x40b29b
  40b26b:	neg    ecx
  40b26d:	loopne 0x40b272
  40b26f:	add    BYTE PTR [esi],bh
  40b271:	add    dh,BYTE PTR [ebx+0x4b346fe7]
  40b277:	(bad)  
  40b278:	mov    ebp,0xb9f76026
  40b27d:	add    BYTE PTR [esp+esi*2],0x71
  40b281:	test   DWORD PTR [ecx+0x4b90b1d4],ecx
  40b287:	add    ch,BYTE PTR [ebx]
  40b289:	push   eax
  40b28a:	fdivp  st(7),st
  40b28c:	retf   0x3876
  40b28f:	not    DWORD PTR [ecx-0x2c014b68]
  40b295:	xchg   ebp,eax
  40b296:	push   ebx
  40b297:	inc    DWORD PTR [eax]
	...
  40b2c1:	add    BYTE PTR [ecx+0x79db9c99],al
  40b2c7:	inc    eax
  40b2c8:	(bad)  
  40b2c9:	mov    edi,0xbd85eaea
  40b2ce:	jp     0x40b318
  40b2d0:	dec    ebx
  40b2d1:	(bad)  
  40b2d2:	ds iret 
  40b2d4:	out    dx,eax
  40b2d5:	(bad)  
  40b2d6:	xchg   ebx,eax
  40b2d7:	push   ebp
  40b2d8:	push   ebx
  40b2d9:	call   DWORD PTR [ecx+0x49]
  40b2dc:	div    DWORD PTR [ecx-0x7abe0fb7]
  40b2e2:	pop    edx
  40b2e3:	lock dec ecx
  40b2e5:	(bad)  
  40b2e6:	ds add al,0x3
  40b2e9:	add    BYTE PTR [ebp+0x315fa45b],bh
  40b2ef:	out    dx,eax
  40b2f0:	fld    QWORD PTR [ebx]
  40b2f2:	stos   BYTE PTR es:[edi],al
  40b2f3:	sub    BYTE PTR [edx-0x78],0x2a
  40b2f7:	out    0xcd,eax
  40b2f9:	dec    edx
  40b2fa:	ds addr16 dec ebx
  40b2fd:	xchg   ebx,ecx
  40b2ff:	add    esi,DWORD PTR [esi+0x3d5c014a]
  40b305:	lods   eax,DWORD PTR ds:[esi]
  40b306:	popa   
  40b307:	pop    ecx
  40b308:	jmp    0x1c2f6367
  40b30d:	cld    
  40b30e:	loope  0x40b2d9
  40b310:	dec    esi
  40b311:	dec    edx
  40b312:	loope  0x40b302
  40b314:	pop    ebx
  40b315:	push   edi
  40b316:	shr    esi,1
  40b318:	lea    ecx,[edx+0x4b]
  40b31b:	arpl   WORD PTR [ecx+0x7dee9861],dx
  40b321:	dec    edx
  40b322:	mov    eax,DWORD PTR [ebx]
  40b324:	jle    0x40b370
	...
  40b34e:	add    BYTE PTR [eax],al
  40b350:	mov    ecx,0x99fbf3ee
  40b355:	adc    edx,DWORD PTR [edi-0x6c1156b6]
  40b35b:	aaa    
  40b35c:	test   eax,0xd34a55ee
  40b361:	not    DWORD PTR [ebp+0x4a]
  40b364:	xchg   ecx,eax
  40b365:	out    dx,al
  40b366:	mov    ebx,0x8ed3a1fb
  40b36b:	dec    edx
  40b36c:	sub    esi,0xee71277b
  40b372:	sub    eax,0x1162eb4a
  40b377:	scas   eax,DWORD PTR es:[edi]
  40b378:	fwait
  40b379:	out    dx,al
  40b37a:	sbb    eax,0x1dfbab4a
  40b37f:	dec    edx
  40b380:	pop    ecx
  40b381:	out    dx,al
  40b382:	xchg   ebx,eax
  40b383:	sti    
  40b384:	pop    ecx
  40b385:	ret    
  40b386:	push   esi
  40b387:	dec    edx
  40b388:	dec    ecx
  40b389:	out    dx,al
  40b38a:	xor    ebx,DWORD PTR [edi+0x49]
  40b38d:	out    dx,al
  40b38e:	push   ebp
  40b390:	xchg   esp,eax
  40b391:	loope  0x40b343
  40b393:	out    dx,al
  40b394:	xchg   esi,ebp
  40b396:	mov    ah,0xd5
  40b398:	(bad)  
  40b399:	out    dx,al
  40b39a:	(bad)  
  40b39b:	shl    edi,1
  40b39d:	stos   BYTE PTR es:[edi],al
  40b39e:	(bad)  
  40b39f:	(bad)  
  40b3a0:	xchg   DWORD PTR [eax-0x11782919],ebp
  40b3a6:	out    0x3d,eax
  40b3a8:	lods   eax,DWORD PTR ds:[esi]
  40b3a9:	in     eax,dx
  40b3aa:	(bad)  
  40b3ab:	mov    esi,0xb6f6fab1
  40b3b0:	xchg   DWORD PTR [ebx],eax
  40b3b2:	imul   edi,DWORD PTR [eax+0x0],0x0
	...
  40b3dd:	add    BYTE PTR [edi-0x6da30112],al
  40b3e3:	out    0xfe,al
  40b3e5:	sahf   
  40b3e6:	or     BYTE PTR [ebp-0x1178694f],0x44
  40b3ed:	xchg   ecx,eax
  40b3ee:	jne    0x40b39b
  40b3f0:	cld    
  40b3f1:	xchg   BYTE PTR [edi-0x12],dh
  40b3f4:	je     0x40b473
  40b3f6:	bound  esi,QWORD PTR [ecx-0x63]
  40b3f9:	jmp    0xe202d83b
  40b3fe:	cmp    eax,0xc3558b88
  40b403:	push   ss
  40b404:	hlt    
  40b405:	sar    DWORD PTR ds:0x89560e81,cl
  40b40b:	push   ebp
  40b40c:	call   0xff2e6bea
  40b411:	jo     0x40b3dc
  40b413:	icebp  
  40b414:	addr16 jmp 0xc1feb257
  40b41a:	jge    0x40b3a1
  40b41c:	inc    ecx
  40b41d:	jmp    0xa89952b7
  40b422:	cmp    eax,0x5f174ee
  40b427:	xchg   edx,eax
  40b428:	ficom  DWORD PTR [esi]
  40b42a:	pop    es
  40b42b:	loopne 0x40b471
  40b42d:	adc    DWORD PTR [edx-0x60ff688b],ecx
  40b433:	sbb    bh,bh
  40b435:	addr16 pushf 
  40b437:	sar    DWORD PTR [edi],0x0
  40b43a:	xor    BYTE PTR [esi-0x3b],bl
  40b43d:	dec    eax
  40b43e:	out    0x58,al
  40b440:	call   0x40b462
	...
  40b469:	add    BYTE PTR [eax],al
  40b46b:	add    bl,cl
  40b46d:	mov    ds:0x1cd70bff,eax
  40b472:	and    eax,0x688b6a89
  40b477:	add    DWORD PTR [edi],esp
  40b479:	xchg   esp,eax
  40b47a:	mov    esi,0xe6ef4aff
  40b47f:	mov    ds:0xffffa3b2,al
  40b484:	cmp    bl,BYTE PTR [edi-0x5c548a01]
  40b48a:	jne    0x40b494
  40b48c:	iret   
  40b48d:	lods   eax,DWORD PTR cs:[esi]
  40b48f:	inc    eax
  40b491:	mov    ds:0x3fbff475,eax
  40b496:	mov    al,0xff
  40b498:	rcl    BYTE PTR [eax],0x9e
  40b49b:	pop    eax
  40b49c:	push   ss
  40b49d:	push   edi
  40b49e:	push   DWORD PTR [ebp-0x31]
  40b4a1:	nop
  40b4a2:	(bad)  
  40b4a3:	cld    
  40b4a4:	xor    BYTE PTR [ebx-0x5cdc8a01],ah
  40b4aa:	jne    0x40b4b4
  40b4ac:	nop    DWORD PTR [ebp-0x3dceff01]
  40b4b3:	add    al,0xa7
  40b4b5:	mov    ebp,0x2c24ec89
  40b4ba:	cld    
  40b4bb:	push   0xffffff97
  40b4bd:	push   cs
  40b4be:	push   cs
  40b4bf:	dec    edx
  40b4c1:	lock out 0xe5,al
  40b4c4:	ret    0xffa3
  40b4c7:	mov    DWORD PTR [edx+0x57006894],ebx
  40b4cd:	xchg   ebx,eax
  40b4ce:	mov    esi,0x68
	...
  40b4f7:	add    BYTE PTR [eax],al
  40b4f9:	add    BYTE PTR [edi-0x40],al
  40b4fc:	aas    
  40b4fd:	add    BYTE PTR [esi],bh
  40b4ff:	fiadd  DWORD PTR [esi+0x58]
  40b502:	inc    DWORD PTR [ecx]
  40b504:	dec    eax
  40b505:	jne    0x40b53d
  40b507:	dec    edx
  40b508:	xor    ebx,ecx
  40b50a:	inc    ecx
  40b50b:	in     eax,dx
  40b50c:	inc    esi
  40b50d:	jne    0x40b549
  40b50f:	in     eax,0xcc
  40b511:	pop    es
  40b512:	es hlt 
  40b514:	cwde   
  40b515:	jmp    FWORD PTR [ecx]
  40b517:	stos   DWORD PTR es:[edi],eax
  40b518:	inc    ecx
  40b519:	add    al,0x3e
  40b51b:	daa    
  40b51c:	jnp    0x40b50a
  40b51e:	mov    ebp,0x3e6a47bd
  40b523:	cwde   
  40b524:	hlt    
  40b525:	(bad)  
  40b526:	xchg   ebx,eax
  40b527:	jmp    0x8946:0xacd3aa5a
  40b52e:	and    DWORD PTR [esi-0x530e0025],0xffffff85
  40b535:	push   0xffc59b40
  40b53a:	pop    ecx
  40b53b:	jmp    0xc57ef5eb
  40b540:	rol    BYTE PTR [edi],1
  40b542:	out    0x66,al
  40b544:	sub    eax,0x447c9ff
  40b549:	push   0xffc53b76
  40b54e:	and    DWORD PTR [esp+ebp*4],edx
  40b551:	inc    eax
  40b552:	ds jge 0x40b566
  40b555:	vcmpss xmm0,xmm1,DWORD PTR [edx],0xe8
  40b55a:	pop    es
  40b55b:	rol    DWORD PTR [esi-0x1],1
	...
  40b586:	add    BYTE PTR [eax],al
  40b588:	inc    ebp
  40b589:	inc    edx
  40b58a:	shl    BYTE PTR [ebx],1
  40b58c:	es push esi
  40b58e:	lods   eax,DWORD PTR ds:[esi]
  40b58f:	inc    eax
  40b590:	rcr    BYTE PTR ds:[edx+0x25],cl
  40b594:	retf   0x472c
  40b597:	push   eax
  40b598:	out    0x1,al
  40b59a:	add    ebp,edi
  40b59c:	mov    al,0x19
  40b59e:	std    
  40b59f:	pop    eax
  40b5a0:	call   FWORD PTR [edx-0x17]
  40b5a3:	mov    bl,0x60
  40b5a5:	gs icebp 
  40b5a7:	pop    ebx
  40b5a8:	adc    dl,BYTE PTR cs:[esi]
  40b5ab:	inc    edi
  40b5ac:	push   cx
  40b5ae:	pop    ecx
  40b5af:	inc    edi
  40b5b0:	dec    ecx
  40b5b1:	jmp    0x40b62e
  40b5b3:	inc    edi
  40b5b4:	inc    ecx
  40b5b5:	gs icebp 
  40b5b7:	pop    ebx
  40b5b8:	retf   0xf5b8
  40b5bb:	inc    esi
  40b5bc:	pop    es
  40b5bd:	push   ds
  40b5be:	in     eax,0x3
  40b5c0:	xchg   ebx,eax
  40b5c1:	(bad)  
  40b5c2:	aam    0x82
  40b5c4:	cli    
  40b5c5:	out    0x36,eax
  40b5c7:	scas   eax,DWORD PTR es:[edi]
  40b5c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5c9:	pop    ebx
  40b5ca:	inc    ebx
  40b5cb:	cmc    
  40b5cc:	adc    BYTE PTR [ecx-0x1f],dh
  40b5cf:	pop    ebx
  40b5d0:	pop    eax
  40b5d1:	mov    eax,0xa0b746c5
  40b5d6:	mov    ebp,0x2194337a
  40b5db:	vpmullw xmm5,xmm1,xmm3
  40b5df:	mov    eax,0x83e99c81
  40b5e4:	and    DWORD PTR [ebx+0x15],ebx
  40b5e7:	mov    ebx,0xc5308f61
	...
  40b614:	add    BYTE PTR [eax],al
  40b616:	rcl    DWORD PTR [ecx+0x5ba5ba81],1
  40b61c:	jmp    0xc4b0381b
  40b621:	lods   eax,DWORD PTR ds:[esi]
  40b622:	mov    eax,ds:0xb1462fca
  40b627:	jae    0x40b635
  40b629:	lods   eax,DWORD PTR ds:[esi]
  40b62a:	(bad)  
  40b62b:	pop    edx
  40b62c:	mov    ecx,0x5daeeb5b
  40b631:	inc    esi
  40b632:	out    dx,al
  40b633:	jb     0x40b61e
  40b635:	add    esp,DWORD PTR [ecx+0x1346b8a9]
  40b63b:	push   ebx
  40b63c:	push   ecx
  40b63d:	inc    ebx
  40b63e:	imul   ebp,edx,0x3d
  40b641:	pop    ebx
  40b642:	test   al,0xba
  40b644:	push   DWORD PTR ds:0xa700f5f8
  40b64a:	mov    ebp,0xf79c0029
  40b64f:	mov    al,ds:0xa3fddafc
  40b654:	(bad)  
  40b655:	push   ss
  40b656:	clc    
  40b657:	jmp    0x6275f64d
  40b65c:	jne    0x40b69a
  40b65e:	clc    
  40b65f:	outs   dx,DWORD PTR ds:[esi]
  40b660:	cld    
  40b661:	dec    BYTE PTR [ecx]
  40b663:	(bad)  
  40b664:	call   0xff2a8d4c
  40b669:	mov    fs,ebx
  40b66b:	adc    al,dl
  40b66d:	in     eax,dx
  40b66e:	cmp    eax,0xbfcd8b90
  40b673:	push   ds
  40b674:	cld    
  40b675:	inc    ebx
  40b676:	cmp    dh,BYTE PTR [ebp+0x12]
  40b679:	into   
	...
  40b6a2:	add    BYTE PTR [eax],al
  40b6a4:	stc    
  40b6a5:	popa   
  40b6a6:	call   0xff2a5d40
  40b6ab:	jo     0x40b666
  40b6ad:	in     eax,0x67
  40b6af:	jmp    0x41feb0f1
  40b6b4:	or     eax,0x5e94183
  40b6b9:	sbb    BYTE PTR [ecx+0x28],0x42
  40b6bd:	jmp    0x8ed7:0xd275e174
  40b6c4:	sub    edx,0x74
  40b6c7:	test   DWORD PTR [ebx+0x70],edi
  40b6ca:	or     BYTE PTR [ecx+0x76feb771],dl
  40b6d0:	jne    0x40b6ef
  40b6d2:	add    al,0xe9
  40b6d4:	fcom   st(4)
  40b6d6:	jmp    0x40b740
  40b6d8:	inc    BYTE PTR [esi]
  40b6da:	neg    DWORD PTR [esi+0x3]
  40b6dd:	fadd   DWORD PTR [ebp+edx*2-0x36]
  40b6e1:	call   0x3043945a
  40b6e6:	lds    eax,FWORD PTR [eax]
  40b6e8:	iret   
  40b6e9:	sbb    al,0xff
  40b6eb:	out    0x85,eax
  40b6ed:	jb     0x40b6ef
  40b6ef:	add    BYTE PTR [ebp+ebx*4+0xf],bl
  40b6f3:	test   DWORD PTR [esi+0x1000005d],esi
  40b6f9:	stos   BYTE PTR es:[edi],al
  40b6fa:	test   BYTE PTR [eax],0x67
  40b6fd:	pop    ebp
  40b6fe:	add    bh,al
  40b700:	mov    ds:0x5707ff99,al
  40b705:	pop    ebp
  40b706:	push   0x0
	...
  40b730:	add    BYTE PTR [eax],al
  40b732:	lods   eax,DWORD PTR ds:[esi]
  40b733:	pop    ebp
  40b734:	push   0x0
  40b736:	int    0x5c
  40b738:	lea    eax,[ebp+0x33]
  40b73b:	lods   eax,DWORD PTR ds:[esi]
  40b73c:	mov    eax,DWORD PTR [ebp-0x67cd]
  40b742:	addr16 sahf 
  40b744:	jne    0x40b73e
  40b746:	clc    
  40b747:	sbb    ebx,edi
  40b749:	call   0x412981
  40b74e:	sbb    al,0x9d
  40b750:	je     0x40b757
  40b752:	out    dx,al
  40b753:	or     BYTE PTR [eax],al
  40b755:	add    bh,ah
  40b757:	add    al,0xa0
  40b759:	dec    eax
  40b75a:	es pop edi
  40b75c:	push   DWORD PTR [ebp+0xb]
  40b75f:	test   DWORD PTR [ebp+0x509f98b2],eax
  40b765:	mov    edx,DWORD PTR [edi-0x4f0b7a8f]
  40b76b:	lahf   
  40b76c:	call   DWORD PTR [eax+0x5]
  40b76f:	xchg   DWORD PTR [ebp-0x4e],esi
  40b772:	mov    eax,0x3785899f
  40b777:	xchg   edi,eax
  40b778:	(bad)  
  40b779:	(bad)  
  40b77a:	mov    edi,0x18ffae23
  40b77f:	add    bh,bh
  40b781:	sub    DWORD PTR [di+0x3f],esi
  40b786:	clc    
  40b787:	fsubr  st,st(7)
  40b789:	idiv   DWORD PTR [esi]
  40b78b:	xchg   ecx,eax
  40b78c:	inc    esp
  40b78d:	call   DWORD PTR [ebx+0x3f]
  40b790:	mov    ebx,0x388a3e40
  40b795:	mov    cl,0x0
	...
  40b7bf:	add    BYTE PTR [ecx+0x29],bh
  40b7c2:	jp     0x40b749
  40b7c4:	pop    edx
  40b7c5:	sub    DWORD PTR [edi+edi*8-0x2c],eax
  40b7c9:	icebp  
  40b7ca:	fidivr DWORD PTR [ebp+0x7]
  40b7cd:	mov    bl,0x2
  40b7cf:	call   DWORD PTR [ebx+0x51ff4c42]
  40b7d5:	push   ecx
  40b7d6:	push   cs
  40b7d7:	(bad)
  40b7da:	add    ch,al
  40b7dc:	xchg   ebx,eax
  40b7dd:	and    eax,DWORD PTR [edi+edi*8-0x39]
  40b7e1:	jle    0x40b83a
  40b7e3:	div    DWORD PTR [ecx]
  40b7e5:	icebp  
  40b7e6:	xlat   BYTE PTR ds:[ebx]
  40b7e7:	jmp    DWORD PTR [ecx+0x3e40aa7f]
  40b7ed:	add    DWORD PTR [ecx-0x10],edi
  40b7f0:	adc    DWORD PTR [ecx],ecx
  40b7f2:	inc    ebx
  40b7f3:	dec    DWORD PTR [ebx-0x49]
  40b7f6:	retf   
  40b7f7:	inc    eax
  40b7f8:	sbb    dl,BYTE PTR ds:[ebx-0x72defe4f]
  40b7ff:	test   esi,esp
  40b801:	mov    al,0x42
  40b803:	inc    ebx
  40b805:	jbe    0x40b867
  40b807:	imul   ecx
  40b809:	mov    eax,0x9ac967d3
  40b80e:	(bad)  
  40b811:	mov    ?,WORD PTR [edi+esi*8]
  40b814:	rcl    eax,1
  40b816:	inc    edx
  40b817:	xor    eax,0xffc53a03
  40b81c:	(bad)  [ebp+0x75]
  40b81f:	(bad)  
  40b820:	mov    ecx,0x7442ec
	...
  40b84d:	add    BYTE PTR [edi+0x75],dl
  40b850:	sbb    esp,0x44378b1
  40b856:	sub    ebx,DWORD PTR [ebx-0x7]
  40b859:	inc    edx
  40b85a:	dec    esi
  40b85b:	fsub   DWORD PTR [ebx+0x24]
  40b85e:	mov    edi,esp
  40b860:	push   ebp
  40b861:	aam    0xa1
  40b863:	and    DWORD PTR [edi+0x43],edi
  40b866:	xor    ebx,0x6e7e0edc
  40b86c:	out    0xd3,eax
  40b86e:	pop    ecx
  40b86f:	xor    eax,0x1f694387
  40b874:	fs and al,0x69
  40b877:	out    0x25,eax
  40b879:	sbb    DWORD PTR [esi],edi
  40b87b:	pop    ebx
  40b87c:	jmp    0x1e3f4c07
  40b881:	inc    ebx
  40b882:	dec    ecx
  40b883:	pop    edx
  40b884:	xchg   ebp,eax
  40b885:	fidivr DWORD PTR [ebp+eiz*4-0x18c6c4ec]
  40b88c:	call   0x341b3c48
  40b891:	sub    al,0x31
  40b893:	out    0xed,eax
  40b895:	add    ebp,DWORD PTR [edx+0x3e0451a0]
  40b89b:	neg    BYTE PTR [esi-0x3eac74be]
  40b8a1:	outs   dx,DWORD PTR ds:[esi]
  40b8a2:	aam    0xe6
  40b8a4:	int    0x42
  40b8a6:	retf   
  40b8a7:	idiv   DWORD PTR [ebp+0x33e6f942]
  40b8ad:	or     al,0xe6
  40b8af:	pop    ebx
  40b8b0:	add    BYTE PTR [edx+0x0],0x0
	...
  40b8dc:	jmp    0xe96c2cc7
  40b8e1:	out    0xa5,al
  40b8e3:	inc    edx
  40b8e4:	push   ebx
  40b8e5:	push   ebx
  40b8e6:	xchg   ecx,eax
  40b8e7:	xor    eax,0x4295e6a4
  40b8ec:	xchg   ebx,eax
  40b8ed:	call   DWORD PTR [ebp-0x4193ebe]
  40b8f3:	or     esp,DWORD PTR [esi-0x4ebdad01]
  40b8f9:	out    0xff,al
  40b8fb:	cmp    ebx,DWORD PTR [ebp-0x12]
  40b8fe:	(bad)  
  40b8ff:	outs   dx,BYTE PTR ds:[esi]
  40b900:	cld    
  40b901:	outs   dx,DWORD PTR ds:[esi]
  40b902:	or     BYTE PTR [ecx-0x2f],dl
  40b905:	mov    ah,0xfe
  40b907:	pop    esi
  40b908:	cld    
  40b909:	scas   eax,DWORD PTR es:[edi]
  40b90a:	jecxz  0x40b96a
  40b90c:	cld    
  40b90d:	in     eax,0xe7
  40b90f:	xchg   ecx,eax
  40b910:	push   cs
  40b911:	out    0xfe,al
  40b913:	inc    esi
  40b914:	div    dh
  40b916:	idiv   BYTE PTR [esi]
  40b918:	cld    
  40b919:	repnz lods al,BYTE PTR ds:[esi]
  40b91b:	test   ah,bh
  40b91d:	in     eax,0xfe
  40b91f:	je     0x40b936
  40b921:	out    dx,al
  40b922:	(bad)  
  40b923:	es and eax,0xfc1eacb9
  40b929:	in     eax,0xb4
  40b92b:	sbb    DWORD PTR [esi+eiz*8],eax
  40b92e:	inc    BYTE PTR [ecx]
  40b930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b931:	mov    eax,0xa07c06fe
  40b936:	clc    
  40b937:	adc    bh,ch
  40b939:	out    0xfe,eax
  40b93b:	idiv   BYTE PTR [edi+0x70]
  40b93e:	cld    
  40b93f:	add    DWORD PTR [eax],eax
	...
  40b969:	add    BYTE PTR [eax-0x7b17003c],ch
  40b96f:	sbb    DWORD PTR [eax],ecx
  40b971:	jmp    0x6b2c8a5e
  40b976:	jbe    0x40b95f
  40b978:	imul   ebp,ecx,0x3cff48d3
  40b97e:	dec    edx
  40b97f:	repz test al,0x93
  40b982:	jg     0x40b96a
  40b984:	mov    BYTE PTR [esi+edi*2],ch
  40b987:	jae    0x40b928
  40b989:	adc    ch,bh
  40b98b:	in     eax,0xfd
  40b98d:	sbb    al,0x4a
  40b98f:	repz adc eax,0xfee67f9f
  40b995:	sbb    al,0x7e
  40b997:	out    0x74,al
  40b999:	loope  0x40b9b0
  40b99b:	rsm    
  40b99d:	add    al,al
  40b99f:	fwait
  40b9a0:	leave  
  40b9a1:	ret    0x599b
  40b9a4:	push   ebp
  40b9a5:	mov    eax,ebx
  40b9a7:	ffreep st(3)
  40b9a9:	cld    
  40b9aa:	cmp    eax,0x20146a5f
  40b9af:	scas   al,BYTE PTR es:[edi]
  40b9b0:	push   es
  40b9b1:	call   0x403155
  40b9b6:	push   ds
  40b9b7:	push   ds
  40b9b8:	sti    
  40b9b9:	push   0xbeef5997
  40b9be:	(bad)  
  40b9bf:	nop
  40b9c0:	pop    ecx
  40b9c1:	inc    ecx
  40b9c2:	addr16 mov cl,0xbd
  40b9c5:	pop    ecx
  40b9c6:	xchg   esi,eax
  40b9c7:	pop    ecx
  40b9c8:	push   DWORD PTR [ebp+0x5f]
  40b9cb:	xor    DWORD PTR [ebx-0x2a],esp
	...
  40b9f6:	add    BYTE PTR [eax],al
  40b9f8:	and    BYTE PTR [edi+edi*8+0x759c3375],bl
  40b9ff:	or     BYTE PTR [edi],bh
  40ba01:	ret    0xffa9
  40ba04:	xor    BYTE PTR [edx+0xe2704c2],dl
  40ba0a:	mov    ch,ah
  40ba0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba0d:	xchg   ebx,eax
  40ba0e:	fdiv   st,st(7)
  40ba10:	xor    BYTE PTR [ebp+ecx*4-0x1f6ecbb],bl
  40ba17:	jne    0x40ba2c
  40ba19:	pushf  
  40ba1a:	xor    eax,0xff184fc5
  40ba1f:	out    0x41,eax
  40ba21:	sar    bh,0xff
  40ba24:	sbb    al,0x99
  40ba26:	jne    0x4113de
  40ba2c:	cwde   
  40ba2d:	sbb    eax,0x58d700f7
  40ba32:	add    bh,al
  40ba34:	sbb    ah,BYTE PTR [ebx]
  40ba36:	inc    DWORD PTR [edi]
  40ba38:	out    0x58,eax
  40ba3a:	push   0x0
  40ba3c:	sub    eax,0x3e006a5f
  40ba41:	pop    eax
  40ba42:	add    al,0x8d
  40ba44:	jnp    0x40ba14
  40ba46:	ror    BYTE PTR [ebx+eax*8-0x4e00c79a],cl
  40ba4d:	inc    edx
  40ba4e:	inc    ecx
  40ba4f:	jne    0x40b9f7
  40ba51:	ins    DWORD PTR es:[edi],dx
  40ba52:	mov    dh,0xfb
  40ba54:	xchg   esi,eax
  40ba55:	repnz cdq 
  40ba57:	add    BYTE PTR [esi],bh
  40ba59:	jmp    0x412ea0
	...
  40ba86:	cmp    ecx,DWORD PTR [ebx-0xdc1fe6d]
  40ba8c:	stos   BYTE PTR es:[edi],al
  40ba8d:	mov    al,ds:0xff02b2f6
  40ba92:	repz in eax,dx
  40ba94:	sub    dl,BYTE PTR [ecx-0x52]
  40ba97:	and    eax,0x42b55040
  40ba9c:	mov    es,WORD PTR [ebp-0xbfd296]
  40baa2:	out    dx,al
  40baa3:	lahf   
  40baa4:	sub    al,BYTE PTR [ecx-0x72]
  40baa7:	inc    ebp
  40baa8:	inc    eax
  40baa9:	mov    ebx,eax
  40baab:	inc    edx
  40baac:	cmp    bh,bh
  40baae:	inc    ecx
  40baaf:	pop    edx
  40bab0:	cwde   
  40bab1:	lods   al,BYTE PTR ds:[esi]
  40bab2:	cmp    DWORD PTR [ebp-0x72],ebx
  40bab5:	test   DWORD PTR [esi],edx
  40bab7:	in     eax,dx
  40bab8:	dec    DWORD PTR ds:[esi+0x7f5927da]
  40babf:	repnz aas 
  40bac1:	mov    ch,0xe
  40bac3:	add    eax,0x4f11ff3f
  40bac8:	dec    ecx
  40bac9:	dec    eax
  40baca:	jg     0x40babe
  40bacc:	sub    dl,BYTE PTR [edx-0x76c0eb2f]
  40bad2:	ret    
  40bad3:	adc    eax,0x87f1ff37
  40bad8:	add    al,0x68
  40bada:	adc    ecx,DWORD PTR [ebx-0x3b]
  40badd:	jmp    eax
  40badf:	outs   dx,BYTE PTR ds:[esi]
  40bae0:	xor    al,0xf7
  40bae2:	fstp   DWORD PTR [edx-0x5a]
  40bae5:	aas    
  40bae6:	or     ebx,DWORD PTR [esi]
  40bae8:	xor    ebp,eax
	...
  40bb12:	add    BYTE PTR [eax],al
  40bb14:	leave  
  40bb15:	sti    
  40bb16:	sbb    al,0x6f
  40bb18:	shl    ebx,0x5f
  40bb1b:	mov    DWORD PTR [edx+0x243f85eb],ebp
  40bb21:	pop    ebx
  40bb22:	adc    DWORD PTR [esi+0x7],ebx
  40bb25:	call   0x3f75:0xeaeb3ee9
  40bb2c:	cdq    
  40bb2d:	jecxz  0x40bb4a
  40bb2f:	dec    ecx
  40bb30:	push   es
  40bb31:	call   0x3f55:0xb3f02be9
  40bb38:	mov    bh,0xdd
  40bb3a:	inc    eax
  40bb3b:	aaa    
  40bb3c:	jns    0x40bb21
  40bb3e:	jae    0x40bac9
  40bb40:	xchg   edx,eax
  40bb41:	jmp    0x40bb80
  40bb43:	aas    
  40bb44:	push   cs
  40bb45:	jae    0x40bb80
  40bb47:	(bad)  
  40bb49:	pop    edx
  40bb4a:	cs jns 0x40bb9b
  40bb4d:	jmp    0x40bb74
  40bb4f:	aas    
  40bb50:	push   ecx
  40bb51:	sub    eax,0x5afecc24
  40bb56:	add    ebx,esi
  40bb58:	nop
  40bb59:	jecxz  0x40bb68
  40bb5b:	or     edi,esi
  40bb5d:	addr16 loopne 0x40bae2
  40bb60:	repz push ebp
  40bb63:	sub    DWORD PTR ds:[eax+0x7c],ebx
  40bb67:	adc    esp,DWORD PTR [ecx]
  40bb69:	sub    al,0x5e
  40bb6b:	mov    DWORD PTR [esi],ebx
  40bb6d:	jmp    0x40bb54
  40bb6f:	outs   dx,BYTE PTR ds:[esi]
  40bb71:	repz call 0xc223c4e6
  40bb77:	pop    ss
	...
  40bba0:	add    BYTE PTR [eax],al
  40bba2:	xor    eax,0x8e06551b
  40bba7:	repz mov esp,0xa5e2f16a
  40bbad:	mov    dh,bl
  40bbaf:	jmp    0xe900:0x4820b5ff
  40bbb6:	cmp    eax,0x88dbcde
  40bbbb:	loop   0x40bbbb
  40bbbd:	jmp    0x54c41c53
  40bbc2:	adc    edx,ebp
  40bbc4:	dec    BYTE PTR [esi+0x6a75673d]
  40bbca:	mov    esi,0x687ef6f3
  40bbcf:	pop    ebx
  40bbd0:	je     0x40bbd7
  40bbd2:	aam    0xe2
  40bbd4:	mov    esp,DWORD PTR [ebp+esi*8-0x17]
  40bbd8:	(bad)  
  40bbd9:	ins    WORD PTR es:[edi],dx
  40bbdb:	loope  0x40bb91
  40bbdd:	inc    ebp
  40bbde:	push   eax
  40bbdf:	loop   0x40bbdf
  40bbe1:	inc    ecx
  40bbe2:	test   DWORD PTR [edi],eax
  40bbe4:	dec    DWORD PTR [esi+0x44]
  40bbe7:	sbb    esi,DWORD PTR [ebp+ebx*4-0x44]
  40bbeb:	mov    al,ds:0xe22836d7
  40bbf0:	(bad)  
  40bbf1:	mov    esp,0xe9007a74
  40bbf6:	sub    BYTE PTR [ecx-0xcba6302],ah
  40bbfc:	push   ecx
  40bbfd:	push   ecx
  40bbfe:	or     dl,ah
  40bc00:	(bad)  
  40bc01:	pop    esp
  40bc02:	adc    edx,ebp
  40bc04:	dec    BYTE PTR [esi]
	...
  40bc2e:	add    BYTE PTR [eax],al
  40bc30:	js     0x40bc9a
  40bc32:	or     BYTE PTR [ecx],dl
  40bc34:	fwait
  40bc35:	mov    bl,0xfe
  40bc37:	(bad)  
  40bc38:	imul   ebp,DWORD PTR [eax-0x1d9c0119],0xfffffffe
  40bc3f:	je     0x40bc86
  40bc41:	repz xchg edi,eax
  40bc43:	xchg   ecx,eax
  40bc44:	push   ebx
  40bc45:	loop   0x40bc45
  40bc47:	xchg   esp,eax
  40bc48:	push   0xffffffea
  40bc4a:	(bad)  
  40bc4b:	(bad)  
  40bc4c:	inc    ebx
  40bc4d:	test   al,0xe3
  40bc4f:	(bad)  
  40bc50:	cmp    esp,edx
  40bc52:	inc    BYTE PTR [eax]
  40bc54:	xor    cl,BYTE PTR [edi-0x18]
  40bc57:	pop    eax
  40bc58:	iret   
  40bc59:	pop    ds
  40bc5a:	(bad)  
  40bc5b:	jmp    DWORD PTR [edx+0x37]
  40bc5e:	idiv   edi
  40bc60:	test   al,0x1f
  40bc62:	jne    0x40bc6c
  40bc64:	scas   eax,DWORD PTR es:[edi]
  40bc65:	inc    edx
  40bc66:	test   al,0xff
  40bc68:	test   al,0x1f
  40bc6a:	mov    ch,0xe4
  40bc6c:	mov    al,ds:0x6fe8ff1f
  40bc71:	je     0x40bc72
  40bc73:	(bad)  
  40bc74:	mov    eax,0x28f7ec69
  40bc79:	and    al,ch
  40bc7b:	dec    ebp
  40bc7c:	cld    
  40bc7d:	pop    ds
  40bc7e:	(bad)  
  40bc7f:	call   DWORD PTR [edx+0x2f]
  40bc82:	idiv   edi
  40bc84:	sbb    BYTE PTR [edi],ch
  40bc86:	inc    edx
  40bc87:	stos   DWORD PTR es:[edi],eax
  40bc88:	call   0xe7f6bbac
  40bc8d:	daa    
  40bc8e:	(bad)  
  40bc8f:	(bad)  
  40bc90:	jmp    edi
  40bc92:	test   eax,0xff
	...
  40bcbb:	add    BYTE PTR [eax],al
  40bcbd:	add    al,bh
  40bcbf:	pop    ds
  40bcc0:	inc    ebp
  40bcc1:	clc    
  40bcc2:	push   cs
  40bcc3:	sbb    eax,0x2028fffd
  40bcc8:	jne    0x40bcc6
  40bcca:	dec    DWORD PTR [ebx]
  40bccc:	xchg   esi,eax
  40bccd:	add    BYTE PTR [edi-0x6c],ah
  40bcd0:	ret    0x5708
  40bcd3:	or     BYTE PTR [edx-0xb6d2b14],cl
  40bcd9:	call   edx
  40bcdb:	push   eax
  40bcdc:	call   0x984fcc
  40bce1:	mov    edx,esp
  40bce3:	and    al,0xff
  40bce5:	jne    0x40bd16
  40bce7:	xor    eax,0x2028ab21
  40bcec:	mov    DWORD PTR [ebp+0x1b],eax
  40bcef:	and    BYTE PTR [ebp-0x4],dh
  40bcf2:	call   0x3f40b3a0
  40bcf7:	jg     0x40bd09
  40bcf9:	call   0xff7c8635
  40bcfe:	inc    ebp
  40bcff:	mov    dl,0xb6
  40bd01:	cmp    eax,0x6a3837b7
  40bd06:	ds ja  0x40bccf
  40bd09:	rep outs dx,BYTE PTR ds:[esi]
  40bd0b:	mov    cl,0xb5
  40bd0d:	sti    
  40bd0e:	out    0x53,al
  40bd10:	pop    eax
  40bd11:	dec    ecx
  40bd13:	in     eax,dx
  40bd14:	inc    edx
  40bd15:	je     0x40bd2e
  40bd17:	pop    edx
  40bd18:	add    al,0x10
  40bd1a:	test   eax,0x46753c90
  40bd1f:	retf   0xa786
	...
  40bd4a:	add    BYTE PTR [eax],al
  40bd4c:	test   eax,0xa6753c61
  40bd51:	imul   esi,DWORD PTR [esi+0xae7990b],0x3bd1e2e8
  40bd5b:	dec    DWORD PTR [ecx+0xbff3707]
  40bd61:	xchg   BYTE PTR [esi*2-0x586265ba],bh
  40bd68:	jno    0x40bd03
  40bd6a:	cmp    al,0x75
  40bd6c:	push   0xffffff8a
  40bd6e:	ins    BYTE PTR es:[edi],dx
  40bd6f:	stos   BYTE PTR es:[edi],al
  40bd70:	popa   
  40bd71:	sub    DWORD PTR [edx-0x3e],ecx
  40bd74:	inc    esi
  40bd75:	repnz aad 0x8a
  40bd78:	bound  esi,QWORD PTR [ebp+0x47]
  40bd7b:	call   0xbf6fe70
  40bd80:	push   esi
  40bd81:	retf   
  40bd82:	imul   edi,edi,0x39
  40bd85:	std    
  40bd86:	inc    edx
  40bd87:	jne    0x40bdc4
  40bd89:	mov    eax,0xf236c249
  40bd8e:	lea    eax,[ebp+0x2e]
  40bd91:	ret    0x753b
  40bd94:	dec    edx
  40bd95:	pop    edx
  40bd96:	call   0xe69bcf4a
  40bd9b:	paddd  mm1,QWORD PTR [edi+0x65]
  40bd9f:	sahf   
  40bda0:	ds pop ebx
  40bda2:	jmp    0xc12030e1
  40bda7:	mov    ah,BYTE PTR [edi+ebx*8-0x107c723b]
  40bdae:	mov    ebp,0xb1
	...
  40bdd7:	add    BYTE PTR [eax],al
  40bdd9:	add    ch,ah
  40bddb:	fistp  QWORD PTR [ebx]
  40bddd:	sub    cl,bl
  40bddf:	gs mov cl,0x2c
  40bde2:	mov    dh,BYTE PTR [ebp+eiz*4-0x729a4ac5]
  40bde9:	das    
  40bdea:	ja     0x40be5f
  40bdec:	rcr    ch,0xfe
  40bdef:	pop    edx
  40bdf0:	aaa    
  40bdf1:	sub    al,0x92
  40bdf3:	enter  0x3e8,0x35
  40bdf7:	sbb    esi,esp
  40bdf9:	add    eax,0x34621d95
  40bdfe:	xor    dl,BYTE PTR es:[ebx]
  40be01:	lds    edx,FWORD PTR [ecx+0x3e9102f7]
  40be07:	pop    ebx
  40be08:	jmp    0x31ac:0x4165b733
  40be0f:	test   DWORD PTR [eax-0x7d0cf7fd],ebp
  40be15:	xchg   edx,eax
  40be16:	ds pop ebx
  40be18:	repnz inc ebx
  40be1a:	jmp    0x40be78
  40be1c:	inc    edx
  40be1d:	pop    ds
  40be1e:	les    ecx,FWORD PTR [edx+0x27]
  40be21:	add    al,0x3e
  40be23:	mov    edi,DWORD PTR [ebx+0x1df2d33a]
  40be29:	mov    cl,0x39
  40be2b:	repz (bad) 
  40be2f:	fbstp  TBYTE PTR [edx+0x694bb9db]
  40be35:	cli    
  40be36:	sub    DWORD PTR [eax+0x3b],ebp
  40be39:	lods   al,BYTE PTR ds:[esi]
  40be3a:	ds dec ebx
  40be3c:	add    BYTE PTR [esi],al
	...
  40be66:	add    BYTE PTR [eax],al
  40be68:	xchg   esp,eax
  40be69:	fidiv  WORD PTR [ecx+eiz*8+0x65]
  40be6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6f:	out    0x44,al
  40be71:	fidiv  WORD PTR [ebp+ebx*8+0x44]
  40be75:	push   0x56aed6ec
  40be7a:	call   0xff1f1e2d
  40be7f:	(bad)  
  40be80:	scas   al,BYTE PTR es:[edi]
  40be81:	repnz out 0xb9,eax
  40be84:	push   edx
  40be85:	fdivp  st(6),st
  40be87:	fs (bad) 
  40be89:	out    dx,al
  40be8a:	dec    edi
  40be8b:	shl    DWORD PTR [ebx+ebp*4],0xfe
  40be8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be90:	sbb    BYTE PTR [ebx+0x5e],bl
  40be93:	mov    al,0x7b
  40be95:	push   ebx
  40be96:	add    BYTE PTR [ecx+ecx*8],bh
  40be99:	out    dx,eax
  40be9a:	and    BYTE PTR [ebp+0x13007169],0x4f
  40bea1:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40bea5:	push   ebp
  40bea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea7:	jbe    0x40befd
  40bea9:	aam    0x44
  40beab:	ins    DWORD PTR es:[edi],dx
  40beac:	in     eax,0xe7
  40beae:	pop    eax
  40beaf:	test   al,0x3d
  40beb1:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40beb5:	mov    dh,0xfb
  40beb7:	push   esi
  40beb8:	xor    al,0x71
  40beba:	add    cl,al
  40bebc:	test   BYTE PTR [ecx+eax*2+0x5a2195e9],al
  40bec3:	test   al,0x3d
  40bec5:	fidiv  WORD PTR [esp+ebp*1]
  40bec8:	test   DWORD PTR [ebx+0x4100],ebx
	...
  40bef6:	aam    0xae
  40bef8:	(bad)  
  40bef9:	cmp    BYTE PTR es:[ebx],bl
  40befc:	je     0x40bf01
  40befe:	xchg   edx,eax
  40beff:	inc    eax
  40bf00:	pop    edx
  40bf01:	test   al,0x3d
  40bf03:	mov    ebp,eax
  40bf05:	bound  esp,QWORD PTR [esi-0x38ff0122]
  40bf0b:	or     esi,edi
  40bf0d:	jne    0x40bf3e
  40bf0f:	xor    ah,bl
  40bf11:	(bad)  
  40bf12:	adc    BYTE PTR [eax+ebp*8],ah
  40bf15:	mov    DWORD PTR [esi+0x21],edi
  40bf18:	jmp    FWORD PTR [edx+0x3d]
  40bf1b:	das    
  40bf1c:	fisubr DWORD PTR [ebp-0x3ff4dc20]
  40bf22:	fwait
  40bf23:	(bad)  
  40bf24:	data16 adc ch,BYTE PTR ds:0xf4fff1a
  40bf2b:	mov    ecx,0xaea0ffab
  40bf30:	sbb    al,0x5a
  40bf32:	es push edi
  40bf34:	push   eax
  40bf35:	call   0x403566
  40bf3a:	pop    es
  40bf3b:	pop    es
  40bf3c:	(bad)  
  40bf3d:	jne    0x40bf0e
  40bf3f:	xor    DWORD PTR [ebx-0x17dc2f02],esi
  40bf45:	pop    ecx
  40bf46:	(bad)  
  40bf47:	and    edi,edi
  40bf49:	push   0xffffffa3
  40bf4b:	xor    DWORD PTR [edx+0xb2420ad],ebp
  40bf51:	rcr    BYTE PTR [ebx+0x2d1266fc],0x1a
  40bf58:	dec    DWORD PTR [edi+0x0]
	...
  40bf83:	add    bh,ch
  40bf85:	call   0xaf21bf35
  40bf8a:	sbb    al,0x5a
  40bf8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf8d:	pop    ecx
  40bf8e:	push   eax
  40bf8f:	call   0x4035d0
  40bf94:	(bad)  
  40bf95:	or     esi,edi
  40bf97:	jne    0x40c008
  40bf99:	xor    DWORD PTR [ebx-0x17dbef02],eax
  40bf9f:	sub    DWORD PTR [esi+0x746aff23],edi
  40bfa5:	xor    DWORD PTR [edx-0x53],edi
  40bfa8:	and    BYTE PTR [ebx+ecx*1],ah
  40bfab:	sar    BYTE PTR [esi],0xbe
  40bfae:	frstor [edi+0x4c]
  40bfb1:	test   al,0xc1
  40bfb3:	(bad)  
  40bfb4:	jns    0x40c000
  40bfb6:	add    ch,BYTE PTR [ebp+0x1daade21]
  40bfbc:	je     0x40bf71
  40bfbe:	add    dl,BYTE PTR [eax+0x26]
  40bfc1:	jmp    0xfed4:0x2309ff66
  40bfc8:	mov    ebp,edx
  40bfca:	sub    dl,BYTE PTR [ebx-0x8]
  40bfcd:	add    eax,0xdaf7e838
  40bfd2:	aaa    
  40bfd3:	(bad)  
  40bfd4:	jmp    0x6c3ff7f8
  40bfd9:	jmp    0xc937:0xa5a06c2a
  40bfe0:	cld    
  40bfe1:	test   BYTE PTR [edx],0x55
  40bfe4:	mov    ch,0xc6
  40bfe6:	add    esp,0x0
	...
  40c010:	add    BYTE PTR [eax],al
  40c012:	loop   0x40bfd9
  40c014:	aaa    
  40c015:	dec    ebx
  40c017:	das    
  40c018:	cmp    BYTE PTR [eax-0x4f],dl
  40c01b:	inc    edi
  40c01c:	adc    al,0xff
  40c01e:	xor    esp,esi
  40c020:	sub    al,BYTE PTR [ebx+ecx*8]
  40c023:	repnz add cl,BYTE PTR [ebx]
  40c026:	jle    0x40c01d
  40c028:	jge    0x40bfe8
  40c02a:	aas    
  40c02b:	repnz add al,bh
  40c02e:	add    edi,DWORD PTR [edx+0x3]
  40c031:	add    BYTE PTR [esi],bh
  40c033:	repnz aas 
  40c035:	inc    ebp
  40c036:	jb     0x40bfbd
  40c038:	add    BYTE PTR [eax],al
  40c03a:	sbb    BYTE PTR ds:[ebx],al
  40c03d:	push   0x3e
  40c03f:	or     BYTE PTR [ebx],al
  40c041:	push   0x3e
  40c043:	outs   dx,DWORD PTR ds:[esi]
  40c044:	mov    esi,0x7e76eef3
  40c049:	hlt    
  40c04a:	dec    ecx
  40c04b:	sub    eax,0x5b495038
  40c050:	pushf  
  40c051:	cmp    eax,DWORD PTR [ecx+0x66]
  40c054:	sbb    eax,0xe8c7102b
  40c059:	add    eax,DWORD PTR [ebp+0x1b]
  40c05c:	xchg   ebp,eax
  40c05d:	(bad)  
  40c05e:	push   ss
  40c05f:	(bad)  
  40c061:	add    edi,DWORD PTR [esi]
  40c063:	jae    0x40c0ad
  40c065:	retf   
  40c066:	jle    0x40c0c3
  40c068:	imul   BYTE PTR [ebp+0x67c5f341]
  40c06e:	or     esp,ebx
  40c070:	cmp    BYTE PTR [ebx+0x3063cdee],cl
	...
  40c09e:	add    BYTE PTR [eax],al
  40c0a0:	icebp  
  40c0a1:	fcmovnbe st,st(5)
  40c0a3:	aam    0x8f
  40c0a5:	repz cmc 
  40c0a7:	addr16 jmp 0xeec23088
  40c0ad:	jecxz  0x40c06c
  40c0af:	aaa    
  40c0b0:	out    0x6d,al
  40c0b2:	xor    DWORD PTR [edi],0xabe970d1
  40c0b8:	pop    eax
  40c0b9:	sub    DWORD PTR [eax],0x98a5c104
  40c0bf:	das    
  40c0c0:	mov    ecx,0x45b195db
  40c0c5:	repz sbb BYTE PTR [ebx-0x57],ch
  40c0c9:	fld    TBYTE PTR [edi-0x7f]
  40c0cc:	call   0x15b:0x24377de3
  40c0d3:	mov    esp,0x36e999f7
  40c0d8:	shr    edx,cl
  40c0da:	pop    ebp
  40c0db:	aaa    
  40c0dc:	sbb    ebx,0x856607d3
  40c0e2:	xor    BYTE PTR [edi],0x71
  40c0e5:	shl    DWORD PTR [ebx+0x24],1
  40c0e8:	jno    0x40c0c5
  40c0ea:	inc    ebp
  40c0eb:	stos   BYTE PTR es:[edi],al
  40c0ec:	popa   
  40c0ed:	jae    0x40c08d
  40c0ef:	fsin   
  40c0f1:	pop    edx
  40c0f2:	add    BYTE PTR [esi],dh
  40c0f4:	iret   
  40c0f5:	jmp    0xf574:0xdc112ef6
  40c0fc:	adc    eax,0x711eab21
  40c101:	in     al,0x84
  40c103:	add    eax,0x0
	...
  40c12c:	add    BYTE PTR [eax],al
  40c12e:	popa   
  40c12f:	(bad)  
  40c131:	cmp    DWORD PTR ds:0xfaa36643,0xffffffda
  40c138:	std    
  40c139:	xor    al,0x52
  40c13b:	sar    dh,cl
  40c13d:	test   BYTE PTR [eax+0x50],0xc
  40c141:	add    DWORD PTR [ecx],esi
  40c143:	push   es
  40c144:	jmp    esi
  40c146:	mov    dl,0xe0
  40c148:	out    0xd6,eax
  40c14a:	xor    dl,bl
  40c14c:	imul   ebp,ecx,0x2859dca5
  40c152:	inc    edx
  40c153:	fidiv  DWORD PTR [ecx+edi*4-0x410125f0]
  40c15a:	mov    fs,WORD PTR [esi-0x18]
  40c15d:	in     eax,dx
  40c15e:	fs (bad) 
  40c161:	pusha  
  40c162:	mov    esi,0x8a6f6b7
  40c167:	fidivr WORD PTR [ebp+eax*4-0x16012598]
  40c16e:	out    dx,al
  40c16f:	arpl   WORD PTR [ebx-0x12da2b4],ax
  40c175:	xchg   BYTE PTR ds:0x166a654f,bh
  40c17b:	(bad)  
  40c17c:	div    BYTE PTR [esi+0x48]
  40c17f:	pop    ebx
  40c180:	je     0x40c18f
  40c182:	mov    ebp,0x485ee818
  40c187:	(bad)  
  40c189:	aam    0x8c
  40c18b:	inc    edx
  40c18c:	add    cl,ch
  40c18e:	sbb    BYTE PTR [ecx],bl
  40c190:	call   esp
	...
  40c1ba:	add    BYTE PTR [eax],al
  40c1bc:	xor    eax,0xb30065c3
  40c1c1:	xchg   ecx,eax
  40c1c2:	(bad)  
  40c1c3:	call   edx
  40c1c5:	xor    edi,0x759108ff
  40c1cb:	or     bh,bh
  40c1cd:	push   ebx
  40c1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cf:	call   FWORD PTR [eax]
  40c1d1:	xchg   ecx,eax
  40c1d2:	mov    ch,0xe8
  40c1d4:	push   eax
  40c1d5:	xchg   ecx,eax
  40c1d6:	(bad)  
  40c1d7:	call   edx
  40c1d9:	gs call 0xffd2458b
  40c1df:	jmp    DWORD PTR [edx+0x7a]
  40c1e2:	idiv   edi
  40c1e4:	sbb    BYTE PTR [eax-0xfc0f78b],dl
  40c1ea:	mov    ds:0xb59018ff,eax
  40c1ef:	loopne 0x40c1d1
  40c1f1:	(bad)  
  40c1f2:	(bad)  
  40c1f3:	call   DWORD PTR [edx-0x3c6f1799]
  40c1f9:	(bad)  
  40c1fa:	(bad)  
  40c1fb:	call   edx
  40c1fd:	xor    dh,bh
  40c1ff:	(bad)  
  40c200:	clc    
  40c201:	(bad)  
  40c202:	jne    0x40c20c
  40c204:	out    dx,eax
  40c205:	fsub   QWORD PTR [ebx-0x4a707701]
  40c20b:	in     al,0x90
  40c20d:	(bad)  
  40c20e:	(bad)  
  40c20f:	call   0x3ffa47
  40c214:	fmul   DWORD PTR [ecx-0x20]
  40c217:	test   eax,0x59e88f
  40c21d:	nop
  40c21e:	(bad)  
  40c21f:	inc    DWORD PTR [eax]
	...
  40c249:	add    BYTE PTR [edx-0x7d],ah
  40c24c:	idiv   edi
  40c24e:	sbb    BYTE PTR [edi-0x6ff758b2],al
  40c254:	push   DWORD PTR [ebp-0x7841]
  40c25a:	out    dx,eax
  40c25b:	fwait
  40c25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c25d:	call   FWORD PTR [eax]
  40c25f:	nop
  40c260:	mov    ch,0xdc
  40c262:	cmp    DWORD PTR ds:0x5d6b56ff,esi
  40c269:	jmp    DWORD PTR [ecx+0x20]
  40c26c:	outs   dx,DWORD PTR ds:[esi]
  40c26d:	lock push ecx
  40c26f:	cwde   
  40c270:	xor    eax,0x33bfcbff
  40c275:	jne    0x40c2ad
  40c277:	sbb    al,0xf7
  40c279:	std    
  40c27a:	inc    ecx
  40c27b:	xor    BYTE PTR ds:0x35722eb5,0xff
  40c282:	es iret 
  40c284:	pop    ebx
  40c285:	jmp    FWORD PTR [ecx]
  40c287:	push   0xffffffbf
  40c289:	not    DWORD PTR [edi]
  40c28b:	hlt    
  40c28c:	xor    al,0xff
  40c28e:	sbb    edx,ebx
  40c290:	lods   eax,DWORD PTR ds:[esi]
  40c291:	sti    
  40c292:	or     edx,DWORD PTR es:[eax+0x427b3e00]
  40c299:	or     al,0x3e
  40c29b:	xchg   edi,eax
  40c29c:	mov    esp,ebp
  40c29e:	mov    ebp,0x3e6a36fe
  40c2a3:	sbb    al,0xe
  40c2a5:	push   DWORD PTR [ebx-0x46]
  40c2a8:	sub    ch,BYTE PTR [esi]
  40c2aa:	call   0x0:0x8933a1
	...
  40c2d5:	add    BYTE PTR [eax],al
  40c2d7:	add    BYTE PTR [ebx+0x748bab16],al
  40c2dd:	add    DWORD PTR [eax+ebp*2],0x3c
  40c2e1:	ret    0x8002
  40c2e4:	shl    DWORD PTR [edi+0xc],0xe8
  40c2e8:	mov    cl,0xf7
  40c2ea:	xor    edi,edi
  40c2ec:	es fld DWORD PTR ds:[eax+0x3e]
  40c2f1:	jmp    0x833787e3
  40c2f6:	add    al,0xff
  40c2f8:	adc    ecx,edx
  40c2fa:	sub    ah,ah
  40c2fc:	xchg   ebx,eax
  40c2fd:	push   ecx
  40c2fe:	xor    al,0xff
  40c300:	adc    eax,DWORD PTR [esi+0x34]
  40c303:	jne    0x40c33b
  40c305:	pop    ebx
  40c306:	push   ecx
  40c307:	ret    0xd89d
  40c30a:	pop    ebp
  40c30b:	dec    edx
  40c30c:	jl     0x40c36d
  40c30e:	jmp    0x680877e1
  40c313:	aas    
  40c314:	adc    al,0x45
  40c317:	xor    al,0xcb
  40c319:	push   ds
  40c31a:	cmp    eax,0xd94e50d3
  40c31f:	xor    al,0xd3
  40c321:	inc    cx
  40c323:	pop    edx
  40c324:	lods   al,BYTE PTR ds:[esi]
  40c325:	pop    ebx
  40c326:	jmp    0x64a8c133
  40c32b:	jne    0x40c36c
  40c32d:	pop    ebx
  40c32e:	jmp    0xe914466f
  40c333:	add    edi,DWORD PTR [esi]
  40c335:	pop    ebx
  40c336:	cs mov esi,0x3e5d80d
	...
  40c364:	add    BYTE PTR [eax],al
  40c366:	ds inc ebp
  40c368:	jmp    0xe982cd16
  40c36d:	test   eax,0x382be701
  40c372:	mov    fs,esi
  40c374:	arpl   WORD PTR [eax],di
  40c376:	jmp    0xe9159952
  40c37b:	dec    ebp
  40c37c:	shl    DWORD PTR [ebx],1
  40c37e:	imul   edx,edi,0xffffffd0
  40c381:	pop    edi
  40c382:	lods   al,BYTE PTR ds:[esi]
  40c383:	pop    edx
  40c384:	jmp    0xec8f5587
  40c389:	sbb    al,0xbf
  40c38b:	pop    ecx
  40c38c:	jmp    0x313b1994
  40c391:	lds    edi,FWORD PTR [ecx-0x59ebec28]
  40c397:	(bad)  
  40c398:	aas    
  40c399:	xor    ebp,DWORD PTR [ecx-0x4cab9dd6]
  40c39f:	fnstsw WORD PTR [ebx+edi*1-0x67]
  40c3a3:	xlat   BYTE PTR ds:[ebx]
  40c3a4:	sbb    dh,dl
  40c3a6:	cdq    
  40c3a7:	(bad)  
  40c3a8:	(bad)  
  40c3a9:	aas    
  40c3aa:	dec    ebp
  40c3ab:	fmul   DWORD PTR [eax-0x12fb59c]
  40c3b1:	pop    dx
  40c3b3:	sbb    eax,0x452d5ea6
  40c3b8:	add    cl,al
  40c3ba:	cld    
  40c3bb:	xor    al,0x41
  40c3bd:	jmp    0x3f30d1ee
  40c3c2:	or     eax,0x51b4fed8
  40c3c7:	mov    edi,0x8044
	...
  40c3f4:	or     eax,0x166488d8
  40c3f9:	sar    dh,1
  40c3fb:	es fcom st(6)
  40c3fe:	inc    dx
  40c400:	add    BYTE PTR [eax+eax*1],bl
  40c403:	push   ss
  40c404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c405:	retf   
  40c406:	test   BYTE PTR [esi],0x6d
  40c409:	(bad)  
  40c40a:	je     0x40c401
  40c40c:	xor    eax,0x4cfea981
  40c411:	in     al,0x84
  40c413:	or     DWORD PTR [ebp-0x2a],eax
  40c416:	inc    BYTE PTR [ebx+0x43b9433d]
  40c41c:	add    edx,edi
  40c41e:	std    
  40c41f:	xchg   esp,eax
  40c420:	sub    eax,0x2cd6fece
  40c425:	push   eax
  40c426:	or     al,0xc1
  40c428:	cmp    al,0x4
  40c42a:	inc    esi
  40c42c:	pop    edx
  40c42d:	loopne 0x40c41a
  40c42f:	mov    dh,0xc
  40c431:	(bad)  
  40c432:	imul   ebp,ecx,0x285999a5
  40c438:	cmp    dl,dh
  40c43a:	mov    ah,0x99
  40c43c:	je     0x40c414
  40c43e:	(bad)  
  40c43f:	sahf   
  40c440:	mul    BYTE PTR [edx-0x18]
  40c443:	popf   
  40c444:	add    eax,0xb660fed6
  40c449:	ret    
  40c44a:	test   BYTE PTR [eax],0xc0
  40c44d:	mov    DWORD PTR [edx+0x0],ebp
  40c450:	das    
  40c451:	ja     0x40c4ad
  40c453:	inc    ecx
  40c454:	xchg   edi,eax
  40c455:	mov    DWORD PTR [ebp+0xf0],esi
	...
  40c47f:	add    BYTE PTR [eax],al
  40c481:	add    BYTE PTR [eax],cl
  40c483:	mov    edi,edi
  40c485:	call   FWORD PTR [edx-0x3026192a]
  40c48b:	mov    edi,edi
  40c48d:	mov    edx,ebx
  40c48f:	and    eax,0xdcf0fff7
  40c494:	mov    esp,0xff8918e4
  40c499:	add    BYTE PTR [edx-0x8427e29],cl
  40c49f:	nop
  40c4a0:	(bad)  
  40c4a1:	call   DWORD PTR [edi+0xe]
  40c4a4:	and    DWORD PTR fs:[edx+0x50fff776],0x5a
  40c4ac:	je     0x40c50a
  40c4ae:	xchg   esp,eax
  40c4af:	dec    ebx
  40c4b0:	call   0xc9f5ac
  40c4b5:	je     0x40c46b
  40c4b7:	icebp  
  40c4b8:	(bad)  
  40c4b9:	inc    DWORD PTR [eax+0x4c]
  40c4bc:	push   DWORD PTR [ebp+0x1f]
  40c4bf:	jb     0x40c4fc
  40c4c1:	mov    ds:0xb5ff8c10,al
  40c4c6:	adc    edx,DWORD PTR [edi+edi*8+0x70e10ff]
  40c4cd:	call   0x400232
  40c4d2:	lock dec ebp
  40c4d4:	call   0xffccc5d0
  40c4d9:	jne    0x40c4aa
  40c4db:	jno    0x40c45e
  40c4dd:	mov    ds:0xb5ff8b90,al
  40c4e2:	sti    
  40c4e3:	xchg   ebx,eax
  40c4e4:	(bad)  
  40c4e5:	inc    DWORD PTR [eax]
	...
  40c50f:	add    al,ah
  40c511:	or     eax,0x3d54e807
  40c516:	(bad)  
  40c517:	(bad)  
  40c518:	ds in  eax,dx
  40c51a:	jbe    0x40c4fc
  40c51c:	test   eax,0x13ff30e4
  40c521:	int3   
  40c522:	sbb    ah,BYTE PTR [ebp-0x24]
  40c525:	push   esp
  40c526:	xor    edi,edi
  40c528:	shr    edi,cl
  40c52a:	cmp    bh,bh
  40c52c:	add    DWORD PTR [edi+esi*4+0x7],0xff651466
  40c534:	jno    0x40c56a
  40c536:	ja     0x40c51c
  40c538:	jno    0x40c566
  40c53a:	xor    eax,ebp
  40c53c:	daa    
  40c53d:	fbstp  TBYTE PTR [eax]
  40c53f:	call   FWORD PTR [ecx+0x56]
  40c542:	and    al,0xf7
  40c544:	push   ecx
  40c545:	xchg   esp,eax
  40c546:	sbb    al,0x2e
  40c548:	mov    ds:0x8bff318c,eax
  40c54d:	xchg   edi,eax
  40c54e:	cmp    edi,edi
  40c550:	cmp    DWORD PTR [ebx-0x1b],ebp
  40c553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c554:	xor    DWORD PTR [esi+0x31],esi
  40c557:	mov    ch,0x16
  40c559:	jbe    0x40c58c
  40c55b:	call   DWORD PTR [esi]
  40c55d:	retf   
  40c55e:	call   FWORD PTR gs:[ecx]
  40c561:	pop    esi
  40c562:	ja     0x40c540
  40c564:	or     esi,edx
  40c566:	das    
  40c567:	call   0xff71eca7
  40c56c:	add    DWORD PTR [eax-0x420608cc],edx
  40c572:	das    
  40c573:	jne    0x40c575
	...
  40c59d:	add    BYTE PTR [edx-0x4b],al
  40c5a0:	mov    ch,0x7
  40c5a2:	(bad)  
  40c5a3:	outs   dx,DWORD PTR ds:[esi]
  40c5a4:	xor    bh,bh
  40c5a6:	loope  0x40c54d
  40c5a8:	jne    0x40c59a
  40c5aa:	rcr    DWORD PTR [ebp-0x213017d1],1
  40c5b0:	das    
  40c5b1:	dec    ecx
  40c5b3:	xchg   DWORD PTR [ecx+ebp*8],ebp
  40c5b6:	outs   dx,DWORD PTR ds:[esi]
  40c5b7:	add    al,0x30
  40c5b9:	(bad)  
  40c5ba:	mov    ecx,0xa6301c5b
  40c5bf:	data16 js 0x40c5c5
  40c5c2:	mov    ds:0x2fa1ffaa,al
  40c5c8:	bound  ebx,QWORD PTR [edi]
  40c5ca:	mov    ebp,0x919d849f
  40c5cf:	inc    edx
  40c5d0:	(bad)  
  40c5d1:	xor    BYTE PTR [ebx],dl
  40c5d3:	arpl   WORD PTR [ecx+0x6dd4dc04],ax
  40c5d9:	jp     0x40c5de
  40c5db:	xlat   BYTE PTR ds:[ebx]
  40c5dc:	shl    BYTE PTR [esi],1
  40c5de:	adc    al,0x1a
  40c5e0:	jmp    0xa0def915
  40c5e5:	ret    0xd561
  40c5e8:	sar    ebx,cl
  40c5ea:	popa   
  40c5eb:	int    0x43
  40c5ed:	xor    BYTE PTR [ecx+0x43],dl
  40c5f0:	xor    al,0xcd
  40c5f2:	(bad)  
  40c5f3:	pop    edx
  40c5f4:	rol    DWORD PTR ds:0x30695b3e,0xb3
  40c5fb:	arpl   WORD PTR [ecx],dx
  40c5fd:	daa    
  40c5fe:	xor    edx,esp
  40c600:	sbb    eax,0x30
	...
  40c629:	add    BYTE PTR [eax],al
  40c62b:	add    BYTE PTR [ebx+0x39b615d7],dh
  40c631:	ret    
  40c632:	mul    BYTE PTR [ebp+0x19]
  40c635:	aam    0x2f
  40c637:	inc    ebp
  40c638:	cmp    bl,BYTE PTR [ebx-0x6c]
  40c63b:	jl     0x40c657
  40c63d:	fisubr DWORD PTR [edi+ebx*1]
  40c640:	or     esp,edx
  40c642:	in     eax,dx
  40c643:	jge    0x40c5c8
  40c645:	xlat   BYTE PTR ds:[ebx]
  40c646:	cmp    BYTE PTR [edi],ch
  40c648:	imul   ebp,DWORD PTR [ebx-0x22],0xffffffb9
  40c64c:	xor    eax,0x3e9486c3
  40c651:	pop    ebx
  40c652:	loop   0x40c697
  40c654:	dec    ecx
  40c655:	fidiv  WORD PTR [ebp+0x4]
  40c658:	ds pop ebx
  40c65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c65b:	leave  
  40c65c:	rcr    DWORD PTR [edx+0x0],1
  40c65f:	jmp    0x250821a1
  40c664:	jbe    0x40c63a
  40c666:	push   es
  40c667:	jmp    0x134107a9
  40c66c:	inc    edx
  40c66d:	inc    ecx
  40c66e:	add    BYTE PTR [ebx],al
  40c670:	cmp    ah,dh
  40c672:	inc    esp
  40c673:	xchg   ebp,eax
  40c674:	jb     0x40c65c
  40c676:	test   BYTE PTR [ebp+0x49],bh
  40c679:	aam    0xfe
  40c67b:	sbb    DWORD PTR [ecx+0x4e],ebx
  40c67e:	clc    
  40c67f:	jbe    0x40c648
  40c681:	iret   
  40c682:	out    0x4f,eax
  40c684:	rcr    BYTE PTR [edx+0x0],cl
  40c687:	repnz std 
  40c689:	dec    esi
  40c68a:	add    dl,BYTE PTR [edx-0x79]
  40c68d:	out    0x84,al
  40c68f:	inc    ebp
	...
  40c6b8:	add    BYTE PTR [eax],al
  40c6ba:	sub    esp,edx
  40c6bc:	(bad)  
  40c6bd:	mov    ecx,0x3ef3ddbe
  40c6c2:	and    esp,edx
  40c6c4:	dec    edi
  40c6c5:	xchg   DWORD PTR ds:[ebx-0x1],esp
  40c6c9:	mov    esp,0x8640bb41
  40c6ce:	imul   edx,edx,0xca6a6c88
  40c6d4:	(bad)  
  40c6d5:	push   ds
  40c6d6:	and    eax,0xbccb7413
  40c6db:	adc    ah,ch
  40c6dd:	push   ss
  40c6de:	imul   edx,edx,0x43427cff
  40c6e4:	add    cl,ch
  40c6e6:	sub    BYTE PTR [ecx],dl
  40c6e8:	(bad)  
  40c6e9:	cmp    al,0x5e
  40c6eb:	retf   0xeefe
  40c6ee:	sub    BYTE PTR [eax],cl
  40c6f0:	lock fisub WORD PTR [eax]
  40c6f3:	sar    dh,cl
  40c6f5:	push   esp
  40c6f6:	jmp    0xfed2:0x10a0b4ba
  40c6fd:	xchg   esp,eax
  40c6fe:	or     eax,0xf800feca
  40c703:	jbe    0x40c6f7
  40c705:	mov    ds:0x45ff8188,eax
  40c70a:	(bad)  
  40c70b:	jne    0x40c68d
  40c70d:	push   DWORD PTR [edx-0x75]
  40c710:	call   0x9efe26
  40c715:	leave  
  40c716:	aad    0xd2
  40c718:	(bad)  
  40c719:	push   esp
  40c71a:	sbb    al,0x72
  40c71c:	add    esp,0x0
	...
  40c747:	add    bl,cl
  40c749:	hlt    
  40c74a:	(bad)  
  40c74b:	imul   ebx,DWORD PTR [edi-0x50f78a7f],0x8ffa159
  40c755:	dec    edi
  40c756:	inc    ebp
  40c757:	cld    
  40c758:	aas    
  40c759:	gs pop ebx
  40c75b:	inc    ecx
  40c75c:	xor    DWORD PTR [di],0xfe97afc5
  40c763:	inc    BYTE PTR [edx+0x825e6d6]
  40c769:	cmp    edi,0x3fa55d68
  40c76f:	add    BYTE PTR [edi+0x5c],ch
  40c772:	add    BYTE PTR [eax],al
  40c774:	xlat   BYTE PTR ds:[ebx]
  40c775:	xor    BYTE PTR [ebp+0x8],0x7f
  40c779:	ins    DWORD PTR es:[edi],dx
  40c77a:	(bad)  
  40c77b:	call   FWORD PTR [eax-0xa]
  40c77e:	xor    DWORD PTR [ebx-0x2a],ebx
  40c781:	pop    ebp
  40c782:	push   DWORD PTR ds:0x401652
  40c788:	dec    eax
  40c789:	adc    eax,DWORD PTR [edi]
  40c78b:	call   0x4048b7
  40c790:	scas   eax,DWORD PTR es:[edi]
  40c791:	int3   
  40c792:	pop    ecx
  40c793:	inc    ecx
  40c794:	pop    ss
  40c795:	test   BYTE PTR [eax],0x0
  40c798:	out    0xdd,eax
  40c79a:	(bad)  
  40c79b:	jne    0x40c78c
  40c79d:	jne    0x40c78d
  40c79f:	dec    BYTE PTR [eax]
  40c7a1:	cmp    bh,0x75
  40c7a4:	ds test al,0x2c
  40c7a7:	jne    0x40c7ef
  40c7a9:	pushf  
  40c7aa:	mov    al,ss:0x0
	...
  40c7d4:	add    BYTE PTR [eax],al
  40c7d6:	rcr    DWORD PTR [eax-0x3bbd3dc6],1
  40c7dc:	aad    0x8a
  40c7de:	ror    BYTE PTR [eax],cl
  40c7e0:	mov    bh,0xb
  40c7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e3:	add    esp,DWORD PTR [ebp-0x1]
  40c7e6:	mov    cl,0xcc
  40c7e8:	inc    edx
  40c7e9:	je     0x40c7e3
  40c7eb:	imul   esp,DWORD PTR [eax-0x2d3c00a6],0xffffffe7
  40c7f2:	or     bl,BYTE PTR [ecx]
  40c7f4:	sub    eax,0xd473eeff
  40c7f9:	les    ebx,FWORD PTR ds:[bp+di]
  40c7fd:	mov    esi,0x40c97216
  40c802:	ds je  0x40c832
  40c805:	jne    0x40c84d
  40c807:	sub    al,0xf7
  40c809:	retf   
  40c80a:	imul   esi,DWORD PTR [eax],0xc43f67cc
  40c810:	sbb    edi,DWORD PTR [esi+0x40c80ce6]
  40c816:	ds hlt 
  40c818:	sub    esi,DWORD PTR [ebp+0x36]
  40c81b:	sub    al,0xe3
  40c81d:	retf   
  40c81e:	inc    ecx
  40c81f:	mov    ah,cl
  40c821:	addr16 cmp al,0xc2
  40c824:	sbb    edi,DWORD PTR [esi+0x40c7e2a6]
  40c82a:	adc    ch,BYTE PTR ds:[esi*2-0x3400a5ca]
  40c832:	sbb    DWORD PTR [edx+0x1c],esp
  40c835:	push   ss
  40c836:	fstp   QWORD PTR [ecx+0x2d]
  40c839:	leave  
	...
  40c862:	add    BYTE PTR [eax],al
  40c864:	cld    
  40c865:	retf   0x5502
  40c868:	mov    ch,0x56
  40c86a:	add    esp,0x6a02dcfa
  40c870:	push   edi
  40c871:	pop    ebx
  40c872:	out    0xb6,al
  40c874:	inc    ecx
  40c875:	ret    
  40c876:	and    BYTE PTR [ecx+eiz*8-0x30],ah
  40c87a:	pop    edi
  40c87b:	(bad)  
  40c87c:	aad    0x45
  40c87e:	repz sub al,0x4b
  40c881:	arpl   cx,dx
  40c883:	or     ecx,0xffffffd0
  40c886:	mov    ebp,0x3bd01c99
  40c88b:	cld    
  40c88c:	mov    eax,ds:0xb12cae49
  40c891:	inc    ebp
  40c892:	add    eax,0x9163332d
  40c897:	lahf   
  40c898:	mov    al,ds:0x132c95d0
  40c89d:	iret   
  40c89e:	lea    esi,[esi+0x641ac339]
  40c8a4:	mov    eax,edx
  40c8a6:	scas   eax,DWORD PTR es:[edi]
  40c8a7:	inc    ecx
  40c8a8:	cmp    bl,BYTE PTR [ebx+0x1c]
  40c8ab:	jns    0x40c917
  40c8ad:	fsub   QWORD PTR [edi+ebp*1+0x1bf54671]
  40c8b4:	inc    esp
  40c8b5:	clc    
  40c8b6:	pop    ebp
  40c8b7:	sub    al,0x35
  40c8b9:	fwait
  40c8ba:	in     eax,0x87
  40c8bc:	popf   
  40c8bd:	pop    ebx
  40c8be:	jmp    0x45578fc6
  40c8c3:	or     bl,0x6a
  40c8c6:	jmp    0x40c982
	...
  40c8ef:	add    BYTE PTR [eax],al
  40c8f1:	add    BYTE PTR [ebx],dh
  40c8f3:	sar    BYTE PTR [ebx+0x2d463913],1
  40c8f9:	sbb    edx,edi
  40c8fb:	clc    
  40c8fc:	and    eax,0x1d15b72c
  40c901:	fwait
  40c902:	mov    eax,0x1903a833
  40c907:	inc    esi
  40c908:	or     eax,0x5f94b1b
  40c90d:	sub    al,0x6e
  40c90f:	inc    ebx
  40c910:	jmp    0x51da18
  40c915:	cdq    
  40c916:	sub    al,BYTE PTR [esi+0x8]
  40c919:	add    ecx,ecx
  40c91b:	mov    ds:0xdd4ae6fe,al
  40c920:	mov    eax,ds:0xb54315de
  40c925:	xor    al,BYTE PTR [ebx]
  40c927:	sar    ch,1
  40c929:	push   esp
  40c92a:	es ret 
  40c92c:	adc    ecx,DWORD PTR [edi+0x514fd015]
  40c932:	cmp    ebx,DWORD PTR [ebx-0x11]
  40c935:	ja     0x40c8c9
  40c937:	shl    BYTE PTR [ecx+eiz*8+0x55],1
  40c93b:	dec    esp
  40c93c:	enter  0x55a6,0xc3
  40c940:	pusha  
  40c941:	dec    ebx
  40c942:	push   ebp
  40c943:	shl    BYTE PTR [edi+0x72],1
  40c946:	mov    DWORD PTR [edx],ebx
  40c948:	add    BYTE PTR [esi+0x7ae7d3cf],cl
  40c94e:	pop    ds
  40c94f:	sar    dh,1
  40c951:	sbb    DWORD PTR [edx+0x86fecf],esp
	...
  40c97f:	add    ah,ah
  40c981:	sub    bh,bh
  40c983:	hlt    
  40c984:	jne    0x40c93d
  40c986:	push   ecx
  40c987:	xor    DWORD PTR ds:0xdba9e7d0,edx
  40c98d:	iret   
  40c98e:	inc    cl
  40c990:	adc    DWORD PTR [ecx+eax*2],esi
  40c993:	jmp    0x523d0fbc
  40c998:	lock cmc 
  40c99a:	(bad)  
  40c99b:	ds push 0x37
  40c99e:	add    ecx,ebp
  40c9a0:	push   esp
  40c9a1:	or     eax,0x56ef2e50
  40c9a6:	call   0xff0f2f83
  40c9ab:	adc    DWORD PTR ds:0x6516fef9,esi
  40c9b1:	dec    eax
  40c9b2:	cld    
  40c9b3:	add    DWORD PTR ds:0x4000fef9,ebp
  40c9b9:	nop
  40c9ba:	ret    0x170c
  40c9bd:	lods   al,BYTE PTR ds:[esi]
  40c9be:	mov    esp,ebp
  40c9c0:	fs sbb edi,esp
  40c9c3:	push   0xffffffe7
  40c9c5:	lock sbb bh,bh
  40c9c8:	mov    cl,bh
  40c9ca:	out    0x39,al
  40c9cc:	pusha  
  40c9cd:	cmp    edi,0x6a832a89
  40c9d3:	add    BYTE PTR [ebp+0x5d],bh
  40c9d6:	push   DWORD PTR [ebp-0x31]
  40c9d9:	jb     0x40c9fd
  40c9db:	inc    DWORD PTR [eax-0x2ff957f]
  40c9e1:	mov    ch,0xfd
  40c9e3:	jne    0x40c9e5
	...
  40ca0d:	add    BYTE PTR [edi-0x1f00e98e],bl
  40ca13:	sub    DWORD PTR [edx+0x0],0x75ff634d
  40ca1a:	lahf   
  40ca1b:	jb     0x40ca27
  40ca1d:	inc    eax
  40ca1f:	sub    DWORD PTR [eax-0x17],0x69fe985c
  40ca26:	popf   
  40ca27:	xor    DWORD PTR [ebp+0x8],0xfffe7dbf
  40ca2e:	loopne 0x40ca21
  40ca30:	out    0x5b,eax
  40ca32:	xchg   esi,eax
  40ca33:	pop    edx
  40ca34:	push   0x23
  40ca36:	add    BYTE PTR [ebx],cl
  40ca38:	pop    es
  40ca39:	call   0x404e41
  40ca3e:	jg     0x40caaf
  40ca40:	pop    ebx
  40ca41:	inc    ecx
  40ca42:	push   edi
  40ca43:	lock sbb bh,bh
  40ca46:	mov    dl,dl
  40ca48:	out    0xdd,al
  40ca4a:	jno    0x40c9cd
  40ca4c:	(bad)  
  40ca4d:	(bad)  
  40ca4e:	jmp    0x2072:0x2f75ff75
  40ca55:	lahf   
  40ca56:	inc    eax
  40ca57:	or     ecx,0x2c03ec2
  40ca5d:	push   ebp
  40ca5e:	(bad)
  40ca61:	les    edx,FWORD PTR [esi]
  40ca63:	int    0x28
  40ca65:	push   DWORD PTR [ebx-0x6afd90a]
  40ca6b:	dec    esi
  40ca6c:	adc    edi,edi
  40ca6e:	imul   esi,DWORD PTR [eax+0xb81a],0x0
	...
  40ca99:	add    BYTE PTR [eax],al
  40ca9b:	add    BYTE PTR [ebx-0x1f4fd3d],bh
  40caa1:	mov    esp,0xc43f477d
  40caa6:	add    al,bh
  40caa8:	jnp    0x40ca56
  40caaa:	add    eax,DWORD PTR [eax]
  40caac:	les    edi,FWORD PTR ds:[edi]
  40caaf:	inc    ebp
  40cab0:	retf   0x10c
  40cab3:	add    BYTE PTR [esi],bh
  40cab5:	sbb    al,BYTE PTR [edx+ebp*2]
  40cab8:	sbb    al,BYTE PTR ds:[edx+ebp*2]
  40cabc:	ds inc edi
  40cabe:	mov    edi,0x7f3f0ef3
  40cac3:	hlt    
  40cac4:	xchg   ecx,eax
  40cac5:	in     al,0x28
  40cac7:	push   eax
  40cac8:	xchg   ecx,eax
  40cac9:	data16 sub al,0xff
  40cacc:	adc    ebx,eax
  40cace:	sbb    ecx,DWORD PTR [edx+0xb02c3b3]
  40cad4:	jle    0x40caa5
  40cad6:	std    
  40cad7:	call   0x438e20
  40cadc:	(bad)  
  40cadd:	loop   0x40ca9a
  40cadf:	inc    eax
  40cae0:	ds sub eax,0x88660faf
  40cae6:	pusha  
  40cae7:	call   DWORD PTR [ecx+0x13]
  40caea:	jl     0x40cabc
  40caec:	mov    ebx,0x41f7303e
  40caf1:	mov    esp,ss
  40caf3:	push   ecx
  40caf4:	es jp  0x40cb57
  40caf7:	push   DWORD PTR [ecx]
  40caf9:	cmp    al,0x7f
  40cafb:	lock xor DWORD PTR [esi+eiz*1+0x29],ebx
	...
  40cb28:	add    BYTE PTR [eax],al
  40cb2a:	push   ss
  40cb2b:	jnp    0x40cb75
  40cb2d:	sub    DWORD PTR [ecx],ebx
  40cb2f:	inc    edx
  40cb30:	jmp    0xa87044d0
  40cb35:	add    ecx,DWORD PTR [ecx]
  40cb37:	pop    es
  40cb38:	stc    
  40cb39:	xor    BYTE PTR [ecx],al
  40cb3b:	int    0xfd
  40cb3d:	scas   al,BYTE PTR es:[edi]
  40cb3e:	inc    ebp
  40cb3f:	ret    
  40cb40:	int3   
  40cb41:	pop    edi
  40cb42:	icebp  
  40cb43:	int3   
  40cb44:	pop    edi
  40cb45:	jg     0x40cb21
  40cb47:	(bad)  
  40cb48:	in     eax,0x28
  40cb4a:	push   esp
  40cb4b:	pop    ebx
  40cb4c:	push   ecx
  40cb4d:	shl    BYTE PTR [ebp+0x1a],1
  40cb50:	jmp    0xd60c567d
  40cb55:	sub    cl,cl
  40cb57:	int3   
  40cb58:	cmp    edi,eax
  40cb5a:	fldenv [edx-0x7b]
  40cb5d:	sub    BYTE PTR [ecx-0x56e4941e],bh
  40cb63:	int3   
  40cb64:	lods   eax,DWORD PTR ds:[esi]
  40cb65:	test   bl,ch
  40cb67:	mov    edi,0x5ba1289d
  40cb6c:	adc    eax,0xe95b21f4
  40cb71:	sbb    al,dl
  40cb73:	inc    ebx
  40cb74:	stc    
  40cb75:	(bad)  
  40cb76:	(bad)  
  40cb77:	pop    edx
  40cb78:	xchg   BYTE PTR [esi-0x6e],ch
  40cb7b:	les    edi,FWORD PTR [ebp+0x28]
  40cb7e:	jns    0x40cbc6
  40cb80:	loope  0x40cb9d
  40cb82:	mov    dl,0xa2
  40cb84:	ins    DWORD PTR es:[edi],dx
  40cb85:	sub    dh,dl
  40cb87:	pop    ecx
  40cb88:	jmp    0x3846ba5
  40cb8d:	enter  0x0,0x0
	...
  40cbb5:	add    BYTE PTR [eax],al
  40cbb7:	add    dh,bh
  40cbb9:	pop    edx
  40cbba:	push   esi
  40cbbb:	outs   dx,BYTE PTR ds:[esi]
  40cbbc:	(bad)  
  40cbbd:	les    ecx,FWORD PTR [ebp+0x28]
  40cbc0:	dec    ecx
  40cbc1:	inc    esi
  40cbc2:	icebp  
  40cbc3:	sbb    ebx,DWORD PTR [edx-0x42d7c25e]
  40cbc9:	or     eax,0xcc6e4100
  40cbce:	(bad)  
  40cbcf:	jmp    0xe9a947ad
  40cbd4:	cmp    eax,0x2d91bdbc
  40cbd9:	das    
  40cbda:	inc    ecx
  40cbdb:	jmp    0x1728d246
  40cbe0:	push   esi
  40cbe1:	int3   
  40cbe2:	(bad)  
  40cbe3:	jl     0x40cbea
  40cbe5:	mov    ah,0x82
  40cbe7:	xor    BYTE PTR [esi],ah
  40cbe9:	int3   
  40cbea:	addr16 call 0x81fe882d
  40cbf0:	cmp    ebp,DWORD PTR [edi]
  40cbf2:	inc    ecx
  40cbf3:	jmp    0xd728d210
  40cbf8:	and    esp,ecx
  40cbfa:	(bad)  
  40cbfb:	pop    esp
  40cbfc:	shl    BYTE PTR [ebx-0x33de5f96],cl
  40cc02:	(bad)  
  40cc03:	jl     0x40cc2b
  40cc05:	(bad)  
  40cc06:	(bad)  
  40cc07:	mov    esi,0xb6a03d5a
  40cc0c:	pop    ecx
  40cc0d:	int3   
  40cc0e:	mov    ah,0xc1
  40cc10:	pop    ecx
  40cc11:	int3   
  40cc12:	(bad)  
  40cc13:	xchg   ecx,eax
  40cc14:	fucomp st(3)
  40cc16:	(bad)  
  40cc17:	sahf   
  40cc18:	popa   
  40cc19:	push   es
  40cc1a:	lock sahf 
	...
  40cc44:	add    BYTE PTR [eax],al
  40cc46:	pop    ecx
  40cc47:	int3   
  40cc48:	(bad)  
  40cc49:	adc    al,0x86
  40cc4b:	int3   
  40cc4c:	je     0x40cc3f
  40cc4e:	and    eax,0x217efe07
  40cc53:	int3   
  40cc54:	mov    ah,0x79
  40cc56:	and    esp,ecx
  40cc58:	inc    BYTE PTR [ecx+0x66feeba9]
  40cc5e:	sbb    DWORD PTR [esi],edx
  40cc60:	clc    
  40cc61:	push   eax
  40cc62:	sbb    cl,ch
  40cc64:	(bad)  
  40cc65:	push   esi
  40cc66:	sbb    DWORD PTR [esi-0x4],eax
  40cc69:	inc    ecx
  40cc6a:	popf   
  40cc6b:	(bad)  
  40cc6d:	call   DWORD PTR [edi-0x72]
  40cc70:	ret    0x270c
  40cc73:	lods   al,BYTE PTR ds:[esi]
  40cc74:	mov    esp,ebp
  40cc76:	push   0x97e80b0c
  40cc7b:	cmp    edi,edi
  40cc7d:	jmp    FWORD PTR [edi+ebx*1]
  40cc80:	je     0x40ccbb
  40cc82:	scas   eax,DWORD PTR es:[edi]
  40cc83:	stos   BYTE PTR es:[edi],al
  40cc84:	pop    edx
  40cc85:	inc    ecx
  40cc86:	daa    
  40cc87:	scas   eax,DWORD PTR es:[edi]
  40cc88:	out    0xc,al
  40cc8a:	add    DWORD PTR [edx-0x1958af01],0xfffffffe
  40cc91:	dec    DWORD PTR [eax+0x41]
  40cc94:	push   0xfe9fcb10
  40cc99:	dec    edi
  40cc9a:	fmul   DWORD PTR [ebx]
  40cc9c:	pop    es
  40cc9d:	call   0x4053a3
  40cca2:	jg     0x40cc8b
  40cca4:	(bad)  
  40cca5:	(bad)  
  40cca6:	clc    
  40cca7:	inc    eax
  40cca8:	push   0x1a
	...
  40ccd1:	add    BYTE PTR [eax],al
  40ccd3:	add    BYTE PTR [ebx],bl
  40ccd5:	mov    al,ds:0xbf84ffe
  40ccda:	pop    es
  40ccdb:	call   0x405365
  40cce0:	jg     0x40cd47
  40cce2:	lahf   
  40cce3:	(bad)  
  40cce4:	fadd   DWORD PTR [edi-0x5468f73e]
  40ccea:	mov    esp,ebp
  40ccec:	and    al,0x8a
  40ccee:	cld    
  40ccef:	push   esi
  40ccf0:	push   eax
  40ccf1:	in     eax,0xfe
  40ccf3:	imul   ecx,DWORD PTR [ecx+eax*4-0x3a50f78b],0x46f8ff9b
  40ccfe:	inc    ebp
  40ccff:	cld    
  40cd00:	fmul   st(2),st
  40cd02:	inc    edi
  40cd03:	dec    eax
  40cd04:	push   ss
  40cd05:	pop    edi
  40cd06:	mov    edi,DWORD PTR ds:0x4006aa
  40cd0c:	out    0xc0,eax
  40cd0e:	dec    BYTE PTR [esi]
  40cd10:	cmp    BYTE PTR ds:[edx+0x0],ch
  40cd14:	ds mov ah,0x9a
  40cd17:	add    al,0xe2
  40cd19:	repnz add dl,BYTE PTR [esi+0x26]
  40cd1d:	shl    BYTE PTR [esi+0x0],cl
  40cd20:	ds mov ebp,0xf4787442
  40cd26:	cmp    BYTE PTR [eax],0x3e
  40cd29:	sar    DWORD PTR [esi-0x79],1
  40cd2c:	ds mov ah,0x2
  40cd2f:	push   eax
  40cd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd31:	mov    bh,0xc6
  40cd33:	inc    eax
  40cd34:	ds pop esp
  40cd36:	cwde   
  40cd37:	mov    DWORD PTR [eax],eax
	...
  40cd61:	add    BYTE PTR [esi],bh
  40cd63:	mov    ah,0xc8
  40cd65:	add    bh,ah
  40cd67:	jecxz  0x40cd83
  40cd69:	pusha  
  40cd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd6b:	shl    BYTE PTR [eax+edx*2],1
  40cd6e:	mov    ds,esp
  40cd70:	add    al,BYTE PTR [eax]
  40cd72:	rol    DWORD PTR [ecx],1
  40cd74:	pushf  
  40cd75:	(bad)  
  40cd77:	jae    0x40cd7d
  40cd79:	push   eax
  40cd7a:	shl    DWORD PTR [esi],1
  40cd7c:	cld    
  40cd7d:	out    0x55,eax
  40cd7f:	cld    
  40cd80:	and    al,0xff
  40cd82:	data16 sub al,0x3
  40cd85:	add    BYTE PTR [ecx+0x12199c49],ch
  40cd8b:	jae    0x40cd91
  40cd8d:	push   eax
  40cd8e:	test   eax,0x9e7fc8e
  40cd93:	or     al,0x25
  40cd95:	jmp    DWORD PTR [esi-0x6e007aad]
  40cd9b:	fadd   st(0),st
  40cd9d:	mov    ecx,DWORD PTR [si-0x3d]
  40cda2:	call   0x3ecc0a92
  40cda7:	mov    ah,0xf7
  40cda9:	mov    edi,0xe7cd07ea
  40cdae:	inc    ebp
  40cdaf:	sbb    esp,DWORD PTR ds:0xb95b0eff
  40cdb5:	fwait
  40cdb6:	pop    ecx
  40cdb7:	leave  
  40cdb8:	dec    ebp
  40cdb9:	data16 out 0x6a,al
  40cdbc:	mov    ch,0xc2
  40cdbe:	dec    ecx
  40cdbf:	sbb    DWORD PTR [esi-0x51],ecx
  40cdc2:	cmp    DWORD PTR [ebx+0x3c0e],esi
	...
  40cdf0:	cmp    ecx,ecx
  40cdf2:	mov    al,ds:0x465b3e9b
  40cdf7:	xchg   si,ax
  40cdf9:	gs (bad) 
  40cdfb:	ret    0x1921
  40cdfe:	es scas eax,DWORD PTR es:[edi]
  40ce00:	inc    ecx
  40ce01:	mov    bl,0xfa
  40ce03:	cmp    edx,DWORD PTR [ecx]
  40ce05:	leave  
  40ce06:	add    BYTE PTR [ecx],cl
  40ce08:	test   eax,0x3f190dc8
  40ce0d:	and    DWORD PTR [ecx-0x1a],ebp
  40ce10:	stc    
  40ce11:	dec    edi
  40ce12:	add    edi,DWORD PTR [esi+0x6b298cf5]
  40ce18:	jmp    0xec65bbe5
  40ce1d:	stc    
  40ce1e:	and    ch,bh
  40ce20:	dec    eax
  40ce21:	fisub  WORD PTR [ebx]
  40ce23:	and    eax,0xa42c8d1
  40ce28:	leave  
  40ce29:	dec    esi
  40ce2a:	loope  0x40ce47
  40ce2c:	std    
  40ce2d:	leave  
  40ce2e:	lds    esp,FWORD PTR [esp]
  40ce31:	jl     0x40cdf1
  40ce33:	scas   al,BYTE PTR es:[edi]
  40ce34:	cmp    DWORD PTR [ebx-0x3756da91],esi
  40ce3a:	inc    edx
  40ce3b:	or     BYTE PTR [ecx-0x16e40eb2],ah
  40ce41:	leave  
  40ce42:	popf   
  40ce43:	and    al,0x26
  40ce45:	xchg   ecx,eax
  40ce46:	xor    eax,0xd3c989c3
  40ce4b:	neg    BYTE PTR ds:[ecx]
  40ce4e:	jmp    0x9193c177
  40ce53:	repnz add BYTE PTR [eax],al
	...
  40ce7e:	jb     0x40ce48
  40ce80:	push   DWORD PTR [ebp-0x3b]
  40ce83:	mov    ds,WORD PTR [eax+ebp*1+0x3a]
  40ce87:	xor    eax,DWORD PTR [edx]
  40ce89:	jmp    0xd53fa9cb
  40ce8e:	push   ebp
  40ce8f:	rcr    BYTE PTR [esi],0x54
  40ce92:	and    cl,al
  40ce94:	(bad)  
  40ce95:	aam    0x19
  40ce97:	enter  0xf174,0x55
  40ce9b:	mov    ebx,DWORD PTR [esi+edi*1+0x205e285a]
  40cea2:	jg     0x40cf03
  40cea4:	add    BYTE PTR [esi+eiz*4+0x6d2d80b7],dl
  40ceab:	sar    dh,1
  40cead:	push   ds
  40ceae:	mov    BYTE PTR [esi],bl
  40ceb0:	cld    
  40ceb1:	mov    ecx,0xe104e62
  40ceb6:	rcl    BYTE PTR [ebx-0x18],1
  40ceb9:	das    
  40ceba:	ja     0x40cf17
  40cebc:	add    dl,dh
  40cebe:	jge    0x40cf18
  40cec0:	test   DWORD PTR [ebx+0x26005b3f],ebp
  40cec6:	mov    al,ds:0x3de8ffcf
  40cecb:	pop    ebx
  40cecc:	(bad)  
  40cecd:	and    al,0x36
  40cecf:	enter  0xe906,0x3d
  40ced3:	xor    eax,0x353a4300
  40ced8:	add    BYTE PTR [ebx+0x42],dl
  40cedb:	(bad)  
  40cedc:	inc    esp
  40cedd:	mov    ch,0xea
  40cedf:	(bad)  
  40cee0:	test   BYTE PTR [ebp+0x0],bh
	...
  40cf0a:	add    BYTE PTR [eax],al
  40cf0c:	inc    ebp
  40cf0d:	enter  0x19fe,0x5d
  40cf11:	dec    esi
  40cf12:	clc    
  40cf13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf14:	mov    bh,0xc3
  40cf16:	out    0x81,eax
  40cf18:	rcr    BYTE PTR [edx+0x0],0xe2
  40cf1c:	std    
  40cf1d:	dec    esi
  40cf1e:	add    eax,0x5d3780
  40cf23:	add    BYTE PTR [edi-0xd],ah
  40cf26:	lahf   
  40cf27:	dec    eax
  40cf28:	es pop edi
  40cf2a:	push   DWORD PTR [ebp-0x79]
  40cf2d:	jae    0x40cf18
  40cf2f:	mov    eax,ds:0x8b507bd0
  40cf34:	pop    ss
  40cf35:	jmp    0x50ff:0x7be8f484
  40cf3c:	test   DWORD PTR [ebx-0x27],esi
  40cf3f:	mov    eax,ds:0x85897bf0
  40cf44:	ja     0x40cfa8
  40cf46:	(bad)  
  40cf47:	dec    DWORD PTR [edi+0x70ff9cca]
  40cf4d:	cmc    
  40cf4e:	(bad)  
  40cf4f:	addr16 mov bl,0x6
  40cf52:	inc    eax
  40cf53:	add    BYTE PTR [eax+0x24],ah
  40cf56:	lock div DWORD PTR [eax]
  40cf59:	jp     0x40cf5a
  40cf5b:	jne    0x40cf80
  40cf5d:	jae    0x40cf91
  40cf5f:	mov    eax,ds:0x85897a30
  40cf64:	dec    ebx
  40cf65:	(bad)  
  40cf66:	(bad)  
  40cf67:	dec    ebp
  40cf69:	pop    edx
  40cf6a:	push   0xfe9fd365
  40cf6f:	inc    BYTE PTR [eax]
	...
  40cf99:	add    BYTE PTR [edx],ch
  40cf9b:	outs   dx,DWORD PTR ds:[esi]
  40cf9c:	idiv   edi
  40cf9e:	loopne 0x40d019
  40cfa0:	jne    0x40cfae
  40cfa2:	out    dx,eax
  40cfa3:	rcr    DWORD PTR [edi-0x7b280f01],0xec
  40cfaa:	call   0xa7abcf28
  40cfaf:	repnz ins BYTE PTR es:[edi],dx
  40cfb1:	pop    esp
  40cfb2:	pop    di
  40cfb4:	push   DWORD PTR [ebp-0x9e19]
  40cfba:	shl    bl,1
  40cfbc:	or     ch,al
  40cfbe:	jecxz  0x40cffa
  40cfc0:	(bad)  
  40cfc1:	dec    DWORD PTR [esi]
  40cfc3:	shl    edi,cl
  40cfc5:	idiv   DWORD PTR [esi]
  40cfc7:	in     eax,dx
  40cfc8:	and    DWORD PTR [edx+0x3e],ebp
  40cfcb:	pop    esp
  40cfcc:	fwait
  40cfcd:	pop    ebx
  40cfce:	push   DWORD PTR [ebx+0x4d6eb521]
  40cfd4:	and    bh,bh
  40cfd6:	imul   eax,edi,0x145fe80e
  40cfdc:	and    bh,bh
  40cfde:	(bad)  
  40cfdf:	aaa    
  40cfe0:	aas    
  40cfe1:	not    DWORD PTR [ecx+0x25]
  40cfe4:	nop
  40cfe5:	test   DWORD PTR [esi+0x25],ebx
  40cfe8:	and    bh,bh
  40cfea:	out    dx,al
  40cfeb:	fwait
  40cfec:	mov    DWORD PTR [edi+edi*2-0x4c],ebx
  40cff0:	and    DWORD PTR [ebp-0xdd72d2],esi
  40cff6:	sub    edi,eax
  40cff8:	inc    edi
  40cff9:	dec    eax
  40cffa:	jg     0x40cfb0
  40cffc:	sub    bh,BYTE PTR [esi+0x0]
	...
  40d026:	add    BYTE PTR [eax],al
  40d028:	fidivr WORD PTR [edx+eiz*1+0xb]
  40d02c:	(bad)  
  40d02d:	out    dx,eax
  40d02e:	sti    
  40d02f:	or     bl,0x53
  40d032:	sbb    bh,bh
  40d034:	add    eax,eax
  40d036:	xchg   edi,eax
  40d037:	psubw  mm0,QWORD PTR [ebx]
  40d03a:	xchg   edx,eax
  40d03b:	test   DWORD PTR [esi],edx
  40d03d:	int    0x20
  40d03f:	dec    DWORD PTR [esi-0x1e6271a4]
  40d045:	mov    ah,0x2c
  40d047:	adc    al,0x45
  40d049:	hlt    
  40d04a:	xchg   edi,eax
  40d04b:	add    eax,0x9ca0ac6e
  40d050:	leave  
  40d051:	lods   al,BYTE PTR ds:[esi]
  40d052:	dec    eax
  40d053:	test   esi,esp
  40d055:	lods   al,BYTE PTR ds:[esi]
  40d056:	and    bh,bh
  40d058:	push   ebx
  40d059:	mov    ah,0x2
  40d05b:	add    bl,al
  40d05d:	ds xor al,0xf7
  40d060:	test   eax,0xcc67b40c
  40d065:	push   edi
  40d066:	ret    
  40d067:	call   FWORD PTR [eax-0x76eba3a6]
  40d06d:	lds    ebx,FWORD PTR [ebp-0x7ea8ecdf]
  40d073:	xchg   ebp,eax
  40d074:	mov    eax,ds:0xc38b8dc5
  40d079:	scas   al,BYTE PTR es:[edi]
  40d07a:	jge    0x40d09d
  40d07c:	jno    0x40d057
  40d07e:	cmp    ebp,DWORD PTR [eax]
  40d080:	jno    0x40d047
  40d082:	jne    0x40d088
  40d084:	xor    edi,ebx
  40d086:	push   ecx
  40d087:	add    al,0x3e
  40d089:	pop    ebx
  40d08a:	push   0x5f
	...
  40d0b4:	add    BYTE PTR [eax],al
  40d0b6:	(bad)  
  40d0b7:	int    0x5d
  40d0b9:	and    DWORD PTR [esi],edi
  40d0bb:	push   esi
  40d0bc:	ins    DWORD PTR es:[edi],dx
  40d0bd:	xchg   edx,eax
  40d0be:	ds pop ebx
  40d0c0:	jmp    0x3df4cc49
  40d0c5:	and    DWORD PTR [ecx],esi
  40d0c7:	pop    esp
  40d0c8:	out    dx,al
  40d0c9:	xchg   DWORD PTR [edi-0x69fc16a5],edi
  40d0cf:	imul   ebp,ecx,0x30
  40d0d2:	fadd   st,st(4)
  40d0d4:	fwait
  40d0d5:	or     esp,DWORD PTR [esi]
  40d0d7:	stos   BYTE PTR es:[edi],al
  40d0d8:	jg     0x40d0fb
  40d0da:	or     ebp,eax
  40d0dc:	pop    ebx
  40d0dd:	xor    BYTE PTR [ecx],cl
  40d0df:	lds    ecx,FWORD PTR ds:0x11537321
  40d0e5:	jmp    0xb3b3:0x20fdc4d7
  40d0ec:	std    
  40d0ed:	and    cl,ah
  40d0ef:	les    esi,FWORD PTR [ebx+0xb]
  40d0f2:	out    0x63,al
  40d0f4:	and    DWORD PTR [eax],0xffffffd1
  40d0f7:	les    edx,FWORD PTR [ebx-0x2a3b2ed9]
  40d0fd:	and    BYTE PTR [ebx+0x53],cl
  40d100:	ror    DWORD PTR ds:0x20c5c4d4,0xeb
  40d107:	mov    ds:0xc4a920b5,eax
  40d10c:	(bad)  
  40d10d:	cmp    esi,DWORD PTR [edx]
  40d10f:	mov    bl,0x99
  40d111:	push   eax
  40d112:	pop    esi
  40d113:	(bad)  
  40d114:	(bad)  
  40d115:	pop    esp
  40d116:	push   ecx
  40d117:	int3   
  40d118:	(bad)  
  40d119:	sahf   
	...
  40d142:	add    BYTE PTR [eax],al
  40d144:	pop    esi
  40d145:	dec    esi
  40d146:	or     BYTE PTR [ecx-0x71011db1],al
  40d14c:	ret    0xd406
  40d14f:	jle    0x40d16f
  40d151:	(bad)  
  40d152:	push   esp
  40d154:	push   0xffffffd9
  40d156:	mov    esp,0xfec44699
  40d15b:	in     eax,0xb0
  40d15d:	push   0xffffff8b
  40d15f:	ins    BYTE PTR es:[edi],dx
  40d160:	or     esp,ecx
  40d162:	(bad)  
  40d163:	pop    esi
  40d164:	push   ds
  40d165:	mov    edi,edi
  40d167:	fdiv   QWORD PTR ds:0x5e7069b3
  40d16d:	(bad)  
  40d16e:	jmp    0x35b4:0xfdc3e3f3
  40d175:	mov    bl,0x5d
  40d177:	push   eax
  40d178:	pop    esi
  40d179:	(bad)  
  40d17a:	(bad)  
  40d17b:	je     0x40d1de
  40d17d:	int3   
  40d17e:	(bad)  
  40d17f:	es gs stc 
  40d182:	fwait
  40d183:	push   ds
  40d184:	pop    esi
  40d185:	les    esi,FWORD PTR [ebp+eax*1+0x1fec426]
  40d18c:	jbe    0x40d175
  40d18e:	inc    BYTE PTR [esi]
  40d190:	push   ds
  40d191:	push   cs
  40d192:	call   0xe8051b8d
  40d197:	gs popa 
  40d199:	(bad)  
  40d19a:	(bad)  
  40d19b:	out    dx,al
  40d19c:	jae    0x40d145
  40d19e:	mul    dh
  40d1a0:	xor    DWORD PTR [ebx-0x3bd68280],esi
  40d1a6:	(bad)  
  40d1a7:	pushf  
	...
  40d1d0:	add    BYTE PTR [eax],al
  40d1d2:	push   es
  40d1d3:	int3   
  40d1d4:	dec    dh
  40d1d6:	push   0x4d
  40d1d8:	pushf  
  40d1d9:	add    BYTE PTR [eax+0x63],bh
  40d1dc:	push   DWORD PTR [ebp-0x9419]
  40d1e2:	call   0x533fdcc8
  40d1e7:	push   edi
  40d1e8:	call   0xffa4aca6
  40d1ed:	push   edx
  40d1ef:	outs   dx,BYTE PTR ds:[esi]
  40d1f0:	idiv   edi
  40d1f2:	test   al,0x76
  40d1f4:	pop    edx
  40d1f5:	pushf  
  40d1f6:	enter  0xff63,0x45
  40d1fa:	mov    edi,0xe8fdcd75
  40d1ff:	arpl   di,di
  40d201:	jne    0x40d1ee
  40d203:	jbe    0x40d27b
  40d205:	mov    BYTE PTR [edi+0x57],ah
  40d208:	leave  
  40d209:	ret    0x574b
  40d20c:	push   ebp
  40d20d:	mov    edi,ebx
  40d20f:	xlat   BYTE PTR ds:[ebx]
  40d210:	ret    
  40d211:	cld    
  40d212:	jge    0x40d26b
  40d214:	push   0x1c
  40d216:	mov    ah,ah
  40d218:	push   es
  40d219:	call   0x401229
  40d21e:	scas   al,BYTE PTR es:[edi]
  40d21f:	xchg   esp,eax
  40d220:	cli    
  40d221:	push   0x3f9b8a
  40d226:	push   0xe648c3a4
  40d22b:	pop    esi
  40d22c:	push   DWORD PTR [ebp+0xf]
  40d22f:	ja     0x40d2a3
  40d231:	std    
  40d232:	sub    BYTE PTR [edx+0x68],ah
  40d235:	popf   
	...
  40d25e:	add    BYTE PTR [eax],al
  40d260:	stos   DWORD PTR es:[edi],eax
  40d261:	xchg   edi,eax
  40d262:	(bad)  
  40d263:	addr16 in eax,0x5e
  40d266:	add    BYTE PTR [eax-0x17f91c18],al
  40d26c:	mov    bh,0x7b
  40d26e:	(bad)  
  40d26f:	(bad)  
  40d270:	call   0x7340cd58
  40d275:	dec    edi
  40d276:	call   0xffa290fa
  40d27b:	leave  
  40d27c:	test   BYTE PTR ds:[esi],0x0
  40d280:	adc    edi,DWORD PTR ds:0x7a812f
  40d286:	sbb    eax,0x42ea9ff
  40d28b:	push   0x43
  40d28d:	or     DWORD PTR [eax+0x7d54a607],ebx
  40d293:	call   DWORD PTR [ecx+0x16fbc84b]
  40d299:	mov    eax,0x373e0003
  40d29e:	mov    bh,dh
  40d2a0:	js     0x40d273
  40d2a2:	sbb    eax,0x85c26650
  40d2a7:	add    BYTE PTR [esi],bh
  40d2a9:	int    0x42
  40d2ab:	je     0x40d2bf
  40d2ad:	pop    es
  40d2ae:	pop    es
  40d2af:	add    DWORD PTR [esi],edi
  40d2b1:	mov    ah,0x95
  40d2b3:	and    al,0xe6
  40d2b5:	fidivr WORD PTR [esi-0x77d0c1c0]
  40d2bb:	test   DWORD PTR [eax+0x29],0x926501e
  40d2c2:	jle    0x40d2c3
	...
  40d2ec:	add    BYTE PTR [eax],al
  40d2ee:	xor    esp,esp
  40d2f0:	stos   BYTE PTR es:[edi],al
  40d2f1:	jmp    FWORD PTR [ecx]
  40d2f3:	adc    DWORD PTR [ebp+0x50],ebx
  40d2f6:	and    edi,edi
  40d2f8:	or     ch,al
  40d2fa:	shl    BYTE PTR [edx+0x1e],1
  40d2fd:	jmp    DWORD PTR [esi]
  40d2ff:	adc    BYTE PTR [edx-0x1],bh
  40d302:	or     DWORD PTR [ecx-0x68],esp
  40d305:	sti    
  40d306:	add    edi,ebx
  40d308:	or     ch,al
  40d30a:	push   ecx
  40d30b:	dec    ebx
  40d30c:	push   ds
  40d30d:	inc    DWORD PTR [edi]
  40d30f:	jbe    0x40d318
  40d311:	add    BYTE PTR [ebx-0x57cd0b3],dl
  40d317:	(bad)  
  40d318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d319:	jmp    DWORD PTR [edi-0x6e]
  40d31c:	sbb    eax,0xd15b4675
  40d321:	pop    ecx
  40d322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d323:	rcr    ebp,0x8b
  40d326:	jnp    0x40d2e7
  40d328:	inc    eax
  40d329:	add    al,0x3e
  40d32b:	mov    dl,0x8e
  40d32d:	lods   al,BYTE PTR ds:[esi]
  40d32e:	jl     0x40d34e
  40d330:	sub    BYTE PTR [esi+edx*1],al
  40d333:	xchg   edx,eax
  40d334:	sbb    al,0xc3
  40d336:	mov    eax,ds:0xa60c3bc0
  40d33b:	clc    
  40d33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d33d:	sbb    eax,0x201bc191
  40d342:	mov    DWORD PTR [edi-0xf],eax
  40d345:	sub    esp,DWORD PTR [edx-0x1e]
  40d348:	xchg   ebp,eax
  40d349:	sbb    eax,0x3e49c87
  40d34e:	or     edx,esi
  40d350:	xchg   esp,eax
  40d351:	add    DWORD PTR [eax],0x0
	...
  40d37c:	and    BYTE PTR [esi-0x309ee28b],0x2b
  40d383:	and    dh,ch
  40d385:	shl    ebx,0xf3
  40d388:	push   eax
  40d389:	inc    edi
  40d38a:	cmc    
  40d38b:	sub    edx,edx
  40d38d:	fld1   
  40d38f:	add    esi,DWORD PTR ds:0x3286e59b
  40d395:	pop    ebx
  40d396:	jmp    0x4157cc9e
  40d39b:	add    al,0x3e
  40d39d:	pop    ebx
  40d39e:	jmp    0x36084ee7
  40d3a3:	add    eax,0x3c35b3e
  40d3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a9:	pop    ebx
  40d3aa:	xchg   ebx,eax
  40d3ab:	add    edx,DWORD PTR [ebx+ebx*2+0x2c0dc76c]
  40d3b2:	fs xchg edx,esi
  40d3b5:	enter  0x1d0d,0x8e
  40d3b9:	sar    BYTE PTR [ebx+0x1b],0xe9
  40d3bd:	inc    esi
  40d3be:	std    
  40d3bf:	sub    edi,DWORD PTR [eax-0x28]
  40d3c2:	(bad)  
  40d3c3:	call   0x76012805
  40d3c8:	cmp    BYTE PTR [edx+0x5b3de8b6],dh
  40d3ce:	push   0x1bf588
  40d3d3:	(bad)  
  40d3d4:	rcl    BYTE PTR [eax-0x18],1
  40d3d7:	jbe    0x40d40c
  40d3d9:	sar    dh,0x19
  40d3dc:	mov    bh,0xab
  40d3de:	mov    WORD PTR [eax+eax*1+0x0],fs
	...
  40d40a:	dec    ecx
  40d40b:	enter  0xb6fe,0xcd
  40d40f:	sub    ch,al
  40d411:	adc    ax,ax
  40d414:	(bad)  
  40d415:	jo     0x40d3d7
  40d417:	retf   
  40d418:	neg    BYTE PTR [esi+0x73dcb322]
  40d41e:	pop    edx
  40d41f:	ror    BYTE PTR [esp+eiz*2-0x790137e3],0xad
  40d427:	cmp    cl,bl
  40d429:	sbb    eax,0x3cfdc07d
  40d42e:	sub    eax,0x326efec8
  40d433:	inc    esi
  40d434:	or     al,0x51
  40d436:	push   es
  40d437:	fdivp  st(6),st
  40d439:	pop    esi
  40d43a:	mov    ah,0xd6
  40d43c:	jecxz  0x40d49c
  40d43e:	pop    edx
  40d43f:	shr    BYTE PTR [ecx-0x17],0xe5
  40d443:	mov    ecx,0xc03da85b
  40d448:	mov    ah,0x39
  40d44a:	dec    edx
  40d44b:	sar    dh,0x36
  40d44e:	mov    al,0x53
  40d450:	call   0xff01647e
  40d455:	jo     0x40d417
  40d457:	scas   al,BYTE PTR es:[edi]
  40d458:	neg    BYTE PTR [esi]
  40d45a:	and    dh,BYTE PTR ds:0x1f238100
  40d460:	inc    ecx
  40d461:	jmp    0x130dab8
  40d466:	call   0x6b40d3ce
  40d46b:	push   eax
  40d46c:	call   0x40d516
	...
  40d495:	add    BYTE PTR [eax],al
  40d497:	add    BYTE PTR [edx+0x5f],dh
  40d49a:	dec    DWORD PTR [ecx-0x88ba6]
  40d4a0:	loopne 0x40d492
  40d4a2:	(bad)  
  40d4a3:	lock add al,BYTE PTR [bx+si+0x0]
  40d4a8:	nop
  40d4a9:	sub    eax,esi
  40d4ab:	test   DWORD PTR [eax-0x4c8a009d],0xe09d8a73
  40d4b5:	arpl   WORD PTR [ecx-0x944c7b],cx
  40d4bb:	(bad)  
  40d4bc:	std    
  40d4bd:	push   esi
  40d4be:	push   0xfe9603fd
  40d4c3:	(bad)  
  40d4c4:	jmp    0x7563:0xd0fff766
  40d4cb:	or     al,0xbf
  40d4cd:	repz fwait
  40d4cf:	inc    eax
  40d4d1:	int    0x84
  40d4d3:	fsubr  st,st(0)
  40d4d5:	arpl   di,di
  40d4d7:	push   0x67
  40d4d9:	repz aaa 
  40d4db:	pop    ebp
  40d4dc:	es push edi
  40d4de:	push   DWORD PTR [ebp-0x9419]
  40d4e4:	loopne 0x40d4cf
  40d4e6:	or     ch,al
  40d4e8:	sti    
  40d4e9:	inc    ebx
  40d4ea:	(bad)  
  40d4eb:	call   FWORD PTR [esi-0x7f082c24]
  40d4f1:	bound  eax,QWORD PTR [ebx-0x958443]
  40d4f7:	jmp    DWORD PTR [edi]
  40d4f9:	iret   
  40d4fa:	ja     0x40d47f
	...
  40d524:	add    BYTE PTR [eax],al
  40d526:	mov    ds:0x60fff773,al
  40d52b:	push   edi
  40d52c:	je     0x40d59e
  40d52e:	xchg   esp,eax
  40d52f:	and    al,0xe8
  40d531:	idiv   DWORD PTR [esi]
  40d533:	sbb    eax,DWORD PTR gs:[eax]
  40d536:	push   0xffffffd5
  40d538:	stos   BYTE PTR es:[edi],al
  40d539:	(bad)  
  40d53b:	gs pop edx
  40d53d:	jmp    FWORD PTR [ebx-0x34]
  40d540:	sub    bh,BYTE PTR [edi-0xe63a50]
  40d546:	mov    eax,eax
  40d548:	adc    edi,edi
  40d54a:	leave  
  40d54b:	mov    ch,0x8f
  40d54d:	pop    es
  40d54e:	(bad)  
  40d54f:	shl    DWORD PTR [ecx-0x1],0xb9
  40d553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d554:	dec    edi
  40d555:	call   0xff5a6303
  40d55a:	xor    ecx,esp
  40d55c:	sub    al,BYTE PTR ds:0xff19fdc9
  40d562:	rcl    DWORD PTR [ecx+edx*1+0x4fed91ff],cl
  40d569:	in     al,0x91
  40d56b:	cmc    
  40d56c:	sbb    edi,edi
  40d56e:	or     ecx,esp
  40d570:	sub    al,ch
  40d572:	shl    ch,1
  40d574:	sbb    edi,edi
  40d576:	stos   DWORD PTR es:[edi],eax
  40d577:	or     al,0x12
  40d579:	jmp    FWORD PTR [ecx-0x2b]
  40d57c:	pop    DWORD PTR [edi]
  40d57e:	push   esi
  40d57f:	shl    DWORD PTR [eax-0x1],1
  40d582:	pop    ecx
  40d583:	inc    ebp
  40d584:	push   eax
  40d585:	fmul   QWORD PTR [ecx+0x2d]
  40d588:	sbb    bh,bh
	...
  40d5b2:	add    BYTE PTR [eax],al
  40d5b4:	ror    ebx,cl
  40d5b6:	sub    dl,ch
  40d5b8:	test   al,0x1d
  40d5ba:	sbb    bh,bh
  40d5bc:	repz jg 0x40d5d1
  40d5bf:	push   DWORD PTR [ecx]
  40d5c1:	or     eax,0x6d160790
  40d5c6:	jno    0x40d5c7
  40d5c8:	and    DWORD PTR [ebp+0x50],edi
  40d5cb:	in     al,0x11
  40d5cd:	test   DWORD PTR [edx],ebx
  40d5cf:	call   0xff5b00bb
  40d5d4:	or     DWORD PTR [ebx+0x5c],ebx
  40d5d7:	daa    
  40d5d8:	or     DWORD PTR [esi-0x1c27d4e3],edi
  40d5de:	adc    eax,0x107f11a
  40d5e3:	adc    ch,cl
  40d5e5:	mov    ebp,0xbdc77610
  40d5ea:	std    
  40d5eb:	sbb    DWORD PTR [ebx-0x2ee60262],edx
  40d5f1:	mov    dl,0x60
  40d5f3:	jl     0x40d5be
  40d5f5:	mov    ebp,0xc5e64fe5
  40d5fa:	fstp   QWORD PTR [ecx]
  40d5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5fd:	aas    
  40d5fe:	jo     0x40d619
  40d600:	mov    cl,0xbd
  40d602:	xchg   ebx,eax
  40d603:	xor    BYTE PTR [ecx+0x2c2cc5bd],dh
  40d609:	in     al,0xbd
  40d60b:	sbb    DWORD PTR [ecx-0x6eee46f9],ebx
  40d611:	mov    ebp,0xbe358fad
  40d616:	sbb    ecx,DWORD PTR [eax+eax*1]
	...
  40d641:	add    BYTE PTR [esi+0x79199f55],dl
  40d647:	mov    ebp,0xbd69145b
  40d64c:	lea    ebp,[eax+edx*1]
  40d64f:	in     al,0x85
  40d651:	sbb    DWORD PTR [ecx+0x17],esp
  40d654:	sub    DWORD PTR [ebx],0x1975bd35
  40d65a:	push   ecx
  40d65b:	inc    edi
  40d65c:	ins    DWORD PTR es:[edi],dx
  40d65d:	sub    al,0xcc
  40d65f:	xlat   BYTE PTR ds:[ebx]
  40d660:	call   0xecd94d68
  40d665:	add    edx,DWORD PTR [ebx-0x57abb30]
  40d66b:	mov    edi,0x5c9403c2
  40d670:	inc    esi
  40d671:	(bad)  
  40d672:	cmp    DWORD PTR [ebx-0x42e68e30],esi
  40d678:	call   FWORD PTR [edi-0x2f]
  40d67b:	shl    BYTE PTR [edi-0x15],0xd0
  40d67f:	sbb    eax,DWORD PTR [eax]
  40d681:	es icebp 
  40d683:	xchg   edi,eax
  40d684:	inc    edi
  40d685:	test   al,0x3d
  40d687:	mov    esp,0x9b25e174
  40d68c:	cld    
  40d68d:	push   cs
  40d68e:	inc    edi
  40d68f:	xor    eax,DWORD PTR [edx]
  40d691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d692:	cld    
  40d693:	mov    esp,0x5b3deb66
  40d698:	xor    dh,0xc0
  40d69b:	push   esp
  40d69c:	call   0xfefd07e0
  40d6a1:	out    0xb0,al
  40d6a3:	sar    dh,0x54
	...
  40d6ce:	add    BYTE PTR [eax],al
  40d6d0:	dec    edx
  40d6d1:	mov    bl,0x7a
  40d6d3:	jg     0x40d72b
  40d6d5:	mov    esp,0xbca9abc8
  40d6da:	push   ebx
  40d6db:	jb     0x40d736
  40d6dd:	fadd   st,st(3)
  40d6df:	mov    ebp,0xe96a25cf
  40d6e4:	jecxz  0x40d742
  40d6e6:	push   DWORD PTR [edx+edi*1]
  40d6e9:	mov    bl,0x1c
  40d6eb:	jg     0x40d713
  40d6ed:	mov    esp,0xd0562488
  40d6f2:	xor    al,0x20
  40d6f4:	sbb    BYTE PTR [ebx],0x0
  40d6f7:	bound  edx,QWORD PTR [eax+0x3a28480f]
  40d6fd:	fstp   TBYTE PTR [esi]
  40d6ff:	jmp    0x19a912cd
  40d704:	mov    DWORD PTR [ebx],ebx
  40d706:	add    BYTE PTR [edi],dl
  40d708:	sbb    al,BYTE PTR [ecx+0x2b3de985]
  40d70e:	push   0x1af0a5
  40d713:	mov    esi,0xe9856d65
  40d718:	cmp    eax,0x57000b21
  40d71d:	int    0x2
  40d71f:	or     esi,DWORD PTR ds:0x7f5628cc
  40d725:	in     eax,0xa0
  40d727:	call   FWORD PTR [eax-0x10]
  40d72a:	pop    edx
  40d72b:	pop    ebp
  40d72c:	(bad)  
  40d72d:	push   edi
  40d72e:	push   eax
  40d72f:	call   0x401ba8
	...
  40d75c:	add    BYTE PTR [eax],al
  40d75e:	mov    bh,0xef
  40d760:	(bad)  
  40d761:	(bad)  
  40d762:	call   0x9a983f89
  40d767:	cwde   
  40d768:	dec    BYTE PTR [edi-0x28]
  40d76b:	int    0x6
  40d76d:	call   0x3ff0bb
  40d772:	aas    
  40d773:	fist   DWORD PTR [edi+0x16fd8ff]
  40d779:	inc    esi
  40d77a:	daa    
  40d77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77c:	(bad)  
  40d77d:	je     0x40d70c
  40d77f:	cld    
  40d780:	cli    
  40d781:	xor    edx,edi
  40d783:	sbb    eax,0x6378ffff
  40d788:	repnz scas al,BYTE PTR es:[edi]
  40d78a:	aas    
  40d78b:	mov    esp,0xe9c89f73
  40d790:	cli    
  40d791:	call   DWORD PTR [edx+0x4f]
  40d794:	call   0xffa4da7c
  40d799:	pop    edi
  40d79a:	cmp    DWORD PTR [esi],ecx
  40d79c:	ret    0x6704
  40d79f:	or     cl,BYTE PTR [edx-0x3e52b14]
  40d7a5:	jmp    DWORD PTR [edx+0x53]
  40d7a8:	push   DWORD PTR [ebp+0x4f]
  40d7ab:	outs   dx,DWORD PTR ds:[esi]
  40d7ac:	cli    
  40d7ad:	xchg   edx,eax
  40d7ae:	enter  0x8963,0x45
  40d7b2:	(bad)  [ebx+0x75]
  40d7b5:	cld    
  40d7b6:	fsubr  st,st(1)
  40d7b8:	push   es
  40d7b9:	call   0x4006bb
  40d7be:	ds cmp eax,0xbc9
	...
  40d7ec:	xor    eax,0xbd419084
  40d7f1:	pop    ebx
  40d7f2:	add    al,0x74
  40d7f4:	pop    ebx
  40d7f5:	jns    0x40d788
  40d7f7:	sti    
  40d7f8:	es push es
  40d7fa:	jnp    0x40d7fb
  40d7fc:	or     ebp,edx
  40d7fe:	adc    eax,0x91813275
  40d803:	sti    
  40d804:	mov    ds,WORD PTR [ecx-0x6f]
  40d807:	pop    es
  40d808:	out    0x26,al
  40d80a:	jb     0x40d80b
  40d80c:	jmp    0x328e61ff
  40d811:	inc    ebp
  40d812:	(bad)  
  40d814:	push   edx
  40d815:	scas   al,BYTE PTR es:[edi]
  40d816:	mov    al,0xe7
  40d818:	inc    ebx
  40d819:	or     al,0x17
  40d81b:	call   DWORD PTR ds:0xbd142b84
  40d821:	aas    
  40d822:	hlt    
  40d823:	jmp    FWORD PTR ds:0x4e4589ac
  40d829:	xchg   ecx,eax
  40d82a:	(bad)  
  40d82b:	sti    
  40d82c:	mov    ecx,0x95c289c4
  40d831:	(bad)  
  40d832:	jmp    0x7475ff6
  40d837:	add    bl,ch
  40d839:	cmp    al,0x27
  40d83b:	call   DWORD PTR [ebx]
  40d83d:	cwde   
  40d83e:	adc    eax,0x85cc3675
  40d843:	xchg   edx,eax
  40d844:	jns    0x40d81f
  40d846:	adc    eax,0x17744275
  40d84b:	jne    0x40d883
  40d84d:	fdiv   st(5),st
  40d84f:	xchg   edx,eax
	...
  40d878:	add    BYTE PTR [eax],al
  40d87a:	popa   
  40d87b:	loope  0x40d8c8
  40d87d:	ret    0xc446
  40d880:	scas   eax,DWORD PTR es:[edi]
  40d881:	mov    ah,BYTE PTR [edx+0x45]
  40d884:	aas    
  40d885:	shl    al,0x50
  40d888:	mov    bl,0x82
  40d88a:	ret    
  40d88b:	pop    edx
  40d88c:	icebp  
  40d88d:	add    esi,DWORD PTR [edx+0x45986a4d]
  40d893:	pop    ebx
  40d894:	fld    QWORD PTR [edi]
  40d896:	mov    ebp,0xaa03f937
  40d89b:	popa   
  40d89c:	push   0xffffff98
  40d89e:	sub    eax,0x650cb45b
  40d8a3:	fwait
  40d8a4:	xchg   ecx,eax
  40d8a5:	mov    dh,0x6b
  40d8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a8:	sub    dh,bl
  40d8aa:	add    ebp,esp
  40d8ac:	stos   DWORD PTR es:[edi],eax
  40d8ad:	pop    es
  40d8ae:	mov    ebp,0x7382e5ba
  40d8b3:	addr16 jmp 0x29a71648
  40d8b9:	(bad)  
  40d8ba:	xchg   BYTE PTR ss:[ecx],ch
  40d8bd:	mov    edx,0x41301978
  40d8c2:	cs pop ebx
  40d8c4:	(bad)  
  40d8c5:	shr    BYTE PTR ds:0xbcfe08de,0x37
  40d8cc:	std    
  40d8cd:	add    esi,DWORD PTR [edx]
  40d8cf:	pop    edi
  40d8d0:	repnz inc ebx
  40d8d2:	sub    ah,BYTE PTR [edx+eax*1+0x44]
  40d8d6:	add    eax,0x7c4b2f1a
  40d8db:	dec    edx
  40d8dc:	jmp    0x40d9c9
	...
  40d905:	add    BYTE PTR [eax],al
  40d907:	add    BYTE PTR [ecx+edi*4+0x33],dh
  40d90b:	or     cl,al
  40d90d:	pop    ds
  40d90e:	test   eax,0xe19b0381
  40d913:	adc    al,0xb
  40d915:	fwait
  40d916:	nop
  40d917:	call   0x1fc7:0x189db9d0
  40d91e:	lods   eax,DWORD PTR ds:[esi]
  40d91f:	mov    ebx,ebp
  40d921:	sahf   
  40d922:	dec    esi
  40d923:	sahf   
  40d924:	add    bl,BYTE PTR [ecx+ebp*8]
  40d927:	pop    edx
  40d928:	inc    ebp
  40d929:	pop    ebx
  40d92a:	jmp    0x3f2632
  40d92f:	popa   
  40d930:	mov    ecx,0x361c8b61
  40d935:	scas   al,BYTE PTR es:[edi]
  40d936:	mov    ds:0x4fc8f974,eax
  40d93b:	pop    esi
  40d93c:	sar    eax,0xfe
  40d93f:	fsubr  QWORD PTR [ecx-0x3d]
  40d942:	jbe    0x40d8cc
  40d944:	dec    ebx
  40d945:	mov    eax,0xc359bcfe
  40d94a:	xor    BYTE PTR [esi+0x2b],dl
  40d94d:	mov    eax,0xe841bcfe
  40d952:	inc    esp
  40d953:	sub    DWORD PTR [edi+0x5302c01e],edi
  40d959:	rcl    BYTE PTR cs:[ecx],0x0
  40d95d:	sar    dh,cl
  40d95f:	push   ss
  40d960:	mov    ch,0x1e
  40d962:	les    ecx,FWORD PTR ds:0x74c41eb5
  40d968:	leave  
  40d969:	enter  0x7c8a,0x0
	...
  40d995:	add    BYTE PTR [ecx],dl
  40d997:	repnz (bad)
  40d99a:	cmp    eax,0x6845f35b
  40d99f:	inc    ecx
  40d9a0:	pop    ebp
  40d9a1:	sub    BYTE PTR [edx-0xe],al
  40d9a4:	or     ch,cl
  40d9a6:	cmp    eax,0xb68df35b
  40d9ab:	or     BYTE PTR cs:[edx+0x78],ah
  40d9af:	fs repz (bad) 
  40d9b2:	rcr    BYTE PTR [esi],0xe0
  40d9b5:	sbb    DWORD PTR [ebx],ebp
  40d9b7:	shl    BYTE PTR cs:[esi+0x7e79cb8],0x1d
  40d9bf:	mov    eax,0x9cc8a6fe
  40d9c4:	out    0x89,eax
  40d9c6:	jecxz  0x40d97f
  40d9c8:	(bad)  
  40d9c9:	xchg   ebp,eax
  40d9ca:	shr    BYTE PTR [esi],0xf0
  40d9cd:	pop    esp
  40d9ce:	enter  0xb8a0,0x0
  40d9d2:	ja     0x40da30
  40d9d4:	add    BYTE PTR [eax],al
  40d9d6:	aam    0x17
  40d9d8:	lea    esi,[ebp-0x49]
  40d9db:	adc    eax,0x5c570008
  40d9e0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e2:	or     eax,0x6f458d5d
  40d9e7:	in     al,dx
  40d9e8:	out    0x68,al
  40d9ea:	mov    ch,0x5b
  40d9ec:	add    BYTE PTR [ebx+0x7d89ac0a],cl
  40d9f2:	sti    
  40d9f3:	sbb    al,0xef
  40d9f5:	add    ecx,DWORD PTR [edi+ecx*2]
  40d9f8:	je     0x40da61
	...
  40da22:	add    BYTE PTR [eax],al
  40da24:	jl     0x40da85
  40da26:	lea    eax,[ebp+0x7f]
  40da29:	in     al,dx
  40da2a:	push   esp
  40da2b:	push   esi
  40da2c:	dec    edi
  40da2d:	push   ebp
  40da2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2f:	add    bh,ah
  40da31:	fcmovb st,st(5)
  40da33:	or     BYTE PTR [eax-0x1d8a009e],ah
  40da39:	pop    ebx
  40da3a:	mov    dh,0x46
  40da3c:	inc    eax
  40da3d:	fcomi  st,st(7)
  40da3f:	or     BYTE PTR [eax+0x5a],cl
  40da42:	sub    esi,eax
  40da44:	cld    
  40da45:	call   0x302ab58
  40da4a:	jmp    FWORD PTR [ecx-0x59]
  40da4d:	aad    0xfe
  40da4f:	imul   esp,DWORD PTR [edi-0x588a020f],0x9769fed5
  40da59:	push   ebx
  40da5a:	mov    esi,0xb5ba781
  40da5f:	ror    BYTE PTR [ebx-0x6a],0x4e
  40da63:	push   eax
  40da64:	jg     0x40da46
  40da66:	xchg   ebp,eax
  40da67:	call   eax
  40da69:	aaa    
  40da6a:	fcomp  DWORD PTR [ecx+0x4d]
  40da6d:	pop    edi
  40da6e:	push   0x0
  40da70:	ss lock push esp
  40da73:	(bad)  
  40da74:	ds push edi
  40da76:	hlt    
  40da77:	imul   edi,DWORD PTR [esi],0xbbe8045c
  40da7d:	inc    edx
  40da7e:	add    al,0x0
  40da80:	inc    ebp
  40da81:	add    bl,BYTE PTR [ecx-0x412612f9]
  40da87:	xchg   ebp,eax
	...
  40dab0:	add    BYTE PTR [eax],al
  40dab2:	inc    ecx
  40dab3:	dec    eax
  40dab4:	(bad)  
  40dab6:	lds    eax,FWORD PTR [ecx+0x6b905eaf]
  40dabc:	inc    esi
  40dabd:	adc    BYTE PTR [esi],bh
  40dabf:	idiv   DWORD PTR [ebp-0x14]
  40dac2:	mov    ebp,0x6d571480
  40dac7:	dec    ecx
  40dac8:	das    
  40dac9:	dec    DWORD PTR [ebx+0x367511c8]
  40dacf:	sbb    al,0x3b
  40dad1:	nop
  40dad2:	add    DWORD PTR [esi-0x538c014c],eax
  40dad8:	sbb    cl,BYTE PTR [esp+ecx*8-0x1974ecab]
  40dadf:	in     al,dx
  40dae0:	add    eax,0x988435f8
  40dae5:	inc    esi
  40dae6:	retf   
  40dae7:	pop    es
  40dae8:	pop    ss
  40dae9:	push   eax
  40daea:	shr    DWORD PTR [edi],1
  40daec:	(bad)  
  40daed:	(bad)  
  40daee:	push   ebx
  40daef:	mov    esp,0xc5c3ab1a
  40daf4:	adc    DWORD PTR [ecx+0x457fc003],ecx
  40dafa:	scas   al,BYTE PTR es:[edi]
  40dafb:	je     0x40db10
  40dafd:	jne    0x40db39
  40daff:	lea    edx,[edi+0x102b9607]
  40db05:	call   FWORD PTR [ecx-0x6e0837d5]
  40db0b:	outs   dx,DWORD PTR ds:[esi]
  40db0c:	adc    al,0xff
  40db0e:	adc    ebp,esp
  40db10:	adc    DWORD PTR [ebp-0x76],esi
  40db13:	add    eax,0xfb98
	...
  40db40:	pop    bx
  40db42:	clc    
  40db43:	adc    DWORD PTR [ecx-0x4a],esi
  40db46:	jno    0x40db73
  40db48:	imul   esi,DWORD PTR [eax],0xd0841b95
  40db4e:	lea    edx,[edx]
  40db50:	pop    ecx
  40db51:	xor    BYTE PTR [ecx+0x7dd06c1b],al
  40db57:	adc    dl,ah
  40db59:	pop    edx
  40db5a:	push   ds
  40db5b:	adc    ecx,ebx
  40db5d:	bound  eax,QWORD PTR [ecx+0x65b5ca9d]
  40db63:	jle    0x40db62
  40db65:	adc    DWORD PTR [esi-0x169d03c4],edi
  40db6b:	mov    eax,0x9069c6b4
  40db70:	inc    ebp
  40db71:	pop    ebp
  40db72:	mov    ebx,0xd93010e4
  40db77:	adc    dl,BYTE PTR [ebx-0x4e45be9d]
  40db7d:	mov    ch,0x2d
  40db7f:	adc    dh,BYTE PTR [ebx+0x4b]
  40db82:	es cwde 
  40db84:	cmp    ebx,eax
  40db86:	dec    ebp
  40db87:	adc    cl,ch
  40db89:	mov    ch,0x15
  40db8b:	cwde   
  40db8c:	xor    DWORD PTR [esi-0x11e046d],esi
  40db92:	add    edx,DWORD PTR [edx]
  40db94:	shl    DWORD PTR [ebp+0x2fc8f373],1
  40db9a:	loope  0x40dbb7
  40db9c:	je     0x40db54
  40db9e:	in     eax,dx
  40db9f:	adc    ebp,eax
  40dba1:	paddw  mm7,QWORD PTR [edx+0x0]
	...
  40dbcd:	add    BYTE PTR [esi+esi*4],bh
  40dbd0:	push   ebx
  40dbd1:	hlt    
  40dbd2:	test   al,0x2f
  40dbd4:	loope  0x40dbf1
  40dbd6:	mov    bh,0xb7
  40dbd8:	int    0x11
  40dbda:	mov    ebp,0x804f537
  40dbdf:	dec    ebp
  40dbe0:	mov    esi,0xffb63997
  40dbe5:	cmp    eax,DWORD PTR [edx+0x4fac77bd]
  40dbeb:	mov    dh,0xfe
  40dbed:	sbb    al,0x6a
  40dbef:	mov    ah,0x74
  40dbf1:	icebp  
  40dbf2:	inc    ebp
  40dbf3:	dec    eax
  40dbf4:	std    
  40dbf5:	xchg   esi,eax
  40dbf6:	dec    edi
  40dbf7:	mov    dh,0x74
  40dbf9:	stc    
  40dbfa:	mov    ebx,0x55fcff4d
  40dbff:	mov    ebp,0xb62f5980
  40dc04:	(bad)  
  40dc05:	cld    
  40dc06:	dec    ebp
  40dc07:	mov    ah,0x74
  40dc09:	loope  0x40dc60
  40dc0b:	test   eax,0xa24f668e
  40dc10:	sar    ecx,0x3d
  40dc13:	push   cs
  40dc14:	mov    eax,DWORD PTR [ebp+0x4f]
  40dc17:	cs or  al,0xc3
  40dc1a:	cmp    al,0xb4
  40dc1c:	je     0x40dc0f
  40dc1e:	xor    eax,0x2f3e9039
  40dc23:	mov    ah,0x74
  40dc25:	in     eax,0x2e
  40dc27:	or     BYTE PTR cs:[ecx+0x27],al
  40dc2b:	mov    ch,0xfe
  40dc2d:	es jae 0x40dc3e
  40dc30:	adc    BYTE PTR [eax+0x0],dh
	...
  40dc5b:	add    BYTE PTR [eax-0x4c],al
  40dc5e:	je     0x40dc45
  40dc60:	dec    esi
  40dc61:	or     BYTE PTR cs:[ecx],al
  40dc64:	pop    ss
  40dc65:	mov    ch,0xfe
  40dc67:	push   es
  40dc68:	push   ebx
  40dc69:	push   cs
  40dc6a:	adc    al,0x70
  40dc6c:	inc    eax
  40dc6d:	mov    ah,0x74
  40dc6f:	in     eax,0x2e
  40dc71:	or     BYTE PTR cs:[ecx],al
  40dc74:	pop    es
  40dc75:	mov    ch,0xfe
  40dc77:	out    0x32,al
  40dc79:	push   cs
  40dc7a:	sbb    BYTE PTR [eax+0x43],dh
  40dc7d:	mov    ds:0xe3dfdc1,al
  40dc82:	mov    edi,DWORD PTR [ebp+0xeb9fc2]
  40dc88:	xor    edx,esi
  40dc8a:	std    
  40dc8b:	jne    0x40dd00
  40dc8d:	(bad)  
  40dc8e:	(bad)  
  40dc8f:	inc    BYTE PTR [edx-0x49]
  40dc92:	out    0x19,al
  40dc94:	pop    ss
  40dc95:	dec    ebx
  40dc96:	(bad)  
  40dc97:	call   DWORD PTR [edx-0x4d]
  40dc9a:	std    
  40dc9b:	jne    0x40dd0c
  40dc9d:	push   eax
  40dc9e:	mov    cl,BYTE PTR [edi-0xf74b438]
  40dca4:	mov    esi,0x67ffffa7
  40dca9:	aaa    
  40dcaa:	inc    ebp
  40dcab:	adc    al,0xd4
  40dcad:	lahf   
  40dcae:	(bad)  
  40dcaf:	je     0x40dd03
  40dcb1:	push   ecx
  40dcb2:	add    DWORD PTR ss:[edi],esp
  40dcb5:	pop    eax
  40dcb6:	mov    DWORD PTR [ebp-0x65],0x17000058
  40dcbd:	xor    eax,0xfc45
	...
  40dcea:	out    0x4a,eax
  40dcec:	jne    0x40dd02
  40dcee:	mov    ch,cl
  40dcf0:	push   cs
  40dcf1:	call   edx
  40dcf3:	scas   eax,DWORD PTR es:[edi]
  40dcf4:	out    0xf2,al
  40dcf6:	dec    ecx
  40dcf7:	dec    ebx
  40dcf8:	dec    DWORD PTR [ebx-0x38320b1]
  40dcfe:	out    0xcb,eax
  40dd00:	and    DWORD PTR [eax-0x2a],ebp
  40dd03:	add    al,0x40
  40dd05:	add    BYTE PTR [eax-0x33],cl
  40dd08:	cli    
  40dd09:	call   0x40b5f5
  40dd0e:	fcom   QWORD PTR [edi]
  40dd10:	jne    0x40dd1f
  40dd12:	scas   eax,DWORD PTR es:[edi]
  40dd13:	loopne 0x40dd70
  40dd15:	inc    ecx
  40dd16:	xlat   BYTE PTR ds:[ebx]
  40dd17:	dec    edx
  40dd18:	jne    0x40dd16
  40dd1a:	aas    
  40dd1b:	dec    ebx
  40dd1c:	add    BYTE PTR [eax],0xa7
  40dd1f:	xor    BYTE PTR [ebp-0x14],al
  40dd22:	mov    WORD PTR [ebx-0x39],ds
  40dd25:	inc    ebp
  40dd26:	jnp    0x40dd86
  40dd28:	add    BYTE PTR [eax],al
  40dd2a:	ds ret 0x7d81
  40dd2e:	stos   BYTE PTR es:[edi],al
  40dd2f:	rcl    DWORD PTR [esi+0x2c32617],0xef
  40dd36:	enter  0x98f4,0xb
  40dd3a:	xchg   esi,eax
  40dd3b:	mov    ?,WORD PTR [ebx-0x1]
  40dd3e:	jns    0x40dd44
  40dd40:	cdq    
  40dd41:	sti    
  40dd42:	jno    0x40dd9a
  40dd44:	add    al,ch
  40dd46:	repnz xor cl,BYTE PTR [edi]
  40dd49:	call   DWORD PTR [edi+0x38]
  40dd4c:	add    al,0x0
	...
  40dd76:	add    BYTE PTR [eax],al
  40dd78:	ds cmp ecx,ecx
  40dd7b:	adc    edi,DWORD PTR [ebp+0x43750299]
  40dd81:	retf   
  40dd82:	test   DWORD PTR [eax],eax
  40dd84:	ds ret 0x4545
  40dd88:	lds    eax,FWORD PTR ss:[edx]
  40dd8b:	add    BYTE PTR [esi],bh
  40dd8d:	or     ecx,0x2c43ef3
  40dd93:	add    cl,bh
  40dd95:	call   DWORD PTR [edx]
  40dd97:	add    BYTE PTR [esi],bh
  40dd99:	les    eax,FWORD PTR [edx]
  40dd9b:	lea    edi,[ebx+0x74]
  40dd9e:	mov    ah,0x8c
  40dda0:	sub    DWORD PTR [eax-0x4c],0xffffff8c
  40dda4:	jnp    0x40de12
  40dda6:	mov    ah,0xfe
  40dda8:	jae    0x40dd32
  40ddaa:	or     eax,0x254c4675
  40ddaf:	(bad)  
  40ddb0:	jmp    0xd2be6106
  40ddb5:	les    edx,FWORD PTR [esi+0xadfbd32]
  40ddbb:	add    BYTE PTR [edx-0x79],cl
  40ddbe:	cmp    DWORD PTR [ebp-0x2e],0xbd0597c4
  40ddc5:	daa    
  40ddc6:	adc    eax,DWORD PTR [eax]
  40ddc8:	xor    ah,BYTE PTR [ebx+0x5bb6750d]
  40ddce:	out    0x98,al
  40ddd0:	xor    eax,0xa174f9c3
  40ddd5:	mov    dl,0xd5
  40ddd7:	cwde   
  40ddd8:	lea    esi,[edx+0x53]
	...
  40de06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de07:	arpl   WORD PTR [eax+0xe],bx
  40de0a:	mov    DWORD PTR [edx+0x28811433],esi
  40de10:	in     eax,0x1b
  40de12:	jnp    0x40dddf
  40de14:	lods   eax,DWORD PTR ds:[esi]
  40de15:	push   cs
  40de16:	jno    0x40de40
  40de18:	mov    eax,ds:0x9dce5c1b
  40de1d:	push   cs
  40de1e:	popa   
  40de1f:	sub    BYTE PTR [ebp-0x72318be5],bl
  40de25:	push   cs
  40de26:	push   ecx
  40de27:	sub    BYTE PTR [ecx+0x1b],bh
  40de2a:	ins    BYTE PTR es:[edi],dx
  40de2b:	into   
  40de2c:	jge    0x40de3c
  40de2e:	icebp  
  40de2f:	gs jbe 0x40de30
  40de32:	ret    0x6e3f
  40de35:	push   cs
  40de36:	xor    esi,ebx
  40de38:	jecxz  0x40de59
  40de3a:	ds daa 
  40de3c:	call   FWORD PTR [ecx-0x244edf]
  40de42:	and    DWORD PTR [ebp+0x79],eax
  40de45:	push   cs
  40de46:	adc    DWORD PTR [ebp-0x17],eax
  40de49:	push   cs
  40de4a:	xchg   ebx,eax
  40de4b:	pop    edi
  40de4c:	push   ecx
  40de4d:	mov    ds:0x9935b1b1,eax
  40de52:	stc    
  40de53:	mov    al,0xb3
  40de55:	(bad)  
  40de56:	(bad)  [eax]
  40de58:	jns    0x40de68
  40de5a:	jmp    0xd6507210
  40de5f:	iret   
  40de60:	jns    0x40de70
  40de62:	fldenv [eax]
  40de64:	loop   0x40de7b
  40de66:	inc    ecx
  40de67:	fadd   DWORD PTR [ebx+0xd]
	...
  40de92:	add    BYTE PTR [eax],al
  40de94:	leave  
  40de95:	mov    cl,0x9d
  40de97:	lods   eax,DWORD PTR ds:[esi]
  40de98:	neg    BYTE PTR [edi+edi*8-0x74f7c228]
  40de9f:	std    
  40dea0:	mov    edi,0x3b3fe396
  40dea5:	sub    BYTE PTR [eax],cl
  40dea7:	rcl    edi,1
  40dea9:	in     al,0xfe
  40deab:	(bad)  
  40deac:	adc    eax,0xc16af418
  40deb1:	lods   eax,DWORD PTR ds:[esi]
  40deb2:	(bad)  
  40deb5:	jmp    0x5b7ec7ba
  40deba:	pop    esi
  40debb:	mov    al,ds:0xae0062fc
  40dec0:	leave  
  40dec1:	pop    ecx
  40dec2:	call   0xfef2c7db
  40dec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec8:	jns    0x40de73
  40deca:	add    cl,ch
  40decc:	cmp    eax,0x42248d5b
  40ded1:	or     edi,edi
  40ded3:	cld    
  40ded4:	inc    ebp
  40ded5:	mov    ecx,0xb2336cfc
  40deda:	mov    BYTE PTR [esi+ecx*2],ch
  40dedd:	fdivr  QWORD PTR [ecx+esi*2+0x3a]
  40dee1:	daa    
  40dee2:	or     al,0x6a
  40dee4:	mov    ecx,0x3bdb01b4
  40dee9:	fdivr  QWORD PTR [ebp+edx*2+0x40]
  40deed:	sub    DWORD PTR [edx],ecx
  40deef:	xchg   ecx,eax
  40def0:	cmp    eax,0xdbe9005b
  40def5:	mov    ds:0xf1c1,eax
	...
  40df22:	cmp    eax,0xb23144de
  40df27:	mov    cl,0x74
  40df29:	loope  0x40df80
  40df2b:	lea    ecx,[esi+eiz*1+0x217cdc3b]
  40df32:	cmp    ah,BYTE PTR [edi]
  40df34:	add    al,0xe2
  40df36:	jge    0x40df5f
  40df38:	or     dl,BYTE PTR [ecx+0x3d]
  40df3b:	pop    ebx
  40df3c:	add    BYTE PTR [eax],al
  40df3e:	xlat   BYTE PTR ds:[ebx]
  40df3f:	inc    bh
  40df41:	ret    0x5ccf
  40df44:	cmp    DWORD PTR [ebp-0x4d],0x59
  40df48:	jb     0x40df69
  40df4a:	adc    bl,BYTE PTR [eax-0x40f2af0a]
  40df50:	std    
  40df51:	jne    0x40df02
  40df53:	push   esp
  40df54:	mov    ?,WORD PTR cs:[eax+0x5f]
  40df58:	lea    eax,[ebp+0x6f]
  40df5b:	in     al,dx
  40df5c:	std    
  40df5d:	jne    0x40deee
  40df5f:	push   esp
  40df60:	sahf   
  40df61:	(bad)  
  40df62:	rcr    BYTE PTR [edi-0x77],0x45
  40df66:	mov    edx,DWORD PTR [ebx+0x1d]
  40df69:	lea    ebx,[edx]
  40df6b:	pop    edi
  40df6c:	push   eax
  40df6d:	dec    DWORD PTR [edx-0x51]
  40df70:	out    0x8d,al
  40df72:	rcr    BYTE PTR [esi-0x1],cl
  40df75:	mov    DWORD PTR [edx],ebp
  40df77:	or     DWORD PTR [ebp+0x68ecaf45],0x4
  40df7e:	ror    cl,0x6
  40df81:	call   0x400ddd
	...
  40dfae:	add    BYTE PTR [eax],al
  40dfb0:	mov    ds:0xa050f699,al
  40dfb5:	leave  
  40dfb6:	push   es
  40dfb7:	call   0x404220
  40dfbc:	xchg   esp,eax
  40dfbd:	loope  0x40dfa1
  40dfbf:	add    edx,edi
  40dfc1:	mov    ebp,0xec6f458b
  40dfc6:	std    
  40dfc7:	jne    0x40df4c
  40dfc9:	pop    edi
  40dfca:	jne    0x40dfd8
  40dfcc:	inc    eax
  40dfcd:	leave  
  40dfce:	push   es
  40dfcf:	call   0x404095
  40dfd4:	xchg   edx,eax
  40dfd5:	cdq    
  40dfd6:	not    BYTE PTR [eax+0x20]
  40dfd9:	leave  
  40dfda:	push   es
  40dfdb:	call   0x404250
  40dfe0:	ds inc ebp
  40dfe2:	mov    ?,edi
  40dfe4:	ds xbegin 0x3031ea2
  40dfeb:	add    BYTE PTR [eax+0x6b],ah
  40dfee:	inc    ecx
  40dfef:	or     BYTE PTR [esi],bh
  40dff1:	aaa    
  40dff2:	(bad)  
  40dff3:	test   DWORD PTR [esi],0xa9fb94c1
  40dff9:	push   cs
  40dffa:	clc    
  40dffb:	(bad)  
  40dffc:	sub    ebp,DWORD PTR [edx-0x77647fe6]
  40e002:	or     al,BYTE PTR [ebx+0x75038a13]
  40e008:	xor    al,0xda
  40e00a:	add    eax,DWORD PTR [eax]
  40e00c:	ds ret 0xc8a8
  40e010:	jl     0x40dfcb
  40e012:	add    cl,BYTE PTR [ebp+0x0]
	...
  40e03c:	add    BYTE PTR [eax],al
  40e03e:	sti    
  40e03f:	jmp    0xaa34def7
  40e044:	sbb    cl,BYTE PTR [esi]
  40e046:	mov    bl,0xd0
  40e048:	or     cl,BYTE PTR [ebx+0xeda4e]
  40e04e:	ds ret 0x7509
  40e052:	ss retf 0x8e48
  40e056:	inc    ecx
  40e057:	xor    bh,cl
  40e059:	inc    esp
  40e05a:	xor    dh,BYTE PTR [eax-0x3ad61701]
  40e060:	add    al,BYTE PTR [eax]
  40e062:	mov    ebp,0xac0606b7
  40e067:	pop    eax
  40e068:	jns    0x40e0af
  40e06a:	push   ss
  40e06b:	cmc    
  40e06c:	or     DWORD PTR [ebp+0x46],esi
  40e06f:	sbb    al,0x27
  40e071:	mov    WORD PTR [ecx],cs
  40e073:	push   ss
  40e074:	jns    0x40e0bb
  40e076:	push   es
  40e077:	aad    0x9
  40e079:	jne    0x40e0c1
  40e07b:	sbb    al,0xce
  40e07d:	stc    
  40e07e:	icebp  
  40e07f:	jge    0x40e0fa
  40e081:	inc    ebp
  40e082:	out    0x5b,al
  40e084:	mov    ecx,0x11636b0a
  40e089:	fcmovbe st,st(7)
  40e08b:	scas   al,BYTE PTR es:[edi]
  40e08c:	adc    eax,0xb8b37b79
  40e091:	or     dl,BYTE PTR [ebx+0x63]
  40e094:	adc    DWORD PTR [edi],esi
  40e096:	lds    ebp,FWORD PTR [esi-0x54fc8303]
  40e09c:	arpl   cx,ax
  40e09e:	test   eax,0x90ee0b
	...
  40e0cb:	add    BYTE PTR [ecx-0x3d],al
  40e0ce:	lods   al,BYTE PTR ds:[esi]
  40e0cf:	push   cs
  40e0d0:	mov    eax,ds:0xa5c06fae
  40e0d5:	loopne 0x40e102
  40e0d7:	or     al,0xee
  40e0d9:	lods   eax,DWORD PTR ds:[esi]
  40e0da:	push   ebx
  40e0db:	cld    
  40e0dc:	mov    eax,ds:0x810ac1e8
  40e0e1:	in     al,0x23
  40e0e3:	sbb    al,0xbd
  40e0e5:	xor    BYTE PTR [ecx+0x6a29ea03],bh
  40e0eb:	mov    BYTE PTR [ebp+0x5b],dl
  40e0ee:	sbb    eax,0x9130bc99
  40e0f3:	add    edx,edx
  40e0f5:	xor    eax,0x5b49886a
  40e0fa:	adc    eax,0x23d8e1a5
  40e0ff:	lds    eax,FWORD PTR [ecx-0x53]
  40e102:	repz adc esp,DWORD PTR [esi]
  40e105:	sbb    al,0xf7
  40e107:	add    edi,DWORD PTR [esi]
  40e109:	bound  ebp,QWORD PTR [ecx-0x27bcb470]
  40e10f:	test   al,0x7e
  40e111:	pop    ebx
  40e112:	pop    esi
  40e113:	nop
  40e114:	sub    ebx,eax
  40e116:	sbb    BYTE PTR [edx+0x43e1ae11],cl
  40e11c:	xchg   ebx,eax
  40e11d:	pusha  
  40e11e:	ror    DWORD PTR [edx+eiz*2+0x730ae91c],1
  40e125:	stos   DWORD PTR es:[edi],eax
  40e126:	inc    DWORD PTR [eax-0x1c]
  40e129:	das    
  40e12a:	add    cl,ch
  40e12c:	call   0x118551e
	...
  40e159:	add    ch,al
  40e15b:	lods   eax,DWORD PTR ds:[esi]
  40e15c:	dec    BYTE PTR [esi]
  40e15e:	xchg   DWORD PTR [esi+0x2235e574],ebp
  40e164:	mov    cs,WORD PTR [esi]
  40e166:	xor    al,0xae
  40e168:	je     0x40e163
  40e16a:	aaa    
  40e16b:	sub    BYTE PTR [ecx+edx*1],cl
  40e16e:	and    ebx,ebp
  40e170:	(bad)  
  40e171:	test   BYTE PTR [edi+0x28],0xec
  40e175:	out    dx,al
  40e176:	mov    ecx,0x247ee861
  40e17b:	scas   al,BYTE PTR es:[edi]
  40e17c:	(bad)  
  40e17d:	fmulp  st(1),st
  40e17f:	mov    ch,0xfe
  40e181:	pop    esp
  40e182:	xchg   esi,eax
  40e183:	mov    ch,0x8b
  40e185:	pop    edi
  40e186:	aaa    
  40e187:	scas   al,BYTE PTR es:[edi]
  40e188:	(bad)  
  40e189:	cmp    al,0x2a
  40e18b:	ret    
  40e18c:	jo     0x40e1e6
  40e18e:	inc    edi
  40e18f:	scas   al,BYTE PTR es:[edi]
  40e190:	(bad)  
  40e191:	cmp    al,0x56
  40e193:	ret    
  40e194:	push   0xfeae3758
  40e199:	sbb    al,0x42
  40e19b:	ret    
  40e19c:	pusha  
  40e19d:	js     0x40e1e6
  40e19f:	scas   al,BYTE PTR es:[edi]
  40e1a0:	dec    ebp
  40e1a1:	push   0xffffffb9
  40e1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a4:	call   DWORD PTR [edx+ecx*2]
  40e1a7:	pusha  
  40e1a8:	div    dh
  40e1aa:	shl    BYTE PTR [ebp-0x1fb88103],0x44
  40e1b1:	jno    0x40e197
  40e1b3:	mov    ds:0x63de1c1,eax
  40e1b8:	mov    edx,DWORD PTR [ebp-0x45]
  40e1bb:	xchg   edi,eax
  40e1bc:	sti    
  40e1bd:	pop    esi
	...
  40e1e6:	add    BYTE PTR [eax],al
  40e1e8:	leave  
  40e1e9:	pusha  
  40e1ea:	call   0xfeed67e4
  40e1ef:	loop   0x40e26e
  40e1f1:	es das 
  40e1f3:	add    BYTE PTR [edx-0x70af0514],cl
  40e1f9:	xor    cl,BYTE PTR [eax+0x756228ff]
  40e1ff:	cld    
  40e200:	sbb    ah,bl
  40e202:	or     ch,al
  40e204:	push   esp
  40e205:	sub    eax,0x18ccffff
  40e20a:	je     0x40e21b
  40e20c:	sub    ah,bl
  40e20e:	push   es
  40e20f:	push   DWORD PTR [edx+0x3a87e854]
  40e215:	(bad)  
  40e216:	dec    DWORD PTR [ebx]
  40e218:	addr16 fdiv st(6),st
  40e21b:	(bad)  
  40e21c:	xor    dl,BYTE PTR [eax+ebp*8-0x78]
  40e220:	pop    ds
  40e221:	(bad)  
  40e222:	dec    ecx
  40e224:	aad    0xb0
  40e226:	(bad)  
  40e227:	push   esp
  40e228:	or     al,0x44
  40e22a:	add    esp,0xffff62b3
  40e230:	loopne 0x40e25f
  40e232:	mov    eax,0x6378fe
  40e237:	add    BYTE PTR [edi+0x58],ah
  40e23a:	mov    eax,DWORD PTR [ebp+0x5b]
  40e23d:	scas   eax,DWORD PTR es:[edi]
  40e23e:	mov    esi,0x37d86274
  40e243:	add    BYTE PTR [edx-0x54],al
  40e246:	out    0x51,eax
  40e248:	pop    ax
  40e24a:	add    bh,bh
	...
  40e274:	add    BYTE PTR [eax],al
  40e276:	xor    dh,BYTE PTR [ebx+0x62db29e6]
  40e27c:	dec    DWORD PTR [ebx]
  40e27e:	xchg   edi,eax
  40e27f:	fisttp QWORD PTR ds:0x3ff2c268
  40e285:	add    BYTE PTR [eax+0x40e80add],ch
  40e28b:	sub    edi,edi
  40e28d:	dec    DWORD PTR [ebp+eiz*4-0x6717159a]
  40e294:	(bad)  
  40e295:	(bad)  
  40e296:	ds (bad) 
  40e298:	mul    bh
  40e29a:	data16 es or bh,bh
  40e29e:	mov    bh,0x3e
  40e2a0:	dec    ebx
  40e2a1:	(bad)  
  40e2a2:	stc    
  40e2a3:	ins    BYTE PTR es:[edi],dx
  40e2a4:	fwait
  40e2a5:	cmp    eax,0x8d02c23f
  40e2aa:	ret    
  40e2ab:	jg     0x40e2b6
  40e2ad:	jmp    ecx
  40e2af:	icebp  
  40e2b0:	sbb    dl,al
  40e2b2:	scas   al,BYTE PTR es:[edi]
  40e2b3:	dec    esp
  40e2b4:	or     BYTE PTR [ebp-0xf68045],cl
  40e2ba:	leave  
  40e2bb:	icebp  
  40e2bc:	pop    es
  40e2bd:	mov    ch,0x86
  40e2bf:	push   ebx
  40e2c0:	or     bh,bh
  40e2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2c3:	mov    edi,0x3ab1ff86
  40e2c8:	jle    0x40e286
  40e2ca:	test   al,0xbc
  40e2cc:	push   es
  40e2cd:	inc    eax
  40e2ce:	xor    DWORD PTR [esi],edi
  40e2d0:	adc    eax,DWORD PTR [eax]
  40e2d2:	ds ret 0x9577
  40e2d6:	jl     0x40e25b
  40e2d8:	push   es
  40e2d9:	inc    DWORD PTR [eax]
	...
  40e303:	add    BYTE PTR [ecx-0x7e000d41],dl
  40e309:	ror    DWORD PTR [esi-0x27803484],0x4f
  40e310:	out    0xa1,al
  40e312:	mov    dh,0x40
  40e314:	ds call 0xbff9:0xc23e7b26
  40e31c:	shl    DWORD PTR [esi-0x3dc156e5],cl
  40e322:	add    cl,BYTE PTR [ebp-0xfa004d]
  40e328:	inc    ecx
  40e329:	es ret 0x8e2b
  40e32d:	dec    esp
  40e32e:	and    cl,BYTE PTR [edi+0x7f]
  40e331:	mov    ah,0x1a
  40e333:	ret    0xb4a5
  40e336:	add    cl,BYTE PTR [ebx]
  40e338:	(bad)  
  40e339:	pop    ebx
  40e33a:	fadd   QWORD PTR [eax]
  40e33c:	daa    
  40e33d:	fsubr  st,st(0)
  40e33f:	add    edi,DWORD PTR [esi]
  40e341:	stos   BYTE PTR es:[edi],al
  40e342:	fcomi  st,st(7)
  40e344:	and    ebp,edx
  40e346:	jno    0x40e34f
  40e348:	add    DWORD PTR [edi+0x29],edx
  40e34b:	xchg   ecx,eax
  40e34c:	dec    eax
  40e34d:	xor    ecx,DWORD PTR [eax+0x365b7ebc]
  40e353:	xchg   ecx,eax
  40e354:	xor    eax,0xe17325b3
  40e359:	stos   BYTE PTR es:[edi],al
  40e35a:	adc    edx,edi
  40e35c:	addr16 pop ebx
  40e35e:	push   ds
  40e35f:	xchg   ecx,eax
  40e360:	inc    ebp
  40e361:	mov    bl,0x51
  40e363:	jae    0x40e32e
  40e365:	stos   BYTE PTR es:[edi],al
  40e366:	pop    ebx
  40e367:	jno    0x40e369
	...
  40e391:	add    ah,bh
  40e393:	test   eax,0xdcb0705
  40e398:	int    0xb1
  40e39a:	add    DWORD PTR [ebx-0x55568d0b],esi
  40e3a0:	cwde   
  40e3a1:	push   es
  40e3a2:	sub    ecx,DWORD PTR [ebx+0x39]
  40e3a5:	pop    es
  40e3a6:	adc    edx,DWORD PTR [ebx-0x2f]
  40e3a9:	or     DWORD PTR [eax-0x7be42a56],edx
  40e3af:	fcmove st,st(5)
  40e3b1:	push   es
  40e3b2:	xchg   ebp,eax
  40e3b3:	push   ds
  40e3b4:	je     0x40e377
  40e3b6:	and    eax,0x704f63d4
  40e3bb:	stos   BYTE PTR es:[edi],al
  40e3bc:	mov    ch,0x6
  40e3be:	repz dec edx
  40e3c0:	scas   al,BYTE PTR es:[edi]
  40e3c1:	push   eax
  40e3c2:	stos   BYTE PTR es:[edi],al
  40e3c3:	test   eax,0x106606a5
  40e3c8:	sbb    eax,0xa9563e04
  40e3cd:	(bad)  
  40e3ce:	and    DWORD PTR [ebx],esi
  40e3d0:	dec    eax
  40e3d1:	mov    ebx,0x90865afe
  40e3d6:	inc    ebp
  40e3d7:	mov    bl,0xd
  40e3d9:	jae    0x40e40c
  40e3db:	stos   BYTE PTR es:[edi],al
  40e3dc:	push   DWORD PTR [ebp-0x72]
  40e3df:	out    dx,eax
  40e3e0:	std    
  40e3e1:	outs   dx,BYTE PTR ds:[esi]
  40e3e2:	cmp    BYTE PTR [ebx],cl
  40e3e4:	call   0xfeeb7087
  40e3e9:	mov    ecx,0xe174a8cd
  40e3ee:	and    eax,0x384efe2b
  40e3f3:	mov    bl,0xb4
  40e3f5:	jbe    0x40e3f7
	...
  40e41f:	add    BYTE PTR [eax-0x56],al
  40e422:	mov    WORD PTR [edi+edi*2-0x57],fs
  40e426:	(bad)  
  40e427:	lods   eax,DWORD PTR ss:[esi]
  40e429:	test   al,0xb4
  40e42b:	ins    DWORD PTR es:[edi],dx
  40e42c:	cmp    ebp,DWORD PTR [edx+0x24e211fe]
  40e432:	add    cl,ch
  40e434:	mov    esi,0xd56c0e9a
  40e439:	test   al,0xfe
  40e43b:	push   cs
  40e43c:	cmp    al,dh
  40e43e:	mov    ebx,0xe7aa4007
  40e443:	aad    0xc4
  40e445:	test   eax,0xe2f9f6fe
  40e44a:	std    
  40e44b:	out    dx,al
  40e44c:	cmp    esi,DWORD PTR [ebx-0x55bc897c]
  40e452:	enter  0x96ab,0xa9
  40e456:	push   ebx
  40e457:	bound  esp,QWORD PTR [esi]
  40e459:	fadd   st(3),st
  40e45b:	cdq    
  40e45c:	cmp    BYTE PTR [edx-0x1d065102],ch
  40e462:	std    
  40e463:	mov    esi,0xe9005b3b
  40e468:	cmp    eax,0x66dd44d6
  40e46d:	jmp    0x62fed0e5
  40e472:	add    BYTE PTR [ecx+edx*2],dl
  40e475:	mov    dl,0x8
  40e477:	call   0x84a93fb9
  40e47c:	mov    ebx,DWORD PTR [edx]
  40e47e:	add    BYTE PTR [eax],al
  40e480:	rcr    al,0xa
  40e483:	call   0x40e488
	...
  40e4ac:	add    BYTE PTR [eax],al
  40e4ae:	shr    BYTE PTR ds:0x289effff,0xb8
  40e4b5:	(bad)  
  40e4b6:	nop
  40e4b7:	pop    esi
  40e4b8:	push   0x5d263e
  40e4bd:	lea    ebx,[edx+0x70fffe1d]
  40e4c3:	out    dx,eax
  40e4c4:	out    0x67,al
  40e4c6:	pusha  
  40e4c7:	pop    esi
  40e4c8:	dec    DWORD PTR [ebp-0x1e296]
  40e4ce:	xor    bh,ch
  40e4d0:	std    
  40e4d1:	mov    ch,0x6f
  40e4d3:	popa   
  40e4d4:	(bad)  
  40e4d5:	(bad)  
  40e4d6:	jg     0x40e50c
  40e4d8:	jp     0x40e4da
  40e4da:	out    0x25,eax
  40e4dc:	test   DWORD PTR [ecx+esi*1-0x1fbf00a2],edi
  40e4e3:	sub    dh,al
  40e4e5:	add    bh,dl
  40e4e7:	pop    esp
  40e4e8:	lea    edx,[ebp-0x9e9b]
  40e4ee:	test   al,0x5a
  40e4f0:	adc    BYTE PTR [eax],al
  40e4f2:	xchg   edi,eax
  40e4f3:	pop    esp
  40e4f4:	je     0x4143fa
  40e4fa:	adc    bh,BYTE PTR [ecx]
  40e4fc:	ret    0x70fe
  40e4ff:	pop    edi
  40e500:	lea    eax,[edx+0x43]
  40e503:	out    dx,eax
  40e504:	data16 loopne 0x40e527
  40e507:	pushf  
  40e508:	(bad)  
  40e509:	out    0x13,eax
  40e50b:	aad    0xfe
  40e50d:	jmp    FWORD PTR [esp+ebx*1+0x75]
  40e511:	add    al,BYTE PTR [eax]
	...
  40e53b:	add    BYTE PTR [ecx+ebx*8-0x75],bh
  40e53f:	xchg   ebp,eax
  40e540:	xchg   ebp,eax
  40e541:	pop    esi
  40e542:	(bad)  
  40e543:	call   edx
  40e545:	cdq    
  40e546:	sub    dl,BYTE PTR [eax+0x2f]
  40e549:	jge    0x40e59a
  40e54b:	inc    ecx
  40e54c:	ds mov dl,0x1a
  40e54f:	push   edx
  40e550:	les    esi,FWORD PTR [ecx-0x5901f4fe]
  40e556:	add    bl,ch
  40e558:	xchg   ebp,eax
  40e559:	aaa    
  40e55a:	outs   dx,BYTE PTR ds:[esi]
  40e55b:	ret    0x3128
  40e55e:	add    al,0x8d
  40e560:	jl     0x40e548
  40e562:	jns    0x40e4e9
  40e564:	sar    BYTE PTR [edi],cl
  40e566:	add    al,0xff
  40e568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e569:	sar    DWORD PTR [edx-0x71eec1c0],cl
  40e56f:	or     edx,DWORD PTR [esi]
  40e571:	icebp  
  40e572:	jo     0x40e573
  40e574:	stc    
  40e575:	and    BYTE PTR [esi-0x4c],cl
  40e578:	lock push 0x10d65004
  40e57e:	jno    0x40e57f
  40e580:	loope  0x40e5bc
  40e582:	jle    0x40e534
  40e584:	fadd   DWORD PTR [eax+0x2b665004]
  40e58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e58b:	inc    eax
  40e58c:	ds push ecx
  40e58e:	dec    esi
  40e58f:	mov    al,0xc0
  40e591:	pop    eax
  40e592:	add    al,0xe8
  40e594:	inc    edi
  40e595:	fld    QWORD PTR [edx]
  40e597:	add    BYTE PTR [ebp+0x72],al
  40e59a:	(bad)  
  40e59b:	adc    dl,BYTE PTR [esi]
  40e59d:	inc    ecx
  40e59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e59f:	inc    eax
	...
  40e5c8:	add    BYTE PTR [eax],al
  40e5ca:	ds mov ecx,0xc098b04c
  40e5d0:	add    bh,bh
  40e5d2:	or     ebp,DWORD PTR [edx-0x6f748716]
  40e5d8:	add    ch,al
  40e5da:	pop    es
  40e5db:	or     BYTE PTR [ebx],al
  40e5dd:	dec    ebx
  40e5df:	ss (bad) 
  40e5e1:	std    
  40e5e2:	jno    0x40e5cc
  40e5e4:	push   ebx
  40e5e5:	push   DWORD PTR [ebx+0x61ff022d]
  40e5eb:	cdq    
  40e5ec:	call   0xe99c2469
  40e5f1:	mov    BYTE PTR [ecx+0x49496457],dl
  40e5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5f8:	xchg   ebp,eax
  40e5f9:	add    ecx,DWORD PTR [ebx+0x39038ee6]
  40e5ff:	mov    ah,0xa0
  40e601:	jge    0x40e641
  40e603:	pop    ebx
  40e604:	jle    0x40e5bf
  40e606:	icebp  
  40e607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e608:	jne    0x40e60d
  40e60a:	push   ss
  40e60b:	adc    eax,0x9519035f
  40e610:	sub    cl,BYTE PTR [esi+edi*1]
  40e613:	adc    BYTE PTR [edx-0x10],dh
  40e616:	or     BYTE PTR [ecx],dh
  40e618:	in     eax,0xeb
  40e61a:	scas   eax,DWORD PTR es:[edi]
  40e61b:	leave  
  40e61c:	dec    ebp
  40e61d:	add    eax,DWORD PTR [ebp-0x65]
  40e620:	mov    esp,0x3e0b8e12
  40e625:	jns    0x40e65d
  40e627:	mov    bl,0x81
  40e629:	add    ah,cl
  40e62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62c:	inc    eax
  40e62d:	sub    eax,DWORD PTR [eax]
	...
  40e657:	add    al,cl
  40e659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e65a:	and    eax,0xe953ffcd
  40e65f:	pop    eax
  40e660:	mov    ch,0xb7
  40e662:	imul   ecx,eax,0x6de931c5
  40e668:	pop    edi
  40e669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66a:	jnp    0x40e677
  40e66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66d:	adc    al,0x72
  40e66f:	add    ebp,DWORD PTR [ecx+0x17ffabd4]
  40e675:	inc    ecx
  40e676:	out    dx,al
  40e677:	js     0x40e6bf
  40e679:	mov    bl,0xa5
  40e67b:	add    dl,BYTE PTR [ecx-0x76d8ad5a]
  40e681:	xor    cl,ah
  40e683:	jmp    0x40e64f
  40e685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e686:	int    0x2
  40e688:	in     al,0x46
  40e68a:	(bad)  
  40e68b:	js     0x40e6d3
  40e68d:	mov    bl,0x91
  40e68f:	add    ch,BYTE PTR [ecx-0x5a]
  40e692:	inc    DWORD PTR [edx+0x3a]
  40e695:	xor    esi,DWORD PTR [ecx+0x685b030c]
  40e69b:	sbb    dh,0x1b
  40e69e:	add    BYTE PTR [esi+0x2847a006],bl
  40e6a4:	cmp    dh,BYTE PTR [ebx-0x59c38610]
  40e6aa:	or     ch,BYTE PTR [ecx+0x11504fa9]
  40e6b0:	int    0x6
  40e6b2:	inc    ecx
  40e6b3:	jmp    0xe1b58d45
  40e6b8:	and    eax,0x66fb9b
	...
  40e6e5:	add    BYTE PTR [ebx+esi*4],bh
  40e6e8:	shr    BYTE PTR [esp+edi*1-0x5a],0x69
  40e6ed:	jmp    0xa89d8387
  40e6f2:	cmp    eax,0x7aa49933
  40e6f7:	pop    ebx
  40e6f8:	push   esp
  40e6fa:	neg    BYTE PTR ds:0x9bd5e941
  40e700:	(bad)  
  40e701:	cs cmp al,0x52
  40e704:	rcr    BYTE PTR [ebp+0x6e680b29],0x5e
  40e70b:	sbb    al,0x0
  40e70d:	mov    ecx,0x108303c
  40e712:	shl    DWORD PTR [ecx-0x345af902],cl
  40e718:	mov    esi,?
  40e71a:	aas    
  40e71b:	xor    DWORD PTR [eax],eax
  40e71d:	cmp    DWORD PTR ds:0x28cd333,0x5b
  40e724:	push   0x805b3de9
  40e729:	shl    DWORD PTR [edi+0x33d6fed5],1
  40e72f:	fwait
  40e730:	jae    0x40e737
  40e732:	adc    cl,BYTE PTR [ebx]
  40e734:	call   0xfe050839
  40e739:	jmp    FWORD PTR [ecx+ebx*4+0x72]
  40e73d:	adc    al,0x47
  40e73f:	aaa    
  40e740:	(bad)  
  40e741:	pop    ebp
  40e742:	es pop edi
  40e744:	push   eax
  40e745:	push   DWORD PTR [edx]
  40e747:	push   edi
  40e748:	call   0x40e7a9
	...
  40e771:	add    BYTE PTR [eax],al
  40e773:	add    BYTE PTR [ebx+0xbe8ff5b],ch
  40e779:	(bad)  
  40e77a:	std    
  40e77b:	(bad)  
  40e77c:	mov    edi,0xb8ff8d02
  40e781:	pop    edx
  40e782:	jne    0x40e780
  40e784:	test   al,0x2c
  40e786:	or     al,ch
  40e788:	fst    st(5)
  40e78a:	std    
  40e78b:	(bad)  
  40e78c:	ficomp WORD PTR [ebp-0x282dfffe]
  40e792:	jmp    0x68ff:0xf5ab6381
  40e799:	aam    0x43
  40e79b:	cld    
  40e79c:	mov    bh,0x5b
  40e79e:	jne    0x40e7b0
  40e7a0:	js     0x40e7ce
  40e7a2:	or     al,0xe8
  40e7a4:	cmc    
  40e7a5:	and    DWORD PTR [eax],eax
  40e7a7:	add    ah,bl
  40e7a9:	cwde   
  40e7aa:	or     eax,0x5f1c85
  40e7af:	add    BYTE PTR [eax],ah
  40e7b1:	sbb    al,0xf8
  40e7b3:	add    bh,dl
  40e7b5:	pop    eax
  40e7b6:	add    bh,al
  40e7b8:	xchg   edx,eax
  40e7b9:	lods   al,BYTE PTR ds:[esi]
  40e7ba:	std    
  40e7bb:	pop    es
  40e7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7bd:	pop    eax
  40e7be:	push   0x0
  40e7c0:	int    0x58
  40e7c2:	push   0x0
  40e7c4:	int    0x58
  40e7c6:	lea    eax,[ebp-0x5d]
  40e7c9:	or     BYTE PTR [ebp-0x25c6c7b],cl
  40e7cf:	call   DWORD PTR [edi+0x5a]
  40e7d2:	jne    0x40e7cc
  40e7d4:	push   0xe8fc2d
	...
  40e801:	add    BYTE PTR [esi],bh
  40e803:	inc    esi
  40e804:	jnp    0x40e806
  40e806:	ds mov ecx,0x8b3b73c2
  40e80c:	nop
  40e80d:	jmp    FWORD PTR [ecx-0x4e]
  40e810:	push   0xffffffa1
  40e812:	div    BYTE PTR [edx+0x4]
  40e815:	call   ebx
  40e817:	sub    edx,0xfffdae84
  40e81d:	dec    edi
  40e81e:	mov    ch,0xe2
  40e820:	lea    eax,[edx+ecx*2-0x7101003b]
  40e827:	pusha  
  40e828:	in     al,dx
  40e829:	je     0x40e7f9
  40e82b:	fdiv   st(7),st
  40e82d:	mov    bl,al
  40e82f:	and    eax,edi
  40e831:	(bad)  
  40e832:	and    edx,ebx
  40e834:	retf   
  40e835:	mov    ebx,DWORD PTR [ecx]
  40e837:	xor    eax,0x5ba6006d
  40e83c:	bound  eax,QWORD PTR [ecx+0x3e]
  40e83f:	add    eax,0xd09efb6
  40e844:	add    bh,bh
  40e846:	jae    0x40e7ce
  40e848:	jmp    0xc389:0x1cc1cd
  40e84f:	adc    eax,0x30e1fef8
  40e854:	mov    esi,0x74d1eb
  40e859:	add    BYTE PTR [edx-0x5f],cl
  40e85c:	push   0x1
  40e85e:	ds push ebp
  40e860:	sar    esi,0x8b
  40e863:	pop    ebp
  40e864:	clc    
  40e865:	inc    BYTE PTR [eax]
	...
  40e88f:	add    BYTE PTR [ecx-0x59f789ac],bh
  40e895:	fnstenv [esi+edi*8-0x144b5b57]
  40e89c:	test   eax,0xc7e7feac
  40e8a1:	add    eax,0x5a91ff00
  40e8a6:	pushf  
  40e8a7:	hlt    
  40e8a8:	nop
  40e8a9:	mov    ds:0x570affdd,eax
  40e8ae:	(bad)  
  40e8af:	jns    0x40e8f7
  40e8b1:	mov    bl,0x18
  40e8b3:	push   DWORD PTR [eax-0x5d]
  40e8b6:	lds    edi,FWORD PTR [ecx-0x4254a7]
  40e8bc:	pop    ecx
  40e8bd:	xor    eax,0xa358ff65
  40e8c2:	and    edi,esp
  40e8c4:	pushw  ds
  40e8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c7:	dec    DWORD PTR [eax-0x5d]
  40e8ca:	adc    eax,DWORD PTR [eax]
  40e8cc:	push   esi
  40e8cd:	rcl    DWORD PTR [eax],1
  40e8cf:	add    al,0x3e
  40e8d1:	xchg   esp,eax
  40e8d2:	stos   BYTE PTR es:[edi],al
  40e8d3:	adc    BYTE PTR [esi],bh
  40e8d5:	or     BYTE PTR [edx-0x10],dh
  40e8d8:	mov    esi,0x20f79097
  40e8dd:	mov    ds:0xc1a4963,eax
  40e8e2:	outs   dx,BYTE PTR ds:[esi]
  40e8e3:	jns    0x40e913
  40e8e5:	mov    ds:0x2f160fdb,al
  40e8ea:	loope  0x40e8ef
  40e8ec:	ds push esi
  40e8ee:	sub    DWORD PTR [edi],ecx
  40e8f0:	ret    
  40e8f1:	inc    ecx
  40e8f2:	call   0x40e8fa
	...
  40e91b:	add    BYTE PTR [eax],al
  40e91d:	add    BYTE PTR [esi],bh
  40e91f:	call   0x3e8:0xa2e9fbab
  40e926:	stc    
  40e927:	sbb    BYTE PTR ds:0xe95b40ff,bh
  40e92d:	imul   edi,DWORD PTR [esi],0x3e69e935
  40e933:	xor    eax,0xa77a90e9
  40e938:	mov    eax,0x15a7c290
  40e93d:	push   DWORD PTR [eax-0x5986f9f5]
  40e943:	mov    ds:0x1899ff73,al
  40e948:	add    BYTE PTR [ecx+0x3d],dh
  40e94b:	pop    ebx
  40e94c:	or     ebp,DWORD PTR [ecx]
  40e94e:	push   ss
  40e94f:	pop    eax
  40e950:	jmp    0x9c271d
  40e955:	push   ecx
  40e956:	fistp  DWORD PTR [edx]
  40e958:	inc    ecx
  40e959:	jmp    0xc15110d6
  40e95e:	retf   
  40e95f:	sar    esi,1
  40e961:	(bad)  
  40e962:	or     eax,0xb66ccfd6
  40e967:	scas   al,BYTE PTR es:[edi]
  40e968:	div    BYTE PTR [esi-0x3eadeda8]
  40e96e:	mov    ebx,0xbaa6fed1
  40e973:	xlat   BYTE PTR ds:[ebx]
  40e974:	out    dx,eax
  40e975:	xchg   esi,eax
  40e976:	inc    eax
  40e977:	mov    eax,ds:0xa0c4b5e7
  40e97c:	inc    BYTE PTR [ebx]
  40e97e:	cmp    dh,BYTE PTR ds:0x8600
	...
  40e9ac:	out    0xb1,al
  40e9ae:	idiv   BYTE PTR [esi+0x20]
  40e9b1:	mov    eax,ds:0xbc25e574
  40e9b6:	lea    ebp,[esi+0x10]
  40e9b9:	rol    DWORD PTR [ebp+edx*2+0x5efea110],cl
  40e9c0:	(bad)  
  40e9c1:	mov    ch,0xf6
  40e9c3:	push   esi
  40e9c4:	clc    
  40e9c5:	mov    ecx,0xa0f0748a
  40e9ca:	or     ch,BYTE PTR [ecx]
  40e9cc:	jno    0x40ea0c
  40e9ce:	push   eax
  40e9cf:	jo     0x40e987
  40e9d1:	mov    ecx,0xa0d836f6
  40e9d6:	mov    ah,0x41
  40e9d8:	enter  0xfea0,0x11
  40e9dc:	cmc    
  40e9dd:	sar    esi,1
  40e9df:	push   ds
  40e9e0:	xor    al,0x9b
  40e9e2:	jae    0x40e985
  40e9e4:	and    eax,0xf2fe005d
  40e9e9:	cmp    DWORD PTR [ebp+0x16e100],ebx
  40e9ef:	jmp    FWORD PTR [edx-0x4a]
  40e9f2:	cmc    
  40e9f3:	call   DWORD PTR [eax+0x3f08739f]
  40e9f9:	pop    ds
  40e9fa:	mov    ah,0xff
  40e9fc:	mov    al,ds:0x7000022e
  40ea01:	loopne 0x40ea69
  40ea03:	lods   eax,DWORD PTR ds:[esi]
  40ea04:	xor    DWORD PTR [esi],ebx
  40ea06:	add    bh,bh
  40ea08:	retf   0xf5ae
  40ea0b:	inc    DWORD PTR [eax+0x8739f]
	...
  40ea39:	add    BYTE PTR [edi-0x6f004bc3],cl
  40ea3f:	add    BYTE PTR cs:[eax],al
  40ea42:	nop
  40ea43:	loopne 0x40eaab
  40ea45:	icebp  
  40ea46:	add    bl,BYTE PTR [esi]
  40ea48:	add    bh,bh
  40ea4a:	jmp    0x739e:0xd0fff5ae
  40ea51:	or     BYTE PTR [edi-0x3f004bec],bh
  40ea57:	scas   eax,DWORD PTR es:[edi]
  40ea58:	push   eax
  40ea59:	mov    esp,DWORD PTR [eax-0x3c4a0262]
  40ea5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea60:	std    
  40ea61:	(bad)  
  40ea62:	mov    edi,0xa0ff8b16
  40ea67:	sahf   
  40ea68:	mov    bl,0xf0
  40ea6a:	push   0x1afffd9e
  40ea6f:	push   ecx
  40ea70:	push   DWORD PTR [ebp-0x21]
  40ea73:	mov    ah,0xdb
  40ea75:	inc    BYTE PTR [eax+0x27b5fd9e]
  40ea7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea7c:	std    
  40ea7d:	(bad)  
  40ea7e:	jg     0x40eaf2
  40ea80:	mov    edi,edi
  40ea82:	and    BYTE PTR [esi-0x53d107bd],bl
  40ea88:	cld    
  40ea89:	jmp    DWORD PTR [eax]
  40ea8b:	sahf   
  40ea8c:	jae    0x40ea8a
  40ea8e:	ds pop edx
  40ea90:	inc    ebp
  40ea91:	ja     0x40ead1
  40ea93:	mov    dl,0xc9
  40ea95:	sar    DWORD PTR [edx],0xb2
  40ea98:	push   ebp
  40ea99:	mov    edx,DWORD PTR [edx+0xfbc835]
	...
  40eac7:	add    BYTE PTR [edx+esi*4],ah
  40eaca:	push   0xb279122
  40eacf:	call   0xff3d151f
  40ead4:	mov    bh,0x77
  40ead6:	add    BYTE PTR [eax+0x3e],ch
  40ead9:	mov    dl,0xeb
  40eadb:	mov    ebp,0x415d82e6
  40eae0:	or     al,BYTE PTR ds:[ebx]
  40eae3:	pop    esi
  40eae4:	push   DWORD PTR [ecx-0x65b98b05]
  40eaea:	sub    dh,BYTE PTR [ecx+edx*2-0x17f6950f]
  40eaf1:	jb     0x40eaf7
  40eaf3:	dec    DWORD PTR [ebx]
  40eaf5:	test   DWORD PTR [edx+0x41],0x875c93e
  40eafc:	es and bh,dh
  40eaff:	(bad)  
  40eb00:	sub    DWORD PTR [edx+0xb],ecx
  40eb03:	pop    esi
  40eb04:	jg     0x40eab8
  40eb06:	push   0x2
  40eb08:	ds mov dl,0x82
  40eb0b:	dec    BYTE PTR [ebx+0xb7deaba]
  40eb11:	cmp    esp,edi
  40eb13:	addr16 and esp,eax
  40eb16:	inc    ecx
  40eb17:	add    BYTE PTR [esi-0x4c],ah
  40eb1a:	add    al,BYTE PTR [eax]
  40eb1c:	mov    esi,0xd6087610
  40eb21:	cld    
  40eb22:	cld    
  40eb23:	(bad)  
  40eb24:	loope  0x40eaaf
  40eb26:	pop    ebp
  40eb27:	pop    esi
  40eb28:	jg     0x40eadc
  40eb2a:	push   0x2
	...
  40eb54:	add    BYTE PTR [eax],al
  40eb56:	ds mov dl,0x82
  40eb59:	(bad)  
  40eb5a:	push   ebx
  40eb5b:	pop    ebx
  40eb5c:	icebp  
  40eb5d:	jmp    0x40ebd5
  40eb5f:	mov    eax,ds:0x25b8fc1d
  40eb64:	adc    eax,0x1532afc
  40eb69:	push   ss
  40eb6a:	mov    dh,0x9f
  40eb6c:	add    eax,0xe9567fca
  40eb71:	push   esi
  40eb72:	lds    ebp,FWORD PTR [esi-0x4cbd8a0b]
  40eb78:	or     BYTE PTR [ebp-0x3c0e6078],cl
  40eb7e:	or     eax,0x1bd25162
  40eb83:	sbb    ch,cl
  40eb85:	push   ebx
  40eb86:	cs pop di
  40eb89:	sti    
  40eb8a:	push   0x3e6c190a
  40eb8f:	pop    ebx
  40eb90:	into   
  40eb91:	mov    edx,0x4516e1e1
  40eb96:	or     ebp,DWORD PTR ds:[esi+0x3eb33671]
  40eb9d:	mov    bh,0x40
  40eb9f:	lahf   
  40eba0:	inc    eax
  40eba1:	ins    BYTE PTR es:[edi],dx
  40eba2:	aas    
  40eba3:	pop    ebx
  40eba4:	xchg   BYTE PTR [edx+0x452e9399],bh
  40ebaa:	or     eax,DWORD PTR ds:[esi+0x2ab33671]
  40ebb1:	mov    bh,0x18
  40ebb3:	lahf   
  40ebb4:	or     BYTE PTR [edi-0x3c],0x9e
  40ebb8:	ins    DWORD PTR es:[edi],dx
  40ebb9:	int    0x0
	...
  40ebe3:	add    bh,bh
  40ebe5:	push   ebx
  40ebe6:	jmp    0x69f0a13b
  40ebeb:	shl    ch,0x31
  40ebee:	jmp    0xd3df0960
  40ebf3:	or     edx,esi
  40ebf5:	xor    BYTE PTR [esi-0x5],ch
  40ebf8:	loopne 0x40ebce
  40ebfa:	mov    ds:0x4167f7,eax
  40ebff:	ss dec edi
  40ec01:	push   ebx
  40ec02:	call   0xfedeb15b
  40ec07:	xchg   ebx,eax
  40ec08:	sbb    BYTE PTR [esi-0x2e5a0e8c],bl
  40ec0e:	(bad)  
  40ec0f:	push   ss
  40ec10:	mov    ch,0x34
  40ec12:	sbb    al,0xe
  40ec14:	das    
  40ec15:	push   ebx
  40ec16:	call   0xfede9183
  40ec1b:	dec    BYTE PTR [esi]
  40ec1d:	lahf   
  40ec1e:	(bad)  
  40ec1f:	jl     0x40ec66
  40ec21:	mov    bl,0x86
  40ec23:	test   WORD PTR [ebp-0x617e5438],bx
  40ec2a:	push   ebx
  40ec2b:	jb     0x40ec8e
  40ec2d:	or     edi,eax
  40ec2f:	in     al,dx
  40ec30:	int    0xfe
  40ec32:	inc    eax
  40ec33:	jmp    0xe9414775
  40ec38:	adc    BYTE PTR [edx-0x4cb5cb02],al
  40ec3e:	ret    0x3a3d
  40ec41:	pop    ebx
  40ec42:	mov    edx,DWORD PTR [edx+edi*1]
  40ec45:	(bad)  
  40ec47:	jmp    0x40ec49
	...
  40ec71:	add    bh,cl
  40ec73:	dec    ebx
  40ec74:	add    edi,DWORD PTR [ecx+0xf01b3c0]
  40ec7a:	mov    ebx,0xaf2d5c63
  40ec7f:	pop    eax
  40ec80:	data16 scas al,BYTE PTR es:[edi]
  40ec82:	cmp    edi,edi
  40ec84:	(bad)  
  40ec85:	jge    0x40ec15
  40ec87:	dec    edi
  40ec88:	call   0x9c7b80
  40ec8d:	add    DWORD PTR [edi-0x6a16bf02],ecx
  40ec93:	mov    eax,0xb33da85d
  40ec98:	cmp    DWORD PTR [ebp-0xc],edi
  40ec9b:	pushf  
  40ec9c:	or     ch,BYTE PTR [ecx]
  40ec9e:	pop    ecx
  40ec9f:	cmp    bh,bh
  40eca1:	add    BYTE PTR [edx-0x6dea00af],ah
  40eca7:	add    BYTE PTR [ecx+0x0],al
  40ecaa:	fiadd  WORD PTR fs:[edx]
  40ecad:	or     edx,DWORD PTR [edi]
  40ecaf:	sub    edx,DWORD PTR [ebp-0x1]
  40ecb2:	ret    0x5dda
  40ecb5:	inc    ecx
  40ecb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecb7:	hlt    
  40ecb8:	mov    fs,WORD PTR [eax-0x1a]
  40ecbb:	pop    ecx
  40ecbc:	cmp    DWORD PTR ds:0x413a27,0xffffff97
  40ecc3:	sub    cl,BYTE PTR [eax]
  40ecc5:	push   DWORD PTR [edx+0x1e]
  40ecc8:	pop    edi
  40ecc9:	inc    ecx
  40ecca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eccb:	lods   al,BYTE PTR ds:[esi]
  40eccc:	aaa    
  40eccd:	push   0xffffff97
  40eccf:	das    
  40ecd0:	add    edi,edi
  40ecd2:	and    al,bh
  40ecd4:	pop    esi
  40ecd5:	inc    ecx
	...
  40ecfe:	add    BYTE PTR [eax],al
  40ed00:	addr16 mov ds:0x8913,al
  40ed04:	sub    BYTE PTR [edx],bl
  40ed06:	add    BYTE PTR [ebx-0x3ff4ad5d],al
  40ed0c:	and    edi,DWORD PTR [edx-0x1]
  40ed0f:	xor    eax,0x4136f7
  40ed14:	mov    BYTE PTR [ebp-0x6f],cl
  40ed17:	pop    edi
  40ed18:	push   ss
  40ed19:	push   edi
  40ed1a:	add    esp,0x53
  40ed1d:	mov    ds:0x18787913,al
  40ed22:	add    bh,al
  40ed24:	and    cl,cl
  40ed26:	pop    esi
  40ed27:	inc    ecx
  40ed28:	pop    ss
  40ed29:	pop    ecx
  40ed2a:	add    BYTE PTR [eax],al
  40ed2c:	pop    ss
  40ed2d:	mov    al,0xff
  40ed2f:	inc    edx
  40ed30:	mov    WORD PTR [esi+0x4fe5c959],ss
  40ed36:	add    BYTE PTR [ebx+0x415ec8da],al
  40ed3c:	pop    ss
  40ed3d:	pop    ecx
  40ed3e:	je     0x40ed5f
  40ed40:	cwde   
  40ed41:	ins    BYTE PTR es:[edi],dx
  40ed42:	nop
  40ed43:	pusha  
  40ed44:	ds repz add bh,bh
  40ed48:	push   ebx
  40ed49:	and    ebx,DWORD PTR [ecx+0x41]
  40ed4c:	ds xor eax,eax
  40ed4f:	add    ebx,ecx
  40ed51:	xchg   DWORD PTR [ecx+0x5f],edi
  40ed54:	jg     0x40ed08
  40ed56:	mov    edi,0x4192ae04
  40ed5b:	add    BYTE PTR [esi],bh
  40ed5d:	mov    dl,0x2
  40ed5f:	add    BYTE PTR [ebp-0x19],bh
  40ed62:	mov    ebp,ebx
	...
  40ed8c:	add    BYTE PTR [eax],al
  40ed8e:	mov    ebp,0xb552f46e
  40ed93:	test   DWORD PTR [edx],0xc1e7e0b
  40ed99:	sbb    DWORD PTR [ebx],0xffffffae
  40ed9c:	add    dh,BYTE PTR [ebx+edi*1+0x32]
  40eda0:	cmp    al,0x0
  40eda2:	adc    esi,DWORD PTR [ebp-0x151a3fd5]
  40eda8:	les    eax,FWORD PTR [edi]
  40edaa:	xor    bh,BYTE PTR ds:[ebx]
  40edad:	jle    0x40ed99
  40edaf:	mov    eax,ds:0x12ce3c83
  40edb4:	inc    ebx
  40edb5:	add    BYTE PTR [esi],bh
  40edb7:	pop    edi
  40edb8:	add    DWORD PTR [ebx],ebp
  40edba:	jle    0x40ee35
  40edbc:	retf   
  40edbd:	rol    DWORD PTR [esi-0x4e],0x82
  40edc1:	aaa    
  40edc2:	enter  0x3a66,0x8b
  40edc6:	jmp    0x40ed6d
  40edc8:	dec    esp
  40edc9:	sbb    DWORD PTR [ecx+esi*4],0xb
  40edcd:	shr    BYTE PTR [ebx+0x3a7c83ac],cl
  40edd3:	mov    bl,0x6d
  40edd5:	add    al,0x55
  40edd7:	bnd jmp 0x40edfd
  40edda:	sbb    DWORD PTR [edi+0x8],ebp
  40eddd:	mov    edi,DWORD PTR [ebx-0x4a]
  40ede0:	std    
  40ede1:	(bad)  
  40ede2:	cmp    eax,0x1ec102b2
  40ede7:	pop    ebx
  40ede8:	jmp    0x40ee3d
  40edea:	out    0x82,al
  40edec:	jo     0x40ede6
  40edee:	lock or ah,BYTE PTR [edx+0x4e]
	...
  40ee1a:	add    BYTE PTR [eax],al
  40ee1c:	sbb    DWORD PTR ss:[ecx-0x64b09508],edi
  40ee23:	jmp    0x40edf4
  40ee25:	(bad)  
  40ee26:	cmp    eax,0x200069f8
  40ee2b:	lds    eax,FWORD PTR [ecx+0x5b]
  40ee2e:	add    bl,ch
  40ee30:	shl    BYTE PTR ds:0x5332f8f5,0x93
  40ee37:	add    esp,DWORD PTR [ebx+ebx*2]
  40ee3a:	push   ss
  40ee3b:	push   cs
  40ee3c:	sub    edi,esp
  40ee3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee3f:	add    edi,DWORD PTR [ebp+0x7e0cd896]
  40ee45:	test   BYTE PTR es:[edx+0x7829efa],cl
  40ee4c:	mov    ebx,0x9652f915
  40ee51:	out    0x70,eax
  40ee53:	idiv   DWORD PTR [eax+0x30]
  40ee56:	jmp    0x38ebe8e3
  40ee5b:	div    edx
  40ee5d:	sahf   
  40ee5e:	int    0x11
  40ee60:	mov    bl,0xfb
  40ee62:	daa    
  40ee63:	add    al,0xbd
  40ee65:	xchg   esi,eax
  40ee66:	in     al,dx
  40ee67:	or     bh,BYTE PTR [esi+0x25]
  40ee6a:	cli    
  40ee6b:	mov    BYTE PTR [edx],al
  40ee6d:	stos   DWORD PTR es:[edi],eax
  40ee6e:	imul   edi,DWORD PTR [edx+edi*1+0x5b],0x1bc51b1d
  40ee76:	icebp  
  40ee77:	inc    ebx
  40ee78:	mov    es,WORD PTR [ebx-0x64d773e7]
  40ee7e:	popa   
  40ee7f:	fadd   QWORD PTR [eax]
	...
  40eea9:	add    BYTE PTR [edx-0x560886e0],dh
  40eeaf:	arpl   WORD PTR [edx],bx
  40eeb1:	mul    DWORD PTR [ecx-0x547effa1]
  40eeb7:	loop   0x40eeb7
  40eeb9:	outs   dx,BYTE PTR ds:[esi]
  40eeba:	xchg   esp,eax
  40eebb:	pop    ebx
  40eebc:	lea    ebp,[ebp+ebp*8-0x450b00d6]
  40eec3:	cmp    DWORD PTR [ecx-0x17],eax
  40eec6:	mov    esp,0x3ac3079e
  40eecb:	call   0x9e81:0x6fd14574
  40eed2:	jp     0x40ef2f
  40eed4:	sub    DWORD PTR ds:0x92c2e63a,0xfffffff2
  40eedb:	pushf  
  40eedc:	pop    es
  40eedd:	jmp    0x1f2cd4f0
  40eee2:	das    
  40eee3:	call   FWORD PTR [si-0x65cb]
  40eee8:	adc    al,0x61
  40eeea:	sbb    bl,BYTE PTR [eax+eax*1]
  40eeed:	push   0x7e
  40eeef:	bound  edx,QWORD PTR [eax-0x2]
  40eef2:	push   cs
  40eef3:	addr16 (bad) 
  40eef5:	jl     0x40ef2c
  40eef7:	call   0x6a00:0x1c1a6514
  40eefe:	mov    ecx,0x4a348b62
  40ef03:	in     al,0x1
  40ef05:	xor    DWORD PTR [ebx-0x64],edi
  40ef08:	or     ebp,ecx
  40ef0a:	push   cs
  40ef0b:	out    0xeb,al
  40ef0d:	push   0x0
	...
  40ef37:	add    BYTE PTR [ecx+0x4634fe82],bl
  40ef3d:	or     ecx,0x65
  40ef40:	push   eax
  40ef41:	cdq    
  40ef42:	or     ch,BYTE PTR [ecx-0x5436a132]
  40ef48:	dec    ebp
  40ef49:	pop    ebx
  40ef4a:	call   DWORD PTR [esi+eax*2]
  40ef4d:	cmp    DWORD PTR [edi+eax*2-0x56f566d0],0xffffff91
  40ef55:	pop    edi
  40ef56:	leave  
  40ef57:	add    ch,ah
  40ef59:	ins    DWORD PTR es:[edi],dx
  40ef5a:	add    bh,bh
  40ef5c:	or     ch,BYTE PTR [edx-0x1]
  40ef5f:	jne    0x40ef48
  40ef61:	test   ebx,eax
  40ef63:	std    
  40ef64:	nop
  40ef65:	xchg   ecx,eax
  40ef66:	or     eax,eax
  40ef68:	sbb    bl,BYTE PTR [edx+0x5df7c2c7]
  40ef6e:	push   0x1ef774
  40ef73:	push   0x40fdd4
  40ef78:	outs   dx,DWORD PTR ds:[esi]
  40ef79:	dec    esi
  40ef7a:	xchg   edx,eax
  40ef7b:	call   DWORD PTR [eax]
  40ef7d:	shl    BYTE PTR gs:[ebp-0x20],0x5
  40ef82:	je     0x40efe4
  40ef84:	xchg   esi,eax
  40ef85:	pop    ebp
  40ef86:	push   0x1e8095
  40ef8b:	call   0x3edb42
  40ef90:	pushf  
  40ef91:	popf   
  40ef92:	or     eax,0x5f5a84
  40ef97:	add    BYTE PTR [edx],dl
  40ef99:	sbb    edi,esp
  40ef9b:	push   eax
	...
  40efc4:	add    BYTE PTR [eax],al
  40efc6:	nop
  40efc7:	or     DWORD PTR [edi+edi*8],ecx
  40efca:	push   0x9
  40efcc:	pusha  
  40efcd:	inc    ecx
  40efce:	xchg   edi,eax
  40efcf:	fadd   st(2),st
  40efd1:	or     BYTE PTR [ebp+ebx*4+0xd],ch
  40efd5:	test   edx,eax
  40efd7:	pop    ebp
  40efd8:	add    BYTE PTR [eax],al
  40efda:	std    
  40efdb:	pop    esi
  40efdc:	lea    eax,[ebp-0x71]
  40efdf:	cs push 0xffffffff
  40efe2:	out    dx,eax
  40efe3:	popa   
  40efe4:	popa   
  40efe5:	inc    ecx
  40efe6:	mov    ?,WORD PTR [bp+di-0x4]
  40efea:	nop
  40efeb:	imul   edi,DWORD PTR [eax+eiz*2+0x16],0x3bc4835f
  40eff3:	ror    BYTE PTR fs:[edi],0x9a
  40eff7:	(bad)  
  40eff9:	(bad)  
  40effa:	ds xor bl,0x74
  40effe:	es jmp 0x8304:0x439e800e
  40f006:	cli    
  40f007:	jle    0x40f088
  40f009:	mul    DWORD PTR [edx-0x6b17026a]
  40f00f:	add    DWORD PTR [edx],0x0
  40f012:	retf   
  40f013:	(bad)  
  40f014:	out    dx,al
  40f015:	dec    edi
  40f016:	fs xor bl,0x74
  40f01a:	out    0x1a,al
  40f01c:	adc    bh,bh
  40f01e:	loope  0x40f049
  40f020:	or     eax,eax
  40f022:	dec    ecx
  40f023:	push   es
  40f024:	inc    ebp
  40f025:	add    DWORD PTR [esi],edi
  40f027:	cmp    BYTE PTR [edi+0x7c],0x0
	...
  40f053:	add    dl,dl
  40f055:	add    BYTE PTR [ebx],0x84
  40f058:	jnp    0x40efdd
  40f05a:	add    al,BYTE PTR [eax]
  40f05c:	mov    esi,0xba0f027a
  40f061:	mov    dh,0x1
  40f063:	add    BYTE PTR [esi],bh
  40f065:	rol    BYTE PTR [edi+0x50c4aa54],cl
  40f06b:	call   0xff35f9da
  40f070:	hlt    
  40f071:	or     bh,BYTE PTR [edi]
  40f073:	call   0xff300801
  40f078:	or     ebx,DWORD PTR [edx+0x52]
  40f07b:	call   0xff34f98d
  40f080:	jns    0x40f0c1
  40f082:	hlt    
  40f083:	jmp    FWORD PTR [ecx-0x7e]
  40f086:	add    al,bh
  40f088:	sti    
  40f089:	aad    0x2
  40f08b:	add    BYTE PTR [esi],bh
  40f08d:	cmp    BYTE PTR [edi+0x3c],0xc2
  40f091:	and    al,BYTE PTR [ebx+0x0]
  40f094:	ds push edi
  40f096:	push   edx
  40f097:	push   0x4323bc
  40f09c:	es pop ebx
  40f09e:	arpl   WORD PTR [edx+0x3e],si
  40f0a1:	pop    ebx
  40f0a2:	cmp    DWORD PTR [esp+edi*4-0x7],ebp
  40f0a6:	daa    
  40f0a7:	add    al,0x21
  40f0a9:	push   cs
  40f0aa:	sub    ebx,0x3e90c9f
  40f0b0:	inc    ebp
  40f0b1:	fwait
  40f0b2:	hlt    
  40f0b3:	sbb    edx,DWORD PTR [esi+0x4307e2]
	...
  40f0e1:	add    BYTE PTR [esi],bh
  40f0e3:	or     DWORD PTR [esi+0x72],0x3e
  40f0e7:	pop    ebx
  40f0e8:	mov    ecx,0xa7f9c76b
  40f0ed:	add    ebp,ecx
  40f0ef:	or     eax,0xc7beb41
  40f0f4:	jmp    0xbcdc35fc
  40f0f9:	dec    ebx
  40f0fa:	jmp    0x833e:0x42c7
  40f100:	push   0x72
  40f102:	ds pop ebx
  40f104:	cdq    
  40f105:	imul   ecx,edi,0xfffffff9
  40f108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f109:	add    esi,DWORD PTR [ecx+0x57eb110d]
  40f10f:	or     al,0xe9
  40f111:	add    edx,DWORD PTR [ebp-0x35c995b8]
  40f117:	cli    
  40f118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f119:	add    edi,DWORD PTR [edi]
  40f11b:	push   cs
  40f11c:	jecxz  0x40f189
  40f11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f11f:	stc    
  40f120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f121:	add    edx,DWORD PTR [esi+0x3e037837]
  40f127:	sub    edx,DWORD PTR [ecx-0x72]
  40f12a:	ficomp WORD PTR [ecx]
  40f12c:	jmp    0xc0c3e423
  40f131:	or     ebp,ebp
  40f133:	pop    edx
  40f134:	jmp    0x41d3617
  40f139:	xor    cl,0x19
  40f13c:	jmp    0x9dc446
  40f141:	add    bh,BYTE PTR [edx+0x64]
  40f144:	shl    BYTE PTR [eax+eax*1],0x0
	...
  40f170:	pushf  
  40f171:	call   0x1cb8eba
  40f176:	add    DWORD PTR [esi-0x23186c59],ebx
  40f17c:	das    
  40f17d:	xchg   esi,eax
  40f17e:	dec    BYTE PTR [esi-0x6eb07069]
  40f184:	pop    ebp
  40f185:	cwde   
  40f186:	(bad)  
  40f187:	jle    0x40f114
  40f189:	pop    ds
  40f18a:	lock fs ja 0x40f11d
  40f18e:	dec    edi
  40f18f:	add    eax,DWORD PTR [eax-0x6a]
  40f192:	je     0x40f1f5
  40f194:	adc    dh,BYTE PTR [edx-0x2]
  40f197:	pop    esi
  40f198:	in     eax,dx
  40f199:	xchg   ebp,eax
  40f19a:	je     0x40f1f9
  40f19c:	mov    al,BYTE PTR [ebx-0x6a32b3ec]
  40f1a2:	mov    BYTE PTR [ecx+esi*8+0x42517cd9],ch
  40f1a9:	sysenter 
  40f1ab:	push   0x4f
  40f1ad:	xchg   edi,edi
  40f1af:	mov    ah,0x5f
  40f1b1:	add    eax,DWORD PTR [eax]
  40f1b3:	jmp    0x953fca54
  40f1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1b9:	jle    0x40f188
  40f1bb:	imul   ebp,DWORD PTR [ebp+0x7594fe95],0xffffff95
  40f1c2:	je     0x40f1b5
  40f1c4:	jne    0x40f205
  40f1c6:	cmp    esi,0xffffff8c
  40f1c9:	xchg   ebp,eax
  40f1ca:	je     0x40f1c5
  40f1cc:	mov    WORD PTR [edi],cs
  40f1ce:	or     BYTE PTR [ecx],al
  40f1d0:	dec    eax
  40f1d1:	(bad)  
  40f1d3:	out    0x0,al
	...
  40f1fd:	add    BYTE PTR [edi+ecx*1-0x14],ch
  40f201:	fsubrp st(6),st
  40f203:	(bad)  
  40f204:	call   0xfed6aaef
  40f209:	into   
  40f20a:	(bad)  
  40f20b:	mov    ah,bh
  40f20d:	add    BYTE PTR [ebx-0x7700021d],dl
  40f213:	adc    ebp,esp
  40f215:	call   0x3ed595
  40f21a:	call   0xc429da31
  40f21f:	loop   0x40f21e
  40f221:	dec    esi
  40f223:	frndint 
  40f225:	dec    eax
  40f227:	mov    BYTE PTR [ebx-0x4],dh
  40f22a:	enter  0x7872,0x60
  40f22e:	pop    di
  40f230:	add    esp,0x23
  40f233:	mov    dl,0x7f
  40f235:	cld    
  40f236:	mov    BYTE PTR [ecx+0x5a17c2c7],cl
  40f23c:	push   ebp
  40f23d:	mov    ecx,DWORD PTR [ebx-0x77ff95d3]
  40f243:	adc    ecx,DWORD PTR [eax]
  40f245:	call   0x3f08f6
  40f24a:	pop    esp
  40f24b:	mov    ds:0xa4de851,al
  40f250:	add    BYTE PTR [eax],al
  40f252:	int3   
  40f253:	cdq    
  40f254:	jb     0x40f271
  40f256:	aam    0x9c
  40f258:	inc    esi
  40f259:	jmp    0x40f1f0
  40f25b:	fnstenv [esi]
  40f25d:	or     eax,0x388062d3
	...
  40f28a:	add    BYTE PTR [eax],al
  40f28c:	lods   eax,DWORD PTR ds:[esi]
  40f28d:	adc    al,BYTE PTR ds:0xeb5997c6
  40f293:	add    bh,BYTE PTR [ebx+eiz*2]
  40f296:	dec    eax
  40f297:	cmp    esp,DWORD PTR [ebp+ecx*1-0x16]
  40f29b:	mov    edx,DWORD PTR [ebp+eiz*1-0x37]
  40f29f:	ret    0x5993
  40f2a2:	push   ebp
  40f2a3:	mov    edi,DWORD PTR [ebx-0x21]
  40f2a6:	ret    0x30b4
  40f2a9:	mov    WORD PTR [ebx+0xc],?
  40f2ac:	(bad)
  40f2b0:	lods   eax,DWORD PTR ds:[esi]
  40f2b2:	cld    
  40f2b3:	mov    edi,0xc94f7ed3
  40f2b8:	jl     0x40f26d
  40f2ba:	add    bh,bh
  40f2bc:	rol    DWORD PTR [edi-0x336db226],cl
  40f2c2:	lock or bh,dh
  40f2c5:	dec    esi
  40f2c6:	pop    es
  40f2c7:	pop    edi
  40f2c8:	pop    es
  40f2c9:	rcl    DWORD PTR [ebx],0x0
  40f2cc:	sub    DWORD PTR [eax+0x18],esi
  40f2cf:	jmp    FWORD PTR [ebx+0x1554da92]
  40f2d5:	out    0xf0,al
  40f2d7:	mov    WORD PTR [ebx+0x12],?
  40f2da:	push   esp
  40f2db:	call   DWORD PTR [ebx-0x4b0e257a]
  40f2e1:	or     eax,0xb5fe0af1
  40f2e6:	xchg   BYTE PTR [edi],al
  40f2e8:	cmp    eax,0x73ff0282
  40f2ed:	ss icebp 
  40f2ef:	je     0x40f2f1
	...
  40f319:	add    dh,ah
  40f31b:	sbb    bh,BYTE PTR [ebx-0x2da2671]
  40f321:	mov    edi,0x1e00641
  40f326:	cmp    BYTE PTR ds:[ecx+0x44],0xd2
  40f32b:	stc    
  40f32c:	jmp    0x40f3ad
  40f32e:	jns    0x40f2b2
  40f330:	inc    DWORD PTR [ebx+0x28088]
  40f336:	adc    DWORD PTR [edx+0x57],ebp
  40f339:	jmp    DWORD PTR [ecx+0x6e447b6d]
  40f33f:	gs ja  0x40f312
  40f342:	and    DWORD PTR es:[ecx+0x41],0x3e
  40f347:	push   0x65
  40f349:	jo     0x40f389
  40f34b:	adc    BYTE PTR [edx-0x1],0xf3
  40f34f:	jno    0x40f3ad
  40f351:	add    eax,0x4285adf
  40f356:	push   esi
  40f357:	cs pop ecx
  40f359:	add    al,0x3e
  40f35b:	sub    edx,esi
  40f35d:	jbe    0x40f3cd
  40f35f:	add    esp,eax
  40f361:	(bad)  
  40f362:	call   FWORD PTR [edx-0x2f]
  40f365:	dec    eax
  40f366:	into   
  40f367:	pop    edx
  40f368:	jmp    0xa9a0daba
  40f36d:	ja     0x40f3b9
  40f36f:	pusha  
  40f370:	fwait
  40f371:	ja     0x40f3b9
  40f373:	pusha  
  40f374:	mov    al,0x0
  40f376:	ret    
  40f377:	loopne 0x40f363
  40f379:	add    edi,DWORD PTR [esi]
  40f37b:	pusha  
  40f37c:	mov    al,ds:0x76
	...
  40f3a5:	add    BYTE PTR [eax],al
  40f3a7:	add    BYTE PTR [edi-0x64],al
  40f3aa:	and    edi,DWORD PTR [eax+0x3e95b3e]
  40f3b0:	adc    eax,0xca46a65c
  40f3b5:	pop    edx
  40f3b6:	jmp    0xb9d831be
  40f3bb:	ret    
  40f3bc:	mov    dh,0x93
  40f3be:	gs lock call 0x396c824d
  40f3c5:	push   cs
  40f3c6:	jmp    0xe8c47693
  40f3cb:	add    edi,DWORD PTR [esi]
  40f3cd:	pop    ebx
  40f3ce:	imul   esi,DWORD PTR [eax],0x4b65643e
  40f3d4:	cmp    al,0x5b
  40f3d6:	jmp    0x2ef49a33
  40f3db:	lock mov al,0xe1
  40f3de:	stos   DWORD PTR es:[edi],eax
  40f3df:	mov    edi,0x31115bc
  40f3e4:	sub    edi,DWORD PTR [edx]
  40f3e6:	and    ebx,0xf0e91a08
  40f3ec:	or     ah,BYTE PTR [edi+0x5b18e810]
  40f3f2:	jmp    0xa4b5f3
  40f3f7:	ins    BYTE PTR es:[edi],dx
  40f3f8:	dec    ebx
  40f3f9:	pop    ecx
  40f3fa:	add    cl,ch
  40f3fc:	xchg   BYTE PTR [esi],bl
  40f3fe:	call   0x9c31eb
  40f403:	shl    BYTE PTR [eax+0x59],1
  40f406:	add    cl,ch
  40f408:	mov    esp,0xe8e816
	...
  40f435:	add    dh,dl
  40f437:	arpl   WORD PTR [ecx+0x449c5644],cx
  40f43d:	sar    DWORD PTR [ebx+ebx*2],1
  40f440:	add    cl,ch
  40f442:	sbb    bl,BYTE PTR [esi-0x21c21700]
  40f448:	jl     0x40f3db
  40f44a:	cmp    al,0x8
  40f44c:	pshufw mm5,QWORD PTR [edi-0x5d33985],0x5d
  40f454:	add    cl,ch
  40f456:	cmp    eax,0x3de8ad84
  40f45b:	pop    ebx
  40f45c:	cmp    esp,0xffffffe5
  40f45f:	pop    ebp
  40f460:	jne    0x40f448
  40f462:	jp     0x40f473
  40f464:	fsub   QWORD PTR [esi-0x16fc7c79]
  40f46a:	cmp    eax,0x3b80e95b
  40f46f:	pop    ebx
  40f470:	add    BYTE PTR [edx+0x4f],ch
  40f473:	add    DWORD PTR [ebx],0xffffffd4
  40f476:	shl    bl,1
  40f478:	jl     0x40f49b
  40f47a:	add    DWORD PTR [eax],ebx
  40f47c:	call   0x9c3265
  40f481:	inc    eax
  40f482:	(bad)  
  40f483:	pop    ebx
  40f484:	add    cl,ch
  40f486:	mov    esp,0xa8ece80f
  40f48b:	xlat   BYTE PTR ds:[ebx]
  40f48c:	ins    BYTE PTR es:[edi],dx
  40f48d:	call   0x94ca4fcf
  40f492:	jno    0x40f471
  40f494:	jl     0x40f4eb
  40f496:	cmp    al,BYTE PTR [edi]
  40f498:	or     DWORD PTR [eax],eax
	...
  40f4c2:	add    BYTE PTR [eax],al
  40f4c4:	pop    eax
  40f4c5:	and    al,0xe8
  40f4c7:	add    dl,BYTE PTR [edi+0x68eb005e]
  40f4cd:	cdq    
  40f4ce:	inc    ebx
  40f4cf:	call   0x41532d
  40f4d4:	cwde   
  40f4d5:	and    eax,eax
  40f4d7:	add    BYTE PTR [edi+0x5e],dl
  40f4da:	add    bh,al
  40f4dc:	sub    cl,bh
  40f4de:	(bad)  
  40f4df:	jmp    DWORD PTR [edi+0x5e]
  40f4e2:	mov    DWORD PTR [ebp-0x65],0x5700005e
  40f4e9:	cdq    
  40f4ea:	inc    ebx
  40f4eb:	mov    esp,0x5e27
  40f4f0:	fsub   DWORD PTR [edx]
  40f4f2:	mov    eax,0x5e1700
  40f4f7:	dec    DWORD PTR [edx-0x7d]
  40f4fa:	out    0x13,al
  40f4fc:	mov    cl,0x80
  40f4fe:	std    
  40f4ff:	mov    DWORD PTR [edx-0x69],ebx
  40f502:	std    
  40f503:	jne    0x40f4e8
  40f505:	mov    ch,0x6
  40f507:	inc    BYTE PTR [eax-0x60ba787f]
  40f50d:	xor    BYTE PTR [ebx-0x2c],0xbf
  40f511:	mov    bh,bl
  40f513:	jmp    DWORD PTR [eax+0xf]
  40f516:	inc    esp
  40f517:	les    edx,FWORD PTR [ebx+ecx*2-0x74]
  40f51b:	pusha  
  40f51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f51d:	pop    ebp
  40f51e:	add    BYTE PTR [ebp-0x6b],dh
  40f521:	xor    eax,0x5d966182
  40f526:	call   0x40f5b2
	...
  40f54f:	add    BYTE PTR [eax],al
  40f551:	add    cl,dh
  40f553:	pop    ebp
  40f554:	add    BYTE PTR [eax+0x7f],dl
  40f557:	fistp  DWORD PTR [edi+0x41]
  40f55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f55b:	xor    BYTE PTR [ebx-0x40],0x4f
  40f55f:	jno    0x40f5d1
  40f561:	add    BYTE PTR [edi+0x3e74be94],dl
  40f567:	mov    WORD PTR [edx-0x77],ds
  40f56a:	pop    ds
  40f56b:	ret    
  40f56c:	add    ch,al
  40f56e:	adc    eax,0xee0002ea
  40f573:	jmp    0x40f5f0
  40f575:	pusha  
  40f576:	inc    DWORD PTR [ebx+0x5b7e74ed]
  40f57c:	adc    dh,BYTE PTR [eax+0x3e]
  40f57f:	test   bh,dh
  40f581:	mov    edi,0x915c70ea
  40f586:	fild   WORD PTR [edx+0x4]
  40f589:	call   0x45478f
  40f58e:	out    dx,al
  40f58f:	sub    edx,DWORD PTR [ebx-0x147c00a0]
  40f595:	je     0x40f595
  40f597:	call   0x24d7:0x823e6ef4
  40f59e:	mov    ebp,0x7f5f7e77
  40f5a3:	add    BYTE PTR [ecx],0x75
  40f5a6:	xor    al,0x5a
  40f5a8:	mov    ah,BYTE PTR [eax+0x7f]
  40f5ab:	sbb    dl,0x2b
  40f5ae:	cwde   
  40f5af:	add    BYTE PTR [edx],0x50
  40f5b2:	xchg   esi,eax
  40f5b3:	cld    
  40f5b4:	bound  eax,QWORD PTR [ecx+0x0]
	...
  40f5df:	add    BYTE PTR [esi],bh
  40f5e1:	or     DWORD PTR [edi-0x40],esi
  40f5e4:	out    0xe6,al
  40f5e6:	pop    esp
  40f5e7:	add    BYTE PTR [esi],bh
  40f5e9:	sub    eax,0x8dfe2b02
  40f5ee:	ret    0x5c74
  40f5f1:	sub    DWORD PTR [edi-0x38],esi
  40f5f4:	out    0xb0,al
  40f5f6:	pop    esp
  40f5f7:	add    BYTE PTR [esi],bh
  40f5f9:	bnd jmp 0x40f670
  40f5fc:	imul   BYTE PTR [edx]
  40f5fe:	stc    
  40f5ff:	stc    
  40f600:	mov    ecx,0xf2447b49
  40f605:	inc    ecx
  40f606:	ja     0x40f5cc
  40f608:	xchg   esi,eax
  40f609:	pop    ebx
  40f60a:	and    ebx,DWORD PTR [edi+0x3e]
  40f60d:	pop    ebx
  40f60e:	mov    ecx,0x9712ec
  40f613:	cmc    
  40f614:	xchg   esi,eax
  40f615:	nop
  40f616:	or     eax,0x69d3027b
  40f61b:	outs   dx,DWORD PTR ds:[esi]
  40f61c:	jle    0x40f679
  40f61e:	jne    0x40f657
  40f620:	mov    ebp,0xea04310e
  40f625:	inc    eax
  40f626:	add    DWORD PTR [ebx],0xeca6803e
  40f62c:	jmp    0xd58f:0xd8b3d162
  40f633:	in     al,dx
  40f634:	retf   0xcd9a
  40f637:	jbe    0x40f66f
  40f639:	sub    ebp,0xffffff83
  40f63c:	inc    eax
  40f63d:	nop
  40f63e:	mov    ebp,0x3b8ffa76
  40f643:	cld    
	...
  40f66c:	add    BYTE PTR [eax],al
  40f66e:	sbb    DWORD PTR [edi-0x6fd712d3],ecx
  40f674:	sbb    ebp,DWORD PTR [eax+eiz*1+0xedbf106]
  40f67b:	adc    BYTE PTR [esi-0x56f9ef14],dl
  40f681:	fcomi  st,st(3)
  40f683:	fadd   QWORD PTR [ebp-0x4ef9ff14]
  40f689:	fisttp DWORD PTR [ebx]
  40f68b:	fnsave [ebp-0x14]
  40f68e:	lock add eax,0xdd03dba5
  40f694:	gs in  al,dx
  40f696:	loopne 0x40f69d
  40f698:	popf   
  40f699:	fistp  DWORD PTR [ebx-0x2f13aa24]
  40f69f:	add    eax,0xdc93db91
  40f6a4:	inc    ebp
  40f6a5:	in     al,dx
  40f6a6:	aam    0x5d
  40f6a8:	push   0x6e
  40f6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ab:	pop    eax
  40f6ac:	add    BYTE PTR [edx+edi*1+0x3f414498],bh
  40f6b3:	pop    ebx
  40f6b4:	add    cl,ch
  40f6b6:	mov    esi,0x11e9e80e
  40f6bb:	dec    ebx
  40f6bc:	push   0x1a5209
  40f6c1:	push   cs
  40f6c2:	adc    BYTE PTR [edi+0x5ae011e7],bl
  40f6c8:	add    dl,dh
  40f6ca:	jge    0x40f6d2
  40f6cc:	pop    es
  40f6cd:	cs clc 
  40f6cf:	add    BYTE PTR [eax],0xe9
	...
  40f6fa:	add    BYTE PTR [eax],al
  40f6fc:	cmp    eax,0xdb67685b
  40f701:	sbb    DWORD PTR [eax],eax
  40f703:	fmulp  st(7),st
  40f705:	sahf   
  40f706:	out    0xb9,eax
  40f708:	neg    DWORD PTR [edx+0x0]
  40f70b:	loop   0x40f78a
  40f70d:	push   es
  40f70e:	pop    es
  40f70f:	scas   al,BYTE PTR es:[edi]
  40f710:	inc    DWORD PTR [edx+0x5b3de901]
  40f716:	(bad)  
  40f717:	cmp    al,0xf6
  40f719:	jbe    0x40f783
  40f71b:	imul   edx,DWORD PTR ds:0xfddafb8e,0xffffffd3
  40f722:	(bad)  
  40f723:	sahf   
  40f724:	and    eax,0x6247f18e
  40f729:	push   esi
  40f72a:	pcmpgtb mm6,QWORD PTR [ebp+0x1586fe8f]
  40f731:	or     al,dl
  40f733:	xchg   ecx,eax
  40f734:	xor    eax,0xe576fed9
  40f739:	pop    es
  40f73a:	in     al,dx
  40f73b:	cmp    DWORD PTR [ebp-0x27],0x176766fe
  40f742:	lock mov ecx,0x568808f5
  40f748:	in     eax,0x76
  40f74a:	jmp    0x40f79d
  40f74c:	aad    0x8d
  40f74e:	pop    esi
  40f74f:	add    BYTE PTR [esi],cl
  40f751:	xchg   ebp,eax
  40f752:	push   cs
  40f753:	add    dl,dl
  40f755:	or     eax,0xcb6381eb
  40f75a:	cld    
  40f75b:	call   FWORD PTR [eax-0x66]
  40f75e:	cmp    DWORD PTR [eax+0x0],0x0
	...
  40f789:	add    BYTE PTR [ecx-0x7e],bl
  40f78c:	std    
  40f78d:	add    BYTE PTR [edi-0x1d74ffa6],ah
  40f793:	pop    esi
  40f794:	or     eax,eax
  40f796:	mov    bl,0x5b
  40f798:	cmp    BYTE PTR [eax],0x97
  40f79b:	or     eax,DWORD PTR ds:0x58a3e9
  40f7a1:	add    BYTE PTR [eax+0xb],ch
  40f7a4:	adc    al,0xe8
  40f7a6:	iret   
  40f7a7:	adc    edi,esi
  40f7a9:	jmp    FWORD PTR [edx+ebx*4+0x73]
  40f7ad:	pxor   mm7,QWORD PTR [ebx+0x4d]
  40f7b1:	inc    ecx
  40f7b2:	xor    DWORD PTR [bp+di+0x14],0xff83ec7f
  40f7ba:	js     0x40f769
  40f7bc:	or     ebp,DWORD PTR [eax+0xd]
  40f7bf:	push   ecx
  40f7c0:	inc    ecx
  40f7c1:	add    al,ch
  40f7c3:	or     dl,BYTE PTR [eax+ebp*8]
  40f7c6:	mov    al,ds:0xaefffddb
  40f7cb:	(bad)  [esi+0x6680b8fe]
  40f7d1:	ds es pop edx
  40f7d4:	add    BYTE PTR [ebp-0x3675e],cl
  40f7da:	mov    eax,0x66ffe829
  40f7df:	cmp    ebp,0xfc98628d
  40f7e5:	call   FWORD PTR [eax+0x2a]
  40f7e8:	push   DWORD PTR [ebp-0x27c61]
	...
  40f816:	add    BYTE PTR [eax],al
  40f818:	outs   dx,DWORD PTR ds:[esi]
  40f819:	inc    edi
  40f81a:	ins    DWORD PTR es:[edi],dx
  40f81b:	add    BYTE PTR [esi],bh
  40f81d:	test   BYTE PTR [ebx-0x7c],bh
  40f820:	mov    bl,BYTE PTR ds:0x857efeea
  40f826:	jle    0x40f80d
  40f828:	aas    
  40f829:	test   BYTE PTR [edx],al
  40f82b:	(bad)  
  40f82c:	retf   
  40f82d:	inc    ecx
  40f82e:	jmp    0x585a231
  40f833:	adc    BYTE PTR [esi],bh
  40f835:	test   BYTE PTR [edx],al
  40f837:	cmpunordps xmm0,XMMWORD PTR [eax]
  40f83b:	add    BYTE PTR [esi],bh
  40f83d:	test   DWORD PTR [esp+ebp*1-0x12],0xff4ee2db
  40f845:	sbb    edx,0x9
  40f848:	jmp    0x40f7cd
  40f84a:	add    cl,BYTE PTR [ebx]
  40f84c:	jle    0x40f85c
  40f84e:	add    cl,ch
  40f850:	mov    BYTE PTR [edx+0xeb30002],0xc6
  40f857:	std    
  40f858:	pop    ecx
  40f859:	lods   al,BYTE PTR ds:[esi]
  40f85a:	jbe    0x40f89d
  40f85c:	and    dl,BYTE PTR [esp+ebx*2-0x1e]
  40f860:	stc    
  40f861:	inc    edx
  40f862:	add    al,0xe8
  40f864:	push   ebx
  40f865:	daa    
  40f866:	add    al,0x0
  40f868:	inc    ebp
  40f869:	ret    0x56e
  40f86c:	daa    
  40f86d:	dec    edx
  40f86e:	add    eax,DWORD PTR [eax]
  40f870:	ds mov ebp,0x2f16146e
  40f876:	js     0x40f876
  40f878:	sbb    DWORD PTR [edx+0x74c2],ecx
	...
  40f8a6:	inc    ecx
  40f8a7:	pop    edx
  40f8a8:	mov    ds:0xe7827f47,eax
  40f8ad:	je     0x40f8d9
  40f8af:	jmp    0x9dd:0xdf983f5
  40f8b6:	fs and bh,0x74
  40f8ba:	push   edx
  40f8bb:	(bad)  
  40f8bd:	and    ecx,0x5b
  40f8c0:	data16 ja 0x40f875
  40f8c3:	cdq    
  40f8c4:	pop    esi
  40f8c5:	jmp    0x17fbd79a
  40f8ca:	ins    BYTE PTR es:[edi],dx
  40f8cb:	sub    eax,DWORD PTR [ecx+0x1e]
  40f8ce:	mov    ebx,0xe54458c
  40f8d3:	mov    WORD PTR [ebx-0x1af94eed],?
  40f8d9:	call   0xf5825c10
  40f8de:	mov    ds:0x5fdc258c,eax
  40f8e3:	ficomp DWORD PTR ds:0xe83fa6e9
  40f8e9:	add    edi,DWORD PTR [esi]
  40f8eb:	fisubr WORD PTR [edx+0x3cd6b717]
  40f8f1:	jmp    0xfbc2:0x27698c78
  40f8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f9:	add    edi,DWORD PTR ds:0x7d5ba706
  40f8ff:	sti    
  40f900:	daa    
  40f901:	add    al,0x59
  40f903:	(bad)  
  40f904:	xchg   esp,eax
  40f905:	jmp    0x5901855a
	...
  40f932:	add    BYTE PTR [eax],al
  40f934:	fistp  DWORD PTR [edx-0x17]
  40f937:	cld    
  40f938:	add    DWORD PTR [edi],0x22df5c14
  40f93e:	sub    BYTE PTR [ecx+esi*1],al
  40f941:	push   es
  40f942:	fstp   st(3)
  40f944:	mov    dh,0xd6
  40f946:	lods   eax,DWORD PTR ds:[esi]
  40f947:	call   0xe99dbf6c
  40f94c:	sbb    BYTE PTR [eax+edi*1-0x6a291124],cl
  40f953:	call   0x428fcd1
  40f958:	adc    ebp,ecx
  40f95a:	sbb    cl,ch
  40f95c:	jb     0x40f9c1
  40f95e:	xchg   ecx,eax
  40f95f:	(bad)  
  40f960:	fwait
  40f961:	mov    edi,edi
  40f963:	jne    0x40f96a
  40f965:	mov    ds:0x82d66e7f,al
  40f96a:	shr    ecx,cl
  40f96c:	cmp    eax,0x5d2d685b
  40f971:	sbb    al,BYTE PTR [eax]
  40f973:	push   esi
  40f974:	cwde   
  40f975:	(bad)  
  40f976:	std    
  40f977:	dec    esi
  40f978:	(bad)  
  40f979:	jae    0x40f9a3
  40f97b:	aam    0x3d
  40f97d:	pop    ebx
  40f97e:	or     ebp,DWORD PTR [ecx]
  40f980:	and    DWORD PTR ds:0x1a658868,edi
  40f986:	add    BYTE PTR [esi],ch
  40f988:	adc    BYTE PTR [edi-0x18],ah
  40f98b:	stos   BYTE PTR es:[edi],al
  40f98c:	sbb    DWORD PTR [ebp-0x381fe102],ecx
  40f992:	std    
  40f993:	push   ss
  40f994:	xchg   esi,eax
  40f995:	sbb    ebp,eax
  40f997:	bound  eax,QWORD PTR [eax]
	...
  40f9c1:	add    BYTE PTR [ecx],al
  40f9c3:	(bad)  
  40f9c4:	(bad)  
  40f9c5:	cdq    
  40f9c6:	pushw  es
  40f9c8:	adc    dh,bh
  40f9ca:	jecxz  0x40fa2a
  40f9cc:	push   eax
  40f9cd:	neg    bl
  40f9cf:	(bad)  
  40f9d0:	call   0xfecd4f31
  40f9d5:	sar    DWORD PTR [ebp+0x59deff0b],1
  40f9db:	(bad)  
  40f9dc:	mov    bl,0xd7
  40f9de:	popa   
  40f9df:	mov    edi,fs
  40f9e1:	pop    ds
  40f9e2:	in     eax,0x5a
  40f9e4:	add    BYTE PTR [edx+0x2a],ch
  40f9e7:	pop    ebp
  40f9e8:	jb     0x40f9bf
  40f9ea:	mov    ah,0xef
  40f9ec:	mov    bl,0xb7
  40f9ee:	and    DWORD PTR [edx+0x74bd9902],ecx
  40f9f4:	add    DWORD PTR [edi],ecx
  40f9f6:	ret    
  40f9f7:	inc    esp
  40f9f8:	sbb    cl,BYTE PTR cs:[edi+0x6a29eb5d]
  40f9ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa00:	pop    edi
  40fa01:	sub    BYTE PTR [edx],bh
  40fa03:	mov    dh,BYTE PTR [eax+eax*1-0x27ec5]
  40fa0a:	iret   
  40fa0b:	sahf   
  40fa0c:	push   0x0
  40fa0e:	xlat   BYTE PTR ds:[ebx]
  40fa0f:	cs push 0x2037e7
  40fa15:	(bad)  
  40fa16:	mov    edx,0x70fffccb
  40fa1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1c:	mov    al,0x6c
  40fa1e:	xlat   BYTE PTR ds:[ebx]
  40fa1f:	pop    esi
  40fa20:	push   eax
  40fa21:	push   0x40ff6b
	...
  40fa4e:	add    BYTE PTR [eax],al
  40fa50:	add    ah,cl
  40fa52:	mov    dl,0xfe
  40fa54:	jo     0x40f9d8
  40fa56:	out    0xa1,al
  40fa58:	sbb    DWORD PTR [esi+0x0],0x5a
  40fa5c:	into   
  40fa5d:	test   DWORD PTR [esi-0x2f7a708b],edi
  40fa63:	jne    0x40fa00
  40fa65:	test   edi,eax
  40fa67:	je     0x40f9ea
  40fa69:	mov    eax,es:0xff5ed648
  40fa6f:	jne    0x40fa0c
  40fa71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa72:	scas   eax,DWORD PTR es:[edi]
  40fa73:	xor    DWORD PTR [eax-0x7f],0xfffffffd
  40fa77:	mov    ch,0x2b
  40fa79:	cmp    ebp,0xf7a6c7ff
  40fa7f:	and    DWORD PTR [eax-0x7f],0x4e
  40fa83:	(bad)  
  40fa84:	jmp    0xff2e:0x6375ff6e
  40fa8b:	jne    0x40faec
  40fa8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa8e:	data16 cli 
  40fa90:	add    BYTE PTR [ecx-0x7d8f0e1a],al
  40fa96:	std    
  40fa97:	lea    ebx,[edx-0x2f000364]
  40fa9d:	sub    eax,0x80a3b5ff
  40faa2:	std    
  40faa3:	jmp    FWORD PTR [edi+0x3e006b12]
  40faa9:	je     0x40fb2a
  40faab:	mov    edi,0xfe1fff31
  40fab0:	stc    
  40fab1:	loopne 0x40fa98
  40fab3:	mov    ah,0x0
	...
  40fadd:	add    BYTE PTR [edx-0x290119f7],dh
  40fae3:	arpl   WORD PTR [ebx+0x0],bx
  40fae6:	ds stc 
  40fae8:	scas   eax,DWORD PTR es:[edi]
  40fae9:	mov    bh,0xd8
  40faeb:	add    dh,ah
  40faed:	out    0xff,eax
  40faef:	test   al,0xe5
  40faf1:	(bad)  
  40faf2:	div    DWORD PTR ds:0xfd6b0013
  40faf8:	(bad)  
  40faf9:	(bad)  
  40fafa:	xor    edx,DWORD PTR [eax+0x494e74e5]
  40fb00:	jo     0x40fb0e
  40fb02:	test   eax,0x2be7fac6
  40fb07:	aaa    
  40fb08:	out    0xfe,al
  40fb0a:	xchg   DWORD PTR ds:0xceafff7,esi
  40fb10:	xlat   BYTE PTR ds:[ebx]
  40fb11:	add    BYTE PTR [edx+0xbff4e63],0xa8
  40fb18:	fidivr DWORD PTR [edx+0xae660c2]
  40fb1e:	jle    0x40fb2e
  40fb20:	add    BYTE PTR [edi+0x77],bl
  40fb23:	xor    eax,0xe60fff7
  40fb28:	adc    ebp,eax
  40fb2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2b:	mul    esp
  40fb2d:	inc    BYTE PTR [ebp-0x4c]
  40fb30:	outs   dx,BYTE PTR ds:[esi]
  40fb31:	add    eax,0xbc1bae9
  40fb36:	ds cdq 
  40fb38:	outs   dx,BYTE PTR ds:[esi]
  40fb39:	or     al,0x26
  40fb3b:	mov    bh,0x79
  40fb3d:	(bad)  
  40fb3e:	xor    DWORD PTR [esi+0x74c2],ecx
	...
  40fb6c:	cmp    DWORD PTR [edx],ebx
  40fb6e:	mov    ds:0xe3727f47,eax
  40fb73:	je     0x40fbbf
  40fb75:	pop    ebx
  40fb76:	xchg   ecx,eax
  40fb77:	add    bh,BYTE PTR [ebp+0x37d99d88]
  40fb7d:	cmc    
  40fb7e:	call   0x81988667
  40fb83:	out    dx,al
  40fb84:	mov    edi,0x7a7b8588
  40fb89:	(bad)  
  40fb8a:	adc    BYTE PTR [eax-0x1b16e577],dl
  40fb90:	push   0xffffff8f
  40fb92:	sbb    dh,0xbf
  40fb95:	mov    BYTE PTR [ebp+0x7b],ah
  40fb98:	jp     0x40fb1d
  40fb9a:	rcr    cl,1
  40fb9c:	retf   0xe95b
  40fb9f:	fld    TBYTE PTR [esi+0x8]
  40fba2:	dec    esi
  40fba3:	in     eax,0xc6
  40fba5:	push   ds
  40fba6:	inc    ebp
  40fba7:	pop    esp
  40fba8:	ds imul ebp,ecx,0x3
  40fbac:	xchg   esi,eax
  40fbad:	pop    ds
  40fbae:	mov    dh,0xe4
  40fbb0:	mov    al,ds:0x98f3a3d2
  40fbb5:	push   cs
  40fbb6:	and    esp,ebx
  40fbb8:	nop
  40fbb9:	fcomp  QWORD PTR ds:0xe59b34e5
  40fbbf:	jg     0x40fb83
  40fbc1:	pop    ebx
  40fbc2:	jmp    0x14f74ca
  40fbc7:	pop    esp
  40fbc8:	data16 xchg al,ch
  40fbcb:	add    ebp,DWORD PTR [ecx+0xe]
  40fbce:	cmc    
  40fbcf:	fild   DWORD PTR [eax]
	...
  40fbf9:	add    BYTE PTR [ebx-0x42fc170b],ah
  40fbff:	sub    edx,0xfffffff4
  40fc02:	mov    ebx,0x3e03e8bf
  40fc07:	aam    0x53
  40fc09:	call   0xf52a43cf
  40fc0e:	mov    ebp,0x3e03e8e2
  40fc13:	xrelease xchg DWORD PTR [ebx+0x7f],esp
  40fc17:	pop    ebx
  40fc18:	add    BYTE PTR [esi],bl
  40fc1a:	add    ah,BYTE PTR [esi]
  40fc1c:	imul   ebp,ecx,0x3d
  40fc1f:	push   esp
  40fc20:	rcr    BYTE PTR ds:0xa17488a3,0x65
  40fc27:	mov    BYTE PTR [esi],cl
  40fc29:	jmp    0x99b5846b
  40fc2e:	xchg   ebp,eax
  40fc2f:	mov    esp,0xf33a2847
  40fc34:	mov    bl,0x9
  40fc36:	jge    0x40fc93
  40fc38:	push   edi
  40fc39:	sub    DWORD PTR [esi-0xb],0xc7d6e8ff
  40fc40:	jae    0x40fc03
  40fc42:	fimul  DWORD PTR [esi]
  40fc44:	clc    
  40fc45:	sar    DWORD PTR [ebx+esi*8],cl
  40fc48:	test   al,0xc9
  40fc4a:	jl     0x40fca7
  40fc4c:	push   edi
  40fc4d:	inc    ecx
  40fc4e:	sub    al,0xf5
  40fc50:	(bad)  
  40fc51:	call   0xb4418c14
  40fc56:	pop    eax
  40fc57:	mov    BYTE PTR [ecx+edi*1-0x66],dh
  40fc5b:	push   cs
  40fc5c:	hlt    
  40fc5d:	inc    ecx
	...
  40fc86:	add    BYTE PTR [eax],al
  40fc88:	pop    ebx
  40fc89:	(bad)  
  40fc8b:	es in  eax,dx
  40fc8d:	ror    edi,cl
  40fc8f:	adc    al,BYTE PTR [edi+eax*1+0x5c10c63a]
  40fc96:	(bad)  
  40fc97:	jmp    0x40fc9a
  40fc99:	sbb    eax,0x5de11b0b
  40fc9e:	add    bl,0x3d
  40fca1:	push   cs
  40fca2:	out    dx,al
  40fca3:	not    bl
  40fca5:	push   0x50
  40fca7:	out    dx,al
  40fca8:	jmp    0x40fcfc
  40fcaa:	call   0xfec9595d
  40fcaf:	rcr    ebp,1
  40fcb1:	or     bh,bh
  40fcb3:	(bad)  
  40fcb4:	push   ecx
  40fcb5:	push   ebp
  40fcb6:	call   DWORD PTR [edx+esi*1-0x7a]
  40fcba:	je     0x40fcbc
  40fcbc:	idiv   DWORD PTR [edx+0x73]
  40fcbf:	or     BYTE PTR [edi],cl
  40fcc1:	out    dx,al
  40fcc2:	cld    
  40fcc3:	(bad)  
  40fcc4:	call   0x8f012e44
  40fcc9:	jp     0x40fcc8
  40fccb:	(bad)  
  40fccc:	fsubr  DWORD PTR [ebp+0x6a2038ac]
  40fcd2:	test   DWORD PTR [eax-0x58],ebp
  40fcd5:	jp     0x40fcd4
  40fcd7:	call   DWORD PTR [edx-0x5d]
  40fcda:	out    0x55,al
  40fcdc:	cmp    DWORD PTR [edx-0x3],edi
  40fcdf:	push   edx
  40fce1:	stos   BYTE PTR es:[edi],al
  40fce2:	out    0x4d,al
  40fce4:	jmp    0xd340fa62
  40fce9:	mov    ds:0x45e6,al
	...
  40fd16:	fnstcw WORD PTR [ecx-0x3]
  40fd19:	push   edx
  40fd1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1c:	out    0x3d,al
  40fd1e:	jmp    0x9340fa9c
  40fd23:	mov    bh,ch
  40fd25:	jne    0x40fcd2
  40fd27:	jns    0x40fd9c
  40fd29:	or     BYTE PTR [edi],cl
  40fd2b:	sub    eax,0x1a68fffe
  40fd30:	leave  
  40fd31:	ret    0x5a7b
  40fd34:	push   ebp
  40fd35:	mov    ebp,DWORD PTR [ebx]
  40fd37:	faddp  st(2),st
  40fd39:	call   0xff552166
  40fd3e:	mov    ds:0xbd8de68a,al
  40fd43:	pop    edx
  40fd44:	add    BYTE PTR [ebx],cl
  40fd46:	daa    
  40fd47:	and    edx,DWORD PTR [edi+0x6a]
  40fd4a:	push   edi
  40fd4b:	repnz mov eax,0xff5a9660
  40fd51:	jne    0x40fdca
  40fd53:	jns    0x40fdc8
  40fd55:	or     al,0x6f
  40fd57:	test   DWORD PTR [edi-0x1],edi
  40fd5a:	push   0x3e74c055
  40fd5f:	xor    esi,DWORD PTR [eax+edx*2]
  40fd62:	es mov edx,0x8931fe89
  40fd68:	ret    0x6f73
  40fd6b:	or     ecx,DWORD PTR [eax-0x18]
  40fd6e:	xchg   esp,eax
  40fd6f:	stos   BYTE PTR es:[edi],al
  40fd70:	jmp    0xfe0a:0xe1b4bc41
  40fd77:	addr16 (bad) 
  40fd79:	inc    BYTE PTR [eax]
	...
  40fda3:	add    BYTE PTR [ebx-0x1117cba4],dl
  40fda9:	repnz loope 0x40fdaa
  40fdac:	mov    ss,ebp
  40fdae:	push   edi
  40fdaf:	call   0x898db42
  40fdb4:	(bad)  
  40fdb5:	test   al,0xe0
  40fdb7:	(bad)  
  40fdb8:	loope  0x40fd95
  40fdba:	int    0x7c
  40fdbc:	fxtract 
  40fdbe:	loope  0x40fe34
  40fdc0:	out    0x2b,al
  40fdc2:	(bad)  
  40fdc3:	jl     0x40fd8e
  40fdc5:	and    al,0xeb
  40fdc7:	mov    ebp,0x67e22d43
  40fdcc:	ds jl  0x40fdd1
  40fdcf:	add    BYTE PTR [esi-0x56009fb8],ah
  40fdd5:	or     cl,BYTE PTR [eax-0x8]
  40fdd8:	mov    bl,0xb6
  40fdda:	fimul  WORD PTR [edi-0x67]
  40fddd:	into   
  40fdde:	repnz dec BYTE PTR [ebx]
  40fde1:	nop
  40fde2:	jmp    0x7e0b:0x27417d3
  40fde9:	out    0x52,al
  40fdeb:	mov    DWORD PTR [ebx],0x3e000364
  40fdf1:	je     0x40fdbc
  40fdf3:	inc    esp
  40fdf4:	jb     0x40fd7a
  40fdf6:	or     BYTE PTR [eax],al
  40fdf8:	fiadd  DWORD PTR ds:[edx]
  40fdfb:	push   0x3e
  40fdfd:	fiadd  DWORD PTR [edx]
  40fdff:	push   0x3e
  40fe01:	pop    ebx
  40fe02:	je     0x40fe4b
  40fe04:	push   edx
  40fe05:	sub    bl,dh
  40fe07:	push   edi
	...
  40fe30:	add    BYTE PTR [eax],al
  40fe32:	inc    esi
  40fe33:	test   DWORD PTR [ebx-0x2c],ebx
  40fe36:	cmp    BYTE PTR [edi],cl
  40fe38:	int    0xec
  40fe3a:	jecxz  0x40fe2e
  40fe3c:	call   0x34dc3344
  40fe41:	push   es
  40fe42:	adc    eax,0x81a34142
  40fe47:	sbb    ch,cl
  40fe49:	loopne 0x40fdd5
  40fe4b:	imul   edx,DWORD PTR [ecx-0x627b40fa],0xffffffe1
  40fe52:	mov    al,BYTE PTR [ebx-0x257513c8]
  40fe58:	(bad)  
  40fe59:	loope  0x40fe21
  40fe5b:	push   ds
  40fe5c:	xchg   ebp,eax
  40fe5d:	loope  0x40fed1
  40fe5f:	arpl   WORD PTR [esi+0x57],di
  40fe62:	dec    edx
  40fe63:	test   bl,bh
  40fe65:	out    dx,eax
  40fe66:	fmul   DWORD PTR [esi]
  40fe68:	fucom  st(0)
  40fe6a:	dec    edx
  40fe6b:	push   ebx
  40fe6c:	push   ecx
  40fe6d:	sti    
  40fe6e:	enter  0x5d84,0xe1
  40fe72:	dec    edx
  40fe73:	ja     0x40feb5
  40fe75:	sbb    eax,0xe14d843b
  40fe7a:	cli    
  40fe7b:	mov    dl,BYTE PTR [ecx-0x7f]
  40fe7e:	test   al,0xe
  40fe80:	cmp    eax,0xe8f207ec
  40fe85:	add    ebx,DWORD PTR [ecx+0x5bec310e]
  40fe8b:	push   es
  40fe8c:	es loope 0x40ff05
  40fe8f:	cdq    
  40fe90:	hlt    
  40fe91:	add    ebp,ebx
  40fe93:	iret   
  40fe94:	add    al,0x83
	...
  40febe:	add    BYTE PTR [eax],al
  40fec0:	jge    0x40fe51
  40fec2:	push   cs
  40fec3:	loope  0x40ff35
  40fec5:	icebp  
  40fec6:	call   0x73c52138
  40fecb:	or     edx,DWORD PTR [esi+0x1e]
  40fece:	add    BYTE PTR [ebx+0x5e],dh
  40fed1:	test   DWORD PTR [eax+0x49d71a4],ecx
  40fed7:	jne    0x40feb6
  40fed9:	sbb    DWORD PTR [eax],eax
  40fedb:	jmp    0x64415a1d
  40fee0:	ror    BYTE PTR [ebp+edi*8+0x68141ece],0xed
  40fee8:	cmp    al,0x5b
  40feea:	add    cl,dl
  40feec:	out    dx,al
  40feed:	sti    
  40feee:	(bad)  
  40feef:	call   0x28a21f99
  40fef4:	cmp    dh,bl
  40fef6:	push   edx
  40fef7:	or     BYTE PTR [ebp+0x5b],bh
  40fefa:	push   0x1a9d0c
  40feff:	xchg   esi,eax
  40ff00:	push   eax
  40ff01:	sahf   
  40ff02:	inc    edi
  40ff03:	sub    BYTE PTR [edx],bh
  40ff05:	test   BYTE PTR [ecx+esi*8-0x2b],dh
  40ff09:	mov    ebx,0xfbde7efd
  40ff0e:	pop    edx
  40ff0f:	or     BYTE PTR [ebp+0x5b],bh
  40ff12:	push   0x1a5d1a
  40ff17:	rcr    DWORD PTR [eax-0x6],1
  40ff1a:	inc    eax
  40ff1b:	jmp    0xe9415875
  40ff20:	mov    ebp,0xe17484
	...
  40ff4d:	add    BYTE PTR [ebp-0x61b90231],ah
  40ff53:	(bad)  
  40ff54:	test   BYTE PTR [esi],dh
  40ff56:	lahf   
  40ff57:	test   dh,bh
  40ff59:	cdq    
  40ff5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff5b:	sub    ebp,DWORD PTR [eax-0x17]
  40ff5e:	cmp    eax,0x9e257484
  40ff63:	push   cs
  40ff64:	or     BYTE PTR [ecx],dl
  40ff66:	add    BYTE PTR [ecx],0xff
  40ff69:	push   ss
  40ff6a:	test   BYTE PTR [ecx-0x2fd716fd],bl
  40ff70:	jmp    0x40ff72
  40ff72:	(bad)  
  40ff73:	fwait
  40ff74:	repnz (bad) 
  40ff76:	pusha  
  40ff77:	mov    ds:0x3cbd0068,eax
  40ff7c:	push   DWORD PTR [ebp+0x5f]
  40ff7f:	outs   dx,DWORD PTR ds:[esi]
  40ff80:	mov    esp,0x87a36079
  40ff85:	inc    ebp
  40ff86:	arpl   ax,si
  40ff88:	sbb    eax,ebp
  40ff8a:	sti    
  40ff8b:	xlat   BYTE PTR ds:[ebx]
  40ff8c:	std    
  40ff8d:	call   FWORD PTR [edi+ebx*4]
  40ff90:	jb     0x40ffb6
  40ff92:	pop    DWORD PTR [esi+0x61]
  40ff95:	inc    ecx
  40ff96:	pop    ss
  40ff97:	dec    edi
  40ff98:	call   0xfde3a6fd
  40ff9d:	push   eax
  40ff9e:	jg     0x40fff7
  40ffa0:	adc    bh,ch
  40ffa2:	mov    eax,ds:0x56619eef
  40ffa7:	push   edi
  40ffa8:	push   eax
  40ffa9:	call   FWORD PTR [edx+0x4f]
  40ffac:	call   0xfde379fc
  40ffb1:	call   0x40ffb6
	...
  40ffda:	add    BYTE PTR [eax],al
  40ffdc:	dec    ebx
  40ffdd:	sti    
  40ffde:	(bad)  
  40ffdf:	call   FWORD PTR [eax+0x26608c54]
  40ffe5:	push   edi
  40ffe6:	add    DWORD PTR [eax],eax
  40ffe8:	out    0x5e,eax
  40ffea:	lea    eax,[ebp-0x25e98]
  40fff0:	xchg   esi,esi
  40fff2:	add    eax,DWORD PTR [ecx]
  40fff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff5:	pop    esi
  40fff6:	call   0x9f78f4
  40fffb:	push   0x40f7dc
  410000:	(bad)  
  410001:	dec    ebp
  410002:	popa   
  410003:	inc    ecx
  410004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410005:	imul   BYTE PTR [ecx+eiz*2-0x1a]
  410009:	pop    esi
  41000a:	push   DWORD PTR ds:0x410f5a
  410010:	and    BYTE PTR [eax+ecx*1],ah
  410013:	call   0xff226656
  410018:	jno    0x40fff6
  41001a:	cmp    DWORD PTR [ecx-0x1],esp
  41001d:	jae    0x410089
  41001f:	push   ebx
  410020:	fbstp  TBYTE PTR [edx-0x2d1497fe]
  410026:	inc    ebx
  410027:	add    dh,ah
  410029:	jne    0x41002d
  41002b:	add    BYTE PTR [esi+0x56085779],bh
  410031:	retf   0xfedf
  410034:	cmp    edi,esi
  410036:	xchg   esi,esi
  410038:	xor    BYTE PTR [ecx-0x29e9b023],dl
  41003e:	add    BYTE PTR gs:[eax],al
	...
  410069:	add    BYTE PTR [esi],bh
  41006b:	rcl    DWORD PTR [edi-0x4],0x19
  41006f:	aas    
  410070:	or     al,0xe8
  410072:	cdq    
  410073:	dec    ebx
  410074:	(bad)  
  410076:	div    DWORD PTR [ebp+0xd6b0006]
  41007c:	out    dx,eax
  41007d:	add    BYTE PTR [edx],0xe0
  410080:	fdiv   st(6),st
  410082:	icebp  
  410083:	pop    ebp
  410084:	add    al,0x6a
  410086:	and    cl,bl
  410088:	push   edi
  410089:	or     dh,dl
  41008b:	mov    ebx,DWORD PTR [ebx-0x1]
  41008e:	fsqrt  
  410090:	inc    edi
  410091:	cld    
  410092:	stc    
  410093:	jbe    0x410023
  410095:	pop    edi
  410096:	jg     0x41010c
  410098:	add    al,BYTE PTR [eax]
  41009a:	ds je  0x41002c
  41009d:	test   BYTE PTR [ecx+0xefede29],dh
  4100a3:	pushf  
  4100a4:	push   es
  4100a5:	add    DWORD PTR [esi],edi
  4100a7:	je     0x410093
  4100a9:	jno    0x4100c4
  4100ab:	je     0x4100af
  4100ad:	push   0x4392d4
  4100b2:	es add al,0x64
  4100b5:	inc    ecx
  4100b6:	ds pop ebx
  4100b8:	xchg   ecx,eax
  4100b9:	jo     0x4100da
  4100bb:	sbb    al,0xe9
  4100bd:	fidiv  WORD PTR [edx]
  4100bf:	cwde   
  4100c0:	mov    al,ds:0x93823e44
  4100c5:	or     edx,DWORD PTR [esi-0xb]
  4100c8:	add    ebx,esi
  4100ca:	pusha  
  4100cb:	repnz inc edx
  4100cd:	add    BYTE PTR fs:[eax],al
	...
  4100f8:	call   FWORD PTR [edx-0x7f]
  4100fb:	xchg   ebx,eax
  4100fc:	ficomp WORD PTR [ebx]
  4100fe:	jmp    0x283cdc6e
  410103:	add    al,0xd6
  410105:	pop    esp
  410106:	jmp    0x5bc1bf0e
  41010b:	or     al,0x26
  41010d:	adc    esp,ecx
  41010f:	(bad)  [eax]
  410111:	iret   
  410112:	imul   edx,ebp,0x23
  410115:	cmp    DWORD PTR [ebp+0x4e652634],0x33803e04
  41011f:	loopne 0x410129
  410121:	pop    es
  410122:	icebp  
  410123:	jmp    0x410106
  410125:	add    ebx,DWORD PTR [esi-0x1361f923]
  41012b:	add    ecx,DWORD PTR [ebx-0x27c832c]
  410131:	xchg   DWORD PTR [esi-0x170a1f23],eax
  410137:	imul   esp,DWORD PTR [ecx],0xe60bfb80
  41013d:	(bad)  
  41013f:	fmul   st(0),st
  410141:	shr    BYTE PTR [ebx+0x6d56f8df],cl
  410147:	call   FWORD PTR fs:[edx-0x17]
  41014b:	add    edi,DWORD PTR [esi]
  41014d:	pop    ebx
  41014e:	pop    esp
  41014f:	xchg   DWORD PTR [eax-0xe22ba7f],esi
  410155:	repnz in al,0x2
  410158:	ds pop ebx
  41015a:	add    BYTE PTR [ecx+0x0],al
	...
  410185:	add    BYTE PTR [edi+0x15e8fff6],ah
  41018b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018c:	pusha  
  41018d:	test   al,0x3d
  41018f:	repz int 0x88
  410192:	cld    
  410193:	pop    edx
  410194:	push   0x19dc84
  410199:	push   cs
  41019a:	push   ecx
  41019b:	xchg   esi,eax
  41019c:	inc    edi
  41019d:	test   al,0x3d
  41019f:	xor    BYTE PTR [ecx+esi*8+0x65],0x7c
  4101a4:	sti    
  4101a5:	div    BYTE PTR [edx-0x8]
  4101a8:	ror    DWORD PTR [eax-0x4897a504],cl
  4101ae:	fcomp  QWORD PTR [ecx]
  4101b0:	add    BYTE PTR [ecx-0x57],dl
  4101b3:	cli    
  4101b4:	inc    eax
  4101b5:	jmp    0xe9415f5f
  4101ba:	mov    ebp,0x15f17480
  4101bf:	cwde   
  4101c0:	sti    
  4101c1:	mov    esi,0xbe84cefa
  4101c6:	repz cmp dh,0x19
  4101ca:	sbb    ch,ah
  4101cc:	gs jmp 0x9db5820f
  4101d2:	sbb    al,BYTE PTR [edi]
  4101d4:	or     BYTE PTR [ecx-0x7100fccc],al
  4101da:	hlt    
  4101db:	cdq    
  4101dc:	add    ebp,ecx
  4101de:	sub    ah,dl
  4101e0:	jmp    0x41024a
  4101e2:	add    DWORD PTR [ebp+edi*8-0xe0d8a],ecx
  4101e9:	add    al,BYTE PTR [eax]
	...
  410213:	add    BYTE PTR [edx],bl
  410215:	xor    BYTE PTR [ecx+esi*8-0x2b],0x81
  41021a:	jbe    0x41027a
  41021c:	call   0x8c56:0x7a5544d2
  410223:	leave  
  410224:	cld    
  410225:	pop    edx
  410226:	add    BYTE PTR [eax],al
  410228:	xchg   edi,eax
  410229:	pop    ebx
  41022a:	add    BYTE PTR [ebp-0x358de],cl
  410230:	dec    eax
  410231:	dec    esp
  410232:	push   0x5b9604
  410237:	call   0x40f7ef
  41023c:	iret   
  41023d:	outs   dx,DWORD PTR ds:[esi]
  41023e:	pop    edi
  41023f:	inc    ecx
  410240:	repz jcxz 0x4102a5
  410244:	xchg   esi,eax
  410245:	pop    ebx
  410246:	push   0x1cb66d
  41024b:	call   DWORD PTR [edx+0x67414698]
  410251:	sahf   
  410252:	jae    0x41025c
  410254:	aas    
  410255:	inc    ecx
  410256:	cld    
  410257:	call   FWORD PTR [eax-0x12]
  41025a:	jmp    0x4102bd
  41025c:	push   di
  41025e:	push   0x1886e4
  410263:	push   0x40f86a
  410268:	(bad)  
  410269:	push   ebp
  41026a:	add    BYTE PTR [eax],al
  41026c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41026d:	mov    ds:0x18ff0873,al
  410272:	cld    
  410273:	(bad)  
  410274:	fcom   st(4)
  410276:	xor    edi,0x0
	...
  4102a1:	add    cl,bl
  4102a3:	mov    ds:0x54cf50fd,al
  4102a8:	data16 add bh,ah
  4102ab:	mov    eax,ds:0x2cb8fc73
  4102b0:	or     al,ch
  4102b2:	lds    ebp,FWORD PTR [edx]
  4102b4:	(bad)  
  4102b5:	dec    DWORD PTR [esi+0x32000295]
  4102bb:	into   
  4102bc:	jmp    0xed00:0x68a3a383
  4102c3:	das    
  4102c4:	push   DWORD PTR [ebp-0x51]
  4102c7:	jb     0x41033d
  4102c9:	ja     0x410309
  4102cb:	and    eax,0x100388db
  4102d0:	outs   dx,BYTE PTR ds:[esi]
  4102d1:	add    BYTE PTR [esi],dl
  4102d3:	mov    ds:0xac3e4164,eax
  4102d8:	fldenv [eax-0x1]
  4102db:	jae    0x4102b6
  4102dd:	xor    al,0x83
  4102df:	mov    esp,0x78960043
  4102e4:	push   edi
  4102e5:	(bad)  
  4102e6:	jns    0x410271
  4102e8:	ret    0x5773
  4102eb:	les    ebp,FWORD PTR [edx+0x0]
  4102ee:	ds jge 0x410289
  4102f1:	addr16 pop ds
  4102f3:	rol    BYTE PTR [ebx+0x0],cl
  4102f6:	out    dx,al
  4102f7:	jl     0x410348
  4102f9:	or     BYTE PTR [esi-0x7a],ah
  4102fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fd:	dec    BYTE PTR [ecx+0x5c]
  410300:	add    edi,DWORD PTR [edx+0x41]
  410303:	jne    0x410371
	...
  41032d:	add    BYTE PTR [eax],al
  41032f:	add    BYTE PTR [esi+0x3e41665c],ah
  410335:	sbb    al,0xdb
  410337:	pusha  
  410338:	jg     0x4103ae
  41033a:	fnstenv [ebx+edi*8]
  41033d:	dec    ebx
  41033e:	inc    ebp
  41033f:	add    BYTE PTR [esi],ah
  410341:	mov    WORD PTR [edi-0x1],ss
  410344:	adc    DWORD PTR [ecx-0x3e],edi
  410347:	jae    0x410370
  410349:	fs ins BYTE PTR es:[edi],dx
  41034b:	add    BYTE PTR [esi],bh
  41034d:	in     eax,0x98
  41034f:	addr16 pop ds
  410351:	push   edx
  410352:	inc    ebp
  410353:	add    BYTE PTR [esi-0x29f7b01b],cl
  410359:	mov    ecx,0xebe1fea4
  41035e:	mov    ch,0x78
  410360:	frndint 
  410362:	fnstenv [edx+edx*8+0x4]
  410366:	push   eax
  410367:	or     dh,dl
  410369:	xor    eax,0x5ac1ff53
  41036e:	xor    ch,al
  410370:	cmp    eax,0xa58eb45b
  410375:	fldcw  WORD PTR [edi+edx*8]
  410378:	adc    esp,DWORD PTR [esi]
  41037a:	ret    
  41037b:	add    edx,DWORD PTR [ecx+esi*1]
  41037e:	inc    esi
  41037f:	push   eax
  410380:	inc    esi
  410381:	jae    0x4103d3
  410383:	push   ecx
  410384:	xchg   ecx,eax
  410385:	jge    0x4103e6
  410387:	inc    eax
  410388:	mov    dh,al
  41038a:	call   0x2640877a
  41038f:	fiadd  DWORD PTR [ebx+ebx*4-0x6c]
  410393:	cld    
	...
  4103bc:	add    BYTE PTR [eax],al
  4103be:	add    ebx,esi
  4103c0:	call   0x80fd5cc8
  4103c5:	sub    esp,ebx
  4103c7:	sbb    ebp,ecx
  4103c9:	xor    ebx,DWORD PTR [ecx+0x7]
  4103cc:	icebp  
  4103cd:	jmp    0x4103a0
  4103cf:	mov    eax,0xd361d9f5
  4103d4:	outs   dx,DWORD PTR ds:[esi]
  4103d5:	fiadd  DWORD PTR [eax-0x2f]
  4103d8:	sbb    ecx,DWORD PTR [ebx-0x7a]
  4103db:	sbb    ch,cl
  4103dd:	mov    WORD PTR [edx+0xe],?
  4103e0:	and    DWORD PTR [ebx+0x3e],eax
  4103e3:	fisttp DWORD PTR ds:0x5116aa04
  4103e9:	sbb    eax,0x30e91a9c
  4103ee:	es jnp 0x41043c
  4103f1:	add    al,0x3e
  4103f3:	push   eax
  4103f4:	test   eax,0x91252150
  4103f9:	bsr    edi,DWORD PTR [ebp+ebx*4+0x34]
  4103fe:	pop    bx
  410400:	jmp    0xbf34afed
  410405:	gs jg  0x410463
  410408:	sbb    ecx,ebx
  41040a:	push   edx
  41040b:	push   ebx
  41040c:	xchg   ecx,eax
  41040d:	inc    ebx
  41040e:	pushf  
  41040f:	jl     0x410410
  410411:	jne    0x4103ed
  410413:	adc    bh,BYTE PTR [ecx+0x6e]
  410416:	out    0x71,eax
  410418:	add    BYTE PTR [edi-0x2bffc143],ch
  41041e:	xchg   ebx,eax
  41041f:	push   ss
  410420:	cld    
  410421:	sbb    al,BYTE PTR [eax]
	...
  41044b:	add    BYTE PTR [edx-0x78b1013d],al
  410451:	jge    0x410444
  410453:	xchg   edi,eax
  410454:	cmp    dl,BYTE PTR [ebp+esi*2-0x7e]
  410458:	ja     0x410461
  41045a:	cld    
  41045b:	ss stc 
  41045d:	push   edx
  41045e:	call   0xfebcf0ea
  410463:	(bad)  
  410464:	aaa    
  410465:	xchg   edx,eax
  410466:	shl    ebp,0x3d
  410469:	mov    eax,DWORD PTR es:0xb7fb98c3
  410470:	cs icebp 
  410472:	call   DWORD PTR [edx-0xe8b83d6]
  410478:	gs push ss
  41047a:	jbe    0x410472
  41047c:	rol    WORD PTR [ebp+ebp*8-0x4e],cl
  410481:	inc    edi
  410482:	dec    ecx
  410483:	xor    DWORD PTR [ebp+0x5b],edi
  410486:	mov    ebx,DWORD PTR [ecx+edi*2]
  410489:	adc    eax,DWORD PTR [ecx-0x17]
  41048c:	mov    ebp,0x6155003c
  410491:	repz dec ebp
  410493:	dec    ebx
  410494:	jge    0x4104f1
  410496:	push   edi
  410497:	rcr    DWORD PTR [edx+0x3ae8fff6],1
  41049d:	fwait
  41049e:	jae    0x41046e
  4104a0:	dec    edi
  4104a1:	jae    0x410459
  4104a3:	imul   edx,DWORD PTR [esi],0x7d
  4104a6:	dec    edi
  4104a7:	adc    DWORD PTR [edx],edi
  4104a9:	pop    ebx
  4104aa:	out    dx,eax
  4104ab:	push   edi
  4104ac:	push   ebp
  4104ad:	sbb    esp,DWORD PTR [edx+0x28]
	...
  4104d8:	add    BYTE PTR [eax],al
  4104da:	cmp    ch,BYTE PTR [ebx]
  4104dc:	inc    DWORD PTR [eax]
  4104de:	fimul  DWORD PTR [edi-0x18]
  4104e1:	ret    
  4104e2:	xchg   BYTE PTR [ebx+0x1fa3e8fd],ah
  4104e8:	(bad)  
  4104e9:	(bad)  
  4104ea:	mov    esp,0x61804658
  4104ef:	push   edi
  4104f0:	jne    0x4104ec
  4104f2:	fldenv [ebx-0x5d313fcf]
  4104f8:	std    
  4104f9:	push   eax
  4104fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104fc:	lods   al,BYTE PTR ds:[esi]
  4104fd:	cmp    BYTE PTR [eax-0x350044f4],ch
  410503:	mov    ds:0x6f9f75fd,eax
  410508:	es jbe 0x41055b
  41050b:	mov    ds:0x962e5e5d,eax
  410510:	add    al,BYTE PTR [eax]
  410512:	stos   BYTE PTR es:[edi],al
  410513:	into   
  410514:	jmp    0xbd00:0x68a41b83
  41051b:	xor    edi,edi
  41051d:	jne    0x41056e
  41051f:	outs   dx,DWORD PTR ds:[esi]
  410520:	enter  0x5075,0xa3
  410524:	xchg   DWORD PTR [ebp+0x53],eax
  410527:	out    dx,al
  410528:	jmp    FWORD PTR [ecx+0x57]
  41052b:	out    dx,eax
  41052c:	pop    ebp
  41052d:	bound  esp,QWORD PTR [esi+0x5f]
  410530:	push   0x805f2700
  410535:	call   0x401be5
  41053a:	sbb    al,0x9f
  41053c:	jb     0x41055d
	...
  410566:	add    BYTE PTR [eax],al
  410568:	aaa    
  410569:	xchg   DWORD PTR [edx-0x7e],eax
  41056c:	rcl    BYTE PTR [edx+0x5f17684e],1
  410572:	out    dx,eax
  410573:	mov    esi,0x41622c7f
  410578:	out    0x2e,eax
  41057a:	push   DWORD PTR [ebp-0x11]
  41057d:	xchg   BYTE PTR [esi-0x5f],cl
  410580:	ds rcl esi,1
  410583:	out    0x87,eax
  410585:	dec    esp
  410586:	xlat   BYTE PTR ds:[ebx]
  410587:	(bad)  
  410588:	fnstenv [edi-0x2a]
  41058b:	dec    BYTE PTR [ebx+0x6c]
  41058e:	jmp    0xfcc8:0xd6f153cb
  410595:	add    BYTE PTR [edx],0x55
  410598:	lds    edx,FWORD PTR [eax]
  41059a:	add    ebx,0xffffffb2
  41059d:	mov    es,WORD PTR [edx]
  41059f:	push   0x5b
  4105a1:	adc    DWORD PTR [ecx+0x8],edx
  4105a4:	xchg   esi,eax
  4105a5:	xchg   esp,eax
  4105a6:	dec    edi
  4105a7:	call   FWORD PTR [ecx+0x26fc40eb]
  4105ad:	test   BYTE PTR [edx],al
  4105af:	out    dx,eax
  4105b0:	enter  0x789c,0x61
  4105b4:	inc    DWORD PTR [ebx-0x3d235996]
  4105ba:	add    bh,bh
  4105bc:	jmp    0x410629
  4105be:	jmp    0xebfe:0xd7519f5a
  4105c5:	xlat   BYTE PTR ds:[bx]
  4105c7:	je     0x41060f
  4105c9:	dec    esp
  4105ca:	jne    0x410640
	...
  4105f4:	add    BYTE PTR [eax],al
  4105f6:	push   ecx
  4105f7:	jns    0x4105c4
  4105f9:	rol    DWORD PTR [edx-0x7c],0x2f
  4105fd:	mov    edx,DWORD PTR [edx+0x5]
  410600:	sar    bl,0xa4
  410603:	test   BYTE PTR [eax+0x2e],ch
  410606:	xor    DWORD PTR [edi],ecx
  410608:	or     al,0xe8
  41060a:	jae    0x410623
  41060c:	xlat   BYTE PTR ds:[ebx]
  41060d:	(bad)  
  41060e:	mov    bh,0x3e
  410610:	fsub   DWORD PTR [edi+0x3e]
  410613:	test   ch,ah
  410615:	mov    ebp,0x4160f3a6
  41061a:	ds sbb al,0xbe
  41061d:	popa   
  41061e:	jg     0x4105a4
  410620:	aad    0x74
  410622:	inc    esi
  410623:	pop    ebx
  410624:	xchg   ecx,eax
  410625:	and    ebx,DWORD PTR [edi+0x3e6b9d79]
  41062b:	pop    ebx
  41062c:	xchg   BYTE PTR [ebp+0x450ab759],dl
  410632:	add    ebp,DWORD PTR ds:[edi+0x7e5b7f61]
  410639:	push   eax
  41063a:	ss sbb edi,0xffffffa4
  41063e:	sar    BYTE PTR [ecx+0x6d],0x50
  410642:	mov    edx,0xa60bdb79
  410647:	cmp    esp,edx
  410649:	(bad)  
  41064a:	test   al,0xa3
  41064c:	sub    bh,bh
  41064e:	mov    eax,ds:0xbce7620e
  410653:	sahf   
  410654:	inc    esp
  410655:	mov    ch,dl
  410657:	dec    edx
  410658:	jb     0x41064b
	...
  410682:	add    BYTE PTR [eax],al
  410684:	pop    ss
  410685:	pop    ebx
  410686:	fs inc eax
  410688:	or     BYTE PTR [edx],0x2e
  41068b:	push   eax
  41068c:	inc    esi
  41068d:	add    eax,0x4aead6e9
  410692:	push   ds
  410693:	xor    DWORD PTR [edx-0x20],ecx
  410696:	sub    BYTE PTR [eax+0x19],dl
  410699:	out    0xb3,al
  41069b:	xlat   BYTE PTR ds:[ebx]
  41069c:	leave  
  41069d:	add    al,0xe9
  41069f:	imul   edi,DWORD PTR [esi],0x3e01fe03
  4106a5:	pop    ebx
  4106a6:	test   BYTE PTR [edi+0x32],0x5
  4106aa:	out    dx,al
  4106ab:	aad    0xaf
  4106ad:	pop    edi
  4106ae:	push   ebx
  4106af:	add    al,0xa4
  4106b1:	pop    ebx
  4106b2:	sar    DWORD PTR [ebp+0x73e95b9f],1
  4106b8:	and    bh,ch
  4106ba:	int3   
  4106bb:	in     al,dx
  4106bc:	fwait
  4106bd:	cld    
  4106be:	call   0xecdf0dc6
  4106c3:	add    esi,DWORD PTR [ebx-0x1c]
  4106c6:	inc    esp
  4106c8:	mov    edi,0x2962fb9c
  4106cd:	dec    edi
  4106ce:	mov    edi,ebx
  4106d0:	addr16 pop ebx
  4106d2:	lea    esp,[esi+eax*1]
  4106d5:	sub    edi,edi
  4106d7:	sbb    al,0x36
  4106d9:	js     0x41074f
  4106db:	loope  0x410744
  4106dd:	pop    ebx
  4106de:	(bad)  
  4106df:	cld    
  4106e0:	loope  0x41075b
  4106e2:	push   ecx
  4106e3:	ror    DWORD PTR [eax-0x48],1
  4106e6:	je     0x4106b6
	...
  410710:	add    BYTE PTR [eax],al
  410712:	mov    dh,0xf
  410714:	cld    
  410715:	pop    ecx
  410716:	and    al,0x5b
  410718:	push   0xffffffe9
  41071a:	and    eax,0x3de90278
  41071f:	js     0x410795
  410721:	stc    
  410722:	pop    ss
  410723:	js     0x410723
  410725:	fistp  DWORD PTR [ecx+0x3dd30002]
  41072b:	cmp    DWORD PTR [eax-0x35],0x3d
  41072f:	pop    ebx
  410730:	nop
  410731:	ss icebp 
  410733:	jbe    0x41071c
  410735:	stc    
  410736:	ficomp WORD PTR [edx+0x0]
  410739:	xor    BYTE PTR [eax+ebp*2+0x0],bh
  41073d:	mov    ah,0xb6
  41073f:	test   BYTE PTR [edx-0x7cee3dd3],al
  410745:	mov    WORD PTR [ebp+0x78],ss
  410748:	jae    0x410736
  41074a:	or     ah,BYTE PTR [edx-0x1bc22a3f]
  410750:	push   esp
  410751:	fnsave [esi-0x2a5b72b6]
  410757:	daa    
  410758:	push   0xffffffe9
  41075a:	or     ch,bh
  41075c:	or     ebx,esi
  41075e:	js     0x4107c3
  410760:	push   0xffffffe9
  410762:	or     ch,bh
  410764:	adc    ecx,esi
  410766:	dec    edi
  410767:	jne    0x5269ee6d
  41076d:	(bad)  
  41076e:	(bad)  {k7}{z}
  410773:	pop    esp
  410774:	mov    edx,DWORD PTR [ebp+0x0]
	...
  41079f:	add    BYTE PTR [edi-0x1d],ch
  4107a2:	adc    BYTE PTR [ebp-0x72b12cde],cl
  4107a8:	and    bl,BYTE PTR [edi-0x711895b2]
  4107ae:	jae    0x410768
  4107b0:	enter  0xc29,0x83
  4107b4:	cmp    dl,bl
  4107b6:	(bad)  
  4107b7:	jae    0x4107bb
  4107b9:	loope  0x410836
  4107bb:	ror    BYTE PTR [eax+0x29],0x14
  4107bf:	push   DWORD PTR [edx+0x1837fd6b]
  4107c5:	sub    DWORD PTR [edi+edi*8],ecx
  4107c8:	xchg   edx,eax
  4107c9:	arpl   di,di
  4107cb:	push   ebp
  4107cc:	scas   eax,DWORD PTR es:[edi]
  4107cd:	mov    ?,WORD PTR ds:0xfffa67e8
  4107d3:	jmp    DWORD PTR [edi+esi*4]
  4107d6:	add    bh,bh
  4107d8:	fcmove st,st(7)
  4107da:	jae    0x4107bc
  4107dc:	cld    
  4107dd:	aam    0x89
  4107df:	push   ebp
  4107e0:	out    dx,eax
  4107e1:	loop   0x4107f3
  4107e3:	call   edx
  4107e5:	sar    ebp,cl
  4107e7:	push   edx
  4107e8:	outs   dx,DWORD PTR ds:[esi]
  4107e9:	cs leave 
  4107eb:	ret    0x5b63
  4107ee:	push   ebp
  4107ef:	mov    ebx,DWORD PTR [ebx-0x27]
  4107f2:	ret    0x39f8
  4107f5:	(bad)  
  4107f6:	std    
  4107f7:	push   edi
  4107f8:	int3   
  4107f9:	dec    eax
  4107fa:	adc    BYTE PTR [ebx-0x77c1f9b],cl
  410800:	sub    DWORD PTR [ebx+0x50fd],ecx
	...
  41082e:	lea    ebx,[edi-0x1]
  410831:	jne    0x410862
  410833:	sbb    DWORD PTR [eax],eax
  410835:	(bad)  
  410836:	ds pop ss
  410838:	hlt    
  410839:	(bad)  
  41083a:	ins    BYTE PTR es:[edi],dx
  41083b:	push   0xa8bbf89
  410840:	retf   
  410841:	test   BYTE PTR [edx],cl
  410843:	mov    bh,0xd2
  410845:	(bad)  
  410846:	test   BYTE PTR ds:[edx],al
  410849:	add    ch,al
  41084b:	bswap  esp
  41084d:	std    
  41084e:	icebp  
  41084f:	mov    ebp,0xffbb117e
  410854:	iret   
  410855:	std    
  410856:	loope  0x410825
  410858:	xor    ecx,DWORD PTR [ebp-0x12e7b3d]
  41085e:	rcl    DWORD PTR [esi+ebx*2+0x10],1
  410862:	leave  
  410863:	das    
  410864:	int3   
  410865:	std    
  410866:	shr    ebp,0xd2
  410869:	push   ecx
  41086a:	dec    edx
  41086b:	add    DWORD PTR [ecx-0x2d024f05],edx
  410871:	jmp    FWORD PTR ds:0x3ebc815f
  410877:	or     eax,0x8f99fed3
  41087c:	idiv   dh
  41087e:	or     edx,DWORD PTR [ecx+edx*8-0x2e32c58c]
  410885:	je     0x4108bd
  410887:	sbb    al,0xb
  410889:	(bad)  
  41088a:	jns    0x4108d1
  41088c:	xchg   esi,eax
  41088e:	dec    esi
  41088f:	cmp    eax,0xfb81
	...
  4108bc:	push   0x5d74d355
  4108c1:	pop    ecx
  4108c2:	stos   DWORD PTR es:[edi],eax
  4108c3:	mov    dh,BYTE PTR [ebx+0x51fed24c]
  4108c9:	jmp    0x5cd507c3
  4108ce:	sar    dh,cl
  4108d0:	inc    ecx
  4108d1:	ins    DWORD PTR es:[edi],dx
  4108d2:	xor    al,0x8
  4108d4:	cdq    
  4108d5:	cmp    eax,esi
  4108d7:	(bad)  
  4108d9:	pop    ebx
  4108da:	cmp    al,0x7f
  4108dc:	adc    eax,0x23cba4dc
  4108e1:	jbe    0x4108b8
  4108e3:	cmp    al,ch
  4108e5:	paddusw mm7,QWORD PTR [esi+0x2f]
  4108e9:	call   0x764cd459
  4108ee:	mov    ebp,0x435b9433
  4108f3:	add    al,0xf9
  4108f5:	out    dx,eax
  4108f6:	(bad)  
  4108f8:	(bad)  
  4108f9:	xor    ebp,DWORD PTR [ebx+eax*8+0x72]
  4108fd:	stc    
  4108fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ff:	dec    eax
  410900:	loop   0x41095c
  410902:	jmp    0x620c470a
  410907:	js     0x4108d2
  410909:	je     0x410890
  41090b:	shl    BYTE PTR [eax+ecx*2+0xac2486c],cl
  410912:	mov    BYTE PTR fs:[ebp+0x1d26d74],dh
  410919:	add    ecx,edi
  41091b:	shl    dl,cl
  41091d:	jb     0x41097d
  41091f:	rol    BYTE PTR [eax],cl
	...
  410949:	add    BYTE PTR [eax-0x3600458b],ah
  41094f:	fxch   st(3)
  410951:	iret   
  410952:	xchg   ecx,eax
  410953:	in     eax,0xbc
  410955:	es mov ebx,0x80d13cb7
  41095b:	jne    0x4109b5
  41095d:	shl    dl,cl
  41095f:	dec    edx
  410960:	cs pop eax
  410962:	inc    edx
  410963:	jbe    0x410900
  410965:	sti    
  410966:	adc    BYTE PTR [ebx+0x7560d2ea],al
  41096c:	imul   ecx,edx,0x400dcb49
  410972:	push   edx
  410973:	retf   0xe97b
  410976:	mov    ecx,0xaa7e4d81
  41097b:	jb     0x41097c
  41097d:	test   BYTE PTR [edi],0x76
  410980:	mov    bl,bl
  410982:	or     al,0xb0
  410984:	mul    edi
  410986:	pcmpeqd mm7,mm6
  410989:	cmp    esp,DWORD PTR [edx]
  41098b:	push   ss
  41098c:	leave  
  41098d:	stos   DWORD PTR es:[edi],eax
  41098e:	ds pop ebx
  410990:	push   ebp
  410991:	bound  ebx,QWORD PTR [esi]
  410993:	jbe    0x410a09
  410995:	icebp  
  410996:	out    dx,al
  410997:	out    dx,eax
  410998:	pop    ss
  410999:	rcr    DWORD PTR [edx-0x17],1
  41099c:	(bad)  
  41099d:	mov    dh,0xf
  41099f:	lock or eax,ecx
  4109a2:	push   ecx
  4109a3:	cli    
  4109a4:	(bad)  
  4109a5:	call   0xa9c39e56
  4109aa:	cmp    BYTE PTR [ebx],cl
  4109ac:	call   FWORD PTR [eax+eax*1]
	...
  4109d7:	add    BYTE PTR [esi],bh
  4109d9:	je     0x410a4f
  4109db:	icebp  
  4109dc:	cmc    
  4109dd:	aaa    
  4109de:	jb     0x410966
  4109e0:	out    dx,eax
  4109e1:	jne    0x410a57
  4109e3:	aad    0xee
  4109e5:	out    dx,eax
  4109e6:	pcmpeqd mm2,QWORD PTR [ecx]
  4109e9:	push   ebx
  4109ea:	call   0xfeb515ad
  4109ef:	xor    BYTE PTR [eax+0x22b40048],al
  4109f5:	cmp    dh,0xdc
  4109f8:	xchg   ebp,eax
  4109f9:	jne    0x410a6f
  4109fb:	icebp  
  4109fc:	jne    0x410a7b
  4109fe:	jo     0x410a46
  410a00:	outs   dx,DWORD PTR ds:[esi]
  410a01:	jne    0x410a77
  410a03:	in     eax,dx
  410a04:	gs pop eax
  410a06:	pusha  
  410a07:	jmp    0x2e912549
  410a0c:	or     DWORD PTR [edi-0x1],esp
  410a0f:	pushf  
  410a10:	push   ebp
  410a11:	jl     0x410a1a
  410a13:	fwait
  410a14:	mov    ?,WORD PTR [ebp-0x2]
  410a17:	pushf  
  410a18:	push   ecx
  410a19:	jne    0x410a8f
  410a1b:	stc    
  410a1c:	outs   dx,BYTE PTR ds:[esi]
  410a1d:	out    dx,eax
  410a1e:	pop    ss
  410a1f:	add    BYTE PTR [edi],ch
  410a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a22:	outs   dx,DWORD PTR ds:[esi]
  410a23:	inc    DWORD PTR [eax-0x4f]
  410a26:	rcl    BYTE PTR [edi+eiz*1],0x2d
  410a2a:	mov    ebp,esp
  410a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a2d:	mov    ds:0x8b20f7d2,eax
  410a32:	std    
  410a33:	jne    0x410a74
  410a35:	hlt    
  410a36:	add    DWORD PTR [eax],0xfffffff3
  410a39:	mov    bh,ch
  410a3b:	push   eax
	...
  410a64:	add    BYTE PTR [eax],al
  410a66:	add    BYTE PTR ds:0xa508e808,cl
  410a6c:	std    
  410a6d:	jmp    FWORD PTR [ebp+0x5f]
  410a70:	push   0x0
  410a72:	jg     0x4109fe
  410a74:	add    DWORD PTR [eax],eax
  410a76:	out    0xf4,eax
  410a78:	add    DWORD PTR [eax],0xffffff9f
  410a7b:	mov    bh,ch
  410a7d:	push   eax
  410a7e:	dec    ebp
  410a7f:	mov    bh,ch
  410a81:	jne    0x410a5a
  410a83:	adc    eax,0x8fe76a00
  410a88:	sbb    al,0x60
  410a8a:	xlat   BYTE PTR ds:[ebx]
  410a8b:	push   edi
  410a8c:	mov    DWORD PTR [ebp-0x26cb9],0x5797
  410a96:	fcomp  st(4)
  410a98:	repnz mul DWORD PTR [eax]
  410a9b:	mov    eax,DWORD PTR [eax]
  410a9d:	add    BYTE PTR [edi-0x107a38a9],dl
  410aa3:	xchg   edx,eax
  410aa4:	std    
  410aa5:	jmp    DWORD PTR [edi+0x58000057]
  410aab:	(bad)  
  410aad:	test   DWORD PTR [eax-0x75],0x5767fffe
  410ab4:	mov    edx,DWORD PTR [ebp-0x71]
  410ab7:	not    BYTE PTR [eax]
  410ab9:	push   0x57
  410abb:	hlt    
  410abc:	xor    eax,0x48
  410abf:	mov    edi,ebp
  410ac1:	push   eax
  410ac2:	inc    DWORD PTR ds:[ebp-0x2f9bb615]
  410ac9:	dec    edi
	...
  410af2:	add    BYTE PTR [eax],al
  410af4:	mov    ebx,0x41f6db06
  410af9:	je     0x410b2c
  410afb:	push   DWORD PTR [ebx+0x4274cf94]
  410b01:	adc    DWORD PTR [eax+ecx*1-0x6c],0x4674cd84
  410b09:	xchg   ecx,eax
  410b0a:	xor    DWORD PTR [ebp+edi*4-0x39],eax
  410b0e:	fcomi  st,st(6)
  410b10:	adc    DWORD PTR [edx+0x78c20f03],esp
  410b16:	add    eax,DWORD PTR [eax]
  410b18:	ds add eax,0xa9f1eb91
  410b1e:	into   
  410b1f:	inc    DWORD PTR [eax-0x8]
  410b22:	inc    BYTE PTR [eax]
  410b24:	ds test ch,al
  410b27:	test   BYTE PTR [edx],cl
  410b29:	retf   0xfece
  410b2c:	ds test ch,bl
  410b2f:	mov    ebp,0x4161a766
  410b34:	ds out 0x88,eax
  410b37:	inc    ebp
  410b39:	icebp  
  410b3a:	into   
  410b3b:	dec    edi
  410b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b3d:	shr    BYTE PTR [esi],0x0
  410b40:	ds test ebx,0x8940fc73
  410b47:	shr    DWORD PTR [ecx+0x3e00cf11],cl
  410b4d:	sbb    DWORD PTR [esi+0x43a69967],ecx
  410b53:	add    BYTE PTR [ebx+0xfc03ff],bh
	...
  410b81:	add    BYTE PTR [ecx-0x5c17cbcf],al
  410b87:	leave  
  410b88:	add    al,BYTE PTR [eax]
  410b8a:	mov    ebx,0x81235844
  410b8f:	pop    ebx
  410b90:	ins    BYTE PTR es:[edi],dx
  410b91:	mov    eax,0x21d7268
  410b96:	adc    BYTE PTR ds:[esi+0x5c],0x51
  410b9b:	std    
  410b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b9d:	add    edi,DWORD PTR [ebx+0x40cfe8d8]
  410ba3:	jb     0x410b3d
  410ba5:	fcmovnb st,st(3)
  410ba7:	adc    ecx,ebp
  410ba9:	add    edi,DWORD PTR [ebx-0x23772266]
  410baf:	pop    edx
  410bb0:	jmp    0x4a8fa1b8
  410bb5:	inc    ebp
  410bb6:	ds loopne 0x410c24
  410bb9:	add    edx,DWORD PTR [esi]
  410bbb:	jb     0x410b8a
  410bbd:	xor    edx,DWORD PTR [esi]
  410bbf:	add    al,0x49
  410bc1:	add    al,0x3e
  410bc3:	test   ax,0x6f57
  410bc7:	fdivrp st(3),st
  410bc9:	outs   dx,BYTE PTR ds:[esi]
  410bca:	test   BYTE PTR [ecx+ebp*8],bl
  410bcd:	add    edi,DWORD PTR [ecx]
  410bcf:	xlat   BYTE PTR ds:[ebx]
  410bd0:	add    edi,DWORD PTR ds:0x9e5b
  410bd5:	cwde   
  410bd6:	loope  0x410c41
  410bd8:	xchg   ebp,eax
  410bd9:	into   
  410bda:	rcl    bh,0x88
  410bdd:	(bad)  
  410bde:	enter  0x8571,0x98
  410be2:	aad    0x69
  410be4:	jge    0x410bb4
	...
  410c0e:	add    BYTE PTR [eax],al
  410c10:	enter  0x8cd7,0xd6
  410c14:	mov    al,0x71
  410c16:	pop    ebx
  410c17:	mov    BYTE PTR [ecx-0xe319a97],dl
  410c1d:	add    al,0xe8
  410c1f:	pop    ecx
  410c20:	ds add eax,0x53e59e9
  410c26:	jmp    0x3dbbceab
  410c2b:	into   
  410c2c:	or     BYTE PTR [edx],0x3e
  410c2f:	clc    
  410c30:	fsub   DWORD PTR ds:0x663da800
  410c36:	shl    BYTE PTR [ebp-0x28b8e00],0x70
  410c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c3e:	xlat   BYTE PTR ds:[ebx]
  410c3f:	push   ss
  410c40:	mov    BYTE PTR [eax-0x2],dh
  410c43:	pop    esp
  410c44:	mov    eax,ds:0x780efe68
  410c49:	out    0xf,al
  410c4b:	push   es
  410c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c4d:	(bad)  
  410c4e:	idiv   dh
  410c50:	or     edi,DWORD PTR [ecx+0xf]
  410c53:	test   DWORD PTR [ebx],0xd934fe72
  410c59:	imul   edi,esi,0x5e0302e6
  410c5f:	jmp    0xd65d90a1
  410c64:	imul   eax,DWORD PTR [edi-0x1],0xfe69ea94
  410c6b:	(bad)  
  410c6c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6e:	jmp    0x410c26
  410c70:	or     esi,DWORD PTR [edx-0x2]
  410c73:	cmp    al,0x0
	...
  410c9d:	add    dl,ch
  410c9f:	jno    0x410c55
  410ca1:	xchg   ebp,eax
  410ca2:	adc    esi,DWORD PTR [edx-0x2]
  410ca5:	xchg   ecx,eax
  410ca6:	fsubr  DWORD PTR [edi-0x2]
  410ca9:	sahf   
  410caa:	or     ebp,DWORD PTR [eax+0x72039eeb]
  410cb0:	out    0x9,eax
  410cb2:	sbb    ebx,DWORD PTR [ebx+0x0]
  410cb5:	mov    al,0xfc
  410cb7:	dec    esp
  410cb8:	add    BYTE PTR [edi+esi*1],dl
  410cbb:	test   BYTE PTR [edx-0xf93553],al
  410cc1:	hlt    
  410cc2:	test   eax,0x3dc60a78
  410cc7:	pop    ebx
  410cc8:	or     ebp,DWORD PTR [ecx]
  410cca:	icebp  
  410ccb:	push   ebp
  410ccc:	pop    esi
  410ccd:	and    BYTE PTR [esp+eiz*2+0x0],bh
  410cd1:	cmp    BYTE PTR [edx-0x6aff4023],ah
  410cd7:	repz into 
  410cd9:	lea    esp,[edx+0x28524e90]
  410cdf:	or     BYTE PTR [eax+ebp*8],cl
  410ce2:	dec    esi
  410ce3:	lock std 
  410ce5:	dec    DWORD PTR [ebp+esi*4-0x6decb279]
  410cec:	or     BYTE PTR [esi],dh
  410cee:	pop    eax
  410cef:	mov    BYTE PTR [edx+0x29],0x4b
  410cf3:	pop    ebp
  410cf4:	inc    ebp
  410cf5:	aam    0x96
  410cf7:	fcomi  st,st(7)
  410cf9:	adc    al,0xb5
  410cfb:	lea    ebp,[ecx]
  410cfd:	neg    BYTE PTR [esi+0xebd008]
	...
  410d2b:	add    bh,bh
  410d2d:	inc    ebp
  410d2e:	movzx  edx,BYTE PTR [ebx+0x51]
  410d32:	in     al,dx
  410d33:	push   eax
  410d34:	outs   dx,DWORD PTR ds:[esi]
  410d35:	arpl   WORD PTR cs:[ecx+0x27],ax
  410d39:	icebp  
  410d3a:	inc    ebx
  410d3b:	fadd   DWORD PTR [edi-0x71]
  410d3e:	push   cs
  410d3f:	pop    edi
  410d40:	pop    ss
  410d41:	pop    esp
  410d42:	add    esp,0xffffffeb
  410d45:	lock inc ebx
  410d47:	fcom   DWORD PTR [edi-0x62]
  410d4a:	jae    0x410d1c
  410d4c:	inc    ecx
  410d4e:	je     0x410d4f
  410d50:	cwde   
  410d51:	hlt    
  410d52:	inc    ebx
  410d53:	shl    BYTE PTR [ecx],1
  410d55:	(bad)  
  410d57:	adc    al,0x35
  410d59:	stos   BYTE PTR es:[edi],al
  410d5a:	jg     0x410dc1
  410d5c:	xchg   ebx,eax
  410d5d:	sahf   
  410d5e:	(bad)  
  410d5f:	call   edi
  410d61:	sahf   
  410d62:	jae    0x410d38
  410d64:	dec    edi
  410d65:	arpl   WORD PTR cs:[ecx-0x59],ax
  410d69:	lock inc ebx
  410d6b:	fadd   DWORD PTR [edi-0x71]
  410d6e:	ficomp WORD PTR [esi-0x69]
  410d71:	pop    ebx
  410d72:	add    esp,0xffffffab
  410d75:	lock inc ebx
  410d77:	fdivr  DWORD PTR [esi]
  410d79:	mov    dl,0xcb
  410d7b:	je     0x410deb
  410d7d:	sbb    DWORD PTR [ecx+0x7a188175],ebx
  410d83:	inc    esp
  410d84:	mov    ?,esi
  410d86:	inc    ebp
  410d87:	int3   
  410d88:	push   cs
  410d89:	sub    DWORD PTR [esi-0x30],edx
  410d8c:	(bad)  
  410d8d:	lds    ebx,FWORD PTR [edi+0x41]
	...
  410db8:	add    BYTE PTR [eax],al
  410dba:	cmp    DWORD PTR ds:[esi],edx
  410dbd:	lds    eax,FWORD PTR [esi]
  410dbf:	ret    
  410dc0:	add    ch,al
  410dc2:	mov    ecx,esi
  410dc4:	retf   
  410dc5:	(bad)  
  410dc6:	xor    eax,0xa983fc42
  410dcb:	add    DWORD PTR [edx],0xbab7c700
  410dd1:	xor    BYTE PTR [ebx-0x3df0fcc8],0x2
  410dd8:	add    eax,DWORD PTR [eax]
  410dda:	ds jne 0x410e2d
  410ddd:	or     al,0x26
  410ddf:	aaa    
  410de0:	sub    al,BYTE PTR [eax]
  410de2:	ds mov bl,0xe3
  410de5:	cmp    dh,0x82
  410de8:	jnp    0x410e2e
  410dea:	into   
  410deb:	xchg   ebp,eax
  410dec:	push   eax
  410ded:	or     al,0xc9
  410def:	aaa    
  410df0:	nop
  410df1:	(bad)  
  410df2:	imul   edi,DWORD PTR [eax-0x4201bb86],0x50
  410df9:	enter  0x3fb1,0xc0
  410dfd:	mov    BYTE PTR [ebx+0x3e000410],0x84
  410e04:	test   DWORD PTR [ecx+ebp*4],edi
  410e07:	cmp    DWORD PTR [ebp+0x0],eax
  410e0a:	ds jo  0x410e3f
  410e0d:	lea    eax,[ebx]
  410e0f:	sbb    al,0x34
  410e11:	push   0x3f
  410e13:	pop    edx
  410e14:	add    al,0x6a
  410e16:	cmovno esi,DWORD PTR ds:[eax+0x3d35b0e]
	...
  410e46:	add    BYTE PTR [eax],al
  410e48:	retf   
  410e49:	sbb    BYTE PTR [ecx],ch
  410e4b:	xor    al,0x91
  410e4d:	dec    eax
  410e4e:	jbe    0x410e8f
  410e50:	call   FWORD PTR [edx-0x1e]
  410e53:	ret    
  410e54:	or     eax,0xba496a29
  410e59:	pop    ebx
  410e5a:	mov    ch,0x17
  410e5c:	mov    ebp,0xf203d8f0
  410e61:	bound  esp,QWORD PTR [edx+0x31]
  410e64:	dec    esi
  410e65:	cmc    
  410e66:	sub    eax,0x1e5b1906
  410e6b:	push   ecx
  410e6c:	inc    esi
  410e6d:	outs   dx,BYTE PTR ds:[esi]
  410e6e:	fwait
  410e6f:	mov    ecx,DWORD PTR [eax-0x18]
  410e72:	dec    esp
  410e73:	retf   
  410e74:	retf   0x915e
  410e77:	push   es
  410e78:	ds jle 0x410eb9
  410e7b:	fmul   st(6),st
  410e7d:	outs   dx,BYTE PTR ds:[esi]
  410e7e:	cmc    
  410e7f:	retf   0xe828
  410e82:	sub    al,0xdc
  410e84:	adc    ecx,DWORD PTR [edi]
  410e86:	jmp    0xb129278e
  410e8b:	fist   DWORD PTR [ebx]
  410e8d:	in     al,dx
  410e8e:	aad    0xca
  410e90:	or     al,ch
  410e92:	mov    eax,0xc5ec0bdb
  410e97:	retf   0xa49b
  410e9a:	stos   BYTE PTR es:[edi],al
  410e9b:	div    ecx
  410e9d:	push   es
  410e9e:	(bad)  
  410e9f:	xlat   BYTE PTR ds:[ebx]
  410ea0:	mov    esp,0x7a78a096
  410ea5:	outs   dx,DWORD PTR ds:[esi]
  410ea6:	cmp    BYTE PTR [ebp+eiz*1-0x6],bl
  410eaa:	daa    
  410eab:	add    al,0x0
	...
  410ed5:	add    BYTE PTR [eax+ebx*2+0x3],ah
  410ed9:	add    al,0x56
  410edb:	push   edx
  410edc:	or     al,BYTE PTR [ebp+0x3e]
  410edf:	or     DWORD PTR [edx+0x645b3e28],0xffffffc3
  410ee6:	inc    eax
  410ee7:	jecxz  0x410ee8
  410ee9:	test   al,0x3d
  410eeb:	pop    ebx
  410eec:	add    BYTE PTR [edx+0x6e],ah
  410eef:	outs   dx,DWORD PTR ds:[esi]
  410ef0:	mov    bh,bl
  410ef2:	push   ss
  410ef3:	pop    ss
  410ef4:	clc    
  410ef5:	mov    ecx,0x56fbe684
  410efa:	push   ebx
  410efb:	dec    edi
  410efc:	test   DWORD PTR [ecx],ebp
  410efe:	test   ch,dl
  410f00:	popf   
  410f01:	jmp    0xbcc46a43
  410f06:	test   DWORD PTR [ebp+0xd],ebp
  410f09:	ins    DWORD PTR es:[edi],dx
  410f0a:	fldcw  WORD PTR [ebp-0x2]
  410f0d:	jmp    0xea15258e
  410f12:	cmp    eax,0xfe26005b
  410f17:	xchg   edx,eax
  410f18:	(bad)  
  410f19:	call   0xa5086a5b
  410f1e:	lea    esi,ds:0x943de900
  410f24:	inc    esp
  410f25:	sub    eax,0xe9005b3d
  410f2a:	test   al,0x7
  410f2c:	clc    
  410f2d:	bound  ebp,QWORD PTR [ebx]
  410f2f:	loopne 0x410f75
  410f31:	mov    ch,0x52
  410f33:	fiadd  WORD PTR [ecx+edi*4+0x4a]
  410f37:	add    DWORD PTR [ecx],eax
  410f39:	(bad)  
	...
  410f62:	add    BYTE PTR [eax],al
  410f64:	jns    0x410fd9
  410f66:	(bad)  
  410f67:	cmp    eax,DWORD PTR [esi]
  410f69:	(bad)  
  410f6a:	sar    BYTE PTR [esi+ebp*1],0xd8
  410f6e:	jl     0x410f1d
  410f70:	cmp    eax,0x816a4de6
  410f75:	xchg   edi,edi
  410f77:	xor    al,0x7c
  410f79:	add    ecx,DWORD PTR [ebx+0xa]
  410f7c:	jge    0x410fd9
  410f7e:	call   DWORD PTR [esi+ecx*4]
  410f81:	je     0x410f71
  410f83:	xor    al,0x42
  410f85:	pop    ebx
  410f86:	or     ebp,DWORD PTR [ecx+0x66616e]
  410f8c:	call   0x2e410fe8
  410f91:	sub    al,0xc8
  410f93:	jmp    0x410f2d
  410f95:	fwait
  410f96:	inc    ebx
  410f97:	enter  0x5897,0x0
  410f9b:	add    BYTE PTR [eax],ah
  410f9d:	sbb    al,0xc8
  410f9f:	jmp    FWORD PTR [edx-0x44]
  410fa2:	std    
  410fa3:	jne    0x410f44
  410fa5:	nop
  410fa6:	in     al,0xfd
  410fa8:	lock mov eax,ds:0x8f5b75fd
  410fae:	cmp    BYTE PTR [ebp+0x67],bl
  410fb1:	pop    eax
  410fb2:	cmp    DWORD PTR [ebp+0x4f],0x57
  410fb6:	je     0x410fc0
  410fb8:	adc    BYTE PTR [eax+ebx*8],bl
  410fbb:	call   0x414533
  410fc0:	sub    al,0xf3
  410fc2:	mov    DWORD PTR [ebp+0x2f],edx
  410fc5:	out    dx,al
  410fc6:	adc    bh,bh
	...
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	stos   BYTE PTR es:[edi],al
  410ff3:	mov    al,ds:0xef2f52fd
  410ff8:	push   ebx
  410ff9:	cld    
  410ffa:	lods   al,BYTE PTR ds:[esi]
  410ffb:	gs std 
  410ffd:	jne    0x411032
  410fff:	mov    ds:0x955e0850,eax
  411004:	add    al,BYTE PTR [eax]
  411006:	pop    edx
  411007:	out    dx,al
  411008:	jmp    0x3283:0x5477db83
  41100f:	repnz popa 
  411011:	inc    ecx
  411012:	pop    ss
  411013:	pop    eax
  411014:	jne    0x411034
  411016:	test   al,0x6c
  411018:	lea    esp,[ebx+0x26]
  41101b:	push   edi
  41101c:	add    DWORD PTR [eax],eax
  41101e:	xlat   BYTE PTR ds:[ebx]
  41101f:	push   edi
  411020:	mov    esi,0x187493
  411025:	jmp    0x41100f
  411027:	stc    
  411028:	shl    BYTE PTR [esi],0xe5
  41102b:	(bad)  
  41102c:	les    eax,FWORD PTR [edx]
  41102e:	ds pop esp
  411030:	test   DWORD PTR ds:0x82d5473e,edi
  411036:	jnp    0x411081
  411038:	cmp    eax,0xf7823e41
  41103d:	and    DWORD PTR [ebp-0x42fffd7f],0xffffffbe
  411044:	pop    edi
  411045:	dec    ebx
  411046:	inc    DWORD PTR [ecx+0x1bba0f02]
  41104c:	add    eax,DWORD PTR [eax]
  41104e:	add    DWORD PTR ds:[esi],eax
  411051:	lahf   
  411052:	cmc    
  411053:	ret    0x2
	...
  41107e:	add    BYTE PTR [eax],al
  411080:	dec    ecx
  411081:	(bad)  
  411082:	loope  0x411083
  411084:	jno    0x411007
  411086:	mov    edi,0x2816a44
  41108b:	add    BYTE PTR [esi],bh
  41108d:	xor    eax,0x823ef83e
  411092:	add    al,BYTE PTR [eax]
  411094:	ret    
  411095:	mov    dh,0xc6
  411097:	dec    edi
  411098:	mov    ebx,0xd44fcabe
  41109d:	sbb    DWORD PTR [edx-0x23],0xff02b39d
  4110a4:	dec    ebx
  4110a5:	loope  0x4110e2
  4110a7:	inc    ecx
  4110a8:	ds jge 0x41106d
  4110ab:	push   cs
  4110ac:	mov    edx,0x3e000332
  4110b1:	cmc    
  4110b2:	dec    eax
  4110b3:	clc    
  4110b4:	ds jns 0x411135
  4110b7:	stos   DWORD PTR es:[edi],eax
  4110b8:	ds je  0x4110bd
  4110bb:	add    DWORD PTR [ebx-0x3df0fc68],0xffffffd6
  4110c2:	add    eax,DWORD PTR [eax]
  4110c4:	ds in  eax,dx
  4110c6:	push   eax
  4110c7:	cld    
  4110c8:	xlat   BYTE PTR ds:[ebx]
  4110c9:	test   BYTE PTR [ebx],0x0
  4110cc:	ds push edx
  4110ce:	jnp    0x411105
  4110d0:	fstp   DWORD PTR [ebx+0x1f]
  4110d3:	in     al,dx
  4110d4:	shl    BYTE PTR [eax],0x99
  4110d7:	(bad)  
  4110d8:	push   ebx
  4110d9:	inc    edi
  4110da:	inc    cx
  4110dc:	retf   0x79f3
  4110df:	arpl   di,di
  4110e1:	pop    edx
  4110e2:	xchg   ecx,eax
  4110e3:	in     eax,dx
	...
  41110c:	add    BYTE PTR [eax],al
  41110e:	adc    eax,0x89b4e95b
  411113:	fisubr WORD PTR [eax-0x76df48fe]
  411119:	pop    esp
  41111a:	lods   eax,DWORD PTR ds:[esi]
  41111b:	(bad)  
  41111c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41111d:	add    eax,ecx
  41111f:	and    BYTE PTR [ebp-0x41],al
  411122:	add    dh,BYTE PTR [edi-0x18]
  411125:	add    edi,DWORD PTR [esi]
  411127:	pop    ebx
  411128:	pop    esp
  411129:	inc    ecx
  41112a:	or     dx,bx
  41112d:	add    al,0xe4
  41112f:	pop    edx
  411130:	rol    DWORD PTR [ebx],cl
  411132:	mov    ebx,0xd4344920
  411137:	pop    edx
  411138:	pop    esp
  411139:	inc    ecx
  41113a:	dec    esi
  41113b:	or     esp,DWORD PTR [esi]
  41113d:	icebp  
  41113e:	mov    al,0x16
  411140:	test   al,0x3
  411142:	xor    eax,0xbd189c9b
  411147:	call   0x42f31548
  41114c:	inc    ecx
  41114d:	add    eax,0xfae95b3e
  411152:	jmp    0xab07f045
  411157:	push   ebx
  411158:	out    dx,al
  411159:	push   eax
  41115a:	es push 0x5b
  41115d:	fcom   DWORD PTR [eax]
  41115f:	icebp  
  411160:	lock pop ebx
  411162:	inc    edx
  411163:	pop    ebx
  411164:	mov    BYTE PTR [ebp-0x392d4fe7],0xf8
  41116b:	imul   edi,DWORD PTR [ebx],0x2283d9d8
  411171:	add    al,0x0
	...
  41119b:	add    BYTE PTR [esi],bh
  41119d:	or     DWORD PTR [eax],eax
  41119f:	mov    dh,0x26
  4111a1:	arpl   WORD PTR [edx+0x7cdcd9a7],ax
  4111a7:	mov    eax,ds:0x6a08ef3d
  4111ac:	inc    ebx
  4111ad:	pop    ebx
  4111ae:	(bad)  
  4111b0:	push   0x808efe6a
  4111b5:	out    dx,al
  4111b6:	sti    
  4111b7:	xchg   BYTE PTR [esi+0x42284af4],ch
  4111bd:	or     ecx,ecx
  4111bf:	stos   DWORD PTR es:[edi],eax
  4111c0:	mov    eax,ds:0x71625369
  4111c5:	fadd   st(3),st
  4111c7:	popa   
  4111c8:	neg    DWORD PTR [edx+0x6a]
  4111cb:	push   cs
  4111cc:	sub    esi,0xf56c4107
  4111d2:	dec    BYTE PTR [esi-0x6]
  4111d5:	push   ds
  4111d6:	cld    
  4111d7:	push   0x46
  4111d9:	mov    dl,0x4a
  4111db:	test   al,0x3d
  4111dd:	pop    ebx
  4111de:	je     0x4111d6
  4111e0:	mov    al,ds:0x3de9f81e
  4111e5:	pop    ebx
  4111e6:	add    dl,dl
  4111e8:	jge    0x411203
  4111ea:	push   eax
  4111eb:	mov    ecx,0xbbf80ec6
  4111f0:	js     0x411240
  4111f2:	mov    bh,0xa2
  4111f4:	sbb    BYTE PTR [ebx-0x7b],0x29
  4111f8:	sbb    BYTE PTR [ebp-0x15],0xca
  4111fc:	mov    esp,0xe9f7e7
	...
  411229:	add    BYTE PTR [esi+0x75d2eb5d],cl
  41122f:	retf   0x29a2
  411232:	cmp    ch,BYTE PTR [eax+0x74]
  411235:	loope  0x41123a
  411237:	lock pop es
  411239:	shr    DWORD PTR [edi+0x62],0xfe
  41123d:	into   
  41123e:	ja     0x41124f
  411240:	clc    
  411241:	add    BYTE PTR [ebp+ebp*2-0x3],ch
  411245:	jne    0x411246
  411247:	sahf   
  411248:	push   eax
  411249:	or     BYTE PTR [eax+0x10e80818],ch
  41124f:	mov    al,ds:0x1898fffd
  411254:	or     al,ch
  411256:	jg     0x4111f9
  411258:	std    
  411259:	jmp    FWORD PTR [eax+0x52fffc18]
  41125f:	addr16 out 0xd3,al
  411262:	dec    ebx
  411263:	sahf   
  411264:	std    
  411265:	leave  
  411266:	aad    0x5b
  411268:	add    BYTE PTR [ebp+0x1c],dl
  41126b:	add    DWORD PTR [ecx+0x573917c4],0x53
  411272:	or     al,0x38
  411274:	or     al,0xc7
  411276:	xchg   ebp,eax
  411277:	pop    esp
  411278:	add    BYTE PTR [eax],al
  41127a:	xchg   edi,eax
  41127b:	lahf   
  41127c:	jae    0x411286
  41127e:	jmp    FWORD PTR [edi+0x58]
  411281:	add    BYTE PTR [edi-0x25],ah
  411284:	test   BYTE PTR [ecx],0xb0
  411287:	gs sub eax,eax
  41128a:	int3   
  41128b:	aas    
  41128c:	pop    esi
  41128d:	leave  
	...
  4112b6:	add    BYTE PTR [eax],al
  4112b8:	and    eax,0x2fd0fe67
  4112bd:	loop   0x411312
  4112bf:	or     al,0xce
  4112c1:	pop    esp
  4112c2:	mov    ebx,eax
  4112c4:	pop    eax
  4112c5:	fcmovu st,st(0)
  4112c7:	add    BYTE PTR [edi],ah
  4112c9:	pop    esp
  4112ca:	mov    esi,DWORD PTR [ebp+0x2f]
  4112cd:	jecxz  0x41134a
  4112cf:	or     BYTE PTR [ebp+esi*1+0x66],cl
  4112d3:	mov    edx,DWORD PTR [ecx]
  4112d5:	fdiv   st(2),st
  4112d7:	xor    BYTE PTR [ebp+0x5efc7e62],dl
  4112dd:	push   ss
  4112de:	add    eax,0xeb4bfb80
  4112e3:	sbb    edi,DWORD PTR [esi]
  4112e5:	repnz mov BYTE PTR [eax+0x6c],0x87
  4112ea:	cmp    bl,0x78
  4112ed:	sub    esp,edi
  4112ef:	jg     0x4112cb
  4112f1:	xor    al,BYTE PTR [ebx+eax*8+0x2af99d34]
  4112f8:	dec    BYTE PTR [ebp+eiz*1+0x5e]
  4112fc:	pop    es
  4112fd:	mov    ah,0xfa
  4112ff:	inc    DWORD PTR ds:0x2085082
  411305:	mov    ecx,DWORD PTR [ebx+0x4]
  411308:	push   0xffffff82
  41130a:	xlat   BYTE PTR ds:[ebx]
  41130b:	push   ss
  41130c:	jb     0x411341
  41130e:	push   edx
  41130f:	or     ch,BYTE PTR [edx+0x40]
  411312:	dec    ebp
  411313:	push   es
  411314:	push   edx
  411315:	xor    eax,DWORD PTR [eax]
  411317:	or     ah,BYTE PTR [ebp+0xc0177a]
	...
  411345:	add    ch,dh
  411347:	mov    al,ds:0x697cc924
  41134c:	add    al,al
  41134e:	sahf   
  41134f:	jne    0x411349
  411351:	ret    
  411352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411353:	mov    esp,0x6d3cc57f
  411358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411359:	je     0x4112f7
  41135b:	in     al,dx
  41135c:	cmp    eax,0x7361610c
  411361:	inc    esp
  411362:	push   esi
  411363:	cmp    BYTE PTR [esi+0x8],cl
  411366:	shl    DWORD PTR [esi+0x4e03c6c6],0x3
  41136d:	add    BYTE PTR [esi],bh
  41136f:	jb     0x4113f0
  411371:	cmp    al,0xd9
  411373:	mov    ecx,0xe83e0041
  411378:	sub    al,0x8d
  41137a:	and    DWORD PTR [ecx+esi*1+0x6a],0x3f
  41137f:	fiadd  DWORD PTR [edx]
  411381:	push   0x3e
  411383:	fiadd  DWORD PTR [edx]
  411385:	push   0x3e
  411387:	pop    ebx
  411388:	je     0x4113d3
  41138a:	push   es
  41138b:	or     al,0xde
  41138d:	sbb    DWORD PTR [ecx+0x45042812],esp
  411393:	fwait
  411394:	push   esp
  411395:	(bad)  
  411396:	mov    esp,0x7204bce8
  41139b:	das    
  41139c:	jb     0x4113e7
  41139e:	xor    dl,dl
  4113a0:	and    esi,DWORD PTR [esp+edx*1-0x2a11c9ad]
  4113a7:	rcr    BYTE PTR [ebx],cl
  4113a9:	mov    eax,0x0
	...
  4113d2:	add    BYTE PTR [eax],al
  4113d4:	mov    ah,0xe8
  4113d6:	lock mov ?,WORD PTR [edx+0x6b]
  4113da:	mov    DWORD PTR [esi],eax
  4113dc:	lods   eax,DWORD PTR ds:[esi]
  4113dd:	mov    edi,0x66424961
  4113e2:	sti    
  4113e3:	mov    bl,0xb8
  4113e5:	pop    ebx
  4113e6:	jle    0x411421
  4113e8:	stos   BYTE PTR es:[edi],al
  4113e9:	jae    0x4113a7
  4113eb:	pop    esp
  4113ec:	ds pop ebx
  4113ee:	xor    DWORD PTR ds:0x5ee95b3e,eax
  4113f4:	jmp    0x3a0743fd
  4113f9:	pop    ebx
  4113fa:	add    al,ah
  4113fc:	adc    al,0x6
  4113fe:	scas   eax,DWORD PTR es:[edi]
  4113ff:	int3   
  411400:	jg     0x411455
  411402:	jmp    0x69b8c95f
  411407:	enter  0xf3a1,0xe8
  41140b:	jecxz  0x411466
  41140d:	inc    ax
  41140f:	add    ah,al
  411411:	gs and eax,0x9067028d
  411417:	add    ebx,DWORD PTR [esi]
  411419:	pop    ebx
  41141a:	jmp    0xe3682ca
  41141f:	ret    
  411420:	(bad)  
  411421:	pop    ds
  411422:	add    DWORD PTR [esi+edi*1],ebp
  411425:	cmp    ebp,ecx
  411427:	add    edx,DWORD PTR [esi]
  411429:	aas    
  41142a:	add    BYTE PTR [edi-0x5b779b04],al
  411430:	leave  
  411431:	std    
  411432:	dec    DWORD PTR [eax]
  411434:	inc    edx
  411435:	pop    ebx
  411436:	call   0x411531
	...
  41145f:	add    BYTE PTR [eax],al
  411461:	add    BYTE PTR [edi+0x66],cl
  411464:	(bad)  
  411465:	pusha  
  411466:	xchg   BYTE PTR [ebx+0x67],ch
  411469:	jmp    0xd23f7a4b
  41146e:	cmp    esi,ebp
  411470:	(bad)  
  411471:	mov    esi,0x41ec1eb2
  411476:	inc    edx
  411477:	cmp    eax,DWORD PTR [eax]
  411479:	jmp    0xa6ad7b23
  41147e:	cld    
  41147f:	rol    BYTE PTR [ecx+edx*4+0x15],cl
  411483:	pop    ebx
  411484:	and    cl,ch
  411486:	cmp    eax,0x7cfcef73
  41148b:	mov    BYTE PTR fs:[esi+edx*8],ch
  41148f:	fs je  0x41146b
  411492:	push   ebp
  411493:	inc    ecx
  411494:	sub    BYTE PTR fs:[edx+0x66],al
  411498:	je     0x411507
  41149a:	in     eax,0x85
  41149c:	pop    eax
  41149d:	jmp    0xee04eedf
  4114a2:	jl     0x411492
  4114a4:	xadd   DWORD PTR [esi-0x7],ebp
  4114a8:	inc    eax
  4114a9:	jmp    0x5239032a
  4114ae:	mov    es,WORD PTR [edx]
  4114b0:	add    cl,ch
  4114b2:	mov    eax,0x16360b99
  4114b7:	dec    ebx
  4114b8:	push   0x1c19ab
  4114bd:	es push es
  4114bf:	outs   dx,DWORD PTR ds:[esi]
  4114c0:	out    0x63,eax
  4114c2:	loop   0x41151e
  4114c4:	add    BYTE PTR [edx+0x0],ch
	...
  4114ef:	add    BYTE PTR [ecx],al
  4114f1:	push   ecx
  4114f2:	call   DWORD PTR [ebp+ecx*2-0x44ff9f0d]
  4114f9:	pop    ds
  4114fa:	add    bh,bh
  4114fc:	stos   BYTE PTR es:[edi],al
  4114fd:	test   al,0xe6
  4114ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411500:	scas   al,BYTE PTR es:[edi]
  411501:	pop    eax
  411502:	add    BYTE PTR [ebx+0x75ff545b],al
  411508:	pop    es
  411509:	xor    DWORD PTR [esp+eiz*2+0x56],esi
  41150d:	pop    edi
  41150e:	push   DWORD PTR [ebp+0x3]
  411511:	mov    eax,0x58e75992
  411516:	add    esp,0xfffffff3
  411519:	fwait
  41151a:	jae    0x411528
  41151c:	(bad)  
  41151d:	aad    0x62
  41151f:	inc    ecx
  411520:	out    0x9b,eax
  411522:	jae    0x41150c
  411524:	(bad)  
  411525:	fcom   DWORD PTR [edi+0x0]
  411528:	xlat   BYTE PTR ds:[ebx]
  411529:	ffreep st(2)
  41152b:	or     al,0xa0
  41152d:	sub    al,0x10
  41152f:	push   0x413339
  411534:	shr    BYTE PTR [esp+eiz*8],0xe8
  411538:	push   ecx
  411539:	add    BYTE PTR [eax],al
  41153b:	add    BYTE PTR [ebx+edx*4],dl
  41153e:	or     ch,BYTE PTR [edx-0x59]
  411541:	fwait
  411542:	jae    0x411540
  411544:	and    BYTE PTR [esp+ecx*1],ch
  411547:	jmp    FWORD PTR [edx]
  411549:	pushf  
  41154a:	inc    esi
  41154b:	inc    ecx
  41154c:	xchg   edi,eax
  41154d:	mov    al,0x54
  41154f:	jo     0x411561
  411551:	call   0x0:0x4587
	...
  41157c:	add    BYTE PTR [eax],al
  41157e:	pop    es
  41157f:	xor    eax,0xa0aaff00
  411584:	std    
  411585:	jne    0x4115da
  411587:	fwait
  411588:	xor    eax,ebp
  41158a:	lahf   
  41158b:	sbb    DWORD PTR [eax],eax
  41158d:	call   0x403e39
  411592:	into   
  411593:	sbb    ebx,esp
  411595:	push   0x57
  411597:	fwait
  411598:	jae    0x41158e
  41159a:	ds dec ebp
  41159c:	aaa    
  41159d:	or     al,0x31
  41159f:	pop    ebp
  4115a1:	inc    edi
  4115a2:	jg     0x411616
  4115a4:	stos   BYTE PTR es:[edi],al
  4115a5:	sub    DWORD PTR [esi-0x7c77409b],ebp
  4115ab:	dec    edx
  4115ac:	add    BYTE PTR cs:[ecx],dl
  4115af:	out    dx,eax
  4115b0:	mov    dl,0xfe
  4115b2:	xchg   ebx,eax
  4115b3:	mov    bh,BYTE PTR [edi+0x4329fb34]
  4115b9:	add    dh,ah
  4115bb:	gs xor bh,bh
  4115be:	icebp  
  4115bf:	cli    
  4115c0:	inc    ebp
  4115c1:	aam    0x54
  4115c3:	jb     0x411584
  4115c5:	je     0x411599
  4115c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c8:	xor    eax,0xc566d9e8
  4115cd:	inc    edi
  4115ce:	jg     0x411642
  4115d0:	stos   BYTE PTR es:[edi],al
  4115d1:	std    
  4115d2:	pop    ecx
  4115d3:	mov    ebp,0xa27b88bf
  4115d8:	lea    eax,[esi+edi*2+0x21]
  4115dc:	shl    DWORD PTR [edx+ebx*4-0x2c],0x35
  4115e1:	or     al,0x0
	...
  41160b:	add    BYTE PTR [ecx-0xb83a5a],ch
  411611:	jno    0x4115bd
  411613:	in     eax,0x29
  411615:	in     eax,dx
  411616:	mov    edi,0x83c5fb88
  41161b:	jl     0x4115bb
  41161d:	jno    0x41162e
  41161f:	test   cl,cl
  411621:	jno    0x411625
  411623:	add    BYTE PTR [ebp+0x40ffd68e],bh
  411629:	(bad)  
  41162a:	ins    DWORD PTR es:[edi],dx
  41162b:	jmp    FWORD PTR [ecx+0x71]
  41162e:	cmp    DWORD PTR [esi+ecx*4+0x71],0xf
  411633:	test   BYTE PTR [ebp-0x3cfffd8f],bl
  411639:	mov    esi,0x5a494fc6
  41163e:	pushf  
  41163f:	xlat   BYTE PTR ds:[ebx]
  411640:	pop    ecx
  411641:	or     bl,BYTE PTR [eax+eax*8]
  411644:	cmp    BYTE PTR [edi+0x29],dl
  411647:	adc    BYTE PTR [edx+0x3e03e8d2],bh
  41164d:	fiadd  WORD PTR [ebx+0x655221c7]
  411653:	xchg   BYTE PTR [ecx],bl
  411655:	arpl   ax,bp
  411657:	mov    ?,WORD PTR [edx-0x6d]
  41165a:	cwde   
  41165b:	rcl    BYTE PTR [edx+0x2f2d08b],0x63
  411662:	fisttp QWORD PTR [ebx]
  411664:	(bad)  
  411665:	out    0x5b,eax
  411667:	xor    DWORD PTR [edx-0x6d],0xffffffe8
  41166b:	aaa    
  41166c:	pop    ecx
  41166d:	repz fadd DWORD PTR [ebx]
	...
  411698:	add    BYTE PTR [eax],al
  41169a:	shl    DWORD PTR [ecx+0x734639bd],1
  4116a0:	shr    DWORD PTR [ecx+edx*8],cl
  4116a3:	bound  ebp,QWORD PTR [ebp+0x1b62de39]
  4116a9:	or     al,0xd6
  4116ab:	out    0xf,eax
  4116ad:	mov    edi,0xe01b62b8
  4116b2:	mov    al,0xe8
  4116b4:	loopne 0x411661
  4116b6:	push   ss
  4116b7:	hlt    
  4116b8:	test   DWORD PTR [edi-0x405f1760],edi
  4116be:	adc    dl,BYTE PTR [ebx-0x7f]
  4116c1:	pop    esi
  4116c2:	daa    
  4116c3:	bound  ebp,QWORD PTR [ebp-0x41]
  4116c6:	adc    dl,BYTE PTR [edi+0x626a3965]
  4116cc:	ror    DWORD PTR [ebx],cl
  4116ce:	data16 aaa 
  4116d0:	sar    BYTE PTR [esi-0x342c9d90],0x68
  4116d7:	call   0x532bd5f4
  4116dc:	push   ecx
  4116dd:	push   ss
  4116de:	out    0x61,eax
  4116e0:	push   DWORD PTR ds:0xe9cbdfbd
  4116e6:	adc    DWORD PTR [eax-0x7d],ecx
  4116e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ea:	jge    0x41174a
  4116ec:	jne    0x4116dc
  4116ee:	les    edx,FWORD PTR [esi]
  4116f0:	int3   
  4116f1:	push   ss
  4116f2:	sub    ah,BYTE PTR [ecx+0x74]
  4116f5:	loope  0x4116cc
  4116f7:	cwde   
  4116f8:	addr16 push es
  4116fa:	loope  0x411770
  4116fc:	or     DWORD PTR [ebx+0x0],edx
	...
  411726:	add    BYTE PTR [eax],al
  411728:	cmp    eax,0xe5e17462
  41172d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172e:	addr16 out dx,al
  411730:	enter  0x7460,0xe5
  411734:	aad    0x5b
  411736:	ins    BYTE PTR es:[edi],dx
  411737:	fidivr WORD PTR [eax-0x5a2e8ba0]
  41173d:	arpl   WORD PTR [edx-0x32],bp
  411740:	test   al,0x60
  411742:	je     0x411701
  411744:	xchg   ebp,eax
  411745:	imul   ebp,DWORD PTR [edx-0x42],0xffffff98
  411749:	pusha  
  41174a:	je     0x411705
  41174c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41174d:	jae    0x4117b9
  41174f:	scas   al,BYTE PTR es:[edi]
  411750:	mov    BYTE PTR [eax+0x74],ah
  411753:	xchg   ebp,eax
  411754:	xchg   ebp,eax
  411755:	jnp    0x4117c1
  411757:	sahf   
  411758:	clc    
  411759:	pusha  
  41175a:	je     0x4116dd
  41175c:	in     eax,0x83
  41175e:	push   0xffffff8e
  411760:	call   0xd5ce8bc5
  411765:	mov    ebp,DWORD PTR [edx+0x7e]
  411768:	fsub   DWORD PTR [eax+0x74]
  41176b:	mov    ebp,esp
  41176d:	xchg   ebx,eax
  41176e:	push   0x6e
  411770:	enter  0x7460,0x45
  411774:	aad    0x9b
  411776:	push   0x5e
  411778:	mov    eax,0xa5317460
  41177d:	mov    ds:0x60a84e6a,eax
  411782:	je     0x411784
  411784:	inc    ebx
  411785:	mov    dh,0xb0
  411787:	imul   ebx,DWORD PTR [eax],0xffffffa1
  41178a:	std    
  41178b:	jne    0x41178d
	...
  4117b5:	add    BYTE PTR [edi],dh
  4117b7:	mov    dh,0xa8
  4117b9:	imul   ebx,DWORD PTR [eax],0xffffffa1
  4117bc:	std    
  4117bd:	jne    0x4117ca
  4117bf:	mov    dh,0xa0
  4117c1:	imul   ebx,DWORD PTR [eax-0x5f],0xffffffc7
  4117c5:	ret    0x5d1b
  4117c8:	push   ebp
  4117c9:	mov    ebp,DWORD PTR [ebx]
  4117cb:	ffree  st(2)
  4117cd:	call   0x8e3eb6f2
  4117d2:	loop   0x411774
  4117d4:	dec    esi
  4117d5:	call   DWORD PTR [edx+0x6235ff50]
  4117db:	adc    al,0x41
  4117dd:	add    bh,ch
  4117df:	call   0x54281839
  4117e4:	ror    BYTE PTR [edi],0x62
  4117e7:	inc    ebx
  4117e8:	add    DWORD PTR [eax],eax
  4117ea:	xlat   BYTE PTR ds:[ebx]
  4117eb:	xchg   edi,eax
  4117ec:	inc    ebx
  4117ed:	clc    
  4117ee:	xlat   BYTE PTR ds:[ebx]
  4117ef:	pop    esp
  4117f0:	add    BYTE PTR [eax],al
  4117f2:	mov    al,ds:0xe0fff418
  4117f7:	pop    esp
  4117f8:	add    BYTE PTR [edx-0x29],ch
  4117fb:	xor    al,BYTE PTR [eax]
  4117fd:	push   0xffffffd7
  4117ff:	xor    al,BYTE PTR [eax]
  411801:	lea    esp,[edx-0x5d]
  411804:	dec    esi
  411805:	lea    esp,[edx]
  411807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411808:	cmc    
  411809:	(bad)  
  41180a:	mov    eax,0xbf75ff07
  41180f:	sahf   
  411810:	jae    0x41180e
  411812:	scas   eax,DWORD PTR es:[edi]
  411813:	(bad)  
  411814:	push   ebp
  411815:	add    BYTE PTR [edi+0x74c053],ah
	...
  411843:	add    BYTE PTR [edx-0x68ff2a4b],ah
  411849:	pop    esp
  41184a:	push   0x1dafa1
  41184f:	(bad)  
  411850:	ds jg  0x411861
  411853:	call   0xfefcb8de
  411858:	push   cs
  411859:	in     eax,dx
  41185a:	ror    DWORD PTR [ebx+eax*8+0x51feb522],cl
  411861:	ret    0xe850
  411864:	jbe    0x411806
  411866:	mov    ebx,0xabefb7fe
  41186b:	idiv   BYTE PTR [ecx]
  41186d:	inc    ecx
  41186e:	lods   al,BYTE PTR ds:[esi]
  41186f:	sbb    eax,0x8cbd49a5
  411874:	add    DWORD PTR [edx+0x54],0x68
  411878:	xor    dh,cl
  41187a:	inc    ecx
  41187b:	add    BYTE PTR [ecx],bl
  41187d:	daa    
  41187e:	lods   al,BYTE PTR ds:[esi]
  41187f:	not    BYTE PTR [ecx]
  411881:	imul   edi,DWORD PTR [ebx+0x41ba0334],0x2e561600
  41188b:	(bad)  
  41188c:	stc    
  41188d:	jmp    0x82bb:0x88e9eb85
  411894:	stos   DWORD PTR es:[edi],eax
  411895:	popf   
  411896:	mov    bl,0xfe
  411898:	loope  0x41190b
  41189a:	ss pop edx
  41189c:	mov    ebp,0x4b03b41e
  4118a1:	cmp    ecx,DWORD PTR [ecx-0x4457257c]
  4118a7:	inc    BYTE PTR [eax]
	...
  4118d1:	add    cl,al
  4118d3:	or     DWORD PTR [ebx-0x4437557c],0xaf06bffe
  4118dd:	imul   BYTE PTR [ecx+0x3e02aad0]
  4118e3:	jb     0x411919
  4118e5:	or     al,BYTE PTR [ecx-0x6e09510a]
  4118eb:	call   0x727f1b9a
  4118f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f1:	sbb    DWORD PTR [ecx+0x70af745a],eax
  4118f7:	pop    edi
  4118f8:	pop    ebp
  4118f9:	mov    esp,0xbc5d6eaa
  4118fe:	push   0x68ab935f
  411903:	pop    edi
  411904:	inc    ebp
  411905:	mov    esp,0x3b5152d2
  41190a:	push   edx
  41190b:	pop    edi
  41190c:	xor    eax,0x356e8a80
  411911:	mov    esp,0xde9c5a40
  411916:	cmp    BYTE PTR [ecx+0x5f30b40c],ch
  41191c:	add    BYTE PTR [eax-0x43f2a169],bl
  411922:	jmp    0x5874:0x18bbfd6f
  411929:	sub    DWORD PTR [ecx],edx
  41192b:	pop    edi
  41192c:	cmc    
  41192d:	jne    0x411950
  41192f:	addr16 in eax,dx
  411931:	mov    ebx,0xabf0e900
	...
  41195e:	add    BYTE PTR [eax],al
  411960:	fstp   QWORD PTR [ebp-0x23]
  411963:	mov    ebx,0xb3c0a8f0
  411968:	call   0x5474d9cb
  41196d:	pop    esi
  41196e:	lds    edi,FWORD PTR [ebx-0x40309c7e]
  411974:	rcr    DWORD PTR [esi-0x4b],cl
  411977:	mov    ebx,0x97c05f52
  41197c:	imul   ebx,DWORD PTR [ebx-0x17],0xffffffcc
  411980:	jg     0x4119d5
  411982:	jmp    0x69b0ded7
  411987:	shl    BYTE PTR [ebp+0x6e2de8f1],0x5e
  41198e:	sti    
  41198f:	or     esp,DWORD PTR [esi-0x6f44fa2c]
  411995:	aam    0xff
  411997:	sub    eax,esi
  411999:	div    bh
  41199b:	or     bh,bl
  41199d:	pop    edx
  41199e:	(bad)  
  41199f:	fadd   QWORD PTR [ebp+0x73]
  4119a2:	mov    ds:0xfe5db55f,al
  4119a7:	fdiv   QWORD PTR [ecx-0x6a1e8ba3]
  4119ad:	stos   BYTE PTR es:[edi],al
  4119ae:	inc    si
  4119b0:	xchg   ebp,eax
  4119b1:	xchg   ebx,eax
  4119b2:	shl    ebp,0x3d
  4119b5:	or     BYTE PTR [ebx-0x4653ebb],cl
  4119bb:	xchg   edi,eax
  4119bc:	in     al,dx
  4119bd:	lock call DWORD PTR [edx-0xe8ba2ce]
	...
  4119ec:	add    BYTE PTR [eax],al
  4119ee:	in     eax,0x7
  4119f0:	addr16 push ss
  4119f2:	in     eax,0xd2
  4119f4:	inc    esp
  4119f5:	or     eax,0xb14926b1
  4119fa:	sbb    BYTE PTR [ebx-0x75],0xbc
  4119fe:	xchg   BYTE PTR [ebx],dl
  411a00:	inc    ecx
  411a01:	jmp    0x754136c3
  411a06:	jle    0x4119fb
  411a08:	test   al,0x4d
  411a0a:	sbb    DWORD PTR [ebx+0x57],0xffffffd1
  411a0e:	sub    BYTE PTR ds:0x9b38e900,al
  411a14:	jae    0x411a04
  411a16:	(bad)  
  411a17:	jae    0x4119df
  411a19:	cmp    dl,BYTE PTR [ebp+0x3a514f5c]
  411a1f:	pop    ebx
  411a20:	out    dx,eax
  411a21:	ja     0x411a38
  411a23:	stos   BYTE PTR es:[edi],al
  411a24:	arpl   WORD PTR [eax],bp
  411a26:	cmp    cl,BYTE PTR [ebx]
  411a28:	call   FWORD PTR [edx+ecx*2]
  411a2b:	jae    0x4119ff
  411a2d:	jnp    0x411a23
  411a2f:	pop    esp
  411a30:	out    0xb5,eax
  411a32:	pop    edx
  411a33:	pop    esi
  411a34:	inc    BYTE PTR [edx+0x80153a]
  411a3a:	sbb    DWORD PTR [ecx+0x75],0x31a359fa
  411a41:	ror    BYTE PTR [esi-0x5f],0xfd
  411a45:	call   DWORD PTR [eax]
  411a47:	test   al,0xac
  411a49:	cmp    BYTE PTR [eax+0x2a],ch
  411a4c:	mov    ebx,0xfda58aff
  411a51:	jne    0x411a53
	...
  411a7b:	add    BYTE PTR [edi-0x4f],bl
  411a7e:	addr16 lock mov al,ss:0x5e5d
  411a84:	push   cs
  411a85:	cwde   
  411a86:	add    al,BYTE PTR [eax]
  411a88:	stos   BYTE PTR es:[edi],al
  411a89:	int3   
  411a8a:	jmp    0x9ac7:0x51a21b83
  411a91:	mov    eax,ds:0x5927fffe
  411a96:	mov    DWORD PTR [ebp+0x53],0x17000058
  411a9d:	into   
  411a9e:	inc    ebx
  411a9f:	or     al,0x94
  411aa1:	pusha  
  411aa2:	(bad)  
  411aa3:	je     0x411ab3
  411aa5:	outs   dx,BYTE PTR ds:[esi]
  411aa6:	mov    esi,0xc8fd352b
  411aab:	ret    0x5923
  411aae:	mov    ebx,0x591701
  411ab3:	jmp    0x411a3b
  411ab5:	(bad)  
  411ab6:	jnp    0x411ac8
  411ab8:	out    0x2c,eax
  411aba:	add    eax,0x89471a8b
  411abf:	sbb    al,dh
  411ac1:	sub    al,0xc
  411ac3:	call   FWORD PTR [edx]
  411ac5:	dec    edi
  411ac6:	call   0xfde39641
  411acb:	or     DWORD PTR [eax+edx*2+0x1dde0575],0xfffffff8
  411ad3:	jmp    0x411b3e
  411ad5:	pop    es
  411ad6:	and    eax,0xfda2d07f
  411adb:	or     DWORD PTR [esi],edi
  411add:	das    
  411ade:	mov    esp,0x57
	...
  411b07:	add    BYTE PTR [eax],al
  411b09:	add    bh,dl
  411b0b:	repnz add eax,DWORD PTR [eax]
  411b0e:	ds pop edi
  411b10:	add    al,0xeb
  411b12:	dec    ebp
  411b13:	icebp  
  411b14:	mov    esp,0x8b7f1307
  411b19:	inc    esp
  411b1a:	xchg   cl,bh
  411b1c:	dec    esi
  411b1d:	cld    
  411b1e:	dec    ecx
  411b1f:	into   
  411b20:	lds    eax,FWORD PTR [edi]
  411b22:	jg     0x411b36
  411b24:	or     al,0x89
  411b26:	add    ecx,DWORD PTR [edx]
  411b28:	mov    edx,DWORD PTR [edx+eiz*2+0x19]
  411b2c:	adc    eax,0x8d1a038b
  411b31:	push   esp
  411b32:	push   edx
  411b33:	ins    DWORD PTR es:[edi],dx
  411b34:	pop    esi
  411b35:	rol    DWORD PTR [ecx+0x33],0xa4
  411b39:	push   es
  411b3a:	mov    bh,0xb7
  411b3c:	mov    edx,0x45369388
  411b41:	xor    DWORD PTR ds:0xb59a306b,0xffffffae
  411b48:	push   es
  411b49:	and    DWORD PTR [esi+0x72],0x2d
  411b4d:	push   es
  411b4e:	gs xor ch,ch
  411b51:	shl    DWORD PTR ds:0x6448b74,1
  411b57:	stc    
  411b58:	dec    esi
  411b59:	cld    
  411b5a:	gs cmp eax,esi
  411b5d:	or     edi,DWORD PTR [esi]
  411b5f:	pop    ds
  411b60:	(bad)  
  411b61:	jmp    0x411b20
  411b63:	mov    ch,0xae
  411b65:	mov    al,ds:0x41f3c2
  411b6a:	daa    
  411b6b:	aaa    
  411b6c:	or     BYTE PTR [esi+0x0],dh
	...
  411b97:	add    BYTE PTR [eax+0x49],al
  411b9a:	(bad)  
  411b9b:	enter  0x81fc,0x2
  411b9f:	call   DWORD PTR [ebx]
  411ba1:	out    dx,al
  411ba2:	mov    BYTE PTR [eax+0x3e],al
  411ba5:	call   0x8aa6:0x5ab967b8
  411bac:	cli    
  411bad:	bound  ebp,QWORD PTR [ebx+0x3e]
  411bb0:	stos   BYTE PTR es:[edi],al
  411bb1:	or     al,BYTE PTR [ecx-0x72a3fe04]
  411bb7:	mov    eax,0x2e864712
  411bbc:	inc    edx
  411bbd:	pop    esp
  411bbe:	repz mov ebx,0xabe0e588
  411bc4:	icebp  
  411bc5:	imul   DWORD PTR [ebp-0x48]
  411bc8:	inc    esp
  411bc9:	fwait
  411bca:	cmc    
  411bcb:	jg     0x411b68
  411bcd:	pop    edx
  411bce:	jmp    0xe52684d6
  411bd3:	mov    eax,0x2e4d62ea
  411bd8:	pop    edx
  411bd9:	jb     0x411c37
  411bdb:	and    dl,BYTE PTR [ecx+0x5b]
  411bde:	jno    0x411c1e
  411be0:	cmp    ah,BYTE PTR [eax]
  411be2:	lods   al,BYTE PTR ds:[esi]
  411be3:	adc    esi,DWORD PTR [ecx]
  411be5:	fadd   DWORD PTR [ebx+eax*1+0x2e265b3e]
  411bec:	dec    edx
  411bed:	pop    edx
  411bee:	xchg   ebp,eax
  411bef:	or     edx,DWORD PTR [esi]
  411bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf2:	mov    bh,BYTE PTR [eax-0x505b1ae0]
  411bf8:	and    al,0xd0
  411bfa:	push   es
  411bfb:	inc    esi
	...
  411c24:	add    BYTE PTR [eax],al
  411c26:	or     al,BYTE PTR [edi+0x4f828c19]
  411c2c:	(bad)  
  411c2d:	fnstsw WORD PTR [ebp+0x4503a8e9]
  411c33:	sub    eax,0xc3e5025c
  411c38:	push   ecx
  411c39:	add    al,0x8e
  411c3b:	pop    edx
  411c3c:	pop    ebp
  411c3d:	or     al,0xd6
  411c3f:	ja     0x411c88
  411c41:	mov    bh,0xd8
  411c43:	pop    edx
  411c44:	cmp    eax,0xefd0d110
  411c49:	stos   DWORD PTR es:[edi],eax
  411c4a:	daa    
  411c4b:	mov    esi,0xe589b600
  411c50:	push   ebx
  411c51:	aad    0xbc
  411c53:	xchg   esp,eax
  411c54:	add    BYTE PTR [esp+edi*1],bl
  411c57:	inc    esi
  411c58:	dec    ecx
  411c59:	jo     0x411c5a
  411c5b:	dec    esi
  411c5c:	mov    ah,ah
  411c5e:	and    eax,ebp
  411c60:	aas    
  411c61:	jmp    0x18466022
  411c66:	leave  
  411c67:	iret   
  411c68:	adc    al,0x18
  411c6a:	ror    edi,1
  411c6c:	clc    
  411c6d:	jbe    0x411cbe
  411c6f:	arpl   ax,bp
  411c71:	lahf   
  411c72:	sbb    al,0x5a
  411c74:	inc    al
  411c76:	inc    esp
  411c77:	sbb    esi,DWORD PTR [ebx+ebp*8-0x6c]
  411c7b:	jg     0x411ccc
  411c7d:	push   esi
  411c7e:	das    
  411c7f:	push   ebx
  411c80:	(bad)  
  411c81:	aam    0x91
  411c83:	inc    edx
  411c84:	adc    al,0xc8
  411c86:	mov    BYTE PTR [ecx-0x2],bl
  411c89:	mov    ah,0x0
	...
  411cb3:	add    BYTE PTR [ecx-0x7736f7be],dl
  411cb9:	pop    ecx
  411cba:	cmp    al,0xe9
  411cbc:	cmp    eax,0x3f9f069b
  411cc1:	inc    esi
  411cc2:	or     DWORD PTR [edx+0x67],ebp
  411cc5:	dec    edi
  411cc6:	add    DWORD PTR [ebx+eiz*4+0x4f0e1945],ebx
  411ccd:	push   edi
  411cce:	jmp    0xfe9b862d
  411cd3:	es jg  0x411d2d
  411cd6:	add    ecx,ebp
  411cd8:	cmp    eax,0x49a4895b
  411cdd:	and    al,BYTE PTR [ecx]
  411cdf:	jmp    0xde417821
  411ce4:	cs push ebx
  411ce6:	jmp    0xfe9b5dc0
  411ceb:	bound  edi,QWORD PTR [esi+0x57]
  411cee:	enter  0xa500,0x6d
  411cf2:	add    BYTE PTR [ebp+0x4c],dl
  411cf5:	add    dl,BYTE PTR [edi-0x75]
  411cf8:	adc    ah,BYTE PTR [ebx-0x7f]
  411cfb:	rcr    BYTE PTR [edi+0x40fce8ad],0x12
  411d02:	dec    DWORD PTR [ebx+0xc7510df]
  411d08:	sbb    BYTE PTR [ecx-0x1],bl
  411d0b:	jne    0x411ca4
  411d0d:	loopne 0x411d55
  411d0f:	add    al,0x24
  411d11:	xchg   ebx,eax
  411d12:	or     al,0x0
  411d14:	xchg   ebx,eax
  411d15:	pusha  
  411d16:	std    
  411d17:	jne    0x411d19
	...
  411d41:	add    BYTE PTR [ebx+0x570846e2],bl
  411d47:	adc    dh,BYTE PTR [ebp+0x8]
  411d4a:	movq   mm5,QWORD PTR [eax-0x1]
  411d4e:	or     ch,ah
  411d50:	inc    esp
  411d51:	adc    al,0xde
  411d53:	push   ebp
  411d54:	mov    dh,0x1
  411d56:	addr16 pop ebp
  411d58:	add    BYTE PTR [edi+0xe],bl
  411d5b:	sbb    al,0xe
  411d5d:	add    BYTE PTR [edx+0x1383e9e4],dh
  411d63:	or     cl,BYTE PTR [ebx+0x1a1355]
  411d69:	add    BYTE PTR [edi],ah
  411d6b:	pop    ebp
  411d6c:	add    BYTE PTR [ebx],ch
  411d6e:	or     DWORD PTR gs:[ebp+0xc],eax
  411d72:	push   ss
  411d73:	pop    ebp
  411d74:	add    BYTE PTR [eax],al
  411d76:	clc    
  411d77:	call   0x60fba13b
  411d7c:	add    BYTE PTR [ebp-0x1c],dh
  411d7f:	adc    DWORD PTR [ebp+0x14],esi
  411d82:	mov    ebp,0xbd006a5d
  411d87:	pop    esp
  411d88:	call   0xff4ff61d
  411d8d:	jmp    0x417ae0
  411d92:	lds    esi,FWORD PTR ds:0xdfaf3f0c
  411d99:	dec    BYTE PTR [ebx+0x32]
  411d9c:	mov    ch,0x74
  411d9e:	sub    dh,BYTE PTR ss:[ecx]
  411da1:	(bad)  
  411da3:	adc    DWORD PTR [edx+0x44],ecx
	...
  411dcd:	add    BYTE PTR [eax],al
  411dcf:	add    BYTE PTR [edx+0x24142e09],bh
  411dd5:	inc    edx
  411dd6:	sub    BYTE PTR [ebx+edi*4],al
  411dd9:	jg     0x411d93
  411ddb:	dec    edi
  411ddc:	xchg   esi,eax
  411ddd:	imul   esi,DWORD PTR [ebx+0x4db99fe],0x81423e02
  411de7:	jl     0x411e23
  411de9:	inc    esp
  411dea:	das    
  411deb:	and    eax,DWORD PTR [ecx-0xc00eda9]
  411df1:	cmp    DWORD PTR [edx-0x4c3f23e3],ebp
  411df7:	mov    BYTE PTR [ebx],al
  411df9:	mov    dh,0xb3
  411dfb:	je     0x411e47
  411dfd:	sbb    al,0x2
  411dff:	push   0x42
  411e01:	mov    bh,0x3d
  411e03:	cld    
  411e04:	out    dx,al
  411e05:	test   eax,0x9949fef6
  411e0a:	test   eax,0x2423fd6
  411e0f:	cmp    DWORD PTR [ebx+0x5e750136],0xffffff81
  411e16:	sub    eax,0xb5459410
  411e1b:	je     0x411e53
  411e1d:	pop    edx
  411e1e:	inc    edi
  411e1f:	bound  ebx,QWORD PTR [ecx]
  411e21:	imul   esi,DWORD PTR [ebx+0xec2a74],0x1ec3e6a
  411e2b:	call   0xfef66f56
  411e30:	out    0x92,eax
  411e32:	add    DWORD PTR [eax],eax
	...
  411e5c:	add    BYTE PTR [eax],al
  411e5e:	ds pop ebx
  411e60:	push   0x36
  411e62:	cmp    bl,BYTE PTR [edi+0x54]
  411e65:	loope  0x411e47
  411e67:	int    0xf7
  411e69:	mov    ah,0x52
  411e6b:	arpl   WORD PTR [edi-0x38a7a1a0],di
  411e71:	mov    al,BYTE PTR [edx+0x2a2ebf57]
  411e77:	(bad)
  411e7a:	inc    edx
  411e7b:	out    0x24,al
  411e7d:	mov    eax,0xb5974301
  411e82:	test   al,0x57
  411e84:	xchg   ecx,eax
  411e85:	mov    edi,DWORD PTR [esi]
  411e87:	pop    ebx
  411e88:	out    0x80,eax
  411e8a:	sbb    ah,BYTE PTR [edi-0x1c]
  411e8d:	sub    DWORD PTR cs:[eax-0x3],ebx
  411e91:	adc    edx,DWORD PTR [ecx+eiz*2]
  411e94:	jle    0x411ec4
  411e96:	ss inc ebx
  411e98:	je     0x411ebc
  411e9a:	jns    0x411ef3
  411e9c:	xor    BYTE PTR [edx],al
  411e9e:	ds pop ebx
  411ea0:	out    0xaa,eax
  411ea2:	aam    0x59
  411ea4:	out    0x3,eax
  411ea6:	mov    ebp,0xd2fde3d5
  411eab:	jp     0x411efb
  411ead:	(bad)
  411eb2:	shl    BYTE PTR [edx+0x4f],cl
  411eb5:	aam    0xde
  411eb7:	push   edi
  411eb8:	aaa    
  411eb9:	mov    ah,0xb2
  411ebb:	outs   dx,DWORD PTR ds:[esi]
  411ebc:	rol    DWORD PTR [eax],0xa4
  411ebf:	pop    ebx
  411ec0:	xchg   ecx,eax
  411ec1:	add    eax,DWORD PTR [eax]
	...
  411eeb:	add    BYTE PTR [esi],dl
  411eed:	or     BYTE PTR [esi],bl
  411eef:	mov    ah,0x20
  411ef1:	inc    ebp
  411ef2:	lods   eax,DWORD PTR ds:[esi]
  411ef3:	add    bh,BYTE PTR [esi]
  411ef5:	pop    ebx
  411ef6:	push   0x36
  411ef8:	inc    edx
  411ef9:	pop    esi
  411efa:	jl     0x411edf
  411efc:	or     cl,dl
  411efe:	xlat   BYTE PTR ds:[ebx]
  411eff:	sub    DWORD PTR [esi],esi
  411f01:	push   esi
  411f02:	add    DWORD PTR [ebp+eax*2+0x43],edi
  411f06:	mov    eax,0xfe55aa88
  411f0b:	pop    esp
  411f0c:	inc    esi
  411f0d:	rol    DWORD PTR [ecx],0x53
  411f10:	cmp    al,cl
  411f12:	add    cl,al
  411f14:	les    ebx,FWORD PTR [eax-0x2]
  411f17:	into   
  411f18:	mov    bl,0x75
  411f1a:	(bad)  
  411f1b:	call   0xedbcf95d
  411f20:	(bad)
  411f23:	scas   al,BYTE PTR es:[edi]
  411f24:	pop    es
  411f25:	push   edi
  411f26:	add    ecx,ebp
  411f28:	cmp    eax,0x461cfd5b
  411f2d:	rol    DWORD PTR [eax],0x13
  411f30:	ss call 0x4333b479
  411f36:	gs (bad) 
  411f38:	int    0x55
  411f3a:	call   0x9c61c3
  411f3f:	push   0x4f
  411f41:	addr16 pop es
  411f43:	cld    
  411f44:	dec    ecx
  411f45:	push   ds
  411f46:	inc    esp
  411f47:	ins    DWORD PTR es:[edi],dx
  411f48:	cmp    ebx,DWORD PTR [ebx+0x0]
  411f4b:	jmp    0xd355eefc
	...
  411f78:	add    BYTE PTR [eax],al
  411f7a:	cmp    eax,0x76404c1
  411f7f:	push   edi
  411f80:	push   ecx
  411f81:	inc    ecx
  411f82:	clc    
  411f83:	push   esp
  411f84:	inc    BYTE PTR [esi-0x55]
  411f87:	xor    DWORD PTR [ecx],eax
  411f89:	jmp    0xe5bcf9cb
  411f8e:	cmp    ecx,edi
  411f90:	or     dh,BYTE PTR [ecx+0x3a]
  411f93:	pop    ebx
  411f94:	add    cl,ch
  411f96:	retf   0x120
  411f99:	jmp    0xe5bcf9db
  411f9e:	sbb    bh,cl
  411fa0:	or     dl,BYTE PTR [ecx+0x3a]
  411fa3:	pop    ebx
  411fa4:	add    BYTE PTR [eax],al
  411fa6:	pop    ss
  411fa7:	idiv   DWORD PTR [edx-0x7ea5e900]
  411fad:	jge    0x411f92
  411faf:	push   ebp
  411fb0:	jo     0x412007
  411fb2:	fsubr  QWORD PTR [edi]
  411fb4:	jb     0x412007
  411fb6:	push   esi
  411fb7:	mov    ecx,DWORD PTR [eax+eax*1]
  411fba:	xlat   BYTE PTR ds:[ebx]
  411fbb:	cdq    
  411fbc:	push   es
  411fbd:	jae    0x411fde
  411fbf:	or     dh,BYTE PTR [ebp+0xc]
  411fc2:	jo     0x411f67
  411fc4:	hlt    
  411fc5:	xor    DWORD PTR [edx+0x13],0xa
  411fc9:	shl    DWORD PTR [edx+0x13],1
  411fcc:	push   DWORD PTR [ebp-0x5]
  411fcf:	icebp  
  411fd0:	add    BYTE PTR [esi-0x20],ah
  411fd3:	or     BYTE PTR [ecx+0x7508df45],cl
  411fd9:	adc    al,al
  411fdb:	xchg   edx,eax
  411fdc:	hlt    
  411fdd:	inc    DWORD PTR [eax]
	...
  412007:	add    BYTE PTR [edx],bh
  412009:	pop    es
  41200a:	push   DWORD PTR [ebp-0x61]
  41200d:	icebp  
  41200e:	pop    ecx
  41200f:	pusha  
  412010:	ror    BYTE PTR [eax],0xff
  412013:	jne    0x412080
  412015:	ja     0x412019
  412017:	(bad)  
  412018:	jp     0x412027
  41201a:	push   DWORD PTR [ebp-0x11]
  41201d:	icebp  
  41201e:	sar    ch,1
  412020:	loopne 0x41202a
  412022:	push   DWORD PTR [ebp-0x21]
  412025:	icebp  
  412026:	mov    ebx,0xb608f065
  41202b:	add    DWORD PTR [edi+0x59],esp
  41202e:	add    bl,ch
  412030:	ja     0x41200e
  412032:	jl     0x412040
  412034:	push   edx
  412035:	(bad)  
  412036:	push   ebx
  412037:	or     edx,DWORD PTR [ebp-0x6d]
  41203a:	dec    edi
  41203b:	and    edx,0xd7fffe54
  412041:	bound  esi,QWORD PTR [ecx+0x48]
  412044:	inc    eax
  412045:	xchg   ebx,eax
  412046:	or     al,0x8f
  412048:	ds pop es
  41204a:	mov    dh,0x82
  41204c:	mov    ds:0x9bd1006e,eax
  412051:	push   esi
  412052:	mov    al,0x74
  412054:	or     ch,BYTE PTR [ebx+0x67]
  412057:	fs stc 
  412059:	dec    ebp
  41205a:	jp     0x4120a0
  41205c:	test   BYTE PTR [ebp+0x36],0x10
  412060:	jmp    0x6c3fd91c
  412065:	cmp    dh,BYTE PTR [eax+0x21a4674]
  41206b:	pusha  
	...
  412094:	add    BYTE PTR [eax],al
  412096:	shl    DWORD PTR ds:0xa83274b0,1
  41209c:	add    edi,edi
  41209e:	dec    ebx
  41209f:	push   cs
  4120a0:	mov    al,0x74
  4120a2:	mov    dh,0x1a
  4120a4:	cmp    edi,ebp
  4120a6:	mov    cl,0x5
  4120a8:	mov    al,0x74
  4120aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ab:	jmp    0x6c:0xf5a16523
  4120b2:	ds inc edx
  4120b4:	add    ch,bl
  4120b6:	cmp    ebp,DWORD PTR [edx+0x423e0004]
  4120bc:	mov    ebx,0x57422ec1
  4120c1:	mov    ebp,DWORD PTR [edx+0x74]
  4120c4:	cmp    DWORD PTR [esi+eax*2+0x42],0x37
  4120c9:	add    eax,0x3c68b08
  4120ce:	ds leave 
  4120d0:	xor    eax,0xb1386508
  4120d5:	xor    eax,0xff256a66
  4120da:	dec    ecx
  4120db:	ror    edx,0x3
  4120de:	mov    ebp,0x2f750254
  4120e3:	lea    esi,ds:0x255a2608
  4120e9:	jmp    FWORD PTR [ecx]
  4120eb:	pop    ebx
  4120ec:	lds    edi,FWORD PTR [edx+0x56e75eff]
  4120f2:	lds    eax,FWORD PTR [esi+0x63]
  4120f5:	inc    edi
  4120f6:	inc    esi
  4120f7:	loopne 0x4120ad
  4120f9:	inc    DWORD PTR [eax]
	...
  412123:	add    BYTE PTR [esi+ebx*2+0x6b828557],dh
  41212a:	out    0x37,eax
  41212c:	inc    ecx
  41212d:	loopne 0x4120cb
  41212f:	adc    esi,ecx
  412131:	mov    bl,BYTE PTR [esi+0x6]
  412134:	mov    ebp,0x6a03fbd5
  412139:	arpl   WORD PTR [edx+0x56],si
  41213c:	xor    dl,BYTE PTR [eax+ebx*2+0x8]
  412140:	rcr    DWORD PTR [eax+0x6a],0x2e
  412144:	es pop ebx
  412146:	cmp    edi,ebx
  412148:	mov    ah,0xad
  41214a:	fist   WORD PTR [ebx-0x37]
  41214d:	pop    eax
  41214e:	push   0x5
  412150:	inc    esi
  412151:	and    ch,BYTE PTR [edx+0x72ae3e17]
  412157:	lahf   
  412158:	mov    esp,0xf058bc1e
  41215d:	fild   QWORD PTR [esp+edx*1]
  412160:	jns    0x4121bc
  412162:	out    0x3,eax
  412164:	ds pop ebx
  412166:	jb     0x4121ae
  412168:	xor    bl,BYTE PTR [eax+ebp*8]
  41216b:	add    edi,DWORD PTR [esi]
  41216d:	pop    ebx
  41216e:	out    0x84,eax
  412170:	repnz (bad) 
  412172:	out    0x36,eax
  412174:	and    BYTE PTR ss:[edi],0x51
  412178:	add    DWORD PTR [edx],esp
  41217a:	sub    bh,bh
  41217c:	pop    ecx
  41217d:	push   esp
  41217e:	(bad)  
  412180:	pop    ecx
  412181:	in     eax,dx
  412182:	stos   DWORD PTR es:[edi],eax
  412183:	mov    al,0x48
  412185:	pop    edi
  412186:	daa    
  412187:	add    BYTE PTR ss:[eax],al
	...
  4121b2:	and    BYTE PTR ss:[edi],0x51
  4121b6:	cdq    
  4121b7:	and    al,0x1
  4121b9:	sub    esi,DWORD PTR [ecx]
  4121bb:	push   ebx
  4121bc:	mov    DWORD PTR [ebp+edx*8-0x3a0e8baf],esp
  4121c3:	add    eax,0x19ce1e5f
  4121c8:	inc    esp
  4121c9:	sbb    eax,0xe9005b3c
  4121ce:	mov    BYTE PTR [edi-0x687f6614],dl
  4121d4:	hlt    
  4121d5:	cdq    
  4121d6:	scas   al,BYTE PTR es:[edi]
  4121d7:	(bad)  
  4121d8:	or     BYTE PTR [ecx],al
  4121da:	push   ss
  4121db:	push   ebp
  4121dc:	(bad)  
  4121dd:	out    dx,al
  4121de:	xlat   BYTE PTR ds:[ebx]
  4121df:	xchg   edi,eax
  4121e0:	in     al,dx
  4121e1:	pop    esi
  4121e2:	in     al,0xdd
  4121e4:	jnp    0x4121bb
  4121e6:	inc    edx
  4121e7:	mov    DWORD PTR [edx+eiz*8],0x208ceef
  4121ee:	add    dh,BYTE PTR [ecx+0x66fcb05d]
  4121f4:	add    BYTE PTR [edx],dl
  4121f6:	pop    es
  4121f7:	aas    
  4121f8:	mov    BYTE PTR [edx+edx*8],ch
  4121fb:	fstp   TBYTE PTR [ebx-0x3f]
  4121fe:	inc    edx
  4121ff:	pop    ebx
  412200:	mov    al,ds:0x29636be9
  412205:	test   eax,0xabc7b208
  41220a:	ds pop ebx
  41220c:	mov    DWORD PTR [edx+ebp*4],esp
  41220f:	sbb    esp,ecx
  412211:	jmp    0x412200
  412213:	inc    edx
  412214:	imul   eax,DWORD PTR ds:0x0,0x0
	...
  41223e:	add    BYTE PTR [eax],al
  412240:	test   eax,0xae2c8851
  412245:	in     eax,0xf8
  412247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412248:	div    DWORD PTR [esi]
  41224a:	add    ecx,ebp
  41224c:	cmp    eax,0xbf1ae95b
  412251:	xchg   edi,eax
  412252:	lock mov ecx,0xb9f497be
  412258:	cwde   
  412259:	(bad)  
  41225a:	or     BYTE PTR [eax],al
  41225c:	out    dx,eax
  41225d:	cmp    edx,0x4cd678ff
  412263:	lock sub al,0x9b
  412266:	call   0xd09645e2
  41226b:	je     0x412294
  41226d:	add    DWORD PTR [ebp-0x4],esi
  412270:	das    
  412271:	bound  esp,QWORD PTR [edi+edi*8+0x28]
  412275:	ss mov esi,0xc00ed85e
  41227b:	or     al,0x17
  41227d:	das    
  41227e:	dec    ebp
  41227f:	call   0xac25c57c
  412284:	fs mov eax,gs
  412287:	add    BYTE PTR [ecx+0x58],dh
  41228a:	cmp    DWORD PTR [ebp+0x3],0x64c1735e
  412291:	mov    ebp,eax
  412293:	add    BYTE PTR [edx+0x59],dh
  412296:	cmp    DWORD PTR [ebp-0xd],0xf810735d
  41229d:	xchg   edx,eax
  41229e:	cld    
  41229f:	call   0x3e9f9b
	...
  4122cc:	add    BYTE PTR [eax],al
  4122ce:	cmp    al,0x17
  4122d0:	pop    esp
  4122d1:	pop    edi
  4122d2:	ficomp WORD PTR [ebx]
  4122d4:	or     al,BYTE PTR [eax]
  4122d6:	adc    al,0x8b
  4122d8:	in     al,0x0
  4122da:	xor    ah,BYTE PTR [edi+eiz*8-0x75]
  4122de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122df:	pop    ebp
  4122e0:	add    BYTE PTR [ebx+0x75fd6762],cl
  4122e6:	mov    bl,0xd0
  4122e8:	std    
  4122e9:	mov    ah,BYTE PTR [edx]
  4122eb:	add    eax,ecx
  4122ed:	loopne 0x412354
  4122ef:	lods   eax,DWORD PTR ds:[esi]
  4122f0:	call   0xff4357d5
  4122f5:	mov    DWORD PTR [edx+0x1b7d8b21],edx
  4122fb:	aad    0x74
  4122fd:	cld    
  4122fe:	ds popf 
  412300:	dec    ecx
  412301:	lods   eax,DWORD PTR ds:[esi]
  412302:	mov    ch,0x93
  412304:	mov    BYTE PTR [esi+ebx*2+0x43],0x2
  412309:	add    BYTE PTR [esi],bh
  41230b:	mov    edi,0xb78ee048
  412310:	dec    eax
  412311:	hlt    
  412312:	mov    ?,esp
  412314:	scas   al,BYTE PTR es:[edi]
  412315:	je     0x41234d
  412317:	push   0xffffff9e
  412319:	cli    
  41231a:	sbb    DWORD PTR [edx-0x6],esi
  41231d:	mov    edi,0x7c83368a
  412322:	adc    al,BYTE PTR [ebx+0x36]
  412325:	push   es
  412326:	mov    ebp,0x72ffa1d7
  41232b:	sbb    BYTE PTR [ebx+0x3642de7c],al
  412331:	or     BYTE PTR [eax],al
	...
  41235b:	add    cl,ch
  41235d:	(bad)  
  41235e:	mov    eax,ds:0xaba5bbe7
  412363:	(bad)  
  412364:	fldenv [edi+0x2824e7d0]
  41236a:	lods   al,BYTE PTR ds:[esi]
  41236b:	dec    cl
  41236d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236e:	mov    al,0xe7
  412370:	dec    ebx
  412371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412372:	stos   DWORD PTR es:[edi],eax
  412373:	(bad)  
  412374:	add    cl,BYTE PTR gs:[edi+0x5f]
  412378:	xchg   DWORD PTR [ecx+eax*1],eax
  41237b:	add    BYTE PTR [ebp-0x5e555b89],dh
  412381:	xchg   DWORD PTR [eax+0x4d61b82],ebp
  412387:	je     0x4123c1
  412389:	lds    ebp,FWORD PTR ds:0x90673ef4
  41238f:	mov    bh,bl
  412391:	inc    ebp
  412392:	lods   eax,DWORD PTR ds:[esi]
  412393:	je     0x41232f
  412395:	rol    DWORD PTR [edi+edi*8],0xeb
  412399:	lds    ebx,FWORD PTR [ecx+ecx*2-0x48543f23]
  4123a0:	aas    
  4123a1:	pop    ebx
  4123a2:	out    0x3,eax
  4123a4:	ds mov cl,0xbe
  4123a7:	mov    edx,0x56e75f7f
  4123ac:	mov    ch,0x3f
  4123ae:	imul   ecx,eax,0x79
  4123b1:	test   al,0x6a
  4123b3:	das    
  4123b4:	dec    esi
  4123b5:	pop    ebx
  4123b6:	mov    ah,0xf9
  4123b8:	jmp    0x3e450b16
  4123bd:	mov    al,0x20
  4123bf:	ret    0x0
	...
  4123ea:	dec    ebp
  4123eb:	pop    ebx
  4123ec:	es aas 
  4123ee:	test   BYTE PTR cs:[ecx],bh
  4123f1:	jns    0x41246d
  4123f3:	imul   ebx,DWORD PTR [esi],0xffffffe7
  4123f6:	mov    ebp,0xb703a8e0
  4123fb:	xchg   ebp,eax
  4123fc:	neg    DWORD PTR [ecx]
  4123fe:	ds push eax
  412400:	jne    0x4123b5
  412402:	(bad)
  412406:	call   0xf7cd:0xbcaceeb4
  41240d:	add    edx,DWORD PTR [ebx+0x5f]
  412410:	push   ecx
  412411:	add    esp,DWORD PTR [edi+esi*4-0x2a]
  412415:	ss ss inc ebx
  412418:	jae    0x412463
  41241a:	ror    DWORD PTR [edi-0x39],0x36
  41241e:	push   edx
  41241f:	push   eax
  412420:	xor    eax,0x154c99fc
  412425:	lods   eax,DWORD PTR ds:[esi]
  412426:	test   al,0xe1
  412428:	and    al,0xb0
  41242a:	mov    al,ds:0x12acfbc5
  41242f:	arpl   WORD PTR [edi-0x68b00d8c],cx
  412435:	lods   al,BYTE PTR ds:[esi]
  412436:	adc    ah,BYTE PTR [edi-0x72]
  412439:	ss ss inc ebx
  41243c:	push   esp
  41243d:	dec    esi
  41243e:	jns    0x41248f
  412440:	jno    0x412488
  412442:	jbe    0x412493
  412444:	add    esp,edi
  412446:	push   ecx
  412447:	push   eax
  412448:	je     0x41242b
  41244a:	(bad)
  41244d:	data16 add BYTE PTR [eax],al
	...
  412478:	stos   BYTE PTR es:[edi],al
  412479:	push   eax
  41247a:	je     0x412471
  41247c:	mov    ds:0x7d4108c6,al
  412481:	scas   al,BYTE PTR es:[edi]
  412482:	std    
  412483:	dec    esi
  412484:	(bad)  
  412485:	xchg   esi,eax
  412486:	adc    al,0x6a
  412488:	and    eax,0xbeed724f
  41248d:	iret   
  41248e:	cld    
  41248f:	in     al,0x71
  412491:	pusha  
  412492:	sub    DWORD PTR [ecx+edx*8-0x9118ba9],0xff305e0e
  41249d:	push   0x0
  41249f:	dec    eax
  4124a0:	shl    eax,0x3f
  4124a3:	jmp    0xac795b94
  4124a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a9:	enter  0xd205,0xfd
  4124ad:	lods   eax,DWORD PTR ds:[esi]
  4124ae:	(bad)  
  4124af:	sub    edx,DWORD PTR [ecx+0x5b]
  4124b2:	sub    DWORD PTR [ecx+edx*4+0x57],0xc7a4f773
  4124ba:	adc    al,0xde
  4124bc:	packsswb mm5,mm0
  4124bf:	add    DWORD PTR [edi+0x4e],esi
  4124c2:	(bad)  
  4124c3:	pusha  
  4124c4:	jg     0x4124e9
  4124c6:	imul   ebp,ecx,0xd1005c3d
  4124cc:	mov    esp,0x2bb6fdbc
  4124d1:	xchg   edi,eax
  4124d2:	hlt    
  4124d3:	add    dl,ch
  4124d5:	inc    ecx
  4124d6:	adc    esp,DWORD PTR [esi+0x14fd674f]
	...
  412504:	add    BYTE PTR [eax],al
  412506:	xchg   edx,eax
  412507:	ss xor al,0x34
  41250a:	aad    0x4d
  41250c:	mov    dh,BYTE PTR [esi+ecx*8]
  41250f:	jecxz  0x412515
  412511:	add    ch,bh
  412513:	cdq    
  412514:	cmp    DWORD PTR [ebp-0x41],edi
  412517:	test   edi,esp
  412519:	mov    ebx,DWORD PTR [edx]
  41251b:	imul   eax,DWORD PTR [ecx+0xd8b5738],0xffffffff
  412522:	jp     0x412522
  412524:	in     eax,0x41
  412526:	test   DWORD PTR [ecx],eax
  412528:	jmp    FWORD PTR [ebx]
  41252a:	pop    ss
  41252b:	mov    ds:0x5a4bc2c7,al
  412530:	cmp    DWORD PTR [ebp-0x7d],0xb8850d5c
  412537:	push   esi
  412538:	add    BYTE PTR [eax],al
  41253a:	cmp    al,0x2
  41253c:	jmp    0x4125ac
  41253e:	pushf  
  41253f:	lods   al,BYTE PTR ds:[esi]
  412540:	hlt    
  412541:	mov    ebp,DWORD PTR [ebx]
  412543:	rol    BYTE PTR [edx],0x45
  412546:	aaa    
  412547:	ins    DWORD PTR es:[edi],dx
  412548:	add    BYTE PTR [eax+0x30],dl
  41254b:	mov    WORD PTR [eax],cs
  41254d:	call   0x3ec5be
  412552:	inc    eax
  412553:	mov    WORD PTR [edi+edi*8],ss
  412556:	push   0x52
  412558:	out    0xb9,al
  41255a:	rol    DWORD PTR [eax],cl
  41255c:	dec    DWORD PTR [ecx+0x68059a]
  412562:	loopne 0x4124ee
  412564:	adc    al,0xff
  412566:	push   0x4f
  412568:	out    0x49,al
	...
  412592:	add    BYTE PTR [eax],al
  412594:	out    dx,eax
  412595:	add    bh,bh
  412597:	mov    esp,DWORD PTR [edx]
  412599:	imul   eax,DWORD PTR [ecx+0xd8aa739],0xffffffff
  4125a0:	push   0xb
  4125a2:	out    0xed,al
  4125a4:	test   BYTE PTR [ecx],0xff
  4125a7:	sub    edx,edi
  4125a9:	mov    al,ds:0x599bc2c7
  4125ae:	std    
  4125af:	jne    0x4125f0
  4125b1:	add    dh,BYTE PTR [ebp+0x14]
  4125b4:	ds in  eax,0x30
  4125b7:	int3   
  4125b8:	and    DWORD PTR [esi-0x8],0x9a4bf3fe
  4125bf:	xchg   edx,eax
  4125c0:	jo     0x41258e
  4125c2:	stos   BYTE PTR es:[edi],al
  4125c3:	or     bh,BYTE PTR [esi+0x4e]
  4125c6:	sti    
  4125c7:	(bad)  
  4125c8:	jmp    0x412591
  4125ca:	cdq    
  4125cb:	(bad)
  4125ce:	stos   BYTE PTR es:[edi],al
  4125cf:	sub    bh,BYTE PTR [esi+0xc]
  4125d2:	mov    ebp,0x434432c1
  4125d7:	cmp    eax,ebx
  4125d9:	stos   DWORD PTR es:[edi],eax
  4125da:	xor    ecx,DWORD PTR [ebp-0xf5efc7]
  4125e0:	stos   DWORD PTR es:[edi],eax
  4125e1:	es stos DWORD PTR es:[edi],eax
  4125e3:	je     0x4125db
  4125e5:	test   DWORD PTR [eax],esi
  4125e7:	or     al,0x21
  4125e9:	or     dl,bh
  4125eb:	out    0xa0,eax
  4125ed:	je     0x412599
  4125ef:	inc    BYTE PTR [ebp-0x7e]
  4125f2:	cli    
  4125f3:	test   BYTE PTR [ebx+eax*2+0x2],ch
	...
  41261f:	add    BYTE PTR [eax],al
  412621:	add    BYTE PTR [ecx],al
  412623:	call   0xe4150dd5
  412628:	stos   BYTE PTR es:[edi],al
  412629:	(bad)  
  41262a:	and    eax,0xfcc94a82
  41262f:	cs add ch,cl
  412632:	and    BYTE PTR [ebx+0x2],al
  412635:	add    BYTE PTR [ebp+0x410ca8b7],bh
  41263b:	mov    bh,0xf0
  41263d:	add    BYTE PTR [esi],bh
  41263f:	inc    edx
  412640:	(bad)  
  412642:	xlat   BYTE PTR ds:[ebx]
  412643:	push   esi
  412644:	add    DWORD PTR [eax],eax
  412646:	ds leave 
  412648:	dec    ebp
  412649:	hlt    
  41264a:	lds    esi,FWORD PTR [esi]
  41264c:	ins    BYTE PTR es:[edi],dx
  41264d:	add    al,BYTE PTR [ebx]
  41264f:	adc    bl,BYTE PTR [edi]
  412651:	add    BYTE PTR [esi],cl
  412653:	std    
  412654:	sub    eax,0xee5ba608
  412659:	dec    edx
  41265a:	xchg   ecx,eax
  41265b:	dec    esp
  41265c:	adc    al,BYTE PTR [ecx+ecx*4]
  41265f:	(bad)  
  412660:	sti    
  412661:	test   al,0xa
  412663:	arpl   WORD PTR [edi+0x65],di
  412666:	jo     0x4126b4
  412668:	xchg   DWORD PTR [ebp+0x2],edi
  41266b:	addr16 push 0xffffffeb
  41266e:	imul   eax,edi,0x46eaa8e6
  412674:	add    BYTE PTR [ecx-0x21],0x4b
  412678:	fst    QWORD PTR [bx+di+0x30ac]
  41267d:	(bad)  
  41267e:	sub    eax,0xcdd5e25b
  412683:	push   ebp
  412684:	inc    eax
  412685:	cwde   
	...
  4126ae:	add    BYTE PTR [eax],al
  4126b0:	cmp    DWORD PTR [eax+ebp*8+0x7a],ecx
  4126b4:	jp     0x4126f5
  4126b6:	rol    BYTE PTR [ebx],cl
  4126b8:	sub    esi,eax
  4126ba:	fld    TBYTE PTR [eax+0x353f63aa]
  4126c0:	adc    DWORD PTR [edi+eiz*1+0x7d],ecx
  4126c4:	and    BYTE PTR [edi+0x6a],0xeb
  4126c8:	or     edi,eax
  4126ca:	out    0xa8,al
  4126cc:	mov    al,BYTE PTR [edi+0x0]
  4126cf:	adc    DWORD PTR [edi+0x4c],ebx
  4126d2:	pop    es
  4126d3:	fnsave [ecx+0x4dc630ab]
  4126d9:	pop    ebx
  4126da:	imul   dh
  4126dc:	mov    ebp,0xc903a8dc
  4126e1:	xchg   ebp,eax
  4126e2:	iret   
  4126e3:	jl     0x41275f
  4126e5:	inc    ebx
  4126e6:	imul   ebx,DWORD PTR [ebx-0x137e5cb],0x14
  4126ed:	sub    DWORD PTR [ecx-0x17b44658],edx
  4126f3:	mov    al,0xae
  4126f5:	xlat   BYTE PTR ds:[ebx]
  4126f6:	iret   
  4126f7:	adc    BYTE PTR [edi-0x4536ff6b],dh
  4126fd:	mov    esi,0x971b0ae8
  412702:	in     al,dx
  412703:	loop   0x412755
  412705:	inc    ebx
  412706:	jbe    0x4126f3
  412708:	stos   BYTE PTR es:[edi],al
  412709:	sub    BYTE PTR [ecx],0xbb
  41270c:	add    dl,BYTE PTR [edi+0x3b38c2ec]
  412712:	mov    dh,BYTE PTR [eax+eax*1]
	...
  41273d:	add    dl,dl
  41273f:	fdivr  DWORD PTR [edi+0x542c2ca]
  412745:	jle    0x4126f3
  412747:	pop    eax
  412748:	push   ebx
  412749:	mov    esp,edx
  41274b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41274c:	in     al,0x72
  41274e:	adc    BYTE PTR [ebx+0x3a],al
  412751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412752:	test   eax,0x6203c8
  412757:	cmp    ebp,edx
  412759:	jmp    0x6f60:0x46e49fba
  412760:	std    
  412761:	mov    ah,0xd1
  412763:	call   0x36a0:0x4325bcfd
  41276a:	out    0x49,al
  41276c:	or     ch,BYTE PTR [ecx]
  41276e:	pusha  
  41276f:	pop    edx
  412770:	std    
  412771:	xchg   esp,eax
  412772:	fld    DWORD PTR [edx-0x64]
  412775:	mov    esi,edx
  412777:	dec    ecx
  412778:	sub    ch,BYTE PTR [ecx]
  41277a:	xchg   BYTE PTR [ebx+eax*8],dl
  41277d:	fnstsw WORD PTR ds:0x6a1d43d4
  412783:	sbb    cl,BYTE PTR [esp+ebp*4-0x5b74650f]
  41278a:	add    eax,0xc4d1529b
  41278f:	inc    ebp
  412790:	(bad)  
  412791:	fimul  WORD PTR [ebx-0x61]
  412794:	rcl    dh,1
  412796:	(bad)  
  412798:	jmp    0xfe8b3173
  41279d:	add    BYTE PTR [esp+esi*2],ah
  4127a0:	rol    BYTE PTR [eax],1
	...
  4127ca:	add    BYTE PTR [eax],al
  4127cc:	jae    0x412822
  4127ce:	cmp    DWORD PTR [ebp-0x31],0xe817745f
  4127d5:	mov    esp,ss
  4127d7:	push   DWORD PTR [edx]
  4127d9:	pop    ss
  4127da:	push   DWORD PTR [ebp-0x65]
  4127dd:	add    DWORD PTR [ebp+0x8],esi
  4127e0:	test   al,0xac
  4127e2:	sbb    bh,bh
  4127e4:	push   edx
  4127e5:	pop    ss
  4127e6:	out    0x2,al
  4127e8:	mov    esp,0x7c47ff02
  4127ed:	jae    0x4127e7
  4127ef:	pmullw mm5,QWORD PTR ds:0x1e8fffc
  4127f6:	jne    0x4127ec
  4127f8:	out    dx,eax
  4127f9:	popf   
  4127fa:	pusha  
  4127fb:	(bad)  
  4127fc:	call   0x574128b7
  412801:	pop    esi
  412802:	pop    ebp
  412803:	leave  
  412804:	imul   eax,DWORD PTR gs:[eax],0x55
  412808:	lods   al,BYTE PTR ds:[esi]
  412809:	jecxz  0x412861
  41280b:	push   edx
  41280d:	inc    ebp
  41280e:	out    0xd2,al
  412810:	stc    
  412811:	add    bh,bh
  412813:	push   0x3f7b7c
  412818:	pop    eax
  412819:	mov    WORD PTR [eax],cs
  41281b:	call   0x41abb3
  412820:	sbb    al,0x1e
  412822:	jne    0x412829
  412824:	test   al,0x6
  412826:	ror    BYTE PTR [eax],0xe7
  412829:	pop    es
  41282a:	(bad)  
  41282b:	(bad)  
  41282c:	call   0x12930bb
	...
  412859:	add    BYTE PTR [esi],ah
  41285b:	jno    0x41285a
  41285d:	jmp    FWORD PTR [eax]
  41285f:	in     al,0x61
  412861:	inc    ecx
  412862:	out    0x0,eax
  412864:	jne    0x41286e
  412866:	adc    bh,ah
  412868:	jae    0x4128b5
  41286a:	ds xor al,0x2
  41286d:	or     edi,DWORD PTR [esi-0x52]
  412870:	call   FWORD PTR [esi-0x79]
  412873:	cmc    
  412874:	stc    
  412875:	jmp    DWORD PTR [ebp-0x5e473dbc]
  41287b:	adc    BYTE PTR [edi-0x16367302],ah
  412881:	push   es
  412882:	or     edx,esp
  412884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412885:	je     0x4128bd
  412887:	in     al,dx
  412888:	jo     0x4128d3
  41288a:	ds xor al,0xfb
  41288d:	mov    edi,0xc9473ef3
  412892:	jl     0x4128df
  412894:	add    ch,BYTE PTR [eax+0x4b]
  412897:	pop    edi
  412898:	inc    ebx
  412899:	add    BYTE PTR [ecx+0x46],ah
  41289c:	cli    
  41289d:	out    0xff,eax
  41289f:	jl     0x4128a5
  4128a1:	add    BYTE PTR [ebp+0x74],al
  4128a4:	xor    BYTE PTR [ecx],cl
  4128a6:	dec    ecx
  4128a7:	test   BYTE PTR cs:[esi+0x4073c03b],0x3e
  4128af:	sbb    bl,dl
  4128b1:	fs jg  0x4128e6
  4128b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b5:	je     0x4128ed
  4128b7:	stos   BYTE PTR es:[edi],al
  4128b8:	fimul  WORD PTR [edx+0x3e]
  4128bb:	xor    bh,bl
  4128bd:	mov    edi,0x0
	...
  4128e6:	add    BYTE PTR [eax],al
  4128e8:	xchg   ebx,eax
  4128e9:	cmp    esp,DWORD PTR [edi+0xd14274]
  4128ef:	nop
  4128f0:	mov    eax,0x496801f3
  4128f5:	xlat   BYTE PTR ds:[ebx]
  4128f6:	inc    esp
  4128f7:	add    cl,bh
  4128f9:	out    dx,eax
  4128fa:	stc    
  4128fb:	out    0x43,eax
  4128fd:	or     eax,0x72350002
  412902:	xor    BYTE PTR [ecx],cl
  412904:	loope  0x4128cd
  412906:	cmc    
  412907:	mov    es,WORD PTR [ebx-0x52]
  41290a:	jae    0x41294c
  41290c:	ds pop ebx
  41290e:	lahf   
  41290f:	add    edi,DWORD PTR [esi]
  412911:	pop    ebx
  412912:	out    0x44,eax
  412914:	neg    DWORD PTR ds:0xd41303e0
  41291a:	mov    ebx,0x1e4f7d81
  41291f:	dec    ebp
  412920:	push   ss
  412921:	inc    eax
  412922:	inc    esp
  412923:	inc    ebx
  412924:	ds dec eax
  412926:	cmp    eax,0x2326a1fc
  41292b:	add    al,0x3e
  41292d:	push   esp
  41292e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292f:	das    
  412930:	inc    eax
  412931:	test   al,0x3d
  412933:	mov    ebx,0x43e75f7f
  412938:	lds    ecx,FWORD PTR [ebx+0x63]
  41293b:	daa    
  41293c:	inc    esi
  41293d:	xor    al,0xe9
  41293f:	pop    edi
  412940:	jmp    0x647010cd
  412945:	(bad)  
  412946:	call   FWORD PTR [edx-0x5b186623]
	...
  412974:	add    BYTE PTR [eax],al
  412976:	retf   0x4f52
  412979:	ins    DWORD PTR es:[edi],dx
  41297a:	hlt    
  41297b:	pop    edx
  41297c:	out    0xf8,eax
  41297e:	or     esi,0x129844ed
  412984:	sub    al,BYTE PTR [eax]
  412986:	ds aam 0xc4
  412989:	sti    
  41298a:	adc    al,0x7d
  41298c:	addr16 in eax,0x36
  41298f:	iret   
  412990:	rol    BYTE PTR [ebx+0xfb35658],1
  412996:	mov    esi,0x392ff187
  41299b:	fcmovnu st,st(6)
  41299d:	dec    eax
  41299e:	mov    dl,BYTE PTR [ebp+0x67]
  4129a1:	in     eax,0x9a
  4129a3:	iret   
  4129a4:	in     al,0x83
  4129a6:	xor    BYTE PTR [ebx+0x6000007c],bh
  4129ac:	(bad)  
  4129ad:	cmp    al,0xbe
  4129af:	xchg   DWORD PTR [eax],eax
  4129b1:	jmp    0xa5074bde
  4129b6:	cdq    
  4129b7:	inc    edi
  4129b8:	(bad)  
  4129b9:	jmp    0xe18549fb
  4129be:	cmp    eax,0x36e9005b
  4129c3:	(bad)  
  4129c4:	or     dl,al
  4129c6:	jbe    0x4129a3
  4129c8:	cmp    eax,0x8174590e
  4129cd:	cmp    al,0xd6
  4129cf:	inc    edi
  4129d0:	jne    0x4129ad
  4129d2:	jmp    0x5b:0x3de8f89e
  4129d9:	sbb    al,0x0
	...
  412a03:	add    BYTE PTR [esi],dh
  412a05:	and    BYTE PTR [ebp+ebx*4+0x3c],al
  412a09:	pop    ebx
  412a0a:	add    cl,ch
  412a0c:	(bad)  
  412a0d:	ins    BYTE PTR es:[edi],dx
  412a0e:	cmc    
  412a0f:	and    al,0xa2
  412a11:	pop    edx
  412a12:	add    cl,ch
  412a14:	cmp    eax,0x62a70ace
  412a19:	lds    ebp,FWORD PTR [si]
  412a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a1d:	inc    edi
  412a1e:	(bad)  
  412a1f:	jmp    0xc57f0561
  412a24:	sbb    BYTE PTR [esi-0x3],bl
  412a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a28:	xchg   ebp,eax
  412a29:	xor    al,0x6
  412a2b:	cs js  0x412a71
  412a2e:	add    ecx,ebp
  412a30:	cmp    eax,0xe1c4815b
  412a35:	pop    ebx
  412a36:	jae    0x412a22
  412a38:	jecxz  0x412a97
  412a3a:	and    BYTE PTR [esi-0x4bff7a43],ch
  412a40:	(bad)  
  412a41:	sar    DWORD PTR [ebx-0xf],1
  412a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a45:	bound  eax,QWORD PTR [eax+0x16d01dde]
  412a4b:	imul   esp,DWORD PTR [edx],0x4d94205c
  412a51:	scas   al,BYTE PTR es:[edi]
  412a52:	jmp    0x47060357
  412a57:	add    DWORD PTR [edi+0x47],ebp
  412a5a:	inc    edi
  412a5b:	adc    BYTE PTR [eax-0x3f0a8ca6],0x8f
  412a62:	inc    ebp
  412a63:	and    BYTE PTR [eax],0x5f
  412a66:	jae    0x412a47
	...
  412a90:	add    BYTE PTR [eax],al
  412a92:	cwde   
  412a93:	xchg   esp,eax
  412a94:	hlt    
  412a95:	add    BYTE PTR [edi+0xa8b005a],ah
  412a9b:	push   edi
  412a9c:	mov    DWORD PTR [ebp-0x51],edi
  412a9f:	cmc    
  412aa0:	pop    ds
  412aa1:	and    BYTE PTR [eax-0x16e38aca],0x52
  412aa8:	add    bh,bh
  412aaa:	dec    edx
  412aab:	jecxz  0x412b00
  412aad:	call   0x40271e
  412ab2:	mov    WORD PTR [edx],ds
  412ab4:	jne    0x412abc
  412ab6:	xor    BYTE PTR [ecx+0x5a5bc2c7],bl
  412abc:	mov    edi,esi
  412abe:	sbb    edx,edi
  412ac0:	inc    esp
  412ac1:	hlt    
  412ac2:	sbb    bh,bl
  412ac4:	add    BYTE PTR ds:[edx+0x7],bl
  412ac8:	push   DWORD PTR [ebp-0x35]
  412acb:	sub    al,0xc
  412ace:	loope  0x412ac9
  412ad0:	(bad)  
  412ad1:	pop    edi
  412ad2:	adc    DWORD PTR [edi],0x832704c0
  412ad8:	mov    esp,ebp
  412ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412adb:	adc    eax,esi
  412add:	push   esi
  412ade:	enter  0x7cdc,0x14
  412ae2:	pop    ss
  412ae3:	outs   dx,BYTE PTR ds:[esi]
  412ae4:	pop    es
  412ae5:	adc    DWORD PTR [edx],0xffffffd9
  412ae8:	dec    edx
  412ae9:	inc    ecx
  412aea:	daa    
  412aeb:	pop    edx
  412aec:	jae    0x412af4
  412aee:	add    BYTE PTR [edi+eax*8-0x76a5f83e],bl
  412af5:	inc    ebp
	...
  412b1e:	add    BYTE PTR [eax],al
  412b20:	ds dec eax
  412b22:	fld    QWORD PTR [edx+eax*8]
  412b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b26:	inc    ebx
  412b27:	add    BYTE PTR [ecx],bh
  412b29:	mov    cl,0x65
  412b2b:	add    BYTE PTR [esi],bh
  412b2d:	xor    al,0xdd
  412b2f:	add    al,0xae
  412b31:	mov    ebp,0xb1410043
  412b36:	jns    0x412b38
  412b38:	ds xor al,0xdd
  412b3b:	add    al,0xaa
  412b3d:	mov    ch,0x44
  412b3f:	add    BYTE PTR [ecx-0x4f],cl
  412b42:	mov    es,WORD PTR [eax]
  412b44:	ds xor al,0x91
  412b47:	inc    esp
  412b48:	mov    dl,0x63
  412b4a:	pop    DWORD PTR [esi+eiz*4+0x63]
  412b4e:	pop    DWORD PTR [edx+ebx*4+0x63]
  412b52:	mov    eax,ds:0x44a5c234
  412b57:	add    BYTE PTR [ecx-0x3f180b9a],cl
  412b5d:	sti    
  412b5e:	mov    ds:0xac76cbfe,al
  412b63:	dec    edi
  412b64:	ret    
  412b65:	jle    0x412b17
  412b67:	dec    edi
  412b68:	mov    ebx,0x614f9476
  412b6d:	push   cs
  412b6e:	jbe    0x412afd
  412b70:	push   DWORD PTR [ebx]
  412b72:	mov    ds:0x65dc2e74,eax
  412b77:	test   DWORD PTR [ecx-0x44],0x3624490
  412b7e:	xchg   ecx,eax
  412b7f:	inc    esp
  412b80:	push   ds
  412b81:	add    edx,DWORD PTR [ecx+0x44]
	...
  412bab:	add    BYTE PTR [eax],al
  412bad:	add    BYTE PTR [edx],bl
  412baf:	add    esp,DWORD PTR [ebx+0x44ccce34]
  412bb5:	add    BYTE PTR [ecx],ah
  412bb7:	adc    dl,dh
  412bb9:	out    0xc4,eax
  412bbb:	mov    ah,BYTE PTR [edx-0x59efee02]
  412bc1:	mov    es,WORD PTR [ebx-0x755dc4a5]
  412bc7:	daa    
  412bc8:	outs   dx,DWORD PTR ds:[esi]
  412bc9:	dec    eax
  412bca:	push   ss
  412bcb:	sbb    eax,0x44f1b3ad
  412bd0:	call   0x33dfe6d8
  412bd5:	xor    edx,DWORD PTR [edx+ebx*2-0x6f]
  412bd9:	add    esp,DWORD PTR [ebx+ebx*2-0x7f]
  412bdd:	add    esp,DWORD PTR [ebx+ebx*2+0x5c]
  412be1:	dec    eax
  412be2:	repnz stos DWORD PTR es:[edi],eax
  412be4:	out    0xf7,al
  412be6:	mov    al,ds:0x45042890
  412beb:	sbb    esp,edi
  412bed:	xchg   DWORD PTR [edi+0x5a],eax
  412bf0:	out    0x3,eax
  412bf2:	mov    ebp,0x310497c6
  412bf7:	(bad)  
  412bf9:	add    bh,BYTE PTR [esi]
  412bfb:	pop    ebx
  412bfc:	bound  ecx,QWORD PTR [edi-0x7e]
  412bff:	sbb    BYTE PTR [eax+ebp*4],0x38
  412c03:	fcomp  QWORD PTR [ebx-0x64a4c1fc]
  412c09:	(bad)  
  412c0a:	repnz sub ah,BYTE PTR [ebx+0x1f]
  412c0e:	xchg   edx,eax
  412c0f:	rcr    BYTE PTR [eax+edx*8],1
	...
  412c3a:	add    BYTE PTR [eax],al
  412c3c:	pop    esp
  412c3d:	pop    ecx
  412c3e:	jp     0x412ca8
  412c40:	pusha  
  412c41:	into   
  412c42:	stos   DWORD PTR es:[edi],eax
  412c43:	xchg   ecx,eax
  412c44:	add    bh,BYTE PTR [edi]
  412c46:	ja     0x412c5f
  412c48:	outs   dx,BYTE PTR ds:[esi]
  412c49:	xor    edi,DWORD PTR [eax+0x6a5b3e4b]
  412c4f:	pop    ds
  412c50:	inc    edx
  412c51:	pop    ebx
  412c52:	out    dx,al
  412c53:	xchg   DWORD PTR [ebx],ecx
  412c55:	pop    ebx
  412c56:	out    0x3,eax
  412c58:	mov    ebp,0x390457c5
  412c5d:	fild   QWORD PTR [ebx]
  412c5f:	add    al,0x3e
  412c61:	pop    ebx
  412c62:	push   0x1f
  412c64:	and    bl,BYTE PTR [ebx+0x0]
  412c67:	out    0xb9,al
  412c69:	add    DWORD PTR [ecx],eax
  412c6b:	jmp    0x25b570ad
  412c70:	rol    BYTE PTR [edx-0x2d60e1a5],cl
  412c76:	inc    ebx
  412c77:	and    DWORD PTR [edi+0x510efcce],ebx
  412c7d:	adc    edi,esi
  412c7f:	jl     0x412c4a
  412c81:	cmp    ebx,DWORD PTR [esi-0x64]
  412c84:	sahf   
  412c85:	inc    esp
  412c86:	imul   ebp,DWORD PTR [edi+0x1009a18],0xe9009c89
  412c90:	or     eax,0xfd4446b3
  412c95:	pop    edx
  412c96:	std    
  412c97:	pop    esp
  412c98:	cmp    BYTE PTR [ebx],0x84
  412c9b:	and    BYTE PTR [edx+0x5b],al
  412c9e:	or     DWORD PTR [ecx+0x0],ebp
	...
  412cc8:	add    BYTE PTR [eax],al
  412cca:	dec    ecx
  412ccb:	arpl   WORD PTR [eax+0x2c],bp
  412cce:	popa   
  412ccf:	call   0xe900:0x9c7cc100
  412cd6:	dec    ebp
  412cd7:	mov    bl,0x4b
  412cd9:	or     al,0xfd
  412cdb:	pop    edx
  412cdc:	std    
  412cdd:	adc    al,0x8a
  412cdf:	cmp    ebp,DWORD PTR [eax+0x20]
  412ce2:	cmp    bl,BYTE PTR [ebx+0x9]
  412ce5:	test   eax,0x1c686351
  412cea:	sbb    DWORD PTR [edx-0x631f6f00],ebx
  412cf0:	add    cl,ch
  412cf2:	or     eax,0xfd0453b3
  412cf7:	pop    edx
  412cf8:	std    
  412cf9:	fdiv   QWORD PTR [ebp+0x3b]
  412cfc:	dec    esp
  412cfd:	mov    al,0x3d
  412cff:	pop    ebx
  412d00:	or     DWORD PTR [ecx],ebp
  412d02:	dec    eax
  412d03:	cwde   
  412d04:	push   0xbf323de9
  412d09:	add    BYTE PTR [eax+0x69],bh
  412d0c:	or     al,0xe8
  412d0e:	push   es
  412d0f:	xchg   ch,bh
  412d11:	dec    DWORD PTR [eax+0x29]
  412d14:	xchg   BYTE PTR [esi+0x75fd5ed6],cl
  412d1a:	or     esi,edi
  412d1c:	push   edx
  412d1d:	pop    ecx
  412d1e:	pop    eax
  412d1f:	sti    
  412d20:	(bad)  
  412d21:	jne    0x412d6e
  412d23:	sti    
  412d24:	je     0x412d1a
  412d26:	cmp    BYTE PTR [ecx+0xc],ch
  412d29:	call   0x3eb2ea
	...
  412d56:	add    BYTE PTR [eax],al
  412d58:	fsubr  DWORD PTR [eax-0x10]
  412d5b:	call   DWORD PTR [edx-0xa]
  412d5e:	(bad)  
  412d5f:	jne    0x412d4c
  412d61:	imul   BYTE PTR [ecx+ebx*2-0x28]
  412d65:	loop   0x412d65
  412d67:	jne    0x412cec
  412d69:	loop   0x412ddf
  412d6b:	fmul   QWORD PTR [eax+0x58e80c64]
  412d71:	cmp    ch,0xff
  412d74:	js     0x412dda
  412d76:	enter  0x57e8,0x9b
  412d7a:	std    
  412d7b:	jmp    FWORD PTR [eax]
  412d7d:	add    edi,0x535e67c2
  412d83:	mov    ebp,DWORD PTR [ebx-0x1b173e22]
  412d89:	jnp    0x412d9f
  412d8b:	add    eax,0x112d358
  412d90:	push   edi
  412d91:	pop    esi
  412d92:	mov    eax,DWORD PTR [ebp-0x1d]
  412d95:	xchg   BYTE PTR [ebx-0x747840bb],cl
  412d9b:	inc    ebp
  412d9c:	retf   
  412d9d:	xchg   BYTE PTR [edx+0x2],ch
  412da0:	fsub   DWORD PTR [ebx+0x10]
  412da3:	call   0x4017de
  412da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da9:	jl     0x412da3
  412dab:	add    DWORD PTR [esi],edi
  412dad:	cmp    DWORD PTR [ecx+0x2343ef2],ecx
  412db3:	jmp    FWORD PTR [ebx+0xe448d80]
  412db9:	sub    al,0xf4
  412dbb:	add    BYTE PTR fs:[eax],al
	...
  412de6:	jg     0x412e1c
  412de8:	lahf   
  412de9:	je     0x412df9
  412deb:	pushf  
  412dec:	jge    0x412e34
  412dee:	ds xor al,0xb
  412df1:	ror    BYTE PTR [ecx-0x49],0xbc
  412df5:	push   ecx
  412df7:	xor    edx,DWORD PTR [ecx-0x6efc0dbc]
  412dfd:	inc    esp
  412dfe:	out    0xe3,al
  412e00:	nop
  412e01:	inc    esp
  412e02:	(bad)  
  412e04:	daa    
  412e05:	add    cl,dl
  412e07:	mov    esi,0x49e0e7f1
  412e0c:	lahf   
  412e0d:	(bad)  
  412e0e:	mov    ebp,0x49009cb6
  412e13:	mov    bh,0x59
  412e15:	push   DWORD PTR [ecx-0x4d8b60cd]
  412e1b:	fwait
  412e1c:	mov    ds:0xaa33ff63,eax
  412e21:	inc    ebp
  412e22:	add    DWORD PTR [edx+eax*1],esi
  412e25:	or     edi,DWORD PTR [esi+0x38]
  412e28:	mov    DWORD PTR [edx-0x72fdcbc2],esp
  412e2e:	sti    
  412e2f:	fbstp  TBYTE PTR [ecx]
  412e31:	lea    eax,[ebx]
  412e33:	cld    
  412e34:	xor    DWORD PTR [ebp+0x6a31e7fb],ecx
  412e3a:	cmp    eax,0x561018d1
  412e3f:	adc    BYTE PTR [ebx+0x20b459fe],0xf8
  412e46:	cmp    DWORD PTR ds:[ecx+0x82],ecx
	...
  412e71:	add    BYTE PTR [eax],al
  412e73:	add    BYTE PTR [esi],bh
  412e75:	xor    al,0x2
  412e77:	mov    edi,ebx
  412e79:	pop    edx
  412e7a:	pop    ebx
  412e7b:	sahf   
  412e7c:	imul   edx,eax,0x96c2afa4
  412e82:	pop    ebx
  412e83:	xor    edi,DWORD PTR [ebx-0x4cccb06a]
  412e89:	xchg   esi,eax
  412e8a:	inc    ebx
  412e8b:	xor    esp,DWORD PTR [edi+edx*2+0x332e183e]
  412e92:	popa   
  412e93:	xchg   ebp,eax
  412e94:	or     BYTE PTR [ecx+0x6b],al
  412e97:	and    BYTE PTR [esi],al
  412e99:	pop    ebx
  412e9a:	pushf  
  412e9b:	add    DWORD PTR ds:[edi+0x6b],edx
  412e9f:	lea    edi,[esi+0x5b]
  412ea2:	push   ss
  412ea3:	sahf   
  412ea4:	call   0xce4955e9
  412ea9:	shr    DWORD PTR [eax-0xbf26fd],1
  412eaf:	popf   
  412eb0:	clc    
  412eb1:	push   esi
  412eb2:	pop    ebx
  412eb3:	lea    edi,[esi+0x5b]
  412eb6:	out    dx,al
  412eb7:	popf   
  412eb8:	rol    BYTE PTR [eax-0x19],0x17
  412ebc:	mov    dl,0x33
  412ebe:	jmp    0x9647:0xaf40b09f
  412ec5:	pop    edx
  412ec6:	out    0x3,eax
  412ec8:	fadd   QWORD PTR ds:[eax+edx*4]
  412ecc:	retf   
  412ecd:	call   0xdf6a:0x720d9ce7
  412ed4:	mov    ecx,0x428d1
	...
  412f01:	add    BYTE PTR [ecx+0x3a80c7c7],al
  412f07:	out    0x6d,eax
  412f09:	inc    ebx
  412f0a:	ds inc eax
  412f0c:	sbb    al,0xf5
  412f0e:	loope  0x412ec9
  412f10:	push   ecx
  412f11:	inc    esp
  412f12:	ds into 
  412f14:	sub    al,0xac
  412f16:	or     DWORD PTR [eax-0xb],eax
  412f19:	scas   eax,DWORD PTR es:[edi]
  412f1a:	push   eax
  412f1b:	mov    BYTE PTR [eax],0xe5
  412f1e:	stos   BYTE PTR es:[edi],al
  412f1f:	(bad)  
  412f20:	or     BYTE PTR [ecx+0x66fe4332],al
  412f26:	add    eax,0x68e9111a
  412f2b:	aam    0xec
  412f2d:	push   0xfffffff6
  412f2f:	xor    edi,esi
  412f31:	aam    0x35
  412f33:	xor    edi,DWORD PTR [edi]
  412f35:	pushf  
  412f36:	mov    edx,0xc0d96b40
  412f3b:	xchg   esi,eax
  412f3c:	lock cdq 
  412f3e:	stos   BYTE PTR es:[edi],al
  412f3f:	(bad)  
  412f40:	or     BYTE PTR [ecx+0x6a],al
  412f43:	lods   eax,DWORD PTR ds:[esi]
  412f44:	std    
  412f45:	es inc edi
  412f47:	sbb    esi,DWORD PTR [ebp+eiz*8+0x4]
  412f4b:	sbb    cl,BYTE PTR [ecx]
  412f4d:	jmp    0x38a99a69
  412f52:	push   ss
  412f53:	call   0x1151:0x4b817400
  412f5a:	sub    BYTE PTR [ebp+edi*8+0x741b36f6],ah
  412f61:	in     eax,0xf4
  412f63:	sbb    DWORD PTR [ecx],ecx
  412f65:	jmp    0x412f6a
	...
  412f8e:	add    BYTE PTR [eax],al
  412f90:	adc    BYTE PTR [esi+0x5b3de8ec],0x0
  412f97:	add    BYTE PTR fs:[edi],ch
  412f9a:	push   ecx
  412f9b:	into   
  412f9c:	dec    eax
  412f9d:	push   ebx
  412f9e:	call   0xfe818058
  412fa3:	bnd jge 0x412f71
  412fa6:	push   es
  412fa7:	push   0x28
  412fa9:	das    
  412faa:	add    DWORD PTR [eax+edi*1],esi
  412fad:	je     0x412f6f
  412faf:	mov    al,0x7f
  412fb1:	push   edi
  412fb2:	add    BYTE PTR [ecx],bh
  412fb4:	addr16 adc ch,dl
  412fb7:	in     al,dx
  412fb8:	lods   al,BYTE PTR ds:[esi]
  412fb9:	aaa    
  412fba:	jb     0x412fa4
  412fbc:	cld    
  412fbd:	push   ebx
  412fbe:	rol    BYTE PTR [eax],0x5a
  412fc1:	out    0x55,al
  412fc3:	cmp    DWORD PTR [edi+0xf05735c],0x5c
  412fca:	add    BYTE PTR [ecx],al
  412fcc:	push   edi
  412fcd:	(bad)  
  412fcf:	add    DWORD PTR [ebx],ebx
  412fd1:	pop    ecx
  412fd2:	sub    eax,eax
  412fd4:	outs   dx,BYTE PTR ds:[esi]
  412fd5:	sbb    al,0x6
  412fd7:	add    BYTE PTR [esi+edx*8-0x31e8be75],dh
  412fde:	inc    esp
  412fdf:	in     al,dx
  412fe0:	mov    bh,0xdf
  412fe2:	je     0x412fec
  412fe4:	outs   dx,DWORD PTR ds:[esi]
  412fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe6:	push   esp
  412fe7:	call   DWORD PTR [eax-0x25]
  412fea:	cmc    
  412feb:	add    ebx,ecx
  412fed:	push   ebp
  412fee:	cmp    eax,0x830665e5
	...
  41301c:	add    BYTE PTR [eax],al
  41301e:	shr    dh,cl
  413020:	std    
  413021:	je     0x412ffc
  413023:	xor    edi,DWORD PTR [esi+0x5215c9]
  413029:	lea    ebp,[edx+0x4aff4dee]
  41302f:	push   edx
  413030:	call   0xff20dac7
  413035:	or     edi,0x5c
  413038:	je     0x41303f
  41303a:	and    al,0xdf
  41303c:	push   DWORD PTR [ecx+ebx*4-0x2b]
  413040:	jl     0x41302e
  413042:	xchg   edi,eax
  413043:	imul   eax,DWORD PTR [esi],0x2b
  413046:	xlat   BYTE PTR ds:[ebx]
  413047:	adc    al,al
  413049:	or     BYTE PTR [edi+0x37ec44d3],ah
  41304f:	loop   0x4130c5
  413051:	or     BYTE PTR [edi+0x67],bh
  413054:	push   ebx
  413055:	call   eax
  413057:	dec    esi
  413058:	shl    BYTE PTR [ebp+0x69],0xd5
  41305c:	jl     0x41304a
  41305e:	imul   eax,DWORD PTR ds:0x3e2b,0xfffffff4
  413064:	retf   
  413065:	shl    DWORD PTR [esi],0x34
  413068:	mov    DWORD PTR [edx+ebp*2+0x64],eax
  41306c:	cdq    
  41306d:	je     0x4130b5
  41306f:	in     al,dx
  413070:	xor    BYTE PTR [ebp+0x49],dl
  413073:	lds    eax,FWORD PTR [ebp+0x46fef7]
  413079:	cmp    DWORD PTR [ebx+0x387504a8],0x69
  413080:	(bad)  
  413081:	enter  0x0,0x0
	...
  4130a9:	add    BYTE PTR [eax],al
  4130ab:	add    ah,bh
  4130ad:	cmp    eax,DWORD PTR [edx]
  4130af:	lea    edi,[ebx-0x80]
  4130b2:	xor    al,0xff
  4130b4:	xchg   ebx,eax
  4130b5:	dec    esp
  4130b6:	stos   BYTE PTR es:[edi],al
  4130b7:	imul   edi,DWORD PTR ss:[ebp-0x67],0xffffff82
  4130bc:	push   es
  4130bd:	push   esp
  4130be:	clts   
  4130c0:	mov    ebp,0x72ffa5ee
  4130c5:	cs out dx,eax
  4130c7:	mov    edi,0xc7207
  4130cc:	mov    ebx,0xe14fa5ee
  4130d1:	out    0x9,al
  4130d3:	call   0xfedc100c
  4130d8:	mov    ebp,0x4074e45b
  4130dd:	mov    cl,0x17
  4130df:	in     al,dx
  4130e0:	ds (bad) 
  4130e2:	jmp    FWORD PTR [edx]
  4130e4:	jle    0x4130f0
  4130e6:	les    eax,FWORD PTR [edi]
  4130e8:	ds scas eax,DWORD PTR es:[edi]
  4130ea:	inc    eax
  4130eb:	in     al,dx
  4130ec:	push   cs
  4130ed:	call   0x25aa:0x3c2bfee4
  4130f4:	repz adc al,0x9b
  4130f7:	mov    ebx,?
  4130f9:	rdmsr  
  4130fb:	call   DWORD PTR [ebx]
  4130fd:	cmp    al,0xaa
  4130ff:	xchg   ebp,eax
  413100:	jmp    0xe85a:0x76829aec
  413107:	adc    eax,0x69fda45
  41310c:	icebp  
  41310d:	push   esp
  41310e:	push   0x18
	...
  413138:	add    BYTE PTR [eax],al
  41313a:	push   edx
  41313b:	pop    edx
  41313c:	adc    al,0x2
  41313e:	and    eax,0x39c5b11b
  413143:	pop    ebx
  413144:	dec    edx
  413145:	mov    edi,DWORD PTR [ebx-0x5771865]
  41314b:	sbb    BYTE PTR cs:[esi],ch
  41314e:	data16 cmp al,0xdd
  413151:	or     esp,DWORD PTR [esi]
  413153:	dec    ebx
  413154:	mov    ah,0x9a
  413156:	sub    BYTE PTR [ebp+ebx*1+0x5c5b6158],dh
  41315d:	inc    eax
  41315e:	sub    ch,BYTE PTR [ecx+edx*8-0x1438eefc]
  413165:	call   0x3d08:0x273f5392
  41316c:	das    
  41316d:	int3   
  41316e:	call   DWORD PTR [ebx-0x19]
  413171:	xor    ch,al
  413173:	das    
  413174:	imul   edi,DWORD PTR [edi-0x6853311b],0x71
  41317b:	xor    edx,DWORD PTR [eax]
  41317d:	xor    ebx,ecx
  41317f:	cmp    al,0x7
  413181:	adc    dl,dl
  413183:	cmp    al,0x75
  413185:	pop    es
  413186:	(bad)  
  413187:	das    
  413188:	call   0x490f:0x2750c09a
  41318f:	cmp    al,0x5d
  413191:	or     al,0xb1
  413193:	(bad)  
  413194:	fld    TBYTE PTR [esp+eiz*2+0x3499d73d]
  41319b:	sbb    edx,DWORD PTR [ebp+0x4]
	...
  4131c6:	add    BYTE PTR [eax],al
  4131c8:	cdq    
  4131c9:	mov    bl,0xac
  4131cc:	mov    gs,WORD PTR [ebx+0x197699be]
  4131d2:	add    ebp,esp
  4131d4:	cmp    eax,0xd7bd89a6
  4131d9:	(bad)  
  4131da:	or     al,0x91
  4131dc:	adc    ebx,DWORD PTR [edi+0x1b3b9efd]
  4131e2:	jne    0x4131ae
  4131e4:	mov    bh,0x10
  4131e7:	cmp    DWORD PTR [edx-0x4879a46d],ebp
  4131ed:	mov    WORD PTR [eax-0x80],gs
  4131f0:	in     al,0x7b
  4131f2:	add    BYTE PTR [esi+0x31],dh
  4131f5:	arpl   bp,di
  4131f7:	hlt    
  4131f8:	sub    DWORD PTR [ebp+edi*8-0x76ccba24],ecx
  4131ff:	imul   eax,edi,0x6515e93c
  413205:	cmp    al,0xfe
  413207:	and    BYTE PTR [eax],al
  413209:	push   0x2fc29c00
  41320e:	imul   ebp,ecx,0xc1bf2c3d
  413214:	push   0xd6e93fb8
  413219:	(bad)  
  41321a:	or     al,0x93
  41321c:	repz cmp al,0x74
  41321f:	icebp  
  413220:	xchg   ebp,eax
  413221:	jmp    0x413220
  413223:	push   ss
  413224:	(bad)  
  413225:	mov    bl,0x0
  413227:	jmp    0x2faa2fd2
	...
  413254:	add    BYTE PTR [eax],al
  413256:	push   ds
  413257:	call   0xd36a:0x4f38fe00
  41325e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325f:	(bad)  
  413260:	or     BYTE PTR [ecx],al
  413262:	xor    eax,0x65e6fe3d
  413267:	pop    ebx
  413268:	add    dh,cl
  41326a:	pop    es
  41326b:	mov    ah,0xbb
  41326d:	dec    ebp
  41326e:	std    
  41326f:	pop    edx
  413270:	std    
  413271:	push   esp
  413272:	inc    esi
  413273:	mov    cl,0x1c
  413275:	add    BYTE PTR [eax+0x4c],bh
  413278:	or     al,ch
  41327a:	adc    eax,0xfffffee3
  41327f:	push   esi
  413280:	add    bh,ch
  413282:	jmp    0x26a5f8f6
  413287:	push   edi
  413288:	std    
  413289:	jne    0x4132e6
  41328b:	ins    DWORD PTR es:[edi],dx
  41328c:	sbb    al,0xff
  41328e:	inc    edx
  41328f:	dec    edi
  413290:	call   0xff23fb00
  413295:	push   0xbeed5767
  41329a:	das    
  41329b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41329c:	popa   
  41329d:	inc    ecx
  41329e:	push   edi
  41329f:	loop   0x413315
  4132a1:	or     al,0x3d
  4132a3:	inc    eax
  4132a4:	push   DWORD PTR [ebp+0x2f]
  4132a7:	pop    es
  4132a8:	push   edx
  4132a9:	dec    DWORD PTR [eax+0x170065d3]
  4132af:	add    al,0xbc
  4132b1:	push   0x3f5a61
  4132b6:	js     0x413321
  4132b8:	or     al,0x6a
	...
  4132e2:	add    BYTE PTR [eax],al
  4132e4:	xor    al,0xd4
  4132e6:	je     0x4132f0
  4132e8:	jg     0x4132fb
  4132ea:	(bad)  
  4132eb:	jmp    FWORD PTR [eax]
  4132ed:	and    eax,0x89e708c0
  4132f2:	mov    esp,ebp
  4132f4:	push   esp
  4132f5:	cli    
  4132f6:	stc    
  4132f7:	push   0xffffffd7
  4132f9:	mov    BYTE PTR [edx],dh
  4132fb:	push   DWORD PTR [edx-0x4d32179a]
  413301:	sar    esi,cl
  413303:	mov    DWORD PTR [edx-0x4da19a2e],esp
  413309:	popf   
  41330a:	add    bh,bh
  41330c:	xor    ah,BYTE PTR [esi-0x18]
  41330f:	dec    ebp
  413310:	cwde   
  413311:	sar    dh,cl
  413313:	call   DWORD PTR [edx]
  413315:	sar    esi,cl
  413317:	jne    0x413357
  413319:	cmp    al,0xaa
  41331b:	div    ebx
  41331d:	sub    BYTE PTR [esi+0x2487cc8],dl
  413323:	push   ebp
  413324:	mov    ch,0x28
  413326:	add    bl,0x82
  413329:	sahf   
  41332a:	add    al,0x6a
  41332c:	sub    eax,0x66081009
  413331:	loopne 0x413362
  413333:	jmp    FWORD PTR [ecx-0x55]
  413336:	aas    
  413337:	cld    
  413338:	(bad)  
  413339:	pop    esi
  41333a:	pop    ds
  41333b:	inc    ecx
  41333c:	ds jmp 0x40a73b51
  413342:	xchg   edi,eax
  413343:	dec    BYTE PTR [ecx-0x47]
  413346:	paddb  mm0,QWORD PTR [eax]
	...
  413371:	add    BYTE PTR [ecx+0x37],al
  413374:	or     ch,al
  413376:	add    DWORD PTR [edi-0x6b],ecx
  413379:	inc    BYTE PTR [edi]
  41337b:	xchg   BYTE PTR [eax],al
  41337d:	add    BYTE PTR [ebx-0x57d5753],dl
  413383:	mov    ebp,DWORD PTR [edx]
  413385:	add    BYTE PTR [eax+edx*2-0x73b98b6b],ah
  41338c:	sub    DWORD PTR [ebp+0x9],edx
  41338f:	jns    0x41331c
  413391:	inc    esp
  413392:	add    bl,BYTE PTR [edi+ecx*1]
  413395:	gs jg  0x4133dc
  413398:	xchg   edi,eax
  413399:	je     0x4133e1
  41339b:	dec    esp
  41339c:	test   eax,0x2a58e9fd
  4133a1:	add    BYTE PTR [esi-0x47],dl
  4133a4:	pop    ds
  4133a5:	inc    ecx
  4133a6:	fadd   QWORD PTR ds:[edx-0x68bb809c]
  4133ad:	xor    al,0x3
  4133af:	in     al,dx
  4133b0:	inc    esp
  4133b1:	add    dh,dl
  4133b3:	daa    
  4133b4:	cmp    edi,edi
  4133b6:	mov    ecx,0x7173c23c
  4133bb:	pop    ebx
  4133bc:	jo     0x4133fe
  4133be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133bf:	ret    0x55e0
  4133c2:	popa   
  4133c3:	pop    ebx
  4133c4:	aas    
  4133c5:	add    al,0x3e
  4133c7:	dec    edx
  4133c8:	mov    gs,WORD PTR [ebx]
  4133ca:	sar    DWORD PTR [esi-0x5076fbd8],cl
  4133d0:	mov    edi,0xbf630a96
  4133d5:	rol    DWORD PTR [eax],1
	...
  4133ff:	add    al,bh
  413401:	cmp    DWORD PTR [edi+0x27f8772b],ebp
  413407:	add    al,0xd6
  413409:	pop    edx
  41340a:	out    0xa6,eax
  41340c:	mov    ds:0xff1fadc2,eax
  413411:	pop    edx
  413412:	mov    ss,WORD PTR [eax]
  413414:	push   esi
  413415:	cmp    ebp,edi
  413417:	or     edx,DWORD PTR [esi+0x52]
  41341a:	(bad)  
  41341b:	xchg   esi,eax
  41341c:	inc    eax
  41341d:	cmp    ebp,edi
  41341f:	fwait
  413420:	and    DWORD PTR [ebx],esp
  413422:	pop    ss
  413423:	xchg   edi,eax
  413424:	xor    BYTE PTR [ecx],bh
  413426:	fst    QWORD PTR [edi-0x541050d8]
  41342c:	mov    ss,WORD PTR gs:[esi-0x6a]
  413430:	push   es
  413431:	push   ds
  413432:	in     al,0x3
  413434:	imul   esp,esp,0x53
  413437:	cmp    ch,0x37
  41343a:	rol    BYTE PTR [ebx],cl
  41343c:	xchg   esp,eax
  41343d:	outs   dx,BYTE PTR ds:[esi]
  41343e:	adc    BYTE PTR ss:[esi+0x43],al
  413442:	dec    eax
  413443:	das    
  413444:	icebp  
  413445:	cmp    BYTE PTR [ecx+0x40],dh
  413448:	jmp    0x165b:0x7f204ac3
  41344f:	adc    BYTE PTR [esi+0x43],al
  413452:	mov    BYTE PTR [ebp+0x100738d0],dl
  413458:	retf   0x7538
  41345b:	or     edx,esi
  41345d:	add    BYTE PTR fs:[eax+edx*8+0x2bc839],bl
	...
  41348d:	add    BYTE PTR [ecx-0x298daac8],dh
  413493:	ffree  st(4)
  413495:	fst    QWORD PTR [ebx+ebx*2+0x6a]
  413499:	pop    ds
  41349a:	mov    bl,0xaf
  41349c:	or     cl,al
  41349e:	sbb    ecx,DWORD PTR [ebp+edi*8-0x3604a3a]
  4134a5:	push   ecx
  4134a6:	push   ss
  4134a7:	mov    edi,0xafd2e93f
  4134ac:	or     cl,al
  4134ae:	pop    ebx
  4134af:	ss (bad) 
  4134b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b2:	shr    DWORD PTR [edi+0x63319efc],cl
  4134b8:	call   0xfe794370
  4134bd:	mov    al,ds:0x1c005c7c
  4134c2:	mov    bh,0x44
  4134c4:	and    BYTE PTR [ebp+0x300c2a6],0xb
  4134cb:	cmp    DWORD PTR [ecx+eiz*8-0x1b],esi
  4134cf:	mov    ch,0x54
  4134d1:	shl    dx,cl
  4134d4:	inc    ebx
  4134d5:	pop    ebp
  4134d6:	push   edx
  4134d7:	icebp  
  4134d8:	arpl   WORD PTR [eax-0x1e8bc7c3],bp
  4134de:	in     eax,0x35
  4134e0:	cld    
  4134e1:	inc    esi
  4134e2:	mov    bl,0x38
  4134e4:	je     0x413523
  4134e6:	stos   DWORD PTR es:[edi],eax
  4134e7:	scas   al,BYTE PTR es:[edi]
  4134e8:	or     BYTE PTR [ecx+0x65],al
  4134eb:	mov    ebp,?
  4134ed:	cs add eax,0xe9051a
	...
  41351b:	add    BYTE PTR [eax],bl
  41351d:	in     al,0xec
  41351f:	push   0xfffffffe
  413521:	xor    ebp,DWORD PTR [ebx-0x17]
  413524:	daa    
  413525:	jae    0x413524
  413527:	xchg   esp,eax
  413528:	inc    ebp
  413529:	inc    ebx
  41352a:	dec    esp
  41352b:	add    BYTE PTR [ebx-0x65760132],ch
  413531:	iret   
  413532:	gs mov esi,0xff009cca
  413538:	sub    ah,BYTE PTR [eax+ebp*8-0x33]
  41353c:	mov    ds:0xafffece,al
  413541:	sar    esi,cl
  413543:	jne    0x4134e4
  413545:	add    esi,DWORD PTR [esi+0x54]
  413548:	or     dh,0xc8
  41354b:	ret    0x5b9b
  41354e:	push   ebx
  41354f:	mov    esi,DWORD PTR [ebx-0x32]
  413552:	je     0x413560
  413554:	jg     0x4134f0
  413556:	pop    ecx
  413557:	jmp    DWORD PTR [eax+0x4274c062]
  41355d:	xchg   edi,ecx
  41355f:	gs push ss
  413561:	pop    edi
  413562:	push   eax
  413563:	call   0x3ea708
  413568:	pop    ss
  413569:	into   
  41356a:	je     0x41357c
  41356c:	daa    
  41356d:	into   
  41356e:	je     0x413578
  413570:	scas   eax,DWORD PTR es:[edi]
  413571:	inc    ecx
  413572:	xlat   BYTE PTR ds:[ebx]
  413573:	push   DWORD PTR [eax-0x5fa937fe]
  413579:	iret   
  41357a:	enter  0x33c2,0x5b
  41357e:	push   ebx
  41357f:	mov    eax,DWORD PTR [eax]
	...
  4135a9:	add    BYTE PTR [ebx-0x25],dh
  4135ac:	sar    eax,0xd8
  4135af:	test   BYTE PTR [eax],al
  4135b1:	push   0x2e
  4135b3:	shl    BYTE PTR [eax+ecx*1+0x6f],1
  4135b7:	add    edx,DWORD PTR [ebx-0x1]
  4135ba:	inc    eax
  4135bb:	loope  0x413601
  4135bd:	cld    
  4135be:	pop    esp
  4135bf:	or     eax,0x5aa64849
  4135c4:	cmp    BYTE PTR [edi],0xd7
  4135c7:	data16 jl 0x413632
  4135ca:	das    
  4135cb:	push   ebp
  4135cc:	aas    
  4135cd:	add    BYTE PTR [esi],bh
  4135cf:	cmc    
  4135d0:	test   eax,0x2447d0d
  4135d5:	or     edi,esi
  4135d7:	mov    eax,0xe2d65734
  4135dc:	and    edi,edi
  4135de:	mov    ecx,0xb73c239
  4135e3:	mov    ebx,0x97a9f83e
  4135e8:	mov    WORD PTR [ecx+0x44],gs
  4135eb:	adc    eax,0xc6a60818
  4135f0:	xchg   ecx,eax
  4135f1:	(bad)  
  4135f2:	xchg   ecx,eax
  4135f3:	and    eax,0x4014f818
  4135f8:	xchg   ebx,eax
  4135f9:	je     0x413631
  4135fb:	or     al,0xc
  4135fd:	(bad)  
  4135fe:	jns    0x4135ed
  413600:	xchg   ecx,eax
  413601:	je     0x413679
  413603:	call   0x6b9a:0x2bf3fee5
  41360a:	popa   
  41360b:	aad    0x91
  41360d:	add    BYTE PTR [bx+si],al
	...
  413638:	jne    0x4136a1
  41363a:	inc    ebx
  41363b:	add    BYTE PTR [ecx+0x4f],dl
  41363e:	mov    edi,fs
  413640:	push   edx
  413641:	jnp    0x4135d4
  413643:	(bad)  
  413644:	xor    eax,0x8e121904
  413649:	lods   eax,DWORD PTR ds:[esi]
  41364a:	pop    ss
  41364b:	clc    
  41364c:	mov    es,ebp
  41364e:	pop    ss
  41364f:	or     BYTE PTR [esi],dl
  413651:	fnstsw WORD PTR [edx-0x2e73de02]
  413657:	push   ebp
  413658:	sbb    DWORD PTR [ebp-0x63e98b6f],ecx
  41365e:	fst    DWORD PTR [ebp+0x9]
  413661:	popf   
  413662:	nop
  413663:	xor    bh,dh
  413665:	ficom  DWORD PTR [ecx-0x69930602]
  41366b:	lods   eax,DWORD PTR ds:[esi]
  41366c:	ss cmp eax,0x5ae98419
  413672:	pushf  
  413673:	(bad)  
  413674:	loopne 0x413625
  413676:	out    dx,eax
  413677:	fwait
  413678:	mov    ch,0x89
  41367a:	push   ss
  41367b:	xchg   ebx,eax
  41367c:	jo     0x4136a2
  41367e:	sub    cl,BYTE PTR [eax]
  413680:	ds nop
  413682:	jb     0x413624
  413684:	shr    BYTE PTR [edi-0x6edc6415],0xf6
  41368b:	xchg   edx,eax
  41368c:	inc    esp
  41368d:	sbb    esi,DWORD PTR [eax+esi*8+0x21]
  413691:	inc    ecx
  413692:	dec    ebp
  413693:	inc    ebp
  413694:	ds mov ecx,edi
  413697:	xchg   ebp,eax
  413698:	div    BYTE PTR ds:0x33d7
	...
  4136c6:	xchg   ecx,eax
  4136c7:	scas   eax,DWORD PTR es:[edi]
  4136c8:	div    DWORD PTR [ebx]
  4136ca:	mov    DWORD PTR [edi+0xcf29bef],ebp
  4136d0:	mov    edi,0x1d476192
  4136d5:	xchg   ebx,eax
  4136d6:	jo     0x4136fb
  4136d8:	stos   BYTE PTR es:[edi],al
  4136d9:	jmp    FWORD PTR [ecx-0x72]
  4136dc:	jb     0x41367d
  4136de:	mov    esp,0xe43aa01e
  4136e3:	pop    edx
  4136e4:	add    esi,ecx
  4136e6:	push   eax
  4136e7:	scas   eax,DWORD PTR es:[edi]
  4136e8:	fistp  WORD PTR [ebx-0x6d7975c5]
  4136ee:	mov    dh,0x9f
  4136f0:	jnp    0x413770
  4136f2:	jp     0x413696
  4136f4:	pop    ds
  4136f5:	inc    ebp
  4136f6:	fld    TBYTE PTR ds:[esi-0x306d4dfd]
  4136fd:	test   al,0x9a
  4136ff:	call   0x3a9:0x6b263ae7
  413706:	ds pusha 
  413708:	daa    
  413709:	pop    ss
  41370a:	dec    edx
  41370b:	mov    WORD PTR [edi-0x78],cs
  41370e:	pusha  
  41370f:	xor    al,0x3f
  413711:	(bad)  
  413712:	mov    ecx,0x72fb00af
  413717:	lahf   
  413718:	clc    
  413719:	cs inc esi
  41371b:	xor    ebp,DWORD PTR [ebx+0x3]
  41371e:	int    0xaf
  413720:	or     BYTE PTR [ecx],dl
  413722:	(bad)  
  413723:	xor    eax,0xafac16fe
  413728:	clc    
  413729:	add    DWORD PTR [eax],0x0
	...
  413754:	fnstenv ds:0xb3a5f174
  41375a:	std    
  41375b:	dec    bh
  41375d:	xor    eax,0x7852f174
  413762:	std    
  413763:	je     0x41370a
  413765:	cmp    al,0x6d
  413767:	out    0xcf,al
  413769:	xor    eax,0x3cca54fe
  41376e:	jl     0x4137ac
  413770:	scas   eax,DWORD PTR es:[edi]
  413771:	xor    eax,0xf3821afd
  413776:	std    
  413777:	(bad)  
  413778:	scas   eax,DWORD PTR es:[edi]
  413779:	xor    eax,0x5d8a8ff3
  41377e:	jae    0x41370e
  413780:	iret   
  413781:	scas   eax,DWORD PTR es:[edi]
  413782:	cld    
  413783:	scas   al,BYTE PTR es:[edi]
  413784:	push   ecx
  413785:	arpl   ax,bp
  413787:	mov    ebp,DWORD PTR [eax]
  413789:	xor    al,0xfe
  41378b:	ds xchg ebp,eax
  41378d:	sbb    al,BYTE PTR ds:0xece008e9
  413793:	push   0x76
  413795:	xor    BYTE PTR [esi+0x13],dl
  413798:	cmp    al,cl
  41379a:	cmp    DWORD PTR [esi+0x51],edi
  41379d:	arpl   ax,bp
  41379f:	ins    DWORD PTR es:[edi],dx
  4137a0:	push   0x8160fe34
  4137a5:	aaa    
  4137a6:	mov    ah,BYTE PTR [eiz*2-0x4216c05d]
  4137ad:	je     0x4137af
  4137af:	fnstsw WORD PTR [ebp-0x3d]
  4137b2:	repz les edi,FWORD PTR [ebx+ebx*2+0x55]
	...
  4137df:	add    BYTE PTR [eax],al
  4137e1:	add    BYTE PTR [edi-0x3e],ch
  4137e4:	inc    eax
  4137e5:	add    bh,ah
  4137e7:	ss mov esi,0xe8724474
  4137ed:	sti    
  4137ee:	mov    ecx,0x170bfeca
  4137f3:	push   ebx
  4137f4:	pop    ss
  4137f5:	push   eax
  4137f6:	scas   eax,DWORD PTR es:[edi]
  4137f7:	push   edi
  4137f8:	add    bh,ch
  4137fa:	imul   edx,DWORD PTR [edi-0x3],0x50579665
  413801:	inc    DWORD PTR [edx+0x30]
  413804:	out    0x3,al
  413806:	cmp    ebx,ecx
  413808:	(bad)  
  413809:	call   0x3ea4a9
  41380e:	fwait
  41380f:	push   cs
  413810:	mov    esi,0xfeca98b9
  413815:	push   DWORD PTR [ebp-0x47]
  413818:	xor    eax,0xff1ef207
  41381d:	jne    0x41389a
  41381f:	retf   0x874
  413822:	outs   dx,DWORD PTR ds:[esi]
  413823:	dec    eax
  413824:	push   edx
  413825:	(bad)  
  413826:	mov    eax,0x63c2c76a
  41382b:	push   edi
  41382c:	push   ebx
  41382d:	mov    ebp,DWORD PTR [ebx-0x2b173e22]
  413833:	and    al,0x57
  413835:	dec    ebx
  413836:	es pop edi
  413838:	add    BYTE PTR [ebp+0x63],dh
  41383b:	lock mov edi,0x55570c
  413841:	push   0x57
  413843:	push   ebp
  413844:	std    
  413845:	inc    DWORD PTR [eax]
	...
  41386f:	add    BYTE PTR [edx],dh
  413871:	xor    ebp,DWORD PTR [eax+0x0]
  413874:	cmp    eax,0x5795e857
  413879:	push   edi
  41387a:	add    BYTE PTR [ecx+0x75fee6d2],cl
  413880:	lahf   
  413881:	(bad)  
  413882:	aam    0x54
  413884:	mov    DWORD PTR ds:[eax-0x6f5f7c78],edx
  41388b:	je     0x413893
  41388d:	call   0x7490:0x7164fc16
  413894:	inc    edx
  413895:	push   ds
  413896:	add    ch,BYTE PTR [edx+0x3e]
  413899:	pushf  
  41389a:	adc    al,0x40
  41389c:	ds inc esp
  41389e:	jg     0x4138e4
  4138a0:	shl    ah,cl
  4138a2:	sbb    eax,DWORD PTR [eax]
  4138a4:	fs inc esp
  4138a6:	sbb    al,0x12
  4138a8:	push   esp
  4138a9:	inc    esp
  4138aa:	xchg   ecx,eax
  4138ab:	je     0x41386f
  4138ad:	pop    ecx
  4138ae:	not    BYTE PTR [esi+0x5]
  4138b1:	add    eax,DWORD PTR [edx]
  4138b3:	test   DWORD PTR [esi+0x39],edi
  4138b6:	jp     0x41383f
  4138b8:	ds inc esp
  4138ba:	add    cl,BYTE PTR [ebx+0x117a100b]
  4138c0:	retf   
  4138c1:	ja     0x413857
  4138c3:	dec    edi
  4138c4:	and    al,0x44
  4138c6:	sbb    BYTE PTR [edx],dl
  4138c8:	adc    al,0x44
  4138ca:	sbb    ah,BYTE PTR [eax+ebx*1]
  4138cd:	add    DWORD PTR [edi+edi*8],0xfffffff3
  4138d1:	out    0x8d,eax
  4138d3:	push   ecx
	...
  4138fc:	add    BYTE PTR [eax],al
  4138fe:	dec    esi
  4138ff:	mov    edi,0x10977c4
  413904:	sbb    al,dh
  413906:	push   esi
  413907:	test   BYTE PTR [eax-0x1],al
  41390a:	pop    ecx
  41390b:	stos   DWORD PTR es:[edi],eax
  41390c:	inc    edi
  41390d:	call   0x485a3d57
  413912:	dec    ecx
  413913:	inc    edi
  413914:	pushf  
  413915:	out    0xd2,eax
  413917:	dec    edi
  413918:	(bad)  
  413919:	inc    bh
  41391b:	jbe    0x4138bd
  41391d:	(bad)  
  41391e:	stos   DWORD PTR es:[edi],eax
  41391f:	mov    ah,0x9c
  413921:	push   edx
  413922:	js     0x4138e5
  413924:	(bad)  
  413925:	(bad)  
  413926:	stos   DWORD PTR es:[edi],eax
  413927:	pop    ebx
  413928:	dec    edi
  413929:	(bad)  
  41392a:	xchg   edx,eax
  41392b:	aas    
  41392c:	pop    edi
  41392d:	sbb    DWORD PTR [esi],ecx
  41392f:	inc    ebx
  413930:	sub    eax,0xe3320940
  413935:	ret    
  413936:	lea    edx,[esi-0x31]
  413939:	add    edi,DWORD PTR [esi]
  41393b:	inc    edx
  41393c:	jle    0x4138cd
  41393e:	push   0x63
  413940:	aas    
  413941:	mov    al,0x79
  413943:	xor    ch,BYTE PTR [edi]
  413945:	(bad)
  413949:	sbb    edx,ebp
  41394b:	xor    DWORD PTR [ebp-0x47a92605],edx
  413951:	mov    cs,eax
  413953:	xor    DWORD PTR [ebp-0x64b82661],edx
  413959:	mov    ?,WORD PTR [eax-0x666c8acf]
  41395f:	fisub  WORD PTR [edx+0x8e]
	...
  413989:	add    BYTE PTR [eax],al
  41398b:	add    BYTE PTR [eax-0x4b686b1b],ch
  413991:	dec    esp
  413992:	out    0x18,al
  413994:	xchg   edx,eax
  413995:	xor    DWORD PTR [edx],edi
  413997:	cld    
  413998:	nop
  413999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399a:	rcr    DWORD PTR [ebx-0x71317279],cl
  4139a0:	jbe    0x4139be
  4139a2:	hlt    
  4139a3:	add    edx,DWORD PTR [ebx]
  4139a5:	out    0xcb,al
  4139a7:	mov    gs,edx
  4139a9:	pop    esi
  4139aa:	mov    edi,0xaf320642
  4139af:	cli    
  4139b0:	mov    eax,ds:0x471bd0a6
  4139b5:	mov    ecx,0x42ee0428
  4139ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139bb:	ss dec ecx
  4139bd:	xor    DWORD PTR [eax],edi
  4139bf:	sbb    al,0x8c
  4139c1:	sbb    eax,0x5ba60428
  4139c6:	out    0x9e,eax
  4139c8:	repz ret 
  4139ca:	add    dh,dl
  4139cc:	arpl   WORD PTR [edx-0x584ee700],bx
  4139d2:	or     BYTE PTR [ecx+0x17],dl
  4139d5:	mov    dh,0xfd
  4139d7:	pop    esi
  4139d8:	mov    ch,0xee
  4139da:	push   ecx
  4139db:	push   esi
  4139dc:	mov    eax,0xa5dd7431
  4139e1:	pop    esi
  4139e2:	pop    eax
  4139e3:	inc    esi
  4139e4:	enter  0xc065,0xb5
  4139e8:	adc    bh,BYTE PTR [ecx+0x5b82cf10]
  4139ee:	push   eax
  4139ef:	inc    ecx
	...
  413a18:	add    BYTE PTR [eax],al
  413a1a:	push   edi
  413a1b:	mov    ebp,edi
  413a1d:	es or  eax,0x7d2ab2c3
  413a23:	pop    ebx
  413a24:	push   0xbf403de9
  413a29:	adc    eax,0x6de93fb6
  413a2f:	xor    BYTE PTR [ecx+esi*8-0x2b],dh
  413a33:	pop    es
  413a34:	jnp    0x413a2c
  413a36:	mov    ebx,0xb09a8838
  413a3b:	xor    eax,ecx
  413a3d:	stos   DWORD PTR es:[edi],eax
  413a3e:	call   0xc4dd:0xde725530
  413a45:	aad    0x24
  413a47:	pop    ebx
  413a48:	push   0xd
  413a4a:	mov    bl,0xa7
  413a4c:	or     cl,dl
  413a4e:	pop    ss
  413a4f:	mov    al,ds:0x96f5befd
  413a54:	cld    
  413a55:	inc    ebx
  413a56:	push   esp
  413a57:	xor    DWORD PTR [ecx+eiz*8-0x3b],esi
  413a5b:	sar    ch,0xa6
  413a5e:	retf   
  413a5f:	ret    0x9e21
  413a62:	sub    DWORD PTR [ebx-0x18],esp
  413a65:	btc    DWORD PTR [ecx],esi
  413a68:	inc    BYTE PTR [ebx]
  413a6a:	dec    esi
  413a6b:	xor    DWORD PTR [eax+eax*1+0x2f],esi
  413a6f:	aam    0x59
  413a71:	push   DWORD PTR [eax-0x4c8a0122]
  413a77:	fidiv  WORD PTR [eax+ecx*1-0x41]
  413a7b:	pop    ss
  413a7c:	dec    esi
  413a7d:	inc    DWORD PTR [eax]
	...
  413aa7:	add    BYTE PTR [eax+0x2704bff4],ah
  413aad:	imul   ecx,DWORD PTR [ecx+0xc4870ec],0xfd6687e8
  413ab7:	(bad)  
  413ab8:	in     al,dx
  413ab9:	sbb    esi,DWORD PTR [edx+0x24]
  413abc:	clts   
  413abe:	fs inc ecx
  413ac0:	xlat   BYTE PTR ds:[ebx]
  413ac1:	imul   ebp,eax,0x1c
  413ac4:	enter  0xfede,0x50
  413ac8:	scas   eax,DWORD PTR es:[edi]
  413ac9:	pop    ebx
  413aca:	add    bh,ch
  413acc:	jno    0x413b1d
  413ace:	inc    edi
  413acf:	xchg   si,ax
  413ad1:	pop    ebx
  413ad2:	push   eax
  413ad3:	jmp    FWORD PTR [edx-0x3cf819cd]
  413ad9:	fdivp  st(6),st
  413adb:	call   0x3ea577
  413ae0:	pop    esi
  413ae1:	sbb    eax,0xb2ca0006
  413ae6:	jmp    0x6821266e
  413aeb:	add    ch,ch
  413aed:	pop    ds
  413aee:	push   DWORD PTR [ebp-0x61]
  413af1:	shr    DWORD PTR [edi],cl
  413af3:	push   eax
  413af4:	jo     0x413ad4
  413af6:	mov    BYTE PTR [ebp-0x7d],al
  413af9:	push   ecx
  413afa:	sbb    bh,bh
  413afc:	sub    ch,BYTE PTR [edi]
  413afe:	out    0xaa,al
  413b00:	mov    al,0xde
  413b02:	(bad)  
  413b03:	push   0x34
  413b05:	fidiv  WORD PTR [eax+ecx*1-0x51]
  413b09:	mov    ebx,0xfffe
	...
  413b36:	mov    al,0x51
  413b38:	sbb    al,0xff
  413b3a:	ds dec edi
  413b3c:	cld    
  413b3d:	out    0xa8,eax
  413b3f:	loopne 0x413acd
  413b41:	(bad)  
  413b42:	cmp    DWORD PTR [eax],esi
  413b44:	mov    ?,esi
  413b46:	stos   DWORD PTR es:[edi],eax
  413b47:	sub    al,0x9a
  413b49:	dec    ebx
  413b4a:	mov    fs,WORD PTR [ebp+0x38fcc88c]
  413b50:	add    dl,BYTE PTR [ebp-0x3b]
  413b53:	mov    BYTE PTR [eax+0x17e616c3],al
  413b59:	add    BYTE PTR [esi+eax*2-0x63c98b75],dl
  413b60:	pushf  
  413b61:	dec    esi
  413b62:	stc    
  413b63:	xchg   ebp,eax
  413b64:	jp     0x413baa
  413b66:	repnz test eax,0x37648ce
  413b6c:	add    al,BYTE PTR [eax+0x47164421]
  413b72:	repz and ax,WORD PTR [ecx+0x3e]
  413b77:	in     eax,0x99
  413b79:	adc    DWORD PTR [ecx],ecx
  413b7b:	inc    esp
  413b7c:	add    cl,BYTE PTR [ebx]
  413b7e:	dec    al
  413b80:	xlat   BYTE PTR ds:[ebx]
  413b81:	push   esi
  413b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b83:	fisubr WORD PTR ds:0xc229b1ff
  413b89:	jae    0x413be9
  413b8b:	mov    ebx,0x4416f846
  413b90:	add    ch,bh
  413b92:	fmul   DWORD PTR [esi+ebp*1-0x74bc009a]
  413b99:	je     0x413b9b
	...
  413bc3:	add    BYTE PTR [esi-0x69f7effb],al
  413bc9:	call   0xf810:0x1579ff0d
  413bd0:	data16 je 0x413c09
  413bd3:	jmp    FWORD PTR [ecx-0x18]
  413bd6:	aad    0xbf
  413bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd9:	std    
  413bda:	mov    esi,edi
  413bdc:	pop    ecx
  413bdd:	pop    ebx
  413bde:	cdq    
  413bdf:	pop    edx
  413be0:	or     DWORD PTR [esi+0x14],edx
  413be3:	dec    ebp
  413be4:	dec    eax
  413be5:	test   al,0x93
  413be7:	mov    ecx,edx
  413be9:	bound  edi,QWORD PTR [edi-0x4f]
  413bec:	mov    BYTE PTR [esi],ch
  413bee:	xchg   DWORD PTR [ebx],ebp
  413bf0:	pop    es
  413bf1:	sbb    esp,esp
  413bf3:	add    edx,DWORD PTR [ebx-0x2787c1e]
  413bf9:	ss pop ss
  413bfb:	push   ds
  413bfc:	shl    DWORD PTR ds:[esi],0x8b
  413c00:	mov    ah,BYTE PTR [ebx+0x4f]
  413c03:	adc    edi,DWORD PTR [ecx+0x2e]
  413c06:	push   edi
  413c07:	jge    0x413c83
  413c09:	das    
  413c0a:	arpl   cx,cx
  413c0c:	xchg   BYTE PTR [ebx+0x6dbe03a8],ah
  413c12:	out    0xf,eax
  413c14:	add    ebx,0x5b7f2196
  413c1a:	xchg   esi,eax
  413c1b:	fwait
  413c1c:	mov    bh,0x6c
  413c1e:	out    0x3,eax
  413c20:	inc    ebp
  413c21:	sbb    edx,DWORD PTR [ebp+ebx*8+0x2f064370]
	...
  413c50:	add    BYTE PTR [eax],al
  413c52:	shr    DWORD PTR ds:0x7b2dc3e3,0x70
  413c59:	inc    ecx
  413c5a:	mov    dh,0xc2
  413c5c:	out    0x3,eax
  413c5e:	cdq    
  413c5f:	in     al,dx
  413c60:	jg     0x413c7d
  413c62:	sbb    BYTE PTR [edi+eiz*8-0x18cced76],bl
  413c69:	adc    BYTE PTR [esi+0x43],al
  413c6c:	fimul  DWORD PTR ds:0x10d72d89
  413c72:	xchg   BYTE PTR [edx-0x30],al
  413c75:	xor    al,0x79
  413c77:	sub    eax,0xf3b1d6c4
  413c7c:	mov    esi,0x12d688a
  413c81:	mov    ebx,0x34056607
  413c86:	or     esi,DWORD PTR [esi-0x104b1700]
  413c8c:	push   0x9c1c11
  413c91:	add    DWORD PTR [ebx-0x49],edi
  413c94:	aas    
  413c95:	jmp    0x9149e45e
  413c9a:	sub    eax,0x4b7efdb2
  413c9f:	pop    ebx
  413ca0:	push   0x9a5ff8
  413ca5:	add    DWORD PTR [esi-0x3b16c04a],esp
  413cab:	addr16 ret 
  413cad:	mov    cl,0x82
  413caf:	pop    ebx
  413cb0:	call   0xfe6d8df2
  413cb5:	pusha  
	...
  413cde:	add    BYTE PTR [eax],al
  413ce0:	jle    0x413d21
  413ce2:	imul   ebp,ecx,0x55
  413ce5:	lods   eax,DWORD PTR ds:[esi]
  413ce6:	data16 test al,0x3d
  413ce9:	ret    
  413cea:	pushf  
  413ceb:	iret   
  413cec:	jp     0x413d49
  413cee:	std    
  413cef:	hlt    
  413cf0:	(bad)  
  413cf1:	xchg   esp,eax
  413cf2:	aas    
  413cf3:	jmp    0x1e962fad
  413cf8:	mov    ah,0xe3
  413cfa:	inc    ebx
  413cfb:	sbb    eax,0x63685b23
  413d00:	pop    edi
  413d01:	call   0xe93f:0xb6199100
  413d08:	mov    ah,0x67
  413d0a:	ret    
  413d0b:	mov    eax,ds:0x49e85afa
  413d10:	imul   ebp,DWORD PTR [esi+edi*8],0x8c2b5170
  413d17:	and    al,0xde
  413d19:	pushf  
  413d1a:	push   0x9a5c7a
  413d1f:	inc    ecx
  413d20:	out    0xb5,al
  413d22:	aas    
  413d23:	add    BYTE PTR [edi-0x1d],ah
  413d26:	xor    al,0xc5
  413d28:	das    
  413d29:	cwde   
  413d2a:	add    al,ch
  413d2c:	shr    DWORD PTR [edx-0x3],cl
  413d2f:	(bad)  
  413d30:	fisubr WORD PTR [ebx-0x18]
  413d33:	sbb    DWORD PTR [edx],0xffffffcb
  413d36:	std    
  413d37:	jae    0x413d48
  413d39:	(bad)  
  413d3a:	jl     0x413d2c
  413d3c:	push   edi
  413d3d:	pop    esp
  413d3e:	inc    edx
  413d3f:	or     DWORD PTR [edx-0x2d],0xfffffffd
  413d43:	jae    0x413d45
	...
  413d6d:	add    bl,bh
  413d6f:	dec    edi
  413d70:	(bad)  
  413d71:	(bad)  
  413d72:	mov    eax,0x1f75fea0
  413d77:	sar    dl,1
  413d79:	dec    ebp
  413d7a:	test   al,0xe2
  413d7c:	(bad)  
  413d7d:	jne    0x413df2
  413d7f:	loop   0x413df5
  413d81:	or     BYTE PTR [edi+0x65],ch
  413d84:	dec    esi
  413d85:	jmp    FWORD PTR [eax-0x1e]
  413d88:	je     0x413d7a
  413d8a:	mov    BYTE PTR [eax+ecx*1-0x18],bl
  413d8e:	mov    al,ds:0x28fffd71
  413d93:	pop    esp
  413d94:	in     al,dx
  413d95:	jmp    DWORD PTR [edx-0x46c319d1]
  413d9b:	loop   0x413d9b
  413d9d:	push   DWORD PTR [edx+0x2f75fecb]
  413da3:	loop   0x413e19
  413da5:	or     BYTE PTR [edi],bh
  413da7:	push   ebp
  413da8:	dec    esi
  413da9:	dec    DWORD PTR [eax-0x1e]
  413dac:	je     0x413d9a
  413dae:	dec    edi
  413daf:	es push ecx
  413db1:	jmp    FWORD PTR [eax+0x3ff474e2]
  413db7:	cs push ecx
  413db9:	jmp    FWORD PTR [eax+0x6ff074e2]
  413dbf:	push   esi
  413dc0:	dec    edi
  413dc1:	jmp    FWORD PTR [eax-0x1e]
  413dc4:	je     0x413dae
  413dc6:	sbb    cl,BYTE PTR ds:[ebp-0x76e386b1]
  413dcd:	je     0x413e41
  413dcf:	adc    al,0xf
  413dd1:	or     BYTE PTR [eax],al
	...
  413dfb:	add    BYTE PTR [esi-0x65],dl
  413dfe:	cmp    bh,bh
  413e00:	popa   
  413e01:	inc    esp
  413e02:	mov    ecx,0x2f4242c1
  413e07:	mov    esp,DWORD PTR [edx-0x40]
  413e0a:	mov    ebp,0x1c41d4fb
  413e0f:	inc    eax
  413e10:	inc    ecx
  413e11:	dec    esi
  413e12:	cld    
  413e13:	out    0x4f,eax
  413e15:	dec    edx
  413e16:	xchg   esi,edi
  413e18:	(bad)  
  413e19:	ja     0x413da3
  413e1b:	imul   edi,DWORD PTR [esi],0xe68044e
  413e21:	pop    ebx
  413e22:	inc    ecx
  413e23:	add    BYTE PTR [esi-0x41fffdcc],ah
  413e29:	mov    WORD PTR [edx+edx*2-0x400375f7],gs
  413e30:	mov    dl,BYTE PTR [ebp+0x34]
  413e33:	call   0xfeca2cfd
  413e38:	inc    ebp
  413e39:	je     0x413e48
  413e3b:	sbb    DWORD PTR [esi-0x2efffdf4],ecx
  413e41:	mov    dl,0x19
  413e43:	retf   
  413e44:	pusha  
  413e45:	repz add DWORD PTR [eax-0x2f],edx
  413e49:	(bad)  
  413e4a:	stc    
  413e4b:	out    0xad,eax
  413e4d:	sti    
  413e4e:	mov    dh,bh
  413e50:	(bad)  
  413e51:	mov    al,0x31
  413e53:	(bad)  
  413e54:	mov    ecx,0xb1fc0e59
  413e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e5a:	stc    
  413e5b:	out    0x39,eax
  413e5d:	cli    
  413e5e:	mov    dh,bh
	...
  413e88:	add    BYTE PTR [eax],al
  413e8a:	ja     0x413f02
  413e8c:	std    
  413e8d:	push   edx
  413e8f:	mov    esp,0x5b7a8295
  413e94:	jecxz  0x413ec5
  413e96:	adc    al,0x5b
  413e98:	push   ecx
  413e99:	inc    ebp
  413e9a:	xor    DWORD PTR [eax-0x67506421],0xa0c687ce
  413ea4:	ret    
  413ea5:	jnp    0x413ed1
  413ea7:	xchg   esp,eax
  413ea8:	das    
  413ea9:	inc    ebp
  413eaa:	ds fcomi st,st(6)
  413ead:	add    edx,edx
  413eaf:	call   0x2ee7:0x9bdb963f
  413eb6:	push   esi
  413eb7:	adc    ah,bl
  413eb9:	add    edi,DWORD PTR [esi]
  413ebb:	push   esi
  413ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ebd:	adc    BYTE PTR [ebp-0x6e],bl
  413ec0:	jg     0x413e9f
  413ec2:	xchg   edi,eax
  413ec3:	sub    al,BYTE PTR [edi-0x1f511605]
  413ec9:	xor    edx,DWORD PTR [esi-0x246918a5]
  413ecf:	mov    dl,0x73
  413ed1:	push   ds
  413ed2:	jg     0x413f2f
  413ed4:	mov    bh,0x86
  413ed6:	xchg   edx,eax
  413ed7:	push   ebx
  413ed8:	dec    edi
  413ed9:	aad    0x86
  413edb:	sub    dl,BYTE PTR [edi-0x64]
  413ede:	aaa    
  413edf:	mov    ecx,DWORD PTR [esi-0x79]
  413ee2:	cmc    
  413ee3:	ins    DWORD PTR es:[edi],dx
  413ee4:	daa    
  413ee5:	dec    ebp
  413ee6:	call   0xefc87e14
  413eeb:	clc    
  413eec:	out    dx,eax
  413eed:	inc    BYTE PTR [eax]
	...
  413f17:	add    BYTE PTR [edx+0x1b],dl
  413f1a:	das    
  413f1b:	adc    edx,edx
  413f1d:	sub    DWORD PTR [ebp-0x53361e05],ebx
  413f23:	xchg   al,al
  413f25:	mov    DWORD PTR [eax],esp
  413f27:	ret    0x5b3d
  413f2a:	mov    ah,0x7a
  413f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2d:	(bad)  [ebx]
  413f2f:	mov    BYTE PTR [eax],dl
  413f31:	mov    ch,0xe7
  413f33:	sbb    esp,edi
  413f35:	sub    DWORD PTR [ecx],eax
  413f37:	jl     0x413ece
  413f39:	inc    ecx
  413f3a:	inc    eax
  413f3b:	pushf  
  413f3c:	mov    eax,0xb62c8828
  413f41:	aam    0x3b
  413f43:	xor    BYTE PTR [edx-0x64],al
  413f46:	add    BYTE PTR [ecx-0x80],ch
  413f49:	sub    DWORD PTR [edx+0x29],esi
  413f4c:	push   edx
  413f4d:	pop    edi
  413f4e:	sub    BYTE PTR gs:[edx-0x6e],al
  413f52:	call   0xfe6ab59c
  413f57:	loop   0x413fd6
  413f59:	lods   eax,DWORD PTR ds:[esi]
  413f5a:	and    DWORD PTR [esi],edx
  413f5c:	mov    dl,0xf1
  413f5e:	push   edi
  413f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f60:	rcl    BYTE PTR [eax+eax*8+0x15],0x53
  413f65:	cdq    
  413f66:	push   0xbf383de9
  413f6b:	add    DWORD PTR ds:0x6de93fc2,esi
  413f71:	sub    BYTE PTR [ecx+esi*8-0x3b],dh
  413f75:	call   0x4101b5f2
  413f7a:	enter  0x1e,0x0
	...
  413fa6:	mov    ecx,0x21afd29
  413fab:	in     al,0xfd
  413fad:	pop    esi
  413fae:	mov    eax,0x587f329
  413fb3:	bound  esi,QWORD PTR [ebx+0x29]
  413fb6:	push   edi
  413fb7:	jl     0x413fa1
  413fb9:	cmc    
  413fba:	sbb    DWORD PTR [eax],ebp
  413fbc:	(bad)  
  413fbd:	repnz std 
  413fbf:	lods   al,BYTE PTR ds:[esi]
  413fc0:	and    al,0xc1
  413fc2:	into   
  413fc3:	sar    DWORD PTR [edi],0xe9
  413fc6:	or     eax,0xc0ba9933
  413fcb:	sub    DWORD PTR [ecx-0x6f],edx
  413fce:	cmp    eax,0x5557ed5b
  413fd3:	push   esp
  413fd4:	gs test al,0x3d
  413fd7:	mov    edi,ebp
  413fd9:	add    BYTE PTR [edx],ch
  413fdb:	and    al,0xe6
  413fdd:	cmp    DWORD PTR [edi+0x23e8fee1],0x71
  413fe4:	std    
  413fe5:	(bad)  
  413fe6:	mov    ebp,0x44dde63d
  413feb:	fdivp  st(6),st
  413fed:	or     edx,edi
  413fef:	dec    ebx
  413ff0:	and    al,0x68
  413ff2:	jb     0x41403b
  413ff4:	aas    
  413ff5:	add    BYTE PTR [edi],dh
  413ff7:	(bad)  
  413ff8:	push   0x4dde8053
  413ffd:	push   0xbeed5c57
  414002:	jmp    DWORD PTR [ecx]
  414004:	addr16 inc ecx
  414006:	ins    BYTE PTR es:[di],dx
  414008:	std    
  414009:	jne    0x41400b
	...
  414033:	add    BYTE PTR [edi-0x3c],cl
  414036:	push   ecx
  414037:	js     0x413fd9
  414039:	fsubrp st(5),st
  41403b:	pop    ebp
  41403c:	pusha  
  41403d:	fdivp  st(6),st
  41403f:	dec    DWORD PTR [edx-0x2d]
  414042:	(bad)  
  414043:	jne    0x414074
  414045:	(bad)  
  414046:	int    0x4c
  414048:	mov    al,ds:0xe5c95ede
  41404d:	pop    edx
  41404e:	add    BYTE PTR [ebp-0x64],dl
  414051:	ret    
  414052:	add    ah,0x67
  414055:	mov    al,0x44
  414057:	lock (bad) 
  414059:	fidiv  WORD PTR [esp+ecx*1+0x7f]
  41405d:	(bad)  
  41405e:	push   ecx
  41405f:	inc    DWORD PTR [eax-0x1a8b41de]
  414065:	fidivr DWORD PTR [esp+edi*8-0x2b]
  414069:	push   ebp
  41406a:	and    DWORD PTR [ebx-0x7e9c2c56],ecx
  414070:	iret   
  414071:	mov    ebp,cr6
  414074:	fidiv  WORD PTR ds:[eax+edx*1+0x20]
  414079:	pop    eax
  41407a:	or     al,ch
  41407c:	ds jg  0x4140b6
  41407f:	push   DWORD PTR [ecx-0x5603f2a8]
  414085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414086:	mov    esi,edi
  414088:	sub    ebp,DWORD PTR [edx]
  41408a:	call   0xfb8c:0x853105f4
  414091:	and    DWORD PTR [edx],esi
  414093:	call   0xfec4a7e3
	...
  4140c0:	add    BYTE PTR [eax],al
  4140c2:	ja     0x4140b7
  4140c4:	cmc    
  4140c5:	call   DWORD PTR [edx]
  4140c7:	mov    ebp,0x97a8295
  4140cc:	sbb    BYTE PTR [eax],al
  4140ce:	aam    0x74
  4140d0:	xor    DWORD PTR [esi+esi*1+0xa],0xffffffdd
  4140d5:	dec    ebx
  4140d6:	pop    ecx
  4140d7:	lock jp 0x41411e
  4140da:	push   edx
  4140db:	fwait
  4140dc:	add    al,0x6a
  4140de:	ds dec edx
  4140e0:	xlat   BYTE PTR ds:[ebx]
  4140e1:	push   WORD PTR [ecx]
  4140e4:	sbb    al,BYTE PTR [edx]
  4140e6:	ds xor al,0x82
  4140e9:	out    0x2f,eax
  4140eb:	fs cmp esi,0x35
  4140ef:	hlt    
  4140f0:	or     eax,0x8c7fb73f
  4140f5:	addr16 xchg ecx,eax
  4140f7:	push   ebp
  4140f8:	inc    ecx
  4140f9:	add    BYTE PTR [ecx],dl
  4140fb:	xor    BYTE PTR [edx+0x47947e7],cl
  414101:	add    BYTE PTR ds:0xf9230d74,dh
  414107:	pop    es
  414108:	mov    ah,bh
  41410a:	(bad)
  41410d:	dec    BYTE PTR [esi+0x7ec9310c]
  414113:	xor    al,0x1a
  414115:	add    BYTE PTR [esi],bh
  414117:	popf   
  414118:	inc    ebx
  414119:	imul   edi,DWORD PTR [esi],0x367484c4
  41411f:	pop    ebx
  414120:	setns  BYTE PTR [edx+0x26]
  414124:	pop    ds
  414125:	fwait
	...
  41414e:	add    BYTE PTR [eax],al
  414150:	fist   DWORD PTR [ebp-0x4f4f7bea]
  414156:	setnp  bl
  414159:	xchg   ebp,eax
  41415a:	push   es
  41415b:	test   BYTE PTR [eax+0x1283fbb0],ah
  414161:	push   ebx
  414162:	(bad)  
  414163:	stc    
  414164:	add    eax,0x7fb9ef26
  414169:	pop    edi
  41416a:	out    0xd8,eax
  41416c:	mov    ah,0x37
  41416e:	imul   ecx,DWORD PTR [eax+0x75],0xffffffb1
  414172:	out    0xed,eax
  414174:	std    
  414175:	and    eax,0xf8560c55
  41417a:	xor    al,BYTE PTR [ebx-0x7fdb2ba0]
  414180:	loope  0x4141dc
  414182:	out    0x72,eax
  414184:	xchg   ebx,eax
  414185:	mov    bl,0x61
  414187:	jmp    0x414187
  414189:	pop    edx
  41418a:	lsl    ebx,cx
  41418d:	fwait
  41418e:	out    0x82,eax
  414190:	mov    dl,0x53
  414192:	jg     0x414130
  414194:	test   al,0x26
  414196:	pop    DWORD PTR [ebx-0x678d84e]
  41419c:	cmp    DWORD PTR [ebx],esi
  41419e:	scas   al,BYTE PTR es:[edi]
  41419f:	iret   
  4141a0:	sbb    BYTE PTR [esi],ah
  4141a2:	mov    eax,ds:0x145b3d46
  4141a7:	(bad)  
  4141a8:	adc    eax,0x997c2bda
  4141ad:	pop    ebx
  4141ae:	out    0x72,eax
  4141b0:	mov    ebx,0xbdd25
	...
  4141dd:	add    dh,ah
  4141df:	xor    BYTE PTR [edx-0x42da177e],ah
  4141e5:	psraw  mm5,QWORD PTR [edi-0x6d819411]
  4141ec:	add    BYTE PTR [esi],dh
  4141ee:	mov    ebp,0xbcd97424
  4141f3:	scas   al,BYTE PTR es:[edi]
  4141f4:	or     BYTE PTR [ecx],dl
  4141f6:	add    al,0x92
  4141f8:	std    
  4141f9:	push   ds
  4141fa:	mov    ebp,0xb71618ae
  4141ff:	dec    ecx
  414200:	std    
  414201:	xchg   esp,eax
  414202:	xor    eax,0xbcb3fd33
  414207:	and    al,0x69
  414209:	xor    BYTE PTR [ebp-0x6909ff66],ah
  41420f:	push   ebp
  414210:	call   0x9c8d82
  414215:	repnz std 
  414217:	scas   al,BYTE PTR es:[edi]
  414218:	arpl   WORD PTR [ecx+0x9],dx
  41421b:	mov    ebp,0x15e5e93f
  414220:	cmp    ecx,ebp
  414222:	cmp    eax,0x55c143d4
  414227:	adc    BYTE PTR [esi+0x28],ah
  41422a:	inc    edx
  41422b:	es je  0x414207
  41422e:	in     eax,0x87
  414230:	cmp    ch,cl
  414232:	cmp    eax,0x341dc052
  414237:	pop    edx
  414238:	inc    ebx
  414239:	mov    eax,ds:0x96109fca
  41423e:	ss push ebp
  414240:	call   0x414313
	...
  414269:	add    BYTE PTR [eax],al
  41426b:	add    BYTE PTR [eax],bl
  41426d:	es (bad) 
  41426f:	push   0xffffffa5
  414271:	and    eax,0x9fcab575
  414276:	cld    
  414277:	add    DWORD PTR [ebx],edi
  414279:	pop    ebx
  41427a:	in     eax,dx
  41427b:	das    
  41427c:	mov    esp,0x95108af
  414281:	xchg   ebx,eax
  414282:	std    
  414283:	pop    esi
  414284:	mov    esp,0xf6560caf
  414289:	pop    esp
  41428a:	call   0xfe673db1
  41428f:	add    BYTE PTR [eax+0x23],bh
  414292:	cli    
  414293:	call   DWORD PTR [edx-0x62a117b0]
  414299:	fsin   
  41429b:	call   DWORD PTR [edx-0x3c8a02c0]
  4142a1:	fnstenv [eax+ecx*1+0x4f]
  4142a5:	rol    BYTE PTR [edi-0x1],cl
  4142a8:	dec    eax
  4142a9:	xchg   edi,eax
  4142aa:	mov    edi,0x8b039714
  4142af:	in     al,dx
  4142b0:	adc    al,0x9c
  4142b2:	cmc    
  4142b3:	push   esi
  4142b4:	and    al,0x9b
  4142b6:	imul   ecx,DWORD PTR [ebx-0x1a],0x1b740058
  4142bd:	fnstsw WORD PTR [edi+eiz*2]
  4142c0:	dec    esp
  4142c1:	sbb    dh,bh
  4142c3:	call   DWORD PTR [ebx]
  4142c5:	cmp    DWORD PTR cs:0x4115e8,0x57
  4142cd:	sub    al,0x68
  4142cf:	mov    DWORD PTR [eax],0x0
	...
  4142f9:	add    BYTE PTR [edx],dl
  4142fb:	(bad)  
  4142fd:	jmp    DWORD PTR [edi+0x58]
  414300:	lds    eax,FWORD PTR [ebp-0x71]
  414303:	pop    edi
  414304:	add    BYTE PTR [eax],al
  414306:	push   edi
  414307:	aad    0x44
  414309:	cld    
  41430a:	pop    es
  41430b:	aam    0x44
  41430d:	clc    
  41430e:	ja     0x414345
  414310:	(bad)  
  414311:	addr16 mov bl,0x32
  414314:	inc    ecx
  414315:	add    BYTE PTR [eax+0x564b654b],bh
  41431b:	pop    edi
  41431c:	or     eax,eax
  41431e:	adc    ebx,DWORD PTR [edi]
  414320:	cmp    DWORD PTR [ebp-0x71],0x5f
  414324:	je     0x414363
  414326:	xchg   esp,eax
  414327:	and    al,0xfa
  414329:	add    bl,ah
  41432b:	bound  ecx,QWORD PTR [ecx+0x1bb69b75]
  414331:	push   esi
  414332:	ds mov ecx,0x2a70ff3a
  414338:	xor    DWORD PTR [ebp+0x42],0xd907fa9d
  41433f:	jmp    0x414372
  414341:	dec    DWORD PTR [ebx+0x3a]
  414344:	push   0xffffffdd
  414346:	enter  0x7f74,0x5d
  41434a:	shr    esi,0x79
  41434d:	add    BYTE PTR [eax-0x49837ac3],0x31
  414354:	test   BYTE PTR [edi*4-0x768afded],0x5c
  41435c:	cmc    
  41435d:	sti    
	...
  414386:	add    BYTE PTR [eax],al
  414388:	cdq    
  414389:	push   cs
  41438a:	in     eax,dx
  41438b:	dec    edx
  41438c:	push   DWORD PTR [ecx]
  41438e:	loopne 0x414358
  414390:	jl     0x4143cf
  414392:	add    dl,BYTE PTR [ebp-0x4b]
  414395:	or     eax,0x6072c385
  41439a:	inc    edi
  41439b:	inc    esp
  41439c:	jbe    0x4143cf
  41439e:	add    al,BYTE PTR [eax]
  4143a0:	ds std 
  4143a2:	(bad)  
  4143a3:	repz xor al,BYTE PTR ds:[edx]
  4143a7:	add    BYTE PTR [ecx+0x6e],bl
  4143aa:	adc    al,0x8f
  4143ac:	sti    
  4143ad:	in     eax,dx
  4143ae:	push   edx
  4143af:	ins    BYTE PTR es:[edi],dx
  4143b0:	dec    edx
  4143b1:	xchg   edi,eax
  4143b2:	add    al,0x6a
  4143b4:	ds dec eax
  4143b6:	add    al,0x6a
  4143b8:	ds shl esi,0xfb
  4143bc:	xor    DWORD PTR [eax+0x10],eax
  4143bf:	push   0x3e
  4143c1:	pop    esi
  4143c2:	add    al,0xe8
  4143c4:	inc    ebx
  4143c5:	sbb    al,0x2
  4143c7:	add    BYTE PTR [ebp-0xc],al
  4143ca:	cmc    
  4143cb:	xor    al,0x6e
  4143cd:	inc    esp
  4143ce:	ins    BYTE PTR es:[edi],dx
  4143cf:	loopne 0x41444b
  4143d1:	mov    cl,0x80
  4143d3:	mov    BYTE PTR [ebx+0x5b],bh
  4143d6:	pop    edi
  4143d7:	fisub  DWORD PTR [edi+0x5b]
  4143da:	rol    DWORD PTR [ebx],1
  4143dc:	(bad)  
  4143dd:	and    bl,ch
  4143df:	jnp    0x4143c9
  4143e1:	test   al,0x4b
  4143e3:	sub    BYTE PTR [edx+0x4f],0xd1
  4143e7:	add    esp,DWORD PTR [ebx+ebx*2+0x4f]
  4143eb:	js     0x4143ed
	...
  414415:	add    BYTE PTR [eax],cl
  414417:	pop    ebx
  414418:	out    0xc,eax
  41441a:	(bad)  
  41441b:	test   al,0xde
  41441d:	or     BYTE PTR [edx+0x23],0x10
  414421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414422:	add    eax,0xfa481f22
  414427:	and    ch,al
  414429:	add    edi,DWORD PTR [esi]
  41442b:	pop    ebx
  41442c:	push   0xfffffffe
  41442e:	test   eax,0x98d17b5b
  414433:	test   al,0xef
  414435:	or     BYTE PTR [edx],0x23
  414438:	add    BYTE PTR [eax+0xce75b51],al
  41443e:	jle    0x4143e7
  414440:	es aam 0x78
  414443:	test   al,0xef
  414445:	imul   ecx,DWORD PTR ds:0x703e76a,0x5e
  41444c:	test   al,0x8b
  41444e:	mov    DWORD PTR [esi],esi
  414450:	adc    al,BYTE PTR [ecx+edx*1+0x78283450]
  414457:	pop    ebx
  414458:	out    0xd2,eax
  41445a:	popa   
  41445b:	(bad)  
  41445c:	test   BYTE PTR [ebx],0x3e
  41445f:	push   esi
  414460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414461:	clc    
  414462:	push   edx
  414463:	mov    esi,DWORD PTR [edi]
  414465:	ins    BYTE PTR es:[edi],dx
  414466:	stos   BYTE PTR es:[edi],al
  414467:	(bad)  
  414468:	xchg   esi,eax
  414469:	jg     0x414421
  41446b:	xchg   edi,eax
  41446c:	xchg   ebx,eax
  41446d:	fisttp QWORD PTR [esi+0x6c77fd22]
  414473:	xor    ebx,DWORD PTR [esi-0x30]
  414476:	adc    BYTE PTR [edx],ah
  414478:	add    DWORD PTR [edx+0x0],eax
	...
  4144a2:	add    BYTE PTR [eax],al
  4144a4:	inc    eax
  4144a5:	fwait
  4144a6:	xor    BYTE PTR [ecx+0x66cfa83d],0xf7
  4144ad:	sub    ecx,ebp
  4144af:	test   eax,0x62fe2101
  4144b4:	imul   DWORD PTR ds:0x567c205a
  4144ba:	add    BYTE PTR [esp+eax*8+0x76258235],bl
  4144c1:	mov    BYTE PTR [ebp+0x6a],dl
  4144c4:	jg     0x414488
  4144c6:	dec    ecx
  4144c7:	test   al,0x3d
  4144c9:	pop    ebx
  4144ca:	jae    0x4144bb
  4144cc:	cwde   
  4144cd:	jg     0x414496
  4144cf:	sub    ecx,DWORD PTR [esi+0x5b]
  4144d2:	mov    ebp,DWORD PTR [ebp+ebp*1+0x3194fd92]
  4144d9:	xor    edi,DWORD PTR [eax+0xa211898]
  4144df:	sub    DWORD PTR [ecx-0x29],eax
  4144e2:	sub    ebp,eax
  4144e4:	cmp    eax,0x16c7f5b
  4144e9:	and    bh,dh
  4144eb:	stc    
  4144ec:	cmp    eax,0x3af68152
  4144f1:	pop    ebx
  4144f2:	add    dh,dl
  4144f4:	and    ax,0x54fe
  4144f8:	loop   0x414533
  4144fa:	inc    ebp
  4144fb:	sbb    al,0xd9
  4144fd:	and    BYTE PTR [edx],cl
  4144ff:	test   eax,0xe804d840
  414504:	cmp    eax,0x34fd5b
	...
  414531:	add    BYTE PTR [esi+0x25a17420],bh
  414537:	lock sub BYTE PTR gs:[edx],bh
  41453b:	xor    edx,edx
  41453d:	xchg   edi,eax
  41453e:	test   al,0x21
  414540:	mov    BYTE PTR [esi+ebp*4],ah
  414543:	and    DWORD PTR [eax+eax*1-0x3d],esi
  414547:	mov    eax,ds:0xc12ff874
  41454c:	inc    cx
  41454e:	pop    ss
  41454f:	mov    ch,0xbd
  414551:	(bad)  
  414552:	nop
  414553:	mov    eax,ds:0xa18f4588
  414558:	je     0x414556
  41455a:	nop
  41455b:	and    esi,esi
  41455d:	push   0x4139ce
  414562:	jg     0x41454f
  414564:	sti    
  414565:	inc    DWORD PTR [eax+0x64e444cf]
  41456b:	pop    ebx
  41456c:	in     al,dx
  41456d:	add    al,ah
  41456f:	fsubr  DWORD PTR [eax-0x7ea32900]
  414575:	jge    0x4145c6
  414577:	pop    esp
  414578:	or     eax,0x5c3084
  41457d:	add    BYTE PTR [ebx+ebx*2],dl
  414580:	in     al,0x0
  414582:	sbb    al,0x94
  414585:	add    BYTE PTR [edi+0x2f75fd5c],ah
  41458b:	mov    ah,0x61
  41458d:	ss xchg edi,eax
  41458f:	pop    esp
  414590:	mov    DWORD PTR [ebp+0x3f],esi
  414593:	aad    0xfb
  414595:	mov    eax,DWORD PTR [eax]
	...
  4145bf:	add    BYTE PTR [edi-0x73ae1774],ch
  4145c5:	jno    0x41462d
  4145c7:	lods   eax,DWORD PTR ds:[esi]
  4145c8:	push   ebx
  4145c9:	addr16 jb 0x4145d4
  4145cc:	xor    esp,DWORD PTR [ebp+esi*2+0x4]
  4145d0:	xor    esp,DWORD PTR [edi-0x17]
  4145d3:	add    al,0x43
  4145d5:	sbb    al,0x2
  4145d7:	or     dl,bh
  4145d9:	fisubr DWORD PTR ds:0xf9dc5d72
  4145df:	cmp    DWORD PTR [eax+0x58],ebx
  4145e2:	sub    ah,0x17
  4145e5:	mov    bl,0x3
  4145e7:	cmp    BYTE PTR [esi],0xd6
  4145ea:	sar    DWORD PTR [edi-0x6],0x3b
  4145ee:	inc    edx
  4145ef:	fild   WORD PTR [edx+0x2c]
  4145f2:	inc    esi
  4145f3:	test   eax,0x744b2d87
  4145f8:	clc    
  4145f9:	dec    edx
  4145fa:	mov    DWORD PTR [edx+eiz*8-0x50],ecx
  4145fe:	cmc    
  4145ff:	out    0xc9,eax
  414601:	out    dx,al
  414602:	popa   
  414603:	(bad)  
  414604:	jnp    0x4145a0
  414606:	add    al,0x0
  414608:	xor    cl,BYTE PTR ds:[edi-0x181df5bc]
  41460f:	add    BYTE PTR [edx+esi*1-0x18],ah
  414613:	jmp    DWORD PTR [edi+0x32]
  414616:	call   0x5e30011a
  41461b:	dec    edi
  41461c:	rol    DWORD PTR [esi],0x9d
  41461f:	dec    edx
  414620:	push   DWORD PTR [ecx]
  414622:	or     eax,eax
	...
  41464c:	add    BYTE PTR [eax],al
  41464e:	sub    dl,BYTE PTR [ecx+eax*4]
  414651:	jl     0x4145d9
  414653:	xor    esi,esi
  414655:	sbb    esp,DWORD PTR [ecx+0x13fe55c6]
  41465b:	jp     0x4146d8
  41465d:	je     0x4145f9
  41465f:	and    bh,dh
  414661:	jmp    0x4145ec
  414663:	sahf   
  414664:	or     eax,ebp
  414666:	ret    
  414667:	sub    eax,0x7e79fe7d
  41466c:	pop    esp
  41466d:	out    0x67,eax
  41466f:	inc    esi
  414670:	add    al,0x0
  414672:	imul   edi,DWORD PTR [esi+0x70],0x7b7b67e7
  414679:	(bad)  
  41467a:	pop    ecx
  41467b:	pop    esi
  41467c:	ins    BYTE PTR es:[edi],dx
  41467d:	out    0x4f,eax
  41467f:	imul   edi,DWORD PTR [ebx-0x2],0x49
  414683:	pop    esi
  414684:	push   0x7b7b57e7
  414689:	dec    bl
  41468b:	pop    ebx
  41468c:	sub    al,0x74
  41468e:	xor    DWORD PTR [ebx],0x1f28d300
  414694:	aaa    
  414695:	fdivrp st(6),st
  414697:	sbb    esp,ebx
  414699:	add    esi,DWORD PTR [ebx-0x2e]
  41469c:	xchg   ebx,eax
  41469d:	cmp    ch,0x1f
  4146a0:	adc    al,BYTE PTR [esp+edx*4]
  4146a3:	cwde   
  4146a4:	jbe    0x41469c
  4146a6:	cmp    DWORD PTR [ebx],esi
  4146a8:	call   0x71603f78
  4146ad:	(bad)  
  4146ae:	cmc    
  4146af:	push   ds
  4146b0:	aad    0xb
	...
  4146da:	add    BYTE PTR [eax],al
  4146dc:	(bad)  
  4146dd:	jns    0x414733
  4146df:	jl     0x4146c1
  4146e1:	mov    cl,0xe4
  4146e3:	imul   ecx,DWORD PTR [ebx-0x72],0x46
  4146e7:	jl     0x41472d
  4146e9:	sbb    esi,DWORD PTR [ebp+ebx*1+0x4fbfb36e]
  4146f0:	add    DWORD PTR [ebx-0x41],ebx
  4146f3:	add    edi,DWORD PTR [esi]
  4146f5:	cs data16 jmp 0x4146b9
  4146f9:	mov    dh,0xa8
  4146fb:	add    ecx,DWORD PTR [esi]
  4146fd:	push   ds
  4146fe:	popf   
  4146ff:	or     edx,DWORD PTR [esi-0x678366c5]
  414705:	xor    ebx,DWORD PTR [ecx+ecx*8-0x70]
  414709:	push   ds
  41470a:	push   ebp
  41470c:	test   DWORD PTR [esi],ebx
  41470e:	jge    0x41471b
  414710:	xchg   esi,eax
  414711:	push   esi
  414712:	lahf   
  414713:	jl     0x41478d
  414715:	adc    al,0xaa
  414717:	add    BYTE PTR [esi],bh
  414719:	mov    BYTE PTR [edx+0x68],dh
  41471c:	mov    esp,0xd7d3d417
  414721:	pop    edx
  414722:	inc    ecx
  414723:	ret    0xa858
  414726:	out    dx,eax
  414727:	imul   esp,DWORD PTR [edi-0x4984416a],0xffffff98
  41472e:	add    BYTE PTR [ebp+0x21475fb1],dh
  414734:	add    ebx,DWORD PTR [esi]
  414736:	jle    0x41471e
  414738:	cmp    eax,0x86114fa7
  41473d:	mov    ch,0x3f
  41473f:	jmp    0x414744
	...
  414768:	add    BYTE PTR [eax],al
  41476a:	or     al,0x36
  41476c:	int3   
  41476d:	xlat   BYTE PTR ds:[ebx]
  41476e:	cmp    eax,0xea9095b
  414773:	pop    esp
  414774:	jmp    0x664b5d67
  414779:	sub    BYTE PTR [edx],bh
  41477b:	xchg   al,ch
  41477d:	sub    eax,0xf2005b2c
  414782:	jge    0x41472e
  414784:	and    DWORD PTR [esi+0x56544e55],esi
  41478a:	gs push ecx
  41478c:	rcl    ch,0x3a
  41478f:	mov    ebp,DWORD PTR [eax-0x17]
  414792:	cmp    eax,0x60d1bf2e
  414797:	mov    ch,0x3f
  414799:	jmp    0xe1b5648b
  41479e:	and    eax,0x35267146
  4147a3:	and    BYTE PTR ss:[ebx-0x2502e2dc],dh
  4147aa:	std    
  4147ab:	loop   0x4147aa
  4147ad:	push   cs
  4147ae:	adc    eax,0x5257f31d
  4147b3:	push   esi
  4147b4:	jae    0x414804
  4147b6:	add    eax,0x8ef6fca7
  4147bb:	push   ebp
  4147bc:	call   0xfe5dc528
  4147c1:	inc    esi
  4147c2:	add    ebx,DWORD PTR [eax*1-0x132f7117]
  4147c9:	push   0xcef60e21
	...
  4147f6:	add    BYTE PTR [eax],al
  4147f8:	aam    0xce
  4147fa:	inc    ebx
  4147fb:	add    BYTE PTR [ebx+0x9],bh
  4147fe:	push   DWORD PTR [ebp+0x67]
  414801:	mov    al,ds:0x427f0c74
  414806:	add    BYTE PTR ss:[edi],ah
  414809:	dec    esi
  41480a:	ror    BYTE PTR [edi],0xa2
  41480d:	imul   eax,DWORD PTR [edx],0x0
  414810:	pop    ss
  414811:	call   0x0:0x5917f844
  414818:	loopne 0x414835
  41481a:	out    dx,al
  41481b:	jmp    DWORD PTR [eax]
  41481d:	pop    ecx
  41481e:	add    BYTE PTR [edx+0x17],ch
  414821:	das    
  414822:	(bad)  
  414823:	imul   edx,DWORD PTR [edi],0x228cfe2f
  414829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41482a:	dec    ebp
  41482b:	lea    esp,[edx-0x58]
  41482e:	idiv   bh
  414830:	mov    BYTE PTR [eax],cl
  414832:	push   DWORD PTR [ebp-0x71]
  414835:	mov    eax,ds:0xb17ffc74
  41483a:	xor    al,0x0
  41483c:	out    0x4d,eax
  41483e:	shl    BYTE PTR [edx+eiz*8-0x51],0xf5
  414843:	add    edi,edx
  414845:	pop    eax
  414846:	push   0xfe17dfa1
  41484b:	(bad)  
  41484c:	ror    BYTE PTR [eax-0x18],cl
  41484f:	inc    eax
  414850:	fisub  DWORD PTR [ecx-0x77e3af02]
  414856:	mov    WORD PTR [ebp-0x156c9],es
	...
  414884:	add    BYTE PTR [eax],al
  414886:	mov    bh,0x6
  414888:	out    0x30,al
  41488a:	fisub  DWORD PTR [ecx-0x4bed7602]
  414890:	idiv   bh
  414892:	push   0x584983b1
  414897:	mov    ds:0x793458c,al
  41489c:	inc    cx
  41489e:	ds call 0xf668:0xc758ffc1
  4148a6:	push   ecx
  4148a7:	adc    eax,0xa3a7478
  4148ac:	or     BYTE PTR [ebx+0x41],0xe5
  4148b0:	mov    DWORD PTR [esi+edx*1-0x5b01881b],eax
  4148b7:	xor    ch,dl
  4148b9:	dec    ecx
  4148ba:	xchg   esi,eax
  4148bb:	jae    0x4148c1
  4148bd:	(bad)  
  4148be:	jmp    0x414895
  4148c0:	outs   dx,DWORD PTR ds:[esi]
  4148c1:	(bad)  
  4148c2:	sbb    ebp,ecx
  4148c4:	in     eax,dx
  4148c5:	or     esp,DWORD PTR [esi]
  4148c7:	inc    esi
  4148c8:	enter  0x9fe,0xab
  4148cc:	jge    0x4148b5
  4148ce:	or     DWORD PTR [ebp+0x5a3e6977],esp
  4148d4:	int    0x67
  4148d6:	jg     0x41490a
  4148d8:	jns    0x41488e
  4148da:	fiadd  DWORD PTR [edi+esi*2+0x5fee1fe]
  4148e1:	call   0xfeba0755
  4148e6:	(bad)  
  4148e7:	scas   al,BYTE PTR es:[edi]
  4148e8:	pusha  
  4148e9:	test   BYTE PTR [eax],0x0
	...
  414914:	leave  
  414915:	pop    esp
  414916:	test   DWORD PTR [edx+ebp*8+0xefe775c],eax
  41491d:	sbb    ah,bh
  41491f:	push   DWORD PTR [bx+di]
  414922:	jns    0x4148d8
  414924:	call   0x5be:0xa1fe7744
  41492b:	call   0xfeba077f
  414930:	inc    ebp
  414931:	jb     0x414923
  414933:	sbb    BYTE PTR [ebp-0x7e09afa2],bh
  414939:	and    al,0xfe
  41493b:	je     0x41498b
  41493d:	sub    eax,0x5abb8f32
  414942:	(bad)  
  414943:	jo     0x4149ad
  414945:	sbb    edi,DWORD PTR [eax]
  414947:	ins    BYTE PTR es:[edi],dx
  414948:	arpl   WORD PTR [edx+0x466478d6],dx
  41494e:	loop   0x414993
  414950:	int    0x54
  414952:	pop    ss
  414953:	ins    BYTE PTR es:[edi],dx
  414954:	dec    edi
  414955:	xchg   edx,eax
  414956:	mov    esi,0xc7d57878
  41495b:	jo     0x414995
  41495d:	sbb    edx,ebp
  41495f:	add    edi,DWORD PTR [esi]
  414961:	pop    ebx
  414962:	adc    DWORD PTR [esi+edx*4],eax
  414965:	mov    bh,0xf
  414967:	ret    
  414968:	and    DWORD PTR [edx],ebx
  41496a:	pop    ebp
  41496b:	adc    BYTE PTR [bp+di],bl
  41496e:	(bad)  
  41496f:	js     0x4148fb
  414971:	addr16 (bad) 
  414973:	ins    BYTE PTR es:[edi],dx
  414974:	je     0x414990
  414976:	jg     0x414902
	...
  4149a0:	add    BYTE PTR [eax],al
  4149a2:	mov    edx,0xf8787f37
  4149a7:	test   edi,esp
  4149a9:	jmp    0x414a14
  4149ab:	sub    DWORD PTR [eax+0x4bd0e903],0x70
  4149b2:	loopne 0x4149ce
  4149b4:	push   edi
  4149b5:	out    dx,al
  4149b6:	inc    ebp
  4149b7:	add    edi,DWORD PTR [eax]
  4149b9:	int3   
  4149ba:	rcr    BYTE PTR [edx],1
  4149bc:	jno    0x414a3c
  4149be:	stc    
  4149bf:	adc    bh,BYTE PTR [edi]
  4149c1:	js     0x41497f
  4149c3:	fmul   DWORD PTR [edi]
  4149c5:	jo     0x41497f
  4149c7:	sbb    ch,al
  4149c9:	or     BYTE PTR [edx+0x3e03e7ef],bh
  4149cf:	sub    DWORD PTR [edx-0x15],0xfffffffe
  4149d3:	pop    edx
  4149d4:	fs mov esi,0xae0eab8d
  4149da:	imul   edx,DWORD PTR [edx],0x69a17807
  4149e0:	jns    0x414a5a
  4149e2:	and    BYTE PTR [esi+0x0],0x29
  4149e6:	imul   edx,DWORD PTR [esi+0x19e16c81],0xd7bd5f72
  4149f0:	in     al,0xd6
  4149f2:	jmp    0x679e4b0f
  4149f7:	fnstsw WORD PTR [ebx-0x1e71e3f]
  4149fd:	jmp    0xd9a9c85b
  414a02:	cmp    eax,0xb6bf0a
	...
  414a2f:	add    BYTE PTR [edi],ch
  414a31:	(bad)  
  414a32:	call   0xfe5a4907
  414a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a38:	out    dx,eax
  414a39:	add    esi,esi
  414a3b:	sahf   
  414a3c:	test   eax,0xa5e17419
  414a41:	xchg   DWORD PTR [ebx-0x72],eax
  414a44:	mov    DWORD PTR [ecx],ebx
  414a46:	mov    ah,0x8d
  414a48:	cdq    
  414a49:	sbb    esi,edi
  414a4b:	jle    0x414a5c
  414a4d:	(bad)  
  414a4e:	call   0xfe5a4969
  414a53:	outs   dx,BYTE PTR ds:[esi]
  414a54:	out    dx,eax
  414a55:	or     eax,0x118a9cfe
  414a5a:	(bad)  
  414a5b:	pop    esi
  414a5c:	imul   ecx,DWORD PTR [edi-0x5fe3bef8],0xcf494efd
  414a66:	loopne 0x414aa6
  414a68:	push   ecx
  414a69:	sbb    esi,edi
  414a6b:	mov    ah,0x35
  414a6d:	add    ebx,edi
  414a6f:	lods   eax,DWORD PTR ds:[esi]
  414a70:	xor    BYTE PTR [ecx],bl
  414a72:	(bad)  
  414a73:	je     0x414a8b
  414a75:	adc    esi,edi
  414a77:	xor    DWORD PTR es:[edi-0x5f93eef8],ecx
  414a7e:	std    
  414a7f:	push   ss
  414a80:	adc    edi,ecx
  414a82:	rcl    BYTE PTR [esi],1
  414a84:	or     DWORD PTR [ecx],ebx
  414a86:	inc    BYTE PTR [eax]
  414a88:	or     ah,BYTE PTR [esi-0x18]
  414a8b:	and    al,0xda
  414a8d:	nop
  414a8e:	(bad)  
  414a8f:	(bad)  
  414a90:	cmp    dh,BYTE PTR [edi+0xfff6]
	...
  414abe:	pusha  
  414abf:	test   DWORD PTR [ebx],eax
  414ac1:	dec    eax
  414ac2:	pusha  
  414ac3:	nop
  414ac4:	(bad)  
  414ac5:	mov    ch,0x8f
  414ac7:	mov    dh,bh
  414ac9:	(bad)  
  414aca:	jg     0x414a60
  414acc:	inc    esi
  414acd:	inc    DWORD PTR [eax-0x77234b70]
  414ad3:	nop
  414ad4:	(bad)  
  414ad5:	call   0x402361
  414ada:	lock retf 
  414adc:	loope  0x414ad5
  414ade:	loopne 0x414a71
  414ae0:	in     eax,0xe5
  414ae2:	pop    eax
  414ae3:	nop
  414ae4:	(bad)  
  414ae5:	dec    DWORD PTR [edx-0x4f000954]
  414aeb:	test   bh,dl
  414aed:	inc    edi
  414aee:	rcl    BYTE PTR [ecx-0x764c4a02],0xfe
  414af5:	inc    DWORD PTR [eax-0x500f5f5]
  414afb:	fs call 0xfed2adc7
  414b01:	dec    edx
  414b03:	xor    dh,0xff
  414b06:	add    BYTE PTR [ebx+edi*4-0x16e8fb9],0x45
  414b0e:	outs   dx,DWORD PTR ds:[esi]
  414b0f:	xchg   edi,edx
  414b11:	std    
  414b12:	adc    BYTE PTR [ecx-0x7bfc8a02],0xd7
  414b19:	xor    esp,DWORD PTR [edi-0x6c3d38a4]
  414b1f:	pop    esp
  414b20:	push   ebx
  414b21:	mov    eax,DWORD PTR [eax]
	...
  414b4b:	add    BYTE PTR [ebx-0x23],dl
  414b4e:	shl    esp,0x12
  414b51:	sbb    edi,edx
  414b53:	push   eax
  414b54:	fisub  DWORD PTR ds:0xea01ff68
  414b5b:	in     al,dx
  414b5c:	and    ebx,eax
  414b5e:	add    edi,edi
  414b60:	or     eax,DWORD PTR [esi]
  414b62:	push   0xffffffa5
  414b64:	add    al,0x11
  414b66:	je     0x414b72
  414b68:	jle    0x414af8
  414b6a:	jmp    0xeb03:0x787fbd4f
  414b71:	pop    eax
  414b72:	jae    0x414ba3
  414b74:	leave  
  414b75:	inc    edi
  414b76:	jl     0x414af8
  414b78:	shr    DWORD PTR [ecx],cl
  414b7a:	jno    0x414b7c
  414b7c:	ds add ch,ah
  414b7f:	push   es
  414b80:	jns    0x414bc1
  414b82:	jl     0x414b77
  414b84:	aas    
  414b85:	add    al,BYTE PTR [edx]
  414b87:	jmp    0x414c05
  414b89:	leave  
  414b8a:	in     eax,dx
  414b8b:	not    DWORD PTR [esi+0x3e40ea38]
  414b91:	xchg   DWORD PTR [ebp-0x1225911d],edi
  414b97:	xor    bh,BYTE PTR [esi]
  414b99:	add    al,BYTE PTR [ecx+0x46c3ac3]
  414b9f:	lea    edi,[ebx-0x22]
  414ba2:	aam    0x67
  414ba4:	jmp    0x414c0e
  414ba6:	sar    edi,0xf0
  414ba9:	push   cs
  414baa:	push   es
  414bab:	call   0xfeb6183b
	...
  414bd8:	add    BYTE PTR [eax],al
  414bda:	xor    eax,0x6e13f042
  414bdf:	sbb    al,BYTE PTR [ebx]
  414be1:	add    cl,ah
  414be3:	out    0xd4,eax
  414be5:	(bad)  
  414be6:	push   ebx
  414be7:	or     ch,BYTE PTR [edx+0x3e]
  414bea:	push   ebx
  414beb:	pop    ecx
  414bec:	jae    0x414bd5
  414bee:	imul   ecx,ecx,0x74
  414bf1:	(bad)  
  414bf2:	mov    cl,0xf6
  414bf4:	jns    0x414b78
  414bf6:	sub    ebx,DWORD PTR [ebx+0x1f]
  414bf9:	add    al,0x2b
  414bfb:	ror    DWORD PTR [edi],cl
  414bfd:	adc    eax,0x4b171801
  414c02:	jg     0x414c66
  414c04:	out    0xce,eax
  414c06:	mov    ah,0x6
  414c08:	imul   eax,DWORD PTR [eax-0x7b],0xffffff84
  414c0c:	out    0xe9,eax
  414c0e:	add    BYTE PTR [eax],bl
  414c10:	jge    0x414c1d
  414c12:	cwd    
  414c14:	mov    ds:0x2ce16874,eax
  414c19:	js     0x414bf4
  414c1b:	arpl   WORD PTR [edi-0x3d],cx
  414c1e:	pop    ecx
  414c1f:	sbb    BYTE PTR ds:0xe799f93f,bl
  414c25:	je     0x414bf9
  414c27:	(bad)  
  414c28:	iret   
  414c29:	jae    0x414c70
  414c2b:	pop    ss
  414c2c:	mov    edi,0x288344eb
  414c31:	add    al,0xa6
  414c33:	pop    ecx
  414c34:	out    0x3,eax
  414c36:	mov    esi,0x160c1d16
  414c3b:	ss pushf 
  414c3d:	je     0x414c3f
	...
  414c67:	add    BYTE PTR [eax],bl
  414c69:	pop    ss
  414c6a:	fnstsw WORD PTR [esi]
  414c6c:	jns    0x414c0a
  414c6e:	out    0x74,eax
  414c70:	xchg   edx,eax
  414c71:	arpl   WORD PTR [edi+0x7f17012a],cx
  414c77:	jmp    0x414cb8
  414c79:	pop    ebx
  414c7a:	out    0x83,eax
  414c7c:	lock nop
  414c7e:	fild   QWORD PTR [ebx+0x45]
  414c81:	push   ss
  414c82:	addr16 je 0x414c65
  414c85:	nop
  414c86:	pop    ebx
  414c87:	je     0x414cdb
  414c89:	arpl   WORD PTR [edi],di
  414c8b:	cmp    bh,BYTE PTR [edx+0x16]
  414c8e:	dec    edi
  414c8f:	dec    edx
  414c90:	call   FWORD PTR [edi-0x19]
  414c93:	into   
  414c94:	mov    ah,0x7
  414c96:	imul   edi,DWORD PTR [edi],0xffffff95
  414c99:	lods   eax,DWORD PTR ds:[esi]
  414c9a:	add    BYTE PTR [esi-0x5e97e959],bl
  414ca0:	xor    cl,BYTE PTR [edi-0x66f9eef8]
  414ca6:	std    
  414ca7:	push   ds
  414ca8:	les    ebx,FWORD PTR [edi-0x45b79504]
  414cae:	dec    ecx
  414caf:	test   al,0x3d
  414cb1:	pop    ebx
  414cb2:	or     eax,0x5af86d
  414cb7:	jmp    0xa2e6a47a
  414cbc:	jl     0x414cd4
  414cbe:	(bad)  
  414cbf:	fsubp  st(1),st
  414cc1:	aad    0xff
  414cc3:	call   0x8e7d2705
  414cc8:	cdq    
  414cc9:	fwait
  414cca:	add    cl,ch
	...
  414cf4:	add    BYTE PTR [eax],al
  414cf6:	cmp    al,0xdf
  414cf8:	mov    cl,0xe8
  414cfa:	cmp    eax,0x5d04815b
  414cff:	mov    eax,ds:0x663de93f
  414d04:	test   BYTE PTR [edi+0x6a005b3b],cl
  414d0a:	outs   dx,DWORD PTR ds:[esi]
  414d0b:	mov    cl,BYTE PTR [ecx+0x28]
  414d0e:	cmp    bl,BYTE PTR [ebx+0xd]
  414d11:	gs retf 
  414d13:	pop    edx
  414d14:	add    cl,ch
  414d16:	mov    eax,0x3227556
  414d1b:	push   ss
  414d1c:	(bad)  
  414d1d:	idiv   BYTE PTR [ecx+0x3de8ffe1]
  414d23:	fidivr DWORD PTR [ebx]
  414d25:	repnz mov al,0x9a
  414d28:	add    cl,ch
  414d2a:	cmp    al,0xdf
  414d2c:	jge    0x414d16
  414d2e:	cmp    eax,0xb91c815b
  414d33:	mov    al,ds:0x663de93f
  414d38:	test   bl,bl
  414d3a:	inc    edx
  414d3b:	pop    ebx
  414d3c:	add    BYTE PTR [eax],al
  414d3e:	out    dx,eax
  414d3f:	in     al,0x65
  414d41:	inc    ecx
  414d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d43:	aaa    
  414d44:	(bad)  
  414d45:	(bad)  
  414d46:	xchg   edx,eax
  414d47:	mov    esp,0x9697414a
  414d4c:	inc    esp
  414d4d:	clc    
  414d4e:	adc    al,0xc
  414d50:	test   BYTE PTR [eax],0xa8
  414d53:	fst    QWORD PTR [ebp+0x1]
  414d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d57:	pop    ecx
  414d58:	sub    esi,esi
	...
  414d82:	add    BYTE PTR [eax],al
  414d84:	ror    DWORD PTR [eax+0x7438f874],1
  414d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8b:	dec    ebx
  414d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8d:	pop    ecx
  414d8e:	mov    eax,esi
  414d90:	pop    esp
  414d91:	xchg   ebx,eax
  414d92:	je     0x414d99
  414d94:	ds push ecx
  414d96:	(bad)  
  414d97:	call   DWORD PTR [edi-0x6c]
  414d9a:	push   ebx
  414d9b:	or     al,0xcc
  414d9d:	xlat   BYTE PTR ds:[ebx]
  414d9e:	gs mov ebp,ebp
  414da1:	cli    
  414da2:	mov    BYTE PTR [ebp+0x73],cl
  414da5:	adc    al,0xff
  414da7:	psrlq  mm5,QWORD PTR [edx-0x1]
  414dab:	jmp    DWORD PTR [edi]
  414dad:	mov    eax,0x5927010b
  414db2:	push   0xfe1e7f9e
  414db7:	inc    BYTE PTR [eax]
  414db9:	mov    cl,0x33
  414dbb:	xor    DWORD PTR [edi],esp
  414dbd:	pop    ecx
  414dbe:	or     eax,eax
  414dc0:	sbb    ah,ah
  414dc2:	icebp  
  414dc3:	add    BYTE PTR [edi],dl
  414dc5:	pop    ecx
  414dc6:	cmp    DWORD PTR [edi+0xf],0xcd840d59
  414dcd:	pop    eax
  414dce:	add    BYTE PTR [eax],al
  414dd0:	push   0xb8e80611
  414dd5:	and    edi,edi
  414dd7:	jmp    FWORD PTR [esi+0x23]
  414dda:	out    dx,al
  414ddb:	push   eax
  414ddd:	adc    bh,bh
  414ddf:	jne    0x414e1f
  414de1:	mov    dl,0x72
  414de3:	jbe    0x414e1f
  414de5:	call   0x0:0x4608
	...
  414e10:	add    BYTE PTR [eax],al
  414e12:	rcr    DWORD PTR [ebp-0x3cd95827],0x1
  414e19:	jmp    FWORD PTR [ebx]
  414e1b:	push   edx
  414e1c:	pop    ecx
  414e1d:	std    
  414e1e:	outs   dx,BYTE PTR ds:[esi]
  414e1f:	add    al,BYTE PTR [edx]
  414e21:	or     edi,DWORD PTR [esi+0xd]
  414e24:	mov    DWORD PTR [ebx+0x6a02023e],esi
  414e2a:	ds jg  0x414df5
  414e2d:	out    0xee,eax
  414e2f:	mov    dh,0xc8
  414e31:	jmp    0x414e21
  414e33:	out    0x1,eax
  414e35:	push   0x3e
  414e37:	in     al,dx
  414e38:	jb     0x414e4e
  414e3a:	mov    eax,ds:0x34ffc4b9
  414e3f:	inc    edx
  414e40:	add    al,BYTE PTR [ecx+ecx*8-0x34fffdfe]
  414e47:	aas    
  414e48:	push   0x5cb7514f
  414e4d:	(bad)  
  414e4e:	rcl    ebp,cl
  414e50:	outs   dx,DWORD PTR ds:[esi]
  414e51:	adc    al,0xd1
  414e53:	dec    eax
  414e54:	sar    edi,0x44
  414e57:	ret    0x77f8
  414e5a:	ret    
  414e5b:	inc    esi
  414e5c:	fs dec edi
  414e5e:	xchg   esp,eax
  414e5f:	add    bl,ah
  414e61:	call   DWORD PTR [edi+0x18ffdc05]
  414e67:	outs   dx,DWORD PTR ds:[esi]
  414e68:	push   0xbb712bfe
  414e6d:	inc    eax
  414e6e:	ds stc 
  414e70:	inc    ecx
  414e71:	jae    0x414edb
  414e73:	(bad)  
  414e75:	fild   WORD PTR [eax]
	...
  414e9f:	add    dh,ah
  414ea1:	pop    esp
  414ea2:	(bad)  
  414ea5:	jp     0x414e6c
  414ea7:	fstp   TBYTE PTR [ebx-0x1eb09bc2]
  414ead:	pop    edx
  414eae:	fmul   QWORD PTR [edi+0x67]
  414eb1:	pop    ebx
  414eb2:	ror    DWORD PTR [eax],1
  414eb4:	fs pop ebx
  414eb6:	push   esi
  414eb7:	neg    ebp
  414eb9:	adc    esi,ebp
  414ebb:	hlt    
  414ebc:	je     0x414e58
  414ebe:	out    0xfc,eax
  414ec0:	stc    
  414ec1:	mov    ss,WORD PTR [eax]
  414ec3:	fdiv   QWORD PTR [ecx-0x574db8ed]
  414ec9:	(bad)  
  414eca:	fistp  WORD PTR [ebx-0x78]
  414ecd:	cdq    
  414ece:	es jno 0x414e69
  414ed1:	mov    edi,gs
  414ed3:	jo     0x414ee0
  414ed5:	pop    edi
  414ed6:	push   ss
  414ed7:	test   DWORD PTR [ecx+0x3],0x1380c30f
  414ede:	pop    es
  414edf:	neg    DWORD PTR [ecx+0x704f7513]
  414ee5:	(bad)  
  414ee6:	fistp  WORD PTR [ebx+0x6e]
  414ee9:	cdq    
  414eea:	out    dx,al
  414eeb:	jo     0x414f4d
  414eed:	(bad)  
  414eee:	ret    
  414eef:	pop    ebx
  414ef0:	aas    
  414ef1:	sahf   
  414ef2:	fidiv  WORD PTR [eax+0x50]
  414ef5:	(bad)  
  414ef6:	retf   
  414ef7:	jo     0x414f2b
  414ef9:	mov    WORD PTR [edx],fs
  414efb:	ret    
  414efc:	inc    ecx
  414efd:	and    edi,0xbeffb270
  414f03:	push   ss
	...
  414f2c:	add    BYTE PTR [eax],al
  414f2e:	mov    ch,0xa6
  414f30:	sub    BYTE PTR [ecx+ebp*1],al
  414f33:	mov    DWORD PTR [edi-0x5967e4a5],esi
  414f39:	jo     0x414ef7
  414f3b:	sbb    bh,al
  414f3d:	jo     0x414ec1
  414f3f:	pop    es
  414f40:	imul   ebp,esi,0xd
  414f43:	pop    esp
  414f44:	fiadd  WORD PTR [esi+0x70871219]
  414f4a:	out    0xc8,al
  414f4c:	jge    0x414fbe
  414f4e:	lock test DWORD PTR [eax],eax
  414f51:	jmp    0x6f39d6c4
  414f56:	dec    eax
  414f57:	(bad)  
  414f58:	dec    ecx
  414f59:	test   al,0x3d
  414f5b:	adc    dh,BYTE PTR [ebp+ebx*2+0x4e]
  414f5f:	xchg   DWORD PTR [eax],ecx
  414f61:	inc    ecx
  414f62:	adc    al,0x9d
  414f64:	std    
  414f65:	dec    esi
  414f66:	out    dx,al
  414f67:	mov    al,0xc7
  414f69:	sub    eax,DWORD PTR [ecx+0x5b]
  414f6c:	push   ebx
  414f6d:	jb     0x414f80
  414f6f:	fcmovnb st,st(4)
  414f71:	adc    eax,0x5cfe1126
  414f76:	js     0x414f8e
  414f78:	push   ecx
  414f79:	es nop
  414f7b:	data16 std 
  414f7d:	aam    0xf8
  414f7f:	cdq    
  414f80:	aas    
  414f81:	jmp    0xe972756b
  414f86:	cmp    eax,0xc0f6c066
  414f8b:	sar    edi,0xe8
  414f8e:	cmp    eax,0xf1441a
	...
  414fbb:	add    BYTE PTR [ebx+ebx*2],bh
  414fbe:	add    cl,ch
  414fc0:	not    BYTE PTR [esi+0x5b41e6f4]
  414fc6:	add    BYTE PTR [ebx+0x3a],dl
  414fc9:	test   DWORD PTR [eax],eax
  414fcb:	inc    ebx
  414fcc:	inc    edx
  414fcd:	test   DWORD PTR [eax],eax
  414fcf:	pop    esp
  414fd0:	ja     0x414fe0
  414fd2:	push   ecx
  414fd3:	je     0x414f9c
  414fd5:	or     eax,0xa2a1bef6
  414fda:	std    
  414fdb:	cmp    al,0x9a
  414fdd:	adc    DWORD PTR [ebp+ebp*4-0x7e],esi
  414fe1:	lock xor cl,ch
  414fe4:	cmp    eax,0x4715c066
  414fe9:	add    al,0x73
  414feb:	call   0x48a9ab2d
  414ff0:	ret    0x9a
  414ff3:	add    al,al
  414ff5:	adc    ecx,DWORD PTR [edx]
  414ff7:	call   0x4069bc
  414ffc:	inc    edi
  414ffd:	xchg   esi,eax
  414ffe:	int    0x8d
  415000:	pop    edx
  415001:	xchg   ebx,eax
  415002:	idiv   bh
  415004:	pusha  
  415005:	daa    
  415006:	push   eax
  415007:	call   0x406a1c
  41500c:	pop    esi
  41500d:	in     al,0xd9
  41500f:	div    DWORD PTR [eax-0x7e]
  415012:	in     eax,0x35
  415014:	jmp    0x414f96
  415016:	(bad)  
  415017:	push   0xffffffa7
  415019:	xor    eax,0x5dd668d2
  41501e:	std    
  41501f:	mov    ch,0x0
	...
  415049:	add    BYTE PTR [ebx],dh
  41504b:	mov    bh,dh
  41504d:	jmp    DWORD PTR [eax+0x54]
  415050:	ret    
  415051:	dec    eax
  415052:	out    0x5d,al
  415054:	call   0xfec2288e
  415059:	mov    DWORD PTR [edx],ebx
  41505b:	xchg   esi,esi
  41505d:	inc    DWORD PTR [eax+0x35]
  415060:	(bad)  
  415061:	addr16 push ds
  415063:	das    
  415064:	inc    ecx
  415065:	add    BYTE PTR [eax-0x2e],dh
  415068:	fincstp 
  41506a:	push   eax
  41506b:	cmp    dh,0x35
  41506e:	stos   BYTE PTR es:[edi],al
  41506f:	aad    0x40
  415071:	add    BYTE PTR [edi+0x68],ch
  415074:	inc    ebp
  415075:	push   DWORD PTR [eax-0x72]
  415078:	test   ah,ch
  41507a:	push   0x276afe80
  41507f:	xor    eax,0x576668dc
  415084:	std    
  415085:	mov    ch,0xd3
  415087:	mov    esi,edi
  415089:	call   eax
  41508b:	push   ebx
  41508c:	ret    
  41508d:	dec    eax
  41508e:	push   di
  415090:	call   0xfec1aa8e
  415095:	mov    DWORD PTR [esi],edi
  415097:	jg     0x4150f2
  415099:	test   BYTE PTR [ecx],0xe2
  41509c:	xlat   BYTE PTR ds:[ebx]
  41509d:	jmp    DWORD PTR [ecx-0x1b]
  4150a0:	fld    DWORD PTR [eax+0x3e]
  4150a3:	xchg   ecx,eax
  4150a4:	mov    eax,0x6e89f1db
  4150a9:	(bad)  
  4150aa:	sub    esi,DWORD PTR [edi+0x40b9]
	...
  4150d8:	ds stos BYTE PTR es:[edi],al
  4150da:	dec    edx
  4150db:	inc    ebp
  4150dc:	shl    DWORD PTR [ecx-0x4e1d7b84],1
  4150e2:	outs   dx,BYTE PTR ds:[esi]
  4150e3:	(bad)  
  4150e4:	push   esp
  4150e5:	add    bl,dl
  4150e7:	out    0x26,eax
  4150e9:	ret    
  4150ea:	add    edi,edi
  4150ec:	jmp    0x41515c
  4150ee:	jbe    0x4150ee
  4150f0:	test   eax,0xf6c53849
  4150f5:	ret    0xe801
  4150f8:	fcmovnb st,st(0)
  4150fa:	outs   dx,BYTE PTR ds:[esi]
  4150fb:	inc    bh
  4150fd:	ja     0x415160
  4150ff:	test   BYTE PTR [ecx-0x6d437d97],0x69
  415106:	outs   dx,BYTE PTR ds:[esi]
  415107:	(bad)  
  415108:	ds mov ss,edx
  41510b:	add    bl,BYTE PTR ds:[bx-0x43]
  415110:	imul   ecx,DWORD PTR [edi-0x3ddb1807],0xef59fe6e
  41511a:	je     0x415112
  41511c:	push   ecx
  41511d:	xor    DWORD PTR [esp+esi*2+0x36],ebp
  415121:	sbb    bh,BYTE PTR [edi+0x3f]
  415124:	inc    ecx
  415125:	and    DWORD PTR [esp+esi*4+0x2a],ebp
  415129:	shr    DWORD PTR [ebx-0x2],1
  41512c:	xor    DWORD PTR [edi-0x4],eax
  41512f:	out    0xbe,eax
  415131:	inc    ecx
  415132:	imul   edi,esi,0x21
  415135:	xchg   DWORD PTR [esi+esi*8+0x19],ebx
  415139:	pop    ebx
  41513a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513b:	ins    DWORD PTR es:[edi],dx
	...
  415164:	add    BYTE PTR [eax],al
  415166:	mov    ah,BYTE PTR [ebx-0x71]
  415169:	repnz dec ecx
  41516b:	adc    BYTE PTR [edi-0x69093593],dl
  415171:	ins    DWORD PTR es:[edi],dx
  415172:	clc    
  415173:	paddw  mm7,mm3
  415176:	fnstenv [esi+0x27]
  415179:	ins    DWORD PTR es:[edi],dx
  41517a:	call   0xe8a58e8e
  41517f:	movq   mm5,QWORD PTR [ebp+0x52]
  415183:	arpl   WORD PTR [edi-0x2a],cx
  415186:	adc    DWORD PTR [eax],edx
  415188:	pop    edi
  415189:	ins    DWORD PTR es:[edi],dx
  41518a:	xchg   edx,eax
  41518b:	cs pop edi
  41518d:	ins    DWORD PTR es:[edi],dx
  41518e:	ror    BYTE PTR [edi],0xd5
  415191:	sti    
  415192:	mov    eax,ds:0xb06d45da
  415197:	pcmpeqw mm2,QWORD PTR [eax-0x50]
  41519b:	getsec 
  41519d:	pop    esp
  41519e:	push   edi
  41519f:	pushf  
  4151a0:	cs ins DWORD PTR es:[edi],dx
  4151a2:	cwde   
  4151a3:	lds    edx,FWORD PTR [edi]
  4151a5:	jne    0x415137
  4151a7:	movups xmm1,XMMWORD PTR ds:0x6d170ffd
  4151ae:	retf   0x16fe
  4151b1:	ins    DWORD PTR es:[edi],dx
  4151b2:	js     0x4151b6
  4151b4:	fadd   st(0),st
  4151b6:	jo     0x4151c7
  4151b8:	push   DWORD PTR [esi+0x6cf70761]
  4151be:	pop    ecx
  4151bf:	popa   
  4151c0:	stos   BYTE PTR es:[edi],al
  4151c1:	ins    BYTE PTR es:[edi],dx
  4151c2:	pop    eax
  4151c3:	setge  BYTE PTR [edi+0x48]
  4151c7:	pandn  mm3,QWORD PTR [ebx+0x0]
	...
  4151f3:	add    BYTE PTR [ebx-0x64],cl
  4151f6:	(bad)  
  4151f7:	ins    BYTE PTR es:[edi],dx
  4151f8:	inc    eax
  4151f9:	(bad)
  4151fc:	cmp    BYTE PTR [edi],cl
  4151fe:	shl    BYTE PTR [eax+0x7f],1
  415201:	push   cs
  415202:	mov    edi,0x113826c
  415207:	rcr    BYTE PTR ds:0xaaaefe11,0x87
  41520e:	cld    
  41520f:	xchg   ecx,eax
  415210:	adc    bh,BYTE PTR [esi]
  415212:	add    cl,ch
  415214:	inc    esp
  415215:	sbb    al,0x9
  415217:	jmp    0x6b2e3404
  41521c:	adc    DWORD PTR [edx],0xa417e96b
  415222:	std    
  415223:	hlt    
  415224:	in     eax,0xf6
  415226:	add    ebp,DWORD PTR [ecx]
  415228:	push   ebx
  415229:	or     eax,0x764e2488
  41522e:	mov    bl,0xd1
  415230:	cld    
  415231:	push   cs
  415232:	call   esp
  415234:	(bad)
  415237:	push   edi
  415238:	push   edx
  415239:	or     eax,0xd29d4fe
  41523e:	je     0x415231
  415240:	adc    eax,0x1a3e403e
  415245:	and    eax,ebx
  415247:	in     eax,dx
  415248:	cmp    eax,0xbe3d89a8
  41524d:	sbb    dh,ch
  41524f:	mov    BYTE PTR es:[edx-0x18],ah
  415253:	xchg   edi,eax
  415254:	sub    BYTE PTR [ebx+0x0],bl
  415257:	loop   0x415259
	...
  415281:	add    ch,bh
  415283:	xchg   BYTE PTR [eax+eiz*1],al
  415286:	jmp    DWORD PTR [ecx+0x0]
  415289:	push   es
  41528a:	push   0x4887e85e
  41528f:	pop    ebx
  415290:	add    dl,ah
  415292:	std    
  415293:	xchg   BYTE PTR [eax+eiz*1],al
  415296:	jmp    DWORD PTR [ecx+0x0]
  415299:	jo     0x41531a
  41529b:	push   es
  41529c:	(bad)  
  41529d:	push   esp
  41529e:	(bad)  
  4152a0:	xchg   esp,eax
  4152a1:	sub    edx,ebp
  4152a3:	or     al,0x88
  4152a5:	and    al,0xa6
  4152a7:	or     eax,0x81fb0074
  4152ac:	je     0x4152a6
  4152ae:	call   0xbc2960be
  4152b3:	sar    dh,1
  4152b5:	call   FWORD PTR [edx+ebx*4]
  4152b8:	jno    0x4152f5
  4152ba:	mov    ds,WORD PTR [edx+esi*8]
  4152bd:	push   0x17
  4152bf:	xchg   ebx,eax
  4152c0:	inc    esp
  4152c1:	hlt    
  4152c2:	inc    edi
  4152c3:	xor    BYTE PTR [esp+edi*8-0x41],0xaa
  4152c8:	push   0xffffffff
  4152ca:	mov    eax,0x174be0d
  4152cf:	xor    bh,dh
  4152d1:	(bad)  
  4152d3:	sar    dh,0x75
  4152d6:	fbstp  TBYTE PTR [ecx-0x7da7c10a]
  4152dc:	(bad)  
  4152dd:	jne    0x4152ba
  4152df:	xor    BYTE PTR [eax+ecx*1+0x7f],0xd1
  4152e4:	inc    DWORD PTR ds:[eax]
	...
  41530f:	add    BYTE PTR [eax],cl
  415311:	xor    BYTE PTR [esp+esi*8-0x8],0xb
  415316:	cli    
  415317:	push   edx
  415319:	adc    esi,esp
  41531b:	adc    al,0xa8
  41531d:	cmp    dh,0xff
  415320:	shl    BYTE PTR [ebp-0x1b],cl
  415323:	and    eax,0xc9fe80e5
  415328:	push   ebp
  415329:	adc    edi,esi
  41532b:	push   esp
  41532c:	sbb    al,0xb3
  41532e:	add    ah,0x33
  415331:	sub    edi,edi
  415333:	jne    0x4153a0
  415335:	mov    cl,0xee
  415337:	inc    esi
  415338:	push   0xe2c00a80
  41533d:	pop    edx
  41533e:	pop    esi
  41533f:	leave  
  415340:	and    eax,0x228cfe13
  415345:	xchg   DWORD PTR [ebp-0x1],ecx
  415348:	repnz adc ah,dh
  41534b:	mov    eax,ds:0xfe693d3e
  415350:	inc    ebp
  415351:	ret    0x83fa
  415354:	push   ds
  415355:	add    eax,DWORD PTR [edx]
  415357:	add    BYTE PTR [ecx],ch
  415359:	dec    eax
  41535a:	push   0x69403ae7
  41535f:	inc    bh
  415361:	aaa    
  415362:	pop    eax
  415363:	dec    BYTE PTR [ebx+0x1a746ab6]
  415369:	out    dx,al
  41536a:	lock not DWORD PTR [esi]
  41536d:	sbb    esp,eax
  41536f:	(bad)  
  415370:	stc    
  415371:	jns    0x415363
  415373:	jmp    0x415375
	...
  41539d:	add    bh,ah
  41539f:	mov    eax,ds:0x6a3e0001
  4153a4:	adc    al,0x69
  4153a6:	jg     0x4153aa
  4153a8:	shl    bh,1
  4153aa:	mov    esp,ecx
  4153ac:	add    DWORD PTR [eax],eax
  4153ae:	inc    ebp
  4153af:	inc    edx
  4153b0:	lock add al,0xd7
  4153b3:	fiadd  DWORD PTR [ecx]
  4153b5:	add    BYTE PTR [esi],bh
  4153b7:	jns    0x41542a
  4153b9:	addr16 dec esi
  4153bb:	sbb    eax,ebp
  4153bd:	call   FWORD PTR [ecx+0x3e001588]
  4153c3:	add    DWORD PTR [edx-0x78],esi
  4153c6:	sub    ebx,DWORD PTR [edx-0x3cd8e027]
  4153cc:	add    DWORD PTR [esi-0x5a],edx
  4153cf:	sub    BYTE PTR [eax],bl
  4153d1:	add    BYTE PTR [esi],bh
  4153d3:	or     DWORD PTR [edx+0x74],eax
  4153d6:	cmp    al,0x59
  4153d8:	out    dx,eax
  4153d9:	mov    DWORD PTR [esi+0x7a],ecx
  4153dc:	shl    dl,1
  4153de:	(bad)  
  4153df:	mov    edi,0xeb1c675d
  4153e4:	(bad)  
  4153e5:	dec    DWORD PTR [ebx]
  4153e7:	pop    edx
  4153e8:	adc    al,0x2e
  4153ea:	ds add bh,bh
  4153ed:	mov    edi,0x5ce95acb
  4153f2:	jmp    0x2882:0x1fdcd7df
  4153f9:	add    al,0x26
  4153fb:	pushf  
  4153fc:	sti    
  4153fd:	add    edi,DWORD PTR [esi]
  4153ff:	pop    eax
  415400:	mov    bh,0x7b
	...
  41542a:	add    BYTE PTR [eax],al
  41542c:	mov    dl,0x2f
  41542e:	push   eax
  41542f:	and    al,0x97
  415431:	call   0x3fc:0xfc21d1e7
  415438:	ds pusha 
  41543a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543b:	out    dx,eax
  41543c:	aas    
  41543d:	add    bl,ah
  41543f:	jge    0x415472
  415441:	jecxz  0x41547f
  415443:	push   ecx
  415444:	(bad)  
  415445:	xchg   ebp,eax
  415446:	scas   eax,DWORD PTR es:[edi]
  415447:	jge    0x4154c3
  415449:	imul   DWORD PTR [ebp+0x24e03e04]
  41544f:	dec    esp
  415450:	sti    
  415451:	pop    edx
  415452:	out    0x68,eax
  415454:	push   edx
  415455:	das    
  415456:	outs   dx,DWORD PTR ds:[esi]
  415457:	out    dx,eax
  415458:	(bad)  [ebx]
  41545a:	(bad)  
  41545c:	loope  0x415445
  41545e:	pop    ebp
  41545f:	imul   eax,eax,0xc464bce0
  415465:	xchg   ebp,eax
  415466:	inc    ebx
  415467:	jl     0x4154aa
  415469:	loope  0x415407
  41546b:	push   eax
  41546c:	mov    ah,0x95
  41546e:	pop    ds
  41546f:	jl     0x4154a2
  415471:	fcomi  st,st(5)
  415473:	add    ecx,DWORD PTR [ecx-0x2a]
  415476:	xchg   ebx,eax
  415477:	push   0xef270b90
  41547c:	xchg   ebp,eax
  41547d:	add    cl,al
  41547f:	ret    0xb80
  415482:	gs mov edi,0xb8ffaa69
  415488:	clc    
  415489:	or     eax,DWORD PTR [edi]
  41548b:	pop    ebp
  41548c:	imul   ebp,DWORD PTR [ebp+0x4630],0x0
	...
  4154ba:	xor    eax,0xda9c005b
  4154bf:	(bad)  
  4154c0:	std    
  4154c1:	je     0x41550c
  4154c3:	repz pop ebx
  4154c5:	sub    al,0xd7
  4154c7:	or     al,0xa
  4154c9:	test   eax,0xda684251
  4154ce:	adc    eax,0x9239009c
  4154d3:	repz inc esp
  4154d5:	(bad)  
  4154d6:	xchg   esi,eax
  4154d7:	call   0x4100:0x4a8c3e68
  4154de:	inc    edx
  4154df:	pop    ebx
  4154e0:	in     eax,dx
  4154e1:	outs   dx,DWORD PTR ds:[esi]
  4154e2:	cmc    
  4154e3:	pop    esi
  4154e4:	sub    BYTE PTR [bp+si-0x55],al
  4154e8:	std    
  4154e9:	adc    al,0x2
  4154eb:	add    esp,DWORD PTR ds:0xe9096701
  4154f1:	mov    cl,0xfd
  4154f3:	or     esi,edi
  4154f5:	mov    al,0x83
  4154f7:	bound  eax,QWORD PTR [eax]
  4154f9:	adc    al,0x63
  4154fb:	test   BYTE PTR [ecx+0x7461ad],0x3
  415502:	nop
  415503:	or     DWORD PTR [ecx+esi*8+0x65],esi
  415507:	add    al,0x3c
  415509:	pop    esi
  41550a:	push   esi
  41550b:	rol    DWORD PTR [ebx+0x55],cl
  41550e:	fwait
  41550f:	fs std 
  415511:	aam    0xb5
  415513:	add    ah,BYTE PTR [esi+eax*2+0xa6b0916]
  41551a:	pop    ss
  41551b:	(bad)
	...
  415547:	add    dl,cl
  415549:	or     esi,edi
  41554b:	cs jae 0x4155b4
  41554e:	std    
  41554f:	pushf  
  415550:	test   DWORD PTR [edx],eax
  415552:	nop
  415553:	push   ds
  415554:	push   ss
  415555:	or     DWORD PTR [ecx-0x17],ebp
  415558:	cmp    eax,0xe781befa
  41555d:	cmp    DWORD PTR [edi],0xf3265700
  415563:	push   0x75fd5e96
  415568:	pop    edi
  415569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556a:	(bad)  
  41556b:	imul   esp,DWORD PTR [eax-0x7e],0x826375fe
  415572:	je     0x41557c
  415574:	outs   dx,DWORD PTR ds:[esi]
  415575:	je     0x4155b3
  415577:	call   DWORD PTR [eax]
  415579:	dec    eax
  41557a:	mov    edi,0x8b2b2704
  41557f:	in     al,dx
  415580:	xchg   esi,eax
  415581:	fwait
  415582:	aad    0xf7
  415584:	loopne 0x415507
  415586:	mov    WORD PTR [ebp-0x2d],es
  415589:	push   DWORD PTR cs:[ebp-0xd]
  41558d:	xor    BYTE PTR [eax+ecx*1-0x51],0xeb
  415592:	sub    DWORD PTR [eax],eax
  415594:	pop    ss
  415595:	add    eax,0x9f6a0fbe
  41559a:	add    BYTE PTR [eax],al
  41559c:	out    0x48,eax
  41559e:	inc    esp
  41559f:	clc    
  4155a0:	xlat   BYTE PTR ds:[ebx]
  4155a1:	pop    ebp
  4155a2:	add    BYTE PTR [eax],al
  4155a4:	cwde   
  4155a5:	sbb    esi,edx
  4155a7:	(bad)  
  4155a8:	call   0xab560a
	...
  4155d5:	add    bh,ah
  4155d7:	and    edi,esi
  4155d9:	imul   edx,edi,0x9a8cfe23
  4155df:	jns    0x41562e
  4155e1:	lea    ebp,[edx]
  4155e3:	mov    esi,esi
  4155e5:	inc    DWORD PTR [eax]
  4155e7:	das    
  4155e8:	push   DWORD PTR [ebp-0x1]
  4155eb:	xor    DWORD PTR [esp+edi*8+0xf],0xa7002a2a
  4155f3:	add    al,0xbe
  4155f5:	je     0x415591
  4155f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f8:	add    BYTE PTR [ecx],0x97
  4155fb:	pop    ebp
  4155fc:	push   0xfe1ecfa1
  415601:	(bad)  
  415602:	ds out 0xf5,eax
  415605:	out    0xb6,eax
  415607:	mov    ah,0x66
  415609:	dec    BYTE PTR [esi]
  41560b:	lea    edx,[esp+ecx*4-0x45]
  41560f:	movq   mm7,mm6
  415612:	pop    ecx
  415613:	jecxz  0x4155e4
  415615:	out    0xa6,eax
  415617:	mov    ah,0x66
  415619:	(bad)  
  41561a:	mov    bh,0x76
  41561c:	dec    ecx
  41561d:	test   BYTE PTR [ecx+0x28],0x5a
  415621:	std    
  415622:	jns    0x415655
  415624:	imul   edi,DWORD PTR ds:0xb69a,0x66f27f68
  41562d:	mov    ah,0x6
  41562f:	shl    BYTE PTR [esi-0x2],cl
  415632:	sbb    DWORD PTR [eax-0x4],ecx
  415635:	out    0x3f,eax
  415637:	xor    eax,0xfe65
	...
  415664:	mov    bh,0x77
  415666:	jno    0x41565e
  415668:	add    edx,ebp
  41566a:	xlat   BYTE PTR ds:[ebx]
  41566b:	jmp    DWORD PTR [ecx+0x49]
  41566e:	fild   DWORD PTR [eax+0x3e]
  415671:	fnstenv [eax+0x66e1f1d7]
  415677:	(bad)  
  415678:	imul   ecx,DWORD PTR [edx],0x5a
  41567b:	in     eax,0x7c
  41567d:	xchg   ecx,eax
  41567e:	data16 mov BYTE PTR [ebx-0x3601917a],bh
  415685:	sub    al,0x2
  415687:	push   0xffc52b5e
  41568c:	mov    eax,0xb1f649e7
  415691:	cdq    
  415692:	data16 je 0x4156cb
  415695:	stos   BYTE PTR es:[edi],al
  415696:	cmp    al,BYTE PTR [ecx-0x5f]
  415699:	dec    ecx
  41569a:	jl     0x415620
  41569c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41569d:	dec    ecx
  41569e:	data16 inc bl
  4156a1:	jg     0x4156e8
  4156a3:	test   BYTE PTR [ecx+0x19d3265b],0x72
  4156aa:	nop
  4156ab:	les    edi,FWORD PTR [ecx+0x9]
  4156ae:	pop    ebp
  4156af:	dec    ebx
  4156b0:	push   0xf2660f08
  4156b5:	push   edx
  4156b6:	setp   bh
  4156b9:	pop    es
  4156ba:	(bad)  
  4156bb:	jnp    0x41567f
  4156bd:	(bad)  
  4156be:	(bad)  
  4156bf:	gs push eax
  4156c1:	jne    0x4156aa
  4156c3:	fcmovne st,st(5)
  4156c5:	jno    0x4156ef
  4156c7:	add    al,0x0
	...
  4156f1:	add    BYTE PTR [ecx-0x32],al
  4156f4:	mov    edi,0xd708386d
  4156f9:	out    dx,eax
  4156fa:	cmp    ebx,esi
  4156fc:	ja     0x4156c0
  4156fe:	sub    BYTE PTR [eax],cl
  415700:	jno    0x415781
  415702:	add    DWORD PTR [eax],edx
  415704:	mov    edi,0xb7c5bc65
  415709:	ins    DWORD PTR es:[edi],dx
  41570a:	adc    BYTE PTR [eax],cl
  41570c:	call   0x651dec00
  415711:	pop    eax
  415712:	or     BYTE PTR [eax],cl
  415714:	lahf   
  415715:	add    al,0x72
  415717:	jge    0x415783
  415719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571a:	(bad)  [edi]
  41571c:	(bad)  
  41571d:	gs jmp 0xe21d77ae
  415723:	pop    es
  415724:	(bad)  
  415725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415726:	fmul   DWORD PTR [ebp+0x43d45bd7]
  41572c:	outs   dx,BYTE PTR ds:[esi]
  41572d:	gs enter 0x57cd,0x6d
  415732:	rol    BYTE PTR [edi],0x5f
  415735:	out    dx,eax
  415736:	dec    ecx
  415737:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415739:	daa    
  41573a:	mov    cl,0x7
  41573c:	dec    edi
  41573d:	scas   eax,DWORD PTR es:[edi]
  41573e:	xchg   ebp,eax
  41573f:	cmova  esp,DWORD PTR [ebp-0x60]
  415743:	(bad)  
  415744:	xlat   BYTE PTR ds:[ebx]
  415745:	pop    ebx
  415746:	inc    BYTE PTR [esi+0x0]
  415749:	sbb    ecx,DWORD PTR ss:[ecx]
  41574c:	mov    ah,0x41
  41574e:	sbb    ecx,DWORD PTR [ecx]
  415750:	(bad)  
  415751:	es xchg ecx,eax
  415753:	push   edi
  415754:	call   0x415833
	...
  41577d:	add    BYTE PTR [eax],al
  41577f:	add    BYTE PTR [ecx],ah
  415781:	or     dh,bh
  415783:	push   ss
  415784:	mov    eax,ds:0xe30ef623
  415789:	or     BYTE PTR [ebp+ecx*1-0x101f72d],dh
  415790:	push   0x26fae857
  415795:	or     dh,bh
  415797:	out    dx,al
  415798:	cwde   
  415799:	daa    
  41579a:	mul    dh
  41579c:	fimul  DWORD PTR [eax]
  41579e:	je     0x415799
  4157a0:	xchg   ebp,eax
  4157a1:	imul   edi,DWORD PTR [esi+edx*8],0xffffff9a
  4157a5:	add    eax,0xcfa2f974
  4157aa:	fdivr  DWORD PTR [esi+0x34fe059a]
  4157b0:	sbb    bh,bh
  4157b2:	jb     0x41576b
  4157b4:	call   0xfe0d:0x7574fe05
  4157bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157bc:	gs cld 
  4157be:	ds sahf 
  4157c0:	bound  eax,QWORD PTR ds:0x56299b4
  4157c6:	inc    BYTE PTR [ecx-0x7902b786]
  4157cc:	pop    edx
  4157cd:	iret   
  4157ce:	in     al,dx
  4157cf:	jbe    0x415833
  4157d1:	add    eax,0x61ba5e9
  4157d6:	(bad)  
  4157d7:	outs   dx,BYTE PTR ds:[esi]
  4157d8:	cwde   
  4157d9:	(bad)  
  4157da:	cmc    
  4157db:	pop    dx
  4157dd:	(bad)  
  4157de:	mov    edi,0xfe05231f
  4157e3:	pushf  
	...
  41580c:	add    BYTE PTR [eax],al
  41580e:	adc    DWORD PTR ds:0xd0054efe,ecx
  415814:	ds add al,bh
  415817:	jle    0x415817
  415819:	mov    ch,0x7
  41581b:	ja     0x41581b
  41581d:	(bad)  
  41581e:	jmp    edx
  415820:	cmp    edi,edi
  415822:	pop    eax
  415823:	jg     0x415869
  415825:	clc    
  415826:	cs iret 
  415828:	sti    
  415829:	call   FWORD PTR [eax+0x7f]
  41582c:	je     0x41582a
  41582e:	aas    
  41582f:	inc    edi
  415830:	daa    
  415831:	add    BYTE PTR [edi+0x41],dl
  415834:	mov    edi,0x8b15570c
  415839:	in     al,dx
  41583a:	in     al,0x45
  41583c:	stc    
  41583d:	push   0x67
  41583f:	and    al,0x4b
  415841:	call   edx
  415843:	add    esi,esp
  415845:	mov    ebp,0x89fe7a1c
  41584a:	bound  edi,QWORD PTR [ebx-0x2]
  41584d:	jne    0x41586e
  41584f:	repnz daa 
  415851:	imul   edx,DWORD PTR [esi+0x5f],0x16d235fd
  415858:	inc    ecx
  415859:	add    bh,ch
  41585b:	mov    ds:0x79c8fffc,al
  415860:	je     0x41586a
  415862:	jg     0x415899
  415864:	addr16 inc ecx
  415866:	pop    ss
  415867:	repnz (bad) 
  415869:	jmp    edi
  41586b:	fxam   
  41586d:	loop   0x415839
  41586f:	jns    0x41586f
  415871:	inc    DWORD PTR [eax]
	...
  41589b:	add    BYTE PTR [edx+0x7b],dl
  41589e:	(bad)  
  41589f:	jne    0x415890
  4158a1:	jno    0x415870
  4158a3:	cmp    ebx,DWORD PTR [eax+0x7a]
  4158a6:	enter  0xe3c2,0x59
  4158aa:	push   ebx
  4158ab:	mov    ecx,DWORD PTR [ebx-0x22]
  4158ae:	sar    esp,0xed
  4158b1:	pop    ecx
  4158b2:	push   0x4c
  4158b4:	sbb    BYTE PTR [esi+eax*1],ah
  4158b7:	call   0xff6080fa
  4158bc:	test   eax,0x16fbc77a
  4158c1:	hlt    
  4158c2:	add    edi,ebp
  4158c4:	fsubr  DWORD PTR [ebx]
  4158c6:	test   DWORD PTR [eax-0x1],ebp
  4158c9:	repz jmp 0x1f4705a
  4158cf:	dec    DWORD PTR [ebx]
  4158d1:	or     al,0x6a
  4158d3:	pop    esi
  4158d4:	loope  0x41593a
  4158d6:	popa   
  4158d7:	(bad)  
  4158d8:	jmp    0x415949
  4158da:	popa   
  4158db:	je     0x415913
  4158dd:	pop    esp
  4158de:	ja     0x41591a
  4158e0:	popa   
  4158e1:	pop    esp
  4158e2:	dec    ebx
  4158e3:	rol    DWORD PTR [edx-0xc],0xb8
  4158e7:	mov    ah,BYTE PTR [edx+0x72]
  4158ea:	dec    eax
  4158eb:	iret   
  4158ec:	push   ecx
  4158ed:	hlt    
  4158ee:	bound  ecx,QWORD PTR [ebx+edi*8-0x4c014e01]
  4158f5:	mul    BYTE PTR [edx+0x74]
  4158f8:	inc    esi
  4158f9:	sbb    dh,BYTE PTR [ecx]
  4158fb:	sub    bh,BYTE PTR [esi]
  4158fd:	repnz push cs
  4158ff:	rol    BYTE PTR [eax],0x0
	...
  41592a:	xor    DWORD PTR [edi-0x8],esi
  41592d:	add    DWORD PTR [esi],edi
  41592f:	repnz dec edx
  415931:	inc    esp
  415932:	push   ss
  415933:	repz add DWORD PTR [eax],eax
  415936:	ds mov ebp,0xf601f3c8
  41593c:	add    DWORD PTR [eax],eax
  41593e:	fs bnd jmp 0x415941
  415942:	addr16 bnd jmp 0x415945
  415946:	mov    edx,0xb34f583f
  41594b:	ja     0x4159a2
  41594d:	neg    cl
  41594f:	test   DWORD PTR [ecx+0x628a4bfe],esi
  415955:	je     0x415921
  415957:	fisub  DWORD PTR [edx+0x28]
  41595a:	ds pop ebx
  41595c:	out    0xe,eax
  41595e:	jle    0x4158ef
  415960:	in     al,0x6c
  415962:	mov    DWORD PTR [edx-0x19],ebx
  415965:	add    edx,DWORD PTR [esi]
  415967:	mov    edx,0x5a1c49f
  41596c:	mov    ebp,0xa8aba60f
  415971:	bound  edx,QWORD PTR [eax-0x45cc9d55]
  415977:	fidiv  WORD PTR [ebx]
  415979:	pop    edx
  41597a:	add    BYTE PTR [eax+edi*4],0xb5
  41597e:	popa   
  41597f:	fwait
  415980:	test   al,0x62
  415982:	jo     0x415956
  415984:	ins    BYTE PTR es:[edi],dx
  415985:	cmp    esi,DWORD PTR [eax+0x4]
  415988:	packssdw mm1,mm3
  41598b:	inc    esi
  41598c:	push   es
  41598d:	bound  eax,QWORD PTR [eax]
	...
  4159b7:	add    bh,ah
  4159b9:	pop    edx
  4159ba:	(bad)  
  4159bb:	xchg   esi,eax
  4159bc:	out    0x99,al
  4159be:	out    0x62,eax
  4159c0:	xchg   edx,eax
  4159c1:	and    esi,edi
  4159c3:	popa   
  4159c4:	inc    eax
  4159c5:	add    al,0x5d
  4159c7:	or     al,0x26
  4159c9:	loop   0x4159f2
  4159cb:	popa   
  4159cc:	xor    dl,dl
  4159ce:	ins    BYTE PTR es:[edi],dx
  4159cf:	push   esp
  4159d0:	xor    BYTE PTR [edi+ecx*8],al
  4159d3:	out    dx,al
  4159d4:	and    DWORD PTR [ecx+esi*4-0x15],edi
  4159d8:	jle    0x415a35
  4159da:	mov    esi,0xb70be997
  4159df:	popa   
  4159e0:	or     BYTE PTR [esi-0x647c9421],cl
  4159e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e7:	popa   
  4159e8:	(bad)  
  4159e9:	fisttp QWORD PTR [ebx+0x203f059]
  4159ef:	add    al,0x56
  4159f1:	and    al,0x1
  4159f3:	ret    
  4159f4:	loope  0x4159fa
  4159f6:	cmp    eax,0x7f03d03c
  4159fb:	popa   
  4159fc:	dec    edx
  4159fd:	push   ebx
  4159fe:	add    BYTE PTR [ecx+0x6efd43e3],al
  415a04:	mov    ch,0xde
  415a06:	call   0x8c467969
  415a0b:	dec    BYTE PTR fs:[esi+edi*8]
  415a0f:	push   esi
  415a10:	bnd jnp 0x415a0b
  415a13:	sar    BYTE PTR [ebx+eax*1-0x1],0x7c
  415a18:	pop    edx
  415a19:	or     eax,0x3efe
	...
  415a46:	pop    ds
  415a47:	(bad)
  415a4b:	inc    ebx
  415a4c:	std    
  415a4d:	cs mov ch,0xde
  415a50:	in     al,0x1e
  415a52:	fild   WORD PTR [ebx+ebp*2]
  415a55:	jmp    0xa8abb0bf
  415a5a:	cmp    eax,0x731b404
  415a5f:	add    eax,0x5b7106fe
  415a64:	call   0xfe45d83a
  415a69:	pusha  
  415a6a:	shl    DWORD PTR [ebx],0xf6
  415a6d:	out    dx,al
  415a6e:	(bad)  
  415a70:	cmp    DWORD PTR [ecx+0x39fe0196],0x22
  415a77:	cmp    BYTE PTR [edx+0x28],ch
  415a7a:	inc    edx
  415a7b:	add    dh,BYTE PTR [ecx+esi*4-0x3901fe7a]
  415a82:	lock pop edx
  415a84:	call   0xfe43587a
  415a89:	pusha  
  415a8a:	shr    BYTE PTR [esi],0xf6
  415a8d:	scas   al,BYTE PTR es:[edi]
  415a8e:	sahf   
  415a8f:	fnstsw WORD PTR [ebx-0x1fe6967]
  415a95:	jmp    0x54c2d0a3
  415a9a:	pop    ecx
  415a9b:	or     esi,edi
  415a9d:	mov    ?,WORD PTR ds:0x64006287
  415aa3:	loope  0x415a8a
  415aa5:	not    DWORD PTR [eax+0x7b]
  415aa8:	std    
  415aa9:	jae    0x415aab
	...
  415ad3:	add    BYTE PTR [esi],ch
  415ad5:	out    dx,eax
  415ad6:	std    
  415ad7:	inc    DWORD PTR [eax-0x44]
  415ada:	(bad)  
  415adb:	jne    0x415a94
  415add:	jbe    0x415b51
  415adf:	cmp    DWORD PTR [eax],edx
  415ae1:	jnp    0x415ae1
  415ae3:	mov    ch,0x7
  415ae5:	mov    ds:0x28f0fffe,eax
  415aea:	push   cs
  415aeb:	call   0x3ec058
  415af0:	push   eax
  415af1:	jmp    0x7b9252df
  415af6:	(bad)  
  415af7:	jne    0x415b60
  415af9:	jbe    0x415ab3
  415afb:	cmp    DWORD PTR [eax],esp
  415afd:	jnp    0x415afd
  415aff:	mov    ch,0x4f
  415b01:	mov    ds:0x2950fffe,eax
  415b06:	push   cs
  415b07:	call   0x3ec008
  415b0c:	inc    eax
  415b0d:	jmp    0xa29252eb
  415b12:	(bad)  
  415b13:	mov    ch,0x3b
  415b15:	mov    ds:0x2850fffe,eax
  415b1a:	push   cs
  415b1b:	call   0x3ebbac
  415b20:	adc    ah,ah
  415b22:	(bad)  
  415b24:	adc    BYTE PTR [edx+0x762775fe],ah
  415b2a:	mov    BYTE PTR [ecx],bh
  415b2c:	add    BYTE PTR [edx-0x5648427e],ah
  415b32:	(bad)  
  415b33:	call   DWORD PTR [edi]
  415b35:	sub    ah,BYTE PTR [ecx]
  415b37:	push   0x0
	...
  415b60:	add    BYTE PTR [eax],al
  415b62:	push   ss
  415b63:	pop    esi
  415b64:	in     eax,dx
  415b65:	mov    esi,0xe80e23a0
  415b6a:	neg    BYTE PTR [esi-0x3]
  415b6d:	(bad)  
  415b6e:	ds jmp 0xd12b2b0b
  415b74:	pop    ebp
  415b75:	(bad)  
  415b76:	xchg   ebx,eax
  415b77:	fist   WORD PTR [ebp-0x2]
  415b7a:	rol    DWORD PTR [eax-0x3b29f029],1
  415b80:	sbb    al,0xff
  415b82:	shl    DWORD PTR [eax-0x29],0xf
  415b86:	mov    ecx,0xb1f63cde
  415b8b:	mov    al,ds:0x9c36745d
  415b90:	sub    al,0xfe
  415b92:	mov    eax,ds:0x76b45d90
  415b97:	inc    eax
  415b98:	pop    ebp
  415b99:	(bad)  
  415b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b9b:	add    ebx,DWORD PTR [esi]
  415b9d:	dec    DWORD PTR [ecx-0x761068b8]
  415ba3:	xor    BYTE PTR [ebp-0x19],bl
  415ba6:	and    edi,eax
  415ba8:	pop    esi
  415ba9:	(bad)  
  415baa:	jno    0x415b52
  415bac:	jo     0x415ba4
  415bae:	imul   ebp,DWORD PTR [eax+0x6c],0x5d512219
  415bb5:	(bad)  
  415bb6:	xchg   ebx,eax
  415bb7:	imul   edx,DWORD PTR [ebp-0x2],0x51
  415bbb:	imul   ecx,DWORD PTR ds:0x5f08493c,0xffffffb4
  415bc2:	pop    edx
  415bc3:	or     BYTE PTR [edi-0x2],bl
	...
  415bee:	add    BYTE PTR [eax],al
  415bf0:	es out dx,eax
  415bf2:	sbb    eax,0x992231ff
  415bf7:	fbstp  TBYTE PTR [ecx]
  415bf9:	sub    bl,BYTE PTR [edi-0x19]
  415bfc:	daa    
  415bfd:	outs   dx,BYTE PTR ds:[esi]
  415bfe:	pop    ebp
  415bff:	(bad)  
  415c00:	sbb    DWORD PTR [eax-0x3dee09cb],eax
  415c06:	imul   ebp,ebp,0xfe5ec945
  415c0c:	jnp    0x415bd8
  415c0e:	ins    BYTE PTR es:[edi],dx
  415c0f:	stc    
  415c10:	sti    
  415c11:	pop    ebx
  415c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c13:	pop    esi
  415c14:	lock xchg BYTE PTR [ebx-0x18ccc895],bl
  415c1b:	add    esi,edi
  415c1d:	sbb    eax,0xd47303dc
  415c22:	xchg   ebx,eax
  415c23:	cmp    ch,0xff
  415c26:	adc    DWORD PTR [esp+edx*2],eax
  415c29:	mov    ?,WORD PTR [esi-0x28]
  415c2c:	cmp    ebx,esi
  415c2e:	out    0x1c,eax
  415c30:	mov    ecx,0xb5c87100
  415c35:	add    ch,dl
  415c37:	or     edx,DWORD PTR [esi]
  415c39:	call   0x1e320fe
  415c3e:	adc    eax,0xe79a0149
  415c43:	imul   esi,DWORD PTR [eax-0x77a1c102],0xffffff86
  415c4a:	fucomip st,st(3)
  415c4c:	test   al,0x72
  415c4e:	test   al,0x3
  415c50:	out    0x5c,al
  415c52:	out    0x3,eax
	...
  415c7c:	add    BYTE PTR [eax],al
  415c7e:	mov    esi,0x68606cf3
  415c83:	add    BYTE PTR [edi],dl
  415c85:	fsub   DWORD PTR [ebp+0x0]
  415c88:	xchg   ebp,eax
  415c89:	or     esp,DWORD PTR [esi+0x6c]
  415c8c:	rcr    BYTE PTR [esi+0x50],0x12
  415c90:	sub    al,BYTE PTR [edi]
  415c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c94:	bound  ebp,QWORD PTR [edi-0x44]
  415c97:	pop    ss
  415c98:	in     al,dx
  415c99:	mov    ah,0x90
  415c9b:	jne    0x415c84
  415c9d:	jmp    0xc965d25
  415ca2:	push   ss
  415ca3:	(bad)  
  415ca4:	minps  xmm4,XMMWORD PTR [eax]
  415ca7:	shl    BYTE PTR [eax+eiz*2],cl
  415caa:	les    eax,FWORD PTR [ebp+0x30]
  415cad:	int3   
  415cae:	jle    0x415d0b
  415cb0:	jb     0x415cd1
  415cb2:	jnp    0x415c47
  415cb4:	add    BYTE PTR [eax],ch
  415cb6:	cmp    bl,bl
  415cb8:	cmp    eax,0x689711e9
  415cbd:	(bad)  
  415cbf:	call   0xe926:0x2a5a3600
  415cc6:	cmp    eax,0xdb15c054
  415ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ccc:	call   0xfe4255a0
  415cd1:	sbb    edx,ebx
  415cd3:	(bad)  
  415cd4:	std    
  415cd5:	xchg   BYTE PTR [eax+0x7d033977],ah
  415cdb:	dec    DWORD PTR [ebp+0x66]
  415cde:	mov    DWORD PTR [edi-0x18],edx
  415ce1:	sbb    eax,DWORD PTR [eax]
	...
  415d0b:	add    BYTE PTR [esi+0x4741fe00],dl
  415d11:	inc    esp
  415d12:	std    
  415d13:	dec    esi
  415d14:	daa    
  415d15:	pop    ebx
  415d16:	inc    esi
  415d17:	imul   esi,DWORD PTR [eax],0x8043735b
  415d1d:	add    esi,DWORD PTR [edx]
  415d1f:	sub    DWORD PTR [ebp+0x1b2efe00],esp
  415d25:	or     ch,BYTE PTR [edi-0x4679c51f]
  415d2b:	push   ds
  415d2c:	xchg   ecx,eax
  415d2d:	add    edi,esi
  415d2f:	pushf  
  415d30:	xor    eax,0xfad195f3
  415d35:	add    BYTE PTR [esi-0x59],bl
  415d38:	add    al,0x1a
  415d3a:	add    eax,0xecd490e9
  415d3f:	push   0xfffffff6
  415d41:	add    ebp,DWORD PTR [ebx-0x17]
  415d44:	daa    
  415d45:	mov    ?,ebp
  415d47:	pop    esp
  415d48:	inc    edx
  415d49:	repz aaa 
  415d4b:	and    DWORD PTR [ebx-0x61d37803],ecx
  415d51:	je     0x415d53
  415d53:	inc    ecx
  415d54:	sub    dh,BYTE PTR [ebp+0x3f]
  415d57:	add    BYTE PTR [edi],ah
  415d59:	repz inc ebp
  415d5b:	push   0x56
  415d5d:	push   edi
  415d5e:	std    
  415d5f:	xor    eax,0x4112d2
  415d64:	call   FWORD PTR [edi+0x5398ff3c]
  415d6a:	shl    BYTE PTR [esi+edi*1-0x39],0x65
	...
  415d97:	add    BYTE PTR [eax],al
  415d99:	add    bh,dl
  415d9b:	outs   dx,DWORD PTR ds:[esi]
  415d9c:	mov    ebx,0x40f12e68
  415da1:	add    BYTE PTR [edi],dh
  415da3:	mov    al,ds:0x99af0874
  415da8:	(bad)  
  415da9:	dec    DWORD PTR [eax+0x72]
  415dac:	(bad)  
  415dad:	cmp    ch,BYTE PTR [eax]
  415daf:	lahf   
  415db0:	add    BYTE PTR gs:[edi-0x61974491],ah
  415db7:	hlt    
  415db8:	inc    eax
  415db9:	add    BYTE PTR [edi+0x2a],bh
  415dbc:	push   0x749fa741
  415dc1:	or     bh,ch
  415dc3:	test   eax,0x9f48ff62
  415dc8:	je     0x415dc6
  415dca:	dec    eax
  415dcb:	and    eax,0x5f41e806
  415dd0:	std    
  415dd1:	jmp    FWORD PTR [esi]
  415dd3:	pushf  
  415dd4:	add    DWORD PTR [eax],eax
  415dd6:	mov    dl,0xd3
  415dd8:	jmp    0x53df7160
  415ddd:	push   edi
  415dde:	mov    ebp,0x38506a5a
  415de3:	and    eax,0x670fe806
  415de8:	std    
  415de9:	(bad)  
  415dea:	ficom  WORD PTR [edx+edi*8]
  415ded:	mov    esi,edx
  415def:	adc    BYTE PTR [esi+0x41],al
  415df2:	daa    
  415df3:	int    0x3c
  415df5:	dec    ebp
  415df6:	outs   dx,DWORD PTR ds:[esi]
  415df7:	sbb    dh,bh
  415df9:	jg     0x415e39
  415dfb:	gs add al,0x74
	...
  415e26:	add    BYTE PTR [eax],al
  415e28:	sbb    DWORD PTR [esp+ecx*4-0x4d0b8097],0xffffffe7
  415e30:	and    edx,DWORD PTR [esi+0x4]
  415e33:	add    BYTE PTR ds:0x901ed0b4,dh
  415e39:	sbb    al,0x1c
  415e3b:	inc    esp
  415e3c:	icebp  
  415e3d:	mov    ah,0xb4
  415e3f:	addr16 ds hlt 
  415e42:	push   0xffffffbd
  415e44:	push   esi
  415e45:	sub    dh,0x40
  415e48:	ds inc esp
  415e4a:	pop    ecx
  415e4b:	je     0x415e93
  415e4d:	in     al,dx
  415e4e:	mov    edi,0x6c7cc962
  415e53:	dec    ebp
  415e54:	add    al,0x85
  415e56:	pop    ecx
  415e57:	jmp    0x1f3e:0x3d84363f
  415e5e:	pop    esp
  415e5f:	inc    ebp
  415e60:	stos   BYTE PTR es:[edi],al
  415e61:	pusha  
  415e62:	inc    esp
  415e63:	mov    eax,0xfe59a4a1
  415e68:	mov    WORD PTR [ebp+0x1c],?
  415e6b:	pop    es
  415e6c:	or     ebx,ecx
  415e6e:	pop    ecx
  415e6f:	je     0x415dfb
  415e71:	cmp    al,0xcf
  415e73:	pop    es
  415e74:	xchg   esi,eax
  415e75:	fst    DWORD PTR [ecx]
  415e77:	(bad)  
  415e78:	jns    0x415e46
  415e7a:	mov    bh,0xc8
  415e7c:	jl     0x415e6d
  415e7e:	add    DWORD PTR [ebp-0x4b],edx
  415e81:	dec    edi
  415e82:	test   ebx,eax
  415e84:	bound  edi,QWORD PTR [ebp-0x25c1964e]
  415e8a:	mov    ah,0xfe
	...
  415eb4:	add    BYTE PTR [eax],al
  415eb6:	retf   
  415eb7:	or     ebp,DWORD PTR [edx+0x49]
  415eba:	adc    ebp,edi
  415ebc:	pop    edx
  415ebd:	mov    bl,bh
  415ebf:	pop    es
  415ec0:	(bad)  
  415ec1:	xor    al,0x87
  415ec3:	mov    edx,0x5bc4ffc4
  415ec8:	and    al,0xc9
  415eca:	sbb    DWORD PTR [edx+0x5b6083e7],0xdda1c15b
  415ed4:	inc    ecx
  415ed5:	lds    edx,FWORD PTR [ecx]
  415ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed8:	iret   
  415ed9:	loop   0x415f3e
  415edb:	pop    ebx
  415edc:	out    0xe,eax
  415ede:	inc    BYTE PTR [edi-0x3f1e4e2a]
  415ee4:	sub    bl,BYTE PTR [ebx-0x10]
  415ee7:	stos   DWORD PTR es:[edi],eax
  415ee8:	(bad)  
  415eea:	ds in  al,dx
  415eec:	pop    ebp
  415eed:	jmp    0x415e80
  415eef:	jno    0x415f19
  415ef1:	add    al,0x6e
  415ef3:	cld    
  415ef4:	adc    al,0xc
  415ef6:	out    0x14,al
  415ef8:	or     bl,BYTE PTR [ebx-0x38]
  415efb:	repz xchg edi,eax
  415efd:	sbb    al,0xc1
  415eff:	cld    
  415f00:	add    BYTE PTR [eax+eax*1],0xdb
  415f04:	lods   eax,DWORD PTR ds:[esi]
  415f05:	add    ebp,DWORD PTR [ebx]
  415f07:	add    DWORD PTR [esi-0x5ee493a9],ebp
  415f0d:	pop    edx
  415f0e:	mov    al,ds:0xeb5556fc
  415f13:	inc    ebx
  415f14:	out    0xd0,al
  415f16:	aam    0xfc
  415f18:	mov    esp,0x57
	...
  415f41:	add    BYTE PTR [eax],al
  415f43:	add    BYTE PTR [eax+0x556bef86],cl
  415f49:	inc    esp
  415f4a:	ss pop edx
  415f4c:	sbb    BYTE PTR [ebp+0x5b3d4520],bl
  415f52:	mov    esp,0x23d8558e
  415f57:	push   edi
  415f58:	xlat   BYTE PTR ds:[ebx]
  415f59:	pop    edx
  415f5a:	xor    DWORD PTR [ebp+0x6bdf8658],0x5a064583
  415f64:	mov    dh,0x96
  415f66:	sti    
  415f67:	jmp    0xfc3d:0xa8007184
  415f6e:	jae    0x415f51
  415f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f71:	mov    fs,eax
  415f73:	out    0x87,al
  415f75:	std    
  415f76:	jae    0x415f55
  415f78:	xchg   DWORD PTR [edi+0x4675c108],eax
  415f7e:	std    
  415f7f:	into   
  415f80:	test   DWORD PTR [edx],ebx
  415f82:	add    eax,0xecd0d8e9
  415f87:	push   0x7e
  415f89:	sbb    al,0x57
  415f8b:	mov    dh,0x9
  415f8d:	push   eax
  415f8e:	call   0xfe3db3b7
  415f93:	bnd jge 0x415f1d
  415f96:	add    edi,DWORD PTR [edi]
  415f98:	jne    0x415fb4
  415f9a:	or     ecx,ebp
  415f9c:	rcl    BYTE PTR [esi-0x7888c610],0xc
  415fa3:	xchg   ecx,eax
  415fa4:	outs   dx,DWORD PTR ds:[esi]
  415fa5:	ds std 
  415fa7:	jle    0x415fa9
	...
  415fd1:	add    BYTE PTR [ebx],dh
  415fd3:	sbb    ecx,DWORD PTR [esi]
  415fd5:	ins    DWORD PTR es:[edi],dx
  415fd6:	dec    edx
  415fd7:	pop    edx
  415fd8:	add    cl,ch
  415fda:	push   ss
  415fdb:	xchg   esp,edi
  415fdd:	push   ecx
  415fde:	call   0xb5a05d25
  415fe3:	xchg   esi,eax
  415fe4:	in     al,dx
  415fe5:	push   esi
  415fe6:	mov    edi,edi
  415fe8:	std    
  415fe9:	aam    0x19
  415feb:	std    
  415fec:	jae    0x41602f
  415fee:	sbb    bh,BYTE PTR [edi+esi*1+0x3e]
  415ff2:	out    0xd0,eax
  415ff4:	jae    0x41603b
  415ff6:	in     eax,0xab
  415ff8:	add    cl,ch
  415ffa:	cmp    eax,0x7c924a73
  415fff:	sti    
  416000:	push   ebx
  416001:	adc    ecx,eax
  416003:	ss add cl,ch
  416006:	dec    edx
  416007:	sbb    esi,DWORD PTR [esp+eiz*8-0x1c]
  41600b:	mov    dh,0x0
  41600d:	add    BYTE PTR [edi+0x57],dl
  416010:	mov    eax,esi
  416012:	scas   eax,DWORD PTR es:[edi]
  416013:	or     eax,0x8727416b
  416018:	frstor [ebx]
  41601a:	daa    
  41601b:	pop    edi
  41601c:	add    eax,esi
  41601e:	scas   al,BYTE PTR es:[edi]
  41601f:	sub    esi,esp
  416021:	push   0x410865
  416026:	pop    ecx
  416027:	xchg   DWORD PTR [ebp+0x25],edi
  41602a:	daa    
  41602b:	pop    edi
  41602c:	or     eax,eax
  41602e:	dec    edx
  41602f:	cli    
  416030:	call   0xa077b5
  416035:	mov    al,BYTE PTR [eax]
	...
  41605f:	add    BYTE PTR [edi],dl
  416061:	popf   
  416062:	std    
  416063:	call   DWORD PTR [edi-0x4f]
  416066:	(bad)  
  416067:	jne    0x416038
  416069:	xchg   BYTE PTR [ebp+0x95ed723],dh
  41606f:	sar    BYTE PTR [ebx],0xff
  416072:	mov    BYTE PTR [ebp-0x45],al
  416075:	xchg   ebx,eax
  416076:	je     0x416060
  416078:	scas   eax,DWORD PTR es:[edi]
  416079:	imul   eax,DWORD PTR [ebp-0x1],0x40
  41607d:	in     eax,0x44
  41607f:	loopne 0x4160b1
  416081:	sub    edx,esp
  416083:	jmp    FWORD PTR [edx-0x11861a82]
  416089:	xchg   ebx,eax
  41608a:	dec    BYTE PTR [ebx]
  41608c:	push   edi
  41608d:	sub    bh,BYTE PTR [ebx]
  41608f:	rol    DWORD PTR [edx-0xdff9866],1
  416095:	mov    eax,0x290050e1
  41609a:	fsubp  st(0),st
  41609c:	xor    al,BYTE PTR [ecx]
  41609e:	(bad)  
  41609f:	call   FWORD PTR [esi+ebx*4+0x71]
  4160a3:	es jg  0x416103
  4160a6:	add    bh,ch
  4160a8:	loope  0x41603c
  4160aa:	je     0x4160b4
  4160ac:	dec    edi
  4160ad:	scas   al,BYTE PTR es:[edi]
  4160ae:	xor    al,0xff
  4160b0:	ds push ecx
  4160b2:	pop    eax
  4160b3:	je     0x41611b
  4160b5:	imul   ecx,esi,0xea95607
  4160bb:	inc    DWORD PTR [ecx-0x7]
  4160be:	retf   
  4160bf:	jecxz  0x4160fa
  4160c1:	ja     0x416124
  4160c3:	inc    BYTE PTR [eax]
	...
  4160ed:	add    BYTE PTR [ebx+0x736c69fc],ch
  4160f3:	add    DWORD PTR [esi-0x2],edx
  4160f6:	stos   DWORD PTR es:[edi],eax
  4160f7:	and    al,0x6d
  4160f9:	jge    0x416151
  4160fb:	adc    DWORD PTR [esi+0x59],edx
  4160fe:	jbe    0x41617c
  416100:	hlt    
  416101:	jg     0x41614b
  416103:	add    al,0x7
  416105:	test   DWORD PTR [ecx-0x47],edi
  416108:	push   ebp
  416109:	(bad)  
  41610a:	pushw  es
  41610c:	add    ch,bh
  41610e:	mov    al,0xc8
  416110:	iret   
  416111:	pop    es
  416112:	(bad)  
  416113:	not    BYTE PTR [eax]
  416115:	jmp    ecx
  416117:	fmul   st,st(7)
  416119:	sti    
  41611a:	fst    DWORD PTR [esi+0x68]
  41611d:	dec    BYTE PTR [ebx-0x4]
  416120:	imul   edi,DWORD PTR [ebx+edx*1],0x4bfe55e1
  416127:	call   0x71b7ae98
  41612c:	push   ebp
  41612d:	mov    ebx,?
  41612f:	jae    0x4160e5
  416131:	out    0x2b,eax
  416133:	inc    edx
  416134:	push   ebp
  416135:	(bad)  
  416136:	xchg   ebp,eax
  416137:	add    esi,DWORD PTR [eax+ecx*8+0x5501fb7c]
  41613e:	lds    esi,FWORD PTR [edi]
  416140:	add    ebx,0xfbbf6ea2
  416146:	out    dx,al
  416147:	cmp    bh,cl
  416149:	or     edi,DWORD PTR [ecx-0x4a]
  41614c:	or     eax,ebp
  41614e:	adc    eax,0x460
	...
  41617b:	add    BYTE PTR ds:0xbb07275b,dh
  416181:	inc    edx
  416182:	call   0xe7c69f8a
  416187:	jmp    0x4161a4
  416189:	xchg   BYTE PTR [eax-0xc90b6fd],ch
  41618f:	push   esi
  416190:	retf   0xf62
  416193:	pop    ds
  416194:	jne    0x41618e
  416196:	test   BYTE PTR [edx+edi*2-0x69fc7e0d],0x44
  41619e:	push   edx
  41619f:	lds    esp,FWORD PTR [ecx]
  4161a1:	cli    
  4161a2:	push   esp
  4161a3:	or     BYTE PTR [ecx],bl
  4161a5:	outs   dx,DWORD PTR ds:[esi]
  4161a6:	fild   QWORD PTR [ebx+0x2f]
  4161a9:	xor    al,0xce
  4161ab:	push   esi
  4161ac:	mov    dh,0x9e
  4161ae:	mov    ebx,0x17ff7a88
  4161b3:	in     al,dx
  4161b4:	das    
  4161b5:	test   BYTE PTR [eax],ch
  4161b7:	add    al,0xf1
  4161b9:	outs   dx,BYTE PTR ds:[esi]
  4161ba:	fist   DWORD PTR [esi+0x72]
  4161bd:	arpl   WORD PTR [edi-0x6107d8a6],cx
  4161c3:	mov    WORD PTR [edx+0x660401eb],es
  4161c9:	xor    al,BYTE PTR [edx]
  4161cb:	vpsubw xmm7,xmm6,xmm4
  4161cf:	pop    es
  4161d0:	shr    DWORD PTR [esi-0x11],0x6b
  4161d4:	mov    ds:0xc6567635,eax
  4161d9:	sahf   
  4161da:	jnp    0x4161c5
  4161dc:	test   eax,0xeb2580
	...
  416209:	add    dh,bh
  41620b:	pop    edx
  41620c:	pop    esi
  41620d:	rol    BYTE PTR [ebp-0x8],1
  416210:	fmul   QWORD PTR [ebx]
  416212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416213:	or     dl,BYTE PTR [edx]
  416215:	push   edi
  416216:	mov    dl,ah
  416218:	lods   al,BYTE PTR ds:[esi]
  416219:	imul   edi,DWORD PTR [esi+esi*2-0x20b6fcc9],0x0
  416221:	push   0x3d
  416223:	pop    ebx
  416224:	add    BYTE PTR [edx-0x7a],ch
  416227:	cld    
  416228:	add    BYTE PTR [ebp+0x573f986],bl
  41622e:	lock outs dx,BYTE PTR ds:[esi]
  416230:	lock add DWORD PTR [eax-0x60],edi
  416234:	std    
  416235:	push   cs
  416236:	xor    al,0x1b
  416238:	jne    0x4161d1
  41623a:	or     al,BYTE PTR [edi-0x19c26c1c]
  416240:	inc    ebx
  416241:	or     eax,0xf973f8ed
  416246:	xchg   esp,eax
  416247:	pop    ebp
  416248:	pop    edi
  416249:	out    0x8b,al
  41624b:	rcl    BYTE PTR gs:[ebp-0x2b],0xdc
  416250:	jnp    0x416223
  416252:	cmp    ch,BYTE PTR [edi+0x51]
  416255:	push   0xfffffff1
  416257:	jmp    0x416259
  416259:	cmp    eax,0xb97bdcf9
  41625e:	inc    edx
  41625f:	outs   dx,DWORD PTR ds:[esi]
  416260:	inc    ebp
  416261:	inc    ecx
  416262:	cmp    bl,BYTE PTR [ebx-0x13]
  416265:	outs   dx,DWORD PTR ds:[esi]
  416266:	xchg   ebx,eax
  416267:	outs   dx,DWORD PTR ds:[esi]
  416268:	adc    BYTE PTR [ecx-0x6102d412],dl
	...
  416296:	add    BYTE PTR [eax],al
  416298:	jae    0x416309
  41629a:	clc    
  41629b:	xchg   esi,eax
  41629c:	add    DWORD PTR [eax-0x18],ebp
  41629f:	add    ch,BYTE PTR [esi]
  4162a1:	clc    
  4162a2:	std    
  4162a3:	xchg   cl,dh
  4162a5:	jmp    0x4162a4
  4162a7:	hlt    
  4162a8:	lods   eax,DWORD PTR ds:[esi]
  4162a9:	jmp    DWORD PTR [eax-0x43]
  4162ac:	or     bh,cl
  4162ae:	std    
  4162af:	hlt    
  4162b0:	or     ecx,edi
  4162b2:	jae    0x41630d
  4162b4:	or     ebp,DWORD PTR [edi+0x10]
  4162b7:	push   ecx
  4162b8:	cmp    BYTE PTR [edi],ch
  4162ba:	std    
  4162bb:	push   esi
  4162bc:	jmp    0x41632c
  4162be:	in     al,dx
  4162bf:	dec    esi
  4162c0:	jns    0x416329
  4162c2:	call   0xfda932c7
  4162c7:	(bad)  
  4162c8:	cmp    BYTE PTR [eax],ch
  4162ca:	out    0xff,al
  4162cc:	mov    dl,0xeb
  4162ce:	in     eax,0x3c
  4162d0:	jae    0x416260
  4162d2:	(bad)  
  4162d3:	inc    edx
  4162d5:	xchg   ebx,eax
  4162d6:	in     eax,0x21
  4162d8:	jo     0x416268
  4162da:	(bad)  
  4162db:	push   DWORD PTR [edx+0x7019e5a7]
  4162e1:	mov    ?,esi
  4162e3:	inc    edx
  4162e5:	mov    esp,ebp
  4162e7:	adc    eax,esi
  4162e9:	(bad)  
  4162ea:	(bad)  
  4162eb:	push   DWORD PTR [edx-0xff61a82]
  4162f1:	(bad)  
  4162f2:	(bad)  
  4162f3:	inc    DWORD PTR [edx+0x3001e587]
  4162f9:	nop
  4162fa:	(bad)  
  4162fb:	inc    DWORD PTR [eax]
	...
  416325:	add    BYTE PTR [edx-0x6d],dh
  416328:	in     eax,0x25
  41632a:	xor    al,0x5f
  41632c:	add    cl,cl
  41632e:	aad    0x5e
  416330:	add    BYTE PTR [ebp+0x6c],dl
  416333:	jle    0x4162b5
  416335:	(bad)  
  416336:	jmp    DWORD PTR [edi-0x4a750002]
  41633c:	stc    
  41633d:	push   eax
  41633e:	cwde   
  41633f:	and    eax,0x6732ff0a
  416344:	call   0x9c6758
  416349:	or     edx,DWORD PTR [edi-0x285a7ca1]
  41634f:	pop    edx
  416350:	add    bh,al
  416352:	bound  edx,QWORD PTR [edi+0x5aa7fffd]
  416358:	lds    eax,FWORD PTR [ebp+0x33]
  41635b:	pop    DWORD PTR [esi]
  41635d:	add    BYTE PTR [edi-0x589601fc],dl
  416363:	fld    QWORD PTR [esp+ebp*8-0x1ab6ac2]
  41636a:	out    dx,al
  41636b:	sbb    DWORD PTR [edx],eax
  41636d:	(bad)  
  41636e:	sti    
  41636f:	aaa    
  416370:	mov    cl,0x8c
  416372:	ret    
  416373:	xor    BYTE PTR [esi+edi*8+0x71],cl
  416377:	aam    0x54
  416379:	je     0x4163e1
  41637b:	inc    ebp
  41637c:	into   
  41637d:	sti    
  41637e:	push   esi
  41637f:	cmp    bl,BYTE PTR [edi]
  416381:	add    BYTE PTR [esi],bh
  416383:	jmp    0x597dd6c9
  416388:	fild   DWORD PTR [edx+0x0]
	...
  4163b2:	add    BYTE PTR [eax],al
  4163b4:	mov    edi,eax
  4163b6:	dec    ecx
  4163b7:	inc    BYTE PTR [ecx+0x3]
  4163ba:	into   
  4163bb:	add    al,0x39
  4163bd:	mov    edi,0x7efcea59
  4163c2:	jle    0x4163ab
  4163c4:	xor    DWORD PTR ds:0x86b34f52,eax
  4163ca:	pop    eax
  4163cb:	neg    BYTE PTR [ecx]
  4163cd:	adc    eax,0x8bfeb5
  4163d2:	push   ebx
  4163d3:	je     0x41640b
  4163d5:	sbb    al,0x82
  4163d7:	cmp    BYTE PTR [ecx],al
  4163d9:	sbb    eax,0xf172bffe
  4163de:	jl     0x416364
  4163e0:	out    dx,al
  4163e1:	mov    ah,0x51
  4163e3:	(bad)  
  4163e4:	push   esi
  4163e5:	aas    
  4163e6:	fld    QWORD PTR [eax+0x3e]
  4163e9:	mov    ebp,0xd4d1ef97
  4163ee:	push   ecx
  4163ef:	out    0xef,eax
  4163f1:	and    DWORD PTR [edx],eax
  4163f3:	add    BYTE PTR ds:0xc10dd8c4,dh
  4163f9:	ss push esp
  4163fb:	idiv   BYTE PTR [ecx+0x4e745174]
  416401:	fdivr  QWORD PTR [eax]
  416403:	sti    
  416404:	test   eax,0xaeb45184
  416409:	pop    edx
  41640a:	pop    esi
  41640b:	push   ebx
  41640c:	cwde   
  41640d:	add    ch,BYTE PTR [eax+0x56f59119]
  416413:	leave  
  416414:	xchg   ecx,eax
  416415:	add    eax,edx
  416417:	push   edx
	...
  416440:	add    BYTE PTR [eax],al
  416442:	xor    ch,0x46
  416445:	fnstenv [ebp+0x2]
  416448:	pushf  
  416449:	and    eax,0x46205b3e
  41644e:	xor    eax,0x557e945b
  416453:	fldcw  WORD PTR [ebx]
  416455:	push   eax
  416456:	out    0x5a,eax
  416458:	xchg   ecx,eax
  416459:	mov    dh,0x50
  41645b:	outs   dx,DWORD PTR ds:[esi]
  41645c:	fistp  WORD PTR [ebx-0x11]
  41645f:	sub    DWORD PTR [esi],ecx
  416461:	push   ebx
  416462:	mov    dh,0x9f
  416464:	add    edx,DWORD PTR [ebx-0x4e]
  416467:	arpl   WORD PTR [edi-0x186558ca],cx
  41646d:	push   edx
  41646e:	jb     0x41648e
  416470:	mov    al,ds:0xadfd21c4
  416475:	push   eax
  416476:	sbb    ch,dh
  416478:	(bad)  
  41647a:	cmp    DWORD PTR [ebx+0x5b7eddba],eax
  416480:	aas    
  416481:	push   es
  416482:	ds pop ebx
  416484:	addr16 pop ebx
  416486:	lods   eax,DWORD PTR ds:[esi]
  416487:	idiv   BYTE PTR [esi-0x20910fae]
  41648d:	(bad)  
  41648f:	sub    DWORD PTR [eax],0xac2ee104
  416495:	mov    ebx,0x5d8f5b7e
  41649a:	shl    esp,cl
  41649c:	xchg   esi,eax
  41649d:	push   edx
  41649e:	push   edx
  41649f:	arpl   di,di
  4164a1:	dec    ebp
  4164a2:	push   edi
  4164a3:	call   0x0:0xdbe7
	...
  4164ce:	add    BYTE PTR [eax],al
  4164d0:	aas    
  4164d1:	pop    ebx
  4164d2:	out    0x83,eax
  4164d4:	cdq    
  4164d5:	adc    eax,DWORD PTR [ecx]
  4164d7:	ja     0x4164e5
  4164d9:	cmc    
  4164da:	std    
  4164db:	hlt    
  4164dc:	icebp  
  4164dd:	hlt    
  4164de:	jae    0x4164d1
  4164e0:	cmc    
  4164e1:	xor    esi,DWORD PTR [ecx]
  4164e3:	pop    esi
  4164e4:	in     al,dx
  4164e5:	and    al,bl
  4164e7:	in     eax,dx
  4164e8:	cmp    eax,0xb83d898e
  4164ed:	sbb    ch,bh
  4164ef:	sar    DWORD PTR ds:0x963e5481,cl
  4164f5:	pop    esp
  4164f6:	call   0xfe35b848
  4164fb:	pusha  
  4164fc:	jbe    0x4164ee
  4164fe:	push   0x9b78bf
  416503:	push   ds
  416504:	jbe    0x416562
  416506:	call   0xfe367e98
  41650b:	push   cs
  41650c:	data16 lock std 
  41650f:	jl     0x416546
  416511:	cld    
  416512:	or     eax,0xc7f58cba
  416517:	sub    eax,DWORD PTR [ecx+0x5b]
  41651a:	push   ebx
  41651b:	bound  eax,QWORD PTR [ecx-0x2b1a3b27]
  416521:	mov    WORD PTR [edx-0x17],gs
  416524:	repz mov ?,ebp
  416527:	pop    esp
  416528:	or     bh,ah
  41652a:	scas   eax,DWORD PTR es:[edi]
  41652b:	sbb    ebp,DWORD PTR [edi-0xb]
  41652e:	xchg   DWORD PTR [esi+ecx*4],ebp
  416531:	loope  0x416566
  416533:	xor    BYTE PTR [eax],al
	...
  41655d:	add    BYTE PTR [edx+0x3962009a],dh
  416563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416564:	dec    eax
  416565:	sub    BYTE PTR [edx],bh
  416567:	fstp   TBYTE PTR ds:0x689ef1e9
  41656d:	aas    
  41656e:	repz call 0xe920:0x266a3e00
  416576:	cmp    eax,0xbb00c060
  41657b:	jmp    0xfffd:0x4a85e853
  416582:	inc    edi
  416583:	pop    ss
  416584:	(bad)  
  416585:	jmp    DWORD PTR [eax]
  416587:	leave  
  416588:	gs gs ins BYTE PTR es:[edi],dx
  41658b:	sbb    dh,bh
  41658d:	dec    edi
  41658e:	lock or eax,DWORD PTR [esi]
  416591:	call   0x400ed7
  416596:	call   DWORD PTR [ecx+0x33]
  416599:	inc    DWORD PTR [eax]
  41659b:	xchg   esi,eax
  41659c:	add    BYTE PTR [esi-0x19],al
  41659f:	dec    eax
  4165a0:	add    BYTE PTR [ebp+0x2d],dh
  4165a3:	and    edx,edi
  4165a5:	xor    edx,DWORD PTR [edi]
  4165a7:	loopne 0x4165a7
  4165a9:	jmp    DWORD PTR [eax]
  4165ab:	mov    ch,bh
  4165ad:	scas   al,BYTE PTR es:[edi]
  4165ae:	pop    edi
  4165af:	bound  esi,QWORD PTR [ebx-0x45]
  4165b2:	xor    BYTE PTR [edx+edi*8],cl
  4165b5:	jmp    FWORD PTR [edx-0xa6c1a11]
  4165bb:	mov    edi,esi
  4165bd:	pop    edi
  4165be:	shl    DWORD PTR ds:0x4bf,1
	...
  4165ec:	pop    ss
  4165ed:	stos   BYTE PTR es:[edi],al
  4165ee:	mov    ch,ah
  4165f0:	xchg   esp,eax
  4165f1:	mov    ds:0xc86283f5,eax
  4165f6:	dec    edx
  4165f7:	inc    ecx
  4165f8:	daa    
  4165f9:	pop    edi
  4165fa:	jae    0x416600
  4165fc:	ficomp WORD PTR [eax+0x5a7f0005]
  416602:	(bad)  
  416603:	jmp    edi
  416605:	xchg   esi,eax
  416606:	or     BYTE PTR ds:0x45888bb0,dh
  41660c:	mov    bl,0xa3
  41660e:	inc    esp
  41660f:	clc    
  416610:	fistp  DWORD PTR [ebp+0x0]
  416613:	add    BYTE PTR [edx+0x19],dl
  416616:	not    BYTE PTR [eax-0x50]
  416619:	or     edx,edi
  41661b:	(bad)  
  41661c:	ds dec edi
  41661e:	add    bh,bh
  416620:	dec    ebx
  416621:	adc    BYTE PTR [ecx+0x14],dl
  416624:	in     eax,dx
  416625:	sub    eax,0xe7b0ffc1
  41662a:	dec    ebp
  41662b:	out    0xdd,eax
  41662d:	or     DWORD PTR [edx],eax
  41662f:	add    BYTE PTR [ebp+0x3376046c],bh
  416635:	or     al,0x2
  416637:	add    BYTE PTR [ecx+0x1570d9d2],ah
  41663d:	ret    
  41663e:	add    edi,edi
  416640:	or     esp,DWORD PTR [eax-0x73b98bb0]
  416646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416647:	pop    esp
  416648:	jno    0x41667b
  41664a:	push   eax
  41664b:	je     0x4166b7
  41664d:	pushf  
  41664e:	pushf  
  41664f:	xor    eax,DWORD PTR [eax]
	...
  416679:	add    BYTE PTR [ecx+0x41],ah
  41667c:	cmp    al,cl
  41667e:	inc    esi
  41667f:	add    al,0xb7
  416681:	mov    ah,BYTE PTR [edx-0x7b]
  416684:	inc    ebp
  416685:	sti    
  416686:	aam    0x3
  416688:	fcom   QWORD PTR [ebp+0x41]
  41668b:	(bad)  
  41668c:	stc    
  41668d:	out    0xb,eax
  41668f:	mov    bl,0x50
  416691:	inc    bh
  416693:	mov    dh,0x4d
  416695:	addr16 mov al,0xdd
  416698:	ret    0x20ff
  41669b:	addr16 stc 
  41669d:	out    0x90,eax
  41669f:	stc    
  4166a0:	dec    ebp
  4166a1:	(bad)  
  4166a2:	adc    DWORD PTR [edi-0x36c01b0],eax
  4166a8:	pop    ecx
  4166a9:	test   DWORD PTR [edi+0x21],0xfffcc84e
  4166b0:	add    DWORD PTR [ebp-0x3b],edx
  4166b3:	pop    ds
  4166b4:	add    bl,0xea
  4166b7:	popf   
  4166b8:	add    al,0x6a
  4166ba:	mov    ecx,eax
  4166bc:	xlat   BYTE PTR ds:[ebx]
  4166bd:	pop    es
  4166be:	out    0x5a,al
  4166c0:	adc    DWORD PTR ds:0xc970f1d1,0xffffffc5
  4166c7:	and    bh,0x3
  4166ca:	shl    DWORD PTR [eax-0x63db8f01],1
  4166d0:	out    0xdb,eax
  4166d2:	fld    DWORD PTR [ebp+0x67a90428]
  4166d8:	fistp  WORD PTR [ebx-0x48]
  4166db:	(bad)  
  4166dc:	outs   dx,BYTE PTR ds:[esi]
  4166dd:	dec    edi
	...
  416706:	add    BYTE PTR [eax],al
  416708:	cwde   
  416709:	arpl   WORD PTR [bx+0xa],cx
  41670d:	arpl   WORD PTR [edi-0x6f],cx
  416710:	dec    esi
  416711:	repnz push esi
  416713:	cmp    eax,0xb8e7567f
  416718:	(bad)  
  416719:	(bad)  
  41671a:	push   0x48
  41671c:	lea    ecx,[eax+0x5ef24e96]
  416722:	aas    
  416723:	cld    
  416724:	es repnz cs sti 
  416728:	cdq    
  416729:	addr16 in eax,dx
  41672b:	scas   al,BYTE PTR es:[edi]
  41672c:	repz and ebp,DWORD PTR [edx]
  41672f:	cld    
  416730:	dec    ecx
  416731:	fisubr WORD PTR [ebx+edx*2-0x6b0e0f]
  416738:	and    DWORD PTR [ebx+0x65304ec0],esi
  41673e:	daa    
  41673f:	(bad)  
  416740:	mov    ebp,0x3e03e894
  416745:	lock je 0x416797
  416748:	enter  0xc396,0x34
  41674c:	mov    ds:0xe5d8df0f,al
  416751:	lock pop esp
  416753:	dec    esp
  416754:	sbb    DWORD PTR [edx],edx
  416756:	sub    ecx,DWORD PTR [edi-0x8]
  416759:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41675b:	xlat   BYTE PTR ds:[ebx]
  41675c:	cmp    dl,ah
  41675e:	and    al,0x60
  416760:	mov    ah,0xeb
  416762:	add    dl,al
  416764:	shl    ecx,1
  416766:	jae    0x416715
  416768:	jne    0x416759
  41676a:	xor    DWORD PTR [esi+0x0],esp
	...
  416794:	add    BYTE PTR [eax],al
  416796:	and    bl,0x43
  416799:	lea    edi,[eax+0x67]
  41679c:	cld    
  41679d:	xchg   esi,eax
  41679e:	out    0x4,al
  4167a0:	(bad)  
  4167a1:	adc    al,0xa
  4167a3:	clc    
  4167a4:	and    DWORD PTR [ebp-0xb760f00],edi
  4167aa:	or     DWORD PTR [ebx],eax
  4167ac:	loope  0x416797
  4167ae:	cmp    eax,0x7490bd5b
  4167b3:	fwait
  4167b4:	add    BYTE PTR [esi+0x945f8cb],bh
  4167ba:	inc    edx
  4167bb:	pop    ebx
  4167bc:	or     DWORD PTR [ecx],ebp
  4167be:	imul   ebx,DWORD PTR [edx-0x17],0xc02d09fa
  4167c5:	add    BYTE PTR [eax],0xf1
  4167c8:	std    
  4167c9:	movsx  edi,BYTE PTR ds:[eax]
  4167cd:	out    dx,al
  4167ce:	xchg   bh,dh
  4167d0:	out    0x21,eax
  4167d2:	cmp    eax,0xed72005b
  4167d7:	ja     0x4167ad
  4167d9:	xchg   edx,eax
  4167da:	xor    al,0x53
  4167dd:	add    DWORD PTR [eax+0x50],eax
  4167e0:	add    cl,ch
  4167e2:	xor    al,0xb0
  4167e4:	jae    0x4167d2
  4167e6:	xchg   edx,eax
  4167e7:	stos   BYTE PTR es:[edi],al
  4167e8:	add    cl,ch
  4167ea:	cmp    eax,0xa5f9899b
  4167ef:	addr16 call 0x3fc6bb76
  4167f5:	jmp    0x9475fc5
	...
  416822:	add    BYTE PTR [eax],al
  416824:	inc    edx
  416825:	pop    ebx
  416826:	or     DWORD PTR [ecx+0x71e756e9],ebp
  41682c:	inc    edx
  41682d:	pop    ebx
  41682e:	add    BYTE PTR [eax],al
  416830:	ins    DWORD PTR es:[edi],dx
  416831:	out    0xc3,eax
  416833:	add    bh,dl
  416835:	stos   DWORD PTR es:[edi],eax
  416836:	dec    edi
  416837:	jmp    DWORD PTR [edx]
  416839:	(bad)  
  41683a:	in     eax,0x3f
  41683c:	or     DWORD PTR [eax+eax*1+0xb],ebx
  416840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416841:	adc    dh,BYTE PTR [edx-0x77]
  416844:	and    al,BYTE PTR [ebx-0x71408a02]
  41684a:	sbb    eax,DWORD PTR [ebx-0x38]
  41684d:	popf   
  41684e:	mov    BYTE PTR [ebp-0x39],al
  416851:	popf   
  416852:	je     0x416838
  416854:	sub    BYTE PTR [eax],cl
  416856:	fsubp  st(0),st
  416858:	xchg   edi,eax
  416859:	pop    ss
  41685a:	(bad)  
  41685b:	call   FWORD PTR [ebx+ebx*4+0x10564f71]
  416862:	loop   0x416863
  416864:	xor    bl,BYTE PTR [ebx+0x6e97416a]
  41686a:	inc    esp
  41686b:	fmul   DWORD PTR [eax]
  41686d:	dec    eax
  41686e:	shr    BYTE PTR [ebx-0x5a],1
  416871:	pop    ebx
  416872:	lea    eax,[ebp+0x53]
  416875:	jo     0x4168bb
  416877:	aam    0xc7
  416879:	jo     0x4168bf
  41687b:	in     al,0xb7
  41687d:	sahf   
  41687e:	je     0x416860
  416880:	das    
  416881:	mov    bh,0x59
  416883:	jmp    FWORD PTR [eax]
  416885:	repnz mov ebp,0x74
	...
  4168af:	add    BYTE PTR [eax],al
  4168b1:	add    BYTE PTR [ecx+0x13],dh
  4168b4:	add    DWORD PTR [eax],eax
  4168b6:	cmp    cl,ah
  4168b8:	(bad)  
  4168b9:	jne    0x4168ea
  4168bb:	xchg   ebx,eax
  4168bc:	ret    0x282f
  4168bf:	mov    al,ds:0xa03f75fe
  4168c4:	je     0x4168ce
  4168c6:	aas    
  4168c7:	add    DWORD PTR [esi],ebp
  4168c9:	call   FWORD PTR [eax]
  4168cb:	mov    al,ds:0x5e8e474
  4168d0:	fdivp  st(7),st
  4168d2:	ds (bad) 
  4168d4:	cld    
  4168d5:	out    0xde,eax
  4168d7:	in     eax,dx
  4168d8:	dec    esp
  4168d9:	(bad)  
  4168da:	icebp  
  4168db:	das    
  4168dc:	fs out 0xef,eax
  4168df:	repnz dec esp
  4168e1:	inc    BYTE PTR [esp+ecx*2-0x59baf084]
  4168e8:	aad    0x8
  4168ea:	mov    esi,0xc30f01f6
  4168ef:	icebp  
  4168f0:	dec    esp
  4168f1:	inc    cl
  4168f3:	pop    esp
  4168f4:	add    al,BYTE PTR [eax]
  4168f6:	test   eax,0x46744c9e
  4168fb:	int3   
  4168fc:	test   DWORD PTR [esi],ebp
  4168fe:	test   eax,0xa2744c6d
  416903:	gs (bad) 
  416905:	neg    DWORD PTR [ecx-0x1d180619]
  41690b:	inc    ebp
  41690c:	dec    ebx
  41690d:	dec    BYTE PTR [ecx-0x3c18a1f9]
  416913:	push   edx
  416914:	dec    ebx
  416915:	inc    BYTE PTR [eax]
	...
  41693f:	add    bl,cl
  416941:	mov    bh,0x51
  416943:	dec    edi
  416944:	data16 mov BYTE PTR [ecx],cl
  416947:	jmp    FWORD PTR [ecx-0x77]
  41694a:	add    DWORD PTR [edi+0x0],ebx
  41694d:	cmp    edi,DWORD PTR [edi]
  41694f:	pop    es
  416950:	ds (bad) 
  416952:	js     0x41693f
  416954:	push   ecx
  416955:	iret   
  416956:	std    
  416957:	(bad)  
  416958:	shr    ebx,cl
  41695a:	pop    ecx
  41695b:	bound  eax,QWORD PTR [eax+0x45]
  41695e:	dec    esp
  41695f:	enter  0xffc,0x2
  416963:	push   ebp
  416964:	lds    eax,FWORD PTR [edi+0x4c]
  416967:	je     0x4169a3
  416969:	dec    esp
  41696a:	fs xor eax,0xbff5e521
  416970:	xchg   edx,eax
  416971:	and    DWORD PTR [ebp+0x74],ecx
  416974:	cs pop ebx
  416976:	aaa    
  416977:	pop    esp
  416978:	xchg   edx,eax
  416979:	and    eax,0x83714bde
  41697e:	(bad)  [ecx+0x39]
  416981:	pop    ebx
  416982:	into   
  416983:	ror    DWORD PTR [ecx-0x12],1
  416986:	cmp    al,0xf0
  416988:	jns    0x416978
  41698a:	xor    al,0xfc
  41698c:	fldenv [esi+0x2d84b10]
  416992:	inc    eax
  416993:	push   ss
  416994:	shr    ebp,1
  416996:	mov    al,0x46
  416998:	sub    eax,0xd57f345b
  41699d:	and    bh,0x3
  4169a0:	test   eax,0x87ffac
	...
  4169cd:	add    BYTE PTR [esp+ebx*4],ah
  4169d0:	out    0x4a,eax
  4169d2:	xor    bl,BYTE PTR [edi+0x11]
  4169d5:	out    dx,al
  4169d6:	mov    al,ds:0xe95bdf67
  4169db:	in     eax,dx
  4169dc:	outs   dx,BYTE PTR ds:[esi]
  4169dd:	dec    ebx
  4169de:	sbb    DWORD PTR [ebx-0x19],ebx
  4169e1:	pop    edx
  4169e2:	retf   
  4169e3:	sbb    BYTE PTR [ebx+0x565afedf],0xd1
  4169ea:	inc    ebp
  4169eb:	sub    ebx,0x4f62ea4a
  4169f1:	ins    DWORD PTR es:[edi],dx
  4169f2:	push   0x61dc3eed
  4169f7:	in     eax,dx
  4169f8:	inc    esi
  4169f9:	mov    ah,cl
  4169fb:	scas   al,BYTE PTR es:[edi]
  4169fc:	ret    0x51c4
  4169ff:	in     al,dx
  416a00:	pushf  
  416a01:	not    edi
  416a03:	cmp    DWORD PTR [esi],ebx
  416a05:	sar    DWORD PTR [ecx],1
  416a07:	add    ebp,DWORD PTR [edx+0x4b]
  416a0a:	cmp    ch,ch
  416a0c:	and    BYTE PTR [esi+0x39],al
  416a0f:	pop    ebx
  416a10:	pushf  
  416a11:	jle    0x416a28
  416a13:	test   BYTE PTR [edi],dl
  416a15:	fistp  QWORD PTR [esi+0x5b]
  416a18:	add    BYTE PTR [ecx-0x16c07e84],al
  416a1e:	test   BYTE PTR [edi+0x10],ah
  416a21:	out    0x2e,al
  416a23:	push   ss
  416a24:	dec    ecx
  416a25:	sub    BYTE PTR [edx],bh
  416a27:	add    edx,DWORD PTR [esp+ebx*1]
  416a2a:	test   ebp,ebp
  416a2c:	or     DWORD PTR [ecx-0x4a5eadff],ebp
	...
  416a5a:	add    BYTE PTR [eax],al
  416a5c:	or     BYTE PTR [eax+eax*1-0x29ef142],bl
  416a63:	cmp    al,0xda
  416a65:	hlt    
  416a66:	sub    DWORD PTR [esi-0x2302127c],0x11
  416a6d:	cmp    DWORD PTR [edi],0x300e65e9
  416a73:	xchg   esi,eax
  416a74:	add    al,0x23
  416a76:	ret    
  416a77:	fnstsw WORD PTR ds:0xc0958986
  416a7d:	sbb    ch,bh
  416a7f:	adc    edi,DWORD PTR [edx]
  416a81:	adc    DWORD PTR [edi+0x76],0xe9e8546e
  416a88:	xor    al,0xec
  416a8a:	std    
  416a8b:	jo     0x416b0b
  416a8d:	lock push 0x9b6622
  416a93:	shl    DWORD PTR [edi-0x80],0x3f
  416a97:	jmp    0x5149d1a0
  416a9c:	fsubr  st,st(4)
  416a9e:	std    
  416a9f:	ds hlt 
  416aa1:	data16 cld 
  416aa3:	outs   dx,BYTE PTR ss:[esi]
  416aa5:	push   esp
  416aa6:	call   0xfe2d9fb2
  416aab:	xor    BYTE PTR [ebx],al
  416aad:	pop    eax
  416aae:	add    BYTE PTR [eax+eax*8-0x7ed27e01],dh
  416ab5:	add    BYTE PTR [eax],0x83
  416ab8:	in     eax,0xec
  416aba:	jae    0x416abc
  416abc:	das    
  416abd:	nop
  416abe:	(bad)  
  416abf:	add    BYTE PTR cs:[eax],al
	...
  416aea:	and    BYTE PTR [edx+0x11134588],ah
  416af0:	jbe    0x416b5e
  416af2:	out    0x57,al
  416af4:	push   0xfe187360
  416af9:	(bad)  
  416afa:	push   0xffffffef
  416afc:	in     eax,0x65
  416afe:	adc    BYTE PTR [edx-0x5c750002],ah
  416b04:	(bad)  
  416b05:	jne    0x416af6
  416b07:	(bad)  
  416b08:	in     eax,dx
  416b09:	mov    al,cs:0xebc2c8a1
  416b0f:	push   edi
  416b10:	push   ebx
  416b11:	mov    edx,DWORD PTR [ebx+0x2dfcc1d5]
  416b17:	push   edi
  416b18:	push   0x5a
  416b1a:	mov    al,ds:0x3be8061b
  416b1f:	push   ecx
  416b20:	std    
  416b21:	call   FWORD PTR [esi]
  416b23:	lods   al,BYTE PTR ds:[esi]
  416b24:	stc    
  416b25:	push   0xffffff97
  416b27:	lgs    ebp,FWORD PTR [esi+edx*2+0x57]
  416b2c:	push   0xfe184398
  416b31:	dec    dl
  416b33:	sub    al,0x45
  416b35:	inc    ecx
  416b36:	xchg   edi,eax
  416b37:	(bad)  
  416b38:	push   edi
  416b39:	xor    al,0xe0
  416b3b:	mov    eax,ds:0x9bc00a
  416b40:	dec    esi
  416b41:	push   0xbeed5767
  416b46:	(bad)  
  416b47:	das    
  416b48:	imul   eax,DWORD PTR [ecx+0x57],0x75fea7
	...
  416b77:	add    BYTE PTR [edi-0x71],bl
  416b7a:	sbb    DWORD PTR [edx+0x20],ebx
  416b7d:	mov    ds:0xa26625e5,al
  416b82:	(bad)  
  416b83:	push   0x57
  416b85:	lgs    ebp,FWORD PTR [esi+edi*1-0x4d]
  416b8a:	add    DWORD PTR [eax-0x2a],ebp
  416b8d:	push   0xf6a1ffc2
  416b92:	add    DWORD PTR [eax],eax
  416b94:	mov    esi,0x19341f4c
  416b99:	repnz cld 
  416b9b:	mov    edi,0x67b20b8a
  416ba0:	ds hlt 
  416ba2:	pop    eax
  416ba3:	mov    ebp,0x40d5ac96
  416ba8:	ds and al,0x47
  416bab:	je     0x416bf3
  416bad:	sbb    al,0x5b
  416baf:	pop    eax
  416bb0:	jmp    0x2f32c5d6
  416bb5:	test   eax,0x9c3e6948
  416bba:	test   DWORD PTR [ebx+0x7f],ebp
  416bbd:	hlt    
  416bbe:	fst    DWORD PTR [edi-0xfbcca6]
  416bc4:	or     edi,DWORD PTR [edi-0x23c1bf47]
  416bca:	push   esp
  416bcb:	xor    dh,BYTE PTR [ecx+0x32bffcd9]
  416bd1:	sti    
  416bd2:	mov    cl,0x67
  416bd4:	ds hlt 
  416bd6:	pop    eax
  416bd7:	mov    ebp,0x40d5bc26
	...
  416c04:	add    BYTE PTR [eax],al
  416c06:	ds inc esp
  416c08:	inc    edi
  416c09:	je     0x416c41
  416c0b:	mov    WORD PTR [esi+0x59898158],cs
  416c11:	mov    ebp,0x6948912e
  416c16:	ds sbb al,0x87
  416c19:	imul   edi,edi,0xfffffff3
  416c1c:	fst    DWORD PTR [edi+0x6801b2d2]
  416c22:	cmp    al,0xf4
  416c24:	add    DWORD PTR [eax-0xebcb9a],eax
  416c2a:	dec    ecx
  416c2b:	pop    ebx
  416c2c:	repnz inc ebx
  416c2e:	int    0x43
  416c30:	mov    bh,0xdb
  416c32:	cmp    edx,ebp
  416c34:	push   es
  416c35:	mov    DWORD PTR [ecx+0x29c27c13],ebx
  416c3b:	call   0xaa69:0xf339ce06
  416c42:	sbb    dl,ch
  416c44:	(bad)  
  416c45:	jnp    0x416ca8
  416c47:	jmp    0xd1e6:0xe79247ee
  416c4e:	cmp    ebx,esi
  416c50:	fstp   QWORD PTR [ecx]
  416c52:	stc    
  416c53:	jmp    0x5b7eaef8
  416c58:	xor    al,0x7b
  416c5a:	aad    0xdb
  416c5c:	stos   DWORD PTR es:[edi],eax
  416c5d:	pop    esp
  416c5e:	call   0x431e2b4c
  416c63:	pop    esp
  416c64:	out    0x3,eax
  416c66:	out    0xda,al
  416c68:	test   DWORD PTR [esi+0x0],0x0
	...
  416c93:	add    al,cl
  416c95:	shr    DWORD PTR [esp+ebx*2-0x38],cl
  416c99:	jmp    0xe743e63c
  416c9e:	aaa    
  416c9f:	inc    edi
  416ca0:	sub    dl,BYTE PTR [edi-0x72]
  416ca3:	rol    DWORD PTR [ecx-0xd],1
  416ca6:	ins    DWORD PTR es:[edi],dx
  416ca7:	call   0x4434564d
  416cac:	dec    eax
  416cad:	loopne 0x416c91
  416caf:	add    al,0x3e
  416cb1:	pop    ebx
  416cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb3:	rcl    DWORD PTR [ecx+0x3e03e75a],0x22
  416cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbb:	dec    edi
  416cbc:	js     0x416d1f
  416cbe:	out    0x3,eax
  416cc0:	in     al,0x5a
  416cc2:	rol    DWORD PTR [ebx],0xd4
  416cc5:	pop    edx
  416cc6:	rol    DWORD PTR [ebx],1
  416cc8:	mov    bl,0x9f
  416cca:	xor    esi,DWORD PTR [edx+ecx*8+0x13d00df]
  416cd1:	jmp    0x6f4206d3
  416cd6:	clc    
  416cd7:	outs   dx,DWORD PTR es:[esi]
  416cd9:	in     eax,0xe8
  416cdb:	shl    DWORD PTR [ecx],0xe9
  416cde:	std    
  416cdf:	loop   0x416d5e
  416ce1:	ins    BYTE PTR es:[edi],dx
  416ce2:	add    eax,DWORD PTR [eax]
  416ce4:	jo     0x416cce
  416ce6:	std    
  416ce7:	jmp    0xa88a28f1
  416cec:	cmp    eax,0x75e573e8
  416cf1:	mov    bl,0x31
  416cf3:	out    dx,al
  416cf4:	sbb    BYTE PTR [eax+0xb989],0x0
	...
  416d1f:	add    BYTE PTR [eax],al
  416d21:	add    BYTE PTR [esi-0x7f290b21],al
  416d27:	jmp    0xc3d3a87c
  416d2c:	xor    esi,ecx
  416d2e:	adc    bl,0x83
  416d31:	mov    ecx,0xd1fde970
  416d36:	jo     0x416d71
  416d38:	std    
  416d39:	mov    dh,0xf7
  416d3b:	call   0x9c332ca5
  416d40:	add    BYTE PTR [esi-0x610a0752],ah
  416d46:	add    cl,ch
  416d48:	jae    0x416d2b
  416d4a:	adc    eax,0x8e32ea
  416d4f:	rol    DWORD PTR [ebx-0x2170f6b],cl
  416d55:	push   0xffffffc6
  416d57:	hlt    
  416d58:	cmc    
  416d59:	jbe    0x416d53
  416d5b:	out    0x71,eax
  416d5d:	sbb    ch,BYTE PTR [edx-0x13]
  416d60:	ins    BYTE PTR es:[edi],dx
  416d61:	test   al,0x3d
  416d63:	call   0xe949bb1b
  416d68:	std    
  416d69:	inc    ecx
  416d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d6b:	sub    eax,0x98ad4efd
  416d70:	push   0x5f5300
  416d75:	add    BYTE PTR [eax],bl
  416d77:	retf   
  416d78:	in     eax,0xf7
  416d7a:	or     BYTE PTR [ecx+0x1f9fa365],ah
  416d80:	(bad)  
  416d81:	addr16 dec esp
  416d83:	add    eax,DWORD PTR [ecx+0x0]
	...
  416dae:	add    BYTE PTR [eax],al
  416db0:	iret   
  416db1:	pop    esp
  416db2:	imul   eax,DWORD PTR [ecx+0x27],0xffffff84
  416db6:	aas    
  416db7:	sbb    edx,DWORD PTR [edi]
  416db9:	pop    esp
  416dba:	cmp    eax,0x68161614
  416dc0:	daa    
  416dc1:	pop    esp
  416dc2:	in     eax,dx
  416dc3:	mov    esi,0x416cf7bf
  416dc8:	pop    ss
  416dc9:	mov    eax,ds:0x9de0e8b4
  416dce:	(bad)  
  416dcf:	call   DWORD PTR [edx+0x2f6fe5ef]
  416dd5:	sahf   
  416dd6:	(bad)  
  416dd7:	call   0x3ebc6b
  416ddc:	clc    
  416ddd:	pop    ss
  416dde:	push   cs
  416ddf:	call   DWORD PTR [edx-0x71]
  416de2:	idiv   bh
  416de4:	mov    BYTE PTR [ebp-0x7e00f78c],bl
  416dea:	sti    
  416deb:	call   FWORD PTR [eax-0x2f0f4b63]
  416df1:	popf   
  416df2:	(bad)  
  416df3:	call   0x3ebc63
  416df8:	mov    eax,0xb8f7e9d7
  416dfd:	popf   
  416dfe:	in     eax,0x51
  416e00:	mov    BYTE PTR [esi-0x689d0002],bl
  416e06:	call   0xfedf860f
  416e0b:	jmp    DWORD PTR [edx-0x61]
  416e0e:	in     eax,0x6d
  416e10:	cmp    al,0x5f
  416e12:	add    bh,bh
	...
  416e3c:	add    BYTE PTR [eax],al
  416e3e:	ds (bad) 
  416e40:	pop    esp
  416e41:	imul   BYTE PTR [ecx-0x68]
  416e44:	pop    esp
  416e45:	xor    eax,0xc843a111
  416e4a:	jl     0x416e41
  416e4c:	add    DWORD PTR [ebp-0x3b],edx
  416e4f:	popf   
  416e50:	jg     0x416e15
  416e52:	dec    edx
  416e53:	sbb    eax,DWORD PTR [edx]
  416e55:	push   0xffffffe5
  416e57:	inc    eax
  416e58:	int    0x7
  416e5a:	es sbb eax,0x7c31ff16
  416e60:	mov    ebp,0xf9d029fb
  416e65:	addr16 or dl,cl
  416e68:	ret    0x18ff
  416e6b:	mov    al,0x3e
  416e6d:	inc    edi
  416e6e:	jg     0x416e64
  416e70:	pop    ecx
  416e71:	lea    ecx,[eax]
  416e73:	test   BYTE PTR [esi+edi*8-0x75],0xec
  416e78:	(bad)  
  416e7a:	push   0x33
  416e7c:	add    al,0x68
  416e7e:	cmp    al,0xf4
  416e80:	add    DWORD PTR [eax-0x1b9672a],eax
  416e86:	loope  0x416e14
  416e88:	add    al,0x0
  416e8a:	jmp    0x635547f5
  416e8f:	xor    eax,DWORD PTR [eax+ebp*2]
  416e92:	pop    ds
  416e93:	daa    
  416e94:	sar    edi,0xc0
  416e97:	inc    edi
  416e98:	cld    
  416e99:	out    0x58,eax
  416e9b:	pushf  
  416e9c:	inc    ebx
  416e9d:	(bad)  
  416e9e:	mov    cl,0x47
  416ea0:	dec    eax
  416ea1:	inc    BYTE PTR [eax]
	...
  416ecb:	add    BYTE PTR [ebx],dh
  416ecd:	cld    
  416ece:	pop    ecx
  416ecf:	push   ebx
  416ed0:	push   edx
  416ed1:	fld    QWORD PTR [eax+ecx*8+0x7c]
  416ed5:	add    BYTE PTR [edx],al
  416ed7:	push   ebp
  416ed8:	(bad)
  416edb:	ret    
  416edc:	(bad)  
  416edd:	ins    DWORD PTR es:[edi],dx
  416ede:	inc    esp
  416edf:	(bad)  
  416ee0:	mov    bl,0x5b
  416ee2:	lods   al,BYTE PTR ds:[esi]
  416ee3:	inc    edi
  416ee4:	or     esi,esp
  416ee6:	aam    0xf7
  416ee8:	jo     0x416f5a
  416eea:	fistp  WORD PTR [ebx+0x55]
  416eed:	inc    ecx
  416eee:	out    0x3,eax
  416ef0:	xor    eax,0x607ef71b
  416ef5:	pop    ecx
  416ef6:	out    0x3,eax
  416ef8:	jns    0x416e9a
  416efa:	das    
  416efb:	add    edi,DWORD PTR [esi]
  416efd:	pop    ebx
  416efe:	out    0x3c,eax
  416f00:	cli    
  416f01:	out    dx,al
  416f02:	es cld 
  416f04:	cmp    esi,esp
  416f06:	xchg   ecx,eax
  416f07:	add    esp,DWORD PTR [ebx+ebx*2+0x5b940381]
  416f0e:	pop    esp
  416f0f:	mov    esi,0x7e748b2d
  416f14:	or     eax,0x8143feee
  416f19:	out    0x7c,al
  416f1b:	dec    ebx
  416f1c:	or     BYTE PTR [eax-0x15],dh
  416f1f:	pop    edx
  416f20:	ret    
  416f21:	inc    eax
  416f22:	out    0x3,eax
  416f24:	inc    ebp
  416f25:	sbb    edx,DWORD PTR [ecx+ecx*1-0x19]
  416f29:	mov    al,0xe9
  416f2b:	add    edi,DWORD PTR [esi]
  416f2d:	jae    0x416eb7
  416f2f:	int3   
	...
  416f58:	add    BYTE PTR [eax],al
  416f5a:	jle    0x416fb7
  416f5c:	(bad)  
  416f5d:	mov    ecx,0xf5eef345
  416f62:	shl    ch,1
  416f64:	bound  edx,QWORD PTR [edx+edi*4-0x21]
  416f68:	mov    bl,0x3b
  416f6a:	shl    ch,0x37
  416f6d:	(bad)  
  416f6e:	mov    eax,ds:0xb042d98e
  416f73:	shr    DWORD PTR [esp+esi*1-0x50],cl
  416f77:	in     eax,0x8e
  416f79:	scas   al,BYTE PTR es:[edi]
  416f7a:	mov    eax,ds:0xfeb1277d
  416f7f:	pop    edx
  416f80:	jle    0x416ffb
  416f82:	mov    eax,ds:0xfd7600ed
  416f87:	in     al,0x73
  416f89:	loope  0x416fe0
  416f8b:	mov    BYTE PTR [edi],ch
  416f8d:	data16 std 
  416f8f:	rol    BYTE PTR [ebx-0x21acab3],cl
  416f95:	ret    
  416f96:	cmp    eax,0x7abc4b73
  416f9b:	in     eax,0xfe
  416f9d:	jl     0x416fb1
  416f9f:	in     eax,dx
  416fa0:	std    
  416fa1:	ds std 
  416fa3:	outs   dx,BYTE PTR ds:[esi]
  416fa4:	or     BYTE PTR [ecx-0x7f],al
  416fa7:	sub    bh,ch
  416fa9:	cs mov bl,0xde
  416fac:	call   0x6b26eccf
  416fb1:	jmp    0xa8acfc9b
  416fb6:	cmp    eax,0x6519b3e4
  416fbb:	in     eax,0xfd
  416fbd:	push   es
	...
  416fe6:	add    BYTE PTR [eax],al
  416fe8:	xlat   BYTE PTR ds:[ebx]
  416fe9:	pop    esp
  416fea:	call   0xfe277ac0
  416fef:	pusha  
  416ff0:	mov    bh,0xf8
  416ff2:	cmc    
  416ff3:	out    dx,al
  416ff4:	jl     0x416fcd
  416ff6:	add    ebp,0x34
  416ff9:	in     eax,0xfd
  416ffb:	cmp    DWORD PTR [edx+0x42286b7a],esp
  417001:	in     al,0xb3
  417003:	fldenv [eiz*8+0x5c96c6fd]
  41700a:	call   0xfe273b00
  41700f:	pusha  
  417010:	mov    dh,0x4
  417012:	imul   BYTE PTR [esi+0x1100727c]
  417018:	call   0xfd2aaf94
  41701d:	scas   al,BYTE PTR es:[edi]
  41701e:	lock sahf 
  417020:	cld    
  417021:	in     al,0xfd
  417023:	adc    al,0x32
  417025:	repz jmp 0x417028
  417028:	xlat   BYTE PTR ds:[ebx]
  417029:	cdq    
  41702a:	dec    BYTE PTR [ecx-0x97fe6]
  417030:	adc    bl,cl
  417032:	test   al,dl
  417034:	or     BYTE PTR [ecx-0x5c70af02],bl
  41703a:	ins    BYTE PTR es:[edi],dx
  41703b:	inc    ecx
  41703c:	addr16 cdq 
  41703e:	mov    ah,0xf0
  417040:	or     BYTE PTR [ecx+0x508afffe],bl
  417046:	call   0xfedac818
  41704b:	mov    DWORD PTR [eax],eax
	...
  417075:	add    dl,bl
  417077:	mov    esi,esi
  417079:	call   DWORD PTR [eax]
  41707b:	mov    dh,0xfd
  41707d:	addr16 (bad) 
  41707f:	stos   BYTE PTR es:[edi],al
  417080:	inc    eax
  417081:	add    BYTE PTR [eax+0x63],ah
  417084:	in     eax,dx
  417085:	not    DWORD PTR [eax-0x67]
  417088:	(bad)  
  417089:	jne    0x4170aa
  41708b:	xor    BYTE PTR [edi-0x7766cfd0],ch
  417091:	test   DWORD PTR [ebx+0x21],edx
  417094:	(bad)  
  417095:	jmp    DWORD PTR [edx+0x10f7c1d3]
  41709b:	call   0x40:0xab63684d
  4170a2:	loopne 0x41710f
  4170a4:	in     eax,dx
  4170a5:	not    DWORD PTR [eax]
  4170a7:	call   0x308f:0x2fdf75fe
  4170ae:	lock cdq 
  4170b0:	mov    BYTE PTR [ebp-0x1de71],al
  4170b6:	ins    DWORD PTR es:[edi],dx
  4170b7:	pop    edi
  4170b8:	push   0xfe188295
  4170bd:	dec    BYTE PTR [edx+0x2f]
  4170c0:	idiv   bh
  4170c2:	loopne 0x41705d
  4170c4:	je     0x4170ce
  4170c6:	iret   
  4170c7:	mov    eax,ds:0xcd3eff2d
  4170cc:	mov    DWORD PTR [esi+edi*2-0x3401c034],eax
  4170d3:	jbe    0x417151
  4170d5:	not    BYTE PTR [ecx+0x67d464]
	...
  417103:	add    bh,bl
  417105:	pop    esi
  417106:	sar    edi,0x80
  417109:	cs xor al,0xf6
  41710c:	jns    0x41718a
  41710e:	aas    
  41710f:	je     0x417157
  417111:	mov    dl,bh
  417113:	das    
  417114:	imul   ecx,DWORD PTR [ecx+ecx*4+0x3f8ca284],0x30debdfe
  41711f:	not    BYTE PTR [ecx+0x24]
  417122:	add    al,0xf
  417124:	ret    0x434
  417127:	add    BYTE PTR [esi],bh
  417129:	jno    0x4171a8
  41712b:	iret   
  41712c:	xor    DWORD PTR [edx],edi
  41712e:	aas    
  41712f:	jmp    FWORD PTR [edx-0x19437b11]
  417135:	inc    ecx
  417136:	aas    
  417137:	(bad)  
  417138:	add    DWORD PTR ds:[esi+0x1f43eb0],eax
  41713f:	push   0xbd30f43e
  417144:	or     DWORD PTR [eax+0x11],esp
  417147:	call   0xfe828d10
  41714c:	stc    
  41714d:	mov    edi,0x1f1f62d
  417152:	inc    ecx
  417153:	je     0x4171a3
  417155:	sbb    al,0x10
  417157:	sub    ah,cl
  417159:	adc    DWORD PTR [ecx-0x4c],eax
  41715c:	out    0xa1,al
  41715e:	inc    eax
  41715f:	(bad)  
  417160:	shl    DWORD PTR [edi],1
  417162:	adc    al,0xe8
  417164:	ds pop esi
  417166:	aas    
  417167:	inc    BYTE PTR [eax]
	...
  417191:	add    cl,al
  417193:	addr16 and eax,0xa65bb9f6
  417199:	inc    eax
  41719a:	sub    cl,BYTE PTR [ebx-0x71]
  41719d:	xor    eax,0x4096e256
  4171a2:	jmp    0x3ce2:0x984096ff
  4171a9:	and    ecx,DWORD PTR [eax+0x12407ee2]
  4171af:	dec    ebx
  4171b0:	jg     0x417227
  4171b2:	push   esi
  4171b3:	loop   0x417223
  4171b5:	inc    eax
  4171b6:	mov    dl,0x3
  4171b8:	pop    edi
  4171b9:	inc    eax
  4171ba:	jo     0x41719e
  4171bc:	aam    0x13
  4171be:	push   esi
  4171bf:	or     eax,DWORD PTR [ecx]
  4171c1:	inc    ecx
  4171c2:	pusha  
  4171c3:	loop   0x417159
  4171c5:	push   ebx
  4171c6:	push   eax
  4171c7:	loop   0x41720f
  4171c9:	inc    eax
  4171ca:	mov    al,BYTE PTR [edi]
  4171cc:	aaa    
  4171cd:	inc    eax
  4171ce:	dec    eax
  4171cf:	loop   0x41718d
  4171d1:	adc    edx,DWORD PTR [esi-0x35]
  4171d4:	add    BYTE PTR [ecx+0x38],al
  4171d7:	loop   0x417235
  4171d9:	dec    edi
  4171da:	sub    dl,ah
  4171dc:	push   ds
  4171dd:	inc    eax
  4171de:	mov    dl,0x4b
  4171e0:	push   DWORD PTR [eax+0x56]
  4171e3:	loop   0x4171f3
  4171e5:	inc    eax
  4171e6:	rcl    BYTE PTR [esi],cl
  4171e8:	(bad)  
  4171e9:	aas    
  4171ea:	adc    dl,ah
  4171ec:	xor    al,0x4b
  4171ee:	adc    dl,ah
  4171f0:	idiv   BYTE PTR [edi]
  4171f2:	mov    cl,BYTE PTR [ebx-0x1]
  4171f5:	mov    al,0x0
	...
  41721f:	add    BYTE PTR [esi],ah
  417221:	loop   0x417209
  417223:	aas    
  417224:	stos   BYTE PTR es:[edi],al
  417225:	sbb    dl,bh
  417227:	aas    
  417228:	call   0xd655cf0e
  41722d:	into   
  41722e:	add    BYTE PTR [edi],bh
  417230:	fsub   st,st(1)
  417232:	jl     0x4172b0
  417234:	enter  0xbee1,0x3f
  417238:	xchg   edx,eax
  417239:	sahf   
  41723a:	add    BYTE PTR [esi+0x34fde101],bh
  417240:	push   edx
  417241:	repz dec esp
  417243:	shl    BYTE PTR [eax-0x1f],1
  417246:	std    
  417247:	adc    al,0x52
  417249:	loop   0x4171fe
  41724b:	cdq    
  41724c:	imul   esp,ecx,0x59d78efd
  417252:	call   0xfe2271c2
  417257:	jle    0x417260
  417259:	repnz cmc 
  41725b:	jbe    0x41729e
  41725d:	cli    
  41725e:	inc    edi
  41725f:	mov    ebp,0x9cfde138
  417264:	cs jmp 0x205bd167
  41726a:	sub    al,0x56
  41726c:	and    ecx,esp
  41726e:	mov    bl,0x41
  417270:	adc    ecx,esp
  417272:	std    
  417273:	push   ecx
  417274:	dec    ebp
  417275:	xor    eax,0xa7093efd
  41727a:	in     al,0x3e
  41727c:	add    ecx,esp
  41727e:	call   0xfe23a084
  417283:	add    BYTE PTR es:[eax],al
	...
  4172ae:	mov    bh,0x0
  4172b0:	neg    BYTE PTR [esi]
  4172b2:	imul   edi,eax,0xe160c51b
  4172b8:	std    
  4172b9:	push   esp
  4172ba:	jp     0x4172a5
  4172bc:	std    
  4172bd:	push   es
  4172be:	bound  ecx,QWORD PTR [edx+0x2c]
  4172c1:	dec    BYTE PTR [eax-0x1f]
  4172c4:	mov    bl,0x1d
  4172c6:	dec    ecx
  4172c7:	loope  0x4172c6
  4172c9:	add    DWORD PTR [ecx+0x2f],eax
  4172cc:	std    
  4172cd:	out    0x30,al
  4172cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d0:	int3   
  4172d1:	(bad)  
  4172d2:	sub    cl,ah
  4172d4:	call   0xfe2347ae
  4172d9:	into   
  4172da:	push   esi
  4172db:	sbb    dh,dh
  4172dd:	add    al,bh
  4172df:	and    ebp,esp
  4172e1:	icebp  
  4172e2:	sub    al,0x20
  4172e4:	(bad)  
  4172e5:	inc    DWORD PTR [edx-0x64]
  4172e8:	idiv   bh
  4172ea:	call   0xd86d5623
  4172ef:	and    esi,edi
  4172f1:	mov    ch,0xb
  4172f3:	sub    esi,edi
  4172f5:	(bad)  
  4172f6:	mov    edi,0xc8ff2a85
  4172fb:	and    DWORD PTR [eax+edi*8-0x52],eax
  4172ff:	hlt    
  417300:	cld    
  417301:	dec    DWORD PTR [eax]
  417303:	and    DWORD PTR [esp+edi*8-0x41],esi
  417307:	sub    DWORD PTR [esi],edx
  417309:	add    BYTE PTR [edi-0x71],ah
  41730c:	mov    edi,0x8b03670c
  417311:	in     al,dx
	...
  41733a:	add    BYTE PTR [eax],al
  41733c:	aam    0x97
  41733e:	stc    
  41733f:	push   0x57
  417341:	mov    dl,0x59
  417343:	push   DWORD PTR [edx+0x54]
  417346:	call   0xfe61a338
  41734b:	mov    DWORD PTR [edx+0x5f75fe20],esp
  417351:	mov    ah,0x2a
  417353:	ins    DWORD PTR es:[edi],dx
  417354:	out    0x5b,al
  417356:	std    
  417357:	xor    eax,0x411462
  41735c:	dec    edi
  41735d:	mov    edi,ecx
  41735f:	dec    DWORD PTR [eax+0x21]
  417362:	je     0x41736c
  417364:	mov    edi,0x27416cf4
  417369:	mov    ah,0xff
  41736b:	call   DWORD PTR [edi]
  41736d:	fsubr  st(5),st
  41736f:	mov    ebx,0xfffe1e0b
  417374:	jb     0x417396
  417376:	(bad)  
  417377:	jne    0x417368
  417379:	xor    edi,ebp
  41737b:	sub    BYTE PTR [eax],cl
  41737d:	push   ds
  41737e:	enter  0x3ec2,0xee
  417382:	add    DWORD PTR [ebp-0x3b],edx
  417385:	popf   
  417386:	jg     0x41734b
  417388:	ror    BYTE PTR [ecx+0x5fd90004],cl
  41738e:	lods   al,BYTE PTR ds:[esi]
  41738f:	lods   eax,DWORD PTR ds:[esi]
  417390:	push   ebx
  417391:	xor    eax,DWORD PTR [edi+edi*8]
  417394:	xor    edi,esi
  417396:	cmp    al,0x74
  417398:	inc    esi
  417399:	retf   0x53d5
  41739c:	test   eax,0xacc0
	...
  4173c9:	add    BYTE PTR [esi],bh
  4173cb:	fnstcw WORD PTR [esi+0x67]
  4173ce:	aam    0xde
  4173d0:	ret    0x90ff
  4173d3:	fimul  WORD PTR ds:0x29ea13ff
  4173d9:	aas    
  4173da:	jmp    0x29fd:0xf3fe3b68
  4173e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e2:	cs jns 0x417420
  4173e5:	or     bh,BYTE PTR [esi+0x5]
  4173e8:	test   DWORD PTR [eax-0x537a05],0x677e2059
  4173f2:	mov    al,ds:0x48ffc306
  4173f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f8:	cmp    eax,0x29f9cbfe
  4173fd:	sbb    edx,DWORD PTR [edx+0x3f673b2d]
  417403:	hlt    
  417404:	sub    al,0xbd
  417406:	xchg   esi,eax
  417407:	jp     0x4173b6
  417409:	inc    eax
  41740a:	ds inc ebp
  41740c:	mov    ch,0xfb
  41740e:	sbb    eax,ecx
  417410:	or     eax,ebp
  417412:	cmp    eax,eax
  417414:	cmp    al,0xfe
  417416:	or     DWORD PTR [eax+0x3d],ebp
  417419:	out    0x33,eax
  41741b:	sbb    DWORD PTR ds:0xc3307fe,edi
  417421:	add    BYTE PTR [ebx-0x43d08da5],cl
  417427:	pop    ss
  417428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417429:	test   eax,0xadf876e1
	...
  417456:	add    BYTE PTR [eax],al
  417458:	jle    0x4174b5
  41745a:	aas    
  41745b:	pop    ebx
  41745c:	bound  ebx,QWORD PTR [edi+eiz*8-0x30b0adc4]
  417463:	add    al,0x10
  417465:	fidiv  WORD PTR [esi-0x2a9881f8]
  41746b:	mov    bh,dl
  41746d:	fisub  WORD PTR [esi+0x14dea5b6]
  417473:	or     al,0x96
  417475:	jle    0x41740d
  417477:	cmp    al,0x98
  417479:	ficom  WORD PTR [eax+eax*2]
  41747c:	cdq    
  41747d:	or     dl,dl
  41747f:	cmp    al,0x88
  417481:	jno    0x41746a
  417483:	stos   DWORD PTR es:[edi],eax
  417484:	pop    esp
  417485:	ins    DWORD PTR es:[edi],dx
  417486:	sub    BYTE PTR [esi+eiz*8],al
  417489:	add    edi,ebp
  41748b:	ret    0xdd71
  41748e:	fmul   QWORD PTR [edi]
  417490:	push   esi
  417491:	add    al,0xd
  417493:	cmp    eax,0xb7275260
  417498:	xor    edx,esp
  41749a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749b:	aas    
  41749c:	push   eax
  41749d:	push   0x52d23c43
  4174a2:	dec    edi
  4174a3:	repnz inc eax
  4174a5:	fidiv  WORD PTR [esi]
  4174a7:	cmp    al,0xb2
  4174a9:	fistp  QWORD PTR [edi]
  4174ab:	fisub  WORD PTR fs:0x29a9
  4174b1:	jbe    0x417486
  4174b3:	lods   eax,DWORD PTR ds:[esi]
  4174b4:	jle    0x417511
  4174b6:	jg     0x4174e4
  4174b8:	stos   BYTE PTR es:[edi],al
  4174b9:	pushf  
  4174ba:	out    0x3c,eax
	...
  4174e4:	add    BYTE PTR [eax],al
  4174e6:	mov    cl,BYTE PTR [edi+0xf]
  4174e9:	push   0x7fede5a
  4174ee:	(bad)  
  4174ef:	data16 add bh,bl
  4174f2:	les    edx,FWORD PTR [esi-0x1e541104]
  4174f8:	std    
  4174f9:	pop    esp
  4174fa:	cmp    dh,bl
  4174fc:	add    esi,ebx
  4174fe:	and    eax,0x165cfddd
  417503:	div    BYTE PTR [edi+0x3]
  417506:	adc    eax,0xe2c8bdd
  41750b:	mov    gs,WORD PTR [eax+0xf]
  41750e:	xchg   esp,eax
  41750f:	call   0xe93f:0x6f654100
  417516:	je     0x41757f
  417518:	or     al,0x91
  41751a:	jmp    0x31e0724d
  41751f:	sbb    esi,DWORD PTR [ebp+0x10]
  417522:	retf   
  417523:	xchg   esi,eax
  417524:	clc    
  417525:	push   0xffffffd7
  417527:	jmp    0xd1177130
  41752c:	inc    ebx
  41752d:	xor    DWORD PTR [ecx+0x5cd93cdd],0x3ef7fddd
  417537:	mov    ds:0x5b420e10,eax
  41753c:	xchg   DWORD PTR [ebp+ebp*1-0x70a9b30f],esp
  417543:	in     eax,dx
  417544:	push   0x9aa40d
  417549:	je     0x41754b
	...
  417573:	add    BYTE PTR [edi+0x15],bh
  417576:	push   ecx
  417577:	push   ecx
  417578:	jae    0x4175c1
  41757a:	add    cl,ch
  41757c:	rcr    BYTE PTR [eax],0xd
  41757f:	pop    esp
  417580:	call   FWORD PTR [eax]
  417582:	push   ecx
  417583:	je     0x417584
  417585:	adc    al,0x51
  417587:	xchg   ecx,eax
  417588:	push   esp
  417589:	outs   dx,DWORD PTR ds:[esi]
  41758a:	aas    
  41758b:	jmp    0x14ddce4
  417590:	and    eax,0x4000fd30
  417595:	dec    esp
  417596:	shl    BYTE PTR [ebx+eiz*8-0x31],0x44
  41759b:	cld    
  41759c:	mov    fs:0x4d6903c1,al
  4175a2:	std    
  4175a3:	jne    0x417588
  4175a5:	and    DWORD PTR [eax+ecx*1+0xf],esi
  4175a9:	fdivr  st,st(3)
  4175ab:	push   eax
  4175ad:	and    DWORD PTR [esp+edi*8-0x1],esi
  4175b1:	sub    DWORD PTR [eax],ebp
  4175b3:	inc    DWORD PTR [eax]
  4175b5:	and    cl,BYTE PTR [eax+esi*8+0x54]
  4175b9:	mov    ds:0x717a00ed,eax
  4175be:	(bad)  
  4175bf:	jne    0x4175b0
  4175c1:	xor    bl,ah
  4175c3:	sub    eax,esp
  4175c5:	and    eax,ecx
  4175c7:	ret    0x58af
  4175ca:	push   ebx
  4175cb:	mov    eax,ebx
  4175cd:	aad    0xc1
  4175cf:	cld    
  4175d0:	cmp    eax,0xc05d6a57
  4175d5:	stos   DWORD PTR es:[edi],eax
  4175d6:	add    eax,0xe8
	...
  4175ff:	add    BYTE PTR [eax],al
  417601:	add    BYTE PTR [edi-0x21000107],cl
  417607:	sbb    bh,dl
  417609:	push   0xbeed5867
  41760e:	(bad)  
  41760f:	jb     0x41767d
  417611:	inc    ecx
  417612:	push   edi
  417613:	mov    al,0xc3
  417615:	ins    DWORD PTR es:[edi],dx
  417616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417617:	pop    eax
  417618:	std    
  417619:	jne    0x41767a
  41761b:	xor    dl,dh
  41761d:	push   edx
  41761e:	add    BYTE PTR [ecx],ah
  417620:	add    DWORD PTR gs:[edi+0x31],edx
  417624:	mov    ebx,0x40b3ad68
  417629:	add    bh,bh
  41762b:	cdq    
  41762c:	ins    BYTE PTR es:[edi],dx
  41762d:	inc    ecx
  41762e:	pop    ss
  41762f:	and    DWORD PTR [eax+ecx*1+0x4f],esi
  417633:	test   BYTE PTR [edi-0x1],cl
  417636:	ds inc ebp
  417638:	test   eax,0x78dd11ff
  41763d:	addr16 fadd st,st(6)
  417640:	(bad)  
  417641:	call   FWORD PTR [ecx+0x3e40a82d]
  417647:	in     eax,0xad
  417649:	pop    es
  41764a:	out    0x36,al
  41764c:	sar    esi,cl
  41764e:	jmp    0xd14177dc
  417653:	mov    ebx,0x336bb9ac
  417658:	add    al,0x68
  41765a:	add    DWORD PTR [edi],ebx
  41765c:	sar    edi,0xc8
  41765f:	push   ds
  417660:	or     al,0xe8
  417662:	nop
  417663:	aas    
  417664:	aaa    
  417665:	inc    BYTE PTR [eax]
	...
  41768f:	add    BYTE PTR [ecx-0xb8c122],bh
  417695:	icebp  
  417696:	cmp    BYTE PTR [esi+esi*1-0x36],dh
  41769a:	fdivp  st(5),st
  41769c:	mov    eax,ds:0x3e01acbc
  4176a1:	repnz cmp esi,0x4c29fa0b
  4176a8:	mov    ah,dl
  4176aa:	aaa    
  4176ab:	dec    BYTE PTR [ebx]
  4176ad:	pop    esi
  4176ae:	aaa    
  4176af:	je     0x4176f7
  4176b1:	fimul  DWORD PTR [ecx+0x25]
  4176b4:	jno    0x417722
  4176b6:	dec    ecx
  4176b7:	rol    DWORD PTR [edx-0xe],0xce
  4176bb:	mov    dl,BYTE PTR [edx+0x70]
  4176be:	inc    eax
  4176bf:	sti    
  4176c0:	pop    ecx
  4176c1:	dec    BYTE PTR ds:0x29e1cbff
  4176c7:	xchg   edi,eax
  4176c8:	pop    es
  4176c9:	xchg   ebp,eax
  4176ca:	aaa    
  4176cb:	or     bh,BYTE PTR [esi-0x5b]
  4176ce:	repnz mov BYTE PTR [ebx+0x56743790],al
  4176d5:	mov    DWORD PTR [ebp+0x3c5c1607],ebp
  4176db:	fbld   TBYTE PTR [eax]
  4176dd:	fistp  DWORD PTR [esi]
  4176df:	scas   eax,DWORD PTR es:[edi]
  4176e0:	inc    ebp
  4176e1:	ficomp DWORD PTR [ebx+ecx*1+0x38c58826]
  4176e8:	or     bl,bl
  4176ea:	jl     0x417723
  4176ec:	add    BYTE PTR [ecx-0x11],dl
  4176ef:	sub    ebx,DWORD PTR [esi]
  4176f1:	xor    esi,0x38
	...
  41771b:	add    BYTE PTR [eax],al
  41771d:	add    al,dh
  41771f:	push   eax
  417720:	jmp    0x41774d
  417722:	inc    ebx
  417723:	test   dh,ah
  417725:	cmp    BYTE PTR [ecx+0x3e03e75c],ch
  41772b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41772c:	test   eax,0x62303e0f
  417731:	daa    
  417732:	mov    esp,0x6bd0bf9f
  417737:	adc    bl,BYTE PTR cs:[ebp-0x8]
  41773b:	pop    ds
  41773c:	inc    ebp
  41773d:	ret    
  41773e:	mov    cl,0xe7
  417740:	and    al,0x38
  417742:	stc    
  417743:	xor    DWORD PTR [esi+0x14da31ae],esp
  417749:	or     BYTE PTR [esi-0x6fc73d30],ah
  41774f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417751:	scas   eax,DWORD PTR es:[edi]
  417752:	daa    
  417753:	sub    ecx,DWORD PTR [edi]
  417755:	add    al,0x3e
  417757:	retf   0x383d
  41775a:	repnz (bad) 
  41775c:	pop    ss
  41775d:	shl    DWORD PTR [eax+0x50],1
  417760:	fild   QWORD PTR [ebx]
  417762:	call   0x3479de40
  417767:	mov    bl,0x4f
  417769:	js     0x41778c
  41776b:	ficom  DWORD PTR [esi+0x37]
  41776e:	or     al,0x9b
  417770:	nop
  417771:	cmp    BYTE PTR [eax-0x26],cl
  417774:	inc    esi
  417775:	xor    eax,0xaee69393
  41777a:	std    
  41777b:	sbb    DWORD PTR [ecx],eax
  41777d:	sahf   
  41777e:	out    0x1a,al
  417780:	add    BYTE PTR [eax+eax*1+0x0],bl
	...
  4177ac:	call   0x66ffc886
  4177b1:	dec    edi
  4177b2:	adc    BYTE PTR [esi],bl
  4177b4:	call   0x229f601e
  4177b9:	fscale 
  4177bb:	loop   0x41783a
  4177bd:	dec    esi
  4177be:	xor    BYTE PTR [ecx-0x6e07e14c],bl
  4177c4:	inc    edx
  4177c5:	pop    ebx
  4177c6:	in     eax,dx
  4177c7:	aaa    
  4177c8:	ss dec edi
  4177ca:	or     BYTE PTR [ecx],al
  4177cc:	in     eax,0x7e
  4177ce:	std    
  4177cf:	out    0xf1,al
  4177d1:	fdiv   DWORD PTR [ebx-0xf]
  4177d4:	and    eax,0x9d623eb
  4177d9:	fnstenv [ebx-0x33]
  4177dc:	adc    DWORD PTR [edi-0x8],ecx
  4177df:	(bad)  
  4177e0:	(bad)  
  4177e1:	popa   
  4177e2:	call   0xfe1a16fd
  4177e7:	shl    ebp,0x81
  4177ea:	std    
  4177eb:	scas   al,BYTE PTR es:[edi]
  4177ec:	mov    ebp,0xada4ffa4
  4177f1:	sbb    DWORD PTR [eax-0x226ae62],edi
  4177f7:	fwait
  4177f8:	sbb    BYTE PTR [edx+0x19201405],dl
  4177fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ff:	push   ss
  417800:	jnp    0x4177db
  417802:	mov    WORD PTR [esi+esi*1],fs
  417805:	sub    dl,BYTE PTR [ebp+0x76]
  417808:	scas   eax,DWORD PTR es:[edi]
  417809:	imul   edi,ebp,0x5bc341f4
  41780f:	adc    al,BYTE PTR [eax]
	...
  417839:	add    BYTE PTR [ecx],ch
  41783b:	(bad)  [ecx]
  41783d:	sub    DWORD PTR [esi+0xa625033],ecx
  417843:	fnstsw WORD PTR [ebx+0x4d]
  417846:	inc    ebx
  417847:	push   ecx
  417848:	dec    esp
  417849:	add    bh,dl
  41784b:	rol    BYTE PTR [eax],1
  41784d:	jne    0x41786c
  41784f:	pop    ss
  417850:	dec    DWORD PTR [ebp+0x6b]
  417853:	pop    es
  417854:	add    DWORD PTR [eax],eax
  417856:	push   0x5b75fe51
  41785b:	test   eax,0x64b2ff56
  417860:	call   0xfed1a23b
  417865:	or     ecx,DWORD PTR [edi-0x7c]
  417868:	sub    al,0x80
  41786a:	stc    
  41786b:	pop    edx
  41786c:	jae    0x417896
  41786e:	mov    eax,ds:0xbdfc4c91
  417873:	pop    esp
  417874:	mov    eax,DWORD PTR [ebp-0x25]
  417877:	lods   al,BYTE PTR ds:[esi]
  417878:	push   ebx
  417879:	call   0x4027d4
  41787e:	int3   
  41787f:	sbb    al,0x71
  417881:	adc    al,0x7f
  417883:	pop    ebp
  417884:	add    bh,ch
  417886:	mov    ecx,0x21fc7491
  41788b:	test   al,0xfe
  41788d:	jne    0x41783e
  41788f:	test   BYTE PTR [esi+0xa91e8fe],ah
  417895:	fdivr  DWORD PTR [edi+0x79]
  417898:	es (bad) 
  41789a:	fcom   DWORD PTR [eax+0xc032]
	...
  4178c8:	push   ds
  4178c9:	xchg   ecx,eax
  4178ca:	(bad)  
  4178cb:	jmp    FWORD PTR [eax-0x5fc75476]
  4178d1:	or     eax,DWORD PTR [edx+0x41017fbf]
  4178d7:	add    dl,ch
  4178d9:	call   0x1074:0x905050f9
  4178e0:	fmul   DWORD PTR [edx]
  4178e2:	or     ch,al
  4178e4:	sti    
  4178e5:	sar    esi,0xff
  4178e8:	dec    esp
  4178e9:	sbb    al,0x71
  4178eb:	xor    BYTE PTR [esi],bh
  4178ed:	adc    cl,BYTE PTR [ebp-0x265b9bc]
  4178f3:	call   DWORD PTR [eax-0x20]
  4178f6:	ss je  0x41793f
  4178f9:	sub    ah,BYTE PTR [ecx-0x316ecedd]
  4178ff:	(bad)  
  417900:	mov    bl,0xba
  417902:	sub    DWORD PTR [eax-0x1c97ea6],edi
  417908:	xchg   ebx,eax
  417909:	jbe    0x417941
  41790b:	je     0x417923
  41790d:	jno    0x4178bf
  41790f:	pop    es
  417910:	push   ss
  417911:	jmp    0x6a4377f3
  417916:	xchg   edx,eax
  417917:	es stc 
  417919:	fdivr  DWORD PTR [edi-0x36]
  41791c:	aas    
  41791d:	into   
  41791e:	out    dx,eax
  41791f:	mov    edi,0xfe33c8a7
  417924:	loope  0x4178d9
  417926:	data16 aaa 
  417928:	inc    ecx
  417929:	das    
  41792a:	data16 or al,BYTE PTR [eax]
	...
  417955:	add    ch,dh
  417957:	xor    eax,0xc22e6805
  41795c:	and    al,0xbd
  41795e:	rcl    DWORD PTR [esi+0x5e5ce80c],0x33
  417965:	inc    ch
  417967:	add    al,0xd8
  417969:	pop    ebp
  41796a:	or     ebx,edi
  41796c:	inc    edx
  41796d:	(bad)  
  41796f:	xchg   edi,eax
  417970:	xchg   ebx,ebp
  417972:	mov    edi,0x91f634fd
  417977:	lock test DWORD PTR [edx+ecx*4-0x6f],eax
  41797c:	xor    esi,DWORD PTR [esi+ebp*1-0x1f]
  417980:	lods   eax,DWORD PTR ds:[esi]
  417981:	or     esp,DWORD PTR [esi+0x43]
  417984:	(bad)  
  417986:	ds mov ebp,0xe97441
  41798c:	mov    esi,0xe75b3ef7
  417991:	add    edi,DWORD PTR [esi]
  417993:	mov    al,ds:0x5f502fa4
  417998:	out    0x3,eax
  41799a:	aam    0x5a
  41799c:	rol    DWORD PTR [ebx],0xd4
  41799f:	pop    edx
  4179a0:	rol    DWORD PTR [ebx],1
  4179a2:	retf   
  4179a3:	and    BYTE PTR [ebx],dh
  4179a5:	aam    0xc2
  4179a7:	loopne 0x4179e4
  4179a9:	sub    eax,0x3497d728
  4179ae:	stos   BYTE PTR es:[edi],al
  4179af:	shl    DWORD PTR [esi],cl
  4179b1:	scas   eax,DWORD PTR es:[edi]
  4179b2:	adc    eax,0x3e10bfc4
  4179b7:	pop    ebx
  4179b8:	loop   0x4179fd
	...
  4179e2:	add    BYTE PTR [eax],al
  4179e4:	lea    ebx,[ecx+0x2]
  4179e7:	mov    edi,0xc2affc99
  4179ec:	stc    
  4179ed:	aad    0x74
  4179ef:	adc    esp,esi
  4179f1:	pop    es
  4179f2:	ret    0xe834
  4179f5:	loop   0x417a0e
  4179f7:	xchg   DWORD PTR [edx-0x27cb2131],edi
  4179fd:	sub    edi,DWORD PTR [ecx]
  4179ff:	sub    al,0xce
  417a01:	adc    esi,0xd7e0b634
  417a07:	sub    al,0xc0
  417a09:	(bad)  
  417a0a:	push   ecx
  417a0b:	add    al,0xb9
  417a0d:	adc    BYTE PTR [eax-0x49294fd4],bh
  417a13:	scas   al,BYTE PTR es:[edi]
  417a14:	xor    eax,0x960c34d6
  417a19:	ret    
  417a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a1b:	xor    al,0x98
  417a1d:	(bad)  
  417a1e:	push   esp
  417a1f:	xor    ecx,DWORD PTR [eax+0x672b96d6]
  417a25:	jge    0x4179b5
  417a27:	xor    al,0x80
  417a29:	and    BYTE PTR [edi+0x28],bh
  417a2c:	leave  
  417a2d:	(bad)  
  417a2e:	hlt    
  417a2f:	aaa    
  417a30:	pop    ecx
  417a31:	aam    0x0
  417a33:	fstp   TBYTE PTR ds:0x39abc75b
  417a39:	pop    ebx
  417a3a:	push   ebx
  417a3b:	jb     0x417a5e
  417a3d:	fcmovnb st,st(4)
  417a3f:	pop    ecx
  417a40:	and    dl,ch
  417a42:	std    
  417a43:	fs mov dl,dl
  417a46:	push   eax
  417a47:	dec    esi
	...
  417a70:	add    BYTE PTR [eax],al
  417a72:	nop
  417a73:	data16 std 
  417a75:	mov    esp,0xdbe1c341
  417a7a:	cmp    eax,0x4229095b
  417a7f:	loopne 0x417a07
  417a81:	jmp    0xad06d5c3
  417a86:	push   ebp
  417a87:	(bad)  
  417a88:	std    
  417a89:	jmp    0x1d8518cb
  417a8e:	push   edx
  417a8f:	pop    ebp
  417a90:	add    cl,ch
  417a92:	xlat   BYTE PTR ds:[ebx]
  417a93:	aad    0x67
  417a95:	jmp    0xe9a95041
  417a9a:	mov    eax,0xc099f41e
  417a9f:	fdivrp st(4),st
  417aa1:	imul   BYTE PTR ds:0x97e650d5
  417aa7:	int    0xfd
  417aa9:	push   esp
  417aaa:	push   cs
  417aab:	mov    esi,0x5b3dfbb3
  417ab0:	or     DWORD PTR [ecx+0x35e95b86],ebp
  417ab6:	(bad)  
  417ab8:	dec    eax
  417ab9:	sub    BYTE PTR [edx],bh
  417abb:	(bad)  
  417abc:	jae    0x417a97
  417abe:	inc    ebp
  417abf:	arpl   WORD PTR [edx],bp
  417ac1:	scas   al,BYTE PTR es:[edi]
  417ac2:	ins    DWORD PTR es:[edi],dx
  417ac3:	loope  0x417a95
  417ac5:	je     0x417a8e
  417ac7:	leave  
  417ac8:	cmc    
  417ac9:	sahf   
  417aca:	dec    ebp
  417acb:	es push edx
  417acd:	cmp    DWORD PTR [ebx+eax*4-0x3],0x144f4d8e
	...
  417afd:	add    BYTE PTR [eax],al
  417aff:	add    BYTE PTR [edi+0x77],dl
  417b02:	inc    esp
  417b03:	sub    dh,al
  417b05:	mov    DWORD PTR [eax-0x16e187b],ecx
  417b0b:	call   eax
  417b0d:	push   ebx
  417b0e:	in     eax,dx
  417b0f:	mul    eax
  417b11:	mov    esi,edi
  417b13:	jne    0x417b78
  417b15:	mov    BYTE PTR [eax+ecx*1-0x1],dh
  417b19:	sub    eax,0x89f0fffb
  417b1e:	mov    ah,0xf0
  417b20:	js     0x417aaa
  417b22:	(bad)  
  417b23:	call   0x403e5f
  417b28:	jo     0x417acc
  417b2a:	cmc    
  417b2b:	jmp    0x417acb
  417b2d:	mov    BYTE PTR [esp+edi*8+0x2f],dh
  417b31:	cwde   
  417b32:	verr   WORD PTR [edi]
  417b35:	cwde   
  417b36:	mov    edi,0x8ab41710
  417b3b:	in     al,dx
  417b3c:	xchg   esp,eax
  417b3d:	and    edx,DWORD PTR [ecx+0xa124057]
  417b43:	call   0x404e0e
  417b48:	fcomp  QWORD PTR [eax]
  417b4a:	je     0x417b51
  417b4c:	mov    al,0x97
  417b4e:	mov    edi,0x4457e71c
  417b53:	xchg   esp,eax
  417b54:	dec    esp
  417b55:	or     ebx,DWORD PTR [edx]
  417b57:	pop    gs
  417b59:	mov    eax,ds:0x52e0500e
  417b5e:	inc    esi
  417b5f:	push   cs
  417b60:	push   edi
  417b61:	pop    eax
  417b62:	mov    dh,0x47
	...
  417b8c:	add    BYTE PTR [eax],al
  417b8e:	mov    ds:0x58b60ea8,al
  417b93:	pop    ebx
  417b94:	push   eax
  417b95:	movaps XMMWORD PTR [ecx+0x5290500a],xmm4
  417b9c:	inc    esi
  417b9d:	or     dl,BYTE PTR [edi+0x58]
  417ba0:	mov    dh,0x47
  417ba2:	ds mov ebx,0x7dc80ed1
  417ba8:	cld    
  417ba9:	dec    edi
  417baa:	dec    ecx
  417bab:	xchg   ebp,eax
  417bac:	retf   0xe05
  417baf:	lds    edi,FWORD PTR [edx+0x46]
  417bb2:	inc    edx
  417bb3:	jb     0x417be6
  417bb5:	ss (bad) 
  417bb7:	out    0xb4,al
  417bb9:	inc    eax
  417bba:	ds dec edi
  417bbc:	enter  0xee9b,0x29
  417bc0:	dec    esp
  417bc1:	adc    BYTE PTR [esi],bh
  417bc3:	ret    0xc386
  417bc6:	or     al,BYTE PTR [ecx-0x50]
  417bc9:	pop    ds
  417bca:	ds push ss
  417bcc:	mov    ebp,0x32aeabfe
  417bd1:	je     0x417c21
  417bd3:	sbb    al,BYTE PTR [eax]
  417bd5:	and    DWORD PTR ss:[ebp-0x176d4002],eax
  417bdc:	jl     0x417c22
  417bde:	mov    dh,0x74
  417be0:	mov    eax,0x9f70907
  417be5:	call   0xfe741c5e
  417bea:	stc    
  417beb:	push   esi
  417bec:	xchg   ebp,eax
  417bed:	(bad)  
  417bee:	imul   edi,DWORD PTR [edx+0xa019],0x0
	...
  417c19:	add    BYTE PTR [eax],al
  417c1b:	add    BYTE PTR [ecx*8+0x267b8c2f],bl
  417c22:	sar    esi,1
  417c24:	push   ebx
  417c25:	pop    edx
  417c26:	sbb    al,0x94
  417c28:	sbb    al,0xb5
  417c2a:	das    
  417c2b:	(bad)  
  417c2c:	push   ebx
  417c2d:	dec    edx
  417c2e:	das    
  417c2f:	je     0x417c57
  417c31:	call   0x742f:0x9cb9217e
  417c38:	(bad)  
  417c39:	test   eax,0xca9249f
  417c3e:	sbb    al,0x2f
  417c40:	mov    eax,ds:0x13fefc8e
  417c45:	pop    ebx
  417c46:	call   FWORD PTR [ebx]
  417c48:	sub    al,0x79
  417c4a:	sahf   
  417c4b:	xor    DWORD PTR [eax+0xa317b4d],ecx
  417c51:	jae    0x417cd2
  417c53:	sahf   
  417c54:	pop    ds
  417c55:	aam    0x86
  417c57:	jg     0x417c53
  417c59:	not    BYTE PTR [edi]
  417c5b:	xor    edx,esi
  417c5d:	jb     0x417cde
  417c5f:	rcr    BYTE PTR [edi],cl
  417c61:	aam    0x6e
  417c63:	xor    edx,edx
  417c65:	outs   dx,BYTE PTR ds:[esi]
  417c66:	data16 mov bh,0x41
  417c69:	aam    0xd4
  417c6b:	or     edx,DWORD PTR [esi+0x7e]
  417c6e:	or     DWORD PTR [ecx],esi
  417c70:	inc    eax
  417c71:	rcl    esp,cl
  417c73:	xchg   edi,eax
  417c74:	and    DWORD PTR [ecx+0x3330310c],ecx
  417c7a:	xor    BYTE PTR [esi+0x45],al
  417c7d:	pop    ebx
  417c7e:	pushf  
  417c7f:	jl     0x417c81
	...
  417ca9:	add    BYTE PTR ds:0xc2823dd,dl
  417caf:	shl    DWORD PTR [esi],cl
  417cb1:	xor    DWORD PTR [edx+0x9876c73],ecx
  417cb7:	xlat   BYTE PTR ds:[ebx]
  417cb8:	push   ss
  417cb9:	xor    DWORD PTR [ecx-0x2e],esi
  417cbc:	xchg   esp,eax
  417cbd:	sti    
  417cbe:	loope  0x417cf3
  417cc0:	push   esp
  417cc1:	xor    eax,esi
  417cc3:	shl    BYTE PTR [ebx+ecx*1-0x45],cl
  417cc7:	fsub   st,st(7)
  417cc9:	sub    esp,eax
  417ccb:	rcl    BYTE PTR [edi-0x19a0add0],cl
  417cd1:	mov    dh,0x39
  417cd3:	ret    
  417cd4:	ins    DWORD PTR es:[edi],dx
  417cd5:	pop    esi
  417cd6:	enter  0x41d2,0x4
  417cda:	push   esp
  417cdb:	pop    ebx
  417cdc:	aas    
  417cdd:	xor    DWORD PTR [ebx+ebx*2],edi
  417ce0:	out    0x7e,eax
  417ce2:	mov    edx,0xa830b35b
  417ce7:	sub    eax,DWORD PTR [eax]
  417ce9:	inc    ebx
  417cea:	outs   dx,DWORD PTR ds:[esi]
  417ceb:	shl    DWORD PTR [ebx-0x27],1
  417cee:	mov    ebx,0x35e967d2
  417cf3:	test   BYTE PTR [eax],dl
  417cf5:	jmp    0x99c51737
  417cfa:	dec    edx
  417cfb:	sar    ebp,1
  417cfd:	stc    
  417cfe:	cmp    eax,0xb8ae005b
  417d03:	into   
  417d04:	icebp  
  417d05:	jle    0x417d35
  417d07:	pop    esp
  417d08:	add    cl,ch
  417d0a:	cmp    eax,0x71839a
	...
  417d37:	add    BYTE PTR [edx],dl
  417d39:	sar    ebp,1
  417d3b:	jmp    0x2641d87d
  417d40:	rcl    dh,0xf1
  417d43:	push   esi
  417d44:	push   cs
  417d45:	sar    ch,cl
  417d47:	jmp    0xe1956389
  417d4c:	mov    dl,0x6c
  417d4e:	push   0xffffffe9
  417d50:	test   al,0xd7
  417d52:	lock cmp ch,BYTE PTR [esi-0x2f]
  417d56:	push   eax
  417d57:	pop    esp
  417d58:	rol    ch,0xf1
  417d5b:	es dec esi
  417d5d:	and    cl,BYTE PTR [ebx-0x232da9c]
  417d63:	push   ss
  417d64:	in     eax,dx
  417d65:	shl    BYTE PTR [ebx-0x7],1
  417d68:	cs inc edi
  417d6a:	or     al,0x6
  417d6c:	test   al,0x59
  417d6e:	push   0xffffffe9
  417d70:	cs inc edi
  417d72:	sbb    dh,dh
  417d74:	or     bl,BYTE PTR [esi]
  417d76:	sub    DWORD PTR [esi*1+0x3ae6fdcd],0x42d48462
  417d81:	pop    ebx
  417d82:	add    BYTE PTR [edx+0x4f],ch
  417d85:	(bad)  
  417d86:	icebp  
  417d87:	into   
  417d88:	imul   edx,edx,0x6f23000e
  417d8e:	std    
  417d8f:	call   DWORD PTR [edi+0x56717af5]
  417d95:	push   edi
  417d96:	mov    eax,DWORD PTR [ebp-0x17e59]
	...
  417dc4:	add    BYTE PTR [eax],al
  417dc6:	push   edi
  417dc7:	outs   dx,DWORD PTR ds:[esi]
  417dc8:	xlat   BYTE PTR ds:[ebx]
  417dc9:	seta   BYTE PTR [ebp-0x7d]
  417dcd:	shl    BYTE PTR [ebx],0x60
  417dd0:	push   0xfd98568a
  417dd5:	mov    edx,fs
  417dd7:	push   esi
  417dd8:	cld    
  417dd9:	(bad)  
  417dda:	call   0x59076385
  417ddf:	pop    ebp
  417de0:	add    BYTE PTR [ebp-0x507b2e59],al
  417de6:	addr16 pop ebp
  417de8:	add    bh,al
  417dea:	loop   0x417d6e
  417dec:	repnz (bad) 
  417dee:	call   0xca307e56
  417df3:	out    dx,eax
  417df4:	xchg   ebx,eax
  417df5:	jno    0x417ddd
  417df7:	pop    esp
  417df8:	mov    eax,DWORD PTR [ebp-0x17ae9]
  417dfe:	(bad)  
  417dff:	je     0x417da0
  417e01:	(bad)  
  417e03:	pop    ebp
  417e04:	add    eax,0xffffffb3
  417e07:	mov    esi,0x8c4385c6
  417e0c:	(bad)  
  417e0d:	call   DWORD PTR [ecx]
  417e0f:	pop    ebp
  417e10:	in     eax,dx
  417e11:	mov    esi,0x41704cbf
  417e16:	out    0xdb,eax
  417e18:	test   BYTE PTR [eax],al
  417e1a:	aas    
  417e1b:	cmp    dh,0x50
  417e1e:	aas    
  417e1f:	fmul   QWORD PTR [esi]
  417e21:	add    bh,ah
  417e23:	jecxz  0x417de2
  417e25:	je     0x417e5f
  417e27:	sbb    BYTE PTR [esp+eiz*8+0x0],al
	...
  417e52:	add    BYTE PTR [eax],al
  417e54:	in     al,0x81
  417e56:	inc    BYTE PTR [edi]
  417e58:	ds ret 0xbd1e
  417e5c:	es adc al,0xb5
  417e5f:	inc    eax
  417e60:	ds inc edi
  417e62:	mov    bh,bh
  417e64:	mov    cl,0x11
  417e66:	das    
  417e67:	dec    edi
  417e68:	xchg   esi,eax
  417e69:	push   ds
  417e6a:	std    
  417e6b:	call   FWORD PTR [ecx-0x138bbec9]
  417e71:	inc    edx
  417e72:	jo     0x417e57
  417e74:	(bad)  
  417e75:	icebp  
  417e76:	cs push es
  417e78:	fldcw  WORD PTR ds:[ebx+0x74]
  417e7c:	and    bl,BYTE PTR [esp+eax*1-0x1]
  417e80:	jmp    0x417e47
  417e82:	cs je  0x417ed7
  417e85:	push   ecx
  417e86:	js     0x417e6f
  417e88:	ins    DWORD PTR es:[edi],dx
  417e89:	dec    ecx
  417e8a:	cs (bad) 
  417e8c:	xchg   ebx,eax
  417e8d:	dec    esi
  417e8e:	xor    bh,dh
  417e90:	push   ecx
  417e91:	cmp    DWORD PTR [eax+0x25e7490f],edi
  417e97:	repnz inc ecx
  417e99:	sub    DWORD PTR [ecx],ebx
  417e9b:	call   0xac5c:0xea2e213b
  417ea2:	add    al,0xff
  417ea4:	mov    bl,0xbe
  417ea6:	cs je  0x417ef3
  417ea9:	mov    DWORD PTR [eax-0x19],edi
  417eac:	or     eax,0xcbfe2e81
  417eb1:	gs xor bh,dh
  417eb4:	or     DWORD PTR [ecx-0x48],esi
  417eb7:	sldt   WORD PTR [eax]
	...
  417ee2:	add    DWORD PTR [edi],ebp
  417ee4:	and    eax,0x1960f9f2
  417ee9:	jbe    0x417ede
  417eeb:	pop    eax
  417eec:	cs (bad) 
  417eee:	mov    bl,0x5d
  417ef0:	xor    bh,dh
  417ef2:	loope  0x417f4d
  417ef4:	xchg   edx,eax
  417ef5:	push   cs
  417ef6:	ds ret 0xc13c
  417efa:	sub    bl,BYTE PTR [ebx-0x19]
  417efd:	(bad)  
  417efe:	mov    ah,0xbe
  417f00:	push   0x48
  417f02:	vunpcklps xmm6,xmm4,XMMWORD PTR [ebp+0x4]
  417f07:	sbb    ah,bh
  417f09:	add    ebp,DWORD PTR [edx]
  417f0b:	nop
  417f0c:	scas   al,BYTE PTR es:[edi]
  417f0d:	(bad)  
  417f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0f:	pop    edx
  417f10:	out    0x3,eax
  417f12:	test   BYTE PTR ds:[edi+0x5c2b09d4],ah
  417f19:	xlat   BYTE PTR ds:[ebx]
  417f1a:	xchg   ebp,eax
  417f1b:	sub    al,0xa6
  417f1d:	pop    ss
  417f1e:	shl    DWORD PTR [ebx],1
  417f20:	sub    BYTE PTR [ebx+edi*4],al
  417f23:	call   0xaf6a:0x7b650210
  417f2a:	jne    0x417f86
  417f2c:	cld    
  417f2d:	add    DWORD PTR [ebp+0x73],edx
  417f30:	lfs    ebp,FWORD PTR [edx+ebx*1-0x19]
  417f35:	sub    al,0xd2
  417f37:	into   
  417f38:	outs   dx,BYTE PTR ds:[esi]
  417f39:	mov    bh,0x39
  417f3b:	ret    
  417f3c:	and    ebx,DWORD PTR [edi+0x48]
  417f3f:	iret   
  417f40:	jb     0x417f19
  417f42:	inc    ebp
  417f43:	jecxz  0x417f3e
  417f45:	sub    al,0x0
	...
  417f6f:	add    BYTE PTR [edx+0x39d24ecf],dh
  417f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f76:	sub    DWORD PTR [eax],ecx
  417f78:	sub    BYTE PTR ds:[edx+0x20],dh
  417f7c:	mov    esp,0x199a3397
  417f81:	inc    ebp
  417f82:	lea    ebp,[edx+ecx*4]
  417f85:	arpl   WORD PTR [edi],cx
  417f87:	leave  
  417f88:	sub    esi,ecx
  417f8a:	push   ds
  417f8b:	jnp    0x418007
  417f8d:	iret   
  417f8e:	push   ss
  417f8f:	mov    bh,0x41
  417f91:	ret    
  417f92:	js     0x417fc1
  417f94:	lock into 
  417f96:	(bad)  
  417f97:	sbb    eax,0x2ce71c58
  417f9c:	sub    bl,BYTE PTR [eax-0x31035f00]
  417fa2:	(bad)  
  417fa3:	je     0x417f7a
  417fa5:	mov    dh,0x9b
  417fa7:	loop   0x417fc3
  417fa9:	int    0x68
  417fab:	iret   
  417fac:	mov    ds:0x1d41001b,al
  417fb1:	push   ss
  417fb2:	aas    
  417fb3:	jmp    0xc668670d
  417fb8:	pop    edx
  417fb9:	push   ds
  417fba:	push   eax
  417fbb:	push   ecx
  417fbc:	lahf   
  417fbd:	ds aas 
  417fbf:	jmp    0x2205072e
  417fc4:	jge    0x417f94
  417fc6:	(bad)  
  417fc7:	sbb    al,0x8a
  417fc9:	mov    dh,0x18
  417fcb:	popf   
  417fcc:	push   edx
  417fcd:	int    0xe8
  417fcf:	mov    ch,0x5f
  417fd1:	int    0xfd
  417fd3:	add    eax,DWORD PTR [eax]
	...
  417ffd:	add    BYTE PTR [edx],bh
  417fff:	inc    ebx
  418000:	addr16 clc 
  418002:	jl     0x417fd2
  418004:	gs mov esp,0x1001bac
  41800a:	cmp    al,0x5b
  41800c:	add    BYTE PTR [ecx+0x35],ch
  41800f:	mov    al,0x23
  418011:	data16 sbb ah,BYTE PTR [ecx-0x40]
  418015:	aad    0x5d
  418017:	outs   dx,DWORD PTR ss:[esi]
  418019:	fdivr  st,st(4)
  41801b:	int    0x4d
  41801d:	inc    ecx
  41801e:	xchg   edi,eax
  41801f:	js     0x41801e
  418021:	inc    esi
  418022:	or     eax,0x78f4fd1e
  418027:	push   ss
  418028:	aas    
  418029:	jmp    0x4149c798
  41802e:	and    dl,cl
  418030:	std    
  418031:	es and eax,0x521e22fc
  418037:	ss cs cdq 
  41803a:	cld    
  41803b:	int    0xfe
  41803d:	aam    0x78
  41803f:	push   ss
  418040:	aas    
  418041:	add    bh,dl
  418043:	jle    0x4180b9
  418045:	or     BYTE PTR [edi-0x49],cl
  418048:	cli    
  418049:	call   eax
  41804b:	repnz std 
  41804d:	addr16 push edx
  41804f:	or     al,BYTE PTR [ecx+0x0]
  418052:	loopne 0x41801f
  418054:	les    ecx,FWORD PTR [eax+0x16]
  418057:	push   edi
  418058:	std    
  418059:	jne    0x417ffa
  41805b:	jno    0x41800d
  41805d:	sti    
  41805e:	add    BYTE PTR [ecx+0x67],0x0
	...
  418089:	add    BYTE PTR [eax],al
  41808b:	add    BYTE PTR [edi],cl
  41808d:	jbe    0x4180fc
  41808f:	inc    ecx
  418090:	xchg   edi,eax
  418091:	xor    BYTE PTR [eax*8-0x10267a1],0x4a
  418099:	iret   
  41809a:	in     eax,0x9c
  41809c:	fadd   QWORD PTR [ecx-0x7cd50002]
  4180a2:	(bad)  
  4180a3:	jne    0x418104
  4180a5:	jno    0x41807c
  4180a7:	pop    ds
  4180a8:	rol    BYTE PTR [ecx+0x595bc2c8],0x53
  4180af:	mov    esi,DWORD PTR [ebx-0x2e0b3e29]
  4180b5:	cmp    esi,0x5eef676a
  4180bb:	jmp    FWORD PTR [edx-0x2f]
  4180be:	in     eax,0x79
  4180c0:	inc    eax
  4180c1:	cmp    dh,0x89
  4180c4:	jmp    0x40f7:0x9305c674
  4180cb:	add    BYTE PTR ds:0x92000059,dl
  4180d1:	(bad)  
  4180d3:	(bad)  
  4180d4:	push   eax
  4180d5:	or     BYTE PTR [ebp+0x68],0x1b
  4180d9:	pop    eax
  4180da:	add    BYTE PTR [eax],al
  4180dc:	das    
  4180dd:	je     0x4180eb
  4180df:	add    BYTE PTR [edi],dl
  4180e1:	icebp  
  4180e2:	sbb    DWORD PTR [edx+0x3e],esi
  4180e5:	add    eax,DWORD PTR [edx]
  4180e7:	push   0xffc4f04e
  4180ec:	popa   
  4180ed:	out    0xa4,eax
  4180ef:	inc    eax
	...
  418118:	add    BYTE PTR [eax],al
  41811a:	ds int 0xf0
  41811d:	les    eax,FWORD PTR [esi+0x4bff0203]
  418123:	mov    edx,0xb59ddb19
  418128:	sub    ah,BYTE PTR [edi+0x22]
  41812b:	xor    bl,al
  41812d:	jmp    DWORD PTR [ecx]
  41812f:	shl    BYTE PTR [ebx-0x68e5c1c0],cl
  418135:	pusha  
  418136:	inc    ecx
  418138:	cdq    
  418139:	add    DWORD PTR [esi],edi
  41813b:	ret    0xfe81
  41813e:	adc    edi,DWORD PTR [edx-0x22240e7]
  418144:	sub    cl,BYTE PTR [ebx+eax*8-0x7e01d813]
  41814b:	xchg   edx,eax
  41814c:	sbb    al,0x8b
  41814e:	dec    ebx
  41814f:	ret    0xc701
  418152:	cmp    ebp,DWORD PTR [esi]
  418154:	mov    eax,ds:0x1c13e40
  418159:	add    BYTE PTR [esi],bh
  41815b:	aas    
  41815c:	xor    dh,0x58
  41815f:	inc    ebp
  418160:	sub    cl,BYTE PTR [edi-0x1a]
  418163:	mov    ch,0x4
  418165:	add    BYTE PTR [esi],bh
  418167:	sub    al,BYTE PTR [esi-0x663dc1f4]
  41816d:	sbb    ebp,DWORD PTR [ebx+eax*1-0x4fb197fe]
  418174:	(bad)  
  418175:	jmp    DWORD PTR [ecx+0x3e40a4a7]
  41817b:	(bad)  
  41817c:	lock les eax,FWORD PTR [eax]
	...
  4181a7:	add    BYTE PTR [esi-0x7400fdfd],al
  4181ad:	mov    edx,0x5add7b19
  4181b2:	sub    bl,BYTE PTR es:[ecx-0x63b6691]
  4181b9:	xor    esi,edi
  4181bb:	mov    ch,0x7e
  4181bd:	pop    ebx
  4181be:	jg     0x418158
  4181c0:	pop    esi
  4181c1:	sbb    ah,bh
  4181c3:	fwait
  4181c4:	aas    
  4181c5:	pop    ebx
  4181c6:	out    0x83,eax
  4181c8:	fadd   DWORD PTR [ebp-0x21]
  4181cb:	sbb    esi,DWORD PTR [ecx-0x8]
  4181ce:	out    dx,al
  4181cf:	sub    DWORD PTR [edx-0x3fd5212b],edi
  4181d5:	retf   
  4181d6:	aaa    
  4181d7:	sbb    al,0x65
  4181d9:	pop    esi
  4181da:	out    0x3,eax
  4181dc:	mov    cl,0x45
  4181de:	retf   
  4181df:	sub    DWORD PTR [edx],esi
  4181e1:	arpl   di,cx
  4181e3:	xor    eax,DWORD PTR [ebx-0x34]
  4181e6:	mov    esi,0xe7567f3b
  4181eb:	into   
  4181ec:	les    edi,FWORD PTR [esi+0x2385406a]
  4181f2:	aaa    
  4181f3:	int3   
  4181f4:	sbb    DWORD PTR [edi],edx
  4181f6:	xchg   esi,eax
  4181f7:	les    edi,FWORD PTR [ecx-0x3d]
  4181fa:	sbb    DWORD PTR [ebx],eax
  4181fc:	jge    0x4181c9
  4181fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ff:	mov    edi,0x3e75a65
  418204:	ds or  al,0xd1
  418207:	mov    ch,0xfe
  418209:	pop    edx
  41820a:	jbe    0x4181bb
	...
  418234:	add    BYTE PTR [eax],al
  418236:	cmp    esp,ebx
  418238:	in     al,0x72
  41823a:	int3   
  41823b:	sbb    edi,esp
  41823d:	lahf   
  41823e:	sahf   
  41823f:	mov    ah,bh
  418241:	add    edi,DWORD PTR [esi]
  418243:	fcmovne st,st(7)
  418245:	add    eax,0x28df4f3e
  41824a:	mov    dl,0x53
  41824c:	dec    edi
  41824d:	jbe    0x418298
  41824f:	retf   0x1b3e
  418252:	rcr    DWORD PTR [ebx+0x0],1
  418255:	jmp    0x41c3597
  41825a:	push   edi
  41825b:	leave  
  41825c:	std    
  41825d:	pushf  
  41825e:	add    eax,0x26fc89c3
  418263:	leave  
  418264:	mov    eax,ds:0x1bab44
  418269:	test   DWORD PTR [esi],edx
  41826b:	pop    DWORD PTR [eax]
  41826d:	jmp    0x25caddaf
  418272:	sahf   
  418273:	leave  
  418274:	xor    ebp,ecx
  418276:	cmp    eax,0xed94005b
  41827b:	inc    edx
  41827c:	and    cl,ah
  41827e:	std    
  41827f:	retf   0xc065
  418282:	outs   dx,BYTE PTR ds:[esi]
  418283:	mov    al,BYTE PTR [eax]
  418285:	cmp    esi,ebx
  418287:	shl    DWORD PTR [ebx],cl
  418289:	jmp    0xc641ddcb
  41828e:	shl    BYTE PTR [edx-0x3],1
  418291:	(bad)  
  418292:	mov    esp,0x7a2d3e89
  418297:	retf   0xce71
	...
  4182c2:	add    BYTE PTR [eax],al
  4182c4:	ret    0x10d2
  4182c7:	sbb    eax,0x9d43a185
  4182cc:	cmp    al,0x5b
  4182ce:	add    cl,ch
  4182d0:	push   edx
  4182d1:	imul   edi,ebp,0xffffffd4
  4182d4:	adc    BYTE PTR [ebp+0x3f],cl
  4182d7:	jmp    0xfaf111f2
  4182dc:	jl     0x4182a8
  4182de:	in     eax,0x7d
  4182e0:	inc    ebx
  4182e1:	retf   0x6afd
  4182e4:	or     DWORD PTR [edx-0x17],esi
  4182e7:	scas   al,BYTE PTR es:[edi]
  4182e8:	jo     0x4182bf
  4182ea:	in     al,dx
  4182eb:	jb     0x4182f5
  4182ed:	push   esi
  4182ee:	mov    DWORD PTR [ebp+ecx*2-0x591e8d36],ebp
  4182f5:	dec    edx
  4182f6:	mov    eax,0x5e1700
  4182fb:	call   ebp
  4182fd:	ror    DWORD PTR [esi+0x5e6380],1
  418303:	add    BYTE PTR [eax+0x10],bl
  418306:	push   cs
  418307:	(bad)  
  418308:	xchg   edi,eax
  418309:	cmp    bh,ch
  41830b:	jmp    edi
  41830d:	fidivr WORD PTR [ecx+esi*4]
  418310:	aam    0x9c
  418312:	std    
  418313:	call   ebx
  418315:	ins    BYTE PTR es:[edi],dx
  418316:	std    
  418317:	xor    eax,0x410f8a
  41831c:	fdiv   DWORD PTR [edi+0x5da673b0]
  418322:	call   0xfeb470d8
  418327:	mov    eax,0x0
	...
  418350:	add    BYTE PTR [eax],al
  418352:	xlat   BYTE PTR ds:[ebx]
  418353:	pop    ebp
  418354:	add    BYTE PTR [eax],al
  418356:	jp     0x418375
  418358:	and    DWORD PTR [eax],eax
  41835a:	add    edx,DWORD PTR [edx+0x4]
  41835d:	add    BYTE PTR [edi-0x2f7cffa3],dl
  418363:	pop    edx
  418364:	cmp    DWORD PTR [edi],0x3f84d0a7
  41836a:	enter  0xfe81,0x8b
  41836e:	bound  esi,QWORD PTR [ebx+0x5e]
  418371:	leave  
  418372:	aad    0x5a
  418374:	add    BYTE PTR [ebp-0x14],dl
  418377:	bound  eax,QWORD PTR [edx+0x4d98cbc4]
  41837d:	pop    eax
  41837e:	aas    
  41837f:	adc    esi,esi
  418381:	inc    eax
  418382:	push   edi
  418383:	jne    0x4183f4
  418385:	add    DWORD PTR [ecx+eax*4-0x78233676],esp
  41838c:	sub    dh,dh
  41838e:	fadd   QWORD PTR [edi-0x4487059b]
  418394:	add    BYTE PTR [ebx-0x3bbaf92],cl
  41839a:	ds cmp eax,0x3d44ea3b
  4183a0:	cmp    eax,DWORD PTR [edx]
  4183a2:	clc    
  4183a3:	dec    ebp
  4183a4:	cmp    ecx,DWORD PTR [edi-0x3b]
  4183a7:	mov    ebx,DWORD PTR [edi+edi*8]
  4183aa:	inc    ebp
  4183ab:	mov    dl,0x1
  4183ad:	mov    esi,edi
  4183af:	jmp    0xc879:0x743dc87a
	...
  4183de:	add    BYTE PTR [eax],al
  4183e0:	stc    
  4183e1:	mul    DWORD PTR ds:0x46e7382
  4183e7:	jne    0x4183c7
  4183e9:	clc    
  4183ea:	cmp    al,0xc2
  4183ec:	mov    ecx,DWORD PTR [ebp+0x18]
  4183ef:	dec    edi
  4183f0:	jbe    0x4183dc
  4183f2:	mov    esi,edi
  4183f4:	jle    0x4183a8
  4183f6:	sub    DWORD PTR [ecx+0x3f],esi
  4183f9:	jne    0x418420
  4183fb:	mov    bh,BYTE PTR [ebx-0x36]
  4183fe:	cli    
  4183ff:	mov    edi,0x41ab632
  418404:	mov    al,0xba
  418406:	and    eax,DWORD PTR [edi]
  418408:	(bad)  
  418409:	xor    ecx,ebp
  41840b:	jmp    FWORD PTR [edx]
  41840d:	or     BYTE PTR ds:0xd0b242c1,bh
  418413:	mov    ah,BYTE PTR [edx-0x120cc2cb]
  418419:	popa   
  41841a:	int3   
  41841b:	addr16 jle 0x418418
  41841e:	sar    edi,0x71
  418421:	fs add eax,ebx
  418424:	jno    0x41841f
  418426:	shl    bl,0x3e
  418429:	mov    dl,0x1
  41842b:	add    BYTE PTR ds:0x5a4478fd,dl
  418431:	bound  esp,QWORD PTR ds:0x3eda4674
  418437:	or     bh,BYTE PTR [esi]
  418439:	mov    dl,0x80
  41843b:	mov    edi,0x271c5ac6
  418440:	mov    dl,0x53
  418442:	dec    edi
  418443:	mov    al,BYTE PTR [eax]
	...
  41846d:	add    BYTE PTR [eax-0x38],cl
  418470:	push   esi
  418471:	jl     0x4183f5
  418473:	ret    
  418474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418475:	rcr    DWORD PTR [ecx],cl
  418477:	xchg   edi,eax
  418478:	out    0x26,al
  41847a:	sbb    dl,dl
  41847c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847d:	das    
  41847e:	adc    BYTE PTR [esi+0x33],cl
  418481:	sbb    eax,ebx
  418483:	push   esp
  418484:	out    0x3,eax
  418486:	xor    eax,0xf90f9b9b
  41848b:	dec    ebp
  41848c:	pop    ds
  41848d:	es push 0xffffffcf
  418490:	mov    bh,0x1b
  418492:	loope  0x4184fb
  418494:	push   cs
  418495:	es loopne 0x4184e5
  418498:	add    ebx,DWORD PTR [ebx]
  41849a:	dec    ebp
  41849b:	push   ebp
  41849c:	out    0x3,eax
  41849e:	ror    DWORD PTR [ebp-0x21],1
  4184a1:	sbb    ecx,DWORD PTR [ebp+0x62]
  4184a4:	out    dx,al
  4184a5:	and    eax,0x4db45bc
  4184aa:	xor    ch,BYTE PTR [ecx+0x4f]
  4184ad:	cmp    ebp,DWORD PTR [edx+ebx*1]
  4184b0:	out    0x24,eax
  4184b2:	xor    cl,bh
  4184b4:	mov    edi,0xe75b3419
  4184b9:	clc    
  4184ba:	(bad)  [esi-0x1c]
  4184bd:	push   0x3e75b3e
  4184c2:	mov    DWORD PTR [ebp-0x4d],ecx
  4184c5:	sbb    al,0x1b
  4184c7:	push   0x9bc425a6
  4184cc:	inc    edx
  4184cd:	cmp    edi,DWORD PTR [edi+0x5e]
  4184d0:	out    0xce,eax
	...
  4184fa:	add    BYTE PTR [eax],al
  4184fc:	mov    ah,0xb6
  4184fe:	aaa    
  4184ff:	int3   
  418500:	fldcw  WORD PTR [edx]
  418502:	add    ah,0x59
  418505:	iret   
  418506:	stc    
  418507:	add    bh,BYTE PTR [ebp-0x39]
  41850a:	add    BYTE PTR [esi-0x67],dh
  41850d:	pop    edi
  41850e:	call   0xfe09ba4b
  418513:	shl    DWORD PTR ds:0xfcb1183f,cl
  418519:	(bad)  
  41851a:	(bad)  
  41851b:	fsub   QWORD PTR ds:0x5af2fdbf
  418521:	lds    ebp,FWORD PTR [edx-0xf]
  418524:	mov    ch,0x83
  418526:	dec    eax
  418527:	test   al,0x3d
  418529:	(bad)  
  41852a:	jae    0x41850d
  41852c:	and    eax,0x5b2e19b6
  418531:	lds    esi,FWORD PTR [ebx-0xf]
  418534:	push   ebp
  418535:	or     esp,edi
  418537:	push   ds
  418538:	sbb    ecx,DWORD PTR [esi]
  41853a:	add    cl,ch
  41853c:	cmp    eax,0x3e2bc75b
  418541:	pop    ebx
  418542:	push   ebx
  418543:	jb     0x41857b
  418545:	fld    st(4)
  418547:	add    edx,ebp
  418549:	cs push 0x861550
  41854f:	icebp  
  418550:	(bad)  
  418551:	pop    ebx
  418552:	shl    esi,0x62
  418555:	dec    edi
  418556:	or     al,0xde
  418558:	loopne 0x4185b8
  41855a:	call   0xfe07c604
  41855f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  418588:	add    BYTE PTR [eax],al
  41858a:	loopne 0x41854e
  41858c:	(bad)  
  41858d:	call   0x24cce0cf
  418592:	bound  edx,QWORD PTR [esi]
  418594:	push   0x1bce74
  418599:	rol    DWORD PTR [eax],0x72
  41859c:	std    
  41859d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41859e:	jbe    0x4185a6
  4185a0:	jne    0x41856d
  4185a2:	(bad)  
  4185a3:	fnstcw WORD PTR [ebx-0x6f]
  4185a6:	dec    ebp
  4185a7:	push   eax
  4185a8:	push   ss
  4185a9:	add    ecx,DWORD PTR [edx+0x2b]
  4185ac:	std    
  4185ad:	add    BYTE PTR [edx-0x32],bl
  4185b0:	in     eax,0x38
  4185b2:	jo     0x418633
  4185b4:	dec    BYTE PTR [ebx]
  4185b6:	xchg   edi,eax
  4185b7:	test   BYTE PTR [esi],0xc7
  4185ba:	sbb    dh,BYTE PTR [ebx-0x3]
  4185bd:	jmp    DWORD PTR [edi]
  4185bf:	pop    edx
  4185c0:	call   0xfec0b786
  4185c5:	mov    ebx,edx
  4185c7:	jge    0x418591
  4185c9:	ret    0x5a1f
  4185cc:	push   ebx
  4185cd:	mov    esi,DWORD PTR [ebx-0x55]
  4185d0:	dec    ebp
  4185d1:	pop    eax
  4185d2:	out    dx,eax
  4185d3:	ja     0x4185cd
  4185d5:	inc    eax
  4185d6:	pop    ss
  4185d7:	jb     0x418648
  4185d9:	add    DWORD PTR [edi+edi*2+0x2a],edx
  4185dd:	(bad)  [eax]
  4185df:	cmc    
  4185e0:	add    eax,0xfe7ea6e8
  4185e5:	(bad)  
  4185e6:	fcomp  QWORD PTR [ecx]
  4185e8:	push   cs
  4185e9:	test   BYTE PTR [ecx+0x5a],ch
	...
  418618:	inc    eax
  418619:	cmc    
  41861a:	add    eax,0xfd57c3e8
  41861f:	(bad)  
  418620:	fcomp  QWORD PTR [ecx]
  418622:	je     0x418629
  418624:	ds inc esp
  418626:	std    
  418627:	jmp    DWORD PTR [edi-0x6ff38b88]
  41862d:	jecxz  0x418634
  41862f:	call   0x400028
  418634:	jo     0x418619
  418636:	add    eax,0xfd5bf6e8
  41863b:	dec    DWORD PTR [ecx+ebx*1-0x1083fd8c]
  418642:	(bad)  
  418643:	jne    0x4185e4
  418645:	jno    0x418669
  418647:	sbb    al,0xa0
  418649:	jns    0x418655
  41864b:	ror    BYTE PTR [edx+0x5d],0xe9
  41864f:	arpl   WORD PTR [esi],di
  418651:	in     eax,dx
  418652:	xchg   edi,eax
  418653:	pop    es
  418654:	push   esi
  418655:	push   0xc859ff00
  41865a:	inc    ecx
  41865b:	je     0x418699
  41865d:	jmp    0x7531ee19
  418662:	ret    
  418663:	inc    DWORD PTR [eax-0x32]
  418666:	or     eax,ebp
  418668:	repnz pop ebp
  41866a:	and    esi,edi
  41866c:	inc    ebp
  41866d:	jb     0x418606
  41866f:	add    DWORD PTR ds:0x367422f1,edx
  418675:	sbb    bl,BYTE PTR [eax]
  418677:	sbb    bl,BYTE PTR [ecx]
  418679:	push   ds
  41867a:	or     eax,0xc0
	...
  4186a3:	add    BYTE PTR [eax],al
  4186a5:	add    BYTE PTR [ebx+0x9332eb0],cl
  4186ab:	or     BYTE PTR [edx],cl
  4186ad:	call   0xfe641d24
  4186b2:	inc    ebp
  4186b3:	jb     0x41864c
  4186b5:	add    ebp,esp
  4186b7:	pushf  
  4186b8:	and    dh,BYTE PTR [esi+esi*1+0x5a]
  4186bc:	sbb    DWORD PTR [ecx+eiz*8],edx
  4186bf:	push   ebp
  4186c0:	test   edi,esi
  4186c2:	push   ds
  4186c3:	inc    ebp
  4186c4:	add    ebp,DWORD PTR [ebx]
  4186c6:	dec    cl
  4186c8:	inc    ecx
  4186c9:	jae    0x4186f8
  4186cb:	lar    eax,WORD PTR [eax]
  4186ce:	cs mov dl,0x96
  4186d1:	or     esi,ebp
  4186d3:	mov    bl,0x1
  4186d5:	add    BYTE PTR [esi],bh
  4186d7:	test   eax,0xb23dbb08
  4186dc:	add    DWORD PTR [eax],eax
  4186de:	mov    ch,0xf1
  4186e0:	mov    esi,0x1ca7cc8
  4186e5:	push   ebp
  4186e6:	lds    edx,FWORD PTR [esi+0x4b1657b1]
  4186ec:	sbb    edi,DWORD PTR [edi]
  4186ee:	or     dl,BYTE PTR ds:[eax+eax*1+0x22a65b7d]
  4186f6:	jmp    0xc9b3:0x41989e56
  4186fd:	and    ah,BYTE PTR [eax-0x3c]
  418700:	loop   0x418745
  418702:	shl    BYTE PTR [eax-0x7a],cl
  418705:	cwde   
  418706:	inc    ebp
  418707:	(bad)  
  418708:	hlt    
  418709:	or     eax,DWORD PTR [eax]
	...
  418733:	add    BYTE PTR [esi+0x68],dl
  418736:	jbe    0x41875a
  418738:	inc    eax
  418739:	push   eax
  41873a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41873b:	cwde   
  41873c:	inc    esp
  41873d:	(bad)  
  41873e:	fmul   QWORD PTR [edi]
  418740:	xor    DWORD PTR [esi-0x11],ecx
  418743:	sub    edi,DWORD PTR ds:0xf62256c4
  418749:	cwde   
  41874a:	fild   WORD PTR [ebx]
  41874c:	jae    0x41871e
  41874e:	push   ebx
  41874f:	xchg   ch,bh
  418751:	mov    esi,0x2379ba9a
  418756:	mov    edi,0xe71b071d
  41875b:	sbb    ebp,DWORD PTR [edi+0x5a]
  41875e:	sub    ah,BYTE PTR [edx]
  418760:	and    al,0xa0
  418762:	pmaxub mm7,QWORD PTR [esp+eax*8+0x16]
  418767:	dec    edx
  418768:	jp     0x418721
  41876a:	out    0x3,eax
  41876c:	ds pop ebx
  41876e:	je     0x418738
  418770:	in     eax,0x2a
  418772:	rdmsr  
  418774:	sub    eax,0x4285f6c4
  418779:	mov    bh,0xe7
  41877b:	cwde   
  41877c:	push   ecx
  41877d:	(bad)  
  41877e:	sub    al,0x30
  418780:	add    DWORD PTR [ebx-0x3c570739],esi
  418786:	push   0xffffff9f
  418788:	xchg   ebp,eax
  418789:	pop    edx
  41878a:	push   esp
  41878b:	or     ecx,ebx
  41878d:	sbb    eax,0xa999b4d3
  418792:	shl    DWORD PTR [eax],cl
  418794:	mov    bh,dl
  418796:	add    BYTE PTR [eax+eax*1],dh
	...
  4187c1:	add    BYTE PTR [esi-0x3c],cl
  4187c4:	push   cs
  4187c5:	gs int3 
  4187c7:	ret    
  4187c8:	std    
  4187c9:	jmp    0x3a31a68e
  4187ce:	pop    ds
  4187cf:	dec    edi
  4187d0:	in     al,dx
  4187d1:	sbb    DWORD PTR [ecx-0x3c71023c],0xb0fbffcb
  4187db:	add    al,0x63
  4187dd:	es jge 0x4187a3
  4187e0:	jmp    0x3de3:0xe41ef710
  4187e7:	pop    ebx
  4187e8:	add    BYTE PTR [esi],ch
  4187ea:	stc    
  4187eb:	mov    edx,0x5b3de900
  4187f0:	mov    ebp,DWORD PTR [ebp+edx*2+0x69d4fd12]
  4187f7:	sub    eax,ebp
  4187f9:	aad    0xfb
  4187fb:	sar    ebp,0xf2
  4187fe:	jge    0x41884e
  418800:	adc    BYTE PTR [edx-0x5f],ch
  418803:	mov    edx,0xc24bb500
  418808:	jae    0x41881b
  41880a:	and    dh,BYTE PTR [ecx-0x5]
  41880d:	push   ds
  41880e:	pop    ds
  41880f:	aad    0xd8
  418811:	push   ss
  418812:	leave  
  418813:	mov    edx,0xc1d676e8
  418818:	std    
  418819:	repnz adc al,BYTE PTR [edi+0x13]
  41881d:	push   0xffffffa9
  41881f:	mov    esi,0xc22e7d00
  418824:	dec    ebx
  418825:	add    eax,0x0
	...
  41884e:	add    BYTE PTR [eax],al
  418850:	jmp    0xd7b3:0x3de911da
  418857:	icebp  
  418858:	cmp    eax,0x529ee95b
  41885d:	pop    ebx
  41885e:	inc    ebp
  41885f:	imul   ebx,DWORD PTR [esi+0x7d0074c2],0x973f7d93
  418869:	jmp    0xb9b:0xeaac0b01
  418870:	int3   
  418871:	jmp    0xf044:0xd1776a0d
  418878:	daa    
  418879:	out    dx,eax
  41887a:	mov    esp,0xe8571673
  41887f:	pop    ebp
  418880:	jle    0x4188fd
  418882:	(bad)  
  418883:	call   DWORD PTR [edx+0x72]
  418886:	in     eax,0x50
  418888:	jae    0x418905
  41888a:	dec    BYTE PTR [ebx-0x36a5646c]
  418890:	in     al,0x8
  418892:	mov    ebp,esp
  418894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418895:	sbb    bl,BYTE PTR [ebp+0x567b88fe]
  41889b:	push   esi
  41889c:	out    0x5,eax
  41889e:	data16 in al,dx
  4188a0:	ins    BYTE PTR es:[edi],dx
  4188a1:	sahf   
  4188a2:	std    
  4188a3:	not    ebp
  4188a5:	pop    esp
  4188a6:	sar    edi,0x88
  4188a9:	xor    eax,0xde174146
  4188ae:	add    BYTE PTR ds:[eax],bl
  4188b1:	fcmove st,st(2)
  4188b3:	add    DWORD PTR [eax],eax
	...
  4188dd:	add    bh,ah
  4188df:	pop    ebp
  4188e0:	mov    eax,DWORD PTR [ebp-0x183ad]
  4188e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e7:	add    ah,dh
  4188e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ea:	or     BYTE PTR [ebx-0x2],bh
  4188ed:	or     esp,DWORD PTR [edi]
  4188ef:	imul   eax,DWORD PTR [esp+eiz*4-0x7cffa22a],0xa
  4188f7:	push   0xfffffffb
  4188f9:	jmp    FWORD PTR [eax+0x30840d5c]
  4188ff:	pop    eax
  418900:	add    BYTE PTR [eax],al
  418902:	sbb    dl,ah
  418904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418905:	(bad)  
  418906:	ds test eax,0xe6994f1d
  41890c:	sbb    ch,bh
  41890e:	xchg   ecx,eax
  41890f:	cwde   
  418910:	sub    al,0x41
  418912:	and    eax,0x882a1e01
  418917:	cmp    dl,BYTE PTR [edi-0x5d]
  41891a:	js     0x41890c
  41891c:	sbb    eax,0xea229ea
  418921:	mov    dh,0xc2
  418923:	xchg   ecx,eax
  418924:	imul   edi,ebp,0x67b4e861
  41892a:	pop    edi
  41892b:	fs ret 
  41892d:	inc    edx
  41892f:	cs inc edx
  418931:	std    
  418932:	dec    ecx
  418933:	inc    eax
  418934:	mov    ah,0xe7
  418936:	fnstcw WORD PTR [ebx-0x942ffff]
  41893c:	adc    BYTE PTR [ebp-0x1e18b45],cl
	...
  41896a:	add    BYTE PTR [eax],al
  41896c:	sub    DWORD PTR [ebx],eax
  41896e:	pop    ds
  41896f:	mov    ah,0xda
  418971:	sub    BYTE PTR ds:0xe45e26fe,bl
  418977:	(bad)  
  418978:	adc    DWORD PTR [edi+eax*4-0x5d],ecx
  41897c:	or     BYTE PTR [edx-0x7742bae3],al
  418982:	hlt    
  418983:	jno    0x418987
  418985:	jb     0x4189de
  418987:	repz lock jns 0x4189a8
  41898b:	out    0x14,eax
  41898d:	enter  0xfe1e,0xf9
  418991:	das    
  418992:	pop    esp
  418993:	std    
  418994:	fst    DWORD PTR [ecx+0x4]
  418997:	add    BYTE PTR [esi],bh
  418999:	mov    dl,0xa7
  41899b:	add    DWORD PTR [ebx-0x3e02a3c9],edi
  4189a1:	leave  
  4189a2:	mov    cl,0xfe
  4189a4:	repz (bad) 
  4189a6:	sbb    edi,esi
  4189a8:	mov    cl,0x5b
  4189aa:	iret   
  4189ab:	(bad)  
  4189ac:	dec    ebp
  4189ad:	rcr    dh,0xa
  4189b0:	jle    0x418a02
  4189b2:	imul   ebx,DWORD PTR [ebx],0xffffff99
  4189b5:	shl    bh,0x84
  4189b8:	rol    BYTE PTR [ebx],cl
  4189ba:	(bad)  
  4189bb:	push   ds
  4189bc:	mov    BYTE PTR [esi],cl
  4189be:	and    DWORD PTR [esi+edi*1],eax
  4189c1:	push   eax
  4189c2:	ins    BYTE PTR es:[edi],dx
  4189c3:	sub    edi,DWORD PTR [ecx-0x40]
  4189c6:	out    0x90,eax
  4189c8:	mov    edx,0x681ea5c4
  4189cd:	sub    ecx,DWORD PTR [edi]
  4189cf:	or     BYTE PTR [eax],al
	...
  4189f9:	add    BYTE PTR [edi],bh
  4189fb:	pop    ebx
  4189fc:	out    0x2b,eax
  4189fe:	inc    edi
  4189ff:	pop    eax
  418a00:	out    0x3,eax
  418a02:	inc    ebp
  418a03:	fwait
  418a04:	test   BYTE PTR [edi+0x3e75b78],0x3
  418a0b:	push   edi
  418a0c:	call   0x6691c814
  418a11:	inc    edi
  418a12:	xor    eax,eax
  418a14:	out    0x2b,eax
  418a16:	int    0x57
  418a18:	out    0x3,eax
  418a1a:	mov    ?,WORD PTR [ebx]
  418a1c:	xor    DWORD PTR [edx-0x77a3a482],edx
  418a22:	inc    eax
  418a24:	inc    esi
  418a25:	push   ds
  418a26:	jns    0x4189db
  418a28:	xor    DWORD PTR [esi],eax
  418a2a:	ds pop ebx
  418a2c:	push   0x47
  418a2e:	inc    ebp
  418a2f:	xor    eax,0xc3ba90e7
  418a34:	and    eax,0xf2ae81e
  418a39:	cmp    BYTE PTR [ebx],bh
  418a3b:	pop    ebx
  418a3c:	out    0x90,eax
  418a3e:	ret    0xdc3
  418a41:	push   ds
  418a42:	shr    BYTE PTR [edx],1
  418a44:	mov    cr4,ebx
  418a47:	sar    dh,0x9
  418a4a:	inc    BYTE PTR [ebp+0x0]
  418a4d:	leave  
  418a4e:	in     eax,0xfa
  418a50:	dec    eax
  418a51:	test   al,0x3d
  418a53:	into   
  418a54:	and    edx,0x48
  418a57:	sar    ebp,0x39
  418a5a:	push   edx
  418a5b:	pop    edi
  418a5c:	sbb    eax,0xd6
	...
  418a85:	add    BYTE PTR [eax],al
  418a87:	add    BYTE PTR [ebx],bh
  418a89:	iret   
  418a8a:	xchg   ebx,eax
  418a8b:	stos   DWORD PTR es:[edi],eax
  418a8c:	xor    cl,al
  418a8e:	std    
  418a8f:	sbb    edx,edx
  418a91:	mov    bh,0x64
  418a93:	fisub  WORD PTR [edx]
  418a95:	shr    ecx,0xda
  418a98:	enter  0xc2d6,0xaf
  418a9c:	push   ebx
  418a9d:	rcl    DWORD PTR [eax+0x74],0xc1
  418aa1:	(bad)  
  418aa2:	(bad)  
  418aa3:	sahf   
  418aa4:	inc    ebx
  418aa5:	adc    al,ch
  418aa7:	xchg   edx,eax
  418aa8:	pop    eax
  418aa9:	sar    ch,0x60
  418aac:	mov    ecx,0x2b86ff03
  418ab1:	shl    DWORD PTR [ebx-0x23edfc3],0x76
  418ab8:	xchg   ecx,eax
  418ab9:	retf   0x6efe
  418abc:	push   ebx
  418abd:	mov    dh,0xf0
  418abf:	dec    DWORD PTR [edx-0x43]
  418ac2:	or     DWORD PTR [ecx],ebp
  418ac4:	(bad)  
  418ac5:	mov    DWORD PTR [eax+0x4f],ebp
  418ac8:	scas   eax,DWORD PTR es:[edi]
  418ac9:	sbb    eax,DWORD PTR [eax]
  418acb:	inc    ecx
  418acc:	inc    ecx
  418acd:	push   ebp
  418ace:	add    cl,ch
  418ad0:	int    0x36
  418ad2:	out    0xba,al
  418ad4:	cld    
  418ad5:	mov    esi,0xc0667cfe
  418ada:	std    
  418adb:	cs and dh,ah
  418ade:	and    eax,0xff344b26
  418ae3:	xchg   edx,eax
  418ae4:	cmp    eax,0x71160031
  418ae9:	add    bh,bh
  418aeb:	push   cs
	...
  418b14:	add    BYTE PTR [eax],al
  418b16:	xor    esi,DWORD PTR [esi]
  418b18:	rol    BYTE PTR [eax],0x8f
  418b1b:	cdq    
  418b1c:	std    
  418b1d:	imul   edx,edi,0xa7076d72
  418b23:	pop    edx
  418b24:	std    
  418b25:	mov    ch,0x63
  418b27:	pop    ebp
  418b28:	(bad)  
  418b29:	dec    DWORD PTR [edi-0x7f00e6a5]
  418b2f:	pop    edi
  418b30:	mov    ah,0xa4
  418b32:	jno    0x418b93
  418b34:	(bad)  
  418b35:	call   0x404fa9
  418b3a:	and    BYTE PTR ds:0x5fc0fef1,0xe5
  418b41:	ins    BYTE PTR es:[edi],dx
  418b42:	xchg   ebp,eax
  418b43:	pop    edi
  418b44:	(bad)  
  418b45:	cld    
  418b46:	je     0x418b62
  418b48:	mov    eax,0xfe5fa0ff
  418b4d:	repnz icebp 
  418b4f:	mov    eax,ds:0xa4ea0f06
  418b54:	sti    
  418b55:	inc    eax
  418b57:	add    BYTE PTR [edi-0x37],bl
  418b5a:	xchg   esp,eax
  418b5b:	add    eax,0x15d4ec8b
  418b60:	in     eax,dx
  418b61:	push   eax
  418b62:	dec    edi
  418b63:	out    dx,eax
  418b64:	(bad)  
  418b66:	addr16 push edi
  418b68:	clc    
  418b69:	jb     0x418b81
  418b6b:	sbb    edi,esi
  418b6d:	mov    esp,DWORD PTR [ebp+0x4a]
  418b70:	gs add eax,0xe8005a26
  418b76:	xor    ah,al
  418b78:	(bad)  
  418b79:	inc    DWORD PTR [eax]
	...
  418ba3:	add    BYTE PTR [edi-0x2d],ah
  418ba6:	iret   
  418ba7:	nop
  418ba8:	mov    ss,WORD PTR [ebp-0x73a36f07]
  418bae:	lea    ebp,[eax-0x26]
  418bb1:	pop    eax
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	dec    edi
  418bb5:	and    al,0x17
  418bb7:	inc    DWORD PTR [eax+0x4a]
  418bba:	mov    dl,dl
  418bbc:	ds cmp eax,esi
  418bbf:	out    dx,eax
  418bc0:	scas   al,BYTE PTR es:[edi]
  418bc1:	fild   DWORD PTR [esi]
  418bc3:	add    DWORD PTR [esi],edi
  418bc5:	mov    ah,0x29
  418bc7:	test   al,0x24
  418bc9:	mov    ebp,0x238c8a19
  418bce:	mov    cl,dl
  418bd0:	(bad)  
  418bd1:	neg    BYTE PTR [ecx]
  418bd3:	mov    cl,BYTE PTR [eax+ecx*2-0x47e970ca]
  418bda:	add    al,0x0
  418bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bde:	(bad)  
  418bdf:	sti    
  418be0:	and    al,0xb4
  418be2:	sub    DWORD PTR [ebx+0x40],edx
  418be5:	mov    ah,0x1
  418be7:	nop
  418be8:	mov    ch,0xe1
  418bea:	(bad)  
  418beb:	sar    DWORD PTR [ecx+0x7e],1
  418bee:	adc    al,0x67
  418bf0:	cmp    dh,BYTE PTR [ebx+0x3f560001]
  418bf6:	(bad)  
  418bf7:	(bad)  
  418bf8:	ds leave 
  418bfa:	inc    ecx
  418bfb:	jae    0x418c2b
  418bfd:	cmp    DWORD PTR [esi],esi
  418bff:	(bad)  
  418c00:	out    0xea,al
  418c02:	xchg   ebp,eax
  418c03:	inc    eax
  418c04:	ds aad 0x8f
  418c07:	out    dx,eax
	...
  418c30:	add    BYTE PTR [eax],al
  418c32:	push   esi
  418c33:	mov    edi,edi
  418c35:	(bad)  
  418c36:	cmp    DWORD PTR ds:[esi],esi
  418c39:	imul   edi,DWORD PTR [esi],0x3c6a0458
  418c3f:	test   al,0x1
  418c41:	push   0x3d
  418c43:	stos   BYTE PTR es:[edi],al
  418c44:	add    DWORD PTR [eax],eax
  418c46:	ds jb  0x418c62
  418c49:	je     0x418c59
  418c4b:	sbb    ecx,DWORD PTR [edi]
  418c4d:	add    edi,DWORD PTR [esi]
  418c4f:	mov    dl,0x8c
  418c51:	inc    esp
  418c52:	or     dh,bl
  418c54:	push   cs
  418c55:	shl    BYTE PTR [ebx-0x12],0x1a
  418c59:	je     0x418c4d
  418c5b:	ins    DWORD PTR es:[edi],dx
  418c5c:	(bad)  
  418c5d:	out    dx,eax
  418c5e:	(bad)  
  418c5f:	pop    ebx
  418c60:	inc    DWORD PTR [eax]
  418c62:	ds pop ebx
  418c64:	xchg   ecx,eax
  418c65:	mov    bh,0x67
  418c67:	pop    ebx
  418c68:	push   ss
  418c69:	xchg   ecx,eax
  418c6a:	loope  0x418c1f
  418c6c:	jns    0x418c70
  418c6e:	ds pop ebx
  418c70:	repnz inc ebx
  418c72:	dec    ebp
  418c73:	dec    edi
  418c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c75:	stos   DWORD PTR es:[edi],eax
  418c76:	mov    dh,0x48
  418c78:	test   al,0x3
  418c7a:	push   cs
  418c7b:	mov    bl,0xeb
  418c7d:	jmp    FWORD PTR [ecx+0x140451bc]
  418c83:	pop    ebx
  418c84:	push   ecx
  418c85:	push   es
  418c86:	and    al,0x5b
  418c88:	inc    ecx
  418c89:	pop    es
  418c8a:	es pop ebx
  418c8c:	out    0x3,eax
  418c8e:	jle    0x418c4c
  418c90:	cmp    al,0x14
  418c92:	cdq    
  418c93:	in     al,dx
  418c94:	jecxz  0x418c99
	...
  418cbe:	add    BYTE PTR [eax],al
  418cc0:	shr    BYTE PTR ds:[eax+edx*1],cl
  418cc4:	xor    DWORD PTR [edi+0x42],eax
  418cc7:	lods   al,BYTE PTR ds:[esi]
  418cc8:	aas    
  418cc9:	inc    edi
  418cca:	sub    BYTE PTR [esi+edx*2],al
  418ccd:	add    al,0xe4
  418ccf:	add    edi,DWORD PTR [esi]
  418cd1:	sub    edi,edi
  418cd3:	add    eax,0x1ae719ca
  418cd8:	rol    dh,cl
  418cda:	(bad)  
  418cdb:	fsubr  DWORD PTR [edx]
  418cdd:	mov    esp,0x4638b37e
  418ce2:	jnp    0x418d0f
  418ce4:	int    0x56
  418ce6:	out    0x3,eax
  418ce8:	xchg   BYTE PTR [eax+0x27],dl
  418ceb:	nop
  418cec:	aas    
  418ced:	mov    al,0xaa
  418cef:	sbb    dl,BYTE PTR [edx-0x72364041]
  418cf5:	sbb    ah,bh
  418cf7:	sbb    dl,BYTE PTR [edx+0x3a484fc3]
  418cfd:	pop    ebx
  418cfe:	out    0x86,eax
  418d00:	std    
  418d01:	dec    esi
  418d02:	add    cl,al
  418d04:	mov    bl,0x47
  418d06:	aas    
  418d07:	jmp    0xe9461f21
  418d0c:	cmp    eax,0xe395c050
  418d11:	xor    ebp,ecx
  418d13:	call   0x5882:0x14dbbfa
  418d1a:	add    cl,ch
  418d1c:	xor    BYTE PTR [ebx-0x4414258c],bl
  418d22:	addr16 jmp 0x418d28
	...
  418d4c:	add    BYTE PTR [eax],al
  418d4e:	push   esp
  418d4f:	inc    edi
  418d50:	clc    
  418d51:	out    dx,al
  418d52:	mov    ecx,0x72a968ab
  418d57:	sbb    al,BYTE PTR [eax]
  418d59:	push   ebx
  418d5a:	inc    edx
  418d5b:	mov    esp,0xbfc1d6d0
  418d60:	call   0xfdfe12b6
  418d65:	(bad)  
  418d66:	mov    cl,0xab
  418d68:	call   0xfdfe02a6
  418d6d:	mov    dh,0xc1
  418d6f:	ret    
  418d70:	call   0xfdfdf2b6
  418d75:	mov    al,0xfb
  418d77:	mov    DWORD PTR es:[ebp+0x3ae097c3],ecx
  418d7e:	mov    ah,BYTE PTR [ebx]
  418d80:	push   0x7c271c
  418d85:	sub    DWORD PTR [eax-0x3c813ea6],0xfd225177
  418d8f:	mov    edx,0xde34f5fd
  418d94:	cmp    esi,DWORD PTR [esi-0x16ffe40e]
  418d9a:	enter  0x295f,0x29
  418d9e:	shl    DWORD PTR [ebx-0x4936d93f],cl
  418da4:	add    BYTE PTR [eax],al
  418da6:	pop    ss
  418da7:	pop    edi
  418da8:	add    bh,al
  418daa:	mov    ds:0xe7fffd56,al
  418daf:	pop    esi
  418db0:	lds    eax,FWORD PTR [ebp+0x0]
	...
  418ddb:	add    BYTE PTR [ebx],ch
  418ddd:	pop    edi
  418dde:	add    BYTE PTR [eax],al
  418de0:	xlat   BYTE PTR ds:[ebx]
  418de1:	sbb    eax,DWORD PTR [esp+esi*8-0x19]
  418de5:	pop    esi
  418de6:	add    BYTE PTR [eax],al
  418de8:	and    dl,bh
  418dea:	in     eax,dx
  418deb:	add    bh,dl
  418ded:	pop    esi
  418dee:	add    BYTE PTR [ebp-0x72b2b16e],cl
  418df4:	loop   0x418e60
  418df6:	dec    ebp
  418df7:	(bad)  
  418df8:	loop   0x418d7c
  418dfa:	dec    ebp
  418dfb:	push   0xffffff98
  418dfd:	loope  0x418e43
  418dff:	cld    
  418e00:	or     DWORD PTR [bx+si],eax
  418e03:	push   0xffffffa4
  418e05:	or     dh,bh
  418e07:	(bad)  
  418e08:	xchg   edx,eax
  418e09:	out    dx,eax
  418e0a:	dec    edx
  418e0b:	inc    ecx
  418e0c:	xchg   edi,eax
  418e0d:	in     eax,0x44
  418e0f:	call   0x1275f28
  418e14:	xor    esp,DWORD PTR [esi+0x7f]
  418e17:	jge    0x418e98
  418e19:	mov    ch,bh
  418e1b:	call   DWORD PTR [edi-0x17]
  418e1e:	jno    0x418e1f
  418e20:	inc    edx
  418e21:	push   ebx
  418e22:	mov    es,WORD PTR [ebp-0x61]
  418e25:	fistp  QWORD PTR [eax+edi*8+0x67]
  418e29:	jmp    0x3fea:0x571a8b57
  418e30:	mov    eax,0x6e865cf
  418e35:	(bad)  
  418e38:	sahf   
  418e39:	stc    
  418e3a:	(bad)  
  418e3c:	in     al,0x85
  418e3e:	push   ss
  418e3f:	sub    DWORD PTR [eax],eax
	...
  418e69:	add    BYTE PTR [eax-0xc3ff5ad],bl
  418e6f:	mov    esi,0x283e4588
  418e74:	stos   DWORD PTR es:[edi],eax
  418e75:	or     edx,DWORD PTR [esi]
  418e77:	pop    ecx
  418e78:	stc    
  418e79:	inc    BYTE PTR [ecx]
  418e7b:	and    DWORD PTR [esi+0xa03c9df],ecx
  418e81:	jmp    FWORD PTR [ebx+0x28]
  418e84:	mov    BYTE PTR [edi],bh
  418e86:	inc    edx
  418e87:	mov    esi,ecx
  418e89:	mov    ah,0x6d
  418e8b:	add    eax,DWORD PTR [edx]
  418e8d:	(bad)  
  418e8e:	ds and eax,0xc47f724e
  418e94:	test   dl,al
  418e96:	push   edx
  418e97:	imul   eax,esi,0x25debdeb
  418e9d:	push   DWORD PTR [edx]
  418e9f:	sbb    eax,0xb0b27418
  418ea4:	jmp    0x418ef4
  418ea6:	cmc    
  418ea7:	add    al,BYTE PTR [edx]
  418ea9:	(bad)  
  418eaa:	sti    
  418eab:	mov    edi,0xc43e0004
  418eb0:	test   BYTE PTR [esi+eiz*4-0x63],bh
  418eb4:	add    al,0x0
  418eb6:	ds ud0 ebp,eax
  418eba:	loop   0x418e5c
  418ebc:	adc    eax,0x1876bdfe
  418ec1:	(bad)  
  418ec2:	in     eax,dx
  418ec3:	mov    edx,0x86a7416
  418ec8:	lock dec esi
  418eca:	cmc    
  418ecb:	add    BYTE PTR [eax+edi*4],0x0
	...
  418ef7:	add    BYTE PTR [edi],bh
  418ef9:	les    eax,FWORD PTR [ecx]
  418efb:	add    ch,dh
  418efd:	cli    
  418efe:	inc    ecx
  418eff:	push   esp
  418f00:	mov    ch,0x37
  418f02:	add    ebx,0x4fad546a
  418f08:	xchg   esi,eax
  418f09:	dec    edx
  418f0a:	scas   al,BYTE PTR es:[edi]
  418f0b:	(bad)  
  418f0c:	jle    0x418ed0
  418f0e:	sbb    DWORD PTR [ecx+0x3f],esi
  418f11:	add    eax,0x5b638216
  418f16:	outs   dx,BYTE PTR ds:[esi]
  418f17:	retf   
  418f18:	jle    0x418f75
  418f1a:	out    0x8f,eax
  418f1c:	inc    esi
  418f1d:	fcom   QWORD PTR [ebx+esi*2]
  418f20:	je     0x418f3c
  418f22:	out    0x3,eax
  418f24:	mov    esp,DWORD PTR [ecx+0x12]
  418f27:	inc    esp
  418f28:	cwde   
  418f29:	adc    al,0x30
  418f2b:	inc    ebx
  418f2c:	les    edx,FWORD PTR [esi+0x7c]
  418f2f:	xchg   ebx,eax
  418f30:	jle    0x418f8d
  418f32:	inc    eax
  418f33:	jne    0x418f73
  418f35:	pop    ebx
  418f36:	out    0x2b,eax
  418f38:	lods   al,BYTE PTR ds:[esi]
  418f39:	sbb    BYTE PTR [esi],0x17
  418f3c:	mov    esp,0x7e935076
  418f41:	pop    ebx
  418f42:	out    0x8f,eax
  418f44:	sub    BYTE PTR [eax+0x6eb8ff7a],bh
  418f4a:	inc    eax
  418f4b:	xchg   ebx,eax
  418f4c:	(bad)  
  418f4d:	pop    edx
  418f4e:	inc    DWORD PTR [edx+0xae75b3c]
  418f54:	jle    0x418f84
  418f56:	in     al,dx
  418f57:	sub    al,0x27
  418f59:	pop    edx
  418f5a:	out    0x3,eax
	...
  418f84:	add    BYTE PTR [eax],al
  418f86:	jns    0x418fa6
  418f88:	rol    DWORD PTR [ebx],cl
  418f8a:	ds pop ebx
  418f8c:	out    0x88,eax
  418f8e:	cli    
  418f8f:	mov    dh,0x17
  418f91:	stos   BYTE PTR es:[edi],al
  418f92:	jns    0x418fd6
  418f94:	jmp    0x41a07baf
  418f99:	add    al,0x69
  418f9b:	sub    al,0xe3
  418f9d:	push   ss
  418f9e:	dec    edx
  418f9f:	int3   
  418fa0:	xor    al,ch
  418fa2:	pop    ecx
  418fa3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418fa5:	(bad)  
  418fa6:	cmp    al,dl
  418fa8:	pusha  
  418fa9:	add    edi,DWORD PTR [esi]
  418fab:	pop    ebx
  418fac:	mov    ss,WORD PTR [edx-0x21a03cc3]
  418fb2:	cmp    BYTE PTR [eax-0x47d63f90],bh
  418fb8:	add    dl,bh
  418fba:	sub    eax,eax
  418fbc:	popf   
  418fbd:	jmp    0x418ffc
  418fbf:	pop    ebx
  418fc0:	push   eax
  418fc1:	data16 scas al,BYTE PTR es:[edi]
  418fc3:	scas   eax,DWORD PTR es:[edi]
  418fc4:	push   eax
  418fc5:	pop    esi
  418fc6:	lods   al,BYTE PTR ds:[esi]
  418fc7:	pop    ebx
  418fc8:	push   0x5b42e9
  418fcd:	sar    DWORD PTR ds:0x25e9005f,0xce
  418fd4:	add    ecx,ebp
  418fd6:	cmp    eax,0xd4bdc064
  418fdb:	mov    al,ds:0x5b3d2d43
  418fe0:	add    cl,ch
  418fe2:	(bad)  
  418fe3:	push   ds
  418fe4:	cld    
  418fe5:	mov    ecx,0xeb67b7a7
	...
  419012:	add    BYTE PTR [eax],al
  419014:	xor    BYTE PTR [edi],ch
  419016:	clc    
  419017:	cmp    DWORD PTR ds:0x50ed71b8,0x4f
  41901e:	xchg   ecx,eax
  41901f:	mov    dl,0x7a
  419021:	mov    bh,0xa
  419023:	sub    DWORD PTR [ecx+0x4574fd61],edi
  419029:	rol    BYTE PTR [ebx-0x1646cd02],0x19
  419030:	sub    ebp,DWORD PTR [edi]
  419032:	clc    
  419033:	shl    DWORD PTR [edi-0x143102b0],0xb7
  41903a:	cmp    eax,0x43a04228
  41903f:	mov    ebp,0xe9005b3a
  419044:	rcr    BYTE PTR [esi],0xfc
  419047:	sbb    DWORD PTR [edi+esi*4+0x41aaeb67],edx
  41904e:	add    BYTE PTR [esi-0x302a451],bl
  419054:	into   
  419055:	and    al,0x3f
  419057:	jmp    0x4f2b92
  41905c:	stos   DWORD PTR es:[edi],eax
  41905d:	inc    edx
  41905e:	std    
  41905f:	jmp    DWORD PTR [edi]
  419061:	js     0x4190a7
  419063:	fdiv   st,st(7)
  419065:	pop    edx
  419066:	add    BYTE PTR [eax],al
  419068:	fdiv   st,st(6)
  41906a:	fld    DWORD PTR [ecx]
  41906c:	daa    
  41906d:	pop    ebx
  41906e:	add    bh,bh
  419070:	hlt    
  419071:	mov    dh,0x8e
  419073:	inc    ebp
  419074:	ja     0x4190c6
  419076:	jb     0x419080
	...
  4190a0:	add    BYTE PTR [eax],al
  4190a2:	pusha  
  4190a3:	mul    cl
  4190a5:	(bad)  
  4190a6:	stos   BYTE PTR es:[edi],al
  4190a7:	cmp    ch,0xff
  4190aa:	out    0x5a,eax
  4190ac:	lds    eax,FWORD PTR [ebp-0x7d]
  4190af:	pop    edi
  4190b0:	add    BYTE PTR [eax],al
  4190b2:	xlat   BYTE PTR ds:[ebx]
  4190b3:	ja     0x4190f9
  4190b5:	lock out 0x5a,eax
  4190b8:	add    BYTE PTR [eax],al
  4190ba:	sbb    dh,dh
  4190bc:	icebp  
  4190bd:	add    bh,dl
  4190bf:	pop    edx
  4190c0:	add    BYTE PTR [ebp-0xb28d66],cl
  4190c6:	cmp    cl,BYTE PTR [esi-0x1b]
  4190c9:	in     eax,0xa4
  4190cb:	pop    edx
  4190cc:	add    BYTE PTR [ebx],cl
  4190ce:	push   edi
  4190cf:	retf   
  4190d0:	adc    eax,0xfd661283
  4190d5:	jae    0x419065
  4190d7:	dec    edi
  4190d8:	je     0x4190ce
  4190da:	and    BYTE PTR [ebp+0x5f5648c4],dh
  4190e0:	lds    eax,FWORD PTR [ebp-0x35]
  4190e3:	pop    ecx
  4190e4:	add    BYTE PTR [eax],al
  4190e6:	add    DWORD PTR ds:0x1ac7,0x6b
  4190ec:	std    
  4190ed:	call   DWORD PTR [edi+0x5a]
  4190f0:	std    
  4190f1:	jne    0x419086
  4190f3:	dec    edi
  4190f4:	adc    al,0x87
  4190f6:	or     al,0x9a
  4190f8:	std    
  4190f9:	or     ah,BYTE PTR [edi+0x3ee81be6]
  4190ff:	mov    ds:0x4141fe1a,al
  419104:	(bad)  
  419105:	jle    0x419107
	...
  41912f:	add    BYTE PTR [ebp-0x55fffb7d],al
  419135:	mov    esi,0x79a91414
  41913a:	sar    edi,0xf8
  41913d:	mov    esi,0xc47f473e
  419142:	add    al,BYTE PTR [eax]
  419144:	ds inc esp
  419146:	cmp    BYTE PTR [edx+esi*8-0x3d],0x8d
  41914b:	or     al,BYTE PTR [ecx]
  41914d:	(bad)  
  41914e:	or     eax,0x292073fe
  419153:	mov    edi,DWORD PTR ds:0x73ff01c4
  419159:	jo     0x419184
  41915b:	jae    0x41919c
  41915d:	les    eax,FWORD PTR [ecx]
  41915f:	cld    
  419160:	or     eax,0xd1fe5a84
  419165:	push   esp
  419166:	adc    al,0xf1
  419168:	cwde   
  419169:	mov    edi,esp
  41916b:	push   cs
  41916c:	mov    ebx,0xb9fe14a1
  419171:	sub    al,bh
  419173:	or     dl,BYTE PTR [ebp-0x5799813c]
  419179:	lods   al,BYTE PTR ds:[esi]
  41917a:	adc    DWORD PTR [edi+0x1c43f],esi
  419180:	stc    
  419181:	sbb    BYTE PTR [ebx],bh
  419183:	ret    0x28eb
  419186:	and    BYTE PTR [edx+0x57b48f82],al
  41918c:	push   ss
  41918d:	mov    bh,0x3
  41918f:	inc    ecx
  419190:	ds pushf 
  419192:	xchg   esi,eax
	...
  4191bb:	add    BYTE PTR [eax],al
  4191bd:	add    BYTE PTR [ebp-0xc],bh
  4191c0:	sahf   
  4191c1:	jmp    DWORD PTR [ecx+0x43]
  4191c4:	push   es
  4191c5:	add    BYTE PTR [esi],bh
  4191c7:	pushf  
  4191c8:	shl    BYTE PTR [eax],cl
  4191ca:	pop    ecx
  4191cb:	pop    edx
  4191cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191cd:	sbb    al,0x52
  4191cf:	scas   eax,DWORD PTR es:[edi]
  4191d0:	sahf   
  4191d1:	adc    esp,DWORD PTR [ecx-0x5c]
  4191d4:	into   
  4191d5:	adc    al,BYTE PTR [eax-0x3e]
  4191d8:	(bad)  
  4191d9:	jmp    0x419213
  4191db:	mov    ch,0xf2
  4191dd:	inc    ebx
  4191de:	lods   eax,DWORD PTR ds:[esi]
  4191df:	dec    eax
  4191e0:	(bad)  
  4191e1:	sub    eax,0xff76b461
  4191e6:	loope  0x419217
  4191e8:	loope  0x419234
  4191ea:	inc    edx
  4191eb:	(bad)  [esp+eax*8+0x3e75c11]
  4191f2:	ds inc ebx
  4191f4:	call   0x3f9ccffd
  4191f9:	ret    0xb453
  4191fc:	inc    esi
  4191fd:	addr16 mov dh,0x28
  419200:	test   al,0x3
  419202:	add    DWORD PTR [edi],ebx
  419204:	xor    eax,DWORD PTR ds:0x80e75b3f
  41920a:	xor    BYTE PTR [edi-0xdf5ed49],0x9a
  419211:	(bad)  
  419212:	leave  
  419213:	mov    esp,0x5b3e058f
  419218:	loop   0x41925d
  41921a:	xor    cl,BYTE PTR [esi+0x6]
  41921d:	fdecstp 
  41921f:	sub    BYTE PTR [eax+0x3],ch
	...
  419249:	add    BYTE PTR [eax],al
  41924b:	add    BYTE PTR [esi-0x5fed229a],dl
  419251:	pushf  
  419252:	in     al,0x4c
  419254:	or     al,0x1a
  419256:	out    0x3,eax
  419258:	ds pop ebx
  41925a:	out    0x1b,eax
  41925c:	jmp    0x4192b4
  41925e:	(bad)  
  41925f:	adc    bl,BYTE PTR [ecx+0x7812f076]
  419265:	inc    ebx
  419266:	sbb    eax,0xcf5afecb
  41926b:	cmp    DWORD PTR [edx-0x4c],esi
  41926e:	add    BYTE PTR [esi+0x62539922],dh
  419274:	cmp    DWORD PTR [eax+ebx*2],esp
  419277:	adc    eax,edi
  419279:	pop    ecx
  41927a:	aas    
  41927b:	jmp    0xaa40bcb5
  419280:	sub    al,0x42
  419282:	add    BYTE PTR [ecx-0x16ffa47e],al
  419288:	test   DWORD PTR [ebp+edi*8-0x3d5dc217],esi
  41928f:	in     eax,dx
  419290:	cmp    eax,0x4c01580b
  419295:	pop    edx
  419296:	aas    
  419297:	jmp    0x2a40bce1
  41929c:	sub    al,0x3c
  41929e:	mov    cl,0xeb
  4192a0:	cli    
  4192a1:	mov    bl,0xe5
  4192a3:	add    DWORD PTR [edx+0x5b],0xb4df5100
  4192aa:	std    
  4192ab:	ds inc ebp
  4192ad:	and    esi,ebx
  4192af:	add    BYTE PTR ss:[eax],al
	...
  4192da:	dec    esp
  4192db:	mov    esp,0xb52c36ed
  4192e0:	call   0xfdf6d825
  4192e5:	push   0xffffffee
  4192e7:	xor    ecx,DWORD PTR [ebx-0x58]
  4192ea:	cmp    eax,0xc0f0745b
  4192ef:	jbe    0x41936e
  4192f1:	mov    dl,0x7a
  4192f3:	mov    bl,0xfd
  4192f5:	jne    0x41932e
  4192f7:	mov    ah,0x13
  4192f9:	jbe    0x4192db
  4192fb:	sbb    al,BYTE PTR [eax]
  4192fd:	es inc esi
  4192ff:	sahf   
  419300:	dec    eax
  419301:	sub    BYTE PTR [edx],bh
  419303:	pop    edx
  419304:	add    cl,ch
  419306:	mov    ebp,0x2fd515bb
  41930b:	mov    ch,0xe8
  41930d:	repz dec eax
  41930f:	mov    ch,0xfd
  419311:	add    BYTE PTR [esi+ebp*8+0x5e726855],ah
  419318:	aas    
  419319:	add    BYTE PTR [edi-0x573cff34],ch
  41931f:	push   esi
  419320:	xor    eax,0xb7576701
  419325:	pop    es
  419326:	push   edi
  419327:	push   edi
  419328:	add    BYTE PTR [ebx],dh
  41932a:	test   DWORD PTR [ecx-0x10],edx
  41932d:	or     ebp,0x5a
  419330:	jae    0x419334
  419332:	int3   
  419333:	pop    ecx
  419334:	jmp    0xff206322
  419339:	jmp    FWORD PTR [eax+0xfa724f]
	...
  419367:	add    BYTE PTR [eax+0x6f00674c],ch
  41936d:	xchg   edx,eax
  41936e:	add    BYTE PTR [eax],al
  419370:	pop    ss
  419371:	jae    0x419371
  419373:	and    eax,0x40ddd7
  419378:	mov    BYTE PTR [edx+0x5ea68141],bh
  41937e:	std    
  41937f:	and    eax,0x40ddaf
  419384:	sub    BYTE PTR [edx+0x5ea68149],bh
  41938a:	std    
  41938b:	and    eax,0x40dd97
  419390:	sub    BYTE PTR [edx+0x5e968151],bh
  419396:	std    
  419397:	and    eax,0x40ddef
  41939c:	cmp    BYTE PTR [edx+0x5ed68159],bh
  4193a2:	std    
  4193a3:	and    eax,0x40ddb7
  4193a8:	test   al,0xb9
  4193aa:	popa   
  4193ab:	and    DWORD PTR [esi+0x57],0xddef25fd
  4193b2:	inc    eax
  4193b3:	add    BYTE PTR [esi],bh
  4193b5:	mov    esi,esp
  4193b7:	imul   edi,DWORD PTR [edi+0x1bff0483],0x74
  4193be:	add    DWORD PTR [eax+0x3e],0xbf73e6f1
  4193c5:	add    DWORD PTR [edi+edi*8],0x23
  4193c9:	ins    BYTE PTR es:[edi],dx
  4193ca:	add    DWORD PTR [eax+0x0],0x0
	...
  4193f5:	add    BYTE PTR [esi],bh
  4193f7:	stc    
  4193f8:	out    0x7b,al
  4193fa:	mov    edi,0x1bff0483
  4193ff:	inc    esp
  419400:	add    BYTE PTR [eax+0x3e],0xe1
  419404:	out    0x83,al
  419406:	mov    edi,0x63ff0482
  41940b:	sub    al,0x82
  41940d:	inc    eax
  41940e:	ds sub esi,esp
  419411:	mov    edi,DWORD PTR [edi+0x5bff0482]
  419417:	xor    al,0x82
  419419:	inc    eax
  41941a:	ds adc esi,esp
  41941d:	xchg   ebx,eax
  41941e:	mov    edi,0x23ff0202
  419423:	sub    al,0x82
  419425:	inc    eax
  419426:	ds sbb esi,esp
  419429:	fwait
  41942a:	mov    edi,0x1bff0202
  41942f:	in     al,0x82
  419431:	inc    eax
  419432:	ds and esi,0x202bfa3
  419439:	jmp    DWORD PTR [ebx]
  41943b:	or     al,0x82
  41943d:	inc    eax
  41943e:	ds dec ecx
  419440:	out    0xab,al
  419442:	mov    edi,0x5bff0202
  419447:	je     0x4193cb
  419449:	inc    eax
  41944a:	ds mov cl,0xe3
  41944d:	mov    bl,0xbf
  41944f:	add    al,BYTE PTR [edx]
  419451:	jmp    DWORD PTR [ebx+0x6c]
  419454:	add    BYTE PTR [eax+0x3e],0x5b
  419458:	out    0xe9,al
	...
  419482:	add    BYTE PTR [eax],al
  419484:	(bad)
  419487:	add    al,0x81
  419489:	ja     0x419432
  41948b:	test   esi,edi
  41948d:	pop    edx
  41948e:	into   
  41948f:	jmp    0x46a7011
  419494:	imul   esi,DWORD PTR [edi-0x51],0xb65afe85
  41949b:	jmp    0x46a7025
  4194a0:	push   ecx
  4194a1:	ja     0x41945a
  4194a3:	test   esi,edi
  4194a5:	pop    edx
  4194a6:	sahf   
  4194a7:	jmp    0x46a7019
  4194ac:	cmp    DWORD PTR [edi-0x51],esi
  4194af:	test   DWORD PTR [esi+0x5b],edi
  4194b2:	xchg   cl,ch
  4194b4:	add    eax,0x210428db
  4194b9:	ja     0x419442
  4194bb:	test   DWORD PTR [esi+0x5b],edi
  4194be:	outs   dx,BYTE PTR ds:[esi]
  4194bf:	jmp    0x3ea6fe1
  4194c4:	or     DWORD PTR [edi+0x4f],esi
  4194c7:	test   DWORD PTR [esi+0x5b],edi
  4194ca:	push   esi
  4194cb:	jmp    0x3ea6fb5
  4194d0:	icebp  
  4194d1:	jbe    0x41950a
  4194d3:	test   DWORD PTR [esi+0x5b],edi
  4194d6:	ds jmp 0x3ea6fc9
  4194dc:	fnstenv [esi+0x2f]
  4194df:	test   DWORD PTR [esi+0x5b],edi
  4194e2:	es jmp 0x3ea6fad
	...
  419510:	add    BYTE PTR [eax],al
  419512:	shl    DWORD PTR [esi-0x19],0x81
  419516:	(bad)  
  419517:	pop    edx
  419518:	push   cs
  419519:	jmp    0x3ea725b
  41951e:	test   eax,0xfe81ef76
  419523:	pop    edx
  419524:	add    dh,dh
  419526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419527:	sub    BYTE PTR fs:[eax-0x2dc4fc3],0xbf
  41952f:	sbb    eax,DWORD PTR [eax]
  419531:	ficom  WORD PTR [esi+0x42288248]
  419537:	mov    al,0x23
  419539:	in     eax,dx
  41953a:	mov    edi,0x56c6001b
  41953f:	push   eax
  419540:	sub    BYTE PTR [eax],0x3a
  419543:	mov    al,0x23
  419545:	or     eax,0xae001bbc
  41954a:	data16 js 0x4194cf
  41954d:	sub    BYTE PTR [edx-0x50],al
  419550:	and    ebx,ecx
  419552:	mov    edi,0x2696001b
  419557:	push   0xb03a2882
  41955c:	and    eax,ebp
  41955e:	mov    edi,0x167e001a
  419563:	jo     0x4194e7
  419565:	sub    BYTE PTR [edx-0x50],al
  419568:	and    esp,DWORD PTR ds:0x66001abc
  41956e:	push   ss
  41956f:	sbb    BYTE PTR [edx+0x23b03da8],al
  419575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41959e:	add    BYTE PTR [eax],al
  4195a0:	mov    edi,0xe64e001a
  4195a5:	pop    ds
  4195a6:	sub    BYTE PTR [eax-0x6adc4fc3],0xbf
  4195ad:	sbb    al,BYTE PTR [eax]
  4195af:	ss out 0x7,al
  4195b2:	sub    BYTE PTR [eax-0x3adc4fc3],0xbf
  4195b9:	sbb    al,BYTE PTR [eax]
  4195bb:	push   ds
  4195bc:	(bad)  
  4195bd:	jb     0x23f1d36b
  4195c3:	cmp    DWORD PTR [edi+0x4000001a],0xd6826dc3
  4195cd:	pop    ebx
  4195ce:	std    
  4195cf:	and    eax,0x40da1b
  4195d4:	mov    al,ds:0x568279b7
  4195d9:	push   edi
  4195da:	std    
  4195db:	and    eax,0x40dd17
  4195e0:	nop
  4195e1:	mov    bh,0x81
  4195e3:	and    BYTE PTR [esi],0x57
  4195e6:	std    
  4195e7:	and    eax,0x40dcef
  4195ec:	mov    al,ds:0x268289b7
  4195f1:	push   edi
  4195f2:	std    
  4195f3:	and    eax,0x40dcf7
  4195f8:	mov    al,ds:0x168295b7
  4195fd:	push   edi
  4195fe:	std    
  4195ff:	and    eax,0x40d9b3
	...
  41962c:	add    BYTE PTR [eax],al
  41962e:	shl    BYTE PTR [esi+0x5756829d],0xfd
  419635:	and    eax,0x40d97b
  41963a:	nop
  41963b:	mov    dh,0xa5
  41963d:	and    BYTE PTR [esi+0x57],0xfd
  419641:	and    eax,0x40d9b3
  419646:	pusha  
  419647:	mov    dh,0xad
  419649:	and    BYTE PTR [esi-0x34da02a6],0xd9
  419650:	inc    eax
  419651:	add    BYTE PTR [eax-0x697d4a4a],al
  419657:	pop    edx
  419658:	std    
  419659:	and    eax,0x40d953
  41965e:	and    BYTE PTR [esi+0x5a9682c1],dh
  419664:	std    
  419665:	and    eax,0x40d90f
  41966a:	ds cmp eax,ecx
  41966d:	and    edi,DWORD PTR [edx]
  41966f:	inc    ecx
  419670:	or     al,0x1
  419672:	sub    ebp,DWORD PTR [ecx+ecx*2+0x1c43e63]
  419679:	ret    0xc442
  41967c:	xor    bh,0x3a
  41967f:	aas    
  419680:	stc    
  419681:	mov    bh,0x3c
  419683:	les    eax,FWORD PTR [ecx]
  419685:	add    BYTE PTR [eax+edi*4+0x1],bh
  419689:	xor    DWORD PTR [esi-0x44],0xffffff8e
  41968d:	pop    es
  41968e:	mov    dh,0xb8
  419690:	add    DWORD PTR [eax],eax
	...
  4196ba:	add    BYTE PTR [eax],al
  4196bc:	add    al,BYTE PTR ds:[esi]
  4196bf:	add    BYTE PTR [ebp+0x467cf19c],bh
  4196c5:	sub    al,0x3
  4196c7:	add    BYTE PTR [esi],bh
  4196c9:	les    edi,FWORD PTR [edi]
  4196cb:	add    edi,DWORD PTR [esi]
  4196cd:	inc    ecx
  4196ce:	or     DWORD PTR [edi],ebx
  4196d0:	ret    
  4196d1:	stos   DWORD PTR es:[edi],eax
  4196d2:	dec    ecx
  4196d3:	pop    es
  4196d4:	les    eax,FWORD PTR ds:[ecx]
  4196d7:	ret    0xc43a
  4196da:	xor    bh,0x7e
  4196dd:	push   edi
  4196de:	cld    
  4196df:	mov    bh,0x34
  4196e1:	les    eax,FWORD PTR [ecx]
  4196e3:	add    ah,bh
  4196e5:	mov    edi,0xc3be3d01
  4196ea:	add    DWORD PTR [eax],eax
  4196ec:	mov    ebp,DWORD PTR [ecx+ecx*2+0x1c43e0b]
  4196f3:	ret    0xc442
  4196f6:	into   
  4196f7:	(bad)  
  4196f8:	les    eax,FWORD PTR ds:[ecx]
  4196fb:	jge    0x419733
  4196fd:	fdiv   st(3),st
  4196ff:	jmp    ecx
  419701:	ret    
  419702:	aas    
  419703:	add    edi,DWORD PTR [esi]
  419705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419706:	add    DWORD PTR [edx],eax
  419708:	les    ecx,FWORD PTR ds:[esi-0x8a579f9]
  41970f:	add    edi,DWORD PTR [esi]
  419711:	pop    ebx
  419712:	sub    DWORD PTR [edi],eax
  419714:	ds jo  0x4196fe
  419717:	pop    es
  419718:	ds pop ebx
  41971a:	mov    ebx,?
  41971c:	icebp  
  41971d:	dec    eax
  41971e:	out    0x3,eax
	...
  419748:	add    BYTE PTR [eax],al
  41974a:	ds cdq 
  41974c:	jecxz  0x419751
  41974e:	pop    ebx
  41974f:	pop    ebx
  419750:	fild   WORD PTR [ebx]
  419752:	ds xor bh,bl
  419755:	dec    ebx
  419756:	sub    eax,0x7c03e75b
  41975b:	push   esi
  41975c:	out    0xc8,eax
  41975e:	jns    0x4197bd
  419760:	out    0x3,eax
  419762:	repz bound ecx,QWORD PTR [edi-0x1852960e]
  419769:	inc    ebp
  41976a:	cmp    eax,0x1e03fc5b
  41976f:	pop    ebx
  419770:	out    0x88,eax
  419772:	cmp    ebx,esi
  419774:	iret   
  419775:	add    edi,DWORD PTR [esi]
  419777:	pop    ebx
  419778:	test   eax,0xe7703e00
  41977d:	ret    
  41977e:	cmp    DWORD PTR [ebp+0x51e9fc14],ebp
  419784:	out    0x3,eax
  419786:	ds cdq 
  419788:	jmp    0x41978d
  41978a:	arpl   WORD PTR [ebx+0x67],bx
  41978d:	add    al,0x3e
  41978f:	fisttp WORD PTR cs:[ebx+0x35]
  419793:	pop    ebx
  419794:	out    0x3,eax
  419796:	cld    
  419797:	push   edi
  419798:	out    0xd6,eax
  41979a:	imul   BYTE PTR [esi-0x19]
  41979d:	add    edi,DWORD PTR [edi]
  41979f:	pop    ebx
  4197a0:	out    0x68,al
  4197a2:	(bad)  
  4197a3:	ficomp WORD PTR [ebx+0x28e04bfc]
  4197a9:	inc    esi
  4197aa:	cmp    eax,0x856a5b
	...
  4197d7:	add    BYTE PTR ds:0x3de90057,dh
  4197dd:	lods   al,BYTE PTR ds:[esi]
  4197de:	jae    0x4197ac
  4197e0:	dec    eax
  4197e1:	fist   DWORD PTR [eax]
  4197e3:	in     eax,dx
  4197e4:	cmp    eax,0xaa68875b
  4197e9:	pop    eax
  4197ea:	add    cl,ch
  4197ec:	jge    0x419783
  4197ee:	jg     0x4197dd
  4197f0:	test   eax,0x3df1fdac
  4197f5:	pop    ebx
  4197f6:	add    BYTE PTR [eax-0x3d],dh
  4197f9:	pop    esp
  4197fa:	add    al,0xe9
  4197fc:	cmp    eax,0x89c57cd8
  419801:	lods   al,BYTE PTR ds:[esi]
  419802:	mov    dh,BYTE PTR [eax-0x6b]
  419805:	pop    eax
  419806:	add    cl,ch
  419808:	leave  
  419809:	popa   
  41980a:	mov    ch,al
  41980c:	cmp    ebx,DWORD PTR [ebx+0x5ae5a9fe]
  419812:	ret    0x3ded
  419815:	mov    ebx,DWORD PTR [edi]
  419817:	stos   DWORD PTR es:[edi],eax
  419818:	pop    ecx
  419819:	lods   al,BYTE PTR ds:[esi]
  41981a:	sub    BYTE PTR [eax+0x59],0x58
  41981e:	add    cl,ch
  419820:	xor    al,0x27
  419822:	sbb    esi,DWORD PTR [edx-0x46]
  419825:	pop    esp
  419826:	add    al,0xe9
  419828:	cmp    eax,0x31f17fe2
  41982d:	lods   al,BYTE PTR ds:[esi]
  41982e:	std    
  41982f:	sub    DWORD PTR [ebp-0x25],edi
  419832:	sbb    al,0xed
  419834:	cmp    eax,0x3de9085b
  419839:	pop    ebx
  41983a:	xchg   DWORD PTR [eax+0x0],ebp
	...
  419865:	add    BYTE PTR ds:0x88e90058,cl
  41986b:	jecxz  0x419885
  41986d:	in     eax,dx
  41986e:	cmp    eax,0x8108d05b
  419873:	fnstcw WORD PTR [edi-0xb]
  419876:	icebp  
  419877:	stos   DWORD PTR es:[edi],eax
  419878:	std    
  419879:	dec    esi
  41987a:	into   
  41987b:	dec    esi
  41987c:	mov    DWORD PTR [eax],eax
  41987e:	push   esi
  41987f:	test   al,0x1
  419881:	add    bh,ah
  419883:	sbb    BYTE PTR cs:[eax],0xe3
  419887:	push   edi
  419888:	add    BYTE PTR [eax+0x20],al
  41988b:	xlat   BYTE PTR ds:[ebx]
  41988c:	sbb    DWORD PTR [edi+edx*8],eax
  41988f:	push   edi
  419890:	or     BYTE PTR [eax],al
  419892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419893:	push   edi
  419894:	xchg   DWORD PTR [ecx-0x25449],eax
  41989a:	sbb    al,0x2f
  41989c:	adc    eax,0x8a579704
  4198a1:	add    DWORD PTR [ebp+0x1fc0fb17],esp
  4198a7:	push   edi
  4198a8:	ror    DWORD PTR [ebx-0x74fe741d],0x43
  4198af:	mov    ebx,0xea315501
  4198b4:	xor    dh,dh
  4198b6:	(bad)  
  4198b8:	std    
  4198b9:	mov    cl,BYTE PTR [edi-0x39fe192b]
  4198bf:	dec    esi
  4198c0:	inc    ebx
  4198c1:	lea    esi,[ebx-0x16]
  4198c4:	cmp    al,0x66
  4198c7:	retf   0x83ed
	...
  4198f2:	add    BYTE PTR [eax],al
  4198f4:	mov    DWORD PTR [edi-0x45],edx
  4198f7:	call   FWORD PTR [eax+0x5a8dfe61]
  4198fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fe:	jno    0x419972
  419900:	je     0x41992a
  419902:	inc    BYTE PTR [ecx]
  419904:	jle    0x4198b9
  419906:	add    DWORD PTR [eax],eax
  419908:	pop    ss
  419909:	ficomp DWORD PTR [eax]
  41990b:	mov    esp,DWORD PTR [esi+0x270001af]
  419911:	sbb    BYTE PTR es:[eax],0x23
  419915:	pop    edi
  419916:	add    BYTE PTR [eax-0x72],al
  419919:	push   ss
  41991a:	sbb    DWORD PTR [edi+eiz*8],eax
  41991d:	pop    esi
  41991e:	xchg   DWORD PTR [ecx-0x25bc2],eax
  419924:	jmp    0x3a591a66
  419929:	mov    ah,0x1
  41992b:	idiv   ah
  41992d:	mov    bl,0x8d
  41992f:	or     esp,eax
  419931:	mov    WORD PTR [ebx],es
  419933:	fcmovne st,st(0)
  419935:	jne    0x4199b3
  419937:	pop    ss
  419938:	aad    0xb6
  41993a:	xor    DWORD PTR [edi],ebx
  41993c:	aas    
  41993d:	or     ebp,eax
  41993f:	add    edi,DWORD PTR [esi]
  419941:	mov    ah,0x8e
  419943:	sbb    BYTE PTR [ebp+0x3e03f433],dh
  419949:	mov    ah,0x7a
  41994b:	xor    BYTE PTR [esi],0xc0
  41994e:	add    DWORD PTR [eax],eax
  419950:	(bad)  
  419951:	cmp    cl,BYTE PTR [ecx+0x1b]
  419954:	inc    edx
  419955:	mov    ah,0x1
  419957:	mov    DWORD PTR [eax],eax
	...
  419981:	add    BYTE PTR [edi+0x79fffda4],bh
  419987:	sub    eax,0xb43a1782
  41998c:	add    DWORD PTR [edx-0x2d349ba],ecx
  419992:	jge    0x419957
  419994:	sbb    eax,DWORD PTR [edx+0x1779b368]
  41999a:	retf   
  41999b:	add    eax,0x989700ac
  4199a0:	std    
  4199a1:	inc    DWORD PTR [ecx+0x47]
  4199a4:	jmp    0xfde55933
  4199a9:	push   DWORD PTR [ecx]
  4199ab:	cmp    eax,DWORD PTR [edx+0x1b44217]
  4199b1:	inc    eax
  4199b2:	mov    bh,0x1a
  4199b4:	in     eax,0x3
  4199b6:	ds mov ah,0x7a
  4199b9:	sub    BYTE PTR [esi],0xb8
  4199bc:	add    DWORD PTR [eax],eax
  4199be:	mov    ch,0x32
  4199c0:	jmp    0xe79cd7c8
  4199c5:	adc    edi,edi
  4199c7:	pop    ebx
  4199c8:	sar    ebp,cl
  4199ca:	(bad)  
  4199cb:	dec    edx
  4199cc:	jmp    0x5fde8506
  4199d1:	repz aam 0x5c
  4199d4:	pop    ss
  4199d5:	jecxz  0x419a15
  4199d7:	hlt    
  4199d8:	(bad)  
  4199da:	shr    DWORD PTR [ecx-0x244b1544],1
  4199e0:	xlat   BYTE PTR ds:[ebx]
  4199e1:	inc    ecx
  4199e3:	test   eax,0x8270
	...
  419a10:	push   ecx
  419a11:	pop    edi
  419a12:	out    0x3,eax
  419a14:	(bad)  
  419a15:	rcl    DWORD PTR [eax-0x19],cl
  419a18:	cmp    eax,0xbe7ae75b
  419a1d:	dec    edx
  419a1e:	jmp    0x419a23
  419a20:	ds (bad) 
  419a22:	jo     0x419a0f
  419a24:	cmp    eax,0x5e33e75b
  419a29:	or     cl,BYTE PTR [ebp-0x18a1805a]
  419a2f:	mov    dl,0x12
  419a31:	(bad)  
  419a32:	dec    ebx
  419a33:	loopne 0x419a76
  419a35:	adc    DWORD PTR [edx],ebx
  419a37:	inc    esp
  419a38:	adc    dh,bl
  419a3a:	int3   
  419a3b:	imul   ebx
  419a3d:	pop    edi
  419a3e:	test   bh,dh
  419a40:	pop    ecx
  419a41:	test   eax,0x7ed57ae7
  419a46:	fstp   TBYTE PTR [edx+0x50]
  419a49:	jne    0x4199ff
  419a4b:	jns    0x419a2a
  419a4d:	jle    0x419a36
  419a4f:	jns    0x419aa9
  419a51:	ffreep st(2)
  419a53:	nop
  419a54:	push   ecx
  419a55:	aam    0xa4
  419a57:	jnp    0x419a6c
  419a59:	xlat   BYTE PTR ds:[ebx]
  419a5a:	jb     0x419a60
  419a5c:	ds pop ebx
  419a5e:	out    0xc9,eax
  419a60:	aaa    
  419a61:	das    
  419a62:	in     eax,0xbc
  419a64:	jg     0x419a44
  419a66:	add    BYTE PTR [eax-0x567e5151],ah
  419a6c:	add    eax,esp
  419a6e:	(bad)  
  419a6f:	fdivr  st(5),st
  419a71:	ffree  st(0)
  419a73:	jmp    0x419a75
	...
  419a9d:	add    BYTE PTR [ebp+ebx*2-0x7f],dl
  419aa1:	sub    ecx,ebp
  419aa3:	and    DWORD PTR [esi+0x6a],eax
  419aa6:	(bad)  
  419aa7:	jl     0x419ac5
  419aa9:	call   0x9f9f315c
  419aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aaf:	add    eax,0xd43de5c2
  419ab4:	push   esp
  419ab5:	add    eax,0x72560e3e
  419aba:	push   ebx
  419abb:	mov    eax,ds:0xa8b1d186
  419ac0:	std    
  419ac1:	jmp    0x6341f603
  419ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ac7:	fadd   st(7),st
  419ac9:	neg    BYTE PTR [ecx]
  419acb:	js     0x419acc
  419acd:	call   0x75caab0f
  419ad2:	imul   ecx,DWORD PTR [ecx+eax*4-0x12],0xa6032e88
  419ada:	jo     0x419a84
  419adc:	std    
  419add:	jmp    0xae6b34d6
  419ae2:	in     eax,dx
  419ae3:	popa   
  419ae4:	or     BYTE PTR [ebp-0x5c],dl
  419ae7:	sbb    DWORD PTR [eax+0x6c],eax
  419aea:	inc    eax
  419aeb:	das    
  419aec:	imul   BYTE PTR [edx-0x2d]
  419aef:	inc    ebx
  419af0:	add    al,0xe9
  419af2:	cmp    eax,0xc4cc73a8
  419af7:	fst    QWORD PTR [eax]
  419af9:	in     eax,dx
  419afa:	cmp    eax,0x2567875b
  419aff:	pop    esp
  419b00:	add    cl,ch
	...
  419b2a:	add    BYTE PTR [eax],al
  419b2c:	std    
  419b2d:	mov    al,ds:0xa821ed86
  419b32:	std    
  419b33:	add    BYTE PTR [edi],cl
  419b35:	pop    esp
  419b36:	add    BYTE PTR [eax],al
  419b38:	mov    fs,WORD PTR [esi]
  419b3a:	or     eax,0x895c1704
  419b3f:	xchg   bh,ch
  419b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b42:	std    
  419b43:	push   DWORD PTR [edi]
  419b45:	mov    esp,0xa7f7868a
  419b4a:	std    
  419b4b:	call   FWORD PTR [ebp-0x5e]
  419b4e:	pop    esi
  419b4f:	mov    bh,bl
  419b51:	pusha  
  419b52:	adc    DWORD PTR [eax],0xffffffeb
  419b55:	pop    ebx
  419b56:	add    BYTE PTR [esi-0x4e],bl
  419b59:	sbb    DWORD PTR ds:0x71615a00,eax
  419b5f:	mov    eax,0x1fe6754
  419b64:	xor    eax,eax
  419b66:	add    DWORD PTR [eax],eax
  419b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b69:	and    ch,BYTE PTR [eax+0x9]
  419b6c:	retf   0x8ab6
  419b6f:	xchg   BYTE PTR [edi+0xefffda7],ah
  419b75:	es adc eax,0x405ba704
  419b7b:	mov    DWORD PTR [ecx],eax
  419b7d:	rol    BYTE PTR [ecx],0x0
  419b80:	xchg   edi,eax
  419b81:	adc    DWORD PTR es:[eax],0x6b
  419b85:	pop    ebx
  419b86:	add    BYTE PTR [ebx+0x1b6d9],cl
  419b8c:	push   edi
  419b8d:	and    DWORD PTR ds:0x2,ecx
	...
  419bb7:	add    BYTE PTR [eax],al
  419bb9:	add    BYTE PTR [ebp+0x7788bf60],ah
  419bbf:	pop    esp
  419bc0:	mov    ds,WORD PTR [ebx+ebx*2]
  419bc3:	pop    ebx
  419bc4:	add    BYTE PTR [ebp+0x6e],dh
  419bc7:	and    al,BYTE PTR [ebx+0x5b5b10]
  419bcd:	mov    DWORD PTR [ecx+0x270001b7],ebp
  419bd3:	fwait
  419bd4:	mov    BYTE PTR [esi-0x24fc2],ch
  419bda:	and    DWORD PTR [esi+edi*2],edi
  419bdd:	cmovb  esi,DWORD PTR [ecx+eax*1-0x2434775]
  419be5:	dec    DWORD PTR [ecx]
  419be7:	cmp    esi,esp
  419be9:	add    esp,ebp
  419beb:	ss inc edx
  419bed:	xchg   DWORD PTR [esi-0x4d],ecx
  419bf0:	jae    0x419c0d
  419bf2:	cmp    dh,BYTE PTR [ecx+eax*1+0x7e394775]
  419bf9:	(bad)  
  419bfc:	add    DWORD PTR [ecx-0x24340],ecx
  419c02:	shl    esp,1
  419c04:	jp     0x419bb3
  419c06:	sub    bh,BYTE PTR [eax+0x3eb70001]
  419c0c:	hlt    
  419c0d:	add    edi,DWORD PTR [esi]
  419c0f:	mov    ah,0x78
  419c11:	test   DWORD PTR [esi-0x40],edx
  419c14:	add    DWORD PTR [eax],eax
  419c16:	mov    ah,0xbc
  419c18:	dec    eax
  419c1a:	mov    al,ds:0xd67773
	...
  419c47:	add    BYTE PTR [ebp+0x47],bl
  419c4a:	jl     0x419c53
  419c4c:	in     al,dx
  419c4d:	sub    BYTE PTR [esi],dh
  419c4f:	out    0x67,eax
  419c51:	mov    al,0x4
  419c53:	(bad)  
  419c54:	mov    ch,0x7d
  419c56:	jg     0x419c37
  419c58:	inc    edx
  419c59:	fs ja  0x419c29
  419c5c:	data16 clc 
  419c5e:	add    eax,0x343969fe
  419c63:	sbb    BYTE PTR [edi-0x4e],0xb2
  419c67:	mov    cl,BYTE PTR [eax+0x51fb448c]
  419c6d:	in     eax,0x80
  419c6f:	out    0x3f,al
  419c71:	inc    ebp
  419c72:	ja     0x419c41
  419c74:	push   esi
  419c75:	xor    BYTE PTR ds:0x465b39fe,al
  419c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c7c:	xchg   edx,eax
  419c7d:	cdq    
  419c7e:	out    dx,eax
  419c7f:	add    edi,DWORD PTR [ebp-0x4ffd696d]
  419c85:	inc    esi
  419c86:	jecxz  0x419c8b
  419c88:	fcom   DWORD PTR ds:[eax]
  419c8b:	sti    
  419c8c:	mov    al,BYTE PTR [edx+esi*2+0x7d]
  419c90:	cmp    DWORD PTR [edi-0x19],ebx
  419c93:	add    esi,DWORD PTR [edi-0x6003024]
  419c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c9b:	jp     0x419c40
  419c9d:	inc    esi
  419c9e:	jecxz  0x419ca3
  419ca0:	ds aam 0x6d
  419ca3:	repz cmp eax,0xc378e75b
  419ca9:	inc    edx
  419caa:	jmp    0x419caf
	...
  419cd4:	add    BYTE PTR [eax],al
  419cd6:	ds rcl edi,1
  419cd9:	add    esp,ebp
  419cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdc:	sub    DWORD PTR [ebx+0x31],edi
  419cdf:	pop    esp
  419ce0:	pop    ebp
  419ce1:	out    0x3d,eax
  419ce3:	pop    ebx
  419ce4:	out    0x8e,eax
  419ce6:	push   esi
  419ce7:	shl    BYTE PTR [ebp-0xd],cl
  419cea:	cmp    eax,0xbb7ae75b
  419cef:	inc    edx
  419cf0:	jecxz  0x419cf5
  419cf2:	sbb    esi,DWORD PTR ds:[eax+0x55]
  419cf6:	xor    eax,0xb703e75f
  419cfb:	(bad)  
  419cfd:	inc    DWORD PTR [ecx+0x517d62a5]
  419d03:	pop    edi
  419d04:	out    0x3,eax
  419d06:	les    ecx,FWORD PTR [edx-0x17]
  419d09:	aad    0x68
  419d0b:	cwde   
  419d0c:	pop    edi
  419d0d:	adc    al,0x61
  419d0f:	xlat   BYTE PTR ds:[ebx]
  419d10:	jmp    0x419d19
  419d12:	ds pop ebx
  419d14:	cmp    al,0x1d
  419d16:	(bad)  
  419d17:	(bad)  
  419d19:	pop    es
  419d1a:	ds pop ebx
  419d1c:	add    BYTE PTR [eax-0x4c],ah
  419d1f:	inc    edx
  419d20:	add    al,0xe9
  419d22:	cmp    eax,0x5e57871b
  419d27:	pop    edi
  419d28:	add    cl,ch
  419d2a:	mov    edx,0x3ded10dd
  419d2f:	pop    ebx
  419d30:	mov    DWORD PTR [edi+0x3a],esp
  419d33:	pop    edi
  419d34:	add    cl,ch
  419d36:	ret    
  419d37:	dec    ebx
  419d38:	add    bl,BYTE PTR [ebx+0x0]
	...
  419d62:	add    BYTE PTR [eax],al
  419d64:	cmp    al,0x98
  419d66:	mov    cl,bl
  419d68:	cmp    dl,ch
  419d6a:	sbb    al,0xe5
  419d6c:	cmp    eax,0xc100735b
  419d71:	fst    QWORD PTR [eax]
  419d73:	in     eax,0x3d
  419d75:	pop    ebx
  419d76:	xchg   DWORD PTR [edi+0x42],ebp
  419d79:	pop    edi
  419d7a:	add    cl,ch
  419d7c:	jge    0x419d5a
  419d7e:	scas   al,BYTE PTR es:[edi]
  419d7f:	in     eax,0x39
  419d81:	pop    ebx
  419d82:	add    BYTE PTR [eax-0x4c],dh
  419d85:	dec    ebx
  419d86:	add    al,0xe9
  419d88:	cmp    eax,0x41d186d2
  419d8d:	pop    ebx
  419d8e:	add    BYTE PTR [ecx],bh
  419d90:	pop    edx
  419d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d92:	mov    edi,ebp
  419d94:	inc    ecx
  419d95:	pop    ebx
  419d96:	add    BYTE PTR [edx+eax*2+0x41f986d2],bl
  419d9d:	pop    ebx
  419d9e:	add    BYTE PTR [eax-0x3c],dh
  419da1:	inc    ebx
  419da2:	add    al,0xe9
  419da4:	cmp    eax,0x5e47871b
  419da9:	pop    edi
  419daa:	add    cl,ch
  419dac:	retf   0x10dd
  419daf:	in     eax,dx
  419db0:	cmp    eax,0x4567895b
  419db5:	pop    edi
  419db6:	add    cl,ch
  419db8:	lea    edi,[ebx-0x1]
  419dbb:	pop    esi
  419dbc:	cmp    DWORD PTR [edi+0x0],ebx
  419dbf:	add    BYTE PTR [edi+0x23],ah
  419dc2:	adc    eax,0x447e18b
	...
  419def:	add    BYTE PTR [eax],al
  419df1:	add    BYTE PTR [edi-0x29],dl
  419df4:	xchg   BYTE PTR [eax],bl
  419df6:	and    ebx,DWORD PTR [eax+0x0]
  419df9:	inc    eax
  419dfa:	scas   al,BYTE PTR es:[edi]
  419dfb:	jmp    0x8685:0x5817041c
  419e02:	daa    
  419e03:	pop    esp
  419e04:	add    BYTE PTR [eax],al
  419e06:	pushf  
  419e07:	rcr    BYTE PTR [eax],cl
  419e09:	add    al,0x27
  419e0b:	pop    eax
  419e0c:	shl    BYTE PTR [eax],1
  419e0e:	push   ss
  419e0f:	retf   0x41c
  419e12:	pop    ss
  419e13:	pop    eax
  419e14:	jno    0x419e2f
  419e16:	pop    esp
  419e17:	rcl    BYTE PTR [eax],cl
  419e19:	add    al,0xe7
  419e1b:	push   edi
  419e1c:	test   DWORD PTR [esi+0x533f],eax
  419e22:	xchg   edi,eax
  419e23:	(bad)  
  419e24:	scas   al,BYTE PTR es:[edi]
  419e25:	sbb    al,0xe3
  419e27:	push   edi
  419e28:	add    BYTE PTR [ecx+0x44861],cl
  419e2e:	xlat   BYTE PTR ds:[ebx]
  419e2f:	aam    0xb6
  419e31:	sbb    bl,dl
  419e33:	push   edi
  419e34:	add    al,dl
  419e36:	inc    ecx
  419e37:	cmp    DWORD PTR [ecx-0x3e],ebx
  419e3a:	scas   eax,DWORD PTR es:[edi]
  419e3b:	push   edi
  419e3c:	xchg   DWORD PTR [ebx+eax*4+0x5b],eax
  419e40:	push   esi
  419e41:	push   edi
  419e42:	sbb    al,0x24
  419e44:	and    al,0x10
  419e46:	sbb    al,0xaf
  419e48:	cmp    DWORD PTR [eax+0x730057a7],eax
  419e4e:	imul   ebx,esp,0xfffffffb
  419e51:	add    al,0x4
  419e53:	inc    ecx
  419e54:	aaa    
  419e55:	xchg   BYTE PTR [eax],al
	...
  419e7f:	add    BYTE PTR [ebx+0x1300005b],al
  419e85:	add    esi,ebx
  419e87:	fdivr  DWORD PTR [edi+ebx*4]
  419e8a:	jg     0x419e6c
  419e8c:	ds mov ah,0x60
  419e8f:	cmp    DWORD PTR [esi-0x42],0xb246c25f
  419e96:	cmp    al,0x86
  419e98:	and    bh,BYTE PTR [esi-0x5135ffff]
  419e9e:	cmp    BYTE PTR ds:[esi],0xb4
  419ea2:	add    DWORD PTR [ecx+0x3b],esi
  419ea5:	xor    eax,0xa51502ef
  419eaa:	add    BYTE PTR ds:[ebx],bh
  419ead:	mov    ah,0x1
  419eaf:	jb     0x419ef0
  419eb1:	inc    ecx
  419eb2:	cmp    eax,0x1b49300
  419eb7:	jb     0x419ef8
  419eb9:	jno    0x419e7c
  419ebb:	call   0xc0c4e3f6
  419ec0:	cmp    eax,0xf426ec44
  419ec5:	cmp    edi,edi
  419ec7:	push   ebp
  419ec8:	mov    ch,0x72
  419eca:	mov    ebx,eax
  419ecc:	(bad)  
  419ecd:	test   al,0xfb
  419ecf:	std    
  419ed0:	fcos   
  419ed2:	inc    edi
  419ed3:	sbb    BYTE PTR [ebp+edi*8+0x60],al
  419ed7:	pop    esi
  419ed8:	cld    
  419ed9:	lods   al,BYTE PTR ds:[esi]
  419eda:	add    DWORD PTR [ebp-0x2a],edx
  419edd:	mov    eax,0xd1b9fdfb
  419ee2:	test   al,al
	...
  419f0c:	add    BYTE PTR [eax],al
  419f0e:	cmp    bl,BYTE PTR [edx-0x1ac1f73d]
  419f14:	mov    WORD PTR [edx+ebx*2-0x44],ds
  419f18:	push   esi
  419f19:	push   esi
  419f1a:	lds    eax,FWORD PTR [ebx-0x7d]
  419f1d:	mov    esi,0x1b066
  419f22:	ds leave 
  419f24:	adc    BYTE PTR [ebp+eiz*1-0x40fffe4d],al
  419f2b:	lods   eax,DWORD PTR ds:[esi]
  419f2c:	add    DWORD PTR [eax],0x74e75b3e
  419f32:	sub    esi,ebx
  419f34:	pop    ebx
  419f35:	sub    BYTE PTR [esi+0x57],al
  419f38:	pop    edx
  419f39:	ds pushw 0xffd2
  419f3d:	add    BYTE PTR [eax-0x2a],dl
  419f40:	mov    ch,0xeb
  419f42:	push   cs
  419f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f44:	mov    esi,0xbf91b400
  419f49:	std    
  419f4a:	xor    al,0xa2
  419f4c:	scas   al,BYTE PTR es:[edi]
  419f4d:	lea    edi,[edx+0x77]
  419f50:	dec    DWORD PTR [eax+edx*8+0x3e03e34a]
  419f57:	aad    0xa2
  419f59:	daa    
  419f5a:	sbb    DWORD PTR [eax+eiz*4+0x5],ebx
  419f5e:	rol    DWORD PTR [ecx],1
  419f60:	outs   dx,DWORD PTR ds:[esi]
  419f61:	add    eax,0x7d7d90b
  419f66:	ds pop ebx
  419f68:	pusha  
  419f69:	mov    eax,ds:0x3e75722
  419f6e:	nop
  419f6f:	add    dl,al
  419f71:	lds    eax,FWORD PTR [eax]
	...
  419f9b:	add    BYTE PTR [esi],dh
  419f9d:	pop    ebx
  419f9e:	push   0xffffffd0
  419fa0:	jecxz  0x419ffd
  419fa2:	xchg   ebp,eax
  419fa3:	pop    ds
  419fa4:	inc    edx
  419fa5:	pop    ebx
  419fa6:	out    0x8e,eax
  419fa8:	arpl   WORD PTR [esp+edi*4+0x1a],dx
  419fac:	mov    bh,0xd8
  419fae:	xlat   BYTE PTR ds:[ebx]
  419faf:	pop    es
  419fb0:	ds pop ebx
  419fb2:	pusha  
  419fb3:	mov    DWORD PTR [esi+0x57],edx
  419fb6:	out    0x3,eax
  419fb8:	(bad)  
  419fb9:	rcl    DWORD PTR [ebp+0x1f],cl
  419fbc:	inc    edx
  419fbd:	pop    ebx
  419fbe:	out    0x8a,eax
  419fc0:	mov    eax,0x3e03eb4a
  419fc5:	(bad)  
  419fc6:	sbb    edi,DWORD PTR gs:[edx]
  419fc9:	pop    ebx
  419fca:	out    0x8d,eax
  419fcc:	ss pop ebp
  419fce:	xor    BYTE PTR [ecx],al
  419fd0:	jle    0x419fa4
  419fd2:	add    cl,ah
  419fd4:	cmp    al,0xe1
  419fd6:	sbb    al,0xe5
  419fd8:	cmp    eax,0xb500735b
  419fdd:	fcom   DWORD PTR [eax]
  419fdf:	in     eax,0x3d
  419fe1:	pop    ebx
  419fe2:	xchg   DWORD PTR [edi+0x3a],ebp
  419fe5:	push   edi
  419fe6:	add    cl,ch
  419fe8:	std    
  419fe9:	fldcw  WORD PTR [esi+0x5b41e5]
  419fef:	jo     0x419fa9
  419ff1:	dec    edx
  419ff2:	add    al,0xe9
  419ff4:	cmp    eax,0x39d186d2
  419ff9:	pop    ebx
  419ffa:	add    BYTE PTR [ecx-0x572e2d9e],bh
	...
  41a028:	add    BYTE PTR [eax],al
  41a02a:	adc    al,0x54
  41a02c:	sub    DWORD PTR [ebx-0x6076f2c4],0x86fa9922
  41a036:	or     ebx,edx
  41a038:	xchg   cl,bl
  41a03a:	cmp    DWORD PTR [ebx+0x0],ebx
  41a03d:	popa   
  41a03e:	pop    edx
  41a03f:	jecxz  0x41a040
  41a041:	call   0x6f40fb83
  41a046:	push   edx
  41a047:	push   edi
  41a048:	add    cl,ch
  41a04a:	mov    dl,0xc1
  41a04c:	and    al,0xed
  41a04e:	cmp    eax,0xba527f5b
  41a053:	pop    ebx
  41a054:	add    cl,ch
  41a056:	dec    esp
  41a057:	inc    ebx
  41a058:	or     ebp,0x62024319
  41a05e:	push   cs
  41a05f:	ja     0x41a079
  41a061:	cwde   
  41a062:	les    edx,FWORD PTR [ecx-0x615b8118]
  41a068:	std    
  41a069:	mov    esi,0x2b590403
  41a06e:	dec    edx
  41a06f:	pop    ebx
  41a070:	jg     0x41a084
  41a072:	cmp    bl,BYTE PTR [eax+eax*1+0x0]
  41a076:	xchg   edi,eax
  41a077:	sub    al,BYTE PTR [ecx+ebp*1]
  41a07a:	fstp   TBYTE PTR [eax+0x18]
  41a07d:	sub    DWORD PTR [esp+ebx*2+0x79],0x42a6700
  41a085:	sub    DWORD PTR [ebx],ebx
  41a087:	jae    0x41a0a1
  41a089:	mov    edx,DWORD PTR [ebx]
  41a08b:	jae    0x41a0a5
  41a08d:	push   ecx
	...
  41a0b6:	add    BYTE PTR [eax],al
  41a0b8:	fmul   QWORD PTR [ebp-0x5e929318]
  41a0be:	sti    
  41a0bf:	pop    edi
  41a0c0:	and    DWORD PTR [edx],edi
  41a0c2:	push   edi
  41a0c3:	ret    0x5c4f
  41a0c6:	ret    
  41a0c7:	xchg   BYTE PTR [edi],bh
  41a0c9:	push   ebx
  41a0ca:	add    BYTE PTR [eax],al
  41a0cc:	es pop esp
  41a0ce:	add    BYTE PTR [eax],al
  41a0d0:	xchg   esi,eax
  41a0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d2:	add    BYTE PTR [eax],0x17
  41a0d5:	pop    esp
  41a0d6:	outs   dx,DWORD PTR ds:[esi]
  41a0d7:	dec    ecx
  41a0d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d9:	and    BYTE PTR [eax+ebx*1],ah
  41a0dc:	sbb    ebp,DWORD PTR ds:0x78a13b42
  41a0e2:	add    al,0x0
  41a0e4:	pop    ss
  41a0e5:	sub    BYTE PTR [edx],bh
  41a0e7:	call   0x3d42c9
  41a0ec:	pop    esp
  41a0ed:	mov    gs,eax
  41a0ef:	add    ebx,DWORD PTR [ebp-0x5f]
  41a0f2:	sti    
  41a0f3:	mov    edx,DWORD PTR [ecx]
  41a0f5:	mov    ah,0xc9
  41a0f7:	stc    
  41a0f8:	jo     0x41a09b
  41a0fa:	mov    al,BYTE PTR [ebx+edi*1+0x3f]
  41a0fe:	xchg   DWORD PTR [esi+0x57e7],ecx
  41a104:	dec    ebp
  41a105:	lea    esp,[ecx+eax*1]
  41a108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a109:	mov    DWORD PTR [edx],eax
  41a10b:	ret    0xd3c0
  41a10e:	std    
  41a10f:	(bad)  
  41a110:	sbb    DWORD PTR [esp+eax*1+0x0],ecx
  41a114:	xchg   edi,eax
  41a115:	into   
  41a116:	sahf   
  41a117:	and    al,0x3e
  41a119:	scas   al,BYTE PTR es:[edi]
  41a11a:	add    DWORD PTR [eax],eax
	...
  41a144:	add    BYTE PTR [eax],al
  41a146:	lock out dx,al
  41a148:	pop    edx
  41a149:	ret    0xb236
  41a14c:	or     ch,0x81
  41a14f:	mov    dl,0xbb
  41a151:	sbb    al,0x42
  41a153:	mov    dl,0x1
  41a155:	mov    esp,ecx
  41a157:	mov    edx,0x2fb51778
  41a15c:	adc    al,0x4
  41a15e:	ds mov dl,0x8a
  41a161:	xchg   BYTE PTR [esi],dh
  41a163:	scas   al,BYTE PTR es:[edi]
  41a164:	add    DWORD PTR [eax],eax
  41a166:	(bad)  
  41a167:	cmp    ch,BYTE PTR [esi+0x1b2421c]
  41a16d:	xchg   DWORD PTR [eax+0x3e000581],edi
  41a173:	cmp    DWORD PTR [esi+0x1b43a18],eax
  41a179:	mov    cl,BYTE PTR [esi-0x4e]
  41a17c:	iret   
  41a17d:	(bad)  
  41a17e:	cld    
  41a17f:	sub    al,0x14
  41a181:	(bad)  
  41a182:	fld    TBYTE PTR [eax+0x473e0005]
  41a188:	sbb    DWORD PTR [ecx+0x584c0],ecx
  41a18e:	sub    eax,DWORD PTR ds:[esi+0x1b44218]
  41a195:	inc    eax
  41a196:	(bad)  
  41a197:	pop    esi
  41a198:	and    BYTE PTR [esi+edi*1],al
  41a19b:	mov    ah,0x8a
  41a19d:	xchg   BYTE PTR [esi-0x48],cl
  41a1a0:	add    DWORD PTR [eax],eax
  41a1a2:	lds    ebp,FWORD PTR [esi]
  41a1a4:	sbb    al,0x4
  41a1a6:	ds mov ah,0xd1
  41a1a9:	and    BYTE PTR [eax],al
	...
  41a1d3:	add    BYTE PTR ds:0x3e042836,al
  41a1d9:	mov    ah,0x75
  41a1db:	jb     0x41a1a2
  41a1dd:	jno    0x41a1a0
  41a1df:	call   0x205d32a
  41a1e4:	push   cs
  41a1e5:	pop    ebx
  41a1e6:	setbe  BYTE PTR [ecx-0x3776e162]
  41a1ed:	dec    ebx
  41a1ee:	jmp    0x41a1f3
  41a1f0:	ds shl eax,cl
  41a1f3:	mov    ebx,0x3e79e89
  41a1f8:	sbb    eax,0x5b3e07d7
  41a1fe:	pusha  
  41a1ff:	sahf   
  41a200:	sbb    dl,BYTE PTR [edi-0x19]
  41a203:	add    ebp,ecx
  41a205:	mov    eax,ds:0x5b3e0367
  41a20a:	pop    edx
  41a20b:	sbb    al,0xbf
  41a20d:	das    
  41a20e:	or     ebx,DWORD PTR [esp+edi*1]
  41a211:	shl    BYTE PTR [ebx],cl
  41a213:	sub    BYTE PTR [esi],ah
  41a215:	or     DWORD PTR [edx-0x33],esi
  41a218:	push   esi
  41a219:	aaa    
  41a21a:	sar    ah,0x3b
  41a21d:	(bad)  
  41a21e:	adc    al,0x5f
  41a220:	xchg   edi,eax
  41a221:	cdq    
  41a222:	fild   WORD PTR [ebx]
  41a224:	test   eax,0x3e06e7a2
  41a229:	pop    ebx
  41a22a:	sbb    DWORD PTR [eax],ecx
  41a22c:	popa   
  41a22d:	pop    ss
  41a22e:	retf   
  41a22f:	sbb    edx,DWORD PTR [ecx+0x3e7ee7a2]
  41a235:	pop    ebx
  41a236:	stc    
  41a237:	push   0x0
	...
  41a261:	add    BYTE PTR [ecx+0x17],bl
  41a264:	ret    
  41a265:	sbb    eax,edi
  41a267:	push   es
  41a268:	retf   
  41a269:	sbb    ecx,DWORD PTR [edx+edx*8-0x5bce1463]
  41a270:	data16 cld 
  41a272:	cmp    ebp,0xffffffbb
  41a275:	pop    eax
  41a276:	cld    
  41a277:	push   edx
  41a278:	out    0x2,eax
  41a27a:	nop
  41a27b:	ds jecxz 0x41a281
  41a27e:	ds sub al,ah
  41a281:	mov    BYTE PTR [eax+0x3e03e34a],bh
  41a287:	aam    0x0
  41a289:	outs   dx,DWORD PTR ds:[esi]
  41a28a:	push   ebp
  41a28b:	push   edi
  41a28c:	add    cl,ch
  41a28e:	std    
  41a28f:	aad    0xae
  41a291:	add    eax,0x70005b36
  41a296:	ret    
  41a297:	dec    edx
  41a298:	add    al,0xe9
  41a29a:	cmp    eax,0x41f186d4
  41a29f:	pop    ebx
  41a2a0:	add    BYTE PTR [ecx],bl
  41a2a2:	pop    ebp
  41a2a3:	sahf   
  41a2a4:	mov    ebx,0x5b41dd
  41a2a9:	jl     0x41a2ff
  41a2ab:	aam    0x86
  41a2ad:	fld    DWORD PTR [ecx+0x5b]
  41a2b0:	add    BYTE PTR [eax-0x44],dh
  41a2b3:	inc    edx
  41a2b4:	add    al,0xe9
  41a2b6:	cmp    eax,0x3687871b
  41a2bb:	push   edi
  41a2bc:	add    cl,ch
  41a2be:	mov    edx,0x3ded10d4
  41a2c3:	pop    ebx
  41a2c4:	mov    DWORD PTR [edi+0x0],esp
	...
  41a2ef:	add    BYTE PTR [edx+0x57],bl
  41a2f2:	add    cl,ch
  41a2f4:	or     eax,0x5e15897c
  41a2f9:	inc    ebx
  41a2fa:	push   edx
  41a2fb:	jb     0x41a2f1
  41a2fd:	mov    bl,0xd4
  41a2ff:	mov    eax,ds:0x375d9f15
  41a304:	ja     0x41a308
  41a306:	ret    0x3de1
  41a309:	rol    BYTE PTR [ebp+ecx*8+0x1],cl
  41a30d:	rcl    BYTE PTR [eax-0x2639a17],cl
  41a313:	mov    dl,0xca
  41a315:	push   edi
  41a316:	add    al,0xe9
  41a318:	cmp    eax,0xb3721725
  41a31d:	dec    edi
  41a31e:	add    al,0xe9
  41a320:	cmp    eax,0x3edfbf62
  41a325:	jb     0x41a2e6
  41a327:	sub    edi,DWORD PTR [esi]
  41a329:	pop    ebx
  41a32a:	sub    DWORD PTR [eax],eax
  41a32c:	push   ss
  41a32d:	pop    edx
  41a32e:	add    BYTE PTR [eax-0x5a],ch
  41a331:	pop    eax
  41a332:	ret    0xa704
  41a335:	gs rol dl,0xa3
  41a339:	pop    eax
  41a33a:	jg     0x41a328
  41a33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a33d:	add    eax,0x3ccb8b51
  41a342:	and    BYTE PTR [esi+0x74],dl
  41a345:	jge    0x41a2ce
  41a347:	icebp  
  41a348:	ror    bh,1
  41a34a:	pop    esp
  41a34b:	and    al,0x67
  41a34d:	iret   
  41a34e:	pop    esp
  41a34f:	and    al,0x5f
  41a351:	pop    edi
  41a352:	scas   al,BYTE PTR es:[edi]
  41a353:	or     BYTE PTR [eax],al
	...
  41a37d:	add    BYTE PTR [ebx+0x58],ah
  41a380:	add    BYTE PTR [edi],cl
  41a382:	aam    0xf3
  41a384:	add    BYTE PTR [eax],al
  41a386:	push   edi
  41a387:	lods   eax,DWORD PTR ds:[esi]
  41a388:	pop    es
  41a389:	(bad)  
  41a38a:	ret    
  41a38b:	cmp    al,0x0
  41a38d:	add    BYTE PTR [edi+0x58],ah
  41a390:	mov    DWORD PTR [ebx+eax*2+0x57],esp
  41a394:	xchg   DWORD PTR [esi-0x263ad],eax
  41a39a:	stos   BYTE PTR es:[edi],al
  41a39b:	rol    BYTE PTR [eax],1
  41a39d:	push   0xc8375826
  41a3a2:	jno    0x41a3ec
  41a3a4:	xchg   DWORD PTR [esi-0x263d5],ecx
  41a3aa:	sbb    al,0x97
  41a3ac:	jbe    0x41a3b2
  41a3ae:	cld    
  41a3af:	xchg   esi,eax
  41a3b0:	out    0xb,eax
  41a3b2:	cld    
  41a3b3:	xchg   esi,eax
  41a3b4:	add    DWORD PTR [eax],eax
  41a3b6:	das    
  41a3b7:	push   esi
  41a3b8:	add    bl,ch
  41a3ba:	in     eax,0x64
  41a3bc:	ror    BYTE PTR [ebx+0x45059],0xd7
  41a3c3:	push   eax
  41a3c4:	mov    dh,0x11
  41a3c6:	call   0x4c42e9b4
  41a3cb:	or     al,0x96
  41a3cd:	add    al,0x3e
  41a3cf:	cmp    DWORD PTR ds:0x8b4bb58a,eax
  41a3d5:	or     al,0xb9
  41a3d7:	sub    BYTE PTR [edi+0x8],bh
  41a3da:	inc    edx
  41a3db:	mov    dl,0x1
  41a3dd:	or     eax,0xb60a81e8
	...
  41a40a:	add    BYTE PTR [eax],al
  41a40c:	(bad)  
  41a40d:	mov    dl,0x8e
  41a40f:	dec    esp
  41a410:	enter  0x8ead,0x96
  41a414:	inc    edx
  41a415:	mov    dh,0x1
  41a417:	add    bh,al
  41a419:	popf   
  41a41a:	test   BYTE PTR [edi+0x1b23f],dh
  41a420:	aas    
  41a421:	and    al,0xfd
  41a423:	add    edi,DWORD PTR [esi]
  41a425:	mov    dl,0x4
  41a427:	mov    es,WORD PTR [esi-0x52]
  41a42a:	add    DWORD PTR [eax],eax
  41a42c:	mov    ch,0x33
  41a42e:	std    
  41a42f:	add    edi,DWORD PTR [esi]
  41a431:	mov    dl,0x8c
  41a433:	enter  0x2c25,0x8
  41a437:	add    al,0x3e
  41a439:	mov    dl,0x82
  41a43b:	idiv   DWORD PTR [esi]
  41a43d:	sbb    al,BYTE PTR [ecx]
  41a43f:	add    al,cl
  41a441:	lods   al,BYTE PTR ds:[esi]
  41a442:	dec    ecx
  41a443:	xchg   eax,eax
  41a445:	mov    ch,bh
  41a447:	push   DWORD PTR [ecx]
  41a449:	mov    WORD PTR [edi+0x1844208],fs
  41a44f:	or     eax,0xfdf76ebc
  41a454:	sbb    DWORD PTR [esi],ecx
  41a456:	inc    eax
  41a457:	and    al,0x4e
  41a459:	cs add al,0x65
  41a45c:	aas    
  41a45d:	test   BYTE PTR [edx+eax*8],bh
  41a460:	mov    BYTE PTR [edx-0x2bddab76],cl
  41a466:	in     al,dx
  41a467:	pop    es
  41a468:	mov    ebp,0xc00d010c
  41a46d:	mov    esi,0x1
	...
  41a49a:	ds pop ebx
  41a49c:	div    BYTE PTR [ecx-0x4e11a483]
  41a4a2:	test   DWORD PTR [edx+eiz*2+0x40],ebx
  41a4a6:	rcr    BYTE PTR [edi+0x62],0x38
  41a4aa:	mov    dh,0x56
  41a4ac:	inc    edx
  41a4ad:	or     edx,eax
  41a4af:	into   
  41a4b0:	call   0x6627e2b8
  41a4b5:	and    al,0x42
  41a4b7:	pop    ebx
  41a4b8:	out    0x86,eax
  41a4ba:	cmp    ch,BYTE PTR [edx+0x2e]
  41a4bd:	inc    eax
  41a4be:	bound  esi,QWORD PTR [edi-0x19]
  41a4c1:	or     edi,DWORD PTR [esi]
  41a4c3:	pop    ebx
  41a4c4:	sar    BYTE PTR [esi-0x69daaf4],cl
  41a4ca:	inc    edi
  41a4cb:	xchg   esi,eax
  41a4cc:	jnp    0x41a4fd
  41a4ce:	(bad)
  41a4d1:	imul   esi,DWORD PTR [ecx-0x66],0xffffffb2
  41a4d5:	add    DWORD PTR [edx+0x5f],0x72e803e7
  41a4dc:	jb     0x41a45f
  41a4de:	dec    edx
  41a4df:	pop    edi
  41a4e0:	out    0x3,eax
  41a4e2:	pop    ss
  41a4e3:	xchg   ebx,eax
  41a4e4:	pop    ebp
  41a4e5:	add    BYTE PTR [edi],dl
  41a4e7:	xchg   ebx,eax
  41a4e8:	ret    0x1707
  41a4eb:	xchg   ebx,eax
  41a4ec:	push   0xe8033ec0
  41a4f1:	add    esp,DWORD PTR [edi]
  41a4f3:	pop    ebp
  41a4f4:	cli    
  41a4f5:	clc    
  41a4f6:	mov    bh,0x60
  41a4f8:	bound  esi,QWORD PTR [edi]
  41a4fa:	out    0xe7,al
  41a4fc:	jmp    0x41a506
	...
  41a526:	add    BYTE PTR [eax],al
  41a528:	push   edi
  41a529:	mov    al,ds:0x2f49cc1a
  41a52e:	retf   
  41a52f:	daa    
  41a530:	nop
  41a531:	pop    edi
  41a532:	pusha  
  41a533:	dec    edi
  41a534:	pop    edx
  41a535:	inc    edi
  41a536:	ret    0x4bfc
  41a539:	fistp  WORD PTR [ecx]
  41a53b:	add    edi,DWORD PTR [esi]
  41a53d:	pop    ebx
  41a53e:	add    BYTE PTR [edx+ecx*8+0x5a],ah
  41a542:	add    cl,ch
  41a544:	cmp    eax,0xa12cbe4
  41a549:	loop   0x41a597
  41a54b:	add    eax,0xd4c542e
  41a550:	push   ss
  41a551:	push   0x5b3d1385
  41a556:	add    BYTE PTR [edx+0x1],dh
  41a559:	aas    
  41a55a:	adc    BYTE PTR [ebx+0x41],dh
  41a55d:	call   0x9d89:0x5b409d37
  41a564:	inc    ecx
  41a565:	outs   dx,DWORD PTR ds:[esi]
  41a566:	mov    ecx,0x5b3deb
  41a56b:	xchg   ebp,eax
  41a56c:	cmp    DWORD PTR [esi+ecx*4-0x33],edx
  41a570:	mov    DWORD PTR [ecx-0x5aff2103],ebx
  41a576:	add    cl,ch
  41a578:	cmp    eax,0x2dc554e4
  41a57d:	push   esp
  41a57e:	fidivr DWORD PTR [edx+0x1c]
  41a581:	out    0x4b,al
  41a583:	jmp    0x41a537
  41a585:	sub    BYTE PTR [ecx],0x55
  41a588:	push   ds
  41a589:	inc    ebx
  41a58a:	mov    ah,BYTE PTR ds:0x0
	...
  41a5b4:	add    BYTE PTR [eax],al
  41a5b6:	inc    edi
  41a5b7:	pop    ebx
  41a5b8:	cmp    ch,al
  41a5ba:	into   
  41a5bb:	pusha  
  41a5bc:	inc    ecx
  41a5bd:	sub    BYTE PTR ds:0xc5bb72b5,al
  41a5c3:	daa    
  41a5c4:	and    al,0xd5
  41a5c6:	les    eax,FWORD PTR [edi]
  41a5c8:	and    al,0x1
  41a5ca:	gs mov ch,0xd
  41a5cd:	sbb    ebx,DWORD PTR gs:[eax+eax*1-0x17]
  41a5d2:	push   esp
  41a5d3:	aaa    
  41a5d4:	and    al,0xf9
  41a5d6:	mov    ds:0xb538511e,eax
  41a5db:	test   eax,0x97045be8
  41a5e0:	std    
  41a5e1:	add    BYTE PTR [ebx+eiz*1+0x24],ch
  41a5e5:	adc    BYTE PTR [ebx+ebp*1+0x24],ch
  41a5e9:	sbb    BYTE PTR [esi+0x2d],al
  41a5ec:	xchg   esi,ecx
  41a5ee:	pop    esp
  41a5ef:	xchg   eax,ebp
  41a5f1:	lahf   
  41a5f2:	pop    ebp
  41a5f3:	nop
  41a5f4:	sti    
  41a5f5:	sub    ebp,DWORD PTR [edi-0x1c]
  41a5f8:	dec    esp
  41a5f9:	and    al,0xcb
  41a5fb:	pop    ebp
  41a5fc:	jmp    0xc4c246b9
  41a601:	dec    esi
  41a602:	js     0x41a586
  41a604:	xchg   DWORD PTR [ebx+edi*1+0x47],ebp
  41a608:	mov    ebp,0xc2e595fa
  41a60d:	sar    edi,0x6f
  41a610:	inc    ecx
  41a612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a613:	pop    eax
  41a614:	and    al,0x10
  41a616:	pushf  
  41a617:	mov    ah,0x76
  41a619:	push   es
	...
  41a642:	add    BYTE PTR [eax],al
  41a644:	push   ds
  41a645:	and    esp,DWORD PTR [eax+ebx*1]
  41a648:	cmp    al,0x25
  41a64a:	aaa    
  41a64b:	mov    cs,WORD PTR [ebx-0x15000268]
  41a651:	push   ebp
  41a652:	dec    edi
  41a653:	push   ecx
  41a654:	fsub   QWORD PTR [eax-0x6e929c18]
  41a65a:	sti    
  41a65b:	mov    ebx,DWORD PTR [ebx]
  41a65d:	cmp    edx,DWORD PTR [eax]
  41a65f:	mov    ebp,DWORD PTR [edi-0x1b]
  41a662:	inc    esp
  41a663:	and    al,0x4f
  41a665:	sub    dl,BYTE PTR [eax-0x75]
  41a668:	mov    eax,ds:0xfa5084
  41a66d:	xchg   ecx,eax
  41a66e:	xchg   eax,ecx
  41a670:	dec    esp
  41a671:	mov    ds:0x473b6c87,al
  41a676:	mov    eax,0x2ac1bdab
  41a67b:	imul   DWORD PTR [esi-0x513e351c]
  41a681:	jo     0x41a682
  41a683:	leave  
  41a684:	ds test edx,ecx
  41a687:	cmp    DWORD PTR [edx-0x62],esi
  41a68a:	adc    DWORD PTR [edx+0x4a],esi
  41a68d:	or     eax,0xb4a244d
  41a692:	dec    ebp
  41a693:	and    al,0x46
  41a695:	sti    
  41a696:	push   esp
  41a697:	and    al,0x4e
  41a699:	aaa    
  41a69a:	jle    0x41a69c
  41a69c:	add    WORD PTR [ecx],0x39
  41a6a0:	mov    eax,0xc9fffd7d
  41a6a5:	mov    bh,0x19
  41a6a7:	mov    DWORD PTR [eax],eax
	...
  41a6d1:	add    BYTE PTR [eax-0x4600024b],bh
  41a6d7:	pop    esp
  41a6d8:	cld    
  41a6d9:	jbe    0x41a715
  41a6db:	ins    DWORD PTR es:[edi],dx
  41a6dc:	cld    
  41a6dd:	jmp    0x803e041c
  41a6e2:	jns    0x41a665
  41a6e4:	imul   edi,edi,0x30ff6c99
  41a6ea:	xchg   ecx,eax
  41a6eb:	or     al,0x3
  41a6ed:	mov    DWORD PTR [edx+0x2b],ecx
  41a6f0:	mov    al,BYTE PTR [esi+0x17e5e]
  41a6f6:	cmp    eax,0x1a6c8249
  41a6fb:	mov    dh,0x4
  41a6fd:	je     0x41a74b
  41a6ff:	pop    es
  41a700:	test   BYTE PTR ds:0xfdf347bb,0x59
  41a707:	lods   al,BYTE PTR ds:[esi]
  41a708:	or     al,0x87
  41a70a:	add    bl,BYTE PTR [esi+0x1c]
  41a70d:	xchg   edx,ebp
  41a70f:	gs adc al,0x89
  41a712:	cli    
  41a713:	pop    ebp
  41a714:	and    BYTE PTR [ecx-0x76eb976e],cl
  41a71a:	and    BYTE PTR [eax+0x1c],0x5d
  41a71e:	mov    BYTE PTR [edi-0x77],ch
  41a721:	push   eax
  41a722:	cmp    bh,bl
  41a724:	or     ebx,DWORD PTR [ecx-0x43]
  41a727:	pop    ebx
  41a728:	stos   DWORD PTR es:[edi],eax
  41a729:	adc    al,0xfc
  41a72b:	imul   esp,edi,0xffffff80
  41a72e:	sbb    dl,BYTE PTR [edx+ebp*2+0x78]
  41a732:	pop    edx
  41a733:	pop    ds
  41a734:	out    0x4d,eax
	...
  41a75e:	add    BYTE PTR [eax],al
  41a760:	(bad)  
  41a761:	mov    esp,?
  41a763:	or     ch,BYTE PTR [edi]
  41a765:	fwait
  41a766:	sbb    eax,0xa9540281
  41a76b:	sbb    al,0x3e
  41a76d:	loop   0x41a792
  41a76f:	and    BYTE PTR [esi-0x20],bh
  41a772:	daa    
  41a773:	outs   dx,DWORD PTR ds:[esi]
  41a774:	inc    esp
  41a775:	fisubr DWORD PTR [edi]
  41a777:	cmc    
  41a778:	push   0xfc3c2bda
  41a77d:	jae    0x41a766
  41a77f:	mov    BYTE PTR [edx],cl
  41a781:	aas    
  41a782:	stos   DWORD PTR es:[edi],eax
  41a783:	jle    0x41a7fe
  41a785:	cmovge ecx,DWORD PTR [ecx+0x7ea33f12]
  41a78c:	mov    WORD PTR [edi],cs
  41a78e:	inc    ebp
  41a78f:	mov    eax,eax
  41a791:	outs   dx,DWORD PTR ds:[esi]
  41a792:	jmp    0x41a797
  41a794:	and    esi,DWORD PTR ds:[eax+0x7e]
  41a798:	pop    esi
  41a799:	pop    edi
  41a79a:	out    0x3,eax
  41a79c:	mov    ecx,0x79fff7e5
  41a7a1:	xchg   esi,eax
  41a7a2:	aas    
  41a7a3:	out    0x77,al
  41a7a5:	test   DWORD PTR [edx+0x31],edx
  41a7a8:	sub    DWORD PTR [esi],0x5ba9ade6
  41a7ae:	mov    bh,0x42
  41a7b0:	lods   al,BYTE PTR ds:[esi]
  41a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b3:	xor    BYTE PTR [ebx+0x66],bh
  41a7b6:	xchg   ebp,eax
  41a7b7:	mov    edx,0x4284649
  41a7bc:	jno    0x41a759
  41a7be:	sbb    bh,BYTE PTR [ebp+0x180cd4b]
	...
  41a7ec:	add    BYTE PTR [eax],al
  41a7ee:	outs   dx,BYTE PTR ds:[esi]
  41a7ef:	sbb    al,0xe7
  41a7f1:	sar    dh,cl
  41a7f3:	dec    ecx
  41a7f4:	add    BYTE PTR [esi-0x154832c6],ch
  41a7fa:	dec    ebp
  41a7fb:	push   esi
  41a7fc:	add    BYTE PTR [eax-0x1a402403],bh
  41a802:	dec    esi
  41a803:	mov    al,ds:0x963d907f
  41a808:	std    
  41a809:	jmp    0xa9c5467d
  41a80e:	cmp    bl,dl
  41a810:	mov    ecx,0x515b3df0
  41a815:	pusha  
  41a816:	xor    esp,edx
  41a818:	dec    esi
  41a819:	in     eax,0xbc
  41a81b:	cwde   
  41a81c:	sbb    BYTE PTR [ecx-0x16416a30],cl
  41a822:	cmp    al,0x5b
  41a824:	add    BYTE PTR [ebp+eiz*2-0x6a],ah
  41a828:	push   esp
  41a829:	pusha  
  41a82a:	dec    esp
  41a82b:	dec    esp
  41a82c:	shr    ah,0x3d
  41a82f:	pop    ebx
  41a830:	add    cl,ch
  41a832:	mov    dh,0x3d
  41a834:	lds    ebp,FWORD PTR [ebp-0x16026a60]
  41a83a:	cmp    eax,0x9129815b
  41a83f:	push   eax
  41a840:	add    ch,ah
  41a842:	cmp    eax,0xbc05725b
  41a847:	cwde   
  41a848:	add    ch,ah
  41a84a:	cmp    eax,0x7128815b
  41a84f:	inc    edx
  41a850:	stc    
  41a851:	je     0x41a853
	...
  41a87b:	add    BYTE PTR [ebx-0x1d],bh
  41a87e:	mov    ds,ebp
  41a880:	popa   
  41a881:	xchg   ebp,eax
  41a882:	std    
  41a883:	bound  ecx,QWORD PTR [ebx-0x24]
  41a886:	enter  0xd3e6,0xdc
  41a88a:	and    al,0xe5
  41a88c:	cmp    eax,0x4267875b
  41a891:	pop    ecx
  41a892:	add    cl,ch
  41a894:	mov    edx,0x230004f5
  41a899:	pop    ecx
  41a89a:	add    BYTE PTR [ecx+0x45ba9],cl
  41a8a0:	pop    ss
  41a8a1:	sbb    BYTE PTR [edx],bh
  41a8a3:	mov    edi,DWORD PTR [ecx+0x73]
  41a8a6:	add    al,0x0
  41a8a8:	daa    
  41a8a9:	push   ss
  41a8aa:	xchg   esi,eax
  41a8ab:	adc    BYTE PTR [ebx],ah
  41a8ad:	pop    ecx
  41a8ae:	add    BYTE PTR [ecx+0x47769],cl
  41a8b4:	out    0x16,eax
  41a8b6:	add    eax,0x1c432389
  41a8bb:	mov    esp,DWORD PTR [ebx]
  41a8bd:	inc    ebx
  41a8be:	push   esp
  41a8bf:	mov    ch,bl
  41a8c1:	pop    edi
  41a8c2:	sahf   
  41a8c3:	adc    al,0xe3
  41a8c5:	pop    eax
  41a8c6:	add    BYTE PTR [ecx],al
  41a8c8:	mov    ecx,0xd700046f
  41a8cd:	push   eax
  41a8ce:	test   DWORD PTR [ebx+esi*1+0x6f],edi
  41a8d2:	test   DWORD PTR [ebx+eax*2+0x67],edi
  41a8d6:	test   DWORD PTR [esi+0x5c9b],ebx
  41a8dc:	sub    esp,DWORD PTR cs:[eax+ebx*2]
	...
  41a908:	add    BYTE PTR [eax],al
  41a90a:	lods   al,BYTE PTR ds:[esi]
  41a90b:	popf   
  41a90c:	or     eax,DWORD PTR [esi+0x6054]
  41a912:	or     ah,ah
  41a914:	add    BYTE PTR [eax],al
  41a916:	xchg   edi,eax
  41a917:	pop    eax
  41a918:	xchg   DWORD PTR [ebx+esi*2+0x24],eax
  41a91c:	add    eax,0x4c8746d3
  41a922:	and    DWORD PTR [eax+0x3d],0xffffff89
  41a926:	fwait
  41a927:	cmp    al,0x18
  41a929:	test   BYTE PTR [esi],bl
  41a92b:	adc    ch,BYTE PTR [ecx]
  41a92d:	mov    esi,DWORD PTR [ebx-0x36749fc4]
  41a933:	addr16 add al,0x0
  41a936:	push   edi
  41a937:	jne    0x41a985
  41a939:	and    al,0x3e
  41a93b:	push   edx
  41a93c:	push   esi
  41a93d:	mov    eax,edx
  41a93f:	lea    eax,ds:0x58693e00
  41a945:	and    al,0x8e
  41a947:	jae    0x41a9c6
  41a949:	dec    esp
  41a94a:	pop    edx
  41a94b:	outs   dx,BYTE PTR ds:[esi]
  41a94c:	push   esi
  41a94d:	dec    edi
  41a94e:	sbb    edx,esi
  41a950:	xchg   ah,al
  41a952:	cs pop es
  41a954:	ror    DWORD PTR ds:0x96ec2,0x3e
  41a95b:	test   eax,0x6f5a244d
  41a960:	push   ss
  41a961:	mov    DWORD PTR [edx-0x5a],esp
  41a964:	inc    ebp
  41a965:	mov    DWORD PTR [edx+0x5287419e],edx
  41a96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96c:	sbb    eax,0x87
	...
  41a995:	add    BYTE PTR [eax],al
  41a997:	add    BYTE PTR [edx-0x62],dh
  41a99a:	sbb    ecx,ebp
  41a99c:	xor    DWORD PTR [ecx],ecx
  41a99e:	inc    ebp
  41a99f:	and    al,0x72
  41a9a1:	or     DWORD PTR [edi+0x14],edi
  41a9a4:	cmp    al,BYTE PTR [edx-0x2e82d6ff]
  41a9aa:	push   esi
  41a9ab:	dec    edi
  41a9ac:	ret    
  41a9ad:	cmc    
  41a9ae:	and    eax,0xbf090c34
  41a9b3:	call   0xfe33f275
  41a9b8:	(bad)
  41a9bb:	sub    al,0xbd
  41a9bd:	add    ecx,DWORD PTR ds:0x81bba
  41a9c4:	ds stc 
  41a9c6:	xchg   BYTE PTR [edx+eax*2],ah
  41a9c9:	add    BYTE PTR [ecx],0xc5
  41a9cc:	cli    
  41a9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ce:	adc    eax,0x1823e00
  41a9d3:	aaa    
  41a9d4:	cli    
  41a9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d6:	sbb    DWORD PTR [ebx-0x24],esi
  41a9d9:	add    dl,dh
  41a9db:	inc    DWORD PTR [eax+0x5b]
  41a9de:	ins    DWORD PTR es:[edi],dx
  41a9df:	push   esi
  41a9e0:	aas    
  41a9e1:	pop    ebx
  41a9e2:	out    0x2a,eax
  41a9e4:	cli    
  41a9e5:	ds vmlaunch 
  41a9e9:	and    ebp,edx
  41a9eb:	add    edi,DWORD PTR [esi]
  41a9ed:	out    0x2b,al
  41a9ef:	sub    BYTE PTR [esi+0x2a],cl
  41a9f2:	adc    dl,cl
  41a9f4:	(bad)  
  41a9f5:	sub    esp,DWORD PTR [edx-0x3e]
  41a9f8:	es jle 0x41a9ae
  41a9fb:	icebp  
	...
  41aa24:	add    BYTE PTR [eax],al
  41aa26:	adc    esp,edi
  41aa28:	xor    ebp,DWORD PTR [eax]
  41aa2a:	inc    esi
  41aa2b:	sub    bh,BYTE PTR [eax]
  41aa2d:	jge    0x41aa1f
  41aa2f:	out    0xaf,al
  41aa31:	fdiv   QWORD PTR [edx+0x37f18e8a]
  41aa37:	sahf   
  41aa38:	idiv   BYTE PTR [esi+0x45]
  41aa3b:	pop    esi
  41aa3c:	out    0x3,eax
  41aa3e:	mov    bh,0x17
  41aa40:	retf   
  41aa41:	sub    edx,DWORD PTR ds:0x3e03e45b
  41aa47:	(bad)  
  41aa49:	test   bl,cl
  41aa4b:	pop    ebp
  41aa4c:	out    dx,al
  41aa4d:	xchg   DWORD PTR [ecx],edi
  41aa4f:	pop    esi
  41aa50:	out    0x3,eax
  41aa52:	jne    0x41aaaf
  41aa54:	int3   
  41aa55:	add    edi,DWORD PTR [esi]
  41aa57:	(bad)  
  41aa59:	test   BYTE PTR [ebx-0x567811a2],ch
  41aa5f:	pop    ebp
  41aa60:	out    0x3,eax
  41aa62:	(bad)  
  41aa63:	das    
  41aa64:	add    ecx,DWORD PTR [edi+eax*8+0x17]
  41aa68:	retf   
  41aa69:	push   edi
  41aa6a:	mov    bh,0xe9
  41aa6c:	repz pop es
  41aa6e:	ds pop ebx
  41aa70:	ret    0xc1c4
  41aa73:	pop    ss
  41aa74:	ret    
  41aa75:	and    eax,DWORD PTR [esi]
  41aa77:	sub    esi,DWORD PTR [ebp+edi*1+0x69]
  41aa7b:	sub    ebp,DWORD PTR [ecx+0x17b555]
  41aa81:	int    0x19
  41aa83:	sub    ecx,DWORD PTR [ecx-0x5508de1]
  41aa89:	out    0x0,al
	...
  41aab3:	add    BYTE PTR [esi-0x1c],cl
  41aab6:	dec    esp
  41aab7:	add    eax,0xd4c4a22
  41aabc:	and    dh,0x41
  41aabf:	call   0xe565c278
  41aac4:	nop
  41aac5:	getsec 
  41aac7:	jb     0x41aad5
  41aac9:	sub    eax,0x16f5a789
  41aace:	cmc    
  41aacf:	scas   al,BYTE PTR es:[edi]
  41aad0:	push   cs
  41aad1:	in     al,0x4c
  41aad3:	int    0x7d
  41aad5:	fiadd  DWORD PTR [ebp+eax*8+0x59]
  41aad9:	in     al,0x44
  41aadb:	int    0x81
  41aadd:	sub    ecx,DWORD PTR [edi+0x62]
  41aae0:	inc    DWORD PTR [edx-0x701181d3]
  41aae6:	mov    DWORD PTR ds:0xa1293716,ebp
  41aaec:	inc    edx
  41aaed:	call   0x5e38:0x7bbfb0b8
  41aaf4:	in     al,0xa1
  41aaf6:	cli    
  41aaf7:	jb     0x41aaf4
  41aaf9:	shr    eax,1
  41aafb:	test   BYTE PTR [edx-0x63],0xe9
  41aaff:	sbb    DWORD PTR [ebx],esi
  41ab01:	pop    ds
  41ab02:	and    al,0x15
  41ab04:	or     eax,0xa451cee4
  41ab09:	xchg   ch,bh
  41ab0b:	sbb    ah,BYTE PTR ss:[edi]
  41ab0e:	and    al,0xa5
  41ab10:	adc    dh,BYTE PTR [ebx+0x1b61ad89]
  41ab16:	push   edx
  41ab17:	mov    ecx,0x0
	...
  41ab40:	add    BYTE PTR [eax],al
  41ab42:	add    ah,BYTE PTR [ecx-0x7088e018]
  41ab48:	std    
  41ab49:	ret    0xe385
  41ab4c:	rol    DWORD PTR [eax],0xec
  41ab4f:	and    DWORD PTR [eax+ebx*2],esp
  41ab52:	(bad)  
  41ab54:	loop   0x41ab59
  41ab56:	fs xchg edi,eax
  41ab58:	mov    ebp,0x445665f8
  41ab5d:	and    al,0x1b
  41ab5f:	inc    esi
  41ab60:	call   0x44d9fae2
  41ab65:	and    al,0x3b
  41ab67:	pop    eax
  41ab68:	add    BYTE PTR [eax],al
  41ab6a:	daa    
  41ab6b:	in     al,0xfb
  41ab6d:	jbe    0x41abae
  41ab6f:	ds ins BYTE PTR es:[edi],dx
  41ab71:	and    al,0x5b
  41ab73:	or     esi,DWORD PTR [eax]
  41ab75:	mov    esp,DWORD PTR [ebx+0x43]
  41ab78:	sub    BYTE PTR [ebp+0x36],dl
  41ab7b:	adc    al,0xce
  41ab7d:	call   0x3d3523
  41ab82:	mov    WORD PTR [ebx],?
  41ab84:	and    al,0x44
  41ab86:	pop    esp
  41ab87:	lahf   
  41ab88:	xchg   DWORD PTR [ebx+edi*8+0x1c],eax
  41ab8c:	push   edx
  41ab8d:	push   eax
  41ab8e:	ins    BYTE PTR es:[edi],dx
  41ab8f:	shr    eax,1
  41ab91:	stos   DWORD PTR es:[edi],eax
  41ab92:	imul   eax,DWORD PTR [eax+0x14a43bfb],0xa2f245c
  41ab9c:	or     bh,al
  41ab9e:	fwait
  41ab9f:	cmp    BYTE PTR [ecx+eax*1],dl
  41aba2:	xlat   BYTE PTR ds:[ebx]
  41aba3:	pop    esp
  41aba4:	add    BYTE PTR [ebp+0x0],al
	...
  41abce:	add    BYTE PTR [eax],al
  41abd0:	adc    BYTE PTR [edx],dl
  41abd2:	dec    ecx
  41abd3:	cmp    ebx,esi
  41abd5:	cmp    BYTE PTR [ebp+edi*2-0x28],al
  41abd9:	adc    eax,0x5c9b148e
  41abde:	add    BYTE PTR [edx-0x5a],ch
  41abe1:	sub    eax,0xaf318b4d
  41abe6:	fwait
  41abe7:	repz pusha 
  41abe9:	add    BYTE PTR [edi-0x78e784ac],0xd8
  41abf0:	ds std 
  41abf2:	inc    edi
  41abf3:	and    al,0xfe
  41abf5:	rcl    DWORD PTR [ecx-0x77],cl
  41abf8:	js     0x41ac64
  41abfa:	pop    edi
  41abfb:	mul    BYTE PTR [ecx-0x6f]
  41abfe:	jp     0x41ac4c
  41ac00:	and    bl,BYTE PTR [edx+0x70c54f58]
  41ac06:	jg     0x41ac64
  41ac08:	es sbb ecx,0x5c
  41ac0c:	dec    eax
  41ac0d:	mov    cl,0xee
  41ac0f:	cmp    DWORD PTR [esi],edx
  41ac11:	std    
  41ac12:	dec    esp
  41ac13:	and    al,0x96
  41ac15:	and    dl,bh
  41ac17:	les    eax,FWORD PTR [edx+0x3e00185e]
  41ac1d:	add    BYTE PTR [ecx],0xe9
  41ac20:	inc    ebp
  41ac21:	add    eax,0x822a246d
  41ac26:	inc    BYTE PTR [edx+0x184f8]
  41ac2c:	mov    ebp,0xc80cffee
  41ac31:	sbb    al,0x4
	...
  41ac5b:	add    BYTE PTR [eax],al
  41ac5d:	add    BYTE PTR [esi],bh
  41ac5f:	std    
  41ac60:	push   esp
  41ac61:	and    al,0x1e
  41ac63:	or     eax,0x823a1483
  41ac68:	add    DWORD PTR [ecx-0x7eb0f804],eax
  41ac6e:	std    
  41ac6f:	adc    DWORD PTR [edx-0x7f],0xfffffffe
  41ac73:	adc    DWORD PTR [ecx-0x75],0x72
  41ac77:	push   esi
  41ac78:	xor    BYTE PTR [edi-0x3b],cl
  41ac7b:	aaa    
  41ac7c:	fst    DWORD PTR [eax-0x7611df49]
  41ac82:	add    bl,BYTE PTR [esi+0x34]
  41ac85:	cmp    edx,edi
  41ac87:	push   ebp
  41ac88:	sbb    al,0x89
  41ac8a:	repnz pop ebp
  41ac8c:	cmp    BYTE PTR [edx-0x3b],dl
  41ac8f:	outs   dx,DWORD PTR ds:[esi]
  41ac90:	push   ecx
  41ac91:	jl     0x41acf0
  41ac93:	pop    ebx
  41ac94:	(bad)  
  41ac96:	lea    ecx,[edi-0x1c6985e2]
  41ac9c:	stos   DWORD PTR es:[edi],eax
  41ac9d:	daa    
  41ac9e:	es es mov bh,0x7a
  41aca2:	js     0x41ac26
  41aca4:	adc    eax,0xd28f63f8
  41aca9:	ret    0xdbb1
  41acac:	or     DWORD PTR [edx],eax
  41acae:	aas    
  41acaf:	popf   
  41acb0:	bound  edi,QWORD PTR [ebx-0x27166e77]
  41acb6:	adc    al,0x83
  41acb8:	shl    edi,0x3b
  41acbb:	(bad)  
  41acbc:	(bad)  
  41acbd:	int3   
  41acbe:	(bad)  
  41acbf:	pop    ss
  41acc0:	add    ebx,DWORD PTR [eax+eax*1]
	...
  41aceb:	add    BYTE PTR [ebp+0x16be722b],cl
  41acf1:	mov    ds:0xe31bedb4,eax
  41acf6:	lahf   
  41acf7:	sbb    DWORD PTR [edi],eax
  41acf9:	pop    ebx
  41acfa:	mov    al,ds:0x72ba21ac
  41acff:	push   ds
  41ad00:	or     eax,DWORD PTR [ebp-0x5e381548]
  41ad06:	test   al,0xdb
  41ad08:	push   ebx
  41ad09:	pop    edx
  41ad0a:	mov    eax,ds:0xbb378279
  41ad0f:	add    dh,dh
  41ad11:	push   edx
  41ad12:	nop
  41ad13:	outs   dx,DWORD PTR ds:[esi]
  41ad14:	inc    esi
  41ad15:	xchg   esi,eax
  41ad16:	sub    ebp,DWORD PTR [eax]
  41ad18:	sub    bl,BYTE PTR [edi+eiz*8+0x3]
  41ad1c:	fsub   DWORD PTR ds:[esi+0x76]
  41ad20:	push   ss
  41ad21:	push   edx
  41ad22:	and    al,0x70
  41ad24:	(bad)  
  41ad26:	mov    ebx,0xb92b6e27
  41ad2b:	js     0x41ada5
  41ad2d:	xor    DWORD PTR [ebp-0x9],0xffffffa3
  41ad31:	mov    ?,WORD PTR [edx-0x34]
  41ad34:	(bad)  
  41ad35:	pop    ss
  41ad36:	add    BYTE PTR ds:0x62502a32,cl
  41ad3c:	enter  0x7d83,0x1c
  41ad40:	xchg   ebx,eax
  41ad41:	nop
  41ad42:	cmp    DWORD PTR [ecx+0x7b],eax
  41ad45:	loop   0x41ad49
  41ad47:	jmp    0x6721:0x8d815b3d
  41ad4e:	add    dh,dh
	...
  41ad78:	add    BYTE PTR [eax],al
  41ad7a:	mov    eax,0x3de90288
  41ad7f:	fdiv   st(3),st
  41ad81:	jmp    0x5b3d:0xe9d4e052
  41ad88:	mov    DWORD PTR ds:0x35893b16,esi
  41ad8e:	xor    cx,WORD PTR [ecx+0x57496f]
  41ad95:	jmp    0x193d7b58
  41ad9a:	mov    edi,0xbf1b0198
  41ad9f:	call   0xed24:0x1f911901
  41ada6:	ins    BYTE PTR es:[edi],dx
  41ada7:	in     al,0xce
  41ada9:	xchg   ecx,eax
  41adaa:	aam    0x92
  41adac:	std    
  41adad:	sahf   
  41adae:	jbe    0x41adc7
  41adb0:	and    al,0xd9
  41adb2:	jbe    0x41addb
  41adb4:	and    al,0xd5
  41adb6:	data16 das 
  41adb8:	and    al,0xd1
  41adba:	push   ss
  41adbb:	pushf  
  41adbc:	push   edx
  41adbd:	jb     0x41ad5a
  41adbf:	sub    bh,BYTE PTR [esp+ecx*8-0xb]
  41adc3:	rep outs dx,BYTE PTR ss:[esi]
  41adc6:	fisubr DWORD PTR [ecx]
  41adc8:	push   ecx
  41adc9:	jb     0x41ad4e
  41adcb:	aad    0x44
  41adcd:	add    eax,0x5c15835e
  41add2:	mov    ds:0x619d898f,al
  41add7:	aaa    
  41add8:	sub    DWORD PTR [eax],eax
  41adda:	push   esi
  41addb:	loope  0x41ae5c
  41addd:	loop   0x41addf
	...
  41ae07:	add    BYTE PTR [edx+ebx*2-0x66a0743e],ah
  41ae0e:	cmc    
  41ae0f:	add    bh,ah
  41ae11:	ins    DWORD PTR es:[edi],dx
  41ae12:	call   0xfbc0d216
  41ae17:	push   ebp
  41ae18:	mov    ah,0x12
  41ae1a:	into   
  41ae1b:	mov    DWORD PTR [ebx+0x45e82c35],esp
  41ae21:	xchg   bl,bh
  41ae23:	(bad)  
  41ae24:	in     al,dx
  41ae25:	rol    DWORD PTR [edi+0x27358344],1
  41ae2b:	enter  0xd064,0xb8
  41ae2f:	jmp    0xf76fc129
  41ae34:	outs   dx,BYTE PTR ds:[esi]
  41ae35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae36:	cli    
  41ae37:	mov    ebp,ebp
  41ae39:	xchg   esi,eax
  41ae3a:	in     eax,0x1f
  41ae3c:	and    al,0xcf
  41ae3e:	xchg   DWORD PTR [ebx+eax*2+0x4b],eax
  41ae42:	inc    edi
  41ae44:	cmp    al,0xae
  41ae46:	jns    0x41ae50
  41ae48:	loopne 0x41ae65
  41ae4a:	and    al,0x14
  41ae4c:	es pop ecx
  41ae4e:	add    BYTE PTR [eax],al
  41ae50:	mov    ds:0x1c287680,al
  41ae55:	pushf  
  41ae56:	jl     0x41ae7c
  41ae58:	ins    BYTE PTR es:[edi],dx
  41ae59:	sub    esp,DWORD PTR [eax+esi*1]
  41ae5c:	aaa    
  41ae5d:	and    eax,0xc6bfce87
  41ae62:	hlt    
  41ae63:	(bad)  
  41ae64:	mov    eax,0x238bd80c
  41ae69:	cmp    ebp,DWORD PTR [eax]
  41ae6b:	push   ebp
	...
  41ae94:	add    BYTE PTR [eax],al
  41ae96:	aaa    
  41ae97:	or     al,0xce
  41ae99:	call   0x3d3a13
  41ae9e:	sbb    al,0x9f
  41aea0:	or     ecx,DWORD PTR [edx+eax*2+0x3e000055]
  41aea7:	add    DWORD PTR [eax+0x24],ebp
  41aeaa:	push   edx
  41aeab:	cmp    dl,0x82
  41aeae:	inc    esp
  41aeaf:	add    BYTE PTR [ecx],0x0
  41aeb2:	(bad)
  41aeb5:	pop    eax
  41aeb6:	mov    ebx,0x1583f945
  41aebb:	add    DWORD PTR [ecx],0x0
  41aebe:	mov    ebp,0xc00d0335
  41aec3:	rol    BYTE PTR [eax+eax*1],cl
  41aec6:	ds stc 
  41aec8:	dec    edi
  41aec9:	and    al,0x12
  41aecb:	stc    
  41aecc:	mov    eax,0x77529
  41aed1:	or     dl,BYTE PTR ds:0xc5027235
  41aed7:	cmp    eax,0x96028954
  41aedc:	or     eax,0x54516129
  41aee1:	mov    ecx,DWORD PTR [edx-0x3ab0d7aa]
  41aee7:	mov    bl,0x7c
  41aee9:	pop    esp
  41aeea:	bound  edx,QWORD PTR [esi-0x24]
  41aeed:	int3   
  41aeee:	sub    DWORD PTR [ebp+0x569a37ea],edx
  41aef4:	xor    BYTE PTR [edx+0x4a],dh
  41aef7:	stc    
  41aef8:	dec    esp
  41aef9:	and    al,0x0
	...
  41af23:	add    BYTE PTR [esi+0x65],cl
  41af26:	push   esi
  41af27:	mov    eax,esi
  41af29:	jmp    0xed3ba356
  41af2e:	jle    0x41af08
  41af30:	lds    edi,FWORD PTR ds:0x52913820
  41af36:	jge    0x41af06
  41af38:	(bad)  
  41af39:	mov    ds:0x98d9fded,eax
  41af3e:	(bad)  
  41af3f:	mov    DWORD PTR [edx-0x62],esi
  41af42:	or     eax,0x34f92e7e
  41af47:	and    al,0xe
  41af49:	pop    ebx
  41af4a:	jb     0x41af9b
  41af4c:	bound  eax,QWORD PTR [edi+0x70]
  41af4f:	aaa    
  41af50:	pop    edx
  41af51:	push   ebx
  41af52:	pusha  
  41af53:	dec    edi
  41af54:	bound  ecx,QWORD PTR [edi+0x62]
  41af57:	aas    
  41af58:	pop    edx
  41af59:	imul   ebx,DWORD PTR [esi+0x2ddfee56],0xffffffdb
  41af60:	pop    ebx
  41af61:	mov    dh,BYTE PTR [esi]
  41af63:	jmp    0x29eb:0x2c031eb7
  41af6a:	jb     0x41af25
  41af6c:	(bad)  
  41af6d:	mov    dl,0xf
  41af6f:	in     al,dx
  41af70:	outs   dx,DWORD PTR ds:[esi]
  41af71:	mov    edx,DWORD PTR [esi]
  41af73:	cs jg  0x41afd1
  41af76:	pop    esp
  41af77:	mov    ds:0x7ee75b3e,al
  41af7c:	cli    
  41af7d:	ss iret 
  41af7f:	cs mov al,0x36
  41af82:	jmp    0x41af87
  41af84:	ds push es
  41af86:	(bad)  
  41af87:	jle    0x41af89
	...
  41afb1:	add    dl,ch
  41afb3:	ss sti 
  41afb5:	jl     0x41af39
  41afb7:	aas    
  41afb8:	not    DWORD PTR [eax-0x74]
  41afbb:	sub    esp,DWORD PTR [edx-0x46]
  41afbe:	push   ss
  41afbf:	mov    ss,edi
  41afc1:	jmp    0x7d5be0e9
  41afc6:	or     ch,dl
  41afc8:	and    esp,DWORD PTR [eax]
  41afca:	bound  esi,QWORD PTR [ebx-0x53]
  41afcd:	cmc    
  41afce:	or     ecx,DWORD PTR [ebx+0x3f5a3862]
  41afd4:	jmp    0xb946:0x34aec7bb
  41afdb:	pop    ss
  41afdc:	retf   
  41afdd:	sbb    ecx,DWORD PTR [esi+edx*8-0x71512363]
  41afe4:	xchg   cl,ch
  41afe6:	(bad)  
  41afe7:	mov    ds:0x431a4072,eax
  41afec:	add    BYTE PTR [esi],bl
  41afee:	jb     0x41afc4
  41aff0:	into   
  41aff1:	sbb    DWORD PTR [ebp+0x3b66fd8c],0x3b0d23f7
  41affb:	mov    ds:0x3f49ad89,eax
  41b000:	cmp    DWORD PTR [edx],ebp
  41b002:	and    esp,DWORD PTR [edi]
  41b004:	and    al,0xa1
  41b006:	daa    
  41b007:	and    ch,cl
  41b009:	in     eax,0x12
  41b00b:	daa    
  41b00c:	and    al,0x91
  41b00e:	or     bl,BYTE PTR [edi]
  41b010:	and    al,0xf1
  41b012:	push   edx
  41b013:	loope  0x41b039
  41b015:	in     eax,dx
	...
  41b03e:	add    BYTE PTR [eax],al
  41b040:	cmp    eax,0xbaf0735b
  41b045:	leave  
  41b046:	sub    ch,ch
  41b048:	cmp    eax,0x3295005b
  41b04d:	inc    esi
  41b04e:	add    ah,ch
  41b050:	cmp    eax,0xbae47c5b
  41b055:	mov    BYTE PTR [edx],al
  41b057:	jge    0x41b07c
  41b059:	or     bh,BYTE PTR [ebp+eax*8+0x15]
  41b05d:	pop    ebx
  41b05e:	jnp    0x41b049
  41b060:	cmp    eax,0x266a0307
  41b065:	pop    esp
  41b066:	je     0x41b062
  41b068:	stos   BYTE PTR es:[edi],al
  41b069:	pop    ss
  41b06a:	and    al,0x11
  41b06c:	(bad)  
  41b06d:	sbb    cl,BYTE PTR [ecx-0xe670a49]
  41b073:	mov    esi,0x62307426
  41b078:	cmp    DWORD PTR [edi],0x3f416258
  41b07e:	adc    BYTE PTR [edx+0x12],dh
  41b081:	xor    al,0xd5
  41b083:	cmp    ecx,DWORD PTR [edx-0x2f7e312c]
  41b089:	mov    bh,ch
  41b08b:	mov    ss,esi
  41b08d:	push   ds
  41b08e:	and    al,0x0
  41b090:	neg    esi
  41b092:	jmp    0x41b095
  41b094:	retf   0xe77b
  41b097:	adc    bl,BYTE PTR [edx+ebx*1+0x24]
  41b09b:	adc    BYTE PTR [edx+0x47],ah
  41b09e:	sti    
  41b09f:	push   ecx
  41b0a0:	cmc    
  41b0a1:	push   es
  41b0a2:	into   
  41b0a3:	call   0x41b0a8
	...
  41b0cc:	add    BYTE PTR [eax],al
  41b0ce:	xor    eax,0x44fffb8e
  41b0d3:	je     0x41b154
  41b0d5:	std    
  41b0d6:	xchg   esp,eax
  41b0d7:	or     BYTE PTR [ecx+eax*4-0x74ffa259],0x19
  41b0df:	pop    edx
  41b0e0:	add    al,0x0
  41b0e2:	xchg   edi,eax
  41b0e3:	sbb    BYTE PTR [edi+0x50],cl
  41b0e6:	sbb    al,0xc4
  41b0e8:	call   0xfbb5080b
  41b0ed:	mov    esp,DWORD PTR [ebx-0x59aad797]
  41b0f3:	push   es
  41b0f4:	into   
  41b0f5:	mov    ebp,DWORD PTR [edi]
  41b0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f8:	lock repnz inc eax
  41b0fb:	jae    0x41b134
  41b0fd:	ret    
  41b0fe:	shl    BYTE PTR [ebp-0x79],1
  41b101:	inc    esp
  41b102:	jnp    0x41b169
  41b104:	aaa    
  41b105:	xchg   BYTE PTR [ebx-0x77],bh
  41b108:	std    
  41b109:	call   FWORD PTR [edx+0x4fbe8086]
  41b10f:	pop    ebx
  41b110:	add    BYTE PTR [eax],al
  41b112:	pop    ss
  41b113:	stc    
  41b114:	inc    eax
  41b115:	cmp    eax,0x5c17
  41b11a:	sbb    DWORD PTR [edx+0x7f],0xfffffffd
  41b11e:	and    eax,0x173d02f9
  41b123:	hlt    
  41b124:	(bad)  
  41b125:	call   DWORD PTR [ebx+0x4d]
  41b128:	xchg   DWORD PTR [ebx+ecx*1+0x15],ebx
  41b12c:	test   DWORD PTR [ebx+edi*8+0x58],ebp
  41b130:	sub    ebp,0x0
	...
  41b15a:	add    BYTE PTR [eax],al
  41b15c:	ds data16 and al,0x89
  41b160:	enter  0xfd8e,0xff
  41b164:	fldenv [ebp+0x52]
  41b167:	mov    DWORD PTR [eax],eax
  41b169:	jmp    0x41b18e
  41b16b:	lock leave 
  41b16d:	adc    DWORD PTR [edi+edi*8-0xfe8d3f],ebp
  41b174:	ret    
  41b175:	xchg   ch,bh
  41b177:	push   DWORD PTR [ecx+0x5224406b]
  41b17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b17e:	loope  0x41b10b
  41b180:	add    dh,BYTE PTR [edi-0x1a]
  41b183:	jmp    0x2489be7c
  41b188:	test   BYTE PTR [eax+eax*2],0x24
  41b18c:	push   esi
  41b18d:	out    0x51,eax
  41b18f:	mov    DWORD PTR [eax+0x1a],esi
  41b192:	add    ecx,esi
  41b194:	jns    0x41b1d7
  41b196:	add    ebp,DWORD PTR [esi+0x17e4a]
  41b19c:	mov    ebx,0x55fd08ce
  41b1a1:	xchg   edi,eax
  41b1a2:	jp     0x41b200
  41b1a4:	and    bh,BYTE PTR [edx-0x50340280]
  41b1aa:	jp     0x41b1f8
  41b1ac:	and    bl,BYTE PTR [edx+0x7e2a967a]
  41b1b2:	add    DWORD PTR [eax],eax
  41b1b4:	(bad)  
  41b1b5:	sub    eax,0x35c73c20
  41b1ba:	and    BYTE PTR [eax],bh
  41b1bc:	mov    bh,0x45
  41b1be:	and    BYTE PTR [eax],dl
	...
  41b1e8:	add    BYTE PTR [eax],al
  41b1ea:	jns    0x41b189
  41b1ec:	or     eax,DWORD PTR [ebx+0x45014619]
  41b1f2:	and    eax,0x32867a79
  41b1f7:	jbe    0x41b1fa
  41b1f9:	add    BYTE PTR [ebp+0x62],ch
  41b1fc:	jns    0x41b1cc
  41b1fe:	out    0x5a,al
  41b200:	pop    ebp
  41b201:	(bad)  
  41b202:	xrelease xchg DWORD PTR [esi-0x18a0ad83],ebx
  41b209:	add    edi,DWORD PTR [ebp-0x18802179]
  41b20f:	pop    edx
  41b210:	out    0x3,eax
  41b212:	pop    ss
  41b213:	pop    es
  41b214:	ret    
  41b215:	daa    
  41b216:	cmp    ebx,esi
  41b218:	mov    BYTE PTR [ebx],al
  41b21a:	ds pop ebx
  41b21c:	bound  ecx,QWORD PTR [edi+0x62]
  41b21f:	das    
  41b220:	jb     0x41b1d8
  41b222:	addr16 xchg esp,eax
  41b224:	ins    BYTE PTR es:[edi],dx
  41b225:	push   DWORD PTR [edi]
  41b227:	inc    esp
  41b228:	cs ins DWORD PTR es:[edi],dx
  41b22a:	cmp    al,0xd4
  41b22c:	es push ebx
  41b22e:	(bad)  
  41b22f:	push   ds
  41b230:	or     edx,DWORD PTR [eax]
  41b232:	(bad)  
  41b233:	jae    0x41b247
  41b235:	xlat   BYTE PTR ds:[ebx]
  41b236:	in     eax,dx
  41b237:	sub    ah,BYTE PTR [edi+esi*1+0x5a]
  41b23b:	inc    edi
  41b23c:	cwde   
  41b23d:	jp     0x41b1c7
  41b23f:	rcl    DWORD PTR [ebx-0x6a8ce5e1],1
  41b245:	lock imul eax,DWORD PTR [edi+0x4f1a67d0],0xffffff99
  41b24d:	das    
	...
  41b276:	add    BYTE PTR [eax],al
  41b278:	(bad)  
  41b279:	cs retf 
  41b27b:	xor    ebp,ebx
  41b27d:	sub    al,0x72
  41b27f:	mov    ch,0x56
  41b281:	jg     0x41b27b
  41b283:	in     eax,0x43
  41b285:	sar    edi,cl
  41b287:	jns    0x41b20b
  41b289:	aas    
  41b28a:	pop    ds
  41b28b:	dec    ebp
  41b28c:	mov    ss,edx
  41b28e:	lods   eax,DWORD PTR ds:[esi]
  41b28f:	fadd   QWORD PTR [esi]
  41b291:	(bad)  
  41b292:	(bad)  
  41b293:	in     eax,0x67
  41b295:	mov    al,ds:0x6f625862
  41b29a:	inc    ebp
  41b29b:	adc    al,0xc7
  41b29d:	pop    ss
  41b29e:	add    esi,DWORD PTR [edi+esi*4]
  41b2a1:	das    
  41b2a2:	add    BYTE PTR ds:0x54cde4e,cl
  41b2a8:	sub    bl,dh
  41b2aa:	push   esp
  41b2ab:	int    0x19
  41b2ad:	aam    0x44
  41b2af:	lds    ecx,FWORD PTR [ebp+0x30]
  41b2b2:	push   ebx
  41b2b3:	cmp    DWORD PTR [edi-0x6b],esp
  41b2b6:	call   0xfdcaa373
  41b2bb:	jb     0x41b2d3
  41b2bd:	aas    
  41b2be:	cmp    BYTE PTR [esi],dl
  41b2c0:	ins    DWORD PTR es:[edi],dx
  41b2c1:	aam    0xce
  41b2c3:	(bad)  
  41b2c5:	jae    0x41b268
  41b2c7:	js     0x41b26c
  41b2c9:	mov    BYTE PTR [ecx],bh
  41b2cb:	sub    al,0x19
  41b2cd:	inc    ecx
  41b2ce:	mov    DWORD PTR [ebp+0x6f394349],esp
  41b2d4:	pop    esi
  41b2d5:	pop    edi
  41b2d6:	add    cl,ch
  41b2d8:	sub    BYTE PTR [esi-0x7f],bl
  41b2db:	xchg   DWORD PTR [eax],eax
	...
  41b305:	add    BYTE PTR [edx],dh
  41b307:	pop    edi
  41b308:	add    cl,ch
  41b30a:	cmp    eax,0x3df4180f
  41b30f:	pop    edx
  41b310:	add    cl,ch
  41b312:	loope  0x41b36d
  41b314:	and    DWORD PTR [esi],0xdc170f3c
  41b31a:	cmp    eax,0xd9e90002
  41b31f:	pop    ecx
  41b320:	or     DWORD PTR [esi],0x9e0b0f3f
  41b326:	in     eax,dx
  41b327:	ror    esi,cl
  41b329:	adc    DWORD PTR [edi+0x76],esp
  41b32c:	std    
  41b32d:	test   BYTE PTR [esi],0x88
  41b330:	jmp    0x243969fe
  41b335:	stc    
  41b336:	xor    BYTE PTR [esi-0x2bc21603],al
  41b33c:	rol    DWORD PTR [edx],1
  41b33e:	repz sub BYTE PTR [ebx+0x62],dl
  41b342:	shl    DWORD PTR [edx-0x3b],cl
  41b345:	add    cl,ch
  41b347:	jle    0x41b344
  41b349:	inc    ebp
  41b34a:	xchg   esp,eax
  41b34b:	scas   eax,DWORD PTR es:[edi]
  41b34c:	std    
  41b34d:	je     0x41b349
  41b34f:	add    BYTE PTR [esp+0x17],ch
  41b353:	add    eax,DWORD PTR [esp+0x33]
  41b357:	sbb    al,0x48
  41b359:	mov    DWORD PTR [ebx],ebp
  41b35b:	cmp    ebx,DWORD PTR [eax+0x3b]
  41b35e:	scas   eax,DWORD PTR es:[edi]
  41b35f:	mov    ?,WORD PTR [edi-0x49]
  41b362:	scas   eax,DWORD PTR es:[edi]
  41b363:	jle    0x41b360
  41b365:	test   DWORD PTR [eax+0x9c818e],edi
	...
  41b393:	add    bh,dl
  41b395:	pop    ecx
  41b396:	add    BYTE PTR [ebx-0x79f4a6b8],al
  41b39c:	and    al,0x5a
  41b39e:	add    BYTE PTR [eax],al
  41b3a0:	sub    al,0x4e
  41b3a2:	and    al,0x10
  41b3a4:	lock add bh,BYTE PTR [edi+0x4d2a502b]
  41b3ab:	mov    edi,DWORD PTR [ecx]
  41b3ad:	mov    ds:0x7ef8ee2b,al
  41b3b2:	xchg   DWORD PTR [ebx+eax*2+0x37],edx
  41b3b6:	push   ebx
  41b3b7:	push   edx
  41b3b8:	sbb    al,0xd0
  41b3ba:	xchg   eax,ebp
  41b3bc:	call   FWORD PTR [eax-0x13]
  41b3bf:	call   FWORD PTR [eax]
  41b3c1:	xor    eax,ecx
  41b3c3:	jg     0x41b367
  41b3c5:	add    al,BYTE PTR [esp-0x71]
  41b3c9:	xor    al,BYTE PTR [esi+0x596324]
  41b3cf:	jne    0x41b41f
  41b3d1:	fidivr DWORD PTR [esi+0x596328]
  41b3d7:	add    bl,al
  41b3d9:	push   ecx
  41b3da:	cmp    DWORD PTR [eax],eax
  41b3dc:	and    bl,BYTE PTR [ecx+0x0]
  41b3df:	jl     0x41b403
  41b3e1:	fdivp  st(3),st
  41b3e3:	add    dl,BYTE PTR [ebx+0x3e003933]
  41b3e9:	das    
  41b3ea:	add    al,0x0
  41b3ec:	call   0xfc46:0x3dfd867f
  41b3f3:	push   esp
  41b3f4:	outs   dx,BYTE PTR ds:[esi]
  41b3f5:	or     edx,edx
  41b3f7:	call   0x41b3fc
	...
  41b420:	add    BYTE PTR [eax],al
  41b422:	ja     0x41b3e7
  41b424:	loope  0x41b423
  41b426:	in     eax,0x8c
  41b428:	inc    eax
  41b429:	pop    ecx
  41b42a:	xchg   ecx,eax
  41b42b:	icebp  
  41b42c:	retf   
  41b42d:	std    
  41b42e:	mov    cl,dh
  41b430:	(bad)  
  41b431:	cmp    ah,bh
  41b433:	mov    al,BYTE PTR [ecx]
  41b435:	mov    DWORD PTR [edx-0x62],ebp
  41b438:	icebp  
  41b439:	mov    ch,bh
  41b43b:	test   eax,0x97350ca
  41b440:	shr    al,cl
  41b442:	and    esp,ebx
  41b444:	loope  0x41b443
  41b446:	add    esi,ecx
  41b448:	lock jmp FWORD PTR [edx]
  41b44b:	das    
  41b44c:	in     eax,dx
  41b44d:	adc    BYTE PTR [ebp-0x4cefda32],dh
  41b453:	mov    ecx,0xf8ec4fe2
  41b458:	shr    eax,1
  41b45a:	cmp    DWORD PTR [ecx+eiz*8],ebp
  41b45d:	std    
  41b45e:	mov    ch,0xc6
  41b460:	and    eax,0x173c354
  41b465:	add    BYTE PTR [esi],bh
  41b467:	mov    edx,eax
  41b469:	jno    0x41b48a
  41b46b:	(bad)  
  41b46d:	add    BYTE PTR [esi],bh
  41b46f:	jb     0x41b472
  41b471:	mov    DWORD PTR [eax+0x3e000586],edi
  41b477:	shl    DWORD PTR [ecx],0x89
  41b47a:	sub    BYTE PTR [edx-0x19],0xeb
  41b47e:	dec    ecx
  41b47f:	test   DWORD PTR [esi+ebp*4],eax
  41b482:	sub    dh,BYTE PTR [esi+0x1]
	...
  41b4ad:	add    BYTE PTR [eax],al
  41b4af:	add    BYTE PTR ds:0xacdd1d57,bh
  41b4b5:	pop    ebx
  41b4b6:	int3   
  41b4b7:	xchg   bh,dh
  41b4b9:	sub    eax,0xffffff81
  41b4bc:	inc    edx
  41b4bd:	pop    edi
  41b4be:	out    0x3,eax
  41b4c0:	lds    ecx,FWORD PTR [edi]
  41b4c2:	loopne 0x41b51c
  41b4c4:	sub    eax,edx
  41b4c6:	ins    DWORD PTR es:[edi],dx
  41b4c7:	repz cmp eax,0xb88ce75b
  41b4cd:	(bad)  
  41b4ce:	jmp    0x41b4d3
  41b4d0:	sbb    esp,DWORD PTR ds:[eax-0x6f]
  41b4d4:	push   edx
  41b4d5:	pop    edi
  41b4d6:	out    0x3,eax
  41b4d8:	rcr    esp,0xf7
  41b4db:	pop    es
  41b4dc:	ds pop ebx
  41b4de:	bound  ecx,QWORD PTR [ecx+0x3e75f36]
  41b4e4:	les    ebp,FWORD PTR [edx-0x17]
  41b4e7:	mov    ch,0xc8
  41b4e9:	cwde   
  41b4ea:	outs   dx,DWORD PTR ds:[esi]
  41b4eb:	repz shl ch,0xd3
  41b4ef:	pop    es
  41b4f0:	ds pop ebx
  41b4f2:	hlt    
  41b4f3:	cld    
  41b4f4:	(bad)  
  41b4f5:	fdivr  st(7),st
  41b4f7:	pop    es
  41b4f8:	ds pop ebx
  41b4fa:	jo     0x41b485
  41b4fc:	inc    esi
  41b4fd:	pop    edi
  41b4fe:	out    0x3,eax
  41b500:	(bad)  
  41b501:	rcr    DWORD PTR [ebp-0x1],1
  41b504:	cmp    eax,0xc08ce75b
  41b509:	push   0xffffffe3
  41b50b:	add    edi,DWORD PTR [esi]
  41b50d:	shr    BYTE PTR [ebp-0x5],1
  41b510:	cmp    eax,0x8de75b
	...
  41b53d:	add    BYTE PTR [esi+0x59],cl
  41b540:	cmp    ecx,esp
  41b542:	jl     0x41b516
  41b544:	test   DWORD PTR [eax+eax*8],0x3e03eb66
  41b54b:	push   cs
  41b54c:	lock mov ?,WORD PTR [eax+0x3e03eb6a]
  41b553:	shl    BYTE PTR [ebp-0x5],cl
  41b556:	cmp    eax,0x7de9005b
  41b55b:	fimul  DWORD PTR [esi+0x5b39cd]
  41b561:	jo     0x41b517
  41b563:	imul   eax,DWORD PTR [ecx+ebp*8],0x3d
  41b567:	aam    0x86
  41b569:	icebp  
  41b56a:	inc    ecx
  41b56b:	pop    ebx
  41b56c:	add    BYTE PTR [ecx-0x26792ba6],bh
  41b572:	inc    ecx
  41b573:	pop    ebx
  41b574:	add    BYTE PTR [edi+0x67895b3a],ah
  41b57a:	ds push edi
  41b57c:	add    cl,ch
  41b57e:	ret    0x18d9
  41b581:	in     eax,dx
  41b582:	cmp    eax,0xea4eff5b
  41b587:	pop    esi
  41b588:	add    cl,ch
  41b58a:	sub    dl,BYTE PTR [esi+0x17c2c9d2]
  41b590:	and    al,0x25
  41b592:	rcr    DWORD PTR [ebx+0xfb2b874],0x24
  41b599:	or     ebx,ecx
  41b59b:	jmp    0x5b7f9ab0
  41b5a0:	sub    DWORD PTR [ebp+0x0],edi
	...
  41b5ca:	add    BYTE PTR [eax],al
  41b5cc:	popa   
  41b5cd:	sub    ecx,DWORD PTR [edi+0x72]
  41b5d0:	int3   
  41b5d1:	addr16 add al,0xe9
  41b5d4:	cmp    eax,0x4a054c34
  41b5d9:	sub    eax,0xab9e9e4f
  41b5de:	and    DWORD PTR ds:0xbcc0dd8a,0x2a892649
  41b5e8:	xor    esp,DWORD PTR [eax]
  41b5ea:	pop    esi
  41b5eb:	push   0x76
  41b5ed:	inc    ebx
  41b5ee:	ret    0x3a01
  41b5f1:	aam    0x86
  41b5f3:	stc    
  41b5f4:	inc    ecx
  41b5f5:	pop    ebx
  41b5f6:	add    dl,al
  41b5f8:	stc    
  41b5f9:	ss push eax
  41b5fb:	add    BYTE PTR [edx-0x2ba1a4c1],ah
  41b601:	xchg   edx,eax
  41b602:	cmp    dl,al
  41b604:	divps  xmm7,XMMWORD PTR [eax+0x502700]
  41b60b:	ret    
  41b60c:	lods   al,BYTE PTR ds:[esi]
  41b60d:	sbb    ah,BYTE PTR [esp+eax*1]
  41b610:	lods   al,BYTE PTR ds:[esi]
  41b611:	xchg   esi,eax
  41b612:	mov    ebp,0x44d124e9
  41b617:	or     BYTE PTR [edi-0x68],ah
  41b61a:	xchg   DWORD PTR [ebx+edi*1+0x6b],eax
  41b61e:	jge    0x41b60c
  41b620:	xor    edx,DWORD PTR [ebx+0x0]
  41b623:	add    BYTE PTR [edx-0x62],ch
  41b626:	jno    0x41b62f
  41b628:	call   0x5dd7:0x42c
  41b62e:	mov    edi,0x8b
	...
  41b657:	add    BYTE PTR [eax],al
  41b659:	add    BYTE PTR [ebx+0x3a],dl
  41b65c:	inc    esp
  41b65d:	add    al,0xe7
  41b65f:	pop    ebp
  41b660:	xchg   DWORD PTR [ebx+edi*8-0x28fffbe3],edx
  41b667:	dec    esp
  41b668:	xchg   DWORD PTR [ebx+edi*8-0x58fffbe3],ecx
  41b66f:	inc    edi
  41b670:	xchg   DWORD PTR [ebx+edi*2-0x68fffb9f],edx
  41b677:	dec    esp
  41b678:	push   eax
  41b679:	mov    ebx,DWORD PTR [ebx]
  41b67b:	cmp    al,BYTE PTR [eax+0x4]
  41b67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67f:	pop    ebp
  41b680:	push   edx
  41b681:	push   eax
  41b682:	repnz adc DWORD PTR [eax+ebx*1],esp
  41b686:	out    dx,eax
  41b687:	dec    ebp
  41b688:	icebp  
  41b689:	inc    DWORD PTR [eax-0x23]
  41b68c:	les    ebp,FWORD PTR [ebx+ebp*2]
  41b68f:	pop    ebp
  41b690:	add    bl,al
  41b692:	push   ebx
  41b693:	xchg   edx,eax
  41b694:	int3   
  41b695:	int3   
  41b696:	xor    edx,DWORD PTR [edx-0x6dec3334]
  41b69c:	int3   
  41b69d:	int3   
  41b69e:	ds mov edi,0x7fbfe38a
  41b6a4:	rol    BYTE PTR [eax],cl
  41b6a6:	ds je  0x41b6dd
  41b6a9:	push   esi
  41b6aa:	jmp    0x6f49ecbb
  41b6af:	ins    DWORD PTR es:[edi],dx
  41b6b0:	adc    BYTE PTR [esi+0x3f5702ed],dh
  41b6b6:	ds or  edx,esp
  41b6b9:	mov    edi,0xb60e7626
	...
  41b6e6:	add    BYTE PTR [eax],al
  41b6e8:	inc    edx
  41b6e9:	or     BYTE PTR [edi+ebp*8+0xd0593bd],0xd1
  41b6f1:	push   es
  41b6f2:	or     eax,DWORD PTR [eax]
  41b6f4:	mov    BYTE PTR [ebx],dh
  41b6f6:	add    al,0x83
  41b6f8:	push   es
  41b6f9:	jp     0x41b773
  41b6fb:	iret   
  41b6fc:	inc    ecx
  41b6fd:	or     bl,al
  41b6ff:	mov    BYTE PTR [edx-0x42be33a9],al
  41b705:	mov    ebp,0xa3ef7c1c
  41b70a:	scas   eax,DWORD PTR es:[edi]
  41b70b:	mov    bp,0x104f
  41b70f:	call   DWORD PTR [edx-0x74]
  41b712:	mov    eax,ss
  41b714:	leave  
  41b715:	mov    edx,0xa83e4c8f
  41b71a:	jmp    0x278a:0xef9ec301
  41b721:	jae    0x41b6a5
  41b723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b724:	jecxz  0x41b6a8
  41b726:	fdivp  st(5),st
  41b728:	cdq    
  41b729:	jb     0x41b6ad
  41b72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b72c:	ret    
  41b72d:	sbb    dh,0xfd
  41b730:	mov    DWORD PTR [edx+0x14],esi
  41b733:	fnstenv [ecx]
  41b735:	or     BYTE PTR [edx+0x1b2f0a8],al
  41b73b:	mov    ebp,DWORD PTR [edx]
  41b73d:	stos   BYTE PTR es:[edi],al
  41b73e:	cmp    dh,0x4a
  41b741:	pop    ebx
  41b742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b743:	or     DWORD PTR [edi+edx*1+0x17c6cbd4],esi
  41b74a:	hlt    
  41b74b:	jae    0x41b74d
	...
  41b775:	add    BYTE PTR [edi+0x53],ah
  41b778:	popa   
  41b779:	dec    eax
  41b77a:	or     eax,0x25486faf
  41b77f:	jmp    0x41b72b
  41b781:	xor    BYTE PTR [edi],0x5f
  41b784:	jae    0x41b742
  41b786:	neg    DWORD PTR [esi-0x19]
  41b789:	add    edi,DWORD PTR [esi]
  41b78b:	push   eax
  41b78c:	popf   
  41b78d:	adc    esi,0xc5042808
  41b793:	inc    esi
  41b794:	out    dx,eax
  41b795:	adc    BYTE PTR [eax],0x43
  41b798:	dec    esp
  41b799:	or     dh,BYTE PTR [esi+edx*1+0x16b6cbfc]
  41b7a0:	fdiv   QWORD PTR [ebx-0x19]
  41b7a3:	push   edx
  41b7a4:	popa   
  41b7a5:	inc    edi
  41b7a6:	sub    eax,0x45475faf
  41b7ab:	jmp    0x41b7d7
  41b7ad:	and    edi,0x42
  41b7b0:	sbb    edi,DWORD PTR [ebp-0x6a195bd7]
  41b7b6:	mov    edi,0x3e4515c2
  41b7bb:	fild   DWORD PTR [ebx]
  41b7bd:	or     DWORD PTR [esi-0x38f20ca6],ebp
  41b7c3:	push   esi
  41b7c4:	push   esp
  41b7c5:	repz sub ebx,DWORD PTR [edx]
  41b7c8:	out    0xc,eax
  41b7ca:	ret    0xf7cd
  41b7cd:	fisub  WORD PTR [ebx-0x406a1181]
  41b7d3:	stos   BYTE PTR es:[edi],al
  41b7d4:	fld    QWORD PTR [esi+edi*1-0x25]
  41b7d8:	retf   
  41b7d9:	or     BYTE PTR [eax],al
	...
  41b803:	add    BYTE PTR [esi-0x48f244a6],ch
  41b809:	push   esi
  41b80a:	pop    esp
  41b80b:	repz repz sbb DWORD PTR [eax],eax
  41b80f:	jmp    0xd9fd8f56
  41b814:	mov    BYTE PTR [ebp-0x3],bh
  41b817:	stos   BYTE PTR es:[edi],al
  41b818:	mov    esp,0x7f9d1881
  41b81d:	sbb    al,0x81
  41b81f:	adc    ecx,DWORD PTR [ebp+0x4e]
  41b822:	mov    ebx,ss
  41b824:	push   0xb674fd7d
  41b829:	push   0xfffffffd
  41b82b:	(bad)  
  41b82c:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41b82f:	loopne 0x41b86e
  41b831:	pop    ebx
  41b832:	add    BYTE PTR [esi-0x2a78db95],cl
  41b838:	popa   
  41b839:	cdq    
  41b83a:	or     cl,ch
  41b83c:	push   eax
  41b83d:	(bad)  
  41b83e:	jecxz  0x41b8a8
  41b840:	push   cs
  41b841:	fadd   QWORD PTR [eax]
  41b843:	jmp    0x1e97e485
  41b848:	mov    bh,0x1a
  41b84a:	or     BYTE PTR [ecx+esi*1-0x25],ch
  41b84e:	mov    bh,0xd9
  41b850:	cmp    eax,0xff60005b
  41b855:	fadd   st(0),st
  41b857:	in     eax,dx
  41b858:	mov    dh,0x4c
  41b85a:	jg     0x41b7e3
  41b85c:	inc    edx
  41b85d:	pop    ebx
  41b85e:	cld    
  41b85f:	jmp    0x62482e60
  41b864:	daa    
  41b865:	(bad)  
  41b866:	in     al,0xa9
	...
  41b890:	add    BYTE PTR [eax],al
  41b892:	xor    ebx,DWORD PTR [ebx+0x0]
  41b895:	test   al,0xa3
  41b897:	push   ecx
  41b898:	pop    es
  41b899:	ja     0x41b862
  41b89b:	inc    ebx
  41b89c:	jg     0x41b824
  41b89e:	inc    edx
  41b89f:	pop    ebx
  41b8a0:	cld    
  41b8a1:	jmp    0xf04c2922
  41b8a6:	jnp    0x41b87e
  41b8a8:	xor    ah,BYTE PTR [eax-0x38]
  41b8ab:	fadd   st(2),st
  41b8ad:	in     eax,0xb6
  41b8af:	inc    ebx
  41b8b0:	jg     0x41b8b2
  41b8b2:	lock xchg esi,eax
  41b8b4:	or     eax,DWORD PTR [eax]
  41b8b6:	addr16 cdq 
  41b8b8:	jmp    0x41b8c0
  41b8ba:	pop    esp
  41b8bb:	pusha  
  41b8bc:	test   DWORD PTR [esi],edi
  41b8be:	fsubr  QWORD PTR [ebx+0x7d]
  41b8c1:	out    0x57,al
  41b8c3:	stos   BYTE PTR es:[edi],al
  41b8c4:	(bad)  
  41b8c5:	jmp    DWORD PTR [esi]
  41b8c7:	jne    0x41b8d5
  41b8c9:	mov    ecx,DWORD PTR [ebx+ebx*8-0x21]
  41b8cd:	aas    
  41b8ce:	push   ss
  41b8cf:	jl     0x41b8e1
  41b8d1:	or     DWORD PTR [ecx],ebx
  41b8d3:	aam    0x18
  41b8d5:	add    DWORD PTR [edi+edx*2-0x10],0xe7992703
  41b8dd:	add    al,0x1e
  41b8df:	rol    BYTE PTR [ebp+0x7fcbae32],0xc2
  41b8e6:	and    edx,ebx
  41b8e8:	xor    BYTE PTR [ebx+0x33075f01],al
  41b8ee:	sahf   
  41b8ef:	imul   eax,DWORD PTR [ebp-0x7d],0xffffffd7
  41b8f3:	push   ebp
  41b8f4:	or     ecx,0x0
	...
  41b91e:	add    BYTE PTR [eax],al
  41b920:	xor    dl,ch
  41b922:	mov    DWORD PTR [ebp+0x67],eax
  41b925:	dec    edx
  41b926:	call   0x9b9052
  41b92b:	pop    edi
  41b92c:	jns    0x41b972
  41b92e:	test   esp,ebp
  41b930:	sbb    bl,BYTE PTR [ecx+0x165c0004]
  41b936:	and    al,0x4
  41b938:	ins    DWORD PTR es:[edi],dx
  41b939:	bnd jae 0x41b97d
  41b93c:	xlat   BYTE PTR ds:[ebx]
  41b93d:	ror    BYTE PTR [edx],cl
  41b93f:	mov    DWORD PTR [edi+0x2404c2da],ebp
  41b945:	call   0x4174:0x722d8104
  41b94c:	xchg   edi,eax
  41b94d:	sub    ebp,esi
  41b94f:	ret    0x59a3
  41b952:	xchg   DWORD PTR [esi+edi*1+0x50],eax
  41b956:	or     BYTE PTR [edx+0x42a816],bh
  41b95c:	mov    ch,0x8b
  41b95e:	mov    cl,BYTE PTR [edx]
  41b960:	mov    ebp,0x7c810533
  41b965:	outs   dx,DWORD PTR ds:[esi]
  41b966:	cmp    dl,0x56
  41b969:	mov    DWORD PTR [edx+0x0],0x4bf65ec
  41b970:	ds (bad) 
  41b972:	mov    ah,bl
  41b974:	out    dx,al
  41b975:	ret    
  41b976:	xor    BYTE PTR [ecx+0x5b887c03],cl
  41b97c:	xor    al,BYTE PTR [edi]
  41b97e:	ss clc 
  41b980:	mov    edx,fs
  41b982:	jmp    0x41b9a4
	...
  41b9ab:	add    BYTE PTR [eax],al
  41b9ad:	add    BYTE PTR [esi],bh
  41b9af:	jb     0x41b9b2
  41b9b1:	push   0x420696
  41b9b6:	mov    bl,0x2f
  41b9b8:	fcom   QWORD PTR [eax+0x26]
  41b9bb:	int3   
  41b9bc:	add    al,0x0
  41b9be:	ds inc ecx
  41b9c0:	xchg   DWORD PTR [ebx+0x6],eax
  41b9c3:	inc    ebx
  41b9c4:	in     al,dx
  41b9c5:	jo     0x41ba05
  41b9c7:	jb     0x41b9ca
  41b9c9:	pop    ecx
  41b9ca:	(bad)  
  41b9cb:	mov    ?,WORD PTR [edi]
  41b9cd:	ret    0x7246
  41b9d0:	mov    DWORD PTR ss:[edx-0x7576f3aa],eax
  41b9d7:	mov    es,WORD PTR ds:0x932ff87
  41b9dd:	mov    dh,0x47
  41b9df:	mov    bl,0xe3
  41b9e1:	sbb    BYTE PTR [edi+0x7ebf8c78],dh
  41b9e7:	test   DWORD PTR [edi-0xb2c80f9],ecx
  41b9ed:	or     BYTE PTR [ebx+edi*8+0xd],al
  41b9f1:	xchg   DWORD PTR [edi+0x32],edi
  41b9f4:	or     DWORD PTR [esi-0x1ad7a4c9],esi
  41b9fa:	inc    esi
  41b9fb:	push   eax
  41b9fc:	icebp  
  41b9fd:	mov    WORD PTR [edx+edx*8+0x38],es
  41ba01:	xchg   DWORD PTR [edi+edx*2+0x60],edi
  41ba05:	(bad)  
  41ba06:	dec    BYTE PTR [ebx+0x7d]
  41ba09:	inc    DWORD PTR [eax+0x62]
  41ba0c:	jo     0x41b9d3
  41ba0e:	dec    BYTE PTR [ebx+0x7d]
  41ba11:	or     eax,0x0
	...
  41ba3a:	add    BYTE PTR [eax],al
  41ba3c:	test   eax,0x348ccf7a
  41ba41:	shr    BYTE PTR [eax],cl
  41ba43:	inc    esp
  41ba44:	dec    ebx
  41ba45:	(bad)
  41ba48:	jno    0x41bab5
  41ba4a:	loop   0x41ba59
  41ba4c:	rcl    DWORD PTR [ecx+0x60],0xc5
  41ba50:	dec    BYTE PTR [ebx+0x3d]
  41ba53:	or     eax,0xeef79f9
  41ba58:	inc    esp
  41ba59:	dec    esp
  41ba5a:	cmp    eax,0x609a4104
  41ba5f:	push   cs
  41ba60:	xchg   DWORD PTR [ecx-0x2f90fc11],ebx
  41ba66:	xor    esp,DWORD PTR [eax]
  41ba68:	inc    esi
  41ba69:	shl    BYTE PTR [ebx],1
  41ba6b:	and    BYTE PTR [edx],bh
  41ba6d:	shr    cl,1
  41ba6f:	les    edx,FWORD PTR [esi]
  41ba71:	arpl   WORD PTR [edi+0x4],bp
  41ba74:	cmp    eax,edx
  41ba76:	jmp    0x5faca13f
  41ba7b:	add    al,0x29
  41ba7d:	shr    cl,1
  41ba7f:	(bad)  
  41ba80:	(bad)  
  41ba81:	push   edx
  41ba82:	outs   dx,DWORD PTR ds:[esi]
  41ba83:	add    al,0x19
  41ba85:	shl    BYTE PTR [edx+0x6aaab944],cl
  41ba8b:	lds    eax,FWORD PTR [edx-0x30]
  41ba8e:	out    0x8b,eax
  41ba90:	aas    
  41ba91:	shr    cl,1
  41ba93:	les    esp,FWORD PTR [esi+0x71046f62]
  41ba99:	rol    BYTE PTR [eax],1
  41ba9b:	jmp    0x41ba1f
  41ba9d:	jb     0x41baaf
  41ba9f:	popa   
	...
  41bac8:	add    BYTE PTR [eax],al
  41baca:	cmp    bh,BYTE PTR [ecx+ecx*4]
  41bacd:	jmp    0x41ba51
  41bacf:	jb     0x41bad9
  41bad1:	jno    0x41bb0d
  41bad3:	cmp    al,0x89
  41bad5:	sti    
  41bad6:	mov    ch,0xaa
  41bad8:	mov    al,ch
  41bada:	inc    eax
  41badb:	cdq    
  41badc:	or     cl,ch
  41bade:	cs aam 0xe3
  41bae1:	push   0x59
  41bae3:	dec    esi
  41bae4:	push   ecx
  41bae5:	lahf   
  41bae6:	sub    al,0xd2
  41bae8:	inc    ebx
  41bae9:	fnsave [eax+0x53720827]
  41baef:	ror    BYTE PTR [ebx-0xf],cl
  41baf2:	rcl    BYTE PTR [ebx],0x4
  41baf5:	pusha  
  41baf6:	nop
  41baf7:	mov    ebx,0x922ae5e9
  41bafc:	jg     0x41bb08
  41bafe:	inc    esp
  41baff:	push   0x924aee0d
  41bb04:	xchg   DWORD PTR [edi],edx
  41bb06:	add    al,BYTE PTR [edx-0x1cf447fc]
  41bb0c:	(bad)  
  41bb0d:	test   al,0x24
  41bb0f:	dec    esp
  41bb10:	das    
  41bb11:	scas   eax,DWORD PTR es:[edi]
  41bb12:	lds    ebp,FWORD PTR [edi+edi*2-0x36]
  41bb16:	out    0x78,eax
  41bb18:	add    cl,ch
  41bb1a:	sub    al,0x92
  41bb1c:	xchg   DWORD PTR [edi-0x7ef7e03],esp
  41bb22:	or     esp,ebx
  41bb24:	into   
  41bb25:	test   al,0xd4
  41bb27:	pop    ebp
  41bb28:	das    
  41bb29:	xchg   edi,eax
  41bb2a:	mov    ch,0x6c
  41bb2c:	jg     0x41bab8
	...
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	xor    ebp,DWORD PTR [ecx+esi*1]
  41bb5b:	fisubr DWORD PTR [edx*4-0x7e024879]
  41bb62:	add    bl,al
  41bb64:	in     al,dx
  41bb65:	loop   0x41bb35
  41bb67:	add    dh,ah
  41bb69:	test   DWORD PTR [eax],ecx
  41bb6b:	xor    ecx,ecx
  41bb6d:	out    0xef,al
  41bb6f:	xor    DWORD PTR [esp+edx*4+0x4d97ff00],0x9e0189da
  41bb7a:	out    0x8,al
  41bb7c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bb7e:	test   DWORD PTR [ebp-0xd],esi
  41bb81:	pop    ebp
  41bb82:	test   BYTE PTR [ebx-0x10426d8e],0x60
  41bb89:	(bad)  
  41bb8b:	add    esi,ebp
  41bb8d:	lea    eax,ds:0x2dacdef9
  41bb93:	into   
  41bb94:	fimul  WORD PTR [edi-0x37121c83]
  41bb9a:	stos   BYTE PTR es:[edi],al
  41bb9b:	stos   BYTE PTR es:[edi],al
  41bb9c:	jbe    0x41bb56
  41bb9e:	sub    eax,0x124ae2d9
  41bba3:	mov    DWORD PTR [eax],ecx
  41bba5:	sahf   
  41bba6:	jmp    0x41bbc7
  41bba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bba9:	jl     0x41bba8
  41bbab:	mov    BYTE PTR ds:0xdac7fa65,dh
  41bbb1:	xchg   ebp,eax
  41bbb2:	or     BYTE PTR [eax],al
  41bbb4:	pop    ss
  41bbb5:	pop    esi
  41bbb6:	test   esi,ecx
  41bbb8:	out    0x7b,al
  41bbba:	sbb    al,0x89
	...
  41bbe4:	add    BYTE PTR [eax],al
  41bbe6:	loopne 0x41bb84
  41bbe8:	jmp    0x41bbee
  41bbea:	sahf   
  41bbeb:	pop    DWORD PTR ds:0x7f9c9efb
  41bbf1:	shr    bl,0x4e
  41bbf4:	push   ds
  41bbf5:	mov    ecx,edx
  41bbf7:	fsubrp st(6),st
  41bbf9:	aas    
  41bbfa:	pop    esp
  41bbfb:	push   0xffffffb1
  41bbfd:	call   0x8941da15
  41bc02:	add    BYTE PTR [ebp+0x7b6606eb],bl
  41bc08:	cld    
  41bc09:	add    BYTE PTR [esi],bh
  41bc0b:	test   BYTE PTR [ecx],al
  41bc0d:	or     DWORD PTR [ecx+0x3e3f5bdb],ecx
  41bc13:	jmp    0x41bbcc
  41bc15:	mov    edi,0xe58289a1
  41bc1a:	stos   BYTE PTR es:[edi],al
  41bc1b:	add    DWORD PTR [ecx],0x0
  41bc1e:	xor    eax,0xff78e931
  41bc23:	or     DWORD PTR [edx-0x10d78023],0x7e
  41bc2a:	mov    eax,ds:0x3e00010f
  41bc2f:	jge    0x41bbc1
  41bc31:	call   0x87437f26
  41bc36:	jmp    0x41bc67
  41bc38:	mov    al,dh
  41bc3a:	mov    ebp,0x7586fd43
  41bc3f:	je     0x41bc38
  41bc41:	xchg   BYTE PTR [eax+0x4],bh
  41bc44:	fistp  QWORD PTR ds:0xe88e8fc5
	...
  41bc72:	add    BYTE PTR [eax],al
  41bc74:	retf   
  41bc75:	ret    0x901
  41bc78:	retf   
  41bc79:	dec    edi
  41bc7a:	mov    bl,ch
  41bc7c:	call   DWORD PTR [ecx-0x1]
  41bc7f:	jle    0x41bc9a
  41bc81:	ja     0x41bc85
  41bc83:	add    BYTE PTR [esi],bh
  41bc85:	jge    0x41bc17
  41bc87:	call   0x87438031
  41bc8c:	stc    
  41bc8d:	ret    
  41bc8e:	in     eax,0xe
  41bc90:	mov    edi,0x3e00d8a1
  41bc95:	or     BYTE PTR [edx],0xb5
  41bc98:	push   ss
  41bc99:	or     al,0x43
  41bc9b:	add    bh,al
  41bc9d:	rol    ebx,0xed
  41bca0:	dec    eax
  41bca1:	add    ebx,ebp
  41bca3:	cld    
  41bca4:	add    BYTE PTR ds:[ecx],0x9
  41bca8:	test   eax,0x3e3f4d9a
  41bcad:	pop    ebx
  41bcae:	fcom   st(1)
  41bcb0:	mov    ecx,0x2adea891
  41bcb5:	loop   0x41bc75
  41bcb7:	vmaxsd xmm4,xmm5,QWORD PTR [eax-0x2d]
  41bcbc:	inc    ecx
  41bcbd:	je     0x41bd2f
  41bcbf:	mov    esi,0x12e39bbf
  41bcc4:	dec    eax
  41bcc5:	loop   0x41bc5c
  41bcc7:	sbb    DWORD PTR [eax-0x32ef9dc8],0xffffff83
  41bcce:	jecxz  0x41bd14
  41bcd0:	ds loop 0x41bd11
  41bcd3:	lds    ebx,FWORD PTR [ebx+0xdf6861]
	...
  41bd01:	add    BYTE PTR [edx+0x4703e75b],al
  41bd07:	mov    al,0x4f
  41bd09:	pop    edx
  41bd0a:	xor    DWORD PTR [ebx+0x70],ebx
  41bd0d:	mov    bh,0xa9
  41bd0f:	mov    ch,ah
  41bd11:	test   BYTE PTR [ebx+0x77],bl
  41bd14:	out    0x3,eax
  41bd16:	ds fs pop esi
  41bd19:	in     al,dx
  41bd1a:	(bad)  
  41bd1b:	sbb    edi,esp
  41bd1d:	mov    WORD PTR [ebx-0x66],gs
  41bd20:	push   es
  41bd21:	out    dx,al
  41bd22:	sar    BYTE PTR [edi+0xb],0x4
  41bd26:	ds pop ebx
  41bd28:	repnz mov fs,WORD PTR [esi]
  41bd2b:	icebp  
  41bd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd2d:	add    eax,ecx
  41bd2f:	in     eax,dx
  41bd30:	cli    
  41bd31:	mov    eax,?
  41bd33:	(bad)  [edi]
  41bd35:	add    cl,al
  41bd37:	mov    ebx,DWORD PTR [edx]
  41bd39:	idiv   BYTE PTR [eax+0x4bdd6a98]
  41bd3f:	in     al,0x1b
  41bd41:	xchg   ecx,eax
  41bd42:	push   ss
  41bd43:	mul    BYTE PTR [edi]
  41bd45:	add    al,0x47
  41bd47:	out    dx,al
  41bd48:	mov    edx,0xce9a138c
  41bd4d:	std    
  41bd4e:	push   0x3db50080
  41bd53:	pop    ebx
  41bd54:	add    dl,ah
  41bd56:	enter  0x7982,0x28
  41bd5a:	cmp    ah,al
  41bd5c:	(bad)  [eax-0x71809720]
  41bd62:	jmp    0x12abdc1
	...
  41bd8f:	add    BYTE PTR [esi+ebp*4-0x18],al
  41bd93:	add    bl,bh
  41bd95:	pop    edx
  41bd96:	xchg   DWORD PTR [esi+0x68168582],ebx
  41bd9c:	xor    BYTE PTR [esi+0x0],0xe9
  41bda0:	cmp    eax,0x51b562
  41bda5:	cmp    BYTE PTR [eax],al
  41bda7:	sbb    BYTE PTR [ebx+0x75],dh
  41bdaa:	dec    ebx
  41bdab:	push   ecx
  41bdac:	mov    esp,0x40e9f7f3
  41bdb1:	fsubr  QWORD PTR [ecx-0x788a77b9]
  41bdb7:	xor    DWORD PTR [edx+0x7b601d7a],eax
  41bdbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdbe:	out    dx,al
  41bdbf:	pusha  
  41bdc0:	sbb    BYTE PTR [edi-0x11],0x70
  41bdc4:	lea    eax,[edi-0x38]
  41bdc7:	jo     0x41be45
  41bdc9:	mul    eax
  41bdcb:	inc    ebx
  41bdcc:	xchg   edi,eax
  41bdcd:	les    ebp,FWORD PTR [edx-0x28b90828]
  41bdd3:	jo     0x41bdc2
  41bdd5:	mov    dh,0xe0
  41bdd7:	fidivr WORD PTR [edx-0x4df83073]
  41bddd:	cdq    
  41bdde:	pop    es
  41bddf:	sti    
  41bde0:	lds    ecx,FWORD PTR [ebx+0x4642d1bf]
  41bde6:	enter  0xff70,0xf6
  41bdea:	loopne 0x41bdc2
  41bdec:	cmp    bh,BYTE PTR [eax+0x0]
  41bdef:	sbb    BYTE PTR [ebp+0xd8de],dh
	...
  41be1d:	add    BYTE PTR [esi-0x6acef781],ah
  41be23:	loop   0x41bdf5
  41be25:	sar    edi,0x59
  41be28:	sub    eax,0x7d9c5ec8
  41be2d:	jecxz  0x41be23
  41be2f:	dec    ebx
  41be30:	das    
  41be31:	xor    esp,esi
  41be33:	mov    cl,0x85
  41be35:	fcom   DWORD PTR [esi-0x1acefd81]
  41be3b:	loop   0x41be05
  41be3d:	ror    edi,0x6f
  41be40:	shr    BYTE PTR cs:[esi],1
  41be43:	pushf  
  41be44:	jge    0x41be29
  41be46:	sub    BYTE PTR [eax-0x4b2a0000],dl
  41be4c:	test   eax,ebx
  41be4e:	data16 jg 0x41be61
  41be51:	xor    DWORD PTR [esi-0x1e],edx
  41be54:	enter  0xffc1,0x5a
  41be58:	sub    eax,0x7d9bded0
  41be5d:	jecxz  0x41bec7
  41be5f:	pop    edi
  41be60:	or     ecx,DWORD PTR [edi]
  41be62:	data16 mov ah,0x87
  41be65:	inc    ebp
  41be66:	pop    edi
  41be67:	cdq    
  41be68:	fild   WORD PTR [esi+edx*2]
  41be6b:	mov    ds:0x35e41885,eax
  41be70:	or     BYTE PTR [esp+ecx*8],al
  41be73:	xor    eax,0x2f478908
  41be78:	pop    esi
  41be79:	pop    ebx
  41be7a:	sahf   
  41be7b:	sbb    DWORD PTR [ecx-0x3e],0x2f
  41be7f:	pop    edx
  41be80:	dec    edi
  41be81:	push   esi
	...
  41beaa:	add    BYTE PTR [eax],al
  41beac:	lods   al,BYTE PTR ds:[esi]
  41bead:	xor    esp,DWORD PTR [esp+ecx*1]
  41beb0:	mov    cl,0xe2
  41beb2:	je     0x41bed8
  41beb4:	not    DWORD PTR [edi]
  41beb6:	xor    esi,0xfcd0608
  41bebc:	mov    cl,0x98
  41bebe:	or     esi,DWORD PTR [edi-0x74ce3bc2]
  41bec4:	jge    0x41bf42
  41bec6:	xor    eax,ebp
  41bec8:	mov    ebx,DWORD PTR [edx-0x73a9022c]
  41bece:	dec    ebp
  41becf:	aas    
  41bed0:	ds pushf 
  41bed2:	or     ah,bh
  41bed4:	fld    st(4)
  41bed6:	add    al,0xb5
  41bed8:	enter  0x2f35,0xe8
  41bedc:	jg     0x41be98
  41bede:	aam    0xfd
  41bee0:	push   esi
  41bee1:	pop    esp
  41bee2:	dec    ebp
  41bee3:	aas    
  41bee4:	ds fmul st(4),st
  41bee7:	stc    
  41bee8:	mov    cl,0xdc
  41beea:	xor    ebx,DWORD PTR [ecx+0x7c]
  41beed:	imul   eax,DWORD PTR [ecx],0x53
  41bef0:	mov    bh,0xe6
  41bef2:	xor    DWORD PTR [eax-0x13],edx
  41bef5:	clc    
  41bef6:	cmp    eax,0x59ec508
  41befb:	mov    esi,ebx
  41befd:	sti    
  41befe:	cs push eax
  41bf00:	xchg   esi,eax
  41bf01:	mov    esi,0x9b79fdd5
  41bf06:	imul   esi,DWORD PTR [edi+edi*8-0x7d],0xd3664386
  41bf0e:	jmp    0x41c008
	...
  41bf37:	add    BYTE PTR [eax],al
  41bf39:	add    BYTE PTR [edx+0x2c],ah
  41bf3c:	aam    0x68
  41bf3e:	scas   ax,WORD PTR es:[edi]
  41bf40:	inc    edx
  41bf41:	add    bl,al
  41bf43:	(bad)  
  41bf44:	fst    DWORD PTR [eax+0x56]
  41bf47:	dec    edx
  41bf48:	aad    0xfd
  41bf4a:	inc    ecx
  41bf4b:	fld    TBYTE PTR [ecx+0x73]
  41bf4e:	jg     0x41bed2
  41bf50:	xchg   BYTE PTR [ebx+0x36],al
  41bf53:	shr    ecx,cl
  41bf55:	fldcw  WORD PTR [edx]
  41bf57:	jbe    0x41bf2a
  41bf59:	push   ecx
  41bf5a:	mov    bl,0xc7
  41bf5c:	fst    DWORD PTR [eax+0x26]
  41bf5f:	add    ebp,edx
  41bf61:	std    
  41bf62:	adc    DWORD PTR [edx+eax*2+0x7d],ebx
  41bf66:	sbb    dl,BYTE PTR [edi]
  41bf68:	test   eax,0x601001fc
  41bf6d:	jmp    0x37394731
  41bf72:	mov    al,ah
  41bf74:	and    al,0xfc
  41bf76:	mov    dh,0xee
  41bf78:	jmp    0xe637:0x17737d80
  41bf7f:	jno    0x41bf33
  41bf81:	rcl    ebx,cl
  41bf83:	out    0x2c,al
  41bf85:	aam    0x6e
  41bf87:	fsubr  DWORD PTR [edx-0x7b7c9104]
  41bf8d:	iret   
  41bf8e:	mov    ebx,0x2a5bff74
  41bf93:	sbb    ah,bh
  41bf95:	cmp    ch,0x72
  41bf98:	pop    ss
  41bf99:	fmul   st(3),st
  41bf9b:	ja     0x41c013
  41bf9d:	rol    DWORD PTR [eax],cl
	...
  41bfc7:	add    BYTE PTR [esi],ah
  41bfc9:	add    esi,ebx
  41bfcb:	inc    esp
  41bfcc:	ds out 0xac,al
  41bfcf:	shr    esi,cl
  41bfd1:	xor    BYTE PTR [eax-0x30],0x83
  41bfd5:	je     0x41c039
  41bfd7:	xor    DWORD PTR [edx-0x20],edi
  41bfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdb:	sar    DWORD PTR [ecx+0x57d431e],cl
  41bfe1:	imul   ecx,edi,0xffffffdb
  41bfe4:	jmp    0x9772:0xfd80e719
  41bfeb:	fninit 
  41bfed:	jbe    0x41c015
  41bfef:	rcl    esi,cl
  41bff1:	adc    BYTE PTR [ebx-0x5319c1bc],0xd3
  41bff8:	mov    es,WORD PTR [ebx+0x7433cf88]
  41bffe:	jb     0x41c031
  41c000:	sub    ah,al
  41c002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c003:	sar    DWORD PTR [ecx-0x650affe3],cl
  41c009:	adc    al,dh
  41c00b:	xor    DWORD PTR [ebp-0x18],0x17bee93e
  41c012:	clc    
  41c013:	cmp    edx,esp
  41c015:	sbb    eax,0x30cd6fc
  41c01a:	push   0x8b5b7b54
  41c01f:	sub    al,0x12
  41c021:	or     ebp,eax
  41c023:	add    BYTE PTR [esi],cl
  41c025:	jbe    0x41c024
  41c027:	pop    ds
  41c028:	mov    edi,0x19f817
	...
  41c055:	add    dl,dh
  41c057:	jp     0x41c052
  41c059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c05a:	in     al,dx
  41c05b:	fld    st(6)
  41c05d:	icebp  
  41c05e:	pop    es
  41c05f:	loopne 0x41c0a4
  41c061:	cdq    
  41c062:	ins    DWORD PTR es:[edi],dx
  41c063:	adc    ecx,0xffffff92
  41c066:	mov    WORD PTR [ebp+0x5e],?
  41c069:	and    ch,BYTE PTR [ebx]
  41c06b:	xchg   DWORD PTR [ebx-0x55],ebx
  41c06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06f:	jae    0x41c0c5
  41c071:	pusha  
  41c072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c073:	repz jmp 0x41c0d3
  41c076:	cmp    bl,BYTE PTR [ebx+0x0]
  41c079:	mov    edx,0xbc890e47
  41c07e:	test   edx,esp
  41c080:	jae    0x41c067
  41c082:	mov    esi,0x8c4f80d7
  41c087:	jne    0x41c0d9
  41c089:	push   ecx
  41c08a:	into   
  41c08b:	jae    0x41c08a
  41c08d:	jmp    0x41aa1b95
  41c092:	div    BYTE PTR [ebx]
  41c094:	add    BYTE PTR [ecx-0x36],al
  41c097:	je     0x41c096
  41c099:	xor    cl,BYTE PTR es:[ecx-0x189a9476]
  41c0a0:	ds jmp 0xab74185b
  41c0a6:	mov    eax,0xc3000875
  41c0ab:	xchg   ebx,eax
  41c0ad:	test   DWORD PTR [edi+0x26fffb8c],edi
  41c0b3:	pop    edi
  41c0b4:	add    BYTE PTR [eax],al
  41c0b6:	cmp    al,0x2a
  41c0b8:	test   eax,esi
	...
  41c0e2:	add    BYTE PTR [eax],al
  41c0e4:	mov    ds,edx
  41c0e6:	je     0x41c0e6
  41c0e8:	loopne 0x41c076
  41c0ea:	sub    eax,0x8747fcd2
  41c0ef:	test   DWORD PTR [ebx+0x6efffb8d],ecx
  41c0f5:	fidivr DWORD PTR [esi+edi*8-0x60]
  41c0f9:	mov    ebx,?
  41c0fb:	test   DWORD PTR [ebx],ebx
  41c0fd:	(bad)  
  41c0fe:	sti    
  41c0ff:	call   FWORD PTR [edx+esi*8+0x7b]
  41c103:	(bad)  
  41c104:	mov    al,ds:0xd4be0b8c
  41c109:	xlat   BYTE PTR ds:[ebx]
  41c10a:	loopne 0x41c18b
  41c10c:	sbb    al,0xe2
  41c10e:	jl     0x41c10e
  41c110:	ror    BYTE PTR [ebx+ecx*1-0x7b27f4a],0x88
  41c118:	xchg   esi,eax
  41c119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c11a:	(bad)  
  41c11b:	jmp    DWORD PTR [ecx+ebx*1+0x7f]
  41c11f:	cli    
  41c120:	lahf   
  41c121:	and    DWORD PTR [ecx],eax
  41c123:	sbb    BYTE PTR [edi+edx*2+0x71],0xc6
  41c128:	leave  
  41c129:	xor    al,0xe8
  41c12b:	imul   edx,DWORD PTR [ecx],0xffffff8c
  41c12e:	sti    
  41c12f:	cmp    DWORD PTR [edx+0xfffe1f],0x57
  41c136:	cmp    BYTE PTR [ebx],0x57
  41c139:	or     DWORD PTR [ebx-0x1e12d7d],esp
  41c13f:	jmp    DWORD PTR [eax]
  41c141:	push   edi
  41c142:	jno    0x41c0e2
  41c144:	rcr    cl,cl
  41c146:	cmp    dh,0x0
	...
  41c171:	add    BYTE PTR [eax],ah
  41c173:	mov    WORD PTR [eax-0x18],ss
  41c176:	ds loope 0x41c17b
  41c179:	add    BYTE PTR [esi],bh
  41c17b:	shr    DWORD PTR [edi],0x59
  41c17e:	mov    bh,0x47
  41c180:	sub    eax,0x368436c2
  41c185:	xchg   DWORD PTR [ebx],esp
  41c187:	add    esp,eax
  41c189:	mov    WORD PTR [edi],?
  41c18b:	test   BYTE PTR [ecx],al
  41c18d:	push   ecx
  41c18e:	jo     0x41c1c1
  41c190:	jnp    0x41c1ed
  41c192:	ss in  eax,dx
  41c194:	push   ebp
  41c195:	or     al,0xcb
  41c197:	inc    BYTE PTR [eax+0x31a0f1fe]
  41c19d:	call   0x43458b
  41c1a2:	push   esp
  41c1a3:	test   BYTE PTR [ecx-0x18],bl
  41c1a6:	push   ebx
  41c1a7:	inc    ebx
  41c1a8:	add    al,0xe8
  41c1aa:	in     eax,dx
  41c1ab:	mov    esi,0xb60ffdd0
  41c1b0:	jnp    0x41c134
  41c1b2:	(bad)  
  41c1b3:	inc    esi
  41c1b4:	inc    ecx
  41c1b5:	add    dh,al
  41c1b7:	jg     0x41c1cc
  41c1b9:	inc    edx
  41c1ba:	mov    ebp,0xaf7bf1cd
  41c1bf:	rol    BYTE PTR [esi-0x300f5f88],0xff
  41c1c6:	cdq    
  41c1c7:	add    DWORD PTR [ecx],0xffffffe9
  41c1ca:	jmp    0xcf8f:0xc387d0fa
  41c1d1:	std    
  41c1d2:	adc    DWORD PTR [edx-0x4a],0xe9
	...
  41c1fd:	add    BYTE PTR [eax],al
  41c1ff:	add    BYTE PTR [esi],ch
  41c201:	std    
  41c202:	test   DWORD PTR [eax+esi*2+0x20],esi
  41c206:	rol    BYTE PTR [edi-0x230683d],1
  41c20c:	popa   
  41c20d:	xor    BYTE PTR [esi-0x2fd7a78c],al
  41c213:	mov    ebx,eax
  41c215:	mov    edi,0x5a49fdcf
  41c21a:	not    BYTE PTR [ecx+0x5007de3f]
  41c220:	(bad)  
  41c221:	scas   al,BYTE PTR es:[edi]
  41c222:	xchg   ebx,eax
  41c223:	shl    DWORD PTR [ebx],1
  41c225:	jno    0x41c205
  41c227:	cdq    
  41c228:	imul   ebp,DWORD PTR [edx],0xffffffff
  41c22b:	jp     0x41c24e
  41c22d:	xchg   edi,eax
  41c22e:	jmp    0x2ecd:0x6a1d7f03
  41c235:	out    dx,al
  41c236:	jecxz  0x41c1bb
  41c238:	inc    edi
  41c239:	pop    ebx
  41c23a:	pop    esp
  41c23b:	(bad)  
  41c23c:	push   0xf5cecf09
  41c241:	jo     0x41c219
  41c243:	sbb    DWORD PTR [ebp-0x1430330d],0x5b
  41c24a:	or     edi,DWORD PTR ds:0x85e6
  41c24f:	adc    DWORD PTR [ebp-0x2c304b0d],0x5b
  41c256:	xor    al,0x6e
  41c258:	mov    ch,0xd6
  41c25a:	addr16 into 
  41c25c:	ret    
  41c25d:	jo     0x41c296
  41c25f:	fsubr  st(1),st
  41c261:	pop    ebx
  41c262:	out    0x3,eax
	...
  41c28c:	add    BYTE PTR [eax],al
  41c28e:	adc    edx,DWORD PTR [ecx]
  41c290:	xor    bh,BYTE PTR [ebp-0x66]
  41c293:	push   cs
  41c294:	test   eax,0x150da1fc
  41c299:	aaa    
  41c29a:	(bad)  
  41c29b:	pop    ss
  41c29c:	retf   
  41c29d:	repz sbb esp,esp
  41c2a0:	or     ebp,DWORD PTR [eax]
  41c2a2:	xor    bh,cl
  41c2a4:	imul   ebp,DWORD PTR [ebx-0x398f9bf3],0xffffffc5
  41c2ab:	repz mul BYTE PTR [ebp-0x4c]
  41c2af:	pop    edx
  41c2b0:	out    0xda,eax
  41c2b2:	fidiv  WORD PTR ss:[edi-0x3a67470d]
  41c2b9:	adc    al,0x6c
  41c2bb:	pusha  
  41c2bc:	add    BYTE PTR [esi-0x74],bh
  41c2bf:	or     eax,0x204a2981
  41c2c4:	call   0xfdb02c36
  41c2c9:	xchg   ecx,eax
  41c2ca:	adc    eax,0x15e93ee7
  41c2cf:	xor    eax,0x5df90ef7
  41c2d4:	mov    ch,0x22
  41c2d6:	ins    DWORD PTR es:[edi],dx
  41c2d7:	push   es
  41c2d8:	call   0xfdafb356
  41c2dd:	xor    DWORD PTR [ebp-0x14],0x38e5e93e
  41c2e4:	mul    esi
  41c2e6:	lock pop ebp
  41c2e8:	mov    ch,0xc2
  41c2ea:	sub    al,0x9
  41c2ec:	call   0xfdafcc26
  41c2f1:	add    BYTE PTR cs:[eax],al
	...
  41c31c:	sbb    BYTE PTR [edx],dl
  41c31e:	ret    0x3df1
  41c321:	or     cl,BYTE PTR [ecx+0x5163261d]
  41c327:	rcl    esp,0x68
  41c32a:	std    
  41c32b:	scas   al,BYTE PTR es:[edi]
  41c32c:	ret    0x8099
  41c32f:	jmp    0x91fa1e71
  41c334:	adc    DWORD PTR [eax],esi
  41c336:	add    BYTE PTR [edx-0x53],ah
  41c339:	fcom   DWORD PTR [ecx]
  41c33b:	push   0x7d
  41c33d:	push   esi
  41c33e:	sub    DWORD PTR [edx-0xb97cbc7],0x86725b02
  41c348:	lds    eax,FWORD PTR [edx]
  41c34a:	jae    0x41c374
  41c34c:	inc    edx
  41c34d:	loop   0x41c35f
  41c34f:	jo     0x41c2dd
  41c351:	fcmovb st,st(0)
  41c353:	in     eax,0xbc
  41c355:	cdq    
  41c356:	add    al,0x14
  41c358:	xchg   edx,eax
  41c359:	jmp    0x41c399
  41c35b:	jmp    0x9b416f
  41c360:	adc    eax,0xcc530058
  41c365:	aas    
  41c366:	and    al,0x8
  41c368:	mov    ah,0x93
  41c36a:	call   0x7de2dc67
  41c36f:	ret    
  41c370:	xlat   BYTE PTR ds:[ebx]
  41c371:	pop    ebx
  41c372:	add    BYTE PTR [eax],al
  41c374:	lahf   
  41c375:	xchg   edx,eax
  41c376:	je     0x41c3b9
  41c378:	daa    
  41c379:	repnz push cs
  41c37b:	mov    DWORD PTR [edi],esp
  41c37d:	fidivr DWORD PTR [edi+0x4]
	...
  41c3a7:	add    BYTE PTR [eax],al
  41c3a9:	add    BYTE PTR [edx+ebx*4+0x13af3d04],dl
  41c3b0:	cmp    eax,0xb88d9500
  41c3b5:	push   0x8b001792
  41c3ba:	add    al,0xf2
  41c3bc:	jae    0xc0c12766
  41c3c2:	jecxz  0x41c421
  41c3c4:	call   0x7298da3e
  41c3c9:	out    dx,eax
  41c3ca:	sbb    al,0x99
  41c3cc:	add    al,0x0
  41c3ce:	xor    dh,dl
  41c3d0:	loopne 0x41c355
  41c3d2:	sti    
  41c3d3:	jg     0x41c425
  41c3d5:	push   esi
  41c3d6:	pop    esp
  41c3d7:	or     BYTE PTR ds:[ebx+0x45895b22],cl
  41c3de:	fbld   TBYTE PTR [edi]
  41c3e0:	dec    edi
  41c3e1:	call   0x3d63a0
  41c3e6:	or     dl,BYTE PTR [esi]
  41c3e8:	lock push eax
  41c3ea:	sub    bl,BYTE PTR [eax+ecx*1]
  41c3ed:	push   eax
  41c3ee:	scas   eax,DWORD PTR es:[edi]
  41c3ef:	ja     0x41c3e9
  41c3f1:	dec    DWORD PTR [eax]
  41c3f3:	out    dx,al
  41c3f4:	inc    eax
  41c3f5:	call   0x1101a021
  41c3fa:	les    edx,FWORD PTR [edx-0x5fe70731]
  41c400:	push   0x42903e68
  41c405:	add    BYTE PTR [ebx+0x5650c9b7],bh
  41c40b:	xchg   edi,eax
  41c40c:	retf   0xfd
	...
  41c437:	add    BYTE PTR [ecx-0x74],bl
  41c43a:	pop    ecx
  41c43b:	je     0x41c43c
  41c43d:	cmp    DWORD PTR [esi+0x43],0x4e
  41c441:	aam    0xd9
  41c443:	ins    DWORD PTR es:[edi],dx
  41c444:	inc    edi
  41c445:	xor    eax,0xc8a668cb
  41c44a:	inc    edx
  41c44b:	add    bl,al
  41c44d:	mov    esi,0xe31650d9
  41c452:	retf   0x21fd
  41c455:	jmp    0xb707c086
  41c45a:	rol    DWORD PTR [edi+0x5b7a687b],1
  41c460:	push   cs
  41c461:	stc    
  41c462:	sub    al,0xf4
  41c464:	mov    ch,0x3e
  41c466:	fadd   QWORD PTR [edi+0x5b7a8883]
  41c46c:	out    0x1b,al
  41c46e:	fdiv   QWORD PTR [edi+edi*2-0x7c]
  41c472:	jle    0x41c4b7
  41c474:	out    0x53,al
  41c476:	fdivr  QWORD PTR [ecx]
  41c478:	xlat   BYTE PTR ds:[ebx]
  41c479:	lods   al,BYTE PTR ds:[esi]
  41c47a:	int3   
  41c47b:	push   0x412fe6
  41c480:	mov    ebx,0xd650d436
  41c485:	xchg   dl,cl
  41c487:	std    
  41c488:	mov    ecx,0xff74dc4b
  41c48d:	cmp    DWORD PTR [esi+0x43],0xffffff96
  41c491:	xor    ebx,esp
  41c493:	sbb    eax,0x89ccd4a7
  41c498:	sti    
  41c499:	out    dx,eax
  41c49a:	ja     0x41c4df
	...
  41c4c4:	add    BYTE PTR [eax],al
  41c4c6:	mov    ?,edx
  41c4c8:	inc    ebp
  41c4c9:	cld    
  41c4ca:	mov    bh,0x5e
  41c4cc:	aam    0x89
  41c4ce:	jecxz  0x41c52a
  41c4d0:	pop    ebx
  41c4d1:	js     0x41c4d0
  41c4d3:	xor    BYTE PTR [eax+0x46],0x6a
  41c4d7:	jecxz  0x41c48d
  41c4d9:	fcmovnbe st,st(6)
  41c4db:	add    dl,ah
  41c4dd:	inc    edx
  41c4de:	ds loopne 0x41c48d
  41c4e1:	retf   
  41c4e2:	out    dx,al
  41c4e3:	add    BYTE PTR [eax-0x35],0x53
  41c4e7:	ins    DWORD PTR es:[edi],dx
  41c4e8:	mov    edi,0xe71bcd5b
  41c4ed:	jle    0x41c4ec
  41c4ef:	push   0xffffffb7
  41c4f1:	(bad)  [edi]
  41c4f3:	je     0x41c513
  41c4f5:	int3   
  41c4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f7:	add    ebx,DWORD PTR [edx+eax*2-0x245b21c2]
  41c4fe:	mov    es,WORD PTR [ebx+0x6d1bcb24]
  41c504:	xchg   ebp,eax
  41c505:	jle    0x41c584
  41c507:	jae    0x41c4a0
  41c509:	fcmovnb st,st(2)
  41c50b:	jae    0x41c4fb
  41c50d:	retf   
  41c50e:	mov    ch,0x15
  41c510:	out    dx,eax
  41c511:	xor    eax,ebp
  41c513:	push   ss
  41c514:	xlat   BYTE PTR ds:[ebx]
  41c515:	xor    al,0xe6
  41c517:	in     al,0xce
  41c519:	retf   
  41c51a:	jmp    0x41c4f4
  41c51c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c51d:	hlt    
  41c51e:	mov    ebx,esi
  41c520:	sub    al,0xdc
  41c522:	outs   dx,BYTE PTR ds:[esi]
  41c523:	adc    DWORD PTR [ecx-0x34],0xffffffd3
  41c527:	ins    BYTE PTR es:[edi],dx
  41c528:	adc    eax,0x2f
	...
  41c551:	add    BYTE PTR [eax],al
  41c553:	add    cl,al
  41c555:	jg     0x41c563
  41c557:	(bad)  
  41c558:	ss pop ebx
  41c55a:	cmp    al,0x7d
  41c55c:	popf   
  41c55d:	fimul  DWORD PTR [ebx-0x18934e88]
  41c563:	adc    BYTE PTR ss:[edx+eiz*2],al
  41c567:	sub    DWORD PTR [esi],esi
  41c569:	loopne 0x41c567
  41c56b:	test   esp,0x93ca67d6
  41c571:	ins    BYTE PTR es:[edi],dx
  41c572:	add    BYTE PTR [ecx],bl
  41c574:	push   0x7
  41c576:	(bad)  
  41c577:	outs   dx,BYTE PTR ds:[esi]
  41c578:	jne    0x41c57b
  41c57a:	add    cl,dl
  41c57c:	xchg   ebp,eax
  41c57d:	call   0x74d7aec0
  41c582:	sti    
  41c583:	push   esi
  41c584:	jne    0x41c5c2
  41c586:	shl    BYTE PTR [ebx-0x48],cl
  41c589:	xor    DWORD PTR [ebx-0x58],0x3d
  41c58d:	jecxz  0x41c593
  41c58f:	sti    
  41c590:	sti    
  41c591:	fsqrt  
  41c593:	rol    DWORD PTR [ecx],1
  41c595:	jl     0x41c55c
  41c597:	fs repnz ins BYTE PTR es:[edi],dx
  41c59a:	std    
  41c59b:	es inc ebx
  41c59d:	pop    ebx
  41c59e:	add    cl,ch
  41c5a0:	adc    BYTE PTR [edi],al
  41c5a2:	xchg   DWORD PTR [ecx],ebx
  41c5a4:	stos   DWORD PTR es:[edi],eax
  41c5a5:	fdiv   DWORD PTR [edi+ecx*1-0xb]
  41c5a9:	ins    DWORD PTR es:[edi],dx
  41c5aa:	das    
  41c5ab:	sbb    edi,ecx
  41c5ad:	sub    cl,BYTE PTR [ecx-0x292919c]
  41c5b3:	test   BYTE PTR [edx+0xef7cd8],0x0
	...
  41c5e2:	hlt    
  41c5e3:	ins    DWORD PTR es:[edi],dx
  41c5e4:	std    
  41c5e5:	ins    BYTE PTR es:[edi],dx
  41c5e6:	mov    DWORD PTR [ebp-0x3],ebp
  41c5e9:	fidiv  WORD PTR [eax-0x20]
  41c5ec:	jl     0x41c5c5
  41c5ee:	hlt    
  41c5ef:	ins    DWORD PTR es:[edi],dx
  41c5f0:	or     eax,0xe0da388f
  41c5f5:	inc    esi
  41c5f6:	pop    ecx
  41c5f7:	mov    al,0x7c
  41c5f9:	mov    edi,0x7f0d6e04
  41c5fe:	xor    al,0x3c
  41c600:	clc    
  41c601:	popa   
  41c602:	cmp    dl,BYTE PTR [ebp+0x1900e901]
  41c608:	and    DWORD PTR [ebx+0x6902f0a5],0xa7735b38
  41c612:	outs   dx,DWORD PTR ds:[esi]
  41c613:	add    eax,0xa14700e8
  41c618:	sti    
  41c619:	jmp    DWORD PTR [ebx+edi*4]
  41c61c:	js     0x41c61c
  41c61e:	adc    BYTE PTR [ecx+0x57cc8000],ah
  41c624:	jno    0x41c5cd
  41c626:	in     al,0xe2
  41c628:	js     0x41c628
  41c62a:	adc    BYTE PTR [ecx-0xd0e8b00],ah
  41c630:	add    BYTE PTR [eax+0x50fba0f1],0xef
  41c637:	mov    eax,ds:0x4110fff9
  41c63c:	pop    esi
  41c63d:	pop    ebx
  41c63e:	fiadd  WORD PTR [ebx+0x575fc259]
  41c644:	push   ecx
  41c645:	mov    DWORD PTR [eax],eax
	...
  41c66f:	add    BYTE PTR [edx+0x2e],cl
  41c672:	push   eax
  41c673:	push   ebx
  41c674:	jmp    0x9c4a1762
  41c679:	xor    ecx,DWORD PTR [ebx+ecx*4]
  41c67c:	retf   0x2e6e
  41c67f:	leave  
  41c680:	lea    ebp,[edx+0xe]
  41c683:	mov    bl,bl
  41c685:	arpl   bp,si
  41c687:	mov    bl,BYTE PTR [ebx]
  41c689:	jo     0x41c610
  41c68b:	add    al,0xee
  41c68d:	pop    ds
  41c68e:	jg     0x41c689
  41c690:	out    dx,eax
  41c691:	and    ch,cl
  41c693:	push   ebx
  41c694:	xor    eax,0x10faac87
  41c699:	xchg   ebp,eax
  41c69a:	sub    eax,0x176382d2
  41c69f:	mov    ch,bl
  41c6a1:	push   eax
  41c6a2:	xor    al,BYTE PTR [ecx]
  41c6a4:	dec    edi
  41c6a5:	pop    esi
  41c6a6:	inc    edx
  41c6a7:	or     DWORD PTR [ebp-0x390f8699],0xffffffb0
  41c6ae:	mov    al,BYTE PTR [edx+edi*4-0x6a]
  41c6b2:	mov    BYTE PTR [edx*4+0x3efa7f20],al
  41c6b9:	jl     0x41c700
  41c6bb:	icebp  
  41c6bc:	add    BYTE PTR ds:0xb5fbec79,ch
  41c6c2:	clc    
  41c6c3:	call   DWORD PTR [ecx+0x3e000174]
  41c6c9:	je     0x41c6cc
  41c6cb:	add    BYTE PTR [esi],bh
  41c6cd:	je     0x41c6d0
  41c6cf:	add    BYTE PTR [esi],bh
  41c6d1:	je     0x41c6d4
	...
  41c6fb:	add    BYTE PTR [eax],al
  41c6fd:	add    BYTE PTR [esi],bh
  41c6ff:	je     0x41c702
  41c701:	add    BYTE PTR [esi],bh
  41c703:	je     0x41c706
  41c705:	add    BYTE PTR [esi],bh
  41c707:	je     0x41c70a
  41c709:	add    BYTE PTR [esi],bh
  41c70b:	je     0x41c70e
  41c70d:	add    BYTE PTR [esi],bh
  41c70f:	je     0x41c712
  41c711:	add    BYTE PTR [esi],bh
  41c713:	je     0x41c716
  41c715:	add    BYTE PTR [esi],bh
  41c717:	je     0x41c71a
  41c719:	add    BYTE PTR [esi],bh
  41c71b:	je     0x41c71e
  41c71d:	add    BYTE PTR [esi],bh
  41c71f:	je     0x41c722
  41c721:	add    BYTE PTR [esi],bh
  41c723:	je     0x41c726
  41c725:	add    BYTE PTR [esi],bh
  41c727:	je     0x41c72a
  41c729:	add    BYTE PTR [esi],bh
  41c72b:	je     0x41c72e
  41c72d:	add    BYTE PTR [esi],bh
  41c72f:	je     0x41c732
  41c731:	add    BYTE PTR [esi],bh
  41c733:	je     0x41c736
  41c735:	add    BYTE PTR [esi],bh
  41c737:	je     0x41c73a
  41c739:	add    BYTE PTR [esi],bh
  41c73b:	je     0x41c73e
  41c73d:	add    BYTE PTR [esi],bh
  41c73f:	je     0x41c742
  41c741:	add    BYTE PTR [esi],bh
  41c743:	je     0x41c746
  41c745:	add    BYTE PTR [esi],bh
  41c747:	je     0x41c74a
  41c749:	add    BYTE PTR [esi],bh
  41c74b:	je     0x41c74e
  41c74d:	add    BYTE PTR [esi],bh
  41c74f:	je     0x41c752
  41c751:	add    BYTE PTR [esi],bh
  41c753:	je     0x41c756
  41c755:	add    BYTE PTR [esi],bh
  41c757:	je     0x41c75a
  41c759:	add    BYTE PTR [esi],bh
  41c75b:	pop    ebx
  41c75c:	out    0x3,eax
  41c75e:	ds pop ebx
  41c760:	out    0x3,eax
	...
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	ds pop ebx
  41c78e:	out    0x3,eax
  41c790:	ds pop ebx
  41c792:	out    0x3,eax
  41c794:	ds pop ebx
  41c796:	out    0x3,eax
  41c798:	ds pop ebx
  41c79a:	out    0x3,eax
  41c79c:	ds pop ebx
  41c79e:	out    0x3,eax
  41c7a0:	ds pop ebx
  41c7a2:	out    0x3,eax
  41c7a4:	ds pop ebx
  41c7a6:	out    0x3,eax
  41c7a8:	ds pop ebx
  41c7aa:	out    0x3,eax
  41c7ac:	ds pop ebx
  41c7ae:	out    0x3,eax
  41c7b0:	ds pop ebx
  41c7b2:	out    0x3,eax
  41c7b4:	ds pop ebx
  41c7b6:	out    0x3,eax
  41c7b8:	ds pop ebx
  41c7ba:	out    0x3,eax
  41c7bc:	ds pop ebx
  41c7be:	out    0x3,eax
  41c7c0:	ds pop ebx
  41c7c2:	out    0x3,eax
  41c7c4:	ds pop ebx
  41c7c6:	out    0x3,eax
  41c7c8:	ds pop ebx
  41c7ca:	out    0x3,eax
  41c7cc:	ds pop ebx
  41c7ce:	in     al,0xfd
  41c7d0:	xor    al,0x55
  41c7d2:	mov    BYTE PTR [ebx],dh
  41c7d4:	mov    dh,dl
  41c7d6:	mov    BYTE PTR [ebx],ah
  41c7d8:	mov    BYTE PTR [edx],ch
  41c7da:	int    0x13
  41c7dc:	pop    ecx
  41c7dd:	cmp    eax,edi
  41c7df:	push   ss
  41c7e0:	pop    esi
  41c7e1:	cmp    esi,DWORD PTR [ebx+0x5b]
  41c7e4:	pop    ebp
  41c7e5:	cmp    ebx,DWORD PTR [edx+0x59]
  41c7e8:	xchg   ecx,eax
  41c7e9:	test   DWORD PTR [edx+0x61],0x5c5b3b6c
	...
  41c818:	add    BYTE PTR [eax],al
  41c81a:	pop    ebp
  41c81b:	cmp    ecx,DWORD PTR [ecx+0x61]
  41c81e:	push   edx
  41c81f:	out    dx,eax
  41c820:	dec    ebx
  41c821:	push   edx
  41c822:	push   ds
  41c823:	and    eax,0x1c37f910
  41c828:	add    BYTE PTR [esi+0x6a],al
  41c82b:	lock jno 0x41c86e
  41c82e:	sbb    ebx,esi
  41c830:	jae    0x41c7fb
  41c832:	push   ebp
  41c833:	cli    
  41c834:	es leave 
  41c836:	push   edx
  41c837:	xor    BYTE PTR [edi],dh
  41c839:	rol    DWORD PTR [esi+0x2d],1
  41c83c:	xor    cl,bl
  41c83e:	dec    edx
  41c83f:	cmp    esp,DWORD PTR [edx+0x0]
  41c842:	pop    edx
  41c843:	adc    eax,0xfdec046d
  41c848:	bound  eax,QWORD PTR [edi]
  41c84a:	pop    edx
  41c84b:	and    BYTE PTR [edx-0x6],ah
  41c84e:	fdivp  st(0),st
  41c850:	sub    ecx,DWORD PTR [ecx]
  41c852:	sti    
  41c853:	imul   BYTE PTR [ebx+0x9]
  41c856:	sub    al,0x0
  41c858:	gs shl ecx,0xe9
  41c85c:	pop    ds
  41c85d:	mov    ebx,0xbb62e9de
  41c862:	add    edi,esp
  41c864:	arpl   WORD PTR [edi],cx
  41c866:	inc    edi
  41c867:	push   edx
  41c868:	or     esp,ebx
  41c86a:	push   es
  41c86b:	div    BYTE PTR [ecx-0x3c]
  41c86e:	pop    ebp
  41c86f:	add    BYTE PTR [esi-0x71],ch
  41c872:	mov    ch,ch
  41c874:	push   0xffffff88
  41c876:	jns    0x41c878
  41c878:	ins    DWORD PTR es:[edi],dx
  41c879:	xchg   DWORD PTR [edi],esi
  41c87b:	cmp    ebp,DWORD PTR [eax-0x6b]
	...
  41c8a6:	add    BYTE PTR [eax],al
  41c8a8:	mov    ebx,ebp
  41c8aa:	cmp    esi,edx
  41c8ac:	sub    dh,ch
  41c8ae:	je     0x41c926
  41c8b0:	xor    eax,DWORD PTR [eax]
  41c8b2:	bound  edi,QWORD PTR [edx-0x62]
  41c8b5:	stc    
  41c8b6:	jo     0x41c936
  41c8b8:	fwait
  41c8b9:	out    dx,eax
  41c8ba:	je     0x41c904
  41c8bc:	mov    esp,?
  41c8be:	sub    eax,0x2cf4914a
  41c8c3:	in     al,0xe7
  41c8c5:	push   esp
  41c8c6:	or     ch,cl
  41c8c8:	cmp    eax,0xe700005b
  41c8cd:	pop    ebx
  41c8ce:	add    BYTE PTR [eax],al
  41c8d0:	xlat   BYTE PTR ds:[ebx]
  41c8d1:	pop    ebx
  41c8d2:	add    BYTE PTR [eax],al
  41c8d4:	xlat   BYTE PTR ds:[ebx]
  41c8d5:	pop    ebx
  41c8d6:	add    BYTE PTR [eax],al
  41c8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d9:	pop    ebx
  41c8da:	add    BYTE PTR [eax],al
  41c8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8dd:	pop    ebx
  41c8de:	add    BYTE PTR [eax],al
  41c8e0:	xchg   edi,eax
  41c8e1:	pop    ebx
  41c8e2:	add    BYTE PTR [eax],al
  41c8e4:	xchg   edi,eax
  41c8e5:	pop    ebx
  41c8e6:	add    BYTE PTR [eax],al
  41c8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e9:	pop    ebx
  41c8ea:	add    BYTE PTR [eax],al
  41c8ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ed:	pop    ebx
  41c8ee:	add    BYTE PTR [eax],al
  41c8f0:	xchg   edi,eax
  41c8f1:	pop    ebx
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	xchg   edi,eax
  41c8f5:	pop    ebx
  41c8f6:	add    BYTE PTR [eax],al
  41c8f8:	addr16 pop ebx
  41c8fa:	add    BYTE PTR [eax],al
  41c8fc:	addr16 pop ebx
  41c8fe:	add    BYTE PTR [eax],al
  41c900:	push   edi
  41c901:	pop    ebx
  41c902:	add    BYTE PTR [eax],al
  41c904:	retf   0x4ed8
  41c907:	imul   esp,DWORD PTR [esi],0x3b
  41c90a:	sub    DWORD PTR [eax+eax*1],eax
	...
  41c935:	add    BYTE PTR [ecx],dl
  41c937:	mov    dh,0x54
  41c939:	in     al,dx
  41c93a:	sub    bh,BYTE PTR [edx-0x2587d29e]
  41c940:	pop    es
  41c941:	push   edi
  41c942:	cmp    ah,BYTE PTR [ebp+0x5]
  41c945:	adc    ebx,esp
  41c947:	ins    DWORD PTR es:[edi],dx
  41c948:	gs in  al,0xef
  41c94b:	adc    al,0x4f
  41c94d:	mov    ss,WORD PTR [edi]
  41c94f:	pop    ebx
  41c950:	add    BYTE PTR [eax],al
  41c952:	daa    
  41c953:	pop    ebx
  41c954:	add    BYTE PTR [eax],al
  41c956:	daa    
  41c957:	pop    ebx
  41c958:	add    BYTE PTR [eax],al
  41c95a:	pop    ss
  41c95b:	pop    ebx
  41c95c:	add    BYTE PTR [eax],al
  41c95e:	pop    ss
  41c95f:	pop    ebx
  41c960:	add    BYTE PTR [eax],al
  41c962:	out    0x5a,eax
  41c964:	add    BYTE PTR [eax],al
  41c966:	out    0x5a,eax
  41c968:	add    BYTE PTR [eax],al
  41c96a:	xlat   BYTE PTR ds:[ebx]
  41c96b:	pop    edx
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	ds je  0x41c972
  41c971:	add    BYTE PTR [esi],bh
  41c973:	je     0x41c976
  41c975:	add    BYTE PTR [esi],bh
  41c977:	je     0x41c97a
  41c979:	add    BYTE PTR [esi],bh
  41c97b:	je     0x41c97e
  41c97d:	add    BYTE PTR [esi],bh
  41c97f:	je     0x41c982
  41c981:	add    BYTE PTR [esi],bh
  41c983:	je     0x41c986
  41c985:	add    BYTE PTR [esi],bh
  41c987:	je     0x41c98a
  41c989:	add    BYTE PTR [esi],bh
  41c98b:	je     0x41c98e
  41c98d:	add    BYTE PTR [esi],bh
  41c98f:	je     0x41c992
  41c991:	add    BYTE PTR [esi],bh
  41c993:	je     0x41c996
  41c995:	add    BYTE PTR [esi],bh
  41c997:	je     0x41c99a
	...
  41c9c1:	add    BYTE PTR [eax],al
  41c9c3:	add    BYTE PTR [esi],bh
  41c9c5:	je     0x41c9c8
  41c9c7:	add    BYTE PTR [esi],bh
  41c9c9:	je     0x41c9cc
  41c9cb:	add    BYTE PTR [esi],bh
  41c9cd:	je     0x41c9d0
  41c9cf:	add    BYTE PTR [esi],bh
  41c9d1:	je     0x41c9d4
  41c9d3:	add    BYTE PTR [esi],bh
  41c9d5:	je     0x41c9d8
  41c9d7:	add    BYTE PTR [esi],bh
  41c9d9:	je     0x41c9dc
  41c9db:	add    BYTE PTR [esi],bh
  41c9dd:	je     0x41c9e0
  41c9df:	add    BYTE PTR [esi],bh
  41c9e1:	je     0x41c9e4
  41c9e3:	add    BYTE PTR [esi],bh
  41c9e5:	je     0x41c9e8
  41c9e7:	add    BYTE PTR [esi],bh
  41c9e9:	je     0x41c9ec
  41c9eb:	add    BYTE PTR [esi],bh
  41c9ed:	je     0x41c9f0
  41c9ef:	add    BYTE PTR [esi],bh
  41c9f1:	je     0x41c9f4
  41c9f3:	add    BYTE PTR [esi],bh
  41c9f5:	je     0x41c9f8
  41c9f7:	add    BYTE PTR [esi],bh
  41c9f9:	je     0x41c9fc
  41c9fb:	add    BYTE PTR [esi],bh
  41c9fd:	je     0x41ca00
  41c9ff:	add    BYTE PTR [esi],bh
  41ca01:	je     0x41ca04
  41ca03:	add    BYTE PTR [esi],bh
  41ca05:	je     0x41ca08
  41ca07:	add    BYTE PTR [esi],bh
  41ca09:	je     0x41ca0c
  41ca0b:	add    BYTE PTR [esi],bh
  41ca0d:	je     0x41ca10
  41ca0f:	add    BYTE PTR [esi],bh
  41ca11:	pop    ebx
  41ca12:	out    0x3,eax
  41ca14:	ds pop ebx
  41ca16:	out    0x3,eax
  41ca18:	ds pop ebx
  41ca1a:	out    0x3,eax
  41ca1c:	ds pop ebx
  41ca1e:	out    0x3,eax
  41ca20:	ds pop ebx
  41ca22:	out    0x3,eax
  41ca24:	ds pop ebx
  41ca26:	out    0x3,eax
	...
  41ca50:	add    BYTE PTR [eax],al
  41ca52:	ds pop ebx
  41ca54:	out    0x3,eax
  41ca56:	ds pop ebx
  41ca58:	out    0x3,eax
  41ca5a:	ds pop ebx
  41ca5c:	out    0x3,eax
  41ca5e:	ds pop ebx
  41ca60:	out    0x3,eax
  41ca62:	ds pop ebx
  41ca64:	out    0x3,eax
  41ca66:	ds pop ebx
  41ca68:	out    0x3,eax
  41ca6a:	ds pop ebx
  41ca6c:	out    0x3,eax
  41ca6e:	ds pop ebx
  41ca70:	out    0x3,eax
  41ca72:	ds pop ebx
  41ca74:	out    0x3,eax
  41ca76:	ds pop ebx
  41ca78:	out    0x3,eax
  41ca7a:	ds pop ebx
  41ca7c:	out    0x3,eax
  41ca7e:	ds pop ebx
  41ca80:	out    0x3,eax
  41ca82:	ds pop ebx
  41ca84:	out    0x3,eax
  41ca86:	ds pop ebx
  41ca88:	out    0x3,eax
  41ca8a:	ds pop ebx
  41ca8c:	out    0x3,eax
  41ca8e:	ds pop ebx
  41ca90:	out    0x3,eax
  41ca92:	ds pop ebx
  41ca94:	out    0x3,eax
  41ca96:	ds pop ebx
  41ca98:	out    0x3,eax
  41ca9a:	ds pop ebx
  41ca9c:	out    0x3,eax
  41ca9e:	ds pop ebx
  41caa0:	out    0x3,eax
  41caa2:	ds pop ebx
  41caa4:	fcom   DWORD PTR [ecx]
  41caa6:	dec    edi
  41caa7:	das    
  41caa8:	aam    0xd
  41caaa:	ds jmp 0x41ca34
  41caad:	push   eax
  41caae:	(bad)  
  41caaf:	in     al,dx
  41cab0:	lea    edx,[ecx-0x66]
  41cab3:	pop    ebx
  41cab4:	add    BYTE PTR [ecx+0x0],bh
	...
  41cadf:	add    BYTE PTR [ebp+0x3d8b61eb],dl
  41cae5:	hlt    
  41cae6:	je     0x41cb34
  41cae8:	xor    bh,ch
  41caea:	jbe    0x41cad5
  41caec:	jmp    0x6764:0xd71d312a
  41caf3:	inc    esp
  41caf4:	or     eax,ebp
  41caf6:	jo     0x41cae1
  41caf8:	shr    BYTE PTR [edx],cl
  41cafa:	xor    ebp,esi
  41cafc:	(bad)  
  41cafd:	cs xor eax,0x32343df1
  41cb03:	cli    
  41cb04:	test   eax,0x610b6064
  41cb09:	xor    al,0x32
  41cb0b:	fidivr DWORD PTR ds:0x4f1d62f7
  41cb11:	clc    
  41cb12:	data16 (bad) 
  41cb14:	cmp    eax,0x51fa62ef
  41cb19:	pop    ebx
  41cb1a:	ins    BYTE PTR es:[edi],dx
  41cb1b:	push   cs
  41cb1c:	inc    esp
  41cb1d:	clc    
  41cb1e:	push   DWORD PTR [edi-0x6ffd48d]
  41cb24:	sbb    ch,dl
  41cb26:	jo     0x41cb06
  41cb28:	sub    al,0xe9
  41cb2a:	arpl   WORD PTR [eax],bx
  41cb2c:	cmp    dh,bl
  41cb2e:	(bad)  
  41cb2f:	lds    ebp,FWORD PTR [ecx]
  41cb31:	idiv   bh
  41cb33:	mov    ebx,0xcc68f50c
  41cb38:	or     bl,BYTE PTR [ebx+0x64]
  41cb3b:	mov    ebx,0xc76cfe1a
  41cb40:	cmp    eax,0xb471ef
	...
  41cb6d:	add    BYTE PTR [eax-0x11],ch
  41cb70:	ins    DWORD PTR es:[edi],dx
  41cb71:	xchg   esi,eax
  41cb72:	xor    ah,BYTE PTR [eax+esi*1-0x28]
  41cb76:	sub    dh,BYTE PTR ds:0xfc3dd82f
  41cb7c:	imul   edi,DWORD PTR [esi+0x57],0xfffffff8
  41cb80:	jbe    0x41cb82
  41cb82:	mov    al,0x22
  41cb84:	add    BYTE PTR [ecx],dh
  41cb86:	lds    ebp,FWORD PTR [ecx+esi*1+0x35]
  41cb8a:	mov    ecx,0xbf72fd60
  41cb8f:	ds outs dx,DWORD PTR fs:[esi]
  41cb92:	mov    BYTE PTR [edi+0x2d],bl
  41cb95:	xor    al,BYTE PTR [ebx+eiz*2+0x32]
  41cb99:	cmp    BYTE PTR ss:[edi+0x36],ah
  41cb9d:	add    BYTE PTR [edi+esi*1+0x23046972],al
  41cba4:	add    BYTE PTR [ebx+0xa],dh
  41cba7:	sub    DWORD PTR [edi+0x68],ebp
  41cbaa:	(bad)  
  41cbab:	sub    BYTE PTR [ecx+0x0],ah
  41cbae:	jb     0x41cbee
  41cbb0:	outs   dx,DWORD PTR ds:[esi]
  41cbb1:	je     0x41cbed
  41cbb3:	sub    eax,0x2a306300
  41cbb8:	jo     0x41cc2f
  41cbba:	cmp    esi,DWORD PTR [edx]
  41cbbc:	jb     0x41cbbe
  41cbbe:	aaa    
  41cbbf:	sub    eax,0x32346e65
  41cbc4:	outs   dx,DWORD PTR ds:[esi]
  41cbc5:	jae    0x41cb5e
  41cbc7:	sub    esp,DWORD PTR [ebp+0x67]
  41cbca:	dec    eax
  41cbcb:	xor    dh,BYTE PTR [edx+0x0]
  41cbce:	cmp    DWORD PTR [eax],ebp
  41cbd0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41cbf9:	add    BYTE PTR [eax],al
  41cbfb:	add    BYTE PTR [ebp+0x3e],dh
  41cbfe:	ins    BYTE PTR es:[edi],dx
  41cbff:	ins    BYTE PTR es:[edi],dx
  41cc00:	push   edi
  41cc01:	outs   dx,BYTE PTR ds:[esi]
  41cc03:	mov    dh,BYTE PTR [bp+di]
  41cc06:	add    BYTE PTR [edx+0x7a],ch
  41cc09:	sub    al,0x71
  41cc0b:	jae    0x41cc53
  41cc0d:	push   edi
  41cc0e:	sub    eax,0x2f6e4432
  41cc13:	xor    esp,DWORD PTR [edi]
  41cc15:	es push 0x7633eb61
  41cc1b:	lds    ebx,FWORD PTR gs:[esi+0x66]
  41cc1f:	jb     0x41cbdb
  41cc21:	xor    esp,DWORD PTR [edi+ebp*2+0x3e]
  41cc25:	xlat   BYTE PTR ds:[ebx]
  41cc26:	add    DWORD PTR [ecx-0x59],ebp
  41cc29:	loopne 0x41cc57
  41cc2b:	arpl   WORD PTR [esp+esi*2-0x25658edc],cx
  41cc32:	add    DWORD PTR [ecx+0x69],esi
  41cc35:	aad    0x26
  41cc37:	arpl   WORD PTR [esp+esi*2+0x36],bp
  41cc3b:	jae    0x41ccab
  41cc3d:	(bad)  
  41cc3f:	imul   ebx,DWORD PTR [edi+0x12],0x4
  41cc43:	imul   esp,DWORD PTR [edi+0x15],0x2c
  41cc47:	pop    edi
  41cc48:	pop    ebx
  41cc49:	and    BYTE PTR [ecx+eiz*2],al
  41cc4c:	push   esi
  41cc4d:	(bad)  
  41cc4f:	jno    0x41ccac
  41cc51:	je     0x41cc7d
  41cc53:	outs   dx,BYTE PTR ds:[esi]
  41cc54:	xor    cl,BYTE PTR [edi]
  41cc56:	outs   dx,BYTE PTR ss:[esi]
  41cc58:	sbb    ebp,DWORD PTR [eax]
  41cc5a:	add    al,0x6a
  41cc5c:	sbb    DWORD PTR [ebp+0x2c],eax
  41cc5f:	jae    0x41cc61
	...
  41cc89:	add    BYTE PTR [edi],bl
  41cc8b:	je     0x41ccb4
  41cc8d:	jae    0x41ccac
  41cc8f:	pop    ebp
  41cc90:	cmp    DWORD PTR [ebp+0xb],ebp
  41cc93:	je     0x41ccb8
  41cc95:	ins    BYTE PTR es:[edi],dx
  41cc96:	and    esp,DWORD PTR [ebp+0x34]
  41cc99:	arpl   WORD PTR [edx],bx
  41cc9b:	je     0x41ccc0
  41cc9d:	pop    edi
  41cc9e:	in     eax,dx
  41cc9f:	dec    esi
  41cca0:	es pop edi
  41cca2:	loop   0x41cd03
  41cca4:	add    DWORD PTR [ecx-0xe],esi
  41cca7:	xchg   edx,eax
  41cca8:	xor    esi,DWORD PTR [ebp-0x21]
  41ccab:	test   DWORD PTR [eax+eax*1],esi
  41ccae:	push   cs
  41ccaf:	inc    esp
  41ccb0:	hlt    
  41ccb1:	das    
  41ccb2:	push   cs
  41ccb3:	inc    esp
  41ccb4:	add    al,0x70
  41ccb6:	shl    DWORD PTR [ebp+0x73db6c31],cl
  41ccbc:	sub    ebp,DWORD PTR [ebp-0x54]
  41ccbf:	nop
  41ccc0:	and    ch,BYTE PTR [esi+0x3e]
  41ccc3:	call   0x38f:0x5bb26722
  41ccca:	scas   eax,DWORD PTR es:[edi]
  41cccb:	call   0xeddefb5b
  41ccd0:	out    0x22,al
  41ccd2:	(bad)  
  41ccd3:	repz jp 0x41ccfc
  41ccd6:	xchg   ecx,eax
  41ccd7:	pop    ebx
  41ccd8:	mov    DWORD PTR [esi],esi
  41ccda:	(bad)  
  41ccdb:	out    0x83,eax
  41ccdd:	xor    eax,0x228bf33e
  41cce2:	push   0x6e037cf8
  41cce7:	clc    
  41cce8:	push   esi
  41cce9:	xor    al,0x5d
  41cceb:	in     eax,dx
  41ccec:	out    0xf8,al
	...
  41cd16:	add    BYTE PTR [eax],al
  41cd18:	adc    ch,BYTE PTR [edx]
  41cd1a:	push   ds
  41cd1b:	stc    
  41cd1c:	or     ch,BYTE PTR [edx]
  41cd1e:	out    0x2b,eax
  41cd20:	dec    ebp
  41cd21:	icebp  
  41cd22:	cmp    ah,BYTE PTR [edi]
  41cd24:	dec    esp
  41cd25:	pop    ebx
  41cd26:	dec    ebx
  41cd27:	xor    DWORD PTR [eax],esi
  41cd29:	clc    
  41cd2a:	inc    edx
  41cd2b:	cmp    edi,DWORD PTR [esi]
  41cd2d:	cld    
  41cd2e:	cmp    al,0x28
  41cd30:	sub    al,0xf8
  41cd32:	sbb    eax,0xdf32a04
  41cd37:	das    
  41cd38:	stc    
  41cd39:	in     eax,dx
  41cd3a:	out    0x22,al
  41cd3c:	and    dl,bh
  41cd3e:	add    esi,DWORD PTR [eax]
  41cd40:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41cd43:	sub    al,0xe1
  41cd45:	in     al,dx
  41cd46:	or     ch,BYTE PTR [ebx]
  41cd48:	fstp   QWORD PTR [edx+0xb]
  41cd4b:	and    esp,eax
  41cd4d:	repz add esi,DWORD PTR [eax]
  41cd50:	ds sub al,0x18
  41cd53:	repz adc BYTE PTR [ebx-0x2f],bl
  41cd57:	es call 0xdd6b8d4d
  41cd5d:	in     al,dx
  41cd5e:	out    0x34,al
  41cd60:	loope  0x41cd52
  41cd62:	int    0x2f
  41cd64:	fstp   QWORD PTR [edx-0x31]
  41cd67:	and    ch,BYTE PTR [eax+0x65c7fff1]
  41cd6d:	pop    ebx
  41cd6e:	outs   dx,DWORD PTR ds:[esi]
  41cd6f:	enter  0xe66b,0x70
  41cd73:	mov    eax,ds:0x995ef33d
  41cd78:	dec    ebp
  41cd79:	call   0x42517d
	...
  41cda6:	pop    esp
  41cda7:	out    0x71,eax
  41cda9:	add    BYTE PTR [ebp+0x5b],0x70
  41cdad:	mov    BYTE PTR [edx-0x16],cl
  41cdb0:	inc    DWORD PTR [edi-0x77a0ffe4]
  41cdb6:	sbb    al,0x5b
  41cdb8:	ss mov ah,0xf1
  41cdbb:	sub    esi,DWORD PTR [edx]
  41cdbd:	sbb    BYTE PTR [edx],bh
  41cdbf:	add    BYTE PTR [ebx+0x48],ch
  41cdc2:	sub    bh,dh
  41cdc4:	pop    esi
  41cdc5:	jmp    0x41b5bbed
  41cdca:	sbb    esi,ecx
  41cdcc:	fs jmp 0x46afc5ea
  41cdd2:	addr16 in eax,dx
  41cdd4:	inc    DWORD PTR [ebx+0x61]
  41cdd7:	out    0x67,eax
  41cdd9:	inc    esp
  41cdda:	ins    BYTE PTR es:[edi],dx
  41cddb:	pop    ebx
  41cddc:	jno    0x41cdf5
  41cdde:	push   ecx
  41cddf:	out    dx,al
  41cde0:	outs   dx,DWORD PTR ds:[esi]
  41cde1:	and    BYTE PTR [edx-0xb],al
  41cde4:	bound  ebx,QWORD PTR [edx]
  41cde6:	dec    ebp
  41cde7:	clc    
  41cde8:	pusha  
  41cde9:	or     BYTE PTR [edx-0x1a],al
  41cdec:	bound  edx,QWORD PTR ds:0x46aee5d
  41cdf2:	inc    edx
  41cdf3:	jmp    0x41ce61
  41cdf5:	add    ah,BYTE PTR [edi]
  41cdf7:	hlt    
  41cdf8:	ins    BYTE PTR es:[edi],dx
  41cdf9:	(bad)  
  41cdfa:	cmp    eax,0x2bd66bf8
  41cdff:	cld    
  41ce00:	jbe    0x41cdd0
  41ce02:	push   ss
  41ce03:	xor    BYTE PTR [eax],al
  41ce05:	sbb    BYTE PTR [ebx+0x31],cl
  41ce08:	das    
  41ce09:	sbb    BYTE PTR [eax],al
	...
  41ce33:	add    BYTE PTR [edx-0xc],al
  41ce36:	jb     0x41ce38
  41ce38:	test   BYTE PTR [eax],ch
  41ce3a:	pop    ebp
  41ce3b:	outs   dx,BYTE PTR ds:[esi]
  41ce3c:	add    BYTE PTR [eax+ebp*2+0x65],bl
  41ce40:	sti    
  41ce41:	sub    ebp,DWORD PTR [ecx+0x65]
  41ce44:	pop    ss
  41ce45:	xor    dh,BYTE PTR [ecx+0x73]
  41ce48:	ret    
  41ce49:	outs   dx,BYTE PTR cs:[esi]
  41ce4b:	add    BYTE PTR [ebp-0x419290ca],ch
  41ce51:	sub    eax,0x2a880061
  41ce56:	pop    ebp
  41ce57:	outs   dx,BYTE PTR ds:[esi]
  41ce58:	mov    al,0x32
  41ce5a:	add    BYTE PTR [edx+eax*8+0x2c],dh
  41ce5e:	je     0x41cec9
  41ce60:	mov    ecx,0x67610038
  41ce65:	sub    al,0x6c
  41ce67:	xlat   BYTE PTR gs:[ebx]
  41ce69:	sub    ah,BYTE PTR [ebp+0x63]
  41ce6c:	outs   dx,DWORD PTR ds:[esi]
  41ce6d:	xor    ch,BYTE PTR [esp+ebp*2-0x7e]
  41ce71:	push   edi
  41ce72:	jo     0x41ced9
  41ce74:	jbe    0x41ceb2
  41ce76:	popa   
  41ce77:	add    BYTE PTR [edx+esi*1],al
  41ce7a:	pop    edi
  41ce7b:	jb     0x41ce7f
  41ce7d:	and    eax,DWORD PTR [eax]
  41ce7f:	xor    DWORD PTR [edi-0xb9e8dc8],esp
  41ce85:	xor    DWORD PTR [eax],eax
  41ce87:	ja     0x41ced7
  41ce89:	sub    ebp,DWORD PTR [ecx+ebp*2+0x46]
  41ce8d:	sub    al,BYTE PTR [eax]
  41ce8f:	imul   edi,DWORD PTR [ebx],0x2e657630
  41ce95:	xor    BYTE PTR [ecx+0x32],dh
	...
  41cec0:	add    BYTE PTR [eax],al
  41cec2:	xchg   edi,eax
  41cec3:	sub    eax,0x2b486365
  41cec8:	popa   
  41cec9:	add    BYTE PTR [ecx-0x4ec9cc9b],dh
  41cecf:	gs std 
  41ced1:	ins    BYTE PTR es:[edi],dx
  41ced2:	xor    BYTE PTR ds:0x5b896966,0x63
  41ced9:	popa   
  41ceda:	ds jle 0x41cf05
  41cedd:	jne    0x41cebe
  41cedf:	mov    al,BYTE PTR [ecx]
  41cee1:	retfw  
  41cee3:	xchg   esp,eax
  41cee4:	sub    dh,BYTE PTR [edi-0x57]
  41cee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cee8:	hlt    
  41cee9:	call   FWORD PTR [esi-0x6697cd5f]
  41ceef:	mov    al,ds:0xd3960028
  41cef4:	sub    DWORD PTR [edi-0x5a],ebx
  41cef7:	rol    DWORD PTR [ecx],cl
  41cef9:	jo     0x41ce9c
  41cefb:	aad    0x31
  41cefd:	add    BYTE PTR [eax+eiz*8-0x34728ed9],bl
  41cf04:	sub    esp,DWORD PTR [ebp+0x3e]
  41cf07:	shr    BYTE PTR ds:0x2dd2665f,cl
  41cf0d:	pop    edi
  41cf0e:	push   esi
  41cf0f:	je     0x41cf41
  41cf11:	ja     0x41cf80
  41cf13:	add    al,0x21
  41cf15:	popa   
  41cf16:	arpl   WORD PTR [ebx+0x4],ax
  41cf19:	imul   ebx,DWORD PTR [edi+0x0],0x38
  41cf1d:	push   0x61040563
  41cf22:	pop    edi
  41cf23:	push   es
  41cf24:	and    DWORD PTR [eax+eax*1+0x0],esp
	...
  41cf50:	pop    ds
  41cf51:	je     0x41cf83
  41cf53:	and    bl,BYTE PTR ds:0x7225
  41cf58:	and    ch,BYTE PTR ds:[ebx]
  41cf5b:	bound  ebx,QWORD PTR [ebx]
  41cf5d:	inc    edx
  41cf5e:	cmp    BYTE PTR [eax],al
  41cf60:	and    BYTE PTR [ebp+0x32],cl
  41cf63:	arpl   WORD PTR [eax],cx
  41cf65:	dec    edi
  41cf66:	xor    al,BYTE PTR [eax]
  41cf68:	pop    ds
  41cf69:	inc    ecx
  41cf6a:	sub    BYTE PTR [esi+0x19],ah
  41cf6d:	dec    esp
  41cf6e:	add    al,0x72
  41cf70:	fist   WORD PTR [eax+0x2c]
  41cf73:	arpl   dx,sp
  41cf75:	jae    0x41cfa6
  41cf77:	pop    edi
  41cf78:	xlat   BYTE PTR ds:[ebx]
  41cf79:	pop    ebp
  41cf7a:	pop    ds
  41cf7b:	ins    DWORD PTR es:[edi],dx
  41cf7c:	jmp    0xcd66b6db
  41cf81:	repz shl BYTE PTR [edx],cl
  41cf84:	int3   
  41cf85:	pop    edx
  41cf86:	xlat   BYTE PTR ds:[ebx]
  41cf87:	es jmp 0x3e79a379
  41cf8d:	stc    
  41cf8e:	(bad)  
  41cf8f:	aaa    
  41cf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf91:	cld    
  41cf92:	int3   
  41cf93:	add    ebx,DWORD PTR [edi-0x5ed73a12]
  41cf99:	clc    
  41cf9a:	out    0x21,al
  41cf9c:	xor    esp,0x5b912692
  41cfa2:	call   0x5931:0x8bfa9f2c
  41cfa9:	pop    ebx
  41cfaa:	jl     0x41cfd6
  41cfac:	lahf   
  41cfad:	repnz mov edi,DWORD PTR [edx]
  41cfb0:	ds stc 
  41cfb2:	(bad)  
  41cfb3:	aaa    
	...
  41cfdc:	add    BYTE PTR [eax],al
  41cfde:	pop    ebp
  41cfdf:	lock mov eax,DWORD PTR [ebx]
  41cfe2:	push   esi
  41cfe3:	clc    
  41cfe4:	jp     0x41d015
  41cfe6:	push   ebx
  41cfe7:	sub    al,0xe7
  41cfe9:	es gs hlt 
  41cfec:	dec    esp
  41cfed:	daa    
  41cfee:	gs pop ebx
  41cff0:	dec    ebx
  41cff1:	and    edx,DWORD PTR [edi-0x12]
  41cff4:	push   edx
  41cff5:	and    edi,DWORD PTR [esi]
  41cff7:	jmp    0x2c32:0xed192f47
  41cffe:	adc    DWORD PTR [ebx+0x4a],ebx
  41d001:	sub    eax,0x3347eb15
  41d006:	test   DWORD PTR ds:[edi],0xcee2523
  41d00d:	sub    BYTE PTR [esi],bh
  41d00f:	out    0x7,eax
  41d011:	cmp    ebx,DWORD PTR [edx]
  41d013:	out    dx,al
  41d014:	sbb    BYTE PTR [eax+ebx*1],al
  41d017:	out    dx,al
  41d018:	clc    
  41d019:	ss in  eax,0x5a
  41d01c:	adc    DWORD PTR ds:0xb9ffece6,ebp
  41d022:	ins    BYTE PTR es:[edi],dx
  41d023:	daa    
  41d024:	add    bl,bh
  41d026:	adc    al,0xfc
  41d028:	addr16 enter 0xf70f,0xff
  41d02d:	retf   0xf621
  41d030:	ins    DWORD PTR es:[edi],dx
  41d031:	ret    0x254c
  41d034:	xor    ch,cl
  41d036:	or     eax,0x65ca5efa
  41d03b:	clc    
  41d03c:	jo     0x41d027
  41d03e:	pop    esi
  41d03f:	out    dx,al
  41d040:	ins    BYTE PTR es:[edi],dx
  41d041:	lds    eax,FWORD PTR [eax]
	...
  41d06b:	add    BYTE PTR ds:0x6abe6bf5,bh
  41d071:	clc    
  41d072:	jno    0x41d05d
  41d074:	dec    esi
  41d075:	cli    
  41d076:	ins    BYTE PTR es:[edi],dx
  41d077:	mov    cs,WORD PTR [ecx-0x8]
  41d07a:	jno    0x41d065
  41d07c:	pop    edi
  41d07d:	cld    
  41d07e:	ins    DWORD PTR es:[edi],dx
  41d07f:	mov    BYTE PTR [ebx-0x4],dl
  41d082:	call   DWORD PTR [edx+0x7a62f01c]
  41d088:	cmp    eax,0x238d70fc
  41d08d:	cld    
  41d08e:	jo     0x41d015
  41d090:	sbb    ebx,DWORD PTR [ebx+0x76]
  41d093:	push   eax
  41d094:	and    edi,esp
  41d096:	ins    BYTE PTR es:[edi],dx
  41d097:	pop    ebx
  41d098:	adc    ebx,DWORD PTR [ebx+0x6c]
  41d09b:	inc    esi
  41d09c:	adc    al,0xf7
  41d09e:	ins    BYTE PTR es:[edi],dx
  41d09f:	aas    
  41d0a0:	cmp    ch,BYTE PTR [edx+esi*1]
  41d0a3:	cli    
  41d0a4:	jb     0x41d08c
  41d0a6:	(bad)  
  41d0a7:	jmp    0xfa72fb56
  41d0ac:	mov    bl,0x2d
  41d0ae:	add    BYTE PTR [edx],bh
  41d0b0:	outs   dx,BYTE PTR ds:[esi]
  41d0b1:	cld    
  41d0b2:	jno    0x41d0d1
  41d0b4:	push   eax
  41d0b5:	clc    
  41d0b6:	push   0x6cf85ce9
  41d0bb:	sbb    ebx,DWORD PTR [ebp-0x8]
  41d0be:	call   DWORD PTR ds:0x6ded53
  41d0c4:	dec    edx
  41d0c5:	and    eax,0x38466d00
  41d0ca:	arpl   WORD PTR [ecx+0x3a],bp
  41d0cd:	push   edi
  41d0ce:	je     0x41d142
	...
  41d0f8:	add    BYTE PTR [eax],al
  41d0fa:	xor    DWORD PTR ds:[ebp+0x74],esp
  41d0fe:	pop    esi
  41d0ff:	pop    eax
  41d100:	imul   ebp,DWORD PTR [esi-0x7d],0x2f
  41d104:	outs   dx,BYTE PTR ds:[esi]
  41d105:	gs push edi
  41d107:	addr16 das 
  41d109:	xor    esi,DWORD PTR [esi+0x36]
  41d10c:	pop    edi
  41d10d:	add    BYTE PTR [eax+esi*1],al
  41d110:	arpl   WORD PTR gs:[ebx+edi*1],cx
  41d114:	outs   dx,BYTE PTR ds:[esi]
  41d115:	add    ch,bh
  41d117:	sub    ch,BYTE PTR [esi+0x69]
  41d11a:	loopne 0x41d141
  41d11c:	add    BYTE PTR [ebx-0x51],ah
  41d11f:	and    eax,0x28277365
  41d124:	pop    ebp
  41d125:	jae    0x41d0cb
  41d127:	sub    BYTE PTR [eax],dh
  41d129:	jb     0x41d0e6
  41d12b:	push   edi
  41d12c:	pop    ebp
  41d12d:	jne    0x41d1a3
  41d12f:	sub    al,0x65
  41d131:	outs   dx,BYTE PTR ds:[esi]
  41d132:	out    0x24,eax
  41d134:	jo     0x41d197
  41d136:	gs sub eax,0x3bb60075
  41d13c:	imul   ebp,DWORD PTR [ecx+0x71],0x75656957
  41d143:	xor    esp,DWORD PTR [ebp+0x6e]
  41d146:	xlat   BYTE PTR ds:[ebx]
  41d147:	cmp    BYTE PTR [ebx+0x6f],ch
  41d14a:	js     0x41d17f
  41d14c:	popa   
  41d14d:	add    BYTE PTR [ecx],cl
  41d14f:	and    eax,0x3b016565
  41d154:	outs   dx,DWORD PTR ds:[esi]
  41d155:	add    bh,bh
  41d157:	das    
  41d158:	jo     0x41d1bf
  41d15a:	xchg   edi,eax
  41d15b:	and    al,0x68
  41d15d:	popa   
	...
  41d186:	add    BYTE PTR [eax],al
  41d188:	xor    esi,DWORD PTR [eax]
  41d18a:	imul   eax,DWORD PTR [eax],0x746e2e41
  41d190:	ds dec edi
  41d192:	sub    ah,BYTE PTR [ecx+edx*1+0x72]
  41d196:	and    eax,0x2b48e96d
  41d19b:	outs   dx,BYTE PTR ds:[esi]
  41d19c:	fnstenv [ecx+0x29]
  41d19f:	pop    edi
  41d1a0:	in     al,dx
  41d1a1:	push   ebp
  41d1a2:	pop    ds
  41d1a3:	ja     0x41d1e3
  41d1a5:	popa   
  41d1a6:	sub    BYTE PTR [ebp-0x1b],ch
  41d1a9:	mov    ?,WORD PTR [eax+eax*1]
  41d1ac:	or     DWORD PTR [ebp-0xf],eax
  41d1af:	xor    al,0x3e
  41d1b1:	cwde   
  41d1b2:	sub    dh,BYTE PTR [ecx-0x25]
  41d1b5:	sub    DWORD PTR [ecx],0x2617aa00
  41d1bb:	imul   esi,DWORD PTR [edi-0x5e98e2bc],0x925f2d1b
  41d1c5:	inc    esp
  41d1c6:	and    al,0x0
  41d1c8:	xchg   edx,eax
  41d1c9:	in     al,dx
  41d1ca:	das    
  41d1cb:	outs   dx,BYTE PTR ds:[esi]
  41d1cc:	call   0x2bf4:0x8d0032df
  41d1d3:	jb     0x41d16c
  41d1d5:	lock add BYTE PTR [edx+0x5f],ah
  41d1d9:	repnz sbb al,0x67
  41d1dc:	push   0x44
  41d1de:	and    BYTE PTR [esi+0x72],ch
  41d1e1:	out    0x32,eax
  41d1e3:	add    BYTE PTR [edi-0x26],bl
  41d1e6:	sub    eax,0x39b26968
	...
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [ebp-0x57],bl
  41d218:	ss jbe 0x41d27e
  41d21b:	mov    eax,0x9c3e6330
  41d220:	daa    
  41d221:	popa   
  41d222:	and    eax,0x2e0039a7
  41d227:	test   eax,0x442c632f
  41d22c:	and    esp,DWORD PTR [ebx+0x10]
  41d22f:	sahf   
  41d230:	and    DWORD PTR [ebx+0x27],ebp
  41d233:	pop    ebx
  41d234:	adc    eax,0xec71904
  41d239:	xor    bl,BYTE PTR ds:0x212f06d4
  41d23f:	pop    ebx
  41d240:	fdiv   DWORD PTR [edx]
  41d242:	sub    al,0xd2
  41d244:	mov    edx,0x10d13e1e
  41d249:	xor    al,0xdd
  41d24b:	int3   
  41d24c:	out    0x20,eax
  41d24e:	(bad)  
  41d250:	add    al,0x35
  41d252:	loope  0x41d221
  41d254:	out    0x2c,eax
  41d256:	loopne 0x41d21b
  41d258:	(bad)  
  41d259:	sub    edx,edx
  41d25b:	pop    edx
  41d25c:	fdiv   DWORD PTR [eax]
  41d25e:	(bad)  
  41d260:	sar    DWORD PTR [edx],cl
  41d262:	imul   ebx,DWORD PTR [ebx-0x36],0xb3bc9d35
  41d269:	sub    dh,BYTE PTR [eax-0x6cde1840]
  41d26f:	retf   0x22c9
  41d272:	mov    WORD PTR [ebx-0x78],ds
  41d275:	pop    ds
  41d276:	cdq    
  41d277:	mov    edi,0x3488
	...
  41d2a4:	ds int 0x86
  41d2a7:	das    
  41d2a8:	cdq    
  41d2a9:	enter  0x380,0x6f
  41d2ad:	(bad)  
  41d2ae:	mov    BYTE PTR [edx],bh
  41d2b0:	pop    ebp
  41d2b1:	int    0xe7
  41d2b3:	xor    BYTE PTR [ecx-0x32],ah
  41d2b6:	mov    ebp,DWORD PTR [eax]
  41d2b8:	push   ebp
  41d2b9:	pop    ebx
  41d2ba:	ja     0x41d2f1
  41d2bc:	jns    0x41d282
  41d2be:	pop    edx
  41d2bf:	pop    ds
  41d2c0:	ds aad 0x5f
  41d2c3:	and    eax,0x2745bd50
  41d2c8:	ds into 
  41d2ca:	dec    eax
  41d2cb:	daa    
  41d2cc:	sub    eax,0x250453c0
  41d2d1:	les    edx,FWORD PTR [edx+0x1f]
  41d2d4:	ds mov edi,0xc7564800
  41d2da:	pop    edi
  41d2db:	cmp    al,BYTE PTR [edx-0x40]
  41d2de:	jb     0x41d2ec
  41d2e0:	xor    ecx,ecx
  41d2e2:	add    BYTE PTR ds:0x1d74cc29,dl
  41d2e8:	and    esp,ecx
  41d2ea:	je     0x41d2d5
  41d2ec:	and    BYTE PTR [edx-0x3dd7f38a],bh
  41d2f2:	popa   
  41d2f3:	adc    al,BYTE PTR [edx-0x38]
  41d2f6:	outs   dx,BYTE PTR ds:[esi]
  41d2f7:	or     al,0x16
  41d2f9:	enter  0x476,0x42
  41d2fd:	mov    edi,0xbf24df5f
  41d302:	add    ah,cl
  41d304:	add    al,0xc7
  41d306:	ins    DWORD PTR es:[edi],dx
  41d307:	fild   WORD PTR [eax]
	...
  41d331:	add    BYTE PTR [eax],ah
  41d333:	pop    ebx
  41d334:	popa   
  41d335:	shr    DWORD PTR [eax-0x33],0x61
  41d339:	sar    DWORD PTR ds:0x48d072c1,1
  41d33f:	leave  
  41d340:	fs jmp 0xe9a699a4
  41d346:	cmp    DWORD PTR [ecx+esi*2+0x77c9649d],edi
  41d34d:	jmp    0x8cb099a9
  41d352:	cmp    eax,0x338a67c4
  41d357:	(bad)  
  41d358:	jno    0x41d2f0
  41d35a:	pop    ds
  41d35b:	iret   
  41d35c:	add    BYTE PTR [ebx-0x44cd750d],bh
  41d362:	jmp    0x41d3bc
  41d364:	pop    edi
  41d365:	je     0x41d38a
  41d367:	mov    ebp,0x5b0d4c6c
  41d36c:	das    
  41d36d:	sbb    bl,dl
  41d36f:	mov    DWORD PTR [edi],ebp
  41d371:	sbb    bl,cl
  41d373:	mov    DWORD PTR [eax],eax
  41d375:	dec    edx
  41d376:	popa   
  41d377:	mov    edx,0x8004005f
  41d37c:	ins    BYTE PTR es:[edi],dx
  41d37d:	popa   
  41d37e:	xchg   edi,eax
  41d37f:	sub    BYTE PTR [ebx+0x72],0xf3
  41d383:	jge    0x41d3f3
  41d385:	xor    dl,BYTE PTR [esp+ebx*2-0x76d7939b]
  41d38c:	popa   
  41d38d:	cmp    BYTE PTR [bp+di+0x0],bh
  41d391:	data16 cmp BYTE PTR [eax+0x6274],al
	...
  41d3c0:	inc    esi
  41d3c1:	sub    DWORD PTR [ecx+esi*1+0x67],0xffffff80
  41d3c6:	imul   esi,DWORD PTR [esi+0x4e],0xffffff81
  41d3ca:	arpl   WORD PTR [eax],ax
  41d3cc:	cmp    DWORD PTR [esi+0x74],edi
  41d3cf:	push   0x65008146
  41d3d4:	push   0xffffff83
  41d3d6:	pop    ebp
  41d3d7:	outs   dx,BYTE PTR ds:[esi]
  41d3d8:	jb     0x41d455
  41d3da:	ins    BYTE PTR es:[edi],dx
  41d3db:	add    BYTE PTR [ebp+edi*2+0x6b],ah
  41d3df:	outs   dx,DWORD PTR ds:[esi]
  41d3e0:	add    eax,0xf2660097
  41d3e5:	jl     0x41d44e
  41d3e7:	outs   dx,DWORD PTR ds:[esi]
  41d3e8:	add    DWORD PTR [esi+0x0],esi
  41d3eb:	jae    0x41d3e3
  41d3ed:	sub    BYTE PTR [ecx+0x79],0x27
  41d3f1:	sbb    DWORD PTR [ebp+0x78],0xffffffb0
  41d3f5:	jp     0x41d463
  41d3f7:	ins    BYTE PTR es:[edi],dx
  41d3f8:	pop    ss
  41d3f9:	sbb    BYTE PTR [ebp+0x73],0xb8
  41d3fd:	jge    0x41d3ff
  41d3ff:	push   0x78
  41d401:	test   BYTE PTR [esi+0x0],ch
  41d404:	mov    dh,0x8e
  41d406:	xor    dh,BYTE PTR [edi-0x5c]
  41d409:	jp     0x41d43f
  41d40b:	jb     0x41d3e4
  41d40d:	jns    0x41d46c
  41d40f:	bound  ecx,QWORD PTR [esi+0x5c]
  41d412:	jb     0x41d479
  41d414:	or     DWORD PTR [esi+0x2f],0x33
  41d418:	xlat   BYTE PTR ds:[ebx]
  41d419:	jns    0x41d487
  41d41b:	popa   
  41d41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d41e:	sub    BYTE PTR [edi+0x3e],bl
  41d421:	mov    dl,0x32
  41d423:	add    BYTE PTR [bx+si],al
	...
  41d44e:	and    BYTE PTR [ebp-0x6ed0ffe1],ah
  41d454:	pop    ds
  41d455:	jb     0x41d481
  41d457:	inc    edx
  41d458:	and    ch,BYTE PTR [eax+0x23]
  41d45b:	xchg   esi,eax
  41d45c:	xor    DWORD PTR [ebx+0x1f],esp
  41d45f:	inc    edx
  41d460:	lock xor dl,BYTE PTR [ebx+0x2f]
  41d464:	lock call FWORD PTR [esi]
  41d467:	pusha  
  41d468:	sbb    eax,0x132ea63
  41d46d:	push   0x611d53df
  41d472:	fst    DWORD PTR [ebx+0x20]
  41d475:	add    dl,bl
  41d477:	data16 cmp al,0x74
  41d47a:	jecxz  0x41d4cf
  41d47c:	add    DWORD PTR [ecx-0x21],esi
  41d47f:	aaa    
  41d480:	and    BYTE PTR [esi+edi*1+0x73],ah
  41d484:	repz xor DWORD PTR [esi*2+0x23a1fff1],ecx
  41d48c:	and    eax,0x2744a16c
  41d491:	pop    edi
  41d492:	lods   eax,DWORD PTR ds:[esi]
  41d493:	adc    al,0x20
  41d495:	jb     0x41d4d5
  41d497:	sub    BYTE PTR [esi+ebp*2],ah
  41d49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d49b:	pop    ds
  41d49c:	and    eax,0x2a449b6c
  41d4a1:	addr16 xchg edx,eax
  41d4a3:	lock pop ds
  41d4a5:	outs   dx,BYTE PTR ds:[esi]
  41d4a6:	ds loope 0x41d4cc
  41d4a9:	jno    0x41d518
  41d4ab:	fistp  DWORD PTR [edi]
  41d4ad:	add    BYTE PTR [ebp-0x28],ch
  41d4b0:	and    BYTE PTR [eax+eax*1+0x0],ch
	...
  41d4dc:	pop    edx
  41d4dd:	jecxz  0x41d4df
  41d4df:	jo     0x41d54d
  41d4e1:	jecxz  0x41d51e
  41d4e3:	arpl   WORD PTR [esp+eax*2+0x29],cx
  41d4e7:	ins    DWORD PTR es:[edi],dx
  41d4e8:	dec    edx
  41d4e9:	pop    ebx
  41d4ea:	dec    ebx
  41d4eb:	and    eax,0x2b565b63
  41d4f0:	push   eax
  41d4f1:	mov    edi,0x5b2f2d46
  41d4f6:	cmp    al,0x2f
  41d4f8:	das    
  41d4f9:	iret   
  41d4fa:	dec    ebx
  41d4fb:	sub    ebx,DWORD PTR ds:0x2a23465b
  41d501:	sar    BYTE PTR [edx],0x4
  41d504:	sbb    al,0xc4
  41d506:	cmp    ebp,DWORD PTR [eax]
  41d508:	sbb    edi,DWORD PTR [ebx+ebx*1+0x65b0f1f]
  41d50f:	sub    al,0x1c
  41d511:	mov    edi,0xbe3e261b
  41d516:	add    eax,0x14c1e42c
  41d51b:	add    al,0x19
  41d51d:	mov    DWORD PTR [edx-0x4172d311],edi
  41d523:	sti    
  41d524:	adc    BYTE PTR [ebx-0x3122fc19],cl
  41d52a:	loop   0x41d55d
  41d52c:	rol    cl,1
  41d52e:	into   
  41d52f:	xor    eax,edx
  41d531:	int    0xdc
  41d533:	add    esp,DWORD PTR [esi+0x7433d3cf]
  41d539:	xchg   BYTE PTR [esi],dl
  41d53b:	repnz pop ecx
  41d53d:	xchg   esp,eax
  41d53e:	or     eax,0xef
	...
  41d567:	add    BYTE PTR [eax],al
  41d569:	add    BYTE PTR [eax-0x7b],ch
  41d56c:	stc    
  41d56d:	repnz push ebx
  41d56f:	test   esi,esi
  41d571:	out    dx,al
  41d572:	(bad)  
  41d573:	retf   
  41d574:	xchg   esi,eax
  41d575:	and    eax,0x22868691
  41d57a:	mov    al,al
  41d57c:	lds    esi,FWORD PTR [ebx]
  41d57e:	retfw  
  41d580:	out    0x2b,eax
  41d582:	push   0xffffffcf
  41d584:	ja     0x41d57f
  41d586:	sbb    al,BYTE PTR [esi-0x73ec124b]
  41d58c:	add    BYTE PTR [esi-0x47cd7818],bh
  41d592:	iret   
  41d593:	xchg   DWORD PTR [edx],esi
  41d595:	sbb    al,0xe3
  41d597:	lds    ebp,FWORD PTR [ebp+0x4f]
  41d59a:	add    eax,0x6e486588
  41d59f:	mov    edx,0xcb62592e
  41d5a4:	add    cl,ch
  41d5a6:	push   ebp
  41d5a7:	iret   
  41d5a8:	je     0x41d5e3
  41d5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5ab:	xchg   BYTE PTR ds:0x63cd5e3c,ch
  41d5b1:	inc    edx
  41d5b2:	dec    edi
  41d5b3:	(bad)  
  41d5b4:	addr16 pop ss
  41d5b6:	sub    eax,DWORD PTR [ebp-0x45a1f79f]
  41d5bc:	jno    0x41d5be
  41d5be:	pop    ebx
  41d5bf:	lds    esp,FWORD PTR [esi-0x2]
  41d5c2:	das    
  41d5c3:	ret    0xd2e
  41d5c6:	pop    ss
  41d5c7:	mov    BYTE PTR [ebx+0x1],ah
  41d5ca:	and    BYTE PTR [ebx+0xc2e],dh
	...
  41d5f8:	sbb    bh,BYTE PTR [edx-0x30f1ff00]
  41d5fe:	jo     0x41d623
  41d600:	arpl   WORD PTR [esi-0x30e63795],ax
  41d606:	arpl   cx,bx
  41d608:	pop    eax
  41d609:	ret    
  41d60a:	arpl   WORD PTR [ebx+ebx*1+0x23bf6dc0],di
  41d611:	leave  
  41d612:	jb     0x41d622
  41d614:	js     0x41d5db
  41d616:	popa   
  41d617:	clc    
  41d618:	dec    esi
  41d619:	lods   al,BYTE PTR ds:[esi]
  41d61a:	les    edx,FWORD PTR cs:[ebp-0x48]
  41d61e:	add    BYTE PTR [ecx-0x1c8f30a7],dl
  41d624:	sbb    cl,BYTE PTR [eax-0x34e365a1]
  41d62a:	je     0x41d5b4
  41d62c:	xor    eax,0xd0006185
  41d631:	jge    0x41d65e
  41d633:	js     0x41d5e1
  41d635:	sub    DWORD PTR [ebp+0x2e],0xffffffca
  41d639:	nop
  41d63a:	popa   
  41d63b:	add    bh,ah
  41d63d:	mov    cl,0x51
  41d63f:	dec    ecx
  41d640:	pop    es
  41d641:	mov    al,0x44
  41d643:	inc    esi
  41d644:	push   cs
  41d645:	fwait
  41d646:	inc    ecx
  41d647:	xor    BYTE PTR [esi-0x4e],ch
  41d64a:	inc    ebp
  41d64b:	push   eax
  41d64c:	pop    esp
  41d64d:	mov    ds:0xa2734946,eax
  41d652:	xor    BYTE PTR [ecx+0x4a],bl
  41d655:	xchg   esi,eax
  41d656:	aas    
  41d657:	push   edx
  41d658:	cs scas eax,DWORD PTR es:[edi]
  41d65a:	push   esp
  41d65b:	inc    ebp
	...
  41d684:	add    BYTE PTR [eax],al
  41d686:	pop    ebx
  41d687:	dec    edi
  41d688:	push   esi
  41d689:	push   ebp
  41d68a:	dec    esi
  41d68b:	dec    esi
  41d68c:	sub    esi,DWORD PTR [eax]
  41d68e:	xchg   edi,eax
  41d68f:	pop    eax
  41d690:	add    BYTE PTR [eax],al
  41d692:	addr16 pop esi
  41d694:	add    BYTE PTR [ebp+0x50],cl
  41d697:	mov    ds:0x58560151,eax
  41d69c:	add    BYTE PTR [eax],al
  41d69e:	push   edi
  41d69f:	pop    eax
  41d6a0:	add    BYTE PTR [eax],al
  41d6a2:	lods   eax,DWORD PTR ds:[si]
  41d6a4:	dec    ebx
  41d6a5:	inc    esi
  41d6a6:	sub    esi,DWORD PTR [eax-0x5b65adc3]
  41d6ac:	dec    ecx
  41d6ad:	imul   esi,DWORD PTR [esi+ecx*4+0x6b],0x74820073
  41d6b5:	pop    esp
  41d6b6:	call   0x10a64531
  41d6bb:	xchg   ecx,eax
  41d6bc:	outs   dx,DWORD PTR ds:[esi]
  41d6bd:	pop    esp
  41d6be:	aam    0x92
  41d6c0:	jb     0x41d734
  41d6c2:	or     bh,BYTE PTR [edx+0x74]
  41d6c5:	push   esi
  41d6c6:	cli    
  41d6c7:	lea    ebp,[edi+0x69]
  41d6ca:	mov    al,0x79
  41d6cc:	pop    esp
  41d6cd:	push   ebp
  41d6ce:	mov    cl,0x76
  41d6d0:	outs   dx,BYTE PTR ds:[esi]
  41d6d1:	jae    0x41d711
  41d6d3:	mul    BYTE PTR [ebx]
  41d6d5:	ins    BYTE PTR es:[edi],dx
  41d6d6:	bound  eax,QWORD PTR [edx+0x58]
  41d6d9:	outs   dx,BYTE PTR ds:[esi]
  41d6da:	push   edi
  41d6db:	in     al,dx
  41d6dc:	xor    eax,0x1ce65f74
  41d6e1:	push   ecx
  41d6e2:	push   edx
  41d6e3:	rcr    BYTE PTR [esi+ebp*2],1
  41d6e6:	pop    ecx
  41d6e7:	inc    edx
  41d6e8:	inc    ebp
  41d6e9:	add    BYTE PTR [bx+si],al
	...
  41d714:	dec    ebp
  41d715:	mov    dl,0x20
  41d717:	pop    edi
  41d718:	inc    edi
  41d719:	test   BYTE PTR [ebx],ah
  41d71b:	imul   esp,DWORD PTR [ebx],0x42
  41d71e:	dec    ebp
  41d71f:	add    BYTE PTR [esi],bh
  41d721:	inc    edx
  41d722:	add    DWORD PTR [eax],eax
  41d724:	ds inc edx
  41d726:	add    DWORD PTR [eax],eax
  41d728:	push   eax
  41d729:	lahf   
  41d72a:	sub    al,0x63
  41d72c:	ds jno 0x41d750
  41d72f:	data16 or cl,BYTE PTR [ebp-0x61dc8ddd]
  41d736:	pop    ecx
  41d737:	adc    BYTE PTR [bx+si+0x5243],dl
  41d73c:	ds pop ebp
  41d73e:	xor    al,0x63
  41d740:	loopne 0x41d783
  41d742:	add    al,0x0
  41d744:	ds ret 0x631e
  41d748:	in     al,dx
  41d749:	arpl   WORD PTR [edi],sp
  41d74b:	ins    BYTE PTR es:[edi],dx
  41d74c:	or     eax,0xe263df10
  41d751:	push   ebp
  41d752:	add    DWORD PTR [ebp-0xe],edx
  41d755:	adc    BYTE PTR [edx+0x63],cl
  41d758:	retf   0x2602
  41d75b:	je     0x41d704
  41d75d:	xor    ch,BYTE PTR [eax]
  41d75f:	inc    ecx
  41d760:	mov    eax,ds:0x9a6d3612
  41d765:	pop    ds
  41d766:	push   esi
  41d767:	arpl   WORD PTR [ebp-0x5792e3eb],bp
  41d76d:	sti    
  41d76e:	and    al,0x0
  41d770:	outs   dx,BYTE PTR ds:[esi]
  41d771:	push   ss
  41d772:	and    ah,BYTE PTR [ecx-0x5d]
  41d775:	pop    ebx
  41d776:	call   0x0:0x36
	...
  41d7a1:	add    BYTE PTR [ecx-0x49],bh
  41d7a4:	mov    bl,0x22
  41d7a6:	(bad)  
  41d7a7:	mov    eax,0xc259369a
  41d7ac:	jge    0x41d7ea
  41d7ae:	bound  ebx,QWORD PTR [ebx-0x19]
  41d7b1:	and    DWORD PTR [ebp-0x39],ebx
  41d7b4:	mov    BYTE PTR [ebx],dh
  41d7b6:	popa   
  41d7b7:	mov    ?,WORD PTR [ecx+0x7bbf5de1]
  41d7bd:	add    edi,DWORD PTR [eax-0x48]
  41d7c0:	pop    ebx
  41d7c1:	inc    ebx
  41d7c2:	dec    esi
  41d7c3:	les    ebp,FWORD PTR [ecx]
  41d7c5:	aaa    
  41d7c6:	and    BYTE PTR [ecx-0x3307c9b4],bh
  41d7cc:	inc    esp
  41d7cd:	daa    
  41d7ce:	mov    eax,ds:0xce0d384c
  41d7d4:	inc    esp
  41d7d5:	ss std 
  41d7d7:	sar    BYTE PTR [edi+ebx*1],0x3e
  41d7db:	pop    ebx
  41d7dc:	and    BYTE PTR ds:0x1de1d98e,bl
  41d7e3:	mov    edi,0xc70f040b
  41d7e8:	push   cs
  41d7e9:	inc    ecx
  41d7ea:	out    dx,al
  41d7eb:	mov    bh,0xfd
  41d7ed:	push   esp
  41d7ee:	repnz sar ecx,0x22
  41d7f2:	(bad)  [edi-0x4906fc19]
  41d7f8:	std    
  41d7f9:	and    cl,dh
  41d7fb:	ret    
  41d7fc:	mov    edx,0xd3b71bf5
  41d801:	pop    ds
  41d802:	ds pushf 
  41d804:	retf   
  41d805:	pop    ds
	...
  41d82e:	add    BYTE PTR [eax],al
  41d830:	stos   DWORD PTR es:[edi],eax
  41d831:	mov    esi,0x9c9d37c8
  41d836:	mov    ebp,0xd0c18127
  41d83b:	aaa    
  41d83c:	cdq    
  41d83d:	mov    esp,0xb8941acb
  41d842:	add    BYTE PTR [edx-0x55ff48cc],bl
  41d848:	and    eax,0x699261be
  41d84d:	shr    BYTE PTR [ecx-0x7c],0x1f
  41d851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d852:	arpl   WORD PTR [ebx+ebx*1+0x459a72be],ax
  41d859:	mov    edx,0xcd77e970
  41d85e:	arpl   WORD PTR [edx+esi*2+0x7ae964ba],ax
  41d865:	int    0x63
  41d867:	test   DWORD PTR [eax+0x195473c1],eax
  41d86d:	int    0x5f
  41d86f:	push   ebp
  41d870:	popa   
  41d871:	xchg   edx,eax
  41d872:	add    BYTE PTR [edx],ch
  41d874:	push   0x702764be
  41d879:	mov    esi,0xccfae963
  41d87e:	ja     0x41d8b9
  41d880:	push   esi
  41d881:	cwde   
  41d882:	arpl   WORD PTR ds:0x3b63cbe9,di
  41d888:	dec    ebx
  41d889:	mov    esi,0xccfae977
  41d88e:	ja     0x41d8a9
  41d890:	ss sahf 
  41d892:	js     0x41d8ad
	...
  41d8bc:	add    BYTE PTR [eax],al
  41d8be:	pop    ds
  41d8bf:	int    0x74
  41d8c1:	and    ah,BYTE PTR [ecx]
  41d8c3:	retf   0x2a00
  41d8c6:	sub    dl,cl
  41d8c8:	jo     0x41d8bf
  41d8ca:	add    DWORD PTR [esi-0x3ff4028f],edi
  41d8d0:	ja     0x41d8f4
  41d8d2:	and    edx,ecx
  41d8d4:	add    BYTE PTR [edx-0x2a8f35f5],ch
  41d8da:	xchg   ebx,eax
  41d8db:	mov    esp,0xca5ccc6c
  41d8e0:	arpl   WORD PTR [edx+0x74c15e],bp
  41d8e6:	repnz test BYTE PTR [eax+eax*1-0x4b],dh
  41d8eb:	jns    0x41d963
  41d8ed:	gs aad 0x88
  41d8f0:	push   esp
  41d8f1:	outs   dx,DWORD PTR ds:[esi]
  41d8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8f3:	jns    0x41d961
  41d8f5:	popw   ss
  41d8f7:	pushf  
  41d8f8:	jo     0x41d95f
  41d8fa:	leave  
  41d8fb:	lods   al,BYTE PTR ds:[esi]
  41d8fc:	jb     0x41d96d
  41d8fe:	les    edi,FWORD PTR [ecx+0x6f]
  41d901:	jae    0x41d8b6
  41d903:	jnp    0x41d96c
  41d905:	gs leave 
  41d907:	pop    esp
  41d908:	inc    ebp
  41d909:	ins    DWORD PTR es:[edi],dx
  41d90a:	push   edi
  41d90b:	jns    0x41d97f
  41d90d:	jae    0x41d8c7
  41d90f:	jp     0x41d96e
  41d911:	je     0x41d8d5
  41d913:	nop
  41d914:	imul   esp,DWORD PTR [edi+0x70],0xffffff82
  41d918:	fs dec edi
  41d91a:	or     DWORD PTR [edx+0x5715656f],esi
  41d920:	inc    ebx
  41d921:	add    BYTE PTR gs:[eax],al
	...
  41d94c:	adc    esi,DWORD PTR [ebx+0x70f26b6b]
  41d952:	inc    ebp
  41d953:	outs   dx,BYTE PTR ds:[esi]
  41d954:	add    DWORD PTR [eax+0x72],esi
  41d957:	ins    DWORD PTR es:[edi],dx
  41d958:	push   es
  41d959:	xchg   ebx,eax
  41d95a:	outs   dx,DWORD PTR gs:[esi]
  41d95c:	dec    ecx
  41d95d:	push   edi
  41d95e:	aas    
  41d95f:	outs   dx,DWORD PTR ds:[esi]
  41d960:	sub    DWORD PTR [ecx-0x53ac8d9f],ecx
  41d966:	gs xor esi,DWORD PTR fs:[eax+0x4f]
  41d96b:	je     0x41d9b2
  41d96d:	outs   dx,BYTE PTR ds:[esi]
  41d96e:	outs   dx,BYTE PTR ds:[esi]
  41d96f:	addr16 inc esp
  41d971:	outs   dx,BYTE PTR ds:[esi]
  41d972:	fs inc ecx
  41d974:	addr16 nop
  41d976:	imul   esp,DWORD PTR [edi+0x38],0x71
  41d97a:	push   ecx
  41d97b:	jae    0x41d9bf
  41d97d:	lea    edi,ds:0x6b718b00
  41d983:	imul   edx,DWORD PTR [edx],0xffffff8c
  41d986:	push   eax
  41d987:	jb     0x41d9c7
  41d989:	sbb    esi,DWORD PTR [ebx]
  41d98b:	addr16 call 0x1d23:0x88632617
  41d993:	jae    0x41d938
  41d995:	add    eax,DWORD PTR [ecx]
  41d997:	aas    
  41d998:	call   0x1de6:0x9271381c
  41d99f:	imul   ebx,DWORD PTR [ebx+0x677250e8],0x5b6c1be8
  41d9a9:	loope  0x41d9d2
  41d9ab:	jno    0x41d9eb
  41d9ad:	inc    edx
  41d9ae:	and    dh,BYTE PTR [edx+0x0]
	...
  41d9d9:	add    BYTE PTR [edi-0x2e],ah
  41d9dc:	xor    eax,0x25200c31
  41d9e1:	ins    BYTE PTR es:[edi],dx
  41d9e2:	bound  eax,QWORD PTR [edx+0x42]
  41d9e5:	jb     0x41da2e
  41d9e7:	shl    BYTE PTR ds:0x32b25053,cl
  41d9ed:	ins    DWORD PTR es:[edi],dx
  41d9ee:	xor    dl,BYTE PTR [edi-0x5d058bdf]
  41d9f4:	cmp    BYTE PTR [edi+0x3e],bl
  41d9f7:	test   DWORD PTR [edi],esp
  41d9f9:	jb     0x41da25
  41d9fb:	mov    DWORD PTR [ebx+eiz*2],esi
  41d9fe:	sub    BYTE PTR [ebp+0x2b],dh
  41da01:	jno    0x41da0d
  41da03:	lahf   
  41da04:	pop    ds
  41da05:	push   ecx
  41da06:	adc    dl,BYTE PTR [ecx+0x41ff6332]
  41da0c:	inc    edx
  41da0d:	arpl   sp,bp
  41da0f:	gs inc edi
  41da11:	outs   dx,BYTE PTR ds:[esi]
  41da12:	jmp    0x41da6a
  41da14:	inc    ecx
  41da15:	arpl   sp,bp
  41da17:	sbb    esp,DWORD PTR gs:[esi-0x29]
  41da1b:	and    esi,DWORD PTR fs:[ebx+eiz*8+0x54]
  41da20:	cmp    al,0x6e
  41da22:	in     eax,dx
  41da23:	dec    ebp
  41da24:	push   ds
  41da25:	jb     0x41da0a
  41da27:	inc    ecx
  41da28:	inc    edx
  41da29:	arpl   sp,cx
  41da2b:	pop    edx
  41da2c:	fild   DWORD PTR [edx-0x56]
  41da2f:	mov    esi,0xc78f28da
  41da34:	(bad)  
  41da35:	xor    DWORD PTR [ebp-0x56ce55a5],ebx
  41da3b:	retf   
  41da3c:	mov    ebx,0x44
	...
  41da65:	add    BYTE PTR [eax],al
  41da67:	add    BYTE PTR [edi-0x73e34b34],bl
  41da6d:	mov    eax,0xc78c28aa
  41da72:	shl    BYTE PTR ds:0x3788ba99,0x5d
  41da79:	stos   DWORD PTR es:[edi],eax
  41da7a:	cdq    
  41da7b:	sbb    al,0x68
  41da7d:	mov    esp,0xb877289b
  41da82:	nop
  41da83:	add    edi,DWORD PTR [esi]
  41da85:	sar    BYTE PTR [edx+0x1c],0x28
  41da89:	mov    bh,0x8b
  41da8b:	pop    ds
  41da8c:	mov    al,ds:0xb8831c7a
  41da92:	jae    0x41dad6
  41da94:	push   ebx
  41da95:	rcl    BYTE PTR [edi+0x1d],0x28
  41da99:	mov    eax,0xbc0e384d
  41da9e:	pop    ebx
  41da9f:	sbb    al,0x69
  41daa1:	pop    ebx
  41daa2:	out    0x33,eax
  41daa4:	das    
  41daa5:	(bad)  
  41daa6:	push   esi
  41daa7:	xor    bl,BYTE PTR ds:0x22280dba
  41daad:	mov    edi,0xc6ef53e7
  41dab2:	xor    bl,BYTE PTR ds:0x1927199a
  41dab9:	mov    DWORD PTR [ebx+edi*1],0x231bc9e0
  41dac0:	fdivr  DWORD PTR [ecx+0x5b3e0404]
  41dac6:	out    0x3,eax
  41dac8:	ds pop ebx
  41daca:	out    0x3,eax
	...
  41daf4:	add    BYTE PTR [eax],al
  41daf6:	ds pop ebx
  41daf8:	add    cl,ch
  41dafa:	cmp    eax,0x3de9005b
  41daff:	pop    ebx
  41db00:	add    cl,ch
  41db02:	cmp    eax,0x3de9005b
  41db07:	pop    ebx
  41db08:	add    cl,ch
  41db0a:	cmp    eax,0x3de9005b
  41db0f:	pop    ebx
  41db10:	add    cl,ch
  41db12:	cmp    eax,0x3de9005b
  41db17:	pop    ebx
  41db18:	add    cl,ch
  41db1a:	cmp    eax,0x3de9005b
  41db1f:	pop    ebx
  41db20:	add    cl,ch
  41db22:	cmp    eax,0x3de9005b
  41db27:	pop    ebx
  41db28:	add    cl,ch
  41db2a:	cmp    eax,0x3de9005b
  41db2f:	pop    ebx
  41db30:	add    cl,ch
  41db32:	cmp    eax,0x3de9005b
  41db37:	pop    ebx
  41db38:	add    cl,ch
  41db3a:	cmp    eax,0x3de9005b
  41db3f:	pop    ebx
  41db40:	add    cl,ch
  41db42:	cmp    eax,0x3de9005b
  41db47:	pop    ebx
  41db48:	add    cl,ch
  41db4a:	cmp    eax,0x3de9005b
  41db4f:	pop    ebx
  41db50:	add    cl,ch
  41db52:	cmp    eax,0x3de9005b
  41db57:	pop    ebx
  41db58:	add    cl,ch
	...
  41db82:	add    BYTE PTR [eax],al
  41db84:	cmp    eax,0x3de9005b
  41db89:	pop    ebx
  41db8a:	add    cl,ch
  41db8c:	cmp    eax,0x1911715b
  41db91:	mov    edi,0x7f6fda6c
  41db96:	fs std 
  41db98:	inc    ecx
  41db99:	pop    ebx
  41db9a:	push   ecx
  41db9b:	add    BYTE PTR [edi],cl
  41db9d:	cwde   
  41db9e:	popa   
  41db9f:	je     0x41dbba
  41dba1:	jo     0x41dc0f
  41dba3:	cmp    cl,BYTE PTR fs:[ecx+0x714b6150]
  41dbaa:	cmp    eax,0x592700
  41dbaf:	add    BYTE PTR [edi],ah
  41dbb1:	dec    sp
  41dbb3:	inc    ecx
  41dbb4:	pop    ss
  41dbb5:	xor    ecx,DWORD PTR [ecx+0x41]
  41dbb8:	pop    ss
  41dbb9:	inc    ebx
  41dbba:	dec    ecx
  41dbbb:	inc    ecx
  41dbbc:	daa    
  41dbbd:	test   eax,0x9f27414c
  41dbc2:	dec    esp
  41dbc3:	inc    ecx
  41dbc4:	pop    ss
  41dbc5:	outs   dx,DWORD PTR ds:[esi]
  41dbc6:	dec    esp
  41dbc7:	inc    ecx
  41dbc8:	pop    ss
  41dbc9:	jg     0x41dc17
  41dbcb:	inc    ecx
  41dbcc:	out    0xeb,eax
  41dbce:	dec    ebx
  41dbcf:	inc    ecx
  41dbd0:	out    0xb2,eax
  41dbd2:	dec    esp
  41dbd3:	inc    ecx
  41dbd4:	xlat   BYTE PTR ds:[ebx]
  41dbd5:	mov    esi,0x27d7414c
  41dbda:	dec    esp
  41dbdb:	inc    ecx
  41dbdc:	out    0x3,eax
  41dbde:	dec    esp
  41dbdf:	inc    ecx
  41dbe0:	out    0x60,eax
  41dbe2:	dec    ecx
  41dbe3:	inc    ecx
  41dbe4:	xlat   BYTE PTR ds:[ebx]
  41dbe5:	pop    eax
	...
  41dc12:	xlat   BYTE PTR ds:[ebx]
  41dc13:	pop    ecx
  41dc14:	add    BYTE PTR [eax],al
  41dc16:	daa    
  41dc17:	pop    edx
  41dc18:	add    BYTE PTR [eax],al
  41dc1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc1b:	xchg   ebx,eax
  41dc1c:	jne    0x41dc3e
  41dc1e:	pop    ebx
  41dc1f:	jo     0x41dc80
  41dc21:	jne    0x41dc85
  41dc23:	jp     0x41dc93
  41dc25:	je     0x41dc7b
  41dc27:	push   edi
  41dc28:	std    
  41dc29:	jmp    DWORD PTR [edi-0x68ffe628]
  41dc2f:	pop    eax
  41dc30:	cmp    eax,0x5d9b4770
  41dc35:	je     0x41dc7d
  41dc37:	push   edi
  41dc38:	std    
  41dc39:	jmp    DWORD PTR [edi-0x28]
  41dc3c:	sbb    eax,DWORD PTR [eax]
  41dc3e:	ds inc edx
  41dc40:	add    DWORD PTR [ecx+edx*8+0x60],ecx
  41dc44:	and    ebp,DWORD PTR [esi+ebx*1-0x7d]
  41dc48:	xor    al,0x70
  41dc4a:	cli    
  41dc4b:	bound  esi,QWORD PTR [eax]
  41dc4d:	pop    edi
  41dc4e:	ds inc ebx
  41dc50:	add    DWORD PTR [eax],eax
  41dc52:	mov    esi,0x3e000122
  41dc57:	add    DWORD PTR [ecx+eiz*2],esp
  41dc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc5b:	pop    ss
  41dc5c:	add    edi,edi
  41dc5e:	sub    DWORD PTR [edx-0x7f],eax
  41dc61:	pop    ds
  41dc62:	ds inc edx
  41dc64:	add    DWORD PTR [ecx-0x57],eax
  41dc67:	and    eax,0x119b671e
  41dc6c:	add    edi,edi
  41dc6e:	or     DWORD PTR [edx-0x7f],eax
  41dc71:	and    bh,BYTE PTR [esi]
  41dc73:	inc    edx
  41dc74:	add    DWORD PTR [eax+0x0],ecx
	...
  41dc9f:	add    BYTE PTR [edi-0xf],ah
  41dca2:	sub    al,0x6d
  41dca4:	ins    BYTE PTR es:[edi],dx
  41dca5:	sti    
  41dca6:	add    BYTE PTR [edx],al
  41dca8:	ds inc edx
  41dcaa:	add    DWORD PTR [ebx],0x4b01423e
  41dcb0:	push   edi
  41dcb1:	and    bh,BYTE PTR ds:0x18c75d6d
  41dcb7:	arpl   WORD PTR [eax-0x32],bx
  41dcba:	add    BYTE PTR ss:[edx+eax*2],bh
  41dcbe:	add    DWORD PTR [eax+0x1425d],eax
  41dcc4:	std    
  41dcc5:	pushf  
  41dcc6:	pop    ss
  41dcc7:	imul   ebx,DWORD PTR [ecx],0xffffff94
  41dcca:	in     al,0x3e
  41dccc:	cs mov dl,0x40
  41dccf:	pop    edi
  41dcd0:	adc    ah,BYTE PTR [ebx+0x4191ff04]
  41dcd6:	and    DWORD PTR ds:0x4b01423e,0x67546207
  41dce0:	fstp   QWORD PTR [edx+0x1b]
  41dce3:	xor    esp,ebp
  41dce5:	mov    ch,0x1a
  41dce7:	add    al,0x3c
  41dce9:	pop    ebx
  41dcea:	out    0x83,eax
  41dcec:	adc    BYTE PTR [ebx-0x19],bl
  41dcef:	add    edi,edi
  41dcf1:	mov    ebx,0xbce31914
  41dcf6:	(bad)  
  41dcf7:	aas    
  41dcf8:	(bad)  [edi-0x4322e704]
  41dcfe:	repz ss ds pop ebp
  41dd02:	out    0x3,eax
	...
  41dd2c:	add    BYTE PTR [eax],al
  41dd2e:	mov    esi,0x3e03e77a
  41dd33:	sahf   
  41dd34:	(bad)  
  41dd35:	sbb    BYTE PTR [ebp+0x58e3bdba],dl
  41dd3b:	mov    edi,0xb4a01cd4
  41dd40:	mov    edx,0xbbbc8c2f
  41dd45:	sbb    al,0x88
  41dd47:	rol    BYTE PTR [edi],0x50
  41dd4a:	imul   edi,DWORD PTR [edx+0x5c3e3693],0xffffffe7
  41dd51:	add    edi,DWORD PTR [esi+0x3e03e78b]
  41dd57:	pushf  
  41dd58:	sbb    DWORD PTR [eax],0x61
  41dd5b:	mov    ecx,0xcd4a3690
  41dd60:	mov    BYTE PTR [edi],ch
  41dd62:	popa   
  41dd63:	ror    DWORD PTR [ebx+eiz*8+0x177eba6d],1
  41dd6a:	das    
  41dd6b:	pop    ebx
  41dd6c:	call   0xe41d1b74
  41dd71:	add    edi,DWORD PTR [esi]
  41dd73:	pop    ebx
  41dd74:	aaa    
  41dd75:	pop    ds
  41dd76:	sub    al,0xce
  41dd78:	ds sbb bh,cl
  41dd7b:	mov    dh,0xe7
  41dd7d:	push   esp
  41dd7e:	and    eax,ecx
  41dd80:	xor    esi,DWORD PTR [ecx]
  41dd82:	jmp    0xf68dde53
  41dd87:	xchg   ebp,eax
  41dd88:	addr16 dec edx
  41dd8a:	xor    BYTE PTR [eax-0x30e3e98f],bh
  41dd90:	pop    esp
  41dd91:	add    BYTE PTR ss:[eax],al
	...
  41ddbc:	inc    ebp
  41ddbd:	mov    ecx,0xcc2f0664
  41ddc2:	pop    esp
  41ddc3:	sub    ch,BYTE PTR [ecx]
  41ddc5:	int    0x72
  41ddc7:	or     al,0x34
  41ddc9:	iret   
  41ddca:	push   esi
  41ddcb:	add    al,0x10
  41ddcd:	int3   
  41ddce:	addr16 push es
  41ddd0:	and    al,0xa7
  41ddd2:	inc    ebx
  41ddd3:	icebp  
  41ddd4:	ins    DWORD PTR es:[edi],dx
  41ddd5:	mov    bh,0x6d
  41ddd7:	fist   DWORD PTR [eax-0x33]
  41ddda:	pop    esp
  41dddb:	mov    edx,0xc56cbe45
  41dde0:	sbb    eax,0x39bd6da0
  41dde5:	mov    esi,0xbe3dba72
  41ddea:	js     0x41dda5
  41ddec:	xor    DWORD PTR [eax+0x794bcc72],edi
  41ddf2:	arpl   WORD PTR [ecx-0x2baea4a8],si
  41ddf8:	in     al,dx
  41ddf9:	je     0x41de2e
  41ddfb:	int3   
  41ddfc:	in     al,dx
  41ddfd:	xchg   ecx,eax
  41ddfe:	add    cl,ch
  41de00:	cmp    eax,0x38ba005b
  41de05:	mov    ds:0xcd30796b,al
  41de0a:	jno    0x41dd9a
  41de0c:	daa    
  41de0d:	stos   BYTE PTR es:[edi],al
  41de0e:	je     0x41dd9c
  41de10:	ins    DWORD PTR es:[edi],dx
  41de11:	int    0x67
  41de13:	ja     0x41de69
  41de15:	mov    bh,0x63
  41de17:	dec    esi
  41de18:	push   ecx
  41de19:	pop    ebx
  41de1a:	push   ecx
  41de1b:	inc    esp
  41de1c:	push   cs
  41de1d:	mov    esp,0x3962
	...
  41de4a:	push   0x364076c2
  41de4f:	mov    esi,0x5f020065
  41de54:	dec    edi
  41de55:	gs push esp
  41de57:	addr16 pop ebp
  41de59:	outs   dx,BYTE PTR ds:[esi]
  41de5a:	lock imul ecx,DWORD PTR [esi+0x6f],0x79666633
  41de62:	aaa    
  41de63:	xchg   ecx,eax
  41de64:	gs jbe 0x41deb5
  41de67:	arpl   WORD PTR [ecx+0x67],sp
  41de6a:	xor    bl,BYTE PTR [edi+0x4f]
  41de6d:	gs and al,0x91
  41de70:	popa   
  41de71:	popa   
  41de72:	push   ebx
  41de73:	push   0x6a2c6f54
  41de78:	outs   dx,BYTE PTR ds:[esi]
  41de79:	push   eax
  41de7a:	inc    ebp
  41de7b:	fs jbe 0x41dee7
  41de7e:	cmp    ebp,DWORD PTR [edx+0x63]
  41de81:	gs daa 
  41de83:	mov    al,0x61
  41de85:	inc    edx
  41de86:	idiv   BYTE PTR [edi+0x67]
  41de89:	jne    0x41de92
  41de8b:	lods   eax,DWORD PTR ds:[esi]
  41de8c:	jb     0x41def7
  41de8e:	icebp  
  41de8f:	gs ins BYTE PTR es:[edi],dx
  41de91:	add    BYTE PTR gs:[edx+0x0],ch
  41de95:	push   ebx
  41de96:	add    ch,BYTE PTR [edi+0x63c37361]
  41de9c:	jb     0x41df03
  41de9e:	xlat   BYTE PTR ds:[ebx]
  41de9f:	mov    fs,WORD PTR [ebp+0x76]
  41dea2:	into   
  41dea3:	jo     0x41df06
  41dea5:	addr16 ret 0x4f5c
  41dea9:	gs sahf 
  41deab:	bound  ebx,QWORD PTR [edi+0x72]
	...
  41ded6:	add    BYTE PTR [eax],al
  41ded8:	ret    0x6f7d
  41dedb:	gs mov dh,0x79
  41dede:	imul   esi,DWORD PTR [esi+esi*4-0x54],0x72
  41dee3:	imul   eax,DWORD PTR [ecx+0x65],0x69c0656c
  41deea:	add    BYTE PTR [ebx+0x2],dl
  41deed:	sahf   
  41deee:	outs   dx,DWORD PTR ds:[esi]
  41deef:	jae    0x41deff
  41def1:	push   0xa43e506e
  41def6:	sbb    ebp,DWORD PTR [ebx+0x1f]
  41def9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41defa:	sub    edx,DWORD PTR [ecx+eiz*1-0x53]
  41defe:	pop    ds
  41deff:	outs   dx,BYTE PTR ds:[esi]
  41df00:	out    dx,al
  41df01:	sbb    DWORD PTR [ebx],0x76
  41df04:	pop    ss
  41df05:	sahf   
  41df06:	pop    ds
  41df07:	gs jecxz 0x41df3b
  41df0a:	add    DWORD PTR [eax+0x1],edx
  41df0d:	test   DWORD PTR [eax+0x20],edx
  41df10:	and    esp,DWORD PTR [ebp-0x1c]
  41df13:	inc    edi
  41df14:	or     al,BYTE PTR [esi+0x80f2d54]
  41df1a:	icebp  
  41df1b:	or     al,BYTE PTR [edx+ecx*4+0x15]
  41df1f:	jno    0x41def3
  41df21:	sbb    esp,ecx
  41df23:	and    cl,ch
  41df25:	idiv   DWORD PTR ds:[esi]
  41df28:	popf   
  41df29:	push   ebp
  41df2a:	pop    ds
  41df2b:	jo     0x41ded7
  41df2d:	jl     0x41df13
  41df2f:	sub    DWORD PTR [ecx+0x6c],ebx
  41df32:	test   DWORD PTR [ecx],0x6322157f
  41df38:	mov    gs,WORD PTR [esi]
  41df3a:	fadd   DWORD PTR [edx+0x0]
	...
  41df65:	add    BYTE PTR [eax-0x689be9eb],ah
  41df6b:	sbb    BYTE PTR [esi],bl
  41df6d:	cmp    bl,BYTE PTR [esi+0x1b]
  41df70:	sbb    eax,0x1c0e6863
  41df75:	je     0x41dfee
  41df77:	cs loope 0x41dfa3
  41df7a:	and    eax,0x332fe7e3
  41df7f:	cmp    al,0x42
  41df81:	ins    DWORD PTR es:[edi],dx
  41df82:	push   0x4a6e1fee
  41df87:	das    
  41df88:	xor    eax,0x2ce15863
  41df8d:	push   0x6be01204
  41df92:	xor    esp,DWORD PTR [edi]
  41df94:	test   DWORD PTR [eax+0x21],0x1d16555b
  41df9b:	mov    esp,0xb9131d53
  41dfa0:	adc    esp,esp
  41dfa2:	push   ds
  41dfa3:	mov    bh,0x3e
  41dfa5:	xor    ebx,DWORD PTR ds:0x1b42f156
  41dfab:	mov    ecx,0xcf102133
  41dfb0:	add    al,0x50
  41dfb2:	icebp  
  41dfb3:	retf   0xea44
  41dfb6:	push   ecx
  41dfb7:	mov    edx,0xb1da3417
  41dfbc:	or     ah,BYTE PTR ds:0x1606b1ea
  41dfc2:	sub    edi,DWORD PTR [eax-0x3122cff6]
  41dfc8:	aam    0x32
	...
  41dff2:	add    BYTE PTR [eax],al
  41dff4:	ror    ah,cl
  41dff6:	add    al,0x25
  41dff8:	aad    0x55
  41dffa:	loope  0x41e03e
  41dffc:	stos   DWORD PTR es:[edi],eax
  41dffd:	mov    ch,0xf3
  41dfff:	and    BYTE PTR [eax-0x67beeb31],ah
  41e005:	mov    edx,0xb5991fce
  41e00a:	into   
  41e00b:	jmp    0x16029949
  41e010:	jno    0x41dfdb
  41e012:	sar    al,0x37
  41e015:	mov    al,0xba
  41e017:	and    BYTE PTR [eax+edi*2-0x4aa2e158],cl
  41e01e:	mov    bl,0xe9
  41e020:	push   ecx
  41e021:	cwde   
  41e022:	xchg   esi,eax
  41e023:	sub    DWORD PTR [ecx-0x49],esp
  41e026:	mov    esp,DWORD PTR [ebx+edx*1]
  41e029:	pop    ebp
  41e02b:	repz cmp DWORD PTR [ebx-0x76],esi
  41e02f:	push   ss
  41e030:	gs retf 
  41e032:	mov    BYTE PTR [edi],ch
  41e034:	popa   
  41e035:	mov    ecx,0x7b07208b
  41e03a:	add    BYTE PTR [esp+ecx*1-0x5136bc62],ah
  41e041:	js     0x41e073
  41e043:	and    ah,BYTE PTR [edx+0x5e4f67af]
  41e049:	mov    eax,0x8da25a75
  41e04e:	cmp    BYTE PTR [eax],al
  41e050:	mov    DWORD PTR [ebx+ecx*1-0xd],edx
  41e054:	cmp    eax,0x4f6d9c
	...
  41e081:	add    BYTE PTR [esi-0x46],cl
  41e084:	outs   dx,BYTE PTR ds:[esi]
  41e085:	cmp    eax,0x3f639291
  41e08a:	push   ebx
  41e08b:	iret   
  41e08c:	push   0x6d973de3
  41e091:	or     bl,BYTE PTR ds:0x300667cf
  41e097:	add    DWORD PTR [eax],0x20af1126
  41e09d:	int3   
  41e09e:	push   cs
  41e09f:	jnp    0x41e0e9
  41e0a1:	adc    eax,0xb82daaee
  41e0a6:	adc    esi,DWORD PTR [esi+0xb]
  41e0a9:	jecxz  0x41e120
  41e0ab:	mov    eax,0x6617dd71
  41e0b0:	and    ebx,edx
  41e0b2:	sub    BYTE PTR [edi+edi*1-0x36],dl
  41e0b6:	pop    esi
  41e0b7:	mov    edx,0x6627d570
  41e0bc:	sub    dl,BYTE PTR [esi]
  41e0be:	in     al,0x50
  41e0c0:	or     ch,BYTE PTR [eax-0x469c43a2]
  41e0c6:	sub    DWORD PTR [edx+0x43],esi
  41e0c9:	mov    edi,0x9064b81e
  41e0ce:	push   ebx
  41e0cf:	sar    BYTE PTR [edx],0xc9
  41e0d2:	inc    esp
  41e0d3:	mov    edi,0xbe298763
  41e0d8:	je     0x41e06a
  41e0da:	jmp    0xfc420b44
  41e0df:	mov    BYTE PTR [ecx],bh
  41e0e1:	xor    dl,dl
  41e0e3:	inc    ebx
  41e0e4:	inc    eax
  41e0e5:	outs   dx,DWORD PTR ds:[esi]
	...
  41e10e:	add    BYTE PTR [eax],al
  41e110:	shr    DWORD PTR [edi+0x61],0x63
  41e114:	sub    esp,DWORD PTR [ecx+0x6b]
  41e117:	outs   dx,BYTE PTR ds:[esi]
  41e118:	pop    ebp
  41e119:	aas    
  41e11a:	pusha  
  41e11b:	ins    BYTE PTR es:[edi],dx
  41e11c:	lock mov esp,DWORD PTR [ecx+0xd]
  41e120:	popf   
  41e121:	xchg   esp,eax
  41e122:	outs   dx,DWORD PTR ds:[esi]
  41e123:	gs cmc 
  41e125:	sub    eax,0x6cfa673e
  41e12a:	je     0x41e166
  41e12c:	aaa    
  41e12d:	mov    gs,WORD PTR [ebx+0x7a]
  41e130:	(bad)  
  41e131:	bound  ebp,QWORD PTR [ecx+eiz*2+0x70]
  41e135:	xor    eax,0x2177302b
  41e13a:	pusha  
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	xor    cl,BYTE PTR [edi+0x793e745d]
  41e142:	ins    BYTE PTR es:[edi],dx
  41e143:	gs ins BYTE PTR es:[edi],dx
  41e145:	cmp    DWORD PTR [edx+0x53],ecx
  41e148:	push   cs
  41e149:	xchg   BYTE PTR [eax],ah
  41e14b:	xor    eax,0x20384971
  41e150:	pop    eax
  41e151:	pusha  
  41e152:	outs   dx,BYTE PTR ds:[esi]
  41e153:	xor    BYTE PTR fs:[eax+0x6f],bh
  41e157:	and    BYTE PTR [esi+0x37],bl
  41e15a:	es or  eax,0x74e2d
  41e160:	inc    ecx
  41e161:	pop    edi
  41e162:	cs cs daa 
  41e165:	popf   
  41e166:	sub    ch,BYTE PTR [esi]
  41e168:	sub    eax,0x2d2e2a5f
  41e16d:	pop    edi
  41e16e:	dec    eax
  41e16f:	push   edi
  41e170:	sahf   
  41e171:	test   BYTE PTR [eax],al
  41e173:	jnp    0x41e175
	...
  41e19d:	add    BYTE PTR [edx],bh
  41e19f:	dec    edi
  41e1a0:	xor    eax,0x2d261258
  41e1a5:	xor    al,0xff
  41e1a7:	sub    eax,0x263e3022
  41e1ac:	dec    ecx
  41e1ad:	sub    ebx,DWORD PTR [ebx]
  41e1af:	and    ch,bh
  41e1b1:	push   edi
  41e1b2:	and    eax,DWORD PTR [edx]
  41e1b4:	out    dx,eax
  41e1b5:	push   edi
  41e1b6:	adc    ebx,DWORD PTR [edi]
  41e1b8:	icebp  
  41e1b9:	xor    DWORD PTR [esi],edx
  41e1bb:	pop    ss
  41e1bc:	icebp  
  41e1bd:	xor    DWORD PTR [esi],edx
  41e1bf:	pop    ds
  41e1c0:	icebp  
  41e1c1:	xor    DWORD PTR [esi],eax
  41e1c3:	push   edi
  41e1c4:	aam    0x31
  41e1c6:	push   es
  41e1c7:	pop    edi
  41e1c8:	aam    0x31
  41e1ca:	not    BYTE PTR [esi-0x2c]
  41e1cd:	xor    esi,esi
  41e1cf:	xchg   esi,eax
  41e1d0:	add    al,0x45
  41e1d2:	and    eax,DWORD PTR [esi-0x54f5a0ae]
  41e1d8:	sbb    ah,BYTE PTR [ebx+0xd]
  41e1db:	mov    edx,DWORD PTR ds:0x4b86db74
  41e1e1:	outs   dx,BYTE PTR ds:[esi]
  41e1e2:	loopne 0x41e250
  41e1e4:	add    al,0x69
  41e1e6:	fistp  DWORD PTR [edi+0x32]
  41e1e9:	arpl   dx,bp
  41e1eb:	and    bl,dl
  41e1ed:	sub    eax,0x2d45da
  41e1f2:	test   DWORD PTR [eax+0x3a],0xd50bc96d
  41e1f9:	dec    edi
  41e1fa:	lods   al,BYTE PTR ds:[esi]
  41e1fb:	pop    ebp
  41e1fc:	and    eax,0x141ad63
  41e201:	push   ecx
	...
  41e22a:	add    BYTE PTR [eax],al
  41e22c:	cdq    
  41e22d:	adc    al,0x15
  41e22f:	jne    0x41e1d0
  41e231:	and    BYTE PTR [eax],ch
  41e233:	pop    esp
  41e234:	adc    BYTE PTR [ebx],0x13
  41e237:	pop    esp
  41e238:	outs   dx,BYTE PTR ds:[esi]
  41e239:	push   es
  41e23a:	sbb    BYTE PTR [ebp-0x69],ah
  41e23d:	sub    al,0x16
  41e23f:	pop    esp
  41e240:	js     0x41e230
  41e242:	xor    BYTE PTR [esi+eax*4+0x1d],bl
  41e246:	push   ss
  41e247:	je     0x41e2b6
  41e249:	xor    dh,BYTE PTR [esi]
  41e24b:	ins    DWORD PTR es:[edi],dx
  41e24c:	pusha  
  41e24d:	pop    ebx
  41e24e:	fwait
  41e24f:	sbb    al,BYTE PTR [ecx-0x7fc07b37]
  41e255:	mov    edx,0xab75d599
  41e25a:	jnp    0x41e274
  41e25c:	arpl   WORD PTR [edx-0x629de96b],si
  41e262:	xchg   ebx,eax
  41e263:	xor    ebx,DWORD PTR [edx]
  41e265:	xchg   ebx,eax
  41e266:	xchg   BYTE PTR [esi],dl
  41e268:	sub    cl,al
  41e26a:	out    0x36,eax
  41e26c:	sbb    edi,DWORD PTR [ebp-0x36fee4a5]
  41e272:	inc    esp
  41e273:	inc    eax
  41e274:	add    BYTE PTR [edx-0x45fb1ba7],bh
  41e27a:	cmp    eax,0x39be2325
  41e27f:	inc    eax
  41e280:	out    dx,al
  41e281:	mov    dh,0x34
  41e283:	sub    esp,ecx
  41e285:	mov    ah,0x3a
  41e287:	inc    eax
  41e288:	clc    
  41e289:	scas   al,BYTE PTR es:[edi]
  41e28a:	pop    ss
  41e28b:	inc    eax
  41e28c:	div    BYTE PTR [ebx+0x181a]
	...
  41e2ba:	out    dx,eax
  41e2bb:	pop    edx
  41e2bc:	cmp    dh,BYTE PTR [ebx]
  41e2be:	loopne 0x41e28e
  41e2c0:	push   ds
  41e2c1:	and    eax,0x4a2bbdcc
  41e2c6:	jmp    0xe1790693
  41e2cb:	int3   
  41e2cc:	add    al,0x28
  41e2ce:	xor    BYTE PTR [eax+ecx*1+0x1fbaa330],0x2d
  41e2d6:	scas   eax,DWORD PTR es:[edi]
  41e2d7:	(bad)  
  41e2d8:	(bad)  
  41e2d9:	adc    eax,0x37a59fa9
  41e2de:	outs   dx,BYTE PTR ds:[esi]
  41e2df:	xchg   ebx,eax
  41e2e0:	(bad)  
  41e2e1:	push   ss
  41e2e2:	mov    bl,BYTE PTR [ebx-0x46]
  41e2e5:	xor    ah,BYTE PTR [eax-0x73db4139]
  41e2eb:	mov    eax,0xcd99499b
  41e2f0:	add    bl,bh
  41e2f2:	xor    DWORD PTR [edi+ebx*2+0x44b716b7],ebp
  41e2f9:	nop
  41e2fa:	sbb    ch,BYTE PTR [edi-0x457a7993]
  41e300:	jno    0x41e29f
  41e302:	or     al,0xcd
  41e304:	ja     0x41e2b3
  41e306:	ja     0x41e2af
  41e308:	push   eax
  41e309:	mov    cl,0xc
  41e30b:	int3   
  41e30c:	je     0x41e2f7
  41e30e:	jo     0x41e2c0
  41e310:	data16 jge 0x41e367
  41e313:	mov    ds:0x99698472,al
  41e318:	pop    edi
  41e319:	pop    ebx
  41e31a:	call   0x0:0x4f5f95
	...
  41e345:	add    BYTE PTR [eax],al
  41e347:	add    BYTE PTR [ebp-0x48],bl
  41e34a:	arpl   WORD PTR [ebx-0x2],bx
  41e34d:	stos   DWORD PTR es:[edi],eax
  41e34e:	pop    edi
  41e34f:	push   edi
  41e350:	popa   
  41e351:	mov    bh,0x44
  41e353:	push   eax
  41e354:	pop    ebp
  41e355:	scas   eax,DWORD PTR es:[edi]
  41e356:	ins    DWORD PTR es:[edi],dx
  41e357:	inc    esi
  41e358:	or     bh,BYTE PTR [edx-0x32d0c28f]
  41e35e:	ja     0x41e36d
  41e360:	hlt    
  41e361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e362:	push   eax
  41e363:	xor    DWORD PTR [edi],ebp
  41e365:	int3   
  41e366:	je     0x41e351
  41e368:	or     eax,0x371a71a2
  41e36d:	mov    al,0x72
  41e36f:	add    eax,0xfa6d9342
  41e374:	sub    DWORD PTR [ecx+0x5b610c5f],edx
  41e37a:	push   ebx
  41e37b:	cli    
  41e37c:	pop    eax
  41e37d:	int    0x0
  41e37f:	sbb    eax,0xe963b155
  41e384:	inc    esi
  41e385:	mov    esp,0xc767be78
  41e38a:	jo     0x41e393
  41e38c:	gs mov cl,0x67
  41e38f:	jmp    0x8a7bdd
  41e394:	into   
  41e395:	xchg   BYTE PTR [ebp+eax*2-0x2b],cl
  41e399:	pop    ebp
  41e39a:	inc    ebp
  41e39b:	outs   dx,BYTE PTR ds:[esi]
  41e39c:	mov    ah,0x69
  41e39e:	pop    ebp
  41e39f:	ins    BYTE PTR es:[edi],dx
  41e3a0:	stos   DWORD PTR es:[edi],eax
  41e3a1:	cdq    
  41e3a2:	gs jb  0x41e37c
  41e3a5:	xchg   ebx,eax
  41e3a6:	je     0x41e418
  41e3a8:	mov    cs,WORD PTR [ebx+0x4e65]
	...
  41e3d6:	(bad)  
  41e3d7:	jo     0x41e43a
  41e3d9:	add    BYTE PTR [edx+ecx*4+0x7d407466],al
  41e3e0:	jb     0x41e447
  41e3e2:	fist   DWORD PTR [edx+0x72346968]
  41e3e8:	popa   
  41e3e9:	jb     0x41e3a6
  41e3eb:	and    BYTE PTR [ebp+0x6e],0xf3
  41e3ef:	mov    esi,DWORD PTR [ebx+0x73]
  41e3f2:	inc    edi
  41e3f3:	cwde   
  41e3f4:	imul   ebp,DWORD PTR [ebp-0x6],0x7d
  41e3f8:	outs   dx,BYTE PTR ds:[esi]
  41e3f9:	add    ch,BYTE PTR fs:[ecx+0x0]
  41e3fd:	push   ebx
  41e3fe:	call   0x6b95877
  41e403:	imul   esp,DWORD PTR [ecx+0x5c],0x73656f20
  41e40a:	sub    edi,DWORD PTR [edx+0x72]
  41e40d:	pop    esp
  41e40e:	and    ecx,DWORD PTR [esp+esi*2+0x40374b61]
  41e415:	outs   dx,DWORD PTR ds:[esi]
  41e416:	cmp    dh,BYTE PTR [edx+0x5d]
  41e419:	outs   dx,BYTE PTR ds:[esi]
  41e41a:	inc    ebx
  41e41b:	jp     0x41e48f
  41e41d:	add    BYTE PTR [ebx],bl
  41e41f:	xchg   esi,eax
  41e420:	jo     0x41e495
  41e422:	xor    BYTE PTR [esi+0x74],dh
  41e425:	arpl   WORD PTR [edi],di
  41e427:	push   edi
  41e428:	dec    edi
  41e429:	imul   esi,DWORD PTR [ebx],0x175c6f7a
  41e42f:	add    DWORD PTR [ebp+0x70],0x746563f4
  41e436:	ds adc eax,0x5c29
	...
  41e464:	jno    0x41e46b
  41e466:	inc    eax
  41e467:	inc    esi
  41e468:	push   0xffffffe2
  41e46a:	add    BYTE PTR [ecx+esi*2+0x2b],bl
  41e46e:	das    
  41e46f:	sbb    BYTE PTR cs:[bp+si],ch
  41e473:	add    BYTE PTR [eax],bl
  41e475:	sbb    ebp,DWORD PTR [edi]
  41e477:	add    DWORD PTR ds:[si],esi
  41e47b:	pop    ebp
  41e47c:	add    BYTE PTR [esi],0x31
  41e47f:	add    BYTE PTR [edx-0x5],bh
  41e482:	xor    al,BYTE PTR [eax]
  41e484:	xor    bh,0x46
  41e487:	inc    esp
  41e488:	ja     0x41e46e
  41e48a:	add    BYTE PTR [ecx+0x13],al
  41e48d:	out    0x45,al
  41e48f:	inc    esi
  41e490:	or     ah,dl
  41e492:	add    BYTE PTR [edi-0x3],cl
  41e495:	stc    
  41e496:	sub    DWORD PTR [ecx+0x2a],esi
  41e499:	test   eax,0x853e7712
  41e49e:	sub    eax,0x23a10a66
  41e4a3:	jb     0x41e4c8
  41e4a5:	outs   dx,BYTE PTR ds:[esi]
  41e4a6:	inc    ebp
  41e4a7:	ins    BYTE PTR es:[edi],dx
  41e4a8:	adc    DWORD PTR [ebx+eiz*1+0x43750d6c],edx
  41e4af:	push   eax
  41e4b0:	sti    
  41e4b1:	gs inc ecx
  41e4b3:	jae    0x41e4a7
  41e4b5:	xchg   esi,eax
  41e4b6:	inc    esi
  41e4b7:	push   esp
  41e4b8:	push   cs
  41e4b9:	adc    dl,bl
  41e4bb:	pop    ds
  41e4bc:	push   es
  41e4bd:	push   ecx
  41e4be:	das    
  41e4bf:	arpl   dx,si
  41e4c1:	add    BYTE PTR [ecx+0x54],0xd9
  41e4c5:	inc    eax
  41e4c6:	sub    eax,0x62
	...
  41e4ef:	add    BYTE PTR [eax],al
  41e4f1:	add    bh,bl
  41e4f3:	inc    ebx
  41e4f4:	add    DWORD PTR [ecx-0x57],edx
  41e4f7:	pop    eax
  41e4f8:	sbb    BYTE PTR [ebp-0x61],dh
  41e4fb:	inc    esp
  41e4fc:	sub    BYTE PTR [ecx+eax*4+0x3e],bl
  41e500:	bound  ebx,QWORD PTR cs:[edi+0x7f32d35b]
  41e507:	call   0x17dc:0x9c7248b7
  41e50e:	popf   
  41e50f:	cdq    
  41e510:	mov    bl,0x33
  41e512:	pop    esi
  41e513:	mov    DWORD PTR [edi],eax
  41e515:	xor    al,0x6c
  41e517:	mov    al,0xc5
  41e519:	sub    BYTE PTR [edi-0x34],ch
  41e51c:	shr    BYTE PTR [esi],0x58
  41e51f:	mov    edx,0x9c713fbb
  41e524:	mov    ebx,0x89af6b2e
  41e529:	and    al,0x4c
  41e52b:	pop    ebx
  41e52c:	mov    edx,0x96c7602e
  41e531:	and    al,0x4c
  41e533:	mov    dh,0xa3
  41e535:	inc    esi
  41e536:	sub    dh,BYTE PTR [eax-0x53dddb77]
  41e53c:	stos   BYTE PTR es:[edi],al
  41e53d:	inc    esp
  41e53e:	push   cs
  41e53f:	xchg   esi,eax
  41e540:	mov    eax,DWORD PTR [edx+0x2d]
  41e543:	(bad)  
  41e544:	dec    esp
  41e545:	inc    esi
  41e546:	repnz stos BYTE PTR es:[edi],al
  41e548:	pop    es
  41e549:	xlat   BYTE PTR ds:[ebx]
  41e54a:	xor    DWORD PTR [ebx-0x60e2ceba],edx
  41e550:	cmp    BYTE PTR [ebx-0x16],al
  41e553:	scas   eax,DWORD PTR es:[edi]
  41e554:	push   esi
  41e555:	xor    BYTE PTR [eax],al
	...
  41e57f:	add    ah,bl
  41e581:	mov    ecx,0xb00f0439
  41e586:	dec    ebp
  41e587:	sbb    bl,dh
  41e589:	mov    ecx,0x98022939
  41e58e:	adc    ebp,DWORD PTR [edi]
  41e590:	fdivr  QWORD PTR [ecx-0x6600ccf5]
  41e596:	aaa    
  41e597:	dec    ecx
  41e598:	jmp    0x1b98:0xdd18149b
  41e59f:	xor    al,0x5e
  41e5a1:	xchg   bh,al
  41e5a3:	xor    ebp,DWORD PTR [esi+ebp*4-0x33a8f100]
  41e5aa:	jno    0x41e5ac
  41e5ac:	push   ecx
  41e5ad:	lods   eax,DWORD PTR ds:[esi]
  41e5ae:	pop    edi
  41e5af:	aad    0x59
  41e5b1:	mov    es,WORD PTR [ecx-0x4b]
  41e5b4:	pusha  
  41e5b5:	mov    al,0x6c
  41e5b7:	retf   
  41e5b8:	(bad)  
  41e5b9:	leave  
  41e5ba:	add    BYTE PTR [edx-0x418b4ab0],bh
  41e5c0:	and    cl,cl
  41e5c2:	arpl   WORD PTR [ebp-0x34925088],bx
  41e5c8:	and    ch,BYTE PTR [edi-0x548555af]
  41e5ce:	inc    ebx
  41e5cf:	lds    edi,FWORD PTR [edx+ecx*8+0x74]
  41e5d3:	test   BYTE PTR [ebx-0x59],bh
  41e5d6:	push   eax
  41e5d7:	leave  
  41e5d8:	in     eax,0x5e
  41e5da:	dec    eax
  41e5db:	jle    0x41e5eb
  41e5dd:	mov    edx,0xa6fc985c
  41e5e2:	ins    DWORD PTR es:[edi],dx
  41e5e3:	mov    es,WORD PTR [eax]
	...
  41e60d:	add    BYTE PTR [ecx-0x47],ah
  41e610:	pop    edi
  41e611:	jnp    0x41e650
  41e613:	lods   al,BYTE PTR ds:[esi]
  41e614:	ins    DWORD PTR es:[edi],dx
  41e615:	xchg   DWORD PTR [ecx-0x38],ecx
  41e618:	pop    edi
  41e619:	pop    ebx
  41e61a:	popa   
  41e61b:	lahf   
  41e61c:	inc    ebp
  41e61d:	dec    ebp
  41e61e:	arpl   WORD PTR [ecx-0x63b0baa1],di
  41e624:	aas    
  41e625:	cmp    ecx,edi
  41e627:	sahf   
  41e628:	inc    ecx
  41e629:	cmp    al,0x56
  41e62b:	mov    edx,0x7b2a1546
  41e630:	cmp    BYTE PTR [ecx],cl
  41e632:	xor    cl,cl
  41e634:	ins    DWORD PTR es:[edi],dx
  41e635:	inc    edi
  41e636:	sbb    esp,ecx
  41e638:	jno    0x41e64a
  41e63a:	sub    ebp,DWORD PTR [ebp-0x7201f2a1]
  41e640:	inc    ecx
  41e641:	cmp    eax,0xb6cb01b
  41e646:	sbb    eax,0x630000c9
  41e64b:	cwde   
  41e64c:	ins    BYTE PTR es:[edi],dx
  41e64d:	outs   dx,DWORD PTR ds:[esi]
  41e64e:	inc    ebp
  41e64f:	jp     0x41e6bd
  41e651:	push   ebx
  41e652:	push   esp
  41e653:	call   0x7471:0x9c334550
  41e65a:	or     bl,BYTE PTR [eax+0x7e275054]
  41e660:	inc    ebx
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	add    BYTE PTR [ebp+ebx*2+0x6c],bh
  41e666:	les    ebx,FWORD PTR [edx+0x7daa503d]
  41e66c:	aas    
  41e66d:	jne    0x41e61a
  41e66f:	je     0x41e6b7
  41e671:	push   esp
	...
  41e69a:	add    BYTE PTR [eax],al
  41e69c:	(bad)  
  41e69d:	cmp    DWORD PTR [ebp+0x72],ecx
  41e6a0:	mov    al,ds:0xb3475c59
  41e6a5:	outs   dx,BYTE PTR ds:[esi]
  41e6a6:	bound  esp,QWORD PTR [ecx-0x3d]
  41e6a9:	mov    bh,BYTE PTR [edi]
  41e6ab:	inc    ecx
  41e6ac:	xchg   DWORD PTR [esp+ebx*2+0x6165aa43],edx
  41e6b3:	inc    esi
  41e6b4:	fisttp DWORD PTR [ecx+0x65ce4c20]
  41e6ba:	popa   
  41e6bb:	add    bl,dl
  41e6bd:	call   0x5054:0x97ba7471
  41e6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6c5:	jge    0x41e736
  41e6c7:	ins    DWORD PTR es:[edi],dx
  41e6c8:	inc    ecx
  41e6c9:	jae    0x41e728
  41e6cb:	je     0x41e664
  41e6cd:	mov    ch,BYTE PTR [ebx+0x66]
  41e6d0:	jmp    0x41e739
  41e6d2:	pop    ebp
  41e6d3:	jb     0x41e6df
  41e6d5:	fwait
  41e6d6:	inc    esi
  41e6d7:	ins    BYTE PTR es:[edi],dx
  41e6d8:	push   es
  41e6d9:	ins    BYTE PTR es:[edi],dx
  41e6da:	push   0x5c874f46
  41e6df:	xor    edx,DWORD PTR [edi-0x76]
  41e6e2:	imul   esp,DWORD PTR [esi+0x3b],0x68
  41e6e6:	pop    ebp
  41e6e7:	jb     0x41e723
  41e6e9:	fwait
  41e6ea:	inc    esi
  41e6eb:	ins    BYTE PTR es:[edi],dx
  41e6ec:	ds push ebx
  41e6ee:	punpckhbw mm7,mm0
  41e6f1:	mov    esi,DWORD PTR [eax+eax*1]
  41e6f4:	lea    esp,[ebp+0x26]
  41e6f7:	je     0x41e6a2
  41e6f9:	push   ebx
  41e6fa:	adc    ah,BYTE PTR [ebx-0x76]
  41e6fd:	ins    BYTE PTR es:[edi],dx
  41e6fe:	xor    BYTE PTR [edi+0x0],bl
	...
  41e729:	add    BYTE PTR [ebp+0x6e58465a],ch
  41e72f:	push   ss
  41e730:	aad    0xff
  41e732:	xchg   BYTE PTR [eax+edx*1],cl
  41e735:	je     0x41e6d6
  41e737:	push   ss
  41e738:	sub    eax,0x21f68c63
  41e73d:	je     0x41e7a5
  41e73f:	loop   0x41e762
  41e741:	je     0x41e7a9
  41e743:	xor    dl,BYTE PTR [ecx]
  41e745:	pop    edi
  41e746:	jb     0x41e762
  41e748:	add    DWORD PTR [edi+0x50],eax
  41e74b:	add    DWORD PTR ds:0xe0e66a5f,edx
  41e751:	dec    edi
  41e752:	pop    edi
  41e753:	out    0x28,al
  41e755:	add    BYTE PTR [edx+0x785f14d3],al
  41e75b:	mov    ebp,0xc023642d
  41e760:	add    DWORD PTR [ebp+ecx*1-0x15],ebx
  41e764:	adc    al,0x63
  41e766:	sub    eax,0x2a5f2514
  41e76b:	xor    bh,BYTE PTR ds:0x25ab134f
  41e771:	imul   esp,DWORD PTR [eax-0x6a],0x863e7423
  41e778:	dec    esp
  41e779:	addr16 or eax,0xf77229a6
  41e77f:	arpl   WORD PTR [eax],sp
  41e781:	pop    edi
  41e782:	jmp    0x1592:0xda463531
  41e789:	push   0x5c3469f8
	...
  41e7b6:	add    BYTE PTR [eax],al
  41e7b8:	or     eax,0xf837e75b
  41e7bd:	scas   al,BYTE PTR es:[edi]
  41e7be:	or     BYTE PTR [edi],dl
  41e7c0:	(bad)  
  41e7c1:	xchg   esp,eax
  41e7c2:	das    
  41e7c3:	xor    al,0xe2
  41e7c5:	xchg   bh,ah
  41e7c7:	aaa    
  41e7c8:	xor    BYTE PTR [edx-0x4d6bdeed],0xb
  41e7cf:	sub    BYTE PTR [ecx-0x66e8eca5],cl
  41e7d5:	mov    DWORD PTR [ecx+ebp*1],0x22c8ad79
  41e7dc:	popf   
  41e7dd:	leave  
  41e7de:	or     eax,0xe7af951c
  41e7e3:	aaa    
  41e7e4:	mov    WORD PTR [esi-0x3897df36],?
  41e7ea:	mov    edx,0xc4c56c20
  41e7ef:	adc    eax,0x28af6d6f
  41e7f4:	push   edx
  41e7f5:	pop    ebx
  41e7f6:	mov    esp,DWORD PTR [ecx]
  41e7f8:	popa   
  41e7f9:	scas   eax,DWORD PTR es:[edi]
  41e7fa:	mov    WORD PTR ds:0x248baf59,ds
  41e800:	sbb    bl,al
  41e802:	test   BYTE PTR [edi],ah
  41e804:	ds test al,0x7e
  41e807:	and    DWORD PTR [edx],esi
  41e809:	les    ecx,FWORD PTR [eax-0x5a60e2eb]
  41e80f:	sub    al,0x1a
  41e811:	mov    dh,0x91
  41e813:	sub    al,0x12
  41e815:	scas   eax,DWORD PTR es:[edi]
  41e816:	mov    BYTE PTR [ebx],al
  41e818:	out    dx,eax
  41e819:	stos   DWORD PTR es:[edi],eax
  41e81a:	dec    ebp
  41e81b:	adc    BYTE PTR [eax],al
	...
  41e845:	add    BYTE PTR [ebx],cl
  41e847:	mov    edx,0x94ea2159
  41e84c:	inc    eax
  41e84d:	sub    BYTE PTR ds:0xea2840a1,bl
  41e853:	mov    ecx,0xb1e24707
  41e858:	inc    esp
  41e859:	sub    dh,dl
  41e85b:	pop    edx
  41e85c:	add    BYTE PTR [eax],ah
  41e85e:	adc    al,0xca
  41e860:	je     0x41e8aa
  41e862:	es scas eax,DWORD PTR es:[edi]
  41e864:	pop    ebp
  41e865:	sub    eax,0x3100c923
  41e86a:	adc    eax,0xee974ca
  41e86f:	retf   0x1b63
  41e872:	inc    edx
  41e873:	mov    ebx,DWORD PTR [edi-0x6]
  41e876:	dec    eax
  41e877:	pop    ebx
  41e878:	push   eax
  41e879:	push   cs
  41e87a:	push   eax
  41e87b:	scas   eax,DWORD PTR es:[edi]
  41e87c:	add    BYTE PTR [ebx],bl
  41e87e:	pop    edi
  41e87f:	(bad)  
  41e880:	ins    DWORD PTR es:[edi],dx
  41e881:	cmc    
  41e882:	pop    esi
  41e883:	jnp    0x41e8c9
  41e885:	shr    BYTE PTR [ebx],1
  41e887:	pop    ebx
  41e888:	push   ecx
  41e889:	les    esi,FWORD PTR [ebx]
  41e88b:	mov    cl,0x63
  41e88d:	fistp  DWORD PTR ds:0x1ed9778f
  41e893:	pop    ebx
  41e894:	push   ecx
  41e895:	int3   
  41e896:	dec    ebx
  41e897:	mov    cl,0x63
  41e899:	mov    ebx,0xba6da2d7
  41e89e:	xor    DWORD PTR [ebx+0x51],ebx
  41e8a1:	les    esi,FWORD PTR [ebx]
  41e8a3:	mov    cl,0x63
  41e8a5:	fwait
  41e8a6:	out    0x8d,eax
  41e8a8:	jno    0x41e82e
	...
  41e8d2:	add    BYTE PTR [eax],al
  41e8d4:	xor    ebx,DWORD PTR [ebx+0x51]
  41e8d7:	mov    WORD PTR [ebx],gs
  41e8d9:	mov    cl,0x63
  41e8db:	fwait
  41e8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8dd:	stos   BYTE PTR es:[edi],al
  41e8de:	pop    edi
  41e8df:	jp     0x41e929
  41e8e1:	pop    ebx
  41e8e2:	push   ecx
  41e8e3:	test   BYTE PTR [ebx-0x4f],dl
  41e8e6:	arpl   WORD PTR [ebx-0x69],di
  41e8e9:	stos   BYTE PTR es:[edi],al
  41e8ea:	ins    DWORD PTR es:[edi],dx
  41e8eb:	jnp    0x41e936
  41e8ed:	pop    ebx
  41e8ee:	push   eax
  41e8ef:	dec    eax
  41e8f0:	cs ret 
  41e8f2:	add    BYTE PTR [edx],bh
  41e8f4:	sub    DWORD PTR [ebp-0x70d7b38a],ebp
  41e8fa:	ja     0x41e955
  41e8fc:	pop    ecx
  41e8fd:	pop    ebx
  41e8fe:	dec    esp
  41e8ff:	add    BYTE PTR [esi],al
  41e901:	push   eax
  41e902:	je     0x41e924
  41e904:	inc    esp
  41e905:	pop    edx
  41e906:	jb     0x41e97e
  41e908:	repnz push eax
  41e90a:	and    BYTE PTR [eax+0x18],cl
  41e90d:	push   eax
  41e90e:	je     0x41e910
  41e910:	or     edi,DWORD PTR [esi+0x6f]
  41e913:	je     0x41e98c
  41e915:	outs   dx,DWORD PTR ds:[esi]
  41e916:	popa   
  41e917:	jb     0x41e93a
  41e919:	pop    edx
  41e91a:	jb     0x41e93c
  41e91c:	jb     0x41e96e
  41e91e:	popa   
  41e91f:	jb     0x41e948
  41e921:	mov    ds:0x3e33735d,al
  41e926:	push   eax
  41e927:	gs and eax,0x772614c
  41e92d:	outs   dx,BYTE PTR ds:[esi]
  41e92e:	pop    ebp
  41e92f:	jae    0x41e925
  41e931:	pop    ebp
  41e932:	dec    esp
  41e933:	popa   
  41e934:	in     al,0x69
  41e936:	and    BYTE PTR [ebx+0x0],dl
	...
  41e961:	add    dl,dh
  41e963:	dec    edi
  41e964:	jbe    0x41e9cb
  41e966:	adc    eax,0xb56f4d3e
  41e96b:	imul   eax,DWORD PTR [eax],0x744ef64c
  41e971:	and    ah,al
  41e973:	pop    eax
  41e974:	jb     0x41e9ec
  41e976:	add    dl,BYTE PTR [eax+0x20]
  41e979:	push   eax
  41e97a:	(bad)  
  41e97b:	imul   ebp,DWORD PTR [eax+0x0],0x746f7c9b
  41e982:	imul   DWORD PTR [esi+0x61]
  41e985:	jb     0x41e958
  41e987:	pop    eax
  41e988:	jb     0x41e9aa
  41e98a:	rcl    DWORD PTR [eax+esi*2+0x65],cl
  41e98e:	xchg   edi,eax
  41e98f:	fwait
  41e990:	push   esp
  41e991:	push   eax
  41e992:	ja     0x41e937
  41e994:	pop    ebp
  41e995:	jbe    0x41e955
  41e997:	jp     0x41e9f6
  41e999:	je     0x41e983
  41e99b:	push   eax
  41e99c:	add    BYTE PTR [esi+0x53],al
  41e99f:	outs   dx,DWORD PTR ds:[esi]
  41e9a0:	and    BYTE PTR [ebx+0x3e],al
  41e9a3:	mov    eax,ds:0x79df6b25
  41e9a8:	and    BYTE PTR [ebx-0x14],ah
  41e9ab:	inc    ebx
  41e9ac:	pop    ds
  41e9ad:	je     0x41e99d
  41e9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b0:	sub    DWORD PTR [ecx-0x16],esi
  41e9b3:	popa   
  41e9b4:	adc    BYTE PTR [eax-0x2e],bh
  41e9b7:	inc    ebx
  41e9b8:	xor    eax,0x284fcb42
  41e9bd:	arpl   dx,dx
  41e9bf:	jae    0x41e9d7
  41e9c1:	ins    DWORD PTR es:[edi],dx
  41e9c2:	shr    DWORD PTR [ecx-0x1c],1
  41e9c5:	push   eax
	...
  41e9ee:	add    BYTE PTR [eax],al
  41e9f0:	test   eax,0x9f751060
  41e9f5:	xor    al,0x1e
  41e9f7:	add    BYTE PTR [eax+0x5e],bl
  41e9fa:	and    DWORD PTR [esi+edi*1+0x20],esi
  41e9fe:	and    esi,DWORD PTR [eax-0x73]
  41ea01:	inc    edx
  41ea02:	xor    al,0x6d
  41ea04:	cwde   
  41ea05:	push   ss
  41ea06:	adc    BYTE PTR [edi-0x74],bl
  41ea09:	pop    ds
  41ea0a:	xor    eax,0x2d086e42
  41ea0f:	push   eax
  41ea10:	call   0xd27:0x626c0e04
  41ea17:	and    BYTE PTR [esi+0x586d27f4],cl
  41ea1d:	bound  eax,QWORD PTR [edx+0x54]
  41ea20:	outs   dx,BYTE PTR ds:[esi]
  41ea21:	out    0x45,al
  41ea23:	pop    edi
  41ea24:	rol    BYTE PTR [bx+si],1
  41ea27:	push   ecx
  41ea28:	pop    ecx
  41ea29:	loopne 0x41ea37
  41ea2b:	jne    0x41ea8c
  41ea2d:	aam    0x1d
  41ea2f:	pop    esp
  41ea30:	cld    
  41ea31:	into   
  41ea32:	and    al,0x6c
  41ea34:	sbb    esi,DWORD PTR [esi-0x16e68dcf]
  41ea3a:	push   ds
  41ea3b:	and    BYTE PTR ds:0x11741ee1,cl
  41ea41:	jecxz  0x41ea55
  41ea43:	arpl   dx,si
  41ea45:	pop    edx
  41ea46:	sub    DWORD PTR [ecx],edx
  41ea48:	sbb    al,bh
  41ea4a:	inc    esp
  41ea4b:	adc    dh,ch
  41ea4d:	lods   al,BYTE PTR ds:[esi]
  41ea4e:	inc    esi
  41ea4f:	daa    
  41ea50:	loopne 0x41eacc
  41ea52:	and    eax,0x30
	...
  41ea7b:	add    BYTE PTR [eax],al
  41ea7d:	add    BYTE PTR [esi],cl
  41ea7f:	jnp    0x41eaab
  41ea81:	sub    cl,ah
  41ea83:	mov    ebp,0xa602104d
  41ea88:	dec    eax
  41ea89:	sub    eax,0x271a5ae8
  41ea8e:	fsubr  DWORD PTR [esi-0x4233dae2]
  41ea94:	cmp    eax,DWORD PTR [edx-0x12]
  41ea97:	mov    al,ds:0x9d9a343b
  41ea9c:	adc    al,0x28
  41ea9e:	mov    ds:0x79e3fbbe,al
  41eaa3:	lods   eax,DWORD PTR ds:[esi]
  41eaa4:	push   cs
  41eaa5:	daa    
  41eaa6:	cwde   
  41eaa7:	jnp    0x41ead6
  41eaa9:	xor    BYTE PTR [esi-0x69],ch
  41eaac:	push   ds
  41eaad:	adc    al,0x8a
  41eaaf:	ret    0x25d6
  41eab2:	(bad)  
  41eab3:	pop    ebx
  41eab4:	mov    edx,0xdeaf9826
  41eab9:	and    al,0x6c
  41eabb:	mov    esi,0xc76d41ab
  41eac0:	shl    DWORD PTR [eax],cl
  41eac2:	jb     0x41ea4f
  41eac4:	mov    ecx,0x7c15326
  41eac9:	xor    ebp,DWORD PTR [ebx-0x3f]
  41eacc:	mov    bl,0xe
  41eace:	jno    0x41ea7d
  41ead0:	mov    WORD PTR [edi],?
  41ead2:	jl     0x41ea82
  41ead4:	mov    esp,DWORD PTR [edi]
  41ead6:	pop    ebp
  41ead7:	scas   eax,DWORD PTR es:[edi]
  41ead8:	mov    bh,0x11
  41eada:	sub    ecx,eax
  41eadc:	test   ebx,esp
  41eade:	sti    
  41eadf:	mov    ss,WORD PTR [edi+0xe3]
	...
  41eb09:	add    BYTE PTR [eax],al
  41eb0b:	add    dh,bh
  41eb0d:	(bad)  
  41eb0e:	nop
  41eb0f:	and    BYTE PTR [eax],dl
  41eb11:	scas   eax,DWORD PTR es:[edi]
  41eb12:	add    BYTE PTR [ebp-0x7f8b5500],dl
  41eb18:	pop    eax
  41eb19:	leave  
  41eb1a:	jno    0x41eb05
  41eb1c:	dec    esp
  41eb1d:	(bad)  
  41eb1e:	push   bp
  41eb20:	xor    DWORD PTR [eax-0x62c9b38e],ebx
  41eb26:	push   eax
  41eb27:	daa    
  41eb28:	mov    eax,DWORD PTR cs:[eax]
  41eb2b:	xor    eax,0x1a74aa23
  41eb30:	pop    ds
  41eb31:	stos   BYTE PTR es:[edi],al
  41eb32:	jno    0x41eb74
  41eb34:	and    ecx,ecx
  41eb36:	inc    esi
  41eb37:	inc    eax
  41eb38:	es mov esp,0xaf1b3a00
  41eb3e:	arpl   WORD PTR [edx],bx
  41eb40:	(bad)  
  41eb41:	mov    edi,0xc58ae972
  41eb46:	jno    0x41eb5d
  41eb48:	pop    ebx
  41eb49:	(bad)  
  41eb4a:	ins    BYTE PTR es:[edi],dx
  41eb4b:	sub    eax,0xe92fa95b
  41eb50:	sbb    ebp,DWORD PTR [edi-0x68bdfa95]
  41eb56:	push   ecx
  41eb57:	cld    
  41eb58:	pop    edx
  41eb59:	test   eax,0x8b59af74
  41eb5e:	add    BYTE PTR [edi-0x249252a6],ah
  41eb64:	sub    ch,BYTE PTR [edi-0x4524259d]
  41eb6a:	pop    edi
  41eb6b:	mov    ebp,0xba67a33d
	...
  41eb98:	add    BYTE PTR [eax],al
  41eb9a:	xor    eax,ecx
  41eb9c:	jb     0x41eb4e
  41eb9e:	jecxz  0x41eb5a
  41eba0:	pop    edi
  41eba1:	mov    ch,0x3d
  41eba3:	xchg   esi,eax
  41eba4:	lea    ebp,fs:[edi]
  41eba7:	mov    ecx,0x9621cf69
  41ebac:	je     0x41eb97
  41ebae:	push   edx
  41ebaf:	stos   BYTE PTR es:[edi],al
  41ebb0:	mov    ah,BYTE PTR [si-0x7b]
  41ebb4:	add    BYTE PTR fs:[esi-0x34a3ff9a],dh
  41ebbb:	dec    ebx
  41ebbc:	jb     0x41ec20
  41ebbe:	sar    BYTE PTR [eax+0x54],0x50
  41ebc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc3:	imul   ebp,DWORD PTR [ebx+0x66],0x725d67eb
  41ebca:	cli    
  41ebcb:	jb     0x41ec21
  41ebcd:	jne    0x41ebe4
  41ebcf:	jns    0x41ec3c
  41ebd1:	inc    esi
  41ebd2:	sub    ebp,DWORD PTR [edi+0x0]
  41ebd5:	imul   edx,DWORD PTR [ecx],0xf361744c
  41ebdb:	xor    BYTE PTR [eax+0x61],0x1b
  41ebdf:	xchg   DWORD PTR [eax],eax
  41ebe1:	push   ebx
  41ebe2:	adc    BYTE PTR [ebp+0x74],dl
  41ebe5:	ja     0x41ec1d
  41ebe7:	dec    ecx
  41ebe8:	popa   
  41ebe9:	pop    esp
  41ebea:	add    al,0x80
  41ebec:	je     0x41ec4f
  41ebee:	jae    0x41ec65
  41ebf0:	inc    esi
  41ebf1:	inc    esi
  41ebf2:	imul   ebp,DWORD PTR [edi+0x0],0x43
  41ebf6:	and    eax,0x31656455
  41ebfb:	dec    ebx
  41ebfc:	gs popa 
	...
  41ec26:	add    BYTE PTR [eax],al
  41ec28:	inc    ebx
  41ec29:	ins    BYTE PTR es:[edi],dx
  41ec2a:	pop    ebp
  41ec2b:	ins    BYTE PTR es:[edi],dx
  41ec2c:	or     ebx,DWORD PTR [edx+0x3f]
  41ec2f:	jb     0x41ec2b
  41ec31:	push   ebp
  41ec32:	popa   
  41ec33:	outs   dx,BYTE PTR ds:[esi]
  41ec34:	jmp    0x41ebb6
  41ec36:	pop    ebp
  41ec37:	ins    BYTE PTR es:[edi],dx
  41ec38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec39:	and    DWORD PTR [ecx+0x63],0x6f4f59fc
  41ec40:	stc    
  41ec41:	gs jae 0x41eca5
  41ec44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec45:	push   esp
  41ec46:	pop    esp
  41ec47:	push   ebx
  41ec48:	add    BYTE PTR [esi+0x5d],ah
  41ec4b:	pop    esp
  41ec4c:	cdq    
  41ec4d:	ja     0x41ec95
  41ec4f:	push   esp
  41ec50:	xchg   DWORD PTR [ebp+0x4b],ebp
  41ec53:	jo     0x41ec00
  41ec55:	sub    BYTE PTR [ebx+0x6e],0x3e
  41ec59:	rol    DWORD PTR [eax],1
  41ec5b:	push   eax
  41ec5c:	pop    ds
  41ec5d:	ror    DWORD PTR [edi],1
  41ec5f:	jne    0x41ec7a
  41ec61:	mov    dl,0x1d
  41ec63:	add    BYTE PTR [ebx],cl
  41ec65:	mov    cl,0x1e
  41ec67:	jb     0x41ec71
  41ec69:	jecxz  0x41ec90
  41ec6b:	arpl   WORD PTR [esi],di
  41ec6d:	cld    
  41ec6e:	and    esi,DWORD PTR [ecx+0x12]
  41ec71:	and    DWORD PTR [eax],0x72
  41ec74:	or     eax,0xeb632f44
  41ec79:	pushf  
  41ec7a:	adc    BYTE PTR [ebx-0x6],ah
  41ec7d:	call   0x7412:0x8d0e0012
  41ec84:	ds ins BYTE PTR es:[edi],dx
  41ec86:	and    esi,DWORD PTR [ecx-0x2e]
  41ec89:	jge    0x41ecac
  41ec8b:	imul   eax,DWORD PTR [eax],0x0
	...
  41ecb6:	fild   DWORD PTR [ebx+0x31]
  41ecb9:	ins    DWORD PTR es:[edi],dx
  41ecba:	int3   
  41ecbb:	push   edi
  41ecbc:	add    al,0x53
  41ecbe:	int    0x5e
  41ecc0:	adc    ch,BYTE PTR [esi-0x61]
  41ecc3:	pop    edi
  41ecc4:	sbb    eax,0xf638e00
  41ecc9:	jno    0x41ec7c
  41eccb:	dec    ebp
  41eccc:	adc    ah,BYTE PTR [esi+edi*1+0x6a]
  41ecd0:	and    esi,DWORD PTR [ecx-0x6e]
  41ecd3:	xchg   BYTE PTR [ecx],ch
  41ecd5:	jb     0x41ec57
  41ecd7:	arpl   WORD PTR ds:0x23f13e63,sp
  41ecdd:	data16 mov cl,BYTE PTR ds:0xee637222
  41ece4:	aas    
  41ece5:	ins    DWORD PTR es:[edi],dx
  41ece6:	pop    eax
  41ece7:	sbb    al,0x1e
  41ece9:	arpl   WORD PTR [ebp-0x9],di
  41ecec:	adc    BYTE PTR [eax],ah
  41ecee:	lea    esp,ds:0x2351741b
  41ecf4:	packsswb mm6,QWORD PTR [edx-0x5]
  41ecf8:	and    dh,BYTE PTR [ebx+eiz*2+0x5b]
  41ecfc:	cdq    
  41ecfd:	and    eax,0x33bbaf5d
  41ed02:	sub    al,0xc4
  41ed04:	lea    ebp,[edx]
  41ed06:	and    bh,BYTE PTR [esi-0x3bf0fc66]
  41ed0c:	lea    ecx,[edi]
  41ed0e:	sub    edi,DWORD PTR [edx-0x6305e187]
  41ed14:	fwait
  41ed15:	xor    ebp,ebx
  41ed17:	mov    ecx,0x1e79
	...
  41ed44:	jmp    0x339c:0xfd363697
  41ed4b:	xor    al,0x1a
  41ed4d:	mov    BYTE PTR [eax+0x18],al
  41ed50:	frstor [edi-0x5824c419]
  41ed56:	cmp    eax,DWORD PTR [ecx*1+0x3e1644a8]
  41ed5d:	mov    eax,DWORD PTR [esi+0x16]
  41ed60:	retf   0x175a
  41ed63:	cmp    edi,DWORD PTR [esi]
  41ed65:	mov    ebx,DWORD PTR [ebx]
  41ed67:	sbb    al,0xec
  41ed69:	pop    edx
  41ed6a:	cmp    dh,BYTE PTR [edi]
  41ed6c:	xchg   BYTE PTR [ebx+0x17],bl
  41ed6f:	push   ss
  41ed70:	mov    ds:0x9d2000bd,eax
  41ed75:	test   al,0xd5
  41ed77:	or     edx,DWORD PTR [ebp-0x7fd01839]
  41ed7d:	(bad)  
  41ed7e:	pop    ss
  41ed7f:	in     al,0x7c
  41ed81:	mov    bl,0xf7
  41ed83:	pop    ds
  41ed84:	fwait
  41ed85:	test   eax,0x883e15cc
  41ed8a:	into   
  41ed8b:	sub    DWORD PTR [edx-0x54],esi
  41ed8e:	enter  0x5d15,0x97
  41ed92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed93:	aaa    
  41ed94:	mov    ?,WORD PTR [ebx-0x54]
  41ed97:	or     ebp,DWORD PTR [esi-0x39]
  41ed9a:	into   
  41ed9b:	adc    eax,0x9500a95d
  41eda0:	xchg   DWORD PTR [edi-0x4c88f6b0],ecx
  41eda6:	jo     0x41ed3d
	...
  41edd0:	add    BYTE PTR [eax],al
  41edd2:	sbb    al,0xa9
  41edd4:	arpl   WORD PTR [ebx-0x64927197],bx
  41edda:	push   eax
  41eddb:	stos   BYTE PTR es:[edi],al
  41eddc:	jo     0x41ed66
  41edde:	pusha  
  41eddf:	mov    eax,0x99f7b45c
  41ede4:	push   esp
  41ede5:	mov    ds,WORD PTR [edi+eax*8+0x42]
  41ede9:	mov    BYTE PTR [ebx],ch
  41edeb:	xor    BYTE PTR [edx],0xbb
  41edee:	jno    0x41ee23
  41edf0:	aas    
  41edf1:	pop    esp
  41edf2:	es scas eax,DWORD PTR es:[edi]
  41edf4:	ins    DWORD PTR es:[edi],dx
  41edf5:	dec    edi
  41edf6:	push   ecx
  41edf7:	pop    ebx
  41edf8:	push   ecx
  41edf9:	inc    esi
  41edfa:	and    al,0xaf
  41edfc:	jne    0x41ee46
  41edfe:	push   eax
  41edff:	mov    eax,0x8b262f5c
  41ee04:	and    BYTE PTR [edx+ecx*2],ah
  41ee07:	stos   DWORD PTR es:[edi],eax
  41ee08:	ins    BYTE PTR es:[edi],dx
  41ee09:	inc    esi
  41ee0a:	sub    BYTE PTR [eax-0x56edf28e],bh
  41ee10:	ins    DWORD PTR es:[edi],dx
  41ee11:	mov    db0,edi
  41ee14:	arpl   WORD PTR [edx],bx
  41ee16:	inc    edx
  41ee17:	mov    ebx,DWORD PTR [edi+0x1a]
  41ee1a:	dec    ecx
  41ee1b:	test   al,0x6d
  41ee1d:	sbb    edx,DWORD PTR [esi+0x5b]
  41ee20:	push   eax
  41ee21:	or     BYTE PTR [ecx-0x54],cl
  41ee24:	jne    0x41ee34
  41ee26:	xor    BYTE PTR [edi-0x41d20fac],dh
  41ee2c:	add    BYTE PTR [ecx],ah
  41ee2e:	pop    ebp
  41ee2f:	lods   al,BYTE PTR ds:[esi]
  41ee30:	je     0x41ee1b
  41ee32:	inc    ecx
  41ee33:	shl    BYTE PTR [ebp-0x30],0x0
	...
  41ee5f:	add    BYTE PTR [edi],bl
  41ee61:	pop    ebx
  41ee62:	push   eax
  41ee63:	(bad)  
  41ee64:	dec    ebx
  41ee65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee66:	add    BYTE PTR [eax+0x74ba1f],ah
  41ee6c:	push   cs
  41ee6d:	js     0x41eedb
  41ee6f:	push   eax
  41ee70:	push   es
  41ee71:	dec    ebx
  41ee72:	push   0x704aa100
  41ee77:	push   ebx
  41ee78:	dec    BYTE PTR [edx+0x61]
  41ee7b:	cs lahf 
  41ee7d:	jnp    0x41eeeb
  41ee7f:	add    bl,bh
  41ee81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee82:	jb     0x41eeed
  41ee84:	shl    BYTE PTR [edi+0x74],0x65
  41ee88:	test   BYTE PTR [esi+0x2e],bl
  41ee8b:	imul   ecx,ecx,0xb15c004f
  41ee91:	ja     0x41ef01
  41ee93:	inc    esp
  41ee94:	push   cs
  41ee95:	push   ecx
  41ee96:	popa   
  41ee97:	pop    esp
  41ee98:	aam    0x7d
  41ee9a:	outs   dx,BYTE PTR ds:[esi]
  41ee9b:	data16 out dx,al
  41ee9d:	sbb    DWORD PTR [ebx+edx*2+0x2],0x48
  41eea2:	outs   dx,DWORD PTR ds:[esi]
  41eea3:	imul   edi,eax,0x1b006f7c
  41eea9:	push   0x56247361
  41eeae:	imul   ebp,DWORD PTR [esi+0x14],0x57
  41eeb2:	dec    edi
  41eeb3:	outs   dx,DWORD PTR ds:[esi]
  41eeb4:	add    DWORD PTR [ebx+0x73],edx
  41eeb7:	popa   
  41eeb8:	add    eax,0x36565c7a
  41eebd:	jge    0x41ef03
  41eebf:	jns    0x41ef0d
  41eec1:	jp     0x41ef1f
  41eec3:	push   ebx
	...
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	inc    edx
  41eeef:	js     0x41ef62
  41eef1:	jb     0x41ef35
  41eef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eef4:	pop    eax
  41eef5:	add    BYTE PTR [esp+edi*2+0x6e],dl
  41eef9:	data16 test BYTE PTR cs:[eax],ah
  41eefd:	push   eax
  41eefe:	inc    esi
  41eeff:	push   ebx
  41ef00:	push   0x747b3200
  41ef05:	jb     0x41eefd
  41ef07:	mov    ds:0x81e75058,eax
  41ef0c:	outs   dx,DWORD PTR ds:[esi]
  41ef0d:	imul   edi,DWORD PTR [esi],0x18712610
  41ef13:	or     al,0x1e
  41ef15:	ins    BYTE PTR es:[edi],dx
  41ef16:	ds clc 
  41ef18:	inc    esi
  41ef19:	push   esp
  41ef1a:	outs   dx,BYTE PTR ds:[esi]
  41ef1b:	(bad)  
  41ef1c:	adc    eax,0x33446671
  41ef21:	jae    0x41ef70
  41ef23:	sbb    al,0x34
  41ef25:	addr16 dec edx
  41ef27:	(bad)  
  41ef29:	ja     0x41ef56
  41ef2b:	loopne 0x41ef2d
  41ef2d:	push   ecx
  41ef2e:	sbb    edx,esi
  41ef30:	push   ss
  41ef31:	arpl   WORD PTR [esp+eax*2],bp
  41ef34:	ss jno 0x41ef52
  41ef37:	mov    dh,0x1f
  41ef39:	pop    edi
  41ef3a:	sub    edx,edi
  41ef3c:	add    BYTE PTR [eax+0x1f],dl
  41ef3f:	mov    ch,0x14
  41ef41:	jne    0x41ef5c
  41ef43:	mov    dh,0x25
  41ef45:	add    al,bh
  41ef47:	(bad)  
  41ef48:	adc    al,0x50
  41ef4a:	jmp    0xd4207e4
  41ef4f:	cdq    
  41ef50:	sub    dh,BYTE PTR [eax+eax*1+0x0]
	...
  41ef7c:	icebp  
  41ef7d:	mov    ds:0x85026316,al
  41ef82:	push   ss
  41ef83:	ja     0x41ef68
  41ef85:	jne    0x41efb7
  41ef87:	push   ebp
  41ef88:	(bad)  [ebp-0x692d98cd]
  41ef8e:	xor    al,0x73
  41ef90:	fadd   QWORD PTR [edi+0x19]
  41ef93:	jno    0x41ef3b
  41ef95:	push   edi
  41ef96:	push   ss
  41ef97:	add    BYTE PTR [edx+0x75741984],dl
  41ef9d:	pop    ebx
  41ef9e:	and    ah,BYTE PTR [ebx-0x5a]
  41efa1:	inc    edx
  41efa2:	and    esp,DWORD PTR [edi-0x6e]
  41efa5:	dec    ebp
  41efa6:	sbb    DWORD PTR [esi-0x65],ebp
  41efa9:	sub    bl,bh
  41efab:	arpl   WORD PTR [ebp-0x7292c6be],cx
  41efb1:	pop    ebx
  41efb2:	(bad)  [ecx]
  41efb4:	cdq    
  41efb5:	mov    esi,0xac8d03c4
  41efba:	int3   
  41efbb:	adc    eax,0x26bcba58
  41efc0:	ds mov ecx,eax
  41efc3:	adc    al,0x4f
  41efc5:	test   al,0xce
  41efc7:	adc    eax,0x20975b5a
  41efcc:	dec    esp
  41efcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efce:	out    0x34,eax
  41efd0:	push   ebx
  41efd1:	mov    ecx,0xad19189b
  41efd6:	test   BYTE PTR [edi],ch
  41efd8:	std    
  41efd9:	mov    dl,0x97
  41efdb:	and    bl,BYTE PTR [eax]
  41efdd:	xchg   edi,eax
  41efde:	cdq    
  41efdf:	sbb    al,BYTE PTR [eax]
	...
  41f009:	add    BYTE PTR [eax],ch
  41f00b:	mov    dh,0xa3
  41f00d:	xor    al,0x1d
  41f00f:	lods   al,BYTE PTR ds:[esi]
  41f010:	jp     0x41f02c
  41f012:	and    eax,ecx
  41f014:	jp     0x41f019
  41f016:	jmp    0x2bc0:0xe1136f95
  41f01d:	adc    ah,cl
  41f01f:	test   al,0x44
  41f021:	add    al,0x12
  41f023:	mov    bh,0x59
  41f025:	sbb    eax,0xde5ab5f0
  41f02a:	xlat   BYTE PTR ds:[ebx]
  41f02b:	stos   DWORD PTR es:[edi],eax
  41f02c:	out    0xe1,eax
  41f02e:	jmp    0xcb552aec
  41f033:	mov    edi,0x7b1c2839
  41f038:	icebp  
  41f039:	jecxz  0x41f05a
  41f03b:	pop    ebx
  41f03c:	leave  
  41f03d:	fistp  QWORD PTR [ecx]
  41f03f:	lea    ecx,[esi]
  41f041:	es stos BYTE PTR es:[edi],al
  41f043:	test   al,0x8
  41f045:	adc    bl,BYTE PTR [ebp-0x51f3db71]
  41f04b:	mov    edx,0xc28c4815
  41f050:	cmc    
  41f051:	sub    BYTE PTR [esi],bh
  41f053:	xchg   esi,eax
  41f054:	add    cl,dh
  41f056:	sub    eax,0x2c256e90
  41f05b:	mov    eax,0xa328cc76
  41f060:	ins    DWORD PTR es:[edi],dx
  41f061:	int3   
  41f062:	es pop ebx
  41f064:	push   ecx
  41f065:	int3   
  41f066:	dec    edi
  41f067:	test   eax,0x8c3ddb63
  41f06c:	jno    0x41f03a
	...
  41f096:	add    BYTE PTR [eax],al
  41f098:	das    
  41f099:	mov    eax,ds:0x5b26cc5f
  41f09e:	push   eax
  41f09f:	enter  0xaa2c,0x75
  41f0a3:	mov    esi,0xc600b72f
  41f0a8:	ins    DWORD PTR es:[edi],dx
  41f0a9:	nop
  41f0aa:	jno    0x41f046
  41f0ac:	dec    eax
  41f0ad:	mov    esi,0x973d8d72
  41f0b2:	addr16 fwait
  41f0b4:	push   esi
  41f0b5:	mov    edx,0xa82f9674
  41f0ba:	add    BYTE PTR [edx+0x7e74b930],bl
  41f0c0:	bound  ebp,QWORD PTR [ebp-0x65bc729d]
  41f0c6:	dec    eax
  41f0c7:	or     DWORD PTR ds:0x495566be,ebp
  41f0cd:	nop
  41f0ce:	jb     0x41f11c
  41f0d0:	cs call 0x4a67:0xaa4d486c
  41f0d8:	add    BYTE PTR [edi-0x7907e2b0],al
  41f0de:	push   eax
  41f0df:	sub    BYTE PTR ds:0x20346dba,bl
  41f0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0e6:	jno    0x41f0d1
  41f0e8:	and    DWORD PTR [edi-0x5698c590],0x76
  41f0ef:	or     al,0x4c
  41f0f1:	pop    ebx
  41f0f2:	inc    esi
  41f0f3:	adc    eax,0x718a4a
  41f0f8:	dec    edx
  41f0f9:	dec    ecx
  41f0fa:	dec    esi
  41f0fb:	popa   
	...
  41f124:	add    BYTE PTR [eax],al
  41f126:	inc    edx
  41f127:	test   BYTE PTR [eax],al
  41f129:	inc    esi
  41f12a:	or     ecx,DWORD PTR [ebx+0x50]
  41f12d:	popa   
  41f12e:	add    al,0x4a
  41f130:	jae    0x41f1a1
  41f132:	adc    eax,0x995f0077
  41f137:	inc    esi
  41f138:	jo     0x41f18a
  41f13a:	test   BYTE PTR [ecx+0x6f],0x77
  41f13e:	mov    al,ds:0xa900644c
  41f143:	inc    esi
  41f144:	jo     0x41f18a
  41f146:	out    dx,al
  41f147:	dec    esp
  41f148:	popa   
  41f149:	arpl   WORD PTR [ebx-0x28868db3],cx
  41f14f:	imul   ecx,DWORD PTR [ebx+0x46],0x523d65fb
  41f156:	fidivr DWORD PTR [esi+0x4e]
  41f159:	inc    ebx
  41f15a:	fistp  QWORD PTR [edx]
  41f15c:	push   eax
  41f15d:	outs   dx,DWORD PTR ds:[esi]
  41f15e:	mov    ecx,0x15617346
  41f163:	sbb    DWORD PTR [esi+eax*2-0x3d],0x4f
  41f168:	outs   dx,BYTE PTR ds:[esi]
  41f169:	addr16 mov bl,0x97
  41f16c:	pop    edi
  41f16d:	arpl   WORD PTR [eax],ax
  41f16f:	push   ebx
  41f170:	outs   dx,BYTE PTR ds:[esi]
  41f171:	je     0x41f187
  41f173:	push   edi
  41f174:	dec    edi
  41f175:	outs   dx,DWORD PTR ds:[esi]
  41f176:	stc    
  41f177:	push   edx
  41f178:	jae    0x41f1db
  41f17a:	add    eax,0x2b465c76
  41f17f:	addr16 aas 
  41f181:	ins    BYTE PTR es:[edi],dx
  41f182:	out    dx,al
  41f183:	jne    0x41f1f3
  41f185:	je     0x41f1ba
  41f187:	ins    BYTE PTR es:[edi],dx
  41f188:	gs je  0x41f18b
	...
  41f1b3:	add    dl,bh
  41f1b5:	dec    ebx
  41f1b6:	add    BYTE PTR [ebx+0x0],dl
  41f1b9:	jne    0x41f22f
  41f1bb:	ja     0x41f203
  41f1bd:	dec    ecx
  41f1be:	popa   
  41f1bf:	pop    esp
  41f1c0:	je     0x41f212
  41f1c2:	data16 je 0x41f203
  41f1c5:	ins    BYTE PTR es:[edi],dx
  41f1c6:	fisubr WORD PTR [esp+ebp*4+0x55]
  41f1ca:	xor    BYTE PTR [esi+0x72],al
  41f1cd:	push   esp
  41f1ce:	aas    
  41f1cf:	ins    BYTE PTR es:[edi],dx
  41f1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d1:	push   edi
  41f1d2:	push   ds
  41f1d3:	je     0x41f23f
  41f1d5:	push   ecx
  41f1d6:	sbb    DWORD PTR [ebx+ebx*4+0x31],esi
  41f1da:	add    DWORD PTR [esi],ebp
  41f1dc:	imul   edi,DWORD PTR [eax+eiz*1],0x1d1d2000
  41f1e3:	ins    BYTE PTR es:[edi],dx
  41f1e4:	ds push ds
  41f1e6:	adc    eax,0x10235270
  41f1eb:	je     0x41f215
  41f1ed:	add    eax,0xd03e6410
  41f1f2:	inc    ebx
  41f1f3:	push   eax
  41f1f4:	ins    DWORD PTR es:[edi],dx
  41f1f5:	adc    eax,0x23497423
  41f1fa:	packsswb mm3,QWORD PTR [edx]
  41f1fd:	add    BYTE PTR [edx],bl
  41f1ff:	jb     0x41f21c
  41f201:	loope  0x41f217
  41f203:	ins    DWORD PTR es:[edi],dx
  41f204:	sub    al,0xcb
  41f206:	loopne 0x41f254
  41f208:	cs (bad) 
  41f20a:	(bad)  
  41f20c:	cli    
  41f20d:	rcr    BYTE PTR [eax],1
  41f20f:	pop    edi
  41f210:	or     al,0xd7
  41f212:	and    al,0x51
  41f214:	and    esi,DWORD PTR [eax+0x6715]
	...
  41f242:	adc    ch,dl
  41f244:	ucomiss xmm3,xmm5
  41f247:	mov    al,ds:0x7112000f
  41f24c:	sbb    al,0x5f
  41f24e:	in     al,dx
  41f24f:	sahf   
  41f250:	sub    BYTE PTR [ecx-0x25],dl
  41f253:	xchg   DWORD PTR [eax],ebx
  41f255:	addr16 call 0xf9f01f7
  41f25b:	dec    ebp
  41f25c:	aam    0x5c
  41f25e:	adc    edx,DWORD PTR [esi+0x1f]
  41f261:	popa   
  41f262:	int    0x43
  41f264:	sub    eax,0x85ba651
  41f269:	adc    bl,BYTE PTR [ebp-0x4dd8c549]
  41f26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f270:	add    BYTE PTR [esi],bl
  41f272:	fwait
  41f273:	test   al,0xbd
  41f275:	adc    BYTE PTR [ecx-0x62e7ef41],ch
  41f27b:	pop    ebx
  41f27c:	sbb    esi,DWORD PTR [ecx]
  41f27e:	xchg   esi,eax
  41f27f:	mov    edx,0x889a26f9
  41f284:	add    al,0x18
  41f286:	jb     0x41f24a
  41f288:	aad    0x24
  41f28a:	outs   dx,DWORD PTR ds:[esi]
  41f28b:	mov    WORD PTR [eax],ds
  41f28d:	sub    eax,0xde1c8c2e
  41f292:	outs   dx,BYTE PTR ds:[esi]
  41f293:	stos   BYTE PTR es:[edi],al
  41f294:	mov    ebx,0xe7b6521a
  41f299:	das    
  41f29a:	jg     0x41f258
  41f29c:	lds    esp,FWORD PTR ds:0x16aab65d
  41f2a2:	dec    esi
  41f2a3:	jnp    0x41f23f
  41f2a5:	sbb    al,0x0
	...
  41f2cf:	add    BYTE PTR [eax],ah
  41f2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d2:	sahf   
  41f2d3:	and    ch,BYTE PTR [esi+esi*4]
  41f2d6:	out    0x1f,eax
  41f2d8:	sbb    eax,0x2a2597ba
  41f2dd:	stos   DWORD PTR es:[edi],eax
  41f2de:	out    0x16,eax
  41f2e0:	sub    BYTE PTR [edi+0x7d0e228c],bh
  41f2e6:	test   BYTE PTR [ebx],cl
  41f2e8:	sbb    eax,0xa1a7a5b
  41f2ed:	mov    dh,0x7a
  41f2ef:	fstp   st(5)
  41f2f1:	mov    ecx,0xc1ef045b
  41f2f6:	push   ebx
  41f2f7:	and    edi,ebp
  41f2f9:	jl     0x41f33b
  41f2fb:	sbb    bl,cl
  41f2fd:	pop    edx
  41f2fe:	sub    edi,DWORD PTR [eax]
  41f300:	fnstsw WORD PTR [ecx-0x570eccc9]
  41f306:	inc    esp
  41f307:	sub    dl,bh
  41f309:	mov    ch,0x0
  41f30b:	dec    eax
  41f30c:	sub    dl,BYTE PTR [ebp-0x75bde6ac]
  41f312:	dec    ebp
  41f313:	das    
  41f314:	outs   dx,BYTE PTR ds:[esi]
  41f315:	xchg   BYTE PTR [edi],bh
  41f317:	cmp    edi,DWORD PTR [edi-0x71]
  41f31a:	dec    esp
  41f31b:	or     al,0x5b
  41f31d:	stos   DWORD PTR es:[edi],eax
  41f31e:	push   ebp
  41f31f:	or     BYTE PTR [eax],dh
  41f321:	mov    eax,0xaa343000
  41f326:	je     0x41f330
  41f328:	es mov edi,0xc32e0850
  41f32e:	add    BYTE PTR ds:0xad5fa723,ah
	...
  41f35c:	add    BYTE PTR [eax],al
  41f35e:	push   edx
  41f35f:	test   eax,0xaa22b900
  41f364:	jno    0x41f344
  41f366:	inc    esp
  41f367:	test   eax,0xbe15e964
  41f36c:	jno    0x41f32b
  41f36e:	pop    ss
  41f36f:	mov    WORD PTR [ebx-0x3c],gs
  41f372:	cmp    eax,0x2bcc7188
  41f377:	popf   
  41f378:	pop    edi
  41f379:	mov    esp,0x8c525b5e
  41f37e:	push   esi
  41f37f:	mov    esi,0xb4698474
  41f384:	jb     0x41f312
  41f386:	pop    eax
  41f387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f388:	ins    DWORD PTR es:[edi],dx
  41f389:	fwait
  41f38a:	dec    edx
  41f38b:	pop    ebx
  41f38c:	push   eax
  41f38d:	xchg   esi,eax
  41f38e:	sub    esp,DWORD PTR [edi-0x46d98bb2]
  41f394:	arpl   WORD PTR [ebx+0x3d],di
  41f397:	xchg   ebp,eax
  41f398:	push   ecx
  41f399:	cdq    
  41f39a:	push   ebx
  41f39b:	mov    esi,0xbe195674
  41f3a0:	ins    BYTE PTR es:[edi],dx
  41f3a1:	jmp    0x5da8b1d6
  41f3a6:	dec    ebp
  41f3a7:	mov    WORD PTR [edx+0x44],?
  41f3aa:	mov    al,es:0x4b15005f
  41f3b0:	outs   dx,BYTE PTR gs:[esi]
  41f3b2:	aaa    
  41f3b3:	addr16 jb 0x41f41f
  41f3b6:	cld    
  41f3b7:	inc    esp
  41f3b8:	jne    0x41f426
  41f3ba:	daa    
  41f3bb:	sub    DWORD PTR [edi],0x32
  41f3be:	gs dec eax
  41f3c0:	je     0x41f408
	...
  41f3ea:	add    BYTE PTR [eax],al
  41f3ec:	push   ebx
  41f3ed:	dec    edi
  41f3ee:	imul   edi,DWORD PTR cs:[ecx],0x634e0048
  41f3f5:	jb     0x41f45c
  41f3f7:	je     0x41f43b
  41f3f9:	push   edx
  41f3fa:	imul   edi,DWORD PTR cs:[ecx],0x595c0048
  41f401:	jl     0x41f477
  41f403:	inc    esp
  41f404:	cmc    
  41f405:	inc    edi
  41f406:	jbe    0x41f46d
  41f408:	out    0x6e,eax
  41f40a:	pop    ebp
  41f40b:	jae    0x41f411
  41f40d:	outs   dx,BYTE PTR ds:[esi]
  41f40e:	imul   esi,DWORD PTR [edx-0xd],0x5e
  41f412:	push   ecx
  41f413:	jb     0x41f3b0
  41f415:	pop    esi
  41f416:	push   ecx
  41f417:	jae    0x41f41b
  41f419:	push   ecx
  41f41a:	dec    esi
  41f41b:	popa   
  41f41c:	cli    
  41f41d:	jnp    0x41f41f
  41f41f:	push   edx
  41f420:	clc    
  41f421:	inc    ebp
  41f422:	je     0x41f468
  41f424:	jle    0x41f476
  41f426:	popa   
  41f427:	arpl   bx,dx
  41f429:	inc    ebp
  41f42a:	jb     0x41f4a5
  41f42c:	xchg   edi,eax
  41f42d:	outs   dx,BYTE PTR ds:[esi]
  41f42e:	imul   esi,DWORD PTR [edx-0x3d],0x5e
  41f432:	dec    edi
  41f433:	outs   dx,DWORD PTR ds:[esi]
  41f434:	rcr    DWORD PTR [edx+0x73],0x61
  41f438:	adc    eax,0xb8535c7b
  41f43d:	dec    ebx
  41f43e:	je     0x41f4a8
  41f440:	ja     0x41f4b2
  41f442:	gs jbe 0x41f407
  41f445:	push   eax
  41f446:	and    BYTE PTR [edx+eax*1-0x80],dl
  41f44a:	push   0x6b42f86e
  41f44f:	add    BYTE PTR [bx+si],al
	...
  41f47a:	ds fwait
  41f47c:	sbb    eax,0x1d70fa71
  41f481:	(bad)  
  41f482:	cli    
  41f483:	sbb    DWORD PTR gs:[esi-0x1d],esi
  41f487:	inc    edi
  41f488:	inc    ebx
  41f489:	ins    DWORD PTR es:[edi],dx
  41f48a:	shl    BYTE PTR [ecx-0x644d9ee3],1
  41f490:	pop    ss
  41f491:	outs   dx,BYTE PTR ds:[esi]
  41f492:	lods   eax,DWORD PTR ds:[esi]
  41f493:	xor    al,0x34
  41f495:	arpl   WORD PTR [edx+edx*2+0x4b8a721d],bp
  41f49c:	adc    al,0x63
  41f49e:	xor    BYTE PTR ds:[eax],0x50
  41f4a2:	pop    esi
  41f4a3:	jne    0x41f4dc
  41f4a5:	dec    esi
  41f4a6:	jb     0x41f4ee
  41f4a8:	aaa    
  41f4a9:	dec    esp
  41f4aa:	ds jp  0x41f4dd
  41f4ad:	push   eax
  41f4ae:	jge    0x41f4f9
  41f4b0:	cmp    al,BYTE PTR [eax]
  41f4b2:	and    BYTE PTR [ebx+edx*1],al
  41f4b5:	ds callw 0x66ea
  41f4ba:	push   ecx
  41f4bb:	sbb    bl,BYTE PTR [edx]
  41f4bd:	ins    BYTE PTR es:[edi],dx
  41f4be:	arpl   WORD PTR ds:0xa0538101,ax
  41f4c4:	test   DWORD PTR [ebp+0x71198b8d],0x741c7091
  41f4ce:	xor    ah,ah
  41f4d0:	retf   0x612c
  41f4d3:	xor    al,0x19
  41f4d5:	je     0x41f509
  41f4d7:	les    edx,FWORD PTR [ebx]
  41f4d9:	cmp    dl,BYTE PTR [ecx+0x21]
  41f4dc:	add    DWORD PTR [esi+0x0],esp
	...
  41f507:	add    BYTE PTR [edx],dl
  41f509:	(bad)  
  41f50a:	retf   0x612c
  41f50d:	xor    al,0x18
  41f50f:	jo     0x41f534
  41f511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f512:	and    al,BYTE PTR [eax]
  41f514:	or     ebx,edx
  41f516:	push   ss
  41f517:	fs sub al,ah
  41f51a:	and    DWORD PTR [esi+edi*1+0x5b],esi
  41f51e:	inc    esi
  41f51f:	xor    eax,0x1153c0db
  41f524:	add    DWORD PTR [ebp-0x54f4d7b4],ebp
  41f52a:	inc    esp
  41f52b:	push   ss
  41f52c:	icebp  
  41f52d:	jp     0x41f549
  41f52f:	sbb    eax,esp
  41f531:	scas   al,BYTE PTR es:[edi]
  41f532:	ss and ecx,esp
  41f535:	mov    edi,0xac9937e7
  41f53a:	xor    esp,esp
  41f53c:	jge    0x41f4f0
  41f53e:	sbb    DWORD PTR [edi],ebx
  41f540:	lahf   
  41f541:	scas   eax,DWORD PTR es:[edi]
  41f542:	push   cs
  41f543:	push   ss
  41f544:	test   eax,0x7937e76c
  41f549:	lods   al,BYTE PTR ds:[esi]
  41f54a:	adc    esp,esp
  41f54c:	js     0x41f507
  41f54e:	cli    
  41f54f:	punpckhwd mm6,QWORD PTR [edi-0x458e1bf5]
  41f556:	sti    
  41f557:	sbb    edi,DWORD PTR [esi]
  41f559:	cwde   
  41f55a:	neg    DWORD PTR [esi]
  41f55c:	ins    BYTE PTR es:[edi],dx
  41f55d:	mov    edx,0x96923c15
  41f562:	stos   DWORD PTR es:[edi],eax
  41f563:	daa    
  41f564:	outs   dx,DWORD PTR ds:[esi]
  41f565:	mov    bl,0xcc
  41f567:	pop    ss
  41f568:	push   0xffffff87
  41f56a:	mov    esi,0x13
	...
  41f593:	add    BYTE PTR [eax],al
  41f595:	add    BYTE PTR [ebp-0x47],bl
  41f598:	mov    ds:0xccb65b24,eax
  41f59d:	and    dl,BYTE PTR [eax-0x41]
  41f5a0:	out    0x10,eax
  41f5a2:	and    DWORD PTR [esp+eax*8-0x6554d5df],ebp
  41f5a9:	adc    eax,0x25cdac30
  41f5ae:	sbb    DWORD PTR [ecx-0x43a6d819],edi
  41f5b4:	test   BYTE PTR [ebp-0x7],al
  41f5b7:	mov    fs,edi
  41f5b9:	xor    al,0x1b
  41f5bb:	shl    DWORD PTR [ebx+0x10],0xe1
  41f5bf:	lods   al,BYTE PTR ds:[esi]
  41f5c0:	add    BYTE PTR [ecx+eiz*1-0x47b9e98],cl
  41f5c7:	lahf   
  41f5c8:	push   esp
  41f5c9:	jmp    0xe99582f4
  41f5ce:	sub    al,0x96
  41f5d0:	inc    esi
  41f5d1:	cmp    eax,0x24526829
  41f5d6:	es call 0x3a63:0xaa2d486c
  41f5de:	push   ss
  41f5df:	(bad)  
  41f5e0:	ja     0x41f61b
  41f5e2:	pop    edi
  41f5e3:	xchg   edi,eax
  41f5e4:	addr16 dec ebx
  41f5e6:	data16 mov ds:0x9e132b41,al
  41f5ec:	xor    ch,BYTE PTR [edx]
  41f5ee:	or     bl,BYTE PTR [esi+0x70edd12b]
  41f5f4:	xor    al,0xbc
  41f5f6:	add    DWORD PTR [ecx+0x3f],ebp
  41f5f9:	sub    al,BYTE PTR [eax]
	...
  41f623:	add    bh,ah
  41f625:	cdq    
  41f626:	inc    ecx
  41f627:	daa    
  41f628:	out    dx,eax
  41f629:	je     0x41f65f
  41f62b:	mov    eax,0x24347182
  41f630:	or     al,0x6f
  41f632:	inc    esi
  41f633:	push   ds
  41f634:	stc    
  41f635:	outs   dx,BYTE PTR ds:[esi]
  41f636:	jnp    0x41f621
  41f638:	sub    al,0x96
  41f63a:	inc    esi
  41f63b:	mov    ebp,0xa4526828
  41f640:	sbb    DWORD PTR [edx-0x55d33794],ebx
  41f646:	arpl   WORD PTR [edx-0x468870e7],di
  41f64c:	pop    esi
  41f64d:	xchg   edi,eax
  41f64e:	addr16 retf 
  41f650:	pop    ecx
  41f651:	mov    ds:0x6c02ac37,al
  41f656:	xor    edx,esp
  41f658:	(bad)  
  41f659:	jo     0x41f686
  41f65b:	lods   al,BYTE PTR ds:[esi]
  41f65c:	jb     0x41f6c7
  41f65e:	xor    bh,BYTE PTR [ecx+eax*4-0x37ffcc92]
  41f665:	add    bh,BYTE PTR [edi]
  41f667:	inc    ebx
  41f668:	enter  0x2a16,0x45
  41f66c:	mov    ebx,0x99352f13
  41f671:	adc    ebp,DWORD PTR ds:0x400d4437
  41f677:	jge    0x41f6d0
  41f679:	pop    eax
  41f67a:	gs jae 0x41f687
  41f67d:	dec    ecx
  41f67e:	je     0x41f6f0
  41f680:	hlt    
  41f681:	dec    esp
  41f682:	jbe    0x41f6f7
  41f684:	xor    DWORD PTR [esi+0x6e],eax
  41f687:	imul   eax,DWORD PTR [eax],0x0
	...
  41f6b1:	add    BYTE PTR [edi+0x58],dl
  41f6b4:	gs jae 0x41f641
  41f6b7:	inc    ebp
  41f6b8:	je     0x41f72a
  41f6ba:	xor    DWORD PTR [eax+0x6e],ecx
  41f6bd:	imul   edx,DWORD PTR [edi],0x69505469
  41f6c3:	dec    esi
  41f6c4:	jne    0x41f727
  41f6c6:	dec    eax
  41f6c7:	jl     0x41f73b
  41f6c9:	cmp    DWORD PTR cs:[ebx+0x70],ecx
  41f6cd:	add    BYTE PTR [ecx+0x6b],bl
  41f6d0:	push   eax
  41f6d1:	push   esi
  41f6d2:	xor    BYTE PTR [eax+0x5d],bl
  41f6d5:	addr16 dec edx
  41f6d7:	dec    ecx
  41f6d8:	cs jno 0x41f71f
  41f6db:	pop    edi
  41f6dc:	pop    esp
  41f6dd:	push   edx
  41f6de:	cmovs  ebp,DWORD PTR [esi+0x6f]
  41f6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e3:	dec    ebp
  41f6e4:	data16 je 0x41f728
  41f6e7:	jp     0x41f754
  41f6e9:	ins    DWORD PTR es:[edi],dx
  41f6ea:	out    0x50,eax
  41f6ec:	outs   dx,DWORD PTR ds:[esi]
  41f6ed:	jae    0x41f6b3
  41f6ef:	adc    BYTE PTR [ecx+0x6c],ah
  41f6f2:	repz pop edx
  41f6f4:	dec    esi
  41f6f5:	push   ebx
  41f6f6:	aam    0x7d
  41f6f8:	inc    ebp
  41f6f9:	outs   dx,BYTE PTR ds:[esi]
  41f6fa:	jle    0x41f752
  41f6fc:	add    BYTE PTR [esi-0x1c],cl
  41f6ff:	imul   ebx,DWORD PTR [ebx+0x53],0x64744bcf
  41f706:	fisttp QWORD PTR ds:0x31c63e6e
  41f70d:	push   ecx
  41f70e:	cld    
  41f70f:	rcl    BYTE PTR [ecx],cl
  41f711:	arpl   WORD PTR [eax-0x10],cx
  41f714:	and    eax,0x44
	...
  41f73d:	add    BYTE PTR [eax],al
  41f73f:	add    bl,ah
  41f741:	rcl    BYTE PTR ds:0xff1db64,1
  41f747:	data16 loopne 0x41f6e0
  41f74a:	adc    al,BYTE PTR [eax]
  41f74c:	or     eax,0xf2473f7f
  41f751:	jbe    0x41f788
  41f753:	pop    ebp
  41f754:	clc    
  41f755:	sbb    DWORD PTR ds:0x1d67f763,0x37443e6b
  41f75f:	das    
  41f760:	outs   dx,DWORD PTR ds:[esi]
  41f761:	dec    ebp
  41f762:	cmp    esp,DWORD PTR [ebx-0x56]
  41f765:	jnp    0x41f77d
  41f767:	je     0x41f70c
  41f769:	inc    edx
  41f76a:	push   ss
  41f76b:	pop    edi
  41f76c:	xchg   edx,eax
  41f76d:	imul   ebx,DWORD PTR ds:0x13606d77,0x37643e74
  41f777:	das    
  41f778:	dec    edi
  41f779:	jge    0x41f7bc
  41f77b:	jae    0x41f707
  41f77d:	dec    esp
  41f77e:	sbb    eax,0x1f5b726e
  41f783:	pop    edi
  41f784:	push   0x5f
  41f786:	add    al,0x50
  41f788:	jne    0x41f7cd
  41f78a:	rcl    DWORD PTR [eax+0x7a],1
  41f78d:	loop   0x41f7b2
  41f78f:	inc    esp
  41f790:	arpl   WORD PTR [ecx],dx
  41f792:	emms   
  41f794:	dec    esi
  41f795:	adc    BYTE PTR [ecx],al
  41f797:	push   eax
  41f798:	jne    0x41f7bd
  41f79a:	rcr    BYTE PTR [eax+edi*2-0x1e],cl
  41f79e:	sbb    eax,0x14200d63
  41f7a3:	je     0x41f7a5
	...
  41f7cd:	add    BYTE PTR [esi],bh
  41f7cf:	xor    al,0x1
  41f7d1:	add    BYTE PTR [esi],bh
  41f7d3:	pop    ebx
  41f7d4:	out    0x3,eax
  41f7d6:	ds pop ebx
  41f7d8:	out    0x3,eax
  41f7da:	ds pop ebx
  41f7dc:	out    0x3,eax
  41f7de:	ds pop ebx
  41f7e0:	out    0x3,eax
  41f7e2:	ds pop ebx
  41f7e4:	out    0x3,eax
  41f7e6:	ds pop ebx
  41f7e8:	out    0x3,eax
  41f7ea:	ds pop ebx
  41f7ec:	out    0x3,eax
  41f7ee:	ds pop ebx
  41f7f0:	out    0x10,eax
  41f7f2:	fnstenv [esi+0x69dd1050]
  41f7f8:	or     eax,0xe7b6ea20
  41f7fd:	adc    cl,ah
  41f7ff:	mov    dh,0x40
  41f801:	adc    ch,bl
  41f803:	imul   esp,DWORD PTR [esi],0x4dbfce15
  41f809:	add    al,0xaf
  41f80b:	stos   BYTE PTR es:[edi],al
  41f80c:	inc    ebx
  41f80d:	sbb    ebp,DWORD PTR [edx-0x60db0542]
  41f813:	mov    bh,0x16
  41f815:	adc    DWORD PTR [ebp-0x55ece5a5],ebx
  41f81b:	mov    dl,0x1b
  41f81d:	pop    ds
  41f81e:	dec    edi
  41f81f:	test   BYTE PTR [edi],dl
  41f821:	adc    bl,BYTE PTR [ebp-0x62edf755]
  41f827:	pop    ebx
  41f828:	cli    
  41f829:	adc    ch,BYTE PTR [edx-0x4e]
  41f82c:	sti    
  41f82d:	push   ds
  41f82e:	das    
  41f82f:	test   dl,bh
  41f831:	sldt   WORD PTR [eax]
	...
  41f85c:	pop    ebp
  41f85d:	stos   DWORD PTR es:[edi],eax
  41f85e:	out    0x10,eax
  41f860:	push   ecx
  41f861:	mov    bh,0xd0
  41f863:	minps  xmm5,XMMWORD PTR [eax-0x4a]
  41f867:	and    BYTE PTR [ebx-0x49],ah
  41f86a:	aam    0x16
  41f86c:	pop    eax
  41f86d:	test   cl,cl
  41f86f:	or     cl,BYTE PTR [edx-0x42]
  41f872:	mov    edx,0xaa2f03
  41f877:	lds    edx,FWORD PTR [edi+ebp*4+0x63]
  41f87b:	cli    
  41f87c:	bound  edi,QWORD PTR [edx-0x4fcf6a93]
  41f882:	outs   dx,BYTE PTR ds:[esi]
  41f883:	mov    esi,0x8b6db75f
  41f888:	cmp    eax,0x377e6b5b
  41f88d:	stos   BYTE PTR es:[edi],al
  41f88e:	outs   dx,DWORD PTR ds:[esi]
  41f88f:	xchg   ebp,eax
  41f890:	and    al,0xaf
  41f892:	arpl   WORD PTR [edx-0x7a93476d],di
  41f898:	cmp    eax,0x447d6faa
  41f89d:	scas   eax,DWORD PTR es:[edi]
  41f89e:	arpl   WORD PTR [edx],bx
  41f8a0:	pop    ebp
  41f8a1:	mov    bh,0x70
  41f8a3:	inc    esp
  41f8a4:	dec    esp
  41f8a5:	and    al,0x72
  41f8a7:	pop    eax
  41f8a8:	dec    esi
  41f8a9:	mov    ebp,0x86114474
  41f8ae:	popa   
  41f8af:	push   ebp
  41f8b0:	dec    ebp
  41f8b1:	stos   DWORD PTR es:[edi],eax
  41f8b2:	arpl   cx,bp
  41f8b4:	xor    BYTE PTR [ebp-0x46c9bf94],dh
  41f8ba:	xor    DWORD PTR [esi],ecx
  41f8bc:	xor    ch,BYTE PTR [edx+0x1963]
	...
  41f8ea:	sbb    ebp,DWORD PTR [edx-0x4aef169d]
  41f8f0:	ins    BYTE PTR es:[edi],dx
  41f8f1:	add    BYTE PTR [esi],dl
  41f8f3:	mov    ecx,0xa8112e31
  41f8f8:	arpl   cx,di
  41f8fa:	cmp    eax,0xeb0d6faa
  41f8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f900:	arpl   WORD PTR [edx-0x2924524],di
  41f906:	out    0xb0,al
  41f908:	outs   dx,BYTE PTR ds:[esi]
  41f909:	(bad)  
  41f90a:	fld    TBYTE PTR [esp+esi*2+0x7223d0c4]
  41f911:	fsub   st,st(1)
  41f913:	mov    esp,0x8610c474
  41f918:	popa   
  41f919:	add    al,ch
  41f91b:	xor    esi,DWORD PTR [edx+0x6d]
  41f91e:	mov    DWORD PTR [eax],edi
  41f920:	pop    edi
  41f921:	ins    BYTE PTR es:[edi],dx
  41f922:	js     0x41f961
  41f924:	std    
  41f925:	call   DWORD PTR [edi-0x68ffffa9]
  41f92b:	push   edi
  41f92c:	add    BYTE PTR [eax],al
  41f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92f:	push   edi
  41f930:	add    BYTE PTR [eax],al
  41f932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f933:	push   edi
  41f934:	add    BYTE PTR [eax],al
  41f936:	xchg   edi,eax
  41f937:	push   edi
  41f938:	add    BYTE PTR [eax],al
  41f93a:	xchg   edi,eax
  41f93b:	push   edi
  41f93c:	add    BYTE PTR [eax],al
  41f93e:	addr16 push edi
  41f940:	add    BYTE PTR [eax],al
  41f942:	addr16 push edi
  41f944:	add    BYTE PTR [eax],al
  41f946:	out    0x2d,eax
  41f948:	ins    BYTE PTR es:[edi],dx
  41f949:	pushw  cs
  41f94b:	sub    esp,DWORD PTR [edx+0x73]
	...
  41f976:	add    BYTE PTR [eax],al
  41f978:	dec    ecx
  41f979:	imul   ebp,DWORD PTR ss:[ecx+0x67],0x7
  41f97e:	outs   dx,DWORD PTR ds:[esi]
  41f97f:	outs   dx,DWORD PTR ds:[esi]
  41f980:	add    DWORD PTR [esi],esi
  41f982:	imul   esp,DWORD PTR [ebp+0x57],0x82527016
  41f989:	sub    ebx,DWORD PTR [esi+0x74]
  41f98c:	jle    0x41f9b3
  41f98e:	bound  eax,QWORD PTR [eax]
  41f990:	inc    edi
  41f991:	cmp    BYTE PTR [ecx+0x68],dh
  41f994:	pop    ss
  41f995:	divps  xmm6,XMMWORD PTR [edi+ebp*1+0x3]
  41f99a:	ins    BYTE PTR es:[edi],dx
  41f99b:	inc    ebp
  41f99c:	das    
  41f99d:	xor    al,0xfd
  41f99f:	outs   dx,DWORD PTR ds:[esi]
  41f9a0:	and    eax,0xe9736334
  41f9a5:	xor    BYTE PTR [eax+0x0],dh
  41f9a8:	hlt    
  41f9a9:	das    
  41f9aa:	outs   dx,BYTE PTR fs:[esi]
  41f9ac:	cmp    BYTE PTR ds:0x27e42e70,ch
  41f9b2:	imul   ebp,DWORD PTR [ecx+0x3],0xee72fd34
  41f9b9:	xor    eax,0x1a3e6f6b
  41f9be:	imul   BYTE PTR ds:0xfff50c52
  41f9c4:	dec    esp
  41f9c5:	or     ebp,edx
  41f9c7:	ins    DWORD PTR es:[edi],dx
  41f9c8:	sub    DWORD PTR [edx],edx
  41f9ca:	div    BYTE PTR [ecx]
  41f9cc:	pusha  
  41f9cd:	loopne 0x41f9c7
  41f9cf:	jae    0x41fa0f
  41f9d1:	in     eax,0xeb
  41f9d3:	fs adc cl,cl
  41f9d6:	out    dx,al
  41f9d7:	jo     0x41fa26
  41f9d9:	adc    dh,ch
  41f9db:	ja     0x41f9dd
	...
  41fa05:	add    BYTE PTR [edx],cl
  41fa07:	xor    al,0x26
  41fa09:	xor    bl,BYTE PTR ds:0x1a322634
  41fa0f:	xor    al,0x26
  41fa11:	xor    ah,bl
  41fa13:	xor    edx,esi
  41fa15:	inc    edx
  41fa16:	add    ch,bh
  41fa18:	lds    edx,FWORD PTR [ebx+0x1e]
  41fa1b:	fdivr  st(1),st
  41fa1d:	jo     0x41fa09
  41fa1f:	mov    ecx,esp
  41fa21:	push   0xffffffe3
  41fa23:	dec    edi
  41fa24:	and    al,0x63
  41fa26:	loopne 0x41f9bc
  41fa28:	div    BYTE PTR [esi-0x32]
  41fa2b:	xchg   ebp,esp
  41fa2d:	arpl   bx,bp
  41fa2f:	fs in  eax,0x71
  41fa32:	test   al,0x93
  41fa34:	in     eax,dx
  41fa35:	bound  esp,QWORD PTR [edx+0x54]
  41fa38:	in     eax,0x6d
  41fa3a:	popf   
  41fa3b:	data16 stc 
  41fa3d:	outs   dx,DWORD PTR ds:[esi]
  41fa3e:	stos   BYTE PTR es:[edi],al
  41fa3f:	dec    edi
  41fa40:	call   0xf3879994
  41fa45:	je     0x41f9e8
  41fa47:	inc    esi
  41fa48:	call   0xcfa87a6c
  41fa4d:	dec    edx
  41fa4e:	pop    esi
  41fa4f:	inc    edi
  41fa50:	out    dx,eax
  41fa51:	jns    0x41f9ec
  41fa53:	push   eax
  41fa54:	out    dx,eax
  41fa55:	fs addr16 pop edx
  41fa58:	repz inc DWORD PTR [ebx+0x5862f65b]
  41fa5f:	pop    ebx
  41fa60:	(bad)  
  41fa61:	sti    
  41fa62:	fld    DWORD PTR [ebp-0x4ba80f54]
  41fa68:	ret    
  41fa69:	out    dx,eax
	...
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	push   0x4feaa57f
  41fa99:	mov    eax,0x7f31f0cd
  41fa9e:	out    0xd4,eax
  41faa0:	and    bh,BYTE PTR [ecx-0x52f70745]
  41faa6:	(bad)  
  41faa7:	fcomip st,st(4)
  41faa9:	mov    cl,0xa1
  41faab:	jmp    0x7065:0x388af25
  41fab2:	les    eax,FWORD PTR [ebx]
  41fab4:	and    BYTE PTR [edi+0x72533d97],ah
  41faba:	out    0xeb,eax
  41fabc:	in     eax,dx
  41fabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fabe:	ja     0x41fafd
  41fac0:	and    esi,DWORD PTR [edx-0x19]
  41fac3:	jmp    0x41fab2
  41fac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac6:	ja     0x41fabc
  41fac8:	daa    
  41fac9:	jb     0x41fae1
  41facb:	add    al,0xe0
  41facd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41face:	push   edi
  41facf:	xor    bh,BYTE PTR [esi]
  41fad1:	mov    ecx,0x98dcf640
  41fad6:	xor    edx,esp
  41fad8:	into   
  41fad9:	mov    bl,0x3b
  41fadb:	out    0xae,eax
  41fadd:	jno    0x41fb22
  41fadf:	jecxz  0x41fa8e
  41fae1:	pop    ebx
  41fae2:	sbb    ah,bh
  41fae4:	mov    BYTE PTR [esi-0x49690dc2],cl
  41faea:	and    BYTE PTR [edx+edi*2],al
  41faed:	mov    cs,WORD PTR [esi]
  41faef:	(bad)  
  41faf0:	cwde   
  41faf1:	scas   eax,DWORD PTR es:[edi]
  41faf2:	add    esp,ebx
  41faf4:	mov    WORD PTR gs:[ebx+eiz*8],es
	...
  41fb20:	add    BYTE PTR [eax],al
  41fb22:	je     0x41fad4
  41fb24:	adc    eax,0x1ba25ced
  41fb29:	add    al,0x78
  41fb2b:	scas   eax,DWORD PTR es:[edi]
  41fb2c:	add    BYTE PTR [esi],al
  41fb2e:	jecxz  0x41fae3
  41fb30:	add    BYTE PTR ds:0xca6db4f4,cl
  41fb36:	jmp    0x71a7:0xcedb4284
  41fb3d:	int3   
  41fb3e:	rol    DWORD PTR [eax+eax*1+0x67a2ce9c],cl
  41fb45:	aad    0xa9
  41fb47:	add    DWORD PTR [eax],0x7aaf809d
  41fb4d:	rcr    BYTE PTR [ecx-0x7272a04c],0xaa
  41fb54:	ins    DWORD PTR es:[edi],dx
  41fb55:	(bad)  
  41fb56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb57:	mov    ah,0x63
  41fb59:	call   0xac97:0x86522071
  41fb60:	jne    0x41faea
  41fb62:	mov    edi,DWORD PTR [ebp-0x429f4aa4]
  41fb68:	popa   
  41fb69:	xchg   ecx,eax
  41fb6a:	xchg   DWORD PTR [eax+edx*2+0x70b07ce9],ecx
  41fb71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb72:	push   esp
  41fb73:	stos   BYTE PTR es:[edi],al
  41fb74:	add    BYTE PTR ds:0x4d5fbb69,dh
  41fb7a:	xchg   BYTE PTR [ecx-0x50a0168e],bh
  41fb80:	ins    DWORD PTR es:[edi],dx
  41fb81:	inc    edx
  41fb82:	dec    edi
  41fb83:	xor    DWORD PTR [edx+0x52],0x0
	...
  41fbae:	add    BYTE PTR [eax],al
  41fbb0:	push   0x3a355fb7
  41fbb5:	mov    ah,BYTE PTR [edi+0x3d]
  41fbb8:	pop    ss
  41fbb9:	cdq    
  41fbba:	outs   dx,BYTE PTR ds:[esi]
  41fbbb:	inc    edi
  41fbbc:	adc    DWORD PTR [esi+0x4f],ebp
  41fbbf:	das    
  41fbc0:	repnz pop ds
  41fbc2:	dec    esi
  41fbc3:	add    eax,0x2f00ae23
  41fbc8:	and    esp,DWORD PTR [esi-0x53ece493]
  41fbce:	arpl   WORD PTR [eax],ax
  41fbd0:	hlt    
  41fbd1:	ins    DWORD PTR es:[edi],dx
  41fbd2:	fs popa 
  41fbd4:	jmp    0x41fc31
  41fbd6:	push   ebx
  41fbd7:	imul   eax,DWORD PTR [ecx+0x19],0x2cd75051
  41fbde:	data16 je 0x41fbeb
  41fbe1:	sub    eax,0x5c05642b
  41fbe6:	aas    
  41fbe7:	dec    esp
  41fbe8:	test   BYTE PTR [esi],cl
  41fbea:	inc    ecx
  41fbeb:	pop    esp
  41fbec:	in     al,dx
  41fbed:	sub    ax,0xb643
  41fbf1:	pop    ss
  41fbf2:	xor    al,0x34
  41fbf4:	mov    dh,0x6a
  41fbf6:	cmp    eax,0x2a19aa39
  41fbfb:	xor    DWORD PTR [esi-0x60d2d0c9],esp
  41fc01:	push   ss
  41fc02:	xor    eax,0x306b8230
  41fc07:	cmp    BYTE PTR [edi+0x16],ah
  41fc0a:	inc    ecx
  41fc0b:	inc    edx
  41fc0c:	imul   eax,DWORD PTR fs:[esi+0x46],0x495c5abb
	...
  41fc3c:	add    BYTE PTR [eax],al
  41fc3e:	ror    DWORD PTR [ebx],0x6f
  41fc41:	outs   dx,DWORD PTR ds:[esi]
  41fc42:	mov    ah,0xc
  41fc44:	bound  esi,QWORD PTR [edx-0x17]
  41fc47:	xor    ch,BYTE PTR [edi+0x33]
  41fc4a:	xor    eax,0xf5656f57
  41fc4f:	sub    BYTE PTR [edx+0x72],ah
  41fc52:	in     al,0x70
  41fc54:	js     0x41fcc3
  41fc56:	add    edx,DWORD PTR [edi+0x5c]
  41fc59:	inc    esi
  41fc5a:	pop    ebx
  41fc5b:	pop    es
  41fc5c:	inc    esp
  41fc5d:	imul   esp,DWORD PTR gs:[ebx],0x62
  41fc61:	jb     0x41fc7a
  41fc63:	adc    al,0x50
  41fc65:	push   esp
  41fc66:	jnp    0x41fca1
  41fc68:	das    
  41fc69:	cs dec ebx
  41fc6b:	cmp    BYTE PTR [ecx+0x0],dh
  41fc6e:	push   esi
  41fc6f:	adc    ebx,DWORD PTR [esi+0x74]
  41fc72:	ds push ebx
  41fc74:	cs fs lahf 
  41fc77:	dec    eax
  41fc78:	add    al,0x5c
  41fc7a:	and    DWORD PTR [ecx],0xfffffff5
  41fc7d:	jo     0x41fce0
  41fc7f:	push   esi
  41fc80:	clc    
  41fc81:	pop    ebx
  41fc82:	jg     0x41fcfc
  41fc84:	(bad)  
  41fc85:	push   ebx
  41fc86:	mov    ?,WORD PTR [esp+ecx*8]
  41fc89:	ins    DWORD PTR es:[edi],dx
  41fc8a:	push   edx
  41fc8b:	pxor   mm5,QWORD PTR [ebp+0x5b]
  41fc8f:	or     BYTE PTR [ecx],ah
  41fc91:	inc    ebx
  41fc92:	inc    esi
  41fc93:	add    al,0xed
  41fc95:	ins    BYTE PTR es:[edi],dx
  41fc96:	dec    esp
  41fc97:	pop    ss
  41fc98:	out    dx,eax
  41fc99:	call   DWORD PTR [eax]
  41fc9b:	or     ebp,ebx
  41fc9d:	data16 and BYTE PTR [edi],dl
  41fca0:	cmc    
  41fca1:	inc    eax
	...
  41fcca:	add    BYTE PTR [eax],al
  41fccc:	pop    ds
  41fccd:	adc    ecx,ebp
  41fccf:	(bad)  
  41fcd0:	std    
  41fcd1:	loope  0x41fcba
  41fcd3:	arpl   WORD PTR [ebx],sp
  41fcd5:	(bad)  
  41fcd6:	hlt    
  41fcd7:	popw   ds
  41fcd9:	shl    cl,1
  41fcdb:	(bad)  
  41fcdc:	cli    
  41fcdd:	loopne 0x41fcff
  41fcdf:	inc    edi
  41fce0:	sti    
  41fce1:	adc    eax,ebx
  41fce3:	push   ebx
  41fce4:	push   cs
  41fce5:	adc    al,0xd1
  41fce7:	pop    esi
  41fce8:	in     eax,dx
  41fce9:	mov    al,ds:0xcfec6cf6
  41fcee:	icebp  
  41fcef:	(bad)  
  41fcf0:	std    
  41fcf1:	ret    
  41fcf2:	ret    
  41fcf3:	dec    edi
  41fcf4:	pop    es
  41fcf5:	jp     0x41fd1b
  41fcf7:	add    dh,bh
  41fcf9:	imul   esi,DWORD PTR [ebx],0x4aca623c
  41fcff:	jno    0x3eec0194
  41fd05:	mov    eax,esi
  41fd07:	in     eax,dx
  41fd08:	jg     0x41fd74
  41fd0a:	xor    edi,DWORD PTR [edx+eiz*1]
  41fd0d:	stos   BYTE PTR es:[edi],al
  41fd0e:	dec    ebx
  41fd0f:	psraw  mm5,QWORD PTR [esi+0x4]
  41fd13:	stos   BYTE PTR es:[edi],al
  41fd14:	ds pop ebx
  41fd16:	adc    dh,al
  41fd18:	and    ebx,DWORD PTR [ecx+0x374a3531]
  41fd1e:	push   ecx
  41fd1f:	dec    ebp
  41fd20:	xor    esi,ebx
  41fd22:	or     eax,DWORD PTR [esp+eiz*4]
  41fd25:	pop    edx
  41fd26:	adc    dh,al
  41fd28:	jecxz  0x41fd87
  41fd2a:	out    0x3,eax
  41fd2c:	ds js  0x41fce6
  41fd2f:	xor    DWORD PTR [eax],eax
	...
  41fd59:	add    BYTE PTR [esi+0x63ed1a5b],al
  41fd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd60:	fsubrp st(2),st
  41fd62:	dec    edi
  41fd63:	mov    eax,0xba60cebb
  41fd68:	fldlg2 
  41fd6a:	dec    esi
  41fd6b:	scas   al,BYTE PTR es:[edi]
  41fd6c:	vunpckhps ymm2,ymm1,YMMWORD PTR [ebp+edx*8-0x3256e309]
  41fd75:	out    0x2d,al
  41fd77:	jnp    0x41fd25
  41fd79:	sti    
  41fd7a:	adc    DWORD PTR [edi-0x56e30e42],ebp
  41fd80:	ret    
  41fd81:	retf   0xa723
  41fd84:	test   bh,ch
  41fd86:	adc    eax,0xfecadb4
  41fd8b:	mov    al,0x9a
  41fd8d:	fisttp WORD PTR [esi]
  41fd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd90:	xchg   esi,eax
  41fd91:	icebp  
  41fd92:	adc    BYTE PTR [esi+0x5b3e3184],dh
  41fd98:	out    0x3,eax
  41fd9a:	ds mov esp,0xb659e1e7
  41fda0:	out    0x31,eax
  41fda2:	ds arpl di,sp
  41fda5:	xor    eax,0xe5e7643e
  41fdaa:	inc    ecx
  41fdab:	outs   dx,BYTE PTR ds:[esi]
  41fdac:	out    0x3a,eax
  41fdae:	ds mov ecx,0x643e37e7
  41fdb4:	out    0x2e,eax
  41fdb6:	ds addr16 add cl,ch
  41fdba:	push   ds
  41fdbb:	sbb    eax,0xe961
	...
  41fde8:	push   esp
  41fde9:	pop    ebx
  41fdea:	sub    ebp,ecx
  41fdec:	sbb    al,0x1d
  41fdee:	xor    ch,cl
  41fdf0:	push   eax
  41fdf1:	pop    ebx
  41fdf2:	cmp    cl,ch
  41fdf4:	push   eax
  41fdf5:	pop    ebx
  41fdf6:	popa   
  41fdf7:	jmp    0xe974592b
  41fdfc:	xor    al,0x5b
  41fdfe:	xor    cl,ch
  41fe00:	xor    DWORD PTR [ebx+0x64],ebx
  41fe03:	jmp    0xe9a21ae7
  41fe08:	adc    bl,BYTE PTR [ebx+0x66]
  41fe0b:	jmp    0xe942591a
  41fe10:	clc    
  41fe11:	mov    ch,0x61
  41fe13:	fcmovnbe st,st(2)
  41fe15:	stos   DWORD PTR es:[edi],eax
  41fe16:	ins    DWORD PTR es:[edi],dx
  41fe17:	(bad)  
  41fe18:	mov    cl,0x7f
  41fe1a:	push   ebp
  41fe1b:	shl    BYTE PTR [ebx-0x4e3b916b],1
  41fe21:	jg     0x41fe4d
  41fe23:	jmp    0xf3b2a6c3
  41fe28:	push   0x6e
  41fe2a:	add    BYTE PTR [edx-0x698b495e],bh
  41fe30:	pushf  
  41fe31:	stos   BYTE PTR es:[edi],al
  41fe32:	arpl   WORD PTR [ebp-0x74924784],si
  41fe38:	pusha  
  41fe39:	add    BYTE PTR [ecx-0x6a],0x60
  41fe3d:	mov    cl,0x6d
  41fe3f:	(bad)  
  41fe40:	cmp    eax,0x587d678a
  41fe45:	mov    esp,DWORD PTR [ebx+0x7b]
  41fe48:	push   ebx
  41fe49:	mov    ecx,0x5a72
	...
  41fe76:	cmp    cl,BYTE PTR [edx-0x74a0aa99]
  41fe7c:	arpl   WORD PTR [ebx+0x4c],bx
  41fe7f:	mov    ecx,0xb75f0972
  41fe84:	pop    esp
  41fe85:	add    BYTE PTR [edi+0x30],ch
  41fe88:	jo     0x41fefe
  41fe8a:	pop    ss
  41fe8b:	add    eax,0x4727466
  41fe90:	bound  esi,QWORD PTR [edx+0x51]
  41fe93:	cmp    ch,BYTE PTR [edi+0x20]
  41fe96:	add    bh,ah
  41fe98:	pop    eax
  41fe99:	push   edi
  41fe9a:	inc    edx
  41fe9b:	xor    eax,0x573b7252
  41fea0:	dec    edi
  41fea1:	imul   edx,DWORD PTR [ebx+0x3a],0x29f56550
  41fea8:	bound  esi,QWORD PTR [edx-0x9]
  41feab:	jp     0x41ff11
  41fead:	pop    esp
  41feae:	inc    ebp
  41feaf:	cmp    ch,BYTE PTR [edx+0x6f]
  41feb2:	sar    DWORD PTR [edx],cl
  41feb4:	sbb    eax,0x6225ee44
  41feb9:	arpl   bx,si
  41febb:	xor    BYTE PTR [edi+0x79],ch
  41febe:	xlat   BYTE PTR ds:[ebx]
  41febf:	add    al,0x66
  41fec1:	je     0x41fe45
  41fec3:	add    al,0x62
  41fec5:	jb     0x41feb8
  41fec7:	cmp    ch,BYTE PTR [edi+0x20]
  41feca:	inc    edx
  41fecb:	cmp    ebp,DWORD PTR [edx]
  41fecd:	push   ebp
  41fece:	in     al,0x3a
  41fed0:	outs   dx,DWORD PTR ds:[esi]
  41fed1:	add    BYTE PTR [esi+ebp*1+0x3ad46571],dh
  41fed8:	outs   dx,DWORD PTR ds:[esi]
  41fed9:	jbe    0x41fedb
	...
  41ff03:	add    dl,al
  41ff05:	and    eax,0x72b3251d
  41ff0a:	push   ecx
  41ff0b:	jae    0x41fecf
  41ff0d:	and    eax,0x57d0501d
  41ff12:	and    DWORD PTR [ebx-0x35],esi
  41ff15:	or     al,0x62
  41ff17:	jns    0x41fecd
  41ff19:	das    
  41ff1a:	pop    esi
  41ff1b:	imul   ebx,ecx,0xf3694f57
  41ff21:	cmp    DWORD PTR [eax+0x65],edx
  41ff24:	in     eax,0x28
  41ff26:	bound  esi,QWORD PTR [edx+0x3e]
  41ff29:	push   edx
  41ff2a:	pop    ds
  41ff2b:	fs call 0xbd04:0x8e53c255
  41ff33:	bound  ebx,QWORD PTR [edx+0x7862fc4f]
  41ff39:	js     0x41ff0f
  41ff3b:	dec    DWORD PTR [ebx+ebx*4+0x328d62f0]
  41ff42:	stc    
  41ff43:	push   0xffffff9a
  41ff45:	add    al,0xd2
  41ff47:	bound  ebx,QWORD PTR [esp+0x63725ebd]
  41ff4e:	add    al,0x4c
  41ff50:	popa   
  41ff51:	imul   ebp,ebx,0xe3401e6d
  41ff57:	jae    0x41ffb8
  41ff59:	add    al,0xd6
  41ff5b:	dec    esi
  41ff5c:	mov    bl,BYTE PTR [ebx-0x10]
  41ff5f:	bound  ebx,QWORD PTR [esi]
  41ff61:	sub    ch,dl
  41ff63:	jno    0x41ffc0
  41ff65:	and    ebp,ebp
  41ff67:	pop    ds
	...
  41ff90:	add    BYTE PTR [eax],al
  41ff92:	or     eax,0x1c5eed04
  41ff97:	fcomp  st(7)
  41ff99:	call   FWORD PTR [ecx+0x4]
  41ff9c:	sub    al,0x0
  41ff9e:	pop    esi
  41ff9f:	add    al,0xc6
  41ffa1:	dec    esp
  41ffa2:	lock hlt 
  41ffa4:	int3   
  41ffa5:	push   ecx
  41ffa6:	(bad)  
  41ffa7:	mov    edx,0xd43e53c6
  41ffac:	rol    BYTE PTR [esi-0x5],cl
  41ffaf:	ret    0x56d2
  41ffb2:	xlat   BYTE PTR ds:[ebx]
  41ffb4:	mov    BYTE PTR [esi+0xf],0xcf
  41ffb8:	mov    edi,0xbfcbfcff
  41ffbd:	inc    eax
  41ffbe:	cmc    
  41ffbf:	add    edi,DWORD PTR [edi-0x3438f3b4]
  41ffc5:	inc    esp
  41ffc6:	or     BYTE PTR [ecx+eax*1],al
  41ffc9:	ins    BYTE PTR es:[edi],dx
  41ffca:	loope  0x420026
  41ffcc:	dec    esi
  41ffcd:	jmp    0x41ffaa
  41ffcf:	(bad)  
  41ffd0:	out    0xe8,eax
  41ffd2:	iret   
  41ffd3:	or     DWORD PTR [esi-0x15],0xffffffab
  41ffd7:	mov    edx,0x5ba5f654
  41ffdc:	aaa    
  41ffdd:	jecxz  0x41ff8d
  41ffdf:	mov    ?,WORD PTR [esi]
  41ffe1:	jmp    0xf2587f95
  41ffe6:	js     0x41ff6f
  41ffe8:	xor    al,0xdf
  41ffea:	adc    DWORD PTR [edi-0x767020e6],ecx
  41fff0:	or     bh,ah
  41fff2:	pushf  
  41fff3:	mov    edx,0xe31d
	...
  420020:	gs nop
  420022:	add    al,0x4
  420024:	pop    eax
  420025:	(bad)  
  420026:	idiv   DWORD PTR ds:0xebe74a1b
  42002c:	ins    DWORD PTR es:[edi],dx
  42002d:	(bad)  
  42002e:	idiv   DWORD PTR ds:0xebe74a2b
  420034:	dec    ebp
  420035:	(bad)  
  420036:	xlat   BYTE PTR ds:[ebx]
  420037:	hlt    
  420038:	pop    es
  420039:	dec    edx
  42003a:	push   cs
  42003b:	add    al,0x62
  42003d:	mov    ds:0x8722e8c6,al
  420042:	(bad)  
  420043:	xlat   BYTE PTR ds:[ebx]
  420044:	inc    BYTE PTR [edx-0x7feb1747]
  42004a:	out    0xd7,eax
  42004c:	inc    BYTE PTR [edx-0x7bdb1747]
  420052:	mov    ah,0xe6
  420054:	xchg   ecx,eax
  420055:	mov    ch,0xaa
  420057:	jmp    0x420068
  420059:	mov    cl,BYTE PTR [esi+ebx*8-0xb63790f]
  420060:	jns    0x42000e
  420062:	jle    0x420045
  420064:	in     eax,dx
  420065:	xchg   ecx,eax
  420066:	mov    ch,dh
  420068:	fdiv   QWORD PTR [esi-0x76101456]
  42006e:	add    BYTE PTR [eax+edi*2+0x4a746ca9],al
  420075:	sbb    DWORD PTR [eax+0x57],ecx
  420078:	push   ebx
  420079:	lea    ebx,[edi+0x4d]
  42007c:	push   esi
  42007d:	mov    dh,0x44
  42007f:	inc    eax
  420080:	xor    BYTE PTR [ecx],bl
  420082:	pop    ecx
  420083:	sub    eax,DWORD PTR [eax]
	...
  4200ad:	add    BYTE PTR [eax],ch
  4200af:	mov    BYTE PTR [ebx+0x50],ch
  4200b2:	sbb    DWORD PTR [esi-0x7e0be300],eax
  4200b8:	popa   
  4200b9:	inc    ecx
  4200ba:	adc    BYTE PTR [eax-0x48c5bb95],cl
  4200c0:	inc    ecx
  4200c1:	push   ss
  4200c2:	and    DWORD PTR [eax-0x48c5f19c],ecx
  4200c8:	push   edx
  4200c9:	push   es
  4200ca:	jecxz  0x42004f
  4200cc:	dec    ebx
  4200cd:	add    al,0xe6
  4200cf:	mov    WORD PTR [eax],es
  4200d1:	xor    ah,BYTE PTR [ecx]
  4200d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200d4:	arpl   WORD PTR ds:0xe96e8801,cx
  4200da:	icebp  
  4200db:	mov    ds:0x84f11c2b,eax
  4200e0:	arpl   si,dx
  4200e2:	xlat   BYTE PTR ds:[ebx]
  4200e3:	sbb    BYTE PTR [ecx-0x47],bl
  4200e6:	retf   
  4200e7:	xchg   DWORD PTR [esi-0x40],esp
  4200ea:	mov    eax,ds:0xf0e9717d
  4200ef:	mov    BYTE PTR [edi-0x36],ah
  4200f2:	cmp    eax,0x94b943b7
  4200f7:	jnp    0x420155
  4200f9:	lods   al,BYTE PTR ds:[esi]
  4200fa:	lea    eax,[ecx-0x7395169f]
  420100:	pop    edi
  420101:	(bad)  
  420102:	lahf   
  420103:	inc    ebp
  420104:	inc    esi
  420105:	mov    ch,0x6d
  420107:	sbb    BYTE PTR [edx-0x80],dh
  42010a:	imul   edi,DWORD PTR [ebp+0x71],0x678664bf
	...
  420139:	add    BYTE PTR [eax],al
  42013b:	add    BYTE PTR [edi+0x30],dl
  42013e:	push   eax
  42013f:	imul   ebp,ebx,0xb3007038
  420145:	sub    ah,BYTE PTR [esi+0x73]
  420148:	mov    esi,0x376d6bff
  42014d:	and    ah,BYTE PTR [edx+0x64]
  420150:	out    dx,al
  420151:	std    
  420152:	cld    
  420153:	sub    eax,0x6d0b89
  420158:	je     0x4201b9
  42015a:	popa   
  42015b:	add    BYTE PTR [ebx+0x5f],ch
  42015e:	je     0x420160
  420160:	mov    ds,WORD PTR [edi+0x6e]
  420163:	add    BYTE PTR [eax+0x27006f5f],cl
  420169:	pop    esp
  42016a:	pop    esp
  42016b:	inc    edi
  42016c:	xor    eax,DWORD PTR [eax]
  42016e:	pop    edi
  42016f:	popa   
  420170:	xor    edi,DWORD PTR [edi]
  420172:	inc    esp
  420173:	outs   dx,DWORD PTR ds:[esi]
  420174:	pop    eax
  420175:	add    DWORD PTR [ecx+0x6f],ebp
  420178:	inc    esi
  420179:	sti    
  42017a:	popa   
  42017b:	jb     0x420154
  42017d:	sub    al,0x4a
  42017f:	cs ss or eax,0xd5e76860
  420186:	outs   dx,BYTE PTR ds:[esi]
  420187:	gs aam 0x3
  42018a:	inc    ebx
  42018b:	push   esp
  42018c:	xchg   DWORD PTR [ebx+0x2e],ebx
  42018f:	push   ebx
  420190:	xchg   edx,eax
  420191:	aad    0xfc
  420193:	inc    ecx
  420194:	cmp    esi,0x76
  420197:	fld    DWORD PTR gs:[edi]
  42019a:	ins    DWORD PTR es:[edi],dx
  42019b:	add    ah,ah
  42019d:	push   es
  42019e:	jno    0x420205
	...
  4201c8:	add    BYTE PTR [eax],al
  4201ca:	xor    ebx,edi
  4201cc:	pop    ebp
  4201cd:	je     0x420176
  4201cf:	pop    ds
  4201d0:	pop    esi
  4201d1:	jae    0x42019e
  4201d3:	sub    ebx,DWORD PTR [esi+0x73]
  4201d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d7:	or     BYTE PTR [edx+esi*2-0x45],ch
  4201db:	pop    ebx
  4201dc:	dec    esp
  4201dd:	popa   
  4201de:	ds cmc 
  4201e0:	in     al,dx
  4201e1:	ds fcmovu st,st(5)
  4201e4:	out    dx,al
  4201e5:	(bad)  
  4201e6:	in     eax,dx
  4201e7:	xchg   esp,eax
  4201e8:	add    DWORD PTR [edi+ebx*8-0x6c],ecx
  4201ec:	in     eax,dx
  4201ed:	push   edx
  4201ee:	int    0xe6
  4201f0:	out    dx,al
  4201f1:	inc    DWORD PTR ds:0xee73f1e3
  4201f7:	mov    al,0xf2
  4201f9:	jae    0x420239
  4201fb:	push   ebp
  4201fc:	in     eax,0x65
  4201fe:	mov    dl,0xb5
  420200:	jecxz  0x420273
  420202:	fwait
  420203:	dec    eax
  420204:	mov    esi,0xec519f6b
  420209:	dec    edi
  42020a:	fwait
  42020b:	mov    ds:0xa07c5be9,eax
  420210:	jecxz  0x42028b
  420212:	fwait
  420213:	lock outs dx,DWORD PTR ds:[esi]
  420216:	push   0x51
  420218:	fbstp  TBYTE PTR [ebx-0x76]
  42021b:	imul   esp,esi,0x64
  42021e:	ins    DWORD PTR es:[edi],dx
  42021f:	add    al,0xd5
  420221:	inc    ecx
  420222:	bound  esp,QWORD PTR [ebx-0x6]
  420225:	bound  eax,QWORD PTR [eax+0x13fff118]
  42022b:	pop    esi
  42022c:	hlt    
  42022d:	imul   eax,DWORD PTR [eax],0x0
	...
  420258:	ds inc esi
  42025a:	ror    BYTE PTR [edi+0x25],1
  42025d:	sbb    DWORD PTR [ebx],esp
  42025f:	dec    esp
  420260:	push   edi
  420261:	cs jmp 0x2a6b:0xe02c4d5b
  420269:	shl    ch,1
  42026b:	outs   dx,DWORD PTR ds:[esi]
  42026c:	sbb    edx,esi
  42026e:	aam    0x60
  420270:	sbb    DWORD PTR [edi],ebp
  420272:	call   0x16212d5
  420277:	inc    ebp
  420278:	sub    esi,eax
  42027a:	int3   
  42027b:	dec    edi
  42027c:	ds shl ebp,0x6d
  420280:	sbb    BYTE PTR [ebx-0x74],bl
  420283:	loop   0x420292
  420285:	test   BYTE PTR [esi-0x64bb111b],cl
  42028b:	sti    
  42028c:	in     eax,dx
  42028d:	pop    edx
  42028e:	fidivr DWORD PTR [edi-0x2c6462ec]
  420294:	popa   
  420295:	mov    DWORD PTR [eax-0x3a762311],edx
  42029b:	in     al,dx
  42029c:	jecxz  0x420221
  42029e:	out    0xd7,eax
  4202a0:	push   cs
  4202a1:	lahf   
  4202a2:	adc    al,0xbe
  4202a4:	in     eax,dx
  4202a5:	stos   BYTE PTR es:[edi],al
  4202a6:	out    0xd7,eax
  4202a8:	mov    es,WORD PTR [ebx+ebx*2+0x5a807ddf]
  4202af:	jmp    0x420253
  4202b1:	test   DWORD PTR [edx+esi*8+0x21],ecx
  4202b5:	test   eax,0xae6dbe2e
  4202ba:	sub    dl,dl
	...
  4202e4:	add    BYTE PTR [eax],al
  4202e6:	jl     0x42029f
  4202e8:	sub    ch,al
  4202ea:	push   0x8edf1a8a
  4202ef:	mov    bh,0x33
  4202f1:	sti    
  4202f2:	imul   eax,DWORD PTR [eax-0x48a014dd],0x4b30be12
  4202fc:	mov    ebx,0xbf537f30
  420301:	or     BYTE PTR es:[ebp+0x2d],0x32
  420306:	and    eax,0x932b74c
  42030b:	dec    eax
  42030c:	test   al,0x30
  42030e:	jg     0x420364
  420310:	or     al,0x34
  420312:	jbe    0x42035f
  420314:	pop    ss
  420315:	xor    bh,ah
  420317:	dec    eax
  420318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420319:	das    
  42031a:	jno    0x4202b9
  42031c:	test   eax,0xd4c05f6
  420321:	xor    bh,dl
  420323:	dec    edx
  420324:	add    BYTE PTR [ebp-0x591835e],dl
  42032a:	dec    edi
  42032b:	pop    ebx
  42032c:	inc    ebx
  42032d:	mov    BYTE PTR [esi-0x724ab974],cl
  420333:	adc    eax,0x8990a759
  420338:	push   ecx
  420339:	mov    BYTE PTR [edi-0x4c],ch
  42033c:	outs   dx,BYTE PTR ds:[esi]
  42033d:	mov    ?,WORD PTR ds:0x4d877845
  420343:	adc    eax,0x85717b2b
  420348:	add    BYTE PTR [ebp+0x0],dl
	...
  420372:	add    BYTE PTR [eax],al
  420374:	mov    BYTE PTR [ebx-0x5093c5b5],ch
  42037a:	sub    eax,0x5f8b4213
  42037f:	pop    edx
  420380:	das    
  420381:	nop
  420382:	ins    DWORD PTR es:[edi],dx
  420383:	pop    ebx
  420384:	push   ds
  420385:	jne    0x4203ba
  420387:	clc    
  420388:	addr16 jns 0x4203c5
  42038b:	jmp    0x3ba58fb8
  420390:	sbb    BYTE PTR [esi-0x75bbbb95],dh
  420396:	cmp    ch,cl
  420398:	jecxz  0x420323
  42039a:	ins    BYTE PTR es:[edi],dx
  42039b:	or     eax,0xd64b422
  4203a0:	in     al,dx
  4203a1:	jns    0x420414
  4203a3:	sbb    ah,BYTE PTR [edx+ecx*4]
  4203a6:	cmp    ch,cl
  4203a8:	sbb    ebx,DWORD PTR [ebx+0x54]
  4203ab:	and    al,0xec
  4203ad:	mov    eax,ds:0x48001b51
  4203b2:	add    BYTE PTR [edi],ah
  4203b4:	out    dx,al
  4203b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203b6:	and    BYTE PTR [edi-0x58ff7026],dh
  4203bc:	mov    DWORD PTR [esi+ecx*2+0x7214a2c6],esp
  4203c3:	rcr    BYTE PTR [ecx+0x49007179],0x17
  4203ca:	push   0x6c
  4203cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203cd:	sub    ecx,DWORD PTR [esi+eax*2-0x4d]
  4203d1:	daa    
  4203d2:	ds push edx
  4203d4:	loop   0x420402
  4203d6:	dec    edi
  4203d7:	outs   dx,DWORD PTR ds:[esi]
	...
  420400:	add    BYTE PTR [eax],al
  420402:	mov    ch,0xff
  420404:	sub    DWORD PTR [esi-0x4d],eax
  420407:	sub    BYTE PTR ds:0x5c477933,bl
  42040d:	push   ebx
  42040e:	mov    ah,0xa
  420410:	data16 jo 0x4203f6
  420413:	or     bh,ch
  420415:	push   edx
  420416:	test   al,0xd6
  420418:	push   eax
  420419:	push   edi
  42041a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041b:	sub    al,BYTE PTR [edx+0x5c]
  42041e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041f:	call   FWORD PTR [esi+0x6f]
  420422:	sub    ah,BYTE PTR [ecx]
  420424:	push   ecx
  420425:	push   eax
  420426:	inc    edi
  420427:	dec    esp
  420428:	cs aaa 
  42042a:	imul   esp,DWORD PTR [ecx],0x51
  42042d:	push   eax
  42042e:	add    ch,BYTE PTR fs:[edi+0x76]
  420432:	jb     0x420441
  420434:	jo     0x420436
  420436:	popa   
  420437:	xor    ecx,DWORD PTR [ebp+0x20]
  42043a:	fs clc 
  42043c:	jno    0x4204ac
  42043e:	push   ebx
  42043f:	pop    edi
  420440:	inc    esi
  420441:	push   esp
  420442:	inc    edi
  420443:	aas    
  420444:	inc    esi
  420445:	imul   ecx,DWORD PTR [ebx+0x2],0x27e76422
  42044c:	pop    esi
  42044d:	jae    0x420493
  42044f:	adc    BYTE PTR [edx+esi*2+0x33],ch
  420453:	pop    edi
  420454:	dec    edi
  420455:	gs aad 0x11
  420458:	bound  esi,QWORD PTR [edx+0x19]
  42045b:	(bad)  
  42045c:	imul   esp,DWORD PTR [ebp-0x29],0xe5657032
  420463:	(bad)  
  420464:	inc    eax
	...
  42048d:	add    BYTE PTR [eax],al
  42048f:	add    dh,ch
  420491:	stc    
  420492:	gs je  0x4204d3
  420495:	sbb    esp,esp
  420497:	imul   eax,DWORD PTR [edx],0x1b
  42049a:	repz bound ebx,QWORD PTR ds:0x1771e1d6
  4204a1:	add    dl,cl
  4204a3:	ins    BYTE PTR es:[edi],dx
  4204a4:	or     al,0xd6
  4204a6:	mov    esi,0xe8201b72
  4204ab:	jno    0x4204eb
  4204ad:	shl    edi,1
  4204af:	jno    0x4204a1
  4204b1:	fdivrp st(2),st
  4204b3:	push   ebx
  4204b4:	div    ecx
  4204b6:	out    0xff,eax
  4204b8:	cmp    DWORD PTR [edx],eax
  4204ba:	add    DWORD PTR [eax],eax
  4204bc:	mov    ch,0xe9
  4204be:	ret    
  4204bf:	jmp    edi
  4204c1:	ficom  WORD PTR [ebx-0x433b4085]
  4204c7:	sub    al,0x90
  4204c9:	push   0x9
  4204cb:	mov    al,ds:0x66562646
  4204d0:	mov    ebx,DWORD PTR [ebx+0x6f603204]
  4204d6:	and    dh,BYTE PTR [edx]
  4204d8:	adc    dh,BYTE PTR ds:0x3e35
  4204dd:	adc    al,0xfb
  4204df:	add    eax,0xff0a6d46
  4204e4:	cmp    bh,bh
  4204e6:	or     DWORD PTR [ecx],eax
  4204e8:	cmp    eax,0x986cd604
  4204ed:	jo     0x4204e8
  4204ef:	pop    esi
  4204f0:	ins    BYTE PTR es:[edi],dx
  4204f1:	push   edi
  4204f2:	ror    BYTE PTR [ebx+0x0],1
	...
  42051d:	add    BYTE PTR [edi+0x5a],ah
  420520:	jecxz  0x420592
  420522:	or     BYTE PTR [eax-0x2c],0x5b
  420526:	lea    ebp,[ebx-0x8]
  420529:	bound  ebx,QWORD PTR [esi]
  42052b:	aas    
  42052c:	jecxz  0x42059b
  42052e:	pop    edi
  42052f:	popa   
  420530:	out    0x71,eax
  420532:	ds cmp al,0xe1
  420535:	jo     0x420581
  420537:	pop    ebx
  420538:	out    0xd8,eax
  42053a:	cs js  0x420516
  42053d:	add    ecx,DWORD PTR [esi]
  42053f:	jl     0x42051b
  420541:	imul   BYTE PTR [ecx+0x2df5bea2]
  420547:	pop    ebx
  420548:	cdq    
  420549:	call   0xe8f58772
  42054e:	xor    DWORD PTR [edi-0x49760a40],edx
  420554:	stos   BYTE PTR es:[edi],al
  420555:	in     al,dx
  420556:	pop    ds
  420557:	js     0x4204f2
  420559:	out    0xec,eax
  42055b:	jge    0x4204ef
  42055d:	add    esp,DWORD PTR [eax]
  42055f:	ja     0x4204fd
  420561:	out    0xd6,al
  420563:	pop    edx
  420564:	xchg   esp,eax
  420565:	neg    ah
  420567:	mov    ebp,ss
  420569:	out    0xea,al
  42056b:	add    BYTE PTR [ebp-0x4ca52524],0xf6
  420572:	fadd   QWORD PTR [esi+0x79d3dc73]
  420578:	pop    es
  420579:	loop   0x420513
  42057b:	add    BYTE PTR [edi+ebp*1+0x5c],0x5b
  420580:	or     DWORD PTR [eax+eax*1],eax
	...
  4205ab:	add    BYTE PTR [eax-0x6308c484],dh
  4205b1:	push   eax
  4205b2:	or     DWORD PTR [edi+ebp*2],eax
  4205b5:	add    BYTE PTR [ebp-0x8],0x8a
  4205b9:	jl     0x4205f4
  4205bb:	out    0x65,eax
  4205bd:	scas   al,BYTE PTR es:[edi]
  4205be:	inc    eax
  4205bf:	fist   WORD PTR [edx+0x6de33b81]
  4205c5:	or     DWORD PTR [eax],0xffffffdf
  4205c8:	xchg   ebp,eax
  4205c9:	stos   DWORD PTR es:[edi],eax
  4205ca:	sbb    al,0xd8
  4205cc:	lea    esi,[ebx+ebp*1-0x571a32b]
  4205d3:	fisubr DWORD PTR [edx-0x7f]
  4205d6:	cli    
  4205d7:	add    eax,DWORD PTR [esi-0x2e05ff7e]
  4205dd:	lahf   
  4205de:	pop    edi
  4205df:	cld    
  4205e0:	fcom   DWORD PTR [ecx]
  4205e2:	push   esp
  4205e3:	fisub  DWORD PTR [eax-0x6f37b175]
  4205e9:	jl     0x4205eb
  4205eb:	mov    ecx,0xd6718a9c
  4205f0:	sahf   
  4205f1:	mov    esp,DWORD PTR [ecx+ebp*8+0x6d]
  4205f5:	jle    0x420669
  4205f7:	mov    ch,0x7f
  4205f9:	mov    WORD PTR [ebx-0x35],gs
  4205fc:	mov    al,ds:0x9895008b
  420601:	mov    ebp,DWORD PTR [ebx-0x70]
  420604:	pop    edi
  420605:	mov    al,0x6c
  420607:	mov    ch,0x64
  420609:	and    DWORD PTR [ebx-0x17],0xa770817f
	...
  420638:	add    BYTE PTR [eax],al
  42063a:	mov    DWORD PTR [ecx-0x7a877ed2],esp
  420640:	add    BYTE PTR [ebp-0x738b8181],bl
  420646:	dec    ebp
  420647:	mov    al,0x64
  420649:	ret    0x5b22
  42064c:	push   ecx
  42064d:	push   esi
  42064e:	and    al,0x8d
  420650:	jne    0x42069a
  420652:	sub    BYTE PTR [esi+0x5c],bh
  420655:	sub    bl,BYTE PTR [edi]
  420657:	ja     0x4206bf
  420659:	inc    esp
  42065a:	sbb    DWORD PTR [ebx+esi*2+0x6daa6239],ebx
  420661:	inc    edi
  420662:	push   ss
  420663:	mov    BYTE PTR [edi+0x3b],bl
  420666:	and    DWORD PTR [ecx],edx
  420668:	inc    ebx
  420669:	adc    eax,0xc6470ea
  42066e:	repz mov WORD PTR [edi+0xf],fs
  420672:	fisttp QWORD PTR [edi+eiz*2+0x7170dc06]
  420679:	add    al,0xe8
  42067b:	xchg   BYTE PTR [ebx+0x0],ah
  42067e:	aad    0x5c
  420680:	inc    esi
  420681:	push   esp
  420682:	aaa    
  420683:	aaa    
  420684:	fs les ecx,FWORD PTR gs:[eax]
  420688:	data16 outs dx,BYTE PTR ds:[esi]
  42068a:	adc    esp,DWORD PTR ss:[esi+0x6f]
  42068e:	xchg   ecx,eax
  42068f:	cmp    al,0x71
  420691:	jae    0x42070d
  420693:	push   es
  420694:	std    
  420695:	inc    ebp
  420696:	jmp    0x4206c4
  420698:	sbb    eax,0x71077a64
  42069d:	imul   eax,DWORD PTR [eax],0x0
	...
  4206c7:	add    BYTE PTR [ecx-0x3],dh
  4206ca:	jo     0x420735
  4206cc:	cmp    dl,0x1c
  4206cf:	jo     0x420747
  4206d1:	pop    es
  4206d2:	jo     0x42074b
  4206d4:	rol    BYTE PTR [esi],0x61
  4206d7:	add    BYTE PTR [ecx-0x44dfb2d8],ch
  4206dd:	stc    
  4206de:	outs   dx,DWORD PTR ds:[esi]
  4206df:	je     0x42069f
  4206e1:	cli    
  4206e2:	pop    ebp
  4206e3:	je     0x4206a3
  4206e5:	sti    
  4206e6:	push   0x20
  4206e8:	xlat   BYTE PTR ds:[ebx]
  4206e9:	cli    
  4206ea:	outs   dx,BYTE PTR ds:[esi]
  4206eb:	je     0x420754
  4206ed:	and    dl,BYTE PTR [ecx+0x50]
  4206f0:	ja     0x4206ea
  4206f2:	popa   
  4206f3:	jae    0x4206c0
  4206f5:	xor    al,0x6b
  4206f7:	popa   
  4206f8:	fwait
  4206f9:	cs ins BYTE PTR es:[edi],dx
  4206fb:	outs   dx,BYTE PTR ds:[esi]
  4206fc:	inc    edi
  4206fd:	cld    
  4206fe:	pop    ebp
  4206ff:	je     0x420777
  420701:	sti    
  420702:	imul   esp,DWORD PTR [edi+0x17],0x16
  420706:	push   ecx
  420707:	push   eax
  420708:	inc    edi
  420709:	pop    es
  42070a:	outs   dx,DWORD PTR ds:[esi]
  42070b:	outs   dx,DWORD PTR ds:[esi]
  42070c:	jns    0x42073c
  42070e:	imul   esp,DWORD PTR [ebp+0x44],0x27544657
  420715:	sub    al,0x65
  420717:	gs push ebx
  420719:	sti    
  42071a:	cld    
  42071b:	gs dec ebx
  42071d:	pop    es
  42071e:	jo     0x420788
  420720:	ds pop edi
  420722:	loopne 0x42078f
  420724:	adc    BYTE PTR [eax-0xf],bl
  420727:	data16 ds jne 0x420708
  42072b:	add    BYTE PTR gs:[eax],al
	...
  420756:	dec    edx
  420757:	or     esp,esp
  420759:	jno    0x4207be
  42075b:	mov    di,0x6d3e
  42075f:	iret   
  420760:	shr    DWORD PTR [eax+eiz*1+0x2e],1
  420764:	int    0x45
  420766:	or     dl,dl
  420768:	mov    ebx,0xcd19206d
  42076d:	push   eax
  42076e:	sbb    esp,DWORD PTR [esi]
  420770:	clc    
  420771:	outs   dx,DWORD PTR ds:[esi]
  420772:	ds mov esi,0xb61f73e3
  420778:	(bad)  [ecx+0x3e]
  42077b:	out    0xc2,al
  42077d:	push   ebx
  42077e:	out    dx,al
  42077f:	mov    edx,0x1e965da
  420784:	shl    BYTE PTR [edx-0x14],cl
  420787:	out    0xe7,eax
  420789:	jno    0x420785
  42078b:	(bad)  
  42078d:	jae    0x42079f
  42078f:	jmp    0x77e7:0xc83e6bdf
  420796:	retf   
  420797:	xchg   esp,eax
  420798:	ret    
  420799:	data16 fcmovu st,st(6)
  42079c:	add    BYTE PTR [esi-0x36],ah
  42079f:	xchg   ecx,eax
  4207a0:	repnz data16 mov dl,0x9f
  4207a4:	push   ds
  4207a5:	addr16 mov al,ds:0x4ab
  4207a9:	inc    esi
  4207aa:	lahf   
  4207ab:	mov    cl,0xf8
  4207ad:	push   eax
  4207ae:	stos   BYTE PTR es:[edi],al
  4207af:	dec    ebp
  4207b0:	fisub  WORD PTR [edx+0x5e]
  4207b3:	inc    edx
  4207b4:	repnz ins BYTE PTR es:[edi],dx
  4207b6:	mov    DWORD PTR [ecx-0x19],edx
  4207b9:	jno    0x4207bb
	...
  4207e3:	add    BYTE PTR [esi],bh
  4207e5:	fmul   DWORD PTR ds:[edi+0x72]
  4207e9:	fwait
  4207ea:	icebp  
  4207eb:	jae    0x420815
  4207ed:	pop    ebx
  4207ee:	or     esp,edx
  4207f0:	icebp  
  4207f1:	mov    dl,0x2c
  4207f3:	in     eax,0x59
  4207f5:	jg     0x420803
  4207f7:	shr    DWORD PTR [ebp-0x78],cl
  4207fa:	add    ebx,ebp
  4207fc:	push   0xffffffaf
  4207fe:	sub    bl,ah
  420800:	dec    edi
  420801:	jle    0x42080f
  420803:	jmp    0xf33e8781
  420808:	shr    DWORD PTR [ecx-0x79d21a02],0xc8
  42080f:	icebp  
  420810:	sbb    al,0xaf
  420812:	lods   eax,DWORD PTR ds:[esi]
  420813:	fcomp  QWORD PTR [esi]
  420815:	jle    0x42081e
  420817:	rol    DWORD PTR [eax],0x82
  42081a:	pop    es
  42081b:	ret    
  42081c:	sub    al,BYTE PTR [eax-0x7bf20749]
  420822:	int    0xe6
  420824:	in     eax,0xa5
  420826:	rcr    ch,0xe7
  420829:	xor    DWORD PTR [edi-0x4858fc31],0x3
  420830:	movd   DWORD PTR [ebp-0x66840d09],mm0
  420837:	call   0xe2c2a541
  42083c:	jmp    0xaa3a:0xe6e4b43a
  420843:	(bad)  
  420845:	mov    bh,BYTE PTR [edi+esi*8+0x0]
	...
  420871:	add    al,bl
  420873:	jl     0x4207fb
  420875:	iret   
  420876:	xchg   edx,eax
  420877:	test   BYTE PTR [ebp-0x36],dl
  42087a:	cwde   
  42087b:	mov    edi,DWORD PTR [ebx]
  42087d:	fild   QWORD PTR [edi-0x6d25cc78]
  420883:	jns    0x4208df
  420885:	add    al,0x6f
  420887:	test   BYTE PTR [ebx],bh
  420889:	out    0x11,eax
  42088b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088c:	cmp    ah,bh
  42088e:	(bad)  
  42088f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420890:	add    BYTE PTR ds:0x3d66933a,ch
  420896:	fnsave [esi+0x71]
  420899:	jmp    0x15b487ab
  42089e:	inc    edx
  42089f:	xchg   ebp,eax
  4208a0:	ins    DWORD PTR es:[edi],dx
  4208a1:	add    eax,0xe97278d6
  4208a6:	cmp    ecx,DWORD PTR [eax-0x77c5f096]
  4208ac:	psraw  mm0,QWORD PTR [di-0x34c5]
  4208b2:	cmp    eax,0x3daf2d39
  4208b7:	scas   eax,DWORD PTR es:[edi]
  4208b8:	push   edi
  4208b9:	enter  0x7993,0x63
  4208bd:	loope  0x4208fc
  4208bf:	mov    ds:0xa9780977,al
  4208c4:	push   eax
  4208c5:	jmp    0xd3af9457
  4208ca:	cwde   
  4208cb:	jp     0x420941
  4208cd:	pcmpgtw mm7,QWORD PTR [edi+0x67]
  4208d1:	jmp    0xbdad9bf9
	...
  4208fe:	add    BYTE PTR [eax],al
  420900:	cmp    eax,0x7bdd3594
  420905:	xchg   edi,eax
  420906:	das    
  420907:	(bad)  
  420908:	cs dec ebx
  42090a:	sub    ebp,DWORD PTR [ebx-0x43cd6ad4]
  420910:	adc    DWORD PTR [edi+0x4630c138],edx
  420916:	xor    dh,BYTE PTR [edi-0x43d0bf81]
  42091c:	or     edx,DWORD PTR [ebx+0x46]
  42091f:	test   al,0x0
  420921:	inc    edi
  420922:	das    
  420923:	sub    eax,0xe97b47fc
  420928:	jmp    0x4209a9
  42092a:	jbe    0x420974
  42092c:	clc    
  42092d:	test   al,0x50
  42092f:	jmp    DWORD PTR [ecx]
  420931:	jnp    0x420933
  420933:	add    BYTE PTR [ebx-0x30],bl
  420936:	dec    edx
  420937:	push   ebx
  420938:	js     0x42092f
  42093a:	jo     0x4209b3
  42093c:	jbe    0x420947
  42093e:	bound  ebx,QWORD PTR [ecx+ebx*2+0x2e]
  420942:	jae    0x4209a5
  420944:	and    DWORD PTR [ebx],esi
  420946:	dec    ebp
  420947:	add    cl,bh
  420949:	das    
  42094a:	bound  esp,QWORD PTR [ecx+0x34]
  42094d:	cli    
  42094e:	imul   esi,DWORD PTR [ebp-0x27],0x4
  420952:	std    
  420953:	push   edx
  420954:	inc    esi
  420955:	sti    
  420956:	jo     0x420958
  420958:	xlat   BYTE PTR ds:[ebx]
  420959:	pop    eax
  42095a:	add    BYTE PTR [eax],al
  42095c:	xlat   BYTE PTR ds:[ebx]
  42095d:	pop    eax
  42095e:	add    BYTE PTR [eax],al
  420960:	jmp    0x7145bd
	...
  42098d:	add    BYTE PTR [edi-0x18b0afc4],ah
  420993:	dec    ebx
  420994:	pop    ebx
  420995:	push   eax
  420996:	jbe    0x4209a3
  420998:	jo     0x420a11
  42099a:	fmul   DWORD PTR [edx]
  42099c:	popa   
  42099d:	xor    ah,BYTE PTR [edi-0x4cb2b0c4]
  4209a3:	sub    BYTE PTR [eax+edx*2+0x76],bl
  4209a7:	or     esi,DWORD PTR [eax+0x77]
  4209aa:	mov    eax,0x6732610a
  4209af:	cmp    al,0x45
  4209b1:	dec    ebp
  4209b2:	xchg   esi,eax
  4209b3:	sub    BYTE PTR [eax+edx*2-0x4a],bl
  4209b7:	or     esi,DWORD PTR [eax+0x77]
  4209ba:	fmul   DWORD PTR [ecx]
  4209bc:	popa   
  4209bd:	xor    ah,BYTE PTR [edi+0x3c]
  4209c0:	dec    eax
  4209c1:	push   esp
  4209c2:	mov    bl,0x28
  4209c4:	dec    edx
  4209c5:	popa   
  4209c6:	mov    esi,0xc6505c2c
  4209cb:	or     dh,BYTE PTR [eax+0x77]
  4209ce:	mov    BYTE PTR ds:0x58173261,al
  4209d4:	pop    esp
  4209d5:	dec    ebp
  4209d6:	ds fwait
  4209d8:	in     eax,0x71
  4209da:	test   eax,0x8a65d9b1
  4209df:	shl    DWORD PTR ss:[esi-0x68],1
  4209e3:	xchg   esi,eax
  4209e4:	fnstenv [ebp+ecx*4+0x62]
  4209e8:	mov    eax,0x24977066
  4209ed:	dec    ebx
  4209ee:	pop    edi
  4209ef:	imul   ebx,eax,0xffffffff
	...
  420a1a:	add    BYTE PTR [eax],al
  420a1c:	mov    WORD PTR [ebp-0x1e],ds
  420a1f:	jae    0x420a8a
  420a21:	arpl   si,si
  420a23:	bound  edi,QWORD PTR [edx+0x6f]
  420a26:	(bad)  [eax+0x4c]
  420a29:	gs cmc 
  420a2b:	ins    BYTE PTR es:[edi],dx
  420a2c:	pusha  
  420a2d:	push   es
  420a2e:	lds    edx,FWORD PTR [edi+edx*2+0x54]
  420a32:	loopne 0x420aa0
  420a34:	xor    DWORD PTR [ecx],edx
  420a36:	and    DWORD PTR [edi+eiz*1+0x2c],ecx
  420a3a:	loopne 0x420a5b
  420a3c:	sti    
  420a3d:	and    bl,ah
  420a3f:	imul   edi,DWORD PTR [esi],0xffffffc6
  420a42:	mov    bh,0x66
  420a44:	sbb    eax,0x2170da30
  420a49:	sbb    al,0xed
  420a4b:	pop    ebx
  420a4c:	icebp  
  420a4d:	sub    dl,bh
  420a4f:	arpl   WORD PTR [ecx],dx
  420a51:	int    0xf5
  420a53:	pop    ds
  420a54:	or     esp,DWORD PTR [ebx]
  420a56:	fsubr  QWORD PTR [ebx+0x3e]
  420a59:	rcr    ecx,1
  420a5b:	gs repnz in al,0xe3
  420a5f:	jno    0x420a3c
  420a61:	lds    esi,FWORD PTR [edi-0x2610229a]
  420a67:	jo     0x420a4a
  420a69:	fucomi st,st(4)
  420a6b:	pop    ebx
  420a6c:	icebp  
  420a6d:	jmp    0x1ff6:0x8cd163d6
  420a74:	mov    edx,ebx
  420a76:	fld    TBYTE PTR [ebx+0x3e]
  420a79:	pop    ebx
  420a7a:	cmp    bl,bl
  420a7c:	mov    ds:0xe5568f,eax
	...
  420aa9:	add    BYTE PTR [edi-0x5f29cc80],ch
  420aaf:	js     0x420ad9
  420ab1:	test   BYTE PTR [ebp+0x4fc6238e],0xa7
  420ab8:	sbb    ah,cl
  420aba:	lea    ecx,[edi-0x719d25c0]
  420ac0:	out    0xbf,eax
  420ac2:	nop
  420ac3:	(bad)
  420ac7:	(bad)  
  420ac8:	out    0xbf,eax
  420aca:	or     BYTE PTR [edi-0x729f3ff8],0x29
  420ad1:	in     eax,0x66
  420ad3:	pop    ebx
  420ad4:	xor    al,0xe5
  420ad6:	pusha  
  420ad7:	ja     0x420ae2
  420ad9:	fisttp DWORD PTR [ecx+0x39]
  420adc:	add    dl,bl
  420ade:	and    BYTE PTR [ebx+0x1a],bl
  420ae1:	fistp  DWORD PTR [ebx]
  420ae3:	(bad)  
  420ae4:	fsubrp st(4),st
  420ae6:	das    
  420ae7:	cmp    BYTE PTR [ebx-0x3981ed2d],0x23
  420aee:	out    dx,eax
  420aef:	sbb    edx,0xffffffef
  420af2:	sbb    al,0x78
  420af4:	mov    edx,0xca790123
  420af9:	add    ebp,esi
  420afb:	jnp    0x420ab8
  420afd:	fstp   TBYTE PTR [ecx-0x5a]
  420b00:	xchg   edi,eax
  420b01:	fcmovu st,st(6)
  420b03:	jns    0x420abf
  420b05:	in     al,dx
  420b06:	out    dx,al
  420b07:	mov    es,WORD PTR [eax+ebx*8-0x237a8bed]
	...
  420b36:	add    BYTE PTR [eax],al
  420b38:	pop    ecx
  420b39:	call   0xd888:0x8cdada99
  420b40:	dec    ecx
  420b41:	sahf   
  420b42:	mov    bh,ch
  420b44:	loopne 0x420af0
  420b46:	add    BYTE PTR [eax-0x77ff7dd7],cl
  420b4c:	sbb    BYTE PTR [ebx+0x6d],bh
  420b4f:	pop    esp
  420b50:	add    al,0x8e
  420b52:	jno    0x420b63
  420b54:	add    eax,0x1e96778
  420b59:	call   0x505f:0x74f74a6d
  420b60:	out    0x9,al
  420b62:	push   edx
  420b63:	dec    esi
  420b64:	sbb    al,0x8e
  420b66:	jne    0x420bb0
  420b68:	lock jl 0x420bc7
  420b6b:	and    BYTE PTR [ebx+edi*2],dl
  420b6e:	jb     0x420b7c
  420b70:	fiadd  WORD PTR [eax+0x7605084b]
  420b76:	add    BYTE PTR [ecx+esi*8],ch
  420b79:	test   al,0x67
  420b7b:	std    
  420b7c:	cld    
  420b7d:	jge    0x420be3
  420b7f:	sti    
  420b80:	call   0xf22b7d0f
  420b85:	jl     0x420be8
  420b87:	add    DWORD PTR [esi+esi*2-0x6f610194],edx
  420b8e:	add    BYTE PTR [ecx-0x3bae867a],bh
  420b94:	stos   DWORD PTR es:[edi],eax
  420b95:	(bad)  
  420b96:	arpl   bx,bx
  420b98:	cmp    eax,0xd96dab
	...
  420bc5:	add    BYTE PTR [ebp+0x76],ch
  420bc8:	jb     0x420b87
  420bca:	cmp    eax,0x7cb96dab
  420bcf:	jp     0x420c32
  420bd1:	(bad)  
  420bd2:	push   0x8de97477
  420bd7:	jbe    0x420c49
  420bd9:	mov    ecx,0x96718a5c
  420bde:	xchg   BYTE PTR [ebx+0x7472e964],cl
  420be4:	je     0x420b7f
  420be6:	push   0x7c
  420be8:	jb     0x420bea
  420bea:	leave  
  420beb:	sub    BYTE PTR [edi+0x0],ch
  420bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bef:	xor    BYTE PTR [ecx+0x70],dh
  420bf2:	xlat   BYTE PTR ds:[ebx]
  420bf3:	and    ebp,DWORD PTR [edi+0x74]
  420bf6:	daa    
  420bf7:	xor    BYTE PTR [edx+0x74],ch
  420bfa:	xchg   DWORD PTR [eax+eiz*2],ebx
  420bfd:	arpl   WORD PTR [eax-0x8],si
  420c00:	push   0x74
  420c02:	daa    
  420c03:	xor    BYTE PTR [edx+0x74],ch
  420c06:	ja     0x420c37
  420c08:	pop    esi
  420c09:	jae    0x420c4f
  420c0b:	or     ch,BYTE PTR [edx+esi*2+0x7b]
  420c0f:	pop    edi
  420c10:	pop    ebp
  420c11:	arpl   WORD PTR [edx+eiz*1+0x652b6e72],ax
  420c18:	pop    edi
  420c19:	data16 cmp BYTE PTR [edi+0x5d],bl
  420c1d:	arpl   WORD PTR [edx+eiz*1],si
  420c20:	jb     0x420c90
  420c22:	cmp    esp,DWORD PTR [ebp+0x5f]
  420c25:	rcr    WORD PTR [esp+ebx*2+0x42],1
	...
  420c52:	add    BYTE PTR [eax],al
  420c54:	or     ecx,DWORD PTR ss:[edx+0x61]
  420c58:	cs and edi,ebp
  420c5b:	pop    ebx
  420c5c:	pop    ebx
  420c5d:	daa    
  420c5e:	bound  esp,QWORD PTR [eax]
  420c60:	gs cld 
  420c62:	jo     0x420c85
  420c64:	xchg   edi,eax
  420c65:	das    
  420c66:	ins    BYTE PTR es:[edi],dx
  420c67:	mov    cx,WORD PTR [ebx]
  420c6a:	pop    esi
  420c6b:	jb     0x420bf7
  420c6d:	and    BYTE PTR [edi+0x49],cl
  420c70:	retf   
  420c71:	and    BYTE PTR [ecx+0x68],dl
  420c74:	jp     0x420cb2
  420c76:	inc    edx
  420c77:	popa   
  420c78:	retf   
  420c79:	cmp    eax,0xfa805300
  420c7e:	jo     0x420cf7
  420c80:	xchg   BYTE PTR [esi],cl
  420c82:	bound  ebx,QWORD PTR [ebp+eiz*4-0x3b]
  420c86:	push   eax
  420c87:	pop    esp
  420c88:	stos   DWORD PTR es:[edi],eax
  420c89:	and    al,0x62
  420c8b:	and    BYTE PTR [esi],bh
  420c8d:	mov    ah,0xe1
  420c8f:	jae    0x420cb0
  420c91:	mov    dh,0xcd
  420c93:	jo     0x420c78
  420c95:	xor    esp,0x1f
  420c98:	fcmovu st,st(6)
  420c9a:	lock ins BYTE PTR es:[edi],dx
  420c9c:	mov    dl,0xf2
  420c9e:	iret   
  420c9f:	ins    BYTE PTR es:[edi],dx
  420ca0:	lods   al,BYTE PTR ds:[esi]
  420ca1:	fstp   st(1)
  420ca3:	ins    DWORD PTR es:[edi],dx
  420ca4:	mov    eax,ds:0xac66c052
  420ca9:	lahf   
  420caa:	loope  0x420d1f
  420cac:	test   eax,0x81ffeba4
  420cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cb2:	aad    0x64
  420cb4:	mov    WORD PTR [ebx+0x43d7],ss
	...
  420ce2:	xchg   edi,eax
  420ce3:	inc    esp
  420ce4:	add    al,0x41
  420ce6:	imul   eax,DWORD PTR [edi-0x2a],0xdf3e3e73
  420ced:	gs pop edi
  420cef:	fdiv   DWORD PTR [bp+di+0x3e]
  420cf3:	(bad)  ds:[ecx+0x1e]
  420cf7:	adc    eax,0x453e6420
  420cfc:	mov    bh,0x53
  420cfe:	outs   dx,BYTE PTR ds:[esi]
  420cff:	adc    al,al
  420d01:	push   0x5f
  420d03:	imul   ebx,eax,0x1f
  420d06:	call   DWORD PTR [ebp-0x20]
  420d09:	jno    0x420d26
  420d0b:	add    eax,0xcf0cfff2
  420d10:	int3   
  420d11:	dec    edi
  420d12:	pop    esi
  420d13:	(bad)
  420d16:	adc    BYTE PTR [edi],dl
  420d18:	out    dx,eax
  420d19:	inc    DWORD PTR [ecx]
  420d1b:	jmp    0xe5a03df0
  420d20:	fbstp  TBYTE PTR [ecx+0x8]
  420d23:	pop    ds
  420d24:	out    dx,eax
  420d25:	dec    DWORD PTR [ecx]
  420d27:	rcl    eax,0x30
  420d2a:	push   ds
  420d2b:	out    dx,eax
  420d2c:	icebp  
  420d2d:	(bad)  
  420d2e:	in     al,dx
  420d2f:	pop    edx
  420d30:	(bad)  
  420d31:	mov    ch,0x0
  420d33:	jbe    0x420cb9
  420d35:	add    ebp,edi
  420d37:	xchg   ebp,eax
  420d38:	mov    ebx,0x9aae31d3
  420d3d:	loopne 0x420d0e
  420d3f:	cmp    dh,BYTE PTR [ebp-0x18822b1c]
  420d45:	mov    ch,0x0
	...
  420d6f:	add    BYTE PTR [ebx+0x7d2397af],cl
  420d75:	js     0x420cff
  420d77:	fcom   QWORD PTR [ebp-0x621fd7c5]
  420d7d:	mov    DWORD PTR [ebx+esi*8-0x72],eax
  420d81:	pop    ebx
  420d82:	and    eax,0x7ab6db6
  420d87:	ror    DWORD PTR [esi+0x70243980],1
  420d8d:	jl     0x420ddb
  420d8f:	loope  0x420d8a
  420d91:	cwde   
  420d92:	and    eax,0x1a3b81d0
  420d97:	loope  0x420e08
  420d99:	lea    ecx,[edx+esi*8]
  420d9c:	loope  0x420d31
  420d9e:	sub    al,0xc5
  420da0:	mov    DWORD PTR [ebx],edi
  420da2:	cmp    ah,cl
  420da4:	dec    edi
  420da5:	lea    eax,[edx+esi*8]
  420da8:	leave  
  420da9:	xchg   ebx,eax
  420daa:	xor    al,0xc5
  420dac:	jno    0x420de9
  420dae:	adc    al,0xf3
  420db0:	sbb    al,0x89
  420db2:	(bad)  
  420db3:	mov    ch,0x10
  420db5:	js     0x420dbb
  420db7:	add    al,0xfd
  420db9:	ja     0x420d83
  420dbb:	fcom   QWORD PTR ds:0xedcfaf5b
  420dc1:	stos   BYTE PTR es:[edi],al
  420dc2:	pop    es
  420dc3:	ror    DWORD PTR [esi],1
  420dc5:	sbb    cl,0x3
  420dc8:	imul   BYTE PTR [esi-0x55de2c65]
  420dce:	(bad)  
  420dcf:	icebp  
  420dd0:	repz jg 0x420dd3
  420dd3:	mov    ebx,0x0
	...
  420dfc:	add    BYTE PTR [eax],al
  420dfe:	sbb    eax,0x3d9d52aa
  420e03:	stos   DWORD PTR es:[edi],eax
  420e04:	dec    ebp
  420e05:	mov    ecx,0x9a533b2c
  420e0a:	pop    esi
  420e0b:	mov    WORD PTR [eax],es
  420e0d:	mov    al,ds:0xc9504596
  420e12:	outs   dx,BYTE PTR ds:[esi]
  420e13:	mov    esp,DWORD PTR [ebx+0x7b]
  420e16:	cmp    eax,0xd955493
  420e1b:	xchg   ecx,eax
  420e1c:	pop    edi
  420e1d:	or     BYTE PTR [ecx],0x66
  420e20:	push   ebx
  420e21:	jp     0x420e41
  420e23:	mov    WORD PTR [eax],fs
  420e25:	aaa    
  420e26:	sbb    eax,0xd5e96371
  420e2b:	test   eax,0xa4c93954
  420e30:	addr16 cmp eax,0x3b63ac62
  420e36:	adc    BYTE PTR [ecx+0x72],bh
  420e39:	jmp    0x19969f4c
  420e3e:	sbb    ch,BYTE PTR [edx+0x5ec4471]
  420e44:	std    
  420e45:	cmp    DWORD PTR [ebx-0x1236ce6b],ebp
  420e4b:	jbe    0x420ebf
  420e4d:	sbb    eax,0x354bac3a
  420e52:	repnz gs push eax
  420e55:	push   ss
  420e56:	int3   
  420e57:	mov    DWORD PTR [eax],eax
  420e59:	xor    cl,dh
  420e5b:	inc    esp
  420e5c:	push   eax
  420e5d:	leave  
  420e5e:	lea    esi,[esi+0x72]
  420e61:	cmc    
	...
  420e8a:	add    BYTE PTR [eax],al
  420e8c:	cmp    eax,0x8db6505b
  420e91:	dec    edx
  420e92:	and    BYTE PTR [ecx-0x218e7564],bh
  420e98:	push   0xffffff8b
  420e9a:	sbb    eax,DWORD PTR fs:[edx-0x62]
  420e9e:	dec    ebx
  420e9f:	add    dh,dl
  420ea1:	sub    DWORD PTR ds:0x700a8650,ebx
  420ea7:	ja     0x420f21
  420ea9:	or     esp,DWORD PTR [ecx+0x32]
  420eac:	push   edi
  420ead:	iret   
  420eae:	dec    edx
  420eaf:	push   esp
  420eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb1:	cmp    DWORD PTR [eax+0x61],edx
  420eb4:	mov    ah,0xa
  420eb6:	je     0x420f27
  420eb8:	mov    ch,0x25
  420eba:	das    
  420ebb:	add    BYTE PTR [edi-0x75afaeeb],bl
  420ec1:	clc    
  420ec2:	gs ins BYTE PTR es:[edi],dx
  420ec4:	pop    es
  420ec5:	sub    DWORD PTR [esi+0x73],ebx
  420ec8:	mov    ah,0xf7
  420eca:	imul   esi,DWORD PTR [edx-0x3d],0x4a
  420ece:	add    BYTE PTR [ebx+0x6a],dl
  420ed1:	sub    ecx,DWORD PTR [ebp+0x20]
  420ed4:	push   edi
  420ed5:	clc    
  420ed6:	outs   dx,DWORD PTR ds:[esi]
  420ed7:	jae    0x420f49
  420ed9:	outs   dx,DWORD PTR cs:[esi]
  420edb:	fs and eax,0x4850005f
  420ee1:	das    
  420ee2:	xor    BYTE PTR [eax],ah
  420ee4:	push   edi
  420ee5:	clc    
  420ee6:	outs   dx,DWORD PTR ds:[esi]
  420ee7:	jae    0x420f19
  420ee9:	outs   dx,DWORD PTR cs:[esi]
  420eeb:	xlat   BYTE PTR fs:[ebx]
  420eed:	ror    DWORD PTR [ecx+0x41],0x0
	...
  420f19:	add    BYTE PTR [edi],ah
  420f1b:	aas    
  420f1c:	push   eax
  420f1d:	popa   
  420f1e:	xor    al,0xa
  420f20:	je     0x420f91
  420f22:	xor    eax,0x294dfcfb
  420f27:	sub    ecx,DWORD PTR [ebp+0x20]
  420f2a:	daa    
  420f2b:	clc    
  420f2c:	outs   dx,DWORD PTR ds:[esi]
  420f2d:	jae    0x420edf
  420f2f:	das    
  420f30:	outs   dx,DWORD PTR ds:[esi]
  420f31:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  420f33:	rcl    BYTE PTR [eax+0x54],0x47
  420f37:	aas    
  420f38:	push   eax
  420f39:	popa   
  420f3a:	test   BYTE PTR [ebx],cl
  420f3c:	je     0x420fad
  420f3e:	jne    0x420f64
  420f40:	std    
  420f41:	push   edx
  420f42:	ds mov edi,0xc25e4fcc
  420f48:	loope  0x420fba
  420f4a:	or     eax,0xe271d3c5
  420f4f:	icebp  
  420f50:	add    BYTE PTR [ecx-0x1f],dl
  420f53:	adc    ebp,ebp
  420f55:	je     0x420f36
  420f57:	mov    edi,0xeaf35bdd
  420f5c:	fbstp  TBYTE PTR [ecx-0x17]
  420f5f:	loopne 0x420f34
  420f61:	gs retf 0xb9cd
  420f65:	ins    DWORD PTR es:[edi],dx
  420f66:	rcr    dh,cl
  420f68:	out    dx,al
  420f69:	ins    DWORD PTR es:[edi],dx
  420f6a:	fild   DWORD PTR [ebp-0x2e62c0df]
  420f70:	shl    DWORD PTR [edx-0x60],cl
  420f73:	xchg   BYTE PTR [ecx],ah
  420f75:	dec    ebx
  420f76:	lahf   
  420f77:	test   dl,ah
  420f79:	fs fwait
  420f7b:	mov    al,ds:0x3ec0
	...
  420fa8:	popf   
  420fa9:	xchg   ecx,eax
  420faa:	icebp  
  420fab:	jb     0x420f4d
  420fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fae:	aad    0xff
  420fb0:	jbe    0x420f50
  420fb2:	out    0x6d,eax
  420fb4:	mov    ch,BYTE PTR [ebx+0x416366d8]
  420fba:	add    al,0x51
  420fbc:	popa   
  420fbd:	xchg   esp,eax
  420fbe:	fdiv   DWORD PTR [edi+ebx*2+0x40]
  420fc2:	out    0x5b,eax
  420fc4:	jae    0x421031
  420fc6:	in     eax,0x71
  420fc8:	imul   esp,DWORD PTR [ecx-0xf],0xd14e4a65
  420fcf:	gs pusha 
  420fd1:	pop    ebx
  420fd2:	in     eax,0x62
  420fd4:	bound  ecx,QWORD PTR [ebp-0x29]
  420fd7:	jae    0x421003
  420fd9:	push   ebp
  420fda:	icebp  
  420fdb:	push   0x46cf3d12
  420fe0:	pop    esi
  420fe1:	xor    esp,ebp
  420fe3:	pusha  
  420fe4:	adc    DWORD PTR [ebx-0x24],ebx
  420fe7:	icebp  
  420fe8:	or     eax,0x23e4ac3b
  420fed:	jp     0x420fbd
  420fef:	call   0xe6eab703
  420ff4:	push   ds
  420ff5:	je     0x420fb3
  420ff7:	icebp  
  420ff8:	in     eax,dx
  420ff9:	xchg   edi,esp
  420ffb:	mov    dh,0xe2
  420ffd:	jl     0x420fba
  420fff:	fimul  DWORD PTR [eax]
  421001:	mov    esp,eax
  421003:	mov    edi,0xd58a71f4
  421008:	jmp    0x0:0xe98e87
	...
  421033:	add    BYTE PTR [eax],al
  421035:	add    ch,cl
  421037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421038:	mov    esi,0x7e7edbec
  42103d:	fcmove st,st(6)
  42103f:	cmp    dh,BYTE PTR [ebp+0x749e95b7]
  421045:	aad    0xaf
  421047:	js     0x420fce
  421049:	xlat   BYTE PTR ds:[ebx]
  42104a:	xchg   ebx,eax
  42104b:	js     0x4210c6
  42104d:	(bad)  
  42104e:	cwde   
  42104f:	jb     0x4210a6
  421051:	shl    BYTE PTR [edx+0x74],0x4d
  421055:	call   0x249c9afc
  42105a:	jne    0x4210d4
  42105c:	pop    edx
  42105d:	xlat   BYTE PTR ds:[ebx]
  42105e:	pusha  
  42105f:	jp     0x4210b1
  421061:	repnz bound edi,QWORD PTR [ebx]
  421064:	sbb    bl,cl
  421066:	pop    edi
  421067:	mov    ?,WORD PTR [eax]
  421069:	xlat   BYTE PTR ds:[ebx]
  42106a:	ins    DWORD PTR es:[edi],dx
  42106b:	js     0x4210a9
  42106d:	shl    BYTE PTR [ecx-0x73],0x16
  421071:	jmp    0x9075:0xd7046f60
  421078:	add    bh,ah
  42107a:	dec    edi
  42107b:	jb     0x421097
  42107d:	repz pop ebx
  42107f:	xchg   edi,eax
  421081:	shr    BYTE PTR [edi+eax*4],cl
  421084:	or     esi,ebx
  421086:	and    dh,BYTE PTR [esi+0x0]
  421089:	leave  
  42108a:	jp     0x4210fc
  42108c:	je     0x421092
  42108e:	mov    BYTE PTR [eax+0x63],dh
  421091:	fstp   QWORD PTR [ebp-0x54]
  421094:	arpl   bp,dx
  421096:	imul   edi,DWORD PTR [ecx+0x6e],0xce
	...
  4210c1:	add    BYTE PTR [eax],al
  4210c3:	add    BYTE PTR [eax+0x2],dh
  4210c6:	push   edx
  4210c7:	mov    esi,0xc8758e97
  4210cc:	xchg   ebx,eax
  4210cd:	jge    0x42112b
  4210cf:	lods   al,BYTE PTR ds:[esi]
  4210d0:	bound  edi,QWORD PTR [ebx+0x72]
  4210d3:	(bad)  
  4210d4:	nop
  4210d5:	outs   dx,DWORD PTR ds:[esi]
  4210d6:	data16 mov ch,0xa1
  4210d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210da:	addr16 xchg edi,eax
  4210dc:	popa   
  4210dd:	outs   dx,DWORD PTR ds:[esi]
  4210de:	jne    0x42107a
  4210e0:	sbb    eax,0x80b55491
  4210e5:	lea    esi,[edx-0x65]
  4210e8:	push   esi
  4210e9:	jo     0x42115f
  4210eb:	lahf   
  4210ec:	mov    WORD PTR es:[ecx-0x70],?
  4210f0:	sub    al,0x70
  4210f2:	pop    esp
  4210f3:	sahf   
  4210f4:	sbb    dh,BYTE PTR [eax+0x64]
  4210f7:	jle    0x4210fd
  4210f9:	mov    esp,DWORD PTR [eax]
  4210fb:	xor    al,0x21
  4210fd:	mov    esi,DWORD PTR [ecx+0x48]
  421100:	daa    
  421101:	jns    0x421171
  421103:	dec    esi
  421104:	bound  ebp,QWORD PTR [ebx+esi*2+0x7188eb4b]
  42110b:	cmp    eax,0x195c74e1
  421110:	or     BYTE PTR [edi+0x66],ch
  421113:	inc    eax
  421114:	out    dx,al
  421115:	jl     0x421188
  421117:	or     eax,0x15748d0f
  42111c:	iret   
  42111d:	outs   dx,BYTE PTR ds:[esi]
  42111e:	imul   ebp,ecx,0x1d666e8a
  421124:	out    0xa0,eax
  421126:	jb     0x42112c
	...
  421150:	add    BYTE PTR [eax],al
  421152:	(bad)  
  421153:	xchg   esp,eax
  421154:	add    BYTE PTR [si+0x29],al
  421158:	ins    BYTE PTR es:[edi],dx
  421159:	jae    0x42119b
  42115b:	cmc    
  42115c:	jo     0x4211ba
  42115e:	pop    esi
  42115f:	or     eax,0xba56571
  421164:	bound  esi,QWORD PTR [edi+eax*2+0x1e]
  421168:	pusha  
  421169:	arpl   WORD PTR [eax+0x37746b28],ax
  42116f:	adc    bl,BYTE PTR [esi+0x6e]
  421172:	jbe    0x421166
  421174:	popa   
  421175:	jb     0x4211de
  421177:	sub    dh,BYTE PTR [edx+0x74]
  42117a:	or     DWORD PTR [edx],0x6c
  42117d:	imul   edx,DWORD PTR [edi-0x3f],0x3d
  421181:	arpl   WORD PTR [edx+ecx*1+0x72],si
  421185:	outs   dx,BYTE PTR ds:[esi]
  421186:	mov    ebx,0xbb68fd26
  42118b:	clc    
  42118c:	push   0x74
  42118e:	mov    esi,0xb66365f3
  421193:	sub    DWORD PTR [esi+0x6f],esp
  421196:	rcr    DWORD PTR [ebp+eiz*2+0x64],1
  42119a:	mov    edx,0xab69710a
  42119f:	and    eax,0x5ca5676a
  4211a4:	outs   dx,BYTE PTR gs:[esi]
  4211a6:	mov    ah,BYTE PTR [ebx]
  4211a8:	pusha  
  4211a9:	outs   dx,DWORD PTR ds:[esi]
  4211aa:	xor    al,0x1c
  4211ad:	jae    0x421229
  4211af:	sub    DWORD PTR [ebx+0x65],esi
  4211b2:	gs aaa 
  4211b4:	jo     0x421217
	...
  4211de:	add    BYTE PTR [eax],al
  4211e0:	xor    al,0x26
  4211e2:	je     0x421253
  4211e4:	xor    eax,0x80006ff3
  4211e9:	sub    BYTE PTR [ecx+0x6c],dh
  4211ec:	and    BYTE PTR [edx],cl
  4211ee:	push   0x5ff64620
  4211f3:	outs   dx,DWORD PTR ds:[esi]
  4211f4:	sub    cl,BYTE PTR ds:0x573e2071
  4211fa:	loope  0x421269
  4211fc:	pop    edi
  4211fd:	pop    ecx
  4211fe:	in     eax,0x71
  421200:	pop    esi
  421201:	add    ah,dl
  421203:	jo     0x421232
  421205:	or     eax,esi
  421207:	jno    0x42122b
  421209:	add    eax,0x571a6701
  42120e:	bnd jae 0x421238
  421211:	push   ds
  421212:	jmp    0x4e22:0xdbf20d62
  421219:	push   0xffffffbc
  42121b:	sub    bl,BYTE PTR [ebx+0x62]
  42121e:	sbb    BYTE PTR [eax+0x2b],bl
  421221:	dec    edi
  421222:	adc    al,0x34
  421224:	push   ss
  421225:	dec    edi
  421226:	and    eax,0x25ea2c30
  42122b:	xor    BYTE PTR [edx+ebp*8],ch
  42122e:	sub    eax,0xb9240e23
  421233:	and    cl,BYTE PTR [esi]
  421235:	and    al,0xb9
  421237:	and    cl,BYTE PTR [esi]
  421239:	and    al,0xb9
  42123b:	and    cl,BYTE PTR [esi]
  42123d:	and    al,0xb9
  42123f:	and    ch,BYTE PTR [esi-0x3c]
  421242:	mov    eax,0x22
	...
  42126b:	add    BYTE PTR [eax],al
  42126d:	add    BYTE PTR [esi-0x3c],ch
  421270:	mov    eax,0xe8de3e7a
  421275:	jb     0x421207
  421277:	(bad)  
  421278:	in     eax,0x71
  42127a:	pushf  
  42127b:	stos   DWORD PTR es:[edi],eax
  42127c:	shl    BYTE PTR [ebx+0x3e],cl
  42127f:	ds mov eax,0xe8989367
  421285:	bound  ecx,QWORD PTR [esp+edx*4-0xd9d8e15]
  42128c:	sbb    al,BYTE PTR [esi+edi*2-0xe]
  421290:	xor    cl,BYTE PTR [eax+0x7e]
  421293:	repnz outs dx,BYTE PTR ds:[esi]
  421295:	dec    edx
  421296:	jle    0x42128a
  421298:	mov    WORD PTR [esi+0x7e],cs
  42129b:	pop    ebx
  42129c:	out    0x7,eax
  42129e:	ins    BYTE PTR es:[edi],dx
  42129f:	fwait
  4212a0:	out    0x2d,eax
  4212a2:	jb     0x42123f
  4212a4:	out    0xf,eax
  4212a6:	imul   ebx,DWORD PTR [ebx-0x64ebfb19],0x9b170ae7
  4212b0:	out    0x89,eax
  4212b2:	or     bl,BYTE PTR [ebx-0x64fb3719]
  4212b8:	out    0x8f,eax
  4212ba:	sti    
  4212bb:	call   0x7ee7:0x9b1c10e7
  4212c2:	and    bl,BYTE PTR [ebx-0x64e54a19]
  4212c8:	out    0x64,eax
  4212ca:	jecxz  0x421266
  4212cc:	out    0xff,eax
  4212ce:	fstp   DWORD PTR [edx+0x75e7]
	...
  4212fc:	(bad)  
  4212fd:	call   0xe7:0x9ad8f9e7
  421304:	out    0x9a,eax
  421306:	out    0xcd,eax
  421308:	out    0x9a,al
  42130a:	out    0x43,eax
  42130c:	fcomp  DWORD PTR [edx-0x652e8419]
  421312:	out    0x42,eax
  421314:	scas   eax,DWORD PTR es:[edi]
  421315:	fwait
  421316:	out    0x9e,eax
  421318:	stos   BYTE PTR es:[edi],al
  421319:	fwait
  42131a:	out    0x8d,eax
  42131c:	lods   eax,DWORD PTR ds:[esi]
  42131d:	fwait
  42131e:	out    0x90,eax
  421320:	test   al,0x9b
  421322:	out    0x9c,eax
  421324:	xchg   esi,eax
  421325:	fwait
  421326:	out    0xb9,eax
  421328:	xchg   ebp,eax
  421329:	fwait
  42132a:	out    0xa2,eax
  42132c:	mov    bl,BYTE PTR [ebx-0x647af519]
  421332:	out    0xbd,eax
  421334:	jp     0x4212d1
  421336:	out    0xa6,eax
  421338:	jae    0x4212d5
  42133a:	out    0xe0,eax
  42133c:	mov    bh,0x9b
  42133e:	add    cl,ch
  421340:	mov    dl,0xd2
  421342:	aas    
  421343:	jmp    0xe981e3e2
  421348:	repz jecxz 0x42138a
  42134b:	jmp    0xe981f286
  421350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421351:	fistp  QWORD PTR [edi]
  421353:	jmp    0xe981f4d7
  421358:	add    ah,dl
  42135a:	aas    
  42135b:	jmp    0xe981f44d
	...
  421388:	add    BYTE PTR [eax],al
  42138a:	popa   
  42138b:	fnstsw WORD PTR [edi]
  42138d:	jmp    0xe981f30d
  421392:	icebp  
  421393:	fistp  QWORD PTR [edi]
  421395:	jmp    0xe981f26d
  42139a:	or     bh,BYTE PTR [ebx-0x4cd316c1]
  4213a0:	aas    
  4213a1:	jmp    0xe981c0c4
  4213a6:	pop    ebx
  4213a7:	mov    al,0x3f
  4213a9:	jmp    0xe981d3b0
  4213ae:	daa    
  4213af:	sbb    eax,DWORD PTR [eax-0x17]
  4213b2:	xchg   esp,eax
  4213b3:	mov    esi,0x1ae3e93f
  4213b8:	inc    eax
  4213b9:	jmp    0xe981d106
  4213be:	add    eax,0x12e93fbd
  4213c3:	mov    ebp,0xbe67e93f
  4213c8:	aas    
  4213c9:	jmp    0xe9822c96
  4213ce:	add    bl,BYTE PTR [ebx]
  4213d0:	inc    eax
  4213d1:	jmp    0xe9822cec
  4213d6:	xchg   ecx,eax
  4213d7:	sbb    al,BYTE PTR [eax-0x17]
  4213da:	dec    ebx
  4213db:	sbb    al,BYTE PTR [eax-0x17]
  4213de:	or     ebx,DWORD PTR [eax]
  4213e0:	inc    eax
  4213e1:	add    bh,ah
  4213e3:	in     al,0xc2
  4213e5:	inc    eax
  4213e6:	xlat   BYTE PTR ds:[ebx]
  4213e7:	or     al,ch
  4213e9:	inc    eax
  4213ea:	xlat   BYTE PTR ds:[ebx]
  4213eb:	aad    0xc7
  4213ed:	inc    eax
	...
  421416:	add    BYTE PTR [eax],al
  421418:	out    0x7e,eax
  42141a:	lds    eax,FWORD PTR [eax-0x19]
  42141d:	add    bh,al
  42141f:	inc    eax
  421420:	xlat   BYTE PTR ds:[ebx]
  421421:	xchg   edi,eax
  421422:	leave  
  421423:	inc    eax
  421424:	xlat   BYTE PTR ds:[ebx]
  421425:	add    cl,bl
  421427:	inc    eax
  421428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421429:	aam    0xcc
  42142b:	inc    eax
  42142c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42142d:	jo     0x4213fc
  42142f:	inc    eax
  421430:	xchg   edi,eax
  421431:	cwde   
  421432:	rol    DWORD PTR [eax-0x69],1
  421435:	(bad)  
  421436:	rol    DWORD PTR [eax-0x59],cl
  421439:	push   eax
  42143a:	fiadd  DWORD PTR [eax-0x59]
  42143d:	retf   
  42143e:	(bad)  
  42143f:	inc    eax
  421440:	xchg   edi,eax
  421441:	xchg   edi,eax
  421442:	fadd   QWORD PTR [eax-0x69]
  421445:	dec    esi
  421446:	fld    DWORD PTR [eax+0x67]
  421449:	int3   
  42144a:	fadd   DWORD PTR [eax+0x67]
  42144d:	popf   
  42144e:	fld    DWORD PTR [eax+0x57]
  421451:	and    ebx,ebx
  421453:	inc    eax
  421454:	push   edi
  421455:	mov    eax,ds:0x256740de
  42145a:	fild   WORD PTR [eax+0x67]
  42145d:	jnp    0x421441
  42145f:	inc    eax
  421460:	push   edi
  421461:	or     ah,al
  421463:	inc    eax
  421464:	push   edi
  421465:	mov    al,ds:0x332740df
  42146a:	in     al,0x40
  42146c:	daa    
  42146d:	xchg   edi,eax
  42146e:	out    0x40,al
  421470:	pop    ss
  421471:	popf   
  421472:	out    0x40,al
  421474:	pop    ss
  421475:	imul   esp,ebx,0x40
  421478:	daa    
  421479:	out    dx,eax
  42147a:	in     eax,0x40
	...
  4214a4:	add    BYTE PTR [eax],al
  4214a6:	daa    
  4214a7:	inc    edx
  4214a8:	in     al,dx
  4214a9:	inc    eax
  4214aa:	pop    ss
  4214ab:	fucomip st,st(5)
  4214ad:	inc    eax
  4214ae:	ds repnz out 0xf2,eax
  4214b2:	jle    0x4214a6
  4214b4:	(bad)  
  4214b5:	cmc    
  4214b6:	jle    0x4214aa
  4214b8:	add    BYTE PTR [eax],al
  4214ba:	repnz add BYTE PTR ds:[eax],al
  4214be:	repnz add BYTE PTR ds:[eax],al
  4214c2:	repnz add BYTE PTR ds:[eax],al
  4214c6:	repnz add BYTE PTR ds:[eax],al
  4214ca:	ds repnz mov edi,0xee4f576b
  4214d1:	jae    0x421531
  4214d3:	cmp    ah,cl
  4214d5:	jo     0x4214fd
  4214d7:	repnz scas eax,DWORD PTR es:[edi]
  4214d9:	push   ebx
  4214da:	jmp    DWORD PTR [ebp-0x4b]
  4214dd:	push   eax
  4214de:	push   ebx
  4214df:	cmp    ecx,ebp
  4214e1:	dec    edi
  4214e2:	or     DWORD PTR [eax-0x48],esp
  4214e5:	sub    al,BYTE PTR [ecx]
  4214e7:	leave  
  4214e8:	add    BYTE PTR [ebx],ah
  4214ea:	and    cl,BYTE PTR [ebp+eiz*8+0x77]
  4214ee:	sbb    esi,edx
  4214f0:	and    eax,0xca2c30
  4214f5:	je     0x4214e3
  4214f7:	mov    esi,0x2a0cffe5
  4214fc:	out    0x6b,al
  4214fe:	shr    BYTE PTR [esi-0x39229d28],cl
  421504:	aam    0x62
  421506:	push   ecx
  421508:	loope  0x42156b
	...
  421532:	add    BYTE PTR [eax],al
  421534:	fst    st(5)
  421536:	sub    ah,BYTE PTR [edx-0x21]
  421539:	fld    QWORD PTR [eax]
  42153b:	pop    es
  42153c:	inc    edi
  42153d:	pop    ds
  42153e:	pop    es
  42153f:	or     eax,DWORD PTR [ebx+ecx*1+0x21]
  421543:	cmp    dl,BYTE PTR [edi+0x331fe7e8]
  421549:	clc    
  42154a:	and    BYTE PTR [ebx+eiz*4+0x7e],ah
  42154e:	and    DWORD PTR [edi],eax
  421550:	pop    ebx
  421551:	pop    ebx
  421552:	sbb    BYTE PTR [esi+ebx*2],ah
  421555:	dec    esi
  421556:	icebp  
  421557:	or     al,0x99
  421559:	jne    0x421562
  42155b:	or     eax,0xdc443b41
  421560:	pop    eax
  421561:	mov    BYTE PTR [ebx],bh
  421563:	and    al,0x41
  421565:	cmp    eax,DWORD PTR [edi]
  421567:	and    al,0x1d
  421569:	dec    edx
  42156a:	pop    es
  42156b:	and    al,0x41
  42156d:	cmp    eax,DWORD PTR [edi]
  42156f:	jecxz  0x4215d3
  421571:	xchg   DWORD PTR [esi],edx
  421573:	and    al,0x41
  421575:	dec    esi
  421576:	(bad)  
  421577:	in     al,dx
  421578:	push   edi
  421579:	jo     0x42155f
  42157b:	or     eax,0xe804775e
  421580:	push   ecx
  421581:	push   edx
  421582:	(bad)  
  421583:	and    ebx,DWORD PTR [ebp+0x4b]
  421586:	mov    DWORD PTR [ebx],0x23c73b5e
  42158c:	pop    esp
  42158d:	ss cli 
  42158f:	and    eax,0x4073b5e
  421594:	(bad)  
  421596:	(bad)  
  421597:	out    0x0,eax
	...
  4215c1:	add    BYTE PTR ds:0xe22a1948,dl
  4215c7:	outs   dx,BYTE PTR ds:[esi]
  4215c8:	mov    ebx,0xe75b3e03
  4215cd:	add    edi,DWORD PTR [esi]
  4215cf:	pop    ebx
  4215d0:	out    0x3,eax
  4215d2:	ds pop ebx
  4215d4:	out    0x3,eax
  4215d6:	ds pop ebx
  4215d8:	out    0x3,eax
  4215da:	ds pop ebx
  4215dc:	out    0x3,eax
  4215de:	ds pop ebx
  4215e0:	out    0x3,eax
  4215e2:	ds pop ebx
  4215e4:	out    0x3,eax
  4215e6:	ds pop ebx
  4215e8:	out    0x3,eax
  4215ea:	ds pop ebx
  4215ec:	out    0x3,eax
  4215ee:	ds pop ebx
  4215f0:	out    0x3,eax
  4215f2:	ds pop ebx
  4215f4:	add    cl,ch
  4215f6:	cmp    eax,0x3de9005b
  4215fb:	pop    ebx
  4215fc:	add    cl,ch
  4215fe:	cmp    eax,0x3de9005b
  421603:	pop    ebx
  421604:	add    cl,ch
  421606:	cmp    eax,0x3de9005b
  42160b:	pop    ebx
  42160c:	add    cl,ch
  42160e:	cmp    eax,0x3de9005b
  421613:	pop    ebx
  421614:	add    cl,ch
  421616:	cmp    eax,0x3de9005b
  42161b:	pop    ebx
  42161c:	add    cl,ch
  42161e:	cmp    eax,0x3de9005b
  421623:	pop    ebx
  421624:	add    cl,ch
	...
  42164e:	add    BYTE PTR [eax],al
  421650:	cmp    eax,0x3de9005b
  421655:	pop    ebx
  421656:	add    cl,ch
  421658:	cmp    eax,0x3de9005b
  42165d:	pop    ebx
  42165e:	add    cl,ch
  421660:	cmp    eax,0x3de9005b
  421665:	pop    ebx
  421666:	add    cl,ch
  421668:	cmp    eax,0x3de9005b
  42166d:	pop    ebx
  42166e:	add    cl,ch
  421670:	cmp    eax,0x3de9005b
  421675:	pop    ebx
  421676:	add    cl,ch
  421678:	cmp    eax,0x3de9005b
  42167d:	pop    ebx
  42167e:	add    cl,ch
  421680:	cmp    eax,0x3de9005b
  421685:	pop    ebx
  421686:	add    cl,ch
  421688:	cmp    eax,0x3de9005b
  42168d:	pop    ebx
  42168e:	add    cl,ch
  421690:	cmp    eax,0x3de9005b
  421695:	pop    ebx
  421696:	add    BYTE PTR [eax],al
  421698:	pop    ss
  421699:	pop    esi
  42169a:	add    BYTE PTR [eax],al
  42169c:	pop    ss
  42169d:	pop    esi
  42169e:	add    BYTE PTR [eax],al
  4216a0:	daa    
  4216a1:	pop    esi
  4216a2:	add    BYTE PTR [eax],al
  4216a4:	daa    
  4216a5:	pop    esi
  4216a6:	add    BYTE PTR [eax],al
  4216a8:	pop    ss
  4216a9:	pop    esi
  4216aa:	add    BYTE PTR [eax],al
  4216ac:	pop    ss
  4216ad:	pop    esi
  4216ae:	add    BYTE PTR [eax],al
  4216b0:	out    0x5d,eax
	...
  4216de:	out    0x5d,eax
  4216e0:	add    BYTE PTR [eax],al
  4216e2:	xlat   BYTE PTR ds:[ebx]
  4216e3:	pop    ebp
  4216e4:	add    BYTE PTR [eax],al
  4216e6:	xlat   BYTE PTR ds:[ebx]
  4216e7:	pop    ebp
  4216e8:	add    BYTE PTR [eax],al
  4216ea:	out    0x5d,eax
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	out    0x5d,eax
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	xlat   BYTE PTR ds:[ebx]
  4216f3:	pop    ebp
  4216f4:	add    BYTE PTR [eax],al
  4216f6:	xlat   BYTE PTR ds:[ebx]
  4216f7:	pop    ebp
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216fb:	pop    ebp
  4216fc:	add    BYTE PTR [eax],al
  4216fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ff:	pop    ebp
  421700:	add    BYTE PTR [eax],al
  421702:	xchg   edi,eax
  421703:	pop    ebp
  421704:	add    BYTE PTR [eax],al
  421706:	xchg   edi,eax
  421707:	pop    ebp
  421708:	add    BYTE PTR [eax],al
  42170a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170b:	pop    ebp
  42170c:	add    BYTE PTR [eax],al
  42170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170f:	pop    ebp
  421710:	add    BYTE PTR [eax],al
  421712:	xchg   edi,eax
  421713:	pop    ebp
  421714:	add    BYTE PTR [eax],al
  421716:	xchg   edi,eax
  421717:	pop    ebp
  421718:	add    BYTE PTR [eax],al
  42171a:	addr16 pop ebp
  42171c:	add    BYTE PTR [eax],al
  42171e:	addr16 pop ebp
  421720:	add    BYTE PTR [eax],al
  421722:	push   edi
  421723:	pop    ebp
  421724:	add    BYTE PTR [eax],al
  421726:	push   edi
  421727:	pop    ebp
  421728:	add    BYTE PTR [eax],al
  42172a:	addr16 pop ebp
  42172c:	add    BYTE PTR [eax],al
  42172e:	addr16 pop ebp
  421730:	add    BYTE PTR [eax],al
  421732:	push   edi
  421733:	pop    ebp
  421734:	add    BYTE PTR [eax],al
  421736:	push   edi
  421737:	pop    ebp
  421738:	add    BYTE PTR [eax],al
  42173a:	add    al,BYTE PTR ds:[ecx]
  42173d:	add    BYTE PTR [esi],bh
  42173f:	add    al,BYTE PTR [ecx]
	...
  421769:	add    BYTE PTR [eax],al
  42176b:	add    BYTE PTR [esi],bh
  42176d:	add    al,BYTE PTR [ecx]
  42176f:	add    BYTE PTR [esi],bh
  421771:	add    al,BYTE PTR [ecx]
  421773:	add    BYTE PTR [esi],bh
  421775:	add    al,BYTE PTR [ecx]
  421777:	add    BYTE PTR [esi],bh
  421779:	add    al,BYTE PTR [ecx]
  42177b:	add    BYTE PTR [esi],bh
  42177d:	add    al,BYTE PTR [ecx]
  42177f:	add    BYTE PTR [esi],bh
  421781:	add    al,BYTE PTR [ecx]
  421783:	add    BYTE PTR [esi],bh
  421785:	add    al,BYTE PTR [ecx]
  421787:	add    BYTE PTR [esi],bh
  421789:	add    al,BYTE PTR [ecx]
  42178b:	add    BYTE PTR [esi],bh
  42178d:	add    al,BYTE PTR [ecx]
  42178f:	add    BYTE PTR [esi],bh
  421791:	add    al,BYTE PTR [ecx]
  421793:	add    BYTE PTR [esi],bh
  421795:	add    al,BYTE PTR [ecx]
  421797:	add    BYTE PTR [esi],bh
  421799:	add    al,BYTE PTR [ecx]
  42179b:	add    BYTE PTR [esi],bh
  42179d:	add    al,BYTE PTR [ecx]
  42179f:	add    BYTE PTR [esi],bh
  4217a1:	add    al,BYTE PTR [ecx]
  4217a3:	add    BYTE PTR [esi],bh
  4217a5:	add    al,BYTE PTR [ecx]
  4217a7:	add    BYTE PTR [esi],bh
  4217a9:	add    al,BYTE PTR [ecx]
  4217ab:	add    BYTE PTR [esi],bh
  4217ad:	add    al,BYTE PTR [ecx]
  4217af:	add    BYTE PTR [esi],bh
  4217b1:	add    al,BYTE PTR [ecx]
  4217b3:	add    BYTE PTR [esi],bh
  4217b5:	add    al,BYTE PTR [ecx]
  4217b7:	add    BYTE PTR [esi],bh
  4217b9:	add    al,BYTE PTR [ecx]
  4217bb:	add    BYTE PTR [esi],bh
  4217bd:	add    al,BYTE PTR [ecx]
  4217bf:	add    BYTE PTR [esi],bh
  4217c1:	add    al,BYTE PTR [ecx]
  4217c3:	add    BYTE PTR [esi],bh
  4217c5:	add    al,BYTE PTR [ecx]
  4217c7:	add    BYTE PTR [esi],bh
  4217c9:	add    al,BYTE PTR [ecx]
  4217cb:	add    BYTE PTR [esi],bh
  4217cd:	add    esp,DWORD PTR [ebx+eax*2]
	...
  4217f8:	add    BYTE PTR [eax],al
  4217fa:	fldcw  WORD PTR [edx-0x54]
  4217fd:	retf   
  4217fe:	imul   esi,DWORD PTR [eax],0xb0b6ba35
  421804:	lods   al,BYTE PTR ds:[esi]
  421805:	xor    DWORD PTR [esi],ebp
  421807:	pop    ebx
  421808:	jo     0x4217b6
  42180a:	jne    0x421814
  42180c:	call   0x67c29535
  421811:	add    edi,DWORD PTR [esi+0x5b]
  421814:	mov    DWORD PTR [ebx],0x3ef5b4e
  42181a:	cmp    bl,BYTE PTR [ebx-0x17]
  42181d:	add    ebx,DWORD PTR [ecx]
  42181f:	clc    
  421820:	out    0x3,al
  421822:	mov    esi,0x7e03e75a
  421827:	pop    ebx
  421828:	out    0x3,eax
  42182a:	pop    esi
  42182b:	pop    ebx
  42182c:	out    0x3,eax
  42182e:	dec    esi
  42182f:	pop    ebx
  421830:	out    0x3,eax
  421832:	inc    esi
  421833:	pop    ebx
  421834:	out    0x3,eax
  421836:	inc    edx
  421837:	pop    ebx
  421838:	out    0x3,eax
  42183a:	cmp    al,0x5b
  42183c:	out    0x3,eax
  42183e:	fincstp 
  421840:	out    0x83,al
  421842:	ds pop ebx
  421844:	out    0xc3,eax
  421846:	leave  
  421847:	mul    esi
  421849:	and    edi,DWORD PTR [esi]
  42184b:	pop    ebx
  42184c:	out    0xf3,eax
  42184e:	mov    ecx,0x3e0be6f7
  421853:	pop    ebx
  421854:	out    0xff,eax
  421856:	test   eax,0x3e01e6f7
  42185b:	pop    ebx
  42185c:	out    0x4,eax
	...
  421886:	add    BYTE PTR [eax],al
  421888:	ds pop ebx
  42188a:	addr16 add al,0x3e
  42188d:	pop    ebx
  42188e:	daa    
  42188f:	add    al,0x3e
  421891:	pop    ebx
  421892:	pop    es
  421893:	add    al,0x3e
  421895:	pop    ebx
  421896:	test   DWORD PTR [ebx],0x3df5b3e
  42189c:	ds pop ebx
  42189e:	jecxz  0x4218a3
  4218a0:	ds pop ebx
  4218a2:	jmp    0xe89d56aa
  4218a7:	add    edi,DWORD PTR [esi]
  4218a9:	pop    ebx
  4218aa:	add    cl,dh
  4218ac:	sub    eax,0x4dd12043
  4218b1:	pop    edi
  4218b2:	add    al,ah
  4218b4:	sub    al,BYTE PTR [eax+0x1f]
  4218b7:	add    BYTE PTR [ebx],dh
  4218b9:	pop    esi
  4218ba:	call   edx
  4218bc:	dec    edi
  4218bd:	inc    ecx
  4218be:	and    dh,bl
  4218c0:	das    
  4218c1:	gs add al,dl
  4218c4:	dec    esp
  4218c5:	inc    esp
  4218c6:	and    DWORD PTR [edi-0x28d9bab5],edi
  4218cc:	and    ebp,DWORD PTR [ecx+0x6]
  4218cf:	lods   al,BYTE PTR ds:[esi]
  4218d0:	cs inc edx
  4218d2:	and    eax,DWORD PTR [edi+ecx*1]
  4218d5:	bound  eax,QWORD PTR [ebx]
  4218d7:	sbb    eax,0xf524474e
  4218dc:	loope  0x421940
  4218de:	add    al,0xf2
  4218e0:	in     al,dx
  4218e1:	arpl   WORD PTR [ecx],ax
  4218e3:	call   0xf1487827
  4218e8:	inc    edi
  4218e9:	addr16 push cs
  4218eb:	out    0x0,al
	...
  421915:	add    dl,cl
  421917:	dec    ebx
  421918:	adc    edx,esi
  42191a:	retf   0x1c53
  42191d:	hlt    
  42191e:	int    0x64
  421920:	adc    eax,0x195cb9e9
  421925:	out    0x3e,eax
  421927:	dec    edi
  421928:	pop    es
  421929:	imul   DWORD PTR [edi-0x5f1ffe9d]
  42192f:	addr16 push es
  421931:	jecxz  0x4218bf
  421933:	(bad)  
  421934:	inc    eax
  421936:	sub    al,0x55
  421938:	and    al,0xbf
  42193a:	cmp    edx,DWORD PTR [edx+0x25]
  42193d:	sbb    edx,DWORD PTR [esi+0x3b]
  421940:	sub    eax,0x353d5212
  421945:	or     BYTE PTR [esi+0x42],cl
  421948:	daa    
  421949:	sbb    BYTE PTR ds:0x57001d57,bl
  42194f:	idiv   ch
  421951:	add    BYTE PTR [edi+0x5a],ah
  421954:	add    BYTE PTR [eax],al
  421956:	addr16 pop edx
  421958:	std    
  421959:	jmp    DWORD PTR [ebx-0xa]
  42195c:	std    
  42195d:	add    BYTE PTR [ebx+0x5a],dl
  421960:	std    
  421961:	add    BYTE PTR [ebx],ah
  421963:	idiv   ch
  421965:	jmp    DWORD PTR [ebx]
  421967:	pop    edx
  421968:	add    BYTE PTR [eax],al
  42196a:	pop    ss
  42196b:	pop    edx
  42196c:	std    
  42196d:	call   DWORD PTR [edi]
  42196f:	idiv   ah
  421971:	jmp    DWORD PTR [edi]
  421973:	idiv   ch
  421975:	add    BYTE PTR [ebx],ah
  421977:	idiv   ch
	...
  4219a1:	add    BYTE PTR [eax],al
  4219a3:	add    BYTE PTR [edi],dl
  4219a5:	idiv   ah
  4219a7:	call   DWORD PTR [ebx]
  4219a9:	idiv   ah
  4219ab:	add    bl,ah
  4219ad:	pop    ecx
  4219ae:	std    
  4219af:	add    bh,ah
  4219b1:	pop    ecx
  4219b2:	add    BYTE PTR [ecx],al
  4219b4:	jecxz  0x421a0f
  4219b6:	add    BYTE PTR [eax],al
  4219b8:	shl    ebp,cl
  4219ba:	cld    
  4219bb:	jmp    edi
  4219bd:	cmc    
  4219be:	cld    
  4219bf:	add    bh,ah
  4219c1:	cmc    
  4219c2:	cld    
  4219c3:	add    bh,dl
  4219c5:	cmc    
  4219c6:	std    
  4219c7:	call   edi
  4219c9:	cmc    
  4219ca:	std    
  4219cb:	jmp    DWORD PTR [edi-0x58ff02a7]
  4219d1:	pop    ecx
  4219d2:	std    
  4219d3:	add    BYTE PTR [ebx-0x6cff030b],ah
  4219d9:	pop    ecx
  4219da:	std    
  4219db:	jmp    DWORD PTR [ebx-0x5cfeffa7]
  4219e1:	pop    ecx
  4219e2:	add    BYTE PTR [ecx],al
  4219e4:	mov    ds:0x97fffd59,eax
  4219e9:	pop    ecx
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	arpl   bp,si
  4219ee:	cld    
  4219ef:	(bad)  
  4219f0:	ds or  ch,bh
  4219f3:	(bad)  
  4219f4:	imul   eax,DWORD PTR [ebx],0x43f0001
  4219fa:	add    edi,edi
  4219fc:	pop    ecx
  4219fd:	(bad)  
  4219fe:	cld    
  4219ff:	(bad)  
  421a00:	or     BYTE PTR ds:[ecx],al
  421a03:	add    BYTE PTR [esi],bh
  421a05:	add    al,0x1
  421a07:	inc    DWORD PTR [eax]
	...
  421a31:	add    BYTE PTR [esi],bh
  421a33:	add    al,0xfd
  421a35:	(bad)  
  421a36:	add    al,BYTE PTR ds:[ecx]
  421a39:	add    BYTE PTR [edi],bh
  421a3b:	add    al,BYTE PTR [ecx]
  421a3d:	add    BYTE PTR [edi],bh
  421a3f:	add    bh,ch
  421a41:	jmp    DWORD PTR [ecx]
  421a43:	pop    es
  421a44:	add    edi,edi
  421a46:	add    al,BYTE PTR ds:[ecx]
  421a49:	call   DWORD PTR [ecx]
  421a4b:	add    edi,ebp
  421a4d:	dec    BYTE PTR [ecx]
  421a4f:	inc    DWORD PTR [eax]
  421a51:	add    BYTE PTR [edi],bh
  421a53:	add    bh,ch
  421a55:	(bad)  
  421a56:	stc    
  421a57:	inc    BYTE PTR [eax]
  421a59:	add    BYTE PTR [esi],bh
  421a5b:	push   es
  421a5c:	std    
  421a5d:	(bad)  
  421a5e:	ds (bad) 
  421a60:	cld    
  421a61:	(bad)  
  421a62:	loope  0x421a6a
  421a64:	std    
  421a65:	(bad)  
  421a66:	inc    BYTE PTR ds:[eax]
  421a69:	call   ecx
  421a6b:	add    al,BYTE PTR [ecx]
  421a6d:	(bad)  
  421a6e:	ds (bad) 
  421a70:	cld    
  421a71:	(bad)  
  421a72:	ds push es
  421a74:	add    DWORD PTR [eax],eax
  421a76:	aas    
  421a77:	(bad)  
  421a78:	cld    
  421a79:	push   DWORD PTR [ecx-0x560102fa]
  421a7f:	add    bh,ch
  421a81:	(bad)  
  421a82:	ds push es
  421a84:	std    
  421a85:	call   FWORD PTR [ecx+0x3efffd02]
  421a8b:	add    bh,ch
  421a8d:	(bad)  
  421a8e:	add    al,BYTE PTR ds:[ecx]
  421a91:	add    BYTE PTR [esi],bh
  421a93:	pop    ebx
  421a94:	jmp    0x421a99
	...
  421abe:	add    BYTE PTR [eax],al
  421ac0:	jns    0x421ab6
  421ac2:	out    0xff,al
  421ac4:	jo     0x421aba
  421ac6:	out    0x3,al
  421ac8:	ds pop ebx
  421aca:	jecxz  0x421acf
  421acc:	popa   
  421acd:	pop    ebx
  421ace:	pop    es
  421acf:	test   BYTE PTR [esi],ch
  421ad1:	(bad)  
  421ad3:	cmp    DWORD PTR [esi],0xffffffdb
  421ad6:	out    0x83,al
  421ad8:	ds pop ebx
  421ada:	pop    es
  421adb:	test   BYTE PTR [esi],ch
  421add:	pop    ebx
  421ade:	out    0x3,eax
  421ae0:	dec    esi
  421ae1:	pop    ebx
  421ae2:	mov    DWORD PTR [ebx],0x3c75b3e
  421ae8:	dec    esi
  421ae9:	fcmovnb st,st(6)
  421aeb:	cmp    DWORD PTR [esi],0xffffffdb
  421aee:	mov    BYTE PTR [ebx],0x3e
  421af1:	fcmovnb st,st(6)
  421af3:	sub    DWORD PTR [esi],0xffffffdb
  421af6:	out    0x83,al
  421af8:	cs (bad) 
  421afb:	add    edi,DWORD PTR [esi]
  421afd:	(bad)  
  421aff:	cmp    DWORD PTR [esi],0xffffffdb
  421b02:	out    0x3,al
  421b04:	dec    esi
  421b05:	pop    ebx
  421b06:	pop    es
  421b07:	add    al,0x3e
  421b09:	pop    ebx
  421b0a:	pop    es
  421b0b:	add    al,0x4e
  421b0d:	(bad)  
  421b0f:	sub    DWORD PTR [esi],0x5b
  421b12:	pop    es
  421b13:	add    al,0x2e
  421b15:	pop    ebx
  421b16:	pop    es
  421b17:	test   BYTE PTR [esi],bh
  421b19:	(bad)  
  421b1b:	add    edi,DWORD PTR [esi]
  421b1d:	pop    ebx
  421b1e:	out    0x3,eax
  421b20:	ds (bad) 
  421b23:	add    DWORD PTR [eax],0x0
	...
  421b4e:	ds pop ebx
  421b50:	mov    DWORD PTR [ebx+0x3e75b4e],0x3c6db4e
  421b5a:	cs pop ebx
  421b5c:	mov    DWORD PTR [ebx],0xe8ffdb3e
  421b62:	cmp    eax,0xbde9005b
  421b67:	dec    edx
  421b68:	add    BYTE PTR [ecx],cl
  421b6a:	ret    0x5a
  421b6d:	jmp    0xe9c2662f
  421b72:	cmp    eax,0xba09804b
  421b77:	pop    edx
  421b78:	add    cl,ch
  421b7a:	cmp    eax,0xba09005b
  421b7f:	dec    edx
  421b80:	add    BYTE PTR [ecx],cl
  421b82:	inc    edx
  421b83:	dec    ebx
  421b84:	sub    cl,0x3d
  421b87:	dec    ebx
  421b88:	add    cl,cl
  421b8a:	mov    ebp,0x3de9805b
  421b8f:	dec    ebx
  421b90:	sub    cl,0xbd
  421b93:	dec    ebx
  421b94:	sub    cl,0xbd
  421b97:	pop    ebx
  421b98:	add    cl,ch
  421b9a:	cmp    eax,0xbde9804b
  421b9f:	pop    ebx
  421ba0:	or     cl,0x3d
  421ba3:	pop    ebx
  421ba4:	add    cl,cl
  421ba6:	mov    ebp,0xc209804b
  421bab:	dec    ebx
  421bac:	add    BYTE PTR [ecx],cl
  421bae:	cmp    bl,BYTE PTR [ebx+0x0]
  421bb1:	jmp    0x421bb6
	...
  421bda:	add    BYTE PTR [eax],al
  421bdc:	mov    ebp,0x3de9005b
  421be1:	pop    ebx
  421be2:	or     BYTE PTR [ecx],0xc2
  421be5:	pop    ebx
  421be6:	add    cl,ch
  421be8:	mov    ebp,0x3de9804b
  421bed:	dec    ebx
  421bee:	add    BYTE PTR [ecx],cl
  421bf0:	cmp    bl,BYTE PTR [ebx-0x80]
  421bf3:	leave  
  421bf4:	cmp    eax,0xbdc9004b
  421bf9:	pop    ebx
  421bfa:	or     cl,0x3d
  421bfd:	pop    ebx
  421bfe:	or     cl,0x3d
  421c01:	dec    ebx
  421c02:	add    BYTE PTR [eax],al
  421c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c05:	fimul  WORD PTR [edi]
  421c07:	add    BYTE PTR [edi-0x68ffffa2],ah
  421c0d:	fdivp  st(7),st
  421c0f:	jg     0x421c88
  421c11:	fdivp  st(7),st
  421c13:	jmp    DWORD PTR [edi+0x5e]
  421c16:	add    BYTE PTR [eax-0x7fefa8b9],al
  421c1c:	aaa    
  421c1d:	xlat   BYTE PTR ds:[ebx]
  421c1e:	jo     0x51fa7b
  421c24:	dec    edi
  421c25:	pop    eax
  421c26:	add    BYTE PTR [eax],al
  421c28:	addr16 pop eax
  421c2a:	add    cl,BYTE PTR [eax]
  421c2c:	push   edi
  421c2d:	pop    esi
  421c2e:	add    BYTE PTR [eax],al
  421c30:	pop    edi
  421c31:	pop    esi
  421c32:	add    cl,BYTE PTR [eax]
  421c34:	daa    
  421c35:	pop    eax
  421c36:	add    BYTE PTR [eax],cl
  421c38:	daa    
  421c39:	pop    esi
  421c3a:	add    BYTE PTR [eax],al
  421c3c:	pop    ds
  421c3d:	pop    eax
  421c3e:	add    al,BYTE PTR [eax]
	...
  421c68:	add    BYTE PTR [eax],al
  421c6a:	pop    ss
  421c6b:	pop    eax
  421c6c:	add    BYTE PTR [eax],cl
  421c6e:	divps  xmm0,XMMWORD PTR [edx]
  421c71:	add    BYTE PTR [edi],cl
  421c73:	pop    esi
  421c74:	add    BYTE PTR [eax],cl
  421c76:	pop    ds
  421c77:	pop    esi
  421c78:	add    BYTE PTR [eax],cl
  421c7a:	pop    ss
  421c7b:	pop    esi
  421c7c:	add    al,BYTE PTR [eax]
  421c7e:	out    dx,eax
  421c7f:	push   edi
  421c80:	add    cl,BYTE PTR [eax]
  421c82:	out    dx,eax
  421c83:	pop    ebp
  421c84:	add    al,BYTE PTR [eax]
  421c86:	xlat   BYTE PTR ds:[ebx]
  421c87:	pop    ebp
  421c88:	add    cl,BYTE PTR [eax]
  421c8a:	fist   WORD PTR [edi+0x0]
  421c8d:	add    bh,ah
  421c8f:	pop    ebp
  421c90:	add    BYTE PTR [eax],cl
  421c92:	iret   
  421c93:	pop    ebp
  421c94:	add    BYTE PTR [eax],al
  421c96:	xlat   BYTE PTR ds:[ebx]
  421c97:	push   edi
  421c98:	add    cl,BYTE PTR [eax]
  421c9a:	xlat   BYTE PTR ds:[ebx]
  421c9b:	push   edi
  421c9c:	add    BYTE PTR [eax],al
  421c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c9f:	push   edi
  421ca0:	add    al,BYTE PTR [eax]
  421ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca3:	pop    ebp
  421ca4:	add    cl,BYTE PTR [eax]
  421ca6:	ds cld 
  421ca8:	add    BYTE PTR [edx],al
  421caa:	ss cld 
  421cac:	add    al,BYTE PTR [edx]
  421cae:	ds in  al,dx
  421cb0:	add    al,BYTE PTR [eax]
  421cb2:	inc    esi
  421cb3:	add    al,0x3
  421cb5:	add    bh,BYTE PTR [esi]
  421cb7:	add    al,0x1
  421cb9:	add    bh,BYTE PTR [esi]
  421cbb:	cld    
  421cbc:	add    al,BYTE PTR [eax]
  421cbe:	inc    esi
  421cbf:	in     al,dx
  421cc0:	add    BYTE PTR [eax],al
  421cc2:	ds in  al,dx
  421cc4:	add    al,BYTE PTR [edx]
  421cc6:	ss add al,0x3
  421cc9:	add    BYTE PTR [esi],bh
  421ccb:	add    al,0x1
	...
  421cf5:	add    BYTE PTR [eax],al
  421cf7:	add    BYTE PTR [esi+0x4],al
  421cfa:	add    eax,DWORD PTR [edx]
  421cfc:	inc    esi
  421cfd:	add    al,0x1
  421cff:	add    BYTE PTR [esi],dh
  421d01:	cld    
  421d02:	add    BYTE PTR [edx],al
  421d04:	ds cld 
  421d06:	add    al,BYTE PTR [eax]
  421d08:	add    al,BYTE PTR ds:[ecx]
  421d0b:	add    bh,BYTE PTR [esi]
  421d0d:	add    al,BYTE PTR [ebx]
  421d0f:	add    dh,BYTE PTR [esi]
  421d11:	add    al,BYTE PTR [ebx]
  421d13:	add    BYTE PTR [esi],dh
  421d15:	add    al,BYTE PTR [ecx]
  421d17:	add    BYTE PTR [esi],bh
  421d19:	add    al,BYTE PTR [ebx]
  421d1b:	add    BYTE PTR [esi],bh
  421d1d:	jmp    0x202:0xfa3e0200
  421d24:	add    al,BYTE PTR ss:[ebx]
  421d27:	add    BYTE PTR [esi-0x16],al
  421d2a:	add    BYTE PTR [eax],al
  421d2c:	inc    esi
  421d2d:	add    al,BYTE PTR [ebx]
  421d2f:	add    BYTE PTR [esi],bh
  421d31:	add    al,BYTE PTR [ecx]
  421d33:	add    BYTE PTR [esi],bh
  421d35:	cli    
  421d36:	add    BYTE PTR [edx],al
  421d38:	inc    esi
  421d39:	jmp    0x201:0x2460002
  421d40:	add    al,BYTE PTR ds:[ecx]
  421d43:	add    BYTE PTR [esi],dh
  421d45:	cli    
  421d46:	add    al,BYTE PTR [edx]
  421d48:	inc    esi
  421d49:	pop    ebx
  421d4a:	out    dx,eax
  421d4b:	add    edi,DWORD PTR [esi]
  421d4d:	pop    ebx
  421d4e:	out    dx,eax
  421d4f:	add    eax,0x5e75b3c
  421d54:	cmp    al,0x5b
  421d56:	fild   WORD PTR [ebx]
  421d58:	ds arpl di,sp
  421d5b:	add    eax,DWORD PTR [eax]
	...
  421d85:	add    BYTE PTR [ebx+eiz*2],bh
  421d88:	out    dx,eax
  421d89:	add    eax,0x5df633e
  421d8e:	ds pop ebx
  421d90:	out    0x3,eax
  421d92:	cmp    al,0x63
  421d94:	out    dx,eax
  421d95:	add    eax,0x3ef5b3c
  421d9a:	ds pop ebx
  421d9c:	fild   WORD PTR [ebx]
  421d9e:	cmp    al,0x63
  421da0:	out    0x5,eax
  421da2:	cmp    al,0x5b
  421da4:	call   0x689ddbcc
  421da9:	and    edi,DWORD PTR [esi]
  421dab:	pop    ebx
  421dac:	push   0x675b3e23
  421db1:	add    edi,DWORD PTR [esi]
  421db3:	pop    ebx
  421db4:	and    edi,DWORD PTR [bp+0x685a]
  421db9:	add    edi,DWORD PTR [esi-0x41fc17a6]
  421dbf:	pop    edx
  421dc0:	call   0xe79d5be8
  421dc5:	add    edi,DWORD PTR [esi]
  421dc7:	pop    ebx
  421dc8:	out    0x23,eax
  421dca:	mov    esi,0xbe23e75a
  421dcf:	pop    edx
  421dd0:	push   0x685abe23
  421dd5:	add    al,0x3e
  421dd7:	pop    ebx
  421dd8:	out    0x3,eax
  421dda:	ds pop ebx
  421ddc:	addr16 add al,0xbe
  421ddf:	pop    edx
  421de0:	call   0xe89cdbe8
  421de5:	add    edi,DWORD PTR [esi]
  421de7:	pop    ebx
  421de8:	out    0x23,eax
	...
  421e12:	add    BYTE PTR [eax],al
  421e14:	ds pop ebx
  421e16:	add    cl,ch
  421e18:	cmp    eax,0x5de7ffdb
  421e1d:	(bad)  
  421e1f:	push   0xe9005b3a
  421e24:	cmp    eax,0x5de7ffdb
  421e29:	pop    ebx
  421e2a:	add    BYTE PTR [ecx+0x62],ch
  421e2d:	pop    ebx
  421e2e:	add    BYTE PTR [eax+0x3a],ch
  421e31:	(bad)  
  421e33:	out    0x3d,eax
  421e35:	pop    ebx
  421e36:	add    BYTE PTR [ecx+0x5a],ch
  421e39:	pop    ebx
  421e3a:	add    BYTE PTR [ecx+0x42],ch
  421e3d:	(bad)  
  421e3f:	call   0x69427961
  421e44:	and    bl,bl
  421e46:	jmp    DWORD PTR [edi+0x1a]
  421e49:	(bad)  
  421e4b:	addr16 inc edx
  421e4d:	pop    ebx
  421e4e:	add    BYTE PTR [ecx+0x3a],ch
  421e51:	(bad)  
  421e53:	out    0x3d,eax
  421e55:	(bad)  
  421e57:	call   0x6841f979
  421e5c:	(bad)  
  421e5d:	(bad)  
  421e5f:	cmp    bl,BYTE PTR [bp+di+0x0]
  421e63:	jmp    0xe94279a5
  421e68:	cmp    eax,0x5de9005b
  421e6d:	(bad)  
  421e6f:	push   0x69005b5a
  421e74:	inc    edx
  421e75:	(bad)  
  421e77:	add    BYTE PTR [bx+si],al
	...
  421ea2:	cmp    bl,bl
  421ea4:	jmp    edi
  421ea6:	cmp    eax,0x1de8005b
  421eab:	(bad)  
  421ead:	addr16 sbb eax,0x1d68005b
  421eb3:	pop    ebx
  421eb4:	add    BYTE PTR [ecx+0x3d],ch
  421eb7:	pop    ebx
  421eb8:	add    BYTE PTR [eax],al
  421eba:	data16 cmp al,BYTE PTR [eax+0x5a5600]
  421ec1:	add    dh,dl
  421ec3:	pop    edx
  421ec4:	add    BYTE PTR [eax],al
  421ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ec7:	cmp    al,BYTE PTR [eax]
  421ec9:	add    BYTE PTR [esi-0x69ff7fa6],ah
  421ecf:	cmp    al,BYTE PTR [eax]
  421ed1:	add    BYTE PTR [edi],dl
  421ed3:	cmp    al,BYTE PTR [eax-0x7fa5da00]
  421ed9:	add    BYTE PTR [esi+0x1700003a],ah
  421edf:	cmp    al,BYTE PTR [eax]
  421ee1:	add    BYTE PTR [edi+0x6600805a],dl
  421ee7:	cmp    al,BYTE PTR [eax+0x59e700]
  421eed:	add    BYTE PTR [edi+0x5a],dl
  421ef0:	add    BYTE PTR [eax],0x57
  421ef3:	cmp    al,BYTE PTR [eax]
  421ef5:	add    bh,ah
  421ef7:	cmp    DWORD PTR [eax+0x576700],eax
  421efd:	add    BYTE PTR [edi+0x57],dl
  421f00:	or     BYTE PTR [edx],al
  421f02:	push   edi
  421f03:	pop    edx
  421f04:	or     BYTE PTR [edx],al
	...
  421f2e:	add    BYTE PTR [eax],al
  421f30:	daa    
  421f31:	push   edi
  421f32:	add    BYTE PTR [edx+0x27],al
  421f35:	pop    edx
  421f36:	or     BYTE PTR [eax],al
  421f38:	pop    ss
  421f39:	push   edi
  421f3a:	add    BYTE PTR [eax],al
  421f3c:	pop    ss
  421f3d:	pop    edx
  421f3e:	add    BYTE PTR [eax+0x27],al
  421f41:	pop    edx
  421f42:	or     BYTE PTR [edx],al
  421f44:	daa    
  421f45:	push   edi
  421f46:	or     BYTE PTR [eax+0x17],al
  421f49:	pop    edx
  421f4a:	or     BYTE PTR [eax],al
  421f4c:	pop    ss
  421f4d:	push   edi
  421f4e:	add    BYTE PTR [edx],al
  421f50:	out    0x56,eax
  421f52:	or     BYTE PTR [eax-0x19],al
  421f55:	pop    eax
  421f56:	add    BYTE PTR [edx-0x29],al
  421f59:	pop    ecx
  421f5a:	or     BYTE PTR [edx+0x3e],al
  421f5d:	add    al,0x2
  421f5f:	or     BYTE PTR [esi],bh
  421f61:	add    al,0x1
  421f63:	add    BYTE PTR [esi+0x4],bh
  421f66:	add    DWORD PTR [eax],eax
  421f68:	cmp    al,0x4
  421f6a:	add    DWORD PTR [eax],ecx
  421f6c:	jle    0x421f72
  421f6e:	add    DWORD PTR [eax],ecx
  421f70:	inc    BYTE PTR [ebx]
  421f72:	add    DWORD PTR [eax],eax
  421f74:	ds add al,0x2
  421f77:	add    dh,bh
  421f79:	add    eax,DWORD PTR [edx]
  421f7b:	or     ah,bh
  421f7d:	add    eax,DWORD PTR [edx]
  421f7f:	or     ah,bh
  421f81:	add    eax,DWORD PTR [edx]
  421f83:	add    BYTE PTR [esp+eax*1],bh
  421f86:	add    DWORD PTR [eax],ecx
  421f88:	cld    
  421f89:	add    eax,DWORD PTR [edx]
  421f8b:	add    dh,bh
  421f8d:	add    eax,DWORD PTR [ecx]
  421f8f:	add    BYTE PTR [esi],bh
  421f91:	add    al,0x1
	...
  421fbb:	add    BYTE PTR [eax],al
  421fbd:	add    ah,bh
  421fbf:	add    eax,DWORD PTR [edx]
  421fc1:	or     BYTE PTR [esp+eax*1],bh
  421fc4:	add    DWORD PTR [eax],eax
  421fc6:	cmp    al,0x4
  421fc8:	add    DWORD PTR [eax],eax
  421fca:	cld    
  421fcb:	add    eax,DWORD PTR [edx]
  421fcd:	or     BYTE PTR [esi],bh
  421fcf:	add    al,0x1
  421fd1:	or     BYTE PTR [esi],bh
  421fd3:	add    al,0x2
  421fd5:	add    ah,bh
  421fd7:	add    eax,DWORD PTR [edx]
  421fd9:	add    BYTE PTR [esi],bh
  421fdb:	add    al,BYTE PTR [ecx]
  421fdd:	add    BYTE PTR [edx+eax*1],bh
  421fe0:	add    DWORD PTR [eax],eax
  421fe2:	jle    0x421fe6
  421fe4:	add    DWORD PTR [eax],ecx
  421fe6:	cmp    al,0x2
  421fe8:	add    al,BYTE PTR [eax]
  421fea:	jl     0x421fee
  421fec:	add    cl,BYTE PTR [eax]
  421fee:	jle    0x421ff2
  421ff0:	add    al,BYTE PTR [eax]
  421ff2:	cmp    al,0x2
  421ff4:	add    DWORD PTR [eax],eax
  421ff6:	jle    0x421ffa
  421ff8:	add    DWORD PTR [eax],ecx
  421ffa:	jl     0x421ffe
  421ffc:	add    cl,BYTE PTR [eax]
  421ffe:	cmp    al,0x5b
  422000:	out    0x2,eax
  422002:	ss fwait
  422004:	out    0x2,eax
  422006:	ds pop ebx
  422008:	out    0x3,eax
  42200a:	ds pop ecx
  42200c:	out    0x3,eax
  42200e:	inc    esi
  42200f:	cdq    
  422010:	out    0x2,eax
  422012:	ss cdq 
  422014:	out    0x2,eax
  422016:	ss pop ebx
  422018:	out    0x3,eax
  42201a:	ds cdq 
  42201c:	out    0x2,eax
  42201e:	inc    esi
  42201f:	cdq    
  422020:	out    0x3,eax
	...
  42204a:	add    BYTE PTR [eax],al
  42204c:	ss pop ecx
  42204e:	out    0x3,eax
  422050:	ds pop ebx
  422052:	out    0x3,eax
  422054:	inc    esi
  422055:	fwait
  422056:	out    0x3,eax
  422058:	ds cdq 
  42205a:	out    0x2,eax
  42205c:	ss pop ebx
  42205e:	out    0x2,eax
  422060:	ds pop ecx
  422062:	out    0x2,eax
  422064:	ds fwait
  422066:	out    0x3,eax
  422068:	inc    esi
  422069:	pop    ebx
  42206a:	out    0x3,eax
  42206c:	ds pop ebx
  42206e:	out    0x3,eax
  422070:	ss fwait
  422072:	out    0x2,eax
  422074:	inc    esi
  422075:	pop    ecx
  422076:	out    0x2,eax
  422078:	ds fwait
  42207a:	xlat   BYTE PTR ds:[ebx]
  42207b:	add    edi,DWORD PTR [esi]
  42207d:	cmp    esp,edi
  42207f:	add    edi,esi
  422081:	cmp    ah,bh
  422083:	ret    
  422084:	cmp    esp,ebp
  422086:	(bad)  
  422087:	ret    
  422088:	jno    0x4220c5
  42208a:	out    0x3,eax
  42208c:	jle    0x4220c9
  42208e:	test   DWORD PTR [ebx],0xc3f75b3e
  422094:	pop    ecx
  422095:	cmp    esp,edi
  422097:	add    edi,DWORD PTR [esi+0x5b]
  42209a:	out    0xc3,eax
  42209c:	or     DWORD PTR [edi+edx*8-0x3d],ecx
  4220a0:	inc    ecx
  4220a1:	pop    ebx
  4220a2:	add    cl,ch
  4220a4:	cmp    eax,0x3dd9009b
  4220a9:	pop    ebx
  4220aa:	and    cl,bh
  4220ac:	cmp    eax,0xe9009b
	...
  4220d9:	add    ch,bh
  4220db:	jmp    0x4220f9
  4220dd:	jmp    0xf9627c1f
  4220e2:	std    
  4220e3:	jmp    0x4220e1
  4220e5:	jmp    0xd9427c27
  4220ea:	cmp    eax,0x7dd9009b
  4220ef:	jmp    0x42210d
  4220f1:	jmp    0xea3f0c73
  4220f6:	jge    0x422123
  4220f8:	add    cl,bh
  4220fa:	jge    0x4220e7
  4220fc:	sbb    al,0xf9
  4220fe:	cmp    eax,0x3df9005b
  422103:	fwait
  422104:	and    cl,bl
  422106:	cmp    eax,0x3de9209b
  42210b:	pop    ebx
  42210c:	add    cl,bl
  42210e:	jge    0x42213b
  422110:	add    cl,ch
  422112:	jge    0x42213f
  422114:	and    cl,bh
  422116:	jge    0x422103
  422118:	cld    
  422119:	jmp    0xe9424c9b
  42211e:	jge    0x42214b
  422120:	and    cl,ch
  422122:	cmp    eax,0x7de9205b
  422127:	jmp    0x422145
  422129:	fnstcw WORD PTR ds:0x3dd9005b
  42212f:	fwait
  422130:	and    cl,ch
  422132:	std    
  422133:	sub    al,BYTE PTR [eax]
  422135:	stc    
  422136:	std    
  422137:	sub    ah,BYTE PTR [eax]
  422139:	jmp    0xf942bc7b
	...
  422166:	add    BYTE PTR [eax],al
  422168:	std    
  422169:	jmp    0x20:0x5b3df9fc
  422170:	pop    ss
  422171:	pop    edi
  422172:	inc    eax
  422173:	add    BYTE PTR [edi],dl
  422175:	pop    ds
  422176:	std    
  422177:	pop    ds
  422178:	out    0x5e,eax
  42217a:	add    BYTE PTR [eax],ah
  42217c:	pop    ss
  42217d:	pop    ds
  42217e:	std    
  42217f:	jmp    edi
  422181:	pop    esi
  422182:	add    BYTE PTR [eax],ah
  422184:	out    0x1e,eax
  422186:	cmp    eax,0x3d1ee720
  42218b:	add    bh,ah
  42218d:	pop    esi
  42218e:	inc    eax
  42218f:	and    bh,ah
  422191:	push   ds
  422192:	cmp    eax,0x3d1ed700
  422197:	and    BYTE PTR [edi-0x68ffffa2],ah
  42219d:	pop    esi
  42219e:	inc    eax
  42219f:	and    BYTE PTR [edi-0x68ffffa2],ah
  4221a5:	push   ds
  4221a6:	std    
  4221a7:	jmp    DWORD PTR [edi-0x68dfbfa2]
  4221ad:	push   ds
  4221ae:	cmp    eax,0xfd1e9700
  4221b3:	jmp    DWORD PTR [edi+0x5e]
  4221b6:	inc    eax
  4221b7:	add    BYTE PTR [edi+0x671ffd1e],dl
  4221bd:	pop    esi
  4221be:	add    BYTE PTR [eax],al
  4221c0:	push   edi
  4221c1:	push   ds
  4221c2:	cmp    eax,0x5e5720
  4221c7:	and    BYTE PTR [edi+0x5e],dl
  4221ca:	inc    eax
	...
  4221f3:	add    BYTE PTR [eax],al
  4221f5:	add    BYTE PTR [edi+0x1e],dl
  4221f8:	std    
  4221f9:	pop    ds
  4221fa:	push   edi
  4221fb:	pop    esi
  4221fc:	and    BYTE PTR [eax],al
  4221fe:	push   ebp
  4221ff:	pop    esi
  422200:	and    BYTE PTR [eiz*1+0x2703fce6],al
  422207:	pop    esi
  422208:	add    BYTE PTR [eax],al
  42220a:	pop    ss
  42220b:	out    0xfc,al
  42220d:	call   DWORD PTR ds:0x3e03fce6
  422213:	idiv   al
  422215:	pop    ds
  422216:	ds hlt 
  422218:	clc    
  422219:	pop    ds
  42221a:	inc    edx
  42221b:	idiv   al
  42221d:	pop    ds
  42221e:	cmp    dh,ah
  422220:	add    BYTE PTR [eax],ah
  422222:	ds hlt 
  422224:	add    BYTE PTR [eax],al
  422226:	test   BYTE PTR ds:[eax],0x0
  42222a:	inc    edx
  42222b:	test   BYTE PTR [eax],0x0
  42222e:	ds hlt 
  422230:	add    BYTE PTR [eax],al
  422232:	inc    edx
  422233:	test   BYTE PTR [eax],0x20
  422236:	cmp    dh,dh
  422238:	clc    
  422239:	dec    ecx
  42223b:	repz clc 
  42223d:	(bad)  
  42223e:	cmp    eax,0x3e1ff8f6
  422243:	test   BYTE PTR [eax],0x20
  422246:	ds hlt 
  422248:	clc    
  422249:	(bad)  
  42224a:	cmp    eax,0x3a0000f6
  42224f:	hlt    
  422250:	add    BYTE PTR [eax],ah
  422252:	inc    edx
  422253:	hlt    
  422254:	clc    
  422255:	pop    ds
  422256:	cmp    dh,dh
  422258:	add    BYTE PTR [eax],ah
	...
  422282:	add    BYTE PTR [eax],al
  422284:	ds hlt 
  422286:	add    BYTE PTR [eax],ah
  422288:	cmp    dh,ah
  42228a:	clc    
  42228b:	(bad)  
  42228c:	jns    0x422283
  42228e:	clc    
  42228f:	push   DWORD PTR [ecx-0xb]
  422292:	clc    
  422293:	pop    ds
  422294:	inc    edx
  422295:	hlt    
  422296:	clc    
  422297:	pop    ds
  422298:	test   BYTE PTR ds:[eax],0x0
  42229c:	ds hlt 
  42229e:	add    BYTE PTR [eax],al
  4222a0:	cmp    dh,ah
  4222a2:	clc    
  4222a3:	pop    ds
  4222a4:	ds hlt 
  4222a6:	add    BYTE PTR [eax],al
  4222a8:	cmp    dh,ah
  4222aa:	clc    
  4222ab:	pop    ds
  4222ac:	repnz add BYTE PTR ds:[eax],ah
  4222b0:	ds hlt 
  4222b2:	clc    
  4222b3:	(bad)  
  4222b4:	cmp    eax,0x21fbe95b
  4222b9:	pop    ebp
  4222ba:	jmp    0xe9a180c2
  4222bf:	add    ebx,DWORD PTR [esi+0x5f]
  4222c2:	jmp    0xe99d60ca
  4222c7:	add    ebx,DWORD PTR [esi+0x5b]
  4222ca:	out    0x3,eax
  4222cc:	ds pop edi
  4222ce:	out    0xfb,eax
  4222d0:	icebp  
  4222d1:	pop    esp
  4222d2:	out    0x3,eax
  4222d4:	push   ds
  4222d5:	pop    ebx
  4222d6:	out    0xfb,eax
  4222d8:	inc    ecx
  4222d9:	pop    edi
  4222da:	jmp    0xe92afcda
  4222df:	sti    
  4222e0:	xor    DWORD PTR [ebx-0x19],ebx
  4222e3:	sti    
  4222e4:	sub    DWORD PTR [edi-0x17],ebx
  4222e7:	sti    
	...
  422310:	add    BYTE PTR [eax],al
  422312:	shr    eax,0xe8
  422315:	add    edi,DWORD PTR [esi]
  422317:	pop    edi
  422318:	jmp    0xe7a17518
  42231d:	add    ebx,DWORD PTR [esi+0x5f]
  422320:	out    0xfb,eax
  422322:	inc    ecx
  422323:	pop    ebx
  422324:	out    0x3,eax
  422326:	ds pop ebx
  422328:	jmp    0xe99d6130
  42232d:	sti    
  42232e:	sub    DWORD PTR [edi-0x19],ebx
  422331:	add    edi,DWORD PTR [esi]
  422333:	pop    ebx
  422334:	jmp    0xe79d7d34
  422339:	add    ebx,DWORD PTR [esi]
  42233b:	pop    edi
  42233c:	out    0xfb,eax
  42233e:	imul   ebp,eax,0x5f3e03e8
  422344:	out    0xfb,eax
  422346:	pop    ecx
  422347:	pop    esp
  422348:	out    0xfb,eax
  42234a:	push   ecx
  42234b:	call   0x5b602738
  422350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422351:	repz inc ecx
  422353:	pop    eax
  422354:	out    0xf3,eax
  422356:	cmp    eax,ebp
  422358:	(bad)  
  422359:	call   0xa942829b
  42235e:	sub    eax,0x3de9105c
  422363:	pop    ebx
  422364:	adc    BYTE PTR [ecx-0x56f317f3],ch
  42236a:	cmp    eax,0x3de9005b
  42236f:	pop    ebx
  422370:	adc    BYTE PTR [ecx-0x16ffa0c3],ch
	...
  42239e:	add    BYTE PTR [eax],al
  4223a0:	cmp    eax,0xeda9105f
  4223a5:	pop    ebx
  4223a6:	adc    cl,ch
  4223a8:	in     eax,dx
  4223a9:	pop    ebx
  4223aa:	add    cl,ch
  4223ac:	in     eax,dx
  4223ad:	pop    ebx
  4223ae:	adc    BYTE PTR [ecx],ch
  4223b0:	rcr    BYTE PTR [ebx+0x0],cl
  4223b3:	jmp    0x2a3f0b85
  4223b8:	inc    edx
  4223b9:	pop    ebx
  4223ba:	add    cl,ch
  4223bc:	cmp    eax,0x4229105f
  4223c1:	pop    ebx
  4223c2:	adc    cl,ch
  4223c4:	lods   eax,DWORD PTR ds:[esi]
  4223c5:	out    0xc,eax
  4223c7:	sub    DWORD PTR [edx-0x52160319],esi
  4223cd:	pop    ebx
  4223ce:	add    BYTE PTR [ecx],ch
  4223d0:	inc    edx
  4223d1:	pop    edi
  4223d2:	add    BYTE PTR [ecx],ch
  4223d4:	cmp    bl,BYTE PTR [edi+0x10]
  4223d7:	jmp    0x29527f69
  4223dc:	mov    ah,bh
  4223de:	cld    
  4223df:	jmp    0xe9427f21
  4223e4:	cmp    eax,0x4229005b
  4223e9:	pop    edi
  4223ea:	adc    BYTE PTR [ecx-0x16efa4c3],ch
  4223f0:	dec    ebp
  4223f1:	out    0xc,eax
  4223f3:	test   eax,0xe9005b4d
  4223f8:	cmp    eax,0x9700005f
  4223fd:	jmp    0x4223ff
  4223ff:	add    BYTE PTR [edi],ah
  422401:	pop    ebx
  422402:	add    al,0x0
	...
  42242c:	add    BYTE PTR [eax],al
  42242e:	daa    
  42242f:	jmp    0x422431
  422431:	adc    BYTE PTR [edi],dl
  422433:	jmp    0x422431
  422435:	call   edi
  422437:	pop    edx
  422438:	add    BYTE PTR [eax],al
  42243a:	out    0x5a,eax
  42243c:	add    al,0x10
  42243e:	daa    
  42243f:	jmp    0x42243d
  422441:	call   edi
  422443:	jmp    0xffc:0xeb170000
  42244a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244b:	pop    edx
  42244c:	add    BYTE PTR [eax],al
  42244e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244f:	pop    edx
  422450:	add    BYTE PTR [eax],dl
  422452:	xlat   BYTE PTR ds:[ebx]
  422453:	pop    edx
  422454:	add    al,0x10
  422456:	pop    ss
  422457:	pop    edi
  422458:	add    al,0x10
  42245a:	out    0x5a,eax
  42245c:	add    BYTE PTR [eax],dl
  42245e:	out    0x5a,eax
  422460:	add    al,0x0
  422462:	pop    ss
  422463:	out    dx,eax
  422464:	cld    
  422465:	(bad)  
  422467:	pop    edx
  422468:	add    BYTE PTR [eax],al
  42246a:	addr16 out dx,eax
  42246c:	add    BYTE PTR [eax],dl
  42246e:	addr16 pop edi
  422470:	add    al,0x0
  422472:	push   edi
  422473:	pop    edi
  422474:	add    BYTE PTR [eax],dl
  422476:	xchg   edi,eax
  422477:	pop    edx
  422478:	add    al,0x10
  42247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247b:	jmp    0xffc:0xef670ffc
  422482:	xchg   edi,eax
  422483:	pop    edx
  422484:	add    BYTE PTR [eax],al
  422486:	push   edi
  422487:	out    dx,eax
  422488:	add    BYTE PTR [eax],dl
  42248a:	addr16 jmp 0x0:0xea670000
	...
  4224ba:	add    BYTE PTR [eax],al
  4224bc:	pop    ss
  4224bd:	out    dx,eax
  4224be:	cld    
  4224bf:	call   DWORD PTR [edi-0x58000316]
  4224c5:	pop    edx
  4224c6:	add    al,0x0
  4224c8:	ds hlt 
  4224ca:	add    BYTE PTR [eax],al
  4224cc:	cs hlt 
  4224ce:	lock add ebp,DWORD PTR [esi]
  4224d1:	fs (bad) 
  4224d3:	(bad)  
  4224d4:	cmp    esp,esi
  4224d6:	add    BYTE PTR [eax],al
  4224d8:	ds hlt 
  4224da:	add    BYTE PTR [eax],al
  4224dc:	ds sbb al,0x7b
  4224df:	jmp    DWORD PTR [ecx]
  4224e1:	mov    ah,0x83
  4224e3:	call   FWORD PTR [ecx]
  4224e5:	add    BYTE PTR [ecx+0xf411ff],0x0
  4224ec:	ds hlt 
  4224ee:	add    BYTE PTR [eax],al
  4224f0:	ds dec edx
  4224f2:	jnp    0x4224f3
  4224f4:	stc    
  4224f5:	movq   mm7,mm7
  4224f8:	icebp  
  4224f9:	xchg   ebx,eax
  4224fa:	cmp    edi,0xf3e9
  422500:	ds hlt 
  422502:	add    BYTE PTR [eax],al
  422504:	ds hlt 
  422506:	jnp    0x422507
  422508:	rol    DWORD PTR [ebx-0x7e],1
  42250b:	dec    ecx
  42250d:	fild   DWORD PTR [ebx+0xf3c1ff]
  422513:	add    BYTE PTR [esi],bh
  422515:	hlt    
  422516:	add    BYTE PTR [eax],al
  422518:	ds mov eax,0xeba9ff7a
  42251e:	jle    0x42251f
	...
  422548:	add    BYTE PTR [eax],al
  42254a:	mov    eax,ds:0x99ff841b
  42254f:	repz add BYTE PTR [eax],al
  422552:	ds hlt 
  422554:	add    BYTE PTR [eax],al
  422556:	sar    BYTE PTR ds:[edx-0x1],cl
  42255a:	or     DWORD PTR [ebx-0x7e],0x83d379ff
  422561:	push   DWORD PTR [ecx-0xd]
  422564:	add    BYTE PTR [eax],al
  422566:	ds hlt 
  422568:	add    BYTE PTR [eax],al
  42256a:	ds pop ebx
  42256c:	(bad)  
  42256d:	jnp    0x4225c8
  42256f:	in     eax,0xd6
  422571:	adc    DWORD PTR [ecx-0x1b],0xe5498442
  422578:	out    0x3,al
  42257a:	ds pop ebx
  42257c:	out    0x3,eax
  42257e:	ds pop ebx
  422580:	sar    DWORD PTR [ebx+0x31],1
  422583:	in     eax,0xb2
  422585:	sub    DWORD PTR [ecx],0x2182dee5
  42258b:	in     eax,0xe6
  42258d:	add    edi,DWORD PTR [esi]
  42258f:	pop    ebx
  422590:	out    0x3,eax
  422592:	ds pop ebx
  422594:	add    DWORD PTR [ecx+ecx*1-0x1b],edi
  422598:	outs   dx,BYTE PTR ds:[esi]
  422599:	add    BYTE PTR [ecx],0xe5
  42259c:	mov    edx,0xe6e4f982
  4225a1:	add    edi,DWORD PTR [esi]
  4225a3:	pop    ebx
  4225a4:	out    0x3,eax
  4225a6:	ds pop ebx
  4225a8:	int    0x7a
  4225aa:	loope  0x422590
  4225ac:	stos   BYTE PTR es:[edi],al
  4225ad:	add    DWORD PTR [eax],0x0
	...
  4225d7:	add    cl,bl
  4225d9:	in     al,0xe6
  4225db:	add    edi,DWORD PTR [esi]
  4225dd:	pop    ebx
  4225de:	out    0x3,eax
  4225e0:	ds pop ebx
  4225e2:	out    0x3,eax
  4225e4:	ds pop ebx
  4225e6:	out    0x3,eax
  4225e8:	ds pop ebx
  4225ea:	out    0x3,eax
  4225ec:	ds pop ebx
  4225ee:	xchg   edi,eax
  4225ef:	sub    DWORD PTR [ecx-0x5e7e731c],0x998190e4
  4225f9:	in     al,0x9e
  4225fb:	adc    DWORD PTR [ecx-0x767f151c],0x8180f6e4
  422605:	in     al,0xe4
  422607:	cmp    BYTE PTR [ecx-0x1c],0xcc
  42260b:	xor    BYTE PTR [ecx-0x1c],0xff
  42260f:	mov    dl,0xbe
  422611:	in     al,0xfc
  422613:	and    DWORD PTR [edi-0x4142031c],edi
  422619:	in     al,0xfc
  42261b:	leave  
  42261c:	mov    esi,0xbedffce4
  422621:	in     al,0xfc
  422623:	jnp    0x4225e3
  422625:	in     al,0xfc
  422627:	mov    DWORD PTR [esi-0x4188031d],edi
  42262d:	jecxz  0x42262b
  42262f:	das    
  422630:	mov    esi,0xbe11fce3
  422635:	jecxz  0x422633
  422637:	adc    DWORD PTR [esi+0x23fce3],edi
	...
  422665:	add    BYTE PTR [esi-0x761c031d],bh
  42266b:	in     al,0xfc
  42266d:	out    dx,eax
  42266e:	and    esp,0xe479d5fc
  422674:	cld    
  422675:	test   eax,0x9ffce471
  42267a:	imul   esp,esp,0xe46187fc
  422680:	cld    
  422681:	pop    ebx
  422682:	(bad)  
  422683:	jecxz  0x422681
  422685:	outs   dx,DWORD PTR ds:[esi]
  422686:	(bad)  
  422687:	jecxz  0x422685
  422689:	mov    DWORD PTR [esi-0x4980031d],esi
  42268f:	jecxz  0x42268d
  422691:	xchg   esi,eax
  422693:	jecxz  0x422691
  422695:	cdq    
  422696:	(bad)  
  422697:	jecxz  0x422695
  422699:	xchg   ebp,eax
  42269a:	mov    dh,0xe3
  42269c:	cld    
  42269d:	mov    ebp,0xa1fce3b6
  4226a2:	(bad)  
  4226a3:	jecxz  0x4226a1
  4226a5:	in     eax,dx
  4226a6:	(bad)  
  4226a7:	jecxz  0x4226a5
  4226a9:	cmc    
  4226aa:	mov    dh,0xe3
  4226ac:	cld    
  4226ad:	mov    edi,0xfce3b6
  4226b2:	adc    edx,0xd249fffc
  4226b8:	cld    
  4226b9:	jmp    DWORD PTR [ebp-0x2e]
  4226bc:	cld    
  4226bd:	(bad)  
  4226be:	fst    st(1)
  4226c0:	cld    
  4226c1:	push   DWORD PTR [ebx+0x1bfffcd1]
  4226c7:	sar    ah,cl
  4226c9:	inc    DWORD PTR [eax]
	...
  4226f3:	add    BYTE PTR [ebx],dl
  4226f5:	sar    ah,cl
  4226f7:	(bad)  
  4226f8:	call   ecx
  4226fa:	cld    
  4226fb:	inc    DWORD PTR [ecx+0x21fffcd4]
  422701:	aad    0xfc
  422703:	dec    DWORD PTR [ecx]
  422705:	aad    0xfc
  422707:	jmp    DWORD PTR [ebx]
  422709:	aad    0xfc
  42270b:	jmp    DWORD PTR [ebx]
  42270d:	aad    0xfc
  42270f:	dec    ebp
  422711:	aam    0xfc
  422713:	call   DWORD PTR [edi]
  422715:	pop    edi
  422716:	add    BYTE PTR [eax],al
  422718:	test   eax,0x71fffcd4
  42271d:	aad    0xfc
  42271f:	(bad)  
  422720:	jns    0x4226f7
  422722:	cld    
  422723:	jmp    FWORD PTR [ecx]
  422725:	aad    0xfc
  422727:	call   FWORD PTR [ecx]
  422729:	aad    0xfc
  42272b:	(bad)  
  42272c:	std    
  42272d:	aam    0xfc
  42272f:	jmp    edi
  422731:	pop    esi
  422732:	add    BYTE PTR [eax],al
  422734:	jmp    0x42270a
  422736:	cld    
  422737:	call   edi
  422739:	pop    esi
  42273a:	add    BYTE PTR [eax],al
  42273c:	mov    bl,0xd5
  42273e:	cld    
  42273f:	call   DWORD PTR [ebx-0x5800032b]
  422745:	aad    0xfc
  422747:	call   DWORD PTR [ecx+0x53fffcd5]
  42274d:	(bad)  
  42274e:	cld    
  42274f:	call   DWORD PTR [ebx-0x2a]
  422752:	cld    
  422753:	(bad)  
  422754:	ds pop eax
  422756:	mov    edi,edi
	...
  422780:	add    BYTE PTR [eax],al
  422782:	adc    DWORD PTR [edx-0x77],0x8a6a79ff
  422789:	push   DWORD PTR [ecx-0x68]
  42278c:	mov    bh,bh
  42278e:	imul   esp,DWORD PTR [eax],0xf461ff8a
  422794:	add    BYTE PTR [eax],al
  422796:	ds es mov bh,bh
  42279a:	push   ecx
  42279b:	hlt    
  42279c:	add    BYTE PTR [eax],al
  42279e:	ds call 0xff88:0xf641ff8a
  4227a6:	cmp    esp,esi
  4227a8:	add    BYTE PTR [eax],al
  4227aa:	ds pop eax
  4227ac:	mov    edi,?
  4227ae:	sub    esp,esp
  4227b0:	mov    bh,bh
  4227b2:	and    eax,esi
  4227b4:	mov    bh,bh
  4227b6:	sbb    DWORD PTR [eax+ecx*4-0x7759ee01],ebp
  4227bd:	dec    DWORD PTR [ecx]
  4227bf:	stos   BYTE PTR es:[edi],al
  4227c0:	mov    bh,bh
  4227c2:	add    esp,esi
  4227c4:	add    BYTE PTR [eax],al
  4227c6:	bound  ecx,QWORD PTR ds:[ecx-0x768a0e01]
  4227cd:	(bad)  
  4227ce:	jmp    0xe241b158
  4227d3:	(bad)  
  4227d7:	ror    DWORD PTR [ebx-0x74382e01],1
  4227dd:	dec    ecx
  4227df:	(bad)  
  4227e0:	mov    edi,edi
  4227e2:	sar    DWORD PTR [ecx+0xff8b],0x0
	...
  42280d:	add    BYTE PTR [eax],al
  42280f:	add    BYTE PTR [ecx-0x4e007457],bh
  422815:	mov    edi,0xf3a9ff8b
  42281a:	add    BYTE PTR [eax],al
  42281c:	ds stos BYTE PTR es:[edi],al
  42281e:	mov    edi,edi
  422820:	cdq    
  422821:	pop    edx
  422822:	icebp  
  422823:	mov    dl,BYTE PTR [ecx+0x3e03e6e1]
  422829:	pop    ebx
  42282a:	mov    bh,0x86
  42282c:	and    ecx,0xe17986ac
  422832:	nop
  422833:	xchg   BYTE PTR [ecx-0x1f],dh
  422836:	jle    0x4227be
  422838:	imul   esp,ecx,0xe16184ea
  42283e:	(bad)  
  42283f:	test   BYTE PTR [ecx-0x1f],bl
  422842:	add    al,0x85
  422844:	push   ecx
  422845:	loope  0x422853
  422847:	test   DWORD PTR [ecx-0x1f],ecx
  42284a:	adc    BYTE PTR [ebp-0x7b611ebf],al
  422850:	cmp    ecx,esp
  422852:	call   0x2984:0xc6e13184
  422859:	loope  0x422817
  42285b:	test   BYTE PTR [ecx],ah
  42285d:	loope  0x4228b7
  42285f:	test   DWORD PTR [ecx],ebx
  422861:	loope  0x4228a9
  422863:	test   DWORD PTR [ecx],edx
  422865:	loope  0x4228bb
  422867:	test   DWORD PTR [ecx],ecx
  422869:	loope  0x422897
  42286b:	test   DWORD PTR [ecx],eax
  42286d:	loope  0x42289d
  42286f:	test   ecx,edi
  422871:	loopne 0x422881
  422873:	test   DWORD PTR [eax],eax
	...
  42289d:	add    cl,dh
  42289f:	loopne 0x4228a1
  4228a1:	test   ecx,ebp
  4228a3:	loopne 0x422885
  4228a5:	xchg   ecx,esp
  4228a7:	loopne 0x422875
  4228a9:	xchg   ecx,ebx
  4228ab:	loopne 0x4228bf
  4228ad:	mov    cl,dl
  4228af:	loopne 0x4228d7
  4228b1:	mov    cl,cl
  4228b3:	loopne 0x4228f1
  4228b5:	mov    cl,al
  4228b7:	loopne 0x4228fd
  4228b9:	mov    BYTE PTR [ecx-0x4e77c720],bh
  4228bf:	loopne 0x42292d
  4228c1:	xchg   DWORD PTR [ecx-0x46770020],ebp
  4228c7:	loopne 0x4228c5
  4228c9:	jg     0x42288c
  4228cb:	loopne 0x4228c9
  4228cd:	addr16 mov ecx,0xc1b9fce0
  4228d3:	loopne 0x4228d1
  4228d5:	mov    ch,0xb9
  4228d7:	loopne 0x4228d5
  4228d9:	jge    0x42289c
  4228db:	loopne 0x4228d9
  4228dd:	cmp    DWORD PTR [ecx-0x3f120320],0xb8d5fce0
  4228e7:	loopne 0x4228e5
  4228e9:	mov    edi,0x27fce0c0
  4228ee:	mov    ecx,0xc0b7fce0
  4228f3:	loopne 0x4228f1
  4228f5:	fstp   TBYTE PTR [eax-0x3f9c0320]
  4228fb:	(bad)  
  4228fd:	xchg   ebp,eax
  4228fe:	mov    eax,0x25fcdf
	...
  42292b:	add    al,al
  42292d:	(bad)  
  42292f:	adc    eax,0x41fcdfb8
  422934:	rcr    bh,0xfc
  422937:	daa    
  422938:	mov    eax,0xb7effcdf
  42293d:	(bad)  
  42293f:	push   DWORD PTR [edi-0x38420321]
  422945:	(bad)  
  422947:	(bad)
  42294a:	cld    
  42294b:	mov    bl,0xb7
  42294d:	(bad)  
  42294f:	jmp    0x77428491
  422954:	(bad)  
  422955:	(bad)  
  422957:	ja     0x422911
  422959:	(bad)  
  42295b:	xchg   eax,eax
  42295d:	(bad)  
  42295f:	lahf   
  422960:	mov    eax,0xc0a7fcdf
  422965:	(bad)  
  422967:	add    ch,bl
  422969:	fdivr  st,st(4)
  42296b:	call   DWORD PTR [edi-0x1cffffa5]
  422971:	fdivr  st,st(4)
  422973:	jmp    DWORD PTR [edi-0x74ffffa5]
  422979:	fdivr  st,st(4)
  42297b:	dec    DWORD PTR [ebx+0x67fffcd8]
  422981:	fdivr  st,st(4)
  422983:	dec    DWORD PTR [ecx+0x2bfffcd8]
  422989:	fdivr  st,st(4)
  42298b:	dec    DWORD PTR [ebx-0x28]
  42298e:	cld    
  42298f:	inc    DWORD PTR [eax]
	...
  4229b9:	add    BYTE PTR [ebx],bh
  4229bb:	fdivr  st,st(4)
  4229bd:	jmp    FWORD PTR [ecx-0x28]
  4229c0:	cld    
  4229c1:	dec    ecx
  4229c3:	xlat   BYTE PTR ds:[ebx]
  4229c4:	cld    
  4229c5:	inc    ebx
  4229c7:	xlat   BYTE PTR ds:[ebx]
  4229c8:	cld    
  4229c9:	jmp    DWORD PTR [ebx+0x27fffcd7]
  4229cf:	pop    ebx
  4229d0:	add    BYTE PTR [eax],al
  4229d2:	push   ebp
  4229d3:	(bad)  
  4229d4:	cld    
  4229d5:	call   DWORD PTR [edi]
  4229d7:	pop    ebx
  4229d8:	add    BYTE PTR [eax],al
  4229da:	jns    0x4229b2
  4229dc:	cld    
  4229dd:	jmp    DWORD PTR ds:0x27fffcd3
  4229e3:	pop    ebx
  4229e4:	add    BYTE PTR [eax],al
  4229e6:	add    edx,ebx
  4229e8:	cld    
  4229e9:	jmp    edi
  4229eb:	sar    ah,cl
  4229ed:	dec    DWORD PTR [ebx]
  4229ef:	sar    esp,cl
  4229f1:	jmp    FWORD PTR [edi-0x3a00032e]
  4229f7:	sar    ah,cl
  4229f9:	dec    ecx
  4229fb:	sar    ah,cl
  4229fd:	jmp    edi
  4229ff:	pop    edx
  422a00:	add    BYTE PTR [eax],al
  422a02:	jno    0x4229d3
  422a04:	cld    
  422a05:	call   DWORD PTR [ebp-0x2e]
  422a08:	cld    
  422a09:	(bad)  
  422a0a:	bound  ecx,QWORD PTR ds:[ecx-0x768f4601]
  422a11:	push   DWORD PTR [ecx-0x56007732]
  422a17:	push   0x68a1ff89
  422a1c:	mov    edi,edi
	...
  422a46:	add    BYTE PTR [eax],al
  422a48:	cdq    
  422a49:	mov    dh,0x88
  422a4b:	call   DWORD PTR [ecx-0x7600775a]
  422a51:	mov    al,ds:0xf481ff88
  422a56:	add    BYTE PTR [eax],al
  422a58:	ds (bad) 
  422a5a:	mov    bh,bh
  422a5c:	jno    0x422a48
  422a5e:	mov    edi,edi
  422a60:	imul   esi,esp,0xa73e0000
  422a66:	add    BYTE PTR [ecx-0x34],al
  422a69:	push   esi
  422a6a:	mov    ds:0xabaddb73,eax
  422a6f:	imul   esp,ebx,0xffffffb2
  422a72:	add    BYTE PTR [edi],bh
  422a74:	cmp    al,0xa2
  422a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a77:	pop    esi
  422a78:	mov    ds:0x9b6babb6,al
  422a7d:	hlt    
  422a7e:	add    BYTE PTR [ecx],ah
  422a80:	ds mov cl,0xac
  422a83:	ins    BYTE PTR es:[edi],dx
  422a84:	lods   eax,DWORD PTR ds:[esi]
  422a85:	bswap  ecx
  422a87:	pop    esi
  422a88:	test   al,0x18
  422a8a:	lods   eax,DWORD PTR ds:[esi]
  422a8b:	bound  edi,QWORD PTR [esi]
  422a8d:	cmp    edi,edi
  422a8f:	push   esp
  422a90:	mov    ebx,cs
  422a92:	mov    ah,0x62
  422a94:	js     0x422a71
  422a96:	lods   al,BYTE PTR ds:[esi]
  422a97:	bound  edi,QWORD PTR [esi]
  422a99:	out    dx,eax
  422a9a:	add    DWORD PTR [ebp+ebp*2+0x60],ebp
  422a9e:	scas   eax,DWORD PTR es:[edi]
  422a9f:	imul   esp,DWORD PTR [ebx-0x32],0xffffffc3
  422aa3:	jmp    ecx
  422aa5:	and    eax,DWORD PTR [eax*2+0x5e9f5d6a]
	...
  422ad4:	add    BYTE PTR [eax],al
  422ad6:	bound  ebx,QWORD PTR [ebx+0x33]
  422ad9:	lods   eax,DWORD PTR ds:[esi]
  422ada:	pop    esi
  422adb:	jb     0x422ac4
  422add:	add    ecx,DWORD PTR [ebx+0x2ab02e5b]
  422ae3:	jns    0x422b2d
  422ae5:	mov    al,0xc
  422ae7:	ins    DWORD PTR es:[edi],dx
  422ae8:	push   ebx
  422ae9:	lods   eax,DWORD PTR ds:[esi]
  422aea:	push   ds
  422aeb:	jb     0x422ad4
  422aed:	add    ebp,DWORD PTR [edx+0x1ead235b]
  422af3:	jl     0x422b30
  422af5:	(bad)  
  422af6:	vmread DWORD PTR [esp+eax*1],ecx
  422afa:	mov    ds,WORD PTR [ebx+0x2b]
  422afd:	lods   eax,DWORD PTR ds:[esi]
  422afe:	push   ds
  422aff:	jl     0x422b04
  422b01:	ret    
  422b02:	in     eax,0x6e
  422b04:	(bad)  
  422b05:	mov    al,ds:0xdfdd71
  422b0a:	fisubr DWORD PTR [ecx-0xd]
  422b0d:	mov    cl,0xde
  422b0f:	push   0xfffffff0
  422b11:	ret    0xdd59
  422b14:	fld    DWORD PTR [eax]
  422b16:	loop   0x422b81
  422b18:	(bad)  [ecx-0x3d2c8422]
  422b1e:	inc    ecx
  422b1f:	(bad)  
  422b21:	add    al,BYTE PTR [ebx-0x673a2c8a]
  422b27:	outs   dx,DWORD PTR ds:[esi]
  422b28:	int3   
  422b29:	ret    0x67ad
  422b2c:	mov    ecx,0xbb669faa
  422b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b32:	mov    ds,WORD PTR [edx+0x5bb503e7]
  422b38:	lods   al,BYTE PTR ds:[esi]
  422b39:	mov    ebx,0x0
	...
  422b62:	add    BYTE PTR [eax],al
  422b64:	cdq    
  422b65:	jp     0x422af4
  422b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b68:	jl     0x422bd7
  422b6a:	popf   
  422b6b:	stos   BYTE PTR es:[edi],al
  422b6c:	outs   dx,DWORD PTR ds:[esi]
  422b6d:	ins    BYTE PTR es:[edi],dx
  422b6e:	jge    0x422b1e
  422b70:	pop    esp
  422b71:	ins    DWORD PTR es:[edi],dx
  422b72:	jnp    0x422b44
  422b74:	ins    DWORD PTR es:[edi],dx
  422b75:	imul   edx,DWORD PTR [eax+0x685aad],0xff3f3da8
  422b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b80:	cwde   
  422b81:	push   0x798e5046
  422b86:	push   ecx
  422b87:	push   eax
  422b88:	test   BYTE PTR [ecx+0x0],bh
  422b8b:	pop    ss
  422b8c:	inc    edx
  422b8d:	call   0x2f63:0x68dd4472
  422b94:	aad    0x70
  422b96:	arpl   WORD PTR [ebx*8-0x17bf8f94],bp
  422b9d:	ja     0x422bde
  422b9f:	jmp    0x344486e1
  422ba4:	(bad)  [esi+edx*2+0x10]
  422ba8:	fldenv [edi+0x4d]
  422bab:	jo     0x3a469826
  422bb1:	or     al,BYTE PTR [edx]
  422bb3:	sbb    al,0x98
  422bb5:	jno    0x422c16
  422bb7:	stc    
  422bb8:	mov    esi,DWORD PTR [ebp+0x63]
  422bbb:	dec    BYTE PTR [edx-0x71ffb98a]
  422bc1:	jns    0x422bc3
  422bc3:	push   ebx
  422bc4:	cmp    al,0x8f
  422bc6:	ins    DWORD PTR es:[edi],dx
  422bc7:	enter  0x0,0x0
	...
  422bef:	add    BYTE PTR [eax],al
  422bf1:	add    BYTE PTR [ecx-0x10349870],bl
  422bf7:	jl     0x422c6b
  422bf9:	sar    ah,1
  422bfb:	(bad)  
  422bfd:	call   0x6a0d:0xb563963c
  422c04:	ins    DWORD PTR es:[edi],dx
  422c05:	retf   0x77fc
  422c08:	fs mov ebx,0xe9716ad8
  422c0e:	cmp    eax,0xd8a5fed7
  422c13:	addr16 push esp
  422c15:	mov    WORD PTR [eax-0x5677af95],gs
  422c1b:	jae    0x422c5c
  422c1d:	add    bh,dl
  422c1f:	push   edi
  422c20:	xor    DWORD PTR [eax],eax
  422c22:	xchg   esp,eax
  422c23:	test   eax,0xb55b6161
  422c28:	inc    eax
  422c29:	imul   edx,DWORD PTR [ebp-0x4b],0xa570745f
  422c30:	jne    0x422c73
  422c32:	xlat   BYTE PTR ds:[ebx]
  422c33:	push   edi
  422c34:	add    BYTE PTR gs:[ebx-0x46],ch
  422c38:	push   0x42ba0b65
  422c3d:	imul   edx,DWORD PTR [ebx],0x97003dba
  422c43:	push   esi
  422c44:	inc    ebx
  422c45:	gs pop ebx
  422c47:	adc    al,0x72
  422c49:	jb     0x422ca0
  422c4b:	mov    edx,0xa547746a
  422c50:	imul   esp,DWORD PTR [ebx+0x3a],0xffffffa4
  422c54:	outs   dx,DWORD PTR ds:[esi]
	...
  422c7d:	add    BYTE PTR [eax],al
  422c7f:	add    bh,dl
  422c81:	push   esp
  422c82:	push   ebx
  422c83:	imul   edi,DWORD PTR [ebx],0x36683fba
  422c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c8a:	push   eax
  422c8b:	outs   dx,DWORD PTR ds:[esi]
  422c8c:	adc    ch,BYTE PTR [edx+0x153e7468]
  422c92:	jbe    0x422d08
  422c94:	cmp    dl,BYTE PTR [edi+0x28]
  422c97:	add    DWORD PTR [eax+0x764c70ba],ebx
  422c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c9e:	jo     0x422ce5
  422ca0:	adc    eax,0x27726c11
  422ca5:	pop    edi
  422ca6:	adc    DWORD PTR [ebx],eax
  422ca8:	adc    edx,DWORD PTR [edx]
  422caa:	jno    0x422d1e
  422cac:	hlt    
  422cad:	add    ebp,DWORD PTR [ebp+0x41]
  422cb0:	daa    
  422cb1:	pop    edi
  422cb2:	push   ebp
  422cb3:	add    ah,ah
  422cb5:	adc    BYTE PTR [edx+0x61],ah
  422cb8:	stos   DWORD PTR es:[edi],eax
  422cb9:	sti    
  422cba:	push   eax
  422cbb:	outs   dx,DWORD PTR ds:[esi]
  422cbc:	mov    al,0x2
  422cbe:	gs gs ds loopne 0x422c73
  422cc3:	xor    BYTE PTR [edx*1+0x556e5ea7],ch
  422cca:	test   eax,0xc46a6c
  422ccf:	and    edi,DWORD PTR [esp+esi*8]
  422cd2:	mov    dl,0x6c
  422cd4:	pop    ebp
  422cd5:	fbstp  TBYTE PTR [ebp-0x3d89f290]
  422cdb:	dec    sp
  422cdd:	xor    eax,0xccb9ffb0
  422ce2:	add    cl,BYTE PTR [ebp+0x0]
	...
  422d0d:	add    BYTE PTR [esi],ch
  422d0f:	pop    ds
  422d10:	stos   BYTE PTR es:[edi],al
  422d11:	dec    edi
  422d12:	sub    al,0x31
  422d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d15:	bound  ebp,QWORD PTR ds:0x3c250495
  422d1b:	je     0x422cd3
  422d1d:	ins    BYTE PTR es:[edi],dx
  422d1e:	sbb    eax,0x4d70b51f
  422d23:	mov    dh,0xc6
  422d25:	bound  eax,QWORD PTR [esi]
  422d27:	jo     0x422d2d
  422d29:	scas   eax,DWORD PTR es:[edi]
  422d2a:	mov    ch,BYTE PTR ds:[ebx-0x547e2593]
  422d31:	jno    0x422d20
  422d33:	xlat   BYTE PTR ds:[ebx]
  422d34:	mov    esi,0xc35ed266
  422d39:	call   FWORD PTR [ecx-0x47]
  422d3c:	add    eax,0xb2cfcd6c
  422d41:	pusha  
  422d42:	(bad)  [ebx-0x1c1c155]
  422d48:	add    BYTE PTR [esi-0x59],al
  422d4b:	mov    ds:0xac9b4d9c,al
  422d50:	lods   al,BYTE PTR ds:[esi]
  422d51:	inc    ebp
  422d52:	xchg   edi,eax
  422d53:	mov    al,0x9f
  422d55:	ds ds out 0x0,eax
  422d59:	inc    esi
  422d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d5b:	mov    ds:0x19a2409c,al
  422d60:	mov    dh,0x62
  422d62:	ds pop ebx
  422d64:	fild   DWORD PTR [ebx+edi*2]
  422d67:	inc    eax
  422d68:	xchg   ebx,eax
  422d69:	enter  0x3f6a,0x9c
  422d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d6e:	pop    esp
  422d6f:	and    ecx,DWORD PTR [eax+0xa9]
	...
  422d99:	add    BYTE PTR [eax],al
  422d9b:	add    BYTE PTR [ebp+0x47],bl
  422d9e:	mov    esp,es
  422da0:	loope  0x422d7b
  422da2:	push   esp
  422da3:	add    al,0x83
  422da5:	inc    eax
  422da6:	jnp    0x422d79
  422da8:	pop    esp
  422da9:	dec    ebp
  422daa:	jp     0x422d58
  422dac:	pop    edx
  422dad:	dec    ecx
  422dae:	sub    al,0xbc
  422db0:	add    BYTE PTR [ebx+0x11],bl
  422db3:	add    eax,DWORD PTR [ebx]
  422db5:	inc    eax
  422db6:	pop    ebx
  422db7:	enter  0x3e22,0x48
  422dbb:	test   al,0x1c
  422dbd:	and    al,0x55
  422dbf:	mov    ds:0x3e71c12,al
  422dc4:	adc    bl,BYTE PTR [esi+ebp*1-0x61]
  422dc8:	or     eax,0xdb5302e
  422dcd:	inc    eax
  422dce:	adc    al,0xcb
  422dd0:	adc    eax,DWORD PTR [ecx+0xe]
  422dd3:	add    al,0x9e
  422dd5:	pop    ebx
  422dd6:	cs lahf 
  422dd8:	in     eax,dx
  422dd9:	xor    DWORD PTR [eax],eax
  422ddb:	stos   BYTE PTR es:[edi],al
  422ddc:	fisttp QWORD PTR [ecx-0x2]
  422ddf:	mov    ah,0xfd
  422de1:	inc    ebx
  422de2:	stc    
  422de3:	sahf   
  422de4:	fimul  WORD PTR [esi+0x6]
  422de7:	mov    dh,0xc8
  422de9:	sbb    esp,edi
  422deb:	add    edi,ebx
  422ded:	pop    ebx
  422dee:	scas   al,BYTE PTR es:[edi]
  422def:	sahf   
  422df0:	int    0x2a
  422df2:	fldcw  WORD PTR [edx-0x6124c54d]
  422df8:	or     DWORD PTR [ebp-0x42],0xcc47a0a1
  422dff:	aam    0x0
	...
  422e29:	add    BYTE PTR [ebp-0x5d562fb3],ch
  422e2f:	sbb    al,BYTE PTR [eax]
  422e31:	jmp    0x9a448373
  422e36:	test   al,0x4c
  422e38:	inc    ecx
  422e39:	pushf  
  422e3a:	retf   
  422e3b:	dec    edx
  422e3c:	arpl   WORD PTR [edi-0x6498e357],cx
  422e42:	sar    BYTE PTR [ebx],1
  422e44:	je     0x422ec4
  422e46:	mov    bl,0x51
  422e48:	aas    
  422e49:	jmp    0xa641558b
  422e4e:	mov    eax,0xa47b504c
  422e53:	dec    esi
  422e54:	pop    edi
  422e55:	jne    0x422dff
  422e57:	sub    BYTE PTR [edx+0x56],dh
  422e5a:	pushf  
  422e5b:	inc    ecx
  422e5c:	ins    BYTE PTR es:[edi],dx
  422e5d:	inc    esp
  422e5e:	xchg   ebx,eax
  422e5f:	cmp    eax,0x47e55d61
  422e64:	outs   dx,BYTE PTR ds:[esi]
  422e65:	pop    ds
  422e66:	fld    QWORD PTR [ebp+0x63]
  422e69:	cmp    bh,BYTE PTR [ebp-0x28]
  422e6c:	cld    
  422e6d:	xor    BYTE PTR ds:0x6a3d631e,bh
  422e73:	dec    edx
  422e74:	addr16 aaa 
  422e76:	fisttp QWORD PTR [ebx+eiz*2+0x39]
  422e7a:	enter  0x6647,0x10
  422e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e7f:	cmp    eax,0x99ae0747
  422e84:	add    BYTE PTR [edi-0x29ce1c3],cl
  422e8a:	jp     0x422ed9
  422e8c:	jb     0x422e89
	...
  422eb6:	add    BYTE PTR [eax],al
  422eb8:	mov    eax,0xa52d7446
  422ebd:	dec    edx
  422ebe:	arpl   WORD PTR [edx],cx
  422ec0:	mov    es,WORD PTR [edi+0x72]
  422ec3:	loopne 0x422f41
  422ec5:	fdivr  st,st(4)
  422ec7:	inc    DWORD PTR [edx+0x47]
  422eca:	jno    0x422ea9
  422ecc:	jmp    0x422f11
  422ece:	arpl   WORD PTR [edi+0xfcd80e],di
  422ed4:	sub    bl,BYTE PTR [esi+0x49]
  422ed7:	jne    0x422ee4
  422ed9:	or     BYTE PTR [esi+0x42],ah
  422edc:	into   
  422edd:	pop    es
  422ede:	bound  edx,QWORD PTR [eax+ecx*8-0x56]
  422ee2:	gs fs mov dl,0x9e
  422ee6:	fs popa 
  422ee8:	aad    0x5b
  422eea:	mov    DWORD PTR [ecx],eax
  422eec:	mov    al,ds:0xbe5470f8
  422ef1:	(bad)  
  422ef2:	addr16 inc ebx
  422ef4:	enter  0x6b08,0x74
  422ef8:	out    0x5b,eax
  422efa:	mov    bh,0x2
  422efc:	mov    ah,0xff
  422efe:	popa   
  422eff:	gs inc edi
  422f01:	pop    esp
  422f02:	xor    al,BYTE PTR [ecx]
  422f04:	adc    dl,bh
  422f06:	jo     0x422f55
  422f08:	or     bl,bh
  422f0a:	jno    0x422f78
  422f0c:	add    bl,BYTE PTR [ecx]
  422f0e:	data16 ins BYTE PTR es:[edi],dx
  422f10:	add    ah,BYTE PTR [ecx-0x620d92a3]
  422f16:	cld    
  422f17:	inc    DWORD PTR [eax+0x434c5d]
	...
  422f45:	add    BYTE PTR [edx-0x2],bl
  422f48:	ins    BYTE PTR es:[edi],dx
  422f49:	push   ebx
  422f4a:	push   ebx
  422f4b:	or     eax,0x9e306e66
  422f50:	cld    
  422f51:	(bad)  
  422f52:	mov    esp,0x3e78415e
  422f57:	or     ecx,DWORD PTR [ebp+0x72]
  422f5a:	push   0x647361fc
  422f5f:	pop    ebx
  422f60:	lods   eax,DWORD PTR ds:[esi]
  422f61:	add    dh,BYTE PTR [edx+edi*8]
  422f64:	jo     0x422fbb
  422f66:	cmp    DWORD PTR [edi],eax
  422f68:	pop    esi
  422f69:	outs   dx,BYTE PTR ds:[esi]
  422f6a:	inc    ebx
  422f6b:	add    esp,DWORD PTR [edx+0x64]
  422f6e:	xchg   edx,eax
  422f6f:	adc    esp,DWORD PTR [eax+0x65]
  422f72:	pop    ss
  422f73:	pop    es
  422f74:	outs   dx,WORD PTR ds:[esi]
  422f76:	ds sahf 
  422f78:	mov    edx,0x9fb09a66
  422f7d:	jno    0x422fbd
  422f7f:	test   eax,0x9fa8719f
  422f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f85:	xor    BYTE PTR [esi+ebx*2-0x60],cl
  422f89:	imul   ebx,DWORD PTR [edx+0x3e8900c4],0x1
  422f90:	scas   eax,DWORD PTR es:[edi]
  422f91:	bound  ebx,QWORD PTR [edi-0x10]
  422f94:	lahf   
  422f95:	push   eax
  422f96:	push   0xfffffff2
  422f98:	lahf   
  422f99:	pop    esi
  422f9a:	pop    ebx
  422f9b:	cmc    
  422f9c:	mov    ds:0xa5f07947,al
  422fa1:	popa   
  422fa2:	pop    edi
  422fa3:	call   0x580c4a8
  422fa8:	mov    al,ds:0x73
	...
  422fd1:	add    BYTE PTR [eax],al
  422fd3:	add    BYTE PTR [esi-0x3],dh
  422fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fd7:	ins    BYTE PTR es:[edi],dx
  422fd8:	pop    esp
  422fd9:	and    ebp,DWORD PTR [eax-0x58dad3bb]
  422fdf:	push   eax
  422fe0:	sub    dh,BYTE PTR [edx]
  422fe2:	lahf   
  422fe3:	pop    esi
  422fe4:	sbb    eax,esp
  422fe6:	add    BYTE PTR [esi],cl
  422fe8:	and    DWORD PTR ds:[ebp-0x5ce0f3c0],0xaf851b73
  422ff3:	data16 and al,ah
  422ff6:	add    BYTE PTR [eax+0x3e],ah
  422ff9:	and    DWORD PTR [ebp-0x568f20ad],0xbe5edb4a
  423003:	jno    0x422fe8
  423005:	pop    esi
  423006:	add    al,0xd
  423008:	and    DWORD PTR ds:[ebp-0x5ca133c0],0xa67adb73
  423013:	jo     0x422fe7
  423015:	bound  esp,QWORD PTR [esi-0x18a524a0]
  42301b:	add    ebp,DWORD PTR [edi]
  42301d:	pop    ebx
  42301e:	scas   al,BYTE PTR es:[edi]
  42301f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423020:	pushf  
  423021:	and    al,0xc5
  423023:	lods   al,BYTE PTR ds:[esi]
  423024:	lods   eax,DWORD PTR ds:[esi]
  423025:	inc    esp
  423026:	enter  0x98a7,0x51
  42302a:	int3   
  42302b:	add    ebp,DWORD PTR [ebx+0x4ff2c447]
  423031:	test   ebx,ecx
  423033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423034:	xchg   ebp,eax
  423035:	pop    ebx
  423036:	lods   al,BYTE PTR ds:[esi]
  423037:	add    DWORD PTR [eax],eax
	...
  423061:	add    BYTE PTR [ebx+0x60b1974a],cl
  423067:	inc    ebp
  423068:	xchg   ebx,eax
  423069:	popf   
  42306a:	xor    BYTE PTR [ebx-0x64],bl
  42306d:	mov    dl,0x5c
  42306f:	dec    ecx
  423070:	(bad)  
  423072:	adc    edi,DWORD PTR [edi]
  423074:	xchg   ebx,eax
  423075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423076:	(bad)  
  423078:	push   ss
  423079:	add    al,0x6c
  42307b:	inc    eax
  42307c:	mov    es,esi
  42307e:	pop    ecx
  42307f:	inc    eax
  423080:	jge    0x42304c
  423082:	pop    esp
  423083:	push   esp
  423084:	sub    al,0xbc
  423086:	js     0x4230e3
  423088:	rol    DWORD PTR [ebx],0xc
  42308b:	inc    eax
  42308c:	dec    esi
  42308d:	shr    DWORD PTR [eax+eax*2],cl
  423090:	pop    ecx
  423091:	mov    ebx,0xaf533c0b
  423096:	sbb    al,0x20
  423098:	aas    
  423099:	ret    
  42309a:	xchg   ecx,eax
  42309b:	aad    0x7d
  42309d:	add    ebp,esp
  42309f:	aas    
  4230a0:	inc    esi
  4230a1:	rcl    DWORD PTR ds:0x69f1a46,0x40
  4230a8:	and    BYTE PTR [ebx+eax*4],al
  4230ab:	pop    ebx
  4230ac:	cmp    DWORD PTR [edi-0x60e8da1e],ebx
  4230b2:	shl    DWORD PTR [ecx],cl
  4230b4:	or     al,0xbb
  4230b6:	sbb    BYTE PTR [ebx-0x5d],bl
  4230b9:	add    ebp,esp
  4230bb:	aas    
  4230bc:	add    BYTE PTR [esi],cl
  4230be:	mov    DWORD PTR [edi+0x73],eax
  4230c1:	cld    
  4230c2:	jbe    0x4230fc
  4230c4:	ja     0x423072
	...
  4230ee:	add    BYTE PTR [eax],al
  4230f0:	cmc    
  4230f1:	xchg   ebp,eax
  4230f2:	add    BYTE PTR [ebx-0x319cd6c3],ah
  4230f8:	dec    BYTE PTR [edx+0x63]
  4230fb:	enter  0x39d1,0x49
  4230ff:	int3   
  423100:	aam    0x95
  423102:	add    BYTE PTR [esi+0x3d],al
  423105:	sub    DWORD PTR [ebx-0x32],esp
  423108:	out    dx,al
  423109:	cmp    DWORD PTR [edi+edx*4-0x24],esi
  42310d:	inc    eax
  42310e:	jae    0x42309c
  423110:	mov    eax,0x3de93f4c
  423115:	cmp    bh,0x9f
  423118:	scas   al,BYTE PTR es:[edi]
  423119:	sub    BYTE PTR [ebx-0x6f],ah
  42311c:	xchg   ecx,eax
  42311d:	sub    DWORD PTR [esi-0x70],ebp
  423120:	sahf   
  423121:	inc    edi
  423122:	test   BYTE PTR fs:0xa89afea5,bh
  423129:	aas    
  42312a:	dec    ebp
  42312b:	jns    0x4230cd
  42312d:	inc    esi
  42312e:	inc    ecx
  42312f:	pop    esp
  423130:	in     al,dx
  423131:	dec    edx
  423132:	arpl   WORD PTR [edi-0x12],cx
  423135:	sub    DWORD PTR [ecx+0x4c],esi
  423138:	in     al,dx
  423139:	aam    0xfc
  42313b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42313c:	cmp    al,0x29
  42313e:	arpl   WORD PTR [esi-0x27],cx
  423141:	inc    esi
  423142:	jae    0x423190
  423144:	xor    BYTE PTR ds:0x95a93c6c,0x0
  42314b:	sar    BYTE PTR [esi+ebx*1],cl
  42314e:	arpl   WORD PTR ds:0x1b634b89,bx
	...
  42317c:	add    BYTE PTR [eax],al
  42317e:	js     0x4231b5
  423180:	imul   ecx,DWORD PTR [edi*2-0x61f7032c],0x4e
  423188:	pop    edi
  423189:	add    BYTE PTR [edi+0x1],dl
  42318c:	xor    BYTE PTR [edx],dh
  42318e:	xor    esp,0x58576c68
  423194:	aad    0x0
  423196:	and    al,0x7
  423198:	bound  ebp,QWORD PTR [ebx+edx*1+0x15]
  42319c:	jne    0x423203
  42319e:	add    al,0x5
  4231a0:	jno    0x423207
  4231a2:	(bad)  
  4231a3:	push   edi
  4231a4:	outs   dx,DWORD PTR ds:[esi]
  4231a5:	push   0x3368fbfa
  4231aa:	adc    eax,0x36c60be
  4231af:	pop    eax
  4231b0:	jne    0x4231b2
  4231b2:	fdivp  st(5),st
  4231b4:	jo     0x42321b
  4231b6:	vpunpcklwd ymm6,ymm0,YMMWORD PTR [esp+eiz*4+0x9]
  4231bc:	pop    esi
  4231bd:	arpl   sp,cx
  4231bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231c0:	outs   dx,BYTE PTR ds:[esi]
  4231c1:	ins    BYTE PTR es:[edi],dx
  4231c2:	xchg   esi,eax
  4231c3:	push   edi
  4231c4:	ja     0x4231c6
  4231c6:	sahf   
  4231c7:	std    
  4231c8:	jo     0x42322f
  4231ca:	push   ebp
  4231cb:	(bad)  
  4231cc:	popa   
  4231cd:	je     0x423173
  4231cf:	or     DWORD PTR [edx+0x61],esp
  4231d2:	dec    ebx
  4231d3:	cmc    
  4231d4:	push   ecx
  4231d5:	jb     0x42321a
  4231d7:	cdq    
  4231d8:	cld    
  4231d9:	call   FWORD PTR [eax]
  4231db:	imul   BYTE PTR [edx+0x69]
  4231de:	add    DWORD PTR [edx],eax
  4231e0:	jno    0x423210
	...
  42320a:	add    BYTE PTR [eax],al
  42320c:	sti    
  42320d:	cli    
  42320e:	push   0x4f5e8200
  423213:	je     0x42326a
  423215:	lods   al,BYTE PTR ds:[esi]
  423216:	jo     0x42328a
  423218:	dec    esi
  423219:	sahf   
  42321a:	cld    
  42321b:	call   DWORD PTR [edi+0x45744f5e]
  423221:	lods   eax,DWORD PTR ds:[esi]
  423222:	aas    
  423223:	push   0x3e1655
  423228:	imul   ebx,DWORD PTR [esi+0x4f],0x74
  42322c:	ds jo  0x423207
  42322f:	ins    BYTE PTR es:[edi],dx
  423230:	not    ebx
  423232:	mov    ah,0x3e
  423234:	ds into 
  423236:	add    edx,DWORD PTR [ecx-0x36]
  423239:	iret   
  42323a:	aad    0x73
  42323c:	int3   
  42323d:	add    BYTE PTR [edx+ebp*8],0x3e
  423241:	jno    0x4231fb
  423243:	jno    0x4232c2
  423245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423246:	mov    al,0x4d
  423248:	xchg   DWORD PTR [ebx],eax
  42324a:	add    DWORD PTR [esi],ecx
  42324c:	aas    
  42324d:	adc    eax,0xa88d71b5
  423252:	mov    dl,0x46
  423254:	jno    0x42321a
  423256:	add    BYTE PTR [ecx-0x5a],dh
  423259:	mov    al,ds:0x9b8e5eb9
  42325e:	fisub  WORD PTR [ebx-0x6e]
  423261:	adc    BYTE PTR [ecx],al
  423263:	ss ds jmp 0x423205
  423267:	bound  ebp,QWORD PTR [edx+0x11]
  42326a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42326b:	arpl   WORD PTR [edx-0xa],sp
  42326e:	add    BYTE PTR [edx],ch
	...
  423298:	add    BYTE PTR [eax],al
  42329a:	fldenv ds:[edi-0x4a16998d]
  4232a1:	jae    0x4232ff
  4232a3:	fistp  DWORD PTR [esi+0xdf5b5e]
  4232a9:	inc    edi
  4232aa:	ds push ebp
  4232ac:	mov    ds:0xb81f2560,al
  4232b1:	push   DWORD PTR [ecx+0x19610459]
  4232b7:	sbb    ah,BYTE PTR [edx+0x4281d62]
  4232bd:	es ds and eax,0x170d6ca0
  4232c4:	mov    ch,0x6c
  4232c6:	sbb    eax,0x3e73a71d
  4232cb:	js     0x4232d1
  4232cd:	jno    0x4232b2
  4232cf:	pop    edx
  4232d0:	adc    eax,0x29d271a8
  4232d5:	add    al,0xef
  4232d7:	aaa    
  4232d8:	add    ebp,DWORD PTR [ecx+0x3e746de]
  4232de:	sbb    BYTE PTR [ebx-0x7],bl
  4232e1:	test   al,0xde
  4232e3:	dec    eax
  4232e4:	out    0x3,eax
  4232e6:	add    ebx,DWORD PTR [ebx-0x6]
  4232e9:	test   al,0xcd
  4232eb:	dec    ebp
  4232ec:	(bad)  
  4232ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ef:	inc    edx
  4232f0:	xlat   BYTE PTR ds:[ebx]
  4232f1:	mov    bh,0x31
  4232f3:	rol    BYTE PTR [edi],cl
  4232f5:	add    al,0x93
  4232f7:	cs test al,0xd6
  4232fa:	lods   eax,DWORD PTR ds:[esi]
  4232fb:	cmp    al,0xd9
  4232fd:	mov    bh,0x0
	...
  423327:	add    BYTE PTR [ebx+ecx*2+0x4e8b03e7],cl
  42332e:	into   
  42332f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423330:	xchg   esi,eax
  423331:	mov    ?,ecx
  423333:	loope  0x4232d2
  423335:	aas    
  423336:	mov    ebx,0xb35b8503
  42333b:	mov    ds:0xb6b43790,al
  423340:	pop    esp
  423341:	dec    ebp
  423342:	mov    bh,0xb5
  423344:	push   edx
  423345:	cmp    DWORD PTR [eax-0x18e3a361],eax
  42334b:	add    esi,DWORD PTR [ecx+0x5b]
  42334e:	xchg   esp,eax
  42334f:	mov    eax,ds:0xa7884255
  423354:	ins    BYTE PTR es:[edi],dx
  423355:	dec    esi
  423356:	test   BYTE PTR [ebp-0x55a9b2f7],dh
  42335c:	sbb    BYTE PTR [edi],bh
  42335e:	inc    esp
  42335f:	add    al,0x2d
  423361:	dec    esi
  423362:	dec    esp
  423363:	mov    dh,0x1c
  423365:	inc    ecx
  423366:	push   ebp
  423367:	loop   0x423386
  423369:	aas    
  42336a:	push   ebx
  42336b:	add    al,0x3e
  42336d:	pop    ebx
  42336e:	out    0x3,eax
  423370:	ds pop ebx
  423372:	add    cl,ch
  423374:	cmp    eax,0x3de9005b
  423379:	pop    ebx
  42337a:	add    cl,ch
  42337c:	cmp    eax,0x3de9005b
  423381:	pop    ebx
  423382:	add    cl,ch
  423384:	cmp    eax,0x3de9005b
  423389:	pop    ebx
  42338a:	add    cl,ch
	...
  4233b4:	add    BYTE PTR [eax],al
  4233b6:	cmp    eax,0x3de9005b
  4233bb:	pop    ebx
  4233bc:	add    cl,ch
  4233be:	cmp    eax,0x3de9005b
  4233c3:	pop    ebx
  4233c4:	add    cl,ch
  4233c6:	cmp    eax,0x3de9005b
  4233cb:	pop    ebx
  4233cc:	add    cl,ch
  4233ce:	cmp    eax,0x3de9005b
  4233d3:	pop    ebx
  4233d4:	add    cl,ch
  4233d6:	cmp    eax,0x3de9005b
  4233db:	pop    ebx
  4233dc:	add    cl,ch
  4233de:	cmp    eax,0x3de9005b
  4233e3:	pop    ebx
  4233e4:	add    cl,ch
  4233e6:	cmp    eax,0x3de9005b
  4233eb:	pop    ebx
  4233ec:	add    cl,ch
  4233ee:	cmp    eax,0x3de9005b
  4233f3:	pop    ebx
  4233f4:	add    cl,ch
  4233f6:	cmp    eax,0x3de9005b
  4233fb:	pop    ebx
  4233fc:	add    cl,ch
  4233fe:	cmp    eax,0x3de9005b
  423403:	pop    ebx
  423404:	add    cl,ch
  423406:	cmp    eax,0x3de9005b
  42340b:	pop    ebx
  42340c:	add    cl,ch
  42340e:	cmp    eax,0x3de9005b
  423413:	pop    ebx
  423414:	add    BYTE PTR [eax],al
  423416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423417:	pop    esp
	...
  423444:	xchg   edi,eax
  423445:	pop    esp
  423446:	add    BYTE PTR [eax],al
  423448:	xchg   edi,eax
  423449:	pop    esp
  42344a:	add    BYTE PTR [eax],al
  42344c:	addr16 pop esp
  42344e:	add    BYTE PTR [eax],al
  423450:	addr16 pop esp
  423452:	add    BYTE PTR [eax],al
  423454:	push   edi
  423455:	pop    esp
  423456:	add    BYTE PTR [eax],al
  423458:	push   edi
  423459:	pop    esp
  42345a:	add    BYTE PTR [eax],al
  42345c:	addr16 pop esp
  42345e:	add    BYTE PTR [eax],al
  423460:	addr16 pop esp
  423462:	add    BYTE PTR [eax],al
  423464:	push   edi
  423465:	pop    esp
  423466:	add    BYTE PTR [eax],al
  423468:	push   edi
  423469:	pop    esp
  42346a:	add    BYTE PTR [eax],al
  42346c:	daa    
  42346d:	pop    esp
  42346e:	add    BYTE PTR [eax],al
  423470:	daa    
  423471:	pop    esp
  423472:	add    BYTE PTR [eax],al
  423474:	pop    ss
  423475:	pop    esp
  423476:	add    BYTE PTR [eax],al
  423478:	pop    ss
  423479:	pop    esp
  42347a:	add    BYTE PTR [eax],al
  42347c:	daa    
  42347d:	pop    esp
  42347e:	add    BYTE PTR [eax],al
  423480:	daa    
  423481:	pop    esp
  423482:	add    BYTE PTR [eax],al
  423484:	pop    ss
  423485:	pop    esp
  423486:	add    BYTE PTR [eax],al
  423488:	pop    ss
  423489:	pop    esp
  42348a:	add    BYTE PTR [eax],al
  42348c:	out    0x5b,eax
  42348e:	add    BYTE PTR [eax],al
  423490:	out    0x5b,eax
  423492:	add    BYTE PTR [eax],al
  423494:	xlat   BYTE PTR ds:[ebx]
  423495:	pop    ebx
  423496:	add    BYTE PTR [eax],al
  423498:	mov    esp,esp
  42349a:	jmp    0x4234ed
  42349c:	lds    edx,FWORD PTR ds:0xe3468a08
  4234a2:	dec    edx
  4234a3:	push   DWORD PTR [ebp+0xc35ab5]
	...
  4234d1:	add    BYTE PTR [ebx-0x1c],ch
  4234d4:	jmp    0x423527
  4234d6:	adc    BYTE PTR [eax],ch
  4234d8:	xor    ecx,ecx
  4234da:	sbb    ah,ah
  4234dc:	outs   dx,BYTE PTR ds:[esi]
  4234dd:	xor    BYTE PTR [ebp+0x288b0c48],dh
  4234e3:	outs   dx,DWORD PTR ds:[esi]
  4234e4:	mov    DWORD PTR [esi+0x46],eax
  4234e7:	loop   0x42352b
  4234e9:	cld    
  4234ea:	lds    edx,FWORD PTR [eax+0x20]
  4234ed:	mov    edx,DWORD PTR [eax-0x25]
  4234f0:	cmp    al,0x6b
  4234f2:	or     bl,BYTE PTR [eax-0x80]
  4234f5:	aas    
  4234f6:	add    eax,0x67eb0247
  4234fb:	das    
  4234fc:	pop    esi
  4234fd:	mov    esp,DWORD PTR [ebx+0x2d]
  423500:	ror    esp,0xb
  423503:	in     al,0xeb
  423505:	sub    DWORD PTR [edx+0x76],0xffffff89
  423509:	inc    ebp
  42350a:	inc    esi
  42350b:	loop   0x42354f
  42350d:	loopne 0x4234c4
  42350f:	sbb    eax,0xbaeb8be0
  423514:	add    BYTE PTR [ecx+0x7a],dl
  423517:	in     al,0x52
  423519:	in     al,0xc5
  42351b:	sbb    ah,ah
  42351d:	mov    esi,DWORD PTR [esi+0x53]
  423520:	add    DWORD PTR [ebp+0x36],ecx
  423523:	in     al,0x4a
  423525:	clc    
  423526:	lds    ebp,FWORD PTR [eax]
  423528:	clc    
  423529:	mov    edi,DWORD PTR [edi+esi*2+0x1]
  42352d:	inc    ebp
  42352e:	ss in  al,0x42
  423531:	call   0x8c3a55eb
	...
  42355e:	add    BYTE PTR [eax],al
  423560:	(bad)  
  423561:	jnp    0x423564
  423563:	push   ebp
  423564:	inc    esi
  423565:	in     al,0x52
  423567:	lock mov ch,0x18
  42356a:	clc    
  42356b:	mov    esi,DWORD PTR [esi+0x6f]
  42356e:	add    DWORD PTR [ebp+0x46],ecx
  423571:	in     al,0x4a
  423573:	cld    
  423574:	stc    
  423575:	sbb    ah,dh
  423577:	add    BYTE PTR [esi],bh
  423579:	pop    ebx
  42357a:	add    bl,ch
  42357c:	aaa    
  42357d:	loop   0x4235d1
  42357f:	hlt    
  423580:	mov    ebp,0xb88fe99
  423585:	(bad)  
  423586:	mov    BYTE PTR [ebp-0x5a],al
  423589:	loop   0x4235d5
  42358b:	hlt    
  42358c:	and    ebx,DWORD PTR gs:[eax]
  42358f:	jae    0x423597
  423591:	loop   0x4235e5
  423593:	lock lds ebx,FWORD PTR [ecx+0x1]
  423597:	inc    ebp
  423598:	ss in  al,0x42
  42359b:	fcom   QWORD PTR [ebx*2+0x1b3cac68]
  4235a2:	add    BYTE PTR [ebx-0x17b150fd],cl
  4235a8:	push   cs
  4235a9:	pop    esp
  4235aa:	add    BYTE PTR [eax],al
  4235ac:	mov    ebp,0x7e850b97
  4235b1:	dec    eax
  4235b2:	sbb    DWORD PTR [ebx+0x4588c6eb],ecx
  4235b8:	push   esi
  4235b9:	pop    esi
  4235ba:	mov    ch,0xc
  4235bc:	out    dx,al
  4235bd:	jecxz  0x423609
  4235bf:	in     al,dx
  4235c0:	lds    esp,FWORD PTR [edi]
  4235c2:	in     al,dx
  4235c3:	mov    eax,DWORD PTR [eax]
	...
  4235ed:	add    BYTE PTR [ebx-0x31],bh
  4235f0:	mov    BYTE PTR [esi+ecx*8],al
  4235f3:	pop    ecx
  4235f4:	inc    ebx
  4235f5:	or     BYTE PTR ds:0xe4d8960,dl
  4235fb:	fidivr DWORD PTR [esi-0xfe038fc]
  423601:	jmp    0x4235e5
  423603:	mov    eax,eax
  423605:	mov    ebx,DWORD PTR [ebx]
  423607:	xor    cl,al
  423609:	int3   
  42360a:	or     bl,BYTE PTR [edi-0x60fd3335]
  423610:	retf   
  423611:	int3   
  423612:	cli    
  423613:	sahf   
  423614:	retf   
  423615:	int3   
  423616:	mov    esp,edx
  423618:	jmp    0x42359d
  42361a:	jmp    0xfccd:0xd105e872
  423621:	mov    DWORD PTR [ebx-0x29ba773d],eax
  423627:	sub    ch,al
  423629:	sub    DWORD PTR [ecx+0x7a83fccd],edi
  42362f:	push   esi
  423630:	mov    eax,ds:0x1c31f4
  423635:	push   0x4058e2
  42363a:	lds    ebx,FWORD PTR [edi]
  42363c:	call   0xf4a9c792
  423641:	ja     0x423642
  423643:	pop    edx
  423644:	mov    eax,ds:0x1c09f8
  423649:	push   0x3e
  42364b:	inc    ecx
  42364c:	add    BYTE PTR [eax-0x7e],ch
  42364f:	pop    eax
  423650:	inc    eax
	...
  423679:	add    BYTE PTR [eax],al
  42367b:	add    BYTE PTR [ecx+0x67],ch
  42367e:	clc    
  42367f:	ja     0x423680
  423681:	pop    edx
  423682:	xchg   DWORD PTR [ebp+0x66],eax
  423685:	xchg   ebp,eax
  423686:	inc    edx
  423687:	cld    
  423688:	ds pop ebx
  42368a:	add    BYTE PTR [eax],al
  42368c:	push   ebp
  42368d:	arpl   WORD PTR [ecx-0x3e26bdab],cx
  423693:	add    edi,eax
  423695:	es cld 
  423697:	xor    DWORD PTR [ebx+0x5f7307cf],0xffffffe0
  42369e:	inc    edx
  42369f:	cld    
  4236a0:	mov    ch,0x5f
  4236a2:	or     DWORD PTR [esp+edi*1-0x3aaeffe5],0x26
  4236aa:	call   0xf4a94001
  4236af:	ja     0x423730
  4236b1:	pop    ebx
  4236b2:	mov    DWORD PTR [ebp-0x6],ecx
  4236b5:	loop   0x4236ba
  4236b7:	(bad)  
  4236b8:	jmp    0x88ab:0xd5003f44
  4236bf:	in     eax,0x83
  4236c1:	cwde   
  4236c2:	retf   
  4236c3:	int3   
  4236c4:	or     ah,BYTE PTR [eax-0x5ffd3335]
  4236ca:	retf   
  4236cb:	int3   
  4236cc:	cli    
  4236cd:	lahf   
  4236ce:	retf   
  4236cf:	int3   
  4236d0:	imul   esp,eax,0xffffffeb
  4236d3:	mov    eax,ds:0x3f530e
  4236d8:	jo     0x4236ba
  4236da:	aas    
  4236db:	xor    BYTE PTR [ebp+0x3e081e],dh
	...
  423709:	add    BYTE PTR [edi+0x7d5d0823],dh
  42370f:	lahf   
  423710:	retf   
  423711:	int3   
  423712:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423719:	int3   
  42371a:	jmp    0x4236fb
  42371c:	jmp    0x4236a9
  42371e:	add    ebx,DWORD PTR [edi+0x50]
  423721:	mov    eax,DWORD PTR [ebx]
  423723:	arpl   WORD PTR [edi-0x1],cx
  423726:	push   ebx
  423727:	(bad)  
  423728:	je     0x42376b
  42372a:	ds cs ror esp,0x8a
  42372f:	lahf   
  423730:	retf   
  423731:	int3   
  423732:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423739:	int3   
  42373a:	jmp    0x42371b
  42373c:	jmp    0x4236c1
  42373e:	sub    ah,BYTE PTR [ebx+0x6a]
  423741:	add    BYTE PTR [ebx+ebx*2+0x1b3cdc68],ah
  423748:	add    bh,bh
  42374a:	dec    ebx
  42374b:	shl    DWORD PTR [ecx+eax*2+0x3e],cl
  42374f:	loop   0x423793
  423751:	clc    
  423752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423753:	ret    
  423754:	add    DWORD PTR [eax+0x3e],eax
  423757:	loopne 0x42379b
  423759:	clc    
  42375a:	outs   dx,BYTE PTR ds:[esi]
  42375b:	ret    
  42375c:	mov    ecx,0x80cbf9ff
  423761:	les    eax,FWORD PTR [esi-0x1e]
  423764:	inc    edx
  423765:	cld    
  423766:	mov    ch,0x1d
  423768:	adc    BYTE PTR [ecx-0x4b],dl
  42376b:	and    eax,0x520c
	...
  423798:	lds    edx,FWORD PTR ds:0x25d15008
  42379e:	cld    
  42379f:	mov    esp,ebx
  4237a1:	sub    eax,0xe06bccc1
  4237a6:	jmp    0x4237f9
  4237a8:	adc    DWORD PTR ds:0x5b3e00fc,0xe037eb00
  4237b2:	inc    edx
  4237b3:	cld    
  4237b4:	mov    ebp,0x388fe9a
  4237b9:	iret   
  4237ba:	mov    BYTE PTR [ebp-0x6e],cl
  4237bd:	(bad)  
  4237be:	dec    ebx
  4237bf:	adc    BYTE PTR ds:0x3655896c,cl
  4237c5:	pop    eax
  4237c6:	push   ebx
  4237c7:	cld    
  4237c8:	dec    ecx
  4237c9:	add    eax,0x5f038b02
  4237ce:	add    DWORD PTR [ebp+0x6a],ecx
  4237d1:	pop    ebx
  4237d2:	mov    dh,0x11
  4237d4:	and    eax,0x96077399
  4237d9:	pop    ecx
  4237da:	add    BYTE PTR [eax],al
  4237dc:	rol    BYTE PTR ds:[ebx],0xeb
  4237e0:	outs   dx,BYTE PTR ds:[esi]
  4237e1:	xchg   eax,eax
  4237e3:	mov    ebx,DWORD PTR [ebx+0x2d]
  4237e6:	ror    esp,0xa
  4237e9:	cwde   
  4237ea:	retf   
  4237eb:	int3   
  4237ec:	add    bl,BYTE PTR [eax-0x68053335]
  4237f2:	retf   
  4237f3:	int3   
  4237f4:	mov    edx,esi
  4237f6:	jmp    0x4237b1
  4237f8:	ss pop ebx
	...
  423826:	call   0x782b:0x3b8906d6
  42382d:	inc    ecx
  42382e:	ds sub cl,al
  423831:	int3   
  423832:	or     bl,BYTE PTR [eax-0x67fd3335]
  423838:	retf   
  423839:	int3   
  42383a:	cli    
  42383b:	xchg   edi,eax
  42383c:	retf   
  42383d:	int3   
  42383e:	mov    edx,esi
  423840:	jmp    0x4237c5
  423842:	jmp    0x77de:0x4645896b
  423849:	add    al,0x3e
  42384b:	pop    edx
  42384c:	test   BYTE PTR [eax-0x74ffa4c2],cl
  423852:	or     edx,DWORD PTR [ebx-0x77]
  423855:	push   ecx
  423856:	cmp    bl,dh
  423858:	jmp    0x86f7c765
  42385d:	push   ebp
  42385e:	stos   BYTE PTR es:[edi],al
  42385f:	(bad)  
  423860:	inc    edx
  423861:	or     BYTE PTR [ebp-0x476f865],bh
  423867:	retf   0x45c4
  42386a:	mov    bl,BYTE PTR [ebx+0x0]
  42386d:	add    BYTE PTR [esi],bh
  42386f:	mov    dh,0x6
  423871:	mov    ecx,DWORD PTR [ebx]
  423873:	mov    DWORD PTR [eax+0x4ad43fc1],0xfc30b5fc
  42387d:	cmp    ecx,DWORD PTR [ebx]
  42387f:	iret   
  423880:	jo     0x4238c8
  423882:	lds    esp,FWORD PTR [eax]
  423884:	cld    
  423885:	mov    eax,DWORD PTR [ebx]
  423887:	retf   
  423888:	or     al,0xb7
	...
  4238b2:	add    BYTE PTR [eax],al
  4238b4:	xor    bl,BYTE PTR [edi+edi*4]
  4238b7:	cli    
  4238b8:	xor    bl,dh
  4238ba:	stc    
  4238bb:	add    esi,DWORD PTR [ebx+0x3245898d]
  4238c1:	(bad)  
  4238c2:	dec    edx
  4238c3:	lock cmp DWORD PTR [edx],edx
  4238c6:	adc    al,0x41
  4238c8:	mov    edi,0x3e0ffcbc
  4238cd:	pop    ebx
  4238ce:	xchg   DWORD PTR [ebp+0x16],edx
  4238d1:	(bad)  
  4238d2:	inc    edx
  4238d3:	or     BYTE PTR [ebp+0x36030c17],dh
  4238d9:	(bad)  
  4238da:	push   edx
  4238db:	clc    
  4238dc:	lds    ebx,FWORD PTR [esi+0xf]
  4238df:	add    edi,DWORD PTR [ebx+0x6b]
  4238e2:	mov    DWORD PTR [ebp+0x36],ecx
  4238e5:	(bad)  
  4238e6:	push   edx
  4238e7:	or     al,0x3d
  4238e9:	ins    BYTE PTR es:[edi],dx
  4238ea:	mov    DWORD PTR [ebp-0x2a],ecx
  4238ed:	rol    DWORD PTR [ebx],cl
  4238ef:	or     ah,ch
  4238f1:	xrelease mov BYTE PTR [ebp+0x36],dl
  4238f5:	(bad)  
  4238f6:	inc    edx
  4238f7:	or     BYTE PTR ds:0x389041d,bh
  4238fd:	push   ebx
  4238fe:	out    0x6b,eax
  423900:	mov    cl,0xc9
  423902:	cld    
  423903:	mov    esp,DWORD PTR [ebx+0xbccc127]
  423909:	(bad)  
  42390a:	jmp    0x42388f
  42390c:	stos   BYTE PTR es:[edi],al
  42390d:	jle    0x423898
  42390f:	inc    ebp
  423910:	inc    esi
  423911:	aam    0x42
  423913:	in     al,0xb5
  423915:	pop    ss
  423916:	in     al,0x8b
	...
  423940:	add    BYTE PTR [eax],al
  423942:	jmp    0x423902
  423944:	add    BYTE PTR [ecx+0x3a],dl
  423947:	aam    0x52
  423949:	call   0x8c2a5913
  42394e:	mov    dh,0xda
  423950:	(bad)  
  423951:	(bad)  
  423952:	ds aam 0x4a
  423955:	lock mov ebp,0x4100f047
  42395b:	(bad)  
  42395d:	add    BYTE PTR [esi],bh
  42395f:	pop    ebx
  423960:	mov    DWORD PTR [ebp+0x36],edx
  423963:	pop    esi
  423964:	push   ebx
  423965:	lock (bad) 
  423967:	cs loopne 0x4238f5
  42396a:	jnp    0x423927
  42396c:	cmp    BYTE PTR [eax+0x4e],0x5b
  423970:	or     eax,0x5c1b84
  423975:	add    BYTE PTR [ebx+ebx*2+0x16c5006a],ah
  42397c:	loopne 0x423909
  42397e:	jae    0x4239d3
  423980:	add    DWORD PTR [ecx+0x32],edx
  423983:	sub    eax,0x50f615fd
  423988:	aas    
  423989:	add    bh,al
  42398b:	push   ds
  42398c:	cld    
  42398d:	mov    eax,DWORD PTR [ebx+0x3e3880bb]
  423993:	dec    edi
  423994:	pop    ss
  423995:	mov    ecx,DWORD PTR [ebx+0x465588bb]
  42399b:	pop    esp
  42399c:	jns    0x45caf115
  4239a2:	(bad)  
  4239a4:	dec    edx
  4239a5:	or     BYTE PTR [eax],al
	...
  4239cf:	add    BYTE PTR ds:0x3891013,bh
  4239d5:	iret   
  4239d6:	call   0xe070eef2
  4239db:	mov    edi,ebx
  4239dd:	push   edx
  4239de:	add    DWORD PTR [edx+0x2e],eax
  4239e1:	rol    BYTE PTR [edx-0xc],cl
  4239e4:	lds    edx,FWORD PTR [esi]
  4239e6:	loopne 0x423973
  4239e8:	repz push edx
  4239ea:	add    DWORD PTR [ecx],edx
  4239ec:	mov    bh,0x2e
  4239ee:	in     al,dx
  4239ef:	mov    DWORD PTR [ebx],0x3effffc3
  4239f5:	pop    ebx
  4239f6:	mov    DWORD PTR [ebp+0x5e],eax
  4239f9:	fdiv   QWORD PTR [edi+0x10]
  4239fc:	ds dec edi
  4239fe:	or     eax,0x80bb0b8b
  423a03:	cmp    DWORD PTR [esi],edi
  423a05:	dec    edi
  423a06:	add    eax,0xfec303c7
  423a0b:	(bad)  
  423a0c:	ds pop ebx
  423a0e:	mov    DWORD PTR [ebp+0x32],edx
  423a11:	fdivr  QWORD PTR [ecx]
  423a13:	add    BYTE PTR [edx+0x3245893a],ch
  423a19:	aam    0x7
  423a1b:	sbb    DWORD PTR [edi],0xbe00005b
  423a21:	dec    esi
  423a22:	sbb    al,0x8b
  423a24:	imul   ecx,edi,0xffffff88
  423a27:	add    ah,BYTE PTR [ebx-0x38]
  423a2a:	cld    
  423a2b:	inc    DWORD PTR [ecx-0x5b276d5]
  423a31:	sub    eax,ebp
  423a33:	mov    ch,0x0
	...
  423a5d:	add    bl,dh
  423a5f:	(bad)  
  423a60:	cld    
  423a61:	add    DWORD PTR [edx],0x53
  423a64:	xchg   DWORD PTR [ebp+0x2],eax
  423a67:	mov    ah,0x1b
  423a69:	mov    esi,DWORD PTR [ebx-0x31]
  423a6c:	mov    BYTE PTR [edx],al
  423a6e:	lds    edx,FWORD PTR ds:0x53728d08
  423a74:	add    dl,BYTE PTR [edx-0x4b]
  423a77:	sbb    eax,0xefa650fc
  423a7c:	cli    
  423a7d:	push   DWORD PTR [ecx-0x48f73c25]
  423a83:	sbb    eax,0xcef38bdc
  423a88:	mov    BYTE PTR [ebp+0x7a],dl
  423a8b:	ror    DWORD PTR [esi],1
  423a8d:	mov    edi,ebx
  423a8f:	into   
  423a90:	add    al,0x42
  423a93:	rol    BYTE PTR [edx-0xc],cl
  423a96:	mov    ch,0x15
  423a98:	in     al,dx
  423a99:	cmp    DWORD PTR [edi+0x5e],0xffffff87
  423a9d:	dec    ebp
  423a9e:	bound  esi,QWORD PTR [ebx-0x44ec746c]
  423aa4:	add    dl,0x4a
  423aa7:	rcl    BYTE PTR [edx-0x20],cl
  423aaa:	addr16 pop eax
  423aac:	std    
  423aad:	call   DWORD PTR [ecx-0x2d]
  423ab0:	loop   0x423b0f
  423ab2:	jge    0x423a4a
  423ab4:	retf   
  423ab5:	int3   
  423ab6:	jmp    0x423a8b
  423ab8:	jmp    0x423a3d
  423aba:	sub    dl,BYTE PTR [eax+ebp*2-0x10]
  423abe:	cmp    al,0x1b
  423ac0:	add    bh,bh
	...
  423aea:	add    BYTE PTR [eax],al
  423aec:	push   ebx
  423aed:	pop    ebx
  423aee:	js     0x423b31
  423af0:	ds aam 0x42
  423af3:	clc    
  423af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af5:	mov    DWORD PTR [ecx],0x42d23e40
  423afb:	clc    
  423afc:	outs   dx,BYTE PTR ds:[esi]
  423afd:	mov    bl,0x3d
  423aff:	std    
  423b00:	add    edi,eax
  423b02:	add    ah,0x46
  423b05:	aam    0x42
  423b07:	cld    
  423b08:	lds    ebx,FWORD PTR [eax]
  423b0a:	adc    BYTE PTR [ecx-0x4b],dl
  423b0d:	xor    BYTE PTR [edx+edx*2],cl
  423b10:	mov    ch,0x20
  423b12:	or     BYTE PTR [eax-0x27],dl
  423b15:	xor    ah,bh
  423b17:	mov    ebx,ebx
  423b19:	sub    cl,al
  423b1b:	int3   
  423b1c:	cli    
  423b1d:	xchg   edi,eax
  423b1e:	retf   
  423b1f:	int3   
  423b20:	imul   edx,edx,0xffffffeb
  423b23:	mov    eax,ds:0x3f431a
  423b28:	js     0x423b85
  423b2a:	push   0x782f538b
  423b2f:	inc    ecx
  423b30:	ds aam 0x4f
  423b33:	add    esp,ecx
  423b35:	call   0xccc1:0x283b5087
  423b3c:	jp     0x423ad5
  423b3e:	retf   
  423b3f:	int3   
  423b40:	jmp    0x423b13
  423b42:	jmp    0x423ac7
  423b44:	push   0x57
  423b46:	lahf   
  423b47:	push   eax
  423b48:	neg    BYTE PTR [ebx]
  423b4a:	add    BYTE PTR [ebx+0x3ec78a8c],cl
	...
  423b78:	add    BYTE PTR [eax],al
  423b7a:	mov    ch,0x1b
  423b7c:	xor    BYTE PTR [ebx+0x3ed1d26c],cl
  423b82:	lds    edx,FWORD PTR [ebx]
  423b84:	or     al,0x8b
  423b86:	ins    BYTE PTR es:[edi],dx
  423b87:	aam    0x4a
  423b89:	hlt    
  423b8a:	mov    ch,0x20
  423b8c:	hlt    
  423b8d:	mov    eax,DWORD PTR [esi+0x364d8757]
  423b93:	rcl    BYTE PTR [edx-0x8],cl
  423b96:	mov    bh,0x2f
  423b98:	cld    
  423b99:	mov    eax,0x5b3f
  423b9e:	ret    
  423b9f:	call   0xf8:0x47bd4473
  423ba6:	xchg   ebx,eax
  423ba7:	pop    edi
  423ba8:	xor    eax,eax
  423baa:	adc    eax,0xf64d8987
  423baf:	ror    DWORD PTR [esi+0x18],1
  423bb2:	xor    eax,0x47750830
  423bb7:	rol    BYTE PTR [edx-0x8],cl
  423bba:	mov    ch,0x17
  423bbc:	or     al,0x89
  423bbe:	xchg   BYTE PTR [edi-0x77],ah
  423bc1:	push   ebp
  423bc2:	(bad)  
  423bc3:	rol    DWORD PTR [edx+0x10],1
  423bc6:	mov    bh,0x18
  423bc8:	sbb    BYTE PTR [eax+0x5b3f],bh
  423bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bcf:	bound  ecx,QWORD PTR [ecx+0xed1b64d]
  423bd5:	mov    DWORD PTR [ebx],edx
  423bd7:	ret    
  423bd8:	mov    BYTE PTR [ebp-0x5a],al
  423bdb:	add    DWORD PTR [ebx-0x4],0x0
	...
  423c06:	add    BYTE PTR [eax],al
  423c08:	adc    ebx,DWORD PTR [edi+0x31]
  423c0b:	shl    BYTE PTR [ebp+0x4db3e95e],0x9b
  423c12:	mov    ch,ah
  423c14:	jecxz  0x423baf
  423c16:	retf   
  423c17:	int3   
  423c18:	mov    dl,BYTE PTR [esi-0x697d3335]
  423c1e:	retf   
  423c1f:	int3   
  423c20:	jp     0x423bb8
  423c22:	retf   
  423c23:	int3   
  423c24:	or     edx,edx
  423c26:	jmp    0x423bab
  423c28:	push   0x62
  423c2a:	lds    eax,FWORD PTR [ebp+0x56]
  423c2d:	pop    edx
  423c2e:	xor    BYTE PTR [eax],al
  423c30:	xor    eax,DWORD PTR ds:[ebx+eax*1]
  423c34:	(bad)  
  423c35:	pop    edx
  423c36:	lahf   
  423c37:	cmp    al,0xb6
  423c39:	sbb    al,BYTE PTR [eax]
  423c3b:	push   eax
  423c3c:	es sub esp,edi
  423c3f:	jmp    FWORD PTR [ecx]
  423c41:	fld    st(3)
  423c43:	or     BYTE PTR [edi+0x7e6af41e],dh
  423c49:	ror    BYTE PTR [edx-0x8],1
  423c4c:	outs   dx,DWORD PTR ds:[esi]
  423c4d:	rcl    BYTE PTR [edx],1
  423c4f:	sbb    al,0x86
  423c51:	sbb    al,BYTE PTR [eax]
  423c53:	mov    edi,DWORD PTR [ebx+ebp*1+0x50]
  423c57:	push   0x3e
  423c59:	les    edx,FWORD PTR [edx-0xc]
  423c5c:	popf   
  423c5d:	outs   dx,DWORD PTR ds:[esi]
  423c5e:	js     0x423ca1
  423c60:	fdivr  DWORD PTR ds:[edx]
  423c63:	adc    al,0x66
  423c65:	sbb    al,BYTE PTR [eax]
  423c67:	add    BYTE PTR [ebx+0x5c],dl
  423c6a:	mov    eax,0x2
	...
  423c93:	add    BYTE PTR [eax],al
  423c95:	add    BYTE PTR [esi],bh
  423c97:	pop    ebx
  423c98:	add    bl,ch
  423c9a:	push   esp
  423c9b:	ror    BYTE PTR [edx],1
  423c9d:	add    BYTE PTR [ebx+ebx*1],bh
  423ca0:	add    BYTE PTR [ecx+0x67cb0b],cl
  423ca6:	sub    DWORD PTR [edx+0x0],ebx
  423ca9:	push   0x40593e
  423cae:	mov    ch,0x6e
  423cb0:	adc    al,0x78
  423cb2:	call   FWORD PTR [edx+0x7f]
  423cb5:	ret    0x593e
  423cb8:	add    BYTE PTR [eax],al
  423cba:	in     al,dx
  423cbb:	mov    dl,0x9d
  423cbd:	inc    BYTE PTR [ecx+0x4ac480c4]
  423cc3:	add    eax,DWORD PTR [eax]
  423cc5:	add    bh,dh
  423cc7:	pop    edx
  423cc8:	sub    eax,DWORD PTR [eax]
  423cca:	cmp    al,0x5b
  423ccc:	add    BYTE PTR [ebx+0x41786f33],cl
  423cd2:	ds jo  0x423c9d
  423cd5:	mov    DWORD PTR [ebx+0x1f],eax
  423cd8:	js     0x423d1b
  423cda:	rcl    BYTE PTR ds:[edx],1
  423cdd:	inc    esp
  423cde:	(bad)  
  423cdf:	sbb    DWORD PTR [eax],eax
  423ce1:	push   edx
  423ce2:	fild   QWORD PTR [esi+0x78]
  423ce5:	inc    ecx
  423ce6:	sub    ecx,DWORD PTR ds:[ecx-0x17d5d1b3]
  423ced:	popf   
  423cee:	and    al,ah
  423cf0:	cld    
  423cf1:	add    DWORD PTR [edx],0x57
  423cf4:	mov    DWORD PTR ds:0x3f432a,edx
	...
  423d22:	add    BYTE PTR [eax],al
  423d24:	cmp    eax,0x6b89082e
  423d29:	mov    bl,0x88
  423d2b:	push   ebp
  423d2c:	out    0xc3,al
  423d2e:	loope  0x423cbb
  423d30:	(bad)  ds:0x96faccc1
  423d36:	retf   
  423d37:	int3   
  423d38:	mov    edx,eax
  423d3a:	jmp    0x423cc7
  423d3c:	adc    DWORD PTR [ebx+0x39],0x45
  423d40:	inc    edx
  423d41:	dec    eax
  423d42:	add    eax,0xe953838b
  423d47:	add    eax,0x458957d5
  423d4c:	dec    edx
  423d4d:	es ror esp,0x82
  423d51:	xchg   esi,eax
  423d52:	retf   
  423d53:	int3   
  423d54:	jp     0x423cec
  423d56:	retf   
  423d57:	int3   
  423d58:	or     edx,eax
  423d5a:	jmp    0x423cdf
  423d5c:	stos   BYTE PTR es:[edi],al
  423d5d:	jbe    0x423d24
  423d5f:	inc    ebp
  423d60:	xchg   edx,eax
  423d61:	pop    edx
  423d62:	nop
  423d63:	add    DWORD PTR [esi],edi
  423d65:	rol    BYTE PTR [edx+0x8],1
  423d68:	mov    bh,0x1d
  423d6a:	fmul   DWORD PTR [ebx+0x5588a30b]
  423d70:	inc    esi
  423d71:	pop    eax
  423d72:	dec    edi
  423d73:	cmp    al,0xb7
  423d75:	sub    eax,0xbafb8be0
  423d7a:	or     al,0xb7
  423d7c:	push   es
  423d7d:	outs   dx,DWORD PTR ds:[esi]
  423d7e:	mov    DWORD PTR [ebp+0x5e],edx
  423d81:	aad    0x43
  423d83:	or     ah,BYTE PTR [esi]
  423d85:	rol    BYTE PTR [edx-0x18],cl
	...
  423db0:	add    BYTE PTR [eax],al
  423db2:	(bad)  
  423db3:	outs   dx,BYTE PTR ds:[esi]
  423db4:	add    DWORD PTR [eax+0x3e],eax
  423db7:	(bad)  
  423db8:	or     bh,BYTE PTR [esi+esi*4]
  423dbb:	sbb    al,0x0
  423dbd:	push   ecx
  423dbe:	push   ss
  423dbf:	adc    edi,ecx
  423dc1:	jmp    DWORD PTR [ecx]
  423dc3:	ffreep st(3)
  423dc5:	or     bh,al
  423dc7:	sbb    al,dh
  423dc9:	push   0x7e
  423dcb:	xor    eax,DWORD PTR [eax]
  423dcd:	xor    BYTE PTR [esi],bh
  423dcf:	pop    ebx
  423dd0:	push   0x5cae00
  423dd5:	push   0x3e
  423dd7:	ret    0xf052
  423dda:	(bad)  
  423ddb:	sbb    ah,ah
  423ddd:	mov    edx,DWORD PTR [ebx-0x75bd7745]
  423de3:	sub    ecx,DWORD PTR [ecx-0x76d3b9b3]
  423de9:	push   ebp
  423dea:	fisubr DWORD PTR ds:0xc2cbc1e8
  423df0:	cld    
  423df1:	cmp    edx,0x4f
  423df4:	lds    eax,FWORD PTR [ebp-0x4e]
  423df7:	pop    ebx
  423df8:	add    BYTE PTR [eax],al
  423dfa:	ds mov dh,0x6
  423dfd:	mov    eax,DWORD PTR [ebx]
  423dff:	mov    DWORD PTR [eax+0x42d43fc0],0xe010c5f4
  423e09:	bswap  ecx
  423e0b:	sub    al,0x6
  423e0d:	cmp    ebx,esi
  423e0f:	(bad)  
  423e10:	jo     0x423e6b
  423e12:	mov    ch,0x18
  423e14:	call   0x423e9c
	...
  423e3d:	add    BYTE PTR [eax],al
  423e3f:	add    dh,dh
  423e41:	data16 add BYTE PTR [ebx+edi*8-0x2b],dh
  423e46:	dec    edx
  423e47:	call   0x528309
  423e4c:	jmp    0x41d6:0x6655897e
  423e53:	adc    ch,al
  423e55:	adc    al,ah
  423e57:	mov    ebp,edi
  423e59:	jle    0x423de6
  423e5b:	inc    esp
  423e5c:	cs ret 0x4d88
  423e60:	push   ds
  423e61:	mov    ss,edx
  423e63:	imul   DWORD PTR [edi+0x1e55897f]
  423e69:	push   edx
  423e6a:	lods   eax,DWORD PTR ds:[esi]
  423e6b:	inc    edx
  423e6c:	bound  ebp,QWORD PTR [ebx]
  423e6e:	mov    DWORD PTR [ebp+0x26],eax
  423e71:	(bad)  
  423e72:	dec    edx
  423e73:	or     BYTE PTR ds:0xb5511413,bh
  423e79:	daa    
  423e7a:	call   0xf9ba0a
  423e7f:	inc    edx
  423e80:	dec    edx
  423e81:	sub    ebp,eax
  423e83:	push   ebp
  423e84:	repz sar esp,0x83
  423e88:	add    cl,BYTE PTR [edi-0x77]
  423e8b:	dec    ebp
  423e8c:	(bad)  
  423e8d:	fnstsw WORD PTR [esi-0x17f038d8]
  423e93:	jmp    0x423e41
  423e95:	aad    0x52
  423e97:	in     al,0x6c
  423e99:	mov    bl,0xd
  423e9b:	cld    
  423e9c:	rol    ecx,0x80
  423e9f:	les    eax,FWORD PTR [edx+0x33]
  423ea2:	and    al,0x3
	...
  423ecc:	add    BYTE PTR [eax],al
  423ece:	(bad)  
  423ecf:	pop    edx
  423ed0:	lahf   
  423ed1:	cmp    al,0x26
  423ed3:	sbb    al,0x0
  423ed5:	push   eax
  423ed6:	xchg   esi,eax
  423ed7:	aad    0xf9
  423ed9:	call   FWORD PTR [ecx-0x38f73c23]
  423edf:	pop    ss
  423ee0:	fadd   QWORD PTR [ebx+0x4178834b]
  423ee6:	ds pop ebx
  423ee8:	jae    0x423ef4
  423eea:	lds    ecx,FWORD PTR [edi+0x30]
  423eed:	js     0x423eee
  423eef:	pop    edx
  423ef0:	dec    edi
  423ef1:	call   DWORD PTR [ebx]
  423ef3:	lahf   
  423ef4:	cmp    BYTE PTR ds:0x3f4326,0x3e
  423efb:	dec    eax
  423efc:	sbb    al,0x6a
  423efe:	(bad)  
  423eff:	xor    al,BYTE PTR [eax]
  423f01:	xor    BYTE PTR [esi],bh
  423f03:	pop    ebx
  423f04:	mov    DWORD PTR [ebp+0x42],edx
  423f07:	sub    al,0x89
  423f09:	inc    ebp
  423f0a:	push   ds
  423f0b:	aad    0x47
  423f0d:	xor    al,0x8f
  423f0f:	rcl    BYTE PTR [edx-0x10],0xdd
  423f13:	addr16 js 0x423f57
  423f16:	ds mov ah,0x12
  423f19:	push   0x7e
  423f1b:	xor    eax,DWORD PTR [eax]
  423f1d:	xor    BYTE PTR [esi],bh
  423f1f:	pop    ebx
  423f20:	mov    DWORD PTR [ebp+0xa],edx
  423f23:	cs push 0x0
  423f26:	add    DWORD PTR [edi],esp
  423f28:	lock mov ds:0x3f4352,eax
  423f2e:	mov    ebp,0x78147e
	...
  423f5b:	add    BYTE PTR [edi+0x5b],bh
  423f5e:	add    BYTE PTR [ebp+0x4b],dh
  423f61:	xor    eax,0x8b3e6840
  423f66:	add    BYTE PTR [eax],al
  423f68:	lds    edx,FWORD PTR [esi]
  423f6a:	cld    
  423f6b:	push   eax
  423f6c:	push   esp
  423f6d:	pop    ebx
  423f6e:	std    
  423f6f:	push   ebp
  423f70:	into   
  423f71:	cld    
  423f72:	adc    edi,DWORD PTR [eax-0x1]
  423f75:	pop    edx
  423f76:	mov    DWORD PTR [ebp-0x66],ecx
  423f79:	ror    BYTE PTR [edx-0x28],cl
  423f7c:	mov    ch,0x26
  423f7e:	fmul   DWORD PTR [ebx+0x4200a2fb]
  423f84:	pop    edx
  423f85:	rol    BYTE PTR [edx-0x20],cl
  423f88:	lds    ecx,FWORD PTR [esi]
  423f8a:	cld    
  423f8b:	push   ecx
  423f8c:	mov    ch,0x26
  423f8e:	in     al,0x52
  423f90:	fbld   TBYTE PTR [edi+0x78]
  423f93:	inc    ecx
  423f94:	ds sub ebp,eax
  423f97:	xchg   ebp,eax
  423f98:	jb     0x423f5a
  423f9a:	cld    
  423f9b:	add    DWORD PTR [edx+0x5e4d894f],0xffffffdc
  423fa2:	mov    dh,0xa4
  423fa4:	ds pop ebx
  423fa6:	add    BYTE PTR [eax],al
  423fa8:	retf   0x8984
  423fab:	push   ebp
  423fac:	pop    esi
  423fad:	aam    0x42
  423faf:	fdivr  DWORD PTR ds:0x3e009fdd
  423fb5:	pop    ebx
  423fb6:	xchg   DWORD PTR [ebp+0x22],eax
  423fb9:	aam    0x4a
  423fbb:	loopne 0x423f72
  423fbd:	gs adc al,0x78
	...
  423fe8:	add    BYTE PTR [eax],al
  423fea:	jg     0x424047
  423fec:	sub    DWORD PTR [ecx+0x52],edx
  423fef:	rcl    BYTE PTR [edx],cl
  423ff1:	inc    esp
  423ff2:	xchg   esi,eax
  423ff3:	sbb    al,BYTE PTR [eax]
  423ff5:	mov    eax,ds:0x3f4382
  423ffa:	outs   dx,BYTE PTR ds:[esi]
  423ffb:	aam    0xa
  423ffd:	adc    al,0x76
  423fff:	sbb    al,BYTE PTR [eax]
  424001:	push   ecx
  424002:	lds    esp,FWORD PTR ds:0x3fd652ec
  424008:	cli    
  424009:	jmp    ecx
  42400b:	fcmovnb st,st(3)
  42400d:	or     al,0xc5
  42400f:	adc    eax,0x67438be0
  424014:	js     0x424057
  424016:	ds pop esp
  424018:	dec    eax
  424019:	sub    BYTE PTR [edi-0x87abb3],dh
  42401f:	pop    edx
  424020:	cmp    DWORD PTR ds:0x3f4376,0x8b2b463e
  42402a:	dec    ebx
  42402b:	addr16 js 0x42406f
  42402e:	ds sub eax,0x1a16549f
  424034:	add    BYTE PTR [eax-0x4b],dl
  424037:	dec    ebp
  424038:	xor    BYTE PTR [eax-0x1],bh
  42403b:	pop    edx
  42403c:	dec    edi
  42403d:	call   0x3eff38
  424042:	mov    ebp,0x538b0b96
  424047:	addr16 js 0x42408b
  42404a:	ds sub eax,0x49e8
	...
  424078:	push   edi
  424079:	mov    edi,0x567a83fc
  42407e:	jmp    0x1c916e4
  424083:	inc    eax
  424084:	ds cli 
  424086:	cmp    edi,DWORD PTR [eax+0x7f]
  424089:	pop    ebx
  42408a:	push   eax
  42408b:	call   0x3f051a
  424090:	mov    ebp,0x7b890797
  424095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424096:	mov    BYTE PTR ds:0x3f4332,cl
  42409c:	outs   dx,DWORD PTR ds:[esi]
  42409d:	rcl    BYTE PTR [edx-0x20],cl
  4240a0:	fbld   TBYTE PTR [edi+0x78]
  4240a3:	inc    ecx
  4240a4:	ds pop edx
  4240a6:	inc    edx
  4240a7:	sub    BYTE PTR [esi+0x76300ad2],cl
  4240ad:	sbb    al,0x0
  4240af:	push   ecx
  4240b0:	(bad)  
  4240b1:	outs   dx,BYTE PTR ds:[esi]
  4240b2:	cld    
  4240b3:	jmp    ecx
  4240b5:	fcmovb st,st(3)
  4240b7:	or     al,0xc5
  4240b9:	push   0x5b7f7830
  4240be:	jg     0x424082
  4240c0:	scas   al,BYTE PTR es:[edi]
  4240c1:	dec    eax
  4240c2:	(bad)  
  4240c3:	push   DWORD PTR [edi-0x87a398]
  4240c9:	pop    edx
  4240ca:	mov    eax,DWORD PTR [ebp-0x4a]
  4240cd:	sub    ebp,DWORD PTR [edx+0x40]
  4240d0:	adc    al,0x55
  4240d2:	mov    DWORD PTR ds:0x3f4302,ecx
  4240d8:	out    dx,eax
  4240d9:	mov    ebp,0xd452
	...
  424106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424107:	mov    edx,0x389fff8
  42410c:	(bad)  
  42410d:	(bad)  
  42410e:	ds pop ebx
  424110:	mov    ebp,esp
  424112:	sbb    ebx,DWORD PTR [ecx-0x707dfffd]
  424118:	retf   
  424119:	int3   
  42411a:	jp     0x4240ab
  42411c:	retf   
  42411d:	int3   
  42411e:	or     edx,edx
  424120:	jmp    0x4240ad
  424122:	add    edx,DWORD PTR [ebx-0x77]
  424125:	inc    eax
  424126:	push   edx
  424127:	and    cl,al
  424129:	int3   
  42412a:	jp     0x4240bb
  42412c:	retf   
  42412d:	int3   
  42412e:	jmp    0x424101
  424130:	jmp    0x424185
  424132:	nop
  424133:	mov    DWORD PTR es:0x3f435e,edi
  42413a:	mov    ch,0x5f
  42413c:	sub    al,0x78
  42413e:	jg     0x42419b
  424140:	mov    DWORD PTR ds:0x3f4336,esi
  424146:	jno    0x424165
  424148:	pop    ecx
  424149:	pop    ebp
  42414a:	std    
  42414b:	mov    cs,ebx
  42414d:	int3   
  42414e:	imul   edx,edx,0xffffffeb
  424151:	push   ecx
  424152:	popw   ss
  424154:	add    DWORD PTR [eax+0x3e],eax
  424157:	cld    
  424158:	cmp    edi,DWORD PTR [eax+0x7f]
  42415b:	pop    ebx
  42415c:	push   eax
  42415d:	call   0x3f03f4
  424162:	mov    ebp,0x7b890796
  424167:	mov    edi,0x4d88
	...
  424194:	ss sub al,0x6a
  424197:	add    BYTE PTR [ebp-0x87a799],dh
  42419d:	pop    edx
  42419e:	push   edx
  42419f:	dec    DWORD PTR [ebx]
  4241a1:	mov    edi,0x9a0be588
  4241a6:	retf   
  4241a7:	int3   
  4241a8:	or     edx,edx
  4241aa:	jmp    0x42412f
  4241ac:	stos   BYTE PTR es:[edi],al
  4241ad:	jbe    0x424174
  4241af:	inc    ebp
  4241b0:	xchg   esi,eax
  4241b1:	pop    edx
  4241b2:	add    BYTE PTR [eax],al
  4241b4:	ds xchg esi,eax
  4241b6:	inc    edx
  4241b7:	fadd   QWORD PTR [esi]
  4241b9:	pop    ebx
  4241ba:	add    BYTE PTR [eax],al
  4241bc:	adc    DWORD PTR [edi],0x5b3e01f4
  4241c2:	add    bh,al
  4241c4:	add    edi,DWORD PTR [edi+0x5b3effff]
  4241ca:	lds    eax,FWORD PTR [ebp+0x62]
  4241cd:	pop    edx
  4241ce:	add    BYTE PTR [eax],al
  4241d0:	ror    BYTE PTR ds:[edx+0x8],cl
  4241d4:	mov    bh,0x4f
  4241d6:	xor    BYTE PTR [eax-0x1],bh
  4241d9:	pop    edx
  4241da:	call   0xfcff7388
  4241df:	mov    eax,ds:0x3f436e
  4241e4:	arpl   WORD PTR [esp+edi*8+0xc473e00],di
  4241eb:	mov    DWORD PTR [ebx-0x7d],0x5b3e4178
  4241f2:	add    BYTE PTR [eax],al
  4241f4:	ds mov al,0x9
  4241f7:	mov    DWORD PTR [eax],0x0
	...
  424221:	add    BYTE PTR [ebx],bh
  424223:	cmp    DWORD PTR [eax+0x41],0x3e
  424227:	pop    edx
  424228:	add    BYTE PTR [eax],al
  42422a:	fdivr  DWORD PTR ds:[edx]
  42422d:	xor    BYTE PTR [esi+0x1a],ah
  424230:	add    BYTE PTR [eax],al
  424232:	imul   edx,DWORD PTR [ecx-0x3b],0x5
  424236:	push   ss
  424237:	inc    ebx
  424238:	aas    
  424239:	add    BYTE PTR [esi],bh
  42423b:	pop    ebx
  42423c:	add    BYTE PTR [eax],al
  42423e:	mov    ebp,0x7f78387e
  424243:	pop    ebx
  424244:	add    BYTE PTR [ebp+0x4b],dh
  424247:	xor    DWORD PTR [eax],eax
  424249:	dec    DWORD PTR [ebx+0x5b]
  42424c:	js     0x42428f
  42424e:	ds clc 
  424250:	das    
  424251:	js     0x424252
  424253:	pop    edx
  424254:	mov    DWORD PTR ds:0x3f434e,ecx
  42425a:	(bad)  
  42425b:	push   cs
  42425c:	call   0x78cd75ec
  424261:	inc    ecx
  424262:	rol    BYTE PTR ds:[edx-0x18],1
  424266:	cmp    eax,0xfb893c19
  42426b:	mov    dl,0x88
  42426d:	dec    ebp
  42426e:	push   esi
  42426f:	ror    BYTE PTR [edx],cl
  424271:	sbb    al,0xe6
  424273:	sbb    DWORD PTR [eax],eax
  424275:	push   0x4057ee
  42427a:	push   ecx
  42427b:	data16 add BYTE PTR [eax-0x1],bh
  42427f:	pop    edx
  424280:	mov    eax,ds:0x19c63c
  424285:	mov    DWORD PTR [eax],0x0
	...
  4242af:	add    BYTE PTR [ebx+0xf],al
  4242b2:	js     0x4242f5
  4242b4:	ds inc esi
  4242b6:	add    DWORD PTR [eax+0x3e],eax
  4242b9:	xor    esp,DWORD PTR [eax+0x3]
  4242bc:	jle    0x424319
  4242be:	mov    DWORD PTR ds:0x3f435a,edx
  4242c4:	ins    BYTE PTR es:[edi],dx
  4242c5:	mov    bl,0xc1
  4242c7:	test   DWORD PTR [ecx],0x36c480bc
  4242cd:	clc    
  4242ce:	inc    edi
  4242cf:	js     0x424350
  4242d1:	pop    ebx
  4242d2:	std    
  4242d3:	adc    eax,0x3f4386
  4242d8:	popf   
  4242d9:	and    bh,BYTE PTR [eax+0x41]
  4242dc:	ds cli 
  4242de:	dec    ebx
  4242df:	js     0x424360
  4242e1:	pop    ebx
  4242e2:	push   eax
  4242e3:	call   0x3eff72
  4242e8:	mov    ebp,0x7b890396
  4242ed:	retf   
  4242ee:	mov    BYTE PTR [ebp-0x52],cl
  4242f1:	sub    eax,ebp
  4242f3:	aad    0xb0
  4242f5:	mov    ebx,0x568283fc
  4242fa:	mov    eax,ds:0x1a2634
  4242ff:	mov    esi,ebx
  424301:	retf   0x6a51
  424304:	ds cli 
  424306:	xor    edi,DWORD PTR [eax-0x1]
  424309:	pop    edx
  42430a:	push   eax
  42430b:	call   0x3f06b2
  424310:	mov    ebp,0x8b0b96
	...
  42433d:	add    BYTE PTR [ebx],al
  42433f:	retf   
  424340:	xchg   BYTE PTR [ebp+0x5e],cl
  424343:	iret   
  424344:	push   edx
  424345:	cld    
  424346:	and    eax,0xf473f026
  42434b:	iret   
  42434c:	inc    edx
  42434d:	loopne 0x42433d
  42434f:	iret   
  424350:	dec    edx
  424351:	fsub   st(7),st
  424353:	mov    dl,0xad
  424355:	sti    
  424356:	inc    ecx
  424357:	mov    ebx,0xfe46c480
  42435c:	aas    
  42435d:	js     0x4243de
  42435f:	pop    ebx
  424360:	mov    DWORD PTR ds:0x3f337e,edx
  424366:	mov    esp,?
  424368:	dec    ebx
  424369:	js     0x4243ea
  42436b:	pop    ebx
  42436c:	add    DWORD PTR [ebp+0x1a],eax
  42436f:	or     al,0x89
  424371:	or     eax,0x3f3352
  424376:	cmp    eax,0xe651fc28
  42437b:	xchg   edx,eax
  42437c:	idiv   bh
  42437e:	icebp  
  42437f:	faddp  st(3),st
  424381:	or     al,0xb5
  424383:	adc    ah,dh
  424385:	add    ecx,DWORD PTR [ebx-0x1daaff69]
  42438b:	in     al,0x52
  42438d:	in     al,0xc5
  42438f:	and    ah,bh
  424391:	add    eax,DWORD PTR [ebx-0x3dba7969]
  424397:	out    0x4a,al
  424399:	loopne 0x424400
  42439b:	push   0x5aff7840
  4243a0:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  4243cb:	add    BYTE PTR [esi-0x438623a],bl
  4243d1:	mov    dl,0xff
  4243d3:	(bad)  
  4243d4:	ds pop ebx
  4243d6:	jmp    0xf85308e4
  4243db:	cmp    DWORD PTR [edi+ebx*2-0x79],0x55
  4243e0:	xchg   dh,ah
  4243e2:	inc    edx
  4243e3:	clc    
  4243e4:	xor    eax,0x3673f020
  4243e9:	out    0xa,al
  4243eb:	xor    al,0xe6
  4243ed:	sbb    eax,DWORD PTR [eax]
  4243ef:	add    esi,ebx
  4243f1:	mov    dl,0x88
  4243f3:	adc    DWORD PTR ds:0xaa1f810,edi
  4243f9:	xor    edi,DWORD PTR [edi]
  4243fb:	add    BYTE PTR ds:0x2e89f820,bh
  424401:	out    0x4a,al
  424403:	clc    
  424404:	mov    edi,0x3e03e69b
  424409:	pop    ebx
  42440a:	mov    DWORD PTR ds:0x3f3372,edx
  424410:	cmp    eax,0x4433f810
  424415:	cld    
  424416:	xor    edi,DWORD PTR [eax+0x7f]
  424419:	pop    ebx
  42441a:	add    DWORD PTR [ebp+0x6],eax
  42441d:	in     al,0x7
  42441f:	jmp    0x4243ea
  424421:	jecxz  0x42444d
  424423:	and    al,0x76
  424425:	sbb    al,0x0
  424427:	mov    DWORD PTR [ebx],esi
  424429:	jnp    0x4244a3
  42442b:	inc    ecx
  42442c:	outs   dx,BYTE PTR ds:[esi]
  42442e:	(bad)  
  42442f:	mov    DWORD PTR [eax],eax
	...
  424459:	add    BYTE PTR [ebx],ch
  42445b:	push   ebx
  42445c:	js     0x42449f
  42445e:	outs   dx,BYTE PTR ds:[esi]
  424460:	(bad)  
  424461:	mov    DWORD PTR [ebx],esi
  424463:	xchg   DWORD PTR [eax+0x41],edi
  424466:	ds ret 
  424468:	dec    ebp
  424469:	test   ecx,0xe90d8ab9
  42446f:	xor    DWORD PTR [edi],edi
  424471:	add    bh,al
  424473:	daa    
  424474:	clc    
  424475:	mov    ecx,0x405d3e
  42447a:	mov    edi,0x3e01ffc3
  42447f:	pop    ebx
  424480:	mov    DWORD PTR [ebp-0x6a],edx
  424483:	test   edi,ecx
  424485:	mov    DWORD PTR [ebx],esi
  424487:	cmp    DWORD PTR [eax+0x41],0x3e
  42448b:	cld    
  42448c:	daa    
  42448d:	js     0x42448e
  42448f:	pop    edx
  424490:	push   eax
  424491:	call   0x3ef9d0
  424496:	mov    ebp,0x338b039e
  42449b:	outs   dx,DWORD PTR ds:[esi]
  42449c:	js     0x4244df
  42449e:	ds or  al,0xe8
  4244a1:	aad    0x54
  4244a3:	mov    ecx,0x2f7e85fc
  4244a8:	add    al,0x33
  4244aa:	jle    0x424471
  4244ac:	sub    DWORD PTR [ebx+0x41787f63],ecx
  4244b2:	ds fadd st(3),st
  4244b5:	add    al,0xbd
  4244b7:	jbe    0x4244f1
  4244b9:	js     0x42453a
  4244bb:	pop    ebx
  4244bc:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  4244e8:	inc    edi
  4244e9:	cli    
  4244ea:	adc    edi,DWORD PTR [eax+0x7f]
  4244ed:	pop    ebx
  4244ee:	xchg   DWORD PTR [edx+eiz*2+0x5f],eax
  4244f2:	call   0xfcfb4854
  4244f7:	mov    edx,DWORD PTR [ebx+0xf]
  4244fa:	js     0x42453d
  4244fc:	ds or  eax,0xe4fe33c1
  424502:	loop   0x424561
  424504:	std    
  424505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424506:	retf   
  424507:	int3   
  424508:	ds pop ebx
  42450a:	add    BYTE PTR [eax],al
  42450c:	ds pop ebx
  42450e:	add    BYTE PTR [eax],al
  424510:	ds pop ebx
  424512:	add    BYTE PTR [eax],al
  424514:	ds pop ebx
  424516:	add    BYTE PTR [eax],al
  424518:	ds pop ebx
  42451a:	add    BYTE PTR [eax],al
  42451c:	ds pop ebx
  42451e:	add    BYTE PTR [eax],al
  424520:	ds pop ebx
  424522:	add    BYTE PTR [eax],al
  424524:	ds pop ebx
  424526:	add    BYTE PTR [eax],al
  424528:	ds pop ebx
  42452a:	add    BYTE PTR [eax],al
  42452c:	ds pop ebx
  42452e:	add    BYTE PTR [eax],al
  424530:	ds pop ebx
  424532:	add    BYTE PTR [eax],al
  424534:	ds pop ebx
  424536:	add    BYTE PTR [eax],al
  424538:	ds pop ebx
  42453a:	add    BYTE PTR [eax],al
  42453c:	ds pop ebx
  42453e:	add    BYTE PTR [eax],al
  424540:	ds pop ebx
  424542:	add    BYTE PTR [eax],al
  424544:	ds pop ebx
  424546:	add    BYTE PTR [eax],al
  424548:	ds pop ebx
	...
  424576:	ds pop ebx
  424578:	add    BYTE PTR [eax],al
  42457a:	ds pop ebx
  42457c:	add    BYTE PTR [eax],al
  42457e:	ds pop ebx
  424580:	add    BYTE PTR [eax],al
  424582:	ds pop ebx
  424584:	add    BYTE PTR [eax],al
  424586:	ds pop ebx
  424588:	add    BYTE PTR [eax],al
  42458a:	ds pop ebx
  42458c:	add    BYTE PTR [eax],al
  42458e:	ds pop ebx
  424590:	add    BYTE PTR [eax],al
  424592:	ds pop ebx
  424594:	add    BYTE PTR [eax],al
  424596:	ds pop ebx
  424598:	add    BYTE PTR [eax],al
  42459a:	ds pop ebx
  42459c:	add    BYTE PTR [eax],al
  42459e:	ds pop ebx
  4245a0:	add    BYTE PTR [eax],al
  4245a2:	ds pop ebx
  4245a4:	add    BYTE PTR [eax],al
  4245a6:	ds pop ebx
  4245a8:	add    BYTE PTR [eax],al
  4245aa:	ds pop ebx
  4245ac:	add    BYTE PTR [eax],al
  4245ae:	ds pop ebx
  4245b0:	add    BYTE PTR [eax],al
  4245b2:	ds pop ebx
  4245b4:	add    BYTE PTR [eax],al
  4245b6:	ds pop ebx
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	ds pop ebx
  4245bc:	add    BYTE PTR [eax],al
  4245be:	ds pop ebx
  4245c0:	add    BYTE PTR [eax],al
  4245c2:	ds pop ebx
  4245c4:	add    BYTE PTR [eax],al
  4245c6:	ds pop ebx
  4245c8:	add    BYTE PTR [eax],al
  4245ca:	ds pop ebx
  4245cc:	add    BYTE PTR [eax],al
  4245ce:	ds pop ebx
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	ds pop ebx
  4245d4:	add    BYTE PTR [eax],al
  4245d6:	ds pop ebx
	...
  424604:	ds pop ebx
  424606:	add    BYTE PTR [eax],al
  424608:	ds pop ebx
  42460a:	add    BYTE PTR [eax],al
  42460c:	ds pop ebx
  42460e:	add    BYTE PTR [eax],al
  424610:	ds pop ebx
  424612:	add    BYTE PTR [eax],al
  424614:	ds pop ebx
  424616:	add    BYTE PTR [eax],al
  424618:	ds pop ebx
  42461a:	add    BYTE PTR [eax],al
  42461c:	ds pop ebx
  42461e:	add    BYTE PTR [eax],al
  424620:	ds pop ebx
  424622:	add    BYTE PTR [eax],al
  424624:	ds pop ebx
  424626:	add    BYTE PTR [eax],al
  424628:	ds pop ebx
  42462a:	add    BYTE PTR [eax],al
  42462c:	ds pop ebx
  42462e:	add    BYTE PTR [eax],al
  424630:	ds pop ebx
  424632:	add    BYTE PTR [eax],al
  424634:	ds pop ebx
  424636:	add    BYTE PTR [eax],al
  424638:	ds pop ebx
  42463a:	add    BYTE PTR [eax],al
  42463c:	ds pop ebx
  42463e:	add    BYTE PTR [eax],al
  424640:	ds pop ebx
  424642:	add    BYTE PTR [eax],al
  424644:	ds pop ebx
  424646:	add    BYTE PTR [eax],al
  424648:	ds pop ebx
  42464a:	add    BYTE PTR [eax],al
  42464c:	ds pop ebx
  42464e:	add    BYTE PTR [eax],al
  424650:	ds pop ebx
  424652:	add    BYTE PTR [eax],al
  424654:	ds pop ebx
  424656:	add    BYTE PTR [eax],al
  424658:	ds pop ebx
  42465a:	add    BYTE PTR [eax],al
  42465c:	ds pop ebx
  42465e:	add    BYTE PTR [eax],al
  424660:	ds pop ebx
  424662:	add    BYTE PTR [eax],al
  424664:	ds pop ebx
	...
  424692:	jmp    DWORD PTR ds:0x427864
  424698:	jmp    DWORD PTR ds:0x427868
  42469e:	jmp    DWORD PTR ds:0x42786c
  4246a4:	jmp    DWORD PTR ds:0x427870
  4246aa:	jmp    DWORD PTR ds:0x427874
  4246b0:	jmp    DWORD PTR ds:0x427878
  4246b6:	jmp    DWORD PTR ds:0x42787c
  4246bc:	jmp    DWORD PTR ds:0x427884
  4246c2:	jmp    DWORD PTR ds:0x42788c
  4246c8:	jmp    DWORD PTR ds:0x427890
