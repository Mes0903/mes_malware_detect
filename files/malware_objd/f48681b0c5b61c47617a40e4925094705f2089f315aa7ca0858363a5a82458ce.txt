
f48681b0c5b61c47617a40e4925094705f2089f315aa7ca0858363a5a82458ce.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43470b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4345e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434653
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4345f3,0x434647
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43470b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43463b,0x10
  40104d:	cmp    DWORD PTR ds:0x43463b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43463b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43463b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43463b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43463b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43463b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43463b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43470f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43465f
  4010b6:	mov    ebx,DWORD PTR ds:0x434733
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434607,0x43468b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43468f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43468f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43468f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43468f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43468f,0xe
  401103:	jne    0x401119
  401109:	push   0x4345eb
  40110e:	push   0x43495b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43468f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43468f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43468f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4345eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x887a1829
  401151:	or     BYTE PTR [ebx+0x7e7e7e7e],0xb5
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	push   cs
  401168:	stos   BYTE PTR es:[edi],al
  401169:	or     al,0xf
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	enter  0xf2a0,0x90
  401205:	aam    0x60
  401207:	push   ebp
  401208:	cmp    ch,BYTE PTR [esi-0x46]
  40120b:	mov    ds:0x97dd61d9,eax
  401210:	xor    al,0xac
  401212:	mov    al,0xd0
  401214:	sub    DWORD PTR [ecx],0x28
  401217:	nop
  401218:	rcr    WORD PTR [ebx+edi*8-0x39],0xbd
  40121e:	addr16 xchg ebx,eax
  401220:	imul   esp,DWORD PTR [eax-0x7e],0x501377d5
  401227:	outs   dx,BYTE PTR ds:[esi]
  401228:	adc    eax,0x6b28e996
  40122d:	(bad)  
  40122e:	mov    eax,ds:0x9d071d2
  401233:	addr16 xchg eax,edx
  401236:	cmc    
  401237:	jp     0x4011f8
  401239:	out    dx,eax
  40123a:	or     esp,edi
  40123c:	cmp    DWORD PTR [eax-0x50],edi
  40123f:	in     al,0xea
  401241:	jmp    0x6c7a:0x26c701d4
  401248:	add    BYTE PTR [eax-0x13],0x69
  40124c:	inc    esp
  40124d:	jecxz  0x4012c7
  40124f:	add    ebx,DWORD PTR [esp+esi*8+0x56]
  401253:	call   DWORD PTR [ebp+ecx*8-0x6a]
  401257:	outs   dx,DWORD PTR ds:[esi]
  401258:	enter  0xeaae,0x43
  40125c:	outs   dx,DWORD PTR ds:[esi]
  40125d:	into   
  40125e:	sub    eax,0x389ec7c5
  401263:	pop    ebx
  401264:	cmp    DWORD PTR [edx-0x586ccb22],edx
  40126a:	pop    ecx
  40126b:	arpl   cx,sp
  40126d:	sbb    dl,BYTE PTR [ebx-0x3a]
  401270:	adc    ah,bh
  401272:	mov    dl,0xe6
  401275:	mov    al,ds:0x450176ce
  40127a:	add    BYTE PTR [ebp+0x7981f46c],dl
  401280:	mov    dl,0x53
  401282:	aas    
  401283:	loopne 0x4012ed
  401285:	mov    eax,0x1ddad34a
  40128a:	cli    
  40128b:	push   es
  40128c:	stos   BYTE PTR es:[edi],al
  40128d:	sti    
  40128e:	gs cmp ebx,eax
  401291:	ins    BYTE PTR es:[edi],dx
  401292:	js     0x4012fd
  401294:	test   bh,0x2
  401297:	and    BYTE PTR [edi],0x7c
  40129a:	push   esi
  40129b:	cmp    eax,0x69c1d76f
  4012a0:	xchg   edi,eax
  4012a1:	xor    DWORD PTR [eax-0x3786ea18],esi
  4012a7:	fwait
  4012a8:	push   esi
  4012a9:	leave  
  4012aa:	dec    ebx
  4012ab:	call   0x8f2053e3
  4012b0:	sbb    eax,0x404d7108
  4012b5:	cmp    DWORD PTR [esi+edx*4],ecx
  4012b8:	mov    DWORD PTR [eax],esi
  4012ba:	xchg   esp,eax
  4012bb:	call   0x9e65:0x9d634af8
  4012c2:	xchg   ebp,eax
  4012c3:	loop   0x401313
  4012c5:	inc    edi
  4012c6:	or     ah,BYTE PTR [edi+ecx*2-0xd8eccdd]
  4012cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012ce:	xor    BYTE PTR [ecx+0x11],ch
  4012d1:	daa    
  4012d2:	imul   edx,esp,0x4e
  4012d5:	stos   BYTE PTR es:[edi],al
  4012d6:	mov    esp,0xf032a8ea
  4012db:	je     0x4012a9
  4012dd:	icebp  
  4012de:	add    ebx,edx
  4012e0:	repz mov cl,0xe7
  4012e3:	shr    ebp,1
  4012e5:	adc    eax,0x51bef436
  4012ea:	adc    DWORD PTR [ecx],edi
  4012ec:	sbb    BYTE PTR [edx],bl
  4012ee:	cmp    eax,0x2694313a
  4012f3:	add    eax,0x258b1163
  4012f8:	mov    eax,0x3eaa1c9c
  4012fd:	popa   
  4012fe:	inc    ebx
  4012ff:	dec    edx
  401300:	pop    edi
  401301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401302:	call   0x111a4430
  401307:	fbstp  TBYTE PTR ds:0x64b82b70
  40130d:	dec    ebx
  40130f:	xchg   edx,eax
  401310:	call   0x22d1:0x810189e8
  401317:	adc    al,BYTE PTR [eax]
  401319:	add    BYTE PTR [ebp+0x3581fc45],cl
  40131f:	jg     0x401367
  401321:	inc    ebx
  401322:	add    ah,bl
  401324:	push   ebx
  401325:	add    BYTE PTR [eax],al
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43463f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4345ef,0x4345e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4345f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4346c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4346c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4346c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4346c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4346c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4346c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4346c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4346c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43463f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43468b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4345ef,0x43463f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4345eb,0x4346f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434603,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [edi],ecx
  401418:	mov    cl,0x1a
  40141a:	and    DWORD PTR [ebp-0x4a818181],esi
  401420:	jg     0x4014a0
  401422:	jle    0x4013d8
  401424:	nop
  401425:	test   al,0xb9
  401427:	mov    esi,DWORD PTR [ecx]
  401429:	cwde   
  40142a:	or     al,0x55
  40142c:	xchg   esi,eax
  40142d:	jmp    0x4013b9
  40142f:	int    0xfc
  401431:	dec    ebp
  401432:	daa    
  401433:	gs cmp edi,edx
  401436:	jmp    0x401456
  401438:	push   edx
  401439:	leave  
  40143a:	mov    ecx,0x53cae6c8
  40143f:	nop
  401440:	mov    al,0x45
  401442:	cli    
  401443:	aad    0x7e
  401445:	and    dl,BYTE PTR [esp+eiz*2]
  401448:	int    0x4
  40144a:	aas    
  40144b:	pusha  
  40144c:	stos   DWORD PTR es:[edi],eax
  40144d:	pop    esp
  40144e:	xchg   esi,eax
  40144f:	cld    
  401450:	jo     0x4013e1
  401452:	je     0x401407
  401454:	fisttp DWORD PTR [esp+eiz*2]
  401457:	lock in eax,dx
  401459:	ret    0x2a2e
  40145c:	or     DWORD PTR [ebx-0x7],esi
  40145f:	xchg   esp,eax
  401460:	add    eax,0x7d4d3a60
  401465:	jecxz  0x4013f3
  401467:	out    0xc2,al
  401469:	xchg   ebp,eax
  40146a:	mov    ah,0x7f
  40146c:	sti    
  40146d:	(bad)  
  40146e:	pop    ebx
  40146f:	ins    DWORD PTR es:[edi],dx
  401470:	loopne 0x401475
  401472:	sub    BYTE PTR [ecx-0x5e],ch
  401475:	test   esi,edi
  401477:	retf   0xab5c
  40147a:	mov    ah,0x9c
  40147c:	imul   ecx,ebp,0xb3e49aca
  401482:	in     al,dx
  401483:	mov    esp,0xd0ce6d69
  401488:	add    dh,BYTE PTR [eax+eiz*4]
  40148b:	jmp    0x87eab0f1
  401490:	int3   
  401491:	xor    ebx,esp
  401493:	(bad)  
  401494:	stos   BYTE PTR es:[edi],al
  401495:	push   eax
  401496:	jle    0x401431
  401498:	jecxz  0x401515
  40149a:	or     DWORD PTR [esi],esp
  40149c:	into   
  40149d:	repnz xor DWORD PTR [ebp-0x3af2a28e],esp
  4014a4:	and    eax,0xfcc24e50
  4014a9:	jle    0x401440
  4014ab:	push   ecx
  4014ac:	dec    eax
  4014ad:	push   ebp
  4014ae:	in     al,dx
  4014af:	int3   
  4014b0:	jl     0x401519
  4014b2:	sub    BYTE PTR [ecx+0x24a888b2],bh
  4014b8:	xchg   esi,eax
  4014b9:	popf   
  4014ba:	fstp   QWORD PTR [edi+0x26]
  4014bd:	pop    ebp
  4014be:	fisub  DWORD PTR [ebx]
  4014c0:	jge    0x40146c
  4014c2:	add    al,0x71
  4014c4:	cwde   
  4014c5:	sahf   
  4014c6:	(bad)  
  4014c7:	and    BYTE PTR [edx],bl
  4014c9:	popf   
  4014ca:	mov    BYTE PTR [edi-0x33],0x98
  4014ce:	mov    cl,0x5d
  4014d0:	xchg   esi,eax
  4014d1:	xor    eax,0xd8a00d5d
  4014d6:	(bad)  
  4014d7:	pop    esp
  4014d8:	fmul   QWORD PTR [ecx]
  4014da:	mov    ds:0x47d6fe60,eax
  4014df:	loope  0x4014cb
  4014e1:	daa    
  4014e2:	sar    BYTE PTR [eax-0x4677ae0],cl
  4014e8:	ins    DWORD PTR es:[edi],dx
  4014e9:	mov    al,0x88
  4014eb:	add    edx,esi
  4014ed:	push   esp
  4014ee:	into   
  4014ef:	shr    edx,cl
  4014f1:	outs   dx,DWORD PTR ds:[esi]
  4014f2:	jmp    FWORD PTR [ebx]
  4014f4:	cwde   
  4014f5:	out    dx,eax
  4014f6:	stc    
  4014f7:	push   ss
  4014f8:	js     0x401569
  4014fa:	push   edx
  4014fb:	pop    ds
  4014fc:	xor    eax,0x3f611a87
  401501:	mov    cs,edx
  401503:	(bad)  
  401505:	mov    eax,ds:0x3e35afc1
  40150a:	fwait
  40150b:	sti    
  40150c:	bound  ebx,QWORD PTR [eax+0x2d43c4a5]
  401512:	push   es
  401513:	push   ebx
  401514:	jne    0x40151f
  401516:	sti    
  401517:	(bad)  
  401518:	daa    
  401519:	and    eax,esi
  40151b:	mov    WORD PTR [edi+0x28af9e57],gs
  401521:	daa    
  401522:	sub    ecx,ebx
  401524:	and    BYTE PTR [ebp+ebx*2+0x39218fda],bh
  40152b:	xor    ebp,DWORD PTR [eax+esi*1+0x4eb42d75]
  401532:	mov    WORD PTR [ecx-0x50e9ec03],?
  401538:	pop    esp
  401539:	sbb    al,0xf8
  40153b:	ror    DWORD PTR [ebx+0x5da3ed97],0x8c
  401542:	loop   0x40159b
  401544:	dec    edi
  401545:	popf   
  401546:	and    DWORD PTR [edi],0xffffffa7
  401549:	add    DWORD PTR [edx+0x7be52a03],0x58
  401550:	test   eax,0x711e1cd6
  401555:	sahf   
  401556:	xor    BYTE PTR [esi+0x7336b907],ch
  40155c:	mov    edi,0xec6596a1
  401561:	fwait
  401562:	pop    esp
  401563:	or     ch,BYTE PTR [eax+0xc99cdd1]
  401569:	nop
  40156a:	mov    eax,0xacda7c19
  40156f:	push   edx
  401570:	dec    esi
  401571:	jae    0x401572
  401573:	out    0x88,eax
  401575:	test   al,0x62
  401577:	cmc    
  401578:	mov    bl,0x52
  40157a:	(bad)
  40157f:	jo     0x4015fd
  401581:	push   ss
  401582:	xchg   ecx,eax
  401583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401584:	(bad)  
  401585:	stos   DWORD PTR es:[edi],eax
  401586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401587:	and    BYTE PTR [esi],dl
  401589:	sub    DWORD PTR ds:0x21da913e,eax
  40158f:	pop    edx
  401590:	imul   edi,DWORD PTR [ecx+0x5c],0x67
  401594:	ins    BYTE PTR es:[edi],dx
  401595:	push   ds
  401596:	mov    DWORD PTR [ebp+0x48],esp
  401599:	fldcw  WORD PTR [edx+0x12c1b74c]
  40159f:	into   
  4015a0:	int3   
  4015a1:	cwde   
  4015a2:	adc    esp,DWORD PTR [esi-0x60]
  4015a5:	repz jge 0x4015fd
  4015a8:	xchg   esp,eax
  4015a9:	sti    
  4015aa:	fstp   DWORD PTR [edx+0x3ca41ef0]
  4015b0:	pop    ebp
  4015b1:	push   ebx
  4015b2:	xor    edi,edi
  4015b4:	dec    ebp
  4015b5:	mov    al,BYTE PTR ds:0x81b01076
  4015bb:	xchg   esp,eax
  4015bc:	ret    
  4015bd:	push   edx
  4015be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015bf:	fisubr DWORD PTR [edi+0x11]
  4015c2:	fadd   DWORD PTR [ebx-0x36]
  4015c5:	imul   BYTE PTR [edx+0x21907aa1]
  4015cb:	xlat   BYTE PTR ds:[ebx]
  4015cc:	mov    WORD PTR [ecx],ss
  4015ce:	data16 add al,0x6a
  4015d1:	out    dx,al
  4015d2:	cmp    ah,BYTE PTR [edi-0xd]
  4015d5:	out    dx,al
  4015d6:	adc    ah,BYTE PTR [ebx+0x3a]
  4015d9:	mov    esi,0x8b08458b
  4015de:	or     eax,0x43470f
  4015e3:	and    DWORD PTR ds:0x4346bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4345e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434643,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434693,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434683,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434683
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434683,ecx
  40162d:	cmp    DWORD PTR ds:0x434683,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434683,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434683
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434683,ecx
  40165f:	cmp    DWORD PTR ds:0x434683,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434623
  401674:	mov    eax,ds:0x43466b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4346cb,0x4346f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4345eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4345ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	sahf   
  4016ba:	ja     0x401648
  4016bc:	push   ebx
  4016bd:	in     al,dx
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x401737
  4016c6:	xchg   ebx,eax
  4016c7:	dec    eax
  4016c8:	repnz fdiv st(5),st
  4016cb:	or     esi,DWORD PTR ds:0xa6ed22a0
  4016d1:	jns    0x4016be
  4016d3:	(bad)  
  4016d5:	mov    eax,ds:0x3f5d2ae4
  4016da:	pop    ebp
  4016db:	cwde   
  4016dc:	adc    eax,0x58c142f7
  4016e1:	sbb    BYTE PTR [ebp+0x3a],bh
  4016e4:	add    edx,DWORD PTR [edx+0x7baba58c]
  4016ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016eb:	stos   DWORD PTR es:[edi],eax
  4016ec:	jne    0x401737
  4016ee:	cmp    BYTE PTR [edx-0x35],dl
  4016f1:	in     al,dx
  4016f2:	shl    BYTE PTR [ebp+0x51571dbe],1
  4016f8:	rol    BYTE PTR [esi],1
  4016fa:	fdivr  DWORD PTR [ecx+0x3a]
  4016fd:	xor    BYTE PTR [esi+0x25],cl
  401700:	arpl   ax,sp
  401702:	dec    esi
  401703:	mov    cl,0x2c
  401705:	sbb    eax,0xf54fe9a1
  40170a:	repnz jmp 0x2a4c:0xd28f316b
  401712:	fsub   st(0),st
  401714:	in     al,dx
  401715:	or     ebp,DWORD PTR [esi]
  401717:	xor    ecx,eax
  401719:	es xchg ecx,eax
  40171b:	and    eax,0xc52be5fe
  401721:	or     ch,cl
  401723:	call   0xa35d:0x9ff5c88
  40172a:	jp     0x401753
  40172c:	dec    esi
  40172d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40172e:	push   cs
  40172f:	inc    edi
  401730:	adc    bl,bh
  401732:	xor    eax,0x3de2d2cb
  401737:	or     al,0xad
  401739:	cmp    DWORD PTR [eax+ecx*8+0x4b1f6f1b],edx
  401740:	dec    esp
  401741:	outs   dx,DWORD PTR ds:[esi]
  401742:	loop   0x4016f4
  401744:	pusha  
  401745:	loopne 0x401709
  401747:	push   0x1b
  401749:	lea    ebx,[edx+0x141d8a2c]
  40174f:	stos   BYTE PTR es:[edi],al
  401750:	into   
  401751:	(bad)  
  401752:	stc    
  401753:	adc    DWORD PTR [ebp-0x6d21694f],edx
  401759:	jle    0x4017aa
  40175b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175c:	repnz lahf 
  40175e:	es mov esi,0x8e21e187
  401764:	push   edx
  401765:	leave  
  401766:	adc    dl,ch
  401768:	jae    0x401798
  40176a:	(bad)
  40176e:	ficomp DWORD PTR [ecx+0xe854aaf]
  401774:	aaa    
  401775:	and    al,0x4f
  401777:	jmp    0x350e25ce
  40177c:	das    
  40177d:	jnp    0x40172b
  40177f:	fwait
  401780:	push   eax
  401781:	xchg   esp,eax
  401782:	inc    eax
  401783:	dec    esi
  401784:	dec    ebp
  401785:	or     al,BYTE PTR [ecx-0x5a]
  401788:	cwde   
  401789:	icebp  
  40178a:	mov    BYTE PTR [esi-0x15],al
  40178d:	adc    eax,0xba4ba059
  401792:	cmc    
  401793:	les    edx,FWORD PTR [esi]
  401795:	outs   dx,DWORD PTR ds:[esi]
  401796:	push   eax
  401797:	lahf   
  401798:	bound  ebp,QWORD PTR [edx]
  40179a:	xor    eax,0x4cb21a5d
  40179f:	mov    ebx,0x13591774
  4017a4:	call   0x7836f85b
  4017a9:	add    esp,DWORD PTR [edx+0x37]
  4017ac:	pop    ebx
  4017ad:	mov    edx,0xa728e363
  4017b2:	fild   DWORD PTR [ebx+0x620b0732]
  4017b8:	mov    esp,0xc3871b65
  4017bd:	add    al,0x27
  4017bf:	ins    DWORD PTR es:[edi],dx
  4017c0:	jbe    0x4017ff
  4017c2:	add    al,0xcb
  4017c4:	dec    edi
  4017c5:	out    0xc9,al
  4017c7:	outs   dx,BYTE PTR ds:[esi]
  4017c8:	cmp    al,0xcd
  4017ca:	add    ch,BYTE PTR [esi]
  4017cc:	mov    bh,0x77
  4017ce:	push   es
  4017cf:	pop    edx
  4017d0:	mov    dl,0xac
  4017d2:	sub    eax,0x819807a
  4017d7:	fistp  WORD PTR [edx+edi*1]
  4017da:	cmp    bh,bh
  4017dc:	mov    eax,0x21320d1d
  4017e1:	mov    edx,0x6eb9b7dd
  4017e6:	push   ecx
  4017e7:	mov    dl,0xda
  4017e9:	ss scas eax,DWORD PTR es:[edi]
  4017eb:	rcl    BYTE PTR [edi+0x56ceba5a],1
  4017f1:	retf   
  4017f2:	mov    cl,0xd5
  4017f4:	or     edi,DWORD PTR ds:0x25ba1952
  4017fa:	xor    al,0xc7
  4017fc:	jno    0x4017e7
  4017fe:	(bad)  
  4017ff:	loope  0x4017da
  401801:	mov    eax,ds:0x2251b4bd
  401806:	cmp    eax,edx
  401808:	jne    0x40178c
  40180a:	xor    ebx,DWORD PTR [ecx+0x59]
  40180d:	mov    ds:0x795bc07f,eax
  401812:	jle    0x4017c1
  401814:	sub    cl,BYTE PTR [ebx-0x12]
  401817:	xchg   DWORD PTR [ecx-0x2d0be0f5],eax
  40181d:	test   BYTE PTR ds:0x5326e8c2,bh
  401823:	push   es
  401824:	das    
  401825:	popf   
  401826:	(bad)  
  401827:	jle    0x401811
  401829:	test   DWORD PTR [edi+0x3f3cae8c],esi
  40182f:	push   eax
  401830:	xor    eax,0x514ec814
  401835:	popf   
  401836:	jge    0x40186d
  401838:	addr16 icebp 
  40183a:	(bad)  
  40183b:	aad    0xd7
  40183d:	cmp    cl,ch
  40183f:	xor    DWORD PTR [esi],ebx
  401841:	aas    
  401842:	push   edi
  401843:	push   ebx
  401844:	add    ebx,DWORD PTR [ebx-0x19decbb1]
  40184a:	push   ecx
  40184b:	push   eax
  40184c:	test   BYTE PTR [esi-0x15222880],dh
  401852:	mov    al,ds:0x1c5fb914
  401857:	push   esp
  401858:	sbb    eax,0x1932fbf
  40185d:	and    eax,0x25dafca4
  401862:	cmp    BYTE PTR [eax+0x1b10c278],bl
  401868:	test   eax,0x68c50585
  40186d:	pop    edx
  40186e:	pop    ss
  40186f:	ret    
  401870:	clc    
  401871:	rcl    edx,1
  401873:	std    
  401874:	cwde   
  401875:	dec    ecx
  401876:	dec    esi
  401877:	and    eax,0x84c27a2a
  40187c:	jne    0x401ca9
  401882:	mov    ecx,DWORD PTR ds:0x434703
  401888:	or     DWORD PTR ds:0x4345e3,ecx
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [edi],cl
  4018a0:	jmp    0x7e7e:0x7b1b9cf1
  4018a7:	mov    ch,0x7f
  4018a9:	jle    0x401929
  4018ab:	lds    edi,FWORD PTR [edi]
  4018ad:	leave  
  4018ae:	dec    edx
  4018af:	aas    
  4018b0:	push   ss
  4018b1:	mov    dl,0x66
  4018b3:	mov    al,0xdb
  4018b5:	mov    DWORD PTR [edi-0x51c581d4],ecx
  4018bb:	out    dx,al
  4018bc:	cmp    ch,ch
  4018be:	mov    eax,0xbeefc17a
  4018c3:	addr16 mov dl,0x41
  4018c6:	lea    esp,[eax]
  4018c8:	aas    
  4018c9:	js     0x40193a
  4018cb:	out    dx,al
  4018cc:	cli    
  4018cd:	push   ecx
  4018ce:	into   
  4018cf:	add    DWORD PTR es:[edi-0x5923b8d1],ebp
  4018d6:	sbb    DWORD PTR [esp+eax*4+0x18c26093],edi
  4018dd:	lds    ebp,FWORD PTR ds:[ecx+edx*4]
  4018e1:	scas   al,BYTE PTR es:[edi]
  4018e2:	sar    BYTE PTR [ebx],cl
  4018e4:	push   edx
  4018e5:	cmp    DWORD PTR [edi-0x26],ecx
  4018e8:	icebp  
  4018e9:	mov    ebx,DWORD PTR [esi]
  4018eb:	sub    ch,BYTE PTR [edi+ecx*4+0x5e664a51]
  4018f2:	pushf  
  4018f3:	pop    ss
  4018f4:	xchg   edx,eax
  4018f5:	pop    ecx
  4018f6:	sub    al,0xc5
  4018f8:	shl    BYTE PTR [esi+0x541b36ea],1
  4018fe:	sbb    dl,BYTE PTR [ebx-0x45]
  401901:	fmulp  st(5),st
  401903:	mov    eax,0x628edcf3
  401908:	mov    al,0xba
  40190a:	call   0x55e1:0x2357e30b
  401911:	push   edi
  401912:	add    al,0xa2
  401914:	pushf  
  401915:	dec    edx
  401916:	adc    bl,bl
  401918:	shl    BYTE PTR [edx-0x4],0xce
  40191c:	jmp    0x4018fa
  40191e:	out    dx,al
  40191f:	push   ebx
  401920:	jno    0x4019a1
  401922:	sahf   
  401923:	mov    dl,0x3f
  401925:	sbb    DWORD PTR [edx-0x5eed4e74],ebx
  40192b:	mov    edi,0x9d028f99
  401930:	sbb    eax,0xe09cbab2
  401935:	addr16 cmc 
  401937:	push   0xffffffcb
  401939:	mov    al,0xf9
  40193b:	inc    edx
  40193c:	fisub  DWORD PTR [esi+0x4d]
  40193f:	push   eax
  401940:	sbb    DWORD PTR [ebp+0x1],esp
  401943:	(bad)  
  401944:	rol    DWORD PTR [ebx+0x6671a5a7],cl
  40194a:	inc    ebx
  40194b:	mov    BYTE PTR [edx-0x7f],cl
  40194e:	mov    ebp,0x54236847
  401953:	(bad)  
  401954:	jmp    FWORD PTR [edx]
  401956:	jns    0x401936
  401958:	imul   DWORD PTR [edi-0x5a]
  40195b:	loop   0x40195f
  40195d:	or     al,BYTE PTR [edx-0x7aa3f873]
  401963:	test   esi,esi
  401965:	call   0xdaa42a7e
  40196a:	loop   0x4019b2
  40196c:	scas   eax,DWORD PTR es:[edi]
  40196d:	add    edx,esi
  40196f:	mov    ebp,0x1d69e6fb
  401974:	lods   al,BYTE PTR ds:[esi]
  401975:	mov    eax,0xf849f011
  40197a:	dec    esi
  40197b:	icebp  
  40197c:	cmp    bl,dh
  40197e:	stos   DWORD PTR es:[edi],eax
  40197f:	mov    edx,0x89e960dc
  401984:	ret    0x484b
  401987:	pop    edi
  401988:	inc    edx
  401989:	and    DWORD PTR ds:0xaec5d480,edi
  40198f:	call   0xe731:0xa3eb7ef0
  401996:	jno    0x4019c6
  401998:	ficomp WORD PTR [ebx]
  40199a:	daa    
  40199b:	hlt    
  40199c:	aas    
  40199d:	inc    esp
  40199e:	xlat   BYTE PTR ds:[ebx]
  40199f:	das    
  4019a0:	into   
  4019a1:	mov    cl,0xd1
  4019a3:	mov    dl,0x8d
  4019a5:	jge    0x4019ca
  4019a7:	push   esp
  4019a8:	push   ss
  4019a9:	or     DWORD PTR [edx-0x4f],0x11
  4019ad:	pop    edx
  4019ae:	pop    esp
  4019af:	push   0x7ac8a5b9
  4019b4:	cmp    ah,BYTE PTR [esi+eiz*8+0x41]
  4019b8:	mov    al,0x1c
  4019ba:	inc    ecx
  4019bb:	mov    dh,0xe0
  4019bd:	shl    BYTE PTR [ecx+0x11278dfc],cl
  4019c3:	fsub   QWORD PTR [edx]
  4019c5:	jecxz  0x4019f8
  4019c7:	ins    BYTE PTR es:[edi],dx
  4019c8:	mov    ecx,0xf719f229
  4019cd:	cmp    eax,0x54d0ed26
  4019d2:	int3   
  4019d3:	push   0xc
  4019d5:	inc    BYTE PTR ds:0x49a3f654
  4019db:	mov    esp,0x80f0b953
  4019e0:	mov    ds:0xca694fe7,al
  4019e5:	sbb    BYTE PTR [ebx+0x3a],dh
  4019e8:	aas    
  4019e9:	fwait
  4019ea:	xchg   ebp,eax
  4019eb:	pinsrw mm1,WORD PTR [edx-0x57],0xb3
  4019f0:	mov    ch,0xc
  4019f2:	xor    DWORD PTR [edi+0x5874d1d],edi
  4019f8:	and    bl,BYTE PTR ds:0x5662a6b3
  4019fe:	and    al,0x6d
  401a00:	repz jne 0x401a47
  401a03:	sti    
  401a04:	xchg   edx,eax
  401a05:	std    
  401a06:	out    0xc1,eax
  401a08:	push   cs
  401a09:	outs   dx,BYTE PTR ds:[esi]
  401a0a:	jl     0x401a71
  401a0c:	ds out dx,eax
  401a0e:	fimul  WORD PTR [edi-0x73bc2692]
  401a14:	ja     0x401a2e
  401a16:	mov    esp,0x132230d5
  401a1b:	jmp    0x80b2f0db
  401a20:	xchg   DWORD PTR [esi],esp
  401a22:	mov    ecx,0x692b883e
  401a27:	or     dh,ah
  401a29:	lods   eax,DWORD PTR ds:[esi]
  401a2a:	lods   al,BYTE PTR ds:[esi]
  401a2b:	adc    esp,edi
  401a2d:	pusha  
  401a2e:	addr16 mov eax,ds:0xea7e
  401a32:	ins    BYTE PTR es:[edi],dx
  401a33:	ficom  WORD PTR [ebp-0x4f85acfe]
  401a39:	lods   al,BYTE PTR ds:[esi]
  401a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a3b:	js     0x4019d0
  401a3d:	lods   al,BYTE PTR ds:[esi]
  401a3e:	pop    ebx
  401a3f:	sbb    eax,0x6412a43f
  401a44:	xor    BYTE PTR [ecx-0x15ec6156],dh
  401a4a:	pop    ebp
  401a4b:	dec    edx
  401a4d:	pop    ebx
  401a4e:	loopne 0x401a28
  401a50:	cdq    
  401a51:	aad    0x32
  401a53:	mov    eax,0x5eccab7e
  401a58:	sub    ah,BYTE PTR [esi+0x11]
  401a5b:	sub    dl,BYTE PTR [eax-0x69]
  401a5e:	mov    ah,0xdb
  401a60:	es ja  0x4019ee
  401a63:	inc    ebp
  401a64:	or     BYTE PTR [ecx+0x4346cf25],al
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x4346cf0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x4346cf
  401a7c:	cmp    DWORD PTR ds:0x4346cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4346cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4346cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4346cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4346cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x46f8485e
  401ae8:	inc    edx
  401ae9:	scas   eax,DWORD PTR es:[edi]
  401aea:	push   edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401aab
  401af3:	jae    0x401b01
  401af5:	fdiv   DWORD PTR [ebx-0x6f]
  401af8:	inc    esi
  401af9:	lahf   
  401afa:	sti    
  401afb:	rol    DWORD PTR [ecx],0xb3
  401afe:	pop    edx
  401aff:	push   ss
  401b00:	sbb    al,0x7f
  401b02:	ins    DWORD PTR es:[edi],dx
  401b03:	in     eax,0xc4
  401b05:	pop    ds
  401b06:	adc    DWORD PTR [edx+edx*2+0x5f],esi
  401b0a:	and    ebx,ecx
  401b0c:	push   0x6dbaf1c1
  401b11:	xchg   ebx,eax
  401b12:	pop    esi
  401b13:	fs push edx
  401b15:	ja     0x401b8a
  401b17:	push   ecx
  401b18:	sti    
  401b19:	lahf   
  401b1a:	std    
  401b1b:	ret    0x43d0
  401b1e:	pushf  
  401b1f:	ja     0x401b3f
  401b21:	sti    
  401b22:	inc    ecx
  401b23:	jnp    0x401aab
  401b25:	popf   
  401b26:	loope  0x401b27
  401b28:	jne    0x401ada
  401b2a:	sbb    BYTE PTR [ecx-0x38],dh
  401b2d:	xchg   edi,eax
  401b2e:	and    cl,cl
  401b30:	push   ss
  401b31:	out    0x73,al
  401b33:	dec    edx
  401b34:	cdq    
  401b35:	sbb    bh,dl
  401b37:	adc    cl,BYTE PTR [ecx+eax*1]
  401b3a:	push   ss
  401b3b:	sbb    eax,0xa24c4bd4
  401b40:	push   0xb0db9d57
  401b45:	xchg   DWORD PTR [ebp-0x2],ebx
  401b48:	ja     0x401b86
  401b4a:	fdiv   DWORD PTR [ebx+0x57]
  401b4d:	mov    BYTE PTR [ecx-0x29],dl
  401b50:	inc    ecx
  401b51:	das    
  401b52:	bound  ecx,QWORD PTR [esi]
  401b54:	test   DWORD PTR [esi+0x35],eax
  401b57:	mov    eax,ds:0x8b9ae6f3
  401b5c:	inc    ebp
  401b5d:	test   DWORD PTR [esi+0x27],ecx
  401b60:	sub    DWORD PTR [edx+0x46],edx
  401b63:	ins    DWORD PTR es:[edi],dx
  401b64:	aas    
  401b65:	push   edi
  401b66:	pop    eax
  401b67:	jns    0x401b3b
  401b69:	repnz xchg esi,eax
  401b6b:	mov    esp,0xada16a8f
  401b70:	fucomp st(7)
  401b72:	jg     0x401b1b
  401b74:	cmp    DWORD PTR [edx],eax
  401b76:	cmp    eax,0x484a57d2
  401b7b:	(bad)  
  401b7c:	lahf   
  401b7d:	loope  0x401aff
  401b7f:	push   ebx
  401b80:	imul   ecx,DWORD PTR [esi-0x76],0xa62c9e6f
  401b87:	xchg   DWORD PTR [ebx+0x53f336a1],ecx
  401b8d:	mov    ds:0x8a0711d1,al
  401b92:	mov    esi,0x4e4257c6
  401b97:	fwait
  401b98:	or     BYTE PTR [bx+di+0x1f74],bl
  401b9d:	sbb    al,0x28
  401b9f:	lods   eax,DWORD PTR ds:[esi]
  401ba0:	add    ebx,edx
  401ba2:	test   BYTE PTR [edi-0x3e],dl
  401ba5:	sub    edx,esi
  401ba7:	stos   DWORD PTR es:[edi],eax
  401ba8:	les    esi,FWORD PTR [edx]
  401baa:	sbb    edx,DWORD PTR [edx-0x65]
  401bad:	mov    ds:0x5d837272,al
  401bb2:	push   cs
  401bb3:	jl     0x401bcc
  401bb5:	push   esp
  401bb6:	xor    BYTE PTR [edi+ebp*4-0x10],ch
  401bba:	into   
  401bbb:	(bad)
  401bbe:	pop    ebp
  401bbf:	or     esp,DWORD PTR [ebp-0x46428f54]
  401bc5:	jmp    edi
  401bc7:	sbb    esp,0xffffffc2
  401bca:	xchg   ecx,eax
  401bcb:	push   es
  401bcc:	add    ebp,edx
  401bce:	push   edi
  401bcf:	ss sbb edx,esi
  401bd2:	jb     0x401c4b
  401bd4:	outs   dx,BYTE PTR cs:[esi]
  401bd6:	and    eax,eax
  401bd8:	imul   ebp,DWORD PTR [esi+ebp*4+0x53ae1c13],0xffffff97
  401be0:	dec    ebp
  401be1:	xor    ebx,ecx
  401be3:	jns    0x401bb3
  401be5:	pop    ebx
  401be6:	or     eax,DWORD PTR [edi-0x552c117d]
  401bec:	dec    esp
  401bed:	jb     0x401be8
  401bef:	sbb    ah,BYTE PTR [edx]
  401bf1:	rol    BYTE PTR [ebx],0x78
  401bf4:	retf   0xea27
  401bf7:	repnz ins DWORD PTR es:[edi],dx
  401bf9:	fmul   DWORD PTR ds:0x534754a6
  401bff:	stos   BYTE PTR es:[edi],al
  401c00:	sub    al,0x4c
  401c02:	loop   0x401b86
  401c04:	lds    esp,FWORD PTR [esi]
  401c06:	dec    esi
  401c07:	sbb    DWORD PTR [edx+0x796eb544],ebp
  401c0d:	mov    ds:0x2b209a9,al
  401c12:	cwde   
  401c13:	rol    BYTE PTR [esi+0x35f77516],1
  401c19:	out    0x25,eax
  401c1b:	xor    DWORD PTR [edx-0x44d2bdb],eax
  401c21:	ins    DWORD PTR es:[edi],dx
  401c22:	xchg   ecx,eax
  401c23:	add    edi,DWORD PTR [ebp+0x5310eff]
  401c29:	jmp    0xe7c8:0xfda53856
  401c30:	mov    esp,0xfaec8290
  401c35:	jae    0x401bda
  401c37:	dec    eax
  401c38:	cld    
  401c39:	lock cmp al,0x7
  401c3c:	xchg   ebp,eax
  401c3d:	mov    bl,0xe9
  401c3f:	xchg   ebp,eax
  401c40:	xchg   esi,eax
  401c41:	sub    eax,0xe27395d5
  401c46:	aad    0x74
  401c48:	cmp    al,BYTE PTR [esp+eax*2-0x21]
  401c4c:	jnp    0x401cb6
  401c4e:	cmp    eax,DWORD PTR [ebx-0x39]
  401c51:	mov    esi,0x9c059f97
  401c56:	(bad)  
  401c57:	xchg   edx,eax
  401c58:	not    BYTE PTR [edi-0x553243b8]
  401c5e:	mov    edi,0x2f7d7c09
  401c63:	mov    dl,0x3c
  401c65:	daa    
  401c66:	mov    ebp,0xbbb3ae68
  401c6b:	pop    ds
  401c6c:	cmp    eax,0xcc0c882c
  401c71:	xchg   ebp,eax
  401c72:	push   ecx
  401c73:	fcomp  DWORD PTR [edi]
  401c75:	aad    0xe0
  401c77:	jl     0x401bfe
  401c79:	xor    eax,DWORD PTR [esi+0x5442782f]
  401c7f:	dec    ebx
  401c80:	gs mov eax,?
  401c83:	ins    DWORD PTR es:[edi],dx
  401c84:	mov    fs,WORD PTR [edx-0x3c]
  401c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c88:	(bad)  
  401c89:	lods   al,BYTE PTR ds:[esi]
  401c8a:	das    
  401c8b:	cmp    dl,BYTE PTR [ebx]
  401c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c8e:	test   DWORD PTR [edi],edx
  401c90:	dec    edi
  401c91:	fist   WORD PTR ds:0x64796b74
  401c97:	xor    BYTE PTR [esi],ch
  401c99:	xor    BYTE PTR [ebp+0x1],al
  401c9c:	cmp    bl,BYTE PTR [edi+0x1fd448e3]
  401ca2:	imul   ecx,esp,0x316a023f
  401ca8:	and    al,0xa1
  401caa:	ror    BYTE PTR [ebx+0x41],cl
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	sar    DWORD PTR [esi-0x7],1
  401ccd:	sub    ecx,DWORD PTR [ecx-0x4a8181fa]
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401d13
  401cd7:	iret   
  401cd8:	stos   DWORD PTR es:[edi],eax
  401cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cda:	mov    eax,0x6e0154dc
  401cdf:	xchg   ebp,eax
  401ce0:	retf   0x9965
  401ce3:	sbb    bl,BYTE PTR [ecx-0x36b838e8]
  401ce9:	pop    es
  401cea:	rol    bh,0x3b
  401ced:	inc    DWORD PTR [eax]
  401cef:	dec    ecx
  401cf0:	pop    ebp
  401cf1:	fcomip st,st(1)
  401cf3:	xchg   edi,eax
  401cf4:	mov    bl,0xd3
  401cf6:	or     al,0x3c
  401cf8:	jmp    0x51a37524
  401cfd:	loope  0x401c86
  401cff:	cmp    ebx,DWORD PTR [eax-0x2887cece]
  401d05:	push   ecx
  401d06:	cmp    cl,BYTE PTR [edx-0x2af10376]
  401d0c:	fist   WORD PTR [ecx+0x59]
  401d0f:	and    eax,0x3127b2cf
  401d14:	retf   0x2558
  401d17:	pop    esi
  401d18:	adc    edx,DWORD PTR [eax+0x7d]
  401d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1c:	mov    esp,0xe2292e77
  401d21:	or     bl,0x86
  401d24:	mov    ah,0xfa
  401d26:	pop    ebp
  401d27:	aaa    
  401d28:	ins    BYTE PTR es:[edi],dx
  401d29:	movntq QWORD PTR ds:0xd00b1de1,mm1
  401d30:	and    dh,ch
  401d32:	pushf  
  401d33:	lock pop es
  401d35:	popf   
  401d36:	mov    dh,dl
  401d38:	es hlt 
  401d3a:	sub    esi,esi
  401d3c:	loope  0x401d1e
  401d3e:	test   BYTE PTR [ecx],al
  401d40:	cmp    ebp,ecx
  401d42:	xor    DWORD PTR [edx],esi
  401d44:	sub    BYTE PTR [esi+0x64a6b8d0],al
  401d4a:	pop    eax
  401d4b:	js     0x401cff
  401d4d:	pop    edx
  401d4e:	cmp    al,0x20
  401d50:	push   ebp
  401d51:	scas   al,BYTE PTR es:[edi]
  401d52:	mov    esp,0xec8e2684
  401d57:	xlat   BYTE PTR ds:[ebx]
  401d58:	hlt    
  401d59:	ins    BYTE PTR es:[edi],dx
  401d5a:	mov    eax,0x25bfb657
  401d5f:	rol    ebx,cl
  401d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d62:	dec    eax
  401d63:	out    0x38,al
  401d65:	cli    
  401d66:	push   ebx
  401d67:	gs inc edx
  401d69:	xor    al,0xe8
  401d6b:	rol    BYTE PTR [ebp+0x3d300a06],0xa4
  401d72:	xor    eax,0xc1761b6c
  401d77:	out    dx,eax
  401d78:	xchg   BYTE PTR [edx-0x72],ch
  401d7b:	sub    al,BYTE PTR [edx+0x64c20096]
  401d81:	leave  
  401d82:	and    dl,BYTE PTR [eax+0x1c]
  401d85:	dec    ebx
  401d86:	jmp    0xb7fa:0xb5da36e7
  401d8d:	pushw  cs
  401d8f:	sahf   
  401d90:	pusha  
  401d91:	push   ecx
  401d92:	xchg   esp,eax
  401d93:	adc    BYTE PTR [ecx+0x7d348502],0x76
  401d9a:	jns    0x401dda
  401d9c:	push   edx
  401d9d:	and    al,0xd1
  401d9f:	ins    DWORD PTR es:[edi],dx
  401da0:	mov    ds:0x96ca9ed8,eax
  401da5:	lods   al,BYTE PTR ds:[esi]
  401da6:	sbb    al,0xcd
  401da8:	pop    ebp
  401daa:	cmp    DWORD PTR [eax],ebx
  401dac:	stc    
  401dad:	pop    ss
  401dae:	xor    ebp,eax
  401db0:	pop    ss
  401db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401db2:	daa    
  401db3:	cmp    al,0x9c
  401db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401db6:	pop    ebp
  401db7:	jo     0x401d44
  401db9:	cs aad 0x71
  401dbc:	out    dx,eax
  401dbd:	cwde   
  401dbe:	push   esi
  401dbf:	repz scas eax,DWORD PTR es:[edi]
  401dc1:	out    0xc7,al
  401dc3:	push   edi
  401dc4:	mov    dl,0x1e
  401dc6:	xchg   ecx,eax
  401dc7:	dec    eax
  401dc8:	data16 jbe 0x401d91
  401dcb:	push   ss
  401dcc:	jns    0x401dfa
  401dce:	pop    edx
  401dcf:	sub    BYTE PTR [esi-0x3aee4de9],0x40
  401dd6:	push   eax
  401dd7:	xor    BYTE PTR [edx+0x252765a8],ah
  401ddd:	pushf  
  401dde:	ins    BYTE PTR es:[edi],dx
  401ddf:	loope  0x401e5b
  401de1:	(bad)  
  401de2:	dec    ebp
  401de3:	call   0x5ccba828
  401de8:	push   es
  401de9:	les    ebx,FWORD PTR [esi+edx*1+0x29e0d04e]
  401df0:	fdivr  DWORD PTR [edx+0x74]
  401df3:	fcomp  DWORD PTR [edi-0x10]
  401df6:	test   eax,0x4c3ed9d8
  401dfb:	mov    al,0x3f
  401dfd:	rol    DWORD PTR [esi-0x571df483],1
  401e03:	push   ds
  401e04:	gs dec edi
  401e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e07:	cwde   
  401e08:	pop    ecx
  401e09:	cmp    eax,0x4e8655db
  401e0e:	and    eax,0x1a6a9cb9
  401e13:	pop    ebx
  401e14:	aam    0x84
  401e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e17:	test   DWORD PTR [ecx],ebx
  401e19:	add    eax,0x52db6677
  401e1e:	rep outs dx,DWORD PTR ds:[esi]
  401e20:	mov    bl,0xaf
  401e22:	dec    edx
  401e23:	enter  0x57b8,0xdb
  401e27:	fidivr WORD PTR [edi-0x43]
  401e2a:	xlat   BYTE PTR ds:[ebx]
  401e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e2c:	pop    edx
  401e2d:	cdq    
  401e2e:	mov    al,ds:0xb8025b78
  401e33:	jmp    0xbee1986
  401e38:	dec    edx
  401e39:	mov    al,0x79
  401e3b:	(bad)  
  401e3c:	and    al,0xa2
  401e3e:	aaa    
  401e3f:	sti    
  401e40:	sahf   
  401e41:	jecxz  0x401e9e
  401e43:	daa    
  401e44:	cmc    
  401e45:	and    al,0xb
  401e47:	stos   BYTE PTR es:[edi],al
  401e48:	pop    edi
  401e49:	rol    DWORD PTR [edi+ebp*2],0xbb
  401e4d:	push   esi
  401e4e:	xor    al,0xa8
  401e50:	lock stc 
  401e52:	add    eax,0x71cf7f81
  401e57:	mov    dh,0x1f
  401e59:	sbb    eax,ebx
  401e5b:	sub    al,BYTE PTR [esi-0x1524aca]
  401e61:	lock mov ds:0x9dbb9701,al
  401e67:	in     eax,0x11
  401e69:	xor    edi,DWORD PTR [edi+0x4ba8baae]
  401e6f:	cmc    
  401e70:	pop    ecx
  401e71:	lods   eax,DWORD PTR ds:[esi]
  401e72:	cmp    ebp,DWORD PTR [ecx]
  401e74:	stos   DWORD PTR es:[edi],eax
  401e75:	pop    eax
  401e76:	(bad)  
  401e77:	pop    edx
  401e78:	mov    bh,0x64
  401e7a:	(bad)  
  401e7b:	mov    bh,0x3a
  401e7d:	imul   ecx,DWORD PTR [edx+0x674e896c],0x6f6f289c
  401e87:	push   ecx
  401e88:	lods   eax,DWORD PTR ds:[esi]
  401e89:	pop    ebp
  401e8a:	test   BYTE PTR [ecx-0x17b276b8],al
  401e90:	mov    eax,DWORD PTR [ebp+0xc]
  401e93:	mov    ecx,DWORD PTR [ebp+0xc]
  401e96:	xor    eax,esi
  401e98:	add    eax,eax
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	stc    
  401eb0:	pop    ebx
  401eb1:	mov    ?,WORD PTR [ecx-0x40]
  401eb4:	add    BYTE PTR [esi+0x7e],bh
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	dec    esp
  401ebc:	xor    bh,dh
  401ebe:	ja     0x401e5f
  401ec0:	and    ebx,DWORD PTR [ebp-0x2d]
  401ec3:	push   ecx
  401ec4:	ss lahf 
  401ec6:	xchg   esp,eax
  401ec7:	scas   al,BYTE PTR es:[edi]
  401ec8:	popf   
  401ec9:	mov    DWORD PTR [ecx],0x173a4350
  401ecf:	inc    ebx
  401ed0:	shr    ebp,0x6f
  401ed3:	jo     0x401e89
  401ed5:	inc    esp
  401ed6:	rcl    DWORD PTR [edx+0x10],cl
  401ed9:	cmp    esp,esi
  401edb:	xchg   edi,eax
  401edc:	push   0x71
  401ede:	fwait
  401edf:	dec    ecx
  401ee0:	add    DWORD PTR [ecx],ecx
  401ee2:	jo     0x401e98
  401ee4:	lock pop edi
  401ee6:	dec    ebx
  401ee7:	ficom  WORD PTR [edi-0x2f700c5a]
  401eed:	mov    cl,0xcf
  401eef:	dec    ecx
  401ef0:	mov    ebx,0xc95cb859
  401ef5:	push   esp
  401ef6:	not    bh
  401ef8:	loopne 0x401ecc
  401efa:	enter  0xca90,0x4c
  401efe:	pop    esi
  401eff:	popa   
  401f00:	(bad)  
  401f01:	enter  0xd9c3,0x1d
  401f05:	repnz xchg ebp,eax
  401f07:	daa    
  401f08:	(bad)  
  401f09:	sar    dh,cl
  401f0b:	xchg   ebx,eax
  401f0c:	push   esp
  401f0d:	mov    cl,0x17
  401f0f:	fcom   DWORD PTR [ebx-0x32]
  401f12:	retf   
  401f13:	cmp    al,0x5a
  401f15:	cs add esp,ecx
  401f18:	dec    BYTE PTR [ebp-0x6bd979e2]
  401f1e:	sub    eax,0x6d2a295f
  401f23:	repz mov ch,0xa8
  401f26:	cdq    
  401f27:	test   eax,0x862a82b
  401f2c:	rcr    edx,0x72
  401f2f:	mov    ecx,0x91a1ac46
  401f34:	pop    ss
  401f35:	outs   dx,BYTE PTR ds:[esi]
  401f36:	idiv   BYTE PTR [ebx-0x7b]
  401f39:	push   esp
  401f3a:	or     al,0x3f
  401f3c:	or     al,0x74
  401f3e:	pop    ebp
  401f3f:	cdq    
  401f40:	repnz mov eax,0x36a0d959
  401f46:	dec    edi
  401f47:	add    cl,BYTE PTR [esi]
  401f49:	xor    DWORD PTR [edx],esi
  401f4b:	add    BYTE PTR [ebx-0x720d5b51],ah
  401f51:	sub    DWORD PTR [ebx-0x6d3905db],edi
  401f57:	adc    ebx,DWORD PTR [ebp+0x3f90be7a]
  401f5d:	les    edx,FWORD PTR [edx+0x3c]
  401f60:	lea    esi,[edx+0x52]
  401f63:	arpl   WORD PTR [ecx],si
  401f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f66:	sahf   
  401f67:	(bad)  
  401f68:	mov    edi,0xaa123b93
  401f6d:	push   ebp
  401f6e:	sub    ch,BYTE PTR [ecx-0x293bc3b7]
  401f74:	stos   DWORD PTR es:[edi],eax
  401f75:	nop
  401f76:	pusha  
  401f77:	test   BYTE PTR [edi-0x66],bh
  401f7a:	repnz mov ds:0x884f7fe7,eax
  401f80:	sar    DWORD PTR [ebx+0x15],0x44
  401f84:	jnp    0x401f38
  401f86:	add    bh,ch
  401f88:	and    ch,BYTE PTR [esi+0x7f]
  401f8b:	jae    0x401f66
  401f8d:	xor    BYTE PTR [ecx-0x70],ch
  401f90:	imul   DWORD PTR [ebx-0x56]
  401f93:	sub    BYTE PTR [ecx+0x32],dh
  401f96:	xchg   esp,eax
  401f97:	pushf  
  401f98:	test   al,0x13
  401f9a:	xchg   ebx,eax
  401f9b:	xchg   esp,eax
  401f9c:	inc    edx
  401f9d:	gs inc edi
  401f9f:	adc    al,0x24
  401fa1:	mov    eax,ds:0x448db713
  401fa6:	sahf   
  401fa7:	fs and esp,ecx
  401faa:	push   eax
  401fab:	imul   ebx,DWORD PTR [edi],0xd324d1f2
  401fb1:	adc    bh,0x3c
  401fb4:	je     0x401ffc
  401fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fb7:	aaa    
  401fb8:	cmp    DWORD PTR [ecx+0x66],edi
  401fbb:	and    ah,bh
  401fbd:	mov    eax,ds:0x91440cc6
  401fc2:	repnz sti 
  401fc4:	xchg   esp,eax
  401fc5:	shl    dh,0xa6
  401fc8:	inc    edx
  401fc9:	mov    esi,0xa8d164e4
  401fce:	int3   
  401fcf:	in     al,0x43
  401fd1:	cdq    
  401fd2:	inc    edx
  401fd3:	inc    esp
  401fd4:	mov    al,0x49
  401fd6:	fsubr  DWORD PTR [esi+edi*4-0x62]
  401fda:	mov    ah,0x5c
  401fdc:	es jle 0x402057
  401fdf:	cmc    
  401fe0:	shl    BYTE PTR [ebp-0x5d5e55b5],cl
  401fe6:	retf   
  401fe7:	jmp    0x401f78
  401fe9:	push   eax
  401fea:	adc    DWORD PTR [ebp-0x713f105f],edx
  401ff0:	pop    ecx
  401ff1:	add    BYTE PTR [ebp-0x36028995],ah
  401ff7:	rcr    dl,1
  401ff9:	sahf   
  401ffa:	imul   eax,DWORD PTR [eax-0x46974e2f],0xffffffb8
  402001:	ds or  al,0xca
  402004:	(bad)  
  402005:	shl    BYTE PTR [edx+0xf86844f],cl
  40200b:	pop    ecx
  40200c:	mov    es,WORD PTR [esi+ecx*2+0x6f]
  402010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402011:	xchg   edi,eax
  402012:	repnz popf 
  402014:	arpl   WORD PTR ds:0x4a9b9833,cx
  40201a:	xor    al,0xae
  40201c:	pop    ebx
  40201d:	retf   
  40201e:	pop    eax
  40201f:	cmp    dl,ah
  402021:	sub    al,0x9b
  402023:	ret    
  402024:	dec    edx
  402025:	push   ds
  402026:	call   0x4daf3d19
  40202b:	(bad)  
  40202c:	ficom  WORD PTR [eax-0x19]
  40202f:	daa    
  402030:	test   al,0x77
  402032:	or     eax,0x6bfdbacc
  402037:	into   
  402038:	jns    0x401fcf
  40203a:	les    eax,FWORD PTR [edx-0x54e31f30]
  402040:	sbb    DWORD PTR [ebx+0x29edb486],edx
  402046:	dec    ecx
  402047:	mov    ecx,DWORD PTR [ebp+0x39ddedce]
  40204d:	fnstenv [eax-0x695a451c]
  402053:	retf   
  402054:	out    dx,al
  402055:	cmp    edi,DWORD PTR [eax+0x5a]
  402058:	jg     0x402019
  40205a:	xchg   edi,eax
  40205b:	int    0x5a
  40205d:	stos   BYTE PTR es:[edi],al
  40205e:	push   eax
  40205f:	or     BYTE PTR [esi],ah
  402061:	daa    
  402062:	add    dh,ah
  402064:	shl    DWORD PTR [edi-0x3aa9702e],1
  40206a:	sar    DWORD PTR [edx-0x74],cl
  40206d:	xor    al,0x2c
  40206f:	jp     0x40209a
  402071:	mov    eax,ds:0xfc458b66
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    ebx,esp
  4020a2:	pop    ds
  4020a3:	test   al,0x9c
  4020a5:	jg     0x4020a9
  4020a7:	jle    0x402127
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	cmp    ecx,0xffffffb7
  4020b0:	push   ecx
  4020b1:	mov    bh,bl
  4020b3:	sbb    eax,0xb097bd0a
  4020b8:	(bad)  
  4020b9:	setno  BYTE PTR [ebx-0x2991ea17]
  4020c0:	push   ds
  4020c1:	lods   al,BYTE PTR ds:[esi]
  4020c2:	sbb    al,0xff
  4020c4:	(bad)  
  4020c5:	sbb    edi,ecx
  4020c7:	scas   al,BYTE PTR es:[edi]
  4020c8:	jbe    0x402097
  4020ca:	outs   dx,DWORD PTR ds:[esi]
  4020cb:	je     0x4020f0
  4020cd:	repnz scas al,BYTE PTR es:[edi]
  4020cf:	fidivr DWORD PTR [edi+0x2cc4cb74]
  4020d5:	sub    DWORD PTR [edi-0x44ec4541],edi
  4020db:	iret   
  4020dc:	xchg   ebx,eax
  4020dd:	enter  0x3713,0x5
  4020e1:	fs leave 
  4020e3:	push   ebp
  4020e4:	jns    0x4020f9
  4020e6:	fist   DWORD PTR [ebx+eax*4-0x5ea71ce6]
  4020ed:	jecxz  0x402089
  4020ef:	push   edx
  4020f0:	js     0x402148
  4020f2:	outs   dx,BYTE PTR ds:[esi]
  4020f3:	popa   
  4020f4:	pushf  
  4020f5:	jg     0x402101
  4020f7:	sub    DWORD PTR ds:0x707a0174,ebp
  4020fd:	ja     0x402140
  4020ff:	mov    BYTE PTR [edx-0x39a1e318],ah
  402105:	lahf   
  402106:	pop    esi
  402107:	scas   al,BYTE PTR es:[edi]
  402108:	scas   eax,DWORD PTR es:[edi]
  402109:	aam    0x45
  40210b:	mov    ebx,0xf7c2c60b
  402110:	outs   dx,DWORD PTR ds:[esi]
  402111:	aas    
  402112:	add    al,0x4b
  402114:	cmp    eax,0x885d3a95
  402119:	dec    ebx
  40211a:	xor    DWORD PTR [ebp+edi*1-0x55],edi
  40211e:	in     eax,dx
  40211f:	aam    0x1f
  402121:	js     0x40218c
  402123:	add    DWORD PTR [edi-0xa],edi
  402126:	cmc    
  402127:	test   eax,0xa6b87101
  40212c:	idiv   BYTE PTR [ebx-0x75]
  40212f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402130:	cli    
  402131:	shl    DWORD PTR [edi-0x4a6bfe23],0xaf
  402138:	add    al,0x21
  40213a:	mov    al,0x8d
  40213c:	lea    ebx,[ebx+0x4f]
  40213f:	(bad)  
  402140:	out    0xae,eax
  402142:	inc    ecx
  402143:	adc    al,0x20
  402145:	aas    
  402146:	xchg   edx,ecx
  402148:	jle    0x4020db
  40214a:	add    ebx,DWORD PTR [edi]
  40214c:	dec    edi
  40214d:	clc    
  40214e:	(bad)  
  40214f:	stc    
  402150:	loope  0x40214d
  402152:	mov    al,ds:0xfe6fd804
  402157:	(bad)  
  402158:	ret    0x85ce
  40215b:	mov    al,ds:0xa190aca2
  402160:	je     0x4021d1
  402162:	clc    
  402163:	scas   eax,DWORD PTR es:[edi]
  402164:	jmp    0x402167
  402166:	inc    eax
  402167:	jnp    0x40212c
  402169:	shl    BYTE PTR [ecx+esi*2-0x6ced84c0],1
  402170:	ins    BYTE PTR es:[edi],dx
  402171:	mov    ecx,0x415c2f92
  402176:	js     0x40219e
  402178:	je     0x402115
  40217a:	aam    0xcb
  40217c:	sub    ecx,DWORD PTR [esi+0x352b0d7a]
  402182:	adc    DWORD PTR [edx-0x4c3b4f41],ebx
  402188:	jno    0x402158
  40218a:	ror    edi,1
  40218c:	adc    eax,0x804df60a
  402191:	push   esp
  402192:	xchg   ecx,eax
  402193:	and    eax,0x8b9d962
  402198:	mov    esi,esi
  40219a:	pop    ds
  40219b:	sbb    bh,0x2a
  40219e:	retf   
  40219f:	jmp    0x4021e2
  4021a1:	mov    edi,0xdc694d5b
  4021a6:	dec    ebx
  4021a7:	adc    DWORD PTR [ebp-0x59],eax
  4021aa:	in     al,dx
  4021ab:	sub    dl,bh
  4021ad:	jmp    0x27f7c561
  4021b2:	(bad)  
  4021b3:	test   eax,0x38a80705
  4021b8:	jl     0x402223
  4021ba:	jbe    0x402206
  4021bc:	sub    DWORD PTR [edx],ebp
  4021be:	sbb    cl,BYTE PTR [ecx-0xa78c24b]
  4021c4:	fwait
  4021c5:	inc    edi
  4021c6:	mov    ecx,0xd7f14b16
  4021cb:	dec    edx
  4021cc:	mov    WORD PTR [edx-0x68db0a8c],cs
  4021d2:	mov    edi,0x19b07781
  4021d7:	mov    dh,0xf7
  4021d9:	ror    DWORD PTR [ecx-0x1c5dd95f],1
  4021df:	push   edi
  4021e0:	(bad)  
  4021e1:	inc    esp
  4021e2:	icebp  
  4021e3:	fdiv   QWORD PTR [esi+eax*2+0x26]
  4021e7:	xchg   edx,eax
  4021e8:	sbb    bl,cl
  4021ea:	adc    ebp,DWORD PTR [eax-0x1567e3e9]
  4021f0:	ror    BYTE PTR [ebp+0x57],cl
  4021f3:	pop    edi
  4021f4:	(bad)  
  4021f5:	out    0xcb,eax
  4021f7:	adc    ebp,DWORD PTR [ebp+0x13]
  4021fa:	pop    ebx
  4021fb:	stos   BYTE PTR es:[edi],al
  4021fc:	call   0x367:0xe8db57a1
  402203:	or     al,0x86
  402205:	jne    0x402262
  402207:	mov    ds:0xca016091,eax
  40220c:	std    
  40220d:	sar    esi,1
  40220f:	dec    BYTE PTR [eax-0x495855ad]
  402215:	inc    eax
  402216:	out    dx,eax
  402217:	sbb    al,0xec
  402219:	push   0xb55c6688
  40221e:	aas    
  40221f:	aas    
  402220:	adc    BYTE PTR [edi],cl
  402222:	mov    esp,0x81dd3903
  402227:	jae    0x40228e
  402229:	(bad)  
  40222a:	je     0x40226c
  40222c:	mov    bh,dh
  40222e:	pop    ds
  40222f:	enter  0xd75c,0xdf
  402233:	xchg   esi,eax
  402234:	dec    edi
  402235:	or     BYTE PTR [edx],0xd1
  402238:	jecxz  0x402219
  40223a:	sbb    eax,DWORD PTR [edx-0x67c561f]
  402240:	in     al,dx
  402241:	add    eax,DWORD PTR [ebp-0x5]
  402244:	adc    DWORD PTR [ebp-0x5],edi
  402247:	imul   ebx,DWORD PTR fs:[ebx+0x2127239e],0x90bd129
  402252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402253:	fidiv  WORD PTR [edx-0x16]
  402256:	mov    ds:0x35d919ab,al
  40225b:	fadd   QWORD PTR ds:0x98fc15b1
  402261:	dec    edx
  402262:	dec    edi
  402263:	das    
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	xtest  
  4022cc:	xlat   BYTE PTR ds:[ebx]
  4022cd:	dec    esp
  4022ce:	mov    dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	in     al,0x7f
  4022d8:	mov    ds:0x4731dd7a,al
  4022dd:	ret    
  4022de:	test   al,0xc5
  4022e0:	sbb    ebx,DWORD PTR [ebp+0x6a206e46]
  4022e6:	pop    eax
  4022e7:	ins    BYTE PTR es:[edi],dx
  4022e8:	cmp    DWORD PTR [esi-0x3c],0xda2656bc
  4022ef:	ret    
  4022f0:	inc    esp
  4022f1:	xor    cl,BYTE PTR [eax+edx*8-0x5a]
  4022f5:	add    ebx,DWORD PTR [eax+ebx*8+0x4969c37]
  4022fc:	xor    DWORD PTR [ebp+edi*2+0x5c6b0ab0],edx
  402303:	int    0xd1
  402305:	test   eax,0x709389e2
  40230a:	mov    ch,0x80
  40230c:	(bad)  
  40230d:	int    0x4e
  40230f:	mov    ebp,0x6cb267c3
  402314:	push   ds
  402315:	pop    bx
  402317:	lods   eax,DWORD PTR ds:[esi]
  402318:	pushf  
  402319:	jae    0x4022dc
  40231b:	sub    BYTE PTR [ebp-0x5f],bl
  40231e:	pop    es
  40231f:	lods   eax,DWORD PTR ds:[esi]
  402320:	sub    eax,DWORD PTR [ebx-0x2cfb2168]
  402326:	mov    eax,ds:0xe636d1c1
  40232b:	ja     0x4022c1
  40232d:	mov    ds:0xa93f72c8,eax
  402332:	inc    ebp
  402333:	and    BYTE PTR [eax],0xe0
  402336:	push   edx
  402337:	jp     0x40237a
  402339:	sbb    bl,BYTE PTR [ecx-0x58598735]
  40233f:	sub    DWORD PTR [ebx+0x1f],0x35f38c9
  402346:	stos   DWORD PTR es:[edi],eax
  402347:	push   edx
  402348:	inc    ebx
  402349:	mov    ch,0x96
  40234b:	sub    cl,BYTE PTR [ebx-0x4f3e7378]
  402351:	push   0xeee5ec29
  402356:	xchg   DWORD PTR [ebp-0x51f3ec8c],eax
  40235c:	push   ds
  40235d:	pop    ebx
  40235e:	mov    ch,0xb3
  402360:	jmp    0x40237a
  402362:	out    0x33,al
  402364:	pop    esp
  402365:	into   
  402366:	cld    
  402367:	test   edx,edx
  402369:	jbe    0x402361
  40236b:	push   0x7e
  40236d:	mov    BYTE PTR [edx],bh
  40236f:	test   DWORD PTR [ebx-0x1479a2c8],esp
  402375:	ret    0x25f5
  402378:	ret    0x6f3f
  40237b:	loop   0x402374
  40237d:	lock and DWORD PTR [ebx+0x48b08584],ebp
  402384:	fst    st(3)
  402386:	push   edx
  402387:	or     eax,0x283fde98
  40238c:	(bad)  
  40238d:	ss push es
  40238f:	ror    BYTE PTR [edx+eiz*8-0x42c23723],1
  402396:	sub    ah,BYTE PTR [eax-0x77]
  402399:	cmc    
  40239a:	mov    ss,WORD PTR [edi+0x36]
  40239d:	cmp    eax,0x2a439ce3
  4023a2:	inc    ebp
  4023a3:	bound  ebp,QWORD PTR [ebp-0x49]
  4023a6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4023a8:	outs   dx,BYTE PTR ds:[esi]
  4023a9:	jecxz  0x402417
  4023ab:	xor    DWORD PTR [eax+eax*4-0x26576939],0x941b31ba
  4023b6:	sbb    DWORD PTR [edi+esi*2-0x62051c16],ebp
  4023bd:	mov    ecx,0x860d5358
  4023c2:	add    eax,DWORD PTR [eax+0x4e8a1c12]
  4023c8:	cmp    ebx,DWORD PTR [eax+0x48]
  4023cb:	cmp    esp,esi
  4023cd:	stos   BYTE PTR es:[edi],al
  4023ce:	jge    0x4023f4
  4023d0:	in     al,0x8b
  4023d2:	dec    esp
  4023d3:	adc    edi,DWORD PTR gs:[edx-0x64]
  4023d7:	(bad)  
  4023d9:	outs   dx,BYTE PTR ds:[esi]
  4023da:	aam    0x88
  4023dc:	inc    edx
  4023dd:	imul   edx,DWORD PTR [eax+0x5a],0x825b7b89
  4023e4:	sahf   
  4023e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e6:	retf   
  4023e7:	int3   
  4023e8:	test   eax,0x8209bd46
  4023ed:	mov    bh,0xdf
  4023ef:	jecxz  0x40242a
  4023f1:	(bad)  
  4023f2:	jne    0x402418
  4023f4:	cli    
  4023f5:	pop    eax
  4023f6:	push   ds
  4023f7:	(bad)  
  4023f8:	leave  
  4023f9:	hlt    
  4023fa:	pop    esp
  4023fb:	pushf  
  4023fc:	es add eax,0x71792808
  402402:	les    esi,FWORD PTR [edi+0x3c0286ee]
  402408:	popf   
  402409:	std    
  40240a:	daa    
  40240b:	jg     0x4023ba
  40240d:	xchg   edi,eax
  40240e:	mov    bh,0x8a
  402410:	(bad)  
  402411:	pop    ebx
  402412:	fldenv [ebp-0x756abb9c]
  402418:	stc    
  402419:	adc    al,0x5
  40241b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40241c:	mov    cl,0xb2
  40241e:	mov    al,ds:0x9ae699c2
  402423:	mov    BYTE PTR [eax-0x3f],bh
  402426:	jmp    ecx
  402428:	xor    eax,0xb1fd8d6b
  40242d:	jmp    0x783c:0xc14ce68
  402434:	pop    edi
  402435:	push   eax
  402436:	push   ebx
  402437:	xchg   ebp,eax
  402438:	or     BYTE PTR [ebx+0x72e7951c],0x90
  40243f:	pop    esi
  402440:	push   edi
  402441:	adc    cl,BYTE PTR [ebx+0x1c]
  402444:	jge    0x40240a
  402446:	cmp    eax,0x8b1878f2
  40244b:	jg     0x402473
  40244d:	iret   
  40244e:	mov    esi,0xfeac6ecb
  402453:	leave  
  402454:	and    dl,bl
  402456:	not    DWORD PTR [ebx]
  402458:	ror    BYTE PTR [ebx],0x31
  40245b:	mov    ch,BYTE PTR [esi]
  40245d:	xchg   esp,eax
  40245e:	xchg   edx,eax
  40245f:	cdq    
  402460:	aam    0x65
  402462:	sub    al,0xc8
  402464:	mov    es,WORD PTR [edi-0xc662e21]
  40246a:	push   eax
  40246b:	(bad)  
  40246c:	inc    ebp
  40246d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246e:	mov    eax,0xcb8c7af6
  402473:	or     BYTE PTR [edx-0x88c1efb],bh
  402479:	pop    ecx
  40247a:	rol    BYTE PTR [eax],1
  40247c:	xchg   ecx,eax
  40247d:	mov    al,ds:0xb7ccd13f
  402482:	sahf   
  402483:	(bad)  
  402484:	mov    ds:0x4a2a2608,eax
  402489:	push   esp
  40248a:	fisttp WORD PTR [esp+esi*2-0x75]
  40248e:	dec    ebp
  40248f:	clc    
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xfd55566f
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	test   eax,0xaee02622
  4024de:	and    ebx,DWORD PTR ds:0x636b133a
  4024e4:	push   ss
  4024e5:	nop
  4024e6:	jno    0x40249c
  4024e8:	jecxz  0x402530
  4024ea:	inc    ebx
  4024eb:	mov    eax,0x1563e352
  4024f0:	pop    ebp
  4024f1:	test   eax,0xaaa6f2b7
  4024f6:	pop    ebp
  4024f7:	rcl    BYTE PTR [esi-0x75ccce9f],cl
  4024fd:	in     eax,0x88
  4024ff:	psubusw mm3,QWORD PTR [edx+0x4]
  402503:	cmp    esp,0xb08c99eb
  402509:	cwde   
  40250a:	add    eax,0xb66b8fcf
  40250f:	cmp    cl,al
  402511:	dec    edi
  402512:	pop    ss
  402513:	int    0x23
  402515:	aaa    
  402516:	mov    eax,es:0x32b0a837
  40251c:	lods   al,BYTE PTR ds:[esi]
  40251d:	adc    edx,DWORD PTR [eax+0xa29a398]
  402523:	in     al,0x98
  402525:	mov    ebx,0x9249b68c
  40252a:	ins    DWORD PTR es:[edi],dx
  40252b:	icebp  
  40252c:	xchg   esi,eax
  40252d:	xchg   ah,cl
  40252f:	je     0x4024c3
  402531:	pop    esi
  402532:	cli    
  402533:	dec    eax
  402534:	shl    ch,1
  402536:	add    edx,DWORD PTR [eax+0x70]
  402539:	das    
  40253a:	int3   
  40253b:	test   DWORD PTR [ecx],edi
  40253d:	sub    DWORD PTR [edi],edx
  40253f:	pop    esp
  402540:	in     al,0x49
  402542:	cmp    BYTE PTR [esi+0x48f28b9c],0x34
  402549:	xchg   edi,eax
  40254a:	sub    BYTE PTR [edx+0x2e584821],dh
  402550:	mov    ds:0x68eab557,al
  402555:	fist   WORD PTR [ebx]
  402557:	aas    
  402558:	push   ebp
  402559:	addr16 fwait
  40255b:	xchg   esi,eax
  40255c:	std    
  40255d:	xchg   esi,eax
  40255e:	jmp    0xcc5c:0x4aea9907
  402565:	xchg   edi,eax
  402566:	add    ecx,DWORD PTR [edx-0x68]
  402569:	adc    DWORD PTR [edx],ecx
  40256b:	xlat   BYTE PTR ds:[ebx]
  40256c:	(bad)  
  40256d:	cmp    al,0x1e
  40256f:	adc    BYTE PTR [ebx-0x9ce646f],cl
  402575:	inc    ebx
  402576:	adc    BYTE PTR [ebx],al
  402578:	pop    ds
  402579:	cmp    al,0x87
  40257b:	xchg   ebp,eax
  40257c:	sub    bl,cl
  40257e:	and    eax,0x4a2e3e74
  402583:	or     eax,0xe4a0c2eb
  402588:	inc    DWORD PTR [esi-0xad75b2b]
  40258e:	leave  
  40258f:	and    eax,edx
  402591:	mov    ds:0x752c6921,eax
  402596:	push   edx
  402597:	ffree  st(0)
  402599:	xchg   esi,eax
  40259a:	sti    
  40259b:	(bad)  
  40259c:	shl    DWORD PTR [ebp-0x2f56c8a2],1
  4025a2:	and    al,0xc2
  4025a4:	push   edx
  4025a5:	cmp    eax,0xaabb7e10
  4025aa:	retf   0x43d9
  4025ad:	inc    esp
  4025ae:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4025b0:	xchg   edi,eax
  4025b1:	jne    0x402574
  4025b3:	(bad)
  4025b6:	gs cmp esp,ecx
  4025b9:	xor    eax,0x1407853c
  4025be:	push   cs
  4025bf:	in     al,dx
  4025c0:	aad    0x6c
  4025c2:	sbb    eax,esi
  4025c4:	xchg   esi,eax
  4025c5:	ins    DWORD PTR es:[edi],dx
  4025c6:	mov    cl,0xa5
  4025c8:	jnp    0x402550
  4025ca:	inc    edi
  4025cb:	xor    al,0xc1
  4025cd:	ror    DWORD PTR [edx],1
  4025cf:	mov    dh,0x79
  4025d1:	inc    ebx
  4025d2:	fmul   QWORD PTR [edx-0x52627266]
  4025d8:	xchg   esi,eax
  4025d9:	xlat   BYTE PTR ds:[ebx]
  4025da:	mov    eax,0xf796a56c
  4025df:	xchg   BYTE PTR [eax],cl
  4025e1:	jae    0x4025d8
  4025e3:	test   eax,0xa230ff40
  4025e8:	xor    ch,BYTE PTR cs:[esi-0x71bb9d4]
  4025ef:	cs pop ss
  4025f1:	push   esp
  4025f2:	pop    ss
  4025f3:	imul   esp,DWORD PTR [edi],0x7fb3ad71
  4025f9:	jecxz  0x40263e
  4025fb:	jno    0x402649
  4025fd:	(bad)  
  4025fe:	aad    0x9d
  402600:	adc    bl,BYTE PTR ds:0x5d2d59e
  402606:	adc    DWORD PTR [esi+0x78],0x70
  40260a:	stos   BYTE PTR es:[edi],al
  40260b:	mov    al,0xf4
  40260d:	mov    ds:0x56553bb2,eax
  402612:	and    al,0x12
  402614:	(bad)  
  402615:	repnz inc ecx
  402617:	lods   eax,DWORD PTR ds:[esi]
  402618:	cmc    
  402619:	push   esp
  40261a:	fwait
  40261b:	retf   0xbea0
  40261e:	hlt    
  40261f:	jnp    0x402624
  402621:	jmp    0xb7dee0c2
  402626:	add    esp,eax
  402628:	push   0xe52fc7e4
  40262d:	add    dl,BYTE PTR [edi-0x487c95f7]
  402633:	aaa    
  402634:	xchg   BYTE PTR [esp+esi*4],ch
  402637:	sbb    BYTE PTR [eax-0x64ca9b53],dl
  40263d:	or     ah,BYTE PTR ss:[eax]
  402640:	dec    ebx
  402641:	ficomp WORD PTR [edi-0x747021d8]
  402647:	js     0x402623
  402649:	bound  ebx,QWORD PTR [edx+0x4d]
  40264c:	add    eax,0xc7526c32
  402651:	jmp    0x402606
  402653:	aaa    
  402654:	xorps  xmm3,XMMWORD PTR [eax+0x24cd6437]
  40265b:	stc    
  40265c:	lods   al,BYTE PTR ds:[esi]
  40265d:	cmp    dl,BYTE PTR [esi+0x77f0f1ab]
  402663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402664:	imul   edx,esp,0xffffffcf
  402667:	add    al,BYTE PTR [ebx+0x6a]
  40266a:	add    esi,DWORD PTR [edi+ecx*1-0x62d492ac]
  402671:	popf   
  402672:	xchg   ecx,eax
  402673:	loopne 0x40267e
  402675:	jecxz  0x40267d
  402677:	mov    edx,0xbdbb8cfc
  40267c:	xchg   ebp,eax
  40267d:	xchg   ebx,eax
  40267e:	fst    st(5)
  402680:	and    eax,0x26bbd4c2
  402685:	outs   dx,BYTE PTR ds:[esi]
  402686:	or     DWORD PTR [eax-0x583bb690],ebx
  40268c:	pop    edi
  40268d:	outs   dx,BYTE PTR ds:[esi]
  40268e:	std    
  40268f:	xchg   esi,eax
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x39
  4026c9:	repnz loop 0x402731
  4026cc:	and    al,0xf
  4026ce:	jle    0x40274e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026d5:	and    DWORD PTR [esi-0xb2ebd67],esi
  4026db:	mov    edx,0x5a4393c1
  4026e0:	imul   esp,DWORD PTR [eax-0x7b],0x6f
  4026e4:	in     eax,0x8b
  4026e6:	in     eax,0x50
  4026e8:	out    0xa9,eax
  4026ea:	cmp    ah,dh
  4026ec:	inc    ebx
  4026ed:	jo     0x402703
  4026ef:	sahf   
  4026f0:	jo     0x402705
  4026f2:	xchg   esi,eax
  4026f3:	dec    eax
  4026f4:	pop    eax
  4026f5:	xchg   ebp,eax
  4026f6:	mov    ebp,0x85b302b1
  4026fb:	aad    0x0
  4026fd:	push   0x66
  4026ff:	mov    di,0xff64
  402703:	aaa    
  402704:	xor    eax,0xd8dde771
  402709:	pop    esi
  40270a:	addr16 mov ds:0x262f,eax
  40270e:	push   ds
  40270f:	(bad)  
  402710:	jmp    0x40276d
  402712:	jb     0x40270a
  402714:	pop    esi
  402715:	test   al,0x56
  402717:	push   ss
  402718:	or     DWORD PTR [esi],ebx
  40271a:	jle    0x40271d
  40271c:	leave  
  40271d:	xor    al,0xe2
  40271f:	mov    ebx,0x8b8536a8
  402724:	jmp    0x40272b
  402726:	shr    BYTE PTR ds:0x33833812,0x42
  40272d:	dec    esp
  40272e:	sub    BYTE PTR [edi+0x22],bh
  402731:	xchg   ecx,eax
  402732:	mov    cl,0xc1
  402734:	pop    eax
  402735:	cmp    BYTE PTR [ebx-0x1b],0x91
  402739:	stos   DWORD PTR es:[edi],eax
  40273a:	or     eax,0x6a025fee
  40273f:	pop    ebp
  402740:	hlt    
  402741:	bound  ecx,QWORD PTR [ecx+0x11819d0a]
  402747:	jle    0x402718
  402749:	mov    ebp,0x8b10dc9b
  40274e:	xchg   esi,eax
  40274f:	xchg   edi,eax
  402750:	cld    
  402751:	test   al,0x12
  402753:	mov    edi,0xfd5e858f
  402758:	jecxz  0x402754
  40275a:	xlat   BYTE PTR ds:[ebx]
  40275b:	inc    esi
  40275c:	xchg   esi,eax
  40275d:	jo     0x4026e4
  40275f:	imul   esp,DWORD PTR [eiz*1+0xf3766b7],0x7116246a
  40276a:	pop    ss
  40276b:	in     al,dx
  40276c:	jne    0x40277b
  40276e:	sbb    al,0x89
  402770:	out    dx,al
  402771:	popf   
  402772:	imul   edx,DWORD PTR [edx],0xffffffa0
  402775:	cld    
  402776:	pusha  
  402777:	les    edx,FWORD PTR [ebx]
  402779:	icebp  
  40277a:	in     eax,0xa6
  40277c:	mov    al,ds:0x810b37ac
  402781:	jmp    0x2e86:0x65ed05b5
  402788:	inc    esi
  402789:	inc    ebx
  40278a:	or     BYTE PTR [edi+ebp*1+0x17803fd1],cl
  402791:	jbe    0x402723
  402793:	iret   
  402794:	mov    cl,BYTE PTR [edi+eax*1]
  402797:	ins    DWORD PTR es:[edi],dx
  402798:	int3   
  402799:	xor    al,0xb5
  40279b:	jb     0x40272e
  40279d:	icebp  
  40279e:	jmp    0xd69ad649
  4027a3:	cdq    
  4027a4:	int    0x5a
  4027a6:	jbe    0x402752
  4027a8:	shl    BYTE PTR [ecx],cl
  4027aa:	xor    eax,0x67813b1f
  4027af:	add    ebx,DWORD PTR [ebp-0x19]
  4027b2:	jnp    0x402802
  4027b4:	sub    esi,ecx
  4027b6:	or     ecx,DWORD PTR ds:0x49a2bc0a
  4027bc:	xor    DWORD PTR [ebx],edi
  4027be:	push   0x89450fc6
  4027c3:	add    BYTE PTR [ebx-0x73de9df6],dh
  4027c9:	shl    BYTE PTR [eax-0x1a],cl
  4027cc:	shr    DWORD PTR ds:0xbfc6f936,cl
  4027d2:	or     BYTE PTR [eax],dh
  4027d4:	fdiv   QWORD PTR [edi]
  4027d6:	ins    BYTE PTR es:[edi],dx
  4027d7:	data16 shl BYTE PTR [eax],1
  4027da:	loope  0x402854
  4027dc:	push   ds
  4027dd:	push   edx
  4027de:	out    0x7e,eax
  4027e0:	push   ds
  4027e1:	mov    cl,0x13
  4027e3:	(bad)  [ebp-0x449511b4]
  4027e9:	and    DWORD PTR [ebx+0x6010b248],esp
  4027ef:	inc    esp
  4027f0:	adc    eax,0xe2a5a801
  4027f5:	in     eax,0x57
  4027f7:	and    ebp,DWORD PTR [edi+0x56]
  4027fa:	jmp    0xfadd:0x81643931
  402801:	fwait
  402802:	dec    ebx
  402803:	and    BYTE PTR [ebp-0x1eea2844],dh
  402809:	mov    bh,0xeb
  40280b:	outs   dx,DWORD PTR ds:[esi]
  40280c:	dec    esi
  40280d:	jo     0x4027ef
  40280f:	sub    al,0x6
  402811:	cli    
  402812:	inc    ecx
  402813:	add    eax,0x5721fd7e
  402818:	xor    ebp,edi
  40281a:	sub    eax,0xd6f7da41
  40281f:	arpl   WORD PTR [ebp+0x6d],ax
  402822:	inc    esp
  402823:	test   eax,0x7479b239
  402828:	call   0xfc0b6bea
  40282d:	inc    eax
  40282e:	cli    
  40282f:	sub    BYTE PTR [ebp-0x50],ah
  402832:	es test al,0xd1
  402835:	or     DWORD PTR [edx+edx*4+0x4e4fe1bb],0xbb885935
  402840:	mov    al,0x16
  402842:	push   ds
  402843:	mov    dh,0xf8
  402845:	xor    BYTE PTR [edx-0x14],al
  402848:	push   ds
  402849:	jmp    0x4028b9
  40284b:	aad    0x85
  40284d:	rcl    DWORD PTR [eax-0x5d63da16],cl
  402853:	lahf   
  402854:	call   0xfc9e22c8
  402859:	xchg   BYTE PTR [ecx+ecx*4],ah
  40285c:	jo     0x402820
  40285e:	sbb    al,0x65
  402860:	lahf   
  402861:	outs   dx,DWORD PTR ds:[esi]
  402862:	cdq    
  402863:	or     eax,0xeab07a1e
  402868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402869:	mov    DWORD PTR [edx],0x794938cc
  40286f:	call   0x9b77:0x3346fa95
  402876:	cwde   
  402877:	sbb    al,0x34
  402879:	mov    dh,0x70
  40287b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287c:	ins    DWORD PTR es:[edi],dx
  40287d:	test   BYTE PTR [edi],cl
  40287f:	jecxz  0x402857
  402881:	add    al,0x1e
  402883:	pushf  
  402884:	cld    
  402885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402886:	(bad)  
  402887:	mov    ebx,0x896fc02f
  40288c:	add    ecx,ebp
  40288e:	and    al,0x0
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax-0x2121fbaf]
  4028ec:	ffree  st(6)
  4028ee:	xor    eax,0x7e7e0853
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x4028c0
  4028f8:	push   eax
  4028f9:	or     eax,0xd46b9e80
  4028fe:	pop    esi
  4028ff:	sub    DWORD PTR [edx],edi
  402901:	push   ecx
  402902:	(bad)  
  402904:	jl     0x402908
  402906:	pusha  
  402907:	sbb    edx,esi
  402909:	nop
  40290a:	ret    0x6849
  40290d:	adc    esi,DWORD PTR [ebp+eax*4+0x16fb369e]
  402914:	and    ch,ah
  402916:	rcr    esi,1
  402918:	dec    esi
  402919:	sub    BYTE PTR [edx-0x7d],0x11
  40291d:	(bad)  
  40291e:	push   DWORD PTR [ebx]
  402920:	(bad)  
  402921:	pop    eax
  402922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402923:	push   ds
  402924:	dec    eax
  402925:	ficom  WORD PTR [ecx-0x4183f64b]
  40292b:	push   ebp
  40292c:	inc    esp
  40292d:	push   ebx
  40292e:	and    BYTE PTR [esi+0x145afeee],dh
  402934:	mov    edx,0xfe979e40
  402939:	retf   0x2eb6
  40293c:	hlt    
  40293d:	xor    BYTE PTR [eax],dh
  40293f:	cli    
  402940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402941:	xchg   esi,eax
  402942:	daa    
  402943:	and    eax,0x14537e10
  402948:	cmp    DWORD PTR [edi-0x2a],eax
  40294b:	lods   eax,DWORD PTR ds:[esi]
  40294c:	pushf  
  40294d:	inc    eax
  40294e:	mov    bh,0x6e
  402950:	mov    ds:0x4023b67f,al
  402955:	dec    esi
  402956:	ins    BYTE PTR es:[edi],dx
  402957:	jnp    0x40291f
  402959:	and    eax,0xe0724157
  40295e:	cmp    edx,edi
  402960:	aam    0xa6
  402962:	xor    DWORD PTR [ebp*8+0x57b4416f],edi
  402969:	ins    BYTE PTR es:[edi],dx
  40296a:	call   0x68046f4
  40296f:	loopne 0x402919
  402971:	test   BYTE PTR [esi],al
  402973:	xchg   ecx,eax
  402974:	cli    
  402975:	sbb    DWORD PTR [ebp+ebp*2-0x751eb00a],0xffffff96
  40297d:	adc    al,0xb6
  40297f:	sub    eax,0x837a94ef
  402984:	cmp    eax,0x4950adcd
  402989:	add    ebx,DWORD PTR [eax-0x32]
  40298c:	mov    ch,0x65
  40298e:	dec    edx
  40298f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402990:	mov    edi,0x1eaca02c
  402995:	in     al,0xbd
  402997:	push   ebx
  402998:	mov    ebx,cs
  40299a:	pop    eax
  40299b:	mov    edx,0xb988563e
  4029a0:	es pop eax
  4029a2:	into   
  4029a3:	sar    DWORD PTR ds:0xea289454,0xfa
  4029aa:	popa   
  4029ab:	pop    ds
  4029ac:	daa    
  4029ad:	jbe    0x40296f
  4029af:	aad    0xf
  4029b1:	sbb    BYTE PTR [edi+0x22820e49],ch
  4029b7:	jecxz  0x4029e2
  4029b9:	loop   0x402986
  4029bb:	popf   
  4029bc:	and    esi,DWORD PTR [ecx-0x646dfc34]
  4029c2:	ret    0xed6b
  4029c5:	pusha  
  4029c6:	xor    DWORD PTR [edi-0x2f4f714a],ebx
  4029cc:	cld    
  4029cd:	mov    ebp,0xb38bed4e
  4029d2:	mov    dl,0xee
  4029d4:	inc    eax
  4029d5:	dec    ebp
  4029d6:	push   edi
  4029d7:	(bad)  
  4029d8:	nop
  4029d9:	adc    DWORD PTR [esp-0xbf75e85],0x61
  4029e1:	popa   
  4029e2:	jg     0x402999
  4029e4:	or     al,0x5f
  4029e6:	sbb    al,0x84
  4029e8:	and    eax,0xb0adfdf
  4029ed:	stos   BYTE PTR es:[edi],al
  4029ee:	xchg   ebp,eax
  4029ef:	push   esi
  4029f0:	mov    eax,ds:0x390092a0
  4029f5:	mov    cl,0x4e
  4029f7:	add    al,0xad
  4029f9:	xchg   ecx,eax
  4029fa:	je     0x402997
  4029fc:	add    esp,DWORD PTR [eax+0xf8ca023]
  402a02:	leave  
  402a03:	xchg   BYTE PTR [edx+0x32],cl
  402a06:	mov    ecx,0x4013a94d
  402a0b:	enter  0x99c0,0xcc
  402a0f:	pop    ebx
  402a10:	and    DWORD PTR [eax],ebx
  402a12:	int3   
  402a13:	fs push cs
  402a15:	dec    ecx
  402a16:	adc    edx,DWORD PTR [ecx-0x7f]
  402a19:	and    eax,0x434687
  402a1e:	add    BYTE PTR [eax],al
  402a20:	add    BYTE PTR [eax],al
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434687
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434687,edx
  402a34:	cmp    DWORD PTR ds:0x434687,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434687,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4345e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434687,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434687
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434687,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4345ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43463b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434677,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434677
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434677,ecx
  402aac:	cmp    DWORD PTR ds:0x434677,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434677,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43470f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4346fb
  402ae8:	or     DWORD PTR ds:0x4346c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4346b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4346c3,0x434603
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	dec    eax
  402b21:	call   0x7e499ea9
  402b26:	jle    0x402b46
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402ab8
  402b2c:	test   al,0xf4
  402b2e:	call   0xe653:0xfe3560a7
  402b35:	jae    0x402b47
  402b37:	ja     0x402b8c
  402b39:	js     0x402b7f
  402b3b:	not    DWORD PTR [ebp+eiz*4-0x43]
  402b3f:	jle    0x402b2f
  402b41:	scas   eax,DWORD PTR es:[edi]
  402b42:	aaa    
  402b43:	cmp    edi,DWORD PTR ds:0x86a16a9a
  402b49:	js     0x402afc
  402b4b:	xchg   esi,edi
  402b4d:	adc    edx,ecx
  402b4f:	xchg   DWORD PTR [esi-0x78],edx
  402b52:	retf   0xffb2
  402b55:	mov    ah,0x83
  402b57:	mov    ebx,DWORD PTR [esi-0x23e3dacf]
  402b5d:	mov    eax,ds:0x492e1f4
  402b62:	or     BYTE PTR [ebp-0xeb6edbd],ch
  402b68:	xor    esi,ecx
  402b6a:	push   edi
  402b6b:	cmp    al,BYTE PTR [ebx+0x69]
  402b6e:	leave  
  402b6f:	clc    
  402b70:	jg     0x402b5a
  402b72:	fist   DWORD PTR [ebx+0x44]
  402b75:	jae    0x402b33
  402b77:	sbb    esp,0x47fa98e
  402b7d:	xchg   ebp,eax
  402b7e:	jbe    0x402b60
  402b80:	fdivr  DWORD PTR [edi]
  402b82:	cli    
  402b83:	lock jl 0x402bbb
  402b86:	dec    ebx
  402b87:	xchg   ebx,eax
  402b88:	xor    DWORD PTR [edi-0x72],0x72566169
  402b8f:	adc    ecx,esp
  402b91:	out    0x31,eax
  402b93:	fiadd  WORD PTR [esp+eiz*8+0x7214fcd]
  402b9a:	mov    al,0xfc
  402b9c:	inc    eax
  402b9d:	shr    BYTE PTR [esi-0x5b],cl
  402ba0:	inc    edi
  402ba1:	jl     0x402bc4
  402ba3:	(bad)  
  402ba4:	cmovbe esi,DWORD PTR [eax-0x30]
  402ba8:	dec    esp
  402ba9:	xor    DWORD PTR [ebx],ebp
  402bab:	popa   
  402bac:	mov    cl,0x6a
  402bae:	int3   
  402baf:	and    al,0x10
  402bb1:	arpl   WORD PTR [edi+eiz*1],bp
  402bb4:	mov    al,ds:0x13d7b5d7
  402bb9:	fisttp WORD PTR [ecx+0x3b7e0869]
  402bbf:	sub    ch,BYTE PTR [ebx-0x16]
  402bc2:	xor    ebp,DWORD PTR [esi]
  402bc4:	das    
  402bc5:	mov    es,WORD PTR [edi+0x69604179]
  402bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bcc:	cmp    eax,0x77f6e559
  402bd1:	mov    al,0x6d
  402bd3:	clc    
  402bd4:	std    
  402bd5:	sti    
  402bd6:	mov    bl,0xa0
  402bd8:	jnp    0x402c40
  402bda:	dec    edx
  402bdb:	cwde   
  402bdc:	or     ecx,ebx
  402bde:	fisttp DWORD PTR [edi+0x7d9b9194]
  402be4:	lds    esp,FWORD PTR [eax+0x79]
  402be7:	jbe    0x402ba5
  402be9:	inc    edi
  402bea:	or     edi,0x6a
  402bed:	jb     0x402c43
  402bef:	jno    0x402ba8
  402bf1:	iret   
  402bf2:	cs or  eax,0x5698183c
  402bf8:	and    ebx,DWORD PTR [ecx]
  402bfa:	imul   ebp,DWORD PTR [ebx+0x4c],0x8431d48e
  402c01:	outs   dx,DWORD PTR ds:[esi]
  402c02:	into   
  402c03:	lds    ebx,FWORD PTR ds:0x112934db
  402c09:	cmp    al,0x4a
  402c0b:	imul   DWORD PTR [edx+0x73]
  402c0e:	adc    eax,0xcea92161
  402c13:	scas   al,BYTE PTR es:[edi]
  402c14:	jae    0x402bb4
  402c16:	ret    0xeb00
  402c19:	mov    dl,0x9b
  402c1b:	in     eax,dx
  402c1c:	mov    BYTE PTR [ebp-0x1c],cl
  402c1f:	add    ch,bh
  402c21:	push   esi
  402c22:	jmp    0x5d43:0x79e3b439
  402c29:	push   edx
  402c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c2b:	and    al,0xa1
  402c2d:	xor    BYTE PTR [edi+eax*4-0x7159632a],0xc2
  402c35:	push   ss
  402c36:	jo     0x402c74
  402c38:	test   eax,0x879f77a
  402c3d:	out    dx,al
  402c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c3f:	(bad)  
  402c40:	and    dl,bh
  402c42:	push   ecx
  402c43:	ins    BYTE PTR es:[edi],dx
  402c44:	xor    DWORD PTR [eax+ebx*4],esp
  402c47:	sbb    DWORD PTR [edx-0x5b],edi
  402c4a:	mov    eax,0xfa3bd603
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434607,0x0
  402c5f:	mov    eax,ds:0x434607
  402c64:	inc    eax
  402c65:	mov    ds:0x434607,eax
  402c6a:	cmp    DWORD PTR ds:0x434607,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434607,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4345e7,0x434713
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	stos   BYTE PTR es:[edi],al
  402ce7:	mov    fs:0x7e0b1312,al
  402ced:	jle    0x402d0d
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402d06
  402cf3:	and    ch,BYTE PTR [eax+ebp*8+0x38]
  402cf7:	stos   BYTE PTR es:[edi],al
  402cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf9:	pop    ecx
  402cfa:	adc    DWORD PTR [ebp-0x4b313d26],0x493f0f2b
  402d04:	les    edi,FWORD PTR ss:[ecx]
  402d07:	sub    DWORD PTR [ecx],edi
  402d09:	pop    edx
  402d0a:	and    ch,0xa4
  402d0d:	pop    esi
  402d0e:	cmp    eax,0xfde82fb5
  402d13:	dec    eax
  402d14:	mov    DWORD PTR [eax],ebp
  402d16:	cmp    ah,0x10
  402d19:	or     DWORD PTR [esi-0x6bdaf975],ebp
  402d1f:	sar    edx,1
  402d21:	lea    esi,[edx]
  402d23:	sbb    al,BYTE PTR [edi+0x5c]
  402d26:	mov    al,0x42
  402d28:	sbb    BYTE PTR [eax-0x74],dl
  402d2b:	(bad)  
  402d2c:	repnz bound esp,QWORD PTR [ebx-0x37]
  402d30:	sar    BYTE PTR [ebx],1
  402d32:	pop    ds
  402d33:	jge    0x402dac
  402d35:	dec    ebx
  402d36:	pop    ecx
  402d37:	or     ch,BYTE PTR [ebp-0x4fa8d093]
  402d3d:	sub    bl,dl
  402d3f:	push   esi
  402d40:	aam    0xe6
  402d42:	sbb    dl,ah
  402d44:	lea    edx,[eax+ebx*2+0x6c]
  402d48:	jg     0x402d1e
  402d4a:	jno    0x402d34
  402d4c:	sub    eax,0xd5da4dcf
  402d51:	adc    eax,0x589b123a
  402d56:	mov    ?,WORD PTR [ebp+0x2c8c1d19]
  402d5c:	fild   WORD PTR [esi]
  402d5e:	mov    dl,0xa1
  402d60:	lods   al,BYTE PTR ds:[esi]
  402d61:	mov    cl,0x17
  402d63:	mov    esp,DWORD PTR ss:[edi-0x26]
  402d67:	dec    ebx
  402d68:	bound  eax,QWORD PTR [eax+0x3]
  402d6b:	neg    esi
  402d6d:	lahf   
  402d6e:	push   0xe
  402d70:	push   esi
  402d71:	test   al,0x9c
  402d73:	cmp    DWORD PTR ds:0xa2e730ec,ebx
  402d79:	jo     0x402daf
  402d7b:	sbb    ebp,DWORD PTR [ecx+0x4e]
  402d7e:	and    al,0x2a
  402d80:	and    DWORD PTR [ebp+0x46],0xffffffb1
  402d84:	cwde   
  402d85:	fdiv   st,st(4)
  402d87:	mov    dl,cl
  402d89:	leave  
  402d8a:	mov    esp,0xe80c6369
  402d8f:	pop    ebx
  402d90:	sbb    ah,BYTE PTR ds:0x9d60f27f
  402d96:	popa   
  402d97:	xchg   esi,eax
  402d98:	(bad)  
  402d99:	mov    ah,0x36
  402d9b:	jle    0x402d2c
  402d9d:	add    al,0x87
  402d9f:	inc    edx
  402da0:	sub    eax,0x6bdc512e
  402da5:	jnp    0x402d46
  402da7:	data16 mov ds:0xd181d953,al
  402dad:	mov    ebx,0x9eef6063
  402db2:	xchg   DWORD PTR ds:0x8995a499,ebp
  402db8:	sbb    edi,DWORD PTR [esi+0x3c423014]
  402dbe:	cs mov dl,0xf7
  402dc1:	ficom  DWORD PTR [edi+0x5d]
  402dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc5:	mov    dl,0xdb
  402dc7:	dec    ecx
  402dc8:	xchg   esp,eax
  402dc9:	lds    edx,FWORD PTR [eax-0x69]
  402dcc:	push   0xd02c96a8
  402dd1:	div    DWORD PTR [ebx+0x2f]
  402dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd5:	fcomp  QWORD PTR [edx]
  402dd7:	jp     0x402d76
  402dd9:	pop    ebx
  402dda:	ins    DWORD PTR es:[edi],dx
  402ddb:	xchg   edi,eax
  402ddc:	ins    DWORD PTR es:[edi],dx
  402ddd:	jecxz  0x402dd9
  402ddf:	cli    
  402de0:	js     0x402e0a
  402de2:	ret    
  402de3:	mov    al,ds:0x51269122
  402de8:	bound  eax,QWORD PTR [ebx+0x44]
  402deb:	push   esp
  402dec:	and    BYTE PTR [ebx-0x34],ch
  402def:	pop    edx
  402df0:	push   edx
  402df1:	mov    dh,0x77
  402df3:	sbb    al,0x84
  402df5:	mov    ebx,0xefe981aa
  402dfa:	(bad)  
  402dfb:	in     al,dx
  402dfc:	aas    
  402dfd:	adc    eax,0x95e4bab2
  402e02:	add    bh,BYTE PTR [eax-0x3f]
  402e05:	psubb  mm2,QWORD PTR [edi]
  402e08:	lods   eax,DWORD PTR ds:[esi]
  402e09:	data16 aad 0xd9
  402e0c:	cdq    
  402e0d:	cwde   
  402e0e:	mov    ah,0xee
  402e10:	(bad)  
  402e11:	adc    ecx,DWORD PTR [ebx-0x3eccf3a3]
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434677,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    ah,BYTE PTR [eax]
  402e93:	test   eax,0x143344aa
  402e98:	jle    0x402f18
  402e9a:	push   esi
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e9d
  402e9f:	or     al,0x3d
  402ea1:	push   ecx
  402ea2:	mov    dl,0xa8
  402ea4:	xchg   edi,eax
  402ea5:	aaa    
  402ea6:	adc    ecx,DWORD PTR [ecx-0x24]
  402ea9:	call   0x9e1620d
  402eae:	jae    0x402efb
  402eb0:	fldcw  WORD PTR [ebp+0x55]
  402eb3:	mov    esp,eax
  402eb5:	inc    esp
  402eb6:	and    BYTE PTR ds:0xf96338b7,ah
  402ebc:	sbb    eax,0xd5b67193
  402ec1:	inc    ebx
  402ec2:	or     eax,0x44d54005
  402ec7:	iret   
  402ec8:	retf   
  402ec9:	repnz adc al,0x4d
  402ecc:	scas   al,BYTE PTR es:[edi]
  402ecd:	(bad)  
  402ece:	dec    edi
  402ecf:	icebp  
  402ed0:	sbb    BYTE PTR [ebx],ah
  402ed2:	ja     0x402e7f
  402ed4:	outs   dx,DWORD PTR ds:[si]
  402ed6:	adc    eax,DWORD PTR [edi]
  402ed8:	repz icebp 
  402eda:	pop    esi
  402edb:	mov    esp,0xae975441
  402ee0:	retf   
  402ee1:	inc    eax
  402ee2:	pop    ebx
  402ee3:	int3   
  402ee4:	out    0x27,eax
  402ee6:	scas   eax,DWORD PTR es:[edi]
  402ee7:	aam    0x7a
  402ee9:	mov    edi,0xfdd34a74
  402eee:	dec    edi
  402eef:	mov    dl,0x6
  402ef1:	(bad)  
  402ef2:	adc    al,0x5
  402ef4:	jne    0x402f30
  402ef6:	sub    esi,DWORD PTR [edx-0x6a]
  402ef9:	pop    esi
  402efa:	inc    ecx
  402efb:	inc    esp
  402efc:	jl     0x402eb8
  402efe:	dec    ebx
  402eff:	push   ebx
  402f00:	or     eax,DWORD PTR [ebx-0x7b6f405]
  402f06:	call   0xd5c58a7a
  402f0b:	push   ss
  402f0c:	hlt    
  402f0d:	fs jb  0x402ec7
  402f10:	gs aas 
  402f12:	ja     0x402f60
  402f14:	cld    
  402f15:	repz push cs
  402f17:	test   BYTE PTR [esi-0x7a],dl
  402f1a:	sbb    dh,0x79
  402f1d:	add    dl,BYTE PTR [ecx+0x6]
  402f20:	pop    ds
  402f21:	adc    esi,edi
  402f23:	adc    eax,0x2520c42c
  402f28:	inc    edx
  402f29:	jp     0x402f2a
  402f2b:	(bad)  
  402f2c:	cmp    edx,DWORD PTR [ebp+0x68]
  402f2f:	xchg   cx,ax
  402f31:	shr    BYTE PTR [edi],1
  402f33:	pusha  
  402f34:	jl     0x402ef3
  402f36:	cmp    al,0xb7
  402f38:	adc    BYTE PTR [ebp+edi*4-0x46ac1700],bl
  402f3f:	mov    DWORD PTR [edx],edx
  402f41:	outs   dx,BYTE PTR ds:[esi]
  402f42:	xor    BYTE PTR [edx],0xc4
  402f45:	lds    edi,FWORD PTR [ebx-0xe]
  402f48:	in     al,0x2d
  402f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4b:	jl     0x402fb7
  402f4d:	jmp    0x402f9b
  402f4f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402f51:	mov    al,ds:0x137c22b4
  402f56:	add    ah,BYTE PTR [ebx+0x607711f1]
  402f5c:	inc    DWORD PTR [edx]
  402f5e:	cwde   
  402f5f:	leave  
  402f60:	sbb    eax,DWORD PTR [edi-0x13be0c9a]
  402f66:	mov    cl,0xde
  402f68:	mov    edi,0xea0ad599
  402f6d:	int    0x9f
  402f6f:	add    DWORD PTR [esp+ebx*4-0x12],eax
  402f73:	imul   ebp,DWORD PTR [ebx-0x4],0x2a4e2beb
  402f7a:	inc    ecx
  402f7b:	xchg   esi,eax
  402f7c:	cmp    al,0xb9
  402f7e:	cwde   
  402f7f:	retf   
  402f80:	xchg   esi,eax
  402f81:	inc    ecx
  402f82:	pusha  
  402f83:	std    
  402f84:	xchg   edx,eax
  402f85:	dec    edi
  402f86:	fsubr  DWORD PTR es:[edi+0x3b4dd1ac]
  402f8d:	idiv   dh
  402f8f:	lahf   
  402f90:	or     bh,BYTE PTR [edx-0x15]
  402f93:	int    0x15
  402f95:	call   0x490304ce
  402f9a:	cmp    ebp,DWORD PTR [ebp+0x1ebc9606]
  402fa0:	pop    esi
  402fa1:	aas    
  402fa2:	push   edx
  402fa3:	mov    eax,ds:0x1a0993b2
  402fa8:	fnstenv [eax]
  402faa:	out    0xa,al
  402fac:	and    bl,BYTE PTR [esi]
  402fae:	mov    dl,0x32
  402fb0:	dec    esi
  402fb1:	(bad)  
  402fb3:	call   0x7720740a
  402fb8:	loop   0x402fc8
  402fba:	jno    0x403019
  402fbc:	(bad)  
  402fbd:	jo     0x402f86
  402fbf:	cmovp  esp,esp
  402fc2:	repz push cs
  402fc4:	pop    ebp
  402fc5:	xchg   ebp,ecx
  402fc7:	adc    dh,BYTE PTR [ecx]
  402fc9:	jne    0x402fd9
  402fcb:	jmp    0x40303e
  402fcd:	dec    eax
  402fce:	ffreep st(4)
  402fd0:	leave  
  402fd1:	test   dh,0x6e
  402fd4:	mov    bl,0x87
  402fd6:	mov    ds:0x921e7836,al
  402fdb:	or     DWORD PTR [edx],ecx
  402fdd:	sub    ah,BYTE PTR [eax-0x30]
  402fe0:	ret    0x8e01
  402fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe4:	test   al,0x17
  402fe6:	and    BYTE PTR [ebx+0x20],cl
  402fe9:	and    BYTE PTR [ebp-0x5675ddf1],dh
  402fef:	mov    edx,0x82d56f89
  402ff4:	ja     0x402f9c
  402ff6:	mov    edi,0x71167c5b
  402ffb:	into   
  402ffc:	jnp    0x402ff5
  402ffe:	adc    DWORD PTR [ebx],eax
  403000:	push   eax
  403001:	test   eax,0xbb228ec2
  403006:	das    
  403007:	cmp    ah,BYTE PTR [ecx]
  403009:	in     al,dx
  40300a:	pop    ss
  40300b:	add    cl,bl
  40300d:	adc    al,0xe4
  40300f:	and    al,0xa0
  403011:	cdq    
  403012:	dec    eax
  403013:	pop    edi
  403014:	(bad)  
  403015:	mov    ebp,0x4eb630a5
  40301a:	or     ah,BYTE PTR [eax+0x2d]
  40301d:	call   0xb68f4d64
  403022:	enter  0x5a87,0xc6
  403026:	or     ecx,DWORD PTR [edi+0x3e95221d]
  40302c:	jb     0x402fdd
  40302e:	fwait
  40302f:	mov    al,0x51
  403031:	xchg   ecx,eax
  403032:	loop   0x40304d
  403034:	das    
  403035:	and    al,0x7a
  403037:	dec    ebx
  403038:	test   al,0xa4
  40303a:	add    BYTE PTR [ebx-0x120e238e],bh
  403040:	pop    es
  403041:	pop    eax
  403042:	fld    st(5)
  403044:	sbb    cl,BYTE PTR [ecx+0x7c]
  403047:	adc    ch,BYTE PTR [edx-0x35abfeb1]
  40304d:	mov    al,ds:0x2995fa4a
  403052:	mov    dl,0xd8
  403054:	inc    ebx
  403055:	add    bl,BYTE PTR [eax]
  403057:	icebp  
  403058:	pop    es
  403059:	mov    ah,0x63
  40305b:	int    0xda
  40305d:	aas    
  40305e:	(bad)  
  40305f:	mov    ebp,0xdfeba7b3
  403064:	xchg   ebx,eax
  403065:	ds jae 0x4030a9
  403068:	inc    edi
  403069:	out    dx,eax
  40306a:	pop    ds
  40306b:	(bad)  
  40306c:	xor    WORD PTR [ecx],di
  40306f:	rcr    DWORD PTR [eax+0x72c955a8],0xe4
  403076:	(bad)  
  403077:	and    edi,ebx
  403079:	ja     0x40303b
  40307b:	sub    BYTE PTR [edx+0x7e],ah
  40307e:	enter  0x607b,0x23
  403082:	es retf 
  403084:	mov    ecx,0x8591a327
  40308a:	sub    DWORD PTR [ecx],ebp
  40308c:	popf   
  40308d:	fmul   DWORD PTR [edi-0x6b]
  403090:	bound  edi,QWORD PTR ds:[eax+eiz*8]
  403094:	inc    edi
  403095:	jae    0x4030fc
  403097:	or     al,0xfc
  403099:	or     DWORD PTR [edx+ebp*2],edx
  40309c:	xor    bl,cl
  40309e:	mov    gs,WORD PTR [edx]
  4030a0:	lea    ebp,ds:0x4d16d6ae
  4030a6:	inc    ebp
  4030a7:	nop
  4030a8:	sbb    BYTE PTR [eax-0x1eac809],dh
  4030ae:	in     al,0x60
  4030b0:	(bad)  
  4030b2:	fdivrp st(7),st
  4030b4:	sbb    eax,0x4bac56d8
  4030b9:	jbe    0x403109
  4030bb:	rcr    BYTE PTR [edx+0x39],0x96
  4030bf:	jo     0x4030de
  4030c1:	jnp    0x40313e
  4030c3:	jno    0x4030e1
  4030c5:	ins    BYTE PTR es:[edi],dx
  4030c6:	jmp    0x403110
  4030c8:	xor    BYTE PTR [ebp+0x36e9aa9b],ch
  4030ce:	mov    eax,ds:0x341f303f
  4030d3:	dec    ebx
  4030d4:	gs test al,0x64
  4030d7:	loopne 0x4030ce
  4030d9:	cmc    
  4030da:	lods   eax,DWORD PTR ds:[esi]
  4030db:	mov    al,BYTE PTR [eax]
  4030dd:	xchg   esi,eax
  4030de:	xchg   BYTE PTR [ebp+0xc],ah
  4030e1:	inc    edi
  4030e2:	xchg   DWORD PTR [eax-0x2ee98874],ebx
  4030e8:	data16 xor al,0xc7
  4030eb:	lds    edi,FWORD PTR [edx-0x5032490d]
  4030f1:	sahf   
  4030f2:	bswap  eax
  4030f4:	loop   0x403085
  4030f6:	data16 mov BYTE PTR [ecx],ah
  4030f9:	or     eax,0xc6e694bd
  4030fe:	bound  ecx,QWORD PTR [ebp+0x79]
  403101:	hlt    
  403102:	sbb    DWORD PTR [edx],ebx
  403104:	or     al,BYTE PTR [ebp+0x78207780]
  40310a:	stos   DWORD PTR es:[edi],eax
  40310b:	into   
  40310c:	jns    0x403186
  40310e:	jbe    0x40317c
  403110:	jge    0x40317c
  403112:	gs retf 0xef51
  403116:	xor    eax,0x923fd04d
  40311b:	or     ebx,DWORD PTR [esi]
  40311d:	cmp    DWORD PTR [eax-0x2f],0x5a1c698d
  403124:	cwde   
  403125:	cli    
  403126:	imul   ebp,DWORD PTR [edi+0x2b],0xffffffb2
  40312a:	in     al,0xce
  40312c:	fs lock mov ch,0x43
  403130:	dec    ecx
  403131:	and    bl,ah
  403133:	mov    ds:0xb4d49a2d,al
  403138:	inc    edi
  403139:	lock xchg ebp,eax
  40313b:	fmul   st,st(1)
  40313d:	jnp    0x40313d
  40313f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403140:	and    DWORD PTR [esi],esi
  403142:	mov    esp,0x1e22cc4b
  403147:	push   edx
  403148:	sbb    esp,DWORD PTR [ebp-0x4e2c113c]
  40314e:	mov    esp,0xd8749d97
  403153:	in     al,0x1b
  403155:	and    al,0x8b
  403157:	push   eax
  403158:	or     BYTE PTR [esi+0x4ee790a0],bl
  40315e:	lea    esi,[esi-0x41]
  403161:	in     al,dx
  403162:	lahf   
  403163:	sub    al,0x33
  403165:	mov    ?,edx
  403167:	ins    BYTE PTR es:[edi],dx
  403168:	push   ebp
  403169:	pop    ds
  40316a:	and    cl,cl
  40316c:	test   ebx,ebx
  40316e:	test   BYTE PTR [esi],ch
  403170:	add    DWORD PTR [edi-0x7d],0x798c05cd
  403177:	ss out dx,eax
  403179:	fild   WORD PTR [eax+0x16]
  40317c:	sub    dl,BYTE PTR [eax-0x75]
  40317f:	imul   edx,ecx,0x5ebcda54
  403185:	data16 xor BYTE PTR [ebp-0x22b5c15d],dl
  40318c:	add    BYTE PTR [ecx-0x3816305b],dl
  403192:	pop    es
  403193:	xor    BYTE PTR [edx],0x3b
  403196:	ja     0x403144
  403198:	fbld   TBYTE PTR [edx+edi*8]
  40319b:	hlt    
  40319c:	jg     0x4031c0
  40319e:	mov    esi,0xbe82b185
  4031a3:	inc    ecx
  4031a4:	or     ch,BYTE PTR [ebx+0x5436bf1]
  4031aa:	fmul   st(4),st
  4031ac:	ss adc al,0x40
  4031af:	sbb    al,0xf4
  4031b1:	sub    bl,BYTE PTR [edi]
  4031b3:	add    DWORD PTR [edi-0x63],0x3b
  4031b7:	ja     0x4031ca
  4031b9:	ret    0x2531
  4031bc:	or     al,0x40
  4031be:	xchg   ebp,eax
  4031bf:	xchg   edi,eax
  4031c0:	cmp    DWORD PTR [ecx+0x30],ecx
  4031c3:	rcr    BYTE PTR [eax+0x39],cl
  4031c6:	jnp    0x40314f
  4031c8:	shl    BYTE PTR [eax-0x712aa3c8],cl
  4031ce:	mov    bh,0x24
  4031d0:	loopne 0x403234
  4031d2:	inc    bp
  4031d4:	lods   al,BYTE PTR ds:[esi]
  4031d5:	jae    0x40315a
  4031d7:	adc    DWORD PTR [ebx-0x6986e3d0],esp
  4031dd:	daa    
  4031de:	mov    bh,0x1f
  4031e0:	push   ebp
  4031e1:	cmp    bl,dl
  4031e3:	inc    esi
  4031e4:	dec    edx
  4031e5:	(bad)  
  4031e6:	pop    ss
  4031e7:	mov    ah,BYTE PTR [ebx+ecx*1-0x23]
  4031eb:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4031ed:	cs pop eax
  4031ef:	sbb    edi,DWORD PTR [esi]
  4031f1:	out    0x65,eax
  4031f3:	cmp    bl,BYTE PTR [eax-0x50dc150e]
  4031f9:	push   es
  4031fa:	add    ebp,DWORD PTR [ecx+0x74]
  4031fd:	mov    DWORD PTR [esi],ebp
  4031ff:	cmp    edx,ebp
  403201:	daa    
  403202:	ins    DWORD PTR es:[edi],dx
  403203:	mov    cs,ebp
  403205:	cwde   
  403206:	ret    
  403207:	jns    0x4031ff
  403209:	dec    edi
  40320a:	mov    cl,0xd1
  40320c:	ins    DWORD PTR es:[edi],dx
  40320d:	dec    ecx
  40320e:	loope  0x4031cc
  403210:	jo     0x403218
  403212:	inc    eax
  403213:	pop    ds
  403214:	xlat   BYTE PTR ds:[ebx]
  403215:	pop    es
  403216:	jnp    0x403213
  403218:	cmp    bl,BYTE PTR [edx+0x466eea34]
  40321e:	push   ebp
  40321f:	mov    ds:0xd7c36621,eax
  403224:	inc    esi
  403225:	jp     0x403268
  403227:	data16 (bad) 
  403229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322a:	lods   eax,DWORD PTR ds:[esi]
  40322b:	sub    DWORD PTR [ecx+0x19f96ca9],eax
  403231:	push   esp
  403232:	inc    ebp
  403233:	out    0x9e,al
  403235:	sub    esp,DWORD PTR [ecx]
  403237:	jge    0x4031fc
  403239:	lds    eax,FWORD PTR [esi+ebx*2+0x54]
  40323d:	sub    cl,BYTE PTR [ecx-0x65]
  403240:	inc    esp
  403241:	dec    esp
  403242:	mov    eax,0xa9f3385a
  403247:	mov    dh,0xba
  403249:	gs (bad) 
  40324c:	add    DWORD PTR [ebp-0x73],edi
  40324f:	pusha  
  403250:	mov    dl,bl
  403252:	and    eax,0xfaae4d96
  403257:	push   ss
  403258:	imul   ecx,DWORD PTR [edx-0x2d3205b6],0x32f2cfaa
  403262:	xchg   esp,eax
  403263:	cwde   
  403264:	nop
  403265:	xor    eax,0xbc93db60
  40326a:	cwde   
  40326b:	push   ebx
  40326c:	mov    al,0x83
  40326e:	addr16 sub eax,0x174fea36
  403274:	outs   dx,DWORD PTR ds:[esi]
  403275:	sar    DWORD PTR [eax+0x8a38],0x66
  40327c:	xor    eax,DWORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x43467b,0x434643
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43468f
  403297:	xor    ecx,DWORD PTR ds:0x4345eb
  40329d:	mov    DWORD PTR ds:0x43468f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43467f
  4032ac:	xor    DWORD PTR ds:0x434603,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43468f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4346bf
  4032c1:	mov    DWORD PTR ds:0x43468f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43468f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43470b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     dh,BYTE PTR [ecx-0x4]
  4032f4:	pop    ds
  4032f5:	and    DWORD PTR [ebx],ecx
  4032f7:	adc    BYTE PTR [esi+0x7e],bh
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x40330c
  4032ff:	inc    edx
  403300:	paddusw mm6,QWORD PTR [ebx-0x232b25a9]
  403307:	jle    0x40333f
  403309:	fidivr WORD PTR [ecx]
  40330b:	rol    DWORD PTR [edx],0x88
  40330e:	or     DWORD PTR [ebx-0x1daf2d2c],esi
  403314:	push   ebp
  403315:	out    dx,eax
  403316:	enter  0x79d0,0xee
  40331a:	sub    BYTE PTR [edx],cl
  40331c:	call   0x8986ef42
  403321:	sub    ah,ah
  403323:	in     eax,0x7b
  403325:	inc    eax
  403326:	xor    al,dh
  403328:	mov    dl,0x51
  40332a:	dec    ebp
  40332b:	jp     0x403353
  40332d:	lock jae 0x40338c
  403330:	jne    0x4032e6
  403332:	mov    bh,BYTE PTR [esi+0x10]
  403335:	cmp    DWORD PTR [edi],ebp
  403337:	jo     0x40338e
  403339:	arpl   WORD PTR [ebx],bp
  40333b:	push   edx
  40333c:	call   0x7e39:0x7c3c0453
  403343:	jbe    0x403351
  403345:	xlat   BYTE PTR ds:[ebx]
  403346:	mov    ch,0x85
  403348:	cli    
  403349:	scas   eax,DWORD PTR es:[edi]
  40334a:	or     DWORD PTR [ebp+0x4bf2270],ebp
  403350:	arpl   WORD PTR [eax],bp
  403352:	test   BYTE PTR [edi+0x4fe078d0],cl
  403358:	cmp    eax,0x66324448
  40335d:	into   
  40335e:	(bad)  
  40335f:	dec    esi
  403360:	daa    
  403361:	bound  edx,QWORD PTR [edi+0x5ecc8224]
  403367:	pop    es
  403368:	das    
  403369:	leave  
  40336a:	sbb    DWORD PTR [esi+esi*8],ecx
  40336d:	(bad)  
  40336e:	in     eax,dx
  40336f:	push   ss
  403370:	jmp    0x7f17:0x892e093a
  403377:	mov    BYTE PTR ds:0x58786093,ch
  40337d:	nop
  40337e:	inc    esp
  40337f:	pop    ecx
  403380:	and    BYTE PTR [ecx-0x75],al
  403383:	aad    0x63
  403385:	int    0xd
  403387:	test   eax,esp
  403389:	fmul   DWORD PTR [ebp-0x45]
  40338c:	and    edx,DWORD PTR [ecx+eiz*2+0x6c]
  403390:	mov    al,ds:0x6d897e92
  403395:	mov    ah,0x98
  403397:	imul   ebx,ebx,0x2e
  40339a:	bound  ecx,QWORD PTR ds:0x196ac2e3
  4033a0:	mov    edx,0xbe2b3a96
  4033a5:	out    dx,eax
  4033a6:	rcl    DWORD PTR [eax+edi*8-0x71b12ddc],0x99
  4033ae:	pop    esi
  4033af:	jge    0x4033e3
  4033b1:	cmp    DWORD PTR [edx+0x24],ecx
  4033b4:	mov    edi,0x314c6811
  4033b9:	xchg   edx,eax
  4033ba:	mov    ch,0x33
  4033bc:	mov    ch,0xf
  4033be:	out    dx,al
  4033bf:	outs   dx,DWORD PTR ds:[esi]
  4033c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c1:	xchg   dl,dh
  4033c3:	loope  0x403345
  4033c5:	mov    ecx,0xcfbecf90
  4033ca:	jecxz  0x40334f
  4033cc:	pop    ds
  4033cd:	retf   0xd16b
  4033d0:	sbb    BYTE PTR [ebx],0xc6
  4033d3:	cmp    bl,bl
  4033d5:	sbb    DWORD PTR [ecx+0x67],ebp
  4033d8:	adc    ebx,DWORD PTR [ebp+0x559f5005]
  4033de:	pop    edi
  4033df:	inc    ecx
  4033e0:	sbb    BYTE PTR [ecx+0x8],0x49
  4033e4:	or     dl,BYTE PTR [eax-0x3e10dd00]
  4033ea:	add    eax,0x48790d27
  4033ef:	(bad)  
  4033f0:	or     eax,ebp
  4033f2:	icebp  
  4033f3:	or     DWORD PTR [edx],eax
  4033f5:	in     eax,dx
  4033f6:	mov    dl,0x6
  4033f8:	pusha  
  4033f9:	and    DWORD PTR [esi],ebx
  4033fb:	push   es
  4033fc:	xchg   dl,ch
  4033fe:	inc    edi
  4033ff:	xor    DWORD PTR [esi-0x36],eax
  403402:	mov    ecx,0x632f657c
  403407:	and    al,0x3a
  403409:	test   DWORD PTR [ebp-0x7f1b6d83],0xc48ddc61
  403413:	dec    esi
  403414:	sub    BYTE PTR [esi+0x3fbfdc55],bh
  40341a:	pop    esp
  40341b:	repz mov ch,0xa3
  40341e:	out    0xd8,eax
  403420:	ss xchg ecx,eax
  403422:	icebp  
  403423:	push   eax
  403424:	add    al,0xc5
  403426:	in     al,dx
  403427:	adc    BYTE PTR [esi+0x32e0df79],ah
  40342d:	rol    DWORD PTR [ebx+0x2ce0bce],cl
  403433:	add    DWORD PTR ds:0x376a941d,edi
  403439:	jns    0x403444
  40343b:	aad    0xdc
  40343d:	mov    ds:0x5fd0489a,al
  403442:	(bad)  
  403443:	shl    BYTE PTR [edx],1
  403445:	cmp    ebp,DWORD PTR [eax+0x3671b4c2]
  40344b:	nop
  40344c:	js     0x403444
  40344e:	imul   esp,DWORD PTR [ebp-0x5b3e4691],0xffffffb2
  403455:	fsubp  st(1),st
  403457:	mov    cl,0xb9
  403459:	push   es
  40345a:	iret   
  40345b:	pop    esi
  40345c:	mov    esp,DWORD PTR [esi]
  40345e:	ret    0x20c4
  403461:	fisubr WORD PTR [eax-0x796b9889]
  403467:	test   bl,ch
  403469:	(bad)  
  40346a:	sbb    eax,0x8cee0613
  40346f:	hlt    
  403470:	int3   
  403471:	pop    ds
  403472:	xor    ch,ah
  403474:	test   DWORD PTR [eax-0xc],ecx
  403477:	dec    BYTE PTR ds:0xeb1a462a
  40347d:	clc    
  40347e:	mov    ds:0x6a0dd977,eax
  403483:	cmp    bh,dl
  403485:	jg     0x4034af
  403487:	adc    al,0x4d
  403489:	rcl    DWORD PTR [edx+ebp*2],cl
  40348c:	xchg   ebp,eax
  40348d:	inc    ecx
  40348e:	rep outs dx,DWORD PTR ds:[esi]
  403490:	push   ecx
  403491:	jnp    0x4034c3
  403493:	mov    cl,0x6d
  403495:	or     ecx,DWORD PTR [ebx]
  403497:	leave  
  403498:	sar    BYTE PTR [ebx+0x39],cl
  40349b:	inc    DWORD PTR [ebp+0x48]
  40349e:	dec    esi
  40349f:	ins    BYTE PTR es:[edi],dx
  4034a0:	pop    ss
  4034a1:	xor    eax,0xbf281906
  4034a6:	xchg   ebp,eax
  4034a7:	dec    ecx
  4034a8:	pop    ds
  4034a9:	cmp    DWORD PTR [ebp-0x2a],ebp
  4034ac:	test   DWORD PTR ds:0xa340af73,0x6b289f86
  4034b6:	inc    ebx
  4034b7:	sub    DWORD PTR [edi-0x7d146f83],0xffffff8e
  4034be:	sbb    BYTE PTR [ecx],ah
  4034c0:	cmp    BYTE PTR [esi-0x2a2cd92c],cl
  4034c6:	test   eax,0x11e1769
  4034cb:	or     al,0x44
  4034cd:	ja     0x4034de
  4034cf:	imul   BYTE PTR [esp+edx*2]
  4034d2:	popf   
  4034d3:	loop   0x40350f
  4034d5:	inc    ebp
  4034d6:	loop   0x4034f5
  4034d8:	(bad)  [eax-0x2550aa99]
  4034de:	sbb    esi,DWORD PTR [ebp-0x2dc5977c]
  4034e4:	test   DWORD PTR [ecx],esp
  4034e6:	xor    edi,ebx
  4034e8:	xor    BYTE PTR [eax+ebx*1-0x1a],cl
  4034ec:	jge    0x403542
  4034ee:	cmp    bh,bh
  4034f0:	jmp    0x403531
  4034f2:	rcr    BYTE PTR ds:0x5acd3b20,cl
  4034f8:	mov    cl,0x24
  4034fa:	sub    eax,0x93764b04
  4034ff:	icebp  
  403500:	adc    ah,bh
  403502:	sar    BYTE PTR [ecx+0x72dd6de1],1
  403508:	into   
  403509:	push   ebx
  40350a:	pop    ss
  40350b:	aaa    
  40350c:	xchg   edi,eax
  40350d:	neg    ch
  40350f:	pushf  
  403510:	(bad)  
  403511:	fwait
  403512:	(bad)  
  403513:	push   ecx
  403514:	push   esp
  403515:	push   0xbb562fc5
  40351a:	mov    DWORD PTR [edi+ecx*2-0x5a],esp
  40351e:	xchg   esp,eax
  40351f:	push   edi
  403520:	lods   al,BYTE PTR ds:[esi]
  403521:	int    0xb1
  403523:	aaa    
  403524:	movntq QWORD PTR ds:0x722d4c30,mm1
  40352b:	(bad)  
  40352c:	xchg   edi,eax
  40352d:	(bad)  
  40352e:	xor    edi,eax
  403530:	sub    eax,0xe972c559
  403535:	mov    dl,0xdb
  403537:	scas   al,BYTE PTR es:[edi]
  403538:	lods   al,BYTE PTR ds:[esi]
  403539:	lods   al,BYTE PTR ds:[esi]
  40353a:	cli    
  40353b:	into   
  40353c:	(bad)  
  40353d:	cmp    al,0x84
  40353f:	stos   BYTE PTR es:[edi],al
  403540:	add    ah,BYTE PTR [eax+0x25]
  403543:	(bad)  [eax]
  403545:	(bad)  
  403546:	(bad)  
  403547:	pop    es
  403548:	in     eax,0x12
  40354a:	jmp    0x403516
  40354c:	or     esp,ecx
  40354e:	cmp    al,0x80
  403550:	lods   eax,DWORD PTR fs:[esi]
  403552:	add    al,0xbe
  403554:	mov    eax,esp
  403556:	retf   
  403557:	push   cs
  403558:	std    
  403559:	add    dh,0xf5
  40355c:	out    0x48,eax
  40355e:	push   ss
  40355f:	(bad)  
  403560:	pusha  
  403561:	retf   0xcf4
  403564:	mov    ecx,0xe61e6ed8
  403569:	jp     0x403585
  40356b:	dec    edi
  40356c:	rcl    BYTE PTR [edx+0x268fad1f],cl
  403572:	ds inc esp
  403574:	xor    ah,BYTE PTR [edi-0x2b]
  403577:	not    BYTE PTR [eax+0xfe8079c]
  40357d:	scas   al,BYTE PTR es:[edi]
  40357e:	jno    0x403504
  403580:	mov    ch,0x11
  403582:	out    dx,eax
  403583:	gs in  eax,0xee
  403586:	mov    eax,ds:0x11b60142
  40358b:	sbb    BYTE PTR ds:0xf884588,dl
  403591:	dec    ebx
  403592:	jbe    0x403588
  403594:	push   eax
  403595:	ss mov ch,0x44
  403598:	out    0x21,eax
  40359a:	and    eax,0xcd03fe2d
  40359f:	push   ebx
  4035a0:	std    
  4035a1:	mov    ecx,0xaf3ce2eb
  4035a6:	jns    0x403602
  4035a8:	mov    ebp,0x67bb97bc
  4035ad:	mov    edi,0x88f15885
  4035b2:	mov    ch,0xce
  4035b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b5:	mov    esp,0xb1cd840e
  4035ba:	cwde   
  4035bb:	xor    eax,ebx
  4035bd:	add    ebp,edi
  4035bf:	adc    ah,bl
  4035c1:	loopne 0x4035a5
  4035c3:	mov    cl,0xb7
  4035c5:	icebp  
  4035c6:	dec    eax
  4035c7:	inc    esi
  4035c8:	pop    esi
  4035c9:	leave  
  4035ca:	cmp    eax,0x881873b3
  4035cf:	shr    DWORD PTR [edx+0x70],1
  4035d2:	mov    bl,0x31
  4035d4:	push   ss
  4035d5:	sub    esp,ebp
  4035d7:	push   edi
  4035d8:	mov    eax,ds:0x95598236
  4035dd:	sub    dh,BYTE PTR [eax-0x219f22f3]
  4035e3:	add    dl,bl
  4035e5:	mov    ebx,0x2021b687
  4035ea:	sti    
  4035eb:	sbb    al,0x37
  4035ed:	or     BYTE PTR [edi+0x5d],dl
  4035f0:	jmp    0x403586
  4035f2:	or     al,0xab
  4035f4:	in     al,dx
  4035f5:	push   0x77
  4035f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f8:	add    BYTE PTR [eax+edx*1],bh
  4035fb:	inc    ecx
  4035fc:	cs or  al,0xc
  4035ff:	adc    edi,0x1ab86b31
  403605:	and    bh,ch
  403607:	push   ss
  403608:	xor    dh,BYTE PTR [esi+0x2b63060a]
  40360e:	fiadd  DWORD PTR [esi-0x7fba8de0]
  403614:	mov    edx,0x5d5b54e7
  403619:	mov    ebx,0x2d7adc7e
  40361e:	inc    ebx
  40361f:	shl    DWORD PTR [ecx+0x78],cl
  403622:	push   ecx
  403623:	inc    edi
  403624:	mul    BYTE PTR [edx]
  403626:	adc    DWORD PTR [esi+0x1c6905c6],edx
  40362c:	enter  0x328a,0x21
  403630:	hlt    
  403631:	dec    esp
  403632:	mov    ebx,0x99bd184e
  403637:	mov    cl,0x65
  403639:	je     0x4036ad
  40363b:	inc    esi
  40363c:	fwait
  40363d:	mov    al,ss:0x534e7cad
  403643:	fcomp  DWORD PTR [edi-0x6]
  403646:	repz push esi
  403648:	cmp    eax,0x523bc43e
  40364d:	lods   eax,DWORD PTR ds:[esi]
  40364e:	test   al,0x96
  403650:	sti    
  403651:	or     edi,DWORD PTR [esi]
  403653:	inc    edx
  403654:	jg     0x403640
  403656:	lock push ds
  403658:	ret    0xdb44
  40365b:	inc    ebp
  40365c:	aas    
  40365d:	or     eax,0x4cb89cf8
  403662:	pop    ebx
  403663:	mov    al,ds:0x267d4838
  403668:	popf   
  403669:	jo     0x40361b
  40366b:	and    BYTE PTR [ecx],0xee
  40366e:	int3   
  40366f:	xor    DWORD PTR [edi],0x29
  403672:	xchg   DWORD PTR [esi-0x23],eax
  403675:	jns    0x403683
  403677:	cdq    
  403678:	jne    0x403665
  40367a:	nop
  40367b:	imul   ebx,DWORD PTR [esi-0x323f7361],0x66
  403682:	xor    ch,dl
  403684:	rol    BYTE PTR [bx+si],1
  403687:	add    eax,DWORD PTR [ebx-0x4d]
  40368a:	pop    es
  40368b:	lea    edi,[ecx-0x69]
  40368e:	sub    al,0x95
  403690:	test   BYTE PTR [edi+0x2da328ca],0x7e
  403697:	pop    ebx
  403698:	pushf  
  403699:	xchg   ebp,eax
  40369a:	dec    ebx
  40369b:	xor    edx,DWORD PTR [eax+0x645c0e41]
  4036a1:	jp     0x40367b
  4036a3:	aad    0xc1
  4036a5:	push   edi
  4036a6:	(bad)  
  4036a8:	inc    esi
  4036a9:	jp     0x4036a2
  4036ab:	mov    ecx,0xf66cb23b
  4036b0:	jmp    0xf:0x42abdc94
  4036b7:	and    ecx,ecx
  4036b9:	daa    
  4036ba:	fistp  WORD PTR [edi+eiz*4+0x169fdf61]
  4036c1:	inc    ebx
  4036c2:	icebp  
  4036c3:	or     BYTE PTR [ecx],0xd7
  4036c6:	pop    esp
  4036c7:	addr16 jle 0x40369f
  4036ca:	les    ecx,FWORD PTR [edi+0x6]
  4036cd:	jbe    0x4036a9
  4036cf:	fdivrp st(3),st
  4036d1:	jno    0x4036b5
  4036d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d4:	ins    BYTE PTR es:[edi],dx
  4036d5:	sbb    eax,0x8bff458a
  4036da:	or     eax,0x4345eb
  4036df:	sbb    ecx,DWORD PTR ds:0x434707
  4036e5:	mov    DWORD PTR ds:0x4345eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434713,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4345fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4345f7,0x434707
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434677,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434687,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434687
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434687,ecx
  40373d:	cmp    DWORD PTR ds:0x434687,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434687,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4346cb,0x14
  403779:	cmp    DWORD PTR ds:0x4346cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4346cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4346cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4346cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4346cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4346cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4346cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4345e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4345e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4345e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434849
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4345e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4345e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4345e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4345e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4345e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434687,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43470b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43464f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434643
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43464b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038be:	retf   0x5525
  4038c1:	arpl   WORD PTR [ebx],dx
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x403864
  4038ca:	inc    ecx
  4038cb:	or     al,0xad
  4038cd:	mov    eax,ds:0xc08ddacc
  4038d2:	dec    esp
  4038d3:	cmovge edx,DWORD PTR [esp+ecx*2+0x40]
  4038d8:	xor    dl,dl
  4038da:	nop
  4038db:	js     0x4038b9
  4038dd:	jnp    0x40394f
  4038df:	mov    bl,0xf3
  4038e1:	cmp    DWORD PTR [ebx],esp
  4038e3:	inc    edi
  4038e4:	les    eax,FWORD PTR [ecx+0x51]
  4038e7:	dec    esi
  4038e8:	scas   eax,DWORD PTR es:[edi]
  4038e9:	mov    esi,0x78466418
  4038ee:	pop    ds
  4038ef:	cdq    
  4038f0:	popf   
  4038f1:	sub    eax,0x52797547
  4038f6:	mov    BYTE PTR [edx],al
  4038f8:	mul    DWORD PTR [esp+ebx*1]
  4038fb:	sbb    BYTE PTR [ecx+0x3238f1c7],0x56
  403902:	mov    dh,0xd7
  403904:	xor    BYTE PTR [ebp-0x2b],cl
  403907:	mov    esi,0x3c06e48a
  40390c:	imul   BYTE PTR [eax-0x7877ac6e]
  403912:	add    BYTE PTR [edx-0x45],al
  403915:	add    BYTE PTR [ebx+0xf],bl
  403918:	out    0xf6,al
  40391a:	mov    ds:0x42b14162,al
  40391f:	and    al,0xf5
  403921:	test   DWORD PTR gs:[edi],edi
  403924:	cmp    eax,0xe84e5837
  403929:	mov    fs,WORD PTR [edi]
  40392b:	scas   eax,DWORD PTR es:[edi]
  40392c:	fist   DWORD PTR [ecx]
  40392e:	out    dx,eax
  40392f:	dec    esp
  403930:	ret    
  403931:	imul   DWORD PTR [ebx-0x33]
  403934:	icebp  
  403935:	test   al,0xd
  403937:	adc    bl,bh
  403939:	mov    al,0xbb
  40393b:	lahf   
  40393c:	or     BYTE PTR [ebp-0x58],ah
  40393f:	jecxz  0x4038e4
  403941:	test   edx,edi
  403943:	les    ebx,FWORD PTR [esi]
  403945:	ds dec esp
  403947:	xor    BYTE PTR [edi-0x1b],bh
  40394a:	ret    0x4dcb
  40394d:	adc    edx,edi
  40394f:	xchg   BYTE PTR [ebx+ebp*4],ch
  403952:	sar    DWORD PTR [eax-0x1],cl
  403955:	pushf  
  403956:	ja     0x403966
  403958:	test   al,0xb5
  40395a:	sahf   
  40395b:	xlat   BYTE PTR ds:[ebx]
  40395c:	jecxz  0x403938
  40395e:	test   eax,0x91c75625
  403963:	mov    esp,0xecca3531
  403968:	mov    dh,0xe3
  40396a:	push   esi
  40396b:	outs   dx,BYTE PTR ds:[esi]
  40396c:	inc    ebp
  40396d:	mov    esi,0xdab91db1
  403972:	(bad)  
  403973:	cld    
  403974:	mov    ah,0x46
  403976:	sbb    DWORD PTR [eax-0x13e703e1],eax
  40397c:	push   0x5f8552b2
  403981:	es stos DWORD PTR es:[edi],eax
  403983:	jecxz  0x4039d6
  403985:	sub    DWORD PTR [eax],edx
  403987:	les    esp,FWORD PTR [edi-0x2c464fa2]
  40398d:	mov    dh,0x36
  40398f:	jnp    0x403949
  403991:	xchg   edx,eax
  403992:	mov    esi,0x35fa1c38
  403997:	loope  0x4039d1
  403999:	or     al,0x7b
  40399b:	mov    bl,0x1a
  40399d:	cld    
  40399e:	retf   
  40399f:	and    BYTE PTR [esi],bl
  4039a1:	into   
  4039a2:	jno    0x403977
  4039a4:	dec    esi
  4039a5:	jecxz  0x403982
  4039a7:	(bad)  
  4039a8:	sbb    eax,0xcc594fa4
  4039ad:	mov    esi,0x7e72b92
  4039b2:	aas    
  4039b3:	and    ebx,edx
  4039b5:	add    eax,DWORD PTR [eax-0x80]
  4039b8:	push   0x4a
  4039ba:	mov    fs,WORD PTR [esi-0x50]
  4039bd:	sub    BYTE PTR [edi-0x50],ah
  4039c0:	sub    edx,edi
  4039c2:	adc    DWORD PTR [eax+edi*8+0x4cd52db3],edx
  4039c9:	aad    0xdb
  4039cb:	(bad)  
  4039cc:	(bad)  
  4039ce:	enter  0x8e2,0x78
  4039d2:	ds dec ebp
  4039d4:	sbb    edx,DWORD PTR [esi+0x4d]
  4039d7:	not    DWORD PTR [eax]
  4039d9:	mov    ebp,0x29bac1e5
  4039de:	inc    eax
  4039df:	sub    bh,bl
  4039e1:	pop    ebp
  4039e2:	push   ds
  4039e3:	lahf   
  4039e4:	pop    esp
  4039e5:	or     al,0x5b
  4039e7:	sti    
  4039e8:	dec    ebp
  4039e9:	or     BYTE PTR [eax+0x2c0ac510],ch
  4039ef:	jbe    0x403a1e
  4039f1:	stos   DWORD PTR es:[edi],eax
  4039f2:	jo     0x4039c2
  4039f4:	retf   0x8cd3
  4039f7:	sbb    BYTE PTR [ecx],ah
  4039f9:	aad    0xee
  4039fb:	(bad)  
  4039fc:	ins    BYTE PTR es:[edi],dx
  4039fd:	mov    edi,0x5e6e68c1
  403a02:	cwde   
  403a03:	add    ecx,DWORD PTR [esi+0x56]
  403a06:	sub    BYTE PTR [eax+0x40],ch
  403a09:	jge    0x4039cc
  403a0b:	std    
  403a0c:	adc    eax,0xcf9f58ed
  403a11:	std    
  403a12:	pop    ecx
  403a13:	mov    ecx,0x7aab30bc
  403a18:	xchg   ebp,eax
  403a19:	sbb    ecx,DWORD PTR [edi+0x21b4d45a]
  403a1f:	nop
  403a20:	out    dx,eax
  403a21:	mov    eax,0xb5021fc8
  403a26:	(bad)  
  403a27:	rcr    ebx,1
  403a29:	imul   edi,DWORD PTR [ecx+0x1380999d],0xffffffd1
  403a30:	popa   
  403a31:	daa    
  403a32:	pusha  
  403a33:	push   ds
  403a34:	pop    eax
  403a35:	cli    
  403a36:	mov    edi,DWORD PTR [eax-0x2a]
  403a39:	jmp    0x2138:0x7e799c48
  403a40:	sbb    BYTE PTR [esi+edi*8+0x55],bl
  403a44:	push   esp
  403a45:	in     eax,0xa2
  403a47:	lock nop
  403a49:	mov    edi,0x3174d505
  403a4e:	nop
  403a4f:	fidiv  DWORD PTR [edi-0x2e33635f]
  403a55:	shl    ebp,1
  403a57:	adc    eax,0xda4b5289
  403a5c:	mov    eax,0x9b42e712
  403a61:	inc    ecx
  403a62:	mov    DWORD PTR [edi+0x4ef5e920],esp
  403a68:	pop    ss
  403a69:	aad    0x32
  403a6b:	aad    0x35
  403a6d:	sub    ah,dl
  403a6f:	in     al,0x22
  403a71:	frstor [eax+0x64]
  403a74:	and    DWORD PTR [edi-0x45],0xffffffe6
  403a78:	sti    
  403a79:	test   ebp,ebx
  403a7b:	jle    0x403a55
  403a7d:	adc    ah,ah
  403a7f:	cmp    ch,BYTE PTR [eax-0x4977dc96]
  403a85:	arpl   WORD PTR [ecx-0x1f],dx
  403a88:	and    eax,0x2fc40338
  403a8d:	sbb    BYTE PTR [esi-0x1d329b0],ch
  403a93:	push   0xffffffd3
  403a95:	shr    DWORD PTR [edi+0x4],0x3
  403a99:	les    ecx,FWORD PTR [esi+0x2a]
  403a9c:	fbld   TBYTE PTR [ecx]
  403a9e:	stc    
  403a9f:	bound  ebp,QWORD PTR [ecx+0x12]
  403aa2:	push   esi
  403aa3:	mov    esi,0x85aab6ed
  403aa8:	sub    BYTE PTR [esi+0x48c26e03],cl
  403aae:	pop    ebp
  403aaf:	imul   edx,DWORD PTR [esi],0x61
  403ab2:	pop    es
  403ab3:	add    al,BYTE PTR [ebp-0x6c]
  403ab6:	arpl   WORD PTR ds:0xd618ef12,si
  403abc:	lahf   
  403abd:	mov    ecx,0x38236185
  403ac2:	inc    edi
  403ac3:	data16 out dx,al
  403ac5:	mov    ds:0x27a1c686,al
  403aca:	icebp  
  403acb:	sub    bh,BYTE PTR [edx+edx*2-0x6c]
  403acf:	stos   BYTE PTR es:[edi],al
  403ad0:	jns    0x403a81
  403ad2:	add    BYTE PTR [edi+edx*4+0x3d],dl
  403ad6:	mov    ds:0x7c756602,al
  403adb:	pop    ebx
  403adc:	sub    BYTE PTR [ebp+ecx*1-0x43],dl
  403ae0:	mov    ch,0xad
  403ae2:	sub    BYTE PTR [esi-0x53f3c780],cl
  403ae8:	xchg   al,bl
  403aea:	dec    edx
  403aeb:	fiadd  DWORD PTR [edx-0x70656874]
  403af1:	inc    ebx
  403af2:	imul   eax,DWORD PTR [esi-0x72],0x8092a820
  403af9:	or     eax,0x8e0d9ba2
  403afe:	or     DWORD PTR [ebx],0x6cd3065
  403b04:	popfw  
  403b06:	xor    ebp,eax
  403b08:	push   edi
  403b09:	hlt    
  403b0a:	cdq    
  403b0b:	aam    0xda
  403b0d:	jle    0x403b18
  403b0f:	lock je 0x403b00
  403b12:	cmp    DWORD PTR [edi+0x1027d940],0x50
  403b19:	imul   esi,DWORD PTR [esi-0x11ac0d19],0xffffffb2
  403b20:	pop    ebp
  403b21:	mov    ds:0xc20ef0df,eax
  403b26:	mov    esp,0xf6377496
  403b2b:	dec    esi
  403b2c:	or     cl,BYTE PTR [eax]
  403b2e:	jnp    0x403b4c
  403b30:	shl    BYTE PTR [ecx],1
  403b32:	lea    edx,[edi-0x66]
  403b35:	pushf  
  403b36:	mov    ecx,0x9fd87f91
  403b3b:	pop    ds
  403b3c:	push   eax
  403b3d:	mov    bh,BYTE PTR [edi-0x77a2fec9]
  403b43:	push   edi
  403b44:	mov    dh,0x58
  403b46:	add    al,BYTE PTR [esi+0x4c]
  403b49:	xchg   edi,eax
  403b4a:	sub    edx,0x75
  403b4d:	dec    esp
  403b4e:	shl    DWORD PTR ds:0x62056bad,cl
  403b54:	mov    ebp,0x1070cd8
  403b59:	dec    edi
  403b5a:	es push edi
  403b5c:	pusha  
  403b5d:	xor    bl,BYTE PTR [esp]
  403b60:	iret   
  403b61:	or     esp,DWORD PTR [ebx+0x63]
  403b64:	inc    ecx
  403b65:	fucomi st,st(0)
  403b67:	js     0x403b46
  403b69:	cmc    
  403b6a:	jne    0x403b6c
  403b6c:	repnz nop
  403b6e:	inc    eax
  403b6f:	in     al,dx
  403b70:	popa   
  403b71:	dec    edi
  403b72:	sbb    ecx,DWORD PTR [edx]
  403b74:	mov    cl,BYTE PTR [ecx+0x5e]
  403b77:	jne    0x403bbf
  403b79:	or     DWORD PTR [ecx+0x1f],ebp
  403b7c:	add    BYTE PTR ds:0xd2b3058b,bl
  403b82:	fwait
  403b83:	dec    edi
  403b84:	mov    ?,WORD PTR [ecx+ebx*2+0x6bb1b2b3]
  403b8b:	cli    
  403b8c:	iret   
  403b8d:	xor    BYTE PTR [esi-0x2aaf0dc],0xf6
  403b94:	jmp    0x403bbc
  403b96:	into   
  403b97:	fldenv [edi+0x75]
  403b9a:	jle    0x403b82
  403b9c:	or     eax,0xf0073a56
  403ba1:	pop    eax
  403ba2:	pop    eax
  403ba3:	gs or  ch,bl
  403ba6:	aaa    
  403ba7:	cmp    esp,DWORD PTR ds:0x874c29f
  403bad:	out    0xc,al
  403baf:	or     al,0x73
  403bb1:	sbb    DWORD PTR [ebx-0x28ebb6cd],ebx
  403bb7:	and    ah,BYTE PTR [ecx]
  403bb9:	(bad)
  403bbc:	js     0x403c2e
  403bbe:	inc    ebx
  403bbf:	std    
  403bc0:	or     BYTE PTR [edi],al
  403bc2:	pop    eax
  403bc3:	pop    ss
  403bc4:	push   esp
  403bc5:	das    
  403bc6:	inc    esp
  403bc7:	mov    ds:0xaece726a,al
  403bcc:	adc    DWORD PTR [edx],0x36
  403bcf:	(bad)  
  403bd1:	scas   al,BYTE PTR es:[edi]
  403bd2:	cmp    eax,0xa139ef12
  403bd7:	int    0x8d
  403bd9:	and    BYTE PTR [edx-0x31],dl
  403bdc:	loop   0x403bc7
  403bde:	pop    edx
  403bdf:	sub    DWORD PTR [ebx-0x44],edx
  403be2:	push   esp
  403be3:	and    eax,0x7a9b0daf
  403be8:	or     al,0xf0
  403bea:	xlat   BYTE PTR ds:[ebx]
  403beb:	sbb    al,0x98
  403bed:	fmul   DWORD PTR [edi+ebx*1]
  403bf0:	fisubr WORD PTR [edi+0x5ae97f83]
  403bf6:	ds jge 0x403bd9
  403bf9:	jnp    0x403bd8
  403bfb:	fsubr  QWORD PTR [edi-0x692c0553]
  403c01:	mov    ah,0xb0
  403c03:	xor    al,0x11
  403c05:	lds    ebx,FWORD PTR [edi+0x4b]
  403c08:	adc    eax,0x9085100c
  403c0d:	sbb    DWORD PTR [ebp+0x2d29e46a],eax
  403c13:	mov    cl,0xf7
  403c15:	cs scas ax,WORD PTR es:[edi]
  403c18:	aaa    
  403c19:	dec    ecx
  403c1a:	data16 jb 0x403c90
  403c1d:	test   eax,0x8ccd28bd
  403c22:	mov    ss,WORD PTR [edx+0x19]
  403c25:	ret    
  403c26:	rcr    BYTE PTR [esi+0xb9f5244],0xe9
  403c2d:	test   DWORD PTR [esi],edx
  403c2f:	jae    0x403bfe
  403c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c32:	push   ecx
  403c33:	shr    BYTE PTR [edi],1
  403c35:	or     ebp,DWORD PTR [eax-0x9f77557]
  403c3b:	inc    esi
  403c3c:	xor    BYTE PTR [esi+edx*4],bh
  403c3f:	loopne 0x403c18
  403c41:	jne    0x403cb3
  403c43:	dec    esp
  403c44:	cs hlt 
  403c46:	dec    ebp
  403c47:	push   edx
  403c48:	mov    ds:0xb6715eb1,ax
  403c4e:	jns    0x403cb2
  403c50:	nop
  403c51:	mov    ds:0x28177647,al
  403c56:	stos   DWORD PTR es:[edi],eax
  403c57:	das    
  403c58:	mov    ebx,0xa11ef891
  403c5d:	xor    esi,DWORD PTR gs:[eax]
  403c60:	xchg   BYTE PTR [esi+eiz*4-0x5a0c9aae],dh
  403c67:	shl    BYTE PTR [edx+eiz*2-0x1a],0xd1
  403c6c:	adc    BYTE PTR [ecx-0x7f],ah
  403c6f:	sub    eax,0x99f70068
  403c74:	adc    BYTE PTR [esi+0x57ea0089],0x33
  403c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c7c:	out    0xba,al
  403c7e:	pop    ds
  403c7f:	(bad)  [edx+0x3dd43bc7]
  403c85:	fwait
  403c86:	scas   al,BYTE PTR es:[edi]
  403c87:	inc    esi
  403c88:	cld    
  403c89:	add    bh,BYTE PTR [ebx-0x6ce692c9]
  403c8f:	outs   dx,BYTE PTR ds:[esi]
  403c90:	dec    eax
  403c91:	pop    esi
  403c92:	in     eax,dx
  403c93:	lahf   
  403c94:	and    cl,BYTE PTR [esi+0x45394d33]
  403c9a:	xor    eax,0x3d117906
  403c9f:	or     eax,0xc7036676
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0xd4b8a4cc
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403d2c
  403cf7:	cmp    BYTE PTR [edx+0x6c2d0d3a],al
  403cfd:	cmp    DWORD PTR [esi],eax
  403cff:	or     ebp,ebp
  403d01:	lea    eax,[eax-0xf]
  403d04:	and    al,0x17
  403d06:	fldcw  WORD PTR [ebx+ecx*1]
  403d09:	cmp    ebp,ebx
  403d0b:	fadd   QWORD PTR [edx+0x2f263ea9]
  403d11:	fisttp DWORD PTR [edi]
  403d13:	das    
  403d14:	dec    edx
  403d15:	mov    dl,0x77
  403d17:	pop    esp
  403d18:	adc    ch,BYTE PTR [esi-0x5b]
  403d1b:	dec    ebp
  403d1c:	xchg   esi,eax
  403d1d:	ret    0xa395
  403d20:	(bad)  
  403d21:	out    0xb2,al
  403d23:	jecxz  0x403d41
  403d25:	div    BYTE PTR [edi-0x4b]
  403d28:	push   0x5db98ee8
  403d2d:	gs aam 0xa8
  403d30:	das    
  403d31:	mov    bh,0x6c
  403d33:	jge    0x403d94
  403d35:	and    DWORD PTR [edi-0x5d],edx
  403d38:	dec    ebp
  403d39:	lea    edi,[ebp+esi*8+0x3e]
  403d3d:	test   DWORD PTR [esp+esi*8-0xe],0xc10fbeb2
  403d45:	fnstsw ax
  403d47:	sub    cl,BYTE PTR [edx]
  403d49:	mov    ds:0x9974328d,eax
  403d4e:	xchg   esi,eax
  403d4f:	xchg   DWORD PTR [edi-0x37338d58],esi
  403d55:	and    al,0x61
  403d57:	sbb    bh,BYTE PTR ds:0xdd2d4b22
  403d5d:	jb     0x403db7
  403d5f:	iret   
  403d60:	mov    edx,0x71791eac
  403d65:	pop    edx
  403d66:	xlat   BYTE PTR ds:[ebx]
  403d67:	cmc    
  403d68:	push   cs
  403d69:	fistp  WORD PTR [ebp-0x5b]
  403d6c:	call   0xc45ee74a
  403d71:	cmp    al,0xcb
  403d73:	xchg   ecx,eax
  403d74:	cmp    al,0x8e
  403d76:	dec    edi
  403d77:	xor    dl,BYTE PTR [esi]
  403d79:	ret    
  403d7a:	data16 mov BYTE PTR [ecx-0x54c8b3f0],dh
  403d81:	inc    esp
  403d82:	cmp    BYTE PTR [esi-0x3b],ch
  403d85:	fnstsw WORD PTR [eax+edi*4+0x4c]
  403d89:	inc    edi
  403d8a:	test   DWORD PTR [ebx],ebx
  403d8c:	cmp    bl,bh
  403d8e:	mov    ch,0x7
  403d90:	inc    edx
  403d91:	mov    BYTE PTR [ecx+edi*8+0x13d42a7d],dh
  403d98:	xchg   esp,eax
  403d99:	pop    edx
  403d9a:	outs   dx,DWORD PTR ds:[esi]
  403d9b:	pop    ds
  403d9c:	je     0x403e12
  403d9e:	out    dx,al
  403d9f:	fbstp  TBYTE PTR [ecx]
  403da1:	sahf   
  403da2:	push   cs
  403da3:	lods   eax,DWORD PTR ds:[esi]
  403da4:	dec    ecx
  403da5:	and    DWORD PTR [ecx+0x68],esp
  403da8:	adc    al,0xb6
  403daa:	es pop ss
  403dac:	outs   dx,BYTE PTR ds:[esi]
  403dad:	aaa    
  403dae:	mov    al,0xed
  403db0:	add    BYTE PTR [edi],ah
  403db2:	mov    bl,BYTE PTR cs:[ebx-0x4]
  403db6:	lahf   
  403db7:	scas   al,BYTE PTR es:[edi]
  403db8:	nop
  403db9:	adc    bh,BYTE PTR ds:0x1f7b7ec
  403dbf:	imul   ebx,edi,0xea46a825
  403dc5:	adc    eax,0x165b23fc
  403dca:	out    dx,al
  403dcb:	mov    eax,ds:0x77b1b216
  403dd0:	push   cs
  403dd1:	dec    edx
  403dd2:	adc    ebp,DWORD PTR [eax+edx*4-0x6f441327]
  403dd9:	test   al,0x5c
  403ddb:	dec    esi
  403ddc:	shl    DWORD PTR [esi],0x23
  403ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de0:	das    
  403de1:	add    BYTE PTR [esi],0x87
  403de4:	shl    BYTE PTR [esi-0x1e1538da],0x34
  403deb:	out    0xba,eax
  403ded:	jmp    0x403e0f
  403def:	loop   0x403db8
  403df1:	pop    ebx
  403df2:	(bad)  
  403df3:	mov    ebx,0x9b783cc4
  403df8:	cmp    BYTE PTR [ebx],ah
  403dfa:	push   ebp
  403dfb:	dec    ebp
  403dfc:	xor    al,0x37
  403dfe:	push   eax
  403dff:	dec    esp
  403e00:	push   esi
  403e01:	arpl   WORD PTR [edi],bx
  403e03:	popa   
  403e04:	outs   dx,BYTE PTR ds:[esi]
  403e05:	cdq    
  403e06:	sbb    eax,0xebb72ccd
  403e0b:	imul   ecx,DWORD PTR [ebx+0x0],0x3e
  403e0f:	in     al,0x1f
  403e11:	jg     0x403d9c
  403e13:	scas   al,BYTE PTR es:[edi]
  403e14:	cli    
  403e15:	jle    0x403e3d
  403e17:	call   FWORD PTR [ebx+0x3d]
  403e1a:	mov    ebx,0x38712e1a
  403e1f:	aaa    
  403e20:	inc    ebp
  403e21:	mov    al,ds:0xd125646d
  403e26:	je     0x403e47
  403e28:	dec    esp
  403e29:	test   edx,0x633532b4
  403e2f:	pop    es
  403e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e31:	cld    
  403e32:	or     ch,BYTE PTR [edx-0x59]
  403e35:	clc    
  403e36:	icebp  
  403e37:	rcr    DWORD PTR [edi-0x59],1
  403e3a:	imul   edx,DWORD PTR [edx],0x75
  403e3d:	sbb    al,0xe
  403e3f:	call   0x975d8417
  403e44:	push   esp
  403e45:	jmp    0xd5d2cb97
  403e4a:	dec    ecx
  403e4b:	mov    ebx,0x6bdb7a50
  403e50:	and    eax,0xbdcf5e0d
  403e55:	jge    0x403df0
  403e57:	lds    edx,FWORD PTR [eax]
  403e59:	aad    0xcd
  403e5b:	jmp    0xf85d8ca0
  403e60:	xchg   ebx,eax
  403e61:	bound  eax,QWORD PTR [ebp-0x2f]
  403e64:	jle    0x403ee1
  403e66:	sub    esp,ebx
  403e68:	xchg   ebp,eax
  403e69:	xchg   DWORD PTR [edi],esi
  403e6b:	sbb    BYTE PTR [edx],bh
  403e6d:	or     DWORD PTR [ecx+0x33],ecx
  403e70:	imul   ebx,DWORD PTR [edx-0x71d8e5b9],0xb3b1ce0f
  403e7a:	push   ebp
  403e7b:	ret    0x5d1a
  403e7e:	ret    0xc82
  403e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e82:	outs   dx,DWORD PTR ds:[esi]
  403e83:	push   ebx
  403e84:	dec    edi
  403e85:	pop    es
  403e86:	movhps QWORD PTR [esi],xmm2
  403e89:	call   0x8b1b:0x50a1b496
  403e90:	mov    edx,0xeb56e30b
  403e95:	jl     0x403ef7
  403e97:	in     eax,0xc2
  403e99:	sub    DWORD PTR [edx],ebx
  403e9b:	mov    eax,0xd4a2719c
  403ea0:	test   cl,ah
  403ea2:	jae    0x403e53
  403ea4:	outs   dx,DWORD PTR ds:[esi]
  403ea5:	and    dl,BYTE PTR [edx-0x69]
  403ea8:	pop    edx
  403ea9:	jmp    0xd2977443
  403eae:	push   0x53
  403eb0:	sub    eax,0x962f4a7a
  403eb5:	outs   dx,DWORD PTR ds:[esi]
  403eb6:	inc    esi
  403eb7:	pop    es
  403eb8:	loope  0x403f06
  403eba:	stc    
  403ebb:	pop    ebx
  403ebc:	mov    eax,ss
  403ebe:	mov    esi,0x6b53928b
  403ec3:	mov    ah,0xc5
  403ec5:	add    eax,0x165680ac
  403eca:	fwait
  403ecb:	punpckhwd mm0,mm1
  403ece:	jns    0x403edc
  403ed0:	fisub  WORD PTR ds:[ebp-0x4e]
  403ed4:	adc    al,0x58
  403ed6:	inc    esp
  403ed7:	cmp    ecx,ebp
  403ed9:	aam    0x5c
  403edb:	inc    ecx
  403edc:	outs   dx,DWORD PTR ds:[esi]
  403edd:	mov    cl,BYTE PTR [ebp-0xe6994c1]
  403ee3:	sbb    ebp,DWORD PTR [edi-0x48]
  403ee6:	les    ecx,FWORD PTR [eax-0x55]
  403ee9:	inc    ecx
  403eea:	stos   DWORD PTR es:[edi],eax
  403eeb:	int    0xd6
  403eed:	cmp    dl,BYTE PTR [edx+eiz*4+0x58]
  403ef1:	je     0x403ec3
  403ef3:	xchg   ebp,eax
  403ef4:	dec    esp
  403ef5:	ins    BYTE PTR es:[edi],dx
  403ef6:	and    eax,esp
  403ef8:	and    BYTE PTR [eax-0x10d7493f],0x85
  403eff:	mov    ebp,0xda3bbd95
  403f04:	ds out dx,al
  403f06:	stc    
  403f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f08:	sub    eax,0xbe1ae607
  403f0d:	and    BYTE PTR [edi-0x66381eab],ah
  403f13:	aas    
  403f14:	xchg   eax,ecx
  403f16:	xchg   ebx,eax
  403f17:	xlat   BYTE PTR fs:[ebx]
  403f19:	cmp    al,0x4f
  403f1b:	xchg   DWORD PTR [ebx-0x680bafcb],esi
  403f21:	or     cl,BYTE PTR ds:0x57c16603
  403f27:	shl    BYTE PTR ds:0xcdc108f7,0x95
  403f2e:	std    
  403f2f:	jb     0x403f12
  403f31:	sbb    al,0x70
  403f33:	aam    0x85
  403f35:	retf   0x8065
  403f38:	test   BYTE PTR [ecx+0x25df1161],cl
  403f3e:	pop    DWORD PTR cs:[edx+0x58d3effa]
  403f45:	retf   0x8520
  403f48:	imul   ebx,DWORD PTR ds:0xd9be83d0,0x76
  403f4f:	pop    ecx
  403f50:	xchg   BYTE PTR [eax],cl
  403f52:	fistp  WORD PTR [ecx+ecx*8-0x5f584cce]
  403f59:	cs mov edx,0x1480b581
  403f5f:	or     eax,0x2911b87a
  403f64:	inc    esp
  403f65:	neg    DWORD PTR [edi-0x3b981853]
  403f6b:	inc    ecx
  403f6c:	outs   dx,DWORD PTR ds:[esi]
  403f6d:	and    BYTE PTR [ecx+ebp*2-0x11fe71e7],bl
  403f74:	xor    esp,esi
  403f76:	dec    eax
  403f77:	jns    0x403fa9
  403f79:	push   ebp
  403f7a:	xor    edi,DWORD PTR [ebx+eiz*8+0x44f96bc4]
  403f81:	dec    ebp
  403f82:	add    eax,DWORD PTR [eax]
  403f84:	addr16 loopne 0x403f90
  403f87:	sub    BYTE PTR [esi+ebx*1-0x473ffd1e],ch
  403f8e:	das    
  403f8f:	les    edi,FWORD PTR ds:0x66c09660
  403f95:	sub    esi,DWORD PTR [ecx+0x250bafbf]
  403f9b:	outs   dx,DWORD PTR ds:[esi]
  403f9c:	adc    eax,0x83528ffc
  403fa1:	and    al,0xcd
  403fa3:	fcmovu st,st(2)
  403fa5:	push   es
  403fa6:	pop    DWORD PTR [ebx-0x11]
  403fa9:	pop    esp
  403faa:	into   
  403fab:	fcomp  st(7)
  403fad:	jg     0x403f94
  403faf:	sbb    al,0x64
  403fb1:	mov    esp,0x8decb03d
  403fb6:	jecxz  0x403f9c
  403fb8:	jl     0x404016
  403fba:	lock aas 
  403fbc:	jbe    0x403fdb
  403fbe:	adc    ebx,DWORD PTR ds:0x25037afa
  403fc4:	sbb    ecx,DWORD PTR [eax]
  403fc6:	xchg   edx,eax
  403fc7:	je     0x403fa5
  403fc9:	lods   al,BYTE PTR ds:[esi]
  403fca:	adc    edi,eax
  403fcc:	cli    
  403fcd:	and    al,BYTE PTR [esi+edx*4+0x3230993e]
  403fd4:	xchg   esi,eax
  403fd5:	test   eax,0x9d214f18
  403fda:	icebp  
  403fdb:	mov    edi,esi
  403fdd:	outs   dx,BYTE PTR ds:[si]
  403fdf:	lods   al,BYTE PTR ds:[esi]
  403fe0:	cli    
  403fe1:	dec    edx
  403fe2:	scas   eax,DWORD PTR es:[edi]
  403fe3:	int3   
  403fe4:	out    dx,al
  403fe5:	lahf   
  403fe6:	adc    eax,0x3691f6ed
  403feb:	jne    0x404060
  403fed:	outs   dx,DWORD PTR ds:[esi]
  403fee:	jns    0x40400f
  403ff0:	inc    DWORD PTR [ebx+0x751fa425]
  403ff6:	test   edi,edx
  403ff8:	mov    ch,0x39
  403ffa:	in     eax,0x5a
  403ffc:	mov    ah,0x14
  403ffe:	rcr    edx,1
  404000:	add    DWORD PTR [ecx+0x1c],0x1e78be20
  404007:	in     eax,0x30
  404009:	xchg   ebx,eax
  40400b:	ss into 
  40400d:	out    0x30,al
  40400f:	push   0xffffff84
  404011:	adc    DWORD PTR [ecx-0x2c],edx
  404014:	and    DWORD PTR [eax],ebp
  404016:	cmp    eax,0x31c313d9
  40401b:	push   ebx
  40401c:	inc    esi
  40401d:	and    BYTE PTR [ebp-0x7497129a],dh
  404023:	out    dx,al
  404024:	ins    BYTE PTR es:[edi],dx
  404025:	push   eax
  404026:	sub    DWORD PTR [eax-0x14],eax
  404029:	out    0x1d,al
  40402b:	sar    BYTE PTR [edx-0x56],cl
  40402e:	stos   BYTE PTR es:[edi],al
  40402f:	pop    ebx
  404030:	shl    ecx,cl
  404032:	call   DWORD PTR [ebx+ebx*4]
  404035:	pop    edi
  404036:	sub    esi,edx
  404038:	fwait
  404039:	je     0x404082
  40403b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40403c:	mov    esp,0x431f92c6
  404041:	scas   eax,DWORD PTR es:[edi]
  404042:	and    BYTE PTR [esi-0x54ad6d33],0xc5
  404049:	enter  0xc714,0x2c
  40404d:	jnp    0x4040ba
  40404f:	adc    ah,BYTE PTR [eax]
  404051:	or     dl,cl
  404053:	xchg   DWORD PTR [edx+0x40],esp
  404056:	loopne 0x403ff9
  404058:	jg     0x4040ac
  40405a:	push   0xb52c9587
  40405f:	mov    al,ds:0x5b1d0442
  404064:	push   cs
  404065:	nop
  404066:	mov    esi,0xbc6cf84e
  40406b:	and    bl,BYTE PTR [edi+0x5b041df3]
  404071:	mov    eax,0x4abd4ce
  404076:	lahf   
  404077:	fwait
  404078:	pushf  
  404079:	in     eax,dx
  40407a:	jae    0x404067
  40407c:	add    BYTE PTR [eax],bl
  40407e:	jnp    0x404015
  404080:	jns    0x40402d
  404082:	mov    dl,0x46
  404084:	call   0xb9be:0x8c08336a
  40408b:	mov    dl,0x1b
  40408d:	lods   al,BYTE PTR ds:[esi]
  40408e:	adc    eax,0xb1ec9d86
  404093:	sbb    bh,ch
  404095:	ins    BYTE PTR es:[edi],dx
  404096:	rcl    BYTE PTR ss:[ebp-0x498fd312],cl
  40409d:	inc    esi
  40409e:	(bad)  
  40409f:	in     eax,0x8f
  4040a1:	div    ebp
  4040a3:	pop    edx
  4040a4:	push   es
  4040a5:	leave  
  4040a6:	adc    al,0xc1
  4040a8:	cmp    DWORD PTR [edx-0x58],esi
  4040ab:	inc    eax
  4040ac:	xlat   BYTE PTR ds:[ebx]
  4040ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ae:	jo     0x40409a
  4040b0:	or     al,0x6e
  4040b2:	jae    0x4040ae
  4040b4:	xor    dl,BYTE PTR [edi]
  4040b6:	xchg   ebx,eax
  4040b7:	out    0x9b,eax
  4040b9:	sub    DWORD PTR [edx-0x2a],ecx
  4040bc:	shl    BYTE PTR [ecx],1
  4040be:	sub    BYTE PTR [ecx-0xad64612],dh
  4040c4:	adc    BYTE PTR [edx-0x62cfbb6c],cl
  4040ca:	pop    esp
  4040cb:	mov    edi,0x458bdfb0
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x6bf0d3cd],ah
  4040ef:	ja     0x404084
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x404172
  4040f9:	pop    ds
  4040fa:	inc    ecx
  4040fb:	mov    edx,0xe68cbee4
  404100:	add    eax,DWORD PTR [eax-0x7d]
  404103:	icebp  
  404104:	rol    DWORD PTR [edx],1
  404106:	pop    ebp
  404107:	mov    dl,0x42
  404109:	mov    dh,0x40
  40410b:	sbb    al,0x27
  40410d:	add    ch,BYTE PTR fs:[ebx]
  404110:	pushf  
  404111:	lds    ecx,FWORD PTR ds:0x39b0d7d4
  404117:	pop    ss
  404118:	add    eax,0xd6aaa2b2
  40411d:	(bad)  
  40411e:	out    0x4a,eax
  404120:	or     DWORD PTR [edx+0x48],edi
  404123:	mov    dl,0xae
  404125:	pop    ds
  404126:	add    al,0x6a
  404128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404129:	push   0xffffffb7
  40412b:	adc    BYTE PTR [edi-0x176857b9],al
  404131:	push   ebp
  404132:	pop    ss
  404133:	out    0xcf,al
  404135:	cmp    DWORD PTR [edi-0x60],esi
  404138:	fnstsw WORD PTR ds:0x88b3fafb
  40413e:	cmp    al,0x74
  404140:	add    BYTE PTR [edx],0x93
  404143:	pusha  
  404144:	cmp    ah,dh
  404146:	sbb    dh,BYTE PTR [edi+0x1e15430a]
  40414c:	xchg   ebx,eax
  40414d:	in     eax,dx
  40414e:	mov    eax,ds:0xa3cdac24
  404153:	(bad)  
  404154:	lea    ecx,[edi]
  404156:	iret   
  404157:	and    al,0x11
  404159:	sbb    al,0xe7
  40415b:	or     al,0x15
  40415d:	pop    esp
  40415e:	cmp    al,0xa8
  404160:	mov    edi,0xdfee8cc3
  404165:	jne    0x4041dd
  404167:	out    dx,al
  404168:	sub    eax,0xc3f3863e
  40416d:	stos   DWORD PTR es:[edi],eax
  40416e:	in     al,0x9a
  404170:	sbb    al,BYTE PTR [eax]
  404172:	or     al,0xd8
  404174:	mov    DWORD PTR [edx+0x3037106a],eax
  40417a:	aas    
  40417b:	sub    edi,edx
  40417d:	xchg   ebx,eax
  40417e:	mov    edx,0x3bd3e3af
  404183:	fld    QWORD PTR [ebx-0x12ef8d3]
  404189:	push   edx
  40418a:	inc    esi
  40418b:	outs   dx,DWORD PTR ds:[esi]
  40418c:	cmp    al,0xf
  40418e:	popa   
  40418f:	or     ecx,DWORD PTR [edx+0x47b03530]
  404195:	mov    esp,0xbe83cd8f
  40419a:	mov    ecx,esi
  40419c:	push   ss
  40419d:	mov    dh,0xe9
  40419f:	lods   al,BYTE PTR ds:[esi]
  4041a0:	std    
  4041a1:	xchg   esp,eax
  4041a2:	sbb    DWORD PTR [ebx],0xffffffba
  4041a5:	push   ecx
  4041a6:	mov    bh,0xf7
  4041a8:	xchg   DWORD PTR [edx],esp
  4041aa:	inc    edi
  4041ab:	(bad)  
  4041ac:	sti    
  4041ad:	bndstx [esi+0x18],bnd0
  4041b1:	jo     0x40416e
  4041b3:	or     BYTE PTR [ebp-0x7123f4be],0xb0
  4041ba:	mov    esp,0xc004c771
  4041bf:	cli    
  4041c0:	and    BYTE PTR [edi+0x48240104],ch
  4041c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041c7:	jns    0x4041fc
  4041c9:	retf   
  4041ca:	ds popa 
  4041cc:	push   esi
  4041cd:	retf   
  4041ce:	shr    DWORD PTR [edx+0xf],0xf3
  4041d2:	rcr    BYTE PTR [ecx+edi*8+0x46],1
  4041d6:	repz out 0xe8,al
  4041d9:	xor    eax,0xda332136
  4041de:	in     al,dx
  4041df:	leave  
  4041e0:	xor    DWORD PTR ds:0xddaafcf4,edx
  4041e6:	mov    ch,0xdd
  4041e8:	sub    ebx,ebx
  4041ea:	cmp    eax,0x74ea808b
  4041ef:	repnz fcmovnbe st,st(4)
  4041f2:	sbb    BYTE PTR [ecx],al
  4041f4:	push   ds
  4041f5:	adc    ebx,DWORD PTR [esi+0x11]
  4041f8:	xchg   esp,eax
  4041f9:	or     edx,eax
  4041fb:	fadd   st(6),st
  4041fd:	mov    ebx,0x26e8a1c1
  404202:	lea    ecx,[eax-0x43]
  404205:	jbe    0x4041b0
  404207:	mov    ds,WORD PTR [edi]
  404209:	adc    BYTE PTR [ebp-0xb],al
  40420c:	cli    
  40420d:	push   ebp
  40420e:	stc    
  40420f:	arpl   bx,ax
  404211:	dec    edx
  404212:	popf   
  404213:	inc    edi
  404214:	mov    BYTE PTR [eax-0x7d3a01d9],al
  40421a:	fisttp DWORD PTR [esi+0x30c2fdbe]
  404220:	aaa    
  404221:	push   es
  404222:	gs mov ah,0xcd
  404225:	rep lods al,BYTE PTR ds:[esi]
  404227:	not    DWORD PTR [esi-0x33]
  40422a:	pop    ss
  40422b:	scas   eax,DWORD PTR es:[edi]
  40422c:	push   edx
  40422d:	sub    bh,BYTE PTR [ebp+0x4f56132a]
  404233:	and    al,0xe9
  404235:	dec    ebx
  404236:	adc    edi,DWORD PTR [ebx-0x3c]
  404239:	cld    
  40423a:	mul    bh
  40423c:	fcomp  QWORD PTR [esi-0x1c]
  40423f:	or     DWORD PTR [edx+0x5e3bc50f],ebp
  404245:	jmp    0x404278
  404247:	mov    ds:0xa29fede5,al
  40424c:	std    
  40424d:	js     0x404288
  40424f:	sub    al,cl
  404251:	(bad)  
  404252:	jae    0x4041f9
  404254:	test   DWORD PTR [edx+0x2b],ebp
  404257:	push   ebp
  404258:	sbb    bl,BYTE PTR [esi]
  40425a:	outs   dx,DWORD PTR ds:[esi]
  40425b:	fsubp  st(3),st
  40425d:	shr    cl,cl
  40425f:	dec    esi
  404260:	push   DWORD PTR [edi+0x76]
  404263:	add    BYTE PTR [ebp-0x5e2529fa],cl
  404269:	cwde   
  40426a:	dec    eax
  40426b:	es cwde 
  40426d:	adc    esp,DWORD PTR [edi+0x6e]
  404270:	mov    WORD PTR [edi],?
  404272:	mov    bh,0xef
  404274:	outs   dx,BYTE PTR ds:[esi]
  404275:	adc    BYTE PTR [edi-0x5f1c8b85],cl
  40427b:	adc    bh,dh
  40427d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40427e:	pop    edi
  40427f:	inc    ebx
  404280:	popa   
  404281:	mov    al,0x8e
  404283:	mov    DWORD PTR [ecx+0x13],edi
  404286:	xchg   edx,eax
  404287:	fisttp WORD PTR [ebx+edi*1+0xa6e674a]
  40428e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40428f:	mov    ebx,0xe89beee6
  404294:	sbb    eax,0xb0fb0aac
  404299:	inc    ecx
  40429a:	cmp    edi,DWORD PTR [esi*4+0x52ada037]
  4042a1:	aas    
  4042a2:	cs cmp eax,0x1e863998
  4042a8:	fmulp  st(1),st
  4042aa:	pop    ss
  4042ab:	cdq    
  4042ac:	jle    0x404237
  4042ae:	dec    esi
  4042af:	fld    DWORD PTR [esi]
  4042b1:	push   edi
  4042b2:	wbinvd 
  4042b4:	iret   
  4042b5:	mov    bl,0xd5
  4042b7:	push   ebp
  4042b8:	mov    al,ds:0xf4eb329d
  4042bd:	and    DWORD PTR [ebx+esi*2-0x6a537ee2],edi
  4042c4:	test   DWORD PTR [eax-0x3ee26d77],0x60b1e213
  4042ce:	std    
  4042cf:	mov    BYTE PTR [ecx],ch
  4042d1:	mov    esp,0xd849d3bc
  4042d6:	xchg   BYTE PTR [esp+edx*2],bh
  4042d9:	(bad)  
  4042da:	ret    
  4042db:	sbb    al,0x58
  4042dd:	sahf   
  4042de:	stc    
  4042df:	retf   
  4042e0:	and    al,0x73
  4042e2:	data16 das 
  4042e4:	inc    ecx
  4042e5:	fwait
  4042e6:	sbb    eax,DWORD PTR [esp+eax*4-0x62]
  4042ea:	mov    al,0x9d
  4042ec:	dec    esi
  4042ed:	jne    0x4042ee
  4042ef:	mov    bl,al
  4042f1:	dec    edx
  4042f2:	test   DWORD PTR [ebx+0x73a6b52f],edi
  4042f8:	push   edx
  4042f9:	inc    edi
  4042fa:	push   0x578378ed
  4042ff:	or     edx,ecx
  404301:	adc    edi,edx
  404303:	pop    ebx
  404304:	aad    0xbf
  404306:	(bad)  
  404308:	and    esi,DWORD PTR [eax-0x58]
  40430b:	int3   
  40430c:	cli    
  40430d:	mov    ds:0x8bbbb8d3,al
  404312:	in     eax,0xa3
  404314:	ins    BYTE PTR es:[edi],dx
  404315:	jecxz  0x404365
  404317:	call   0x68be:0xaef617a
  40431e:	inc    esp
  40431f:	ja     0x4042b0
  404321:	and    BYTE PTR [ebx],bl
  404323:	sub    eax,0x548a27b3
  404328:	mov    ch,0x69
  40432a:	shr    BYTE PTR [ecx+0x77],cl
  40432d:	cmp    eax,0x92de7b2e
  404332:	out    dx,eax
  404333:	iret   
  404334:	imul   edx,DWORD PTR [edi],0xffffff8f
  404337:	adc    edx,DWORD PTR [ebp+0x68c5aad9]
  40433d:	iret   
  40433e:	cdq    
  40433f:	outs   dx,DWORD PTR ds:[esi]
  404340:	test   dh,bl
  404342:	out    0x7f,eax
  404344:	xchg   edi,eax
  404345:	xor    edi,0x2c
  404348:	gs out dx,eax
  40434a:	ss dec esi
  40434c:	pop    esp
  40434d:	or     bl,bh
  40434f:	lds    ebx,FWORD PTR [edi+0x41dc294]
  404355:	ins    DWORD PTR es:[edi],dx
  404356:	xchg   BYTE PTR [edx],dh
  404358:	out    dx,eax
  404359:	pop    edi
  40435a:	cmp    DWORD PTR [ebx+0xf],0xffffffc7
  40435e:	seta   BYTE PTR [ecx-0x70]
  404362:	adc    al,0xc6
  404364:	leave  
  404365:	sub    al,0x2d
  404367:	call   0x294e:0x24ca304
  40436e:	retf   0xee51
  404371:	push   ds
  404372:	(bad)  
  404373:	jmp    0xf1a7:0xf30b63c8
  40437a:	or     esp,edi
  40437c:	mov    ss,WORD PTR [ecx]
  40437e:	retf   0x7495
  404381:	push   edi
  404382:	mov    ah,0x7f
  404384:	(bad)  
  404385:	push   esp
  404386:	repz add ah,BYTE PTR [esp+edi*4-0x7b646832]
  40438e:	cmp    BYTE PTR [edx+ecx*4+0x502b77a2],bh
  404395:	fs xchg edx,eax
  404397:	xchg   BYTE PTR [ecx],bh
  404399:	call   0x445e7956
  40439e:	in     eax,dx
  40439f:	loop   0x404381
  4043a1:	shl    DWORD PTR [ebx-0x24695d0a],cl
  4043a7:	test   DWORD PTR [ecx-0x470b8bf5],ecx
  4043ad:	sar    DWORD PTR [ecx+eiz*8-0x61],cl
  4043b1:	pop    edx
  4043b2:	loope  0x40434c
  4043b4:	icebp  
  4043b5:	xchg   ecx,eax
  4043b6:	xor    eax,0x42a9bacf
  4043bb:	repz sub ecx,0x33e6c6ee
  4043c2:	jecxz  0x4043aa
  4043c4:	pop    ebp
  4043c5:	cmp    DWORD PTR [edx],0x20c99bcf
  4043cb:	dec    edx
  4043cc:	mov    ah,BYTE PTR [ebx]
  4043ce:	pop    esp
  4043cf:	(bad)  
  4043d0:	in     al,dx
  4043d1:	mov    esi,0xc4bb2ef1
  4043d6:	cmp    BYTE PTR [eax+0x74],0xbb
  4043da:	(bad)  
  4043db:	sar    BYTE PTR [edi],1
  4043dd:	xor    bh,cl
  4043df:	jge    0x404420
  4043e1:	icebp  
  4043e2:	shr    esi,cl
  4043e4:	xor    dh,ch
  4043e6:	sub    al,0x8b
  4043e8:	jg     0x404380
  4043ea:	pop    edi
  4043eb:	adc    eax,0xc2669ef9
  4043f0:	dec    edi
  4043f1:	neg    DWORD PTR [ebx+0x610db7]
  4043f7:	xor    DWORD PTR [ebx-0xedfb11c],eax
  4043fd:	outs   dx,BYTE PTR ds:[esi]
  4043fe:	fisttp DWORD PTR [ebp-0x23]
  404401:	shl    bl,cl
  404403:	xor    DWORD PTR [ebp-0x61],ebp
  404406:	push   ebp
  404407:	or     DWORD PTR [edx],0x6c
  40440a:	sub    eax,0x5b3b5bcb
  40440f:	jo     0x4043ae
  404411:	jl     0x4043ae
  404413:	mov    WORD PTR [ebx],fs
  404415:	or     eax,0xf47b2911
  40441a:	pop    esi
  40441b:	retf   
  40441c:	inc    ebp
  40441d:	inc    esi
  40441e:	cmp    esi,DWORD PTR [edi-0xb]
  404421:	bound  ebx,QWORD PTR [eax+ebx*1]
  404424:	or     BYTE PTR [edi-0xe],ch
  404427:	push   0x5072b04c
  40442c:	popa   
  40442d:	pop    ss
  40442e:	adc    cl,BYTE PTR [esi]
  404430:	out    0xc,eax
  404432:	xchg   ebp,esi
  404434:	test   ecx,eax
  404436:	pushf  
  404437:	mov    esp,DWORD PTR [ecx-0x1fe12665]
  40443d:	jmp    0xab9c:0xd59c687
  404444:	jg     0x4044b4
  404446:	lock sti 
  404448:	xchg   edi,esi
  40444a:	loopne 0x4044b9
  40444c:	push   ebx
  40444d:	loopne 0x4043d0
  40444f:	(bad)  
  404450:	ret    0x6b7b
  404453:	inc    eax
  404454:	ja     0x4044af
  404456:	mov    ecx,ss
  404458:	mov    edi,0xb2865abb
  40445d:	mov    bl,BYTE PTR [ecx+0x39b762c8]
  404463:	call   0x17f5:0xccff0f0c
  40446a:	test   BYTE PTR [eax-0x4443c567],bh
  404470:	mov    al,ds:0x1c78412d
  404475:	std    
  404476:	xchg   DWORD PTR [edx-0x3b72c471],ebx
  40447c:	inc    esi
  40447d:	fisub  DWORD PTR [edi-0x26]
  404480:	ret    
  404481:	jns    0x40443e
  404483:	cmp    DWORD PTR [ecx-0x388346c3],ebp
  404489:	xor    edi,DWORD PTR [ebx+0x56507fbc]
  40448f:	les    esp,FWORD PTR [ecx]
  404491:	repnz enter 0x88b3,0x15
  404496:	add    BYTE PTR [esi+0x1ff87ca7],ch
  40449c:	jl     0x4044b6
  40449e:	jne    0x40443b
  4044a0:	out    0x82,al
  4044a2:	or     bl,BYTE PTR [edx]
  4044a4:	dec    eax
  4044a5:	mov    bh,0x7
  4044a7:	pop    es
  4044a8:	lods   eax,DWORD PTR ds:[esi]
  4044a9:	test   DWORD PTR [edx],esp
  4044ab:	call   0x6266:0xe870602
  4044b2:	movd   DWORD PTR [ecx-0x1f265c5d],mm5
  4044b9:	retf   0x9f88
  4044bc:	push   ebp
  4044bd:	popf   
  4044be:	sub    BYTE PTR [ebx-0x39],ah
  4044c1:	es mov cl,0xbd
  4044c4:	jns    0x4044af
  4044c6:	inc    ebx
  4044c7:	int    0x9b
  4044c9:	mov    ch,0xef
  4044cb:	xchg   edx,eax
  4044cc:	mov    edx,0x8acbce13
  4044d1:	inc    esp
  4044d2:	add    eax,0xff558aa8
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	mov    ecx,0xeb1c0e73
  404510:	daa    
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404552
  404518:	cwde   
  404519:	push   ebx
  40451a:	jle    0x404591
  40451c:	adc    dl,al
  40451e:	(bad)  
  40451f:	fldpi  
  404521:	sub    eax,0xeeb22f94
  404526:	mov    eax,ds:0x1dd22d79
  40452b:	mov    bh,0x44
  40452d:	fdiv   DWORD PTR ds:0x69657f48
  404533:	and    eax,0xf55279da
  404538:	mov    al,0x0
  40453a:	fmul   QWORD PTR [edi+eax*1-0x6a0fa261]
  404541:	push   edx
  404542:	push   edi
  404543:	mov    esp,ecx
  404545:	imul   esp,ebx,0x27
  404548:	je     0x40456f
  40454a:	mov    eax,ds:0xd9989aa9
  40454f:	mul    DWORD PTR [ebp+0x7ff62c48]
  404555:	ins    BYTE PTR es:[edi],dx
  404556:	mov    esi,0x6ab89df
  40455b:	jg     0x4045cf
  40455d:	push   ebp
  40455e:	fisub  DWORD PTR gs:0x9376d757
  404565:	add    eax,0xfdc6a89c
  40456a:	repnz adc dl,al
  40456d:	shl    DWORD PTR [ecx],1
  40456f:	std    
  404570:	mov    al,ds:0x4a45941d
  404575:	cdq    
  404576:	iret   
  404577:	push   ebx
  404578:	iret   
  404579:	aam    0xaa
  40457b:	cmp    al,0x54
  40457d:	int3   
  40457e:	push   edx
  40457f:	repnz cmc 
  404581:	fistp  WORD PTR [esi]
  404583:	jge    0x404534
  404585:	and    al,0xd6
  404587:	sub    al,0x67
  404589:	cmp    al,0x47
  40458b:	pop    es
  40458c:	call   0x1f384187
  404591:	pop    es
  404592:	xchg   esp,eax
  404593:	test   eax,0xa2f09ad9
  404598:	push   cs
  404599:	and    bl,ch
  40459b:	jecxz  0x404619
  40459d:	lods   eax,DWORD PTR ds:[esi]
  40459e:	mov    bl,0x24
  4045a0:	mov    WORD PTR [esi+0x22],?
  4045a3:	push   edi
  4045a4:	or     eax,0x543e4354
  4045a9:	add    al,0x1b
  4045ab:	aam    0x61
  4045ad:	jbe    0x40462d
  4045af:	test   eax,0x1ac112b1
  4045b4:	stos   DWORD PTR es:[edi],eax
  4045b5:	aam    0x19
  4045b7:	js     0x404628
  4045b9:	ss xchg al,ch
  4045bc:	mov    dl,0x39
  4045be:	das    
  4045bf:	push   ebp
  4045c0:	jecxz  0x4045c8
  4045c2:	and    esp,DWORD PTR [edx-0x118a9dd2]
  4045c8:	xlat   BYTE PTR ds:[ebx]
  4045c9:	mov    bh,0xd7
  4045cb:	jnp    0x4045ab
  4045cd:	push   ebx
  4045ce:	jae    0x4045d0
  4045d0:	mov    es,WORD PTR [esi]
  4045d2:	repz mov ecx,DWORD PTR [ebx-0x62]
  4045d6:	mov    WORD PTR [eax+0x2e1066ce],cs
  4045dc:	pusha  
  4045dd:	jbe    0x4045bf
  4045df:	clc    
  4045e0:	pop    es
  4045e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e2:	mov    DWORD PTR [ecx+0x1a],eax
  4045e5:	retf   
  4045e6:	jmp    0x76fa:0xd57af4a9
  4045ed:	or     esp,DWORD PTR [edi-0x50]
  4045f0:	arpl   si,ax
  4045f2:	test   eax,0x83a25f09
  4045f7:	fisttp QWORD PTR [edx+0x41]
  4045fa:	mov    cl,0x2f
  4045fc:	mov    cl,BYTE PTR ds:0x4bff8db1
  404602:	xor    bh,BYTE PTR [ecx+0x938a07b]
  404608:	das    
  404609:	fisub  DWORD PTR [ecx+0x160946e5]
  40460f:	push   0xffffffea
  404611:	scas   eax,DWORD PTR es:[edi]
  404612:	inc    ebx
  404613:	sbb    esp,edi
  404615:	ss pop ecx
  404617:	push   0x25
  404619:	adc    cl,BYTE PTR [esi+0x5c876f21]
  40461f:	cwde   
  404620:	pop    ebp
  404621:	mov    al,BYTE PTR [eax]
  404623:	retf   
  404624:	or     DWORD PTR [ebx+0x70b1db32],esi
  40462a:	cmp    DWORD PTR [ebx+0x15],ebx
  40462d:	lea    esi,[ebp-0x80]
  404630:	pop    esi
  404631:	cs pop es
  404633:	hlt    
  404634:	sub    eax,0x517e5f43
  404639:	cld    
  40463a:	test   DWORD PTR ds:0x3c7494fb,ecx
  404640:	jg     0x404635
  404642:	loope  0x4045ec
  404644:	loope  0x4046ba
  404646:	pop    edx
  404647:	cmp    dh,BYTE PTR [ebx+0x53]
  40464a:	mov    esi,DWORD PTR [ecx+edx*8-0x3d]
  40464e:	test   DWORD PTR [eax-0x1b],ebp
  404651:	sbb    cl,BYTE PTR ds:0xfd55e1f4
  404657:	or     eax,0x96347836
  40465c:	into   
  40465d:	and    eax,DWORD PTR [eax+ebx*2-0x26]
  404661:	add    al,0x7d
  404663:	mov    bl,0xab
  404665:	cld    
  404666:	test   eax,0xe47eb02d
  40466b:	fisttp QWORD PTR [edx+ebp*8]
  40466e:	cli    
  40466f:	add    ebp,DWORD PTR [ecx-0x46]
  404672:	cmp    dl,0x85
  404675:	pushf  
  404676:	test   al,0x97
  404678:	int3   
  404679:	cwde   
  40467a:	into   
  40467b:	push   esi
  40467c:	inc    edi
  40467d:	pop    esp
  40467e:	adc    DWORD PTR [eax+eax*2-0x33660842],edi
  404685:	xlat   BYTE PTR ds:[ebx]
  404686:	adc    DWORD PTR [ebx+esi*4+0x3dda590e],edi
  40468d:	jns    0x4046db
  40468f:	mov    BYTE PTR [esp+edx*1-0x268c0c5e],bh
  404696:	test   BYTE PTR [eax],0x8a
  404699:	mov    al,ds:0x1f52788b
  40469e:	jne    0x404667
  4046a0:	mov    ?,esi
  4046a2:	jmp    0x71dc52cf
  4046a7:	in     al,0x8
  4046a9:	xchg   edx,eax
  4046aa:	pushaw 
  4046ac:	xlat   BYTE PTR ds:[ebx]
  4046ad:	pop    ss
  4046ae:	das    
  4046af:	xor    BYTE PTR [edi-0x579fee10],bh
  4046b5:	push   0x79
  4046b7:	popf   
  4046b8:	dec    ebx
  4046b9:	add    al,0xe
  4046bb:	xchg   DWORD PTR [eax],ebx
  4046bd:	es ret 
  4046bf:	inc    esp
  4046c0:	fcomip st,st(3)
  4046c2:	mov    ?,WORD PTR ds:0x9eb1c80f
  4046c8:	xchg   esp,eax
  4046c9:	mov    bh,0x35
  4046cb:	jmp    0xb1d63177
  4046d0:	push   ds
  4046d1:	fsubp  st(2),st
  4046d3:	add    eax,0x6e5f6c90
  4046d8:	jmp    0xd039d26a
  4046dd:	sbb    al,0xa8
  4046df:	mov    es,ecx
  4046e1:	and    al,0xb9
  4046e3:	pop    esi
  4046e4:	int    0x6b
  4046e6:	out    0x67,al
  4046e8:	xchg   edi,eax
  4046e9:	add    DWORD PTR [edi+eax*1+0x75],esi
  4046ed:	in     eax,dx
  4046ee:	jbe    0x404742
  4046f0:	mov    al,ds:0x23784bda
  4046f5:	mov    esp,edx
  4046f7:	nop    ebp
  4046fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046fb:	xchg   ecx,eax
  4046fc:	call   FWORD PTR [ebp-0x1f142d2d]
  404702:	inc    ebx
  404703:	sbb    eax,0xfe9dc812
  404708:	mov    cs,edi
  40470a:	arpl   WORD PTR [edx-0x5e234f32],bx
  404710:	mov    ds:0x9b688c77,al
  404715:	dec    esi
  404716:	xchg   BYTE PTR [ebp-0xc],dh
  404719:	add    ch,bh
  40471b:	xchg   BYTE PTR [edi+0x62],dl
  40471e:	pop    esi
  40471f:	fcomp  QWORD PTR cs:[ebp+0x471489ba]
  404726:	rcl    BYTE PTR [ebx-0x1d],1
  404729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40472a:	and    esp,ebp
  40472c:	aam    0xfd
  40472e:	or     DWORD PTR [ebx+0x5b],ebx
  404731:	in     eax,0x16
  404733:	and    al,0x10
  404735:	dec    edx
  404736:	xor    BYTE PTR gs:[ecx],bl
  404739:	scas   al,BYTE PTR es:[edi]
  40473a:	and    DWORD PTR [edi+0x4aa65784],esi
  404740:	xchg   edx,eax
  404741:	shr    DWORD PTR [ecx+0x31f018fa],cl
  404747:	data16 outs dx,BYTE PTR ds:[esi]
  404749:	jne    0x40472f
  40474b:	rep ins DWORD PTR es:[edi],dx
  40474d:	dec    esp
  40474e:	enter  0x7b5b,0x31
  404752:	push   ecx
  404753:	pop    ecx
  404754:	and    DWORD PTR [edi],edi
  404756:	lahf   
  404757:	mov    ds:0x461d1e12,al
  40475c:	mov    ds,ebp
  40475e:	je     0x40475a
  404760:	aad    0x4f
  404762:	sub    eax,0xc3516d9b
  404767:	into   
  404768:	jmp    0x4046f9
  40476a:	jg     0x4047b0
  40476c:	mov    eax,0x224d4f71
  404771:	test   al,0x6a
  404773:	stos   BYTE PTR es:[edi],al
  404774:	lock dec esp
  404776:	mov    ebx,0xbc5f2b8a
  40477b:	adc    BYTE PTR [edi+0x0],dl
  40477e:	and    BYTE PTR [eax-0x5c],dl
  404781:	dec    esi
  404782:	dec    di
  404784:	icebp  
  404785:	and    ebx,esi
  404787:	jp     0x404801
  404789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40478a:	call   0x8f0a:0x6f19d6b0
  404791:	jbe    0x40478d
  404793:	cmp    al,0xda
  404795:	adc    al,0xad
  404797:	jge    0x40479f
  404799:	shl    DWORD PTR [eax+esi*4+0x5b],0xb6
  40479e:	add    al,BYTE PTR [ecx]
  4047a0:	cli    
  4047a1:	into   
  4047a2:	mov    dh,0xb1
  4047a4:	dec    edx
  4047a5:	test   eax,0x1d456533
  4047aa:	and    cl,BYTE PTR [ecx+0x11]
  4047ad:	addr16 pop es
  4047af:	cmp    bh,BYTE PTR [esi]
  4047b1:	push   0xffffffe9
  4047b3:	adc    DWORD PTR [esi-0x5b],esp
  4047b6:	in     eax,dx
  4047b7:	sahf   
  4047b8:	adc    al,BYTE PTR [esi]
  4047ba:	cmp    dh,BYTE PTR [edi-0x5727da27]
  4047c0:	or     al,0x54
  4047c2:	test   eax,0xfb13a9c9
  4047c7:	push   cs
  4047c8:	sub    BYTE PTR [eax+0xc6c886],bl
  4047ce:	(bad)  
  4047cf:	jmp    0xa35b69e4
  4047d4:	sub    esp,DWORD PTR [esi]
  4047d6:	(bad)  
  4047d7:	into   
  4047d8:	adc    esp,ecx
  4047da:	inc    ecx
  4047db:	cmp    eax,0x844c4990
  4047e0:	or     bl,ch
  4047e2:	mov    eax,0x9a8218a6
  4047e7:	stc    
  4047e8:	push   esp
  4047e9:	ins    DWORD PTR es:[edi],dx
  4047ea:	jge    0x4047af
  4047ec:	jge    0x404779
  4047ee:	f2xm1  
  4047f0:	(bad)  
  4047f1:	mov    al,0x13
  4047f3:	aad    0x30
  4047f5:	fcomp  DWORD PTR [eax-0x21d6c4c3]
  4047fb:	test   BYTE PTR [edi-0x13],dl
  4047fe:	jp     0x404836
  404800:	ds jle 0x40484f
  404803:	movzx  esi,BYTE PTR [ebx-0x5ed71733]
  40480a:	lea    eax,[esi-0x28]
  40480d:	cmp    dh,al
  40480f:	scas   eax,DWORD PTR es:[edi]
  404810:	xor    esp,0x7a
  404813:	jg     0x4047c9
  404815:	jg     0x40483a
  404817:	sti    
  404818:	fbstp  TBYTE PTR [esi-0x52]
  40481b:	and    bl,BYTE PTR [ebx+0x1f]
  40481e:	mov    dh,0x6
  404820:	and    eax,0xfbf9fe5c
  404825:	mov    edi,0x1980f24a
  40482a:	adc    cl,BYTE PTR [ebp-0x5f]
  40482d:	retf   0x285e
  404830:	and    BYTE PTR [esi],0xbb
  404833:	push   esp
  404834:	add    eax,0x16c3d146
  404839:	(bad)  [eax+eiz*8-0x298045cc]
  404840:	xchg   BYTE PTR [ebx+0x23],dh
  404843:	dec    esp
  404844:	adc    al,0x2e
  404846:	mov    edi,0xd12086d
  40484b:	sbb    DWORD PTR [esp+edi*4],edx
  40484e:	ins    DWORD PTR es:[edi],dx
  40484f:	jns    0x404839
  404851:	(bad)  
  404852:	ss push esp
  404854:	(bad)  
  404855:	(bad)  
  404856:	aas    
  404857:	fisttp QWORD PTR [esi]
  404859:	inc    ecx
  40485a:	fnstsw WORD PTR [ebp-0x23]
  40485d:	jne    0x404834
  40485f:	push   ss
  404860:	mov    eax,0x79e10ebd
  404865:	das    
  404866:	and    eax,0x1d8fc763
  40486b:	mov    ebp,0x8e3da04
  404870:	adc    eax,0x28b8ff1
  404875:	or     DWORD PTR [ebp-0x2d],ebp
  404878:	fucomip st,st(7)
  40487a:	inc    edi
  40487b:	test   al,0xff
  40487d:	or     eax,0xf80d6f4d
  404882:	stos   BYTE PTR es:[edi],al
  404883:	jno    0x40487c
  404885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404886:	xor    eax,0x75714244
  40488b:	inc    edx
  40488c:	adc    BYTE PTR [esi+0x13fce431],ch
  404892:	rol    BYTE PTR [ebx],1
  404894:	pop    ebp
  404895:	jp     0x4048f2
  404897:	dec    ebx
  404898:	xor    DWORD PTR [eax],0x5ee3a434
  40489e:	inc    esi
  40489f:	int    0x23
  4048a1:	mov    esi,0xc57d60fe
  4048a6:	jge    0x4048d0
  4048a8:	jnp    0x4048d2
  4048aa:	(bad)  
  4048ab:	das    
  4048ac:	adc    ah,bl
  4048ae:	inc    ebx
  4048af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b0:	cmp    al,0xbb
  4048b2:	mov    ah,0xa1
  4048b4:	test   BYTE PTR [edx+ebp*8+0x173d4daa],0x43
  4048bc:	pop    ecx
  4048bd:	sub    bl,al
  4048bf:	mov    esp,0x8086d226
  4048c4:	test   al,0x63
  4048c6:	popa   
  4048c7:	xor    al,0x19
  4048c9:	int    0x43
  4048cb:	push   es
  4048cc:	pop    edx
  4048cd:	jmp    0x20dbeafd
  4048d2:	test   al,0xa5
  4048d4:	jg     0x40488a
  4048d6:	cwde   
  4048d7:	mov    ds:0xc60164a0,al
  4048dc:	push   es
  4048dd:	fild   WORD PTR [ecx+0x1ba35c64]
  4048e3:	gs inc esp
  4048e5:	pop    esi
  4048e6:	jg     0x404946
  4048e8:	nop
  4048e9:	adc    BYTE PTR [esi],0x8e
  4048ec:	loope  0x4048a1
  4048ee:	call   0xd03b:0xc603c133
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	adc    edx,ebp
  40491b:	add    ch,ah
  40491d:	ret    
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x40499c
  404926:	dec    esi
  404927:	sub    DWORD PTR [ebp+0x14],edx
  40492a:	push   ebp
  40492b:	test   DWORD PTR [eax-0x713a4c13],edx
  404931:	(bad)  
  404932:	in     eax,0xd9
  404934:	stc    
  404935:	fisub  WORD PTR [ebx-0xe86fa30]
  40493b:	sbb    ecx,eax
  40493d:	xor    BYTE PTR [eax+esi*4],cl
  404940:	leave  
  404941:	inc    ebx
  404942:	push   edx
  404943:	pop    ss
  404944:	xlat   BYTE PTR ds:[ebx]
  404945:	adc    ch,BYTE PTR [edx]
  404947:	rcl    DWORD PTR [edi],1
  404949:	lahf   
  40494a:	cmp    ebp,esp
  40494c:	not    DWORD PTR [edi]
  40494e:	dec    esi
  40494f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404950:	mov    al,0xcb
  404952:	pop    eax
  404953:	xor    ebp,DWORD PTR [eax-0x1e064e0a]
  404959:	mov    ah,0x66
  40495b:	pop    eax
  40495c:	push   0xa06a4be1
  404961:	or     al,0x37
  404963:	and    BYTE PTR [ebx],0x45
  404966:	push   ebp
  404967:	sub    ebp,eax
  404969:	pusha  
  40496a:	add    DWORD PTR [edi+ebx*1+0x75],esi
  40496e:	mov    bl,0xf
  404970:	add    al,BYTE PTR [ebp-0x7ac691e8]
  404976:	push   edx
  404977:	popa   
  404978:	jmp    0xf7d5cf22
  40497d:	xadd   DWORD PTR [eax],eax
  404980:	aam    0xde
  404982:	(bad)  
  404983:	push   eax
  404984:	imul   esp,DWORD PTR [edi+0x6c],0xcce880bb
  40498b:	mov    edi,0x48a98977
  404990:	xor    bl,bl
  404992:	fdivr  QWORD PTR [edi+edi*1-0x7398eedd]
  404999:	repnz mov cl,0x93
  40499c:	(bad)  
  40499d:	cmp    DWORD PTR [edi+0x3eddadac],esi
  4049a3:	jp     0x4049dc
  4049a5:	push   edx
  4049a6:	xchg   BYTE PTR [ebx+0x3b],dl
  4049a9:	push   ds
  4049aa:	mov    edi,0xd9de0534
  4049af:	dec    edi
  4049b0:	ror    DWORD PTR [edi+0x19],1
  4049b3:	jg     0x404a08
  4049b5:	fldenv [ebp+0x28b858d1]
  4049bb:	loopne 0x40495a
  4049bd:	push   esp
  4049be:	in     al,0x7a
  4049c0:	push   ebx
  4049c1:	sbb    eax,0x24396139
  4049c6:	xlat   BYTE PTR ds:[ebx]
  4049c7:	and    eax,0x9578b37b
  4049cc:	fmul   QWORD PTR [edx+0x67abbef1]
  4049d2:	lods   eax,DWORD PTR ds:[esi]
  4049d3:	inc    edx
  4049d4:	ins    BYTE PTR es:[edi],dx
  4049d5:	int    0xd9
  4049d7:	aaa    
  4049d8:	pushf  
  4049d9:	popa   
  4049da:	or     al,0x8
  4049dc:	test   al,0x16
  4049de:	loope  0x4049c7
  4049e0:	sub    al,0x59
  4049e2:	mov    al,0x23
  4049e4:	cwde   
  4049e5:	and    DWORD PTR [esp+esi*2+0x7],ecx
  4049e9:	mov    eax,ds:0xd449d040
  4049ee:	or     eax,0xb5cc0ea2
  4049f3:	jbe    0x404a1c
  4049f5:	xchg   esi,eax
  4049f6:	popa   
  4049f7:	sbb    esi,eax
  4049f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049fb:	adc    bl,BYTE PTR [ebx-0x19]
  4049fe:	in     eax,0x36
  404a00:	add    BYTE PTR [ecx],bl
  404a02:	inc    esp
  404a03:	cmp    al,0x74
  404a05:	mov    DWORD PTR [esp+edi*2+0x4a],edx
  404a09:	mov    esp,0x2f1d63dd
  404a0e:	jbe    0x404a85
  404a10:	test   esp,0x5b9b52fe
  404a16:	push   esp
  404a17:	mov    esp,0x547fb7e1
  404a1c:	jae    0x4049ea
  404a1e:	cmp    ebp,DWORD PTR [esi+0x8252d03]
  404a24:	stc    
  404a25:	mov    DWORD PTR [ecx+0x47],edx
  404a28:	cmp    ah,BYTE PTR ds:0x894e5e18
  404a2e:	nop
  404a2f:	outs   dx,BYTE PTR ds:[esi]
  404a30:	pop    es
  404a31:	lods   eax,DWORD PTR ds:[esi]
  404a32:	call   0x5f4af775
  404a37:	mov    bh,dl
  404a39:	arpl   sp,dx
  404a3b:	in     eax,0xe0
  404a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3e:	(bad)  
  404a3f:	pusha  
  404a40:	add    al,0x77
  404a42:	in     eax,dx
  404a43:	dec    edx
  404a44:	push   ebx
  404a45:	jmp    0xef878aca
  404a4a:	repz jb 0x4049fd
  404a4d:	add    eax,0x84860737
  404a52:	sbb    ah,BYTE PTR [ebx-0x11]
  404a55:	add    DWORD PTR [ebp+0x47],edx
  404a58:	push   edx
  404a59:	mov    eax,0xdfee4ca5
  404a5e:	test   eax,0xa772b3cd
  404a63:	mov    ds:0x5477408c,al
  404a68:	inc    esi
  404a69:	or     DWORD PTR [eax-0x51fbd727],ebx
  404a6f:	(bad)  
  404a70:	and    ch,ch
  404a72:	loope  0x404a94
  404a74:	out    0xbe,al
  404a76:	mov    ah,0xf8
  404a78:	out    dx,eax
  404a79:	rcl    BYTE PTR [esi-0x80],1
  404a7c:	adc    DWORD PTR [eax],ecx
  404a7e:	pusha  
  404a7f:	jbe    0x404ad9
  404a81:	xor    ebx,DWORD PTR [edx]
  404a83:	rol    cl,cl
  404a85:	jbe    0x404a2d
  404a87:	jno    0x404a0e
  404a89:	cmp    edi,DWORD PTR [ecx-0x50]
  404a8c:	ret    0x89ec
  404a8f:	neg    BYTE PTR [edi]
  404a91:	rol    bl,0x83
  404a94:	fwait
  404a95:	dec    esi
  404a96:	int    0xc
  404a98:	xor    bh,cl
  404a9a:	lock inc ebx
  404a9c:	mov    al,ds:0x69327add
  404aa1:	aam    0xc0
  404aa3:	ret    
  404aa4:	inc    edx
  404aa5:	imul   esp,DWORD PTR [ebp+0x71],0x14ff0050
  404aac:	jne    0x404a79
  404aae:	(bad)  
  404aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab0:	sub    eax,0x3d599791
  404ab5:	mov    esp,0x737df021
  404aba:	add    eax,0xce102385
  404abf:	scas   eax,DWORD PTR es:[edi]
  404ac0:	aad    0x9e
  404ac2:	pop    eax
  404ac3:	or     DWORD PTR [esi],esi
  404ac5:	shr    BYTE PTR [ebp-0x60],1
  404ac8:	into   
  404ac9:	or     DWORD PTR [ebx-0x6a],eax
  404acc:	mov    esp,ecx
  404ace:	xlat   BYTE PTR ds:[ebx]
  404acf:	ret    
  404ad0:	sbb    eax,DWORD PTR [edx+0x4]
  404ad3:	stc    
  404ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad5:	inc    edx
  404ad6:	in     al,dx
  404ad7:	mov    ebp,0x9ba1503b
  404adc:	and    al,0xae
  404ade:	sbb    al,0x96
  404ae0:	pop    ss
  404ae1:	mov    al,ds:0xc43b4f9b
  404ae6:	xchg   esi,eax
  404ae7:	in     al,0x6f
  404ae9:	dec    edx
  404aea:	(bad)  
  404aeb:	je     0x404b2d
  404aed:	shl    al,cl
  404aef:	stos   BYTE PTR es:[edi],al
  404af0:	dec    esp
  404af1:	(bad)  
  404af2:	xlat   BYTE PTR ds:[ebx]
  404af3:	sbb    eax,DWORD PTR [edx]
  404af5:	sahf   
  404af6:	je     0x404b28
  404af8:	add    esi,DWORD PTR [ebx-0x5c]
  404afb:	mov    eax,ds:0x541adc1e
  404b00:	adc    al,0x5f
  404b02:	icebp  
  404b03:	div    eax
  404b05:	ja     0x404b64
  404b07:	jns    0x404b85
  404b09:	out    0xa3,eax
  404b0b:	dec    ecx
  404b0c:	dec    edi
  404b0d:	cmp    bl,BYTE PTR [ecx+0x4e]
  404b10:	fs push cs
  404b12:	adc    dl,BYTE PTR [ecx+0x25aac893]
  404b18:	out    dx,eax
  404b19:	and    eax,0xbc5b6fae
  404b1e:	push   esi
  404b1f:	pop    edi
  404b20:	aaa    
  404b21:	sti    
  404b22:	inc    edx
  404b23:	das    
  404b24:	jmp    0x6e67:0x18dafc83
  404b2b:	xor    bh,BYTE PTR [ecx-0x2e]
  404b2e:	cs jmp 0x9274:0xd12a
  404b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b36:	sbb    DWORD PTR [esi+0x2a],ecx
  404b39:	out    0x67,eax
  404b3b:	mov    esi,0xfde344c8
  404b40:	cmp    DWORD PTR [eax],ebp
  404b42:	or     al,0xd2
  404b44:	shl    DWORD PTR [edx+eiz*4-0x39],cl
  404b48:	and    al,0x46
  404b4a:	inc    edi
  404b4b:	inc    ecx
  404b4c:	add    dh,ch
  404b4e:	dec    eax
  404b4f:	mov    esp,0x9a453745
  404b54:	lock adc eax,0x52db1f35
  404b5a:	xchg   ebx,eax
  404b5b:	shl    BYTE PTR [ecx+0x1a],0x10
  404b5f:	loope  0x404aea
  404b61:	jbe    0x404ae9
  404b63:	leave  
  404b64:	into   
  404b65:	popf   
  404b66:	je     0x404b4c
  404b68:	or     al,0xbc
  404b6a:	scas   al,BYTE PTR es:[edi]
  404b6b:	mov    edx,esp
  404b6d:	xchg   edi,eax
  404b6e:	adc    eax,eax
  404b70:	out    0x77,al
  404b72:	sub    dh,bl
  404b74:	mov    bh,cl
  404b76:	sub    ebx,eax
  404b78:	add    bl,BYTE PTR [edx]
  404b7a:	add    ah,BYTE PTR [eax-0x6657e358]
  404b80:	addr16 out dx,al
  404b82:	xchg   edi,eax
  404b83:	pop    edi
  404b84:	push   cs
  404b85:	jne    0x404ba3
  404b87:	and    edx,DWORD PTR [edi+0x18]
  404b8a:	add    DWORD PTR [edi],ecx
  404b8c:	adc    BYTE PTR [eax+eiz*2],0x24
  404b90:	add    al,0x57
  404b92:	fsubr  QWORD PTR [ecx-0x5d1c8a0]
  404b98:	mov    ecx,0xba51954f
  404b9d:	cld    
  404b9e:	or     BYTE PTR [ecx-0x6e62458d],ch
  404ba4:	jns    0x404bd9
  404ba6:	bound  ebx,QWORD PTR [ecx]
  404ba8:	loopne 0x404bf2
  404baa:	mov    eax,ds:0x9df58fe0
  404baf:	mov    edx,0x46d66d7e
  404bb4:	cli    
  404bb5:	mov    esi,0x461e8236
  404bba:	dec    esi
  404bbb:	rol    BYTE PTR [edx+ecx*2-0x45],0xea
  404bc0:	or     esi,edx
  404bc2:	(bad)  
  404bc3:	xlat   BYTE PTR ds:[ebx]
  404bc4:	mov    cl,0xe0
  404bc6:	cmp    dl,dh
  404bc8:	popa   
  404bc9:	mov    esp,0x140c3116
  404bce:	mov    BYTE PTR [esi],0x79
  404bd1:	pop    ds
  404bd2:	inc    ebp
  404bd3:	or     eax,0x2276f2a0
  404bd8:	aam    0x9a
  404bda:	jge    0x404c0b
  404bdc:	arpl   si,bp
  404bde:	xor    bh,BYTE PTR [esi]
  404be0:	aad    0x90
  404be2:	mov    ebx,0xafd2fa2e
  404be7:	es adc al,0x22
  404bea:	lods   eax,DWORD PTR ds:[esi]
  404beb:	in     al,dx
  404bec:	or     BYTE PTR [ecx],dl
  404bee:	cli    
  404bef:	push   edx
  404bf0:	and    eax,0x1e1f6456
  404bf5:	inc    esp
  404bf6:	pop    edi
  404bf7:	dec    edi
  404bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf9:	ror    al,1
  404bfb:	loopne 0x404baa
  404bfd:	dec    edi
  404bfe:	and    BYTE PTR [ebp+edi*8-0x1c],dh
  404c02:	inc    eax
  404c03:	and    esi,edi
  404c05:	fisub  DWORD PTR [eax+ebp*2]
  404c08:	xchg   DWORD PTR [edx+0x42],edx
  404c0b:	(bad)
  404c0e:	aad    0x1
  404c10:	scas   al,BYTE PTR es:[edi]
  404c11:	jmp    0x404c4b
  404c13:	sar    DWORD PTR [edx],cl
  404c15:	inc    ebp
  404c16:	into   
  404c17:	fisttp WORD PTR [ebp+eax*8-0x28c3ae0d]
  404c1e:	adc    DWORD PTR [edx+0x3c58fdf0],ecx
  404c24:	stos   DWORD PTR es:[edi],eax
  404c25:	popa   
  404c26:	sbb    eax,0x31921f74
  404c2b:	add    al,0xd5
  404c2d:	xor    DWORD PTR [edx+0x64],ebx
  404c30:	mov    ch,0x82
  404c32:	xchg   ebx,eax
  404c33:	ficomp WORD PTR [esi+0x11]
  404c36:	ds dec esp
  404c38:	shl    DWORD PTR [ecx],0x81
  404c3b:	mov    cl,0xf
  404c3d:	aas    
  404c3e:	mov    ecx,0xeda9111c
  404c43:	aas    
  404c44:	aas    
  404c45:	call   0x5707:0xa628b839
  404c4c:	jnp    0x404cc0
  404c4e:	sbb    ch,bh
  404c50:	adc    al,0xe3
  404c52:	aad    0x23
  404c54:	add    DWORD PTR cs:[ecx+esi*4+0x76407627],edx
  404c5c:	push   cs
  404c5d:	push   ss
  404c5e:	hlt    
  404c5f:	push   cs
  404c60:	push   cs
  404c61:	(bad)  
  404c62:	jno    0x404c7a
  404c64:	push   ecx
  404c65:	jg     0x404c5d
  404c67:	cmp    bl,dl
  404c69:	dec    edi
  404c6b:	cli    
  404c6c:	mul    DWORD PTR [edi+0xb]
  404c6f:	mov    al,ds:0x979cca3b
  404c74:	cdq    
  404c75:	loope  0x404c4b
  404c77:	clc    
  404c78:	int3   
  404c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7a:	mov    edi,0xfb7292b4
  404c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c80:	mov    ebp,0x1a0988db
  404c85:	pop    edi
  404c86:	sub    BYTE PTR [edx],dl
  404c88:	cmp    bh,bl
  404c8a:	lahf   
  404c8b:	inc    edi
  404c8c:	jne    0x404cb8
  404c8e:	nop
  404c8f:	out    dx,al
  404c90:	nop
  404c91:	lods   al,BYTE PTR ds:[esi]
  404c92:	xchg   edi,eax
  404c93:	test   eax,0x7d872e7f
  404c98:	jo     0x404cac
  404c9a:	cmp    al,dl
  404c9c:	ja     0x404cbb
  404c9e:	retf   
  404c9f:	adc    bl,BYTE PTR [ebx]
  404ca1:	ror    BYTE PTR [edx],1
  404ca3:	dec    ebp
  404ca4:	iret   
  404ca5:	fnstenv [ebx]
  404ca7:	adc    al,BYTE PTR [edi-0x6]
  404caa:	inc    edx
  404cab:	ficom  DWORD PTR [ebp+0x66]
  404cae:	mov    dl,0x82
  404cb0:	mov    ebx,0x165a274f
  404cb5:	loopne 0x404cc9
  404cb7:	mov    BYTE PTR [ebx-0x6562a02],cl
  404cbd:	xlat   BYTE PTR ds:[ebx]
  404cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cbf:	in     eax,dx
  404cc0:	(bad)  
  404cc1:	out    0xad,eax
  404cc3:	jae    0x404cc7
  404cc5:	push   cs
  404cc6:	add    DWORD PTR [ecx],eax
  404cc8:	jnp    0x404c94
  404cca:	pushf  
  404ccb:	pop    esi
  404ccc:	dec    edi
  404ccd:	(bad)  
  404cce:	cmp    esp,eax
  404cd0:	fld1   
  404cd2:	in     al,dx
  404cd3:	retf   0xe887
  404cd6:	inc    edi
  404cd7:	adc    ax,0xd49d
  404cdb:	push   cs
  404cdc:	ins    BYTE PTR es:[edi],dx
  404cdd:	aas    
  404cde:	sbb    ch,BYTE PTR cs:[ebx]
  404ce1:	adc    DWORD PTR [eax+0x53],0x72c6be41
  404ce8:	sbb    BYTE PTR [ebx],0x84
  404ceb:	fild   QWORD PTR [eax+0x4771cd77]
  404cf1:	xchg   edx,ebp
  404cf3:	rcl    BYTE PTR ds:0x67ed0acb,0x70
  404cfa:	jp     0x404d5b
  404cfc:	mov    cs,WORD PTR [ebx+0x81ec45]
  404d02:	mov    edx,?
  404d04:	add    eax,0xf0458b07
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x5aa7d7b
  404d49:	addr16 inc ebp
  404d4b:	adc    DWORD PTR [ebx],ebx
  404d4d:	das    
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404db7
  404d55:	fadd   QWORD PTR [esp+eiz*8]
  404d58:	shl    al,0xde
  404d5b:	cmp    eax,0x7fdd4300
  404d60:	ret    
  404d61:	pop    ebx
  404d62:	dec    ebp
  404d63:	sub    esp,ebp
  404d65:	je     0x404dd1
  404d67:	pop    es
  404d68:	in     al,0x7f
  404d6a:	loope  0x404d90
  404d6c:	mov    bh,0xc0
  404d6e:	(bad)  
  404d6f:	xlat   BYTE PTR ds:[ebx]
  404d70:	popf   
  404d71:	mov    ebp,0x9afe8e88
  404d76:	mov    bl,ch
  404d78:	xchg   ecx,eax
  404d79:	cld    
  404d7a:	cs inc eax
  404d7c:	clc    
  404d7d:	mov    ebp,0x5335628f
  404d82:	add    BYTE PTR [ecx+0x3e],dl
  404d85:	mov    DWORD PTR [ebp-0x71],ecx
  404d88:	mov    dl,BYTE PTR [edi+ebp*8+0x14c72890]
  404d8f:	aaa    
  404d90:	dec    eax
  404d91:	call   0x871e2396
  404d96:	dec    edx
  404d97:	fcom   QWORD PTR [esi-0x46113d2]
  404d9d:	xchg   esi,eax
  404d9e:	ins    DWORD PTR es:[edi],dx
  404d9f:	das    
  404da0:	sub    eax,0x3d921ba0
  404da5:	in     eax,dx
  404da6:	pop    edx
  404da7:	scas   eax,DWORD PTR es:[edi]
  404da8:	stc    
  404da9:	xchg   esp,eax
  404daa:	sub    BYTE PTR [edi-0x14b64a1e],al
  404db0:	je     0x404dc3
  404db2:	lods   al,BYTE PTR ds:[esi]
  404db3:	xchg   ebp,eax
  404db4:	xor    dl,cl
  404db6:	inc    edi
  404db7:	mov    ebp,0x44223dca
  404dbc:	adc    al,0x79
  404dbe:	sub    esp,DWORD PTR [eax-0x2d6129d0]
  404dc4:	sub    dl,BYTE PTR [eax-0x51b577c7]
  404dca:	jle    0x404d76
  404dcc:	mov    eax,0x2d0c8ce4
  404dd1:	jo     0x404d88
  404dd3:	sub    eax,0x3a5d350c
  404dd8:	cmp    edi,ecx
  404dda:	test   eax,0x2568ea99
  404ddf:	sub    ch,BYTE PTR [ebx+0x46]
  404de2:	rcl    BYTE PTR [edx+0x6d],0x15
  404de6:	cmp    cl,BYTE PTR [ebx]
  404de8:	push   esp
  404de9:	dec    edi
  404dea:	int    0x2d
  404dec:	out    0xc0,eax
  404dee:	mov    DWORD PTR [edx],ebp
  404df0:	inc    esp
  404df1:	arpl   WORD PTR [edi-0x5e],dx
  404df4:	or     al,al
  404df6:	std    
  404df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404df8:	push   eax
  404df9:	push   edx
  404dfa:	iret   
  404dfb:	ins    DWORD PTR es:[edi],dx
  404dfc:	imul   DWORD PTR [eax]
  404dfe:	call   0x2464cf3e
  404e03:	and    bl,dl
  404e05:	jnp    0x404db8
  404e07:	repnz in al,dx
  404e09:	or     eax,0xbd582429
  404e0e:	int3   
  404e0f:	push   edi
  404e10:	jno    0x404db4
  404e12:	loopne 0x404e73
  404e14:	xchg   edx,eax
  404e15:	xor    BYTE PTR [ecx+0x69],ah
  404e18:	cpuid  
  404e1a:	sub    eax,0x71ac28f0
  404e1f:	iret   
  404e20:	jo     0x404e14
  404e22:	sbb    al,0xaa
  404e24:	shl    BYTE PTR [eax-0x40],1
  404e27:	aaa    
  404e28:	clc    
  404e29:	jns    0x404dd8
  404e2b:	mov    dl,0xde
  404e2d:	mov    ds:0x89d47bdc,al
  404e32:	out    0xd7,al
  404e34:	or     eax,0xbaeb4aa7
  404e39:	aas    
  404e3a:	mov    eax,0x90952955
  404e3f:	xchg   edi,eax
  404e40:	ror    ch,cl
  404e42:	(bad)  
  404e44:	mov    ecx,0x629e6a14
  404e49:	adc    dh,cl
  404e4b:	xor    eax,0x1de71dcf
  404e50:	aaa    
  404e51:	out    dx,eax
  404e52:	mov    cl,0xe2
  404e54:	repz pop es
  404e56:	mov    WORD PTR [ebp-0x5b],gs
  404e59:	or     DWORD PTR [ebx+eax*2],ebx
  404e5c:	fiadd  WORD PTR [edi]
  404e5e:	push   eax
  404e5f:	cdq    
  404e60:	in     al,0xcb
  404e62:	dec    ecx
  404e63:	hlt    
  404e64:	pop    es
  404e65:	mov    ebp,DWORD PTR [eax-0x4958de9]
  404e6b:	imul   edi,DWORD PTR [esi],0x71
  404e6e:	lock fnstcw WORD PTR [ecx]
  404e71:	hlt    
  404e72:	xor    ebx,DWORD PTR [esi-0x6ac304c6]
  404e78:	jo     0x404e2c
  404e7a:	std    
  404e7b:	jb     0x404e08
  404e7d:	jbe    0x404ec8
  404e7f:	jge    0x404e98
  404e81:	loope  0x404e16
  404e83:	pop    ss
  404e84:	scas   eax,DWORD PTR es:[edi]
  404e85:	add    edx,DWORD PTR es:[edi+0x177f7d8e]
  404e8c:	lods   eax,DWORD PTR ds:[esi]
  404e8d:	pop    edx
  404e8e:	popf   
  404e8f:	addr16 (bad) 
  404e91:	sbb    DWORD PTR [eax+0x27],ecx
  404e94:	xor    BYTE PTR [edi-0x74f0b6cb],dl
  404e9a:	call   0x274bf37d
  404e9f:	mov    DWORD PTR [eax+0x64],esi
  404ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea3:	sbb    BYTE PTR [ebp+0x3a],al
  404ea6:	pop    esi
  404ea7:	aaa    
  404ea8:	mov    DWORD PTR [ebx],ecx
  404eaa:	pop    ecx
  404eab:	inc    ebp
  404eac:	inc    eax
  404ead:	rcl    esp,0x90
  404eb0:	xor    al,0xd7
  404eb2:	xchg   edi,eax
  404eb3:	imul   eax,edi,0x1f7ce7ee
  404eb9:	jo     0x404eea
  404ebb:	imul   ebx,DWORD PTR [edx-0x45c13d2a],0x3016efc2
  404ec5:	ja     0x404e70
  404ec7:	or     DWORD PTR [ecx-0x40],ebx
  404eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ecb:	nop
  404ecc:	cmp    edi,edi
  404ece:	gs pop ss
  404ed0:	mov    ax,0xdd18
  404ed4:	clc    
  404ed5:	xchg   ebx,esi
  404ed7:	lods   eax,DWORD PTR ds:[esi]
  404ed8:	retf   
  404ed9:	pop    ss
  404eda:	push   esp
  404edb:	fld    TBYTE PTR [edi-0x75e266f8]
  404ee1:	ins    BYTE PTR es:[edi],dx
  404ee2:	dec    eax
  404ee3:	arpl   WORD PTR [edi-0x2],ax
  404ee6:	pop    edi
  404ee7:	mov    eax,0x9446c57d
  404eec:	cmp    al,0x4d
  404eee:	xor    al,0x73
  404ef0:	gs in  eax,dx
  404ef2:	jns    0x404f00
  404ef4:	sub    dh,BYTE PTR [ecx-0x5e]
  404ef7:	data16 das 
  404ef9:	xor    DWORD PTR [esi+eax*1+0x609a3c4b],esi
  404f00:	lods   al,BYTE PTR ds:[esi]
  404f01:	xchg   esi,eax
  404f02:	jne    0x404e97
  404f04:	add    al,0xa4
  404f06:	add    eax,0x11385982
  404f0b:	(bad)  
  404f0d:	stos   BYTE PTR es:[edi],al
  404f0e:	sbb    eax,0xddca90a9
  404f13:	xchg   edx,eax
  404f14:	jmp    0x404f7e
  404f16:	aas    
  404f17:	icebp  
  404f18:	bound  edx,QWORD PTR [ebx+0x3f062330]
  404f1e:	(bad)  
  404f1f:	adc    BYTE PTR [ebp+0x3125bf6a],ch
  404f25:	or     ah,bl
  404f27:	xchg   esi,eax
  404f28:	(bad)  
  404f29:	cld    
  404f2a:	cld    
  404f2b:	push   esp
  404f2c:	sub    ebp,DWORD PTR [esi+0x5e]
  404f2f:	hlt    
  404f30:	xchg   edi,eax
  404f31:	xor    cl,BYTE PTR [ecx+0x19]
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x4345fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43468b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43468b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43468b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43468b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43468b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4345f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434693,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434693
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434693,edx
  404fbc:	cmp    DWORD PTR ds:0x434693,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434849
  404fce:	push   0x4347ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434693,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434637
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434637,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	jle    0x4050c4
  405051:	sbb    al,0x23
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x405074
  40505c:	fmul   st(1),st
  40505e:	cld    
  40505f:	and    ah,BYTE PTR [edi]
  405061:	test   eax,0x1ef4d2af
  405066:	leave  
  405067:	je     0x405053
  405069:	mov    BYTE PTR [esi+0x42],bl
  40506c:	mov    dh,0x50
  40506e:	sbb    edi,DWORD PTR [edi-0x26]
  405071:	popf   
  405072:	adc    eax,0x183c63b4
  405077:	inc    eax
  405078:	in     eax,0xe3
  40507a:	xor    al,0xdb
  40507c:	push   ebx
  40507d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40507e:	pop    ds
  40507f:	jae    0x405055
  405081:	mov    DWORD PTR [esi+esi*4-0x4a],ebx
  405085:	out    dx,eax
  405086:	in     al,dx
  405087:	pop    ss
  405088:	mov    edx,0x60f93f0d
  40508d:	leave  
  40508e:	pop    eax
  40508f:	sub    esp,0xfffffffd
  405092:	stos   BYTE PTR es:[edi],al
  405093:	nop
  405094:	xchg   esi,eax
  405095:	and    DWORD PTR [edi],edi
  405097:	out    dx,eax
  405098:	scas   al,BYTE PTR es:[edi]
  405099:	aad    0xd3
  40509b:	push   cs
  40509c:	leave  
  40509d:	cmp    dh,BYTE PTR [ecx+edi*2+0x65]
  4050a1:	bound  eax,QWORD PTR [edi-0x12f3c1d8]
  4050a7:	xor    bh,BYTE PTR [ecx+0x70202688]
  4050ad:	outs   dx,DWORD PTR ds:[esi]
  4050ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050af:	in     eax,dx
  4050b0:	mov    bl,0xb6
  4050b2:	call   0xcaba:0x285ec8c0
  4050b9:	adc    DWORD PTR [edi+0x63],0xfffffff7
  4050bd:	inc    esi
  4050be:	fisttp WORD PTR [edi-0x7891f466]
  4050c4:	push   ebx
  4050c5:	cli    
  4050c6:	add    eax,0x459cbb23
  4050cb:	add    DWORD PTR [ecx+esi*2-0x1b590eb7],ecx
  4050d2:	mov    eax,DWORD PTR [ecx]
  4050d4:	sub    DWORD PTR [edi],esi
  4050d6:	addr16 mov bl,0x47
  4050d9:	sub    al,0x6
  4050db:	and    dh,BYTE PTR [edi+0x77]
  4050de:	repz jae 0x4050c3
  4050e1:	pop    ecx
  4050e2:	and    al,0x7a
  4050e4:	pop    ebx
  4050e5:	push   esi
  4050e6:	icebp  
  4050e7:	cdq    
  4050e8:	mov    ecx,0xdc9344a1
  4050ed:	call   0xa5fc:0xc3d3b6f1
  4050f4:	dec    esi
  4050f5:	mov    ch,0x6f
  4050f7:	stc    
  4050f8:	push   esp
  4050f9:	cmp    ch,cl
  4050fb:	push   0xffffffac
  4050fd:	pop    ecx
  4050fe:	pushf  
  4050ff:	xlat   BYTE PTR ds:[ebx]
  405100:	lods   eax,DWORD PTR ds:[esi]
  405101:	cmp    eax,DWORD PTR [ecx-0x62]
  405104:	add    DWORD PTR [esi+esi*1],edx
  405107:	sub    al,0xdb
  405109:	hlt    
  40510a:	scas   al,BYTE PTR es:[edi]
  40510b:	lods   eax,DWORD PTR ds:[esi]
  40510c:	ds jns 0x405136
  40510f:	inc    edi
  405110:	fdiv   QWORD PTR [ebp-0x2f]
  405113:	imul   ebx,ebp,0xb65571c7
  405119:	(bad)  
  40511b:	pop    eax
  40511c:	retf   0xbb65
  40511f:	inc    eax
  405120:	(bad)  
  405122:	cwde   
  405123:	lahf   
  405124:	mov    ds:0x8101a784,al
  405129:	pusha  
  40512a:	fbld   TBYTE PTR [ebx]
  40512c:	adc    BYTE PTR ds:0x995ff374,0xd3
  405133:	stos   DWORD PTR es:[edi],eax
  405134:	adc    cl,dh
  405136:	adc    BYTE PTR [ecx],bh
  405138:	cmp    ebx,ebp
  40513a:	mov    esp,0x335a2a45
  40513f:	mov    cl,0x8e
  405142:	cmp    BYTE PTR [eax],0x8
  405145:	cmp    eax,0xcf1c7be9
  40514a:	int    0xe9
  40514c:	cmp    BYTE PTR [esp+eiz*2],0x36
  405150:	or     eax,0x92dda1cc
  405155:	cmp    DWORD PTR [edi+0x1bfb9d04],esp
  40515b:	jmp    FWORD PTR [ebp-0xad5aa05]
  405161:	fist   DWORD PTR [eax+ebp*2+0x78e9eaf5]
  405168:	test   BYTE PTR [edi+0x4685ed40],0x25
  40516f:	int3   
  405170:	imul   ebx,DWORD PTR [esi+0x26],0x25fd08de
  405177:	sti    
  405178:	jne    0x4051ae
  40517a:	xor    al,0x6f
  40517c:	jge    0x40515a
  40517e:	mov    dh,0x73
  405180:	rol    BYTE PTR [ebp+0x2f3d81f8],1
  405186:	mov    dl,0x82
  405188:	adc    edx,DWORD PTR [eax-0x59]
  40518b:	clc    
  40518c:	mov    cl,0x36
  40518e:	push   ax
  405190:	btr    DWORD PTR [eax-0x62],esp
  405194:	jle    0x405170
  405196:	add    BYTE PTR ds:0xe099e8fe,al
  40519c:	xchg   edx,eax
  40519d:	mov    bl,0x2a
  40519f:	jae    0x4051dd
  4051a1:	out    0x47,eax
  4051a3:	mov    ah,0xa2
  4051a5:	(bad)  
  4051a6:	(bad)  
  4051a7:	jg     0x4051ef
  4051a9:	mov    ch,0xb1
  4051ab:	and    BYTE PTR [eax-0x25ca70ac],bh
  4051b1:	inc    edx
  4051b2:	mov    ds:0x90c627ea,al
  4051b7:	adc    eax,0x20773a19
  4051bc:	pop    es
  4051bd:	mov    cl,0x4
  4051bf:	daa    
  4051c0:	hlt    
  4051c1:	cmp    BYTE PTR [ebx-0x2d],0x32
  4051c5:	jmp    0x405151
  4051c7:	add    al,bh
  4051c9:	lods   al,BYTE PTR ds:[esi]
  4051ca:	mov    dh,0x61
  4051cc:	jno    0x405216
  4051ce:	cs ja  0x4051f3
  4051d1:	dec    eax
  4051d2:	std    
  4051d3:	sbb    ch,BYTE PTR [ebx-0x1daef8f3]
  4051d9:	xchg   edx,eax
  4051da:	shl    DWORD PTR [edi],1
  4051dc:	stos   BYTE PTR es:[edi],al
  4051dd:	or     al,0xb6
  4051df:	push   0x15
  4051e1:	dec    ebx
  4051e2:	jne    0x40525c
  4051e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051e5:	add    al,0x28
  4051e7:	pop    ebx
  4051e8:	shl    DWORD PTR [esi-0x77],0x91
  4051ec:	mov    dh,0x60
  4051ee:	or     ebx,DWORD PTR [edx]
  4051f0:	leave  
  4051f1:	sub    ch,al
  4051f3:	out    dx,al
  4051f4:	sahf   
  4051f5:	xchg   edx,eax
  4051f6:	add    dl,al
  4051f8:	pusha  
  4051f9:	mov    eax,0x52b9e958
  4051fe:	popf   
  4051ff:	and    eax,0x1feb6417
  405204:	push   edi
  405205:	lds    ebp,FWORD PTR [ebp-0x4041fa]
  40520b:	mov    al,ds:0x5256a265
  405210:	rcr    BYTE PTR [eax+0x4fe3b56b],cl
  405216:	sbb    al,0xeb
  405218:	add    al,0xe0
  40521a:	in     eax,dx
  40521b:	mov    bh,0x1c
  40521d:	imul   esi,DWORD PTR [eax+edi*4+0x48],0xf78b4c6f
  405225:	push   ds
  405226:	stos   DWORD PTR es:[edi],eax
  405227:	jle    0x405292
  405229:	out    0x4,eax
  40522b:	outs   dx,DWORD PTR ds:[esi]
  40522c:	xchg   esp,eax
  40522d:	std    
  40522e:	inc    esi
  40522f:	test   DWORD PTR [esi-0x52],esp
  405232:	xlat   BYTE PTR ds:[ebx]
  405233:	dec    esi
  405234:	cmc    
  405235:	mov    cl,0xd3
  405237:	cmp    BYTE PTR [eax],dh
  405239:	cwde   
  40523a:	dec    BYTE PTR [ecx+0x458b0c45]
  405240:	cld    
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x26237e39
  40528d:	dec    ebp
  40528e:	pop    ebx
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x405291
  405297:	or     dh,BYTE PTR [eax-0x3706426e]
  40529d:	pop    ecx
  40529e:	arpl   bx,si
  4052a0:	lods   al,BYTE PTR ds:[esi]
  4052a1:	jo     0x405268
  4052a3:	sbb    dh,bh
  4052a5:	and    WORD PTR [eax],sp
  4052a8:	arpl   WORD PTR [eax+0x3d],si
  4052ab:	hlt    
  4052ac:	mov    dh,0xfa
  4052ae:	xchg   BYTE PTR [edx],cl
  4052b0:	daa    
  4052b1:	sub    al,0x34
  4052b3:	outs   dx,BYTE PTR ds:[esi]
  4052b4:	jns    0x405278
  4052b6:	push   edx
  4052b7:	test   al,0xbb
  4052b9:	mov    ecx,DWORD PTR [eax+0x74657add]
  4052bf:	pop    es
  4052c0:	in     al,0x47
  4052c2:	xor    eax,0x88deaa6e
  4052c7:	adc    eax,DWORD PTR [edx-0x16f5a5ad]
  4052cd:	int    0x50
  4052cf:	test   BYTE PTR [edx+0x74ee2a99],bh
  4052d5:	sub    bl,dl
  4052d7:	xchg   DWORD PTR [ebx-0x35],edx
  4052da:	call   FWORD PTR [ebp-0x9]
  4052dd:	in     eax,dx
  4052de:	mov    ds:0x2068ddee,al
  4052e3:	pusha  
  4052e4:	mov    esp,0xa38b0ca
  4052e9:	sub    al,0xe9
  4052eb:	mov    esp,0xd134abac
  4052f0:	jmp    0x1985:0x2fabfc39
  4052f7:	or     BYTE PTR [edx+ecx*2-0x46abdd0b],bh
  4052fe:	daa    
  4052ff:	pop    eax
  405300:	cmp    cl,al
  405302:	fxch   st(6)
  405304:	or     DWORD PTR ds:0x70ae2442,esp
  40530a:	mov    eax,ds:0x80ec40f0
  40530f:	sti    
  405310:	and    DWORD PTR [ebp-0x1],0x519ca033
  405317:	std    
  405318:	add    al,BYTE PTR [ebp+0x42501a65]
  40531e:	mov    DWORD PTR [esi+0x76f70458],0x37494edb
  405328:	lahf   
  405329:	cmp    BYTE PTR es:[ebp-0x4],ah
  40532d:	call   0x71aa:0xf4002363
  405334:	pop    ecx
  405335:	cli    
  405336:	cwde   
  405337:	add    bh,BYTE PTR [edi]
  405339:	xchg   edx,eax
  40533a:	rcl    DWORD PTR [esi],0xe8
  40533d:	pop    eax
  40533e:	xchg   esp,eax
  40533f:	pop    esi
  405340:	aas    
  405341:	popf   
  405342:	pop    ebx
  405343:	(bad)  
  405344:	bound  ebp,QWORD PTR [eax]
  405346:	xlat   BYTE PTR ds:[ebx]
  405348:	lods   eax,DWORD PTR ds:[esi]
  405349:	cli    
  40534a:	mov    ah,0x9b
  40534c:	xor    ah,BYTE PTR [ebx+0x73]
  40534f:	(bad)  
  405351:	enter  0x125,0x43
  405355:	cli    
  405356:	mov    ds:0x1780e263,eax
  40535b:	clc    
  40535c:	mov    eax,ds:0x120c8bd1
  405361:	and    dl,BYTE PTR ds:[ebp+0x235f1e6]
  405368:	stc    
  405369:	mov    edi,0x39606bb3
  40536e:	leave  
  40536f:	pop    ss
  405370:	mov    esp,0xd0b42e23
  405375:	add    eax,0x4c9de261
  40537a:	repz dec ebx
  40537c:	push   edx
  40537d:	clc    
  40537e:	clc    
  40537f:	inc    esi
  405380:	cwde   
  405381:	push   ecx
  405382:	lock dec esi
  405384:	in     eax,0x20
  405386:	dec    ebx
  405387:	loop   0x405368
  405389:	push   ds
  40538a:	sbb    bl,dh
  40538c:	mov    esi,0xfb81a12c
  405391:	sub    BYTE PTR [esi+esi*4+0x73],al
  405395:	mov    gs,esp
  405397:	cmp    BYTE PTR [ecx-0xfdae7c9],bh
  40539d:	test   al,cl
  40539f:	les    edx,FWORD PTR [edx-0x6b]
  4053a2:	outs   dx,DWORD PTR ds:[esi]
  4053a3:	rcr    BYTE PTR [esi-0x601b0ece],cl
  4053a9:	jnp    0x4053c5
  4053ab:	xchg   DWORD PTR [edx+0x6c0ed9e8],edi
  4053b1:	mov    ebx,0xddd18cdb
  4053b6:	stc    
  4053b7:	fstp   DWORD PTR [ecx-0x6c7dfe3b]
  4053bd:	outs   dx,BYTE PTR ds:[esi]
  4053be:	push   esi
  4053bf:	pop    esi
  4053c0:	imul   ecx,DWORD PTR [ebp+0x56],0x8ab48103
  4053c7:	ror    DWORD PTR [eax-0x67ff5d9b],1
  4053cd:	or     eax,0xe189c6ff
  4053d2:	or     dh,ah
  4053d4:	cwde   
  4053d5:	xor    bh,BYTE PTR ds:0xae2ddfb9
  4053db:	pop    eax
  4053dc:	je     0x4053a9
  4053de:	dec    edx
  4053df:	pop    esp
  4053e0:	das    
  4053e1:	sub    al,0x4d
  4053e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053e4:	sti    
  4053e5:	test   eax,0x5d4e4ebd
  4053ea:	dec    esi
  4053eb:	ficom  WORD PTR [ecx+0x52]
  4053ee:	jne    0x405439
  4053f0:	jecxz  0x4053bf
  4053f2:	fild   QWORD PTR [edx+ecx*8]
  4053f5:	outs   dx,BYTE PTR gs:[esi]
  4053f7:	mov    edx,0xff4ddf15
  4053fc:	test   ah,al
  4053fe:	icebp  
  4053ff:	repz cli 
  405401:	nop
  405402:	adc    BYTE PTR ds:0x22a94e1,bh
  405408:	pop    es
  405409:	fist   WORD PTR [edx+0x52]
  40540c:	hlt    
  40540d:	popa   
  40540e:	clc    
  40540f:	test   BYTE PTR [ebp+eiz*2-0x2c],ah
  405413:	ficom  DWORD PTR [esi]
  405415:	cmp    ecx,DWORD PTR [eax+0xc]
  405418:	imul   eax,DWORD PTR [edi+0x4],0xffffffc9
  40541c:	cdq    
  40541d:	or     eax,0xaf29644b
  405422:	jmp    0xa2ca:0x4f38de92
  405429:	xchg   BYTE PTR ds:0x3f26cd03,bl
  40542f:	mov    dl,0x43
  405431:	mov    bh,0xae
  405433:	sbb    eax,0xa711cbde
  405438:	sar    DWORD PTR [eax+0x70b6756a],cl
  40543e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543f:	mov    ah,0xcc
  405441:	dec    esi
  405442:	mov    cl,0x2b
  405444:	mov    ecx,DWORD PTR [edx-0x262af181]
  40544a:	jne    0x4053dd
  40544c:	adc    al,0xa6
  40544e:	outs   dx,DWORD PTR ds:[esi]
  40544f:	mov    edi,0x17d620ae
  405454:	adc    eax,0xba61cc5e
  405459:	mov    bh,0x6c
  40545b:	xor    ebx,0x4e636674
  405461:	sbb    DWORD PTR [ebp+0x5e],esi
  405464:	retf   
  405465:	pop    eax
  405466:	push   ebp
  405467:	in     al,0xa8
  405469:	iret   
  40546a:	lds    esi,FWORD PTR [edi+esi*8]
  40546d:	ss out dx,eax
  40546f:	js     0x40541f
  405471:	jmp    0x934575d7
  405476:	(bad)
  40547a:	mov    al,0x20
  40547c:	clc    
  40547d:	dec    esi
  40547e:	dec    esi
  40547f:	push   esp
  405480:	sbb    al,0xe0
  405482:	mov    DWORD PTR [ebx+0x601d2d4c],esi
  405488:	imul   DWORD PTR [ebp+0x2013f122]
  40548e:	(bad)  
  40548f:	icebp  
  405490:	imul   ebp,DWORD PTR [ebx-0x7],0x55
  405494:	sub    ch,BYTE PTR [edx]
  405496:	jmp    0xb9fe6d34
  40549b:	cmc    
  40549c:	push   0xffffffdd
  40549e:	sub    DWORD PTR [eax],edx
  4054a0:	mov    al,0x43
  4054a2:	mov    bh,0x89
  4054a4:	dec    ebx
  4054a5:	adc    ah,al
  4054a7:	ret    
  4054a8:	sahf   
  4054a9:	(bad)
  4054ac:	mov    WORD PTR ds:0xebb77651,fs
  4054b2:	xor    eax,0xc1927670
  4054b7:	add    ecx,DWORD PTR [ebp-0x162eb32d]
  4054bd:	fisub  DWORD PTR [eax+0x48]
  4054c0:	and    BYTE PTR [ebx],ah
  4054c2:	adc    eax,ecx
  4054c4:	repz sub eax,0x26597937
  4054ca:	(bad)  
  4054cb:	call   0xd526:0xa570adf2
  4054d2:	xchg   DWORD PTR [ecx-0x16],edi
  4054d5:	mov    esi,0x75c5973b
  4054da:	stc    
  4054db:	jp     0x405542
  4054dd:	xchg   ebx,eax
  4054de:	aaa    
  4054df:	mov    esi,0x35cc46a7
  4054e4:	fild   DWORD PTR [ebp-0x1518b652]
  4054ea:	ret    
  4054eb:	add    BYTE PTR [edi+0x6853d702],cl
  4054f1:	imul   edi,esi,0xbad9465e
  4054f7:	ss test al,0xb9
  4054fa:	cmp    BYTE PTR [ecx+0x64a6a7b],ah
  405500:	push   esp
  405501:	into   
  405502:	in     eax,0xea
  405504:	sub    BYTE PTR [ecx-0x7b],0x77
  405508:	mov    ?,WORD PTR [esi+eiz*8]
  40550b:	dec    edi
  40550c:	jp     0x405584
  40550e:	cmp    ah,BYTE PTR [ebp+0x30]
  405511:	fst    QWORD PTR [esi]
  405513:	push   cs
  405514:	dec    esp
  405515:	data16 sti 
  405517:	dec    ecx
  405518:	ins    DWORD PTR es:[edi],dx
  405519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40551a:	out    0x21,al
  40551c:	clc    
  40551d:	mov    esi,0xfc4cd785
  405522:	aam    0x96
  405524:	mov    edi,0xf7a51aa4
  405529:	push   ecx
  40552a:	xchg   esi,eax
  40552b:	and    ebx,esi
  40552d:	mov    ds:0x6f44e5b9,al
  405532:	or     ebp,DWORD PTR [edx-0x1a]
  405535:	test   BYTE PTR fs:[ecx+0x48],0xfc
  40553a:	pop    edx
  40553b:	mov    dl,0xcd
  40553d:	jo     0x40553d
  40553f:	das    
  405540:	cwde   
  405541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405542:	(bad)  
  405543:	sub    bl,BYTE PTR es:[eax-0x22fcd462]
  40554a:	test   DWORD PTR [edx],ebp
  40554c:	xor    BYTE PTR [ecx],dh
  40554e:	pop    eax
  40554f:	push   ds
  405550:	fisttp DWORD PTR ds:0x20d0c550
  405556:	ror    BYTE PTR [esi-0x4f2241d4],cl
  40555c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40555d:	xchg   ebp,eax
  40555e:	add    al,0x39
  405560:	jmp    0x51be:0xf0e9ff0a
  405567:	ins    DWORD PTR es:[edi],dx
  405568:	stc    
  405569:	pop    edx
  40556a:	(bad)  
  40556b:	ds icebp 
  40556d:	mov    edx,0x60a88e3c
  405572:	scas   al,BYTE PTR es:[edi]
  405573:	jno    0x40559b
  405575:	ss ds push ds
  405578:	add    BYTE PTR [ebp+0x15],dh
  40557b:	std    
  40557c:	pop    esi
  40557d:	mov    BYTE PTR [ebx-0x36],ch
  405580:	mov    cl,0x32
  405582:	push   0x2207ac71
  405587:	push   0xb7d9e608
  40558c:	jbe    0x405606
  40558e:	sub    al,0x4
  405590:	xlat   BYTE PTR ds:[ebx]
  405591:	icebp  
  405592:	scas   eax,DWORD PTR es:[edi]
  405593:	pop    edi
  405594:	sar    edi,cl
  405596:	dec    edx
  405597:	cmp    DWORD PTR [esi],ebp
  405599:	xchg   ebp,eax
  40559a:	das    
  40559b:	ds inc eax
  40559d:	loope  0x405607
  40559f:	cmp    eax,0x6e961aca
  4055a4:	sub    al,0xa3
  4055a6:	scas   al,BYTE PTR es:[edi]
  4055a7:	or     DWORD PTR [ecx-0x9],0xffffff82
  4055ab:	jl     0x4055c3
  4055ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055ae:	fdivr  st(5),st
  4055b0:	and    ch,BYTE PTR [edx]
  4055b2:	dec    esi
  4055b3:	cli    
  4055b4:	push   ss
  4055b5:	jmp    0x4055c2
  4055b7:	aam    0x51
  4055b9:	jle    0x4055b8
  4055bb:	fwait
  4055bc:	xchg   ebp,eax
  4055bd:	sub    ecx,0xe133a610
  4055c3:	ins    BYTE PTR es:[edi],dx
  4055c4:	les    edi,FWORD PTR [ecx-0x12936232]
  4055ca:	cmc    
  4055cb:	ins    DWORD PTR es:[edi],dx
  4055cc:	je     0x40559d
  4055ce:	cmp    esp,DWORD PTR cs:[ecx+edi*4]
  4055d2:	imul   edx,DWORD PTR [edx],0xf0364e9d
  4055d8:	mov    cx,0x815a
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x4345f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs pop ecx
  405604:	add    edx,DWORD PTR [ebp+0x7e362152]
  40560a:	jle    0x4055d0
  40560c:	jns    0x40568c
  40560e:	jle    0x405601
  405610:	arpl   WORD PTR [edx],dx
  405612:	push   ecx
  405613:	push   esi
  405614:	pop    ds
  405615:	cmp    esp,ebx
  405617:	into   
  405618:	push   eax
  405619:	inc    esp
  40561a:	adc    al,0xd0
  40561c:	rcr    BYTE PTR [ebx*1-0x2007c18d],1
  405623:	push   edi
  405624:	cmc    
  405625:	adc    al,0xd
  405627:	adc    DWORD PTR [edx],edx
  405629:	es loope 0x4055dd
  40562c:	(bad)  
  40562d:	aaa    
  40562e:	push   ecx
  40562f:	fisttp WORD PTR [esi-0x3efa105]
  405635:	pop    ss
  405636:	mov    WORD PTR [edi],fs
  405638:	loopne 0x405630
  40563a:	scas   al,BYTE PTR es:[edi]
  40563b:	shl    BYTE PTR [ecx+0x13e54e37],cl
  405641:	dec    edx
  405642:	enter  0x2e24,0x3a
  405646:	mov    ecx,0x308482cf
  40564b:	add    al,0xcd
  40564d:	push   ecx
  40564e:	retf   
  40564f:	test   DWORD PTR [eax-0x2f],esi
  405652:	ins    DWORD PTR es:[edi],dx
  405653:	mov    bh,0xb0
  405655:	pop    esp
  405656:	jge    0x405650
  405658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405659:	push   0x55
  40565b:	jle    0x40564d
  40565d:	arpl   WORD PTR ds:0xafc30e17,ax
  405663:	fidivr WORD PTR ds:0x86dba7dd
  405669:	rcl    BYTE PTR [edi],1
  40566b:	adc    DWORD PTR [edx-0x1c],0xdcb1eca9
  405672:	push   edi
  405673:	dec    edx
  405674:	adc    esp,eax
  405676:	cvtps2pd xmm4,QWORD PTR [edi+0x19c53274]
  40567d:	dec    ecx
  40567e:	sbb    eax,0x9a76eb65
  405683:	dec    ecx
  405684:	push   esp
  405685:	jle    0x4056e3
  405687:	in     al,0x7b
  405689:	xlat   BYTE PTR ds:[ebx]
  40568a:	jl     0x40563f
  40568c:	or     eax,esi
  40568e:	push   ss
  40568f:	out    dx,eax
  405690:	dec    edi
  405691:	pop    edx
  405692:	bound  edi,QWORD PTR [eax-0x64]
  405695:	dec    esi
  405696:	cmp    dl,BYTE PTR [ebp+0x49]
  405699:	shl    esi,1
  40569b:	aas    
  40569c:	inc    eax
  40569d:	cmp    al,0x6b
  40569f:	cmp    BYTE PTR [ebp-0x23],0x15
  4056a3:	mov    edx,0xf309274e
  4056a8:	sub    al,0x9
  4056aa:	xchg   edi,eax
  4056ab:	cmp    edi,ebp
  4056ad:	and    edx,esi
  4056af:	inc    ebx
  4056b0:	lods   eax,DWORD PTR ds:[esi]
  4056b1:	mov    ebp,DWORD PTR [edx-0x40cc99f4]
  4056b7:	mov    esi,0xdb04e4d8
  4056bc:	sub    ah,ah
  4056be:	in     eax,0xf7
  4056c0:	lea    eax,[eax+eax*8]
  4056c3:	addr16 dec esp
  4056c5:	or     al,0x6d
  4056c7:	sub    ch,BYTE PTR [edx]
  4056c9:	cmc    
  4056ca:	aam    0x53
  4056cc:	pop    es
  4056cd:	test   al,ah
  4056cf:	or     esp,ecx
  4056d1:	jns    0x4056f9
  4056d3:	outs   dx,DWORD PTR ds:[esi]
  4056d4:	aas    
  4056d5:	sbb    al,0x7b
  4056d7:	mov    edi,0x8c959884
  4056dc:	adc    DWORD PTR [esi],0xffffff90
  4056df:	(bad)  
  4056e2:	test   al,0xd7
  4056e4:	shl    cl,cl
  4056e6:	push   ss
  4056e7:	jne    0x405751
  4056e9:	(bad)  
  4056ea:	test   eax,0x80692f82
  4056ef:	cmp    DWORD PTR [ecx-0x21],0xffffff80
  4056f3:	std    
  4056f4:	push   esp
  4056f5:	into   
  4056f6:	jae    0x405711
  4056f8:	hlt    
  4056f9:	sbb    dh,bl
  4056fb:	push   es
  4056fc:	les    ebp,FWORD PTR [edi-0x17d7cc0c]
  405702:	shl    DWORD PTR [edi+ebp*4+0x58c2b45a],1
  405709:	mov    edi,0x52b5f490
  40570e:	push   ebx
  40570f:	pop    edi
  405710:	dec    ebp
  405711:	gs push ebp
  405713:	leave  
  405714:	adc    BYTE PTR [ebx],dl
  405716:	test   DWORD PTR [eax-0x76],esi
  405719:	add    dh,ah
  40571b:	mov    bl,0x7b
  40571d:	sahf   
  40571e:	push   ebx
  40571f:	and    eax,0x1c762963
  405724:	loopne 0x40572e
  405726:	lea    ebx,[ebx+0x28e2d396]
  40572c:	arpl   cx,si
  40572e:	xor    al,0xba
  405730:	std    
  405731:	inc    eax
  405732:	mov    ebp,DWORD PTR [ebx]
  405734:	dec    esp
  405735:	pop    ebp
  405736:	aam    0xf6
  405738:	fcomi  st,st(5)
  40573a:	or     DWORD PTR [esi],ecx
  40573c:	shl    BYTE PTR [ecx],0x23
  40573f:	fxch   st(6)
  405741:	cs or  bl,cl
  405744:	out    0xfe,al
  405746:	pop    ds
  405747:	es out dx,eax
  405749:	fdivr  st,st(7)
  40574b:	(bad)  
  40574c:	sub    al,0x3c
  40574e:	in     al,0x80
  405750:	xchg   ebx,eax
  405751:	adc    al,0x1b
  405753:	daa    
  405754:	pushf  
  405755:	xchg   edi,eax
  405756:	add    BYTE PTR [ebp+0x4f87da07],bh
  40575c:	rcl    BYTE PTR [esp+edx*8+0x29],0xcd
  405761:	or     BYTE PTR es:[eax+0x8],ah
  405765:	add    al,0x84
  405767:	retf   
  405768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40576a:	mov    ch,0x1b
  40576c:	daa    
  40576d:	sub    eax,0xf87108b8
  405772:	jmp    0xf28c:0x5d6e1f95
  405779:	sbb    eax,DWORD PTR [esp+edi*8+0x27986ac9]
  405780:	(bad)  
  405781:	call   0x57f9:0x2b7ed94c
  405788:	scas   eax,DWORD PTR es:[edi]
  405789:	jnp    0x4057ac
  40578b:	push   edi
  40578c:	sbb    al,0xb6
  40578e:	inc    esp
  40578f:	pop    esp
  405790:	xor    al,0x75
  405792:	push   ebx
  405793:	mov    esi,0x90f56db0
  405798:	jl     0x4057ef
  40579a:	and    ecx,DWORD PTR [eax-0x544194e7]
  4057a0:	mov    edx,0xc0e895e0
  4057a5:	retf   
  4057a6:	mov    al,0xc5
  4057a8:	cmc    
  4057a9:	cli    
  4057aa:	out    dx,eax
  4057ab:	dec    edi
  4057ac:	pusha  
  4057ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ae:	cmp    al,0x85
  4057b0:	ret    0xfad9
  4057b3:	je     0x40582f
  4057b5:	jne    0x405833
  4057b7:	dec    esp
  4057b8:	enter  0xb0af,0x9d
  4057bc:	pop    eax
  4057bd:	sahf   
  4057be:	pop    edx
  4057bf:	mov    bh,0x60
  4057c1:	pop    ecx
  4057c2:	adc    eax,DWORD PTR [ebx]
  4057c4:	pop    es
  4057c5:	or     ebp,esi
  4057c7:	push   edi
  4057c8:	mov    al,ds:0x4d49324f
  4057cd:	mov    dl,0x96
  4057cf:	mov    esi,0x4ac98c71
  4057d4:	fs sti 
  4057d6:	push   es
  4057d7:	(bad)  [edx]
  4057d9:	or     dl,al
  4057db:	mov    ch,0xd6
  4057dd:	jo     0x40578b
  4057df:	nop
  4057e0:	xchg   edx,eax
  4057e1:	jmp    0x4057f4
  4057e3:	(bad)  
  4057e4:	popf   
  4057e5:	int    0xa5
  4057e7:	mov    bh,0xeb
  4057e9:	sbb    DWORD PTR [edi+ebp*4-0x28809873],ecx
  4057f0:	(bad)  
  4057f1:	icebp  
  4057f2:	xor    eax,0xcc092d27
  4057f7:	outs   dx,BYTE PTR ds:[esi]
  4057f8:	cmp    edi,eax
  4057fa:	adc    eax,0x9876f959
  4057ff:	adc    BYTE PTR [ebx],cl
  405801:	fbstp  TBYTE PTR [edx]
  405803:	xor    cl,dh
  405805:	mov    cl,0xff
  405807:	ins    BYTE PTR es:[edi],dx
  405808:	push   eax
  405809:	sub    al,al
  40580b:	jle    0x4057a3
  40580d:	dec    esp
  40580e:	xor    eax,0xf3931455
  405813:	mov    bl,0x7c
  405815:	and    BYTE PTR [edi+ebp*2],0x10
  405819:	and    BYTE PTR [edx-0x15392f21],0x4b
  405820:	mov    eax,DWORD PTR [ebx-0x19]
  405823:	and    esi,DWORD PTR [ecx+esi*8]
  405826:	stos   BYTE PTR es:[edi],al
  405827:	mov    ah,0xe0
  405829:	iret   
  40582a:	inc    ebp
  40582b:	jae    0x4057bd
  40582d:	add    bh,BYTE PTR [ebx+0x46372a02]
  405833:	sbb    eax,0x8b71bb86
  405838:	mov    edi,0x6e7af6e7
  40583d:	daa    
  40583e:	iret   
  40583f:	pusha  
  405840:	ins    DWORD PTR es:[edi],dx
  405841:	push   0xd0a4ed4e
  405846:	push   esi
  405847:	mov    ds:0xad8fb2c6,eax
  40584c:	sbb    DWORD PTR [edi],0xffffff97
  40584f:	cli    
  405850:	jo     0x4058ad
  405852:	sbb    al,0x3f
  405854:	sbb    esi,DWORD PTR [esp+ebx*1+0x14ad13f]
  40585b:	xchg   esp,eax
  40585c:	in     eax,dx
  40585d:	outs   dx,DWORD PTR ds:[esi]
  40585e:	pop    ss
  40585f:	fmul   DWORD PTR [edi-0x3cbea01e]
  405865:	push   eax
  405866:	adc    esp,edx
  405868:	shl    BYTE PTR [edi-0x38cb3fb2],0xda
  40586f:	mov    al,ds:0x2389fbcb
  405874:	push   0xffffffa8
  405876:	mov    edx,esi
  405878:	jg     0x405827
  40587a:	call   FWORD PTR [ebp-0x18c65105]
  405880:	aas    
  405881:	jbe    0x40587b
  405883:	call   0xff514ec7
  405888:	(bad)  
  405889:	or     ah,bh
  40588b:	jbe    0x4058b5
  40588d:	mov    ebp,0xd9d84980
  405892:	test   DWORD PTR [edi],esp
  405894:	jl     0x4058cd
  405896:	int3   
  405897:	retf   0x6dba
  40589a:	or     al,0x2e
  40589c:	sub    BYTE PTR [ebx],bl
  40589e:	addr16 js 0x4058a7
  4058a1:	stos   BYTE PTR es:[edi],al
  4058a2:	mov    bh,BYTE PTR [ecx-0x15]
  4058a5:	add    DWORD PTR [ebx],eax
  4058a7:	and    DWORD PTR [ecx],ecx
  4058a9:	(bad)  
  4058aa:	pop    ebx
  4058ab:	add    eax,0xf1abb489
  4058b0:	dec    edi
  4058b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b2:	sub    dl,ah
  4058b4:	imul   eax,DWORD PTR [ebx+0x4c4e5d80],0x25
  4058bb:	xlat   BYTE PTR ds:[ebx]
  4058bc:	lahf   
  4058bd:	push   eax
  4058be:	xchg   ebx,eax
  4058bf:	push   cs
  4058c0:	adc    dl,ch
  4058c2:	inc    eax
  4058c3:	push   0x43878238
  4058c8:	stc    
  4058c9:	loop   0x405850
  4058cb:	rol    DWORD PTR [ecx-0xa502396],cl
  4058d1:	jo     0x405943
  4058d3:	add    al,0x1d
  4058d5:	nop
  4058d6:	jno    0x40594d
  4058d8:	pop    ebx
  4058d9:	pop    edx
  4058da:	push   ebx
  4058db:	pop    eax
  4058dc:	adc    DWORD PTR [ebx],edx
  4058de:	add    eax,0x698a0206
  4058e3:	xchg   ecx,eax
  4058e4:	sahf   
  4058e5:	push   esp
  4058e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e7:	fcmovne st,st(7)
  4058e9:	fcomi  st,st(5)
  4058eb:	jle    0x4058d1
  4058ed:	repz in eax,dx
  4058ef:	xor    DWORD PTR [ebx-0x5ad3574b],0xffffffbc
  4058f6:	cmp    BYTE PTR [ebp+ebp*1+0x4b0920ab],dl
  4058fd:	jo     0x4058a8
  4058ff:	push   esi
  405900:	pop    esp
  405901:	xor    ah,bh
  405903:	in     eax,0xc9
  405905:	xchg   edi,eax
  405906:	mov    edx,0x6ee9ecc
  40590b:	add    ch,BYTE PTR [edi+0x75]
  40590e:	addr16 icebp 
  405910:	or     DWORD PTR [edx],edx
  405912:	mov    eax,ds:0x51ecc176
  405917:	mov    WORD PTR [ebx+0x4fd1e299],?
  40591d:	or     BYTE PTR ds:0xd966a4f,dl
  405923:	push   0xbf420e28
  405928:	cmp    BYTE PTR [ebp+eax*8-0x287c0954],0xe0
  405930:	mov    ecx,0xf89d21a2
  405935:	ret    0x4e02
  405938:	nop
  405939:	add    BYTE PTR [edi+0x528f3833],ah
  40593f:	lods   al,BYTE PTR ds:[esi]
  405940:	push   es
  405941:	lea    ecx,[edx+0x4f]
  405944:	loopne 0x405902
  405946:	inc    ecx
  405947:	in     eax,dx
  405948:	(bad)  
  40594a:	mov    ah,0x83
  40594c:	mov    ds:0x51d242b4,eax
  405951:	das    
  405952:	xchg   ebx,eax
  405953:	mov    ah,0x19
  405955:	mov    DWORD PTR [ebp-0x8],0x4f39
  40595c:	mov    DWORD PTR ds:0x4346d3,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	inc    eax
  405978:	scas   eax,DWORD PTR es:[edi]
  405979:	imul   edx,DWORD PTR [edi-0x11],0xc47e7e31
  405980:	jns    0x405a00
  405982:	jle    0x4059aa
  405984:	cmp    al,0xd1
  405986:	and    ah,dl
  405988:	pop    eax
  405989:	setle  BYTE PTR [ebp+ebx*2-0x74]
  40598e:	shl    DWORD PTR [esi],0x6d
  405991:	and    DWORD PTR [ebx+0x21b6f37d],edi
  405997:	jo     0x4059e6
  405999:	mov    esi,0x5bcc0c00
  40599e:	loop   0x4059f8
  4059a0:	mov    al,ds:0xcc8e157b
  4059a5:	xchg   ebp,eax
  4059a6:	stos   DWORD PTR es:[edi],eax
  4059a7:	pop    es
  4059a8:	pop    ebp
  4059a9:	(bad)  
  4059aa:	retf   
  4059ab:	inc    ebp
  4059ac:	cmp    al,0xbf
  4059ae:	inc    eax
  4059af:	test   eax,0xe151a654
  4059b4:	sub    dl,ah
  4059b6:	add    cl,BYTE PTR [edx+0x195fc127]
  4059bc:	sahf   
  4059bd:	mov    dl,0xb3
  4059bf:	mov    ebp,0x8240df93
  4059c4:	ds retf 0xf9fe
  4059c8:	pushf  
  4059c9:	(bad)  
  4059ca:	out    0x27,eax
  4059cc:	cmp    al,BYTE PTR [ebp-0x1322bccb]
  4059d2:	call   0x5ed3:0xfcaec06e
  4059d9:	in     al,dx
  4059da:	push   ecx
  4059db:	jl     0x405a40
  4059dd:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059df:	mov    dl,BYTE PTR [ebp-0x56]
  4059e2:	push   edx
  4059e3:	aam    0xdc
  4059e5:	rol    edi,1
  4059e7:	(bad)  
  4059e8:	stos   BYTE PTR es:[edi],al
  4059e9:	dec    esi
  4059ea:	jb     0x405a5f
  4059ec:	cmp    esi,0x91d9cc88
  4059f2:	sbb    al,bh
  4059f4:	lods   al,BYTE PTR ds:[esi]
  4059f5:	aam    0xb2
  4059f7:	ins    DWORD PTR es:[edi],dx
  4059f8:	jmp    0x4059e5
  4059fa:	and    eax,0xb75762ef
  4059ff:	ret    
  405a00:	lea    ebp,[edi-0x48]
  405a03:	out    0x41,eax
  405a05:	xlat   BYTE PTR ds:[ebx]
  405a06:	or     al,0xa2
  405a08:	lods   al,BYTE PTR ds:[esi]
  405a09:	jle    0x405994
  405a0b:	xlat   BYTE PTR ds:[ebx]
  405a0c:	or     esi,DWORD PTR [ebx]
  405a0e:	scas   eax,DWORD PTR es:[edi]
  405a0f:	mov    bh,BYTE PTR [edx+0x4]
  405a12:	lods   al,BYTE PTR ds:[esi]
  405a13:	sub    BYTE PTR [ecx],bh
  405a15:	mov    esi,0xdb71f8e2
  405a1a:	jo     0x405a63
  405a1c:	in     al,0x89
  405a1e:	jge    0x4059e6
  405a20:	mov    edx,0x745009c7
  405a25:	rol    DWORD PTR [edx],0xa5
  405a28:	ret    0x2a08
  405a2b:	out    0x7b,al
  405a2d:	leave  
  405a2e:	push   0xffffffc6
  405a30:	dec    ebp
  405a31:	push   ebp
  405a32:	sbb    ch,BYTE PTR [edi]
  405a34:	mov    cl,0xf5
  405a36:	out    0x35,al
  405a38:	hlt    
  405a39:	xchg   esi,eax
  405a3a:	ins    BYTE PTR es:[edi],dx
  405a3b:	cli    
  405a3c:	cld    
  405a3d:	cdq    
  405a3e:	std    
  405a3f:	pop    ecx
  405a40:	in     al,dx
  405a41:	inc    ebx
  405a42:	jne    0x405a67
  405a44:	pop    esi
  405a45:	jmp    0x39d46ecd
  405a4a:	mov    ch,dl
  405a4c:	pop    edx
  405a4d:	pop    ebx
  405a4e:	cmp    BYTE PTR [eax],0x69
  405a51:	jmp    DWORD PTR [esi+ebp*1+0x14]
  405a55:	mov    al,ds:0xc8bfff6c
  405a5a:	fnstenv [ebx+ecx*4]
  405a5d:	sti    
  405a5e:	mov    dh,0x8e
  405a60:	bound  eax,QWORD PTR [eax]
  405a62:	addr16 in eax,0x8f
  405a65:	xchg   ecx,eax
  405a66:	outs   dx,BYTE PTR ds:[esi]
  405a67:	pushf  
  405a68:	mov    ecx,0xc8b22eea
  405a6d:	aad    0x5
  405a6f:	push   ebx
  405a70:	(bad)  
  405a71:	jecxz  0x405a16
  405a73:	leave  
  405a74:	lods   eax,DWORD PTR ds:[esi]
  405a75:	and    DWORD PTR [edi-0x1bb6ce9b],0x44
  405a7c:	sbb    dl,BYTE PTR [ecx+0x36]
  405a7f:	fcom   QWORD PTR [ebx-0x22]
  405a82:	pop    ecx
  405a83:	inc    ecx
  405a84:	xchg   edi,eax
  405a85:	mov    esi,0x39f47f1d
  405a8a:	jmp    0x1b20be17
  405a8f:	sbb    cl,BYTE PTR [ebx]
  405a91:	in     al,dx
  405a92:	ss dec ebx
  405a94:	pusha  
  405a95:	sub    eax,0x94b72a6b
  405a9a:	pushf  
  405a9b:	(bad)  
  405a9c:	(bad)  
  405a9e:	inc    ebx
  405a9f:	jmp    0x2d7f:0x8596bf9f
  405aa6:	mov    ebp,0xe4c2fbe4
  405aab:	adc    BYTE PTR [edx+ebx*4+0x46],cl
  405aaf:	xchg   edx,eax
  405ab0:	jo     0x405af9
  405ab2:	out    dx,eax
  405ab3:	xor    DWORD PTR [edx+ebp*2+0x14052d11],edi
  405aba:	daa    
  405abb:	mov    ch,0xe0
  405abd:	jmp    0xf659a249
  405ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac3:	pop    ss
  405ac4:	adc    eax,0x2e923393
  405ac9:	shr    BYTE PTR [eax],1
  405acb:	xor    al,ah
  405acd:	push   ds
  405ace:	pop    ss
  405acf:	mov    WORD PTR [ebp+0x4f16483b],?
  405ad5:	mov    al,ds:0xf1f655c
  405ada:	mov    bl,BYTE PTR [eax]
  405adc:	xchg   ecx,eax
  405add:	adc    ebx,DWORD PTR [ebx]
  405adf:	ds (bad) 
  405ae1:	div    BYTE PTR [edi+ebx*1]
  405ae4:	cld    
  405ae5:	lods   al,BYTE PTR ds:[esi]
  405ae6:	pop    ds
  405ae7:	outs   dx,BYTE PTR ds:[esi]
  405ae8:	cmp    cl,cl
  405aea:	repz push edi
  405aec:	cmp    bh,BYTE PTR [edx]
  405aee:	inc    edx
  405aef:	iret   
  405af0:	xor    dh,BYTE PTR [esi-0x2cd5f096]
  405af6:	pop    ss
  405af7:	mov    ebp,cs
  405af9:	imul   esi,DWORD PTR [ecx+0x3d83db5a],0x169eb5f3
  405b03:	(bad)  
  405b04:	mov    ecx,0x45d1447b
  405b09:	loope  0x405ad1
  405b0b:	and    al,0xe9
  405b0d:	clc    
  405b0e:	xor    eax,0x33043a4b
  405b13:	ret    
  405b14:	sub    eax,0xdde425d3
  405b19:	pop    ss
  405b1a:	jp     0x405b47
  405b1c:	shr    DWORD PTR [edi-0x30e5a21e],0xd0
  405b23:	mov    DWORD PTR [edx],esp
  405b25:	jns    0x405b2a
  405b27:	repz jae 0x405b1e
  405b2a:	daa    
  405b2b:	cmp    eax,0xbbfcc9e3
  405b30:	rcl    edi,cl
  405b32:	jp     0x405b0c
  405b34:	loope  0x405b04
  405b36:	add    al,0x47
  405b38:	jbe    0x405b40
  405b3a:	push   0x8a3aac10
  405b3f:	inc    eax
  405b40:	test   BYTE PTR [edi],al
  405b42:	(bad)
  405b46:	push   edx
  405b47:	fsubr  QWORD PTR [eax+0x6d]
  405b4a:	xor    ecx,DWORD PTR [eax+0x22]
  405b4d:	retf   
  405b4e:	sar    BYTE PTR [ebx+0x6e95e5d8],cl
  405b54:	mov    DWORD PTR [edx+0x4a],esp
  405b57:	aad    0xee
  405b59:	out    0xd6,al
  405b5b:	cmp    eax,0xf3e64e00
  405b60:	adc    bh,0x34
  405b63:	sub    cl,ch
  405b65:	push   edi
  405b66:	mov    eax,ds:0xeb489108
  405b6b:	imul   edi,DWORD PTR [ebx],0xc23cc060
  405b71:	in     al,0x2e
  405b73:	mov    ebx,DWORD PTR [ebx]
  405b75:	pop    ss
  405b76:	in     al,0x96
  405b78:	inc    ebp
  405b79:	ja     0x405b78
  405b7b:	pcmpgtw mm0,QWORD PTR [ebx+ebp*2+0x1]
  405b80:	inc    edx
  405b81:	pop    es
  405b82:	mov    eax,0x2213b415
  405b87:	icebp  
  405b88:	cmc    
  405b89:	inc    ecx
  405b8a:	sar    BYTE PTR [eax],0xfe
  405b8d:	xchg   edi,eax
  405b8e:	or     al,0x7d
  405b90:	(bad)  
  405b92:	and    DWORD PTR [esi-0x46],esp
  405b95:	aas    
  405b96:	mov    esi,0x7374c5b7
  405b9b:	outs   dx,BYTE PTR ds:[esi]
  405b9c:	icebp  
  405b9d:	sub    BYTE PTR [eax+0x27],dh
  405ba0:	pop    esp
  405ba1:	cs and eax,edi
  405ba4:	(bad)  
  405ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba6:	fndisi(8087 only) 
  405ba8:	lds    eax,FWORD PTR [ebx]
  405baa:	repnz mov bh,0xd8
  405bad:	mov    ds:0xbcc6e776,eax
  405bb2:	cld    
  405bb3:	das    
  405bb4:	xor    al,0xe
  405bb6:	add    dh,BYTE PTR [edx+0x79281450]
  405bbc:	fidivr WORD PTR [ebx+0x1b]
  405bbf:	inc    ebp
  405bc0:	xchg   ebp,eax
  405bc1:	aam    0xa7
  405bc3:	push   ds
  405bc4:	mov    bl,0x49
  405bc6:	int3   
  405bc7:	in     eax,dx
  405bc8:	fcomp  DWORD PTR [edx+0x9]
  405bcb:	cmp    edx,DWORD PTR [ecx-0x37]
  405bce:	jmp    0xda91e522
  405bd3:	xchg   edi,eax
  405bd4:	fdivp  st(7),st
  405bd6:	rcr    BYTE PTR [ecx],cl
  405bd8:	stc    
  405bd9:	imul   esp,ebx,0xfecc337b
  405bdf:	icebp  
  405be0:	cld    
  405be1:	push   edi
  405be2:	aad    0xe9
  405be4:	dec    eax
  405be5:	rcl    BYTE PTR [edi-0x5185987d],1
  405beb:	das    
  405bec:	out    0xe5,al
  405bee:	add    dl,BYTE PTR [edx]
  405bf0:	xor    bl,dl
  405bf2:	test   al,0x60
  405bf4:	or     edi,0x96684ade
  405bfa:	sbb    al,ah
  405bfc:	mov    ebx,0xae48865b
  405c01:	fsub   QWORD PTR [eax-0x37df44f8]
  405c07:	ja     0x405b96
  405c09:	(bad)  
  405c0a:	xlat   BYTE PTR ds:[ebx]
  405c0b:	jecxz  0x405b9b
  405c0d:	mov    dl,0x14
  405c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c10:	outs   dx,BYTE PTR ds:[esi]
  405c11:	push   ebp
  405c12:	pop    ecx
  405c13:	or     BYTE PTR [eax],ah
  405c15:	js     0x405be3
  405c17:	jmp    0x88c3:0xb398c6a3
  405c1e:	iret   
  405c1f:	clc    
  405c20:	fisub  DWORD PTR ds:0xb46161c4
  405c26:	and    DWORD PTR [edi-0x4b],eax
  405c29:	rol    BYTE PTR [edi+0xb],1
  405c2c:	and    al,0xbe
  405c2e:	rcl    dl,cl
  405c30:	imul   esi,DWORD PTR [edx-0x66594722],0xffffff87
  405c37:	and    DWORD PTR [edi-0x5b],ecx
  405c3a:	les    ebx,FWORD PTR [ecx+0x73]
  405c3d:	lea    edx,[edx-0x26]
  405c40:	pop    ebx
  405c41:	jb     0x405c4e
  405c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c44:	push   edx
  405c45:	push   esp
  405c46:	sub    DWORD PTR [edx+ecx*4-0x6f],edi
  405c4a:	cmp    al,BYTE PTR [edx+0x2a]
  405c4d:	add    eax,0x8770411d
  405c52:	imul   ebp,DWORD PTR [edx],0x79
  405c55:	cs call 0xa510:0xd31bb5dc
  405c5d:	addr16 cdq 
  405c5f:	or     DWORD PTR [ecx+0x46],0xffffffce
  405c63:	dec    edx
  405c64:	push   es
  405c65:	lahf   
  405c66:	dec    ebx
  405c67:	sti    
  405c68:	sbb    DWORD PTR [ebx],edx
  405c6a:	dec    eax
  405c6b:	pop    ebx
  405c6c:	jno    0x405c9e
  405c6e:	dec    esi
  405c6f:	rol    ebp,cl
  405c71:	mov    dl,BYTE PTR [ebp+0x300879e0]
  405c77:	scas   eax,DWORD PTR es:[edi]
  405c78:	xchg   bl,ch
  405c7a:	add    BYTE PTR [esi-0x29],ch
  405c7d:	jno    0x405c34
  405c7f:	out    0x9d,eax
  405c81:	(bad)  
  405c82:	xchg   esi,eax
  405c83:	(bad)  
  405c84:	test   eax,0x1fc0ce92
  405c89:	jbe    0x405c52
  405c8b:	add    eax,0x23b8b26b
  405c90:	inc    edi
  405c91:	and    eax,0x968e4ed3
  405c96:	call   0x36cb50cb
  405c9b:	push   0xffffff97
  405c9d:	xchg   ebx,eax
  405c9e:	adc    eax,esp
  405ca0:	mov    ch,BYTE PTR [eax]
  405ca2:	jmp    0xdcc1:0x7a03fed5
  405ca9:	cli    
  405caa:	sub    al,0x9e
  405cac:	repz dec DWORD PTR [ebx-0x293fe02e]
  405cb3:	push   ss
  405cb4:	push   edx
  405cb5:	adc    BYTE PTR [ebp+0x3ca345a0],dh
  405cbb:	mov    dl,bh
  405cbd:	push   ebx
  405cbe:	mov    edi,0x55b9d215
  405cc3:	dec    esi
  405cc4:	mov    ecx,0xee54cd8f
  405cc9:	cmp    ecx,eax
  405ccb:	jne    0x4060e3
  405cd1:	add    DWORD PTR ds:0x43463f,edx
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434653,0x43467b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43470f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4346c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434647,0x12
  405d19:	cmp    DWORD PTR ds:0x434647,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434647,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434647
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434647,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0xbcc31bd6
  405d8d:	ins    BYTE PTR es:[edi],dx
  405d8e:	fbstp  TBYTE PTR [ebp-0x3b8181c4]
  405d94:	jns    0x405e14
  405d96:	jle    0x405d3c
  405d98:	repz adc DWORD PTR [esi+edi*1-0x1393cd36],ebx
  405da0:	mov    ch,0x54
  405da2:	bound  edi,QWORD PTR [bp+si]
  405da5:	test   BYTE PTR [ecx],0x1
  405da8:	das    
  405da9:	shl    DWORD PTR [edx],cl
  405dab:	sbb    DWORD PTR [ecx],esi
  405dad:	pop    es
  405dae:	cmp    DWORD PTR [eax],0xffffff92
  405db1:	les    edi,FWORD PTR [eax+0x35ec0dfa]
  405db7:	cmp    BYTE PTR [edi+0x3d],dh
  405dba:	dec    esp
  405dbb:	stc    
  405dbc:	mov    DWORD PTR [esp+ebp*2-0x7a418917],ebx
  405dc3:	int3   
  405dc4:	iret   
  405dc5:	popf   
  405dc6:	mov    ds:0x5f0564e4,al
  405dcb:	out    dx,eax
  405dcc:	hlt    
  405dcd:	or     BYTE PTR [esp+ebp*2+0x2f80726a],cl
  405dd4:	fwait
  405dd5:	jecxz  0x405e46
  405dd7:	loope  0x405d9f
  405dd9:	pop    ebp
  405dda:	fsub   QWORD PTR [edx+edx*4+0x8399074]
  405de1:	mov    ebp,0x6da36091
  405de6:	mov    edx,0x97dd799
  405deb:	aad    0xf1
  405ded:	add    DWORD PTR [esi+0xc2e10d2],0x38
  405df4:	sti    
  405df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df6:	int3   
  405df7:	imul   esp,DWORD PTR [edx+0x2cadaf45],0xb382be89
  405e01:	add    eax,0x698a0079
  405e06:	add    BYTE PTR [ebx-0x775d5229],dl
  405e0c:	fs es mov ch,0x68
  405e10:	push   ecx
  405e11:	adc    BYTE PTR [esi],0xc9
  405e14:	aam    0x6c
  405e16:	cmp    al,0x40
  405e18:	imul   esi,DWORD PTR [edi-0x7b],0xffffff9d
  405e1c:	lods   al,BYTE PTR ds:[esi]
  405e1d:	fmul   st(2),st
  405e1f:	call   0xaf58:0x4737870d
  405e26:	adc    esp,edi
  405e28:	mov    ch,0xe2
  405e2a:	xchg   DWORD PTR [esi],esi
  405e2c:	mov    edi,0xf9618b90
  405e31:	daa    
  405e32:	mov    WORD PTR [eax-0x5e17b825],?
  405e38:	scas   al,BYTE PTR es:[edi]
  405e39:	loope  0x405eb5
  405e3b:	nop
  405e3c:	pop    ebx
  405e3d:	jbe    0x405e67
  405e3f:	leave  
  405e40:	sub    eax,0xfc7b80a5
  405e45:	sbb    dl,al
  405e47:	mov    ds:0xb3667496,eax
  405e4c:	adc    cl,BYTE PTR [edi-0x20ed4c8]
  405e52:	add    bh,ch
  405e54:	jl     0x405ecf
  405e56:	shl    dh,0x54
  405e59:	jmp    0x405e73
  405e5b:	cmp    al,0xf4
  405e5d:	mov    dh,0x7
  405e5f:	pop    ecx
  405e60:	adc    DWORD PTR [ecx],eax
  405e62:	dec    esp
  405e63:	aam    0xa
  405e65:	mov    ch,0xe4
  405e67:	enter  0x61ba,0x8f
  405e6b:	in     al,dx
  405e6c:	mov    bl,0x6
  405e6e:	inc    ecx
  405e6f:	jp     0x405df8
  405e71:	pop    eax
  405e72:	in     eax,dx
  405e73:	pusha  
  405e74:	cmp    DWORD PTR [ecx-0x5e],0x21a13838
  405e7b:	mov    edi,0x17735881
  405e80:	mov    eax,0xe0c25b77
  405e85:	push   edi
  405e86:	mov    cl,0xbb
  405e88:	dec    eax
  405e89:	int3   
  405e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e8b:	mov    edx,0x5d5d6bcc
  405e90:	inc    esi
  405e91:	ds pop edi
  405e93:	out    0x10,eax
  405e95:	lods   al,BYTE PTR ds:[esi]
  405e96:	scas   eax,DWORD PTR es:[edi]
  405e97:	pop    ebx
  405e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e99:	fld    TBYTE PTR [edi]
  405e9b:	out    0x6a,eax
  405e9d:	sti    
  405e9e:	push   eax
  405e9f:	xor    dl,BYTE PTR [esp+ebp*8+0x7141fcf0]
  405ea6:	daa    
  405ea7:	inc    eax
  405ea8:	fucomp st(1)
  405eaa:	mov    edx,0xdc4cb0ae
  405eaf:	test   eax,0x58c25f10
  405eb4:	lods   al,BYTE PTR ds:[esi]
  405eb5:	sub    eax,ecx
  405eb7:	dec    edx
  405eb8:	pop    ebp
  405eb9:	jno    0x405ee3
  405ebb:	push   edi
  405ebc:	jg     0x405f30
  405ebe:	pusha  
  405ebf:	les    eax,FWORD PTR [ebx]
  405ec1:	push   esi
  405ec2:	jle    0x405e4f
  405ec4:	inc    esi
  405ec5:	add    al,0x60
  405ec7:	fidiv  WORD PTR [ecx-0x55bc23bb]
  405ecd:	jnp    0x405f39
  405ecf:	jno    0x405ede
  405ed1:	ins    DWORD PTR es:[edi],dx
  405ed2:	data16 jns 0x405e96
  405ed5:	rdtsc  
  405ed7:	ins    DWORD PTR es:[edi],dx
  405ed8:	sbb    BYTE PTR [esi*8-0x49221d6e],dh
  405edf:	push   cs
  405ee0:	ss jp  0x405edc
  405ee3:	add    DWORD PTR [ebp+0x5772fa7e],0xffffffce
  405eea:	jg     0x405e8a
  405eec:	xchg   ebx,eax
  405eed:	mov    ah,0xba
  405eef:	(bad)  
  405ef1:	mov    ds:0x25c3a74,al
  405ef6:	cli    
  405ef7:	mov    ecx,0x60f4f3f9
  405efc:	and    eax,ebp
  405efe:	inc    ecx
  405eff:	imul   eax,DWORD PTR [edx+ebp*4],0xa
  405f03:	mov    bh,0x38
  405f05:	add    BYTE PTR [esi-0x744d4e2e],0xf0
  405f0c:	sub    BYTE PTR [ebx-0x40],al
  405f0f:	ins    DWORD PTR es:[edi],dx
  405f10:	mov    eax,ds:0x2cdb2c8
  405f15:	aaa    
  405f16:	adc    al,0x6c
  405f18:	imul   esp,DWORD PTR [edx+ebx*4-0x3798b40b],0x55
  405f20:	add    esi,DWORD PTR [edx]
  405f22:	stos   DWORD PTR es:[edi],eax
  405f23:	out    0xdf,eax
  405f25:	(bad)  
  405f26:	cld    
  405f27:	mov    al,0xeb
  405f29:	test   DWORD PTR ds:[edi],ecx
  405f2c:	sub    ebx,DWORD PTR [ecx-0x5e]
  405f2f:	setle  BYTE PTR [esp+edi*2]
  405f33:	pop    esp
  405f34:	out    0x43,eax
  405f36:	(bad)  
  405f37:	cmp    eax,0x4ab24086
  405f3c:	push   gs
  405f3e:	bound  ebx,QWORD PTR [esi]
  405f40:	xchg   edi,eax
  405f41:	ins    DWORD PTR es:[edi],dx
  405f42:	mov    WORD PTR [edi+0x4c],?
  405f45:	jl     0x405eec
  405f47:	push   DWORD PTR [esi+0x72]
  405f4a:	shl    BYTE PTR [esi],0x5a
  405f4d:	ins    DWORD PTR es:[edi],dx
  405f4e:	sbb    al,0x41
  405f50:	inc    bl
  405f52:	nop
  405f53:	out    0xe2,eax
  405f55:	(bad)  
  405f56:	add    esp,DWORD PTR [ebp+0x4d]
  405f59:	hlt    
  405f5a:	mov    dl,0xdd
  405f5c:	push   edx
  405f5d:	or     esi,0x711ae737
  405f63:	push   ecx
  405f64:	jo     0x405f37
  405f66:	lods   eax,DWORD PTR ds:[esi]
  405f67:	aam    0xa4
  405f69:	cmp    DWORD PTR [edx+0x292216f8],0xffffffde
  405f70:	aad    0x58
  405f72:	mov    ds:0x576289a6,eax
  405f77:	aam    0x5b
  405f79:	gs (bad) 
  405f7b:	pop    edi
  405f7c:	rol    DWORD PTR [esi],0x2
  405f7f:	pop    ecx
  405f80:	inc    eax
  405f81:	fstp   TBYTE PTR [ecx+0x2baacb56]
  405f87:	xchg   edx,eax
  405f88:	rcr    BYTE PTR [edi],cl
  405f8a:	jnp    0x405fd7
  405f8c:	mov    bh,0xe8
  405f8e:	sub    dl,al
  405f90:	imul   BYTE PTR [esi+0x31]
  405f93:	ds (bad) 
  405f95:	aaa    
  405f96:	stc    
  405f97:	mov    ds:0x20bdf6ab,eax
  405f9c:	loop   0x405ff7
  405f9e:	iret   
  405f9f:	mov    esi,0x60800ac4
  405fa4:	xor    ebp,DWORD PTR [eax+0x58]
  405fa7:	mov    ebx,0xf7e722fa
  405fac:	jne    0x405f79
  405fae:	push   0xffffff95
  405fb0:	imul   esp,DWORD PTR [ebp-0x15],0xffffff9f
  405fb4:	jne    0x40601e
  405fb6:	cmp    ch,al
  405fb8:	mov    esp,0xf2388060
  405fbd:	jae    0x405f9f
  405fbf:	mov    ebp,0xd2ea1bf5
  405fc4:	js     0x406022
  405fc6:	sbb    BYTE PTR [eax-0x64b7f2ed],0xb7
  405fcd:	mov    ebp,DWORD PTR [ebx+0x1ad8054]
  405fd3:	pop    edx
  405fd4:	std    
  405fd5:	dec    eax
  405fd6:	rcr    BYTE PTR [esi-0x7d],1
  405fd9:	fiadd  WORD PTR [esi+ebx*2+0x32]
  405fdd:	imul   esi,DWORD PTR [eax],0x565a69a0
  405fe3:	test   al,0x12
  405fe5:	mov    ecx,0xfad66bfa
  405fea:	push   ds
  405feb:	(bad)  
  405fec:	sar    edx,cl
  405fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fef:	sbb    esp,DWORD PTR [ebx+ecx*2-0x69]
  405ff3:	jp     0x405f82
  405ff5:	mov    dh,0xce
  405ff7:	(bad)  
  405ff8:	mov    ebx,0xbf40cbe6
  405ffd:	(bad)  
  405ffe:	not    ah
  406000:	mov    esp,DWORD PTR [ebp+0x77dc00a9]
  406006:	mov    cl,0x77
  406008:	das    
  406009:	dec    ebx
  40600a:	mov    edi,0x4ee920bc
  40600f:	pop    ss
  406010:	or     eax,0x211c5a07
  406015:	push   0x63
  406017:	lods   al,BYTE PTR ds:[esi]
  406018:	or     DWORD PTR [edi+ecx*4-0x29],esi
  40601c:	rcl    DWORD PTR [ebp-0xc7d4bbb],1
  406022:	gs cli 
  406024:	cmp    al,0x21
  406026:	imul   ebp,edi,0xfffffff7
  406029:	retf   0xe7b4
  40602c:	cmp    eax,0xb2eb714a
  406031:	adc    eax,0x82b28160
  406036:	icebp  
  406037:	rol    BYTE PTR es:[esi],cl
  40603a:	out    0xe,al
  40603c:	inc    esi
  40603d:	dec    ecx
  40603e:	mov    bh,BYTE PTR [esi+0x13]
  406041:	leave  
  406042:	leave  
  406043:	add    DWORD PTR [esi+eiz*2+0x71],esi
  406047:	imul   esp,DWORD PTR [eax],0x69001992
  40604d:	or     BYTE PTR [ecx],ch
  40604f:	inc    ebp
  406050:	fidiv  WORD PTR [ebx+0x48ac1c71]
  406056:	jo     0x40602b
  406058:	push   eax
  406059:	cld    
  40605a:	push   ebx
  40605b:	xchg   esi,eax
  40605c:	outs   dx,DWORD PTR ds:[esi]
  40605d:	(bad)  
  40605e:	fst    DWORD PTR [edi+0x6df140df]
  406064:	cwde   
  406065:	not    BYTE PTR [eax+0xe]
  406068:	mov    edx,0x47055b28
  40606d:	mov    ds:0xf60110d5,al
  406072:	scas   al,BYTE PTR es:[edi]
  406073:	test   al,0x88
  406075:	dec    esp
  406076:	icebp  
  406077:	inc    esi
  406078:	loop   0x4060e1
  40607a:	mov    ah,0x6
  40607c:	push   esi
  40607d:	fidivr WORD PTR [esi-0x49]
  406080:	repz das 
  406082:	repnz sub edi,ebp
  406085:	sub    al,0x18
  406087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406088:	into   
  406089:	cld    
  40608a:	sub    DWORD PTR [eax+esi*4+0x2f],edi
  40608e:	cli    
  40608f:	scas   eax,DWORD PTR es:[edi]
  406090:	sbb    DWORD PTR [esi+0x2731c299],esi
  406096:	imul   esp,DWORD PTR [ebx+0x269b01fe],0x706419e9
  4060a0:	in     eax,0xca
  4060a2:	arpl   WORD PTR [ebx-0x7e],bp
  4060a5:	sub    eax,DWORD PTR [eax-0x2]
  4060a8:	bound  ebp,QWORD PTR [ebp-0x6b]
  4060ab:	jnp    0x406108
  4060ad:	cmp    esi,edx
  4060af:	pop    ebp
  4060b0:	imul   ebx,edx,0xfffffff9
  4060b3:	cmp    ebp,esp
  4060b5:	imul   edi,ebx,0x67a3a14
  4060bb:	pop    ds
  4060bc:	inc    eax
  4060bd:	rep outs dx,BYTE PTR ds:[esi]
  4060bf:	xor    DWORD PTR [ecx+0x77],edi
  4060c2:	jne    0x4060c0
  4060c4:	pop    edi
  4060c5:	ret    0xbde5
  4060c8:	shl    ecx,cl
  4060ca:	adc    DWORD PTR [ecx+0x30b2a916],ecx
  4060d0:	packuswb mm1,QWORD PTR [edi+0x1c]
  4060d4:	xor    BYTE PTR [ecx],cl
  4060d6:	or     eax,ebp
  4060d8:	push   edi
  4060d9:	bound  eax,QWORD PTR [esi]
  4060db:	jp     0x4060f6
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43466f
  406101:	mov    eax,ds:0x43471b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434653,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434653
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434653,ecx
  40612c:	cmp    DWORD PTR ds:0x434653,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434653,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434637,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43467b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43467b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43467b,ecx
  406175:	cmp    DWORD PTR ds:0x43467b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43467b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43467b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43467b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43467b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	push   0xffffff9f
  4061c7:	push   ebx
  4061c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061c9:	jae    0x40620a
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x40624e
  4061d2:	sbb    BYTE PTR [edx+0x5f],bl
  4061d5:	sbb    edi,0x4
  4061d8:	in     eax,dx
  4061d9:	sub    al,0x95
  4061db:	mov    ecx,0x7ddb45e4
  4061e0:	mov    DWORD PTR [ecx],ebx
  4061e2:	ss adc al,0x7e
  4061e5:	out    0x7e,al
  4061e7:	bound  esi,QWORD PTR [ebp-0x24f636aa]
  4061ed:	dec    edi
  4061ee:	sub    DWORD PTR [eax-0x1b65c31],ebx
  4061f4:	push   edi
  4061f5:	cli    
  4061f6:	add    BYTE PTR [edx],ch
  4061f8:	ficomp WORD PTR [edx+0x5]
  4061fb:	dec    ebp
  4061fc:	push   ss
  4061fd:	mov    WORD PTR [ebp-0x486bcc2b],ds
  406203:	sbb    esp,esi
  406205:	lea    edx,[eax-0x3b]
  406208:	in     eax,0xd
  40620a:	add    al,0x66
  40620c:	call   0xa192b293
  406211:	jno    0x4061a2
  406213:	mov    eax,0x99872d
  406218:	cmp    ecx,edx
  40621a:	pop    esi
  40621b:	lock sbb cl,BYTE PTR [edi+0x7d]
  40621f:	pop    ebx
  406220:	rol    BYTE PTR [edx-0xe],0x91
  406224:	mov    ds:0xf44d1e7c,al
  406229:	jb     0x406267
  40622b:	addr16 in eax,0xe9
  40622e:	adc    BYTE PTR cs:[edx+0x459bfb22],dh
  406235:	test   BYTE PTR [eax],cl
  406237:	pop    edi
  406238:	(bad)  
  406239:	cld    
  40623a:	xchg   ecx,eax
  40623b:	jnp    0x4062ac
  40623d:	and    al,0xbf
  40623f:	sub    al,0xc7
  406241:	mov    BYTE PTR [edi],dh
  406243:	fld    TBYTE PTR [eax+edi*8-0x673cea23]
  40624a:	sub    dl,BYTE PTR [ecx+0x6cbf059]
  406250:	ror    DWORD PTR [edi],0xc3
  406253:	sti    
  406254:	sub    ah,BYTE PTR [edx-0x63f359d7]
  40625a:	out    0xac,al
  40625c:	repz ror DWORD PTR [ebx],0xe1
  406260:	jnp    0x406221
  406262:	cmc    
  406263:	shr    BYTE PTR [edi],0xa2
  406266:	sti    
  406267:	mov    ds:0xb131469b,al
  40626c:	pop    ds
  40626d:	js     0x406208
  40626f:	push   ebx
  406270:	mov    ch,BYTE PTR [ecx-0x58]
  406273:	sub    al,0xb5
  406275:	adc    eax,0xba1b25e7
  40627a:	cmp    DWORD PTR [eax+0x77b7619b],esp
  406280:	ja     0x406243
  406282:	mov    ebx,0x1a41c7b8
  406287:	cmp    DWORD PTR ds:0xb47727fc,edi
  40628d:	sub    eax,0x189201bd
  406292:	xor    cl,dh
  406294:	test   DWORD PTR [edx+0x3e0bf15d],ecx
  40629a:	fnstsw WORD PTR [ebp-0x5bcd225e]
  4062a0:	or     al,0x55
  4062a2:	xchg   esi,eax
  4062a3:	stos   DWORD PTR es:[edi],eax
  4062a4:	sahf   
  4062a5:	xchg   edi,eax
  4062a6:	mov    bh,0x5f
  4062a8:	dec    ebx
  4062a9:	or     BYTE PTR [esi+0x6b136a5a],0xa3
  4062b0:	xchg   ebp,eax
  4062b1:	inc    edx
  4062b2:	mov    BYTE PTR [edi-0x304f920b],bh
  4062b8:	add    DWORD PTR [ecx-0x55],ebx
  4062bb:	xor    DWORD PTR [ebp+0x28],esi
  4062be:	fucomi st,st(2)
  4062c0:	pop    edx
  4062c1:	stc    
  4062c2:	outs   dx,BYTE PTR ds:[esi]
  4062c3:	cmp    al,0x39
  4062c5:	cs add al,0x37
  4062c8:	sub    ch,BYTE PTR [esi+ecx*8]
  4062cb:	lea    esp,[ebx-0x3b15265b]
  4062d1:	sbb    al,0xa
  4062d3:	div    ch
  4062d5:	push   cs
  4062d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062d7:	cmp    bh,BYTE PTR [esi+0x17ce77b3]
  4062dd:	dec    ebp
  4062de:	push   esp
  4062df:	jae    0x406280
  4062e1:	dec    esi
  4062e2:	and    eax,0x48f1b890
  4062e7:	jge    0x406368
  4062e9:	and    al,0x55
  4062eb:	dec    esi
  4062ec:	pop    ecx
  4062ed:	push   0xe1a8cdce
  4062f2:	and    al,0xb7
  4062f4:	popa   
  4062f5:	push   ebx
  4062f6:	sub    ebp,ebp
  4062f8:	in     al,0x11
  4062fa:	mov    esi,0x24ca9435
  4062ff:	xchg   edi,eax
  406300:	xchg   ebp,eax
  406301:	in     al,dx
  406302:	adc    esp,eax
  406304:	dec    eax
  406305:	add    eax,0x5f5df83c
  40630a:	mov    edx,DWORD PTR [esi-0x36]
  40630d:	outs   dx,DWORD PTR ds:[esi]
  40630e:	out    dx,eax
  40630f:	mov    eax,0xfd861591
  406314:	dec    ebx
  406315:	das    
  406316:	imul   esp,DWORD PTR [ebp-0x47],0x1675e9d2
  40631d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631e:	fcomi  st,st(6)
  406320:	push   0x5c
  406322:	mov    ss:0x2db17dfa,ax
  406329:	cwde   
  40632a:	and    bl,BYTE PTR [eax-0x62]
  40632d:	or     DWORD PTR [esi],esi
  40632f:	xlat   BYTE PTR ds:[ebx]
  406330:	lahf   
  406331:	jl     0x406347
  406333:	std    
  406334:	sbb    dl,dh
  406336:	aad    0x57
  406338:	outs   dx,DWORD PTR ds:[esi]
  406339:	pop    esi
  40633a:	icebp  
  40633b:	cmp    ecx,DWORD PTR ds:0x7098d263
  406341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406342:	fsubr  DWORD PTR [ebx+0x2c321ee1]
  406348:	loope  0x406366
  40634a:	dec    esi
  40634b:	lods   eax,DWORD PTR ds:[esi]
  40634c:	sub    al,0x86
  40634e:	(bad)  
  40634f:	mov    eax,0x554f1c9e
  406354:	fbld   TBYTE PTR [edx]
  406356:	mov    ebx,0x4b3b9808
  40635b:	loopne 0x406324
  40635d:	in     al,0xf6
  40635f:	dec    sp
  406361:	jno    0x4062ec
  406363:	adc    ch,BYTE PTR [edi+edx*4]
  406366:	and    al,BYTE PTR [eax-0x25]
  406369:	push   ebx
  40636a:	and    DWORD PTR [ebx],ebx
  40636c:	jns    0x406340
  40636e:	mov    cl,0x9f
  406370:	(bad)  
  406371:	mov    ?,WORD PTR [edx]
  406373:	ja     0x406392
  406375:	mov    ebp,0x274ce55d
  40637a:	mov    ebp,0xdd1d49b1
  40637f:	mov    bl,0x50
  406381:	inc    eax
  406382:	(bad)  
  406383:	mov    ds:0xfb5d5402,eax
  406388:	mov    esp,0xaf902cd5
  40638d:	xchg   ecx,eax
  40638e:	jne    0x40634b
  406390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406391:	mov    dl,0x2d
  406393:	dec    ebp
  406394:	jb     0x40634f
  406396:	xchg   ebx,eax
  406397:	(bad)  
  406398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406399:	push   ebp
  40639a:	sbb    al,BYTE PTR [eax-0x13]
  40639d:	aas    
  40639e:	fcmovb st,st(7)
  4063a0:	bound  edi,QWORD PTR [esi]
  4063a2:	int    0xab
  4063a4:	and    al,0x6f
  4063a6:	mov    ch,0x1c
  4063a8:	xor    DWORD PTR ds:0x57dc5870,eax
  4063ae:	push   ebx
  4063af:	cmp    ebp,esp
  4063b1:	mov    dl,0x39
  4063b3:	jecxz  0x40637f
  4063b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b6:	push   edx
  4063b7:	not    DWORD PTR [ebx+0x36]
  4063ba:	push   cs
  4063bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063bc:	sbb    al,0xe6
  4063be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063bf:	add    al,0x38
  4063c1:	loopne 0x4063ec
  4063c3:	adc    al,0xde
  4063c5:	jmp    0x3ddadd63
  4063ca:	pushf  
  4063cb:	add    al,0xbf
  4063cd:	jns    0x4063c4
  4063cf:	lods   eax,DWORD PTR ds:[esi]
  4063d0:	and    al,0x2e
  4063d2:	inc    edi
  4063d3:	pop    ecx
  4063d4:	dec    ecx
  4063d5:	push   esi
  4063d6:	xchg   ecx,eax
  4063d7:	pop    esp
  4063d8:	adc    eax,0xd6a2f13b
  4063dd:	int    0x8c
  4063df:	mov    ds:0xf8911110,al
  4063e4:	and    BYTE PTR [ebp-0x7721ccb1],0x2b
  4063eb:	scas   eax,DWORD PTR es:[edi]
  4063ec:	push   edi
  4063ed:	xchg   esi,eax
  4063ee:	dec    edx
  4063ef:	sysenter 
  4063f1:	gs xchg edi,eax
  4063f3:	add    eax,0xf1a60971
  4063f8:	pop    esp
  4063f9:	sub    ah,BYTE PTR [eax+0x666c2bab]
  4063ff:	cmp    al,0x7f
  406401:	retf   0x1fd5
  406404:	mov    ch,0x1a
  406406:	lock pop ds
  406408:	and    bl,BYTE PTR [esi-0x7f]
  40640b:	or     BYTE PTR [esi],al
  40640d:	xor    bl,BYTE PTR [ecx+ebx*4+0xfee1bb1]
  406414:	outs   dx,BYTE PTR ds:[esi]
  406415:	hlt    
  406416:	retf   
  406417:	push   ebx
  406418:	div    edx
  40641a:	adc    dh,cl
  40641c:	dec    edi
  40641d:	imul   edx,DWORD PTR [esi+edx*1],0x12
  406421:	(bad)  
  406422:	(bad)  
  406423:	xor    DWORD PTR [edi],0xd71164b3
  406429:	mov    esi,0xf867f22e
  40642e:	daa    
  40642f:	jns    0x4064ab
  406431:	push   cs
  406432:	leave  
  406433:	mov    ecx,0xdc1b6673
  406438:	push   ds
  406439:	jne    0x4063e9
  40643b:	pop    edi
  40643c:	sub    BYTE PTR ds:0x1ead82be,ah
  406442:	xchg   ebx,eax
  406443:	push   edx
  406444:	mov    cl,0xaf
  406446:	pop    ecx
  406447:	shl    BYTE PTR [edi],1
  406449:	stos   DWORD PTR es:[edi],eax
  40644a:	clc    
  40644b:	inc    ebx
  40644c:	pop    esp
  40644d:	inc    ebp
  40644e:	fidivr WORD PTR [ebx+0xe]
  406451:	(bad)  [edx]
  406453:	mov    ebp,0x1276a552
  406458:	lahf   
  406459:	dec    esp
  40645a:	popf   
  40645b:	or     eax,ebx
  40645d:	push   esp
  40645e:	div    BYTE PTR [ecx+0x678e8a6f]
  406464:	jecxz  0x4064ad
  406466:	adc    DWORD PTR [ebp-0x74],ebp
  406469:	xchg   esi,eax
  40646a:	mov    ecx,0xd95cb17c
  40646f:	jp     0x406442
  406471:	and    ebx,esi
  406473:	mov    ss,WORD PTR [edx-0x6b7a9de8]
  406479:	xor    DWORD PTR [esi],0x5d
  40647c:	lahf   
  40647d:	in     eax,dx
  40647e:	mov    ecx,0xe6573092
  406483:	pop    ebp
  406484:	or     esp,DWORD PTR [edi]
  406486:	pop    es
  406487:	push   eax
  406488:	(bad)  
  406489:	sub    DWORD PTR [ecx],eax
  40648b:	pop    ebp
  40648c:	sbb    DWORD PTR [esi-0x6c],edi
  40648f:	push   cs
  406490:	cmp    al,0xf5
  406492:	stos   BYTE PTR es:[edi],al
  406493:	sub    dl,dl
  406495:	pushf  
  406496:	jo     0x40642c
  406498:	xchg   BYTE PTR [eax],ah
  40649a:	stc    
  40649b:	adc    bh,BYTE PTR [ebx+0x56]
  40649e:	push   ds
  40649f:	jnp    0x406506
  4064a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a2:	xchg   edi,eax
  4064a3:	pop    ebx
  4064a4:	fcomp  DWORD PTR ds:0x8303af77
  4064aa:	in     al,dx
  4064ab:	jecxz  0x406506
  4064ad:	push   ebx
  4064ae:	test   DWORD PTR [esi+0x1e],edx
  4064b1:	add    DWORD PTR [esp+eax*1-0x37a3e7d0],eax
  4064b8:	xor    BYTE PTR [eax+0x5c],0x98
  4064bc:	mov    bl,0xb3
  4064be:	iret   
  4064bf:	push   esp
  4064c0:	mov    edx,ecx
  4064c2:	inc    eax
  4064c3:	push   ebx
  4064c4:	or     eax,0xce2d7736
  4064c9:	mov    ebp,?
  4064cb:	imul   edx,DWORD PTR [edi-0x2],0x54
  4064cf:	shl    edx,0xf9
  4064d2:	cmp    edx,esi
  4064d4:	lahf   
  4064d5:	or     al,0x94
  4064d7:	mov    ch,0xa9
  4064d9:	lods   al,BYTE PTR ds:[esi]
  4064da:	mov    ch,0x7f
  4064dc:	or     al,0x11
  4064de:	out    0x6f,al
  4064e0:	(bad)  
  4064e1:	ins    DWORD PTR es:[edi],dx
  4064e2:	sbb    al,0xf5
  4064e4:	mov    edi,0xf0c549b8
  4064e9:	adc    cl,BYTE PTR [ebp-0x49aa1ffc]
  4064ef:	sub    ecx,esi
  4064f1:	sets   BYTE PTR [ebp-0x156cfb61]
  4064f8:	add    al,0x72
  4064fa:	stc    
  4064fb:	jl     0x40651b
  4064fd:	ds in  eax,0x32
  406500:	mov    bh,0x45
  406502:	cld    
  406503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406504:	xor    al,0xa5
  406506:	mov    eax,0x393f7721
  40650b:	xor    cl,ch
  40650d:	aad    0x90
  40650f:	push   ds
  406510:	imul   eax
  406512:	xor    BYTE PTR [ebx],0x7f
  406515:	(bad)  
  406516:	ror    DWORD PTR [esi],cl
  406518:	inc    ebp
  406519:	push   es
  40651a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40651b:	xor    DWORD PTR ds:[ebx+eax*2+0x34],edi
  406520:	jno    0x406526
  406522:	inc    edx
  406523:	push   edx
  406524:	lea    eax,[ebx-0x848c52e]
  40652a:	and    edx,DWORD PTR [edx+0x37]
  40652d:	icebp  
  40652e:	sbb    ah,BYTE PTR [ebx]
  406530:	xchg   edi,eax
  406531:	push   0x6d6f5c07
  406536:	out    0x16,eax
  406538:	daa    
  406539:	mov    fs,WORD PTR [edi+0x72]
  40653c:	mov    ebp,ebp
  40653e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40653f:	fs pop ebx
  406541:	fcmovnb st,st(6)
  406543:	lds    eax,FWORD PTR [edi+edi*8]
  406546:	das    
  406547:	test   al,0x46
  406549:	leave  
  40654a:	shufps xmm6,XMMWORD PTR [esi],0xb1
  40654e:	(bad)  
  40654f:	mov    esp,ebp
  406551:	sbb    edi,ebx
  406553:	mov    ah,0x68
  406555:	xchg   BYTE PTR [ebx+ecx*2],ah
  406558:	bound  ecx,QWORD PTR [ebp-0x65]
  40655b:	ficom  DWORD PTR [edi+0x38cc6521]
  406561:	scas   al,BYTE PTR es:[edi]
  406562:	js     0x40650a
  406564:	das    
  406565:	mov    ebx,0xcc094918
  40656a:	jecxz  0x4064f5
  40656c:	cmp    eax,DWORD PTR [edi+0x43]
  40656f:	adc    al,0xa
  406571:	mov    eax,0x607d5761
  406576:	sahf   
  406577:	cmp    esp,DWORD PTR [edx+0x33]
  40657a:	sub    bh,BYTE PTR [edx]
  40657c:	xchg   ebp,eax
  40657d:	call   0x2137e709
  406582:	mov    bl,0x53
  406584:	mov    WORD PTR [eax-0x76],ss
  406587:	jge    0x4065a5
  406589:	push   esi
  40658a:	mov    dh,0x41
  40658c:	and    edx,edi
  40658e:	pusha  
  40658f:	or     eax,0x1f4a2c78
  406594:	dec    ebp
  406595:	out    0x12,al
  406597:	jg     0x4065cc
  406599:	fisub  DWORD PTR [edi-0x5b81da61]
  40659f:	sbb    DWORD PTR [ebp+0x5],0xffffff8d
  4065a3:	inc    ebp
  4065a4:	fmul   QWORD PTR [edi]
  4065a6:	mov    bh,0xd
  4065a8:	mov    ebx,0x23004346
  4065ad:	or     eax,0x4345f3
  4065b2:	mov    DWORD PTR ds:0x4346bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4345ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43470f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4345f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43464f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4345eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4345eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4345eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4345eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434647
  40660f:	push   0x43491f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4345eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	sbb    al,BYTE PTR [edi+0x50]
  40663b:	int    0x4c
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x4066a4
  406645:	(bad)  
  406646:	test   eax,0xab4cf34f
  40664b:	add    DWORD PTR [ebp+0x5c],ecx
  40664e:	pushf  
  40664f:	test   al,0x4
  406651:	neg    DWORD PTR [edi-0x74]
  406654:	add    ch,al
  406656:	pop    ebp
  406657:	or     BYTE PTR [edi-0x509c2a0],ch
  40665d:	shr    DWORD PTR [edi+eiz*2],0xcc
  406661:	sbb    BYTE PTR [edx-0x2],bl
  406664:	sbb    ah,bh
  406666:	push   edi
  406667:	sbb    BYTE PTR [ebp-0x30],bh
  40666a:	cdq    
  40666b:	mov    ds:0xd8f99f1a,eax
  406670:	imul   esp,ebx,0xf74338b1
  406676:	lss    ecx,FWORD PTR [esi+0x4f]
  40667a:	fisub  DWORD PTR [ebx+0xb780a9b]
  406680:	add    bh,ch
  406682:	cmc    
  406683:	lods   al,BYTE PTR ds:[esi]
  406684:	icebp  
  406685:	fstp   QWORD PTR [esi+0x71]
  406688:	call   0xe5549fb4
  40668d:	jbe    0x40668d
  40668f:	push   cs
  406690:	ds cli 
  406692:	rcr    edx,1
  406694:	test   DWORD PTR [ebx],eax
  406696:	push   esi
  406697:	inc    esp
  406698:	mov    eax,ds:0xe58ff269
  40669d:	fst    QWORD PTR [ecx]
  40669f:	fld    QWORD PTR [esi]
  4066a1:	test   eax,0xd99a27c3
  4066a6:	sti    
  4066a7:	xor    ecx,ecx
  4066a9:	sti    
  4066aa:	sub    dl,BYTE PTR [edx]
  4066ac:	cmp    DWORD PTR [ecx+0x2c],edi
  4066af:	mov    ebp,0x886e0e2
  4066b4:	aaa    
  4066b5:	div    DWORD PTR [ecx+0xe]
  4066b8:	dec    esi
  4066b9:	sbb    ah,BYTE PTR [ebx+0x47]
  4066bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066bd:	inc    edi
  4066be:	push   0x2e93fb7
  4066c3:	cmp    al,0xf4
  4066c5:	mov    ds:0xceefb004,al
  4066ca:	stc    
  4066cb:	sbb    bh,BYTE PTR [ecx]
  4066cd:	div    DWORD PTR [ecx]
  4066cf:	and    eax,0x1da8697a
  4066d4:	fs scas eax,DWORD PTR es:[edi]
  4066d6:	mov    dh,0xa0
  4066d8:	adc    DWORD PTR [esi],edi
  4066da:	scas   al,BYTE PTR es:[edi]
  4066db:	imul   eax,DWORD PTR [ebp+edi*1-0x2985900b],0x4b214114
  4066e6:	pushf  
  4066e7:	mov    dh,0x60
  4066e9:	cmc    
  4066ea:	aas    
  4066eb:	mov    cl,0xeb
  4066ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ee:	and    al,0xdc
  4066f0:	jp     0x4066a4
  4066f2:	dec    ebp
  4066f3:	mov    bh,ch
  4066f5:	push   ebx
  4066f6:	sbb    DWORD PTR [ebx-0xf2fff38],0xffffffa1
  4066fd:	test   eax,0xd044274c
  406702:	jle    0x406782
  406704:	lds    esp,FWORD PTR [eax]
  406706:	and    edi,DWORD PTR [edi-0x3a]
  406709:	pop    edx
  40670a:	xor    bl,BYTE PTR [ebx+ebx*2]
  40670d:	pop    esi
  40670e:	imul   esi,DWORD PTR [esi],0xfffffff1
  406711:	cwde   
  406712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406713:	cmp    al,0xad
  406715:	jbe    0x4066c8
  406717:	loope  0x406775
  406719:	mov    eax,ds:0x2f9696f3
  40671e:	test   al,0x4a
  406720:	mul    BYTE PTR [edi]
  406722:	out    0x6f,al
  406724:	jae    0x40671f
  406726:	data16 repz mov ds:0x3585a563,al
  40672d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40672e:	add    eax,0x33502a48
  406733:	ins    DWORD PTR es:[edi],dx
  406734:	into   
  406735:	cmp    BYTE PTR [ebx-0x44b48e],ah
  40673b:	adc    al,0x38
  40673d:	mov    bh,0x75
  40673f:	mov    ds:0x9c7d3672,eax
  406744:	lds    eax,FWORD PTR [edi-0x4565541]
  40674a:	aas    
  40674b:	jge    0x40671a
  40674d:	mov    edx,0x157d0716
  406752:	pop    ecx
  406753:	bound  edi,QWORD PTR [ebp-0x62]
  406756:	jle    0x40673f
  406758:	lods   al,BYTE PTR ds:[esi]
  406759:	inc    eax
  40675a:	cld    
  40675b:	test   DWORD PTR [edx-0x5485353f],ebp
  406761:	mov    esp,eax
  406763:	shr    DWORD PTR [edi+0x73],0x74
  406767:	push   esp
  406768:	retf   0xa154
  40676b:	add    DWORD PTR es:[esi+0x45],ecx
  40676f:	pushf  
  406770:	inc    eax
  406771:	iret   
  406772:	xchg   edx,eax
  406773:	jns    0x40671d
  406775:	sub    BYTE PTR [ebx],dh
  406777:	jb     0x4067dc
  406779:	cmp    al,0x45
  40677b:	fisttp DWORD PTR [edx-0x3352ec5b]
  406781:	sub    DWORD PTR [edi+0x48],0xa4171d82
  406788:	pop    ebp
  406789:	(bad)
  40678c:	push   ss
  40678d:	jp     0x4067a7
  40678f:	ja     0x406762
  406791:	icebp  
  406792:	sub    DWORD PTR [ebx+0x6c127f23],edi
  406798:	call   0xdf33:0x13888e21
  40679f:	pop    ecx
  4067a0:	push   ebx
  4067a1:	xchg   ecx,eax
  4067a2:	call   0xf820e195
  4067a7:	fs std 
  4067a9:	push   edx
  4067aa:	mov    cl,0x7f
  4067ac:	ins    BYTE PTR es:[edi],dx
  4067ad:	ret    0x2461
  4067b0:	rcl    BYTE PTR [eax+0x11],1
  4067b3:	and    eax,0xf352e45b
  4067b8:	adc    dl,BYTE PTR [edi+0xfba02e3]
  4067be:	les    ebx,FWORD PTR [esi*4+0x68d64e63]
  4067c5:	jbe    0x406846
  4067c7:	sbb    bh,BYTE PTR [ebx+0x293c595e]
  4067cd:	repz jns 0x4067fb
  4067d0:	and    esp,DWORD PTR [ecx]
  4067d2:	cli    
  4067d3:	pop    es
  4067d4:	cli    
  4067d5:	mov    al,ds:0xbb6274a3
  4067da:	mov    ah,0xb5
  4067dc:	in     al,0x4e
  4067de:	fdiv   st,st(1)
  4067e0:	ins    DWORD PTR es:[edi],dx
  4067e1:	cmp    BYTE PTR [eax+0x70],ah
  4067e4:	mov    dl,0xf4
  4067e6:	ficom  DWORD PTR [edi-0x1e973330]
  4067ec:	clc    
  4067ed:	(bad)  
  4067ee:	bnd addr16 jb 0x40686e
  4067f2:	imul   esi,DWORD PTR [ebx],0x68
  4067f5:	pop    DWORD PTR [esi-0x483d74f1]
  4067fb:	jbe    0x4067d1
  4067fd:	test   ebx,esp
  4067ff:	in     eax,dx
  406800:	into   
  406801:	jmp    0xd57a:0x72158671
  406808:	lds    ebp,FWORD PTR [eax]
  40680a:	lds    ecx,FWORD PTR [esi+0x5d5ecd5f]
  406810:	and    DWORD PTR [esi-0x47],esi
  406813:	das    
  406814:	jmp    0x54e31500
  406819:	test   eax,0x8ccaecae
  40681e:	int3   
  40681f:	cvttps2pi mm1,QWORD PTR ds:0x5abe70d8
  406826:	sahf   
  406827:	je     0x40685c
  406829:	push   cs
  40682a:	mov    ebx,0x69a1a01e
  40682f:	fmulp  st(6),st
  406831:	ret    
  406832:	cmpxchg BYTE PTR [esp+eax*1+0x3f8016f4],dh
  40683a:	(bad)  
  40683c:	sbb    BYTE PTR [ebx],ah
  40683e:	int    0x3e
  406840:	rcl    DWORD PTR [edi+0x43a4d199],1
  406846:	loop   0x4068c7
  406848:	sub    al,0xad
  40684a:	aam    0xea
  40684c:	mov    bh,0x24
  40684e:	mov    ecx,0x9081845d
  406853:	lea    esi,[esi+0x78]
  406856:	(bad)  
  406857:	pushf  
  406858:	push   es
  406859:	push   ds
  40685a:	aas    
  40685b:	or     edi,DWORD PTR [eax]
  40685d:	add    edx,DWORD PTR [ebp+0x3d]
  406860:	ret    
  406861:	test   BYTE PTR [ebp+0x639eab87],bh
  406867:	cld    
  406868:	repnz mov bh,0x69
  40686b:	aam    0xa7
  40686d:	or     eax,0x2f06a9c1
  406872:	mov    ebx,0x20041b3c
  406877:	cli    
  406878:	arpl   WORD PTR [ecx+0x12febad1],si
  40687e:	jmp    0xf52c:0x4e2a3a4b
  406885:	mov    ch,0xe7
  406887:	add    BYTE PTR [eax+0x65],0x36
  40688b:	jmp    0xfff3c731
  406890:	mov    cl,0x28
  406892:	fcom   QWORD PTR [ebx]
  406894:	add    eax,0x6b906542
  406899:	push   0x3082ba83
  40689e:	ret    0x3451
  4068a1:	jle    0x406831
  4068a3:	int3   
  4068a4:	dec    ebp
  4068a5:	mov    WORD PTR [ebp+0x55],fs
  4068a8:	and    ecx,DWORD PTR [edx+0x236b127e]
  4068ae:	xor    BYTE PTR [ebx-0x4b0d030b],0x2e
  4068b5:	loope  0x406900
  4068b7:	out    dx,al
  4068b8:	fdiv   st,st(5)
  4068ba:	cmp    dh,BYTE PTR [ebp-0x6db4772b]
  4068c0:	(bad)  
  4068c1:	fidivr DWORD PTR [eax-0x62]
  4068c4:	in     eax,dx
  4068c5:	popa   
  4068c6:	push   edx
  4068c7:	sbb    al,0x4a
  4068c9:	iret   
  4068ca:	mov    ch,0xe4
  4068cc:	mov    bl,0x57
  4068ce:	add    BYTE PTR [ebp-0x44],bh
  4068d1:	adc    ecx,esp
  4068d3:	add    DWORD PTR ds:0xde0bf287,esp
  4068d9:	int    0x8f
  4068db:	mov    cs,WORD PTR [ebx+0x2]
  4068de:	fstp   TBYTE PTR [ecx-0x51]
  4068e1:	shr    al,1
  4068e3:	sub    ebx,ebx
  4068e5:	sub    al,0x41
  4068e7:	outs   dx,DWORD PTR ds:[esi]
  4068e9:	and    bh,BYTE PTR [eax+0x7fb5416e]
  4068ef:	jb     0x4068de
  4068f1:	icebp  
  4068f2:	jg     0x406891
  4068f4:	scas   eax,DWORD PTR es:[edi]
  4068f5:	dec    ebx
  4068f6:	and    ecx,DWORD PTR [eax+0x2f3d0bef]
  4068fc:	mov    ebx,0x16382713
  406901:	popa   
  406902:	dec    eax
  406903:	adc    bh,BYTE PTR [ecx-0x36185c60]
  406909:	add    eax,0x62a5fcf7
  40690e:	aaa    
  40690f:	add    BYTE PTR [ecx],dl
  406911:	cdq    
  406912:	push   ebx
  406913:	jae    0x40694a
  406915:	push   es
  406916:	arpl   WORD PTR [esi-0x75],di
  406919:	enter  0x2014,0xda
  40691d:	popf   
  40691e:	fs xchg esp,eax
  406920:	cmp    al,0xaf
  406922:	or     edi,DWORD PTR [ebx-0x430a3d64]
  406928:	inc    edx
  406929:	lar    ecx,si
  40692c:	xchg   ebx,eax
  40692d:	mov    DWORD PTR [esi+0x71],esp
  406930:	adc    eax,0xe1cd2d
  406935:	leave  
  406936:	pop    esi
  406937:	pop    ebp
  406938:	cmp    al,0x78
  40693a:	jecxz  0x406980
  40693c:	hlt    
  40693d:	add    DWORD PTR [edx-0x8],eax
  406940:	mov    cl,0xb3
  406942:	popa   
  406943:	jnp    0x40698f
  406945:	cmc    
  406946:	imul   edx,DWORD PTR [ebx-0x6ce4ba71],0x44
  40694d:	jp     0x40692c
  40694f:	jmp    0xe0d8:0x147023df
  406956:	imul   eax,DWORD PTR [eax-0x45],0xcc44e7cc
  40695d:	(bad)  
  40695e:	mov    al,0xdf
  406960:	imul   edi,DWORD PTR [edi],0x3c
  406963:	fcom   QWORD PTR [ebx+ebx*4]
  406966:	(bad)  
  406968:	and    esp,DWORD PTR [esi+0x56]
  40696b:	mov    dh,0x7d
  40696d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40696e:	push   es
  40696f:	retf   0xaff8
  406972:	call   0xfcb7:0xc183e1a8
  406979:	enter  0x9267,0xfc
  40697d:	mov    al,0xeb
  40697f:	jns    0x406936
  406981:	mov    ds:0x560d31bc,al
  406986:	ss mov ch,0xa0
  406989:	js     0x406994
  40698b:	and    al,0x45
  40698d:	ins    DWORD PTR es:[edi],dx
  40698e:	imul   edx,DWORD PTR [ecx+ebp*8],0xdea776
  406995:	adc    dl,BYTE PTR [edx-0x1a]
  406998:	and    bh,bh
  40699a:	push   edi
  40699b:	aad    0x54
  40699d:	dec    edx
  40699e:	das    
  40699f:	call   0xa20d:0x99c6
  4069a5:	pop    esi
  4069a6:	neg    DWORD PTR [esi-0x5b57ac6b]
  4069ac:	shr    edi,1
  4069ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069af:	repnz add al,0x85
  4069b2:	int3   
  4069b3:	sbb    eax,0xf5a820a2
  4069b8:	dec    esi
  4069b9:	jmp    0x7558:0x9dd70543
  4069c0:	mov    WORD PTR [esi],cs
  4069c2:	and    al,0xe0
  4069c4:	pop    edx
  4069c5:	sub    DWORD PTR [eax+esi*8],ebx
  4069c8:	enter  0x9d93,0x4e
  4069cc:	cmp    BYTE PTR [ebx-0x5f2f6478],cl
  4069d2:	inc    esp
  4069d3:	jmp    0xc93f:0x9977a8e8
  4069da:	fisub  DWORD PTR ds:0x80d39d2b
  4069e0:	push   es
  4069e1:	cld    
  4069e2:	(bad)  
  4069e4:	rcr    BYTE PTR [edi+0x2298a973],1
  4069ea:	xor    al,0xd2
  4069ec:	inc    edi
  4069ed:	(bad)  
  4069ee:	sbb    eax,0xce3ab458
  4069f3:	fcomp  QWORD PTR [edx-0x73]
  4069f6:	xchg   edx,eax
  4069f7:	loopne 0x4069f5
  4069f9:	fadd   QWORD PTR [ebp+0x753ffbba]
  4069ff:	std    
  406a00:	xor    edi,edx
  406a02:	mov    edi,ecx
  406a04:	push   ebx
  406a05:	pop    edx
  406a06:	cmp    esi,DWORD PTR [edi]
  406a08:	sbb    al,0xbf
  406a0a:	jae    0x4069ed
  406a0c:	adc    al,BYTE PTR [ebx-0x2c]
  406a0f:	leave  
  406a10:	rcr    esp,1
  406a12:	add    BYTE PTR [ebx+0x335756d4],dh
  406a18:	stc    
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434683,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4345fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43463b,0x4346f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4345df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434637,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0xee94b2eb,eax
  406a76:	dec    edx
  406a77:	popf   
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a8b
  406a80:	xor    DWORD PTR [esi+0x5d34fe7a],ebp
  406a86:	test   BYTE PTR [esi+0xbc3ecfb],bh
  406a8c:	repnz loope 0x406ad7
  406a8f:	leave  
  406a90:	out    0x9b,eax
  406a92:	enter  0x9f36,0x1a
  406a96:	or     BYTE PTR [eax+0x4e],dl
  406a99:	jns    0x406b11
  406a9b:	add    BYTE PTR [eax],bl
  406a9d:	dec    ecx
  406a9e:	dec    edi
  406a9f:	and    BYTE PTR [ecx-0x7f52669c],dl
  406aa5:	sub    bh,BYTE PTR [edx]
  406aa7:	mov    al,ds:0x6adffa64
  406aac:	sbb    eax,0x84e5657c
  406ab1:	xor    dh,BYTE PTR [esi+0x1]
  406ab4:	cli    
  406ab5:	imul   esp,DWORD PTR [edi-0x2907e408],0xf89b988
  406abf:	xchg   edi,eax
  406ac0:	outs   dx,BYTE PTR ds:[esi]
  406ac1:	mov    bl,0x4f
  406ac3:	mov    eax,DWORD PTR [ecx+0x6]
  406ac6:	push   edi
  406ac7:	bound  eax,QWORD PTR [eax+0xb62d9e1]
  406acd:	(bad)  
  406ace:	cmp    ah,BYTE PTR [ebx-0x74]
  406ad1:	stc    
  406ad2:	lods   eax,DWORD PTR ds:[esi]
  406ad3:	scas   eax,DWORD PTR es:[edi]
  406ad4:	aam    0xfd
  406ad6:	shl    DWORD PTR [ebx],0x6f
  406ad9:	rol    ebp,cl
  406adb:	sub    edx,esi
  406add:	adc    edi,DWORD PTR [ecx+edx*2+0x78d9b8a3]
  406ae4:	fadd   QWORD PTR [ebp+0x2bac421]
  406aea:	aas    
  406aeb:	add    eax,0x80bc8e1a
  406af0:	pop    ebx
  406af1:	fisub  DWORD PTR [eax-0x290ae367]
  406af7:	inc    eax
  406af8:	xor    DWORD PTR [edx],0x74
  406afb:	xlat   BYTE PTR ds:[ebx]
  406afc:	xchg   edx,eax
  406afd:	mov    ds:0x3057c46c,eax
  406b02:	or     dl,BYTE PTR [ecx-0x20]
  406b05:	mov    ds:0x886c4e87,al
  406b0a:	cmp    ebx,ecx
  406b0c:	mov    al,ds:0xf1d2f0ea
  406b11:	mov    edx,0x6d431328
  406b16:	fst    DWORD PTR [ebp-0xa]
  406b19:	repz and ebp,DWORD PTR gs:[eax+0x89a42ba]
  406b21:	xor    eax,ebp
  406b23:	js     0x406b89
  406b25:	pop    ebx
  406b26:	out    dx,al
  406b27:	aam    0xa
  406b29:	adc    al,0xeb
  406b2b:	mov    ds:0xb8ab7452,al
  406b30:	xchg   ebx,eax
  406b31:	fimul  WORD PTR [ebx+0x607c1da0]
  406b37:	(bad)  
  406b38:	call   0xa0a04d58
  406b3d:	(bad)  
  406b3e:	adc    ebp,DWORD PTR [edx-0x73c116bf]
  406b44:	cmp    edi,DWORD PTR [edi+0xc13cd5a]
  406b4a:	adc    al,0x45
  406b4c:	leave  
  406b4d:	adc    bh,0x8d
  406b50:	mov    dh,0xd9
  406b52:	scas   al,BYTE PTR es:[edi]
  406b53:	lods   al,BYTE PTR ds:[esi]
  406b54:	jecxz  0x406b61
  406b56:	and    eax,DWORD PTR [ebp+0x6af5aaa8]
  406b5c:	mov    esp,0xccf837cc
  406b61:	mov    ebx,esp
  406b63:	adc    eax,eax
  406b65:	dec    ecx
  406b66:	xchg   ecx,eax
  406b67:	leave  
  406b68:	test   DWORD PTR [ecx],ecx
  406b6a:	cmp    BYTE PTR [edi+0x75],bl
  406b6d:	push   0xffffffed
  406b6f:	ins    DWORD PTR es:[edi],dx
  406b70:	push   esi
  406b71:	lods   eax,DWORD PTR ds:[esi]
  406b72:	jmp    0x406ba3
  406b74:	pop    ebp
  406b75:	(bad)  
  406b76:	in     eax,dx
  406b77:	jle    0x406b95
  406b79:	mov    al,ds:0xe8c42fe5
  406b7e:	or     bh,dh
  406b80:	jo     0x406b2d
  406b82:	xchg   edx,eax
  406b83:	sbb    dl,dh
  406b85:	cdq    
  406b86:	xchg   DWORD PTR [edi-0x32],edi
  406b89:	and    bl,ah
  406b8b:	iret   
  406b8c:	cmp    BYTE PTR [edi+0x24],dh
  406b8f:	dec    ebx
  406b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b91:	jmp    0x956e8103
  406b96:	fwait
  406b97:	in     eax,0x57
  406b99:	jmp    0xca44:0xef248a15
  406ba0:	jmp    0xb537d5f3
  406ba5:	sbb    al,ah
  406ba7:	pop    es
  406ba8:	mov    cl,0xa7
  406baa:	jmp    0xe63e:0x13381cae
  406bb1:	or     DWORD PTR [edx+0x45],edx
  406bb4:	xchg   ebp,eax
  406bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb6:	ror    BYTE PTR ds:0xc6d11482,1
  406bbc:	dec    esp
  406bbd:	push   ds
  406bbe:	adc    esp,0x76b2bb85
  406bc4:	mov    ecx,0x9373bb02
  406bc9:	es jae 0x406ba3
  406bcc:	retf   
  406bcd:	xor    eax,eax
  406bcf:	pop    ss
  406bd0:	add    eax,0xcd516fd9
  406bd5:	jl     0x406bfb
  406bd7:	push   es
  406bd8:	push   esi
  406bd9:	test   eax,0xbba02c7d
  406bde:	xchg   ebx,edi
  406be0:	mov    eax,ds:0x3d49a1f1
  406be5:	jle    0x406bca
  406be7:	inc    edi
  406be8:	lock jno 0x406c3d
  406beb:	(bad)  
  406bec:	std    
  406bed:	ja     0x406c5f
  406bef:	ins    BYTE PTR es:[edi],dx
  406bf0:	push   cs
  406bf1:	fisub  WORD PTR [esi]
  406bf3:	inc    eax
  406bf4:	inc    esp
  406bf5:	les    ecx,FWORD PTR ds:0x6d6d42da
  406bfb:	neg    BYTE PTR [edi-0x1c]
  406bfe:	sahf   
  406bff:	mov    ebx,0xfcad8e76
  406c04:	loopne 0x406c1b
  406c06:	xchg   edx,eax
  406c07:	outs   dx,DWORD PTR ds:[esi]
  406c08:	pop    edi
  406c09:	jg     0x406bc1
  406c0b:	mov    al,0x5
  406c0d:	arpl   WORD PTR [edi+0x2c],ax
  406c10:	lods   al,BYTE PTR ds:[esi]
  406c11:	aad    0xa6
  406c13:	cmovno esi,DWORD PTR [edi+0x59b91125]
  406c1a:	dec    edx
  406c1b:	pop    edi
  406c1c:	cmp    al,0xa0
  406c1e:	call   0x8eb3:0x3c442271
  406c25:	mov    WORD PTR [esi],ds
  406c27:	fistp  DWORD PTR [edx+edx*8+0x5573735c]
  406c2e:	pusha  
  406c2f:	scas   al,BYTE PTR es:[edi]
  406c30:	iret   
  406c31:	arpl   WORD PTR [eax+0xa],ax
  406c34:	sbb    edx,DWORD PTR [edi]
  406c36:	jns    0x406ca9
  406c38:	out    dx,eax
  406c39:	inc    ebp
  406c3a:	push   esp
  406c3b:	les    ebp,FWORD PTR ds:0xb9b922a2
  406c41:	add    DWORD PTR [ebx+eiz*2],edx
  406c44:	push   es
  406c45:	outs   dx,DWORD PTR ds:[esi]
  406c46:	push   ebx
  406c47:	and    al,0xc7
  406c49:	aad    0x41
  406c4b:	lods   al,BYTE PTR ds:[esi]
  406c4c:	adc    BYTE PTR [edx-0x77c150fd],bh
  406c52:	push   cs
  406c53:	hlt    
  406c54:	xchg   esi,eax
  406c55:	in     al,0xb4
  406c57:	jno    0x406cd1
  406c59:	(bad)  
  406c5a:	mov    esp,0xed8ca07a
  406c5f:	icebp  
  406c60:	adc    ebx,edx
  406c62:	rcr    BYTE PTR [esi],1
  406c64:	loope  0x406c12
  406c66:	arpl   WORD PTR [esi+edx*2+0x16129276],sp
  406c6d:	scas   eax,DWORD PTR es:[edi]
  406c6e:	aaa    
  406c6f:	mov    ch,0xc3
  406c71:	and    eax,0xe2ea7979
  406c76:	push   0x70
  406c78:	jp     0x406c34
  406c7a:	js     0x406cd9
  406c7c:	sbb    BYTE PTR ds:0x3e857da1,bl
  406c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c83:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406c85:	outs   dx,BYTE PTR ds:[esi]
  406c86:	sbb    al,0xa8
  406c88:	and    BYTE PTR [edx],bh
  406c8a:	xchg   edx,eax
  406c8b:	mov    ch,0x33
  406c8d:	jo     0x406cc1
  406c8f:	cmp    esp,DWORD PTR [ebp+0x79]
  406c92:	jnp    0x406c83
  406c94:	aam    0xf2
  406c96:	sub    eax,0xccd7f87f
  406c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c9c:	fs pop es
  406c9e:	push   ebx
  406c9f:	adc    DWORD PTR [edi+0x3e],ebp
  406ca2:	jle    0x406d16
  406ca4:	pop    ebp
  406ca5:	pusha  
  406ca6:	xchg   edi,eax
  406ca7:	sbb    al,0xdc
  406ca9:	rcr    BYTE PTR [ebx-0x39ebdd62],0xf2
  406cb0:	mov    ebx,DWORD PTR [ebx-0x376e5f9e]
  406cb6:	or     eax,0xcd296eb2
  406cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cbc:	sub    cl,0x56
  406cbf:	xchg   edx,eax
  406cc0:	out    0x12,eax
  406cc2:	or     eax,0x956eef70
  406cc7:	mov    dl,0x6b
  406cc9:	jle    0x406c71
  406ccb:	fs aam 0xe1
  406cce:	bound  esi,QWORD PTR [edx+0x3b]
  406cd1:	inc    eax
  406cd2:	inc    edx
  406cd3:	cmc    
  406cd4:	xlat   BYTE PTR ds:[ebx]
  406cd5:	loop   0x406c60
  406cd7:	and    DWORD PTR [ecx+0x3d],0x870dd09c
  406cde:	and    al,0xc2
  406ce0:	push   0x11
  406ce2:	test   eax,0xe12bfd50
  406ce7:	pop    edi
  406ce8:	outs   dx,DWORD PTR ds:[esi]
  406ce9:	xor    eax,0xf1865490
  406cee:	sub    al,0x5e
  406cf0:	cld    
  406cf1:	mov    esp,0x298b18aa
  406cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf7:	push   cs
  406cf8:	div    ch
  406cfa:	push   ebx
  406cfb:	test   edx,eax
  406cfd:	inc    edi
  406cfe:	je     0x406ca7
  406d00:	mov    esp,0xd9da18e4
  406d05:	popa   
  406d06:	push   ebx
  406d07:	pop    edx
  406d08:	mov    DWORD PTR [ecx-0x1d],ecx
  406d0b:	pop    ecx
  406d0c:	(bad)  
  406d0d:	not    DWORD PTR [edi+0xf]
  406d10:	sub    ebp,ebp
  406d12:	(bad)  
  406d13:	push   ebp
  406d14:	outs   dx,BYTE PTR ds:[esi]
  406d15:	dec    BYTE PTR [edx+0x52b395c2]
  406d1b:	jo     0x406d67
  406d1d:	call   0x41f6:0xdc4b71b7
  406d24:	scas   eax,DWORD PTR es:[edi]
  406d25:	and    eax,0x15356baf
  406d2a:	cli    
  406d2b:	popf   
  406d2c:	pop    eax
  406d2d:	push   eax
  406d2e:	or     al,0x13
  406d30:	and    DWORD PTR [esi+0x5e197015],ebp
  406d36:	test   BYTE PTR [esi-0x19b36cd8],dh
  406d3c:	fidiv  WORD PTR [esi+edx*2]
  406d3f:	sub    cl,BYTE PTR [esi]
  406d41:	ins    DWORD PTR es:[edi],dx
  406d42:	cmp    cl,BYTE PTR [edx]
  406d44:	mov    al,0x8c
  406d46:	cmp    ah,dh
  406d48:	lods   eax,DWORD PTR ds:[esi]
  406d49:	jl     0x406d5f
  406d4b:	mov    dl,0xf3
  406d4d:	loopne 0x406d66
  406d4f:	mov    al,ds:0x94f4c704
  406d54:	loope  0x406db7
  406d56:	mov    DWORD PTR [ebx-0x1b],eax
  406d59:	jle    0x406d7b
  406d5b:	xor    al,0x8e
  406d5d:	adc    ecx,ebp
  406d5f:	pop    ebx
  406d60:	aam    0xf3
  406d62:	in     al,0x4c
  406d64:	mov    edx,0xbbc28516
  406d69:	xchg   ebp,eax
  406d6a:	int3   
  406d6b:	pop    ss
  406d6c:	fisttp QWORD PTR [ecx+0xb]
  406d6f:	or     esi,DWORD PTR [eax]
  406d71:	mov    esp,0x793d76be
  406d76:	fcom   QWORD PTR ss:[ebx-0x7c]
  406d7a:	cmc    
  406d7b:	jae    0x406d61
  406d7d:	popf   
  406d7e:	ss cmp ch,ah
  406d81:	retf   0x1b2
  406d84:	pandn  mm3,QWORD PTR [edx-0xc8f1808]
  406d8b:	outs   dx,DWORD PTR ds:[esi]
  406d8c:	addr16 jne 0x406dd1
  406d8f:	cli    
  406d90:	adc    edi,DWORD PTR [ecx-0x73f33d65]
  406d96:	aam    0x6f
  406d98:	sti    
  406d99:	dec    esp
  406d9a:	adc    BYTE PTR [edi+0x32],ah
  406d9d:	dec    esi
  406d9e:	dec    ebp
  406d9f:	sbb    DWORD PTR [edi-0x6f],esi
  406da2:	sbb    edx,DWORD PTR [edi+0x2e876ddf]
  406da8:	test   ebx,ecx
  406daa:	inc    ebp
  406dab:	mov    bl,0x9b
  406dad:	jo     0x406e0f
  406daf:	xchg   ebp,eax
  406db0:	add    BYTE PTR [ebp+esi*2-0x58],0xc9
  406db5:	stc    
  406db6:	pusha  
  406db7:	cmp    DWORD PTR [esi],eax
  406db9:	sbb    al,0x2a
  406dbb:	mov    bh,0xdd
  406dbd:	stc    
  406dbe:	xor    BYTE PTR [edi-0x26],0x37
  406dc2:	mov    cl,0xf1
  406dc4:	lods   eax,DWORD PTR ds:[esi]
  406dc5:	into   
  406dc6:	cmp    BYTE PTR [edx+eax*1-0x63],ah
  406dca:	pusha  
  406dcb:	call   0x562f:0x81ef7179
  406dd2:	push   0x9b70a010
  406dd7:	mov    edx,0x7c1f820f
  406ddc:	lock lds ebp,FWORD PTR [eax+0x46]
  406de0:	lods   al,BYTE PTR ds:[esi]
  406de1:	sti    
  406de2:	(bad)  
  406de3:	aam    0x9
  406de5:	stos   DWORD PTR es:[edi],eax
  406de6:	ret    0xc591
  406de9:	jne    0x406e25
  406deb:	sub    al,0xeb
  406ded:	pop    ss
  406dee:	xchg   esp,eax
  406def:	pop    edi
  406df0:	xchg   ecx,edi
  406df2:	xchg   esp,eax
  406df3:	aas    
  406df4:	jae    0x406e32
  406df6:	sahf   
  406df7:	in     al,dx
  406df8:	cmp    eax,0x996f2d0a
  406dfd:	pop    ss
  406dfe:	or     eax,edx
  406e00:	xor    cl,al
  406e02:	pusha  
  406e03:	loopne 0x406dcd
  406e05:	loop   0x406da6
  406e07:	imul   ebp,DWORD PTR [edx+0x23],0xa8ed5ac5
  406e0e:	in     eax,0x53
  406e10:	inc    esp
  406e11:	dec    edx
  406e12:	inc    edx
  406e13:	fdivr  QWORD PTR [edx+0x33]
  406e16:	daa    
  406e17:	daa    
  406e18:	cmc    
  406e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1a:	fnstsw WORD PTR [ebx]
  406e1c:	ins    DWORD PTR es:[edi],dx
  406e1d:	shr    ah,0xad
  406e20:	xchg   ebp,eax
  406e21:	and    edx,eax
  406e23:	cmp    esi,DWORD PTR [ecx+0x1d]
  406e26:	out    0x45,al
  406e28:	cwde   
  406e29:	out    dx,al
  406e2a:	xlat   BYTE PTR ds:[ebx]
  406e2b:	inc    ebx
  406e2c:	lods   eax,DWORD PTR ds:[esi]
  406e2d:	jbe    0x406e37
  406e2f:	mov    WORD PTR [esi],es
  406e31:	cwde   
  406e32:	xor    ch,BYTE PTR [ecx+0x4d]
  406e35:	mov    ah,0x47
  406e37:	int    0x36
  406e39:	pop    ebp
  406e3a:	idiv   cl
  406e3c:	mov    dl,0x84
  406e3e:	mov    esp,0x33399ea5
  406e43:	ds and eax,0x579243ca
  406e49:	sti    
  406e4a:	stos   DWORD PTR es:[edi],eax
  406e4b:	stos   BYTE PTR es:[edi],al
  406e4c:	cmp    al,0xfd
  406e4e:	shl    DWORD PTR [esi-0x381faa75],cl
  406e54:	add    eax,0x434647
  406e59:	add    BYTE PTR [esi+0x0],bh
  406e5c:	add    cl,ch
  406e5e:	jmp    0x86406e66
  406e63:	shl    BYTE PTR [ebx-0x62a68c68],cl
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0xd484241]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406ef1
  406e7b:	xor    BYTE PTR [esi],bh
  406e7d:	les    edx,FWORD PTR [ebx-0xa20b373]
  406e83:	jecxz  0x406eb8
  406e85:	test   DWORD PTR ds:[ebp+0x3da89fc2],0x28d30b95
  406e90:	sub    al,0xfa
  406e92:	fs (bad) 
  406e94:	lods   al,BYTE PTR ds:[esi]
  406e95:	mov    DWORD PTR [edi+0x57],edx
  406e98:	shr    BYTE PTR ds:0x292997b2,1
  406e9e:	xor    BYTE PTR [ebx+edx*8+0x5ebd32ab],dl
  406ea5:	pop    ss
  406ea6:	push   ss
  406ea7:	pop    ss
  406ea8:	ins    BYTE PTR es:[edi],dx
  406ea9:	and    DWORD PTR [ebp-0x7ee0262d],esp
  406eaf:	cmovg  esp,esp
  406eb2:	rol    ah,0xd1
  406eb5:	mov    dx,WORD PTR [edx-0x1953b9b5]
  406ebc:	mov    esi,0x4e24c2a9
  406ec1:	cmp    eax,0x1860d3e3
  406ec6:	cld    
  406ec7:	js     0x406f15
  406ec9:	or     BYTE PTR [esi+0x50],bl
  406ecc:	push   ss
  406ecd:	add    eax,0x7c8dec81
  406ed2:	repz inc ebp
  406ed4:	mov    dh,0xda
  406ed6:	mov    dh,0x6d
  406ed8:	mov    eax,ds:0xe1473529
  406edd:	xlat   BYTE PTR ds:[ebx]
  406ede:	test   eax,0x71475944
  406ee3:	sub    ch,BYTE PTR [ebx+eax*8+0x11]
  406ee7:	mov    bl,0x36
  406ee9:	sti    
  406eea:	sub    DWORD PTR [ebp-0x715664a4],ebp
  406ef0:	mov    ch,0x48
  406ef2:	mov    al,BYTE PTR [edi]
  406ef4:	in     eax,0x71
  406ef6:	cmp    ebp,DWORD PTR [ebx+0x54]
  406ef9:	mov    esp,DWORD PTR [edi-0x75d4b261]
  406eff:	push   esi
  406f00:	mov    DWORD PTR [edx+0x4360d894],ebp
  406f06:	(bad)
  406f09:	dec    esi
  406f0a:	mov    ds:0x66bf9832,al
  406f0f:	xchg   ebx,eax
  406f10:	mov    bl,0x4
  406f12:	adc    BYTE PTR [eax],ch
  406f14:	mov    ds:0x217411bd,eax
  406f19:	mov    bl,0x25
  406f1b:	pop    esp
  406f1c:	pop    esi
  406f1d:	je     0x406f87
  406f1f:	ins    DWORD PTR es:[edi],dx
  406f20:	xlat   BYTE PTR ds:[ebx]
  406f21:	(bad)  
  406f22:	xlat   BYTE PTR ds:[ebx]
  406f23:	add    eax,0xfe231e2d
  406f28:	ja     0x406f99
  406f2a:	xlat   BYTE PTR ds:[ebx]
  406f2b:	ds cli 
  406f2d:	data16 or al,0x1e
  406f30:	popa   
  406f31:	inc    esi
  406f32:	push   cs
  406f33:	cmp    ecx,ecx
  406f35:	mov    edx,0xffd02cc6
  406f3a:	pop    esp
  406f3b:	ja     0x406f22
  406f3d:	push   ss
  406f3e:	mov    al,ds:0x731736c3
  406f43:	sbb    al,0xb2
  406f45:	pop    eax
  406f46:	nop
  406f47:	ror    DWORD PTR [eax-0x1f],0x99
  406f4b:	frstor [edi]
  406f4d:	lea    edi,[edx+0x72004c41]
  406f53:	jo     0x406f99
  406f55:	(bad)  
  406f57:	jl     0x406fb3
  406f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f5a:	mov    bl,0x47
  406f5c:	jbe    0x406ee5
  406f5e:	jg     0x406f44
  406f60:	push   es
  406f61:	mov    ecx,0xccf31adc
  406f66:	into   
  406f67:	and    ah,BYTE PTR [ebx]
  406f69:	lods   al,BYTE PTR ds:[esi]
  406f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f6b:	sub    DWORD PTR [eax],eax
  406f6d:	scas   al,BYTE PTR es:[edi]
  406f6e:	aam    0xbf
  406f70:	je     0x406f4d
  406f72:	fs xor cl,ah
  406f75:	clc    
  406f76:	jg     0x406f28
  406f78:	(bad)  
  406f79:	nop
  406f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f7b:	popf   
  406f7c:	and    esp,DWORD PTR [ebx]
  406f7e:	add    ebx,DWORD PTR [eax-0x7aef0d00]
  406f84:	in     al,dx
  406f85:	jno    0x406f9e
  406f87:	mov    ch,0x92
  406f89:	mov    cl,0x7
  406f8b:	popf   
  406f8c:	inc    esp
  406f8d:	scas   eax,DWORD PTR es:[edi]
  406f8e:	mov    WORD PTR [eax-0x4b],fs
  406f91:	enter  0x2cb8,0x29
  406f95:	(bad)  
  406f96:	(bad)  
  406f97:	ja     0x406fc8
  406f99:	enter  0x4c0e,0x9e
  406f9d:	aas    
  406f9e:	push   cs
  406f9f:	in     eax,dx
  406fa0:	shr    DWORD PTR [esi+0xe91d13f],cl
  406fa6:	(bad)  
  406fa7:	in     eax,0x92
  406fa9:	in     eax,0x1d
  406fab:	add    eax,0xa79ff654
  406fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb1:	into   
  406fb2:	or     al,0x29
  406fb4:	lock pop es
  406fb6:	cs fwait
  406fb8:	mov    esi,0x8f378767
  406fbd:	jns    0x40702e
  406fbf:	pop    eax
  406fc0:	loop   0x406f8a
  406fc2:	or     DWORD PTR [eax+0x3186dc9f],eax
  406fc8:	je     0x406f4a
  406fca:	stos   DWORD PTR es:[edi],eax
  406fcb:	sub    eax,0xba64b592
  406fd0:	mov    ch,0xc6
  406fd2:	mov    edi,0xdf2fc204
  406fd7:	cmp    ecx,DWORD PTR [esi]
  406fd9:	sbb    BYTE PTR [ebx+0x50],bh
  406fdc:	out    0xca,eax
  406fde:	mov    bh,0x12
  406fe0:	shl    DWORD PTR [ecx+0x1b425bc0],cl
  406fe6:	add    BYTE PTR [edi-0x33bdd463],al
  406fec:	adc    eax,0xa646532d
  406ff1:	jmp    0x40700b
  406ff3:	outs   dx,BYTE PTR ds:[esi]
  406ff4:	sub    BYTE PTR [ecx+0x37],bh
  406ff7:	adc    ah,al
  406ff9:	aaa    
  406ffa:	xchg   ecx,eax
  406ffb:	jbe    0x407021
  406ffd:	jo     0x40707a
  406fff:	mov    al,ds:0x912fb9a9
  407004:	out    0xb2,al
  407006:	lods   eax,DWORD PTR ds:[esi]
  407007:	jmp    0x407021
  407009:	mov    ah,0x9f
  40700b:	outs   dx,BYTE PTR ds:[esi]
  40700c:	(bad)  
  40700d:	xchg   edi,eax
  40700e:	(bad)  
  40700f:	sbb    BYTE PTR [ecx-0x20],dl
  407012:	outs   dx,BYTE PTR ds:[esi]
  407013:	ds xor al,dl
  407016:	jae    0x406feb
  407018:	mov    ebp,esp
  40701a:	loopne 0x406fca
  40701c:	adc    edx,edx
  40701e:	(bad)  
  40701f:	into   
  407020:	clc    
  407021:	mov    ?,WORD PTR [ecx]
  407023:	xchg   edx,eax
  407024:	jnp    0x407057
  407026:	pop    eax
  407027:	imul   esp,DWORD PTR [esi],0xd702623d
  40702d:	or     edx,DWORD PTR [ebx]
  40702f:	sub    bl,ah
  407031:	in     eax,dx
  407032:	sbb    BYTE PTR [edx+0x66],dh
  407035:	add    al,0xba
  407037:	xor    esp,DWORD PTR [esp+edx*4+0x5a66c27f]
  40703e:	cmp    bl,dh
  407040:	lods   eax,DWORD PTR ds:[esi]
  407041:	xchg   DWORD PTR [edx-0x5e3c0d83],ebp
  407047:	pop    edx
  407048:	es dec eax
  40704a:	xchg   DWORD PTR [esi-0x371418d],edx
  407050:	repz push edx
  407052:	(bad)  
  407053:	jmp    0x815dc691
  407058:	add    dl,BYTE PTR [esi]
  40705a:	jbe    0x4070d3
  40705c:	ins    BYTE PTR es:[edi],dx
  40705d:	mov    eax,0x315e4f73
  407062:	jecxz  0x40708c
  407064:	or     BYTE PTR [ecx+ecx*1-0x51],0x32
  407069:	ret    0x6e10
  40706c:	cmp    cl,ch
  40706e:	add    DWORD PTR [edx+0x17512d9f],eax
  407074:	xor    eax,0x9b444c36
  407079:	inc    edx
  40707a:	test   eax,0xf36b3f77
  40707f:	xlat   BYTE PTR ds:[ebx]
  407080:	test   eax,0x96794245
  407085:	loopne 0x40701e
  407087:	jecxz  0x4070f7
  407089:	adc    BYTE PTR [edi-0x79],ah
  40708c:	mov    ebp,0x89cfd61c
  407091:	xchg   ebp,ebp
  407093:	aaa    
  407094:	pop    ecx
  407095:	jae    0x407027
  407097:	out    dx,al
  407098:	sub    al,0xae
  40709a:	ror    DWORD PTR [eax],cl
  40709c:	mov    ds:0x1d759f9c,eax
  4070a1:	sub    eax,0x1247c71f
  4070a6:	pop    esi
  4070a7:	xchg   esi,eax
  4070a8:	lods   al,BYTE PTR ds:[esi]
  4070a9:	(bad)  
  4070aa:	sti    
  4070ab:	mov    esp,0xba7572d8
  4070b0:	popf   
  4070b1:	cmp    BYTE PTR [eax+0x19],dl
  4070b4:	repnz and BYTE PTR [esi],dl
  4070b7:	push   edx
  4070b8:	cmc    
  4070b9:	dec    esi
  4070ba:	dec    DWORD PTR [ebx+eiz*1+0x62]
  4070be:	push   ebx
  4070bf:	mov    esp,0x55d95db7
  4070c4:	pop    ds
  4070c5:	out    0xde,al
  4070c7:	test   al,0xfb
  4070c9:	jp     0x40707f
  4070cb:	cmp    BYTE PTR [eax],ah
  4070cd:	jg     0x407129
  4070cf:	into   
  4070d0:	popf   
  4070d1:	mov    bh,BYTE PTR [eax+0x7f]
  4070d4:	jg     0x4070c1
  4070d6:	adc    edi,DWORD PTR ss:0xd895afe4
  4070dd:	mov    es,WORD PTR [ebx+0x1d79f93a]
  4070e3:	or     ebx,DWORD PTR [ebp-0x14661515]
  4070e9:	out    0x2b,eax
  4070eb:	jecxz  0x40709b
  4070ed:	ja     0xea2075ec
  4070f3:	sbb    al,0xfe
  4070f5:	js     0x407173
  4070f7:	mov    esp,0xbebb8d9b
  4070fc:	push   edx
  4070fd:	and    dl,BYTE PTR cs:[edx+0x1b]
  407101:	xor    al,0x88
  407103:	jnp    0x4070de
  407105:	mov    ch,0xcc
  407107:	cmp    DWORD PTR [ebp+0x30],0xfffffff6
  40710b:	int    0xc3
  40710d:	jp     0x407128
  40710f:	scas   eax,DWORD PTR es:[edi]
  407110:	lahf   
  407111:	adc    al,0xee
  407113:	aas    
  407114:	push   ebx
  407115:	popf   
  407116:	pop    eax
  407117:	test   eax,0x3d17ab70
  40711c:	or     ch,bl
  40711e:	mov    cl,0xa9
  407120:	mov    eax,ds:0x98fc56cf
  407125:	jae    0x4070e6
  407127:	sub    bl,BYTE PTR [ebx+edi*2+0x3ad94dc4]
  40712e:	sbb    bh,BYTE PTR [edi]
  407130:	mov    ebx,ebx
  407132:	dec    esp
  407133:	dec    ebp
  407134:	pushf  
  407135:	and    bl,BYTE PTR [eax+0x2b5c645b]
  40713b:	dec    ebx
  40713c:	mul    DWORD PTR [ebx-0x7adb4f0c]
  407142:	lock imul ecx,DWORD PTR [ebx-0x23],0x960e7962
  40714a:	push   0x21e63262
  40714f:	test   al,0x36
  407151:	fidivr WORD PTR [edi+0x71]
  407154:	fwait
  407155:	pusha  
  407156:	xchg   esp,eax
  407157:	pop    eax
  407158:	into   
  407159:	scas   al,BYTE PTR es:[edi]
  40715a:	inc    si
  40715c:	or     BYTE PTR [edx-0x1cbed290],dl
  407162:	or     DWORD PTR [edi],ecx
  407164:	add    dh,BYTE PTR [ebx]
  407166:	loopne 0x4071d5
  407168:	adc    eax,0x3e16bd9
  40716d:	sbb    al,0x89
  40716f:	push   ebp
  407170:	pop    ecx
  407171:	icebp  
  407172:	ds call 0x9c67ff17
  407178:	mov    ecx,0x55a2a9fe
  40717d:	rdpmc  
  40717f:	retf   
  407180:	sti    
  407181:	jge    0x4071ba
  407183:	push   esp
  407184:	dec    eax
  407185:	pop    edx
  407186:	int    0x87
  407188:	jb     0x4071a7
  40718a:	into   
  40718b:	or     eax,0x7014478
  407190:	sub    ecx,DWORD PTR [ebx+0x19]
  407193:	xchg   ebp,eax
  407194:	es stos DWORD PTR es:[edi],eax
  407196:	les    edx,FWORD PTR [esi-0x36]
  407199:	adc    BYTE PTR [esp+eiz*2+0x2d097d68],cl
  4071a0:	sub    WORD PTR [edx+0x48794814],dx
  4071a7:	adc    al,0x7d
  4071a9:	fs (bad) 
  4071ab:	or     BYTE PTR [bx],dl
  4071ae:	push   ecx
  4071af:	xchg   edx,eax
  4071b0:	mov    edx,0x885fd2f5
  4071b5:	(bad)  
  4071b6:	out    dx,eax
  4071b7:	push   ss
  4071b8:	fs cdq 
  4071ba:	and    eax,0x781d9006
  4071bf:	imul   esp,DWORD PTR [edx-0x60],0xffffff9e
  4071c3:	dec    eax
  4071c4:	add    al,0x18
  4071c6:	cld    
  4071c7:	test   BYTE PTR [eax+0x2fab208f],al
  4071cd:	jp     0x4071e7
  4071cf:	pop    ecx
  4071d0:	sbb    ch,BYTE PTR [ebx]
  4071d2:	or     DWORD PTR [edx+0xa7dafdb],ebx
  4071d8:	cmp    ecx,DWORD PTR [ebp+ebx*4+0x66ae550a]
  4071df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071e0:	cmp    al,0xfe
  4071e2:	mov    edi,0x82973449
  4071e7:	xor    BYTE PTR [eax],0x52
  4071ea:	stc    
  4071eb:	pop    eax
  4071ec:	je     0x40720c
  4071ee:	or     eax,ebx
  4071f0:	jno    0x40726e
  4071f2:	clc    
  4071f3:	nop
  4071f4:	call   0xe9f3:0xaa2c7428
  4071fb:	imul   edx,DWORD PTR [edx],0xffffffb1
  4071fe:	push   esp
  4071ff:	dec    esp
  407200:	cwde   
  407201:	push   es
  407202:	(bad)  
  407203:	leave  
  407204:	imul   esi,DWORD PTR [ebp-0x15021335],0xffffffd8
  40720b:	xchg   ecx,eax
  40720c:	jne    0x4071d9
  40720e:	sahf   
  40720f:	pop    esi
  407210:	cmp    dl,BYTE PTR [edi-0x5b]
  407213:	mov    ds:0x210e3502,eax
  407218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407219:	lss    eax,FWORD PTR [ecx+0x28]
  40721d:	xor    al,0xde
  40721f:	sub    DWORD PTR [edi],eax
  407221:	(bad)  
  407222:	push   ebp
  407223:	sub    BYTE PTR [eax-0x6a418cf6],dh
  407229:	test   DWORD PTR [edx-0x72],ebx
  40722c:	adc    bh,cl
  40722e:	aaa    
  40722f:	xor    eax,0xdc531310
  407234:	outs   dx,BYTE PTR ds:[esi]
  407235:	push   ds
  407236:	mov    edi,DWORD PTR [edx+0x74]
  407239:	scas   al,BYTE PTR es:[edi]
  40723a:	aas    
  40723b:	loopne 0x407291
  40723d:	and    eax,0xde902f9
  407242:	ds ret 
  407244:	or     eax,0x5522502e
  407249:	(bad)  
  40724a:	xrelease mov DWORD PTR [ebp-0x2c],0x4f39
  407252:	mov    DWORD PTR ds:0x4345ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4345df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434713,0x4345e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434607
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4345fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43464b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43463b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4346ef
  4072cc:	mov    eax,ds:0x434733
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x72907a48
  4072fa:	mov    ds:0xcf3ff25d,al
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x40736f
  407306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407307:	shl    BYTE PTR [ebp-0x2beb7257],cl
  40730d:	add    al,0xb6
  40730f:	scas   eax,DWORD PTR es:[edi]
  407310:	sbb    eax,DWORD PTR ss:[bp+si]
  407314:	popf   
  407315:	test   BYTE PTR ds:0x24b6f079,0x1c
  40731c:	mov    edi,0x452a0081
  407321:	mov    al,0x50
  407323:	xchg   DWORD PTR [edx+edx*1],ebx
  407326:	in     eax,0x8d
  407328:	xor    DWORD PTR [esi-0x9],ebx
  40732b:	inc    ebp
  40732c:	in     al,dx
  40732d:	les    edx,FWORD PTR [esi+0x5b]
  407330:	push   es
  407331:	add    al,0x31
  407333:	jno    0x4072e7
  407335:	dec    edi
  407336:	xlat   BYTE PTR ds:[ebx]
  407337:	sub    eax,ebx
  407339:	popa   
  40733a:	cmp    BYTE PTR [ecx+0x75adb315],bh
  407340:	xor    eax,DWORD PTR [ebx-0x75a88baf]
  407346:	lds    esp,FWORD PTR [eax-0x79]
  407349:	aas    
  40734a:	pop    ss
  40734b:	imul   esi,DWORD PTR [ebx-0x4f993af0],0x36
  407352:	sbb    edi,0xfffffffb
  407355:	cdq    
  407356:	xchg   ecx,ecx
  407358:	sbb    al,0x2c
  40735a:	scas   al,BYTE PTR es:[edi]
  40735b:	jnp    0x407330
  40735d:	or     BYTE PTR [eax-0x46],bh
  407360:	and    al,0x41
  407362:	test   ebx,esp
  407364:	push   es
  407365:	xchg   ebx,eax
  407366:	lods   al,BYTE PTR ds:[esi]
  407367:	rol    eax,cl
  407369:	fwait
  40736a:	shl    BYTE PTR [ecx],1
  40736c:	adc    eax,edx
  40736e:	jl     0x4072f0
  407370:	jbe    0x4072f4
  407372:	(bad)  
  407373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407374:	daa    
  407375:	cmp    eax,0xf4287b51
  40737a:	pushf  
  40737b:	and    eax,DWORD PTR [ebx]
  40737d:	xchg   esi,eax
  40737e:	pop    esi
  40737f:	in     eax,dx
  407380:	cwde   
  407381:	ret    
  407382:	fwait
  407383:	bound  ebp,QWORD PTR [edx]
  407385:	add    DWORD PTR [ecx+0x30],esi
  407388:	jle    0x4073d4
  40738a:	inc    esi
  40738b:	jmp    0x9e2dc497
  407390:	dec    ebx
  407391:	fstp   DWORD PTR [edx]
  407393:	sub    DWORD PTR [esi],edi
  407395:	inc    edx
  407396:	ret    
  407397:	ss jle 0x4073ad
  40739a:	push   eax
  40739b:	out    dx,eax
  40739c:	push   0x14
  40739e:	loopne 0x407335
  4073a0:	jmp    0x8810:0xc94d9900
  4073a7:	int3   
  4073a8:	gs stc 
  4073aa:	jp     0x4073a7
  4073ac:	iret   
  4073ad:	inc    eax
  4073ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073af:	fimul  DWORD PTR [eax+0x710a5c92]
  4073b5:	dec    edi
  4073b6:	fnstenv [ecx-0x2e]
  4073b9:	dec    ebx
  4073ba:	adc    eax,0xcda793bb
  4073bf:	gs mov edx,0xb42aefe5
  4073c5:	ficomp DWORD PTR [eax+0x22]
  4073c8:	scas   al,BYTE PTR es:[edi]
  4073c9:	cmp    eax,0xfd477d02
  4073ce:	push   edi
  4073cf:	pop    esp
  4073d0:	enter  0x3790,0xed
  4073d4:	fcom   QWORD PTR [eax-0x24c37564]
  4073da:	shl    al,cl
  4073dc:	dec    ecx
  4073dd:	mov    ds:0x5bd0a395,eax
  4073e2:	les    edi,FWORD PTR [eax-0x2b]
  4073e5:	sub    bh,BYTE PTR [ebx+0x5]
  4073e8:	lds    esi,FWORD PTR [esi+0x254101f7]
  4073ee:	test   eax,0xf2f6d75e
  4073f3:	(bad)  
  4073f4:	cmc    
  4073f5:	pop    es
  4073f6:	and    bl,BYTE PTR [esi]
  4073f8:	repz dec edi
  4073fa:	popf   
  4073fb:	retf   
  4073fc:	cmp    ebx,DWORD PTR [ebp+edi*2-0x4b]
  407400:	mov    ah,0x96
  407402:	mov    ah,BYTE PTR [ebp-0xf576796]
  407408:	add    DWORD PTR [ebx+0x31],ebp
  40740b:	out    dx,eax
  40740c:	xor    eax,0x897b608c
  407411:	mov    ds:0x8745d9b4,al
  407416:	imul   esp,DWORD PTR [edi+edi*4-0x20e5aaee],0x24da4343
  407421:	(bad)  
  407423:	jg     0x407479
  407425:	sbb    dl,BYTE PTR [esi+0x4ba0d8f2]
  40742b:	xor    BYTE PTR [esi],al
  40742d:	dec    esp
  40742e:	xchg   esp,eax
  40742f:	retf   0x5525
  407432:	jle    0x407458
  407434:	test   DWORD PTR [eax],ecx
  407436:	lods   al,BYTE PTR ds:[esi]
  407437:	pop    ds
  407438:	or     edx,DWORD PTR [edx]
  40743a:	cdq    
  40743b:	(bad)  
  40743c:	mov    ecx,0xc011947c
  407441:	out    0x9e,al
  407443:	or     dl,ch
  407445:	mov    DWORD PTR [ecx-0x3d],edx
  407448:	mov    al,0x6a
  40744a:	dec    ebp
  40744b:	popf   
  40744c:	loope  0x40740d
  40744e:	xor    ah,BYTE PTR [eax+0x2e337980]
  407454:	(bad)  
  407455:	push   ds
  407456:	cmp    eax,0xf2c3edd0
  40745b:	add    DWORD PTR [esi],eax
  40745d:	xor    BYTE PTR [edx-0x493dfba2],ch
  407463:	ja     0x407404
  407465:	es and al,0x6b
  407468:	fld    QWORD PTR [edx+0xc2a858b]
  40746e:	cmp    eax,0xbd62af2d
  407473:	xchg   esp,eax
  407474:	or     al,0x36
  407476:	adc    bh,BYTE PTR [ecx-0x24b8378a]
  40747c:	fidivr WORD PTR [ebp+ebx*4-0x6c]
  407480:	sar    BYTE PTR [esi-0xd],0xf8
  407484:	rol    BYTE PTR [ebp-0x58d7009c],0x81
  40748b:	mov    ds:0xc2e1afb7,eax
  407490:	rcr    BYTE PTR [edi-0x1a9559c3],cl
  407496:	cmp    ebp,esi
  407498:	imul   esi,eax,0x7512052b
  40749e:	mov    esi,0x9d463427
  4074a3:	leave  
  4074a4:	jbe    0x40751b
  4074a6:	or     eax,DWORD PTR [ebx]
  4074a8:	ret    0x1aaa
  4074ab:	outs   dx,BYTE PTR ds:[esi]
  4074ac:	pop    ds
  4074ad:	jae    0x407493
  4074af:	pop    ss
  4074b0:	loopne 0x407530
  4074b2:	loopne 0x407442
  4074b4:	xchg   ebp,eax
  4074b5:	or     ecx,DWORD PTR [esi-0x72b35d1b]
  4074bb:	fsubr  QWORD PTR [edx+0x19]
  4074be:	imul   ebp,DWORD PTR [edx+0x64bb38db],0xfffffffd
  4074c5:	add    BYTE PTR [bx],dh
  4074c8:	sub    ebp,eax
  4074ca:	(bad)  [esp+ebx*2-0x6bbac1ab]
  4074d1:	push   ebp
  4074d2:	daa    
  4074d3:	call   DWORD PTR [esi-0x6d85012d]
  4074d9:	sahf   
  4074da:	pop    edx
  4074db:	ret    
  4074dc:	mov    dh,BYTE PTR [ecx]
  4074de:	aas    
  4074df:	and    eax,0x2f8de8f5
  4074e4:	(bad)  
  4074e5:	jns    0x407542
  4074e7:	pushf  
  4074e8:	loop   0x4074f4
  4074ea:	sbb    cl,BYTE PTR [esi]
  4074ec:	cmp    al,0x6c
  4074ee:	mov    edx,0xa61a6669
  4074f4:	mov    dl,BYTE PTR gs:[ebp-0x3d044bb3]
  4074fb:	or     ecx,esp
  4074fd:	(bad)  
  4074fe:	lods   eax,DWORD PTR ds:[esi]
  4074ff:	inc    ebp
  407500:	adc    eax,0x14b472cd
  407505:	push   eax
  407506:	push   es
  407507:	rol    ebx,cl
  407509:	adc    ecx,DWORD PTR [ebx-0x20c15563]
  40750f:	inc    edx
  407510:	div    BYTE PTR ds:0x81f5881a
  407516:	sub    BYTE PTR [edx],al
  407518:	gs sar dl,0x4c
  40751c:	sbb    al,0x43
  40751e:	inc    ebp
  40751f:	stos   BYTE PTR es:[edi],al
  407520:	mov    al,0xef
  407522:	push   ebx
  407523:	stc    
  407524:	repnz imul eax,DWORD PTR [ebx-0x61],0x51
  407529:	adc    BYTE PTR [edx],bh
  40752b:	sbb    eax,0x255f1061
  407530:	ss je  0x407586
  407533:	scas   al,BYTE PTR es:[edi]
  407534:	mov    esi,0x509a00fc
  407539:	out    dx,eax
  40753a:	and    BYTE PTR ds:0x101c9794,0xec
  407541:	out    dx,al
  407542:	mov    eax,0x347de36c
  407547:	and    eax,0xc1d8ec10
  40754c:	pushf  
  40754d:	add    edx,DWORD PTR [esi-0x3b]
  407550:	xor    al,0xd7
  407552:	fcom   QWORD PTR [ebp-0x5a8bad57]
  407558:	outs   dx,BYTE PTR ds:[esi]
  407559:	jmp    0x1a771b22
  40755e:	dec    ebx
  40755f:	int    0xfc
  407561:	inc    eax
  407562:	loopne 0x4075db
  407564:	mov    edx,0xf8726180
  407569:	test   al,0x86
  40756b:	pop    ebp
  40756c:	cmp    eax,0x829d5f37
  407571:	sub    ecx,0xc
  407574:	jecxz  0x407576
  407576:	mov    bh,0x1c
  407578:	mov    al,0xf9
  40757a:	fnop   
  40757c:	lock (bad) 
  40757e:	cli    
  40757f:	mov    bh,0x50
  407581:	inc    esp
  407582:	push   cs
  407583:	push   esi
  407584:	mov    ebx,0x8c41a643
  407589:	or     eax,0xeb58f4b0
  40758e:	pop    ss
  40758f:	adc    BYTE PTR [ebx+0xc651dc8],dl
  407595:	popf   
  407596:	cli    
  407597:	cmp    al,0x51
  407599:	outs   dx,BYTE PTR ds:[esi]
  40759a:	inc    esi
  40759b:	sub    DWORD PTR [eax-0x54],esp
  40759e:	and    al,0xb5
  4075a0:	xor    al,0x86
  4075a2:	int3   
  4075a3:	add    dl,dl
  4075a5:	scas   eax,DWORD PTR es:[edi]
  4075a6:	cmp    esi,DWORD PTR [esi]
  4075a8:	push   ecx
  4075a9:	out    0x8a,al
  4075ab:	mov    al,0x59
  4075ad:	imul   ecx,DWORD PTR [ebx],0xffffffe2
  4075b0:	adc    DWORD PTR [ebx-0x6ae4e34e],esi
  4075b6:	xor    al,0x40
  4075b8:	jae    0x407577
  4075ba:	dec    eax
  4075bb:	js     0x4075bb
  4075bd:	lods   al,BYTE PTR ds:[esi]
  4075be:	push   edx
  4075bf:	jae    0x4075c9
  4075c1:	mov    dl,0x9
  4075c3:	xor    al,0x25
  4075c5:	call   DWORD PTR [ebx]
  4075c7:	mov    esp,0x93d23ed1
  4075cc:	mov    ebx,0x8b7ec75
  4075d1:	in     eax,dx
  4075d2:	and    BYTE PTR [ebx-0x7a],al
  4075d5:	jl     0x40763c
  4075d7:	sbb    al,0xa2
  4075d9:	mov    esi,0xf0c9d1fc
  4075de:	pop    esp
  4075df:	jecxz  0x4075f3
  4075e1:	inc    eax
  4075e2:	loopne 0x40765c
  4075e4:	or     ch,al
  4075e6:	stos   DWORD PTR es:[edi],eax
  4075e7:	sub    DWORD PTR [eax-0x33],ebx
  4075ea:	scas   al,BYTE PTR es:[edi]
  4075eb:	fadd   st,st(7)
  4075ed:	stc    
  4075ee:	fbld   TBYTE PTR [edx+0x266567]
  4075f4:	jnp    0x40763e
  4075f6:	fsubr  QWORD PTR [edi+0x65]
  4075f9:	scas   al,BYTE PTR es:[edi]
  4075fa:	cli    
  4075fb:	or     al,0x25
  4075fd:	mov    dl,0xc8
  4075ff:	mov    ebp,0x48de50b0
  407604:	dec    DWORD PTR ds:[esi-0x3c]
  407608:	push   es
  407609:	mov    esi,0x9d7fd8b5
  40760e:	mov    bh,al
  407610:	or     ecx,0xffffffe9
  407613:	mov    ah,0xd
  407615:	(bad)  
  407617:	jp     0x407678
  407619:	iret   
  40761a:	dec    edx
  40761b:	into   
  40761c:	sbb    eax,0x8aa812ff
  407621:	dec    esi
  407622:	stos   BYTE PTR es:[edi],al
  407623:	mov    ebp,0xcc8822ca
  407628:	retf   
  407629:	sub    al,0xeb
  40762b:	lods   al,BYTE PTR ds:[esi]
  40762c:	call   0x96d31d4d
  407631:	pop    ss
  407632:	ret    0xd390
  407635:	loope  0x4075ea
  407637:	not    ch
  407639:	sub    al,0x3f
  40763b:	fxch   st(3)
  40763d:	out    dx,eax
  40763e:	(bad)  
  40763f:	retf   
  407640:	cld    
  407641:	xor    ah,BYTE PTR [esi-0x3c]
  407644:	mov    esp,0x747d6f5b
  407649:	mov    ebp,0xb21df2a4
  40764e:	xor    eax,0xe345d7b
  407653:	xor    BYTE PTR [edx+0x290ce847],dl
  407659:	mov    ch,0x7b
  40765b:	pop    ds
  40765c:	icebp  
  40765d:	add    al,0x2c
  40765f:	mov    al,ds:0xb22709b5
  407664:	and    eax,edi
  407666:	ds popf 
  407668:	pop    esi
  407669:	inc    esi
  40766a:	fisub  DWORD PTR [esi]
  40766c:	in     ax,0x62
  40766f:	mov    BYTE PTR [ebx+ecx*1-0x55],ah
  407673:	fnsave [eax]
  407675:	inc    edx
  407676:	push   edi
  407677:	ins    DWORD PTR es:[edi],dx
  407678:	mov    gs,WORD PTR [esi]
  40767a:	sti    
  40767b:	test   eax,0x531eff35
  407680:	jno    0x407635
  407682:	cmc    
  407683:	out    dx,eax
  407684:	test   al,0x82
  407686:	pushf  
  407687:	fcom   DWORD PTR [edi]
  407689:	fimul  WORD PTR [bx+di-0x19]
  40768d:	xchg   esi,eax
  40768e:	js     0x407650
  407690:	and    al,0x12
  407692:	xchg   esi,eax
  407693:	add    bh,BYTE PTR [esi+0x581887e3]
  407699:	loop   0x407703
  40769b:	xchg   edx,eax
  40769c:	imul   ecx,DWORD PTR [edi+0x51],0x3a
  4076a0:	pop    es
  4076a1:	or     eax,0xced036b8
  4076a6:	push   0x2c
  4076a8:	test   al,0x24
  4076aa:	pop    di
  4076ac:	xchg   ecx,eax
  4076ad:	leave  
  4076ae:	push   ebp
  4076af:	std    
  4076b0:	arpl   WORD PTR [ecx+ebp*4-0x1],bp
  4076b4:	xchg   edx,eax
  4076b5:	mov    ?,edi
  4076b7:	int3   
  4076b8:	adc    eax,0xa2697ed2
  4076bd:	fwait
  4076be:	(bad)  
  4076bf:	ds mov bh,0x90
  4076c2:	push   ds
  4076c3:	iret   
  4076c4:	icebp  
  4076c5:	cmp    DWORD PTR [eax],ecx
  4076c7:	mov    esp,DWORD PTR [edx+0x41]
  4076ca:	mov    ss,WORD PTR [eax+0xa2268fa]
  4076d0:	jns    0x40768c
  4076d2:	or     al,0x5b
  4076d4:	mov    ebp,0xc2c95b65
  4076d9:	add    al,0x0
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0xb8d6d151
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x40779a
  40772b:	das    
  40772c:	in     eax,0x9d
  40772e:	cli    
  40772f:	jno    0x40774c
  407731:	jmp    0xbeb2c120
  407736:	dec    esp
  407737:	cmp    BYTE PTR [eax+0x66f06d21],0xe5
  40773e:	cmp    eax,0xe59dfb5a
  407743:	(bad)  
  407744:	pop    esi
  407745:	dec    edx
  407746:	add    ebp,esp
  407748:	xor    al,0x3d
  40774a:	pushf  
  40774b:	pushf  
  40774c:	sub    al,0x46
  40774e:	loop   0x4077b6
  407750:	imul   ebx,DWORD PTR [eax+0x65],0x67
  407754:	push   ds
  407755:	mov    bl,0x29
  407757:	stos   BYTE PTR es:[edi],al
  407758:	inc    ebx
  407759:	(bad)  
  40775a:	or     al,0xb0
  40775c:	mov    esi,0x9cbc9bb3
  407761:	test   DWORD PTR [ebx+0x28],esi
  407764:	push   eax
  407765:	inc    edi
  407766:	pop    ebp
  407767:	cdq    
  407768:	jp     0x40770c
  40776a:	pop    ebp
  40776b:	pop    edi
  40776c:	adc    ebx,eax
  40776e:	mov    ch,bl
  407770:	and    eax,0x1c0a97ec
  407775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407776:	rol    BYTE PTR ds:0x621b5fd6,0x80
  40777d:	out    dx,eax
  40777e:	xchg   edx,eax
  40777f:	cli    
  407780:	jge    0x40771d
  407782:	push   edi
  407783:	fdivr  DWORD PTR [ebx]
  407785:	sbb    edx,DWORD PTR [ebp-0x1c23b4ea]
  40778b:	add    eax,0x89fd212
  407790:	and    edx,DWORD PTR [ebp-0x1ab5afbb]
  407796:	add    al,0xb6
  407798:	popf   
  407799:	fist   WORD PTR [edi+0x374ed208]
  40779f:	mov    edx,0x22ecca0
  4077a4:	pop    ecx
  4077a5:	push   eax
  4077a6:	out    0xca,eax
  4077a8:	mov    dl,0x10
  4077aa:	jb     0x40778f
  4077ac:	das    
  4077ad:	and    eax,0xa3e0d9df
  4077b2:	imul   ebp,DWORD PTR [esp+esi*8-0x80],0xfffffff9
  4077b7:	stos   DWORD PTR es:[edi],eax
  4077b8:	sub    DWORD PTR [esi+eiz*4],esi
  4077bb:	in     eax,0x3f
  4077bd:	xor    edi,esi
  4077bf:	pop    ds
  4077c0:	fimul  WORD PTR [ebx+0x3451a745]
  4077c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c7:	dec    ebx
  4077c8:	in     al,dx
  4077c9:	fcomi  st,st(0)
  4077cb:	sbb    eax,0xfffd0124
  4077d0:	xor    al,0xbd
  4077d2:	jmp    0x4077bf
  4077d4:	jnp    0x407802
  4077d6:	push   ecx
  4077d7:	fist   WORD PTR [eax]
  4077d9:	mov    bh,0x0
  4077db:	stos   BYTE PTR es:[edi],al
  4077dc:	push   esp
  4077dd:	scas   eax,DWORD PTR es:[edi]
  4077de:	aam    0x9a
  4077e0:	ins    BYTE PTR es:[edi],dx
  4077e1:	stos   BYTE PTR es:[edi],al
  4077e2:	jmp    0x3feeafb9
  4077e7:	into   
  4077e8:	test   DWORD PTR [ecx],esp
  4077ea:	daa    
  4077eb:	inc    esp
  4077ec:	popf   
  4077ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ee:	fs cmp ecx,ebp
  4077f1:	pushf  
  4077f2:	aas    
  4077f3:	adc    al,0xa2
  4077f5:	ja     0x40785e
  4077f7:	mov    dh,0x81
  4077f9:	(bad)  
  4077fa:	iret   
  4077fb:	mov    WORD PTR [esi-0x1e5f56d2],es
  407801:	loopne 0x407837
  407803:	mov    ah,0xa8
  407805:	fcmovu st,st(5)
  407807:	aaa    
  407808:	pop    esi
  407809:	xchg   ecx,eax
  40780a:	call   0xdf32d5a6
  40780f:	dec    esp
  407810:	mov    bl,0x9e
  407812:	popf   
  407813:	mov    cl,0xac
  407815:	xor    cl,dl
  407817:	push   esp
  407818:	cmp    DWORD PTR [ebx+0x4e],0x4b
  40781c:	sbb    al,0x4d
  40781e:	pop    ebx
  40781f:	push   edi
  407820:	mov    ah,0x13
  407822:	xchg   esp,eax
  407823:	mov    dl,0xe7
  407825:	xchg   ebp,eax
  407826:	popa   
  407827:	cmp    eax,0xdda781fe
  40782c:	adc    BYTE PTR [esi+ecx*2+0x4ea0667d],dl
  407833:	add    DWORD PTR [ecx-0x67],0x284a90c9
  40783a:	popa   
  40783b:	out    0x85,eax
  40783d:	ins    DWORD PTR es:[edi],dx
  40783e:	mov    ds:0x9ff3bb0a,al
  407843:	call   0xefc14eca
  407848:	sbb    DWORD PTR [esi-0x110a58ea],ebx
  40784e:	test   al,0x6e
  407850:	cmp    al,0x1c
  407852:	sbb    al,al
  407854:	sbb    al,0xb
  407856:	xor    BYTE PTR [edx-0x3b],0x2f
  40785a:	pop    edx
  40785b:	sub    al,0xb5
  40785d:	sar    BYTE PTR [esi+0x2f8d97c],cl
  407863:	(bad)  
  407864:	iret   
  407865:	jmp    0x407844
  407867:	bound  esi,QWORD PTR [eax-0x7ff4c097]
  40786d:	adc    dh,dl
  40786f:	sbb    dh,dh
  407871:	rcr    cl,cl
  407873:	imul   ebp,DWORD PTR [esi],0xeb4e9288
  407879:	fist   WORD PTR [ebp-0x70]
  40787c:	jmp    0xd923:0x1c75baf2
  407883:	xchg   ebp,eax
  407884:	pusha  
  407885:	jl     0x4078f8
  407887:	lock dec edi
  407889:	je     0x40788a
  40788b:	sahf   
  40788c:	mov    ebp,0x4f704249
  407891:	and    BYTE PTR [edi],cl
  407893:	test   ah,ah
  407895:	and    BYTE PTR [edx],bl
  407897:	jp     0xe542b6df
  40789d:	je     0x40785c
  40789f:	in     eax,0x6e
  4078a1:	leave  
  4078a2:	imul   esp,DWORD PTR [eax+0x43369e1c],0x47b68fea
  4078ac:	cdq    
  4078ad:	clc    
  4078ae:	gs rcr ch,0x8a
  4078b2:	out    0x72,al
  4078b4:	adc    BYTE PTR [esi+eax*2+0x391af58a],al
  4078bb:	ins    DWORD PTR es:[edi],dx
  4078bc:	popa   
  4078bd:	mov    cl,0xf9
  4078bf:	lods   al,BYTE PTR ds:[esi]
  4078c0:	sub    esp,DWORD PTR [eax+0x4504a3b]
  4078c6:	inc    esi
  4078c7:	mov    ah,0x67
  4078c9:	scas   al,BYTE PTR es:[edi]
  4078ca:	out    0xe5,al
  4078cc:	cmc    
  4078cd:	xor    edx,DWORD PTR [edx-0xa]
  4078d0:	mov    ecx,0x6087db1
  4078d5:	cli    
  4078d6:	add    eax,0xfcc4c43d
  4078db:	inc    esp
  4078dc:	and    eax,0xb6f40a3c
  4078e1:	jle    0x40791a
  4078e3:	and    eax,0x66ce2aa4
  4078e8:	lods   eax,DWORD PTR ds:[esi]
  4078e9:	mov    esp,esp
  4078eb:	daa    
  4078ec:	dec    edi
  4078ed:	shl    DWORD PTR [edx+0x32],cl
  4078f0:	aam    0x4e
  4078f2:	call   DWORD PTR [ebx-0x18d6fcc7]
  4078f8:	or     ah,ah
  4078fa:	dec    esi
  4078fb:	out    dx,eax
  4078fc:	fcmovu st,st(5)
  4078fe:	in     eax,0xe1
  407900:	or     DWORD PTR [ebp-0x37bae98b],esp
  407906:	mov    edx,0xef767aa0
  40790b:	dec    esp
  40790c:	lahf   
  40790d:	in     eax,dx
  40790e:	repnz stos BYTE PTR es:[edi],al
  407910:	inc    ebp
  407911:	push   es
  407912:	scas   al,BYTE PTR es:[edi]
  407913:	or     BYTE PTR [edx],al
  407915:	cmp    BYTE PTR [ebp+eax*8-0x7d],ch
  407919:	ins    BYTE PTR es:[edi],dx
  40791a:	gs stc 
  40791c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40791d:	pop    edx
  40791e:	jno    0x40790d
  407920:	xchg   BYTE PTR [edx-0x2af02ab5],bl
  407926:	and    ah,BYTE PTR [edi+0x6b59ce06]
  40792c:	jmp    0xa89cc3e4
  407931:	cmp    DWORD PTR [edx+esi*1-0x34],esi
  407935:	xchg   DWORD PTR [esi+edx*4],edi
  407938:	dec    edi
  407939:	mov    ch,0xe0
  40793b:	ror    BYTE PTR [edx],0x50
  40793e:	pusha  
  40793f:	cld    
  407940:	mov    DWORD PTR [eax-0x4086a45e],edi
  407946:	adc    al,ch
  407948:	std    
  407949:	xchg   ebp,eax
  40794a:	(bad)  
  40794b:	or     BYTE PTR [esi+eax*8],ah
  40794e:	int3   
  40794f:	not    DWORD PTR [ecx+eax*8-0x14]
  407953:	loope  0x407956
  407955:	sbb    BYTE PTR [eax-0x80],cl
  407958:	inc    edi
  407959:	int    0xa0
  40795b:	push   esp
  40795c:	xor    ebx,DWORD PTR [edi-0x552e5390]
  407962:	ficomp WORD PTR [ebp+edi*2-0x3a]
  407966:	(bad)  
  407968:	cmp    BYTE PTR [eax+0x3a],al
  40796b:	cmp    eax,0x650c0bd9
  407970:	int    0xaf
  407972:	test   eax,0xabf23837
  407977:	ret    
  407978:	xchg   ebx,eax
  407979:	pop    eax
  40797a:	xchg   edx,eax
  40797b:	and    al,cl
  40797d:	inc    edx
  40797e:	aas    
  40797f:	cmp    eax,0xfea4d312
  407984:	add    eax,0xde32cb7b
  407989:	xor    dh,BYTE PTR [eax-0x45]
  40798c:	cld    
  40798d:	dec    ebx
  40798e:	pop    ecx
  40798f:	jmp    0xba25:0xb2775198
  407996:	jle    0x4079f9
  407998:	in     al,0x17
  40799a:	jns    0x40796d
  40799c:	xchg   edx,eax
  40799d:	icebp  
  40799e:	pop    esi
  40799f:	int    0xde
  4079a1:	imul   ecx,edx,0x76b9aec9
  4079a7:	dec    esp
  4079a8:	fdiv   QWORD PTR [ecx-0x77827d30]
  4079ae:	std    
  4079af:	push   esp
  4079b0:	jbe    0x407a2e
  4079b2:	ja     0x4079d8
  4079b4:	pop    edx
  4079b5:	outs   dx,BYTE PTR ds:[esi]
  4079b6:	pusha  
  4079b7:	call   0x2e8:0x64726d82
  4079be:	sub    BYTE PTR [esp+ebp*4],bl
  4079c1:	ret    0xd393
  4079c4:	sub    ecx,ebx
  4079c6:	aad    0xc3
  4079c8:	sbb    eax,0xad462fae
  4079cd:	leave  
  4079ce:	(bad)  
  4079cf:	popa   
  4079d0:	dec    esi
  4079d1:	or     eax,DWORD PTR [ecx+0x67ac5d85]
  4079d7:	add    al,BYTE PTR [edi+eiz*8]
  4079da:	daa    
  4079db:	ins    BYTE PTR es:[edi],dx
  4079dc:	cs mov ecx,0x72804588
  4079e2:	dec    ecx
  4079e3:	dec    eax
  4079e4:	stos   BYTE PTR es:[edi],al
  4079e5:	call   0x1a0a60be
  4079ea:	fwait
  4079eb:	call   FWORD PTR [esi+0xb]
  4079ee:	(bad)  
  4079ef:	fs pop esi
  4079f1:	gs xor ebp,eax
  4079f4:	xchg   BYTE PTR [ebp+0x46888473],bl
  4079fa:	out    0x31,al
  4079fc:	popa   
  4079fd:	es dec esp
  4079ff:	add    ebx,DWORD PTR ds:0x79af7870
  407a05:	loope  0x4079a2
  407a07:	inc    eax
  407a08:	bswap  edi
  407a0a:	pop    ecx
  407a0b:	mov    WORD PTR [edi-0x68],es
  407a0e:	cwde   
  407a0f:	ret    
  407a10:	cmp    bh,BYTE PTR [edi+0x68]
  407a13:	scas   eax,DWORD PTR es:[edi]
  407a14:	jmp    0x4b6f:0x42a597db
  407a1b:	scas   al,BYTE PTR es:[edi]
  407a1c:	dec    esi
  407a1d:	and    dl,BYTE PTR [ebp-0x32]
  407a20:	icebp  
  407a21:	sahf   
  407a22:	arpl   WORD PTR [edi-0x24],dx
  407a25:	aas    
  407a26:	je     0x4079ad
  407a28:	pop    eax
  407a29:	mov    ecx,DWORD PTR [esi+edi*4-0x4a02cb3f]
  407a30:	sub    al,0xd2
  407a32:	push   0x62
  407a34:	push   edx
  407a35:	push   ecx
  407a36:	and    DWORD PTR [ecx-0x17d90d7b],edx
  407a3c:	push   esp
  407a3d:	mov    ebx,DWORD PTR [eax+ebx*4-0x5c]
  407a41:	test   al,0x7a
  407a43:	popa   
  407a44:	dec    esp
  407a45:	in     eax,dx
  407a46:	mov    ch,0x76
  407a48:	test   al,0xea
  407a4a:	ss push 0x3e
  407a4d:	mov    ds:0xc1324de8,al
  407a52:	data16 mov WORD PTR [edx+0x10],es
  407a56:	fwait
  407a57:	repnz push edx
  407a59:	mov    al,0x9
  407a5b:	push   ds
  407a5c:	mov    cs,WORD PTR [ebx+0x647f224d]
  407a62:	adc    DWORD PTR [ebx+eax*4-0x74e6aa0c],ebp
  407a69:	(bad)  
  407a6a:	jg     0x407a4e
  407a6c:	je     0x4079f1
  407a6e:	fstp   DWORD PTR [ebp+0x62]
  407a71:	inc    esp
  407a72:	add    al,0xcc
  407a74:	cdq    
  407a75:	push   esi
  407a76:	aas    
  407a77:	loope  0x407a22
  407a79:	aam    0x74
  407a7b:	xchg   DWORD PTR [ecx+0x77],ecx
  407a7e:	xchg   esp,eax
  407a7f:	loope  0x407a5f
  407a81:	xor    DWORD PTR [ecx],ebp
  407a83:	sbb    bl,ah
  407a85:	xchg   ebx,eax
  407a86:	pop    ebx
  407a87:	lds    esi,FWORD PTR [ebx-0x10159f15]
  407a8d:	sbb    eax,0x348f4eb0
  407a92:	or     al,0x36
  407a94:	mov    cl,0x75
  407a96:	xor    BYTE PTR [esi-0x57],bl
  407a99:	loopne 0x407ad7
  407a9b:	ds out dx,eax
  407a9d:	pop    ds
  407a9e:	shl    BYTE PTR [eax-0x71],cl
  407aa1:	push   esi
  407aa2:	push   es
  407aa3:	mov    ah,0x1c
  407aa5:	nop
  407aa6:	sar    DWORD PTR [esi+0x22],0xda
  407aaa:	loope  0x407a53
  407aac:	retf   0x5c44
  407aaf:	inc    ebp
  407ab0:	mov    bh,0x81
  407ab2:	sub    al,0x52
  407ab4:	or     cl,BYTE PTR [ebx+0x354e86ca]
  407aba:	test   eax,0xfbc9faaa
  407abf:	mov    ebp,0xdf5ec84e
  407ac4:	and    al,al
  407ac6:	and    ch,ch
  407ac8:	aaa    
  407ac9:	cdq    
  407aca:	or     al,0x42
  407acc:	lea    esp,ds:0x812c3378
  407ad2:	fwait
  407ad3:	xor    bl,BYTE PTR [edx-0x25]
  407ad6:	jnp    0x407ab3
  407ad8:	mov    WORD PTR [ebx+0x43],?
  407adb:	mov    ds:0x820aa8dc,eax
  407ae0:	je     0x407aa1
  407ae2:	cs cdq 
  407ae4:	inc    edx
  407ae5:	dec    ecx
  407ae6:	arpl   WORD PTR [ebp-0x71],si
  407ae9:	pop    ebp
  407aea:	pop    esp
  407aeb:	stc    
  407aec:	dec    ebx
  407aed:	push   ds
  407aee:	in     al,0x5e
  407af0:	mov    ebx,0x7a8d3c7b
  407af5:	retf   
  407af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af7:	jg     0x407b71
  407af9:	xor    DWORD PTR [ebx],edx
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	inc    ebx
  407b34:	mov    dh,0x53
  407b36:	pusha  
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407baf
  407b40:	add    edi,DWORD PTR [ecx+0x25a8b808]
  407b46:	mov    ds:0xb2a62930,al
  407b4b:	adc    DWORD PTR [esi-0x51c561a8],edx
  407b51:	xchg   esp,eax
  407b52:	adc    al,0xb4
  407b54:	xlat   BYTE PTR ds:[ebx]
  407b55:	jnp    0x407ad7
  407b57:	call   FWORD PTR ds:0x2653e85e
  407b5d:	add    al,BYTE PTR [edi]
  407b5f:	les    edi,FWORD PTR [esp+esi*4-0x2b]
  407b63:	xchg   esi,eax
  407b64:	sbb    al,0xe
  407b66:	mov    al,ds:0xabcac804
  407b6b:	dec    eax
  407b6c:	or     eax,0xa786905b
  407b71:	psrlw  mm3,0xc3
  407b75:	mov    al,0x50
  407b77:	loopne 0x407bb3
  407b79:	scas   al,BYTE PTR es:[edi]
  407b7a:	pop    esp
  407b7b:	rcl    DWORD PTR [edx],1
  407b7d:	jl     0x407bd1
  407b7f:	stc    
  407b80:	xchg   al,bl
  407b82:	mov    bh,0x7c
  407b84:	clc    
  407b85:	push   ebp
  407b86:	xor    al,al
  407b88:	cli    
  407b89:	retf   0x63c1
  407b8c:	mov    BYTE PTR [ebp+0x58],0x88
  407b90:	mov    edx,0x87d73688
  407b95:	cmp    al,0x24
  407b97:	gs cmc 
  407b99:	and    esi,esi
  407b9b:	aas    
  407b9c:	adc    DWORD PTR [eax+0x310d96d8],esi
  407ba2:	xchg   esp,eax
  407ba3:	push   ebp
  407ba4:	dec    esp
  407ba5:	scas   al,BYTE PTR es:[edi]
  407ba6:	pusha  
  407ba7:	test   esp,0xaae573d4
  407bad:	pop    ss
  407bae:	repz out dx,al
  407bb0:	push   eax
  407bb1:	cmp    BYTE PTR [edx+0x34],0x6e
  407bb5:	imul   ebx,DWORD PTR [ebp+0x67f76208],0xffffffb9
  407bbc:	add    DWORD PTR [ebx],0xf650158b
  407bc2:	adc    ch,cl
  407bc4:	fbld   TBYTE PTR [ecx]
  407bc6:	mov    ds:0x1d132152,eax
  407bcc:	or     eax,0xb6caa912
  407bd1:	dec    ebp
  407bd2:	pop    ebx
  407bd3:	mov    ecx,ecx
  407bd5:	xchg   ebp,eax
  407bd6:	or     al,0x31
  407bd8:	inc    edx
  407bd9:	or     BYTE PTR [ebx+0x1d52af1e],dh
  407bdf:	cmc    
  407be0:	xor    esp,DWORD PTR ds:0xf9d4e17
  407be6:	outs   dx,DWORD PTR ds:[esi]
  407be7:	stos   DWORD PTR es:[edi],eax
  407be8:	jnp    0x407bd8
  407bea:	(bad)  
  407beb:	iret   
  407bec:	and    ebx,DWORD PTR [edi+0x1dc28d3]
  407bf2:	adc    eax,0x99de04fa
  407bf7:	imul   ecx,DWORD PTR [edi],0x13
  407bfa:	xchg   ecx,eax
  407bfb:	mov    ebp,0x56c44091
  407c00:	sti    
  407c01:	xor    DWORD PTR [edi+0x6b944847],edi
  407c07:	xor    eax,0xf2ab0a92
  407c0c:	fsub   QWORD PTR [ebp+0x4e503fde]
  407c12:	mov    cl,0xec
  407c14:	(bad)  
  407c15:	loopne 0x407c2d
  407c17:	sub    DWORD PTR cs:[eax-0x57],esi
  407c1b:	loopne 0x407c74
  407c1d:	xor    ah,BYTE PTR [ebx]
  407c1f:	fwait
  407c20:	imul   ebx,esi,0xffffffe5
  407c23:	pop    esp
  407c24:	sub    BYTE PTR gs:[edx+0x5f],dl
  407c28:	sbb    ch,ah
  407c2a:	(bad)  
  407c2b:	mov    ebp,0x5f35d59e
  407c30:	fst    QWORD PTR [edx]
  407c32:	xchg   BYTE PTR [eax-0x69],bh
  407c35:	(bad)  
  407c37:	jno    0x407c01
  407c39:	(bad)  
  407c3a:	mov    ch,0x6d
  407c3c:	into   
  407c3d:	outs   dx,BYTE PTR ds:[esi]
  407c3e:	jl     0x407ca6
  407c40:	mov    dl,al
  407c42:	shl    BYTE PTR [ecx+0x2f1c56ad],cl
  407c48:	pop    edi
  407c49:	or     DWORD PTR [edx+0x4ca5bcd5],esp
  407c4f:	mov    ah,0xf9
  407c51:	fdivrp st(7),st
  407c53:	push   0xffffffc6
  407c55:	(bad)  
  407c56:	mov    edi,0xc6fd9627
  407c5b:	push   edi
  407c5c:	imul   esi,DWORD PTR [esi-0x2cd25d88],0x29
  407c63:	xchg   ebx,eax
  407c64:	jg     0x407c4b
  407c66:	jnp    0x407c78
  407c68:	dec    esp
  407c69:	sbb    DWORD PTR [edx+0x37fa88b3],edx
  407c6f:	push   ecx
  407c70:	pop    esp
  407c71:	dec    eax
  407c72:	lea    edi,[eax-0x3d]
  407c75:	(bad)  
  407c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c77:	adc    eax,0xf29059e8
  407c7c:	fidivr WORD PTR [ecx]
  407c7e:	inc    ebp
  407c7f:	push   ss
  407c80:	into   
  407c81:	paddusb mm7,QWORD PTR [ebx+ebx*1]
  407c85:	pop    ss
  407c86:	xlat   BYTE PTR ds:[ebx]
  407c87:	push   0x998b122e
  407c8c:	mov    eax,0xe92f43f0
  407c91:	repz xor eax,0x5de2837e
  407c97:	retf   0xfb
  407c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c9b:	stos   DWORD PTR es:[edi],eax
  407c9c:	push   es
  407c9d:	pushf  
  407c9e:	fadd   QWORD PTR [ecx]
  407ca0:	test   eax,0x6aac12ea
  407ca5:	popf   
  407ca6:	retf   0x42d2
  407ca9:	or     BYTE PTR [esi+0x78],ch
  407cac:	gs xchg ecx,eax
  407cae:	mov    dl,0x83
  407cb0:	(bad)  
  407cb1:	int    0x64
  407cb3:	jle    0x407c77
  407cb5:	shr    DWORD PTR [ebx-0x5edad45],0xd
  407cbc:	(bad)  
  407cbd:	mov    ds:0x13de5285,eax
  407cc2:	ret    
  407cc3:	xchg   ecx,eax
  407cc4:	scas   al,BYTE PTR es:[edi]
  407cc5:	pop    eax
  407cc6:	jg     0x407cb5
  407cc8:	fdiv   st,st(1)
  407cca:	and    BYTE PTR [edi+0x5],bl
  407ccd:	cmp    ebx,DWORD PTR [ecx-0x181d1a8a]
  407cd3:	ds adc ah,cl
  407cd6:	and    edx,ebx
  407cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd9:	pop    edx
  407cda:	int3   
  407cdb:	pop    ds
  407cdc:	mov    edx,0x8548194
  407ce1:	movq   QWORD PTR [eax-0xb],mm1
  407ce5:	std    
  407ce6:	mov    ?,WORD PTR [esi+0xd]
  407ce9:	xchg   edi,eax
  407cea:	xor    al,0xaa
  407cec:	shr    al,1
  407cee:	mov    ds:0xdeda595f,eax
  407cf3:	mov    bl,0x3
  407cf6:	leave  
  407cf7:	jns    0x407cd6
  407cf9:	mov    WORD PTR [esp+edi*1],cs
  407cfc:	or     eax,0x73dc9867
  407d01:	into   
  407d02:	push   ebx
  407d03:	xor    edx,ecx
  407d05:	jb     0x407ca9
  407d07:	pop    ecx
  407d08:	dec    esp
  407d09:	push   ecx
  407d0a:	mov    edi,0x5d1b4d72
  407d0f:	pop    ss
  407d10:	sub    BYTE PTR [ecx+0x7188a843],0x2
  407d17:	mov    edi,0x8b77ec14
  407d1c:	xchg   ebx,eax
  407d1d:	aad    0x2c
  407d1f:	jne    0x407cd0
  407d21:	jnp    0x407ce5
  407d23:	and    al,0xf6
  407d25:	push   esp
  407d26:	adc    eax,DWORD PTR [ebx-0x30]
  407d29:	(bad)  
  407d2a:	jnp    0x407cd4
  407d2c:	int    0x81
  407d2e:	rcr    BYTE PTR [edi+esi*4-0x50143f27],1
  407d35:	adc    eax,0x260742e3
  407d3a:	xor    eax,0x79a60bc9
  407d3f:	(bad)  
  407d40:	rcr    DWORD PTR [ecx+ecx*1],cl
  407d43:	pop    ss
  407d44:	test   eax,0xcc3f03c0
  407d49:	test   DWORD PTR [eax+0x33513f21],edi
  407d4f:	sahf   
  407d50:	mov    BYTE PTR [ecx+0x108b0116],dh
  407d56:	add    al,0xee
  407d58:	jp     0x407ce3
  407d5a:	ja     0x407d0d
  407d5c:	mov    bl,0x1a
  407d5e:	pop    ecx
  407d5f:	cwde   
  407d60:	inc    esp
  407d61:	mov    esp,0xcf034116
  407d66:	les    ecx,FWORD PTR [ebx]
  407d68:	mov    WORD PTR [esi+0x77],?
  407d6b:	enter  0x22c3,0xc0
  407d6f:	push   es
  407d70:	cld    
  407d71:	popa   
  407d72:	dec    ebp
  407d73:	loopne 0x407d6d
  407d75:	loopne 0x407ddb
  407d77:	mov    edx,0xddcb6645
  407d7c:	fisub  DWORD PTR [ebp+eax*8-0xa]
  407d80:	sub    DWORD PTR [ebx],0x38
  407d83:	add    eax,0x7ccd2a88
  407d88:	adc    al,0x87
  407d8a:	sbb    al,al
  407d8c:	xor    ecx,ecx
  407d8e:	push   es
  407d8f:	loope  0x407dd0
  407d91:	daa    
  407d92:	sub    dh,BYTE PTR [edx-0x2]
  407d95:	nop
  407d96:	xchg   esp,eax
  407d97:	or     esp,esi
  407d99:	push   edx
  407d9a:	add    cl,dh
  407d9c:	cli    
  407d9d:	dec    esi
  407d9e:	add    ebp,DWORD PTR [edi-0x68d3b51f]
  407da4:	mul    DWORD PTR [eax+0x17cfe7b2]
  407daa:	mov    eax,0xfb9e2fb9
  407daf:	lds    ebp,FWORD PTR [edx]
  407db1:	je     0x407d81
  407db3:	fild   WORD PTR [ebx-0x3b7515a9]
  407db9:	cmp    BYTE PTR [ecx-0x1fcee2a5],cl
  407dbf:	test   DWORD PTR [ecx-0x7c],ecx
  407dc2:	je     0x407d8d
  407dc4:	cmp    eax,0x10bdd0fc
  407dc9:	pop    ds
  407dca:	mov    al,0x77
  407dcc:	lea    edx,[eax-0x5]
  407dcf:	push   0xfffffff7
  407dd1:	test   al,0xaf
  407dd3:	adc    BYTE PTR [edx],cl
  407dd5:	sbb    BYTE PTR [ebp-0x700e217c],ch
  407ddb:	add    BYTE PTR [ebp+0x56],dl
  407dde:	mov    dl,0x21
  407de0:	sub    BYTE PTR [ebx],bh
  407de2:	xchg   ecx,eax
  407de3:	and    al,0x98
  407de5:	cmp    DWORD PTR [edx-0x58],ecx
  407de8:	mov    edx,0x9c9b71f1
  407ded:	outs   dx,DWORD PTR ds:[esi]
  407dee:	inc    esi
  407def:	add    BYTE PTR [edx],bl
  407df1:	mov    al,ds:0x6d45ec05
  407df6:	in     al,dx
  407df7:	scas   eax,DWORD PTR es:[edi]
  407df8:	mov    ecx,0x7dd215ee
  407dfd:	out    dx,al
  407dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dff:	sti    
  407e00:	lock mov al,BYTE PTR [edi-0x4a24c47f]
  407e07:	das    
  407e08:	stos   DWORD PTR es:[edi],eax
  407e09:	adc    eax,0x69c1475f
  407e0e:	outs   dx,BYTE PTR ds:[esi]
  407e0f:	and    ecx,ebp
  407e11:	inc    ebp
  407e12:	sbb    dh,BYTE PTR [ebx+0x71]
  407e15:	mov    al,0x79
  407e17:	sahf   
  407e18:	sar    esi,1
  407e1a:	fst    QWORD PTR [eax]
  407e1c:	sub    BYTE PTR [ecx],cl
  407e1e:	xchg   BYTE PTR [ebp+0x70],bl
  407e21:	xor    BYTE PTR [ebx-0x3e],al
  407e24:	mov    bh,0xdf
  407e26:	rcr    ebp,1
  407e28:	mov    WORD PTR [esi-0x16],si
  407e2c:	call   0x7725aae7
  407e31:	xchg   BYTE PTR [ebx],ah
  407e33:	popf   
  407e34:	pop    ebp
  407e35:	adc    al,0xf5
  407e37:	dec    eax
  407e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e39:	mov    edi,0x19a25fc0
  407e3e:	scas   eax,DWORD PTR es:[edi]
  407e3f:	push   ss
  407e40:	xchg   ebx,eax
  407e41:	ror    BYTE PTR [ecx+0x1380babc],1
  407e47:	pop    ebp
  407e48:	fisubr WORD PTR [ebx+0x40741852]
  407e4e:	adc    al,0x2d
  407e50:	pop    ss
  407e51:	xchg   ebp,eax
  407e52:	mov    dh,0x6f
  407e54:	in     al,dx
  407e55:	call   0x983a6a77
  407e5a:	cs jle 0x407e60
  407e5d:	dec    esp
  407e5e:	pop    ecx
  407e5f:	jbe    0x407eb4
  407e61:	pusha  
  407e62:	mov    ecx,0x9e570724
  407e67:	ret    0x336e
  407e6a:	sbb    al,0x13
  407e6c:	adc    DWORD PTR [ecx],ebp
  407e6e:	and    DWORD PTR [edx],edx
  407e70:	int    0x59
  407e72:	add    ebx,DWORD PTR [eax+0x7b]
  407e75:	xchg   esi,eax
  407e76:	ret    0xa0c0
  407e79:	and    eax,0x843cc2ac
  407e7e:	or     ah,bh
  407e80:	das    
  407e81:	sub    al,0x1f
  407e83:	jp     0x407e71
  407e85:	and    edx,ecx
  407e87:	mov    ch,0xec
  407e89:	call   0xbf9935ec
  407e8e:	push   ecx
  407e8f:	add    bl,BYTE PTR [edi-0x5fa862f3]
  407e95:	mov    al,0x97
  407e97:	outs   dx,BYTE PTR ds:[esi]
  407e98:	xchg   edx,eax
  407e99:	loopne 0x407e77
  407e9b:	inc    esp
  407e9c:	es push edi
  407e9e:	ret    
  407e9f:	dec    eax
  407ea0:	and    edx,esp
  407ea2:	int    0x54
  407ea4:	cmc    
  407ea5:	sbb    eax,0xffffffe1
  407ea8:	sbb    eax,0x86e45404
  407ead:	jb     0x407ebd
  407eaf:	add    dl,BYTE PTR [esi-0x6409fa95]
  407eb5:	and    BYTE PTR [edx-0x67988032],0xd4
  407ebc:	out    0xde,eax
  407ebe:	or     ecx,DWORD PTR [ecx+0x6f949d39]
  407ec4:	loope  0x407f1c
  407ec6:	mov    ds:0xe0f44ca7,al
  407ecb:	cmp    DWORD PTR [esi-0x27],ecx
  407ece:	dec    esi
  407ecf:	xchg   edx,eax
  407ed0:	lahf   
  407ed1:	out    0x82,eax
  407ed3:	fdiv   st,st(6)
  407ed5:	jecxz  0x407e9b
  407ed7:	les    ebp,FWORD PTR [edi-0x75]
  407eda:	rcl    BYTE PTR [esi+0x3456bc4b],0x17
  407ee1:	inc    esi
  407ee2:	adc    al,0xe3
  407ee4:	setne  dh
  407ee7:	inc    esi
  407ee8:	imul   ecx,DWORD PTR [esi+0x61],0xfffffff4
  407eec:	cwde   
  407eed:	shl    BYTE PTR [ebx],cl
  407eef:	pop    ebx
  407ef0:	jo     0x407e8c
  407ef2:	mov    al,ds:0xa38baa7a
  407ef7:	push   ds
  407ef8:	leave  
  407ef9:	stc    
  407efa:	adc    DWORD PTR [ebp+0x6eb4e58e],esp
  407f00:	add    eax,0x19d26d24
  407f05:	mov    ecx,0x62c5017e
  407f0a:	xchg   ecx,eax
  407f0b:	pop    edx
  407f0c:	pop    edx
  407f0d:	sbb    al,0x8c
  407f0f:	int3   
  407f10:	cmp    ax,WORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f7d
  407f78:	imul   ebp,DWORD PTR [eax],0xffffffc2
  407f7b:	stos   BYTE PTR es:[edi],al
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407fa0
  407f84:	mov    bl,0x26
  407f86:	popf   
  407f87:	iret   
  407f88:	xor    eax,0xc996730b
  407f8d:	mov    DWORD PTR [ecx+edi*4-0x1d578aa5],ebp
  407f94:	test   al,0x58
  407f96:	sub    BYTE PTR [ebx+0x2939e669],0xf7
  407f9d:	scas   al,BYTE PTR es:[edi]
  407f9e:	or     eax,0xeb4fb4c3
  407fa3:	lods   eax,DWORD PTR ds:[esi]
  407fa4:	adc    al,0x5b
  407fa6:	shl    BYTE PTR [eax+ebp*4+0x6a89ae74],1
  407fad:	sub    esp,DWORD PTR [eax]
  407faf:	icebp  
  407fb0:	cwde   
  407fb1:	and    esp,DWORD PTR [edx-0x7e9e4bc5]
  407fb7:	jmp    0x407fdf
  407fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fba:	lods   al,BYTE PTR ds:[esi]
  407fbb:	ja     0x407f62
  407fbd:	sub    ah,cl
  407fbf:	les    esp,FWORD PTR [eax+ebp*2-0x27198cfe]
  407fc6:	or     edx,esi
  407fc8:	sub    cl,BYTE PTR [edi-0x73]
  407fcb:	cwde   
  407fcc:	js     0x407f64
  407fce:	push   cs
  407fcf:	das    
  407fd0:	adc    edi,DWORD PTR ds:0xb763e188
  407fd6:	mov    fs,WORD PTR [ebx-0xae7ae48]
  407fdc:	sub    BYTE PTR [eax],al
  407fde:	add    DWORD PTR [ebx+eax*1],edi
  407fe1:	test   eax,0xa04363bf
  407fe6:	adc    eax,0x7f909a3c
  407feb:	xchg   edi,eax
  407fec:	sahf   
  407fed:	jb     0x407fa3
  407fef:	xchg   esi,eax
  407ff0:	mov    ecx,0xa507b81b
  407ff5:	mov    edi,0xd280a05d
  407ffa:	bound  edi,QWORD PTR [ebp-0x59158626]
  408000:	sub    edi,DWORD PTR [edi-0x362715f5]
  408006:	out    dx,al
  408007:	jae    0x40802e
  408009:	repz mov ds:0xc4bee303,eax
  40800f:	pop    ebp
  408010:	lods   al,BYTE PTR ds:[esi]
  408011:	cmp    ah,BYTE PTR [ebx-0x602f3622]
  408017:	pop    edi
  408018:	and    eax,0x1cc1e493
  40801d:	outs   dx,BYTE PTR ds:[esi]
  40801e:	ret    0xc359
  408021:	sbb    cl,cl
  408023:	repnz stc 
  408025:	push   ebp
  408026:	ret    
  408027:	adc    al,0x4c
  408029:	pop    ebp
  40802a:	inc    edi
  40802b:	inc    esi
  40802c:	mov    ds:0xcc261512,eax
  408031:	dec    esp
  408032:	in     ax,0xfd
  408035:	test   BYTE PTR [ecx],al
  408037:	jle    0x408002
  408039:	jmp    0xa2e2:0x641fad76
  408040:	outs   dx,BYTE PTR ds:[esi]
  408041:	popf   
  408042:	in     al,dx
  408043:	add    ebx,DWORD PTR [ebx]
  408045:	into   
  408046:	mov    edx,0x920412e6
  40804b:	sub    dl,BYTE PTR [ecx]
  40804d:	(bad)  
  40804e:	push   esi
  40804f:	ficomp DWORD PTR [ebp-0x1d181275]
  408055:	into   
  408056:	jae    0x40800a
  408058:	je     0x40800c
  40805a:	out    0xab,eax
  40805c:	in     eax,0x3e
  40805e:	mov    al,0x80
  408060:	je     0x408027
  408062:	stos   BYTE PTR es:[edi],al
  408063:	cli    
  408064:	pop    ds
  408065:	dec    edx
  408066:	(bad)  
  408067:	push   esi
  408068:	int3   
  408069:	xchg   edx,eax
  40806a:	test   eax,0xa14fa6d9
  40806f:	(bad)  
  408070:	inc    eax
  408071:	xchg   esp,eax
  408072:	sbb    DWORD PTR [edi-0x17],edi
  408075:	add    BYTE PTR [esi+0x78fb0e9e],ah
  40807b:	ffreep st(0)
  40807d:	jmp    0x67dc9d1e
  408082:	cdq    
  408083:	into   
  408084:	pushf  
  408085:	or     eax,0xd496dfb7
  40808a:	dec    edx
  40808b:	mov    ds,edx
  40808d:	inc    eax
  40808e:	lds    ecx,FWORD PTR [ebp-0x3204ce46]
  408094:	push   eax
  408095:	cdq    
  408096:	or     ebx,DWORD PTR [eax+0x70]
  408099:	shl    BYTE PTR [eax],cl
  40809b:	and    al,0x15
  40809d:	inc    esi
  40809e:	cwde   
  40809f:	int    0x48
  4080a1:	shl    DWORD PTR [eax+0x5c],cl
  4080a4:	dec    esp
  4080a5:	jbe    0x4080fb
  4080a7:	mov    bh,0xe
  4080a9:	jp     0x4080b3
  4080ab:	sbb    eax,0x5409d351
  4080b0:	sub    eax,0x9be6a48e
  4080b5:	jmp    FWORD PTR [ebx-0x7c]
  4080b8:	adc    al,0xe2
  4080ba:	xor    eax,DWORD PTR [edi-0x44]
  4080bd:	(bad)  
  4080bf:	mov    WORD PTR [edx+0x21],ds
  4080c2:	mov    ecx,ecx
  4080c4:	aaa    
  4080c5:	jns    0x4080d6
  4080c7:	ret    
  4080c8:	sub    esi,0xedf45e09
  4080ce:	inc    eax
  4080cf:	push   esi
  4080d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d1:	data16 js 0x4080e2
  4080d4:	dec    edx
  4080d5:	push   esi
  4080d6:	xor    al,0x6e
  4080d8:	mov    eax,ds:0xb3eec1cc
  4080dd:	xor    DWORD PTR [edi+ebx*1-0x74],ecx
  4080e1:	test   eax,0x45e076cf
  4080e6:	and    BYTE PTR [eax-0x6a],cl
  4080e9:	add    eax,0x3132e805
  4080ee:	aaa    
  4080ef:	xchg   ebp,eax
  4080f0:	aam    0xa9
  4080f2:	nop
  4080f3:	imul   eax
  4080f5:	(bad)  
  4080f6:	ror    esi,0x56
  4080f9:	das    
  4080fa:	mov    WORD PTR [ebp+0x40d9742f],?
  408100:	call   0xdc01:0xa40a54ab
  408107:	add    eax,0x67473829
  40810c:	cwde   
  40810d:	xor    BYTE PTR [ebp+0x42d78bdf],bl
  408113:	pop    edi
  408114:	cmp    bh,ch
  408116:	cwde   
  408117:	ja     0x4080ef
  408119:	pop    es
  40811a:	xchg   esp,ecx
  40811c:	in     eax,0x69
  40811e:	jmp    0xea26:0x21d21c0
  408125:	mov    al,0x56
  408127:	mov    edx,ebx
  408129:	retf   0x3d50
  40812c:	pop    edi
  40812d:	push   ebx
  40812e:	sub    al,BYTE PTR [eax-0x2f]
  408131:	imul   ebp,DWORD PTR [ebp-0x15f6d732],0x6c
  408138:	ror    BYTE PTR [eax+0x7a93d9a0],0xc5
  40813f:	add    DWORD PTR [esp+ecx*2-0x7c43a64],edx
  408146:	or     esi,esi
  408148:	pushf  
  408149:	pop    es
  40814a:	dec    edi
  40814b:	in     al,0xc8
  40814d:	dec    ebx
  40814e:	repnz inc ebp
  408150:	adc    BYTE PTR [esp+edx*2-0x6b],0xc3
  408155:	(bad)  
  408156:	cld    
  408157:	lahf   
  408158:	cmp    ch,al
  40815a:	xchg   edx,eax
  40815b:	or     dl,bh
  40815d:	aad    0x86
  40815f:	popf   
  408160:	shl    BYTE PTR [esi],1
  408162:	ss daa 
  408164:	push   es
  408165:	dec    edx
  408166:	jo     0x408198
  408168:	ins    DWORD PTR es:[edi],dx
  408169:	mov    bh,0x83
  40816b:	cmp    bl,dl
  40816d:	les    edx,FWORD PTR [esp+ebx*4-0x56]
  408171:	std    
  408172:	fadd   QWORD PTR ds:0x2afaac18
  408178:	scas   eax,DWORD PTR es:[edi]
  408179:	into   
  40817a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40817b:	addr16 cmc 
  40817d:	nop
  40817e:	dec    ecx
  40817f:	xchg   esp,eax
  408180:	add    BYTE PTR [esi-0x12],ch
  408183:	mov    DWORD PTR [eax+eiz*4-0xac56ce0],0xdeb460ab
  40818e:	in     eax,dx
  40818f:	ret    0xfa9e
  408192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408193:	mov    bh,0x79
  408195:	mov    eax,0xe2dfb0e
  40819a:	mov    ch,0xa3
  40819c:	dec    eax
  40819d:	popa   
  40819e:	leave  
  40819f:	aam    0x3b
  4081a1:	jg     0x408221
  4081a3:	out    dx,eax
  4081a4:	fld    DWORD PTR [esi+ebx*1-0x1c9896a8]
  4081ab:	in     eax,dx
  4081ac:	mov    al,0x56
  4081ae:	lock xor eax,ebp
  4081b1:	je     0x408133
  4081b3:	stos   DWORD PTR es:[edi],eax
  4081b4:	pop    es
  4081b5:	test   al,al
  4081b7:	push   ebx
  4081b8:	mov    ecx,0xa072c7fa
  4081bd:	shl    DWORD PTR [edi],0xf5
  4081c0:	mov    eax,DWORD PTR ds:0x714fe9d9
  4081c6:	rep outs dx,DWORD PTR ds:[esi]
  4081c8:	mov    eax,0x2092e852
  4081cd:	mov    eax,ds:0x26dacc6e
  4081d2:	pop    esp
  4081d3:	cld    
  4081d4:	rol    DWORD PTR [eax],cl
  4081d6:	push   ecx
  4081d7:	fmul   QWORD PTR [eax-0x87e740e]
  4081dd:	mov    ebp,0x453cfc7f
  4081e2:	xor    DWORD PTR [ebp-0x1a],edx
  4081e5:	mov    eax,0x9659775b
  4081ea:	or     edi,DWORD PTR [eax-0x59381825]
  4081f0:	mov    ebp,0x151ac4ac
  4081f5:	add    dh,BYTE PTR [ebx-0x5b87ccc6]
  4081fb:	jb     0x408249
  4081fd:	add    dl,BYTE PTR [ecx+eiz*4]
  408200:	add    ebx,ebp
  408202:	add    al,0xfb
  408204:	sbb    esi,DWORD PTR [edi-0x672695d7]
  40820a:	cmp    cl,BYTE PTR [ecx+0x11]
  40820d:	mov    DWORD PTR [esi+0x48],edx
  408210:	outs   dx,BYTE PTR ds:[esi]
  408211:	lods   eax,DWORD PTR ds:[esi]
  408212:	xchg   esi,eax
  408213:	jo     0x4081c1
  408215:	repnz sbb BYTE PTR [esi-0x39],0xa1
  40821a:	retf   
  40821b:	pusha  
  40821c:	dec    esp
  40821d:	test   al,0xc
  40821f:	pop    esi
  408220:	jne    0x408201
  408222:	push   ebp
  408223:	cli    
  408224:	sbb    DWORD PTR [esi],ecx
  408226:	cwde   
  408227:	out    dx,al
  408228:	xor    cl,al
  40822a:	inc    ebx
  40822b:	das    
  40822c:	popa   
  40822d:	or     ch,BYTE PTR [ecx+eiz*1]
  408230:	pushf  
  408231:	or     al,0x7f
  408233:	enter  0x67fb,0xdf
  408237:	pushf  
  408238:	cmp    ebp,eax
  40823a:	shl    DWORD PTR ds:0x9682f78b,0xde
  408241:	add    esp,eax
  408243:	dec    esp
  408244:	call   0x48f28b7d
  408249:	lods   al,BYTE PTR ds:[esi]
  40824a:	and    eax,0x1661daee
  40824f:	je     0x408271
  408251:	xchg   edi,eax
  408252:	dec    edx
  408254:	push   esp
  408255:	fisttp DWORD PTR [edi-0x5518627b]
  40825b:	(bad)  
  40825c:	data16 jecxz 0x4081f5
  40825f:	jg     0x40825d
  408261:	sub    bl,0x8
  408264:	scas   eax,DWORD PTR es:[edi]
  408265:	push   0x1e
  408267:	ja     0x4081f3
  408269:	jae    0x408222
  40826b:	sub    eax,0x81c13ecd
  408270:	adc    cl,BYTE PTR [edx+0x17]
  408273:	enter  0x884a,0xbe
  408277:	xor    cl,ch
  408279:	leave  
  40827a:	(bad)  
  40827b:	mov    ds:0x366a50ff,al
  408280:	retf   0x628f
  408283:	xchg   ecx,eax
  408284:	scas   eax,DWORD PTR es:[edi]
  408285:	rol    DWORD PTR [eax],0x89
  408288:	cmp    bl,BYTE PTR [esi+eax*4+0x14]
  40828c:	out    0x82,al
  40828e:	mov    es,WORD PTR [edi-0x7c]
  408291:	xlat   BYTE PTR ds:[ebx]
  408292:	or     al,0x2d
  408294:	in     al,0x34
  408296:	mov    dh,0x83
  408298:	adc    eax,0x16ddc60d
  40829d:	stos   DWORD PTR es:[edi],eax
  40829e:	fbld   TBYTE PTR [ecx+0x9]
  4082a1:	sub    cl,bh
  4082a3:	xor    eax,0x7d3e4607
  4082a8:	dec    BYTE PTR [esi]
  4082aa:	cmp    ebp,edi
  4082ac:	inc    esp
  4082ad:	fstp   DWORD PTR [edi-0x19]
  4082b0:	ins    DWORD PTR es:[edi],dx
  4082b1:	ss dec edx
  4082b3:	call   0x4736:0xa5382c53
  4082ba:	lds    esp,FWORD PTR [edx+ebp*1+0x7]
  4082be:	jl     0x40825b
  4082c0:	jbe    0x408249
  4082c2:	add    eax,0x3346f9a8
  4082c7:	push   ebp
  4082c8:	rcl    BYTE PTR [edx-0x7a2e091b],1
  4082ce:	and    al,0xb2
  4082d0:	xchg   DWORD PTR [esi],eax
  4082d2:	cmp    eax,0x3994f857
  4082d7:	mov    esi,0x616fbc26
  4082dc:	inc    eax
  4082dd:	xchg   ebx,eax
  4082de:	jns    0x4082b0
  4082e0:	jne    0x4082cf
  4082e2:	sub    eax,0xfeb5d322
  4082e7:	(bad)  
  4082e8:	jle    0x40826b
  4082ea:	and    al,0xdc
  4082ec:	cmp    ah,BYTE PTR [eax]
  4082ee:	sub    eax,0x64376a92
  4082f3:	adc    al,0xa3
  4082f5:	clc    
  4082f6:	dec    esp
  4082f7:	leave  
  4082f8:	fidivr DWORD PTR [ebx+0x7dee5551]
  4082fe:	sub    cl,BYTE PTR [ecx-0x4f00363d]
  408304:	in     al,dx
  408305:	call   0x4fb69b21
  40830a:	mov    bl,0xd5
  40830c:	mov    dh,0xa6
  40830e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830f:	aad    0x3a
  408311:	pop    ebx
  408312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408313:	and    BYTE PTR [ecx],al
  408315:	icebp  
  408316:	sar    al,cl
  408318:	arpl   WORD PTR [edi+0x1c02cff4],bp
  40831e:	or     al,0xad
  408320:	enter  0x5973,0x5
  408324:	jo     0x408316
  408326:	(bad)  
  408328:	mov    dl,0x97
  40832a:	pop    ebp
  40832b:	inc    edi
  40832c:	xchg   edi,eax
  40832d:	enter  0x91a9,0x10
  408331:	clc    
  408332:	out    0x5a,eax
  408334:	push   es
  408335:	cwde   
  408336:	rcr    BYTE PTR ds:0x33443de8,0xc9
  40833d:	mov    dh,0xab
  40833f:	inc    ecx
  408340:	mov    edi,0xe976e9f5
  408345:	js     0x408373
  408347:	jbe    0x4083b2
  408349:	stos   DWORD PTR es:[edi],eax
  40834a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834b:	sbb    ecx,DWORD PTR [esi+edi*1]
  40834e:	(bad)  
  40834f:	popf   
  408350:	jmp    0x336def12
  408355:	ret    0x323d
  408358:	or     ecx,edx
  40835a:	imul   ecx,DWORD PTR [edi],0xffef7e84
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4345ef,0x17
  408394:	cmp    DWORD PTR ds:0x4345ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4345ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434653
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4345ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4345ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4345ef,eax
  4083e0:	mov    eax,ds:0x4345ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4345ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434713
  4083f7:	sbb    DWORD PTR ds:0x434603,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434687,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434683
  408413:	sbb    DWORD PTR ds:0x434713,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	out    dx,eax
  40842c:	push   es
  40842d:	rol    BYTE PTR [ebx+edi*8-0x22],cl
  408431:	jle    0x4084b1
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	es call 0x20dd:0xc0c66143
  40843f:	fneni(8087 only) 
  408441:	stos   BYTE PTR es:[edi],al
  408442:	pop    ecx
  408443:	pop    edi
  408444:	dec    ecx
  408445:	cmp    bl,0x55
  408448:	xlat   BYTE PTR ds:[ebx]
  408449:	and    DWORD PTR [ecx],ebx
  40844b:	lds    ecx,FWORD PTR [ebp-0x2f]
  40844e:	xor    esp,esi
  408450:	sub    DWORD PTR [edx-0x1af7548d],esi
  408456:	jno    0x4083f1
  408458:	add    DWORD PTR [esp+ebx*4+0x74],edi
  40845c:	inc    esi
  40845d:	pop    esi
  40845e:	mov    ch,0x83
  408460:	or     ebx,DWORD PTR [eax+0x208e4115]
  408466:	aad    0xc0
  408468:	inc    edi
  408469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846a:	jno    0x40841e
  40846c:	pop    es
  40846d:	retf   0x9e76
  408470:	(bad)  
  408471:	je     0x408480
  408473:	lock fcmovne st,st(1)
  408476:	(bad)  
  408477:	cld    
  408478:	bound  esp,QWORD PTR [edi]
  40847a:	rcr    BYTE PTR [edx+0x279d9340],0x84
  408481:	mov    ecx,0xd47d51ee
  408486:	or     eax,0xef88a50b
  40848b:	add    eax,0xbcfe696c
  408490:	adc    DWORD PTR [ebp+0x4a4db2bb],edx
  408496:	mov    esi,0x25744a68
  40849b:	fsub   DWORD PTR [ebx-0x2c01e1d4]
  4084a1:	jecxz  0x4084d1
  4084a3:	repnz stos BYTE PTR es:[edi],al
  4084a5:	xlat   BYTE PTR ds:[ebx]
  4084a6:	pop    ss
  4084a7:	scas   ax,WORD PTR es:[edi]
  4084a9:	stc    
  4084aa:	(bad)  
  4084ab:	sub    DWORD PTR [ebx],esi
  4084ad:	sub    DWORD PTR [esi+0x69],0x8e7dad44
  4084b4:	jo     0x408532
  4084b6:	ins    BYTE PTR es:[edi],dx
  4084b7:	cmp    ch,ah
  4084b9:	and    eax,0x635d653e
  4084be:	cmp    DWORD PTR [ebx-0xc],esi
  4084c1:	adc    esi,ecx
  4084c3:	dec    ebp
  4084c4:	push   esp
  4084c5:	sbb    al,BYTE PTR [esi+0x4de54373]
  4084cb:	popa   
  4084cc:	inc    ebp
  4084cd:	out    0xde,eax
  4084cf:	test   BYTE PTR [ebx],ah
  4084d1:	xor    bh,BYTE PTR ds:0xe86b9b0a
  4084d7:	xor    bh,cl
  4084d9:	mov    ebx,0x91ec7af2
  4084de:	rol    DWORD PTR [esi-0x7],0x65
  4084e2:	(bad)  
  4084e4:	sub    dl,BYTE PTR [edi-0x661c17c6]
  4084ea:	in     al,0xc3
  4084ec:	dec    ecx
  4084ed:	adc    DWORD PTR [eax+0x334e96fc],esi
  4084f3:	mov    esp,0xa6c5b9b8
  4084f8:	jns    0x408503
  4084fa:	and    ch,ah
  4084fc:	pop    esi
  4084fd:	ror    DWORD PTR [eax-0x2de69569],1
  408503:	rcr    DWORD PTR [edi-0x24],0x4f
  408507:	xor    esi,DWORD PTR ds:0xc63d6765
  40850d:	pusha  
  40850e:	cdq    
  40850f:	(bad)  [ebx]
  408511:	mov    ah,0x18
  408513:	adc    BYTE PTR [edx-0xcadf8a7],0x5f
  40851a:	or     DWORD PTR [edx],esp
  40851c:	jnp    0x40851e
  40851e:	(bad)  
  408520:	lods   al,BYTE PTR ds:[esi]
  408521:	addr16 mov ebx,0xd3ad5f12
  408527:	sbb    eax,0x98eb8cf
  40852c:	icebp  
  40852d:	push   eax
  40852e:	mov    ds:0xbc97c93e,eax
  408533:	or     BYTE PTR [eax],bl
  408535:	aad    0xe
  408537:	out    dx,al
  408538:	mov    ebx,0x297932b7
  40853d:	(bad)  
  40853e:	lock push ecx
  408540:	jmp    0x9cab:0x3299cb1b
  408547:	in     al,dx
  408548:	mov    edx,0x694e9392
  40854d:	pop    ebx
  40854e:	cmp    ebp,esp
  408550:	push   eax
  408551:	xchg   edi,eax
  408552:	push   edx
  408553:	sti    
  408554:	jecxz  0x4084d6
  408556:	push   0xffffffee
  408558:	int3   
  408559:	sub    al,0xe5
  40855b:	push   edi
  40855c:	xor    DWORD PTR [edx],ebx
  40855e:	jo     0x408556
  408560:	out    0x5c,al
  408562:	add    BYTE PTR [esp+eax*1-0x80],bh
  408566:	xchg   ebp,eax
  408567:	call   0xa77d9288
  40856c:	ds popa 
  40856e:	or     eax,0x2d2dd9c6
  408573:	imul   edx,DWORD PTR [edi],0x142a244e
  408579:	fwait
  40857a:	popf   
  40857b:	sub    eax,0x43929da8
  408580:	imul   ecx,esp,0x15
  408583:	mov    ebx,0x89b01686
  408588:	inc    edx
  408589:	test   al,0x7e
  40858b:	jecxz  0x4085b9
  40858d:	fisub  DWORD PTR [ebx-0x4fbf0604]
  408593:	(bad)
  408596:	data16 add al,bh
  408599:	daa    
  40859a:	dec    esp
  40859b:	push   ds
  40859c:	xchg   edi,eax
  40859d:	mov    ah,0x1b
  40859f:	jns    0x408527
  4085a1:	inc    edx
  4085a2:	fwait
  4085a3:	push   ds
  4085a4:	cwde   
  4085a5:	(bad)  
  4085a6:	mov    ds:0x8b5743c3,al
  4085ab:	mov    ds:0x1de04a23,eax
  4085b0:	(bad)  
  4085b1:	loopne 0x4085f8
  4085b3:	sbb    edi,ebp
  4085b5:	and    eax,0x2fa43a9
  4085ba:	sbb    BYTE PTR [ebx+0x249f8f82],ah
  4085c0:	sbb    ebp,DWORD PTR [eiz*2-0x65285800]
  4085c7:	test   eax,0x3ca1c33e
  4085cc:	lds    ebp,FWORD PTR [ecx]
  4085ce:	xor    BYTE PTR [ebx+ebx*2],ch
  4085d1:	cmp    ebx,DWORD PTR [ecx]
  4085d3:	jae    0x40860c
  4085d5:	stos   BYTE PTR es:[edi],al
  4085d6:	mov    edx,0xf5bdc39e
  4085db:	jne    0x408599
  4085dd:	sbb    ebp,DWORD PTR [ecx+0x56]
  4085e0:	(bad)  
  4085e1:	retf   0xbc14
  4085e4:	outs   dx,BYTE PTR ds:[esi]
  4085e5:	push   cs
  4085e6:	retf   
  4085e7:	or     ch,BYTE PTR [edx+0x30]
  4085ea:	push   ss
  4085eb:	jecxz  0x4085d4
  4085ed:	stos   DWORD PTR es:[edi],eax
  4085ee:	push   DWORD PTR [edi+0x70]
  4085f1:	stos   BYTE PTR es:[edi],al
  4085f2:	dec    ecx
  4085f3:	sbb    DWORD PTR [ebp+esi*4-0x32a5ad28],esp
  4085fa:	xchg   esp,eax
  4085fb:	push   0x9f71af03
  408600:	punpckhbw mm7,QWORD PTR [ecx-0x325f30da]
  408607:	xchg   ecx,eax
  408608:	mov    BYTE PTR [ebx],al
  40860a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40860b:	jle    0x408637
  40860d:	repnz vpunpcklqdq xmm2,xmm4,xmm4
  408612:	mov    edi,0xe2527755
  408617:	ret    
  408618:	sbb    al,0x22
  40861a:	adc    dl,BYTE PTR ds:0xe6476472
  408620:	imul   ebx,DWORD PTR [esi-0x753609f3],0x4789c779
  40862a:	ds inc eax
  40862c:	jp     0x40866b
  40862e:	push   edx
  40862f:	out    0x26,eax
  408631:	xor    BYTE PTR [esi-0x47f258d5],bh
  408637:	and    edx,DWORD PTR [ecx]
  408639:	pop    ds
  40863a:	and    eax,0xec85e0a3
  40863f:	ins    BYTE PTR es:[edi],dx
  408640:	(bad)  
  408641:	retf   0x521d
  408644:	out    0xa0,eax
  408646:	mov    ch,0x57
  408648:	jle    0x4086c4
  40864a:	ret    
  40864b:	jg     0x408656
  40864d:	(bad)  
  40864e:	and    DWORD PTR [edx],0x65d7e5e7
  408654:	xor    al,0xb
  408656:	das    
  408657:	xor    BYTE PTR [eax+0x3b],dl
  40865a:	cmc    
  40865b:	call   0x8f65791b
  408660:	push   cs
  408661:	mov    fs,esp
  408663:	xchg   BYTE PTR [edx],dh
  408665:	inc    ebp
  408666:	and    al,0xf0
  408668:	les    esi,FWORD PTR [ebx-0x5dcdd126]
  40866e:	cmp    eax,0x21ecc179
  408673:	mov    ds:0xb94c7d79,al
  408678:	mov    ds:0x7b27c651,al
  40867d:	and    ch,dh
  40867f:	ret    0xe0f8
  408682:	loopne 0x40869e
  408684:	mov    ch,0x7e
  408686:	fisub  WORD PTR [edx+0x7de791c1]
  40868c:	pop    edi
  40868d:	xchg   esi,eax
  40868e:	jno    0x40870f
  408690:	jb     0x4086b0
  408692:	lods   al,BYTE PTR ds:[esi]
  408693:	and    BYTE PTR [ebx],dl
  408695:	cli    
  408696:	adc    ebx,ebx
  408698:	add    BYTE PTR [eax-0xa],dh
  40869b:	push   edi
  40869c:	fs inc esi
  40869e:	pop    edx
  40869f:	inc    eax
  4086a0:	js     0x408632
  4086a2:	mov    esi,0x7510851
  4086a7:	and    DWORD PTR ds:0x4345ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4345ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4345ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4345ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4345ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4345ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4345ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4345ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434683
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0xb88c3fc8
  408731:	loop   0x408740
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	add    DWORD PTR [edx],eax
  40873d:	mov    ah,0x9b
  40873f:	add    DWORD PTR [edx],ebx
  408741:	repz or bl,BYTE PTR [esi-0x64]
  408745:	xor    ch,BYTE PTR ds:0x1a11d100
  40874b:	add    ecx,DWORD PTR [edi-0x71]
  40874e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40874f:	rcr    ebx,0xde
  408752:	push   es
  408753:	mov    esp,0x187d6068
  408758:	dec    BYTE PTR [edi+0x65fcacf2]
  40875e:	mov    bl,BYTE PTR [edi+0x62]
  408761:	xor    BYTE PTR [eax-0x74834343],dl
  408767:	pop    ds
  408768:	mov    dl,0x8c
  40876a:	fimul  DWORD PTR [ebp+0x42]
  40876d:	iret   
  40876e:	sub    al,0x8d
  408770:	jnp    0x408735
  408772:	dec    ebp
  408773:	mov    esp,DWORD PTR [eax+0x603da6b0]
  408779:	dec    ebx
  40877a:	add    BYTE PTR [edi-0x3d4695dd],dl
  408780:	jo     0x4087c1
  408782:	mov    al,ds:0x5fe96ae7
  408787:	in     al,dx
  408788:	mov    ch,0x65
  40878a:	pop    ebp
  40878b:	mov    esp,0x70adf64e
  408790:	adc    DWORD PTR [ebx-0x15],ebx
  408793:	mov    al,ds:0x2944771e
  408798:	rcl    BYTE PTR ds:0x105afeea,0x25
  40879f:	out    dx,eax
  4087a0:	push   ss
  4087a1:	aas    
  4087a2:	ret    0x524e
  4087a5:	pop    ebp
  4087a6:	push   ebx
  4087a7:	mov    ds:0xeaddbadf,al
  4087ac:	jl     0x40879f
  4087ae:	xor    eax,0x3daa4894
  4087b3:	test   al,0x9b
  4087b5:	ss pushw ss
  4087b8:	inc    esi
  4087b9:	sbb    ch,BYTE PTR [ebx]
  4087bb:	into   
  4087bc:	inc    esi
  4087bd:	aam    0xf9
  4087bf:	fsubr  QWORD PTR ds:0x8d6a1b71
  4087c5:	sbb    edi,ebp
  4087c7:	xchg   edi,eax
  4087c8:	(bad)  
  4087c9:	leave  
  4087ca:	mov    edx,0x5ed864a0
  4087cf:	sub    BYTE PTR cs:[edi+eiz*4+0x5b],cl
  4087d4:	dec    edx
  4087d5:	popf   
  4087d6:	retf   
  4087d7:	sbb    DWORD PTR [edi+ebp*4],eax
  4087da:	mov    ecx,0x438c7e69
  4087df:	arpl   WORD PTR [eax+0x1],bx
  4087e2:	ins    DWORD PTR es:[edi],dx
  4087e3:	pop    ecx
  4087e4:	xchg   ebx,eax
  4087e5:	shl    cl,1
  4087e7:	sar    cl,cl
  4087e9:	dec    ebp
  4087ea:	lock call 0x5cb9ae8d
  4087f0:	push   esi
  4087f1:	sub    ah,dl
  4087f3:	ret    0x1070
  4087f6:	adc    eax,0x51a19ad6
  4087fb:	xor    dh,0x3
  4087fe:	add    edx,ecx
  408800:	and    eax,0xd6db3c54
  408805:	pop    es
  408806:	out    dx,al
  408807:	lods   al,BYTE PTR gs:[esi]
  408809:	mov    bh,0x2c
  40880b:	xchg   ch,cl
  40880d:	mov    ebx,0xf3ab5042
  408812:	pop    esp
  408813:	les    esp,FWORD PTR [eax-0x54]
  408816:	mov    bh,0xd2
  408818:	or     eax,DWORD PTR [edx+0x65d4071d]
  40881e:	stos   BYTE PTR es:[edi],al
  40881f:	fs push esi
  408821:	call   0x1b6953ec
  408826:	fucomip st,st(5)
  408828:	xchg   esp,eax
  408829:	fbstp  TBYTE PTR [esi]
  40882b:	gs out 0x52,al
  40882e:	and    BYTE PTR [esi+0x236db83e],0xf6
  408835:	jb     0x408882
  408837:	popf   
  408838:	sbb    eax,0xe1aa6cc1
  40883d:	jg     0x408815
  40883f:	push   0xd6ecc59d
  408844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408845:	inc    esi
  408846:	jle    0x4087ea
  408848:	ret    0x53ef
  40884b:	cmp    DWORD PTR [esi+0x18],edx
  40884e:	xchg   BYTE PTR [eax],ch
  408850:	jnp    0x408869
  408852:	imul   ecx,DWORD PTR [edi],0x36
  408855:	mov    dl,0x17
  408857:	dec    esp
  408858:	sbb    bh,al
  40885a:	and    eax,0x424e9f4
  40885f:	movaps XMMWORD PTR [edx],xmm5
  408862:	pushf  
  408863:	cmp    eax,0xb363a534
  408868:	mov    eax,0x5499104d
  40886d:	dec    edi
  40886e:	inc    esp
  40886f:	sbb    esi,DWORD PTR ds:0xad6a44b3
  408875:	sub    al,cl
  408877:	cdq    
  408878:	mov    BYTE PTR [eax-0x5a],dl
  40887b:	mov    ecx,0x4c9799bc
  408880:	jp     0x4088b0
  408882:	call   0xb3bc:0x6b55578d
  408889:	sahf   
  40888a:	mov    cs,WORD PTR [esp+edi*2]
  40888d:	add    dh,ah
  40888f:	pop    esi
  408890:	pop    ebx
  408891:	cld    
  408892:	push   ebx
  408893:	lds    esi,FWORD PTR [edi]
  408895:	dec    eax
  408896:	xor    edx,DWORD PTR [edx-0x6fa5fee5]
  40889c:	jmp    0x4088a7
  40889e:	mov    ebx,0xaa56b512
  4088a3:	sub    al,0x90
  4088a5:	into   
  4088a6:	pop    es
  4088a7:	pop    esp
  4088a8:	clc    
  4088a9:	xchg   esi,eax
  4088aa:	jg     0x40887e
  4088ac:	fdiv   DWORD PTR [edx+0x353f0b86]
  4088b2:	push   ss
  4088b3:	or     BYTE PTR ds:0xabdf8fc7,bl
  4088b9:	pop    ds
  4088ba:	cmp    edi,DWORD PTR [eax*4+0x344f4c1b]
  4088c1:	inc    esi
  4088c2:	scas   al,BYTE PTR es:[edi]
  4088c3:	mov    cl,BYTE PTR [ecx+0x759872cc]
  4088c9:	push   cs
  4088ca:	pop    edi
  4088cb:	cmc    
  4088cc:	mov    al,0xf9
  4088ce:	pop    ebp
  4088cf:	push   0xf137ce59
  4088d4:	shr    BYTE PTR [esi+0x0],cl
  4088d7:	or     DWORD PTR ds:0xabe49744,esp
  4088dd:	inc    edx
  4088de:	xchg   esi,eax
  4088df:	adc    ebp,DWORD PTR [edi]
  4088e1:	sar    DWORD PTR [ebp+0x4a],0x53
  4088e5:	cs dec edx
  4088e7:	into   
  4088e8:	gs mov esi,esp
  4088eb:	cli    
  4088ec:	fmul   DWORD PTR [esp+edx*8-0x78d7ee11]
  4088f3:	jge    0x4088ae
  4088f5:	xchg   edi,eax
  4088f6:	fwait
  4088f7:	out    0xcb,al
  4088f9:	mov    dh,0x3f
  4088fb:	sub    DWORD PTR [edi+0x6ccf3d1c],0x5a
  408902:	(bad)  
  408904:	mov    ebp,0xbc530618
  408909:	dec    eax
  40890a:	fbld   TBYTE PTR [edx*2-0x5dcf1255]
  408911:	daa    
  408912:	or     ebp,ecx
  408914:	fstp   st(7)
  408916:	pushf  
  408917:	cmp    ebx,edx
  408919:	das    
  40891a:	ja     0x4088b1
  40891c:	mov    eax,0x656c3339
  408921:	ret    
  408922:	mov    bh,0xf1
  408924:	into   
  408925:	mov    fs,WORD PTR [eax+0x13]
  408928:	inc    ebx
  408929:	not    DWORD PTR [eax-0x6bce7f75]
  40892f:	mov    ch,0xf3
  408931:	icebp  
  408932:	dec    ebx
  408933:	inc    edi
  408934:	jmp    0x4088e9
  408936:	(bad)  
  408937:	inc    ecx
  408938:	cmp    BYTE PTR [ecx+esi*4+0xb535eb2],cl
  40893f:	je     0x40892b
  408941:	cmp    esp,DWORD PTR [esi]
  408943:	clc    
  408944:	mov    dl,0x43
  408946:	bound  ecx,QWORD PTR [ebp-0x4ed56734]
  40894c:	in     eax,0x73
  40894e:	pop    ds
  40894f:	push   esi
  408950:	mov    eax,0xfebe6a62
  408955:	fild   QWORD PTR [ebp-0x39]
  408958:	mov    edx,0x7688cc2c
  40895d:	pop    es
  40895e:	push   0x4b
  408960:	(bad)  
  408961:	int    0x24
  408963:	ret    
  408964:	mov    al,ds:0x56f306e9
  408969:	dec    esi
  40896a:	and    al,BYTE PTR [ebx+0x69]
  40896d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40896e:	sbb    BYTE PTR [ecx],bh
  408970:	jp     0x40893d
  408972:	adc    DWORD PTR [eax+0x4bd549c],esp
  408978:	push   0x322e624c
  40897d:	xor    BYTE PTR [edx+edx*1+0x16],ch
  408981:	dec    ecx
  408982:	jge    0x408966
  408984:	mov    eax,ds:0x573e5557
  408989:	inc    eax
  40898a:	mov    esi,0x8711c6d3
  40898f:	out    0x60,eax
  408991:	mov    gs,WORD PTR [ebx+ebx*4-0x34]
  408995:	mov    eax,ds:0x580dbb6e
  40899a:	add    esi,DWORD PTR [edi]
  40899c:	xchg   BYTE PTR [ebp+0x7b78c954],ah
  4089a2:	sub    al,0xd4
  4089a4:	xchg   ebx,eax
  4089a5:	xchg   ebx,eax
  4089a6:	mov    edi,DWORD PTR [ebp+0x8]
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x4345eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	push   ecx
  4089db:	adc    BYTE PTR [edi+0x7edbd1fd],al
  4089e1:	jle    0x4089c4
  4089e3:	js     0x408a63
  4089e5:	jle    0x408998
  4089e7:	ins    DWORD PTR es:[edi],dx
  4089e8:	aam    0x13
  4089ea:	xor    cl,ch
  4089ec:	jae    0x408a1f
  4089ee:	and    BYTE PTR [eax-0x61ec6df1],dh
  4089f4:	loopne 0x408a0d
  4089f6:	xchg   ecx,eax
  4089f7:	inc    esi
  4089f8:	gs adc eax,0x658a219d
  4089fe:	xchg   esp,eax
  4089ff:	or     esp,DWORD PTR [eax+0x7b85378f]
  408a05:	push   ebx
  408a06:	stos   BYTE PTR es:[edi],al
  408a07:	aaa    
  408a08:	sbb    BYTE PTR [ecx+0x313189],al
  408a0e:	xchg   edi,eax
  408a0f:	cwde   
  408a10:	inc    ecx
  408a11:	pop    ebp
  408a12:	add    BYTE PTR [ebx-0x34],ah
  408a15:	ret    
  408a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a17:	sub    WORD PTR [ebp-0x67d7f929],si
  408a1e:	in     al,dx
  408a1f:	sbb    eax,0xbd895df7
  408a24:	jns    0x408a81
  408a26:	outs   dx,DWORD PTR ds:[esi]
  408a27:	jne    0x4089d5
  408a29:	fs pop esi
  408a2b:	push   ebx
  408a2c:	add    BYTE PTR [ecx+0x3286f015],al
  408a32:	stos   BYTE PTR es:[edi],al
  408a33:	loope  0x408a4b
  408a35:	or     DWORD PTR [ecx],esp
  408a37:	mov    bh,0x16
  408a39:	popf   
  408a3a:	mov    dh,BYTE PTR [esi]
  408a3c:	xchg   ecx,eax
  408a3d:	xor    DWORD PTR [edi],esi
  408a3f:	inc    esp
  408a40:	std    
  408a41:	adc    edi,0xf32e45e4
  408a47:	shr    BYTE PTR [ecx+0x43],1
  408a4a:	repnz outs dx,DWORD PTR ds:[esi]
  408a4c:	mov    al,0x79
  408a4e:	mov    ah,dh
  408a50:	xor    al,0xcf
  408a52:	jecxz  0x408a94
  408a54:	cmp    ebx,DWORD PTR [edi+0x6736f5f4]
  408a5a:	fcomip st,st(5)
  408a5c:	jmp    0x408a5c
  408a5e:	call   0x5cb7c9b1
  408a63:	retf   0x77d8
  408a66:	mov    edi,0xb75c5b3c
  408a6b:	mov    ch,0x54
  408a6d:	xchg   DWORD PTR [ebp+esi*1-0x4],esp
  408a71:	stc    
  408a72:	mov    al,ds:0x2e57c9b
  408a77:	pop    ebp
  408a78:	clc    
  408a79:	mov    ?,WORD PTR [ebp+0x3579b841]
  408a7f:	cmp    esp,DWORD PTR [edx+0x58fbbca6]
  408a85:	mov    ch,0x60
  408a87:	pop    ds
  408a88:	sub    ebp,DWORD PTR [ecx-0x77d80980]
  408a8e:	push   ds
  408a8f:	mov    ch,0x19
  408a91:	add    DWORD PTR [ebx-0x29],0xffffffc3
  408a95:	mov    esi,0xc18c811c
  408a9a:	(bad)  
  408a9b:	popf   
  408a9c:	dec    dx
  408a9e:	fisttp QWORD PTR [eax+esi*8]
  408aa1:	xor    al,0x6a
  408aa3:	inc    ecx
  408aa4:	mov    dl,dl
  408aa6:	ret    0xc4df
  408aa9:	jae    0x408ab4
  408aab:	fwait
  408aac:	pop    esp
  408aad:	js     0x408aae
  408aaf:	paddd  mm7,QWORD PTR [ecx-0x77]
  408ab3:	(bad)  
  408ab4:	cmp    edi,DWORD PTR [esp+esi*2-0x60]
  408ab8:	jo     0x408a56
  408aba:	mov    ebx,0x16bc0fe3
  408abf:	pop    eax
  408ac0:	add    al,0x2b
  408ac2:	or     al,0x78
  408ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac5:	xchg   esi,eax
  408ac6:	fdiv   st(6),st
  408ac8:	mov    dl,0xe1
  408aca:	push   0xffffff91
  408acc:	jg     0x408a95
  408ace:	sbb    esi,ebp
  408ad0:	adc    al,0x72
  408ad2:	lahf   
  408ad3:	aam    0x85
  408ad5:	sub    al,0xe2
  408ad7:	stos   BYTE PTR es:[edi],al
  408ad8:	and    al,BYTE PTR [eax]
  408ada:	pushf  
  408adb:	mov    BYTE PTR [ebx],dh
  408add:	(bad)  
  408ade:	mov    ds:0xfbd6d2e8,eax
  408ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae4:	imul   eax,DWORD PTR [ebx+eax*8-0x684d1ffb],0x7
  408aec:	mov    esi,0x4578baa3
  408af1:	mov    eax,ds:0xa1d4858e
  408af6:	pop    edi
  408af7:	jmp    0xe3721c01
  408afc:	pusha  
  408afd:	inc    ebp
  408afe:	jle    0x408aa5
  408b00:	inc    DWORD PTR [ecx+0x6a]
  408b03:	rcl    DWORD PTR [ebx],1
  408b05:	jp     0x408aba
  408b07:	sub    edi,ebx
  408b09:	dec    DWORD PTR [edx+0x228281a7]
  408b0f:	sub    dl,BYTE PTR [ebx+0x50d2dcca]
  408b15:	mov    al,BYTE PTR [ebx+0x35731a45]
  408b1b:	adc    BYTE PTR [ebp+0x68],dh
  408b1e:	lds    ebx,FWORD PTR [edi-0xb]
  408b21:	mov    al,ds:0x1749403b
  408b26:	pop    esi
  408b27:	rcr    DWORD PTR [ecx-0x2a6e7ea4],1
  408b2d:	stos   BYTE PTR es:[edi],al
  408b2e:	jmp    0x408ac8
  408b30:	fwait
  408b31:	and    BYTE PTR [ebx+0x68de095c],cl
  408b37:	sahf   
  408b38:	mov    dl,0x88
  408b3a:	lahf   
  408b3b:	push   ss
  408b3c:	xchg   BYTE PTR [esi+0x613447ba],al
  408b42:	and    eax,0xe270d2f
  408b47:	je     0x408b26
  408b49:	aam    0xca
  408b4b:	and    al,0xb
  408b4d:	push   esi
  408b4e:	fmul   st(1),st
  408b50:	and    eax,0x34717ad0
  408b55:	jge    0x408b71
  408b57:	fcom   QWORD PTR [edx]
  408b59:	imul   ebx,eax,0x8fb251e9
  408b5f:	jp     0x408ba1
  408b61:	imul   esp,DWORD PTR [esi+0x5d69aaf6],0x1bf61684
  408b6b:	je     0x408b6b
  408b6d:	js     0x408bd4
  408b6f:	jecxz  0x408b99
  408b71:	mul    DWORD PTR [edi+0x2456eb61]
  408b77:	ds jge 0x408b92
  408b7a:	dec    eax
  408b7b:	ror    edx,0x13
  408b7e:	jb     0x408ba6
  408b80:	ja     0x408b1a
  408b82:	popf   
  408b83:	inc    esi
  408b84:	scas   al,BYTE PTR es:[edi]
  408b85:	(bad)  
  408b86:	fucomp st(0)
  408b88:	fsub   QWORD PTR [eax-0x406bae96]
  408b8e:	test   BYTE PTR [esi-0x77],al
  408b91:	mov    BYTE PTR [eax],bl
  408b93:	lock mov edi,eax
  408b96:	(bad)  
  408b97:	jbe    0x408b5d
  408b99:	das    
  408b9a:	push   ebp
  408b9b:	sti    
  408b9c:	xchg   ebx,eax
  408b9d:	sbb    cl,BYTE PTR [ebx+0x29b5fb97]
  408ba3:	adc    al,0x17
  408ba5:	hlt    
  408ba6:	or     BYTE PTR ds:0xaa572568,al
  408bac:	leave  
  408bad:	mov    edx,0xa91b8091
  408bb2:	ret    0x5f43
  408bb5:	test   DWORD PTR [ecx+ecx*4-0xe],ebx
  408bb9:	xchg   si,ax
  408bbb:	out    dx,al
  408bbc:	stos   BYTE PTR es:[edi],al
  408bbd:	push   ebx
  408bbe:	sti    
  408bbf:	test   al,0x1d
  408bc1:	cmp    eax,DWORD PTR [ecx]
  408bc3:	clc    
  408bc4:	mov    ds:0x822714b1,eax
  408bc9:	cmp    eax,0x621c3878
  408bce:	test   al,dl
  408bd0:	jmp    0x1889:0x3d6be4c1
  408bd7:	pop    esi
  408bd8:	fisttp WORD PTR [edx+0x4f]
  408bdb:	je     0x408c21
  408bdd:	daa    
  408bde:	pop    DWORD PTR [edx-0x4fd35288]
  408be4:	enter  0x28e9,0x92
  408be8:	rol    DWORD PTR [edi],0x44
  408beb:	sbb    eax,0xc7d77846
  408bf0:	out    dx,al
  408bf1:	sti    
  408bf2:	mov    ecx,0x164f7a05
  408bf7:	dec    ebp
  408bf8:	loop   0x408bb1
  408bfa:	xchg   bh,dh
  408bfc:	enter  0xc4f3,0x33
  408c00:	mov    cl,0x88
  408c02:	sub    eax,0x92608506
  408c07:	sub    eax,0xf3c10adf
  408c0c:	cmp    BYTE PTR [edi-0xb],dh
  408c0f:	adc    edx,DWORD PTR [esi+ecx*2+0x1e]
  408c13:	sub    dl,BYTE PTR [edx]
  408c15:	xor    dh,BYTE PTR [ebp-0x1b512d8c]
  408c1b:	xchg   edi,eax
  408c1c:	inc    edi
  408c1d:	xor    al,0x2c
  408c1f:	xchg   bl,bl
  408c21:	ret    0x4326
  408c24:	mov    esp,0x8b3cae27
  408c29:	cmc    
  408c2a:	fisttp WORD PTR [edi]
  408c2c:	fnstsw WORD PTR [edi]
  408c2e:	lea    edx,[esi+esi*8+0x47]
  408c32:	mov    bl,0xc5
  408c34:	pop    eax
  408c35:	adc    dl,BYTE PTR [edx-0x7b0b24dc]
  408c3b:	inc    esi
  408c3c:	dec    esi
  408c3d:	mov    ebp,0x47c2c489
  408c42:	xlat   BYTE PTR ds:[ebx]
  408c43:	(bad)  
  408c44:	adc    BYTE PTR ds:0xdeba1ccd,bh
  408c4a:	je     0x408c62
  408c4c:	rcr    esp,cl
  408c4e:	int    0x31
  408c50:	and    BYTE PTR [edi],cl
  408c52:	test   DWORD PTR [ecx+0x0],eax
  408c55:	add    BYTE PTR [eax],al
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4346c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434687,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4346b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4345ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4346ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434677,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	out    dx,al
  408cca:	neg    ecx
  408ccc:	mov    ah,0x44
  408cce:	in     eax,0x7e
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408cc2
  408cd6:	push   es
  408cd7:	push   ebx
  408cd8:	jge    0x408cf0
  408cda:	xor    DWORD PTR [eax-0x65b1e2a4],edi
  408ce0:	sub    DWORD PTR ss:[esi+edx*2+0x9],edi
  408ce5:	xor    cl,BYTE PTR [esi+0x3895dbf2]
  408ceb:	and    al,cl
  408ced:	sbb    bl,BYTE PTR [edx]
  408cef:	dec    esi
  408cf0:	push   0x54
  408cf2:	(bad)  
  408cf3:	xor    al,0x4b
  408cf5:	int3   
  408cf6:	test   edx,eax
  408cf8:	inc    ebx
  408cf9:	ficom  WORD PTR [ebx-0x56d05628]
  408cff:	dec    esi
  408d00:	mov    es:0x46d1d6c8,al
  408d06:	mov    ds:0x4120cadb,eax
  408d0b:	js     0x408cc6
  408d0d:	int3   
  408d0e:	bound  ebx,QWORD PTR [eax]
  408d10:	mov    eax,0xf5080ee7
  408d15:	mov    dl,0xbb
  408d17:	push   ebp
  408d18:	dec    edx
  408d19:	rcl    BYTE PTR [edi-0x40],cl
  408d1c:	leave  
  408d1d:	ins    DWORD PTR es:[edi],dx
  408d1e:	jmp    0xe3b5:0xeaaa9cf1
  408d25:	sub    eax,0xee1b10ed
  408d2a:	mov    edi,0x4d02a23f
  408d2f:	stc    
  408d30:	fisub  WORD PTR [ecx-0x677736aa]
  408d36:	lahf   
  408d37:	dec    edx
  408d38:	pusha  
  408d39:	mov    bh,0x7f
  408d3b:	pop    ecx
  408d3c:	int    0x6d
  408d3e:	(bad)  [esi+0x10a2fa2]
  408d44:	enter  0x298b,0x9b
  408d48:	add    eax,0xb53b24d2
  408d4d:	loopne 0x408cf0
  408d4f:	mov    bh,0xf7
  408d51:	repz pop ds
  408d53:	xlat   BYTE PTR ds:[ebx]
  408d54:	stos   BYTE PTR es:[edi],al
  408d55:	mov    cl,0xa2
  408d57:	and    DWORD PTR [ebx-0xc028065],edx
  408d5d:	mov    eax,0x823374c3
  408d62:	test   DWORD PTR [esi-0x10c4e9b3],edx
  408d68:	sub    ecx,0x904d7479
  408d6e:	xor    bh,BYTE PTR [ebx]
  408d70:	adc    DWORD PTR [ecx+0x2677c282],0xffffffb3
  408d77:	call   0x8aece8bb
  408d7c:	xor    al,0x99
  408d7e:	mov    ecx,0xf77d9af8
  408d83:	rcr    BYTE PTR [bp+si-0x4f19],0xd
  408d89:	push   ds
  408d8a:	mov    ecx,0x5086564c
  408d8f:	shl    BYTE PTR [edi+ecx*8],0xac
  408d93:	fadd   DWORD PTR [ebx]
  408d95:	mov    edx,0x4285e816
  408d9a:	cmp    BYTE PTR [eax],dl
  408d9c:	cld    
  408d9d:	pop    esp
  408d9e:	mov    ds:0xf23d1f15,eax
  408da3:	nop
  408da4:	fbstp  TBYTE PTR [ecx+ebx*2+0x7c]
  408da8:	je     0x408d6f
  408daa:	popf   
  408dab:	(bad)  
  408dac:	ja     0x408e11
  408dae:	pop    es
  408daf:	call   0x9189:0x2c9361c5
  408db6:	mov    ?,WORD PTR [edi]
  408db8:	mov    dh,0x52
  408dba:	bound  eax,QWORD PTR [ebp-0x3d]
  408dbd:	std    
  408dbe:	jmp    0xf2a39e81
  408dc3:	sbb    ah,BYTE PTR [edx+0x1d78475d]
  408dc9:	pusha  
  408dca:	sub    BYTE PTR [edi],dl
  408dcc:	cmc    
  408dcd:	gs int3 
  408dcf:	sub    cl,al
  408dd1:	das    
  408dd2:	shl    DWORD PTR [eax-0x1c],0x68
  408dd6:	and    al,0x32
  408dd8:	ins    DWORD PTR es:[edi],dx
  408dd9:	mov    DWORD PTR [edi],eax
  408ddb:	jnp    0x408dab
  408ddd:	xchg   edx,eax
  408dde:	add    eax,0x4816a714
  408de3:	cmp    ah,BYTE PTR [eax+0xfa67b62]
  408de9:	cdq    
  408dea:	jo     0x408df1
  408dec:	mov    ebx,edx
  408dee:	ret    0xc516
  408df1:	(bad)  
  408df2:	mov    edi,0xb64eb9dd
  408df7:	lods   eax,DWORD PTR ds:[esi]
  408df8:	mov    bh,bl
  408dfa:	sahf   
  408dfb:	scas   al,BYTE PTR es:[edi]
  408dfc:	jmp    0xb08fdca0
  408e01:	cmp    DWORD PTR [edi-0x27986d9c],ecx
  408e07:	arpl   WORD PTR [ebp-0x7d],bx
  408e0a:	sub    bl,al
  408e0c:	mov    ds,WORD PTR [ebp-0x33]
  408e0f:	dec    eax
  408e10:	pop    edi
  408e11:	loope  0x408dea
  408e13:	sub    ecx,DWORD PTR ds:0xd15e0ab9
  408e19:	pop    esi
  408e1a:	cmp    ebx,DWORD PTR [edi-0x3394613f]
  408e20:	loopne 0x408de0
  408e22:	dec    eax
  408e23:	(bad)  
  408e24:	out    0x55,eax
  408e26:	xor    ecx,DWORD PTR [edx+0xc]
  408e29:	pop    ebp
  408e2a:	aad    0x14
  408e2c:	pusha  
  408e2d:	add    BYTE PTR [ebx+0x6c06b8bd],cl
  408e33:	lods   al,BYTE PTR ds:[esi]
  408e34:	mov    ecx,0xe31a54b2
  408e39:	add    al,0x5a
  408e3b:	loope  0x408e68
  408e3d:	frstor [eax-0x1c]
  408e40:	sub    esi,eax
  408e42:	aam    0xc
  408e44:	inc    esi
  408e45:	xor    al,0x95
  408e47:	push   ds
  408e48:	fldcw  WORD PTR [esp+ebp*4+0x432725a6]
  408e4f:	add    edx,DWORD PTR [ebx-0x4f]
  408e52:	or     esi,DWORD PTR [edi]
  408e54:	test   eax,0x482dcae0
  408e59:	loope  0x408ecf
  408e5b:	inc    esp
  408e5c:	add    DWORD PTR [edi-0x65],esi
  408e5f:	outs   dx,DWORD PTR ds:[esi]
  408e60:	fbld   TBYTE PTR ds:0x14da01fe
  408e66:	push   ds
  408e67:	aas    
  408e68:	sti    
  408e69:	or     esi,esp
  408e6b:	mov    bl,0xfc
  408e6d:	in     al,0x30
  408e6f:	push   esi
  408e70:	dec    BYTE PTR [esi]
  408e72:	jno    0x408e39
  408e74:	jmp    FWORD PTR [ebp+esi*4+0x24026a84]
  408e7b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408e7d:	sub    eax,0x587865bf
  408e82:	mov    eax,ds:0x9ef45900
  408e87:	xor    BYTE PTR [esi],ah
  408e89:	clc    
  408e8a:	popf   
  408e8b:	cdq    
  408e8c:	jo     0x408e5f
  408e8e:	(bad)
  408e91:	xchg   ebx,eax
  408e92:	aas    
  408e93:	pop    esp
  408e94:	xor    BYTE PTR [edi-0x53de8bd],cl
  408e9a:	outs   dx,DWORD PTR ds:[esi]
  408e9b:	pushf  
  408e9c:	test   DWORD PTR [esi-0x478590b5],ecx
  408ea2:	xor    ebp,eax
  408ea4:	sbb    bl,bl
  408ea6:	fcomp  DWORD PTR [esp+ebp*4]
  408ea9:	ds mov cl,0x8a
  408eac:	mov    ah,0xfa
  408eae:	fsub   st(0),st
  408eb0:	test   al,0x77
  408eb2:	int    0x45
  408eb4:	inc    edx
  408eb5:	mov    dl,BYTE PTR [edi]
  408eb7:	inc    edx
  408eb8:	jle    0x408f0a
  408eba:	adc    BYTE PTR [edx-0x15],0x85
  408ebe:	pop    edx
  408ebf:	les    edi,FWORD PTR [ebp+0x2d16290f]
  408ec5:	mov    eax,ds:0x939edd90
  408eca:	sbb    BYTE PTR [ebx],0xdf
  408ecd:	inc    DWORD PTR [esi]
  408ecf:	lock fptan 
  408ed2:	outs   dx,BYTE PTR ds:[esi]
  408ed3:	jbe    0x408ec2
  408ed5:	ja     0x408f11
  408ed7:	xchg   DWORD PTR [edi+0x67975364],eax
  408edd:	mov    eax,0x3ba35c70
  408ee2:	mov    dl,0xa9
  408ee4:	fstp   QWORD PTR [eax]
  408ee6:	pop    ss
  408ee7:	ss xchg ebx,eax
  408ee9:	loop   0x408e93
  408eeb:	pushf  
  408eec:	cli    
  408eed:	mov    edx,0x3b6ab1d7
  408ef2:	call   FWORD PTR [ebp+0x55]
  408ef5:	iret   
  408ef6:	pushf  
  408ef7:	daa    
  408ef8:	dec    esp
  408ef9:	xlat   BYTE PTR ds:[ebx]
  408efa:	repz stc 
  408efc:	and    BYTE PTR [ebp+0x78],ah
  408eff:	sbb    BYTE PTR [eax],cl
  408f01:	xchg   ebp,eax
  408f02:	adc    eax,esp
  408f04:	cmp    edi,DWORD PTR ds:0x7c80b2e4
  408f0a:	int    0xdb
  408f0c:	inc    ebp
  408f0d:	mov    DWORD PTR [edx+ebx*1+0x1eccfa],eax
  408f14:	and    al,0x41
  408f16:	lock add esp,DWORD PTR [esi-0x70e57bb5]
  408f1d:	dec    esp
  408f1e:	iret   
  408f1f:	or     al,BYTE PTR [esi+edi*4]
  408f22:	les    edx,FWORD PTR [edx]
  408f24:	pop    esp
  408f25:	out    0x17,al
  408f27:	fist   DWORD PTR [eax-0x22]
  408f2a:	xchg   ecx,eax
  408f2b:	dec    ebp
  408f2c:	or     ebx,DWORD PTR [ecx+0x4643737d]
  408f32:	lea    ebx,[edi*1+0x2912ff94]
  408f39:	jne    0x408edd
  408f3b:	adc    ebp,esi
  408f3d:	dec    ecx
  408f3e:	xchg   ebx,eax
  408f3f:	in     eax,0x83
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x4346c3,0x434683
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434703
  408f5a:	or     DWORD PTR ds:0x4346c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4345df,0x43464f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4346c7,0x434647
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4345eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4346b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4345ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x7c1737f9]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x40904b
  408fec:	shl    BYTE PTR [esi],cl
  408fee:	iret   
  408fef:	sub    al,0xb9
  408ff1:	mov    esp,0x16dafd6f
  408ff6:	dec    ebp
  408ff7:	sub    al,0xc2
  408ff9:	mov    bh,0x50
  408ffb:	sub    ah,0xb3
  408ffe:	scas   eax,DWORD PTR es:[edi]
  408fff:	or     DWORD PTR [eax+eax*2+0x4c],esp
  409003:	test   DWORD PTR [edx+0xcb98e56],eax
  409009:	adc    BYTE PTR [esi+0x7c],ch
  40900c:	xor    DWORD PTR [esi+0x583d520c],ebx
  409012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409013:	retf   
  409014:	les    eax,FWORD PTR gs:[ebp-0x29]
  409018:	jbe    0x40901f
  40901a:	cmp    bh,BYTE PTR [edi+esi*2-0x6c]
  40901e:	clc    
  40901f:	(bad)  
  409020:	jns    0x408fc1
  409022:	test   BYTE PTR [ebp+0x1],dl
  409025:	lock repz je 0x408fe3
  409029:	pop    ss
  40902a:	fs dec esi
  40902c:	enter  0x7394,0x26
  409030:	fild   QWORD PTR [edx]
  409032:	(bad)  [ebx-0x2f]
  409035:	or     DWORD PTR [esi],ebx
  409037:	in     al,0xa6
  409039:	xor    ecx,esi
  40903b:	cmp    BYTE PTR [ebp-0x3b],bl
  40903e:	stos   DWORD PTR es:[edi],eax
  40903f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409040:	push   esi
  409041:	push   ebx
  409042:	xor    eax,0x1b0092fc
  409047:	jmp    0x408ff3
  409049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40904a:	mov    dl,0x16
  40904c:	shl    bh,cl
  40904e:	(bad)  
  40904f:	dec    edi
  409050:	push   ebp
  409051:	jp     0x4090aa
  409053:	push   ds
  409054:	shl    DWORD PTR [eax],1
  409056:	fs mov dh,0xa8
  409059:	enter  0xc271,0x26
  40905d:	push   eax
  40905e:	mov    ebx,0x9c40f3ab
  409063:	sbb    cl,BYTE PTR [edi]
  409065:	dec    ebp
  409066:	mov    esp,0xe43ab59
  40906b:	or     dl,BYTE PTR [eax]
  40906d:	cmp    al,0x27
  40906f:	mov    eax,ds:0xf0e4fa82
  409074:	cli    
  409075:	push   ds
  409076:	add    eax,0x4aa94280
  40907b:	add    edx,0x73
  40907e:	dec    eax
  40907f:	and    eax,0x89a9985e
  409084:	sbb    BYTE PTR [esi-0x15],0xec
  409088:	mov    ebp,0xbd2e0ff0
  40908d:	cmp    BYTE PTR [esi+0x63],al
  409090:	mov    ds:0x2d9d419d,eax
  409095:	and    eax,0xa99eb301
  40909a:	inc    ebp
  40909b:	push   edi
  40909c:	dec    edi
  40909d:	xor    ecx,0xffffffc3
  4090a0:	ja     0x40909f
  4090a2:	test   al,0x12
  4090a4:	add    DWORD PTR [eax],ecx
  4090a6:	icebp  
  4090a7:	pop    ecx
  4090a8:	popf   
  4090a9:	mov    dl,0x10
  4090ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ac:	lods   al,BYTE PTR ds:[si]
  4090ae:	mov    fs,WORD PTR [edi-0x6]
  4090b1:	mov    ch,0x58
  4090b3:	or     ch,BYTE PTR [edi]
  4090b5:	popa   
  4090b6:	sbb    BYTE PTR [ebp-0x50],0x94
  4090ba:	xchg   BYTE PTR [esp+edx*1-0x7097df16],dl
  4090c1:	jp     0x4090b5
  4090c3:	es mov edi,0x29793af7
  4090c9:	into   
  4090ca:	jl     0x409059
  4090cc:	push   ss
  4090cd:	push   edi
  4090ce:	jmp    0xb918:0x40b296f6
  4090d5:	fild   QWORD PTR [ebp-0x122f6449]
  4090db:	dec    ecx
  4090dc:	push   edi
  4090dd:	test   BYTE PTR [ecx-0x80b5f26],dh
  4090e3:	dec    edi
  4090e4:	xchg   edi,eax
  4090e5:	aam    0xd4
  4090e7:	and    eax,0x89864a3
  4090ec:	jmp    0x8d1e:0x878165f7
  4090f3:	icebp  
  4090f4:	repz push 0x48fef7c4
  4090fa:	cmp    al,0x82
  4090fc:	pop    ecx
  4090fd:	push   0xfffffff8
  4090ff:	mov    ds:0x9dd5f242,al
  409104:	add    al,0x57
  409106:	das    
  409107:	ret    
  409108:	fisttp DWORD PTR [eax-0x3d]
  40910b:	adc    edi,edx
  40910d:	mov    ebx,0xf81c5ae9
  409112:	xor    ecx,DWORD PTR [ecx]
  409114:	cmp    bl,cl
  409116:	push   esp
  409117:	lods   eax,DWORD PTR ds:[esi]
  409118:	pop    ebp
  409119:	lahf   
  40911a:	or     edi,ecx
  40911c:	adc    ebx,ecx
  40911e:	cdq    
  40911f:	test   edi,0xf3ebf0b0
  409125:	mov    BYTE PTR [edx+0x6c],dl
  409128:	xor    dl,BYTE PTR [ebx+0x12]
  40912b:	jo     0x40916b
  40912d:	jo     0x409180
  40912f:	sub    BYTE PTR [esi],ah
  409131:	aam    0xbc
  409133:	mov    bh,0x41
  409135:	fisubr DWORD PTR [eax]
  409137:	add    eax,0xb9df028b
  40913c:	icebp  
  40913d:	and    eax,0x16652f6a
  409142:	mov    ds,WORD PTR [edx-0x154c2ff2]
  409148:	mov    esi,0xa72ef96f
  40914d:	mov    eax,0x9baf73e9
  409152:	xchg   DWORD PTR [ebp-0x69d5f04c],esi
  409158:	push   ebp
  409159:	pop    ds
  40915a:	jl     0x4090f3
  40915c:	aad    0xab
  40915e:	cwde   
  40915f:	cmp    BYTE PTR [edx+0x3a],bl
  409162:	jb     0x409159
  409164:	gs xor eax,0x4f4e55ca
  40916a:	(bad)  
  40916b:	test   DWORD PTR [ebx],0x1c757f1f
  409171:	aam    0x28
  409173:	das    
  409174:	mov    al,ds:0x22bb879c
  409179:	(bad)  
  40917a:	ficom  WORD PTR [edx+ecx*4]
  40917d:	dec    ecx
  40917e:	xor    eax,DWORD PTR [ecx]
  409180:	jg     0x409161
  409182:	xor    ah,BYTE PTR [ecx]
  409184:	je     0x40919f
  409186:	mov    esp,0xcdccb2ea
  40918b:	jecxz  0x40914b
  40918d:	iret   
  40918e:	mov    esi,0x5832ff9c
  409193:	lds    esi,FWORD PTR [edx+ebp*4]
  409196:	or     eax,0x16e91bf6
  40919b:	(bad)  
  40919c:	sub    esi,DWORD PTR [eax-0x6f]
  40919f:	jecxz  0x409160
  4091a1:	test   eax,0x4f1738be
  4091a6:	and    BYTE PTR [eax+0x79],0x35
  4091aa:	iret   
  4091ab:	cmp    DWORD PTR [ecx-0x2e],ebx
  4091ae:	into   
  4091af:	stc    
  4091b0:	sub    BYTE PTR [edx-0x4c],bh
  4091b3:	cs lahf 
  4091b5:	adc    BYTE PTR [esi-0x63],cl
  4091b8:	das    
  4091b9:	ds dec edi
  4091bb:	pop    edi
  4091bc:	aam    0xa9
  4091be:	sub    eax,0x249bf2f7
  4091c3:	lods   al,BYTE PTR ds:[esi]
  4091c4:	cmc    
  4091c5:	inc    esi
  4091c6:	jg     0x4091da
  4091c8:	add    BYTE PTR [edi+0x7bf5636b],dh
  4091ce:	clc    
  4091cf:	jne    0x4091e8
  4091d1:	xchg   esi,ebp
  4091d3:	fs into 
  4091d5:	jecxz  0x4091c7
  4091d7:	push   ds
  4091d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d9:	icebp  
  4091da:	out    0x48,al
  4091dc:	lods   al,BYTE PTR ds:[esi]
  4091dd:	inc    ebx
  4091de:	fist   DWORD PTR [ecx-0x1e]
  4091e1:	inc    ebx
  4091e2:	pop    edi
  4091e3:	jmp    0x4091d5
  4091e5:	cmp    BYTE PTR [esi-0x70],dl
  4091e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e9:	fsubr  DWORD PTR [eax-0x52c8a1ca]
  4091ef:	fsub   DWORD PTR [edi+0xd]
  4091f2:	lea    edx,[ecx+0x4165b9d4]
  4091f8:	push   ecx
  4091f9:	retf   0xd938
  4091fc:	je     0x409242
  4091fe:	nop
  4091ff:	jle    0x4091e4
  409201:	mov    al,ds:0xef7a32f8
  409206:	enter  0x46ef,0xce
  40920a:	jg     0x4091db
  40920c:	ss mov edi,0xaa37b3c7
  409212:	in     al,dx
  409213:	in     eax,0x5f
  409215:	in     eax,0x80
  409217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409218:	adc    edx,DWORD PTR [edx+0x5b8cf006]
  40921e:	(bad)  
  40921f:	ror    BYTE PTR [ebx+0x27],cl
  409222:	mov    BYTE PTR [ecx-0x47],ah
  409225:	aam    0x7b
  409227:	fwait
  409228:	mov    eax,ds:0x266059b5
  40922d:	inc    ebp
  40922e:	fild   WORD PTR [ebp+0x1f]
  409231:	cld    
  409232:	push   esp
  409233:	jbe    0x40924e
  409235:	call   0x4e0b5a32
  40923a:	test   ch,cl
  40923c:	mov    dh,0x33
  40923e:	and    al,0x65
  409240:	or     al,0xf3
  409242:	cmp    eax,0x275d0ac0
  409247:	pop    ss
  409248:	clc    
  409249:	add    BYTE PTR ds:0x37d8438,cl
  40924f:	xchg   ebp,eax
  409250:	das    
  409251:	cdq    
  409252:	sbb    al,0xc0
  409254:	es push es
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434637,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43463b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	leave  
  409316:	mov    edx,0xe29244fb
  40931b:	jle    0x40939b
  40931d:	jo     0x409398
  40931f:	jle    0x40939f
  409321:	and    BYTE PTR [esi],dl
  409323:	sbb    dh,BYTE PTR ds:0xcaf6cea3
  409329:	jl     0x409346
  40932b:	call   0x3cae:0x5b439203
  409332:	mov    bh,0xb5
  409334:	imul   BYTE PTR [edx+0x27]
  409337:	adc    BYTE PTR [ebx+0x314a01d6],cl
  40933d:	dec    eax
  40933e:	mov    DWORD PTR ds:[esi-0x4841988f],ecx
  409345:	and    BYTE PTR [ecx+esi*2-0xd],bl
  409349:	das    
  40934a:	inc    ecx
  40934b:	out    dx,eax
  40934c:	jno    0x4093cb
  40934e:	les    edx,FWORD PTR [ebp+ebx*1-0x51c0f8a8]
  409355:	(bad)  
  409356:	mov    bh,0x4b
  409358:	fnstenv [ecx+0x1e]
  40935b:	mov    ds:0xf47a4982,eax
  409360:	push   esp
  409361:	fild   QWORD PTR [ebp+0x6f33cc4c]
  409367:	pop    esp
  409368:	push   eax
  409369:	in     eax,0xdc
  40936b:	in     eax,0xdd
  40936d:	fs xor al,0xb2
  409370:	xchg   bl,ah
  409372:	mov    esi,0xdef6645c
  409377:	jle    0x409336
  409379:	push   cs
  40937a:	hlt    
  40937b:	add    ebx,DWORD PTR [eax-0x15]
  40937e:	ins    DWORD PTR es:[edi],dx
  40937f:	add    al,BYTE PTR ss:[ebx-0x22]
  409383:	cmp    DWORD PTR [edx+0x1f],ebp
  409386:	jne    0x40931f
  409388:	out    dx,al
  409389:	mov    bh,0x38
  40938b:	sbb    BYTE PTR [ebx],0x33
  40938e:	dec    ebx
  40938f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409390:	mov    ss,edx
  409392:	sahf   
  409393:	je     0x40935a
  409395:	nop
  409396:	sub    al,0xa0
  409398:	push   ebx
  409399:	mov    ecx,0xa7ae0947
  40939e:	js     0x40941f
  4093a0:	jl     0x40937a
  4093a2:	sbb    eax,0x866b63e6
  4093a7:	jmp    0x4093fb
  4093a9:	lahf   
  4093aa:	pop    edi
  4093ab:	and    dl,bl
  4093ad:	inc    esp
  4093ae:	jmp    0x4093a7
  4093b0:	inc    esp
  4093b1:	adc    esp,DWORD PTR [ebx]
  4093b3:	cwde   
  4093b4:	jp     0x40940a
  4093b6:	into   
  4093b7:	xlat   BYTE PTR ds:[ebx]
  4093b8:	lods   eax,DWORD PTR ds:[esi]
  4093b9:	popa   
  4093ba:	retf   
  4093bb:	int    0x36
  4093bd:	jb     0x409375
  4093bf:	retf   
  4093c0:	in     eax,dx
  4093c1:	test   eax,0xf9d9c484
  4093c6:	ja     0x409401
  4093c8:	mov    eax,ds:0xceb915f5
  4093cd:	hlt    
  4093ce:	lods   eax,DWORD PTR ds:[esi]
  4093cf:	push   ebp
  4093d0:	pop    ss
  4093d1:	add    BYTE PTR ds:[edx],0xd9
  4093d5:	push   edi
  4093d6:	add    ebp,DWORD PTR [eax-0x2e]
  4093d9:	and    esi,DWORD PTR [eax+0x673bf9e2]
  4093df:	add    BYTE PTR ds:0xd32c1ae8,0x8b
  4093e6:	rcr    DWORD PTR [esi+0x51be9608],0xd3
  4093ed:	xchg   ecx,eax
  4093ee:	jb     0x409373
  4093f0:	xchg   edx,eax
  4093f1:	mov    edx,0xec983717
  4093f6:	call   0xe3ad07e
  4093fb:	or     esi,edi
  4093fd:	scas   al,BYTE PTR es:[edi]
  4093fe:	cmp    DWORD PTR [esi+ebp*2],0x3
  409402:	js     0x4093b8
  409404:	ret    0xbd00
  409407:	cmc    
  409408:	shr    DWORD PTR [ebp+0x6b273ac9],cl
  40940e:	jnp    0x4093d2
  409410:	cmp    BYTE PTR [edx-0x18733015],0x69
  409417:	inc    esp
  409418:	int3   
  409419:	cmp    DWORD PTR [ecx-0x4e8cd8e],eax
  40941f:	enter  0x230a,0x82
  409423:	push   0x6a53b8ee
  409428:	mov    ah,0xfd
  40942a:	stos   BYTE PTR es:[edi],al
  40942b:	ret    
  40942c:	daa    
  40942d:	and    dh,bh
  40942f:	inc    ebx
  409430:	sbb    eax,0xf2a79446
  409435:	dec    edi
  409436:	cmp    ebp,DWORD PTR [ecx]
  409438:	leave  
  409439:	ins    BYTE PTR es:[edi],dx
  40943a:	into   
  40943b:	xor    ch,BYTE PTR [ebp+eiz*1+0x646bc852]
  409442:	mov    ds:0x45ca2175,al
  409447:	popa   
  409448:	stc    
  409449:	retf   
  40944a:	es xchg edx,eax
  40944c:	jne    0x4093d4
  40944e:	mov    ecx,0x4df281b8
  409453:	push   cs
  409454:	dec    ebx
  409455:	sub    bl,dh
  409457:	outs   dx,DWORD PTR ds:[esi]
  409458:	adc    cl,ch
  40945a:	lea    esp,[edx+0x8cc5974]
  409460:	mov    esi,0xf6866d12
  409465:	pop    edx
  409466:	in     al,dx
  409467:	cld    
  409468:	jbe    0x409470
  40946a:	mul    DWORD PTR [edx+0x56]
  40946d:	mov    al,ds:0x735d4806
  409472:	mov    eax,ds:0xdfb73eed
  409477:	push   edx
  409478:	sub    BYTE PTR [edi+ecx*8+0x21efe763],bh
  40947f:	push   ebp
  409480:	or     eax,0x6a589a2b
  409485:	push   DWORD PTR [edi-0x45]
  409488:	stos   BYTE PTR es:[edi],al
  409489:	idiv   DWORD PTR [eax]
  40948b:	stos   BYTE PTR es:[edi],al
  40948c:	ins    DWORD PTR es:[edi],dx
  40948d:	dec    ebp
  40948e:	fwait
  40948f:	mov    bl,0x55
  409491:	cmc    
  409492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409493:	push   eax
  409494:	xchg   ebx,eax
  409495:	std    
  409496:	mov    bh,0x39
  409498:	stos   DWORD PTR es:[edi],eax
  409499:	mov    dh,0x89
  40949b:	into   
  40949c:	or     BYTE PTR ds:0x6b6f3d9e,ah
  4094a2:	mov    ah,0xc2
  4094a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094a5:	rol    DWORD PTR [esp+eiz*2-0x21478480],1
  4094ac:	and    ecx,DWORD PTR [edi-0x19]
  4094af:	sbb    ecx,esi
  4094b1:	inc    eax
  4094b2:	mov    ds:0xd59aa7ab,eax
  4094b7:	enter  0xde3e,0x77
  4094bb:	test   DWORD PTR gs:[edi+0x64],esi
  4094bf:	test   al,0xf9
  4094c1:	retf   
  4094c2:	xlat   BYTE PTR ds:[bx]
  4094c5:	and    BYTE PTR [ecx-0x526f3dcf],al
  4094cb:	iret   
  4094cc:	dec    ebx
  4094cd:	push   cs
  4094ce:	mov    ebx,DWORD PTR [ebx]
  4094d0:	les    esi,FWORD PTR gs:[ebp+0x4f]
  4094d4:	test   BYTE PTR [ebp+0x29],bh
  4094d7:	mov    ch,0x43
  4094d9:	cmp    bh,al
  4094db:	outs   dx,BYTE PTR ds:[esi]
  4094dc:	adc    eax,0x856481d4
  4094e1:	or     al,0xad
  4094e3:	sar    BYTE PTR [ebp-0x51de285d],cl
  4094e9:	mov    esp,0x6050d635
  4094ee:	cmp    edi,edi
  4094f0:	jg     0x409517
  4094f2:	into   
  4094f3:	and    eax,0x6b69cfc7
  4094f8:	and    ah,0xf
  4094fb:	fcomp  DWORD PTR [ebx+esi*4-0x1728b3ab]
  409502:	xchg   DWORD PTR [eax-0x30],edx
  409505:	pop    ebx
  409506:	(bad)  
  409507:	mov    al,ds:0xf9977e1b
  40950c:	cli    
  40950d:	cs pop es
  40950f:	fisubr DWORD PTR [ecx]
  409511:	xchg   ebp,eax
  409512:	mov    ch,0xc
  409514:	mov    al,ds:0x6d85802b
  409519:	sub    BYTE PTR [esi+eax*8+0x7c],0xaf
  40951e:	out    0xee,eax
  409520:	inc    edi
  409521:	mov    ah,0xe7
  409523:	xchg   ecx,ebp
  409525:	sub    bl,BYTE PTR ds:0x26102731
  40952b:	and    eax,0x65dc4199
  409530:	sbb    DWORD PTR [edx+0x69418d96],0xffffffd9
  409537:	inc    esi
  409538:	inc    eax
  409539:	icebp  
  40953a:	lds    ebp,FWORD PTR [ebx-0x4d71ea07]
  409540:	rcl    DWORD PTR [edx-0x50],cl
  409543:	or     al,0x45
  409545:	cmp    BYTE PTR [ebx],al
  409547:	iret   
  409548:	inc    esi
  409549:	mul    DWORD PTR [edi+0x3807978a]
  40954f:	sub    al,0xb1
  409551:	mov    eax,ds:0x73482b53
  409556:	mov    esp,0xf4c00382
  40955b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40955c:	loopne 0x40954b
  40955e:	mov    esi,0x9dbde9f2
  409563:	fisubr DWORD PTR [ebp+0x6e]
  409566:	(bad)  
  409567:	push   eax
  409568:	idiv   DWORD PTR [edx+0x3f]
  40956b:	xor    BYTE PTR ds:0xf3db92be,cl
  409571:	repnz mov esp,0x8d3ffc55
  409577:	add    ch,BYTE PTR [edx]
  409579:	lods   eax,DWORD PTR ds:[esi]
  40957a:	pop    ebp
  40957b:	daa    
  40957c:	adc    BYTE PTR [eax-0x14],dh
  40957f:	xchg   DWORD PTR [eax-0x45],ebp
  409582:	adc    edi,DWORD PTR [ebp+0x75]
  409585:	lea    edi,ds:0x38227b4
  40958b:	mov    ds:0x2f348e7b,al
  409590:	mov    edx,0xc3ce3a7c
  409595:	(bad)  
  409596:	loop   0x409523
  409598:	and    al,0x50
  40959a:	or     al,BYTE PTR [edx+0x4]
  40959d:	aad    0x74
  40959f:	mov    dh,0xc4
  4095a1:	aaa    
  4095a2:	pop    ss
  4095a3:	je     0x409574
  4095a5:	add    DWORD PTR [edx],esp
  4095a7:	jbe    0x409573
  4095a9:	cmp    DWORD PTR [ecx+0x58b4d795],esi
  4095af:	mov    WORD PTR [eax+0x20],gs
  4095b2:	jmp    0x7e36:0x15d9dca2
  4095b9:	add    eax,0xf7eafdb2
  4095be:	add    al,0xdf
  4095c0:	mov    ds:0xd4b82fcb,al
  4095c5:	in     al,dx
  4095c6:	xchg   esp,eax
  4095c7:	or     ch,BYTE PTR [ecx+0x14cb6595]
  4095cd:	(bad)  
  4095ce:	jmp    0x4095fa
  4095d0:	ret    
  4095d1:	mov    dh,0x97
  4095d3:	jae    0x409623
  4095d5:	mov    dl,0xd5
  4095d7:	inc    edx
  4095d8:	pop    edi
  4095d9:	cmp    BYTE PTR [ebp+0x64],0x5b
  4095dd:	fld    QWORD PTR ds:0x9cafede
  4095e3:	retf   0x886d
  4095e6:	add    DWORD PTR [ebp-0x9f4a6f9],esi
  4095ec:	and    eax,0xbac2580b
  4095f1:	mov    edx,0x86f38a0d
  4095f6:	scas   al,BYTE PTR es:[edi]
  4095f7:	sbb    eax,0x2e7b01e8
  4095fc:	jae    0x40966e
  4095fe:	pop    ebp
  4095ff:	repnz loop 0x4095b8
  409602:	push   cs
  409603:	jbe    0x4095ff
  409605:	mov    ds:0x5e653ff,eax
  40960a:	xchg   edi,eax
  40960b:	mov    esi,DWORD PTR [eax-0x69becc07]
  409611:	inc    edi
  409612:	loope  0x409672
  409614:	add    dh,BYTE PTR [eax+eiz*2+0x67a6f353]
  40961b:	lds    ecx,FWORD PTR [edx+0x40]
  40961e:	and    al,0xa
  409620:	push   ss
  409621:	mov    ds:0x3af177db,eax
  409626:	imul   edx,DWORD PTR [eax],0x2f2ec4aa
  40962c:	gs es inc edx
  40962f:	jp     0x40967c
  409631:	or     ebp,edi
  409633:	stc    
  409634:	call   0x73bbdc49
  409639:	sub    eax,DWORD PTR [eax-0x47]
  40963c:	push   ecx
  40963d:	push   cs
  40963e:	jmp    0xb6a4953a
  409643:	ds fs xor al,0x13
  409647:	jge    0x4095ee
  409649:	mov    DWORD PTR [esi+eax*8],esp
  40964c:	add    al,0xfe
  40964e:	mov    cl,0x52
  409650:	xchg   esi,eax
  409651:	push   es
  409652:	adc    esp,ecx
  409654:	loop   0x4095eb
  409656:	jne    0x4096d3
  409658:	and    eax,0x582b237b
  40965d:	mov    edi,0xb8cf4f55
  409662:	cmp    edi,DWORD PTR [ecx-0x38313845]
  409668:	aam    0x57
  40966a:	mov    dl,ah
  40966c:	enter  0xbc39,0x11
  409670:	jle    0x4096bd
  409672:	or     al,BYTE PTR [ebx+0x10949f6f]
  409678:	mov    esp,0x737efff4
  40967d:	inc    edx
  40967e:	cld    
  40967f:	(bad)  
  409680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409681:	std    
  409682:	and    DWORD PTR [edx-0x3c01d82a],ebx
  409688:	jmp    0xb1d1cb45
  40968d:	popa   
  40968e:	xor    DWORD PTR [esi-0x4c7effbe],esp
  409694:	mov    al,ds:0x15485bbe
  409699:	sub    al,cl
  40969b:	xor    DWORD PTR [ecx+0x7455841a],edi
  4096a1:	pop    ss
  4096a2:	bound  ebx,QWORD PTR [ebp-0x8]
  4096a5:	mov    esi,0xa139df08
  4096aa:	outs   dx,DWORD PTR ds:[esi]
  4096ab:	pop    ebp
  4096ac:	inc    eax
  4096ad:	dec    ebp
  4096ae:	pop    esi
  4096af:	les    edx,FWORD PTR [esi-0x70]
  4096b2:	sub    BYTE PTR fs:[edi],0x2c
  4096b6:	add    BYTE PTR [esi],ah
  4096b8:	or     ah,ch
  4096ba:	inc    edi
  4096bb:	cmp    BYTE PTR [esp+ebp*2+0xc6cbd86],dl
  4096c2:	pop    ds
  4096c3:	and    al,0x6a
  4096c5:	sub    ebp,DWORD PTR [ebx+0x49]
  4096c8:	ret    
  4096c9:	repnz cli 
  4096cb:	cwde   
  4096cc:	call   0xa911:0x3dc5c21e
  4096d3:	and    al,0x97
  4096d5:	shr    cl,0x21
  4096d8:	fld    QWORD PTR [edx+0x723dea13]
  4096de:	mov    cl,BYTE PTR [edx-0x85bbcb4]
  4096e4:	jae    0x409718
  4096e6:	push   ss
  4096e7:	add    dh,bh
  4096e9:	cld    
  4096ea:	mov    dl,0x6d
  4096ec:	repz push ebx
  4096ee:	xchg   edi,eax
  4096ef:	push   edi
  4096f0:	mov    ebp,0xc89584b2
  4096f5:	in     al,dx
  4096f6:	xchg   ecx,eax
  4096f7:	je     0x4096fd
  4096f9:	or     bl,bl
  4096fb:	pop    ecx
  4096fc:	adc    ah,BYTE PTR ds:0xa2345697
  409702:	popa   
  409703:	and    al,0x8b
  409705:	xchg   ecx,eax
  409706:	jl     0x409713
  409708:	cs and eax,0x5e83edaa
  40970e:	mov    ?,WORD PTR [bx+si+0x4c02]
  409713:	popf   
  409714:	and    ebx,DWORD PTR fs:[eax+eax*8+0x2d]
  409719:	lds    ecx,FWORD PTR [eax-0x75]
  40971c:	inc    ebp
  40971d:	or     BYTE PTR [ebx+0x43470f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434713
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4345f3
  409745:	add    ecx,DWORD PTR ds:0x434637
  40974b:	mov    DWORD PTR ds:0x4345f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	(bad)  
  409767:	das    
  409768:	sbb    al,0x94
  40976a:	out    dx,al
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	and    ah,dh
  409773:	cmp    DWORD PTR [esi-0x387a7b61],edi
  409779:	jmp    0x75a19a7a
  40977e:	out    dx,eax
  40977f:	inc    eax
  409780:	daa    
  409781:	cli    
  409782:	add    al,0x7e
  409784:	out    0x4b,eax
  409786:	out    0x21,eax
  409788:	or     ecx,DWORD PTR [eax]
  40978a:	stos   BYTE PTR es:[edi],al
  40978b:	std    
  40978c:	aas    
  40978d:	pop    esp
  40978e:	sahf   
  40978f:	or     edx,DWORD PTR [ecx]
  409791:	xchg   ebp,eax
  409792:	out    0x29,eax
  409794:	mov    al,ds:0x28ff295b
  409799:	inc    ebp
  40979a:	dec    esi
  40979b:	out    0x60,al
  40979d:	push   0x76
  40979f:	(bad)  
  4097a0:	jg     0x409801
  4097a2:	ja     0x40974f
  4097a4:	push   eax
  4097a5:	cmp    BYTE PTR [ebx+edx*4-0x1f2764e5],dl
  4097ac:	aas    
  4097ad:	out    0xa8,eax
  4097af:	mov    bl,0xfe
  4097b1:	ss jg  0x40978d
  4097b4:	mov    ah,0x94
  4097b6:	int    0xbf
  4097b8:	loopne 0x4097c6
  4097ba:	sbb    DWORD PTR [edi-0x28],ebp
  4097bd:	std    
  4097be:	xchg   ebp,eax
  4097bf:	cmp    ebx,ebx
  4097c1:	xchg   BYTE PTR [eax+0x8],ah
  4097c4:	mov    ecx,0x5de43b34
  4097c9:	ss dec ecx
  4097cb:	loopne 0x40975b
  4097cd:	and    BYTE PTR [esi-0xc],al
  4097d0:	adc    al,BYTE PTR [ebp+0x3d972f6f]
  4097d6:	outs   dx,BYTE PTR ds:[esi]
  4097d7:	lods   eax,DWORD PTR ds:[esi]
  4097d8:	(bad)  
  4097d9:	pop    esp
  4097da:	push   esp
  4097db:	or     al,0xb2
  4097dd:	xchg   ch,dl
  4097df:	les    edi,FWORD PTR [ecx+eax*8+0x2d2d4422]
  4097e6:	push   ss
  4097e7:	data16 ins BYTE PTR es:[edi],dx
  4097e9:	lods   eax,DWORD PTR ds:[esi]
  4097ea:	repz test DWORD PTR ds:0x4157a877,esi
  4097f1:	inc    edi
  4097f2:	add    esi,DWORD PTR ss:[edi+0x4a81a006]
  4097f9:	dec    esi
  4097fa:	outs   dx,DWORD PTR ds:[esi]
  4097fb:	in     al,dx
  4097fc:	add    eax,0x1cc6d6f2
  409801:	ins    BYTE PTR es:[edi],dx
  409802:	aam    0xf
  409804:	lock (bad) 
  409806:	or     eax,0x6744ce73
  40980b:	cmp    edx,ecx
  40980d:	stos   DWORD PTR es:[edi],eax
  40980e:	call   FWORD PTR [edx]
  409810:	pop    ds
  409811:	add    BYTE PTR [ecx],ah
  409813:	test   BYTE PTR [ebx-0x1f687267],bl
  409819:	int    0x56
  40981b:	xchg   esp,eax
  40981c:	mov    ebx,0xb7636d18
  409821:	mov    cl,0x68
  409823:	and    eax,eax
  409825:	imul   eax,DWORD PTR [edx+0x4],0x2a
  409829:	pop    esi
  40982a:	pop    ss
  40982b:	shl    BYTE PTR [ebp+eax*4+0x6c],0xcf
  409830:	xchg   edi,eax
  409831:	adc    al,0xfd
  409833:	scas   al,BYTE PTR es:[edi]
  409834:	std    
  409835:	out    0x18,eax
  409837:	sbb    BYTE PTR ds:0xf3b00e71,ah
  40983d:	in     eax,0x57
  40983f:	add    DWORD PTR [ecx+0x63],0x232f0809
  409846:	clc    
  409847:	sbb    eax,0xa14cefde
  40984c:	fsubp  st(0),st
  40984e:	jb     0x40981a
  409850:	push   esp
  409851:	daa    
  409852:	adc    al,0xb1
  409854:	cmp    eax,0x368cd396
  409859:	icebp  
  40985a:	pop    edx
  40985b:	pop    edx
  40985c:	popf   
  40985d:	and    eax,0x7ed4d9bc
  409862:	pop    ds
  409863:	icebp  
  409864:	push   esp
  409865:	or     eax,0xa91521a6
  40986a:	add    al,0xfa
  40986c:	jecxz  0x4098ab
  40986e:	dec    eax
  40986f:	or     al,0xcf
  409871:	lods   eax,DWORD PTR ds:[esi]
  409872:	pop    ss
  409873:	stos   DWORD PTR es:[edi],eax
  409874:	stc    
  409875:	ss test eax,0x367efb9e
  40987b:	mov    esi,0x61362d63
  409880:	sub    DWORD PTR [edx+0x791da48d],edi
  409886:	in     al,dx
  409887:	or     eax,0xdf6ffae4
  40988c:	test   al,0x50
  40988e:	(bad)  
  40988f:	hlt    
  409890:	jge    0x409815
  409892:	xor    eax,0x12e035
  409897:	loopne 0x40983e
  409899:	add    BYTE PTR [eax+edx*1-0x7274108c],ch
  4098a0:	(bad)  
  4098a1:	or     al,0x27
  4098a3:	fistp  WORD PTR [edi+0x16]
  4098a6:	(bad)  
  4098a7:	sbb    al,0x46
  4098a9:	jne    0x409868
  4098ab:	(bad)  
  4098ac:	dec    ecx
  4098ad:	fsub   st(3),st
  4098af:	outs   dx,BYTE PTR ds:[esi]
  4098b0:	mov    dh,0x7b
  4098b2:	adc    edi,DWORD PTR [esi-0x33]
  4098b5:	addr16 inc ebx
  4098b7:	jle    0x409915
  4098b9:	outs   dx,DWORD PTR ds:[esi]
  4098ba:	scas   eax,DWORD PTR es:[edi]
  4098bb:	push   esp
  4098bc:	outs   dx,BYTE PTR ds:[esi]
  4098bd:	nop
  4098be:	out    0x6d,eax
  4098c0:	push   0xffffffc3
  4098c2:	pop    ds
  4098c3:	push   edx
  4098c4:	or     DWORD PTR [ebx+ecx*2],ebp
  4098c7:	xor    al,0xc8
  4098c9:	stos   BYTE PTR es:[edi],al
  4098ca:	cmp    BYTE PTR [ebx+0x78],0x60
  4098ce:	jb     0x4098c9
  4098d0:	pop    ss
  4098d1:	xor    edx,ebp
  4098d3:	jecxz  0x40985f
  4098d5:	push   ebx
  4098d6:	fbld   TBYTE PTR [esi+0x3bfca44f]
  4098dc:	adc    DWORD PTR [edx-0x3e66d82d],edx
  4098e2:	jnp    0x409896
  4098e4:	or     esp,DWORD PTR [ebx+0x13624b2b]
  4098ea:	fsub   DWORD PTR [esi+0x74]
  4098ed:	lahf   
  4098ee:	dec    eax
  4098ef:	fs push 0x66
  4098f2:	and    edx,DWORD PTR [esi+0x19]
  4098f5:	sar    BYTE PTR [eax+0x4c277662],cl
  4098fb:	dec    esi
  4098fc:	dec    esp
  4098fd:	(bad)  
  4098fe:	and    eax,0xf13c4725
  409903:	sbb    edi,ebx
  409905:	pop    ebp
  409906:	ja     0x409950
  409908:	cdq    
  409909:	(bad)  
  40990a:	cmp    al,0x23
  40990c:	jge    0x409951
  40990e:	stos   DWORD PTR es:[edi],eax
  40990f:	(bad)  
  409910:	lods   al,BYTE PTR ds:[esi]
  409911:	in     al,dx
  409912:	mov    al,ds:0x72c240e7
  409917:	(bad)  
  409918:	jb     0x4098df
  40991a:	imul   esi,DWORD PTR [esi-0x2e],0xffffffc8
  40991e:	xor    BYTE PTR [edi-0x4c33bbab],dh
  409924:	rol    ebx,1
  409926:	in     eax,dx
  409927:	dec    ebx
  409928:	mov    ebp,edi
  40992a:	in     eax,0x48
  40992c:	xor    ebx,DWORD PTR [ebx-0xd]
  40992f:	ror    BYTE PTR [esi+0xfb15a49],cl
  409935:	jmp    0x409927
  409937:	arpl   si,sp
  409939:	mov    ah,0x1b
  40993b:	push   esp
  40993c:	sub    BYTE PTR [esi+0x6d81699d],0xe9
  409943:	sahf   
  409944:	leave  
  409945:	cmp    edi,ebx
  409947:	in     al,dx
  409948:	aad    0x40
  40994a:	sbb    eax,0x47a84eeb
  40994f:	pusha  
  409950:	rcr    BYTE PTR [ebx+0xeaa2a78],1
  409956:	push   edx
  409957:	outs   dx,BYTE PTR ds:[esi]
  409958:	ss pop edi
  40995a:	push   esp
  40995b:	cld    
  40995c:	sti    
  40995d:	js     0x4098fc
  40995f:	mov    edx,0x2ddf9dd8
  409964:	push   esi
  409966:	mov    dl,0xe7
  409968:	mov    dl,0x19
  40996a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996b:	add    eax,0xeb836a19
  409970:	adc    al,0xda
  409972:	push   esi
  409973:	push   0xffffffe9
  409975:	mov    edi,DWORD PTR [ebx-0x80]
  409978:	addr16 push es
  40997a:	out    dx,eax
  40997b:	mov    edx,0x7db9866
  409980:	imul   DWORD PTR [eax]
  409982:	ret    0xbb70
  409985:	push   ebx
  409986:	test   BYTE PTR [ebp+0x135234bf],0xb4
  40998d:	iret   
  40998e:	mov    dl,0x69
  409990:	out    0xc3,al
  409992:	jnp    0x4099cb
  409994:	pop    eax
  409995:	cli    
  409996:	leave  
  409997:	fwait
  409998:	daa    
  409999:	stos   DWORD PTR es:[edi],eax
  40999a:	xor    eax,0x9f5f0dc1
  40999f:	add    BYTE PTR [edi+eiz*4],0xc6
  4099a3:	pop    es
  4099a4:	ret    
  4099a5:	dec    edi
  4099a6:	add    esi,DWORD PTR [ebx]
  4099a8:	stos   BYTE PTR es:[edi],al
  4099a9:	inc    ebx
  4099aa:	pop    edi
  4099ab:	fild   QWORD PTR [eax-0x7e66722a]
  4099b1:	mov    eax,ds:0x181fdd98
  4099b6:	and    eax,0xc243a0c5
  4099bb:	adc    ecx,DWORD PTR ds:0x3a87536
  4099c1:	push   ebx
  4099c2:	and    bh,dl
  4099c4:	(bad)  
  4099c5:	out    dx,al
  4099c6:	jb     0x4099cf
  4099c8:	icebp  
  4099c9:	cmp    esi,esp
  4099cb:	jo     0x409a04
  4099cd:	icebp  
  4099ce:	xor    eax,0x63ce8c14
  4099d3:	jge    0x4099c6
  4099d5:	xor    al,0x14
  4099d7:	mov    edi,0xe699a076
  4099dc:	add    edx,DWORD PTR [eax+0x77]
  4099df:	lahf   
  4099e0:	pusha  
  4099e1:	inc    edi
  4099e2:	pop    ebp
  4099e3:	cdq    
  4099e4:	cmp    esi,DWORD PTR [edi+0x30]
  4099e7:	ss in  eax,0x79
  4099ea:	test   cl,bl
  4099ec:	pop    ds
  4099ed:	test   al,0xab
  4099ef:	popa   
  4099f0:	mov    edi,0x6430371f
  4099f5:	adc    edi,DWORD PTR [edx-0x2f185eb4]
  4099fb:	sbb    ah,ch
  4099fd:	jns    0x409983
  4099ff:	pop    esi
  409a00:	and    ebp,DWORD PTR [eax+edi*4]
  409a03:	lahf   
  409a04:	lock js 0x4099f5
  409a07:	xor    bh,dh
  409a09:	xchg   ebx,eax
  409a0a:	cmp    al,0xac
  409a0c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409a0e:	pop    es
  409a0f:	jnp    0x409a8c
  409a11:	aad    0xb3
  409a13:	mov    esi,0xbebb8a38
  409a18:	or     al,0x23
  409a1a:	int    0xc5
  409a1c:	dec    ecx
  409a1d:	mov    eax,ds:0x11b01677
  409a22:	mov    DWORD PTR [ebx-0x33],ebp
  409a25:	xor    edx,DWORD PTR ds:0xc651597e
  409a2b:	sub    dl,BYTE PTR [ecx-0x4d]
  409a2e:	cmp    ch,BYTE PTR [eax]
  409a30:	lds    esi,FWORD PTR [ecx+0x6cc41243]
  409a36:	mov    al,0xb3
  409a38:	div    DWORD PTR [edx-0x53f7534c]
  409a3e:	cmc    
  409a3f:	xlat   BYTE PTR ds:[ebx]
  409a40:	mov    ecx,0x2a431fd7
  409a45:	mov    eax,0x8e70f3
  409a4a:	dec    esi
  409a4b:	sbb    esp,DWORD PTR [eax]
  409a4d:	int3   
  409a4e:	call   0x3f35:0xd58eb6c9
  409a55:	add    DWORD PTR [ecx],0xffffffba
  409a58:	and    bl,BYTE PTR [ecx-0x39]
  409a5b:	mov    dl,0x70
  409a5d:	ret    0xc3e
  409a60:	out    dx,eax
  409a61:	inc    edi
  409a62:	jbe    0x409a23
  409a64:	jmp    0xcd59:0x51a82b6b
  409a6b:	ret    0xdae3
  409a6e:	add    DWORD PTR [edi],edx
  409a70:	outs   dx,DWORD PTR ds:[esi]
  409a71:	jecxz  0x409a2a
  409a73:	and    DWORD PTR [ecx-0x3],eax
  409a76:	dec    eax
  409a77:	inc    ecx
  409a78:	js     0x409ac3
  409a7a:	(bad)  
  409a7b:	retf   0x718a
  409a7e:	jmp    0x907:0x9a93c54a
  409a85:	(bad)  
  409a86:	js     0x409a62
  409a88:	mov    bl,0xb7
  409a8a:	cs inc ecx
  409a8c:	pop    ecx
  409a8d:	loop   0x409b00
  409a8f:	mov    al,0x71
  409a91:	pusha  
  409a92:	push   es
  409a93:	scas   eax,DWORD PTR es:[edi]
  409a94:	fsubp  st(3),st
  409a96:	or     esi,ebx
  409a98:	out    dx,al
  409a99:	pop    edi
  409a9a:	gs push 0xffffffd2
  409a9d:	out    0x99,al
  409a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa0:	and    BYTE PTR [edi],al
  409aa2:	jge    0x409b0f
  409aa4:	push   edi
  409aa5:	(bad)  
  409aa6:	cld    
  409aa7:	icebp  
  409aa8:	xchg   DWORD PTR [eax-0x5fa01271],edi
  409aae:	add    al,0x24
  409ab0:	out    0x9c,eax
  409ab2:	lods   al,BYTE PTR ds:[esi]
  409ab3:	inc    esi
  409ab4:	retf   0x8470
  409ab7:	dec    ebx
  409ab8:	pop    ebp
  409ab9:	dec    edx
  409aba:	pop    es
  409abb:	or     eax,0xc76bf5c8
  409ac0:	dec    ebx
  409ac1:	add    BYTE PTR [edi],0x7a
  409ac4:	and    esi,DWORD PTR [ebx]
  409ac6:	ret    0x963d
  409ac9:	fdivp  st(3),st
  409acb:	ins    DWORD PTR es:[edi],dx
  409acc:	ficom  WORD PTR [edi+0x7e]
  409acf:	mov    esi,0x1827f260
  409ad4:	int    0xb2
  409ad6:	jge    0x409b11
  409ad8:	push   eax
  409ad9:	push   eax
  409ada:	push   cs
  409adb:	rol    BYTE PTR ds:0x984d1673,cl
  409ae1:	pop    ebx
  409ae2:	jmp    0x41ba1f00
  409ae7:	xchg   ecx,eax
  409ae8:	cmp    al,0x20
  409aea:	dec    eax
  409aeb:	addr16 test edi,ecx
  409aee:	or     BYTE PTR [edx+ebx*1+0x79],ch
  409af2:	sbb    dl,0xf
  409af5:	shl    BYTE PTR [eax],1
  409af7:	mov    eax,ds:0xfcca55be
  409afc:	mov    DWORD PTR [eax+0x4e],edi
  409aff:	or     BYTE PTR [eax+ecx*8+0x765d075b],dh
  409b06:	out    dx,al
  409b07:	sbb    eax,0x936f7d8d
  409b0c:	dec    edx
  409b0d:	xor    eax,0xf7f1aea8
  409b12:	fadd   QWORD PTR [edi]
  409b14:	das    
  409b15:	xor    BYTE PTR [eax+ebx*8+0x789b560],dh
  409b1c:	or     eax,ebp
  409b1e:	mov    BYTE PTR [edx-0x3d],cl
  409b21:	into   
  409b22:	js     0x409b47
  409b24:	fwait
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	lods   eax,DWORD PTR ds:[esi]
  409b27:	add    eax,0xe3c59b03
  409b2c:	addr16 pop es
  409b2e:	xor    BYTE PTR [edi],bl
  409b30:	sbb    BYTE PTR [edx],cl
  409b32:	sub    BYTE PTR [ebx+0x59],dh
  409b35:	cmp    bl,BYTE PTR [ebx]
  409b37:	pop    ebx
  409b38:	push   eax
  409b39:	ins    BYTE PTR es:[edi],dx
  409b3a:	dec    bl
  409b3c:	push   ebx
  409b3d:	xchg   si,ax
  409b3f:	imul   edi,DWORD PTR [edi+0x27],0x122ddc3a
  409b46:	mov    bh,0x53
  409b48:	or     ah,BYTE PTR [ebx-0x14d4eea9]
  409b4e:	jp     0x409bb2
  409b50:	bound  ecx,QWORD PTR [edi+0x4e1b7dae]
  409b56:	clc    
  409b57:	jae    0x409b13
  409b59:	fbstp  TBYTE PTR [ebx]
  409b5b:	hlt    
  409b5c:	test   al,0x79
  409b5e:	mov    ss,eax
  409b60:	cmp    ebx,0x3713cf18
  409b66:	xor    ch,BYTE PTR es:[ebx+0x45896e61]
  409b6d:	shr    BYTE PTR [ecx],0x15
  409b70:	add    DWORD PTR [esi+0x43],0x0
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4345df
  409b7f:	or     DWORD PTR ds:0x43464f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43467f
  409b8f:	xor    DWORD PTR ds:0x434683,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43466b
  409bb7:	mov    edi,DWORD PTR ds:0x434723
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	stc    
  409bd4:	push   edi
  409bd5:	lock int3 
  409bd7:	mov    gs,edx
  409bd9:	jle    0x409c59
  409bdb:	jo     0x409c56
  409bdd:	jle    0x409c5d
  409bdf:	scas   eax,DWORD PTR es:[edi]
  409be0:	dec    eax
  409be1:	outs   dx,BYTE PTR ds:[esi]
  409be2:	pop    esp
  409be3:	(bad)  [esi]
  409be5:	jg     0x409ba8
  409be7:	xor    dh,BYTE PTR [edx+0x33]
  409bea:	je     0x409bf8
  409bec:	ja     0x409ba1
  409bee:	mov    dh,0xbf
  409bf0:	xchg   edx,eax
  409bf1:	in     eax,dx
  409bf2:	ins    DWORD PTR es:[edi],dx
  409bf3:	jnp    0x409c4f
  409bf5:	std    
  409bf6:	lahf   
  409bf7:	add    DWORD PTR [esi],ebp
  409bf9:	shr    DWORD PTR [edi],1
  409bfb:	dec    edi
  409bfc:	aaa    
  409bfd:	jne    0x409bd6
  409bff:	cmp    DWORD PTR [esi],ebp
  409c01:	pop    ecx
  409c02:	scas   al,BYTE PTR es:[edi]
  409c03:	xor    DWORD PTR [ebx-0x64],esi
  409c06:	xor    eax,0x88ed0ab0
  409c0b:	dec    ebx
  409c0c:	dec    ebx
  409c0d:	add    DWORD PTR [edx+0x130b1027],ebp
  409c13:	int    0xa7
  409c15:	add    DWORD PTR [edx-0x49],ebx
  409c18:	rcr    DWORD PTR [ebx-0x7be5e4f0],cl
  409c1e:	add    ecx,DWORD PTR [edi-0x154dfa05]
  409c24:	ds xchg esp,eax
  409c26:	mov    ebp,esi
  409c28:	xlat   BYTE PTR ds:[ebx]
  409c29:	push   ss
  409c2a:	push   es
  409c2b:	push   esp
  409c2c:	push   esi
  409c2d:	scas   al,BYTE PTR es:[edi]
  409c2e:	push   cs
  409c2f:	out    0xe8,al
  409c31:	ins    DWORD PTR es:[edi],dx
  409c32:	dec    edi
  409c33:	(bad)  
  409c34:	or     eax,DWORD PTR [ecx-0x14]
  409c37:	lods   al,BYTE PTR ds:[esi]
  409c38:	jmp    0xab8aa4cd
  409c3d:	into   
  409c3e:	xor    esp,DWORD PTR [esi-0x7e]
  409c41:	bound  edi,QWORD PTR [edi+0x3c]
  409c44:	sub    al,0x67
  409c46:	add    edx,0x44
  409c49:	mov    eax,0x7cc1f112
  409c4e:	mov    edx,0x73d8ffdc
  409c53:	sub    bh,dl
  409c55:	sbb    ch,BYTE PTR ds:0xd60d3135
  409c5b:	adc    BYTE PTR [eax+0x39],bh
  409c5e:	xchg   esp,eax
  409c5f:	sbb    DWORD PTR [ebx+0x47],ecx
  409c62:	xchg   BYTE PTR [esi],ah
  409c64:	test   dl,al
  409c66:	jmp    0xb699:0xecf8f7dc
  409c6d:	lahf   
  409c6e:	pop    ebp
  409c6f:	inc    ecx
  409c70:	sub    DWORD PTR [esi-0x297d92f9],0xffffffa6
  409c77:	cdq    
  409c78:	cmp    eax,0xa39638f
  409c7d:	or     ebp,edi
  409c7f:	lea    ecx,[edi+0x3c]
  409c82:	cwde   
  409c83:	xor    ah,dh
  409c85:	push   cs
  409c86:	repz retf 0x5887
  409c8a:	add    DWORD PTR [edx-0x2d],ebp
  409c8d:	lock data16 jg 0x409cf8
  409c91:	inc    esi
  409c92:	test   DWORD PTR [ebp-0x323042bd],esi
  409c98:	push   esi
  409c99:	aam    0x16
  409c9b:	pop    eax
  409c9c:	mov    esi,0x3dcf33a2
  409ca1:	shl    DWORD PTR [esi],1
  409ca3:	add    ah,dh
  409ca5:	test   al,0x7e
  409ca7:	mov    ebp,0x4a6504d9
  409cac:	inc    edx
  409cad:	mov    DWORD PTR [edx+0x6afa0fe8],esi
  409cb3:	xchg   BYTE PTR [ebp+edx*1-0x4515cfcc],dl
  409cba:	test   eax,0x18491c73
  409cbf:	jns    0x409c58
  409cc1:	pop    ebx
  409cc2:	ret    0x40c8
  409cc5:	xchg   ebx,eax
  409cc6:	and    DWORD PTR [edx+ebp*8+0x7bc2ca3a],0x971251bb
  409cd1:	loope  0x409c9e
  409cd3:	xor    eax,0x3bf85c15
  409cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd9:	clc    
  409cda:	jns    0x409c6f
  409cdc:	fild   QWORD PTR [ecx+0x6aafdc6f]
  409ce2:	icebp  
  409ce3:	mov    al,BYTE PTR [ebp-0x1d]
  409ce6:	into   
  409ce7:	repnz stos BYTE PTR es:[edi],al
  409ce9:	inc    eax
  409cea:	cwde   
  409ceb:	es and al,0xb1
  409cee:	sub    BYTE PTR [edi-0x2b],cl
  409cf1:	add    ecx,edi
  409cf3:	imul   esp,DWORD PTR [edx+eax*1-0x44],0xffffff9f
  409cf8:	push   ecx
  409cf9:	mov    ebp,0xab488c9d
  409cfe:	add    al,BYTE PTR [ecx+0x58]
  409d01:	(bad)  
  409d02:	ret    0x1901
  409d05:	ror    BYTE PTR [esi+0x3e],cl
  409d08:	dec    ecx
  409d09:	mov    bh,0x41
  409d0b:	lock mov bl,0xfb
  409d0e:	dec    esp
  409d0f:	(bad)  
  409d10:	sahf   
  409d11:	jns    0x409cff
  409d13:	stos   DWORD PTR es:[edi],eax
  409d14:	mov    dl,0xd7
  409d16:	mov    BYTE PTR [ebx+0x218a27f8],al
  409d1c:	enter  0xa98c,0xc9
  409d20:	xchg   BYTE PTR [ecx-0x42],dh
  409d23:	xchg   ebx,ebp
  409d25:	jecxz  0x409d88
  409d27:	repnz pop eax
  409d29:	pop    edi
  409d2a:	outs   dx,BYTE PTR ds:[esi]
  409d2b:	dec    ecx
  409d2c:	pop    ss
  409d2d:	popf   
  409d2e:	push   ecx
  409d2f:	sbb    al,0x0
  409d31:	push   ecx
  409d32:	inc    eax
  409d33:	cs fwait
  409d35:	dec    edx
  409d36:	ja     0x409cc5
  409d38:	mov    al,ds:0xf2124873
  409d3d:	mov    ebp,DWORD PTR [ebx-0x2]
  409d40:	jmp    0xaa44:0x2173c018
  409d47:	or     al,0x40
  409d49:	sahf   
  409d4a:	sub    ebp,ecx
  409d4c:	push   0x5a58f3be
  409d51:	rcl    DWORD PTR [edi+0x4a4de154],1
  409d57:	sub    al,0xf4
  409d59:	jne    0x409d8f
  409d5b:	mov    ebp,0x27e2fad8
  409d60:	ja     0x409d02
  409d62:	(bad)
  409d66:	or     cl,ch
  409d68:	add    al,0xa7
  409d6a:	inc    ebx
  409d6b:	rcr    BYTE PTR [edx],0x5e
  409d6e:	lock sti 
  409d70:	std    
  409d71:	retf   
  409d72:	jmp    0x409d8b
  409d74:	xor    eax,0x60a4da60
  409d79:	pushf  
  409d7a:	add    dh,cl
  409d7c:	sbb    ebx,0x60
  409d7f:	retf   0x7208
  409d82:	into   
  409d83:	out    dx,eax
  409d84:	addr16 hlt 
  409d86:	call   FWORD PTR [edi-0x27]
  409d89:	mov    eax,0xabfcc7f1
  409d8e:	xlat   BYTE PTR ds:[ebx]
  409d8f:	aaa    
  409d90:	xlat   BYTE PTR ds:[ebx]
  409d91:	push   0x64e3b004
  409d96:	fs pushf 
  409d98:	outs   dx,DWORD PTR ds:[esi]
  409d99:	jno    0x409d31
  409d9b:	cmp    al,0xa2
  409d9d:	and    bh,BYTE PTR [edi]
  409d9f:	cmp    al,0xd5
  409da1:	cld    
  409da2:	lock test BYTE PTR [edi+0x510c7871],cl
  409da9:	xchg   edx,eax
  409daa:	cs mov ah,0x95
  409dad:	cli    
  409dae:	adc    bl,dh
  409db0:	iret   
  409db1:	adc    eax,DWORD PTR [ecx+eiz*2+0x612d6903]
  409db8:	hlt    
  409db9:	popa   
  409dba:	div    ebx
  409dbc:	cmp    DWORD PTR [edi+eax*4],edx
  409dbf:	fidivr DWORD PTR [ecx-0x15014585]
  409dc5:	iret   
  409dc6:	sti    
  409dc7:	or     al,0xfd
  409dc9:	rol    ebp,0xa
  409dcc:	cmp    DWORD PTR fs:[ebp+0x29c0745d],esi
  409dd3:	mov    al,ds:0x34c50f33
  409dd8:	inc    esp
  409dd9:	call   0x81ef441c
  409dde:	xchg   ebp,eax
  409ddf:	and    DWORD PTR [ebx+0x3649564b],esi
  409de5:	fimul  WORD PTR [ebp-0x130093ef]
  409deb:	scas   eax,DWORD PTR es:[edi]
  409dec:	jmp    0x7bf1:0x168249eb
  409df3:	jle    0x409e4e
  409df5:	test   edi,ebx
  409df7:	div    DWORD PTR [eax]
  409df9:	add    eax,0xb785b0d8
  409dfe:	clc    
  409dff:	xchg   ebp,eax
  409e00:	nop
  409e01:	jo     0x409d94
  409e03:	xchg   esi,eax
  409e04:	rcr    BYTE PTR [ebp-0x20aa9e6b],0xb5
  409e0b:	neg    al
  409e0d:	pusha  
  409e0e:	loope  0x409e04
  409e10:	cdq    
  409e11:	(bad)  
  409e12:	jae    0x409e7f
  409e14:	jle    0x409e29
  409e16:	stc    
  409e17:	jge    0x409e34
  409e19:	add    ebp,DWORD PTR [edx+0x14]
  409e1c:	std    
  409e1d:	aam    0xf3
  409e1f:	rol    DWORD PTR [ecx],cl
  409e21:	and    al,ch
  409e23:	sub    DWORD PTR [edi-0x358364fa],edi
  409e29:	sar    DWORD PTR [ebp+0x75],cl
  409e2c:	(bad)  
  409e2e:	jno    0x409dd7
  409e30:	fld    DWORD PTR [edx+ecx*1+0x6784d060]
  409e37:	push   esi
  409e38:	push   edx
  409e39:	imul   edx,DWORD PTR ds:0x9201259e,0x5
  409e40:	std    
  409e41:	retf   
  409e42:	ja     0x409ea0
  409e44:	inc    edx
  409e45:	repz xchg ebx,eax
  409e48:	mov    dh,0x8
  409e4a:	mov    ds:0x8bb6ff75,eax
  409e4f:	add    eax,0x7fc62c6f
  409e54:	scas   al,BYTE PTR es:[edi]
  409e55:	icebp  
  409e56:	jns    0x409ddf
  409e58:	clc    
  409e59:	std    
  409e5a:	xchg   esp,eax
  409e5b:	cli    
  409e5c:	popa   
  409e5d:	out    dx,eax
  409e5e:	sbb    edx,esp
  409e60:	mov    dl,0x36
  409e62:	ffree  st(5)
  409e64:	dec    ebp
  409e65:	xchg   edi,eax
  409e66:	mov    cl,0x23
  409e68:	retf   0x56ef
  409e6b:	jne    0x409e51
  409e6d:	(bad)  
  409e6e:	jno    0x409e09
  409e70:	adc    DWORD PTR [edi],ebx
  409e72:	scas   al,BYTE PTR es:[edi]
  409e73:	int3   
  409e74:	jp     0x409e1e
  409e76:	or     DWORD PTR [ebp+0x7c],edx
  409e79:	frstor [esi-0x69]
  409e7c:	int3   
  409e7d:	mov    DWORD PTR [ecx+0x65],esi
  409e80:	jp     0x409ee5
  409e82:	lods   eax,DWORD PTR ds:[esi]
  409e83:	imul   esi,DWORD PTR [edi],0xab19d84b
  409e89:	sbb    DWORD PTR [ebp+edx*8-0x3ab9c6ef],ecx
  409e90:	pop    es
  409e91:	lahf   
  409e92:	jle    0x409e83
  409e94:	iret   
  409e95:	fwait
  409e96:	(bad)  
  409e97:	push   ebx
  409e98:	(bad)  [ebp+0x1b144181]
  409e9e:	loopne 0x409f11
  409ea0:	pop    ss
  409ea1:	repz pusha 
  409ea3:	aad    0xdd
  409ea5:	imul   ecx,DWORD PTR [ebp-0x4e],0xfb34c86c
  409eac:	sub    al,BYTE PTR [eax]
  409eae:	inc    esp
  409eaf:	xchg   ecx,eax
  409eb0:	xchg   ecx,eax
  409eb1:	(bad)  
  409eb2:	(bad)  
  409eb3:	call   0xbe6372a8
  409eb8:	fwait
  409eb9:	in     eax,dx
  409eba:	pop    eax
  409ebb:	sahf   
  409ebc:	xchg   BYTE PTR [ebx],dl
  409ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ebf:	mov    bl,0xa5
  409ec1:	aad    0x2b
  409ec3:	(bad)  
  409ec4:	and    eax,0x3fa1f9ee
  409ec9:	outs   dx,DWORD PTR ds:[esi]
  409eca:	lds    eax,FWORD PTR [eax+0x72cdc00]
  409ed0:	and    BYTE PTR [ebx+eiz*4-0x12],dh
  409ed4:	xchg   DWORD PTR [eax+0x48cf8796],ebx
  409eda:	or     al,0x8f
  409edc:	pop    ss
  409edd:	sub    eax,0xb0cfcf7f
  409ee2:	cld    
  409ee3:	out    0x53,eax
  409ee5:	adc    bh,BYTE PTR [ecx]
  409ee7:	or     dh,BYTE PTR [esi]
  409ee9:	(bad)  
  409eea:	adc    ah,BYTE PTR [ecx-0x7aab27c]
  409ef0:	lahf   
  409ef1:	adc    DWORD PTR [esi-0x54],ebp
  409ef4:	test   eax,0xca032c2a
  409ef9:	dec    eax
  409efa:	aad    0xa2
  409efc:	dec    ebx
  409efd:	push   esi
  409efe:	jecxz  0x409f36
  409f00:	call   0x5203:0x9008c47d
  409f07:	call   0xef19:0xf6d3976a
  409f0e:	outs   dx,DWORD PTR ds:[esi]
  409f0f:	sub    eax,0xd9ce3c11
  409f14:	and    eax,0x161c2c4f
  409f19:	xchg   DWORD PTR [edi+ebp*4+0x23],esp
  409f1d:	cmp    al,0x9f
  409f1f:	cdq    
  409f20:	in     eax,0xf2
  409f22:	mov    dh,0x19
  409f24:	and    eax,0x88229988
  409f29:	pop    es
  409f2a:	fisubr WORD PTR ds:[esi]
  409f2d:	dec    BYTE PTR [ebx]
  409f2f:	in     eax,dx
  409f30:	fwait
  409f31:	sahf   
  409f32:	enter  0xce3f,0x3f
  409f36:	loope  0x409f4d
  409f38:	or     DWORD PTR [ebx],ebp
  409f3a:	jns    0x409ec8
  409f3c:	inc    ebp
  409f3d:	push   ds
  409f3e:	jl     0x409f6a
  409f40:	dec    ebx
  409f41:	push   edx
  409f42:	iret   
  409f43:	pop    ds
  409f44:	data16 je 0x409efe
  409f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f48:	mov    al,ds:0x5342564a
  409f4d:	pop    esi
  409f4e:	stc    
  409f4f:	jns    0x409fc7
  409f51:	inc    ebp
  409f52:	fldenv [ecx]
  409f54:	aam    0xa
  409f56:	jg     0x409f13
  409f58:	aam    0x4b
  409f5a:	cmp    eax,0xf29f0a05
  409f5f:	pop    ds
  409f60:	clc    
  409f61:	xor    esi,DWORD PTR [eax]
  409f63:	fisttp DWORD PTR [edx+0x4340f60e]
  409f69:	sub    ah,BYTE PTR [edx-0x3317b915]
  409f6f:	xchg   ebp,eax
  409f70:	xchg   esi,eax
  409f71:	or     bh,BYTE PTR [edx+edi*4-0x58]
  409f75:	adc    al,cl
  409f77:	xchg   ecx,eax
  409f78:	leave  
  409f79:	stos   DWORD PTR es:[edi],eax
  409f7a:	(bad)  
  409f7b:	jmp    0x1765:0xc0227103
  409f82:	xchg   esp,eax
  409f83:	mov    BYTE PTR [edi+0x398c078e],dl
  409f89:	popf   
  409f8a:	sti    
  409f8b:	sti    
  409f8c:	mov    edx,0xa1677309
  409f91:	sub    eax,0x703e87f5
  409f96:	mov    ch,0x13
  409f98:	ins    DWORD PTR es:[edi],dx
  409f99:	(bad)  
  409f9a:	lahf   
  409f9b:	addr16 add ch,0xdf
  409f9f:	aad    0x33
  409fa1:	xor    eax,0x3e63ff30
  409fa6:	mov    al,0x63
  409fa8:	inc    esi
  409fa9:	jno    0x40a016
  409fab:	inc    eax
  409fac:	jecxz  0x409fc3
  409fae:	sub    ah,bl
  409fb0:	mov    esp,DWORD PTR [ecx]
  409fb2:	sahf   
  409fb3:	push   esi
  409fb4:	ficom  WORD PTR [edx]
  409fb6:	ror    BYTE PTR [ecx-0xd4b19a1],cl
  409fbc:	repz and eax,0x90b67d55
  409fc2:	stos   BYTE PTR es:[edi],al
  409fc3:	adc    dh,cl
  409fc5:	push   eax
  409fc6:	mov    ch,BYTE PTR [edx+0x43]
  409fc9:	(bad)
  409fcd:	inc    esi
  409fce:	jb     0x40a03f
  409fd0:	mov    WORD PTR [ecx-0x21ba114e],es
  409fd6:	stos   DWORD PTR es:[edi],eax
  409fd7:	dec    eax
  409fd8:	ffreep st(7)
  409fda:	inc    ebp
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fdecstp 
  409ff4:	nop
  409ff5:	adc    eax,DWORD PTR [edx]
  409ff7:	xor    dh,0x7e
  409ffa:	jle    0x40a06c
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x40a029
  40a000:	je     0x409f98
  40a002:	fisttp QWORD PTR [eax]
  40a004:	fisttp DWORD PTR [ebx+edi*2]
  40a007:	loope  0x409f92
  40a009:	cwde   
  40a00a:	sub    al,0x8a
  40a00c:	dec    ebp
  40a00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a00e:	push   edx
  40a00f:	enter  0x36cc,0xc7
  40a013:	in     eax,dx
  40a014:	sbb    bh,BYTE PTR [eax+0x78]
  40a017:	inc    cx
  40a019:	push   esi
  40a01a:	push   0x5b905ec3
  40a01f:	adc    BYTE PTR ss:[edx],bh
  40a022:	das    
  40a023:	and    DWORD PTR [eax-0x12],0xffffffa2
  40a027:	dec    BYTE PTR [ebp+0x72]
  40a02a:	inc    edi
  40a02b:	xchg   DWORD PTR [ebx],esp
  40a02d:	std    
  40a02e:	and    BYTE PTR [ebp-0x3e],dh
  40a031:	and    dl,BYTE PTR [ecx+0x5cff8a66]
  40a037:	repz push ds
  40a039:	lods   al,BYTE PTR ds:[esi]
  40a03a:	add    al,0xdd
  40a03c:	or     edi,esi
  40a03e:	or     ebx,esp
  40a040:	xchg   esp,eax
  40a041:	sahf   
  40a042:	(bad)  
  40a043:	jecxz  0x40a02e
  40a045:	and    eax,0x880fb99a
  40a04a:	in     eax,dx
  40a04b:	daa    
  40a04c:	mov    ds:0xb72eebba,al
  40a051:	fadd   QWORD PTR [edx+ecx*2]
  40a054:	pop    edi
  40a055:	sub    eax,0xe784bcc9
  40a05a:	add    dh,bh
  40a05c:	js     0x409fe5
  40a05e:	add    ax,0xd815
  40a062:	fbld   TBYTE PTR [esi+0x72d6247a]
  40a068:	jbe    0x40a042
  40a06a:	jmp    0x1409290a
  40a06f:	sub    ebx,DWORD PTR [esi]
  40a071:	xchg   BYTE PTR [esi+eiz*1-0x426ff1dd],ah
  40a078:	push   esi
  40a079:	rcr    DWORD PTR [bx-0x24],0x80
  40a07e:	mov    cl,0x2b
  40a080:	sbb    dl,dl
  40a082:	pushf  
  40a083:	iret   
  40a084:	or     eax,0x73b63706
  40a089:	test   dl,dl
  40a08b:	bound  ebx,QWORD PTR [eax-0x5fe84613]
  40a091:	imul   esi,DWORD PTR [eax+0x4f],0xde33fd8c
  40a098:	push   0xc308a6d8
  40a09d:	into   
  40a09e:	int    0xa8
  40a0a0:	fwait
  40a0a1:	jl     0x40a04b
  40a0a3:	jbe    0x40a08b
  40a0a5:	mov    ds:0xb15746a,al
  40a0aa:	xchg   edx,eax
  40a0ab:	and    BYTE PTR [ecx-0x4c],0x92
  40a0af:	popa   
  40a0b0:	lock xor BYTE PTR [ebx+edx*2+0x4a662382],ah
  40a0b8:	mov    eax,0x4f5c637e
  40a0bd:	jl     0x40a0db
  40a0bf:	mov    DWORD PTR [ebx],ebx
  40a0c1:	or     esi,edi
  40a0c3:	test   DWORD PTR [ebx],0x72f5814a
  40a0c9:	push   ss
  40a0ca:	(bad)  
  40a0cb:	call   0x8bfc83a6
  40a0d0:	and    cl,BYTE PTR [ebx+0xf]
  40a0d3:	rcl    eax,cl
  40a0d5:	dec    esp
  40a0d6:	mov    ch,0xe6
  40a0d8:	cld    
  40a0d9:	push   edi
  40a0da:	enter  0x69a4,0x56
  40a0de:	xlat   BYTE PTR ds:[ebx]
  40a0df:	lods   al,BYTE PTR ds:[esi]
  40a0e0:	scas   al,BYTE PTR es:[edi]
  40a0e1:	shl    ch,0x4b
  40a0e4:	in     eax,0x11
  40a0e6:	mov    esp,edx
  40a0e8:	repz jmp 0x8a3c:0x35404ed4
  40a0f0:	iret   
  40a0f1:	xchg   ebx,eax
  40a0f2:	js     0x40a11d
  40a0f4:	iret   
  40a0f5:	xchg   DWORD PTR [ecx-0x4864cd45],ebx
  40a0fb:	dec    edx
  40a0fc:	je     0x40a10b
  40a0fe:	dec    edi
  40a0ff:	pop    es
  40a100:	dec    ecx
  40a101:	mov    ds:0x2976400d,eax
  40a106:	pmulhw mm5,QWORD PTR [edi-0x29]
  40a10a:	and    al,0xe8
  40a10c:	hlt    
  40a10d:	loope  0x40a166
  40a10f:	push   ebx
  40a110:	mov    ds:0x216613b3,eax
  40a115:	pop    ss
  40a116:	mov    dh,0x74
  40a118:	adc    DWORD PTR [esp+edx*2+0xe],esp
  40a11c:	mov    eax,ds:0xc2b31545
  40a121:	xor    DWORD PTR [edx+0x32e30c49],ebp
  40a127:	and    al,0x63
  40a129:	retf   0xc7e9
  40a12c:	xchg   esi,eax
  40a12d:	jb     0x40a149
  40a12f:	enter  0x7829,0x53
  40a133:	in     al,0x47
  40a135:	xchg   ecx,eax
  40a136:	rcr    al,0x8e
  40a139:	xchg   ebp,eax
  40a13a:	leave  
  40a13b:	ret    0xca66
  40a13e:	push   esi
  40a13f:	mov    esp,0xd8749d4f
  40a144:	fcomp  QWORD PTR ds:0x9786af30
  40a14a:	in     eax,dx
  40a14b:	out    0xeb,al
  40a14d:	jecxz  0x40a1a7
  40a14f:	daa    
  40a150:	ja     0x40a152
  40a152:	xor    ebx,DWORD PTR [ecx+0x5bb44bb8]
  40a158:	xchg   esp,eax
  40a159:	fwait
  40a15a:	(bad)  
  40a15b:	jmp    0x40a158
  40a15d:	jge    0x40a0ed
  40a15f:	daa    
  40a160:	push   eax
  40a161:	xor    al,0x25
  40a163:	fmul   QWORD PTR [ebx-0x232d422e]
  40a169:	sub    edx,edi
  40a16b:	ret    0x4f62
  40a16e:	fisttp QWORD PTR [esi]
  40a170:	inc    ecx
  40a171:	xchg   ecx,eax
  40a172:	in     eax,dx
  40a173:	add    ch,al
  40a175:	jle    0x40a10d
  40a177:	in     al,0x20
  40a179:	dec    esp
  40a17a:	int3   
  40a17b:	sub    cl,BYTE PTR ds:0xe2268e6d
  40a181:	loop   0x40a16c
  40a183:	rcl    DWORD PTR [eax-0x45],cl
  40a186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a187:	sbb    al,BYTE PTR [esi]
  40a189:	xchg   esi,eax
  40a18a:	mov    ebx,0x97d6657d
  40a18f:	out    dx,eax
  40a190:	push   0xed5155b0
  40a195:	outs   dx,BYTE PTR ds:[esi]
  40a196:	fwait
  40a197:	sbb    DWORD PTR [edx+0x63],eax
  40a19a:	xlat   BYTE PTR ds:[ebx]
  40a19b:	add    bh,bl
  40a19d:	push   eax
  40a19e:	es (bad) 
  40a1a0:	rol    BYTE PTR [esi+ebp*8+0x67],cl
  40a1a4:	arpl   WORD PTR [edx+0x77a338b8],bp
  40a1aa:	sub    BYTE PTR [esi],ch
  40a1ac:	loope  0x40a141
  40a1ae:	std    
  40a1af:	jns    0x40a17c
  40a1b1:	ins    BYTE PTR es:[edi],dx
  40a1b2:	push   esi
  40a1b3:	and    ebx,DWORD PTR [ebx+0x455a837a]
  40a1b9:	mov    edi,0x590804e8
  40a1be:	in     eax,0x78
  40a1c0:	aaa    
  40a1c1:	push   edx
  40a1c2:	push   es
  40a1c3:	cmp    bh,BYTE PTR [ebx+ebx*4+0x3ec1fa5]
  40a1ca:	xchg   ebp,eax
  40a1cb:	cld    
  40a1cc:	mov    al,ds:0x32b8f61f
  40a1d1:	(bad)  
  40a1d2:	fstp   DWORD PTR [edx]
  40a1d4:	xchg   ebx,eax
  40a1d5:	mov    WORD PTR [ecx-0x454b7c3c],fs
  40a1db:	shl    DWORD PTR [esp+edx*1],1
  40a1de:	add    eax,0x5b2a7310
  40a1e3:	jnp    0x40a1a2
  40a1e5:	std    
  40a1e6:	jb     0x40a1f4
  40a1e8:	xor    al,0x5
  40a1ea:	cwde   
  40a1eb:	push   ebp
  40a1ec:	fstp   QWORD PTR ds:0xd4470e52
  40a1f2:	dec    esi
  40a1f3:	add    BYTE PTR [ecx-0x44],0x40
  40a1f7:	jns    0x40a1a0
  40a1f9:	out    0xff,eax
  40a1fb:	xor    DWORD PTR [edx+0x44],edi
  40a1fe:	pop    edi
  40a1ff:	ds fwait
  40a201:	mov    dh,0xdf
  40a203:	push   cs
  40a204:	dec    ecx
  40a205:	inc    ebp
  40a206:	push   edx
  40a207:	js     0x40a254
  40a209:	xor    al,0xb6
  40a20b:	xchg   BYTE PTR [ebx],al
  40a20d:	iret   
  40a20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a20f:	bound  ebp,QWORD PTR [esi+0x52]
  40a212:	or     eax,0x24d016a9
  40a217:	add    DWORD PTR ds:0xbfee3b44,ecx
  40a21d:	inc    edx
  40a21e:	aad    0x88
  40a220:	rcr    BYTE PTR [ecx+0x3dd6081d],1
  40a226:	jg     0x40a291
  40a228:	mov    bl,BYTE PTR [ebx]
  40a22a:	inc    edx
  40a22b:	(bad)  
  40a22d:	xchg   ecx,eax
  40a22e:	in     al,0xae
  40a230:	adc    DWORD PTR [ecx+0x73],ebp
  40a233:	mov    DWORD PTR [ebx+0x37],esp
  40a236:	xor    ecx,esi
  40a238:	push   0xc1e1ccc4
  40a23d:	push   ecx
  40a23e:	xchg   edx,eax
  40a23f:	mov    ebp,0xc1cfe5b3
  40a244:	mov    ds:0x4abf3bbc,al
  40a249:	mov    ch,0x39
  40a24b:	mov    bl,0x9f
  40a24d:	and    esi,DWORD PTR [ebp+0x1f]
  40a250:	outs   dx,BYTE PTR ds:[esi]
  40a251:	dec    eax
  40a252:	mov    al,ds:0xf9b7c12
  40a257:	mov    edi,0x8df71522
  40a25c:	icebp  
  40a25d:	mov    ah,0x1f
  40a25f:	dec    ecx
  40a260:	sahf   
  40a261:	shl    ecx,1
  40a263:	jbe    0x40a210
  40a265:	cld    
  40a266:	dec    ebp
  40a267:	fstp   TBYTE PTR [ebx+0x2abe555e]
  40a26d:	inc    eax
  40a26e:	mov    edi,0xcfb7e481
  40a273:	cmp    BYTE PTR [ecx-0x2c],al
  40a276:	pushf  
  40a277:	repz sbb ecx,DWORD PTR [ebx]
  40a27a:	dec    eax
  40a27b:	or     ebp,ebx
  40a27d:	cli    
  40a27e:	mov    al,ds:0x4a02ade1
  40a283:	pop    ebp
  40a284:	jno    0x40a2d2
  40a286:	add    al,0x6a
  40a288:	call   0xc483:0x4dbb365
  40a28f:	mov    ecx,0x9a03f9d5
  40a294:	push   0x65
  40a296:	jbe    0x40a264
  40a298:	xchg   DWORD PTR [ebx+0x66],edi
  40a29b:	adc    ebx,DWORD PTR [esp+edx*8+0x33]
  40a29f:	sbb    ebx,0x3141887e
  40a2a5:	mov    dl,0x52
  40a2a7:	fdivr  st,st(0)
  40a2a9:	inc    ebx
  40a2aa:	inc    esp
  40a2ab:	jmp    0xc93c:0x23768f2
  40a2b2:	shr    BYTE PTR [esi],cl
  40a2b4:	adc    BYTE PTR [ecx],cl
  40a2b6:	pop    ds
  40a2b7:	data16 mov dh,0xf3
  40a2ba:	push   esp
  40a2bb:	das    
  40a2bc:	cmp    ebp,DWORD PTR [edx+ecx*4-0x4b]
  40a2c0:	out    dx,al
  40a2c1:	mov    WORD PTR ds:0xe813a100,es
  40a2c7:	jno    0x40a2ac
  40a2c9:	in     al,0xf3
  40a2cb:	dec    ebp
  40a2cc:	out    dx,al
  40a2cd:	jns    0x40a27f
  40a2cf:	lock xchg esp,eax
  40a2d1:	xchg   ch,al
  40a2d3:	mov    ebp,0xc937f7f7
  40a2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d9:	jb     0x40a344
  40a2db:	js     0x40a27f
  40a2dd:	mov    BYTE PTR [ebx],dh
  40a2df:	out    dx,eax
  40a2e0:	mov    al,0xf9
  40a2e2:	shl    DWORD PTR [esi-0x64],0x95
  40a2e6:	addr16 shl esp,0xe
  40a2ea:	stos   BYTE PTR es:[edi],al
  40a2eb:	mov    WORD PTR [ebx-0x6],cs
  40a2ee:	inc    edx
  40a2ef:	(bad)  [edx+0x6da2ef26]
  40a2f5:	push   ds
  40a2f6:	rcl    DWORD PTR [ecx+eax*1+0x1ff49361],1
  40a2fd:	jl     0x40a32c
  40a2ff:	bound  ebx,QWORD PTR ds:0x7caa2781
  40a305:	sti    
  40a306:	xor    al,0xe4
  40a308:	pop    ecx
  40a309:	loop   0x40a2e5
  40a30b:	nop
  40a30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30d:	cmp    ecx,ebx
  40a30f:	imul   esp,DWORD PTR [ecx+0x7c],0x789370b0
  40a316:	gs cwde 
  40a318:	add    bl,BYTE PTR [esi]
  40a31a:	call   0x1e4ab31c
  40a31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a320:	clc    
  40a321:	jg     0x40a381
  40a323:	pusha  
  40a324:	out    0x1b,eax
  40a326:	push   es
  40a327:	mov    al,BYTE PTR [edx-0x1a]
  40a32a:	or     eax,0xda93ad6e
  40a32f:	ja     0x40a318
  40a331:	and    al,0xf2
  40a333:	loop   0x40a2fa
  40a335:	(bad)  
  40a336:	and    ch,0x30
  40a339:	cmc    
  40a33a:	sbb    al,0x43
  40a33c:	imul   edi,ebx,0x1681ae64
  40a342:	sar    ch,cl
  40a344:	mov    ds:0xecb65680,eax
  40a349:	jne    0x40a328
  40a34b:	inc    BYTE PTR [esi+0x24]
  40a34e:	jmp    DWORD PTR [ecx]
  40a350:	and    eax,0x9efe9d23
  40a355:	lods   al,BYTE PTR ds:[esi]
  40a356:	sahf   
  40a357:	scas   eax,DWORD PTR es:[edi]
  40a358:	cli    
  40a359:	xor    al,0xe2
  40a35b:	fsub   st,st(0)
  40a35d:	icebp  
  40a35e:	inc    edx
  40a35f:	nop
  40a360:	shl    edx,1
  40a362:	fimul  DWORD PTR [edx+0x6f]
  40a365:	cmp    BYTE PTR [edi],ah
  40a367:	pmuludq mm2,QWORD PTR [ecx+0x232effba]
  40a36e:	cmp    DWORD PTR [eax-0x27a70f6f],ecx
  40a374:	or     DWORD PTR [edi+0x25],0x4e7195b7
  40a37b:	sar    DWORD PTR [ebx+0x6419faf4],cl
  40a381:	lea    ebx,[ebp+0x6]
  40a384:	(bad)  [esp+edx*4-0x2e]
  40a388:	pop    esi
  40a389:	add    BYTE PTR [ebx-0x72],al
  40a38c:	dec    edx
  40a38d:	mov    WORD PTR [edx-0x74],?
  40a390:	cli    
  40a391:	ss push ds
  40a393:	add    DWORD PTR [esi+0x51],0x51c7d7af
  40a39a:	jno    0x40a3dc
  40a39c:	loope  0x40a345
  40a39e:	xchg   DWORD PTR [ecx+0x6731d6fa],eax
  40a3a4:	fsub   st,st(6)
  40a3a6:	in     eax,0xef
  40a3a8:	loope  0x40a406
  40a3aa:	test   DWORD PTR [eax+ebx*2+0x4c759936],ebx
  40a3b1:	inc    esi
  40a3b2:	pop    es
  40a3b3:	clc    
  40a3b4:	mov    eax,ds:0x99b8d7ec
  40a3b9:	dec    edx
  40a3ba:	cld    
  40a3bb:	dec    esi
  40a3bc:	call   0xcca0c653
  40a3c1:	retf   
  40a3c2:	and    DWORD PTR [ebp-0x208f692e],eax
  40a3c8:	js     0x40a3f7
  40a3ca:	pusha  
  40a3cb:	imul   ecx,ecx,0x2452bafa
  40a3d1:	ss (bad) 
  40a3d3:	std    
  40a3d4:	mov    ebx,0x1dfff0d5
  40a3d9:	jmp    0x15c17700
  40a3de:	faddp  st(7),st
  40a3e0:	test   eax,0x910e3293
  40a3e5:	mov    ch,0x44
  40a3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3e8:	inc    ecx
  40a3e9:	cld    
  40a3ea:	ja     0x40a370
  40a3ec:	je     0x40a443
  40a3ee:	jne    0x40a3f8
  40a3f0:	mov    DWORD PTR [ebx-0x7a],ebx
  40a3f3:	jp     0x40a408
  40a3f5:	mov    esi,0xc79c31a1
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434687
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4345f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4345f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4345f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43470f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4345f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4345f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4346fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4346fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4346fb,edx
  40a477:	cmp    DWORD PTR ds:0x4346fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4346b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4349a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4346fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43464b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434693,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434653,0x43464f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434677,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434677,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434703,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4346cb,0x43467b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43464f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43464f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4345f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4345fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4346fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434717
  40a564:	mov    edx,DWORD PTR ds:0x434727
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43463f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43463f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43463f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43463f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43463f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43463f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43463f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43463f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43467f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434637,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43464b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43464b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43464b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43464b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43464b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4346c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43463f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4346bf
  40a648:	add    DWORD PTR ds:0x434713,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43467f,0x434707
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	xchg   ebp,eax
  40a66d:	gs clc 
  40a66f:	jnp    0x40a66b
  40a671:	bnd jle 0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	out    0x12,al
  40a67a:	bound  esp,QWORD PTR [edx-0x5]
  40a67d:	les    esi,FWORD PTR [edx-0x4444e125]
  40a683:	mov    DWORD PTR [ebp+0xba9b9ba],ecx
  40a689:	test   esp,0x91c00578
  40a68f:	sub    BYTE PTR [edx],0x4e
  40a692:	lea    eax,[esi-0x63]
  40a695:	adc    edx,DWORD PTR [ebp+0x614f4622]
  40a69b:	or     BYTE PTR [esi],dh
  40a69d:	(bad)  
  40a69e:	es ds test eax,0x843e69ea
  40a6a5:	push   ss
  40a6a6:	shl    BYTE PTR [ebx+ebp*4-0x5d1bccd8],cl
  40a6ad:	repz cmp BYTE PTR ds:0x8e8f6128,dh
  40a6b4:	mov    dl,bl
  40a6b6:	mov    edi,0xf05c0365
  40a6bb:	retf   0xa2e1
  40a6be:	lock loope 0x40a683
  40a6c1:	imul   BYTE PTR [ecx]
  40a6c3:	ss mov edx,0xd25ea550
  40a6c9:	ins    DWORD PTR es:[edi],dx
  40a6ca:	xchg   ecx,eax
  40a6cb:	add    BYTE PTR ds:0x8467cbe,0xc1
  40a6d2:	mov    bl,0x1d
  40a6d4:	cmc    
  40a6d5:	xchg   edi,eax
  40a6d6:	das    
  40a6d7:	or     BYTE PTR [ebp+eax*8+0x6c36ca7a],dl
  40a6de:	xchg   BYTE PTR [edx-0x12],bh
  40a6e1:	xchg   ebx,eax
  40a6e2:	outs   dx,DWORD PTR ds:[esi]
  40a6e3:	gs popa 
  40a6e5:	sub    eax,0xbaa7deff
  40a6ea:	or     DWORD PTR [ebp+0x77c0102d],0x24
  40a6f1:	das    
  40a6f2:	add    bl,dh
  40a6f4:	cdq    
  40a6f5:	xchg   esi,eax
  40a6f6:	(bad)  
  40a6f7:	mov    WORD PTR [ebp-0x7b],es
  40a6fa:	ss in  eax,0xc
  40a6fd:	sbb    DWORD PTR [ebx+ebx*4],eax
  40a700:	es mov dl,0x9a
  40a703:	add    esp,DWORD PTR [esi+esi*2]
  40a706:	and    BYTE PTR [edx+0x32],al
  40a709:	cdq    
  40a70a:	jmp    0x40a70f
  40a70c:	icebp  
  40a70d:	adc    BYTE PTR [ebx],dh
  40a70f:	add    BYTE PTR [edi],al
  40a711:	xor    ch,BYTE PTR [esi]
  40a713:	and    edi,ebp
  40a715:	mov    eax,ds:0xf2cb4282
  40a71a:	jg     0x40a6b2
  40a71c:	inc    ebx
  40a71d:	daa    
  40a71e:	jecxz  0x40a77b
  40a720:	jo     0x40a707
  40a722:	mov    esi,0x284481d2
  40a727:	jns    0x40a6b1
  40a729:	imul   ecx,DWORD PTR [eax+0x2c],0x1a
  40a72d:	inc    esp
  40a72e:	test   DWORD PTR [ebx+ebx*4+0x2a],edi
  40a732:	ins    DWORD PTR es:[edi],dx
  40a733:	mov    esp,0x5a0e96f4
  40a738:	das    
  40a739:	daa    
  40a73a:	(bad)  
  40a73b:	sbb    esp,DWORD PTR [esp+ebx*4]
  40a73e:	sbb    DWORD PTR [eax-0x16],ecx
  40a741:	push   ecx
  40a742:	pop    esp
  40a743:	jno    0x40a726
  40a745:	inc    ebx
  40a746:	mov    ds:0x1aed996,al
  40a74b:	retf   0x193a
  40a74e:	xor    BYTE PTR [ecx+0x651a1ed3],bl
  40a754:	nop
  40a755:	inc    ebx
  40a756:	mov    dh,BYTE PTR [ebp-0x22b5e7d8]
  40a75c:	jp     0x40a7d9
  40a75e:	imul   edx,DWORD PTR [esi-0xcc84788],0x2085a4fb
  40a768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a769:	push   esi
  40a76a:	mov    al,0xe4
  40a76c:	(bad)  
  40a76d:	xlat   BYTE PTR ds:[ebx]
  40a76e:	(bad)  
  40a76f:	push   0xffffffc2
  40a771:	add    dh,BYTE PTR [esi+0x7]
  40a774:	ret    
  40a775:	sub    al,0x54
  40a777:	xor    eax,0x464b97f1
  40a77c:	call   0x7d2d971c
  40a781:	call   0xa64f0733
  40a786:	add    al,0x83
  40a788:	ins    DWORD PTR es:[edi],dx
  40a789:	dec    ecx
  40a78a:	sbb    BYTE PTR [edx],dl
  40a78c:	add    edi,ecx
  40a78e:	cli    
  40a78f:	xchg   edi,eax
  40a790:	and    esp,ebp
  40a792:	ret    
  40a793:	stos   DWORD PTR es:[edi],eax
  40a794:	cmp    al,0xe2
  40a796:	cmp    eax,0x27885154
  40a79b:	push   0xffffffec
  40a79d:	cld    
  40a79e:	sar    ebp,cl
  40a7a0:	adc    al,0xfc
  40a7a2:	pop    ds
  40a7a3:	out    0x6f,al
  40a7a5:	nop
  40a7a6:	sub    DWORD PTR [ecx-0x5c],0x67cf0572
  40a7ad:	pop    ecx
  40a7ae:	push   ds
  40a7af:	add    bl,0x1e
  40a7b2:	ja     0x40a748
  40a7b4:	(bad)  [ebp+eax*4-0x15]
  40a7b8:	stos   DWORD PTR es:[edi],eax
  40a7b9:	cmp    eax,0x975e4c30
  40a7be:	inc    edi
  40a7bf:	(bad)  
  40a7c1:	or     BYTE PTR [ecx-0x7b],ah
  40a7c4:	arpl   si,ax
  40a7c6:	xor    DWORD PTR [eax+0x63],0xf3d015c9
  40a7cd:	inc    esi
  40a7ce:	aaa    
  40a7cf:	or     DWORD PTR ss:0xd9e9baf5,ecx
  40a7d6:	jmp    0x40a7cd
  40a7d8:	pop    es
  40a7d9:	fadd   QWORD PTR [ecx]
  40a7db:	sahf   
  40a7dc:	jo     0x40a781
  40a7de:	cmp    eax,DWORD PTR [edi+0x6ee11b59]
  40a7e4:	iret   
  40a7e5:	shl    al,1
  40a7e7:	sbb    al,0x4d
  40a7e9:	jns    0x40a7de
  40a7eb:	fidiv  WORD PTR [ebp-0x14a5d6db]
  40a7f1:	pop    es
  40a7f2:	ds sub ebx,ebp
  40a7f5:	cmc    
  40a7f6:	mov    bl,al
  40a7f8:	inc    eax
  40a7f9:	jno    0x40a7f9
  40a7fb:	dec    DWORD PTR [eax-0x6e]
  40a7fe:	leave  
  40a7ff:	ss mov ebp,0x55e90cc
  40a805:	shl    esi,0x2e
  40a808:	xchg   BYTE PTR [eax-0x2a5f9160],bl
  40a80e:	clc    
  40a80f:	xor    eax,DWORD PTR [ecx+eiz*1]
  40a812:	cmp    BYTE PTR [edx+0x30],bl
  40a815:	lahf   
  40a816:	mov    eax,ds:0x9960c0d4
  40a81b:	or     DWORD PTR [edi],esi
  40a81d:	out    dx,eax
  40a81e:	mov    eax,ds:0xb26c336b
  40a823:	in     al,0xfd
  40a825:	pop    es
  40a826:	clc    
  40a827:	loopne 0x40a865
  40a829:	scas   eax,DWORD PTR es:[edi]
  40a82a:	mov    eax,0x41b62bdc
  40a82f:	js     0x40a7d9
  40a831:	int3   
  40a832:	pop    ebp
  40a833:	out    dx,al
  40a834:	push   edi
  40a835:	mov    WORD PTR [ecx-0x3b0f4521],fs
  40a83b:	pop    ecx
  40a83c:	rol    DWORD PTR [ebp+esi*8+0x69504d7a],0x5
  40a844:	jno    0x40a81c
  40a846:	test   eax,0x87dec712
  40a84b:	inc    esi
  40a84c:	push   ds
  40a84d:	or     al,0x5c
  40a84f:	lea    eax,[esi]
  40a851:	fisubr DWORD PTR [edx-0x29]
  40a854:	inc    ebp
  40a855:	inc    esi
  40a856:	jae    0x40a8a5
  40a858:	ss jmp 0x73c4:0x5352355b
  40a860:	stos   BYTE PTR es:[edi],al
  40a861:	mov    al,ds:0x78cb69b0
  40a866:	or     eax,0x9bb92979
  40a86b:	aaa    
  40a86c:	cs add al,0x9c
  40a86f:	jge    0x40a8c3
  40a871:	or     ebx,DWORD PTR [edx+edx*4-0xf1df3d9]
  40a878:	add    al,0xd2
  40a87a:	and    al,0x4b
  40a87c:	adc    DWORD PTR [eax+ebp*4-0x59401221],0xffffffea
  40a884:	cdq    
  40a885:	retf   
  40a886:	into   
  40a887:	test   BYTE PTR [eax],al
  40a889:	or     ebp,esi
  40a88b:	cmp    dl,BYTE PTR [edx+edi*1+0x98195ce]
  40a892:	js     0x40a8b9
  40a894:	ds jp  0x40a885
  40a897:	leave  
  40a898:	mul    DWORD PTR [eax-0x40ebbbd]
  40a89e:	mov    ch,0x9b
  40a8a0:	sub    esp,DWORD PTR [esi-0x67]
  40a8a3:	fcomp  DWORD PTR [edx]
  40a8a5:	jmp    0xd7616104
  40a8aa:	mov    ch,0x9c
  40a8ac:	xor    DWORD PTR [eax+0x6a],esp
  40a8af:	(bad)  
  40a8b0:	shl    DWORD PTR [eiz*2+0x20286dc],cl
  40a8b7:	imul   eax,DWORD PTR [ebp+0x2d],0xffffffab
  40a8bb:	sub    eax,DWORD PTR [ebx+0x3ec4ac75]
  40a8c1:	mov    dl,0x9b
  40a8c3:	and    ah,BYTE PTR [esp+eiz*4]
  40a8c6:	mov    ch,BYTE PTR [esi]
  40a8c8:	mov    ds:0x1cae5626,eax
  40a8cd:	push   ds
  40a8ce:	ror    DWORD PTR [esp+esi*4],1
  40a8d1:	mov    ah,al
  40a8d3:	in     al,0x56
  40a8d5:	adc    eax,DWORD PTR [ebp-0x4d]
  40a8d8:	push   ebx
  40a8d9:	les    edi,FWORD PTR [ebx-0xb]
  40a8dc:	jle    0x40a941
  40a8de:	les    ebp,FWORD PTR [ebx+0x4e]
  40a8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8e2:	add    ah,ah
  40a8e4:	popf   
  40a8e5:	mov    WORD PTR [ebx],ds
  40a8e7:	ror    BYTE PTR [edx-0x4a],1
  40a8ea:	sbb    BYTE PTR [ebp+0x13],dh
  40a8ed:	mov    ah,0x4b
  40a8ef:	mov    ebx,0xc87602cb
  40a8f4:	xor    BYTE PTR [ebx+0x67],cl
  40a8f7:	aas    
  40a8f8:	mov    esp,0x11aabf3e
  40a8fd:	jno    0x40a8d9
  40a8ff:	scas   eax,DWORD PTR es:[edi]
  40a900:	popf   
  40a901:	enter  0x83eb,0x22
  40a905:	fs cdq 
  40a907:	ss ret 0x9c7e
  40a90b:	sti    
  40a90c:	ss push ecx
  40a90e:	inc    edi
  40a90f:	adc    DWORD PTR [edx],ebx
  40a911:	and    eax,DWORD PTR [ebx+0x616e85eb]
  40a917:	dec    edi
  40a918:	mov    edi,edx
  40a91a:	mov    ebp,0x4149d077
  40a91f:	adc    DWORD PTR [ecx-0x24227c75],0x4c
  40a926:	popa   
  40a927:	pand   mm4,QWORD PTR fs:[ecx-0x742a00c9]
  40a92f:	pop    eax
  40a930:	or     BYTE PTR [ebx-0x45],bl
  40a933:	xor    cl,bh
  40a935:	lea    edi,[ebx]
  40a937:	adc    eax,0x758311fd
  40a93c:	out    0xb1,al
  40a93e:	(bad)  
  40a93f:	pop    eax
  40a940:	add    DWORD PTR [eax],ebx
  40a942:	dec    esi
  40a943:	imul   esi,DWORD PTR [eax-0x5263be02],0xffffffd3
  40a94a:	lods   eax,DWORD PTR ds:[esi]
  40a94b:	add    al,0x67
  40a94d:	arpl   WORD PTR [ebx],di
  40a94f:	cwde   
  40a950:	popf   
  40a951:	jmp    0x29f0e4a5
  40a956:	test   DWORD PTR [ebx+0x29],0xe96d01f0
  40a95d:	push   ecx
  40a95e:	and    ecx,0xf7a9ff64
  40a964:	nop
  40a965:	pop    ebp
  40a966:	pop    ds
  40a967:	fdivr  QWORD PTR [edx]
  40a969:	xor    BYTE PTR [esi],ah
  40a96b:	repz mov eax,0x8d16de9f
  40a971:	ins    DWORD PTR es:[edi],dx
  40a972:	mov    esi,0x75034ed0
  40a977:	sub    DWORD PTR [ecx],ecx
  40a979:	mov    DWORD PTR [esi],ebp
  40a97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a97c:	cmp    DWORD PTR [edi-0x40],eax
  40a97f:	int3   
  40a980:	mov    ds:0x1a13d014,al
  40a985:	icebp  
  40a986:	shld   DWORD PTR cs:[ebp+0x10],ebx,cl
  40a98b:	aad    0x5e
  40a98d:	pop    eax
  40a98e:	aas    
  40a98f:	ret    
  40a990:	add    eax,DWORD PTR [edx-0x4f]
  40a993:	jl     0x40a935
  40a995:	xchg   ebp,eax
  40a996:	gs xchg ebx,eax
  40a998:	or     bh,dl
  40a99a:	(bad)  
  40a99c:	adc    DWORD PTR [ebp+0x539018d8],ecx
  40a9a2:	pop    es
  40a9a3:	das    
  40a9a4:	enter  0xcd6d,0x56
  40a9a8:	jne    0x40aa0d
  40a9aa:	frstor [eax+0x2d]
  40a9ad:	fiadd  DWORD PTR [edx+0x19]
  40a9b0:	popf   
  40a9b1:	mov    ch,0x7
  40a9b3:	test   DWORD PTR [edi-0x613f5f89],edi
  40a9b9:	stos   BYTE PTR es:[edi],al
  40a9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9bb:	push   edi
  40a9bc:	adc    BYTE PTR [ebp+0x13592b6b],ah
  40a9c2:	mov    ebx,0xcdb4f177
  40a9c7:	loope  0x40aa1c
  40a9c9:	jmp    0xa008791e
  40a9ce:	pop    ebp
  40a9cf:	or     esp,DWORD PTR [eax]
  40a9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d2:	popf   
  40a9d3:	mov    WORD PTR [eax+0x4a138adf],es
  40a9d9:	xor    edi,DWORD PTR [eax-0x69]
  40a9dc:	pop    esp
  40a9dd:	push   edi
  40a9de:	jo     0x40a992
  40a9e0:	mov    DWORD PTR [edi+0x3ffcc159],eax
  40a9e6:	call   0x4f113d24
  40a9eb:	rcr    eax,cl
  40a9ed:	inc    esp
  40a9ee:	inc    esp
  40a9ef:	aas    
  40a9f0:	dec    esp
  40a9f2:	pop    ss
  40a9f3:	and    al,ah
  40a9f5:	int3   
  40a9f6:	adc    BYTE PTR [ebx],ah
  40a9f8:	xchg   ecx,eax
  40a9f9:	sub    BYTE PTR [esp+eax*1-0x75b23ccb],0xe4
  40aa01:	shr    ch,1
  40aa03:	inc    esi
  40aa04:	push   ds
  40aa05:	and    eax,0x827a39c8
  40aa0a:	push   esp
  40aa0b:	or     DWORD PTR [ebp+0x51182aa2],0x7d02baa1
  40aa15:	jb     0x40aa8e
  40aa17:	ret    
  40aa18:	lods   al,BYTE PTR ds:[esi]
  40aa19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa1a:	neg    DWORD PTR [ebp-0x6b]
  40aa1d:	adc    al,ch
  40aa1f:	aad    0xcd
  40aa21:	shl    BYTE PTR [edi],0x3a
  40aa24:	push   eax
  40aa25:	call   0xfa5b:0x10806b04
  40aa2c:	adc    eax,0xd61b014e
  40aa31:	inc    esi
  40aa32:	push   ds
  40aa33:	mov    dl,BYTE PTR [eax]
  40aa35:	mov    ebx,0xa23174c
  40aa3a:	in     al,dx
  40aa3b:	shl    BYTE PTR [ebx-0x368666b6],1
  40aa41:	sbb    DWORD PTR [eax-0x472b9117],ecx
  40aa47:	ins    DWORD PTR es:[edi],dx
  40aa48:	in     eax,0x1d
  40aa4a:	adc    DWORD PTR [edi+0x6c],0x929f54b9
  40aa51:	call   0x4cd28993
  40aa56:	jmp    0x4187:0x75758eb4
  40aa5d:	ret    
  40aa5e:	in     eax,dx
  40aa5f:	shl    DWORD PTR [ebp-0x36],0x2
  40aa63:	xchg   DWORD PTR [ebp-0x285036af],esp
  40aa69:	cmc    
  40aa6a:	pop    esp
  40aa6b:	mov    ch,0x78
  40aa6d:	shl    DWORD PTR cs:[ecx+eax*4-0x7e2fccbf],1
  40aa75:	adc    eax,0x434653
  40aa7a:	jg     0x40aac2
  40aa7c:	inc    ebx
  40aa7d:	add    BYTE PTR [ebx],al
  40aa7f:	shr    ecx,1
  40aa81:	jno    0x40aa9d
  40aa83:	add    BYTE PTR [eax],al
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4345f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4346fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43470b
  40aaa1:	mov    DWORD PTR ds:0x4346fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4346bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	dec    ebp
  40aacb:	and    DWORD PTR [edx],0xffffff97
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	ret    0xea04
  40aad9:	jle    0x40aa86
  40aadb:	leave  
  40aadc:	sub    eax,0xc39e3686
  40aae1:	in     eax,0xb6
  40aae3:	ins    DWORD PTR es:[edi],dx
  40aae4:	mov    eax,ds:0x2396c754
  40aae9:	imul   ebp
  40aaeb:	jae    0x40aabc
  40aaed:	sahf   
  40aaee:	and    esi,DWORD PTR [esi-0x20b24a84]
  40aaf4:	jnp    0x40ab74
  40aaf6:	shr    BYTE PTR [ebx-0x705c328e],0x3f
  40aafd:	ins    DWORD PTR es:[edi],dx
  40aafe:	test   BYTE PTR [edi-0x1bbfc221],cl
  40ab04:	and    al,0x31
  40ab06:	inc    edi
  40ab07:	add    eax,esp
  40ab09:	sbb    edx,DWORD PTR [ecx+0x73]
  40ab0c:	or     al,0x93
  40ab0e:	mov    BYTE PTR [ebx],0x95
  40ab11:	jle    0x40aae9
  40ab13:	outs   dx,DWORD PTR ds:[esi]
  40ab14:	call   0x4aea7dd2
  40ab19:	pop    esp
  40ab1a:	mov    dh,0x4f
  40ab1c:	fbstp  TBYTE PTR [ecx-0x4c65b2ea]
  40ab22:	cmp    DWORD PTR [edi+ebp*2],0xffffffdb
  40ab26:	jmp    0x5d78:0x2740c8bf
  40ab2d:	out    0x7d,eax
  40ab2f:	and    DWORD PTR [eax-0x36],esp
  40ab32:	sub    DWORD PTR [eax+0x70cf8d9a],eax
  40ab38:	push   eax
  40ab39:	aam    0x6a
  40ab3b:	scas   eax,DWORD PTR es:[edi]
  40ab3c:	mov    edi,0x9299e14b
  40ab41:	mov    es,WORD PTR [ebp+0x2002620b]
  40ab47:	jg     0x40ab61
  40ab49:	popa   
  40ab4a:	push   ds
  40ab4b:	mov    edi,0x1f36fe1b
  40ab50:	enter  0xe402,0xc6
  40ab54:	hlt    
  40ab55:	dec    edi
  40ab56:	and    BYTE PTR [esi],dh
  40ab58:	push   edx
  40ab59:	pop    edx
  40ab5a:	mov    ebp,0x3bce8b9a
  40ab5f:	sar    DWORD PTR [ebx],1
  40ab61:	dec    esi
  40ab62:	dec    eax
  40ab63:	xchg   ebp,eax
  40ab64:	imul   DWORD PTR ds:0xf1d499f3
  40ab6a:	pop    ss
  40ab6b:	pusha  
  40ab6c:	push   ds
  40ab6d:	add    edi,eax
  40ab6f:	lock push esp
  40ab71:	fidiv  WORD PTR [esi+0x656164a2]
  40ab77:	retf   0x6171
  40ab7a:	push   edx
  40ab7b:	xchg   ebp,ebx
  40ab7d:	enter  0x6298,0x4
  40ab81:	inc    ecx
  40ab82:	icebp  
  40ab83:	cmp    BYTE PTR [ecx],ah
  40ab85:	pop    esp
  40ab86:	out    0xcf,eax
  40ab88:	fdivr  QWORD PTR [edi]
  40ab8a:	loopne 0x40ac03
  40ab8c:	mov    ch,0x6c
  40ab8e:	push   esp
  40ab8f:	mov    WORD PTR [edi+eiz*1+0x41],ss
  40ab93:	ds iret 
  40ab95:	mov    ds:0x87817cc9,al
  40ab9a:	mov    edi,0x63b001c6
  40ab9f:	cmp    dh,bl
  40aba1:	adc    DWORD PTR [esi+0x361ca5b0],ebp
  40aba7:	cmp    DWORD PTR [eax-0x27],eax
  40abaa:	and    bl,bl
  40abac:	jns    0x40abd0
  40abae:	and    DWORD PTR [esi+ebx*1],esp
  40abb1:	pop    ss
  40abb2:	cmp    eax,0x842f4565
  40abb7:	jns    0x40abcb
  40abb9:	out    dx,eax
  40abba:	cld    
  40abbb:	outs   dx,DWORD PTR ds:[esi]
  40abbc:	enter  0x9207,0xeb
  40abc0:	inc    eax
  40abc1:	adc    al,0x2c
  40abc3:	frndint 
  40abc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc6:	sbb    al,0x8f
  40abc8:	cs int 0x4e
  40abcb:	mov    al,ds:0xe1a8fcfa
  40abd0:	les    ebx,FWORD PTR [edi+0x12136140]
  40abd6:	arpl   WORD PTR [edi+esi*2],bx
  40abd9:	ins    DWORD PTR es:[edi],dx
  40abda:	out    0xa8,al
  40abdc:	fist   WORD PTR [edx-0x58]
  40abdf:	push   0x49469983
  40abe4:	inc    eax
  40abe5:	fist   DWORD PTR [ebp+0x517031e5]
  40abeb:	push   edx
  40abec:	adc    BYTE PTR [esp+edx*4-0x701e55e5],dl
  40abf3:	pushf  
  40abf4:	xchg   BYTE PTR [edx+0x2],al
  40abf7:	retf   
  40abf8:	fst    st(0)
  40abfa:	fs aas 
  40abfc:	cmp    al,BYTE PTR [esi]
  40abfe:	mov    bl,0xf7
  40ac00:	mov    eax,0x3aa922f9
  40ac05:	aaa    
  40ac06:	mov    eax,ebp
  40ac08:	pusha  
  40ac09:	inc    esp
  40ac0a:	sbb    eax,DWORD PTR [ebp+0x538d73aa]
  40ac10:	in     eax,dx
  40ac11:	sbb    eax,0x2cddc0ee
  40ac16:	adc    BYTE PTR [ebp+0x6e],dh
  40ac19:	add    BYTE PTR [ecx-0x3a],bl
  40ac1c:	adc    ebp,DWORD PTR [esp+edi*2-0x4fbdbc01]
  40ac23:	lods   eax,DWORD PTR ds:[esi]
  40ac24:	(bad)  
  40ac25:	pusha  
  40ac26:	jmp    0x41d4b849
  40ac2b:	mov    ds:0x8dad0310,eax
  40ac30:	data16 or al,al
  40ac33:	push   eax
  40ac34:	pop    ebx
  40ac35:	ins    BYTE PTR es:[edi],dx
  40ac36:	stos   BYTE PTR es:[edi],al
  40ac37:	push   0xe1c6d34c
  40ac3c:	fs add al,0x4
  40ac3f:	rcr    BYTE PTR [edi+0x2b],0xc1
  40ac43:	pop    ecx
  40ac44:	shl    ebx,0x7a
  40ac47:	sub    DWORD PTR [edx-0x54],0xfffffff8
  40ac4b:	xchg   ecx,eax
  40ac4c:	jb     0x40ac2e
  40ac4e:	dec    edi
  40ac4f:	ret    
  40ac50:	int3   
  40ac51:	cmp    bh,al
  40ac53:	sub    esi,DWORD PTR [edi]
  40ac55:	add    ah,0xd
  40ac58:	mov    esp,0xd7f24eb
  40ac5d:	call   0x9683a2ea
  40ac62:	xchg   edi,eax
  40ac63:	cmp    DWORD PTR [edx+0x27df794e],esi
  40ac69:	adc    dh,BYTE PTR [ebp+esi*2+0x22031803]
  40ac70:	dec    esp
  40ac71:	add    al,dl
  40ac73:	call   0xe397:0x3ce9398
  40ac7a:	addr16 xchg ebp,eax
  40ac7c:	cmp    eax,DWORD PTR [ebp-0x1cb9845b]
  40ac82:	ins    DWORD PTR es:[edi],dx
  40ac83:	xlat   BYTE PTR ds:[ebx]
  40ac84:	sbb    BYTE PTR [edi],dh
  40ac86:	adc    ebx,DWORD PTR [ebx+ecx*8-0x42dd918]
  40ac8d:	sub    ebx,0xffffff8e
  40ac90:	jge    0x40ac20
  40ac92:	fstp   TBYTE PTR [edi]
  40ac94:	cdq    
  40ac95:	das    
  40ac96:	jns    0x40ac18
  40ac98:	cwde   
  40ac99:	jg     0x40ac2b
  40ac9b:	sub    BYTE PTR [esi],cl
  40ac9d:	jl     0x40ac28
  40ac9f:	fcmovb st,st(7)
  40aca1:	xor    esi,edi
  40aca3:	scas   eax,DWORD PTR es:[edi]
  40aca4:	in     al,dx
  40aca5:	in     eax,0x25
  40aca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca8:	pop    es
  40aca9:	or     cl,BYTE PTR [ebx-0x1d]
  40acac:	idiv   esi
  40acae:	mov    WORD PTR [edx-0x210741c7],cs
  40acb4:	or     ecx,DWORD PTR [edx]
  40acb6:	ins    BYTE PTR es:[edi],dx
  40acb7:	in     eax,dx
  40acb8:	xor    DWORD PTR [edx],ebp
  40acba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acbb:	lods   al,BYTE PTR ds:[esi]
  40acbc:	pop    ecx
  40acbd:	pand   mm5,mm2
  40acc0:	or     al,0x14
  40acc2:	mov    esi,ss
  40acc4:	icebp  
  40acc5:	in     al,0x2a
  40acc7:	loope  0x40acd3
  40acc9:	imul   edx,DWORD PTR [eax-0x71],0xffffffa1
  40accd:	or     eax,0xeb4574ff
  40acd2:	push   cs
  40acd3:	out    0x93,eax
  40acd5:	xor    bh,BYTE PTR [edx-0x2c9481f]
  40acdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acdc:	inc    edx
  40acdd:	cmp    DWORD PTR [ecx-0x7d],esp
  40ace0:	inc    edi
  40ace1:	mov    BYTE PTR [ebx+0x74852dc1],ah
  40ace7:	icebp  
  40ace8:	sub    al,0x37
  40acea:	jecxz  0x40accc
  40acec:	idiv   bh
  40acee:	adc    ah,BYTE PTR [ecx-0x5036ae25]
  40acf4:	adc    ecx,0xf456bbc9
  40acfa:	retf   
  40acfb:	mov    esi,0xbc85bdac
  40ad00:	add    BYTE PTR [ebp+0x3d],bh
  40ad03:	sbb    cl,dl
  40ad05:	test   al,0x35
  40ad07:	adc    dh,0x95
  40ad0a:	xor    bl,ch
  40ad0c:	mov    ebp,0x79adf1dd
  40ad11:	scas   al,BYTE PTR es:[edi]
  40ad12:	pop    esi
  40ad13:	imul   dh
  40ad15:	cs (bad) 
  40ad17:	hlt    
  40ad18:	arpl   cx,cx
  40ad1a:	mov    ch,0xbe
  40ad1c:	inc    eax
  40ad1d:	popf   
  40ad1e:	out    0x66,eax
  40ad20:	scas   al,BYTE PTR es:[edi]
  40ad21:	jp     0x40ad5a
  40ad23:	jg     0x40ad7b
  40ad25:	imul   ebx,DWORD PTR [edx],0x32
  40ad28:	push   cs
  40ad29:	leave  
  40ad2a:	loop   0x40ad05
  40ad2c:	mov    ds:0x6b09e3f2,eax
  40ad31:	xor    esp,esi
  40ad33:	stos   BYTE PTR es:[edi],al
  40ad34:	sub    edi,DWORD PTR [edi+ebp*4]
  40ad37:	xchg   ebx,eax
  40ad38:	xlat   BYTE PTR ds:[ebx]
  40ad39:	pushf  
  40ad3a:	and    eax,0xfd0159e8
  40ad3f:	or     eax,0x12836b9f
  40ad44:	aad    0x53
  40ad46:	jne    0x40ad61
  40ad48:	xor    al,al
  40ad4a:	mov    ah,0xfc
  40ad4c:	pop    es
  40ad4d:	ficom  DWORD PTR [edx+0x226f41e4]
  40ad53:	jbe    0x40add0
  40ad55:	sbb    eax,0xaeaf1418
  40ad5a:	mov    al,ds:0x66b3d58e
  40ad5f:	dec    DWORD PTR [edi]
  40ad61:	div    BYTE PTR [eax+ebp*8-0x8]
  40ad65:	(bad)  
  40ad66:	jge    0x40addb
  40ad68:	out    0x3,eax
  40ad6a:	jns    0x40ad06
  40ad6c:	inc    esi
  40ad6d:	loope  0x40adb0
  40ad6f:	sbb    DWORD PTR [esi-0x5c],edx
  40ad72:	cmp    eax,0x3adc1925
  40ad77:	pushf  
  40ad78:	cmc    
  40ad79:	inc    ebp
  40ad7a:	sbb    ebx,ecx
  40ad7c:	push   ds
  40ad7d:	pop    edx
  40ad7e:	jl     0x40add3
  40ad80:	leave  
  40ad81:	lea    ecx,[edx+0x2867e770]
  40ad87:	fadd   DWORD PTR [eax+0x57]
  40ad8a:	jg     0x40ade3
  40ad8c:	sub    dl,bl
  40ad8e:	xchg   BYTE PTR [edx+0x5b7e945f],cl
  40ad94:	mov    al,0x52
  40ad96:	jle    0x40ad86
  40ad98:	retf   0x25f
  40ad9b:	sbb    DWORD PTR [ebp-0x2],0x5e
  40ad9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada0:	lock mov BYTE PTR [edx],dh
  40ada3:	imul   BYTE PTR [esi+0x9]
  40ada6:	lds    ebx,FWORD PTR [ebp-0x2f]
  40ada9:	inc    esi
  40adaa:	add    BYTE PTR [eax-0x41fa7dac],0x64
  40adb1:	sbb    BYTE PTR [ecx+0x712c213b],dl
  40adb7:	ds mov ecx,ecx
  40adba:	mov    ebp,0x1d3381de
  40adbf:	mov    esp,0x5d9276b7
  40adc4:	adc    DWORD PTR [esi],ebp
  40adc6:	add    ebx,ebx
  40adc8:	mov    eax,ds:0x5b428e61
  40adcd:	iret   
  40adce:	test   edi,0xe706b5f1
  40add4:	push   0x36
  40add6:	lods   al,BYTE PTR ds:[esi]
  40add7:	aam    0x16
  40add9:	sub    eax,0x7a5a432c
  40adde:	pop    ss
  40addf:	xor    ecx,DWORD PTR [esi+0x46f15ae3]
  40ade5:	mov    al,0xb9
  40ade7:	std    
  40ade8:	pop    DWORD PTR [eax-0x5d]
  40adeb:	dec    ebp
  40adec:	mov    eax,DWORD PTR [eax+0x70eb6caf]
  40adf2:	push   es
  40adf3:	in     eax,0x40
  40adf5:	les    ecx,FWORD PTR [esi-0x55]
  40adf8:	mov    bh,0xef
  40adfa:	adc    eax,0x3cdd0df8
  40ae00:	cmp    ebp,DWORD PTR [ebp+eiz*2+0x3b]
  40ae04:	push   eax
  40ae05:	jae    0x40ae66
  40ae07:	pusha  
  40ae08:	add    eax,0xf5054a6c
  40ae0d:	jae    0x40adc1
  40ae0f:	cmp    BYTE PTR [ecx],cl
  40ae11:	xchg   ecx,eax
  40ae12:	test   eax,0x15bc8d1
  40ae17:	jno    0x40ae6c
  40ae19:	imul   edi,DWORD PTR [ebx+edx*1-0x77],0x4c
  40ae1e:	sub    eax,0x4f0e99ba
  40ae23:	not    ebp
  40ae25:	adc    eax,0x1ba9114
  40ae2a:	imul   DWORD PTR [ecx+ecx*1+0x5e]
  40ae2e:	stc    
  40ae2f:	clc    
  40ae30:	xchg   DWORD PTR [eax-0xcfe832],ebx
  40ae36:	sbb    BYTE PTR [ebp+0x7ce38ba5],ah
  40ae3c:	inc    bl
  40ae3e:	es dec eax
  40ae40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae41:	mov    BYTE PTR [esi+0xbc87d18],bh
  40ae47:	sub    esi,0x51bf74b7
  40ae4d:	in     eax,dx
  40ae4e:	mov    esp,0xb63531c0
  40ae53:	stos   DWORD PTR es:[edi],eax
  40ae54:	les    ebx,FWORD PTR [eax+0x117e996c]
  40ae5a:	pop    ds
  40ae5b:	lods   al,BYTE PTR ds:[esi]
  40ae5c:	or     al,0x24
  40ae5e:	(bad)  
  40ae5f:	loopne 0x40ae3e
  40ae61:	and    eax,DWORD PTR ds:0x4a97152a
  40ae67:	and    al,0x20
  40ae69:	cli    
  40ae6a:	mov    edi,0x36a143e0
  40ae6f:	jmp    0x258dcc32
  40ae74:	dec    ebp
  40ae75:	sbb    al,0x29
  40ae77:	push   ebp
  40ae78:	jne    0x40ae5c
  40ae7a:	jns    0x40ae60
  40ae7c:	dec    ebp
  40ae7d:	sbb    dl,bl
  40ae7f:	(bad)  
  40ae81:	mov    ebp,0x8c1cc29a
  40ae86:	imul   esp,DWORD PTR [eax+0x287f16db],0x37
  40ae8d:	pop    ebx
  40ae8e:	test   DWORD PTR [edx],esi
  40ae90:	pop    esp
  40ae91:	int    0x8c
  40ae93:	push   0x69
  40ae95:	inc    ebp
  40ae96:	jnp    0x40aede
  40ae98:	nop
  40ae99:	cmp    BYTE PTR [edi],ah
  40ae9b:	jmp    0x40ae40
  40ae9d:	ja     0x40af14
  40ae9f:	adc    BYTE PTR [eax],dl
  40aea1:	ret    
  40aea2:	daa    
  40aea3:	das    
  40aea4:	out    0xb8,eax
  40aea6:	jae    0x40af11
  40aea8:	pop    esp
  40aea9:	mov    ah,0x3d
  40aeab:	out    dx,al
  40aeac:	fimul  WORD PTR [edx-0x75]
  40aeaf:	xchg   esp,ecx
  40aeb1:	mov    ebp,0x65576969
  40aeb6:	test   eax,0x288056d6
  40aebb:	lock jmp 0x655b:0x8ae750f2
  40aec3:	enter  0x15b3,0x96
  40aec7:	and    BYTE PTR gs:[ebx+ecx*1+0xf],bh
  40aecc:	das    
  40aecd:	(bad)  
  40aece:	jp     0x40ae6b
  40aed0:	add    edx,ecx
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x434653
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434647,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43463f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4346ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43468f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4345ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43463b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434647,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434647
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434647,ebx
  40af4d:	cmp    DWORD PTR ds:0x434647,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434647,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434677
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43468b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434713,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434713
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434713,ebx
  40afaa:	cmp    DWORD PTR ds:0x434713,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434713,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	sbb    ebx,ebx
  40affd:	fnstsw WORD PTR [ebp+0x7e7efaf6]
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	ret    
  40b008:	outs   dx,DWORD PTR ds:[esi]
  40b009:	sbb    al,0xbb
  40b00b:	push   edx
  40b00c:	mov    esp,0xaf6f7369
  40b011:	pop    edi
  40b012:	shr    ecx,0xdd
  40b015:	mov    bl,BYTE PTR [eax+0x50]
  40b018:	in     eax,0x6
  40b01a:	push   esp
  40b01b:	xchg   BYTE PTR [edx+0x18398a68],ch
  40b021:	pop    ebp
  40b022:	jmp    0x5ad405c4
  40b027:	or     al,0x23
  40b029:	push   esp
  40b02a:	(bad)  
  40b02b:	jg     0x40aff7
  40b02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02e:	cs lock jmp 0x40b08f
  40b032:	inc    edx
  40b033:	xchg   ebx,eax
  40b034:	xchg   BYTE PTR [esi+0x3b476a4b],cl
  40b03a:	(bad)  
  40b03b:	and    bl,BYTE PTR [esi+edx*1-0x42]
  40b03f:	outs   dx,BYTE PTR ds:[esi]
  40b040:	push   es
  40b041:	mov    dl,0x68
  40b043:	and    eax,0xca61dd7e
  40b048:	xlat   BYTE PTR ds:[ebx]
  40b049:	inc    eax
  40b04a:	push   cs
  40b04b:	dec    ecx
  40b04c:	push   edi
  40b04d:	(bad)  
  40b04e:	cmc    
  40b04f:	out    dx,al
  40b050:	add    BYTE PTR [esi],al
  40b052:	scas   eax,DWORD PTR es:[edi]
  40b053:	inc    edi
  40b054:	push   0x1a
  40b056:	adc    al,0x7b
  40b058:	mov    ds:0x59caf384,eax
  40b05d:	dec    ebx
  40b05e:	aaa    
  40b05f:	mov    edx,0x4d180174
  40b064:	jmp    0x213ce055
  40b069:	mov    ss,WORD PTR ds:0xa0477c58
  40b06f:	dec    ebx
  40b070:	mov    al,ds:0x3f13e5ff
  40b075:	into   
  40b076:	loope  0x40b03f
  40b078:	mov    esp,0x58c812ef
  40b07d:	(bad)  
  40b07e:	push   0xf647e9c3
  40b083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b084:	push   edi
  40b085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b086:	jge    0x40b095
  40b088:	iret   
  40b089:	dec    edi
  40b08a:	cs in  eax,0xab
  40b08d:	jecxz  0x40b082
  40b08f:	add    BYTE PTR cs:[edx],0x63
  40b093:	sub    DWORD PTR [edi+0x6f30a69a],esi
  40b099:	pop    es
  40b09a:	sub    eax,0xe66c76b7
  40b09f:	push   0x674045ad
  40b0a4:	and    DWORD PTR [eax+edi*2-0x77b1ce12],0x1e3c6e17
  40b0af:	aaa    
  40b0b0:	xchg   esi,eax
  40b0b1:	sbb    edx,esi
  40b0b3:	xchg   edx,eax
  40b0b4:	pop    es
  40b0b5:	dec    ebp
  40b0b6:	mov    eax,0x2e1de82c
  40b0bb:	push   es
  40b0bc:	gs nop
  40b0be:	stc    
  40b0bf:	ds mov ch,0x5c
  40b0c2:	or     al,0x4e
  40b0c4:	mov    cs,WORD PTR ss:[ebp-0x60a28221]
  40b0cb:	shr    BYTE PTR [ecx+0x7d],0x89
  40b0cf:	mov    ds:0x2bab8633,al
  40b0d4:	push   ebx
  40b0d5:	sbb    ah,BYTE PTR [edi-0x10db7226]
  40b0db:	cmp    BYTE PTR [edx],0x85
  40b0de:	pushf  
  40b0df:	stos   BYTE PTR es:[edi],al
  40b0e0:	mov    bl,0xaf
  40b0e2:	or     DWORD PTR [eax-0x48],esp
  40b0e5:	(bad)  
  40b0e6:	dec    eax
  40b0e7:	xor    DWORD PTR [edi],ecx
  40b0e9:	arpl   WORD PTR [ecx-0xc],di
  40b0ec:	adc    BYTE PTR [esi+esi*4],0x7b
  40b0f0:	xchg   edi,eax
  40b0f1:	outs   dx,DWORD PTR ds:[esi]
  40b0f2:	jnp    0x40b0c9
  40b0f4:	or     ch,BYTE PTR [ebp-0xd]
  40b0f7:	out    0xa1,eax
  40b0f9:	push   es
  40b0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0fb:	shr    dh,0x33
  40b0fe:	xlat   BYTE PTR ds:[ebx]
  40b0ff:	sbb    edx,DWORD PTR [esi]
  40b101:	jp     0x40b17f
  40b103:	or     DWORD PTR [edi],eax
  40b105:	mov    ecx,0xfcdd29c
  40b10a:	stc    
  40b10b:	inc    eax
  40b10c:	mov    ds:0x6cf64a0e,eax
  40b111:	push   eax
  40b112:	icebp  
  40b113:	shl    ah,0xb8
  40b116:	and    ebp,DWORD PTR [edi+0x71388016]
  40b11c:	frstor [ebp-0xf829608]
  40b122:	cwde   
  40b123:	in     eax,dx
  40b124:	jmp    0xe3e95c18
  40b129:	push   0xffffffee
  40b12b:	cmp    eax,0x9a649083
  40b130:	mov    dl,0x9b
  40b132:	not    DWORD PTR [eax+ecx*8-0x52c4de85]
  40b139:	add    al,0x85
  40b13b:	cmp    cl,ah
  40b13d:	dec    ebx
  40b13e:	jnp    0x40b13d
  40b140:	pop    eax
  40b141:	jb     0x40b1b3
  40b143:	mov    ds:0x1b6dd67c,al
  40b148:	clc    
  40b149:	outs   dx,BYTE PTR ds:[esi]
  40b14a:	cwde   
  40b14b:	push   ecx
  40b14c:	jl     0x40b120
  40b14e:	and    ch,bh
  40b150:	jle    0x40b173
  40b152:	sub    al,0x1a
  40b154:	cmp    BYTE PTR [ebp+0x44792e42],bl
  40b15a:	in     eax,dx
  40b15b:	test   BYTE PTR [edi+0x9],bl
  40b15e:	sbb    eax,0x2f76be3a
  40b163:	fsubr  QWORD PTR [ecx+0x37]
  40b166:	retf   
  40b167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b168:	and    al,BYTE PTR [edi-0xec53f30]
  40b16e:	cmp    esi,DWORD PTR ds:0xd7c2907
  40b174:	(bad)  
  40b175:	stc    
  40b176:	or     DWORD PTR ds:0x923ec186,ecx
  40b17c:	cwde   
  40b17d:	jecxz  0x40b1a9
  40b17f:	jnp    0x40b12f
  40b181:	and    eax,0xb5986724
  40b186:	es push esi
  40b188:	push   edx
  40b189:	jmp    0x5852:0xa35e9762
  40b190:	adc    eax,0x1f4ca96
  40b195:	lock das 
  40b197:	(bad)  gs:[esi]
  40b19a:	out    dx,eax
  40b19b:	dec    esi
  40b19c:	in     eax,0xbf
  40b19e:	(bad)  
  40b19f:	cwde   
  40b1a0:	push   cs
  40b1a1:	sub    BYTE PTR [eax-0xf12174e],dh
  40b1a7:	outs   dx,DWORD PTR ds:[esi]
  40b1a8:	xchg   edi,eax
  40b1a9:	sub    bl,ah
  40b1ab:	loope  0x40b151
  40b1ad:	and    esp,edi
  40b1af:	jmp    0x40b1ab
  40b1b1:	jl     0x40b139
  40b1b3:	fs ret 0x58ff
  40b1b7:	adc    DWORD PTR [ebx-0x480ab93],edx
  40b1bd:	jbe    0x40b1fc
  40b1bf:	jecxz  0x40b1a3
  40b1c1:	mov    cl,0xa
  40b1c3:	loope  0x40b1db
  40b1c5:	cld    
  40b1c6:	adc    BYTE PTR [esi],0x2b
  40b1c9:	mov    ebx,0xffbb099
  40b1ce:	add    ch,BYTE PTR [ebx+0x395aba60]
  40b1d4:	test   cl,al
  40b1d6:	mov    al,0xf9
  40b1d8:	iret   
  40b1d9:	std    
  40b1da:	loope  0x40b1f3
  40b1dc:	xchg   ecx,eax
  40b1dd:	xor    bl,BYTE PTR [edi]
  40b1df:	and    esi,DWORD PTR [eax]
  40b1e1:	sar    dl,cl
  40b1e3:	and    ecx,ebp
  40b1e5:	push   es
  40b1e6:	pop    es
  40b1e7:	inc    esp
  40b1e8:	pop    edi
  40b1e9:	cmp    bh,BYTE PTR [esi]
  40b1eb:	sbb    edx,DWORD PTR [ebx]
  40b1ed:	mov    cs,esi
  40b1ef:	mov    ebx,0x81588757
  40b1f4:	push   edi
  40b1f5:	icebp  
  40b1f6:	mov    edx,0x3dbf8399
  40b1fb:	mov    eax,ds:0xee44133d
  40b200:	idiv   BYTE PTR [esi-0x38d58158]
  40b206:	inc    ebx
  40b207:	ret    0xad7f
  40b20a:	push   ss
  40b20b:	outs   dx,DWORD PTR ds:[esi]
  40b20c:	mov    al,0x99
  40b20e:	repnz cmp DWORD PTR ds:0x5d00854c,ecx
  40b215:	(bad)  
  40b216:	nop
  40b217:	stos   DWORD PTR es:[edi],eax
  40b218:	shr    DWORD PTR [eax],1
  40b21a:	inc    ebp
  40b21b:	bound  esp,QWORD PTR [esi-0xf]
  40b21e:	fcmovnu st,st(0)
  40b220:	dec    ebp
  40b221:	shr    DWORD PTR [edx-0x37158620],cl
  40b227:	jecxz  0x40b1af
  40b229:	outs   dx,BYTE PTR ds:[esi]
  40b22a:	xchg   cl,cl
  40b22c:	jecxz  0x40b27b
  40b22e:	xor    DWORD PTR es:0x47560c6c,edi
  40b235:	dec    esp
  40b236:	inc    edx
  40b237:	xlat   BYTE PTR ds:[ebx]
  40b238:	and    eax,0x1373525a
  40b23d:	out    0xeb,eax
  40b23f:	into   
  40b240:	fmul   DWORD PTR [ecx-0x3248e02c]
  40b246:	push   ecx
  40b247:	jns    0x40b2be
  40b249:	or     ebx,DWORD PTR [esi-0x17]
  40b24c:	shl    dl,0x8e
  40b24f:	and    eax,0x34c1ae14
  40b254:	jmp    0x74cf:0x95b17072
  40b25b:	sbb    DWORD PTR [edi+ebp*8-0x67e31b05],ecx
  40b262:	push   eax
  40b263:	cmp    DWORD PTR [ecx+0x7b52db9c],ebx
  40b269:	scas   al,BYTE PTR es:[edi]
  40b26a:	in     al,0x42
  40b26c:	inc    edi
  40b26d:	xor    DWORD PTR [ecx+0x32],ecx
  40b270:	pushf  
  40b271:	repz je 0x40b2ef
  40b274:	mov    BYTE PTR [esi],ch
  40b276:	push   ds
  40b277:	pusha  
  40b278:	xor    eax,0xc7306ae8
  40b27d:	cld    
  40b27e:	inc    ebx
  40b27f:	in     al,dx
  40b280:	mov    cs,ecx
  40b282:	push   es
  40b283:	xor    eax,0xad48431e
  40b288:	fsubr  st(4),st
  40b28a:	hlt    
  40b28b:	sub    DWORD PTR [eax+0x5abe3f91],ecx
  40b291:	pusha  
  40b292:	pop    ds
  40b293:	mov    dl,0x43
  40b295:	test   al,0x63
  40b297:	xor    al,0x9f
  40b299:	and    eax,0x55979359
  40b29e:	xchg   edi,eax
  40b29f:	test   eax,0x4819dadf
  40b2a4:	or     eax,0x434ce7
  40b2a9:	xchg   ebx,eax
  40b2aa:	ins    BYTE PTR es:[edi],dx
  40b2ab:	stc    
  40b2ac:	popf   
  40b2ad:	xor    al,0x55
  40b2af:	xor    cl,al
  40b2b1:	xchg   ecx,eax
  40b2b2:	mov    bl,0x3d
  40b2b4:	ret    
  40b2b5:	ss mov bh,0xe2
  40b2b8:	jle    0x40b261
  40b2ba:	push   ss
  40b2bb:	popa   
  40b2bc:	cmp    eax,0x3d6067d7
  40b2c1:	lds    esi,FWORD PTR ds:0x60d5ce22
  40b2c7:	sbb    DWORD PTR [edi-0x6a],eax
  40b2ca:	lods   eax,DWORD PTR ds:[esi]
  40b2cb:	outs   dx,DWORD PTR ds:[esi]
  40b2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2cd:	inc    edx
  40b2ce:	pop    edi
  40b2cf:	lods   eax,DWORD PTR ds:[esi]
  40b2d0:	xor    bl,ch
  40b2d2:	mov    ds:0xa7779c0b,eax
  40b2d7:	mov    ds:0x5f1163c,eax
  40b2dc:	test   al,0xf1
  40b2de:	pop    ecx
  40b2df:	retf   
  40b2e0:	pop    ecx
  40b2e1:	sub    eax,0x9e04c980
  40b2e6:	or     eax,0x5acef275
  40b2eb:	and    eax,0x2fcc9a34
  40b2f0:	or     al,BYTE PTR [edx+0x20a75ae5]
  40b2f6:	or     al,0x9a
  40b2f8:	daa    
  40b2f9:	adc    eax,0x724a1779
  40b2fe:	outs   dx,DWORD PTR ds:[esi]
  40b2ff:	test   BYTE PTR [edi+0x1c],ah
  40b302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b303:	cmp    DWORD PTR [edx-0xc],ebp
  40b306:	mov    ah,0x54
  40b308:	enter  0x3a87,0xf5
  40b30c:	jne    0x40b30b
  40b30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30f:	jmp    0x40b37f
  40b311:	and    dh,BYTE PTR [ebx+0x5e]
  40b314:	sbb    esi,esp
  40b316:	mov    ss,edx
  40b318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b319:	push   cs
  40b31a:	dec    eax
  40b31b:	dec    edx
  40b31c:	jmp    0x40b330
  40b31e:	xor    BYTE PTR [edx+0x6ac5ba05],bl
  40b324:	mov    ecx,0xbd645438
  40b329:	psrld  mm4,QWORD PTR [esi-0x75]
  40b32d:	retf   0x5a90
  40b330:	xchg   ebp,eax
  40b331:	arpl   WORD PTR [ebp+0x16f410f5],sp
  40b337:	mov    dh,0x77
  40b339:	pop    edi
  40b33a:	add    edx,DWORD PTR [esi+0x2a5e70e9]
  40b340:	ins    BYTE PTR es:[edi],dx
  40b341:	test   al,0x3
  40b343:	test   al,0xfe
  40b345:	xchg   edi,eax
  40b346:	clc    
  40b347:	adc    edx,ecx
  40b349:	not    BYTE PTR [edx-0x695646ff]
  40b34f:	jg     0x40b333
  40b351:	add    ebx,DWORD PTR [ebx]
  40b353:	clc    
  40b354:	leave  
  40b355:	lea    ecx,ds:0x605b9979
  40b35b:	stos   DWORD PTR es:[edi],eax
  40b35c:	sbb    al,0x73
  40b35e:	pop    ss
  40b35f:	sbb    ebp,ebp
  40b361:	aam    0xc7
  40b363:	scas   eax,DWORD PTR es:[edi]
  40b364:	div    DWORD PTR [ecx+0x6927a741]
  40b36a:	xchg   ebp,eax
  40b36b:	cld    
  40b36c:	dec    eax
  40b36d:	ret    0x9581
  40b370:	adc    DWORD PTR [edi+0x3d2b5a9c],0x4c
  40b377:	pop    eax
  40b378:	inc    eax
  40b379:	jmp    0x15f5:0x2775be96
  40b380:	cmc    
  40b381:	das    
  40b382:	push   ebx
  40b383:	push   edi
  40b384:	scas   eax,DWORD PTR es:[edi]
  40b385:	addr16 aad 0x79
  40b388:	inc    BYTE PTR [ebp-0x68f41d46]
  40b38e:	jne    0x40b316
  40b390:	lods   al,BYTE PTR ds:[esi]
  40b391:	pusha  
  40b392:	xchg   DWORD PTR [esp+ebp*4+0x57],esi
  40b396:	mov    ds:0xb6fff653,eax
  40b39b:	mov    dh,0x34
  40b39d:	test   eax,0xbf87614b
  40b3a2:	mov    bh,0x86
  40b3a4:	mov    bh,0xc1
  40b3a6:	push   eax
  40b3a7:	gs inc esp
  40b3a9:	push   esp
  40b3aa:	xchg   ecx,eax
  40b3ab:	xchg   edx,eax
  40b3ac:	jg     0x40b3b1
  40b3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3af:	xlat   BYTE PTR ds:[ebx]
  40b3b0:	jb     0x40b378
  40b3b2:	fiadd  WORD PTR [esp+ebp*4-0x3e]
  40b3b6:	jns    0x40b42e
  40b3b8:	imul   ebp,DWORD PTR [eax-0x50],0x33
  40b3bc:	dec    edx
  40b3bd:	pop    ebx
  40b3be:	(bad)  
  40b3bf:	cmp    eax,0xd89865f5
  40b3c4:	and    DWORD PTR [ecx-0x72cf9419],ecx
  40b3ca:	(bad)  
  40b3cc:	repnz push ebx
  40b3ce:	dec    ebp
  40b3cf:	loopne 0x40b419
  40b3d1:	mov    al,0x44
  40b3d3:	into   
  40b3d4:	cmp    ebx,DWORD PTR [edx+0x5eec5279]
  40b3da:	xchg   ebp,eax
  40b3db:	cwde   
  40b3dc:	aaa    
  40b3dd:	jmp    0x26adb6b3
  40b3e2:	lock loop 0x40b414
  40b3e5:	or     ebx,esp
  40b3e7:	cmp    esp,DWORD PTR [edx+edx*1+0x44]
  40b3eb:	xchg   esi,eax
  40b3ec:	or     al,BYTE PTR [ecx]
  40b3ee:	scas   al,BYTE PTR es:[edi]
  40b3ef:	cli    
  40b3f0:	push   edi
  40b3f1:	mov    bh,dl
  40b3f3:	pop    es
  40b3f4:	push   ebx
  40b3f5:	pop    edx
  40b3f6:	cwde   
  40b3f7:	imul   ebx,DWORD PTR [edx+0x7],0xf60af9d9
  40b3fe:	pop    ecx
  40b3ff:	leave  
  40b400:	daa    
  40b401:	sub    ebx,edi
  40b403:	cmp    ebx,edx
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x2
  40b425:	popf   
  40b426:	pop    edi
  40b427:	scas   al,BYTE PTR es:[edi]
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b478
  40b431:	(bad)  
  40b432:	das    
  40b433:	pop    esp
  40b434:	adc    eax,0x661fd01f
  40b439:	retf   
  40b43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43b:	ja     0x40b428
  40b43d:	test   BYTE PTR [ecx-0x42],0x2b
  40b441:	mov    ebx,0x9419cf70
  40b446:	add    bl,BYTE PTR [edi-0x18189aca]
  40b44c:	int    0xbe
  40b44e:	mov    cx,0x75ca
  40b452:	add    edx,eax
  40b454:	scas   al,BYTE PTR es:[edi]
  40b455:	retf   
  40b456:	jns    0x40b4bc
  40b458:	dec    edx
  40b459:	adc    eax,0x25edc174
  40b45e:	icebp  
  40b45f:	outs   dx,DWORD PTR ds:[esi]
  40b460:	outs   dx,DWORD PTR ds:[esi]
  40b461:	push   ds
  40b462:	retf   
  40b463:	iret   
  40b464:	xor    edx,eax
  40b466:	sahf   
  40b467:	aaa    
  40b468:	(bad)  
  40b469:	adc    ebx,DWORD PTR [esi]
  40b46b:	jp     0x40b463
  40b46d:	mov    ch,BYTE PTR [esi]
  40b46f:	xchg   ecx,eax
  40b470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b471:	ss xadd ch,ah
  40b475:	das    
  40b476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b477:	lods   al,BYTE PTR ds:[esi]
  40b478:	neg    DWORD PTR [ecx-0x41]
  40b47b:	lods   al,BYTE PTR cs:[esi]
  40b47d:	push   ds
  40b47e:	rcr    DWORD PTR [ebx],1
  40b480:	aam    0xc6
  40b482:	jnp    0x40b41f
  40b484:	mov    eax,ds:0x50065fcb
  40b489:	dec    edx
  40b48a:	clc    
  40b48b:	addr16 jmp 0xf0e9:0xbd713748
  40b493:	xchg   esi,eax
  40b494:	pop    ebp
  40b495:	mov    WORD PTR [edx],cs
  40b497:	pop    esp
  40b498:	and    ecx,DWORD PTR [edx-0x6]
  40b49b:	sub    ch,al
  40b49d:	add    DWORD PTR [edi],0xffffffe8
  40b4a0:	xchg   ebp,eax
  40b4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4a2:	inc    esp
  40b4a3:	into   
  40b4a4:	jmp    0xe4e3:0xa653360f
  40b4ab:	pop    esi
  40b4ac:	les    edx,FWORD PTR [eax-0x3a]
  40b4af:	or     DWORD PTR [esi+0x1f],0x32
  40b4b3:	sahf   
  40b4b4:	inc    edx
  40b4b5:	outs   dx,BYTE PTR ds:[esi]
  40b4b6:	test   BYTE PTR fs:[edi],al
  40b4b9:	and    BYTE PTR [edx],dh
  40b4bb:	inc    edx
  40b4bc:	xor    DWORD PTR [eax+edi*2-0x3a4e7085],ebp
  40b4c3:	iret   
  40b4c4:	(bad)  
  40b4c5:	je     0x40b4c4
  40b4c7:	pop    edi
  40b4c8:	fidiv  WORD PTR [edi+ebx*4+0x37]
  40b4cc:	or     al,0xb2
  40b4ce:	xchg   ebp,eax
  40b4cf:	add    cl,BYTE PTR [edi]
  40b4d1:	xchg   esi,eax
  40b4d2:	jmp    0x40b4c4
  40b4d4:	xlat   BYTE PTR ds:[ebx]
  40b4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d6:	adc    bh,BYTE PTR [ecx+0x3e]
  40b4d9:	add    edi,DWORD PTR [esi+0x5a]
  40b4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4dd:	cwde   
  40b4de:	dec    eax
  40b4df:	(bad)  
  40b4e0:	(bad)
  40b4e3:	dec    edi
  40b4e4:	push   ecx
  40b4e5:	adc    al,0x76
  40b4e7:	paddd  mm2,mm2
  40b4ea:	retf   
  40b4eb:	das    
  40b4ec:	loop   0x40b539
  40b4ee:	push   ss
  40b4ef:	pop    ds
  40b4f0:	fcomi  st,st(6)
  40b4f2:	out    dx,al
  40b4f3:	sbb    eax,0x7a29dc65
  40b4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f9:	pushf  
  40b4fa:	sti    
  40b4fb:	inc    ebx
  40b4fc:	lahf   
  40b4fd:	mov    eax,ds:0xc5671b3c
  40b502:	sbb    bh,BYTE PTR [ebx+0x9]
  40b505:	out    dx,eax
  40b506:	imul   BYTE PTR [ecx+0x60]
  40b509:	xchg   edi,eax
  40b50a:	jmp    0x217:0x326355b1
  40b511:	loop   0x40b4fe
  40b513:	imul   DWORD PTR [ecx]
  40b515:	mov    dh,0x97
  40b517:	cmp    al,0x11
  40b519:	xor    eax,DWORD PTR [eax]
  40b51b:	mov    al,0x4
  40b51d:	outs   dx,DWORD PTR ds:[esi]
  40b51e:	outs   dx,DWORD PTR ds:[esi]
  40b51f:	shl    DWORD PTR [eax-0x2a],cl
  40b522:	dec    eax
  40b523:	or     eax,0xad5bb10f
  40b528:	jmp    0xe8a9107b
  40b52d:	cmc    
  40b52e:	das    
  40b52f:	cwde   
  40b530:	(bad)  
  40b531:	hlt    
  40b532:	cmp    BYTE PTR [eax+edi*2-0x71],ah
  40b536:	sub    eax,0x41d77864
  40b53b:	(bad)  
  40b53d:	push   esi
  40b53e:	adc    ebp,DWORD PTR [edx+0x42]
  40b541:	push   ecx
  40b542:	adc    al,BYTE PTR [ebp+0x7a]
  40b545:	sub    BYTE PTR [eax-0x7a745657],al
  40b54b:	cli    
  40b54c:	push   esi
  40b54d:	and    ah,BYTE PTR [edx-0x3d]
  40b550:	repz not DWORD PTR [esi+0x71]
  40b554:	nop
  40b555:	mov    ch,0x1c
  40b557:	imul   esi,edx,0x1b
  40b55a:	enter  0x4cd0,0x86
  40b55e:	add    edi,DWORD PTR [esi]
  40b560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b561:	leave  
  40b562:	loop   0x40b579
  40b564:	jae    0x40b51b
  40b566:	dec    esi
  40b567:	fstp   DWORD PTR [ebp+edi*4+0x55]
  40b56b:	sub    DWORD PTR [eax+eiz*8-0x4c],ebp
  40b56f:	sub    BYTE PTR [edi+0x66],al
  40b572:	stos   BYTE PTR es:[edi],al
  40b573:	call   0xc46eebb4
  40b578:	inc    esi
  40b579:	jmp    0x9e3d2f85
  40b57e:	sub    DWORD PTR [ecx+edi*2+0x2d],esp
  40b582:	sti    
  40b583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b584:	dec    ebp
  40b585:	and    BYTE PTR [esi+0x2],dh
  40b588:	fwait
  40b589:	(bad)  
  40b58a:	ins    DWORD PTR es:[edi],dx
  40b58b:	rcl    BYTE PTR [ebx],cl
  40b58d:	mul    BYTE PTR [eax-0x390ad8e]
  40b593:	rcr    edi,0x0
  40b596:	mov    dh,0x4b
  40b598:	fisubr DWORD PTR [ecx]
  40b59a:	lods   al,BYTE PTR ds:[esi]
  40b59b:	push   0xc3da12df
  40b5a0:	sbb    ah,BYTE PTR [ecx-0x3c8a3296]
  40b5a6:	les    eax,FWORD PTR ds:0x9776bad8
  40b5ac:	fwait
  40b5ad:	(bad)  
  40b5ae:	jmp    0xaa73b6e3
  40b5b3:	adc    bl,ah
  40b5b5:	into   
  40b5b6:	push   ecx
  40b5b7:	nop
  40b5b8:	ins    DWORD PTR es:[edi],dx
  40b5b9:	sub    eax,0x1b9ca697
  40b5be:	add    DWORD PTR [edi-0x4d],ebx
  40b5c1:	mov    bl,0xf4
  40b5c3:	imul   ch
  40b5c5:	loopne 0x40b5b1
  40b5c7:	repz (bad) 
  40b5c9:	push   ds
  40b5ca:	sti    
  40b5cb:	sbb    ecx,ecx
  40b5cd:	inc    eax
  40b5ce:	out    dx,al
  40b5cf:	sub    eax,0x5b48c87e
  40b5d4:	jbe    0x40b603
  40b5d6:	stos   DWORD PTR es:[edi],eax
  40b5d7:	xchg   edx,eax
  40b5d8:	push   cs
  40b5d9:	mov    ds:0x11b63884,eax
  40b5de:	sub    ecx,DWORD PTR [esi-0x27b23260]
  40b5e4:	fidivr DWORD PTR [ecx]
  40b5e6:	lahf   
  40b5e7:	(bad)  [eax+0x442d783f]
  40b5ed:	pop    ebx
  40b5ee:	std    
  40b5ef:	push   esi
  40b5f0:	out    dx,al
  40b5f1:	out    dx,al
  40b5f2:	sub    edx,DWORD PTR [ecx-0x2c19efcb]
  40b5f8:	das    
  40b5f9:	(bad)  
  40b5fa:	mov    ebx,0x14b6b5a
  40b5ff:	inc    ebp
  40b600:	inc    ebx
  40b601:	jge    0x40b615
  40b603:	dec    ebx
  40b604:	and    BYTE PTR [edi+edi*8+0x60c5799],al
  40b60b:	test   eax,0x61644fdb
  40b610:	nop
  40b611:	stc    
  40b612:	mov    esp,gs
  40b614:	imul   ebp,DWORD PTR [esi+0x7],0xbcfadeaa
  40b61b:	sbb    eax,0x2eea5ed0
  40b620:	aam    0x0
  40b622:	xchg   ebp,ebp
  40b624:	dec    ecx
  40b625:	je     0x40b5c1
  40b627:	and    al,0xd9
  40b629:	jns    0x40b63d
  40b62b:	leave  
  40b62c:	push   ds
  40b62d:	stos   DWORD PTR es:[edi],eax
  40b62e:	(bad)  
  40b62f:	xchg   edx,eax
  40b630:	sub    ecx,edi
  40b632:	and    DWORD PTR ds:0xcf8a89b8,edi
  40b638:	xchg   ebx,eax
  40b639:	pop    ebp
  40b63a:	push   ebp
  40b63b:	clc    
  40b63c:	popf   
  40b63d:	add    ebp,esp
  40b63f:	and    dh,BYTE PTR [esi-0x5c]
  40b642:	jns    0x40b678
  40b644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b645:	aaa    
  40b646:	jge    0x40b657
  40b648:	mov    WORD PTR [edi-0x68],ds
  40b64b:	sub    BYTE PTR [eax+edi*2],al
  40b64e:	clc    
  40b64f:	test   BYTE PTR [edi-0x45d6aa92],bh
  40b655:	inc    ebp
  40b656:	or     al,0x85
  40b658:	ret    0xc934
  40b65b:	ss out 0x82,al
  40b65e:	call   0xd24e:0xfc033543
  40b665:	or     DWORD PTR [ecx+0x68],edi
  40b668:	std    
  40b669:	gs mov edi,0x4b0443eb
  40b66f:	cmp    al,0xff
  40b671:	ffreep st(0)
  40b673:	and    DWORD PTR [edx],edi
  40b675:	sub    dh,BYTE PTR [eax]
  40b677:	push   ebx
  40b678:	xchg   edi,eax
  40b679:	mov    ds:0x414158ff,al
  40b67e:	(bad)  
  40b680:	fist   WORD PTR [ebp-0x74d95350]
  40b686:	xlat   BYTE PTR ds:[ebx]
  40b687:	(bad)  
  40b688:	add    BYTE PTR [ecx],0x7e
  40b68b:	adc    eax,0xd2539978
  40b690:	xor    DWORD PTR [ebx+0x57a2190a],edx
  40b696:	xchg   ecx,eax
  40b697:	xchg   bh,ch
  40b699:	sub    ebp,DWORD PTR [eax]
  40b69b:	fmul   DWORD PTR [eax]
  40b69d:	mov    ds:0xd7948254,al
  40b6a2:	adc    edx,esp
  40b6a4:	mov    eax,0xb9eafefa
  40b6a9:	stc    
  40b6aa:	in     al,0xe
  40b6ac:	aaa    
  40b6ad:	out    dx,eax
  40b6ae:	out    dx,al
  40b6af:	iret   
  40b6b0:	retf   
  40b6b1:	scas   eax,DWORD PTR es:[edi]
  40b6b2:	or     ebp,DWORD PTR [ecx+0x36]
  40b6b5:	jg     0x40b72d
  40b6b7:	push   ds
  40b6b8:	cmp    BYTE PTR [ebx+0x36],cl
  40b6bb:	push   ebp
  40b6bc:	clc    
  40b6bd:	pushf  
  40b6be:	and    al,0xc3
  40b6c0:	mov    WORD PTR [esi],gs
  40b6c2:	add    cl,BYTE PTR [ecx]
  40b6c4:	or     cl,BYTE PTR [ebx+0xbfb3d2e]
  40b6ca:	test   BYTE PTR [esp+ebx*1-0x30def1c2],dl
  40b6d1:	cmp    cl,BYTE PTR [eax-0x171997fe]
  40b6d7:	and    BYTE PTR [eax],0x4a
  40b6da:	fdiv   DWORD PTR [eax]
  40b6dc:	sbb    BYTE PTR [ecx],0xa4
  40b6df:	int3   
  40b6e0:	xor    cl,BYTE PTR [ebp+esi*1-0x69830f25]
  40b6e7:	cmp    eax,0x374dbe40
  40b6ec:	sub    cl,dh
  40b6ee:	cwde   
  40b6ef:	popf   
  40b6f0:	mov    dl,0x78
  40b6f2:	mov    al,ds:0xa04d852a
  40b6f7:	jbe    0x40b686
  40b6f9:	sbb    DWORD PTR [esi],0xffffff91
  40b6fc:	std    
  40b6fd:	pop    ecx
  40b6fe:	push   esi
  40b6ff:	out    dx,al
  40b700:	outs   dx,BYTE PTR ds:[esi]
  40b701:	arpl   WORD PTR [edx+0x5c72f5d3],bp
  40b707:	inc    ebp
  40b708:	mov    al,ds:0xc2c2a1a4
  40b70d:	or     al,0x70
  40b70f:	jmp    0xa247:0xd373fed3
  40b716:	mov    edx,0x23cf7c64
  40b71b:	(bad)  
  40b71c:	adc    ebx,DWORD PTR [ebp+0x16]
  40b71f:	push   edi
  40b720:	mov    al,0x23
  40b722:	mov    WORD PTR [edi],?
  40b724:	jl     0x40b6d0
  40b726:	and    ah,dh
  40b728:	dec    edi
  40b729:	push   edi
  40b72a:	in     al,dx
  40b72b:	adc    BYTE PTR [edx],0x6
  40b72e:	xor    ebp,DWORD PTR [eax+0x2]
  40b731:	and    bh,BYTE PTR [edi-0x283caf25]
  40b737:	push   cs
  40b738:	xchg   edx,eax
  40b739:	pop    ebp
  40b73a:	inc    esi
  40b73b:	push   eax
  40b73c:	push   esi
  40b73d:	scas   eax,DWORD PTR es:[edi]
  40b73e:	out    dx,al
  40b73f:	mov    WORD PTR [ebx+edx*1+0x28498503],es
  40b746:	sub    al,0x26
  40b748:	int3   
  40b749:	outs   dx,BYTE PTR ds:[esi]
  40b74a:	call   0xc53837a4
  40b74f:	pushf  
  40b750:	push   ebp
  40b751:	mov    cl,0xf1
  40b753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b754:	xchg   esp,eax
  40b755:	test   eax,0xb6403b57
  40b75a:	cld    
  40b75b:	(bad)  
  40b75c:	repz xcrypt-ctr (bad)
  40b75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b75f:	sbb    DWORD PTR [ebx-0x40931b95],eax
  40b765:	mov    al,ds:0x5d99238c
  40b76a:	pop    eax
  40b76b:	jle    0x40b766
  40b76d:	in     al,dx
  40b76e:	sti    
  40b76f:	test   al,0xd2
  40b771:	and    eax,0x349df0c9
  40b776:	test   BYTE PTR [eax],dl
  40b778:	cmp    esi,DWORD PTR [ebx+0x51]
  40b77b:	dec    ecx
  40b77c:	xor    cl,bl
  40b77e:	mov    ecx,ds
  40b780:	icebp  
  40b781:	xor    al,0x4c
  40b783:	mov    dl,BYTE PTR [esi+eiz*1]
  40b786:	ss scas al,BYTE PTR es:[edi]
  40b788:	dec    ebx
  40b789:	sub    bl,BYTE PTR [ebx]
  40b78b:	push   edi
  40b78c:	sbb    BYTE PTR [ebx],0x3f
  40b78f:	sub    al,0x5
  40b791:	push   ds
  40b792:	lock inc eax
  40b794:	adc    eax,0xc1091c4d
  40b799:	mov    eax,ds:0x2213f9a8
  40b79e:	daa    
  40b79f:	leave  
  40b7a0:	xchg   ebp,eax
  40b7a1:	popa   
  40b7a2:	leave  
  40b7a3:	mov    ds:0x57d9435f,eax
  40b7a8:	ins    BYTE PTR es:[edi],dx
  40b7a9:	fdiv   DWORD PTR ds:0xfe6ca6f6
  40b7af:	pop    esp
  40b7b0:	fadd   DWORD PTR [eax+0x735d6d9]
  40b7b6:	xor    ah,BYTE PTR [edi-0x46]
  40b7b9:	sbb    DWORD PTR [edx+0x70f5a624],ebx
  40b7bf:	xchg   ebx,eax
  40b7c0:	mov    ds:0xac454411,al
  40b7c5:	pop    ds
  40b7c6:	jl     0x40b798
  40b7c8:	fidiv  WORD PTR [edx+eiz*2]
  40b7cb:	(bad)  
  40b7cd:	cdq    
  40b7ce:	cmp    ah,BYTE PTR [edx]
  40b7d0:	cmp    DWORD PTR [eax+0x7ec8e188],ebx
  40b7d6:	repnz aaa 
  40b7d8:	xchg   BYTE PTR cs:[edx+0x6636d2f7],dh
  40b7df:	add    ah,BYTE PTR [ebp+0x282d7800]
  40b7e5:	add    al,0xba
  40b7e7:	pop    ebp
  40b7e8:	call   0x34f1:0x329c6246
  40b7ef:	add    edx,DWORD PTR [ecx]
  40b7f1:	aas    
  40b7f2:	push   ebx
  40b7f3:	pop    edx
  40b7f4:	lahf   
  40b7f5:	jns    0x40b7cc
  40b7f7:	out    0x62,eax
  40b7f9:	ds loop 0x40b84f
  40b7fc:	jne    0x40b787
  40b7fe:	test   BYTE PTR fs:[edi+0x57],ch
  40b802:	pop    es
  40b803:	test   eax,0x9f6ea037
  40b808:	bound  eax,QWORD PTR [ebp-0x7a]
  40b80b:	rol    BYTE PTR [edx+0x6f],0xbc
  40b80f:	xchg   ecx,eax
  40b810:	rcl    BYTE PTR [eax+0x4f],1
  40b813:	repz adc eax,0x72c04e55
  40b819:	and    eax,0x316bb580
  40b81e:	sbb    DWORD PTR [ebp+0x1d0dfb70],ebx
  40b824:	retf   
  40b825:	out    0x57,eax
  40b827:	nop
  40b828:	lods   al,BYTE PTR ds:[esi]
  40b829:	pop    edi
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	out    0xb6,al
  40b8a6:	ss push edx
  40b8a8:	loop   0x40b82c
  40b8aa:	jle    0x40b92a
  40b8ac:	jo     0x40b927
  40b8ae:	jle    0x40b92e
  40b8b0:	mov    DWORD PTR [edi],esp
  40b8b2:	pop    esi
  40b8b3:	imul   eax,DWORD PTR [edi],0xffffff95
  40b8b6:	dec    esi
  40b8b7:	sub    bh,0x90
  40b8ba:	(bad)  
  40b8bb:	mov    dl,0x90
  40b8bd:	and    al,0x3d
  40b8bf:	lods   eax,DWORD PTR ds:[esi]
  40b8c0:	cdq    
  40b8c1:	out    0x4d,eax
  40b8c3:	mov    ah,0xa6
  40b8c5:	(bad)  
  40b8c6:	mov    bl,0x4d
  40b8c8:	jg     0x40b853
  40b8ca:	rcr    BYTE PTR [ecx+0x4e838195],0xb7
  40b8d1:	fcomp  QWORD PTR [esi-0x2d]
  40b8d4:	mov    ds:0x379a1b7e,eax
  40b8d9:	fdiv   DWORD PTR [ecx+0x328a761]
  40b8df:	popf   
  40b8e0:	pop    edi
  40b8e1:	aas    
  40b8e2:	push   edi
  40b8e3:	add    ebx,ecx
  40b8e5:	in     al,0x92
  40b8e7:	test   eax,0xc108bc
  40b8ec:	imul   eax,DWORD PTR [edi],0x443dfa12
  40b8f2:	adc    BYTE PTR [edi],bh
  40b8f4:	cmp    ecx,edx
  40b8f6:	xchg   esp,eax
  40b8f7:	xlat   BYTE PTR ds:[ebx]
  40b8f8:	or     eax,DWORD PTR [ecx+0x38]
  40b8fb:	js     0x40b901
  40b8fd:	aam    0x50
  40b8ff:	loope  0x40b8ac
  40b901:	(bad)  
  40b902:	in     eax,0x8a
  40b904:	xchg   DWORD PTR [esi*4-0x36fd296c],edx
  40b90b:	or     ecx,DWORD PTR [eax]
  40b90d:	call   0x4bcd0956
  40b912:	or     bh,BYTE PTR [ebx+edi*2]
  40b915:	test   DWORD PTR [ecx+0x48],ecx
  40b918:	sbb    edx,DWORD PTR [eax]
  40b91a:	aas    
  40b91b:	fcmovbe st,st(1)
  40b91d:	and    ch,bl
  40b91f:	ins    BYTE PTR es:[edi],dx
  40b920:	mov    esp,0x80774d4f
  40b925:	fnstenv [ecx]
  40b927:	mov    ch,0x82
  40b929:	and    BYTE PTR [ecx-0x4da48e5a],dh
  40b92f:	js     0x40b945
  40b931:	mov    ebx,0xea4ba121
  40b936:	lahf   
  40b937:	in     eax,0x7e
  40b939:	data16 fadd st,st(2)
  40b93c:	leave  
  40b93d:	retf   0xdcda
  40b940:	mov    cl,BYTE PTR [eax+0x5ddeeedc]
  40b946:	jmp    0x40b92b
  40b948:	and    esp,edx
  40b94a:	mov    ah,0x4c
  40b94c:	repz scas eax,DWORD PTR es:[edi]
  40b94e:	add    BYTE PTR [esi+eiz*1-0x2d31c3b8],dh
  40b955:	mov    esi,0x68077264
  40b95a:	hlt    
  40b95b:	jbe    0x40b93a
  40b95d:	push   0x76d61b4b
  40b962:	sbb    eax,0x66309a32
  40b967:	loop   0x40b929
  40b969:	shl    esi,0xe0
  40b96c:	sbb    al,0x1e
  40b96e:	inc    ecx
  40b96f:	cmp    al,0x9d
  40b971:	hlt    
  40b972:	mov    bh,0x13
  40b974:	inc    esp
  40b975:	test   eax,0x361cb1ee
  40b97a:	mov    esp,0x20d53d27
  40b97f:	je     0x40ba00
  40b981:	mul    BYTE PTR [esp+ebp*1-0x39]
  40b985:	pusha  
  40b986:	jnp    0x40b91f
  40b988:	test   DWORD PTR [edi-0x66],0x5da15271
  40b98f:	iret   
  40b990:	outs   dx,DWORD PTR ds:[esi]
  40b991:	icebp  
  40b992:	imul   eax,DWORD PTR [ebp+0x2cd0a9f7],0xfffffff1
  40b999:	fld    QWORD PTR [ebp+edx*2-0x70ab0b60]
  40b9a0:	cmp    bl,al
  40b9a2:	into   
  40b9a3:	push   esi
  40b9a4:	jp     0x40b997
  40b9a6:	clc    
  40b9a7:	loope  0x40b9fa
  40b9a9:	call   0xe990:0xa6f7b62c
  40b9b0:	add    BYTE PTR [ecx-0x230c36b7],ch
  40b9b6:	xor    al,0xa6
  40b9b8:	repnz mov ds:0x2902db45,al
  40b9be:	jmp    0x40ba16
  40b9c0:	in     al,dx
  40b9c1:	jno    0x40b9b6
  40b9c3:	js     0x40ba00
  40b9c5:	call   0x4135ab57
  40b9ca:	loope  0x40ba32
  40b9cc:	outs   dx,DWORD PTR ds:[esi]
  40b9cd:	cs mov eax,0x65a7199c
  40b9d3:	mov    ebx,0x56d9b214
  40b9d8:	repnz mov dh,0x5a
  40b9db:	push   esp
  40b9dc:	inc    ebp
  40b9dd:	sub    edi,ebp
  40b9df:	pop    ebp
  40b9e0:	fnclex 
  40b9e2:	mov    ds:0xa6da32d6,al
  40b9e7:	mov    ds:0x96b58b46,eax
  40b9ec:	fidivr WORD PTR [ecx]
  40b9ee:	xor    esp,ebx
  40b9f0:	sbb    al,0xb2
  40b9f2:	sbb    BYTE PTR [di+0x5940],0x7c
  40b9f8:	lds    ebp,FWORD PTR [ecx+0x1]
  40b9fb:	cmp    dh,BYTE PTR [ecx-0xc358a04]
  40ba01:	cli    
  40ba02:	mov    WORD PTR [edi],fs
  40ba04:	fcmovb st,st(1)
  40ba06:	jmp    0x40b9f0
  40ba08:	pop    ebx
  40ba09:	mov    ebx,0x4719d88b
  40ba0e:	jmp    0x40ba5c
  40ba10:	or     ch,BYTE PTR ds:0x92631c17
  40ba16:	xor    eax,0xd60abfba
  40ba1b:	push   ecx
  40ba1c:	test   eax,0xb6de4fc5
  40ba21:	leave  
  40ba22:	ds inc ebx
  40ba24:	fmul   QWORD PTR [ebx]
  40ba26:	dec    edi
  40ba27:	xor    dl,BYTE PTR [ebp+0x3e]
  40ba2a:	lods   eax,DWORD PTR ds:[esi]
  40ba2b:	into   
  40ba2c:	push   0x7e
  40ba2e:	icebp  
  40ba2f:	mov    eax,0x5374df79
  40ba34:	rcr    DWORD PTR [edi-0x7cf02a4],cl
  40ba3a:	mov    ch,0xf3
  40ba3c:	aad    0x85
  40ba3e:	xor    DWORD PTR [esi-0x5f],ebp
  40ba41:	add    DWORD PTR [bx+si],edi
  40ba44:	mov    edi,0x5ab5d4a3
  40ba49:	sbb    edx,DWORD PTR es:[eax+0x31]
  40ba4d:	xor    esp,DWORD PTR [ebp+0x6b]
  40ba50:	mov    edi,DWORD PTR [ebp-0x52b9b0d3]
  40ba56:	jp     0x40b9fa
  40ba58:	mov    dh,0xa9
  40ba5a:	push   ds
  40ba5b:	call   0x6139:0xdef8446f
  40ba62:	ins    DWORD PTR es:[edi],dx
  40ba63:	mov    al,dh
  40ba65:	leave  
  40ba66:	scas   eax,DWORD PTR es:[edi]
  40ba67:	push   esi
  40ba68:	sub    BYTE PTR [edx-0x44],bh
  40ba6b:	inc    eax
  40ba6c:	adc    dl,BYTE PTR [edi+0x3feb530b]
  40ba72:	mov    ss,WORD PTR [ecx-0x6c597f9f]
  40ba78:	lods   eax,DWORD PTR ds:[esi]
  40ba79:	cmp    BYTE PTR [esi],bl
  40ba7b:	inc    ebx
  40ba7c:	stos   BYTE PTR es:[edi],al
  40ba7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7f:	mov    edi,0x69d5c279
  40ba84:	outs   dx,BYTE PTR ds:[esi]
  40ba85:	inc    esi
  40ba86:	pop    ebp
  40ba87:	xor    dh,BYTE PTR [eax*4-0x8e02e59]
  40ba8e:	mov    dl,0x1d
  40ba90:	retf   
  40ba91:	ret    0x8302
  40ba94:	mov    DWORD PTR [edi-0x44c405bb],0x9165452a
  40ba9e:	dec    ebx
  40ba9f:	cmp    eax,0x277e5bd5
  40baa4:	xchg   edi,eax
  40baa5:	fst    st(2)
  40baa7:	ret    
  40baa8:	cs jbe 0x40ba5d
  40baab:	cmp    cl,bh
  40baad:	sub    eax,0x78e50991
  40bab2:	dec    eax
  40bab3:	shr    DWORD PTR [ecx-0x8],0xd6
  40bab7:	ja     0x40bab0
  40bab9:	scas   al,BYTE PTR es:[edi]
  40baba:	or     BYTE PTR [ebp+0x19],dl
  40babd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40babe:	gs sbb al,0x5d
  40bac1:	test   eax,0xeb9b9cf4
  40bac6:	sahf   
  40bac7:	hlt    
  40bac8:	dec    edx
  40bac9:	push   ebx
  40baca:	out    dx,eax
  40bacb:	repz add cl,BYTE PTR ds:0x9c48c693
  40bad2:	stos   BYTE PTR es:[edi],al
  40bad3:	mov    cl,0xb6
  40bad5:	pushf  
  40bad6:	ins    DWORD PTR es:[edi],dx
  40bad7:	jp     0x40ba76
  40bad9:	mov    cl,0x8c
  40badb:	push   ebp
  40badc:	out    0xfd,al
  40bade:	dec    esp
  40badf:	inc    ecx
  40bae0:	outs   dx,BYTE PTR ds:[esi]
  40bae1:	mov    dh,0x3d
  40bae3:	and    WORD PTR [ecx+0x49ef9ea8],0x9933
  40baec:	jmp    0x40bacd
  40baee:	lahf   
  40baef:	pop    edi
  40baf0:	sar    DWORD PTR [eax-0x1dbf053d],1
  40baf6:	das    
  40baf7:	rcr    al,cl
  40baf9:	ret    
  40bafa:	aad    0xc1
  40bafc:	into   
  40bafd:	adc    eax,0x68dd125a
  40bb02:	retf   0x825e
  40bb05:	in     eax,0x49
  40bb07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb08:	inc    edx
  40bb09:	call   0x67867d28
  40bb0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb0f:	sbb    DWORD PTR ds:0x3b6bad6,esi
  40bb15:	or     eax,0x3a2b851
  40bb1a:	mov    al,ds:0xa541443e
  40bb1f:	cmp    eax,0x266759c4
  40bb24:	mov    bh,0xef
  40bb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb27:	xchg   edi,eax
  40bb28:	sub    ebx,DWORD PTR [ebx]
  40bb2a:	mov    bl,ah
  40bb2c:	sbb    al,0x6d
  40bb2e:	(bad)  
  40bb2f:	scas   eax,DWORD PTR es:[edi]
  40bb30:	(bad)  
  40bb31:	int3   
  40bb32:	pop    esp
  40bb33:	or     al,0xd7
  40bb35:	shl    BYTE PTR [ecx-0x6bbc1138],1
  40bb3b:	shl    bh,cl
  40bb3d:	cmp    eax,0x1b5ff7fb
  40bb42:	lock icebp 
  40bb44:	dec    ebp
  40bb45:	stos   BYTE PTR es:[edi],al
  40bb46:	int3   
  40bb47:	add    dh,BYTE PTR [edx]
  40bb49:	and    BYTE PTR [edi+0x6899b3f3],al
  40bb4f:	cmp    eax,0x8918b025
  40bb54:	inc    edx
  40bb55:	in     al,0x17
  40bb57:	cdq    
  40bb58:	mov    edx,0x27f45c25
  40bb5d:	jg     0x40bbc5
  40bb5f:	aas    
  40bb60:	popa   
  40bb61:	cmp    DWORD PTR [ebp+0x44],esp
  40bb64:	cmp    al,ch
  40bb66:	or     dh,BYTE PTR [esi]
  40bb68:	jnp    0x40bbbb
  40bb6a:	adc    al,0x8a
  40bb6c:	aaa    
  40bb6d:	mov    gs,eax
  40bb6f:	sub    BYTE PTR [edx],al
  40bb71:	inc    edx
  40bb72:	xchg   BYTE PTR [ebx-0x7c5cc9d8],al
  40bb78:	add    al,0x6d
  40bb7a:	add    eax,0x75d5b233
  40bb7f:	int    0x50
  40bb81:	fwait
  40bb82:	pop    es
  40bb83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb84:	xor    al,0x65
  40bb86:	sub    al,0x3c
  40bb88:	jmp    0xe092:0xc3ffd86b
  40bb8f:	fnstenv [ebx+0x6e]
  40bb92:	stos   DWORD PTR es:[edi],eax
  40bb93:	jp     0x40bbff
  40bb95:	cmp    cl,BYTE PTR [ebx-0x499b0e28]
  40bb9b:	and    ebp,DWORD PTR [edi+0x3f]
  40bb9e:	mov    bh,0xbf
  40bba0:	and    DWORD PTR [edx+edx*4-0x67e9f348],ebp
  40bba7:	add    al,0x6
  40bba9:	mov    ch,0x2b
  40bbab:	shl    cl,cl
  40bbad:	add    DWORD PTR [ebp-0x49],0x3c4359a
  40bbb4:	xor    al,0x62
  40bbb6:	out    dx,al
  40bbb7:	sbb    BYTE PTR [eax+0x3cec1882],bh
  40bbbd:	jmp    0xe6b5:0x8d37c628
  40bbc4:	arpl   WORD PTR [eax-0xf7aab77],cx
  40bbca:	nop
  40bbcb:	add    al,0x87
  40bbcd:	jmp    0xd7a0:0x7fe336a2
  40bbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd5:	jno    0x40bba1
  40bbd7:	mov    BYTE PTR [edi+0x7d9deb16],dh
  40bbdd:	cmp    DWORD PTR [esi+0x3adc2005],eax
  40bbe3:	and    DWORD PTR [edi-0x752ee8fe],edx
  40bbe9:	call   0xa0bb1a60
  40bbee:	adc    al,0x99
  40bbf0:	fbstp  TBYTE PTR [ecx]
  40bbf2:	adc    BYTE PTR [ebx+0x7a],ah
  40bbf5:	fnstsw WORD PTR [ecx]
  40bbf7:	dec    ebx
  40bbf8:	idiv   DWORD PTR [edi+0x32da07dc]
  40bbfe:	sbb    eax,0xaca3a345
  40bc03:	jo     0x40bc73
  40bc05:	lock lods al,BYTE PTR ds:[esi]
  40bc07:	imul   ebx,DWORD PTR [esi],0xaa67c0c8
  40bc0d:	in     al,0x29
  40bc0f:	xchg   ebx,eax
  40bc10:	and    BYTE PTR [ecx-0x6e],bh
  40bc13:	cmp    eax,0xc11d57f8
  40bc18:	sub    cl,ah
  40bc1a:	test   BYTE PTR [ebp+0x46],cl
  40bc1d:	dec    esi
  40bc1e:	xor    BYTE PTR [edi+0x42],0xbb
  40bc22:	test   eax,0x87570b54
  40bc27:	(bad)  
  40bc28:	aam    0x7b
  40bc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc2b:	shl    DWORD PTR [edi],1
  40bc2d:	mov    dl,0xc6
  40bc2f:	xchg   edx,eax
  40bc30:	xor    ecx,ebp
  40bc32:	dec    ecx
  40bc33:	lock cmp eax,0xacbf2434
  40bc39:	push   cs
  40bc3a:	rcl    DWORD PTR [ecx-0x4fbe13c8],1
  40bc40:	mov    ch,0x85
  40bc42:	popf   
  40bc43:	je     0x40bc6b
  40bc45:	mov    ch,dh
  40bc47:	maskmovq mm4,mm5
  40bc4a:	mov    ebp,0x911c1af
  40bc4f:	jno    0x40bc88
  40bc51:	mov    ebx,0x24745ad2
  40bc56:	mov    edx,0xc5ca0963
  40bc5b:	lods   eax,DWORD PTR ds:[esi]
  40bc5c:	test   ecx,ebx
  40bc5e:	inc    esi
  40bc5f:	mov    ds:0xc49ea360,eax
  40bc64:	mov    ds:0x8d343e6b,eax
  40bc69:	push   ebx
  40bc6a:	jno    0x40bc4d
  40bc6c:	push   es
  40bc6d:	rcl    BYTE PTR [edx-0x69],cl
  40bc70:	pusha  
  40bc71:	out    0x85,al
  40bc73:	mov    dh,0x36
  40bc75:	int3   
  40bc76:	jmp    0x5efaf05b
  40bc7b:	mov    esi,DWORD PTR [edx]
  40bc7d:	data16 xlat BYTE PTR ds:[ebx]
  40bc7f:	test   eax,0x3be8bdd7
  40bc84:	cmp    ebx,edx
  40bc86:	push   ecx
  40bc87:	in     al,0x2
  40bc89:	cmp    dh,BYTE PTR ss:[ebx+ebx*2-0x7d]
  40bc8e:	inc    esi
  40bc8f:	test   DWORD PTR [esi-0x66f7bfda],edx
  40bc95:	js     0x40bc84
  40bc97:	sub    bh,BYTE PTR [ebx]
  40bc99:	ins    DWORD PTR es:[edi],dx
  40bc9a:	mov    al,0x81
  40bc9c:	aad    0x42
  40bc9e:	out    0xae,eax
  40bca0:	jge    0x40bcc7
  40bca2:	out    0xba,eax
  40bca4:	push   ds
  40bca5:	out    0x73,al
  40bca7:	popa   
  40bca8:	sti    
  40bca9:	lea    ebp,[ebx]
  40bcab:	fistp  QWORD PTR [ebx]
  40bcad:	fimul  DWORD PTR [ebx-0x79f037ab]
  40bcb3:	add    eax,DWORD PTR [eax]
  40bcb5:	add    BYTE PTR [eax],al
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	mov    ebx,ebx
  40bcd4:	sbb    al,BYTE PTR [esi]
  40bcd6:	in     al,0x8e
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	mov    dl,0x91
  40bce0:	xchg   esp,eax
  40bce1:	xor    BYTE PTR [eax+0x49dbfbaa],dh
  40bce7:	lds    edx,FWORD PTR [edi]
  40bce9:	arpl   WORD PTR [ebx+0xc],di
  40bcec:	mov    ebx,0x89f3a2eb
  40bcf1:	pop    esp
  40bcf2:	rcr    ch,1
  40bcf4:	jne    0x40bd08
  40bcf6:	or     ebp,0xf1932530
  40bcfc:	pop    esi
  40bcfd:	cwde   
  40bcfe:	and    BYTE PTR [ebx],ah
  40bd00:	mov    eax,ds:0x2d26925
  40bd05:	or     edx,esi
  40bd07:	inc    esp
  40bd08:	loop   0x40bd7c
  40bd0a:	fcmovne st,st(0)
  40bd0c:	in     al,0xab
  40bd0e:	pop    edi
  40bd0f:	es fwait
  40bd11:	sub    BYTE PTR [esi+0x62],0x2b
  40bd15:	leave  
  40bd16:	sub    BYTE PTR [edx+0x48e03da7],dl
  40bd1c:	test   eax,0x696b20bd
  40bd21:	xor    DWORD PTR [ecx+eiz*1+0x5c],0x248f9eb5
  40bd29:	jle    0x40bd4d
  40bd2b:	cdq    
  40bd2c:	and    edx,0x6d468e69
  40bd32:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40bd34:	mov    bh,0x5f
  40bd36:	iret   
  40bd37:	jle    0x40bd24
  40bd39:	xor    al,0xed
  40bd3b:	rcr    DWORD PTR [ebp+0x6ec823ab],1
  40bd41:	sbb    cl,BYTE PTR [edi-0x54]
  40bd44:	int    0x98
  40bd46:	rcl    DWORD PTR [edx-0x16360331],cl
  40bd4c:	not    BYTE PTR [ebx+edx*8]
  40bd4f:	xor    bl,dl
  40bd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd52:	inc    ecx
  40bd53:	out    0xd7,ax
  40bd56:	add    ah,BYTE PTR [eax]
  40bd58:	hlt    
  40bd59:	xchg   edi,eax
  40bd5a:	aad    0x9c
  40bd5c:	mul    BYTE PTR [esi-0x135fcc39]
  40bd62:	addr16 xchg ebx,eax
  40bd64:	fld    QWORD PTR [eax+esi*4]
  40bd67:	pop    eax
  40bd68:	jl     0x40bd6e
  40bd6a:	adc    BYTE PTR ds:0x95d4ea53,ah
  40bd70:	jp     0x40bd22
  40bd72:	daa    
  40bd73:	into   
  40bd74:	dec    edx
  40bd75:	pop    ecx
  40bd76:	mov    al,ds:0x51687932
  40bd7b:	and    ebp,esi
  40bd7d:	mov    ds:0xc3148163,al
  40bd82:	push   ebp
  40bd83:	imul   ecx,DWORD PTR [ecx-0x5f],0xfffffff7
  40bd87:	push   ebp
  40bd88:	xchg   edx,eax
  40bd89:	fst    QWORD PTR [edx-0x78]
  40bd8c:	cli    
  40bd8d:	cmc    
  40bd8e:	shr    BYTE PTR [ebx+0x54058af2],1
  40bd94:	in     eax,dx
  40bd95:	gs retf 
  40bd97:	shr    DWORD PTR [edx+0x36e159be],cl
  40bd9d:	gs addr16 inc esi
  40bda0:	test   DWORD PTR [ecx+esi*2],esp
  40bda3:	ficom  WORD PTR [esi-0x6b9a1b85]
  40bda9:	or     eax,0xc73500a9
  40bdae:	in     al,dx
  40bdaf:	out    0xb9,eax
  40bdb1:	pop    edi
  40bdb2:	lods   al,BYTE PTR ds:[esi]
  40bdb3:	call   0xe2a54231
  40bdb8:	lahf   
  40bdb9:	xor    BYTE PTR [ecx-0x30],al
  40bdbc:	xchg   BYTE PTR [ecx],bl
  40bdbe:	std    
  40bdbf:	(bad)  [esi-0x5e0ad8a4]
  40bdc5:	sub    eax,DWORD PTR gs:[edx-0x215ae9f3]
  40bdcc:	push   0xe865f6a9
  40bdd1:	mov    al,0x24
  40bdd3:	xor    al,0x12
  40bdd5:	fisubr DWORD PTR [esi-0x45]
  40bdd8:	mov    al,0x84
  40bdda:	sbb    edx,ecx
  40bddc:	mov    ecx,esp
  40bdde:	mov    esp,0x1be0d022
  40bde3:	ficom  WORD PTR [edx+0x6d2f092c]
  40bde9:	cs mov ebx,0xf2cd78de
  40bdef:	in     al,0xee
  40bdf1:	lock stos BYTE PTR es:[edi],al
  40bdf3:	mov    ebx,0xca1c8b09
  40bdf8:	fdiv   QWORD PTR fs:[edi-0x55]
  40bdfc:	inc    edi
  40bdfd:	(bad)  
  40bdfe:	rcl    BYTE PTR [ecx],1
  40be00:	mov    esp,DWORD PTR [ebp+0x21d81d2]
  40be06:	lahf   
  40be07:	enter  0x5a7e,0x1c
  40be0b:	jl     0x40be77
  40be0d:	fidiv  DWORD PTR [edx+0x5508ce4]
  40be13:	aas    
  40be14:	inc    ebx
  40be15:	dec    ecx
  40be16:	bound  edx,QWORD PTR [edi+edi*1]
  40be19:	iret   
  40be1a:	mov    al,ds:0xfa52d9cf
  40be1f:	std    
  40be20:	mov    cl,0xbb
  40be22:	shl    BYTE PTR ds:0x6117c0d5,cl
  40be28:	(bad)  
  40be2a:	std    
  40be2b:	fdivr  QWORD PTR [edx]
  40be2d:	inc    ebx
  40be2e:	imul   ebx,DWORD PTR [eax+0x405ca4a3],0xd1a1cbe5
  40be38:	retf   0xe399
  40be3b:	or     BYTE PTR [edi],dl
  40be3d:	into   
  40be3e:	fidiv  WORD PTR [ebp+0x43db3b1]
  40be44:	popa   
  40be45:	loop   0x40bdd4
  40be47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be48:	cli    
  40be49:	sbb    ebx,DWORD PTR [edx+edx*4+0x349ab7e6]
  40be50:	mov    bh,0xd0
  40be52:	push   eax
  40be53:	test   BYTE PTR [edi+0x1bccf220],al
  40be59:	inc    esp
  40be5a:	inc    ecx
  40be5b:	push   ecx
  40be5c:	jno    0x40bece
  40be5e:	imul   edi,ecx,0x2c58d3ff
  40be64:	mov    WORD PTR [edi],?
  40be66:	mov    esp,0x88fc214c
  40be6b:	jmp    0x4386:0xfc98b367
  40be72:	mov    bl,cl
  40be74:	fiadd  WORD PTR [esi+esi*8]
  40be77:	daa    
  40be78:	js     0x40bed6
  40be7a:	add    al,0x2a
  40be7c:	adc    eax,0x13ddbb6a
  40be81:	add    edi,DWORD PTR [esi+0x60]
  40be84:	nop
  40be85:	stos   BYTE PTR es:[edi],al
  40be86:	cdq    
  40be87:	and    BYTE PTR [esi+0x2c805c58],ch
  40be8d:	mov    WORD PTR [eax],?
  40be8f:	adc    dl,BYTE PTR [esi-0x13]
  40be92:	jge    0x40be89
  40be94:	jecxz  0x40bede
  40be96:	dec    edi
  40be97:	jmp    0x40be61
  40be99:	or     al,0x2a
  40be9b:	hlt    
  40be9c:	(bad)  
  40be9d:	rcr    ch,1
  40be9f:	adc    DWORD PTR [esi+0xb],0xffffffe1
  40bea3:	add    al,0x4e
  40bea5:	add    eax,0x428a2f62
  40beaa:	sbb    BYTE PTR [esi+ecx*8],bh
  40bead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beae:	fs int3 
  40beb0:	mov    bl,0x18
  40beb2:	aad    0x22
  40beb4:	xor    edi,DWORD PTR [ebp+0x31]
  40beb7:	push   0x866a496d
  40bebc:	sbb    ecx,DWORD PTR [eax]
  40bebe:	adc    esp,edx
  40bec0:	xchg   esi,eax
  40bec1:	push   cs
  40bec2:	sbb    eax,0x4d326e1b
  40bec7:	push   esp
  40bec8:	sbb    eax,0xdf427f3e
  40becd:	ret    0xe132
  40bed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bed1:	dec    DWORD PTR [eax-0x5d]
  40bed4:	dec    eax
  40bed5:	jb     0x40bea8
  40bed7:	es mov ecx,ecx
  40beda:	dec    eax
  40bedb:	adc    al,dh
  40bedd:	push   cs
  40bede:	xchg   esp,ebp
  40bee0:	retf   0x3da7
  40bee3:	enter  0xfb28,0x5e
  40bee7:	shl    BYTE PTR [edi+0x1f8efcc],cl
  40beed:	lods   al,BYTE PTR ds:[esi]
  40beee:	ins    DWORD PTR es:[edi],dx
  40beef:	ret    0xb1d7
  40bef2:	mov    ds:0x22c753d4,eax
  40bef7:	sub    DWORD PTR [edx+0x1],esi
  40befa:	pop    edx
  40befb:	mov    ebp,0x346d11f
  40bf00:	cwde   
  40bf01:	mov    ecx,0x95ccc9ad
  40bf06:	(bad)  
  40bf07:	sub    edi,eax
  40bf09:	rcl    DWORD PTR [ebx-0x5771f9d0],0xef
  40bf10:	arpl   cx,bp
  40bf12:	inc    edx
  40bf13:	xor    BYTE PTR [ebx+0x7879f6f8],dh
  40bf19:	push   ss
  40bf1a:	int3   
  40bf1b:	cdq    
  40bf1c:	(bad)  
  40bf1e:	xchg   ebx,eax
  40bf1f:	add    DWORD PTR ds:0x931f81bd,edi
  40bf25:	add    DWORD PTR ds:0xd1cd6cce,ebx
  40bf2b:	jnp    0x40bf18
  40bf2d:	imul   edx,DWORD PTR [edx],0x13
  40bf30:	dec    ecx
  40bf31:	xchg   edx,eax
  40bf32:	ret    
  40bf33:	out    0x9d,eax
  40bf35:	je     0x40bf3a
  40bf37:	not    BYTE PTR [ebx]
  40bf39:	into   
  40bf3a:	jne    0x40beff
  40bf3c:	mov    ds:0x32cb4704,eax
  40bf41:	pop    esp
  40bf42:	jmp    0x40bf4a
  40bf44:	neg    BYTE PTR [esi-0xa64e3cf]
  40bf4a:	add    eax,DWORD PTR [ecx]
  40bf4c:	loopne 0x40bed1
  40bf4e:	sbb    ah,bh
  40bf50:	enter  0x61f1,0x14
  40bf54:	in     eax,0x3d
  40bf56:	push   esi
  40bf57:	ins    BYTE PTR es:[edi],dx
  40bf58:	push   edx
  40bf59:	gs cmc 
  40bf5b:	scas   al,BYTE PTR es:[edi]
  40bf5c:	lds    ebp,FWORD PTR [edx+eax*2+0x25]
  40bf60:	adc    al,0x7b
  40bf62:	call   DWORD PTR [edi+0x40e24b6]
  40bf68:	test   al,0x91
  40bf6a:	push   es
  40bf6b:	stc    
  40bf6c:	outs   dx,DWORD PTR ds:[esi]
  40bf6d:	ins    BYTE PTR es:[edi],dx
  40bf6e:	test   dh,0xa
  40bf71:	into   
  40bf72:	sub    edi,DWORD PTR [esi-0xe]
  40bf75:	and    ebx,DWORD PTR [esi+0x18]
  40bf78:	leave  
  40bf79:	jl     0x40bf71
  40bf7b:	add    BYTE PTR [eax],bh
  40bf7d:	ja     0x40bfe6
  40bf7f:	cmp    al,0x29
  40bf81:	rcr    BYTE PTR [ebx-0x66],cl
  40bf84:	or     DWORD PTR [ebx-0x55],eax
  40bf87:	xchg   esi,eax
  40bf88:	jb     0x40bf8d
  40bf8a:	cmp    al,0x90
  40bf8c:	pop    edx
  40bf8d:	adc    ecx,ebx
  40bf8f:	loope  0x40bfcc
  40bf91:	es call 0x231a573e
  40bf97:	and    al,0x15
  40bf99:	enter  0xcecd,0x63
  40bf9d:	mov    ah,0x5a
  40bf9f:	jne    0x40bf8d
  40bfa1:	fwait
  40bfa2:	xchg   ebx,eax
  40bfa3:	jb     0x40bffd
  40bfa5:	cli    
  40bfa6:	and    ch,BYTE PTR [ecx-0x228f3be9]
  40bfac:	hlt    
  40bfad:	pop    esp
  40bfae:	mov    bl,0xc1
  40bfb0:	and    al,bh
  40bfb2:	inc    ebx
  40bfb3:	cmp    BYTE PTR [edx],cl
  40bfb5:	aad    0xd0
  40bfb7:	lods   eax,DWORD PTR ds:[esi]
  40bfb8:	outs   dx,BYTE PTR ds:[esi]
  40bfb9:	adc    DWORD PTR [ebx+0x57d14bde],ebx
  40bfbf:	push   ds
  40bfc0:	ficom  WORD PTR gs:[edx]
  40bfc3:	xchg   DWORD PTR [eax+ebx*2],esp
  40bfc6:	shl    DWORD PTR [eax-0x285c9c8f],cl
  40bfcc:	jno    0x40bfe0
  40bfce:	data16 gs data16 xchg di,ax
  40bfd3:	or     BYTE PTR [eax],0x4
  40bfd6:	cmp    dl,BYTE PTR [ecx-0x7d]
  40bfd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfda:	lea    eax,[esi-0x57]
  40bfdd:	out    0x11,al
  40bfdf:	sub    ecx,DWORD PTR [ebp+0x7d0a3ea2]
  40bfe5:	js     0x40c03c
  40bfe7:	mov    eax,DWORD PTR [edx+esi*4-0x2c]
  40bfeb:	(bad)
  40bfee:	es and al,0x17
  40bff1:	out    dx,al
  40bff2:	repnz fistp DWORD PTR [ebp-0x77]
  40bff6:	bound  edi,QWORD PTR [edx+ecx*2]
  40bff9:	xor    eax,0xc78bf032
  40bffe:	sar    BYTE PTR [esi],1
  40c000:	add    dl,cl
  40c002:	dec    eax
  40c003:	test   al,ah
  40c005:	loop   0x40c051
  40c007:	xor    ebx,DWORD PTR [esi+0x42e9a804]
  40c00d:	mov    ebp,DWORD PTR ds:0x56fe2215
  40c013:	js     0x40c014
  40c015:	and    esp,DWORD PTR [esi-0x3e]
  40c018:	imul   ecx,DWORD PTR [ebp-0x2],0xc1e5f2da
  40c01f:	push   0xffffffad
  40c021:	dec    esp
  40c022:	xchg   BYTE PTR [eax],bl
  40c024:	xor    cl,BYTE PTR es:[ecx+0x2b]
  40c028:	inc    ecx
  40c029:	dec    esp
  40c02a:	ret    
  40c02b:	icebp  
  40c02c:	(bad)  
  40c02e:	cmp    eax,0x5654cc5b
  40c033:	arpl   WORD PTR ds:0xa3032c,sp
  40c039:	dec    ebp
  40c03a:	js     0x40bff2
  40c03c:	inc    eax
  40c03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03e:	mov    al,ds:0x9b8e58ab
  40c043:	(bad)  
  40c044:	scas   eax,DWORD PTR es:[edi]
  40c045:	out    dx,al
  40c046:	sub    eax,0x7e8c199
  40c04b:	sbb    esi,edi
  40c04d:	aam    0x61
  40c04f:	adc    eax,0x21f285b3
  40c054:	dec    esi
  40c055:	sbb    eax,0x82b7c1b2
  40c05a:	cmp    al,0x72
  40c05c:	cmp    al,0x67
  40c05e:	mov    ch,0x12
  40c060:	cwde   
  40c061:	sbb    eax,DWORD PTR gs:[edi+ebx*8-0xee2f613]
  40c069:	xor    BYTE PTR [esi+0x73],ah
  40c06c:	mov    ch,0xdd
  40c06e:	mov    dh,0xdf
  40c070:	and    ecx,DWORD PTR [edi+0x91b0fe6]
  40c076:	sub    al,bh
  40c078:	clc    
  40c079:	inc    esi
  40c07a:	mov    eax,0xc730cdea
  40c07f:	add    esp,eax
  40c081:	and    DWORD PTR [eax-0x1f],esi
  40c084:	call   0x7369:0xa7a65209
  40c08b:	popf   
  40c08c:	sahf   
  40c08d:	and    DWORD PTR [eax],esi
  40c08f:	popf   
  40c090:	(bad)  
  40c091:	sbb    DWORD PTR ds:0x28c383ba,eax
  40c097:	je     0x40c09d
  40c099:	daa    
  40c09a:	inc    esi
  40c09b:	fild   QWORD PTR [ebx+ecx*2]
  40c09e:	pop    ds
  40c09f:	call   0x3ff487d3
  40c0a4:	outs   dx,DWORD PTR ds:[esi]
  40c0a5:	int    0x23
  40c0a7:	in     eax,dx
  40c0a8:	sbb    esp,ebp
  40c0aa:	pop    ecx
  40c0ab:	dec    esi
  40c0ac:	stos   BYTE PTR es:[edi],al
  40c0ad:	xor    DWORD PTR [ebx-0x50c5a8ad],edi
  40c0b3:	add    al,0x84
  40c0b5:	xor    eax,0x279b805c
  40c0ba:	aad    0xcd
  40c0bc:	cld    
  40c0bd:	cmp    al,0x3
  40c0bf:	fisttp WORD PTR [eax-0x18]
  40c0c3:	sub    DWORD PTR [ecx-0x4583bcad],edx
  40c0c9:	or     BYTE PTR [edx+0x7cb37545],ch
  40c0cf:	xchg   ebp,eax
  40c0d0:	mov    esi,DWORD PTR [edx+0x5e]
  40c0d3:	mov    al,ds:0x3fbf0386
  40c0d8:	add    edi,ecx
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rcl    al,1
  40c0ee:	jno    0x40c128
  40c0f0:	mov    cl,0xde
  40c0f2:	mov    bh,BYTE PTR [esi+0x7e]
  40c0f5:	jo     0x40c170
  40c0f7:	jle    0x40c177
  40c0f9:	frstor [edi+esi*8]
  40c0fc:	ja     0x40c0e6
  40c0fe:	and    ecx,DWORD PTR [eax+ebx*4+0x5d8518f6]
  40c105:	int3   
  40c106:	xchg   edx,eax
  40c107:	iret   
  40c108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c109:	stos   BYTE PTR es:[edi],al
  40c10a:	cmp    BYTE PTR [edi],ah
  40c10c:	imul   BYTE PTR [ebp-0x6a]
  40c10f:	iret   
  40c110:	cs jae 0x40c0da
  40c113:	fdiv   DWORD PTR [ecx-0x39e0e1c4]
  40c119:	mov    ebp,0x100ac26b
  40c11e:	mov    esp,0xfc3e125d
  40c123:	stos   BYTE PTR es:[edi],al
  40c124:	xchg   esp,eax
  40c125:	sbb    BYTE PTR [ecx],dl
  40c127:	add    esi,edi
  40c129:	stos   DWORD PTR es:[edi],eax
  40c12a:	and    DWORD PTR [esi],edi
  40c12c:	enter  0x52e7,0xb2
  40c130:	iret   
  40c131:	cmp    bh,BYTE PTR [ebp-0x29]
  40c134:	aas    
  40c135:	inc    esp
  40c136:	add    al,0xbf
  40c138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c139:	dec    ebx
  40c13a:	std    
  40c13b:	je     0x40c1a5
  40c13d:	jne    0x40c14a
  40c13f:	outs   dx,DWORD PTR ds:[esi]
  40c140:	ja     0x40c1af
  40c142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c143:	call   ebp
  40c145:	dec    BYTE PTR [ebx-0x7c]
  40c148:	pop    edx
  40c149:	mov    esi,0x63143fb0
  40c14e:	rcl    BYTE PTR [ebx-0x3425c8a0],0x8b
  40c155:	adc    BYTE PTR [ebp+0x4c],bh
  40c158:	jge    0x40c152
  40c15a:	dec    ebp
  40c15b:	shr    BYTE PTR [ebp+0x7c],1
  40c15e:	inc    ecx
  40c15f:	sbb    BYTE PTR ds:0xab410921,0x6c
  40c166:	dec    esp
  40c167:	inc    ebx
  40c168:	mov    cl,0x18
  40c16a:	out    0x21,al
  40c16c:	xor    DWORD PTR [edi-0x24],ebp
  40c16f:	mov    ds:0xdda99a30,al
  40c174:	xor    DWORD PTR [ebx],edx
  40c176:	mov    ebx,0xb23e7eb
  40c17b:	div    DWORD PTR [ebx+0x35791094]
  40c181:	lock call 0xf26b:0x96f97a8e
  40c189:	(bad)  
  40c18a:	fdiv   QWORD PTR [ebx-0x6dedf44]
  40c190:	mov    ch,0x4f
  40c192:	and    BYTE PTR es:[esi+ebx*1],bl
  40c196:	shl    BYTE PTR [eax],cl
  40c198:	mov    esi,0x961fe570
  40c19d:	(bad)  [esi-0x5a0eb287]
  40c1a3:	mov    ebx,0x5f43104
  40c1a8:	lds    ebp,FWORD PTR [ebp-0x8]
  40c1ab:	inc    esp
  40c1ac:	push   ebx
  40c1ad:	inc    edx
  40c1ae:	mov    ah,0x96
  40c1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b1:	xor    edi,DWORD PTR [eax-0x13]
  40c1b4:	test   DWORD PTR [ebx-0x629bafb5],0x23cfcfe5
  40c1be:	and    ah,BYTE PTR [ebp+0x3f2bb97]
  40c1c4:	test   DWORD PTR [esi+0x63],0x9028a684
  40c1cb:	xchg   esi,eax
  40c1cc:	ss out dx,eax
  40c1ce:	sub    BYTE PTR [edi],0x94
  40c1d1:	dec    ebx
  40c1d2:	fistp  QWORD PTR [esi+0x725fabeb]
  40c1d8:	mov    cs,WORD PTR [eax+0x7c]
  40c1db:	aam    0xd3
  40c1dd:	add    ecx,DWORD PTR [edi-0x73]
  40c1e0:	fdiv   DWORD PTR [eax]
  40c1e2:	and    ebp,DWORD PTR [ebp+0x33]
  40c1e5:	push   eax
  40c1e6:	xor    dl,BYTE PTR [ebx+0x4e]
  40c1e9:	push   ebx
  40c1ea:	and    DWORD PTR [edx-0x20abeb78],esi
  40c1f0:	xchg   WORD PTR [edx+0x4e7ca69b],dx
  40c1f7:	sbb    al,0xd7
  40c1f9:	xchg   ebx,eax
  40c1fa:	inc    edi
  40c1fb:	sbb    BYTE PTR [eax],al
  40c1fd:	sub    al,0xb
  40c1ff:	call   0xb287:0x26bbe825
  40c206:	push   edx
  40c207:	pop    eax
  40c208:	and    edx,DWORD PTR [eax]
  40c20a:	cmp    DWORD PTR [esi+0x25d0a706],0x51
  40c211:	hlt    
  40c212:	inc    eax
  40c213:	add    DWORD PTR [eax-0x22],esp
  40c216:	into   
  40c217:	test   al,0x87
  40c21a:	ss loop 0x40c19d
  40c21d:	cld    
  40c21e:	adc    DWORD PTR [ebx+0x78709a63],ebx
  40c224:	sbb    eax,0x48b556dc
  40c229:	repnz inc edi
  40c22b:	jle    0x40c1af
  40c22d:	sbb    DWORD PTR [esi-0x2c2603de],esp
  40c233:	lods   al,BYTE PTR ds:[esi]
  40c234:	fsubr  QWORD PTR [ebx]
  40c236:	and    al,0x45
  40c238:	mov    eax,ds:0x55379027
  40c23d:	cmp    eax,0x7156ddf7
  40c242:	repnz cli 
  40c244:	sbb    al,0xb3
  40c246:	jns    0x40c2b6
  40c248:	div    BYTE PTR [ebx-0x7c4b5db5]
  40c24e:	hlt    
  40c24f:	shl    bl,cl
  40c251:	mov    al,ds:0x50583ae6
  40c256:	xor    eax,0x8f710851
  40c25b:	mov    cl,0x81
  40c25d:	out    dx,eax
  40c25e:	jbe    0x40c271
  40c260:	and    edi,DWORD PTR [ecx+ebp*4-0x439ebaec]
  40c267:	inc    esi
  40c268:	xor    eax,0x551408dd
  40c26d:	adc    edx,DWORD PTR [ecx+0x64c3d56b]
  40c273:	fcmovb st,st(1)
  40c275:	daa    
  40c276:	out    dx,eax
  40c277:	cld    
  40c278:	arpl   WORD PTR [edi+ebp*4+0x58],cx
  40c27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27d:	mov    esp,0xd45038b8
  40c282:	sub    eax,0x306bf392
  40c287:	mov    ds:0x34a6c575,eax
  40c28c:	into   
  40c28d:	push   edx
  40c28e:	pop    ss
  40c28f:	mov    ds:0x2e14932b,eax
  40c294:	lock push 0x9d246fad
  40c29a:	pop    esp
  40c29b:	xchg   ebp,eax
  40c29c:	cwde   
  40c29d:	xchg   esi,eax
  40c29e:	cmc    
  40c29f:	jnp    0x40c2e1
  40c2a1:	pop    eax
  40c2a2:	fnstsw WORD PTR [edi]
  40c2a4:	les    ebx,FWORD PTR [ecx-0x11]
  40c2a7:	cmp    al,cl
  40c2a9:	scas   eax,DWORD PTR es:[edi]
  40c2aa:	daa    
  40c2ab:	inc    esi
  40c2ac:	xor    bl,dl
  40c2ae:	aas    
  40c2af:	mov    ecx,0x6e962ab9
  40c2b5:	loop   0x40c322
  40c2b7:	in     al,0x1f
  40c2b9:	(bad)  
  40c2ba:	adc    edi,edx
  40c2bc:	mov    esi,0x25205f19
  40c2c1:	sub    al,BYTE PTR [ebp-0x44]
  40c2c4:	int    0xb3
  40c2c6:	mov    bh,0x9c
  40c2c8:	dec    edx
  40c2c9:	or     DWORD PTR [ebp-0x28],ebx
  40c2cc:	ja     0x40c326
  40c2ce:	(bad)
  40c2d1:	fbstp  TBYTE PTR [eax-0x71]
  40c2d4:	bound  ebx,QWORD PTR [ebp-0x3e6631f1]
  40c2da:	jp     0x40c2e5
  40c2dc:	or     DWORD PTR [eax-0x4e],ebp
  40c2df:	sbb    BYTE PTR [eax+0xe],ah
  40c2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e3:	mov    edx,0x2affb166
  40c2e8:	iret   
  40c2e9:	dec    ecx
  40c2ea:	fdivr  QWORD PTR [edi-0x74]
  40c2ed:	add    BYTE PTR [ebp-0x60],ch
  40c2f0:	out    0xcd,eax
  40c2f2:	js     0x40c2b2
  40c2f4:	inc    eax
  40c2f5:	ss adc eax,0xe86f82c1
  40c2fb:	push   es
  40c2fc:	addr16 aam 0xda
  40c2ff:	sbb    edx,DWORD PTR [esi]
  40c301:	xor    DWORD PTR [esi-0x8],eax
  40c304:	xor    esi,DWORD PTR [ebp+edi*4+0x70]
  40c308:	sti    
  40c309:	xlat   BYTE PTR ds:[ebx]
  40c30a:	jmp    0x40c2ce
  40c30c:	fsubp  st(6),st
  40c30e:	jp     0x40c2d9
  40c310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c311:	ror    DWORD PTR [ecx+0x7a],cl
  40c314:	ror    DWORD PTR [bp+si+0x39],cl
  40c318:	out    0xcf,eax
  40c31a:	dec    edi
  40c31b:	dec    ebx
  40c31c:	aad    0x59
  40c31e:	pop    edi
  40c31f:	mov    dl,0xde
  40c321:	es daa 
  40c323:	ja     0x40c2e1
  40c325:	sub    eax,0xf56b3156
  40c32a:	inc    ebx
  40c32b:	mov    bl,0x6d
  40c32d:	scas   al,BYTE PTR es:[edi]
  40c32e:	mov    cl,BYTE PTR [edi]
  40c330:	xchg   ebp,eax
  40c331:	cmc    
  40c332:	dec    ecx
  40c333:	js     0x40c2d4
  40c335:	xchg   ebp,eax
  40c336:	loop   0x40c369
  40c338:	stos   DWORD PTR es:[edi],eax
  40c339:	out    0xba,al
  40c33b:	or     BYTE PTR [esi-0x755a402f],al
  40c341:	dec    ebp
  40c342:	ins    DWORD PTR es:[edi],dx
  40c343:	ret    
  40c344:	repz mov bl,0x9e
  40c347:	in     eax,dx
  40c348:	xchg   ebx,eax
  40c349:	pop    es
  40c34a:	dec    ecx
  40c34b:	inc    BYTE PTR [ecx]
  40c34d:	sbb    eax,0x133c5aa6
  40c352:	retf   0x7a2c
  40c355:	inc    edi
  40c356:	xor    eax,0x4388c15e
  40c35b:	mov    cl,0x86
  40c35d:	push   ebx
  40c35e:	shl    BYTE PTR [ebx+0x2f],0xfa
  40c362:	mov    eax,0xf3d1fa06
  40c367:	loope  0x40c3db
  40c369:	jmp    0xaa09:0xe3af2ef1
  40c370:	xchg   esp,eax
  40c371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c372:	push   cs
  40c373:	inc    edx
  40c374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c375:	cmp    DWORD PTR [eax-0x26],0x17
  40c379:	rcr    esp,cl
  40c37b:	push   0xffffffc4
  40c37d:	mov    dl,0x59
  40c37f:	mov    ds,WORD PTR [esi]
  40c381:	imul   eax,DWORD PTR [edi-0x63],0x6b
  40c385:	jg     0x40c333
  40c387:	jecxz  0x40c3d8
  40c389:	(bad)  
  40c38a:	(bad)  [ebx]
  40c38c:	enter  0x2759,0xd
  40c390:	jo     0x40c39f
  40c392:	jbe    0x40c3e9
  40c394:	icebp  
  40c395:	pop    ebx
  40c396:	mov    ebx,DWORD PTR [edi-0x3c]
  40c399:	retf   0x9a78
  40c39c:	and    al,0xd6
  40c39e:	icebp  
  40c39f:	inc    esp
  40c3a0:	cdq    
  40c3a1:	jns    0x40c32b
  40c3a3:	out    0x77,eax
  40c3a5:	and    esi,DWORD PTR [esi+0x13]
  40c3a8:	psrad  mm4,mm7
  40c3ab:	pop    eax
  40c3ac:	leave  
  40c3ad:	xlat   BYTE PTR ds:[ebx]
  40c3ae:	xor    DWORD PTR [eax-0x31],ebx
  40c3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3b2:	xchg   esi,eax
  40c3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b4:	jmp    0x40c3fc
  40c3b6:	pop    ds
  40c3b7:	push   ecx
  40c3b8:	push   0xd
  40c3ba:	cmp    bh,dh
  40c3bc:	push   0xa5e886c1
  40c3c1:	out    0xe7,eax
  40c3c3:	xlat   BYTE PTR ds:[ebx]
  40c3c4:	add    BYTE PTR [eax],al
  40c3c6:	ffree  st(2)
  40c3c8:	cmp    DWORD PTR [esi+edx*8-0x28],eax
  40c3cc:	out    0xca,eax
  40c3ce:	mov    al,ds:0x8eef859f
  40c3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d4:	adc    ah,BYTE PTR [edi-0xa79fc41]
  40c3da:	xor    dh,al
  40c3dc:	cdq    
  40c3dd:	cmp    al,bl
  40c3df:	or     DWORD PTR [ebp-0x5c],esi
  40c3e2:	ins    DWORD PTR es:[edi],dx
  40c3e3:	sub    ecx,esp
  40c3e5:	aam    0x82
  40c3e7:	popa   
  40c3e8:	xor    bl,al
  40c3ea:	cmc    
  40c3eb:	cmp    DWORD PTR [edi],esp
  40c3ed:	mov    dh,0x5b
  40c3ef:	mov    ch,BYTE PTR [ebx+0x3e]
  40c3f2:	nop
  40c3f3:	sti    
  40c3f4:	push   esi
  40c3f5:	es push edi
  40c3f7:	cmp    dl,bl
  40c3f9:	arpl   WORD PTR [esi],ax
  40c3fb:	(bad)  
  40c3fc:	iret   
  40c3fd:	sbb    bh,BYTE PTR [edx]
  40c3ff:	adc    dh,BYTE PTR [edx]
  40c401:	cs inc edi
  40c403:	repnz out dx,al
  40c405:	ja     0x40c3c2
  40c407:	bound  esi,QWORD PTR [edx]
  40c409:	je     0x40c487
  40c40b:	cmp    BYTE PTR [ebx+0x2a],ah
  40c40e:	loope  0x40c393
  40c410:	adc    DWORD PTR [edx+0x21],esi
  40c413:	ja     0x40c407
  40c415:	add    esi,ebp
  40c417:	sar    dh,0x93
  40c41a:	jne    0x40c499
  40c41c:	dec    esp
  40c41d:	pusha  
  40c41e:	sbb    bl,BYTE PTR [eax-0x8]
  40c421:	mov    ebx,0x2ed6f7ea
  40c426:	ret    0x9601
  40c429:	or     eax,0x9282feeb
  40c42e:	es inc esi
  40c430:	push   ebp
  40c431:	xchg   esp,eax
  40c432:	clc    
  40c433:	retf   
  40c434:	rol    edi,1
  40c436:	lods   eax,DWORD PTR ds:[esi]
  40c437:	(bad)  
  40c438:	cmp    bl,BYTE PTR [ebx]
  40c43a:	sbb    edx,esi
  40c43c:	shl    BYTE PTR [edx],1
  40c43e:	dec    eax
  40c43f:	inc    ecx
  40c440:	lock add ch,dh
  40c443:	or     eax,0x16b6ad7
  40c448:	or     DWORD PTR [eax+0x9],0xffffff8b
  40c44c:	sbb    edi,ecx
  40c44e:	in     al,0xe5
  40c450:	aam    0xe3
  40c452:	fmul   st,st(1)
  40c454:	arpl   dx,cx
  40c456:	xchg   esi,eax
  40c457:	sub    DWORD PTR [ecx-0x18],esi
  40c45a:	inc    esp
  40c45b:	int3   
  40c45c:	daa    
  40c45d:	mov    edx,0x7e6e561b
  40c462:	mov    dh,0xf5
  40c464:	push   ds
  40c465:	xor    al,0x81
  40c467:	test   eax,0xe18ee79
  40c46c:	mov    dl,0x75
  40c46e:	test   al,0xf0
  40c470:	fidiv  WORD PTR [ecx+esi*2]
  40c473:	push   edx
  40c474:	test   DWORD PTR [edi],ebp
  40c476:	jbe    0x40c402
  40c478:	xor    DWORD PTR [ecx+ebp*4-0x2f],ebp
  40c47c:	cwde   
  40c47d:	(bad)  
  40c47e:	mov    bl,0xd1
  40c480:	add    BYTE PTR [edx+ebp*8],ah
  40c483:	cmp    esi,ecx
  40c485:	out    dx,eax
  40c486:	mov    eax,0x2ac575cf
  40c48b:	mov    bl,0x2a
  40c48d:	xchg   ecx,eax
  40c48e:	test   al,0x8d
  40c490:	sti    
  40c491:	cmp    eax,0x1d25dbb3
  40c496:	sub    BYTE PTR [eax],dl
  40c498:	leave  
  40c499:	(bad)  
  40c49a:	cld    
  40c49b:	mov    bh,0x83
  40c49d:	adc    ch,BYTE PTR [edx-0x27]
  40c4a0:	cmp    ebx,DWORD PTR [edi]
  40c4a2:	in     eax,0xa3
  40c4a4:	sbb    al,0xc
  40c4a6:	jno    0x40c496
  40c4a8:	dec    esi
  40c4a9:	das    
  40c4aa:	add    eax,0xd92f230a
  40c4af:	mov    DWORD PTR [ebp+0x6cd57576],esp
  40c4b5:	fmul   DWORD PTR [edx-0x5c]
  40c4b8:	adc    bh,bh
  40c4ba:	icebp  
  40c4bb:	es pop es
  40c4bd:	mov    esp,0xfd48411e
  40c4c2:	sub    BYTE PTR [esi-0x604bf433],0xe2
  40c4c9:	push   cs
  40c4ca:	test   DWORD PTR [edx-0x1b],eax
  40c4cd:	sub    DWORD PTR [ebp+0x39],edx
  40c4d0:	mov    bh,0xe5
  40c4d2:	jle    0x40c4fa
  40c4d4:	iret   
  40c4d5:	mov    al,0x2c
  40c4d7:	mov    bl,0x90
  40c4d9:	retf   0x87e6
  40c4dc:	pop    ss
  40c4dd:	mov    ebx,DWORD PTR [esi+edx*1]
  40c4e0:	xlat   BYTE PTR ds:[ebx]
  40c4e1:	jns    0x40c50f
  40c4e3:	and    esi,DWORD PTR [esi-0x72efed5d]
  40c4e9:	dec    edi
  40c4ea:	stc    
  40c4eb:	faddp  st(5),st
  40c4ed:	mov    edx,0xb177d678
  40c4f2:	push   eax
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	pop    ss
  40c540:	add    al,0x4
  40c542:	xlat   BYTE PTR ds:[ebx]
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	push   ds
  40c54c:	call   0xff18:0xc6fb2170
  40c553:	rol    DWORD PTR ds:0xc5ceaf95,0x49
  40c55a:	sub    eax,DWORD PTR [edx]
  40c55c:	ins    DWORD PTR es:[edi],dx
  40c55d:	and    BYTE PTR [edx],cl
  40c55f:	jl     0x40c532
  40c561:	mov    WORD PTR [ecx+eax*4+0x383d1213],es
  40c568:	cs mov edi,ds
  40c56b:	sub    edi,esp
  40c56d:	push   0xea0622f1
  40c572:	mov    bl,0xf2
  40c574:	rcl    DWORD PTR fs:[edx+0x1b],0x43
  40c579:	hlt    
  40c57a:	cld    
  40c57b:	jns    0x40c5a6
  40c57d:	push   eax
  40c57e:	mov    edi,0xd5874ba9
  40c583:	inc    ebx
  40c584:	add    al,0x10
  40c586:	push   eax
  40c587:	call   0x7c8159c1
  40c58c:	imul   edi,DWORD PTR [ecx],0x169dd6d8
  40c592:	mov    ecx,0x7adc65af
  40c597:	mov    eax,0x5ce247f5
  40c59c:	aaa    
  40c59d:	jmp    0x4bfe:0xaa8d2efa
  40c5a4:	mov    al,0xd2
  40c5a6:	xlat   BYTE PTR ds:[ebx]
  40c5a7:	mov    dh,0x9c
  40c5a9:	add    DWORD PTR [edi+ebx*2+0x5a],esp
  40c5ad:	mov    BYTE PTR [ebx],ch
  40c5af:	jmp    0x931ed284
  40c5b4:	inc    ecx
  40c5b5:	daa    
  40c5b6:	sub    al,0x1
  40c5b8:	or     BYTE PTR [edx-0x48],ah
  40c5bb:	ror    BYTE PTR [esi-0x80],cl
  40c5be:	mov    edi,0xa5da2d4f
  40c5c3:	push   ss
  40c5c4:	mov    ah,0xa8
  40c5c6:	sar    DWORD PTR [ecx+0x23a392a3],cl
  40c5cc:	test   DWORD PTR [ecx-0x6d],edi
  40c5cf:	pop    esp
  40c5d0:	mov    ds:0xd6dee355,eax
  40c5d5:	add    ebx,esi
  40c5d7:	adc    ah,BYTE PTR [esi-0x33455647]
  40c5dd:	es ds jle 0x40c656
  40c5e1:	nop
  40c5e2:	pushf  
  40c5e3:	add    edx,DWORD PTR [eax+0x3235e656]
  40c5e9:	xor    edx,DWORD PTR [edi]
  40c5eb:	in     eax,dx
  40c5ec:	or     DWORD PTR [edi+0x2],ecx
  40c5ef:	xor    eax,0x5c3a9e7b
  40c5f4:	jo     0x40c5ec
  40c5f6:	xchg   esp,eax
  40c5f7:	lods   eax,DWORD PTR ds:[esi]
  40c5f8:	push   0x21e160d4
  40c5fd:	cdq    
  40c5fe:	push   ds
  40c5ff:	stc    
  40c600:	jl     0x40c59c
  40c602:	mov    al,0xb6
  40c604:	pop    ebx
  40c605:	cmp    BYTE PTR [esi],ch
  40c607:	out    dx,eax
  40c608:	cli    
  40c609:	mov    ah,0x50
  40c60b:	push   edx
  40c60c:	mov    BYTE PTR [eax+0x7e0cc5d1],al
  40c612:	outs   dx,DWORD PTR ds:[esi]
  40c613:	cmc    
  40c614:	or     edx,DWORD PTR [ebp+0x4]
  40c617:	pop    edx
  40c618:	pop    esp
  40c619:	shr    BYTE PTR [edi+0x3f4203cb],0x79
  40c620:	fstp   DWORD PTR [edi+0x379228fe]
  40c626:	and    ch,cl
  40c628:	pop    ebx
  40c629:	or     dl,ch
  40c62b:	retf   0xc4dd
  40c62e:	and    edx,DWORD PTR [ebp+0x66422bae]
  40c634:	jg     0x40c5e9
  40c636:	inc    esi
  40c637:	ins    DWORD PTR es:[edi],dx
  40c638:	lods   eax,DWORD PTR ds:[esi]
  40c639:	add    eax,0x73bc769e
  40c63e:	into   
  40c63f:	xchg   ah,bh
  40c641:	loopne 0x40c5e4
  40c643:	xchg   BYTE PTR [ecx],ah
  40c645:	push   cs
  40c646:	adc    esi,DWORD PTR [esi]
  40c648:	mov    esi,0x841633fe
  40c64d:	push   edi
  40c64e:	mov    bl,0x9d
  40c650:	mov    ah,cl
  40c652:	cmp    eax,DWORD PTR [edx]
  40c654:	loope  0x40c63a
  40c656:	sbb    DWORD PTR [edi],ebx
  40c658:	push   eax
  40c659:	(bad)  
  40c65a:	xor    al,0x53
  40c65c:	xchg   esi,eax
  40c65d:	pop    ebp
  40c65e:	popf   
  40c65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c660:	outs   dx,BYTE PTR ds:[esi]
  40c661:	xor    bh,BYTE PTR [eax+0x4e]
  40c664:	push   es
  40c665:	adc    BYTE PTR ds:0xbd401436,ch
  40c66b:	jbe    0x40c6d4
  40c66d:	ja     0x40c676
  40c66f:	sub    BYTE PTR [ecx],bl
  40c671:	fnstsw ax
  40c673:	rcl    BYTE PTR [edi+0x75],cl
  40c676:	sub    eax,eax
  40c678:	iret   
  40c679:	or     bl,BYTE PTR [edx]
  40c67b:	pop    ebp
  40c67c:	or     DWORD PTR [eax+ebp*8],ecx
  40c67f:	fs out 0xde,eax
  40c682:	pop    ebp
  40c683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c684:	stos   DWORD PTR es:[edi],eax
  40c685:	push   eax
  40c686:	xlat   BYTE PTR ds:[ebx]
  40c687:	cmp    esp,ebx
  40c689:	in     eax,dx
  40c68a:	jo     0x40c65f
  40c68c:	add    cl,bl
  40c68e:	inc    edi
  40c68f:	jmp    0x40c6fb
  40c691:	jo     0x40c6e6
  40c693:	scas   al,BYTE PTR es:[edi]
  40c694:	sub    bl,ch
  40c696:	or     dl,BYTE PTR [ebp-0x1d658738]
  40c69c:	bound  esp,QWORD PTR [edi-0x471a88d8]
  40c6a2:	shl    dl,cl
  40c6a4:	sti    
  40c6a5:	loopne 0x40c63e
  40c6a7:	mov    esi,0x7711df63
  40c6ac:	js     0x40c64f
  40c6ae:	fst    QWORD PTR [eax+0x79]
  40c6b1:	out    0x6,eax
  40c6b3:	add    BYTE PTR [edx+ecx*4-0x1f6872b5],ch
  40c6ba:	cmp    ebp,DWORD PTR [ebx-0x3ad12094]
  40c6c0:	pop    ebp
  40c6c1:	xor    DWORD PTR [edi],ebp
  40c6c3:	sbb    dh,BYTE PTR [esp+eax*8-0x1060c677]
  40c6ca:	or     DWORD PTR [eax+0x659885cb],0x55
  40c6d1:	inc    esp
  40c6d2:	xor    al,0xb4
  40c6d4:	stos   BYTE PTR es:[edi],al
  40c6d5:	cdq    
  40c6d6:	sbb    DWORD PTR [esi],0xa81d8664
  40c6dc:	dec    eax
  40c6dd:	dec    edx
  40c6de:	adc    al,0x9
  40c6e0:	ret    
  40c6e1:	aad    0xab
  40c6e3:	fadd   QWORD PTR [ebp-0x5bcc23d5]
  40c6e9:	pop    edx
  40c6ea:	(bad)  
  40c6eb:	xor    al,0x21
  40c6ed:	lock jecxz 0x40c6a5
  40c6f0:	aaa    
  40c6f1:	inc    esi
  40c6f2:	add    al,0x11
  40c6f4:	retf   0x6510
  40c6f7:	pop    edx
  40c6f8:	mov    ah,al
  40c6fa:	jmp    0x9668:0x47f28e93
  40c701:	push   eax
  40c702:	mov    BYTE PTR [edi+edx*8],dh
  40c705:	jae    0x40c740
  40c707:	cdq    
  40c708:	pop    edx
  40c709:	dec    esi
  40c70a:	jno    0x40c6bd
  40c70c:	add    eax,0xef7ab113
  40c711:	rcl    BYTE PTR ds:0x5e67a61e,0x30
  40c718:	(bad)  
  40c719:	jecxz  0x40c76e
  40c71b:	jecxz  0x40c719
  40c71d:	stc    
  40c71e:	push   cs
  40c71f:	enter  0x6ece,0xed
  40c723:	fxch   st(0)
  40c725:	mov    BYTE PTR [ebx],0x3a
  40c728:	(bad)  
  40c729:	clc    
  40c72a:	test   BYTE PTR [eiz*8-0x5f3d8164],0x65
  40c732:	xor    ecx,DWORD PTR [eax]
  40c734:	(bad)  
  40c735:	mov    dl,0xe4
  40c737:	mov    edi,0x21f06adf
  40c73c:	sbb    dl,BYTE PTR [edx+0x74eb427f]
  40c742:	xor    al,0xa0
  40c744:	push   ebp
  40c745:	cmp    BYTE PTR [eax-0x7e],ah
  40c748:	sbb    esp,DWORD PTR [eax+0x153d88e1]
  40c74e:	repnz xchg esp,eax
  40c750:	aas    
  40c751:	test   al,0x23
  40c753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c754:	push   esp
  40c755:	arpl   WORD PTR [ebp-0xb686e0d],si
  40c75b:	in     eax,0xb8
  40c75d:	mov    ecx,0xb370175e
  40c762:	or     DWORD PTR [edx+ebx*4-0x6ce6a31a],ebx
  40c769:	push   ebx
  40c76a:	jae    0x40c772
  40c76c:	xor    ebx,DWORD PTR [ebx+0x1a68d9a4]
  40c772:	mov    ch,0x35
  40c774:	push   ds
  40c775:	lock jg 0x40c726
  40c778:	or     eax,0xffd884b7
  40c77d:	push   cs
  40c77e:	add    al,0xb0
  40c780:	xchg   ebp,eax
  40c781:	jae    0x40c745
  40c783:	xor    eax,0xc490ec05
  40c788:	mov    ds:0x6bd6f1ab,eax
  40c78d:	imul   ecx,ecx,0x73
  40c790:	sbb    esi,0xffffffb7
  40c793:	lea    ebx,[ebp*2+0x5e69e64d]
  40c79a:	xor    edi,eax
  40c79c:	add    BYTE PTR [edx],0xdf
  40c79f:	mov    ds:0x288e75dc,al
  40c7a4:	or     BYTE PTR [ebx],cl
  40c7a6:	cwde   
  40c7a7:	jl     0x40c7f3
  40c7a9:	dec    edx
  40c7aa:	mov    bl,0x13
  40c7ac:	pusha  
  40c7ad:	sub    esi,DWORD PTR [esi]
  40c7af:	mov    dl,0x4f
  40c7b1:	jbe    0x40c808
  40c7b3:	cwde   
  40c7b4:	das    
  40c7b5:	mov    ebp,0xb3efbb20
  40c7ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7bb:	jl     0x40c7b4
  40c7bd:	xlat   BYTE PTR ds:[ebx]
  40c7be:	dec    eax
  40c7bf:	push   ds
  40c7c0:	pop    edi
  40c7c1:	outs   dx,DWORD PTR ds:[esi]
  40c7c3:	mov    ss,edx
  40c7c5:	arpl   si,si
  40c7c7:	(bad)  
  40c7c9:	and    BYTE PTR [ebx],cl
  40c7cb:	in     al,dx
  40c7cc:	in     eax,0xcb
  40c7ce:	sub    al,0x9
  40c7d0:	rcr    BYTE PTR [ebx-0x5a],cl
  40c7d3:	fnstenv [eax+ecx*1]
  40c7d6:	aas    
  40c7d7:	cmp    edx,DWORD PTR [edi-0x7ae402d6]
  40c7dd:	push   es
  40c7de:	or     BYTE PTR [ebx+0x61],dh
  40c7e1:	pop    esi
  40c7e2:	inc    esi
  40c7e3:	mov    ebp,0x71b13265
  40c7e8:	push   esi
  40c7e9:	les    edi,FWORD PTR [ebx-0x60]
  40c7ec:	jb     0x40c7ad
  40c7ee:	rcl    edx,1
  40c7f0:	ror    DWORD PTR [ecx],0x6c
  40c7f3:	mov    ebp,0xef474483
  40c7f8:	xor    DWORD PTR [esi-0x2937fa86],esp
  40c7fe:	sbb    DWORD PTR [ebx+0x6f],ebp
  40c801:	(bad)  
  40c802:	adc    DWORD PTR [ebx],ebp
  40c804:	xor    eax,0x666a7203
  40c809:	xchg   edx,eax
  40c80a:	xor    eax,0xd082db1
  40c80f:	pushf  
  40c810:	add    BYTE PTR [edx],0x5a
  40c813:	or     ebp,eax
  40c815:	or     bl,ah
  40c817:	test   ecx,edx
  40c819:	imul   ebx,DWORD PTR [ecx+0x38],0x3ab057c3
  40c820:	stos   DWORD PTR es:[edi],eax
  40c821:	lods   al,BYTE PTR ds:[esi]
  40c822:	in     eax,0x5f
  40c824:	xlat   BYTE PTR ds:[ebx]
  40c825:	xchg   esp,eax
  40c826:	push   ss
  40c827:	outs   dx,DWORD PTR ds:[esi]
  40c828:	xor    ebp,DWORD PTR [edi]
  40c82a:	pop    esp
  40c82b:	pop    esp
  40c82c:	jo     0x40c852
  40c82e:	adc    eax,ebp
  40c830:	or     BYTE PTR [ebx-0x5c],ch
  40c833:	ss add al,0x2d
  40c836:	addr16 ret 
  40c838:	add    esp,DWORD PTR [ebp-0x24]
  40c83b:	dec    esi
  40c83c:	mov    BYTE PTR [edx+0x2d7f8058],bl
  40c842:	dec    eax
  40c843:	push   ss
  40c844:	push   cs
  40c845:	daa    
  40c846:	pop    edx
  40c847:	mov    BYTE PTR [ecx+0x6d],ch
  40c84a:	js     0x40c7f9
  40c84c:	sbb    al,0xb4
  40c84e:	cmp    edx,DWORD PTR [ecx+esi*4-0x7f]
  40c852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c853:	pop    ebx
  40c854:	add    esi,DWORD PTR [ebx+ebx*4-0x3b98391a]
  40c85b:	mov    ch,0x7c
  40c85d:	push   esi
  40c85e:	call   0x3d1f:0x8ab26964
  40c865:	inc    edi
  40c866:	ss pop esi
  40c868:	mov    dl,0xd5
  40c86a:	jns    0x40c898
  40c86c:	xchg   ebx,eax
  40c86d:	or     BYTE PTR [ebx],ah
  40c86f:	xchg   ebx,eax
  40c870:	xsaves [ecx]
  40c873:	scas   eax,DWORD PTR es:[edi]
  40c874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c875:	rcr    DWORD PTR [edi+0x2],cl
  40c878:	fcom   QWORD PTR [esi+eax*4-0x6231934f]
  40c87f:	xchg   ecx,eax
  40c880:	sub    BYTE PTR [esi+0x22],al
  40c883:	cmc    
  40c884:	pop    esp
  40c885:	mov    al,BYTE PTR [ebx-0x6e]
  40c888:	mov    dl,0xce
  40c88a:	call   0x528bf6b3
  40c88f:	push   esi
  40c890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c891:	sbb    edx,DWORD PTR [ebp-0x3b]
  40c894:	bound  esi,QWORD PTR [ecx+0x43]
  40c897:	dec    esi
  40c898:	or     DWORD PTR [eax],0x4311f1cf
  40c89e:	fnstenv [eax]
  40c8a0:	xchg   DWORD PTR [eax],esi
  40c8a2:	out    0x96,eax
  40c8a4:	jne    0x40c918
  40c8a6:	or     DWORD PTR [ecx-0x4c],ebx
  40c8a9:	xchg   ebx,eax
  40c8aa:	or     bl,ah
  40c8ac:	jbe    0x40c8a6
  40c8ae:	cmp    DWORD PTR [edi+0x3d],0xffffffd8
  40c8b2:	sub    ah,dl
  40c8b4:	aaa    
  40c8b5:	push   edx
  40c8b6:	xchg   edi,eax
  40c8b7:	cmp    bh,dl
  40c8b9:	and    DWORD PTR [ebx+esi*2+0x2c],0xffffffd6
  40c8be:	mov    cl,0x71
  40c8c0:	jne    0x40c8f8
  40c8c2:	mov    ecx,0xdcd21c89
  40c8c7:	vmwrite edi,DWORD PTR [ebx-0x500a9855]
  40c8ce:	cmp    al,BYTE PTR [esi+0x5b]
  40c8d1:	sbb    al,0xb5
  40c8d3:	imul   eax,DWORD PTR [esi],0xc0c88788
  40c8d9:	rcr    DWORD PTR [esi+0x418cd3de],0x5d
  40c8e0:	xor    al,0xdf
  40c8e2:	repnz mov dl,0x58
  40c8e5:	(bad)  
  40c8e6:	mov    ebp,0xad20c874
  40c8eb:	lds    eax,FWORD PTR [ebx+0xf]
  40c8ee:	xchg   ecx,eax
  40c8ef:	add    dl,BYTE PTR [eax-0x4a]
  40c8f2:	sbb    edi,ebx
  40c8f4:	adc    eax,0xf15cebca
  40c8f9:	cmp    BYTE PTR [edx],ah
  40c8fb:	push   bp
  40c8fd:	dec    esp
  40c8fe:	xlat   BYTE PTR ds:[ebx]
  40c8ff:	dec    ebp
  40c900:	xchg   DWORD PTR [eax],ebp
  40c902:	pop    eax
  40c903:	(bad)  
  40c904:	(bad)  
  40c905:	int    0xdf
  40c907:	mov    ebx,0x8412d67b
  40c90c:	adc    eax,0x4a21f785
  40c911:	mov    eax,ds:0xab8b9ce6
  40c916:	mov    al,ds:0x29f83f6f
  40c91b:	retf   0x729
  40c91e:	loope  0x40c8d8
  40c920:	push   ecx
  40c921:	pusha  
  40c922:	xchg   edi,eax
  40c923:	loop   0x40c94f
  40c925:	es xchg esi,eax
  40c927:	ins    BYTE PTR es:[edi],dx
  40c928:	(bad)  
  40c929:	sahf   
  40c92a:	mov    ah,0x37
  40c92c:	inc    edx
  40c92d:	and    al,0xfc
  40c92f:	arpl   cx,di
  40c931:	jb     0x40c919
  40c933:	jle    0x40c8c9
  40c935:	sub    esp,0x927fca7e
  40c93b:	dec    esi
  40c93c:	lods   al,BYTE PTR ds:[esi]
  40c93d:	shr    bh,cl
  40c93f:	fcom   DWORD PTR [eax]
  40c941:	and    ah,BYTE PTR [edx]
  40c943:	clc    
  40c944:	fwait
  40c945:	add    edx,DWORD PTR [ebp-0x14]
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	cvtpi2ps xmm1,QWORD PTR [ecx-0x7c]
  40c9a1:	inc    esp
  40c9a2:	retf   0x7e92
  40c9a5:	jle    0x40ca17
  40c9a7:	jns    0x40ca27
  40c9a9:	jle    0x40c9de
  40c9ab:	mov    esp,edi
  40c9ad:	cwde   
  40c9ae:	test   eax,0xb654a93a
  40c9b3:	fsub   DWORD PTR [eax+0xf6b61e2]
  40c9b9:	xor    DWORD PTR [ebp-0x3b],ebp
  40c9bc:	pushf  
  40c9bd:	sub    eax,0xdf5877cf
  40c9c2:	(bad)  
  40c9c3:	iret   
  40c9c4:	in     eax,dx
  40c9c5:	mov    esp,0x8d7ac1b9
  40c9ca:	sub    al,ah
  40c9cc:	jne    0x40c954
  40c9ce:	push   esp
  40c9cf:	sbb    BYTE PTR [eax-0x7ad871b4],ch
  40c9d5:	xor    ebx,DWORD PTR [edi+ebp*8-0x7f]
  40c9d9:	lds    ebx,FWORD PTR [ebp+eax*2+0x1a]
  40c9dd:	jle    0x40c9fd
  40c9df:	xchg   esi,eax
  40c9e0:	enter  0x7ebe,0xa1
  40c9e4:	pop    edi
  40c9e5:	mov    ds:0x17a1bc63,eax
  40c9ea:	mov    al,ds:0x29e2eb08
  40c9ef:	fdiv   QWORD PTR [ebx-0x47a99d2e]
  40c9f5:	test   al,0x33
  40c9f7:	push   esi
  40c9f8:	fidivr WORD PTR [ebp+edx*1-0x63]
  40c9fc:	mov    WORD PTR [ebx-0x4326eca6],?
  40ca02:	clc    
  40ca03:	jbe    0x40c9f7
  40ca05:	sbb    edi,DWORD PTR [esp+edx*2-0x26cc3c46]
  40ca0c:	jnp    0x40ca74
  40ca0e:	(bad)  
  40ca0f:	add    DWORD PTR [esi+0x5b4f6348],0xfffffffc
  40ca16:	xchg   esp,eax
  40ca17:	rcl    BYTE PTR [edi-0x1b],0x60
  40ca1b:	jb     0x40c9aa
  40ca1d:	mov    WORD PTR [edi+esi*2],gs
  40ca20:	sahf   
  40ca21:	xor    ah,dh
  40ca23:	cli    
  40ca24:	loope  0x40ca0d
  40ca26:	ja     0x40ca96
  40ca28:	idiv   edi
  40ca2a:	add    BYTE PTR [ebx],0x6d
  40ca2d:	bound  edi,QWORD PTR [esi+0x4f508387]
  40ca33:	mov    al,0x56
  40ca35:	sar    bl,0x7b
  40ca38:	fdivr  DWORD PTR [ebx]
  40ca3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca3b:	mov    edx,0x72df33ad
  40ca40:	imul   esi,DWORD PTR [ebx-0xcf1f670],0xffffffc3
  40ca47:	sbb    BYTE PTR [ebp-0xd03c08b],cl
  40ca4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4e:	test   al,cl
  40ca50:	in     eax,dx
  40ca51:	xchg   ebp,eax
  40ca52:	arpl   WORD PTR es:[ecx-0x3052f8f],sp
  40ca59:	jge    0x40ca3f
  40ca5b:	xor    eax,0x4efa5f97
  40ca60:	or     ch,bh
  40ca62:	push   es
  40ca63:	out    dx,al
  40ca64:	mov    ah,0x4f
  40ca66:	shr    DWORD PTR [ebx],cl
  40ca68:	js     0x40ca0a
  40ca6a:	pop    esi
  40ca6b:	fwait
  40ca6c:	clc    
  40ca6d:	call   0xebd874e9
  40ca72:	add    BYTE PTR [edi+0x20134927],0xc1
  40ca79:	stos   BYTE PTR es:[edi],al
  40ca7a:	xchg   ecx,eax
  40ca7b:	int    0x45
  40ca7d:	pop    ecx
  40ca7e:	xor    al,0x58
  40ca80:	into   
  40ca81:	repnz add eax,0xea0728ef
  40ca87:	dec    esi
  40ca88:	addr16 imul edi,esi,0x13
  40ca8c:	or     eax,0x3735df69
  40ca91:	push   ebp
  40ca92:	(bad)  
  40ca93:	xchg   ebx,eax
  40ca94:	ins    BYTE PTR es:[edi],dx
  40ca95:	les    eax,FWORD PTR [ebx]
  40ca97:	ins    BYTE PTR es:[edi],dx
  40ca98:	ja     0x40ca4f
  40ca9a:	fld    QWORD PTR [ebx-0x7d]
  40ca9d:	scas   al,BYTE PTR es:[edi]
  40ca9e:	push   esp
  40ca9f:	in     al,dx
  40caa0:	pop    esp
  40caa1:	ins    DWORD PTR es:[edi],dx
  40caa2:	imul   esp,DWORD PTR [edx+ebx*1-0x52],0xffffffbb
  40caa7:	jge    0x40cabe
  40caa9:	xchg   edx,eax
  40caaa:	xchg   ebx,eax
  40caab:	sub    DWORD PTR [ecx+0xd],0x4b
  40caaf:	cmc    
  40cab0:	mov    ah,0xd2
  40cab2:	inc    edx
  40cab3:	into   
  40cab4:	mov    ds:0x1f696d07,al
  40cab9:	fdivp  st(7),st
  40cabb:	jnp    0x40ca64
  40cabd:	add    eax,0xe2ccd36e
  40cac2:	scas   al,BYTE PTR es:[edi]
  40cac3:	dec    ebp
  40cac4:	popa   
  40cac5:	cli    
  40cac6:	xor    DWORD PTR [edi],ecx
  40cac8:	aam    0xf9
  40caca:	xchg   edi,eax
  40cacb:	xor    DWORD PTR [ebx+0x43],ebp
  40cace:	push   ds
  40cacf:	sub    edx,DWORD PTR [ecx-0x2b06289]
  40cad5:	ret    
  40cad6:	ds push ebx
  40cad8:	mov    esp,0x3f2089e8
  40cadd:	in     eax,0xfd
  40cadf:	mov    al,ds:0x98ecc081
  40cae4:	mov    edi,0x7ec0aa75
  40cae9:	es repnz push 0xd327b13a
  40caf0:	cli    
  40caf1:	mov    DWORD PTR [ebx-0x40d2fafa],edx
  40caf7:	dec    esp
  40caf8:	pop    es
  40caf9:	dec    edx
  40cafa:	nop
  40cafb:	pop    eax
  40cafc:	(bad)  
  40cafd:	cmp    cl,BYTE PTR [esi-0x17]
  40cb00:	icebp  
  40cb01:	iret   
  40cb02:	cdq    
  40cb03:	jge    0x40cad0
  40cb05:	into   
  40cb06:	aad    0xa
  40cb08:	das    
  40cb09:	mov    ds:0xfdc73ebe,al
  40cb0e:	dec    esp
  40cb0f:	jmp    DWORD PTR [ecx-0x5f]
  40cb12:	xchg   esi,eax
  40cb13:	and    BYTE PTR [ebp+0x31c3ce71],dh
  40cb19:	push   0xe2da92c0
  40cb1e:	sahf   
  40cb1f:	adc    BYTE PTR [ecx],cl
  40cb21:	or     DWORD PTR [ebp+0x74],ebx
  40cb24:	and    eax,0xcd4889cf
  40cb29:	lea    edi,[edx+edi*1-0x39]
  40cb2d:	pop    es
  40cb2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb2f:	dec    ecx
  40cb30:	xor    DWORD PTR [edx+ebp*1-0x1b],edi
  40cb34:	mov    bl,0xdf
  40cb36:	sub    edi,eax
  40cb38:	inc    edx
  40cb39:	(bad)  
  40cb3a:	or     al,0xe0
  40cb3c:	add    ch,0x6e
  40cb3f:	(bad)  
  40cb40:	xrelease mov BYTE PTR [ebx],ch
  40cb43:	add    ecx,DWORD PTR [ebx+0xc942f5c]
  40cb49:	xchg   ebp,eax
  40cb4a:	sub    DWORD PTR [ecx+eiz*1+0x77652f48],0x48
  40cb52:	push   esp
  40cb53:	jbe    0x40cbbc
  40cb55:	push   ebx
  40cb56:	jns    0x40cbb3
  40cb58:	test   BYTE PTR [ebx-0x7f],cl
  40cb5b:	jg     0x40cbd6
  40cb5d:	xor    ebx,ebx
  40cb5f:	jns    0x40cb0d
  40cb61:	adc    eax,0x3aab3f82
  40cb66:	and    BYTE PTR es:[ebp-0x2e],ch
  40cb6a:	frstor ds:0x904294a8
  40cb70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb71:	into   
  40cb72:	icebp  
  40cb73:	add    edi,DWORD PTR [edi]
  40cb75:	inc    ebp
  40cb76:	fs adc eax,0xea6386b6
  40cb7c:	mov    dh,BYTE PTR [eax+0x19781def]
  40cb82:	jmp    0x40cbe0
  40cb84:	pop    ebx
  40cb85:	cmp    BYTE PTR [ebp+0xc8e846e],ch
  40cb8b:	adc    dh,BYTE PTR [eax+0x6e313f99]
  40cb91:	adc    al,0x37
  40cb93:	shr    DWORD PTR [ecx-0x71d091f0],cl
  40cb99:	(bad)  
  40cb9a:	out    0xd2,al
  40cb9c:	fild   QWORD PTR [ecx-0x4dcf08be]
  40cba2:	sbb    al,0x84
  40cba4:	cwde   
  40cba5:	pop    edi
  40cba6:	cld    
  40cba7:	mov    bh,0x2a
  40cba9:	dec    edx
  40cbaa:	dec    ecx
  40cbab:	leave  
  40cbac:	push   0xc46bdae8
  40cbb1:	imul   eax,DWORD PTR [esi],0xf51d6fb1
  40cbb7:	sub    dh,BYTE PTR [ecx]
  40cbb9:	ss pop ebx
  40cbbb:	or     edi,DWORD PTR ds:0xde9097e
  40cbc1:	rep stos DWORD PTR es:[edi],eax
  40cbc3:	mul    DWORD PTR [eax]
  40cbc5:	outs   dx,BYTE PTR ds:[esi]
  40cbc6:	sbb    eax,0x4ae6ca79
  40cbcb:	push   cs
  40cbcc:	xchg   ebp,eax
  40cbcd:	mov    DWORD PTR [ebx+ebp*2+0x758d26b9],eax
  40cbd4:	add    DWORD PTR [eax],0x551e0b12
  40cbda:	push   ebp
  40cbdb:	stc    
  40cbdc:	mov    ds:0xe07d34ed,al
  40cbe1:	mov    eax,0xc849957d
  40cbe6:	stc    
  40cbe7:	jge    0x40cb6a
  40cbe9:	imul   esp,DWORD PTR gs:[esi+0x8e5071e],0x6e31f92c
  40cbf4:	push   0x369b2e53
  40cbf9:	and    al,0x38
  40cbfb:	std    
  40cbfc:	out    dx,eax
  40cbfd:	(bad)  
  40cbff:	scas   eax,DWORD PTR es:[edi]
  40cc00:	int3   
  40cc01:	repz cmc 
  40cc03:	dec    esp
  40cc04:	and    eax,0xffffffd4
  40cc07:	xchg   DWORD PTR [edx+0xb7f8b49],edx
  40cc0d:	int3   
  40cc0e:	sub    cl,dl
  40cc10:	pop    ecx
  40cc11:	adc    ebp,DWORD PTR [eax+eax*2]
  40cc14:	or     dl,BYTE PTR [edx]
  40cc16:	push   ss
  40cc17:	lods   eax,DWORD PTR ds:[esi]
  40cc18:	sbb    BYTE PTR [edi],ch
  40cc1a:	sbb    al,0x9b
  40cc1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1e:	jmpw   0xede6
  40cc22:	out    dx,eax
  40cc23:	add    eax,0x94221570
  40cc28:	ds scas eax,DWORD PTR es:[edi]
  40cc2a:	jb     0x40cc1f
  40cc2c:	not    DWORD PTR [ebx+0x7f3a0521]
  40cc32:	js     0x40cc3a
  40cc34:	inc    eax
  40cc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc36:	pop    esi
  40cc37:	mov    dl,BYTE PTR [ecx+0x7d]
  40cc3a:	ins    DWORD PTR es:[edi],dx
  40cc3b:	mov    eax,0xde5fb7be
  40cc40:	cli    
  40cc41:	pop    es
  40cc42:	inc    esi
  40cc43:	add    eax,0x6d1e9066
  40cc48:	jge    0x40ccaf
  40cc4a:	mov    dh,0xf
  40cc4c:	push   0x10f6f164
  40cc51:	push   cs
  40cc52:	clc    
  40cc53:	mov    dh,0x9b
  40cc55:	repnz dec ebp
  40cc57:	add    eax,0xef1139c0
  40cc5c:	push   es
  40cc5d:	out    dx,eax
  40cc5e:	rcl    BYTE PTR [esi],1
  40cc60:	test   al,0x5d
  40cc62:	cmp    al,0xa8
  40cc64:	push   eax
  40cc65:	sbb    BYTE PTR [esi-0x3c145ed1],cl
  40cc6b:	sbb    BYTE PTR [bp+di+0x49f3],0x78
  40cc71:	push   eax
  40cc72:	pop    esp
  40cc73:	aaa    
  40cc74:	cdq    
  40cc75:	retf   0x68ba
  40cc78:	loope  0x40cc71
  40cc7a:	or     ebx,esp
  40cc7c:	mov    al,ds:0xac72b3be
  40cc81:	je     0x40ccb9
  40cc83:	adc    BYTE PTR [edx-0x59],0xca
  40cc87:	push   edx
  40cc88:	ja     0x40cc8a
  40cc8a:	mov    cl,0x34
  40cc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc8d:	imul   ebx,ebx,0x678d867a
  40cc93:	shl    BYTE PTR [ebp+0x34],0x4d
  40cc97:	data16 int3 
  40cc99:	scas   eax,DWORD PTR es:[edi]
  40cc9a:	jbe    0x40cd04
  40cc9c:	bnd jmp 0x9536f680
  40cca2:	stos   BYTE PTR es:[edi],al
  40cca3:	adc    BYTE PTR [esi-0x659db6a6],0x52
  40ccaa:	or     DWORD PTR [esi],eax
  40ccac:	int3   
  40ccad:	pop    ebx
  40ccae:	and    ebp,DWORD PTR [esp+edi*1+0x74]
  40ccb2:	push   edi
  40ccb3:	push   0xc8e69425
  40ccb8:	out    dx,eax
  40ccb9:	lods   al,BYTE PTR ds:[esi]
  40ccba:	repz inc eax
  40ccbc:	add    al,0x12
  40ccbe:	push   edi
  40ccbf:	out    dx,eax
  40ccc0:	push   edx
  40ccc1:	mov    BYTE PTR [ebx-0xd],ch
  40ccc4:	inc    eax
  40ccc5:	repnz mov cs,WORD PTR [edx+eax*4]
  40ccc9:	xchg   edi,eax
  40ccca:	cli    
  40cccb:	push   0x7d
  40cccd:	dec    edi
  40ccce:	adc    DWORD PTR [ebx+ebx*8+0x4668d72a],eax
  40ccd5:	popf   
  40ccd6:	ds aad 0x91
  40ccd9:	(bad)  
  40ccda:	sub    cl,dl
  40ccdc:	ret    
  40ccdd:	cmp    ebx,esp
  40ccdf:	call   0x11ec7c1
  40cce4:	cdq    
  40cce5:	add    eax,0xbf24a192
  40ccea:	mov    WORD PTR [eax-0x56],gs
  40cced:	xchg   DWORD PTR [ecx+0x6d1286e7],ebp
  40ccf3:	mov    cl,0x18
  40ccf5:	mov    ebp,0xc51bb230
  40ccfa:	inc    esp
  40ccfb:	push   esi
  40ccfc:	in     al,0x2d
  40ccfe:	sti    
  40ccff:	jnp    0x40cd54
  40cd01:	lods   al,BYTE PTR ds:[esi]
  40cd02:	hlt    
  40cd03:	lods   eax,DWORD PTR ds:[esi]
  40cd04:	out    0xc3,eax
  40cd06:	push   edx
  40cd07:	mov    ch,0x9a
  40cd09:	pop    edx
  40cd0a:	xchg   ecx,eax
  40cd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd0c:	sbb    eax,0xb4997752
  40cd11:	xchg   BYTE PTR ds:0xc63e4e0e,bl
  40cd17:	or     DWORD PTR [edi],eax
  40cd19:	ret    0x4054
  40cd1c:	dec    esi
  40cd1d:	sub    BYTE PTR [ebx+esi*2+0x4e],0xd0
  40cd22:	and    ah,BYTE PTR [esi+0x5a4b5a5d]
  40cd28:	icebp  
  40cd29:	xor    cl,BYTE PTR [eax+eiz*1-0x5faa1217]
  40cd30:	jmp    0x40ccb4
  40cd32:	test   eax,0xfd57b396
  40cd37:	sbb    BYTE PTR [edi-0x5b8b8d4c],al
  40cd3d:	(bad)  
  40cd3e:	or     al,0xfa
  40cd40:	dec    ebp
  40cd41:	dec    esi
  40cd42:	pop    edx
  40cd43:	popa   
  40cd44:	fs test eax,0xf28d13d
  40cd4a:	inc    esi
  40cd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4c:	hlt    
  40cd4d:	std    
  40cd4e:	xor    al,0x2e
  40cd50:	jmp    0x40cd23
  40cd52:	xor    al,0xc6
  40cd54:	or     eax,0xefd63e85
  40cd59:	adc    ecx,DWORD PTR [edx]
  40cd5b:	sahf   
  40cd5c:	popa   
  40cd5d:	out    dx,al
  40cd5e:	and    eax,0x234eda0c
  40cd63:	mov    eax,ds:0x7ed39683
  40cd68:	xlat   BYTE PTR ds:[ebx]
  40cd69:	mov    ecx,0xd486767
  40cd6e:	sbb    DWORD PTR [esi+0x7414cfb3],eax
  40cd74:	jl     0x40cdaa
  40cd76:	sbb    DWORD PTR ds:0xd9179376,ebp
  40cd7c:	dec    ebx
  40cd7d:	jle    0x40cd33
  40cd7f:	inc    BYTE PTR [ecx]
  40cd81:	cmp    DWORD PTR [edx-0x40],0xf762fde
  40cd88:	repnz daa 
  40cd8a:	sar    bl,1
  40cd8c:	gs (bad) 
  40cd8e:	xchg   edx,eax
  40cd8f:	ins    BYTE PTR es:[edi],dx
  40cd90:	dec    esi
  40cd91:	mov    dl,0x4a
  40cd93:	jb     0x40cdfa
  40cd95:	pop    ss
  40cd96:	clc    
  40cd97:	adc    bh,BYTE PTR [ebp-0x37]
  40cd9a:	xor    edi,DWORD PTR [eax+0x65016ff]
  40cda0:	lds    eax,FWORD PTR [esi-0x6b779a67]
  40cda6:	pop    ds
  40cda7:	cdq    
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	xor    dh,BYTE PTR [edx+0x55]
  40cddc:	mov    ebp,0x7e7e9ecc
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	fldcw  WORD PTR [ebp+0xe604506]
  40cdeb:	xchg   ebp,eax
  40cdec:	cs stc 
  40cdee:	or     BYTE PTR [esp+ebx*8+0x2d],bl
  40cdf2:	lea    edi,[ebp-0x4c]
  40cdf5:	jnp    0x40ce3a
  40cdf7:	add    ah,BYTE PTR [eax]
  40cdf9:	std    
  40cdfa:	sahf   
  40cdfb:	int3   
  40cdfc:	and    al,0xd5
  40cdfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdff:	xor    esi,esp
  40ce01:	pushf  
  40ce02:	push   edi
  40ce03:	pop    esi
  40ce04:	popf   
  40ce05:	into   
  40ce06:	(bad)  
  40ce07:	jo     0x40cddf
  40ce09:	(bad)  
  40ce0a:	mov    esi,0x5a19205c
  40ce0f:	xor    al,0x4a
  40ce11:	ss inc esi
  40ce13:	pop    esi
  40ce14:	call   0xaf7c0d28
  40ce19:	popa   
  40ce1a:	inc    edi
  40ce1b:	sub    eax,0xffffffd7
  40ce1e:	mov    dl,0x8e
  40ce20:	sbb    dl,dl
  40ce22:	repz xor al,BYTE PTR ds:0xfffa21a4
  40ce29:	adc    DWORD PTR [edx+ecx*8-0x2a14a29d],esp
  40ce30:	xlat   BYTE PTR ds:[ebx]
  40ce31:	mov    ch,0x4b
  40ce33:	nop
  40ce34:	cmp    esi,ecx
  40ce36:	add    ch,BYTE PTR [ecx+ecx*2-0x57]
  40ce3a:	inc    ebp
  40ce3b:	xor    DWORD PTR [eax-0x5c],eax
  40ce3e:	add    BYTE PTR [ebx+0x37],bl
  40ce41:	cdq    
  40ce42:	mov    eax,DWORD PTR [edi]
  40ce44:	adc    ebx,DWORD PTR [edi+0x78]
  40ce47:	inc    esi
  40ce48:	in     al,dx
  40ce49:	in     eax,dx
  40ce4a:	pop    ebp
  40ce4b:	sahf   
  40ce4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4d:	mov    esi,0x11e23f9c
  40ce52:	ins    DWORD PTR es:[edi],dx
  40ce53:	and    dh,al
  40ce55:	sub    al,ah
  40ce57:	in     eax,dx
  40ce58:	ror    DWORD PTR [ebx],1
  40ce5a:	mov    esp,0x41715792
  40ce5f:	sub    al,0xeb
  40ce61:	push   0x40122020
  40ce66:	push   edi
  40ce67:	pop    edi
  40ce68:	sbb    cl,bl
  40ce6a:	sbb    esi,ebx
  40ce6c:	out    0xfe,al
  40ce6e:	aaa    
  40ce6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce70:	inc    ecx
  40ce71:	add    bh,dl
  40ce73:	loope  0x40cdfc
  40ce75:	mov    esi,DWORD PTR [eax*1-0x36af65f6]
  40ce7c:	shl    ebp,cl
  40ce7e:	push   ss
  40ce7f:	fdivr  DWORD PTR [esi-0x238c444e]
  40ce85:	mov    ah,0xb8
  40ce87:	jl     0x40ce28
  40ce89:	jnp    0x40ce0c
  40ce8b:	outs   dx,BYTE PTR ds:[esi]
  40ce8c:	push   ds
  40ce8d:	int    0xf0
  40ce8f:	loopne 0x40ceb6
  40ce91:	jae    0x40ce85
  40ce93:	test   eax,0xa2ca9942
  40ce98:	mov    fs,WORD PTR [ebx-0x71]
  40ce9b:	inc    ecx
  40ce9c:	inc    ebp
  40ce9d:	sub    al,0x41
  40ce9f:	cli    
  40cea0:	iret   
  40cea1:	mov    ebx,0x214b2901
  40cea6:	inc    edi
  40cea7:	scas   eax,DWORD PTR es:[edi]
  40cea8:	rcl    BYTE PTR [edi],cl
  40ceaa:	xchg   esp,eax
  40ceab:	mov    ecx,0xaa787cae
  40ceb0:	inc    ecx
  40ceb1:	mov    ch,0xed
  40ceb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb4:	pusha  
  40ceb5:	je     0x40cea0
  40ceb7:	mov    ax,ds:0x7871ca75
  40cebd:	shr    ecx,0x6e
  40cec0:	jb     0x40cee5
  40cec2:	into   
  40cec3:	push   esp
  40cec4:	xor    DWORD PTR [ebx],esp
  40cec6:	nop
  40cec7:	pop    esi
  40cec8:	ss js  0x40cef7
  40cecb:	scas   al,BYTE PTR es:[edi]
  40cecc:	cdq    
  40cecd:	rcr    ebx,0x27
  40ced0:	sub    ax,di
  40ced3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ced4:	pop    ss
  40ced5:	mov    ebp,0x6d77964b
  40ceda:	jmp    0xbdbd:0xcfe84055
  40cee1:	jecxz  0x40cecc
  40cee3:	out    0x9e,al
  40cee5:	and    dl,0x54
  40cee8:	pop    edx
  40cee9:	clc    
  40ceea:	(bad)  
  40ceeb:	in     al,0x36
  40ceed:	pop    ds
  40ceee:	mov    dl,0x5b
  40cef0:	inc    eax
  40cef1:	fisttp DWORD PTR [edi+0x49]
  40cef4:	lods   eax,DWORD PTR ds:[esi]
  40cef6:	inc    edi
  40cef7:	icebp  
  40cef8:	adc    ebp,DWORD PTR [ecx+0x2967cd04]
  40cefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceff:	xor    bl,BYTE PTR [edi]
  40cf01:	mov    eax,0x9a792607
  40cf06:	mov    al,ds:0xb204568b
  40cf0b:	adc    DWORD PTR [edx+0xc54f3ed],ebp
  40cf11:	retf   0x4aef
  40cf14:	in     al,dx
  40cf15:	imul   edi,DWORD PTR [eax],0x64
  40cf18:	inc    ebp
  40cf19:	nop
  40cf1a:	add    esp,DWORD PTR [ebp+0x51e47dc7]
  40cf20:	push   eax
  40cf21:	je     0x40cf0d
  40cf23:	inc    esi
  40cf24:	(bad)  
  40cf25:	inc    BYTE PTR [edx+0x339008a9]
  40cf2b:	sub    ah,bl
  40cf2d:	fidivr WORD PTR [edi-0xef08789]
  40cf33:	repz imul BYTE PTR [ebx+0x24]
  40cf37:	pop    ebx
  40cf38:	lahf   
  40cf39:	or     DWORD PTR [ecx],esi
  40cf3b:	(bad)  
  40cf3c:	xlat   BYTE PTR ds:[ebx]
  40cf3d:	hlt    
  40cf3e:	mov    edi,0xaffc3c15
  40cf43:	sub    DWORD PTR [edx+0x45],ebx
  40cf46:	push   ebx
  40cf47:	dec    ebp
  40cf48:	dec    DWORD PTR [edi]
  40cf4a:	popa   
  40cf4b:	xchg   esp,edi
  40cf4d:	pop    ecx
  40cf4e:	xchg   edi,eax
  40cf4f:	xchg   DWORD PTR [ebx+edx*2],eax
  40cf52:	sbb    DWORD PTR [eax-0x2a84f636],ebx
  40cf58:	xor    edx,DWORD PTR ds:0x8ae1864e
  40cf5e:	sbb    al,0x2
  40cf60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf61:	pop    es
  40cf62:	push   eax
  40cf63:	inc    ebp
  40cf64:	pop    edi
  40cf65:	sub    ch,BYTE PTR [esi]
  40cf67:	rol    BYTE PTR [edx+eax*4+0x70],0x2d
  40cf6c:	stc    
  40cf6d:	lock add DWORD PTR [ebp-0x1a],0x76
  40cf72:	xor    edi,ecx
  40cf74:	fisub  WORD PTR [edx+edi*1-0x15f162b2]
  40cf7b:	sahf   
  40cf7c:	jecxz  0x40cf60
  40cf7e:	mov    ecx,0xb6b03de8
  40cf83:	ins    BYTE PTR es:[edi],dx
  40cf84:	mov    DWORD PTR [esi+0x1b],ecx
  40cf87:	popa   
  40cf88:	fs push ebp
  40cf8a:	adc    ebp,DWORD PTR [ebp+0x6918534e]
  40cf90:	bound  esi,QWORD PTR [esi-0x2d]
  40cf93:	add    bl,al
  40cf95:	mov    eax,0xacf27346
  40cf9a:	mov    ch,0x92
  40cf9c:	jmp    0x8d603a23
  40cfa1:	mov    WORD PTR [edx+eiz*8-0x1e86a65a],?
  40cfa8:	call   0x30526a66
  40cfad:	mov    dh,BYTE PTR [ebx-0xb]
  40cfb0:	jle    0x40cfe4
  40cfb2:	cmp    al,0x55
  40cfb4:	inc    esp
  40cfb5:	dec    ebp
  40cfb6:	adc    al,0xdb
  40cfb8:	nop
  40cfb9:	loop   0x40d001
  40cfbb:	mov    cl,0x89
  40cfbd:	cmp    eax,0x27ba7483
  40cfc2:	sbb    BYTE PTR [ebp+0x2b],ch
  40cfc5:	adc    eax,0xa3a565e5
  40cfca:	inc    eax
  40cfcb:	hlt    
  40cfcc:	inc    eax
  40cfcd:	push   ebx
  40cfce:	jg     0x40cffc
  40cfd0:	rol    DWORD PTR [esi+edi*2-0x7c],1
  40cfd4:	out    0x7f,al
  40cfd6:	rcl    BYTE PTR [ebx-0x3b],cl
  40cfd9:	dec    edx
  40cfda:	fidiv  WORD PTR [ebx-0x3e]
  40cfdd:	push   ss
  40cfde:	(bad)  
  40cfdf:	mov    edx,0x5f41da3c
  40cfe4:	jae    0x40cf88
  40cfe6:	or     esp,DWORD PTR [esp+edx*2-0x7ada416]
  40cfed:	jl     0x40d03c
  40cfef:	(bad)  
  40cff0:	mov    esi,DWORD PTR [eax]
  40cff2:	jns    0x40cfd9
  40cff4:	call   0x16917292
  40cff9:	dec    ebx
  40cffa:	in     eax,0x47
  40cffc:	mov    ebx,0x46aeb023
  40d001:	stos   BYTE PTR es:[edi],al
  40d002:	(bad)  
  40d003:	mov    edi,0x4402aa73
  40d008:	jnp    0x40d06e
  40d00a:	ja     0x40cfe6
  40d00c:	mov    dl,0xea
  40d00e:	popf   
  40d00f:	xchg   ebx,eax
  40d010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d011:	xor    DWORD PTR [esi+0x57],edx
  40d014:	push   cs
  40d015:	fbstp  TBYTE PTR [edx+0x3d0185c5]
  40d01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d01c:	sbb    BYTE PTR ds:0x6a1812b8,ah
  40d022:	jae    0x40d017
  40d024:	add    cl,bh
  40d026:	mov    ch,0xbe
  40d028:	repz sar DWORD PTR [eax],0x37
  40d02c:	out    0x57,al
  40d02e:	and    DWORD PTR [ebx],eax
  40d030:	es icebp 
  40d032:	sub    ah,BYTE PTR [edi]
  40d034:	mov    ecx,0x4b2389f1
  40d039:	mov    dh,0xd6
  40d03b:	mov    ecx,0x1774dfe9
  40d040:	call   0xb0f0:0x475e1a78
  40d047:	ret    
  40d048:	or     ah,BYTE PTR [ecx]
  40d04a:	mov    ebx,esi
  40d04c:	in     eax,0x84
  40d04e:	ror    DWORD PTR [esi-0x2f5d4b8e],1
  40d054:	mov    ecx,0xeca0db91
  40d059:	pop    ebx
  40d05a:	cmp    DWORD PTR [ebx-0x528a741],0xe2a2f177
  40d064:	jnp    0x40d0bf
  40d066:	in     al,0x95
  40d068:	mov    al,0xcc
  40d06a:	lds    esi,FWORD PTR [esi]
  40d06c:	imul   ebp,DWORD PTR [eax+0x57],0x42b4c51
  40d073:	mov    BYTE PTR [esi],al
  40d075:	sub    DWORD PTR ds:0x36fdf9a7,esi
  40d07b:	push   edx
  40d07c:	in     eax,0x9e
  40d07e:	dec    eax
  40d07f:	mov    ebx,0x6d68c664
  40d084:	jecxz  0x40d006
  40d086:	mov    ?,WORD PTR [ebx]
  40d088:	mov    WORD PTR [edx+0x3e],gs
  40d08b:	push   ss
  40d08c:	cmp    eax,0x4bd09fe0
  40d091:	sbb    al,al
  40d093:	hlt    
  40d094:	dec    ebp
  40d095:	cmp    BYTE PTR [edx+0x3fe6e3c3],al
  40d09b:	add    eax,0x8ca08414
  40d0a0:	push   ds
  40d0a1:	jae    0x40d094
  40d0a3:	sub    DWORD PTR [eax+0x5f],ebp
  40d0a6:	adc    eax,0x1f216c2
  40d0ab:	or     al,0x44
  40d0ad:	xchg   esp,edx
  40d0af:	lods   eax,DWORD PTR ds:[esi]
  40d0b0:	pop    DWORD PTR [eax+0x58df74ab]
  40d0b6:	ins    BYTE PTR es:[edi],dx
  40d0b7:	cs sub eax,0x8b0ff8b2
  40d0bd:	mov    dl,0xe7
  40d0bf:	js     0x40d0c4
  40d0c1:	lea    esp,[edx+0x55]
  40d0c4:	mov    esp,0x771b833f
  40d0c9:	lods   eax,DWORD PTR ds:[esi]
  40d0ca:	xchg   BYTE PTR [eax+0x60a969d8],dl
  40d0d0:	cwde   
  40d0d1:	pop    edi
  40d0d2:	and    DWORD PTR [edi-0x664499da],0x5bcb6ef9
  40d0dc:	in     al,dx
  40d0dd:	mov    esi,0x8eb1aa58
  40d0e2:	inc    ebx
  40d0e3:	stos   DWORD PTR es:[edi],eax
  40d0e4:	fdiv   st(6),st
  40d0e6:	mov    ds:0x217efcc2,al
  40d0eb:	wbinvd 
  40d0ed:	or     al,0xe7
  40d0ef:	scas   eax,DWORD PTR es:[edi]
  40d0f0:	xchg   edi,eax
  40d0f1:	xor    eax,0x58fa187
  40d0f6:	adc    ebx,DWORD PTR [ebp+0x27]
  40d0f9:	fcmovne st,st(1)
  40d0fb:	rcl    DWORD PTR [ebx],1
  40d0fd:	popa   
  40d0fe:	data16 lock lods al,BYTE PTR ds:[esi]
  40d101:	push   edi
  40d102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d103:	stc    
  40d104:	add    al,0x84
  40d106:	push   edx
  40d107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d108:	dec    edx
  40d109:	(bad)  
  40d10a:	mov    ch,0x2
  40d10c:	mov    eax,0xe4fa0660
  40d111:	mov    eax,0x88181312
  40d116:	lahf   
  40d117:	(bad)  
  40d118:	in     eax,dx
  40d119:	ja     0x40d16c
  40d11b:	jge    0x40d170
  40d11d:	inc    edi
  40d11e:	xchg   BYTE PTR [ebx+0x60],bh
  40d121:	xor    al,0xef
  40d123:	cmp    ch,BYTE PTR [ecx]
  40d125:	dec    eax
  40d126:	in     eax,0xe8
  40d128:	dec    esp
  40d129:	dec    edx
  40d12a:	sub    ecx,DWORD PTR [edx+0x3]
  40d12d:	pop    es
  40d12e:	inc    eax
  40d12f:	es and eax,0xae4422ba
  40d135:	in     al,dx
  40d136:	lea    edi,[ebp+0x51]
  40d139:	push   esi
  40d13a:	shl    ebp,1
  40d13c:	xchg   ebx,eax
  40d13d:	ds xlat BYTE PTR cs:[ebx]
  40d140:	adc    eax,edi
  40d142:	lock test al,0x52
  40d145:	fs fmulp st(1),st
  40d148:	pop    ds
  40d149:	or     ebx,edi
  40d14b:	jp     0x40d115
  40d14d:	mov    esi,0x87ae0ae3
  40d152:	fisubr DWORD PTR [ebx-0x14]
  40d155:	inc    esi
  40d156:	loopne 0x40d1bd
  40d158:	dec    eax
  40d159:	pop    es
  40d15a:	arpl   WORD PTR ds:0x14374720,di
  40d160:	adc    al,0x5b
  40d162:	fcom   QWORD PTR [ecx]
  40d164:	sbb    ah,BYTE PTR [edx-0x52]
  40d167:	mov    dh,0xb6
  40d169:	jmp    0x498e:0x8b339097
  40d170:	add    al,0x2a
  40d172:	pusha  
  40d173:	add    eax,0xed11a4cf
  40d178:	popa   
  40d179:	mov    ebp,0x54997a07
  40d17e:	fsub   DWORD PTR [edi]
  40d180:	mov    eax,ds:0x33405767
  40d185:	add    DWORD PTR [esi-0x44b3e00a],ebp
  40d18b:	mov    BYTE PTR [ebp+0x5d7a99c6],ah
  40d191:	(bad)  
  40d192:	gs add eax,edx
  40d195:	dec    ebp
  40d196:	out    dx,al
  40d197:	lods   al,BYTE PTR ds:[esi]
  40d198:	mov    BYTE PTR [eax+0x502e0be7],ah
  40d19e:	mov    ds:0x617f6a81,al
  40d1a3:	rcl    BYTE PTR [edx-0x72],1
  40d1a6:	push   ds
  40d1a7:	sub    bh,BYTE PTR [ecx+eax*2-0x4796daff]
  40d1ae:	rcl    al,0x12
  40d1b1:	cmp    ebp,0xffffffde
  40d1b4:	es data16 mov ch,0xa2
  40d1b8:	sbb    al,cl
  40d1ba:	jnp    0x40d145
  40d1bc:	xor    al,0xfb
  40d1be:	retf   0x756f
  40d1c1:	adc    al,0x78
  40d1c3:	xchg   ebx,eax
  40d1c4:	cmp    ch,BYTE PTR [eax+eiz*4+0x72]
  40d1c8:	pusha  
  40d1c9:	outs   dx,DWORD PTR ds:[esi]
  40d1ca:	mov    bl,0x3e
  40d1cc:	dec    ebx
  40d1cd:	jecxz  0x40d17c
  40d1cf:	push   0x15
  40d1d1:	mov    ah,BYTE PTR [ebx]
  40d1d3:	lahf   
  40d1d4:	call   0xc0b:0xf02d3a6f
  40d1db:	lods   eax,DWORD PTR ds:[esi]
  40d1dc:	or     al,0x47
  40d1de:	cdq    
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	pusha  
  40d20f:	pusha  
  40d210:	or     al,0x55
  40d212:	(bad)  
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	out    dx,eax
  40d21b:	clc    
  40d21c:	ds and eax,0x7c7817fd
  40d222:	cmp    bh,BYTE PTR [edi]
  40d224:	mov    al,0x44
  40d226:	ficom  DWORD PTR [eax-0x5c3447ec]
  40d22c:	and    eax,0x295e6c6a
  40d231:	push   cs
  40d232:	repz and DWORD PTR [ebx+0x5e],ebx
  40d236:	pusha  
  40d237:	inc    edi
  40d238:	sbb    BYTE PTR [esi-0x3274bfbf],dh
  40d23e:	stc    
  40d23f:	(bad)  
  40d241:	loopne 0x40d298
  40d243:	ret    
  40d244:	inc    ecx
  40d245:	jae    0x40d273
  40d247:	fistp  WORD PTR ds:0xc547c655
  40d24d:	lods   al,BYTE PTR ds:[esi]
  40d24e:	push   0x844a4d6b
  40d253:	adc    al,0x9f
  40d255:	or     edi,eax
  40d257:	inc    ecx
  40d258:	leave  
  40d259:	ss mov ch,0xd0
  40d25c:	xchg   edx,eax
  40d25d:	pop    edi
  40d25e:	push   ebx
  40d25f:	push   edi
  40d260:	adc    bl,BYTE PTR [ebx]
  40d262:	jno    0x40d2d7
  40d264:	add    al,0x6e
  40d266:	aas    
  40d267:	outs   dx,BYTE PTR ds:[esi]
  40d268:	lea    ebx,[ecx]
  40d26a:	mov    bh,0x1f
  40d26c:	xor    BYTE PTR [ebx-0x70d16dfe],dh
  40d272:	dec    esi
  40d273:	cmp    edx,DWORD PTR [eax-0x5]
  40d276:	mov    ch,0x16
  40d278:	xchg   edx,eax
  40d279:	cdq    
  40d27a:	cmp    DWORD PTR [edx],0x64
  40d27d:	aas    
  40d27e:	cli    
  40d27f:	in     eax,0x1a
  40d281:	inc    ebp
  40d282:	jne    0x40d302
  40d284:	cmp    al,0x10
  40d286:	cmp    DWORD PTR [eax-0xc7e861d],ecx
  40d28c:	push   0xffffffcb
  40d28e:	stos   BYTE PTR es:[edi],al
  40d28f:	or     dh,bh
  40d291:	pusha  
  40d292:	out    0x3c,al
  40d294:	ret    0x8f7a
  40d297:	not    bh
  40d299:	cli    
  40d29a:	push   ebp
  40d29b:	enter  0xc832,0x7b
  40d29f:	mov    bh,0xa4
  40d2a1:	fnsave [esi-0x72]
  40d2a4:	fstp   QWORD PTR [edi]
  40d2a6:	int3   
  40d2a7:	in     al,dx
  40d2a8:	mov    al,0xfd
  40d2aa:	mov    edx,0x68c45cb6
  40d2af:	cmp    cl,BYTE PTR [eax-0x1114c78d]
  40d2b5:	or     dh,ah
  40d2b7:	popf   
  40d2b8:	inc    ecx
  40d2b9:	js     0x40d2fd
  40d2bb:	push   esp
  40d2bc:	inc    eax
  40d2bd:	fnstsw WORD PTR [eax+0x16]
  40d2c0:	inc    edx
  40d2c1:	ss pushf 
  40d2c3:	hlt    
  40d2c4:	loopne 0x40d279
  40d2c6:	mov    ebp,0x75246868
  40d2cb:	in     al,0xb6
  40d2cd:	jns    0x40d277
  40d2cf:	lahf   
  40d2d0:	inc    ebp
  40d2d1:	mov    bh,0xba
  40d2d3:	dec    ebx
  40d2d4:	fucomip st,st(1)
  40d2d6:	(bad)  
  40d2d7:	pop    eax
  40d2d8:	fldcw  WORD PTR [edi-0x33e31db5]
  40d2de:	lea    ebp,[ebp-0x23]
  40d2e1:	outs   dx,BYTE PTR ds:[esi]
  40d2e2:	scas   eax,DWORD PTR es:[edi]
  40d2e3:	mov    ebx,0xe1018bc8
  40d2e8:	js     0x40d2ef
  40d2ea:	xchg   esp,eax
  40d2eb:	and    esp,DWORD PTR [ebp+0x53875e8c]
  40d2f1:	lds    ebx,FWORD PTR [ebx]
  40d2f3:	and    al,0x1a
  40d2f5:	mov    ch,0xf9
  40d2f7:	mov    ss,WORD PTR [ebx-0x52]
  40d2fa:	(bad)
  40d2fd:	jbe    0x40d2a4
  40d2ff:	xchg   ebx,eax
  40d300:	xor    cl,dh
  40d302:	(bad)  
  40d303:	xchg   edi,eax
  40d304:	fld    TBYTE PTR [ebp-0x44]
  40d307:	pop    edi
  40d308:	out    dx,eax
  40d309:	add    ebx,ecx
  40d30b:	jnp    0x40d322
  40d30d:	add    BYTE PTR [ebp-0x2d],al
  40d310:	xchg   BYTE PTR [esi],bl
  40d312:	inc    DWORD PTR [edi+0x29]
  40d315:	setle  bh
  40d318:	adc    al,0x70
  40d31a:	push   ss
  40d31b:	or     dh,cl
  40d31d:	pop    esi
  40d31e:	pop    ebx
  40d31f:	call   0x13725dba
  40d324:	lds    ebx,FWORD PTR [edx-0x31]
  40d327:	xchg   edi,eax
  40d328:	out    0x33,eax
  40d32a:	adc    BYTE PTR [ebx+esi*1-0x39caca5a],bh
  40d331:	jbe    0x40d3a4
  40d333:	je     0x40d2cd
  40d335:	imul   ecx,DWORD PTR [edi],0x430f2375
  40d33b:	jno    0x40d39d
  40d33d:	cmp    al,0x66
  40d33f:	mov    eax,ds:0x368ad378
  40d344:	jecxz  0x40d3a4
  40d346:	(bad)  
  40d347:	loopne 0x40d2d5
  40d349:	mov    cl,0x59
  40d34b:	xor    al,0xbb
  40d34d:	cs xchg esp,eax
  40d34f:	push   ebp
  40d350:	sbb    ebp,DWORD PTR [edx+ebx*8-0xa]
  40d354:	imul   esp,edx,0xae96bb99
  40d35a:	ret    
  40d35b:	mov    ebp,ecx
  40d35d:	push   edi
  40d35e:	jbe    0x40d395
  40d360:	out    dx,al
  40d361:	mov    eax,0xdd9adff
  40d366:	ret    
  40d367:	sbb    ebp,DWORD PTR [edx+0x5ebae341]
  40d36d:	or     ecx,DWORD PTR [esi]
  40d36f:	xchg   ebx,eax
  40d370:	or     al,0xea
  40d372:	add    bl,cl
  40d374:	pop    ss
  40d375:	aam    0x6a
  40d377:	mov    bl,0xa9
  40d379:	mov    ebp,DWORD PTR [edi]
  40d37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d37c:	inc    edi
  40d37d:	mov    ds:0x714e2a04,al
  40d382:	and    eax,0x5d972ea7
  40d387:	sar    DWORD PTR [esi],1
  40d389:	mov    dl,0x96
  40d38b:	sub    al,0xb1
  40d38d:	lods   eax,DWORD PTR ds:[esi]
  40d38e:	mov    cl,0x93
  40d390:	xor    al,0xac
  40d392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d393:	outs   dx,DWORD PTR ds:[esi]
  40d394:	aaa    
  40d395:	jge    0x40d36d
  40d397:	add    bl,bh
  40d399:	hlt    
  40d39a:	rcl    dh,cl
  40d39c:	cwde   
  40d39d:	(bad)  
  40d39e:	or     ah,BYTE PTR ds:0x5982e9ae
  40d3a4:	lods   eax,DWORD PTR ds:[esi]
  40d3a5:	call   0xe900:0x20b0217c
  40d3ac:	pop    eax
  40d3ad:	loope  0x40d363
  40d3af:	outs   dx,BYTE PTR ds:[esi]
  40d3b0:	repz in eax,dx
  40d3b2:	and    ebx,0xe2ff9e09
  40d3b8:	mov    al,ds:0xef1e8fdb
  40d3bd:	xchg   BYTE PTR [ecx+0x7be519af],bl
  40d3c3:	scas   eax,DWORD PTR es:[edi]
  40d3c4:	jne    0x40d3d0
  40d3c6:	hlt    
  40d3c7:	cdq    
  40d3c8:	out    0x2f,al
  40d3ca:	mov    bl,0x36
  40d3cc:	enter  0xc1ea,0xc2
  40d3d0:	jp     0x40d3d5
  40d3d2:	adc    dl,cl
  40d3d4:	dec    edi
  40d3d5:	fld    TBYTE PTR [ebp-0xa]
  40d3d8:	mov    ebp,DWORD PTR [ebx]
  40d3da:	sti    
  40d3db:	or     al,0x6f
  40d3dd:	mov    ah,0x18
  40d3df:	cld    
  40d3e0:	shl    DWORD PTR [edi+0x26400f79],cl
  40d3e6:	clc    
  40d3e7:	out    dx,al
  40d3e8:	or     dh,BYTE PTR [edx+0x32f794c1]
  40d3ee:	adc    dl,ah
  40d3f0:	addr16 pop ecx
  40d3f2:	or     bl,BYTE PTR [esi]
  40d3f4:	jp     0x40d382
  40d3f6:	inc    ebp
  40d3f7:	fdiv   DWORD PTR [edi+0x78]
  40d3fa:	xchg   ecx,eax
  40d3fb:	pop    esp
  40d3fc:	ret    0x4a29
  40d3ff:	mov    esp,DWORD PTR [ebx-0x1754f0e0]
  40d405:	pusha  
  40d406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d407:	pop    edx
  40d408:	mov    cl,0xb9
  40d40a:	mov    ah,0x91
  40d40c:	pop    ebx
  40d40d:	inc    esi
  40d40e:	and    dl,bh
  40d410:	imul   ebx,DWORD PTR [eax+0x7cf65a27],0xb41f9b1a
  40d41a:	sar    DWORD PTR [edx],cl
  40d41c:	(bad)  
  40d41d:	or     al,0x88
  40d41f:	cs and al,0xdd
  40d422:	adc    bh,BYTE PTR [esi+0x2ea0946b]
  40d428:	out    dx,al
  40d429:	aaa    
  40d42a:	jp     0x40d3c1
  40d42c:	or     eax,0xe79c043a
  40d431:	mov    edx,DWORD PTR [ecx+0x6]
  40d434:	jb     0x40d45d
  40d436:	fadd   DWORD PTR ds:0x8e5e5f7d
  40d43c:	push   ecx
  40d43d:	pop    ebp
  40d43e:	ins    DWORD PTR es:[edi],dx
  40d43f:	jp     0x40d44e
  40d441:	lods   eax,DWORD PTR ds:[esi]
  40d442:	fist   DWORD PTR [eax-0x767a3ab1]
  40d448:	test   eax,0xffaec252
  40d44d:	ds pusha 
  40d44f:	add    eax,0xf8df25f2
  40d454:	mov    ah,0xc1
  40d456:	push   ebp
  40d457:	imul   ebx,DWORD PTR [ecx],0xe7bca24b
  40d45d:	outs   dx,DWORD PTR ds:[esi]
  40d45e:	jnp    0x40d4ae
  40d460:	jg     0x40d42b
  40d462:	xor    ch,BYTE PTR [edi]
  40d464:	mov    ebx,0x7b8d7256
  40d469:	(bad)  
  40d46a:	dec    esi
  40d46b:	lods   eax,DWORD PTR ds:[esi]
  40d46c:	sub    esi,ecx
  40d46e:	dec    eax
  40d46f:	(bad)
  40d473:	loopne 0x40d49c
  40d475:	adc    al,ah
  40d477:	cmp    eax,0x135952ee
  40d47c:	popa   
  40d47d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d47e:	pop    eax
  40d47f:	adc    DWORD PTR [ebp+0x6a],edi
  40d482:	xchg   DWORD PTR [edx+esi*2+0x46],eax
  40d486:	stos   BYTE PTR es:[edi],al
  40d487:	jmp    0xd9995146
  40d48c:	sbb    al,0x90
  40d48e:	push   cs
  40d48f:	xor    al,0x2f
  40d491:	retf   0x5a7c
  40d494:	mov    dl,0x25
  40d496:	add    cl,BYTE PTR [ebx-0xdfd5eda]
  40d49c:	xchg   esp,eax
  40d49d:	lods   eax,DWORD PTR ds:[esi]
  40d49e:	jne    0x40d49c
  40d4a0:	mov    edx,0x25f6559d
  40d4a5:	dec    esi
  40d4a6:	(bad)  
  40d4a7:	test   al,0x59
  40d4a9:	cmp    dl,BYTE PTR ds:0x802480ba
  40d4af:	jl     0x40d482
  40d4b1:	pushf  
  40d4b2:	aam    0xb4
  40d4b4:	mov    eax,0xff440e9
  40d4b9:	icebp  
  40d4ba:	dec    esp
  40d4bb:	add    bh,BYTE PTR [ebp+0xbec37d]
  40d4c1:	shl    BYTE PTR [esi+edx*4],1
  40d4c4:	out    dx,eax
  40d4c5:	and    bh,BYTE PTR [ecx-0x687c90cd]
  40d4cb:	mov    edx,0xe4c4691f
  40d4d0:	lods   eax,DWORD PTR ds:[esi]
  40d4d1:	imul   edi,DWORD PTR [ecx],0xa7d73700
  40d4d7:	push   ebx
  40d4d8:	stos   DWORD PTR es:[edi],eax
  40d4d9:	adc    al,0x18
  40d4db:	rol    DWORD PTR [ecx+ebx*8+0x56],0x18
  40d4e0:	mov    bl,0xe
  40d4e2:	jp     0x40d477
  40d4e4:	imul   edi,DWORD PTR [ebp+0x70],0xd5724142
  40d4eb:	lahf   
  40d4ec:	jmp    0x40d4eb
  40d4ee:	out    0x11,eax
  40d4f0:	sti    
  40d4f1:	popf   
  40d4f2:	retf   0x7364
  40d4f5:	sub    BYTE PTR [ebx+0x32453f87],dl
  40d4fb:	sbb    al,0xdd
  40d4fd:	or     ah,ch
  40d4ff:	mov    esi,0x47571e92
  40d504:	xor    edi,ecx
  40d506:	mov    DWORD PTR [esp+eax*4-0x73],ebp
  40d50a:	pop    ss
  40d50b:	popf   
  40d50c:	loopne 0x40d4cf
  40d50e:	push   ebx
  40d50f:	call   0x1d8:0xf87c487a
  40d516:	retf   
  40d517:	xor    esi,ecx
  40d519:	inc    esp
  40d51a:	mov    eax,ds:0x728877b9
  40d51f:	add    dl,BYTE PTR [ecx-0x7ad8967c]
  40d525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d526:	add    cl,BYTE PTR [edx+edi*2+0x54463113]
  40d52d:	push   eax
  40d52e:	adc    al,0xc5
  40d530:	add    al,ch
  40d532:	std    
  40d533:	ret    0x642e
  40d536:	outs   dx,BYTE PTR ds:[esi]
  40d537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d538:	or     al,0x80
  40d53a:	pop    ebx
  40d53b:	add    BYTE PTR [esi-0x4b],ch
  40d53e:	push   ebx
  40d53f:	push   cs
  40d540:	int    0xd1
  40d542:	inc    edx
  40d543:	inc    DWORD PTR [ecx-0xf]
  40d546:	cs scas eax,DWORD PTR es:[edi]
  40d548:	ret    
  40d549:	push   ebp
  40d54a:	pop    ecx
  40d54b:	jb     0x40d52f
  40d54d:	(bad)  
  40d54f:	faddp  st(3),st
  40d551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d552:	or     dh,ch
  40d554:	jb     0x40d577
  40d556:	pusha  
  40d557:	jmp    0x5b9d:0x2592e8d6
  40d55e:	psadbw mm1,QWORD PTR [esi-0xe]
  40d562:	out    0x78,eax
  40d564:	sbb    dh,BYTE PTR [edi]
  40d566:	fmulp  st(6),st
  40d568:	and    DWORD PTR [esi+0x2188832c],edi
  40d56e:	jne    0x40d57d
  40d570:	xchg   esp,eax
  40d571:	les    ecx,FWORD PTR [eax]
  40d573:	(bad)  
  40d574:	inc    ebp
  40d575:	(bad)  
  40d577:	jmp    0x19a68dcf
  40d57c:	jmp    0xa531bc41
  40d581:	add    al,0x9c
  40d583:	xlat   BYTE PTR ds:[ebx]
  40d584:	mov    ecx,0x73d56eb2
  40d589:	and    dl,BYTE PTR [ebx+0x14]
  40d58c:	addr16 jno 0x40d5aa
  40d58f:	inc    edi
  40d590:	mov    ds:0x364ea2e7,al
  40d595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d596:	mov    ds:0x4679b753,eax
  40d59b:	mov    ah,0x7a
  40d59d:	push   esi
  40d59e:	push   ds
  40d59f:	push   esp
  40d5a0:	lock loope 0x40d619
  40d5a3:	outs   dx,BYTE PTR ds:[esi]
  40d5a4:	jp     0x40d5b3
  40d5a6:	push   0xffffffb8
  40d5a8:	stos   BYTE PTR es:[edi],al
  40d5a9:	out    0x94,al
  40d5ab:	mov    dl,0xb8
  40d5ad:	mov    bh,0x27
  40d5af:	test   al,0x19
  40d5b1:	and    eax,0xe2d903a7
  40d5b6:	jg     0x40d61f
  40d5b8:	(bad)  
  40d5b9:	and    al,0xdd
  40d5bb:	js     0x40d57c
  40d5bd:	pop    ss
  40d5be:	pop    esi
  40d5bf:	ror    dh,0x61
  40d5c2:	imul   esi,DWORD PTR [eax-0x3e],0xffffffe7
  40d5c6:	(bad)  
  40d5c7:	(bad)  
  40d5c8:	jg     0x40d63a
  40d5ca:	jg     0x40d645
  40d5cc:	clc    
  40d5cd:	sbb    bh,dl
  40d5cf:	jns    0x40d58f
  40d5d1:	cld    
  40d5d2:	jg     0x40d5f5
  40d5d4:	call   0x35bd:0xbc6f9016
  40d5db:	inc    edi
  40d5dc:	push   es
  40d5dd:	adc    bl,ch
  40d5df:	mov    dh,0xc1
  40d5e1:	out    dx,al
  40d5e2:	jne    0x40d5f9
  40d5e4:	(bad)  
  40d5e5:	leave  
  40d5e6:	xchg   ecx,eax
  40d5e7:	push   0x46
  40d5e9:	pop    esp
  40d5ea:	xchg   ebx,eax
  40d5eb:	pop    edx
  40d5ec:	xchg   BYTE PTR [edi+0x24],ah
  40d5ef:	icebp  
  40d5f0:	(bad)  
  40d5f1:	xor    edx,DWORD PTR [edx]
  40d5f3:	jmp    0x8814b4ae
  40d5f8:	cmp    ebp,DWORD PTR [esi+0x15]
  40d5fb:	inc    edi
  40d5fc:	icebp  
  40d5fd:	lds    ebp,FWORD PTR [edx+0x6fd9baa4]
  40d603:	lea    ecx,[ebp+0x3a]
  40d606:	pop    ecx
  40d607:	pop    es
  40d608:	popf   
  40d609:	call   0x22f1632b
  40d60e:	jg     0x40d628
  40d610:	fdiv   st,st(0)
  40d612:	leave  
  40d613:	xchg   DWORD PTR [ebx],esi
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0xdae3fa98
  40d64b:	lock cmp BYTE PTR [esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	jp     0x40d6d4
  40d656:	mov    eax,ds:0x2eb9174e
  40d65b:	push   esp
  40d65c:	jmp    0xbd35:0xcc29b379
  40d663:	fisttp QWORD PTR [edi]
  40d665:	pusha  
  40d666:	ror    esi,cl
  40d668:	call   0x61e8bceb
  40d66d:	retf   
  40d66e:	jmp    0x9d4f330b
  40d673:	mov    esp,0x35c9eabc
  40d678:	jmp    0x40d6dd
  40d67a:	add    DWORD PTR [edi+0xb],esp
  40d67d:	or     edx,DWORD PTR [edi+0xfcc3c72]
  40d683:	jge    0x40d66d
  40d685:	sbb    al,0xc5
  40d687:	xchg   ebp,eax
  40d688:	xor    al,0x1f
  40d68a:	jo     0x40d686
  40d68c:	jmp    0x900fde7b
  40d691:	push   ebx
  40d692:	dec    edi
  40d693:	scas   eax,DWORD PTR es:[edi]
  40d694:	xor    BYTE PTR [edi-0x56e30afe],ah
  40d69a:	hlt    
  40d69b:	xor    DWORD PTR [ecx+0x2f],esi
  40d69e:	stos   BYTE PTR es:[edi],al
  40d69f:	sti    
  40d6a0:	push   ebp
  40d6a1:	push   ds
  40d6a2:	ins    BYTE PTR es:[edi],dx
  40d6a3:	xor    bh,BYTE PTR [ecx-0xece31cd]
  40d6a9:	sbb    eax,0x129abdf9
  40d6ae:	inc    edx
  40d6af:	out    dx,al
  40d6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6b1:	push   ecx
  40d6b2:	js     0x40d697
  40d6b4:	or     BYTE PTR [edi+edx*1+0x5a],0xa2
  40d6b9:	les    ebp,FWORD PTR [esp+edx*1]
  40d6bc:	sbb    ecx,DWORD PTR [eax-0x145b21ca]
  40d6c2:	or     eax,0x70d44c38
  40d6c7:	mov    ecx,0xb12a6637
  40d6cc:	jo     0x40d6a7
  40d6ce:	popa   
  40d6cf:	adc    dh,al
  40d6d1:	rol    ecx,0xfc
  40d6d4:	in     al,dx
  40d6d5:	pop    ds
  40d6d6:	xor    BYTE PTR [edx-0x4f],dh
  40d6d9:	pop    esi
  40d6da:	xlat   BYTE PTR ds:[ebx]
  40d6db:	jmp    0x425c:0xda05a0e5
  40d6e2:	lods   al,BYTE PTR ds:[esi]
  40d6e3:	jmp    0xc999:0xc56d2cb3
  40d6ea:	xchg   edx,eax
  40d6eb:	(bad)  
  40d6ec:	fld    TBYTE PTR [edx+0x2e]
  40d6ef:	out    dx,al
  40d6f0:	xchg   ebp,eax
  40d6f1:	add    esi,ebx
  40d6f3:	popa   
  40d6f4:	jne    0x40d75e
  40d6f6:	cmp    esi,edx
  40d6f8:	sub    BYTE PTR gs:[edi-0x5926c365],al
  40d6ff:	sub    esp,DWORD PTR [edx]
  40d701:	or     BYTE PTR [esi],dh
  40d703:	inc    ebp
  40d704:	imul   esp,ebp,0x5f411f6a
  40d70a:	pop    ecx
  40d70b:	mov    ds:0x2893f2e8,eax
  40d710:	rcl    BYTE PTR [ebx-0x5a018992],1
  40d716:	push   esi
  40d717:	dec    esp
  40d718:	mov    bh,0x61
  40d71a:	pushf  
  40d71b:	es adc esi,ebp
  40d71e:	xchg   edx,eax
  40d71f:	adc    BYTE PTR [ecx+0x108bd2a4],ah
  40d725:	icebp  
  40d726:	mov    bh,0x1c
  40d728:	adc    eax,0xbfe895f6
  40d72d:	dec    esp
  40d72e:	xcrypt-cfb (bad)
  40d72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d730:	mov    eax,ds:0xfe2931dc
  40d735:	sbb    al,BYTE PTR [esp+edx*1-0x50c6027b]
  40d73c:	pop    es
  40d73d:	xchg   edi,eax
  40d73e:	mov    ecx,eax
  40d740:	out    0xe4,al
  40d742:	repnz cli 
  40d744:	addr16 xchg ebx,eax
  40d746:	mov    ecx,0x5fbb909d
  40d74b:	ss lock ja 0x40d721
  40d74f:	test   DWORD PTR [eax+0x17],ebx
  40d752:	push   ebx
  40d753:	xchg   BYTE PTR [edi-0x36],bh
  40d756:	push   esi
  40d757:	stos   BYTE PTR es:[edi],al
  40d758:	lahf   
  40d759:	retf   0xe0c
  40d75c:	push   es
  40d75d:	inc    ecx
  40d75e:	or     eax,0xc10aeeae
  40d763:	mov    dl,0x75
  40d765:	jl     0x40d755
  40d767:	push   esp
  40d768:	ja     0x40d74f
  40d76a:	sub    al,0x88
  40d76c:	xor    edi,DWORD PTR ds:0xaf6b58cc
  40d772:	xchg   DWORD PTR ds:0x2ba7d304,edi
  40d778:	mov    bh,0x33
  40d77a:	sub    esi,DWORD PTR [edx+0x2a]
  40d77d:	sbb    ebp,DWORD PTR [eax]
  40d77f:	xchg   esp,eax
  40d780:	sbb    al,0xbb
  40d783:	mov    WORD PTR [edi+ebp*1+0x483b338b],?
  40d78a:	and    al,0xa6
  40d78c:	pop    ebp
  40d78d:	and    dl,cl
  40d78f:	jnp    0x40d80d
  40d791:	and    BYTE PTR [edi+edx*8+0x4a],0x81
  40d796:	js     0x40d7d4
  40d798:	fwait
  40d799:	mov    eax,0x9d4ddd4
  40d79e:	ja     0x40d78c
  40d7a0:	fnstcw WORD PTR [eax+0x2f768ae2]
  40d7a6:	fnsetpm(287 only) 
  40d7a8:	pop    esp
  40d7a9:	inc    esi
  40d7aa:	xor    al,0xf9
  40d7ac:	lods   al,BYTE PTR ds:[esi]
  40d7ad:	pusha  
  40d7ae:	inc    edx
  40d7af:	lds    esp,FWORD PTR [ecx-0x58]
  40d7b2:	dec    edi
  40d7b3:	adc    DWORD PTR ds:0x2404837d,esi
  40d7b9:	mov    eax,ds:0x57f1db68
  40d7be:	push   ebx
  40d7bf:	mov    DWORD PTR [edx],esp
  40d7c1:	ins    BYTE PTR es:[edi],dx
  40d7c2:	mov    ch,0x9d
  40d7c4:	sub    eax,0xfcd1a89
  40d7c9:	pop    ss
  40d7ca:	mov    edi,0xc66e1d49
  40d7cf:	fcomp  QWORD PTR [edx-0x33]
  40d7d2:	in     al,0xf
  40d7d4:	and    BYTE PTR [ebx-0x710f9aec],ch
  40d7da:	ja     0x40d849
  40d7dc:	mov    eax,ds:0xe4e01d16
  40d7e1:	out    0x38,eax
  40d7e3:	xor    BYTE PTR [edi+0x9],0x41
  40d7e7:	mov    dh,0x56
  40d7e9:	cmc    
  40d7ea:	test   DWORD PTR [esi+0x4e989eb1],0x2e78de34
  40d7f4:	pop    edi
  40d7f5:	jmp    0xf0820840
  40d7fa:	test   eax,0x4a221eb
  40d7ff:	inc    esi
  40d800:	cld    
  40d801:	cmp    al,0x8e
  40d803:	fild   WORD PTR [ecx+ecx*4]
  40d806:	xchg   esp,eax
  40d807:	and    al,bh
  40d809:	dec    ebx
  40d80a:	jnp    0x40d837
  40d80c:	cmp    al,0x83
  40d80e:	ss adc al,0xb5
  40d811:	add    esi,eax
  40d813:	stos   BYTE PTR es:[edi],al
  40d814:	adc    BYTE PTR [ecx-0x4b284de],ah
  40d81a:	je     0x40d83e
  40d81c:	adc    eax,0x1d0b06f2
  40d821:	sub    DWORD PTR [ebp+0x4fb5bcf8],ebp
  40d827:	aas    
  40d828:	aam    0xf8
  40d82a:	ja     0x40d81d
  40d82c:	xchg   ebp,eax
  40d82d:	(bad)  
  40d82e:	in     eax,0xf4
  40d830:	imul   ecx,DWORD PTR [edi],0xfb7e372a
  40d836:	fs cli 
  40d838:	lds    esi,FWORD PTR [edi+ecx*4-0x73]
  40d83c:	in     eax,dx
  40d83d:	cmp    bl,BYTE PTR [edx+0x3f]
  40d840:	aaa    
  40d841:	dec    esp
  40d842:	sbb    DWORD PTR ds:0x737a186a,ebp
  40d848:	jecxz  0x40d8a4
  40d84a:	cld    
  40d84b:	add    edi,DWORD PTR [ebp+0x789b50eb]
  40d851:	xor    edx,DWORD PTR [ebp+0x7c]
  40d854:	scas   al,BYTE PTR es:[edi]
  40d855:	inc    eax
  40d856:	mov    WORD PTR [edi],ss
  40d858:	in     eax,dx
  40d859:	and    ebp,DWORD PTR [edx-0x4bbffe8c]
  40d85f:	pop    ds
  40d860:	nop
  40d861:	ror    DWORD PTR [edi+ebx*4],0x76
  40d865:	jp     0x40d8a1
  40d867:	(bad)  
  40d868:	cmc    
  40d869:	sub    DWORD PTR ds:0x8b3254f0,esi
  40d86f:	or     dl,BYTE PTR [esp+eax*4-0x52]
  40d873:	aas    
  40d874:	mov    ss,WORD PTR [ebx+esi*8]
  40d877:	mov    ebx,0x3783e6c6
  40d87c:	inc    edx
  40d87d:	and    eax,0x41d8df7d
  40d882:	int    0x46
  40d884:	jo     0x40d853
  40d886:	das    
  40d887:	inc    edi
  40d888:	pop    ebx
  40d889:	ss or  ebx,esp
  40d88c:	enter  0x225e,0x6
  40d890:	or     BYTE PTR ss:[ebx+edx*4],al
  40d894:	in     eax,dx
  40d895:	cmc    
  40d896:	or     eax,0x9a143340
  40d89b:	les    edi,FWORD PTR [esi]
  40d89d:	aam    0xf6
  40d89f:	or     ebx,DWORD PTR [edi]
  40d8a1:	jbe    0x40d89e
  40d8a3:	dec    eax
  40d8a4:	cli    
  40d8a5:	shr    DWORD PTR fs:[esi],0x5a
  40d8a9:	or     si,WORD PTR [esi+0x498fb4be]
  40d8b0:	jae    0x40d8b3
  40d8b2:	jnp    0x40d8ed
  40d8b4:	(bad)  
  40d8b5:	popf   
  40d8b6:	mov    ecx,0xd29a6b55
  40d8bb:	fbld   TBYTE PTR [ebx+0x57]
  40d8be:	xchg   esi,eax
  40d8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8c0:	sbb    al,BYTE PTR [edx-0x54]
  40d8c3:	adc    ebx,DWORD PTR [ecx]
  40d8c5:	adc    eax,0xf59c3276
  40d8ca:	mov    ebx,0x65b0cb19
  40d8cf:	int3   
  40d8d0:	bound  esp,QWORD PTR [edi-0x39]
  40d8d3:	xor    bh,dl
  40d8d5:	les    ecx,FWORD PTR [edx]
  40d8d7:	sbb    ecx,ebp
  40d8d9:	sub    BYTE PTR [eax+0x73e20816],ah
  40d8df:	push   cs
  40d8e0:	aad    0x59
  40d8e2:	add    ch,BYTE PTR [ecx-0x419c50d2]
  40d8e8:	ins    DWORD PTR es:[edi],dx
  40d8e9:	jg     0x40d8c3
  40d8eb:	push   0x64dc94cf
  40d8f0:	clc    
  40d8f1:	test   eax,0xf727594e
  40d8f6:	mov    cl,0x1
  40d8f8:	mov    ecx,0x4b8c2e6
  40d8fd:	sbb    al,0x6c
  40d8ff:	xor    al,0xe0
  40d901:	clc    
  40d902:	out    0x69,al
  40d904:	mov    eax,ds:0x737c036f
  40d909:	dec    esi
  40d90a:	or     eax,0x5a57fdd2
  40d90f:	dec    edi
  40d910:	add    edx,ecx
  40d912:	xchg   BYTE PTR [eax],bh
  40d914:	arpl   di,bx
  40d916:	daa    
  40d917:	add    BYTE PTR [esi+0x3c],cl
  40d91a:	mov    bh,0x98
  40d91c:	int3   
  40d91d:	mov    ecx,0x4ad1e17f
  40d922:	out    0x16,eax
  40d924:	call   0xf164dc7d
  40d929:	add    DWORD PTR [ebx+0x75],eax
  40d92c:	sub    dl,BYTE PTR [edi-0x3f02e0c1]
  40d932:	pop    ebx
  40d933:	sub    al,0x70
  40d935:	lock dec ebx
  40d937:	xchg   edx,eax
  40d938:	pop    esp
  40d939:	int3   
  40d93a:	std    
  40d93b:	int    0x6
  40d93d:	xchg   esi,eax
  40d93e:	push   eax
  40d93f:	push   es
  40d940:	sbb    eax,DWORD PTR [eax+0x747645cc]
  40d946:	jb     0x40d942
  40d948:	mov    ebx,DWORD PTR [edi]
  40d94a:	lahf   
  40d94b:	add    BYTE PTR [ecx-0x68],0xc2
  40d94f:	dec    ecx
  40d950:	or     al,0x46
  40d952:	push   ebx
  40d953:	or     eax,0x435d8c5a
  40d958:	ins    DWORD PTR es:[edi],dx
  40d959:	neg    BYTE PTR [ecx+0x57040214]
  40d95f:	out    dx,eax
  40d960:	iret   
  40d961:	xchg   ebp,eax
  40d962:	(bad)  
  40d963:	pop    DWORD PTR [ebx+0x3e]
  40d966:	arpl   WORD PTR [eax-0x16acdc74],bx
  40d96c:	inc    ebx
  40d96d:	and    BYTE PTR [eax+edi*2+0x11985f7f],al
  40d974:	jge    0x40d9ec
  40d976:	mov    bl,0x4b
  40d978:	pop    es
  40d979:	pop    esp
  40d97a:	sbb    BYTE PTR [eax+0x5162711c],cl
  40d980:	call   0x19b552ba
  40d985:	repz dec edx
  40d987:	outs   dx,DWORD PTR ds:[esi]
  40d988:	bound  edx,QWORD PTR [ebx]
  40d98a:	jno    0x40d963
  40d98c:	jo     0x40d9fc
  40d98e:	lods   al,BYTE PTR ds:[esi]
  40d98f:	and    bh,bl
  40d991:	(bad)  
  40d992:	in     eax,0xe8
  40d994:	push   esi
  40d995:	and    esp,DWORD PTR es:[eax-0xd]
  40d999:	loop   0x40da14
  40d99b:	aas    
  40d99c:	mov    eax,ds:0xf41b560
  40d9a1:	and    al,0x5e
  40d9a3:	jnp    0x40d983
  40d9a5:	aas    
  40d9a6:	fcom   DWORD PTR [ebp-0x3d]
  40d9a9:	add    ecx,DWORD PTR [ebx+0x69]
  40d9ac:	rcl    DWORD PTR ds:0xd0b90805,1
  40d9b2:	mov    bh,0x4c
  40d9b4:	loop   0x40d9dc
  40d9b6:	mov    ch,BYTE PTR [edi]
  40d9b8:	adc    al,0x9f
  40d9ba:	xor    cl,al
  40d9bc:	out    0x82,al
  40d9be:	pop    edx
  40d9bf:	mov    ds:0x8633302b,al
  40d9c4:	psubb  mm0,QWORD PTR [esp+ecx*8]
  40d9c8:	int3   
  40d9c9:	adc    al,0xe4
  40d9cb:	inc    ebp
  40d9cc:	iret   
  40d9cd:	adc    BYTE PTR [edx+edx*1-0x5],ch
  40d9d1:	jo     0x40d9c6
  40d9d3:	add    DWORD PTR [eax],esp
  40d9d5:	dec    esi
  40d9d6:	adc    esp,0x2766b2a5
  40d9dc:	iret   
  40d9dd:	jle    0x40da1d
  40d9df:	(bad)  
  40d9e0:	cmp    bh,0xdf
  40d9e3:	adc    dh,bh
  40d9e5:	sbb    DWORD PTR [eax+0x18027884],esi
  40d9eb:	pop    eax
  40d9ec:	cmp    esi,DWORD PTR [edi+ecx*8]
  40d9ef:	(bad)  
  40d9f0:	jbe    0x40d98f
  40d9f2:	or     al,0x33
  40d9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f5:	or     dh,BYTE PTR [ebx+ebx*2+0x60097431]
  40d9fc:	jo     0x40da65
  40d9fe:	test   eax,0xab1d87b2
  40da03:	mov    dh,0x5
  40da05:	pop    edx
  40da06:	sub    bh,BYTE PTR [ebp+0x5f]
  40da09:	dec    eax
  40da0a:	or     edi,DWORD PTR [ecx-0x10]
  40da0d:	inc    esp
  40da0e:	inc    edx
  40da0f:	inc    eax
  40da10:	xor    al,0xd7
  40da12:	out    dx,al
  40da13:	je     0x40da6c
  40da15:	xchg   edx,eax
  40da16:	shr    DWORD PTR [ecx-0x497fd071],cl
  40da1c:	push   cs
  40da1d:	mov    ch,0x58
  40da1f:	mov    ecx,DWORD PTR [ebp+0x7c]
  40da22:	ret    
  40da23:	sbb    DWORD PTR [eax+0xc271fd5],edx
  40da29:	ret    0x2a66
  40da2c:	imul   edx,DWORD PTR [ebx],0x64
  40da2f:	xchg   edx,eax
  40da30:	test   esi,ebp
  40da32:	adc    eax,0x51cfe672
  40da37:	mov    edx,ds
  40da39:	mov    bh,0x89
  40da3b:	sbb    DWORD PTR ds:0xb0f96754,esi
  40da41:	bound  ebx,QWORD PTR [ebp+0x69]
  40da44:	retf   0x7b36
  40da47:	imul   edx,DWORD PTR [eax+0x29d052ee],0x3f83324
  40da51:	xlat   BYTE PTR ds:[ebx]
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xbc,eax
  40da6e:	xor    BYTE PTR [ebx+0x37],bh
  40da71:	xor    ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	add    al,0x18
  40da7b:	inc    ebx
  40da7c:	mov    bl,0x25
  40da7e:	scas   eax,DWORD PTR es:[edi]
  40da7f:	mov    DWORD PTR [ebx+0x2b],edi
  40da82:	loop   0x40da1d
  40da84:	stos   DWORD PTR es:[edi],eax
  40da85:	retf   0xd8b9
  40da88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da89:	inc    ebp
  40da8a:	out    0x11,eax
  40da8c:	repz fst DWORD PTR [edx]
  40da8f:	xchg   esp,eax
  40da90:	cmp    al,0x34
  40da92:	pop    ss
  40da93:	or     DWORD PTR [edx+edx*8+0x5b],ebx
  40da97:	pop    es
  40da98:	or     BYTE PTR [edi+ebx*1+0x24],al
  40da9c:	dec    edx
  40da9d:	or     BYTE PTR [ecx],0xf7
  40daa0:	test   eax,0x9d1ab37a
  40daa5:	inc    DWORD PTR [ebx]
  40daa7:	adc    al,0x98
  40daa9:	mov    esi,0x6bdeb28e
  40daae:	xchg   BYTE PTR [edx+0x6163d5ea],dh
  40dab4:	dec    ebx
  40dab5:	pop    ebp
  40dab6:	rcl    BYTE PTR [esi-0x50],cl
  40dab9:	dec    esp
  40daba:	les    esp,FWORD PTR [edi+0x62]
  40dabd:	mov    al,ds:0xca4eb5e2
  40dac2:	mov    edx,0x96d4901e
  40dac7:	fwait
  40dac8:	sti    
  40dac9:	xchg   dl,ah
  40dacb:	ins    BYTE PTR es:[edi],dx
  40dacc:	clc    
  40dacd:	mov    ?,WORD PTR [esi+0x178a0c0c]
  40dad3:	cdq    
  40dad4:	mov    edi,0x64b88494
  40dad9:	sub    esi,DWORD PTR [esi]
  40dadb:	mov    DWORD PTR [edi+ebx*4],eax
  40dade:	ret    0x54db
  40dae1:	xor    dh,BYTE PTR ds:0xdd3a9db4
  40dae7:	adc    ch,0x8e
  40daea:	dec    eax
  40daeb:	dec    eax
  40daec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daed:	(bad)  
  40daee:	xor    BYTE PTR [edx+0x2a],al
  40daf1:	mov    dh,0x1
  40daf3:	xchg   ecx,eax
  40daf4:	jecxz  0x40db4f
  40daf6:	cmc    
  40daf7:	jae    0x40db12
  40daf9:	jne    0x40daf9
  40dafb:	pop    ss
  40dafc:	xchg   ebp,eax
  40dafd:	mov    bh,0x48
  40daff:	leave  
  40db00:	mov    ebx,0xf1c3ab72
  40db05:	pop    ecx
  40db06:	mov    ds:0x3c03deee,al
  40db0b:	mov    eax,ds:0x72c9d73b
  40db10:	mov    esp,esi
  40db12:	adc    eax,0xe6d19b33
  40db17:	dec    bh
  40db19:	in     eax,0xe5
  40db1b:	cmp    edi,edx
  40db1d:	rol    DWORD PTR [ebp-0x3ae36b80],1
  40db23:	repnz push eax
  40db25:	push   ds
  40db26:	pusha  
  40db27:	sar    BYTE PTR ds:0x9e1a1172,1
  40db2d:	popa   
  40db2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db2f:	in     eax,0x34
  40db31:	mov    cl,0x73
  40db33:	push   ecx
  40db34:	mov    eax,0x9e0cd5e4
  40db39:	pop    ebx
  40db3a:	push   ebp
  40db3b:	fld    TBYTE PTR [esp+eiz*4+0x5f]
  40db3f:	xor    BYTE PTR [ebp+0x1f412786],0xa4
  40db46:	jno    0x40db29
  40db48:	out    dx,al
  40db49:	(bad)  
  40db4a:	mov    ds,WORD PTR [eax+0x6ddfb124]
  40db50:	or     al,0xa1
  40db52:	xor    al,0xbb
  40db54:	sbb    al,0x25
  40db56:	or     esp,edx
  40db58:	shl    bl,0xbf
  40db5b:	jne    0x40daee
  40db5d:	push   ebx
  40db5e:	pop    edi
  40db5f:	mov    bl,0xfd
  40db61:	into   
  40db62:	ret    
  40db63:	adc    al,0x72
  40db65:	call   DWORD PTR [esi+0xd]
  40db68:	es das 
  40db6a:	iret   
  40db6b:	in     al,0x0
  40db6d:	sti    
  40db6e:	and    al,0x41
  40db70:	cmp    edx,edi
  40db72:	es int 0xd8
  40db75:	loope  0x40db39
  40db77:	in     eax,dx
  40db78:	std    
  40db79:	xor    DWORD PTR [ecx+eax*2-0x4f53fbf3],ebx
  40db80:	mov    ebx,0x5b7a2cd3
  40db85:	cs mov al,0xc8
  40db88:	ds xchg ecx,eax
  40db8a:	sub    DWORD PTR [ebx-0x1bf58b09],ecx
  40db90:	adc    BYTE PTR [esi],dl
  40db92:	push   edi
  40db93:	lea    ebx,[ebp+0x1d2975c8]
  40db99:	push   0x53
  40db9b:	ja     0x40dbd9
  40db9d:	pop    ebp
  40db9e:	xchg   ebx,eax
  40db9f:	pop    ebx
  40dba0:	jno    0x40db51
  40dba2:	imul   ecx,ebp,0x73
  40dba5:	mov    edi,0x353af448
  40dbaa:	xchg   ebp,eax
  40dbab:	add    al,0xa5
  40dbad:	outs   dx,DWORD PTR ds:[esi]
  40dbae:	mov    DWORD PTR [esi+0x34],ebx
  40dbb1:	aaa    
  40dbb2:	sbb    eax,0xbb07a8ff
  40dbb7:	xchg   ecx,eax
  40dbb8:	fs pop ds
  40dbba:	and    bl,BYTE PTR [ebx-0x16f41cf5]
  40dbc0:	push   edx
  40dbc1:	sub    al,BYTE PTR [esi]
  40dbc3:	mov    eax,ds:0x6650992f
  40dbc8:	daa    
  40dbc9:	inc    eax
  40dbca:	sbb    eax,0xcc71d9a7
  40dbcf:	pusha  
  40dbd0:	ret    
  40dbd1:	cs inc eax
  40dbd3:	(bad)  
  40dbd4:	jl     0x40dc07
  40dbd6:	push   ss
  40dbd7:	pop    edx
  40dbd8:	xor    ebx,DWORD PTR [edi+0x110a6ca0]
  40dbde:	or     eax,0x989b545e
  40dbe3:	fadd   DWORD PTR [esi+0x13]
  40dbe6:	std    
  40dbe7:	adc    DWORD PTR [eax],esp
  40dbe9:	mov    eax,0x8ce197bc
  40dbee:	sub    BYTE PTR [ecx+0x7bd9c736],0x40
  40dbf5:	loope  0x40db7a
  40dbf7:	jb     0x40dc74
  40dbf9:	enter  0x6e92,0xe9
  40dbfd:	push   ds
  40dbfe:	pop    esp
  40dbff:	je     0x40db8f
  40dc01:	push   ebx
  40dc02:	xchg   BYTE PTR [edi-0x48],bl
  40dc05:	or     BYTE PTR [ebx-0x5de6b4cc],cl
  40dc0b:	(bad)  
  40dc0d:	sub    esi,esp
  40dc0f:	es cmp al,0x4b
  40dc12:	inc    ecx
  40dc13:	(bad)  
  40dc14:	mov    al,ds:0x694b8a6b
  40dc19:	jae    0x40dbf9
  40dc1b:	or     dl,BYTE PTR [ebx]
  40dc1d:	fist   DWORD PTR [edx+ebx*1-0x1d]
  40dc21:	dec    ebp
  40dc22:	and    ebp,DWORD PTR [ebx-0x59]
  40dc25:	pop    ebx
  40dc26:	cmp    bh,BYTE PTR ds:0xa803062d
  40dc2c:	mul    BYTE PTR [eax]
  40dc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc2f:	cmp    al,0x69
  40dc31:	sbb    BYTE PTR [edx],bl
  40dc33:	dec    edx
  40dc34:	mov    bl,0xbb
  40dc36:	inc    ebx
  40dc37:	loope  0x40dc13
  40dc39:	pop    edx
  40dc3a:	call   0x8d33:0xddcfe269
  40dc41:	fwait
  40dc42:	retf   
  40dc43:	out    0xa4,eax
  40dc45:	data16 bnd jnp 0x40dc56
  40dc49:	(bad)  
  40dc4a:	pusha  
  40dc4b:	push   0x1852e141
  40dc50:	loopne 0x40dc71
  40dc52:	fs fcomp st(4)
  40dc55:	or     BYTE PTR [ecx+0x4],cl
  40dc58:	loopne 0x40dc50
  40dc5a:	lods   al,BYTE PTR ds:[esi]
  40dc5b:	daa    
  40dc5c:	and    eax,0xafcb5487
  40dc61:	fstp   QWORD PTR [edx+0x56]
  40dc64:	jae    0x40dcda
  40dc66:	shl    BYTE PTR [edi+0x1854e62d],1
  40dc6c:	cli    
  40dc6d:	xchg   esp,ebx
  40dc6f:	xchg   ecx,eax
  40dc70:	add    eax,0x33b368f5
  40dc75:	rcl    DWORD PTR [ebx+0x45],1
  40dc78:	mov    al,ds:0xd2fb32b6
  40dc7d:	dec    edx
  40dc7e:	push   ecx
  40dc7f:	xchg   ebx,eax
  40dc80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc81:	ficom  DWORD PTR ds:0xa69e4973
  40dc87:	addr16 dec ebx
  40dc89:	inc    ebp
  40dc8a:	lds    esi,FWORD PTR [eax]
  40dc8c:	hlt    
  40dc8d:	(bad)  
  40dc8e:	gs mov esp,0x2b9ff5
  40dc94:	mov    esi,DWORD PTR [ecx-0x71f1daa8]
  40dc9a:	cmp    esp,DWORD PTR [edx]
  40dc9c:	and    BYTE PTR [edx],bl
  40dc9e:	mov    BYTE PTR [si+0x5156],0x86
  40dca4:	dec    ebx
  40dca5:	rcl    edi,1
  40dca7:	ficom  WORD PTR [ebx-0x59aab793]
  40dcad:	fisubr WORD PTR [ecx+0x19]
  40dcb0:	ins    BYTE PTR es:[edi],dx
  40dcb1:	into   
  40dcb2:	mov    eax,DWORD PTR [esi-0x46]
  40dcb5:	or     DWORD PTR [edi],0x2d5a3b02
  40dcbb:	or     BYTE PTR [ebx-0x1a],0x29
  40dcbf:	xor    al,0xff
  40dcc1:	ficomp WORD PTR [esp+esi*2+0x39]
  40dcc5:	mov    ah,0xee
  40dcc7:	lds    eax,FWORD PTR [edx-0x553b9dc3]
  40dccd:	fmulp  st(5),st
  40dccf:	adc    bh,BYTE PTR [esi+0x26]
  40dcd2:	inc    eax
  40dcd3:	mov    dl,0xdf
  40dcd5:	fist   WORD PTR [edi-0x73]
  40dcd8:	and    al,BYTE PTR [esi-0x80]
  40dcdb:	ret    0xe272
  40dcde:	lods   eax,DWORD PTR ds:[esi]
  40dcdf:	inc    esp
  40dce0:	pop    ebx
  40dce1:	inc    esi
  40dce2:	dec    ecx
  40dce3:	lock inc esp
  40dce5:	cdq    
  40dce6:	mov    ds,WORD PTR [ebx-0x40245d26]
  40dcec:	int3   
  40dced:	mov    ah,0xf7
  40dcef:	sub    edx,DWORD PTR [ebx]
  40dcf1:	ror    DWORD PTR [ebp-0xc],cl
  40dcf4:	jmp    0x40dc95
  40dcf6:	stos   DWORD PTR es:[edi],eax
  40dcf7:	inc    edi
  40dcf8:	lock shl DWORD PTR [edx-0x2eb23f3d],1
  40dcff:	mov    esi,DWORD PTR [edi-0x39a17a39]
  40dd05:	lock loope 0x40dd61
  40dd08:	fst    QWORD PTR [ebp-0x38]
  40dd0b:	mov    cl,0x23
  40dd0d:	daa    
  40dd0e:	pop    esp
  40dd0f:	add    DWORD PTR [esp+edi*8],ebp
  40dd12:	push   ecx
  40dd13:	in     al,0x8f
  40dd15:	loope  0x40dd42
  40dd17:	xchg   DWORD PTR [ebx],ebp
  40dd19:	mul    ebx
  40dd1b:	cli    
  40dd1c:	imul   ecx,DWORD PTR [ebx-0x72],0xeff99fd5
  40dd23:	out    0x11,al
  40dd25:	sub    dh,BYTE PTR [ebp-0x6aa08ac3]
  40dd2b:	mov    eax,ds:0x5cfd5b4a
  40dd30:	xor    DWORD PTR [ecx],edi
  40dd32:	repz mov ecx,?
  40dd35:	test   al,0xc8
  40dd37:	jmp    0xf503:0xd67758e8
  40dd3e:	fs sti 
  40dd40:	test   al,0xc9
  40dd42:	jp     0x40dd50
  40dd44:	pop    ss
  40dd45:	inc    edi
  40dd46:	add    BYTE PTR [ecx+ecx*8+0x423dcce3],cl
  40dd4d:	daa    
  40dd4e:	pop    edi
  40dd4f:	stc    
  40dd50:	jb     0x40dd1f
  40dd52:	jo     0x40dd7a
  40dd54:	nop
  40dd55:	into   
  40dd56:	mov    esi,0xc045a813
  40dd5b:	jb     0x40dd92
  40dd5d:	or     eax,0xf1e11806
  40dd62:	lods   al,BYTE PTR ds:[esi]
  40dd63:	pushf  
  40dd64:	in     eax,dx
  40dd65:	(bad)  
  40dd66:	(bad)  
  40dd67:	dec    edi
  40dd68:	cmp    al,0x76
  40dd6a:	jns    0x40ddbe
  40dd6c:	add    esi,eax
  40dd6e:	sub    dl,bl
  40dd70:	int3   
  40dd71:	inc    ecx
  40dd72:	idiv   BYTE PTR [ecx+0x24]
  40dd75:	push   esp
  40dd76:	fiadd  DWORD PTR [eax]
  40dd78:	or     al,0x4
  40dd7a:	adc    eax,0xc30231ff
  40dd7f:	pop    es
  40dd80:	int    0x95
  40dd82:	xchg   BYTE PTR [ecx+0x163a0a7f],ah
  40dd88:	mov    WORD PTR [edi-0x1b],cs
  40dd8b:	push   eax
  40dd8c:	xchg   esp,eax
  40dd8d:	repnz pop ecx
  40dd8f:	pop    ax
  40dd91:	fisttp DWORD PTR [ebp+0x73]
  40dd94:	sahf   
  40dd95:	mov    dh,0xb3
  40dd97:	dec    esi
  40dd98:	fwait
  40dd99:	jnp    0x40dd5e
  40dd9b:	loope  0x40de06
  40dd9d:	out    0x7,al
  40dd9f:	gs inc edx
  40dda1:	(bad)  
  40dda2:	rcr    DWORD PTR [ebp-0x12ad442a],cl
  40dda8:	adc    eax,0xb2c5f89e
  40ddad:	dec    esi
  40ddae:	xor    dl,BYTE PTR [ebx+0x63d3643f]
  40ddb4:	call   0x9440c312
  40ddb9:	aas    
  40ddba:	inc    esi
  40ddbb:	ja     0x40ddee
  40ddbd:	dec    esp
  40ddbe:	mov    edi,0xcf9eeeaf
  40ddc3:	jns    0x40ddf3
  40ddc5:	arpl   WORD PTR [edi-0x18],cx
  40ddc8:	mov    bl,0x5e
  40ddca:	int    0xaf
  40ddcc:	aaa    
  40ddcd:	aas    
  40ddce:	iret   
  40ddcf:	fs test al,0xa0
  40ddd2:	cmc    
  40ddd3:	mov    ds:0x726100c2,eax
  40ddd8:	das    
  40ddd9:	xchg   ecx,eax
  40ddda:	push   es
  40dddb:	(bad)  
  40dddc:	mov    dh,0x73
  40ddde:	stos   DWORD PTR es:[edi],eax
  40dddf:	sbb    BYTE PTR [edi-0x3b],dh
  40dde2:	test   esi,esp
  40dde4:	jno    0x40dda5
  40dde6:	push   esi
  40dde7:	lea    edx,[esi-0x4a9fff4f]
  40dded:	loopne 0x40de15
  40ddef:	add    BYTE PTR [eax+esi*2],bl
  40ddf2:	inc    ebx
  40ddf3:	aas    
  40ddf4:	jg     0x40de2f
  40ddf6:	push   0xffffff9a
  40ddf8:	mov    ecx,0xd7675899
  40ddfd:	(bad)  
  40ddfe:	pop    ebx
  40ddff:	ficom  WORD PTR [esi]
  40de01:	push   edx
  40de02:	sbb    al,0x84
  40de04:	push   cs
  40de05:	jg     0x40de5f
  40de07:	sbb    dl,BYTE PTR [ebp+esi*4-0x7a]
  40de0b:	cmp    BYTE PTR ds:0x8293bb9d,dl
  40de11:	mov    BYTE PTR [edi+0x7214ecc8],ch
  40de17:	mov    ch,BYTE PTR [esi-0x4e7e4f57]
  40de1d:	loop   0x40de31
  40de1f:	aam    0x77
  40de21:	sub    eax,0xd126a934
  40de26:	jmp    0x5e00:0x6ff68f8f
  40de2d:	stos   BYTE PTR es:[edi],al
  40de2e:	shr    DWORD PTR [edi-0x76],1
  40de31:	xchg   BYTE PTR [ebp+0x3],dh
  40de34:	loopne 0x40dddf
  40de36:	xchg   BYTE PTR [esi+0x6e0c7d2b],ah
  40de3c:	ins    BYTE PTR es:[edi],dx
  40de3d:	enter  0xc836,0x80
  40de41:	fist   WORD PTR [ebp+ebx*8+0x1d8e4f89]
  40de48:	adc    eax,0x5eab4f27
  40de4d:	push   0x51
  40de4f:	ret    0x1dd5
  40de52:	imul   ebx,DWORD PTR [ebx+0x64ac5aea],0x5dc5066
  40de5c:	into   
  40de5d:	retf   0x2f78
  40de60:	aad    0x71
  40de62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de63:	lds    edx,FWORD PTR [edi]
  40de65:	pushf  
  40de66:	je     0x40de36
  40de68:	lahf   
  40de69:	pushf  
  40de6a:	cmp    BYTE PTR [eax],0x22
  40de6d:	inc    ecx
  40de6e:	push   ebx
  40de6f:	loopne 0x40dea7
  40de71:	cld    
  40de72:	inc    ecx
  40de73:	mov    DWORD PTR [ebp-0x8],edx
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	adc    BYTE PTR ds:0xae342a7b,al
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	sbb    eax,DWORD PTR [ecx+0x6b974f8d]
  40dea3:	cs adc dl,al
  40dea6:	xor    BYTE PTR [ebx+0x20faadfa],cl
  40deac:	jbe    0x40debf
  40deae:	jmp    0x40de57
  40deb0:	xor    DWORD PTR [eax-0x71],edi
  40deb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb4:	sub    al,0x11
  40deb6:	and    eax,0x6bf3a7bd
  40debb:	les    ecx,FWORD PTR [ecx+0x57]
  40debe:	enter  0x6eea,0xf8
  40dec2:	fild   QWORD PTR [ecx+0x57]
  40dec5:	sbb    DWORD PTR [eax+0x5acf3da6],ebx
  40decb:	add    al,0xd9
  40decd:	inc    edi
  40dece:	imul   ebp,DWORD PTR [ebx-0x38],0x68e3120a
  40ded5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded6:	ror    DWORD PTR [ebp+0xea7f4f0],1
  40dedc:	sbb    eax,DWORD PTR [edx]
  40dede:	adc    al,0x9d
  40dee0:	mov    al,ds:0xff969e19
  40dee5:	fdivr  QWORD PTR [ebx+0x4]
  40dee8:	call   DWORD PTR [ecx+ebx*1-0x39]
  40deec:	imul   ecx,edx,0x2b
  40deef:	or     ah,BYTE PTR [ebx+0x3f]
  40def2:	sbb    DWORD PTR [edx+0x5a],esi
  40def5:	jg     0x40df02
  40def7:	dec    eax
  40def8:	push   edx
  40def9:	call   0x7a763f9d
  40defe:	fsubrp st(5),st
  40df00:	repnz dec edx
  40df02:	mov    ebx,0xd47689d5
  40df07:	jbe    0x40def2
  40df09:	pop    ebx
  40df0a:	pop    ss
  40df0b:	mov    dh,0xb8
  40df0d:	out    0x9,eax
  40df0f:	fstp   DWORD PTR [edx]
  40df11:	imul   esp,DWORD PTR [eax+eax*8-0x80],0x4b
  40df16:	add    edi,DWORD PTR [edx-0x62a79ddf]
  40df1c:	ret    0x2ff5
  40df1f:	call   0xf34d0086
  40df24:	xchg   ebx,eax
  40df25:	es das 
  40df27:	or     esi,DWORD PTR [edi+0x35]
  40df2a:	xor    dl,BYTE PTR [eax]
  40df2c:	neg    DWORD PTR [edx-0x2b]
  40df2f:	push   esi
  40df30:	jg     0x40deea
  40df32:	dec    ecx
  40df33:	and    dl,dh
  40df35:	dec    esi
  40df36:	loop   0x40deb9
  40df38:	inc    edx
  40df39:	jmp    0xf5d5:0x90f340d0
  40df40:	dec    edi
  40df41:	xor    edx,DWORD PTR [ebp-0x7c]
  40df44:	jecxz  0x40df48
  40df46:	std    
  40df47:	scas   al,BYTE PTR es:[edi]
  40df48:	pop    esp
  40df49:	loop   0x40dfa7
  40df4b:	add    ebx,edi
  40df4d:	xchg   ecx,eax
  40df4e:	mov    al,ds:0x96460a20
  40df53:	daa    
  40df54:	mov    edx,0x36775b00
  40df59:	aad    0xef
  40df5b:	xor    bh,bl
  40df5d:	push   ds
  40df5e:	in     eax,0xcb
  40df60:	dec    edi
  40df61:	mov    ah,0xc6
  40df63:	jmp    0x40df29
  40df65:	adc    DWORD PTR [edi+0x5],ebx
  40df68:	clc    
  40df69:	adc    BYTE PTR [edi],ah
  40df6b:	retf   
  40df6c:	pushf  
  40df6d:	std    
  40df6e:	call   0xb0e818ea
  40df73:	lds    ebx,FWORD PTR [eax-0x35e36026]
  40df79:	inc    edx
  40df7a:	xor    BYTE PTR [edi-0x77],dh
  40df7d:	cs add al,0xaa
  40df80:	mov    ah,0xd4
  40df82:	jne    0x40df25
  40df84:	out    dx,al
  40df85:	mov    ?,WORD PTR ds:[eax+ecx*1]
  40df89:	sub    al,0x55
  40df8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df8c:	into   
  40df8d:	popf   
  40df8e:	dec    ecx
  40df8f:	jnp    0x40dfe9
  40df91:	sbb    esi,esi
  40df93:	or     al,0xa9
  40df95:	mov    bl,0x6a
  40df97:	cmp    DWORD PTR [ebp+edi*4+0x1e],edx
  40df9b:	mov    ebp,0xb678db44
  40dfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa1:	stos   BYTE PTR es:[edi],al
  40dfa2:	retf   
  40dfa3:	repnz imul esi,edx,0x5bcc875c
  40dfaa:	jmp    0x4d0e30fa
  40dfaf:	leave  
  40dfb0:	out    dx,eax
  40dfb1:	xchg   esi,eax
  40dfb2:	shrd   eax,esp,0x77
  40dfb6:	pop    ebp
  40dfb7:	(bad)  [edx-0x53]
  40dfba:	dec    bl
  40dfbc:	xchg   ebp,eax
  40dfbd:	xchg   cl,ah
  40dfbf:	add    eax,DWORD PTR [ecx]
  40dfc1:	add    ebp,DWORD PTR [ebp+0x49c545be]
  40dfc7:	mov    esi,0xf0d02ee8
  40dfcc:	or     BYTE PTR [edi],0x28
  40dfcf:	or     al,0xba
  40dfd1:	sti    
  40dfd2:	mov    eax,0x1bef7e70
  40dfd7:	fistp  WORD PTR [edx]
  40dfd9:	add    BYTE PTR [edi-0xddd8688],bh
  40dfdf:	aam    0x29
  40dfe1:	js     0x40df88
  40dfe3:	pop    ecx
  40dfe4:	loope  0x40e01d
  40dfe6:	xchg   ebx,eax
  40dfe7:	adc    ebp,DWORD PTR [edi+0x3]
  40dfea:	or     BYTE PTR [edi-0x5d],ah
  40dfed:	mov    ebp,0xb74d2822
  40dff2:	test   BYTE PTR [edi+0x639a890f],0xb4
  40dff9:	jo     0x40dfea
  40dffb:	pop    edi
  40dffc:	or     ecx,DWORD PTR [eax-0xe67b91f]
  40e002:	add    al,0x2a
  40e004:	push   ds
  40e005:	jp     0x40e030
  40e007:	cdq    
  40e008:	in     eax,dx
  40e009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e00a:	push   esi
  40e00b:	lock imul ebp,DWORD PTR [esi],0xc5d3daee
  40e012:	addr16 into 
  40e014:	ins    BYTE PTR es:[edi],dx
  40e015:	call   0x360ac3d
  40e01a:	add    BYTE PTR [eax],ah
  40e01c:	ss pop es
  40e01e:	pop    eax
  40e01f:	dec    ebp
  40e020:	push   ebx
  40e021:	sub    ecx,0xffffffa7
  40e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e025:	std    
  40e026:	out    0x31,eax
  40e028:	xchg   edx,eax
  40e029:	mov    ds:0xf8ec4e84,al
  40e02e:	mov    ebx,0xf7606374
  40e033:	ret    
  40e034:	je     0x40e06d
  40e036:	mov    eax,0x108dd7c5
  40e03b:	push   0x4dea78fc
  40e040:	mov    ah,ch
  40e042:	pop    ebp
  40e043:	xchg   edi,edi
  40e045:	les    ebx,FWORD PTR ds:0x9b278d21
  40e04b:	inc    edi
  40e04c:	popf   
  40e04d:	aaa    
  40e04e:	cdq    
  40e04f:	pop    ebp
  40e050:	cld    
  40e051:	inc    cx
  40e053:	shr    cl,1
  40e055:	sbb    ch,BYTE PTR [ecx-0x68]
  40e058:	jns    0x40e0c6
  40e05a:	std    
  40e05b:	add    DWORD PTR [edx+0x4a],edx
  40e05e:	in     eax,0x41
  40e060:	aad    0x99
  40e062:	inc    edx
  40e063:	stc    
  40e064:	ficomp WORD PTR [esi]
  40e066:	loopne 0x40e0c6
  40e068:	fchs   
  40e06a:	push   ecx
  40e06b:	je     0x40e0ca
  40e06d:	pushf  
  40e06e:	int    0x4f
  40e070:	pop    ebx
  40e071:	lds    ebx,FWORD PTR [esi-0x4d]
  40e074:	cmp    eax,0xe39573d3
  40e079:	(bad)  
  40e07a:	mov    BYTE PTR [ecx+edx*4],al
  40e07d:	pop    eax
  40e07e:	std    
  40e07f:	adc    eax,0xdb6e744
  40e084:	xor    ch,BYTE PTR [eax+0x726cdcd2]
  40e08a:	xlat   BYTE PTR ds:[ebx]
  40e08b:	jge    0x40e02d
  40e08d:	sbb    al,BYTE PTR [ebx+edi*1]
  40e090:	data16 jmp 0x40e09c
  40e093:	xor    eax,0x3a03807
  40e098:	or     cl,BYTE PTR [ecx-0x7a6ee333]
  40e09e:	gs xchg ecx,eax
  40e0a0:	adc    bh,dl
  40e0a2:	xchg   BYTE PTR [edi+edi*4-0x5f76be70],bh
  40e0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0aa:	adc    eax,0xe7a49a60
  40e0af:	jnp    0x40e0a2
  40e0b1:	xor    DWORD PTR [edi-0x42],0x8
  40e0b5:	xlat   BYTE PTR ds:[ebx]
  40e0b6:	(bad)  
  40e0b7:	pushf  
  40e0b8:	xchg   ebx,eax
  40e0b9:	push   ecx
  40e0ba:	pop    es
  40e0bb:	das    
  40e0bc:	(bad)  
  40e0bd:	add    eax,DWORD PTR ss:0x7ecfc98e
  40e0c4:	test   al,0x15
  40e0c6:	add    DWORD PTR [edx-0x27],edx
  40e0c9:	iret   
  40e0ca:	outs   dx,DWORD PTR ds:[esi]
  40e0cb:	pop    eax
  40e0cc:	jle    0x40e11f
  40e0ce:	add    edi,DWORD PTR [ebp+0x7b6b4283]
  40e0d4:	popf   
  40e0d5:	aas    
  40e0d6:	push   0xffffffad
  40e0d8:	or     DWORD PTR [ebp-0x6c],ebx
  40e0db:	out    0xec,al
  40e0dd:	pop    ecx
  40e0de:	dec    ecx
  40e0df:	jb     0x40e100
  40e0e1:	(bad)  
  40e0e2:	fs mov cl,0xf2
  40e0e5:	test   BYTE PTR [ebp-0x5b],bh
  40e0e8:	cmp    bl,bh
  40e0ea:	mov    cl,0x6f
  40e0ec:	inc    edx
  40e0ed:	dec    esp
  40e0ee:	mov    eax,0x34a36012
  40e0f3:	jle    0x40e10f
  40e0f5:	repnz sti 
  40e0f7:	jns    0x40e102
  40e0f9:	xor    DWORD PTR [ecx+0xdc391c3],0xccad1661
  40e103:	inc    esp
  40e104:	xor    DWORD PTR [ecx+0x5c],esi
  40e107:	push   ds
  40e108:	jns    0x40e08f
  40e10a:	mov    eax,0x68984118
  40e10f:	sbb    dl,bh
  40e111:	(bad)  [ecx]
  40e113:	or     al,BYTE PTR [edi+0x50]
  40e116:	add    al,0xef
  40e118:	pop    eax
  40e119:	dec    ecx
  40e11a:	fwait
  40e11b:	adc    ebx,DWORD PTR [ebx]
  40e11d:	mov    eax,0x2ab95080
  40e122:	lock inc edx
  40e124:	xor    BYTE PTR [eax],bh
  40e126:	sbb    ebp,DWORD PTR [ebp+esi*1+0x7e]
  40e12a:	or     BYTE PTR [edx+0x55],dl
  40e12d:	mov    dh,0xd8
  40e12f:	mov    ebp,0xfd6433d9
  40e134:	ins    BYTE PTR es:[edi],dx
  40e135:	pmulhw mm3,QWORD PTR [eax+0x272f4b0]
  40e13c:	lock jbe 0x40e154
  40e13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e140:	sub    DWORD PTR [ebx+0x717515b6],esi
  40e146:	mov    bh,0x51
  40e148:	lods   al,BYTE PTR ds:[esi]
  40e149:	mov    cl,0x86
  40e14b:	lock fld DWORD PTR [ecx+0x34]
  40e14f:	and    ebp,DWORD PTR [eax]
  40e151:	pop    esp
  40e152:	mov    ds:0x765fb5,eax
  40e157:	aad    0x22
  40e159:	stc    
  40e15a:	mov    edx,0x7f0062b4
  40e15f:	adc    eax,0xe23f102a
  40e164:	hlt    
  40e165:	(bad)  
  40e166:	sbb    eax,0xa39e25f7
  40e16b:	outs   dx,BYTE PTR ds:[esi]
  40e16c:	or     DWORD PTR [edx+0x4d],0x78e23bff
  40e173:	or     eax,0x97033f73
  40e178:	xor    al,0xb3
  40e17a:	sti    
  40e17b:	mov    ds:0xa55b4940,eax
  40e180:	push   edi
  40e181:	(bad)  
  40e183:	cmp    eax,ebp
  40e185:	adc    cl,dh
  40e187:	and    esi,edi
  40e189:	or     DWORD PTR [esi+0x4b4f04cf],edx
  40e18f:	pop    eax
  40e190:	sbb    edx,DWORD PTR [ebx+0x329a03a0]
  40e196:	mov    ds:0x365f74b,al
  40e19b:	inc    ecx
  40e19c:	push   es
  40e19d:	or     eax,0xffffffa8
  40e1a0:	lds    esi,FWORD PTR [edi+eiz*2]
  40e1a3:	out    0x7,eax
  40e1a5:	jns    0x40e1a9
  40e1a7:	xchg   esi,eax
  40e1a8:	sub    ebp,DWORD PTR [esi+eiz*2-0x4c]
  40e1ac:	mov    eax,0x3863a831
  40e1b1:	(bad)  
  40e1b2:	xor    esi,DWORD PTR [edx-0x5e]
  40e1b5:	sbb    BYTE PTR [esi],ch
  40e1b7:	and    eax,0xd5dccba7
  40e1bc:	call   0xb47ce56f
  40e1c1:	fwait
  40e1c2:	add    eax,0xe5f73111
  40e1c7:	push   ds
  40e1c8:	shr    BYTE PTR [esp+edi*4-0x31],0x68
  40e1cd:	sub    eax,0x616e598a
  40e1d2:	je     0x40e21e
  40e1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d5:	push   edi
  40e1d6:	mov    dl,0x4a
  40e1d8:	mov    ch,0x58
  40e1da:	ins    DWORD PTR es:[edi],dx
  40e1db:	cmp    eax,0x121926ba
  40e1e0:	adc    ah,ch
  40e1e2:	pop    ss
  40e1e3:	xchg   edi,eax
  40e1e4:	mov    esi,0xc1902ec2
  40e1e9:	es sub al,0x75
  40e1ec:	addr16 rcl bh,cl
  40e1ef:	or     bl,0x43
  40e1f2:	fs mov bx,0x1068
  40e1f7:	cmp    eax,0x7c4511d4
  40e1fc:	or     al,0x8b
  40e1fe:	shl    DWORD PTR [esi+0x2c],cl
  40e201:	mov    al,ds:0x3209e449
  40e206:	leave  
  40e207:	mov    eax,0x24c19c2e
  40e20c:	sbb    al,0x43
  40e20e:	or     al,0x48
  40e210:	mov    al,0xed
  40e212:	pop    ds
  40e213:	mov    ebx,0x3af40d67
  40e218:	loope  0x40e28f
  40e21a:	dec    esp
  40e21b:	add    ah,al
  40e21d:	jns    0x40e1b9
  40e21f:	jmp    0xb3513b
  40e224:	mov    ecx,0x18f006ff
  40e229:	or     bl,BYTE PTR [eax-0x41]
  40e22c:	push   DWORD PTR [ebx+0x79bdc5a]
  40e232:	dec    ebx
  40e233:	fwait
  40e234:	xor    DWORD PTR [esp+edx*1],esi
  40e237:	jg     0x40e227
  40e239:	cmp    al,0x1e
  40e23b:	jne    0x7a2ab5fc
  40e241:	in     al,0xd9
  40e243:	call   0xcd043371
  40e248:	push   cs
  40e249:	test   al,0x18
  40e24b:	dec    esp
  40e24c:	sahf   
  40e24d:	add    eax,DWORD PTR [ebx+0x39]
  40e250:	cmp    DWORD PTR [esi-0x3b],ebp
  40e253:	ss test al,0xee
  40e256:	sbb    al,0x21
  40e258:	in     eax,0x4d
  40e25a:	mov    ebp,0x5a8a902d
  40e25f:	inc    ebp
  40e260:	daa    
  40e261:	aas    
  40e262:	and    edi,esp
  40e264:	and    BYTE PTR [ebx],bh
  40e266:	out    0xe8,al
  40e268:	pop    ss
  40e269:	lds    edi,FWORD PTR [ebx+0x5b]
  40e26c:	xlat   BYTE PTR ds:[ebx]
  40e26d:	jmp    0x36168eed
  40e272:	pop    es
  40e273:	shr    DWORD PTR [edx-0x7c],0xdd
  40e277:	neg    BYTE PTR [ebx+0x2ad7ca74]
  40e27d:	stos   DWORD PTR es:[edi],eax
  40e27e:	jg     0x40e2c8
  40e280:	jne    0x40e2da
  40e282:	dec    eax
  40e283:	adc    DWORD PTR [ecx],ecx
  40e285:	and    al,0x64
  40e287:	pop    ss
  40e288:	scas   al,BYTE PTR es:[edi]
  40e289:	xchg   DWORD PTR [ebp-0x7174fcf8],ebp
  40e28f:	loopne 0x40e2f5
  40e291:	cmp    al,0x41
  40e293:	ds (bad) 
  40e295:	pop    ss
  40e296:	sbb    ch,BYTE PTR [ebx]
  40e298:	cli    
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x195e5ddc
  40e2c4:	or     eax,0xaa2eebd7
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	cmp    al,0xcd
  40e2d1:	(bad)  
  40e2d3:	xchg   edx,eax
  40e2d4:	fwait
  40e2d5:	pop    eax
  40e2d6:	sbb    al,dh
  40e2d8:	and    ch,bl
  40e2da:	xchg   BYTE PTR [ecx-0x33aa9c1c],ah
  40e2e0:	rcr    ecx,0x3b
  40e2e3:	(bad)  
  40e2e4:	or     edi,DWORD PTR [eax+0x7b11d324]
  40e2ea:	inc    esi
  40e2eb:	pusha  
  40e2ec:	pop    esp
  40e2ed:	mov    ah,0x9b
  40e2ef:	fild   DWORD PTR [ebx-0x47810e28]
  40e2f5:	dec    eax
  40e2f6:	adc    DWORD PTR [eax+0x2a30bfa5],edx
  40e2fc:	xor    BYTE PTR [ecx+edx*1-0x69],dh
  40e300:	lahf   
  40e301:	sbb    BYTE PTR [ebp-0x311470a9],dh
  40e307:	mov    dh,0x20
  40e309:	push   ecx
  40e30a:	icebp  
  40e30b:	pop    ebx
  40e30c:	jmp    0x72ee:0x80ad6fbf
  40e313:	pop    edi
  40e314:	push   0x78
  40e316:	stos   DWORD PTR es:[edi],eax
  40e317:	mov    al,0x2a
  40e319:	and    eax,0x419ea120
  40e31f:	and    al,0x63
  40e321:	push   ebx
  40e322:	xchg   edx,eax
  40e323:	mov    edi,0xd3859bb
  40e328:	xor    eax,0xf11604b8
  40e32d:	or     bh,al
  40e32f:	in     al,0xca
  40e331:	into   
  40e332:	pushf  
  40e333:	enter  0x52a0,0xb5
  40e337:	dec    edi
  40e338:	lods   eax,DWORD PTR ds:[esi]
  40e339:	mov    dh,dh
  40e33b:	es jnp 0x40e2df
  40e33e:	xchg   ecx,eax
  40e33f:	stc    
  40e340:	jne    0x40e304
  40e342:	sub    al,0xa6
  40e344:	into   
  40e345:	mov    ebp,0x19f0ad
  40e34a:	out    0x9c,al
  40e34c:	lock sbb esi,ebp
  40e34f:	xchg   BYTE PTR [eax+0xac44567],bh
  40e355:	popf   
  40e356:	shl    BYTE PTR [ebx-0x5f],1
  40e359:	nop    esp
  40e35c:	ret    
  40e35d:	add    DWORD PTR [ebp-0x63],edi
  40e360:	(bad)  
  40e361:	aam    0x84
  40e363:	shr    DWORD PTR [eax],1
  40e365:	jmp    0xe8d5:0x217cdc2b
  40e36c:	gs loopne 0x40e343
  40e36f:	ins    BYTE PTR es:[di],dx
  40e371:	pop    ecx
  40e372:	jb     0x40e337
  40e374:	mov    esp,0x9c64ff7d
  40e379:	pop    edi
  40e37a:	pop    eax
  40e37b:	cmp    BYTE PTR [edi+0x68],ch
  40e37e:	lods   eax,DWORD PTR ds:[esi]
  40e37f:	mov    esi,DWORD PTR [edx-0x7]
  40e382:	rcr    ch,1
  40e384:	xchg   ebp,eax
  40e385:	imul   eax,DWORD PTR [ebp-0x6a],0xffffffc0
  40e389:	mov    dl,0x75
  40e38b:	scas   al,BYTE PTR es:[edi]
  40e38c:	push   0x7641b8ea
  40e391:	ds (bad) 
  40e393:	xchg   esi,eax
  40e394:	daa    
  40e395:	shl    edi,1
  40e397:	mov    cs,WORD PTR [ebx]
  40e399:	cmp    al,0xd1
  40e39b:	sub    esp,edi
  40e39d:	dec    edx
  40e39e:	pop    esp
  40e39f:	mov    edi,0x1f460cf6
  40e3a4:	pop    eax
  40e3a5:	repz or ah,BYTE PTR [edx]
  40e3a8:	jb     0x40e3dd
  40e3aa:	xchg   ecx,eax
  40e3ab:	jp     0x40e3d0
  40e3ad:	pop    edx
  40e3ae:	adc    eax,0x714d2fbd
  40e3b3:	(bad)  
  40e3b4:	mov    bh,0xea
  40e3b6:	jecxz  0x40e35f
  40e3b8:	jle    0x40e3b5
  40e3ba:	das    
  40e3bb:	mov    edx,DWORD PTR [esp+eiz*4]
  40e3be:	stos   DWORD PTR es:[edi],eax
  40e3bf:	gs mov ch,0x8c
  40e3c2:	cld    
  40e3c3:	stos   BYTE PTR es:[edi],al
  40e3c4:	fdivr  DWORD PTR [edi]
  40e3c6:	out    dx,al
  40e3c7:	mov    dl,0x2
  40e3c9:	cmp    esp,ebp
  40e3cb:	test   al,0x1a
  40e3cd:	inc    edi
  40e3ce:	ret    
  40e3cf:	ds in  eax,0x83
  40e3d2:	and    eax,0x7d10fedb
  40e3d7:	loop   0x40e3f8
  40e3d9:	addr16 jbe 0x40e3b7
  40e3dc:	mov    edx,0xa3596e49
  40e3e1:	jae    0x40e394
  40e3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e4:	loopne 0x40e3cf
  40e3e6:	adc    BYTE PTR [edi+0x7b28588e],bl
  40e3ec:	xchg   esp,ebp
  40e3ee:	leave  
  40e3ef:	xchg   edi,eax
  40e3f0:	cs inc edi
  40e3f2:	sti    
  40e3f3:	call   0x7406:0x3560f50a
  40e3fa:	cmp    eax,0xf6741877
  40e3ff:	out    0xc4,al
  40e401:	add    bh,BYTE PTR [eax-0x310f824f]
  40e407:	inc    ebx
  40e408:	xchg   esp,eax
  40e409:	test   BYTE PTR [esi],dl
  40e40b:	pop    ds
  40e40c:	adc    al,0xed
  40e40e:	xor    ebp,DWORD PTR [ebp+0x5]
  40e411:	push   ecx
  40e412:	xlat   BYTE PTR ds:[ebx]
  40e413:	dec    ecx
  40e414:	mov    ebp,0x59342971
  40e419:	(bad)  
  40e41a:	ret    
  40e41b:	fild   QWORD PTR [eax+eiz*2+0x1f]
  40e41f:	fadd   st,st(0)
  40e421:	push   edx
  40e422:	sbb    eax,0xc5549215
  40e427:	jmp    0xd9ae5f2
  40e42c:	(bad)  [ecx]
  40e42e:	jnp    0x40e445
  40e430:	xlat   BYTE PTR ds:[ebx]
  40e431:	clc    
  40e432:	xlat   BYTE PTR ds:[ebx]
  40e433:	mov    esi,DWORD PTR [edx+eiz*4-0x43924f4c]
  40e43a:	jecxz  0x40e407
  40e43c:	add    eax,0x31e913ce
  40e441:	es or  edi,esi
  40e444:	fnstsw WORD PTR [esi+eax*1+0x4b]
  40e448:	jl     0x40e458
  40e44a:	mov    ch,0xc8
  40e44c:	in     eax,0xc9
  40e44e:	mov    DWORD PTR [ebx+eiz*4],edx
  40e451:	add    al,0xcc
  40e453:	mov    eax,ds:0x7dc7eb32
  40e458:	cmp    al,BYTE PTR [eax-0x110c81b5]
  40e45e:	retf   
  40e45f:	cs push 0x335013f0
  40e465:	adc    ebx,ecx
  40e467:	test   DWORD PTR ds:0x774a9016,0x936ee492
  40e471:	xchg   DWORD PTR [ebp-0x32],edx
  40e474:	iret   
  40e475:	mov    edx,0xd7198134
  40e47a:	mov    WORD PTR [edx-0x10c013e],?
  40e480:	(bad)  
  40e481:	out    dx,eax
  40e482:	mov    esi,0x4970f02c
  40e487:	aad    0x18
  40e489:	add    al,0x60
  40e48b:	(bad)  
  40e48c:	mov    esp,0xff954520
  40e491:	inc    ebx
  40e492:	xor    esp,DWORD PTR [esi]
  40e494:	dec    eax
  40e495:	mov    edi,0x76420eab
  40e49a:	mov    edi,0xb8792f5f
  40e49f:	mov    edx,0x318f33ec
  40e4a4:	pop    edx
  40e4a5:	aam    0xd
  40e4a7:	pop    edi
  40e4a8:	loop   0x40e501
  40e4aa:	popf   
  40e4ab:	cmp    eax,0xa0dfbfb9
  40e4b0:	mov    cl,0xca
  40e4b2:	or     BYTE PTR gs:[esi],dh
  40e4b5:	scas   al,BYTE PTR es:[edi]
  40e4b6:	sar    DWORD PTR [esi+0x41bfa011],1
  40e4bc:	mov    cl,0x37
  40e4be:	pop    edi
  40e4bf:	mov    ds:0xd0723b76,al
  40e4c4:	test   BYTE PTR [eax+0x792fb0c8],ch
  40e4ca:	mov    ebx,cs
  40e4cc:	(bad)  
  40e4ce:	and    DWORD PTR [esi],edi
  40e4d0:	cmp    eax,0x9bdfddcd
  40e4d5:	test   BYTE PTR [ecx],0x1b
  40e4d8:	gs test eax,0x98e327f1
  40e4de:	mov    ecx,ecx
  40e4e0:	push   es
  40e4e1:	jno    0x40e4bf
  40e4e3:	into   
  40e4e4:	pop    ebx
  40e4e5:	mov    cl,0x9
  40e4e7:	pop    ebp
  40e4e8:	push   edi
  40e4e9:	cdq    
  40e4ea:	mov    ebx,0x6631cdc9
  40e4ef:	mov    ds:0xd054e7a9,eax
  40e4f4:	adc    bl,0x8b
  40e4f7:	out    0x6d,eax
  40e4f9:	xor    ebp,DWORD PTR [ebx+0x63]
  40e4fc:	icebp  
  40e4fd:	lods   eax,DWORD PTR ds:[esi]
  40e4fe:	push   0x629073e4
  40e503:	repnz or ch,BYTE PTR [ebp-0x1f]
  40e507:	dec    edx
  40e508:	jecxz  0x40e508
  40e50a:	std    
  40e50b:	test   eax,0x87b03177
  40e510:	or     edx,0x2d
  40e513:	clc    
  40e514:	jb     0x40e563
  40e516:	pop    ebp
  40e517:	dec    edx
  40e518:	rcr    BYTE PTR [esi],0x85
  40e51b:	dec    edx
  40e51c:	xchg   esi,eax
  40e51d:	sub    al,0x85
  40e51f:	cld    
  40e520:	gs and ebp,ebp
  40e523:	add    dl,BYTE PTR [ecx+0x37]
  40e526:	mov    esi,0x4e841d84
  40e52b:	shl    BYTE PTR [edx-0x72],cl
  40e52e:	inc    ebx
  40e52f:	popf   
  40e530:	sbb    ebx,edi
  40e532:	cmp    BYTE PTR [edi+0x69],cl
  40e535:	sub    DWORD PTR [eax],ebx
  40e537:	rol    ebx,1
  40e539:	loopne 0x40e4ff
  40e53b:	push   ecx
  40e53c:	xchg   esi,eax
  40e53d:	or     DWORD PTR [ecx],esp
  40e53f:	xchg   ebx,eax
  40e540:	sbb    DWORD PTR [edx+0x4d00107f],ecx
  40e546:	xchg   edi,eax
  40e547:	mov    WORD PTR [edi+edi*4-0x47f76153],ss
  40e54e:	cmp    DWORD PTR [ecx+0x747b4c3d],edi
  40e554:	xor    eax,ecx
  40e556:	cld    
  40e557:	pop    esp
  40e558:	mov    ch,0x9
  40e55a:	cmp    edx,DWORD PTR [ebp+esi*4-0x53]
  40e55e:	ds mov dl,0xb9
  40e561:	or     eax,0xd4358f10
  40e566:	rcr    BYTE PTR [edx],0x56
  40e569:	fcmovb st,st(2)
  40e56b:	inc    esi
  40e56c:	cld    
  40e56d:	and    bl,bl
  40e56f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e570:	aam    0xb1
  40e572:	test   eax,0x42eb84ea
  40e577:	inc    esi
  40e578:	imul   edi,ebp,0x807b51d5
  40e57e:	cmp    al,0x3d
  40e580:	xor    al,0x52
  40e582:	inc    esp
  40e583:	jmp    0x1a5e3d37
  40e588:	jp     0x40e5f5
  40e58a:	jecxz  0x40e59f
  40e58c:	retf   0xd4ad
  40e58f:	imul   esi,DWORD PTR [esi-0x6],0xf1e77e4a
  40e596:	jns    0x40e573
  40e598:	call   0x22fa:0x5058155f
  40e59f:	xor    cl,BYTE PTR [edi+0x7e]
  40e5a2:	out    dx,al
  40e5a3:	into   
  40e5a4:	inc    esi
  40e5a5:	xchg   esi,eax
  40e5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5a7:	rcr    DWORD PTR [edi],cl
  40e5a9:	mov    esi,0x3cf2c6a2
  40e5ae:	dec    ebp
  40e5af:	push   ecx
  40e5b0:	cmp    ah,BYTE PTR [eax]
  40e5b2:	jl     0x40e5c8
  40e5b4:	inc    ebp
  40e5b5:	and    DWORD PTR [ecx-0x4f],edx
  40e5b8:	idiv   BYTE PTR [esi-0x1f]
  40e5bb:	jnp    0x40e562
  40e5bd:	dec    ecx
  40e5be:	pusha  
  40e5bf:	mov    al,ds:0xe2a14f0f
  40e5c4:	dec    edx
  40e5c5:	in     al,dx
  40e5c6:	pop    ebp
  40e5c7:	(bad)  
  40e5c8:	mov    ch,0x7
  40e5ca:	aas    
  40e5cb:	frstor [ecx+0xcc60c3d]
  40e5d1:	ret    0x5def
  40e5d4:	inc    edi
  40e5d5:	mov    fs,esp
  40e5d7:	loopne 0x40e5bb
  40e5d9:	es out dx,eax
  40e5db:	jo     0x40e5e1
  40e5dd:	adc    BYTE PTR [ecx],0x98
  40e5e0:	repz leave 
  40e5e2:	(bad)  
  40e5e3:	or     al,BYTE PTR [ecx-0x78]
  40e5e6:	cmp    BYTE PTR [esi-0x20],dl
  40e5e9:	mov    dh,0x1b
  40e5eb:	arpl   WORD PTR ds:0xec457635,si
  40e5f1:	repnz add edi,DWORD PTR [edi]
  40e5f4:	into   
  40e5f5:	sbb    ch,BYTE PTR [eax+0x53]
  40e5f8:	jecxz  0x40e637
  40e5fa:	jp     0x40e59e
  40e5fc:	retf   
  40e5fd:	ja     0x40e653
  40e5ff:	mov    esp,0xc9bc0d12
  40e604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e605:	dec    ebp
  40e606:	and    bh,BYTE PTR [ebx-0x11a2be8a]
  40e60c:	or     BYTE PTR [ecx-0x5a],bh
  40e60f:	inc    ebx
  40e610:	jae    0x40e5a9
  40e612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e613:	pop    esp
  40e614:	jg     0x40e648
  40e616:	and    ch,bl
  40e618:	cmc    
  40e619:	cmp    cl,cl
  40e61b:	pop    esi
  40e61c:	push   es
  40e61d:	cmp    ecx,DWORD PTR [edx]
  40e61f:	retf   
  40e620:	xor    al,bl
  40e622:	mov    DWORD PTR [edi-0x2],esi
  40e625:	fucomip st,st(6)
  40e627:	and    DWORD PTR [eax],0xffffffbc
  40e62a:	lahf   
  40e62b:	jne    0x40e5b6
  40e62d:	jmp    0x351d23c2
  40e632:	pop    edx
  40e633:	dec    edi
  40e634:	ret    0xe164
  40e637:	std    
  40e638:	shl    DWORD PTR ds:[ebx+0x1e7f438b],cl
  40e63f:	fwait
  40e640:	cli    
  40e641:	aas    
  40e642:	mov    cl,0xa7
  40e644:	jb     0x40e5cc
  40e646:	adc    ch,BYTE PTR [ebx-0x60]
  40e649:	jp     0x40e61e
  40e64b:	cmp    eax,ebx
  40e64d:	adc    eax,0x8ea1aa79
  40e652:	fist   DWORD PTR [ebx]
  40e654:	and    al,0xcf
  40e656:	pop    esp
  40e657:	outs   dx,BYTE PTR ds:[esi]
  40e658:	mov    ah,0x3f
  40e65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e65b:	pop    ds
  40e65c:	and    DWORD PTR [ebp+0x16],edx
  40e65f:	sbb    bh,BYTE PTR fs:[esi]
  40e662:	xchg   ecx,eax
  40e663:	ins    BYTE PTR es:[edi],dx
  40e664:	sbb    BYTE PTR [ebx+0x5f68296c],ah
  40e66a:	inc    edx
  40e66b:	pop    ebx
  40e66c:	adc    DWORD PTR [ecx-0x7],0x12
  40e670:	fcomi  st,st(3)
  40e672:	dec    ecx
  40e673:	scas   eax,DWORD PTR es:[edi]
  40e674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e675:	cli    
  40e676:	(bad)  [edi+ecx*8+0x60153516]
  40e67d:	hlt    
  40e67e:	rol    BYTE PTR [ebx],1
  40e680:	mov    eax,0x152a95ff
  40e685:	es sbb ebx,0xffffffd8
  40e689:	js     0x40e6f6
  40e68b:	sbb    BYTE PTR [esp+ecx*1-0x54],0x4e
  40e690:	xor    eax,0x16a2a2fc
  40e695:	inc    esi
  40e696:	or     ebx,ebp
  40e698:	loopne 0x40e675
  40e69a:	push   eax
  40e69b:	jnp    0x40e668
  40e69d:	inc    ebx
  40e69e:	out    dx,al
  40e69f:	xchg   ecx,eax
  40e6a0:	sub    ebx,DWORD PTR [ecx-0x3e]
  40e6a3:	push   0xed0877d7
  40e6a8:	out    0x63,eax
  40e6aa:	test   eax,0xf3c0bb6e
  40e6af:	pop    es
  40e6b0:	aas    
  40e6b1:	out    0x3f,al
  40e6b3:	arpl   WORD PTR [ebx+0x3e27b8ee],bx
  40e6b9:	and    eax,0x8680082c
  40e6be:	int3   
  40e6bf:	mov    al,BYTE PTR [edi+edx*8+0x71f135e1]
  40e6c6:	adc    BYTE PTR [ebx+ebp*4+0x8c2c95f],dh
  40e6cd:	add    BYTE PTR [ebp-0x75],dl
  40e6d0:	in     al,dx
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434713,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4346c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434647
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43463b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434603,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434637,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4346c7,0x4345df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4345eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43463b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4346d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4346d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4346d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4346d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4346d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4345eb
  40e789:	push   0x6202
  40e78e:	push   0x434788
  40e793:	push   0x434871
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4346d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4346d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4346d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43467b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43467b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43467b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43467b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43467b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43491f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43463b,0x17
  40e815:	cmp    DWORD PTR ds:0x43463b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43463b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43463b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43463b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43468b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4346bf,0x434607
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4345f3
  40e870:	and    ecx,DWORD PTR ds:0x4346cf
  40e876:	mov    DWORD PTR ds:0x4345f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434647,0x13
  40e889:	cmp    DWORD PTR ds:0x434647,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434647,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434647,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434647
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434647,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434647
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434647,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43467b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43467b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43467b,edi
  40e900:	cmp    DWORD PTR ds:0x43467b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43467b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4347f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43467b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43467b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43467b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43463f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434687
  40e958:	adc    DWORD PTR ds:0x4346b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43461b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434657
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4346b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4345ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434647,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4345fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4345fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4346f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4346c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4346ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434703,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4345f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434647,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4346bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434647,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4346bb
  40ea3e:	sub    DWORD PTR ds:0x4346bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43468f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434603,0x4346c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43468b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434603,0x43464f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4346bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43463f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4345ef,0x434603
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434603
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434693
  40eac7:	and    DWORD PTR ds:0x434643,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43470f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43463f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43463f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43463f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43463f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43463f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43463f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43463f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43463f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434647
  40eb55:	sbb    edx,DWORD PTR ds:0x434707
  40eb5b:	mov    DWORD PTR ds:0x434647,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43470b
  40eb6a:	or     DWORD PTR ds:0x4346bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434637
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43470f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43470b,0x4346c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43464f,0x434607
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4346bf,0x4346fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4345f7,0x434677
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4345e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434683,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43463b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434643,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434713,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43467b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434703,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4345e7,0x43468f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434693,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434693
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434693,eax
  40ec60:	cmp    DWORD PTR ds:0x434693,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434693,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434693
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434693,eax
  40ec91:	cmp    DWORD PTR ds:0x434693,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4345e3
  40eca5:	adc    eax,DWORD PTR ds:0x43467b
  40ecab:	mov    ds:0x4345e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43463f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4346f7,0x434603
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43467b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434637,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4346fb
  40ecfd:	or     DWORD PTR ds:0x434713,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434643,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434677,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4346d3,0x434637
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4346f7,0x4345ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434637,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434607,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43463f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434607,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4346ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434707,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4346c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4346c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4346c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4346c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43495b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4346c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43464f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4346c3,0x4346f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4345ff,0x4345ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43463b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4345ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4345ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4345ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4345ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43495b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4345ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4345ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0xf7
  40f16c:	popa   
  40f16d:	(bad)  
  40f16e:	scas   eax,DWORD PTR es:[edi]
  40f16f:	and    BYTE PTR [esi+0x79f47e7e],dh
  40f175:	jle    0x40f1f5
  40f177:	repz or DWORD PTR [edi],esp
  40f17a:	and    bh,BYTE PTR [edx+0x3a]
  40f17d:	mov    eax,0xb230a388
  40f182:	icebp  
  40f183:	fwait
  40f184:	xor    bh,BYTE PTR [edi]
  40f186:	ret    
  40f187:	ins    BYTE PTR es:[edi],dx
  40f188:	js     0x40f1fd
  40f18a:	jmp    0xd847b2fe
  40f18f:	push   es
  40f190:	fcomp  st(5)
  40f192:	mov    ebx,0xc564eef7
  40f197:	dec    edi
  40f198:	enter  0xc89e,0xe9
  40f19c:	repz pop ebp
  40f19e:	dec    ecx
  40f19f:	mov    eax,0x439dc6a8
  40f1a4:	icebp  
  40f1a5:	out    0xfe,al
  40f1a7:	sbb    edx,DWORD PTR [eax+0x219debe5]
  40f1ad:	mov    ch,0x35
  40f1af:	and    esp,DWORD PTR [edi]
  40f1b1:	xchg   ebx,eax
  40f1b2:	imul   edi,DWORD PTR [esi],0x124ee744
  40f1b8:	idiv   DWORD PTR [ebx-0x188ab7b7]
  40f1be:	adc    edx,DWORD PTR [edi]
  40f1c0:	clc    
  40f1c1:	add    ah,cl
  40f1c3:	sbb    DWORD PTR [edi-0x2b58b2ac],edx
  40f1c9:	jmp    0x40f1e8
  40f1cb:	mov    ss,WORD PTR [ecx-0x6d]
  40f1ce:	add    cl,BYTE PTR [edi+eiz*4-0x3d90fcb4]
  40f1d5:	lock (bad) 
  40f1d7:	and    edi,edi
  40f1d9:	cs mov ebx,0x34ee314d
  40f1df:	cdq    
  40f1e0:	cmp    al,0xc6
  40f1e2:	push   0xffffff82
  40f1e4:	shr    BYTE PTR [ebx+0x2629e3d0],cl
  40f1ea:	data16 mov bl,0xb8
  40f1ed:	push   ecx
  40f1ee:	es jp  0x40f21c
  40f1f1:	or     BYTE PTR [ecx+0x38],ah
  40f1f4:	or     al,0x2f
  40f1f6:	jae    0x40f277
  40f1f8:	std    
  40f1f9:	jbe    0x40f197
  40f1fb:	xchg   ebx,eax
  40f1fc:	and    cl,BYTE PTR [ebx-0x38]
  40f1ff:	adc    al,0x74
  40f201:	leave  
  40f202:	in     al,dx
  40f203:	cmp    BYTE PTR [ebx],cl
  40f205:	lods   al,BYTE PTR ds:[esi]
  40f206:	mov    bl,0xd4
  40f208:	mov    ds:0xf9135ffb,eax
  40f20d:	sbb    eax,0x7b9b159a
  40f212:	ins    DWORD PTR es:[edi],dx
  40f213:	mov    ecx,0x400b9094
  40f218:	mov    cs,WORD PTR [edi+ecx*1-0x4b]
  40f21c:	add    BYTE PTR [edi],0xf7
  40f21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f220:	sub    eax,0x8d7c4781
  40f225:	inc    esp
  40f226:	jge    0x40f1c2
  40f228:	call   0xe645:0xa9936ca3
  40f22f:	dec    ebx
  40f230:	cdq    
  40f231:	sbb    eax,0x215803b2
  40f236:	mov    edx,0x4354132
  40f23b:	jae    0x40f2a8
  40f23d:	mov    dl,0x40
  40f23f:	scas   al,BYTE PTR es:[edi]
  40f240:	das    
  40f241:	aad    0xd3
  40f243:	ror    DWORD PTR [ebx+edx*4],1
  40f246:	out    dx,eax
  40f247:	mov    ch,0x93
  40f249:	ret    0xca1e
  40f24c:	or     BYTE PTR [eax+0x6c],cl
  40f24f:	mov    al,ds:0xccf26fe1
  40f254:	jno    0x40f2b2
  40f256:	sub    eax,ebx
  40f258:	inc    eax
  40f259:	dec    esi
  40f25a:	repz and bl,ah
  40f25d:	jno    0x40f21a
  40f25f:	int3   
  40f260:	cld    
  40f261:	cmp    dh,BYTE PTR [edi]
  40f263:	inc    ebx
  40f264:	and    eax,0xa98ac36
  40f269:	sti    
  40f26a:	test   BYTE PTR [esp+ebx*2+0x61],ah
  40f26e:	sub    ebp,DWORD PTR [eax+0x3adf3b94]
  40f274:	push   esi
  40f275:	imul   ebp,DWORD PTR [eax+0x6263e84],0xffffff85
  40f27c:	lea    ecx,[edi-0x30]
  40f27f:	push   es
  40f280:	repz jnp 0x40f2c0
  40f283:	xchg   edi,eax
  40f284:	(bad)  [esi]
  40f286:	or     DWORD PTR [edx+0x57d9e0ca],esp
  40f28c:	adc    BYTE PTR [edx],dl
  40f28e:	fwait
  40f28f:	push   esp
  40f290:	mov    ds:0x2a371d51,al
  40f295:	ins    DWORD PTR es:[edi],dx
  40f296:	mov    al,0x99
  40f298:	fisubr DWORD PTR [ecx+0x29]
  40f29b:	xlat   BYTE PTR ds:[ebx]
  40f29c:	lods   al,BYTE PTR ds:[esi]
  40f29d:	test   eax,0x95b951f
  40f2a2:	ret    
  40f2a3:	nop
  40f2a4:	or     eax,0xe26955e6
  40f2a9:	stos   BYTE PTR es:[edi],al
  40f2aa:	mov    cl,0x10
  40f2ac:	sbb    DWORD PTR [edx],0x0
  40f2af:	sub    esi,DWORD PTR [edx-0x47581dc2]
  40f2b5:	fld    st(2)
  40f2b7:	lds    edi,FWORD PTR [edi+0x6463f4a8]
  40f2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2be:	or     DWORD PTR [edx],edx
  40f2c0:	(bad)  
  40f2c1:	fdivrp st(0),st
  40f2c3:	outs   dx,BYTE PTR ds:[esi]
  40f2c4:	test   eax,0x49d31a3b
  40f2c9:	add    eax,0x4725808f
  40f2ce:	loope  0x40f293
  40f2d0:	lea    eax,[edx+0x2c]
  40f2d3:	mov    BYTE PTR [ecx-0x20],ch
  40f2d6:	adc    esi,DWORD PTR [esi+0x12b9b43f]
  40f2dc:	in     al,dx
  40f2dd:	cmp    DWORD PTR [esi-0x67f3689b],esi
  40f2e3:	xchg   BYTE PTR [ecx+esi*8-0x29461ca4],al
  40f2ea:	ficomp DWORD PTR [eax-0x10]
  40f2ed:	fsubr  DWORD PTR [edi]
  40f2ef:	inc    ebp
  40f2f0:	addr16 mov ah,0xb2
  40f2f3:	in     al,dx
  40f2f4:	xor    ah,ch
  40f2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2f7:	push   ebx
  40f2f8:	xchg   ecx,eax
  40f2f9:	cwde   
  40f2fa:	mov    ss,WORD PTR [esi]
  40f2fc:	add    BYTE PTR [eax-0x4697d914],0x2e
  40f303:	retf   0x7dde
  40f306:	arpl   WORD PTR [edi+0x4],bx
  40f309:	lods   al,BYTE PTR ds:[esi]
  40f30a:	icebp  
  40f30b:	out    0xde,eax
  40f30d:	fidiv  WORD PTR [ecx]
  40f30f:	or     BYTE PTR [esi+0x79],dl
  40f312:	dec    esi
  40f313:	push   ebx
  40f314:	cld    
  40f315:	mov    eax,0x23e01fda
  40f31a:	loop   0x40f363
  40f31c:	ror    BYTE PTR [edx],1
  40f31e:	and    al,0x37
  40f320:	dec    edi
  40f321:	pop    esi
  40f322:	les    ebx,FWORD PTR [eax+0x1c1796ac]
  40f328:	(bad)
  40f32b:	add    ch,BYTE PTR [eax+0x12]
  40f32e:	adc    eax,0x5c7efe79
  40f333:	and    eax,0x5bfc71b3
  40f338:	mov    esi,0x7738f856
  40f33d:	mov    cx,es
  40f340:	in     eax,0x3d
  40f342:	dec    esp
  40f343:	(bad)  [edx-0x75]
  40f346:	scas   al,BYTE PTR es:[edi]
  40f347:	test   BYTE PTR [ecx+0xd],0xbb
  40f34b:	pop    esp
  40f34c:	jmp    0xd985:0x3294a919
  40f353:	mov    esp,eax
  40f355:	pop    edi
  40f356:	vmovdqu xmm2,XMMWORD PTR [ebp+0x70]
  40f35b:	enter  0xd34b,0xae
  40f35f:	mov    BYTE PTR [eax+0x12],bh
  40f362:	out    0xa0,eax
  40f364:	daa    
  40f365:	jg     0x40f2f3
  40f367:	imul   esp,DWORD PTR [edx+0x48],0xf2ccf78d
  40f36e:	adc    BYTE PTR [ecx],0xb0
  40f371:	pop    ebx
  40f372:	mov    edi,0x40cc33a9
  40f377:	xchg   edx,eax
  40f378:	sbb    eax,0x2b34af1
  40f37d:	sub    ebp,DWORD PTR [esi+0x49d62570]
  40f383:	dec    edx
  40f384:	mul    DWORD PTR [edi-0x13fd0534]
  40f38a:	mov    dl,0xdf
  40f38c:	xchg   esp,eax
  40f38d:	xchg   edi,eax
  40f38e:	test   eax,0x321b3529
  40f393:	dec    ebx
  40f394:	mov    bh,0x76
  40f396:	wbinvd 
  40f398:	mov    ch,0x4b
  40f39a:	lds    eax,FWORD PTR [ebp+0x31]
  40f39d:	adc    edi,DWORD PTR [ebx+0x5889b58c]
  40f3a3:	push   0x1f
  40f3a5:	dec    ecx
  40f3a6:	shr    esp,1
  40f3a8:	xor    BYTE PTR [edi],al
  40f3aa:	mov    esp,0x19bf25e5
  40f3af:	dec    ebx
  40f3b0:	push   ebx
  40f3b1:	xor    esp,DWORD PTR [esi+0x7a8bda66]
  40f3b7:	leave  
  40f3b8:	ror    BYTE PTR [ecx-0x5d355067],0xd7
  40f3bf:	dec    esi
  40f3c0:	(bad)  
  40f3c1:	sbb    cl,BYTE PTR [eax+0x3798d750]
  40f3c7:	imul   ebx,DWORD PTR [ebp-0x613bb6ac],0xffffff80
  40f3ce:	test   DWORD PTR [ebp+ebp*4-0x32],esi
  40f3d2:	aad    0x58
  40f3d4:	or     eax,0xd8b6d6ec
  40f3d9:	push   edx
  40f3da:	xor    BYTE PTR [ebp-0x57c2fa04],dh
  40f3e0:	es inc ecx
  40f3e2:	cs adc esp,ebx
  40f3e5:	in     eax,0x4a
  40f3e7:	xchg   edi,eax
  40f3e8:	pop    edx
  40f3e9:	int    0xa9
  40f3eb:	call   0xe3e662a1
  40f3f0:	cmp    BYTE PTR [edx-0x31026abd],0xd8
  40f3f7:	ds jb  0x40f439
  40f3fa:	call   0xaced69b7
  40f3ff:	inc    eax
  40f400:	add    al,0x52
  40f402:	mov    cl,0xa6
  40f404:	in     al,dx
  40f405:	in     eax,0x44
  40f407:	jecxz  0x40f426
  40f409:	cmp    al,0x34
  40f40b:	adc    eax,0xc479d31c
  40f410:	pop    ss
  40f411:	mov    WORD PTR [edi+0x42],ss
  40f414:	fstp   TBYTE PTR [eax+0x7a]
  40f417:	mov    es,WORD PTR [edx-0x64e181d3]
  40f41d:	mov    bh,0x17
  40f41f:	jne    0x40f40a
  40f421:	lahf   
  40f422:	hlt    
  40f423:	in     al,dx
  40f424:	xor    esi,DWORD PTR [ecx]
  40f426:	xchg   ebx,edi
  40f428:	xchg   DWORD PTR [ebp+0x1a],edx
  40f42b:	xchg   esp,eax
  40f42c:	scas   al,BYTE PTR es:[edi]
  40f42d:	pop    esp
  40f42e:	cmc    
  40f42f:	pop    ss
  40f430:	jo     0x40f450
  40f432:	cmp    DWORD PTR [ebx],ecx
  40f434:	repnz sub ebp,DWORD PTR [eax-0x2a1a9ee1]
  40f43b:	(bad)  
  40f43d:	push   edx
  40f43e:	ror    BYTE PTR [edx+0x2ef0fabf],1
  40f444:	inc    edx
  40f445:	sbb    al,0xd8
  40f447:	dec    esi
  40f448:	add    eax,0xfa84180a
  40f44d:	das    
  40f44e:	jge    0x5bedd72f
  40f454:	aas    
  40f455:	leave  
  40f456:	inc    edi
  40f457:	xchg   edi,eax
  40f458:	mov    bh,0x6a
  40f45a:	fwait
  40f45b:	into   
  40f45c:	je     0x40f41e
  40f45e:	sbb    eax,0xb71598f5
  40f463:	adc    DWORD PTR [esi-0x63655731],ebp
  40f469:	mov    BYTE PTR [esi+0x424a4a43],0x5f
  40f470:	fidiv  DWORD PTR [eax-0x6126e154]
  40f476:	adc    al,0x27
  40f478:	dec    ebx
  40f479:	or     BYTE PTR [eax],0x4e
  40f47c:	dec    esi
  40f47d:	in     al,dx
  40f47e:	push   ebx
  40f47f:	push   ebx
  40f480:	dec    eax
  40f481:	je     0x40f4b5
  40f483:	lods   al,BYTE PTR ds:[esi]
  40f484:	dec    eax
  40f485:	mov    edx,DWORD PTR [esi+0x7a]
  40f488:	mov    ch,0x10
  40f48a:	scas   al,BYTE PTR es:[edi]
  40f48b:	fsubr  QWORD PTR [eax-0x16]
  40f48e:	xor    ebp,DWORD PTR [edi+0x65]
  40f491:	(bad)  
  40f492:	aad    0x34
  40f494:	and    DWORD PTR [ebx],esi
  40f496:	or     eax,0x62477916
  40f49b:	dec    edx
  40f49c:	push   esp
  40f49d:	jmp    0x8878:0x8b00d37c
  40f4a4:	sub    ah,bl
  40f4a6:	leave  
  40f4a7:	ins    BYTE PTR es:[edi],dx
  40f4a8:	sbb    al,0xe1
  40f4aa:	mov    ds:0xb278fb32,eax
  40f4af:	ret    0xe848
  40f4b2:	mov    BYTE PTR [ebx],bl
  40f4b4:	pop    eax
  40f4b5:	sbb    al,0x48
  40f4b7:	das    
  40f4b8:	adc    eax,0x53d47a64
  40f4bd:	in     al,0x47
  40f4bf:	pop    edx
  40f4c0:	outs   dx,BYTE PTR ds:[esi]
  40f4c1:	out    0x7a,eax
  40f4c3:	mov    bl,0x88
  40f4c5:	(bad)  
  40f4c6:	retf   0xce26
  40f4c9:	inc    edx
  40f4ca:	ins    DWORD PTR es:[edi],dx
  40f4cb:	ficomp WORD PTR [ebp-0xc55f70a]
  40f4d1:	fld    QWORD PTR [ebp+0x7a]
  40f4d4:	jae    0x40f52c
  40f4d6:	icebp  
  40f4d7:	retf   0xa327
  40f4da:	aam    0xf7
  40f4dc:	ret    0xf774
  40f4df:	frstor [esi]
  40f4e1:	or     eax,0x7d35eebb
  40f4e6:	mov    esi,0x9465448d
  40f4eb:	xor    DWORD PTR [ecx+0x39b85151],0xffffff85
  40f4f2:	pushf  
  40f4f3:	clc    
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x4346fb,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43470b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4346d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4346ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43463f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43468b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x68]
  40f561:	and    ecx,DWORD PTR [ebx+esi*4-0x62]
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f592
  40f56d:	sub    DWORD PTR [esi+0x45208421],edi
  40f573:	mov    al,0x3e
  40f575:	pop    ecx
  40f576:	xor    BYTE PTR [ecx+0x33],0xac
  40f57a:	jns    0x40f577
  40f57c:	dec    eax
  40f57d:	aas    
  40f57e:	cmp    bh,BYTE PTR [ebx-0x74]
  40f581:	out    0xa8,eax
  40f583:	add    edi,DWORD PTR [eax+ebp*2-0x45]
  40f587:	cmp    al,0xa4
  40f589:	xlat   BYTE PTR ds:[ebx]
  40f58a:	cmc    
  40f58b:	sub    BYTE PTR [ebx-0x54],cl
  40f58e:	jmp    0x4721:0x60ce1a46
  40f595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f596:	adc    edi,ebx
  40f598:	repnz mov ah,0x28
  40f59b:	sahf   
  40f59c:	shl    DWORD PTR [ebx],0xfc
  40f59f:	add    eax,0xfb83dac5
  40f5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5a5:	push   0x24
  40f5a7:	or     al,BYTE PTR [ecx+0x4b]
  40f5aa:	jmp    0x539c1e2a
  40f5af:	int3   
  40f5b0:	retf   0x5a51
  40f5b3:	ins    BYTE PTR es:[edi],dx
  40f5b4:	ret    0x19e9
  40f5b7:	xchg   edx,eax
  40f5b8:	retf   0xa3f5
  40f5bb:	ins    BYTE PTR es:[edi],dx
  40f5bc:	inc    edi
  40f5bd:	jge    0x40f629
  40f5bf:	shr    DWORD PTR [edi+esi*4-0x5a],cl
  40f5c3:	push   es
  40f5c4:	ror    DWORD PTR [ecx-0x2b],cl
  40f5c7:	add    BYTE PTR [edx-0x3c],cl
  40f5ca:	jp     0x40f635
  40f5cc:	lock pop esp
  40f5ce:	adc    esp,DWORD PTR [ebx-0x55ca8323]
  40f5d4:	ds call 0xd2bc8211
  40f5da:	es mov ebp,0x999cfcf4
  40f5e0:	pop    esp
  40f5e1:	loope  0x40f637
  40f5e3:	sbb    dh,BYTE PTR [ebx-0x564bdf64]
  40f5e9:	mov    ch,0x8d
  40f5eb:	adc    eax,0x43cb6d3d
  40f5f0:	fild   QWORD PTR [ebx+0x45]
  40f5f3:	lods   al,BYTE PTR ds:[esi]
  40f5f4:	cli    
  40f5f5:	cmp    esi,DWORD PTR [ebx-0x7c]
  40f5f8:	dec    eax
  40f5f9:	ja     0x40f631
  40f5fb:	dec    esp
  40f5fc:	pop    eax
  40f5fd:	iret   
  40f5fe:	out    0xa9,al
  40f600:	(bad)  
  40f601:	sbb    al,0xe9
  40f603:	ret    
  40f604:	add    esp,DWORD PTR [ecx]
  40f606:	jo     0x40f634
  40f608:	(bad)  
  40f609:	and    bh,al
  40f60b:	cld    
  40f60c:	xchg   ecx,eax
  40f60d:	(bad)  
  40f60e:	push   edx
  40f60f:	adc    ebx,DWORD PTR [esi]
  40f611:	dec    edx
  40f612:	inc    ebp
  40f613:	adc    cl,BYTE PTR [ebx-0x4c]
  40f616:	xchg   ebx,eax
  40f617:	mov    ds:0xedf69ddb,eax
  40f61c:	xor    BYTE PTR [eax+0x30],cl
  40f61f:	dec    ecx
  40f620:	xchg   BYTE PTR [edi+0x48dbec4d],ch
  40f626:	dec    esi
  40f627:	pop    edx
  40f628:	jge    0x40f5ce
  40f62a:	xchg   edi,eax
  40f62b:	cmp    DWORD PTR [edi+0x37ea43b5],ebp
  40f631:	jle    0x40f6af
  40f633:	cmp    eax,0xf60f11a0
  40f638:	or     eax,0x19b8b34a
  40f63d:	fs je  0x40f639
  40f640:	inc    ebx
  40f641:	stos   DWORD PTR es:[edi],eax
  40f642:	daa    
  40f643:	xor    al,0xa
  40f645:	sbb    eax,0xe8c2e9f6
  40f64a:	mov    cl,0xc4
  40f64c:	cmc    
  40f64d:	ret    
  40f64e:	push   ds
  40f64f:	sbb    edi,esi
  40f651:	fidiv  DWORD PTR [edi+0x7e4df98c]
  40f657:	retf   0x8383
  40f65a:	retf   
  40f65b:	inc    ebx
  40f65c:	ja     0x40f622
  40f65e:	add    ah,ch
  40f660:	cld    
  40f661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f662:	test   BYTE PTR [esi+0x49115fb6],cl
  40f668:	jbe    0x40f650
  40f66a:	adc    ebp,DWORD PTR [ebx]
  40f66c:	push   esi
  40f66d:	dec    ebp
  40f66e:	int3   
  40f66f:	ds push cs
  40f671:	ja     0x40f639
  40f673:	pop    ds
  40f674:	sub    al,0x90
  40f676:	sbb    BYTE PTR [ebp+0x6ca32860],0xba
  40f67d:	aas    
  40f67e:	jp     0x40f64f
  40f680:	mov    DWORD PTR [edi+0x699867fd],ebp
  40f686:	aas    
  40f687:	dec    edx
  40f688:	or     dl,BYTE PTR [edx+0x4e]
  40f68b:	jecxz  0x40f6f7
  40f68d:	mov    edx,0x9d7904a4
  40f693:	xchg   edx,eax
  40f694:	outs   dx,BYTE PTR ds:[esi]
  40f695:	pop    edx
  40f696:	sbb    eax,0xe0da833e
  40f69b:	lds    ecx,FWORD PTR [esi-0x3670b17e]
  40f6a1:	and    bl,BYTE PTR [ebx-0x593d0e78]
  40f6a7:	lods   al,BYTE PTR ds:[esi]
  40f6a8:	jecxz  0x40f6e8
  40f6aa:	adc    bl,cl
  40f6ac:	jl     0x40f69f
  40f6ae:	push   esp
  40f6af:	ret    
  40f6b0:	shl    eax,1
  40f6b2:	dec    edx
  40f6b3:	xor    DWORD PTR [ecx],ebx
  40f6b5:	jg     0x40f6d2
  40f6b7:	push   eax
  40f6b8:	jp     0x40f706
  40f6ba:	jle    0x40f6df
  40f6bc:	sbb    al,0xcb
  40f6be:	inc    ecx
  40f6bf:	data16 jecxz 0x40f6b9
  40f6c2:	ss and dh,dh
  40f6c5:	inc    esi
  40f6c6:	(bad)  
  40f6c7:	cvttps2pi mm7,QWORD PTR [ebx]
  40f6ca:	add    esi,DWORD PTR [eax-0x297ae774]
  40f6d0:	scas   eax,DWORD PTR es:[edi]
  40f6d1:	adc    al,0xbd
  40f6d3:	pop    eax
  40f6d4:	xchg   BYTE PTR [ebx],bh
  40f6d6:	jmp    0xe4121f07
  40f6db:	fsub   DWORD PTR [ebx]
  40f6dd:	scas   al,BYTE PTR es:[edi]
  40f6de:	arpl   WORD PTR [edx+0x28701ee9],sp
  40f6e4:	loope  0x40f6aa
  40f6e6:	sub    al,0xfb
  40f6e8:	sub    eax,0x4fa25c84
  40f6ed:	nop
  40f6ee:	cmp    edi,DWORD PTR [esp+ebx*8+0x36bbf71e]
  40f6f5:	test   al,0x1e
  40f6f7:	int3   
  40f6f8:	sbb    al,0x7a
  40f6fa:	mov    esp,0x7bbaea36
  40f6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f700:	cmp    al,0xc1
  40f702:	adc    DWORD PTR [ecx+0x5a],0xbb188d28
  40f709:	sbb    BYTE PTR [ecx],al
  40f70b:	xchg   esi,eax
  40f70c:	mov    WORD PTR [eax+0x36],ss
  40f70f:	hlt    
  40f710:	test   al,0xc0
  40f712:	xchg   ebx,eax
  40f713:	or     eax,0xaa74b6ba
  40f718:	push   ecx
  40f719:	pop    es
  40f71a:	rol    DWORD PTR [eax+0x5600cd68],0xf3
  40f721:	test   BYTE PTR [edi+0x1f044262],cl
  40f727:	mov    al,0x36
  40f729:	int3   
  40f72a:	js     0x40f74e
  40f72c:	sub    BYTE PTR [ebx],0x44
  40f72f:	enter  0x36a6,0x11
  40f733:	test   BYTE PTR [ebp-0x2a],0x55
  40f737:	xor    ecx,esi
  40f739:	das    
  40f73a:	(bad)  
  40f73b:	cli    
  40f73c:	jmp    DWORD PTR [edx]
  40f73e:	pop    eax
  40f73f:	scas   al,BYTE PTR es:[edi]
  40f740:	xchg   ebx,eax
  40f741:	pusha  
  40f742:	mov    edi,ebx
  40f744:	mov    BYTE PTR [ebp+ecx*4+0x4d],cl
  40f748:	psubq  mm0,QWORD PTR [edi+0x2e6299c8]
  40f74f:	les    ecx,FWORD PTR [edi-0x4d3b9d79]
  40f755:	sbb    DWORD PTR [edi-0x7b],esp
  40f758:	and    esp,DWORD PTR [ebp+0x3ac9b6a1]
  40f75e:	add    DWORD PTR [edx+0x441f76bd],edi
  40f764:	xor    BYTE PTR [ebx],dh
  40f766:	lea    ebx,[ecx+eax*1]
  40f769:	je     0x40f6f8
  40f76b:	mov    ah,0xf0
  40f76d:	addr16 mov cl,0x34
  40f770:	sti    
  40f771:	jmp    0x18ef:0x47858418
  40f778:	jbe    0x40f737
  40f77a:	lods   eax,DWORD PTR gs:[esi]
  40f77c:	jecxz  0x40f76e
  40f77e:	push   0x60
  40f780:	lea    ebx,[ebp+0x55]
  40f783:	leave  
  40f784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f785:	inc    esi
  40f786:	sub    al,0xae
  40f788:	adc    eax,0x8f0dc083
  40f78d:	push   0x40
  40f78f:	xlat   BYTE PTR ds:[ebx]
  40f790:	jne    0x40f73a
  40f792:	(bad)  
  40f793:	(bad)  
  40f794:	ds push esi
  40f796:	add    eax,0x9765be96
  40f79b:	xor    DWORD PTR [edx],eax
  40f79d:	sub    BYTE PTR [edx-0x351b675],0x30
  40f7a4:	mov    bh,0x2c
  40f7a6:	mov    ebp,es
  40f7a8:	ror    DWORD PTR [ebp+ecx*4+0x284b6992],1
  40f7af:	pop    ecx
  40f7b0:	ret    
  40f7b1:	fs jo  0x40f73a
  40f7b4:	stos   DWORD PTR es:[edi],eax
  40f7b5:	loop   0x40f7f3
  40f7b7:	sub    bh,BYTE PTR [edi+0x72731477]
  40f7bd:	daa    
  40f7be:	cs repnz adc al,0x75
  40f7c2:	(bad)  
  40f7c3:	fisubr WORD PTR [eax+0x56263ced]
  40f7c9:	and    ebx,DWORD PTR ds:0x54d49db4
  40f7cf:	lods   al,BYTE PTR ds:[esi]
  40f7d0:	add    ecx,esp
  40f7d2:	push   edi
  40f7d3:	jnp    0x40f7c4
  40f7d5:	or     DWORD PTR [esp+eiz*8-0x75],ecx
  40f7d9:	sbb    DWORD PTR [edi],0x31028e88
  40f7df:	icebp  
  40f7e0:	xchg   edx,eax
  40f7e1:	jp     0x40f7fe
  40f7e3:	or     DWORD PTR [ebx+0x58],edi
  40f7e6:	and    bh,BYTE PTR [edi-0x41626c4c]
  40f7ec:	mov    ss,WORD PTR [edi+0x555846ce]
  40f7f2:	dec    ebx
  40f7f3:	enter  0x96a4,0xfd
  40f7f7:	outs   dx,BYTE PTR ds:[esi]
  40f7f8:	or     bh,0x15
  40f7fb:	dec    esp
  40f7fc:	and    eax,0x9e677612
  40f801:	repnz fpatan 
  40f804:	and    DWORD PTR [ebx-0xa5953c],esp
  40f80a:	test   eax,0x7b6de9f6
  40f80f:	jge    0x40f7bb
  40f811:	rcl    edi,0x14
  40f814:	xchg   edx,eax
  40f815:	ret    
  40f816:	jp     0x40f875
  40f818:	cs mov ecx,0xdd7db526
  40f81e:	xchg   ebp,eax
  40f81f:	clc    
  40f820:	jge    0x40f7b5
  40f822:	cld    
  40f823:	or     ebx,edi
  40f825:	lea    esp,[edx+0x2e]
  40f828:	loopne 0x40f888
  40f82a:	and    DWORD PTR [eax+ebp*1+0x785202ea],ebp
  40f831:	repnz in eax,dx
  40f833:	sbb    BYTE PTR [edx],0x8d
  40f836:	mov    ecx,0xb54ee63
  40f83b:	lods   eax,DWORD PTR ds:[esi]
  40f83c:	aaa    
  40f83d:	mov    edi,0x7d3e5ab4
  40f842:	sub    BYTE PTR [ebp-0x5f],dh
  40f845:	or     bl,BYTE PTR [edx+eiz*1]
  40f848:	gs js  0x40f85e
  40f84b:	out    dx,al
  40f84c:	pop    esp
  40f84d:	imul   eax,DWORD PTR ds:0xedc900a9,0x67978831
  40f857:	adc    al,0x7a
  40f859:	pop    edi
  40f85a:	pop    edi
  40f85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f85c:	mov    bl,0x34
  40f85e:	pop    bx
  40f860:	and    BYTE PTR [esp+ecx*1+0x7fe4c0fc],0x63
  40f868:	jbe    0x40f8b5
  40f86a:	push   esi
  40f86b:	pop    ecx
  40f86c:	adc    bh,ch
  40f86e:	inc    edx
  40f86f:	cdq    
  40f870:	cld    
  40f871:	fimul  WORD PTR [ebp-0x3fb18c57]
  40f877:	xor    dl,bl
  40f879:	sub    ecx,DWORD PTR [ebp-0x40bc9f15]
  40f87f:	xor    al,0x71
  40f881:	unpcklps xmm6,XMMWORD PTR [edi]
  40f884:	inc    ebx
  40f885:	popf   
  40f886:	scas   al,BYTE PTR es:[edi]
  40f887:	add    al,0xef
  40f889:	cli    
  40f88a:	jecxz  0x40f8dd
  40f88c:	xlat   BYTE PTR ds:[ebx]
  40f88d:	shr    ebp,0xa8
  40f890:	add    DWORD PTR [esp+eax*4-0x6f],esi
  40f894:	pop    edi
  40f895:	ret    
  40f896:	pop    esi
  40f897:	inc    ebx
  40f898:	hlt    
  40f899:	xlat   BYTE PTR ds:[ebx]
  40f89a:	les    edx,FWORD PTR [ecx-0x59]
  40f89d:	outs   dx,BYTE PTR ds:[esi]
  40f89e:	ret    0x1f45
  40f8a1:	mov    dh,dl
  40f8a3:	loop   0x40f8af
  40f8a5:	(bad)  
  40f8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a7:	mov    edi,0x906f1a93
  40f8ac:	fnstenv [ebp-0x1894f0ac]
  40f8b2:	inc    edi
  40f8b3:	rol    DWORD PTR [esi],cl
  40f8b5:	jg     0x40f8f1
  40f8b7:	into   
  40f8b8:	jno    0x40f90c
  40f8ba:	retf   
  40f8bb:	cmp    BYTE PTR [ebp+eiz*4-0x32],bl
  40f8bf:	and    eax,0x8b2caa92
  40f8c4:	mov    al,0xfd
  40f8c6:	out    0x32,eax
  40f8c8:	aas    
  40f8c9:	das    
  40f8ca:	mov    esp,0x2ca34c3f
  40f8cf:	xor    eax,0xd6889a3e
  40f8d4:	loope  0x40f85f
  40f8d6:	out    0x7a,al
  40f8d8:	and    ah,ch
  40f8da:	push   cs
  40f8db:	mov    al,0x7f
  40f8dd:	bound  esp,QWORD PTR [edi-0x743ead55]
  40f8e3:	inc    ebp
  40f8e4:	cld    
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x43463f,0x4346cf
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43468b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43470f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434693,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4345eb
  40f921:	xor    DWORD PTR ds:0x434653,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4346bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4346bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4346bf,edx
  40f940:	cmp    DWORD PTR ds:0x4346bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43464b
  40f952:	push   0x434792
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4346bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4346bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4346bf,edx
  40f986:	cmp    DWORD PTR ds:0x4346bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4346bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	sbb    ebp,DWORD PTR [ebp-0x74]
  40f9bc:	sbb    BYTE PTR [edi*4+0x79f47e7e],dl
  40f9c3:	jle    0x40fa43
  40f9c5:	xchg   DWORD PTR [ebx],edx
  40f9c7:	ds push ss
  40f9c9:	not    DWORD PTR [eax]
  40f9cb:	sbb    DWORD PTR [edi-0x158f3961],edx
  40f9d1:	popf   
  40f9d2:	test   eax,0x97a2ade7
  40f9d7:	adc    eax,DWORD PTR [ebx-0x2e90ca48]
  40f9dd:	sbb    eax,ecx
  40f9df:	sbb    DWORD PTR [ecx+0x6],ebx
  40f9e2:	stc    
  40f9e3:	or     eax,0x2b0eec9
  40f9e8:	stc    
  40f9e9:	fiadd  WORD PTR [eax-0x7c]
  40f9ec:	mov    bh,0x7e
  40f9ee:	pop    esi
  40f9ef:	out    dx,al
  40f9f0:	fstp   QWORD PTR [edx+0x1a]
  40f9f3:	jmp    0xc7c9:0x9aa9ea44
  40f9fa:	jnp    0x40fa3d
  40f9fc:	adc    esi,ebx
  40f9fe:	pop    edx
  40f9ff:	sbb    ebp,esp
  40fa01:	fiadd  WORD PTR [ecx+0x26]
  40fa04:	adc    al,0xf
  40fa06:	push   es
  40fa07:	mov    ecx,0x57e06403
  40fa0c:	add    ecx,DWORD PTR [esi+0x6fff689c]
  40fa12:	sar    dh,0xb4
  40fa15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa16:	inc    esp
  40fa17:	dec    BYTE PTR [ebx+0x57]
  40fa1a:	push   ds
  40fa1b:	inc    esi
  40fa1c:	push   cs
  40fa1d:	mov    esi,0x667cd7ce
  40fa22:	push   ecx
  40fa23:	jp     0x40fa34
  40fa25:	inc    edx
  40fa26:	cmc    
  40fa27:	cwde   
  40fa28:	in     al,0x5c
  40fa2a:	out    0x56,al
  40fa2c:	out    dx,eax
  40fa2d:	or     eax,0xbd602da3
  40fa32:	cs loop 0x40fa94
  40fa35:	mov    eax,0x7855ecc7
  40fa3a:	or     dl,BYTE PTR ds:0x72eb2dfb
  40fa40:	into   
  40fa41:	add    DWORD PTR [edx+0x72],edx
  40fa44:	lea    edx,[eax-0x3e8f4cce]
  40fa4a:	test   al,0x2
  40fa4c:	fisttp WORD PTR [ebp-0x31]
  40fa4f:	pop    eax
  40fa50:	int3   
  40fa51:	aam    0x3d
  40fa53:	popa   
  40fa54:	pusha  
  40fa55:	adc    al,0x5c
  40fa57:	daa    
  40fa58:	xchg   edi,eax
  40fa59:	ins    DWORD PTR es:[edi],dx
  40fa5a:	push   ebp
  40fa5b:	xchg   edi,eax
  40fa5c:	dec    edx
  40fa5d:	pop    ebp
  40fa5e:	fstp   DWORD PTR fs:[ecx+0x52]
  40fa62:	adc    ah,BYTE PTR [ecx+ebp*8-0x2c3d01b5]
  40fa69:	push   es
  40fa6a:	in     al,dx
  40fa6b:	(bad)  
  40fa6c:	nop
  40fa6d:	mov    al,ds:0xc8c6eda9
  40fa72:	loop   0x40faa1
  40fa74:	fmul   DWORD PTR [esi]
  40fa76:	ds adc eax,0xa5364f50
  40fa7c:	jg     0x40fa80
  40fa7e:	fiadd  DWORD PTR [ebx]
  40fa80:	push   0xffffff97
  40fa82:	adc    cl,BYTE PTR [ebp+0x62]
  40fa85:	sti    
  40fa86:	mov    esi,0xa83bb21c
  40fa8b:	mov    eax,0xe34c4d70
  40fa90:	xchg   edx,eax
  40fa91:	sub    eax,0x604d6276
  40fa96:	dec    ecx
  40fa97:	sub    BYTE PTR [ebp+0x1b],bl
  40fa9a:	out    0xc9,eax
  40fa9c:	dec    ebx
  40fa9d:	repz hlt 
  40fa9f:	call   0x15e59c5c
  40faa4:	push   ds
  40faa5:	dec    esi
  40faa6:	xchg   ecx,eax
  40faa7:	jle    0x40fb0e
  40faa9:	fbld   TBYTE PTR [edi-0x37]
  40faac:	call   0xc768:0x809507e8
  40fab3:	ret    
  40fab4:	leave  
  40fab5:	lds    ecx,FWORD PTR [ebx]
  40fab7:	test   BYTE PTR [ebp-0x3b],0x32
  40fabb:	add    eax,0x49e47675
  40fac0:	pop    esp
  40fac1:	stc    
  40fac2:	or     BYTE PTR [esi+ebx*2-0x1e54c8a1],dl
  40fac9:	cmp    DWORD PTR [ecx*1-0xf9b8835],edx
  40fad0:	jno    0x40fb01
  40fad2:	(bad)  
  40fad3:	jb     0x40fb1a
  40fad5:	daa    
  40fad6:	pusha  
  40fad7:	mov    al,0xa6
  40fad9:	mov    ds:0x2788877a,al
  40fade:	push   ebx
  40fadf:	inc    DWORD PTR [ecx-0x47]
  40fae2:	push   eax
  40fae3:	xor    al,0x6e
  40fae5:	fsub   QWORD PTR [edi]
  40fae7:	xor    al,0x2
  40fae9:	jg     0x40fa96
  40faeb:	lea    ebx,[esi]
  40faed:	push   es
  40faee:	das    
  40faef:	sub    eax,0xf444938e
  40faf4:	daa    
  40faf5:	push   ecx
  40faf6:	cmp    DWORD PTR [ecx],ecx
  40faf8:	lods   eax,DWORD PTR ds:[esi]
  40faf9:	add    ch,BYTE PTR [ecx-0x2f2f354a]
  40faff:	or     al,0x92
  40fb01:	fcmovnbe st,st(2)
  40fb03:	mov    bl,0xf3
  40fb05:	push   ebx
  40fb06:	jne    0x40fac5
  40fb08:	int    0x1a
  40fb0a:	cmc    
  40fb0b:	mov    dl,0xd1
  40fb0d:	(bad)  
  40fb0e:	stc    
  40fb0f:	mov    al,ds:0x2c70beda
  40fb14:	outs   dx,DWORD PTR ds:[esi]
  40fb15:	mov    esp,0x51f33bad
  40fb1a:	int    0x44
  40fb1c:	sti    
  40fb1d:	jmp    0x40fb9a
  40fb1f:	cli    
  40fb20:	or     BYTE PTR [ebx+ecx*4-0x37],bl
  40fb24:	das    
  40fb25:	or     ecx,DWORD PTR [esi+0x4f]
  40fb28:	jmp    0x620c:0x278ee63c
  40fb2f:	xor    ebx,ebp
  40fb31:	in     al,0x70
  40fb33:	popa   
  40fb34:	mov    ecx,DWORD PTR [eax]
  40fb36:	dec    BYTE PTR [esi-0x16716ee0]
  40fb3c:	cmp    esp,ebp
  40fb3e:	inc    edx
  40fb3f:	iret   
  40fb40:	adc    al,0xff
  40fb42:	scas   al,BYTE PTR es:[edi]
  40fb43:	pusha  
  40fb44:	pop    ecx
  40fb45:	sbb    cl,ah
  40fb47:	out    0xd5,eax
  40fb49:	jl     0x40fb3c
  40fb4b:	sub    ebp,edi
  40fb4d:	fucomi st,st(4)
  40fb4f:	mov    ebx,0x92eb3030
  40fb54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb55:	mov    esi,0x77b6912b
  40fb5a:	or     al,0xf0
  40fb5c:	sbb    al,0xc8
  40fb5e:	int    0xf8
  40fb60:	cmp    DWORD PTR [eax+0x59],ecx
  40fb63:	adc    DWORD PTR [ecx],0xffffffa2
  40fb66:	mov    bh,0xc
  40fb68:	inc    ecx
  40fb69:	push   0x6c
  40fb6b:	pop    ecx
  40fb6c:	push   esi
  40fb6d:	repnz retf 
  40fb6f:	sbb    edi,DWORD PTR [edi+0x56929fc3]
  40fb75:	and    eax,0x8c5ad72a
  40fb7a:	mov    dl,0x99
  40fb7c:	push   ds
  40fb7d:	popf   
  40fb7e:	and    al,0xbb
  40fb80:	xor    dl,BYTE PTR [eax]
  40fb82:	les    ebx,FWORD PTR [eax+0x37a4ff9a]
  40fb88:	pop    ss
  40fb89:	cwde   
  40fb8a:	xor    edx,DWORD PTR [esp+esi*2+0x1d]
  40fb8e:	aam    0x4b
  40fb90:	jg     0x40fb27
  40fb92:	pop    edx
  40fb93:	cli    
  40fb94:	add    BYTE PTR [edx-0x2566e928],dl
  40fb9a:	xor    edx,edx
  40fb9c:	ds cmc 
  40fb9e:	les    esp,FWORD PTR [edi]
  40fba0:	adc    al,0x60
  40fba3:	rcr    bh,0xa9
  40fba6:	shr    BYTE PTR [ecx-0x20],1
  40fba9:	mov    eax,0xb750f064
  40fbae:	sbb    eax,DWORD PTR [edi]
  40fbb0:	xchg   DWORD PTR [edx-0x5],eax
  40fbb3:	arpl   WORD PTR [edx+eax*2+0x2f],bp
  40fbb7:	mov    dl,0xba
  40fbb9:	xor    BYTE PTR [eax+ebp*8],dh
  40fbbc:	mov    al,ds:0xa1e51dde
  40fbc1:	shl    DWORD PTR ds:[esi-0x6effeeda],cl
  40fbc8:	xchg   ecx,eax
  40fbc9:	lea    esi,ds:0x50957a0b
  40fbcf:	sbb    ah,BYTE PTR [esi]
  40fbd1:	jp     0x40fb7b
  40fbd3:	test   eax,0x14aa0fee
  40fbd8:	xchg   esp,eax
  40fbd9:	(bad)  
  40fbda:	scas   eax,DWORD PTR es:[edi]
  40fbdb:	lock call 0xf00c2b49
  40fbe1:	push   edi
  40fbe2:	leave  
  40fbe3:	sar    BYTE PTR [edx-0x1baddf9e],1
  40fbe9:	xlat   BYTE PTR ds:[ebx]
  40fbea:	mov    esp,ebx
  40fbec:	out    dx,eax
  40fbed:	inc    ebp
  40fbee:	outs   dx,DWORD PTR ds:[esi]
  40fbef:	mov    edi,0xef36bfc3
  40fbf4:	sbb    ch,BYTE PTR [eax+0x6735d9b3]
  40fbfa:	mov    dl,0x79
  40fbfc:	ds je  0x40fc54
  40fbff:	jo     0x40fbc4
  40fc01:	sbb    al,0x61
  40fc03:	cmp    dh,BYTE PTR [ebx+0x3]
  40fc06:	add    dh,BYTE PTR [ebp+ecx*1+0x3ca9c09a]
  40fc0d:	mov    ds:0xe6918e17,eax
  40fc12:	sub    DWORD PTR [edi],eax
  40fc14:	ins    BYTE PTR es:[edi],dx
  40fc15:	call   DWORD PTR [ebx*1+0x125d11e6]
  40fc1c:	jle    0x40fc45
  40fc1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc20:	jecxz  0x40fc4d
  40fc22:	sub    DWORD PTR [ecx-0x36],edi
  40fc25:	xchg   ecx,eax
  40fc26:	cmp    ebp,ebx
  40fc28:	fwait
  40fc29:	cmp    al,0x3f
  40fc2b:	fmul   QWORD PTR [ebp+0x55]
  40fc2e:	lods   al,BYTE PTR ds:[esi]
  40fc2f:	add    BYTE PTR [eax+ebp*2-0x79],cl
  40fc33:	les    ecx,FWORD PTR [edx+0x6d]
  40fc36:	loope  0x40fbeb
  40fc38:	ja     0x40fc16
  40fc3a:	aad    0x87
  40fc3c:	rol    BYTE PTR [eax-0x2be8809d],1
  40fc42:	inc    edx
  40fc43:	mov    fs,WORD PTR [ebp+0x77a5db0c]
  40fc49:	xchg   DWORD PTR [edx-0x60499664],eax
  40fc4f:	arpl   WORD PTR [ebx],bp
  40fc51:	xor    BYTE PTR [ebx],cl
  40fc53:	pop    es
  40fc54:	sahf   
  40fc55:	in     eax,0x74
  40fc57:	and    BYTE PTR [ebx+ecx*2+0x48a8d47a],bl
  40fc5e:	jne    0x40fc37
  40fc60:	lds    ebx,FWORD PTR [eax+edx*8]
  40fc63:	add    BYTE PTR [eax-0x1c],0xc7
  40fc67:	dec    esp
  40fc68:	test   eax,0xe12da404
  40fc6d:	add    esp,DWORD PTR [edx]
  40fc6f:	aaa    
  40fc70:	and    al,0x2f
  40fc72:	adc    bl,dh
  40fc74:	scas   al,BYTE PTR es:[edi]
  40fc75:	sbb    BYTE PTR [edi+eax*1+0x6168a795],al
  40fc7c:	mov    bl,0x7a
  40fc7e:	pop    es
  40fc7f:	iret   
  40fc80:	vandps xmm3,xmm2,XMMWORD PTR ss:[ecx-0x3f2d858f]
  40fc89:	(bad)  
  40fc8a:	es xchg esp,eax
  40fc8c:	int3   
  40fc8d:	ss nop
  40fc8f:	sub    ch,0xa
  40fc92:	jns    0x40fc84
  40fc94:	mov    esp,0x18829b0f
  40fc99:	xchg   esi,eax
  40fc9a:	jno    0x40fc65
  40fc9c:	imul   edx,DWORD PTR [edi-0x775701c7],0xffffffe9
  40fca3:	je     0x40fd04
  40fca5:	jbe    0x40fcfa
  40fca7:	lahf   
  40fca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca9:	add    bh,BYTE PTR es:[ebp-0x3e]
  40fcad:	rol    dh,cl
  40fcaf:	mov    ecx,0x2c0225f1
  40fcb4:	ins    BYTE PTR es:[edi],dx
  40fcb5:	mov    bh,0xf0
  40fcb7:	shl    esp,1
  40fcb9:	ret    
  40fcba:	mov    ds,WORD PTR [ebx-0x7610ad3b]
  40fcc0:	mov    es,esp
  40fcc2:	jo     0x40fc66
  40fcc4:	fdivr  DWORD PTR [ebx+0x383d3805]
  40fcca:	cmp    bl,BYTE PTR [eax+0x7c]
  40fccd:	mov    al,0xb
  40fccf:	iret   
  40fcd0:	rcr    DWORD PTR [ecx],cl
  40fcd2:	sub    al,0xf1
  40fcd4:	sbb    esi,esi
  40fcd6:	jns    0x40fcb8
  40fcd8:	and    cl,BYTE PTR [edi+ebx*1-0x63ffee7e]
  40fcdf:	jmp    0x40fcd2
  40fce1:	pop    ebp
  40fce2:	mul    BYTE PTR [ecx]
  40fce4:	mov    BYTE PTR [eax],dh
  40fce6:	mov    al,0x1a
  40fce8:	jmp    0x9559103c
  40fced:	sbb    dl,bh
  40fcef:	mov    bh,0xad
  40fcf1:	fs mov dl,0xa2
  40fcf4:	mov    ch,BYTE PTR [ebx+0x28]
  40fcf7:	inc    esi
  40fcf8:	jnp    0x40fd56
  40fcfa:	add    eax,0xd212e95e
  40fcff:	popf   
  40fd00:	cmp    BYTE PTR [edi],0xa3
  40fd03:	ss push 0x1da17e57
  40fd09:	cmp    BYTE PTR cs:[edx-0x6c],al
  40fd0d:	add    BYTE PTR [edi],0x26
  40fd10:	jge    0x40fd15
  40fd12:	or     BYTE PTR [ebx],dl
  40fd14:	aas    
  40fd15:	pop    edx
  40fd16:	and    ch,BYTE PTR [edi-0x53]
  40fd19:	sub    dl,BYTE PTR [ebp-0x55]
  40fd1c:	pusha  
  40fd1d:	les    eax,FWORD PTR [eax+0x79ef3189]
  40fd23:	xchg   edi,eax
  40fd24:	in     al,dx
  40fd25:	je     0x40fcbe
  40fd27:	xchg   edi,eax
  40fd28:	pop    ebp
  40fd29:	outs   dx,DWORD PTR ds:[esi]
  40fd2a:	pop    ss
  40fd2b:	loop   0x40fd60
  40fd2d:	dec    ecx
  40fd2e:	retf   
  40fd2f:	mul    BYTE PTR [ebp+ecx*2-0x74]
  40fd33:	mov    DWORD PTR [eax+edi*2+0xc2c2e30],edx
  40fd3a:	icebp  
  40fd3b:	call   0x41098a
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	lock mov al,0x82
  40fd9f:	xor    BYTE PTR [edx-0xb818148],al
  40fda5:	jns    0x40fe25
  40fda7:	jle    0x40fd3d
  40fda9:	or     dl,dh
  40fdab:	push   ebp
  40fdac:	gs pop eax
  40fdae:	dec    ebp
  40fdaf:	rol    BYTE PTR [ebx],1
  40fdb1:	inc    ebp
  40fdb2:	push   esi
  40fdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb4:	sub    eax,0x5ad31aa7
  40fdb9:	dec    esp
  40fdba:	pop    esp
  40fdbb:	or     eax,0x58fd254b
  40fdc0:	or     al,0x6e
  40fdc2:	js     0x40fd5c
  40fdc4:	fldcw  WORD PTR [eax+0xc]
  40fdc7:	inc    eax
  40fdc8:	and    eax,0x733e923a
  40fdcd:	jmp    0x5045f19a
  40fdd2:	jno    0x40fdbb
  40fdd4:	clc    
  40fdd5:	enter  0x9c33,0x5a
  40fdd9:	into   
  40fdda:	jmp    0x845dbc97
  40fddf:	xchg   esp,eax
  40fde0:	mov    edx,ecx
  40fde2:	js     0x40fe4b
  40fde4:	pop    edx
  40fde5:	sub    al,0x17
  40fde7:	mov    ebp,0x4339df50
  40fdec:	out    dx,eax
  40fded:	hlt    
  40fdee:	sbb    ebp,ebx
  40fdf0:	push   ebp
  40fdf1:	xchg   esi,eax
  40fdf2:	fwait
  40fdf3:	iret   
  40fdf4:	(bad)  
  40fdf5:	adc    eax,0x5dc329ea
  40fdfa:	shl    BYTE PTR [ebp+0x1f],1
  40fdfd:	fistp  DWORD PTR [ecx+eax*8-0x33b55df5]
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	xchg   edx,eax
  40fe06:	call   0xbd66:0x13724979
  40fe0d:	out    dx,al
  40fe0e:	add    DWORD PTR [esi-0x6a542aec],edx
  40fe14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe15:	into   
  40fe16:	push   ebx
  40fe17:	and    eax,edx
  40fe19:	ret    0xa09e
  40fe1c:	int    0xed
  40fe1e:	jg     0x40fe29
  40fe20:	xor    dl,dl
  40fe22:	mov    al,0x51
  40fe24:	mov    ch,0x67
  40fe26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe27:	jl     0x40fded
  40fe29:	fs push di
  40fe2c:	lods   al,BYTE PTR ds:[esi]
  40fe2d:	inc    ebx
  40fe2e:	imul   BYTE PTR [eax-0x57e67dac]
  40fe34:	test   al,0xb9
  40fe36:	aaa    
  40fe37:	pop    esp
  40fe38:	sub    ah,ch
  40fe3a:	add    edx,DWORD PTR [ebp-0x695be3f7]
  40fe40:	jg     0x40fe29
  40fe42:	repz shl BYTE PTR [ecx-0x14f8aec7],1
  40fe49:	xor    cl,BYTE PTR [ecx+0x376450e3]
  40fe4f:	add    BYTE PTR [ebx-0x45942151],bh
  40fe55:	ret    0x9548
  40fe58:	scas   al,BYTE PTR es:[edi]
  40fe59:	shr    BYTE PTR [edx-0x1ca8f0ec],0x3d
  40fe60:	lods   al,BYTE PTR ds:[esi]
  40fe61:	sbb    BYTE PTR [ebp+0x5a],ch
  40fe64:	push   ebp
  40fe65:	sub    eax,0x84122729
  40fe6a:	lock push esi
  40fe6c:	loop   0x40fe6d
  40fe6e:	stos   DWORD PTR es:[edi],eax
  40fe6f:	jnp    0x40fe4a
  40fe71:	dec    edx
  40fe72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe73:	mov    bl,0x1
  40fe75:	cdq    
  40fe76:	inc    edi
  40fe77:	push   0x71ab6cdd
  40fe7c:	lds    ebx,FWORD PTR [esp-0x2b534a1a]
  40fe83:	sar    DWORD PTR [eax+ecx*2-0xa],0x1d
  40fe88:	sbb    ebx,edi
  40fe8a:	mov    ds:0x69b41668,eax
  40fe8f:	inc    ebx
  40fe90:	mov    eax,0xa62f3773
  40fe95:	push   0x47b11e49
  40fe9a:	inc    edx
  40fe9b:	inc    ecx
  40fe9c:	cmp    al,0x1e
  40fe9e:	xchg   ebx,eax
  40fe9f:	sub    DWORD PTR [ecx+0x2b439a],edx
  40fea5:	jmp    0x9a44e734
  40feaa:	jmp    0x40fecf
  40feac:	jnp    0x40fe77
  40feae:	push   ebp
  40feaf:	add    al,al
  40feb1:	in     eax,0xd3
  40feb3:	(bad)  
  40feb4:	test   al,0x4c
  40feb6:	pop    ds
  40feb7:	(bad)  
  40feb9:	adc    dl,BYTE PTR [ebp-0x7c6501e2]
  40febf:	icebp  
  40fec0:	xor    DWORD PTR [esi-0x49],0xd8f3cb30
  40fec7:	or     ecx,DWORD PTR ds:0x2db13a8b
  40fecd:	dec    edx
  40fece:	adc    eax,0x33fd039b
  40fed3:	es push 0x3c58dd37
  40fed9:	mov    WORD PTR [ecx+0x71b100a5],fs
  40fedf:	stos   BYTE PTR es:[edi],al
  40fee0:	in     al,0x9c
  40fee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee3:	test   al,0xde
  40fee5:	jmp    0xa5022bc6
  40feea:	fs lahf 
  40feec:	clc    
  40feed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feee:	push   es
  40feef:	je     0x40fe7d
  40fef1:	repnz mov esi,0xae20b62e
  40fef7:	adc    BYTE PTR [edi-0x59],ah
  40fefa:	cmp    dh,BYTE PTR [esi-0x32323d68]
  40ff00:	push   ebp
  40ff01:	ret    0x7053
  40ff04:	inc    ebp
  40ff05:	jle    0x40fe9b
  40ff07:	xor    eax,0x935cb3e1
  40ff0c:	sti    
  40ff0d:	addr16 ret 0xb5a2
  40ff11:	outs   dx,BYTE PTR ds:[esi]
  40ff12:	cmp    dh,BYTE PTR [esi+0x24bf33f3]
  40ff18:	adc    eax,0xf9012426
  40ff1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1e:	stc    
  40ff1f:	cmp    al,0x89
  40ff21:	or     eax,0x6f3c0dcf
  40ff26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff27:	call   DWORD PTR [esi+0x724a6eb5]
  40ff2d:	pop    edi
  40ff2e:	retf   0xc83f
  40ff31:	mov    cl,0x3c
  40ff33:	or     DWORD PTR [eax],edi
  40ff35:	cdq    
  40ff36:	mov    BYTE PTR [edi+0x326a1fbd],bl
  40ff3c:	clc    
  40ff3d:	(bad)  
  40ff3e:	aas    
  40ff3f:	ss (bad) 
  40ff41:	out    dx,al
  40ff42:	ffreep st(1)
  40ff44:	retf   
  40ff45:	int    0x97
  40ff47:	enter  0xa402,0x17
  40ff4b:	add    eax,0xe8ab22d7
  40ff50:	jp     0x40ff11
  40ff52:	popa   
  40ff53:	sahf   
  40ff54:	fwait
  40ff55:	xor    ecx,esp
  40ff57:	adc    eax,0x4e107808
  40ff5c:	ja     0x40ff8c
  40ff5e:	jo     0x40ff0a
  40ff60:	das    
  40ff61:	lods   al,BYTE PTR ds:[esi]
  40ff62:	push   0xc61932d0
  40ff67:	call   0x93d4:0xf7193dc0
  40ff6e:	xchg   ebp,eax
  40ff6f:	adc    BYTE PTR [edx+ebp*8-0x6e177f95],ah
  40ff76:	mov    dl,0xe9
  40ff78:	cmp    al,0xb4
  40ff7a:	adc    bh,BYTE PTR [ebx+0x18]
  40ff7d:	mov    al,ds:0x586b8036
  40ff82:	jo     0x40ffaa
  40ff84:	shl    BYTE PTR [edi+0x76],cl
  40ff87:	bound  ecx,QWORD PTR ds:0x80a85efb
  40ff8d:	cmc    
  40ff8e:	dec    DWORD PTR [esi-0x38]
  40ff91:	ret    
  40ff92:	test   eax,0x23b55c8c
  40ff98:	adc    ebp,0xa90628b0
  40ff9e:	pop    es
  40ff9f:	mov    esp,0x2b5748f
  40ffa4:	ins    BYTE PTR es:[edi],dx
  40ffa5:	fldcw  WORD PTR [ebx]
  40ffa7:	std    
  40ffa8:	pop    es
  40ffa9:	or     al,0x2b
  40ffab:	ror    DWORD PTR [ecx-0x3b6ef18b],0x3d
  40ffb2:	rcl    DWORD PTR [ebx],1
  40ffb4:	fistp  QWORD PTR [edi+0x20]
  40ffb7:	or     DWORD PTR [edx+ebx*2-0x5a],ecx
  40ffbb:	mov    edx,0xe228ae57
  40ffc0:	mov    ebp,0xc3b6171c
  40ffc5:	adc    eax,0x4bf42ab2
  40ffca:	mov    WORD PTR [ebx],?
  40ffcc:	add    ah,ah
  40ffce:	mov    esi,0xd928b372
  40ffd3:	push   edx
  40ffd4:	or     dh,BYTE PTR [esi+ebx*2]
  40ffd7:	cmp    edx,DWORD PTR [edx-0x198b969]
  40ffdd:	pop    ss
  40ffde:	dec    eax
  40ffdf:	rol    BYTE PTR [edi+0x2b8cd688],0x3d
  40ffe6:	ret    
  40ffe7:	add    BYTE PTR [eax],0x57
  40ffea:	mov    ecx,0x7cc53176
  40ffef:	and    DWORD PTR [esi],eax
  40fff1:	call   0xefb4b295
  40fff6:	mov    ch,0x46
  40fff8:	test   al,0xd7
  40fffa:	ins    DWORD PTR es:[edi],dx
  40fffb:	adc    al,0xa5
  40fffd:	sub    eax,0x61ca7ebd
  410002:	mov    ebx,0x173629c5
  410007:	daa    
  410008:	push   eax
  410009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000a:	sub    bl,ch
  41000c:	pop    ebp
  41000d:	xlat   BYTE PTR ds:[ebx]
  41000e:	(bad)  
  41000f:	push   esi
  410010:	and    dl,BYTE PTR [esi+0x3e]
  410013:	sar    esi,cl
  410015:	(bad)  
  410016:	or     eax,0x19a67c42
  41001b:	outs   dx,BYTE PTR ds:[esi]
  41001c:	pop    ds
  41001d:	mov    bh,0xec
  41001f:	shr    dl,cl
  410021:	aas    
  410022:	push   ds
  410023:	sub    al,0x96
  410025:	jae    0x40fff5
  410027:	shl    ebx,cl
  410029:	stos   DWORD PTR es:[edi],eax
  41002a:	sbb    ch,bh
  41002c:	in     al,dx
  41002d:	pop    eax
  41002e:	pop    eax
  41002f:	ins    BYTE PTR es:[edi],dx
  410030:	jge    0x41009d
  410032:	ror    BYTE PTR [edx+0x3f],0xd6
  410036:	dec    ebp
  410037:	ss stc 
  410039:	sub    DWORD PTR [esi-0x5382fc5d],esp
  41003f:	popf   
  410040:	ret    0x7363
  410043:	fcmovne st,st(1)
  410045:	repnz xchg esi,eax
  410047:	pop    ecx
  410048:	jo     0x41008f
  41004a:	jae    0x40ffe5
  41004c:	and    esi,DWORD PTR [ebp-0x15]
  41004f:	inc    ebx
  410050:	cmp    eax,0x726d4447
  410055:	and    BYTE PTR [edi+0xc5456fb],0x91
  41005c:	xor    dl,BYTE PTR [ebp+0x648a05a]
  410062:	fmul   QWORD PTR [ebp-0x5b]
  410065:	adc    eax,0xb5f4c184
  41006a:	js     0x41009b
  41006c:	imul   ebp,eax,0xffffffbf
  41006f:	push   esp
  410070:	add    al,0x1f
  410072:	xchg   edx,eax
  410073:	mov    dl,0x3a
  410075:	in     al,0x36
  410077:	loopne 0x410034
  410079:	sbb    eax,0x85c6cbd2
  41007e:	lahf   
  41007f:	push   0xfffffff9
  410081:	adc    dl,BYTE PTR [ecx]
  410083:	add    DWORD PTR [esi],eax
  410085:	sub    al,0x6a
  410087:	lahf   
  410088:	ins    DWORD PTR es:[edi],dx
  410089:	sub    eax,0xb7b60bbd
  41008e:	xchg   esi,eax
  41008f:	pop    esp
  410090:	daa    
  410091:	cwde   
  410092:	pusha  
  410093:	inc    esi
  410094:	push   0x38e99b57
  410099:	es cli 
  41009b:	pop    eax
  41009c:	ins    DWORD PTR es:[edi],dx
  41009d:	xchg   esp,eax
  41009e:	push   es
  41009f:	aam    0x55
  4100a1:	adc    ecx,edi
  4100a3:	std    
  4100a4:	inc    ebp
  4100a5:	out    0xad,eax
  4100a7:	cmp    BYTE PTR [eax+0x498eca93],dh
  4100ad:	xchg   esp,eax
  4100ae:	neg    BYTE PTR [edx+ecx*4-0x16]
  4100b2:	scas   al,BYTE PTR es:[edi]
  4100b3:	xor    al,0x58
  4100b5:	leave  
  4100b6:	mov    dl,dl
  4100b8:	mul    DWORD PTR [edx+ebp*4]
  4100bb:	cli    
  4100bc:	pop    edi
  4100bd:	lds    esi,FWORD PTR [ebp-0x3fc44a2b]
  4100c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100c4:	xchg   ebx,eax
  4100c5:	pop    ebp
  4100c6:	loop   0x410100
  4100c8:	mov    ch,0x27
  4100ca:	out    dx,al
  4100cb:	add    dh,BYTE PTR [eax]
  4100cd:	mov    esp,0x28b5bd79
  4100d2:	jge    0x41013c
  4100d4:	xor    ecx,ebx
  4100d6:	(bad)  
  4100d7:	retf   0x8e49
  4100da:	add    DWORD PTR [esp+esi*4],ecx
  4100dd:	jmp    0x410132
  4100df:	push   0x34
  4100e1:	add    al,0x2c
  4100e3:	cmc    
  4100e4:	shl    DWORD PTR [edx+eiz*8-0x7d790f13],cl
  4100eb:	xor    al,0x59
  4100ed:	aam    0x6
  4100ef:	outs   dx,DWORD PTR ds:[esi]
  4100f0:	out    0xca,eax
  4100f2:	push   edx
  4100f3:	je     0x410102
  4100f5:	add    al,0x23
  4100f7:	dec    edx
  4100f8:	pop    edi
  4100f9:	mov    dh,0x2d
  4100fb:	and    ebx,DWORD PTR [esi+0x6d]
  4100fe:	fcomp  QWORD PTR [edi-0x49c5fedc]
  410104:	sahf   
  410105:	shl    DWORD PTR cs:[ebx+0x28],0xb2
  41010a:	push   0xffffff81
  41010c:	sar    DWORD PTR [ecx],0x92
  41010f:	jmp    DWORD PTR [ebx-0x38]
  410112:	bound  ecx,QWORD PTR [eax+0x4b0a5c2f]
  410118:	jno    0x41018e
  41011a:	jge    0x410148
  41011c:	mov    eax,DWORD PTR [edx]
  41011e:	mov    eax,DWORD PTR [ebp-0x4]
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR ds:0x784895ba,esp
  41013a:	inc    esp
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x41015e
  410142:	neg    BYTE PTR [ebp-0x2d]
  410145:	arpl   bp,cx
  410147:	repnz ss in eax,0xad
  41014b:	mov    esi,0x71243011
  410150:	dec    edx
  410151:	fucomip st,st(4)
  410153:	pop    esi
  410154:	aaa    
  410155:	mov    al,ds:0x371bc584
  41015a:	jge    0x410128
  41015c:	xor    eax,0x65d1897b
  410161:	retf   0xca2d
  410164:	xchg   esi,eax
  410166:	imul   edx,ebx,0x13e9cb87
  41016c:	or     al,0x66
  41016e:	loop   0x4101ba
  410170:	pop    es
  410171:	mov    dh,0x5f
  410173:	inc    eax
  410174:	sub    DWORD PTR [eax+0x2943dcc0],0x56f33b83
  41017e:	(bad)  
  41017f:	or     DWORD PTR [eax],ebp
  410181:	std    
  410182:	mov    edi,0xe58e0122
  410187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410188:	xor    eax,0x8dd0d86b
  41018d:	dec    edx
  41018e:	pop    ds
  41018f:	mov    dh,0xaa
  410191:	pop    eax
  410192:	nop
  410193:	cmp    ecx,esp
  410195:	out    dx,al
  410196:	mov    eax,0x3d38fd51
  41019b:	popf   
  41019c:	pop    esp
  41019d:	cmc    
  41019e:	jg     0x4101cb
  4101a0:	cdq    
  4101a1:	sbb    esi,esp
  4101a3:	mov    dl,0x65
  4101a5:	adc    eax,0x58fed9f
  4101aa:	je     0x410221
  4101ac:	xor    eax,0xf2738e6e
  4101b1:	mov    esp,0x5467413e
  4101b6:	adc    BYTE PTR [ebp+0x1777caa5],bl
  4101bc:	mov    dh,0xcd
  4101be:	mov    eax,ds:0xddb2c389
  4101c3:	mov    ecx,0xd675e8e6
  4101c8:	pop    esi
  4101c9:	push   ss
  4101ca:	shl    DWORD PTR [ebx-0x26],0x9e
  4101ce:	pop    eax
  4101cf:	and    BYTE PTR [eax+0x46],bl
  4101d2:	pusha  
  4101d3:	test   BYTE PTR [esi],0xed
  4101d6:	dec    eax
  4101d7:	or     eax,0xd657b208
  4101dc:	push   cs
  4101dd:	data16 cmc 
  4101df:	mov    esp,0x9441cac7
  4101e4:	aaa    
  4101e5:	or     DWORD PTR [eax],edi
  4101e7:	inc    ebp
  4101e8:	cmp    dl,dh
  4101ea:	and    ch,bl
  4101ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ed:	stc    
  4101ee:	sub    dl,ah
  4101f0:	ds push es
  4101f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f3:	inc    esi
  4101f4:	push   eax
  4101f5:	lock and bl,BYTE PTR [eax]
  4101f8:	nop
  4101f9:	es (bad) 
  4101fb:	sar    BYTE PTR [esi],cl
  4101fd:	jmp    0x7dcbb135
  410202:	jmp    0xc019af11
  410207:	sbb    bl,BYTE PTR [edi-0x3d0faf60]
  41020d:	sub    DWORD PTR [ebp-0x453d5ebc],0x40
  410214:	outs   dx,DWORD PTR ds:[esi]
  410215:	pop    eax
  410216:	push   esi
  410217:	add    eax,0xddc3810
  41021c:	mov    edx,0x8654bec0
  410221:	les    esp,FWORD PTR [esi]
  410223:	sub    eax,0xb59a9885
  410228:	test   eax,0x792298ea
  41022d:	fisttp WORD PTR [ebx]
  41022f:	pop    ss
  410230:	ins    DWORD PTR es:[edi],dx
  410231:	mov    edx,0x43531474
  410236:	mov    ah,0xce
  410238:	cmp    BYTE PTR [esi-0x24],0x4e
  41023c:	inc    edx
  41023d:	mov    dl,0xbb
  41023f:	ja     0x410246
  410241:	adc    dh,BYTE PTR [eax+0x34]
  410244:	repz pop edx
  410246:	inc    edx
  410247:	repz mov dh,BYTE PTR [eax]
  41024a:	in     al,dx
  41024b:	test   BYTE PTR [esi+0x6a],cl
  41024e:	jmp    0x5d1405c6
  410253:	push   esi
  410255:	mov    ah,0xbd
  410257:	xchg   ecx,eax
  410258:	loopne 0x410233
  41025a:	mov    ah,0xe8
  41025c:	ja     0x4101e2
  41025e:	mov    ds:0xe93a642d,eax
  410263:	bound  eax,QWORD PTR [ecx]
  410265:	fnstenv [ebp-0x3a3d980]
  41026b:	mov    ds:0xb016420,al
  410270:	push   0x5cf76190
  410275:	adc    ebp,DWORD PTR [esi]
  410277:	mov    ah,BYTE PTR [esp-0x79]
  41027b:	sbb    bh,BYTE PTR [ebx]
  41027d:	in     eax,dx
  41027e:	clc    
  41027f:	inc    edi
  410280:	fisubr DWORD PTR [edi-0x3b]
  410283:	in     eax,0xc3
  410285:	and    ecx,edx
  410287:	enter  0xc437,0x99
  41028b:	mov    ch,0x2a
  41028d:	popa   
  41028e:	add    al,0x76
  410290:	jmp    0x151742ab
  410295:	aam    0xc4
  410297:	outs   dx,DWORD PTR ds:[esi]
  410298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410299:	mov    al,fs:0xb36d45a7
  41029f:	xchg   ebp,eax
  4102a0:	add    al,dl
  4102a2:	dec    ebx
  4102a3:	jb     0x410231
  4102a5:	inc    esp
  4102a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a7:	outs   dx,BYTE PTR ds:[esi]
  4102a8:	mov    edi,0x7f1b4a94
  4102ad:	xchg   ebp,eax
  4102ae:	call   0xc9d3:0x8549e7c9
  4102b5:	or     ebx,ebp
  4102b7:	cmp    al,al
  4102b9:	adc    eax,0x491d8db9
  4102be:	mov    esp,0xf5d9f092
  4102c3:	push   esi
  4102c4:	(bad)  
  4102c6:	push   ebx
  4102c7:	dec    eax
  4102c8:	push   0x64
  4102ca:	add    DWORD PTR [ebp+0x355de77c],ebp
  4102d0:	mov    cl,0x7f
  4102d2:	fucom  st(2)
  4102d4:	shr    DWORD PTR [ebx],cl
  4102d6:	add    BYTE PTR [ebx+0x41],dh
  4102d9:	push   esi
  4102da:	mov    ch,0xf0
  4102dc:	je     0x410321
  4102de:	cli    
  4102df:	sub    ch,ch
  4102e1:	and    bl,al
  4102e3:	ror    BYTE PTR [ebp+0x52e1c79a],cl
  4102e9:	ins    BYTE PTR es:[edi],dx
  4102ea:	inc    esi
  4102eb:	xchg   edx,eax
  4102ec:	retf   0xdc76
  4102ef:	dec    edx
  4102f0:	jmp    0xfb8bca42
  4102f5:	or     bl,BYTE PTR [ecx+0x61]
  4102f8:	adc    ebx,DWORD PTR [esi+0x32]
  4102fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102fc:	inc    ebp
  4102fd:	mov    BYTE PTR [ebp-0x1b917d41],bl
  410303:	mov    al,ds:0xf835287b
  410308:	pop    esi
  410309:	bound  edx,QWORD PTR [ecx+ebp*4]
  41030c:	out    0x75,eax
  41030e:	sbb    eax,0x60e9e9e2
  410313:	das    
  410314:	retf   
  410315:	pop    ebp
  410316:	jmp    0x4102cd
  410318:	aas    
  410319:	xchg   esi,eax
  41031a:	mov    dl,0x3e
  41031c:	add    ecx,esp
  41031e:	mov    bl,0x9b
  410320:	push   0xc40b2686
  410325:	(bad)  
  410326:	xchg   ecx,eax
  410327:	sbb    DWORD PTR [ecx],esp
  410329:	call   0xeeed:0xc3946727
  410330:	pushf  
  410331:	adc    BYTE PTR [eax+ebx*1+0x4e],0xd1
  410336:	jo     0x41035a
  410338:	xor    al,ch
  41033a:	jl     0x4102d7
  41033c:	fild   DWORD PTR [edi+0x54]
  41033f:	shr    BYTE PTR [esp+edx*8+0x63],0x5
  410344:	stos   DWORD PTR es:[edi],eax
  410345:	mov    eax,0x96a1eab8
  41034a:	popf   
  41034b:	ret    
  41034c:	cli    
  41034d:	nop
  41034e:	add    esi,DWORD PTR [ecx-0x65]
  410351:	ficomp WORD PTR ds:0x7a90a9c2
  410357:	loope  0x410365
  410359:	sbb    eax,0xade88671
  41035e:	mov    edi,0x1e8af9b7
  410363:	stc    
  410364:	or     eax,0xce03cce2
  410369:	mov    ebp,0x274a4881
  41036e:	shl    BYTE PTR [edx-0x1eb2d600],0x7c
  410375:	jecxz  0x4103cd
  410377:	sbb    ebp,edi
  410379:	pop    edx
  41037a:	popa   
  41037b:	stos   DWORD PTR es:[edi],eax
  41037c:	pop    esi
  41037d:	test   al,0x9b
  41037f:	das    
  410380:	cmp    bl,0x41
  410383:	sbb    edx,DWORD PTR [edx]
  410385:	test   DWORD PTR [ebx+0x5e],ecx
  410388:	iret   
  410389:	jl     0x410382
  41038b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41038c:	fsub   QWORD PTR [eax+eiz*2-0x5]
  410390:	inc    edi
  410391:	test   DWORD PTR [ebp+0x3c],0xeb999279
  410398:	jmp    0x41034c
  41039a:	fnsave [ebx-0x56df26a9]
  4103a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a2:	mov    BYTE PTR [ebx+edi*8],al
  4103a5:	mov    bh,0x97
  4103a7:	adc    ecx,0x308dc37d
  4103ad:	ins    WORD PTR es:[edi],dx
  4103af:	add    DWORD PTR [edi-0x2280c25],esp
  4103b5:	mov    ecx,0x627c6562
  4103ba:	jns    0x4103ca
  4103bc:	jae    0x41034a
  4103be:	fcmovne st,st(2)
  4103c0:	add    dh,bh
  4103c2:	stos   DWORD PTR es:[edi],eax
  4103c3:	pop    edi
  4103c4:	ss pop edx
  4103c6:	ds es sar bl,cl
  4103ca:	add    esp,DWORD PTR [edi-0x4e]
  4103cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ce:	sub    al,0x1a
  4103d0:	imul   ebp,DWORD PTR ds:0x66b6cdb3,0xffffffa2
  4103d7:	sbb    al,0x99
  4103d9:	in     eax,0x64
  4103db:	mov    ds:0x3cf8bcd0,eax
  4103e0:	icebp  
  4103e1:	pop    ds
  4103e2:	adc    BYTE PTR [ebx+0x75d6b70],cl
  4103e8:	cmc    
  4103e9:	sbb    eax,0x7f48d94f
  4103ee:	call   0x20cd:0xd5e800b7
  4103f5:	pop    eax
  4103f6:	and    ebx,edi
  4103f8:	lahf   
  4103f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103fa:	push   ds
  4103fb:	push   ds
  4103fc:	cmp    BYTE PTR [esi-0x31],bl
  4103ff:	cmp    DWORD PTR [ebx],0xd2dcb001
  410405:	push   es
  410406:	mov    esi,DWORD PTR [edx+edi*2-0x73e5532d]
  41040d:	inc    esi
  41040e:	sbb    DWORD PTR [edi+0x56],esi
  410411:	and    DWORD PTR [edi+0x1cec48c7],edi
  410417:	jecxz  0x410412
  410419:	dec    esp
  41041a:	fmul   QWORD PTR [ebp+0x45]
  41041d:	mov    ah,0x3c
  41041f:	jae    0x4103cb
  410421:	in     al,dx
  410422:	ror    BYTE PTR [edx+0x3087b3b6],cl
  410428:	or     edx,esp
  41042a:	rol    BYTE PTR [esi+edx*1-0x7241eaae],cl
  410431:	data16 jle 0x4103f9
  410434:	es cld 
  410436:	in     eax,0x27
  410438:	xor    al,0xb6
  41043a:	sub    al,0x52
  41043c:	and    bl,al
  41043e:	mov    ds:0x561e2722,al
  410443:	xor    bh,cl
  410445:	mov    ah,0x13
  410447:	(bad)  
  410448:	xor    DWORD PTR [ecx],ecx
  41044a:	push   ebx
  41044b:	stos   DWORD PTR es:[edi],eax
  41044c:	in     al,dx
  41044d:	fdivr  QWORD PTR [edi-0x74]
  410450:	jge    0x4103dd
  410452:	fisttp WORD PTR [edx-0x2ba98b51]
  410458:	sub    eax,DWORD PTR [edi]
  41045a:	out    dx,eax
  41045b:	pop    esi
  41045c:	pop    esp
  41045d:	dec    edx
  41045e:	xor    eax,0xf687a7d3
  410463:	pushf  
  410464:	lods   al,BYTE PTR ds:[esi]
  410465:	outs   dx,DWORD PTR ds:[esi]
  410466:	jo     0x4103f2
  410468:	popa   
  410469:	sar    dl,1
  41046b:	in     al,0x99
  41046d:	lods   eax,DWORD PTR ds:[esi]
  41046e:	rcr    DWORD PTR [eax+ebp*2],1
  410471:	gs je  0x410407
  410474:	mov    eax,0xc0b45f2d
  410479:	repnz and BYTE PTR cs:[edx-0x34],cl
  41047e:	jge    0x410474
  410480:	fadd   DWORD PTR [ecx+0xbfe16eb]
  410486:	adc    DWORD PTR ds:0x505cc6da,ecx
  41048c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41048d:	inc    ebp
  41048e:	cld    
  41048f:	or     ah,BYTE PTR [esi]
  410491:	mov    BYTE PTR [ebp+0x52],0x19
  410495:	pop    eax
  410496:	addr16 add ebx,0xffffffbd
  41049a:	lds    edx,FWORD PTR [edi-0x39]
  41049d:	ds dec edx
  41049f:	fstp   DWORD PTR [ecx]
  4104a1:	push   eax
  4104a2:	add    edx,DWORD PTR [eax*2+0x6da6bd4]
  4104a9:	push   0x810292e5
  4104ae:	std    
  4104af:	or     DWORD PTR [edi-0x3f],esp
  4104b2:	adc    DWORD PTR [eax+0x36b9900],ecx
  4104b8:	(bad)  
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4345f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4345f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4345f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4345f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4345f7
  410508:	dec    eax
  410509:	mov    ds:0x4345f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4345f7
  410516:	dec    eax
  410517:	mov    ds:0x4345f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434647,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43468f,0x434713
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43464f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434687
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4345eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4345eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4345eb,edx
  410571:	cmp    DWORD PTR ds:0x4345eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4345eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4345eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4345eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4345eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	(bad)  
  4105ed:	mov    edx,0x47f668bb
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x410616
  4105f9:	mov    ebx,0x460310b
  4105fe:	popa   
  4105ff:	jp     0x410661
  410601:	jno    0x4105b5
  410603:	sbb    al,0x4
  410605:	dec    edi
  410606:	bound  ebp,QWORD PTR [edx-0x52ee2b3a]
  41060c:	icebp  
  41060d:	retf   
  41060e:	push   ebp
  41060f:	outs   dx,BYTE PTR ds:[esi]
  410610:	shrd   DWORD PTR [edi+0x38],ecx,0x7d
  410615:	and    eax,0x2809b212
  41061a:	adc    DWORD PTR ds:0xa4e883d4,ecx
  410620:	idiv   ebx
  410622:	sti    
  410623:	sbb    DWORD PTR [ebp-0x34282e2f],esi
  410629:	inc    ebp
  41062a:	jl     0x410689
  41062c:	ret    
  41062d:	mov    cl,0x7b
  41062f:	pop    esp
  410630:	jne    0x410655
  410632:	js     0x4105d5
  410634:	adc    al,0x38
  410636:	mov    edx,0x36f234dc
  41063b:	(bad)  
  41063c:	cs jl  0x4105ea
  41063f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410640:	aad    0x39
  410642:	mov    edx,0x7799a058
  410647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410648:	add    eax,0x6e51b5d
  41064d:	aas    
  41064e:	mov    ah,0x4
  410650:	xchg   DWORD PTR [ebp+0x76],eax
  410653:	ret    
  410654:	or     al,ch
  410656:	(bad)  
  410657:	pushf  
  410658:	xlat   BYTE PTR ds:[ebx]
  410659:	imul   ebp,DWORD PTR ds:0xfad47e8,0xffffff93
  410660:	pop    ds
  410661:	mov    al,0x8c
  410663:	mov    ecx,0xac58a3b5
  410668:	loop   0x410619
  41066a:	neg    BYTE PTR [si+0x33]
  41066e:	pop    ss
  41066f:	mov    edi,0x4a080ce9
  410674:	fist   WORD PTR [eax]
  410676:	add    BYTE PTR [esi+0x6e6668d2],0xf4
  41067d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41067e:	les    esi,FWORD PTR [ecx-0x7f027110]
  410684:	push   esi
  410685:	jb     0x410672
  410687:	out    dx,al
  410688:	xchg   ebp,eax
  410689:	mov    ds:0xe3d0ba53,al
  41068e:	add    DWORD PTR [esi],edi
  410690:	pop    eax
  410691:	jg     0x410658
  410693:	in     eax,0x13
  410695:	idiv   BYTE PTR [edi+0x72]
  410698:	(bad)  
  410699:	in     eax,dx
  41069a:	scas   al,BYTE PTR es:[edi]
  41069b:	mov    dl,0x97
  41069d:	add    ch,ah
  41069f:	aas    
  4106a0:	add    al,0xef
  4106a2:	scas   eax,DWORD PTR es:[edi]
  4106a3:	xchg   ebp,eax
  4106a4:	xor    bl,0x5c
  4106a7:	xor    DWORD PTR [edi-0x3b],edx
  4106aa:	inc    ebx
  4106ab:	add    eax,0xb9c3f3fc
  4106b0:	inc    ecx
  4106b1:	and    BYTE PTR [edx+0x745d49ac],bl
  4106b7:	adc    dl,BYTE PTR [ebx-0x46c3e456]
  4106bd:	popa   
  4106be:	xchg   DWORD PTR ss:[eax],ebx
  4106c1:	ror    DWORD PTR [edi],cl
  4106c3:	or     ah,cl
  4106c5:	mov    ebx,DWORD PTR [edi-0x2921776]
  4106cb:	les    edx,FWORD PTR [edx-0x7e]
  4106ce:	xor    eax,0xf02db108
  4106d3:	dec    ecx
  4106d4:	lds    esp,FWORD PTR [eax-0x7a]
  4106d7:	sbb    al,0xa1
  4106d9:	ficomp DWORD PTR [edx]
  4106db:	fs ja  0x410711
  4106de:	xor    DWORD PTR [ebp+0x20],0xffffffdb
  4106e2:	jmp    0x410679
  4106e4:	push   0xfffffff3
  4106e6:	or     BYTE PTR [edi-0x78f00b86],dh
  4106ec:	pop    ecx
  4106ed:	mov    edx,0x59b13c67
  4106f2:	ret    0x1863
  4106f5:	lds    ebp,FWORD PTR [eax]
  4106f7:	inc    edx
  4106f8:	jns    0x41076e
  4106fa:	dec    ebp
  4106fb:	mov    ds:0x20aca8e7,al
  410700:	dec    eax
  410701:	nop
  410702:	add    DWORD PTR [ebp-0x59],ecx
  410705:	lods   al,BYTE PTR ds:[esi]
  410706:	sub    ebp,ebx
  410708:	repz mov edx,0x65281c50
  41070e:	cmp    ebp,DWORD PTR [ebx+0x2]
  410711:	mov    ebp,0x63ddcf24
  410716:	cmc    
  410717:	arpl   WORD PTR [ebp+0x618636ad],di
  41071d:	imul   esi,DWORD PTR ds:0xaad0b599,0x78b1164a
  410727:	pop    edi
  410728:	sub    bh,bl
  41072a:	pusha  
  41072b:	or     eax,0xed2ea8ae
  410730:	adc    edx,DWORD PTR [esi*8+0x67c10c9c]
  410737:	mov    esp,0x85d6b7a5
  41073c:	div    DWORD PTR [esi]
  41073e:	imul   DWORD PTR [ebp-0x1c]
  410741:	sub    ah,dl
  410743:	out    dx,eax
  410744:	(bad)  
  410745:	out    dx,eax
  410746:	sub    BYTE PTR [esi],ah
  410748:	out    dx,al
  410749:	push   0xffffff96
  41074b:	cld    
  41074c:	sahf   
  41074d:	pop    ds
  41074e:	push   eax
  41074f:	and    ebp,edx
  410751:	sbb    BYTE PTR [edx],bl
  410753:	jp     0x410709
  410755:	xor    cl,BYTE PTR [ecx+0x9]
  410758:	(bad)
  41075c:	xor    eax,0x5ac006e2
  410761:	or     DWORD PTR [edi-0x2d],esi
  410764:	imul   esp,DWORD PTR [ebp-0x8],0x6c
  410768:	add    esp,DWORD PTR [edi]
  41076a:	(bad)  
  41076b:	scas   al,BYTE PTR es:[edi]
  41076c:	mov    ds:0x5cabaacc,al
  410771:	mov    eax,0x7ed3bce9
  410776:	adc    al,0x47
  410778:	push   esi
  410779:	add    al,0xa9
  41077b:	add    dl,cl
  41077d:	je     0x410716
  41077f:	xchg   edi,eax
  410780:	hlt    
  410781:	cmp    ebx,DWORD PTR [ebx-0x47]
  410784:	pop    ecx
  410785:	imul   esp,DWORD PTR [esi+esi*2-0x5925ad7c],0x12156b2d
  410790:	pusha  
  410791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410793:	inc    ebp
  410794:	push   eax
  410795:	bound  ecx,QWORD PTR [ebx-0x6646f78b]
  41079b:	jb     0x4107cf
  41079d:	add    cl,ch
  41079f:	mov    dh,0x1
  4107a1:	add    BYTE PTR [eax],al
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	ret    0xb1c0
  4107b2:	cwde   
  4107b3:	adc    al,0x41
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x4107bd
  4107bc:	pop    esi
  4107bd:	xchg   ebp,eax
  4107be:	in     al,dx
  4107bf:	lods   al,BYTE PTR ds:[esi]
  4107c0:	sahf   
  4107c1:	out    dx,eax
  4107c2:	sti    
  4107c3:	out    dx,al
  4107c4:	outs   dx,DWORD PTR ds:[esi]
  4107c5:	xor    eax,0xee44c244
  4107ca:	dec    esp
  4107cb:	lods   al,BYTE PTR ds:[esi]
  4107cc:	call   0x149d:0x46277e6a
  4107d3:	out    0x64,eax
  4107d5:	mov    edi,esp
  4107d7:	loope  0x410799
  4107d9:	loop   0x410836
  4107db:	jno    0x410778
  4107dd:	cmc    
  4107de:	xchg   esi,eax
  4107df:	mov    ebx,0xe4537391
  4107e4:	sti    
  4107e5:	inc    si
  4107e7:	mov    bl,0x14
  4107e9:	(bad)  
  4107eb:	fnstsw ax
  4107ed:	pop    esp
  4107ee:	lock jp 0x41079f
  4107f1:	add    DWORD PTR [edx+0x4761c3c9],ecx
  4107f7:	pop    eax
  4107f8:	and    esp,esi
  4107fa:	daa    
  4107fb:	rol    ebx,cl
  4107fd:	cmp    BYTE PTR [edx+0x7e],0x54
  410801:	jbe    0x41083c
  410803:	loopne 0x4107d1
  410805:	repz aas 
  410807:	xchg   ecx,eax
  410808:	and    dh,dl
  41080a:	and    DWORD PTR [eiz*1+0x1d92ae8b],edi
  410811:	mov    dl,0x9e
  410813:	or     edx,DWORD PTR [esi+0x1c]
  410816:	popf   
  410817:	fimul  DWORD PTR [edx-0xbfde026]
  41081d:	mov    dh,BYTE PTR [ebx-0x77]
  410820:	adc    eax,0x40d83e29
  410825:	cmc    
  410826:	outs   dx,BYTE PTR ds:[esi]
  410827:	mov    eax,edi
  410829:	sti    
  41082a:	push   0xffffffc6
  41082c:	cs out dx,eax
  41082e:	jmp    0x4107b9
  410830:	call   0xa8760753
  410835:	xchg   esp,eax
  410836:	mov    esp,0x91617466
  41083b:	xor    bl,al
  41083d:	test   eax,0xe215a28e
  410842:	sub    bl,ch
  410844:	push   ecx
  410845:	test   esi,edi
  410847:	jmp    0xe017:0xdf5f1be1
  41084e:	jo     0x410878
  410850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410851:	cld    
  410852:	push   ss
  410853:	dec    esp
  410854:	mov    DWORD PTR [esi-0xf],ebx
  410857:	or     esp,DWORD PTR [ebx-0x48]
  41085a:	mov    bh,0xc
  41085c:	gs repnz or al,0x69
  410860:	stos   BYTE PTR es:[edi],al
  410861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410862:	xchg   edx,eax
  410863:	add    bh,BYTE PTR [ebx]
  410865:	sbb    esi,0x896fa013
  41086b:	je     0x41086b
  41086d:	add    dh,BYTE PTR [ebx-0x39a99754]
  410873:	pop    ss
  410874:	cmp    al,0x6
  410876:	xchg   edi,eax
  410877:	outs   dx,DWORD PTR ds:[esi]
  410878:	in     al,0xd9
  41087a:	xchg   DWORD PTR [esi-0x116b0d07],esi
  410880:	es mov ebx,0xeb13edb2
  410886:	mov    eax,0xbdaed324
  41088b:	add    cl,dl
  41088d:	inc    ebx
  41088e:	jge    0x4108bc
  410890:	mov    dh,bh
  410892:	jmp    0x92e5:0x6191df9d
  410899:	and    eax,0x8344d049
  41089e:	rcl    DWORD PTR [esi+0x75f4acd2],1
  4108a4:	mov    ds:0x87ddc111,al
  4108a9:	not    DWORD PTR [ecx-0xd5aedf7]
  4108af:	dec    eax
  4108b0:	popa   
  4108b1:	jecxz  0x4108b7
  4108b3:	pop    eax
  4108b4:	pslld  mm0,QWORD PTR ds:0xf18cda8c
  4108bb:	in     eax,dx
  4108bc:	mov    cl,BYTE PTR [ebx+ebp*4-0x6b44a7c5]
  4108c3:	daa    
  4108c4:	mov    ds:0xa6aa5ea1,al
  4108c9:	mov    ebx,0xe353dc9d
  4108ce:	push   ss
  4108cf:	pop    ebp
  4108d0:	mov    ch,0x5d
  4108d2:	inc    esp
  4108d3:	aad    0x3f
  4108d5:	sbb    edx,DWORD PTR [edi]
  4108d7:	repz inc ebx
  4108d9:	pop    eax
  4108da:	jo     0x41088e
  4108dc:	xor    eax,esi
  4108de:	pop    eax
  4108df:	jecxz  0x4108fd
  4108e1:	pop    es
  4108e2:	jmp    FWORD PTR [esi]
  4108e4:	scas   eax,DWORD PTR es:[edi]
  4108e5:	pop    ss
  4108e6:	add    ch,ch
  4108e8:	xor    eax,0x6bc26ecd
  4108ed:	lock inc esi
  4108ef:	(bad)  
  4108f0:	je     0x41088e
  4108f2:	test   eax,0x5c3abe1d
  4108f7:	les    esi,FWORD PTR [edi]
  4108f9:	movsx  esi,WORD PTR [ecx+0x7a]
  4108fd:	cmp    al,0x6d
  4108ff:	pop    ebx
  410900:	or     dh,BYTE PTR [ecx-0x3d042769]
  410906:	(bad)  
  410907:	scas   eax,DWORD PTR es:[edi]
  410908:	push   edx
  410909:	mov    cl,0xf
  41090b:	iret   
  41090c:	jg     0x410921
  41090e:	xchg   ebp,eax
  41090f:	(bad)  [eax-0x6d95761c]
  410915:	mov    dh,0x86
  410917:	push   0xc
  410919:	mov    edx,0xd69d383d
  41091e:	out    0x54,eax
  410920:	das    
  410921:	or     cl,bl
  410923:	cmp    ebp,DWORD PTR [edx-0x7245f380]
  410929:	shr    BYTE PTR [esi*4+0x2f26db6e],0x7d
  410931:	sub    eax,0x6f722a96
  410936:	retf   
  410937:	(bad)  [eax+0x2129859]
  41093d:	xchg   ebx,eax
  41093e:	mov    eax,0xecc25530
  410943:	mov    ah,0xe2
  410945:	cwde   
  410946:	and    eax,0x77a9605e
  41094b:	int3   
  41094c:	repnz das 
  41094e:	fild   DWORD PTR [eax]
  410950:	(bad)  
  410951:	test   al,0xe5
  410953:	jg     0x4108e9
  410955:	add    BYTE PTR [edx],dl
  410957:	pop    esi
  410958:	popa   
  410959:	add    eax,ecx
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4345ef,0x0
  41099b:	mov    eax,ds:0x4345ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4345ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4345ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4345ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4345ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4345ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4345ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4346cf
  4109f5:	adc    DWORD PTR ds:0x4345e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4346bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434607,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	mov    ?,WORD PTR [eax+0x6e]
  410a30:	in     eax,dx
  410a31:	stos   BYTE PTR es:[edi],al
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a06
  410a3a:	aam    0xb9
  410a3c:	mov    eax,ds:0x3efbd77
  410a41:	push   ds
  410a42:	repz in eax,dx
  410a44:	ret    
  410a45:	stos   DWORD PTR es:[edi],eax
  410a46:	lods   eax,DWORD PTR ds:[esi]
  410a47:	mov    fs,WORD PTR [ebp+0x5d61ce20]
  410a4d:	jo     0x410a05
  410a4f:	sbb    al,0xd2
  410a51:	ja     0x410acb
  410a53:	ret    
  410a54:	and    BYTE PTR [ebp-0x2],ah
  410a57:	addr16 or al,0x18
  410a5a:	dec    ecx
  410a5b:	sbb    ebx,eax
  410a5d:	(bad)
  410a60:	mov    al,ds:0x68d1830a
  410a65:	cmc    
  410a66:	xchg   edi,eax
  410a67:	test   BYTE PTR ds:0xdba184ae,ah
  410a6d:	xor    eax,0x1d1c6e24
  410a72:	push   eax
  410a73:	jg     0x410adc
  410a75:	mov    ebx,0xbeabc01b
  410a7a:	or     DWORD PTR [ecx-0x4a],eax
  410a7d:	out    0xed,eax
  410a7f:	outs   dx,DWORD PTR ds:[si]
  410a81:	loopne 0x410a94
  410a83:	icebp  
  410a84:	and    al,0x65
  410a86:	cmp    edi,DWORD PTR [edi-0x7bb9219b]
  410a8c:	in     al,0x71
  410a8e:	xor    eax,0xa9f065c1
  410a93:	push   0x5d
  410a95:	add    al,0xc4
  410a97:	sub    DWORD PTR [edx-0x46],ecx
  410a9a:	jmp    esp
  410a9c:	inc    esi
  410a9d:	aas    
  410a9e:	jnp    0x410ad9
  410aa0:	fs dec esi
  410aa3:	aam    0xdb
  410aa5:	jmp    0xad2e9938
  410aaa:	test   BYTE PTR [esi+0x1f],al
  410aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aae:	int    0x29
  410ab0:	shl    cl,cl
  410ab2:	test   BYTE PTR [esi+0x16f9c8af],al
  410ab8:	gs out dx,eax
  410aba:	into   
  410abb:	(bad)  [eax]
  410abd:	(bad)  
  410abe:	aas    
  410abf:	xchg   BYTE PTR [esi-0xb0c1963],ch
  410ac5:	xor    bh,BYTE PTR [edx+0x13]
  410ac8:	je     0x410ad3
  410aca:	pop    es
  410acb:	and    al,0x21
  410acd:	ficom  DWORD PTR [ecx+ebp*4+0x3b]
  410ad1:	push   edx
  410ad2:	daa    
  410ad3:	dec    ebp
  410ad4:	lahf   
  410ad5:	cmp    ebx,edx
  410ad7:	js     0xa30e194f
  410add:	shr    BYTE PTR [ebp+0x2f],cl
  410ae0:	pop    edi
  410ae1:	aaa    
  410ae2:	pop    ebx
  410ae3:	mov    al,0x7c
  410ae5:	fcomi  st,st(7)
  410ae7:	adc    DWORD PTR [esi+0xb],edx
  410aea:	pop    ebp
  410aeb:	addr16 jo 0x410ac7
  410aee:	and    dl,BYTE PTR [ecx-0x7c618329]
  410af4:	loope  0x410b6f
  410af6:	mov    ebp,edx
  410af8:	jno    0x410abe
  410afa:	ins    DWORD PTR es:[edi],dx
  410afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410afc:	(bad)  
  410afd:	call   0x70460bb4
  410b02:	adc    BYTE PTR [edi+0x23],dh
  410b05:	outs   dx,BYTE PTR ds:[esi]
  410b06:	bound  esi,QWORD PTR [ecx-0x51423fe7]
  410b0c:	and    edi,DWORD PTR [edx+0x3892758d]
  410b12:	jp     0x410ae3
  410b14:	lahf   
  410b15:	in     al,dx
  410b16:	pop    esi
  410b17:	push   edi
  410b18:	sub    eax,0xf762a643
  410b1d:	cmp    al,0xa4
  410b1f:	sbb    ah,al
  410b21:	loope  0x410aae
  410b23:	dec    edi
  410b24:	pop    esi
  410b25:	pop    ds
  410b26:	and    DWORD PTR [edx],edx
  410b28:	xchg   edx,eax
  410b29:	add    al,0x14
  410b2b:	(bad)  
  410b2c:	leave  
  410b2d:	les    ecx,FWORD PTR [eax+0x74f3b442]
  410b33:	adc    esp,0xffffff91
  410b36:	push   eax
  410b37:	pop    esi
  410b38:	xchg   BYTE PTR [edx-0x2d],dh
  410b3b:	pop    eax
  410b3c:	xlat   BYTE PTR ds:[ebx]
  410b3d:	ja     0x410b3b
  410b3f:	js     0x410adf
  410b41:	cmp    DWORD PTR [ebx],ecx
  410b43:	jp     0x410b1a
  410b45:	cdq    
  410b46:	cwde   
  410b47:	lods   al,BYTE PTR ds:[esi]
  410b48:	adc    BYTE PTR [ebx+0x7b],0x36
  410b4c:	js     0x410adb
  410b4e:	lds    esp,FWORD PTR [ecx-0x1d]
  410b51:	mov    esp,edx
  410b53:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410b55:	push   esp
  410b56:	inc    ebx
  410b57:	xchg   edx,eax
  410b58:	xchg   esp,eax
  410b59:	lods   eax,DWORD PTR ds:[esi]
  410b5a:	push   0xd1ce1bbc
  410b5f:	jecxz  0x410b78
  410b61:	push   es
  410b62:	cwde   
  410b63:	(bad)  [edx+edx*1+0x176f801e]
  410b6a:	call   0xde17:0x8881e124
  410b71:	(bad)  
  410b72:	hlt    
  410b73:	test   dh,al
  410b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b76:	and    DWORD PTR [ebx-0x53],edi
  410b79:	aas    
  410b7a:	imul   edx,DWORD PTR [eax-0x53ff1c40],0x1652de9c
  410b84:	hlt    
  410b85:	add    ch,BYTE PTR [edi-0x37]
  410b88:	xchg   esp,eax
  410b89:	iret   
  410b8a:	xor    ecx,DWORD PTR [ecx-0x31]
  410b8d:	or     eax,0x61afa83c
  410b92:	mov    ch,0x7
  410b94:	(bad)  
  410b95:	or     al,0x67
  410b97:	bound  edx,QWORD PTR [ebx+0x6990b340]
  410b9d:	outs   dx,BYTE PTR ds:[esi]
  410b9e:	jmp    0xfbd8f42c
  410ba3:	push   esi
  410ba4:	pop    ds
  410ba5:	std    
  410ba6:	and    ah,BYTE PTR [edi+0x6f]
  410ba9:	mov    bl,0x70
  410bab:	push   ds
  410bac:	xchg   ebp,eax
  410bad:	add    DWORD PTR [ebp+0x665a81ec],esp
  410bb3:	push   es
  410bb4:	(bad)  
  410bb5:	push   edi
  410bb6:	stos   BYTE PTR es:[edi],al
  410bb7:	jp     0x410b92
  410bb9:	mov    esp,0x5bd2ee0e
  410bbe:	pop    edx
  410bbf:	and    eax,0x2f497e83
  410bc4:	mov    dh,0xed
  410bc6:	sub    BYTE PTR ds:0x9254b6d1,dl
  410bcc:	pushf  
  410bcd:	inc    esi
  410bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bcf:	or     BYTE PTR [edi],ah
  410bd1:	mov    bh,BYTE PTR [edx+0x69585e1f]
  410bd7:	cmp    BYTE PTR [eax],0x68
  410bda:	inc    eax
  410bdb:	test   al,0xb0
  410bdd:	mov    ch,0x29
  410bdf:	jle    0x410c1e
  410be1:	call   0xb5dbd598
  410be6:	xchg   esi,eax
  410be7:	mov    ecx,0x11a33835
  410bec:	and    DWORD PTR [esi-0x13],edi
  410bef:	sahf   
  410bf0:	cmp    DWORD PTR [edi],esp
  410bf2:	add    BYTE PTR [esi+ecx*8-0x72c0d88c],ch
  410bf9:	push   esi
  410bfa:	xchg   ebp,eax
  410bfb:	mov    al,0x5d
  410bfd:	lds    ecx,FWORD PTR [esi+0x72]
  410c00:	ficom  DWORD PTR [esi+0x22]
  410c03:	scas   al,BYTE PTR es:[edi]
  410c04:	mov    bl,BYTE PTR [esi-0x5f]
  410c07:	xchg   edi,eax
  410c08:	xor    BYTE PTR [ebp+0x134b4f9f],bh
  410c0e:	out    dx,eax
  410c0f:	jmp    0x410c40
  410c11:	jle    0x410c01
  410c13:	scas   al,BYTE PTR es:[edi]
  410c14:	jmp    0x410be8
  410c16:	mov    dh,0x50
  410c18:	fdivr  st(6),st
  410c1a:	inc    esp
  410c1b:	and    eax,0x64d7de2e
  410c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c21:	(bad)  
  410c23:	dec    eax
  410c24:	inc    esi
  410c25:	icebp  
  410c26:	pop    esi
  410c27:	imul   ebp,edi,0xffffffb9
  410c2a:	fld    DWORD PTR ds:0x5285fa69
  410c30:	push   cs
  410c31:	adc    DWORD PTR [edi-0x76b6ba10],ebp
  410c37:	pop    eax
  410c38:	mov    DWORD PTR [ecx+0x7f],ebx
  410c3b:	inc    ebx
  410c3c:	lds    ecx,FWORD PTR [esi+0x20]
  410c3f:	lods   al,BYTE PTR ds:[esi]
  410c40:	adc    eax,0x4681df8e
  410c45:	adc    BYTE PTR [ecx-0x27],bl
  410c48:	into   
  410c49:	nop
  410c4a:	outs   dx,BYTE PTR ds:[esi]
  410c4b:	mov    eax,0x24c29c65
  410c50:	mov    bl,0xb0
  410c52:	push   cs
  410c53:	js     0x410c41
  410c55:	int    0x32
  410c57:	pusha  
  410c58:	pop    ds
  410c59:	ret    0x9a1
  410c5c:	lods   al,BYTE PTR ds:[esi]
  410c5d:	mov    ds:0x7b3799b7,eax
  410c62:	xchg   ebx,eax
  410c63:	outs   dx,DWORD PTR ds:[esi]
  410c64:	pop    eax
  410c65:	push   es
  410c66:	imul   edi,DWORD PTR [ebx-0x2e],0xffffffa3
  410c6a:	push   ss
  410c6b:	xor    ebp,DWORD PTR [ebx+0x4a]
  410c6e:	dec    edi
  410c6f:	add    eax,0x4abd48e3
  410c74:	push   ebx
  410c75:	lods   al,BYTE PTR ds:[esi]
  410c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c77:	inc    esi
  410c78:	icebp  
  410c79:	bound  ebx,QWORD PTR [ecx+0x36a1f5bc]
  410c7f:	call   0x9884:0x78868609
  410c86:	push   0xa4330b71
  410c8b:	jmp    0x410c52
  410c8d:	repnz inc DWORD PTR [esi+0x23]
  410c91:	pop    ebp
  410c92:	mov    dh,0x5
  410c94:	mov    ah,0x33
  410c96:	mov    dh,0x22
  410c98:	loope  0x410c21
  410c9a:	loope  0x410ce7
  410c9c:	sbb    BYTE PTR [ecx-0x6db109f7],0x77
  410ca3:	push   0x51
  410ca5:	(bad)
  410ca8:	cmp    eax,0x30bcf8d1
  410cad:	frstor [ebx-0xeb2cc5e]
  410cb3:	cld    
  410cb4:	or     eax,esi
  410cb6:	icebp  
  410cb7:	ja     0x410c88
  410cb9:	push   esi
  410cba:	xchg   BYTE PTR [ebx],al
  410cbc:	or     eax,0xbaf1e9b9
  410cc1:	test   al,0x19
  410cc3:	jle    0x410cdd
  410cc5:	adc    al,0xe3
  410cc7:	jge    0x410cdd
  410cc9:	jmp    0x7c56:0x322c666c
  410cd0:	mov    ds:0x61ff53cd,al
  410cd5:	push   ecx
  410cd6:	mov    ecx,esi
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4346c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4345e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43470b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434713,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4346c7,0x434683
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434707,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43468f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x436a686d],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d03
  410d7a:	jmp    0x410d75
  410d7c:	call   0xca52:0xb14ad9de
  410d83:	outs   dx,DWORD PTR ds:[esi]
  410d84:	mov    eax,0x53f9d1b0
  410d89:	jae    0x410d8d
  410d8b:	sbb    edi,DWORD PTR [ecx-0x4c]
  410d8e:	(bad)  
  410d8f:	out    0x57,al
  410d91:	rcr    BYTE PTR [eax],1
  410d93:	add    dh,BYTE PTR [ebx]
  410d95:	mov    dl,0x48
  410d97:	aas    
  410d98:	cmc    
  410d99:	pop    es
  410d9a:	mov    ds:0x762f3642,eax
  410d9f:	mov    ch,0x49
  410da1:	xchg   edx,eax
  410da2:	lea    eax,[edx-0x47a6dfe8]
  410da8:	dec    eax
  410da9:	rcr    BYTE PTR [edi-0x54d8102d],cl
  410daf:	test   BYTE PTR [ebx+0x70],dh
  410db2:	or     eax,0xa83da977
  410db7:	(bad)  
  410db8:	leave  
  410db9:	push   ds
  410dba:	dec    eax
  410dbb:	jg     0x410d8c
  410dbd:	loope  0x410dd0
  410dbf:	sbb    cl,ah
  410dc1:	mov    WORD PTR [edi],gs
  410dc3:	fs pop eax
  410dc5:	pop    ecx
  410dc6:	call   0xc37a58b1
  410dcb:	sbb    ebx,DWORD PTR [esi]
  410dcd:	cwde   
  410dce:	call   0x6735:0x4222b8f5
  410dd5:	push   0xffffffc0
  410dd7:	sub    eax,0xdbccd8b0
  410ddc:	or     esp,DWORD PTR [ebx-0x7c]
  410ddf:	stc    
  410de0:	fstp   QWORD PTR [ecx+0x3b]
  410de3:	push   esi
  410de4:	pop    ebp
  410de5:	je     0x410e42
  410de7:	mov    dl,0x60
  410de9:	mov    ebx,0xd63308c9
  410dee:	xchg   BYTE PTR [edi-0x61],bl
  410df1:	cmp    eax,0x5108f974
  410df6:	int    0x12
  410df8:	(bad)  
  410dfa:	xor    BYTE PTR [esi-0x6b64eaff],0x1a
  410e01:	xor    al,0xc7
  410e03:	dec    esp
  410e04:	push   edx
  410e05:	or     BYTE PTR [edi],cl
  410e07:	push   ecx
  410e08:	jb     0x410dc0
  410e0a:	pop    es
  410e0b:	cdq    
  410e0c:	stos   BYTE PTR es:[edi],al
  410e0d:	inc    edx
  410e0e:	xchg   ecx,eax
  410e0f:	les    eax,FWORD PTR [edi+eax*2+0x35]
  410e13:	add    eax,DWORD PTR [ebx-0x23]
  410e16:	push   esi
  410e17:	pop    ss
  410e18:	lahf   
  410e19:	or     eax,0xd37fb578
  410e1e:	xor    eax,0x8cb408b7
  410e23:	push   ds
  410e24:	cmp    eax,0xf3c8d653
  410e29:	add    al,0x63
  410e2b:	pop    eax
  410e2c:	dec    eax
  410e2d:	outs   dx,BYTE PTR ds:[esi]
  410e2e:	scas   eax,DWORD PTR es:[edi]
  410e2f:	fisttp DWORD PTR [eax+edx*1-0x6cbf0b76]
  410e36:	outs   dx,BYTE PTR ds:[esi]
  410e37:	or     al,0x29
  410e39:	pop    ebx
  410e3a:	mov    cl,0x1d
  410e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e3d:	cdq    
  410e3e:	add    dh,BYTE PTR [ecx-0x2b6af619]
  410e44:	lahf   
  410e45:	push   eax
  410e46:	inc    ecx
  410e47:	pop    eax
  410e48:	lock mov ds:0x11d4d622,al
  410e4e:	inc    edx
  410e4f:	cwde   
  410e50:	cmc    
  410e51:	or     BYTE PTR [eax],ch
  410e53:	xchg   edx,eax
  410e54:	pop    es
  410e55:	sahf   
  410e56:	adc    eax,0x9ce2ceb0
  410e5b:	mov    cs,WORD PTR [ecx]
  410e5d:	cmp    DWORD PTR [ebx-0x61c069f5],edi
  410e63:	mov    ds:0x5b90c86b,eax
  410e68:	int    0xfa
  410e6a:	outs   dx,BYTE PTR es:[esi]
  410e6c:	mul    DWORD PTR [eax+eax*1+0x714fbbb4]
  410e73:	xchg   ecx,eax
  410e74:	ins    DWORD PTR es:[edi],dx
  410e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e76:	sub    al,0x3
  410e78:	mov    edi,DWORD PTR [edx]
  410e7a:	and    DWORD PTR [ecx-0x48e29a7d],eax
  410e80:	or     esi,DWORD PTR ds:[edx]
  410e83:	push   es
  410e84:	mov    ah,0x8b
  410e86:	pop    edi
  410e87:	sub    DWORD PTR [ecx+0x7a],edi
  410e8a:	adc    ch,BYTE PTR ds:0x6624a598
  410e90:	and    eax,0x17c11882
  410e95:	xchg   esp,eax
  410e96:	push   cs
  410e97:	mov    al,BYTE PTR [edx-0x22]
  410e9a:	xchg   BYTE PTR [ecx+eax*2],ch
  410e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e9e:	pusha  
  410e9f:	cld    
  410ea0:	xchg   ecx,eax
  410ea1:	repz mov edi,DWORD PTR [ebp-0x713ea0e4]
  410ea8:	ds aaa 
  410eaa:	fcom   DWORD PTR [ebx+0x48d06edc]
  410eb0:	jl     0x410f13
  410eb2:	pusha  
  410eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb4:	push   ebp
  410eb5:	repz ss cwde 
  410eb8:	out    dx,eax
  410eb9:	jo     0x410f20
  410ebb:	add    ah,bl
  410ebd:	xchg   DWORD PTR [edx+0x40],eax
  410ec0:	dec    edx
  410ec1:	test   eax,0x1b99e764
  410ec6:	inc    ebp
  410ec7:	(bad)  
  410ec8:	sub    edi,DWORD PTR [eax+ecx*2-0x58]
  410ecc:	lahf   
  410ecd:	inc    esp
  410ece:	xor    DWORD PTR [ebx-0xd1b68b9],ebx
  410ed4:	adc    DWORD PTR [edx],ebp
  410ed6:	das    
  410ed7:	js     0x410ee0
  410ed9:	mov    al,0x61
  410edb:	iret   
  410edc:	fld    QWORD PTR [esi-0x12]
  410edf:	mov    dh,0xe8
  410ee1:	adc    ebp,DWORD PTR [ecx-0x5fc654cc]
  410ee7:	lea    ebx,[eax+edi*2-0x4]
  410eeb:	dec    edx
  410eec:	ins    BYTE PTR es:[edi],dx
  410eed:	pusha  
  410eee:	ret    
  410eef:	inc    ebp
  410ef0:	aaa    
  410ef1:	repz mov ecx,0x133a9ef0
  410ef7:	dec    edx
  410ef8:	push   es
  410ef9:	sahf   
  410efa:	je     0x410eca
  410efc:	shl    BYTE PTR [edi-0x75cf8aee],0x18
  410f03:	pushf  
  410f04:	cvtps2pi mm1,QWORD PTR [edi-0x669622de]
  410f0b:	pop    edi
  410f0c:	jmp    0x5424:0xbb3d98aa
  410f13:	in     eax,0x89
  410f15:	call   0x6caf5bb7
  410f1a:	not    BYTE PTR [ecx+0x24216999]
  410f20:	cs ds xchg ebx,eax
  410f23:	pop    eax
  410f24:	and    edi,ebp
  410f26:	xchg   edi,eax
  410f27:	(bad)  
  410f28:	inc    DWORD PTR [ebx-0x1c]
  410f2b:	jmp    0xc4c9de94
  410f30:	adc    al,0xda
  410f32:	stc    
  410f33:	push   esi
  410f34:	mov    ss,WORD PTR [ecx+ecx*2-0x23]
  410f38:	cdq    
  410f39:	sbb    ebp,ecx
  410f3b:	fisttp WORD PTR [esi]
  410f3d:	xor    eax,0xa23e533d
  410f42:	imul   ecx,DWORD PTR [esi-0x3d33397],0xd51c4051
  410f4c:	sbb    eax,0xe370e31a
  410f51:	pop    DWORD PTR [eax-0x27]
  410f54:	fcomp  QWORD PTR [ecx]
  410f56:	fild   QWORD PTR [eax-0x45]
  410f59:	je     0x410f17
  410f5b:	popf   
  410f5c:	cmp    dl,cl
  410f5e:	mov    ds:0xe0f9567d,eax
  410f63:	push   edx
  410f64:	mov    al,ds:0x132f0501
  410f69:	int3   
  410f6a:	xor    eax,0x54dfba83
  410f6f:	add    al,0xe1
  410f71:	cmp    al,0x28
  410f73:	mov    ebx,0xc152339e
  410f78:	not    DWORD PTR [eax-0x6d564d9f]
  410f7e:	xor    esp,DWORD PTR [eax+0x35b00a0b]
  410f84:	sbb    DWORD PTR [ebx+ecx*4],ecx
  410f87:	xor    DWORD PTR [ecx+0x2f5817ee],edi
  410f8d:	jbe    0x410f70
  410f8f:	xchg   ebp,eax
  410f90:	ror    BYTE PTR [edx],cl
  410f92:	shl    DWORD PTR ds:0x2cd58248,cl
  410f98:	out    dx,eax
  410f99:	dec    esp
  410f9a:	push   cs
  410f9b:	outs   dx,DWORD PTR ds:[esi]
  410f9c:	fcomp  DWORD PTR [ecx]
  410f9e:	mov    eax,0xcc431b8f
  410fa3:	pop    DWORD PTR [edx]
  410fa5:	fistp  DWORD PTR [ebx+0x54be2237]
  410fab:	(bad)  
  410fac:	mov    fs,ebp
  410fae:	mov    esp,0xc373f940
  410fb3:	xchg   BYTE PTR [eax+0x62],dl
  410fb6:	jge    0x411022
  410fb8:	dec    ebp
  410fb9:	add    al,0xce
  410fbb:	mov    gs,WORD PTR [edi]
  410fbd:	mov    ebp,0xfc58323d
  410fc2:	adc    al,0x4f
  410fc4:	push   eax
  410fc5:	je     0x410fc2
  410fc7:	mov    bl,0xe7
  410fc9:	frstor [edx+0x45]
  410fcc:	mov    DWORD PTR [ecx],edi
  410fce:	push   ecx
  410fcf:	jl     0x410ff1
  410fd1:	(bad)  
  410fd3:	daa    
  410fd4:	push   es
  410fd5:	les    edi,FWORD PTR [edx]
  410fd7:	adc    DWORD PTR [ecx+edi*4-0x9],0x124f6104
  410fdf:	retf   
  410fe0:	imul   ebx,DWORD PTR [eax],0xffffff90
  410fe3:	inc    ecx
  410fe4:	(bad)  
  410fe5:	xchg   DWORD PTR ds:0x104beb90,edi
  410feb:	jne    0x410fc8
  410fed:	int3   
  410fee:	xchg   ecx,eax
  410fef:	clc    
  410ff0:	fwait
  410ff1:	sub    al,0xbc
  410ff3:	mov    al,BYTE PTR [ecx+0x30]
  410ff6:	das    
  410ff7:	mov    dh,0xd2
  410ff9:	mov    edx,0x100cdabf
  410ffe:	dec    ecx
  410fff:	mov    edx,0xb41540c5
  411004:	pop    edi
  411005:	push   edi
  411006:	mov    DWORD PTR [edx],ecx
  411008:	mov    ds:0x71fd716f,eax
  41100d:	push   0x813bebdb
  411012:	(bad)  
  411013:	rcl    BYTE PTR [esi],0x49
  411016:	jmp    0x410faa
  411018:	add    ecx,0xffcd8d67
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x868c4754
  411040:	adc    DWORD PTR [edx+0x68],eax
  411043:	dec    edi
  411044:	jle    0x4110c4
  411046:	popf   
  411047:	js     0x4110c7
  411049:	jle    0x411040
  41104b:	xor    eax,0xebdcc7f5
  411050:	adc    eax,0xba24e23d
  411055:	scas   al,BYTE PTR es:[edi]
  411056:	ror    edx,cl
  411058:	inc    eax
  411059:	cmp    DWORD PTR [eax],0x25
  41105c:	mov    ecx,esi
  41105e:	adc    al,0xbd
  411060:	aad    0xe7
  411062:	xor    al,0xfb
  411064:	push   ss
  411065:	lods   eax,DWORD PTR ds:[esi]
  411066:	pop    esp
  411067:	and    al,0xee
  411069:	mov    eax,0x8ddbc755
  41106e:	outs   dx,DWORD PTR ds:[esi]
  41106f:	bound  ecx,QWORD PTR [ebx+0x3b]
  411072:	xchg   edi,eax
  411073:	jl     0x411016
  411075:	push   ebp
  411076:	sub    eax,0x6412d035
  41107b:	dec    ebp
  41107c:	adc    DWORD PTR [eax-0x7c],edi
  41107f:	sbb    eax,0xe225e9b7
  411084:	add    BYTE PTR ds:0xa6b2752c,dh
  41108a:	push   0x68
  41108c:	mov    ebp,0xcf38daec
  411091:	jg     0x4110b8
  411093:	shr    BYTE PTR [esi+0x52],0x9e
  411097:	cmp    BYTE PTR [eax+0x67],ah
  41109a:	shl    DWORD PTR [edx],0x4
  41109d:	inc    eax
  41109e:	xor    BYTE PTR [esi-0x1e],ch
  4110a1:	jmp    0x4110fd
  4110a3:	mov    ebp,0xe718dcde
  4110a8:	mov    dl,0x87
  4110aa:	daa    
  4110ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ac:	stos   BYTE PTR es:[edi],al
  4110ad:	and    DWORD PTR gs:[edi-0x25ab50ce],0x40
  4110b5:	mov    ebx,0x3741555d
  4110ba:	inc    eax
  4110bb:	push   edi
  4110bc:	fcmovu st,st(3)
  4110be:	jge    0x4110ea
  4110c0:	cli    
  4110c1:	xchg   ebx,eax
  4110c2:	and    DWORD PTR ds:0x5c1c34b1,ebx
  4110c8:	sbb    eax,0x880c5c12
  4110cd:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4110cf:	stos   DWORD PTR es:[edi],eax
  4110d0:	push   esp
  4110d1:	pop    ss
  4110d2:	repnz inc edi
  4110d4:	mov    esp,0x75f835c0
  4110d9:	mov    ch,0x1c
  4110db:	and    DWORD PTR [ebx+0x10],0x7b62f251
  4110e2:	addr16 jmp 0x528e:0xbc1c0f31
  4110ea:	jo     0x411163
  4110ec:	mov    WORD PTR [ebx-0x60],ss
  4110ef:	rol    BYTE PTR [edx-0x40],cl
  4110f2:	jo     0x411109
  4110f4:	cs mov edx,0x5f0b1ee4
  4110fa:	rol    DWORD PTR [eax],0x72
  4110fd:	push   ebx
  4110fe:	jp     0x4110c4
  411100:	jae    0x4110ea
  411102:	ret    
  411103:	test   BYTE PTR [edi-0x46],bl
  411106:	mov    ebx,0x3c625db5
  41110b:	and    BYTE PTR [edi-0x5c5b6504],0x52
  411112:	inc    ecx
  411113:	sti    
  411114:	or     eax,DWORD PTR [ecx]
  411116:	test   BYTE PTR [esi],ch
  411118:	xchg   WORD PTR [ebx+eax*4-0xcca1980],sp
  411120:	jnp    0x411187
  411122:	jb     0x411107
  411124:	and    al,0x58
  411126:	xchg   edx,eax
  411127:	rol    DWORD PTR [esi+eax*8-0x52310b83],cl
  41112e:	test   BYTE PTR [ebp+0x4a],cl
  411131:	mov    ah,0x8d
  411133:	fldcw  WORD PTR [esi]
  411135:	or     eax,DWORD PTR [edx]
  411137:	xlat   BYTE PTR ds:[ebx]
  411138:	mov    ebp,0x8edaad7a
  41113d:	cmp    al,0x90
  41113f:	mov    edx,DWORD PTR [esi+0x45]
  411142:	push   0x68718036
  411147:	inc    ebx
  411148:	lods   al,BYTE PTR ds:[esi]
  411149:	push   esi
  41114a:	xchg   edx,eax
  41114b:	outs   dx,DWORD PTR ds:[esi]
  41114c:	push   0x0
  41114e:	sbb    al,0xc
  411150:	jmp    0xa6d759c3
  411155:	cld    
  411156:	mov    bh,0x58
  411158:	push   ss
  411159:	out    0x14,al
  41115b:	dec    edx
  41115c:	xor    bl,dl
  41115e:	in     al,0x9b
  411160:	jo     0x4111d1
  411162:	jae    0x4110f8
  411164:	retf   0x156d
  411167:	lods   al,BYTE PTR ds:[esi]
  411168:	push   edi
  411169:	pop    ss
  41116a:	dec    edx
  41116b:	daa    
  41116c:	cmp    BYTE PTR [esi-0x7b8ea113],al
  411172:	dec    eax
  411173:	in     eax,dx
  411174:	popf   
  411175:	adc    BYTE PTR [esi+0x38078258],bh
  41117b:	call   0xb055e0a5
  411180:	jl     0x411138
  411182:	jo     0x411137
  411184:	cmp    al,0x3e
  411186:	pop    ecx
  411187:	xchg   edi,eax
  411188:	sub    dh,BYTE PTR [ecx-0x76046d4d]
  41118e:	inc    eax
  41118f:	js     0x41114e
  411191:	cld    
  411192:	lods   eax,DWORD PTR ds:[esi]
  411193:	adc    DWORD PTR [ebp-0x88c782f],eax
  411199:	lea    eax,[ebx]
  41119b:	inc    edi
  41119c:	or     al,0x3c
  41119e:	xchg   ecx,eax
  41119f:	jb     0x4111e4
  4111a1:	mov    ebp,0x3278e1
  4111a6:	popf   
  4111a7:	in     eax,dx
  4111a8:	fnstsw WORD PTR [edi]
  4111aa:	xor    ebx,DWORD PTR ds:0x4e57a8bb
  4111b0:	rcl    BYTE PTR ds:0xd2b52d3d,cl
  4111b6:	jo     0x411141
  4111b8:	aas    
  4111b9:	jo     0x41118a
  4111bb:	and    eax,0xe6ffbd78
  4111c0:	adc    al,BYTE PTR [esi-0x65]
  4111c3:	sub    ah,BYTE PTR [ebp+0x31e7805f]
  4111c9:	lods   al,BYTE PTR ds:[esi]
  4111ca:	jmp    0x242fc97e
  4111cf:	and    edi,edx
  4111d1:	sti    
  4111d2:	aam    0xbd
  4111d4:	(bad)  
  4111d5:	jle    0x41121b
  4111d7:	data16 aad 0x7
  4111da:	or     ah,BYTE PTR [edi-0x7a]
  4111dd:	div    BYTE PTR [edx+0x33]
  4111e0:	pop    edx
  4111e1:	mov    fs,WORD PTR [eax]
  4111e3:	mov    cl,0xdf
  4111e5:	add    eax,0x6da58ab
  4111ea:	mov    al,ds:0xf01e232e
  4111ef:	jmp    0xfbd9:0xe0efeee9
  4111f6:	(bad)  
  4111f7:	pop    ds
  4111f8:	push   0x28
  4111fa:	bound  edx,QWORD PTR [ebp-0xd]
  4111fd:	inc    eax
  4111fe:	(bad)  
  4111ff:	fstp   DWORD PTR [esi]
  411201:	dec    esp
  411202:	mov    ah,0x17
  411204:	mov    esi,0x94498109
  411209:	add    BYTE PTR [edx],bl
  41120b:	push   0x91600d79
  411210:	or     ch,BYTE PTR [edx+0x753f4440]
  411216:	dec    ebp
  411217:	xor    edx,DWORD PTR [eax]
  411219:	pop    edi
  41121a:	fwait
  41121b:	xchg   ebx,eax
  41121c:	mov    fs,esi
  41121e:	cmp    al,BYTE PTR [edi]
  411220:	mov    dl,BYTE PTR [eax+0x1c952c02]
  411226:	out    0x8b,eax
  411228:	lahf   
  411229:	add    ch,0xa1
  41122c:	and    DWORD PTR [edi-0x1fe2c322],edx
  411232:	jno    0x411231
  411234:	shr    DWORD PTR ss:[esi+0x6d],cl
  411238:	pop    esi
  411239:	fistp  QWORD PTR [esp+esi*4]
  41123c:	adc    BYTE PTR [esi+0x73],ch
  41123f:	xchg   edi,eax
  411240:	inc    DWORD PTR [eax-0x2bfab47b]
  411246:	adc    esi,edi
  411248:	inc    ecx
  411249:	pop    ebx
  41124a:	add    DWORD PTR [ebx],esp
  41124c:	xlat   BYTE PTR ds:[ebx]
  41124d:	add    BYTE PTR [ebp+0x3f0bf3ed],ch
  411253:	fwait
  411254:	leave  
  411255:	hlt    
  411256:	jmp    0x8b28:0x137876ac
  41125d:	std    
  41125e:	test   al,0x6d
  411260:	xor    bl,0x72
  411263:	push   ds
  411264:	daa    
  411265:	mov    al,0x89
  411267:	pop    esi
  411268:	dec    eax
  411269:	xchg   edi,eax
  41126a:	jge    0x41129b
  41126c:	or     esp,0x19
  41126f:	pushf  
  411270:	mov    esi,0xadc9e552
  411275:	fxam   
  411277:	and    al,0x31
  411279:	sbb    esi,ecx
  41127b:	sbb    al,0x40
  41127d:	pop    esi
  41127e:	push   cs
  41127f:	loopne 0x4112b7
  411281:	fs xchg esi,eax
  411283:	stos   DWORD PTR es:[edi],eax
  411284:	jecxz  0x411232
  411286:	in     eax,dx
  411287:	stc    
  411288:	loopne 0x41120a
  41128a:	popa   
  41128b:	mov    ah,0x99
  41128d:	inc    edi
  41128e:	xor    DWORD PTR ds:[ebp-0x7a2a8b72],edx
  411295:	adc    DWORD PTR [ebx+0x30],0xffffffa1
  411299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129a:	mov    ecx,0xfe57a63f
  41129f:	adc    bl,BYTE PTR [ecx+0x4c]
  4112a2:	mov    dl,0xc9
  4112a4:	mov    esp,0x878e6360
  4112a9:	inc    ebx
  4112aa:	cmp    BYTE PTR [edx+0x2dc257bf],bl
  4112b0:	(bad)  
  4112b1:	sub    al,dl
  4112b3:	sbb    DWORD PTR [edi],ebx
  4112b5:	rcl    BYTE PTR [edi+0x5a],0x6e
  4112b9:	div    DWORD PTR [ecx+eax*4-0x183dd89e]
  4112c0:	imul   esp,DWORD PTR [eax],0x19bac6e4
  4112c6:	xlat   BYTE PTR ds:[ebx]
  4112c7:	in     al,dx
  4112c8:	cmp    cl,BYTE PTR [edi]
  4112ca:	sbb    ecx,DWORD PTR [edx]
  4112cc:	adc    BYTE PTR [ebx-0x39],al
  4112cf:	add    bh,BYTE PTR [eax*1-0x3d79f1e5]
  4112d6:	add    BYTE PTR [edi-0xce67859],bl
  4112dc:	fild   QWORD PTR [ebx]
  4112de:	pop    esp
  4112df:	xchg   edi,eax
  4112e0:	es jmp 0x4112d2
  4112e3:	stos   DWORD PTR es:[edi],eax
  4112e4:	xchg   ebx,eax
  4112e5:	iret   
  4112e6:	add    BYTE PTR [ebx],bl
  4112e8:	repz xor esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434703
  411346:	xor    DWORD PTR ds:0x4346cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4345ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4345ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4345ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43487a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4345ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4345ff
  411399:	dec    eax
  41139a:	mov    ds:0x4345ff,eax
  41139f:	mov    eax,ds:0x4345ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4345ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4345ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434643,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434643
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434643,eax
  4113d6:	cmp    DWORD PTR ds:0x434643,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434643,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43467f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434643,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434643
  411418:	inc    eax
  411419:	mov    ds:0x434643,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43470f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43470f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43470f,ebx
  411442:	cmp    DWORD PTR ds:0x43470f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434693
  411457:	push   0x4347db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43470f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43470f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43470f,ebx
  41147c:	cmp    DWORD PTR ds:0x43470f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4345df
  411490:	adc    DWORD PTR ds:0x4346c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434683,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434703,0x4345e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4346d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4346f7,0x4345f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4346cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4345ff,0x43463f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434713,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4345ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4345ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4345ff,edi
  411509:	cmp    DWORD PTR ds:0x4345ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434707
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4345ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4345ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4345ff,edi
  411545:	cmp    DWORD PTR ds:0x4345ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4345e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4345f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4345f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4345f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4345f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4345f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4345f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4345f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4345f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4345eb
  4115c4:	adc    DWORD PTR ds:0x4345e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43470b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43470b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43470b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43470b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43470b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43470b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43470b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43470b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4115fb
  411641:	xchg   esp,eax
  411642:	and    al,BYTE PTR ds:0x7e7e4a8f
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4115fe
  41164d:	xor    DWORD PTR [edx+0x40c6991e],ecx
  411653:	lods   eax,DWORD PTR ds:[esi]
  411654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411655:	mov    ebp,DWORD PTR [edi-0x2e]
  411658:	lock mov ah,0x92
  41165b:	and    al,0xed
  41165d:	ins    DWORD PTR es:[edi],dx
  41165e:	ins    DWORD PTR es:[edi],dx
  41165f:	or     edx,DWORD PTR [esi+edx*8]
  411662:	imul   esi,ecx,0xfffffff4
  411665:	lods   eax,DWORD PTR ds:[esi]
  411666:	sbb    al,0x3
  411668:	test   eax,0x690d7236
  41166d:	(bad)  
  41166e:	es retf 
  411670:	das    
  411671:	mov    ch,0x93
  411673:	aaa    
  411674:	int    0x2a
  411676:	push   ebx
  411677:	xchg   esi,eax
  411678:	(bad)  [ebp-0x39]
  41167b:	mov    WORD PTR [edx+ebx*4-0x73ca6efd],ds
  411682:	ss in  eax,0x95
  411685:	test   DWORD PTR [esi],eax
  411687:	ret    0xb96a
  41168a:	inc    ebp
  41168b:	adc    eax,0x2e0077e3
  411690:	js     0x4116b3
  411692:	loopne 0x411623
  411694:	push   eax
  411695:	mov    al,0x3c
  411697:	ss add al,0xd1
  41169a:	fstp   TBYTE PTR [edx+0x50e04f97]
  4116a0:	xlat   BYTE PTR ds:[ebx]
  4116a1:	sbb    eax,edx
  4116a3:	leave  
  4116a4:	nop
  4116a5:	ret    
  4116a6:	lea    ebp,[esi]
  4116a8:	test   BYTE PTR [ebx],bh
  4116aa:	in     al,0xb3
  4116ac:	in     al,dx
  4116ad:	xor    DWORD PTR [edi],eax
  4116af:	cmc    
  4116b0:	not    ebx
  4116b2:	push   cs
  4116b3:	add    al,0x73
  4116b5:	and    eax,0x38bbc16d
  4116ba:	cli    
  4116bb:	or     BYTE PTR [ecx+0x4b6b116a],ah
  4116c1:	pushf  
  4116c2:	dec    esp
  4116c3:	lods   al,BYTE PTR ds:[esi]
  4116c4:	(bad)  
  4116c5:	dec    ebp
  4116c6:	leave  
  4116c7:	mov    dl,bl
  4116c9:	cmp    bh,0xa9
  4116cc:	pop    ebx
  4116cd:	shr    eax,0xdf
  4116d0:	inc    ebx
  4116d1:	mov    esp,edi
  4116d3:	and    eax,0x6cd09ac
  4116d8:	mov    eax,0x5982c1e7
  4116dd:	scas   eax,DWORD PTR es:[edi]
  4116de:	inc    eax
  4116df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e0:	push   esp
  4116e1:	stc    
  4116e2:	(bad)  
  4116e3:	out    0x88,al
  4116e5:	dec    edx
  4116e6:	(bad)  
  4116e7:	shl    DWORD PTR ds:0x9d1997f5,0xfa
  4116ee:	ficomp DWORD PTR [ecx-0x23]
  4116f1:	sub    al,0x3f
  4116f3:	je     0x411695
  4116f5:	pop    ds
  4116f6:	jge    0x411740
  4116f8:	and    al,0x79
  4116fa:	aaa    
  4116fb:	mov    esp,0xe454fb4c
  411700:	xor    eax,DWORD PTR [eax]
  411702:	lods   eax,DWORD PTR ds:[esi]
  411703:	daa    
  411704:	in     al,0xb7
  411706:	xchg   BYTE PTR [esi-0x4aa2d74c],dh
  41170c:	xchg   edx,eax
  41170d:	xchg   edi,eax
  41170e:	pop    eax
  41170f:	cmp    al,0xa3
  411711:	cld    
  411712:	ror    ebx,0x30
  411715:	xchg   esp,eax
  411716:	es jg  0x41169c
  411719:	test   ecx,edx
  41171b:	cli    
  41171c:	lea    ebx,[edx+0x69]
  41171f:	call   0x8095:0x6d8f50f4
  411726:	outs   dx,BYTE PTR ds:[esi]
  411727:	int    0x7f
  411729:	shl    DWORD PTR [eax+0x2727c04c],1
  41172f:	inc    ebx
  411730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411731:	push   ebx
  411732:	in     eax,0x16
  411734:	sbb    esp,ebp
  411736:	pop    ecx
  411737:	leave  
  411738:	pop    edx
  411739:	pushf  
  41173a:	add    DWORD PTR [esi-0x23],0x202645b8
  411741:	ds push ebx
  411743:	outs   dx,BYTE PTR ds:[esi]
  411744:	fstp   DWORD PTR [esi+edi*8-0x748f8405]
  41174b:	inc    ecx
  41174c:	mov    dl,0xa9
  41174e:	fs xchg edx,eax
  411750:	jmp    0xd465:0xcb2d0e91
  411757:	add    DWORD PTR [ecx],edi
  411759:	push   eax
  41175a:	jmp    0x25d:0x58fe87c8
  411761:	fcomp  DWORD PTR [edi+eax*2+0xcf0d497]
  411768:	push   ebx
  411769:	clc    
  41176a:	les    esp,FWORD PTR [esi]
  41176c:	scas   al,BYTE PTR es:[edi]
  41176d:	add    eax,0x8c29b07c
  411772:	pop    eax
  411773:	push   ds
  411774:	jl     0x4117c5
  411776:	ins    DWORD PTR es:[edi],dx
  411777:	or     DWORD PTR [ecx+0x3b],edx
  41177a:	mov    al,0xd9
  41177c:	sub    esp,edx
  41177e:	gs sbb ecx,0x2a548ae9
  411785:	psubb  mm2,mm2
  411788:	fld    st(1)
  41178a:	std    
  41178b:	bound  eax,QWORD PTR [ebp+0x4ea2894a]
  411791:	nop    ecx
  411794:	in     al,0x9b
  411796:	jle    0x411808
  411798:	jl     0x4117f1
  41179a:	jle    0x4117f6
  41179c:	das    
  41179d:	pop    ds
  41179e:	push   ebx
  41179f:	dec    esi
  4117a0:	repz les ebx,FWORD PTR [ecx]
  4117a3:	jne    0x41181d
  4117a5:	pop    ecx
  4117a6:	pop    esp
  4117a7:	push   es
  4117a8:	mov    dh,0xa3
  4117aa:	in     al,dx
  4117ab:	add    esp,edi
  4117ad:	ret    0xeec4
  4117b0:	cmp    bh,0x95
  4117b3:	fs mov esp,0x2106a028
  4117b9:	pop    edi
  4117ba:	xchg   edi,eax
  4117bb:	xor    eax,0x6a196d0a
  4117c0:	hlt    
  4117c1:	add    DWORD PTR [edi-0x6dc45685],ecx
  4117c7:	xchg   BYTE PTR [eax-0x55],bl
  4117ca:	icebp  
  4117cb:	fist   WORD PTR [edx]
  4117cd:	mov    eax,ds:0xf7d468d9
  4117d2:	inc    edi
  4117d3:	and    BYTE PTR [esi-0x1],dh
  4117d6:	(bad)  
  4117d7:	push   esp
  4117d8:	cmp    eax,0x130c7c86
  4117dd:	sbb    BYTE PTR [edx],bh
  4117df:	sbb    edi,DWORD PTR [edi]
  4117e1:	inc    edi
  4117e2:	pop    esp
  4117e3:	mov    DWORD PTR [ebx],eax
  4117e5:	in     al,0x3c
  4117e7:	push   edx
  4117e8:	inc    edi
  4117e9:	scas   al,BYTE PTR es:[edi]
  4117ea:	mov    ecx,0x6a83fad9
  4117ef:	cli    
  4117f0:	test   eax,0x8d532e38
  4117f5:	adc    eax,0x38c16497
  4117fa:	repz push ecx
  4117fc:	xor    edx,DWORD PTR ds:0xa5baed38
  411802:	xchg   ebx,eax
  411803:	lods   al,BYTE PTR ds:[esi]
  411804:	push   esi
  411805:	or     al,0x2a
  411807:	ins    BYTE PTR es:[edi],dx
  411808:	lahf   
  411809:	shl    DWORD PTR [ecx],cl
  41180b:	xchg   DWORD PTR [esi-0x60f26e09],ebp
  411811:	add    DWORD PTR [ecx-0x33787dd],esi
  411817:	jl     0x411829
  411819:	pushf  
  41181a:	leave  
  41181b:	cwde   
  41181c:	adc    DWORD PTR [ebx+0x7a8e9f3a],ebp
  411822:	mov    al,BYTE PTR [esi-0x4269067d]
  411828:	mov    ds:0x122e7fce,eax
  41182d:	or     cl,ch
  41182f:	mov    esi,0x7879
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	inc    edi
  411851:	inc    eax
  411852:	sub    bh,0xea
  411855:	push   esp
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x4118a2
  41185d:	fst    DWORD PTR [ebx+0x615cb21e]
  411864:	fdivr  DWORD PTR [edi+0x24]
  411867:	sbb    al,0xfc
  411869:	sbb    eax,0xf6ae302d
  41186e:	ins    DWORD PTR es:[edi],dx
  41186f:	mov    esi,0xe3a1fca1
  411874:	jmp    0x43ff37b3
  411879:	aas    
  41187a:	jecxz  0x411807
  41187c:	xchg   esi,eax
  41187d:	jecxz  0x41186f
  41187f:	sub    dh,cl
  411881:	and    cl,al
  411883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411884:	or     eax,0x4406810a
  411889:	xor    DWORD PTR [edi+0x1b988235],edx
  41188f:	mov    edi,0x5043255
  411894:	daa    
  411895:	mov    ss,edi
  411897:	jl     0x4118e5
  411899:	add    al,0xcb
  41189b:	jo     0x4118e0
  41189d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41189e:	mov    BYTE PTR [edi],ch
  4118a0:	sbb    al,0x93
  4118a2:	jo     0x4118f7
  4118a4:	push   esp
  4118a5:	mov    ch,0x48
  4118a7:	pop    esp
  4118a8:	mov    ds:0x7f1ffc49,al
  4118ad:	xchg   ebp,eax
  4118ae:	sbb    al,0x24
  4118b0:	sbb    BYTE PTR [edx+eax*1+0x4b],0x55
  4118b5:	dec    eax
  4118b6:	xor    DWORD PTR [edx-0x36],ebp
  4118b9:	fst    DWORD PTR [esi+edx*4]
  4118bc:	sub    DWORD PTR [ebx+edi*8-0x7055b441],edx
  4118c3:	dec    ebp
  4118c4:	sar    DWORD PTR [esi+ebx*1+0x1c],0xd3
  4118c9:	mov    esi,0xfda1747b
  4118ce:	add    ch,BYTE PTR [ebx-0x8894bbc]
  4118d4:	in     al,0x4f
  4118d6:	das    
  4118d7:	cld    
  4118d8:	(bad)  
  4118da:	test   eax,0x13de14f9
  4118df:	test   DWORD PTR [ebx-0x4a05f842],edx
  4118e5:	(bad)  
  4118e6:	dec    ebp
  4118e8:	sbb    ebx,ebx
  4118ea:	sahf   
  4118eb:	scas   eax,DWORD PTR es:[edi]
  4118ec:	inc    ebx
  4118ed:	ins    DWORD PTR es:[edi],dx
  4118ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118ef:	fisub  WORD PTR [ebx-0x80]
  4118f2:	pop    esp
  4118f3:	aam    0xff
  4118f5:	(bad)  
  4118f6:	es jae 0x4118ee
  4118f9:	pop    edx
  4118fa:	inc    ebx
  4118fb:	retf   
  4118fc:	adc    DWORD PTR [edx+0x6a2dd751],edx
  411902:	ins    BYTE PTR es:[edi],dx
  411903:	scas   al,BYTE PTR es:[edi]
  411904:	push   es
  411905:	test   al,0x27
  411907:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411909:	fstp   TBYTE PTR [edx+0x4c]
  41190c:	jmp    0xd0cba02f
  411911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411912:	pop    eax
  411913:	xchg   ah,cl
  411915:	clc    
  411916:	cmp    dh,BYTE PTR [edx-0x2f03e052]
  41191c:	add    BYTE PTR [eax+0x19],bh
  41191f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411920:	cli    
  411921:	ret    0xad30
  411924:	lock dec ecx
  411926:	repnz add ecx,DWORD PTR [eax-0x37]
  41192a:	shl    ah,cl
  41192c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192d:	nop
  41192e:	xor    dl,bl
  411930:	popf   
  411931:	aas    
  411932:	mov    ebx,0xae770c04
  411937:	popa   
  411938:	adc    eax,0x905a0c30
  41193d:	imul   esi,DWORD PTR [ebx+0x37],0x11def449
  411944:	jae    0x411966
  411946:	mov    ds:0xafccf56f,al
  41194b:	adc    cl,BYTE PTR ds:0x78ba78b
  411951:	nop
  411952:	dec    ebp
  411953:	jl     0x411981
  411955:	fst    DWORD PTR [ecx+esi*2+0x22]
  411959:	repnz push ds
  41195b:	mov    ah,BYTE PTR cs:[esi-0x3b]
  41195f:	outs   dx,BYTE PTR ds:[esi]
  411960:	adc    BYTE PTR [ecx-0x61933d3],bl
  411966:	fisubr WORD PTR [esi]
  411968:	and    BYTE PTR ss:[ebx-0x35],0x52
  41196d:	std    
  41196e:	cli    
  41196f:	lea    eax,[ebx+0x12d456b8]
  411975:	test   al,0x16
  411977:	or     DWORD PTR [edi+ecx*1],ecx
  41197a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41197b:	call   0xa1d78f2a
  411980:	stc    
  411981:	or     edx,DWORD PTR [ecx]
  411983:	jl     0x41193c
  411985:	aas    
  411986:	ds ret 0xa5fc
  41198a:	xor    al,0x3f
  41198c:	or     eax,0x34d4848c
  411991:	ret    0x850b
  411994:	loopne 0x41199b
  411996:	xor    cl,BYTE PTR [edi+0xd]
  411999:	fisttp WORD PTR [edx-0x37bb86c0]
  41199f:	dec    ebx
  4119a0:	sbb    DWORD PTR [ebx-0x57887176],edx
  4119a6:	icebp  
  4119a7:	aaa    
  4119a8:	pushf  
  4119a9:	cdq    
  4119aa:	mov    bh,0x9
  4119ac:	dec    esi
  4119ad:	xchg   ecx,eax
  4119ae:	cmc    
  4119af:	mov    DWORD PTR [eax+0x60],0xa8a1f8fc
  4119b6:	push   ebp
  4119b7:	sar    ch,1
  4119b9:	fistp  QWORD PTR [eax]
  4119bb:	adc    dl,bl
  4119bd:	add    ch,bh
  4119bf:	das    
  4119c0:	out    dx,al
  4119c1:	or     edi,0xffffffbd
  4119c4:	stos   DWORD PTR es:[edi],eax
  4119c5:	mov    al,BYTE PTR [edi+0x2c]
  4119c8:	imul   esp,esi,0x13
  4119cb:	dec    ebx
  4119cc:	(bad)  
  4119cd:	fadd   DWORD PTR [esi-0x59d780f9]
  4119d3:	or     ah,BYTE PTR [eax+eiz*8+0x23]
  4119d7:	bound  eax,QWORD PTR [esi+0x3a904407]
  4119dd:	(bad)  
  4119de:	xchg   edx,eax
  4119df:	jo     0x41198f
  4119e1:	ins    BYTE PTR es:[edi],dx
  4119e2:	pop    edx
  4119e3:	enter  0xda6b,0xd9
  4119e7:	sbb    BYTE PTR [esi+0x5a],bl
  4119ea:	lods   eax,DWORD PTR ds:[esi]
  4119eb:	pop    ss
  4119ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ed:	imul   BYTE PTR [ecx-0x76dbf5cf]
  4119f3:	loope  0x411a38
  4119f5:	pop    es
  4119f6:	test   al,0x9a
  4119f8:	jl     0x4119ba
  4119fa:	mov    eax,0x3727d522
  4119ff:	sar    dh,cl
  411a01:	push   edx
  411a02:	sbb    bh,BYTE PTR [ebx]
  411a04:	addr16 push cs
  411a06:	xchg   bl,al
  411a08:	faddp  st(4),st
  411a0a:	sbb    BYTE PTR [ebx+0x1cc7317d],0x19
  411a11:	push   cs
  411a12:	inc    esp
  411a13:	leave  
  411a14:	mov    ds:0xd7f5a439,al
  411a19:	daa    
  411a1a:	pop    ebp
  411a1b:	sub    al,0x7a
  411a1d:	push   es
  411a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1f:	adc    esp,DWORD PTR [eax-0x19]
  411a22:	sbb    BYTE PTR [ebp+0x7e2fbdb0],bl
  411a28:	leave  
  411a29:	retf   
  411a2a:	ror    DWORD PTR [esi+0x46d1035c],1
  411a30:	sub    ch,cl
  411a32:	or     DWORD PTR [eax+0x78085337],esp
  411a38:	pop    ss
  411a39:	cmp    DWORD PTR [edi-0x37],esp
  411a3c:	inc    edi
  411a3d:	pop    ss
  411a3e:	clc    
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434677
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4345f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4346cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4346cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434637,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4345ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4345eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434653,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4346c3,0x43467b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434713,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4345f3,0x4345e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43470f,0x4346cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43464f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4346b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4346b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4346b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4346b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4346b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4346b7,0x434677
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434637,0x4345e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4346b7
  411b6a:	and    ecx,DWORD PTR ds:0x43468b
  411b70:	mov    DWORD PTR ds:0x4346b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43470f,0x13
  411b83:	cmp    DWORD PTR ds:0x43470f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43470f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434810
  411ba2:	push   0x4347b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43470f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43470f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4345eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4346cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4346cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4346cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4348d5
  411bfa:	push   0x4348e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4346cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4346cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	repz sub eax,0x56d54087
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411cc1
  411c7e:	cwde   
  411c7f:	or     BYTE PTR [edi+0x9],al
  411c82:	lahf   
  411c83:	mov    eax,ds:0x8710143e
  411c88:	pop    edx
  411c89:	popf   
  411c8a:	sahf   
  411c8b:	icebp  
  411c8c:	sar    BYTE PTR [eax],cl
  411c8e:	sub    bh,BYTE PTR [esi]
  411c90:	popa   
  411c91:	pushf  
  411c92:	or     bh,BYTE PTR [edi+0x24]
  411c95:	hlt    
  411c96:	xchg   esp,eax
  411c97:	(bad)  
  411c98:	jno    0x411c51
  411c9a:	daa    
  411c9b:	mov    ecx,0x8c55c028
  411ca0:	adc    ebp,esi
  411ca2:	mov    WORD PTR [ecx+0x37295ad2],ds
  411ca8:	lea    esp,[eax+0x5]
  411cab:	repnz cmp BYTE PTR [edx],al
  411cae:	push   es
  411caf:	cmc    
  411cb0:	imul   ebx,ebx,0xaf0230b3
  411cb6:	(bad)  
  411cb7:	pop    ds
  411cb8:	dec    ebp
  411cb9:	shl    BYTE PTR [ebx],cl
  411cbb:	mov    al,0x65
  411cbd:	in     eax,0x6e
  411cbf:	jmp    0x411d19
  411cc1:	stos   BYTE PTR es:[edi],al
  411cc2:	aad    0xa6
  411cc4:	sti    
  411cc5:	adc    al,ch
  411cc7:	std    
  411cc8:	mov    ds,ebp
  411cca:	aad    0x4b
  411ccc:	push   ecx
  411ccd:	inc    esi
  411cce:	icebp  
  411ccf:	mov    ah,0x37
  411cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd2:	repnz sbb esi,eax
  411cd5:	cmp    DWORD PTR ds:0xb4c4aa90,edi
  411cdb:	repz push edi
  411cdd:	clc    
  411cde:	mov    bl,BYTE PTR [eax]
  411ce0:	push   edx
  411ce1:	jl     0x411d21
  411ce3:	push   ebp
  411ce4:	std    
  411ce5:	mov    BYTE PTR [ebx],ch
  411ce7:	mov    dh,BYTE PTR [ecx-0x12f3c19d]
  411ced:	not    DWORD PTR [ebp-0x40]
  411cf0:	push   esi
  411cf1:	(bad)  
  411cf2:	mov    ecx,0x4fd0ad0d
  411cf7:	dec    edi
  411cf8:	adc    ebx,DWORD PTR [esi+edi*2]
  411cfb:	mov    dh,0x3
  411cfd:	rol    BYTE PTR [edx-0xcd7ccda],cl
  411d03:	add    dl,BYTE PTR [ecx]
  411d05:	cmp    bh,BYTE PTR [ecx]
  411d07:	xchg   cl,al
  411d09:	inc    edi
  411d0a:	popf   
  411d0b:	dec    edi
  411d0c:	popf   
  411d0d:	lahf   
  411d0e:	push   edi
  411d0f:	arpl   WORD PTR [esi],di
  411d11:	and    eax,0xcaddda42
  411d16:	fistp  QWORD PTR [ebx-0x66]
  411d19:	sti    
  411d1a:	jb     0x411cf3
  411d1c:	cdq    
  411d1d:	call   0x89edf965
  411d22:	jno    0x411d0e
  411d24:	cmp    DWORD PTR [esi+0x6f35813d],ebp
  411d2a:	imul   ebp,DWORD PTR [edi-0x74],0x6cba51c3
  411d31:	or     bh,0x83
  411d34:	popf   
  411d35:	mov    bl,0x80
  411d37:	inc    DWORD PTR [ecx-0x26f2b06e]
  411d3d:	dec    edx
  411d3e:	dec    edi
  411d3f:	push   cs
  411d40:	test   al,0x45
  411d42:	sub    eax,0x256b34c
  411d47:	or     ecx,eax
  411d49:	lock push 0xdca8d1f8
  411d4f:	mov    esp,0xc9a4ede0
  411d54:	xchg   dh,dl
  411d56:	pop    ds
  411d57:	push   cs
  411d58:	push   ebx
  411d59:	jne    0x411dd1
  411d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d5c:	ins    DWORD PTR es:[edi],dx
  411d5d:	stc    
  411d5e:	and    BYTE PTR [edi],cl
  411d60:	into   
  411d61:	hlt    
  411d62:	scas   al,BYTE PTR es:[edi]
  411d63:	mov    bl,0xc6
  411d65:	push   edx
  411d66:	call   0x7a08:0x888bea8a
  411d6d:	push   ds
  411d6e:	in     al,0xb
  411d70:	(bad)  
  411d71:	xor    edx,DWORD PTR [edi]
  411d73:	outs   dx,DWORD PTR ds:[esi]
  411d74:	retf   
  411d75:	sub    al,BYTE PTR [ebx+0x2f]
  411d78:	xor    eax,0x6c3cd840
  411d7d:	std    
  411d7e:	arpl   WORD PTR [esi-0x78],sp
  411d81:	jb     0x411d6d
  411d83:	mov    ebp,DWORD PTR [ecx]
  411d85:	je     0x411da1
  411d87:	lahf   
  411d88:	push   edx
  411d89:	sub    al,0xe0
  411d8b:	ficom  DWORD PTR [eax+0x3b7dc237]
  411d91:	jb     0x411d37
  411d93:	(bad)  
  411d94:	test   eax,0x5ee2b755
  411d99:	cmp    eax,0x186b961d
  411d9e:	xchg   edi,eax
  411d9f:	dec    edi
  411da0:	sbb    BYTE PTR [esi+0x31893d4a],ah
  411da6:	repnz xor bh,dh
  411da9:	arpl   WORD PTR [ebx+0x3f],bx
  411dac:	adc    eax,0x64cc0717
  411db1:	inc    ebx
  411db2:	imul   edx,DWORD PTR [edx+0x4813da4],0x57896b2a
  411dbc:	mov    ebx,ebx
  411dbe:	sahf   
  411dbf:	lods   al,BYTE PTR ds:[esi]
  411dc0:	aaa    
  411dc1:	dec    edx
  411dc2:	dec    ebp
  411dc3:	cmp    ah,bl
  411dc5:	push   edx
  411dc6:	add    ch,BYTE PTR [edi+0x7f]
  411dc9:	adc    al,0x79
  411dcb:	pop    esp
  411dcc:	sub    ecx,DWORD PTR ds:0x97a48510
  411dd2:	and    ecx,esp
  411dd4:	sub    al,0xcb
  411dd6:	xchg   BYTE PTR [eax],ch
  411dd8:	out    dx,eax
  411dd9:	ret    0xd777
  411ddc:	sbb    ecx,DWORD PTR [edi+esi*2-0x2]
  411de0:	pop    es
  411de1:	fld    QWORD PTR [edi+0x4312c00d]
  411de7:	ja     0x411e67
  411de9:	dec    edi
  411dea:	pop    ds
  411deb:	shr    BYTE PTR [ebx],0xc0
  411dee:	retf   
  411def:	jge    0x411d7b
  411df1:	xor    al,0x43
  411df3:	addr16 out dx,al
  411df5:	int3   
  411df6:	in     al,0x63
  411df8:	(bad)  
  411df9:	jle    0x411d99
  411dfb:	pop    ecx
  411dfc:	mov    esp,0x39883513
  411e01:	sub    BYTE PTR [ebp+0x69],ah
  411e04:	push   ebp
  411e05:	ss dec ebp
  411e07:	mov    dh,0xb1
  411e09:	dec    ecx
  411e0a:	pushf  
  411e0b:	sbb    eax,0xdff7960d
  411e10:	(bad)  
  411e12:	push   ebx
  411e13:	in     al,0xa0
  411e15:	xor    DWORD PTR [esi],edx
  411e17:	fwait
  411e18:	lahf   
  411e19:	push   edi
  411e1a:	sub    bh,BYTE PTR fs:[eax]
  411e1d:	pop    eax
  411e1e:	xor    eax,0xe572f1e5
  411e23:	out    0xe5,eax
  411e25:	nop
  411e26:	in     al,0x33
  411e28:	ds sub edx,ecx
  411e2b:	adc    al,0x87
  411e2d:	add    cl,BYTE PTR ds:0x1d17d944
  411e33:	(bad)  
  411e34:	inc    ecx
  411e35:	dec    ecx
  411e36:	pop    ecx
  411e38:	and    al,0xbd
  411e3a:	es mov ch,0x1b
  411e3d:	scas   eax,DWORD PTR es:[edi]
  411e3e:	jae    0x411e4a
  411e40:	dec    ebx
  411e41:	mov    edi,0x71882e2f
  411e46:	sar    DWORD PTR [edx+0x34e76b71],1
  411e4c:	dec    esp
  411e4d:	cli    
  411e4e:	sub    BYTE PTR [ebx-0x345b2356],dh
  411e54:	stc    
  411e55:	jecxz  0x411e43
  411e57:	or     al,0x98
  411e59:	aaa    
  411e5a:	xchg   ebp,eax
  411e5b:	pop    esi
  411e5c:	xchg   esi,eax
  411e5d:	jb     0x411e57
  411e5f:	pop    edi
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	sub    al,ah
  411ec1:	arpl   bx,si
  411ec3:	xor    BYTE PTR [eax+0x7e],dl
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f3c
  411ecc:	es jb  0x411eb6
  411ecf:	fdiv   DWORD PTR [eax+0x2f5cc948]
  411ed5:	js     0x411efa
  411ed7:	xor    ebp,DWORD PTR [eax-0x45]
  411eda:	ins    BYTE PTR es:[edi],dx
  411edb:	or     eax,0x99daa490
  411ee0:	xchg   DWORD PTR [edi+edx*1],esi
  411ee3:	ret    0xf12
  411ee6:	mov    WORD PTR [ebx],ss
  411ee8:	pop    ebp
  411ee9:	les    edi,FWORD PTR [edx-0x2f]
  411eec:	mov    bh,0xf5
  411eee:	adc    ebp,DWORD PTR [ebp+0x41b556f2]
  411ef4:	out    dx,al
  411ef5:	xchg   BYTE PTR gs:[edi-0x3f],ah
  411ef9:	xchg   edx,eax
  411efa:	xchg   esp,eax
  411efb:	pop    ss
  411efc:	outs   dx,DWORD PTR ds:[esi]
  411efd:	mov    esp,0x7144cfca
  411f02:	cdq    
  411f03:	fidivr WORD PTR [edx+eax*2]
  411f06:	lahf   
  411f07:	mov    dh,0x43
  411f09:	add    DWORD PTR [esi-0x7d],0xfffffff6
  411f0d:	das    
  411f0e:	jle    0x411f23
  411f10:	push   es
  411f11:	mov    ecx,0xd3177328
  411f16:	xor    eax,DWORD PTR ds:0xe749a703
  411f1c:	add    eax,DWORD PTR [edi-0x48dbe857]
  411f22:	inc    ebp
  411f23:	or     bl,BYTE PTR [ebp+0x566db729]
  411f29:	jnp    0x411eaf
  411f2b:	jge    0x411f58
  411f2d:	mov    bl,BYTE PTR [ecx-0x42]
  411f30:	mov    bl,BYTE PTR ds:[edi+0x6f]
  411f34:	mov    edx,0xe0843886
  411f39:	jmp    0x86f2:0xf7bcd38
  411f40:	hlt    
  411f41:	int3   
  411f42:	sbb    ecx,DWORD PTR [eax+0x5c]
  411f45:	repz xchg ebp,eax
  411f47:	test   ah,bl
  411f49:	int    0x68
  411f4b:	fxch   st(4)
  411f4d:	fs rol dh,cl
  411f50:	lds    edx,FWORD PTR [ebp-0x4a]
  411f53:	dec    si
  411f55:	(bad)  
  411f56:	(bad)  
  411f57:	scas   al,BYTE PTR es:[edi]
  411f58:	lahf   
  411f59:	fcomp  QWORD PTR [ecx]
  411f5b:	fidivr DWORD PTR [ebx]
  411f5d:	cmp    BYTE PTR [esi-0x23],0xb1
  411f61:	push   ebp
  411f62:	popa   
  411f63:	add    esi,esi
  411f65:	setge  BYTE PTR [ebp+0x18]
  411f69:	in     al,0x19
  411f6b:	cmp    al,0xc6
  411f6d:	dec    esp
  411f6e:	push   edi
  411f6f:	stos   DWORD PTR es:[edi],eax
  411f70:	inc    edi
  411f71:	dec    esi
  411f72:	adc    eax,0x7eb04605
  411f77:	jmp    0x7e3666
  411f7c:	pop    ss
  411f7d:	sbb    al,0xb6
  411f7f:	popa   
  411f80:	push   dx
  411f82:	outs   dx,BYTE PTR ds:[esi]
  411f83:	sbb    al,BYTE PTR [eax+edi*8]
  411f86:	mov    ds:0xd83d931,al
  411f8b:	pop    esp
  411f8c:	cmp    DWORD PTR [ecx+0x7f],esp
  411f8f:	mov    ds:0xcfdd4f8b,eax
  411f94:	and    esi,edi
  411f96:	and    DWORD PTR fs:[ebx+0x1bfab9e6],eax
  411f9d:	sub    eax,0xb7e62dca
  411fa2:	jmp    0x1d6551ca
  411fa7:	mov    ebp,0xe1847c81
  411fac:	ds push edi
  411fae:	push   edi
  411faf:	loopne 0x411f49
  411fb1:	scas   al,BYTE PTR es:[edi]
  411fb2:	xchg   edi,eax
  411fb3:	sub    BYTE PTR [edx],dl
  411fb5:	mov    al,0x52
  411fb7:	out    dx,eax
  411fb8:	fmul   DWORD PTR [ecx-0x7f]
  411fbb:	cmc    
  411fbc:	aaa    
  411fbd:	mov    DWORD PTR [edi],0xa9f60438
  411fc3:	sub    eax,0x9e6f6b47
  411fc8:	loopne 0x41203a
  411fca:	sub    ch,BYTE PTR [ebx+0x2f]
  411fcd:	or     BYTE PTR [ebx-0x61],ch
  411fd0:	xor    al,0xc1
  411fd2:	push   ebx
  411fd3:	mov    dl,0xc
  411fd5:	push   ebx
  411fd6:	mov    bh,0x52
  411fd8:	ins    BYTE PTR es:[edi],dx
  411fd9:	ss stc 
  411fdb:	adc    BYTE PTR [ecx-0x2],ah
  411fde:	ror    DWORD PTR ds:0x4f81b362,0xb1
  411fe5:	ins    BYTE PTR es:[edi],dx
  411fe6:	or     BYTE PTR [eax],ch
  411fe8:	push   edx
  411fe9:	cwde   
  411fea:	lods   eax,DWORD PTR ss:[esi]
  411fec:	push   es
  411fed:	loop   0x411fa6
  411fef:	mov    ch,0xa4
  411ff1:	test   BYTE PTR [ebx+edx*2+0x7ecfd511],ah
  411ff8:	dec    esi
  411ff9:	inc    edx
  411ffa:	xchg   ebp,eax
  411ffb:	inc    ecx
  411ffc:	jmp    0x412040
  411ffe:	dec    esp
  411fff:	sbb    eax,0xf04917e1
  412004:	imul   ebp,DWORD PTR [edi],0xffffffc1
  412007:	push   ecx
  412008:	repz sub DWORD PTR ss:[ebp+0x26],ebx
  41200d:	shl    DWORD PTR [eax-0x25],cl
  412010:	in     al,dx
  412011:	mov    DWORD PTR [ebp-0x444fb408],esp
  412017:	sbb    al,0xfa
  412019:	xor    bl,BYTE PTR [edi+edi*1+0x45]
  41201d:	repnz or eax,0x58f631f6
  412023:	push   es
  412024:	sub    eax,0xbac01bb6
  412029:	sbb    al,0x4f
  41202b:	xor    ah,bh
  41202d:	pop    esi
  41202e:	lock add ch,BYTE PTR ss:[edx-0x1a]
  412033:	aaa    
  412034:	out    dx,al
  412035:	dec    edi
  412036:	adc    DWORD PTR [ebx],esi
  412038:	jo     0x412086
  41203a:	lds    ebx,FWORD PTR [edi+0x1a]
  41203d:	rol    BYTE PTR [ebx+0x38d151d7],0xf4
  412044:	(bad)  
  412045:	cld    
  412046:	lea    esp,[esp+esi*8]
  412049:	js     0x412022
  41204b:	std    
  41204c:	xchg   ecx,eax
  41204d:	and    al,0xdb
  41204f:	pop    edi
  412050:	or     eax,0x4998f5d1
  412055:	fwait
  412056:	rcr    DWORD PTR [esi-0x30e55e43],1
  41205c:	dec    edi
  41205d:	push   cs
  41205e:	pop    edx
  41205f:	mov    esi,0x410927eb
  412064:	mov    ecx,db5
  412067:	adc    eax,0xf60836a4
  41206c:	sbb    al,0x45
  41206e:	push   ds
  41206f:	sub    al,0x94
  412071:	call   0x6d91fa1
  412076:	jnp    0x412034
  412078:	(bad)
  41207b:	div    BYTE PTR [ebx]
  41207d:	mov    bh,0x6e
  41207f:	or     eax,0xcbfdc568
  412084:	lock in eax,dx
  412086:	data16 (bad) 
  412088:	mul    BYTE PTR [edx-0x55f4bc84]
  41208e:	daa    
  41208f:	add    cl,BYTE PTR [esi+0x5f]
  412092:	xchg   esp,eax
  412093:	loope  0x412053
  412095:	mov    edi,0xcde8bab6
  41209a:	jns    0x41205a
  41209c:	adc    eax,0x3089e18c
  4120a1:	cmp    ecx,ecx
  4120a3:	mov    ecx,DWORD PTR [ecx-0x20]
  4120a6:	lahf   
  4120a7:	ins    BYTE PTR es:[edi],dx
  4120a8:	clc    
  4120a9:	repnz out dx,al
  4120ab:	push   DWORD PTR [ecx-0x5d]
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	mov    ds:0x1325ec54,al
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x412115
  4120d2:	mov    ch,0x39
  4120d4:	imul   eax,DWORD PTR [esi+edx*8],0x27
  4120d8:	scas   al,BYTE PTR es:[edi]
  4120d9:	(bad)  
  4120da:	in     eax,dx
  4120db:	leave  
  4120dc:	shl    dl,cl
  4120de:	ficomp DWORD PTR [eax]
  4120e0:	cmp    al,0xb4
  4120e2:	mov    ecx,0xfbe65c0c
  4120e7:	push   edi
  4120e8:	inc    ecx
  4120e9:	lods   al,BYTE PTR ds:[esi]
  4120ea:	int3   
  4120eb:	fwait
  4120ec:	inc    eax
  4120ed:	test   DWORD PTR [eax+0x1f506281],0xc5029a47
  4120f7:	pop    ss
  4120f8:	scas   eax,DWORD PTR es:[edi]
  4120f9:	or     ecx,DWORD PTR [ebx-0x440cc3a2]
  4120ff:	cwde   
  412100:	push   ecx
  412101:	aaa    
  412102:	jno    0x412144
  412104:	push   edi
  412105:	ds add dh,dh
  412108:	ins    DWORD PTR es:[edi],dx
  412109:	pop    edx
  41210a:	add    DWORD PTR [ebp-0x5f590f8d],0x57eb07
  412114:	retf   0xb723
  412117:	jmp    0x412187
  412119:	pop    edx
  41211a:	xchg   esi,eax
  41211b:	lods   eax,DWORD PTR ds:[esi]
  41211c:	jle    0x4120f1
  41211e:	and    eax,0x9c8de2f
  412123:	cmp    al,0x3b
  412125:	sbb    ah,cl
  412127:	icebp  
  412128:	and    ch,cl
  41212a:	cmp    al,0xf4
  41212c:	or     al,0xff
  41212e:	and    esi,eax
  412130:	mov    esi,0xc9de5df8
  412135:	retf   0x7727
  412138:	mov    eax,ds:0x903d134f
  41213d:	mov    ecx,0xa4dd9837
  412142:	mov    edx,0x5b23bda7
  412147:	call   0x358f:0xa906e22c
  41214e:	inc    ebx
  41214f:	ficomp DWORD PTR [esi]
  412151:	outs   dx,DWORD PTR ds:[esi]
  412152:	popf   
  412153:	mov    ch,BYTE PTR [eax]
  412155:	push   eax
  412156:	mov    DWORD PTR [edx+ebp*4-0x70654b5f],0xa9c9f94a
  412161:	sub    al,0x6f
  412163:	sti    
  412164:	sbb    eax,0xcab7d690
  412169:	xor    al,0x86
  41216b:	bound  edx,QWORD PTR [ebp+0x29a448f9]
  412171:	pop    es
  412172:	pushf  
  412173:	leave  
  412174:	mov    bl,0x9d
  412176:	inc    edi
  412177:	add    al,0x84
  412179:	(bad)  
  41217a:	xor    al,0x91
  41217c:	jl     0x412140
  41217e:	and    al,0x7e
  412180:	mov    eax,ds:0x90b5b8a3
  412185:	xchg   ebx,eax
  412186:	sbb    esi,DWORD PTR [edx+0x42]
  412189:	fnstsw WORD PTR fs:[eax]
  41218c:	cdq    
  41218d:	jge    0x4121a0
  41218f:	and    BYTE PTR ss:0xd12d6131,dh
  412196:	cdq    
  412197:	mov    eax,0x9eaf7a8d
  41219c:	test   BYTE PTR [esi],0xd4
  41219f:	aaa    
  4121a0:	(bad)  
  4121a1:	sub    cl,cl
  4121a3:	jne    0x41212f
  4121a5:	push   eax
  4121a6:	adc    eax,0x3d08c9a5
  4121ab:	jnp    0x4121d0
  4121ad:	pop    ds
  4121ae:	ret    0x8dc
  4121b1:	add    ebp,DWORD PTR [ecx-0x74bae46a]
  4121b7:	dec    ebx
  4121b8:	jp     0x4121d7
  4121ba:	mov    esi,0x625d96d
  4121bf:	inc    ebp
  4121c0:	xchg   ecx,eax
  4121c1:	sub    ebp,DWORD PTR [edi+0x69d13f7f]
  4121c7:	rol    BYTE PTR [edx],cl
  4121c9:	pop    esp
  4121ca:	or     ah,BYTE PTR [esi-0x2d]
  4121cd:	js     0x4121bb
  4121cf:	or     bh,0xec
  4121d2:	lock jo 0x4121d1
  4121d5:	mov    eax,0xca370d52
  4121da:	imul   edi,eax,0x9d97015a
  4121e0:	mov    bh,0x2c
  4121e2:	xor    BYTE PTR [edi+0x77],0xb7
  4121e6:	sahf   
  4121e7:	pop    eax
  4121e8:	addr16 addr16 pop ebx
  4121eb:	sti    
  4121ec:	sub    al,0x86
  4121ee:	jmp    0xc16f:0xead5378e
  4121f5:	sahf   
  4121f6:	fisttp QWORD PTR [ebx+0x1c]
  4121f9:	adc    al,0xc9
  4121fb:	nop
  4121fc:	push   es
  4121fd:	fcmovb st,st(7)
  4121ff:	xor    ebx,DWORD PTR [esp+esi*2]
  412202:	and    DWORD PTR [ebp-0x6b],ebp
  412205:	cmp    BYTE PTR [ebx+ebx*4-0x108720cf],al
  41220c:	xchg   cl,al
  41220e:	cmp    ebx,0x26afd092
  412214:	mov    DWORD PTR [ecx-0x1269a14c],0xa6f89483
  41221e:	aam    0x9b
  412220:	popa   
  412221:	aad    0xcd
  412223:	dec    ebx
  412224:	outs   dx,BYTE PTR ds:[esi]
  412225:	adc    BYTE PTR [edx-0x5628250c],bh
  41222b:	dec    edx
  41222c:	les    edx,FWORD PTR [edx+edi*1-0x3c]
  412230:	xchg   edx,eax
  412231:	(bad)  
  412232:	in     eax,0xf4
  412234:	(bad)  
  412235:	mov    BYTE PTR [ecx],ch
  412237:	cld    
  412238:	iret   
  412239:	push   esp
  41223a:	pop    ds
  41223b:	ins    DWORD PTR es:[edi],dx
  41223c:	and    al,0x71
  41223e:	jb     0x412200
  412240:	and    BYTE PTR [esi],ch
  412242:	jg     0x41225f
  412244:	push   cs
  412245:	xchg   esp,eax
  412246:	ret    0x6e73
  412249:	inc    edx
  41224a:	mov    ah,0xa
  41224c:	sti    
  41224d:	cmc    
  41224e:	pop    ebp
  41224f:	mov    ecx,0x8b5c40a0
  412254:	cmp    al,0xc3
  412256:	sbb    esp,DWORD PTR [ebp-0x73]
  412259:	cmp    dl,BYTE PTR [ebx-0x47]
  41225c:	jp     0x412290
  41225e:	add    eax,0x14b0bdd9
  412263:	into   
  412264:	and    DWORD PTR [esi+ecx*8-0x71],edx
  412268:	das    
  412269:	adc    DWORD PTR [ebp+0x39990832],ebx
  41226f:	xchg   ebx,eax
  412270:	aad    0xd9
  412272:	data16 jb 0x412250
  412275:	sbb    eax,0x14d6e812
  41227a:	or     edi,DWORD PTR [edi-0x31aa2e00]
  412280:	jo     0x412225
  412282:	push   0xffffffcf
  412284:	mov    esi,0xf4019f3b
  412289:	jmp    0x88fa:0x763db65a
  412290:	xchg   edi,eax
  412291:	mov    ah,0xa1
  412293:	inc    esp
  412294:	fdivr  DWORD PTR [ebp+edi*1-0x9]
  412298:	adc    eax,ebp
  41229a:	xchg   ebx,eax
  41229b:	je     0x4122a9
  41229d:	inc    esp
  41229e:	and    bh,BYTE PTR [ebp-0x7f791bcf]
  4122a4:	nop
  4122a5:	mov    esi,0xfe211ab9
  4122aa:	in     al,0x97
  4122ac:	and    edx,DWORD PTR [ebx+edi*4]
  4122af:	stos   BYTE PTR es:[edi],al
  4122b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b1:	shl    BYTE PTR [ecx+edi*1],0x89
  4122b5:	inc    ebp
  4122b6:	or     al,0x8b
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x5613ec13],ch
  4122ef:	je     0x4122ad
  4122f1:	jle    0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x4122e5
  4122fa:	popf   
  4122fb:	scas   eax,DWORD PTR es:[edi]
  4122fc:	cwde   
  4122fd:	sar    BYTE PTR [edx+edi*4-0x44dabc95],cl
  412304:	cmp    BYTE PTR [ebx+edx*4],bl
  412307:	aaa    
  412308:	icebp  
  412309:	movntq (bad),mm7
  41230a:	out    0xfb,eax
  41230c:	(bad)
  412310:	inc    ebp
  412311:	mov    al,ds:0x86460c0b
  412316:	mov    ds:0x62419251,al
  41231b:	push   edx
  41231c:	ins    DWORD PTR es:[edi],dx
  41231d:	add    al,0x6f
  41231f:	add    eax,0x75347a26
  412324:	ins    BYTE PTR es:[edi],dx
  412325:	dec    ecx
  412326:	popf   
  412327:	fisub  DWORD PTR [ecx]
  412329:	in     al,dx
  41232a:	out    dx,eax
  41232b:	cmp    ecx,edi
  41232d:	int3   
  41232e:	xchg   ebx,eax
  41232f:	shl    ch,cl
  412331:	and    al,0xfc
  412333:	and    al,0xeb
  412335:	scas   eax,DWORD PTR es:[edi]
  412336:	out    0x39,eax
  412338:	dec    eax
  412339:	push   edi
  41233a:	(bad)  
  41233b:	std    
  41233c:	mov    ah,0x6c
  41233e:	or     edx,esp
  412340:	xchg   esp,eax
  412341:	push   ecx
  412342:	iret   
  412343:	or     al,0xdf
  412345:	sbb    dh,BYTE PTR [eax-0x4508e03a]
  41234b:	fs inc esp
  41234d:	mov    al,0x72
  41234f:	dec    esp
  412350:	lds    esp,FWORD PTR [eax-0x56]
  412353:	pushf  
  412354:	or     esp,eax
  412356:	xchg   ebx,eax
  412357:	push   0xc679d684
  41235c:	sub    BYTE PTR [esi],dh
  41235e:	shr    DWORD PTR [ebx],1
  412360:	mov    esi,0x2156d040
  412365:	leave  
  412366:	outs   dx,DWORD PTR ds:[esi]
  412367:	pop    ds
  412368:	int3   
  412369:	arpl   WORD PTR [edx+0x7d],bx
  41236c:	lock sub DWORD PTR [esi-0x10b5ee72],edx
  412373:	ins    BYTE PTR es:[edi],dx
  412374:	xchg   ebx,eax
  412375:	adc    al,0x5f
  412377:	scas   eax,DWORD PTR es:[edi]
  412378:	mov    WORD PTR [ebx-0x4a],cs
  41237b:	add    bh,BYTE PTR [edx]
  41237d:	addr16 jae 0x41235a
  412380:	aas    
  412381:	pop    eax
  412382:	adc    dl,bl
  412384:	xor    ebp,esi
  412386:	and    eax,0xcd543030
  41238b:	stc    
  41238c:	xchg   edx,eax
  41238d:	pop    ss
  41238e:	sbb    bh,0xc
  412391:	imul   ebp,edi,0x5d5b903d
  412397:	or     ch,dl
  412399:	sbb    bh,dl
  41239b:	sbb    DWORD PTR [ebx+0x4c],ecx
  41239e:	retf   
  41239f:	ins    DWORD PTR es:[edi],dx
  4123a0:	push   edx
  4123a1:	xchg   ebp,eax
  4123a2:	sub    al,0xc8
  4123a4:	mov    ecx,0xf7bd5dd9
  4123a9:	sub    al,0xc4
  4123ab:	ror    DWORD PTR [eax],1
  4123ad:	jne    0x4123e7
  4123af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b0:	push   edx
  4123b1:	ficom  WORD PTR [ebp+0x74d6c2ba]
  4123b7:	sbb    bh,ch
  4123b9:	nop    esp
  4123bc:	bound  edi,QWORD PTR [edx+ebp*4+0x2a]
  4123c0:	mov    ds:0x7717fe93,eax
  4123c5:	xor    eax,0xfdaa7cfe
  4123ca:	or     DWORD PTR [ebp-0x58],edx
  4123cd:	enter  0x3bfb,0x61
  4123d1:	dec    esp
  4123d2:	std    
  4123d3:	or     BYTE PTR [eax-0x1fcce4dd],al
  4123d9:	stos   DWORD PTR es:[edi],eax
  4123da:	and    BYTE PTR [esi],ah
  4123dc:	test   DWORD PTR [ebp-0x2],edi
  4123df:	mov    bl,0x51
  4123e1:	inc    ebp
  4123e2:	xor    al,0x88
  4123e4:	or     al,0xd7
  4123e6:	inc    esi
  4123e7:	das    
  4123e8:	mov    ecx,0x472f7b4f
  4123ed:	(bad)  
  4123ee:	mov    ds:0x7739960,eax
  4123f3:	(bad)  
  4123f4:	jmp    0x41242f
  4123f6:	enter  0x54fb,0x11
  4123fa:	pop    esp
  4123fb:	into   
  4123fc:	mov    ch,0xc
  4123fe:	xchg   ecx,ebx
  412400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412401:	sbb    eax,esp
  412403:	(bad)  
  412404:	adc    al,0xe1
  412406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412407:	loop   0x4123d6
  412409:	arpl   WORD PTR [ecx],dx
  41240b:	or     esp,DWORD PTR [ecx-0x3e]
  41240e:	ins    DWORD PTR es:[edi],dx
  41240f:	dec    ebx
  412410:	call   DWORD PTR [eax-0x22]
  412413:	and    DWORD PTR [esi-0x13],edi
  412416:	xor    eax,0x44ef1679
  41241b:	sbb    ebx,eax
  41241d:	xchg   DWORD PTR [ebp-0x4e04ce3],ebp
  412423:	(bad)  
  412424:	fcom   QWORD PTR [ebx+0x7cd4a801]
  41242a:	sub    bl,BYTE PTR [edi]
  41242c:	pop    esi
  41242d:	cmp    BYTE PTR [ecx-0x4a],bh
  412430:	outs   dx,DWORD PTR ds:[esi]
  412431:	and    BYTE PTR [ebp+0x1b],0xf9
  412435:	or     BYTE PTR [esi],bh
  412437:	or     ebp,DWORD PTR [ecx]
  412439:	in     al,dx
  41243a:	or     BYTE PTR [ecx-0x16],al
  41243d:	stos   DWORD PTR es:[edi],eax
  41243e:	outs   dx,DWORD PTR ds:[esi]
  41243f:	add    bh,BYTE PTR [esi+0xc]
  412442:	adc    esi,esi
  412444:	push   cs
  412445:	(bad)  
  412446:	and    eax,0x17f6b81b
  41244b:	sti    
  41244c:	sbb    al,0x72
  41244e:	push   ebp
  41244f:	pop    ebp
  412450:	inc    ebp
  412451:	pop    edx
  412452:	cld    
  412453:	pop    eax
  412454:	imul   BYTE PTR [esi+ebp*1-0x7b]
  412458:	test   eax,0xe79496a4
  41245d:	push   0x67
  41245f:	sub    ah,BYTE PTR [eax+ecx*8]
  412462:	lahf   
  412463:	xchg   edi,eax
  412464:	push   eax
  412465:	sub    al,0xa6
  412467:	sub    bl,BYTE PTR [ebx-0x32cabf8e]
  41246d:	sahf   
  41246e:	lock inc edx
  412470:	gs ins BYTE PTR es:[edi],dx
  412472:	pop    ax
  412474:	mov    ebx,0x98c63136
  412479:	lods   al,BYTE PTR ds:[esi]
  41247a:	push   0x15
  41247c:	leave  
  41247d:	popa   
  41247e:	adc    ah,cl
  412480:	pushf  
  412481:	aad    0x1c
  412483:	call   0xcded:0xa626bace
  41248a:	arpl   WORD PTR [eax+eiz*1+0x5fd7283d],bp
  412491:	into   
  412492:	push   ss
  412493:	ret    
  412494:	scas   al,BYTE PTR es:[edi]
  412495:	fadd   DWORD PTR [ebp+edi*2+0x6c76a54d]
  41249c:	ja     0x412443
  41249e:	or     DWORD PTR ds:0x8f7c0d70,ebx
  4124a4:	push   es
  4124a5:	pop    ebx
  4124a6:	cwde   
  4124a7:	sar    BYTE PTR [esi-0x64],cl
  4124aa:	and    al,BYTE PTR [edx]
  4124ac:	xor    bl,dh
  4124ae:	std    
  4124af:	ret    
  4124b0:	jl     0x4124f4
  4124b2:	jae    0x412503
  4124b4:	mov    ds:0x859a6889,al
  4124b9:	xor    DWORD PTR [ebp-0x44cebeb4],0xc42f178c
  4124c3:	sub    BYTE PTR ds:0xdbb1ff12,bl
  4124c9:	call   0x29b4:0x6380f658
  4124d0:	push   ss
  4124d1:	lods   al,BYTE PTR ds:[esi]
  4124d2:	in     al,0xf7
  4124d4:	hlt    
  4124d5:	jg     0x4124f2
  4124d7:	daa    
  4124d8:	and    al,0x1a
  4124da:	scas   eax,DWORD PTR es:[edi]
  4124db:	cwde   
  4124dc:	add    eax,DWORD PTR [ebp+0x8]
  4124df:	mov    DWORD PTR [ebp-0x10],eax
  4124e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	cmc    
  41259f:	xlat   BYTE PTR ds:[ebx]
  4125a0:	dec    ecx
  4125a1:	sbb    DWORD PTR [ecx+0x5d],0x7f597e7e
  4125a8:	jle    0x412628
  4125aa:	mov    ah,0xcd
  4125ac:	repnz cmp DWORD PTR cs:[edx-0x23cd77de],eax
  4125b4:	inc    esi
  4125b5:	aaa    
  4125b6:	mov    al,ds:0x5cc53a55
  4125bb:	mov    esi,0xa4a221bd
  4125c0:	sar    BYTE PTR [edi+0x37],1
  4125c3:	in     al,dx
  4125c4:	ret    
  4125c5:	test   BYTE PTR [esi],bh
  4125c7:	xor    eax,0xc3ea795a
  4125cc:	xchg   DWORD PTR [esi+0x15],esp
  4125cf:	popa   
  4125d0:	and    al,0xba
  4125d2:	imul   ebx,DWORD PTR [edi+0x7a],0xfffffff7
  4125d6:	pusha  
  4125d7:	pop    es
  4125d8:	inc    ebp
  4125d9:	shl    DWORD PTR [ebx-0x54a9a03],0xe9
  4125e0:	xor    eax,0xc1babe95
  4125e5:	jle    0x41258c
  4125e7:	std    
  4125e8:	dec    eax
  4125e9:	mov    esp,0x6b8b1959
  4125ee:	jne    0x41260f
  4125f0:	dec    ebx
  4125f1:	rol    BYTE PTR [edx+0x61],0xd2
  4125f5:	push   esi
  4125f6:	cld    
  4125f7:	pop    ebp
  4125f8:	inc    ebx
  4125f9:	xor    ch,dh
  4125fb:	aam    0x19
  4125fd:	xor    al,BYTE PTR [ecx-0x27]
  412600:	nop
  412601:	jo     0x4125b4
  412603:	(bad)
  412606:	arpl   WORD PTR [ebx-0x74],ax
  412609:	in     eax,dx
  41260a:	gs ins BYTE PTR es:[edi],dx
  41260c:	xchg   DWORD PTR [ecx+0x6b71420f],edx
  412612:	test   al,0x44
  412614:	push   ecx
  412615:	pop    esp
  412616:	jae    0x4125d2
  412618:	stos   BYTE PTR es:[edi],al
  412619:	jl     0x41264e
  41261b:	xchg   edx,eax
  41261c:	jb     0x4125db
  41261e:	test   ecx,edx
  412620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412621:	ret    
  412622:	push   edi
  412623:	mov    bh,0x86
  412625:	(bad)  
  412626:	into   
  412627:	or     ebx,DWORD PTR [esi+0x4f39dd50]
  41262d:	jp     0x4125c6
  41262f:	jmp    0xb13d:0xa2a4f380
  412636:	pop    es
  412637:	icebp  
  412638:	int    0xea
  41263a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41263b:	jnp    0x4125c4
  41263d:	repnz loop 0x412661
  412640:	das    
  412641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412642:	sbb    DWORD PTR [ebp+0x7faab2e8],esp
  412648:	fstp   TBYTE PTR [ebx-0x740fd4dd]
  41264e:	mov    cl,0x2e
  412650:	and    BYTE PTR [edx+0x69ab989d],0x27
  412657:	add    cl,BYTE PTR [ecx]
  412659:	das    
  41265a:	call   0x590f3aec
  41265f:	pop    ecx
  412660:	adc    BYTE PTR [edx-0x367dfe2a],bl
  412666:	cwde   
  412667:	adc    bl,cl
  412669:	scas   eax,DWORD PTR es:[edi]
  41266a:	jae    0x412674
  41266c:	add    ebx,DWORD PTR [ebx]
  41266e:	push   ss
  41266f:	xchg   esp,eax
  412670:	cvttps2pi mm2,QWORD PTR [edi+0x8]
  412674:	jae    0x41269a
  412676:	jae    0x41262c
  412678:	lea    esp,ds:[ebp+ecx*8+0x5e1d1580]
  412680:	mov    edi,0x6ac34341
  412685:	xchg   ecx,eax
  412686:	mov    dl,0x82
  412688:	hlt    
  412689:	stos   DWORD PTR es:[edi],eax
  41268a:	mov    gs,WORD PTR [ebx+ebx*8+0x7e]
  41268e:	pop    ebx
  41268f:	aam    0x98
  412691:	stos   BYTE PTR es:[edi],al
  412692:	in     al,dx
  412693:	inc    ecx
  412694:	sti    
  412695:	popf   
  412696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412697:	adc    esp,edi
  412699:	es add al,0x53
  41269c:	sub    ebx,eax
  41269e:	leave  
  41269f:	dec    ebp
  4126a0:	xchg   ecx,eax
  4126a1:	mov    ds:0xa753a491,eax
  4126a6:	into   
  4126a7:	inc    ecx
  4126a8:	push   ds
  4126a9:	pop    esp
  4126aa:	out    0x7f,eax
  4126ac:	mov    edx,0x56d5c3e1
  4126b1:	jge    0x4126ed
  4126b3:	mov    edi,DWORD PTR [eax+0x51]
  4126b6:	mov    BYTE PTR [ecx+edi*2+0x59],ch
  4126ba:	js     0x4126f1
  4126bc:	xchg   ebx,eax
  4126bd:	jo     0x4126c3
  4126bf:	mov    ebx,0xf327e247
  4126c4:	mov    ch,0xb7
  4126c6:	clc    
  4126c7:	nop
  4126c8:	fwait
  4126c9:	and    ebx,DWORD PTR [ebp+0x30]
  4126cc:	pop    esi
  4126cd:	xchg   edx,eax
  4126ce:	out    dx,al
  4126cf:	push   esi
  4126d0:	jae    0x412731
  4126d2:	sub    esi,ebx
  4126d4:	mov    dl,0xf
  4126d6:	(bad)  
  4126d7:	xor    cl,dl
  4126d9:	jecxz  0x412714
  4126db:	mov    cl,0x35
  4126dd:	push   eax
  4126de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126df:	(bad)  
  4126e0:	add    al,0xd0
  4126e2:	inc    ebx
  4126e3:	setae  BYTE PTR [edi]
  4126e6:	in     eax,dx
  4126e7:	out    0x8d,eax
  4126e9:	inc    eax
  4126ea:	sar    BYTE PTR [esi+0x686d4a1c],0xc
  4126f1:	in     eax,dx
  4126f2:	cmp    BYTE PTR gs:[ebp+0x14357806],cl
  4126f9:	sub    eax,0xa185cee1
  4126fe:	jecxz  0x412745
  412700:	xchg   edx,eax
  412701:	pop    edx
  412702:	inc    edi
  412703:	mov    ebx,0x9e841af
  412708:	in     al,0x3a
  41270a:	scas   al,BYTE PTR es:[edi]
  41270b:	sub    BYTE PTR [eax+0x40f52cab],bl
  412711:	adc    al,0x95
  412713:	ss push ecx
  412715:	xor    bh,bl
  412717:	retf   0xca28
  41271a:	and    al,0x5f
  41271c:	xlat   BYTE PTR ds:[ebx]
  41271d:	mov    ecx,DWORD PTR [ebp+0x49]
  412720:	retf   
  412721:	ret    0x86e8
  412724:	push   ecx
  412725:	mov    esi,0x160a25e1
  41272a:	jno    0x412713
  41272c:	pop    es
  41272d:	pop    ecx
  41272e:	add    edx,ebp
  412730:	mov    ebp,0xea32b000
  412735:	test   al,0xcd
  412737:	sbb    BYTE PTR [ecx],ah
  412739:	pop    eax
  41273a:	mov    esi,0xf14cb744
  41273f:	repnz push esp
  412741:	outs   dx,DWORD PTR ds:[esi]
  412742:	jne    0x412758
  412744:	loop   0x41278b
  412746:	(bad)  
  412747:	mov    ebx,0x769da67d
  41274c:	mov    ds:0xa58c4473,eax
  412751:	push   ebx
  412752:	and    eax,0xdda8e9bb
  412757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412758:	inc    eax
  412759:	sbb    dh,BYTE PTR [ebp+0x784194a3]
  41275f:	ret    
  412760:	call   0x1f10:0xdbf20251
  412767:	push   edi
  412768:	push   edx
  412769:	mov    eax,ds:0x17060242
  41276e:	pop    esp
  41276f:	outs   dx,DWORD PTR ds:[esi]
  412770:	pop    ebp
  412771:	add    edx,DWORD PTR [edi-0x66]
  412774:	xchg   ebp,eax
  412775:	sbb    dl,BYTE PTR [edi+0x59]
  412778:	out    0x8,al
  41277a:	pop    es
  41277b:	pop    ds
  41277c:	repnz or esi,edx
  41277f:	add    DWORD PTR [esi],ebp
  412781:	sub    al,0xc
  412783:	or     ebx,DWORD PTR [ecx-0x4bbdb46e]
  412789:	mov    bh,0x91
  41278b:	dec    ebp
  41278c:	sub    eax,0xfbe9c133
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	std    
  4127a1:	sahf   
  4127a2:	out    0x1e,al
  4127a4:	inc    esp
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x4127a7
  4127ad:	push   edx
  4127ae:	pusha  
  4127af:	call   0x6b488b60
  4127b4:	shr    BYTE PTR [eax-0x2d],1
  4127b7:	ds xor ah,bl
  4127ba:	std    
  4127bb:	mov    gs,WORD PTR [ebx+0x1241162b]
  4127c1:	inc    di
  4127c3:	or     DWORD PTR [ecx+0xc20c7c3],edx
  4127c9:	inc    ecx
  4127ca:	in     al,dx
  4127cb:	and    DWORD PTR [edi-0x19480816],edi
  4127d1:	add    ah,BYTE PTR [edi-0x3ce6634b]
  4127d7:	cld    
  4127d8:	adc    al,0xbd
  4127da:	sar    DWORD PTR [ebx-0x75],0x43
  4127de:	adc    al,BYTE PTR [ecx+0xa439b00]
  4127e4:	scas   eax,DWORD PTR es:[edi]
  4127e5:	mov    ah,0x65
  4127e7:	dec    ecx
  4127e8:	xor    edx,DWORD PTR [edi-0x76ddf477]
  4127ee:	stos   DWORD PTR es:[edi],eax
  4127ef:	and    bh,BYTE PTR [ebp-0x4b]
  4127f2:	jne    0x412789
  4127f4:	(bad)  [edi]
  4127f6:	pop    eax
  4127f7:	lods   al,BYTE PTR ds:[esi]
  4127f8:	icebp  
  4127f9:	(bad)  
  4127fa:	das    
  4127fb:	or     edi,ebx
  4127fd:	icebp  
  4127fe:	int    0x48
  412800:	dec    eax
  412801:	xchg   BYTE PTR [edi-0x20],bh
  412804:	lahf   
  412805:	out    0x7f,eax
  412807:	addr16 lock xchg esi,eax
  41280a:	add    bl,dh
  41280c:	or     edi,esp
  41280e:	retf   0x783e
  412811:	(bad)  
  412812:	pop    ss
  412813:	xchg   edx,eax
  412814:	shl    BYTE PTR [esi],cl
  412816:	mov    esp,0x862846c2
  41281b:	add    ah,BYTE PTR [ecx+0x7a]
  41281e:	out    dx,eax
  41281f:	lods   eax,DWORD PTR ds:[esi]
  412820:	imul   eax,DWORD PTR [edx-0x7c],0x5d
  412824:	frstor [edi]
  412826:	jg     0x41287a
  412828:	inc    eax
  412829:	push   ebp
  41282a:	push   0x32
  41282c:	xchg   ebx,eax
  41282d:	stos   BYTE PTR es:[edi],al
  41282e:	icebp  
  41282f:	retf   
  412830:	push   ebp
  412831:	enter  0xd097,0xf8
  412835:	add    DWORD PTR [eax],eax
  412837:	mov    cl,0x6
  412839:	cmc    
  41283a:	add    al,0x27
  41283c:	scas   eax,DWORD PTR es:[edi]
  41283d:	fst    QWORD PTR [edi]
  41283f:	(bad)  
  412840:	int3   
  412841:	shl    BYTE PTR [eax+0x3],cl
  412844:	stos   BYTE PTR es:[edi],al
  412845:	xor    edi,DWORD PTR [edi]
  412847:	fnstsw WORD PTR [ecx-0x7d]
  41284a:	fmul   QWORD PTR [ebp+0x65a218b0]
  412850:	adc    edx,eax
  412852:	int3   
  412853:	push   es
  412854:	scas   eax,DWORD PTR es:[edi]
  412855:	mov    ch,0x89
  412857:	lea    ebx,[edi-0x3e08ae81]
  41285d:	mov    ah,0x1a
  41285f:	fnstenv ds:0x85cbffe2
  412865:	sahf   
  412866:	sub    dl,bh
  412868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412869:	(bad)
  41286c:	jbe    0x412884
  41286e:	je     0x41288a
  412870:	jb     0x4128a0
  412872:	mov    dh,0xe1
  412874:	mov    bl,0x15
  412876:	adc    eax,0xde69c8cb
  41287b:	xchg   ecx,eax
  41287c:	test   al,0x2f
  41287e:	int3   
  41287f:	cmp    eax,0x7f9f6ab
  412884:	mov    edi,0x43d84a8e
  412889:	add    ecx,DWORD PTR es:0x3a84049a
  412890:	lods   al,BYTE PTR ds:[esi]
  412891:	sar    DWORD PTR [ebx+0x2b],1
  412894:	xchg   edx,eax
  412895:	fnsave [ebp-0x1aa260bc]
  41289b:	cwde   
  41289c:	cmp    al,dh
  41289e:	push   eax
  41289f:	(bad)  
  4128a1:	sub    DWORD PTR [edi],esp
  4128a3:	enter  0x437b,0xab
  4128a7:	(bad)
  4128aa:	cmp    BYTE PTR [edx+0x32daa4ee],cl
  4128b0:	not    ah
  4128b2:	inc    eax
  4128b3:	inc    eax
  4128b4:	mov    ds:0xe9432c5a,eax
  4128b9:	dec    ecx
  4128ba:	mov    eax,ds:0x49bc1689
  4128bf:	outs   dx,DWORD PTR ds:[esi]
  4128c0:	xor    edx,DWORD PTR [eax]
  4128c2:	mov    al,ds:0x8bdfd6c9
  4128c7:	popa   
  4128c8:	mov    ecx,0xdb76692d
  4128cd:	jecxz  0x4128f6
  4128cf:	xchg   ebp,eax
  4128d0:	popa   
  4128d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128d2:	fwait
  4128d3:	inc    edx
  4128d4:	pop    es
  4128d5:	fcom   st(5)
  4128d7:	imul   esp,DWORD PTR [ebp+0x7afa6d47],0x42
  4128de:	cmp    BYTE PTR [ebp+0x20dd7c44],ch
  4128e4:	cdq    
  4128e5:	sbb    edx,eax
  4128e7:	sbb    BYTE PTR [ebp+0x373885cb],ch
  4128ed:	retf   0xadaa
  4128f0:	xchg   ebx,eax
  4128f1:	pop    edi
  4128f2:	xor    DWORD PTR [ebp-0x48b93fd],edi
  4128f8:	push   0x4e
  4128fa:	adc    edi,DWORD PTR [esi-0x1e]
  4128fd:	or     al,0x30
  4128ff:	mov    edi,DWORD PTR [ecx+ecx*8]
  412902:	mov    al,0x3f
  412904:	push   0xfffffff0
  412906:	outs   dx,BYTE PTR ds:[esi]
  412907:	cmp    ebp,ecx
  412909:	adc    al,0xe5
  41290b:	push   cs
  41290c:	mov    eax,ds:0x85d396a0
  412911:	pop    edi
  412912:	ins    DWORD PTR es:[edi],dx
  412913:	in     eax,dx
  412914:	inc    ebp
  412915:	and    ebp,DWORD PTR [edx]
  412917:	add    BYTE PTR [ebp+0x20],cl
  41291a:	leave  
  41291b:	mov    al,0x3f
  41291d:	jno    0x4128f0
  41291f:	in     al,dx
  412920:	mov    al,ds:0xb3b0d56b
  412925:	pop    ss
  412926:	mov    ss,WORD PTR [esi+0x345ad5bd]
  41292c:	lods   eax,DWORD PTR ds:[esi]
  41292d:	outs   dx,DWORD PTR ds:[esi]
  41292e:	idiv   BYTE PTR [ebp+0x2d84ec8]
  412934:	cdq    
  412935:	lock cmp BYTE PTR [esi+0xf],ah
  412939:	sbb    ah,ch
  41293b:	es add al,0xd9
  41293e:	or     eax,0x5d5b0360
  412943:	into   
  412944:	or     eax,0x989b820d
  412949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41294a:	jg     0x412926
  41294c:	jno    0x4128e2
  41294e:	jns    0x4128d8
  412950:	lea    esi,[ebx]
  412952:	(bad)  
  412953:	jae    0x4128ed
  412955:	es adc ecx,ecx
  412958:	imul   ebp,DWORD PTR [esi],0xffffffe4
  41295b:	dec    edi
  41295c:	dec    esi
  41295d:	aam    0x2d
  41295f:	xor    ebx,esi
  412961:	mov    WORD PTR [ebp-0x45],ss
  412964:	pop    ebx
  412965:	sub    DWORD PTR [ebx+0x40],edi
  412968:	fldz   
  41296a:	fist   DWORD PTR [esi+edi*1-0x21f4550a]
  412971:	cmc    
  412972:	jno    0x412936
  412974:	in     al,dx
  412975:	mov    ds:0xa8472dd1,al
  41297a:	iret   
  41297b:	test   BYTE PTR [eax+0x6955b0e1],ch
  412981:	mov    al,BYTE PTR [eax-0x1566898]
  412987:	sbb    ecx,DWORD PTR [ecx+0x278f37a1]
  41298d:	xor    DWORD PTR [ebx+0x3],0x2af0fc6
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fcom   st(6)
  4129ef:	and    DWORD PTR [ebx],ecx
  4129f1:	mov    BYTE PTR [edi+0x597e7e59],ah
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a34
  4129fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129fc:	shl    cl,0x3b
  4129ff:	pop    ebp
  412a00:	dec    edx
  412a01:	jmp    0x412a4b
  412a03:	imul   ebp,DWORD PTR [esi+0x3e29ae5c],0x6e7f0c78
  412a0d:	hlt    
  412a0e:	imul   edi,DWORD PTR [edi],0xf701f1d3
  412a14:	sub    eax,0xfaf2b5e9
  412a19:	push   cs
  412a1a:	sbb    al,0xa5
  412a1c:	cmp    DWORD PTR [edx],esp
  412a1e:	xor    ah,BYTE PTR [ecx+0x6b]
  412a21:	jl     0x412a35
  412a23:	pop    ebp
  412a24:	push   cs
  412a25:	out    dx,eax
  412a26:	mov    BYTE PTR [eax],ah
  412a28:	add    DWORD PTR [esi+0xd],0x77
  412a2c:	jns    0x412a3c
  412a2e:	and    bh,BYTE PTR [esi]
  412a30:	in     al,dx
  412a31:	pop    ecx
  412a32:	je     0x412a02
  412a34:	jg     0x4129d6
  412a36:	add    DWORD PTR [edx+0x59633b72],ebx
  412a3c:	xchg   edx,eax
  412a3d:	enter  0xa556,0x68
  412a41:	call   0x36ce70ff
  412a46:	in     eax,0xa9
  412a48:	pop    eax
  412a49:	repz push edx
  412a4b:	loope  0x412ab0
  412a4d:	das    
  412a4e:	jnp    0x412a97
  412a50:	mov    esp,0x5128309f
  412a55:	jo     0x412a45
  412a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a58:	dec    esp
  412a59:	jge    0x412a7d
  412a5b:	out    0x33,al
  412a5d:	pop    edx
  412a5e:	imul   edi,DWORD PTR fs:0x76803f4,0x3a
  412a66:	arpl   WORD PTR [edi],dx
  412a68:	dec    ecx
  412a69:	sbb    eax,0x41b7c803
  412a6e:	stos   BYTE PTR es:[edi],al
  412a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a70:	test   DWORD PTR [ecx-0x2f100a7c],0x55130372
  412a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a7b:	in     eax,0xf7
  412a7d:	jle    0x412af1
  412a7f:	xchg   DWORD PTR [eax+0x7b9f153c],esi
  412a85:	js     0x412a63
  412a87:	dec    edi
  412a88:	push   edi
  412a89:	inc    edi
  412a8a:	push   ds
  412a8b:	push   edi
  412a8c:	test   ch,al
  412a8e:	fcmove st,st(7)
  412a90:	pop    es
  412a91:	pop    ebx
  412a92:	stos   BYTE PTR es:[edi],al
  412a93:	sbb    BYTE PTR [ecx],bl
  412a95:	cmp    esp,DWORD PTR [esp+ecx*8-0x613b888d]
  412a9c:	gs pop esp
  412a9e:	lds    edi,FWORD PTR [ebx-0xd]
  412aa1:	adc    dh,BYTE PTR [ecx-0x7c4b2f08]
  412aa7:	xchg   ecx,eax
  412aa8:	fwait
  412aa9:	sahf   
  412aaa:	fadd   st(3),st
  412aac:	push   0xb5f3adc4
  412ab1:	jle    0x412b0e
  412ab3:	pop    ebp
  412ab4:	and    edx,DWORD PTR [esi]
  412ab6:	mov    ds:0xa9e13db5,al
  412abb:	mov    DWORD PTR [esi+0x6c],eax
  412abe:	jmp    0x2f21:0xa03f97ed
  412ac5:	push   0x1
  412ac7:	inc    DWORD PTR [edi]
  412ac9:	cmp    DWORD PTR [ecx-0x34dbd446],edx
  412acf:	fucomip st,st(3)
  412ad1:	xchg   DWORD PTR [ecx],eax
  412ad3:	shl    DWORD PTR [ecx],cl
  412ad5:	in     eax,dx
  412ad6:	and    dh,dl
  412ad8:	cmp    eax,0x388e0a93
  412add:	in     al,0xef
  412adf:	mov    ds:0xd49687c0,al
  412ae4:	mov    edi,0xc46844f5
  412ae9:	or     ebp,DWORD PTR [esi+0x595237bf]
  412aef:	pop    eax
  412af0:	dec    ebx
  412af1:	cmp    DWORD PTR [edi+eiz*2+0x3c397bf8],esp
  412af8:	enter  0xa164,0xce
  412afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412afd:	mov    bl,dh
  412aff:	cdq    
  412b00:	(bad)  
  412b01:	sti    
  412b02:	sti    
  412b03:	jns    0x412ab0
  412b05:	sub    dh,0xe8
  412b08:	pop    ds
  412b09:	fmulp  st(7),st
  412b0b:	pop    es
  412b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b0d:	stos   DWORD PTR es:[edi],eax
  412b0e:	mov    bl,0x1d
  412b10:	adc    BYTE PTR [ebx],0x7f
  412b13:	pop    esi
  412b14:	es jbe 0x412ac3
  412b17:	mov    edx,?
  412b19:	jns    0x412b56
  412b1b:	pushf  
  412b1c:	aam    0x4b
  412b1e:	pop    edx
  412b1f:	inc    eax
  412b20:	inc    esi
  412b21:	dec    ebp
  412b22:	cli    
  412b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b24:	cli    
  412b25:	xor    eax,0xef34ace3
  412b2a:	sub    DWORD PTR [bx+0x70],eax
  412b2e:	sbb    edx,esp
  412b30:	jge    0x412b72
  412b32:	cmp    BYTE PTR [eax],dh
  412b34:	xchg   edx,eax
  412b35:	mov    ds:0xad83b7de,al
  412b3a:	dec    esi
  412b3b:	pop    ss
  412b3c:	in     eax,dx
  412b3d:	test   al,0x1b
  412b3f:	dec    ecx
  412b40:	mov    edx,0x748461b8
  412b45:	loop   0x412adf
  412b47:	mov    ds,WORD PTR [ebx+0x79f4ff98]
  412b4d:	mov    edx,0xe8cd0001
  412b52:	imul   ah
  412b54:	mov    bh,0x8e
  412b56:	add    al,0x22
  412b58:	repz mov dl,0x80
  412b5b:	fld    TBYTE PTR [edx+0x46cf4d0e]
  412b61:	or     cl,cl
  412b63:	out    dx,eax
  412b64:	int    0x14
  412b66:	not    DWORD PTR ds:0xf34f676c
  412b6c:	dec    edi
  412b6d:	jge    0x412bb8
  412b6f:	push   ebx
  412b70:	xor    ecx,ecx
  412b72:	add    eax,0xa9c5f0b
  412b77:	outs   dx,DWORD PTR ds:[esi]
  412b78:	push   esp
  412b79:	push   ecx
  412b7a:	fs or  ebp,edi
  412b7d:	mov    WORD PTR [edi],?
  412b7f:	xchg   ecx,eax
  412b80:	js     0x412bb5
  412b82:	push   0x382edc01
  412b87:	jp     0x412b9b
  412b89:	or     DWORD PTR [ebp+0x44],0x14
  412b8d:	mov    cl,0xc7
  412b8f:	push   es
  412b90:	xor    eax,0xaabb1b94
  412b95:	inc    edi
  412b96:	fdiv   DWORD PTR [edi+0x36]
  412b99:	mov    ds:0x65065040,al
  412b9e:	sub    ecx,eax
  412ba0:	add    ebx,DWORD PTR [edi+0x4f17d453]
  412ba6:	fwait
  412ba7:	cmp    eax,0x5c5df80a
  412bac:	push   eax
  412bad:	(bad)  [ecx+0x26]
  412bb0:	or     DWORD PTR [edx],0xdd233abe
  412bb6:	int3   
  412bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb8:	jmp    0x1089:0xcf5a013e
  412bbf:	lds    eax,FWORD PTR ds:0xb69ae4fa
  412bc5:	icebp  
  412bc6:	pop    esi
  412bc7:	aad    0xd5
  412bc9:	mov    cs,WORD PTR [ebx-0x2359b26c]
  412bcf:	xchg   BYTE PTR [esi+0x3e],dh
  412bd2:	or     DWORD PTR [eax+0x36551bca],ebp
  412bd8:	push   esp
  412bd9:	sbb    dh,BYTE PTR [ecx]
  412bdb:	mov    al,ds:0x5b046a5c
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    ecx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    eax,DWORD PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    ebp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [eax+edx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fsub   DWORD PTR [eax]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fld1   
  414e41:	ins    DWORD PTR es:[edi],dx
  414e42:	test   al,0x4f
  414e44:	mov    ebp,fs
  414e46:	add    BYTE PTR [eax],al
  414e48:	cmc    
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    BYTE PTR [edx+0x3df40ba7],cl
  414e51:	xor    esi,DWORD PTR [edi]
  414e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e54:	loop   0x414e65
  414e56:	(bad)  
  414e57:	mov    edx,edi
  414e59:	lods   al,BYTE PTR ds:[esi]
  414e5a:	cli    
  414e5b:	out    dx,eax
  414e5c:	hlt    
  414e5d:	cmc    
  414e5e:	xor    DWORD PTR [edx+eax*1+0xf],0xd0a8374b
  414e66:	(bad)  
  414e67:	fdivr  DWORD PTR [esi+0x79299ea6]
  414e6d:	sbb    ch,bl
  414e6f:	cld    
  414e70:	push   eax
  414e71:	das    
  414e72:	cmp    al,0x8
  414e74:	sub    BYTE PTR [edi-0x33aa69a5],ch
  414e7a:	mov    al,ds:0xa90f9eec
  414e7f:	mov    edi,0x251b2edb
  414e84:	mov    ah,0xad
  414e86:	add    eax,0xc947cbb9
  414e8b:	push   ecx
  414e8c:	xor    al,0xf4
  414e8e:	iret   
  414e8f:	dec    edx
  414e90:	aam    0x6
  414e92:	mov    BYTE PTR [ecx],dl
  414e94:	xchg   ebp,eax
  414e95:	cs or  eax,0xf9dc46b0
  414e9b:	xchg   BYTE PTR [esp+esi*1+0x3a],bl
  414e9f:	xchg   DWORD PTR [ebp-0x46],esp
  414ea2:	int3   
  414ea3:	xchg   ebx,eax
  414ea4:	stc    
  414ea5:	scas   eax,DWORD PTR es:[edi]
  414ea6:	mov    esi,0xfff611ec
  414eab:	mov    ebx,0x69bd8e
  414eb0:	out    dx,eax
  414eb1:	jmp    0x6f70:0xb5fd1145
  414eb8:	lods   al,BYTE PTR ds:[esi]
  414eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eba:	or     bh,BYTE PTR [ecx]
  414ebc:	nop
  414ebd:	ror    ecx,0x77
  414ec0:	cmp    eax,0x88766326
  414ec5:	stos   DWORD PTR es:[edi],eax
  414ec6:	gs jge 0x414e51
  414ec9:	xor    cl,al
  414ecb:	ins    BYTE PTR es:[edi],dx
  414ecc:	add    al,0xd
  414ece:	enter  0xffd3,0xd2
  414ed2:	xor    esp,DWORD PTR [ebp+edi*8+0x5c]
  414ed6:	mov    ch,0xa5
  414ed8:	in     eax,0x78
  414eda:	aad    0x5a
  414edc:	jl     0x414ecf
  414ede:	cmc    
  414edf:	out    0x56,eax
  414ee1:	pop    esp
  414ee2:	jnp    0x414e6d
  414ee4:	xor    BYTE PTR [ebp-0x73cd9f07],cl
  414eea:	daa    
  414eeb:	or     esp,esi
  414eed:	dec    ecx
  414eee:	pop    eax
  414eef:	daa    
  414ef0:	sub    DWORD PTR [ebx+0x576df57d],esp
  414ef6:	xchg   DWORD PTR [ecx],ecx
  414ef8:	inc    edi
  414ef9:	jne    0x414e7b
  414efb:	inc    esi
  414efc:	mov    dh,0x57
  414efe:	xchg   ebp,eax
  414eff:	sbb    eax,ebx
  414f01:	sub    eax,0x3b2613cb
  414f06:	cmp    BYTE PTR [eax],0x64
  414f09:	aad    0xef
  414f0b:	jge    0x414ec9
  414f0d:	dec    edx
  414f0e:	jbe    0x414f85
  414f10:	inc    edi
  414f11:	xor    BYTE PTR [ebp-0xc],0xf1
  414f15:	mov    bh,0x30
  414f17:	rcr    BYTE PTR [ebp-0x5c379dd2],0x4d
  414f1e:	enter  0x3b96,0xa1
  414f22:	xor    ch,BYTE PTR [ebp+0x6e]
  414f25:	(bad)  
  414f26:	pushf  
  414f27:	out    0xc,al
  414f29:	repz sahf 
  414f2b:	ret    0x29c2
  414f2e:	mov    esi,0x6790b93a
  414f33:	mov    eax,ds
  414f35:	sub    ebx,DWORD PTR [eax-0x63]
  414f38:	mov    esp,ebx
  414f3a:	cmp    ah,BYTE PTR ds:0x2c5fd33
  414f40:	fild   DWORD PTR [eax]
	...
  414fb2:	add    BYTE PTR [eax],al
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0xeb00
  414fc2:	(bad)  
  414fc3:	bound  eax,QWORD PTR [ecx-0xaffff1a]
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR ds:0x581eaa48,bl
  414fd1:	pop    ds
  414fd2:	or     cl,BYTE PTR [esi-0x1d95e2c3]
  414fd8:	je     0x414f76
  414fda:	push   0xffffff82
  414fdc:	cmp    cl,BYTE PTR [esi+edi*4+0x41fd7cac]
  414fe3:	or     eax,0x88411b08
  414fe8:	ret    0x17be
  414feb:	popa   
  414fec:	mov    eax,0xd1542186
  414ff1:	gs mov ebp,0x34ccaa8
  414ff7:	xlat   BYTE PTR ds:[ebx]
  414ff9:	xchg   edi,eax
  414ffa:	mov    dh,0x45
  414ffc:	and    al,0xa4
  414ffe:	dec    ecx
  414fff:	fistp  QWORD PTR [edi-0x2b]
  415002:	jae    0x414f93
  415004:	jge    0x414ff6
  415006:	inc    ecx
  415007:	(bad)  
  415008:	fmul   DWORD PTR [edx]
  41500a:	mov    eax,0xcf7ecb51
  41500f:	loop   0x414ffc
  415011:	or     eax,0x53855720
  415016:	std    
  415017:	fsubrp st(5),st
  415019:	mov    ch,0x82
  41501b:	mov    ebp,0x39b5d37e
  415020:	outs   dx,DWORD PTR ds:[esi]
  415021:	lahf   
  415022:	call   0x420383b2
  415027:	sar    ebp,1
  415029:	enter  0xa2b9,0xb4
  41502d:	out    0xd9,eax
  41502f:	scas   eax,DWORD PTR es:[edi]
  415030:	stos   DWORD PTR es:[edi],eax
  415031:	dec    edi
  415032:	lea    ebp,[ebp+0x5f]
  415035:	push   0xb7b2de42
  41503a:	jb     0x415053
  41503c:	push   es
  41503d:	aas    
  41503e:	push   edi
  41503f:	jbe    0x414fed
  415041:	xor    al,0x8c
  415043:	in     al,0xca
  415045:	sub    eax,0xf17565e0
  41504a:	sbb    dl,dl
  41504c:	shl    DWORD PTR [ebp+0x5a],cl
  41504f:	xchg   ebp,eax
  415050:	xor    BYTE PTR [edi],bh
  415052:	mov    ah,0xf9
  415054:	cmp    BYTE PTR [ecx+0x1210b1f0],0xed
  41505b:	xchg   DWORD PTR [ecx+0x62],edx
  41505e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41505f:	dec    edx
  415060:	mov    ah,bh
  415062:	cdq    
  415063:	in     eax,0x11
  415065:	mov    esi,0xbd544539
  41506a:	ds inc si
  41506d:	ret    
  41506e:	jge    0x415092
  415070:	push   ds
  415071:	push   edi
  415072:	ds mov dl,0x3
  415075:	pushf  
  415076:	mov    bl,0x5d
  415078:	mov    eax,0xb5882b25
  41507d:	jl     0x415043
  41507f:	mov    ecx,0xfb34c1b3
  415084:	jb     0x41505c
  415086:	cmp    cl,BYTE PTR ds:0xbad7d2f6
  41508c:	or     cl,BYTE PTR [edi-0x5d]
  41508f:	sti    
  415090:	push   cs
  415091:	aam    0x27
  415093:	xor    BYTE PTR [esi+ebx*8+0x15],ah
  415097:	icebp  
  415098:	jne    0x4150e3
  41509a:	xor    DWORD PTR [esp+edi*1],esp
  41509d:	test   eax,0x156858f
  4150a2:	sbb    esi,0x2c
  4150a5:	mov    eax,ds:0x118118c1
  4150aa:	push   es
  4150ab:	adc    esi,DWORD PTR [esi+0x1dfa2bf2]
  4150b1:	les    esp,FWORD PTR [edx]
  4150b3:	sbb    eax,0xb01c9734
  4150b8:	cmp    DWORD PTR [ecx+ecx*1+0x26845c7f],ebp
  4150bf:	loope  0x415052
	...
  415131:	add    BYTE PTR [eax],al
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi+0x3ef2c4d9]
  415142:	loop   0x415129
  415144:	jbe    0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    BYTE PTR [edi-0x54269790],bl
  415151:	aas    
  415152:	mov    ebp,0xa5f0caff
  415157:	fs mov dh,0x78
  41515a:	dec    ebp
  41515b:	jo     0x4151be
  41515d:	dec    ecx
  41515e:	bound  esi,QWORD PTR [esi+0x4d]
  415161:	mov    cl,0x46
  415163:	dec    esp
  415164:	sahf   
  415165:	test   DWORD PTR [esi],esp
  415167:	stc    
  415168:	mov    bl,0xc2
  41516a:	inc    esp
  41516b:	sbb    DWORD PTR [eax-0x7e],esi
  41516e:	adc    ecx,DWORD PTR [esi]
  415170:	lea    esp,[ebx]
  415172:	xchg   edx,eax
  415173:	push   0x37a77235
  415178:	test   BYTE PTR ds:[ebx],dl
  41517b:	dec    eax
  41517c:	int3   
  41517d:	mov    dh,0x33
  41517f:	add    esi,eax
  415181:	sbb    esi,DWORD PTR [edx-0x513c1c0d]
  415187:	sbb    BYTE PTR [ebp-0x71],bl
  41518a:	add    al,0x77
  41518c:	jo     0x41510e
  41518e:	inc    ebx
  41518f:	xchg   ecx,eax
  415190:	sbb    ch,cl
  415192:	mov    edi,0xfdcae12f
  415197:	out    dx,al
  415198:	jp     0x4151b9
  41519a:	(bad)  [edi]
  41519c:	cmp    ebx,DWORD PTR [eax-0x64]
  41519f:	in     eax,0xe1
  4151a1:	cmp    BYTE PTR [edx+0x3],0x53
  4151a5:	sub    edx,DWORD PTR [eax+0x3c0995c9]
  4151ab:	mov    ?,WORD PTR [edi+edi*8+0x665991af]
  4151b2:	pop    es
  4151b3:	pop    eax
  4151b4:	xchg   edi,eax
  4151b5:	fistp  QWORD PTR [esi]
  4151b7:	pusha  
  4151b8:	popf   
  4151b9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4151bb:	pop    ebx
  4151bc:	jno    0x4151c3
  4151be:	jne    0x41522b
  4151c0:	jbe    0x4151b9
  4151c2:	jg     0x41516d
  4151c4:	rcr    BYTE PTR [esi],cl
  4151c6:	push   edx
  4151c7:	jae    0x415184
  4151c9:	jle    0x4151cd
  4151cb:	addr16 fs inc eax
  4151ce:	dec    ebx
  4151cf:	mov    gs,esp
  4151d1:	dec    ecx
  4151d2:	xor    dh,ch
  4151d4:	add    ecx,ecx
  4151d6:	retf   
  4151d7:	dec    ebx
  4151d8:	or     ch,BYTE PTR [edi-0x5cf17c92]
  4151de:	inc    ecx
  4151df:	xor    ebp,edx
  4151e1:	scas   al,BYTE PTR es:[edi]
  4151e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e3:	pop    es
  4151e4:	dec    esp
  4151e5:	enter  0x7eaa,0x4f
  4151e9:	xchg   DWORD PTR [ebx-0x35],ebx
  4151ec:	xor    edx,esp
  4151ee:	imul   eax,DWORD PTR [edi+0x2169a00],0x817e5348
  4151f8:	dec    ecx
  4151f9:	ror    bl,1
  4151fb:	popa   
  4151fc:	stos   DWORD PTR es:[edi],eax
  4151fd:	sbb    eax,0x8a28c956
  415202:	addr16 mov ecx,0x3b25b789
  415208:	fcomp  st(5)
  41520a:	jns    0x4151be
  41520c:	inc    eax
  41520d:	retf   
  41520e:	dec    ecx
  41520f:	(bad)  
  415210:	ss ins BYTE PTR es:[edi],dx
  415212:	and    BYTE PTR [ebx-0x46724aa0],bh
  415218:	jbe    0x415259
  41521a:	pop    ds
  41521b:	inc    ebp
  41521c:	in     al,dx
  41521d:	sbb    BYTE PTR [edi],ah
  41521f:	int    0x66
  415221:	push   edx
  415222:	xor    ah,ch
  415224:	and    BYTE PTR [edx-0x7bad10b2],al
  41522a:	fistp  QWORD PTR [esi-0x2a]
  41522d:	xor    BYTE PTR [edi-0x4e7ada38],dl
  415233:	add    edi,ebx
  415235:	int3   
  415236:	and    DWORD PTR [ebx+ecx*8-0x49c5ae42],edi
  41523d:	loop   0x4152af
  41523f:	enter  0x5e,0x0
	...
  4152b3:	add    BYTE PTR [ecx],al
  4152b5:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	data16 mov ah,BYTE PTR [ebp+edx*4+0xe86b]
  4152c8:	cmc    
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    cl,bl
  4152cd:	sub    BYTE PTR [edi-0x3e],dl
  4152d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152d1:	mov    al,0xdd
  4152d3:	gs jl  0x415263
  4152d6:	pop    ebp
  4152d7:	sub    esp,ebx
  4152d9:	dec    esp
  4152da:	mov    al,0xe2
  4152dc:	xlat   BYTE PTR ds:[ebx]
  4152dd:	jp     0x4152a0
  4152df:	fcmove st,st(2)
  4152e1:	nop
  4152e2:	cdq    
  4152e3:	popf   
  4152e4:	or     al,0x84
  4152e6:	fwait
  4152e7:	sbb    ebp,edx
  4152e9:	mov    esi,0xb4c670c6
  4152ee:	add    ebx,DWORD PTR [ebx-0x155a17eb]
  4152f4:	mov    edi,DWORD PTR [ecx+edi*1+0x10d3848c]
  4152fb:	sub    al,0x2f
  4152fd:	xor    eax,0xdc2a0188
  415302:	mov    WORD PTR [ecx+0x68],ss
  415305:	retf   
  415306:	sbb    eax,esi
  415308:	out    0xc9,eax
  41530a:	dec    ebx
  41530b:	test   eax,0xccf0a463
  415310:	imul   eax,edx,0xe7a4f1be
  415316:	leave  
  415317:	std    
  415318:	shl    ecx,0x20
  41531b:	mov    esp,0xd110c37b
  415320:	retf   
  415321:	inc    ecx
  415322:	and    eax,0x983d84ac
  415327:	mov    edi,0x1ec9e829
  41532c:	int    0x8d
  41532e:	jmp    0x1ee8:0x88287f4
  415335:	jns    0x415373
  415337:	out    0xf7,al
  415339:	cdq    
  41533a:	fs jmp 0xe6f6:0x36b26841
  415342:	shl    bl,0x98
  415345:	mov    BYTE PTR [esp+0x69],al
  415349:	jp     0x4153a9
  41534b:	push   esi
  41534c:	aaa    
  41534d:	xor    ecx,edx
  41534f:	inc    edx
  415350:	retf   0x4ada
  415353:	test   BYTE PTR [ebp+0x4b],cl
  415356:	mov    dl,bh
  415358:	imul   esi,DWORD PTR [ecx+0xd84ddbc],0x3c75fb40
  415362:	scas   al,BYTE PTR es:[edi]
  415363:	into   
  415364:	(bad)  
  415365:	inc    ebx
  415366:	es adc edi,ebp
  415369:	mov    ebx,0xb6c4694b
  41536e:	dec    edi
  41536f:	push   cs
  415370:	stos   DWORD PTR es:[edi],eax
  415371:	icebp  
  415372:	inc    eax
  415373:	jg     0x4153ea
  415375:	push   ebp
  415376:	ret    
  415377:	pop    ebp
  415378:	in     eax,dx
  415379:	mov    ah,0x29
  41537b:	imul   edx,DWORD PTR [edx],0x177079bb
  415381:	mov    ebp,0x75a2ded1
  415386:	(bad)  
  415387:	or     edi,DWORD PTR [edi-0x2a2826ac]
  41538d:	push   cs
  41538e:	das    
  41538f:	sub    DWORD PTR [edx-0x119cafdc],0xf686cc28
  415399:	les    ecx,FWORD PTR [edi-0x6e83ec19]
  41539f:	xchg   edi,eax
  4153a0:	neg    ch
  4153a2:	cmc    
  4153a3:	outs   dx,BYTE PTR ds:[esi]
  4153a4:	test   BYTE PTR [edx-0x54],0xd1
  4153a8:	rcl    dl,0xad
  4153ab:	mov    ch,BYTE PTR [ecx]
  4153ad:	imul   eax,esi,0xe7ad8307
  4153b3:	popa   
  4153b4:	or     DWORD PTR [ebp-0x6d2d4e01],ecx
  4153ba:	mov    dl,0xf4
  4153bc:	mov    eax,0x8121ab1e
	...
  415431:	add    BYTE PTR [eax],al
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	outs   dx,BYTE PTR ds:[esi]
  415441:	fdiv   st(3),st
  415443:	xchg   BYTE PTR [eax-0x17],ah
  415446:	add    BYTE PTR [eax],al
  415448:	cmc    
  415449:	add    BYTE PTR [eax],al
  41544b:	add    BYTE PTR [edx+0x59e2750a],ch
  415451:	or     bl,BYTE PTR [eax+0x6]
  415454:	sub    DWORD PTR ds:0xe415f1e9,esi
  41545a:	sub    DWORD PTR [ebx+0x66faf38],eax
  415460:	pop    esi
  415461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415462:	xchg   ebx,eax
  415463:	jl     0x4154d6
  415465:	out    dx,al
  415466:	sbb    BYTE PTR [eax+eax*4+0x60083355],al
  41546d:	xor    ebx,0x982ca50f
  415473:	or     ch,BYTE PTR [ebx+0x60]
  415476:	nop
  415477:	sar    BYTE PTR [edi-0x1a72b0c],cl
  41547d:	sub    DWORD PTR [ebx+0x78e002e],ecx
  415483:	or     al,0x9d
  415485:	fdivr  QWORD PTR [ecx*4-0x40f051f6]
  41548c:	and    BYTE PTR [edi+edi*8],bh
  41548f:	inc    esi
  415490:	mov    dh,0x9
  415492:	mov    cl,0x66
  415494:	or     BYTE PTR [edi],0x65
  415497:	sahf   
  415498:	jb     0x41547a
  41549a:	and    BYTE PTR [edx],0x85
  41549d:	pop    ebx
  41549e:	inc    esi
  41549f:	ins    BYTE PTR es:[edi],dx
  4154a0:	stos   DWORD PTR es:[edi],eax
  4154a1:	imul   ecx,ecx,0x2da0890b
  4154a7:	fs mov eax,0x84439f54
  4154ad:	or     edi,DWORD PTR [esi+edi*8-0x22e41add]
  4154b4:	cwde   
  4154b5:	cmp    ecx,DWORD PTR [esi-0x44]
  4154b8:	test   al,0x49
  4154ba:	jle    0x41552b
  4154bc:	and    eax,0x123d6c11
  4154c1:	aaa    
  4154c2:	jns    0x415502
  4154c4:	into   
  4154c5:	sub    eax,0xceb6c46d
  4154ca:	cdq    
  4154cb:	mov    al,ds:0x4b882600
  4154d0:	pusha  
  4154d1:	(bad)  
  4154d2:	pop    ebx
  4154d3:	push   edi
  4154d4:	mov    WORD PTR [ebx+eax*8+0x9],ds
  4154d8:	repnz xchg edx,eax
  4154da:	adc    DWORD PTR [ecx],edi
  4154dc:	fwait
  4154dd:	ins    BYTE PTR es:[edi],dx
  4154de:	fmul   st,st(6)
  4154e0:	xor    edx,DWORD PTR ds:0xf3f19bcf
  4154e6:	or     al,0xe6
  4154e8:	popf   
  4154e9:	lea    eax,[esi+0x4a]
  4154ec:	jge    0x415505
  4154ee:	fwait
  4154ef:	push   esi
  4154f0:	sbb    bh,BYTE PTR [ebp+0x530bde05]
  4154f6:	mov    eax,0x488de741
  4154fb:	ror    BYTE PTR [edi+0x41f9d033],1
  415501:	pop    ss
  415502:	add    esp,DWORD PTR [edx+0x63]
  415505:	scas   eax,DWORD PTR es:[edi]
  415506:	imul   esi,DWORD PTR [ecx-0x7a4f9112],0x4e297601
  415510:	mov    WORD PTR [edi+0x29],fs
  415513:	xchg   DWORD PTR [esi-0x34b7110a],edi
  415519:	and    al,0x1b
  41551b:	xor    edi,DWORD PTR [edx+0x4]
  41551e:	and    ecx,ebp
  415520:	ret    0xc6c6
  415523:	dec    ecx
  415524:	rol    al,0x44
  415527:	retf   0xa8f1
  41552a:	sub    BYTE PTR [edx+0x49],bl
  41552d:	or     ebp,DWORD PTR [esp+esi*1]
  415530:	push   ebp
  415531:	ror    BYTE PTR [esi-0x46],cl
  415534:	cmp    BYTE PTR [ecx+0x41],ch
  415537:	mov    fs,ebp
  415539:	out    dx,eax
  41553a:	into   
  41553b:	mov    bh,0x46
  41553d:	and    esp,DWORD PTR [edx+0x302c]
	...
  4155b3:	add    BYTE PTR [edi+0x5e],bh
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	test   DWORD PTR [eax+0x2b],0xea5574
  4155c7:	add    ch,dh
  4155c9:	add    BYTE PTR [eax],al
  4155cb:	add    BYTE PTR [esi-0x7c9a30f5],dl
  4155d1:	retf   
  4155d2:	rep lods al,BYTE PTR ds:[esi]
  4155d4:	sub    DWORD PTR [eax+0x55],edi
  4155d7:	imul   ebx,ecx,0x71
  4155da:	mov    eax,ds:0x8a3bf78d
  4155df:	(bad)  
  4155e0:	adc    al,0x3e
  4155e2:	in     al,dx
  4155e3:	or     dl,dl
  4155e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e6:	push   0xffffffe3
  4155e8:	push   ss
  4155e9:	call   0xd4a72c62
  4155ee:	aaa    
  4155ef:	in     al,0xaa
  4155f1:	test   al,0x6b
  4155f3:	aad    0x40
  4155f5:	xchg   edx,eax
  4155f6:	clc    
  4155f7:	cdq    
  4155f8:	sti    
  4155f9:	cmp    BYTE PTR [edx+ebx*4+0x7ba4d330],dl
  415600:	shl    WORD PTR [edi-0x1327c099],0xca
  415608:	and    BYTE PTR [edx],0xa
  41560b:	add    BYTE PTR [ebx+eiz*8-0xf9d10f8],bl
  415612:	gs sub al,0x28
  415615:	or     al,0xad
  415617:	inc    ecx
  415618:	pop    ss
  415619:	jecxz  0x4155f8
  41561b:	aad    0x8e
  41561d:	inc    esi
  41561e:	in     al,0x82
  415620:	mov    bh,0x27
  415622:	js     0x4155d9
  415624:	popf   
  415625:	sti    
  415626:	xchg   edi,eax
  415627:	push   ebp
  415628:	mov    edx,DWORD PTR [ecx-0x328bb56e]
  41562e:	mov    edx,0x33e2b6fe
  415633:	pop    ds
  415634:	cmc    
  415635:	nop
  415636:	nop
  415637:	inc    edi
  415638:	(bad)  
  415639:	je     0x4156a2
  41563b:	mov    DWORD PTR [edx],edx
  41563d:	inc    edx
  41563e:	lds    edx,FWORD PTR [ecx*4+0x49e0802e]
  415645:	cwde   
  415646:	jecxz  0x4156a2
  415648:	fs jl  0x4155fd
  41564b:	adc    eax,0x9f632b56
  415650:	call   0x52dd:0xbc80a75
  415657:	les    esp,FWORD PTR [ecx-0xa]
  41565a:	imul   ebp,DWORD PTR [ebx],0x533939cc
  415660:	fnstcw WORD PTR [eax]
  415662:	pop    es
  415663:	retf   
  415664:	retf   
  415665:	push   es
  415666:	in     al,dx
  415667:	dec    eax
  415668:	mov    dl,0x67
  41566a:	(bad)  
  41566b:	xor    dh,bh
  41566d:	es pop ds
  41566f:	push   esi
  415670:	fucomi st,st(4)
  415672:	jp     0x415660
  415674:	xchg   esi,eax
  415675:	sub    esp,DWORD PTR [esi+ecx*1]
  415678:	enter  0xad84,0xbc
  41567c:	mov    esi,0xa8d361ed
  415681:	cli    
  415682:	ss (bad) 
  415684:	push   0xa53ec3b9
  415689:	fwait
  41568a:	sahf   
  41568b:	fs and esp,eax
  41568e:	test   eax,0xfb6d6c4e
  415693:	xchg   esp,eax
  415694:	mov    BYTE PTR [esp+esi*8+0x6131b9f8],0xe2
  41569c:	sbb    bh,dl
  41569e:	fidiv  DWORD PTR [edx]
  4156a0:	retf   
  4156a1:	fst    QWORD PTR [edx+0x6ed1c6d0]
  4156a7:	xchg   esp,eax
  4156a8:	xchg   ebp,eax
  4156a9:	mov    ch,al
  4156ab:	push   eax
  4156ac:	dec    edx
  4156ad:	pop    eax
  4156ae:	or     eax,0xbffd8fdb
  4156b3:	or     BYTE PTR [ebp+ebp*2-0x6ed2830e],bh
  4156ba:	push   ebp
  4156bb:	mov    bh,0x3c
  4156bd:	pusha  
  4156be:	cli    
  4156bf:	fstp   DWORD PTR [edx+0x0]
	...
  415731:	add    BYTE PTR [eax],al
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x74024fd3
  415743:	das    
  415744:	dec    edx
  415745:	jmp    0x415747
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    ah,al
  41574d:	lods   al,BYTE PTR ds:[esi]
  41574e:	or     ebp,DWORD PTR [esi+0x70d8ad81]
  415754:	out    0x3e,al
  415756:	pushf  
  415757:	mov    BYTE PTR [esi+edi*1-0x1],bh
  41575b:	shl    DWORD PTR [esi+0x511d0de0],0xb5
  415762:	jae    0x4156eb
  415764:	(bad)  
  415765:	mov    al,0x54
  415767:	adc    ebx,DWORD PTR [ecx]
  415769:	stc    
  41576a:	push   esi
  41576b:	mul    DWORD PTR [edi]
  41576d:	dec    edx
  41576e:	cmp    al,0xf4
  415770:	test   al,0x84
  415772:	bound  ecx,QWORD PTR [edx]
  415774:	adc    eax,0x34432f7f
  415779:	stos   BYTE PTR es:[edi],al
  41577a:	cld    
  41577b:	daa    
  41577c:	outs   dx,BYTE PTR ds:[esi]
  41577d:	rcl    BYTE PTR [eax],0x16
  415780:	push   ss
  415781:	aaa    
  415782:	jmp    0xfd8ff3c
  415787:	shr    BYTE PTR [ebp+0x4b4f9e61],0xa3
  41578e:	daa    
  41578f:	jns    0x4157c3
  415791:	mov    ebp,0x95a6f2b9
  415796:	ror    DWORD PTR [edi-0x7f],0xde
  41579a:	mov    al,gs:0x92a66056
  4157a0:	pop    ebx
  4157a1:	inc    eax
  4157a2:	pop    ebp
  4157a3:	dec    esi
  4157a4:	icebp  
  4157a5:	mov    dl,cl
  4157a7:	mov    ah,0xaf
  4157a9:	pop    edx
  4157aa:	mov    al,ds:0x9ba7d568
  4157af:	push   esp
  4157b0:	popa   
  4157b1:	hlt    
  4157b2:	hlt    
  4157b3:	fs nop
  4157b5:	pop    ds
  4157b6:	adc    BYTE PTR [esi+0x70044815],bh
  4157bc:	repnz rcr DWORD PTR [ecx-0x29],0x74
  4157c1:	leave  
  4157c2:	xchg   DWORD PTR [eax],esp
  4157c4:	stos   BYTE PTR es:[edi],al
  4157c5:	pusha  
  4157c6:	sbb    esi,DWORD PTR [ebp+0x3f]
  4157c9:	mov    WORD PTR [ecx+0x1a],es
  4157cc:	xchg   DWORD PTR [edi-0x24],edx
  4157cf:	hlt    
  4157d0:	jbe    0x4157ec
  4157d2:	fdiv   QWORD PTR [esp]
  4157d5:	or     al,0xde
  4157d7:	jmp    0x415827
  4157d9:	je     0x4157b5
  4157db:	xor    BYTE PTR [esp+eiz*2+0x28],0x73
  4157e0:	je     0x41576c
  4157e2:	jns    0x415810
  4157e4:	mov    ecx,0x1b8d80b
  4157e9:	inc    edx
  4157ea:	out    0x4c,eax
  4157ec:	mov    bl,0x3e
  4157ee:	jmp    0xaaf5:0xb2090cbd
  4157f5:	push   es
  4157f6:	pop    ecx
  4157f7:	(bad)  
  4157f9:	jno    0x4157b2
  4157fb:	or     edx,DWORD PTR [edx+ebx*8]
  4157fe:	ins    BYTE PTR es:[edi],dx
  4157ff:	sbb    DWORD PTR [ecx-0x3b6be41e],ebp
  415805:	fldenv [esi+0x22bc6f2c]
  41580b:	es mov ah,0x90
  41580e:	lods   eax,DWORD PTR ds:[esi]
  41580f:	sub    BYTE PTR [ecx+0x2261dfa1],bh
  415815:	jno    0x4157ce
  415817:	leave  
  415818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415819:	mov    ebp,0xc4c4ccbd
  41581e:	clc    
  41581f:	sub    al,0xe1
  415821:	cli    
  415822:	test   ch,0x41
  415825:	(bad)  
  415826:	jns    0x415833
  415828:	stc    
  415829:	sub    al,0x11
  41582b:	pop    edx
  41582c:	shl    BYTE PTR [esi],cl
  41582e:	xor    al,0xd8
  415830:	out    0xf8,eax
  415832:	aam    0x9b
  415834:	or     esi,DWORD PTR [edi]
  415836:	jl     0x41582f
  415838:	sar    BYTE PTR [ecx+0x6ea65e26],1
  41583e:	dec    ebp
  41583f:	xchg   edx,eax
  415840:	ja     0x415842
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0xc1e5d9fe
  4158c3:	lahf   
  4158c4:	aas    
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    dl,al
  4158cd:	test   eax,0x6f537350
  4158d2:	mov    cl,BYTE PTR [esi+edx*2-0x4]
  4158d6:	ins    BYTE PTR es:[edi],dx
  4158d7:	popf   
  4158d8:	(bad)  
  4158d9:	sahf   
  4158da:	dec    ecx
  4158db:	jmp    0xb64ecbf3
  4158e0:	ret    
  4158e1:	dec    edi
  4158e2:	mov    esi,0x91d40c8c
  4158e7:	fadd   DWORD PTR [edi*1+0x6503e730]
  4158ee:	nop
  4158ef:	(bad)  
  4158f0:	adc    bl,BYTE PTR [edx]
  4158f2:	stos   DWORD PTR es:[edi],eax
  4158f3:	adc    DWORD PTR [edi+edi*8+0x1e62f23a],esi
  4158fa:	add    ebp,edx
  4158fc:	xor    BYTE PTR [eax+0x6a0d0e0e],0xd3
  415903:	cmp    eax,esi
  415905:	mul    BYTE PTR [edx+esi*4-0x3e]
  415909:	mov    ebx,0xd69041b2
  41590e:	test   al,0xe0
  415910:	xchg   esi,eax
  415911:	arpl   WORD PTR [ebp-0x4130fa8b],ax
  415917:	mov    ah,BYTE PTR [esi]
  415919:	jb     0x4158ab
  41591b:	mov    bh,0x98
  41591d:	or     BYTE PTR [eax+0x504b000],al
  415923:	rcl    DWORD PTR [edx+ecx*4],0xe1
  415927:	sub    al,0x4b
  415929:	or     eax,0xc6e644f
  41592e:	sar    BYTE PTR [esi],0x17
  415931:	or     BYTE PTR [edi+0x4f],0xc6
  415935:	push   esp
  415936:	les    ebx,FWORD PTR ds:0x4a5859b
  41593c:	jmp    0x7624:0x8e34ed32
  415943:	call   0xe3a9f24e
  415948:	jmp    FWORD PTR [edi-0x39]
  41594b:	lds    edx,FWORD PTR [edx-0x3e926e44]
  415951:	xor    DWORD PTR [esi],esp
  415953:	fwait
  415954:	(bad)  
  415955:	mov    bl,0x9d
  415957:	xchg   BYTE PTR [esi],ch
  415959:	mov    dl,0x4c
  41595b:	fincstp 
  41595d:	pop    ss
  41595e:	cs out dx,eax
  415960:	pop    ds
  415961:	lods   al,BYTE PTR ds:[esi]
  415962:	mov    BYTE PTR [edi-0x3c],0x52
  415966:	fimul  DWORD PTR [edi+esi*8]
  415969:	jmp    0xab00:0xf31e4c7b
  415970:	sbb    DWORD PTR [edi-0x77f5fce6],ebp
  415976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415977:	sub    eax,DWORD PTR [edi+0x1d]
  41597a:	stc    
  41597b:	jecxz  0x4159d4
  41597d:	mov    gs:0x85acb903,eax
  415983:	lods   al,BYTE PTR ds:[esi]
  415984:	xchg   ecx,eax
  415985:	xchg   esp,eax
  415986:	xor    ah,bl
  415988:	loop   0x4159fe
  41598a:	sbb    al,ch
  41598c:	data16 lods al,BYTE PTR ds:[esi]
  41598e:	sbb    DWORD PTR ds:0x894e807b,ecx
  415994:	and    eax,0xd05b5532
  415999:	or     al,0xcc
  41599b:	imul   edx
  41599d:	jbe    0x41598d
  41599f:	or     dl,BYTE PTR [eax]
  4159a1:	or     al,0xed
  4159a3:	adc    DWORD PTR [eax-0x2e],edi
  4159a6:	mov    ecx,0x263f561c
  4159ab:	(bad)  
  4159ac:	jne    0x415954
  4159ae:	rcl    DWORD PTR [ecx+0x40],cl
  4159b1:	push   edx
  4159b2:	mov    ds:0x6b5f25fe,eax
  4159b7:	push   edi
  4159b8:	adc    BYTE PTR [edx+0x424bf7e9],bh
  4159be:	stos   BYTE PTR es:[edi],al
  4159bf:	mov    ecx,0xa5
	...
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	push   cs
  415a41:	mov    ch,0xf2
  415a43:	int    0x34
  415a45:	in     eax,dx
  415a46:	add    BYTE PTR [eax],al
  415a48:	cmc    
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    dl,bh
  415a4d:	imul   esp,DWORD PTR [esi+eiz*4+0x4e],0xfbb4935
  415a55:	outs   dx,DWORD PTR ds:[esi]
  415a56:	les    ebp,FWORD PTR [edi+0x101bb892]
  415a5c:	mov    al,ds:0x267d9c9c
  415a61:	sbb    eax,0x5f25295
  415a66:	dec    ebx
  415a67:	adc    dh,BYTE PTR [edx+ebp*1+0x67]
  415a6b:	xor    al,0x16
  415a6d:	dec    eax
  415a6e:	adc    esi,esp
  415a70:	mov    ecx,0x62eb2de1
  415a75:	and    DWORD PTR [edx+0x4a9c05d3],esi
  415a7b:	xor    DWORD PTR [ebp+eax*4-0x15],0x7db6c543
  415a83:	outs   dx,DWORD PTR ds:[esi]
  415a84:	cs jmp 0x3790:0xc11ffec1
  415a8c:	idiv   DWORD PTR [ebp+0x7e]
  415a8f:	xchg   esi,eax
  415a90:	and    eax,eax
  415a92:	ins    DWORD PTR es:[edi],dx
  415a93:	mov    bl,0x6f
  415a95:	imul   edi,esi,0x1a
  415a98:	mov    esi,0x6ea9f604
  415a9d:	xor    DWORD PTR [ebx-0x178ff2b6],esp
  415aa3:	inc    ebx
  415aa4:	xchg   edi,eax
  415aa5:	fisubr WORD PTR [eax+ebx*8+0x3d]
  415aa9:	out    0xdb,eax
  415aab:	sub    al,0xa3
  415aad:	stc    
  415aae:	add    DWORD PTR [edi+eiz*8+0x62],eax
  415ab2:	adc    ah,dl
  415ab4:	jbe    0x415af2
  415ab6:	and    bh,BYTE PTR [ecx-0xe835749]
  415abc:	xlat   BYTE PTR ds:[ebx]
  415abd:	lods   al,BYTE PTR ds:[esi]
  415abe:	xchg   ebx,eax
  415abf:	ret    
  415ac0:	mov    dl,0x23
  415ac2:	fwait
  415ac3:	dec    eax
  415ac4:	fldcw  WORD PTR [eax+eax*4-0x1ca9c964]
  415acb:	cmp    al,BYTE PTR [edx+0x6e7a8363]
  415ad1:	cmp    ebx,DWORD PTR [edx-0x75065b12]
  415ad7:	neg    ecx
  415ad9:	aam    0x8e
  415adb:	in     eax,dx
  415adc:	in     al,dx
  415add:	mov    dh,0xdc
  415adf:	lds    eax,FWORD PTR [ebp-0x3bd9aa68]
  415ae5:	push   ebp
  415ae6:	stc    
  415ae7:	pop    ecx
  415ae8:	cmp    eax,0x82f7b33b
  415aed:	dec    esi
  415aee:	mov    al,0x78
  415af0:	out    0xca,eax
  415af2:	lahf   
  415af3:	cmp    BYTE PTR [esi],bh
  415af5:	cmp    dl,ch
  415af7:	jl     0x415aad
  415af9:	icebp  
  415afa:	ja     0x415ab0
  415afc:	pop    ecx
  415afd:	fbstp  TBYTE PTR [edi-0x9]
  415b00:	inc    ebx
  415b01:	mov    ?,ecx
  415b03:	add    al,0xbc
  415b05:	data16 xor BYTE PTR [esi+eiz*1],dh
  415b09:	enter  0xabcb,0x55
  415b0d:	jmp    0x415b07
  415b0f:	enter  0x646c,0xa2
  415b13:	(bad)  
  415b14:	in     al,dx
  415b15:	pop    edx
  415b16:	pop    esi
  415b17:	retf   
  415b18:	call   0x354a362d
  415b1d:	jl     0x415b2a
  415b1f:	push   ds
  415b20:	fs aad 0xc3
  415b23:	jecxz  0x415b91
  415b25:	push   esi
  415b26:	and    eax,0x968d68f4
  415b2b:	xor    ecx,DWORD PTR [edi]
  415b2d:	push   esi
  415b2e:	jmp    0x415b78
  415b30:	jo     0x415b02
  415b32:	xor    al,0xd
  415b34:	ins    BYTE PTR es:[edi],dx
  415b35:	or     BYTE PTR [ecx+0x2a],bl
  415b38:	aas    
  415b39:	test   al,0x6f
  415b3b:	push   esp
  415b3c:	test   al,0x15
  415b3e:	mov    bh,0x9
  415b40:	xchg   ebx,eax
	...
  415bb1:	add    BYTE PTR [eax],al
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	fstp   QWORD PTR [eax-0x56]
  415bc3:	aam    0x29
  415bc5:	out    dx,al
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR ds:0x90f8391d,dh
  415bd1:	and    BYTE PTR [edx],bl
  415bd3:	(bad)  
  415bd4:	jnp    0x415bd7
  415bd6:	push   ecx
  415bd7:	sbb    DWORD PTR ds:0xea54e80c,esi
  415bdd:	add    bh,BYTE PTR [edi+edi*2]
  415be0:	sbb    BYTE PTR [edi-0xf],bh
  415be3:	jmp    0xad400975
  415be8:	mov    ds:0x12769021,al
  415bed:	shl    DWORD PTR [eax],cl
  415bef:	data16 aam 0xeb
  415bf2:	adc    cl,BYTE PTR [edi+0x6e51429a]
  415bf8:	fwait
  415bf9:	in     al,0xe7
  415bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfc:	xchg   ebp,eax
  415bfd:	shl    DWORD PTR [edx+0x6aa5737d],cl
  415c03:	sbb    al,0x80
  415c05:	adc    DWORD PTR [ecx+0x3a804b63],ebx
  415c0b:	pop    edi
  415c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0d:	sub    al,0x80
  415c0f:	and    BYTE PTR [esp+ecx*1+0x37],cl
  415c13:	aaa    
  415c14:	or     BYTE PTR [edi],ch
  415c16:	pop    ax
  415c18:	xor    dl,cl
  415c1a:	nop
  415c1b:	inc    ebp
  415c1c:	(bad)  
  415c1d:	loopne 0x415c5e
  415c1f:	invd   
  415c21:	test   al,0x22
  415c23:	das    
  415c24:	je     0x415c96
  415c26:	push   0x6db3f88c
  415c2b:	mov    ecx,0xdc17adcd
  415c30:	xchg   ebp,eax
  415c31:	and    BYTE PTR [ecx+esi*4+0x3dc1e035],dh
  415c38:	xor    al,0x65
  415c3a:	ja     0x415c2b
  415c3c:	scas   eax,DWORD PTR es:[edi]
  415c3d:	(bad)  
  415c3e:	nop
  415c3f:	and    esi,DWORD PTR [ebp+0x51]
  415c42:	imul   eax,DWORD PTR [esp+eax*8-0x21],0xe5a1402f
  415c4a:	addr16 jge 0x415bd7
  415c4d:	ret    0x90dd
  415c50:	sub    eax,0xe14b21eb
  415c55:	mov    ecx,0xb2984f4e
  415c5a:	aas    
  415c5b:	repnz mov al,0x32
  415c5e:	(bad)  
  415c5f:	lock aas 
  415c61:	cmp    al,0x47
  415c63:	rcl    BYTE PTR [ecx],cl
  415c65:	push   0x5d
  415c67:	mov    ah,0xb0
  415c69:	mov    edx,DWORD PTR [eax+edi*2-0x1be31a1c]
  415c70:	outs   dx,BYTE PTR ds:[esi]
  415c71:	lea    esi,[edx+0x3c9aa351]
  415c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c78:	dec    ecx
  415c79:	jns    0x415c06
  415c7b:	mov    esi,0xc4f6dd40
  415c80:	in     al,dx
  415c81:	xchg   edx,eax
  415c82:	push   0xfffffffe
  415c84:	mov    ds:0xd9e0b7fe,al
  415c89:	popf   
  415c8a:	pop    ecx
  415c8b:	dec    ebx
  415c8c:	outs   dx,BYTE PTR ds:[esi]
  415c8d:	cmc    
  415c8e:	iret   
  415c8f:	xor    cl,BYTE PTR gs:[ebx]
  415c92:	adc    eax,0xd8f3472f
  415c97:	aas    
  415c98:	es inc eax
  415c9a:	cld    
  415c9b:	cmp    ecx,DWORD PTR [ebp+0x5e]
  415c9e:	gs add al,0x79
  415ca1:	pusha  
  415ca2:	jae    0x415cbd
  415ca4:	cwde   
  415ca5:	mov    edi,0xdb041b2c
  415caa:	or     ebp,edx
  415cac:	pop    eax
  415cad:	xor    eax,edx
  415caf:	jp     0x415ce7
  415cb1:	inc    ebp
  415cb2:	jecxz  0x415c9b
  415cb4:	add    ah,0x58
  415cb7:	scas   eax,DWORD PTR es:[edi]
  415cb8:	push   0xf41eb28
  415cbd:	addr16 sbb al,0x95
  415cc0:	add    eax,DWORD PTR [eax]
	...
  415d32:	add    BYTE PTR [eax],al
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0xe7f5:0x8321e72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [edx],dl
  415d4d:	pop    esi
  415d4e:	sbb    ebp,eax
  415d50:	clc    
  415d51:	push   ecx
  415d52:	retf   0xf17a
  415d55:	inc    eax
  415d56:	mov    ch,0xc8
  415d58:	in     al,dx
  415d59:	stc    
  415d5a:	xchg   dl,ch
  415d5c:	fidivr WORD PTR [ebp+0x344dd9bb]
  415d62:	scas   al,BYTE PTR es:[edi]
  415d63:	jno    0x415ddf
  415d65:	popa   
  415d66:	push   ecx
  415d67:	cs jle 0x415dd1
  415d6a:	sti    
  415d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d6c:	mov    ebx,0xa96f76ea
  415d71:	in     al,0x52
  415d73:	or     BYTE PTR [esi+edx*1+0x57656e19],ch
  415d7a:	dec    ebp
  415d7b:	fimul  WORD PTR [esi+edx*4-0x22bf2047]
  415d82:	call   DWORD PTR [ecx]
  415d84:	jle    0x415dba
  415d86:	cdq    
  415d87:	pushf  
  415d88:	retf   0x2a77
  415d8b:	pushf  
  415d8c:	pop    ebx
  415d8d:	pop    ds
  415d8e:	or     dh,bl
  415d90:	hlt    
  415d91:	push   ecx
  415d92:	cmp    esi,DWORD PTR [esi+eiz*8]
  415d95:	outs   dx,BYTE PTR ds:[esi]
  415d96:	xor    eax,0xda9adfe0
  415d9b:	dec    ebp
  415d9c:	sub    eax,0x48ff370d
  415da1:	adc    cl,BYTE PTR [ebx+0x13b18372]
  415da7:	push   edx
  415da8:	push   ss
  415da9:	imul   esi,DWORD PTR [esi-0x26f172bd],0xffffffa5
  415db0:	sub    edi,DWORD PTR [ebp-0x77]
  415db3:	inc    ebx
  415db4:	clc    
  415db5:	xchg   edi,eax
  415db6:	in     al,0x1e
  415db8:	inc    ebp
  415db9:	pop    ss
  415dba:	add    esi,ebx
  415dbc:	mov    dh,0x8d
  415dbe:	mov    al,0x3f
  415dc0:	adc    al,0xbd
  415dc2:	pop    ebx
  415dc3:	call   0xbd223393
  415dc8:	add    cl,BYTE PTR [ecx+0x57c0a03a]
  415dce:	fsubr  DWORD PTR [edx]
  415dd0:	pop    eax
  415dd1:	das    
  415dd2:	jns    0x415d59
  415dd4:	inc    eax
  415dd5:	das    
  415dd6:	dec    edi
  415dd7:	adc    ecx,DWORD PTR [edi+edi*1-0x7d]
  415ddb:	push   eax
  415ddc:	push   es
  415ddd:	js     0x415d81
  415ddf:	call   0x32222d38
  415de4:	rcr    cl,1
  415de6:	repz xlat BYTE PTR ds:[ebx]
  415de8:	enter  0x648e,0x23
  415dec:	jmp    FWORD PTR [edx]
  415dee:	add    eax,0x165d3b31
  415df3:	and    dh,al
  415df5:	enter  0x99a,0xe6
  415df9:	int3   
  415dfa:	cmp    DWORD PTR [edx+0x29],edi
  415dfd:	sbb    edx,DWORD PTR [ebx-0x180cbd17]
  415e03:	cli    
  415e04:	xchg   edx,eax
  415e05:	repnz sti 
  415e07:	bound  esp,QWORD PTR [edx-0x66]
  415e0a:	retf   0x264e
  415e0d:	out    0x24,al
  415e0f:	mov    al,ds:0x9acb0e9
  415e14:	imul   ebp,edi,0xf
  415e17:	repz jle 0x415e01
  415e1a:	adc    BYTE PTR [edx-0x4b6f227d],bl
  415e20:	adc    DWORD PTR [ecx],ebp
  415e22:	aad    0x25
  415e24:	xchg   ebx,eax
  415e25:	jae    0x415e82
  415e27:	adc    edx,DWORD PTR [edx-0xd0e2357]
  415e2d:	mov    ebp,ecx
  415e2f:	jl     0x415e9c
  415e31:	(bad)  
  415e32:	(bad)  
  415e33:	in     eax,dx
  415e34:	bound  eax,QWORD PTR [esi+0x1467f96c]
  415e3a:	sahf   
  415e3b:	dec    eax
  415e3c:	xor    cl,BYTE PTR [edi+0xa2154a]
	...
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs retf 
  415ec1:	inc    esi
  415ec2:	arpl   WORD PTR [ebx],sp
  415ec4:	adc    esi,eax
  415ec6:	add    BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    BYTE PTR [edx],ch
  415ecd:	cmp    ecx,esi
  415ecf:	ret    
  415ed0:	xchg   edx,eax
  415ed1:	ficomp WORD PTR [ecx]
  415ed3:	pop    ss
  415ed4:	stos   DWORD PTR es:[edi],eax
  415ed5:	cwde   
  415ed6:	sub    BYTE PTR [edx-0x3a],dh
  415ed9:	arpl   WORD PTR [eax],bp
  415edb:	cmp    bh,bl
  415edd:	cmp    esi,edx
  415edf:	pop    eax
  415ee0:	push   esi
  415ee1:	lock pop edx
  415ee3:	mov    BYTE PTR [eax],bh
  415ee5:	and    ah,0x30
  415ee8:	sahf   
  415ee9:	imul   edx,DWORD PTR [edx+0x33460edb],0xffffffd6
  415ef0:	(bad)  
  415ef1:	daa    
  415ef2:	inc    edi
  415ef3:	icebp  
  415ef4:	lods   eax,DWORD PTR ds:[esi]
  415ef5:	repz or al,0x50
  415ef8:	je     0x415ed7
  415efa:	adc    DWORD PTR ds:0x6667494b,ebx
  415f00:	(bad)  
  415f01:	xor    cl,BYTE PTR [ecx-0x26da5dc2]
  415f07:	(bad)  
  415f09:	sti    
  415f0a:	push   ds
  415f0b:	popa   
  415f0c:	out    dx,eax
  415f0d:	cmp    al,0x74
  415f0f:	inc    esi
  415f10:	iret   
  415f11:	mov    es,WORD PTR [esi-0x5b3cd61f]
  415f17:	dec    ecx
  415f18:	dec    ebp
  415f19:	into   
  415f1a:	(bad)  
  415f1b:	(bad)  
  415f1d:	repnz mov ch,0x9b
  415f20:	imul   DWORD PTR [ebx-0x32]
  415f23:	in     al,dx
  415f24:	pop    eax
  415f25:	and    eax,0x37439cc9
  415f2a:	in     eax,dx
  415f2b:	imul   esi,ebp,0xda53ed8b
  415f31:	xchg   DWORD PTR [ebx-0x8],ebx
  415f34:	dec    esi
  415f35:	adc    BYTE PTR [eax-0x65875c8f],bl
  415f3b:	cs cld 
  415f3d:	scas   al,BYTE PTR es:[edi]
  415f3e:	clc    
  415f3f:	retf   0xc987
  415f42:	cmp    esp,DWORD PTR [edx+eiz*4+0x485531cb]
  415f49:	stos   DWORD PTR es:[edi],eax
  415f4a:	hlt    
  415f4b:	or     al,0xa9
  415f4d:	sub    eax,0x40152466
  415f52:	add    al,0x70
  415f54:	pop    edx
  415f55:	bound  ebx,QWORD PTR [esi-0x72235919]
  415f5b:	rcl    BYTE PTR [edi-0xfd4a3e6],0x7d
  415f62:	push   0x7e
  415f64:	cmp    al,0x96
  415f66:	je     0x415fe3
  415f68:	out    0xe,al
  415f6a:	xchg   esi,eax
  415f6b:	jle    0x415f03
  415f6d:	sbb    BYTE PTR [esi-0x3fc9b44d],bh
  415f73:	aaa    
  415f74:	lock leave 
  415f76:	lea    esp,[ebp-0x6a729085]
  415f7c:	enter  0x44e5,0xfe
  415f80:	inc    eax
  415f81:	push   0x12
  415f83:	add    ch,BYTE PTR [ecx-0x46]
  415f86:	enter  0xf1d4,0xaf
  415f8a:	dec    ecx
  415f8b:	repnz sub DWORD PTR [ebp-0x68],ebp
  415f8f:	fwait
  415f90:	jnp    0x415f7c
  415f92:	inc    esp
  415f93:	scas   al,BYTE PTR es:[edi]
  415f94:	inc    ebx
  415f95:	sahf   
  415f96:	jne    0x415f6f
  415f98:	xor    BYTE PTR [edi+0x6f],ah
  415f9b:	sbb    eax,0xb0a107d0
  415fa0:	jl     0x415ff0
  415fa2:	in     eax,dx
  415fa3:	fs push esi
  415fa5:	add    BYTE PTR [ecx+0x27d5fcd6],bh
  415fab:	mov    ds:0x2f760bd6,al
  415fb0:	fistp  QWORD PTR ds:0x25b77eda
  415fb6:	inc    eax
  415fb7:	lock inc edi
  415fb9:	js     0x415f88
  415fbb:	push   edi
  415fbc:	mov    cl,0x11
  415fbe:	scas   eax,DWORD PTR es:[edi]
  415fbf:	fimul  WORD PTR [esi]
	...
  416031:	add    BYTE PTR [eax],al
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   ecx,DWORD PTR [eax+0x8e75830],0xfffffff1
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    ch,cl
  41604d:	nop
  41604e:	dec    ebp
  41604f:	cmp    al,0x58
  416051:	lods   al,BYTE PTR ds:[esi]
  416052:	paddsw mm7,QWORD PTR [edx*8+0x2b822003]
  41605a:	cs mov ecx,0x1ee84d9e
  416060:	into   
  416061:	repz loop 0x41602c
  416064:	pop    edx
  416065:	mov    dh,0x30
  416067:	aaa    
  416068:	stc    
  416069:	lods   al,BYTE PTR ds:[esi]
  41606a:	push   ecx
  41606b:	ds repz je 0x41600a
  41606f:	mov    eax,ds:0xebdf40ff
  416074:	scas   eax,DWORD PTR es:[edi]
  416075:	clc    
  416076:	sub    DWORD PTR [ebp+0x54a2172],edi
  41607c:	les    esi,FWORD PTR [edi-0x4]
  41607f:	xchg   esp,eax
  416080:	mov    esp,ebx
  416082:	lahf   
  416083:	jnp    0x416021
  416085:	ss imul edx,esp,0x1f
  416089:	sbb    DWORD PTR [esi+0x3bc23a6f],ebp
  41608f:	aas    
  416090:	(bad)  
  416091:	repz cmp eax,0xc9a7a0e9
  416097:	push   ecx
  416098:	adc    ch,BYTE PTR [eax]
  41609a:	inc    si
  41609c:	retf   
  41609d:	test   DWORD PTR [edx],ebp
  41609f:	mov    bh,bl
  4160a1:	test   al,0x4b
  4160a3:	sahf   
  4160a4:	xchg   DWORD PTR [edi+0x0],ebp
  4160a7:	inc    edx
  4160a8:	push   ebp
  4160a9:	popa   
  4160aa:	das    
  4160ab:	call   0xa433:0x8720348d
  4160b2:	dec    ebp
  4160b3:	and    edx,eax
  4160b5:	push   ebp
  4160b6:	mov    bl,dh
  4160b8:	cmp    eax,DWORD PTR ds:0xbb5a5d08
  4160be:	dec    esi
  4160bf:	fwait
  4160c0:	addr16 es jle 0x416055
  4160c4:	fs test eax,0xc1fcb1e7
  4160ca:	sub    eax,DWORD PTR [ecx]
  4160cc:	push   esp
  4160cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ce:	sub    cl,ch
  4160d0:	cmp    bl,BYTE PTR [edi+0x63bcc87a]
  4160d6:	fnstsw WORD PTR [edx+edi*4-0x2279fb80]
  4160dd:	mov    ecx,esi
  4160df:	(bad)  
  4160e1:	jae    0x416091
  4160e3:	clc    
  4160e4:	ret    
  4160e5:	test   BYTE PTR [ecx+0x7d],ah
  4160e8:	inc    ecx
  4160e9:	sahf   
  4160ea:	mov    gs,ebp
  4160ec:	inc    esp
  4160ed:	int    0xe3
  4160ef:	mov    esi,0x56519c11
  4160f4:	(bad)  
  4160f5:	test   al,0xe1
  4160f7:	pop    ds
  4160f8:	xchg   edx,eax
  4160f9:	lahf   
  4160fa:	into   
  4160fb:	dec    ebx
  4160fc:	mov    cl,BYTE PTR [edi]
  4160fe:	enter  0xf15a,0x7e
  416102:	sub    BYTE PTR [eax],ah
  416104:	xor    bh,cl
  416106:	push   ebp
  416107:	xchg   edi,eax
  416108:	jg     0x4160a8
  41610a:	fsub   DWORD PTR [ebx+0x10]
  41610d:	pop    ecx
  41610e:	pusha  
  41610f:	ins    DWORD PTR es:[edi],dx
  416110:	sub    al,0xc4
  416112:	rcr    ah,cl
  416114:	push   0xffffff98
  416116:	xor    esi,DWORD PTR [eax]
  416118:	mov    WORD PTR [ebp+0x43],gs
  41611b:	fadd   QWORD PTR [esi+0x7ce1ccef]
  416121:	fistp  QWORD PTR ss:[edx+0x37]
  416125:	mov    WORD PTR [esi+0x67b5e00a],es
  41612b:	test   eax,0xd70f9d95
  416130:	add    BYTE PTR [esi-0x43],cl
  416133:	nop    DWORD PTR [edx]
  416136:	les    ebp,FWORD PTR [ecx]
  416138:	jns    0x4160fa
  41613a:	jno    0x416146
  41613c:	adc    bl,BYTE PTR [ebp+0xfd410b]
	...
  4161b2:	add    BYTE PTR [eax],al
  4161b4:	sub    al,0x97
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    edi,DWORD PTR [edi-0x74]
  4161c2:	mov    bh,0x4f
  4161c4:	std    
  4161c5:	icebp  
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    BYTE PTR [ebp+ebx*1-0x589136fc],ch
  4161d2:	call   0x2932:0x7afb0a9b
  4161d9:	cmc    
  4161da:	outs   dx,DWORD PTR ds:[esi]
  4161db:	lea    esp,ds:0xc3805494
  4161e2:	in     al,0xfa
  4161e4:	inc    edi
  4161e5:	cmc    
  4161e6:	add    eax,0x300816cc
  4161eb:	mov    eax,ds:0x1030571e
  4161f0:	mov    BYTE PTR [edx+0x75],bh
  4161f3:	push   0x4a
  4161f5:	add    dh,BYTE PTR es:[edx+0x48514374]
  4161fc:	xor    al,0x87
  4161fe:	or     al,BYTE PTR [eax+0x7a]
  416201:	aam    0xf7
  416203:	sbb    esi,ebx
  416205:	xor    DWORD PTR [eax+0x1f],0xffffffe0
  416209:	lods   al,BYTE PTR ds:[esi]
  41620a:	jp     0x4161d6
  41620c:	or     BYTE PTR [esi],cl
  41620e:	mov    bl,0xfc
  416210:	jl     0x4161b5
  416212:	(bad)  
  416213:	push   ecx
  416214:	cmc    
  416215:	pop    ebp
  416216:	outs   dx,DWORD PTR ds:[esi]
  416217:	icebp  
  416218:	out    dx,al
  416219:	adc    dl,BYTE PTR [ebx+0x73ae64cd]
  41621f:	into   
  416220:	mov    cl,ah
  416222:	push   esp
  416223:	mov    bl,0x2d
  416225:	and    bh,BYTE PTR [eax+0x34db4e56]
  41622b:	aad    0x11
  41622d:	ss stos DWORD PTR es:[edi],eax
  41622f:	int    0x50
  416231:	or     ah,al
  416233:	repnz fdivr QWORD PTR [ecx-0xe]
  416237:	lods   al,BYTE PTR ds:[esi]
  416238:	xchg   esp,eax
  416239:	inc    ebx
  41623a:	adc    eax,0xa0f64d94
  41623f:	dec    eax
  416240:	xor    BYTE PTR [ecx],cl
  416242:	mov    ah,0x25
  416244:	mov    esi,0xc08dad42
  416249:	dec    ebx
  41624a:	xor    ebx,esp
  41624c:	mov    esp,0x37f21171
  416251:	(bad)  
  416253:	lock sbb DWORD PTR [esi],edi
  416256:	dec    ebx
  416257:	(bad)
  41625a:	mov    WORD PTR fs:[ebp+0x2f9a855],cs
  416261:	enter  0x97f6,0x66
  416265:	(bad)  
  416266:	jae    0x41625c
  416268:	sub    eax,0x145ada18
  41626d:	cmp    ebx,DWORD PTR [ebp+0x77]
  416270:	out    0xcf,eax
  416272:	pushf  
  416273:	call   eax
  416275:	pop    ss
  416276:	jle    0x416253
  416278:	fistp  QWORD PTR [edx+0x94029f6]
  41627e:	mov    ebx,DWORD PTR [edi-0x431ec8ce]
  416284:	xchg   esi,eax
  416285:	dec    eax
  416286:	jecxz  0x416271
  416288:	sahf   
  416289:	fs aas 
  41628b:	mov    cl,0xe9
  41628d:	push   edx
  41628e:	or     BYTE PTR [edi+0x1260249a],dl
  416294:	or     eax,0x8a76b82b
  416299:	and    ebp,eax
  41629b:	out    dx,al
  41629c:	cmp    ah,BYTE PTR [eax+eax*2+0x53]
  4162a0:	stc    
  4162a1:	add    dh,dl
  4162a3:	call   0xcefc573a
  4162a8:	in     al,0x87
  4162aa:	mov    al,0x8a
  4162ac:	pop    ebp
  4162ad:	into   
  4162ae:	je     0x4162d8
  4162b0:	pusha  
  4162b1:	xchg   edi,eax
  4162b2:	das    
  4162b3:	mov    esi,0x9e5651b7
  4162b8:	add    eax,0x29439e98
  4162bd:	adc    eax,0x5e8806
	...
  416332:	add    BYTE PTR [eax],al
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	lock repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fst    QWORD PTR [edi-0xd481210]
  416345:	repnz add BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    BYTE PTR [ebx+eax*4],ah
  41634e:	test   DWORD PTR [edx],esp
  416350:	push   ecx
  416351:	int3   
  416352:	sbb    al,0xa0
  416354:	ficomp WORD PTR [edi-0x1c]
  416357:	or     esi,esi
  416359:	ficomp WORD PTR [ebx+ebp*8]
  41635c:	dec    ebx
  41635d:	int    0xfc
  41635f:	cmp    edi,ecx
  416361:	(bad)  
  416362:	cmp    eax,0x91070402
  416367:	call   DWORD PTR [eax-0x6f]
  41636a:	call   0x8c0cf1be
  41636f:	rcl    BYTE PTR [esi],cl
  416371:	cmp    DWORD PTR [esi],ebx
  416373:	pop    ecx
  416374:	ins    BYTE PTR es:[edi],dx
  416375:	mov    dh,0xc8
  416377:	inc    ebp
  416378:	xor    al,0xfa
  41637a:	adc    dh,ah
  41637c:	mov    bh,0x3a
  41637e:	je     0x416385
  416380:	push   es
  416381:	pushf  
  416382:	inc    ebx
  416383:	dec    edx
  416384:	iret   
  416385:	jae    0x416404
  416387:	cdq    
  416388:	push   eax
  416389:	(bad)  
  41638c:	xchg   DWORD PTR [ebp+0x14dd60a1],esp
  416392:	mov    WORD PTR [ebx+0x76],ds
  416395:	lahf   
  416396:	add    BYTE PTR [eax+0x4d1e5705],0xde
  41639d:	push   0xc1463a75
  4163a2:	lock or bx,si
  4163a6:	or     ch,BYTE PTR [esi-0x80]
  4163a9:	mov    ecx,0xde757e02
  4163ae:	cmp    al,0x76
  4163b0:	dec    esi
  4163b1:	rcl    BYTE PTR [ecx+esi*1],cl
  4163b4:	aam    0xe1
  4163b6:	inc    ecx
  4163b7:	scas   eax,DWORD PTR es:[edi]
  4163b8:	call   0xa5840219
  4163bd:	(bad)  
  4163be:	push   esi
  4163bf:	jo     0x4163cc
  4163c1:	addr16 dec esp
  4163c3:	dec    ebp
  4163c4:	sub    BYTE PTR [edi],dl
  4163c6:	test   bh,cl
  4163c8:	jnp    0x416429
  4163ca:	sub    dh,BYTE PTR [esi+esi*8-0x3a]
  4163ce:	loopne 0x4163e4
  4163d0:	jne    0x4163fb
  4163d2:	sub    eax,0xd523d38c
  4163d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d8:	xchg   ebp,eax
  4163d9:	fs pop es
  4163db:	inc    esp
  4163dc:	out    0x4c,al
  4163de:	loope  0x4163d7
  4163e0:	lea    esi,[edi]
  4163e2:	jmp    0xd176:0x708cbcd0
  4163e9:	sti    
  4163ea:	sub    BYTE PTR [ebx],dh
  4163ec:	popf   
  4163ed:	and    BYTE PTR [edx+eax*1+0x276b8436],bl
  4163f4:	push   eax
  4163f5:	dec    edi
  4163f6:	int3   
  4163f7:	vp2intersectq k0{k2},xmm4,XMMWORD PTR [ecx-0x190]
  4163fe:	rcl    DWORD PTR [edi],0x17
  416401:	fiadd  DWORD PTR [eax+0x157c0752]
  416407:	popa   
  416408:	inc    edi
  416409:	mulps  xmm1,XMMWORD PTR [edx+0x23]
  41640d:	sbb    ch,BYTE PTR ds:0xcf918a19
  416413:	retf   0x9d08
  416416:	push   0x15
  416418:	test   al,0x65
  41641a:	lock and dh,BYTE PTR [eax+0x1962c37a]
  416421:	inc    ebp
  416422:	in     al,dx
  416423:	ss scas eax,DWORD PTR es:[edi]
  416425:	data16 or dl,BYTE PTR [edi-0x1b]
  416429:	shr    WORD PTR [ecx+0x0],1
  41642d:	xlat   BYTE PTR ds:[ebx]
  41642e:	jge    0x4164a5
  416430:	rol    DWORD PTR [edi-0x4c93456c],cl
  416436:	adc    BYTE PTR [esi],ah
  416438:	mov    eax,DWORD PTR [ebx-0x18]
  41643b:	adc    BYTE PTR [ebp-0x5ee4eaf6],bl
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	xor    dl,BYTE PTR [esi+0x2b]
  4164c3:	mov    cl,0xe7
  4164c5:	repz add BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [edx],ch
  4164cd:	mov    ?,ebp
  4164cf:	(bad)  [edi-0x289ee43f]
  4164d5:	shr    DWORD PTR [ebp+ebx*4+0x23],1
  4164d9:	push   ecx
  4164da:	push   es
  4164db:	pop    ds
  4164dc:	mov    BYTE PTR [edx+0x78],0x66
  4164e0:	mov    bl,bh
  4164e2:	ret    
  4164e3:	je     0x4164d0
  4164e5:	mov    esi,0xfb82af06
  4164ea:	dec    ecx
  4164eb:	sahf   
  4164ec:	push   esi
  4164ed:	mov    ch,0x51
  4164ef:	pusha  
  4164f0:	mov    esp,0x998153f
  4164f5:	mov    dh,0x57
  4164f7:	enter  0x3fb4,0x3e
  4164fb:	nop
  4164fc:	inc    esi
  4164fd:	cdq    
  4164fe:	push   ds
  4164ff:	in     al,0xfb
  416501:	mov    ds:0xde9cc5af,al
  416506:	cmp    BYTE PTR [ecx+0x25195aa1],ch
  41650c:	repz fsubr QWORD PTR [edi+0x7c41e61a]
  416513:	not    DWORD PTR [ebx+0x2404078e]
  416519:	fdivr  DWORD PTR [esi+edi*8-0x8dc4f5c]
  416520:	mov    esp,0x69635ec6
  416525:	(bad)  
  416526:	iret   
  416527:	cmp    bh,BYTE PTR [edx-0x12]
  41652a:	leave  
  41652b:	sti    
  41652c:	push   0xde2b7dd2
  416531:	push   esp
  416532:	adc    edi,DWORD PTR [eax-0x7d]
  416535:	mov    dl,0x42
  416537:	mov    esp,0x9855249a
  41653c:	push   esi
  41653d:	shl    ebp,cl
  41653f:	xchg   edx,eax
  416540:	rcr    BYTE PTR [edi+0x3fbfdbf5],0xb1
  416547:	(bad)  
  416548:	jbe    0x41655c
  41654a:	jno    0x41651d
  41654c:	out    dx,al
  41654d:	pop    esp
  41654e:	add    al,dh
  416550:	rcr    BYTE PTR [eax-0x7d],0x55
  416554:	cmp    eax,esi
  416556:	inc    eax
  416557:	or     DWORD PTR [edi],ebx
  416559:	shl    DWORD PTR [ebp+ebx*4+0x37],0xc1
  41655e:	fsubr  st,st(3)
  416560:	pop    es
  416561:	jmp    0x4165ae
  416563:	mov    bh,dl
  416565:	mov    bl,BYTE PTR [esi]
  416567:	mov    eax,ds:0xeb532c07
  41656c:	cmp    eax,0xd27f5f36
  416571:	and    dl,BYTE PTR [ebp-0x3c]
  416574:	repz icebp 
  416576:	add    eax,0xa34fc9b9
  41657b:	shl    DWORD PTR [ecx],cl
  41657d:	test   al,0x55
  41657f:	leave  
  416580:	add    ebp,0x74cd299d
  416586:	lea    esp,[ebx+0x6033b4bc]
  41658c:	xlat   BYTE PTR ds:[ebx]
  41658d:	dec    edx
  41658e:	dec    edx
  41658f:	fs mov edx,0x5706fbac
  416595:	ss inc edx
  416597:	es pop ebx
  416599:	push   ebx
  41659a:	outs   dx,DWORD PTR ds:[esi]
  41659b:	mov    ds:0x66728049,al
  4165a0:	dec    esp
  4165a1:	jno    0x4165d9
  4165a3:	cwde   
  4165a4:	not    DWORD PTR [ebp-0x18833d4f]
  4165aa:	loope  0x416602
  4165ac:	lahf   
  4165ad:	xchg   esp,eax
  4165ae:	es xor ah,BYTE PTR gs:[bp+si+0x53d4]
  4165b5:	mov    BYTE PTR [edx-0x277dd2cf],0xee
  4165bc:	xor    DWORD PTR [eax],ecx
  4165be:	dec    edi
  4165bf:	test   eax,0x7e
	...
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0x82
  416641:	push   ecx
  416642:	int    0x44
  416644:	fdivr  st(4),st
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [ebx-0x227eef8e],bh
  416651:	(bad)  
  416652:	ins    DWORD PTR es:[edi],dx
  416653:	push   ss
  416654:	sub    esp,DWORD PTR [eax-0x508b5cd6]
  41665a:	dec    ecx
  41665b:	test   si,sp
  41665e:	or     edi,edi
  416660:	xchg   ebx,eax
  416661:	add    ebx,DWORD PTR [edx]
  416663:	out    dx,al
  416664:	and    eax,0xd04aef6c
  416669:	jmp    0x416619
  41666b:	arpl   bp,si
  41666d:	inc    esi
  41666e:	into   
  41666f:	jno    0x4166ee
  416671:	repz cld 
  416673:	dec    esi
  416674:	push   ds
  416675:	push   0x21f1cc3f
  41667a:	aam    0x89
  41667c:	ja     0x4166ee
  41667e:	jl     0x4166a0
  416680:	call   0x6c97:0x1d9bd28f
  416687:	inc    ebp
  416688:	cdq    
  416689:	xor    dh,dl
  41668b:	out    0xe,eax
  41668d:	dec    eax
  41668e:	pusha  
  41668f:	mov    ch,0xf8
  416691:	shl    BYTE PTR [esi+0x3a],0x9c
  416695:	jnp    0x41666f
  416697:	jbe    0x4166d3
  416699:	(bad)  
  41669a:	sbb    BYTE PTR [edi],bh
  41669c:	jl     0x4166c0
  41669e:	adc    BYTE PTR [ebp-0x2d752054],bl
  4166a4:	xor    cl,BYTE PTR [ebp+0x48f197f]
  4166aa:	inc    ebp
  4166ab:	push   0x11
  4166ad:	push   es
  4166ae:	mov    ebx,edx
  4166b0:	int3   
  4166b1:	pop    ebp
  4166b2:	int    0x61
  4166b4:	ret    
  4166b5:	pop    ecx
  4166b6:	mov    WORD PTR [ebx],cs
  4166b8:	sub    DWORD PTR [ebx-0xeb4a41a],ebp
  4166be:	cli    
  4166bf:	sub    dh,BYTE PTR [ebp-0xa7fb14b]
  4166c5:	loop   0x41673e
  4166c7:	inc    esp
  4166c8:	dec    edi
  4166c9:	leave  
  4166ca:	cmp    eax,DWORD PTR [edx+0x6170c963]
  4166d0:	mov    dl,0xd0
  4166d2:	aaa    
  4166d3:	and    ebp,DWORD PTR [ebp+0x3e]
  4166d6:	daa    
  4166d7:	daa    
  4166d8:	(bad)  
  4166d9:	pop    eax
  4166da:	inc    ecx
  4166db:	and    eax,0x2cb5caac
  4166e0:	ins    BYTE PTR es:[edi],dx
  4166e1:	out    0x3d,al
  4166e3:	add    eax,0x2fcd3650
  4166e8:	imul   ecx,DWORD PTR [ebx-0x3f],0x67
  4166ec:	scas   eax,DWORD PTR es:[edi]
  4166ed:	(bad)  
  4166ee:	shl    BYTE PTR [eax+0x38eec083],0x3e
  4166f5:	outs   dx,BYTE PTR ds:[esi]
  4166f6:	mov    bh,0x24
  4166f8:	das    
  4166f9:	loopne 0x416748
  4166fb:	sbb    al,0x70
  4166fd:	jno    0x416686
  4166ff:	pushf  
  416700:	adc    al,BYTE PTR ds:0xab5eec16
  416706:	test   eax,0x717e74b5
  41670b:	mov    esi,0xc6ed5fd8
  416710:	sub    edx,DWORD PTR ds:0xe1084e51
  416716:	stc    
  416717:	push   ecx
  416718:	sbb    DWORD PTR [edx-0x7ee84d40],esi
  41671e:	push   ds
  41671f:	cmp    DWORD PTR [ebx-0x2a],esp
  416722:	xchg   esi,eax
  416723:	mov    edx,0xfa23de21
  416728:	mov    ebx,0xf4a12f30
  41672d:	lods   eax,DWORD PTR ds:[esi]
  41672e:	and    edx,ebp
  416730:	add    DWORD PTR [edx],ebp
  416732:	pop    edi
  416733:	lahf   
  416734:	pop    edx
  416735:	pop    es
  416736:	lahf   
  416737:	icebp  
  416738:	cld    
  416739:	cmp    esp,DWORD PTR [ecx-0x3f]
  41673c:	imul   eax,DWORD PTR [esi+esi*4+0xdb9],0x0
	...
  4167b3:	add    bl,cl
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm7,DWORD PTR [ecx-0x2ef73c08]
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [ecx-0x4e2aa82f],al
  4167d1:	in     al,dx
  4167d2:	inc    ebx
  4167d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d4:	adc    eax,DWORD PTR [ebx]
  4167d6:	xor    BYTE PTR ss:[ebx],dl
  4167d9:	(bad)  
  4167db:	cwde   
  4167dc:	dec    ecx
  4167dd:	dec    ebp
  4167de:	rcl    WORD PTR [bx-0x40b3],0x17
  4167e5:	mov    ebp,0x6b117de6
  4167ea:	mov    fs,WORD PTR [edi]
  4167ec:	mov    edx,0x89d1a65e
  4167f1:	xchg   ebx,eax
  4167f2:	sbb    eax,0x90470108
  4167f7:	dec    ecx
  4167f8:	add    BYTE PTR [ecx+ecx*1-0x6f],dh
  4167fc:	xor    edi,eax
  4167fe:	dec    eax
  4167ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416800:	xor    al,0xef
  416802:	ds pop ss
  416804:	ja     0x416853
  416806:	jmp    0x9f4d:0xabcd8446
  41680d:	push   0x4f
  41680f:	adc    BYTE PTR [ecx],ah
  416811:	xchg   esi,eax
  416812:	cmp    ebx,DWORD PTR [eax+0x57]
  416815:	fst    st(6)
  416818:	mov    esp,0x79153194
  41681d:	cmp    DWORD PTR [edi+edx*2+0x35],edx
  416821:	mov    ds,esp
  416823:	out    dx,eax
  416824:	mov    ebp,0xc048fb57
  416829:	jne    0x416807
  41682b:	pusha  
  41682c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682d:	sbb    ebx,DWORD PTR [ebp+0x6f]
  416830:	pop    ebp
  416831:	dec    DWORD PTR [ecx-0x17]
  416834:	or     al,0x2b
  416836:	push   esi
  416837:	push   0x32
  416839:	ja     0x41680a
  41683b:	into   
  41683c:	fucomp st(1)
  41683e:	pop    ecx
  41683f:	lock lea ebp,[eax+edx*2+0x31]
  416844:	push   cs
  416845:	out    dx,eax
  416846:	jp     0x4167fc
  416848:	fdivr  st,st(3)
  41684a:	test   DWORD PTR [edx],0x426b9a4f
  416850:	das    
  416851:	inc    edx
  416852:	push   0x3d44db78
  416857:	shl    DWORD PTR [ebp+0x779a2d54],cl
  41685d:	jg     0x416875
  41685f:	or     edx,DWORD PTR [edi+0x50]
  416862:	sti    
  416863:	pop    edi
  416864:	test   al,0xe
  416866:	pop    ebp
  416867:	jecxz  0x4168b5
  416869:	jb     0x4168e1
  41686b:	or     BYTE PTR [ebp-0x27],0xc8
  41686f:	sti    
  416870:	cld    
  416871:	repnz mov DWORD PTR [esi+0x11f54191],0x6df8b7f9
  41687c:	pop    ebp
  41687d:	push   ecx
  41687e:	add    ah,ah
  416880:	clc    
  416881:	repnz fiadd WORD PTR ds:0x7a5480cd
  416888:	push   ds
  416889:	rep lods eax,DWORD PTR ds:[esi]
  41688b:	stos   DWORD PTR es:[edi],eax
  41688c:	dec    ebx
  41688d:	jmp    0x4168c0
  41688f:	loope  0x41684e
  416891:	call   0x80f3:0xc854f409
  416898:	xchg   edx,eax
  416899:	adc    DWORD PTR [ecx+ecx*8],ecx
  41689c:	xchg   esi,eax
  41689d:	in     al,0x5e
  41689f:	xor    ah,BYTE PTR [edx+0x5324af01]
  4168a5:	icebp  
  4168a6:	adc    DWORD PTR [esi+0x12],esp
  4168a9:	fidivr DWORD PTR [ebp-0x17cbc39c]
  4168af:	cli    
  4168b0:	scas   eax,DWORD PTR es:[edi]
  4168b1:	ins    BYTE PTR es:[edi],dx
  4168b2:	add    ecx,DWORD PTR [ebx+0x2e]
  4168b5:	jne    0x416892
  4168b7:	cdq    
  4168b8:	popa   
  4168b9:	data16 jecxz 0x416862
  4168bc:	push   ss
  4168bd:	add    al,BYTE PTR [esi+0x6ec4]
	...
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [esi],edx
  416941:	sbb    al,0x7
  416943:	mov    eax,esi
  416945:	test   BYTE PTR [eax],0x0
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    cl,cl
  41694d:	xlat   BYTE PTR ds:[ebx]
  41694e:	sbb    bh,BYTE PTR [ecx]
  416950:	aam    0x6b
  416952:	pop    esi
  416953:	(bad)  
  416954:	cmp    DWORD PTR [ebx+edx*2-0x58dacf1f],esp
  41695b:	add    DWORD PTR [edi-0x381989e7],esp
  416961:	cmp    cl,BYTE PTR [esi+0x46]
  416964:	cmp    dh,cl
  416966:	pop    es
  416967:	dec    edx
  416968:	cmp    BYTE PTR [eax+0x718f745d],dh
  41696e:	jle    0x416946
  416970:	inc    edi
  416971:	adc    DWORD PTR [edi+0x5c3130b],0xffffff83
  416978:	cmp    BYTE PTR [ecx],bh
  41697a:	nop
  41697b:	aam    0x5e
  41697d:	mov    WORD PTR [ebp+eax*2-0x35],ds
  416981:	js     0x416980
  416983:	pusha  
  416984:	mov    dl,0x61
  416986:	xor    BYTE PTR [edx],0x41
  416989:	sti    
  41698a:	dec    edi
  41698b:	addr16 jl 0x416937
  41698e:	sub    esi,DWORD PTR [esi]
  416990:	cwde   
  416991:	int    0x8f
  416993:	xor    eax,0xa28960d7
  416998:	jnp    0x4169da
  41699a:	pushf  
  41699b:	jp     0x4169d8
  41699d:	sub    ebp,ecx
  41699f:	in     al,0x3f
  4169a1:	cmp    eax,0xda104b1b
  4169a6:	mov    BYTE PTR [ebx+0x3a814906],dl
  4169ac:	push   0x4a09e11f
  4169b1:	mov    dh,0x11
  4169b3:	stc    
  4169b4:	aam    0xd1
  4169b6:	jecxz  0x416963
  4169b8:	aaa    
  4169b9:	jp     0x416a1c
  4169bb:	or     eax,0xa0033ddd
  4169c0:	es in  al,dx
  4169c2:	outs   dx,BYTE PTR ds:[esi]
  4169c3:	jmp    0xf9e4061d
  4169c8:	inc    esi
  4169c9:	enter  0x5da3,0x47
  4169cd:	adc    eax,0x19faa4b1
  4169d2:	cmp    esi,DWORD PTR es:[ecx]
  4169d5:	arpl   cx,dx
  4169d7:	mov    ah,0xd5
  4169d9:	mov    edx,0x792299fa
  4169de:	cwde   
  4169df:	or     BYTE PTR [edx-0x32dcae59],al
  4169e5:	adc    esi,DWORD PTR [ebx-0x9e13a8f]
  4169eb:	stos   DWORD PTR es:[edi],eax
  4169ec:	sahf   
  4169ed:	pop    esi
  4169ee:	push   cs
  4169ef:	loop   0x4169c8
  4169f1:	or     DWORD PTR [ecx],ebp
  4169f3:	fdivr  st(4),st
  4169f5:	iret   
  4169f6:	xor    eax,0x26513853
  4169fb:	aam    0xc3
  4169fd:	xchg   edi,eax
  4169fe:	sar    DWORD PTR [edi-0x68510d41],cl
  416a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a05:	add    ebp,DWORD PTR [esi-0x6fd6432]
  416a0b:	cld    
  416a0c:	jle    0x4169b0
  416a0e:	(bad)
  416a11:	jmp    0xc43f6e66
  416a16:	rcr    cl,cl
  416a18:	mov    ds:0xd30360a3,al
  416a1d:	dec    ebx
  416a1e:	mov    edi,0x1f68ff7e
  416a23:	or     DWORD PTR [ecx+0x64556961],edx
  416a29:	pop    es
  416a2a:	cld    
  416a2b:	cmp    edi,0x5d
  416a2e:	daa    
  416a2f:	or     al,0x70
  416a31:	inc    edi
  416a32:	pusha  
  416a33:	add    cl,BYTE PTR [eax+0x4a]
  416a36:	aad    0x28
  416a38:	lds    esp,FWORD PTR [esi+0x7d6a4981]
  416a3e:	sub    esp,DWORD PTR [ebp+0x50]
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x1b23b652]
  416ac3:	lods   al,BYTE PTR ds:[esi]
  416ac4:	mov    ebx,0xf50000f7
  416ac9:	add    BYTE PTR [eax],al
  416acb:	add    BYTE PTR [esi+0x11],ch
  416ace:	(bad)  
  416acf:	dec    esi
  416ad0:	sti    
  416ad1:	je     0x416aea
  416ad3:	cmc    
  416ad4:	pop    ebx
  416ad5:	and    BYTE PTR [eax+0x1d8a3cd4],dh
  416adb:	(bad)  
  416adc:	mov    ah,bl
  416ade:	inc    ebp
  416adf:	fs in  al,dx
  416ae1:	outs   dx,DWORD PTR ds:[esi]
  416ae2:	mov    BYTE PTR [eax],bh
  416ae4:	mov    bh,0x2a
  416ae6:	mov    al,0xfe
  416ae8:	shl    DWORD PTR [eax+0x11],0x67
  416aec:	ror    edx,0x98
  416aef:	nop
  416af0:	les    esp,FWORD PTR [esi]
  416af2:	push   ebx
  416af3:	and    edi,edx
  416af5:	or     dl,dl
  416af7:	jp     0x416b3c
  416af9:	xor    DWORD PTR [eax+eax*1-0x4de89dbb],esp
  416b00:	lods   al,BYTE PTR ds:[esi]
  416b01:	sar    DWORD PTR [edi+0x34b2afc9],0x9c
  416b08:	div    esp
  416b0a:	push   ebx
  416b0b:	outs   dx,DWORD PTR ds:[esi]
  416b0c:	ret    0x140b
  416b0f:	cdq    
  416b10:	call   0x9efb7aa8
  416b15:	aad    0x94
  416b17:	lds    ecx,FWORD PTR [ebp+0x75]
  416b1a:	fisttp WORD PTR [ecx+ebx*2]
  416b1d:	pop    es
  416b1e:	xlat   BYTE PTR ds:[ebx]
  416b1f:	hlt    
  416b20:	pop    esp
  416b21:	inc    eax
  416b22:	cs mov edi,0x39ff501c
  416b28:	test   al,0x91
  416b2a:	lds    ebx,FWORD PTR es:[ebp-0x5de2185d]
  416b31:	call   0x9f28:0xa270e55b
  416b38:	iret   
  416b39:	adc    bl,cl
  416b3b:	xchg   ebp,eax
  416b3c:	dec    ebx
  416b3d:	iret   
  416b3e:	xor    eax,0x4bc48842
  416b43:	mov    ch,0x8d
  416b46:	mov    cl,ch
  416b48:	pop    ecx
  416b49:	and    edi,DWORD PTR [edi-0x16]
  416b4c:	lahf   
  416b4d:	adc    eax,0x5668288d
  416b52:	mov    ds:0x99978ce7,eax
  416b57:	in     al,0x76
  416b59:	scas   eax,DWORD PTR es:[edi]
  416b5a:	inc    eax
  416b5b:	(bad)  
  416b5d:	call   0xb2795122
  416b62:	mov    dl,0x81
  416b64:	push   0x6675f8fa
  416b69:	or     dl,BYTE PTR [edi+0x27599cc]
  416b6f:	lahf   
  416b70:	push   edx
  416b71:	scas   al,BYTE PTR es:[edi]
  416b72:	mov    eax,ds:0xafc698a0
  416b77:	cmp    BYTE PTR [edx+0x72],ch
  416b7a:	mov    esp,ds
  416b7c:	retf   0x4ecb
  416b7f:	inc    ebx
  416b80:	sbb    ebx,edi
  416b82:	shl    bh,0x3a
  416b85:	imul   ebp,DWORD PTR [ecx+edx*1],0x7
  416b89:	sbb    cl,BYTE PTR ds:0xda6207ca
  416b8f:	and    dh,BYTE PTR [eax-0x2e]
  416b92:	inc    eax
  416b93:	popf   
  416b94:	ret    
  416b95:	mov    DWORD PTR [ecx],eax
  416b97:	xor    BYTE PTR [ebx-0x3ab6f2ff],cl
  416b9d:	push   eax
  416b9e:	cld    
  416b9f:	or     ah,BYTE PTR [ecx-0x5b3e3a4e]
  416ba5:	mov    edx,DWORD PTR ds:0xf39dd11b
  416bab:	mov    dl,0x73
  416bad:	cmp    edi,DWORD PTR [eax]
  416baf:	push   edi
  416bb0:	in     al,0xb1
  416bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bb3:	cmp    eax,DWORD PTR [esi-0x51]
  416bb6:	xor    eax,0x7373311e
  416bbb:	mov    DWORD PTR [edi+0x737ea06d],eax
	...
  416c31:	add    BYTE PTR [eax],al
  416c33:	add    BYTE PTR [edx],bh
  416c35:	adc    BYTE PTR [edi-0x444040c4],bh
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    ecx,DWORD PTR [ebx]
  416c41:	lods   al,BYTE PTR ds:[esi]
  416c42:	in     al,0x80
  416c44:	mov    al,0xf8
  416c46:	add    BYTE PTR [eax],al
  416c48:	cmc    
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    BYTE PTR [edi-0x1e1aa801],ch
  416c51:	arpl   WORD PTR [eax-0xf4b3ded],bx
  416c57:	push   edi
  416c58:	push   ecx
  416c59:	inc    esp
  416c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5b:	jnp    0x416ca5
  416c5d:	out    0x52,eax
  416c5f:	shl    bh,0xbe
  416c62:	push   cs
  416c63:	loop   0x416cb2
  416c65:	pop    ss
  416c66:	mov    ebx,0xa3c67697
  416c6b:	inc    ebx
  416c6c:	push   esi
  416c6d:	nop
  416c6e:	xchg   DWORD PTR [ecx-0x4e6cc6fb],esp
  416c74:	pop    ebp
  416c75:	jae    0x416bf7
  416c77:	mov    al,dl
  416c79:	js     0x416c5f
  416c7b:	xchg   ebp,eax
  416c7c:	int3   
  416c7d:	push   eax
  416c7e:	div    DWORD PTR [ecx]
  416c80:	icebp  
  416c81:	mov    edx,0x77b491d5
  416c86:	xor    BYTE PTR [esi],ch
  416c88:	dec    edi
  416c89:	jle    0x416ceb
  416c8b:	addr16 aam 0xc1
  416c8e:	mov    al,0x8f
  416c90:	sub    ebp,ebp
  416c92:	aam    0xc0
  416c94:	jp     0x416c18
  416c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c97:	shl    DWORD PTR [edx+0x21],1
  416c9a:	or     al,0xa5
  416c9c:	dec    ebx
  416c9d:	fcmovnbe st,st(6)
  416c9f:	mov    BYTE PTR [ecx+eiz*4-0x6b68fc0f],ah
  416ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca7:	inc    edi
  416ca8:	aad    0xd6
  416caa:	(bad)  
  416cab:	xlat   BYTE PTR ds:[ebx]
  416cac:	push   edx
  416cad:	arpl   bx,cx
  416caf:	in     eax,dx
  416cb0:	sbb    eax,0x5f13bd3e
  416cb5:	pop    ebp
  416cb6:	aam    0x60
  416cb8:	stos   DWORD PTR es:[edi],eax
  416cb9:	into   
  416cba:	jecxz  0x416d0d
  416cbc:	retf   0x3fe4
  416cbf:	mov    ebp,0xfdee18a0
  416cc4:	sub    dh,cl
  416cc6:	shl    DWORD PTR [bp+si-0x5ba0],1
  416ccb:	inc    ecx
  416ccc:	iret   
  416ccd:	lea    edx,[ecx-0x22]
  416cd0:	inc    ebx
  416cd1:	adc    cl,dh
  416cd3:	popa   
  416cd4:	xchg   esp,eax
  416cd5:	popa   
  416cd6:	or     edi,DWORD PTR [ebp+0x76]
  416cd9:	jns    0x416c85
  416cdb:	add    eax,0x4cec2078
  416ce0:	pop    ebp
  416ce1:	sbb    DWORD PTR [eax-0x15a26c75],eax
  416ce7:	dec    edi
  416ce8:	mov    al,ds:0x49868d0
  416ced:	out    0x53,al
  416cef:	in     al,0xc2
  416cf1:	adc    DWORD PTR [edx+0x66],esp
  416cf4:	adc    bl,BYTE PTR [esi-0x48228b7d]
  416cfa:	xchg   esi,eax
  416cfb:	not    bl
  416cfd:	xor    ecx,ebp
  416cff:	mov    eax,ds:0x4f79f277
  416d04:	mov    DWORD PTR [edx+ebp*1-0x244b51e4],ecx
  416d0b:	fild   DWORD PTR [edx-0x3b598f72]
  416d11:	lahf   
  416d12:	jp     0x416cc4
  416d14:	push   DWORD PTR [eax]
  416d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d17:	pop    ecx
  416d18:	lods   eax,DWORD PTR ds:[esi]
  416d19:	mov    dh,0xdd
  416d1b:	xchg   ch,bh
  416d1d:	loope  0x416caf
  416d1f:	sahf   
  416d20:	inc    edx
  416d21:	push   es
  416d22:	(bad)  
  416d23:	arpl   WORD PTR [edx+ebx*8+0x149fae2e],bp
  416d2a:	push   0xad92e20d
  416d2f:	sub    eax,0xb53f20a6
  416d34:	or     esp,DWORD PTR [edx+ebx*1-0x27]
  416d38:	int3   
  416d39:	inc    ecx
  416d3a:	iret   
  416d3b:	mov    esp,0x2bbf5bce
  416d40:	dec    ebx
	...
  416db1:	add    BYTE PTR [eax],al
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x774829da
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [ecx+0x34e1585e],dl
  416dd1:	inc    edi
  416dd2:	cli    
  416dd3:	xor    DWORD PTR [ebp+0x42],esp
  416dd6:	jmp    0x3d2905ec
  416ddb:	retf   0xbce6
  416dde:	dec    edx
  416ddf:	mov    eax,0x7ef28525
  416de4:	push   ds
  416de5:	xchg   ebp,eax
  416de6:	clc    
  416de7:	nop
  416de8:	out    dx,al
  416de9:	pop    edx
  416dea:	in     eax,dx
  416deb:	xor    ebp,ebx
  416ded:	xor    ebx,DWORD PTR [ebx+ebx*1+0x505e2eed]
  416df4:	mov    dl,0x62
  416df6:	ret    
  416df7:	in     al,dx
  416df8:	and    bl,al
  416dfa:	xor    BYTE PTR [edx-0x6e],0x86
  416dfe:	jge    0x416e37
  416e00:	js     0x416e5d
  416e02:	fcom   st(3)
  416e04:	xchg   edx,eax
  416e05:	sahf   
  416e06:	imul   esp,DWORD PTR ds:0x749781ef,0x9c11faf7
  416e10:	and    DWORD PTR [ebx-0x7b],ecx
  416e13:	stos   BYTE PTR es:[edi],al
  416e14:	push   0xffffff85
  416e16:	dec    edx
  416e17:	enter  0xdfd7,0xc4
  416e1b:	jne    0x416dc0
  416e1d:	in     eax,dx
  416e1e:	dec    ebp
  416e1f:	repz mov bh,al
  416e22:	push   edi
  416e23:	mov    ah,0xcd
  416e25:	xlat   BYTE PTR ds:[ebx]
  416e26:	jnp    0x416e9b
  416e28:	div    DWORD PTR [edi+0xc]
  416e2b:	retf   
  416e2c:	inc    edi
  416e2d:	adc    eax,0xd32cf00e
  416e32:	xchg   ebx,eax
  416e33:	and    BYTE PTR [edi],ch
  416e35:	lock adc eax,0xfac6fe59
  416e3b:	xchg   esi,eax
  416e3c:	sbb    cl,BYTE PTR [edi]
  416e3e:	xchg   ebx,eax
  416e3f:	lods   eax,DWORD PTR ds:[esi]
  416e40:	sbb    ecx,esp
  416e42:	mov    al,ds:0x6865250e
  416e47:	xor    BYTE PTR [ebx-0x4002e158],ah
  416e4d:	sub    DWORD PTR [di-0x119e],ebx
  416e52:	fwait
  416e53:	xor    dh,BYTE PTR [eax-0x3f]
  416e56:	lds    edi,FWORD PTR [ebp+0x26]
  416e59:	fbstp  TBYTE PTR [edi+0x6c]
  416e5c:	push   esi
  416e5d:	pop    esi
  416e5e:	ins    DWORD PTR es:[edi],dx
  416e5f:	call   0x705ed49f
  416e64:	jl     0x416e01
  416e66:	xor    edi,edi
  416e68:	inc    cl
  416e6a:	jb     0x416e61
  416e6c:	pushf  
  416e6d:	dec    edx
  416e6e:	jmp    0x416e6a
  416e70:	sbb    esp,DWORD PTR [ebp-0x39]
  416e73:	pop    edi
  416e74:	jns    0x416ecb
  416e76:	(bad)  
  416e77:	and    al,cl
  416e79:	lock mov WORD PTR [esi-0x18911bda],cs
  416e80:	jbe    0x416e0c
  416e82:	mov    esp,0x26088a6a
  416e87:	fisttp QWORD PTR [ebx]
  416e89:	imul   DWORD PTR [ebx+0x30d4fd8]
  416e8f:	xchg   ch,bl
  416e91:	xor    eax,esi
  416e93:	xchg   ebp,eax
  416e94:	xchg   BYTE PTR [edi],dl
  416e96:	add    al,0xb7
  416e98:	sbb    bl,BYTE PTR ds:0x11c636af
  416e9e:	mov    ebp,0x1a87e97a
  416ea3:	mov    ds:0x8fb014a1,al
  416ea8:	jl     0x416e8d
  416eaa:	aaa    
  416eab:	cli    
  416eac:	inc    esp
  416ead:	(bad)  
  416eae:	in     al,dx
  416eaf:	mov    ecx,0x13ecb996
  416eb4:	mov    ecx,0xaf31fed5
  416eb9:	(bad)  [edx+0x6c]
  416ebc:	cwde   
  416ebd:	xor    ebp,DWORD PTR [edi-0x61]
  416ec0:	mov    bh,0x0
	...
  416f32:	add    BYTE PTR [eax],al
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	cld    
  416f41:	pushf  
  416f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f43:	loope  0x416edf
  416f45:	cli    
  416f46:	add    BYTE PTR [eax],al
  416f48:	cmc    
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    cl,ch
  416f4d:	sub    BYTE PTR [ebp-0x3781d556],al
  416f53:	jo     0x416f69
  416f55:	cmp    ebp,DWORD PTR [ebx]
  416f57:	arpl   WORD PTR ds:0xfedbaf91,di
  416f5d:	ret    0x34d7
  416f60:	scas   al,BYTE PTR es:[edi]
  416f61:	fidiv  DWORD PTR [eax*8+0x54c3418f]
  416f68:	addr16 test eax,0x81c8233a
  416f6e:	(bad)  
  416f6f:	sbb    al,ah
  416f71:	dec    edi
  416f72:	outs   dx,BYTE PTR ds:[esi]
  416f73:	repz jp 0x416f1f
  416f76:	outs   dx,BYTE PTR ds:[esi]
  416f77:	mov    esp,edx
  416f79:	sbb    edx,DWORD PTR [edi]
  416f7b:	sub    eax,0xa4e8308f
  416f80:	pop    edx
  416f81:	mov    esi,0xd8fc6003
  416f86:	into   
  416f87:	mov    cl,0xee
  416f89:	mov    esi,edi
  416f8b:	gs inc eax
  416f8d:	iret   
  416f8e:	clc    
  416f8f:	mov    ah,0xd6
  416f91:	add    al,0xf1
  416f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f94:	rcr    BYTE PTR [ecx+ebx*4-0x5c],0x28
  416f99:	inc    eax
  416f9a:	mov    ebx,0xcd82a163
  416f9f:	sbb    al,0x55
  416fa1:	mov    WORD PTR [edx],?
  416fa3:	push   edi
  416fa4:	xor    DWORD PTR [ecx+0x28dcb9a4],esp
  416faa:	es mov ebx,ebx
  416fad:	add    eax,eax
  416faf:	push   ebx
  416fb0:	mov    al,0x27
  416fb2:	mov    eax,0x72adb668
  416fb7:	cmp    edx,DWORD PTR [ecx+0x61c266a5]
  416fbd:	or     eax,0x95ab7e0
  416fc2:	xor    bl,ch
  416fc4:	mov    eax,0x7084ecf5
  416fc9:	inc    edx
  416fca:	out    dx,al
  416fcb:	jl     0x416fad
  416fcd:	loop   0x416f9c
  416fcf:	ins    DWORD PTR es:[edi],dx
  416fd0:	mov    cl,0x7
  416fd2:	cmp    BYTE PTR [ebp-0x70],dh
  416fd5:	dec    ebp
  416fd6:	xchg   esp,eax
  416fd7:	mov    ch,0x25
  416fd9:	arpl   WORD PTR [bp+0x5bd1],bx
  416fde:	test   eax,0xcc9e1d06
  416fe3:	(bad)  
  416fe4:	(bad)
  416fe9:	lods   eax,DWORD PTR ds:[esi]
  416fea:	je     0x416fc7
  416fec:	jno    0x417012
  416fee:	jns    0x416f95
  416ff0:	lds    edi,FWORD PTR [esi+0x48]
  416ff3:	mov    DWORD PTR [edx-0x4e],ebp
  416ff6:	in     eax,0xda
  416ff8:	aaa    
  416ff9:	js     0x417004
  416ffb:	or     DWORD PTR ds:0xb6fb271e,edi
  417001:	fadd   DWORD PTR [edx+0x3c]
  417004:	aad    0x53
  417006:	ins    BYTE PTR es:[di],dx
  417008:	inc    eax
  417009:	das    
  41700a:	mov    ds:0x7014c67d,al
  41700f:	repz mov eax,?
  417012:	and    ah,BYTE PTR cs:[ecx+0x4b40f05c]
  417019:	lock dec edx
  41701b:	mov    ds:0x83dc2674,eax
  417020:	jl     0x417061
  417022:	push   ecx
  417023:	lea    edi,[ecx+0xe]
  417026:	and    dh,cl
  417028:	arpl   bp,dx
  41702a:	ins    BYTE PTR es:[edi],dx
  41702b:	das    
  41702c:	push   0x7df63886
  417031:	ss adc edi,ebx
  417034:	stc    
  417035:	pop    ss
  417036:	and    DWORD PTR [ecx+0x4d],esi
  417039:	add    DWORD PTR [eax+ecx*8],0xf
  41703d:	retf   0x4b7b
  417040:	xchg   edx,eax
	...
  4170b1:	add    BYTE PTR [eax],al
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	sbb    edi,0x5e
  4170c2:	pop    edx
  4170c3:	popf   
  4170c4:	(bad)  
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    cl,cl
  4170cd:	addr16 or eax,ebx
  4170d0:	js     0x417149
  4170d2:	mov    eax,ds:0x66a46061
  4170d7:	aaa    
  4170d8:	in     al,dx
  4170d9:	dec    eax
  4170da:	mov    eax,esi
  4170dc:	dec    ebx
  4170dd:	xor    DWORD PTR [ebx-0x3d],eax
  4170e0:	jge    0x417150
  4170e2:	out    dx,al
  4170e3:	cdq    
  4170e4:	jmp    0x272fd7eb
  4170e9:	test   eax,0x23472158
  4170ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ef:	lahf   
  4170f0:	mov    ecx,0x8e6839eb
  4170f5:	clc    
  4170f6:	data16 mov cl,0xb7
  4170f9:	mov    bh,0x5c
  4170fb:	add    DWORD PTR [edx+0x6da31783],ecx
  417101:	int3   
  417102:	in     eax,dx
  417103:	push   ecx
  417104:	pop    es
  417105:	shr    esp,1
  417107:	inc    eax
  417108:	test   eax,0x836c8df0
  41710d:	in     al,dx
  41710e:	sub    ebx,esp
  417110:	jne    0x4170e1
  417112:	mov    ebx,0x6b24a48e
  417117:	pop    eax
  417118:	xchg   esi,eax
  417119:	jmp    0x4fc24ee2
  41711e:	ret    0xd0f9
  417121:	leave  
  417122:	add    esi,0x0
  417125:	push   esp
  417126:	aad    0xa1
  417128:	es aad 0x2c
  41712b:	add    esp,esi
  41712d:	mov    ebp,0x9e7c3494
  417132:	mov    bl,0xa9
  417134:	mov    dh,0xdd
  417136:	sbb    al,0xa6
  417138:	cli    
  417139:	jmp    DWORD PTR [ebp+0x6746ada7]
  41713f:	inc    ebp
  417140:	mov    ecx,0x6b5acfdc
  417145:	popf   
  417146:	or     DWORD PTR [ecx],esp
  417148:	stos   WORD PTR es:[edi],ax
  41714a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41714c:	push   es
  41714d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41714e:	xlat   BYTE PTR ds:[ebx]
  41714f:	aaa    
  417150:	dec    edi
  417151:	sbb    BYTE PTR [esi+0x77],0x97
  417155:	and    DWORD PTR [ebp-0x61],ecx
  417158:	(bad)  
  41715a:	aad    0x22
  41715c:	test   DWORD PTR [edi-0x6964e194],esi
  417162:	lods   al,BYTE PTR ds:[esi]
  417163:	jecxz  0x41718b
  417165:	test   al,ah
  417167:	sub    BYTE PTR [edx+ecx*1+0xbae2a1a],bh
  41716e:	xchg   edx,eax
  41716f:	cmc    
  417170:	hlt    
  417171:	lock fisub WORD PTR [ebp+ecx*4-0x3c]
  417176:	pop    es
  417177:	jmp    0x41712b
  417179:	(bad)  
  41717a:	js     0x4171aa
  41717c:	jge    0x417129
  41717e:	sbb    BYTE PTR gs:[esi+0x60],cl
  417182:	push   cs
  417183:	lods   eax,DWORD PTR ds:[esi]
  417184:	dec    esi
  417185:	inc    ebx
  417186:	xchg   ebx,eax
  417187:	pop    ebp
  417188:	cld    
  417189:	xor    DWORD PTR [eax+esi*8],edx
  41718c:	popa   
  41718d:	xor    al,0xf0
  41718f:	mov    cs,ebx
  417191:	pusha  
  417192:	aaa    
  417193:	pop    ss
  417194:	pop    esp
  417195:	jecxz  0x41719f
  417197:	(bad)
  41719c:	xchg   DWORD PTR [edx+0x620bc238],ecx
  4171a2:	cmp    bh,al
  4171a4:	ror    BYTE PTR [ebx],cl
  4171a6:	cwde   
  4171a7:	push   es
  4171a8:	sub    dh,BYTE PTR [ebx-0x6c28cd02]
  4171ae:	fidivr WORD PTR [esi]
  4171b0:	jecxz  0x417207
  4171b2:	shl    DWORD PTR [edx],cl
  4171b4:	shr    ah,1
  4171b6:	cwde   
  4171b7:	inc    ecx
  4171b8:	or     BYTE PTR [ecx],0xcf
  4171bb:	pop    esp
  4171bc:	sahf   
  4171bd:	jb     0x41715c
  4171bf:	mov    edi,0xdc
	...
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 int3 
  417241:	es jg  0x4171ce
  417244:	test   ah,bh
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    BYTE PTR [ebx+ecx*4],bl
  41724e:	jp     0x417279
  417250:	sub    eax,0xe8105001
  417255:	dec    eax
  417256:	mov    ch,0xb4
  417258:	fs or  bl,cl
  41725b:	add    BYTE PTR [esi+0x34],0x8d
  41725f:	xchg   ecx,eax
  417260:	add    BYTE PTR [esi-0x6fd51d96],0xe1
  417267:	sahf   
  417268:	bound  esp,QWORD PTR fs:[esi+eax*8]
  41726c:	xor    eax,0xb4d55ed2
  417271:	pop    esi
  417272:	mov    cl,0x45
  417274:	ret    0x6df7
  417277:	les    ecx,FWORD PTR [ecx+ecx*1]
  41727a:	ret    0xa17c
  41727d:	and    eax,0xe235d29e
  417282:	fistp  QWORD PTR [ebx-0x7d]
  417285:	shr    DWORD PTR [edi-0x3a],0x40
  417289:	jl     0x4172d2
  41728b:	mov    BYTE PTR [ebx-0x4f],dh
  41728e:	push   esi
  41728f:	sbb    bl,al
  417291:	pop    ecx
  417292:	mov    eax,DWORD PTR [ebx-0x711082a4]
  417298:	inc    eax
  417299:	or     BYTE PTR [edx-0x689587f2],dl
  41729f:	sub    ch,BYTE PTR [eax+0x3e]
  4172a2:	popf   
  4172a3:	hlt    
  4172a4:	inc    ebx
  4172a5:	out    0xb,al
  4172a7:	test   BYTE PTR [ebx+0x7cb9afec],cl
  4172ad:	int3   
  4172ae:	mov    ds:0x344dda9b,eax
  4172b3:	adc    BYTE PTR [ebp+0x5be42a5],bh
  4172b9:	(bad)  
  4172ba:	nop
  4172bb:	or     al,0xa4
  4172bd:	jbe    0x417286
  4172bf:	push   cs
  4172c0:	xchg   ebp,eax
  4172c1:	and    ebp,DWORD PTR [ecx+ebx*1+0x108e794d]
  4172c8:	into   
  4172c9:	aas    
  4172ca:	inc    edi
  4172cb:	cli    
  4172cc:	sub    ah,BYTE PTR [esi+0x49bf3e95]
  4172d2:	xor    DWORD PTR [edi+ecx*8-0x68],edi
  4172d6:	in     eax,dx
  4172d7:	rol    DWORD PTR [ebx],cl
  4172d9:	loope  0x41729d
  4172db:	pop    esi
  4172dc:	cmc    
  4172dd:	in     eax,dx
  4172de:	icebp  
  4172df:	stc    
  4172e0:	gs mov edi,0xf48e7709
  4172e6:	out    dx,eax
  4172e7:	enter  0x6e73,0x2
  4172eb:	xchg   esi,eax
  4172ec:	jno    0x417280
  4172ee:	dec    ecx
  4172ef:	mov    dh,0xec
  4172f1:	push   edx
  4172f2:	outs   dx,DWORD PTR ds:[esi]
  4172f3:	dec    ecx
  4172f4:	aaa    
  4172f5:	rcr    BYTE PTR [edx],cl
  4172f7:	mov    al,0x78
  4172f9:	mov    bl,BYTE PTR [edi+0x24]
  4172fc:	mov    dh,BYTE PTR [esi]
  4172fe:	and    ah,BYTE PTR [edi-0x37]
  417301:	sti    
  417302:	and    dh,BYTE PTR [esi-0xaa6f4bf]
  417308:	and    BYTE PTR [esi+0x33],dh
  41730b:	xchg   esp,eax
  41730c:	jmp    0x1944:0x7abad0c7
  417313:	jmp    0x3bd:0xf74c263f
  41731a:	inc    ecx
  41731b:	lods   eax,DWORD PTR ds:[esi]
  41731c:	xchg   edi,eax
  41731d:	jl     0x417381
  41731f:	(bad)  
  417320:	into   
  417321:	pop    ecx
  417322:	xor    eax,0x134b5fbb
  417327:	push   0xffffffc3
  417329:	sub    DWORD PTR [edi],eax
  41732b:	data16 adc ah,BYTE PTR [esi-0x2c5237ae]
  417332:	cdq    
  417333:	xchg   esi,eax
  417334:	xchg   ecx,eax
  417335:	push   edx
  417336:	ror    DWORD PTR [edx+0xff3322c],1
  41733c:	out    dx,eax
  41733d:	sub    DWORD PTR [esp+ecx*1+0x12],0x0
	...
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x30
  4173c1:	jmp    0xfdbb5c05
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    cl,bl
  4173cd:	pop    sp
  4173cf:	pusha  
  4173d0:	sub    DWORD PTR [edi+0x6fcbe3b3],edi
  4173d6:	in     al,dx
  4173d7:	push   esp
  4173d8:	shl    DWORD PTR [ecx+0x411cc0a0],cl
  4173de:	inc    ebx
  4173df:	in     al,dx
  4173e0:	and    al,0xd7
  4173e2:	out    dx,eax
  4173e3:	es jg  0x417390
  4173e6:	push   edi
  4173e7:	and    eax,ebp
  4173e9:	retf   0x4d92
  4173ec:	mov    bl,0x43
  4173ee:	jl     0x4173a3
  4173f0:	hlt    
  4173f1:	xor    BYTE PTR [eax+edi*1-0xda34cdf],0x9e
  4173f9:	push   0xa7990ff0
  4173fe:	cmp    dl,BYTE PTR [esp+esi*1+0x37cdf5cb]
  417405:	sbb    bl,BYTE PTR [ebx-0x7433461f]
  41740b:	das    
  41740c:	fld    TBYTE PTR [esi]
  41740e:	adc    DWORD PTR [ebp-0x13],esi
  417411:	ret    
  417412:	int3   
  417413:	cmp    BYTE PTR [edx-0x4903cc78],al
  417419:	pusha  
  41741a:	sbb    eax,0x703fd2cb
  41741f:	dec    eax
  417420:	in     eax,dx
  417421:	daa    
  417422:	inc    esi
  417423:	cmp    eax,0x174375a7
  417428:	dec    ebx
  417429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41742a:	lock loopne 0x4173b8
  41742d:	sbb    DWORD PTR [edx+ebp*8+0x50],esp
  417431:	idiv   BYTE PTR [edx+esi*8]
  417434:	xchg   BYTE PTR [eax+0x41222b97],ah
  41743a:	push   ebp
  41743b:	cli    
  41743c:	adc    DWORD PTR [esi+0x325fb788],edi
  417442:	jge    0x4173f9
  417444:	sub    al,BYTE PTR [ecx+esi*2]
  417447:	push   edi
  417448:	jl     0x41748b
  41744a:	sub    BYTE PTR [edx+0x71be9076],dh
  417450:	(bad)  
  417451:	in     al,dx
  417452:	bound  edx,QWORD PTR cs:[eax+0x0]
  417456:	push   ss
  417457:	das    
  417458:	js     0x4174b3
  41745a:	adc    eax,0x9c3fb3a
  41745f:	and    al,0x31
  417461:	test   al,0xa7
  417463:	mov    cl,0x36
  417465:	cdq    
  417466:	add    eax,0x660439ac
  41746b:	mov    cl,0x7e
  41746d:	jp     0x417441
  41746f:	fmul   DWORD PTR ds:0xdf579fb7
  417475:	nop
  417476:	xchg   esi,eax
  417477:	out    0x47,eax
  417479:	in     al,0x81
  41747b:	push   es
  41747c:	(bad)  
  41747d:	xor    BYTE PTR [ecx],cl
  41747f:	jecxz  0x41743a
  417481:	jle    0x417440
  417483:	xlat   BYTE PTR ds:[ebx]
  417484:	push   esi
  417485:	repz push 0x5e
  417488:	daa    
  417489:	dec    ebp
  41748a:	mov    gs,eax
  41748c:	popa   
  41748d:	(bad)  
  41748e:	mov    esi,0xe47fb3c7
  417493:	push   edx
  417494:	push   ebx
  417495:	mov    bh,0x96
  417497:	mov    edi,0xf210a4bb
  41749c:	loopne 0x417427
  41749e:	pop    edi
  41749f:	fistp  QWORD PTR [ebx+0x32dc1050]
  4174a5:	sahf   
  4174a6:	or     al,0x84
  4174a8:	test   DWORD PTR [esi],edi
  4174aa:	aad    0x45
  4174ac:	add    bl,BYTE PTR [ebx+edx*8-0x650d4799]
  4174b3:	dec    edx
  4174b4:	pop    es
  4174b5:	fs icebp 
  4174b7:	sbb    BYTE PTR [eax-0x4e842f6c],ah
  4174bd:	adc    eax,0xa30dd0
	...
  417532:	add    BYTE PTR [eax],al
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x721e3b7a
  417542:	scas   al,BYTE PTR es:[edi]
  417543:	bound  ebp,QWORD PTR [esi-0x2]
  417546:	add    BYTE PTR [eax],al
  417548:	cmc    
  417549:	add    BYTE PTR [eax],al
  41754b:	add    bh,ah
  41754d:	in     eax,0x7d
  41754f:	out    dx,al
  417550:	aam    0xf9
  417552:	add    bl,0x4f
  417555:	mov    ds:0x8efd192,eax
  41755a:	jg     0x41759d
  41755c:	pop    ecx
  41755d:	sbb    dh,BYTE PTR [edx-0x29]
  417560:	(bad)  
  417561:	lds    ebp,FWORD PTR [ebx-0x69446d3a]
  417567:	inc    DWORD PTR [esi+0x43357244]
  41756d:	lods   eax,DWORD PTR ds:[esi]
  41756e:	jne    0x4175d6
  417570:	cdq    
  417571:	jp     0x4175bd
  417573:	aaa    
  417574:	jae    0x4175d9
  417576:	push   0x7ba6644d
  41757b:	ds xchg ecx,eax
  41757d:	add    al,0x41
  41757f:	fs push cs
  417581:	icebp  
  417582:	lea    eax,[edi+0x3]
  417585:	aad    0x99
  417587:	cld    
  417588:	jp     0x417523
  41758a:	xor    DWORD PTR [edx+0x8799133],ebp
  417590:	fwait
  417591:	lock adc eax,0xb6eef06d
  417597:	icebp  
  417598:	sbb    esi,esi
  41759a:	mov    eax,ds:0xd8584f31
  41759f:	ss xchg ecx,eax
  4175a1:	outs   dx,DWORD PTR ds:[esi]
  4175a2:	std    
  4175a3:	rol    BYTE PTR [esi+edx*8-0x4],1
  4175a7:	dec    ebx
  4175a8:	ds sbb al,0x19
  4175ab:	dec    ebx
  4175ac:	(bad)  
  4175ad:	or     al,bh
  4175af:	mov    bl,0xd8
  4175b1:	dec    eax
  4175b2:	sbb    ebp,DWORD PTR [esi-0x6e]
  4175b5:	arpl   WORD PTR [ecx+0x49],di
  4175b8:	imul   ebp,DWORD PTR [edi],0x2d0ddd9e
  4175be:	jle    0x41758c
  4175c0:	dec    esp
  4175c1:	lea    esi,[ebx-0x559b1ca9]
  4175c7:	pop    ebx
  4175c8:	ja     0x4175ed
  4175ca:	pop    edx
  4175cb:	shl    BYTE PTR [eax],cl
  4175cd:	inc    ebp
  4175ce:	mov    esi,gs
  4175d0:	sub    al,0x17
  4175d2:	imul   DWORD PTR [bp+di-0x52b7]
  4175d7:	jg     0x4175f3
  4175d9:	and    ebx,ecx
  4175db:	call   0xa125:0x1d33b1c9
  4175e2:	dec    ebp
  4175e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e4:	cli    
  4175e5:	in     eax,dx
  4175e6:	cs jmp 0x84b3a835
  4175ec:	scas   eax,DWORD PTR es:[edi]
  4175ed:	xor    bh,BYTE PTR [edx-0x3a]
  4175f0:	shr    edi,1
  4175f2:	pushf  
  4175f3:	xchg   esp,eax
  4175f4:	adc    eax,ecx
  4175f6:	jnp    0x4175e2
  4175f8:	xchg   esp,eax
  4175f9:	fldenv [eax+0x65]
  4175fc:	jne    0x4175b0
  4175fe:	ins    DWORD PTR es:[edi],dx
  4175ff:	inc    BYTE PTR [edx]
  417601:	lds    esi,FWORD PTR [esi+eax*2-0x68]
  417605:	mov    ecx,0xa85dd516
  41760a:	mov    al,0x0
  41760c:	daa    
  41760d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41760e:	push   esi
  41760f:	ss jg  0x4175c3
  417612:	dec    esp
  417613:	addr16 jns 0x4175f2
  417616:	or     dh,0x5d
  417619:	test   eax,0x50eed0a1
  41761e:	sub    eax,edx
  417620:	jecxz  0x4175fc
  417622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417623:	mov    edx,ds
  417625:	(bad)  
  417627:	rcr    DWORD PTR [esi-0x5f],cl
  41762a:	rcl    DWORD PTR [edi+edx*1+0xc63c526],cl
  417631:	jns    0x4175b4
  417633:	inc    ebx
  417634:	adc    eax,0x24208a0c
  417639:	cwde   
  41763a:	and    ah,bl
  41763c:	addr16 jns 0x4175d7
  41763f:	xchg   edx,eax
  417640:	fwait
	...
  4176b1:	add    BYTE PTR [eax],al
  4176b3:	add    ah,al
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	outs   dx,BYTE PTR ds:[esi]
  4176c1:	sbb    DWORD PTR [esi-0xf],esp
  4176c4:	arpl   di,di
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	cmc    
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [ecx],cl
  4176cd:	inc    ebx
  4176ce:	sbb    edx,esp
  4176d0:	inc    esp
  4176d1:	retf   0x17d6
  4176d4:	add    DWORD PTR [ebx],0x2d
  4176d7:	cdq    
  4176d8:	mov    dl,0x5f
  4176da:	je     0x4176ee
  4176dc:	xor    al,0xbe
  4176de:	push   ecx
  4176df:	cmp    eax,0xb428c46b
  4176e4:	mov    bl,0x3e
  4176e6:	mov    edx,0x7ca9bccf
  4176eb:	and    DWORD PTR [ebx],0xd48a3c7f
  4176f1:	stos   BYTE PTR es:[edi],al
  4176f2:	xor    BYTE PTR [edi],0x48
  4176f5:	inc    esi
  4176f6:	mov    bl,0xdd
  4176f8:	xchg   ecx,eax
  4176f9:	idiv   DWORD PTR [edi]
  4176fb:	mov    BYTE PTR [esi+eiz*1],al
  4176fe:	jmp    0xa00c:0xb327ec9c
  417705:	cdq    
  417706:	nop
  417707:	dec    ebp
  417708:	push   0x50
  41770a:	sbb    ecx,DWORD PTR [ecx-0x20]
  41770d:	lock add al,0x93
  417710:	(bad)  
  417711:	out    0x16,al
  417713:	mov    edx,0x878bb044
  417718:	push   esi
  417719:	rcl    DWORD PTR ds:0x4bf320d5,0x92
  417720:	fimul  WORD PTR [esi+0x77]
  417723:	je     0x417774
  417725:	mov    esi,0x2a552b39
  41772a:	jo     0x4176b2
  41772c:	push   eax
  41772d:	iret   
  41772e:	loope  0x4176b4
  417730:	rcl    DWORD PTR [esi+0x23],0x13
  417734:	xor    ebp,DWORD PTR [ebp-0x3bfa639d]
  41773a:	and    eax,0xc32e7f94
  41773f:	loopne 0x417750
  417741:	in     al,dx
  417742:	jmp    0x417706
  417744:	push   esp
  417745:	into   
  417746:	call   0x5c9a:0xd57a8eec
  41774d:	xor    BYTE PTR [edi+0x4c9fc6f4],dl
  417753:	jge    0x4177cc
  417755:	jne    0x4176e2
  417757:	fsub   DWORD PTR [ebx+0x2f3d2b5e]
  41775d:	cmp    eax,0x8bf8bc46
  417762:	xor    BYTE PTR [eax-0x384a1d34],cl
  417768:	jmp    0x641e:0x449eaff7
  41776f:	fcom   DWORD PTR [eax+0x1a326144]
  417775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417776:	mov    edx,0x2a7c9b38
  41777b:	int3   
  41777c:	inc    ebx
  41777d:	push   ss
  41777e:	enter  0x8b3c,0x10
  417782:	mov    edx,DWORD PTR [ebx+0x14]
  417785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417786:	adc    ebp,DWORD PTR [edi+0x6c]
  417789:	mov    ch,0xa6
  41778b:	push   edi
  41778c:	fcmovnu st,st(1)
  41778e:	pop    es
  41778f:	sbb    DWORD PTR [edi+0x4115575e],eax
  417795:	jb     0x417803
  417797:	cli    
  417798:	out    dx,al
  417799:	stos   DWORD PTR es:[edi],eax
  41779a:	jmp    DWORD PTR [edi]
  41779c:	cmp    bh,BYTE PTR [ebx-0x1f137a76]
  4177a2:	out    0x81,al
  4177a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a5:	push   eax
  4177a6:	pop    eax
  4177a7:	push   0xeb9d4ef1
  4177ac:	leave  
  4177ad:	mov    ds:0xa748ca62,al
  4177b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b3:	stos   DWORD PTR es:[edi],eax
  4177b4:	(bad)  
  4177b5:	push   edi
  4177b6:	xor    al,0xfb
  4177b8:	push   esp
  4177b9:	mov    eax,ds:0xf6492d00
  4177be:	mov    dh,0x8f
  4177c0:	jle    0x4177c2
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x1c7d6e99
  417841:	mov    DWORD PTR [edi+0x10058e8],eax
  417847:	add    ch,dh
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [ebx+0x6a73423a],bh
  417851:	inc    esi
  417852:	ror    ch,1
  417854:	xchg   esi,eax
  417855:	das    
  417856:	push   0xffffffeb
  417858:	sbb    bl,BYTE PTR [ebp+0x4d]
  41785b:	add    ebx,esi
  41785d:	pop    ds
  41785e:	xor    ch,ch
  417860:	loop   0x4178a5
  417862:	(bad)  
  417864:	and    eax,0xacae9802
  417869:	call   0xb15a:0xf0b73423
  417870:	in     al,0x5d
  417872:	jge    0x417800
  417874:	nop
  417875:	pop    edi
  417876:	add    eax,0x9a4afd4
  41787b:	adc    esi,DWORD PTR [eax+esi*2-0x3d]
  41787f:	lahf   
  417880:	jno    0x417835
  417882:	aad    0x16
  417884:	mov    ds:0xe74c2f12,eax
  417889:	sub    eax,DWORD PTR [edx+0x70]
  41788c:	pop    ds
  41788d:	nop
  41788e:	jne    0x417818
  417890:	sbb    DWORD PTR [edx+0xa],esi
  417893:	enter  0x39b0,0x58
  417897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417898:	jno    0x41788c
  41789a:	adc    dh,BYTE PTR [ecx-0x71]
  41789d:	jns    0x417895
  41789f:	retf   
  4178a0:	xchg   ebx,eax
  4178a1:	pop    esi
  4178a2:	sub    BYTE PTR [eax-0x28],bh
  4178a5:	add    DWORD PTR [eax-0x1ca81c68],eax
  4178ab:	outs   dx,BYTE PTR ds:[esi]
  4178ac:	xchg   BYTE PTR [edx+eiz*8+0x74fbe275],dh
  4178b3:	js     0x4178c0
  4178b5:	(bad)  
  4178b7:	pop    ebx
  4178b8:	out    0xb,al
  4178ba:	ins    BYTE PTR es:[edi],dx
  4178bb:	nop
  4178bc:	mov    cl,0xa8
  4178be:	xchg   ebx,eax
  4178bf:	pop    eax
  4178c0:	pop    esp
  4178c1:	xchg   ebp,eax
  4178c2:	cmp    DWORD PTR [ebp-0x32afee36],esi
  4178c8:	sub    ah,BYTE PTR [edx+0x7bc45c45]
  4178ce:	push   eax
  4178cf:	xchg   BYTE PTR [esi-0x12216dba],dh
  4178d5:	leave  
  4178d6:	or     BYTE PTR [ebx+eax*1+0x280370ec],ch
  4178dd:	out    0xe8,eax
  4178df:	jl     0x41789b
  4178e1:	dec    esp
  4178e2:	mov    esi,eax
  4178e4:	mov    cl,0x35
  4178e6:	pop    eax
  4178e7:	lahf   
  4178e8:	add    al,0xdc
  4178ea:	retf   0xcba0
  4178ed:	hlt    
  4178ee:	push   ecx
  4178ef:	sti    
  4178f0:	mov    WORD PTR [edi+esi*1-0x70],ds
  4178f4:	dec    edi
  4178f5:	ror    al,cl
  4178f7:	cmp    dl,0x27
  4178fa:	lock mov dl,0xe5
  4178fd:	or     BYTE PTR [esp+edi*1+0x8],ah
  417901:	mov    ds:0xe9fb5e0b,al
  417906:	cmp    eax,esp
  417908:	mov    cl,0xcc
  41790a:	loopne 0x41790b
  41790c:	adc    BYTE PTR [esp+ebp*8-0x46a2b021],dh
  417913:	mov    dl,BYTE PTR [edx-0x68]
  417916:	xchg   edx,eax
  417917:	ret    0x215a
  41791a:	adc    DWORD PTR ds:0x64135591,esp
  417920:	jno    0x417961
  417922:	xor    dl,BYTE PTR [edx+0x3e500777]
  417928:	push   0xfffffffc
  41792a:	fcomp  DWORD PTR gs:[ecx+0x62fa7e9f]
  417931:	aas    
  417932:	adc    edx,DWORD PTR [esi]
  417934:	imul   esp,DWORD PTR [ebx-0x561d6288],0x722158ac
  41793e:	test   DWORD PTR [edx+0x2e],edx
	...
  4179b1:	add    BYTE PTR [eax],al
  4179b3:	add    bl,cl
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi-0x79263680]
  4179c2:	sub    BYTE PTR [edx+0x1014d],bl
  4179c8:	cmc    
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    BYTE PTR [ecx-0xd],bl
  4179ce:	fst    QWORD PTR [edx+0x4eae8584]
  4179d4:	and    edx,DWORD PTR ds:0x8345eccf
  4179da:	jae    0x41799d
  4179dc:	pop    eax
  4179dd:	outs   dx,DWORD PTR ds:[esi]
  4179de:	aad    0x87
  4179e0:	cdq    
  4179e1:	mov    dl,0x8e
  4179e3:	add    ebp,edi
  4179e5:	lods   al,BYTE PTR ds:[esi]
  4179e6:	rcr    edi,cl
  4179e8:	pop    edx
  4179e9:	stos   BYTE PTR es:[edi],al
  4179ea:	xchg   ebx,eax
  4179eb:	add    bl,bh
  4179ed:	mov    ebp,0xd91db3e4
  4179f2:	int    0x64
  4179f4:	aaa    
  4179f5:	mov    dh,0xa2
  4179f7:	stc    
  4179f8:	arpl   WORD PTR [ebx+0x3c],bx
  4179fb:	stos   BYTE PTR es:[edi],al
  4179fc:	stos   BYTE PTR es:[edi],al
  4179fd:	and    DWORD PTR [esi-0x6c],ecx
  417a00:	or     al,0x2d
  417a02:	scas   eax,DWORD PTR es:[edi]
  417a03:	pushf  
  417a04:	jecxz  0x417a25
  417a06:	push   edx
  417a07:	sub    BYTE PTR [eax-0x15],ch
  417a0a:	iret   
  417a0b:	loopne 0x4179d7
  417a0d:	sbb    esp,DWORD PTR [edx+0x539c8c89]
  417a13:	sub    BYTE PTR [edx-0x542d5921],dh
  417a19:	les    ecx,FWORD PTR [edi]
  417a1b:	and    DWORD PTR [ebx+0x7f68cab6],edi
  417a21:	test   BYTE PTR [ebx-0x1f],cl
  417a24:	test   eax,0x3ef4de4c
  417a29:	int3   
  417a2a:	mov    eax,ds:0xcac45ac4
  417a2f:	sbb    DWORD PTR [ebx+0x54c62ed9],esp
  417a35:	ins    BYTE PTR es:[edi],dx
  417a36:	or     eax,0x5c7ed8e5
  417a3b:	stc    
  417a3c:	cmp    ebp,eax
  417a3e:	push   0x73e8f57e
  417a43:	retf   
  417a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a45:	cmc    
  417a46:	xchg   ebx,eax
  417a47:	imul   esp,esi,0x89f4c2be
  417a4d:	cmp    al,0x70
  417a4f:	fs pusha 
  417a51:	ds loop 0x417a56
  417a54:	or     DWORD PTR [ecx],ebx
  417a56:	popa   
  417a57:	sub    eax,0x4745b52a
  417a5c:	mov    ah,0xe3
  417a5e:	add    BYTE PTR [edi+edi*8],bl
  417a61:	cmp    DWORD PTR [eax+0x12],esi
  417a64:	lods   al,BYTE PTR ds:[esi]
  417a65:	bound  ecx,QWORD PTR [eax-0x6b]
  417a68:	or     BYTE PTR [ebx-0x1a],al
  417a6b:	sbb    eax,0x92ca1ecd
  417a70:	jl     0x417a08
  417a72:	outs   dx,BYTE PTR ds:[esi]
  417a73:	lds    esi,FWORD PTR [ebp+ecx*8-0x58]
  417a77:	jmp    0x417a15
  417a79:	mov    edi,0x8d51de09
  417a7e:	jge    0x417a0a
  417a80:	or     BYTE PTR [eax+0x4997528],0x3
  417a87:	pop    esi
  417a88:	jne    0x417b09
  417a8a:	jae    0x417a97
  417a8c:	clc    
  417a8d:	popa   
  417a8e:	call   0x90a4:0x6fa48183
  417a95:	data16 sbb al,0x46
  417a98:	sub    al,0x62
  417a9a:	lds    eax,FWORD PTR [eax]
  417a9c:	push   ebx
  417a9d:	adc    esi,ebx
  417a9f:	jmp    0x3196:0x705680c3
  417aa6:	sub    ch,BYTE PTR [ebp-0x78]
  417aa9:	into   
  417aaa:	loopne 0x417af3
  417aac:	add    bh,BYTE PTR [eax]
  417aae:	fidivr DWORD PTR [edx-0x80]
  417ab1:	jns    0x417a83
  417ab3:	mov    ch,0xe8
  417ab5:	mov    dh,0x52
  417ab7:	jmp    0x417b07
  417ab9:	pop    es
  417aba:	mov    ebp,DWORD PTR [ebp-0x434b5ee3]
  417ac0:	sahf   
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xc2fef5f7
  417b41:	das    
  417b42:	mov    WORD PTR [edx+0x42],ds
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    ch,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [edi+0x40838ad7],ch
  417b51:	test   al,0x89
  417b53:	cmp    eax,0x803ce4c1
  417b58:	mov    bh,0xe0
  417b5a:	call   0x92d6e7ba
  417b5f:	aaa    
  417b60:	cwde   
  417b61:	stos   DWORD PTR es:[edi],eax
  417b62:	int3   
  417b63:	mov    bl,0xa4
  417b65:	rcr    BYTE PTR [esi+0x6750de6f],cl
  417b6b:	imul   edi,DWORD PTR [ebx],0x8ffe6f4f
  417b71:	add    eax,0x986a449c
  417b76:	pop    ebx
  417b77:	pop    ebx
  417b78:	sub    esi,DWORD PTR [edx+0x5500c6cc]
  417b7e:	repnz retf 
  417b80:	or     ah,dl
  417b82:	mov    bl,0x82
  417b84:	mov    eax,DWORD PTR [ebx]
  417b86:	mov    esp,0x3d856a57
  417b8b:	mov    cl,0x68
  417b8d:	jecxz  0x417b7d
  417b8f:	cld    
  417b90:	cmp    ebp,ebp
  417b92:	dec    ebp
  417b93:	sbb    dl,cl
  417b95:	cmp    al,0x3e
  417b97:	mov    edi,0x89956689
  417b9c:	mov    bl,0x7f
  417b9e:	imul   edi,DWORD PTR [esp],0xffffff83
  417ba2:	scas   al,BYTE PTR es:[edi]
  417ba3:	mov    ch,0x14
  417ba5:	mov    eax,0x8eae3bd2
  417baa:	pushf  
  417bab:	jge    0x417c1e
  417bad:	mov    eax,0x720c9e74
  417bb2:	adc    DWORD PTR [ecx+0x70],esp
  417bb5:	cmp    BYTE PTR [esi-0x34a97b34],al
  417bbb:	test   al,0x28
  417bbd:	xchg   edx,eax
  417bbe:	cld    
  417bbf:	ds popa 
  417bc1:	jl     0x417bc9
  417bc3:	sbb    ch,BYTE PTR [eax+0x19]
  417bc6:	ins    DWORD PTR es:[edi],dx
  417bc7:	fwait
  417bc8:	xchg   esi,eax
  417bc9:	push   ss
  417bca:	fs xchg ecx,eax
  417bcc:	shl    BYTE PTR [edi],0xe9
  417bcf:	xor    al,0xd3
  417bd1:	xor    al,0x53
  417bd3:	sub    esi,DWORD PTR [edx-0x66]
  417bd6:	cmp    BYTE PTR [edx],dl
  417bd8:	sti    
  417bd9:	mov    ch,0xfe
  417bdb:	and    al,0x88
  417bdd:	outs   dx,DWORD PTR ds:[esi]
  417bde:	xor    DWORD PTR [esi],ebp
  417be0:	outs   dx,DWORD PTR ds:[esi]
  417be1:	ret    0x82cb
  417be4:	js     0x417c37
  417be6:	dec    edx
  417be7:	retf   0xe9bc
  417bea:	rol    BYTE PTR [edi+0x22],cl
  417bed:	push   0x316cf5cc
  417bf2:	imul   ebx,DWORD PTR [edx+0xf43b24d],0x366b39e1
  417bfc:	ret    
  417bfd:	push   eax
  417bfe:	cmp    BYTE PTR [ebx+ebx*4-0x70a47532],0xbb
  417c06:	fs out 0x86,eax
  417c09:	mov    ch,0xcb
  417c0b:	jg     0x417c72
  417c0d:	imul   edi,DWORD PTR [edi-0x75],0xdc4a963f
  417c14:	aam    0x2e
  417c16:	xchg   ecx,eax
  417c17:	outs   dx,DWORD PTR ds:[esi]
  417c18:	cs push 0x886f7ef
  417c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c1f:	in     eax,0x2
  417c21:	lock pop eax
  417c23:	xlat   BYTE PTR ds:[ebx]
  417c24:	movd   DWORD PTR [esi],mm2
  417c27:	inc    DWORD PTR [edx+edx*2-0x52]
  417c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2c:	bound  eax,QWORD PTR [edi-0x3b]
  417c2f:	aaa    
  417c30:	or     eax,DWORD PTR [eax+0x4c]
  417c33:	push   ebx
  417c34:	pop    edi
  417c35:	xchg   DWORD PTR [edx],esi
  417c37:	cmp    BYTE PTR [ebp+0x3d],dl
  417c3a:	popf   
  417c3b:	ss pop ebx
  417c3d:	out    dx,al
  417c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c3f:	fild   WORD PTR [edi+0x0]
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [edi-0x20],edi
  417cc2:	dec    ebp
  417cc3:	je     0x417cfc
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    ch,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [eax],bl
  417ccd:	out    dx,eax
  417cce:	imul   eax,DWORD PTR [ebx-0x76],0x732826
  417cd5:	fmul   DWORD PTR [eax+0x4f]
  417cd8:	clc    
  417cd9:	rcr    ch,0xeb
  417cdc:	retf   
  417cdd:	push   ss
  417cde:	inc    BYTE PTR [ebx+0x67]
  417ce1:	xchg   DWORD PTR [ebx],ebp
  417ce3:	fwait
  417ce4:	int    0x26
  417ce6:	aad    0xef
  417ce8:	jg     0x417d5e
  417cea:	idiv   BYTE PTR [esi+0x2428adb4]
  417cf0:	js     0x417d48
  417cf2:	loope  0x417d66
  417cf4:	pop    eax
  417cf5:	xchg   BYTE PTR [ecx+ecx*8+0x5d],dl
  417cf9:	jno    0x417d6b
  417cfb:	out    0x12,eax
  417cfd:	jle    0x417d2a
  417cff:	cmp    BYTE PTR [ebx-0x6ee7c266],0x6
  417d06:	aas    
  417d07:	fcomp  DWORD PTR [edi]
  417d09:	call   0x99dc:0x3d352573
  417d10:	mul    DWORD PTR [eax]
  417d12:	icebp  
  417d13:	aad    0x55
  417d15:	inc    esp
  417d16:	jnp    0x417cac
  417d18:	push   ebx
  417d19:	test   BYTE PTR [edx-0x21],cl
  417d1c:	mov    WORD PTR [eax+0x1f6a446e],ss
  417d22:	lds    esi,FWORD PTR [edx-0x39]
  417d25:	push   ebx
  417d26:	jno    0x417d31
  417d28:	nop
  417d29:	xchg   edi,eax
  417d2a:	lahf   
  417d2b:	jecxz  0x417d56
  417d2d:	stos   DWORD PTR es:[edi],eax
  417d2e:	xchg   edi,eax
  417d2f:	push   ss
  417d30:	and    eax,0x574173c0
  417d35:	xchg   ebx,eax
  417d36:	mov    ebp,0x3eae7df5
  417d3b:	jmp    0x1e53:0x4b3eb9d0
  417d42:	je     0x417db8
  417d44:	pop    ebx
  417d45:	pop    ecx
  417d46:	js     0x417dac
  417d48:	das    
  417d49:	sbb    BYTE PTR [ecx-0x61],0x36
  417d4d:	mov    DWORD PTR [ecx],ebp
  417d4f:	in     eax,dx
  417d50:	sbb    ah,dh
  417d52:	or     eax,0x2ca238a2
  417d57:	into   
  417d58:	xor    esi,ebx
  417d5a:	add    DWORD PTR [ebx],edi
  417d5c:	arpl   bp,di
  417d5e:	call   0x6be8:0xc63ae031
  417d65:	xor    al,0xea
  417d67:	shr    BYTE PTR [ebp+0x7bd57080],1
  417d6d:	sbb    eax,0x24a9b72f
  417d72:	(bad)  
  417d73:	xchg   BYTE PTR [edx],dh
  417d75:	ds popa 
  417d77:	pusha  
  417d78:	mov    ch,0x7a
  417d7a:	pushf  
  417d7b:	mov    ah,0x4
  417d7d:	daa    
  417d7e:	jg     0x417d4f
  417d80:	adc    DWORD PTR [ecx+0x2b8d43ce],0x26
  417d87:	fadd   st,st(2)
  417d89:	in     eax,0x4e
  417d8b:	es cwde 
  417d8d:	test   DWORD PTR [eax],ecx
  417d8f:	push   ss
  417d90:	push   cs
  417d91:	scas   eax,DWORD PTR es:[edi]
  417d92:	sbb    eax,0xdb8e8167
  417d97:	sti    
  417d98:	out    0x12,al
  417d9a:	mov    BYTE PTR [eax-0x3e],ah
  417d9d:	cmp    al,0xf7
  417d9f:	loopne 0x417dd5
  417da1:	inc    ebp
  417da2:	jle    0x417dec
  417da4:	mov    eax,ds:0x19297ecc
  417da9:	pushf  
  417daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dab:	fdivr  DWORD PTR [edx+0x2a]
  417dae:	(bad)  
  417daf:	addr16 aaa 
  417db1:	jne    0x417d6a
  417db3:	sbb    BYTE PTR [ecx],0xe4
  417db6:	in     eax,dx
  417db7:	lods   al,BYTE PTR ds:[esi]
  417db8:	or     al,0x14
  417dba:	sti    
  417dbb:	outs   dx,DWORD PTR cs:[esi]
  417dbd:	jle    0x417dd9
  417dbf:	mov    WORD PTR [eax+eax*1],es
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	in     eax,0x76
  417e42:	sbb    BYTE PTR [esp+ebp*1-0xafffefc],al
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [edi-0x6c],cl
  417e4e:	mov    bh,al
  417e50:	xchg   esp,eax
  417e51:	and    al,0x54
  417e53:	shl    dh,cl
  417e55:	out    0x74,al
  417e57:	retf   
  417e58:	xchg   edi,eax
  417e59:	js     0x417ec2
  417e5b:	enter  0x5924,0x5
  417e5f:	xor    esp,ebx
  417e61:	cmp    BYTE PTR [esi+0x38],al
  417e64:	ja     0x417eae
  417e66:	stos   BYTE PTR es:[edi],al
  417e67:	retf   
  417e68:	mov    ebx,DWORD PTR [esi]
  417e6a:	jns    0x417ed2
  417e6c:	inc    ecx
  417e6d:	mov    bl,0x36
  417e6f:	fs aam 0x1c
  417e72:	scas   eax,DWORD PTR es:[edi]
  417e73:	les    ecx,FWORD PTR [esi-0x364868d2]
  417e79:	lahf   
  417e7a:	push   ds
  417e7b:	repnz mov ebx,0xed70dd5b
  417e81:	mov    ebx,0x423e09d1
  417e86:	ja     0x417e52
  417e88:	in     al,dx
  417e89:	mov    ebp,DWORD PTR [esp+ecx*8+0x1c145930]
  417e90:	mov    cl,0x78
  417e92:	and    al,0xa
  417e94:	adc    DWORD PTR [ebx+0x7e364d4b],ebx
  417e9a:	cmp    BYTE PTR [esi+edx*2+0x54],0x4e
  417e9f:	iret   
  417ea0:	dec    esi
  417ea1:	or     al,0x22
  417ea3:	pusha  
  417ea4:	xchg   ebx,eax
  417ea5:	test   ecx,ecx
  417ea7:	pop    esp
  417ea8:	fcom   DWORD PTR [esp+edx*4]
  417eab:	imul   ebp,DWORD PTR [eax+ebp*1-0x5b],0x91decf8c
  417eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb4:	mov    ds:0x137a3deb,al
  417eb9:	adc    al,0x8f
  417ebb:	test   BYTE PTR [ebx+0x75],ch
  417ebe:	xor    eax,DWORD PTR [ebx-0x1a0d6dc]
  417ec4:	jns    0x417ebf
  417ec6:	mov    ebp,0xd1c9bc6b
  417ecb:	into   
  417ecc:	inc    ebp
  417ecd:	add    al,0x1
  417ecf:	mov    al,0x17
  417ed1:	mov    ah,0x70
  417ed3:	xor    DWORD PTR [ecx],eax
  417ed5:	sub    BYTE PTR [ebp+ecx*8+0x59],ch
  417ed9:	inc    edx
  417eda:	pop    ss
  417edb:	sub    al,0x1d
  417edd:	mov    ebp,0x78b34b6c
  417ee2:	xor    eax,0x9d380cb0
  417ee7:	pushf  
  417ee8:	cli    
  417ee9:	loopne 0x417f0a
  417eeb:	jne    0x417ec1
  417eed:	test   BYTE PTR [eax-0x5d893f9c],0xc5
  417ef4:	cmp    bh,ch
  417ef6:	dec    edx
  417ef7:	mov    bh,0x20
  417ef9:	and    ah,BYTE PTR [ebp+0x32c7d082]
  417eff:	addr16 enter 0xa965,0x95
  417f04:	mov    gs,WORD PTR [ebx]
  417f06:	nop
  417f07:	cdq    
  417f08:	int    0x6c
  417f0a:	mov    edx,esp
  417f0c:	ss push edi
  417f0e:	push   edi
  417f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f10:	dec    edi
  417f11:	and    ah,BYTE PTR [ebp-0x6048f2a9]
  417f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f18:	add    al,BYTE PTR [esi+0x1f]
  417f1b:	and    al,0x9d
  417f1d:	aas    
  417f1e:	imul   edx,DWORD PTR [esi-0x44],0xb2a799a8
  417f25:	bound  esi,QWORD PTR [ebx-0x34]
  417f28:	test   DWORD PTR [ebx],esp
  417f2a:	pop    es
  417f2b:	inc    ecx
  417f2c:	iret   
  417f2d:	repz (bad) 
  417f2f:	fcom   DWORD PTR [edi+0xc5a5c79]
  417f35:	sbb    eax,0xec5d61f
  417f3a:	push   ecx
  417f3b:	ins    DWORD PTR es:[edi],dx
  417f3c:	lods   eax,DWORD PTR ds:[esi]
  417f3d:	push   0xba9b88
	...
  417fb2:	add    BYTE PTR [eax],al
  417fb4:	jbe    0x417fe3
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	xor    eax,0x212b2f18
  417fc5:	add    eax,0xf50001
  417fca:	add    BYTE PTR [eax],al
  417fcc:	scas   al,BYTE PTR es:[edi]
  417fcd:	jge    0x417fbd
  417fcf:	jbe    0x418029
  417fd1:	add    dl,ah
  417fd3:	out    0x75,al
  417fd5:	and    cl,BYTE PTR [ebp+esi*2-0x3f2317a0]
  417fdc:	mov    eax,ds:0x61fd8550
  417fe1:	push   ebp
  417fe2:	hlt    
  417fe3:	and    al,BYTE PTR [ecx+0x2ba056a5]
  417fe9:	xchg   BYTE PTR [eax+0x26ec9b96],dh
  417fef:	loope  0x417fdc
  417ff1:	pop    edx
  417ff2:	hlt    
  417ff3:	mov    es,WORD PTR [esi+0x67]
  417ff6:	fnstcw WORD PTR [eax]
  417ff8:	cmp    DWORD PTR [ebp+0x6f172268],esp
  417ffe:	fsubr  QWORD PTR [edx]
  418000:	inc    ebx
  418001:	stos   BYTE PTR es:[edi],al
  418002:	xchg   ebp,eax
  418003:	add    DWORD PTR [edx],ecx
  418005:	pop    eax
  418006:	pop    eax
  418007:	dec    ebx
  418008:	retf   0x7397
  41800b:	repnz pop ss
  41800d:	cmp    DWORD PTR [esi-0x18],ebx
  418010:	adc    DWORD PTR [ecx-0x21593009],ebx
  418016:	es out dx,al
  418018:	(bad)  
  418019:	or     eax,0x6662ad40
  41801e:	inc    ecx
  41801f:	scas   eax,DWORD PTR es:[edi]
  418020:	repz sbb DWORD PTR [ebp+eax*2+0x3ab0808],0x18
  418029:	outs   dx,DWORD PTR ds:[esi]
  41802a:	in     al,0x68
  41802c:	stos   BYTE PTR es:[edi],al
  41802d:	aad    0x25
  41802f:	cmc    
  418030:	push   cs
  418031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418032:	xchg   DWORD PTR [edx-0x7a],esp
  418035:	adc    al,0x57
  418037:	into   
  418038:	out    dx,al
  418039:	xor    edx,DWORD PTR [eax+0x7dd517d1]
  41803f:	mov    cl,0x3e
  418041:	loope  0x4180aa
  418043:	inc    edx
  418044:	mov    eax,0x512b79e
  418049:	push   es
  41804a:	ds fsub st,st(7)
  41804d:	int3   
  41804e:	(bad)  
  41804f:	jp     0x418038
  418051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418052:	xor    eax,0x85dcf29f
  418057:	xchg   esp,eax
  418058:	cmp    eax,esi
  41805a:	xchg   esi,eax
  41805b:	(bad)  
  41805c:	js     0x417fdf
  41805e:	(bad)  [edx+ebp*4]
  418061:	mov    ebx,0xb9fbb052
  418066:	addr16 cwde 
  418068:	lds    esi,FWORD PTR [ebx+0x75]
  41806b:	fsubr  QWORD PTR [edi+0x44]
  41806e:	pop    ss
  41806f:	ja     0x417ffc
  418071:	es dec edi
  418073:	imul   ebx,ecx,0x162422e5
  418079:	xchg   edi,eax
  41807a:	inc    ecx
  41807b:	inc    eax
  41807c:	call   0x6762ed5d
  418081:	inc    edi
  418082:	pop    ss
  418083:	or     eax,0xf092d2a1
  418088:	mov    edx,0xe6aa0e34
  41808d:	cmp    esi,DWORD PTR [ebp-0x29]
  418090:	jge    0x4180ac
  418092:	js     0x41803c
  418094:	mov    ebx,0xb93bfa0c
  418099:	dec    ebx
  41809a:	nop
  41809b:	out    0x5b,al
  41809d:	cmp    al,0x3c
  41809f:	mov    edx,DWORD PTR [ecx+0x51caed67]
  4180a5:	xchg   edi,eax
  4180a6:	bound  ecx,QWORD PTR [ecx]
  4180a8:	into   
  4180a9:	loop   0x4180f1
  4180ab:	ja     0x41808d
  4180ad:	ret    
  4180ae:	out    dx,al
  4180af:	test   eax,0x306e609e
  4180b4:	nop
  4180b5:	jmp    0x41d3:0xb4e1c570
  4180bc:	mov    dh,0xe0
  4180be:	add    ebp,DWORD PTR [ebx+ecx*1+0x0]
	...
  418131:	add    BYTE PTR [eax],al
  418133:	add    BYTE PTR [esi-0xe58fe7],ah
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	pushf  
  418141:	inc    ebx
  418142:	adc    ebp,edx
  418144:	push   ss
  418145:	push   es
  418146:	add    DWORD PTR [eax],eax
  418148:	cmc    
  418149:	add    BYTE PTR [eax],al
  41814b:	add    BYTE PTR [esi+0x45],cl
  41814e:	ret    0x2c99
  418151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418152:	retf   0xad9f
  418155:	and    DWORD PTR [ebx-0x35],0x1a
  418159:	sub    ebp,eax
  41815b:	xor    al,0xf1
  41815d:	arpl   bx,ax
  41815f:	push   ss
  418160:	mov    dh,0x13
  418162:	xchg   edi,eax
  418163:	add    BYTE PTR [eax-0x6b],dh
  418166:	push   ebp
  418167:	jns    0x418151
  418169:	dec    ebp
  41816a:	push   ds
  41816b:	sbb    eax,DWORD PTR [edx]
  41816d:	sub    edi,ecx
  41816f:	mov    esp,0xe8fb1019
  418174:	repz bnd jnp 0x418128
  418178:	sbb    DWORD PTR [ebx+eiz*8-0x8],edx
  41817c:	in     al,0xad
  41817e:	ins    DWORD PTR es:[edi],dx
  41817f:	in     eax,dx
  418180:	mov    bl,0x67
  418182:	arpl   WORD PTR [edx+0x2f],di
  418185:	xchg   DWORD PTR [eax],ecx
  418187:	inc    bl
  418189:	lahf   
  41818a:	inc    esi
  41818b:	in     al,0x15
  41818d:	or     BYTE PTR [eax*4+0xc60b0af],0x59
  418195:	jg     0x418195
  418197:	loop   0x41815a
  418199:	xor    bl,dl
  41819b:	out    0xd4,al
  41819d:	pop    esi
  41819e:	push   0xffffffea
  4181a0:	xchg   ebx,eax
  4181a1:	int3   
  4181a2:	pop    eax
  4181a3:	pop    edi
  4181a4:	jge    0x4181b0
  4181a6:	fwait
  4181a7:	dec    esp
  4181a8:	mov    ebp,0xe35dfbda
  4181ad:	mov    dl,0x10
  4181af:	pop    ds
  4181b0:	aaa    
  4181b1:	(bad)  
  4181b2:	or     eax,0xae7bada5
  4181b7:	mov    eax,0xc8539291
  4181bc:	call   0x990a:0xf32118ab
  4181c3:	enter  0x7ee,0x88
  4181c7:	daa    
  4181c8:	pushf  
  4181c9:	(bad)  
  4181ca:	and    ah,BYTE PTR [ecx]
  4181cc:	mov    bh,0x4b
  4181ce:	dec    edi
  4181cf:	pop    es
  4181d0:	mov    ah,0xb3
  4181d2:	inc    esp
  4181d3:	test   eax,0x8211aad5
  4181d8:	pushf  
  4181d9:	outs   dx,DWORD PTR ds:[esi]
  4181da:	mov    eax,0xcc5d21e3
  4181df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e0:	sub    al,0x9b
  4181e2:	or     dx,WORD PTR [eax+0x3666b557]
  4181e9:	jmp    0x83ce3885
  4181ee:	cs inc edi
  4181f0:	lock add DWORD PTR [ecx-0x67a4b368],ebp
  4181f7:	mov    eax,ds:0xa6aff15f
  4181fc:	mov    bl,0xcd
  4181fe:	and    bh,BYTE PTR [ebx-0x2a]
  418201:	js     0x418221
  418203:	imul   ecx,DWORD PTR [eax-0x30],0xde38f3a4
  41820a:	fisubr DWORD PTR [esi]
  41820c:	jecxz  0x418196
  41820e:	pop    ss
  41820f:	pop    esi
  418210:	mov    cl,0xeb
  418212:	out    dx,al
  418213:	in     eax,dx
  418214:	ins    DWORD PTR es:[edi],dx
  418215:	repz ds inc ebx
  418218:	xor    BYTE PTR [ecx+ebp*1-0x5b],ah
  41821c:	jle    0x4181c9
  41821e:	sub    edx,DWORD PTR [eax-0x98246c3]
  418224:	sahf   
  418225:	sbb    BYTE PTR [ecx-0x3b],bl
  418228:	pusha  
  418229:	out    0xc0,al
  41822b:	ficom  WORD PTR [edx]
  41822d:	and    edi,DWORD PTR [esi+0x6d18d952]
  418233:	fwait
  418234:	and    BYTE PTR [edi],dh
  418236:	inc    esi
  418237:	push   0xcf912fdc
  41823c:	js     0x4181ec
  41823e:	xchg   esp,eax
  41823f:	jne    0x41824e
	...
  4182b1:	add    BYTE PTR [eax],al
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	mov    ds:0xbe0477b,eax
  4182c5:	pop    es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	cmc    
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [eax+eiz*8+0x7e],dl
  4182cf:	mov    cl,0xf9
  4182d1:	hlt    
  4182d2:	ja     0x41831a
  4182d4:	ret    
  4182d5:	loope  0x418309
  4182d7:	xor    ebp,DWORD PTR [edx]
  4182d9:	ss out dx,eax
  4182db:	and    dl,bh
  4182dd:	leave  
  4182de:	aad    0x2d
  4182e0:	fist   WORD PTR [ecx-0x51f80acf]
  4182e6:	push   0xffffffb3
  4182e8:	dec    esi
  4182e9:	lahf   
  4182ea:	lods   eax,DWORD PTR ds:[esi]
  4182eb:	xchg   DWORD PTR [ecx-0x740b304e],ecx
  4182f1:	adc    al,0x39
  4182f3:	mov    ecx,0x7d07a977
  4182f8:	dec    ebx
  4182f9:	cmp    DWORD PTR [eax+edi*2+0x7d],ebp
  4182fd:	push   edx
  4182fe:	push   ss
  4182ff:	cmp    dl,ah
  418301:	arpl   WORD PTR [eax-0x25],bp
  418304:	xor    al,0x30
  418306:	outs   dx,DWORD PTR ds:[esi]
  418307:	popa   
  418308:	mov    ds:0xf1a85cc8,eax
  41830d:	ror    DWORD PTR [esi],1
  41830f:	push   eax
  418310:	push   eax
  418311:	jge    0x41833c
  418313:	test   al,0xc8
  418315:	pop    ecx
  418316:	je     0x4182d7
  418318:	adc    esp,DWORD PTR [ebp+ebx*1+0x3c]
  41831c:	imul   esp,DWORD PTR [ebp+edx*2-0x2e3d18a8],0xffffffc4
  418324:	jbe    0x41834e
  418326:	outs   dx,BYTE PTR ds:[esi]
  418327:	sub    DWORD PTR [ebp+edx*2-0x60],eax
  41832b:	ror    BYTE PTR [edx+0x5d],0x77
  41832f:	mov    edi,0x1cfa665d
  418334:	inc    ebp
  418335:	test   DWORD PTR [eax+0x1bc8eabd],ecx
  41833b:	jp     0x4183af
  41833d:	dec    esi
  41833e:	xor    eax,0xdecc22b8
  418343:	dec    eax
  418344:	int3   
  418345:	xor    cl,bl
  418347:	pop    edx
  418348:	and    ebx,edx
  41834a:	xor    DWORD PTR [edx+0x7933459b],ebp
  418350:	into   
  418351:	jnp    0x418352
  418353:	sti    
  418354:	xchg   ebx,eax
  418355:	pop    esp
  418356:	call   0xaead:0xaa2f3666
  41835d:	shl    BYTE PTR [ebp-0x53],cl
  418360:	int3   
  418361:	add    BYTE PTR ds:0x1ad7f772,dl
  418367:	nop
  418368:	sti    
  418369:	std    
  41836a:	imul   esp,DWORD PTR [ebx-0x1204a089],0xbdf1c133
  418374:	or     BYTE PTR [edx+0x12537956],ch
  41837a:	push   eax
  41837b:	out    dx,eax
  41837c:	bound  ebp,QWORD PTR [ebx-0x4a89d810]
  418382:	xor    BYTE PTR [edx-0xe],0xca
  418386:	ja     0x41836c
  418388:	dec    edx
  418389:	retf   0x803f
  41838c:	and    al,0x45
  41838e:	jecxz  0x4183aa
  418390:	aas    
  418391:	inc    ebp
  418392:	push   ebp
  418393:	xchg   ebx,eax
  418394:	pop    edx
  418395:	adc    ecx,0xffffffeb
  418398:	rcr    BYTE PTR [esi+0x66078265],0xf
  41839f:	rol    ebp,cl
  4183a1:	push   ss
  4183a2:	fbld   TBYTE PTR [edx]
  4183a4:	add    DWORD PTR [esi+0x15d487bc],esp
  4183aa:	mov    ss,WORD PTR [ebp+0x18]
  4183ad:	cmc    
  4183ae:	push   esi
  4183af:	fld    DWORD PTR [eax]
  4183b1:	sub    ecx,edi
  4183b3:	or     al,0x7d
  4183b5:	cmc    
  4183b6:	pop    esi
  4183b7:	and    dh,BYTE PTR [ecx-0x13406091]
  4183bd:	cmp    BYTE PTR [edi+0xaf38],al
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	adc    edx,ecx
  418442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418443:	xor    al,BYTE PTR [eax]
  418445:	or     BYTE PTR [ecx],al
  418447:	add    ch,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    al,bh
  41844d:	jle    0x418445
  41844f:	xchg   ecx,eax
  418450:	dec    ecx
  418451:	les    esp,FWORD PTR [ebx*2+0x6c28c354]
  418458:	arpl   WORD PTR [ecx+0x21d9c801],sp
  41845e:	(bad)  
  41845f:	or     al,0xa6
  418461:	out    0xc9,eax
  418463:	mov    fs,WORD PTR [edx+0x3]
  418466:	lods   eax,DWORD PTR ds:[esi]
  418467:	xchg   esp,eax
  418468:	in     eax,dx
  418469:	and    al,0x6a
  41846b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41846c:	push   ss
  41846d:	out    0xfb,eax
  41846f:	mov    ch,0x95
  418471:	inc    esi
  418472:	mov    eax,ds:0x3f268ac3
  418477:	push   esp
  418478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418479:	and    al,0x1c
  41847b:	sbb    DWORD PTR [ebx],ecx
  41847d:	(bad)  
  41847e:	push   esi
  41847f:	mov    al,0xd7
  418481:	mov    edx,ebp
  418483:	lea    esp,[edi+0x1a]
  418486:	(bad)  
  418487:	outs   dx,DWORD PTR ds:[esi]
  418488:	call   0x2116:0x7829590b
  41848f:	xchg   esp,eax
  418490:	into   
  418491:	scas   eax,DWORD PTR es:[edi]
  418492:	mov    ebp,0xa6ebe05d
  418497:	pop    ecx
  418498:	sub    BYTE PTR [edx+edi*4+0x3],ah
  41849c:	inc    edx
  41849d:	and    al,0x69
  41849f:	test   al,0x34
  4184a1:	mov    BYTE PTR [edx+0x1f],al
  4184a4:	and    bl,cl
  4184a6:	inc    esi
  4184a7:	fst    DWORD PTR [ebx]
  4184a9:	mov    eax,0x3a3dc42f
  4184ae:	out    dx,eax
  4184af:	cmp    BYTE PTR [ebx+ebx*1],0x47
  4184b3:	pop    es
  4184b4:	cmc    
  4184b5:	imul   ecx,edx,0xbf82752b
  4184bb:	rcl    BYTE PTR [eax+0x35],cl
  4184be:	pop    edi
  4184bf:	mov    ?,WORD PTR [ebx-0x7]
  4184c2:	pushf  
  4184c3:	retf   
  4184c4:	fadd   DWORD PTR [ebx+0x6062a1a7]
  4184ca:	sub    BYTE PTR [eax+0x69a3f5c7],ch
  4184d0:	mov    ch,0xb2
  4184d2:	sbb    eax,0x58d81635
  4184d7:	data16 sbb BYTE PTR [edx-0x4d],ch
  4184db:	lods   eax,DWORD PTR ds:[esi]
  4184dc:	in     al,dx
  4184dd:	std    
  4184de:	jecxz  0x418546
  4184e0:	sub    al,0xa0
  4184e2:	repz jns 0x41854c
  4184e5:	stos   DWORD PTR es:[edi],eax
  4184e6:	push   ebx
  4184e7:	dec    ecx
  4184e8:	les    edx,FWORD PTR [esi+0x71dbba27]
  4184ee:	inc    edx
  4184ef:	std    
  4184f0:	cwde   
  4184f1:	retf   
  4184f2:	pop    ebx
  4184f3:	pop    ss
  4184f4:	lock pop edi
  4184f6:	inc    edi
  4184f7:	mov    ah,0xfb
  4184f9:	xchg   edx,eax
  4184fa:	cmp    DWORD PTR [eax],ebx
  4184fc:	jb     0x4184e6
  4184fe:	pop    ecx
  4184ff:	dec    ebx
  418500:	add    al,0xd5
  418502:	mov    ebp,DWORD PTR [esi+0x1c252acd]
  418508:	stos   DWORD PTR es:[edi],eax
  418509:	(bad)  
  41850a:	fdiv   DWORD PTR [edi]
  41850c:	pop    ds
  41850d:	inc    eax
  41850e:	loope  0x418502
  418510:	sub    dh,BYTE PTR [ecx-0x318537d6]
  418516:	mov    edx,0x28eb2237
  41851b:	pop    ecx
  41851c:	xchg   edi,eax
  41851d:	repz in eax,0x24
  418520:	mov    cl,0x36
  418522:	icebp  
  418523:	rol    DWORD PTR [ebp-0x1c],cl
  418526:	mov    esi,0x35457aa8
  41852b:	neg    ch
  41852d:	and    al,0x69
  41852f:	pmaddwd mm2,QWORD PTR [esi]
  418532:	aad    0xdb
  418534:	dec    edx
  418535:	push   sp
  418537:	sub    eax,0x385cfd3b
  41853c:	addr16 xchg edi,eax
  41853e:	pop    ecx
  41853f:	push   edi
  418540:	and    eax,0x0
	...
  4185b1:	add    BYTE PTR [eax],al
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	je     0x4185fd
  4185c2:	daa    
  4185c3:	adc    al,0xf5
  4185c5:	or     BYTE PTR [ecx],al
  4185c7:	add    ch,dh
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [edx+0x56],al
  4185ce:	xchg   esp,eax
  4185cf:	int    0x58
  4185d1:	mov    ebx,0x3b4d1a35
  4185d6:	and    dl,0x77
  4185d9:	mov    bh,0x6c
  4185db:	call   DWORD PTR [ebx]
  4185dd:	adc    edi,eax
  4185df:	xor    bh,ch
  4185e1:	pop    edi
  4185e2:	stos   BYTE PTR es:[edi],al
  4185e3:	sub    DWORD PTR [ebx+0x4e1c54d],0x69
  4185ea:	pop    ebx
  4185eb:	mul    eax
  4185ed:	or     ch,BYTE PTR [ebp+0x298720fa]
  4185f3:	(bad)  
  4185f4:	idiv   BYTE PTR [ecx+eiz*8+0x17]
  4185f8:	mov    ebx,0x5b6b2eb4
  4185fd:	inc    esp
  4185fe:	clc    
  4185ff:	jle    0x418679
  418601:	(bad)  
  418603:	ror    BYTE PTR [edx+eax*4-0x54],cl
  418607:	or     bl,BYTE PTR [eax+edi*2-0x7b]
  41860b:	mov    al,0x30
  41860d:	mov    bh,dh
  41860f:	push   esi
  418610:	dec    ebx
  418611:	mov    ebp,0x429f3e19
  418616:	pop    edx
  418617:	xchg   edi,eax
  418618:	pop    esp
  418619:	pusha  
  41861a:	mov    esp,DWORD PTR [ecx+0x6e0cf153]
  418620:	xor    BYTE PTR [edi],0x61
  418623:	dec    edi
  418624:	and    cl,BYTE PTR ds:0xc3005c9f
  41862a:	sub    al,ch
  41862c:	faddp  st(7),st
  41862e:	cmp    al,0x12
  418630:	pop    edx
  418631:	pop    ss
  418632:	pop    ebp
  418633:	dec    ebp
  418634:	dec    ecx
  418635:	popw   es
  418637:	xor    eax,0x92a26ffe
  41863c:	mov    dl,0x71
  41863e:	cs (bad) 
  418640:	out    0xaa,eax
  418642:	or     al,0xd7
  418644:	ss ret 
  418646:	adc    ebp,DWORD PTR [edx-0x1976638]
  41864c:	xchg   BYTE PTR [ebp+0x51],ah
  41864f:	mov    ch,0x65
  418651:	les    ecx,FWORD PTR [edx-0x49]
  418654:	mov    edi,0xc439b578
  418659:	mov    dl,dh
  41865b:	in     eax,dx
  41865c:	ss inc esi
  41865e:	xor    eax,0xd9b8d228
  418663:	jmp    0x4631:0xf65ee499
  41866a:	je     0x4186c6
  41866c:	fild   WORD PTR [ebp+0x21d5a1c0]
  418672:	adc    eax,0xc13cef89
  418677:	mov    dh,0xec
  418679:	aad    0xa3
  41867b:	hlt    
  41867c:	adc    al,dh
  41867e:	dec    edx
  41867f:	inc    edx
  418680:	lea    ebp,[ecx+0x75]
  418683:	sub    al,0xf4
  418685:	mov    ecx,DWORD PTR [ebp-0x4d]
  418688:	mov    ah,0xe7
  41868a:	shr    BYTE PTR [ebx],cl
  41868c:	mov    bl,0xfa
  41868e:	dec    edi
  41868f:	(bad)  
  418690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418691:	popf   
  418692:	adc    al,0x8d
  418694:	add    BYTE PTR [edx-0x6f],0xe2
  418698:	xchg   ecx,eax
  418699:	push   es
  41869a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41869b:	mov    ch,0x6e
  41869d:	ja     0x418621
  41869f:	or     al,0xda
  4186a1:	ficom  WORD PTR [ebx-0x23fcc6aa]
  4186a7:	cmp    bp,WORD PTR [eax-0x7a]
  4186ab:	jns    0x41869b
  4186ad:	xor    DWORD PTR [eax],ecx
  4186af:	lock das 
  4186b1:	jne    0x4186a9
  4186b3:	adc    BYTE PTR [edi-0xbb4105a],0x2c
  4186ba:	call   0x35a27bca
  4186bf:	loopne 0x418735
	...
  418731:	add    BYTE PTR [eax],al
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    ebx,ebx
  418741:	scas   al,BYTE PTR es:[edi]
  418742:	iret   
  418743:	jo     0x41872f
  418745:	or     DWORD PTR [ecx],eax
  418747:	add    ch,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    BYTE PTR [esi-0x80],cl
  41874e:	ss push esp
  418750:	pop    esp
  418751:	fild   WORD PTR [edi+0x32]
  418754:	xchg   WORD PTR [ecx],di
  418757:	jmp    0x9a8235a4
  41875c:	mov    BYTE PTR [edx-0x67b94d5f],dh
  418762:	arpl   bp,si
  418764:	fsub   DWORD PTR [esi-0x5c428d5b]
  41876a:	mov    edx,0x2e2aeae8
  41876f:	sbb    bl,bh
  418771:	sbb    bl,BYTE PTR [ebx]
  418773:	jl     0x4186f5
  418775:	dec    eax
  418776:	adc    esp,eax
  418778:	or     ebp,DWORD PTR [ebp-0x4]
  41877b:	jecxz  0x418772
  41877d:	inc    ebx
  41877e:	jne    0x41878d
  418780:	loope  0x418723
  418782:	int    0x1d
  418784:	mov    ebx,0x9069fc05
  418789:	mov    bh,dl
  41878b:	stc    
  41878c:	and    dl,bh
  41878e:	scas   eax,DWORD PTR es:[edi]
  41878f:	mov    ch,al
  418791:	out    dx,eax
  418792:	and    BYTE PTR [esp+eax*1+0x46],0xca
  418797:	ds dec ecx
  418799:	or     al,0x28
  41879b:	test   DWORD PTR ds:0x59134c0c,eax
  4187a1:	sub    BYTE PTR [edx-0x52],0x40
  4187a5:	push   es
  4187a6:	push   cs
  4187a7:	mov    dl,0x5
  4187a9:	mov    ebx,0x68306050
  4187ae:	ins    DWORD PTR es:[edi],dx
  4187af:	cmp    eax,0x526dd00c
  4187b4:	mov    edi,0xe202dbf1
  4187b9:	xchg   ebx,edi
  4187bb:	mov    bh,0xa0
  4187bd:	or     BYTE PTR [ebx+0x3d],al
  4187c0:	repnz mov ?,ecx
  4187c3:	test   BYTE PTR [eax-0x1ae848de],ah
  4187c9:	aaa    
  4187ca:	outs   dx,BYTE PTR ds:[esi]
  4187cb:	pop    esi
  4187cc:	aam    0x48
  4187ce:	fs js  0x4187da
  4187d1:	stos   DWORD PTR es:[edi],eax
  4187d2:	mov    ds:0xe7b7af4f,eax
  4187d7:	and    al,ah
  4187d9:	pop    esi
  4187da:	or     eax,0xe7e996f
  4187df:	or     eax,0x7a125647
  4187e4:	xchg   edi,eax
  4187e5:	cld    
  4187e6:	ds in  eax,0x59
  4187e9:	and    eax,0x6eef772c
  4187ee:	inc    ebp
  4187ef:	sahf   
  4187f0:	mov    esi,0xc934f96
  4187f5:	add    esi,DWORD PTR [ebx*2-0x5b39cf2a]
  4187fc:	inc    esi
  4187fd:	fdiv   st(1),st
  4187ff:	dec    ebp
  418800:	out    dx,al
  418801:	pop    ecx
  418802:	icebp  
  418803:	ins    BYTE PTR es:[edi],dx
  418804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418805:	in     eax,0xb7
  418807:	addr16 mov ch,0x3d
  41880a:	sbb    ch,BYTE PTR [ebp+0x4a615162]
  418810:	rcl    esi,0xc4
  418813:	lods   al,BYTE PTR ds:[esi]
  418814:	stc    
  418815:	jle    0x4187ae
  418817:	lods   eax,DWORD PTR ds:[esi]
  418818:	(bad)  
  418819:	int    0xc0
  41881b:	iret   
  41881c:	leave  
  41881d:	das    
  41881e:	dec    esi
  41881f:	and    BYTE PTR [esi+0x47],0xdd
  418823:	jnp    0x41884c
  418825:	pushf  
  418826:	xor    dh,BYTE PTR [edi-0x5e285264]
  41882c:	fimul  DWORD PTR [esi+0xf]
  41882f:	loop   0x418819
  418831:	ret    
  418832:	mov    al,0x1b
  418834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418835:	jbe    0x418881
  418837:	clc    
  418838:	xor    edx,edx
  41883a:	jmp    0x41882b
  41883c:	shl    BYTE PTR [esi-0x12],1
  41883f:	imul   edx,ebx,0x0
	...
  4188b1:	add    BYTE PTR [eax],al
  4188b3:	add    BYTE PTR [eax+0x41],bl
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x68e59832,al
  4188c3:	lahf   
  4188c4:	fisttp WORD PTR [edx]
  4188c6:	add    DWORD PTR [eax],eax
  4188c8:	cmc    
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [eax],cl
  4188cd:	mov    DWORD PTR [eax+ebx*8],esp
  4188d0:	xchg   BYTE PTR [ecx-0x4be9ee47],cl
  4188d6:	mov    BYTE PTR fs:[eax-0x64f51925],ah
  4188dd:	xchg   BYTE PTR [eax-0x4f],bh
  4188e0:	(bad)  
  4188e1:	in     eax,0x10
  4188e3:	fwait
  4188e4:	or     bl,BYTE PTR [ebx+0x3a]
  4188e7:	push   eax
  4188e8:	out    0x89,al
  4188ea:	call   0xe005f8a8
  4188ef:	scas   eax,DWORD PTR es:[edi]
  4188f0:	jp     0x4188a7
  4188f2:	inc    ecx
  4188f3:	pop    es
  4188f4:	ds scas al,BYTE PTR es:[edi]
  4188f6:	aaa    
  4188f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f8:	or     eax,eax
  4188fa:	and    ebx,DWORD PTR [ebx]
  4188fc:	dec    ebp
  4188fd:	dec    eax
  4188fe:	(bad)  
  418900:	mov    dh,0xb0
  418902:	sub    eax,0x2ab5efdd
  418907:	mov    ebp,0x6b316b2c
  41890c:	rol    BYTE PTR [ecx],cl
  41890e:	adc    DWORD PTR [eax+0x7a506ea3],0xc28880b9
  418918:	ss jo  0x41894c
  41891b:	cmp    eax,0x2f5d7fed
  418920:	push   ds
  418921:	cmp    BYTE PTR [ecx-0x7a],0x53
  418925:	sbb    al,0x39
  418927:	leave  
  418928:	adc    al,BYTE PTR ds:0x20fc4178
  41892e:	mov    eax,0xbc4c5202
  418933:	int    0x96
  418935:	icebp  
  418936:	fisttp WORD PTR [eax+0x3c33f54e]
  41893c:	mov    edi,0xe8aa5369
  418941:	dec    ebp
  418942:	xchg   ebx,eax
  418943:	hlt    
  418944:	mov    al,ds:0xdf1fad7f
  418949:	pop    es
  41894a:	pop    esi
  41894b:	push   cs
  41894c:	(bad)  
  41894d:	mov    al,0x80
  41894f:	jbe    0x4188e5
  418951:	adc    BYTE PTR [ebx-0x50e48b42],dh
  418957:	mov    ebx,0x296a37da
  41895c:	adc    eax,0xc82b29fa
  418961:	(bad)  
  418962:	jecxz  0x4188f0
  418964:	push   ebp
  418965:	xlat   BYTE PTR ds:[ebx]
  418966:	or     ch,bl
  418968:	setnp  BYTE PTR [edi]
  41896b:	sub    al,0x1c
  41896d:	retf   0x83b7
  418970:	adc    BYTE PTR [eax+0x605ae79e],0xa3
  418977:	jmp    0x41896b
  418979:	inc    edx
  41897a:	fs xchg edx,eax
  41897c:	sbb    eax,DWORD PTR [ebp+eiz*2-0x2b736af8]
  418983:	pop    edi
  418984:	retf   0xe78
  418987:	test   al,0xaa
  418989:	test   al,0xd6
  41898b:	outs   dx,DWORD PTR ds:[esi]
  41898c:	mov    ebp,0x5adbdd91
  418991:	push   esp
  418992:	retf   
  418993:	push   esp
  418994:	pop    ds
  418995:	clc    
  418996:	xor    eax,0x7237fded
  41899b:	mov    ah,0xb5
  41899d:	push   cs
  41899e:	mov    BYTE PTR [esi-0x24],al
  4189a1:	pop    es
  4189a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189a4:	dec    edx
  4189a5:	jnp    0x418973
  4189a7:	add    bh,BYTE PTR [eax+0x3b395c4f]
  4189ad:	mov    ah,0x53
  4189af:	std    
  4189b0:	into   
  4189b1:	out    0x17,al
  4189b3:	ss mov ch,0xef
  4189b6:	leave  
  4189b7:	xor    ebp,DWORD PTR [edx+0x7891ad6b]
  4189bd:	outs   dx,DWORD PTR ds:[esi]
  4189be:	push   ebx
  4189bf:	jmp    0x418a85
	...
  418a34:	das    
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	mov    ebx,0xd45db323
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    ch,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    cl,al
  418a4d:	loope  0x418a38
  418a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a50:	sbb    dh,BYTE PTR [ecx]
  418a52:	mov    eax,0xc1dcb72f
  418a57:	in     eax,dx
  418a58:	inc    edi
  418a59:	and    ebx,esp
  418a5b:	adc    BYTE PTR [ebx+0xd7b9ba2],bl
  418a61:	pop    eax
  418a62:	dec    ecx
  418a63:	call   0x4a9b70e
  418a68:	and    al,0x25
  418a6a:	cmp    al,0x9a
  418a6c:	sar    edx,0x69
  418a6f:	cmp    BYTE PTR [edx],bh
  418a71:	jae    0x418a29
  418a73:	ins    DWORD PTR es:[edi],dx
  418a74:	int3   
  418a75:	in     al,0x41
  418a77:	dec    ecx
  418a78:	(bad)  
  418a7a:	inc    eax
  418a7b:	enter  0x7f61,0xa7
  418a7f:	popf   
  418a80:	(bad)  
  418a81:	clc    
  418a82:	cmc    
  418a83:	test   al,0x72
  418a85:	scas   eax,DWORD PTR es:[edi]
  418a86:	mov    ecx,0x637b227a
  418a8b:	sub    esi,DWORD PTR [edx+esi*2-0x24008d19]
  418a92:	test   DWORD PTR [esi+ecx*1],ebp
  418a95:	mov    eax,0x2c471c27
  418a9a:	aam    0xe2
  418a9c:	out    dx,eax
  418a9d:	mov    ch,BYTE PTR [ecx+0x4606e8dd]
  418aa3:	ds dec edi
  418aa5:	cwde   
  418aa6:	and    ecx,ebx
  418aa8:	aas    
  418aa9:	inc    ebp
  418aaa:	mov    ds:0xde371786,al
  418aaf:	test   al,0x74
  418ab1:	(bad)  
  418ab2:	(bad)  
  418ab3:	jb     0x418a63
  418ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab6:	inc    ebp
  418ab7:	sbb    edi,edx
  418ab9:	xor    ebp,0x3f605226
  418abf:	pop    eax
  418ac0:	mov    cl,0x7a
  418ac2:	sbb    DWORD PTR [edx],0x30
  418ac5:	das    
  418ac6:	push   edi
  418ac7:	sub    BYTE PTR [ebx+ebx*2],ch
  418aca:	scas   eax,DWORD PTR es:[edi]
  418acb:	jb     0x418ae8
  418acd:	or     al,0x2b
  418acf:	mov    edx,0x4a99b2ef
  418ad4:	adc    BYTE PTR [ecx],dl
  418ad6:	(bad)  
  418ad8:	dec    esi
  418ad9:	dec    edi
  418ada:	or     bh,BYTE PTR [edi-0x7fb7ace5]
  418ae0:	ror    ebx,1
  418ae2:	popf   
  418ae3:	sbb    DWORD PTR [edi-0x1b],edi
  418ae6:	sub    al,0x87
  418ae8:	or     dl,BYTE PTR [edi+0x550bb141]
  418aee:	mov    eax,ds:0x59ea70ca
  418af3:	test   eax,0x2ac218c0
  418af8:	mov    dx,0x9fbe
  418afc:	(bad)  
  418afd:	jo     0x418aed
  418aff:	push   cs
  418b00:	inc    ebx
  418b01:	fld    QWORD PTR [ebx+esi*2+0x25bc52c5]
  418b08:	inc    BYTE PTR [ebp+eax*2+0x58]
  418b0c:	sbb    BYTE PTR [esi-0x26],ch
  418b0f:	jns    0x418b66
  418b11:	mov    ss,WORD PTR [ecx-0x44]
  418b14:	jle    0x418b52
  418b16:	das    
  418b17:	outs   dx,DWORD PTR ds:[esi]
  418b18:	mov    eax,ds:0xccd7d361
  418b1d:	mov    eax,0x88aeca2c
  418b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b23:	and    al,0x30
  418b25:	fwait
  418b26:	sub    edx,esi
  418b28:	sti    
  418b29:	pop    ds
  418b2a:	popa   
  418b2b:	loopne 0x418ae6
  418b2d:	push   esi
  418b2e:	stc    
  418b2f:	sub    eax,0x96e29dd1
  418b34:	imul   ecx,DWORD PTR [eiz*2+0x7ee23572],0x480bc81e
  418b3f:	mov    ebp,0xe1
	...
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	or     eax,DWORD PTR [eax]
  418bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc3:	cld    
  418bc4:	leave  
  418bc5:	or     al,0x1
  418bc7:	add    ch,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [ebx-0x69],cl
  418bce:	js     0x418be1
  418bd0:	jmp    0x418c4d
  418bd2:	enter  0x6216,0xa7
  418bd6:	js     0x418ba9
  418bd8:	sub    BYTE PTR ds:0x298e528e,bh
  418bde:	retf   
  418bdf:	cwde   
  418be0:	iret   
  418be1:	mov    al,bl
  418be3:	js     0x418b7b
  418be5:	mov    ah,0x9a
  418be7:	add    al,0x1d
  418be9:	call   DWORD PTR [ebx+0x7aa477a4]
  418bef:	mov    ah,0x7
  418bf1:	jg     0x418bd5
  418bf3:	stos   BYTE PTR es:[edi],al
  418bf4:	cmp    al,0xd9
  418bf6:	retf   
  418bf7:	(bad)
  418bfa:	in     al,0x64
  418bfc:	pop    DWORD PTR [ebx+edi*8]
  418bff:	sar    BYTE PTR [ebx-0x5faa4bd7],cl
  418c05:	hlt    
  418c06:	jno    0x418b95
  418c08:	or     BYTE PTR [edx-0x55],dl
  418c0b:	sub    al,bh
  418c0d:	aaa    
  418c0e:	es dec edx
  418c10:	jbe    0x418b9a
  418c12:	iret   
  418c13:	lock inc edi
  418c15:	mov    dh,BYTE PTR [esi+0x4d]
  418c18:	mov    ch,dl
  418c1a:	fist   DWORD PTR [ecx]
  418c1c:	add    ah,dh
  418c1e:	jmp    0x418bf4
  418c20:	xchg   ebx,eax
  418c21:	xchg   edi,eax
  418c22:	push   ss
  418c23:	mov    bh,0x58
  418c25:	sub    esi,DWORD PTR [edx]
  418c27:	sub    bh,BYTE PTR [ebp-0x3c]
  418c2a:	aad    0xb7
  418c2c:	dec    esp
  418c2d:	mov    cl,0xd7
  418c2f:	cwde   
  418c30:	mov    ebp,0xf9b3a68d
  418c35:	sub    eax,0xe4d698ed
  418c3a:	(bad)  
  418c3b:	pop    eax
  418c3c:	loope  0x418bc7
  418c3e:	shr    BYTE PTR [eax],cl
  418c40:	int    0xc5
  418c42:	outs   dx,BYTE PTR ds:[esi]
  418c43:	mov    DWORD PTR [ecx-0x3ee92cdf],ecx
  418c49:	fadd   st,st(0)
  418c4b:	jg     0x418bfc
  418c4d:	or     DWORD PTR [edx-0x1bb52b35],edx
  418c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c54:	mov    esi,0xeffc57fa
  418c59:	mov    ebp,0xf673fa3
  418c5e:	pop    eax
  418c5f:	add    esp,0x188fda09
  418c65:	pusha  
  418c66:	add    DWORD PTR [ebx-0x42],edx
  418c69:	pop    eax
  418c6a:	cs iret 
  418c6c:	not    BYTE PTR [eax]
  418c6e:	xchg   ebx,eax
  418c6f:	inc    edx
  418c70:	loope  0x418c2e
  418c72:	cld    
  418c73:	xchg   esi,eax
  418c74:	pop    esi
  418c75:	push   0xde0d732c
  418c7a:	gs nop
  418c7c:	mov    dh,0x96
  418c7e:	es xchg esi,eax
  418c80:	jno    0x418cb2
  418c82:	(bad)  
  418c83:	pushf  
  418c84:	push   esp
  418c85:	cwde   
  418c86:	(bad)  
  418c87:	mov    bh,dl
  418c89:	pop    ebp
  418c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8b:	das    
  418c8c:	out    0xd5,al
  418c8e:	mov    esp,0x6ba9ece
  418c93:	jbe    0x418cbb
  418c95:	mov    ?,ebx
  418c97:	jcxz   0x418c41
  418c9a:	adc    al,0x39
  418c9c:	out    dx,al
  418c9d:	inc    ecx
  418c9e:	mov    eax,0x78d4ab70
  418ca3:	dec    edx
  418ca4:	js     0x418c84
  418ca6:	pop    esp
  418ca7:	add    DWORD PTR [ebp+0x6b],eax
  418caa:	cdq    
  418cab:	jb     0x418cbc
  418cad:	push   edi
  418cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418caf:	pop    edi
  418cb0:	popa   
  418cb1:	daa    
  418cb2:	pop    edi
  418cb3:	cdq    
  418cb4:	out    0xbb,eax
  418cb6:	int3   
  418cb7:	pop    edi
  418cb8:	or     bl,BYTE PTR [esi]
  418cba:	sub    BYTE PTR [edi-0xf],al
  418cbd:	pop    ecx
  418cbe:	and    al,0x9c
  418cc0:	call   0x418cc5
	...
  418d31:	add    BYTE PTR [eax],al
  418d33:	add    BYTE PTR [edi],dl
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x251f9361
  418d43:	sbb    edi,DWORD PTR [esi-0xafffef3]
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR [edx-0x41],bh
  418d4e:	icebp  
  418d4f:	mov    DWORD PTR [ebp-0x34f52c6c],edx
  418d55:	inc    ecx
  418d56:	and    edi,DWORD PTR [edi]
  418d58:	mov    ebp,0xd58e6b1e
  418d5d:	and    eax,DWORD PTR [esi+0x11f4408f]
  418d63:	hlt    
  418d64:	xor    al,0xe0
  418d66:	test   al,0xaa
  418d68:	fs int3 
  418d6a:	mov    al,dh
  418d6c:	(bad)  
  418d6d:	push   edx
  418d6e:	lahf   
  418d6f:	(bad)  
  418d70:	xchg   ecx,eax
  418d71:	not    DWORD PTR [ebx-0x7d]
  418d74:	rcr    edi,1
  418d76:	jle    0x418ddb
  418d78:	clc    
  418d79:	xchg   ebp,eax
  418d7a:	jns    0x418d2b
  418d7c:	mov    bh,0xb
  418d7e:	push   edx
  418d7f:	test   al,0xc1
  418d81:	cld    
  418d82:	jb     0x418d8d
  418d84:	popa   
  418d85:	mov    eax,ds:0xd35720c2
  418d8a:	les    esi,FWORD PTR [ebx]
  418d8c:	inc    eax
  418d8d:	test   DWORD PTR [eax],0xf07bcfa6
  418d93:	in     al,dx
  418d94:	arpl   di,cx
  418d96:	pop    ebp
  418d97:	gs mov bl,0xaf
  418d9a:	test   eax,0xd8af12a7
  418d9f:	or     BYTE PTR [eax-0x61],dh
  418da2:	repnz pop esp
  418da4:	std    
  418da5:	loope  0x418ddb
  418da7:	mov    al,0x6a
  418da9:	pusha  
  418daa:	pusha  
  418dab:	lods   eax,DWORD PTR ds:[esi]
  418dac:	pushf  
  418dad:	stos   DWORD PTR es:[edi],eax
  418dae:	sbb    eax,0x1e5e3095
  418db3:	mov    edi,0x15c666b6
  418db8:	jmp    0x1a71:0xb8964917
  418dbf:	sub    BYTE PTR gs:[esi+0x342ab28],cl
  418dc6:	fcomp  QWORD PTR [eax]
  418dc8:	jmp    0x4805eb21
  418dcd:	ficom  DWORD PTR [ebx+0x1d]
  418dd0:	xlat   BYTE PTR ds:[ebx]
  418dd1:	jp     0x418e15
  418dd3:	mov    dl,0x15
  418dd5:	ret    
  418dd6:	sbb    edx,ebx
  418dd8:	sub    eax,0x2c056c5d
  418ddd:	inc    BYTE PTR [ecx+ebp*8-0x26]
  418de1:	sub    DWORD PTR [edi-0x38],edx
  418de4:	sbb    dl,dl
  418de6:	or     ebp,ebp
  418de8:	cmp    eax,DWORD PTR ds:0xbcffcdc3
  418dee:	inc    ebx
  418def:	cld    
  418df0:	add    al,dh
  418df2:	out    dx,al
  418df3:	loopne 0x418e38
  418df5:	shr    BYTE PTR [esi-0xbcff189],0xb6
  418dfc:	dec    esi
  418dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfe:	mov    esp,0x1876b911
  418e03:	and    ebx,ecx
  418e05:	jmp    0xc0550374
  418e0a:	loop   0x418e66
  418e0c:	push   edx
  418e0d:	in     eax,dx
  418e0e:	push   cs
  418e0f:	and    edi,DWORD PTR [edi+0x7e]
  418e12:	dec    esp
  418e13:	imul   edx,ebx,0xffffffad
  418e16:	or     edi,ebp
  418e18:	dec    ebx
  418e19:	ret    
  418e1a:	test   al,0x82
  418e1c:	and    DWORD PTR [ebx+0x16cbb822],0x72
  418e23:	and    al,0x7d
  418e25:	arpl   WORD PTR [esi+0x22],sp
  418e28:	ret    
  418e29:	(bad)  
  418e2a:	sub    DWORD PTR [esi],ecx
  418e2c:	and    al,ch
  418e2e:	dec    edi
  418e2f:	mov    ebp,0x39364a69
  418e34:	lods   al,BYTE PTR ds:[esi]
  418e35:	pop    edx
  418e36:	sub    al,0xb9
  418e38:	cmp    BYTE PTR [edi+ebp*2-0x1540f18f],0x54
  418e40:	mov    dh,0x0
	...
  418eb2:	add    BYTE PTR [eax],al
  418eb4:	(bad)  
  418eb5:	out    0xe6,al
  418eb7:	cmp    esp,esi
  418eb9:	cmp    edi,edi
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	inc    edx
  418ec1:	outs   dx,BYTE PTR ds:[esi]
  418ec2:	imul   esp,DWORD PTR [ecx-0x4d],0xe
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	cmc    
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    BYTE PTR [edx],bh
  418ecd:	sbb    eax,0x2e95e71e
  418ed2:	jno    0x418e98
  418ed4:	dec    esi
  418ed5:	jmp    DWORD PTR [edi-0x59c33657]
  418edb:	inc    ebx
  418edc:	mov    bl,0x1c
  418ede:	jmp    0x418f22
  418ee0:	fidivr DWORD PTR [esi+0x431a1cdb]
  418ee6:	ror    BYTE PTR ds:0x22daa798,1
  418eec:	cmp    dl,al
  418eee:	jp     0x418f6e
  418ef0:	sahf   
  418ef1:	int    0xa1
  418ef3:	dec    ebx
  418ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ef5:	sbb    DWORD PTR [ecx],eax
  418ef7:	sbb    eax,0xc107bdee
  418efc:	or     BYTE PTR [edi-0x2a],ah
  418eff:	icebp  
  418f00:	cmp    edx,eax
  418f02:	dec    edi
  418f03:	rcr    bl,1
  418f05:	hlt    
  418f06:	lods   eax,DWORD PTR ds:[esi]
  418f07:	outs   dx,BYTE PTR ds:[esi]
  418f08:	dec    esi
  418f09:	push   esi
  418f0a:	shr    DWORD PTR [ebx],0x22
  418f0d:	adc    eax,0x7307cc75
  418f12:	test   eax,0x5acdc9bc
  418f17:	jge    0x418f69
  418f19:	hlt    
  418f1a:	dec    edi
  418f1b:	adc    DWORD PTR [edx+0x28],esp
  418f1e:	nop
  418f1f:	imul   edx,DWORD PTR [ecx],0x2f
  418f22:	out    0x62,al
  418f24:	repnz stos BYTE PTR es:[edi],al
  418f26:	xchg   esp,eax
  418f27:	rcr    DWORD PTR [ebp-0x535ca4d3],1
  418f2d:	fsubr  DWORD PTR [ebx]
  418f2f:	cli    
  418f30:	cmp    edx,esi
  418f32:	es sar ah,1
  418f35:	repz or BYTE PTR [edx+0x8],ch
  418f39:	push   eax
  418f3a:	outs   dx,DWORD PTR ds:[esi]
  418f3b:	and    eax,0x1e1de4ba
  418f40:	or     al,0x4a
  418f42:	xor    ebp,DWORD PTR [ebx]
  418f44:	adc    DWORD PTR [ecx-0x58b97b42],0xfffffff4
  418f4b:	or     bl,0x84
  418f4e:	retf   
  418f4f:	std    
  418f50:	jmp    0x418faa
  418f52:	jl     0x418f13
  418f54:	scas   eax,DWORD PTR es:[edi]
  418f55:	cmp    bl,dh
  418f57:	shrd   DWORD PTR [edx+0x52],eax,0xdb
  418f5c:	mov    ds:0xaee5a4be,al
  418f61:	push   es
  418f62:	push   ebp
  418f63:	fstp   st(5)
  418f65:	jns    0x418fa6
  418f67:	mov    ds:0xc0c3e18e,al
  418f6c:	fsub   DWORD PTR [edx]
  418f6e:	mov    bl,0x4
  418f70:	test   BYTE PTR [esi],ah
  418f72:	popa   
  418f73:	mov    eax,0xc38c7ea6
  418f78:	cld    
  418f79:	push   es
  418f7a:	jecxz  0x418fc5
  418f7c:	jmp    0x46c1ab2b
  418f81:	hlt    
  418f82:	idiv   dh
  418f84:	fistp  DWORD PTR ds:0x25db5e5a
  418f8a:	cdq    
  418f8b:	mov    eax,0x83787369
  418f90:	inc    ebx
  418f91:	or     al,0x40
  418f93:	imul   esi,DWORD PTR [ebp-0x40],0xfffffffe
  418f97:	clc    
  418f98:	and    eax,0xeca8e677
  418f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9e:	or     al,0xde
  418fa0:	inc    ebx
  418fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa2:	xchg   esi,eax
  418fa3:	pop    edi
  418fa4:	mov    ebx,0x30e35ebd
  418fa9:	add    edx,DWORD PTR [ecx]
  418fab:	cmc    
  418fac:	inc    edi
  418fad:	in     al,dx
  418fae:	repz fdiv st(1),st
  418fb1:	add    esi,DWORD PTR [edi+0x1c]
  418fb4:	sbb    al,0x35
  418fb6:	adc    ebx,eax
  418fb8:	push   eax
  418fb9:	scas   al,BYTE PTR es:[edi]
  418fba:	adc    esp,esp
  418fbc:	in     eax,0x3f
  418fbe:	lods   al,BYTE PTR ds:[esi]
  418fbf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shr    BYTE PTR [ebx],cl
  419041:	add    esp,DWORD PTR [ebp+0x10fa855]
  419047:	add    ch,dh
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR ds:0xd1c4870d,cl
  419051:	scas   eax,DWORD PTR es:[edi]
  419052:	retf   0xc4a1
  419055:	pcmpgtb mm4,QWORD PTR [ecx+0x66f08e15]
  41905c:	mov    dh,BYTE PTR [eax+0x50e32a78]
  419062:	cwde   
  419063:	jnp    0x418fe9
  419065:	dec    ebp
  419066:	inc    ecx
  419067:	push   ecx
  419068:	test   eax,0xf6fde34f
  41906d:	stos   DWORD PTR es:[edi],eax
  41906e:	sbb    al,0xfd
  419070:	cwde   
  419071:	lods   eax,DWORD PTR ds:[esi]
  419072:	pop    es
  419073:	jg     0x41907d
  419075:	jl     0x419006
  419077:	mov    ds:0x1f067adc,al
  41907c:	and    al,BYTE PTR [ebx-0x2c]
  41907f:	adc    DWORD PTR [edi],0x335b1d96
  419085:	test   eax,0xbf4783f1
  41908a:	pushf  
  41908b:	mov    eax,0x54d6b750
  419090:	mov    dl,0x13
  419092:	jo     0x4190dd
  419094:	push   esp
  419095:	inc    ecx
  419096:	push   es
  419097:	mov    ebx,0xff47def7
  41909c:	hlt    
  41909d:	xor    al,0xe1
  41909f:	ficom  WORD PTR [edx-0x6ed09806]
  4190a5:	ret    
  4190a6:	sbb    ah,ah
  4190a8:	mov    ds:0x8ce65cbf,al
  4190ad:	test   DWORD PTR [ebx-0x3f],edx
  4190b0:	fisttp WORD PTR [eax]
  4190b2:	mov    eax,0x489c52b3
  4190b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b8:	repz lahf 
  4190ba:	or     edx,DWORD PTR [edi-0x63701290]
  4190c0:	and    eax,0xa800b15a
  4190c5:	inc    esi
  4190c6:	push   ss
  4190c7:	retf   
  4190c8:	xor    BYTE PTR [eax],bl
  4190ca:	fwait
  4190cb:	ins    BYTE PTR es:[edi],dx
  4190cc:	mov    eax,0xf6cc5578
  4190d1:	loope  0x4190b0
  4190d3:	retf   0x1634
  4190d6:	mov    al,ds:0xc9a1c141
  4190db:	inc    ebx
  4190dc:	and    edi,0x84cfff95
  4190e2:	sub    ebx,esp
  4190e4:	idiv   BYTE PTR [ecx-0xf93ec82]
  4190ea:	inc    ecx
  4190eb:	mov    ah,0xd5
  4190ed:	sub    eax,0xacb7ea31
  4190f2:	mov    bh,BYTE PTR [ebp+0x563a487c]
  4190f8:	popa   
  4190f9:	mov    cs,WORD PTR [ecx-0x41ca8d1e]
  4190ff:	dec    ecx
  419100:	push   ds
  419101:	jp     0x4190bb
  419103:	enter  0x9f3a,0xf3
  419107:	ins    DWORD PTR es:[edi],dx
  419108:	add    ecx,ecx
  41910a:	inc    edi
  41910b:	add    al,0xa
  41910d:	loopne 0x4190f6
  41910f:	scas   al,BYTE PTR es:[edi]
  419110:	sub    eax,0x92d23a3
  419115:	retf   
  419116:	(bad)  
  419117:	and    BYTE PTR [eax+0x4b6d91cc],bh
  41911d:	mov    ecx,0xf0b44a36
  419122:	(bad)  
  419123:	shl    ecx,cl
  419125:	or     al,0x42
  419127:	mov    dl,0x8
  419129:	fnop   
  41912b:	jo     0x419117
  41912d:	jecxz  0x4190c8
  41912f:	jno    0x4190bc
  419131:	sub    eax,0x81c731c7
  419136:	pushf  
  419137:	jae    0x4190c3
  419139:	jne    0x41911a
  41913b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41913c:	ins    BYTE PTR es:[edi],dx
  41913d:	fcomp  DWORD PTR [ecx]
  41913f:	mov    ebx,0xbb
	...
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	pop    ecx
  4191c1:	out    0x2b,al
  4191c3:	cmp    bl,BYTE PTR [ebp-0xafffef0]
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [edx-0x25cbc86d],al
  4191d1:	add    BYTE PTR [ecx-0x1f83b5bb],0x6a
  4191d8:	cmp    al,0xc5
  4191da:	ja     0x419240
  4191dc:	push   es
  4191dd:	outs   dx,DWORD PTR ds:[esi]
  4191de:	jno    0x41922e
  4191e0:	jecxz  0x4191af
  4191e2:	test   eax,0x8c569cc0
  4191e7:	stos   DWORD PTR es:[edi],eax
  4191e8:	(bad)  
  4191ea:	(bad)  
  4191ec:	push   ebp
  4191ed:	sbb    DWORD PTR [ecx+0x551dfc2a],esp
  4191f3:	and    bl,BYTE PTR ds:0x6baf6970
  4191f9:	out    0x11,eax
  4191fb:	test   BYTE PTR [edi+ecx*8],dh
  4191fe:	rcl    BYTE PTR [ebx-0x43],1
  419201:	loop   0x419272
  419203:	cmp    eax,0x82e0ad15
  419208:	fdivp  st(6),st
  41920a:	rep ins DWORD PTR es:[edi],dx
  41920c:	int    0x78
  41920e:	cmp    DWORD PTR [eax-0x80],0xb2580ea9
  419215:	pop    esp
  419216:	(bad)  
  419217:	jp     0x4191f0
  419219:	les    eax,FWORD PTR [ecx+0x6f84756d]
  41921f:	mov    WORD PTR [ecx-0x27f0a1a7],ds
  419225:	sub    eax,0xf8ac3d2e
  41922a:	sbb    eax,0x61e5fc23
  41922f:	inc    ebp
  419230:	out    dx,eax
  419231:	hlt    
  419232:	int3   
  419233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419234:	push   0x74
  419236:	test   eax,0x8c793388
  41923b:	repz mov dl,0x1f
  41923e:	sub    eax,0x82a09ea5
  419243:	das    
  419244:	adc    BYTE PTR [ecx+0x516b023e],dh
  41924a:	and    al,dh
  41924c:	sbb    eax,DWORD PTR ds:0x8144adf1
  419252:	ret    0x7643
  419255:	lea    ecx,[esp+edx*4+0x168c02de]
  41925c:	lock pop ebp
  41925e:	shl    DWORD PTR [eax-0x5dcc035e],cl
  419264:	fdiv   DWORD PTR [edx-0x37190180]
  41926a:	loopne 0x419250
  41926c:	lods   al,BYTE PTR ds:[esi]
  41926d:	and    esi,DWORD PTR [edx-0x6760ba41]
  419273:	or     dh,BYTE PTR [eax]
  419275:	aam    0xdc
  419277:	sbb    DWORD PTR [eax+0x6],0x74
  41927b:	sbb    DWORD PTR [ecx-0xb8af674],ebp
  419281:	cmp    eax,0xd9d49a5e
  419286:	push   ds
  419287:	pop    edi
  419288:	ja     0x419228
  41928a:	(bad)  
  41928b:	push   ss
  41928c:	jne    0x419228
  41928e:	add    ebp,ecx
  419290:	push   edx
  419291:	and    BYTE PTR [ecx],dl
  419293:	out    0x6,al
  419295:	test   al,0x3
  419297:	jl     0x419313
  419299:	mov    al,ds:0xdf6fc9b2
  41929e:	xchg   esp,eax
  41929f:	ins    DWORD PTR es:[edi],dx
  4192a0:	aas    
  4192a1:	jmp    0xf242:0x4e4ccdc0
  4192a8:	add    BYTE PTR [edx+eiz*4+0x6f],ch
  4192ac:	call   0x97a6:0x40914757
  4192b3:	pop    ebp
  4192b4:	iret   
  4192b5:	fst    QWORD PTR ds:0x858e32f3
  4192bb:	mov    esp,0xfe45dcf2
  4192c0:	mov    edi,0x0
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	(bad)  
  419341:	popf   
  419342:	dec    edx
  419343:	sti    
  419344:	xchg   edx,eax
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    ch,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [edi+0x379db096],cl
  419351:	ja     0x4192e3
  419353:	mov    ch,0x94
  419355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419356:	fsubrp st(3),st
  419358:	mov    ch,BYTE PTR [ebx-0x60f27d23]
  41935e:	std    
  41935f:	mov    ebp,0x39168330
  419364:	fcom   DWORD PTR [esi-0x5dbc76d4]
  41936a:	(bad)  
  41936c:	pushf  
  41936d:	cmp    eax,0x30584ac7
  419372:	xchg   ebp,eax
  419373:	rcl    DWORD PTR [ebp+0x4d2e0183],0x3a
  41937a:	jnp    0x4193a8
  41937c:	std    
  41937d:	stc    
  41937e:	sub    DWORD PTR [ebp-0x3e],0x38d0f1e8
  419385:	add    al,BYTE PTR [ecx]
  419387:	sub    al,BYTE PTR [esi-0x1f]
  41938a:	add    BYTE PTR [esi+0x5d],bh
  41938d:	sub    al,0xe
  41938f:	add    esp,DWORD PTR [eax-0x16]
  419392:	gs cdq 
  419394:	mov    esi,0x571e3d9c
  419399:	aam    0x94
  41939b:	mov    edx,?
  41939d:	clc    
  41939e:	lahf   
  41939f:	into   
  4193a0:	in     eax,dx
  4193a1:	dec    ebp
  4193a2:	sbb    eax,0xc5e2d474
  4193a7:	sbb    esi,DWORD PTR [ebx-0x52c59d6d]
  4193ad:	mov    al,ds:0x150838ad
  4193b2:	or     al,0x6e
  4193b4:	in     al,dx
  4193b5:	push   ds
  4193b6:	loope  0x4193b3
  4193b8:	dec    ecx
  4193b9:	fsub   QWORD PTR [edi-0x4b41936f]
  4193bf:	push   es
  4193c0:	mov    cl,0x27
  4193c2:	scas   al,BYTE PTR es:[edi]
  4193c3:	(bad)  
  4193c4:	add    al,0x4f
  4193c6:	push   ecx
  4193c7:	cs push ss
  4193c9:	clc    
  4193ca:	sahf   
  4193cb:	jmp    0xdb410fe6
  4193d0:	jg     0x419417
  4193d2:	or     DWORD PTR [ebx-0x3ca321c4],esp
  4193d8:	mov    edx,cs
  4193da:	cmp    al,0xa0
  4193dc:	(bad)  
  4193de:	sti    
  4193df:	aas    
  4193e0:	fdiv   QWORD PTR [edi]
  4193e2:	in     al,0x7a
  4193e4:	sbb    eax,0xcd0a286d
  4193e9:	outs   dx,BYTE PTR ds:[esi]
  4193ea:	cmp    dl,BYTE PTR [esi+0x39b604c5]
  4193f0:	sbb    DWORD PTR [eax+0x6ec84b88],0x7c2dbe8c
  4193fa:	or     DWORD PTR [esi+edi*4+0x4d],esp
  4193fe:	out    dx,eax
  4193ff:	jecxz  0x419410
  419401:	adc    al,0xc4
  419403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419404:	loope  0x41945d
  419406:	inc    esi
  419407:	leave  
  419408:	cmp    esp,ebx
  41940a:	xchg   edx,eax
  41940b:	ins    BYTE PTR es:[edi],dx
  41940c:	test   al,0xd4
  41940e:	mov    bh,0xa0
  419410:	mov    ds:0xb40799ba,eax
  419415:	dec    edx
  419416:	pop    ebp
  419417:	inc    edx
  419418:	pop    ss
  419419:	inc    ecx
  41941a:	add    BYTE PTR [edx],ch
  41941c:	cwde   
  41941d:	mov    ah,0x3
  41941f:	call   0x784f:0xd1b0696b
  419426:	sub    ch,ch
  419428:	adc    ebp,DWORD PTR [bx+di+0x3c]
  41942c:	imul   edi,ecx,0xffffffdf
  41942f:	popf   
  419430:	mov    cl,0xd6
  419432:	inc    edi
  419433:	(bad)  
  419434:	stos   DWORD PTR es:[edi],eax
  419435:	sub    DWORD PTR [edi-0xf83286d],0x765d6558
  41943f:	mov    al,BYTE PTR cs:[eax]
	...
  4194b2:	add    BYTE PTR [eax],al
  4194b4:	inc    ecx
  4194b5:	stc    
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	fucomip st,st(4)
  4194c2:	mov    esp,0x1128768
  4194c7:	add    ch,dh
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [eax+0x2b],al
  4194ce:	xchg   BYTE PTR [esi],ch
  4194d0:	in     al,0x3f
  4194d2:	mov    al,ds:0xe2c5292
  4194d7:	cmc    
  4194d8:	push   ebp
  4194d9:	xor    eax,0x15ebb18f
  4194de:	push   esi
  4194df:	push   edi
  4194e0:	mov    edi,0x7bee6bf5
  4194e5:	ins    DWORD PTR es:[edi],dx
  4194e6:	jo     0x419520
  4194e8:	scas   eax,DWORD PTR es:[edi]
  4194e9:	sbb    ecx,DWORD PTR [eax]
  4194eb:	pop    ds
  4194ec:	cmp    al,0xab
  4194ee:	fcmovnb st,st(4)
  4194f0:	stos   DWORD PTR es:[edi],eax
  4194f1:	jns    0x4194b8
  4194f3:	repz mov ah,0xf9
  4194f6:	cld    
  4194f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f8:	cmc    
  4194f9:	xor    al,0xaa
  4194fb:	jbe    0x4194df
  4194fd:	loope  0x419534
  4194ff:	bound  ecx,QWORD PTR [ebx]
  419501:	mov    DWORD PTR [ebp+0x3fe83667],esi
  419507:	ds inc edx
  419509:	ret    0xeead
  41950c:	mov    al,ds:0x87c2ff7e
  419511:	add    BYTE PTR es:[esi+0x6b],ch
  419515:	add    WORD PTR fs:[ebp-0x35b5d2f6],si
  41951d:	mov    ecx,0x4c58063c
  419522:	or     ah,al
  419524:	ret    0x9445
  419527:	jmp    0x4194be
  419529:	sahf   
  41952a:	xchg   edx,eax
  41952b:	pop    eax
  41952c:	rol    BYTE PTR [esi+0x31bfa06f],0x2f
  419533:	es loop 0x41952d
  419536:	inc    esi
  419537:	mov    DWORD PTR [edx+eax*1-0xcfb39f9],eax
  41953e:	in     eax,dx
  41953f:	mov    ch,BYTE PTR [ebx+0x6e]
  419542:	xlat   BYTE PTR cs:[ebx]
  419544:	pop    ecx
  419545:	push   cs
  419546:	pop    ss
  419547:	push   0x92a6d4a
  41954c:	push   eax
  41954d:	into   
  41954e:	and    edx,DWORD PTR cs:[esi+0x5f]
  419552:	fs xor al,0xd4
  419555:	mov    cl,0xab
  419557:	push   es
  419558:	cmp    al,0xc
  41955a:	or     al,0x5f
  41955c:	inc    ecx
  41955d:	aaa    
  41955e:	mov    esp,DWORD PTR [edi+edi*1-0x75]
  419562:	gs scas al,BYTE PTR es:[edi]
  419564:	jl     0x41959d
  419566:	add    al,0x41
  419568:	push   eax
  419569:	repz inc ebx
  41956b:	test   eax,0xcb489803
  419570:	mov    eax,0xed1a734a
  419575:	xchg   ecx,eax
  419576:	fild   DWORD PTR [ebp-0x17598468]
  41957c:	dec    DWORD PTR [edx-0x64]
  41957f:	xchg   esp,eax
  419580:	jae    0x4195cd
  419582:	mov    ebp,0x8e26e2be
  419587:	(bad)  
  419588:	outs   dx,DWORD PTR ds:[esi]
  419589:	mov    ebx,0xd06773c5
  41958e:	fisubr DWORD PTR [ebp+0x68]
  419591:	out    0x8c,eax
  419593:	mov    DWORD PTR [edx+0x9],eax
  419596:	ins    DWORD PTR es:[edi],dx
  419597:	icebp  
  419598:	and    ecx,edi
  41959a:	bound  ebx,QWORD PTR [edx-0x62e0a1dd]
  4195a0:	xor    BYTE PTR [ebx-0x1a],bl
  4195a3:	neg    DWORD PTR [edx+ebx*1+0x54]
  4195a7:	into   
  4195a8:	inc    ebp
  4195a9:	mov    edx,0xb27f0f62
  4195ae:	sub    BYTE PTR [ecx+0x3013ece3],cl
  4195b4:	jl     0x4195dc
  4195b6:	(bad)  
  4195b7:	jo     0x41955e
  4195b9:	dec    BYTE PTR [esp+esi*1+0x16ca7da]
  4195c0:	or     al,BYTE PTR [eax]
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax-0x1b7b4044]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [esi+0x5e2b85c6],dh
  419651:	mov    ah,0x60
  419653:	int    0x5c
  419655:	pop    ebx
  419656:	daa    
  419657:	push   0xa78e1e68
  41965c:	mov    bh,0x8b
  41965e:	adc    eax,0xb3a6f303
  419663:	sar    DWORD PTR [esi-0x80],cl
  419666:	stos   BYTE PTR es:[edi],al
  419667:	lods   al,BYTE PTR ds:[esi]
  419668:	(bad)  
  419669:	(bad)  
  41966a:	clc    
  41966b:	dec    ebx
  41966c:	jg     0x41966f
  41966e:	pop    edx
  41966f:	ins    DWORD PTR es:[edi],dx
  419670:	push   eax
  419671:	dec    eax
  419672:	jmp    0x41966a
  419674:	cld    
  419675:	dec    esp
  419676:	popf   
  419677:	shl    BYTE PTR [ebp-0x19b25ab9],0x31
  41967e:	dec    ebx
  41967f:	dec    ebx
  419680:	fmul   QWORD PTR [ecx-0x3a7c92c6]
  419686:	mov    bh,0xbb
  419688:	test   eax,0xd1f09b88
  41968d:	sar    DWORD PTR [ecx+0x69],1
  419690:	sub    BYTE PTR [ecx+0x7d],dh
  419693:	mov    WORD PTR [esi+0xd],ss
  419696:	xchg   edx,eax
  419697:	or     eax,0xf87a0942
  41969c:	xchg   BYTE PTR [edx-0x219a7e52],bh
  4196a2:	test   eax,0x9a648026
  4196a7:	xor    ebx,esp
  4196a9:	cmp    ah,BYTE PTR ds:0xd08f542b
  4196af:	xchg   esp,eax
  4196b0:	jbe    0x419675
  4196b2:	cmp    eax,DWORD PTR [edx]
  4196b4:	aam    0x3e
  4196b6:	ins    BYTE PTR es:[edi],dx
  4196b7:	leave  
  4196b8:	enter  0x406d,0xdb
  4196bc:	xchg   esp,eax
  4196bd:	adc    BYTE PTR [edi],al
  4196bf:	dec    esi
  4196c0:	pop    esp
  4196c1:	mov    al,0x45
  4196c3:	mov    ah,0xb3
  4196c5:	jae    0x4196c7
  4196c7:	das    
  4196c8:	push   0x83c3d5c
  4196cd:	cmp    ecx,esp
  4196cf:	adc    eax,0x89aa8d6b
  4196d4:	adc    al,BYTE PTR [eax]
  4196d6:	jmp    0x4196d3
  4196d8:	jns    0x4196a1
  4196da:	or     al,0x5c
  4196dc:	cmp    al,BYTE PTR [ebx+0x78625c20]
  4196e2:	(bad)  
  4196e3:	lahf   
  4196e4:	jns    0x419759
  4196e6:	mov    BYTE PTR [edi],cl
  4196e8:	mov    al,0x3
  4196ea:	fcmovu st,st(4)
  4196ec:	pop    ecx
  4196ed:	js     0x419707
  4196ef:	push   ebx
  4196f0:	imul   esp,esi,0xffffff86
  4196f3:	frstor [edi]
  4196f5:	ins    BYTE PTR es:[edi],dx
  4196f6:	imul   ebx,DWORD PTR [edx-0x11],0x7e58e43d
  4196fd:	dec    ebx
  4196fe:	scas   al,BYTE PTR es:[edi]
  4196ff:	shl    BYTE PTR [ebx],0x4b
  419702:	adc    BYTE PTR [edx],bh
  419704:	cmp    edi,ebp
  419706:	pop    eax
  419707:	rol    DWORD PTR [ecx+0x17b59612],cl
  41970d:	cmp    esp,esi
  41970f:	adc    al,0x6d
  419711:	lods   eax,DWORD PTR ds:[esi]
  419712:	sub    al,0x78
  419714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419715:	or     DWORD PTR [esi+0x3b7f3d4b],ebx
  41971b:	mov    edx,0x83f180fe
  419720:	add    DWORD PTR [edi+0xa4aba5a],0x635807ad
  41972a:	or     BYTE PTR [edx+0x168c5a41],ch
  419730:	adc    bl,BYTE PTR [edi+0x938b6e4]
  419736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419737:	fnstenv [esi-0x1034126]
  41973d:	pop    edx
  41973e:	mov    eax,0xaf07
	...
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx-0x5ad83417]
  4197c1:	push   es
  4197c2:	iret   
  4197c3:	add    DWORD PTR [ecx+0x14],esi
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [ecx],cl
  4197cd:	rol    DWORD PTR [ebx+0x27930972],1
  4197d3:	add    BYTE PTR [ebx+edx*4-0x19],cl
  4197d7:	mov    cs,WORD PTR [esp+ecx*4+0x127c4e02]
  4197de:	les    edx,FWORD PTR [ebx-0x73aea356]
  4197e4:	lods   eax,DWORD PTR ds:[esi]
  4197e5:	and    ah,bl
  4197e7:	sbb    ecx,DWORD PTR [ecx]
  4197e9:	hlt    
  4197ea:	in     al,0x7d
  4197ec:	ins    BYTE PTR es:[edi],dx
  4197ed:	jg     0x41984d
  4197ef:	sahf   
  4197f0:	clc    
  4197f1:	xchg   ebx,eax
  4197f2:	xlat   BYTE PTR gs:[ebx]
  4197f4:	retf   0xb708
  4197f7:	mov    al,0x7f
  4197f9:	(bad)  
  4197fa:	(bad)  
  4197fb:	jle    0x4197d6
  4197fd:	inc    esi
  4197fe:	jns    0x4197a0
  419800:	mov    WORD PTR [edi-0x6],ds
  419803:	mov    eax,0x86b0e358
  419808:	or     eax,0x59625526
  41980d:	test   eax,0x3392fe7c
  419812:	push   0xffffffd0
  419814:	sbb    esp,0x912dde89
  41981a:	pop    ds
  41981b:	mov    BYTE PTR [esi+0x64],ah
  41981e:	mov    BYTE PTR [esi+0x75c06aef],ch
  419824:	pop    esp
  419825:	adc    DWORD PTR [esi+0x40ea1206],edi
  41982b:	add    eax,0x9e6f9f61
  419830:	sbb    esi,ecx
  419832:	mov    dh,0xcf
  419834:	shr    ah,1
  419836:	xchg   BYTE PTR [ebx],bl
  419838:	add    ecx,DWORD PTR [eax+0x54d06486]
  41983e:	popa   
  41983f:	int    0xe0
  419841:	pop    es
  419842:	jge    0x4198c1
  419844:	pop    ss
  419845:	cmp    al,0x76
  419847:	sar    DWORD PTR [ecx],1
  419849:	sub    BYTE PTR [edx],al
  41984b:	dec    ecx
  41984c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41984d:	sub    eax,0xeadc4647
  419852:	and    eax,0xff561f4c
  419857:	addr16 cmc 
  419859:	pop    esi
  41985a:	xor    bh,BYTE PTR [edi+edx*4+0x77]
  41985e:	in     eax,0x18
  419860:	stc    
  419861:	jne    0x4198be
  419863:	xchg   DWORD PTR [ecx-0x4cef2707],esp
  419869:	stos   BYTE PTR es:[edi],al
  41986a:	sbb    al,0x5c
  41986c:	mov    cl,dh
  41986e:	jno    0x4198bf
  419870:	mov    bl,0x77
  419872:	pop    esp
  419873:	lods   al,BYTE PTR ds:[esi]
  419874:	add    DWORD PTR [edx+ebp*2+0x45],ecx
  419878:	repz pushf 
  41987a:	pop    edi
  41987b:	pop    edx
  41987c:	test   eax,0xb4618ead
  419881:	sub    ecx,DWORD PTR [ecx+0x11bef49a]
  419887:	or     BYTE PTR [edx+0x442490a],bl
  41988d:	ret    0x2f95
  419890:	jl     0x4198fb
  419892:	enter  0x9620,0xb5
  419896:	scas   al,BYTE PTR es:[edi]
  419897:	ficom  WORD PTR [edi-0x39]
  41989a:	ret    0xca16
  41989d:	and    eax,0xc5c91ec0
  4198a2:	call   0x6ec16ed1
  4198a7:	in     al,dx
  4198a8:	mov    al,0x48
  4198aa:	add    edx,ebx
  4198ac:	mov    bh,0x62
  4198ae:	and    eax,0xf4064bd4
  4198b3:	sub    eax,0x25962987
  4198b8:	cli    
  4198b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ba:	fst    DWORD PTR [edx+eiz*4+0x64c8a30b]
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	sub    al,0x28
  419942:	mov    bh,0x87
  419944:	adc    ax,0x1
  419948:	cmc    
  419949:	add    BYTE PTR [eax],al
  41994b:	add    bl,cl
  41994d:	xchg   ecx,eax
  41994e:	and    DWORD PTR [esi-0x3ba2c610],0x3cb6af92
  419958:	jmp    0x419926
  41995a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41995b:	fistp  DWORD PTR [ebx]
  41995d:	or     DWORD PTR [edi+0x140e4dc0],eax
  419963:	les    edi,FWORD PTR [edx]
  419965:	(bad)  
  419967:	push   ebp
  419968:	or     eax,0x450add9b
  41996d:	inc    esp
  41996e:	cmp    eax,0xecc2cf4c
  419973:	push   0x50
  419975:	arpl   WORD PTR [ecx+eax*1-0x54],si
  419979:	add    dl,bh
  41997b:	xor    dl,BYTE PTR [ebx+0x38]
  41997e:	stos   BYTE PTR es:[edi],al
  41997f:	push   ebp
  419980:	clc    
  419981:	ficomp DWORD PTR [ebp+0x60519cca]
  419987:	sar    DWORD PTR [ecx+edi*2+0x39],0x90
  41998c:	jno    0x41998b
  41998e:	aas    
  41998f:	adc    BYTE PTR [ecx-0x31],bl
  419992:	mov    al,ds:0x8d48e942
  419997:	aas    
  419998:	fwait
  419999:	cli    
  41999a:	push   ds
  41999b:	push   0xf5f814ae
  4199a0:	push   ds
  4199a1:	jae    0x419926
  4199a3:	add    ch,BYTE PTR [ecx-0x70]
  4199a6:	retf   
  4199a7:	xchg   ebp,eax
  4199a8:	pop    es
  4199a9:	inc    esi
  4199aa:	nop
  4199ab:	pop    ebx
  4199ac:	pop    esi
  4199ad:	or     dl,al
  4199af:	loopne 0x4199c3
  4199b1:	jae    0x419959
  4199b3:	(bad)
  4199b7:	popa   
  4199b8:	ret    0x5a29
  4199bb:	xchg   ebp,eax
  4199bc:	mov    bl,0x7
  4199be:	sti    
  4199bf:	(bad)  
  4199c0:	lahf   
  4199c1:	into   
  4199c2:	and    al,0x7
  4199c4:	jge    0x419a00
  4199c6:	adc    ebx,0xd6709758
  4199cc:	pusha  
  4199cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ce:	and    eax,0x33b1a8c7
  4199d3:	xchg   BYTE PTR [ecx*2+0x1fc6b967],ch
  4199da:	enter  0xfee2,0xd1
  4199de:	ret    
  4199df:	mov    BYTE PTR [edi+esi*4],dl
  4199e2:	aaa    
  4199e3:	sub    DWORD PTR [ecx+0x8],edx
  4199e6:	out    dx,eax
  4199e7:	test   eax,0xe492611c
  4199ec:	out    0xf5,eax
  4199ee:	mov    DWORD PTR [eax+eiz*2+0x2386c838],0x6baf5205
  4199f9:	les    eax,FWORD PTR [edi]
  4199fb:	icebp  
  4199fc:	in     al,0x4f
  4199fe:	nop
  4199ff:	popa   
  419a00:	xchg   esp,eax
  419a01:	and    al,0xa8
  419a03:	les    edx,FWORD PTR [ebp+0x24]
  419a06:	push   0xb931065c
  419a0b:	retf   0x98a7
  419a0e:	jl     0x4199e4
  419a10:	cmp    BYTE PTR [edx-0x32],0xb1
  419a14:	sbb    BYTE PTR [eax+ecx*8-0xa302f8a],0x86
  419a1c:	inc    edx
  419a1d:	inc    edi
  419a1e:	call   0x35ccdfd2
  419a23:	and    edi,DWORD PTR [esi]
  419a25:	pop    esp
  419a26:	xchg   edi,eax
  419a27:	imul   ecx,edi,0x5ac94252
  419a2d:	mul    BYTE PTR [esi+0x2e]
  419a30:	and    al,0x79
  419a32:	bound  ebp,QWORD PTR [edx-0x4e]
  419a35:	pop    ebx
  419a36:	fisttp DWORD PTR [ebx+0x7324d083]
  419a3c:	jmp    0x419a04
  419a3e:	mov    ecx,0xf15
	...
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x5a357b47
  419ac1:	mov    eax,0x165ba912
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	cmc    
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    BYTE PTR [ecx+0x6e],cl
  419ace:	ins    BYTE PTR es:[edi],dx
  419acf:	cwde   
  419ad0:	pushf  
  419ad1:	stc    
  419ad2:	or     ebp,0xc9b76144
  419ad8:	mov    bh,0xf0
  419ada:	adc    al,0xf8
  419adc:	xchg   ebp,eax
  419add:	mov    bl,0x5a
  419adf:	fnsave [esi+0x25fb8d66]
  419ae5:	popa   
  419ae6:	adc    al,0xd6
  419ae8:	mov    DWORD PTR [ecx-0x71],eax
  419aeb:	jp     0x419b1e
  419aed:	in     eax,0x5e
  419aef:	outs   dx,BYTE PTR ds:[esi]
  419af0:	lds    edi,FWORD PTR [edx-0x42]
  419af3:	pop    ecx
  419af4:	fbld   TBYTE PTR [ecx-0x25]
  419af7:	inc    eax
  419af8:	pop    es
  419af9:	pop    es
  419afa:	std    
  419afb:	mov    edx,0x8676ccdb
  419b00:	mov    dh,0xf4
  419b02:	and    al,0xce
  419b04:	pop    eax
  419b05:	mov    cl,0xe3
  419b07:	out    dx,al
  419b08:	sbb    eax,0xeb164fe8
  419b0d:	sub    al,0x76
  419b0f:	mov    DWORD PTR [esi+0x2a],ecx
  419b12:	inc    ebp
  419b13:	adc    ebp,ebp
  419b15:	leave  
  419b16:	repnz dec edx
  419b18:	or     eax,0x2247ccbd
  419b1d:	outs   dx,BYTE PTR ds:[esi]
  419b1e:	in     eax,dx
  419b1f:	test   DWORD PTR [ebx+0x22],eax
  419b22:	cld    
  419b23:	repz addr16 sub al,0xc
  419b27:	cmp    al,0xd7
  419b29:	lock mov WORD PTR [ecx+0x2],gs
  419b2d:	push   es
  419b2e:	call   0xd42923c
  419b33:	dec    esp
  419b34:	xchg   DWORD PTR [esi-0x4370d83f],ecx
  419b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b3b:	pop    ss
  419b3c:	xchg   ebp,eax
  419b3d:	js     0x419b44
  419b3f:	or     bl,0x75
  419b42:	out    0xb8,eax
  419b44:	or     DWORD PTR [edx-0x6f],edx
  419b47:	and    al,0x12
  419b49:	(bad)  
  419b4a:	ins    DWORD PTR es:[edi],dx
  419b4b:	push   0xffffff9d
  419b4d:	dec    BYTE PTR [esi+0xf234153]
  419b53:	adc    DWORD PTR [edx],ebx
  419b55:	jmp    0x3a2d6a2d
  419b5a:	adc    dh,ch
  419b5c:	cmp    cl,BYTE PTR [ecx]
  419b5e:	out    0x9a,al
  419b60:	mul    BYTE PTR [ecx+0x11]
  419b63:	(bad)
  419b67:	and    eax,0x157fead1
  419b6c:	mov    DWORD PTR [edx-0x348642e6],edi
  419b72:	xor    cl,BYTE PTR [edi]
  419b74:	lds    ecx,FWORD PTR [edi-0x5dc94b91]
  419b7a:	add    al,BYTE PTR [ebx-0x27]
  419b7d:	out    0xed,eax
  419b7f:	push   cs
  419b80:	pop    ebx
  419b81:	mov    ah,0x1f
  419b83:	pop    es
  419b84:	push   0x694a59f1
  419b89:	lahf   
  419b8a:	jns    0x419b46
  419b8c:	adc    esi,DWORD PTR [ebp+0x2fb22484]
  419b92:	scas   al,BYTE PTR es:[edi]
  419b93:	sub    edi,DWORD PTR [ecx-0x5f08310d]
  419b99:	ins    DWORD PTR es:[edi],dx
  419b9a:	pop    es
  419b9b:	or     al,0x90
  419b9d:	dec    ebp
  419b9e:	out    0x86,al
  419ba0:	shr    DWORD PTR [eax+0x17],1
  419ba3:	std    
  419ba4:	dec    ecx
  419ba5:	and    bl,BYTE PTR [ebx+0x33]
  419ba8:	nop
  419ba9:	nop
  419baa:	(bad)  [ecx]
  419bac:	bound  esi,QWORD PTR [esi+0x7fe0f223]
  419bb2:	sub    al,0xb1
  419bb4:	adc    cl,BYTE PTR [ebp+0x4a]
  419bb7:	out    dx,eax
  419bb8:	outs   dx,BYTE PTR ds:[esi]
  419bb9:	push   cs
  419bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbb:	xchg   esp,eax
  419bbc:	test   eax,0x2c7d3391
	...
  419c31:	add    BYTE PTR [eax],al
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0x5f
  419c41:	repnz push es
  419c43:	mov    bh,0x50
  419c45:	pop    ss
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [edx],dl
  419c4d:	int    0x4e
  419c4f:	ins    DWORD PTR es:[edi],dx
  419c50:	out    0x39,eax
  419c52:	stos   BYTE PTR es:[edi],al
  419c53:	and    DWORD PTR [esi+0x2e05a229],edi
  419c59:	mov    al,0xcf
  419c5b:	or     DWORD PTR [edi],ebx
  419c5d:	adc    al,BYTE PTR [esi-0x29]
  419c60:	rol    BYTE PTR [ebx-0x12],0x31
  419c64:	mov    bl,0xa6
  419c66:	sti    
  419c67:	dec    edx
  419c68:	adc    eax,0x86016356
  419c6d:	xchg   esp,eax
  419c6e:	cmp    BYTE PTR [edi-0x7f7b6043],dh
  419c74:	xchg   ebx,eax
  419c75:	pop    esi
  419c76:	pop    esi
  419c77:	ss inc edx
  419c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c7a:	add    DWORD PTR [edx+0x78cf7ee1],0x53
  419c81:	fnstcw WORD PTR [ebx-0x578df311]
  419c87:	stos   DWORD PTR es:[edi],eax
  419c88:	call   0xc765:0xf5b72945
  419c8f:	(bad)  
  419c90:	and    ch,BYTE PTR [ebx+eax*1+0x6e5d3726]
  419c97:	xchg   esp,eax
  419c98:	les    esp,FWORD PTR [edi]
  419c9a:	test   al,0xe1
  419c9c:	push   ecx
  419c9d:	push   ecx
  419c9e:	out    dx,al
  419c9f:	pop    ecx
  419ca0:	js     0x419c87
  419ca2:	arpl   si,sp
  419ca4:	cwde   
  419ca5:	jbe    0x419c83
  419ca7:	sub    BYTE PTR [ebx-0xba38376],dl
  419cad:	adc    edi,DWORD PTR [ebp-0x2101c7e3]
  419cb3:	sbb    DWORD PTR ds:[eax-0x45],edx
  419cb7:	scas   eax,DWORD PTR es:[edi]
  419cb8:	inc    eax
  419cb9:	into   
  419cba:	adc    eax,0x435fdc92
  419cbf:	pop    ds
  419cc0:	popf   
  419cc1:	xchg   BYTE PTR [eax],al
  419cc3:	mov    bl,0x33
  419cc5:	cwde   
  419cc6:	cmp    ebp,ebx
  419cc8:	mov    al,0x8c
  419cca:	cdq    
  419ccb:	push   eax
  419ccc:	adc    edx,esp
  419cce:	cmp    ebp,eax
  419cd0:	xor    al,0x85
  419cd2:	dec    edx
  419cd3:	sbb    DWORD PTR [esi],0xffffffc4
  419cd6:	inc    ebp
  419cd8:	test   BYTE PTR [ebx+0x6c],dl
  419cdb:	or     BYTE PTR [eax],0x5
  419cde:	loop   0x419ccd
  419ce0:	imul   edi,DWORD PTR ds:0x916cf2fd,0xffffffae
  419ce7:	push   cs
  419ce8:	push   eax
  419ce9:	sub    DWORD PTR [esi],ebx
  419ceb:	test   eax,0x717e96b5
  419cf0:	outs   dx,BYTE PTR ds:[esi]
  419cf1:	sub    al,0x27
  419cf3:	cld    
  419cf4:	xchg   esp,eax
  419cf5:	push   edx
  419cf6:	(bad)  
  419cf7:	popf   
  419cf8:	dec    dh
  419cfa:	gs ins DWORD PTR es:[edi],dx
  419cfc:	cmp    eax,0x16fbe8d
  419d01:	pop    es
  419d02:	into   
  419d03:	in     eax,dx
  419d04:	into   
  419d05:	sahf   
  419d06:	mov    ebx,0x5f58e13e
  419d0b:	inc    esi
  419d0c:	sar    ch,1
  419d0e:	ss in  al,dx
  419d10:	daa    
  419d11:	sbb    cl,0xaf
  419d14:	pop    eax
  419d15:	dec    edx
  419d16:	cmp    dh,BYTE PTR [edi-0x29d2b898]
  419d1c:	sub    DWORD PTR [esi-0x69],ebp
  419d1f:	idiv   BYTE PTR [edi+ebx*8-0x59]
  419d23:	or     DWORD PTR [eax-0x7f14df57],0x6e
  419d2a:	cmp    BYTE PTR [edi+0x74f471fc],0xdd
  419d31:	retf   
  419d32:	stos   BYTE PTR es:[edi],al
  419d33:	stos   BYTE PTR es:[edi],al
  419d34:	nop
  419d35:	js     0x419d85
  419d37:	fdiv   DWORD PTR [edi+0x14b205cc]
  419d3d:	inc    esi
  419d3e:	mov    al,ds:0x6352
	...
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	scas   al,BYTE PTR es:[edi]
  419dc1:	std    
  419dc2:	loop   0x419e12
  419dc4:	inc    ebp
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [esi-0xd58d094],ah
  419dd1:	int    0xbd
  419dd3:	and    dl,BYTE PTR [esi]
  419dd5:	xchg   esp,eax
  419dd6:	fs mov dl,0x3f
  419dd9:	test   BYTE PTR [ebp+0x32fc731],dl
  419ddf:	(bad)  
  419de0:	xor    BYTE PTR [ebp+0x635ad276],dl
  419de6:	sahf   
  419de7:	cmp    cl,bl
  419de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dea:	or     eax,edx
  419dec:	jmp    0x419e4b
  419dee:	sbb    al,0xfa
  419df0:	jp     0x419e25
  419df2:	cs std 
  419df4:	or     DWORD PTR [eax+0x2],0x3fb643a3
  419dfb:	pop    ecx
  419dfc:	jp     0x419d83
  419dfe:	inc    edi
  419dff:	mov    ecx,0x92e36737
  419e04:	or     al,0xd2
  419e06:	shl    ah,cl
  419e08:	dec    edi
  419e09:	xor    edi,DWORD PTR [ecx+0x3d]
  419e0c:	daa    
  419e0d:	scas   eax,DWORD PTR es:[edi]
  419e0e:	fcmovne st,st(4)
  419e10:	and    DWORD PTR [eax-0x71183632],esp
  419e16:	and    DWORD PTR [edx+0x4bc655f9],0x84d64d2c
  419e20:	js     0x419e02
  419e22:	dec    edi
  419e23:	fbld   TBYTE PTR [esi-0xc8b5a6c]
  419e29:	stc    
  419e2a:	repnz or DWORD PTR [ecx+edi*8],esp
  419e2e:	jae    0x419deb
  419e30:	mov    al,ds:0x13967d0
  419e35:	add    DWORD PTR [edi-0x59],0xb090e1eb
  419e3c:	push   edi
  419e3d:	popf   
  419e3e:	mov    bl,0x99
  419e40:	xchg   DWORD PTR [eax+0x6c],esi
  419e43:	das    
  419e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e45:	retf   
  419e46:	in     eax,0xd0
  419e48:	sbb    di,WORD PTR [edi+0x3f]
  419e4c:	loop   0x419e4a
  419e4e:	jle    0x419df9
  419e50:	int    0x68
  419e52:	scas   al,BYTE PTR es:[edi]
  419e53:	daa    
  419e54:	gs mov cl,0xe6
  419e57:	leave  
  419e58:	jmp    0x419e6c
  419e5a:	popa   
  419e5b:	mov    esp,0x2f48b242
  419e60:	pushf  
  419e61:	mov    ds:0x67fd9d98,al
  419e66:	lods   al,BYTE PTR ds:[esi]
  419e67:	dec    esp
  419e68:	jle    0x419e11
  419e6a:	jge    0x419ea5
  419e6c:	(bad)  
  419e6d:	mov    al,0x26
  419e6f:	mov    esp,0x7e97cd71
  419e74:	test   eax,0x46ea2af4
  419e79:	pop    eax
  419e7a:	jnp    0x419e6f
  419e7c:	retf   0xf23f
  419e7f:	xchg   esp,eax
  419e80:	sar    DWORD PTR [ebx],1
  419e82:	je     0x419ed3
  419e84:	or     ebx,DWORD PTR [edi-0x44]
  419e87:	gs hlt 
  419e89:	push   ebp
  419e8a:	jmp    0x9d60:0xf31ed07b
  419e91:	test   eax,0xafcba302
  419e96:	and    al,0xef
  419e98:	mov    al,ss:0x9d7ddf67
  419e9e:	or     al,0x7b
  419ea0:	mov    fs,ecx
  419ea2:	call   0x1ee894e6
  419ea7:	lods   al,BYTE PTR ds:[esi]
  419ea8:	imul   edi,DWORD PTR fs:[eax],0x60eed513
  419eaf:	xlat   BYTE PTR ds:[ebx]
  419eb0:	stos   BYTE PTR es:[edi],al
  419eb1:	add    bh,cl
  419eb3:	mov    bl,0x79
  419eb5:	ja     0x419e4d
  419eb7:	cmp    DWORD PTR [edi+0x483452b6],edx
  419ebd:	mov    esi,0x324196
	...
  419f32:	add    BYTE PTR [eax],al
  419f34:	sbb    al,0x97
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x3661f4b7]
  419f41:	xchg   esp,eax
  419f42:	mov    bl,0x95
  419f44:	cmp    bl,BYTE PTR [ecx]
  419f46:	add    DWORD PTR [eax],eax
  419f48:	cmc    
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    ah,al
  419f4d:	stos   BYTE PTR es:[edi],al
  419f4e:	sbb    edx,esp
  419f50:	mul    BYTE PTR [edi+ecx*4+0xd99fcfa]
  419f57:	or     DWORD PTR [eax+0x3ef3597f],0x6d
  419f5e:	mov    esp,0xbd021a04
  419f63:	sbb    al,0x45
  419f65:	fsub   DWORD PTR [eax-0x78]
  419f68:	sub    DWORD PTR [ebx+0x6],esi
  419f6b:	repnz cmp edi,DWORD PTR [ecx]
  419f6e:	das    
  419f6f:	mov    edx,0xfa8ff7c9
  419f74:	loope  0x419f57
  419f76:	push   es
  419f77:	cmp    DWORD PTR [ebp+ebp*8+0x2a234a91],esp
  419f7e:	or     eax,0x3e3a85a8
  419f83:	rep ins DWORD PTR es:[edi],dx
  419f85:	or     edi,DWORD PTR [edi]
  419f87:	pop    ecx
  419f88:	xchg   ebp,eax
  419f89:	in     al,0x41
  419f8b:	xor    al,0x74
  419f8d:	sbb    al,BYTE PTR [edi+0x10971989]
  419f93:	js     0x419f8e
  419f95:	xchg   DWORD PTR [ebx-0x6bce2961],esp
  419f9b:	push   cx
  419f9d:	mov    cl,0xa2
  419f9f:	or     esi,esp
  419fa1:	xchg   edi,eax
  419fa2:	nop
  419fa3:	in     al,dx
  419fa4:	fld1   
  419fa6:	ficom  WORD PTR [eax+0x3a8f9bf0]
  419fac:	jo     0x419fa1
  419fae:	mov    dl,0xc2
  419fb0:	xor    eax,0x7f8a11f3
  419fb5:	or     BYTE PTR [eax],bl
  419fb7:	sub    ch,BYTE PTR [ecx-0x50]
  419fba:	xchg   esi,eax
  419fbb:	pop    eax
  419fbc:	jmp    0x419f51
  419fbe:	inc    edx
  419fbf:	(bad)  
  419fc0:	sub    DWORD PTR [esi-0x23],edx
  419fc3:	xlat   BYTE PTR ds:[ebx]
  419fc4:	xor    ecx,DWORD PTR ds:0x4fc29212
  419fca:	push   esi
  419fcb:	push   ecx
  419fcc:	retf   0x9e0e
  419fcf:	scas   eax,DWORD PTR es:[edi]
  419fd0:	mov    ch,0x73
  419fd2:	xor    dh,BYTE PTR [ecx-0x20c261ae]
  419fd8:	inc    edx
  419fd9:	inc    esp
  419fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fdb:	in     al,0x5f
  419fdd:	mov    DWORD PTR [ecx+0x23c0318b],ebp
  419fe3:	aas    
  419fe4:	(bad)  
  419fe5:	stc    
  419fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe7:	(bad)  
  419fe8:	jb     0x41a03a
  419fea:	ret    
  419feb:	mov    ecx,0x5440dccb
  419ff0:	fst    QWORD PTR [edi+0x27]
  419ff3:	mov    ch,ch
  419ff5:	(bad)  
  419ff6:	sbb    BYTE PTR [eax+0x77247733],dl
  419ffc:	or     BYTE PTR [edx+0x3e9a8d79],0x99
  41a003:	xor    al,0x71
  41a005:	popf   
  41a006:	cli    
  41a007:	xchg   edi,eax
  41a008:	lods   al,BYTE PTR ds:[esi]
  41a009:	je     0x41a012
  41a00b:	mov    ebx,ebx
  41a00d:	cmp    DWORD PTR [edi+0x55ec398],esp
  41a013:	inc    esp
  41a014:	ins    BYTE PTR es:[edi],dx
  41a015:	int3   
  41a016:	mov    edi,0x22e9c80
  41a01b:	popf   
  41a01c:	jmp    0x41a08f
  41a01e:	sub    ah,ah
  41a020:	(bad)  
  41a021:	dec    esi
  41a022:	mov    BYTE PTR [ebx],dh
  41a024:	or     al,0x26
  41a026:	popa   
  41a027:	pushf  
  41a028:	xchg   ebx,eax
  41a029:	lds    eax,FWORD PTR [esi-0x5ed28d7a]
  41a02f:	or     esi,DWORD PTR [ecx-0x49]
  41a032:	jg     0x41a021
  41a034:	push   0xd7f72c50
  41a039:	push   ebp
  41a03a:	push   esi
  41a03b:	addr16 xchg edi,eax
  41a03d:	mov    bl,0x2c
  41a03f:	mov    cl,0x7e
	...
  41a0b1:	add    BYTE PTR [eax],al
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0xe1d704a2
  41a0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c3:	gs das 
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [eax+edx*4+0x44],dl
  41a0cf:	or     bh,BYTE PTR [esi]
  41a0d1:	dec    ebp
  41a0d2:	fbstp  TBYTE PTR [ecx+0x57]
  41a0d5:	lods   eax,DWORD PTR ds:[esi]
  41a0d6:	loope  0x41a120
  41a0d8:	mov    esi,0xd8acd0b8
  41a0dd:	dec    ebx
  41a0de:	sub    bl,BYTE PTR [ebx+0x5b]
  41a0e1:	out    0x2e,eax
  41a0e3:	adc    BYTE PTR [ebx-0x19],dl
  41a0e6:	mov    gs,esp
  41a0e8:	sahf   
  41a0e9:	sub    eax,0x4163993f
  41a0ee:	in     eax,dx
  41a0ef:	xor    al,0x51
  41a0f1:	sbb    eax,0xdddec3c3
  41a0f6:	jmp    0xa2513bb7
  41a0fb:	dec    ebp
  41a0fc:	mov    dh,BYTE PTR [ebp-0x6c5fdb2a]
  41a102:	in     eax,0xa7
  41a104:	outs   dx,BYTE PTR ds:[esi]
  41a105:	jmp    0xead8:0xc05c4e2c
  41a10c:	out    0xcf,al
  41a10e:	not    BYTE PTR [edx+eax*4+0x2490e2e4]
  41a115:	inc    edi
  41a116:	(bad)  
  41a117:	out    dx,al
  41a118:	inc    eax
  41a119:	cwde   
  41a11a:	ins    DWORD PTR es:[edi],dx
  41a11b:	aaa    
  41a11c:	vxorpd ymm7,ymm1,ymm5
  41a120:	or     ch,BYTE PTR es:[esi]
  41a123:	mov    dh,0xe6
  41a125:	fistp  QWORD PTR [eax-0x10857a3c]
  41a12b:	bound  esp,QWORD PTR [ebp+0x6778c85d]
  41a131:	cmp    ebp,DWORD PTR [esi+0x45]
  41a134:	cmp    dl,BYTE PTR [edi+ebx*8+0x3d14c294]
  41a13b:	inc    ebx
  41a13c:	inc    BYTE PTR [edi+0x78a24833]
  41a142:	ficomp DWORD PTR [edi+0x6]
  41a145:	and    BYTE PTR [esi-0x110bf1cc],0xe8
  41a14c:	add    al,0xe9
  41a14e:	adc    BYTE PTR [ebx],dh
  41a150:	(bad)  
  41a152:	popa   
  41a153:	xchg   dl,dl
  41a155:	or     BYTE PTR [eax-0x1edea8fa],bl
  41a15b:	dec    edx
  41a15c:	(bad)  
  41a15d:	stos   DWORD PTR es:[edi],eax
  41a15e:	imul   ecx,DWORD PTR [ecx],0xfdffdcdb
  41a164:	test   al,0x3e
  41a166:	gs aam 0xd3
  41a169:	cmp    BYTE PTR [edi-0x2a],cl
  41a16c:	jne    0x41a1af
  41a16e:	rcr    BYTE PTR [esi+0x1f],0x9a
  41a172:	push   ss
  41a173:	int3   
  41a174:	adc    bh,BYTE PTR [eax+0x51]
  41a177:	repnz inc esp
  41a179:	or     esp,DWORD PTR ds:0x115ac4e3
  41a17f:	sub    DWORD PTR [ebx+esi*8+0x10],ebp
  41a183:	dec    esi
  41a184:	pop    edi
  41a185:	mov    eax,ds:0x71b9fa08
  41a18a:	jno    0x41a150
  41a18c:	mov    esi,0x691023a1
  41a191:	mov    dl,0xd7
  41a193:	xchg   esp,eax
  41a194:	jmp    FWORD PTR [edi+ebx*1-0x667afae3]
  41a19b:	and    bh,ah
  41a19d:	xor    bh,BYTE PTR [esi-0x2]
  41a1a0:	pop    eax
  41a1a1:	jns    0x41a1e5
  41a1a3:	(bad)  
  41a1a4:	test   al,0x11
  41a1a6:	mov    esp,0xd67133bc
  41a1ab:	dec    edx
  41a1ac:	jmp    0x41a1f7
  41a1ae:	sbb    edi,DWORD PTR [ebx]
  41a1b0:	adc    DWORD PTR [edi],esp
  41a1b2:	out    0x45,eax
  41a1b4:	mov    ds:0x5ae291f2,eax
  41a1b9:	jp     0x41a197
  41a1bb:	push   0xfffffff7
  41a1bd:	cs xor eax,0x5de0
	...
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	idiv   BYTE PTR [ebp+0x2490640d]
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    ch,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [edx+0x72],ah
  41a24e:	xchg   edx,eax
  41a24f:	jbe    0x41a218
  41a251:	mov    BYTE PTR [ebx-0x351d640c],dl
  41a257:	sti    
  41a258:	loopne 0x41a297
  41a25a:	xchg   ecx,eax
  41a25b:	xchg   ecx,eax
  41a25c:	lock lds ebp,FWORD PTR [edi+0x56ded97c]
  41a263:	jnp    0x41a2e0
  41a265:	push   eax
  41a266:	loopne 0x41a2df
  41a268:	lods   eax,DWORD PTR ds:[esi]
  41a269:	div    DWORD PTR [edi+eiz*1-0x1330b8a3]
  41a270:	lock out dx,eax
  41a272:	jo     0x41a24c
  41a274:	adc    edi,DWORD PTR [ebx-0xa]
  41a277:	xchg   ebp,eax
  41a278:	sti    
  41a279:	ds daa 
  41a27b:	bound  ebx,QWORD PTR [ecx+edi*2+0x71a2b835]
  41a282:	dec    ebp
  41a283:	jecxz  0x41a2e6
  41a285:	arpl   WORD PTR [esi+0x3a88a30f],si
  41a28b:	imul   ebx,DWORD PTR [eax],0x3422deef
  41a291:	mov    al,0xad
  41a293:	inc    eax
  41a294:	mov    dl,0xdb
  41a296:	shr    DWORD PTR [edx],cl
  41a298:	mov    eax,ds:0x577a40c3
  41a29d:	inc    ebp
  41a29e:	int    0xe6
  41a2a0:	mov    fs,WORD PTR [edi+edi*8+0x446e3db8]
  41a2a7:	loop   0x41a2f8
  41a2a9:	das    
  41a2aa:	or     al,ah
  41a2ac:	cmp    al,0xca
  41a2ae:	(bad)  
  41a2af:	out    0x66,eax
  41a2b1:	test   eax,0xabca089f
  41a2b6:	arpl   si,bp
  41a2b8:	dec    ecx
  41a2b9:	inc    eax
  41a2ba:	inc    edx
  41a2bb:	das    
  41a2bc:	ins    DWORD PTR es:[edi],dx
  41a2bd:	sbb    esi,esp
  41a2bf:	sub    eax,0x1634598f
  41a2c4:	out    0x9d,eax
  41a2c6:	and    ch,cl
  41a2c8:	inc    edi
  41a2c9:	mov    edx,0x74a68949
  41a2ce:	outs   dx,BYTE PTR ds:[esi]
  41a2cf:	cmp    ebp,ebx
  41a2d1:	fs sbb bh,0x55
  41a2d5:	sbb    al,0x1
  41a2d7:	idiv   BYTE PTR [edi]
  41a2d9:	inc    ebp
  41a2da:	and    bl,BYTE PTR [esi]
  41a2dc:	lods   eax,DWORD PTR ds:[esi]
  41a2dd:	xor    cl,BYTE PTR cs:[eax]
  41a2e0:	pushf  
  41a2e1:	or     al,0x64
  41a2e3:	xor    ebx,ebp
  41a2e5:	stos   BYTE PTR es:[edi],al
  41a2e6:	shr    BYTE PTR [eax],0xaa
  41a2e9:	dec    esp
  41a2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2eb:	xchg   edx,eax
  41a2ec:	mov    DWORD PTR [ebp-0x6986d175],eax
  41a2f2:	iret   
  41a2f3:	in     eax,dx
  41a2f4:	cli    
  41a2f5:	mov    cl,0x5f
  41a2f7:	lds    esi,FWORD PTR [esi+eiz*2]
  41a2fa:	rcr    BYTE PTR [ecx],cl
  41a2fc:	out    0xe,al
  41a2fe:	sbb    al,0x70
  41a300:	adc    esp,edi
  41a302:	test   BYTE PTR es:[ecx+eiz*4],al
  41a306:	xchg   ebx,eax
  41a307:	xor    DWORD PTR [ebp-0x5fb106ad],esp
  41a30d:	adc    eax,0x1cdef1b1
  41a312:	sbb    al,0xf
  41a314:	cmovge esp,DWORD PTR [edx]
  41a317:	xlat   BYTE PTR ds:[ebx]
  41a319:	(bad)  
  41a31a:	out    0xf1,al
  41a31c:	push   ecx
  41a31d:	aad    0xd0
  41a31f:	enter  0xc3f4,0xc0
  41a323:	leave  
  41a324:	mov    eax,ds:0xcf69e3c4
  41a329:	pop    esi
  41a32a:	in     eax,0xfc
  41a32c:	ins    BYTE PTR es:[edi],dx
  41a32d:	test   BYTE PTR [eax+0x5ca5941e],bh
  41a333:	cdq    
  41a334:	fsub   QWORD PTR [edi]
  41a336:	inc    esp
  41a337:	dec    ebp
  41a338:	sbb    cl,BYTE PTR [edi+0x200243f2]
  41a33e:	xchg   esp,ebx
  41a340:	retf   0x0
	...
  41a3b3:	add    BYTE PTR ds:0xed3a6998,bh
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	mov    ah,0x3c
  41a3c2:	lods   eax,DWORD PTR ds:[esi]
  41a3c3:	push   ss
  41a3c4:	sbb    DWORD PTR [ecx+eax*1],ebx
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ecx],ch
  41a3cd:	jp     0x41a365
  41a3cf:	cld    
  41a3d0:	or     al,0x56
  41a3d2:	in     al,0xc3
  41a3d4:	and    eax,0x378ebdaf
  41a3d9:	in     al,0xd
  41a3db:	in     eax,0xd8
  41a3dd:	jmp    FWORD PTR [ebx]
  41a3df:	loopne 0x41a45f
  41a3e1:	mov    ebp,0x6f6b1a47
  41a3e6:	mov    BYTE PTR [ebx-0x5fcee1aa],ah
  41a3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ed:	(bad)  [ebx-0x18691de5]
  41a3f3:	sub    DWORD PTR [eax+0x52],esp
  41a3f6:	ret    0xfa32
  41a3f9:	add    dh,cl
  41a3fb:	aas    
  41a3fc:	sar    BYTE PTR [esi+0x6d],1
  41a3ff:	jle    0x41a439
  41a401:	cli    
  41a402:	push   ecx
  41a403:	cmp    BYTE PTR [ebp-0x5af39c54],al
  41a409:	(bad)  
  41a40a:	(bad)  
  41a40b:	sahf   
  41a40c:	or     BYTE PTR [edi-0x3b],ch
  41a40f:	pop    edx
  41a410:	(bad)  
  41a411:	dec    esp
  41a412:	in     al,0x37
  41a414:	inc    ecx
  41a415:	ins    DWORD PTR es:[edi],dx
  41a416:	dec    ebx
  41a417:	sbb    ch,BYTE PTR [eax+0x0]
  41a41a:	iret   
  41a41b:	call   0xb716:0xdfa00a16
  41a422:	js     0x41a499
  41a424:	and    al,0xa3
  41a426:	mov    esi,0xeb8c4e45
  41a42b:	test   DWORD PTR [eax],ebp
  41a42d:	test   DWORD PTR [edx+0x70041b0f],eax
  41a433:	pushf  
  41a434:	jbe    0x41a3ff
  41a436:	neg    BYTE PTR [ebx-0x21]
  41a439:	lods   al,BYTE PTR ds:[esi]
  41a43a:	je     0x41a3e1
  41a43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a43d:	mov    edi,0x42095679
  41a442:	ror    DWORD PTR [ebp-0x3e111753],0x26
  41a449:	mov    dh,0xcb
  41a44b:	dec    esi
  41a44c:	jae    0x41a49e
  41a44e:	mov    ebx,esi
  41a450:	jmp    0xb498:0x3788a168
  41a457:	xchg   ebp,eax
  41a458:	fnstsw WORD PTR [ecx+0x29]
  41a45b:	mov    BYTE PTR [edi],bh
  41a45d:	mov    BYTE PTR ds:0x9c664efe,ch
  41a463:	inc    ecx
  41a464:	cs dec esi
  41a466:	and    eax,0x4e83a40a
  41a46b:	dec    ebp
  41a46c:	gs xor esp,esi
  41a46f:	rcl    BYTE PTR ds:0xa0a440ce,1
  41a475:	xor    BYTE PTR [edi+eax*4],cl
  41a478:	sbb    eax,0x9a2918e4
  41a47d:	mov    ds:0x2cf3a5cb,al
  41a482:	mov    esp,DWORD PTR ds:0x14be568b
  41a488:	imul   esp,DWORD PTR [ecx-0x32df1aa3],0xffffff8c
  41a48f:	sbb    DWORD PTR [ebx],esi
  41a491:	movd   DWORD PTR [esi],mm4
  41a494:	cmp    BYTE PTR [ecx-0x1473bffc],cl
  41a49a:	repz or BYTE PTR [esi],0x5c
  41a49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49f:	daa    
  41a4a0:	mov    ah,0x80
  41a4a2:	push   ebp
  41a4a3:	sbb    eax,0x4fc9560f
  41a4a8:	pop    ebx
  41a4a9:	push   ss
  41a4aa:	outs   dx,BYTE PTR ds:[esi]
  41a4ab:	je     0x41a456
  41a4ad:	cmp    DWORD PTR [edi+0x34],esp
  41a4b0:	in     al,0x61
  41a4b2:	inc    ebx
  41a4b3:	and    esi,edx
  41a4b5:	pop    ecx
  41a4b6:	push   cs
  41a4b7:	lods   eax,DWORD PTR ds:[esi]
  41a4b8:	mov    es,WORD PTR [esi-0x4a]
  41a4bb:	mov    ecx,0x5950adee
  41a4c0:	rol    BYTE PTR [eax],0x0
	...
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x5de9e0aa]
  41a541:	scas   eax,DWORD PTR es:[edi]
  41a542:	mov    ecx,0x11d0e07
  41a547:	add    ch,dh
  41a549:	add    BYTE PTR [eax],al
  41a54b:	add    BYTE PTR [ebp+0x47],cl
  41a54e:	push   esp
  41a54f:	inc    ebx
  41a550:	bound  ebp,QWORD PTR [esi-0x453228ea]
  41a556:	jne    0x41a5a6
  41a558:	fldcw  WORD PTR [edx+ebx*8+0xf]
  41a55c:	mov    al,0x0
  41a55e:	cmp    DWORD PTR [eax-0x5a2117fc],esi
  41a564:	xchg   ecx,eax
  41a565:	and    esp,DWORD PTR [edi-0x684e9cd3]
  41a56b:	cmp    eax,0x7c79fe41
  41a570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a571:	mov    ah,0x57
  41a573:	mov    eax,ds:0x3f4812f9
  41a578:	cdq    
  41a579:	pop    esi
  41a57a:	in     eax,dx
  41a57b:	jne    0x41a514
  41a57d:	(bad)  
  41a57e:	loope  0x41a54c
  41a580:	popa   
  41a581:	mov    bh,BYTE PTR [esi+0x7e78d498]
  41a587:	arpl   sp,bp
  41a589:	stos   BYTE PTR es:[edi],al
  41a58a:	in     al,dx
  41a58b:	in     al,0x7a
  41a58d:	jp     0x41a5f9
  41a58f:	clc    
  41a590:	xchg   esp,eax
  41a591:	jle    0x41a5bd
  41a593:	inc    ebx
  41a594:	mov    dh,0xb7
  41a596:	pushf  
  41a597:	cmp    BYTE PTR [ebx-0x1eb973c],bh
  41a59d:	arpl   dx,cx
  41a59f:	inc    edi
  41a5a0:	xor    eax,ebp
  41a5a2:	sub    ebp,DWORD PTR [edx]
  41a5a4:	pop    es
  41a5a5:	mov    ch,0xd0
  41a5a7:	and    DWORD PTR [ebx+0x1e1df134],ebx
  41a5ad:	pop    ds
  41a5ae:	adc    eax,ebp
  41a5b0:	ja     0x41a5b6
  41a5b2:	cmp    eax,DWORD PTR [esi+0x45]
  41a5b5:	pop    edi
  41a5b6:	push   ds
  41a5b7:	pusha  
  41a5b8:	jmp    0x72457269
  41a5bd:	sbb    cl,BYTE PTR [esp+ecx*1]
  41a5c0:	push   esp
  41a5c1:	jns    0x41a61e
  41a5c3:	int3   
  41a5c4:	adc    bh,dh
  41a5c6:	cmp    eax,0xee9aad09
  41a5cb:	(bad)  
  41a5cc:	mov    al,0xea
  41a5ce:	dec    eax
  41a5cf:	adc    edi,ebp
  41a5d1:	xor    DWORD PTR [esp+ecx*1],eax
  41a5d4:	mov    DWORD PTR [eax],0xb0450788
  41a5da:	cmc    
  41a5db:	push   ds
  41a5dc:	es in  eax,dx
  41a5de:	ins    DWORD PTR es:[edi],dx
  41a5df:	ins    BYTE PTR es:[edi],dx
  41a5e0:	popf   
  41a5e1:	and    eax,0x71fafb8a
  41a5e6:	add    BYTE PTR [esp+ebx*1-0x191072dd],dl
  41a5ed:	jle    0x41a638
  41a5ef:	jb     0x41a578
  41a5f1:	sti    
  41a5f2:	sub    al,0x5b
  41a5f4:	push   es
  41a5f5:	add    eax,0xd4b52823
  41a5fa:	push   ebx
  41a5fb:	jecxz  0x41a63d
  41a5fd:	pop    eax
  41a5fe:	cwde   
  41a5ff:	xlat   BYTE PTR ds:[ebx]
  41a600:	dec    ecx
  41a601:	(bad)  
  41a602:	sub    DWORD PTR [ebp-0x41839b07],edx
  41a608:	dec    ebp
  41a609:	shl    bl,cl
  41a60b:	in     al,dx
  41a60c:	sub    bh,BYTE PTR [eax+0x1e]
  41a60f:	fistp  WORD PTR [edi+0x5b]
  41a612:	and    bl,BYTE PTR ds:0xf4e70b98
  41a618:	hlt    
  41a619:	inc    ebp
  41a61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a61b:	std    
  41a61c:	fimul  DWORD PTR [edi-0x1]
  41a61f:	pop    edx
  41a620:	and    DWORD PTR [ebp+0x21],0xfffffff9
  41a624:	pop    DWORD PTR [edi+0x5de7409b]
  41a62a:	xor    BYTE PTR [edx+0x55e68f60],al
  41a630:	addr16 cs mov dl,0x3d
  41a634:	push   ebp
  41a635:	fnstcw WORD PTR [edi]
  41a637:	test   esp,eax
  41a639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a63a:	xor    al,0xfe
  41a63c:	jmp    DWORD PTR [eax]
  41a63e:	cdq    
  41a63f:	xor    edx,DWORD PTR [eax+0x0]
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x2e
  41a6c1:	inc    dh
  41a6c3:	outs   dx,BYTE PTR ds:[esi]
  41a6c4:	add    ebx,DWORD PTR [esi]
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    dl,ah
  41a6cd:	or     DWORD PTR [eax+eax*1+0x7b346d98],ebp
  41a6d4:	cmp    ah,BYTE PTR [ebp+0x5d0fbba5]
  41a6da:	sub    dh,dl
  41a6dc:	pushf  
  41a6dd:	call   0x435cc67b
  41a6e2:	inc    ebx
  41a6e3:	sbb    dh,BYTE PTR [ebx-0x2c836500]
  41a6e9:	mov    al,ds:0xb4492eb0
  41a6ee:	stos   DWORD PTR es:[edi],eax
  41a6ef:	push   0xe
  41a6f1:	xchg   BYTE PTR [edx],ah
  41a6f3:	sbb    DWORD PTR [esi-0x73],edi
  41a6f6:	xchg   edx,eax
  41a6f7:	stos   DWORD PTR es:[edi],eax
  41a6f8:	out    dx,al
  41a6f9:	or     dh,dh
  41a6fb:	sub    eax,0xc05de9ef
  41a700:	sbb    ebx,ecx
  41a702:	fwait
  41a703:	sbb    eax,0xc87113b
  41a708:	in     al,dx
  41a709:	addr16 jp 0x41a6de
  41a70c:	add    al,0x1c
  41a70e:	int    0xba
  41a710:	mov    ebx,0xcef499d3
  41a715:	neg    BYTE PTR [ecx-0x75ac271c]
  41a71b:	inc    ecx
  41a71c:	fwait
  41a71d:	icebp  
  41a71e:	mov    ch,0x6
  41a720:	jb     0x41a777
  41a722:	mov    dh,0xbb
  41a724:	cmp    ebp,ebp
  41a726:	xchg   esp,eax
  41a727:	retf   
  41a728:	xchg   DWORD PTR ds:[edx],ebp
  41a72b:	cmp    cl,BYTE PTR [ebx-0x5407ab31]
  41a731:	daa    
  41a732:	jns    0x1a417e35
  41a738:	pop    ss
  41a739:	ret    
  41a73a:	push   eax
  41a73b:	aam    0x4e
  41a73d:	sbb    al,0x35
  41a73f:	hlt    
  41a740:	xor    al,0x2b
  41a742:	js     0x41a720
  41a744:	xchg   BYTE PTR [ebx+ebx*1-0x10fb2674],bh
  41a74b:	(bad)
  41a74e:	in     eax,dx
  41a74f:	(bad)  
  41a750:	les    esi,FWORD PTR [edx]
  41a752:	loopne 0x41a7c5
  41a754:	pop    ebx
  41a755:	adc    BYTE PTR [eax],bl
  41a757:	int    0x93
  41a759:	int    0xc6
  41a75b:	xchg   BYTE PTR ds:0x826bb9f9,dh
  41a761:	clc    
  41a762:	sbb    edx,0xcd4a3881
  41a768:	mov    ds:0x43c8f56f,al
  41a76d:	outs   dx,DWORD PTR ds:[esi]
  41a76e:	mov    dl,0x59
  41a770:	nop
  41a771:	scas   eax,DWORD PTR es:[edi]
  41a772:	cmp    eax,0x5374fc70
  41a777:	jbe    0x41a7ef
  41a779:	mov    ebx,0xfb88f3ec
  41a77e:	repnz push eax
  41a780:	(bad)  [edi-0x31]
  41a783:	pop    esi
  41a784:	mov    cl,bl
  41a786:	adc    cl,ah
  41a788:	jb     0x41a789
  41a78a:	pop    edi
  41a78b:	je     0x41a776
  41a78d:	and    eax,0x5d3c91a3
  41a792:	xor    DWORD PTR [edx+0xa6f585c],esi
  41a798:	dec    ebp
  41a799:	pop    eax
  41a79a:	pop    ebp
  41a79b:	and    al,0xae
  41a79d:	ret    
  41a79e:	dec    edi
  41a79f:	ins    DWORD PTR es:[edi],dx
  41a7a0:	inc    eax
  41a7a1:	fst    QWORD PTR [edi]
  41a7a3:	mov    esi,0xc6c64d24
  41a7a8:	and    DWORD PTR [ebx+0x52],edi
  41a7ab:	cmp    eax,0x6d07c990
  41a7b0:	icebp  
  41a7b1:	pop    esi
  41a7b3:	or     DWORD PTR [esi],0xcf46e105
  41a7b9:	and    BYTE PTR [eax-0x36ba5e4],0xf2
  41a7c0:	jmp    0x41a7c2
	...
  41a832:	add    BYTE PTR [eax],al
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a86d
  41a841:	les    edx,FWORD PTR [ebx]
  41a843:	jmp    0xf5:0x11ef8
  41a84a:	add    BYTE PTR [eax],al
  41a84c:	rol    ecx,cl
  41a84e:	sub    al,dl
  41a850:	sbb    al,0x98
  41a852:	sub    al,0x71
  41a854:	dec    esp
  41a855:	mov    al,0xe0
  41a857:	push   esi
  41a858:	out    dx,al
  41a859:	imul   edi,DWORD PTR [esp+edi*4],0x7c97b411
  41a860:	jmp    0xf21c:0xbf2a48be
  41a867:	pop    ds
  41a868:	add    esp,eax
  41a86a:	jmp    esp
  41a86c:	fwait
  41a86d:	popa   
  41a86e:	jne    0x41a868
  41a870:	push   esi
  41a871:	push   ecx
  41a872:	jne    0x41a842
  41a874:	xchg   ebp,eax
  41a875:	or     al,ch
  41a877:	lds    esi,FWORD PTR [eax+0x6a574533]
  41a87d:	jl     0x41a8d0
  41a87f:	loopne 0x41a8b6
  41a881:	fsub   DWORD PTR [edx+0x13]
  41a884:	inc    edi
  41a885:	mov    ecx,0x60938b3f
  41a88a:	xchg   esp,eax
  41a88b:	pushf  
  41a88c:	mov    ebp,DWORD PTR [ecx+edx*4+0x7a]
  41a890:	dec    ecx
  41a891:	mov    cl,0xdd
  41a893:	cmp    BYTE PTR [ebx],bh
  41a895:	jmp    0xb72c:0x329f81ec
  41a89c:	push   eax
  41a89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a89e:	jp     0x41a8ed
  41a8a0:	aad    0xa4
  41a8a2:	enter  0xe45b,0xb9
  41a8a6:	stc    
  41a8a7:	xor    dh,ah
  41a8a9:	add    dl,BYTE PTR [ebp-0x48]
  41a8ac:	mov    edx,fs
  41a8ae:	pusha  
  41a8af:	fs retf 0x451f
  41a8b3:	in     eax,0x15
  41a8b5:	and    eax,0x59362d8c
  41a8ba:	mov    ds:0x17d0ae97,eax
  41a8bf:	dec    ecx
  41a8c0:	fist   DWORD PTR [ebx-0x641ef111]
  41a8c6:	sbb    cl,BYTE PTR gs:[edx-0x19]
  41a8ca:	es dec edx
  41a8cc:	mov    cl,0xcb
  41a8ce:	enter  0x5df4,0xd2
  41a8d2:	div    BYTE PTR [esi+ebp*8-0x55]
  41a8d6:	mov    esi,0x3e0cee9c
  41a8db:	add    esp,esp
  41a8dd:	jnp    0x41a87a
  41a8df:	mov    ah,0x7c
  41a8e1:	fadd   QWORD PTR [ecx]
  41a8e3:	inc    bh
  41a8e5:	mov    bl,BYTE PTR es:[ebx+0x6d]
  41a8e9:	and    al,BYTE PTR [ecx+0x5f83f413]
  41a8ef:	sbb    cl,cl
  41a8f1:	loop   0x41a87a
  41a8f3:	push   edx
  41a8f4:	cs mov bl,0x33
  41a8f7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a8f9:	sbb    eax,0xd75746fa
  41a8fe:	jp     0x41a8ab
  41a900:	stc    
  41a901:	and    eax,0xea699599
  41a906:	shl    DWORD PTR [esi-0x64],1
  41a909:	fs jb  0x41a89d
  41a90c:	jo     0x41a963
  41a90e:	mov    al,ds:0xa5a497bd
  41a913:	dec    esp
  41a914:	das    
  41a915:	xor    al,BYTE PTR [ebx+0x30]
  41a918:	jns    0x41a8fd
  41a91a:	frstpm(287 only) 
  41a91c:	not    DWORD PTR [ebx]
  41a91e:	pop    edi
  41a91f:	or     BYTE PTR [esi],al
  41a921:	sahf   
  41a922:	scas   eax,DWORD PTR es:[edi]
  41a923:	enter  0x4ab3,0x15
  41a927:	imul   edx,DWORD PTR ds:0x8d88379a,0xe28fc2c6
  41a931:	jbe    0x41a9a6
  41a933:	or     eax,0xa1dc7975
  41a938:	jmp    0x41a91f
  41a93a:	jp     0x41a906
  41a93c:	enter  0x9034,0x87
  41a940:	retf   0x0
	...
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx-0x5761c20f]
  41a9c1:	std    
  41a9c2:	popa   
  41a9c3:	pop    ebx
  41a9c4:	in     eax,dx
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [ebx+0x31],al
  41a9ce:	pop    esp
  41a9cf:	sbb    BYTE PTR [edx-0x3a986903],ch
  41a9d5:	xor    BYTE PTR [edi],bl
  41a9d7:	mov    eax,ds:0x7d41371f
  41a9dc:	adc    DWORD PTR [eax-0x33afbd07],0x3972c0dc
  41a9e6:	mov    esp,0x120317f9
  41a9eb:	scas   eax,DWORD PTR es:[edi]
  41a9ec:	dec    edx
  41a9ed:	repz je 0x41a9b8
  41a9f0:	das    
  41a9f1:	repz imul edx,eax,0x97ed003a
  41a9f8:	stc    
  41a9f9:	jns    0x41aa72
  41a9fb:	test   al,0x98
  41a9fd:	cmp    dl,cl
  41a9ff:	or     al,0xdf
  41aa01:	(bad)  
  41aa02:	mov    DWORD PTR [esi],0x86b2d5a1
  41aa08:	aad    0x34
  41aa0a:	sub    dl,ah
  41aa0c:	sbb    eax,0x2296b4d1
  41aa11:	xchg   esp,eax
  41aa12:	or     eax,0x39145a00
  41aa17:	dec    edi
  41aa18:	sub    dh,BYTE PTR ss:[esi-0x2fd095df]
  41aa1f:	cld    
  41aa20:	inc    edi
  41aa21:	(bad)  
  41aa22:	mov    ebx,0x68e0eff4
  41aa27:	mov    eax,ds:0x4a8fffb4
  41aa2c:	cmp    DWORD PTR [edi-0x5e],0xffffffc9
  41aa30:	and    ch,ch
  41aa32:	pushw  0x89f3
  41aa36:	push   DWORD PTR [edi-0xc21b399]
  41aa3c:	arpl   WORD PTR [ebp-0x10],dx
  41aa3f:	out    dx,al
  41aa40:	mov    BYTE PTR [eax+eax*4-0x7a],ch
  41aa44:	dec    DWORD PTR [esi+0x31600af9]
  41aa4a:	xor    eax,0xc1f5c624
  41aa4f:	rcr    DWORD PTR [eax+eax*4+0x1],0x6
  41aa54:	dec    edx
  41aa55:	xor    eax,0xf6df05fd
  41aa5a:	lock scas eax,DWORD PTR es:[edi]
  41aa5c:	mov    al,ds:0x5bca57fd
  41aa61:	jb     0x41aa28
  41aa63:	sbb    dl,BYTE PTR [edx]
  41aa65:	push   cs
  41aa66:	or     BYTE PTR [edx],al
  41aa68:	add    DWORD PTR [esp+ecx*4-0x7],ebx
  41aa6c:	out    0xa5,al
  41aa6e:	loope  0x41aadd
  41aa70:	popfw  
  41aa72:	ror    DWORD PTR ds:0xe7cedba,0xe8
  41aa79:	sahf   
  41aa7a:	mov    al,ds:0x67a35658
  41aa7f:	test   BYTE PTR ss:[esi],dl
  41aa82:	cmc    
  41aa83:	xor    BYTE PTR [ecx-0x6cb4f76],ch
  41aa89:	sub    al,cl
  41aa8b:	xchg   edx,eax
  41aa8c:	lods   eax,DWORD PTR ds:[esi]
  41aa8d:	cmp    ebp,ebx
  41aa8f:	or     eax,0x60d908bf
  41aa94:	outs   dx,DWORD PTR ds:[esi]
  41aa95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa96:	push   esi
  41aa97:	data16 adc al,0x42
  41aa9a:	stos   DWORD PTR es:[edi],eax
  41aa9b:	out    0xbc,eax
  41aa9d:	jle    0x41aa9a
  41aa9f:	gs mov eax,0x2a1ec9e7
  41aaa5:	mulps  xmm1,XMMWORD PTR [edi]
  41aaa8:	into   
  41aaa9:	arpl   WORD PTR [ecx+0x73a5b552],bx
  41aaaf:	cwde   
  41aab0:	out    0x5d,al
  41aab2:	(bad)  
  41aab4:	(bad)  
  41aab5:	in     eax,dx
  41aab6:	popf   
  41aab7:	jmp    0xddae:0xcfcc424
  41aabe:	mov    al,ds:0x391b
	...
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi+0x27]
  41ab41:	cmc    
  41ab42:	inc    ecx
  41ab43:	jnp    0x41ab27
  41ab45:	and    BYTE PTR [ecx],al
  41ab47:	add    ch,dh
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR [ecx],bh
  41ab4d:	or     al,0x7a
  41ab4f:	xchg   ecx,eax
  41ab50:	push   ss
  41ab51:	xchg   ebp,eax
  41ab52:	cld    
  41ab53:	mov    ecx,0x4bbbc793
  41ab58:	xor    al,BYTE PTR [ecx]
  41ab5a:	shr    DWORD PTR [ebx],0xcb
  41ab5d:	cmp    eax,0x91b3ad1
  41ab62:	xchg   esp,eax
  41ab63:	sub    DWORD PTR [ecx+0x6be84e23],0xffffff9f
  41ab6a:	add    eax,0x62b71d38
  41ab6f:	add    eax,DWORD PTR [esi-0x62003fa9]
  41ab75:	int    0x98
  41ab77:	fcmovb st,st(6)
  41ab79:	and    esp,ecx
  41ab7b:	cmc    
  41ab7c:	stos   BYTE PTR es:[edi],al
  41ab7d:	push   ds
  41ab7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab7f:	lock dec esi
  41ab81:	xrelease mov DWORD PTR [eax],eax
  41ab84:	push   ebp
  41ab85:	gs pop esi
  41ab87:	loop   0x41ab28
  41ab89:	push   ebx
  41ab8a:	xor    DWORD PTR ds:0x8c9adcf0,0xfffffff3
  41ab91:	push   ds
  41ab92:	test   eax,0x21b9d052
  41ab97:	inc    ecx
  41ab98:	add    ch,0x49
  41ab9b:	imul   edx,DWORD PTR [ecx],0xa2539d98
  41aba1:	fisubr WORD PTR [edx-0x42]
  41aba4:	cmp    BYTE PTR [esi-0x2f],0x52
  41aba8:	sbb    BYTE PTR [eax+0x50dbdc89],dl
  41abae:	mul    ebx
  41abb0:	fdivr  QWORD PTR [edi+0x14c9fc94]
  41abb6:	jmp    0xceb2:0x71d8ac83
  41abbd:	adc    ebp,DWORD PTR [eax-0x1b577f4d]
  41abc3:	mov    esi,0xb7333e84
  41abc8:	push   edi
  41abc9:	int    0x85
  41abcb:	sar    BYTE PTR [ebx],0x98
  41abce:	sub    al,0xcb
  41abd0:	pop    ebx
  41abd1:	cdq    
  41abd2:	jo     0x41ab92
  41abd4:	adc    ebx,0xe362314
  41abda:	repnz inc ebp
  41abdc:	xor    eax,0x49bd713c
  41abe1:	cs jp  0x41ac51
  41abe4:	push   ds
  41abe5:	pushf  
  41abe6:	into   
  41abe7:	jle    0x41ac2f
  41abe9:	popf   
  41abea:	mov    eax,0x756be01d
  41abef:	and    DWORD PTR [esi+0x11],0xfffffff8
  41abf3:	sub    ah,BYTE PTR [ecx]
  41abf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf6:	retf   
  41abf7:	inc    edi
  41abf8:	shr    BYTE PTR [ebp-0x4e],0xb0
  41abfc:	sti    
  41abfd:	inc    eax
  41abfe:	push   ecx
  41abff:	dec    esi
  41ac00:	dec    edx
  41ac01:	sub    cl,bl
  41ac03:	std    
  41ac04:	cmp    BYTE PTR [esi],0x1
  41ac07:	fdivr  QWORD PTR [eax+0x21]
  41ac0a:	inc    eax
  41ac0b:	mov    bh,0x5
  41ac0d:	jno    0x41abed
  41ac0f:	aad    0x2c
  41ac11:	pop    es
  41ac12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac13:	sub    ebx,ebp
  41ac15:	pusha  
  41ac16:	jg     0x41ac46
  41ac18:	mov    cl,0xb6
  41ac1a:	das    
  41ac1b:	sti    
  41ac1c:	inc    eax
  41ac1d:	iret   
  41ac1e:	cdq    
  41ac1f:	arpl   WORD PTR ds:0x819fbc63,dx
  41ac25:	gs jnp 0x41ac50
  41ac28:	pop    esp
  41ac29:	fwait
  41ac2a:	mov    ds,WORD PTR [ebp-0x134cef34]
  41ac30:	outs   dx,DWORD PTR ds:[esi]
  41ac31:	jae    0x41ac1a
  41ac33:	retf   
  41ac34:	aam    0xaf
  41ac36:	mov    ds:0x9a652591,eax
  41ac3b:	nop
  41ac3c:	add    edx,ebp
  41ac3e:	inc    edi
  41ac3f:	cdq    
  41ac40:	mov    al,ds:0x0
	...
  41acb1:	add    BYTE PTR [eax],al
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xcfe8fb02
  41acc3:	add    eax,0x121d7
  41acc8:	cmc    
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR [eax-0x50f6942a],ch
  41acd1:	test   al,0xc
  41acd3:	dec    ebx
  41acd4:	popa   
  41acd5:	(bad)  
  41acd6:	mov    ds:0x6c991267,al
  41acdb:	dec    esp
  41acdc:	xlat   BYTE PTR ds:[ebx]
  41acdd:	(bad)  
  41acde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acdf:	repz sub al,0x8b
  41ace2:	das    
  41ace3:	jmp    0x42cf:0x64d39848
  41acea:	sbb    ch,dh
  41acec:	dec    edx
  41aced:	bound  ecx,QWORD PTR [edi+0x11]
  41acf0:	lock sbb BYTE PTR [edx],ah
  41acf3:	mov    al,0xce
  41acf5:	test   BYTE PTR [esi+0xf],al
  41acf8:	jmp    0x85ae:0xb8ed6ec3
  41acff:	retf   0xde46
  41ad02:	pop    esp
  41ad03:	add    BYTE PTR [ecx+0x1d6c93f4],dl
  41ad09:	sub    ecx,DWORD PTR [edx]
  41ad0b:	outs   dx,BYTE PTR ds:[esi]
  41ad0c:	dec    eax
  41ad0d:	ss pop esp
  41ad0f:	jne    0x41ad6d
  41ad11:	nop
  41ad12:	sar    BYTE PTR [ebx+0x21],1
  41ad15:	out    0x7,al
  41ad17:	push   ebx
  41ad18:	les    ecx,FWORD PTR [ebx+ebp*2-0x320779de]
  41ad1f:	les    ebp,FWORD PTR [ebx+0x7b]
  41ad22:	jo     0x41ad6d
  41ad24:	(bad)  
  41ad26:	jno    0x41ad00
  41ad28:	sub    eax,0xf95aff06
  41ad2d:	jae    0x41accd
  41ad2f:	mov    ebp,0x1830be95
  41ad34:	or     al,BYTE PTR [esi-0x20cb4b52]
  41ad3a:	cld    
  41ad3b:	cwde   
  41ad3c:	cmc    
  41ad3d:	lods   al,BYTE PTR ds:[esi]
  41ad3e:	mov    ch,0x59
  41ad40:	sub    dl,al
  41ad42:	inc    edx
  41ad43:	lods   eax,DWORD PTR ds:[esi]
  41ad44:	ins    DWORD PTR es:[edi],dx
  41ad45:	jbe    0x41accc
  41ad47:	xor    al,0xe4
  41ad49:	adc    al,0x7b
  41ad4b:	pop    ebp
  41ad4c:	inc    esp
  41ad4d:	mov    bh,0x7f
  41ad4f:	push   esi
  41ad50:	arpl   WORD PTR [ecx],sp
  41ad52:	xchg   ebx,eax
  41ad53:	sar    BYTE PTR [edi+0x362e559a],cl
  41ad59:	push   cs
  41ad5a:	and    BYTE PTR [eax+0x1c33b4f0],cl
  41ad60:	sub    eax,0x30fc0edb
  41ad65:	fimul  DWORD PTR [ebx]
  41ad67:	fst    DWORD PTR [edi+0x39]
  41ad6a:	(bad)  [esi-0x1f]
  41ad6d:	cwde   
  41ad6e:	jbe    0x41ad1b
  41ad70:	xor    eax,0xece29bd8
  41ad75:	shr    ebp,1
  41ad77:	mov    ch,0x4a
  41ad79:	mov    dl,0x81
  41ad7b:	inc    edi
  41ad7c:	ret    0x4476
  41ad7f:	fistp  WORD PTR [ebx-0x746f0762]
  41ad85:	sbb    ecx,esp
  41ad87:	shl    DWORD PTR [esi-0x50],cl
  41ad8a:	test   al,0x92
  41ad8c:	and    al,0x8e
  41ad8e:	pop    ebp
  41ad8f:	add    al,al
  41ad91:	mov    al,ds:0xf7a6022a
  41ad96:	mov    esp,0xd0999fdb
  41ad9b:	test   BYTE PTR [ebx+ebp*8+0x3008d418],bl
  41ada2:	les    eax,FWORD PTR [eax+0x12]
  41ada5:	mov    esp,0x8d691c0d
  41adaa:	ficomp WORD PTR [ebx-0x4c5609c3]
  41adb0:	or     DWORD PTR [ebp+eax*8+0xd],0xfffffffd
  41adb5:	fist   WORD PTR [eax-0x571a370f]
  41adbb:	mov    ch,0xcd
  41adbd:	and    edx,DWORD PTR [esi+0xc7f4]
	...
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x2277741d]
  41ae41:	sub    BYTE PTR [edx],cl
  41ae43:	jae    0x41ae11
  41ae45:	and    al,BYTE PTR [ecx]
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    cl,dh
  41ae4d:	popf   
  41ae4e:	and    WORD PTR [ebp+0x1d],0x50
  41ae53:	repnz out dx,al
  41ae55:	xchg   edx,eax
  41ae56:	mov    cl,0x1
  41ae58:	push   ebp
  41ae59:	(bad)  
  41ae5a:	push   ss
  41ae5b:	sub    bh,ah
  41ae5d:	mov    bh,0x17
  41ae5f:	shl    esp,0x57
  41ae62:	adc    eax,0x3968378
  41ae67:	sbb    BYTE PTR [esi+0x25b41cce],bl
  41ae6d:	das    
  41ae6e:	mov    bh,0x14
  41ae70:	sbb    BYTE PTR [ebp+0x480cbcd3],cl
  41ae76:	push   eax
  41ae77:	mov    cl,0x17
  41ae79:	mov    ch,BYTE PTR [edi-0x4d1c636d]
  41ae7f:	dec    edi
  41ae80:	stos   DWORD PTR es:[edi],eax
  41ae81:	test   BYTE PTR [edx+0x7f2ac95a],cl
  41ae87:	dec    eax
  41ae88:	sub    DWORD PTR [edx],esp
  41ae8a:	push   edi
  41ae8b:	mov    ebp,0x3c90325f
  41ae90:	mov    esi,0xbd9b28a5
  41ae95:	ret    
  41ae96:	mov    al,0x2
  41ae98:	cdq    
  41ae99:	sbb    cl,BYTE PTR [ecx+0x4e]
  41ae9c:	in     eax,dx
  41ae9d:	jecxz  0x41ae5b
  41ae9f:	popf   
  41aea0:	aam    0x99
  41aea2:	(bad)  
  41aea3:	mov    ecx,ebp
  41aea5:	(bad)  ss:[edx-0x80]
  41aea9:	rol    edx,0x8d
  41aeac:	shl    BYTE PTR [ebx+ebp*1-0x67],1
  41aeb0:	jmp    0x871d8a54
  41aeb5:	in     al,dx
  41aeb6:	nop
  41aeb7:	arpl   WORD PTR [edx-0x1096e404],dx
  41aebd:	scas   al,BYTE PTR es:[edi]
  41aebe:	jmp    0x41ae6b
  41aec0:	out    0x7a,eax
  41aec2:	test   eax,0x46246eb5
  41aec7:	stc    
  41aec8:	daa    
  41aec9:	dec    ecx
  41aeca:	pop    ebp
  41aecb:	sub    ebx,eax
  41aecd:	push   DWORD PTR [edx+0x78]
  41aed0:	push   0x7d
  41aed2:	inc    ebp
  41aed3:	outs   dx,BYTE PTR ds:[esi]
  41aed4:	sub    BYTE PTR [ecx+0x27],0x69
  41aed8:	mov    ds:0x580115a1,eax
  41aedd:	xlat   BYTE PTR ds:[ebx]
  41aede:	lods   al,BYTE PTR ds:[esi]
  41aedf:	xchg   esp,eax
  41aee0:	lahf   
  41aee1:	out    0x38,eax
  41aee3:	sub    eax,DWORD PTR [ebx-0x69eafde3]
  41aee9:	imul   ebp,esp,0x4fac4738
  41aeef:	loop   0x41ae99
  41aef1:	mov    ch,0xf2
  41aef3:	leave  
  41aef4:	mov    dh,0xcb
  41aef6:	jo     0x41aee3
  41aef8:	jo     0x41aed5
  41aefa:	mov    ch,0xd
  41aefc:	xor    DWORD PTR [edx],esi
  41aefe:	or     al,BYTE PTR [eax-0x2b]
  41af01:	jge    0x41aea9
  41af03:	inc    ecx
  41af04:	cmc    
  41af05:	xchg   ebx,eax
  41af06:	fstp   QWORD PTR [edi]
  41af08:	or     bh,ch
  41af0a:	mov    ecx,0x53787a4f
  41af0f:	(bad)  
  41af10:	outs   dx,BYTE PTR ds:[esi]
  41af11:	push   ebx
  41af12:	(bad)  
  41af13:	imul   ebp,DWORD PTR [ebx],0x3f
  41af16:	cmp    bl,ch
  41af18:	cmp    al,0x6a
  41af1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1b:	ins    BYTE PTR es:[edi],dx
  41af1c:	inc    ebp
  41af1d:	inc    ebp
  41af1e:	xchg   ecx,eax
  41af1f:	mov    cl,0xbd
  41af21:	cmc    
  41af22:	in     eax,0x95
  41af24:	sbb    al,0x1a
  41af26:	pop    ebx
  41af27:	and    ebx,ecx
  41af29:	lods   al,BYTE PTR ds:[esi]
  41af2a:	sti    
  41af2b:	cmp    BYTE PTR [ebp-0x70],0x2e
  41af2f:	pop    ecx
  41af30:	shr    BYTE PTR [ebp-0xc2a1ac0],0x6
  41af37:	cs mov ch,0xa6
  41af3a:	scas   al,BYTE PTR es:[edi]
  41af3b:	xchg   edi,eax
  41af3c:	or     DWORD PTR [ebp+0x5f5c9a],0x0
	...
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x8
  41afc1:	sbb    edi,ecx
  41afc3:	mov    bh,0xc1
  41afc5:	and    eax,DWORD PTR [ecx]
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [esi-0x1f512165],dh
  41afd1:	std    
  41afd2:	outs   dx,DWORD PTR ds:[esi]
  41afd3:	sub    al,0xde
  41afd5:	jb     0x41aff0
  41afd7:	not    DWORD PTR [ecx+0x4d5c001b]
  41afdd:	add    al,0xa6
  41afdf:	mov    edx,0x392f91a9
  41afe4:	mov    eax,0x7b6c77d9
  41afe9:	out    dx,al
  41afea:	inc    esp
  41afeb:	mov    ah,0x56
  41afed:	push   esp
  41afee:	cmp    BYTE PTR [ebx+edx*4+0x2a],ch
  41aff2:	daa    
  41aff3:	ins    DWORD PTR es:[edi],dx
  41aff4:	(bad)  
  41aff5:	push   ss
  41aff6:	xor    esi,DWORD PTR [eax+0x44]
  41aff9:	jbe    0x41b071
  41affb:	adc    esp,eax
  41affd:	cwde   
  41affe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afff:	dec    esi
  41b000:	jp     0x41b07e
  41b002:	push   ss
  41b003:	(bad)  
  41b006:	fsub   DWORD PTR [ecx*1-0x487069d9]
  41b00d:	ja     0x41b054
  41b00f:	dec    edx
  41b010:	je     0x41b05f
  41b012:	enter  0x762e,0xbe
  41b016:	aas    
  41b017:	mov    dh,0x19
  41b019:	sub    dl,BYTE PTR [eax]
  41b01b:	fcomp  DWORD PTR ds:0x5bdba3d5
  41b021:	inc    esp
  41b022:	push   ss
  41b023:	cmp    eax,0xd227ef86
  41b028:	loope  0x41afd9
  41b02a:	sbb    esp,DWORD PTR [ebp+0x2748d751]
  41b030:	push   cs
  41b031:	mov    ebp,0x95bfe383
  41b036:	sbb    eax,0x86ec5816
  41b03b:	ds jno 0x41b00c
  41b03e:	(bad)  
  41b03f:	ss shl ecx,1
  41b042:	add    DWORD PTR [ebx+edx*1],esi
  41b045:	iret   
  41b046:	dec    ecx
  41b047:	lea    ecx,[ebp+0x76dd02ba]
  41b04d:	sti    
  41b04e:	push   edi
  41b04f:	xor    BYTE PTR [eax],bh
  41b051:	or     BYTE PTR [ebp+0x67],dl
  41b054:	or     BYTE PTR [ecx+0x2d41b8f5],dl
  41b05a:	push   ebp
  41b05b:	push   ebp
  41b05c:	(bad)  
  41b05d:	adc    edi,DWORD PTR [edi+0x51ba1a76]
  41b063:	shl    edi,cl
  41b065:	sub    eax,0x19eee385
  41b06a:	xor    eax,DWORD PTR [ebp-0x64]
  41b06d:	sti    
  41b06e:	push   ss
  41b06f:	jle    0x41b0e0
  41b071:	lods   al,BYTE PTR ds:[esi]
  41b072:	inc    ecx
  41b073:	aas    
  41b074:	into   
  41b075:	add    DWORD PTR [edi],0x5cd30f56
  41b07b:	add    bl,BYTE PTR [esi]
  41b07d:	outs   dx,DWORD PTR ds:[esi]
  41b07e:	jmp    0x41b069
  41b080:	add    BYTE PTR [ebp+0x6c],ch
  41b083:	call   0x8d55:0x7ac6be93
  41b08a:	aad    0xe
  41b08c:	js     0x41b031
  41b08e:	sbb    bh,BYTE PTR [ebp-0x1f6a0a4f]
  41b094:	and    BYTE PTR [esi+ecx*4+0x68414d12],0x85
  41b09c:	cli    
  41b09d:	xchg   ecx,eax
  41b09e:	jbe    0x41b040
  41b0a0:	mov    cl,ah
  41b0a2:	inc    ecx
  41b0a3:	adc    BYTE PTR [edi+0x44],ah
  41b0a6:	cmp    eax,0xdbc5ae3b
  41b0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ac:	pusha  
  41b0ad:	add    BYTE PTR [esp+edi*4],bl
  41b0b0:	lock jg 0x41b0c3
  41b0b3:	scas   al,BYTE PTR es:[edi]
  41b0b4:	cmp    edx,DWORD PTR [ebp+0x7a1b635]
  41b0ba:	cmp    BYTE PTR [eax],ah
  41b0bc:	fcom   QWORD PTR [esp+ebp*8]
  41b0bf:	sbb    bl,BYTE PTR ds:0x0
	...
  41b131:	add    BYTE PTR [eax],al
  41b133:	add    BYTE PTR [esp+ecx*1],bl
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	adc    ah,bl
  41b142:	dec    esi
  41b143:	push   ebp
  41b144:	mov    dh,0x24
  41b146:	add    DWORD PTR [eax],eax
  41b148:	cmc    
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    bl,al
  41b14d:	and    ebx,esp
  41b14f:	add    BYTE PTR [esi],0x80
  41b152:	stos   DWORD PTR es:[edi],eax
  41b153:	jb     0x41b110
  41b155:	mov    esp,DWORD PTR ds:0x45459239
  41b15b:	mov    edx,0x6355d65c
  41b160:	inc    ebp
  41b161:	popf   
  41b162:	pop    es
  41b163:	add    bh,BYTE PTR [edx+0x12]
  41b166:	cmp    eax,0x59c4d90
  41b16b:	ss inc ebx
  41b16d:	sub    edx,esp
  41b16f:	jns    0x41b19f
  41b171:	push   cs
  41b172:	inc    esp
  41b173:	or     bl,BYTE PTR [ecx]
  41b175:	lahf   
  41b176:	mov    ch,0x25
  41b178:	stos   BYTE PTR es:[edi],al
  41b179:	pop    ss
  41b17a:	jns    0x41b1e5
  41b17c:	pop    es
  41b17d:	sahf   
  41b17e:	int3   
  41b17f:	sbb    DWORD PTR [eax+0x56],esi
  41b182:	retf   0x60ec
  41b185:	sub    al,0x90
  41b187:	mov    WORD PTR [edx-0x2c],gs
  41b18a:	and    bh,al
  41b18c:	jle    0x41b14d
  41b18e:	push   esp
  41b18f:	outs   dx,DWORD PTR ds:[esi]
  41b190:	aas    
  41b191:	test   BYTE PTR [edi],0xca
  41b194:	retf   0x696b
  41b197:	or     ebp,DWORD PTR [ebp-0x55a8eef0]
  41b19d:	jle    0x41b15d
  41b19f:	sub    ebx,DWORD PTR [ecx+0x4c]
  41b1a2:	inc    edi
  41b1a3:	dec    ebp
  41b1a4:	push   es
  41b1a5:	adc    al,0x65
  41b1a7:	mov    bh,0xe6
  41b1a9:	xor    bh,0xc6
  41b1ac:	cli    
  41b1ad:	add    esp,DWORD PTR [edi]
  41b1af:	mov    ebx,0x7c3fe16a
  41b1b4:	sub    BYTE PTR [ecx+0x1a3d02f2],bh
  41b1ba:	ret    
  41b1bb:	jecxz  0x41b1aa
  41b1bd:	dec    ebp
  41b1be:	stc    
  41b1bf:	mov    dl,0x3e
  41b1c1:	scas   al,BYTE PTR es:[edi]
  41b1c2:	cld    
  41b1c3:	enter  0x7249,0x62
  41b1c7:	mov    ebp,0x3985407c
  41b1cc:	sub    al,0x81
  41b1ce:	mov    bl,0x1c
  41b1d0:	pop    ebp
  41b1d1:	pop    esp
  41b1d2:	iret   
  41b1d3:	xor    eax,0xf6ea0903
  41b1d8:	sbb    edi,ebp
  41b1da:	pop    esi
  41b1db:	mov    bh,ah
  41b1dd:	xchg   DWORD PTR [eax],ebx
  41b1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e0:	sbb    BYTE PTR [eax-0x3e],0x65
  41b1e4:	pushf  
  41b1e5:	jmp    0x41b23c
  41b1e7:	sub    DWORD PTR [ecx-0x101b870e],edx
  41b1ed:	rcr    DWORD PTR [ebx+0x2a],0x28
  41b1f1:	pop    esi
  41b1f2:	(bad)  
  41b1f3:	pop    esi
  41b1f4:	push   0x8a3f978a
  41b1f9:	xchg   ebp,eax
  41b1fa:	sbb    eax,0xbe8e3971
  41b1ff:	pop    ecx
  41b200:	cmp    DWORD PTR [ebp+0x20],0x5acf0ba1
  41b207:	repnz xchg edx,eax
  41b209:	(bad)  
  41b20a:	pop    esp
  41b20b:	das    
  41b20c:	xchg   ebx,eax
  41b20d:	jl     0x41b274
  41b20f:	pop    esp
  41b210:	fiadd  DWORD PTR [eax-0x2504e52c]
  41b216:	loop   0x41b270
  41b218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b219:	or     eax,0x843e73a3
  41b21e:	test   al,0x5
  41b220:	fs push cs
  41b222:	out    dx,eax
  41b223:	arpl   WORD PTR [ebx+0x2c],dx
  41b226:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b228:	adc    BYTE PTR [eax],al
  41b22a:	mov    esp,0x55d01002
  41b22f:	cli    
  41b230:	call   0x6a825f25
  41b235:	mul    BYTE PTR [ebx+ebx*4]
  41b238:	push   0x2b
  41b23a:	xchg   ecx,eax
  41b23b:	loope  0x41b241
  41b23d:	aad    0xe5
  41b23f:	push   es
  41b240:	jmp    0x0:0x0
	...
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	pushf  
  41b2c1:	mov    BYTE PTR [edi+ebp*4-0x55],bl
  41b2c5:	and    eax,0xf50001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	pushfw 
  41b2ce:	mov    edx,0x7a31821e
  41b2d3:	dec    ecx
  41b2d4:	popf   
  41b2d5:	loopne 0x41b2a5
  41b2d7:	jno    0x41b2a3
  41b2d9:	adc    DWORD PTR [ebx+0x5c6e42c8],esp
  41b2df:	lds    esi,FWORD PTR [ecx]
  41b2e1:	xor    BYTE PTR [ebp-0x6f],0xde
  41b2e5:	sbb    edi,DWORD PTR [eax-0x5a03e75f]
  41b2eb:	daa    
  41b2ec:	lods   eax,DWORD PTR ds:[esi]
  41b2ed:	(bad)
  41b2f1:	test   esp,esp
  41b2f3:	cli    
  41b2f4:	or     bh,bl
  41b2f6:	jbe    0x41b36b
  41b2f8:	call   0x3d78:0x1870a819
  41b2ff:	ins    BYTE PTR es:[edi],dx
  41b300:	xchg   ebp,eax
  41b301:	aas    
  41b302:	dec    ebx
  41b303:	lock xchg ecx,eax
  41b305:	clc    
  41b306:	ja     0x41b2c5
  41b308:	add    ah,BYTE PTR [edx-0x43]
  41b30b:	mov    dh,0x81
  41b30d:	sbb    BYTE PTR [ecx],0x38
  41b310:	sbb    eax,0xfa9ce4b2
  41b315:	and    eax,0x684d4e42
  41b31a:	xor    BYTE PTR [ecx+edx*8-0x69],dl
  41b31e:	xchg   esp,eax
  41b31f:	ss push edx
  41b321:	jp     0x41b392
  41b323:	sub    eax,0x1b80202
  41b328:	xchg   dh,bl
  41b32a:	js     0x41b302
  41b32c:	in     eax,dx
  41b32d:	dec    ebx
  41b32e:	sbb    BYTE PTR [ebx],ch
  41b330:	mov    ecx,esi
  41b332:	ins    BYTE PTR es:[edi],dx
  41b333:	imul   esp,ecx,0xfffffffc
  41b336:	xchg   esp,eax
  41b337:	dec    eax
  41b338:	pusha  
  41b339:	xchg   ecx,eax
  41b33a:	mov    edi,0x1673773e
  41b33f:	jmp    0x41b394
  41b341:	jmp    0xba80:0x355a4097
  41b348:	outs   dx,DWORD PTR ds:[esi]
  41b349:	leave  
  41b34a:	into   
  41b34b:	add    DWORD PTR [ecx+0x31c0fa48],eax
  41b351:	xor    eax,0xd84586b7
  41b356:	and    DWORD PTR [edi+0x70],ebx
  41b359:	call   0xe3eb3af3
  41b35e:	pushf  
  41b35f:	xor    eax,0xd408d3d0
  41b364:	(bad)  [ebx]
  41b366:	adc    dl,BYTE PTR [edi]
  41b368:	repnz cwde 
  41b36a:	cli    
  41b36b:	mov    ds:0xcf67603a,al
  41b370:	xor    DWORD PTR [ebp-0x1],eax
  41b373:	and    bh,BYTE PTR [ecx-0x5fde8e5a]
  41b379:	and    ah,BYTE PTR ds:0xb8dd8c95
  41b37f:	jbe    0x41b313
  41b381:	shl    ebp,1
  41b383:	mov    esp,0x4fe9d0b4
  41b388:	adc    bh,BYTE PTR [ecx+ebp*4]
  41b38b:	push   ds
  41b38c:	adc    al,0xaa
  41b38e:	and    BYTE PTR [edx-0x6],dl
  41b391:	pop    ebx
  41b392:	into   
  41b393:	stos   BYTE PTR es:[edi],al
  41b394:	cld    
  41b395:	lods   eax,DWORD PTR ds:[esi]
  41b396:	jmp    0x27ed:0x667fb1b5
  41b39d:	adc    eax,0x93e832a1
  41b3a2:	fdiv   DWORD PTR [eax+ebx*8]
  41b3a5:	push   ebx
  41b3a6:	jo     0x41b412
  41b3a8:	dec    ebx
  41b3a9:	das    
  41b3aa:	xchg   edx,eax
  41b3ab:	jmp    0xe80c17d9
  41b3b0:	jge    0x41b336
  41b3b2:	mov    edi,0x92479b74
  41b3b7:	push   ss
  41b3b8:	test   DWORD PTR [eax+0x26d03604],edi
  41b3be:	fadd   DWORD PTR [edx+0x50]
	...
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	fisub  DWORD PTR [ebx+0x3]
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    BYTE PTR [ebx],ch
  41b44d:	hlt    
  41b44e:	lds    ebp,FWORD PTR [edi+0x62d05672]
  41b454:	imul   ecx,DWORD PTR [ecx],0x59
  41b457:	adc    DWORD PTR [ebp-0x2b0449b4],ebx
  41b45d:	aad    0xcf
  41b45f:	std    
  41b460:	and    BYTE PTR ds:0x3db64a1f,ch
  41b466:	cmp    al,0x80
  41b468:	mov    edx,0x421065e0
  41b46d:	lods   al,BYTE PTR ds:[esi]
  41b46e:	mov    al,BYTE PTR [esi+0xab1407c]
  41b474:	add    esp,DWORD PTR [esi]
  41b476:	mov    WORD PTR [edx+0x4106402],fs
  41b47c:	sub    bl,BYTE PTR [ebx]
  41b47e:	xchg   ebp,eax
  41b47f:	sbb    dh,dl
  41b481:	(bad)  
  41b482:	les    esp,FWORD PTR [ebx]
  41b484:	jbe    0x41b4b3
  41b486:	mov    eax,ds:0x49b9cd95
  41b48c:	aam    0xe1
  41b48e:	pop    eax
  41b48f:	(bad)  
  41b490:	sub    al,0x11
  41b492:	dec    edx
  41b493:	test   al,0x36
  41b495:	mov    cl,dl
  41b497:	(bad)  
  41b498:	test   BYTE PTR [ebp+0x3f],0xd6
  41b49c:	push   ecx
  41b49d:	or     al,0xff
  41b49f:	ins    BYTE PTR es:[edi],dx
  41b4a0:	cmp    al,0x53
  41b4a2:	mov    eax,ds:0x34358ce9
  41b4a7:	sti    
  41b4a8:	test   eax,0x5d73cfc2
  41b4ad:	push   esi
  41b4ae:	push   ecx
  41b4af:	(bad)  
  41b4b0:	leave  
  41b4b1:	add    BYTE PTR [ecx],ah
  41b4b3:	mov    gs,WORD PTR [edx-0x60]
  41b4b6:	lods   al,BYTE PTR ds:[esi]
  41b4b7:	or     eax,0x576667e2
  41b4bc:	call   0xfe34771
  41b4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c2:	retf   
  41b4c3:	mov    edx,DWORD PTR [ebp-0x13]
  41b4c6:	(bad)  [ebp+0x24]
  41b4c9:	cmp    BYTE PTR [eax+ebx*2+0x60],al
  41b4cd:	jp     0x41b4f1
  41b4cf:	stos   BYTE PTR es:[edi],al
  41b4d0:	or     al,0xaa
  41b4d2:	or     al,0x72
  41b4d4:	add    al,0xa2
  41b4d6:	fistp  DWORD PTR [ebp+0x2]
  41b4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4da:	lea    edx,[ebp+0x50b2d71f]
  41b4e0:	or     cl,BYTE PTR [eax]
  41b4e2:	and    bh,BYTE PTR [eax+eiz*4+0x2]
  41b4e6:	shr    BYTE PTR ds:0xdd204e87,0xcc
  41b4ed:	xchg   ebp,eax
  41b4ee:	test   BYTE PTR [esi+edx*4-0x55],dh
  41b4f2:	jnp    0x41b4e4
  41b4f4:	popa   
  41b4f5:	inc    ebp
  41b4f6:	ss repnz int3 
  41b4f9:	lea    ecx,[edi]
  41b4fb:	xchg   edi,eax
  41b4fc:	push   esi
  41b4fd:	mov    edi,0x8149d4d
  41b502:	stos   BYTE PTR es:[edi],al
  41b503:	push   eax
  41b504:	sub    bh,cl
  41b506:	sub    al,0xb8
  41b508:	(bad)
  41b50b:	movhps QWORD PTR [ebx+0x62e116a1],xmm3
  41b512:	pop    ebp
  41b513:	je     0x41b50b
  41b515:	clc    
  41b516:	sbb    DWORD PTR [esi-0x5ffcbf36],ebx
  41b51c:	aaa    
  41b51d:	in     eax,dx
  41b51e:	mov    al,0xe
  41b520:	xor    al,0xf8
  41b522:	cmp    DWORD PTR [edx+0x5f79c052],eax
  41b528:	push   eax
  41b529:	mov    edx,0x9b42e323
  41b52e:	mov    ebp,0xa4852845
  41b533:	retf   
  41b534:	(bad)  
  41b535:	retf   0x3b7f
  41b538:	cmp    DWORD PTR [edi],0x5488c687
  41b53e:	sub    BYTE PTR [ebx+0x8e],0x0
	...
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x35
  41b5c1:	push   edx
  41b5c2:	jbe    0x41b61d
  41b5c4:	xchg   ebp,eax
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [ebx-0x1a0c614d],cl
  41b5d1:	inc    ebx
  41b5d2:	mov    ds:0x4262965e,al
  41b5d7:	inc    ebx
  41b5d8:	push   edi
  41b5d9:	cld    
  41b5da:	push   edi
  41b5db:	and    al,0x83
  41b5dd:	pop    ebp
  41b5de:	pop    ebp
  41b5df:	push   0x50
  41b5e1:	(bad)  
  41b5e2:	out    0x5a,al
  41b5e4:	gs xchg ecx,eax
  41b5e6:	pop    ss
  41b5e7:	jp     0x41b5fc
  41b5e9:	(bad)  
  41b5eb:	es xchg esi,eax
  41b5ed:	and    DWORD PTR [esi+0x20],esp
  41b5f0:	lds    ebx,FWORD PTR [ebp-0x6804ad98]
  41b5f6:	mov    dh,0xdd
  41b5f8:	int    0x2f
  41b5fa:	cmp    ah,BYTE PTR [ebp-0x3]
  41b5fd:	push   ss
  41b5fe:	dec    edi
  41b5ff:	les    ecx,FWORD PTR [ebx]
  41b601:	cpuid  
  41b603:	jg     0x41b64b
  41b605:	jmp    0x47e4:0x3c84c7b7
  41b60c:	iret   
  41b60d:	adc    ax,0x2d4d
  41b611:	outs   dx,DWORD PTR ds:[esi]
  41b612:	stc    
  41b613:	jg     0x41b5e4
  41b615:	cwde   
  41b616:	cwde   
  41b617:	out    0xc0,al
  41b619:	dec    ebx
  41b61a:	jb     0x41b65c
  41b61c:	in     eax,dx
  41b61d:	mov    bh,0xa9
  41b61f:	dec    DWORD PTR [eax+0x19]
  41b622:	arpl   WORD PTR [edi-0x7cf0dee8],cx
  41b628:	cdq    
  41b629:	sub    eax,0xcb21b6ca
  41b62e:	dec    edx
  41b62f:	or     eax,0x41999875
  41b634:	int    0x44
  41b636:	setge  ah
  41b639:	xchg   ebx,eax
  41b63a:	mov    esp,0x4a341ad
  41b63f:	ins    BYTE PTR es:[edi],dx
  41b640:	xlat   BYTE PTR gs:[ebx]
  41b642:	ds push esp
  41b644:	mov    edx,0xadf8c51e
  41b649:	or     BYTE PTR [eax+0x4630aac4],cl
  41b64f:	add    bh,BYTE PTR [edx+0x3f277ed2]
  41b655:	add    DWORD PTR [ebp-0x526b3cac],eax
  41b65b:	and    ecx,DWORD PTR [edi+0x35]
  41b65e:	and    BYTE PTR [ebx+0x77],al
  41b661:	mov    esp,0x8e119135
  41b666:	jge    0x41b6c9
  41b668:	aad    0x4a
  41b66a:	into   
  41b66b:	mov    dl,0xf
  41b66d:	mov    ah,BYTE PTR [ecx+0x159ca4bd]
  41b673:	ja     0x41b66a
  41b675:	test   al,0xd3
  41b677:	adc    BYTE PTR [edx],dh
  41b679:	xchg   dl,al
  41b67b:	xor    dl,ah
  41b67d:	cmp    ch,BYTE PTR [ebx+0x71b440f7]
  41b683:	test   BYTE PTR [esi],0xdc
  41b686:	ja     0x41b678
  41b688:	mov    edx,esp
  41b68a:	out    dx,al
  41b68b:	jp     0x41b6bb
  41b68d:	jmp    0x41b683
  41b68f:	daa    
  41b690:	add    cl,dh
  41b692:	push   ss
  41b693:	mov    ah,0x31
  41b695:	push   esi
  41b696:	jnp    0x41b694
  41b698:	std    
  41b699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b69a:	test   BYTE PTR [eax-0x420168f1],dl
  41b6a0:	scas   al,BYTE PTR es:[edi]
  41b6a1:	mov    bh,0xff
  41b6a3:	outs   dx,BYTE PTR ds:[esi]
  41b6a4:	loop   0x41b6c2
  41b6a6:	push   es
  41b6a7:	(bad)  
  41b6a8:	cdq    
  41b6a9:	shl    BYTE PTR [ebp-0x14],cl
  41b6ac:	sub    al,0xc3
  41b6ae:	mov    ds:0x84ea53ed,al
  41b6b3:	test   BYTE PTR [ebx+0x6ba2eef6],al
  41b6b9:	in     al,0xa8
  41b6bb:	add    al,0xce
  41b6bd:	lock stos DWORD PTR es:[edi],eax
  41b6bf:	stos   BYTE PTR es:[edi],al
  41b6c0:	ja     0x41b6c2
	...
  41b732:	add    BYTE PTR [eax],al
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [ebx],ah
  41b741:	addr16 mov ebx,0x1288aca
  41b747:	add    ch,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [ebx+0x1eff41d0],dl
  41b751:	ror    ecx,cl
  41b753:	jae    0x41b757
  41b755:	jb     0x41b786
  41b757:	mov    bh,BYTE PTR [ecx-0x7a8586a9]
  41b75d:	popf   
  41b75e:	sahf   
  41b75f:	cmp    al,0xfc
  41b761:	fistp  DWORD PTR [ebx+0x6f]
  41b764:	push   edx
  41b765:	add    DWORD PTR [esi-0x6a],edx
  41b768:	mov    ebp,0x8a7c981f
  41b76d:	push   edx
  41b76e:	js     0x41b758
  41b770:	in     eax,dx
  41b771:	test   BYTE PTR [ebp-0x7923fbc1],ah
  41b777:	pop    esp
  41b778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b779:	jb     0x41b71d
  41b77b:	push   ds
  41b77c:	scas   al,BYTE PTR es:[edi]
  41b77d:	test   al,0x27
  41b77f:	popf   
  41b780:	mov    al,0xe6
  41b782:	fwait
  41b783:	and    ebx,DWORD PTR es:[esi-0x3c]
  41b787:	push   cs
  41b788:	jnp    0x41b7e3
  41b78a:	mov    al,0xdb
  41b78c:	xchg   DWORD PTR [edi+ebp*8],esi
  41b78f:	out    0xcb,al
  41b791:	out    0x6d,eax
  41b793:	outs   dx,DWORD PTR ds:[esi]
  41b794:	es add eax,0xba3d8846
  41b79a:	punpckhdq mm5,QWORD PTR [esp+edi*8]
  41b79e:	mov    ecx,0xa230aa87
  41b7a3:	fcmovu st,st(3)
  41b7a5:	fidivr WORD PTR [esi+0xb]
  41b7a8:	sbb    dh,BYTE PTR [ebx-0x1fe67dd]
  41b7ae:	sub    dl,ch
  41b7b0:	or     DWORD PTR [ecx-0x2f],esi
  41b7b3:	jmp    eax
  41b7b5:	(bad)  
  41b7b6:	out    0x8a,al
  41b7b8:	test   BYTE PTR [esi-0x44666a8b],0xb
  41b7bf:	sbb    BYTE PTR [eax-0x62],cl
  41b7c2:	jl     0x41b7f2
  41b7c4:	std    
  41b7c5:	mov    eax,ds:0x6170ffef
  41b7ca:	mov    DWORD PTR [eax+0x5],ecx
  41b7cd:	adc    BYTE PTR [edi-0x56],cl
  41b7d0:	inc    esp
  41b7d1:	mov    ecx,0xbeb8a7a0
  41b7d6:	scas   eax,DWORD PTR es:[edi]
  41b7d7:	lock mov ebx,0x10f7ebd5
  41b7dd:	out    dx,al
  41b7de:	xchg   ebx,eax
  41b7df:	mov    ch,0x37
  41b7e1:	or     al,0xf0
  41b7e3:	or     esp,0xffffffbe
  41b7e6:	(bad)  
  41b7e7:	dec    ecx
  41b7e8:	and    cl,al
  41b7ea:	out    dx,eax
  41b7eb:	jmp    0x41b7b7
  41b7ed:	das    
  41b7ee:	js     0x41b848
  41b7f0:	xor    DWORD PTR [edi],esi
  41b7f2:	add    ebp,DWORD PTR [ebx]
  41b7f4:	ror    BYTE PTR [ebx+0xfa1eed],0xea
  41b7fb:	fnstenv [ecx+0x210b079]
  41b801:	sub    dh,dh
  41b803:	or     al,al
  41b805:	mov    ebx,DWORD PTR [ecx-0x795c06ec]
  41b80b:	fwait
  41b80c:	cmp    DWORD PTR [esi-0x14c9b7c0],0x5bed817c
  41b816:	(bad)
  41b81b:	js     0x41b7b7
  41b81d:	ins    DWORD PTR es:[edi],dx
  41b81e:	sbb    eax,esi
  41b820:	sahf   
  41b821:	or     BYTE PTR [edi+0x23],ah
  41b824:	mov    ds:0xdf6eac46,eax
  41b829:	xchg   ebx,eax
  41b82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b82b:	mov    al,ds:0xda709496
  41b830:	outs   dx,BYTE PTR ds:[esi]
  41b831:	jmp    0x37654beb
  41b836:	push   0xffffffdc
  41b838:	dec    eax
  41b839:	loope  0x41b886
  41b83b:	sbb    dl,al
  41b83d:	xor    ecx,DWORD PTR [ebp+0x7d8e]
	...
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	pop    ebx
  41b8c1:	loop   0x41b844
  41b8c3:	cmp    DWORD PTR [edi+0x29],0xf50001
  41b8ca:	add    BYTE PTR [eax],al
  41b8cc:	lods   al,BYTE PTR ds:[esi]
  41b8cd:	pop    esi
  41b8ce:	cmp    edx,DWORD PTR [edx+0x74]
  41b8d1:	dec    esp
  41b8d2:	dec    ebx
  41b8d3:	clc    
  41b8d4:	jns    0x41b86e
  41b8d6:	pop    es
  41b8d7:	xchg   edi,eax
  41b8d8:	or     al,0x8c
  41b8da:	aad    0x6c
  41b8dc:	jb     0x41b8d9
  41b8de:	data16 jecxz 0x41b90b
  41b8e1:	(bad)  
  41b8e2:	les    ebx,FWORD PTR [ebx]
  41b8e4:	ja     0x41b8b2
  41b8e6:	inc    eax
  41b8e7:	and    dh,al
  41b8e9:	out    dx,eax
  41b8ea:	mov    edi,0x77b967b7
  41b8ef:	or     eax,DWORD PTR [edx]
  41b8f1:	xchg   edi,eax
  41b8f2:	inc    ebp
  41b8f3:	xor    bh,dh
  41b8f5:	xchg   esp,eax
  41b8f6:	inc    edi
  41b8f7:	(bad)  
  41b8f8:	in     eax,0xf5
  41b8fa:	inc    edi
  41b8fb:	les    edi,FWORD PTR [ecx+0xce5de8c]
  41b901:	sti    
  41b902:	sub    eax,0x96d43857
  41b907:	fist   DWORD PTR [edx-0x31783dad]
  41b90d:	loop   0x41b8ad
  41b90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b910:	stos   DWORD PTR es:[edi],eax
  41b911:	inc    edi
  41b912:	push   es
  41b913:	arpl   ax,di
  41b915:	shl    BYTE PTR [ebx+0x33],0xc5
  41b919:	dec    esp
  41b91a:	adc    BYTE PTR [ebx+0x63],ah
  41b91d:	repnz mov dh,0x92
  41b920:	mov    ch,0x14
  41b922:	mov    eax,ds:0xd26f0bcf
  41b927:	mov    cl,0xc4
  41b929:	sbb    bl,BYTE PTR [ebp+0x2fd4ca77]
  41b92f:	sahf   
  41b930:	bound  esp,QWORD PTR [esi]
  41b932:	iret   
  41b933:	repz (bad) 
  41b936:	sbb    eax,0xcfd30854
  41b93b:	push   ebx
  41b93c:	sbb    al,0x20
  41b93e:	in     al,0x1d
  41b940:	loope  0x41b970
  41b942:	sub    al,0xed
  41b944:	es sub eax,0x7a2cd8bc
  41b94a:	icebp  
  41b94b:	iret   
  41b94c:	xchg   BYTE PTR [ecx],dh
  41b94e:	fisttp DWORD PTR ds:0xbe4ff2dc
  41b954:	cmp    al,0xa5
  41b956:	xor    DWORD PTR [ebp-0x6a],ebx
  41b959:	pop    ecx
  41b95a:	aad    0x42
  41b95c:	pop    ecx
  41b95d:	xchg   ebx,eax
  41b95e:	mov    esi,0xca2bb529
  41b963:	jl     0x41b971
  41b965:	inc    eax
  41b966:	add    esp,esp
  41b968:	or     al,0xf7
  41b96a:	shl    BYTE PTR [ecx-0x25],cl
  41b96d:	gs scas eax,DWORD PTR es:[edi]
  41b96f:	xor    eax,ebp
  41b971:	xor    bh,dl
  41b973:	xchg   esi,eax
  41b974:	mov    ebx,0x6e99ed1b
  41b979:	inc    esi
  41b97a:	sbb    BYTE PTR [esi],0x9c
  41b97d:	not    DWORD PTR [edi-0x21]
  41b980:	test   al,0x89
  41b982:	int    0x64
  41b984:	inc    esi
  41b985:	dec    esi
  41b986:	mov    dh,0x1a
  41b988:	sub    eax,0xa32f8a5a
  41b98d:	sub    eax,0xc373d49f
  41b992:	jb     0x41b9c0
  41b994:	xor    DWORD PTR [eax+0x0],ecx
  41b997:	push   eax
  41b998:	sar    DWORD PTR [ebp-0x36],1
  41b99b:	mov    dl,0x30
  41b99d:	enter  0x8779,0xb6
  41b9a1:	push   edx
  41b9a2:	aas    
  41b9a3:	aas    
  41b9a4:	retfw  0xfba1
  41b9a8:	ss sahf 
  41b9aa:	mov    eax,0x1de007f4
  41b9af:	test   eax,0xfaf63d1e
  41b9b4:	jno    0x41b990
  41b9b6:	mov    eax,0x2e718302
  41b9bb:	push   ebp
  41b9bc:	cli    
  41b9bd:	outs   dx,DWORD PTR ds:[esi]
  41b9be:	xchg   ebx,eax
  41b9bf:	leave  
  41b9c0:	xchg   esi,eax
	...
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	cmp    edx,DWORD PTR [eax+0x2a741191]
  41ba46:	add    DWORD PTR [eax],eax
  41ba48:	cmc    
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    ah,dl
  41ba4d:	mov    edx,0x38299a24
  41ba52:	jbe    0x41ba0e
  41ba54:	mov    dh,dl
  41ba56:	mov    ebx,0x630ca803
  41ba5b:	(bad)  
  41ba5c:	jmp    0x9f8b4cd2
  41ba61:	mov    esp,0xdc5e78ea
  41ba66:	fnstcw WORD PTR [eax]
  41ba68:	adc    eax,0x2e
  41ba6b:	mov    esp,0xe0dfe9a3
  41ba70:	popa   
  41ba71:	add    DWORD PTR [edi+eax*2-0x1ac79d14],eax
  41ba78:	push   edi
  41ba79:	mov    bl,0xc8
  41ba7b:	dec    edi
  41ba7c:	lds    edx,FWORD PTR [ecx-0x9960fc9]
  41ba82:	or     eax,0x4e699001
  41ba87:	sbb    ebx,DWORD PTR [edi+0x4524236b]
  41ba8d:	(bad)  
  41ba8e:	lahf   
  41ba8f:	fs jne 0x41ba4d
  41ba92:	(bad)  
  41ba93:	ja     0x41babd
  41ba95:	mov    esp,0x80f766d2
  41ba9a:	dec    ecx
  41ba9b:	popf   
  41ba9c:	cld    
  41ba9d:	inc    eax
  41ba9e:	outs   dx,BYTE PTR ds:[esi]
  41baa0:	and    eax,0xce1c02f2
  41baa5:	stos   BYTE PTR es:[edi],al
  41baa6:	out    dx,al
  41baa7:	popa   
  41baa8:	fadd   DWORD PTR [ecx]
  41baaa:	mov    bl,0xd7
  41baac:	pop    ds
  41baad:	enter  0xe7ba,0x87
  41bab1:	or     dh,ch
  41bab3:	lods   eax,DWORD PTR ds:[esi]
  41bab4:	loop   0x41badc
  41bab6:	out    0xc3,al
  41bab8:	jg     0x41bae3
  41baba:	out    dx,eax
  41babb:	aas    
  41babc:	in     al,0xe5
  41babe:	or     eax,0xd552058e
  41bac3:	enter  0x4a74,0xec
  41bac7:	or     BYTE PTR [eax],bh
  41bac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baca:	in     al,dx
  41bacb:	pop    eax
  41bacc:	push   0x35283b6c
  41bad1:	ins    DWORD PTR es:[edi],dx
  41bad2:	pop    es
  41bad3:	and    ah,cl
  41bad5:	test   BYTE PTR [edi-0x5a5596b7],al
  41badb:	push   ecx
  41badc:	jae    0x41bb10
  41bade:	sub    al,0xe7
  41bae0:	lock retf 
  41bae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae3:	outs   dx,DWORD PTR ds:[esi]
  41bae4:	bound  esi,QWORD PTR [edi+0x1f]
  41bae7:	popa   
  41bae8:	mov    ah,0x22
  41baea:	jne    0x41bb19
  41baec:	dec    esp
  41baed:	out    0xd1,al
  41baef:	lea    ebx,[eax+0x3d]
  41baf2:	push   0xa24433eb
  41baf7:	mov    al,ds:0xacaf6b7d
  41bafc:	pop    edx
  41bafd:	jg     0x41bae3
  41baff:	and    DWORD PTR [eax+0x4a],edi
  41bb02:	test   DWORD PTR [eax],0x4320d2ef
  41bb08:	sahf   
  41bb09:	js     0x41bb80
  41bb0b:	mov    cl,0x60
  41bb0d:	mov    ebx,0x300f18ff
  41bb12:	cmp    DWORD PTR [esi+ebp*1],0x62c7ad23
  41bb19:	not    cl
  41bb1b:	out    0x46,al
  41bb1d:	iret   
  41bb1e:	xchg   ecx,eax
  41bb1f:	pop    ebx
  41bb20:	test   eax,0xd340c087
  41bb25:	test   DWORD PTR [ecx-0x7adebd01],0x37841248
  41bb2f:	retf   0xf965
  41bb32:	leave  
  41bb33:	xchg   esp,eax
  41bb34:	out    dx,eax
  41bb35:	inc    esi
  41bb36:	add    DWORD PTR [eax-0x63],ebp
  41bb39:	aad    0xe9
  41bb3b:	push   cs
  41bb3c:	push   ecx
  41bb3d:	fsub   QWORD PTR [ebx+0x55]
  41bb40:	daa    
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	daa    
  41bbc1:	xlat   BYTE PTR ds:[ebx]
  41bbc2:	sti    
  41bbc3:	imul   ebp,DWORD PTR ds:[ebx],0xf50001
  41bbca:	add    BYTE PTR [eax],al
  41bbcc:	or     DWORD PTR [ebp+0x1f],edx
  41bbcf:	push   edx
  41bbd0:	test   BYTE PTR [esi+eiz*8],cl
  41bbd3:	aas    
  41bbd4:	dec    edi
  41bbd5:	adc    al,0xe7
  41bbd7:	pshufw mm7,QWORD PTR [ebx-0xd],0xb9
  41bbdc:	jmp    0x41bbec
  41bbde:	sbb    DWORD PTR [ebx+0x6c638428],esi
  41bbe4:	stos   BYTE PTR es:[edi],al
  41bbe5:	in     eax,dx
  41bbe6:	test   al,0x5d
  41bbe8:	pop    ecx
  41bbe9:	sub    BYTE PTR [eax+ebp*1],bl
  41bbec:	ins    DWORD PTR es:[edi],dx
  41bbed:	xchg   BYTE PTR [edx],dl
  41bbef:	rol    DWORD PTR [eax+0x55],0x11
  41bbf3:	in     al,dx
  41bbf4:	mov    esp,DWORD PTR [eax+ebp*1+0x10]
  41bbf8:	dec    ecx
  41bbf9:	(bad)  
  41bbfa:	jno    0x41bc6e
  41bbfc:	hlt    
  41bbfd:	push   ecx
  41bbfe:	mov    bh,bl
  41bc00:	fldcw  WORD PTR [edi-0x1b]
  41bc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc04:	je     0x41bc5b
  41bc06:	jo     0x41bbf3
  41bc08:	cmp    bl,cl
  41bc0a:	sub    al,0xb
  41bc0c:	aad    0x49
  41bc0e:	add    BYTE PTR [esi-0x3a2a8774],al
  41bc14:	mov    ds:0x129f8183,eax
  41bc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1b:	jmp    0x18d7a87c
  41bc20:	aad    0x50
  41bc22:	out    0xbb,al
  41bc24:	ror    BYTE PTR [esi-0x54],1
  41bc27:	fwait
  41bc28:	inc    ebx
  41bc29:	in     al,dx
  41bc2a:	in     eax,dx
  41bc2b:	mov    cl,BYTE PTR [edx]
  41bc2d:	push   0xfe311241
  41bc32:	ss add al,dl
  41bc35:	inc    edx
  41bc36:	retf   
  41bc37:	xchg   ecx,eax
  41bc38:	xor    al,0x52
  41bc3a:	retf   
  41bc3b:	add    BYTE PTR [ebx+0x2c23eebb],0xc1
  41bc42:	ja     0x41bc95
  41bc44:	mov    ecx,0x6896846f
  41bc49:	(bad)  
  41bc4a:	call   0x4d36:0xd8a988d6
  41bc51:	push   edi
  41bc52:	cmp    al,0xbd
  41bc54:	mov    al,ds:0xe533040d
  41bc59:	lods   eax,DWORD PTR ds:[esi]
  41bc5a:	scas   al,BYTE PTR es:[edi]
  41bc5b:	cmpps  xmm1,XMMWORD PTR [esi],0x4f
  41bc5f:	sub    BYTE PTR [bx+si],dl
  41bc62:	dec    eax
  41bc63:	cdq    
  41bc64:	xchg   edi,eax
  41bc65:	(bad)  
  41bc66:	addr16 push eax
  41bc68:	(bad)  [edx+0x71e9a038]
  41bc6e:	arpl   WORD PTR [ebx+0x0],di
  41bc71:	push   esi
  41bc72:	ins    DWORD PTR es:[edi],dx
  41bc73:	xchg   edx,eax
  41bc74:	ja     0x41bcca
  41bc76:	iret   
  41bc77:	adc    esp,DWORD PTR [ecx]
  41bc79:	les    edi,FWORD PTR [ebx+0x72cefc6e]
  41bc7f:	adc    BYTE PTR [ebx+edi*4+0x1306b969],bl
  41bc86:	mov    al,0x4a
  41bc88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc89:	lods   eax,DWORD PTR ds:[esi]
  41bc8a:	adc    ecx,DWORD PTR [edx]
  41bc8c:	jb     0x41bc9b
  41bc8e:	push   es
  41bc8f:	dec    ebx
  41bc90:	outs   dx,DWORD PTR ds:[esi]
  41bc91:	lahf   
  41bc92:	sub    al,0xec
  41bc94:	mov    cl,0x40
  41bc96:	xor    eax,0x2f40ba2a
  41bc9b:	out    dx,ax
  41bc9d:	icebp  
  41bc9e:	jmp    0x41bd0c
  41bca0:	xor    eax,0xa55f8974
  41bca5:	addr16 push esi
  41bca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bca8:	adc    edi,ebp
  41bcaa:	js     0x41bd0c
  41bcac:	jns    0x41bcb2
  41bcae:	push   ebp
  41bcaf:	(bad)  
  41bcb0:	fst    QWORD PTR [eax+edx*1+0x6c]
  41bcb4:	add    cl,BYTE PTR [ecx]
  41bcb6:	xchg   edx,eax
  41bcb7:	int3   
  41bcb8:	xchg   edi,eax
  41bcb9:	repz jecxz 0x41bd33
  41bcbc:	fmul   DWORD PTR [ebp+0x4b06eb]
	...
  41bd32:	add    BYTE PTR [eax],al
  41bd34:	push   ebp
  41bd35:	clc    
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x3bf1c9a
  41bd41:	lods   al,BYTE PTR ds:[esi]
  41bd42:	lea    eax,[edi]
  41bd44:	pop    esi
  41bd45:	sub    al,0x1
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    BYTE PTR [ebx],bl
  41bd4d:	iret   
  41bd4e:	dec    edx
  41bd4f:	repz jnp 0x41bd4d
  41bd52:	add    eax,0xceaa7b3b
  41bd57:	popf   
  41bd58:	add    ecx,edi
  41bd5a:	fidiv  DWORD PTR [esi]
  41bd5c:	sub    eax,0xf11e9f5d
  41bd61:	xor    eax,0x3dc6ea80
  41bd66:	aad    0xd4
  41bd68:	cmp    DWORD PTR [edi+0x2de31c21],eax
  41bd6e:	adc    al,BYTE PTR [edi]
  41bd70:	test   al,0xa4
  41bd72:	mov    cl,0x82
  41bd74:	jmp    0x41bd3c
  41bd76:	into   
  41bd77:	lods   al,BYTE PTR ds:[esi]
  41bd78:	push   ebp
  41bd79:	aam    0x2c
  41bd7b:	std    
  41bd7c:	mov    ?,WORD PTR [edx-0x75]
  41bd7f:	push   esp
  41bd80:	jnp    0x41bd44
  41bd82:	add    ah,BYTE PTR [ecx+0x1f]
  41bd85:	retf   
  41bd86:	stc    
  41bd87:	not    DWORD PTR [esi]
  41bd89:	inc    ecx
  41bd8a:	fucomp st(7)
  41bd8c:	fistp  QWORD PTR [eax+0x6b919bb1]
  41bd92:	push   eax
  41bd93:	sahf   
  41bd94:	push   ss
  41bd95:	fnsave [ebx]
  41bd97:	pop    ebp
  41bd98:	mov    edx,0x26541c5f
  41bd9d:	pop    edi
  41bd9e:	sbb    eax,0x51eeb7a
  41bda3:	or     ch,0xbf
  41bda6:	adc    edx,DWORD PTR [esi+0x1f7f5359]
  41bdac:	push   eax
  41bdad:	jbe    0x41bdb3
  41bdaf:	ds mov eax,0x43f41a9
  41bdb5:	mov    al,ds:0xb80b0700
  41bdba:	fdivp  st(3),st
  41bdbc:	inc    eax
  41bdbd:	pop    ds
  41bdbe:	push   edx
  41bdbf:	and    al,0xc3
  41bdc1:	sbb    BYTE PTR [eax],ah
  41bdc3:	out    0xdf,eax
  41bdc5:	fld    DWORD PTR [eax-0x8]
  41bdc8:	jge    0x41bdbf
  41bdca:	das    
  41bdcb:	test   BYTE PTR [eax+ebx*8+0x60],ah
  41bdcf:	pop    ss
  41bdd0:	jnp    0x41bdf5
  41bdd2:	inc    eax
  41bdd3:	pop    ds
  41bdd4:	cld    
  41bdd5:	rcr    BYTE PTR [esp+ebp*4-0x41],cl
  41bdd9:	jg     0x41bde4
  41bddb:	jmp    FWORD PTR [ecx+0x3a]
  41bdde:	loop   0x41bdc5
  41bde0:	cmp    ah,BYTE PTR [eax]
  41bde2:	in     eax,0xe4
  41bde4:	ins    DWORD PTR es:[edi],dx
  41bde5:	(bad)  
  41bde6:	cmp    eax,0x812c5478
  41bdeb:	call   0xa140:0xf5c33d3f
  41bdf2:	in     eax,0xec
  41bdf4:	nop
  41bdf5:	inc    ecx
  41bdf6:	jmp    0x48a98f9d
  41bdfb:	and    ah,BYTE PTR [eax+eax*4+0x80e5ba7]
  41be02:	pop    ecx
  41be03:	mov    eax,ds:0x3712e4b9
  41be08:	push   esi
  41be09:	imul   ebx,DWORD PTR [esi],0x9597c3ed
  41be0f:	test   eax,0x7cb5cc43
  41be14:	mov    ds:0x23e6b843,al
  41be19:	loopne 0x41be5c
  41be1b:	fcomi  st,st(1)
  41be1d:	inc    ecx
  41be1e:	mov    esi,0x69626203
  41be23:	aad    0xa8
  41be25:	stos   BYTE PTR es:[edi],al
  41be26:	mov    ch,0xad
  41be28:	push   ebx
  41be29:	loopne 0x41bdcf
  41be2b:	mov    ch,0xdf
  41be2d:	mov    bl,0xaf
  41be2f:	test   al,0x5f
  41be31:	js     0x41bdb3
  41be33:	out    0xaf,eax
  41be35:	mov    dl,0xe
  41be37:	sbb    eax,0xb1839bc4
  41be3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be3d:	xor    DWORD PTR [ebx],eax
  41be3f:	or     BYTE PTR [esi+0x0],dh
	...
  41beb1:	add    BYTE PTR [eax],al
  41beb3:	add    ch,al
  41beb5:	stc    
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	sete   BYTE PTR [edx+0x2d53bb84]
  41bec6:	add    DWORD PTR [eax],eax
  41bec8:	cmc    
  41bec9:	add    BYTE PTR [eax],al
  41becb:	add    BYTE PTR [ecx+ebx*4-0x40b388d2],ah
  41bed2:	cmc    
  41bed3:	dec    ebp
  41bed4:	sar    esp,1
  41bed6:	or     al,0x88
  41bed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bed9:	jl     0xac56fa3e
  41bedf:	(bad)  
  41bee0:	stos   DWORD PTR es:[edi],eax
  41bee1:	inc    edi
  41bee2:	nop
  41bee3:	mov    edx,0x281a873a
  41bee8:	mov    ds:0x76d78227,eax
  41beed:	enter  0x7b37,0x11
  41bef1:	sbb    ch,BYTE PTR [ebx+0x2d20308]
  41bef7:	fwait
  41bef8:	out    dx,eax
  41bef9:	pop    ds
  41befa:	popf   
  41befb:	xchg   edi,eax
  41befc:	and    al,0xa5
  41befe:	mov    al,ds:0x66744916
  41bf03:	neg    DWORD PTR [edi+0x1a]
  41bf06:	daa    
  41bf07:	or     DWORD PTR [esi+0x4ef2744c],esi
  41bf0d:	das    
  41bf0e:	push   edi
  41bf0f:	cwde   
  41bf10:	out    0xdf,al
  41bf12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf13:	and    BYTE PTR cs:[edx],0xa4
  41bf17:	push   ebx
  41bf18:	out    0xa,eax
  41bf1a:	jg     0x41bf7c
  41bf1c:	call   0x1830:0x20677c1a
  41bf23:	ss sub al,0x21
  41bf26:	out    0x96,eax
  41bf28:	outs   dx,DWORD PTR ds:[esi]
  41bf29:	jns    0x41beb8
  41bf2b:	dec    eax
  41bf2c:	inc    esp
  41bf2d:	jecxz  0x41bed8
  41bf2f:	push   edx
  41bf30:	xchg   DWORD PTR [ecx-0x7d],edx
  41bf33:	mov    WORD PTR [ebx],ds
  41bf35:	pop    ebx
  41bf36:	push   ss
  41bf37:	cdq    
  41bf38:	xchg   ecx,eax
  41bf39:	and    ecx,eax
  41bf3b:	mov    al,0x22
  41bf3d:	mov    edx,DWORD PTR [eax-0x4d]
  41bf40:	outs   dx,DWORD PTR ds:[esi]
  41bf41:	not    edx
  41bf43:	or     ebp,eax
  41bf45:	sub    al,0xc8
  41bf47:	adc    BYTE PTR [ecx+0x2c],dh
  41bf4a:	rol    BYTE PTR [edx],1
  41bf4c:	nop
  41bf4d:	mov    al,ds:0x2d9ec07a
  41bf52:	inc    esp
  41bf53:	(bad)  
  41bf54:	mov    cl,0xf2
  41bf56:	mov    gs,WORD PTR [ecx]
  41bf58:	add    BYTE PTR [eax+ebx*1],dl
  41bf5b:	cdq    
  41bf5c:	bound  ebx,QWORD PTR [ecx-0x65]
  41bf5f:	pop    edx
  41bf60:	adc    dh,al
  41bf62:	imul   ebx,DWORD PTR [edx+0x1967d9cd],0x29
  41bf69:	cli    
  41bf6a:	loope  0x41bfaa
  41bf6c:	push   ecx
  41bf6d:	mov    ebx,0x9dffeee4
  41bf72:	jae    0x41bf96
  41bf74:	rol    BYTE PTR [eax+edi*8-0x51cfce4f],0x5d
  41bf7c:	xlat   BYTE PTR ds:[ebx]
  41bf7d:	inc    ebx
  41bf7e:	sub    edx,ebx
  41bf80:	dec    BYTE PTR [esi-0x65260925]
  41bf86:	and    BYTE PTR [eax+0x6526ecd8],cl
  41bf8c:	mov    ebx,0xb7ece7cb
  41bf91:	cmp    DWORD PTR [esp+ebx*8+0x1af563d9],eax
  41bf98:	(bad)  
  41bf99:	push   ebp
  41bf9a:	bound  ebp,QWORD PTR ss:[ecx]
  41bf9d:	push   cs
  41bf9e:	(bad)  
  41bf9f:	and    al,0x98
  41bfa1:	or     BYTE PTR [esi],al
  41bfa3:	fst    QWORD PTR [esp+ecx*8+0x1140da9b]
  41bfaa:	leave  
  41bfab:	in     eax,dx
  41bfac:	jnp    0x41bff3
  41bfae:	push   ebp
  41bfaf:	out    0x99,al
  41bfb1:	(bad)  
  41bfb2:	pop    ds
  41bfb3:	jo     0x41bf99
  41bfb5:	push   0xf2c09303
  41bfba:	repz push 0x25e732bf
  41bfc0:	retf   
	...
  41c031:	add    BYTE PTR [eax],al
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x4cbb9a81]
  41c041:	push   esi
  41c042:	lods   eax,DWORD PTR ds:[esi]
  41c043:	test   BYTE PTR [eax+0x2e],cl
  41c046:	add    DWORD PTR [eax],eax
  41c048:	cmc    
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    BYTE PTR [ebx],al
  41c04d:	jbe    0x41bfd6
  41c04f:	repz push ecx
  41c051:	and    ebp,0xa2ba0cb6
  41c057:	test   BYTE PTR [eax],0xe7
  41c05a:	sti    
  41c05b:	mov    eax,0xd40310ad
  41c060:	mov    bh,0xa5
  41c062:	mov    dh,0x6c
  41c064:	sub    ah,BYTE PTR [ecx-0x61]
  41c067:	xchg   ecx,eax
  41c068:	outs   dx,DWORD PTR ds:[esi]
  41c069:	aad    0x89
  41c06b:	(bad)  
  41c06c:	push   ds
  41c06d:	cmp    al,0xb5
  41c06f:	sub    al,0x5d
  41c071:	adc    edx,DWORD PTR [edi-0x4b60c4f4]
  41c077:	pop    es
  41c078:	hlt    
  41c079:	cdq    
  41c07a:	sbb    eax,0xa6be3d7d
  41c07f:	and    bh,ch
  41c081:	hlt    
  41c082:	and    ch,bh
  41c084:	jp     0x41c08e
  41c086:	push   ebx
  41c087:	push   ebp
  41c088:	ror    BYTE PTR [ecx-0xf],1
  41c08b:	mov    ds:0x7859b5b2,al
  41c090:	aaa    
  41c091:	inc    edi
  41c092:	mov    ecx,0xb532825e
  41c097:	push   eax
  41c098:	xor    cl,BYTE PTR [eax+edx*1]
  41c09b:	mov    eax,ds:0x6d013220
  41c0a0:	retf   
  41c0a1:	xchg   ecx,eax
  41c0a2:	daa    
  41c0a3:	lea    edx,gs:[edx-0x1260d187]
  41c0aa:	test   eax,0xecb6e852
  41c0af:	not    BYTE PTR [ebx+0x3256da7f]
  41c0b5:	xchg   esi,eax
  41c0b6:	cs push 0xffffffeb
  41c0b9:	loopne 0x41c0b4
  41c0bb:	sbb    DWORD PTR [ebx],ecx
  41c0bd:	or     dl,ah
  41c0bf:	mov    ebx,0xfd3d8b44
  41c0c4:	and    eax,0x3f1d8705
  41c0c9:	popf   
  41c0ca:	or     BYTE PTR [ebx+0x7199bfcc],al
  41c0d0:	fisubr DWORD PTR [edx+0x66acefba]
  41c0d6:	dec    ebp
  41c0d7:	cmp    al,0xd0
  41c0d9:	addr16 pop esp
  41c0db:	and    dl,dl
  41c0dd:	icebp  
  41c0de:	shr    BYTE PTR [ebp-0x4d33c70f],0x44
  41c0e5:	pushf  
  41c0e6:	push   esi
  41c0e7:	psubsw mm2,QWORD PTR [eax-0x33d12250]
  41c0ee:	dec    ecx
  41c0ef:	rcl    DWORD PTR [eax-0x6cfd5f01],1
  41c0f5:	adc    BYTE PTR [esi],dl
  41c0f7:	inc    eax
  41c0f8:	sbb    BYTE PTR [edx-0x4],0x8b
  41c0fc:	add    dl,dl
  41c0fe:	lahf   
  41c0ff:	cwde   
  41c100:	lahf   
  41c101:	loope  0x41c0ca
  41c103:	mov    dh,0x8e
  41c105:	call   0xf6491a2c
  41c10a:	popa   
  41c10b:	pop    ss
  41c10c:	inc    eax
  41c10d:	lahf   
  41c10e:	stc    
  41c10f:	jmp    0xb75056f4
  41c114:	inc    ebx
  41c115:	in     eax,0x8d
  41c117:	pop    edx
  41c118:	pop    ebp
  41c119:	xor    esp,esi
  41c11b:	jo     0x41c17a
  41c11d:	add    al,BYTE PTR [eax-0x18664e7b]
  41c123:	xchg   edi,eax
  41c124:	adc    ecx,eax
  41c126:	mov    bh,0xc7
  41c128:	add    eax,0xd4de1e56
  41c12d:	add    eax,edx
  41c12f:	(bad)
  41c133:	jbe    0x41c161
  41c135:	xor    al,0xe5
  41c137:	jl     0x41c120
  41c139:	cli    
  41c13a:	or     BYTE PTR [ebp+0x25],al
  41c13d:	out    dx,al
  41c13e:	mov    ds:0x111f,eax
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0xc20fccdc
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [ebx],bl
  41c1cd:	scas   al,BYTE PTR es:[edi]
  41c1ce:	inc    ebp
  41c1cf:	xor    ecx,ebp
  41c1d1:	ds in  eax,0x9a
  41c1d4:	jl     0x41c21f
  41c1d6:	fisub  DWORD PTR [edx]
  41c1d8:	les    esp,FWORD PTR [ebp-0x5]
  41c1db:	xchg   DWORD PTR [ebx-0x32],ebp
  41c1de:	fimul  WORD PTR [ebx+0x17611ac]
  41c1e4:	inc    esi
  41c1e5:	loopne 0x41c266
  41c1e7:	mov    ah,0xbd
  41c1e9:	loope  0x41c23e
  41c1eb:	les    esp,FWORD PTR [ebx-0x3ae9b695]
  41c1f1:	inc    edi
  41c1f2:	or     BYTE PTR [edx+0x37bd93ef],bl
  41c1f8:	arpl   WORD PTR [edx-0x63],bp
  41c1fb:	mov    ds:0x32a39e68,eax
  41c200:	inc    esp
  41c201:	fisub  WORD PTR [esp+eax*4]
  41c204:	call   ecx
  41c206:	pop    ebx
  41c207:	push   eax
  41c208:	icebp  
  41c209:	data16 mov dh,BYTE PTR [eax+0x78e7acb8]
  41c210:	sub    al,0x5b
  41c212:	push   0xfffffffe
  41c214:	push   esi
  41c215:	cmc    
  41c216:	push   0x6a
  41c218:	not    DWORD PTR [esi-0x365bd5a4]
  41c21e:	add    dh,cl
  41c220:	mov    ah,0x64
  41c222:	cmp    dl,bh
  41c224:	dec    edi
  41c225:	sub    dh,BYTE PTR [eax]
  41c227:	test   eax,0x385b8ec5
  41c22c:	push   edx
  41c22d:	mov    dh,0x95
  41c22f:	arpl   WORD PTR [eax-0xe],bp
  41c232:	loop   0x41c281
  41c234:	aaa    
  41c235:	jmp    0x2acba440
  41c23a:	pop    ss
  41c23b:	call   0x69e0fec8
  41c240:	shr    dl,cl
  41c242:	mov    edi,0x82892d90
  41c247:	mov    BYTE PTR [esi-0x4e],bh
  41c24a:	aad    0xc5
  41c24c:	push   esi
  41c24d:	dec    ebx
  41c24e:	dec    esi
  41c24f:	jbe    0x41c285
  41c251:	fwait
  41c252:	inc    esi
  41c253:	(bad)
  41c256:	xchg   ecx,eax
  41c257:	cs test ch,ch
  41c25a:	and    BYTE PTR [esi],dh
  41c25c:	pop    ecx
  41c25d:	sub    ebx,eax
  41c25f:	cmp    eax,0xfeeb3f82
  41c264:	cwde   
  41c265:	arpl   WORD PTR [ecx+0x673286c5],ax
  41c26b:	clc    
  41c26c:	sbb    al,0xf6
  41c26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c26f:	dec    ebx
  41c270:	mov    al,ds:0xc8454d60
  41c275:	pop    ecx
  41c276:	scas   eax,DWORD PTR es:[edi]
  41c277:	lea    ecx,[eax]
  41c279:	xchg   esp,eax
  41c27a:	xchg   edx,eax
  41c27b:	test   eax,0x3584f13e
  41c280:	movhps QWORD PTR ds:0x2e3fce0,xmm4
  41c287:	or     edi,ebx
  41c289:	mov    WORD PTR [ebx-0x42717f0b],?
  41c28f:	std    
  41c290:	(bad)  
  41c291:	adc    WORD PTR [eax+0x397085f],sp
  41c298:	xchg   ecx,eax
  41c299:	push   edx
  41c29a:	scas   al,BYTE PTR es:[edi]
  41c29b:	mov    cs,WORD PTR [ebx-0xf]
  41c29e:	ret    0x80bc
  41c2a1:	or     eax,0x36416fe3
  41c2a6:	scas   eax,DWORD PTR es:[edi]
  41c2a7:	sub    ecx,esi
  41c2a9:	xchg   sp,ax
  41c2ab:	add    DWORD PTR [esi-0x71],0x5e5363b0
  41c2b2:	push   0x2d
  41c2b4:	loope  0x41c32d
  41c2b6:	loopne 0x41c313
  41c2b8:	jmp    0xd1ae45c0
  41c2bd:	mov    cs,ebx
  41c2bf:	fsubr  QWORD PTR ds:0x0
	...
  41c331:	add    BYTE PTR [eax],al
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	cmp    bh,dl
  41c342:	cmc    
  41c343:	pop    edi
  41c344:	xor    dh,BYTE PTR [eax]
  41c346:	add    DWORD PTR [eax],eax
  41c348:	cmc    
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [esp+ecx*8],ch
  41c34e:	xchg   ebp,eax
  41c34f:	push   edx
  41c350:	xchg   ebx,eax
  41c351:	(bad)  
  41c352:	lds    esi,FWORD PTR [ebx]
  41c354:	adc    eax,ebx
  41c356:	pop    ebx
  41c357:	shl    BYTE PTR [eax-0x52],0xf4
  41c35b:	mov    ch,BYTE PTR [eax-0xf8349c9]
  41c361:	xchg   edi,eax
  41c362:	cli    
  41c363:	add    DWORD PTR [edx],ecx
  41c365:	ja     0x41c378
  41c367:	jbe    0x41c308
  41c369:	xchg   ebx,eax
  41c36a:	das    
  41c36b:	xchg   esi,eax
  41c36c:	cli    
  41c36d:	push   0x2a
  41c36f:	xchg   edi,eax
  41c370:	test   DWORD PTR [ecx],0x76479a38
  41c376:	sub    edi,ebp
  41c378:	rol    edx,1
  41c37a:	aad    0x3c
  41c37c:	xor    DWORD PTR [edx-0x2d],esp
  41c37f:	lods   eax,DWORD PTR ds:[esi]
  41c380:	pop    edx
  41c381:	mov    ecx,0xfca110be
  41c386:	in     al,dx
  41c387:	xor    al,0xe2
  41c389:	xchg   ebp,eax
  41c38a:	jge    0x41c3b4
  41c38c:	(bad)  
  41c38d:	cli    
  41c38e:	and    ebp,edi
  41c390:	int    0x9f
  41c392:	sti    
  41c393:	xchg   edi,eax
  41c394:	xor    BYTE PTR ds:0xcbcb75e7,0x44
  41c39b:	xor    cl,BYTE PTR [edx-0x5a0cbec8]
  41c3a1:	stos   DWORD PTR es:[edi],eax
  41c3a2:	jmp    0x313e:0x474e9690
  41c3a9:	xchg   edx,ebp
  41c3ab:	mov    edi,0x6badcfad
  41c3b0:	(bad)  
  41c3b1:	outs   dx,DWORD PTR ds:[esi]
  41c3b2:	imul   eax,DWORD PTR [edi],0x12fa44a4
  41c3b8:	test   bh,bl
  41c3ba:	int    0x6c
  41c3bc:	(bad)
  41c3bf:	outs   dx,DWORD PTR ds:[esi]
  41c3c0:	push   0x33f31e5
  41c3c5:	pop    edx
  41c3c6:	imul   edi,DWORD PTR [edx-0x25682388],0x11
  41c3cd:	stc    
  41c3ce:	fwait
  41c3cf:	scas   al,BYTE PTR es:[edi]
  41c3d0:	scas   al,BYTE PTR es:[edi]
  41c3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3d2:	cmp    al,0x8
  41c3d4:	and    DWORD PTR [edx],esp
  41c3d6:	inc    eax
  41c3d7:	(bad)  
  41c3d9:	pop    esi
  41c3da:	sbb    al,0x9e
  41c3dc:	jle    0x41c361
  41c3de:	xor    eax,0xde6badd
  41c3e3:	mov    ds:0xef6192c4,al
  41c3e8:	mov    edi,0xa96fa372
  41c3ed:	add    al,0x15
  41c3ef:	sbb    dh,BYTE PTR [edi-0x20]
  41c3f2:	adc    BYTE PTR [ebx+0x3],bl
  41c3f5:	ds cwde 
  41c3f7:	fild   WORD PTR [esi]
  41c3f9:	xor    edx,ebp
  41c3fb:	sbb    DWORD PTR [edx+0x7b053add],ebx
  41c401:	xchg   ecx,eax
  41c402:	pusha  
  41c403:	in     eax,0x87
  41c405:	cld    
  41c406:	jno    0x41c423
  41c408:	mov    ch,0x87
  41c40a:	push   eax
  41c40b:	or     bh,BYTE PTR [ecx+0xa1ccc75]
  41c411:	inc    eax
  41c412:	mov    ch,0xb1
  41c414:	int3   
  41c415:	fisttp WORD PTR [edx]
  41c417:	or     DWORD PTR [esi+esi*1],esp
  41c41a:	into   
  41c41b:	xchg   BYTE PTR [ecx+edi*2-0x2c],ch
  41c41f:	adc    al,0x75
  41c421:	pop    ebx
  41c422:	pop    eax
  41c423:	out    0x1f,al
  41c425:	jnp    0x41c472
  41c427:	cdq    
  41c428:	mov    ch,0xb
  41c42a:	fs hlt 
  41c42c:	dec    edx
  41c42d:	and    DWORD PTR [ebx-0x768a105c],eax
  41c433:	lock test ax,0x8f0a
  41c438:	adc    ebx,DWORD PTR [edi-0x3f2f75a2]
  41c43e:	cmpxchg BYTE PTR [ebx],dh
	...
  41c4b1:	add    BYTE PTR [eax],al
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x79dff18c]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [esp+eiz*2-0x43],dh
  41c4cf:	dec    edi
  41c4d0:	sbb    bh,BYTE PTR ds:0x94cfe774
  41c4d6:	dec    edx
  41c4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d8:	mov    al,0x6c
  41c4da:	(bad)  
  41c4db:	mov    ds:0x530b2292,eax
  41c4e0:	push   esp
  41c4e1:	mov    esp,0xfc29c472
  41c4e6:	dec    edi
  41c4e7:	es push ebx
  41c4e9:	aam    0xb2
  41c4eb:	add    eax,0x15fecb31
  41c4f0:	add    eax,0xddea47ca
  41c4f5:	add    al,0x80
  41c4f7:	stos   DWORD PTR es:[edi],eax
  41c4f8:	inc    eax
  41c4f9:	push   edi
  41c4fa:	int3   
  41c4fb:	jbe    0x41c4a8
  41c4fd:	push   ebp
  41c4fe:	mov    ebx,0xf078ac7f
  41c503:	lea    esi,[eax-0x5d8fdab1]
  41c509:	inc    eax
  41c50a:	sbb    BYTE PTR [esi+0x7b],cl
  41c50d:	dec    DWORD PTR [edi-0x3a]
  41c510:	push   es
  41c511:	xchg   DWORD PTR [edi+0x574da0b1],edx
  41c517:	call   0x8433f295
  41c51c:	js     0x41c520
  41c51e:	ss sahf 
  41c520:	loopne 0x41c4fd
  41c522:	test   eax,0x11cd567d
  41c527:	test   al,0x3b
  41c529:	sub    DWORD PTR [edi],ebx
  41c52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52c:	jo     0x41c594
  41c52e:	adc    al,0x2b
  41c530:	mov    ch,0xb6
  41c532:	jmp    0x8ce18592
  41c537:	hlt    
  41c538:	jno    0x41c5b3
  41c53a:	call   0xc0daa100
  41c53f:	jge    0x41c5a1
  41c541:	add    esi,DWORD PTR [ebp-0x5864f52]
  41c547:	or     al,0x33
  41c549:	jg     0x41c5ac
  41c54b:	push   esp
  41c54c:	jns    0x41c4d7
  41c54e:	xor    eax,DWORD PTR [esi+ebx*4]
  41c551:	scas   eax,DWORD PTR es:[edi]
  41c552:	aaa    
  41c553:	fs jg  0x41c5c8
  41c556:	icebp  
  41c557:	push   edi
  41c558:	and    BYTE PTR gs:[ebx],ch
  41c55b:	push   0xbe20a069
  41c560:	sbb    al,BYTE PTR [edi-0x54da6150]
  41c566:	(bad)  
  41c567:	adc    esp,edx
  41c569:	mov    bl,0xb5
  41c56b:	lahf   
  41c56c:	adc    BYTE PTR [esi+0x2546a8bd],ah
  41c572:	rol    BYTE PTR [ecx-0x3d],1
  41c575:	jmp    0xe3e0:0xe03b4415
  41c57c:	dec    edi
  41c57d:	xchg   DWORD PTR [esi],eax
  41c57f:	mov    dh,BYTE PTR [edi-0x68e790ed]
  41c585:	es dec eax
  41c587:	int    0xaa
  41c589:	xlat   BYTE PTR ds:[ebx]
  41c58a:	popa   
  41c58b:	pop    ecx
  41c58c:	cmp    DWORD PTR [ebx-0x60f4dbe8],ecx
  41c592:	pushf  
  41c593:	into   
  41c594:	out    0x64,al
  41c596:	inc    ebp
  41c597:	adc    ebx,DWORD PTR [esi+ecx*8]
  41c59a:	sub    dl,BYTE PTR [eax]
  41c59c:	fs jo  0x41c536
  41c59f:	mov    bh,cl
  41c5a1:	lods   al,BYTE PTR ds:[esi]
  41c5a2:	pop    es
  41c5a3:	(bad)  
  41c5a4:	push   esi
  41c5a5:	mov    ds:0x4bf39ead,al
  41c5aa:	in     al,dx
  41c5ab:	xor    dh,BYTE PTR [ebp-0x52]
  41c5ae:	jmp    0xb33a4e15
  41c5b3:	pop    ecx
  41c5b4:	pop    ebx
  41c5b5:	(bad)  [ebp+0x33]
  41c5b8:	adc    BYTE PTR [ecx-0x3],ch
  41c5bb:	loope  0x41c584
  41c5bd:	adc    al,0x8e
  41c5bf:	inc    eax
  41c5c0:	mov    DWORD PTR [eax],0x0
	...
  41c632:	add    BYTE PTR [eax],al
  41c634:	test   al,0x63
  41c636:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41c63c:	out    dx,eax
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	and    al,0xf7
  41c642:	pop    eax
  41c643:	in     al,0x1c
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    ch,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    bh,cl
  41c64d:	cld    
  41c64e:	cwde   
  41c64f:	cmp    bl,al
  41c651:	or     DWORD PTR [esi+0x48],esi
  41c654:	out    dx,al
  41c655:	aad    0xde
  41c657:	fst    DWORD PTR [edx-0x54]
  41c65a:	stos   DWORD PTR es:[edi],eax
  41c65b:	jns    0x41c67c
  41c65d:	je     0x41c5e7
  41c65f:	xchg   esi,eax
  41c660:	mul    BYTE PTR [ecx-0x1ea975f4]
  41c666:	and    eax,0xbb4e4edb
  41c66b:	push   eax
  41c66c:	inc    eax
  41c66d:	(bad)  
  41c66e:	push   cs
  41c66f:	jle    0x41c61a
  41c671:	pushf  
  41c672:	icebp  
  41c673:	fld    TBYTE PTR [edx]
  41c675:	fwait
  41c676:	xor    esp,DWORD PTR [edx]
  41c678:	mov    esp,0x784d0ee5
  41c67d:	mov    ebx,0x2def5e29
  41c682:	adc    al,0x48
  41c684:	mov    eax,ds:0x7f3ddaff
  41c689:	jnp    0x41c66d
  41c68b:	mov    DWORD PTR [esp+ebx*4+0x48125b29],0x56a9ba7a
  41c696:	dec    ebp
  41c697:	and    al,0x3f
  41c699:	add    esp,DWORD PTR [edx]
  41c69b:	fdiv   DWORD PTR [edx-0xc5e04d2]
  41c6a1:	int3   
  41c6a2:	mov    esi,0x5e2d890
  41c6a7:	jp     0x41c634
  41c6a9:	aaa    
  41c6aa:	mov    DWORD PTR [edx+0x71],0xbd3bcbff
  41c6b1:	jns    0x41c70a
  41c6b3:	out    0x30,al
  41c6b5:	jo     0x41c71a
  41c6b7:	mov    ebp,0x5df3565e
  41c6bc:	mov    ebx,DWORD PTR [esp+eiz*4+0xae4bfdc]
  41c6c3:	fadd   DWORD PTR [edi-0x70]
  41c6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6c7:	jg     0x41c738
  41c6c9:	dec    ebp
  41c6ca:	cmp    al,0x1a
  41c6cc:	mov    al,ds:0xa0469828
  41c6d1:	jl     0x41c6cf
  41c6d3:	xor    esp,eax
  41c6d5:	sub    DWORD PTR [esi+0x4a],esp
  41c6d8:	dec    ebx
  41c6d9:	addr16 sub eax,0xa173d8b
  41c6df:	xor    edi,edi
  41c6e1:	out    dx,eax
  41c6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e3:	clc    
  41c6e4:	cdq    
  41c6e5:	xor    bl,BYTE PTR [edx]
  41c6e7:	pop    ebp
  41c6e8:	int3   
  41c6e9:	cwde   
  41c6ea:	xchg   edx,eax
  41c6eb:	jp     0x41c6bb
  41c6ed:	and    eax,0x2e421960
  41c6f2:	out    dx,eax
  41c6f3:	dec    esi
  41c6f4:	mov    eax,ds:0x9068f8fb
  41c6f9:	sbb    eax,DWORD PTR [edx-0x66382e33]
  41c6ff:	push   ds
  41c700:	inc    ebp
  41c701:	sbb    ch,BYTE PTR [edi+eax*1]
  41c704:	(bad)  
  41c705:	ror    DWORD PTR [ecx-0x6b3cf33a],0x52
  41c70c:	push   0xffffff80
  41c70e:	mov    ebp,0xca1c3e99
  41c713:	inc    esp
  41c714:	mov    edx,0xa64b5783
  41c719:	shl    ch,0x70
  41c71c:	adc    eax,0xfbcfe2f6
  41c721:	cmc    
  41c722:	adc    BYTE PTR [esi+0x7a],ah
  41c725:	fistp  WORD PTR [ebp-0x55]
  41c728:	test   BYTE PTR [ebp-0x7bd6ed46],cl
  41c72e:	stos   BYTE PTR es:[edi],al
  41c72f:	mov    ah,0x2c
  41c731:	dec    ecx
  41c732:	stos   DWORD PTR es:[edi],eax
  41c733:	mov    DWORD PTR [edx],esi
  41c735:	leave  
  41c736:	mov    dl,0x86
  41c738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c739:	pop    es
  41c73a:	lock out dx,eax
  41c73c:	inc    eax
  41c73d:	leave  
  41c73e:	xchg   edi,eax
  41c73f:	out    0x25,eax
	...
  41c7b1:	add    BYTE PTR [eax],al
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x2a2dd754
  41c7c3:	push   edx
  41c7c4:	adc    DWORD PTR [ebx],esi
  41c7c6:	add    DWORD PTR [eax],eax
  41c7c8:	cmc    
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    dl,al
  41c7cd:	push   0x5c57c738
  41c7d2:	xchg   ebx,eax
  41c7d3:	adc    ch,al
  41c7d5:	adc    eax,0x5dd88e0c
  41c7da:	stos   BYTE PTR es:[edi],al
  41c7db:	je     0x41c82e
  41c7dd:	xchg   ecx,eax
  41c7de:	or     edx,DWORD PTR [eax+eiz*4]
  41c7e1:	enter  0x23a0,0x20
  41c7e5:	add    dh,BYTE PTR [esi+0x66]
  41c7e8:	mov    ds:0xd5476d0d,eax
  41c7ed:	popa   
  41c7ee:	mov    ?,WORD PTR [ecx+0x62]
  41c7f1:	add    dl,bl
  41c7f3:	loop   0x41c869
  41c7f5:	idiv   DWORD PTR [ebx+ebp*8]
  41c7f8:	mov    BYTE PTR [eax-0x3a04c5e9],0xce
  41c7ff:	add    DWORD PTR [ebx+0x6574cdfb],ebx
  41c805:	in     al,dx
  41c806:	mov    ebx,0x5d910b78
  41c80b:	rcr    BYTE PTR [ebx-0x7e4aa412],0x99
  41c812:	loopne 0x41c79c
  41c814:	aaa    
  41c815:	sub    DWORD PTR es:[eax+edx*1],esi
  41c819:	cmp    al,0x31
  41c81b:	xchg   edi,eax
  41c81c:	into   
  41c81d:	(bad)  
  41c81e:	lock cs daa 
  41c821:	sub    esp,edi
  41c823:	adc    al,0xc9
  41c825:	(bad)  
  41c826:	push   ebp
  41c827:	sub    ch,BYTE PTR [eax]
  41c829:	push   0x60f339e4
  41c82e:	fiadd  DWORD PTR [ebx-0x3dd13eba]
  41c834:	fisttp QWORD PTR [edi-0x3107734e]
  41c83a:	mov    dh,0xb7
  41c83c:	fcom   QWORD PTR [ebx+0x327be035]
  41c842:	sub    bh,BYTE PTR ds:0x8f848f0e
  41c848:	loope  0x41c83b
  41c84a:	out    dx,al
  41c84b:	inc    esi
  41c84c:	xchg   ebx,eax
  41c84d:	push   esi
  41c84e:	pmullw mm1,QWORD PTR [ebp-0x4a9b4063]
  41c855:	inc    eax
  41c856:	sub    BYTE PTR [eax+0x7d],cl
  41c859:	sahf   
  41c85a:	in     eax,dx
  41c85b:	mov    ds:0x55ff8b62,al
  41c860:	fdivr  QWORD PTR [ebx]
  41c862:	jg     0x41c87d
  41c864:	(bad)  
  41c865:	js     0x41c831
  41c867:	popf   
  41c868:	popa   
  41c869:	inc    ebp
  41c86a:	(bad)  [ebx+ebx*2-0x7094dbd3]
  41c871:	pop    edi
  41c872:	rcl    DWORD PTR [ebp-0x54],cl
  41c875:	aaa    
  41c876:	out    dx,eax
  41c877:	in     eax,dx
  41c878:	stos   DWORD PTR es:[edi],eax
  41c879:	and    BYTE PTR [edi+0x668f0000],cl
  41c87f:	stos   BYTE PTR es:[edi],al
  41c880:	adc    al,0xb7
  41c882:	push   0x848c852c
  41c887:	test   BYTE PTR [edx-0x75894385],ch
  41c88d:	aas    
  41c88e:	xchg   DWORD PTR [ecx],esi
  41c890:	int3   
  41c891:	adc    bh,al
  41c893:	enter  0xef1,0x49
  41c897:	data16 lods al,BYTE PTR ds:[esi]
  41c899:	fidivr DWORD PTR [ebx+eiz*4+0x79d56f04]
  41c8a0:	les    esi,FWORD PTR [edi]
  41c8a2:	aas    
  41c8a3:	lea    eax,[ebx-0x13af5bb4]
  41c8a9:	and    eax,0x23e4dd6e
  41c8ae:	jbe    0x41c850
  41c8b0:	aad    0xa1
  41c8b2:	jmp    0x42fab204
  41c8b7:	inc    esi
  41c8b8:	inc    esi
  41c8b9:	jnp    0x41c8fd
  41c8bb:	or     eax,0xbe1fa4cc
  41c8c0:	inc    DWORD PTR [eax]
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	adc    BYTE PTR [esp+ebx*8+0x134069a],0x0
  41c948:	cmc    
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    BYTE PTR [eax+0x62],bh
  41c94e:	sub    BYTE PTR [ebp-0x5412d2b6],bl
  41c954:	rcl    cl,cl
  41c956:	icebp  
  41c957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c958:	pop    eax
  41c959:	push   cs
  41c95a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c95b:	fs xchg esi,edx
  41c95e:	xor    eax,0x6688c8c0
  41c963:	mov    WORD PTR [eax+ebp*2-0x2a],fs
  41c967:	push   esi
  41c968:	cmp    al,0x43
  41c96a:	cmp    DWORD PTR [esi-0x6346d3b9],eax
  41c970:	inc    ebx
  41c971:	jle    0x41c9e1
  41c973:	pop    edi
  41c974:	dec    edx
  41c975:	fiadd  WORD PTR [ecx]
  41c977:	cmp    edx,ebx
  41c979:	mov    bh,0xf6
  41c97b:	xor    BYTE PTR [ebx],ah
  41c97d:	mov    ds:0x50e12869,eax
  41c982:	mov    esi,0x9ee54645
  41c987:	mov    ds,WORD PTR [edx]
  41c989:	not    BYTE PTR [eax+0x1d]
  41c98c:	fwait
  41c98d:	sbb    DWORD PTR [ebp+0x2f],ebp
  41c990:	js     0x41c97f
  41c992:	add    al,0xea
  41c994:	push   eax
  41c995:	imul   DWORD PTR [ebp-0x2f09f579]
  41c99b:	addr16 push eax
  41c99d:	xchg   ebx,eax
  41c99e:	inc    esp
  41c99f:	(bad)  
  41c9a0:	and    bh,BYTE PTR [eax-0x28603639]
  41c9a6:	mov    ds:0x17c38661,eax
  41c9ab:	mul    DWORD PTR [esi-0x354e4338]
  41c9b1:	aaa    
  41c9b2:	dec    ecx
  41c9b3:	les    esi,FWORD PTR [ecx+0x6e]
  41c9b6:	ss push es
  41c9b8:	aam    0x20
  41c9ba:	mov    dl,0xb7
  41c9bc:	test   eax,0x7f7ea42e
  41c9c1:	fs leave 
  41c9c3:	fstp   DWORD PTR [eax+0x7c]
  41c9c6:	pop    ds
  41c9c7:	cmc    
  41c9c8:	pop    edi
  41c9c9:	push   es
  41c9ca:	call   0x75aa3d9c
  41c9cf:	jno    0x41ca2b
  41c9d1:	iret   
  41c9d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9d3:	test   al,0x3b
  41c9d5:	mov    esp,0xe921712e
  41c9da:	push   ds
  41c9db:	in     al,dx
  41c9dc:	lods   eax,DWORD PTR ds:[esi]
  41c9dd:	add    edi,0x7417eb2e
  41c9e3:	and    al,0xa6
  41c9e5:	sbb    edx,DWORD PTR [esi-0x37e7314e]
  41c9eb:	and    esp,DWORD PTR [esi]
  41c9ed:	or     BYTE PTR [edi+edx*8-0x38],dh
  41c9f1:	adc    eax,0x2b8103ad
  41c9f6:	mov    edx,0x8f28d23f
  41c9fb:	imul   eax,esp,0xfffffff7
  41c9fe:	ins    BYTE PTR es:[edi],dx
  41c9ff:	pusha  
  41ca00:	push   es
  41ca01:	ret    
  41ca02:	jae    0x41ca29
  41ca04:	dec    eax
  41ca05:	gs mov edi,0x35154e3a
  41ca0b:	jno    0x41ca8c
  41ca0d:	xor    eax,0x5b20318d
  41ca12:	inc    esi
  41ca13:	mov    ch,0xfe
  41ca15:	and    BYTE PTR [ebx],bl
  41ca17:	pop    ebp
  41ca18:	cmp    ecx,esi
  41ca1a:	push   edi
  41ca1b:	lods   al,BYTE PTR ds:[esi]
  41ca1c:	adc    ebp,DWORD PTR [ebx]
  41ca1e:	out    dx,al
  41ca1f:	mov    dl,0x95
  41ca21:	lods   eax,DWORD PTR ds:[esi]
  41ca22:	add    DWORD PTR [ebx+0xa],0xfadc496a
  41ca29:	imul   ebp,esp,0x6bd10f86
  41ca2f:	dec    edx
  41ca30:	adc    ebp,DWORD PTR [ebx]
  41ca32:	pop    edi
  41ca33:	add    eax,0x47f46fab
  41ca38:	sub    BYTE PTR [edi-0x9],0x6c
  41ca3c:	jp     0x41ca27
  41ca3e:	push   esi
  41ca3f:	cmp    DWORD PTR [esi+0x0],0x0
	...
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0x69e2887e
  41cac1:	push   cs
  41cac2:	push   esi
  41cac3:	clc    
  41cac4:	sti    
  41cac5:	xor    al,0x1
  41cac7:	add    ch,dh
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [esi],al
  41cacd:	loope  0x41cad3
  41cacf:	and    BYTE PTR [ecx+0x497148ce],ch
  41cad5:	dec    eax
  41cad6:	imul   ebx,ecx,0xf8fcb7c
  41cadc:	sub    DWORD PTR [ecx+0x4f],esi
  41cadf:	les    edi,FWORD PTR [esi-0x2b]
  41cae2:	sti    
  41cae3:	add    eax,0x259e113a
  41cae8:	inc    DWORD PTR [edi]
  41caea:	into   
  41caeb:	fisttp DWORD PTR [ebx]
  41caed:	or     al,0xb9
  41caef:	xchg   ebx,eax
  41caf0:	mov    eax,ds:0xba9eb8eb
  41caf5:	repz inc eax
  41caf7:	nop
  41caf8:	(bad)  
  41caf9:	les    esp,FWORD PTR ds:0xeab7ddff
  41caff:	mov    ds:0x5fa25bf9,eax
  41cb04:	fild   QWORD PTR [edx]
  41cb06:	pop    es
  41cb07:	sti    
  41cb08:	push   ebx
  41cb09:	imul   eax,DWORD PTR [esi+0x446b4fbc],0x9bcce764
  41cb13:	jmp    0xc02d:0x1954d048
  41cb1a:	pop    es
  41cb1b:	push   edi
  41cb1c:	cwde   
  41cb1d:	in     al,0x2d
  41cb1f:	or     BYTE PTR [eax+edx*4],ah
  41cb22:	pop    eax
  41cb23:	jmp    0x45a5:0x33c58fd8
  41cb2a:	inc    esp
  41cb2b:	jnp    0x41cadc
  41cb2d:	mov    esp,0x70d47820
  41cb32:	cmp    bh,BYTE PTR [esi-0x64]
  41cb35:	pop    eax
  41cb36:	mov    esp,0xf7ea6e6e
  41cb3b:	mov    esp,0xe0b25716
  41cb40:	cmp    dh,BYTE PTR [esi+ecx*8]
  41cb43:	fs sbb eax,0x6b0b6c14
  41cb49:	cs iret 
  41cb4b:	xchg   esp,eax
  41cb4c:	inc    esp
  41cb4d:	sub    ch,BYTE PTR [ebp*2+0x5e2aa04f]
  41cb54:	mov    bl,0xd2
  41cb56:	and    DWORD PTR [eax],esp
  41cb58:	bound  esp,QWORD PTR [ebp-0x45fd506d]
  41cb5e:	frstor [eax]
  41cb60:	jns    0x41cb79
  41cb62:	fmul   st(6),st
  41cb64:	daa    
  41cb65:	jo     0x41cb58
  41cb67:	pop    esi
  41cb68:	stc    
  41cb69:	je     0x41cbc2
  41cb6b:	sar    DWORD PTR [eax+esi*2+0x29eebda1],cl
  41cb72:	and    eax,0x4603591a
  41cb77:	mov    WORD PTR [ebx-0x72],es
  41cb7a:	cmp    eax,DWORD PTR [ebp+0x42fb39]
  41cb80:	ja     0x41cb06
  41cb82:	pushf  
  41cb83:	test   ebx,esi
  41cb85:	xchg   edi,eax
  41cb86:	mov    ds:0x60328dc2,eax
  41cb8b:	ja     0x41cb24
  41cb8d:	cmp    BYTE PTR [edx-0xee6f6dc],bl
  41cb93:	and    esp,DWORD PTR [ebp+ebx*1+0x34d2df5f]
  41cb9a:	loope  0x41cbbd
  41cb9c:	jb     0x41cb74
  41cb9e:	fist   DWORD PTR [ebp-0x6b12480c]
  41cba4:	pusha  
  41cba5:	inc    ecx
  41cba6:	mov    eax,ds:0x8072bb4d
  41cbab:	sbb    DWORD PTR [ecx+0x12],0x22a5f84c
  41cbb2:	cld    
  41cbb3:	ficomp DWORD PTR [ebp-0xb1e332]
  41cbb9:	adc    DWORD PTR [ebp+0x46292b24],ebp
  41cbbf:	mov    ah,0x6d
	...
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x9a
  41cc41:	out    0x29,eax
  41cc43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc44:	lock xor eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	ds xor al,0xf0
  41cc4f:	(bad)  
  41cc50:	jo     0x41cc48
  41cc52:	in     al,dx
  41cc53:	jno    0x41cc3c
  41cc55:	mov    eax,0xfd4776c2
  41cc5a:	sbb    eax,0x3ea7e348
  41cc5f:	and    al,0x96
  41cc61:	out    dx,eax
  41cc62:	sbb    DWORD PTR [esi],ecx
  41cc64:	xor    edi,DWORD PTR [edi-0x31]
  41cc67:	ror    esp,0x4c
  41cc6a:	mov    ecx,0xa9a4ddc0
  41cc6f:	jp     0x41cc29
  41cc71:	das    
  41cc72:	inc    edi
  41cc73:	sub    eax,ebp
  41cc75:	inc    ecx
  41cc76:	sbb    esi,esp
  41cc78:	addr16 jb 0x41cc64
  41cc7b:	(bad)  [eax+0x5fa96b07]
  41cc81:	rcr    BYTE PTR [edi+ebx*4],1
  41cc84:	mov    ch,0x8f
  41cc86:	xor    eax,0xc1d75aa0
  41cc8b:	xor    ebp,DWORD PTR [esi+0x22]
  41cc8e:	lods   al,BYTE PTR ds:[esi]
  41cc8f:	push   cs
  41cc90:	cmp    eax,0xd758dd48
  41cc95:	lock mov BYTE PTR [edi+0x77bcdf81],al
  41cc9c:	mov    dh,0xba
  41cc9e:	repnz adc eax,0xda03c786
  41cca4:	cmp    DWORD PTR [esi+0x76f5e36d],ebx
  41ccaa:	wrmsr  
  41ccac:	outs   dx,DWORD PTR ds:[esi]
  41ccad:	sub    dl,bh
  41ccaf:	add    DWORD PTR [edx-0x76],esp
  41ccb2:	loope  0x41ccba
  41ccb4:	xlat   BYTE PTR ds:[ebx]
  41ccb5:	mov    BYTE PTR [esi],cl
  41ccb7:	stc    
  41ccb8:	or     eax,DWORD PTR [ebp-0x13e67f4b]
  41ccbe:	push   0xc
  41ccc0:	out    dx,eax
  41ccc1:	ins    DWORD PTR es:[edi],dx
  41ccc2:	push   ecx
  41ccc3:	sahf   
  41ccc4:	push   0x61
  41ccc6:	xchg   edi,eax
  41ccc7:	in     al,dx
  41ccc8:	call   0x45c:0xf96941a1
  41cccf:	stc    
  41ccd0:	sub    al,0xe9
  41ccd2:	cs dec edx
  41ccd4:	into   
  41ccd5:	(bad)  
  41ccd6:	jnp    0x41cd11
  41ccd8:	jo     0x41cd28
  41ccda:	adc    BYTE PTR [eax+0x3374f1fc],ah
  41cce0:	xor    eax,0x350ea5ef
  41cce5:	cli    
  41cce6:	pop    ds
  41cce7:	jns    0x41cd1a
  41cce9:	inc    edi
  41ccea:	das    
  41cceb:	mov    eax,DWORD PTR [ecx+0x40]
  41ccee:	dec    edi
  41ccef:	pop    esi
  41ccf0:	mov    edi,0x744d97f9
  41ccf5:	jge    0x41cd25
  41ccf7:	jmp    0x41cd06
  41ccf9:	xchg   ecx,eax
  41ccfa:	in     al,dx
  41ccfb:	fucomip st,st(5)
  41ccfd:	and    eax,0xc8cdea11
  41cd02:	mov    ds:0xfe2feaba,al
  41cd07:	dec    ebx
  41cd08:	push   ss
  41cd09:	(bad)  
  41cd0a:	hlt    
  41cd0b:	(bad)  
  41cd0c:	or     esi,DWORD PTR [edi-0x17]
  41cd0f:	cmc    
  41cd10:	mov    eax,ebp
  41cd12:	js     0x41cd6a
  41cd14:	mov    ebp,0xdd558482
  41cd19:	mov    bh,0xec
  41cd1b:	jecxz  0x41cd0e
  41cd1d:	sub    al,0xd4
  41cd1f:	stos   DWORD PTR es:[edi],eax
  41cd20:	jmp    0x7369c52
  41cd25:	or     al,ch
  41cd27:	popa   
  41cd28:	pop    ss
  41cd29:	lea    ebx,[esi]
  41cd2b:	imul   esp,eax,0x6ab6b8c8
  41cd31:	mov    edi,0x4ed209d7
  41cd36:	mov    ah,0x1e
  41cd38:	outs   dx,DWORD PTR ds:[esi]
  41cd39:	push   ds
  41cd3a:	stc    
  41cd3b:	xor    eax,0x31cf2eb0
  41cd40:	mov    esp,0x0
	...
  41cdb1:	add    BYTE PTR [eax],al
  41cdb3:	add    BYTE PTR [ebp-0x63956373],al
  41cdb9:	jnp    0x41cdb2
  41cdbb:	out    dx,eax
  41cdbc:	push   ebp
  41cdbd:	call   0xa92d:0x5aaab1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [edx],dl
  41cdcd:	mov    al,0x6b
  41cdcf:	push   0xffffffc2
  41cdd1:	jb     0x41ce4c
  41cdd3:	xchg   bh,bh
  41cdd5:	cld    
  41cdd6:	inc    edi
  41cdd7:	sub    ebp,DWORD PTR [esi-0x54]
  41cdda:	push   es
  41cddb:	xor    ah,0xbe
  41cdde:	mov    cl,0x5
  41cde0:	imul   esi,ecx,0xdf4d5cd
  41cde6:	mov    ecx,0xfdcf84e5
  41cdeb:	into   
  41cdec:	xchg   edi,eax
  41cded:	cmp    BYTE PTR [eax],0xc
  41cdf0:	daa    
  41cdf1:	fiadd  DWORD PTR [edx+0x18]
  41cdf4:	jo     0x41cd8c
  41cdf6:	je     0x41cdb2
  41cdf8:	jmp    0x41ce5c
  41cdfa:	jae    0x41cdc3
  41cdfc:	and    DWORD PTR [edi],esi
  41cdfe:	idiv   DWORD PTR [edx]
  41ce00:	inc    ebp
  41ce01:	out    dx,eax
  41ce02:	icebp  
  41ce03:	jae    0x41cdc5
  41ce05:	popa   
  41ce06:	pop    ebp
  41ce07:	int3   
  41ce08:	and    eax,DWORD PTR [ebx]
  41ce0a:	push   ebx
  41ce0b:	mov    edi,0xc94de0e5
  41ce10:	sub    DWORD PTR [edx-0x63],ebx
  41ce13:	sbb    edi,DWORD PTR [ebx]
  41ce15:	adc    cl,BYTE PTR es:[ebx-0x11f06bfa]
  41ce1c:	xchg   ebx,eax
  41ce1d:	das    
  41ce1e:	test   DWORD PTR [esi+0x5c],ebx
  41ce21:	sub    eax,0x7d79c075
  41ce26:	mov    al,0xbf
  41ce28:	fldenv [edx]
  41ce2a:	mov    bl,0x2b
  41ce2c:	shr    BYTE PTR [ebx+0x62],cl
  41ce2f:	ss fwait
  41ce31:	jnp    0x41ce1e
  41ce33:	ret    
  41ce34:	inc    eax
  41ce35:	jle    0x41ce39
  41ce37:	jne    0x41ce80
  41ce39:	ins    BYTE PTR es:[edi],dx
  41ce3a:	cwde   
  41ce3b:	inc    ah
  41ce3d:	dec    ebx
  41ce3e:	iret   
  41ce3f:	and    eax,0x2bd9a458
  41ce44:	push   ss
  41ce45:	lea    esi,[eax+0x43]
  41ce48:	add    eax,0xe8652b08
  41ce4d:	cmp    al,0x63
  41ce4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce50:	hlt    
  41ce51:	dec    edi
  41ce52:	inc    esp
  41ce53:	repz dec esi
  41ce55:	ds jb  0x41cdf1
  41ce58:	mov    edx,0x98fb1a6e
  41ce5d:	jno    0x41cdf5
  41ce5f:	adc    BYTE PTR [ecx],dl
  41ce61:	push   ebp
  41ce62:	xor    al,0xd1
  41ce64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce65:	es inc edx
  41ce67:	mov    esp,0xf233b2ce
  41ce6c:	int    0x91
  41ce6e:	dec    esi
  41ce6f:	jge    0x41ce2a
  41ce71:	sub    bh,BYTE PTR [ebx-0x5f]
  41ce74:	push   edi
  41ce75:	pop    edi
  41ce76:	and    eax,0xaccf3d78
  41ce7b:	xlat   BYTE PTR ds:[ebx]
  41ce7c:	mov    edx,0xb1d5e25c
  41ce81:	addr16 sub ecx,edi
  41ce84:	mov    ecx,?
  41ce86:	(bad)  
  41ce87:	(bad)  
  41ce88:	fist   WORD PTR [edx]
  41ce8a:	sahf   
  41ce8b:	pusha  
  41ce8c:	je     0x41ce9c
  41ce8e:	in     eax,0xac
  41ce90:	popa   
  41ce91:	sbb    dl,dl
  41ce93:	out    dx,al
  41ce94:	push   cs
  41ce95:	xchg   edx,eax
  41ce96:	mov    ebx,0xbab56795
  41ce9b:	pop    esp
  41ce9c:	xor    BYTE PTR [edx+0x3aa79dc],bh
  41cea2:	push   ecx
  41cea3:	add    esp,edx
  41cea5:	jmp    0x41ce9b
  41cea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cea8:	sbb    al,0x5d
  41ceaa:	push   esi
  41ceab:	jno    0x41ce52
  41cead:	fisub  DWORD PTR [ebx+0x2a704cc4]
  41ceb3:	add    al,0x20
  41ceb5:	cdq    
  41ceb6:	fnstcw WORD PTR [esi+0x4e45552c]
  41cebc:	rcl    ebx,cl
  41cebe:	push   ebx
  41cebf:	outs   dx,DWORD PTR ds:[esi]
  41cec0:	and    eax,DWORD PTR [eax]
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	lahf   
  41cf41:	loopne 0x41cf54
  41cf43:	sbb    edx,0xf5000137
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    ah,dl
  41cf4d:	push   ds
  41cf4e:	xchg   ebx,eax
  41cf4f:	sbb    cl,BYTE PTR [ebp+0x12c54cba]
  41cf55:	clc    
  41cf56:	push   0xcd7a04df
  41cf5b:	cli    
  41cf5c:	pop    es
  41cf5d:	mov    cl,0xd9
  41cf5f:	hlt    
  41cf60:	mov    edx,?
  41cf62:	inc    ebx
  41cf63:	xchg   ecx,eax
  41cf64:	sahf   
  41cf65:	mov    bh,0x78
  41cf67:	jmp    0x41cf5c
  41cf69:	rcl    DWORD PTR [ebp+0x50],cl
  41cf6c:	div    edx
  41cf6e:	xchg   BYTE PTR [edx],ch
  41cf70:	xchg   ebp,eax
  41cf71:	out    dx,eax
  41cf72:	mov    edi,0x1b33c0e1
  41cf77:	sub    al,0xf3
  41cf79:	out    0xb,eax
  41cf7b:	mov    edx,0xee50e0a2
  41cf80:	pop    esi
  41cf81:	push   es
  41cf82:	sub    ebp,ecx
  41cf84:	pop    edx
  41cf85:	push   esi
  41cf86:	or     al,0x1d
  41cf88:	or     al,0xef
  41cf8a:	sbb    eax,0x1ead87dd
  41cf8f:	retf   0x5ac9
  41cf92:	loope  0x41cf21
  41cf94:	sbb    BYTE PTR [edx-0x29fecf31],ch
  41cf9a:	dec    ebx
  41cf9b:	inc    ecx
  41cf9c:	fcomp  DWORD PTR [eax-0x3a]
  41cf9f:	mov    edi,0x65fce5b4
  41cfa4:	xchg   ecx,eax
  41cfa5:	imul   ebp,DWORD PTR [ebp-0x47],0x29f63729
  41cfac:	mov    cl,0xcb
  41cfae:	xchg   esi,eax
  41cfaf:	mov    ebx,0x4f12a408
  41cfb4:	xlat   BYTE PTR ds:[ebx]
  41cfb5:	dec    ebp
  41cfb6:	ret    0x820f
  41cfb9:	rcl    dh,cl
  41cfbb:	les    edi,FWORD PTR [ebx+0x2a]
  41cfbe:	push   ebx
  41cfbf:	stos   DWORD PTR es:[edi],eax
  41cfc0:	push   ebx
  41cfc1:	scas   al,BYTE PTR es:[edi]
  41cfc2:	mov    DWORD PTR [edx+0x1abe16ff],ebx
  41cfc8:	add    ebp,DWORD PTR [ebp+ebx*2+0xd]
  41cfcc:	xor    DWORD PTR [esi],esi
  41cfce:	cmp    dl,BYTE PTR [edx-0x78fdde3d]
  41cfd4:	mov    esi,0xdaae6e8e
  41cfd9:	jge    0x41cff9
  41cfdb:	fistp  DWORD PTR [edx+0x8]
  41cfde:	pop    ebx
  41cfdf:	cli    
  41cfe0:	ss adc al,0x8d
  41cfe3:	xchg   esi,eax
  41cfe4:	mov    al,ds:0xb5c9d084
  41cfe9:	ret    0x6c32
  41cfec:	jnp    0x41cfd7
  41cfee:	xchg   ebx,eax
  41cfef:	sub    ebx,ebx
  41cff1:	daa    
  41cff2:	adc    DWORD PTR [eax+0x39059200],ecx
  41cff8:	sti    
  41cff9:	sti    
  41cffa:	sub    DWORD PTR [ecx+0x66b826d1],eax
  41d000:	daa    
  41d001:	mov    BYTE PTR [ecx],ch
  41d003:	mov    eax,0xb0e7cdea
  41d008:	dec    edi
  41d009:	daa    
  41d00a:	ret    
  41d00b:	das    
  41d00c:	jnp    0x41d00f
  41d00e:	in     al,0xee
  41d010:	and    dl,bh
  41d012:	cmp    BYTE PTR [ecx+ebp*2],0x93
  41d016:	sar    DWORD PTR [edi],0x1d
  41d019:	pop    ebp
  41d01a:	pop    eax
  41d01b:	in     al,0x4c
  41d01d:	(bad)  
  41d01e:	cmp    eax,0xe6ed0972
  41d023:	cli    
  41d024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d025:	je     0x41d07e
  41d027:	mov    WORD PTR fs:[edi*4-0x420d0cdd],sp
  41d030:	cld    
  41d031:	mov    al,0xe
  41d033:	imul   ebp,DWORD PTR [eax+0x3c],0x29
  41d037:	enter  0x5840,0xd7
  41d03b:	mov    esi,0x711ccd40
  41d040:	stc    
	...
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx+0x6980a798],0x24
  41d0c2:	push   ecx
  41d0c3:	test   eax,0x138cf
  41d0c8:	cmc    
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    bl,ah
  41d0cd:	jecxz  0x41d0f4
  41d0cf:	and    al,0xa8
  41d0d1:	fist   DWORD PTR [edx]
  41d0d3:	mov    cl,0xe4
  41d0d5:	test   al,0xe0
  41d0d7:	lods   eax,DWORD PTR ds:[esi]
  41d0d8:	in     eax,0x1c
  41d0da:	call   0xcec9a7ca
  41d0df:	mov    ch,ch
  41d0e1:	cmp    ah,BYTE PTR [edx]
  41d0e3:	in     al,dx
  41d0e4:	rol    edi,0xd1
  41d0e7:	(bad)  [ebp+0x511bd6ba]
  41d0ed:	xchg   ebx,eax
  41d0ee:	xor    BYTE PTR [ecx],ah
  41d0f0:	daa    
  41d0f1:	aad    0xa6
  41d0f3:	push   edi
  41d0f4:	push   ss
  41d0f5:	fstp   TBYTE PTR [edi+0x449a681f]
  41d0fb:	ds pop ss
  41d0fd:	sbb    al,0xa
  41d0ff:	lods   eax,DWORD PTR ds:[esi]
  41d100:	loope  0x41d0b6
  41d102:	cmp    DWORD PTR [esi],0x16f8856f
  41d108:	adc    BYTE PTR [edi+0x1a],0x18
  41d10c:	js     0x41d169
  41d10e:	and    edi,esi
  41d110:	fs scas eax,DWORD PTR es:[edi]
  41d112:	(bad)  
  41d113:	sbb    esp,DWORD PTR [ecx]
  41d115:	pop    ecx
  41d116:	mov    ecx,DWORD PTR [ebx-0x5fd30f9d]
  41d11c:	xchg   edi,eax
  41d11d:	inc    ecx
  41d11e:	stos   DWORD PTR es:[edi],eax
  41d11f:	dec    ebx
  41d120:	aad    0xf3
  41d122:	cmc    
  41d123:	fsub   st(5),st
  41d125:	xchg   ecx,eax
  41d126:	jno    0x41d12f
  41d128:	dec    edx
  41d129:	ror    DWORD PTR [edx],1
  41d12b:	add    BYTE PTR [eax+0x219aa0a6],ch
  41d131:	inc    ebx
  41d132:	ret    
  41d133:	iret   
  41d134:	pop    esp
  41d135:	push   edx
  41d136:	mov    ds:0x525d3320,al
  41d13b:	out    0x7e,eax
  41d13d:	xchg   edx,eax
  41d13e:	sbb    eax,0xdbf805f1
  41d143:	xlat   BYTE PTR ds:[ebx]
  41d144:	mov    al,0x61
  41d146:	arpl   cx,bx
  41d148:	loop   0x41d12b
  41d14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d14b:	dec    esi
  41d14c:	adc    DWORD PTR ss:[esi+0x25d1e5e5],ebp
  41d153:	pop    esi
  41d154:	and    al,0xb5
  41d156:	jns    0x41d103
  41d158:	sub    al,0xa
  41d15a:	pop    ss
  41d15b:	sub    eax,0x11a34d27
  41d160:	test   al,0xec
  41d162:	inc    ebp
  41d163:	or     DWORD PTR [edi+0x78],eax
  41d166:	dec    ebp
  41d167:	shr    ebp,0xf3
  41d16a:	push   ebx
  41d16b:	loop   0x41d122
  41d16d:	add    eax,DWORD PTR [eax-0x66]
  41d170:	mov    bl,0x58
  41d172:	dec    ebp
  41d173:	scas   al,BYTE PTR es:[edi]
  41d174:	mov    bh,0x27
  41d176:	jle    0x41d1f7
  41d178:	sbb    BYTE PTR [edx+0x2148f969],bl
  41d17e:	neg    ebx
  41d180:	push   ecx
  41d181:	stos   DWORD PTR es:[edi],eax
  41d182:	popa   
  41d183:	jo     0x41d176
  41d185:	and    dh,BYTE PTR [esi-0x3050b40f]
  41d18b:	aas    
  41d18c:	xor    DWORD PTR [ebp-0x53db3b69],ebp
  41d192:	(bad)  
  41d193:	imul   ebp,DWORD PTR [edi+0x41],0x1f8f7784
  41d19a:	call   0x21d26077
  41d19f:	pop    esp
  41d1a0:	sar    ebp,1
  41d1a2:	pop    ds
  41d1a3:	fwait
  41d1a4:	mov    bh,0x1b
  41d1a6:	outs   dx,DWORD PTR ds:[esi]
  41d1a7:	and    edx,DWORD PTR [eax+0x4a46a805]
  41d1ad:	xchg   DWORD PTR [eax-0x130739d2],edi
  41d1b3:	sbb    ah,BYTE PTR [ecx]
  41d1b5:	cmc    
  41d1b6:	xchg   edx,eax
  41d1b7:	jmp    0x41d20a
  41d1b9:	in     eax,0x70
  41d1bb:	mov    eax,0x10ac2e13
  41d1c0:	pop    eax
	...
  41d231:	add    BYTE PTR [eax],al
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	addr16 mov ah,0x61
  41d243:	test   ah,al
  41d245:	cmp    DWORD PTR [ecx],eax
  41d247:	add    ch,dh
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [ebp+0x56],cl
  41d24e:	cmp    ch,BYTE PTR [edx]
  41d250:	xlat   BYTE PTR ds:[ebx]
  41d251:	mov    edx,0xd9fde855
  41d256:	sub    al,0x40
  41d258:	or     al,0x94
  41d25a:	(bad)  
  41d25b:	iret   
  41d25c:	iret   
  41d25d:	jl     0x41d2cc
  41d25f:	pusha  
  41d260:	jl     0x41d279
  41d262:	repnz xor DWORD PTR [esi],ebx
  41d265:	fadd   DWORD PTR [esi+0x39]
  41d268:	jmp    0x41d277
  41d26a:	jb     0x41d296
  41d26c:	xchg   edi,eax
  41d26d:	aam    0x73
  41d26f:	je     0x41d2ec
  41d271:	cdq    
  41d272:	adc    DWORD PTR [edx-0x64b58e87],eax
  41d278:	lock adc DWORD PTR [ebp+0x50],ecx
  41d27c:	lods   eax,DWORD PTR ds:[esi]
  41d27d:	inc    esp
  41d27e:	fsincos 
  41d280:	inc    esp
  41d281:	jmp    0xbc3af5b1
  41d286:	dec    edi
  41d287:	repz push eax
  41d289:	lea    esi,[edx-0x6c]
  41d28c:	loop   0x41d272
  41d28e:	div    BYTE PTR [eax+0x4b]
  41d291:	and    eax,0x78923685
  41d296:	pop    esi
  41d297:	in     eax,0xf5
  41d299:	fcmove st,st(7)
  41d29b:	out    0xd6,eax
  41d29d:	xchg   edx,eax
  41d29e:	fistp  DWORD PTR [eax]
  41d2a0:	xor    esi,DWORD PTR [ecx-0x565f915]
  41d2a6:	out    0x2d,al
  41d2a8:	cwde   
  41d2a9:	push   eax
  41d2aa:	and    DWORD PTR [ebp+0x27],eax
  41d2ad:	cmp    al,0xb3
  41d2af:	jbe    0x41d291
  41d2b1:	cld    
  41d2b2:	sub    eax,ebp
  41d2b4:	sbb    bp,dx
  41d2b7:	push   es
  41d2b8:	jl     0x41d251
  41d2ba:	add    esi,DWORD PTR [eax+edi*8+0x7e812dc5]
  41d2c1:	clc    
  41d2c2:	fwait
  41d2c3:	sbb    esi,DWORD PTR [edx+0x5fdcf2c2]
  41d2c9:	sbb    eax,0xf2da71c6
  41d2ce:	stos   BYTE PTR es:[edi],al
  41d2cf:	jnp    0x41d32e
  41d2d1:	cmp    eax,0xcecff2e0
  41d2d6:	gs xor edi,ebx
  41d2d9:	or     eax,0x4ddfbe74
  41d2de:	repnz aad 0x9f
  41d2e1:	adc    al,0xb6
  41d2e3:	pop    edi
  41d2e4:	jae    0x41d2ab
  41d2e6:	push   ds
  41d2e7:	inc    esi
  41d2e8:	push   ds
  41d2e9:	push   es
  41d2ea:	cli    
  41d2eb:	clc    
  41d2ec:	gs retf 0x33f2
  41d2f0:	out    dx,al
  41d2f1:	mov    dh,0xb3
  41d2f3:	aaa    
  41d2f4:	push   ss
  41d2f5:	fimul  DWORD PTR [edi]
  41d2f7:	stc    
  41d2f8:	outs   dx,DWORD PTR ds:[esi]
  41d2f9:	push   ebx
  41d2fa:	sub    edi,DWORD PTR [eax+0x47]
  41d2fd:	dec    ecx
  41d2fe:	call   0xd5da:0xb3a739a1
  41d305:	mov    dl,0x55
  41d307:	cmp    ch,bh
  41d309:	mov    BYTE PTR ds:0x6fa20682,al
  41d30f:	repnz inc eax
  41d311:	jno    0x41d308
  41d313:	pop    ebp
  41d314:	fisub  WORD PTR ds:0x5ab3863f
  41d31a:	cdq    
  41d31b:	ror    DWORD PTR [ecx+0xe7a4fdb],0x7f
  41d322:	cdq    
  41d323:	js     0x41d386
  41d325:	aad    0xf9
  41d327:	shr    BYTE PTR [eax+eax*8+0x22329ffc],1
  41d32e:	rcr    DWORD PTR [edx+0x16a3a85f],cl
  41d334:	pop    eax
  41d335:	out    0x64,al
  41d337:	enter  0xbb4b,0xbc
  41d33b:	and    eax,0x86f61eb5
  41d340:	push   ss
	...
  41d3b1:	add    BYTE PTR [eax],al
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	mov    BYTE PTR [ecx+0x15],0xb2
  41d3c3:	aam    0xb9
  41d3c5:	cmp    al,BYTE PTR [ecx]
  41d3c7:	add    ch,dh
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [eax],ch
  41d3cd:	shr    ebp,cl
  41d3cf:	cmp    eax,0x2dc4f4f8
  41d3d4:	sub    esi,DWORD PTR [edx]
  41d3d6:	fst    QWORD PTR [esi+0x7b23b191]
  41d3dc:	and    al,0xc1
  41d3de:	push   ss
  41d3df:	fcom   DWORD PTR [ebx]
  41d3e1:	sub    DWORD PTR fs:[ecx+0x3c],0x840d71f5
  41d3e9:	add    al,0x70
  41d3eb:	and    DWORD PTR [ecx+edx*4-0x66b9710b],esp
  41d3f2:	mov    ds:0x52de9ba4,al
  41d3f7:	mov    al,0x4e
  41d3f9:	out    dx,al
  41d3fa:	and    BYTE PTR [esi],0x82
  41d3fd:	rcr    cl,0xda
  41d400:	cmc    
  41d401:	xchg   ebx,eax
  41d402:	pop    edi
  41d403:	and    BYTE PTR [ebx+ecx*2+0x53],0x1
  41d408:	test   esp,0xd101d6d9
  41d40e:	push   edi
  41d40f:	mov    esi,0x31b4828c
  41d414:	sahf   
  41d415:	jmp    0x41d44a
  41d417:	mov    ch,0xd
  41d419:	jns    0x41d45f
  41d41b:	(bad)  
  41d41c:	cmp    bl,BYTE PTR [eax-0x45]
  41d41f:	fnstsw WORD PTR [edx-0x375f11d7]
  41d425:	pop    ecx
  41d426:	push   0xde65fc55
  41d42b:	pop    ds
  41d42c:	inc    edx
  41d42d:	mov    cl,ah
  41d42f:	or     BYTE PTR [edi-0x12],bl
  41d432:	pop    ds
  41d433:	and    al,0x85
  41d435:	mov    ss,WORD PTR [edi+esi*4-0x6ce90ab7]
  41d43c:	or     eax,0xcb7daa85
  41d441:	lahf   
  41d442:	sub    al,0x73
  41d444:	mov    al,0xb3
  41d446:	fild   DWORD PTR [esi]
  41d448:	cmp    DWORD PTR [ecx+0x1f],0xd3788931
  41d44f:	or     DWORD PTR [edi+eax*2+0x4caa8020],esp
  41d456:	(bad)  
  41d457:	hlt    
  41d458:	inc    esp
  41d459:	xchg   edx,eax
  41d45a:	sti    
  41d45b:	arpl   WORD PTR [ebp-0x7c],cx
  41d45e:	mov    bh,bl
  41d460:	gs add ebx,esp
  41d463:	mov    edx,0x205b895d
  41d468:	das    
  41d469:	add    eax,0xf8ca028
  41d46e:	pop    ebp
  41d46f:	ds popf 
  41d471:	cld    
  41d472:	cld    
  41d473:	and    al,0xe8
  41d475:	cmp    al,0x1b
  41d477:	and    DWORD PTR [edx-0x6e],esi
  41d47a:	push   esi
  41d47b:	outs   dx,DWORD PTR ds:[esi]
  41d47c:	inc    esi
  41d47d:	xor    BYTE PTR [edi+ecx*2+0xc],al
  41d481:	inc    ecx
  41d482:	xlat   BYTE PTR ds:[ebx]
  41d483:	mov    ecx,0x6c22ec28
  41d488:	mov    bl,BYTE PTR [esi]
  41d48a:	popf   
  41d48b:	mov    eax,0xd535b0e8
  41d490:	mov    ebx,0x3322ad61
  41d495:	mov    edx,0x9a40283
  41d49a:	retf   
  41d49b:	pop    edi
  41d49c:	shr    DWORD PTR [edi],0x45
  41d49f:	mov    DWORD PTR [ecx],ebx
  41d4a1:	jecxz  0x41d461
  41d4a3:	jp     0x41d4ce
  41d4a5:	and    eax,0x9039735
  41d4aa:	lods   eax,DWORD PTR ds:[esi]
  41d4ab:	adc    esp,DWORD PTR [edx-0x49c3c620]
  41d4b1:	stc    
  41d4b2:	xchg   DWORD PTR [esi+0x77126b46],eax
  41d4b8:	fdiv   QWORD PTR [edi+0x767bc5e0]
  41d4be:	pop    ss
  41d4bf:	and    ebx,edi
	...
  41d531:	add    BYTE PTR [eax],al
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8-0x22a08970]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [eax+0x721b3bd],cl
  41d551:	dec    esp
  41d552:	mov    esp,0x225e65be
  41d557:	add    DWORD PTR [eax+0x15],0xdfc42d53
  41d55e:	xor    DWORD PTR [edi],0xcd34cd22
  41d564:	ja     0x41d59c
  41d566:	test   eax,0xf86687bd
  41d56b:	dec    esi
  41d56c:	push   esp
  41d56d:	hlt    
  41d56e:	mov    ecx,0x14f76075
  41d573:	retf   0x2bee
  41d576:	div    DWORD PTR [edx]
  41d578:	or     edx,DWORD PTR [ecx]
  41d57a:	pop    edx
  41d57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d57c:	xlat   BYTE PTR ds:[ebx]
  41d57d:	push   0xdabafbbe
  41d582:	or     ah,ah
  41d584:	fwait
  41d585:	inc    edx
  41d586:	lods   al,BYTE PTR ds:[esi]
  41d587:	int3   
  41d588:	mov    eax,DWORD PTR [edx-0x14]
  41d58b:	imul   edi,DWORD PTR [ebx],0xffffff98
  41d58e:	jo     0x41d581
  41d590:	push   esi
  41d591:	test   BYTE PTR fs:[ecx],al
  41d594:	or     al,0x6c
  41d596:	sub    edi,ebx
  41d598:	(bad)  
  41d599:	xchg   edi,eax
  41d59a:	dec    edi
  41d59b:	adc    al,0xe8
  41d59d:	ss (bad) 
  41d59f:	jb     0x41d53c
  41d5a1:	jno    0x41d5b9
  41d5a3:	sahf   
  41d5a4:	sub    ebx,DWORD PTR [ebp-0x478467b9]
  41d5aa:	pop    esp
  41d5ab:	scas   al,BYTE PTR es:[edi]
  41d5ac:	pop    eax
  41d5ad:	aam    0x8a
  41d5af:	rcl    DWORD PTR [eax-0x57],cl
  41d5b2:	sub    al,0x79
  41d5b4:	sar    ch,1
  41d5b6:	cmp    bl,BYTE PTR [esi-0x74c1197d]
  41d5bc:	in     al,0x8
  41d5be:	retf   0x8a6
  41d5c1:	add    esi,ecx
  41d5c3:	addr16 setbe ch
  41d5c7:	pop    ecx
  41d5c8:	inc    esi
  41d5c9:	sub    dh,BYTE PTR [edx]
  41d5cb:	cmp    BYTE PTR [ecx+0x29038690],0x26
  41d5d2:	xor    BYTE PTR [ebp-0x6f],al
  41d5d5:	fnstenv [edi]
  41d5d7:	out    0x3b,eax
  41d5d9:	add    BYTE PTR [ecx],0xc5
  41d5dc:	jae    0x41d58c
  41d5de:	popf   
  41d5df:	das    
  41d5e0:	fwait
  41d5e1:	pop    esi
  41d5e2:	fld    DWORD PTR gs:[ebp+esi*8+0x44]
  41d5e7:	outs   dx,BYTE PTR ds:[esi]
  41d5e8:	dec    esp
  41d5e9:	shr    DWORD PTR [edx+0xe],cl
  41d5ec:	add    ebx,DWORD PTR [ecx+0x1d]
  41d5ef:	xchg   ebx,eax
  41d5f0:	jmp    0x41d5eb
  41d5f2:	push   edx
  41d5f3:	arpl   WORD PTR [esi],dx
  41d5f5:	xor    DWORD PTR ds:0x707fb6a3,esp
  41d5fb:	mov    ebp,0x1824cd9d
  41d600:	pop    esi
  41d601:	arpl   WORD PTR [ebx],dx
  41d603:	jns    0x41d629
  41d605:	cmp    BYTE PTR [edx-0x40],0x89
  41d609:	cwde   
  41d60a:	ja     0x41d665
  41d60c:	mov    ebp,0x5e8ebbf3
  41d611:	out    0x40,al
  41d613:	and    al,0xf2
  41d615:	aad    0x25
  41d617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d618:	push   esp
  41d619:	rol    edx,0x90
  41d61c:	pushf  
  41d61d:	jmp    0x544:0x80e78b9f
  41d624:	(bad)  
  41d625:	jle    0x41d6a1
  41d627:	das    
  41d628:	and    edi,edi
  41d62a:	retf   0x3aba
  41d62d:	mov    ecx,0xabcd95f5
  41d632:	or     eax,0xc7239d1d
  41d637:	mov    esp,DWORD PTR [ecx-0xd]
  41d63a:	xor    cl,BYTE PTR [ebx+0x27]
  41d63d:	cmp    ebp,DWORD PTR [esi]
  41d63f:	mov    al,ds:0x3f
	...
  41d6b4:	fiadd  DWORD PTR [ecx]
  41d6b6:	ret    0xdb86
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x7a5f0a3b
  41d6c2:	pop    edi
  41d6c3:	shl    BYTE PTR [ebx-0xafffec4],0x0
  41d6ca:	add    BYTE PTR [eax],al
  41d6cc:	adc    dl,BYTE PTR [edi-0x60148ef0]
  41d6d2:	retf   
  41d6d3:	cdq    
  41d6d4:	jns    0x41d744
  41d6d6:	test   DWORD PTR ds:0x7be19742,edi
  41d6dc:	mov    ecx,0x3a71aa44
  41d6e1:	fadd   QWORD PTR [eax-0x6d366cdf]
  41d6e7:	and    BYTE PTR [ebp+0x7faff0a1],ch
  41d6ed:	dec    ebp
  41d6ee:	(bad)  
  41d6ef:	arpl   WORD PTR [ecx+0x7a],di
  41d6f2:	inc    edx
  41d6f3:	je     0x41d770
  41d6f5:	sub    al,dl
  41d6f7:	add    esp,DWORD PTR [eax+0x3d]
  41d6fa:	shl    DWORD PTR [esi],0xb0
  41d6fd:	out    dx,al
  41d6fe:	lods   al,BYTE PTR ds:[esi]
  41d6ff:	aaa    
  41d700:	sbb    edx,eax
  41d702:	leave  
  41d703:	scas   eax,DWORD PTR es:[edi]
  41d704:	sbb    al,0x34
  41d706:	fidiv  DWORD PTR ds:0x2f47ced0
  41d70c:	and    DWORD PTR [edi+0x61d78ece],eax
  41d712:	cmp    al,0x4e
  41d714:	stos   BYTE PTR es:[edi],al
  41d715:	imul   ebp,DWORD PTR [edx+ebx*8-0x5d0e0121],0x465f1c40
  41d720:	pop    ds
  41d721:	fdivr  st,st(6)
  41d723:	push   es
  41d724:	push   ds
  41d725:	or     al,bh
  41d727:	jo     0x41d71d
  41d729:	out    dx,al
  41d72a:	aaa    
  41d72b:	dec    edi
  41d72c:	inc    esp
  41d72d:	rcr    BYTE PTR [esi+0x69],0x1
  41d731:	push   DWORD PTR [ebx-0x7c3d2566]
  41d737:	add    DWORD PTR es:[eax],0xffffffa5
  41d73b:	(bad)  
  41d73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d73e:	push   ecx
  41d73f:	daa    
  41d740:	dec    ecx
  41d741:	xchg   esi,eax
  41d742:	sub    al,0x1
  41d744:	pushf  
  41d745:	push   ecx
  41d746:	nop
  41d747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d748:	push   edx
  41d749:	out    dx,al
  41d74a:	out    0xb,eax
  41d74c:	lds    edi,FWORD PTR [esp-0x7e]
  41d750:	sub    edi,DWORD PTR [esi-0x4cc0783a]
  41d756:	mov    WORD PTR [edi-0x77],ss
  41d759:	int3   
  41d75a:	das    
  41d75b:	lock xchg esi,eax
  41d75d:	movnti DWORD PTR ds:0xd1899e08,eax
  41d764:	fld    QWORD PTR [ebx]
  41d766:	cmp    ch,ah
  41d768:	ja     0x41d700
  41d76a:	ja     0x41d76f
  41d76c:	ret    
  41d76d:	dec    ebx
  41d76e:	cmc    
  41d76f:	rcl    DWORD PTR [esi],1
  41d771:	dec    ebp
  41d772:	stos   DWORD PTR es:[edi],eax
  41d773:	fimul  WORD PTR [edx+0x5d]
  41d776:	mov    cl,0xf
  41d778:	(bad)  
  41d779:	cmp    BYTE PTR [edx],ah
  41d77b:	jl     0x41d73c
  41d77d:	ja     0x41d73f
  41d77f:	add    al,0xf1
  41d781:	push   edx
  41d782:	dec    esp
  41d783:	icebp  
  41d784:	outs   dx,BYTE PTR ds:[esi]
  41d785:	sbb    al,0xce
  41d787:	cld    
  41d788:	push   esp
  41d789:	mov    ebx,0x52725067
  41d78e:	xor    ah,0x73
  41d791:	lea    edx,[ebx-0x44]
  41d794:	mov    cl,0xf5
  41d796:	add    BYTE PTR [eax+0x38],0xd9
  41d79a:	mov    cl,0xb8
  41d79c:	pop    esi
  41d79d:	inc    esp
  41d79e:	cmp    eax,0x93300e19
  41d7a3:	jno    0x41d753
  41d7a5:	adc    al,0x42
  41d7a7:	test   al,0x4f
  41d7a9:	inc    ecx
  41d7aa:	mov    ebx,DWORD PTR [ecx+0x62]
  41d7ad:	pop    ebp
  41d7ae:	or     dl,BYTE PTR [edi+edx*8]
  41d7b1:	imul   esi,esi,0xffffffaf
  41d7b4:	(bad)  
  41d7b5:	xchg   ebx,eax
  41d7b6:	mov    ah,0x32
  41d7b8:	and    esi,esp
  41d7ba:	int    0xae
  41d7bc:	(bad)  
  41d7bd:	aad    0xe0
  41d7bf:	sbb    eax,0x13
	...
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    ecx,ecx
  41d841:	sub    eax,0x3d987b5a
  41d846:	add    DWORD PTR [eax],eax
  41d848:	cmc    
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    bl,bh
  41d84d:	mov    ecx,0xe06e7f7f
  41d852:	mov    ch,0xc6
  41d854:	sbb    BYTE PTR [edi],al
  41d856:	inc    edx
  41d857:	mov    BYTE PTR [edx-0xb69d7fe],al
  41d85d:	and    ebp,DWORD PTR [ecx+0x3feffc0b]
  41d863:	mov    dl,0x3d
  41d865:	add    bh,0xaa
  41d868:	scas   al,BYTE PTR es:[edi]
  41d869:	pop    ebp
  41d86a:	jno    0x41d8e9
  41d86c:	jbe    0x41d87c
  41d86e:	sub    ebx,DWORD PTR [edx+0x79]
  41d871:	inc    ebp
  41d872:	sahf   
  41d873:	mov    al,ds:0x21f79073
  41d878:	lock pop ebx
  41d87a:	xchg   dh,cl
  41d87c:	std    
  41d87d:	nop
  41d87e:	mov    eax,0xa219616b
  41d883:	mov    bl,0x15
  41d885:	mov    ecx,0x96a66c6b
  41d88a:	mov    WORD PTR [ecx-0x39a02f6],ss
  41d890:	sbb    bh,dh
  41d892:	loope  0x41d8f6
  41d894:	pop    es
  41d895:	shr    edx,1
  41d897:	cmc    
  41d898:	or     DWORD PTR [ecx],esp
  41d89a:	lock inc edx
  41d89c:	pop    edx
  41d89d:	rol    BYTE PTR [ebx+0x24a81c0],0x57
  41d8a4:	jp     0x41d900
  41d8a6:	loop   0x41d90d
  41d8a8:	imul   ebp,DWORD PTR [ebp+0x9],0x37
  41d8ac:	jb     0x41d8a7
  41d8ae:	sbb    BYTE PTR [edx],dl
  41d8b0:	and    eax,DWORD PTR [ebp+0x4]
  41d8b3:	fwait
  41d8b4:	(bad)  
  41d8b5:	repnz sub al,0x64
  41d8b8:	pop    es
  41d8b9:	mov    ecx,0xf8bfa667
  41d8be:	daa    
  41d8bf:	test   DWORD PTR [ecx+edx*2],esi
  41d8c2:	add    al,ah
  41d8c4:	outs   dx,BYTE PTR ds:[esi]
  41d8c5:	sub    DWORD PTR [edx-0x54b144ea],eax
  41d8cb:	icebp  
  41d8cc:	lock pop ecx
  41d8ce:	xor    ah,ah
  41d8d0:	neg    DWORD PTR [ebp-0x16]
  41d8d3:	mov    ch,0x7b
  41d8d5:	mov    esi,0x544793b1
  41d8da:	add    BYTE PTR [ecx+0x4a44f9e7],al
  41d8e0:	pop    esi
  41d8e1:	fild   QWORD PTR ds:0x50f992dc
  41d8e7:	cdq    
  41d8e8:	sbb    eax,0x8c75c034
  41d8ed:	dec    edi
  41d8ee:	pop    edx
  41d8ef:	adc    BYTE PTR [edx],bl
  41d8f1:	dec    edi
  41d8f2:	(bad)  
  41d8f3:	mov    al,ds:0x6b427b12
  41d8f8:	jge    0x41d915
  41d8fa:	mov    ds:0xf6c1ec4,al
  41d8ff:	dec    esi
  41d900:	cmp    DWORD PTR [edi],eax
  41d902:	shr    edi,1
  41d904:	ror    BYTE PTR [eax],cl
  41d906:	fs int 0xe8
  41d909:	rcr    BYTE PTR [ebp-0x55653b13],0x16
  41d910:	popf   
  41d911:	js     0x41d8a9
  41d913:	mov    WORD PTR [ebx-0x3ff7d80f],ds
  41d919:	in     eax,0xff
  41d91b:	jge    0x41d991
  41d91d:	pushf  
  41d91e:	sbb    al,0xe1
  41d920:	in     al,0x87
  41d922:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d924:	cmp    bl,BYTE PTR [edx+0x9]
  41d927:	sbb    eax,0x2c5bb920
  41d92c:	push   ebx
  41d92d:	push   0x21
  41d92f:	mov    bh,0x9a
  41d931:	sar    DWORD PTR [ecx+0x5593dfa4],1
  41d937:	imul   esp,DWORD PTR [edi-0x2a9bcd98],0xe7ec4b97
	...
  41d9b1:	add    BYTE PTR [eax],al
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x7201eb1c
  41d9c3:	inc    edx
  41d9c4:	lea    edi,[esi]
  41d9c6:	add    DWORD PTR [eax],eax
  41d9c8:	cmc    
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    BYTE PTR [ebx],ch
  41d9cd:	xchg   ebp,eax
  41d9ce:	mov    bh,0x8d
  41d9d0:	test   al,0xb6
  41d9d2:	call   0xf3c2:0x994c6a51
  41d9d9:	jecxz  0x41d98b
  41d9db:	(bad)  
  41d9dc:	mov    cl,0x31
  41d9de:	lods   eax,DWORD PTR ds:[esi]
  41d9df:	cmp    esp,DWORD PTR [esi]
  41d9e1:	and    eax,0xd333b2a
  41d9e6:	sbb    dh,BYTE PTR [edi+edx*8]
  41d9e9:	in     al,dx
  41d9ea:	fisubr WORD PTR [edi]
  41d9ec:	(bad)  
  41d9ed:	mov    ecx,0x93838df4
  41d9f2:	and    ecx,ebp
  41d9f4:	mov    bh,0x91
  41d9f6:	icebp  
  41d9f7:	dec    esp
  41d9f8:	and    BYTE PTR [ecx+0x3e],al
  41d9fb:	outs   dx,BYTE PTR ds:[esi]
  41d9fc:	or     eax,0x4d36de0b
  41da01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da02:	adc    BYTE PTR [ebx+0x57879eaa],ch
  41da08:	scas   eax,DWORD PTR es:[edi]
  41da09:	dec    edi
  41da0a:	ss test al,0x82
  41da0d:	or     eax,0x31794b73
  41da12:	or     BYTE PTR [esi+ecx*4-0x272a5c07],dh
  41da19:	mov    edx,0xc586da82
  41da1e:	shl    DWORD PTR [edi+0x27],1
  41da21:	ss push edx
  41da23:	adc    al,bl
  41da25:	es jge 0x41da3c
  41da28:	sbb    DWORD PTR [ecx],esi
  41da2a:	cmp    BYTE PTR [ecx],ah
  41da2c:	(bad)  
  41da2d:	neg    edi
  41da2f:	rcl    ch,cl
  41da31:	loop   0x41da6d
  41da33:	popf   
  41da34:	sub    eax,0x8f27ef50
  41da39:	inc    eax
  41da3a:	fidiv  DWORD PTR [edi]
  41da3c:	test   BYTE PTR [ecx],cl
  41da3e:	push   ds
  41da3f:	fdivp  st(7),st
  41da41:	je     0x41da22
  41da43:	sbb    esi,ebp
  41da45:	xor    ebp,DWORD PTR [ecx-0x30]
  41da48:	imul   ebx,DWORD PTR [eax+ecx*1-0x54a9b082],0xfffffff1
  41da50:	sti    
  41da51:	xchg   edi,eax
  41da52:	push   esp
  41da53:	addr16 dec ebp
  41da55:	ret    0xa29a
  41da58:	pop    eax
  41da59:	lods   eax,DWORD PTR ds:[esi]
  41da5a:	loope  0x41da24
  41da5c:	mov    WORD PTR [esi],?
  41da5e:	adc    al,0x87
  41da60:	mov    dh,0x36
  41da62:	and    al,0x7
  41da64:	pop    DWORD PTR ds:0xfb4f8651
  41da6a:	push   cs
  41da6b:	loopne 0x41da7f
  41da6d:	(bad)
  41da70:	adc    WORD PTR ds:0xc3901d35,cx
  41da77:	xchg   BYTE PTR [esi],cl
  41da79:	mov    ch,BYTE PTR ds:0xf058138e
  41da7f:	mov    bl,BYTE PTR [esi]
  41da81:	xchg   esp,eax
  41da82:	aaa    
  41da83:	pop    ecx
  41da84:	and    ah,dl
  41da86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da87:	je     0x41da64
  41da89:	fnsave [esi+0xc]
  41da8c:	paddb  mm1,QWORD PTR [edi+0x505b87f3]
  41da93:	scas   al,BYTE PTR es:[edi]
  41da94:	cwde   
  41da95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da96:	jmp    0x41daa8
  41da98:	ret    
  41da99:	xor    esp,DWORD PTR [ebx-0x6f]
  41da9c:	and    eax,0x4d2127fe
  41daa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa2:	dec    edi
  41daa3:	jmp    0x1359:0xf09f39c8
  41daaa:	into   
  41daab:	lods   eax,DWORD PTR ds:[esi]
  41daac:	xor    eax,0xa179c4b6
  41dab1:	jbe    0x41dadb
  41dab3:	mov    al,cl
  41dab5:	jns    0x41daa2
  41dab7:	mov    cl,0xa0
  41dab9:	int    0x60
  41dabb:	lock xor ebx,DWORD PTR [edx+0xd53182]
	...
  41db32:	add    BYTE PTR [eax],al
  41db34:	sub    esi,edx
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	push   eax
  41db41:	fdiv   DWORD PTR [esi-0x1a]
  41db44:	cmp    BYTE PTR [edi],0x1
  41db47:	add    ch,dh
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    BYTE PTR [ebx+0x209ae3ef],dh
  41db51:	push   esp
  41db52:	cdq    
  41db53:	xor    BYTE PTR [ecx+0x30],dl
  41db56:	aad    0x1
  41db58:	(bad)  
  41db59:	sub    al,0x28
  41db5b:	inc    ecx
  41db5c:	(bad)  
  41db5d:	adc    al,ch
  41db5f:	jno    0x41daf0
  41db61:	dec    edi
  41db62:	call   0x765c:0xb4f73db1
  41db69:	imul   bl
  41db6b:	sbb    DWORD PTR [eax-0x48],esi
  41db6e:	pop    edi
  41db6f:	jmp    DWORD PTR [edi+eiz*2-0x775bd39b]
  41db76:	jmp    0x980e:0x7dc2d345
  41db7d:	push   ebx
  41db7e:	scas   eax,DWORD PTR es:[edi]
  41db7f:	mov    WORD PTR [edx],cs
  41db81:	push   esp
  41db82:	lds    edx,FWORD PTR [edi-0x56]
  41db85:	push   cs
  41db86:	fdivr  DWORD PTR [eax+0x18c43c6f]
  41db8c:	and    eax,0x227b97fb
  41db91:	mov    BYTE PTR [eax-0x64848319],al
  41db97:	fcmove st,st(6)
  41db99:	es mov edi,0x1308653a
  41db9f:	ror    BYTE PTR [esi+0x46],0x2d
  41dba3:	xchg   edi,eax
  41dba4:	and    BYTE PTR [ecx-0x16],0xce
  41dba8:	xchg   BYTE PTR ds:0x3c5a64a9,dh
  41dbae:	loopne 0x41dbad
  41dbb0:	cmc    
  41dbb1:	xchg   edi,eax
  41dbb2:	inc    esp
  41dbb3:	sbb    ch,cl
  41dbb5:	shr    DWORD PTR [ecx-0x29021026],1
  41dbbb:	les    eax,FWORD PTR [edi]
  41dbbd:	repz push ebx
  41dbbf:	mov    ebx,0x8e1a4b78
  41dbc4:	daa    
  41dbc5:	into   
  41dbc6:	rcl    BYTE PTR [ecx+eax*2],1
  41dbc9:	adc    BYTE PTR [esi+0x2e],0xea
  41dbcd:	inc    eax
  41dbce:	scas   eax,DWORD PTR es:[edi]
  41dbcf:	pop    ebp
  41dbd0:	cmp    DWORD PTR [esi],esi
  41dbd2:	mov    esp,0x57a3aec2
  41dbd7:	dec    ebx
  41dbd8:	imul   DWORD PTR [edi+0x6e4630be]
  41dbde:	or     eax,0xae4cf5ce
  41dbe3:	mov    eax,0xe08e9792
  41dbe8:	fldlg2 
  41dbea:	fistp  DWORD PTR [edi]
  41dbec:	stos   DWORD PTR es:[edi],eax
  41dbed:	cmp    eax,0xa9b2dd17
  41dbf2:	mov    eax,?
  41dbf4:	dec    edi
  41dbf5:	ins    DWORD PTR es:[edi],dx
  41dbf6:	add    al,0xf9
  41dbf8:	xchg   edx,eax
  41dbf9:	push   ebx
  41dbfa:	xchg   edi,eax
  41dbfb:	push   esi
  41dbfc:	inc    esp
  41dbfd:	fdivr  st(5),st
  41dbff:	shr    DWORD PTR [ecx],cl
  41dc01:	sbb    al,0x6
  41dc03:	test   al,0x1
  41dc05:	imul   esp,DWORD PTR ds:0x8c949c13,0xd795acb2
  41dc0f:	cmp    edx,DWORD PTR [esi]
  41dc11:	outs   dx,BYTE PTR fs:[esi]
  41dc13:	rcl    BYTE PTR [eax],0x26
  41dc16:	imul   edi,DWORD PTR [edi-0x16],0x40415019
  41dc1d:	jg     0x41dc67
  41dc1f:	aam    0xfe
  41dc21:	out    dx,eax
  41dc22:	sub    ebx,edi
  41dc24:	ss mov al,bh
  41dc27:	in     al,dx
  41dc28:	bound  ecx,QWORD PTR [esi+0x7271aef4]
  41dc2e:	je     0x41dc5a
  41dc30:	not    BYTE PTR [esi-0x79]
  41dc33:	push   ecx
  41dc34:	fdivr  DWORD PTR [esi-0xbdba765]
  41dc3a:	push   esp
  41dc3b:	ret    0xbf59
  41dc3e:	hlt    
  41dc3f:	inc    eax
  41dc40:	sub    eax,0x0
	...
  41dcb1:	add    BYTE PTR [eax],al
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x5e
  41dcc1:	int3   
  41dcc2:	std    
  41dcc3:	pusha  
  41dcc4:	ja     0x41dd06
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    BYTE PTR [ebp+edx*4+0x3fc19ffc],cl
  41dcd2:	cwde   
  41dcd3:	jmp    0x749b2721
  41dcd8:	xchg   edx,eax
  41dcd9:	loop   0x41dd50
  41dcdb:	push   cs
  41dcdc:	outs   dx,DWORD PTR ds:[esi]
  41dcdd:	out    dx,al
  41dcde:	jge    0x41dcbb
  41dce0:	jge    0x41dc96
  41dce2:	and    dh,BYTE PTR [ebx]
  41dce4:	dec    edx
  41dce5:	add    dh,BYTE PTR [ebx-0x6b]
  41dce8:	or     eax,0x28da30fd
  41dced:	mov    ss,edx
  41dcef:	sub    DWORD PTR [esi-0x279ed314],edi
  41dcf5:	mov    cl,0xd4
  41dcf7:	sub    ch,BYTE PTR [esi+0x9b72496]
  41dcfd:	retf   
  41dcfe:	mov    cl,0x64
  41dd00:	in     al,0xbe
  41dd02:	adc    al,0xd5
  41dd04:	lea    eax,[esi+0x47]
  41dd07:	ja     0x41dce9
  41dd09:	sub    BYTE PTR [edi*4-0x345a2474],al
  41dd10:	jno    0x41dd49
  41dd12:	push   ebx
  41dd13:	inc    edi
  41dd14:	xchg   edi,eax
  41dd15:	fadd   QWORD PTR [eax+0x51]
  41dd18:	jnp    0x41dcd2
  41dd1a:	sbb    eax,0x5609b803
  41dd1f:	lahf   
  41dd20:	and    bh,cl
  41dd22:	call   0x177b182d
  41dd27:	fadd   DWORD PTR [edx-0x179aad84]
  41dd2d:	(bad)  
  41dd2e:	neg    BYTE PTR [esi+ecx*4]
  41dd31:	xchg   ebp,eax
  41dd32:	test   eax,0xe1758634
  41dd37:	xor    eax,0xe7724a1d
  41dd3c:	outs   dx,BYTE PTR ds:[esi]
  41dd3d:	add    BYTE PTR [esi-0x1e],cl
  41dd40:	inc    esp
  41dd41:	fadd   st,st(0)
  41dd43:	js     0x41dcf5
  41dd45:	push   ecx
  41dd46:	xor    DWORD PTR [edi],eax
  41dd48:	cli    
  41dd49:	loop   0x41dd09
  41dd4b:	outs   dx,DWORD PTR ds:[esi]
  41dd4c:	enter  0x9d26,0xcf
  41dd50:	adc    esi,edi
  41dd52:	add    bh,0x72
  41dd55:	xor    ah,dl
  41dd57:	enter  0xfa57,0x5e
  41dd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd5c:	sbb    BYTE PTR [edi+0x441b2599],dh
  41dd62:	shl    esp,0x92
  41dd65:	sbb    ah,bh
  41dd67:	sbb    DWORD PTR [eax-0x77],eax
  41dd6a:	mov    ds:0x519fa67d,eax
  41dd6f:	cmp    BYTE PTR [esi],ah
  41dd71:	sbb    BYTE PTR ss:[ebx+0x4559d188],al
  41dd78:	sbb    ah,dh
  41dd7a:	lock mov dh,0x33
  41dd7d:	or     esp,ebx
  41dd7f:	xchg   BYTE PTR [esi],cl
  41dd81:	icebp  
  41dd82:	je     0x41dd32
  41dd84:	in     al,0x5a
  41dd86:	int3   
  41dd87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd88:	in     eax,dx
  41dd89:	jae    0x41dd10
  41dd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8c:	loope  0x41dded
  41dd8e:	loop   0x41dd48
  41dd90:	sbb    DWORD PTR [ebx+0x47e06bc5],edi
  41dd96:	adc    ah,al
  41dd98:	add    eax,0x2d5b2a30
  41dd9d:	push   ebp
  41dd9e:	ins    DWORD PTR es:[edi],dx
  41dd9f:	xchg   ecx,eax
  41dda0:	pop    ebx
  41dda1:	mov    cl,0x18
  41dda3:	mov    cl,0xe2
  41dda5:	mov    ds:0x4ca8fe93,al
  41ddaa:	jp     0x41dd2c
  41ddac:	ret    
  41ddad:	jecxz  0x41dd54
  41ddaf:	sub    dh,dl
  41ddb1:	(bad)  [edx+esi*8]
  41ddb4:	xchg   ebx,ebx
  41ddb6:	xchg   ebx,eax
  41ddb7:	clc    
  41ddb8:	inc    ecx
  41ddb9:	jmp    0x41de15
  41ddbb:	std    
  41ddbc:	test   ch,bh
  41ddbe:	popf   
  41ddbf:	js     0x41ddcb
	...
  41de31:	add    BYTE PTR [eax],al
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	sub    eax,0x6cb0425c
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	cmc    
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    BYTE PTR [eax],al
  41de4d:	stos   BYTE PTR es:[edi],al
  41de4e:	sub    ah,BYTE PTR [ecx]
  41de50:	out    dx,eax
  41de51:	imul   eax,DWORD PTR [edx],0xffffff9c
  41de54:	pop    edi
  41de55:	daa    
  41de56:	mov    ebx,0x3ac58109
  41de5b:	push   0xffffffcd
  41de5d:	int3   
  41de5e:	das    
  41de5f:	xchg   ebp,eax
  41de60:	adc    al,0x6a
  41de62:	popf   
  41de63:	jbe    0x41de91
  41de65:	mov    ?,edx
  41de67:	hlt    
  41de68:	mov    eax,ds:0x3979a9dc
  41de6d:	les    eax,FWORD PTR [ecx+0x8]
  41de70:	xlat   BYTE PTR ds:[ebx]
  41de71:	xor    BYTE PTR [ebx-0x1d],0xea
  41de75:	cld    
  41de76:	pop    eax
  41de77:	into   
  41de78:	mov    ecx,0x58242e0
  41de7d:	push   ss
  41de7e:	mov    ecx,0x2655c7bb
  41de83:	cmp    ecx,esi
  41de85:	lods   eax,DWORD PTR ds:[esi]
  41de86:	cmp    BYTE PTR [esi-0x49de1966],al
  41de8c:	sar    DWORD PTR [ebx-0x2af20017],cl
  41de92:	fild   DWORD PTR [ecx+0x31]
  41de95:	or     DWORD PTR [edx-0x14],ebx
  41de98:	stos   BYTE PTR es:[edi],al
  41de99:	inc    DWORD PTR [esi-0x6f82f402]
  41de9f:	ja     0x41de5a
  41dea1:	fstp   DWORD PTR [edi+0x58]
  41dea4:	call   0x3a8a08d6
  41dea9:	pop    edx
  41deaa:	cmc    
  41deab:	xchg   esi,edx
  41dead:	xchg   edi,eax
  41deae:	ins    DWORD PTR es:[edi],dx
  41deaf:	mov    dh,0xe4
  41deb1:	sub    DWORD PTR [ebp-0x458ab43c],edx
  41deb7:	cdq    
  41deb8:	gs mov eax,0x5e848aae
  41debe:	cld    
  41debf:	sbb    ebx,DWORD PTR [ecx+0x780a8c74]
  41dec5:	(bad)  
  41dec6:	jae    0x41de81
  41dec8:	mov    dl,0x9
  41deca:	repz fs (bad) 
  41decd:	stos   DWORD PTR es:[edi],eax
  41dece:	inc    esi
  41decf:	push   eax
  41ded0:	mov    ah,0xbd
  41ded2:	and    ch,BYTE PTR [ebx-0x66ac9f1c]
  41ded8:	mov    ebp,0xbd35adb
  41dedd:	xor    ebp,DWORD PTR [ebx+edi*1-0x68]
  41dee1:	lea    edx,[edi+edi*8-0x5af29982]
  41dee8:	mov    eax,0x4c4ca8b0
  41deed:	adc    al,cl
  41deef:	cmp    BYTE PTR ds:0x1e27b014,ch
  41def5:	mov    edx,0x63449d48
  41defa:	sub    BYTE PTR [edi-0x208248ce],dh
  41df00:	mov    ds:0x266f5b97,eax
  41df05:	dec    BYTE PTR [eax]
  41df07:	add    al,0x5e
  41df09:	or     esi,DWORD PTR [esi+0xf512889]
  41df0f:	mov    edx,0x471e5a9b
  41df14:	add    BYTE PTR [eax+0x21],cl
  41df17:	rcr    esi,1
  41df19:	mov    dh,0xc0
  41df1b:	push   eax
  41df1c:	pop    ds
  41df1d:	(bad)  
  41df1e:	ins    BYTE PTR es:[edi],dx
  41df1f:	mov    eax,0x920a38a
  41df24:	mov    al,ds:0x4db622d0
  41df29:	xchg   BYTE PTR ds:0x2580835b,bh
  41df2f:	push   esp
  41df30:	popf   
  41df31:	sub    dh,0x87
  41df34:	lock stc 
  41df36:	sbb    ah,BYTE PTR [esi-0xa]
  41df39:	pop    edi
  41df3a:	fstp   TBYTE PTR [edx-0x1ea4b64]
  41df40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41dfb1:	add    BYTE PTR [eax],al
  41dfb3:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	jno    0x41dff3
  41dfc2:	inc    edx
  41dfc3:	adc    DWORD PTR [ecx+0x42],esp
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [ecx+0x67fb06a7],ah
  41dfd1:	sub    bh,0x3e
  41dfd4:	out    0x92,al
  41dfd6:	rol    DWORD PTR [ecx+ebp*8-0x8ad8c3c],cl
  41dfdd:	fstp   DWORD PTR [esi+0x26]
  41dfe0:	xor    bh,BYTE PTR [edi+0x7c]
  41dfe3:	cmp    esi,DWORD PTR [ebx]
  41dfe5:	dec    edi
  41dfe6:	fwait
  41dfe7:	xchg   ecx,eax
  41dfe8:	xor    dl,BYTE PTR [eax]
  41dfea:	push   ebx
  41dfeb:	pop    es
  41dfec:	fnsave [edi+0x20]
  41dfef:	stos   BYTE PTR es:[edi],al
  41dff0:	lahf   
  41dff1:	call   0x229b7950
  41dff6:	test   eax,0xdae4b30f
  41dffb:	pusha  
  41dffc:	icebp  
  41dffd:	inc    ebp
  41dffe:	call   0x4e08:0xbf96c497
  41e005:	jnp    0x41e026
  41e007:	lods   al,BYTE PTR ds:[esi]
  41e008:	outs   dx,BYTE PTR ds:[esi]
  41e009:	jmp    0x913682e
  41e00e:	cld    
  41e00f:	add    eax,0x450f9692
  41e014:	call   0x304b:0x89a074ea
  41e01b:	and    BYTE PTR [ebx+0x7a],dl
  41e01e:	ret    0x8a27
  41e021:	cdq    
  41e022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e023:	adc    esp,edi
  41e025:	retf   
  41e026:	jo     0x41dfc5
  41e028:	mov    edi,0xfd2cd870
  41e02d:	retf   0x58b
  41e030:	(bad)  
  41e031:	jmp    0x41dfdb
  41e033:	out    dx,al
  41e034:	ins    BYTE PTR es:[edi],dx
  41e035:	hlt    
  41e036:	mov    eax,0x9d55fe3
  41e03b:	mov    ss,WORD PTR [edi]
  41e03d:	fadd   QWORD PTR [ebx+0x7c]
  41e040:	outs   dx,BYTE PTR ds:[esi]
  41e041:	cli    
  41e042:	inc    esi
  41e043:	repnz inc esi
  41e045:	mov    ecx,0x3daeabbf
  41e04a:	stos   DWORD PTR es:[edi],eax
  41e04b:	inc    edi
  41e04c:	or     ebp,ebp
  41e04e:	xor    DWORD PTR [edx],ecx
  41e050:	and    al,0x68
  41e052:	or     eax,0x6894c54b
  41e057:	(bad)  
  41e058:	loope  0x41e0a1
  41e05a:	or     BYTE PTR [edi+ebx*4-0x643a3bab],bl
  41e061:	sub    BYTE PTR [ebp+ebx*1-0x3eee3855],dl
  41e068:	pop    esi
  41e069:	adc    ebp,DWORD PTR [ebx+0x3d817316]
  41e06f:	fidiv  WORD PTR [ecx-0x160c724b]
  41e075:	mov    al,ds:0xb1079daa
  41e07a:	in     al,0xd8
  41e07c:	aas    
  41e07d:	xor    eax,0x559fe720
  41e082:	dec    edx
  41e083:	add    eax,0xbc709e7d
  41e088:	adc    al,0x56
  41e08a:	mov    ebx,ebp
  41e08c:	aaa    
  41e08d:	arpl   WORD PTR [ecx-0x79],dx
  41e090:	dec    esi
  41e091:	fst    DWORD PTR [edx-0x20]
  41e094:	mov    ebx,0x56fe0247
  41e099:	jo     0x41e0f7
  41e09b:	push   eax
  41e09c:	shl    BYTE PTR [esi],0x40
  41e09f:	jb     0x41e0d8
  41e0a1:	mov    ds:0x5c8e79e6,eax
  41e0a6:	(bad)  
  41e0a7:	ss cmp eax,0x3359944c
  41e0ad:	adc    dl,BYTE PTR [edx+0x46e74f10]
  41e0b3:	inc    edi
  41e0b4:	sub    bl,BYTE PTR ds:0x5d015035
  41e0ba:	clc    
  41e0bb:	mov    ds:0xc7fda09b,eax
  41e0c0:	add    BYTE PTR ds:[eax],al
	...
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	jmp    0x41e11b
  41e142:	lods   eax,DWORD PTR ds:[esi]
  41e143:	jg     0x41e19b
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [edx],bl
  41e14d:	out    0x6e,al
  41e14f:	push   esi
  41e150:	cdq    
  41e151:	mov    bh,0xe3
  41e153:	ja     0x41e171
  41e155:	loope  0x41e1bd
  41e157:	mov    esi,0xca971a03
  41e15c:	fimul  DWORD PTR [ecx-0x19]
  41e15f:	mov    dh,0x9a
  41e161:	in     al,dx
  41e162:	push   ecx
  41e163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e164:	jno    0x41e1e0
  41e166:	mov    ebp,0x4cd9b65a
  41e16b:	cld    
  41e16c:	dec    esp
  41e16d:	pop    ss
  41e16e:	jp     0x41e0f6
  41e170:	lahf   
  41e171:	stos   DWORD PTR es:[edi],eax
  41e172:	push   edx
  41e173:	jo     0x41e186
  41e175:	scas   eax,DWORD PTR es:[edi]
  41e176:	mov    esp,0x514c3420
  41e17b:	les    ebx,FWORD PTR ds:0x40eb20d1
  41e181:	leave  
  41e182:	and    ebp,edi
  41e184:	add    dh,BYTE PTR [edx+0xa]
  41e187:	dec    eax
  41e188:	in     al,0x31
  41e18a:	push   esp
  41e18b:	hlt    
  41e18c:	iret   
  41e18d:	jge    0x41e10f
  41e18f:	fnstsw WORD PTR [ecx-0x2ac8a88d]
  41e195:	sbb    DWORD PTR [edx-0x3766a7bc],ebp
  41e19b:	ins    BYTE PTR es:[edi],dx
  41e19c:	retf   
  41e19d:	mov    WORD PTR [ebp+0x2e],gs
  41e1a0:	pop    eax
  41e1a1:	retf   
  41e1a2:	idiv   DWORD PTR [ecx]
  41e1a4:	add    DWORD PTR [ecx+0x69],0xe7a5a09e
  41e1ab:	pop    ebx
  41e1ac:	and    al,0xf4
  41e1ae:	ins    BYTE PTR es:[edi],dx
  41e1af:	or     eax,0x7dd572b
  41e1b4:	xchg   edi,eax
  41e1b5:	mov    ah,0x60
  41e1b7:	sti    
  41e1b8:	inc    esi
  41e1b9:	mov    WORD PTR [esi-0x22],ds
  41e1bc:	adc    dl,BYTE PTR [esi+0x41]
  41e1bf:	lods   eax,DWORD PTR ds:[esi]
  41e1c0:	shl    ch,cl
  41e1c2:	mov    ecx,DWORD PTR [ecx+0x4bf8be6f]
  41e1c8:	xor    al,0xbb
  41e1ca:	sub    BYTE PTR [edi+edi*8],bl
  41e1cd:	call   0x9e31:0x91429dd0
  41e1d4:	adc    BYTE PTR [ebp+0x37],ch
  41e1d7:	sub    BYTE PTR [ebx-0x62],dl
  41e1da:	or     BYTE PTR [eax],ah
  41e1dc:	or     edi,DWORD PTR [ecx+ebp*8-0x27d42d6]
  41e1e3:	adc    al,0xa7
  41e1e5:	or     al,0xcb
  41e1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1e8:	xchg   esi,eax
  41e1e9:	push   ds
  41e1ea:	inc    edx
  41e1eb:	xor    al,0xac
  41e1ed:	fwait
  41e1ee:	jmp    0x41e262
  41e1f0:	aas    
  41e1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f2:	jns    0x41e23a
  41e1f4:	cmp    BYTE PTR [edi-0x3a9c10c],dh
  41e1fa:	ret    0xc29b
  41e1fd:	or     ebp,ebp
  41e1ff:	mov    bl,0x94
  41e201:	mov    ds:0xb1239997,eax
  41e206:	dec    edi
  41e207:	add    eax,0x4711a303
  41e20c:	test   DWORD PTR [esi-0x7a],esp
  41e20f:	xor    edi,DWORD PTR [esp-0x744f7ff1]
  41e216:	dec    edi
  41e217:	or     DWORD PTR [edi+0x6],esi
  41e21a:	jmp    0xdc20:0x3cfd0d19
  41e221:	mov    bl,0xa8
  41e223:	out    0x70,eax
  41e225:	jge    0x41e232
  41e227:	cdq    
  41e228:	in     al,0xbf
  41e22a:	imul   ebp,DWORD PTR [esi+eax*1-0x40],0xced178be
  41e232:	in     al,0xbc
  41e234:	aam    0xbd
  41e236:	dec    ebx
  41e237:	inc    esp
  41e238:	jg     0x41e1d4
  41e23a:	test   ecx,0x1cd1ccb
  41e240:	jle    0x41e242
	...
  41e2b2:	add    BYTE PTR [eax],al
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	xchg   esp,edx
  41e2c2:	fwait
  41e2c3:	daa    
  41e2c4:	dec    ebx
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	cmc    
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [ebx],ch
  41e2cd:	dec    ebp
  41e2ce:	dec    esi
  41e2cf:	test   dl,ch
  41e2d1:	mov    BYTE PTR [ecx+eiz*8-0x11320874],ah
  41e2d8:	bnd jmp 0x41e314
  41e2db:	nop
  41e2dc:	loopne 0x41e2c8
  41e2de:	imul   esi,DWORD PTR [edx],0x61c9e092
  41e2e4:	sbb    ecx,DWORD PTR ds:0x9ca23d4d
  41e2ea:	loopne 0x41e28f
  41e2ec:	mov    ds:0xfc73832a,eax
  41e2f1:	out    dx,eax
  41e2f2:	jmp    0xe1d0ccd8
  41e2f7:	adc    BYTE PTR [ecx+0x45],0x99
  41e2fb:	sub    eax,0xfb109a11
  41e300:	add    DWORD PTR [eax+eiz*2],ebp
  41e303:	lods   eax,DWORD PTR ds:[esi]
  41e304:	dec    ecx
  41e305:	outs   dx,DWORD PTR ds:[esi]
  41e306:	in     al,dx
  41e307:	pop    ds
  41e308:	(bad)  
  41e309:	mov    sp,WORD PTR fs:[ebx+0x6f7b40a4]
  41e311:	lds    edi,FWORD PTR [ebx-0x281fc814]
  41e317:	mov    ebx,0xb0b51936
  41e31c:	pop    esp
  41e31d:	fs jb  0x41e37a
  41e320:	popa   
  41e321:	mov    bh,0x7
  41e323:	add    edi,edi
  41e325:	in     eax,dx
  41e326:	xor    eax,0x1209015b
  41e32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32c:	sahf   
  41e32d:	(bad)  
  41e32e:	add    BYTE PTR [ecx],al
  41e330:	iret   
  41e331:	pop    ebp
  41e332:	mov    ds:0x905594bd,eax
  41e337:	leave  
  41e338:	jae    0x41e381
  41e33a:	rol    al,cl
  41e33c:	fidivr DWORD PTR [esi+0x278f7ad0]
  41e342:	jne    0x41e328
  41e344:	inc    ebx
  41e345:	imul   ebx,DWORD PTR [esi+edi*2-0x46],0x59
  41e34a:	fdiv   DWORD PTR [edi+0x715f88ec]
  41e350:	stos   DWORD PTR es:[edi],eax
  41e351:	cmc    
  41e352:	(bad)  
  41e353:	das    
  41e354:	call   0xbea59aa2
  41e359:	adc    ch,BYTE PTR cs:[eax+0x695ea24e]
  41e360:	stos   BYTE PTR es:[edi],al
  41e361:	inc    ebx
  41e362:	mov    cl,0x33
  41e364:	test   eax,0x3d12e59d
  41e369:	or     al,0xd5
  41e36b:	push   ecx
  41e36c:	ret    
  41e36d:	pop    ss
  41e36e:	sbb    DWORD PTR [ebx],edi
  41e370:	cmc    
  41e371:	dec    esi
  41e372:	xchg   BYTE PTR [ebp-0x1297800e],cl
  41e378:	scas   al,BYTE PTR es:[edi]
  41e379:	or     edx,DWORD PTR [eax]
  41e37b:	adc    DWORD PTR ds:0x4d243245,esi
  41e381:	(bad)  
  41e382:	push   edi
  41e383:	mov    ah,0x72
  41e385:	pop    esi
  41e386:	dec    esp
  41e387:	aaa    
  41e388:	xchg   esi,ebp
  41e38a:	xor    eax,0x63f49641
  41e38f:	push   cs
  41e390:	mov    dl,BYTE PTR [esi]
  41e392:	mov    BYTE PTR [ecx-0x5b],ch
  41e395:	fmul   QWORD PTR [eax+0x66]
  41e398:	repnz rol esp,0x7d
  41e39c:	lahf   
  41e39d:	fimul  WORD PTR [esi-0x1f4d24e3]
  41e3a3:	mov    BYTE PTR [edi],bh
  41e3a5:	(bad)  
  41e3a6:	adc    al,0x7a
  41e3a8:	inc    ebp
  41e3a9:	push   es
  41e3aa:	inc    ecx
  41e3ab:	or     ebx,DWORD PTR [edi]
  41e3ad:	enter  0x3c6c,0x34
  41e3b1:	fsqrt  
  41e3b3:	or     edi,ecx
  41e3b5:	out    0x7c,eax
  41e3b7:	mov    ecx,ebx
  41e3b9:	lods   eax,DWORD PTR ds:[esi]
  41e3ba:	or     eax,0x9a21a8ea
  41e3bf:	fcmovnbe st,st(1)
	...
  41e431:	add    BYTE PTR [eax],al
  41e433:	add    dh,dh
  41e435:	rcl    BYTE PTR ss:[edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0xb9bfead,al
  41e442:	add    al,BYTE PTR [esi+0x14540]
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    BYTE PTR [ecx],cl
  41e44d:	xchg   edx,eax
  41e44e:	jp     0x41e4ac
  41e450:	xor    ebp,0x7d
  41e453:	cmp    eax,0x15852a62
  41e458:	pop    esi
  41e459:	sbb    edx,DWORD PTR [esi-0x2ce4e12c]
  41e45f:	sub    BYTE PTR [ebp-0x3908fe5b],0x97
  41e466:	push   cs
  41e467:	popa   
  41e468:	sub    BYTE PTR [edx-0x6a],ah
  41e46b:	sub    edx,DWORD PTR [edi]
  41e46d:	jmp    0x16a31000
  41e472:	out    dx,al
  41e473:	add    al,0xa4
  41e475:	xchg   edi,eax
  41e476:	daa    
  41e477:	mov    dh,0x63
  41e479:	push   ss
  41e47a:	sbb    esi,DWORD PTR [ebx+0x4d564186]
  41e480:	mov    eax,0x9dd8a81c
  41e485:	pop    esi
  41e486:	clc    
  41e487:	pushf  
  41e488:	pop    esp
  41e489:	pusha  
  41e48a:	je     0x41e41a
  41e48c:	les    ecx,FWORD PTR [edx+0x22]
  41e48f:	jge    0x41e443
  41e491:	jmp    0x41e428
  41e493:	cmp    ah,BYTE PTR [edi+eax*1+0x64]
  41e497:	sbb    DWORD PTR [eax+0x7819b416],esp
  41e49d:	push   0x63a1a80f
  41e4a2:	mov    cl,BYTE PTR [esi]
  41e4a4:	pop    ebx
  41e4a5:	imul   edx,DWORD PTR [ebp-0x8],0xea566b45
  41e4ac:	out    0x63,eax
  41e4ae:	push   esi
  41e4af:	sahf   
  41e4b0:	jmp    FWORD PTR [edx-0x25253135]
  41e4b6:	cwde   
  41e4b7:	dec    edx
  41e4b8:	jg     0x41e4b1
  41e4ba:	ret    
  41e4bb:	lahf   
  41e4bc:	dec    eax
  41e4bd:	shr    cl,cl
  41e4bf:	mov    ebx,0xbab1b944
  41e4c4:	mov    esi,0x3faaf910
  41e4c9:	cmp    esi,DWORD PTR [eax-0x3a]
  41e4cc:	mov    dl,0xcd
  41e4ce:	imul   ebp,DWORD PTR [ebx+0x6af6fc7b],0x2088824
  41e4d8:	mov    ecx,0x1907769a
  41e4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4de:	pop    DWORD PTR [ebx-0x2e]
  41e4e1:	pop    ebx
  41e4e2:	gs jae 0x41e469
  41e4e5:	pushf  
  41e4e6:	mov    al,0xb3
  41e4e8:	fsub   st,st(7)
  41e4ea:	mov    ebx,0x8aff93a1
  41e4ef:	add    esp,DWORD PTR [ecx]
  41e4f1:	test   BYTE PTR [edx+0x2e],ch
  41e4f4:	(bad)  
  41e4f6:	in     al,dx
  41e4f7:	in     al,0x2a
  41e4f9:	and    al,0xa
  41e4fb:	imul   edx,DWORD PTR [ecx-0x74884e42],0xffffffbd
  41e502:	jne    0x41e4cc
  41e504:	sar    DWORD PTR [eax+0x6ff59d0d],1
  41e50a:	adc    BYTE PTR [esp+eax*4],ah
  41e50d:	nop
  41e50e:	add    ax,0xedf9
  41e512:	jge    0x41e552
  41e514:	and    eax,0xb4acaae7
  41e519:	dec    ebx
  41e51a:	dec    edi
  41e51b:	lods   al,BYTE PTR ds:[esi]
  41e51c:	or     dl,al
  41e51e:	cmc    
  41e51f:	stos   DWORD PTR es:[edi],eax
  41e520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e521:	sbb    al,0xfd
  41e523:	mov    ecx,0xfeb401f4
  41e528:	add    al,0x43
  41e52a:	outs   dx,BYTE PTR ds:[esi]
  41e52b:	loope  0x41e4e7
  41e52d:	imul   DWORD PTR [esi-0x4b664429]
  41e533:	jecxz  0x41e565
  41e535:	jl     0x41e5b3
  41e537:	sub    ecx,ebp
  41e539:	cs loop 0x41e51b
  41e53c:	pusha  
  41e53d:	aaa    
  41e53e:	lods   al,BYTE PTR ds:[esi]
  41e53f:	hlt    
  41e540:	cld    
	...
  41e5b1:	add    BYTE PTR [eax],al
  41e5b3:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz mov ebp,0x355041d4
  41e5c5:	inc    esi
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	cmc    
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    dl,dh
  41e5cd:	jne    0x41e566
  41e5cf:	jbe    0x41e560
  41e5d1:	in     eax,dx
  41e5d2:	dec    eax
  41e5d3:	je     0x41e5c8
  41e5d5:	scas   al,BYTE PTR es:[edi]
  41e5d6:	retf   0x8aac
  41e5d9:	adc    dh,cl
  41e5db:	cs test edi,ecx
  41e5de:	xchg   ebp,eax
  41e5df:	cmp    eax,0xf2221a99
  41e5e4:	jo     0x41e620
  41e5e6:	inc    eax
  41e5e7:	sub    al,BYTE PTR [esi]
  41e5e9:	pandn  mm3,QWORD PTR [ebx+eax*4]
  41e5ed:	mov    ebp,0x249a70d9
  41e5f2:	iret   
  41e5f3:	or     eax,0x326881cf
  41e5f8:	jg     0x41e5cf
  41e5fa:	mov    edi,fs
  41e5fc:	imul   esi,DWORD PTR [edi],0xffffff90
  41e5ff:	hlt    
  41e600:	jae    0x41e60a
  41e602:	pop    ss
  41e603:	arpl   WORD PTR [eax],sp
  41e605:	je     0x41e5b3
  41e607:	(bad)  
  41e608:	mov    dh,0x4e
  41e60a:	je     0x41e601
  41e60c:	push   cs
  41e60d:	push   esp
  41e60e:	ficom  WORD PTR [ebx-0x2d]
  41e611:	xor    al,0x44
  41e613:	fstp   QWORD PTR [ebp+0x1b]
  41e616:	lea    esi,[esi+ecx*8]
  41e619:	cld    
  41e61a:	and    BYTE PTR [ebp+0x550ecf97],dh
  41e620:	(bad)  
  41e622:	add    al,0x14
  41e624:	dec    ebp
  41e625:	jg     0x41e640
  41e627:	adc    ch,BYTE PTR [esi+0x28b593d3]
  41e62d:	jns    0x41e646
  41e62f:	or     eax,0x8f2e93b3
  41e634:	js     0x41e5fa
  41e636:	cmp    esp,ecx
  41e638:	mov    gs,esi
  41e63a:	push   ecx
  41e63b:	icebp  
  41e63c:	call   0x1ce7:0x8b742a75
  41e643:	pop    edi
  41e644:	scas   eax,DWORD PTR es:[edi]
  41e645:	cmp    eax,ebx
  41e647:	stc    
  41e648:	inc    esp
  41e649:	cmp    al,0x91
  41e64b:	aam    0x93
  41e64d:	mov    al,ds:0x5dc1bba9
  41e652:	test   dl,cl
  41e654:	nop
  41e655:	mov    ecx,0xf46e8310
  41e65a:	lahf   
  41e65b:	xchg   esi,eax
  41e65c:	sub    bl,BYTE PTR [esi+0x56ea9fc1]
  41e662:	cld    
  41e663:	mov    bh,0x50
  41e665:	(bad)  
  41e666:	addr16 mov ah,0xf8
  41e669:	rol    DWORD PTR [ecx+0x693b4dfa],cl
  41e66f:	leave  
  41e670:	in     eax,dx
  41e671:	sti    
  41e672:	pop    ss
  41e673:	in     al,0xdd
  41e675:	cmp    dl,BYTE PTR [ecx-0x49]
  41e678:	push   esi
  41e679:	imul   eax,DWORD PTR [ebx+0x17382ae3],0xbe8cdb31
  41e683:	push   ebx
  41e684:	cmp    eax,0xdbd282e0
  41e689:	jno    0x41e6ea
  41e68b:	inc    edi
  41e68c:	jo     0x41e6e1
  41e68e:	into   
  41e68f:	or     al,0x35
  41e691:	adc    DWORD PTR [edi],eax
  41e693:	jbe    0x41e693
  41e695:	shr    ebx,cl
  41e697:	(bad)  
  41e698:	ins    DWORD PTR es:[edi],dx
  41e699:	xchg   esp,eax
  41e69a:	ja     0x41e64e
  41e69c:	jl     0x41e6e2
  41e69e:	and    eax,0xbbe4594f
  41e6a3:	and    al,0x13
  41e6a5:	jmp    0x23d3:0xf16916f6
  41e6ac:	push   cs
  41e6ad:	cld    
  41e6ae:	ffreep st(4)
  41e6b0:	stc    
  41e6b1:	jmp    0x5a0d:0xfc3c97d9
  41e6b8:	jmp    0x45a3:0x9b5516dc
  41e6bf:	xor    eax,0x36
	...
  41e734:	and    al,0xce
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0x4637618c]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [esi],ch
  41e74d:	sbb    ch,dl
  41e74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e750:	jbe    0x41e76c
  41e752:	dec    ecx
  41e753:	out    dx,eax
  41e754:	lea    ecx,[ecx+0x68]
  41e757:	push   ebx
  41e758:	mov    DWORD PTR [esi+0x19f489a9],ebp
  41e75e:	add    DWORD PTR [ebp-0x19c8491c],edi
  41e764:	mov    ebx,0x3057945f
  41e769:	fild   WORD PTR [ebp-0x1e]
  41e76c:	je     0x41e7b0
  41e76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e76f:	inc    edx
  41e770:	sbb    eax,0xa4e511e
  41e775:	cmp    ah,BYTE PTR [edi-0x20d451f5]
  41e77b:	cmp    ah,BYTE PTR [edx]
  41e77d:	les    ebp,FWORD PTR [edi-0x7136d50e]
  41e783:	add    dl,BYTE PTR [ebp+0x138ed949]
  41e789:	(bad)  
  41e78a:	jmp    0x41e714
  41e78c:	and    esi,ebp
  41e78e:	sub    DWORD PTR [ebp+0x42e345be],esp
  41e794:	int    0x33
  41e796:	push   0xffffffeb
  41e798:	fstp   st(5)
  41e79a:	cmp    BYTE PTR [esi],cl
  41e79c:	inc    eax
  41e79d:	jp     0x41e7e8
  41e79f:	mov    ecx,DWORD PTR [ebx-0x12]
  41e7a2:	inc    esi
  41e7a3:	fidivr WORD PTR [ebx]
  41e7a5:	loop   0x41e7c9
  41e7a7:	nop
  41e7a8:	pop    esp
  41e7a9:	pop    eax
  41e7aa:	dec    esp
  41e7ab:	or     BYTE PTR [ebx+esi*8-0x4d],bh
  41e7af:	add    eax,0x6b27c4e
  41e7b4:	mov    eax,0x7e0e97a6
  41e7b9:	fcomp  st(5)
  41e7bb:	pusha  
  41e7bc:	add    bl,0x6
  41e7bf:	dec    edx
  41e7c0:	xchg   ecx,eax
  41e7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c2:	fisubr DWORD PTR [ebp-0x4f4a7155]
  41e7c8:	add    eax,eax
  41e7ca:	int    0xf4
  41e7cc:	or     DWORD PTR [esi-0x3c],edi
  41e7cf:	js     0x41e798
  41e7d1:	xor    esi,DWORD PTR [ebx-0x56d92f01]
  41e7d7:	sbb    eax,0xa341460
  41e7dc:	inc    esp
  41e7dd:	lods   eax,DWORD PTR ds:[esi]
  41e7de:	scas   eax,DWORD PTR es:[edi]
  41e7df:	xchg   esi,eax
  41e7e0:	cdq    
  41e7e1:	test   eax,0xfd05b500
  41e7e6:	xor    eax,0xd9402cbe
  41e7eb:	les    edx,FWORD PTR [eax-0x2]
  41e7ee:	(bad)  
  41e7ef:	test   al,0xee
  41e7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f2:	stc    
  41e7f3:	call   0x78e26136
  41e7f8:	pusha  
  41e7f9:	and    al,0x6c
  41e7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7fc:	ss cs ins DWORD PTR es:[edi],dx
  41e7ff:	pop    edi
  41e800:	mov    esi,0x7eafeb26
  41e805:	sub    eax,0xbeae2459
  41e80a:	lds    eax,FWORD PTR [ebx-0x15ed85]
  41e810:	ret    
  41e811:	sub    al,0x77
  41e813:	dec    ebx
  41e814:	pop    ecx
  41e816:	loop   0x41e871
  41e818:	mov    cl,0x5f
  41e81a:	inc    esi
  41e81b:	dec    esp
  41e81c:	icebp  
  41e81d:	fisubr WORD PTR [ebx+esi*2+0x77250a2a]
  41e824:	in     eax,0x73
  41e826:	jge    0x41e81c
  41e828:	inc    esp
  41e829:	xchg   esi,eax
  41e82a:	mov    esp,0x8f7c925b
  41e82f:	fbstp  TBYTE PTR [edx-0x17]
  41e832:	aaa    
  41e833:	mov    ebp,0xc1a1d4da
  41e838:	add    dh,BYTE PTR [edi]
  41e83a:	mov    cl,0x55
  41e83c:	test   DWORD PTR [edi],ebx
  41e83e:	lahf   
  41e83f:	mov    al,ds:0x80
	...
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	jg     0x41e8a7
  41e8c2:	push   esp
  41e8c3:	push   0x1481f
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [esp+edi*4+0x79efe203],dl
  41e8d2:	rcr    al,cl
  41e8d4:	mul    DWORD PTR [ebx-0x21]
  41e8d7:	or     BYTE PTR [ebx+0x5b19d0fc],bl
  41e8dd:	(bad)  
  41e8de:	dec    ebx
  41e8df:	add    esi,DWORD PTR [edi-0x241e16b7]
  41e8e5:	fild   WORD PTR [ebx+0x48]
  41e8e8:	sub    bl,ah
  41e8ea:	retf   0x8fea
  41e8ed:	je     0x41e8e8
  41e8ef:	std    
  41e8f0:	adc    ecx,DWORD PTR [edi+0x3a]
  41e8f3:	in     al,0x1b
  41e8f5:	aas    
  41e8f6:	lea    ebp,[eax-0x5e56fb26]
  41e8fc:	lock sti 
  41e8fe:	mov    al,ds:0x579e5ad8
  41e903:	popf   
  41e904:	or     BYTE PTR [ebp+0x42ad88e],ch
  41e90a:	sar    BYTE PTR [edi-0x44],cl
  41e90d:	push   esi
  41e90e:	aam    0x76
  41e910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e911:	idiv   BYTE PTR [ebx+0x6]
  41e914:	sti    
  41e915:	and    eax,0x82be63b6
  41e91a:	mov    ah,BYTE PTR cs:[ecx-0x61357bac]
  41e921:	js     0x41e8e3
  41e923:	leave  
  41e924:	(bad)  
  41e925:	pop    esi
  41e926:	mov    WORD PTR [edi+0x54658dbc],ds
  41e92c:	retf   0xbf9d
  41e92f:	fwait
  41e930:	pop    es
  41e931:	les    edi,FWORD PTR ds:0x24fa4ecf
  41e937:	mov    bl,BYTE PTR [eax]
  41e939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e93a:	scas   al,BYTE PTR es:[edi]
  41e93b:	outs   dx,BYTE PTR ds:[esi]
  41e93c:	sbb    eax,0x7939d679
  41e941:	test   DWORD PTR [ebx],esp
  41e943:	pusha  
  41e944:	jg     0x41e962
  41e946:	ins    DWORD PTR es:[edi],dx
  41e947:	pop    ds
  41e948:	addr16 aas 
  41e94a:	dec    ebx
  41e94b:	rcr    BYTE PTR ds:0xe6b45138,cl
  41e951:	out    0xab,eax
  41e953:	adc    ebx,edi
  41e955:	push   ebx
  41e956:	or     edi,DWORD PTR [eax+0x47a86271]
  41e95c:	pusha  
  41e95d:	cdq    
  41e95e:	inc    ebp
  41e95f:	test   DWORD PTR [ebx+0x7c],0xaf8a86a5
  41e966:	fsubr  DWORD PTR [ecx]
  41e968:	shl    DWORD PTR [ebx+0x5b3ffd78],0xdf
  41e96f:	push   edi
  41e970:	xchg   BYTE PTR [edi],bh
  41e972:	jo     0x41e9dc
  41e974:	daa    
  41e975:	lds    esp,FWORD PTR [eax+0x6]
  41e978:	mov    edi,edi
  41e97a:	loope  0x41e9ce
  41e97c:	and    esp,DWORD PTR [ebx-0xb]
  41e97f:	jo     0x41e9cd
  41e981:	pushf  
  41e982:	mov    dh,0x58
  41e984:	sub    eax,0x4cc7b25f
  41e989:	aam    0xfa
  41e98b:	(bad)  
  41e98c:	jne    0x41e955
  41e98e:	mov    DWORD PTR [esi+0x11],ebp
  41e991:	inc    ebp
  41e992:	jbe    0x41e9b3
  41e994:	and    eax,0x77b52bec
  41e999:	cmp    DWORD PTR [eax+0x5e24aa6c],0x5710856a
  41e9a3:	mov    al,ds:0xe50acfe4
  41e9a8:	js     0x41e9d9
  41e9aa:	cmp    al,0xc5
  41e9ac:	pop    eax
  41e9ad:	sbb    al,0x5
  41e9af:	pop    ecx
  41e9b0:	mov    edi,0x218f1f6c
  41e9b5:	inc    esi
  41e9b6:	idiv   DWORD PTR [edx+ecx*1+0x6b877796]
  41e9bd:	adc    dh,BYTE PTR [ecx+0xe953]
	...
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fnstsw WORD PTR [ecx+edi*2-0x7c]
  41ea43:	test   eax,0x14914
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    bl,bh
  41ea4d:	sub    DWORD PTR [esi+0x66412c91],edx
  41ea53:	clc    
  41ea54:	cmp    bl,ah
  41ea56:	cmp    DWORD PTR [eax+0x1bb97c6e],0xffffff92
  41ea5d:	pop    esi
  41ea5e:	push   eax
  41ea5f:	push   edx
  41ea60:	in     eax,dx
  41ea61:	push   ebx
  41ea62:	mov    ds:0x43fe83b7,eax
  41ea67:	push   edi
  41ea68:	sbb    al,0xcd
  41ea6a:	xchg   edx,eax
  41ea6b:	arpl   WORD PTR [edi-0x3ae930f3],bx
  41ea71:	add    eax,DWORD PTR [edx]
  41ea73:	(bad)  
  41ea74:	shl    BYTE PTR [ebx+0x32da253f],0x88
  41ea7b:	int    0x20
  41ea7d:	jnp    0x41eac9
  41ea7f:	adc    al,0x43
  41ea81:	mov    ebp,0xaf20860c
  41ea86:	ret    0xcd2b
  41ea89:	xchg   esi,eax
  41ea8a:	test   BYTE PTR gs:[ebp+0x4bd360b8],ch
  41ea91:	popf   
  41ea92:	leave  
  41ea93:	and    al,0xc6
  41ea95:	mov    esp,0xffa8b653
  41ea9a:	dec    ebp
  41ea9b:	sar    BYTE PTR cs:[edx+eax*4+0x2d],cl
  41eaa0:	mov    DWORD PTR [edi-0x61],0x623d0675
  41eaa7:	push   edx
  41eaa8:	sbb    BYTE PTR [ecx+ecx*8],ah
  41eaab:	pop    edx
  41eaac:	and    eax,0xa1e2c47f
  41eab1:	xchg   ecx,eax
  41eab2:	ja     0x41eaed
  41eab4:	and    eax,DWORD PTR [edx-0x5462b4c8]
  41eaba:	std    
  41eabb:	mov    al,ds:0xf212a42
  41eac0:	mov    cl,0x9d
  41eac2:	lahf   
  41eac3:	ins    BYTE PTR es:[edi],dx
  41eac4:	add    dl,BYTE PTR [edi-0x4b91cefc]
  41eaca:	jb     0x41eaa0
  41eacc:	pop    edi
  41eacd:	jmp    0x55d3e7e9
  41ead2:	adc    edi,DWORD PTR [ecx+0x6a]
  41ead5:	jle    0x41eab5
  41ead7:	push   ss
  41ead8:	test   DWORD PTR [eax+0x67],0x5944eaf4
  41eadf:	or     eax,DWORD PTR [esi+0x524078cc]
  41eae5:	dec    edi
  41eae6:	leave  
  41eae7:	add    BYTE PTR [edi],al
  41eae9:	push   ebx
  41eaea:	ss cmp al,0x9b
  41eaed:	jb     0x41eb5d
  41eaef:	sbb    edi,edi
  41eaf1:	xchg   ecx,eax
  41eaf2:	cli    
  41eaf3:	adc    ebp,DWORD PTR cs:[edx]
  41eaf6:	adc    esi,DWORD PTR fs:[ecx+0x4a85f8c7]
  41eafd:	clc    
  41eafe:	cmp    DWORD PTR [edx+ecx*2],edx
  41eb01:	(bad)  
  41eb02:	push   ebx
  41eb03:	adc    dl,BYTE PTR [esi]
  41eb05:	add    al,0xed
  41eb07:	mov    ds:0x193822d1,al
  41eb0c:	jmp    0x41eb78
  41eb0e:	icebp  
  41eb0f:	outs   dx,DWORD PTR ds:[esi]
  41eb10:	jmp    0x46c38541
  41eb15:	out    dx,eax
  41eb16:	jmp    0x707fce15
  41eb1b:	fnsave [ecx+0x1a328457]
  41eb21:	push   edi
  41eb22:	push   cs
  41eb23:	mov    ecx,0x57e38d45
  41eb28:	xchg   DWORD PTR [eax+0x72],ecx
  41eb2b:	ss xchg edi,eax
  41eb2d:	mov    edx,0x6fecc13
  41eb32:	cli    
  41eb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb34:	xor    esi,eax
  41eb36:	pop    ds
  41eb37:	dec    edx
  41eb38:	call   FWORD PTR [ecx+esi*8-0x23406479]
  41eb3f:	push   edi
  41eb40:	rol    BYTE PTR [eax],1
	...
  41ebb2:	add    BYTE PTR [eax],al
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	retf   0x9815
  41ebb8:	mov    ch,0xdf
  41ebba:	out    dx,eax
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	shl    BYTE PTR [ecx+0x5c],0x8f
  41ebc4:	or     DWORD PTR [edx+0x1],ecx
  41ebc7:	add    ch,dh
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [edi+0x33],dh
  41ebce:	pop    ebx
  41ebcf:	ret    
  41ebd0:	imul   ebp,DWORD PTR [edx-0x74ebeec0],0x32ac2b6a
  41ebda:	cmp    cl,cl
  41ebdc:	mov    eax,0x3dc2c0cd
  41ebe1:	ja     0x41ebf4
  41ebe3:	cwde   
  41ebe4:	sar    DWORD PTR [ecx],1
  41ebe6:	pushf  
  41ebe7:	daa    
  41ebe8:	add    ch,BYTE PTR [ebp+0x79]
  41ebeb:	cmovno esi,DWORD PTR [esi+eiz*1-0x2a4a41be]
  41ebf3:	sbb    eax,0x60fea767
  41ebf8:	and    esi,esi
  41ebfa:	xchg   ebx,eax
  41ebfb:	stc    
  41ebfc:	mov    ecx,0x20e93f1e
  41ec01:	adc    DWORD PTR [ebx],edi
  41ec03:	(bad)  
  41ec04:	(bad)  
  41ec05:	jnp    0x41ebec
  41ec07:	sub    ch,BYTE PTR [ecx]
  41ec09:	mov    ebx,0x3db31de4
  41ec0e:	adc    esi,DWORD PTR [ecx]
  41ec10:	pop    edx
  41ec11:	imul   BYTE PTR [eax+0x262cafef]
  41ec17:	out    0x96,eax
  41ec19:	cmp    BYTE PTR [esi+0x52],0x32
  41ec1d:	ss in  eax,0xd7
  41ec20:	add    eax,0x337c3c72
  41ec25:	in     al,0x68
  41ec27:	mov    ds:0x4a0b7222,eax
  41ec2c:	fld    DWORD PTR [ecx+edi*4-0x1]
  41ec30:	add    esi,ebp
  41ec32:	inc    ebp
  41ec33:	test   al,0xf7
  41ec35:	jbe    0x41ebda
  41ec37:	dec    edx
  41ec38:	es jne 0x41ecb8
  41ec3b:	retf   
  41ec3c:	xor    DWORD PTR ds:[ebx+ecx*8+0x79],edx
  41ec41:	add    eax,0xb9df50d8
  41ec46:	inc    ebp
  41ec47:	pop    ecx
  41ec48:	add    BYTE PTR [ebp+eax*4+0x46],0xa3
  41ec4d:	stos   BYTE PTR es:[edi],al
  41ec4e:	rol    BYTE PTR [edi-0x15],1
  41ec51:	cmp    eax,0xdcbbb375
  41ec56:	or     al,0x10
  41ec58:	(bad)  
  41ec5a:	mov    al,BYTE PTR [ebp+0xfcc191]
  41ec60:	ret    
  41ec61:	jecxz  0x41ec43
  41ec63:	cmc    
  41ec64:	ins    BYTE PTR es:[edi],dx
  41ec65:	iret   
  41ec66:	fdiv   QWORD PTR [ebp+0x4a]
  41ec69:	mov    edi,0xe65f4e27
  41ec6e:	and    DWORD PTR [ebp+0x40],edx
  41ec71:	lea    eax,[ecx+0x3d]
  41ec74:	int    0x98
  41ec76:	jl     0x41ec0e
  41ec78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec79:	ret    0x61cd
  41ec7c:	repnz or DWORD PTR [eax+ebx*2+0xd],edi
  41ec81:	adc    al,0xff
  41ec83:	faddp  st(3),st
  41ec85:	inc    edi
  41ec86:	sub    eax,0xba5d3dc8
  41ec8b:	(bad)  
  41ec8d:	push   si
  41ec8f:	xchg   ch,ah
  41ec91:	int3   
  41ec92:	cmp    BYTE PTR [ebx],dh
  41ec94:	leave  
  41ec95:	push   eax
  41ec96:	cmc    
  41ec97:	in     al,dx
  41ec98:	cmp    eax,0xdc55e700
  41ec9d:	pop    edi
  41ec9e:	mov    ch,0x2a
  41eca0:	sbb    ah,BYTE PTR [edx+0x2c]
  41eca3:	mov    ecx,DWORD PTR [eax]
  41eca5:	push   cs
  41eca6:	les    edx,FWORD PTR [eax-0x7057b49c]
  41ecac:	ss ret 
  41ecae:	sbb    cl,BYTE PTR [ebx]
  41ecb0:	sahf   
  41ecb1:	mov    al,al
  41ecb3:	dec    ebp
  41ecb4:	push   cs
  41ecb5:	mov    edi,0xe46d17ae
  41ecba:	inc    ecx
  41ecbb:	lods   al,BYTE PTR ds:[esi]
  41ecbc:	adc    BYTE PTR [ecx],0x2d
  41ecbf:	lea    ebp,[ecx+0x0]
	...
  41ed31:	add    BYTE PTR [eax],al
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	mov    dh,0x4e
  41ed42:	aaa    
  41ed43:	mov    edi,0x14afe
  41ed48:	cmc    
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    dl,al
  41ed4d:	mov    eax,0x2e70b5ba
  41ed52:	push   ds
  41ed53:	js     0x41edaa
  41ed55:	sar    DWORD PTR [ecx+0x13292a7],0x9a
  41ed5c:	int3   
  41ed5d:	sbb    DWORD PTR [ebx],edi
  41ed5f:	dec    ebp
  41ed60:	aaa    
  41ed61:	and    esp,DWORD PTR [edx-0x80]
  41ed64:	sti    
  41ed65:	scas   al,BYTE PTR es:[edi]
  41ed66:	xchg   ecx,eax
  41ed67:	or     eax,0xb555a751
  41ed6c:	and    al,0xfa
  41ed6e:	push   ecx
  41ed6f:	lock mov ebp,0x2b423da5
  41ed75:	lea    ebx,[eax]
  41ed77:	add    DWORD PTR [ebp-0x40],ebx
  41ed7a:	ss fs mov bl,0x67
  41ed7e:	jno    0x41ed13
  41ed80:	mov    bl,0xc4
  41ed82:	in     al,dx
  41ed83:	push   ebx
  41ed84:	fs mov ebp,ebp
  41ed87:	je     0x41ee05
  41ed89:	fdivr  QWORD PTR [ebp-0x33]
  41ed8c:	adc    al,0x6d
  41ed8e:	shl    edi,cl
  41ed90:	pop    ecx
  41ed91:	loop   0x41ed84
  41ed93:	mov    cl,0x59
  41ed95:	ins    DWORD PTR es:[edi],dx
  41ed96:	adc    ebx,DWORD PTR [ebp+0x23]
  41ed99:	cs inc edi
  41ed9b:	mov    al,ds:0x7d1fe620
  41eda0:	clc    
  41eda1:	sub    BYTE PTR [esi-0x1e],0xa1
  41eda5:	ins    BYTE PTR es:[edi],dx
  41eda6:	or     BYTE PTR [eax+edi*4+0x20],ch
  41edaa:	shl    ah,0x59
  41edad:	bound  edi,QWORD PTR [esi+ecx*4+0x1]
  41edb1:	xor    DWORD PTR [edx-0x6c],ecx
  41edb4:	xchg   BYTE PTR [ebx-0x643413e0],cl
  41edba:	xchg   edi,eax
  41edbb:	data16 das 
  41edbd:	push   ebx
  41edbe:	lds    edx,FWORD PTR [edx]
  41edc0:	je     0x41edeb
  41edc2:	push   0xffffff8c
  41edc4:	fcomip st,st(0)
  41edc6:	pushf  
  41edc7:	leave  
  41edc8:	out    0x7e,eax
  41edca:	mov    al,0xb1
  41edcc:	(bad)  
  41edcd:	cmp    BYTE PTR [edx+0xc],dh
  41edd0:	sub    DWORD PTR [esi-0xbe393fe],0xffffffc4
  41edd7:	sbb    edx,esp
  41edd9:	js     0x41ee52
  41eddb:	or     BYTE PTR [ebx],ah
  41eddd:	xchg   DWORD PTR ds:0x4f9350fc,eax
  41ede3:	sahf   
  41ede4:	dec    esp
  41ede5:	adc    eax,0x9a199e3f
  41edea:	aad    0x62
  41edec:	popa   
  41eded:	push   ds
  41edee:	retf   
  41edef:	sbb    eax,0xbafb3c47
  41edf4:	cmp    DWORD PTR [eax],esp
  41edf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf7:	sub    eax,0xf96093a2
  41edfc:	xchg   esp,eax
  41edfd:	outs   dx,BYTE PTR ds:[esi]
  41edfe:	adc    BYTE PTR [ebx],bh
  41ee00:	iret   
  41ee01:	sbb    dh,BYTE PTR [edi-0x6d]
  41ee04:	fcomip st,st(7)
  41ee06:	repnz sahf 
  41ee08:	xor    DWORD PTR [ebp+0x5a],esi
  41ee0b:	mov    ecx,0xfc72039b
  41ee10:	mov    ecx,ecx
  41ee12:	lock imul DWORD PTR [ebp+0x793f521b]
  41ee19:	loopne 0x41ede1
  41ee1b:	pop    ebx
  41ee1c:	rcl    BYTE PTR [ebx+0x31074160],cl
  41ee22:	fild   WORD PTR [ecx-0xe]
  41ee25:	xor    dh,0xe1
  41ee28:	push   0xffffffd3
  41ee2a:	(bad)  
  41ee2c:	add    bl,BYTE PTR [edi]
  41ee2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2f:	push   0x5e
  41ee31:	scas   eax,DWORD PTR es:[edi]
  41ee32:	push   0xffffffea
  41ee34:	dec    ebp
  41ee35:	in     al,0x3b
  41ee37:	dec    ecx
  41ee38:	inc    edx
  41ee39:	fidiv  DWORD PTR ds:0x95d01d32
  41ee3f:	cmc    
  41ee40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	repz xchg ebp,eax
  41eec2:	xchg   ebp,eax
  41eec3:	mov    ebp,0x14bf3
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    BYTE PTR [ebp+0x460a493e],bl
  41eed1:	sub    al,0xcc
  41eed3:	adc    DWORD PTR [esi-0x49],0xffffffb8
  41eed7:	test   eax,0xa08e0e7
  41eedc:	mov    al,0x6e
  41eede:	inc    esp
  41eedf:	les    eax,FWORD PTR [ecx+0x58]
  41eee2:	imul   edx,DWORD PTR [esi],0x7c
  41eee5:	imul   edx,edx,0xffffffda
  41eee8:	in     eax,dx
  41eee9:	out    0x59,eax
  41eeeb:	jne    0x41ee7c
  41eeed:	and    eax,0x659149fe
  41eef2:	retf   0x775
  41eef5:	jo     0x41ef49
  41eef7:	add    al,0x93
  41eef9:	and    ebp,DWORD PTR [esp+edi*4-0x2d]
  41eefd:	stc    
  41eefe:	cmp    ebx,edi
  41ef00:	dec    edx
  41ef01:	push   ebp
  41ef02:	mov    eax,0x6b608208
  41ef07:	jge    0x41ef33
  41ef09:	ret    
  41ef0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef0b:	add    BYTE PTR [ecx+0x46b7c016],ch
  41ef11:	pop    es
  41ef12:	repz or al,0xc5
  41ef15:	jecxz  0x41ef27
  41ef17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef18:	mov    bl,0xe5
  41ef1a:	cmp    eax,ecx
  41ef1c:	jae    0x41eeac
  41ef1e:	xor    esi,esi
  41ef20:	in     eax,dx
  41ef21:	ret    
  41ef22:	cmc    
  41ef23:	pop    ebp
  41ef24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef25:	call   0x9ead1e6a
  41ef2a:	adc    esi,ecx
  41ef2c:	pushf  
  41ef2d:	rcl    BYTE PTR [esi+0x8c1a042],1
  41ef33:	sar    edi,cl
  41ef35:	repnz pop es
  41ef37:	sub    DWORD PTR [esi-0x3eca0df8],esp
  41ef3d:	sahf   
  41ef3e:	sbb    eax,edx
  41ef40:	std    
  41ef41:	cmp    eax,DWORD PTR [esi-0x102d7ccb]
  41ef47:	daa    
  41ef48:	push   ebx
  41ef49:	shl    BYTE PTR [ebp-0xd6547d3],1
  41ef4f:	popa   
  41ef50:	dec    ebx
  41ef51:	and    al,0x82
  41ef53:	stos   BYTE PTR es:[edi],al
  41ef54:	call   0xf150b9df
  41ef59:	repz les ebp,FWORD PTR [esp+ebx*1-0x7]
  41ef5e:	call   0x425fc121
  41ef63:	mov    ebx,0x34981ee4
  41ef68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef69:	in     al,0x6e
  41ef6b:	and    dl,BYTE PTR [ebx-0xd9bb29]
  41ef71:	mov    edx,0xf24a050c
  41ef76:	das    
  41ef77:	stos   DWORD PTR es:[edi],eax
  41ef78:	repz jno 0x41ef52
  41ef7b:	arpl   WORD PTR [edx],si
  41ef7d:	cmp    eax,0xd9a19335
  41ef82:	ret    
  41ef83:	mov    WORD PTR [eax-0x7e74f58d],gs
  41ef89:	dec    esp
  41ef8a:	xor    BYTE PTR [ebp-0x45],dl
  41ef8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef8e:	jecxz  0x41eff3
  41ef90:	and    al,ah
  41ef92:	dec    esi
  41ef93:	fadd   st,st(6)
  41ef95:	pop    esp
  41ef96:	mov    cl,0x9f
  41ef98:	sbb    al,0x6f
  41ef9a:	dec    esp
  41ef9b:	jnp    0x41ef80
  41ef9d:	inc    ebx
  41ef9e:	fcmovnb st,st(1)
  41efa0:	or     BYTE PTR [ecx+0x2aa38876],dl
  41efa6:	lock gs nop
  41efa9:	adc    al,0x9b
  41efab:	jo     0x41f01b
  41efad:	cmc    
  41efae:	xchg   ebx,ebp
  41efb0:	mov    ds:0x31bb0002,al
  41efb5:	xchg   ebx,eax
  41efb6:	hlt    
  41efb7:	push   edi
  41efb8:	sbb    al,0xb
  41efba:	(bad)  
  41efbb:	xor    al,0xe6
  41efbd:	xchg   BYTE PTR [ebp+0x98a2],ah
	...
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x78]
  41f041:	(bad)
  41f045:	dec    esp
  41f046:	add    DWORD PTR [eax],eax
  41f048:	cmc    
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [esi],bl
  41f04d:	(bad)  
  41f04e:	and    ecx,DWORD PTR [ecx-0x4b4138ae]
  41f054:	ficomp DWORD PTR [edx-0x24]
  41f057:	cmp    cl,BYTE PTR [edx-0x1d8ef4]
  41f05d:	imul   edx,DWORD PTR [eax+eiz*1+0xa],0x1
  41f062:	in     eax,dx
  41f063:	adc    ebx,DWORD PTR [edi]
  41f065:	or     eax,0x7076ca4c
  41f06a:	stos   DWORD PTR es:[edi],eax
  41f06b:	cmp    bl,BYTE PTR [edx]
  41f06d:	dec    ebp
  41f06e:	loopne 0x41f0bd
  41f070:	adc    ebx,DWORD PTR [ebp-0x6afda045]
  41f076:	push   edi
  41f077:	es scas al,BYTE PTR es:[edi]
  41f079:	clc    
  41f07a:	adc    DWORD PTR [ebx+0x19],0x2d
  41f07e:	push   ecx
  41f07f:	and    dl,BYTE PTR [edi+0x4d8a3f6]
  41f085:	xchg   BYTE PTR [edi+0x77],al
  41f088:	sub    DWORD PTR [eax-0x5f7611ab],ebx
  41f08e:	fisttp QWORD PTR [ecx-0x6561b3e6]
  41f094:	push   0x11f280ae
  41f099:	test   eax,0x14407517
  41f09e:	dec    esp
  41f09f:	xor    eax,0x6bfaca48
  41f0a4:	push   ebx
  41f0a5:	mov    bh,0xd3
  41f0a7:	jge    0x41f119
  41f0a9:	mov    edx,0x4b273214
  41f0ae:	fs push ebx
  41f0b0:	fs xchg edx,ebx
  41f0b3:	imul   ebp,esi,0xffffffce
  41f0b6:	out    0xbf,eax
  41f0b8:	in     al,dx
  41f0b9:	test   eax,0x4da993b1
  41f0be:	das    
  41f0bf:	jns    0x41f0df
  41f0c1:	in     eax,0x18
  41f0c3:	fwait
  41f0c4:	ds ins DWORD PTR es:[edi],dx
  41f0c6:	test   DWORD PTR [di],ebx
  41f0c9:	scas   al,BYTE PTR es:[edi]
  41f0ca:	sahf   
  41f0cb:	das    
  41f0cc:	outs   dx,DWORD PTR ds:[esi]
  41f0cd:	jbe    0x41f143
  41f0cf:	mov    eax,ds
  41f0d1:	push   es
  41f0d2:	xchg   esp,eax
  41f0d3:	outs   dx,DWORD PTR ds:[esi]
  41f0d4:	push   edx
  41f0d5:	enter  0x27aa,0xb3
  41f0d9:	imul   ebp,DWORD PTR [eax-0x41e0ec3e],0xffffff8f
  41f0e0:	adc    eax,DWORD PTR [edi+eax*1]
  41f0e3:	enter  0x2e58,0x0
  41f0e7:	sub    ebx,ebx
  41f0e9:	ss test al,0xa8
  41f0ec:	mov    bh,0x20
  41f0ee:	aam    0xa8
  41f0f0:	cli    
  41f0f1:	scas   al,BYTE PTR es:[edi]
  41f0f2:	leave  
  41f0f3:	shr    ecx,1
  41f0f5:	pop    ebx
  41f0f6:	or     BYTE PTR [ebx-0x6e],ch
  41f0f9:	pop    ss
  41f0fa:	loop   0x41f17a
  41f0fc:	imul   ecx,DWORD PTR [edi+0x1a],0xffffff94
  41f100:	pop    ds
  41f101:	retf   0xdc20
  41f104:	iret   
  41f105:	ss aaa 
  41f107:	push   ebx
  41f108:	push   cs
  41f109:	and    al,0x32
  41f10b:	inc    eax
  41f10c:	loope  0x41f0c2
  41f10e:	loopne 0x41f0b1
  41f110:	enter  0xca4e,0x7a
  41f114:	hlt    
  41f115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f116:	mov    ds:0xfb4bb017,eax
  41f11b:	sbb    ah,BYTE PTR [ebp-0x570405f0]
  41f121:	int3   
  41f122:	loop   0x41f0d2
  41f124:	and    al,0x2a
  41f126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f127:	jl     0x41f0e4
  41f129:	ins    DWORD PTR es:[edi],dx
  41f12a:	inc    ecx
  41f12b:	jbe    0x41f0d5
  41f12d:	push   ebp
  41f12e:	push   0x5c
  41f130:	sbb    eax,DWORD PTR [ecx+eiz*4-0x70]
  41f134:	jb     0x41f0c5
  41f136:	pop    edx
  41f137:	push   edx
  41f138:	retf   
  41f139:	mov    dl,0xf8
  41f13b:	popa   
  41f13c:	inc    eax
  41f13d:	in     al,dx
  41f13e:	xchg   esi,eax
  41f13f:	bound  edi,QWORD PTR [ecx+0x0]
	...
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	stos   DWORD PTR es:[edi],eax
  41f1b5:	add    dh,BYTE PTR [edi-0x1a]
  41f1b8:	push   edi
  41f1ba:	mov    ebx,0xee13144f
  41f1bf:	mov    DWORD PTR [edi],esp
  41f1c1:	nop
  41f1c2:	inc    eax
  41f1c3:	xchg   edx,eax
  41f1c4:	fisttp QWORD PTR [ebp+0x1]
  41f1c7:	add    ch,dh
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [esi],al
  41f1cd:	mov    ah,0xf1
  41f1cf:	cld    
  41f1d0:	xchg   esp,eax
  41f1d1:	cmp    ch,BYTE PTR [eax-0x2f5ad9dc]
  41f1d7:	hlt    
  41f1d8:	cwde   
  41f1d9:	rol    BYTE PTR [edx-0x291dfd62],1
  41f1df:	push   ecx
  41f1e0:	inc    eax
  41f1e1:	clc    
  41f1e2:	pop    eax
  41f1e3:	test   BYTE PTR [esi-0x449dc5a3],bl
  41f1e9:	lods   al,BYTE PTR ds:[esi]
  41f1ea:	lea    esi,[edi]
  41f1ec:	add    al,0x4b
  41f1ee:	xlat   BYTE PTR ds:[ebx]
  41f1ef:	fcomp  st(0)
  41f1f1:	jmp    0x7e0e:0x8cc0a02d
  41f1f8:	js     0x41f193
  41f1fa:	ss test al,0x65
  41f1fd:	jle    0x41f23c
  41f1ff:	rcr    DWORD PTR cs:[ecx+edx*2],1
  41f203:	cmp    ebx,esi
  41f205:	add    BYTE PTR [edi+0x55],ah
  41f208:	pop    edi
  41f209:	dec    edx
  41f20a:	test   BYTE PTR [ebp+0x7794413a],0xfa
  41f211:	js     0x41f284
  41f213:	bound  ebx,QWORD PTR [esi-0x65]
  41f216:	xchg   ecx,eax
  41f217:	mov    ch,cl
  41f219:	xchg   ecx,eax
  41f21a:	or     al,0xec
  41f21c:	cmp    DWORD PTR [ebp+ebp*2+0xe3ba23e],0xffffffb7
  41f224:	loopne 0x41f1f3
  41f226:	in     al,0x1b
  41f228:	cs out 0x7c,eax
  41f22b:	xor    esi,DWORD PTR [ebp+0x206bdeb2]
  41f231:	add    eax,DWORD PTR ds:0xd40f98bb
  41f237:	out    dx,al
  41f238:	dec    edx
  41f239:	push   esi
  41f23a:	outs   dx,BYTE PTR ds:[esi]
  41f23b:	dec    edi
  41f23c:	add    dl,ch
  41f23e:	fdiv   QWORD PTR [edi]
  41f240:	jns    0x41f262
  41f242:	dec    edi
  41f243:	sub    edi,DWORD PTR [ecx+0x15c6d2b3]
  41f249:	test   BYTE PTR [eax],cl
  41f24b:	mov    bh,0x7c
  41f24d:	jns    0x41f23e
  41f24f:	enter  0x276a,0x12
  41f253:	adc    ah,dh
  41f255:	and    eax,DWORD PTR [edx+0x16deae30]
  41f25b:	jge    0x41f255
  41f25d:	inc    esp
  41f25e:	and    edi,DWORD PTR [ebx+0x72]
  41f261:	cld    
  41f262:	mov    cl,0xb3
  41f264:	jle    0x41f283
  41f266:	ret    
  41f267:	mov    DWORD PTR [ecx+0x55aed394],edx
  41f26d:	loope  0x41f2d8
  41f26f:	in     al,dx
  41f270:	clts   
  41f272:	fs jmp 0xd2c:0x310117cd
  41f27a:	xchg   ebp,eax
  41f27b:	mov    ds:0x673522ce,eax
  41f280:	(bad)  
  41f281:	jg     0x41f27a
  41f283:	ss ins BYTE PTR es:[edi],dx
  41f285:	xor    ebx,esp
  41f287:	push   edi
  41f288:	pop    edi
  41f289:	(bad)  
  41f28a:	pop    ss
  41f28b:	adc    BYTE PTR [ebx-0x7a1fce1],0x61
  41f292:	mov    bl,0xe6
  41f294:	xor    eax,0x51f5983
  41f299:	fwait
  41f29a:	sar    BYTE PTR [eax-0x6e],0x64
  41f29e:	jp     0x41f285
  41f2a0:	cmp    DWORD PTR [ebp+0x61],edi
  41f2a3:	cmp    dh,ah
  41f2a5:	mov    ebp,0x94209f23
  41f2aa:	sub    al,0x56
  41f2ac:	push   edi
  41f2ad:	mov    ?,WORD PTR [esi]
  41f2af:	cld    
  41f2b0:	call   0x71aeee4c
  41f2b5:	mov    al,0xbf
  41f2b7:	or     edi,DWORD PTR [ecx+edx*8+0x272222e2]
  41f2be:	lock jbe 0x41f24d
	...
  41f331:	add    BYTE PTR [eax],al
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x20b7:0x4d9531a0
  41f343:	hlt    
  41f344:	ror    BYTE PTR [esi+0x1],cl
  41f347:	add    ch,dh
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    bh,cl
  41f34d:	out    0x1,eax
  41f34f:	(bad)  
  41f351:	(bad)  
  41f352:	(bad)  [edx+0x60]
  41f355:	add    BYTE PTR [esi-0x20566cc3],0x95
  41f35c:	retf   
  41f35d:	jmp    0x184b:0x3be015db
  41f364:	imul   ebp,ecx,0x12d69db3
  41f36a:	jb     0x41f310
  41f36c:	ret    0xdea1
  41f36f:	lods   eax,DWORD PTR ds:[esi]
  41f370:	fabs   
  41f372:	mov    BYTE PTR [edi+eiz*2],bl
  41f375:	hlt    
  41f376:	sahf   
  41f377:	rol    ah,1
  41f379:	(bad)  
  41f37a:	rcl    dh,cl
  41f37c:	jo     0x41f35e
  41f37e:	pusha  
  41f37f:	push   esi
  41f380:	xchg   ecx,eax
  41f381:	push   eax
  41f382:	pop    ecx
  41f383:	jle    0x41f3b9
  41f385:	sahf   
  41f386:	aad    0x92
  41f388:	jg     0x41f3a0
  41f38a:	add    ebp,DWORD PTR [ebx+0x105f9d49]
  41f390:	test   eax,0x49e82760
  41f395:	mov    ebp,0xfafc6108
  41f39a:	xor    BYTE PTR [ebp+edi*1+0x66028e5f],0x94
  41f3a2:	push   ebp
  41f3a3:	test   al,0xeb
  41f3a5:	add    BYTE PTR [eax-0x7137109f],0xb0
  41f3ac:	into   
  41f3ad:	mov    cl,cl
  41f3af:	out    dx,eax
  41f3b0:	mov    cs,WORD PTR [edi]
  41f3b2:	bound  edi,QWORD PTR [ebp-0x3e]
  41f3b5:	and    al,0xcf
  41f3b7:	adc    eax,0xfcb43f50
  41f3bc:	xchg   BYTE PTR [ebx-0x33],dh
  41f3bf:	bound  edx,QWORD PTR [edi+0x64f715a6]
  41f3c5:	rcl    DWORD PTR [ecx],1
  41f3c7:	fnstcw WORD PTR [esi+edi*2+0x3e]
  41f3cb:	fist   DWORD PTR [esi+0x103e85ab]
  41f3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d2:	or     ch,cl
  41f3d4:	ror    esi,cl
  41f3d6:	daa    
  41f3d7:	in     eax,dx
  41f3d8:	out    dx,eax
  41f3d9:	out    0x62,eax
  41f3db:	xor    al,0x3
  41f3dd:	jo     0x41f388
  41f3df:	or     DWORD PTR [ebp-0x23],0xd48e100a
  41f3e6:	or     dl,ah
  41f3e8:	aaa    
  41f3e9:	jmp    0x41f3e7
  41f3eb:	retf   
  41f3ec:	pushf  
  41f3ed:	adc    bl,BYTE PTR [edx-0x36]
  41f3f0:	sub    eax,0xbbdf9098
  41f3f5:	dec    ebp
  41f3f6:	or     BYTE PTR [ebp+eiz*8-0x62],cl
  41f3fa:	add    edi,DWORD PTR [ebp-0x2a703d87]
  41f400:	cmc    
  41f401:	dec    esp
  41f402:	in     al,dx
  41f403:	mov    dl,BYTE PTR [edx+edi*8-0x6374463]
  41f40a:	pop    edi
  41f40b:	push   ds
  41f40c:	in     eax,dx
  41f40d:	add    esi,DWORD PTR ds:0xcf157980
  41f413:	ficomp WORD PTR [ecx-0x4535ba13]
  41f419:	imul   edi,DWORD PTR [esi],0x65
  41f41c:	jo     0x41f48c
  41f41e:	out    dx,eax
  41f41f:	(bad)  
  41f420:	mov    ebp,0x59f4e6dc
  41f425:	loop   0x41f3dc
  41f427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f428:	or     ebx,DWORD PTR [eax+0x26]
  41f42b:	imul   esp,DWORD PTR [eax+0x7de66ba3],0x86eee45
  41f435:	xor    ecx,ebx
  41f437:	push   ebp
  41f438:	mov    esp,0x38fbb678
  41f43d:	out    0x2b,al
  41f43f:	push   ecx
  41f440:	jbe    0x41f442
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x9
  41f4c1:	test   al,0xd8
  41f4c3:	jnp    0x41f48c
  41f4c5:	dec    edi
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    ah,dl
  41f4cd:	inc    edx
  41f4ce:	sbb    DWORD PTR [ebx],edx
  41f4d0:	mov    dh,0xd7
  41f4d2:	mov    BYTE PTR [ebx-0x7111252d],ch
  41f4d8:	psrad  mm0,QWORD PTR [edx-0x6]
  41f4dc:	bnd jae 0x41f53e
  41f4df:	push   edx
  41f4e0:	push   es
  41f4e1:	lods   eax,DWORD PTR ds:[esi]
  41f4e2:	pop    ebx
  41f4e3:	pop    edx
  41f4e4:	xchg   BYTE PTR [eax-0x5f024811],bl
  41f4ea:	sbb    dl,0x7e
  41f4ed:	retf   0xf731
  41f4f0:	pop    edi
  41f4f1:	mov    edi,0xe90a0a5f
  41f4f6:	loop   0x41f52d
  41f4f8:	stos   DWORD PTR es:[edi],eax
  41f4f9:	dec    ebp
  41f4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4fb:	ficomp WORD PTR [edi]
  41f4fd:	push   0xffffffbe
  41f4ff:	xchg   esp,eax
  41f500:	or     BYTE PTR [edx-0x1b3adafa],cl
  41f506:	cmp    esi,DWORD PTR [ebx-0x7d98e95a]
  41f50c:	or     dl,ch
  41f50e:	das    
  41f50f:	iret   
  41f510:	retf   0x8f79
  41f513:	cmp    edi,DWORD PTR [eax]
  41f515:	push   edx
  41f516:	outs   dx,BYTE PTR ds:[esi]
  41f517:	loop   0x41f4ca
  41f519:	aam    0x76
  41f51b:	fs pop ss
  41f51d:	inc    esp
  41f51e:	cwde   
  41f51f:	push   ebx
  41f520:	loopne 0x41f4a2
  41f522:	push   eax
  41f523:	or     edi,ecx
  41f525:	fdivr  DWORD PTR [ebx]
  41f527:	lea    ebp,ds:0xd0e208fc
  41f52d:	push   0xffffffd8
  41f52f:	adc    esp,eax
  41f531:	out    dx,al
  41f532:	mov    al,0x92
  41f534:	shl    DWORD PTR [eax-0x5da59e0b],cl
  41f53a:	cmp    ecx,ebx
  41f53c:	xor    bl,BYTE PTR [edi-0x1]
  41f53f:	ret    0xc118
  41f542:	leave  
  41f543:	xchg   ecx,eax
  41f544:	xchg   esp,eax
  41f545:	cmp    ch,ah
  41f547:	push   edx
  41f548:	jb     0x41f5b6
  41f54a:	mov    BYTE PTR [edx+0x508adc09],bh
  41f550:	stos   DWORD PTR es:[edi],eax
  41f551:	test   eax,ebp
  41f553:	or     al,ch
  41f555:	enter  0x2d52,0x37
  41f559:	sbb    eax,0x9185ddff
  41f55e:	inc    ecx
  41f55f:	ficom  DWORD PTR [edi-0x2]
  41f562:	test   DWORD PTR [eax-0x6a],edi
  41f565:	push   edx
  41f566:	push   ds
  41f567:	pop    es
  41f568:	es out dx,eax
  41f56a:	sbb    ebp,DWORD PTR [eax+0x351e9243]
  41f570:	mov    ecx,0x58118a88
  41f575:	sbb    DWORD PTR [edi-0x79],ebx
  41f578:	aas    
  41f579:	xor    ebp,edi
  41f57b:	sub    eax,DWORD PTR [esp+ebp*1]
  41f57e:	sub    ah,BYTE PTR ds:0xd9b72ee0
  41f584:	and    eax,0x98e7ab2e
  41f589:	mov    al,0xb8
  41f58b:	outs   dx,DWORD PTR ds:[esi]
  41f58c:	dec    edx
  41f58d:	adc    al,0x39
  41f58f:	push   0x1b
  41f591:	push   ebp
  41f592:	push   esp
  41f593:	clc    
  41f594:	aam    0x46
  41f596:	or     DWORD PTR [edx],ebp
  41f598:	das    
  41f599:	mov    bh,0xfc
  41f59b:	mov    BYTE PTR [ebx],dl
  41f59d:	mov    ds:0x28e66ff,al
  41f5a2:	jp     0x41f58c
  41f5a4:	push   ebp
  41f5a5:	jl     0x41f578
  41f5a7:	push   edx
  41f5a8:	or     edx,DWORD PTR [ecx+0x2806d5dc]
  41f5ae:	pop    ds
  41f5af:	lds    edi,FWORD PTR [eax-0x56b35199]
  41f5b5:	jne    0x41f5cb
  41f5b7:	mov    ds:0x9c0a6d30,eax
  41f5bc:	sbb    eax,0x98a4d505
	...
  41f631:	add    BYTE PTR [eax],al
  41f633:	add    ch,al
  41f635:	cwde   
  41f636:	loope  0x41f68d
  41f638:	std    
  41f639:	jge    0x41f630
  41f63b:	cwde   
  41f63c:	and    eax,0x2f01e835
  41f641:	pop    edx
  41f642:	mov    cl,0xf1
  41f644:	mov    esp,0xf5000150
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    al,bh
  41f64d:	ss push ebp
  41f64f:	fld1   
  41f651:	jmp    DWORD PTR [edi-0xb665d65]
  41f657:	test   DWORD PTR [edi+0x3c],ebx
  41f65a:	inc    ecx
  41f65b:	nop
  41f65c:	enter  0xa8c4,0x2e
  41f660:	jl     0x41f679
  41f662:	loopne 0x41f628
  41f664:	lods   eax,DWORD PTR ds:[esi]
  41f665:	cli    
  41f666:	dec    ecx
  41f667:	pop    ebp
  41f668:	dec    eax
  41f669:	inc    edx
  41f66a:	or     esi,DWORD PTR [esi-0xa01c94c]
  41f670:	scas   al,BYTE PTR es:[edi]
  41f671:	mov    dl,0xcf
  41f673:	sti    
  41f674:	push   es
  41f675:	dec    edx
  41f676:	aaa    
  41f677:	jle    0x41f647
  41f679:	mov    ecx,DWORD PTR [ebx-0x4d60f64c]
  41f67f:	xor    eax,DWORD PTR [edx]
  41f681:	push   esi
  41f682:	sbb    al,0xa8
  41f684:	mov    ss,WORD PTR [ebx+eiz*2]
  41f687:	dec    ecx
  41f688:	test   DWORD PTR [ebx],esi
  41f68a:	fadd   QWORD PTR [edx-0xaf175ed]
  41f690:	(bad)  
  41f691:	sbb    al,0xd6
  41f693:	or     ebp,DWORD PTR [edi]
  41f695:	jg     0x41f63d
  41f697:	push   cs
  41f698:	aam    0x45
  41f69a:	mov    eax,ds:0xe54c5288
  41f69f:	jmp    0x988bf09a
  41f6a4:	mov    edx,ebp
  41f6a6:	sahf   
  41f6a7:	mov    ecx,0x83efa27c
  41f6ac:	not    BYTE PTR [edx+0x2f27c734]
  41f6b2:	push   es
  41f6b3:	aaa    
  41f6b4:	sar    DWORD PTR [ebx],cl
  41f6b6:	dec    esi
  41f6b7:	lahf   
  41f6b8:	in     eax,dx
  41f6b9:	popf   
  41f6ba:	mov    ds:0xb0488223,al
  41f6bf:	xchg   BYTE PTR [edi-0x5e1afc70],bh
  41f6c5:	sbb    DWORD PTR [ebx-0x3754ac8a],edx
  41f6cb:	fiadd  DWORD PTR [ebp-0x716f0192]
  41f6d1:	scas   al,BYTE PTR es:[edi]
  41f6d2:	jmp    0x90e2:0x3a8ddda3
  41f6d9:	lods   al,BYTE PTR ds:[esi]
  41f6da:	jg     0x41f6a9
  41f6dc:	lods   al,BYTE PTR ds:[esi]
  41f6dd:	xor    al,0x52
  41f6df:	aam    0xb3
  41f6e1:	dec    edi
  41f6e2:	arpl   WORD PTR [edi+0x65],sp
  41f6e5:	dec    eax
  41f6e6:	push   eax
  41f6e7:	sbb    DWORD PTR [edx-0x29],0xffffffc2
  41f6eb:	mov    al,0xc2
  41f6ed:	pop    ebx
  41f6ee:	lahf   
  41f6ef:	sub    bl,BYTE PTR [esi]
  41f6f1:	dec    edx
  41f6f2:	(bad)  
  41f6f3:	add    BYTE PTR [edx+ebx*1],bl
  41f6f6:	cdq    
  41f6f7:	xchg   ebx,eax
  41f6f8:	test   cl,cl
  41f6fa:	inc    ebp
  41f6fb:	outs   dx,BYTE PTR ds:[esi]
  41f6fc:	lock test eax,0xf14f396e
  41f702:	repnz (bad) 
  41f704:	call   0xf1ef0c77
  41f709:	rcl    DWORD PTR [edi+0x5cc81af2],1
  41f70f:	xor    al,0x3a
  41f711:	sub    al,0xd9
  41f713:	ret    
  41f714:	js     0x41f77a
  41f716:	ret    
  41f717:	push   ebx
  41f718:	sbb    eax,0x7e7f32aa
  41f71d:	xor    ch,BYTE PTR [edi]
  41f71f:	xchg   ebp,eax
  41f720:	push   ecx
  41f721:	pop    ds
  41f722:	fsub   st(3),st
  41f724:	xchg   BYTE PTR [ecx-0x6c],dh
  41f727:	mov    ebp,0x8c29cef3
  41f72c:	sahf   
  41f72d:	call   0x8ee3:0x46c50ea5
  41f734:	pop    ecx
  41f735:	pop    esp
  41f736:	cld    
  41f737:	mov    ds:0xebba5490,al
  41f73c:	pop    esi
  41f73d:	mov    cl,0xf8
  41f73f:	sbb    bh,BYTE PTR [edi+0x0]
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	or     al,0x42
  41f7c2:	mov    ebp,0x151b11c
  41f7c7:	add    ch,dh
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [edi+0x29bdd663],dh
  41f7d1:	jnp    0x41f7af
  41f7d3:	inc    ecx
  41f7d4:	and    ah,ah
  41f7d6:	or     DWORD PTR [ebp+0x4d],edx
  41f7d9:	mov    esi,0xf5e18cfe
  41f7de:	cmp    al,0xbc
  41f7e0:	or     al,0xa8
  41f7e2:	test   DWORD PTR [esi],0x24c07219
  41f7e8:	retf   
  41f7e9:	repnz stos BYTE PTR es:[edi],al
  41f7eb:	add    DWORD PTR [edi-0x6ac6aa49],ebp
  41f7f1:	mov    edx,0x6a70568b
  41f7f6:	fdivr  QWORD PTR [ecx+0x29]
  41f7f9:	xor    eax,0x4e6e802f
  41f7fe:	loop   0x41f799
  41f800:	pop    es
  41f801:	test   DWORD PTR fs:[eax+0x42],esi
  41f805:	adc    ecx,DWORD PTR [esi+0x37e0b553]
  41f80b:	rcl    DWORD PTR [edx],1
  41f80d:	or     DWORD PTR [esp+ebx*2+0x39],ebx
  41f811:	sbb    ch,dh
  41f813:	push   ss
  41f814:	jl     0x41f80c
  41f816:	sbb    dh,BYTE PTR [ebp+eiz*8+0x53]
  41f81a:	dec    ebp
  41f81b:	adc    eax,DWORD PTR [esi]
  41f81d:	and    DWORD PTR [bp+di+0x3c7d],ecx
  41f822:	mov    edx,edx
  41f824:	add    eax,0x6c7cabf2
  41f829:	sbb    BYTE PTR [esi-0x5b],cl
  41f82c:	adc    bp,bp
  41f82f:	nop
  41f830:	jnp    0x41f807
  41f832:	mov    cl,0xae
  41f834:	lahf   
  41f835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f836:	repz or eax,0x6946e7af
  41f83c:	xchg   esi,eax
  41f83d:	push   eax
  41f83e:	dec    esp
  41f83f:	mov    cl,0xf1
  41f841:	jecxz  0x41f862
  41f843:	mov    edx,0x3432c8f
  41f848:	cmp    ecx,DWORD PTR [edx+0x7a]
  41f84b:	jmp    0x41f7eb
  41f84d:	test   DWORD PTR [edi],esp
  41f84f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f850:	pop    esp
  41f851:	in     eax,dx
  41f852:	pop    ds
  41f853:	adc    eax,ecx
  41f855:	and    ch,bh
  41f857:	int    0xb8
  41f859:	addr16 xchg edx,eax
  41f85b:	outs   dx,DWORD PTR ds:[esi]
  41f85c:	and    ebp,DWORD PTR [esi]
  41f85e:	add    esp,ecx
  41f860:	cld    
  41f861:	shr    ch,cl
  41f863:	pop    edi
  41f864:	or     esp,ebp
  41f866:	inc    esi
  41f867:	callw  0x2490
  41f86b:	sub    eax,0x94924f6e
  41f870:	pop    ds
  41f871:	cmp    DWORD PTR [edx-0x59],eax
  41f874:	idiv   BYTE PTR [ebx-0x51e8aa7d]
  41f87a:	popf   
  41f87b:	mov    edx,0x59c83381
  41f880:	pop    edi
  41f881:	jge    0x41f85b
  41f883:	out    dx,al
  41f884:	fscale 
  41f886:	mov    edi,0x65486a65
  41f88b:	bound  esi,QWORD PTR [edi-0x65]
  41f88e:	inc    esp
  41f88f:	mov    bl,0x65
  41f891:	mov    BYTE PTR [eax-0x7ac5cc7],ah
  41f897:	ds aas 
  41f899:	adc    eax,0xd7dbbc91
  41f89e:	hlt    
  41f89f:	xchg   esp,eax
  41f8a0:	scas   al,BYTE PTR es:[edi]
  41f8a1:	lods   eax,DWORD PTR ds:[esi]
  41f8a2:	pop    ss
  41f8a3:	xlat   BYTE PTR ds:[ebx]
  41f8a4:	mov    eax,ds:0xd2dce267
  41f8a9:	popa   
  41f8aa:	push   edx
  41f8ab:	cmp    BYTE PTR [ebx+0x39],dl
  41f8ae:	xlat   BYTE PTR ds:[ebx]
  41f8af:	imul   ebx,DWORD PTR [edi],0x397f37db
  41f8b5:	div    bl
  41f8b7:	cmovb  ebx,esi
  41f8ba:	mov    esp,0x37be563e
  41f8bf:	mov    eax,ds:0x2c
	...
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x579ffef7
  41f941:	cld    
  41f942:	dec    edi
  41f943:	retf   0x52a6
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [ecx],bh
  41f94d:	sbb    al,BYTE PTR [ecx-0x75]
  41f950:	cmp    eax,0x3765d8ea
  41f955:	ficomp WORD PTR [ebp-0x13df0117]
  41f95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95c:	mov    al,0x45
  41f95e:	push   ecx
  41f95f:	(bad)  
  41f960:	lahf   
  41f961:	fsubr  st,st(4)
  41f963:	or     DWORD PTR [ebp+0x31],edx
  41f966:	lods   eax,DWORD PTR ds:[esi]
  41f967:	cli    
  41f968:	mov    edi,0xf27e5165
  41f96d:	sub    eax,0xd4921475
  41f972:	sub    DWORD PTR [eax],ebx
  41f974:	adc    dl,BYTE PTR [ebp+0x253b888c]
  41f97a:	pop    edx
  41f97b:	adc    eax,0x6f8fec2f
  41f980:	adc    BYTE PTR [ebx+0x14],bl
  41f983:	xchg   esi,eax
  41f984:	ret    
  41f985:	push   eax
  41f986:	pop    edx
  41f987:	inc    ebp
  41f988:	lds    edx,FWORD PTR [esi-0x432bbb03]
  41f98e:	xor    DWORD PTR [edx],ebp
  41f990:	ins    BYTE PTR es:[edi],dx
  41f991:	xor    BYTE PTR [ebp-0x6891e98c],bl
  41f997:	mov    cl,0x2e
  41f999:	icebp  
  41f99a:	data16 jbe 0x41f99e
  41f99d:	mov    al,0xe5
  41f99f:	jno    0x41f99a
  41f9a1:	and    bh,0x90
  41f9a4:	mov    eax,ds:0xdf6d9ed9
  41f9a9:	sahf   
  41f9aa:	cld    
  41f9ab:	or     edi,DWORD PTR [ecx+0x6a]
  41f9ae:	lods   al,BYTE PTR ds:[esi]
  41f9af:	dec    edi
  41f9b0:	adc    eax,0x5d92acb9
  41f9b5:	out    0x6c,eax
  41f9b7:	aaa    
  41f9b8:	sub    eax,0x28390af4
  41f9bd:	mov    esi,0xccd9c044
  41f9c2:	test   eax,0xd29646a
  41f9c7:	lods   al,BYTE PTR ds:[esi]
  41f9c8:	aam    0xeb
  41f9ca:	dec    eax
  41f9cb:	leave  
  41f9cc:	add    ecx,ebp
  41f9ce:	daa    
  41f9cf:	jle    0x41f96a
  41f9d1:	addr16 (bad) 
  41f9d3:	arpl   bx,bp
  41f9d5:	dec    ecx
  41f9d6:	mov    ebp,0x25a811ec
  41f9db:	into   
  41f9dc:	lds    ebx,FWORD PTR [edx-0x67]
  41f9df:	and    eax,0x6157fa93
  41f9e4:	add    al,0x81
  41f9e6:	mov    BYTE PTR [edi-0x223313e6],bl
  41f9ec:	sbb    DWORD PTR [esi+0x28],esi
  41f9ef:	mov    edi,0x973931a8
  41f9f4:	add    eax,0xa08854ad
  41f9f9:	test   DWORD PTR [edx+edi*1+0x4b64024f],eax
  41fa00:	inc    edi
  41fa01:	aam    0x69
  41fa03:	and    DWORD PTR [ebx+0x75],eax
  41fa06:	ja     0x41fa6f
  41fa08:	inc    edx
  41fa09:	inc    eax
  41fa0a:	mov    esp,0xf8698311
  41fa0f:	or     ebx,esp
  41fa11:	or     eax,0xfa8539cc
  41fa16:	lock mov ds:0x130f9476,eax
  41fa1c:	test   DWORD PTR ds:[esi+0x4499a98a],ecx
  41fa23:	in     eax,dx
  41fa24:	or     eax,0xeba4677d
  41fa29:	push   es
  41fa2a:	sbb    eax,DWORD PTR [ecx+eiz*8]
  41fa2d:	rol    ebp,0x38
  41fa30:	xchg   edx,eax
  41fa31:	add    al,0x3
  41fa33:	mov    ah,0x8e
  41fa35:	xchg   ebp,eax
  41fa36:	xor    eax,0xb334a723
  41fa3b:	sbb    DWORD PTR [esi-0x3ee6f37b],edx
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	lahf   
  41fac1:	stos   DWORD PTR es:[edi],eax
  41fac2:	nop
  41fac3:	fcomp  QWORD PTR [ebx-0xafffead]
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    BYTE PTR [eax-0x7cffd115],bh
  41fad1:	inc    eax
  41fad2:	fwait
  41fad3:	jne    0x41fa95
  41fad5:	push   cs
  41fad6:	ret    0xd68
  41fad9:	add    BYTE PTR [esi+0x5],cl
  41fadc:	xor    al,0x68
  41fade:	dec    eax
  41fadf:	div    DWORD PTR [ebp+0x1471c3ac]
  41fae5:	push   cx
  41fae7:	mov    ebp,0x893338d8
  41faec:	clc    
  41faed:	(bad)  
  41faee:	clc    
  41faef:	out    0xb8,eax
  41faf1:	jo     0x41fac0
  41faf3:	xchg   edi,eax
  41faf4:	mov    edi,0xe1c063c5
  41faf9:	(bad)  
  41fafa:	pop    edi
  41fafb:	shl    DWORD PTR [ebx-0x7b],1
  41fafe:	dec    edi
  41faff:	sbb    ch,ah
  41fb01:	add    bh,BYTE PTR [esi+eax*4+0x2e]
  41fb05:	sub    DWORD PTR [ecx],ecx
  41fb07:	sti    
  41fb08:	mov    ch,0x54
  41fb0a:	mov    edi,0xb9c4d464
  41fb0f:	inc    ecx
  41fb10:	das    
  41fb11:	add    DWORD PTR ds:0x9bc69630,esi
  41fb17:	nop
  41fb18:	in     al,dx
  41fb19:	add    DWORD PTR [esi+0x6c],ecx
  41fb1c:	dec    esp
  41fb1d:	icebp  
  41fb1e:	iret   
  41fb1f:	mov    edi,0x7e5f3e6c
  41fb24:	pop    edx
  41fb25:	push   edx
  41fb26:	mov    esp,0xa957bdaa
  41fb2b:	loop   0x41fba3
  41fb2d:	mov    edx,0xc581c8d8
  41fb32:	imul   ebx,DWORD PTR [esi],0xfffffff3
  41fb35:	stc    
  41fb36:	inc    edx
  41fb37:	jo     0x41fb40
  41fb39:	mov    ds:0x9b31b268,al
  41fb3e:	xlat   BYTE PTR ds:[ebx]
  41fb3f:	add    al,bl
  41fb41:	js     0x41fb25
  41fb43:	inc    esi
  41fb44:	mov    ds:0x23cb94f3,al
  41fb49:	or     al,0x16
  41fb4b:	xchg   edx,eax
  41fb4c:	or     ebp,edi
  41fb4e:	mov    cl,0xcb
  41fb50:	(bad)  
  41fb52:	rcr    ebx,cl
  41fb54:	inc    edx
  41fb55:	xor    ebx,DWORD PTR [edx+0x70deec7d]
  41fb5b:	sbb    DWORD PTR [ecx],esi
  41fb5d:	arpl   WORD PTR [edx-0x1055f0a2],bx
  41fb63:	xchg   ebx,eax
  41fb64:	dec    esi
  41fb65:	(bad)  
  41fb66:	repnz test edi,0xbed5b84d
  41fb6d:	push   ebp
  41fb6e:	mov    ebp,0x83e3d919
  41fb73:	and    DWORD PTR [ebx+0x45],edx
  41fb76:	pop    es
  41fb77:	shr    bh,0xd1
  41fb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb7b:	or     al,0xf5
  41fb7d:	jl     0x41fbfa
  41fb7f:	imul   edx,DWORD PTR [esi-0x14e27cf8],0xfffffffd
  41fb86:	fsub   st,st(4)
  41fb88:	and    eax,0x65393f9e
  41fb8d:	inc    edx
  41fb8e:	scas   eax,DWORD PTR es:[edi]
  41fb8f:	mov    bl,0x1d
  41fb91:	and    eax,esi
  41fb93:	cmp    bl,cl
  41fb95:	cmc    
  41fb96:	frstor ds:0xcadb0c41
  41fb9c:	lods   eax,DWORD PTR ds:[esi]
  41fb9d:	cmp    DWORD PTR [ebp+0x2c],esp
  41fba0:	adc    eax,0x88ba072f
  41fba5:	and    esi,DWORD PTR [eax]
  41fba7:	mov    ds:0x93795587,eax
  41fbac:	(bad)  
  41fbad:	rcl    BYTE PTR [ebp+0x72],1
  41fbb0:	sbb    al,0xcf
  41fbb2:	dec    ebx
  41fbb3:	mov    bl,0x8a
  41fbb5:	mov    al,0xbe
  41fbb7:	cmp    al,0xa
  41fbb9:	and    DWORD PTR [eax-0x75a45200],edi
  41fbbf:	sbb    DWORD PTR [edi+0x0],ecx
	...
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	inc    ecx
  41fc35:	icebp  
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x60be8ad2
  41fc42:	jmp    DWORD PTR [eax+edx*4-0xafffeac]
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    dl,ah
  41fc4d:	pop    edx
  41fc4e:	into   
  41fc4f:	lods   al,BYTE PTR ds:[esi]
  41fc50:	jmp    0x732b56db
  41fc55:	mov    al,ds:0x7d2052b0
  41fc5a:	xchg   ecx,eax
  41fc5b:	xor    BYTE PTR [esi+eax*1],0x5f
  41fc5f:	jl     0x41fcdb
  41fc61:	gs cli 
  41fc63:	(bad)  
  41fc64:	jne    0x41fcd7
  41fc66:	add    BYTE PTR [edx-0x44],0x44
  41fc6a:	xchg   DWORD PTR [ebp-0x8],ecx
  41fc6d:	stos   DWORD PTR es:[edi],eax
  41fc6e:	pop    ecx
  41fc6f:	scas   eax,DWORD PTR es:[edi]
  41fc70:	loopne 0x41fcba
  41fc72:	push   0x6f
  41fc74:	rep stos DWORD PTR es:[edi],eax
  41fc76:	jmp    0x705d:0x6d9db460
  41fc7d:	aad    0x31
  41fc7f:	jmp    0x6a59fa38
  41fc84:	xor    BYTE PTR [esi],0x36
  41fc87:	mov    ecx,0x624b81d5
  41fc8c:	ja     0x41fc2c
  41fc8e:	std    
  41fc8f:	popa   
  41fc90:	aam    0xe4
  41fc92:	sub    dh,bl
  41fc94:	mov    bh,0xf5
  41fc96:	xchg   BYTE PTR [ebx],dh
  41fc98:	jno    0x41fc30
  41fc9a:	mov    al,ds:0x50575eea
  41fc9f:	push   eax
  41fca0:	xor    al,0x9
  41fca2:	in     al,dx
  41fca3:	jb     0x41fc8d
  41fca5:	(bad)  
  41fca6:	shl    ebp,cl
  41fca8:	cmp    BYTE PTR [esp+eiz*2],bl
  41fcab:	sub    edi,0x21
  41fcae:	pop    ebx
  41fcaf:	push   ss
  41fcb0:	mov    eax,0xc1110d84
  41fcb5:	icebp  
  41fcb6:	xchg   ebp,eax
  41fcb7:	sub    cl,cl
  41fcb9:	add    cl,BYTE PTR [edx]
  41fcbb:	inc    eax
  41fcbc:	push   ss
  41fcbd:	dec    edx
  41fcbe:	ror    edi,1
  41fcc0:	cmc    
  41fcc1:	ja     0x41fc97
  41fcc3:	outs   dx,DWORD PTR ds:[esi]
  41fcc4:	addr16 xchg ecx,eax
  41fcc6:	and    al,0x59
  41fcc8:	inc    edx
  41fcc9:	push   edx
  41fcca:	mov    ebp,DWORD PTR [ebx+0x5097c368]
  41fcd0:	jl     0x41fc8b
  41fcd2:	sub    eax,DWORD PTR [ecx-0x37]
  41fcd5:	and    eax,0x2b75d0ed
  41fcda:	pop    ds
  41fcdb:	ins    BYTE PTR es:[edi],dx
  41fcdc:	test   BYTE PTR [ebx+0x62],cl
  41fcdf:	pushf  
  41fce0:	push   ds
  41fce1:	jo     0x41fd0a
  41fce3:	cmc    
  41fce4:	idiv   DWORD PTR [eax]
  41fce6:	push   ss
  41fce7:	aas    
  41fce8:	jb     0x41fd3a
  41fcea:	loopne 0x41fcc2
  41fcec:	in     al,0x7e
  41fcee:	add    DWORD PTR [ebx-0x691288a8],0xf67ce02d
  41fcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf9:	sub    eax,0x1833e98b
  41fcfe:	sub    esi,DWORD PTR [edi+esi*1-0x398fd992]
  41fd05:	dec    eax
  41fd06:	xchg   esi,eax
  41fd07:	dec    ebx
  41fd08:	jmp    0x5e2bfff6
  41fd0d:	and    BYTE PTR [ebx-0x66],al
  41fd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd11:	fsub   DWORD PTR [esi+0x77]
  41fd14:	mov    al,ds:0xc712a0fd
  41fd19:	mov    ebx,0x7b328fa8
  41fd1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1f:	mov    al,BYTE PTR [ebx]
  41fd21:	xchg   BYTE PTR [ecx],dh
  41fd23:	aam    0x7
  41fd25:	push   0xffffff9a
  41fd27:	inc    esi
  41fd28:	test   BYTE PTR [edx-0x7c],dh
  41fd2b:	xor    al,ch
  41fd2d:	sbb    al,BYTE PTR [ebp-0x653a2f50]
  41fd33:	lock (bad) 
  41fd36:	in     eax,dx
  41fd37:	sub    BYTE PTR [esi-0x71772d6c],ch
  41fd3d:	lfs    esp,FWORD PTR [ebp+0xc3]
	...
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	ds cmp al,0xeb
  41fdc3:	mov    DWORD PTR [ebp-0xafffeab],eax
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    ah,ch
  41fdcd:	test   al,0xfb
  41fdcf:	leave  
  41fdd0:	fcmovbe st,st(4)
  41fdd2:	adc    cl,BYTE PTR [edi+0x59]
  41fdd5:	add    al,0x38
  41fdd7:	and    dl,BYTE PTR [eax-0x17]
  41fdda:	(bad)  
  41fddb:	icebp  
  41fddc:	sbb    DWORD PTR [ecx+0x2e],ebx
  41fddf:	push   ecx
  41fde0:	jg     0x41fd91
  41fde2:	mov    eax,?
  41fde4:	arpl   WORD PTR ds:0x651865d5,si
  41fdea:	xor    BYTE PTR [ebp-0x78],0x96
  41fdee:	test   BYTE PTR [ebx],0x80
  41fdf1:	lahf   
  41fdf2:	shl    BYTE PTR [edx],0xf
  41fdf5:	(bad)  
  41fdf6:	ins    DWORD PTR es:[edi],dx
  41fdf7:	mov    edx,DWORD PTR [edx+0x703a0ce9]
  41fdfd:	out    0x4,eax
  41fdff:	je     0x41fdd5
  41fe01:	lods   al,BYTE PTR ds:[esi]
  41fe02:	shl    ebp,1
  41fe04:	into   
  41fe05:	mov    esi,0x2b571841
  41fe0a:	xor    esi,ebx
  41fe0c:	gs add bh,dl
  41fe0f:	inc    edx
  41fe10:	sub    edi,DWORD PTR [esi]
  41fe12:	ja     0x41fde6
  41fe14:	int    0x20
  41fe16:	shl    DWORD PTR [ebx+0x4e51b668],1
  41fe1c:	sbb    BYTE PTR [eax+0x2cbefd3],cl
  41fe22:	pop    esp
  41fe23:	retf   0x7af5
  41fe26:	dec    eax
  41fe27:	sahf   
  41fe28:	inc    esi
  41fe29:	mov    al,0x1b
  41fe2b:	mov    edx,esi
  41fe2d:	call   0x8e04add2
  41fe32:	shl    ecx,cl
  41fe34:	hlt    
  41fe35:	xchg   edx,eax
  41fe36:	sbb    DWORD PTR [ebx],ebx
  41fe38:	out    dx,eax
  41fe39:	loop   0x41fe06
  41fe3b:	xchg   edi,eax
  41fe3c:	cmp    dh,BYTE PTR [eax]
  41fe3e:	and    BYTE PTR [edx+0x1],al
  41fe41:	shr    DWORD PTR [ecx-0x69],1
  41fe44:	inc    ebx
  41fe45:	sti    
  41fe46:	cdq    
  41fe47:	out    0xdf,eax
  41fe49:	jmp    0xa398eb58
  41fe4e:	imul   BYTE PTR [edx-0x7b08e671]
  41fe54:	les    edx,FWORD PTR [ebx-0x2]
  41fe57:	and    BYTE PTR [ebp+0x6d],0xfc
  41fe5b:	inc    edi
  41fe5c:	pop    es
  41fe5d:	sub    eax,0x84ac6b59
  41fe62:	adc    al,0x42
  41fe64:	mov    ds:0x7f0442fc,eax
  41fe69:	stos   DWORD PTR es:[edi],eax
  41fe6a:	dec    ebp
  41fe6b:	enter  0xf792,0x73
  41fe6f:	dec    edx
  41fe70:	gs inc ecx
  41fe72:	and    eax,0xe432d572
  41fe77:	test   BYTE PTR [eax+0x69f04673],dl
  41fe7d:	lods   eax,DWORD PTR ds:[esi]
  41fe7e:	popa   
  41fe7f:	test   eax,0x845a7a43
  41fe84:	pop    esi
  41fe85:	or     dh,dh
  41fe87:	adc    bh,BYTE PTR [ebx-0x3a]
  41fe8a:	mov    bl,0x21
  41fe8c:	mov    esi,0x13f060d2
  41fe91:	mov    ah,0x5e
  41fe93:	pop    ebx
  41fe94:	pop    ss
  41fe95:	mov    cl,0x32
  41fe97:	adc    DWORD PTR ds:0x769bf10b,0xffffffec
  41fe9e:	sbb    al,0x8
  41fea0:	data16 in al,0xf6
  41fea3:	adc    edx,eax
  41fea5:	loope  0x41feff
  41fea7:	mov    ds:0x5660d98a,al
  41feac:	ins    DWORD PTR es:[edi],dx
  41fead:	inc    eax
  41feae:	mov    ch,0x60
  41feb0:	mov    WORD PTR [edx],?
  41feb2:	mov    ecx,0x9f218e92
  41feb7:	loope  0x41fea8
  41feb9:	xchg   ebx,eax
  41feba:	sbb    esp,DWORD PTR [edx-0xd676399]
  41fec0:	retf   
	...
  41ff31:	add    BYTE PTR [eax],al
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x3bd93d72],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [ecx],dl
  41ff4d:	nop
  41ff4e:	xor    ecx,DWORD PTR ds:0xd4d4f949
  41ff54:	xchg   edi,eax
  41ff55:	mov    bl,0x7e
  41ff57:	adc    ebx,ebx
  41ff59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff5a:	cli    
  41ff5b:	das    
  41ff5c:	cs cmp eax,0x752d2937
  41ff62:	xchg   dh,cl
  41ff64:	shl    BYTE PTR [ebp-0x6331c17a],1
  41ff6a:	cs js  0x41ff29
  41ff6d:	ja     0x41ff16
  41ff6f:	fadd   DWORD PTR [ebp+0x56]
  41ff72:	in     eax,dx
  41ff73:	scas   eax,DWORD PTR es:[edi]
  41ff74:	stos   DWORD PTR es:[edi],eax
  41ff75:	loop   0x41ff19
  41ff77:	arpl   WORD PTR [ebx+0x7a],ax
  41ff7a:	test   esp,esi
  41ff7c:	sar    BYTE PTR [edx-0x20],cl
  41ff7f:	push   edx
  41ff80:	mov    ch,0x5b
  41ff82:	out    0x6d,eax
  41ff84:	push   cs
  41ff85:	cmp    cl,BYTE PTR [ebx-0x106b0f22]
  41ff8b:	leave  
  41ff8c:	into   
  41ff8d:	push   es
  41ff8e:	fwait
  41ff8f:	adc    eax,0xbca1334f
  41ff94:	dec    edi
  41ff95:	out    0xdf,al
  41ff97:	jb     0x41ff5a
  41ff99:	add    dh,BYTE PTR [esi]
  41ff9b:	xchg   esp,eax
  41ff9c:	sti    
  41ff9d:	dec    ebp
  41ff9e:	div    DWORD PTR [ecx]
  41ffa0:	pop    ds
  41ffa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffa2:	push   ebx
  41ffa3:	scas   eax,DWORD PTR es:[edi]
  41ffa4:	xchg   ebp,eax
  41ffa5:	adc    eax,0xdc7dd3ba
  41ffaa:	mov    bl,0x30
  41ffac:	mov    ch,0x9c
  41ffae:	sub    al,0x34
  41ffb0:	push   ecx
  41ffb1:	(bad)  [ebp+0x2b]
  41ffb4:	adc    DWORD PTR [ecx+0x4f0c1f24],eax
  41ffba:	and    eax,0x3e545caa
  41ffbf:	loop   0x42003c
  41ffc1:	push   ss
  41ffc2:	mov    esi,0x71205bcb
  41ffc7:	mov    al,0xf5
  41ffc9:	or     edi,DWORD PTR [esi+0x5f]
  41ffcc:	in     eax,dx
  41ffcd:	nop
  41ffce:	inc    esp
  41ffcf:	popf   
  41ffd0:	adc    DWORD PTR [ecx-0x79517fd5],ecx
  41ffd6:	inc    edi
  41ffd7:	xchg   DWORD PTR [edi],esi
  41ffd9:	xchg   esp,eax
  41ffda:	mov    edi,0x7d9c5119
  41ffdf:	adc    ch,BYTE PTR [esi]
  41ffe1:	lock pop esp
  41ffe3:	lods   al,BYTE PTR ds:[esi]
  41ffe4:	jae    0x41fffa
  41ffe6:	pop    ds
  41ffe7:	xchg   BYTE PTR [ebx],dh
  41ffe9:	jmp    0x93a7:0xf2cdac8d
  41fff0:	and    ecx,ebx
  41fff2:	jmp    0x544a:0x3318c71
  41fff9:	xchg   esi,eax
  41fffa:	pop    edx
  41fffb:	clc    
  41fffc:	cmp    DWORD PTR [ebp-0xd],edx
  41ffff:	cld    
  420000:	add    al,BYTE PTR [ebp+0x45a49569]
  420006:	loopne 0x420051
  420008:	mov    al,ds:0xc6ba595b
  42000d:	retf   
  42000e:	cmp    DWORD PTR [edi+0x62],ebp
  420011:	jl     0x41ffe0
  420013:	jmp    0x822679bb
  420018:	cli    
  420019:	sbb    cl,BYTE PTR [edi-0x6b]
  42001c:	in     al,0x89
  42001e:	inc    edi
  42001f:	call   0x6f22:0xa069a874
  420026:	sub    DWORD PTR ds:0x9df64c71,eax
  42002c:	adc    DWORD PTR [ecx],eax
  42002e:	lea    edi,ds:0xcebbafa3
  420034:	js     0x41ffdf
  420036:	cwde   
  420037:	fisubr WORD PTR [ebx-0x47c6f941]
  42003d:	or     al,al
  42003f:	xor    BYTE PTR [edi+0x0],0x0
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax+0x329685b4],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [ebp-0x4b],ah
  4200ce:	cmp    edx,DWORD PTR [esi]
  4200d0:	je     0x42007a
  4200d2:	xchg   ebx,eax
  4200d3:	fstp   DWORD PTR [ebx+eax*2-0x1f]
  4200d7:	xchg   esi,eax
  4200d8:	inc    ebp
  4200d9:	pop    ebx
  4200da:	mov    ds:0xd098d040,eax
  4200df:	dec    ecx
  4200e0:	adc    al,0x32
  4200e2:	vmwrite esp,DWORD PTR [eax]
  4200e5:	inc    esp
  4200e6:	adc    edi,ecx
  4200e8:	aas    
  4200e9:	inc    edx
  4200ea:	ror    DWORD PTR [edi],1
  4200ec:	int3   
  4200ed:	scas   al,BYTE PTR es:[edi]
  4200ee:	das    
  4200ef:	movaps xmm6,xmm1
  4200f2:	int    0xa4
  4200f4:	xchg   BYTE PTR [edi],dh
  4200f6:	sbb    al,0x68
  4200f8:	in     eax,0x98
  4200fa:	jae    0x420081
  4200fc:	jmp    0x420115
  4200fe:	sub    eax,0xe99a4fc1
  420103:	shrd   DWORD PTR [esi+edx*4],ebp,cl
  420107:	mov    ah,0x3b
  420109:	and    esi,DWORD PTR [ebp-0x5]
  42010c:	popf   
  42010d:	jg     0x4200c8
  42010f:	sub    BYTE PTR [ecx],ah
  420111:	add    ebp,DWORD PTR [ebx+0x4fb0ac90]
  420117:	add    al,0x54
  420119:	jo     0x4200c4
  42011b:	and    eax,0xd7f9200d
  420120:	imul   esp,DWORD PTR [ecx],0xccfd5f74
  420126:	pop    ecx
  420127:	and    cl,ah
  420129:	popa   
  42012a:	mov    dl,0x7e
  42012c:	mov    cl,0x88
  42012e:	sbb    al,ch
  420130:	icebp  
  420131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420132:	sbb    al,0xfb
  420134:	fimul  WORD PTR [edx+0x13]
  420137:	je     0x4200e9
  420139:	popa   
  42013a:	inc    ebp
  42013b:	sub    DWORD PTR [eax-0x1ba96cdd],eax
  420141:	xor    BYTE PTR [esi+0x2afdcf0f],dl
  420147:	repz or dh,BYTE PTR [ebx-0x55]
  42014b:	retf   0xce6c
  42014e:	lahf   
  42014f:	hlt    
  420150:	rcr    BYTE PTR [esi-0x69],cl
  420153:	outs   dx,BYTE PTR ds:[esi]
  420154:	xchg   esi,eax
  420155:	or     al,0x3f
  420157:	sbb    dl,BYTE PTR [ecx]
  420159:	mov    ds:0xfee6d434,eax
  42015e:	push   eax
  42015f:	jbe    0x42018f
  420161:	mov    BYTE PTR [ebp+0x6f],dh
  420164:	fs pop ebx
  420166:	fcmovbe st,st(1)
  420168:	mov    eax,0xc9b4ff03
  42016d:	fucomi st,st(6)
  42016f:	jnp    0x420187
  420171:	jecxz  0x42010b
  420173:	dec    edx
  420174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420175:	iret   
  420176:	push   edx
  420177:	dec    ebp
  420178:	fsincos 
  42017a:	pop    ebp
  42017b:	fidivr WORD PTR [ebp-0x5fee5479]
  420181:	xchg   ecx,eax
  420182:	out    dx,al
  420183:	in     eax,dx
  420184:	aam    0xf7
  420186:	jo     0x420155
  420188:	hlt    
  420189:	loop   0x4201f7
  42018b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42018c:	pop    edi
  42018d:	sbb    ecx,DWORD PTR [ebp*4-0x2acdb6f2]
  420194:	cmc    
  420195:	adc    BYTE PTR [edx-0x188b242e],cl
  42019b:	repz mov edi,0x736aaf6e
  4201a1:	xchg   edx,eax
  4201a2:	sub    DWORD PTR [ebx],ecx
  4201a4:	or     eax,0xda83251e
  4201a9:	in     eax,dx
  4201aa:	sbb    al,0x61
  4201ac:	or     al,0xf1
  4201ae:	rol    dh,cl
  4201b0:	mov    esi,0x30800d5e
  4201b5:	test   DWORD PTR [edx-0x6e],0x80bbf9e9
  4201bc:	mov    dh,0x93
  4201be:	sub    ebp,0xffffffab
	...
  420231:	add    BYTE PTR [eax],al
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0xa967d010,ebx
  420242:	repnz sbb al,0x64
  420245:	pop    eax
  420246:	add    DWORD PTR [eax],eax
  420248:	cmc    
  420249:	add    BYTE PTR [eax],al
  42024b:	add    al,ch
  42024d:	xor    DWORD PTR [ebp+0x478ee363],0xffffffb2
  420254:	cwde   
  420255:	(bad)  
  420256:	retf   0xdcdc
  420259:	leave  
  42025a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42025b:	outs   dx,BYTE PTR ds:[esi]
  42025c:	jg     0x420268
  42025e:	shr    DWORD PTR [esi+0x1d],cl
  420261:	mov    ah,0x3c
  420263:	sbb    ebx,eax
  420265:	push   es
  420266:	ds xchg edi,eax
  420268:	mov    esi,0xe2e06210
  42026d:	imul   BYTE PTR [ebp+0x23]
  420270:	pop    ds
  420271:	nop
  420272:	jp     0x4202bc
  420274:	pop    ecx
  420275:	jae    0x420214
  420277:	push   es
  420278:	xchg   DWORD PTR [eax-0x5ba41caa],edx
  42027e:	push   esp
  42027f:	and    ebx,DWORD PTR [edi]
  420281:	mov    WORD PTR [ebx+ebp*4-0x32c72747],cs
  420288:	gs jmp 0xb5b2:0xa7672fb1
  420290:	mov    al,0xfd
  420292:	loope  0x4202f9
  420294:	sbb    DWORD PTR [ecx-0x59b3bf92],ebx
  42029a:	adc    dh,ah
  42029c:	mov    bh,0x62
  42029e:	mov    edi,0x5daebfbe
  4202a3:	test   DWORD PTR [ecx-0x3cd9bc86],0xbf26c31b
  4202ad:	dec    esp
  4202ae:	imul   DWORD PTR [ebx]
  4202b0:	pushf  
  4202b1:	jmp    0x2a1cabfe
  4202b6:	mov    WORD PTR [edi],?
  4202b8:	sub    DWORD PTR [edx-0x2f],ebp
  4202bb:	in     al,0x84
  4202bd:	xor    ecx,ecx
  4202bf:	adc    BYTE PTR [ebp-0x70ea7962],bh
  4202c5:	mov    esp,0x20f12b51
  4202ca:	repnz xor DWORD PTR [ebp-0x71b1230b],eax
  4202d1:	retf   
  4202d2:	lock pop es
  4202d4:	or     dh,bl
  4202d6:	mov    esp,0x66a4380e
  4202db:	xor    ecx,edx
  4202dd:	mov    ebp,0x84f95a90
  4202e2:	je     0x4202ba
  4202e4:	mov    edi,0x2680742e
  4202e9:	jo     0x42033a
  4202eb:	lock in al,dx
  4202ed:	pop    edx
  4202ee:	cmp    dh,dh
  4202f0:	loope  0x4202a8
  4202f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f3:	mov    cl,0x55
  4202f5:	out    dx,al
  4202f6:	je     0x4202f6
  4202f8:	dec    edx
  4202f9:	xchg   esi,eax
  4202fa:	pop    edx
  4202fb:	cli    
  4202fc:	xchg   ecx,edx
  4202fe:	sbb    BYTE PTR [ebx-0x20],0x4e
  420302:	rol    BYTE PTR [eax-0x7233d23d],1
  420308:	cdq    
  420309:	fwait
  42030a:	push   edi
  42030b:	ret    
  42030c:	sbb    al,0x3d
  42030e:	pop    ss
  42030f:	and    BYTE PTR [ecx],0xfc
  420312:	jmp    0xbd4ba700
  420317:	jle    0x4202e6
  420319:	fs dec eax
  42031b:	push   ecx
  42031c:	mov    dl,0x44
  42031e:	xchg   edx,eax
  42031f:	cmp    dh,0x6f
  420322:	pop    esi
  420323:	jno    0x420301
  420325:	jp     0x420337
  420327:	push   ebx
  420328:	or     DWORD PTR [edx+0x43],ebp
  42032b:	(bad)  
  42032c:	mov    ds:0xf727fbac,al
  420331:	in     eax,dx
  420332:	test   BYTE PTR [eax-0x31],ch
  420335:	xchg   esi,eax
  420336:	or     cl,BYTE PTR [edx+eiz*4+0x5395dade]
  42033d:	retf   
  42033e:	test   DWORD PTR [esi+0x93],ebp
	...
  4203b4:	cmp    al,0xe7
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [esi+0x59197fa3],sp
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    al,cl
  4203cd:	es mov edi,0xc88791c9
  4203d3:	and    BYTE PTR [ebx-0x71c0b00d],0x54
  4203da:	cmp    BYTE PTR [esi+0x389555e7],0xde
  4203e1:	adc    DWORD PTR [edx+0x3e],ebp
  4203e4:	popf   
  4203e5:	mov    ebx,0xbcedd208
  4203ea:	imul   esp,DWORD PTR [ecx],0x51
  4203ed:	sahf   
  4203ee:	rcr    al,cl
  4203f0:	pop    esi
  4203f1:	jb     0x4203af
  4203f3:	jb     0x420432
  4203f5:	mov    bh,0x0
  4203f7:	fdivr  DWORD PTR [edi-0x29]
  4203fa:	in     al,dx
  4203fb:	mov    esi,DWORD PTR [ebx+0x67]
  4203fe:	mov    ds:0x3c75a3e,eax
  420403:	push   es
  420404:	adc    BYTE PTR [ebp-0x4a],ah
  420407:	add    eax,DWORD PTR [ecx+0x5390768d]
  42040d:	or     cl,0xf4
  420410:	ret    0xa008
  420413:	ret    
  420414:	xchg   ebp,eax
  420415:	dec    edi
  420416:	sub    edi,eax
  420418:	push   eax
  420419:	xchg   ecx,eax
  42041a:	enter  0x2872,0x65
  42041e:	fwait
  42041f:	jge    0x420422
  420421:	in     eax,dx
  420422:	rcl    bh,cl
  420424:	test   BYTE PTR [edi],dh
  420426:	inc    edi
  420427:	cmc    
  420428:	and    eax,0x1849822f
  42042d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42042e:	test   BYTE PTR [edx],cl
  420430:	dec    esp
  420431:	int    0xd8
  420433:	loope  0x4203d9
  420435:	mov    eax,0x4ccf6df4
  42043a:	outs   dx,BYTE PTR ds:[esi]
  42043b:	je     0x42049c
  42043d:	jmp    0xa1fc:0x7e1c0741
  420444:	pop    ebp
  420445:	test   eax,0xebada8c8
  42044a:	les    ebp,FWORD PTR [ebp-0x31]
  42044d:	jg     0x4204ca
  42044f:	ins    DWORD PTR es:[edi],dx
  420450:	xchg   edi,eax
  420451:	cs xchg edx,eax
  420453:	aam    0x9c
  420455:	pop    edx
  420456:	add    bl,bl
  420458:	xor    BYTE PTR [edi+ecx*4+0x49],ch
  42045c:	cwde   
  42045d:	mov    ebp,0x1b5db5ba
  420462:	push   ds
  420463:	add    al,BYTE PTR ds:0xb345c9b1
  420469:	xlat   BYTE PTR ds:[ebx]
  42046a:	leave  
  42046b:	jmp    0x42043f
  42046d:	cld    
  42046e:	cli    
  42046f:	neg    esp
  420471:	fild   QWORD PTR [edi+0x5fa998ea]
  420477:	sbb    BYTE PTR [ecx+0x6b],cl
  42047a:	xor    eax,DWORD PTR [edi-0x11]
  42047d:	pushf  
  42047e:	call   DWORD PTR [esi]
  420480:	loope  0x4204d7
  420482:	xchg   ecx,eax
  420483:	or     al,0x11
  420485:	popf   
  420486:	test   eax,0xba908295
  42048b:	cdq    
  42048c:	and    edx,edi
  42048e:	pop    edi
  42048f:	sbb    ebx,DWORD PTR [esp+eax*2]
  420492:	daa    
  420493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420494:	(bad)  
  420495:	loope  0x420514
  420497:	cli    
  420498:	or     al,0xb6
  42049a:	lods   eax,DWORD PTR ds:[esi]
  42049b:	inc    edi
  42049c:	stos   DWORD PTR es:[edi],eax
  42049d:	mov    esp,0x69180d1b
  4204a2:	sub    BYTE PTR [esi-0xeed53be],0x13
  4204a9:	nop
  4204aa:	mov    ah,0xc8
  4204ac:	das    
  4204ad:	dec    esi
  4204ae:	xchg   edi,eax
  4204af:	xchg   ebp,eax
  4204b0:	push   edi
  4204b1:	call   0xf2d151b8
  4204b6:	add    DWORD PTR [eax+ebx*8+0x1],esi
  4204ba:	push   ecx
  4204bb:	fiadd  DWORD PTR [ebx]
  4204bd:	cmc    
  4204be:	mov    ds:0x231b,eax
	...
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	mov    ebx,0x4eef5ba3
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [eax-0x47],dh
  42054e:	add    bl,dl
  420550:	out    0x52,eax
  420552:	push   eax
  420553:	sub    DWORD PTR [esi-0x18d15381],eax
  420559:	mov    dl,BYTE PTR [esi+0x5bb86bce]
  42055f:	icebp  
  420560:	jmp    0x420512
  420562:	mov    ebp,0x5c7edb5f
  420567:	(bad)  
  420568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420569:	les    ebx,FWORD PTR es:[eax+0x23]
  42056d:	add    DWORD PTR [ebx],edi
  42056f:	stos   BYTE PTR es:[edi],al
  420570:	hlt    
  420571:	pop    ebx
  420573:	iret   
  420574:	aad    0x6c
  420576:	jl     0x420517
  420578:	test   BYTE PTR [ecx+0x50],cl
  42057b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42057c:	xor    ebp,DWORD PTR [eax+0x51ef2810]
  420582:	mov    ?,WORD PTR [eax+0x13d4f307]
  420588:	mov    dl,0x1c
  42058a:	and    bh,BYTE PTR [edi]
  42058c:	cmp    DWORD PTR [eax],ebx
  42058e:	and    cl,dh
  420590:	test   al,0x54
  420592:	arpl   WORD PTR [ecx+ebx*8-0x4d],dx
  420596:	clc    
  420597:	adc    ah,BYTE PTR [edi-0x69]
  42059a:	pop    ds
  42059b:	ins    DWORD PTR es:[edi],dx
  42059c:	and    BYTE PTR [edx+ecx*4],bh
  42059f:	pop    esp
  4205a0:	mov    ah,0xea
  4205a2:	lahf   
  4205a3:	xor    BYTE PTR [ecx-0x36],bl
  4205a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a7:	cmc    
  4205a8:	mov    ch,0x5a
  4205aa:	or     al,BYTE PTR [edi-0x29]
  4205ad:	add    al,0x9c
  4205af:	and    eax,0x97d1392f
  4205b4:	xchg   ebx,eax
  4205b5:	jmp    0x7b8aa8b1
  4205ba:	cld    
  4205bb:	shl    DWORD PTR [eax+esi*4],1
  4205be:	mov    DWORD PTR [edx+esi*1-0x29],esp
  4205c2:	inc    ebp
  4205c3:	dec    esp
  4205c4:	add    bh,dh
  4205c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205c7:	bound  eax,QWORD PTR cs:[ecx]
  4205ca:	cmp    DWORD PTR [ebx],ecx
  4205cc:	mov    bh,0x34
  4205ce:	jl     0x420601
  4205d0:	ret    
  4205d1:	out    dx,al
  4205d2:	pop    edi
  4205d3:	inc    edx
  4205d4:	pop    es
  4205d5:	pop    edi
  4205d6:	scas   eax,DWORD PTR es:[edi]
  4205d7:	mul    DWORD PTR [ebp+0x4d8bba77]
  4205dd:	ret    
  4205de:	bsf    edx,esi
  4205e1:	add    al,0x80
  4205e3:	jmp    0x42061c
  4205e5:	push   0x2a
  4205e7:	repnz sub ah,BYTE PTR [esi+0x2c]
  4205eb:	or     DWORD PTR [esi+0x1c],eax
  4205ee:	call   FWORD PTR [edx-0x367e592]
  4205f4:	or     ebx,eax
  4205f6:	sti    
  4205f7:	add    BYTE PTR [ebx+0x68],ah
  4205fa:	xchg   edi,eax
  4205fb:	(bad)  
  4205fd:	pop    es
  4205fe:	and    BYTE PTR [esi-0x7c],0xe2
  420602:	cmp    DWORD PTR [ebp-0x619aa676],0x4a
  420609:	jnp    0x420614
  42060b:	xchg   bl,dh
  42060d:	ret    
  42060e:	rcl    bh,cl
  420610:	aaa    
  420611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420612:	jo     0x4205ec
  420614:	std    
  420615:	sbb    bl,BYTE PTR [esi+0x3baa0d1e]
  42061b:	stos   BYTE PTR es:[edi],al
  42061c:	inc    ecx
  42061d:	and    esi,DWORD PTR [ebx]
  42061f:	push   ebp
  420620:	xchg   ecx,eax
  420621:	or     al,bh
  420623:	inc    edx
  420624:	pop    esp
  420625:	mov    ah,0x95
  420627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420628:	mov    ah,0xc9
  42062a:	bound  ebp,QWORD PTR [ebp-0x3b4f8b7d]
  420630:	and    esp,DWORD PTR [edi+0x79149a82]
  420636:	and    esp,DWORD PTR [eax+0x45302675]
  42063c:	out    dx,eax
  42063d:	mov    ebx,0x692e54
	...
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	pop    DWORD PTR [ebx]
  4206c2:	ficomp WORD PTR [ecx]
  4206c4:	inc    ebx
  4206c5:	pop    ebx
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	cmc    
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [ecx],ah
  4206cd:	jb     0x420705
  4206cf:	(bad)  
  4206d0:	fild   QWORD PTR [eax+0x3113e943]
  4206d6:	shl    BYTE PTR [edx+edx*8],cl
  4206d9:	retf   0xfc64
  4206dc:	ret    
  4206dd:	clc    
  4206de:	repz add eax,0x90408a97
  4206e4:	cmp    edx,ebp
  4206e6:	(bad)  
  4206e7:	rcl    al,1
  4206e9:	sbb    esi,ecx
  4206eb:	dec    edi
  4206ec:	mov    esp,ss
  4206ee:	inc    esp
  4206ef:	dec    esi
  4206f0:	pop    esi
  4206f1:	push   edx
  4206f2:	fwait
  4206f3:	lahf   
  4206f4:	mov    cl,0x2f
  4206f6:	ror    edi,cl
  4206f8:	sar    BYTE PTR [edx+0x42],1
  4206fb:	inc    ebx
  4206fc:	pusha  
  4206fd:	inc    ebx
  4206fe:	adc    ecx,DWORD PTR [edx]
  420700:	jmp    0xe57f49b6
  420705:	sub    eax,0xf8de4f7e
  42070a:	ret    
  42070b:	outs   dx,DWORD PTR ds:[esi]
  42070c:	(bad)  
  42070d:	sbb    edx,DWORD PTR [eax+0x79b1526a]
  420713:	pop    esp
  420714:	jmp    0xee2f16fe
  420719:	popf   
  42071a:	ret    0x2a61
  42071d:	gs dec eax
  42071f:	sub    al,BYTE PTR [edi+0x50]
  420722:	sbb    ebp,DWORD PTR [esi+0x24]
  420725:	lock dec bx
  420728:	xchg   bl,ch
  42072a:	ror    cl,cl
  42072c:	lods   al,BYTE PTR ds:[esi]
  42072d:	scas   eax,DWORD PTR es:[edi]
  42072e:	pop    esp
  42072f:	and    ecx,DWORD PTR [edi-0x66b1e7ce]
  420735:	sbb    eax,0x34c15943
  42073a:	inc    ebp
  42073b:	pushf  
  42073c:	fsub   DWORD PTR [edi-0x566711f6]
  420742:	pop    esp
  420743:	sti    
  420744:	ja     0x420767
  420746:	xor    ch,BYTE PTR cs:[edx]
  420749:	adc    edi,DWORD PTR [edx]
  42074b:	mov    WORD PTR [ebp+0x32],?
  42074e:	sbb    al,0x1
  420750:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420752:	adc    al,0xad
  420754:	out    dx,eax
  420755:	mov    dl,0xc9
  420757:	xchg   esi,eax
  420758:	data16 sub al,0x2b
  42075b:	lds    edi,FWORD PTR [edx+0x2ed1ff2]
  420761:	ret    0xd7df
  420764:	shl    BYTE PTR [eax-0x51],0x1
  420768:	mov    cl,BYTE PTR [ecx+0x70e8ec06]
  42076e:	sub    BYTE PTR [edx+0x44555bd8],dl
  420774:	adc    BYTE PTR [esi],bh
  420776:	shl    dl,cl
  420778:	icebp  
  420779:	imul   esi,DWORD PTR [edx+0x1a],0xd4cb79b9
  420780:	xor    BYTE PTR [edi],bl
  420782:	sbb    DWORD PTR [edx+0x6e],ebx
  420785:	sti    
  420786:	sbb    DWORD PTR [ebp+ecx*2+0x6f97491d],edi
  42078d:	jae    0x4207af
  42078f:	push   cs
  420790:	sbb    eax,0xa3dcb653
  420795:	sbb    BYTE PTR [edi+0xb],0x88
  420799:	lock add BYTE PTR [esi+0x2ffca29a],0x16
  4207a1:	lds    eax,FWORD PTR [ecx+0x77232ffc]
  4207a7:	jo     0x4207bf
  4207a9:	lahf   
  4207aa:	mov    ebp,DWORD PTR [edi-0x4f]
  4207ad:	push   eax
  4207ae:	jg     0x420827
  4207b0:	xchg   esp,eax
  4207b1:	push   esi
  4207b2:	sub    BYTE PTR [eax],ch
  4207b4:	cmp    ebx,DWORD PTR [eax-0x2b]
  4207b7:	inc    ebx
  4207b8:	inc    ebx
  4207b9:	daa    
  4207ba:	mov    ?,WORD PTR [ebx-0x24]
  4207bd:	mov    ?,WORD PTR [edi+0xa4a4]
	...
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x6a
  420841:	fiadd  WORD PTR [edi+0x15c38f8]
  420847:	add    ch,dh
  420849:	add    BYTE PTR [eax],al
  42084b:	add    BYTE PTR [ebp-0x429f72e7],al
  420851:	push   ds
  420852:	cmp    ah,0xc6
  420855:	xchg   ebx,eax
  420856:	imul   esi,DWORD PTR [ebp-0x65],0x32
  42085a:	out    0xc4,eax
  42085c:	(bad)  
  42085e:	xchg   ebx,eax
  42085f:	sahf   
  420860:	pop    ecx
  420861:	mov    edx,0xa5a938c9
  420866:	mov    fs,WORD PTR [esp+edi*4+0x1f8bf8cb]
  42086d:	js     0x420849
  42086f:	dec    edx
  420870:	sbb    eax,0x97a9a822
  420875:	aad    0x0
  420877:	cdq    
  420878:	sbb    esi,DWORD PTR [edx-0x14]
  42087b:	int3   
  42087c:	push   ecx
  42087d:	sub    al,0xd
  42087f:	ss inc ecx
  420881:	xchg   ebx,eax
  420882:	ret    
  420883:	push   edx
  420884:	adc    eax,0x82fa50e5
  420889:	lea    ebp,[eax+ebx*2-0x1e31b74c]
  420890:	pop    ecx
  420891:	adc    eax,0x65f1a5e4
  420896:	cmp    esp,DWORD PTR [edx]
  420898:	mov    esi,0x8877de42
  42089d:	jp     0x42091d
  42089f:	test   BYTE PTR [eax+ebx*1-0x3311ae12],bl
  4208a6:	jne    0x420852
  4208a8:	repnz sub al,BYTE PTR [edx+0x69]
  4208ac:	in     eax,dx
  4208ad:	inc    DWORD PTR [ecx-0x7c]
  4208b0:	dec    ecx
  4208b1:	jo     0x4208f5
  4208b3:	push   cs
  4208b4:	imul   ebx,DWORD PTR [ebx],0x88ce2490
  4208ba:	mov    ecx,0xd919255c
  4208bf:	adc    BYTE PTR [eax],al
  4208c1:	jmp    0xce6e:0x5fa72649
  4208c8:	(bad)  
  4208c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ca:	jmp    0xfbffd767
  4208cf:	cmp    BYTE PTR [ebp+0x3d781100],bh
  4208d5:	xchg   edi,eax
  4208d6:	xor    DWORD PTR [ecx+0x6f],0x78
  4208da:	xchg   ecx,eax
  4208db:	pop    ebx
  4208dc:	inc    edi
  4208dd:	push   ds
  4208de:	push   0xffffff87
  4208e0:	and    dh,BYTE PTR [ebx-0x23]
  4208e3:	test   al,0xc4
  4208e5:	mov    ds:0xfc1a55fd,eax
  4208ea:	inc    eax
  4208eb:	mov    ebx,0x48b5655a
  4208f0:	repz es xchg ebp,eax
  4208f3:	sar    BYTE PTR [eax-0x486d4ba1],cl
  4208f9:	push   es
  4208fa:	data16 loope 0x4208cd
  4208fd:	clc    
  4208fe:	hlt    
  4208ff:	mov    edx,esi
  420901:	sub    DWORD PTR [edx-0x5ffb8ff2],0x7c071ed6
  42090b:	push   ebp
  42090c:	ins    BYTE PTR es:[edi],dx
  42090d:	lahf   
  42090e:	sub    eax,0xee833e64
  420913:	adc    eax,0xef4a8cfb
  420918:	inc    ebx
  420919:	pop    ss
  42091a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42091b:	out    dx,eax
  42091c:	mov    ds:0x1d0b83b7,al
  420921:	pushf  
  420922:	mov    esi,0x2c57e0f6
  420927:	stos   WORD PTR es:[edi],ax
  420929:	mov    esi,0x5676289d
  42092e:	and    al,0x35
  420930:	and    cl,BYTE PTR [esi]
  420932:	cmp    esi,esp
  420934:	inc    edx
  420935:	jb     0x4208bc
  420937:	ins    BYTE PTR es:[edi],dx
  420938:	pop    ecx
  420939:	sbb    eax,ecx
  42093b:	data16 stos BYTE PTR es:[edi],al
  42093d:	pop    ds
  42093e:	imul   ah
  420940:	mov    WORD PTR [eax],es
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi-0x76e69922],0x23
  4209c3:	push   0x2d
  4209c5:	pop    ebp
  4209c6:	add    DWORD PTR [eax],eax
  4209c8:	cmc    
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    al,dl
  4209cd:	dec    edi
  4209ce:	std    
  4209cf:	ret    0x4504
  4209d2:	lods   eax,DWORD PTR ds:[esi]
  4209d3:	fadd   QWORD PTR [ecx+eax*1-0x2b]
  4209d7:	jbe    0x420a29
  4209d9:	push   esi
  4209da:	xor    DWORD PTR [ecx],ebx
  4209dc:	xor    si,WORD PTR [edx+0x6d681d7]
  4209e3:	fdiv   st(6),st
  4209e5:	mov    bh,0xa8
  4209e7:	and    eax,0x6b190a3e
  4209ec:	adc    al,BYTE PTR [ebp-0x3b]
  4209ef:	stc    
  4209f0:	mov    esi,0x63c34a26
  4209f5:	std    
  4209f6:	add    dh,BYTE PTR [ebx+0x41]
  4209f9:	hlt    
  4209fa:	sub    eax,0xcc989397
  4209ff:	jl     0x4209a7
  420a01:	add    DWORD PTR [esi+0x44ccef20],ebx
  420a07:	fild   QWORD PTR [edi-0x3f]
  420a0a:	sub    BYTE PTR [eax],bh
  420a0c:	scas   al,BYTE PTR es:[edi]
  420a0d:	loopne 0x420a4c
  420a0f:	stc    
  420a10:	sub    DWORD PTR [edx+0x2d],0xf940defb
  420a17:	icebp  
  420a18:	jb     0x4209ad
  420a1a:	(bad)  
  420a1b:	addr16 popf 
  420a1d:	fwait
  420a1e:	shr    DWORD PTR [ebx+0x1c],1
  420a21:	sub    eax,0xa5b90b12
  420a26:	and    al,0x4b
  420a28:	push   eax
  420a29:	mov    edx,0x1f9bfed4
  420a2e:	adc    DWORD PTR [ecx],ebx
  420a30:	out    dx,eax
  420a31:	cmp    dh,BYTE PTR [edx+0x473ea11e]
  420a37:	clc    
  420a38:	xor    DWORD PTR [ebp+0x5b],ecx
  420a3b:	pop    edi
  420a3c:	inc    edx
  420a3d:	pushf  
  420a3e:	jl     0x420a05
  420a40:	xchg   edx,eax
  420a41:	bound  edi,QWORD PTR [edx+ebp*4-0x39507b62]
  420a48:	ins    BYTE PTR es:[edi],dx
  420a49:	test   DWORD PTR [ecx+0x3d1046a4],0xd6b4eb9f
  420a53:	adc    cl,BYTE PTR [edx]
  420a55:	cmp    DWORD PTR [ecx-0x1eef3dcc],ecx
  420a5b:	arpl   WORD PTR [esp+ebp*4+0x4e879b14],ax
  420a62:	fwait
  420a63:	js     0x4209e6
  420a65:	loope  0x420a8f
  420a67:	(bad)  
  420a69:	mov    ds:0x9b0469b6,al
  420a6e:	hlt    
  420a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a70:	cmp    ecx,DWORD PTR [esi+0x6c]
  420a73:	aaa    
  420a74:	pop    edx
  420a75:	test   BYTE PTR ds:0x4234,dh
  420a7a:	mov    ebx,0xa84f68ac
  420a7f:	out    dx,al
  420a80:	out    0xc2,eax
  420a82:	jle    0x420a31
  420a84:	xchg   esp,eax
  420a85:	ss retf 
  420a87:	fldcw  WORD PTR fs:[ebp+ebp*1-0x69ce9e52]
  420a8f:	mov    ebx,edx
  420a91:	addr16 loop 0x420a4f
  420a94:	cs jb  0x420a3d
  420a97:	and    al,0x4f
  420a99:	(bad)  
  420a9a:	test   BYTE PTR [edi+0x32f013e9],bh
  420aa0:	inc    ecx
  420aa1:	mov    ecx,0x4dc3ef64
  420aa6:	inc    ebx
  420aa7:	ja     0x420ae3
  420aa9:	adc    dh,BYTE PTR [edi+0x44]
  420aac:	add    BYTE PTR [esi-0x6c06df65],ch
  420ab2:	aam    0x7f
  420ab4:	in     al,dx
  420ab5:	push   ss
  420ab6:	pop    eax
  420ab7:	ds daa 
  420ab9:	out    0x11,eax
  420abb:	mov    esp,0xf87bea9c
  420ac0:	jge    0x420ac2
	...
  420b32:	add    BYTE PTR [eax],al
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	maxps  xmm4,xmm6
  420b42:	push   eax
  420b43:	retf   0x5e22
  420b46:	add    DWORD PTR [eax],eax
  420b48:	cmc    
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [edi+ebp*4-0x5adbdaa5],bl
  420b52:	and    eax,0xd2a47881
  420b57:	(bad)  
  420b58:	loope  0x420b45
  420b5a:	push   ebx
  420b5b:	pop    ecx
  420b5c:	gs fs scas eax,DWORD PTR es:[edi]
  420b5f:	jmp    0x420ba1
  420b61:	xor    DWORD PTR [ecx+eax*2],ebp
  420b64:	es inc esp
  420b66:	pop    eax
  420b67:	loope  0x420bd6
  420b69:	lahf   
  420b6a:	push   es
  420b6b:	aam    0xd8
  420b6d:	fstp   QWORD PTR [eax]
  420b6f:	cmp    BYTE PTR [ebx*8+0x5d7c0b0b],ch
  420b76:	sub    bh,ch
  420b78:	jg     0x420b0f
  420b7a:	mov    al,BYTE PTR [ebx]
  420b7c:	cs pop ebp
  420b7e:	stos   BYTE PTR es:[edi],al
  420b7f:	push   0x1dda596
  420b84:	or     DWORD PTR [ebx-0x1bbb3938],ebp
  420b8a:	mov    ds:0x430b4fa5,al
  420b8f:	mov    dh,bl
  420b91:	stos   BYTE PTR es:[edi],al
  420b92:	stos   DWORD PTR es:[edi],eax
  420b93:	mov    dh,0x50
  420b95:	and    BYTE PTR [edx+0x35],bh
  420b98:	stos   BYTE PTR es:[edi],al
  420b99:	fwait
  420b9a:	sub    bh,cl
  420b9c:	adc    dl,BYTE PTR [edx]
  420b9e:	dec    ebx
  420b9f:	ins    BYTE PTR es:[edi],dx
  420ba0:	inc    esp
  420ba1:	or     ecx,DWORD PTR [edx+0x13]
  420ba4:	push   0x59
  420ba6:	outs   dx,BYTE PTR ds:[esi]
  420ba7:	mov    cl,0x8
  420ba9:	clc    
  420baa:	sub    bl,BYTE PTR [eax+0x79]
  420bad:	push   cs
  420bae:	es jle 0x420b86
  420bb1:	xchg   DWORD PTR [edx],edx
  420bb3:	adc    esi,DWORD PTR [edx+eiz*4]
  420bb6:	xchg   ecx,eax
  420bb7:	loopne 0x420b96
  420bb9:	scas   eax,DWORD PTR es:[edi]
  420bba:	push   ebx
  420bbb:	push   eax
  420bbc:	xchg   BYTE PTR [eax-0x5e],al
  420bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc0:	scas   eax,DWORD PTR es:[edi]
  420bc1:	cmp    BYTE PTR fs:[ebx+0x177e6669],bl
  420bc8:	pop    eax
  420bc9:	mov    WORD PTR [ecx+0xb],?
  420bcc:	xchg   esp,eax
  420bcd:	nop    DWORD PTR [esi]
  420bd0:	pop    ebp
  420bd1:	imul   esi,DWORD PTR [eax-0x3d],0xffffffff
  420bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bd6:	hlt    
  420bd7:	cmp    ch,cl
  420bd9:	sahf   
  420bda:	inc    edx
  420bdb:	enter  0x569d,0xe9
  420bdf:	call   0xc7533946
  420be4:	mul    DWORD PTR [ebx+0xf]
  420be7:	pop    ebx
  420be8:	push   es
  420be9:	lea    edx,ss:[ecx+0x5dddbe15]
  420bf0:	or     edx,eax
  420bf2:	pop    edi
  420bf3:	into   
  420bf4:	adc    bl,BYTE PTR [edi+0x54d9b2b8]
  420bfa:	add    bh,cl
  420bfc:	sbb    DWORD PTR [edx-0x746aae24],eax
  420c02:	and    al,0xc9
  420c04:	stc    
  420c05:	sti    
  420c06:	cmp    BYTE PTR [edx],0x7a
  420c09:	call   0x4c3abd39
  420c0e:	push   0x9fe7baa
  420c13:	in     al,dx
  420c14:	aas    
  420c15:	data16 stc 
  420c17:	cmp    eax,0x17c01e26
  420c1c:	xor    BYTE PTR [ecx],0x16
  420c1f:	bound  ebp,QWORD PTR [edx+0x7a]
  420c22:	or     DWORD PTR [edx+ecx*4],ecx
  420c25:	je     0x420bd4
  420c27:	sbb    BYTE PTR [edi],bh
  420c29:	bsr    ebx,DWORD PTR [ecx+0x2012a652]
  420c30:	hlt    
  420c31:	into   
  420c32:	xor    eax,0x73a418c1
  420c37:	loopne 0x420be7
  420c39:	cmp    al,0xf8
  420c3b:	fidivr WORD PTR [ebx-0x5fdd0bce]
	...
  420cb1:	add    BYTE PTR [eax],al
  420cb3:	add    BYTE PTR [edx+ebp*2],cl
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x39efaa5f
  420cc3:	adc    DWORD PTR [edi],0x5f
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR [ecx+0x69],cl
  420cce:	xor    DWORD PTR [ecx],esi
  420cd0:	shl    DWORD PTR es:[ecx],1
  420cd3:	mov    ecx,0xebc39b62
  420cd8:	fisubr WORD PTR [edi]
  420cda:	push   esp
  420cdb:	bswap  edx
  420cdd:	repz pusha 
  420cdf:	mov    bl,0xa2
  420ce1:	sub    edx,DWORD PTR [esi-0x5dec0342]
  420ce7:	mov    ebp,0x81a2879b
  420cec:	inc    ebx
  420ced:	js     0x420ca0
  420cef:	or     eax,DWORD PTR [ebx-0x4a5a788]
  420cf5:	in     al,0x41
  420cf7:	sbb    DWORD PTR [edx],eax
  420cf9:	fst    DWORD PTR [ebx+ecx*8-0x728d860d]
  420d00:	addr16 and edx,edi
  420d03:	lds    eax,FWORD PTR [edi-0x1]
  420d06:	pushf  
  420d07:	(bad)  
  420d08:	cmp    eax,0xc68528da
  420d0d:	cmp    DWORD PTR [esi+0x30],edi
  420d10:	mov    esp,0x91c1ce81
  420d15:	dec    esp
  420d16:	ss js  0x420d31
  420d19:	inc    esi
  420d1a:	xchg   edx,eax
  420d1b:	jle    0x420d4b
  420d1d:	mov    eax,ds:0x2926cc96
  420d22:	sbb    DWORD PTR ds:0xabc1606a,0xa068f1ea
  420d2c:	push   esi
  420d2d:	adc    BYTE PTR [ebp+0x5a],al
  420d30:	xchg   ecx,eax
  420d31:	xchg   BYTE PTR [ecx],bl
  420d33:	jmp    0x8423:0x4e31ac15
  420d3a:	out    dx,al
  420d3b:	or     al,0x98
  420d3d:	add    eax,0xe9be280
  420d42:	es sahf 
  420d44:	mov    DWORD PTR [ebx+0x4b222d58],ebp
  420d4a:	and    al,0xa7
  420d4c:	pusha  
  420d4d:	adc    dh,BYTE PTR [esi]
  420d4f:	dec    ebp
  420d50:	ins    BYTE PTR es:[edi],dx
  420d51:	pushf  
  420d52:	inc    ecx
  420d53:	cmp    eax,0xfbcf592
  420d58:	or     al,0x29
  420d5a:	out    dx,eax
  420d5b:	sar    DWORD PTR [ebx+ecx*2-0x2498e271],cl
  420d62:	push   0xeae48bf2
  420d67:	mov    cs,WORD PTR [edx-0x69]
  420d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d6b:	mov    ecx,0x7699358d
  420d70:	scas   al,BYTE PTR es:[edi]
  420d71:	rcr    DWORD PTR [ebx+0x3f7c1646],cl
  420d77:	or     ebp,DWORD PTR [ecx-0x4c26df77]
  420d7d:	loopne 0x420d42
  420d7f:	call   0x262fac17
  420d84:	ins    BYTE PTR es:[edi],dx
  420d85:	add    cl,al
  420d87:	sar    edi,cl
  420d89:	hlt    
  420d8a:	or     eax,0x4e8352b9
  420d8f:	and    eax,0xade0f0e3
  420d94:	cdq    
  420d95:	mov    ch,0x74
  420d97:	ins    DWORD PTR es:[edi],dx
  420d98:	xchg   ebp,eax
  420d99:	(bad)  
  420d9a:	xor    eax,0x94ec8dc9
  420d9f:	daa    
  420da0:	or     dl,BYTE PTR [ebx-0x6ca0944d]
  420da6:	lods   al,BYTE PTR gs:[esi]
  420da8:	push   ss
  420da9:	pop    es
  420daa:	add    edi,DWORD PTR [edx+0x37]
  420dad:	or     al,0xe6
  420daf:	mov    DWORD PTR [edx+0x26],ecx
  420db2:	push   ecx
  420db3:	aad    0xc3
  420db5:	rol    cl,0x9f
  420db8:	dec    edi
  420db9:	pop    ds
  420dba:	jmp    0xf28874ac
  420dbf:	xchg   ebx,eax
  420dc0:	out    0x0,eax
	...
  420e32:	add    BYTE PTR [eax],al
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	push   ebp
  420e36:	call   0x645d:0xffefffe7
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	jge    0x420ea9
  420e42:	stos   BYTE PTR es:[edi],al
  420e43:	push   ds
  420e44:	or     al,0x60
  420e46:	add    DWORD PTR [eax],eax
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [edi+eax*8-0x6],bl
  420e4f:	pushf  
  420e50:	push   cs
  420e51:	pusha  
  420e52:	add    al,0x9e
  420e54:	or     ch,BYTE PTR [edi-0x71bbd381]
  420e5a:	daa    
  420e5b:	cli    
  420e5c:	adc    edi,DWORD PTR [ecx+edx*4+0x30748134]
  420e63:	imul   DWORD PTR [ebp-0xa]
  420e66:	or     al,0xd1
  420e68:	aam    0x2
  420e6a:	std    
  420e6b:	mov    ecx,0xbf55211f
  420e70:	jo     0x420df3
  420e72:	test   eax,0x2c967c21
  420e77:	mov    ch,0x46
  420e79:	mov    ch,0xe5
  420e7b:	add    BYTE PTR [eax],0xcc
  420e7e:	out    dx,eax
  420e7f:	mov    ch,0xb8
  420e81:	xchg   ebp,eax
  420e82:	loopne 0x420eff
  420e84:	retf   0x471e
  420e87:	jmp    0x420e7f
  420e89:	neg    BYTE PTR [esi-0x1f]
  420e8c:	push   edx
  420e8d:	daa    
  420e8e:	ins    BYTE PTR es:[edi],dx
  420e8f:	xchg   ebp,eax
  420e90:	shl    DWORD PTR [edi],cl
  420e92:	mov    esi,0xaea6d77a
  420e97:	mov    dh,0x52
  420e99:	(bad)  
  420e9a:	xor    al,0xf4
  420e9c:	add    cl,BYTE PTR [edi-0x28bb7ab1]
  420ea2:	dec    edx
  420ea3:	mov    bh,0xb4
  420ea5:	adc    dl,BYTE PTR ds:0x8e6b6ffc
  420eab:	xchg   edi,eax
  420eac:	adc    bl,BYTE PTR [ebx]
  420eae:	xor    al,0xd7
  420eb0:	mov    ecx,ebp
  420eb2:	sbb    BYTE PTR [esi],cl
  420eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb5:	sar    DWORD PTR [ebx],cl
  420eb7:	dec    ecx
  420eb8:	mov    cl,0x3d
  420eba:	xchg   esi,eax
  420ebb:	jno    0x420eb0
  420ebd:	sub    al,0x76
  420ebf:	in     al,0xf6
  420ec1:	div    ebp
  420ec3:	inc    ebp
  420ec4:	lea    eax,[eax+0x1132ab74]
  420eca:	jecxz  0x420ece
  420ecc:	sub    ah,BYTE PTR [ebx+0x201224a7]
  420ed2:	mov    bh,0x7d
  420ed4:	adc    edi,DWORD PTR [eax]
  420ed6:	dec    edx
  420ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed8:	pop    esi
  420ed9:	fstp   DWORD PTR [ebp-0x2de568a6]
  420edf:	cmc    
  420ee0:	inc    edi
  420ee1:	xor    ebx,DWORD PTR [edi+0x6d]
  420ee4:	(bad)  [edi]
  420ee6:	rcr    DWORD PTR [ecx],1
  420ee8:	test   eax,0x7a7cff68
  420eed:	cdq    
  420eee:	jecxz  0x420ef7
  420ef0:	sahf   
  420ef1:	pop    ds
  420ef2:	and    al,0xc7
  420ef4:	push   0x5ea59b87
  420ef9:	xchg   edi,edx
  420efb:	call   0x4b27ad53
  420f00:	das    
  420f01:	cmp    DWORD PTR [eax+eiz*1],ecx
  420f04:	pop    esi
  420f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f06:	retf   0x4baa
  420f09:	neg    ebx
  420f0b:	xchg   BYTE PTR [ebx],dl
  420f0d:	jo     0x420f37
  420f0f:	(bad)  ss:[esi]
  420f12:	sbb    ah,ah
  420f14:	outs   dx,DWORD PTR ds:[esi]
  420f15:	aaa    
  420f16:	jle    0x420f26
  420f18:	mov    es,WORD PTR [ecx+0x44]
  420f1b:	in     al,0xc6
  420f1d:	xor    eax,0x6f2c5f98
  420f22:	or     DWORD PTR ds:0x2b5c23e7,eax
  420f28:	or     BYTE PTR [eax],cl
  420f2a:	into   
  420f2b:	mov    dl,0x95
  420f2d:	xchg   esi,eax
  420f2e:	rcr    bh,0x37
  420f31:	dec    edi
  420f32:	ret    0xb999
  420f35:	call   0xd062:0xb88d81e1
  420f3c:	aaa    
  420f3d:	mov    cl,0xa5
  420f3f:	mov    ah,0xa
	...
  420fb1:	add    BYTE PTR [eax],al
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0x6f
  420fc1:	sbb    BYTE PTR [ecx-0x77],al
  420fc4:	add    DWORD PTR [ecx+0x1],esp
  420fc7:	add    ch,dh
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [edi+0x66e25ccf],cl
  420fd1:	mov    al,ds:0x90bcab6f
  420fd6:	add    BYTE PTR [edi],bh
  420fd8:	push   0xffffffa9
  420fda:	xor    al,0x84
  420fdc:	outs   dx,BYTE PTR ds:[esi]
  420fdd:	out    dx,eax
  420fde:	sub    ecx,ebp
  420fe0:	mov    BYTE PTR [edx+0x10e2c600],bl
  420fe6:	outs   dx,BYTE PTR ds:[esi]
  420fe7:	mov    ecx,0xf4644dd6
  420fec:	iret   
  420fed:	(bad)  [edx+0x199ae0a9]
  420ff3:	push   ebx
  420ff4:	into   
  420ff5:	add    eax,0x5f25b009
  420ffa:	outs   dx,BYTE PTR ds:[esi]
  420ffb:	mov    DWORD PTR ds:[edx+0x31afd137],esp
  421002:	inc    esi
  421003:	add    dh,BYTE PTR [edx]
  421005:	cmc    
  421006:	pop    ebp
  421007:	xchg   esi,eax
  421008:	xor    eax,DWORD PTR [eax]
  42100a:	mov    al,ds:0x3593563c
  42100f:	in     al,dx
  421010:	int    0x45
  421012:	mov    ch,0xd0
  421014:	jno    0x420ff2
  421016:	fcomp  DWORD PTR [ecx]
  421018:	pop    ebp
  421019:	call   0x3d115361
  42101e:	xchg   ebp,eax
  42101f:	int    0xcf
  421021:	mov    cl,0x9d
  421023:	in     al,0x33
  421025:	dec    esi
  421026:	sub    al,0x82
  421028:	pop    esp
  421029:	jnp    0x420fc9
  42102b:	jnp    0x421084
  42102d:	mov    edi,0x13bf120d
  421032:	cwde   
  421033:	push   ss
  421034:	shr    BYTE PTR [eax],1
  421036:	outs   dx,BYTE PTR ds:[esi]
  421037:	pop    esi
  421038:	mov    esp,0x2ff3b83e
  42103d:	aam    0xd3
  42103f:	pop    esp
  421040:	popf   
  421041:	imul   edi,DWORD PTR [edi+0x2dc2954],0x970de4f7
  42104b:	mov    eax,0x2a643736
  421050:	inc    edi
  421051:	repz sub DWORD PTR [ecx+eax*8-0x2c],0x79c77d54
  42105a:	mov    ebp,0xd8abc17
  42105f:	aas    
  421060:	in     eax,dx
  421061:	fwait
  421062:	std    
  421063:	jo     0x4210b4
  421065:	push   es
  421066:	mov    edx,0xb4109551
  42106b:	inc    eax
  42106c:	inc    esp
  42106d:	nop
  42106e:	int    0x97
  421070:	out    dx,eax
  421071:	pop    eax
  421072:	scas   eax,DWORD PTR es:[edi]
  421073:	mov    eax,0x14f2542a
  421078:	(bad)  
  421079:	mov    cl,BYTE PTR [ebx*8+0x59a617d]
  421080:	cmc    
  421081:	xchg   esp,eax
  421082:	inc    ebx
  421083:	shr    BYTE PTR [edi+0x76],1
  421086:	mov    edi,0xb0d778c4
  42108b:	dec    ecx
  42108c:	adc    al,0x94
  42108e:	(bad)  
  42108f:	aaa    
  421090:	inc    edi
  421091:	imul   edi,DWORD PTR [ecx-0x41573def],0xc6d07d06
  42109b:	mov    ds:0x9716fc00,eax
  4210a0:	xchg   edx,eax
  4210a1:	aam    0x23
  4210a3:	xor    al,0x93
  4210a5:	mov    ecx,0xcc3fdbda
  4210aa:	mov    eax,0x8a39df13
  4210af:	cld    
  4210b0:	pop    ecx
  4210b1:	std    
  4210b2:	rol    BYTE PTR [esi-0x72a60bae],1
  4210b8:	dec    bp
  4210ba:	out    dx,eax
  4210bb:	xchg   ebp,eax
  4210bc:	pop    eax
  4210bd:	sbb    al,ah
  4210bf:	adc    DWORD PTR [eax+0x0],esp
	...
  421132:	add    BYTE PTR [eax],al
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x421148
  421141:	addr16 inc eax
  421143:	xchg   esp,eax
  421144:	mul    BYTE PTR [ecx+0x1]
  421147:	add    ch,dh
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [eax],dl
  42114d:	out    0xec,eax
  42114f:	or     DWORD PTR [edx],ecx
  421151:	or     al,0xf9
  421153:	jno    0x421181
  421155:	cwde   
  421156:	(bad)  
  421157:	mov    dh,dl
  421159:	inc    ebp
  42115a:	pop    ds
  42115b:	stos   DWORD PTR es:[edi],eax
  42115c:	clc    
  42115d:	iret   
  42115e:	sbb    bh,BYTE PTR [edx-0x3dbd0eda]
  421164:	and    edi,DWORD PTR [ebx-0x2ce4dcd0]
  42116a:	std    
  42116b:	in     al,dx
  42116c:	pop    eax
  42116d:	xchg   bx,ax
  42116f:	and    BYTE PTR [edi],0xf8
  421172:	scas   al,BYTE PTR es:[edi]
  421173:	pop    eax
  421174:	leave  
  421175:	fstp   QWORD PTR [eax+0x35]
  421178:	push   ss
  421179:	xor    BYTE PTR [edx],cl
  42117b:	sbb    eax,DWORD PTR [ecx+0xb]
  42117e:	pop    ebx
  42117f:	cmp    ch,bl
  421181:	push   gs
  421183:	inc    ecx
  421184:	mov    BYTE PTR ds:0xd5658be6,0xf5
  42118b:	jne    0x42112d
  42118d:	out    0x3,al
  42118f:	xchg   ebp,eax
  421190:	sub    eax,0x7884fd67
  421195:	jecxz  0x421183
  421197:	je     0x4211bc
  421199:	loope  0x4211e7
  42119b:	cli    
  42119c:	jno    0x4211af
  42119e:	adc    ch,BYTE PTR [ebx+0x84556cc]
  4211a4:	push   0x2eab6153
  4211a9:	call   0x96203ddf
  4211ae:	xor    BYTE PTR [ebp-0x78],bh
  4211b1:	scas   al,BYTE PTR es:[edi]
  4211b2:	es jmp 0xcab71d26
  4211b8:	cwde   
  4211b9:	leave  
  4211ba:	mov    ch,0xf8
  4211bc:	cmp    edx,esp
  4211be:	adc    DWORD PTR [ebp-0x33],0x2e
  4211c2:	dec    bl
  4211c4:	out    dx,eax
  4211c5:	xor    edx,DWORD PTR [edx]
  4211c7:	ins    BYTE PTR es:[edi],dx
  4211c8:	sub    eax,0xcdbb16be
  4211cd:	inc    ecx
  4211ce:	xchg   edx,eax
  4211cf:	adc    DWORD PTR [ebx-0x14eaf630],0xffffff91
  4211d6:	repz ror BYTE PTR [edx],cl
  4211d9:	and    bh,cl
  4211db:	int3   
  4211dc:	(bad)  
  4211dd:	and    DWORD PTR [edi-0x2941a95d],eax
  4211e3:	rcl    BYTE PTR [esi],1
  4211e5:	dec    edx
  4211e6:	mov    ch,0xfd
  4211e8:	fld    TBYTE PTR [ebx-0x71360ff0]
  4211ee:	scas   al,BYTE PTR es:[edi]
  4211ef:	icebp  
  4211f0:	sub    al,BYTE PTR [ecx]
  4211f2:	stc    
  4211f3:	sub    al,0x6a
  4211f5:	lods   eax,DWORD PTR ds:[esi]
  4211f6:	xor    eax,0xa08cb519
  4211fb:	adc    DWORD PTR [ecx-0x13dcc98b],0x7b
  421202:	mov    dh,0xd8
  421204:	gs push ds
  421206:	fsub   QWORD PTR [edi+0x7b82362]
  42120c:	sbb    DWORD PTR [ebx+ebp*4+0x636af2d6],esi
  421213:	adc    BYTE PTR [eax],cl
  421215:	in     eax,0xf4
  421217:	ret    
  421218:	xor    al,0x3c
  42121a:	cdq    
  42121b:	and    al,0x74
  42121d:	pop    esi
  42121e:	xor    BYTE PTR [ebx+0x52],bh
  421221:	sar    BYTE PTR es:[esi-0x3d],0x82
  421226:	fmul   QWORD PTR [edi-0x416b66b8]
  42122c:	sbb    ah,BYTE PTR ds:0xbc58ef06
  421232:	pop    esi
  421233:	cmp    ch,BYTE PTR [edi]
  421235:	stc    
  421236:	int    0x8b
  421238:	repz xor BYTE PTR [edi+0x1f],cl
  42123c:	push   ebp
  42123d:	lahf   
  42123e:	xor    eax,0x6770
	...
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0xb483dc15
  4212c1:	int    0xac
  4212c3:	(bad)  
  4212c4:	jmp    0x421328
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	cmc    
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR ds:0x38ab7ea8,bl
  4212d1:	imul   esi,edi,0xffffff9f
  4212d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d5:	inc    edx
  4212d6:	mov    edx,0xa47d5127
  4212db:	mov    cl,BYTE PTR [edx-0x67025559]
  4212e1:	add    bl,bh
  4212e3:	int    0x93
  4212e5:	or     al,0x25
  4212e7:	push   eax
  4212e8:	popf   
  4212e9:	pop    esp
  4212ea:	outs   dx,BYTE PTR ds:[esi]
  4212eb:	push   esp
  4212ec:	and    ecx,ebx
  4212ee:	xor    esi,DWORD PTR [esi]
  4212f0:	cmp    DWORD PTR [edx-0x21],ebx
  4212f3:	popa   
  4212f4:	push   edx
  4212f5:	nop
  4212f6:	cmp    cl,0xfd
  4212f9:	jl     0x421338
  4212fb:	arpl   si,di
  4212fd:	out    dx,eax
  4212fe:	sbb    BYTE PTR [ecx+ecx*2],ch
  421301:	and    DWORD PTR [edi+0x3c],esp
  421304:	jl     0x421355
  421306:	inc    ebx
  421307:	cwde   
  421308:	daa    
  421309:	fisubr WORD PTR [esi]
  42130b:	pop    ebx
  42130c:	ins    DWORD PTR es:[edi],dx
  42130d:	sub    al,0x86
  42130f:	ja     0x421292
  421311:	out    dx,eax
  421312:	mov    ds,WORD PTR ds:0xd91f93d8
  421318:	add    bl,BYTE PTR [esi]
  42131a:	pop    es
  42131b:	sti    
  42131c:	leave  
  42131d:	add    BYTE PTR [edi+0x36506982],bh
  421323:	sub    DWORD PTR [esi+0x785339a7],edi
  421329:	or     cl,BYTE PTR [eax+0xf6a585c]
  42132f:	jae    0x42130d
  421331:	out    0x35,al
  421333:	popa   
  421334:	mov    esi,cs
  421336:	(bad)  
  421337:	push   es
  421338:	xor    BYTE PTR [edi],ah
  42133a:	sbb    cl,bl
  42133c:	stos   DWORD PTR es:[edi],eax
  42133d:	xchg   ah,al
  42133f:	inc    esp
  421340:	ficomp WORD PTR [edx]
  421342:	push   esp
  421343:	or     DWORD PTR [edx],esp
  421345:	fsubr  st,st(6)
  421347:	add    eax,0x898ea69c
  42134c:	cmp    eax,0x870cfbaa
  421351:	ins    DWORD PTR es:[edi],dx
  421352:	dec    edx
  421353:	add    DWORD PTR [edi],0x42799822
  421359:	xor    BYTE PTR es:[esi+edx*8-0x4b],dl
  42135e:	jle    0x421378
  421360:	dec    eax
  421361:	data16 mov WORD PTR [edx-0xc],gs
  421365:	lods   eax,DWORD PTR ds:[esi]
  421366:	lea    ecx,[ebx-0x6e]
  421369:	mov    al,ds:0x9822a3e2
  42136e:	je     0x421322
  421370:	or     eax,0x82fac02
  421375:	mov    al,ds:0x4342ba35
  42137a:	inc    ebp
  42137b:	fwait
  42137c:	int3   
  42137d:	add    BYTE PTR [esi-0x1d],cl
  421380:	icebp  
  421381:	or     bl,BYTE PTR [eax-0x69]
  421384:	ror    DWORD PTR [ebx-0xb],cl
  421387:	mov    ds:0x5ab6c6fd,al
  42138c:	pop    edi
  42138d:	jae    0x4213b1
  42138f:	push   ss
  421390:	aaa    
  421391:	jbe    0x42138d
  421393:	pop    ds
  421394:	nop
  421395:	jg     0x421357
  421397:	push   0xadfbb1a3
  42139c:	mov    al,ds:0xb3ea6e74
  4213a1:	inc    eax
  4213a2:	mov    bh,0x32
  4213a4:	fxch   st(5)
  4213a6:	ret    0xcb4e
  4213a9:	out    dx,eax
  4213aa:	fstp   DWORD PTR [edi-0x4]
  4213ad:	ins    DWORD PTR es:[edi],dx
  4213ae:	or     eax,0x22a53fa9
  4213b3:	mov    dl,0x60
  4213b5:	outs   dx,BYTE PTR ds:[esi]
  4213b6:	mov    cl,BYTE PTR [ebx]
  4213b8:	loope  0x4213bb
  4213ba:	call   DWORD PTR [edi+0x3a]
  4213bd:	sbb    BYTE PTR [esi],bh
  4213bf:	sldt   WORD PTR es:[eax]
	...
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	ror    BYTE PTR [edi+edi*8+0x163e06a],1
  421447:	add    ch,dh
  421449:	add    BYTE PTR [eax],al
  42144b:	add    BYTE PTR [eax+0x11],bl
  42144e:	ja     0x421458
  421450:	jg     0x4214bf
  421452:	mov    bh,0xfd
  421454:	jns    0x4214ca
  421456:	xchg   BYTE PTR [ebx+0x41],bh
  421459:	gs std 
  42145b:	mov    bl,0xad
  42145d:	inc    ebx
  42145e:	jb     0x42146b
  421460:	in     al,dx
  421461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421462:	in     al,dx
  421463:	retf   
  421464:	jp     0x42141a
  421466:	shl    DWORD PTR [eax],1
  421468:	pop    ds
  421469:	lahf   
  42146a:	(bad)  
  42146b:	rcl    cl,1
  42146d:	stos   DWORD PTR es:[edi],eax
  42146e:	add    ebp,edi
  421470:	fidiv  WORD PTR [esi-0x121b03a1]
  421476:	mov    cl,0x9c
  421478:	push   esi
  421479:	xchg   ecx,eax
  42147a:	or     DWORD PTR [ecx+ebp*2],ecx
  42147d:	add    al,0x45
  42147f:	xor    BYTE PTR [ebx-0x37],bh
  421482:	div    DWORD PTR [esi+0x103dbe21]
  421488:	mov    bl,0x11
  42148a:	in     eax,dx
  42148b:	push   edx
  42148c:	hlt    
  42148d:	pop    ecx
  42148e:	ss sbb al,0xa
  421491:	mov    es,esp
  421493:	dec    DWORD PTR [ebx]
  421495:	dec    ebx
  421496:	loope  0x421435
  421498:	mov    eax,0xd8a490ee
  42149d:	ss ret 0x5b95
  4214a1:	mov    edx,ebx
  4214a3:	aad    0xc4
  4214a5:	add    eax,0xf13cd532
  4214aa:	xor    al,0xbf
  4214ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ad:	pop    edx
  4214ae:	sbb    BYTE PTR [edx+0x21],dl
  4214b1:	and    al,0xe4
  4214b3:	sar    BYTE PTR [ebp-0x67],0xdf
  4214b7:	sbb    BYTE PTR [edi-0x60],bl
  4214ba:	add    ch,BYTE PTR [edi-0x616234b7]
  4214c0:	xor    eax,0x35a90b3e
  4214c5:	and    dl,BYTE PTR [ecx-0x67998698]
  4214cb:	lods   al,BYTE PTR ds:[esi]
  4214cc:	inc    esp
  4214cd:	(bad)  
  4214ce:	cwde   
  4214cf:	and    DWORD PTR [eax-0x443f3216],edi
  4214d5:	ror    DWORD PTR [esi],0x39
  4214d8:	imul   edi,DWORD PTR [ebp-0x51],0x93691622
  4214df:	inc    eax
  4214e0:	jb     0x421526
  4214e2:	clc    
  4214e3:	xor    eax,ebx
  4214e5:	xchg   ebp,eax
  4214e6:	cli    
  4214e7:	jecxz  0x421552
  4214e9:	xor    bh,al
  4214eb:	sar    BYTE PTR [ebp+0x3b6f944e],0xee
  4214f2:	push   esi
  4214f3:	ret    
  4214f4:	call   0x96114c7
  4214f9:	pop    ss
  4214fa:	push   ds
  4214fb:	cli    
  4214fc:	out    dx,eax
  4214fd:	int3   
  4214fe:	dec    ebx
  4214ff:	fcom   QWORD PTR [ebx]
  421501:	(bad)  
  421502:	pop    ebp
  421503:	popfw  
  421505:	xor    edx,DWORD PTR [eax-0x9db3e38]
  42150b:	div    esi
  42150d:	pusha  
  42150e:	cli    
  42150f:	add    DWORD PTR ds:0x6b2330c7,ecx
  421515:	sti    
  421516:	mov    ebx,0x311b7220
  42151b:	sbb    eax,0x7d4b31b2
  421520:	adc    BYTE PTR [ebx+0x39],dl
  421523:	xor    ecx,DWORD PTR [ecx]
  421525:	jge    0x4214cd
  421527:	jne    0x4214dc
  421529:	out    0x56,eax
  42152b:	push   cs
  42152c:	mov    al,ds:0x9457b241
  421531:	arpl   WORD PTR [ecx-0x5c136a78],ax
  421537:	push   es
  421538:	push   ds
  421539:	sub    al,0xfd
  42153b:	jns    0x4214fa
  42153d:	pop    ebx
  42153e:	jo     0x421552
  421540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  4215b1:	add    BYTE PTR [eax],al
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	fiadd  WORD PTR ds:0x64d5a296
  4215c6:	add    DWORD PTR [eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR [ecx+0x6],ah
  4215ce:	inc    edi
  4215cf:	mov    edx,0x9483d18d
  4215d4:	cld    
  4215d5:	das    
  4215d6:	dec    eax
  4215d7:	xlat   BYTE PTR ds:[ebx]
  4215d8:	mov    edx,0xa1ef7e41
  4215dd:	sub    eax,0x6538ae91
  4215e2:	mov    eax,ds:0x1a4516a5
  4215e7:	dec    eax
  4215e8:	ds sub ebx,esi
  4215eb:	out    0x3a,al
  4215ed:	mov    ch,0x74
  4215ef:	sub    ebp,esi
  4215f1:	mov    ch,0xd
  4215f3:	(bad)
  4215f6:	(bad)  
  4215f8:	xchg   esp,eax
  4215f9:	les    edi,FWORD PTR [ebp-0x1]
  4215fc:	jnp    0x421606
  4215fe:	retf   0x9f7e
  421601:	push   0x8fe00ba7
  421606:	sbb    al,0xa6
  421608:	push   ebx
  421609:	into   
  42160a:	mov    ?,WORD PTR [ebx+0x3]
  42160d:	push   ebp
  42160e:	stc    
  42160f:	imul   esi,DWORD PTR fs:[ebx+ebx*1-0x49],0xffffff82
  421615:	nop
  421616:	inc    edx
  421617:	jb     0x4215c4
  421619:	adc    eax,0xe76c0b64
  42161e:	xor    al,0x6c
  421620:	xchg   ebx,eax
  421621:	add    cl,BYTE PTR [edi-0x577688d8]
  421627:	aam    0x10
  421629:	daa    
  42162a:	fcomp  QWORD PTR [esi+0x30]
  42162d:	out    0xa6,eax
  42162f:	sbb    ah,BYTE PTR [ecx]
  421631:	dec    ebp
  421632:	mov    fs,edx
  421634:	pusha  
  421635:	(bad)  
  421636:	(bad)  
  421637:	inc    esi
  421638:	fldcw  WORD PTR [edi+0x6b]
  42163b:	sub    ebx,DWORD PTR [edx+0x73]
  42163e:	jecxz  0x4216ba
  421640:	in     eax,0xad
  421642:	fwait
  421643:	mov    ecx,0x871aaefe
  421648:	fiadd  DWORD PTR [eax+0x4]
  42164b:	xchg   edi,eax
  42164c:	mov    DWORD PTR ds:0xd31e87eb,eax
  421652:	out    0xae,eax
  421654:	sbb    DWORD PTR cs:[ebx+0x2a],edi
  421658:	jecxz  0x42167b
  42165a:	cmp    ecx,DWORD PTR [esi-0x7b]
  42165d:	mov    esp,0x96a1c4e5
  421662:	jbe    0x421617
  421664:	ins    DWORD PTR es:[edi],dx
  421665:	pop    eax
  421666:	fwait
  421667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421668:	jo     0x42169d
  42166a:	xor    BYTE PTR [edx+eiz*2+0x6d],bl
  42166e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42166f:	test   BYTE PTR [ebx],ah
  421671:	shr    DWORD PTR [edx-0x51],1
  421674:	fidiv  DWORD PTR [eax+0x74de81f0]
  42167a:	enter  0xc769,0xf5
  42167e:	cmc    
  42167f:	sbb    ebx,DWORD PTR [esi+0x3]
  421682:	cs jecxz 0x421610
  421685:	addr16 js 0x4216eb
  421688:	jmp    0x4216c7
  42168a:	and    al,0x1a
  42168c:	mov    edx,0x3fdd4f69
  421691:	mov    eax,ds:0xcb64d9af
  421696:	pop    ebp
  421697:	(bad)  
  421698:	rep ins BYTE PTR es:[edi],dx
  42169a:	in     al,dx
  42169b:	sub    BYTE PTR [edi+0x5ca117c3],bl
  4216a1:	repnz repz sbb ecx,DWORD PTR [esp+esi*1]
  4216a6:	pop    esp
  4216a7:	pushf  
  4216a8:	shr    BYTE PTR [ecx+0x14a07c4b],0x2a
  4216af:	and    cl,BYTE PTR [edx]
  4216b1:	cmc    
  4216b2:	cmp    eax,0xdc052496
  4216b7:	sbb    ebp,DWORD PTR [edi-0x2a]
  4216ba:	daa    
  4216bb:	imul   esi,DWORD PTR [ebp+0x79d8335],0x0
	...
  421731:	add    BYTE PTR [eax],al
  421733:	add    BYTE PTR [ecx-0x587fdad1],cl
  421739:	mov    ch,BYTE PTR [ebp-0x7e7b35d1]
  42173f:	cmp    eax,DWORD PTR [eax]
  421741:	sbb    ecx,DWORD PTR [esp+edx*8+0x165ca]
  421748:	cmc    
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR [ecx],bh
  42174d:	js     0x421782
  42174f:	inc    edi
  421750:	xor    DWORD PTR [esi+0x6f],ecx
  421753:	scas   al,BYTE PTR es:[edi]
  421754:	in     al,dx
  421755:	addr16 int 0x41
  421758:	or     DWORD PTR [edx-0x28],ecx
  42175b:	scas   al,BYTE PTR es:[edi]
  42175c:	dec    eax
  42175d:	loop   0x4217bb
  42175f:	sbb    DWORD PTR ss:[esi],esi
  421762:	ret    
  421763:	add    eax,0xc37c7dd3
  421768:	hlt    
  421769:	test   dh,cl
  42176b:	lock sbb DWORD PTR [eax-0x7f],0xffffff84
  421770:	cli    
  421771:	mov    bh,0xc2
  421773:	hlt    
  421774:	xchg   BYTE PTR [edi],ah
  421776:	dec    eax
  421777:	out    dx,eax
  421778:	sbb    al,0xe2
  42177a:	out    dx,eax
  42177b:	mov    al,0xf6
  42177d:	call   DWORD PTR [edx+0x397f4438]
  421783:	lock jmp 0x421719
  421786:	fimul  DWORD PTR ds:0x94d8432b
  42178c:	mov    esp,0x105ec778
  421791:	enter  0x7fc6,0x27
  421795:	sahf   
  421796:	mov    ebp,0xcc1e67f2
  42179b:	xor    edx,DWORD PTR ds:0x6992f55
  4217a1:	nop
  4217a2:	mov    al,0x43
  4217a4:	loopne 0x4217f6
  4217a6:	imul   esi,DWORD PTR [ecx+0x73],0x79e5df17
  4217ad:	loope  0x4217ae
  4217af:	test   al,0x4
  4217b1:	xor    esp,ebx
  4217b3:	int3   
  4217b4:	sbb    dh,BYTE PTR [esi-0x2d]
  4217b7:	ins    BYTE PTR es:[edi],dx
  4217b8:	out    dx,eax
  4217b9:	fdiv   QWORD PTR [esp+edi*1-0x34]
  4217bd:	stc    
  4217be:	test   eax,eax
  4217c0:	aas    
  4217c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217c2:	mov    ebp,0xe9523852
  4217c7:	pusha  
  4217c8:	jmp    0x72e4:0x17078e96
  4217cf:	out    0x62,al
  4217d1:	mov    BYTE PTR [ebx],bh
  4217d3:	xchg   ebx,esp
  4217d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d6:	dec    ebx
  4217d7:	stos   BYTE PTR es:[edi],al
  4217d8:	js     0x4217db
  4217da:	sub    DWORD PTR [ebx-0x45dcc0f0],ecx
  4217e0:	dec    ebx
  4217e1:	or     ah,BYTE PTR [ebx-0x5dd120ff]
  4217e7:	pop    es
  4217e8:	out    dx,eax
  4217e9:	ret    0xdffb
  4217ec:	add    ah,0x2b
  4217ef:	loop   0x421812
  4217f1:	(bad)  
  4217f2:	fcomip st,st(1)
  4217f4:	ds int3 
  4217f6:	aad    0xc0
  4217f8:	iret   
  4217f9:	xchg   DWORD PTR [esi],edi
  4217fb:	pop    esp
  4217fc:	inc    ecx
  4217fd:	adc    eax,0xeced02ff
  421802:	jle    0x421858
  421804:	popa   
  421805:	and    DWORD PTR [eax*2-0xb4e4ff6],eax
  42180c:	pop    ds
  42180d:	popf   
  42180e:	hlt    
  42180f:	test   BYTE PTR [edi-0x80],ch
  421812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421813:	in     al,0x7d
  421815:	add    edi,DWORD PTR [edi]
  421817:	inc    esi
  421818:	mov    DWORD PTR [ebp-0xf70459f],ebp
  42181e:	inc    ebp
  42181f:	aam    0xbc
  421821:	or     ah,BYTE PTR [esi]
  421823:	inc    edx
  421824:	push   ss
  421825:	icebp  
  421826:	inc    edi
  421827:	test   BYTE PTR [esi+0x22a5ed6b],al
  42182d:	(bad)  
  42182e:	sti    
  42182f:	cld    
  421830:	scas   al,BYTE PTR es:[edi]
  421831:	psubw  mm0,QWORD PTR [eax]
  421834:	jno    0x421864
  421836:	sbb    ecx,ebp
  421838:	pop    edx
  421839:	pop    esi
  42183a:	xor    eax,0x85a89206
  42183f:	adc    bh,BYTE PTR [edx]
	...
  4218b1:	add    BYTE PTR [eax],al
  4218b3:	add    ah,bl
  4218b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b6:	jae    0x421905
  4218b8:	jnp    0x421899
  4218ba:	(bad)  
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ecx,eax
  4218c1:	sahf   
  4218c2:	sahf   
  4218c3:	lea    edi,[edi-0xafffe9a]
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [edx-0x307b18ae],cl
  4218d1:	xchg   esi,eax
  4218d2:	xlat   BYTE PTR ds:[ebx]
  4218d3:	or     eax,0xc956cec1
  4218d8:	add    eax,0x71198a5f
  4218dd:	int3   
  4218de:	mov    BYTE PTR [esi+0x430fa090],dh
  4218e4:	cld    
  4218e5:	ss mov esp,0x935f1fc6
  4218eb:	jge    0x421879
  4218ed:	push   ebx
  4218ee:	adc    ah,BYTE PTR [ebx+0x71]
  4218f1:	push   cs
  4218f2:	retf   0x4302
  4218f5:	repz neg DWORD PTR [eax+0x36d70dc1]
  4218fc:	xlat   BYTE PTR ds:[ebx]
  4218fd:	dec    esp
  4218fe:	mov    edi,0x48078ca1
  421903:	or     bl,BYTE PTR [edx+edx*1+0x6ad306ae]
  42190a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42190b:	xchg   esi,eax
  42190c:	push   edi
  42190d:	and    DWORD PTR [ebx],esp
  42190f:	retf   0x48b8
  421912:	scas   eax,DWORD PTR es:[edi]
  421913:	out    dx,al
  421914:	jnp    0x4218e2
  421916:	js     0x42193f
  421918:	rcl    DWORD PTR [ecx+esi*2],cl
  42191b:	and    al,0xe0
  42191d:	jmp    0x4218cd
  42191f:	and    ebx,DWORD PTR [ecx+0x576ac799]
  421925:	les    eax,FWORD PTR [ebp-0x3195dea6]
  42192b:	jns    0x4218ae
  42192d:	(bad)  [eax-0x27]
  421930:	pop    esi
  421931:	std    
  421932:	pop    ss
  421933:	(bad)  
  421935:	adc    dh,bh
  421937:	jp     0x421908
  421939:	test   BYTE PTR [esi],dh
  42193b:	adc    al,BYTE PTR [ebp+0x1cbde4a2]
  421941:	dec    esp
  421942:	shl    DWORD PTR [ebp+0x34f1efd7],cl
  421948:	gs dec eax
  42194a:	das    
  42194b:	add    DWORD PTR [ecx+eax*2],esp
  42194e:	ficomp WORD PTR [esi-0x163f1aa0]
  421954:	pusha  
  421955:	mov    ds:0x89a286e9,eax
  42195a:	inc    eax
  42195b:	cwde   
  42195c:	int3   
  42195d:	mov    ch,0x17
  42195f:	cmp    eax,esi
  421961:	jo     0x4218ed
  421963:	pop    edi
  421964:	cld    
  421965:	mov    eax,ds:0xccc71f0e
  42196a:	push   eax
  42196b:	ins    BYTE PTR es:[edi],dx
  42196c:	and    eax,DWORD PTR [ebp-0x668c6149]
  421972:	cmp    esp,eax
  421974:	fst    DWORD PTR [edx]
  421976:	and    ah,BYTE PTR [edi-0x284fe9f5]
  42197c:	mov    al,0xda
  42197e:	ds xor ch,ah
  421981:	dec    ecx
  421982:	dec    BYTE PTR [eax]
  421984:	mov    dh,0x72
  421986:	jp     0x421a01
  421988:	(bad)
  42198b:	push   edi
  42198c:	xchg   BYTE PTR [edi],al
  42198e:	xchg   esi,eax
  42198f:	mov    ecx,0xc207e120
  421994:	sub    al,BYTE PTR [eax+ecx*8]
  421997:	mov    eax,ds:0x32e619c3
  42199c:	in     al,0x9a
  42199e:	lods   eax,DWORD PTR ds:[esi]
  42199f:	and    al,0x1f
  4219a1:	jae    0x4219c3
  4219a3:	mov    edi,0x7f528707
  4219a8:	xabort 0x34
  4219ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ac:	xchg   esi,eax
  4219ad:	in     al,dx
  4219ae:	sub    eax,0xd0ac5a12
  4219b3:	dec    esp
  4219b4:	cmp    al,0x59
  4219b6:	cmp    al,0xa0
  4219b8:	sub    BYTE PTR cs:[ecx+ecx*8-0x7c7859fa],al
  4219c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  421a31:	add    BYTE PTR [eax],al
  421a33:	add    bh,bl
  421a35:	xor    ch,BYTE PTR [edi-0x6010ed]
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx+0x1c2d085e]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    BYTE PTR [ebp+0x6],bl
  421a4e:	lds    edx,FWORD PTR [edi+edx*2+0x24]
  421a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a53:	rol    BYTE PTR [esp+edx*4],cl
  421a56:	add    al,0xd8
  421a58:	xor    ch,0xc9
  421a5b:	cmp    edi,DWORD PTR [edx]
  421a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a5e:	or     edx,ebx
  421a60:	bound  edi,QWORD PTR [edx+eiz*8]
  421a63:	dec    esp
  421a64:	pop    eax
  421a65:	scas   al,BYTE PTR es:[edi]
  421a66:	and    esi,DWORD PTR [ebx-0xc]
  421a69:	lock (bad) 
  421a6b:	outs   dx,DWORD PTR ds:[esi]
  421a6c:	mov    cs,WORD PTR [eax+0x335f4720]
  421a72:	mov    bh,0x90
  421a74:	clc    
  421a75:	into   
  421a76:	add    al,0x2e
  421a78:	inc    edx
  421a79:	cdq    
  421a7a:	aaa    
  421a7b:	mov    eax,esp
  421a7d:	mov    ebp,0x7b6f5028
  421a82:	in     eax,0x41
  421a84:	inc    eax
  421a85:	ins    DWORD PTR es:[edi],dx
  421a86:	cmp    esi,DWORD PTR [ecx-0x576a8edc]
  421a8c:	(bad)  
  421a8d:	outs   dx,BYTE PTR ds:[esi]
  421a8f:	in     al,0x1e
  421a91:	in     al,0x70
  421a93:	adc    edx,eax
  421a95:	inc    ebx
  421a96:	mov    ecx,0x98a9687a
  421a9b:	js     0x421b0c
  421a9d:	xor    eax,0x7c17b54f
  421aa2:	sub    DWORD PTR [ebp-0x3b],esi
  421aa5:	inc    eax
  421aa6:	(bad)  
  421aa7:	popf   
  421aa8:	mov    edi,0xf550d971
  421aad:	enter  0x9bb4,0x8c
  421ab1:	mov    ebx,0x3ffa5653
  421ab6:	xchg   edx,esp
  421ab8:	loopne 0x421ad1
  421aba:	jnp    0x421a92
  421abc:	int    0xb
  421abe:	call   0x54d1:0xed948615
  421ac5:	fild   QWORD PTR [edi+0x76]
  421ac8:	fnstsw WORD PTR [ecx+0x2ef8a5f2]
  421ace:	xchg   esp,eax
  421acf:	push   ecx
  421ad0:	cwde   
  421ad1:	mov    ebx,0x9ee91230
  421ad6:	mov    edi,0x2ea36a8
  421adb:	iret   
  421adc:	or     eax,0xf667a032
  421ae1:	mov    edi,0xafc2a39c
  421ae6:	push   esi
  421ae7:	(bad)  
  421ae9:	push   ebx
  421aea:	jecxz  0x421aa2
  421aec:	pushf  
  421aed:	jle    0x421adc
  421aef:	fwait
  421af0:	out    dx,eax
  421af1:	adc    eax,0xc679ea06
  421af6:	sbb    BYTE PTR [eax+0x515c98b9],dl
  421afc:	jno    0x421b61
  421afe:	lods   al,BYTE PTR ds:[esi]
  421aff:	shl    dh,cl
  421b01:	xchg   esi,eax
  421b02:	ins    BYTE PTR es:[edi],dx
  421b03:	jge    0x421aa3
  421b05:	call   0x48cb:0x9c9e9ff6
  421b0c:	(bad)  
  421b0d:	jl     0x421b4d
  421b0f:	rcr    cl,1
  421b11:	int    0x3b
  421b13:	adc    ebp,ecx
  421b15:	pop    eax
  421b16:	push   ss
  421b17:	adc    dl,BYTE PTR [edx-0x30cd94ae]
  421b1d:	lock pop eax
  421b1f:	in     eax,dx
  421b20:	add    DWORD PTR [ebx],0x11385a9f
  421b26:	stc    
  421b27:	xchg   edx,eax
  421b28:	mov    esp,0x4792582c
  421b2d:	vmovhps QWORD PTR [ecx+0x7acca3b0],xmm1
  421b35:	fsub   DWORD PTR [edi]
  421b37:	push   edx
  421b38:	(bad)  
  421b39:	es xchg edx,eax
  421b3b:	std    
  421b3c:	in     al,0x56
  421b3e:	adc    eax,0x4bd2
	...
  421bb3:	add    BYTE PTR [edx-0x604ef4eb],cl
  421bb9:	mov    edi,0x2d6a3fba
  421bbe:	scas   al,BYTE PTR es:[edi]
  421bbf:	sub    edi,DWORD PTR [ebx]
  421bc1:	mov    edi,0x68a999b7
  421bc6:	add    DWORD PTR [eax],eax
  421bc8:	cmc    
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [ebp+ebp*2-0x28d4e895],bh
  421bd2:	xchg   edi,eax
  421bd3:	cmp    BYTE PTR [ebx-0x64338ef7],dh
  421bd9:	pop    ebx
  421bda:	fidivr DWORD PTR [esi+ebp*1-0x1f]
  421bde:	xor    ebx,DWORD PTR [ebp+0x3ed2bccf]
  421be4:	scas   al,BYTE PTR es:[edi]
  421be5:	repz clc 
  421be7:	fstp   QWORD PTR [ebp-0x9d87702]
  421bed:	mov    edx,0x85a9725a
  421bf2:	push   edx
  421bf3:	imul   eax,DWORD PTR [ebx-0x78430921],0xfffffff8
  421bfa:	bound  esp,QWORD PTR [edi+0x20]
  421bfd:	push   0xffffffef
  421bff:	(bad)  
  421c00:	fstp   DWORD PTR [esp+edi*8]
  421c03:	mov    al,0xf9
  421c05:	ds mov esi,0xf6304b27
  421c0b:	add    DWORD PTR [edi+esi*1+0x6d],ebp
  421c0f:	pop    ebx
  421c10:	mov    ds:0xfd83a7f8,al
  421c15:	sub    bh,BYTE PTR [edx]
  421c17:	(bad)  
  421c18:	std    
  421c19:	pop    edi
  421c1a:	aas    
  421c1b:	retf   0x9f2
  421c1e:	int    0xf4
  421c20:	mov    edi,0xf2a56b99
  421c25:	dec    ebp
  421c26:	jle    0x421ca3
  421c28:	cmp    al,0x2f
  421c2a:	lods   al,BYTE PTR ds:[esi]
  421c2b:	cmp    eax,0x1a6dcb04
  421c30:	inc    edi
  421c31:	mov    esp,0xe4b80c
  421c36:	mov    ebp,0x705724b3
  421c3b:	retf   0xe666
  421c3e:	popa   
  421c3f:	sbb    bl,BYTE PTR [eax-0x43]
  421c42:	pop    eax
  421c43:	out    dx,al
  421c44:	pusha  
  421c45:	adc    cl,BYTE PTR [esi+0x4f]
  421c48:	repz retf 
  421c4a:	ret    
  421c4b:	cwde   
  421c4c:	sub    eax,0xeb73714b
  421c51:	sub    DWORD PTR [eax-0x19c70fc4],ecx
  421c57:	push   cs
  421c58:	pop    ds
  421c59:	pop    ebx
  421c5a:	sar    DWORD PTR [eax-0x6f],1
  421c5d:	mov    ebp,0x3ec09b7c
  421c62:	enter  0x37ce,0x62
  421c66:	int3   
  421c67:	sbb    cl,bh
  421c69:	add    edx,DWORD PTR gs:[ebx-0x4d]
  421c6d:	pop    ds
  421c6e:	std    
  421c6f:	in     eax,0x54
  421c71:	inc    esi
  421c72:	fidivr DWORD PTR [esi]
  421c74:	inc    esi
  421c75:	or     DWORD PTR [edi+edx*8+0x558423c],esp
  421c7c:	test   al,0xca
  421c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c7f:	lahf   
  421c80:	pop    eax
  421c81:	dec    ebx
  421c82:	sub    eax,0xeff0a064
  421c87:	test   BYTE PTR [edi-0xb],bl
  421c8a:	cwde   
  421c8b:	sbb    esi,ebx
  421c8d:	sbb    ebx,DWORD PTR [ecx]
  421c8f:	call   0x8ee7cb20
  421c94:	jno    0x421c88
  421c96:	lods   eax,DWORD PTR ds:[esi]
  421c97:	inc    edi
  421c98:	and    al,0xe5
  421c9a:	mov    ds:0xc6309234,eax
  421c9f:	xchg   ecx,eax
  421ca0:	es stc 
  421ca2:	lods   al,BYTE PTR ds:[esi]
  421ca3:	add    ch,bl
  421ca5:	cmp    ecx,ecx
  421ca7:	out    0xb3,eax
  421ca9:	mov    edi,es
  421cab:	pop    ds
  421cac:	(bad)
  421caf:	cwde   
  421cb0:	loope  0x421d21
  421cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb3:	xchg   esi,eax
  421cb4:	push   0xff9ff6b7
  421cb9:	shl    DWORD PTR [ecx],1
  421cbb:	and    BYTE PTR [edi],bh
  421cbd:	or     dl,BYTE PTR [edx+0x29]
  421cc0:	cmc    
	...
  421d31:	add    BYTE PTR [eax],al
  421d33:	add    bh,ah
  421d35:	push   ds
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	inc    edx
  421d41:	xor    DWORD PTR [edi+0x7a],esi
  421d44:	sahf   
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    BYTE PTR [edx+eiz*2+0x2e8b02f2],ah
  421d52:	mov    bl,0x96
  421d54:	xor    bl,ch
  421d56:	mov    esi,0xbf00f38c
  421d5b:	lods   eax,DWORD PTR ds:[esi]
  421d5c:	mov    ds:0x1690ae33,al
  421d61:	cmp    esp,DWORD PTR [edx+0x76]
  421d64:	sub    al,0x75
  421d66:	das    
  421d67:	cmp    bl,BYTE PTR [ecx-0x6d7f124f]
  421d6d:	push   ebx
  421d6e:	ss adc eax,0x4d7d4f0c
  421d74:	sub    al,0x47
  421d76:	int    0x87
  421d78:	dec    eax
  421d79:	dec    esp
  421d7a:	call   0x911f:0xc79169b6
  421d81:	pop    ds
  421d82:	pop    ss
  421d83:	outs   dx,BYTE PTR ds:[esi]
  421d84:	cmp    edx,DWORD PTR [edx]
  421d86:	sbb    DWORD PTR [esi-0x19632b2f],eax
  421d8c:	xchg   ebx,eax
  421d8d:	mov    eax,0x7596b8a
  421d92:	sbb    DWORD PTR [esi],esi
  421d94:	fsubrp st(3),st
  421d96:	xchg   esi,eax
  421d97:	popa   
  421d98:	sbb    eax,0x5171c9d0
  421d9d:	mov    ds:0x3ba93447,al
  421da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421da3:	(bad)  
  421da4:	in     al,dx
  421da5:	daa    
  421da6:	xor    BYTE PTR [edx+ecx*1],cl
  421da9:	(bad)  
  421daa:	stc    
  421dab:	int3   
  421dac:	aas    
  421dad:	ret    
  421dae:	dec    edx
  421daf:	ins    BYTE PTR es:[edi],dx
  421db0:	std    
  421db1:	xchg   edi,eax
  421db2:	aaa    
  421db3:	test   dl,ch
  421db5:	les    esi,FWORD PTR ds:0x7e370c22
  421dbb:	ss sbb ebx,0x5f
  421dbf:	leave  
  421dc0:	(bad)  
  421dc1:	fld    DWORD PTR [esi*4+0x40467891]
  421dc8:	in     eax,0x42
  421dca:	push   es
  421dcb:	inc    esp
  421dcc:	stc    
  421dcd:	mov    ds:0x7f36cf97,eax
  421dd2:	pusha  
  421dd3:	(bad)  [edi]
  421dd5:	sbb    ah,BYTE PTR [edi]
  421dd7:	aas    
  421dd8:	por    mm2,QWORD PTR [ecx-0x5195b786]
  421ddf:	(bad)  
  421de0:	fisub  DWORD PTR [ebp+0x26ddf650]
  421de6:	lahf   
  421de7:	ja     0x421dc4
  421de9:	pusha  
  421dea:	leave  
  421deb:	loope  0x421e42
  421ded:	mov    WORD PTR [eax-0x3a],es
  421df0:	pop    eax
  421df1:	(bad)  
  421df2:	in     al,dx
  421df3:	jbe    0x421e1d
  421df5:	js     0x421dce
  421df7:	sbb    al,al
  421df9:	add    ch,bl
  421dfb:	(bad)  
  421dfc:	mov    ebp,0xe90902f0
  421e01:	shr    BYTE PTR [esi],0x20
  421e04:	pop    ss
  421e05:	xchg   esi,eax
  421e06:	push   ebx
  421e07:	sar    BYTE PTR [ebp-0x41b6eb21],1
  421e0d:	and    bh,BYTE PTR ds:0xab43365d
  421e13:	jmp    0x56e3:0x2da7be97
  421e1a:	in     eax,dx
  421e1b:	sub    cl,BYTE PTR [edx+0x1a1c9ed1]
  421e21:	push   edx
  421e22:	stos   BYTE PTR es:[edi],al
  421e23:	mov    bl,0xb5
  421e25:	aas    
  421e26:	or     DWORD PTR [ecx],0x490b4189
  421e2c:	cmp    DWORD PTR [esi+0x29fde3f8],ebx
  421e32:	sbb    ecx,edi
  421e34:	and    DWORD PTR [esi],0x1e5bdfc3
  421e3a:	cmp    esi,eax
  421e3c:	int3   
  421e3d:	or     eax,0xc3013c
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421ea0
  421ec1:	jne    0x421e4c
  421ec3:	jne    0x421e58
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [edx+0x23],cl
  421ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ecf:	jmp    0x903152c2
  421ed4:	div    eax
  421ed6:	cs cdq 
  421ed8:	dec    edx
  421ed9:	cld    
  421eda:	push   eax
  421edb:	push   eax
  421edc:	dec    esp
  421edd:	lock test DWORD PTR [esi],0x69a1518a
  421ee4:	jle    0x421ebc
  421ee6:	test   BYTE PTR [ebx+0x3cef9594],0xbb
  421eed:	and    BYTE PTR ds:0x4748c877,al
  421ef3:	fisttp QWORD PTR [edx-0x7f]
  421ef6:	arpl   bp,dx
  421ef8:	push   ss
  421ef9:	or     al,BYTE PTR [ebx+0x6b]
  421efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421efd:	lods   al,BYTE PTR ds:[esi]
  421efe:	pop    ds
  421eff:	adc    DWORD PTR [ecx+0x219daba],esi
  421f05:	jno    0x421f2d
  421f07:	fmul   QWORD PTR [ebp-0x154b212d]
  421f0d:	aaa    
  421f0e:	and    al,0x58
  421f10:	mov    ebx,0xf6f2481d
  421f15:	cvttps2pi mm6,xmm0
  421f18:	or     eax,0x63453b3
  421f1d:	or     al,0x30
  421f1f:	mov    eax,0xa01596a1
  421f24:	dec    edi
  421f25:	xchg   ebp,eax
  421f26:	sbb    BYTE PTR es:0xf38f2fc8,0xbe
  421f2e:	sbb    ecx,DWORD PTR [ebx*8+0x757fc008]
  421f35:	int    0xff
  421f37:	mov    dl,0xb4
  421f39:	in     eax,dx
  421f3a:	pop    ss
  421f3b:	int    0x57
  421f3d:	push   0x64
  421f3f:	mov    BYTE PTR [esi],ch
  421f41:	sub    eax,0xee14c9c9
  421f46:	fsub   QWORD PTR [esi-0x77]
  421f49:	xchg   DWORD PTR ds:0x91a6f77f,edi
  421f4f:	stc    
  421f50:	rcr    DWORD PTR [ebx-0x31a2ab83],1
  421f56:	and    BYTE PTR ds:0xaf6fa89d,al
  421f5c:	jbe    0x421f26
  421f5e:	ror    DWORD PTR [ecx],cl
  421f60:	pusha  
  421f61:	jle    0x421f0a
  421f63:	clc    
  421f64:	aam    0xfb
  421f66:	dec    esp
  421f67:	(bad)  
  421f68:	stc    
  421f69:	dec    ecx
  421f6a:	ins    BYTE PTR es:[edi],dx
  421f6b:	jl     0x421f97
  421f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f6e:	mov    BYTE PTR [ebx+0x10c6e991],bh
  421f74:	jno    0x421f5f
  421f76:	hlt    
  421f77:	dec    eax
  421f78:	mov    cl,0x30
  421f7a:	mov    dl,0xcd
  421f7c:	(bad)  
  421f7d:	adc    dl,BYTE PTR [eax-0x25120c34]
  421f83:	dec    ebp
  421f84:	loop   0x421f2c
  421f86:	lahf   
  421f87:	test   al,0xad
  421f89:	xchg   esi,eax
  421f8a:	scas   al,BYTE PTR es:[edi]
  421f8b:	pop    es
  421f8c:	add    al,0xde
  421f8e:	cmp    eax,0x81f0b673
  421f93:	int    0xe2
  421f95:	sub    al,0x64
  421f97:	out    0xcb,al
  421f99:	ins    DWORD PTR es:[edi],dx
  421f9a:	leave  
  421f9b:	sbb    BYTE PTR [ecx-0x4ac55ad4],0x9d
  421fa2:	mov    eax,ds:0x5b0b1e4a
  421fa7:	push   eax
  421fa8:	sbb    DWORD PTR [edi+0x67d490ce],ebp
  421fae:	aas    
  421faf:	mul    BYTE PTR [edx+edi*2]
  421fb2:	pop    ds
  421fb3:	(bad)  
  421fb4:	(bad)  
  421fb5:	scas   eax,DWORD PTR es:[edi]
  421fb6:	push   esp
  421fb7:	scas   eax,DWORD PTR es:[edi]
  421fb8:	or     ch,ch
  421fba:	lahf   
  421fbb:	cmp    edx,DWORD PTR [esi]
  421fbd:	xchg   edi,eax
  421fbe:	nop
  421fbf:	push   cs
  421fc0:	sbb    DWORD PTR [eax],eax
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x1a4cad4
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [edx-0x578c1bde],bh
  422051:	sahf   
  422052:	jmp    0x422036
  422054:	sub    DWORD PTR [ecx],edi
  422056:	mov    dh,0xa5
  422058:	and    edi,ebx
  42205a:	fwait
  42205b:	(bad)  
  42205c:	push   edi
  42205e:	ja     0x421fe8
  422060:	adc    al,0xe4
  422062:	sub    BYTE PTR [ebx+0x3b8191b4],ah
  422068:	fsubr  DWORD PTR [esi+0x465fe1dc]
  42206e:	pusha  
  42206f:	xor    DWORD PTR [ecx],edx
  422071:	pop    esi
  422072:	jno    0x422032
  422074:	xor    esp,ebx
  422076:	cmp    ch,BYTE PTR [ebx]
  422078:	(bad)  
  422079:	arpl   WORD PTR [ebx+eax*8+0x2adeb42a],cx
  422080:	mov    ecx,edi
  422082:	xor    al,0xd
  422084:	and    BYTE PTR [ebx],bh
  422086:	ins    DWORD PTR es:[edi],dx
  422087:	mov    esi,DWORD PTR [esi+0x1b001246]
  42208d:	cli    
  42208e:	in     al,0x6a
  422090:	jl     0x4220d7
  422092:	jle    0x422046
  422094:	(bad)  
  422095:	je     0x4220cf
  422097:	fcmovnb st,st(7)
  422099:	sub    ebx,esi
  42209b:	jp     0x422108
  42209d:	lahf   
  42209e:	pop    es
  42209f:	mov    BYTE PTR [edi-0x7e],0x70
  4220a3:	and    DWORD PTR [edi],eax
  4220a5:	adc    eax,0xf59bac66
  4220aa:	jne    0x4220e5
  4220ac:	es inc ecx
  4220ae:	dec    esi
  4220af:	adc    BYTE PTR [ecx-0x2f],0xd5
  4220b3:	sub    edx,0x5f
  4220b6:	push   ds
  4220b7:	cmp    cl,BYTE PTR [ebx-0x71]
  4220ba:	sar    BYTE PTR [esi+ebx*4-0x5953a46f],0x65
  4220c2:	xchg   edx,eax
  4220c3:	gs out 0xde,eax
  4220c6:	cmp    dh,BYTE PTR [ebp-0x60156fcc]
  4220cc:	sahf   
  4220cd:	cdq    
  4220ce:	out    0x98,al
  4220d0:	inc    BYTE PTR [eax-0x19]
  4220d3:	test   eax,0xe7224d2c
  4220d8:	push   esp
  4220d9:	repnz pop edx
  4220db:	pop    ss
  4220dc:	test   al,0x9b
  4220de:	and    eax,0x6b8d3902
  4220e3:	call   0x99960cfb
  4220e8:	ins    DWORD PTR es:[edi],dx
  4220e9:	push   esp
  4220ea:	dec    ebp
  4220eb:	stos   DWORD PTR es:[edi],eax
  4220ec:	push   esp
  4220ed:	mov    ebx,ebx
  4220ef:	repz mov dh,BYTE PTR [ebp-0x5b]
  4220f3:	dec    ecx
  4220f4:	shl    DWORD PTR [edi*1-0x138e4e45],cl
  4220fb:	pop    ebp
  4220fc:	inc    ebx
  4220fd:	fmulp  st(6),st
  4220ff:	imul   ebx,DWORD PTR [ecx-0x3e],0x61
  422103:	xor    BYTE PTR [ecx+0x52],dh
  422106:	aad    0xe8
  422108:	sub    al,0x44
  42210a:	pop    ebp
  42210b:	inc    edx
  42210c:	jns    0x4220d1
  42210e:	jae    0x42215f
  422110:	inc    ebx
  422111:	xchg   ecx,eax
  422112:	in     al,dx
  422113:	inc    ecx
  422114:	rcr    ebx,0xba
  422117:	or     cl,ch
  422119:	or     cl,BYTE PTR [ebx]
  42211b:	cmp    al,0xf8
  42211d:	jle    0x4220b1
  42211f:	mov    bl,BYTE PTR [edx+ebx*4-0xc1c0cb0]
  422126:	sbb    al,0x3d
  422128:	ret    0x386a
  42212b:	cmp    eax,0x2c259c1f
  422130:	push   ss
  422131:	push   0x4a
  422133:	aam    0x2e
  422135:	in     eax,dx
  422136:	in     al,0x4e
  422138:	out    0x1e,al
  42213a:	or     edx,ecx
  42213c:	jno    0x4220fc
  42213e:	popa   
  42213f:	outs   dx,BYTE PTR ds:[esi]
  422140:	lock add BYTE PTR [eax],al
	...
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0xcb
  4221c1:	test   BYTE PTR [ebx-0x7],dh
  4221c4:	jge    0x422232
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    bh,dh
  4221cd:	loop   0x42224c
  4221cf:	push   eax
  4221d0:	push   eax
  4221d1:	hlt    
  4221d2:	mov    ecx,0x53a5e5d
  4221d7:	sub    esp,DWORD PTR [eax-0x64]
  4221da:	ins    BYTE PTR es:[edi],dx
  4221db:	mov    ds:0xd53e3dfc,al
  4221e1:	dec    ebp
  4221e2:	push   ebx
  4221e3:	xchg   ebx,ebx
  4221e5:	ret    
  4221e6:	std    
  4221e7:	xor    DWORD PTR [edi-0x4a7b6d2b],edx
  4221ed:	mov    edi,0x5b00ce9a
  4221f2:	push   esi
  4221f3:	push   ebp
  4221f4:	fs and eax,0x7b
  4221f8:	loope  0x4221cf
  4221fa:	cs inc edi
  4221fc:	int    0x99
  4221fe:	retf   
  4221ff:	icebp  
  422200:	cdq    
  422201:	pop    ds
  422202:	nop
  422203:	stc    
  422204:	clc    
  422205:	aas    
  422206:	and    ecx,eax
  422208:	pop    esp
  422209:	pop    ebp
  42220a:	push   ebp
  42220b:	in     eax,dx
  42220c:	xchg   edx,eax
  42220d:	popa   
  42220e:	xchg   esp,eax
  42220f:	jnp    0x4221c9
  422211:	and    al,0x64
  422213:	inc    esp
  422214:	fisub  DWORD PTR [ebx+0x5a4149f6]
  42221a:	mov    dh,0xd9
  42221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221d:	call   FWORD PTR [ecx+0x5e0fdb35]
  422223:	fidivr WORD PTR [ecx-0x40c7441d]
  422229:	outs   dx,DWORD PTR ds:[esi]
  42222a:	pop    edx
  42222b:	dec    ebp
  42222c:	add    eax,0x88e5cbf
  422231:	push   edi
  422232:	jb     0x422277
  422234:	nop
  422235:	cmp    dh,0x72
  422238:	adc    eax,DWORD PTR [eax+ebx*1-0x1e00eda2]
  42223f:	jns    0x4221c9
  422241:	push   esp
  422242:	call   0x31bb72a4
  422247:	popf   
  422248:	mov    bh,0xc
  42224a:	in     al,dx
  42224b:	jns    0x4221ea
  42224d:	enter  0x7d13,0x88
  422251:	out    0x4,eax
  422253:	loopne 0x422277
  422255:	aas    
  422256:	out    0x59,al
  422258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422259:	cld    
  42225a:	cmp    esp,DWORD PTR [ebp+0x61]
  42225d:	cdq    
  42225e:	ins    DWORD PTR es:[edi],dx
  42225f:	pop    ecx
  422260:	push   cs
  422261:	jae    0x275579c7
  422267:	stos   DWORD PTR es:[edi],eax
  422268:	sbb    BYTE PTR [ecx+0xb],al
  42226b:	or     esp,DWORD PTR [ebx+0x78630022]
  422271:	cmp    al,0xdf
  422273:	mov    eax,ds:0xb2c1d8fd
  422278:	in     al,0x49
  42227a:	(bad)  
  42227b:	jmp    0x4222ef
  42227d:	bnd call 0x6613b92e
  422283:	pop    ecx
  422284:	outs   dx,DWORD PTR ds:[esi]
  422285:	in     eax,0x9b
  422287:	fwait
  422288:	mov    edi,0x5b3c526a
  42228d:	cwde   
  42228e:	xor    bl,dh
  422290:	xor    DWORD PTR [esi-0x63e64fe3],edi
  422296:	jmp    0x8733828b
  42229b:	shr    DWORD PTR [ecx+0x3],1
  42229e:	imul   DWORD PTR [ebx-0x4c]
  4222a1:	sub    DWORD PTR [ebx+eax*4+0x39667071],esp
  4222a8:	ins    BYTE PTR es:[edi],dx
  4222a9:	icebp  
  4222aa:	or     BYTE PTR [esi-0x1d],ch
  4222ad:	fmul   st(7),st
  4222af:	das    
  4222b0:	sub    edi,DWORD PTR [edi]
  4222b2:	cli    
  4222b3:	jnp    0x4222ae
  4222b5:	mov    edx,0x1992042e
  4222ba:	and    ebx,DWORD PTR [eax+0x30ed9315]
  4222c0:	and    BYTE PTR [eax],al
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	add    eax,0x7207f6d9
  422345:	ins    DWORD PTR es:[edi],dx
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [ebp+0x34235eea],bl
  422351:	nop
  422352:	stc    
  422353:	jmp    0xa6be:0x40f4d390
  42235a:	or     bl,BYTE PTR [esi+0x3658439d]
  422360:	jbe    0x422347
  422362:	push   eax
  422363:	mov    WORD PTR [eax-0x22],?
  422366:	je     0x4222ff
  422368:	dec    eax
  422369:	sbb    BYTE PTR [ebx],0x32
  42236c:	or     eax,0x3d2f71c
  422371:	cmp    bl,BYTE PTR [edx]
  422373:	and    al,0x3f
  422375:	cmp    BYTE PTR [ecx+ecx*4+0x39cfe4d8],ah
  42237c:	push   0xc78e822e
  422381:	ins    DWORD PTR es:[edi],dx
  422382:	sbb    eax,0xd5fadb9
  422387:	inc    edi
  422388:	jle    0x4223cf
  42238a:	xchg   ebp,eax
  42238b:	mov    bl,0xd5
  42238d:	cmp    ch,BYTE PTR [edi]
  42238f:	xor    eax,0xfd91aa3d
  422394:	test   BYTE PTR [eax+0x66fb9291],al
  42239a:	pop    edi
  42239b:	cdq    
  42239c:	mov    bl,0x31
  42239e:	jl     0x4223e4
  4223a0:	push   ds
  4223a1:	dec    edx
  4223a2:	lea    ebx,[ecx-0x59]
  4223a5:	loop   0x42241f
  4223a7:	ficom  WORD PTR [ebx+0x7c98a201]
  4223ad:	sbb    edi,DWORD PTR [edx]
  4223af:	jo     0x42235c
  4223b1:	rcl    DWORD PTR [ebp-0x48],1
  4223b4:	mov    al,ds:0xf0427de1
  4223b9:	push   eax
  4223ba:	dec    ecx
  4223bb:	rcr    eax,0xaa
  4223be:	sub    cl,ch
  4223c0:	xchg   edx,eax
  4223c1:	mov    eax,edi
  4223c3:	data16 gs mov ch,0x3f
  4223c7:	pushf  
  4223c8:	fidivr DWORD PTR [ebp+0x7e]
  4223cb:	outs   dx,BYTE PTR ds:[esi]
  4223cc:	loope  0x4223de
  4223ce:	sbb    esi,DWORD PTR [ecx+0x3a]
  4223d1:	(bad)  
  4223d2:	xchg   ecx,eax
  4223d3:	xchg   BYTE PTR ds:0xa3940fbf,bh
  4223d9:	outs   dx,DWORD PTR ds:[esi]
  4223da:	and    al,0x13
  4223dc:	jo     0x4223e1
  4223de:	addr16 push 0xffffffd7
  4223e1:	mov    ds:0x7f390fa3,eax
  4223e6:	fsub   DWORD PTR [ebx-0x4e]
  4223e9:	aam    0xe4
  4223eb:	inc    ebp
  4223ec:	mov    ebx,0xce3419d6
  4223f1:	add    edx,edx
  4223f3:	fwait
  4223f4:	xchg   ebp,eax
  4223f5:	clc    
  4223f6:	jnp    0x4223f7
  4223f8:	adc    al,0x79
  4223fa:	inc    ebp
  4223fb:	sub    al,0x45
  4223fd:	scas   al,BYTE PTR es:[edi]
  4223fe:	ror    BYTE PTR [ebx+edi*1+0x13db0963],0xc0
  422406:	or     eax,0x57bd8a58
  42240b:	imul   ecx,DWORD PTR [ebp+0x4ae47d25],0xe3b55023
  422415:	and    eax,0x8fa833ac
  42241a:	sahf   
  42241b:	jmp    0x935b60b3
  422420:	adc    al,BYTE PTR [esi]
  422422:	push   ebx
  422423:	inc    edi
  422424:	ins    BYTE PTR es:[edi],dx
  422425:	inc    ecx
  422426:	pop    esp
  422427:	jmp    0x64f84424
  42242c:	jno    0x422447
  42242e:	mov    ch,0xfe
  422430:	cmp    dh,ah
  422432:	cdq    
  422433:	lods   eax,DWORD PTR ds:[esi]
  422434:	add    eax,0x3cabe983
  422439:	mov    dh,BYTE PTR [esi-0x5b]
  42243c:	(bad)  
  42243d:	lock adc DWORD PTR ss:[ebp+0x0],esi
	...
  4224b2:	add    BYTE PTR [eax],al
  4224b4:	(bad)  
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x16799f7c
  4224c2:	adc    bh,BYTE PTR [ecx]
  4224c4:	outs   dx,BYTE PTR ds:[si]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [esi+0x61],bl
  4224ce:	push   esi
  4224cf:	ret    
  4224d0:	cwde   
  4224d1:	mov    eax,ds:0xdf6e03e3
  4224d6:	mov    edx,0x36ef89bd
  4224db:	sbb    DWORD PTR [ebx-0x5d328645],ebp
  4224e1:	xor    eax,0x65915fc6
  4224e6:	or     DWORD PTR [edi+ebx*8-0x48],ecx
  4224ea:	cmp    esi,esp
  4224ec:	lds    ecx,FWORD PTR [edx]
  4224ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ef:	mov    bl,BYTE PTR [eax+0x54]
  4224f2:	rcr    DWORD PTR [ecx],1
  4224f4:	outs   dx,DWORD PTR ds:[esi]
  4224f5:	jbe    0x422562
  4224f7:	sub    DWORD PTR [edi+ebp*8-0x1fe1e336],edx
  4224fe:	retf   
  4224ff:	test   DWORD PTR [edx-0x7f4fd2d0],edx
  422505:	lods   al,BYTE PTR ds:[esi]
  422506:	mov    ebx,DWORD PTR [edx-0x40]
  422509:	dec    edx
  42250a:	rcr    BYTE PTR [esi+0x76b60c27],cl
  422510:	std    
  422511:	bound  edi,QWORD PTR [ebx]
  422513:	out    0xd7,al
  422515:	cmp    eax,0xaadc741e
  42251a:	fst    DWORD PTR [edx]
  42251c:	bound  esi,QWORD PTR [ebp+0x70e9d38]
  422522:	fstp   DWORD PTR [esi+0x63096562]
  422528:	outs   dx,BYTE PTR ds:[esi]
  422529:	stos   BYTE PTR es:[edi],al
  42252a:	jmp    0x7440:0x4a8fe9d8
  422531:	sub    al,0xb
  422533:	cmp    eax,0x1b09ac08
  422538:	xlat   BYTE PTR ds:[ebx]
  422539:	rol    BYTE PTR [edx+0x41471d77],0x5
  422540:	xor    BYTE PTR [edx],0x77
  422543:	dec    edx
  422544:	push   cs
  422545:	in     al,dx
  422546:	mov    esi,0x2a8b56d4
  42254b:	ins    DWORD PTR es:[edi],dx
  42254c:	push   ds
  42254d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42254e:	in     eax,0x1c
  422550:	not    edx
  422552:	jno    0x4224e3
  422554:	add    edx,DWORD PTR [eax+0x40]
  422557:	or     BYTE PTR [ecx+ebp*2-0x53],al
  42255b:	(bad)  
  42255c:	mov    al,0xed
  42255e:	jp     0x4225dc
  422560:	xor    cl,bl
  422562:	outs   dx,BYTE PTR ds:[esi]
  422563:	pop    ecx
  422564:	scas   eax,DWORD PTR es:[edi]
  422565:	xor    eax,0xeb4c54e9
  42256a:	push   esi
  42256b:	pop    ss
  42256c:	int    0x4c
  42256e:	jns    0x42251d
  422570:	mov    ecx,0x2d703ed0
  422575:	addr16 loope 0x422595
  422578:	les    edi,FWORD PTR [edi+ebx*8]
  42257b:	shl    BYTE PTR [ecx+0x6cb7d533],0x26
  422582:	sub    BYTE PTR [ebx-0x69],al
  422585:	pop    edx
  422586:	xchg   DWORD PTR [edi-0x68],esi
  422589:	cmp    eax,0x5cf69c1d
  42258e:	xchg   ebx,eax
  42258f:	bound  ebx,QWORD PTR [esi]
  422591:	outs   dx,BYTE PTR ds:[esi]
  422592:	sahf   
  422593:	pop    ds
  422594:	add    al,0x26
  422596:	pop    es
  422597:	add    DWORD PTR [ecx-0x241e7120],ecx
  42259d:	retf   0x98e1
  4225a0:	mov    eax,ds:0x9468ab18
  4225a5:	outs   dx,DWORD PTR ds:[esi]
  4225a6:	sub    BYTE PTR [eax+0x1f59a57a],cl
  4225ac:	clc    
  4225ad:	jmp    0x8a42:0x58b900b4
  4225b4:	gs push esi
  4225b6:	xlat   BYTE PTR ds:[ebx]
  4225b7:	pusha  
  4225b8:	clc    
  4225b9:	aad    0x80
  4225bb:	lods   eax,DWORD PTR ds:[esi]
  4225bc:	ins    DWORD PTR es:[edi],dx
  4225bd:	push   edx
  4225be:	enter  0x727f,0x0
	...
  422632:	add    BYTE PTR [eax],al
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	xchg   esi,eax
  422641:	xor    ecx,DWORD PTR [edi+0x74]
  422644:	pop    esp
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [esi-0x4cffe44b],bl
  422651:	in     al,0x13
  422653:	das    
  422654:	cmp    BYTE PTR [ecx-0x57],ah
  422657:	inc    esp
  422658:	into   
  422659:	cdq    
  42265a:	test   DWORD PTR [esi+ecx*2],0xb717719d
  422661:	mov    edx,0xce28ecb0
  422666:	mov    DWORD PTR [eax],esp
  422668:	xchg   ecx,eax
  422669:	jg     0x422666
  42266b:	popf   
  42266c:	jl     0x422642
  42266e:	push   ebp
  42266f:	fdiv   QWORD PTR [esi+0x42]
  422672:	out    dx,al
  422673:	repz mov ecx,0x50b061fd
  422679:	scas   eax,DWORD PTR es:[edi]
  42267a:	ret    0x9618
  42267d:	jbe    0x42265a
  42267f:	xor    DWORD PTR [ecx+ebp*8+0x38],esi
  422683:	xlat   BYTE PTR ds:[ebx]
  422684:	daa    
  422685:	sub    esi,ecx
  422687:	addr16 je 0x422706
  42268a:	in     al,0x1
  42268c:	inc    ebp
  42268d:	adc    edx,edx
  42268f:	popf   
  422690:	pop    edx
  422691:	popf   
  422692:	gs sub al,0xef
  422695:	mov    dh,0x8d
  422697:	xchg   esi,eax
  422698:	je     0x42270c
  42269a:	lea    ebp,[esi+0x32]
  42269d:	push   esi
  42269e:	fcompp 
  4226a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a1:	cs retf 
  4226a3:	mov    ebp,eax
  4226a5:	shl    edi,0x35
  4226a8:	les    esp,FWORD PTR [esi]
  4226aa:	fnstsw WORD PTR [edi+0x72]
  4226ad:	loop   0x4226b4
  4226af:	vpmaddwd xmm4,xmm5,XMMWORD PTR [edi-0x5d71176a]
  4226b7:	lods   eax,DWORD PTR ds:[esi]
  4226b8:	outs   dx,BYTE PTR ds:[esi]
  4226b9:	add    DWORD PTR [ebx-0x442ec0c0],edi
  4226bf:	and    bh,BYTE PTR [ebx]
  4226c1:	and    BYTE PTR [esi],dl
  4226c3:	data16 sbb dh,BYTE PTR [edi]
  4226c6:	push   0xffffffca
  4226c8:	push   es
  4226c9:	mov    eax,ds:0xf0e419d4
  4226ce:	push   0x2a
  4226d0:	jge    0x422688
  4226d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d3:	pop    ebp
  4226d4:	pop    ebx
  4226d5:	or     ch,BYTE PTR [eax+0x53]
  4226d8:	mov    eax,ds:0x23288d21
  4226dd:	add    al,0x74
  4226df:	in     al,dx
  4226e0:	pusha  
  4226e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e2:	inc    edx
  4226e3:	inc    ecx
  4226e4:	js     0x42274a
  4226e6:	lahf   
  4226e7:	pop    ds
  4226e8:	xor    esp,edi
  4226ea:	bound  ecx,QWORD PTR [esi-0x3]
  4226ed:	scas   al,BYTE PTR es:[edi]
  4226ee:	ret    0xefb8
  4226f1:	imul   ecx,esp,0x8
  4226f4:	gs jge 0x422731
  4226f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f8:	js     0x4226b0
  4226fa:	test   eax,0x7e7ac6d1
  4226ff:	pop    esp
  422700:	and    BYTE PTR [esi-0x26],0xe5
  422704:	addr16 or eax,0xe137e054
  42270a:	and    eax,0xc41b40e3
  42270f:	cmc    
  422710:	shr    BYTE PTR [esi],1
  422712:	and    al,0xb0
  422714:	pop    es
  422715:	cli    
  422716:	pop    ecx
  422717:	or     ebx,DWORD PTR [ebx+0x7]
  42271a:	popa   
  42271b:	sub    BYTE PTR [ecx],bl
  42271d:	fs nop
  42271f:	push   0x79
  422721:	push   esi
  422722:	mov    ch,0x4
  422724:	or     esp,ebx
  422726:	jbe    0x42275d
  422728:	(bad)  
  422729:	pusha  
  42272a:	cli    
  42272b:	adc    ecx,DWORD PTR [eax+0x45]
  42272e:	mov    ebx,0x9cfd0703
  422733:	ins    DWORD PTR es:[edi],dx
  422734:	dec    ecx
  422735:	lods   al,BYTE PTR ds:[esi]
  422736:	out    0x80,eax
  422738:	aam    0x43
  42273a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42273b:	in     al,0xe2
  42273d:	sub    ah,BYTE PTR [ebx]
  42273f:	push   edi
  422740:	add    DWORD PTR [eax],0x0
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227c1:	xor    eax,0x705100c9
  4227c6:	add    DWORD PTR [eax],eax
  4227c8:	cmc    
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [ebp-0x3d],ch
  4227ce:	cld    
  4227cf:	(bad)  
  4227d0:	fiadd  DWORD PTR [eax+0x39]
  4227d3:	and    dh,dh
  4227d5:	mov    ecx,0x23629641
  4227da:	je     0x422798
  4227dc:	cmp    al,BYTE PTR ds:0x19120843
  4227e2:	(bad)  
  4227e3:	out    0xb8,eax
  4227e5:	(bad)  
  4227e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e7:	add    BYTE PTR [ebp+0x1ec54700],bl
  4227ed:	sbb    eax,0x6e16ee4b
  4227f2:	jmp    0x520:0x7b379223
  4227f9:	adc    eax,0x2a849645
  4227fe:	fdivr  st,st(3)
  422800:	fild   QWORD PTR [ebx+0x464a3ba]
  422806:	ss call 0xd874cd8e
  42280c:	cs dec ebp
  42280e:	mov    ecx,0xf03f7925
  422813:	cs cld 
  422815:	popa   
  422816:	pop    ds
  422817:	retf   
  422818:	repnz enter 0xa228,0x1
  42281d:	sbb    cl,BYTE PTR [ebp-0x14]
  422820:	jae    0x4227d3
  422822:	push   eax
  422823:	push   ss
  422824:	or     dl,BYTE PTR [ecx-0x2f1ac6e7]
  42282a:	pop    ds
  42282b:	mov    edx,0xe53a736d
  422830:	push   esi
  422831:	sub    BYTE PTR [esi-0x75],al
  422834:	jmp    FWORD PTR [ebx+0x1476bd13]
  42283a:	xchg   ebp,eax
  42283b:	rcr    DWORD PTR [esi-0x1e10de1c],cl
  422841:	loop   0x422849
  422843:	sbb    bh,BYTE PTR [edi-0x8]
  422846:	add    eax,0xe4a92327
  42284b:	pop    edi
  42284c:	popa   
  42284d:	or     BYTE PTR [ecx-0x5d7c208b],0x65
  422854:	xchg   esp,eax
  422855:	out    0x7f,al
  422857:	jne    0x4228d4
  422859:	sub    dh,BYTE PTR [edx]
  42285b:	dec    edx
  42285c:	call   0xcb1:0xfb71c850
  422863:	or     ebx,DWORD PTR [edx-0x35]
  422866:	push   esp
  422867:	(bad)  
  422868:	fs sahf 
  42286a:	mov    ?,WORD PTR [eax]
  42286c:	ret    0x8673
  42286f:	jp     0x422891
  422871:	and    BYTE PTR [ebx-0x80],al
  422874:	xor    bh,cl
  422876:	stos   BYTE PTR es:[edi],al
  422877:	pusha  
  422878:	rcl    BYTE PTR [ecx+0x68a146f5],cl
  42287e:	and    BYTE PTR [ebx-0x4dfb4089],0x4
  422885:	lea    eax,[ebx+0x55071350]
  42288b:	and    al,0xad
  42288d:	mov    bh,0x59
  42288f:	jo     0x422864
  422891:	daa    
  422892:	dec    esi
  422893:	dec    eax
  422894:	xor    al,0xa6
  422896:	mov    eax,ds:0x1c2a787e
  42289b:	sbb    dh,al
  42289d:	xchg   ebp,eax
  42289e:	les    esi,FWORD PTR [eax+ebp*8+0x6efa3fd8]
  4228a5:	(bad)  
  4228a6:	add    edx,DWORD PTR [esi+0x1c]
  4228a9:	daa    
  4228aa:	cld    
  4228ab:	sbb    DWORD PTR [ebp+0x7e],esp
  4228ae:	xor    ah,BYTE PTR [eax]
  4228b0:	pop    ds
  4228b1:	jmp    0xc4cf:0x60b6f601
  4228b8:	dec    edx
  4228b9:	inc    ecx
  4228ba:	mov    dh,0x82
  4228bc:	push   es
  4228bd:	aad    0x73
  4228bf:	jo     0x422898
	...
  422931:	add    BYTE PTR [eax],al
  422933:	add    dh,bh
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	test   al,0x9f
  422942:	pop    es
  422943:	sub    eax,DWORD PTR [esi+0x71]
  422946:	add    DWORD PTR [eax],eax
  422948:	cmc    
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [edi],bh
  42294d:	sub    DWORD PTR [ebp+ecx*2-0x45],eax
  422951:	add    al,0x8c
  422953:	mov    edx,0x73769f06
  422958:	mov    ebx,DWORD PTR [ebx+0x1e]
  42295b:	scas   al,BYTE PTR es:[edi]
  42295c:	mov    ebp,0x18b929a8
  422961:	out    dx,al
  422962:	mov    BYTE PTR [eax+ecx*1+0x700bc217],dh
  422969:	adc    esp,DWORD PTR [esi-0x37]
  42296c:	cmp    DWORD PTR [edx+ebx*1],edi
  42296f:	push   es
  422970:	push   edx
  422971:	push   es
  422972:	mov    dh,0x72
  422974:	cmp    al,BYTE PTR [edi+0x6da046c8]
  42297a:	push   cs
  42297b:	ins    DWORD PTR es:[edi],dx
  42297c:	and    DWORD PTR [esi-0x1e],esp
  42297f:	lods   eax,DWORD PTR ds:[esi]
  422980:	inc    esi
  422981:	rol    DWORD PTR [ecx+esi*1+0x7fc0adf6],0x1d
  422989:	ja     0x42299a
  42298b:	mov    ds:0xc48ceac1,al
  422990:	icebp  
  422991:	sbb    eax,0x4d8866b9
  422996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422997:	dec    edi
  422998:	scas   al,BYTE PTR es:[edi]
  422999:	add    DWORD PTR [edx-0x453bc21e],eax
  42299f:	mov    dh,0x83
  4229a1:	dec    ebp
  4229a2:	smsw   edi
  4229a5:	sahf   
  4229a6:	pop    ss
  4229a7:	jne    0x422961
  4229a9:	shl    DWORD PTR [esi],cl
  4229ab:	mov    ebx,0x433ce254
  4229b0:	jmp    0xc7f9:0x3d2da74
  4229b7:	mov    eax,0x97e31245
  4229bc:	mov    ds:0x11458bdf,eax
  4229c1:	inc    esi
  4229c2:	ds inc ebx
  4229c4:	daa    
  4229c5:	mov    al,ds:0x9d9ec253
  4229ca:	dec    ebp
  4229cb:	in     eax,dx
  4229cc:	mov    ds:0xa983b8a1,al
  4229d1:	add    cl,dh
  4229d3:	sbb    BYTE PTR [ecx+eiz*2-0x675c8ba1],dl
  4229da:	aaa    
  4229db:	adc    bh,0xd
  4229de:	fld    DWORD PTR [ecx]
  4229e0:	rcl    DWORD PTR [eax+0x2fd22094],cl
  4229e6:	sbb    ah,dh
  4229e8:	pop    ebp
  4229e9:	mov    ebx,0xe91215c4
  4229ee:	int3   
  4229ef:	ret    0xd837
  4229f2:	pop    edx
  4229f3:	mov    BYTE PTR [edi-0x4c],0x21
  4229f7:	test   al,0x99
  4229f9:	shl    BYTE PTR [eax],cl
  4229fb:	and    BYTE PTR [edx+0x61],bh
  4229fe:	jge    0x4229e9
  422a00:	loope  0x422a48
  422a02:	nop
  422a03:	and    edi,DWORD PTR [bp+si+0xf]
  422a07:	dec    edx
  422a08:	shr    DWORD PTR [eax+0x7e],0x9a
  422a0c:	aad    0x26
  422a0e:	adc    eax,DWORD PTR [edx+0x37]
  422a11:	arpl   WORD PTR [edi+eax*8+0x29],di
  422a15:	outs   dx,BYTE PTR ds:[esi]
  422a16:	xchg   ebx,eax
  422a17:	mov    dl,0x5f
  422a19:	das    
  422a1a:	fidivr WORD PTR [edx+0x67eec60e]
  422a20:	icebp  
  422a21:	xchg   esp,eax
  422a22:	inc    esp
  422a23:	push   ds
  422a24:	or     DWORD PTR [ebx],ebx
  422a26:	jo     0x422a81
  422a28:	ret    0x38f1
  422a2b:	test   DWORD PTR gs:[eax+0x42],esi
  422a2f:	mov    esp,0xe1f83a4b
  422a34:	rol    ebx,cl
  422a36:	scas   eax,DWORD PTR es:[edi]
  422a37:	outs   dx,BYTE PTR ds:[esi]
  422a38:	jne    0x422a8f
  422a3a:	rol    BYTE PTR [eax-0x71],0x8
  422a3e:	lock lock xchg edi,eax
	...
  422ab1:	add    BYTE PTR [eax],al
  422ab3:	add    BYTE PTR [esi],dl
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	xchg   bl,bh
  422ac2:	push   ecx
  422ac3:	out    dx,al
  422ac4:	cmp    esi,DWORD PTR [edx+0x1]
  422ac7:	add    ch,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    al,dl
  422acd:	jns    0x422ad0
  422acf:	xor    BYTE PTR [esi+0x6db28b27],ch
  422ad5:	test   BYTE PTR [edx+ecx*1],bl
  422ad8:	ins    DWORD PTR es:[edi],dx
  422ad9:	scas   eax,DWORD PTR es:[edi]
  422ada:	outs   dx,DWORD PTR ds:[esi]
  422adb:	dec    ebx
  422adc:	dec    edi
  422add:	pop    ss
  422ade:	sbb    DWORD PTR [ebp+0x2a45913c],ebp
  422ae4:	out    0x46,eax
  422ae6:	mov    al,ds:0xd415a510
  422aeb:	jb     0x422a74
  422aed:	cmc    
  422aee:	inc    edi
  422aef:	ror    BYTE PTR [edx-0x7843d68d],0xa8
  422af6:	pop    esi
  422af7:	push   es
  422af8:	cmp    BYTE PTR [ecx+eax*1+0x3b94cc0e],0x88
  422b00:	out    0xd,eax
  422b02:	mov    BYTE PTR [edi-0x409973d6],bl
  422b08:	dec    esi
  422b09:	cmp    BYTE PTR [edi+0x32],cl
  422b0c:	mov    edx,DWORD PTR [ebp+eiz*1-0x7871bd7b]
  422b13:	sahf   
  422b14:	sar    edi,1
  422b16:	ds jb  0x422a9d
  422b19:	dec    edx
  422b1a:	inc    ebp
  422b1b:	in     eax,dx
  422b1c:	adc    bh,BYTE PTR [ecx+0xf]
  422b1f:	mov    eax,ds:0x4af9fda0
  422b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b25:	lods   al,BYTE PTR es:[esi]
  422b27:	lods   al,BYTE PTR ds:[esi]
  422b28:	das    
  422b29:	cmp    DWORD PTR [ecx-0x12],ecx
  422b2c:	push   ebx
  422b2d:	gs xchg edx,ebp
  422b30:	jecxz  0x422b64
  422b32:	inc    edx
  422b33:	add    al,0xe1
  422b35:	xchg   BYTE PTR [edx+ecx*8-0x7ed3f4ab],ch
  422b3c:	jmp    0x422b1f
  422b3e:	cs mov esp,0x34009a99
  422b44:	inc    ebp
  422b45:	push   0xb3c8ebbe
  422b4a:	push   ebp
  422b4b:	inc    ecx
  422b4c:	or     esi,DWORD PTR [edx+0x1]
  422b4f:	cmp    BYTE PTR [edi+ebp*1+0x7a],bh
  422b53:	mov    ds:0xbd5542f6,al
  422b58:	(bad)  
  422b5a:	xchg   esi,eax
  422b5b:	push   ds
  422b5c:	sub    eax,0xdd7a822a
  422b61:	sti    
  422b62:	pusha  
  422b63:	pop    ebx
  422b64:	dec    ecx
  422b65:	popa   
  422b66:	jmp    DWORD PTR [esi-0x64]
  422b69:	sbb    BYTE PTR [eax+0x33],dl
  422b6c:	and    BYTE PTR [ebx+0x174a7961],ch
  422b72:	mov    al,0x13
  422b74:	outs   dx,DWORD PTR ds:[esi]
  422b75:	mov    ebx,0x9e3f9e63
  422b7a:	cwde   
  422b7b:	dec    esp
  422b7c:	retf   
  422b7d:	adc    ah,bl
  422b7f:	push   es
  422b80:	test   eax,0x197755f1
  422b85:	loopne 0x422b14
  422b87:	xor    al,0x4a
  422b89:	xchg   edi,eax
  422b8a:	ficomp WORD PTR [edx+0x475622f2]
  422b90:	cmp    eax,0x3f1c6416
  422b95:	arpl   WORD PTR [ecx+0x26a54c57],bx
  422b9b:	ror    BYTE PTR [edi+ecx*2-0x44e41e53],0x13
  422ba3:	inc    ebx
  422ba4:	in     eax,0xaf
  422ba6:	dec    eax
  422ba7:	xor    eax,0x9e68ca3
  422bac:	pop    ss
  422bad:	add    esi,DWORD PTR [eax-0x451b10cf]
  422bb3:	(bad)  
  422bb5:	xchg   DWORD PTR [edx+0x43654684],esp
  422bbb:	ror    edi,cl
  422bbd:	xchg   ebx,eax
  422bbe:	(bad)  
  422bc0:	out    0x0,al
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	xchg   edx,eax
  422c41:	and    dh,BYTE PTR [ebx-0x69]
  422c44:	xor    BYTE PTR [ebx+0x1],dh
  422c47:	add    ch,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    al,ah
  422c4d:	js     0x422c7d
  422c4f:	pop    ebp
  422c50:	icebp  
  422c51:	stos   BYTE PTR es:[edi],al
  422c52:	cmp    ebx,DWORD PTR [esi+eiz*8]
  422c55:	xor    BYTE PTR ds:0x8518f50b,ah
  422c5b:	jecxz  0x422bec
  422c5d:	sub    DWORD PTR [ecx+0x419fc99],esp
  422c63:	aad    0xdd
  422c65:	push   es
  422c66:	mov    DWORD PTR [ebx-0x78],edx
  422c69:	add    ecx,eax
  422c6b:	loop   0x422c03
  422c6d:	fadd   QWORD PTR [ecx]
  422c6f:	inc    edx
  422c70:	add    esi,esi
  422c72:	iret   
  422c73:	nop
  422c74:	pop    ebx
  422c75:	cmp    DWORD PTR ds:0x23c62eda,esi
  422c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c7c:	xchg   ecx,eax
  422c7d:	dec    edi
  422c7e:	ret    
  422c7f:	lahf   
  422c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c81:	xchg   esp,eax
  422c82:	mov    al,0x5
  422c84:	fsub   QWORD PTR [bp+si]
  422c87:	and    BYTE PTR [ebp+0x70fb12d3],dl
  422c8d:	adc    ebx,ebp
  422c8f:	inc    eax
  422c90:	imul   ebp,DWORD PTR [ebx-0x8],0x71f4743d
  422c97:	minps  xmm2,xmm4
  422c9a:	mov    ds:0x76eee60e,al
  422c9f:	add    BYTE PTR [ebx-0x29213fb9],dl
  422ca5:	call   0x8ec3:0x7933658a
  422cac:	mov    edi,0xae8a450c
  422cb1:	out    0xf6,al
  422cb3:	sbb    esi,esp
  422cb5:	add    eax,0x899c5e4e
  422cba:	mov    ecx,0xa0cd6dc9
  422cbf:	jmp    0x422d2d
  422cc1:	mov    ah,BYTE PTR [ebx+0x71]
  422cc4:	pop    esp
  422cc5:	adc    al,0x15
  422cc7:	push   esi
  422cc8:	inc    edi
  422cc9:	mov    esp,0x27bddeb4
  422cce:	sar    DWORD PTR [ebx-0x79],cl
  422cd1:	push   ebx
  422cd2:	sbb    DWORD PTR ds:0xe92ac266,0x5f
  422cd9:	add    esp,DWORD PTR [esi]
  422cdb:	push   0xdf64eea2
  422ce0:	outs   dx,DWORD PTR ds:[esi]
  422ce1:	inc    esi
  422ce2:	xor    BYTE PTR [edx-0x7d],ch
  422ce5:	jne    0x422d66
  422ce7:	sbb    dh,dh
  422ce9:	mov    dl,BYTE PTR [ebx-0x6b]
  422cec:	or     BYTE PTR [eax-0x275a46b6],ch
  422cf2:	or     DWORD PTR [ebx+ebp*2-0x5c3799c7],ebx
  422cf9:	dec    esi
  422cfa:	cli    
  422cfb:	push   edx
  422cfc:	daa    
  422cfd:	ror    bh,1
  422cff:	inc    ebx
  422d00:	repz dec esp
  422d02:	nop
  422d03:	cld    
  422d04:	repnz in eax,dx
  422d06:	xchg   ebx,eax
  422d07:	inc    ecx
  422d08:	(bad)  
  422d09:	out    dx,al
  422d0a:	jg     0x422cbc
  422d0c:	mov    esi,DWORD PTR [eax+edi*8-0x2d]
  422d10:	fiadd  WORD PTR [ebp-0x8]
  422d13:	jecxz  0x422d16
  422d15:	shl    ch,0x2c
  422d18:	inc    esp
  422d19:	popf   
  422d1a:	clc    
  422d1b:	pusha  
  422d1c:	sbb    al,0x37
  422d1e:	cdq    
  422d1f:	jmp    0x6fabb3b0
  422d24:	lds    edx,FWORD PTR [eax+0x62]
  422d27:	pushf  
  422d28:	mov    al,ds:0xaa2ab902
  422d2d:	or     eax,0x840f1dad
  422d32:	cmp    eax,0x94eed5b9
  422d37:	mov    bh,0x23
  422d39:	sbb    eax,0x21712d39
  422d3e:	sti    
  422d3f:	sub    BYTE PTR [ebx+0x0],cl
	...
  422db2:	add    BYTE PTR [eax],al
  422db4:	iret   
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x2420f9f7
  422dc2:	push   ds
  422dc3:	lods   al,BYTE PTR ds:[esi]
  422dc4:	and    eax,0xf5000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    ch,dh
  422dcd:	in     al,dx
  422dce:	adc    ecx,DWORD PTR [esi+0x1e0e5922]
  422dd4:	mov    edi,0x2ed29c28
  422dd9:	mov    eax,ds:0xcc30547b
  422dde:	sbb    al,0xd0
  422de0:	pslld  mm3,mm3
  422de3:	cmp    ebx,DWORD PTR [edx]
  422de5:	cs cdq 
  422de7:	xor    DWORD PTR [edi+0xd],ebp
  422dea:	sub    eax,edi
  422dec:	lahf   
  422ded:	aaa    
  422dee:	repnz (bad) 
  422df0:	xchg   ecx,eax
  422df1:	sub    ch,dl
  422df3:	mov    edi,0x60bbf885
  422df8:	mov    ecx,DWORD PTR [eax-0x54b9fa02]
  422dfe:	aam    0x87
  422e00:	dec    eax
  422e01:	dec    ebp
  422e02:	(bad)  
  422e03:	fld    QWORD PTR [ebp-0x22]
  422e06:	cdq    
  422e07:	push   edi
  422e08:	inc    edi
  422e09:	inc    eax
  422e0b:	and    BYTE PTR ds:0x55f46493,cl
  422e11:	and    eax,0x1a99af05
  422e16:	add    dl,BYTE PTR [ebx+esi*4-0x2a5942df]
  422e1d:	jmp    0x422e92
  422e1f:	inc    eax
  422e20:	xchg   ebx,eax
  422e21:	inc    esp
  422e22:	outs   dx,DWORD PTR ds:[esi]
  422e23:	jmp    0x422da8
  422e25:	fistp  DWORD PTR [eax-0x4311f70a]
  422e2b:	fucomi st,st(0)
  422e2d:	adc    eax,edx
  422e2f:	cmp    BYTE PTR [edi+edi*1],ah
  422e32:	sub    dl,BYTE PTR [ecx]
  422e34:	xor    DWORD PTR [edi+0x6dd991e3],ecx
  422e3a:	or     DWORD PTR [edx+0x58f649a1],0xbfd11143
  422e44:	jl     0x422deb
  422e46:	mov    ch,0xd8
  422e48:	adc    eax,0x8eafb7
  422e4d:	nop
  422e4e:	xor    dl,BYTE PTR [edi-0x15]
  422e51:	jae    0x422e1c
  422e53:	test   BYTE PTR [eax-0x665f1f5b],al
  422e59:	mov    dl,0x9c
  422e5b:	jmp    0x422e5d
  422e5d:	fdiv   DWORD PTR [ecx+0x42509cd4]
  422e63:	loope  0x422e6a
  422e65:	sub    BYTE PTR [esi+0x3df8ae78],al
  422e6b:	nop    ebp
  422e6f:	pop    edi
  422e70:	dec    eax
  422e72:	in     eax,0x72
  422e74:	rol    BYTE PTR [esi],0xe1
  422e77:	push   edx
  422e78:	mov    al,0x5c
  422e7a:	ja     0x422e39
  422e7c:	std    
  422e7d:	mov    eax,0x622973da
  422e82:	jbe    0x422e34
  422e84:	dec    ebp
  422e85:	inc    esi
  422e86:	push   eax
  422e87:	fldenv [edx-0x3e]
  422e8a:	xchg   ebp,eax
  422e8b:	(bad)  
  422e8d:	mov    ds,WORD PTR [edi]
  422e8f:	leave  
  422e90:	jmp    0x422f07
  422e92:	mov    ebx,0x32d3e38b
  422e97:	dec    edi
  422e98:	push   cs
  422e99:	out    dx,al
  422e9a:	mov    edi,0xe152bdba
  422e9f:	repnz push edx
  422ea1:	mov    ah,0xe9
  422ea3:	out    0x44,al
  422ea5:	dec    ecx
  422ea6:	cmp    al,0x61
  422ea8:	test   BYTE PTR [ebp+0x34],0x5
  422eac:	push   ecx
  422ead:	inc    eax
  422eae:	sub    eax,0x99abdb5d
  422eb3:	sahf   
  422eb4:	daa    
  422eb5:	lods   eax,DWORD PTR ds:[esi]
  422eb6:	inc    ebp
  422eb7:	repz xor DWORD PTR ds:0x23d51dab,esp
  422ebe:	or     DWORD PTR [eax-0x5b],esp
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    ch,BYTE PTR fs:[bp+si-0x6666]
  422f43:	imul   ebx,DWORD PTR [edx],0x75
  422f46:	add    DWORD PTR [eax],eax
  422f48:	cmc    
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [edx],ch
  422f4d:	popf   
  422f4e:	fcmovb st,st(3)
  422f50:	dec    edx
  422f51:	or     al,0x41
  422f53:	jge    0x422f68
  422f55:	fisttp WORD PTR [edi+0x23]
  422f58:	pop    esi
  422f59:	int    0x9b
  422f5b:	cmp    cl,ah
  422f5d:	jo     0x422eff
  422f5f:	je     0x422f15
  422f61:	ret    0xc5ce
  422f64:	cli    
  422f65:	xchg   edi,eax
  422f66:	push   0xffffff99
  422f68:	mov    al,ds:0x9f319e10
  422f6d:	mov    ebp,0x430d0bc2
  422f72:	lds    eax,FWORD PTR [edx-0x6ccbbbb2]
  422f78:	add    eax,0xe4afb883
  422f7d:	jbe    0x422fb6
  422f7f:	push   cs
  422f80:	xchg   edx,eax
  422f81:	inc    edi
  422f82:	ss ja  0x422f5b
  422f85:	jo     0x422fdb
  422f87:	xchg   esp,eax
  422f88:	mov    eax,ds:0xae3b17b8
  422f8d:	outs   dx,BYTE PTR ds:[esi]
  422f8e:	xchg   esp,eax
  422f8f:	(bad)  
  422f90:	or     eax,0x58130f7b
  422f95:	ja     0x422fb8
  422f97:	nop
  422f98:	push   esp
  422f99:	outs   dx,BYTE PTR ds:[esi]
  422f9a:	daa    
  422f9b:	mov    esp,0xcb2686d7
  422fa0:	jge    0x422f74
  422fa2:	add    bl,BYTE PTR [ebx+0x18]
  422fa5:	loop   0x423026
  422fa7:	push   eax
  422fa8:	or     BYTE PTR [ebx-0x41],ah
  422fab:	xlat   BYTE PTR ds:[ebx]
  422fac:	shl    DWORD PTR [edi],cl
  422fae:	xchg   ebp,eax
  422faf:	ins    BYTE PTR es:[edi],dx
  422fb0:	dec    ecx
  422fb1:	jmp    0x6e607ef6
  422fb6:	mov    eax,0xaa99422d
  422fbb:	add    BYTE PTR [edx-0x903d0aa],ch
  422fc1:	push   ebp
  422fc2:	mov    bh,0x48
  422fc4:	jmp    0xe44b6701
  422fc9:	sub    DWORD PTR [edx+0x317c3b5f],ecx
  422fcf:	mov    ecx,0xf66faff2
  422fd4:	jp     0x422f71
  422fd6:	and    al,0x78
  422fd8:	mov    cl,0x89
  422fda:	daa    
  422fdb:	or     ebx,DWORD PTR [edi-0x46292936]
  422fe1:	in     al,0x61
  422fe3:	push   edi
  422fe4:	fwait
  422fe5:	push   eax
  422fe6:	ins    DWORD PTR es:[edi],dx
  422fe7:	cmp    al,0x83
  422fe9:	cmp    ebx,edi
  422feb:	loop   0x423057
  422fed:	stos   DWORD PTR es:[edi],eax
  422fee:	lods   eax,DWORD PTR ds:[esi]
  422fef:	lods   al,BYTE PTR ds:[esi]
  422ff0:	aas    
  422ff1:	repz pop ss
  422ff3:	rcl    DWORD PTR [eax],cl
  422ff5:	push   cs
  422ff6:	xor    ch,BYTE PTR [ecx]
  422ff8:	aas    
  422ff9:	push   ds
  422ffa:	sub    BYTE PTR [esi+0x65],ch
  422ffd:	sti    
  422ffe:	mov    edx,DWORD PTR [ebx-0x4972f343]
  423004:	push   0xffffffbe
  423006:	(bad)  
  423007:	pop    edi
  423008:	xor    BYTE PTR [ebp-0x3dec8c9d],0xb7
  42300f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423010:	in     eax,dx
  423011:	lods   eax,DWORD PTR ds:[esi]
  423012:	daa    
  423013:	ins    BYTE PTR es:[edi],dx
  423014:	enter  0xbbae,0x5e
  423018:	adc    al,0x3b
  42301a:	shr    BYTE PTR [edx+0x4059926],0x84
  423021:	sbb    esp,eax
  423023:	xchg   esi,eax
  423024:	(bad)  
  423025:	nop
  423026:	fiadd  DWORD PTR [esi-0x4871accb]
  42302c:	ja     0x42305a
  42302e:	cwde   
  42302f:	bound  ebx,QWORD PTR [ecx]
  423031:	popf   
  423032:	fstp   st(5)
  423034:	sub    edx,DWORD PTR [edx-0x6af61945]
  42303a:	add    BYTE PTR [ebp+0x22],bh
  42303d:	arpl   WORD PTR [edi+edx*1+0x5],dx
	...
  4230b1:	add    BYTE PTR [eax],al
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	f2xm1  
  4230c2:	ret    
  4230c3:	push   eax
  4230c4:	pcmpeqd mm0,QWORD PTR [ecx]
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [ebx],cl
  4230cd:	sbb    al,0x92
  4230cf:	dec    edx
  4230d0:	enter  0x254a,0xf0
  4230d4:	jb     0x423102
  4230d6:	push   esp
  4230d7:	push   ebx
  4230d8:	cmp    BYTE PTR [edx+0x70],al
  4230db:	pop    edi
  4230dc:	add    BYTE PTR [edi],cl
  4230de:	adc    ebp,DWORD PTR ds:0x24a58ff0
  4230e4:	aad    0x32
  4230e6:	adc    ah,BYTE PTR [ecx*8-0x456ae571]
  4230ed:	stc    
  4230ee:	retf   0xbee9
  4230f1:	and    eax,0x4abd7fb
  4230f6:	jbe    0x423125
  4230f8:	or     ebp,DWORD PTR [edi+ebx*4+0x7675302a]
  4230ff:	sahf   
  423100:	xchg   BYTE PTR [ebx-0x74],cl
  423103:	popa   
  423104:	mov    esp,0x2d59228f
  423109:	xor    BYTE PTR [ebp+0x75],bh
  42310c:	clc    
  42310d:	and    cl,cl
  42310f:	push   0x13ad9485
  423114:	ror    BYTE PTR [edi+0x600e37ec],1
  42311a:	push   ds
  42311b:	fnsave [esi-0x5079f481]
  423121:	and    esp,DWORD PTR [ecx-0x31]
  423124:	jno    0x4230e0
  423126:	arpl   WORD PTR [eax+ebx*1],sp
  423129:	mov    al,ds:0x8412544d
  42312e:	add    ah,ch
  423130:	arpl   WORD PTR [esi+0x6450d0e9],bx
  423136:	retf   
  423137:	dec    edx
  423138:	cli    
  423139:	inc    esi
  42313a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42313b:	cmp    DWORD PTR [ebx],esp
  42313d:	lahf   
  42313e:	and    edi,DWORD PTR ds:0xe6a993c5
  423144:	xlat   BYTE PTR ds:[ebx]
  423145:	xchg   esi,eax
  423146:	jb     0x423168
  423148:	jbe    0x42318c
  42314a:	lea    ebx,[ebx-0x316b8545]
  423150:	or     al,0x21
  423152:	sahf   
  423153:	inc    edi
  423154:	xor    al,0x72
  423156:	xor    al,0x6d
  423158:	inc    ebx
  423159:	pushf  
  42315a:	stos   BYTE PTR es:[edi],al
  42315b:	jp     0x4231c8
  42315d:	sbb    BYTE PTR [edi+eiz*4+0x54b2e140],ah
  423164:	or     BYTE PTR [ecx-0x3884a701],0xde
  42316b:	jae    0x4231ba
  42316d:	push   ds
  42316e:	add    DWORD PTR [ebx-0x5],ebx
  423171:	popa   
  423172:	imul   esp,edi,0x75
  423175:	in     eax,dx
  423176:	mov    ebp,0xee3b56df
  42317b:	add    BYTE PTR [ebp-0x5d8e1647],dl
  423181:	inc    eax
  423182:	cmp    al,0x41
  423184:	jmp    0x423153
  423186:	call   0x884f:0xd149da0c
  42318d:	pop    esp
  42318e:	pop    ecx
  42318f:	inc    esp
  423190:	or     cl,cl
  423192:	pop    eax
  423193:	aad    0x8e
  423195:	sahf   
  423196:	imul   DWORD PTR [esi+edx*2-0x25]
  42319a:	mov    eax,ds:0xdb2c9766
  42319f:	mov    fs,WORD PTR [ebx+esi*4]
  4231a2:	loopne 0x4231e3
  4231a4:	into   
  4231a5:	mov    bh,0xd2
  4231a7:	imul   edx,esi,0x3a
  4231aa:	sub    al,0x31
  4231ac:	rcl    BYTE PTR [ebp-0x59],1
  4231af:	mov    esp,ebx
  4231b1:	sbb    ebp,DWORD PTR [eax]
  4231b3:	sbb    DWORD PTR [ebx-0x3d2b8fe0],ecx
  4231b9:	jns    0x42317f
  4231bb:	enter  0x2a4a,0xf8
  4231bf:	(bad)  
  4231c0:	adc    al,BYTE PTR [eax]
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x81936db0
  423243:	outs   dx,DWORD PTR ds:[esi]
  423244:	add    al,0x77
  423246:	add    DWORD PTR [eax],eax
  423248:	cmc    
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [eax+0x373487a4],ch
  423251:	(bad)  [ecx+ebp*2+0x3fadc27d]
  423258:	add    edx,eax
  42325a:	xchg   DWORD PTR [esi+edx*4+0xd],eax
  42325e:	pop    ecx
  42325f:	out    dx,al
  423260:	xor    eax,0x850765f9
  423265:	mov    ecx,0x49225852
  42326a:	xor    al,0x36
  42326c:	sub    BYTE PTR [eax+0x48],dl
  42326f:	xor    al,0x58
  423271:	(bad)  
  423272:	enter  0x9da7,0xb9
  423276:	(bad)  
  423277:	jecxz  0x42324f
  423279:	and    edx,esi
  42327b:	xor    BYTE PTR [esi+0x76],bl
  42327e:	mov    ah,bl
  423280:	mov    ch,0xa7
  423282:	mov    ah,0xf
  423284:	mov    WORD PTR [edx+ebp*2-0x5c],ss
  423288:	jmp    0x5240:0x46d8ac4c
  42328f:	iret   
  423290:	outs   dx,DWORD PTR ds:[esi]
  423291:	pop    ebp
  423292:	inc    esp
  423293:	adc    dl,BYTE PTR [edx+0x7e]
  423296:	neg    BYTE PTR [ecx]
  423298:	(bad)
  42329b:	ins    DWORD PTR es:[edi],dx
  42329c:	xchg   ecx,eax
  42329d:	test   BYTE PTR [esi+0x7d],ah
  4232a0:	or     BYTE PTR [eax+0x14],0x3b
  4232a4:	sub    eax,0xdba6843c
  4232a9:	(bad)  
  4232aa:	push   eax
  4232ab:	lahf   
  4232ac:	inc    ebx
  4232ad:	cmp    DWORD PTR [edi+eiz*8-0x6d6d23ff],ebx
  4232b4:	scas   al,BYTE PTR es:[edi]
  4232b5:	xor    eax,0x4236ead4
  4232ba:	or     bh,bh
  4232bc:	movzx  ebx,bx
  4232bf:	jno    0x42330c
  4232c1:	cmp    dh,BYTE PTR [eax+0x2037db94]
  4232c7:	jecxz  0x423266
  4232c9:	add    ch,BYTE PTR [edx-0x34dc6282]
  4232cf:	or     DWORD PTR [esi-0x63a232c4],edx
  4232d5:	sbb    al,0x77
  4232d7:	scas   al,BYTE PTR es:[edi]
  4232d8:	stc    
  4232d9:	lods   al,BYTE PTR ds:[esi]
  4232da:	dec    ecx
  4232db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232dc:	jge    0x42331e
  4232de:	in     al,0xe5
  4232e0:	test   eax,0xc97e3b5c
  4232e5:	cs dec edx
  4232e7:	xchg   ch,bl
  4232e9:	jnp    0x4232ee
  4232eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ec:	in     al,dx
  4232ed:	jp     0x423297
  4232ef:	sbb    BYTE PTR [ebx+0x25790e8b],0x27
  4232f6:	dec    esi
  4232f7:	fprem1 
  4232f9:	nop
  4232fa:	xchg   ebp,eax
  4232fb:	inc    ecx
  4232fc:	mov    ecx,0x3d8fcdd6
  423301:	arpl   WORD PTR [eax-0x50],di
  423304:	cmc    
  423305:	ror    DWORD PTR [ebx],cl
  423307:	inc    edi
  423308:	int    0x98
  42330a:	push   edx
  42330b:	inc    ebp
  42330c:	pmulhuw mm5,QWORD PTR [edi]
  42330f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423310:	dec    edi
  423311:	shr    DWORD PTR [ecx+0x3e7a74ff],0x7f
  423318:	popa   
  423319:	push   eax
  42331a:	xor    cl,BYTE PTR [ebx-0x348d0099]
  423320:	lods   eax,DWORD PTR ds:[esi]
  423321:	cmp    BYTE PTR [ebx],bh
  423323:	xchg   BYTE PTR [eax+0x6fd35f43],bh
  423329:	sub    al,0xde
  42332b:	das    
  42332c:	or     eax,esp
  42332e:	jmp    0x406f:0xfbc261f0
  423335:	inc    ebp
  423336:	and    DWORD PTR [ecx-0x786d0cf9],0xffffff8d
  42333d:	sub    ebx,DWORD PTR [ecx+0x947e]
	...
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0xdec78e4a
  4233c2:	jnp    0x42334d
  4233c4:	stc    
  4233c5:	ja     0x4233c8
  4233c7:	add    ch,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    dl,al
  4233cd:	iret   
  4233ce:	xor    al,0x47
  4233d0:	int3   
  4233d1:	jecxz  0x4233f9
  4233d3:	lods   eax,DWORD PTR ds:[esi]
  4233d4:	int3   
  4233d5:	imul   ebp,DWORD PTR [edx-0x1196cb69],0x2c
  4233dc:	push   ss
  4233dd:	scas   eax,DWORD PTR es:[edi]
  4233de:	push   ss
  4233df:	mov    al,ds:0x64ee8bd6
  4233e4:	jg     0x4233a1
  4233e6:	xor    DWORD PTR [esi-0x44],ecx
  4233e9:	loop   0x423427
  4233eb:	mul    DWORD PTR [ebx-0x100936e3]
  4233f1:	sbb    BYTE PTR [edi+0x47],0xb
  4233f5:	ss lahf 
  4233f7:	repnz test DWORD PTR [edi+ecx*1-0x2fb9bd17],edx
  4233ff:	ret    0x1830
  423402:	jns    0x42347d
  423404:	xor    al,0xbc
  423406:	rcl    BYTE PTR [esi+esi*4+0x6394f252],1
  42340d:	inc    edx
  42340e:	xor    al,0xee
  423410:	pop    esp
  423411:	rol    DWORD PTR gs:[eax+eiz*2-0x6e6a6f1],1
  423419:	dec    edi
  42341a:	sahf   
  42341b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42341c:	jp     0x423400
  42341e:	imul   ecx,DWORD PTR [ebx+0x2e],0x13
  423422:	shl    ebp,1
  423424:	icebp  
  423425:	pop    ds
  423426:	retf   0x8ad3
  423429:	pushf  
  42342a:	dec    eax
  42342b:	fadd   st,st(5)
  42342d:	popa   
  42342e:	out    dx,al
  42342f:	sar    DWORD PTR [esi-0x64ddcf17],1
  423435:	sub    edi,DWORD PTR [ecx-0xd]
  423438:	sti    
  423439:	xor    ecx,edi
  42343b:	push   0x42
  42343d:	cmp    ch,BYTE PTR [ecx]
  42343f:	push   0x32
  423441:	inc    ebx
  423442:	(bad)  
  423443:	fnsave [eax+0x21404c29]
  423449:	out    dx,al
  42344a:	adc    ebx,eax
  42344c:	dec    eax
  42344d:	cmp    BYTE PTR [ecx-0x6],ah
  423450:	xor    eax,0x214787dd
  423455:	jnp    0xc5b9f2c5
  42345b:	jge    0x423474
  42345d:	out    0x89,al
  42345f:	scas   al,BYTE PTR es:[edi]
  423460:	stc    
  423461:	test   DWORD PTR [ebp+0x0],eax
  423464:	in     eax,0x12
  423466:	xlat   BYTE PTR ds:[ebx]
  423467:	gs mov ecx,0xf4b20f1b
  42346d:	and    BYTE PTR [ecx+0x3e],dl
  423470:	mov    ebx,0x70321880
  423475:	ror    DWORD PTR [ebx-0x5013be9],cl
  42347b:	sar    BYTE PTR [eax],cl
  42347d:	mov    ch,0xd2
  42347f:	clc    
  423480:	test   BYTE PTR [ecx-0x58],dl
  423483:	dec    ecx
  423484:	into   
  423485:	leave  
  423486:	cmc    
  423487:	adc    DWORD PTR [ebx+0x66],edi
  42348a:	into   
  42348b:	int    0x7b
  42348d:	mov    ch,0x4
  42348f:	xor    eax,0x7944a952
  423494:	mov    dl,0x66
  423496:	cli    
  423497:	xor    BYTE PTR [edi+0x107e5439],bl
  42349d:	add    DWORD PTR [ebp-0x3c],ebp
  4234a0:	out    dx,al
  4234a1:	les    esp,FWORD PTR [esp+ecx*1]
  4234a4:	adc    BYTE PTR [edx],bh
  4234a6:	pop    es
  4234a7:	(bad)  [edi+0x3c]
  4234aa:	addr16 xor ebp,eax
  4234ad:	jo     0x4234ca
  4234af:	jb     0x42349e
  4234b1:	push   ecx
  4234b2:	push   cs
  4234b3:	ss aas 
  4234b5:	adc    eax,edx
  4234b7:	scas   al,BYTE PTR es:[edi]
  4234b8:	fadd   QWORD PTR [ecx+ebp*4+0x32]
  4234bc:	push   edi
  4234bd:	std    
  4234be:	or     DWORD PTR [eax+ecx*8+0x0],esp
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x2a
  423541:	sub    bh,BYTE PTR ds:0x178ee5b
  423547:	add    ch,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [edi-0x55],bh
  42354e:	xchg   DWORD PTR [ecx+eiz*2+0x6f],eax
  423552:	(bad)  
  423553:	jns    0x42356b
  423555:	adc    al,0x53
  423557:	dec    edx
  423558:	outs   dx,BYTE PTR ds:[esi]
  423559:	and    al,0x2a
  42355b:	jp     0x423564
  42355d:	jns    0x4235bb
  42355f:	ret    
  423560:	test   al,0x34
  423562:	mov    ebp,0x87d6a81b
  423567:	cs ret 0xd75b
  42356b:	jmp    0xff03824f
  423570:	push   es
  423571:	lds    edi,FWORD PTR [ecx]
  423573:	mov    al,0xc2
  423575:	sub    DWORD PTR [ebp-0x3d11b919],edi
  42357b:	lods   al,BYTE PTR ds:[esi]
  42357c:	mov    edx,DWORD PTR [ebp-0x2d]
  42357f:	clc    
  423580:	sbb    ah,dl
  423582:	je     0x423546
  423584:	jmp    0x4a6c:0xc4863bac
  42358b:	inc    ebx
  42358c:	add    eax,0x552b34a0
  423591:	push   ds
  423592:	cmp    al,0x37
  423594:	(bad)  
  423596:	xchg   edi,eax
  423597:	cli    
  423598:	scas   eax,DWORD PTR es:[edi]
  423599:	outs   dx,BYTE PTR ds:[esi]
  42359a:	fistp  DWORD PTR [ebx-0x4a]
  42359d:	push   ebp
  42359e:	jmp    0x9dc3:0x6edc5c64
  4235a5:	iret   
  4235a6:	(bad)  
  4235a7:	push   esi
  4235a8:	sub    esp,DWORD PTR ds:0x4148b88b
  4235ae:	fwait
  4235af:	mov    edx,0x8d3a471c
  4235b4:	cmc    
  4235b5:	pop    es
  4235b6:	jno    0x4235dc
  4235b8:	mov    ds:0xee9e62bc,al
  4235bd:	push   ebp
  4235be:	popa   
  4235bf:	lods   al,BYTE PTR ds:[esi]
  4235c0:	add    edx,DWORD PTR [ebp+0x48]
  4235c3:	push   esi
  4235c4:	nop
  4235c5:	xchg   esp,eax
  4235c6:	and    ch,0x46
  4235c9:	mov    bl,0xc4
  4235cb:	cld    
  4235cc:	shr    BYTE PTR [esi-0x56cfc3a8],1
  4235d2:	mov    ah,0xbb
  4235d4:	xchg   ecx,esp
  4235d6:	add    al,0x55
  4235d8:	fmul   DWORD PTR [ecx-0xd]
  4235db:	pop    ds
  4235dc:	xchg   ebx,eax
  4235dd:	add    al,0xbc
  4235df:	inc    ecx
  4235e0:	ins    BYTE PTR es:[edi],dx
  4235e1:	mov    bl,0x52
  4235e3:	pop    edx
  4235e4:	xor    ebp,DWORD PTR [edx-0x7316387f]
  4235ea:	(bad)  
  4235eb:	stos   BYTE PTR es:[edi],al
  4235ec:	inc    edx
  4235ed:	sub    ch,ah
  4235ef:	inc    esi
  4235f0:	enter  0x3251,0x8c
  4235f4:	mov    ds:0xc54e678f,eax
  4235f9:	xor    edi,ebp
  4235fb:	mov    edx,esp
  4235fd:	gs loopne 0x423609
  423600:	retf   0x295f
  423603:	sub    DWORD PTR [ebx-0x261eed36],eax
  423609:	sbb    edx,DWORD PTR [edi]
  42360b:	mov    eax,ds:0x454d228a
  423610:	sub    BYTE PTR [ecx-0x1c],cl
  423613:	retf   
  423614:	lods   al,BYTE PTR ds:[esi]
  423615:	push   edi
  423616:	add    BYTE PTR [ebp+0xb],dh
  423619:	das    
  42361a:	scas   eax,DWORD PTR es:[edi]
  42361b:	rcr    DWORD PTR [edx-0x7],cl
  42361e:	cwde   
  42361f:	push   0xb215a64c
  423624:	cwde   
  423625:	cdq    
  423626:	jp     0x423678
  423628:	pop    edx
  423629:	mov    eax,0x3d476bb9
  42362e:	mov    eax,fs
  423630:	mov    esi,0x14289016
  423635:	jl     0x4235fb
  423637:	imul   edi,DWORD PTR [ecx],0xfffffff0
  42363a:	int3   
  42363b:	pushf  
  42363c:	das    
  42363d:	das    
  42363e:	pop    edx
  42363f:	popa   
  423640:	mov    eax,DWORD PTR [eax]
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm5,QWORD PTR [ebp-0x1c5d9c27]
  4236c5:	jns    0x4236c8
  4236c7:	add    ch,dh
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [ecx-0xa],ah
  4236ce:	rcr    DWORD PTR [edi],1
  4236d0:	jge    0x4236a0
  4236d2:	bound  edi,QWORD PTR [ecx]
  4236d4:	xchg   edi,eax
  4236d5:	mov    ch,0xb1
  4236d7:	sbb    al,0xa9
  4236d9:	pop    ebp
  4236da:	test   eax,0x6369e2bf
  4236df:	xor    ebx,DWORD PTR [esi-0x54]
  4236e2:	rcr    DWORD PTR [ebp+0xff7614a],0xd1
  4236e9:	push   ecx
  4236ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236eb:	gs pop ss
  4236ed:	sbb    BYTE PTR [ecx-0x7776932f],bh
  4236f3:	jg     0x423695
  4236f5:	dec    edx
  4236f6:	es cli 
  4236f8:	push   esp
  4236f9:	lds    edi,FWORD PTR ds:[ebx]
  4236fc:	dec    ebp
  4236fd:	loope  0x423728
  4236ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423700:	into   
  423701:	cmp    al,0xbc
  423703:	jp     0x42372d
  423705:	imul   esi,DWORD PTR [edx+ecx*2+0x1e236d34],0x4f
  42370d:	dec    ebx
  42370e:	jmp    0x4236bb
  423710:	and    BYTE PTR [esi],cl
  423712:	and    cl,BYTE PTR [ebx-0x39]
  423715:	(bad)  
  423716:	sahf   
  423717:	add    eax,0x8077ada2
  42371c:	sub    ah,BYTE PTR [ebp-0x2bb0f184]
  423722:	out    dx,eax
  423723:	push   0xee773ff3
  423728:	clc    
  423729:	ja     0x4236b9
  42372b:	shl    DWORD PTR [ecx+0x69],0x4d
  42372f:	loop   0x4236e7
  423731:	cwde   
  423732:	fdiv   st,st(0)
  423734:	aas    
  423735:	out    dx,al
  423736:	xchg   DWORD PTR [ecx],ecx
  423738:	pop    ebp
  423739:	mov    ch,0xcf
  42373b:	stos   BYTE PTR es:[edi],al
  42373c:	mov    eax,ds:0xf5fbf1b7
  423741:	xchg   ebp,eax
  423742:	jge    0x423706
  423744:	sbb    edi,esp
  423746:	cmp    eax,DWORD PTR [esi]
  423748:	pop    edi
  423749:	adc    al,0xed
  42374b:	or     edi,DWORD PTR [edi+0x10341787]
  423751:	sbb    DWORD PTR [ebp+0x696eddb5],ebp
  423757:	(bad)  
  423758:	sbb    DWORD PTR [eax],ebp
  42375a:	gs dec ebx
  42375c:	aaa    
  42375d:	popa   
  42375e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42375f:	push   0xffffffde
  423761:	pop    esp
  423762:	loope  0x423783
  423764:	icebp  
  423765:	mov    eax,DWORD PTR [ebx+esi*4-0x4c]
  423769:	push   ebx
  42376a:	loop   0x42371d
  42376c:	push   esp
  42376d:	xor    DWORD PTR ds:0x75c8e8cc,esp
  423773:	je     0x42379d
  423775:	fistp  QWORD PTR [esi+0x74]
  423778:	ins    DWORD PTR es:[edi],dx
  423779:	xlat   BYTE PTR ds:[ebx]
  42377a:	inc    edx
  42377b:	jne    0x423710
  42377d:	xchg   esi,eax
  42377e:	push   ebx
  42377f:	in     eax,0x4d
  423781:	popf   
  423782:	adc    edx,DWORD PTR [edi+0x28]
  423785:	mov    eax,0x45a8179e
  42378a:	xchg   esp,eax
  42378b:	in     eax,dx
  42378c:	pop    esi
  42378d:	jne    0x42380b
  42378f:	imul   esi,DWORD PTR [edx],0x16
  423792:	adc    eax,0x588b0c54
  423797:	cli    
  423798:	fcmove st,st(0)
  42379a:	and    al,0x5
  42379c:	inc    esi
  42379d:	xor    edx,DWORD PTR [edx]
  42379f:	in     eax,0x21
  4237a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237a2:	addr16 pop ds
  4237a4:	xor    cl,BYTE PTR [edx]
  4237a6:	(bad)  
  4237a7:	mov    eax,0xb907893c
  4237ac:	enter  0xe4e9,0x30
  4237b0:	(bad)  
  4237b1:	cmp    BYTE PTR [ebx],ch
  4237b3:	inc    esi
  4237b4:	push   ebx
  4237b5:	mov    ah,0x0
  4237b7:	dec    esp
  4237b8:	push   edi
  4237b9:	cwde   
  4237ba:	push   0x75
  4237bc:	mov    ebp,0x5935c48e
	...
  423831:	add    BYTE PTR [eax],al
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	popf   
  423841:	out    dx,eax
  423842:	jo     0x4237e8
  423844:	fdivr  DWORD PTR [edx+0x1]
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [ecx-0x61],al
  42384e:	std    
  42384f:	xchg   ebx,eax
  423850:	data16 (bad) 
  423852:	mov    bl,0x80
  423854:	data16 in al,0x8d
  423857:	(bad)  
  423858:	stos   DWORD PTR es:[edi],eax
  423859:	dec    ebp
  42385a:	cli    
  42385b:	adc    edi,DWORD PTR [esi-0x16013b00]
  423861:	jp     0x423878
  423863:	cmp    DWORD PTR [ebx-0x37],esi
  423866:	es sahf 
  423868:	das    
  423869:	repz and eax,0x9dc6125
  42386f:	repz and al,0xe8
  423872:	xchg   BYTE PTR [edi],al
  423874:	mov    ebp,0x99f3947c
  423879:	outs   dx,DWORD PTR ds:[esi]
  42387a:	ror    BYTE PTR [esp+edx*4-0x71],1
  42387e:	enter  0xc1fd,0x21
  423882:	push   ss
  423883:	xchg   ebp,eax
  423884:	pop    ebp
  423885:	sbb    ebx,DWORD PTR [esi]
  423887:	push   ss
  423888:	xor    dh,BYTE PTR [ebx]
  42388a:	shl    eax,1
  42388c:	sbb    al,0x38
  42388e:	int3   
  42388f:	(bad)  
  423890:	call   0x8775b7e3
  423895:	sbb    eax,0xdac8617d
  42389a:	jl     0x423822
  42389c:	neg    BYTE PTR [ecx]
  42389e:	push   0xffffffba
  4238a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238a1:	inc    esi
  4238a2:	addr16 jge 0x423892
  4238a5:	jne    0x4238d3
  4238a7:	int    0x48
  4238a9:	jg     0x423849
  4238ab:	je     0x42387c
  4238ad:	fstp   DWORD PTR [edi+ecx*1-0x2]
  4238b1:	aad    0xda
  4238b3:	or     ah,BYTE PTR [eax+eiz*4-0x58869429]
  4238ba:	or     ecx,DWORD PTR [esi+esi*1+0x1d]
  4238be:	push   eax
  4238bf:	dec    esp
  4238c0:	or     al,dl
  4238c2:	mov    eax,0x6697e75f
  4238c7:	mov    esi,0x12ba8454
  4238cc:	mov    edi,0x1db747bb
  4238d1:	outs   dx,DWORD PTR ds:[esi]
  4238d2:	xchg   ebp,eax
  4238d3:	bound  ebp,QWORD PTR [eax]
  4238d5:	mov    eax,ds:0x2d223d68
  4238da:	in     al,dx
  4238db:	dec    edx
  4238dc:	int3   
  4238dd:	bound  esp,QWORD PTR [ebx+0x2dc068a8]
  4238e3:	imul   edi,DWORD PTR [edx],0xffffffcc
  4238e6:	dec    BYTE PTR [ebp+0x4a63884b]
  4238ec:	outs   dx,DWORD PTR ds:[esi]
  4238ed:	inc    edi
  4238ee:	dec    ecx
  4238ef:	scas   al,BYTE PTR es:[edi]
  4238f0:	pop    ss
  4238f1:	fwait
  4238f2:	add    al,0x88
  4238f4:	mov    ah,0x70
  4238f6:	aad    0x0
  4238f8:	shl    edi,1
  4238fa:	rcl    ebp,1
  4238fc:	push   es
  4238fd:	inc    ebx
  4238fe:	stos   DWORD PTR es:[edi],eax
  4238ff:	xor    esp,DWORD PTR [ebx+0x3]
  423902:	jae    0x42391c
  423904:	jmp    0x3fe3:0xec397479
  42390b:	mov    ?,WORD PTR [eax+0x742b5cf2]
  423911:	jae    0x4238db
  423913:	add    BYTE PTR [eax],al
  423915:	in     eax,dx
  423916:	stc    
  423917:	sbb    DWORD PTR [ecx],edx
  423919:	pop    ds
  42391a:	push   edi
  42391b:	ret    0x8b07
  42391e:	push   bx
  423920:	jmp    0x3cd9:0x5b27d36e
  423927:	cmp    al,0x54
  423929:	retf   
  42392a:	sub    al,0x67
  42392c:	je     0x4238be
  42392e:	sbb    bl,ah
  423930:	or     eax,0x1158bf28
  423935:	retf   
  423936:	cdq    
  423937:	mov    ebx,0x1c43dbaa
  42393c:	mov    ds:0xded9626c,al
	...
  4239b1:	add    BYTE PTR [eax],al
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    eax,cs
  4239c1:	retf   0x9500
  4239c4:	int    0x7b
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	cmc    
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [edx-0x4b1d5c36],dl
  4239d1:	add    BYTE PTR [eax-0x57],0x2b
  4239d5:	imul   eax,ebp,0xffffffed
  4239d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239d9:	mov    esp,0xc1d61cfc
  4239de:	jl     0x423a11
  4239e0:	sahf   
  4239e1:	and    BYTE PTR [ecx],ah
  4239e3:	fistp  WORD PTR [esi+0x1e]
  4239e6:	or     eax,DWORD PTR [esi+0x38c8f7e0]
  4239ec:	mov    ch,0x8d
  4239ee:	sbb    dh,BYTE PTR [edx-0x2e]
  4239f1:	jne    0x423a65
  4239f3:	xchg   edx,eax
  4239f4:	or     DWORD PTR [eax-0x58],esp
  4239f7:	xchg   edi,eax
  4239f8:	or     esi,DWORD PTR [eax-0x5f]
  4239fb:	jno    0x4239d4
  4239fd:	mov    ah,BYTE PTR [esi]
  4239ff:	adc    al,0xe7
  423a01:	pop    ecx
  423a02:	mov    ah,0xa5
  423a04:	push   eax
  423a05:	ret    
  423a06:	in     eax,dx
  423a07:	fwait
  423a08:	inc    BYTE PTR [edi]
  423a0a:	jp     0x423a6a
  423a0c:	mov    ecx,0x4660551d
  423a11:	mov    ah,0xe4
  423a13:	es push edx
  423a15:	shr    BYTE PTR [edx],cl
  423a17:	mov    eax,0x29cd9a91
  423a1c:	pop    ss
  423a1d:	xchg   ebx,eax
  423a1e:	sbb    ebx,DWORD PTR ds:[edi]
  423a21:	jno    0x423a32
  423a23:	in     al,0x7f
  423a25:	bound  ebx,QWORD PTR [ebx+0x2b]
  423a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a29:	xchg   esi,eax
  423a2a:	iret   
  423a2b:	stos   DWORD PTR es:[edi],eax
  423a2c:	and    al,ch
  423a2e:	pop    ss
  423a2f:	push   0x42
  423a31:	mov    bh,0x1f
  423a33:	adc    DWORD PTR [esi+0x4cc09964],0xecf38b8a
  423a3d:	dec    eax
  423a3e:	mov    dh,0x33
  423a40:	in     eax,0xd7
  423a42:	sub    ch,bl
  423a44:	cmp    DWORD PTR [edi+ecx*1-0x1b611a5c],ebp
  423a4b:	in     al,dx
  423a4c:	jno    0x423a67
  423a4e:	sbb    BYTE PTR [esi],al
  423a50:	dec    esi
  423a51:	push   esi
  423a52:	push   esp
  423a53:	rcl    dh,1
  423a55:	or     BYTE PTR [ecx-0x2],ch
  423a58:	popf   
  423a59:	xchg   edi,eax
  423a5a:	pop    ds
  423a5b:	fidiv  WORD PTR fs:[ecx+0x30146e46]
  423a62:	jge    0x423a3e
  423a64:	scas   al,BYTE PTR es:[edi]
  423a65:	fdiv   DWORD PTR [edx]
  423a67:	daa    
  423a68:	maxps  xmm4,XMMWORD PTR [ebx-0x36]
  423a6c:	stos   DWORD PTR es:[edi],eax
  423a6d:	and    esi,eax
  423a6f:	and    al,0x16
  423a71:	inc    ebx
  423a72:	rol    BYTE PTR [ecx+edx*8],1
  423a75:	xchg   edx,eax
  423a76:	popf   
  423a77:	nop
  423a78:	imul   ecx,DWORD PTR [ebx+0x2f],0xdfa069e0
  423a7f:	add    al,0x3c
  423a81:	push   es
  423a82:	xchg   ecx,eax
  423a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a84:	scas   eax,DWORD PTR es:[edi]
  423a85:	(bad)  
  423a86:	fmul   DWORD PTR [ebp-0x11e58a3e]
  423a8c:	cmp    DWORD PTR [edi],ecx
  423a8e:	rcr    DWORD PTR [ebx-0x34f9bbb1],0xa0
  423a95:	retf   0xc204
  423a98:	loop   0x423a47
  423a9a:	push   ss
  423a9b:	(bad)  
  423a9c:	lea    eax,es:[eax+0x73]
  423aa0:	lds    esi,FWORD PTR [eax-0x7062bb44]
  423aa6:	fucomip st,st(4)
  423aa8:	retf   0xa50
  423aab:	aas    
  423aac:	push   edx
  423aad:	sti    
  423aae:	inc    esi
  423aaf:	outs   dx,DWORD PTR ds:[esi]
  423ab0:	frstor [ebp+ebx*2-0x6f2840]
  423ab7:	aad    0x32
  423ab9:	mov    ebp,0xa314e65f
  423abe:	or     esp,0xa9
	...
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x93
  423b41:	push   eax
  423b42:	pop    ss
  423b43:	mov    dl,0x7c
  423b46:	add    DWORD PTR [eax],eax
  423b48:	cmc    
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR ds:0x33b5525c,dl
  423b51:	add    bl,bl
  423b53:	mov    ah,0x68
  423b55:	push   edx
  423b56:	inc    ebp
  423b57:	push   ebp
  423b58:	shl    DWORD PTR [edx],cl
  423b5a:	(bad)  
  423b5b:	fisttp QWORD PTR [ebx-0x3a609f0e]
  423b61:	stos   DWORD PTR es:[edi],eax
  423b62:	mov    WORD PTR [ebp-0x58],ds
  423b65:	inc    ebx
  423b66:	lods   al,BYTE PTR ds:[esi]
  423b67:	push   cs
  423b68:	push   ss
  423b69:	xor    al,0x19
  423b6b:	ret    0x4218
  423b6e:	jae    0x423b70
  423b70:	xchg   ebp,eax
  423b71:	jo     0x31fcf6a1
  423b77:	outs   dx,BYTE PTR ds:[esi]
  423b78:	and    eax,0x777ce17d
  423b7d:	imul   edi,DWORD PTR [ebx-0x376fa538],0xffffff8a
  423b84:	cmp    al,ah
  423b86:	xchg   ebx,eax
  423b87:	xchg   edi,eax
  423b88:	adc    eax,0x99dcf32e
  423b8d:	xchg   esi,eax
  423b8e:	mov    al,ds:0xcea1e865
  423b93:	jle    0x423baf
  423b95:	outs   dx,BYTE PTR ds:[esi]
  423b96:	ins    DWORD PTR es:[edi],dx
  423b97:	clc    
  423b98:	in     al,dx
  423b99:	cld    
  423b9a:	push   ecx
  423b9b:	pop    eax
  423b9c:	aaa    
  423b9d:	jbe    0x423b2d
  423b9f:	xor    dh,BYTE PTR [ebx-0x1d]
  423ba2:	shl    BYTE PTR [ecx+0x34],cl
  423ba5:	and    BYTE PTR [ebp+0x695b186a],dl
  423bab:	push   ds
  423bac:	in     al,0x6f
  423bae:	dec    edi
  423baf:	out    0x9a,al
  423bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bb2:	dec    eax
  423bb3:	pop    eax
  423bb4:	aaa    
  423bb5:	call   0x3bde:0x6582bb6
  423bbc:	dec    esi
  423bbd:	(bad)  
  423bbe:	pop    edi
  423bbf:	addr16 inc esi
  423bc1:	push   esp
  423bc2:	adc    al,0x6d
  423bc4:	(bad)  
  423bc5:	push   esi
  423bc6:	ret    
  423bc7:	mov    eax,0x5fafbf62
  423bcc:	repnz idiv DWORD PTR [edi]
  423bcf:	stos   BYTE PTR es:[edi],al
  423bd0:	push   edi
  423bd1:	int    0xd7
  423bd3:	sbb    edx,DWORD PTR ds:0x9941b0e3
  423bd9:	push   ebp
  423bda:	add    esi,DWORD PTR ds:0xf71a238c
  423be0:	fdiv   DWORD PTR [edx]
  423be2:	fiadd  WORD PTR [ebp-0x4f552255]
  423be8:	cmc    
  423be9:	sbb    esp,DWORD PTR [edx+ebx*4+0x5e]
  423bed:	mov    ?,WORD PTR [eax]
  423bef:	mov    edi,0xcbcec935
  423bf4:	xor    BYTE PTR [ebp+0x73051a13],bl
  423bfa:	jecxz  0x423bd9
  423bfc:	cdq    
  423bfd:	scas   al,BYTE PTR es:[edi]
  423bfe:	cwde   
  423bff:	jle    0xee5f223f
  423c05:	test   BYTE PTR ds:0x658566ad,al
  423c0b:	imul   edx,DWORD PTR [edx+0x68017819],0xfffffff0
  423c12:	mov    ds:0x3044dca5,al
  423c17:	push   0xf4bde42c
  423c1c:	xor    ebp,DWORD PTR [edx-0x3863a5c8]
  423c22:	out    0xbd,eax
  423c24:	pop    esp
  423c25:	retf   0xed15
  423c28:	bound  eax,QWORD PTR [ecx-0x69efa08d]
  423c2e:	and    al,0x33
  423c30:	add    al,0x5
  423c32:	outs   dx,BYTE PTR ds:[esi]
  423c33:	jge    0x423bb5
  423c35:	and    eax,0x70a46cf5
  423c3a:	dec    ebx
  423c3b:	pop    ebp
  423c3c:	xchg   ebx,eax
  423c3d:	mov    cl,0x53
  423c3f:	pop    ecx
  423c40:	test   DWORD PTR [eax],eax
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xada,0x0
  423cc3:	mov    esi,0x17db7
  423cc8:	cmc    
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [edx+eax*8-0x40],cl
  423ccf:	shl    DWORD PTR [ecx],cl
  423cd1:	xor    ebp,DWORD PTR [ecx+0x6e581601]
  423cd7:	mov    ah,0xda
  423cd9:	ins    BYTE PTR es:[edi],dx
  423cda:	je     0x423d5a
  423cdc:	mov    ah,0x14
  423cde:	lock add BYTE PTR [ebp+0x2e],0xe0
  423ce3:	mov    dh,ch
  423ce5:	imul   ecx,ebp,0xee3d567b
  423ceb:	add    DWORD PTR [ebx],ebx
  423ced:	rcl    BYTE PTR [edi-0x3a],0x64
  423cf1:	jecxz  0x423d55
  423cf3:	xor    ebp,DWORD PTR [esi+ebp*2]
  423cf6:	(bad)  
  423cf7:	jecxz  0x423d4c
  423cf9:	into   
  423cfa:	dec    ebp
  423cfb:	inc    esp
  423cfc:	leave  
  423cfd:	dec    eax
  423cfe:	ja     0x423d7a
  423d00:	inc    eax
  423d01:	fistp  DWORD PTR [ebp+0x6232aaa1]
  423d07:	dec    ecx
  423d08:	jno    0x423ca7
  423d0a:	mov    ds:0x1ca091e9,al
  423d0f:	xchg   ebx,eax
  423d10:	daa    
  423d11:	call   0xacb7:0x41764caf
  423d18:	push   ebp
  423d19:	inc    esi
  423d1a:	sub    al,0x31
  423d1c:	pop    eax
  423d1d:	mov    WORD PTR ds:0xa85cff1b,fs
  423d23:	clc    
  423d24:	pop    esp
  423d25:	and    esi,DWORD PTR [edi-0x66]
  423d28:	scas   eax,DWORD PTR es:[edi]
  423d29:	out    0x3b,al
  423d2b:	hlt    
  423d2c:	mov    WORD PTR [ecx+0x6b0ebac1],ds
  423d32:	jbe    0x423d6b
  423d34:	jmp    0x423d04
  423d36:	xchg   ebx,eax
  423d37:	add    eax,0x5617ae3d
  423d3c:	xchg   ecx,eax
  423d3d:	je     0x423d2c
  423d3f:	add    BYTE PTR [ecx],bl
  423d41:	jo     0x423d29
  423d43:	call   FWORD PTR [edi]
  423d45:	push   0xffffffd7
  423d47:	sbb    eax,0xd6935281
  423d4c:	and    esi,DWORD PTR [edx+0x4b]
  423d4f:	pop    edi
  423d50:	dec    ecx
  423d51:	stc    
  423d52:	or     ecx,DWORD PTR [ebx-0x781dced6]
  423d58:	xor    ebx,DWORD PTR [edx]
  423d5a:	add    edx,ecx
  423d5c:	test   al,0x52
  423d5e:	xchg   DWORD PTR [ecx+edx*2],edi
  423d61:	addr16 mov al,0x46
  423d64:	icebp  
  423d65:	scas   al,BYTE PTR es:[edi]
  423d66:	mov    eax,ds:0x168ac278
  423d6b:	add    eax,0x746f5273
  423d70:	and    DWORD PTR [esi],esi
  423d72:	test   BYTE PTR [ecx-0x7a],ah
  423d75:	je     0x423df6
  423d77:	mov    ebx,0x740cc585
  423d7c:	xor    BYTE PTR [edx+0x7e],al
  423d7f:	xchg   edx,eax
  423d80:	in     al,0xe4
  423d82:	repnz cmp esp,DWORD PTR [ecx-0x141668de]
  423d89:	sbb    al,0xb
  423d8b:	sbb    BYTE PTR [edi+eiz*1-0x5da5daa8],dl
  423d92:	pop    esp
  423d93:	jns    0x423de4
  423d95:	xchg   DWORD PTR [eax-0x23],ecx
  423d98:	cmp    al,0xa
  423d9a:	scas   al,BYTE PTR es:[edi]
  423d9b:	lock (bad) 
  423d9d:	mov    al,ds:0x8f9edb44
  423da2:	jo     0x423d85
  423da4:	imul   ebx,DWORD PTR [ebp-0x7220f85c],0x1628bb11
  423dae:	sbb    dl,BYTE PTR [ebp+0x7ec4fcf8]
  423db4:	dec    esp
  423db5:	jmp    0xc1cf:0x8ffea2d7
  423dbc:	in     eax,dx
  423dbd:	repz mov ecx,0xe354
	...
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	dec    ebp
  423e41:	mov    bl,0x9c
  423e43:	mov    al,0xac
  423e45:	jle    0x423e48
  423e47:	add    ch,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [ecx-0x3c],bl
  423e4e:	test   eax,0x79a2035
  423e53:	xchg   BYTE PTR [ebx*4-0x5fc9f8bd],ah
  423e5a:	sbb    al,0xc4
  423e5c:	aas    
  423e5d:	sub    DWORD PTR [eax+0x75],0x7e
  423e61:	in     eax,0x40
  423e63:	lods   eax,DWORD PTR ds:[esi]
  423e64:	daa    
  423e65:	rcl    DWORD PTR [ecx+0x16],1
  423e68:	ret    0xc3c7
  423e6b:	xchg   ebx,esi
  423e6d:	push   ebp
  423e6e:	push   0xffffffd5
  423e70:	xchg   edx,eax
  423e71:	aaa    
  423e72:	mov    ds:0x232157f1,eax
  423e77:	and    DWORD PTR [edx+0x2c21fe66],esp
  423e7d:	fdivr  QWORD PTR [eax-0x1fad884f]
  423e83:	push   ebp
  423e84:	mov    bh,BYTE PTR [esi]
  423e86:	js     0x423eb8
  423e88:	pusha  
  423e89:	push   ds
  423e8a:	add    ch,BYTE PTR [ebx-0x7ab420b5]
  423e90:	xchg   edx,eax
  423e91:	mov    ds:0xd2ff4cf3,al
  423e96:	or     dh,ch
  423e98:	lds    esp,FWORD PTR [edi]
  423e9a:	mov    eax,ds:0x3fe89658
  423e9f:	pusha  
  423ea0:	jne    0x423eb9
  423ea2:	inc    ebx
  423ea3:	les    eax,FWORD PTR [ecx-0x5ee53de1]
  423ea9:	test   eax,0x709171a6
  423eae:	sub    al,0x4e
  423eb0:	or     edi,DWORD PTR [ebx]
  423eb2:	cwde   
  423eb3:	or     dl,BYTE PTR [edi]
  423eb5:	inc    edi
  423eb6:	mov    ds:0x44bbfe9c,eax
  423ebb:	pop    edx
  423ebc:	stc    
  423ebd:	in     eax,dx
  423ebe:	lock popa 
  423ec0:	mov    ecx,0x37d4d9c0
  423ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ec6:	sbb    DWORD PTR [ebp+0x4e4c51d9],edi
  423ecc:	ja     0x423ea3
  423ece:	sbb    DWORD PTR [ebp+0x32],ecx
  423ed1:	cdq    
  423ed2:	mov    al,0xe0
  423ed4:	ins    BYTE PTR es:[edi],dx
  423ed5:	dec    esp
  423ed6:	jbe    0x423e6c
  423ed8:	pop    ds
  423ed9:	das    
  423eda:	iret   
  423edb:	imul   edi,DWORD PTR [edx-0x555f969b],0x13746be2
  423ee5:	xlat   BYTE PTR ds:[ebx]
  423ee6:	in     al,0xc
  423ee8:	mov    al,0xd9
  423eea:	push   esp
  423eeb:	aaa    
  423eec:	dec    ebp
  423eed:	adc    eax,0x4b7bf327
  423ef2:	sbb    edi,eax
  423ef4:	leave  
  423ef5:	out    0xf4,al
  423ef7:	aad    0xa7
  423ef9:	in     eax,dx
  423efa:	cmp    DWORD PTR [esi-0x74],0x1fcf50c7
  423f01:	dec    edx
  423f02:	test   BYTE PTR [ebp-0x50883e3a],ah
  423f08:	stos   BYTE PTR es:[edi],al
  423f09:	mov    edi,0xfb9173cc
  423f0e:	mov    ds:0x69055753,eax
  423f13:	mov    ebp,0x34a51602
  423f18:	mov    cl,0xdf
  423f1a:	push   eax
  423f1b:	mov    eax,ds:0x45bfeab
  423f20:	mov    cl,0x97
  423f22:	leave  
  423f23:	popf   
  423f24:	(bad)  
  423f25:	leave  
  423f26:	xchg   ecx,eax
  423f27:	arpl   WORD PTR [eax+0x32cf0747],bx
  423f2d:	xchg   ecx,eax
  423f2e:	xlat   BYTE PTR ds:[ebx]
  423f2f:	xchg   esp,eax
  423f30:	dec    ecx
  423f31:	add    al,0x12
  423f33:	sub    ebx,esp
  423f35:	mov    edx,0xdb2475ac
  423f3a:	cmp    DWORD PTR [edi],esi
  423f3c:	push   ss
  423f3d:	inc    edi
  423f3e:	dec    esi
  423f3f:	lods   eax,DWORD PTR ds:[esi]
  423f40:	hlt    
	...
  423fb1:	add    BYTE PTR [eax],al
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0x45],dh
  423fc1:	mov    al,0x8
  423fc3:	ins    DWORD PTR es:[edi],dx
  423fc4:	mov    eax,ds:0xf500017f
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    dl,ah
  423fcd:	sbb    al,0x65
  423fcf:	retf   0xfda1
  423fd2:	sbb    BYTE PTR ds:0xb3f2fbe1,bh
  423fd8:	int3   
  423fd9:	mov    cl,0x7c
  423fdb:	xor    BYTE PTR [ebx+ebx*2-0x23fd1bc0],cl
  423fe2:	jl     0x42404c
  423fe4:	fist   DWORD PTR [eax]
  423fe6:	in     eax,dx
  423fe7:	stc    
  423fe8:	imul   edi,ebp,0x5e7bb58d
  423fee:	dec    edx
  423fef:	mov    al,0x4a
  423ff1:	pop    eax
  423ff2:	add    bh,0x1b
  423ff5:	fsubr  QWORD PTR [edx]
  423ff7:	rol    BYTE PTR [eax+0x59],1
  423ffa:	lahf   
  423ffb:	(bad)  
  423ffc:	fst    QWORD PTR [ecx+0xed07a9a]
  424002:	sub    BYTE PTR [edx],ch
  424004:	mul    DWORD PTR [edi]
  424006:	nop
  424007:	cmp    dl,dh
  424009:	dec    edx
  42400a:	push   esi
  42400b:	ds mov edi,0xc9d9985
  424011:	in     eax,dx
  424012:	jl     0x424005
  424014:	inc    edx
  424015:	sub    eax,esi
  424017:	neg    DWORD PTR [ebx-0x5063a3f6]
  42401d:	jmp    0x423ff2
  42401f:	pop    ss
  424020:	xchg   edx,eax
  424021:	lods   al,BYTE PTR ds:[esi]
  424022:	lock hlt 
  424024:	es int 0xdf
  424027:	enter  0x6670,0x3d
  42402b:	out    0xd4,eax
  42402d:	xchg   ebx,eax
  42402e:	cs xchg edi,eax
  424030:	jmp    0x424091
  424032:	and    eax,DWORD PTR [esi-0x29ecd7f]
  424038:	fisubr DWORD PTR [esi+0x52]
  42403b:	xlat   BYTE PTR ds:[ebx]
  42403c:	ror    DWORD PTR [edi-0x5f3da7c0],cl
  424042:	jp     0x42408e
  424044:	sbb    DWORD PTR [ebx+0x6cdbeee5],edx
  42404a:	xchg   esi,eax
  42404b:	dec    ebp
  42404c:	ror    edx,cl
  42404e:	jno    0x42405f
  424050:	dec    ebx
  424051:	in     al,0xc5
  424053:	and    eax,0x2205fcf1
  424058:	mov    ebp,esp
  42405a:	jmp    0x11e523e4
  42405f:	mov    eax,0x9183f14
  424064:	xor    esi,DWORD PTR [esi+eiz*2]
  424067:	mov    ah,0x83
  424069:	mov    ds:0x7ad6e9da,al
  42406e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42406f:	mov    WORD PTR [ebx],fs
  424071:	push   0xffffff8d
  424073:	pop    ecx
  424074:	dec    ecx
  424075:	cwde   
  424076:	add    eax,0x6b1f194e
  42407b:	stc    
  42407c:	nop
  42407d:	arpl   WORD PTR [edi+0xa],cx
  424080:	pop    ds
  424081:	or     al,0xbe
  424083:	pop    eax
  424084:	into   
  424085:	call   0x46ba68be
  42408a:	jo     0x424049
  42408c:	mov    ah,0xbf
  42408e:	out    0x5e,al
  424090:	mov    al,fs:0xc21021f6
  424096:	mov    ch,0x5b
  424098:	out    dx,al
  424099:	clc    
  42409a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42409b:	sbb    eax,0x5f5d6c07
  4240a0:	fidiv  WORD PTR [ebp+0xeeb6ba6]
  4240a6:	scas   eax,DWORD PTR es:[edi]
  4240a7:	inc    ecx
  4240a8:	fadd   DWORD PTR [ebp-0x2c298937]
  4240ae:	gs cmc 
  4240b0:	adc    ebx,edx
  4240b2:	sbb    BYTE PTR [ecx+edi*2],0xb1
  4240b6:	jecxz  0x42405f
  4240b8:	imul   eax,ebx,0x2e3e2491
  4240be:	mov    cl,0x14
  4240c0:	retf   0x0
	...
  424133:	add    BYTE PTR [ecx-0xf],bh
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x76af7b6a]
  424142:	push   ss
  424143:	(bad)  
  424144:	xchg   esi,eax
  424145:	add    BYTE PTR [ecx],0x0
  424148:	cmc    
  424149:	add    BYTE PTR [eax],al
  42414b:	add    cl,al
  42414d:	sub    al,0xc
  42414f:	pop    ebp
  424150:	aam    0x80
  424152:	shl    DWORD PTR [ecx],1
  424154:	mov    eax,ds:0xf3c6a1d9
  424159:	hlt    
  42415a:	lahf   
  42415b:	jg     0x424129
  42415d:	push   ss
  42415e:	mov    al,ds:0x5cdc898c
  424163:	es or  ebx,esp
  424166:	lods   al,BYTE PTR ds:[esi]
  424167:	inc    edx
  424168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424169:	loope  0x424163
  42416b:	cmp    al,0x1
  42416e:	lods   al,BYTE PTR ds:[esi]
  42416f:	mov    ecx,0xc09b5c1f
  424174:	aaa    
  424175:	rol    esp,cl
  424177:	mov    edi,ebp
  424179:	sbb    cl,al
  42417b:	push   ebx
  42417c:	jno    0x424165
  42417e:	neg    BYTE PTR [ecx+ebp*2+0xb2056ee]
  424185:	cdq    
  424186:	fwait
  424187:	and    al,0xfa
  424189:	repnz call 0x3c5e:0x840ad62d
  424191:	aam    0xce
  424193:	ja     0x4241c2
  424195:	xchg   edx,eax
  424196:	outs   dx,BYTE PTR ds:[esi]
  424197:	cmp    bl,BYTE PTR [ebx]
  424199:	or     al,BYTE PTR [eax-0x37487d7b]
  42419f:	retf   0xe212
  4241a2:	test   BYTE PTR [edi+0x51fd8c5d],cl
  4241a8:	pop    ebx
  4241a9:	shl    BYTE PTR [esi],0x60
  4241ac:	loope  0x4241e1
  4241ae:	mov    BYTE PTR [esi-0x31],al
  4241b1:	popa   
  4241b2:	jb     0x42418a
  4241b4:	push   ss
  4241b5:	fs repnz push 0xffffffea
  4241b9:	adc    DWORD PTR [ebx-0x66],0xffffff8a
  4241bd:	cmp    edi,edi
  4241bf:	fcomi  st,st(0)
  4241c1:	in     al,0x72
  4241c3:	dec    esp
  4241c4:	sti    
  4241c5:	inc    eax
  4241c6:	loope  0x424156
  4241c8:	cmp    al,BYTE PTR [eax-0x65e7823b]
  4241ce:	jmp    0x4c1d:0x2e8ecb9c
  4241d5:	mov    ?,WORD PTR [edi-0x4c5a4f89]
  4241db:	aam    0x65
  4241dd:	sti    
  4241de:	cs call 0x877bf263
  4241e4:	dec    ebx
  4241e5:	adc    al,BYTE PTR [ebx-0x60f4ec11]
  4241eb:	(bad)  
  4241ed:	icebp  
  4241ee:	sub    DWORD PTR [ecx-0x1e],ebp
  4241f1:	jmp    DWORD PTR [eax]
  4241f3:	bound  edi,QWORD PTR [edx-0x64]
  4241f6:	xchg   esi,eax
  4241f7:	pop    ecx
  4241f8:	jno    0x424229
  4241fa:	addr16 pop esp
  4241fc:	mov    ds:0xa434a167,eax
  424201:	jl     0x4241e6
  424203:	sbb    eax,0x4334e310
  424208:	jae    0x424232
  42420a:	ins    BYTE PTR es:[edi],dx
  42420b:	xor    esp,esi
  42420d:	pop    es
  42420e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42420f:	cdq    
  424210:	jle    0x4241af
  424212:	xchg   esp,eax
  424213:	inc    ebx
  424214:	add    eax,0x7da5418c
  424219:	cmp    bh,BYTE PTR [ebx+0x2e7d9327]
  42421f:	fwait
  424220:	sahf   
  424221:	jno    0x424219
  424223:	into   
  424224:	cld    
  424225:	dec    esi
  424226:	or     DWORD PTR [edx],esp
  424228:	imul   edx,edx,0x78b18991
  42422e:	stos   DWORD PTR es:[edi],eax
  42422f:	loope  0x42429e
  424231:	inc    ebp
  424232:	jb     0x424295
  424234:	adc    al,bh
  424236:	sti    
  424237:	mov    bl,0xdc
  424239:	ja     0x424269
  42423b:	sti    
  42423c:	jnp    0x4242a7
  42423e:	mov    bl,0xb4
  424240:	leave  
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x2136a4bf,eax
  4242c2:	(bad)  
  4242c3:	sub    DWORD PTR [ebx-0xafffe7f],ecx
  4242c9:	add    BYTE PTR [eax],al
  4242cb:	add    BYTE PTR [edx-0x20fea8aa],dl
  4242d1:	inc    edi
  4242d2:	jge    0x424254
  4242d4:	(bad)  
  4242d5:	dec    esi
  4242d6:	hlt    
  4242d7:	pop    ds
  4242d8:	(bad)  
  4242d9:	rol    DWORD PTR [edx],0xfa
  4242dc:	mov    ds:0xa05152c3,eax
  4242e1:	push   es
  4242e2:	mov    edx,DWORD PTR [edx-0x6c]
  4242e5:	scas   al,BYTE PTR es:[edi]
  4242e6:	mov    ds:0x670633f,al
  4242eb:	mov    ds:0xf51ff79d,al
  4242f0:	test   DWORD PTR [ebx+0x158f8767],ecx
  4242f6:	mov    cl,0xbf
  4242f8:	jno    0x424315
  4242fa:	adc    eax,0xb67cd2e2
  4242ff:	sbb    ah,bh
  424301:	je     0x424324
  424303:	xchg   BYTE PTR [eax],bh
  424305:	xor    al,0x71
  424307:	das    
  424308:	cmp    BYTE PTR [esi],cl
  42430a:	pop    ds
  42430b:	je     0x424321
  42430d:	mov    eax,ds:0x45cccfa7
  424312:	into   
  424313:	out    dx,al
  424314:	inc    esi
  424315:	mov    BYTE PTR [ebx],bh
  424317:	repnz outs dx,BYTE PTR ds:[esi]
  424319:	fdiv   QWORD PTR [edi-0x6657877a]
  42431f:	les    edi,FWORD PTR [eax+0x5e]
  424322:	push   edx
  424323:	cmp    ebp,DWORD PTR [ebp+0x2f5486b8]
  424329:	mov    cl,0xd6
  42432b:	adc    esi,edi
  42432d:	fldl2e 
  42432f:	(bad)  
  424330:	outs   dx,DWORD PTR ds:[esi]
  424331:	xchg   ecx,eax
  424332:	inc    ebp
  424333:	fmul   DWORD PTR [ebp+ebp*2+0xca433be]
  42433a:	xchg   edx,eax
  42433b:	call   0x678:0xdfb9f844
  424342:	push   ebx
  424343:	sbb    BYTE PTR [esi-0x1a],bl
  424346:	(bad)  
  424347:	sub    DWORD PTR [esi],esp
  424349:	imul   ebp,DWORD PTR [esp+ecx*1],0xffffffac
  42434d:	iret   
  42434e:	test   BYTE PTR [edi],bh
  424350:	std    
  424351:	loope  0x4243b7
  424353:	xchg   ebp,eax
  424354:	push   esp
  424355:	stos   DWORD PTR es:[edi],eax
  424356:	fs sbb eax,0xfb0778a6
  42435c:	das    
  42435d:	in     al,0x9b
  42435f:	xor    ch,bl
  424361:	adc    DWORD PTR [edx+0x45628dc5],ebx
  424367:	shl    BYTE PTR [esi-0x3d],0xf9
  42436b:	stos   BYTE PTR es:[edi],al
  42436c:	cmp    ebp,DWORD PTR [edx+0x2]
  42436f:	aad    0xa9
  424371:	mov    bl,0xfa
  424373:	popa   
  424374:	lea    edx,[ebx]
  424376:	mov    ah,0xc
  424378:	xor    DWORD PTR [eax-0x77],ebx
  42437b:	js     0xfe84bcb4
  424381:	add    edx,DWORD PTR [eax+0x53]
  424384:	sub    BYTE PTR [edx+0x7b6bbc51],al
  42438a:	outs   dx,DWORD PTR ds:[esi]
  42438b:	dec    edi
  42438c:	ja     0x424328
  42438e:	push   edx
  42438f:	mov    ah,0x21
  424391:	gs xchg edi,eax
  424393:	aaa    
  424394:	fs pop edi
  424396:	add    al,BYTE PTR [edx+0x65]
  424399:	mov    al,0x45
  42439b:	xchg   edi,eax
  42439c:	adc    DWORD PTR [ebx+0xf1f4042],0x9b9e38b
  4243a6:	je     0x42438c
  4243a8:	push   ebp
  4243a9:	sub    BYTE PTR [ebx],cl
  4243ab:	pop    esi
  4243ac:	lahf   
  4243ad:	inc    ebx
  4243ae:	out    0x1c,al
  4243b0:	xchg   ebx,eax
  4243b1:	cmp    BYTE PTR [edi-0x65],dh
  4243b4:	mov    ds:0x78b89b15,eax
  4243b9:	es xchg edx,eax
  4243bb:	clc    
  4243bc:	inc    ecx
  4243bd:	lds    esp,FWORD PTR [esi+eiz*1+0xbd]
	...
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	xchg   di,ax
  424442:	cmp    BYTE PTR [esi+0x18280],bh
  424448:	cmc    
  424449:	add    BYTE PTR [eax],al
  42444b:	add    BYTE PTR [esi+0x5e],al
  42444e:	int    0x17
  424450:	sbb    ah,0xc9
  424453:	fimul  WORD PTR [edx+0x45cc9c58]
  424459:	or     ch,dh
  42445b:	outs   dx,DWORD PTR ds:[esi]
  42445c:	adc    DWORD PTR [edi],ebx
  42445e:	imul   ecx,DWORD PTR [edx-0x34],0x6735ee32
  424465:	sti    
  424466:	cmp    ebp,DWORD PTR [ebp+0x7a]
  424469:	push   0x5ea4fe7a
  42446e:	lods   eax,DWORD PTR gs:[esi]
  424470:	jle    0x424471
  424472:	sbb    DWORD PTR [ecx-0xbafabf9],edi
  424478:	sub    al,0x5e
  42447a:	fmul   st(7),st
  42447c:	add    esp,esp
  42447e:	inc    edi
  42447f:	jp     0x4244dc
  424481:	(bad)  
  424482:	inc    edi
  424483:	jmp    0xe598:0xb006eab6
  42448a:	jbe    0x424424
  42448c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42448d:	pushf  
  42448e:	pop    edx
  42448f:	mov    al,0xd8
  424491:	mov    eax,ds:0x9c0590fd
  424496:	stc    
  424497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424498:	scas   eax,DWORD PTR es:[edi]
  424499:	add    BYTE PTR [esi],0x79
  42449c:	enter  0x5d77,0x2b
  4244a0:	aam    0x85
  4244a2:	je     0x42449a
  4244a4:	push   ecx
  4244a5:	sar    DWORD PTR [ebp+0x1a409f3d],1
  4244ab:	push   ss
  4244ac:	pop    edx
  4244ad:	pop    ebp
  4244ae:	popf   
  4244af:	(bad)  
  4244b1:	inc    edx
  4244b2:	dec    esi
  4244b3:	push   ds
  4244b4:	jg     0x42443d
  4244b6:	jp     0x4244c8
  4244b8:	cwde   
  4244b9:	mov    ch,0xb0
  4244bb:	xchg   ebx,eax
  4244bc:	retf   
  4244bd:	test   ebx,esp
  4244bf:	(bad)  
  4244c0:	(bad)
  4244c4:	sbb    ebp,DWORD PTR [ebp+0x10]
  4244c7:	mov    edx,0x88ff91e4
  4244cc:	xor    eax,DWORD PTR [eax+0x9c473b7]
  4244d2:	fst    QWORD PTR [ebp+eiz*2+0x434f3fa3]
  4244d9:	mov    bh,0xf6
  4244db:	ins    DWORD PTR es:[edi],dx
  4244dc:	scas   al,BYTE PTR es:[edi]
  4244dd:	out    dx,al
  4244de:	jns    0x424462
  4244e0:	stos   DWORD PTR es:[edi],eax
  4244e1:	sbb    eax,0x1ec7756d
  4244e6:	(bad)  
  4244e7:	mov    dl,0x10
  4244e9:	inc    esp
  4244ea:	aad    0xbf
  4244ec:	or     DWORD PTR [ebx+esi*8+0x11f1f260],0xbedd5539
  4244f7:	xor    al,0xf5
  4244f9:	sub    BYTE PTR [eax],0x2a
  4244fc:	jno    0x424579
  4244fe:	divps  xmm5,XMMWORD PTR [ecx]
  424501:	jmp    0x57c0:0x5b9a56be
  424508:	out    dx,al
  424509:	sub    al,0x42
  42450b:	cmp    BYTE PTR [eax+0x45],bl
  42450e:	sbb    BYTE PTR [edi+edi*8],bl
  424511:	sub    ah,bl
  424513:	inc    ecx
  424514:	mov    esp,0xb09363cc
  424519:	(bad)  
  42451a:	and    eax,0xeafe3909
  42451f:	jns    0x4244c4
  424521:	lock jmp 0x2dfb1efa
  424527:	xor    eax,0xe493bd6b
  42452c:	push   ebp
  42452d:	or     DWORD PTR [eax+esi*4-0x79],0x64d66d05
  424535:	cmp    edx,DWORD PTR [eax-0xbf47e7c]
  42453b:	xlat   BYTE PTR ds:[ebx]
  42453c:	pop    eax
  42453d:	sahf   
  42453e:	push   cs
  42453f:	ja     0x4244e7
	...
  4245b1:	add    BYTE PTR [eax],al
  4245b3:	add    BYTE PTR [eax+0x7f747c8f],al
  4245b9:	test   DWORD PTR [eax+0x6c527eff],0xab7ac031
  4245c3:	aas    
  4245c4:	jne    0x424549
  4245c6:	add    DWORD PTR [eax],eax
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [edx-0x51],bh
  4245ce:	dec    esi
  4245cf:	lods   al,BYTE PTR ds:[esi]
  4245d0:	fwait
  4245d1:	inc    ebx
  4245d2:	mov    esp,0x6364b980
  4245d7:	loopne 0x4245eb
  4245d9:	mov    es,esi
  4245db:	jecxz  0x4245a6
  4245dd:	sbb    ebp,ebp
  4245df:	cmp    ecx,DWORD PTR [edx+eiz*2+0x587c62bb]
  4245e6:	inc    esp
  4245e7:	out    0xe9,al
  4245e9:	iret   
  4245ea:	imul   DWORD PTR [edx]
  4245ec:	inc    esi
  4245ed:	stos   DWORD PTR es:[edi],eax
  4245ee:	sbb    BYTE PTR [edx+edi*8-0x25519c76],0x9b
  4245f6:	mov    bl,0xf8
  4245f8:	repnz out dx,eax
  4245fa:	pushf  
  4245fb:	inc    esp
  4245fc:	inc    ebp
  4245fd:	(bad)  
  4245fe:	mov    ds:0xb041329a,al
  424603:	jbe    0x42459e
  424605:	fcmovbe st,st(0)
  424607:	lahf   
  424608:	imul   esp,DWORD PTR [ebp-0x386135d4],0xffffff99
  42460f:	jecxz  0x4245ea
  424611:	fild   QWORD PTR [edx+0x28054ecb]
  424617:	push   es
  424618:	dec    ecx
  424619:	xor    edi,DWORD PTR [edi]
  42461b:	cmp    BYTE PTR [esi+0x5fcde14a],0x5b
  424622:	or     eax,DWORD PTR [ebx-0x6fd06fc7]
  424628:	test   al,0x47
  42462a:	(bad)  
  42462c:	fstp   TBYTE PTR [edi-0x24]
  42462f:	mov    eax,ds:0xd21dfcc1
  424634:	inc    ebp
  424635:	cli    
  424636:	fs loope 0x424675
  424639:	popf   
  42463a:	pop    ds
  42463b:	daa    
  42463c:	xchg   esi,eax
  42463d:	sbb    eax,0x2e7e6db
  424642:	pslld  mm6,QWORD PTR [ebx-0x3f]
  424646:	push   esi
  424647:	mov    ah,0x1e
  424649:	push   es
  42464a:	add    al,0xf8
  42464c:	xor    edx,DWORD PTR [esi+0x3ed27182]
  424652:	cmp    al,0x4c
  424654:	xor    dl,dl
  424656:	clc    
  424657:	ret    
  424658:	jo     0x424605
  42465a:	xchg   ecx,eax
  42465b:	or     eax,0x34767d6f
  424660:	inc    eax
  424661:	repz into 
  424663:	pop    eax
  424664:	mov    edx,0xd97f65fa
  424669:	push   esi
  42466a:	scas   al,BYTE PTR es:[edi]
  42466b:	aas    
  42466c:	(bad)  
  42466d:	cmp    esp,DWORD PTR [ebx+0x5e6549c8]
  424673:	add    eax,0x23692294
  424678:	jecxz  0x4246bf
  42467a:	mov    edi,DWORD PTR [ebp+0x53]
  42467d:	add    DWORD PTR [ebx+0x30],edi
  424680:	and    eax,0xaedb3b55
  424685:	adc    eax,0xae555df8
  42468a:	pop    edx
  42468b:	pop    edi
  42468c:	or     al,0xa7
  42468e:	fprem1 
  424690:	cmp    dh,BYTE PTR [ebx+0x29]
  424693:	push   ebx
  424694:	pop    ss
  424695:	fistp  QWORD PTR [edi+0x614cd7b6]
  42469b:	sbb    BYTE PTR [ebx+0x2fd16b7b],ah
  4246a1:	(bad)  [edx]
  4246a3:	test   al,0x85
  4246a5:	shr    BYTE PTR [edx],1
  4246a7:	scas   al,BYTE PTR es:[edi]
  4246a8:	mov    ah,0x82
  4246aa:	sti    
  4246ab:	push   0x6b
  4246ad:	jp     0x424673
  4246af:	paddw  mm3,mm6
  4246b2:	call   0xb57bd2b
  4246b7:	fs scas eax,DWORD PTR es:[edi]
  4246b9:	into   
  4246ba:	sub    cl,BYTE PTR [esi-0x6a870420]
  4246c0:	mov    ebx,0x0
	...
  424731:	add    BYTE PTR [eax],al
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	(bad)  
  424741:	jae    0x4246c5
  424743:	retf   0x846a
  424746:	add    DWORD PTR [eax],eax
  424748:	cmc    
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [edi+0x52],bh
  42474e:	fcmovne st,st(4)
  424750:	jno    0x42476a
  424752:	jecxz  0x424754
  424754:	pop    ebx
  424755:	es push 0x36f67748
  42475b:	mov    al,ds:0xbd380eb7
  424760:	pop    esi
  424761:	mov    dl,0x8e
  424763:	repz xor cl,BYTE PTR [ebx-0x67b01044]
  42476a:	jl     0x42472f
  42476c:	push   es
  42476d:	(bad)  
  42476e:	(bad)  
  42476f:	and    eax,0x4be83f78
  424774:	jle    0x4247eb
  424776:	inc    esp
  424777:	jbe    0x4246fd
  424779:	mov    dh,BYTE PTR [edx]
  42477b:	stos   DWORD PTR es:[edi],eax
  42477c:	(bad)  
  42477d:	je     0x4247ac
  42477f:	xchg   dl,ch
  424781:	imul   esi,ebp,0xa374e1ad
  424787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424788:	shr    DWORD PTR [esi+0x7533db75],cl
  42478e:	lahf   
  42478f:	imul   eax,DWORD PTR [eax+ebx*8],0xffffff9b
  424793:	jecxz  0x42471f
  424795:	lods   al,BYTE PTR ds:[esi]
  424796:	mov    edx,DWORD PTR [edx]
  424798:	push   0xffffffb8
  42479a:	scas   al,BYTE PTR es:[edi]
  42479b:	inc    esi
  42479c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42479d:	sub    DWORD PTR [esp+ecx*4-0x17],eax
  4247a1:	bound  edx,QWORD PTR [ebx+0x124a0d17]
  4247a7:	add    ch,al
  4247a9:	stos   BYTE PTR es:[edi],al
  4247aa:	add    al,BYTE PTR [eax-0x13]
  4247ad:	int3   
  4247ae:	pop    esp
  4247af:	sub    eax,0x3aa0d54c
  4247b4:	int3   
  4247b5:	jb     0x42477b
  4247b7:	mov    WORD PTR [ebp-0x45],cs
  4247ba:	xchg   esp,eax
  4247bb:	cmova  ebp,DWORD PTR [ebx+0x23]
  4247bf:	add    dl,ch
  4247c1:	add    bl,BYTE PTR ds:0x258f73cd
  4247c7:	stos   DWORD PTR es:[edi],eax
  4247c8:	add    bh,BYTE PTR [edi]
  4247ca:	add    DWORD PTR cs:[edx-0x25543b85],ebx
  4247d1:	aas    
  4247d2:	shld   DWORD PTR [ebx-0x74],ebx,0xcd
  4247d7:	outs   dx,BYTE PTR ds:[esi]
  4247d8:	cmp    bh,dl
  4247da:	add    eax,0x8819fb6
  4247df:	rcr    bh,1
  4247e1:	outs   dx,BYTE PTR ds:[esi]
  4247e2:	pop    ecx
  4247e3:	test   al,0xc5
  4247e5:	aad    0xc0
  4247e7:	sbb    cl,BYTE PTR [ecx]
  4247e9:	dec    ebx
  4247ea:	(bad)  
  4247eb:	cmp    BYTE PTR [ebx+0xa],ah
  4247ee:	adc    eax,0x465a955e
  4247f3:	repz ja 0x424846
  4247f6:	push   0xffffffa4
  4247f8:	push   edx
  4247f9:	pop    eax
  4247fa:	or     al,0x30
  4247fc:	pop    ds
  4247fd:	sub    ch,dl
  4247ff:	jmp    0x574a51f2
  424804:	jmp    0xce71:0x49724021
  42480b:	daa    
  42480c:	sub    eax,0xb18d78b2
  424811:	cmp    ebx,DWORD PTR [edx-0x79b7f317]
  424817:	stc    
  424818:	mov    ecx,0x1ab94f54
  42481d:	add    ah,BYTE PTR [edx]
  42481f:	sub    eax,0x7a714d79
  424824:	pop    ds
  424825:	inc    esi
  424826:	push   edi
  424827:	stos   BYTE PTR es:[edi],al
  424828:	sub    ebx,DWORD PTR [esp+eax*1]
  42482b:	dec    ecx
  42482c:	sbb    BYTE PTR [ecx-0x4a8a924b],ah
  424832:	and    eax,0x39c9f97d
  424837:	popf   
  424838:	rol    BYTE PTR [edx],cl
  42483a:	(bad)  
  42483b:	ja     0x4248a7
  42483d:	xor    ah,BYTE PTR [ecx+0xb4a6]
	...
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424940
  4248c1:	jbe    0x424894
  4248c3:	and    BYTE PTR [edi-0x7b],bl
  4248c6:	add    DWORD PTR [eax],eax
  4248c8:	cmc    
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    dh,dh
  4248cd:	sub    dh,0xdf
  4248d0:	enter  0x6968,0x7a
  4248d4:	push   ds
  4248d5:	xchg   esi,eax
  4248d6:	test   DWORD PTR [eax-0x3],ebp
  4248d9:	dec    edx
  4248da:	icebp  
  4248db:	xor    DWORD PTR [esi-0x79],0x15
  4248df:	cdq    
  4248e0:	jbe    0x424874
  4248e2:	outs   dx,BYTE PTR ds:[esi]
  4248e3:	loop   0x4248f3
  4248e5:	mov    ah,0x49
  4248e7:	cmp    ecx,DWORD PTR [eax+edx*8+0x6e]
  4248eb:	xor    edx,DWORD PTR [ecx+0x2524e786]
  4248f1:	sub    al,BYTE PTR [ecx+0x2f]
  4248f4:	lock adc DWORD PTR [ebx],0x7757c822
  4248fb:	stos   BYTE PTR es:[edi],al
  4248fc:	push   ds
  4248fd:	jo     0x4248eb
  4248ff:	mov    dh,0xaf
  424901:	arpl   WORD PTR [ebx-0x4e8d2591],di
  424907:	push   cs
  424908:	inc    ebx
  424909:	mov    dh,0xa1
  42490b:	imul   ebp,DWORD PTR ss:[edi],0xd7d26f42
  424912:	push   cs
  424913:	pusha  
  424914:	push   edi
  424915:	rcr    DWORD PTR [eax],1
  424917:	mov    ebx,0xc56523e1
  42491c:	(bad)  
  42491e:	push   edx
  42491f:	sbb    DWORD PTR [esi],edx
  424921:	retf   
  424922:	es icebp 
  424924:	jnp    0x424946
  424926:	imul   esp,DWORD PTR [ecx],0x522b85c7
  42492c:	jmp    0x424983
  42492e:	add    eax,0x5adbf4ed
  424933:	inc    ecx
  424934:	jnp    0x4249af
  424936:	jl     0x42498c
  424938:	adc    edx,DWORD PTR fs:[edx+0x61]
  42493c:	adc    al,0xbe
  42493e:	test   DWORD PTR [ebp-0x70e87342],0x2b42a627
  424948:	mov    ds:0xa0021a03,al
  42494d:	pop    esi
  42494e:	xor    al,0x3c
  424950:	fcomip st,st(1)
  424952:	test   al,0x2a
  424954:	dec    edx
  424955:	xchg   esp,eax
  424956:	clc    
  424957:	data16 mov bh,0x46
  42495a:	push   edx
  42495b:	psubd  mm7,mm7
  42495e:	repz cmp al,0xc8
  424961:	ret    0x8ddf
  424964:	repz or BYTE PTR [edi+0x36],dl
  424968:	adc    eax,0xf7bc576b
  42496d:	inc    ecx
  42496e:	call   0x56a0c143
  424973:	jmp    0x42499c
  424975:	cdq    
  424976:	or     dl,BYTE PTR [ebx+eiz*8+0x1b]
  42497a:	dec    ecx
  42497b:	pop    ss
  42497c:	add    cl,bl
  42497e:	nop
  42497f:	mov    DWORD PTR [edx+0x3e],0x5513f0fd
  424986:	(bad)  
  424987:	cdq    
  424988:	lods   eax,DWORD PTR ds:[esi]
  424989:	mov    ebx,0x1d742f13
  42498e:	and    ch,BYTE PTR [ebp+0xd]
  424991:	or     bh,BYTE PTR [ebx]
  424993:	in     eax,dx
  424994:	jp     0x424988
  424996:	xchg   edx,eax
  424997:	or     eax,0xaaa617ce
  42499c:	(bad)  
  42499d:	lock pop esp
  42499f:	lods   eax,DWORD PTR ds:[esi]
  4249a0:	add    DWORD PTR [eax+0x1a],edx
  4249a3:	mov    dl,0x3b
  4249a5:	call   ebx
  4249a7:	repnz (bad) 
  4249a9:	push   esp
  4249aa:	cwde   
  4249ab:	movaps XMMWORD PTR [ebx-0x44dfe6a],xmm3
  4249b2:	push   es
  4249b3:	fldcw  WORD PTR [ebp+0x7b]
  4249b6:	sbb    eax,0xf0cab173
  4249bb:	sub    eax,0x71215552
  4249c0:	int3   
	...
  424a31:	add    BYTE PTR [eax],al
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	test   BYTE PTR ds:0x86545841,dl
  424a46:	add    DWORD PTR [eax],eax
  424a48:	cmc    
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR [ebp+0x7eea1132],bh
  424a51:	fs mov esp,0x1e55517c
  424a57:	(bad)  
  424a58:	jo     0x424ab2
  424a5a:	mov    BYTE PTR [ecx+0x62],al
  424a5d:	jle    0x4249ec
  424a5f:	push   es
  424a60:	mov    WORD PTR [eax-0x7eb6ef71],es
  424a66:	and    eax,0x575b9513
  424a6b:	cli    
  424a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a6d:	les    ebp,FWORD PTR [eax+ebp*4+0x9]
  424a71:	(bad)  
  424a72:	std    
  424a73:	les    esi,FWORD PTR [esi+0x23]
  424a76:	fwait
  424a77:	into   
  424a78:	sub    DWORD PTR [eax+0x371969ba],eax
  424a7e:	fs inc esp
  424a80:	(bad)  
  424a81:	rol    BYTE PTR [ebp+0x28],1
  424a84:	dec    esi
  424a85:	cs mov bl,0xb0
  424a88:	jl     0x424aad
  424a8a:	cmp    al,0xe0
  424a8c:	clc    
  424a8d:	test   bh,ah
  424a8f:	fld    DWORD PTR [ebp+0x6c]
  424a92:	test   DWORD PTR [ecx-0x62],ebx
  424a95:	mov    eax,0x9ff34615
  424a9a:	jnp    0x424a3d
  424a9c:	cmp    dh,BYTE PTR [ebx+0x23]
  424a9f:	enter  0x3020,0xb7
  424aa3:	xchg   edi,eax
  424aa4:	fild   DWORD PTR [ebx+0x42ec326a]
  424aaa:	or     BYTE PTR es:[edx+0x27],0x4
  424aaf:	fiadd  DWORD PTR [ebx+0x5c]
  424ab2:	sar    DWORD PTR [eax],cl
  424ab4:	push   edx
  424ab5:	nop
  424ab6:	xor    eax,0x873ac8ce
  424abb:	ins    BYTE PTR es:[edi],dx
  424abc:	adc    ch,ah
  424abe:	sahf   
  424abf:	mov    ds:0x23f76ba2,eax
  424ac4:	in     eax,dx
  424ac5:	push   ds
  424ac6:	sar    dl,0xb8
  424ac9:	out    0xc4,al
  424acb:	xor    al,0xaf
  424acd:	mov    edi,0x60136f50
  424ad2:	out    dx,al
  424ad3:	xchg   esi,eax
  424ad4:	dec    eax
  424ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ad6:	sub    eax,0xa4a3cda6
  424adb:	mov    esi,0xf74b6200
  424ae0:	dec    ebx
  424ae1:	clc    
  424ae2:	call   0x7cf7:0x7b21f6f2
  424ae9:	pop    edi
  424aea:	mov    bl,ch
  424aec:	xchg   ecx,eax
  424aed:	jne    0x424b5f
  424aef:	jle    0x424ad4
  424af1:	fnstenv ss:[edx+0xd36261f]
  424af8:	(bad)
  424afb:	pushf  
  424afc:	adc    eax,0x4ebe0314
  424b01:	(bad)  
  424b02:	mov    dh,0x31
  424b04:	jecxz  0x424b01
  424b06:	mov    esp,0xb7a8e206
  424b0b:	outs   dx,DWORD PTR ds:[esi]
  424b0c:	pop    ebx
  424b0d:	ror    BYTE PTR [ebx*2+0x6ca3e51b],1
  424b14:	jmp    0x938b:0x66b31b56
  424b1b:	and    eax,0xa16b67b5
  424b20:	cdq    
  424b21:	ds fist WORD PTR es:[edx-0x4e]
  424b26:	nop
  424b27:	ins    DWORD PTR es:[edi],dx
  424b28:	dec    ebx
  424b29:	xchg   edi,eax
  424b2a:	pusha  
  424b2b:	dec    eax
  424b2c:	dec    eax
  424b2d:	fcom   QWORD PTR [edx]
  424b2f:	into   
  424b30:	push   esp
  424b31:	mov    bl,0x9f
  424b33:	pop    esi
  424b34:	mov    eax,0x322598cf
  424b39:	xor    al,0xd0
  424b3b:	add    DWORD PTR [eax+0x2a],ebx
  424b3e:	out    dx,al
  424b3f:	lods   al,BYTE PTR ds:[esi]
  424b40:	stc    
	...
  424bb1:	add    BYTE PTR [eax],al
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x3fb9f881]
  424bc1:	daa    
  424bc2:	rcl    BYTE PTR [ebp+0x18749],0xf5
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [edx+0x3a],dl
  424bce:	ret    
  424bcf:	nop
  424bd0:	(bad)  
  424bd1:	cmp    esp,DWORD PTR [ebp+0x8711044]
  424bd7:	mov    edx,0x4a5f5793
  424bdc:	icebp  
  424bdd:	or     BYTE PTR [eax],bl
  424bdf:	add    eax,0x92883070
  424be4:	push   ecx
  424be5:	inc    eax
  424be6:	sahf   
  424be7:	inc    edi
  424be8:	lods   eax,DWORD PTR ds:[esi]
  424be9:	lahf   
  424bea:	loop   0x424c56
  424bec:	mov    ebp,0xf8ba0eab
  424bf1:	in     al,0x82
  424bf3:	cmp    al,0xb0
  424bf5:	pop    ss
  424bf6:	dec    esi
  424bf7:	popa   
  424bf8:	mov    ds:0xedafc32a,al
  424bfd:	outs   dx,BYTE PTR ds:[esi]
  424bfe:	fcom   DWORD PTR [edx-0x56]
  424c01:	pop    es
  424c02:	or     ch,BYTE PTR [ebx-0x2bf74aaf]
  424c08:	and    esi,ebp
  424c0a:	cmp    eax,0x92e33431
  424c0f:	rcr    BYTE PTR [ecx],1
  424c11:	mov    ds:0x2cbee1d8,al
  424c16:	iret   
  424c17:	cwde   
  424c18:	ror    al,0xfd
  424c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c1c:	xchg   DWORD PTR [eax-0x42],esi
  424c1f:	jecxz  0x424c2b
  424c21:	lods   eax,DWORD PTR ds:[esi]
  424c22:	mov    ds:0x21f7848b,al
  424c27:	addr16 cld 
  424c29:	dec    edx
  424c2a:	mov    bh,0xc
  424c2c:	loopne 0x424bd6
  424c2e:	rol    BYTE PTR [ebx-0x30],cl
  424c31:	test   DWORD PTR [ebp-0x1dfe7e9],ecx
  424c37:	adc    DWORD PTR [ecx],esp
  424c39:	repz jbe 0x424bd3
  424c3c:	jl     0x424be8
  424c3e:	jle    0x424c53
  424c40:	adc    eax,0xcfba08c9
  424c45:	rcl    DWORD PTR [ebp-0x45],cl
  424c48:	xor    al,0x81
  424c4a:	adc    al,0xfa
  424c4c:	pop    ds
  424c4d:	loope  0x424c2b
  424c4f:	in     eax,0x2e
  424c51:	pop    esi
  424c52:	cli    
  424c53:	es xchg edi,eax
  424c55:	leave  
  424c56:	cmp    BYTE PTR [ecx],ah
  424c58:	dec    esp
  424c59:	cwde   
  424c5a:	push   0x106e2c47
  424c5f:	mov    bh,0x34
  424c61:	mov    ss,WORD PTR [edx]
  424c63:	lods   al,BYTE PTR ds:[esi]
  424c64:	std    
  424c65:	jo     0x424c50
  424c67:	inc    edx
  424c68:	mov    esi,0x9e83dba3
  424c6d:	adc    BYTE PTR [eax-0x26],al
  424c70:	xchg   DWORD PTR [eax],eax
  424c72:	dec    esp
  424c73:	imul   esi,DWORD PTR [esi+0x5e],0x6c9a33d
  424c7a:	adc    DWORD PTR [edx-0x43],ecx
  424c7d:	cwde   
  424c7e:	and    ebx,DWORD PTR [eax-0x56]
  424c81:	sbb    eax,0x9e091b8
  424c86:	adc    eax,0x57b7acec
  424c8c:	aaa    
  424c8d:	xchg   DWORD PTR [esi+0x4b031c35],ecx
  424c93:	iret   
  424c94:	out    0x51,al
  424c96:	add    eax,0x2f380a4e
  424c9b:	mov    ds:0xf73d2fdd,al
  424ca0:	lods   eax,DWORD PTR ds:[esi]
  424ca1:	je     0x424c5e
  424ca3:	lods   al,BYTE PTR ds:[esi]
  424ca4:	in     al,0x78
  424ca6:	nop
  424ca7:	retf   
  424ca8:	mov    bl,0xcb
  424caa:	into   
  424cab:	jmp    0x424ccd
  424cad:	out    0x30,al
  424caf:	orps   xmm1,XMMWORD PTR [edx-0x53]
  424cb3:	lods   al,BYTE PTR ds:[esi]
  424cb4:	push   esp
  424cb5:	shl    ebx,1
  424cb7:	mov    cl,0x6a
  424cb9:	ret    
  424cba:	in     al,0xe2
  424cbc:	sbb    dl,BYTE PTR [edx+0xe9c0ab]
	...
  424d32:	add    BYTE PTR [eax],al
  424d34:	(bad)  
  424d35:	test   BYTE PTR [edi-0x118668f7],0xff
  424d3c:	test   BYTE PTR [ecx-0x6c5c6b29],cl
  424d42:	test   al,0xbb
  424d44:	mov    BYTE PTR ds:[ecx],al
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [esi],ch
  424d4d:	loopne 0x424cee
  424d4f:	xor    eax,0xc8757bec
  424d54:	pusha  
  424d55:	xor    al,0x3
  424d57:	nop
  424d58:	loope  0x424da8
  424d5a:	dec    ebx
  424d5b:	clc    
  424d5c:	jmp    0x424d11
  424d5e:	xor    BYTE PTR [edi-0x12],0xb9
  424d62:	jo     0x424d97
  424d64:	int3   
  424d65:	das    
  424d66:	adc    al,0xbf
  424d68:	stos   DWORD PTR es:[edi],eax
  424d69:	repz retf 0xf546
  424d6d:	leave  
  424d6e:	cs cmc 
  424d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d71:	cmp    DWORD PTR [ebp-0x6f6ba7b1],0xb41932e7
  424d7b:	sbb    ebp,DWORD PTR [edi+0x7]
  424d7e:	sbb    eax,0xc4c0bfed
  424d83:	out    0x3e,eax
  424d85:	add    esp,DWORD PTR [edi]
  424d87:	cmp    al,0xd
  424d89:	sbb    BYTE PTR [ebp-0x6],dh
  424d8c:	mov    esi,0x5860875c
  424d91:	jno    0x424d89
  424d93:	shr    ebx,0x97
  424d96:	adc    BYTE PTR [edi+0x2a],0x6f
  424d9a:	lea    edx,[esi+0x6ffa2e9a]
  424da0:	neg    DWORD PTR [edi-0x712a6dd1]
  424da6:	mov    esp,0xfee42004
  424dab:	test   BYTE PTR [edi],cl
  424dad:	loope  0x424dbd
  424daf:	jge    0x424def
  424db1:	pop    ecx
  424db2:	adc    eax,0x9340292c
  424db7:	jecxz  0x424dea
  424db9:	mov    WORD PTR [edx+0x5a6590e4],fs
  424dbf:	lods   al,BYTE PTR ds:[esi]
  424dc0:	adc    eax,0x6e43f2f0
  424dc5:	lods   eax,DWORD PTR ds:[esi]
  424dc6:	pop    esp
  424dc7:	sub    DWORD PTR [edi],esi
  424dc9:	adc    eax,0x802f4e2a
  424dce:	xlat   BYTE PTR ds:[ebx]
  424dcf:	jno    0x424e0f
  424dd1:	sbb    DWORD PTR es:[eax],0xd6c7d235
  424dd8:	mov    ch,0xdf
  424dda:	dec    esi
  424ddb:	test   BYTE PTR [edi-0x35d2dcfd],bh
  424de1:	aas    
  424de2:	pushf  
  424de3:	adc    DWORD PTR [ecx-0x3fbc7709],ebp
  424de9:	pop    ds
  424dea:	mov    esp,0x6504d970
  424def:	out    dx,al
  424df0:	icebp  
  424df1:	xchg   DWORD PTR [edi+0x4ad4b8fd],ebx
  424df7:	mov    edi,0xf1651349
  424dfc:	ins    DWORD PTR es:[edi],dx
  424dfd:	add    al,0x81
  424dff:	xchg   ebx,eax
  424e00:	js     0x424dc1
  424e02:	out    0xc,eax
  424e04:	cmp    DWORD PTR fs:[edx+esi*1],0xffffff81
  424e09:	enter  0x8557,0xfa
  424e0d:	sbb    al,ch
  424e0f:	aad    0xf3
  424e11:	fwait
  424e12:	aam    0xf6
  424e14:	pop    ecx
  424e15:	sbb    ch,BYTE PTR [esi]
  424e17:	mov    BYTE PTR [esi+0x56],dl
  424e1a:	push   0x4f
  424e1c:	es or  al,0x37
  424e1f:	jecxz  0x424dfd
  424e21:	cmp    bh,dl
  424e23:	mov    esp,0xf47c6389
  424e28:	loop   0x424e8f
  424e2a:	mov    dh,0x2
  424e2c:	dec    esp
  424e2d:	dec    ecx
  424e2e:	add    eax,0x6612f351
  424e33:	test   eax,0xce302bff
  424e38:	(bad)
  424e3c:	xor    dl,BYTE PTR [edi+0x4869b5]
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx-0x7fbcb6b7]
  424ec4:	xor    ecx,DWORD PTR [ecx+0xf50001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	fwait
  424ecd:	or     BYTE PTR [edx],dl
  424ecf:	mov    cs,esi
  424ed1:	loopne 0x424e5d
  424ed3:	(bad)  
  424ed5:	and    BYTE PTR [ebx+0x2e],0xce
  424ed9:	dec    eax
  424eda:	xor    BYTE PTR ds:0x179279dd,ah
  424ee0:	sub    DWORD PTR ds:[edx-0x5],ecx
  424ee4:	xchg   edx,eax
  424ee5:	mov    ah,0xb1
  424ee7:	push   0x16
  424ee9:	das    
  424eea:	lea    edi,[ecx]
  424eec:	dec    ecx
  424eed:	push   0x4f
  424eef:	lahf   
  424ef0:	inc    eax
  424ef1:	pop    edx
  424ef2:	dec    esp
  424ef3:	retf   
  424ef4:	push   edi
  424ef5:	(bad)  
  424ef6:	retf   0xc482
  424ef9:	inc    ebp
  424efa:	cld    
  424efb:	dec    ecx
  424efc:	mov    bl,0x1
  424efe:	mov    ecx,0x9315cb52
  424f03:	adc    al,0x88
  424f05:	lods   al,BYTE PTR ds:[esi]
  424f06:	outs   dx,BYTE PTR ds:[esi]
  424f07:	loope  0x424ec1
  424f09:	fs jo  0x424ea9
  424f0c:	xor    esp,ecx
  424f0e:	fs inc ebx
  424f10:	cmp    DWORD PTR [edi+ecx*4],edx
  424f13:	add    DWORD PTR [eax+0x5d],ecx
  424f16:	inc    ecx
  424f17:	mov    edi,0x9a0b9ff2
  424f1c:	iret   
  424f1d:	or     ebx,DWORD PTR [eax+0x3f]
  424f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f21:	adc    al,0x8c
  424f23:	fcomi  st,st(6)
  424f25:	(bad)  
  424f27:	dec    ebp
  424f28:	cli    
  424f29:	jbe    0x424f9d
  424f2b:	mov    edi,0x75b942b3
  424f30:	(bad)  
  424f31:	sbb    eax,0x6dc7839f
  424f36:	add    DWORD PTR [ebp-0x9c5f22e],0xffffffe1
  424f3d:	ss aaa 
  424f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f40:	cmp    bh,BYTE PTR [ecx-0x6]
  424f43:	(bad)  
  424f44:	jg     0x424f2d
  424f46:	cmp    al,0x79
  424f48:	jno    0x424f01
  424f4a:	popf   
  424f4b:	mov    bl,0x63
  424f4d:	aaa    
  424f4e:	cld    
  424f4f:	or     bh,BYTE PTR [ebx-0x25]
  424f52:	hlt    
  424f53:	nop
  424f54:	js     0x424ef1
  424f56:	sar    BYTE PTR [ebx-0x1c6d95cf],0x82
  424f5d:	inc    ebx
  424f5e:	push   cs
  424f5f:	pop    ebp
  424f60:	cmp    eax,0x61b61b21
  424f65:	jno    0x424f82
  424f67:	rsqrtps xmm2,XMMWORD PTR [esi-0xab1b254]
  424f6e:	ss mov edi,0x2874ac8d
  424f74:	push   esi
  424f75:	stos   DWORD PTR es:[edi],eax
  424f76:	adc    DWORD PTR gs:[edx-0x184cf8bb],esp
  424f7d:	xor    al,0x5f
  424f7f:	int3   
  424f80:	mov    eax,0x5ba61d3c
  424f85:	push   edi
  424f86:	es nop
  424f88:	sbb    eax,DWORD PTR [edx+0x39d33d8a]
  424f8e:	stos   DWORD PTR es:[edi],eax
  424f8f:	pop    edx
  424f90:	std    
  424f91:	jle    0x425001
  424f93:	sub    ebx,DWORD PTR [eax-0x66]
  424f96:	std    
  424f97:	(bad)  
  424f98:	cmc    
  424f99:	and    dl,BYTE PTR ds:0x976a02a1
  424f9f:	jmp    0x424fb7
  424fa1:	jno    0x424fd8
  424fa3:	rcl    BYTE PTR [edx],0xef
  424fa6:	jmp    0x425020
  424fa8:	and    al,0xfb
  424faa:	stos   BYTE PTR es:[edi],al
  424fab:	mov    ebp,0x5f6ef241
  424fb0:	dec    ecx
  424fb1:	mul    BYTE PTR [ebx+esi*1-0x72]
  424fb5:	stos   BYTE PTR es:[edi],al
  424fb6:	fld    TBYTE PTR [ebx]
  424fb8:	sbb    BYTE PTR [eax-0x33],al
  424fbb:	scas   al,BYTE PTR es:[edi]
  424fbc:	rcr    BYTE PTR [eax+0xeb5f14],0x0
	...
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	push   ds
  425041:	je     0x425053
  425043:	mov    ebp,0x18a28
  425048:	cmc    
  425049:	add    BYTE PTR [eax],al
  42504b:	add    dl,cl
  42504d:	push   ebx
  42504e:	sbb    esp,DWORD PTR [edx]
  425050:	js     0x425038
  425052:	out    0x99,al
  425054:	popf   
  425055:	(bad)  
  425056:	fisttp DWORD PTR [eax]
  425058:	data16 jp 0x4250a2
  42505b:	push   cs
  42505c:	jae    0x4250c1
  42505e:	enter  0x386e,0x9
  425062:	ins    DWORD PTR es:[edi],dx
  425063:	xchg   ebp,eax
  425064:	ja     0x42505a
  425066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425068:	ins    DWORD PTR es:[edi],dx
  425069:	xchg   ebx,eax
  42506a:	cld    
  42506b:	and    al,0x3d
  42506d:	push   eax
  42506e:	out    dx,al
  42506f:	xchg   ebx,eax
  425070:	mov    eax,0x49e6c89
  425075:	rcr    DWORD PTR [edx+0x3e03dad1],1
  42507b:	neg    dh
  42507d:	adc    al,0x78
  42507f:	adc    BYTE PTR [ebx+0x74],cl
  425082:	inc    esp
  425083:	xor    dh,cl
  425085:	push   0xffffffde
  425087:	mov    dl,BYTE PTR [edx+0x6082666d]
  42508d:	xchg   esp,eax
  42508e:	div    BYTE PTR [ecx]
  425090:	mov    ch,0x47
  425092:	or     eax,0xce058301
  425097:	pop    esi
  425098:	xchg   ebp,eax
  425099:	cdq    
  42509a:	cs loope 0x42507b
  42509d:	jecxz  0x42511b
  42509f:	pop    ebx
  4250a0:	fdiv   QWORD PTR [eax+0x45]
  4250a3:	pop    esi
  4250a4:	dec    edx
  4250a5:	ret    
  4250a6:	out    dx,al
  4250a7:	sbb    BYTE PTR [edx+0x51],0xac
  4250ab:	jmp    0x1b5595a9
  4250b0:	sub    eax,0x6570e24f
  4250b5:	cwde   
  4250b6:	fild   QWORD PTR [edx-0x3809b53a]
  4250bc:	jmp    0xb6816a02
  4250c1:	sbb    al,0x30
  4250c3:	jne    0x4250db
  4250c5:	pop    ss
  4250c6:	push   ebx
  4250c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250c8:	div    edx
  4250ca:	(bad)  
  4250cb:	stc    
  4250cc:	in     al,dx
  4250cd:	cs inc edi
  4250cf:	pop    ecx
  4250d0:	sub    esp,DWORD PTR [eax+0x23]
  4250d3:	and    eax,0x6671d366
  4250d8:	ficom  WORD PTR [ebp+0x7d2c2b2f]
  4250de:	hlt    
  4250df:	adc    DWORD PTR [ecx],eax
  4250e1:	ins    DWORD PTR es:[edi],dx
  4250e2:	test   BYTE PTR [esi-0xe],al
  4250e5:	call   0x7b1a:0x588e78ad
  4250ec:	jl     0x425147
  4250ee:	jmp    0xefa:0x3658fb2e
  4250f5:	call   0x665b:0x437927c2
  4250fc:	(bad)  
  4250fe:	daa    
  4250ff:	push   ebp
  425100:	popf   
  425101:	popf   
  425102:	rol    DWORD PTR [ebx],cl
  425104:	sahf   
  425105:	sub    BYTE PTR [ebx-0x67],0xae
  425109:	push   edi
  42510a:	dec    edi
  42510b:	rcr    DWORD PTR [ebp-0x63],cl
  42510e:	pop    ds
  42510f:	mov    al,0xe6
  425111:	pop    es
  425112:	mov    ebp,0x3d9be274
  425117:	jecxz  0x425136
  425119:	cmp    BYTE PTR [edi],ch
  42511b:	ror    esp,cl
  42511d:	je     0x4250ff
  42511f:	stos   BYTE PTR es:[edi],al
  425120:	or     BYTE PTR [edi],0xbb
  425123:	inc    edi
  425124:	mov    esi,0x99b7ee1b
  425129:	stos   BYTE PTR es:[edi],al
  42512a:	dec    esi
  42512b:	add    BYTE PTR [esi],0x4c
  42512e:	inc    esi
  42512f:	clc    
  425130:	pop    es
  425131:	cmc    
  425132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425133:	adc    esp,eax
  425135:	sub    BYTE PTR [esi-0x78f4945e],ch
  42513b:	mov    ecx,0x4f20f9b2
  425140:	xchg   esi,eax
	...
  4251b1:	add    BYTE PTR [eax],al
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	test   DWORD PTR [ecx-0x74e2ecdb],edx
  4251c6:	add    DWORD PTR [eax],eax
  4251c8:	cmc    
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    cl,bh
  4251cd:	imul   eax,DWORD PTR [ebx],0x4bf6343c
  4251d3:	hlt    
  4251d4:	push   edx
  4251d5:	ror    BYTE PTR [ecx-0x1b284c37],cl
  4251db:	lods   eax,DWORD PTR ds:[esi]
  4251dc:	mov    bh,0x4b
  4251de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251df:	je     0x42525a
  4251e1:	lds    ebp,FWORD PTR [ebp+0x38]
  4251e4:	fldenv [eax]
  4251e6:	es xor al,0xc9
  4251e9:	test   BYTE PTR [esi+edi*1+0x2b],bl
  4251ed:	inc    ebp
  4251ee:	outs   dx,DWORD PTR ds:[esi]
  4251ef:	jmp    0x45942cb3
  4251f4:	mov    al,ds:0xc3553017
  4251f9:	shl    DWORD PTR [esi],cl
  4251fb:	push   edi
  4251fc:	jecxz  0x42521e
  4251fe:	mov    ah,0x76
  425200:	push   esi
  425201:	xchg   BYTE PTR [edx-0x3],cl
  425204:	int3   
  425205:	sub    ecx,edi
  425207:	out    0x61,al
  425209:	mov    ebx,0xf30d1030
  42520e:	dec    ebx
  42520f:	mov    al,0xd8
  425211:	cmc    
  425212:	and    al,0x25
  425214:	mov    eax,ds:0xb2e07825
  425219:	nop
  42521a:	push   0x77c8788e
  42521f:	lahf   
  425220:	dec    cl
  425222:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  425224:	inc    edi
  425225:	pcmpeqb mm2,QWORD PTR [ebx]
  425228:	out    0xe9,al
  42522a:	mov    ss,edi
  42522c:	fisubr DWORD PTR [edx]
  42522e:	inc    ebp
  42522f:	dec    edi
  425230:	bound  edi,QWORD PTR [ebp+edx*8+0x5e91c638]
  425237:	lds    esi,FWORD PTR [edi+0x6b]
  42523a:	inc    esi
  42523b:	xlat   BYTE PTR ds:[ebx]
  42523c:	sar    BYTE PTR [ebp+0x5a92f3ee],1
  425242:	mov    edi,0xb9ec2122
  425247:	ins    DWORD PTR es:[edi],dx
  425248:	sbb    BYTE PTR [eax],ah
  42524a:	dec    ebx
  42524b:	mov    ah,0xed
  42524d:	adc    ecx,ebx
  42524f:	inc    eax
  425250:	push   ss
  425251:	in     eax,0xbd
  425253:	ror    ecx,1
  425255:	dec    BYTE PTR [ebx-0x12]
  425258:	xor    eax,0x524cf841
  42525d:	sub    BYTE PTR [esi+0x18],bl
  425260:	or     ah,BYTE PTR [esi+0x63]
  425263:	pushf  
  425264:	les    esi,FWORD PTR [ecx+ecx*2+0x68]
  425268:	cmp    DWORD PTR [ebp+eax*4+0x3d],0x7cc2f408
  425270:	or     eax,0x4a2f971c
  425275:	into   
  425276:	loopne 0x425274
  425278:	xor    ch,BYTE PTR [edi]
  42527a:	test   eax,0x11f9cc3
  42527f:	mov    ds:0x1165c1d8,eax
  425284:	push   edi
  425285:	adc    bl,BYTE PTR [ebx+edi*1+0x5e]
  425289:	ffree  st(0)
  42528b:	aam    0x3a
  42528d:	mov    ebp,0xb32224d4
  425292:	jne    0x42522c
  425294:	stc    
  425295:	jmp    0x6bbb3bf
  42529a:	push   0x60
  42529c:	cmp    DWORD PTR [edi+ebp*1+0x50],esi
  4252a0:	mov    edi,0xf54d0d86
  4252a5:	(bad)  
  4252a6:	stos   DWORD PTR es:[edi],eax
  4252a7:	mov    esi,0x6884a203
  4252ac:	inc    esi
  4252ad:	enter  0x856e,0xe5
  4252b1:	(bad)  
  4252b2:	mov    ecx,0x4b4774d3
  4252b7:	sbb    ecx,DWORD PTR [ebp-0x48]
  4252ba:	mov    bh,0x3b
  4252bc:	jbe    0x425246
  4252be:	jne    0x425254
  4252c0:	inc    BYTE PTR [eax]
	...
  425332:	add    BYTE PTR [eax],al
  425334:	mov    ah,BYTE PTR [esi]
  425336:	jge    0x4252f2
  425338:	std    
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz lahf 
  425341:	test   al,0xd0
  425343:	movlps xmm1,QWORD PTR [ecx+eax*1+0xf500]
  42534b:	add    BYTE PTR [eax-0x2a],ah
  42534e:	imul   esi,ecx,0xf04f38d7
  425354:	aad    0xcf
  425356:	jnp    0x425373
  425358:	push   0x1ebae3e
  42535d:	mov    cl,0x14
  42535f:	dec    eax
  425360:	mov    ch,BYTE PTR [esi-0x79]
  425363:	and    al,0x6
  425365:	jmp    0x85d8c1bc
  42536a:	js     0x42532b
  42536c:	adc    dl,bh
  42536e:	push   ss
  42536f:	sub    al,0x5d
  425371:	inc    DWORD PTR [eax]
  425373:	push   es
  425374:	jge    0x425315
  425376:	and    BYTE PTR [ebx+0x3596d7a7],0x9d
  42537d:	jnp    0x425384
  42537f:	dec    ebp
  425380:	stc    
  425381:	adc    cl,BYTE PTR [edi+edi*1]
  425384:	call   0x55461c9a
  425389:	rcl    DWORD PTR [edx],cl
  42538b:	sbb    al,0xcd
  42538d:	in     eax,0xaf
  42538f:	mov    BYTE PTR [eax+0xe],cl
  425392:	push   ss
  425393:	shl    BYTE PTR [ecx-0x28fe0583],0x41
  42539a:	xor    al,0x6a
  42539c:	jle    0x4253c5
  42539e:	inc    esp
  42539f:	dec    ecx
  4253a0:	das    
  4253a1:	adc    DWORD PTR [eax],esi
  4253a3:	xor    eax,0x77721662
  4253a8:	ja     0x4253f5
  4253aa:	add    al,0xb4
  4253ac:	push   ds
  4253ad:	retf   
  4253ae:	mov    ebx,0x410f5120
  4253b3:	popa   
  4253b4:	sub    eax,0x50c86d2a
  4253b9:	popf   
  4253ba:	and    ch,bl
  4253bc:	stos   BYTE PTR es:[edi],al
  4253bd:	std    
  4253be:	mov    eax,0x7671fe76
  4253c3:	loopne 0x4253b9
  4253c5:	mov    cl,0x3a
  4253c7:	in     al,0x38
  4253c9:	mov    gs,eax
  4253cb:	sub    al,0xe5
  4253cd:	sbb    dh,bh
  4253cf:	pusha  
  4253d0:	mov    ecx,esp
  4253d2:	stc    
  4253d3:	or     BYTE PTR [eax],dh
  4253d5:	and    BYTE PTR [ebx-0x3a47efaa],0x11
  4253dc:	shr    DWORD PTR [edi+0x21cfff0c],1
  4253e2:	div    BYTE PTR [edi-0x21]
  4253e5:	ss and ch,0x7a
  4253e9:	aad    0x61
  4253eb:	mov    ch,0xef
  4253ed:	dec    dh
  4253ef:	pop    ecx
  4253f0:	jae    0x4253bd
  4253f2:	out    0x7,eax
  4253f4:	add    al,0x99
  4253f6:	in     eax,dx
  4253f7:	jb     0x425434
  4253f9:	scas   eax,DWORD PTR es:[edi]
  4253fa:	test   eax,0xda765e1d
  4253ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425400:	push   edx
  425401:	jne    0x4253cb
  425403:	inc    ebx
  425404:	(bad)  
  425405:	imul   edx,DWORD PTR [esp+esi*4],0x3f
  425409:	bound  ebx,QWORD PTR [eax-0x36]
  42540c:	setp   bh
  42540f:	loope  0x425488
  425411:	adc    ah,ah
  425413:	ins    BYTE PTR es:[edi],dx
  425414:	test   al,0xb6
  425416:	sub    BYTE PTR [edx+esi*1],0x3b
  42541a:	and    ch,bh
  42541c:	or     eax,0x6010ebc7
  425421:	pop    ecx
  425422:	icebp  
  425423:	arpl   WORD PTR [edi-0x6c],ax
  425426:	pop    ss
  425427:	jmp    0x294:0xa873c54a
  42542e:	and    BYTE PTR [esi+0x56bb1b2],0xbe
  425435:	push   edi
  425436:	pusha  
  425437:	cwde   
  425438:	les    ebp,FWORD PTR [ecx+0x1fd2c711]
  42543e:	dec    esp
  42543f:	jmp    0x425463
	...
  4254b4:	loopne 0x425525
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	sahf   
  4254c1:	pusha  
  4254c2:	inc    ebp
  4254c3:	push   esp
  4254c4:	pop    es
  4254c5:	lea    eax,[ecx]
  4254c7:	add    ch,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [esp+edi*4],ah
  4254ce:	popf   
  4254cf:	sahf   
  4254d0:	test   BYTE PTR [eax+0x49],0xb4
  4254d4:	sbb    bl,dl
  4254d6:	lds    edi,FWORD PTR [ebp-0x3517d23b]
  4254dc:	popa   
  4254dd:	jmp    0x40e071ac
  4254e2:	sub    DWORD PTR [esi],ebx
  4254e4:	sub    ebp,DWORD PTR [edi+0x67]
  4254e7:	jnp    0x425529
  4254e9:	push   ebp
  4254ea:	(bad)
  4254ed:	shl    BYTE PTR [ebx-0x44],cl
  4254f0:	xor    al,0xb4
  4254f2:	fneni(8087 only) 
  4254f4:	dec    DWORD PTR [eax]
  4254f6:	push   ebp
  4254f7:	push   esp
  4254f8:	fwait
  4254f9:	int3   
  4254fa:	ja     0x425518
  4254fc:	pop    es
  4254fd:	stos   BYTE PTR es:[edi],al
  4254fe:	inc    edx
  4254ff:	pop    edx
  425500:	(bad)  
  425502:	xchg   esi,eax
  425503:	int3   
  425504:	sub    cl,ah
  425506:	and    al,0x11
  425508:	mov    bl,0x2c
  42550a:	jg     0x425560
  42550c:	push   ecx
  42550d:	dec    edx
  42550e:	xor    al,0xfd
  425510:	aaa    
  425511:	(bad)  
  425512:	into   
  425513:	popf   
  425514:	iret   
  425515:	ret    0x6e1e
  425518:	out    dx,eax
  425519:	dec    esp
  42551a:	leave  
  42551b:	pop    eax
  42551c:	ror    BYTE PTR [esi],0xd7
  42551f:	nop
  425520:	dec    ecx
  425521:	jo     0x4254b9
  425523:	(bad)  
  425524:	dec    edx
  425525:	pop    es
  425526:	mov    eax,0x4faccd5a
  42552b:	scas   al,BYTE PTR es:[edi]
  42552c:	jns    0x4254e6
  42552e:	mov    ebp,0x570bf623
  425533:	mov    WORD PTR [edx-0x75],?
  425536:	mov    DWORD PTR [esi+0x2d],ecx
  425539:	mov    ch,0x4d
  42553b:	int    0x37
  42553d:	mov    al,ds:0xa353a4ef
  425542:	cs inc ecx
  425544:	in     eax,dx
  425545:	push   edi
  425546:	fld    TBYTE PTR [edx]
  425548:	jp     0x425562
  42554a:	enter  0x8a5a,0xb6
  42554e:	mov    WORD PTR [edx],fs
  425550:	push   ecx
  425551:	dec    edx
  425552:	push   ss
  425553:	(bad)  [ecx+0x20097329]
  425559:	xchg   DWORD PTR [ebp-0x19],edi
  42555c:	pop    esi
  42555d:	mov    WORD PTR [edx],es
  42555f:	dec    ebx
  425560:	out    dx,eax
  425561:	or     BYTE PTR [edx+0x2b4360f7],dh
  425567:	nop
  425568:	push   es
  425569:	ins    DWORD PTR es:[edi],dx
  42556a:	or     ebp,edx
  42556c:	call   0x2127:0xebef406d
  425573:	pop    edi
  425574:	int    0xd1
  425576:	fsubp  st(0),st
  425578:	fild   DWORD PTR [eax+0x3f4b96de]
  42557e:	push   esp
  42557f:	xchg   edx,eax
  425580:	dec    edx
  425581:	ret    0x33d8
  425584:	out    0xf4,eax
  425586:	fnstcw WORD PTR [edx-0x13]
  425589:	push   ebp
  42558a:	mov    ebx,0x2c770a20
  42558f:	fistp  DWORD PTR [edx-0x22]
  425592:	pop    ecx
  425593:	into   
  425594:	jp     0x42558b
  425596:	xor    ecx,ecx
  425598:	cdq    
  425599:	fdivr  st,st(4)
  42559b:	inc    eax
  42559c:	mov    eax,ds:0x2ccfd5fe
  4255a1:	inc    ecx
  4255a2:	pop    edx
  4255a3:	lods   eax,DWORD PTR ds:[esi]
  4255a4:	jnp    0x4255dc
  4255a6:	aam    0xf2
  4255a8:	fcomp  DWORD PTR [esi]
  4255aa:	mov    BYTE PTR [edi],cl
  4255ac:	mov    edx,0x540a9e40
  4255b1:	pusha  
  4255b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255b4:	add    BYTE PTR [ecx-0x5a349457],ah
  4255ba:	int3   
  4255bb:	jmp    0xbe:0x17136a8e
	...
  425632:	add    BYTE PTR [eax],al
  425634:	mov    esp,0xfefffc92
  425639:	(bad)  
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	push   edx
  425641:	bound  ebp,QWORD PTR [edx]
  425643:	xchg   ecx,eax
  425644:	cld    
  425645:	lea    eax,[ecx]
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [edi-0x18f0e920],ch
  425651:	mov    al,ds:0xa0ab8acf
  425656:	mov    cl,0xd8
  425658:	xchg   esi,eax
  425659:	sub    al,0xd6
  42565b:	out    dx,eax
  42565c:	test   BYTE PTR [ecx-0x32],ah
  42565f:	js     0x4256c7
  425661:	mov    dh,BYTE PTR [edi+ebp*1]
  425664:	mov    bx,0x5d82
  425668:	aam    0xe4
  42566a:	and    dl,BYTE PTR [eax]
  42566c:	mov    cl,BYTE PTR [edi-0x180e8a0]
  425672:	inc    ebx
  425673:	aas    
  425674:	outs   dx,DWORD PTR ds:[esi]
  425675:	test   BYTE PTR [eax-0x4a],0x95
  425679:	pop    ds
  42567a:	jmp    0x5cf4:0xf0c0bc59
  425681:	xor    esi,DWORD PTR [esi]
  425683:	push   0x4f
  425685:	repnz arpl WORD PTR es:[edx+0x4acf7b3],bx
  42568d:	cmp    ebx,esi
  42568f:	mov    WORD PTR [esi-0x7378fe36],ss
  425695:	mov    ebp,0x2f563e57
  42569a:	adc    ebp,ebp
  42569c:	fst    DWORD PTR [edi+edi*8+0x6]
  4256a0:	dec    esi
  4256a1:	sbb    eax,0x642ec94d
  4256a6:	add    al,0x38
  4256a8:	cmp    DWORD PTR [eax+0x69157ca4],0x6f069dbc
  4256b2:	mov    dh,0x82
  4256b4:	jmp    0x425674
  4256b6:	les    ebp,FWORD PTR [eax]
  4256b8:	sbb    DWORD PTR [ebx-0x5e39c4bc],ecx
  4256be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256bf:	jmp    0x9a59:0x963e08dd
  4256c6:	in     al,0xb2
  4256c8:	push   edi
  4256c9:	icebp  
  4256ca:	or     DWORD PTR [edx-0x3c50fa15],esp
  4256d0:	sub    esi,DWORD PTR [ecx]
  4256d2:	mov    dl,0x4b
  4256d4:	add    dh,BYTE PTR [ebx]
  4256d6:	jl     0x4256fa
  4256d8:	adc    DWORD PTR ds:0xa447aef7,0x6f
  4256df:	push   es
  4256e0:	rcr    BYTE PTR [eax],cl
  4256e2:	addr16 mov bh,0x65
  4256e5:	pop    eax
  4256e6:	bsr    edx,DWORD PTR [ecx]
  4256e9:	iret   
  4256ea:	xchg   ebp,eax
  4256eb:	xor    cl,ch
  4256ed:	xchg   DWORD PTR [edi],ebx
  4256ef:	int3   
  4256f0:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256f2:	cmp    esp,esp
  4256f4:	ins    DWORD PTR es:[edi],dx
  4256f5:	add    ebp,DWORD PTR [esi+0x74]
  4256f8:	lods   eax,DWORD PTR ds:[esi]
  4256f9:	stc    
  4256fa:	xchg   ebx,eax
  4256fb:	(bad)  
  4256fc:	ins    BYTE PTR es:[edi],dx
  4256fd:	outs   dx,DWORD PTR ds:[esi]
  4256fe:	aad    0x85
  425700:	mov    ebp,ebp
  425702:	sub    BYTE PTR [esp+ecx*8],ch
  425705:	pop    eax
  425706:	scas   al,BYTE PTR es:[edi]
  425707:	fidivr DWORD PTR [edi-0x4dbe9f39]
  42570d:	push   eax
  42570e:	adc    ebx,DWORD PTR [ebp-0xa]
  425711:	adc    BYTE PTR [eax],ch
  425713:	loopne 0x425709
  425715:	xchg   edi,eax
  425716:	pushf  
  425717:	fsub   QWORD PTR [edi-0x18]
  42571a:	mov    ds:0x12972d30,al
  42571f:	fild   QWORD PTR [edi]
  425721:	adc    ch,dl
  425723:	dec    ecx
  425724:	imul   ebp,DWORD PTR [edx],0xffffffe2
  425727:	sub    ch,BYTE PTR [edx-0x7cf21b46]
  42572d:	ja     0x425742
  42572f:	or     DWORD PTR [esi+ebx*2-0x4ddb4aac],0xffffffe1
  425737:	inc    ebp
  425738:	(bad)  
  425739:	out    dx,al
  42573a:	push   edi
  42573b:	js     0x4256ce
  42573d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42573e:	mov    WORD PTR [esp+ebp*8],?
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	pop    es
  4257c1:	fld    DWORD PTR [ebp+0x18ef1f6]
  4257c7:	add    ch,dh
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    al,ah
  4257cd:	in     eax,0xa6
  4257cf:	mov    ch,0xc6
  4257d1:	adc    edi,DWORD PTR [edx+0xbeecdbb]
  4257d7:	ins    DWORD PTR es:[edi],dx
  4257d8:	xchg   ebp,eax
  4257d9:	std    
  4257da:	add    al,0x8
  4257dc:	pusha  
  4257dd:	add    BYTE PTR [ecx-0x345abf64],dl
  4257e3:	aad    0xc8
  4257e5:	add    BYTE PTR [ebx+0x2d10e7a1],cl
  4257eb:	call   0x6be4cac
  4257f0:	std    
  4257f1:	popf   
  4257f2:	push   0x7
  4257f4:	jl     0x4257a7
  4257f6:	test   BYTE PTR [esp+ecx*1-0x163f9f92],bh
  4257fd:	stc    
  4257fe:	pusha  
  4257ff:	imul   BYTE PTR ds:0xe4bc8946
  425805:	or     dh,al
  425807:	sub    bl,ch
  425809:	aas    
  42580a:	into   
  42580b:	inc    ecx
  42580c:	jecxz  0x42579c
  42580e:	or     dh,dl
  425810:	and    eax,0xc30f63b1
  425815:	mov    eax,0x11b09167
  42581a:	loopne 0x425826
  42581c:	xor    ebx,DWORD PTR [edx+0x38]
  42581f:	in     eax,0x9b
  425821:	add    ch,dh
  425823:	call   0xd52c:0x18469f46
  42582a:	or     DWORD PTR [ebx+0x40],esp
  42582d:	jge    0x42589a
  42582f:	outs   dx,DWORD PTR ds:[esi]
  425830:	inc    edi
  425831:	jno    0x4257fb
  425833:	mov    eax,DWORD PTR [edx-0x67]
  425836:	enterw 0x357b,0xff
  42583b:	mov    dl,0x97
  42583d:	push   esi
  42583e:	pop    ebp
  42583f:	retf   0xe07e
  425842:	mov    ds:0xe60db29a,eax
  425847:	loope  0x42589b
  425849:	repnz inc edx
  42584b:	jne    0x425820
  42584d:	sbb    bl,BYTE PTR [ebx]
  42584f:	push   edi
  425850:	nop
  425851:	test   DWORD PTR [ebx-0x7f],esp
  425854:	jns    0x42581d
  425856:	mov    ah,0xba
  425858:	jge    0x42587d
  42585a:	in     eax,0x45
  42585c:	cmp    DWORD PTR [eax+0x3de43dbe],ebp
  425862:	rol    BYTE PTR [ebx+0x72],0xb0
  425866:	(bad)  
  425867:	adc    edx,DWORD PTR [edx+ebx*2-0x7a4ddb06]
  42586e:	xchg   ebp,eax
  42586f:	push   cs
  425870:	inc    esp
  425871:	mov    ch,0xf3
  425873:	nop
  425874:	push   es
  425875:	mov    ch,0xe0
  425877:	mov    bh,0x72
  425879:	repnz xchg ebx,eax
  42587b:	(bad)  
  42587c:	mov    cl,0x84
  42587e:	and    DWORD PTR [edx-0x40],eax
  425881:	lds    eax,FWORD PTR [ecx+ebp*2]
  425884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425885:	or     DWORD PTR [edx+0xd05d4e5],eax
  42588b:	xchg   edx,eax
  42588c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42588d:	rol    DWORD PTR [edx+edi*1-0x6c],1
  425891:	jae    0x425912
  425893:	ds pop ebp
  425895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425896:	xlat   BYTE PTR ds:[ebx]
  425897:	push   0x5dec68d4
  42589c:	mov    BYTE PTR [edi],0xd9
  42589f:	aad    0xfc
  4258a1:	jae    0x4258a4
  4258a3:	test   al,0x6d
  4258a5:	xchg   esp,eax
  4258a6:	dec    ebx
  4258a7:	and    BYTE PTR [eax],bl
  4258a9:	sub    ebp,0x42
  4258ac:	jp     0x42585c
  4258ae:	xchg   BYTE PTR gs:[eax+0x73d5c43e],dh
  4258b5:	xor    BYTE PTR ds:0xd3b056fa,dh
  4258bb:	hlt    
  4258bc:	pop    edi
  4258bd:	push   ebp
  4258be:	mov    al,ds:0x2e55
	...
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	stc    
  425941:	add    BYTE PTR [eiz*8+0x18fe6],dl
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [ebp+eiz*1-0x5f],dl
  42594f:	ret    0xd4c1
  425952:	and    bh,ah
  425954:	in     al,0xe7
  425956:	stos   BYTE PTR es:[edi],al
  425957:	mov    ah,0x14
  425959:	loop   0x42593e
  42595b:	imul   edx,DWORD PTR [esi+0x643196e],0x14
  425962:	inc    eax
  425963:	xchg   DWORD PTR [ecx],esi
  425965:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  425967:	jnp    0x425956
  425969:	ret    
  42596a:	daa    
  42596b:	hlt    
  42596c:	(bad)  
  42596d:	ror    BYTE PTR [ebx+0x7f16ca87],1
  425973:	and    al,0x8b
  425975:	fnsave [esi+0x44]
  425978:	jg     0xdd295ad0
  42597e:	jge    0x42595d
  425980:	pusha  
  425981:	rcl    BYTE PTR [edi+ebp*4-0x51],0xcc
  425986:	mov    ebp,0xced6a17d
  42598b:	sbb    eax,0x366f8b62
  425990:	gs repz cli 
  425993:	jmp    FWORD PTR [edi+0x41c5b1cf]
  425999:	test   DWORD PTR [edx+0x35ad7af6],ebx
  42599f:	mov    eax,ds:0xc32c1aea
  4259a4:	in     eax,0x8e
  4259a6:	arpl   WORD PTR [eax+ebp*4],si
  4259a9:	sub    edx,edi
  4259ab:	sbb    bl,bl
  4259ad:	xor    esi,DWORD PTR [ebp-0x31]
  4259b0:	sbb    DWORD PTR fs:[esi+eiz*1-0x46],esp
  4259b5:	cdq    
  4259b6:	aas    
  4259b7:	stc    
  4259b8:	mov    es,WORD PTR [ecx+0x62359b0]
  4259be:	mov    dh,0xb3
  4259c0:	sar    BYTE PTR [ebx],cl
  4259c2:	fwait
  4259c3:	or     cl,BYTE PTR [ebx]
  4259c5:	xchg   esp,eax
  4259c6:	jo     0x425a1a
  4259c8:	xor    DWORD PTR [eax+0x6d4de595],0xffffff84
  4259cf:	data16 scas al,BYTE PTR es:[edi]
  4259d1:	retf   
  4259d2:	(bad)  
  4259d3:	push   edi
  4259d4:	repnz sbb BYTE PTR es:[eax],dh
  4259d8:	mov    esi,0x2fb3e719
  4259dd:	fucomi st,st(7)
  4259df:	xchg   esi,eax
  4259e0:	add    al,0xdc
  4259e2:	loop   0x425a4f
  4259e4:	mov    eax,0x6093c255
  4259e9:	fst    QWORD PTR [edx-0x28554de3]
  4259ef:	iret   
  4259f0:	pminub mm4,mm0
  4259f3:	adc    eax,0x4928d530
  4259f8:	out    0xc6,al
  4259fa:	imul   eax,DWORD PTR [edx+0x50],0xbe0ad03f
  425a01:	ds xchg esi,eax
  425a03:	adc    DWORD PTR [eax+0x261a1ccd],ebx
  425a09:	mov    eax,0x9bc77663
  425a0e:	ja     0x4259d6
  425a10:	fsubr  QWORD PTR [edi+eiz*1-0x3ff76cf0]
  425a17:	sub    DWORD PTR [ebx-0x39ddde12],0x79a088ac
  425a21:	test   BYTE PTR [edx+eax*8+0x54],dh
  425a25:	fwait
  425a26:	mov    al,BYTE PTR [ebp+0x451f0f74]
  425a2c:	imul   edi,DWORD PTR [ebx],0x90703e47
  425a32:	xor    eax,0x41630ac3
  425a37:	mov    ah,0xb9
  425a39:	cli    
  425a3a:	shl    DWORD PTR [edi],1
  425a3c:	cs sbb eax,0x42b42b
	...
  425ab2:	add    BYTE PTR [eax],al
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	inc    esi
  425ac1:	mov    ebp,0x90db3d1f
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	cmc    
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    bl,bh
  425acd:	(bad)  
  425ace:	mov    cl,0x86
  425ad0:	xchg   DWORD PTR [ebx+0x1b],esi
  425ad3:	sbb    ch,dl
  425ad5:	das    
  425ad6:	jno    0x425aea
  425ad8:	(bad)  
  425ad9:	or     eax,0x63a53f57
  425ade:	fmul   st(0),st
  425ae0:	add    eax,0x704eaff
  425ae5:	lods   eax,DWORD PTR ds:[esi]
  425ae6:	out    0x7f,eax
  425ae8:	jg     0x425ae2
  425aea:	sbb    BYTE PTR [edx+0x29d93e],ch
  425af0:	sahf   
  425af1:	stos   BYTE PTR es:[edi],al
  425af2:	mov    esp,0x6d85f7a5
  425af7:	pusha  
  425af8:	mov    bl,0x97
  425afa:	repnz ins BYTE PTR es:[edi],dx
  425afc:	jno    0x425b63
  425afe:	pop    ss
  425aff:	arpl   dx,dx
  425b01:	cmc    
  425b02:	fbstp  TBYTE PTR ds:0x37960ca9
  425b08:	pop    esi
  425b09:	mov    edi,0x4de1fe81
  425b0e:	or     esp,DWORD PTR [edi+0x75]
  425b11:	dec    ebx
  425b12:	xor    BYTE PTR [edi-0x1c],bl
  425b15:	cmp    eax,0xf67a196c
  425b1a:	mov    DWORD PTR [ecx],edx
  425b1c:	xchg   esi,eax
  425b1d:	xchg   ebx,eax
  425b1e:	pop    edi
  425b1f:	jae    0x425b33
  425b21:	jo     0x425b9e
  425b23:	push   0x69
  425b25:	imul   ecx,DWORD PTR [ebx],0x754ce9e3
  425b2b:	pop    ds
  425b2c:	cmp    ebp,0x63
  425b2f:	mov    ecx,0x48823ffd
  425b34:	test   al,0x6d
  425b36:	xor    DWORD PTR [ebx+eax*4],0x48
  425b3a:	push   esi
  425b3b:	fimul  WORD PTR [esi+0x4d]
  425b3e:	add    BYTE PTR [eax+0x69],dl
  425b41:	dec    edx
  425b42:	and    eax,0xceae152
  425b47:	aaa    
  425b48:	gs jnp 0x425afa
  425b4b:	and    cl,al
  425b4d:	jl     0x425ae5
  425b4f:	ror    esi,0x67
  425b52:	not    al
  425b54:	ror    al,1
  425b56:	inc    eax
  425b57:	(bad)  
  425b58:	in     al,dx
  425b59:	sub    eax,0xb8280595
  425b5e:	(bad)  
  425b5f:	in     al,0x5e
  425b61:	shr    DWORD PTR [esi-0x7a2ba055],0xe9
  425b68:	xor    ch,cl
  425b6a:	ins    DWORD PTR es:[edi],dx
  425b6b:	pusha  
  425b6c:	fdiv   DWORD PTR [eax]
  425b6e:	ficomp WORD PTR [ebp-0x23a1576e]
  425b74:	pop    edx
  425b75:	cmp    DWORD PTR [eax],0xffffffa9
  425b78:	in     eax,0x9b
  425b7a:	sub    bl,al
  425b7c:	and    ch,BYTE PTR [ebp-0x5d]
  425b7f:	aad    0xd6
  425b81:	in     al,0xde
  425b83:	xchg   BYTE PTR ds:0xa90510f3,dh
  425b89:	and    BYTE PTR [edi-0x17e2c19f],dl
  425b8f:	xchg   DWORD PTR [eax+0x4ce7f3a6],edx
  425b95:	jl     0x425bf8
  425b97:	cmp    BYTE PTR cs:[esi-0x4f],0x8d
  425b9c:	fadd   QWORD PTR [ebx+eax*4]
  425b9f:	jecxz  0x425b49
  425ba1:	xor    BYTE PTR [esi-0x5621e224],bl
  425ba7:	aad    0x91
  425ba9:	push   ebx
  425baa:	cmp    dl,0xc9
  425bad:	sbb    al,0xbf
  425baf:	jns    0x425c0e
  425bb1:	fidivr DWORD PTR [ebx]
  425bb3:	mov    ebx,0xeb219b01
  425bb8:	mov    dh,0xb5
  425bba:	push   esi
  425bbb:	push   ecx
  425bbc:	mov    cl,0x1e
  425bbe:	lods   al,BYTE PTR ds:[esi]
  425bbf:	(bad)  
	...
  425c31:	add    BYTE PTR [eax],al
  425c33:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  425c37:	push   0xffffffb6
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	(bad)  
  425c3b:	fdivp  st(2),st
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0x27db0adf
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [edx+0x45],dl
  425c4e:	fstp   DWORD PTR [eax-0x63]
  425c51:	mov    dh,0xe7
  425c53:	cli    
  425c54:	xchg   ebp,eax
  425c55:	retf   0x6f52
  425c58:	push   es
  425c59:	xchg   esi,eax
  425c5a:	push   edx
  425c5b:	retw   
  425c5d:	loope  0x425c07
  425c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c60:	(bad)  
  425c61:	fsubp  st(1),st
  425c63:	pop    es
  425c64:	stos   BYTE PTR es:[edi],al
  425c65:	loope  0x425cb5
  425c67:	or     eax,0x164cc27e
  425c6c:	adc    edx,0xffffffcd
  425c6f:	jmp    0x425c4e
  425c71:	into   
  425c72:	pop    ecx
  425c73:	jns    0x425cc2
  425c75:	loopne 0x425c93
  425c77:	das    
  425c78:	cmp    bh,BYTE PTR [ebx+0x36]
  425c7b:	arpl   WORD PTR [ebx+0x1b],ax
  425c7e:	(bad)  
  425c7f:	mov    ebx,0xfab28b73
  425c84:	mov    cs,WORD PTR es:[esi]
  425c87:	adc    DWORD PTR [edx],ebx
  425c89:	or     DWORD PTR [eax-0x2b],esp
  425c8c:	fnstenv [edi]
  425c8e:	(bad)  
  425c8f:	push   ds
  425c90:	icebp  
  425c91:	jno    0x425c6b
  425c93:	lods   eax,DWORD PTR ds:[esi]
  425c94:	pushf  
  425c95:	aam    0xe8
  425c97:	mov    bh,bh
  425c99:	lahf   
  425c9a:	call   0xfd23f3bc
  425c9f:	loop   0x425cc2
  425ca1:	xchg   esi,eax
  425ca2:	dec    esi
  425ca3:	sbb    eax,0xba641672
  425ca8:	ret    0xf23a
  425cab:	push   ss
  425cac:	adc    eax,0xd6e8091
  425cb1:	shl    BYTE PTR [edi+0x24],cl
  425cb4:	ror    DWORD PTR [edi],1
  425cb6:	mov    DWORD PTR [ebp+ebx*8-0x5f423324],0xa6812721
  425cc1:	inc    ebx
  425cc2:	or     edi,edi
  425cc4:	lahf   
  425cc5:	lea    ebp,[eax-0x7e]
  425cc8:	scas   al,BYTE PTR es:[edi]
  425cc9:	scas   eax,DWORD PTR es:[edi]
  425cca:	and    BYTE PTR [ecx+esi*1],ch
  425ccd:	cmp    cl,BYTE PTR [edx+ebp*2]
  425cd0:	adc    al,0xbc
  425cd2:	ret    
  425cd3:	sbb    edx,ebx
  425cd5:	les    ebx,FWORD PTR [ebx]
  425cd7:	(bad)  [ebp+edi*8-0x371d7642]
  425cde:	jmp    0xbe573e2e
  425ce3:	packuswb mm5,QWORD PTR [edi+esi*2-0x7d]
  425ce8:	das    
  425ce9:	pop    edx
  425cea:	pusha  
  425ceb:	pop    ds
  425cec:	fwait
  425ced:	pop    edx
  425cee:	(bad)  
  425cef:	dec    ebx
  425cf0:	scas   al,BYTE PTR es:[edi]
  425cf1:	sbb    dh,BYTE PTR [ebx-0x2d7d25c2]
  425cf7:	inc    esi
  425cf8:	lds    eax,FWORD PTR [edi*8+0xe448378]
  425cff:	out    dx,al
  425d00:	sbb    al,0x8
  425d02:	and    bh,BYTE PTR [ecx-0x78]
  425d05:	stos   BYTE PTR es:[edi],al
  425d06:	inc    esi
  425d07:	out    dx,eax
  425d08:	out    0xc7,al
  425d0a:	repz cmc 
  425d0c:	add    cl,BYTE PTR [edx+0x4d]
  425d0f:	inc    edi
  425d10:	cmovs  ebx,DWORD PTR [edi+0x37]
  425d14:	aaa    
  425d15:	jne    0x425d52
  425d17:	imul   BYTE PTR [ecx-0x3c]
  425d1a:	xor    BYTE PTR [ebp-0x5ac8a934],bl
  425d20:	fistp  DWORD PTR [eax-0x68dff65a]
  425d26:	add    dl,ah
  425d28:	sbb    dh,BYTE PTR [ecx-0x1cace5fb]
  425d2e:	pop    esi
  425d2f:	mov    WORD PTR [esi+0x1af45ee9],?
  425d35:	mov    WORD PTR [ebp+0x4f],ss
  425d38:	mov    ch,0xad
  425d3a:	xchg   esi,eax
  425d3b:	pop    ss
  425d3c:	aas    
  425d3d:	inc    esi
  425d3e:	ret    
  425d3f:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  425db2:	add    BYTE PTR [eax],al
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	imul   edi,DWORD PTR [ebx-0x6d3a7c62],0x1
  425dc7:	add    ch,dh
  425dc9:	add    BYTE PTR [eax],al
  425dcb:	add    bl,ch
  425dcd:	popa   
  425dce:	sbb    eax,0x71cffef8
  425dd3:	fdiv   QWORD PTR ds:0xe25622b7
  425dd9:	je     0x425d5b
  425ddb:	pop    eax
  425ddc:	fs dec esi
  425dde:	or     al,0x89
  425de0:	xchg   ebx,eax
  425de1:	xor    cl,BYTE PTR [ecx+ebx*1]
  425de4:	jle    0x425da0
  425de6:	inc    ebp
  425de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de8:	inc    eax
  425de9:	pop    edi
  425dea:	cdq    
  425deb:	push   ds
  425dec:	sbb    eax,0x9f32b459
  425df1:	pop    ebp
  425df2:	jb     0x425deb
  425df4:	clc    
  425df5:	push   eax
  425df6:	(bad)  
  425df7:	stc    
  425df8:	jge    0x425e67
  425dfa:	pop    esp
  425dfb:	push   0xffffffeb
  425dfd:	jmp    0x1032:0xa1642444
  425e04:	ret    
  425e05:	enter  0x6bd4,0xa6
  425e09:	fs mov eax,0x3a853b58
  425e0f:	push   0xa
  425e11:	imul   BYTE PTR cs:[edi+0x59965752]
  425e18:	jmp    0x425e0b
  425e1a:	jg     0x425dc1
  425e1c:	iret   
  425e1d:	lock fstp TBYTE PTR [eax]
  425e20:	outs   dx,DWORD PTR ds:[esi]
  425e21:	sbb    ebp,DWORD PTR [esi+0x50]
  425e24:	add    al,0x83
  425e26:	or     DWORD PTR [ecx-0x4c],ecx
  425e29:	inc    ecx
  425e2a:	sti    
  425e2b:	pop    ds
  425e2c:	pop    esp
  425e2d:	js     0x425e0b
  425e2f:	sti    
  425e30:	sbb    dh,BYTE PTR [ebp+0x2e745c28]
  425e36:	dec    edx
  425e37:	mov    edx,0x4c3e578
  425e3c:	sbb    eax,0x7508317c
  425e41:	aad    0x1e
  425e43:	mov    edi,0xee6ecc4f
  425e48:	xchg   BYTE PTR [ebp+0x21d567f4],cl
  425e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e4f:	pop    ss
  425e50:	mov    bl,0xfc
  425e52:	cli    
  425e53:	icebp  
  425e54:	ja     0x425e71
  425e56:	adc    dl,ch
  425e58:	pusha  
  425e59:	mov    ds:0xee78da0e,eax
  425e5e:	or     bl,BYTE PTR [ebx]
  425e60:	mov    bl,0x58
  425e62:	leave  
  425e63:	sbb    eax,0x6fedc449
  425e68:	sbb    dl,BYTE PTR [esi]
  425e6a:	dec    ebp
  425e6b:	cmp    eax,0x471d2e02
  425e70:	shl    BYTE PTR [esi-0x4c],1
  425e73:	pop    es
  425e74:	aam    0xa1
  425e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e77:	mov    esp,ebx
  425e79:	mov    edx,0x15f4b23d
  425e7e:	xor    esi,edi
  425e80:	push   esi
  425e81:	mul    BYTE PTR [ebx+0xe]
  425e84:	ss daa 
  425e86:	aaa    
  425e87:	cmp    esi,DWORD PTR [eax+0x418b36c7]
  425e8d:	pop    ds
  425e8e:	and    ch,bh
  425e90:	sbb    ebx,DWORD PTR ds:0xb386dec
  425e96:	pop    edi
  425e97:	pop    edi
  425e98:	xchg   ecx,eax
  425e99:	(bad)  
  425e9b:	aam    0xca
  425e9d:	daa    
  425e9e:	mov    esi,0x3f768725
  425ea3:	push   ss
  425ea4:	cmp    ah,BYTE PTR fs:[eax+0x5f]
  425ea8:	aad    0x42
  425eaa:	mov    al,0x88
  425eac:	mov    dl,0xee
  425eae:	rep ins DWORD PTR es:[edi],dx
  425eb0:	stos   BYTE PTR es:[edi],al
  425eb1:	and    al,0x6b
  425eb3:	and    BYTE PTR [ecx],bh
  425eb5:	mov    esp,0x12ea5437
  425eba:	lods   al,BYTE PTR ds:[esi]
  425ebb:	push   esi
  425ebc:	and    BYTE PTR [ecx-0x4],cl
  425ebf:	pop    edi
  425ec0:	adc    eax,DWORD PTR [eax]
	...
  425f32:	add    BYTE PTR [eax],al
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx-0x43]
  425f41:	test   BYTE PTR [ebp+0x193babd],ah
  425f47:	add    ch,dh
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    BYTE PTR [eax],cl
  425f4d:	out    dx,al
  425f4e:	fistp  DWORD PTR [edx]
  425f50:	pop    esi
  425f51:	mov    WORD PTR [edi+esi*1],es
  425f54:	jle    0x425f63
  425f56:	les    edi,FWORD PTR [eax+0x3]
  425f59:	or     eax,0x1a5c4dc8
  425f5e:	mov    edx,0x395c5686
  425f63:	popa   
  425f64:	popa   
  425f65:	mov    es,WORD PTR [edx+0x700c6e52]
  425f6b:	xchg   BYTE PTR ds:0xb745aa98,dh
  425f71:	dec    ebx
  425f72:	out    0x68,eax
  425f74:	push   edx
  425f75:	mov    dl,0x6a
  425f77:	mov    edi,DWORD PTR [edx-0x21]
  425f7a:	ins    DWORD PTR es:[edi],dx
  425f7b:	add    esi,DWORD PTR [eax]
  425f7d:	dec    edx
  425f7e:	in     eax,dx
  425f7f:	pop    ss
  425f80:	push   es
  425f81:	xor    eax,ebx
  425f83:	dec    esp
  425f84:	div    DWORD PTR [ecx+edx*2+0x2fd5f256]
  425f8b:	jl     0x425fff
  425f8d:	in     eax,0xc4
  425f8f:	push   cs
  425f90:	jnp    0x425fc5
  425f92:	adc    BYTE PTR [edx],ch
  425f94:	sbb    BYTE PTR [ebp+0x3],0xa
  425f98:	jle    0x426010
  425f9a:	bound  esi,QWORD PTR [ecx+0x18b42971]
  425fa0:	adc    DWORD PTR [ebp+ebx*8+0x40785e56],0xcb2234c3
  425fab:	or     BYTE PTR ds:0x72a1d487,0x2c
  425fb2:	daa    
  425fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fb4:	shr    edi,cl
  425fb6:	scas   eax,DWORD PTR es:[edi]
  425fb7:	aas    
  425fb8:	pushf  
  425fb9:	adc    edx,DWORD PTR [edx-0x575ecb3f]
  425fbf:	push   ds
  425fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fc1:	or     al,0x12
  425fc3:	popa   
  425fc4:	arpl   WORD PTR [eax],ax
  425fc6:	pop    ebp
  425fc7:	rcl    BYTE PTR [ebp+0x52d74c3a],cl
  425fcd:	scas   al,BYTE PTR es:[edi]
  425fce:	out    0xb5,eax
  425fd0:	sbb    BYTE PTR [esi-0x1173c0f0],cl
  425fd6:	ret    
  425fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd8:	inc    esp
  425fd9:	dec    esp
  425fda:	cmp    al,0xee
  425fdc:	stos   DWORD PTR es:[edi],eax
  425fdd:	inc    ecx
  425fde:	(bad)
  425fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fe2:	mov    dl,0x9
  425fe4:	adc    DWORD PTR [esi+0x11fa9db2],0x7f
  425feb:	out    dx,al
  425fec:	xchg   esi,eax
  425fed:	jae    0x425fc9
  425fef:	les    ebx,FWORD PTR [ebx*4-0x202cfdc6]
  425ff6:	mov    al,bh
  425ff8:	mov    dl,0x1a
  425ffa:	(bad)  
  425ffb:	cwde   
  425ffc:	pop    ss
  425ffd:	push   ecx
  425ffe:	and    eax,0xff7126a5
  426003:	jmp    0x7c4d113a
  426008:	(bad)  
  426009:	out    dx,al
  42600a:	js     0x425fec
  42600c:	mov    cl,0xfc
  42600f:	dec    ebx
  426010:	mov    al,0xbb
  426012:	cld    
  426013:	sahf   
  426014:	mov    ebp,0xb6d1819a
  426019:	xlat   BYTE PTR ds:[ebx]
  42601a:	aas    
  42601b:	fs out 0xd4,eax
  42601e:	mov    ebx,0xb170198b
  426023:	push   es
  426024:	xchg   ebp,eax
  426025:	cmc    
  426026:	sahf   
  426027:	repz test BYTE PTR [edx+ebx*8-0x50],ah
  42602c:	mov    esi,0xbbd25524
  426031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426032:	xchg   edx,eax
  426033:	in     al,dx
  426034:	jmp    0x18542169
  426039:	sub    ebp,edx
  42603b:	int3   
  42603c:	scas   al,BYTE PTR es:[edi]
  42603d:	push   edx
  42603e:	mov    ch,0x21
  426040:	out    dx,al
	...
  4260b1:	add    BYTE PTR [eax],al
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0xeaa51fd0
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    bl,cl
  4260cd:	push   esi
  4260ce:	jns    0x4260f7
  4260d0:	mov    ebp,0xdc031dfc
  4260d5:	push   esi
  4260d6:	pop    ds
  4260d7:	in     eax,dx
  4260d8:	jne    0x42614b
  4260da:	mov    ds:0xd373a051,eax
  4260df:	push   esi
  4260e0:	sub    al,0xa5
  4260e2:	rcr    BYTE PTR [esi],cl
  4260e4:	outs   dx,BYTE PTR ds:[esi]
  4260e5:	ins    BYTE PTR es:[edi],dx
  4260e6:	outs   dx,BYTE PTR ds:[esi]
  4260e7:	loopne 0x426141
  4260e9:	inc    edx
  4260ea:	mov    WORD PTR [esi],gs
  4260ec:	mov    ecx,0xaf3261d
  4260f1:	jle    0x426150
  4260f3:	push   edx
  4260f4:	xor    eax,0xe99b8d3f
  4260f9:	lea    ebx,[esp+ebp*2]
  4260fc:	adc    eax,0xa0a427ea
  426101:	retf   0x4e5b
  426104:	aaa    
  426105:	fs xchg edi,eax
  426107:	mov    fs,WORD PTR [esi+0x3a]
  42610a:	pop    ecx
  42610b:	repz mov ecx,esi
  42610e:	call   0x3f74:0x24af92f4
  426115:	adc    BYTE PTR [ebx+0x5405798b],bh
  42611b:	ss cld 
  42611d:	mul    cl
  42611f:	push   edi
  426120:	test   edx,ebx
  426122:	jb     0x42615c
  426124:	xor    esi,eax
  426126:	(bad)  
  426127:	adc    al,cl
  426129:	enter  0x6676,0xf4
  42612d:	ins    BYTE PTR es:[edi],dx
  42612e:	pop    ss
  42612f:	xchg   edx,eax
  426130:	cmp    ah,BYTE PTR [esi]
  426132:	adc    BYTE PTR [esi+0x7],0xa9
  426136:	xchg   ecx,eax
  426137:	jae    0x4261b3
  426139:	inc    eax
  42613a:	jo     0x42611b
  42613c:	inc    esp
  42613d:	ins    BYTE PTR es:[edi],dx
  42613e:	or     al,0xdf
  426140:	add    BYTE PTR [ebp+0x21],bl
  426143:	es stc 
  426145:	jno    0x4261ad
  426147:	sub    BYTE PTR [ebx-0x7309f396],ch
  42614d:	xchg   ebx,eax
  42614e:	push   0x5b
  426150:	add    eax,0x8b7f67b7
  426155:	popa   
  426156:	lock mov DWORD PTR [esi-0x3bd86aca],edi
  42615d:	int3   
  42615e:	sbb    eax,0xaf8bf6f
  426163:	into   
  426164:	fwait
  426165:	add    ebp,DWORD PTR [ecx+edx*8-0xb]
  426169:	lea    ecx,[ebx+0x41a95ab5]
  42616f:	push   ebp
  426170:	mov    dh,0x4
  426172:	ins    BYTE PTR es:[edi],dx
  426173:	jno    0x426162
  426175:	jmp    FWORD PTR [eax+0x6c19d338]
  42617b:	das    
  42617c:	add    edx,DWORD PTR [eax+ebp*2+0x7a]
  426180:	pusha  
  426181:	scas   al,BYTE PTR es:[edi]
  426182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426183:	xor    eax,0xcdab9a56
  426188:	jns    0x4261f1
  42618a:	mov    edi,0x5929a367
  42618f:	sbb    ecx,DWORD PTR [edi]
  426191:	mov    bh,0xe4
  426193:	je     0x426146
  426195:	xchg   edx,eax
  426196:	mov    ecx,0xd782e94f
  42619b:	jo     0x42615a
  42619d:	rol    BYTE PTR [edi],cl
  42619f:	popf   
  4261a0:	jne    0x4261a9
  4261a2:	xchg   edx,eax
  4261a3:	ret    0xe02f
  4261a6:	(bad)  
  4261a7:	std    
  4261a8:	add    ebp,DWORD PTR [eax+ebp*8+0x2daacee0]
  4261af:	call   0x773b5314
  4261b4:	out    0xe9,al
  4261b6:	xchg   ecx,eax
  4261b7:	mov    bl,0x4f
  4261b9:	out    dx,eax
  4261ba:	pop    es
  4261bb:	xchg   edi,eax
  4261bc:	or     DWORD PTR [edx-0x2d],0xf889
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0xfffffff9
  426241:	aad    0xb5
  426243:	jns    0x4261e9
  426245:	xchg   ebp,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	cmc    
  426249:	add    BYTE PTR [eax],al
  42624b:	add    BYTE PTR [edi-0x29],ch
  42624e:	sub    dh,BYTE PTR [eax-0x1a]
  426251:	call   0xe7de69cf
  426256:	xchg   edi,eax
  426257:	mov    ds:0xa2426996,eax
  42625c:	or     bh,BYTE PTR [edi]
  42625e:	add    DWORD PTR [eax-0x7c015ad1],esi
  426264:	add    eax,0xc99a8255
  426269:	jp     0x4262ea
  42626b:	pop    ecx
  42626c:	arpl   WORD PTR [ebx+ebx*8-0x2f8b9c4d],ax
  426273:	es pushf 
  426275:	dec    edx
  426276:	or     al,0xfc
  426278:	out    dx,al
  426279:	mul    BYTE PTR [eax+edi*1+0x47fb3824]
  426280:	into   
  426281:	fidiv  WORD PTR [ecx]
  426283:	retf   
  426284:	inc    esp
  426285:	test   BYTE PTR ds:0xdcefddb9,dl
  42628b:	popf   
  42628c:	mov    ebx,0xc36f6377
  426291:	sub    al,0xba
  426293:	mov    ah,0x11
  426295:	scas   al,BYTE PTR es:[edi]
  426296:	mov    eax,0x84d4f42d
  42629b:	add    al,BYTE PTR [ecx+ebp*2]
  42629e:	sbb    edx,ebp
  4262a0:	cmp    BYTE PTR [ebx-0x10e5fa4f],cl
  4262a6:	(bad)  
  4262a7:	loop   0x42628f
  4262a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262aa:	cmp    DWORD PTR [edi-0x6a9c96fc],edi
  4262b0:	sbb    DWORD PTR [ebx],ebx
  4262b2:	xchg   esp,eax
  4262b3:	and    BYTE PTR [eax+ebp*2+0x2408faff],ch
  4262ba:	and    bh,BYTE PTR [eax]
  4262bc:	inc    ebp
  4262bd:	push   es
  4262be:	into   
  4262bf:	test   al,0x31
  4262c1:	jno    0x4262eb
  4262c3:	ret    0xcae6
  4262c6:	ret    
  4262c7:	sub    eax,0xca1df68
  4262cc:	sub    al,BYTE PTR [eax]
  4262ce:	dec    edi
  4262cf:	sbb    ah,dl
  4262d1:	or     bl,BYTE PTR [eax-0x258e851b]
  4262d7:	jbe    0x426329
  4262d9:	rcl    BYTE PTR [edi+0x2b],1
  4262dc:	jge    0x4262fe
  4262de:	(bad)  
  4262df:	jg     0x4262b1
  4262e1:	scas   eax,DWORD PTR es:[edi]
  4262e2:	cmp    ch,BYTE PTR ds:0x5695b75
  4262e8:	mov    ds,WORD PTR [edx]
  4262ea:	push   ss
  4262eb:	cwde   
  4262ec:	and    eax,0x7b8de784
  4262f1:	sbb    eax,edx
  4262f3:	jecxz  0x4262af
  4262f5:	add    eax,0xfe6635da
  4262fa:	add    DWORD PTR [ecx-0x6bcbef97],esi
  426300:	xchg   ebx,eax
  426301:	loopne 0x4262aa
  426303:	sub    al,0x30
  426305:	sub    BYTE PTR [ecx],bl
  426307:	div    DWORD PTR [eax]
  426309:	ror    BYTE PTR [ebx+0x56],cl
  42630c:	aaa    
  42630d:	sub    ebx,DWORD PTR [esi+0x7ed1a1a]
  426313:	inc    eax
  426314:	dec    ebp
  426315:	xor    BYTE PTR [ebx],0xc9
  426318:	or     al,0x57
  42631a:	fidivr DWORD PTR [edi+0x7f50c963]
  426320:	aas    
  426321:	shl    BYTE PTR [ebx],cl
  426323:	inc    edi
  426324:	xchg   ebp,eax
  426325:	sbb    eax,0x67ba91b4
  42632a:	je     0x4262eb
  42632c:	repz pop esi
  42632e:	lahf   
  42632f:	in     al,0x44
  426331:	sti    
  426332:	cli    
  426333:	xchg   esp,eax
  426334:	push   ss
  426335:	pop    es
  426336:	mov    ecx,0xa2b81276
  42633b:	in     eax,0xa0
  42633d:	(bad)  
  42633e:	std    
  42633f:	xchg   DWORD PTR [esi],ebx
	...
  4263b1:	add    BYTE PTR [eax],al
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	pusha  
  4263c1:	or     BYTE PTR [eax+0x19699f6],bl
  4263c7:	add    ch,dh
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [ecx+eax*2],ah
  4263ce:	sahf   
  4263cf:	dec    esp
  4263d0:	int    0x3e
  4263d2:	xor    dl,dl
  4263d4:	pop    ebx
  4263d5:	lods   al,BYTE PTR ds:[esi]
  4263d6:	repnz xchg esp,eax
  4263d8:	loop   0x4263e7
  4263da:	xchg   edx,eax
  4263db:	mov    esi,0x91b03209
  4263e0:	in     al,dx
  4263e1:	call   0x9ca5:0x8164de8
  4263e8:	or     BYTE PTR [ebx+0x4c],0xd0
  4263ec:	enter  0xe08b,0xf
  4263f0:	mov    DWORD PTR [ecx+0x5c],esp
  4263f3:	mov    ebp,edi
  4263f5:	xor    esp,edi
  4263f7:	in     al,dx
  4263f8:	mov    eax,0xb88ef4a4
  4263fd:	push   edx
  4263fe:	popf   
  4263ff:	cmc    
  426400:	gs daa 
  426402:	cmp    bl,0x99
  426405:	fwait
  426406:	adc    BYTE PTR [eax+0x7],cl
  426409:	dec    BYTE PTR [ebx]
  42640b:	push   es
  42640c:	jae    0x426399
  42640e:	out    dx,eax
  42640f:	loope  0x426399
  426411:	(bad)  
  426413:	sbb    eax,0x280fb610
  426418:	(bad)  
  426419:	js     0x4263db
  42641b:	sahf   
  42641c:	xchg   edi,eax
  42641d:	dec    ebx
  42641e:	lods   al,BYTE PTR es:[esi]
  426420:	add    dh,al
  426422:	fldenv [ecx+ebx*1]
  426425:	and    BYTE PTR [edx+0x5e],dl
  426428:	or     edi,DWORD PTR [ebx-0x5f7f2db4]
  42642e:	and    ebx,DWORD PTR [edi+0x7e]
  426431:	mov    al,BYTE PTR [esi]
  426433:	cmc    
  426434:	jecxz  0x42644f
  426436:	lahf   
  426437:	idiv   BYTE PTR [ebx+0x4ff4a1cd]
  42643d:	pushf  
  42643e:	mov    bh,0x7
  426440:	dec    edi
  426441:	mov    dl,0x43
  426443:	pop    ecx
  426444:	jne    0xd2291a08
  42644a:	jmp    0x42642c
  42644c:	addr16 fs aaa 
  42644f:	pop    edi
  426450:	dec    ebx
  426451:	adc    al,0xa4
  426453:	(bad)  
  426454:	test   BYTE PTR [ecx-0x50],ch
  426457:	jg     0x426484
  426459:	int3   
  42645a:	pop    ss
  42645b:	xor    BYTE PTR [ebp-0x7],al
  42645e:	and    BYTE PTR [eax-0x1ed04887],0xca
  426465:	call   0x86db:0xbcbbb349
  42646c:	scas   eax,DWORD PTR es:[edi]
  42646d:	stos   BYTE PTR es:[edi],al
  42646e:	adc    ebx,esi
  426470:	pushf  
  426471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426472:	mov    ecx,0x47f68786
  426477:	repz mov ds:0x2a11d6b6,al
  42647d:	icebp  
  42647e:	dec    esi
  42647f:	mov    ebp,0xe2878937
  426484:	jecxz  0x4264cd
  426486:	mov    al,ds:0xc781d7ab
  42648b:	mov    cl,0xd5
  42648d:	nop
  42648e:	or     eax,0xc8940b56
  426493:	jge    0x42645f
  426495:	in     al,dx
  426496:	test   DWORD PTR [ecx-0x34],ebp
  426499:	push   ecx
  42649a:	pop    ebp
  42649b:	sub    ch,BYTE PTR [ebp+0x49ad54be]
  4264a1:	mov    esp,0xfc48f40b
  4264a6:	push   ebx
  4264a7:	mov    DWORD PTR [edi],0x1d763431
  4264ad:	lods   eax,DWORD PTR ds:[esi]
  4264ae:	stos   BYTE PTR es:[edi],al
  4264af:	jge    0x426489
  4264b1:	arpl   ax,bx
  4264b3:	aaa    
  4264b4:	aad    0x3
  4264b6:	mov    dl,0x4
  4264b8:	test   DWORD PTR [eax+eiz*1-0x3a7e8587],0x72d2
	...
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	nop
  426541:	adc    al,0xd2
  426543:	push   ebx
  426544:	mov    ss,WORD PTR [edi+0xf50001]
  42654a:	add    BYTE PTR [eax],al
  42654c:	sbb    DWORD PTR [esi],eax
  42654e:	pop    ds
  42654f:	push   ecx
  426550:	mov    edx,0x797b1354
  426555:	mov    ?,WORD PTR [esi]
  426557:	dec    ebx
  426558:	shr    ecx,0xce
  42655b:	ja     0x426549
  42655d:	lahf   
  42655e:	or     cl,BYTE PTR ds:0xedf1e356
  426564:	cs mov esi,0x97f1f815
  42656a:	clc    
  42656b:	adc    dh,BYTE PTR [edx+0x1004c9ea]
  426571:	sub    eax,0x6c43ef5a
  426576:	hlt    
  426577:	jg     0x426529
  426579:	sbb    eax,0xa054891d
  42657e:	aaa    
  42657f:	(bad)  
  426580:	push   ebx
  426581:	std    
  426582:	ds inc esp
  426584:	dec    esp
  426585:	mov    al,ds:0x68040a9c
  42658a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42658b:	jns    0x426542
  42658d:	data16 jo 0x42654b
  426590:	popf   
  426591:	ret    0x635e
  426594:	out    dx,eax
  426595:	jae    0x426597
  426597:	inc    eax
  426598:	xor    al,0x3f
  42659a:	mov    ds:0x1b6a66e8,eax
  42659f:	sbb    ah,BYTE PTR [edx+edx*2+0x49]
  4265a3:	retf   0x380e
  4265a6:	mov    edx,0xf74a846b
  4265ab:	repz xor edx,edx
  4265ae:	or     eax,0x29ad656c
  4265b3:	out    0x5f,eax
  4265b5:	in     al,dx
  4265b6:	addr16 mov ecx,0x7582d3bf
  4265bc:	pop    edi
  4265bd:	and    esi,DWORD PTR [eax]
  4265bf:	scas   al,BYTE PTR es:[edi]
  4265c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265c1:	aad    0xc
  4265c3:	test   al,0xcd
  4265c5:	dec    esp
  4265c6:	jl     0x42662a
  4265c8:	sub    bl,BYTE PTR [eax]
  4265ca:	jbe    0x4265ab
  4265cc:	aaa    
  4265cd:	sub    ebx,DWORD PTR [edx+edx*2]
  4265d0:	add    edi,DWORD PTR [edx]
  4265d2:	loop   0x426560
  4265d4:	xor    DWORD PTR cs:[eax+0x4b5e922],ebp
  4265db:	jnp    0x4265df
  4265dd:	jmp    0xc0d8:0xa043375e
  4265e4:	popa   
  4265e5:	mov    dh,0x6e
  4265e7:	push   es
  4265e8:	shl    DWORD PTR [ebx-0x51566f54],1
  4265ee:	scas   eax,DWORD PTR es:[edi]
  4265ef:	cwde   
  4265f0:	iret   
  4265f1:	inc    edx
  4265f2:	inc    esi
  4265f3:	push   edx
  4265f4:	fdivr  st(2),st
  4265f6:	repnz mov dh,0xd4
  4265f9:	shrd   ebx,edi,cl
  4265fc:	std    
  4265fd:	(bad)  
  4265fe:	xor    al,BYTE PTR [edi+0x2f838e98]
  426604:	ret    
  426605:	inc    ebx
  426606:	mov    ch,0xd1
  426608:	jne    0x4265e4
  42660a:	mov    cs,eax
  42660c:	sbb    DWORD PTR [edx],esi
  42660e:	in     eax,dx
  42660f:	xor    dh,0xc7
  426612:	das    
  426613:	loope  0x4265bc
  426615:	add    bh,BYTE PTR [eax-0x4a]
  426618:	ss jmp 0xf741:0x1b74495e
  426620:	or     eax,0x3b159947
  426625:	push   edi
  426626:	retf   
  426627:	dec    ecx
  426628:	fcomp  DWORD PTR [ebp+0x17]
  42662b:	mov    ebx,esi
  42662d:	dec    esp
  42662e:	ins    DWORD PTR es:[edi],dx
  42662f:	push   ss
  426630:	(bad)  
  426632:	imul   edi,DWORD PTR [edi],0xee95a7db
  426638:	out    dx,al
  426639:	cs into 
  42663b:	adc    DWORD PTR [eax],esi
  42663d:	sub    dh,cl
  42663f:	and    eax,0xb2
	...
  4266b4:	(bad)  
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	push   edi
  4266c1:	mov    fs,WORD PTR [esi-0x70]
  4266c4:	sbb    DWORD PTR [eax+0xf50001],0x0
  4266cb:	add    BYTE PTR [ecx+0x2adeb202],dl
  4266d1:	in     eax,0x1a
  4266d3:	push   es
  4266d4:	jg     0x426684
  4266d6:	or     eax,0x2db9253d
  4266db:	pop    es
  4266dc:	lods   al,BYTE PTR ds:[esi]
  4266dd:	les    ebp,FWORD PTR [esi]
  4266df:	dec    edi
  4266e0:	mov    ds:0x5e79109b,al
  4266e5:	and    ebx,DWORD PTR [eax]
  4266e7:	enter  0xdebb,0xf8
  4266eb:	imul   esi,DWORD PTR [ecx+0xc6e9bf1],0x8a9a610
  4266f5:	jmp    DWORD PTR [ebx-0x7a]
  4266f8:	mov    DWORD PTR [ebp-0x12aa8504],eax
  4266fe:	scas   al,BYTE PTR es:[edi]
  4266ff:	fsub   QWORD PTR [ecx]
  426701:	push   0xffffff80
  426703:	xor    dl,BYTE PTR cs:[ebx-0x41abc3c2]
  42670a:	sub    al,0x8
  42670c:	or     ah,BYTE PTR [ebx+0x24]
  42670f:	popa   
  426710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426711:	fwait
  426712:	push   es
  426713:	stc    
  426714:	mov    al,0x59
  426716:	(bad)  
  426717:	out    dx,eax
  426718:	fisubr WORD PTR [edi+0x62]
  42671b:	fmul   DWORD PTR ss:[edi]
  42671e:	xchg   esi,eax
  42671f:	or     dh,dh
  426721:	xchg   ebx,eax
  426722:	pop    es
  426723:	xchg   esi,eax
  426724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426725:	int    0x43
  426727:	addr16 sub al,0xb5
  42672a:	mov    ebp,0x4ccb21
  42672f:	push   cs
  426730:	es callw 0x317d
  426735:	stos   BYTE PTR es:[edi],al
  426736:	loopne 0x4266cb
  426738:	jl     0x42674d
  42673a:	dec    edx
  42673b:	or     al,0xa3
  42673d:	mov    ch,0x33
  42673f:	mov    ?,WORD PTR [esp+edi*2+0x7d]
  426743:	mov    ds:0xff69168,eax
  426748:	daa    
  426749:	inc    ebp
  42674a:	xchg   ebx,eax
  42674b:	aad    0x56
  42674d:	ja     0x426773
  42674f:	mov    BYTE PTR [esi-0x72],ah
  426752:	outs   dx,BYTE PTR ds:[esi]
  426753:	outs   dx,DWORD PTR ds:[esi]
  426754:	iret   
  426755:	aam    0xcc
  426757:	(bad)  
  426758:	pop    ebx
  426759:	bound  esp,QWORD PTR [eax+0x4ec5eeef]
  42675f:	shl    eax,0x8e
  426762:	jmp    0x426702
  426764:	scas   eax,DWORD PTR es:[edi]
  426765:	xor    eax,0xe3c57e25
  42676a:	jecxz  0x426791
  42676c:	mov    bh,0xcb
  42676e:	ret    
  42676f:	push   ebp
  426770:	shl    ebx,1
  426772:	push   eax
  426773:	pop    eax
  426774:	sub    ecx,DWORD PTR [edx+0x64192fd]
  42677a:	cmp    bl,BYTE PTR [ebx+0xe573d8c]
  426780:	cmp    DWORD PTR [ebx-0x8],esi
  426783:	pop    ebp
  426784:	push   ss
  426785:	fdivr  DWORD PTR [esi+edi*2+0x33]
  426789:	test   ch,ch
  42678b:	push   cs
  42678c:	into   
  42678d:	(bad)  
  42678e:	pop    ss
  42678f:	daa    
  426790:	pop    ds
  426791:	jo     0x42680a
  426793:	mov    dl,0xcd
  426795:	adc    BYTE PTR [esi+edx*2-0x5b5be310],ch
  42679c:	inc    edi
  42679d:	fldcw  WORD PTR [edx]
  42679f:	jo     0x4267ff
  4267a1:	sbb    al,al
  4267a3:	jmp    0x426766
  4267a5:	gs ret 
  4267a7:	pop    ebp
  4267a8:	lahf   
  4267a9:	add    esi,DWORD PTR [esi+esi*8+0x30c47318]
  4267b0:	sbb    esi,DWORD PTR [eax]
  4267b2:	xor    al,0xea
  4267b4:	fisttp QWORD PTR [edi+0x54]
  4267b7:	jg     0x426825
  4267b9:	fwait
  4267ba:	inc    eax
  4267bb:	sub    cl,BYTE PTR [eax-0x3553f33b]
	...
  426831:	add    BYTE PTR [eax],al
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x6f662c34],cl
  426843:	cmp    DWORD PTR [eax-0x67],0xf50001
  42684a:	add    BYTE PTR [eax],al
  42684c:	sti    
  42684d:	or     cl,bh
  42684f:	enter  0x9f09,0x2d
  426853:	xor    al,0x73
  426855:	fsubr  QWORD PTR [edi+0x5281f73e]
  42685b:	frstor [ecx+edx*8]
  42685e:	pop    esp
  42685f:	lea    esi,[edx+0x28]
  426862:	stos   DWORD PTR es:[edi],eax
  426863:	adc    DWORD PTR [edx-0x19],0xcf28bcea
  42686a:	or     eax,0x9cbf7f87
  42686f:	xlat   BYTE PTR ds:[ebx]
  426870:	aad    0x62
  426872:	and    bh,BYTE PTR [edx-0x13]
  426875:	pop    eax
  426876:	push   ds
  426877:	cwde   
  426878:	out    dx,eax
  426879:	mov    ebx,0xdabc811
  42687e:	lea    edi,[ebx]
  426880:	and    BYTE PTR ds:0x586f25d3,cl
  426886:	je     0x426839
  426888:	or     ebp,DWORD PTR [ebx+eax*2+0x18bbc8b3]
  42688f:	popf   
  426890:	std    
  426891:	sbb    BYTE PTR [ebp-0x11],ch
  426894:	sahf   
  426895:	inc    esp
  426896:	add    eax,DWORD PTR [edx+0x5c]
  426899:	out    dx,eax
  42689a:	mov    ah,0x29
  42689c:	pop    esi
  42689d:	jl     0x42690e
  42689f:	sti    
  4268a0:	aas    
  4268a1:	pop    ss
  4268a2:	mov    ch,0x3b
  4268a4:	out    0x4c,eax
  4268a6:	int3   
  4268a7:	mov    esi,0x9e5c4dd7
  4268ac:	jge    0x42685e
  4268ae:	inc    esp
  4268af:	push   esp
  4268b0:	ds (bad) 
  4268b2:	out    0xbd,al
  4268b4:	dec    esp
  4268b5:	repz push edx
  4268b7:	and    ecx,DWORD PTR [esp+esi*2]
  4268ba:	fst    DWORD PTR [ebx]
  4268bc:	push   edi
  4268bd:	out    dx,al
  4268be:	hlt    
  4268bf:	ds lock xchg ebx,eax
  4268c2:	gs xchg ebx,eax
  4268c4:	out    0x4c,eax
  4268c6:	xlat   BYTE PTR ds:[ebx]
  4268c7:	adc    ebx,DWORD PTR [ebx+0x1d9cbee5]
  4268cd:	add    DWORD PTR [esi-0x12],eax
  4268d0:	call   0x69905e28
  4268d5:	fisttp WORD PTR fs:[ebx-0x7f]
  4268d9:	or     DWORD PTR [esi],0x85027c85
  4268df:	add    al,0xc5
  4268e1:	jns    0x426865
  4268e3:	pop    ebp
  4268e4:	daa    
  4268e5:	das    
  4268e6:	test   ebp,ebp
  4268e8:	repnz frstor [eax-0x6e0a582f]
  4268ef:	ins    DWORD PTR es:[edi],dx
  4268f0:	arpl   WORD PTR [edx],bx
  4268f2:	popf   
  4268f3:	mov    edi,0x416ddf22
  4268f8:	cs loopne 0x426954
  4268fb:	gs inc eax
  4268fd:	dec    ebx
  4268fe:	ds in  al,0xf2
  426901:	retf   0x1533
  426904:	jmp    0xab030872
  426909:	and    DWORD PTR [edi+0x1f],0xffffffb9
  42690d:	shr    DWORD PTR [edx+0x3b6f4302],0x3b
  426914:	push   eax
  426915:	jne    0x4268ae
  426917:	gs inc edi
  426919:	in     al,dx
  42691a:	pop    esi
  42691b:	pushf  
  42691c:	sub    eax,0x684a6213
  426921:	mov    dl,0x44
  426924:	or     al,0x95
  426926:	stos   BYTE PTR es:[edi],al
  426927:	dec    ebx
  426928:	mov    bl,0xa8
  42692a:	int3   
  42692b:	mov    ebx,0xcb24fbb6
  426930:	mov    ecx,0xe71b71fb
  426935:	jle    0x4269aa
  426937:	sub    ecx,esp
  426939:	jno    0x42696a
  42693b:	mov    WORD PTR [edx+0x61],?
  42693e:	retf   
  42693f:	lods   eax,DWORD PTR ds:[esi]
  426940:	xchg   ebx,eax
	...
  4269b1:	add    BYTE PTR [eax],al
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	cmp    ch,BYTE PTR [esi]
  4269c2:	dec    edi
  4269c3:	int    0x6d
  4269c5:	call   0x0:0xf50001
  4269cc:	dec    eax
  4269cd:	mov    BYTE PTR [esi+0x1a00aa49],dl
  4269d3:	mov    al,0x45
  4269d5:	jmp    0x4269bd
  4269d7:	std    
  4269d8:	scas   al,BYTE PTR es:[edi]
  4269d9:	push   esp
  4269da:	retf   0x872d
  4269dd:	xor    eax,0x951e4146
  4269e2:	mov    esi,0xefd18d22
  4269e7:	push   es
  4269e8:	adc    eax,0xc3a49960
  4269ed:	mov    WORD PTR [ecx+0x28bedf11],?
  4269f3:	fisub  WORD PTR [esi-0x7a]
  4269f6:	stos   BYTE PTR es:[edi],al
  4269f7:	cli    
  4269f8:	fimul  DWORD PTR [edx]
  4269fa:	fwait
  4269fb:	hlt    
  4269fc:	imul   ecx
  4269fe:	push   ds
  4269ff:	pop    esp
  426a00:	je     0x426a46
  426a02:	in     al,dx
  426a03:	outs   dx,BYTE PTR ds:[esi]
  426a04:	ds push ecx
  426a06:	vdivss xmm1,xmm3,DWORD PTR [ebp-0x426cc77f]
  426a0e:	jp     0x4269c6
  426a10:	mov    ebx,0x9911e355
  426a15:	pop    ebx
  426a16:	cmp    DWORD PTR [ebp-0x7c],esp
  426a19:	pop    edi
  426a1a:	adc    ebp,edx
  426a1c:	(bad)  
  426a1e:	out    0x57,al
  426a20:	adc    eax,DWORD PTR [eax+0x2d]
  426a23:	ins    DWORD PTR es:[edi],dx
  426a24:	ja     0x426a86
  426a26:	mov    cl,0x6a
  426a28:	and    DWORD PTR [si],ebp
  426a2b:	dec    ebp
  426a2c:	fisubr WORD PTR gs:[edi+0x9561a0a]
  426a33:	gs mov dh,0xfc
  426a36:	mov    ebx,0x23932b0c
  426a3b:	enter  0xc481,0x2c
  426a3f:	outs   dx,BYTE PTR ds:[esi]
  426a40:	cmp    ah,BYTE PTR [ebp+0x10665d42]
  426a46:	mov    DWORD PTR [eax],esi
  426a48:	rcl    DWORD PTR [ebx],1
  426a4a:	lea    esp,[edi+0x7f]
  426a4d:	les    esi,FWORD PTR [edi-0x3aa2169e]
  426a53:	pop    di
  426a55:	push   ds
  426a56:	cmp    eax,esi
  426a58:	enter  0x61b7,0xab
  426a5c:	sbb    al,bh
  426a5e:	sbb    esp,DWORD PTR [edi+0x3a]
  426a61:	mov    WORD PTR [ecx],fs
  426a63:	or     ebp,DWORD PTR [eax]
  426a65:	arpl   WORD PTR [ecx],bx
  426a67:	lahf   
  426a68:	push   0xffffffef
  426a6a:	xor    BYTE PTR [edi+ecx*4-0x157f1617],dl
  426a71:	(bad)  
  426a72:	fwait
  426a73:	adc    bh,al
  426a75:	imul   ecx,ebp,0xffffffb5
  426a78:	mov    ebp,0x2e5f180b
  426a7d:	mov    edi,0x7fbbdb04
  426a82:	jne    0x426afe
  426a84:	mov    ah,0x7
  426a86:	sub    eax,0xc65c4aac
  426a8b:	cmp    eax,0x35874b2d
  426a90:	jb     0x426a91
  426a92:	jne    0x426ad0
  426a94:	popf   
  426a95:	xor    al,0x3b
  426a97:	fld    QWORD PTR fs:[ebp+0x1f448a54]
  426a9e:	add    BYTE PTR [ebx],bh
  426aa0:	cli    
  426aa1:	dec    edx
  426aa2:	add    BYTE PTR [edx+0x55],0x90
  426aa6:	bound  ebp,QWORD PTR [ecx+0x3d6fd4a4]
  426aac:	jns    0x426a9b
  426aae:	jmp    0xcb2f:0x68940c62
  426ab5:	inc    ebx
  426ab6:	test   al,0xcd
  426ab8:	add    ebp,esp
  426aba:	cs lahf 
  426abc:	stc    
  426abd:	sub    eax,0x16340b
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	jg     0x426b86
  426b42:	outs   dx,DWORD PTR ds:[esi]
  426b43:	mov    ebp,0x19b62
  426b48:	cmc    
  426b49:	add    BYTE PTR [eax],al
  426b4b:	add    BYTE PTR [ebx-0x7d121d7c],dh
  426b51:	add    eax,0x46859fde
  426b56:	out    0x2e,al
  426b58:	push   ecx
  426b59:	test   DWORD PTR [esi+0x5b74e6d6],0x6980158f
  426b63:	push   edi
  426b64:	xchg   ecx,eax
  426b65:	pop    ss
  426b66:	pop    esi
  426b67:	or     eax,0xe7627383
  426b6c:	or     BYTE PTR [esi+0x7e],dl
  426b6f:	lahf   
  426b70:	xchg   ecx,eax
  426b71:	mov    dl,0x7f
  426b73:	xchg   BYTE PTR [ebp+eax*8-0xa773875],cl
  426b7a:	add    al,0x5e
  426b7c:	div    dh
  426b7e:	push   0xffffffae
  426b80:	fst    QWORD PTR [ebp-0x5891e47]
  426b86:	sbb    BYTE PTR [edx-0x25f12bca],cl
  426b8c:	clc    
  426b8d:	push   ebp
  426b8e:	imul   eax,edi,0xa3a45b86
  426b94:	jp     0x426b65
  426b96:	mov    eax,ds:0x740300e8
  426b9b:	gs adc al,0xdc
  426b9e:	aas    
  426b9f:	pop    ebp
  426ba0:	adc    dl,dh
  426ba2:	add    DWORD PTR [esi-0x3518f75],edx
  426ba8:	test   BYTE PTR [ebx],0xae
  426bab:	and    edx,eax
  426bad:	imul   ecx,DWORD PTR [ecx+0x77],0x61
  426bb1:	push   eax
  426bb2:	pop    ds
  426bb3:	sub    BYTE PTR [eax],cl
  426bb5:	mov    dh,0xf0
  426bb7:	add    WORD PTR [ecx-0x6e91d14c],di
  426bbe:	mov    cl,0xaf
  426bc0:	pop    ebp
  426bc1:	mov    ds:0x7b7b54c2,al
  426bc6:	ret    
  426bc7:	popf   
  426bc8:	mov    ebx,0xd9e37803
  426bcd:	xchg   DWORD PTR [eax],eax
  426bcf:	ja     0x426b65
  426bd1:	les    esp,FWORD PTR [ecx+0x27cde56f]
  426bd7:	outs   dx,BYTE PTR ds:[esi]
  426bd8:	out    dx,al
  426bd9:	xchg   eax,eax
  426bdb:	ret    
  426bdc:	(bad)  
  426bdd:	ficom  WORD PTR [edi+0x5]
  426be0:	mov    ah,0xed
  426be2:	(bad)  
  426be3:	aad    0xcb
  426be5:	fidiv  DWORD PTR [esi+ebp*1-0x64]
  426be9:	gs inc eax
  426beb:	stc    
  426bec:	and    ch,BYTE PTR [ebp+0x62fc4fc3]
  426bf2:	call   0xca41:0xab33fa7d
  426bf9:	gs dec edx
  426bfb:	sub    BYTE PTR [ebx],dl
  426bfd:	mov    esi,0x8d4d47f9
  426c02:	adc    ah,ah
  426c04:	or     eax,0x163dd26e
  426c09:	mov    ?,WORD PTR [ebx]
  426c0b:	jne    0x426c34
  426c0d:	xor    ebx,ecx
  426c0f:	jne    0x426bc5
  426c11:	sbb    eax,DWORD PTR [esi+0x57]
  426c14:	push   ss
  426c15:	inc    dl
  426c17:	jecxz  0x426be8
  426c19:	rol    DWORD PTR [esi-0x14],cl
  426c1c:	add    eax,0xdba9484d
  426c21:	fsub   DWORD PTR gs:[ecx+0x20]
  426c25:	outs   dx,BYTE PTR ds:[si]
  426c27:	xchg   edx,eax
  426c28:	jp     0x426baf
  426c2a:	and    DWORD PTR [ecx-0x4a68ec33],0x48
  426c31:	les    esi,FWORD PTR [ebx+eiz*4-0x6]
  426c35:	leave  
  426c36:	je     0x426c6e
  426c38:	gs mov ebx,0xe61277b9
  426c3e:	xor    BYTE PTR [ebx-0x45],0x0
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	sbb    BYTE PTR [edi-0x63a811ae],0x1
  426cc7:	add    ch,dh
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    ch,bl
  426ccd:	pop    ds
  426cce:	jp     0x426cdf
  426cd0:	adc    al,0x56
  426cd2:	push   edx
  426cd3:	xchg   ebp,eax
  426cd4:	pop    ebx
  426cd5:	sub    DWORD PTR [eax+eiz*8+0x54e24196],edx
  426cdc:	mov    cl,0x86
  426cde:	loope  0x426cd4
  426ce0:	push   es
  426ce1:	or     dl,BYTE PTR [ecx+0x55035669]
  426ce7:	ja     0x426c7b
  426ce9:	xchg   BYTE PTR [esi+0x79],bh
  426cec:	jge    0x426cda
  426cee:	leave  
  426cef:	out    0xf4,al
  426cf1:	rcr    DWORD PTR [ecx],1
  426cf3:	and    bh,cl
  426cf5:	and    al,0x67
  426cf7:	cli    
  426cf8:	test   esi,0x6639fa5e
  426cfe:	jecxz  0x426cff
  426d00:	pop    ss
  426d01:	mov    cl,0xba
  426d03:	jle    0x426cc2
  426d05:	stos   DWORD PTR es:[edi],eax
  426d06:	xchg   dh,ah
  426d08:	call   0x7e17:0xda15627
  426d0f:	in     al,0x81
  426d11:	cmp    DWORD PTR [ecx+ebp*1-0x46d2d22c],0x818fe5d3
  426d1c:	and    al,0xf6
  426d1e:	repnz iret 
  426d20:	mov    dh,0xe3
  426d22:	jne    0x426d3a
  426d24:	xor    al,0xf0
  426d26:	cmp    DWORD PTR [edi-0x4a],0xffffffee
  426d2a:	fcmovu st,st(1)
  426d2c:	loope  0x426d94
  426d2e:	inc    edx
  426d2f:	fistp  DWORD PTR [edi]
  426d31:	dec    ebp
  426d32:	cli    
  426d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d34:	xor    eax,0x3acc0d0c
  426d39:	lahf   
  426d3a:	div    eax
  426d3c:	stos   BYTE PTR es:[edi],al
  426d3d:	or     eax,0x4e323d90
  426d42:	dec    ebx
  426d43:	jno    0x426d88
  426d45:	imul   ebx,DWORD PTR [ebx+0x2f9f5f2],0xffffff9e
  426d4c:	imul   edx,edi,0x6e895f6d
  426d52:	sbb    edx,ebp
  426d54:	nop
  426d55:	fiadd  WORD PTR ds:0xc8d1
  426d5a:	jmp    0x4565d388
  426d5f:	add    al,0x7f
  426d61:	loopne 0x426d27
  426d63:	stos   BYTE PTR es:[edi],al
  426d64:	mov    WORD PTR [ebx],es
  426d66:	sar    BYTE PTR [ebx-0x674115f5],0xba
  426d6d:	(bad)  [ebp+ebp*8-0x5a]
  426d71:	lahf   
  426d72:	mov    bh,0x59
  426d74:	(bad)  
  426d76:	add    eax,0xce3d1ce3
  426d7b:	cmp    bh,dh
  426d7d:	scas   eax,DWORD PTR es:[edi]
  426d7e:	sti    
  426d7f:	jmp    0x5438:0x6007dbf8
  426d86:	mov    fs,WORD PTR [ebx]
  426d88:	push   ss
  426d89:	push   ecx
  426d8a:	in     eax,dx
  426d8b:	test   ecx,ebx
  426d8d:	or     bl,BYTE PTR [esi+0x5174dd94]
  426d93:	cmp    edi,ebx
  426d95:	mov    dh,ah
  426d97:	cmp    al,0xd1
  426d99:	imul   ebp,DWORD PTR [edi+0x2b78bb20],0x60
  426da0:	mov    BYTE PTR [esi-0x1d],0x58
  426da4:	add    DWORD PTR [esi],edx
  426da6:	or     eax,0x2414b91d
  426dab:	xchg   esp,eax
  426dac:	xor    BYTE PTR [ebx-0x486a81b1],0x89
  426db3:	cli    
  426db4:	jnp    0x426dc6
  426db6:	ror    ebp,0x4c
  426db9:	mov    ah,0x36
  426dbb:	es nop
  426dbd:	mov    dh,0xd0
  426dbf:	and    bl,BYTE PTR [ebp+0x0]
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	out    dx,al
  426e41:	jl     0x426dcc
  426e43:	stos   BYTE PTR es:[edi],al
  426e44:	dec    esp
  426e45:	popf   
  426e46:	add    DWORD PTR [eax],eax
  426e48:	cmc    
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [edi],al
  426e4d:	test   BYTE PTR fs:[esi+esi*4],cl
  426e51:	outs   dx,BYTE PTR ds:[esi]
  426e52:	clc    
  426e53:	call   0xad3f:0xf295b55c
  426e5a:	push   ss
  426e5b:	dec    ebp
  426e5c:	pushf  
  426e5d:	mov    BYTE PTR [eax-0x5f717711],bl
  426e63:	sub    BYTE PTR [ebp+0x7f],dl
  426e66:	call   0x523bbee
  426e6b:	add    BYTE PTR [edi-0x79],cl
  426e6e:	dec    edx
  426e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e70:	inc    edx
  426e71:	addr16 push ds
  426e73:	loope  0x426dfb
  426e75:	push   ebx
  426e76:	test   DWORD PTR [edx],ebp
  426e78:	in     eax,0x55
  426e7a:	lahf   
  426e7b:	call   FWORD PTR [ebx]
  426e7d:	lods   eax,DWORD PTR ds:[esi]
  426e7e:	mov    DWORD PTR [edx+0x70],eax
  426e81:	ret    0x6ac5
  426e84:	and    DWORD PTR [ebx+0x5c07f86d],0xffffff87
  426e8b:	stos   DWORD PTR es:[edi],eax
  426e8c:	cmp    al,0xc0
  426e8e:	xchg   edx,eax
  426e8f:	sub    eax,0xd6ac045c
  426e94:	jo     0x426e54
  426e96:	call   FWORD PTR [edi]
  426e98:	adc    al,0x38
  426e9a:	dec    ebp
  426e9b:	lea    eax,[eax-0x407a38db]
  426ea1:	jle    0x426f17
  426ea3:	add    edi,DWORD PTR [ebp+0x18]
  426ea6:	mov    ah,0xe9
  426ea8:	clc    
  426ea9:	rcr    DWORD PTR [edx+eax*1-0x50d47ca2],cl
  426eb0:	dec    ecx
  426eb1:	mov    ecx,0xcbab3205
  426eb6:	cmc    
  426eb7:	fst    QWORD PTR [esi-0xc]
  426eba:	pop    esi
  426ebb:	jle    0x426e3f
  426ebd:	or     DWORD PTR [ebp+0xfadac4e],ebx
  426ec3:	shl    ah,cl
  426ec5:	test   al,0x5f
  426ec7:	jbe    0x426ea1
  426ec9:	enter  0xcf19,0x94
  426ecd:	jno    0x426f24
  426ecf:	mov    bh,0xf5
  426ed1:	add    edx,DWORD PTR [eax]
  426ed3:	icebp  
  426ed4:	mov    bh,0x60
  426ed6:	pushf  
  426ed7:	or     esp,ebp
  426ed9:	test   eax,0x84e338cd
  426ede:	int3   
  426edf:	cmp    al,0x81
  426ee1:	fdivr  st(3),st
  426ee3:	std    
  426ee4:	dec    edx
  426ee5:	(bad)  
  426ee6:	jne    0x426ea9
  426ee8:	aas    
  426ee9:	fcmovnbe st,st(1)
  426eeb:	mov    DWORD PTR [edi+0x7390b457],ecx
  426ef1:	jns    0x426f27
  426ef3:	inc    ebp
  426ef4:	mov    esp,0x71f373ae
  426ef9:	jb     0x426f72
  426efb:	mov    ebp,0xfaecf426
  426f00:	add    ebp,DWORD PTR [edx+ecx*4]
  426f03:	in     al,0x7e
  426f05:	ds pop edi
  426f07:	lods   al,BYTE PTR ds:[esi]
  426f08:	cmp    eax,0x87f40c1f
  426f0d:	add    eax,DWORD PTR [bx+si+0x1e2c]
  426f12:	movzx  esi,WORD PTR [edi-0x7dc8df1e]
  426f19:	jno    0x426ef3
  426f1b:	dec    edi
  426f1c:	daa    
  426f1d:	mov    bl,0x15
  426f1f:	xchg   ecx,eax
  426f20:	idiv   edi
  426f22:	ret    
  426f23:	cmp    cl,BYTE PTR [eax+0x5e]
  426f26:	loopne 0x426f83
  426f28:	(bad)  [edi]
  426f2a:	cmp    BYTE PTR [eax+ebp*2+0x23],dh
  426f2e:	outs   dx,DWORD PTR ds:[esi]
  426f2f:	cmp    esi,DWORD PTR [ecx]
  426f31:	mov    dh,0x58
  426f33:	jle    0x426f18
  426f35:	mov    ch,0xe
  426f37:	cmp    al,0x82
  426f39:	dec    ebp
  426f3a:	sub    dl,bh
  426f3c:	sub    esp,esp
  426f3e:	inc    esi
  426f3f:	sbb    eax,0xee
	...
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	outs   dx,DWORD PTR ds:[esi]
  426fc1:	sahf   
  426fc2:	jle    0x42703d
  426fc4:	inc    ecx
  426fc5:	sahf   
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [ebp-0x48934d87],al
  426fd1:	ror    BYTE PTR [edi],0x8e
  426fd4:	stc    
  426fd5:	sar    BYTE PTR [edi-0x3],cl
  426fd8:	xchg   edx,eax
  426fd9:	jmp    0x38078941
  426fde:	sbb    edx,DWORD PTR [edx+0xa]
  426fe1:	(bad)  
  426fe2:	mov    eax,0x5f09184
  426fe7:	mov    es,WORD PTR [edi]
  426fe9:	mov    gs,esi
  426feb:	sahf   
  426fec:	jl     0x427061
  426fee:	mov    ds:0x508d290b,al
  426ff3:	adc    esp,DWORD PTR [ebp+0x2cdd2a36]
  426ff9:	xchg   edi,eax
  426ffa:	xchg   edx,eax
  426ffb:	rcr    BYTE PTR [ecx-0x19928d8d],cl
  427001:	adc    esi,0x7c8d0bbb
  427007:	add    al,0x13
  427009:	ja     0x426fdd
  42700b:	push   0x637a3357
  427010:	pop    esp
  427011:	mov    ebp,0x5e7afce7
  427016:	mov    bl,0x18
  427018:	ret    0x559
  42701b:	retf   0x8bae
  42701e:	repz push ebp
  427020:	frstpm(287 only) 
  427022:	inc    edi
  427023:	pop    edi
  427024:	dec    esp
  427025:	sub    ah,BYTE PTR [esi]
  427027:	retf   
  427028:	jl     0x426fec
  42702a:	pop    esp
  42702b:	in     eax,dx
  42702c:	jmp    0x42700e
  42702e:	cwde   
  42702f:	xor    eax,0xe48ec64f
  427034:	or     BYTE PTR [eax],bh
  427036:	das    
  427037:	repnz cs stos DWORD PTR es:[edi],eax
  42703a:	or     DWORD PTR [ecx],esi
  42703c:	(bad)  
  42703d:	(bad)  
  42703e:	in     al,0x23
  427040:	test   BYTE PTR [eax-0x29b0dddf],al
  427046:	mov    esp,0xf57be0
  42704b:	inc    esi
  42704c:	pop    esp
  42704d:	xor    edi,DWORD PTR [ecx]
  42704f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427050:	or     ecx,DWORD PTR [edx-0xa5cda69]
  427056:	inc    edi
  427057:	push   0x40
  427059:	test   al,bh
  42705b:	les    edi,FWORD PTR [edi]
  42705d:	shl    DWORD PTR [edi],1
  42705f:	push   esp
  427060:	adc    esp,DWORD PTR [ecx+0x5a]
  427063:	dec    esp
  427064:	jb     0x4270d7
  427066:	int    0x7f
  427068:	jmp    0x427069
  42706a:	jmp    0x9159:0x26329692
  427071:	jae    0x427060
  427073:	cdq    
  427074:	xor    bl,BYTE PTR [eax]
  427076:	iret   
  427077:	ds pop edx
  427079:	in     al,0x55
  42707b:	out    0xf,eax
  42707d:	call   0xa198:0x397bfba4
  427084:	pop    eax
  427085:	cmp    ecx,DWORD PTR [eax-0x7d0e590a]
  42708b:	ja     0x4270f8
  42708d:	out    0x8d,al
  42708f:	push   esi
  427090:	and    al,0xf8
  427092:	lock xlat BYTE PTR ds:[ebx]
  427094:	leave  
  427095:	push   ebp
  427096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427097:	pushf  
  427098:	retf   0x1a42
  42709b:	jmp    0xc2b6d173
  4270a0:	inc    edx
  4270a1:	pop    es
  4270a2:	cmovne ax,WORD PTR [edi+ecx*1]
  4270a7:	or     eax,edx
  4270a9:	push   cs
  4270aa:	jne    0x4270be
  4270ac:	xchg   DWORD PTR [ecx+0xae9895b],edx
  4270b2:	hlt    
  4270b3:	mov    al,ds:0x19558567
  4270b8:	mov    bl,0x66
  4270ba:	popf   
  4270bb:	(bad)  
  4270bc:	or     DWORD PTR [esi+0x95909f],0x0
	...
  427133:	add    BYTE PTR [ebx-0x409ef0df],bl
  427139:	outs   dx,DWORD PTR ds:[esi]
  42713a:	(bad)  
  42713b:	sti    
  42713c:	into   
  42713d:	aad    0x24
  42713f:	aam    0x24
  427141:	imul   ebx,DWORD PTR ds:0x19f366b,0x0
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    BYTE PTR [esi+0xd5c155b],ch
  427151:	sbb    edx,ebp
  427153:	or     al,BYTE PTR ds:0x48d8a537
  427159:	jmp    0x33b2:0x205fc71d
  427160:	and    al,0xb7
  427162:	pop    esi
  427163:	pop    ebp
  427164:	mov    ah,0x92
  427166:	std    
  427167:	cmp    al,0x76
  427169:	inc    eax
  42716a:	ror    BYTE PTR [esi+0xa],1
  42716d:	in     eax,dx
  42716e:	popf   
  42716f:	mov    bh,0xc2
  427171:	inc    ecx
  427172:	dec    edi
  427173:	pop    esp
  427174:	lahf   
  427175:	inc    ebp
  427176:	jb     0x427124
  427178:	into   
  427179:	mov    al,0x58
  42717b:	sbb    al,0x5d
  42717d:	in     eax,dx
  42717e:	mov    al,BYTE PTR [eax]
  427180:	idiv   DWORD PTR [ecx+esi*8]
  427183:	dec    ebx
  427184:	sub    eax,ecx
  427186:	mov    ebp,DWORD PTR [ebp-0x783879d0]
  42718c:	mov    ss,WORD PTR [ecx]
  42718e:	fist   DWORD PTR [ebx-0x4c]
  427191:	pushf  
  427192:	jmp    0x3ae648c2
  427197:	imul   ecx,DWORD PTR [ebp-0x2c],0xa8c4cd15
  42719e:	mov    bh,0x8c
  4271a0:	mov    edi,0x793b2401
  4271a5:	aas    
  4271a6:	pop    edx
  4271a7:	fcompp 
  4271a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271aa:	inc    ecx
  4271ab:	push   ecx
  4271ac:	xor    DWORD PTR [esi+ecx*1-0x15],0x0
  4271b1:	(bad)  
  4271b2:	ss mov edx,0xd75f3ec9
  4271b8:	sub    BYTE PTR [esi+0x77],cl
  4271bb:	mul    al
  4271bd:	sub    al,BYTE PTR [ebx]
  4271bf:	push   0xffffffbe
  4271c1:	fsubr  QWORD PTR [ecx]
  4271c3:	ret    
  4271c4:	cdq    
  4271c5:	(bad)  
  4271c6:	mov    edi,0xd631a990
  4271cb:	loope  0x42719b
  4271cd:	mov    esi,0xc04b1d8c
  4271d2:	jp     0x4271e2
  4271d4:	dec    edi
  4271d5:	fcomp  QWORD PTR [ebx+0x61a69893]
  4271db:	out    0xa9,eax
  4271dd:	push   ebx
  4271de:	adc    eax,0xaa09e2cd
  4271e3:	adc    eax,0x2cec9f37
  4271e8:	dec    ecx
  4271e9:	stc    
  4271ea:	mov    BYTE PTR [esi-0x52],cl
  4271ed:	sbb    dh,BYTE PTR [eax+0x2c36e997]
  4271f3:	aam    0x72
  4271f5:	mov    esp,0x1e3a820
  4271fa:	dec    eax
  4271fb:	jae    0x42727c
  4271fd:	out    dx,al
  4271fe:	loop   0x427265
  427200:	mov    ebx,0x203e3dbe
  427205:	sub    dl,dh
  427207:	mov    cl,0xf4
  427209:	out    dx,al
  42720a:	or     DWORD PTR [edi],0x19
  42720d:	arpl   WORD PTR [esi],di
  42720f:	mov    ebx,0x16a0ecd5
  427214:	lods   al,BYTE PTR ds:[esi]
  427215:	cmp    ecx,DWORD PTR [edi]
  427217:	and    ecx,edi
  427219:	and    ah,BYTE PTR [ebx]
  42721b:	inc    edx
  42721c:	xor    BYTE PTR [esp+edi*8],ah
  42721f:	push   cs
  427220:	aad    0x9a
  427222:	(bad)  
  427223:	mov    ebp,0x76080d0d
  427228:	mov    ebp,0x86d4f02f
  42722d:	fmul   st(4),st
  42722f:	mov    cs,WORD PTR [esp+edi*8+0x7]
  427233:	aaa    
  427234:	stc    
  427235:	ret    
  427236:	sbb    DWORD PTR [esi-0x7ba4c9a2],edi
  42723c:	adc    DWORD PTR [eax+0xe],ebp
  42723f:	imul   ebp,eax,0x0
	...
  4272b1:	add    BYTE PTR [eax],al
  4272b3:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4272b7:	dec    esi
  4272b8:	std    
  4272b9:	out    dx,al
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x1b6dfb16
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	dec    edx
  4272cd:	imul   ebp,DWORD PTR [eax+0x5bcbec5d],0x79
  4272d4:	test   DWORD PTR [eiz*2-0x73cf3319],edx
  4272db:	xchg   DWORD PTR [esi-0x51],edx
  4272de:	or     DWORD PTR [edx-0x4f00f6a6],edx
  4272e4:	xor    eax,0x327b208f
  4272e9:	fdivr  QWORD PTR [edi+0x4deac9b]
  4272ef:	push   eax
  4272f0:	(bad)  
  4272f1:	mov    ebx,0x434df3db
  4272f6:	sbb    BYTE PTR [ecx+0xa],dl
  4272f9:	xchg   edx,eax
  4272fa:	adc    al,0xb6
  4272fc:	add    DWORD PTR [edi],esi
  4272fe:	cmp    DWORD PTR [ebx+0x52],0x71b883e1
  427305:	into   
  427306:	int    0x5c
  427308:	std    
  427309:	cli    
  42730a:	cld    
  42730b:	retf   
  42730c:	inc    edx
  42730d:	mov    ecx,?
  42730f:	adc    BYTE PTR [esi+0x43],0xce
  427313:	push   ebx
  427314:	mov    edi,0x9e806138
  427319:	ficom  WORD PTR [ebp-0x311db98]
  42731f:	sbb    eax,0x38de58b6
  427324:	and    al,0xeb
  427326:	and    BYTE PTR [edi-0x15],dh
  427329:	test   DWORD PTR [edi],eax
  42732b:	fs sbb ecx,ecx
  42732e:	xchg   esp,eax
  42732f:	add    dl,0xe2
  427332:	and    ch,BYTE PTR [ebx-0x7]
  427335:	fcmovnbe st,st(4)
  427337:	nop
  427338:	shl    DWORD PTR [ecx+ebp*2-0x482abdf0],0x39
  427340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427341:	sbb    eax,0x9a2db1d2
  427346:	cmp    eax,0xd0f0c698
  42734b:	mov    ds:0x2ce6d9e2,al
  427350:	ror    BYTE PTR [eax+0x3d3284a],1
  427356:	pop    esi
  427357:	or     eax,0x9f24cb33
  42735c:	loopne 0x42733f
  42735e:	add    DWORD PTR [eax],ecx
  427360:	fisttp DWORD PTR [eax+0x39]
  427363:	sbb    DWORD PTR [ecx-0x36],esp
  427366:	mov    dh,0xfa
  427368:	das    
  427369:	jg     0x427322
  42736b:	add    eax,0x37eeab8d
  427370:	inc    edi
  427371:	ds stos BYTE PTR es:[edi],al
  427373:	mov    ds:0xcf0678e0,eax
  427378:	mov    cl,0x38
  42737a:	push   ds
  42737b:	lods   eax,DWORD PTR ds:[esi]
  42737c:	cmp    eax,0x969ff5a8
  427381:	sbb    BYTE PTR [ebx],dh
  427383:	popa   
  427384:	leave  
  427385:	dec    esp
  427386:	test   al,0xf4
  427388:	jg     0x4273d6
  42738a:	sub    al,0xb8
  42738c:	push   edi
  42738d:	push   ebx
  42738e:	mov    gs,WORD PTR [esi+0x3d5e3b7a]
  427394:	retf   0xa6ed
  427397:	enter  0x38,0x34
  42739b:	icebp  
  42739c:	push   es
  42739d:	inc    eax
  42739e:	adc    eax,0xf3127a8f
  4273a3:	js     0x4273b5
  4273a5:	retf   0x395b
  4273a8:	push   eax
  4273a9:	mov    al,0x21
  4273ab:	cwde   
  4273ac:	fst    DWORD PTR [eax]
  4273ae:	fcom   QWORD PTR [ebp+0x16]
  4273b1:	test   eax,0x5caca5c2
  4273b6:	mov    WORD PTR [ebp-0x1b],gs
  4273b9:	jge    0x4273aa
  4273bb:	shl    DWORD PTR [eax],cl
  4273bd:	retf   0xa6a4
  4273c0:	rol    BYTE PTR [eax],cl
	...
  427432:	add    BYTE PTR [eax],al
  427434:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42743b:	outs   dx,DWORD PTR ds:[esi]
  42743c:	pop    DWORD PTR [ebx+eiz*8-0x16]
  427440:	sub    BYTE PTR [eax-0x5edfbe53],0x1
  427447:	add    ch,dh
  427449:	add    BYTE PTR [eax],al
  42744b:	add    BYTE PTR ds:0xaca63f81,bh
  427451:	call   0x9313:0xd82f29d9
  427458:	out    dx,al
  427459:	mov    edi,0x2c92382
  42745e:	xchg   ebp,eax
  42745f:	loopne 0x4273fe
  427461:	jno    0x42745a
  427463:	mov    DWORD PTR [edi+0x8],esp
  427466:	call   0x8dc4:0x317157d3
  42746d:	js     0x4274a7
  42746f:	mov    esi,0x4a15e34c
  427474:	aaa    
  427475:	and    ah,BYTE PTR ds:0x2240ea32
  42747b:	std    
  42747c:	test   DWORD PTR [eax-0x74],0x807b8b49
  427483:	mov    bh,0xc1
  427485:	xchg   esi,eax
  427486:	popf   
  427487:	cli    
  427488:	dec    esp
  427489:	in     eax,0x48
  42748b:	xchg   edi,eax
  42748c:	pop    ss
  42748d:	gs pop edi
  42748f:	dec    edx
  427490:	adc    DWORD PTR [ebx+0x6567b157],esi
  427496:	(bad)  
  427497:	and    al,0x85
  427499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42749a:	mov    eax,ds:0xe21e8c79
  42749f:	call   0x1bac0401
  4274a4:	lds    esp,FWORD PTR [esi-0x22]
  4274a7:	cdq    
  4274a8:	imul   edx,DWORD PTR [eax],0xfa2d6c71
  4274ae:	popf   
  4274af:	(bad)  
  4274b0:	inc    esi
  4274b1:	mov    edi,0xed83e710
  4274b6:	sbb    ch,BYTE PTR [ebp+0x22]
  4274b9:	imul   ebp,eax,0xfffffffe
  4274bc:	xor    edi,DWORD PTR [edi-0x70ab48c0]
  4274c2:	arpl   WORD PTR [edi],bp
  4274c4:	retf   
  4274c5:	lock push 0xc15901e3
  4274cb:	fsubrp st(4),st
  4274cd:	es (bad) 
  4274cf:	push   esi
  4274d0:	adc    BYTE PTR [ebp+0xf],cl
  4274d3:	loop   0x4274ba
  4274d5:	push   edi
  4274d6:	lods   al,BYTE PTR ds:[esi]
  4274d7:	imul   BYTE PTR [edi-0x142d0824]
  4274dd:	shr    BYTE PTR [edx-0x5921a29c],1
  4274e3:	cli    
  4274e4:	or     esi,edx
  4274e6:	jmp    0x427491
  4274e8:	or     cl,ah
  4274ea:	add    dl,BYTE PTR [esi-0x5adf4bff]
  4274f0:	xchg   ebx,eax
  4274f1:	ss or  ch,bl
  4274f4:	fs pop esi
  4274f6:	stc    
  4274f7:	push   ebx
  4274f8:	jo     0x42751d
  4274fa:	jne    0x4274da
  4274fc:	mov    esp,0x9d00cef4
  427501:	aas    
  427502:	push   eax
  427503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427504:	(bad)  
  427505:	adc    dl,BYTE PTR [esi]
  427507:	ds call 0x3af2a886
  42750d:	xchg   ebx,ecx
  42750f:	and    al,BYTE PTR [edx-0x6b5075ac]
  427515:	jns    0x4274e7
  427517:	mov    bh,ch
  427519:	retf   0x4f99
  42751c:	ffree  st(6)
  42751e:	pusha  
  42751f:	mov    eax,ds:0x155ca3fb
  427524:	outs   dx,WORD PTR ds:[esi]
  427526:	cs and al,0xb1
  427529:	bound  ebp,QWORD PTR [ebp-0x3c]
  42752c:	xor    al,ah
  42752e:	imul   edi,DWORD PTR [ebp-0x67a9ed3b],0xbc7baea3
  427538:	in     al,dx
  427539:	dec    ebx
  42753a:	mov    ds:0x67614d69,eax
  427540:	jno    0x427542
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0x1a9a8b87,al
  4275c1:	xor    eax,0xa21564be
  4275c6:	add    DWORD PTR [eax],eax
  4275c8:	cmc    
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    BYTE PTR [eax+0x64],dh
  4275ce:	xor    al,0x25
  4275d0:	rol    dl,1
  4275d2:	mov    esp,0x3998cdbc
  4275d7:	cmp    al,0x11
  4275d9:	xchg   esi,eax
  4275da:	inc    ecx
  4275db:	sub    esp,edi
  4275dd:	mov    edx,0x826a393a
  4275e2:	test   DWORD PTR [ebp+edi*8+0x7cd95cc7],ecx
  4275e9:	fisttp QWORD PTR [edx-0x3a]
  4275ec:	jp     0x4275d7
  4275ee:	aad    0xa6
  4275f0:	bound  esi,QWORD PTR [ecx+0x24]
  4275f3:	nop
  4275f4:	mov    ?,WORD PTR [edi+0x6c]
  4275f7:	(bad)  
  4275f9:	pop    ss
  4275fa:	pop    eax
  4275fb:	mov    dl,0x36
  4275fd:	sbb    dx,WORD PTR [ebx]
  427600:	jns    0x427601
  427602:	adc    DWORD PTR fs:[edx+0x36],ecx
  427606:	les    eax,FWORD PTR [edx]
  427608:	shl    DWORD PTR ds:[edx-0x48c466dd],cl
  42760f:	repnz rcl DWORD PTR [ecx-0x280e1544],0xe9
  427617:	mov    ebx,DWORD PTR [ebx-0x2]
  42761a:	imul   edx,DWORD PTR [edx],0x60
  42761d:	ret    
  42761e:	pushf  
  42761f:	shr    BYTE PTR es:[eax-0x712310c],1
  427626:	mov    ds:0xbfe0365c,eax
  42762b:	dec    ebx
  42762c:	push   es
  42762d:	sub    dh,0xce
  427630:	inc    esp
  427631:	mov    ds:0x5dca9467,al
  427636:	and    cl,BYTE PTR [esi]
  427638:	out    dx,eax
  427639:	dec    ebp
  42763a:	jno    0x42768e
  42763c:	cs test al,0x13
  42763f:	lock sub BYTE PTR [edx+0x69],dh
  427643:	ss jg  0x427633
  427646:	test   eax,0xc64614b8
  42764b:	mov    edx,0x8d17216c
  427650:	in     al,dx
  427651:	mov    bl,0x6b
  427653:	sbb    al,0xe7
  427655:	mov    dl,0xf4
  427657:	and    BYTE PTR [ecx+0x1],ch
  42765a:	retf   
  42765b:	push   0x2dd1d0ed
  427660:	outs   dx,DWORD PTR ds:[esi]
  427661:	sub    dh,BYTE PTR [esi+0x2b]
  427664:	mov    ebp,0x7099466f
  427669:	xchg   ecx,eax
  42766a:	stc    
  42766b:	cmp    bh,ah
  42766d:	push   ss
  42766e:	ins    DWORD PTR es:[edi],dx
  42766f:	jnp    0x427659
  427671:	rcr    DWORD PTR [edx-0x57],cl
  427674:	jns    0x4276f3
  427676:	les    eax,FWORD PTR [edi+0x1a02ab10]
  42767c:	js     0x42765b
  42767e:	push   es
  42767f:	rcl    bl,cl
  427681:	ret    0x7b88
  427684:	stos   BYTE PTR es:[edi],al
  427685:	dec    esp
  427686:	jge    0x427665
  427688:	dec    ebx
  427689:	outs   dx,DWORD PTR ds:[esi]
  42768a:	xchg   DWORD PTR [ecx],ebp
  42768c:	sbb    eax,0x186f4fbd
  427691:	mov    BYTE PTR [ecx],dh
  427693:	ror    BYTE PTR [esi],1
  427695:	fcom   DWORD PTR [edi]
  427697:	mov    ds:0xbbb8ebec,eax
  42769c:	aaa    
  42769d:	jo     0xeb0339a9
  4276a3:	sbb    ecx,DWORD PTR [ebp-0x63dce0f1]
  4276a9:	int3   
  4276aa:	xor    eax,0x2c8f15b9
  4276af:	pop    ebp
  4276b0:	or     al,0x42
  4276b2:	fstp   DWORD PTR ds:[esi+0x34]
  4276b6:	dec    esi
  4276b7:	pop    ds
  4276b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276b9:	repnz pusha 
  4276bb:	mov    bh,0x44
  4276bd:	int    0x10
  4276bf:	out    0xed,al
	...
  427731:	add    BYTE PTR [eax],al
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	xchg   esi,eax
  427741:	mov    BYTE PTR [edx+ebp*8],0xa
  427745:	mov    ds:0xf50001,eax
  42774a:	add    BYTE PTR [eax],al
  42774c:	push   cs
  42774d:	jle    0x4276d4
  42774f:	jge    0x427737
  427751:	or     BYTE PTR [ebp-0x271cce51],ch
  427757:	ins    DWORD PTR es:[edi],dx
  427758:	inc    ebx
  427759:	fld    QWORD PTR [eax+0x29]
  42775c:	clc    
  42775d:	or     esp,DWORD PTR [edi]
  42775f:	dec    esp
  427760:	into   
  427761:	ret    
  427762:	jae    0x427751
  427764:	fisttp QWORD PTR [eax+0x22]
  427767:	(bad)  
  427768:	fmul   QWORD PTR ds:0xc9bee185
  42776e:	adc    ebx,DWORD PTR [eax+0x491ec50f]
  427774:	mov    eax,0xbae80d99
  427779:	sbb    DWORD PTR [esi+eax*2],0x6d4cbf9e
  427780:	adc    al,0x19
  427782:	shl    DWORD PTR [ecx+0x575c2a36],1
  427788:	das    
  427789:	mov    ?,WORD PTR [ecx]
  42778b:	mov    al,BYTE PTR [edx-0x3b]
  42778e:	xor    eax,0x1378d099
  427793:	xchg   esi,eax
  427794:	rcr    ah,1
  427796:	add    eax,0x2e9f3099
  42779b:	mov    WORD PTR [edi],ds
  42779d:	icebp  
  42779e:	mov    eax,0xb8541c93
  4277a3:	jle    0x4277f9
  4277a5:	cld    
  4277a6:	jbe    0x427807
  4277a8:	scas   eax,DWORD PTR es:[edi]
  4277a9:	sti    
  4277aa:	aas    
  4277ab:	jne    0x427782
  4277ad:	loop   0x427748
  4277af:	xor    al,BYTE PTR es:[edx+0x21445cc8]
  4277b6:	jns    0x4277d7
  4277b8:	sbb    eax,0x5ebb35f9
  4277bd:	out    0x8f,al
  4277bf:	fs nop
  4277c1:	mov    cs,WORD PTR [esp+esi*4]
  4277c4:	sub    ecx,DWORD PTR ds:0xe174b928
  4277ca:	(bad)  
  4277cb:	dec    esi
  4277cc:	push   eax
  4277cd:	sub    BYTE PTR [ecx+0xad94ff9],ch
  4277d3:	aas    
  4277d4:	(bad)  
  4277d5:	out    0x84,al
  4277d7:	xchg   edx,eax
  4277d8:	cmp    ch,BYTE PTR [edx-0x26ef2881]
  4277de:	cmp    BYTE PTR [ebx+ecx*4-0x5a],bh
  4277e2:	inc    eax
  4277e3:	leave  
  4277e4:	mov    esi,0xee1f9861
  4277e9:	(bad)  
  4277ea:	cmp    al,al
  4277ec:	xor    DWORD PTR [eax],ecx
  4277ee:	sub    al,0x87
  4277f0:	in     eax,0xf5
  4277f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277f4:	push   ebx
  4277f5:	jno    0x4277e9
  4277f7:	lahf   
  4277f8:	ffreep st(2)
  4277fa:	pop    eax
  4277fb:	not    DWORD PTR [ebp-0x1c1f4df4]
  427801:	mov    ah,0xd0
  427803:	aas    
  427804:	xchg   ah,ch
  427806:	repnz and edi,DWORD PTR [esi+0x1d03b490]
  42780d:	xor    eax,0x209c4f34
  427812:	rol    BYTE PTR [esi+0x16],0xbf
  427816:	jbe    0x427881
  427818:	mov    ah,0xcf
  42781a:	data16 or al,0xb1
  42781d:	sbb    DWORD PTR [ecx+0x70],0x35ec79fc
  427824:	lock jns 0x42786d
  427827:	addr16 push ss
  427829:	xchg   edx,eax
  42782a:	inc    ebp
  42782b:	add    DWORD PTR [edi],esp
  42782d:	sahf   
  42782e:	dec    dx
  427830:	mov    dl,BYTE PTR [ecx+0x6e5a7e23]
  427836:	out    dx,eax
  427837:	push   ds
  427838:	cmp    edi,DWORD PTR [ebx]
  42783a:	gs out 0xb6,eax
  42783d:	test   DWORD PTR [edx],edi
  42783f:	pop    esp
  427840:	fild   WORD PTR [eax]
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	cld    
  4278c1:	mov    ecx,0xa3ff073f
  4278c6:	add    DWORD PTR [eax],eax
  4278c8:	cmc    
  4278c9:	add    BYTE PTR [eax],al
  4278cb:	add    BYTE PTR [esi],dl
  4278cd:	jmp    0x4f60:0x49f1a910
  4278d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278d5:	ret    0x3e81
  4278d8:	in     eax,0xb5
  4278da:	jge    0x4278d0
  4278dc:	aas    
  4278dd:	bound  ebp,QWORD PTR [ebx]
  4278df:	fldcw  WORD PTR [eax+0x63]
  4278e2:	das    
  4278e3:	xor    cl,bh
  4278e5:	inc    ebp
  4278e6:	in     al,0x46
  4278e8:	shl    BYTE PTR [ebx+eiz*8-0x19],0x65
  4278ed:	enter  0x38e1,0xc6
  4278f1:	sub    eax,0xb7adca23
  4278f6:	pop    esp
  4278f7:	jnp    0x42790f
  4278f9:	test   DWORD PTR [esi-0x75],esp
  4278fc:	push   cs
  4278fd:	sar    BYTE PTR [eax+0x6e84a27a],cl
  427903:	fdivr  DWORD PTR [edi-0x18]
  427906:	repnz xor BYTE PTR [edi],al
  427909:	cdq    
  42790a:	loopne 0x427967
  42790c:	add    DWORD PTR [edi-0x1109c81f],eax
  427912:	outs   dx,BYTE PTR ds:[esi]
  427913:	shr    BYTE PTR ds:[esi-0x6677acb],1
  42791a:	nop
  42791b:	inc    edx
  42791c:	xor    edi,DWORD PTR [ebx+eax*8]
  42791f:	scas   eax,DWORD PTR es:[edi]
  427920:	fsubr  DWORD PTR [ecx-0x65]
  427923:	mov    bl,0x5c
  427925:	jne    0x42796e
  427927:	add    al,0xd3
  427929:	cmp    eax,0x1810921c
  42792e:	call   0xb602e50a
  427933:	cmp    al,BYTE PTR [ecx+0x37]
  427936:	ins    DWORD PTR es:[edi],dx
  427937:	popf   
  427938:	fst    QWORD PTR [esi-0x3ad82638]
  42793e:	jmp    0x427973
  427940:	lods   eax,DWORD PTR ds:[esi]
  427941:	push   ss
  427942:	sbb    al,0x43
  427944:	xor    ah,BYTE PTR [eax+0x35af17ae]
  42794a:	imul   edi,DWORD PTR [ebx-0x7b],0xffffffd1
  42794e:	xchg   bh,cl
  427950:	test   BYTE PTR ds:0x137ef876,dh
  427956:	pop    ebp
  427957:	addr16 jmp 0x1fbdc32c
  42795d:	pop    ss
  42795e:	movntps XMMWORD PTR [ebx],xmm6
  427961:	ret    
  427962:	mov    ch,0xaa
  427964:	xor    al,0x64
  427966:	mov    edi,DWORD PTR [esi]
  427968:	push   ecx
  427969:	jmp    0x12c5:0x5eaba9bc
  427970:	dec    ecx
  427971:	and    DWORD PTR [ebp+0x53],eax
  427974:	ret    0x308
  427977:	or     eax,0xf9915666
  42797c:	sub    DWORD PTR [eax+edi*2+0x46],esp
  427980:	ss ins DWORD PTR es:[edi],dx
  427982:	pusha  
  427983:	dec    ebp
  427984:	lods   al,BYTE PTR ds:[esi]
  427985:	mov    dh,0xf5
  427987:	adc    al,0xc
  427989:	and    eax,0x19603101
  42798e:	ins    DWORD PTR es:[edi],dx
  42798f:	or     dh,0x48
  427992:	and    eax,0x10ecf185
  427997:	or     ecx,DWORD PTR [eax*8-0x45aa2b84]
  42799e:	adc    esi,DWORD PTR [edx+0x66]
  4279a1:	pop    ds
  4279a2:	add    BYTE PTR [ebx+0x16],0x64
  4279a6:	jae    0x427988
  4279a8:	or     al,BYTE PTR [esi+eax*8+0x57a685f3]
  4279af:	hlt    
  4279b0:	test   eax,0x6090a37a
  4279b5:	leave  
  4279b6:	jbe    0x4279f8
  4279b8:	in     eax,0x69
  4279ba:	mov    bl,0x9a
  4279bc:	lahf   
  4279bd:	add    ebp,ebp
  4279bf:	es hlt 
	...
  427a31:	add    BYTE PTR [eax],al
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x8f
  427a41:	fist   WORD PTR [ebp-0x57]
  427a44:	hlt    
  427a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a46:	add    DWORD PTR [eax],eax
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    al,bh
  427a4d:	outs   dx,BYTE PTR ds:[esi]
  427a4e:	sbb    bh,BYTE PTR [eax-0x1df62910]
  427a54:	xor    al,0xc1
  427a56:	push   eax
  427a57:	push   edi
  427a58:	mov    ds:0xf20b4376,eax
  427a5d:	push   ebp
  427a5e:	mov    dl,0xb7
  427a60:	inc    ebx
  427a61:	pop    edx
  427a62:	in     eax,0x7b
  427a64:	test   DWORD PTR [edx+ebx*2],eax
  427a67:	in     al,0x2e
  427a69:	clc    
  427a6a:	mov    ebx,eax
  427a6c:	pop    ss
  427a6d:	repz arpl WORD PTR [esp+ecx*2+0x515272de],bp
  427a75:	popa   
  427a76:	add    eax,0x6e0d8ecd
  427a7b:	aaa    
  427a7c:	icebp  
  427a7d:	std    
  427a7e:	mov    DWORD PTR [edx+edi*4],esp
  427a81:	add    eax,0xab1c98d0
  427a86:	out    0x32,eax
  427a88:	jne    0x427a80
  427a8a:	mov    DWORD PTR [edi],ebx
  427a8c:	mov    ch,0x67
  427a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a8f:	das    
  427a90:	inc    esp
  427a91:	stos   DWORD PTR es:[edi],eax
  427a92:	add    al,0x88
  427a94:	call   0x8940c7b9
  427a99:	pop    ds
  427a9a:	mov    edx,0x9f7f1dc9
  427a9f:	jmp    DWORD PTR [edi]
  427aa1:	mov    esp,0x838575a1
  427aa6:	sar    DWORD PTR [ebx+0x76],1
  427aa9:	or     al,0x8c
  427aab:	pop    edi
  427aac:	fcmovb st,st(2)
  427aae:	xchg   BYTE PTR [esi],bh
  427ab0:	jnp    0x427a7e
  427ab2:	daa    
  427ab3:	shl    esi,1
  427ab5:	xchg   ecx,eax
  427ab6:	push   edi
  427ab7:	hlt    
  427ab8:	jns    0x427a96
  427aba:	sbb    al,bl
  427abc:	push   0x63
  427abe:	sbb    al,0xf6
  427ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ac1:	dec    ebx
  427ac2:	ds out 0xdb,eax
  427ac5:	jle    0x427afd
  427ac7:	add    eax,0x6e37451d
  427acc:	call   0x2dc2:0xd9b4e599
  427ad3:	pop    esi
  427ad4:	aas    
  427ad5:	fmul   st,st(4)
  427ad7:	popa   
  427ad8:	loopne 0x427ab5
  427ada:	and    BYTE PTR [edx],dl
  427adc:	sub    ecx,esp
  427ade:	cmp    DWORD PTR [esi-0x6b4b3892],esp
  427ae4:	cwde   
  427ae5:	fwait
  427ae6:	sub    al,0x48
  427ae8:	or     ebp,DWORD PTR [edi]
  427aea:	pop    esi
  427aeb:	xor    esp,esp
  427aed:	jns    0x427ac6
  427aef:	add    BYTE PTR [ecx+0x6],dh
  427af2:	mov    cl,0xdd
  427af4:	call   0xa40389cf
  427af9:	xor    DWORD PTR [edi],esp
  427afb:	and    ecx,DWORD PTR [ebp+0x8]
  427afe:	mov    DWORD PTR [ecx-0x51],edx
  427b01:	mov    bh,0xc5
  427b03:	inc    edi
  427b04:	pop    esi
  427b05:	add    cl,BYTE PTR [edx]
  427b07:	je     0x427aa4
  427b09:	in     eax,dx
  427b0a:	sub    DWORD PTR [ebp-0x73],ebx
  427b0d:	xchg   ecx,edi
  427b0f:	int3   
  427b10:	xor    cl,BYTE PTR [esi-0x685a8f01]
  427b16:	lods   eax,DWORD PTR ds:[esi]
  427b17:	mov    edx,0xe6b4ec57
  427b1c:	leave  
  427b1d:	and    al,0x91
  427b1f:	in     al,dx
  427b20:	loopne 0x427b5b
  427b22:	jle    0x427af9
  427b24:	aad    0xc8
  427b26:	popf   
  427b27:	mov    bl,0xb7
  427b29:	xor    eax,0xa99f8cf0
  427b2e:	jns    0x427b4b
  427b30:	mov    edx,DWORD PTR [ecx+edx*4-0x42a80d47]
  427b37:	les    esp,FWORD PTR [esi+0x3b]
  427b3a:	in     eax,dx
  427b3b:	mov    esi,0x2cac2f53
  427b40:	xchg   edi,eax
	...
  427bb1:	add    BYTE PTR [eax],al
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x6714fe65
  427bc1:	push   DWORD PTR [edx+0x1a5e90a]
  427bc7:	add    ch,dh
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [eax+0x77d645ae],bh
  427bd1:	not    esp
  427bd3:	hlt    
  427bd4:	je     0x427bab
  427bd6:	pop    ss
  427bd7:	adc    bh,BYTE PTR [esp+edx*1+0x65162cbe]
  427bde:	jp     0x427bb0
  427be0:	int    0x6d
  427be2:	das    
  427be3:	stos   BYTE PTR es:[edi],al
  427be4:	fdivr  st(0),st
  427be6:	out    0x0,al
  427be8:	mov    dh,0x60
  427bea:	jmp    0x427be9
  427bec:	or     al,0xbd
  427bee:	cwde   
  427bef:	cli    
  427bf0:	pusha  
  427bf1:	aam    0xf2
  427bf3:	in     al,dx
  427bf4:	fiadd  WORD PTR [edi]
  427bf6:	test   eax,0xafdeb493
  427bfb:	cli    
  427bfc:	idiv   BYTE PTR [eax-0x3482acb8]
  427c02:	dec    esp
  427c03:	fldenv [eax+0x2f]
  427c06:	inc    ecx
  427c07:	push   es
  427c08:	push   edx
  427c09:	arpl   WORD PTR [esi+0x41191880],sp
  427c0f:	ja     0x427c8c
  427c11:	jecxz  0x427c47
  427c13:	call   0xcc61:0xcf9a22df
  427c1a:	adc    dh,bh
  427c1c:	or     BYTE PTR [ebx],0x30
  427c1f:	push   edi
  427c20:	pop    esi
  427c21:	enter  0x3d9f,0xc1
  427c25:	pusha  
  427c26:	lds    ebx,FWORD PTR [edx+0x4cfd7d2f]
  427c2c:	push   ebx
  427c2d:	or     BYTE PTR [edi-0xc7fbe0],bh
  427c33:	sahf   
  427c34:	jge    0x427ca7
  427c36:	cmc    
  427c37:	sbb    eax,0xefb3cc77
  427c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c3d:	aas    
  427c3e:	push   edx
  427c3f:	ret    0xc0ee
  427c42:	aad    0x1d
  427c44:	sar    ebp,0xee
  427c47:	les    ebp,FWORD PTR [esi+0x25]
  427c4a:	aad    0xb2
  427c4c:	inc    eax
  427c4d:	push   ss
  427c4e:	jecxz  0x427c3f
  427c50:	push   ebp
  427c51:	jmp    0x5090:0x2658342a
  427c58:	pop    DWORD PTR [ecx]
  427c5a:	repnz mov esp,0xb97365a6
  427c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c61:	push   eax
  427c62:	(bad)  
  427c63:	pop    ebx
  427c64:	mov    ah,0xb4
  427c66:	iret   
  427c67:	mov    bh,0xe9
  427c69:	js     0x427c90
  427c6b:	add    eax,0x6581cd7a
  427c70:	nop
  427c71:	adc    DWORD PTR [edx-0x31],edi
  427c74:	fisubr WORD PTR [edi-0xa]
  427c77:	xor    DWORD PTR [edx+0x12],esi
  427c7a:	inc    edi
  427c7b:	popf   
  427c7c:	jecxz  0x427c2c
  427c7e:	sbb    esi,DWORD PTR [eax+eiz*8]
  427c81:	and    BYTE PTR [edx-0x1],cl
  427c84:	adc    esp,DWORD PTR [edx+0x6f]
  427c87:	in     al,0x4a
  427c89:	pop    ebp
  427c8a:	shl    dl,0x20
  427c8d:	push   edi
  427c8e:	jg     0x427cef
  427c90:	loop   0x427c95
  427c92:	inc    esp
  427c93:	push   esp
  427c94:	ss dec esi
  427c96:	clc    
  427c97:	(bad)  
  427c98:	mov    dh,0x37
  427c9a:	stc    
  427c9b:	sub    BYTE PTR [edx-0x6abe2bd5],al
  427ca1:	mov    eax,0x4ce9408b
  427ca6:	or     cl,BYTE PTR [edx-0x4]
  427ca9:	gs call 0x5951:0xff4ea942
  427cb1:	imul   ebp,DWORD PTR [ecx+0xbf6f3e3],0x9b864b76
  427cbb:	mov    edx,0x6493f6b3
  427cc0:	test   al,0x0
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0xd2a1:0xdc63ecf9
  427d41:	adc    ecx,DWORD PTR [esp-0x22]
  427d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d46:	add    DWORD PTR [eax],eax
  427d48:	cmc    
  427d49:	add    BYTE PTR [eax],al
  427d4b:	add    BYTE PTR [esi+eax*1-0x4e],dl
  427d4f:	sub    al,0x3d
  427d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d52:	rcl    BYTE PTR [edx+eax*1],cl
  427d55:	sti    
  427d56:	and    eax,0x11cb732d
  427d5b:	stos   DWORD PTR es:[edi],eax
  427d5c:	push   0x8272f538
  427d61:	shr    DWORD PTR [eax-0x44],1
  427d64:	mov    eax,0x47683280
  427d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d6a:	or     al,0xe
  427d6c:	mov    edx,0xd43c1172
  427d71:	cmp    al,0x7
  427d73:	mov    ds:0x39046d47,eax
  427d78:	adc    esp,edx
  427d7a:	(bad)  
  427d7b:	push   ds
  427d7c:	pop    esp
  427d7d:	jle    0x427d1d
  427d7f:	retf   
  427d80:	pop    ebp
  427d81:	and    ah,BYTE PTR [eax+0x2af122cc]
  427d87:	in     eax,dx
  427d88:	retf   0xf7a6
  427d8b:	out    dx,al
  427d8c:	xchg   BYTE PTR [edi],dh
  427d8e:	pusha  
  427d8f:	dec    edx
  427d90:	popf   
  427d91:	outs   dx,BYTE PTR ds:[esi]
  427d92:	dec    ebp
  427d93:	push   ds
  427d94:	(bad)  
  427d95:	jl     0x427dda
  427d97:	add    BYTE PTR [ecx+0x4882436],bh
  427d9d:	aas    
  427d9e:	iret   
  427d9f:	ins    WORD PTR es:[edi],dx
  427da1:	mov    ebp,0x57f216df
  427da6:	mov    edi,0x7ae6160
  427dab:	fs cli 
  427dad:	cs aaa 
  427daf:	out    0x4a,eax
  427db1:	jp     0x427d6b
  427db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427db4:	cmc    
  427db5:	jns    0x427d81
  427db7:	lods   al,BYTE PTR ds:[esi]
  427db8:	(bad)  
  427db9:	pop    edi
  427dba:	push   esp
  427dbb:	out    dx,eax
  427dbc:	retf   0xf994
  427dbf:	sub    dh,BYTE PTR [ebx+0x39549fcd]
  427dc5:	lahf   
  427dc6:	cdq    
  427dc7:	pop    ecx
  427dc8:	mov    ch,0x48
  427dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dcb:	jne    0x427e19
  427dcd:	rol    BYTE PTR [edx-0x4f],cl
  427dd0:	push   es
  427dd1:	inc    ebx
  427dd2:	sbb    edx,0x4f
  427dd5:	shl    bl,1
  427dd7:	xor    BYTE PTR [ebx-0x6dc43c6a],dh
  427ddd:	test   al,0x9b
  427ddf:	ins    DWORD PTR es:[edi],dx
  427de0:	sub    BYTE PTR [ebp+0x58],dl
  427de3:	push   esi
  427de4:	jmp    0x427e58
  427de6:	jbe    0x427ddd
  427de8:	(bad)  
  427de9:	hlt    
  427dea:	mov    DWORD PTR [edx-0x1ad5f76d],eax
  427df0:	leave  
  427df1:	mov    esp,0xc5571cac
  427df6:	jl     0x427db7
  427df8:	push   cs
  427df9:	enter  0xc5bd,0x4a
  427dfd:	jp     0x427e23
  427dff:	(bad)  
  427e00:	fisttp WORD PTR [ecx-0x52]
  427e03:	xlat   BYTE PTR ds:[ebx]
  427e04:	gs cli 
  427e06:	pushf  
  427e07:	push   es
  427e08:	ficomp WORD PTR [edx+0x5728cb66]
  427e0e:	mov    bl,0x6b
  427e10:	pusha  
  427e11:	adc    DWORD PTR [eax-0x16a5fb5],esp
  427e17:	std    
  427e18:	push   ebx
  427e19:	call   0xc53d:0x7ff41b23
  427e20:	(bad)  
  427e21:	mov    esi,0x8dcca8c5
  427e26:	stos   BYTE PTR es:[edi],al
  427e27:	jno    0x427e06
  427e29:	mov    ch,0xdf
  427e2b:	iret   
  427e2c:	in     al,dx
  427e2d:	div    BYTE PTR [edx+esi*1+0x1a5b05e9]
  427e34:	fadd   DWORD PTR [edx]
  427e36:	(bad)  
  427e38:	sub    dl,bh
  427e3a:	ja     0x427e30
  427e3c:	and    al,0xa
  427e3e:	int    0xbc
  427e40:	outs   dx,DWORD PTR ds:[esi]
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	adc    ebx,ecx
  427ec2:	xchg   edx,eax
  427ec3:	rcl    bl,0xa7
  427ec6:	add    DWORD PTR [eax],eax
  427ec8:	cmc    
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    ah,ah
  427ecd:	mov    ebx,0x60c081d5
  427ed2:	stc    
  427ed3:	test   DWORD PTR [edi+0x9],eax
  427ed6:	and    DWORD PTR [ecx+0x2189469],0x901ad204
  427ee0:	int3   
  427ee1:	(bad)  [edx+esi*2-0x33cd2e75]
  427ee8:	mov    al,0x91
  427eea:	push   ds
  427eeb:	(bad)  
  427eed:	addr16 mov ebx,0x5e320f7b
  427ef3:	push   esp
  427ef4:	xor    al,0xee
  427ef6:	mov    dl,ah
  427ef8:	and    esi,esp
  427efa:	pop    edi
  427efb:	push   0xffffffb6
  427efd:	pop    edx
  427efe:	in     al,0x42
  427f00:	xor    DWORD PTR [ecx],ecx
  427f02:	(bad)  
  427f03:	cmp    DWORD PTR [edi+0x2f],esp
  427f06:	mov    ecx,0xd4233566
  427f0b:	mov    cl,0x7b
  427f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f0e:	stos   DWORD PTR es:[edi],eax
  427f0f:	ds mov eax,ds
  427f12:	(bad)  
  427f13:	sbb    eax,0xf1710b1
  427f18:	fiadd  WORD PTR [edi-0xeaab05f]
  427f1e:	daa    
  427f1f:	enter  0x3f0c,0xe5
  427f23:	cmp    dl,dh
  427f25:	shl    DWORD PTR [esi],0x85
  427f28:	imul   ecx,DWORD PTR [ecx+0x1076ec4c],0xe7f46e47
  427f32:	shl    esp,1
  427f34:	adc    DWORD PTR [ebx+0x40],0x650b30d7
  427f3b:	xchg   edi,eax
  427f3c:	sahf   
  427f3d:	xor    ch,BYTE PTR [edx+0x52]
  427f40:	jecxz  0x427f06
  427f42:	or     BYTE PTR [eax-0x4e],0x2d
  427f46:	rcl    DWORD PTR [ebx],cl
  427f48:	loop   0x427f58
  427f4a:	and    esi,DWORD PTR [ebx+0x53754dd9]
  427f50:	jne    0x427ee4
  427f52:	mov    cl,0x92
  427f54:	fs jae 0x427fb7
  427f57:	pop    ebp
  427f58:	mov    dh,0xcb
  427f5a:	je     0x427ef8
  427f5c:	xor    DWORD PTR [edx+ebp*4-0x2f],0xffffff99
  427f61:	leave  
  427f62:	inc    ebp
  427f63:	xchg   BYTE PTR [edi+0x58f68a25],bl
  427f69:	aam    0xc3
  427f6b:	push   eax
  427f6c:	(bad)  
  427f6d:	loopne 0x427f95
  427f6f:	sub    bl,BYTE PTR fs:[ebp-0x54507f6e]
  427f76:	pop    ss
  427f77:	mov    ebx,0x66a23c75
  427f7c:	dec    edx
  427f7d:	push   ds
  427f7e:	aaa    
  427f7f:	iret   
  427f80:	push   0xffffffa5
  427f82:	mov    esp,0xc14c922e
  427f87:	mov    dx,0xe938
  427f8b:	stos   DWORD PTR es:[edi],eax
  427f8c:	clc    
  427f8d:	leave  
  427f8e:	outs   dx,DWORD PTR ds:[esi]
  427f8f:	adc    al,0xf9
  427f91:	popa   
  427f92:	icebp  
  427f93:	dec    esp
  427f94:	fisttp DWORD PTR [esi+0x2b6627df]
  427f9a:	stc    
  427f9b:	push   ecx
  427f9c:	ins    BYTE PTR es:[edi],dx
  427f9d:	int    0x82
  427f9f:	jae    0x427fe4
  427fa1:	dec    esi
  427fa2:	push   ss
  427fa3:	jp     0x427f2e
  427fa5:	ret    
  427fa6:	loopne 0x427fa6
  427fa8:	ficom  WORD PTR ds:0x7b0466eb
  427fae:	test   BYTE PTR [edx-0x4f],ah
  427fb1:	pusha  
  427fb2:	dec    edi
  427fb3:	jg     0x427f5b
  427fb5:	popa   
  427fb6:	xchg   ebp,eax
  427fb7:	(bad)  
  427fb8:	xchg   ebp,eax
  427fb9:	adc    BYTE PTR [esi-0x43],0xd7
  427fbd:	dec    ecx
  427fbe:	sub    ebx,DWORD PTR [eax+0xd5]
	...
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [esi-0x45],esp
  428042:	jnp    0x427ff8
  428044:	enter  0x1a8,0x0
  428048:	cmc    
  428049:	add    BYTE PTR [eax],al
  42804b:	add    BYTE PTR [ebp+0x551765c3],ch
  428051:	fcom   st(5)
  428053:	fisttp QWORD PTR [ebp-0x319922ab]
  428059:	mov    ebx,0x90c983c0
  42805e:	add    BYTE PTR [esi-0x60529b62],dl
  428064:	mov    cl,0xf7
  428066:	mov    ah,0xf
  428068:	gs sbb esp,edx
  42806b:	cmp    eax,0xcbb642a6
  428070:	lods   eax,DWORD PTR ds:[esi]
  428071:	push   esp
  428072:	arpl   WORD PTR [eax-0x36],ax
  428075:	xchg   ecx,eax
  428076:	test   DWORD PTR [edi],edx
  428078:	sbb    BYTE PTR [ecx-0x77a5c86d],bl
  42807e:	pop    es
  42807f:	in     eax,0x3c
  428081:	mov    ebx,DWORD PTR [ecx+0x3d]
  428084:	push   eax
  428085:	popf   
  428086:	popf   
  428087:	rol    BYTE PTR [eax-0x4beec7fb],0x71
  42808e:	aam    0x2
  428090:	sbb    dh,BYTE PTR [ebx+0x7bce2791]
  428096:	dec    ebx
  428097:	xchg   ecx,eax
  428098:	jo     0x42802c
  42809a:	xchg   edx,eax
  42809b:	test   al,0x40
  42809d:	add    bl,bh
  42809f:	hlt    
  4280a0:	aas    
  4280a1:	out    dx,al
  4280a2:	cwde   
  4280a3:	stc    
  4280a4:	adc    esi,DWORD PTR [ecx+ebx*4]
  4280a7:	add    BYTE PTR [edx+0xf2bc95a],ch
  4280ad:	cmp    al,0xc0
  4280af:	xchg   edx,eax
  4280b0:	inc    ecx
  4280b1:	cmp    al,BYTE PTR [edi+0x68]
  4280b4:	add    al,0x4
  4280b6:	lea    edx,[edi]
  4280b8:	cmp    edx,esp
  4280ba:	push   0x8d0fb8b3
  4280bf:	and    DWORD PTR [esi+0x38],esp
  4280c2:	lds    ebx,FWORD PTR [edi+0x3261fb90]
  4280c8:	and    DWORD PTR [edi],ebx
  4280ca:	out    0x7b,al
  4280cc:	(bad)  
  4280cd:	cmp    al,0x9c
  4280cf:	std    
  4280d0:	test   al,0x36
  4280d2:	inc    esp
  4280d3:	outs   dx,DWORD PTR ds:[esi]
  4280d4:	leave  
  4280d5:	cmp    ch,dh
  4280d7:	js     0x42811a
  4280d9:	int    0x54
  4280db:	jp     0x42807b
  4280dd:	push   ebx
  4280de:	mov    esi,0xf770391
  4280e3:	dec    ebx
  4280e4:	adc    edx,DWORD PTR [ebx+ebp*2+0x5]
  4280e8:	sub    BYTE PTR [ebx],0xbe
  4280eb:	xchg   ecx,eax
  4280ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ed:	jo     0x42814e
  4280ef:	out    0xd7,eax
  4280f1:	xchg   esp,eax
  4280f2:	iret   
  4280f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280f4:	and    cl,BYTE PTR [ebx]
  4280f6:	pop    esi
  4280f7:	and    eax,0xdccf7831
  4280fc:	arpl   WORD PTR [edi-0x40],di
  4280ff:	mov    edi,0x4c5a13b3
  428104:	mov    edi,0xd0557fec
  428109:	sub    eax,0x891dfc87
  42810e:	addr16 xchg cl,dl
  428111:	or     al,0x59
  428113:	xchg   esi,eax
  428114:	nop
  428115:	push   ebp
  428116:	pop    ss
  428117:	and    DWORD PTR [eax-0x34],ebp
  42811a:	aad    0x5b
  42811c:	out    dx,eax
  42811d:	int    0xfa
  42811f:	and    edx,0xc8a64d41
  428125:	call   esi
  428127:	inc    ecx
  428128:	mov    ch,0x6e
  42812a:	mov    al,0x4b
  42812c:	(bad)  
  42812d:	call   0xc86d:0xb0e8ca8d
  428134:	xchg   BYTE PTR [esp+ebx*8-0x7e],cl
  428138:	ror    DWORD PTR [eax-0x18],0x0
  42813c:	mov    esi,0x12bcca7b
	...
  4281b1:	add    BYTE PTR [eax],al
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xec605c4f
  4281c3:	fs mov ebp,0xf50001a9
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [eax],bl
  4281cd:	and    al,0x38
  4281cf:	loopne 0x4281c3
  4281d1:	sbb    dh,bh
  4281d3:	arpl   WORD PTR [ecx],bx
  4281d5:	xor    BYTE PTR [ecx+eiz*8+0x397df043],dh
  4281dc:	test   eax,0x33adfa2
  4281e1:	adc    eax,0xcfa0ee89
  4281e6:	cwde   
  4281e7:	movq   mm7,mm4
  4281ea:	xor    ch,ah
  4281ec:	push   ebp
  4281ed:	inc    edi
  4281ee:	pop    edx
  4281ef:	jb     0x42825e
  4281f1:	loop   0x428223
  4281f3:	add    DWORD PTR [ecx-0x71f72f19],esp
  4281f9:	mov    ds:0x5773a0b4,al
  4281fe:	dec    edi
  4281ff:	int    0xc9
  428201:	push   ebp
  428202:	lahf   
  428203:	mov    al,0xe3
  428205:	inc    esi
  428206:	dec    ebp
  428207:	dec    esp
  428208:	or     DWORD PTR es:[edx-0x335f96f3],0x709a37bc
  428213:	dec    ecx
  428214:	fs (bad) 
  428216:	mov    esi,0x5177fa0c
  42821b:	sbb    ecx,ebx
  42821d:	push   es
  42821e:	push   ecx
  42821f:	add    ecx,esp
  428221:	add    al,0xd2
  428223:	(bad)  
  428224:	scas   eax,DWORD PTR es:[edi]
  428225:	mov    bh,0xec
  428227:	mov    eax,0x6e9c8f76
  42822c:	imul   eax,DWORD PTR [edx-0x922b0d7],0xb9d7fe96
  428236:	jns    0x428239
  428238:	int    0xa9
  42823a:	mov    ebp,0x6ecc594b
  42823f:	push   cs
  428240:	jp     0x4281de
  428242:	lods   eax,DWORD PTR ds:[esi]
  428243:	adc    DWORD PTR [edi+0x5b4d0e0d],eax
  428249:	or     dl,BYTE PTR [ebx]
  42824b:	imul   edi,DWORD PTR [edx+0x4fd8bf1c],0x78c27170
  428255:	push   ss
  428256:	or     edx,esp
  428258:	mov    bl,BYTE PTR [ebx+0x4d]
  42825b:	ret    0x6a41
  42825e:	push   esi
  42825f:	mov    ecx,0x5ae12a52
  428264:	sbb    eax,0x2f28ea37
  428269:	mov    bl,0xf5
  42826b:	pop    ecx
  42826c:	and    DWORD PTR [ecx],0x39ebde93
  428272:	dec    ebx
  428273:	(bad)  
  428274:	jns    0x4282e0
  428276:	add    al,0x65
  428278:	test   BYTE PTR [edx],dh
  42827a:	(bad)  
  42827b:	mov    BYTE PTR [esi],ch
  42827d:	dec    eax
  42827e:	out    0xe1,al
  428280:	and    eax,DWORD PTR [ebx+0x6d22b1a2]
  428286:	adc    esi,DWORD PTR [ebp+0x7dcf19d1]
  42828c:	cmc    
  42828d:	lods   eax,DWORD PTR ds:[esi]
  42828e:	aas    
  42828f:	aad    0x3b
  428291:	sub    al,0xa2
  428293:	mov    eax,0x9807cb11
  428298:	push   0x34
  42829a:	mov    ch,0x16
  42829c:	les    ebp,FWORD PTR ds:0x1e4d51ed
  4282a2:	scas   al,BYTE PTR es:[edi]
  4282a3:	inc    edi
  4282a4:	(bad)  
  4282a5:	pop    ss
  4282a6:	ins    DWORD PTR es:[edi],dx
  4282a7:	lock je 0x4282a2
  4282aa:	fist   DWORD PTR ds:0x1afa1109
  4282b0:	xchg   ebp,eax
  4282b1:	(bad)  
  4282b2:	jno    0x428325
  4282b4:	cmp    BYTE PTR [eax-0x36],0xde
  4282b8:	mov    edx,0x68627c38
  4282bd:	fsubr  DWORD PTR [ebp+edx*1+0x72]
	...
  428331:	add    BYTE PTR [eax],al
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	in     eax,0xc4
  428342:	mov    dl,0x88
  428344:	mov    dl,0xaa
  428346:	add    DWORD PTR [eax],eax
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [edi-0x64],bh
  42834e:	(bad)  
  42834f:	repnz or al,0x80
  428352:	fisubr WORD PTR [ecx]
  428354:	add    eax,0x17eaed08
  428359:	rcl    BYTE PTR [edx],0xef
  42835c:	loope  0x428345
  42835e:	repnz mov cl,0x7a
  428361:	mov    esp,0xb016b6e1
  428366:	inc    edi
  428367:	xchg   esi,eax
  428368:	xchg   ebx,eax
  428369:	imul   esi,DWORD PTR [eax-0x4c463cba],0xd
  428370:	mov    ecx,0xccc1bc48
  428375:	sub    al,BYTE PTR [edx-0x18]
  428378:	fidiv  DWORD PTR [ebx+0x22]
  42837b:	imul   ebp,esi,0x5d
  42837e:	test   dl,dl
  428380:	out    0x7d,eax
  428382:	xor    BYTE PTR fs:[eax+0x21],bh
  428386:	push   ds
  428387:	xchg   dl,bh
  428389:	mov    eax,ds:0xb19d8022
  42838e:	xchg   esi,eax
  42838f:	jne    0x428387
  428391:	xor    eax,0x92cb831e
  428396:	inc    esp
  428397:	xchg   ebp,eax
  428398:	push   esp
  428399:	repnz and DWORD PTR fs:[ebx-0x78],ecx
  42839e:	rcl    bh,1
  4283a0:	add    DWORD PTR [ecx],edx
  4283a2:	jae    0x4283f0
  4283a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283a5:	fld    QWORD PTR [esi-0x48]
  4283a8:	mov    al,0xfc
  4283aa:	pushf  
  4283ab:	dec    ecx
  4283ac:	and    DWORD PTR ds:0x6bba8c41,ecx
  4283b2:	adc    BYTE PTR [eax-0x269a8d93],dl
  4283b8:	jmp    0xbb0c:0xd6eb3e67
  4283bf:	test   al,0x7
  4283c1:	cwde   
  4283c2:	inc    ebp
  4283c3:	inc    esp
  4283c4:	lahf   
  4283c5:	jne    0x4283b3
  4283c7:	xchg   ecx,eax
  4283c8:	xchg   BYTE PTR [edx],dh
  4283ca:	retf   0xbf16
  4283cd:	xchg   esi,eax
  4283ce:	inc    eax
  4283cf:	repnz xchg ecx,eax
  4283d1:	xchg   edi,eax
  4283d2:	fcmovne st,st(2)
  4283d4:	rcr    DWORD PTR [edx-0x3df36a98],cl
  4283da:	loope  0x4283ac
  4283dc:	pop    edi
  4283dd:	mov    es,WORD PTR [edx]
  4283df:	cli    
  4283e0:	(bad)  
  4283e1:	add    BYTE PTR [edx],al
  4283e3:	push   ss
  4283e4:	aad    0x99
  4283e6:	test   WORD PTR [edi],ax
  4283e9:	fcmovnu st,st(4)
  4283eb:	dec    DWORD PTR [esi-0x6e9b4299]
  4283f1:	inc    ebp
  4283f2:	adc    ecx,esp
  4283f4:	addr16 jns 0x4283b5
  4283f7:	adc    DWORD PTR [ebx],0xffffffc4
  4283fa:	int    0xa7
  4283fc:	aas    
  4283fd:	xor    al,BYTE PTR [eax+0x4aa80028]
  428403:	jmp    0xe0ea3c6b
  428408:	ins    BYTE PTR es:[edi],dx
  428409:	pop    eax
  42840a:	cs mov dh,0x86
  42840d:	mov    al,ds:0xf51d90a4
  428412:	jecxz  0x42848e
  428414:	pop    es
  428415:	sbb    DWORD PTR [esi],ebx
  428417:	pushfw 
  428419:	pop    eax
  42841a:	pop    esi
  42841b:	mov    bl,0xd3
  42841d:	sub    bl,dh
  42841f:	enter  0xd307,0x97
  428423:	repnz (bad) 
  428426:	adc    al,0x13
  428428:	dec    ebp
  428429:	inc    edx
  42842a:	jae    0x428411
  42842c:	mov    ah,0x6a
  42842e:	mov    bh,0xaf
  428430:	popa   
  428431:	(bad)  
  428432:	fnsave [edi]
  428434:	and    eax,0xfeeca37a
  428439:	fidiv  WORD PTR [ebx]
  42843b:	add    DWORD PTR [ebp-0x67fe5bcf],edi
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x3094cbf9]
  4284c1:	push   ebx
  4284c2:	add    esp,DWORD PTR [eax]
  4284c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c5:	stos   DWORD PTR es:[edi],eax
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    bl,dl
  4284cd:	imul   esp,edx,0x5e2956e5
  4284d3:	jno    0x42853d
  4284d5:	lds    edi,FWORD PTR [eax]
  4284d7:	mov    esi,DWORD PTR [esi-0x7c]
  4284da:	fsubr  st(4),st
  4284dc:	mov    ds:0xe4c2a1e7,eax
  4284e1:	mov    edi,0x5617a46f
  4284e6:	jle    0x42852b
  4284e8:	scas   al,BYTE PTR es:[edi]
  4284e9:	mov    edx,0x7086a4a4
  4284ee:	lock js 0x42854c
  4284f1:	scas   eax,DWORD PTR es:[edi]
  4284f2:	fs xchg ebx,eax
  4284f4:	and    ebx,ebx
  4284f6:	rcl    BYTE PTR [ecx],1
  4284f8:	in     eax,dx
  4284f9:	sahf   
  4284fa:	ds scas al,BYTE PTR es:[edi]
  4284fc:	inc    ecx
  4284fd:	repnz adc al,BYTE PTR [edx-0x278206b4]
  428504:	mov    dl,0xab
  428506:	adc    eax,DWORD PTR [eax+0x747c107e]
  42850c:	les    edi,FWORD PTR [edx-0x40]
  42850f:	mov    ch,0xd8
  428511:	dec    esp
  428512:	(bad)  
  428514:	cli    
  428515:	test   edi,0x5616220b
  42851b:	inc    eax
  42851c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42851d:	dec    edx
  42851e:	sbb    edx,esp
  428520:	pop    edi
  428521:	push   eax
  428522:	sub    DWORD PTR [edx-0x74d86a7d],ebp
  428528:	or     cl,ch
  42852a:	jb     0x42856d
  42852c:	xor    BYTE PTR [edi],ah
  42852e:	mov    ebx,ds
  428530:	push   ebx
  428531:	les    ebp,FWORD PTR [edx+0x383b25a]
  428537:	in     eax,0xb0
  428539:	push   ecx
  42853a:	xlat   BYTE PTR ds:[ebx]
  42853b:	test   dh,cl
  42853d:	(bad)  
  42853e:	in     eax,0x6
  428540:	inc    eax
  428541:	sub    ch,BYTE PTR [edi]
  428543:	mov    dl,0xb
  428545:	shl    BYTE PTR [edi-0x3f],1
  428548:	push   0x8e068623
  42854d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42854e:	shld   ebx,ebx,cl
  428551:	retf   0xc513
  428554:	fwait
  428555:	mov    edi,0xb57892e8
  42855a:	mov    BYTE PTR [esi+0x196ed375],bl
  428560:	mov    ah,BYTE PTR [ebx+0x39]
  428563:	jae    0x4285c5
  428565:	in     eax,0xed
  428567:	mov    edi,0x567e3313
  42856c:	sub    DWORD PTR [ebx],ecx
  42856e:	jbe    0x428575
  428570:	test   DWORD PTR [eax-0x674e66ff],0xb9751d33
  42857a:	ret    0x80b6
  42857d:	pop    edx
  42857e:	and    dh,0x1f
  428581:	adc    DWORD PTR [esi-0x7cc55d9d],edx
  428587:	mov    al,ds:0x26c7d082
  42858c:	je     0x42856c
  42858e:	(bad)  
  42858f:	outs   dx,DWORD PTR ds:[esi]
  428590:	stos   BYTE PTR es:[edi],al
  428591:	xor    al,0x8d
  428593:	or     esp,DWORD PTR [edx+0x7fe77d24]
  428599:	adc    esi,DWORD PTR [eax+0x51]
  42859c:	inc    ebx
  42859d:	push   0xffffffca
  42859f:	or     edi,DWORD PTR [ecx-0x19]
  4285a2:	mov    edx,0x6544181c
  4285a7:	or     eax,0x5d77c51
  4285ac:	mov    cl,0x81
  4285ae:	sahf   
  4285af:	or     DWORD PTR [eax],esp
  4285b1:	sbb    al,0xb5
  4285b3:	(bad)  
  4285b4:	out    0xd6,al
  4285b6:	adc    DWORD PTR [eax+edi*8],edx
  4285b9:	inc    edi
  4285ba:	ret    
  4285bb:	pop    ebp
  4285bc:	(bad)  
  4285bd:	lock pop esp
  4285bf:	xchg   edx,eax
  4285c0:	jmp    0x4285c2
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	and    BYTE PTR fs:[edi],cl
  428643:	xor    bl,BYTE PTR [esp+ebp*4+0xf50001]
  42864a:	add    BYTE PTR [eax],al
  42864c:	pop    edx
  42864d:	sub    DWORD PTR [eax-0x5532a7d3],edx
  428653:	rcl    DWORD PTR [edx+0xad18531],0x46
  42865a:	mov    edx,0x7a622c6a
  42865f:	or     al,0x23
  428661:	and    cl,BYTE PTR [esi+ecx*4+0x1264fe84]
  428668:	xchg   ebp,eax
  428669:	mov    esi,0x852bb4c5
  42866e:	rcr    DWORD PTR [edx],cl
  428670:	bnd js 0x4285f9
  428673:	xchg   edi,eax
  428674:	add    BYTE PTR [edi],0x4
  428677:	mov    ebp,0x2ad4d500
  42867c:	out    0x4c,al
  42867e:	lock mov ebx,0x7779f05
  428684:	fld    QWORD PTR [ebp+0x222029ad]
  42868a:	xchg   edi,eax
  42868b:	les    esi,FWORD PTR [ebx+0x59]
  42868e:	mov    DWORD PTR [edi-0x4a],ebx
  428691:	inc    eax
  428692:	mov    bl,0xf8
  428694:	lock mov al,ds:0x72545957
  42869a:	je     0x428698
  42869c:	mov    esi,0x6b6a0d4a
  4286a1:	in     al,0x92
  4286a3:	dec    ebp
  4286a4:	(bad)  
  4286a5:	xor    DWORD PTR [esi+0x563f2831],ebp
  4286ab:	cmp    cl,BYTE PTR [edi+0x7ceec042]
  4286b1:	inc    ebp
  4286b2:	inc    esp
  4286b3:	or     BYTE PTR [edi-0x6a7496b2],0xfb
  4286ba:	nop
  4286bb:	jp     0x428677
  4286bd:	mov    dh,0x2d
  4286bf:	mov    esi,0xc49e2a8a
  4286c4:	imul   eax,DWORD PTR [eax],0xe12fa55e
  4286ca:	jbe    0x428719
  4286cc:	jmp    0xa3a2c855
  4286d1:	jecxz  0x4286bc
  4286d3:	test   cl,bl
  4286d5:	xchg   dh,cl
  4286d7:	pop    esi
  4286d8:	lock or cl,bh
  4286db:	lea    ebp,[ebx-0x49]
  4286de:	repz jmp 0x7bcd:0x4c1396ee
  4286e6:	add    eax,0xb2da3bec
  4286eb:	inc    edx
  4286ec:	gs inc esp
  4286ee:	jmp    0xd1a2:0x4f6473e1
  4286f5:	cmp    DWORD PTR [ebp+0x3c],esp
  4286f8:	shl    DWORD PTR [ebx],1
  4286fa:	adc    ah,ch
  4286fc:	pushf  
  4286fd:	mov    bl,0x6
  4286ff:	ret    
  428700:	int3   
  428701:	or     ebx,edi
  428703:	xor    eax,0x2f329688
  428708:	mov    bl,ah
  42870a:	aaa    
  42870b:	sbb    eax,0x9b3747a3
  428710:	(bad)  
  428711:	loope  0x428720
  428713:	ins    DWORD PTR es:[edi],dx
  428714:	xchg   esp,eax
  428715:	stc    
  428716:	xchg   ebp,eax
  428717:	jmp    0x4286ad
  428719:	pop    edi
  42871a:	repnz dec edi
  42871c:	fs and cl,bl
  42871f:	shr    BYTE PTR [esi],cl
  428721:	xchg   ecx,eax
  428722:	rol    BYTE PTR [eax-0x56],0x3e
  428726:	std    
  428727:	aam    0xb8
  428729:	adc    bh,BYTE PTR [edx-0x20]
  42872c:	mov    edi,cs
  42872e:	fsubrp st(0),st
  428730:	mov    cl,BYTE PTR [ebp-0x9f40520]
  428736:	and    eax,0x58f0d0ff
  42873b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42873c:	rcl    esi,cl
  42873e:	sub    al,0xbc
  428740:	jecxz  0x428742
	...
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0x6d09299e
  4287c2:	push   edx
  4287c3:	outs   dx,BYTE PTR ds:[esi]
  4287c4:	xchg   ecx,eax
  4287c5:	lods   eax,DWORD PTR ds:[esi]
  4287c6:	add    DWORD PTR [eax],eax
  4287c8:	cmc    
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [edx],dl
  4287cd:	adc    eax,0xfef68edc
  4287d2:	or     DWORD PTR [eax],0x7e
  4287d5:	fld    QWORD PTR [edi+0x50]
  4287d8:	push   ebx
  4287d9:	pop    eax
  4287da:	mov    al,0x5
  4287dc:	sbb    esp,ebx
  4287de:	stos   BYTE PTR es:[edi],al
  4287df:	cs aam 0xac
  4287e2:	fstp   DWORD PTR [ecx-0x2b]
  4287e5:	pushf  
  4287e6:	fadd   st,st(4)
  4287e8:	dec    eax
  4287e9:	stos   BYTE PTR es:[edi],al
  4287ea:	xlat   BYTE PTR ds:[ebx]
  4287eb:	mov    dh,0xc7
  4287ed:	rcr    DWORD PTR [ebp-0x2f],cl
  4287f0:	push   ss
  4287f1:	xor    dh,dh
  4287f3:	pop    ebp
  4287f4:	mov    cs:0xd4466327,al
  4287fa:	mov    bl,0xb0
  4287fc:	jbe    0x42878e
  4287fe:	ja     0x42880b
  428800:	arpl   WORD PTR [edi],bp
  428802:	frstor [ebx]
  428804:	int    0x94
  428806:	test   al,0xb9
  428808:	pop    ecx
  428809:	cmp    DWORD PTR [esi],edi
  42880b:	cmp    DWORD PTR [ebx+esi*8-0x44],esi
  42880f:	in     al,0xb6
  428811:	(bad)  
  428813:	mov    esp,0x73e6c509
  428818:	fdivr  QWORD PTR [ebx-0x4]
  42881b:	cmp    eax,0x73d7d426
  428820:	pusha  
  428821:	sub    ebp,DWORD PTR [edi]
  428823:	in     al,0xb1
  428825:	lock mov bh,0x98
  428828:	xchg   ebx,eax
  428829:	mov    DWORD PTR [edi+ebp*4],ecx
  42882c:	es sbb al,0x1d
  42882f:	aad    0xe1
  428831:	out    0x93,al
  428833:	mov    DWORD PTR [ebx],edi
  428835:	mov    dh,0x3f
  428837:	push   edi
  428838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428839:	cmp    ah,ch
  42883b:	push   edi
  42883c:	jp     0x428848
  42883e:	ror    DWORD PTR [ebx+0x2a820626],1
  428844:	and    eax,0x90312855
  428849:	xor    esp,DWORD PTR [esi+0x281f8ada]
  42884f:	into   
  428850:	fnstenv [esi-0x41018d54]
  428856:	or     ebx,esp
  428858:	test   BYTE PTR [eax-0x62],cl
  42885b:	mov    al,ds:0x3f4efa63
  428860:	loope  0x428857
  428862:	in     al,dx
  428863:	add    al,0x7
  428865:	out    0xba,eax
  428867:	add    cl,dh
  428869:	mov    dl,0x7f
  42886b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42886c:	std    
  42886d:	rcl    ch,cl
  42886f:	lea    eax,[edx-0x6cc02b32]
  428875:	mov    eax,0x50e229b0
  42887a:	xor    al,0x7
  42887c:	out    0x93,al
  42887e:	push   ebx
  42887f:	sar    BYTE PTR [eax],0x99
  428882:	xchg   ecx,eax
  428883:	sbb    al,0xd7
  428885:	inc    ebp
  428886:	cli    
  428887:	lds    ebx,FWORD PTR [edx]
  428889:	cmc    
  42888a:	cmp    DWORD PTR [eax],edi
  42888c:	adc    ch,bh
  42888e:	test   BYTE PTR [edx-0x23],0x38
  428892:	inc    esp
  428893:	xor    BYTE PTR [ecx+ecx*1+0x14],al
  428897:	cs (bad) 
  428899:	adc    al,0xf
  42889b:	mov    cl,0xe2
  42889d:	outs   dx,DWORD PTR ds:[esi]
  42889e:	pop    es
  42889f:	xchg   ebx,eax
  4288a0:	xchg   esp,eax
  4288a1:	stc    
  4288a2:	inc    esp
  4288a3:	ds and al,dh
  4288a6:	and    eax,edi
  4288a8:	push   ss
  4288a9:	inc    eax
  4288aa:	test   al,0xe1
  4288ac:	call   0x83071138
  4288b1:	mov    WORD PTR [esi+0x6d],es
  4288b4:	adc    dh,al
  4288b6:	ret    0x91fb
  4288b9:	(bad)  
  4288ba:	xlat   BYTE PTR ds:[ebx]
  4288bb:	sub    ch,ch
  4288bd:	retf   0x74b3
  4288c0:	call   0x4288c5
	...
  428931:	add    BYTE PTR [eax],al
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	pusha  
  428941:	lahf   
  428942:	cdq    
  428943:	sub    DWORD PTR [esi-0xafffe52],eax
  428949:	add    BYTE PTR [eax],al
  42894b:	add    BYTE PTR [ecx-0x63],cl
  42894e:	jecxz  0x4288d8
  428950:	push   eax
  428951:	stos   DWORD PTR es:[edi],eax
  428952:	ret    
  428953:	inc    edx
  428954:	iret   
  428955:	sub    BYTE PTR [ebx-0x332ac935],bh
  42895b:	lods   al,BYTE PTR ds:[esi]
  42895c:	addr16 mov dh,0x1f
  42895f:	push   ebx
  428960:	mov    DWORD PTR [edi],edi
  428962:	push   cs
  428963:	cmp    eax,0xae3be917
  428968:	das    
  428969:	jmp    0x4288ee
  42896b:	jmp    0x622a:0xe3606cbc
  428972:	xor    BYTE PTR [ebx-0x39],ah
  428975:	inc    ebx
  428976:	mov    al,0xd8
  428978:	push   esi
  428979:	call   0x96a4:0xab547569
  428980:	mov    al,0x3
  428982:	jb     0x42896b
  428984:	push   edx
  428985:	call   0x7bc8:0x77627ca0
  42898c:	in     eax,dx
  42898d:	push   eax
  42898e:	and    cl,BYTE PTR [edi-0x5a]
  428991:	test   DWORD PTR [esp+ebp*1],edi
  428994:	mov    bh,bh
  428996:	cli    
  428997:	xchg   edi,eax
  428998:	inc    ecx
  428999:	sti    
  42899a:	js     0x428938
  42899c:	aas    
  42899d:	pop    es
  42899e:	jle    0x428955
  4289a0:	jo     0x4289ff
  4289a2:	loopne 0x42894a
  4289a4:	fdivr  st(1),st
  4289a6:	mov    dl,0x86
  4289a8:	sbb    al,0x87
  4289aa:	clc    
  4289ab:	or     eax,0xc49fa0eb
  4289b0:	loope  0x428997
  4289b2:	pusha  
  4289b3:	arpl   WORD PTR [ebp-0x45],di
  4289b6:	mov    cl,0xfa
  4289b8:	or     esp,DWORD PTR [edx]
  4289ba:	ds mov dl,0x23
  4289bd:	add    al,BYTE PTR [edi]
  4289bf:	and    BYTE PTR [edi+edi*4],ch
  4289c2:	and    eax,0x1a5a0b2b
  4289c7:	popw   ss
  4289c9:	dec    ebx
  4289ca:	in     al,0xf2
  4289cc:	jp     0x4289ea
  4289ce:	cmp    al,0xe3
  4289d0:	leave  
  4289d1:	mov    dh,cl
  4289d3:	outs   dx,BYTE PTR ds:[esi]
  4289d4:	sub    esp,ebx
  4289d6:	lea    esp,[edi-0x6b06ae7f]
  4289dc:	(bad)  
  4289dd:	daa    
  4289de:	int3   
  4289df:	arpl   WORD PTR [ebp+0x612579cb],dx
  4289e5:	pop    eax
  4289e6:	adc    ecx,DWORD PTR [edx-0x12]
  4289e9:	mov    DWORD PTR [esi-0x7733bda5],ebx
  4289ef:	jo     0x4289bb
  4289f1:	iret   
  4289f2:	sar    BYTE PTR [edi-0x5460e124],0xbe
  4289f9:	inc    ebp
  4289fa:	scas   eax,DWORD PTR es:[edi]
  4289fb:	cdq    
  4289fc:	xchg   ebx,eax
  4289fd:	dec    esp
  4289fe:	pop    ebx
  4289ff:	cmp    DWORD PTR [ebp-0x4036e767],ebp
  428a05:	das    
  428a06:	div    DWORD PTR [eax+0x46]
  428a09:	xchg   esp,eax
  428a0a:	cmp    ch,BYTE PTR [ecx+0x54]
  428a0d:	loopne 0x4289d5
  428a0f:	loope  0x4289dc
  428a11:	jg     0x428a2c
  428a13:	jmp    0x428a5d
  428a15:	fadd   DWORD PTR [ebx+0x3d]
  428a18:	pop    esi
  428a19:	sub    DWORD PTR [edi+0x6e0ef178],esp
  428a1f:	lahf   
  428a20:	xchg   BYTE PTR [ebp+eiz*2-0x43],dl
  428a24:	add    esi,0x2161ac83
  428a2a:	lea    ecx,[ebp+0x2e21ddf3]
  428a30:	shl    dl,0xe0
  428a33:	sti    
  428a34:	mov    ds:0x2ccc1cc5,al
  428a39:	jae    0x428a48
  428a3b:	adc    ah,BYTE PTR [esi-0x726829f5]
	...
  428ab1:	add    BYTE PTR [eax],al
  428ab3:	add    dl,cl
  428ab5:	mov    edx,DWORD PTR [edx+0x7b]
  428ab8:	push   ebx
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x7a44f691
  428ac2:	loopne 0x428ae6
  428ac4:	jnp    0x428a75
  428ac6:	add    DWORD PTR [eax],eax
  428ac8:	cmc    
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [ecx-0x59],ch
  428ace:	xchg   BYTE PTR cs:[ebx+0x9b2716b],dl
  428ad5:	rcl    ecx,1
  428ad7:	loope  0x428a86
  428ad9:	and    DWORD PTR [eax+0x13],esp
  428adc:	shr    ah,cl
  428ade:	loope  0x428aaf
  428ae0:	mov    eax,cs:0xbfaa2af
  428ae6:	fldenv [esi-0x587783f0]
  428aec:	and    al,0xa2
  428aee:	mov    esi,0xfe826dfa
  428af3:	test   DWORD PTR [ecx-0x52fc0b36],ecx
  428af9:	shr    ecx,1
  428afb:	test   BYTE PTR [esi],ch
  428afd:	dec    edi
  428afe:	mov    ch,0x52
  428b00:	ss jp  0x428b82
  428b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b04:	pushf  
  428b05:	out    dx,eax
  428b06:	imul   edi,DWORD PTR [edi],0x45e8b9ba
  428b0c:	clc    
  428b0d:	pop    ebx
  428b0e:	int    0x15
  428b10:	pop    ebp
  428b11:	push   ds
  428b12:	stos   BYTE PTR es:[edi],al
  428b13:	mov    ebx,0x22c3bf63
  428b18:	mov    ecx,0xda6a895f
  428b1d:	cmp    DWORD PTR [esi-0x31],ebx
  428b20:	popa   
  428b21:	je     0x428ad7
  428b23:	daa    
  428b24:	test   al,0xb2
  428b26:	jb     0x428b95
  428b28:	call   0xc9bd6f4
  428b2d:	inc    ebx
  428b2e:	(bad)  
  428b2f:	arpl   ax,ax
  428b31:	scas   eax,DWORD PTR es:[edi]
  428b32:	sub    bl,cl
  428b34:	and    al,BYTE PTR [ebp-0x5b82be28]
  428b3a:	mov    al,0xf0
  428b3c:	bound  eax,QWORD PTR [ebx+0xc]
  428b3f:	mov    edx,0x10bffb85
  428b44:	loope  0x428b28
  428b46:	mov    bh,0xa7
  428b48:	cli    
  428b49:	xchg   esi,eax
  428b4a:	pushf  
  428b4b:	into   
  428b4c:	sub    DWORD PTR [esi-0x5e0fef75],esp
  428b52:	repnz and edx,DWORD PTR [eax]
  428b55:	mul    DWORD PTR [edi+0x24e0e63c]
  428b5b:	out    dx,al
  428b5c:	adc    BYTE PTR [esi],dh
  428b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b5f:	mov    ah,0xca
  428b61:	jnp    0x428b63
  428b63:	test   BYTE PTR [ecx+esi*2+0x5dead7df],cl
  428b6a:	out    dx,eax
  428b6b:	push   ds
  428b6c:	dec    esp
  428b6d:	and    BYTE PTR ss:0xad2bb845,ah
  428b74:	retf   0x7d76
  428b77:	bsf    esp,DWORD PTR [ecx]
  428b7a:	jecxz  0x428ba7
  428b7c:	out    dx,al
  428b7d:	out    dx,al
  428b7e:	xchg   ch,bl
  428b80:	std    
  428b81:	enter  0xb460,0xc5
  428b85:	ds push eax
  428b87:	dec    edi
  428b88:	hlt    
  428b89:	(bad)  
  428b8a:	mov    ebx,0xdcf80a36
  428b8f:	or     BYTE PTR [edx+eax*4+0x45aaf008],0xb7
  428b97:	mov    cl,0xef
  428b99:	sbb    BYTE PTR [ebx+0xf86c6bf],ch
  428b9f:	cli    
  428ba0:	cmp    BYTE PTR [ebp-0x2378f9a8],bh
  428ba6:	adc    BYTE PTR [edi-0x1e],bh
  428ba9:	ret    0xda5c
  428bac:	(bad)  
  428bae:	(bad)  
  428baf:	push   eax
  428bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428bb1:	inc    edx
  428bb2:	push   esi
  428bb3:	ficomp DWORD PTR [esp+eax*1+0x20690ac8]
  428bba:	jae    0x428b90
  428bbc:	inc    edx
  428bbd:	dec    ebx
  428bbe:	cdq    
  428bbf:	or     BYTE PTR [edx],dh
	...
  428c31:	add    BYTE PTR [eax],al
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0xf7d7a28f
  428c41:	push   edi
  428c42:	int3   
  428c43:	in     al,0x70
  428c45:	mov    al,0x1
  428c47:	add    ch,dh
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    dl,ah
  428c4d:	mov    edi,0xc268bcd5
  428c52:	lods   eax,DWORD PTR ds:[esi]
  428c53:	ror    ah,cl
  428c55:	adc    ah,ah
  428c57:	mov    ebp,DWORD PTR [edi-0x7fcc138]
  428c5d:	mov    dl,BYTE PTR [edx+0x32fe6c7b]
  428c63:	cmovge esp,DWORD PTR [edx-0x6c]
  428c67:	push   edx
  428c68:	lahf   
  428c69:	cmp    DWORD PTR [edx+0x6fbcd930],esp
  428c6f:	mov    eax,0xb0987633
  428c74:	repnz lods eax,DWORD PTR ds:[esi]
  428c76:	dec    bx
  428c78:	popf   
  428c79:	adc    DWORD PTR [edx],0xffffffa5
  428c7c:	test   eax,0xa3d6d23a
  428c81:	xlat   BYTE PTR ds:[ebx]
  428c82:	jl     0x428c58
  428c84:	shl    BYTE PTR [bx+si-0xca4],0x3b
  428c8a:	js     0x428c4a
  428c8c:	cmp    dl,BYTE PTR [ebx]
  428c8e:	imul   esi,ecx,0x6
  428c91:	sbb    esp,DWORD PTR [esi+edi*4-0x6b90473a]
  428c98:	repz shl ebp,0xd4
  428c9c:	mov    ebx,0x8607d246
  428ca1:	xchg   BYTE PTR [ecx-0x66],ah
  428ca4:	sbb    edi,ebx
  428ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ca7:	loope  0x428c9c
  428ca9:	mov    ecx,0xae9dd79d
  428cae:	rol    DWORD PTR [edx-0x4cbe363],cl
  428cb4:	das    
  428cb5:	sbb    al,0x88
  428cb7:	lods   al,BYTE PTR ds:[esi]
  428cb8:	(bad)  
  428cb9:	out    dx,eax
  428cba:	jmp    0xce23:0x6c3cbd45
  428cc1:	sub    DWORD PTR [esi+0x63],edi
  428cc4:	xchg   ecx,eax
  428cc5:	push   eax
  428cc6:	js     0x428c7a
  428cc8:	dec    ebp
  428cc9:	iret   
  428cca:	or     al,0xfa
  428ccc:	lahf   
  428ccd:	retf   0xc8f6
  428cd0:	adc    edi,edi
  428cd2:	dec    edx
  428cd3:	cmp    BYTE PTR cs:[edi-0x67ed33e3],cl
  428cda:	dec    eax
  428cdb:	fiadd  DWORD PTR ds:0x7bf8ceda
  428ce1:	sbb    eax,0xa67df76c
  428ce6:	retf   0xd65a
  428ce9:	xor    bl,BYTE PTR [ebx]
  428ceb:	mov    edx,0xd60f2928
  428cf0:	mov    ds:0xd61ff3f,eax
  428cf5:	dec    ebx
  428cf6:	mov    bl,0xd7
  428cf8:	imul   eax,DWORD PTR [esi],0x6ee94936
  428cfe:	fwait
  428cff:	mov    al,0x6f
  428d01:	mov    edi,0x52fc6bf5
  428d06:	cmc    
  428d07:	xor    DWORD PTR [edx+0x78],eax
  428d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d0b:	gs inc ecx
  428d0d:	mov    DWORD PTR [eax],ecx
  428d0f:	jmp    0xbed0:0x171e11f4
  428d16:	xor    ebp,DWORD PTR [edi+0x42]
  428d19:	add    BYTE PTR [edx],al
  428d1b:	in     eax,0x2
  428d1d:	(bad)  
  428d1f:	fiadd  DWORD PTR [esi-0x75e31b26]
  428d25:	or     edx,DWORD PTR cs:[edi]
  428d28:	ret    
  428d29:	jns    0x428ce0
  428d2b:	jnp    0x428ce8
  428d2d:	add    BYTE PTR [eax-0x6e],ch
  428d30:	cwde   
  428d31:	mov    DWORD PTR [eax-0x18],ebp
  428d34:	addr16 sub edi,esp
  428d37:	push   ebx
  428d38:	sti    
  428d39:	ret    0x36fa
  428d3c:	inc    ebp
  428d3d:	call   0x0:0x9464b2
	...
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x710888e4
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    cl,dh
  428dcd:	or     edx,DWORD PTR [edx]
  428dcf:	or     al,0xf9
  428dd1:	iret   
  428dd2:	adc    al,0x36
  428dd4:	mov    esp,0xcd247e39
  428dd9:	fmulp  st(3),st
  428ddb:	pop    ebp
  428ddc:	sub    eax,0xbbfb4153
  428de1:	and    al,0x1f
  428de3:	fbstp  TBYTE PTR [edx]
  428de5:	(bad)  
  428de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428de7:	inc    eax
  428de8:	xor    edi,DWORD PTR [edx]
  428dea:	cli    
  428deb:	jge    0x428e55
  428ded:	mov    ebx,0xfb53e65b
  428df2:	jae    0x428e2d
  428df4:	(bad)  
  428df5:	stc    
  428df6:	sub    eax,0xf35e3f95
  428dfb:	fsub   QWORD PTR [esi]
  428dfd:	push   eax
  428dfe:	scas   al,BYTE PTR es:[edi]
  428dff:	xchg   BYTE PTR [esi-0x4d],dh
  428e02:	mov    bh,0x39
  428e04:	fldcw  WORD PTR [esi+0x2]
  428e07:	push   0xffffffdc
  428e09:	std    
  428e0a:	and    eax,0x6c738e0d
  428e0f:	add    esi,edx
  428e11:	jno    0x428de2
  428e13:	js     0x428e81
  428e15:	lea    esp,[ebp-0x51]
  428e18:	enter  0xec7f,0x7f
  428e1c:	(bad)  
  428e1d:	in     eax,dx
  428e1e:	sar    BYTE PTR [esi],cl
  428e20:	into   
  428e21:	(bad)  
  428e23:	jmp    0xd53a:0x765b1f3c
  428e2a:	ds pushaw 
  428e2d:	iret   
  428e2e:	icebp  
  428e2f:	aaa    
  428e30:	inc    ecx
  428e31:	ss xchg esp,eax
  428e33:	sbb    eax,0x77ee5cda
  428e38:	inc    eax
  428e39:	add    al,0x89
  428e3b:	xchg   esp,eax
  428e3c:	loope  0x428e00
  428e3e:	dec    esp
  428e3f:	and    DWORD PTR [eax+0x3375e321],ebp
  428e45:	in     eax,0xa5
  428e47:	retf   
  428e48:	or     al,0x3c
  428e4a:	jb     0x428e43
  428e4c:	ror    DWORD PTR [esi-0x13758a31],1
  428e52:	xchg   esi,eax
  428e53:	fcmovne st,st(7)
  428e55:	cmp    al,0xdd
  428e57:	in     eax,dx
  428e58:	out    dx,eax
  428e59:	jmp    0x2606:0x65c7b84
  428e60:	sub    esp,edx
  428e62:	xor    DWORD PTR [edi-0x72b771a3],edi
  428e68:	push   edx
  428e69:	mov    DWORD PTR [esi+edx*1-0x63],edi
  428e6d:	dec    edi
  428e6e:	push   cs
  428e6f:	mov    BYTE PTR [ecx+0x7c],ah
  428e72:	in     al,0x14
  428e74:	mov    ecx,0xaaeecb9f
  428e79:	add    DWORD PTR [esi],ebx
  428e7b:	cmp    eax,0x5c92c873
  428e80:	cld    
  428e81:	cmp    edi,eax
  428e83:	jle    0x428eca
  428e85:	nop
  428e86:	jnp    0x428e20
  428e88:	and    edi,DWORD PTR [esi]
  428e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e8b:	sbb    BYTE PTR [edx+ecx*4+0x65d82ea9],dh
  428e92:	or     BYTE PTR [edi+ebp*2-0x3e],dh
  428e96:	cwde   
  428e97:	dec    ebx
  428e98:	or     esp,DWORD PTR [edx+0x723488a6]
  428e9e:	jle    0x428e69
  428ea0:	int3   
  428ea1:	test   DWORD PTR [ebx+0x5983c1e1],edi
  428ea7:	cdq    
  428ea8:	ja     0x428eb2
  428eaa:	dec    ebp
  428eab:	dec    edx
  428eac:	imul   ebx,ebx,0x68
  428eaf:	scas   ax,WORD PTR es:[edi]
  428eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428eb2:	(bad)  
  428eb3:	xlat   BYTE PTR ds:[ebx]
  428eb4:	pop    esi
  428eb5:	or     al,0xf1
  428eb7:	mov    ebp,0xcdbe3607
  428ebc:	ins    BYTE PTR es:[edi],dx
  428ebd:	jmp    0x0:0xccd1df
	...
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	dec    ebp
  428f41:	js     0x428efd
  428f43:	ja     0x428f9f
  428f45:	mov    dl,0x1
  428f47:	add    ch,dh
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [ecx+0x5f836106],dl
  428f51:	es cs adc eax,0x52a6513d
  428f58:	shl    DWORD PTR [edi],1
  428f5a:	jecxz  0x428f87
  428f5c:	or     BYTE PTR [ebx-0x6ce60e01],ch
  428f62:	stc    
  428f63:	dec    eax
  428f64:	inc    ebx
  428f65:	xor    BYTE PTR [edx+eiz*1+0x71f244fc],bl
  428f6c:	pop    ss
  428f6d:	cmp    BYTE PTR [esi],0x75
  428f70:	jmp    0x8ab027c8
  428f75:	ins    DWORD PTR es:[edi],dx
  428f76:	imul   ebx
  428f78:	or     DWORD PTR [esi],esi
  428f7a:	mov    bl,0xad
  428f7c:	std    
  428f7d:	out    0x12,al
  428f7f:	fist   WORD PTR [esi]
  428f81:	daa    
  428f82:	lock inc edi
  428f84:	lea    esi,[eax+0x36481301]
  428f8a:	mov    edx,0x43ec9569
  428f8f:	cmp    al,0x61
  428f91:	ret    0x6a19
  428f94:	loop   0x428fc6
  428f96:	hlt    
  428f97:	jl     0x428f7f
  428f99:	mov    edx,0xab68f975
  428f9e:	mov    al,dl
  428fa0:	cmp    dl,BYTE PTR [edi+0x57]
  428fa3:	out    0xa,eax
  428fa5:	pop    ecx
  428fa6:	out    dx,eax
  428fa7:	in     al,0xf4
  428fa9:	cwde   
  428faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fab:	lods   eax,DWORD PTR ds:[esi]
  428fac:	mov    edx,ecx
  428fae:	aaa    
  428faf:	inc    ebp
  428fb0:	out    dx,eax
  428fb1:	mov    al,0xe
  428fb3:	add    esi,DWORD PTR [edx-0x2f]
  428fb6:	sub    ebx,ebp
  428fb8:	jecxz  0x428fb3
  428fba:	pop    edi
  428fbb:	ret    0x3dbe
  428fbe:	cmp    eax,0xcdf0a119
  428fc3:	mov    WORD PTR [edi-0x10],gs
  428fc6:	xor    al,0xd4
  428fc8:	mov    DWORD PTR [edx+edx*1],ebp
  428fcb:	add    ebx,DWORD PTR [esp+eax*2+0x6047fee4]
  428fd2:	(bad)  
  428fd3:	leave  
  428fd4:	sub    bl,0xa9
  428fd7:	xchg   edx,eax
  428fd8:	inc    esp
  428fd9:	sbb    ecx,DWORD PTR [edi]
  428fdb:	jae    0x428fa6
  428fdd:	push   ss
  428fde:	popa   
  428fdf:	pop    ecx
  428fe0:	sbb    edx,0x66
  428fe3:	dec    esi
  428fe4:	sbb    edi,DWORD PTR [edx+ebp*4+0x365ca405]
  428feb:	pop    es
  428fec:	xchg   esp,eax
  428fed:	mov    al,0xaf
  428fef:	dec    ebx
  428ff0:	out    0x67,eax
  428ff2:	mov    eax,ds:0xe8408ec8
  428ff7:	mov    esi,0xd30e52ae
  428ffc:	into   
  428ffd:	ja     0x42906e
  428fff:	lock mov cl,0x45
  429002:	mov    dh,0x6d
  429004:	push   edx
  429005:	das    
  429006:	inc    esp
  429007:	push   ss
  429008:	shl    BYTE PTR [edx-0x15564f1e],0x35
  42900f:	mov    esi,0xc53a1e3e
  429014:	adc    al,0x6f
  429016:	pop    ebx
  429017:	das    
  429018:	sbb    dh,BYTE PTR [ecx-0x2d4c1dbb]
  42901e:	jae    0x429098
  429020:	imul   ebp,DWORD PTR [edx+0x4f],0x37
  429024:	sahf   
  429025:	jmp    0x3530b00a
  42902a:	cmp    al,0xad
  42902c:	jl     0x42902f
  42902e:	sahf   
  42902f:	dec    ebx
  429030:	fild   WORD PTR [ecx]
  429032:	dec    ebp
  429033:	inc    ebp
  429034:	xor    ax,sp
  429037:	sbb    DWORD PTR [edi-0x45b0aae],edx
  42903d:	je     0x42909b
  42903f:	xchg   ecx,eax
  429040:	jne    0x429042
	...
  4290b2:	add    BYTE PTR [eax],al
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0xc2b66cf7
  4290c1:	mov    al,ds:0xb34f7ffd
  4290c6:	add    DWORD PTR [eax],eax
  4290c8:	cmc    
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [esi-0x6ff3cdd2],bh
  4290d1:	rol    BYTE PTR [eax+0x46],cl
  4290d4:	in     eax,dx
  4290d5:	data16 jnp 0x429135
  4290d8:	lahf   
  4290d9:	fsub   DWORD PTR [edx]
  4290db:	lea    edx,[ebx+ebx*2]
  4290de:	push   eax
  4290df:	add    al,0x7e
  4290e1:	jmp    0x7309bcf
  4290e6:	test   al,0xde
  4290e8:	adc    DWORD PTR [esi],esp
  4290ea:	mov    ecx,0xa715ae61
  4290ef:	fsubrp st(7),st
  4290f1:	mov    dh,0x20
  4290f3:	mov    ecx,0xd7294d6
  4290f8:	aad    0xd5
  4290fa:	aas    
  4290fb:	fldenv ds:0xbac6c0f5
  429101:	out    0x8,al
  429103:	sbb    al,cl
  429105:	test   DWORD PTR [esi],0xef71cc31
  42910b:	(bad)  
  42910c:	push   cs
  42910d:	retf   0x85da
  429110:	int3   
  429111:	je     0x429129
  429113:	mov    esi,0xdd71c2e7
  429118:	lods   al,BYTE PTR ds:[esi]
  429119:	sub    eax,0x82f12b60
  42911e:	mov    bl,0x9e
  429120:	int    0x81
  429122:	fmul   QWORD PTR [ebp+eiz*2-0x64e2aa8b]
  429129:	dec    eax
  42912a:	fisubr DWORD PTR [esp+edx*8]
  42912d:	cmp    esp,ecx
  42912f:	sar    BYTE PTR [edx],cl
  429131:	mov    ah,0xfb
  429133:	pop    eax
  429134:	inc    DWORD PTR [edx-0x1602cca0]
  42913a:	sub    al,0xc5
  42913c:	out    0xa9,al
  42913e:	mov    bl,0xd7
  429140:	sbb    al,BYTE PTR [ebx+ebx*1-0x3807a72f]
  429147:	cmp    al,0xa9
  429149:	pop    ebx
  42914a:	xor    DWORD PTR [ecx+0x14fde58f],esp
  429150:	sub    cl,dl
  429152:	sub    BYTE PTR [eax+0x30641e10],al
  429158:	das    
  429159:	inc    esp
  42915a:	into   
  42915b:	lods   eax,DWORD PTR ds:[esi]
  42915c:	dec    ebx
  42915d:	jnp    0x429147
  42915f:	imul   eax,DWORD PTR [ebp+ebp*8+0x3acd210f],0xffffff88
  429167:	cmp    BYTE PTR [esi+0x5c],bl
  42916a:	aad    0x34
  42916c:	mov    ds,ebx
  42916e:	inc    esp
  42916f:	jne    0x42918b
  429171:	enter  0xbe47,0x4
  429175:	call   0x241e:0x52ec4375
  42917c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42917d:	sbb    al,0x0
  42917f:	adc    DWORD PTR [ebp+0x77],ebx
  429182:	jmp    0xaf3a:0xfb0b5bb7
  429189:	mov    bl,0x54
  42918b:	or     eax,0x9b3a8595
  429190:	push   ecx
  429191:	je     0x429119
  429193:	test   DWORD PTR [edx],edi
  429195:	mov    bh,0xac
  429197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429198:	dec    esi
  429199:	mov    bh,0x61
  42919b:	mov    al,BYTE PTR [edx+0x42]
  42919e:	fs lahf 
  4291a0:	aad    0xd4
  4291a2:	push   ecx
  4291a3:	xchg   cl,bh
  4291a5:	jae    0x4291d2
  4291a7:	enter  0x184d,0xa9
  4291ab:	in     al,0x4d
  4291ad:	fsub   QWORD PTR [ecx+0x47]
  4291b0:	bound  esi,QWORD PTR [esi-0x52]
  4291b3:	mov    bl,0x79
  4291b5:	fcmovbe st,st(6)
  4291b7:	pop    eax
  4291b8:	jg     0x4291c5
  4291ba:	shl    edi,1
  4291bc:	fidivr WORD PTR [esi+0xb59f43]
	...
  429232:	add    BYTE PTR [eax],al
  429234:	(bad)  
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	sbb    al,0x0
  429242:	neg    BYTE PTR [esp+eax*2]
  429245:	mov    ah,0x1
  429247:	add    ch,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ebx+ebx*2+0x62],al
  42924f:	and    eax,0xe05db0a2
  429254:	dec    ebp
  429255:	sub    bl,ch
  429257:	ret    0xa9e8
  42925a:	pusha  
  42925b:	or     edi,DWORD PTR [ebp-0x414e3650]
  429261:	mov    ah,0xfe
  429263:	mov    DWORD PTR [esi],ebx
  429265:	mov    cl,BYTE PTR [ebx+0x33]
  429268:	jp     0x42923f
  42926a:	xlat   BYTE PTR ds:[ebx]
  42926b:	jbe    0x4292cc
  42926d:	xor    edi,DWORD PTR [ebp-0xc425ff0]
  429273:	sub    eax,0xb9eea54a
  429278:	stos   BYTE PTR es:[edi],al
  429279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42927a:	les    edx,FWORD PTR [esi-0x16]
  42927d:	dec    ebp
  42927e:	repnz test eax,0x71ecdca2
  429284:	add    ch,0x70
  429287:	jmp    0x42924c
  429289:	mov    ah,0x48
  42928b:	mov    cl,0x68
  42928d:	(bad)  
  42928e:	clc    
  42928f:	aad    0x8c
  429291:	mov    WORD PTR [edi],ss
  429293:	push   0x35
  429295:	cli    
  429296:	lds    ebx,FWORD PTR [ebp-0x4396571f]
  42929c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42929d:	int3   
  42929e:	cmp    al,0xb0
  4292a0:	sbb    BYTE PTR [ebx-0x3a],bl
  4292a3:	mov    ds:0xb2f1c910,eax
  4292a8:	sub    BYTE PTR [ebp+eax*2+0x220e8bee],al
  4292af:	push   eax
  4292b0:	dec    eax
  4292b1:	retf   
  4292b2:	adc    BYTE PTR [edx+0x3d9a85ee],bl
  4292b8:	cli    
  4292b9:	inc    edx
  4292ba:	ret    0x1cf1
  4292bd:	push   ds
  4292be:	mov    ds,ebp
  4292c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4292c1:	mov    ah,0xba
  4292c3:	pop    edi
  4292c4:	add    eax,0xbb0edca2
  4292c9:	push   edi
  4292ca:	mov    ah,0xbe
  4292cc:	cs mov ebp,0xedfc4031
  4292d2:	shl    DWORD PTR [ebx+0x1e518bb5],1
  4292d8:	loopne 0x429330
  4292da:	stos   BYTE PTR es:[edi],al
  4292db:	cmp    ah,BYTE PTR [edi+0x55aa5a0b]
  4292e1:	ret    
  4292e2:	mov    ebx,0x4e25814b
  4292e7:	pop    ebp
  4292e8:	(bad)  
  4292e9:	(bad)  
  4292eb:	mov    ds:0x9a1c1da2,eax
  4292f0:	loop   0x429331
  4292f2:	jmp    0x71c2:0xd4504573
  4292f9:	daa    
  4292fa:	mov    esi,0xb153e444
  4292ff:	fadd   st(7),st
  429301:	inc    eax
  429302:	(bad)  [ecx-0xd2ca6ba]
  429308:	push   cs
  429309:	popa   
  42930a:	xchg   ecx,eax
  42930b:	out    dx,al
  42930c:	lahf   
  42930d:	sub    esp,DWORD PTR [bx+si]
  429310:	mov    al,0x83
  429312:	bound  ebp,QWORD PTR [eax+eax*8]
  429315:	cmp    esi,ebx
  429317:	mov    ecx,0xa8a999b1
  42931c:	sar    edx,1
  42931e:	test   DWORD PTR [ebx+eiz*8-0x3c],esp
  429322:	or     edx,ebx
  429324:	mov    bl,0x1e
  429326:	ficom  WORD PTR [ecx+eax*1]
  429329:	sub    cl,BYTE PTR [esi+0x2cf806ff]
  42932f:	sbb    BYTE PTR [ebp+eax*4+0x26],dh
  429333:	inc    DWORD PTR [ebx+0x28bc1963]
  429339:	loopne 0x42933a
  42933b:	add    esp,DWORD PTR [edx+eiz*4]
  42933e:	xor    ecx,DWORD PTR [esi*8+0x0]
	...
  4293b1:	add    BYTE PTR [eax],al
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	fcom   st(0)
  4293c2:	mov    esp,0x1b53998
  4293c7:	add    ch,dh
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    BYTE PTR [ebp+0x22cedd4a],ch
  4293d1:	xchg   ebx,eax
  4293d2:	add    cl,cl
  4293d4:	daa    
  4293d5:	jle    0x4293d6
  4293d7:	pop    edx
  4293d8:	fwait
  4293d9:	push   0x9d89e4bb
  4293de:	out    dx,al
  4293df:	xchg   ebx,eax
  4293e0:	(bad)  
  4293e1:	outs   dx,DWORD PTR ds:[esi]
  4293e2:	sub    al,BYTE PTR [ecx+eiz*8]
  4293e5:	gs or  ecx,0x8dab1ba4
  4293ec:	jbe    0x429404
  4293ee:	push   ecx
  4293ef:	fistp  DWORD PTR [edi+edx*8+0x6f53e526]
  4293f6:	or     al,al
  4293f8:	adc    ch,0xff
  4293fb:	test   al,0x98
  4293fd:	pushf  
  4293fe:	pop    ss
  4293ff:	pop    ds
  429400:	add    al,0x29
  429402:	pop    ss
  429403:	adc    ch,al
  429405:	or     BYTE PTR [ebp-0x73],bh
  429408:	sbb    al,0x58
  42940a:	pop    esi
  42940b:	jae    0x4293f1
  42940d:	sbb    ebx,DWORD PTR [ebp+0x6c]
  429410:	out    0x2,eax
  429412:	push   ebx
  429413:	xor    BYTE PTR [ebp+0x52ea9793],0x72
  42941a:	cmp    DWORD PTR fs:[ebx],ecx
  42941d:	es xchg ebp,eax
  42941f:	jmp    0x2c279505
  429424:	les    edx,FWORD PTR fs:[ecx-0x31]
  429428:	mov    al,0x15
  42942a:	data16 (bad) 
  42942c:	fisub  DWORD PTR [edx-0x3ad514f9]
  429432:	inc    esp
  429433:	jno    0x429444
  429435:	xor    al,BYTE PTR [esp+eax*4-0x7c9e8f51]
  42943c:	loope  0x42944c
  42943e:	push   es
  42943f:	std    
  429440:	xchg   ebx,eax
  429441:	aad    0xdc
  429443:	ret    
  429444:	mov    BYTE PTR [ebx-0x6d],ch
  429447:	iret   
  429448:	jmp    0xfc77:0x680b326e
  42944f:	fucom  st(3)
  429451:	gs push edx
  429453:	jbe    0x4294bc
  429455:	sahf   
  429456:	and    ebx,DWORD PTR [ecx]
  429458:	adc    edi,DWORD PTR [esi+0x7d2337f1]
  42945e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42945f:	and    ch,bh
  429461:	(bad)  
  429463:	add    al,0xe7
  429465:	fs leave 
  429467:	or     DWORD PTR [eax+0x2ddd7271],eax
  42946d:	jmp    0x8e317b26
  429472:	push   edx
  429473:	push   eax
  429474:	es loope 0x429490
  429477:	xor    al,0x65
  429479:	or     al,0x3f
  42947b:	xor    eax,0xe65e07b7
  429480:	pop    ss
  429481:	jnp    0x429405
  429483:	lods   al,BYTE PTR ds:[esi]
  429484:	fdivr  DWORD PTR [ecx+eax*2-0x62abd24]
  42948b:	or     BYTE PTR [edi+0x4ecd1b2a],0x24
  429492:	inc    edi
  429493:	sub    esi,DWORD PTR [esi-0xd6754fc]
  429499:	mov    esi,0x1c552c1
  42949e:	out    0xd5,eax
  4294a0:	retf   0xa423
  4294a3:	call   0x8aceb591
  4294a8:	add    ah,BYTE PTR [ecx-0x21251d7c]
  4294ae:	dec    esp
  4294af:	xor    eax,0xbc8e9339
  4294b4:	xchg   DWORD PTR [esi],esi
  4294b6:	and    ebp,DWORD PTR [edx]
  4294b8:	fldenv [edx+0x6c]
  4294bb:	cmp    al,BYTE PTR [edx+edx*2]
  4294be:	test   eax,0x1606
	...
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0xa34bc4f3
  429542:	test   al,0x61
  429544:	cs mov dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [esi*4+0x233b0e97],dl
  429552:	int    0x48
  429554:	pop    edx
  429555:	sub    eax,0x8e498df4
  42955a:	retf   0x3d00
  42955d:	push   ss
  42955e:	test   al,0x80
  429560:	mov    dh,0x6
  429562:	push   edi
  429563:	xchg   edx,eax
  429564:	sub    DWORD PTR [esi+0x3f3d2a31],eax
  42956a:	adc    eax,0x823a9420
  42956f:	mov    al,ds:0xc834828d
  429574:	(bad)  
  429575:	cmp    BYTE PTR [edx],ch
  429577:	mov    edi,0x7967ec92
  42957c:	add    bh,BYTE PTR [eax]
  42957e:	pop    eax
  42957f:	adc    cl,BYTE PTR [edi-0x40]
  429582:	(bad)  
  429583:	fadd   QWORD PTR [ebp+0x6029c613]
  429589:	retf   
  42958a:	scas   al,BYTE PTR es:[edi]
  42958b:	cld    
  42958c:	retf   0x3c86
  42958f:	inc    edi
  429590:	or     eax,0xd2cdb10c
  429595:	and    eax,0xcf56d480
  42959a:	rcl    BYTE PTR [ecx-0x48ecf0d1],1
  4295a0:	aad    0x8
  4295a2:	and    ebx,esp
  4295a4:	dec    edx
  4295a5:	sbb    al,0x78
  4295a7:	jbe    0x42955c
  4295a9:	call   ebp
  4295ab:	mov    edi,0x4d2e1ff1
  4295b0:	mov    al,ds:0x58ddb07f
  4295b5:	cld    
  4295b6:	rcr    ebp,cl
  4295b8:	addr16 ja 0x429616
  4295bb:	or     DWORD PTR [edi],ecx
  4295bd:	push   ds
  4295be:	dec    ecx
  4295bf:	test   eax,0x2e384713
  4295c4:	cmp    DWORD PTR [eax-0x5d],esi
  4295c7:	and    dl,BYTE PTR [edx+0x5e]
  4295ca:	loop   0x4295b9
  4295cc:	outs   dx,BYTE PTR ds:[esi]
  4295cd:	pushf  
  4295ce:	pop    ss
  4295cf:	cld    
  4295d0:	xchg   bh,bh
  4295d2:	(bad)  
  4295d3:	xchg   ebp,eax
  4295d4:	xchg   esp,eax
  4295d5:	in     al,dx
  4295d6:	push   ebp
  4295d7:	push   0x1f
  4295d9:	push   eax
  4295da:	sub    al,0xef
  4295dc:	test   al,0xd3
  4295de:	jb     0x429629
  4295e0:	mov    eax,ds:0x2c33faec
  4295e5:	cdq    
  4295e6:	inc    edx
  4295e7:	imul   BYTE PTR [ecx]
  4295e9:	jle    0x4295e9
  4295eb:	push   esp
  4295ec:	iret   
  4295ed:	bound  ecx,QWORD PTR [edx+0x16ff101a]
  4295f3:	cli    
  4295f4:	arpl   WORD PTR [ebx-0x2a],bx
  4295f7:	jmp    0x4571:0x9ce2de68
  4295fe:	out    dx,eax
  4295ff:	imul   DWORD PTR [eax-0x49ddb3fd]
  429605:	or     DWORD PTR [esi-0x3013dc45],0xffffffb2
  42960c:	je     0x4295b5
  42960e:	mov    ds,ebp
  429610:	jl     0x4295ad
  429612:	jb     0x429658
  429614:	pop    es
  429615:	and    eax,0xb6fe7225
  42961a:	rol    BYTE PTR cs:[edi+0x6d0bd018],0x7b
  429622:	inc    eax
  429623:	mov    dh,0x91
  429625:	in     eax,0xde
  429627:	mov    DWORD PTR [ebx+0x5d],esi
  42962a:	lea    esp,[edi+0x776343a3]
  429630:	add    dl,BYTE PTR [eax-0x248af13c]
  429636:	xchg   edi,eax
  429637:	stos   DWORD PTR es:[edi],eax
  429638:	stos   DWORD PTR es:[edi],eax
  429639:	in     eax,0x43
  42963b:	les    eax,FWORD PTR [edx+0x45]
  42963e:	call   0x42f938
	...
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	jne    0x4296e6
  4296c2:	and    eax,0x1b723c8
  4296c7:	add    ch,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [edi-0x625fd840],bl
  4296d1:	loop   0x42972d
  4296d3:	jmp    0x429691
  4296d5:	add    bl,cl
  4296d7:	jmp    0x2720a71a
  4296dc:	pop    ss
  4296dd:	fbstp  TBYTE PTR [esi+0x1994e1d7]
  4296e3:	jno    0x4296ef
  4296e5:	jg     0x4296f4
  4296e7:	lock test al,0xf1
  4296ea:	nop
  4296eb:	in     eax,0x1
  4296ed:	bound  edi,QWORD PTR [ebp+0x70b1f06b]
  4296f3:	mov    edi,0x954fe62
  4296f8:	out    0x66,al
  4296fa:	pop    ebp
  4296fb:	icebp  
  4296fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296fd:	iret   
  4296fe:	test   edi,ecx
  429700:	add    dh,dh
  429702:	bound  edx,QWORD PTR [ebp-0x41]
  429705:	in     al,0x57
  429707:	pop    edi
  429708:	stos   BYTE PTR es:[edi],al
  429709:	in     eax,dx
  42970a:	jnp    0x42973a
  42970c:	pop    eax
  42970d:	xchg   ecx,eax
  42970e:	push   ebp
  42970f:	mov    ch,0xdf
  429711:	cmp    BYTE PTR [eax+0x48],bl
  429714:	ss cs xchg esi,eax
  429717:	scas   eax,DWORD PTR es:[edi]
  429718:	das    
  429719:	push   eax
  42971a:	jne    0x429763
  42971c:	retf   0x43f6
  42971f:	push   esp
  429720:	adc    eax,0xd83b906b
  429725:	and    BYTE PTR [ebx],ah
  429727:	in     al,dx
  429728:	ins    BYTE PTR es:[edi],dx
  429729:	inc    eax
  42972a:	cwde   
  42972b:	mov    BYTE PTR [edx-0x147c2e3],ch
  429731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429732:	jp     0x42973e
  429734:	cmp    bl,BYTE PTR ds:0x9f6b9dd
  42973a:	lds    esi,FWORD PTR [edi]
  42973c:	jo     0x4296f4
  42973e:	xchg   bh,bl
  429740:	mov    eax,ds:0xdd29552
  429745:	lahf   
  429746:	xchg   edx,eax
  429747:	sbb    eax,0x669ea5c2
  42974c:	mov    edi,DWORD PTR [ecx+0x4b058794]
  429752:	push   ds
  429753:	(bad)
  429757:	jp     0x42977b
  429759:	lods   eax,DWORD PTR ds:[esi]
  42975a:	sbb    esi,DWORD PTR [edx]
  42975c:	dec    BYTE PTR [ebp-0x3d]
  42975f:	jle    0x429707
  429761:	pop    ecx
  429762:	ret    0x8dbc
  429765:	sub    DWORD PTR [ecx],edx
  429767:	call   0xb697:0x78380756
  42976e:	jp     0x429778
  429770:	int3   
  429771:	pop    ecx
  429772:	ins    DWORD PTR es:[edi],dx
  429773:	sbb    dh,al
  429775:	mov    gs,WORD PTR [ebp-0x57d9bb9f]
  42977b:	push   0xffffff8d
  42977d:	pop    ecx
  42977e:	test   DWORD PTR [ecx+0x36],ebp
  429781:	lods   al,BYTE PTR ds:[esi]
  429782:	mov    dl,BYTE PTR [ecx-0x57763e2d]
  429788:	call   0x782d:0x2ef13773
  42978f:	scas   al,BYTE PTR es:[edi]
  429790:	call   0x6bdb:0xfa6308b6
  429797:	mov    ds:0xc423fb82,al
  42979c:	pop    ds
  42979d:	mov    dl,0xd6
  42979f:	mov    dh,0x67
  4297a1:	mov    eax,ds:0x9a216329
  4297a6:	add    BYTE PTR [ecx+0x1d],0xb1
  4297aa:	fs lock std 
  4297ad:	cdq    
  4297ae:	in     eax,0x39
  4297b0:	loopne 0x429804
  4297b2:	push   eax
  4297b3:	(bad)  
  4297b4:	out    0xd8,eax
  4297b6:	mov    bh,0x98
  4297b8:	jb     0x4297ba
  4297ba:	sub    eax,0x62751a9f
  4297bf:	inc    edx
  4297c0:	imul   eax,DWORD PTR [eax],0x0
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [ecx],eax
  429841:	lods   eax,DWORD PTR ds:[esi]
  429842:	imul   ecx,DWORD PTR [esi+0x18],0xffffffb8
  429846:	add    DWORD PTR [eax],eax
  429848:	cmc    
  429849:	add    BYTE PTR [eax],al
  42984b:	add    BYTE PTR [edx-0x5311d8b6],al
  429851:	scas   al,BYTE PTR es:[edi]
  429852:	dec    edx
  429853:	(bad)  
  429854:	jg     0x429807
  429856:	ins    BYTE PTR es:[edi],dx
  429857:	mov    ds:0xb1a91232,eax
  42985c:	jns    0x429868
  42985e:	fucom  st(1)
  429860:	out    0xc4,eax
  429862:	rcl    BYTE PTR cs:[ebx+ebp*1+0x7d7e789],cl
  42986a:	ret    0x469
  42986d:	add    al,BYTE PTR [edx]
  42986f:	xor    al,BYTE PTR [ecx]
  429871:	outs   dx,BYTE PTR ds:[esi]
  429872:	jb     0x4298d7
  429874:	fadd   QWORD PTR [bp+si]
  429877:	mov    esi,0x24a9da1
  42987c:	pop    ecx
  42987d:	and    eax,0xfb24f12f
  429882:	pop    ds
  429883:	mov    WORD PTR [edi+0x3ded9b09],?
  429889:	mov    ds:0x5fe75f29,eax
  42988e:	adc    al,0xf2
  429890:	jg     0x4298d0
  429892:	push   esi
  429893:	jl     0x429880
  429895:	clc    
  429896:	(bad)  
  429897:	cmc    
  429898:	sbb    al,0xdf
  42989a:	jne    0x4298ae
  42989c:	test   DWORD PTR [eax-0xad24bc9],ebx
  4298a2:	or     esi,esi
  4298a4:	add    DWORD PTR [esi-0x45],edx
  4298a7:	rep outs dx,DWORD PTR gs:[esi]
  4298aa:	cmp    BYTE PTR [ebp-0x51f238c0],al
  4298b0:	sbb    esi,DWORD PTR [edx+0x765eecae]
  4298b6:	les    ecx,FWORD PTR [ebp+0x6f]
  4298b9:	div    BYTE PTR [ecx-0x69]
  4298bc:	inc    edx
  4298bd:	pop    edi
  4298be:	push   es
  4298bf:	repz or BYTE PTR [ebp-0x5d0beebe],ah
  4298c6:	bound  eax,QWORD PTR [ebx+0x1b]
  4298c9:	cld    
  4298ca:	shr    DWORD PTR [esp+edi*4-0x56778219],0x8
  4298d2:	add    ebp,DWORD PTR [ebx+0x4e]
  4298d5:	xor    ebp,ecx
  4298d7:	jmp    0x130c890a
  4298dc:	xchg   DWORD PTR [eax],edi
  4298de:	xor    BYTE PTR [edx-0x63d50c5a],dl
  4298e4:	xor    eax,0x2ecda818
  4298e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298ea:	mov    dl,0x5e
  4298ec:	mov    edx,DWORD PTR [ebx]
  4298ee:	sub    ebx,DWORD PTR [edi]
  4298f0:	sub    al,BYTE PTR [ecx-0x62]
  4298f3:	xchg   DWORD PTR [esi+ecx*4],ecx
  4298f6:	lea    ebp,[edi*8+0x37fda4f2]
  4298fd:	adc    BYTE PTR [esi+0x45],al
  429900:	cmp    eax,0xf6bb7a09
  429905:	ds push esi
  429907:	xcrypt-cbc (bad)
  429908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429909:	xchg   esp,eax
  42990a:	in     eax,dx
  42990b:	dec    esi
  42990c:	mov    ebp,0xa8cf0a42
  429911:	dec    ebx
  429912:	adc    al,0xef
  429914:	push   es
  429915:	aaa    
  429916:	pop    ds
  429917:	and    BYTE PTR [ecx-0x26fc97c9],al
  42991d:	add    al,0x61
  42991f:	add    al,0x97
  429921:	mov    ebp,0x2475029e
  429926:	das    
  429927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429928:	test   BYTE PTR [edi-0x38a145f4],al
  42992e:	add    DWORD PTR [ecx],ecx
  429930:	lods   al,BYTE PTR ds:[esi]
  429931:	cmc    
  429932:	pop    esi
  429933:	mov    ch,0x92
  429935:	xchg   edx,eax
  429936:	clc    
  429937:	gs and edi,ebp
  42993a:	repnz cmp dl,BYTE PTR [esi]
  42993d:	out    0xe8,eax
  42993f:	lods   eax,DWORD PTR ds:[esi]
  429940:	scas   al,BYTE PTR es:[edi]
	...
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    edx,esi
  4299c1:	test   al,0x9c
  4299c3:	popf   
  4299c4:	or     eax,0xf50001b9
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [ecx-0x5a],ah
  4299ce:	mov    dl,0xb4
  4299d0:	push   ss
  4299d1:	push   0xf5d1e381
  4299d6:	mov    eax,ds:0xfb4f266c
  4299db:	fs push cs
  4299dd:	in     al,0x7b
  4299df:	invd   
  4299e1:	es lahf 
  4299e3:	lock not BYTE PTR [eax+0x1a]
  4299e7:	ficomp DWORD PTR [esi+0x42]
  4299ea:	mov    ebx,0xb9e29bef
  4299ef:	enter  0x5b91,0xe0
  4299f3:	stos   DWORD PTR es:[edi],eax
  4299f4:	adc    esp,esp
  4299f6:	sub    al,0x37
  4299f8:	push   esi
  4299f9:	mov    ebx,0xff10862f
  4299fe:	jge    0x4299d0
  429a00:	add    DWORD PTR [esi+0x38],0xffffffa2
  429a04:	xchg   cl,bl
  429a06:	jb     0x429a84
  429a08:	inc    eax
  429a09:	adc    DWORD PTR [ecx],0xffffffe5
  429a0c:	stc    
  429a0d:	mov    ecx,0x1a877ef0
  429a12:	call   0xb735627f
  429a17:	in     eax,dx
  429a18:	dec    eax
  429a19:	mov    DWORD PTR [esi+edx*1],esp
  429a1c:	sbb    eax,DWORD PTR [eax+0x46]
  429a1f:	jmp    0xff55:0xdd304ae4
  429a26:	sbb    al,0x12
  429a28:	mov    cl,0xcb
  429a2a:	ret    0xfcdd
  429a2d:	pop    edi
  429a2e:	or     esi,esp
  429a30:	mov    ds:0x81d3207,al
  429a35:	xchg   ebp,eax
  429a36:	adc    BYTE PTR [ecx-0x18],cl
  429a39:	mov    dl,0x56
  429a3b:	jae    0x4299df
  429a3d:	jl     0x429a59
  429a3f:	jmp    0x429aa5
  429a41:	sbb    DWORD PTR [esi-0xf2a1d06],esp
  429a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a48:	lahf   
  429a49:	call   0xcbc5b8e7
  429a4e:	mov    ss,ecx
  429a50:	or     ebx,eax
  429a52:	ffreep st(2)
  429a54:	mov    esp,0x9115ad43
  429a59:	jge    0x429ac8
  429a5b:	fsubr  DWORD PTR ds:0x958ee343
  429a61:	repz xor ch,BYTE PTR [edi-0x73]
  429a65:	js     0x429a00
  429a67:	arpl   WORD PTR [ebx],bx
  429a69:	inc    ecx
  429a6a:	(bad)  
  429a6b:	mov    bl,BYTE PTR ss:[edi+0x48]
  429a6f:	out    dx,eax
  429a70:	(bad)  
  429a71:	dec    edx
  429a72:	mov    BYTE PTR [edx+0x1004d91c],ch
  429a78:	dec    eax
  429a79:	mov    ds:0xd40b52c9,al
  429a7e:	mov    bh,BYTE PTR [esi]
  429a80:	jmp    0xc2f30e9f
  429a85:	test   DWORD PTR [ebx-0x3],eax
  429a88:	rcr    esi,0x55
  429a8b:	lea    ecx,[esi+0x14]
  429a8e:	js     0x429a7d
  429a90:	mov    cl,0x8
  429a92:	jbe    0x429a59
  429a94:	leave  
  429a95:	mov    ds:0x1410b992,al
  429a9a:	fidiv  WORD PTR [eax-0x7d]
  429a9d:	and    DWORD PTR [eax+0x690bcc8a],ecx
  429aa3:	inc    ecx
  429aa4:	add    ah,dl
  429aa6:	rol    dl,cl
  429aa8:	and    ch,dh
  429aaa:	fidiv  WORD PTR [ebx+0x30d75d7f]
  429ab0:	int    0x4e
  429ab2:	xchg   edx,eax
  429ab3:	mov    dh,0x36
  429ab5:	mov    DWORD PTR [eax+0x21],eax
  429ab8:	test   al,0xa5
  429aba:	mov    ah,0xc1
  429abc:	sbb    DWORD PTR [eax+0x3d],esi
  429abf:	add    eax,0x2
	...
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x954c
  429b42:	out    dx,al
  429b43:	push   ebx
  429b44:	add    bh,BYTE PTR [edx+0xf50001]
  429b4a:	add    BYTE PTR [eax],al
  429b4c:	stos   BYTE PTR es:[edi],al
  429b4d:	cmp    ebp,DWORD PTR [ebx+0x60]
  429b50:	js     0x429b4d
  429b52:	dec    edx
  429b53:	inc    edx
  429b54:	fcomp  QWORD PTR [ebp-0x42c850cd]
  429b5a:	mul    DWORD PTR [ebp-0x10]
  429b5d:	ret    0xdc82
  429b60:	add    eax,0xa89620e9
  429b65:	stos   DWORD PTR es:[edi],eax
  429b66:	inc    edi
  429b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b68:	push   cs
  429b69:	sar    BYTE PTR fs:[esi+0xf],0x49
  429b6e:	outs   dx,BYTE PTR ds:[esi]
  429b6f:	cmp    eax,0x39a6147c
  429b74:	repz in al,dx
  429b76:	or     BYTE PTR [edi],0xbe
  429b79:	test   eax,0x9de39ead
  429b7e:	idiv   DWORD PTR [ebp+0x37]
  429b81:	jae    0x429be3
  429b83:	xchg   edi,eax
  429b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b85:	push   es
  429b86:	aaa    
  429b87:	out    dx,eax
  429b88:	in     al,dx
  429b89:	jne    0x429bfa
  429b8b:	ficomp DWORD PTR [eax-0x49]
  429b8e:	xchg   ecx,eax
  429b8f:	fnstenv [eax+0xe]
  429b92:	in     al,0xe7
  429b94:	lods   al,BYTE PTR ds:[esi]
  429b95:	and    DWORD PTR [edi+eax*4+0x11],ebp
  429b99:	mov    dh,0x48
  429b9b:	std    
  429b9c:	xchg   ebp,eax
  429b9d:	fmulp  st(1),st
  429b9f:	sar    DWORD PTR [eax],0xd2
  429ba2:	fnstenv ds:0xc40c1993
  429ba8:	(bad)  
  429ba9:	shr    BYTE PTR [ebx+0x60],1
  429bac:	fcomp  QWORD PTR [edi+0x77469e14]
  429bb2:	pop    ds
  429bb3:	ret    0x485
  429bb6:	mov    dh,0xed
  429bb8:	iret   
  429bb9:	mov    bh,0xda
  429bbb:	jg     0x429c09
  429bbd:	fmul   st(3),st
  429bbf:	rcr    BYTE PTR [ebx],cl
  429bc1:	pop    ebx
  429bc2:	out    dx,al
  429bc3:	std    
  429bc4:	retf   0x3f37
  429bc7:	dec    esi
  429bc8:	xor    DWORD PTR [esi+0xc],esp
  429bcb:	jg     0x429b7b
  429bcd:	jmp    0x429b5f
  429bcf:	fwait
  429bd0:	jge    0x429b77
  429bd2:	jb     0x429bd1
  429bd4:	stos   BYTE PTR es:[edi],al
  429bd5:	repnz inc edx
  429bd7:	lds    eax,FWORD PTR [ecx*4-0x4f1d5394]
  429bde:	(bad)  
  429bdf:	out    0x48,eax
  429be1:	fidivr WORD PTR [edx+0x59e61ffd]
  429be7:	sbb    DWORD PTR [ebx-0x6a97432f],0x2d2617cb
  429bf1:	xor    al,0x73
  429bf3:	outs   dx,BYTE PTR ds:[esi]
  429bf4:	inc    esp
  429bf5:	stos   BYTE PTR es:[edi],al
  429bf6:	add    eax,0x1b6dab4c
  429bfb:	xchg   ecx,eax
  429bfc:	inc    eax
  429bfd:	inc    edx
  429bfe:	push   ss
  429bff:	arpl   WORD PTR [ecx-0x17791633],bx
  429c05:	imul   edx,edx,0xffffffc2
  429c08:	sub    bl,dh
  429c0a:	mov    DWORD PTR [ebx],ebx
  429c0c:	rcl    bl,cl
  429c0e:	dec    esp
  429c0f:	(bad)  
  429c10:	or     al,0x4d
  429c12:	pop    eax
  429c13:	pusha  
  429c14:	or     dl,BYTE PTR [ecx+ebp*8-0x459ec65f]
  429c1b:	and    al,0x80
  429c1d:	push   esi
  429c1e:	adc    al,0xe0
  429c20:	pop    ss
  429c21:	ret    0xc9cd
  429c24:	gs hlt 
  429c26:	jno    0x429bde
  429c28:	adc    al,0xbc
  429c2a:	pop    ebp
  429c2b:	lock mov dh,0x6a
  429c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c2f:	xchg   edi,eax
  429c30:	mov    fs,WORD PTR [edx]
  429c32:	fs out dx,al
  429c34:	and    bh,al
  429c36:	shl    DWORD PTR [ebx-0xc],1
  429c39:	pop    ecx
  429c3b:	(bad)  
  429c3c:	xlat   BYTE PTR ds:[ebx]
  429c3d:	in     eax,0xee
  429c3f:	in     al,dx
  429c40:	fadd   DWORD PTR [eax]
	...
  429cb2:	add    BYTE PTR [eax],al
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	adc    al,BYTE PTR [edi-0x4508482f]
  429cc6:	add    DWORD PTR [eax],eax
  429cc8:	cmc    
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    dh,dh
  429ccd:	(bad)  [ecx+0x4c]
  429cd0:	mov    edx,0xd259d91a
  429cd5:	in     eax,dx
  429cd6:	test   BYTE PTR [esi+ebp*1-0x3],ah
  429cda:	das    
  429cdb:	mov    ecx,0x20184c3d
  429ce0:	mov    bl,0x96
  429ce2:	cmp    BYTE PTR [ecx-0x1a],cl
  429ce5:	inc    eax
  429ce6:	mov    edi,DWORD PTR [esi+0x2af5c860]
  429cec:	jg     0x429d5e
  429cee:	test   BYTE PTR [bp+di-0x66],dl
  429cf2:	mov    ds:0x13acc535,eax
  429cf7:	scas   eax,DWORD PTR es:[edi]
  429cf8:	popf   
  429cf9:	gs inc ebx
  429cfb:	shl    esi,0x2b
  429cfe:	loopne 0x429cb1
  429d00:	ss mov ebp,0x3f77b8bf
  429d06:	fbstp  TBYTE PTR [ebp-0x51]
  429d09:	adc    eax,0x908db3ff
  429d0e:	idiv   DWORD PTR ds:0x2ed6f1c9
  429d14:	mov    bh,0x61
  429d16:	pop    esi
  429d17:	xor    ecx,edx
  429d19:	xchg   esp,eax
  429d1a:	(bad)  
  429d1b:	(bad)  
  429d1c:	jg     0x429d9c
  429d1e:	mov    esp,0xafd9c246
  429d23:	sub    eax,0x521a521c
  429d28:	xchg   esp,eax
  429d29:	jl     0x429d03
  429d2b:	jp     0x429ce1
  429d2d:	loopne 0x429d9b
  429d2f:	inc    edi
  429d30:	jl     0x429d60
  429d32:	mov    edi,0xec942685
  429d37:	ror    BYTE PTR [edi-0x60ba78de],cl
  429d3d:	jp     0x429d9d
  429d3f:	sbb    bh,dl
  429d41:	iret   
  429d42:	fnsave [esi+eax*2+0x739ed7a6]
  429d49:	add    al,0x13
  429d4b:	test   ebx,eax
  429d4d:	and    eax,0xa04f0ad7
  429d52:	ins    BYTE PTR es:[edi],dx
  429d53:	sub    eax,0x1350fc66
  429d58:	out    0x6c,al
  429d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d5b:	in     al,dx
  429d5c:	repz xchg esi,eax
  429d5e:	sub    DWORD PTR [esi],ecx
  429d60:	push   0xe7a4e1d8
  429d65:	js     0x429d9a
  429d67:	(bad)  
  429d68:	in     al,dx
  429d69:	call   0xf6f6dd2f
  429d6e:	mov    DWORD PTR [edx],edx
  429d70:	dec    ecx
  429d71:	jg     0x429d7b
  429d73:	pop    ebp
  429d74:	push   esp
  429d75:	std    
  429d76:	ret    0x38c6
  429d79:	loopne 0x429d4d
  429d7b:	std    
  429d7c:	or     BYTE PTR [esi],bh
  429d7e:	or     al,BYTE PTR [edx+edx*2]
  429d81:	pop    edi
  429d82:	and    eax,0xabdd12e5
  429d87:	mov    WORD PTR [ebx],?
  429d89:	jne    0x429e09
  429d8b:	aas    
  429d8c:	out    dx,al
  429d8d:	sbb    edx,DWORD PTR ds:0xd4737eaf
  429d93:	mov    ch,0xf5
  429d95:	rcr    BYTE PTR [esi-0x7],0xd
  429d99:	popf   
  429d9a:	mov    ah,0xea
  429d9c:	or     eax,0x4c482435
  429da1:	call   0x9b4:0xe3d10c36
  429da8:	add    eax,0x17d4d5c8
  429dad:	mov    ecx,0x2977f5ed
  429db2:	dec    ebx
  429db3:	push   ss
  429db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429db5:	push   cs
  429db6:	pop    ecx
  429db7:	pop    ebp
  429db8:	js     0x429e0d
  429dba:	push   esi
  429dbb:	les    eax,FWORD PTR [edi+0x50b74c3d]
	...
  429e31:	add    BYTE PTR [eax],al
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x704e2ee0]
  429e41:	(bad)  
  429e42:	bound  ebx,QWORD PTR [ecx]
  429e44:	in     al,dx
  429e45:	mov    ebx,0xf50001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	rcr    DWORD PTR [ebx],0x8d
  429e4f:	(bad)  
  429e50:	jg     0x429df8
  429e52:	inc    esp
  429e53:	add    ch,ah
  429e55:	pop    ds
  429e56:	jno    0x429e2d
  429e58:	xor    dl,dl
  429e5a:	shr    BYTE PTR [ecx+0x4e],1
  429e5d:	push   ebp
  429e5e:	adc    ebp,DWORD PTR [esi+ecx*4]
  429e61:	cmp    esp,eax
  429e63:	fisubr DWORD PTR [edx+0x4f]
  429e66:	ds jg  0x429e6b
  429e69:	jo     0x429edb
  429e6b:	daa    
  429e6c:	lds    edi,FWORD PTR [eax+0x1417bfc3]
  429e72:	jmp    0x429ee2
  429e74:	and    al,0x16
  429e76:	push   esi
  429e77:	mov    dh,0x25
  429e79:	add    eax,0x660a1101
  429e7e:	jl     0x429e46
  429e80:	push   ebx
  429e81:	add    esi,ecx
  429e83:	sub    DWORD PTR [eax],0x1d015e45
  429e89:	mov    dh,al
  429e8b:	xchg   edx,eax
  429e8c:	jl     0x429e62
  429e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e8f:	retf   
  429e90:	xor    eax,0x870863c0
  429e95:	xor    al,0x2b
  429e97:	nop
  429e98:	loop   0x429ec4
  429e9a:	jecxz  0x429ea9
  429e9c:	sub    bl,al
  429e9e:	repz arpl WORD PTR [esi+0x1d256f39],bp
  429ea5:	mov    dl,0xce
  429ea7:	lds    ebp,FWORD PTR [ebx-0x52622544]
  429ead:	ins    BYTE PTR es:[edi],dx
  429eae:	push   edi
  429eaf:	xor    dl,al
  429eb1:	es ja  0x429e82
  429eb4:	pop    edi
  429eb5:	mov    esi,0x6e646911
  429eba:	rcr    DWORD PTR [esi],0xd0
  429ebd:	jmp    0x429ee1
  429ebf:	stc    
  429ec0:	imul   edi,ebp,0x59118b4f
  429ec6:	sbb    BYTE PTR [edi],0x9
  429ec9:	jnp    0x429f0b
  429ecb:	jg     0x429e95
  429ecd:	mov    esi,0x97a951e5
  429ed2:	inc    ebx
  429ed3:	mov    BYTE PTR [eax+0x96b6896],0x16
  429eda:	dec    ebx
  429edb:	mov    bl,0x97
  429edd:	mov    al,ds:0xb6e72561
  429ee2:	dec    ebx
  429ee3:	xlat   BYTE PTR ds:[ebx]
  429ee4:	ror    DWORD PTR [ecx+eiz*8-0x11],cl
  429ee8:	push   eax
  429ee9:	cmp    BYTE PTR ds:0xfc90c83a,cl
  429eef:	xor    dl,BYTE PTR [esi-0x3c]
  429ef2:	mov    ds:0x5b15935f,al
  429ef7:	cmp    BYTE PTR [esp+eiz*4+0x1ee6d134],ah
  429efe:	xor    DWORD PTR [edx-0x59],edx
  429f01:	lods   al,BYTE PTR ds:[esi]
  429f02:	sub    bl,BYTE PTR [eax-0x66]
  429f05:	sub    ebp,ecx
  429f07:	test   BYTE PTR [edx+0x7c44ef56],ch
  429f0d:	xchg   esp,eax
  429f0e:	loope  0x429efc
  429f10:	inc    DWORD PTR [esi+0x74b82c6b]
  429f16:	frstor [ebp+eiz*8-0x77776b85]
  429f1d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  429f1f:	mov    eax,0xde55bfae
  429f24:	push   ecx
  429f25:	cmp    cl,ch
  429f27:	inc    esp
  429f28:	adc    esi,DWORD PTR [edi+0x29]
  429f2b:	out    dx,al
  429f2c:	sbb    dh,cl
  429f2e:	ret    
  429f2f:	jg     0x429f09
  429f31:	pushf  
  429f32:	xor    al,0x59
  429f34:	mov    ds:0xe4ac5ae,al
  429f39:	test   DWORD PTR [edx-0x5ee665ef],eax
  429f3f:	xchg   esi,eax
  429f40:	int    0x0
	...
  429fb2:	add    BYTE PTR [eax],al
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x3b186d7b]
  429fc2:	xor    al,BYTE PTR [edx-0x1f]
  429fc5:	mov    esp,0xf50001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	nop
  429fcd:	xchg   edx,eax
  429fce:	leave  
  429fcf:	lods   eax,DWORD PTR ds:[esi]
  429fd0:	dec    ebp
  429fd1:	leave  
  429fd2:	fild   QWORD PTR [edi+0x48]
  429fd5:	xchg   BYTE PTR [edx+0x13711269],bl
  429fdb:	jae    0x42a01b
  429fdd:	es cdq 
  429fdf:	mov    ebp,0xa4589c84
  429fe4:	push   cs
  429fe5:	and    bl,0x6b
  429fe8:	xchg   esi,eax
  429fe9:	sbb    dl,BYTE PTR [edx+0x6a]
  429fec:	mov    ah,BYTE PTR [esi-0x4f]
  429fef:	inc    edi
  429ff0:	sub    ecx,edi
  429ff2:	je     0x42a038
  429ff4:	mov    esi,0xfafdd476
  429ff9:	push   ss
  429ffa:	dec    esp
  429ffb:	std    
  429ffc:	lahf   
  429ffd:	outs   dx,DWORD PTR ds:[esi]
  429ffe:	js     0x429fc8
  42a000:	fst    st(3)
  42a002:	in     eax,0x56
  42a004:	jnp    0x42a045
  42a006:	inc    eax
  42a007:	aas    
  42a008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a009:	mov    al,ds:0xbb11e4ca
  42a00e:	or     esi,DWORD PTR [edx+eiz*1+0x40]
  42a012:	mov    cl,0x7c
  42a014:	fwait
  42a015:	jb     0x429fc9
  42a017:	mov    ah,0x86
  42a019:	ds jmp 0x42a06e
  42a01c:	lds    eax,FWORD PTR [edx+0x218c1dce]
  42a022:	xchg   ecx,eax
  42a023:	mov    edx,0x71cefdae
  42a028:	sub    BYTE PTR [esp+ebp*4],dl
  42a02b:	(bad)  
  42a02c:	into   
  42a02d:	call   0x14294fb2
  42a032:	pop    edi
  42a033:	or     al,0x1
  42a035:	fs push ss
  42a037:	xor    cl,0x28
  42a03a:	inc    esp
  42a03b:	repnz out dx,eax
  42a03d:	inc    eax
  42a03e:	in     eax,0x8c
  42a040:	mov    ebx,ecx
  42a042:	sub    al,0x3f
  42a044:	es loopne 0x42a0a2
  42a047:	sub    ecx,ebx
  42a049:	dec    esi
  42a04a:	shr    DWORD PTR [eax],0x52
  42a04d:	jbe    0x42a011
  42a04f:	xchg   ebp,eax
  42a050:	(bad)  
  42a051:	sbb    DWORD PTR [esi+edi*4-0x35],ebp
  42a055:	push   0xc
  42a057:	mov    WORD PTR [edx+0x3b],?
  42a05a:	pop    ecx
  42a05b:	loope  0x42a014
  42a05d:	sub    al,ch
  42a05f:	fstp   TBYTE PTR [eax+0x357b318b]
  42a065:	sahf   
  42a066:	dec    edx
  42a067:	cmp    al,0x3b
  42a069:	sbb    DWORD PTR [eax-0x2807a574],esi
  42a06f:	mov    ebx,0x78196f9c
  42a074:	mov    al,ds:0x29c1454f
  42a079:	dec    edi
  42a07a:	or     cl,BYTE PTR [ecx-0x7e]
  42a07d:	or     ecx,DWORD PTR [eax+0x60]
  42a080:	cmp    edi,DWORD PTR [eax]
  42a082:	adc    esp,DWORD PTR [ebx+0x16e88b78]
  42a088:	jns    0x42a08d
  42a08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a08b:	jp     0x42a01b
  42a08d:	loopne 0x42a075
  42a08f:	out    0x6f,al
  42a091:	mov    dh,0x46
  42a093:	fs xchg ebp,eax
  42a095:	ja     0x42a07c
  42a097:	je     0x42a052
  42a099:	jle    0x42a0f2
  42a09b:	xor    eax,0x7753cdad
  42a0a0:	add    ebp,DWORD PTR [edi-0x32]
  42a0a3:	nop
  42a0a4:	mov    ds:0xa48e0bb,al
  42a0aa:	data16 or dh,BYTE PTR [esi+0xc29ec6b]
  42a0b1:	and    al,0x57
  42a0b3:	je     0x42a072
  42a0b5:	(bad)  
  42a0b6:	pop    ebp
  42a0b7:	cmp    esi,ebx
  42a0b9:	outs   dx,BYTE PTR ds:[esi]
  42a0ba:	mov    edx,eax
  42a0bc:	sti    
  42a0bd:	mov    ebx,0x11dcef
	...
  42a132:	add    BYTE PTR [eax],al
  42a134:	push   esi
  42a135:	xchg   ebp,edi
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	inc    ecx
  42a141:	jb     0x42a147
  42a143:	rcl    dh,cl
  42a145:	mov    ebp,0xf50001
  42a14a:	add    BYTE PTR [eax],al
  42a14c:	lods   al,BYTE PTR ds:[esi]
  42a14d:	dec    edx
  42a14e:	int    0xc4
  42a150:	test   BYTE PTR [esp+edx*8+0x5bcb27],dl
  42a157:	push   es
  42a158:	push   eax
  42a159:	adc    DWORD PTR [ecx],0xa
  42a15c:	xchg   esp,eax
  42a15d:	fldenv [ecx-0x15a8f778]
  42a163:	stos   DWORD PTR es:[edi],eax
  42a164:	outs   dx,BYTE PTR ds:[esi]
  42a165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a166:	and    esp,DWORD PTR [esi-0xd]
  42a169:	dec    ebp
  42a16a:	push   cs
  42a16b:	sbb    al,0xb4
  42a16d:	mov    edi,0x9212f9d
  42a172:	add    BYTE PTR [eax],bh
  42a174:	inc    esi
  42a175:	jae    0x42a17d
  42a177:	je     0x42a134
  42a179:	rol    BYTE PTR [eax+0x5a],1
  42a17c:	adc    dh,ch
  42a17e:	rol    BYTE PTR [ecx+0x5b826543],0xf9
  42a185:	mov    ebx,0x162697db
  42a18a:	fcomip st,st(3)
  42a18c:	and    BYTE PTR [edi],bl
  42a18e:	push   es
  42a18f:	inc    ch
  42a191:	dec    esp
  42a192:	sbb    eax,0xdbf16381
  42a197:	out    0xab,al
  42a199:	mov    cl,0x5d
  42a19b:	frstor [edx-0x6de526b2]
  42a1a1:	sbb    al,0x50
  42a1a3:	fld    st(1)
  42a1a5:	sub    eax,0x68964e34
  42a1aa:	mov    dh,0x22
  42a1ac:	mov    bl,al
  42a1ae:	jbe    0x42a1b0
  42a1b0:	jmp    0x6f14:0x59672b16
  42a1b7:	out    dx,al
  42a1b8:	outs   dx,DWORD PTR ds:[esi]
  42a1b9:	mov    dh,0x72
  42a1bb:	in     al,0x56
  42a1bd:	push   ds
  42a1be:	sbb    ecx,DWORD PTR [esi+ebx*1-0x72]
  42a1c2:	sti    
  42a1c3:	jns    0x42a23d
  42a1c5:	mov    ch,0x30
  42a1c7:	pop    edx
  42a1c8:	(bad)  
  42a1c9:	cmp    ebx,DWORD PTR [ebx-0x4248f69]
  42a1cf:	sti    
  42a1d0:	mov    DWORD PTR [eax-0x58c3dc55],ebp
  42a1d6:	add    dh,dl
  42a1d8:	fwait
  42a1d9:	jne    0x42a242
  42a1db:	arpl   WORD PTR [ecx],bp
  42a1dd:	mov    ss,ebp
  42a1df:	inc    ecx
  42a1e0:	or     al,0xe8
  42a1e2:	push   ecx
  42a1e3:	push   0xffffffb1
  42a1e5:	dec    esp
  42a1e6:	rol    eax,1
  42a1e8:	xchg   edx,eax
  42a1e9:	and    DWORD PTR [edx+0x5a7d2ea3],esi
  42a1ef:	imul   edx,DWORD PTR [ecx],0xffffffed
  42a1f2:	int    0xc
  42a1f4:	mov    cl,0xee
  42a1f6:	pop    ecx
  42a1f7:	xchg   ecx,eax
  42a1f8:	push   eax
  42a1f9:	and    bh,BYTE PTR [ecx]
  42a1fb:	scas   eax,DWORD PTR es:[edi]
  42a1fc:	push   0xffffffca
  42a1fe:	jae    0x42a236
  42a200:	mov    eax,ds:0x22e2ae5c
  42a205:	jns    0x42a207
  42a207:	jne    0x42a1a1
  42a209:	sub    eax,DWORD PTR [ecx+0x79]
  42a20c:	dec    ebp
  42a20d:	xchg   ebx,eax
  42a20e:	push   es
  42a20f:	mov    esi,0xc5e20bb6
  42a214:	lea    esi,fs:[edx-0x63dfb358]
  42a21b:	ror    BYTE PTR [eax+0x1b],1
  42a21e:	outs   dx,DWORD PTR ds:[esi]
  42a21f:	test   al,0xd9
  42a221:	call   0x578d89dc
  42a226:	push   ecx
  42a227:	lods   al,BYTE PTR ds:[esi]
  42a228:	lock pop edi
  42a22a:	in     eax,0xed
  42a22c:	mov    dh,0xc7
  42a22e:	cmc    
  42a22f:	xor    eax,0x6352b5bf
  42a234:	lods   al,BYTE PTR ds:[esi]
  42a235:	push   edx
  42a236:	mov    esi,0xf0914f78
  42a23b:	nop
  42a23c:	dec    eax
  42a23d:	std    
  42a23e:	xchg   edx,eax
  42a23f:	nop
  42a240:	push   eax
	...
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0xcb7f8ab9
  42a2c1:	sbb    BYTE PTR [edi+0x44],0xcb
  42a2c5:	mov    esi,0xf50001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	or     DWORD PTR [eax+0x6c],edx
  42a2cf:	inc    ebx
  42a2d0:	sub    eax,0x6762820f
  42a2d5:	mov    esi,0xb48c4a65
  42a2da:	sbb    al,0x39
  42a2dc:	push   edi
  42a2dd:	iret   
  42a2de:	jge    0x42a28e
  42a2e0:	rcr    edi,0x44
  42a2e3:	mov    ds:0x643ae798,eax
  42a2e8:	popf   
  42a2e9:	shr    DWORD PTR [ecx+0x295f19ac],cl
  42a2ef:	fisubr WORD PTR [edx]
  42a2f1:	repnz xor DWORD PTR [edi-0x2],esp
  42a2f5:	das    
  42a2f6:	mov    dh,0x35
  42a2f8:	aad    0x57
  42a2fa:	stc    
  42a2fb:	or     eax,DWORD PTR [esi-0x671ea5c9]
  42a301:	jb     0x42a361
  42a303:	sbb    eax,0x169338dc
  42a308:	dec    eax
  42a309:	(bad)  
  42a30a:	leave  
  42a30b:	fwait
  42a30c:	leave  
  42a30d:	dec    edx
  42a30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a30f:	inc    esp
  42a310:	(bad)  
  42a311:	fcom   st(3)
  42a313:	sbb    DWORD PTR [edx+ecx*4-0x6e5978f1],ebx
  42a31a:	mov    ds:0x9dd35241,eax
  42a31f:	fsubrp st(3),st
  42a321:	or     al,0xe
  42a323:	and    ah,BYTE PTR [ecx-0x54736cd9]
  42a329:	xchg   edi,eax
  42a32a:	xchg   edi,eax
  42a32b:	jae    0x42a2e6
  42a32d:	ret    
  42a32e:	popf   
  42a32f:	mov    ds:0xa3a27788,eax
  42a334:	mov    ds:0x652c3d7a,al
  42a339:	ins    BYTE PTR es:[edi],dx
  42a33a:	and    BYTE PTR [eax],cl
  42a33c:	mov    al,ds:0xb3619e12
  42a341:	sbb    BYTE PTR [ecx-0x2c15b107],0x10
  42a348:	stos   BYTE PTR es:[edi],al
  42a349:	and    eax,0x27faf53f
  42a34e:	in     eax,0x7e
  42a350:	jmp    0x9a6d9399
  42a355:	push   esi
  42a356:	lahf   
  42a357:	arpl   WORD PTR [edi],bp
  42a359:	mov    dh,0xc1
  42a35b:	add    dl,0x7e
  42a35e:	add    al,0x1
  42a360:	call   0x24bd:0xabb01479
  42a367:	sbb    edi,ebx
  42a369:	sbb    DWORD PTR [ecx+0x7a725177],esi
  42a36f:	xchg   ecx,eax
  42a370:	adc    ch,BYTE PTR [ecx-0x2a]
  42a373:	push   ebx
  42a374:	push   esi
  42a375:	adc    BYTE PTR [edx+0x5],0x24
  42a379:	inc    edx
  42a37a:	retf   
  42a37b:	cmp    DWORD PTR [eax+edx*2-0x57],ecx
  42a37f:	sbb    ch,BYTE PTR [eax+edx*2]
  42a382:	leave  
  42a383:	mov    dl,0x6f
  42a385:	adc    al,ch
  42a387:	push   cs
  42a388:	xor    cl,BYTE PTR [ecx]
  42a38a:	push   esp
  42a38b:	and    eax,0xa0111196
  42a390:	dec    edx
  42a391:	lods   eax,DWORD PTR ds:[esi]
  42a393:	fs das 
  42a395:	jp     0x42a398
  42a397:	push   0xffffffad
  42a399:	xchg   ecx,eax
  42a39a:	jg     0x42a321
  42a39c:	stos   DWORD PTR es:[edi],eax
  42a39d:	pop    edx
  42a39e:	addr16 aam 0xba
  42a3a1:	push   edx
  42a3a2:	fnstsw WORD PTR [ebp+0x25]
  42a3a5:	or     DWORD PTR [esi+0x666f854d],esp
  42a3ab:	add    ebp,DWORD PTR [edx-0x31]
  42a3ae:	call   0x56a12d2a
  42a3b3:	mov    cl,0x51
  42a3b5:	inc    edx
  42a3b6:	xchg   esp,eax
  42a3b7:	mov    bl,0xea
  42a3b9:	shr    DWORD PTR [ecx],1
  42a3bb:	in     eax,dx
  42a3bc:	cmp    ecx,ebx
  42a3be:	lock adc BYTE PTR [edi],bl
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a3d8
  42a441:	aad    0x7
  42a443:	mov    al,0xbf
  42a446:	add    DWORD PTR [eax],eax
  42a448:	cmc    
  42a449:	add    BYTE PTR [eax],al
  42a44b:	add    BYTE PTR [edi],al
  42a44d:	push   es
  42a44e:	add    esi,0xae38b518
  42a454:	scas   al,BYTE PTR es:[edi]
  42a455:	xor    ecx,edi
  42a457:	adc    cl,BYTE PTR [ebx-0x43b8e372]
  42a45d:	add    eax,DWORD PTR [edi+0x29]
  42a460:	adc    al,0x39
  42a462:	sbb    al,BYTE PTR ds:0x5f6fd3cb
  42a468:	ins    BYTE PTR es:[edi],dx
  42a469:	stos   BYTE PTR es:[edi],al
  42a46a:	xchg   ecx,eax
  42a46b:	addr16 repz cmp eax,edx
  42a46f:	jecxz  0x42a433
  42a471:	in     eax,dx
  42a472:	inc    esi
  42a473:	in     al,0xda
  42a475:	mov    edx,0xc2c43e20
  42a47a:	pop    ecx
  42a47b:	fild   QWORD PTR [ecx-0x3062bc33]
  42a481:	ss pushf 
  42a483:	fmul   st(2),st
  42a485:	bound  ecx,QWORD PTR [ebx+esi*1]
  42a488:	add    eax,0x732eb180
  42a48d:	dec    ebp
  42a48e:	or     BYTE PTR [esi+esi*8-0x3c9bf2f0],al
  42a495:	psubusw mm6,QWORD PTR [ebp-0x3a]
  42a499:	(bad)  
  42a49b:	aas    
  42a49c:	xchg   esp,eax
  42a49d:	je     0x42a43a
  42a49f:	cwde   
  42a4a0:	jae    0x42a4cf
  42a4a2:	mov    esp,0xe50b96d2
  42a4a7:	sbb    eax,0xf5aaf9a7
  42a4ac:	cwde   
  42a4ad:	push   eax
  42a4ae:	adc    ah,BYTE PTR [eax-0x49971095]
  42a4b4:	in     al,dx
  42a4b5:	pop    esi
  42a4b6:	loope  0x42a520
  42a4b8:	xchg   edx,eax
  42a4b9:	dec    ebx
  42a4ba:	mov    BYTE PTR [eax],dl
  42a4bc:	std    
  42a4bd:	inc    esp
  42a4be:	mov    al,0xe4
  42a4c0:	and    ecx,DWORD PTR [ecx]
  42a4c2:	cmp    ecx,DWORD PTR [esi+0x564e440f]
  42a4c8:	sahf   
  42a4c9:	jo     0x42a4be
  42a4cb:	loop   0x42a4be
  42a4cd:	arpl   WORD PTR [esi-0x15],bp
  42a4d0:	add    ebp,DWORD PTR [edi+edx*4]
  42a4d3:	pslld  mm1,QWORD PTR [edx-0x3b1867c]
  42a4da:	inc    edi
  42a4db:	xor    al,0x90
  42a4dd:	es gs pop ebx
  42a4e0:	cli    
  42a4e1:	inc    edx
  42a4e2:	xchg   bh,cl
  42a4e4:	push   cs
  42a4e5:	cmp    ebx,DWORD PTR [ebx-0x1f]
  42a4e8:	sbb    ebx,DWORD PTR [esi]
  42a4ea:	add    BYTE PTR [edx+esi*1+0x4d32eff2],0xe7
  42a4f2:	outs   dx,BYTE PTR ds:[esi]
  42a4f3:	test   DWORD PTR [edi+0x5ed222c2],edx
  42a4f9:	mov    cs,WORD PTR [ebx-0x45]
  42a4fc:	xchg   esp,eax
  42a4fd:	lds    ecx,FWORD PTR [ecx-0x4c]
  42a500:	ins    BYTE PTR es:[edi],dx
  42a501:	rcr    cl,0x9f
  42a504:	inc    esi
  42a505:	mov    edx,esi
  42a507:	xchg   ebx,eax
  42a508:	mov    bh,0x86
  42a50a:	cmp    ch,dh
  42a50c:	shr    DWORD PTR [ecx],0x9a
  42a50f:	and    bh,bh
  42a511:	mov    cl,0xb8
  42a513:	cmc    
  42a514:	xchg   DWORD PTR [eax+0x5c],ebx
  42a517:	fisubr WORD PTR [ecx-0x232ed234]
  42a51d:	imul   edi,DWORD PTR [ecx+0x27],0x57
  42a521:	ret    
  42a522:	add    al,0x97
  42a524:	inc    esi
  42a525:	test   eax,0x99c450f
  42a52a:	mov    dl,0xbf
  42a52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a52d:	call   0x1be8ff1f
  42a532:	(bad)
  42a535:	mov    fs,WORD PTR [edx+ecx*1+0x78917db4]
  42a53c:	jae    0x42a4fb
  42a53e:	enter  0x9eec,0x0
	...
  42a5b2:	add    BYTE PTR [eax],al
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	add    ah,0xcf
  42a5c3:	add    esi,DWORD PTR [ebp-0xafffe40]
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    BYTE PTR [edi],cl
  42a5cd:	jae    0x42a5e7
  42a5cf:	jae    0x42a58f
  42a5d1:	in     al,dx
  42a5d2:	repnz and cl,BYTE PTR [edx]
  42a5d5:	adc    eax,0x7a644240
  42a5da:	mov    WORD PTR [ebp+0x30],?
  42a5dd:	in     al,0x3d
  42a5df:	sar    dl,1
  42a5e1:	and    DWORD PTR [ecx-0x9],0xffffffae
  42a5e5:	mov    al,ds:0xb0387882
  42a5ea:	and    BYTE PTR [esi+0x72],bh
  42a5ed:	mov    ds:0x878473fa,eax
  42a5f2:	imul   edx,DWORD PTR [ebp+0x4717ecfc],0x80c1462f
  42a5fc:	inc    eax
  42a5fd:	ja     0x42a643
  42a5ff:	cdq    
  42a600:	xchg   ebp,eax
  42a601:	test   al,0xec
  42a603:	pushf  
  42a604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a605:	push   es
  42a606:	(bad)  
  42a607:	jg     0x42a5ae
  42a609:	int    0x84
  42a60b:	inc    ebp
  42a60c:	(bad)  
  42a60e:	ins    BYTE PTR es:[edi],dx
  42a60f:	cwde   
  42a610:	sub    BYTE PTR [edi],cl
  42a612:	mov    al,ds:0x9e2a841b
  42a617:	xchg   ah,ch
  42a619:	aad    0x80
  42a61b:	rcr    DWORD PTR [ebx+0xa],0xab
  42a61f:	xchg   ebx,eax
  42a620:	push   ebx
  42a621:	in     al,0x59
  42a623:	mov    ebp,0x842a210f
  42a628:	mul    DWORD PTR [ecx+0x13091547]
  42a62e:	lods   eax,DWORD PTR ds:[esi]
  42a62f:	mov    edi,0xd9648bbc
  42a634:	jle    0x42a5d7
  42a636:	sbb    bl,BYTE PTR [ecx+0x16b2baa3]
  42a63c:	mov    WORD PTR ds:0xf51f08d0,gs
  42a642:	popa   
  42a643:	pop    esp
  42a644:	sub    DWORD PTR ds:0xb09e05a3,esi
  42a64a:	jmp    0x1e94:0xcd7047d3
  42a651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a652:	cwde   
  42a653:	or     al,0x49
  42a655:	push   ebx
  42a656:	out    0x2c,al
  42a658:	xor    DWORD PTR [ecx],edx
  42a65a:	jmp    0x5d12:0x645ad7b4
  42a661:	cmc    
  42a662:	pusha  
  42a663:	sbb    eax,0xb49ad9fa
  42a668:	dec    ebp
  42a669:	adc    al,0x74
  42a66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a66c:	xchg   BYTE PTR ds:0xa93deb70,ch
  42a672:	fidivr WORD PTR [edx-0x5f]
  42a675:	mov    eax,0x897fc374
  42a67a:	dec    edx
  42a67b:	ror    DWORD PTR ds:0xb272625,cl
  42a681:	sbb    al,0xc0
  42a683:	jns    0x42a6dc
  42a685:	aas    
  42a686:	lock stc 
  42a688:	ss mov dh,0xba
  42a68b:	mov    ch,0x1f
  42a68d:	pop    ebx
  42a68e:	sub    DWORD PTR [ecx-0xbd85ed5],esp
  42a694:	xlat   BYTE PTR ds:[ebx]
  42a695:	and    ebp,ebp
  42a697:	test   DWORD PTR ds:0x4073916d,ebp
  42a69d:	mov    edi,0xfaa0cbeb
  42a6a2:	jb     0x42a71e
  42a6a4:	out    0x34,al
  42a6a6:	sbb    eax,0x4272241f
  42a6ab:	stos   BYTE PTR es:[edi],al
  42a6ac:	outs   dx,BYTE PTR ds:[esi]
  42a6ad:	xchg   ebx,eax
  42a6ae:	inc    esp
  42a6af:	test   eax,0x85cfd99a
  42a6b4:	shr    BYTE PTR [esi+0x8],0xb2
  42a6b8:	mov    esp,0x353e3f11
  42a6bd:	xchg   edi,eax
  42a6be:	or     al,0x41
  42a6c0:	sub    al,BYTE PTR [eax]
	...
  42a732:	add    BYTE PTR [eax],al
  42a734:	xor    BYTE PTR [edx-0x21],al
  42a737:	(bad)  
  42a738:	(bad)  
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	sar    DWORD PTR [edx-0x3e55c4d9],1
  42a746:	add    DWORD PTR [eax],eax
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [ecx-0xbb8685d],ch
  42a751:	or     dh,BYTE PTR [esi-0x4c75ae28]
  42a757:	test   DWORD PTR [ecx],esi
  42a759:	xor    eax,0xe7584ee2
  42a75e:	xor    cl,BYTE PTR [ebp-0x5a]
  42a761:	nop
  42a762:	mov    dh,BYTE PTR [esi-0x575e2531]
  42a768:	or     BYTE PTR [esi-0x38ca3a7f],dl
  42a76e:	aad    0xde
  42a770:	xchg   DWORD PTR [ebp-0x729011ed],eax
  42a776:	shl    DWORD PTR [ebp+0x20d14928],1
  42a77c:	test   DWORD PTR [ecx-0x51089d9b],eax
  42a782:	fdivr  QWORD PTR [edi]
  42a784:	ds push ss
  42a786:	jp     0x42a7c3
  42a788:	or     cl,0x3c
  42a78b:	mov    ds:0xd83096e6,al
  42a790:	jge    0x42a790
  42a792:	pop    ecx
  42a793:	mov    edx,edi
  42a795:	test   al,0x3d
  42a797:	or     esp,DWORD PTR [eax-0x27]
  42a79a:	sub    eax,0x3220b000
  42a79f:	test   eax,0x1a7a1875
  42a7a4:	mov    esp,0xec0cfb81
  42a7a9:	shl    BYTE PTR [ebx+ebx*8+0x4d],0x51
  42a7ae:	and    ebx,0x30
  42a7b1:	enter  0x7fe5,0xe8
  42a7b5:	mov    ebp,0x41672f8b
  42a7ba:	sub    ecx,eax
  42a7bc:	xchg   edx,eax
  42a7bd:	iret   
  42a7be:	push   0x6304bf0b
  42a7c3:	push   ebp
  42a7c4:	loop   0x42a750
  42a7c6:	test   BYTE PTR [ebp*1-0xb8b366a],dh
  42a7cd:	xchg   edx,eax
  42a7ce:	mov    ecx,0xfeb17397
  42a7d3:	push   cs
  42a7d4:	out    0x41,al
  42a7d6:	mov    WORD PTR [edx+0x35],?
  42a7d9:	gs daa 
  42a7db:	pop    esi
  42a7dc:	xchg   edi,eax
  42a7dd:	(bad)
  42a7e0:	aas    
  42a7e1:	and    al,0xae
  42a7e3:	pop    ebx
  42a7e4:	(bad)  
  42a7e5:	pop    ds
  42a7e6:	sbb    al,BYTE PTR [ecx]
  42a7e8:	ja     0x42a79c
  42a7ea:	and    DWORD PTR [ebx-0x6734b5eb],0x40
  42a7f1:	xchg   ecx,eax
  42a7f2:	xchg   edi,eax
  42a7f3:	lea    ebx,[ebx-0x66]
  42a7f6:	jp     0x42a856
  42a7f8:	call   0xfb11e129
  42a7fd:	std    
  42a7fe:	ins    BYTE PTR es:[edi],dx
  42a7ff:	iret   
  42a800:	aaa    
  42a801:	stos   DWORD PTR es:[edi],eax
  42a802:	pop    eax
  42a803:	jp     0x42a7ef
  42a805:	mov    al,ds:0x9dba97e1
  42a80a:	aam    0xa3
  42a80c:	rol    DWORD PTR [edi],cl
  42a80e:	enter  0xc2c7,0x53
  42a812:	dec    edi
  42a813:	outs   dx,DWORD PTR ds:[esi]
  42a814:	push   edx
  42a815:	retf   
  42a816:	xor    BYTE PTR [esi-0x47],ch
  42a819:	arpl   WORD PTR [ecx],dx
  42a81b:	jne    0x42a7f3
  42a81d:	mov    ds:0x6f0f3ba7,al
  42a822:	jmp    0xc021:0xcc92be92
  42a829:	test   al,0xce
  42a82b:	imul   esp,DWORD PTR [ecx-0x54],0xcfc202d7
  42a832:	push   ss
  42a833:	jge    0x42a7d2
  42a835:	or     esi,DWORD PTR [esi-0x3448b691]
  42a83b:	ret    
  42a83c:	cmp    eax,0x97b2cc7e
	...
  42a8b1:	add    BYTE PTR [eax],al
  42a8b3:	add    BYTE PTR [edi+0x68],dl
  42a8b6:	fistp  QWORD PTR fs:[edi-0x21]
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	rcr    dh,cl
  42a8c2:	popf   
  42a8c3:	push   esi
  42a8c4:	lahf   
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    BYTE PTR [ecx-0x18],al
  42a8ce:	push   ss
  42a8cf:	(bad)  
  42a8d0:	(bad)  
  42a8d2:	data16 xlat BYTE PTR ds:[ebx]
  42a8d4:	(bad)  
  42a8d5:	aas    
  42a8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8d7:	fistp  WORD PTR [edi+eiz*8-0x1d9046a0]
  42a8de:	loope  0x42a923
  42a8e0:	or     al,0x19
  42a8e2:	add    ecx,eax
  42a8e4:	fcmovb st,st(2)
  42a8e6:	call   0xa256c9c3
  42a8eb:	test   BYTE PTR [edi+0x70],dl
  42a8ee:	mov    cl,0xd0
  42a8f0:	int    0x53
  42a8f2:	loope  0x42a95a
  42a8f4:	hlt    
  42a8f5:	jmp    0x42a8d0
  42a8f7:	js     0x42a8a4
  42a8f9:	push   eax
  42a8fa:	cdq    
  42a8fb:	loopne 0x42a97a
  42a8fd:	and    DWORD PTR [edx+0x0],ebx
  42a900:	xor    eax,0x1dc976e8
  42a905:	in     al,0xed
  42a907:	sub    ah,ah
  42a909:	pop    edi
  42a90a:	cmp    edx,DWORD PTR [ecx-0x58]
  42a90d:	push   ecx
  42a90e:	mov    ecx,0x512bf771
  42a913:	(bad)  
  42a914:	nop
  42a915:	cs sub eax,edx
  42a918:	cmp    al,0x89
  42a91a:	leave  
  42a91b:	loopne 0x42a946
  42a91d:	out    0xfc,eax
  42a91f:	loop   0x42a930
  42a921:	out    0x22,al
  42a923:	xor    ah,ch
  42a925:	or     ebx,ebx
  42a927:	icebp  
  42a928:	and    al,0x74
  42a92a:	pop    ebp
  42a92b:	mov    ecx,0x9b3ea7ff
  42a930:	imul   edi,DWORD PTR [ebx+ebp*1+0xf],0x8
  42a935:	xor    cl,BYTE PTR [ebx]
  42a937:	sbb    edx,DWORD PTR [ebp-0x4a83575a]
  42a93d:	repnz (bad) 
  42a93f:	fimul  WORD PTR [edx]
  42a941:	ds std 
  42a943:	push   0x50f29d15
  42a948:	xchg   edx,eax
  42a949:	add    BYTE PTR [edx+0x569604e],dh
  42a94f:	inc    edx
  42a950:	jae    0x42a965
  42a952:	jno    0x42a8ef
  42a954:	nop
  42a955:	test   al,0x74
  42a957:	pop    ds
  42a958:	cld    
  42a959:	mov    dh,0x22
  42a95b:	jp     0x42a910
  42a95d:	mov    dh,0xdd
  42a95f:	rcl    BYTE PTR [edx+edi*8-0x69],cl
  42a963:	sub    DWORD PTR [edi+0x57],edi
  42a966:	test   BYTE PTR [ebx+0x3c],ch
  42a969:	pop    ds
  42a96a:	inc    edx
  42a96b:	fldenv [ebp+0x4388ac41]
  42a971:	imul   ecx,edi,0xf8eeeac5
  42a977:	out    dx,al
  42a978:	xchg   BYTE PTR [eax],dl
  42a97a:	stos   DWORD PTR es:[edi],eax
  42a97b:	shr    BYTE PTR [ecx-0x5a],1
  42a97e:	test   al,0x14
  42a980:	add    al,0x27
  42a982:	dec    ebp
  42a983:	push   ebx
  42a984:	inc    ebx
  42a985:	mov    edx,0xf17fb494
  42a98a:	dec    esp
  42a98b:	pushf  
  42a98c:	jecxz  0x42a97e
  42a98e:	xchg   edi,eax
  42a98f:	into   
  42a990:	lea    edx,[eax]
  42a992:	sbb    edx,DWORD PTR [ecx]
  42a994:	xchg   BYTE PTR [esi-0x13],ah
  42a997:	pop    ecx
  42a998:	sub    dl,dl
  42a99a:	cwde   
  42a99b:	cmp    BYTE PTR [ebx-0x7d],al
  42a99e:	test   DWORD PTR [ebx+0x65],ecx
  42a9a1:	fisttp DWORD PTR [esi]
  42a9a3:	fs loop 0x42a9f2
  42a9a6:	mov    cl,0x8e
  42a9a8:	jecxz  0x42aa05
  42a9aa:	shr    BYTE PTR [ebp-0x436683ff],cl
  42a9b0:	test   al,0xd
  42a9b2:	inc    ebp
  42a9b3:	imul   ebx,DWORD PTR [ecx],0x4a
  42a9b6:	js     0x42a9a9
  42a9b8:	fisttp QWORD PTR [edx-0x24]
  42a9bb:	popa   
  42a9bc:	loop   0x42a9df
  42a9be:	inc    edx
  42a9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9c0:	dec    esi
	...
  42aa31:	add    BYTE PTR [eax],al
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	clc    
  42aa41:	or     DWORD PTR [eax+0x1c39487],esi
  42aa47:	add    ch,dh
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    ah,bl
  42aa4d:	cmp    eax,0x69245f21
  42aa52:	aas    
  42aa53:	dec    esi
  42aa54:	pusha  
  42aa55:	sub    eax,0xb46b7e95
  42aa5a:	add    BYTE PTR [eax],cl
  42aa5c:	sbb    ebx,edi
  42aa5e:	push   edx
  42aa5f:	pop    es
  42aa60:	int    0xf2
  42aa62:	sbb    bh,BYTE PTR [ecx+eiz*1]
  42aa65:	ds sbb al,0x28
  42aa68:	or     DWORD PTR [esi],edx
  42aa6a:	fchs   
  42aa6c:	lock ins BYTE PTR es:[edi],dx
  42aa6e:	sbb    eax,0x48682786
  42aa73:	xchg   ecx,eax
  42aa74:	push   edi
  42aa75:	sub    al,0xac
  42aa77:	test   BYTE PTR [ebp+0x51fd47d],ch
  42aa7d:	cmp    eax,0x3ba3078a
  42aa82:	test   DWORD PTR [edx+0x386db0d6],0xe48f7d42
  42aa8c:	shr    BYTE PTR [ebx+0x4],1
  42aa8f:	sub    DWORD PTR [ecx],edi
  42aa91:	in     eax,0x9c
  42aa93:	or     eax,0x9e168d58
  42aa98:	jmp    0xdba1:0x27e86a50
  42aa9f:	sub    edx,DWORD PTR [ecx-0x10]
  42aaa2:	push   ecx
  42aaa3:	push   es
  42aaa4:	add    bx,ax
  42aaa7:	rcl    DWORD PTR ss:[eax-0x1d03b80a],cl
  42aaae:	xor    edi,edi
  42aab0:	dec    ax
  42aab2:	cli    
  42aab3:	xor    ch,ah
  42aab5:	in     al,0x2f
  42aab7:	xchg   edi,eax
  42aab8:	mov    dl,0xe0
  42aaba:	or     eax,0x640868d
  42aabf:	mov    al,ds:0x7cd3f918
  42aac4:	sbb    al,0xeb
  42aac6:	mov    ebx,0x371f8e44
  42aacb:	and    al,0x88
  42aacd:	cmp    ebp,eax
  42aacf:	push   ss
  42aad0:	xchg   edi,eax
  42aad1:	loopne 0x42aafe
  42aad3:	cmp    al,0x45
  42aad5:	daa    
  42aad6:	in     al,dx
  42aad7:	cmp    eax,0x7bafbae3
  42aadc:	(bad)  
  42aadd:	jmp    0xcc6634d3
  42aae2:	xor    eax,0xa046e927
  42aae7:	mov    cl,ah
  42aae9:	loopne 0x42ab50
  42aaeb:	jmp    0x150a4d68
  42aaf0:	push   esp
  42aaf1:	hlt    
  42aaf2:	jge    0x42ab06
  42aaf4:	test   al,0x27
  42aaf6:	cs aas 
  42aaf8:	dec    edx
  42aaf9:	jmp    0x4b76:0x4b1e0fff
  42ab00:	ja     0x42ab22
  42ab02:	xchg   edx,eax
  42ab03:	sar    DWORD PTR [ebx],0xc5
  42ab06:	pop    esi
  42ab07:	push   ebp
  42ab08:	mov    esi,0x9315a02f
  42ab0d:	xchg   ebx,eax
  42ab0e:	retf   0x7ead
  42ab11:	cdq    
  42ab12:	int    0x5e
  42ab14:	stc    
  42ab15:	ja     0x42aad7
  42ab17:	cwde   
  42ab18:	sbb    eax,0xfe6214f9
  42ab1d:	xchg   edx,eax
  42ab1e:	dec    edx
  42ab1f:	add    BYTE PTR [esp+edi*2-0x7c],bh
  42ab23:	ror    DWORD PTR [esi+0x4f],0xa7
  42ab27:	rcl    DWORD PTR [esi],1
  42ab29:	or     ecx,DWORD PTR [eax-0x6351cb8a]
  42ab2f:	enter  0x111b,0x7
  42ab33:	sub    eax,esi
  42ab35:	xchg   esp,eax
  42ab36:	jmp    0x42ab21
  42ab38:	sub    al,0x8
  42ab3a:	adc    al,0x93
  42ab3c:	inc    ebp
  42ab3d:	and    eax,DWORD PTR [ecx-0x62]
  42ab40:	push   ss
	...
  42abb1:	add    BYTE PTR [eax],al
  42abb3:	add    BYTE PTR [ebx-0x487759ea],ah
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	int3   
  42abc1:	pop    ebx
  42abc2:	dec    ebx
  42abc3:	in     eax,0x89
  42abc5:	les    eax,FWORD PTR [ecx]
  42abc7:	add    ch,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    ch,al
  42abcd:	into   
  42abce:	jge    0x42ac2d
  42abd0:	jns    0x42abad
  42abd2:	mov    eax,ds:0x6dca6213
  42abd7:	fld    DWORD PTR [ecx+edx*1+0x5e74078d]
  42abde:	mov    edx,0xe2fbe26f
  42abe3:	mov    WORD PTR ss:[edx+0x57f55a49],ds
  42abea:	hlt    
  42abeb:	pop    ecx
  42abec:	and    BYTE PTR [ebp-0x71],bl
  42abef:	adc    BYTE PTR [ebp-0x32],0x35
  42abf3:	xor    al,0x9a
  42abf5:	out    dx,al
  42abf6:	and    al,0x56
  42abf8:	icebp  
  42abf9:	or     esi,DWORD PTR [ecx+0x1c015d9a]
  42abff:	mov    bl,0x54
  42ac01:	sbb    eax,0x4683add1
  42ac06:	dec    edx
  42ac07:	sbb    dh,BYTE PTR [edx]
  42ac09:	sbb    esp,DWORD PTR [ecx+0x67]
  42ac0c:	cmp    ebp,esi
  42ac0e:	push   0xa65e8596
  42ac13:	add    edi,ebp
  42ac15:	jle    0x42abef
  42ac17:	xchg   esi,eax
  42ac18:	push   cs
  42ac19:	fadd   QWORD PTR [eax+0x51]
  42ac1c:	push   ds
  42ac1d:	retf   0x60d9
  42ac20:	not    DWORD PTR [edi+0x7f]
  42ac23:	packsswb mm2,QWORD PTR [edx]
  42ac26:	test   BYTE PTR [eax+edi*8+0x515a1ed7],cl
  42ac2d:	pop    ebp
  42ac2e:	ds aas 
  42ac30:	int    0x16
  42ac32:	dec    edi
  42ac33:	test   DWORD PTR [eax+0x30],esp
  42ac36:	lods   eax,DWORD PTR ds:[esi]
  42ac37:	pop    ss
  42ac38:	sbb    eax,DWORD PTR [ebx-0x12]
  42ac3b:	daa    
  42ac3c:	popf   
  42ac3d:	or     eax,0xf91f75af
  42ac42:	lahf   
  42ac43:	inc    ebp
  42ac44:	out    dx,al
  42ac45:	xchg   edx,eax
  42ac46:	test   al,0x7e
  42ac48:	js     0x42abf2
  42ac4a:	pop    edi
  42ac4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac4c:	lock fcmovnbe st,st(5)
  42ac4f:	jecxz  0x42ac38
  42ac51:	add    al,0x53
  42ac53:	cmp    bh,BYTE PTR [esi+0x66]
  42ac56:	sub    al,BYTE PTR [esi-0x4bd9a2e8]
  42ac5c:	inc    edx
  42ac5d:	xor    ecx,DWORD PTR [edi]
  42ac5f:	or     BYTE PTR [esi+0xc336b8a],ah
  42ac65:	inc    ebp
  42ac66:	mov    eax,0x7fdfab73
  42ac6b:	out    0x99,eax
  42ac6d:	mov    ds:0xbe0eda8d,eax
  42ac72:	loopne 0x42ace9
  42ac74:	xor    esp,edi
  42ac76:	dec    esp
  42ac77:	call   DWORD PTR gs:[eax+0x10a0b6ae]
  42ac7e:	jnp    0x42acbb
  42ac80:	push   ebp
  42ac81:	adc    ch,BYTE PTR [ebx-0x38a4380c]
  42ac87:	pop    esp
  42ac88:	inc    ebp
  42ac89:	xchg   BYTE PTR [ebx+0x17],al
  42ac8c:	and    edi,DWORD PTR [ecx]
  42ac8e:	test   al,0x2b
  42ac90:	pop    eax
  42ac91:	push   edi
  42ac92:	adc    eax,0xf0da0e86
  42ac97:	mov    WORD PTR [edx+esi*2+0x606db32c],fs
  42ac9e:	mov    al,0x25
  42aca0:	add    eax,0x93a79e9
  42aca5:	stos   BYTE PTR es:[edi],al
  42aca6:	push   0xaaf10b2
  42acab:	out    dx,al
  42acac:	mov    dh,0x3
  42acae:	and    DWORD PTR [ebx*4-0x52d5f069],ecx
  42acb5:	neg    DWORD PTR [edx]
  42acb7:	jbe    0x42ac58
  42acb9:	push   0x4f35f4eb
  42acbe:	mov    ch,0x71
  42acc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42ad31:	add    BYTE PTR [eax],al
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	ucomiss xmm1,DWORD PTR [esi-0x15]
  42ad43:	pop    edi
  42ad44:	jle    0x42ad0b
  42ad46:	add    DWORD PTR [eax],eax
  42ad48:	cmc    
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [esi-0x3ec2632b],bh
  42ad51:	pop    ds
  42ad52:	xor    eax,0x29ce2d9b
  42ad57:	push   0x2c
  42ad59:	pop    es
  42ad5a:	and    al,0x23
  42ad5c:	xor    eax,0xeabbe9d1
  42ad61:	sub    BYTE PTR [eax],bh
  42ad63:	test   esi,ecx
  42ad65:	sbb    esi,ebp
  42ad67:	popf   
  42ad68:	xchg   ebx,eax
  42ad69:	js     0x42ad5a
  42ad6b:	or     cl,BYTE PTR [ebx-0x73]
  42ad6e:	xchg   esi,eax
  42ad6f:	push   0x2844caf
  42ad74:	inc    esi
  42ad75:	jecxz  0x42add1
  42ad77:	mov    eax,ds:0xe4dc2b2a
  42ad7d:	ror    cl,1
  42ad7f:	mov    ebp,0x6ca90265
  42ad84:	fcomp  DWORD PTR [ebp+esi*1-0x18]
  42ad88:	sbb    BYTE PTR [eax-0x11ac1472],0xb2
  42ad8f:	test   al,0x4f
  42ad91:	mov    WORD PTR [esi+0x13],?
  42ad94:	push   esp
  42ad95:	in     al,0x77
  42ad97:	xchg   esp,eax
  42ad98:	jbe    0x42ad73
  42ad9a:	imul   ecx,eax,0xffffffa5
  42ad9d:	out    0x2,eax
  42ad9f:	mov    ecx,0x94d4ca94
  42ada4:	neg    BYTE PTR [ebp+0x26]
  42ada7:	fwait
  42ada8:	sbb    DWORD PTR [edx+0x1b],ebp
  42adab:	mov    DWORD PTR [ebx],esp
  42adad:	adc    eax,0x56732c19
  42adb2:	aam    0x8d
  42adb4:	out    dx,al
  42adb5:	xchg   esp,eax
  42adb6:	rcr    al,1
  42adb8:	push   0xa7c6a817
  42adbd:	pop    edi
  42adbe:	pop    ebp
  42adbf:	cli    
  42adc0:	add    BYTE PTR ds:0x6daecbd7,0x96
  42adc7:	sbb    eax,ebp
  42adc9:	adc    BYTE PTR [ebx],bl
  42adcb:	imul   ebx,DWORD PTR fs:0xe3c223ca,0xe47a8651
  42add6:	lea    edi,[esi]
  42add8:	push   0x8165a0ed
  42addd:	mov    dh,0x10
  42addf:	iret   
  42ade0:	dec    ebp
  42ade1:	xchg   ebx,eax
  42ade2:	fisub  DWORD PTR ds:[eax-0x71a0b296]
  42ade9:	sahf   
  42adea:	mov    ebp,0xdeff39c1
  42adef:	sahf   
  42adf0:	fwait
  42adf1:	repz pop ebp
  42adf3:	mov    ds:0x9ff651cd,eax
  42adf8:	aam    0xb
  42adfa:	imul   ebp,DWORD PTR [ecx],0x2e
  42adfd:	stos   BYTE PTR es:[edi],al
  42adfe:	fcomp  QWORD PTR [ebx+0x789f081]
  42ae04:	xchg   edx,eax
  42ae05:	ret    0x446e
  42ae08:	xchg   ebx,eax
  42ae09:	mov    al,ds:0x3d993a6
  42ae0e:	and    al,0x77
  42ae10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae11:	in     al,dx
  42ae12:	fcmovbe st,st(2)
  42ae14:	jmp    0x42ae5f
  42ae16:	pop    ss
  42ae17:	pop    esi
  42ae18:	jns    0x42adec
  42ae1a:	fist   DWORD PTR [eax+0x2a2bb1ab]
  42ae20:	test   BYTE PTR [ecx-0x2a],ch
  42ae23:	xlat   BYTE PTR ds:[ebx]
  42ae24:	imul   ebp,DWORD PTR [edx-0x6c],0xb7d5856a
  42ae2b:	scas   al,BYTE PTR es:[edi]
  42ae2c:	jge    0x42adea
  42ae2e:	in     eax,0xed
  42ae30:	pushf  
  42ae31:	test   BYTE PTR [edi+0x23],bl
  42ae34:	lds    esi,FWORD PTR [eax]
  42ae36:	xor    DWORD PTR [ecx-0x72],eax
  42ae39:	mov    ?,WORD PTR [edi-0x1712d579]
  42ae3f:	xchg   DWORD PTR [esi+0x0],esi
	...
  42aeb1:	add    BYTE PTR [eax],al
  42aeb3:	add    BYTE PTR [ecx],dh
  42aeb5:	inc    ebp
  42aeb6:	enter  0xfc06,0x8f
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	mov    ch,0x55
  42aec2:	jmp    0x20921c7
  42aec7:	add    ch,dh
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    BYTE PTR [edi+0x7ad52bab],bh
  42aed1:	or     esp,esp
  42aed3:	sbb    dl,BYTE PTR [ebx-0x4a]
  42aed6:	jb     0x42af0b
  42aed8:	jne    0x42af17
  42aeda:	sar    BYTE PTR [edi-0x617ce89c],1
  42aee0:	clc    
  42aee1:	je     0x42ae76
  42aee3:	dec    edx
  42aee4:	scas   al,BYTE PTR es:[edi]
  42aee5:	jbe    0x42af61
  42aee7:	dec    ebp
  42aee8:	je     0x42af1a
  42aeea:	ret    
  42aeeb:	lods   al,BYTE PTR ds:[esi]
  42aeec:	jge    0x42af30
  42aeee:	mov    al,ds:0x94ed7a5d
  42aef3:	dec    esi
  42aef4:	or     bh,BYTE PTR [ecx-0x489da6b7]
  42aefa:	in     eax,dx
  42aefb:	sbb    ah,0x79
  42aefe:	repz (bad) 
  42af00:	or     BYTE PTR [ecx-0xb],cl
  42af03:	push   0x2f1ac35e
  42af08:	ins    DWORD PTR es:[edi],dx
  42af09:	pop    esi
  42af0a:	pop    edi
  42af0b:	dec    esp
  42af0c:	xchg   esp,eax
  42af0d:	pop    edi
  42af0e:	or     BYTE PTR [esi-0x5064561],cl
  42af14:	das    
  42af15:	faddp  st(0),st
  42af17:	int3   
  42af18:	loope  0x42af82
  42af1a:	pop    edi
  42af1b:	and    al,0x96
  42af1d:	xchg   DWORD PTR [ecx+eax*4-0x15],edi
  42af21:	mov    esp,0x58c0ed7c
  42af26:	or     dh,BYTE PTR [edx]
  42af28:	pop    ebp
  42af29:	dec    edx
  42af2a:	xchg   ecx,eax
  42af2b:	add    DWORD PTR [esi+0x6b],eax
  42af2e:	xor    eax,0x8062a03a
  42af33:	loope  0x42aef9
  42af35:	sar    DWORD PTR [edi*8+0x46297d4a],0xcc
  42af3d:	or     BYTE PTR [ebx-0x75],bh
  42af40:	or     BYTE PTR [eax],bl
  42af42:	add    ecx,ebx
  42af44:	mov    ecx,0x30680210
  42af49:	cdq    
  42af4a:	ja     0x42aed7
  42af4c:	sahf   
  42af4d:	mov    ah,0x1a
  42af4f:	test   eax,0x2e4c8bbf
  42af54:	or     al,0x8d
  42af56:	dec    ebx
  42af57:	into   
  42af58:	test   eax,0x7d515a84
  42af5d:	mov    WORD PTR [esi],cs
  42af5f:	jge    0x42af3c
  42af61:	lds    esp,FWORD PTR [edx-0x470d03ce]
  42af67:	mov    es,ebp
  42af69:	push   esp
  42af6a:	adc    eax,0x688feef9
  42af6f:	dec    ebp
  42af70:	jo     0x42af09
  42af72:	neg    ecx
  42af74:	icebp  
  42af75:	inc    ebp
  42af76:	jg     0x42af75
  42af78:	imul   ebp,DWORD PTR [esi+0x70d875eb],0x22
  42af7f:	or     BYTE PTR [edx],dh
  42af81:	out    dx,eax
  42af82:	xchg   esi,eax
  42af83:	fmul   DWORD PTR [ebp-0x2857c01a]
  42af89:	jmp    0x42afe2
  42af8b:	and    al,0xe
  42af8d:	fisubr WORD PTR [edx+0x10af8687]
  42af93:	mov    edx,0xe4da816f
  42af98:	fst    DWORD PTR [ebx]
  42af9a:	inc    edx
  42af9b:	push   edi
  42af9c:	in     al,dx
  42af9d:	fstp   st(3)
  42af9f:	adc    BYTE PTR [ebp-0x27],al
  42afa2:	jmp    0x42afcc
  42afa4:	add    eax,0xd2895d09
  42afa9:	dec    edi
  42afaa:	xor    BYTE PTR ds:[eax+0x5891e61],0x2d
  42afb2:	mov    ds:0xe25ee24,eax
  42afb7:	fldcw  WORD PTR [ecx-0x63]
  42afba:	cld    
  42afbb:	jb     0x42af9b
  42afbd:	and    ah,BYTE PTR [esi]
  42afbf:	aam    0x89
	...
  42b031:	add    BYTE PTR [eax],al
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x337f
  42b042:	in     eax,0x2b
  42b044:	push   0xf50001c7
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [esi+eax*8-0x25fde8b5],dh
  42b052:	mov    ah,0xf4
  42b054:	mov    ecx,0xec079185
  42b059:	mul    DWORD PTR [esi+0x11]
  42b05c:	jbe    0x42b0be
  42b05e:	inc    esi
  42b05f:	pop    ss
  42b060:	fs jge 0x42b072
  42b063:	mov    ebp,edi
  42b065:	adc    ah,BYTE PTR [edi-0x6]
  42b068:	imul   eax,DWORD PTR [ecx+edx*4],0x4d
  42b06c:	test   DWORD PTR [edi-0x3d99d272],edi
  42b072:	sahf   
  42b073:	call   DWORD PTR [edx]
  42b075:	add    cl,BYTE PTR [esi-0x3e]
  42b078:	or     al,0xa9
  42b07a:	dec    edi
  42b07b:	loope  0x42b0ea
  42b07d:	adc    cl,ch
  42b07f:	inc    ebx
  42b080:	jmp    0x42b0b3
  42b082:	mov    al,0x43
  42b084:	mov    eax,0xb3ef5f28
  42b089:	lea    ebx,[esp+esi*1]
  42b08c:	mov    WORD PTR [ebx],?
  42b08e:	stos   DWORD PTR es:[edi],eax
  42b08f:	mov    edx,0xa74ebc
  42b094:	push   eax
  42b095:	pop    ss
  42b096:	inc    ecx
  42b097:	pop    ecx
  42b098:	lods   al,BYTE PTR ds:[esi]
  42b099:	add    al,0xdc
  42b09b:	in     eax,0x6c
  42b09d:	pop    ss
  42b09e:	jns    0x42b10a
  42b0a0:	aad    0xb
  42b0a2:	add    al,0xd0
  42b0a5:	or     DWORD PTR [ecx-0x71],edx
  42b0a8:	inc    eax
  42b0a9:	sub    BYTE PTR [edi+0x5a1e9cdb],dl
  42b0af:	mov    ebp,0xf6033cf4
  42b0b4:	imul   ecx,DWORD PTR [edi+esi*2],0x5d0e2cd6
  42b0bb:	retf   
  42b0bc:	mov    al,ds:0xf37b2434
  42b0c1:	iret   
  42b0c2:	shl    BYTE PTR [edx+0x6f8de04a],cl
  42b0c8:	lds    esp,FWORD PTR ds:0x53367829
  42b0ce:	(bad)  
  42b0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0d0:	ret    0xb31a
  42b0d3:	mov    edx,0xa45a96b
  42b0d8:	mov    ch,0x3f
  42b0da:	jb     0x42b102
  42b0dc:	add    al,0xe6
  42b0de:	jo     0x42b119
  42b0e0:	hlt    
  42b0e1:	add    eax,0x1a6904fc
  42b0e6:	loop   0x42b147
  42b0e8:	pop    ebx
  42b0e9:	bound  eax,QWORD PTR [ebx-0x4d]
  42b0ec:	mov    al,ah
  42b0ee:	das    
  42b0ef:	mov    al,ds:0x4b0f57db
  42b0f4:	add    esi,DWORD PTR [eax-0x6238bb34]
  42b0fa:	dec    esp
  42b0fb:	leave  
  42b0fc:	stos   DWORD PTR es:[edi],eax
  42b0fd:	call   0xe920:0x17649429
  42b104:	mov    bl,dl
  42b106:	gs pop esp
  42b108:	jmp    0x42b173
  42b10a:	retf   0x99d7
  42b10d:	inc    DWORD PTR [esi+0x373f951a]
  42b113:	jb     0x42b0f2
  42b115:	ins    DWORD PTR es:[edi],dx
  42b116:	or     edx,DWORD PTR [edx-0x2f]
  42b119:	and    eax,0x2aeec4a6
  42b11e:	xchg   ebx,eax
  42b11f:	nop
  42b120:	lods   eax,DWORD PTR ds:[esi]
  42b121:	add    eax,0xf9fa58f7
  42b126:	mov    dl,BYTE PTR [esi-0x376d1f64]
  42b12c:	jecxz  0x42b0e9
  42b12e:	xor    bh,BYTE PTR [ebp+ecx*4+0xd]
  42b132:	cmp    eax,esp
  42b134:	lea    ebp,[ebx-0x15]
  42b137:	dec    eax
  42b138:	jnp    0x42b115
  42b13a:	add    DWORD PTR [eax+0xa],edx
  42b13d:	xchg   ebx,eax
  42b13e:	xor    BYTE PTR [ecx+ebx*4],cl
	...
  42b1b1:	add    BYTE PTR [eax],al
  42b1b3:	add    BYTE PTR [ebx],ch
  42b1b5:	test   DWORD PTR [ebp-0x50e640e7],edx
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	push   ecx
  42b1c1:	(bad)  
  42b1c2:	ret    
  42b1c3:	mov    edi,0x1c85d
  42b1c8:	cmc    
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    BYTE PTR [eax+esi*4-0x3970a341],ah
  42b1d2:	jecxz  0x42b178
  42b1d4:	pop    ebx
  42b1d5:	icebp  
  42b1d6:	lods   al,BYTE PTR ds:[esi]
  42b1d7:	mov    edi,0x247a7462
  42b1dc:	int    0xec
  42b1de:	push   ebx
  42b1df:	lahf   
  42b1e0:	jbe    0x42b233
  42b1e2:	sub    BYTE PTR [edx+0x4b],al
  42b1e5:	xchg   ebp,eax
  42b1e6:	adc    al,0x4b
  42b1e8:	div    DWORD PTR [eiz*4-0x538ecc0e]
  42b1ef:	daa    
  42b1f0:	sub    bl,BYTE PTR [ebp+0x65]
  42b1f3:	shl    DWORD PTR [edi],0x20
  42b1f6:	jmp    0xc5a10938
  42b1fb:	icebp  
  42b1fc:	xchg   esi,edx
  42b1fe:	(bad)  
  42b1ff:	push   ds
  42b200:	or     bl,BYTE PTR [ecx-0x6b65d965]
  42b206:	mov    BYTE PTR [esi+0x20],ch
  42b209:	dec    ebx
  42b20a:	add    BYTE PTR [edx-0x705472a8],ch
  42b210:	shl    DWORD PTR [esi-0x18],cl
  42b213:	aad    0xb7
  42b215:	mov    cl,0xb9
  42b217:	pop    ds
  42b218:	idiv   bl
  42b21a:	addr16 pop ds
  42b21c:	mov    gs,WORD PTR [ecx]
  42b21e:	jmp    0x42b29c
  42b220:	aam    0xf9
  42b222:	popf   
  42b223:	push   ecx
  42b224:	sub    BYTE PTR [ecx],dh
  42b226:	lds    ebx,FWORD PTR [edx+0x5d]
  42b229:	mov    esp,ebx
  42b22b:	push   es
  42b22c:	dec    esp
  42b22d:	int3   
  42b22e:	cmp    DWORD PTR [ebx],esp
  42b230:	push   ds
  42b231:	sbb    esp,DWORD PTR [esi]
  42b233:	in     al,0xda
  42b235:	inc    eax
  42b236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b237:	(bad)  
  42b238:	test   BYTE PTR [si],ch
  42b23b:	cmp    al,0x5a
  42b23d:	adc    BYTE PTR [edi+esi*4],dh
  42b240:	imul   eax,ebx,0xffffffdb
  42b243:	fsubr  DWORD PTR [esi+0x3d]
  42b246:	push   ebp
  42b247:	mov    ch,0x91
  42b249:	push   ebp
  42b24a:	fcomp  QWORD PTR [edi+0x60a6a46]
  42b250:	or     bl,ah
  42b252:	pop    edi
  42b253:	or     DWORD PTR [esi-0x53142933],ecx
  42b259:	call   0x7eed:0x408bd07a
  42b260:	stc    
  42b261:	arpl   WORD PTR [edi-0x202dfb5e],si
  42b267:	sahf   
  42b268:	sub    eax,0xe4ce38a9
  42b26d:	mov    WORD PTR [ebx-0x1e],ds
  42b270:	rol    edx,0x14
  42b273:	inc    eax
  42b274:	or     al,0x46
  42b276:	jno    0x42b26a
  42b278:	xchg   DWORD PTR [ecx-0x33],eax
  42b27b:	or     al,0xae
  42b27d:	add    DWORD PTR [ecx],eax
  42b27f:	sbb    BYTE PTR [edi-0x76],0x86
  42b283:	lds    esi,FWORD PTR [ebx]
  42b285:	push   es
  42b286:	jnp    0x42b222
  42b288:	xchg   ecx,eax
  42b289:	pop    ss
  42b28a:	enter  0x7ce3,0xff
  42b28e:	push   esi
  42b28f:	aaa    
  42b290:	lock xchg DWORD PTR [edx-0x6a7e184],edi
  42b297:	xor    al,0xc5
  42b299:	mov    ?,WORD PTR [edi]
  42b29b:	out    dx,al
  42b29c:	xchg   esp,eax
  42b29d:	cs ss aad 0x24
  42b2a1:	repnz lea eax,[eax-0x5fd0b339]
  42b2a8:	stc    
  42b2a9:	sbb    ebp,ebp
  42b2ab:	btc    DWORD PTR [esi+0x655126ac],ecx
  42b2b2:	sub    BYTE PTR [eax-0x61],bl
  42b2b5:	jl     0x42b334
  42b2b7:	cmp    eax,0xdfd1f9f6
  42b2bc:	nop
  42b2bd:	fisub  DWORD PTR [ebx+0x72]
  42b2c0:	push   ebx
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x79],esi
  42b341:	and    DWORD PTR [ebx+0x1c9522b],ebp
  42b347:	add    ch,dh
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    BYTE PTR [ecx-0x28],dh
  42b34e:	mov    ds:0x38f06516,eax
  42b353:	mov    ebp,0x58801728
  42b358:	nop
  42b359:	arpl   WORD PTR [esi+0x7b],cx
  42b35c:	jmp    0x42b32c
  42b35e:	pop    edx
  42b35f:	cmc    
  42b360:	scas   eax,DWORD PTR es:[edi]
  42b361:	jp     0x42b369
  42b363:	addr16 aas 
  42b365:	jae    0x42b3e5
  42b367:	lock pop esi
  42b369:	push   0x78305a2e
  42b36e:	mov    al,0x19
  42b370:	mov    cl,0x35
  42b372:	mov    ecx,DWORD PTR [ecx]
  42b374:	and    dl,ah
  42b376:	out    0x1f,eax
  42b378:	call   edi
  42b37a:	and    eax,0x8ad417c2
  42b37f:	ret    0x5aac
  42b382:	or     BYTE PTR [edi+0x5f9faf29],dl
  42b388:	adc    al,0xc2
  42b38a:	jecxz  0x42b355
  42b38c:	stos   BYTE PTR es:[edi],al
  42b38d:	push   es
  42b38e:	dec    ebp
  42b38f:	or     al,0x62
  42b391:	push   ecx
  42b392:	xchg   ecx,eax
  42b393:	fs pop edx
  42b395:	ret    
  42b396:	sbb    al,BYTE PTR [ecx+ebp*4+0x7c056309]
  42b39d:	addr16 int 0xa9
  42b3a0:	sahf   
  42b3a1:	adc    eax,DWORD PTR [esi]
  42b3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3a4:	xchg   esi,eax
  42b3a5:	jb     0x42b39b
  42b3a7:	inc    ebp
  42b3a8:	adc    al,0xd6
  42b3aa:	or     eax,0x464e79f7
  42b3af:	xchg   edi,eax
  42b3b0:	repz sbb DWORD PTR ds:0xe2fe3ac,eax
  42b3b7:	inc    ecx
  42b3b8:	shl    al,0x7f
  42b3bb:	jo     0x42b3fb
  42b3bd:	mul    BYTE PTR [ecx]
  42b3bf:	jp     0x42b40f
  42b3c1:	jmp    0x885af2
  42b3c6:	pop    ds
  42b3c7:	mov    al,0x1a
  42b3c9:	in     al,0x43
  42b3cb:	jbe    0x42b3d9
  42b3cd:	shl    BYTE PTR [ebx+0x27],0x4b
  42b3d1:	and    bh,bl
  42b3d3:	inc    esp
  42b3d4:	aad    0xfa
  42b3d6:	sbb    al,0x92
  42b3d8:	outs   dx,DWORD PTR ds:[esi]
  42b3d9:	xchg   ebp,eax
  42b3da:	add    al,0x9c
  42b3dc:	arpl   WORD PTR [edi+0x28],sp
  42b3df:	add    bl,BYTE PTR [ecx+0x5164d53f]
  42b3e5:	je     0x42b382
  42b3e7:	hlt    
  42b3e8:	jnp    0x42b45a
  42b3ea:	inc    esi
  42b3eb:	outs   dx,DWORD PTR ds:[esi]
  42b3ec:	repnz not DWORD PTR [eiz*1+0x41095d82]
  42b3f4:	shl    dh,cl
  42b3f6:	push   ebx
  42b3f7:	push   esp
  42b3f8:	gs dec esp
  42b3fa:	dec    ecx
  42b3fb:	mov    al,ds:0x72477580
  42b400:	enter  0x8c59,0xb4
  42b404:	shr    DWORD PTR [edi+0x5a329e2a],0x1d
  42b40b:	daa    
  42b40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b40d:	test   al,0xfa
  42b40f:	pusha  
  42b410:	dec    ebp
  42b411:	pusha  
  42b412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b413:	in     eax,dx
  42b414:	sub    al,0x88
  42b416:	xchg   ecx,eax
  42b417:	mov    esi,DWORD PTR [edx+0x1a]
  42b41a:	bound  eax,QWORD PTR [ebx]
  42b41c:	idiv   BYTE PTR [ebx+0x30aca408]
  42b422:	ret    0x5f34
  42b425:	cli    
  42b426:	enter  0xecad,0x83
  42b42a:	jne    0x42b48f
  42b42c:	xor    DWORD PTR [edx+esi*4],eax
  42b42f:	and    ebp,ebp
  42b431:	and    BYTE PTR [esi-0x190a8526],dl
  42b437:	inc    esi
  42b438:	mov    al,ds:0x5a41c4e2
  42b43d:	sbb    ebp,DWORD PTR [edi+0x92cc]
	...
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	jne    0x42b501
  42b4c2:	jge    0x42b51d
  42b4c4:	inc    edi
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    BYTE PTR [eax+0x45],cl
  42b4ce:	sub    edi,esi
  42b4d0:	adc    BYTE PTR [ecx-0x583ba92f],bl
  42b4d6:	dec    esp
  42b4d7:	cmp    ebx,DWORD PTR [ebx]
  42b4d9:	add    ch,BYTE PTR [esi-0x22]
  42b4dc:	cmp    eax,edi
  42b4de:	clc    
  42b4df:	xchg   esi,eax
  42b4e0:	add    cl,BYTE PTR [edx]
  42b4e2:	jne    0x42b4c0
  42b4e4:	inc    esp
  42b4e5:	in     al,dx
  42b4e6:	test   eax,0x974683a2
  42b4eb:	js     0x42b4b6
  42b4ed:	or     eax,0x65de08d9
  42b4f2:	test   BYTE PTR [edx],al
  42b4f4:	dec    eax
  42b4f5:	sbb    eax,0x89f0e08f
  42b4fa:	pusha  
  42b4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4fc:	in     al,0x60
  42b4fe:	and    DWORD PTR [eax+0x73],ecx
  42b501:	repnz lods eax,DWORD PTR ds:[esi]
  42b503:	outs   dx,BYTE PTR ds:[esi]
  42b504:	pusha  
  42b505:	and    ecx,DWORD PTR [edi-0x2c]
  42b508:	and    esi,DWORD PTR ds:0x59d6361e
  42b50e:	jns    0x42b4a6
  42b510:	ds jmp 0x470d916c
  42b516:	jg     0x42b523
  42b518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b519:	mov    ch,0xc
  42b51b:	mov    eax,0xbdc1de7c
  42b520:	imul   esp,DWORD PTR [eax-0x3b],0x6a
  42b524:	sbb    eax,0xae8b4adb
  42b529:	sub    DWORD PTR [edx-0x1e],edx
  42b52c:	jge    0x42b541
  42b52e:	mov    bh,0x2a
  42b530:	ret    
  42b531:	xchg   DWORD PTR [esi],ebp
  42b533:	xor    BYTE PTR [ecx+0xa868d61],dh
  42b539:	push   0xffffffdb
  42b53b:	mov    ds:0xd93b1a40,al
  42b540:	or     DWORD PTR [esi+0x11691814],ebx
  42b546:	sub    BYTE PTR [ecx],ch
  42b548:	test   DWORD PTR [eax],eax
  42b54a:	or     BYTE PTR [eax],0xab
  42b54d:	push   cs
  42b54e:	pop    esp
  42b54f:	jbe    0x42b5ce
  42b551:	aad    0x8e
  42b553:	fwait
  42b554:	cwde   
  42b555:	push   0x223ffe64
  42b55a:	mov    dl,0x48
  42b55c:	add    BYTE PTR [ebx+ecx*2-0x10],dl
  42b560:	push   es
  42b561:	xor    ax,0x9ae
  42b565:	push   esi
  42b566:	not    BYTE PTR [edi-0x64b3e5b3]
  42b56c:	out    dx,eax
  42b56d:	mov    bh,0xf7
  42b56f:	mov    eax,edx
  42b571:	pusha  
  42b572:	mov    cl,BYTE PTR [esi]
  42b574:	push   esp
  42b575:	jbe    0x42b5ee
  42b577:	(bad)  
  42b578:	xchg   esi,eax
  42b579:	retf   0xdd0d
  42b57c:	inc    edx
  42b57d:	push   esp
  42b57e:	sbb    BYTE PTR [esi-0x76],al
  42b581:	call   0x41d8:0x3fe3059c
  42b588:	sti    
  42b589:	or     al,0x9c
  42b58b:	inc    esi
  42b58c:	(bad)  
  42b58e:	into   
  42b58f:	xor    DWORD PTR [edi],0x5d
  42b592:	inc    esi
  42b593:	add    bl,0x11
  42b596:	fiadd  DWORD PTR [esi+0x767f067]
  42b59c:	call   0xddfa:0xf71f5b9c
  42b5a3:	lods   eax,DWORD PTR ds:[esi]
  42b5a4:	or     edx,0x97550ed3
  42b5aa:	lea    edi,[esi+0x507fe84f]
  42b5b0:	test   eax,0xf3ac06fd
  42b5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5b6:	or     eax,0x539f0c51
  42b5bb:	sub    dl,ah
  42b5bd:	dec    si
  42b5bf:	jl     0x42b5ab
	...
  42b631:	add    BYTE PTR [eax],al
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    dl,BYTE PTR [esi+0x56]
  42b642:	xchg   ebx,eax
  42b643:	sar    BYTE PTR [ebx+ecx*8],cl
  42b646:	add    DWORD PTR [eax],eax
  42b648:	cmc    
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    al,bl
  42b64d:	sbb    BYTE PTR [ebp+0x55b1f0ce],al
  42b653:	repz dec esp
  42b655:	sbb    esp,DWORD PTR [ebp+0x4657f0d5]
  42b65b:	or     BYTE PTR [ecx+edi*1-0x32e8bb93],0x50
  42b663:	jmp    0x42b5f7
  42b665:	int3   
  42b666:	test   al,0xe2
  42b668:	mov    bl,0x15
  42b66a:	idiv   esp
  42b66c:	mov    ah,0x4b
  42b66e:	jmp    0xba457489
  42b673:	sbb    al,BYTE PTR [edx-0x4ec10f63]
  42b679:	xor    eax,0x8625b823
  42b67e:	add    eax,0x4aca7053
  42b683:	fsub   st,st(0)
  42b685:	mov    ds:0xf864a499,eax
  42b68a:	jbe    0x42b668
  42b68c:	out    dx,eax
  42b68d:	(bad)  
  42b68e:	pop    edi
  42b68f:	fdiv   DWORD PTR [eax]
  42b691:	fs in  eax,0x91
  42b694:	dec    ebx
  42b695:	jecxz  0x42b6c3
  42b697:	out    dx,al
  42b698:	xchg   edx,eax
  42b699:	aas    
  42b69a:	fiadd  DWORD PTR [ecx]
  42b69c:	push   eax
  42b69d:	sbb    edx,DWORD PTR [ecx-0x23612b2f]
  42b6a3:	jo     0x42b665
  42b6a5:	mov    ds:0x51e22bb4,al
  42b6aa:	shl    BYTE PTR [ebp-0x4f],1
  42b6ad:	ins    DWORD PTR es:[edi],dx
  42b6ae:	mov    al,0xf
  42b6b0:	cdq    
  42b6b1:	mov    cs,WORD PTR [ecx+0x49]
  42b6b4:	and    BYTE PTR [edx-0x7],dl
  42b6b7:	cs ja  0x42b641
  42b6ba:	or     al,0x3b
  42b6bc:	jmp    0x820a:0x1426f88a
  42b6c3:	test   ch,0xe8
  42b6c6:	pop    es
  42b6c7:	repnz lahf 
  42b6c9:	push   edx
  42b6ca:	adc    BYTE PTR [ebx],al
  42b6cc:	repz sub bh,bh
  42b6cf:	add    DWORD PTR ds:0x85493d13,ebx
  42b6d5:	lock inc ebp
  42b6d7:	cmp    eax,edi
  42b6d9:	push   ds
  42b6da:	adc    eax,DWORD PTR [eax+0x7e]
  42b6dd:	sub    ecx,esp
  42b6df:	in     al,0x2a
  42b6e1:	xor    DWORD PTR [ebx],ebp
  42b6e3:	test   edi,eax
  42b6e5:	scas   eax,DWORD PTR es:[edi]
  42b6e6:	lds    esp,FWORD PTR ds:0xb2fdc813
  42b6ec:	pop    ss
  42b6ed:	cld    
  42b6ee:	push   0xffffffd6
  42b6f0:	es pop esp
  42b6f2:	adc    BYTE PTR [ecx],al
  42b6f4:	jle    0x42b774
  42b6f6:	mov    dl,0x7a
  42b6f8:	aad    0x6f
  42b6fa:	ss dec esp
  42b6fc:	adc    dl,BYTE PTR ds:0x2c66bbcb
  42b702:	xor    DWORD PTR [edi],0x73
  42b705:	stc    
  42b706:	push   cs
  42b707:	push   cs
  42b708:	dec    edi
  42b709:	(bad)  
  42b70a:	std    
  42b70b:	and    BYTE PTR [ebp-0xe],bh
  42b70e:	and    esi,DWORD PTR [edi+0x16]
  42b711:	mov    eax,0x28e95be6
  42b716:	and    BYTE PTR [ebx],al
  42b718:	popa   
  42b719:	inc    eax
  42b71a:	pop    eax
  42b71b:	mov    BYTE PTR [edi-0x73],bl
  42b71e:	cld    
  42b71f:	aad    0x38
  42b721:	cld    
  42b722:	add    al,0xfd
  42b724:	push   esp
  42b725:	in     eax,dx
  42b726:	mov    esp,0x143f5e39
  42b72b:	(bad)  
  42b72c:	out    dx,eax
  42b72d:	(bad)  
  42b72e:	mov    cl,0xa
  42b730:	(bad)  
  42b731:	out    0x87,eax
  42b733:	repnz in eax,0x4c
  42b736:	dec    edi
  42b737:	jmp    0x42b718
  42b739:	xlat   BYTE PTR ds:[ebx]
  42b73a:	sbb    dl,BYTE PTR [edi]
  42b73c:	popf   
  42b73d:	add    DWORD PTR [eax+0x134a],esp
	...
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0xec8c25fb
  42b7c3:	xchg   ecx,eax
  42b7c4:	xor    esp,ecx
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [edi+ecx*2-0x65f98e4a],ch
  42b7d2:	jne    0x42b776
  42b7d4:	push   edi
  42b7d5:	in     al,dx
  42b7d6:	mov    edx,0xa5093f9f
  42b7db:	mov    eax,0xfa7fcf70
  42b7e0:	xor    ecx,DWORD PTR [edx+0x74]
  42b7e3:	bound  esp,QWORD PTR [esi]
  42b7e5:	mov    gs,ebx
  42b7e7:	int3   
  42b7e8:	xchg   esi,eax
  42b7e9:	jnp    0x42b81b
  42b7eb:	(bad)  
  42b7ec:	xor    bl,ch
  42b7ee:	xchg   BYTE PTR [edi+ebp*2+0x6],bh
  42b7f2:	sbb    dh,BYTE PTR [ecx-0x49]
  42b7f5:	push   ebx
  42b7f6:	call   0x50c9:0x1023a8a4
  42b7fd:	dec    ebx
  42b7fe:	jmp    DWORD PTR ds:0xb2615274
  42b804:	mov    dh,0xbc
  42b806:	mov    al,ds:0x80c8f552
  42b80b:	pop    esp
  42b80c:	sub    BYTE PTR [edx+0x6b521fe6],dh
  42b812:	push   edi
  42b813:	cmp    eax,0xc3572ecd
  42b818:	arpl   WORD PTR [eax+0x44],si
  42b81b:	mov    eax,ds:0xdc439563
  42b820:	jp     0x42b894
  42b822:	jb     0x42b86e
  42b824:	in     eax,dx
  42b825:	and    edi,edi
  42b827:	clc    
  42b828:	push   eax
  42b829:	test   eax,0xef969b4c
  42b82e:	push   eax
  42b82f:	lods   al,BYTE PTR ds:[esi]
  42b830:	push   esi
  42b831:	test   eax,0x772dacc7
  42b836:	(bad)  [esi+0x918de26]
  42b83c:	pop    ds
  42b83d:	fwait
  42b83e:	pop    esi
  42b83f:	(bad)  
  42b841:	repz mov edi,0x92df4732
  42b847:	sbb    al,0xc
  42b849:	mov    ebp,0x95f89b17
  42b84e:	in     eax,0x59
  42b850:	imul   edi
  42b852:	sub    DWORD PTR ds:[edx],ebx
  42b855:	mov    WORD PTR [ebp-0x17a84624],ss
  42b85b:	push   esi
  42b85c:	mov    DWORD PTR [ebp-0x5a25c500],edx
  42b862:	cmp    BYTE PTR [ecx],al
  42b864:	arpl   WORD PTR [ebx-0x39fd4a1c],ax
  42b86a:	mov    dh,0xb6
  42b86c:	int3   
  42b86d:	shr    DWORD PTR [edi-0x6b],cl
  42b870:	imul   esi,DWORD PTR [ecx],0x24e0e13b
  42b876:	loope  0x42b8c3
  42b878:	inc    ecx
  42b879:	add    al,0xdf
  42b87b:	in     eax,dx
  42b87c:	mov    bh,0x7c
  42b87e:	push   DWORD PTR [edx-0x30]
  42b881:	outs   dx,DWORD PTR ds:[esi]
  42b882:	in     al,0x30
  42b884:	mov    eax,0xe671e023
  42b889:	sbb    eax,esi
  42b88b:	sbb    eax,ecx
  42b88d:	sub    DWORD PTR ds:0x5e6d0091,edx
  42b893:	out    0xc7,eax
  42b895:	mov    ds:0x58f88225,al
  42b89a:	call   0x159b:0x105582af
  42b8a1:	and    ah,BYTE PTR [esi+0x6]
  42b8a4:	and    ebx,DWORD PTR [ecx+0x1ba7f3ae]
  42b8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8ab:	or     esp,DWORD PTR [esi+0x522037b0]
  42b8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b8b2:	int3   
  42b8b3:	retf   0x6627
  42b8b6:	push   es
  42b8b7:	arpl   WORD PTR [eax+0x1eaa7663],cx
  42b8bd:	adc    eax,0x31f157
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	loope  0x42b8ef
  42b942:	and    bl,BYTE PTR [eax+0x26]
  42b945:	int    0x1
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    ch,bl
  42b94d:	jl     0x42b910
  42b94f:	sbb    al,0x50
  42b951:	popa   
  42b952:	xchg   ecx,eax
  42b953:	je     0x42b940
  42b955:	xchg   esp,eax
  42b956:	in     al,dx
  42b957:	iret   
  42b958:	mov    edx,DWORD PTR ds:0xac8dbe15
  42b95e:	push   eax
  42b95f:	scas   al,BYTE PTR es:[edi]
  42b960:	cmovle esp,ecx
  42b963:	sti    
  42b964:	inc    ebp
  42b965:	sahf   
  42b966:	push   cs
  42b967:	es pusha 
  42b969:	test   DWORD PTR [ecx+0x2e],0x5b26b5ce
  42b970:	ja     0x42b977
  42b972:	xchg   ebp,eax
  42b973:	inc    edx
  42b974:	sub    al,0xf9
  42b976:	push   es
  42b977:	pop    ss
  42b978:	fisttp QWORD PTR [ebp+0x33]
  42b97b:	repz mov esi,0xa6e46ebe
  42b981:	pop    es
  42b982:	or     BYTE PTR [esp+eiz*8],0x22
  42b986:	jbe    0x42b963
  42b988:	xor    al,0xb0
  42b98a:	popf   
  42b98b:	pop    es
  42b98c:	xor    DWORD PTR [eax+eiz*2-0x7eb1b1da],eax
  42b993:	cmp    eax,esp
  42b995:	int3   
  42b996:	push   edx
  42b997:	test   BYTE PTR [eax],cl
  42b999:	jae    0x42b927
  42b99b:	(bad)
  42b99e:	dec    ecx
  42b99f:	jno    0x42b9ea
  42b9a1:	xchg   ebp,ecx
  42b9a3:	(bad)  
  42b9a4:	scas   al,BYTE PTR es:[edi]
  42b9a5:	mov    ebp,0xcd548b40
  42b9aa:	or     BYTE PTR [edx],bl
  42b9ac:	xor    DWORD PTR [edx+0x6f99f9a0],esp
  42b9b2:	out    dx,eax
  42b9b3:	fadd   DWORD PTR [esi]
  42b9b5:	lahf   
  42b9b6:	xor    dl,ah
  42b9b8:	rcr    bl,cl
  42b9ba:	ins    BYTE PTR es:[edi],dx
  42b9bb:	or     ah,0x43
  42b9be:	es in  al,0x1f
  42b9c1:	cwde   
  42b9c2:	out    dx,eax
  42b9c3:	ret    0x6b7b
  42b9c6:	cmp    DWORD PTR [esi],esi
  42b9c8:	out    dx,eax
  42b9c9:	or     ah,BYTE PTR [edx-0xfc97dd4]
  42b9cf:	daa    
  42b9d0:	cwde   
  42b9d1:	xlat   BYTE PTR ss:[ebx]
  42b9d3:	sub    DWORD PTR [esi-0x5f359766],ebx
  42b9d9:	lea    eax,[ebx+0x3f]
  42b9dc:	std    
  42b9dd:	pop    esp
  42b9de:	jbe    0x42b9b4
  42b9e0:	or     BYTE PTR ds:[ebx],bh
  42b9e3:	cmp    DWORD PTR [esi],ebp
  42b9e5:	xor    al,0xb0
  42b9e7:	push   ebx
  42b9e8:	cmp    eax,0x5920a42e
  42b9ed:	jmp    0x2dd6:0xfa1b4783
  42b9f4:	hlt    
  42b9f5:	in     al,0xf5
  42b9f7:	jno    0x42ba68
  42b9f9:	cmc    
  42b9fa:	cli    
  42b9fb:	mov    cl,cl
  42b9fd:	(bad)  
  42b9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba00:	arpl   WORD PTR [edi+0x6210f8af],sp
  42ba06:	imul   ecx,edx,0xffffffe0
  42ba09:	dec    esp
  42ba0a:	and    al,0xb3
  42ba0c:	ficomp DWORD PTR [edx-0x26091fab]
  42ba12:	loop   0x42b9f2
  42ba14:	es cmp esp,ebp
  42ba17:	sahf   
  42ba18:	mov    cl,0xa7
  42ba1a:	fisub  WORD PTR [eax-0x38]
  42ba1d:	sub    eax,0x4ec3c11d
  42ba22:	call   0x4444d7c3
  42ba27:	(bad)  
  42ba28:	repz jnp 0x42ba3a
  42ba2b:	fidivr WORD PTR [esi+0x497d9137]
  42ba31:	mov    ch,BYTE PTR [ebp+0x8d11c95]
  42ba37:	fild   WORD PTR [edi]
  42ba39:	jae    0x42baa9
  42ba3b:	mov    al,ds:0x4447ce5d
  42ba40:	add    BYTE PTR cs:[eax],al
	...
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi-0x4354bcb4]
  42bac2:	xchg   DWORD PTR [ebx],edx
  42bac4:	sbb    ecx,esi
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [ecx],bh
  42bacd:	mov    ebp,0xe23a6bfd
  42bad2:	nop    ebx
  42bad5:	xchg   BYTE PTR [ecx],ah
  42bad7:	scas   al,BYTE PTR es:[edi]
  42bad8:	mov    eax,ds:0xc24bbca2
  42badd:	popf   
  42bade:	mov    ebp,DWORD PTR [ebx+0x75215900]
  42bae4:	outs   dx,DWORD PTR ds:[esi]
  42bae5:	mov    ch,0x49
  42bae7:	inc    ebp
  42bae8:	sub    bl,bh
  42baea:	push   cs
  42baeb:	sahf   
  42baec:	push   esp
  42baed:	push   ecx
  42baee:	jge    0x42bb0d
  42baf0:	and    ecx,esi
  42baf2:	popf   
  42baf3:	jo     0x42bad9
  42baf5:	or     ah,ch
  42baf7:	ds cmp al,0x1b
  42bafa:	fild   WORD PTR [eax]
  42bafc:	lock add BYTE PTR [edi],0xb1
  42bb00:	mov    ecx,0xeca59da4
  42bb05:	dec    esi
  42bb06:	jp     0x42ba90
  42bb08:	dec    ecx
  42bb09:	pusha  
  42bb0a:	xor    ebp,0x2cbe81cb
  42bb10:	cdq    
  42bb11:	call   0x71e1:0xed83b191
  42bb18:	mov    al,ds:0x5300ef1b
  42bb1d:	cli    
  42bb1e:	and    bh,BYTE PTR es:[edx+0x1b02201e]
  42bb25:	lods   eax,DWORD PTR ds:[esi]
  42bb26:	popf   
  42bb27:	xchg   ebx,eax
  42bb28:	sub    bl,BYTE PTR [esi]
  42bb2a:	outs   dx,BYTE PTR ds:[esi]
  42bb2b:	mov    BYTE PTR [edx+ebx*8],ah
  42bb2e:	jbe    0x42bb25
  42bb30:	jge    0x42bb7c
  42bb32:	ret    
  42bb33:	sub    eax,0xec91fa15
  42bb38:	xchg   esp,eax
  42bb39:	cmp    eax,0x4e655b90
  42bb3e:	loop   0x42bb3c
  42bb40:	mov    eax,0x9fa9a67b
  42bb45:	mov    edi,0x299ebd75
  42bb4a:	sbb    eax,0xa85be901
  42bb4f:	test   al,0xeb
  42bb51:	add    eax,0xa3ef63b1
  42bb56:	and    BYTE PTR [esi],bl
  42bb58:	mov    BYTE PTR [ecx],dl
  42bb5a:	test   al,0xdb
  42bb5c:	xchg   edx,eax
  42bb5d:	inc    esp
  42bb5e:	sbb    WORD PTR [edi-0x64c5afdc],cx
  42bb65:	pop    edx
  42bb66:	sub    al,0xbd
  42bb68:	sbb    DWORD PTR [edi-0x5279790f],eax
  42bb6e:	pusha  
  42bb6f:	popf   
  42bb70:	jmp    DWORD PTR [esi-0x4753a7b2]
  42bb76:	xor    al,0x33
  42bb78:	in     eax,0x75
  42bb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb7b:	mov    ah,al
  42bb7d:	cmp    al,al
  42bb7f:	mov    DWORD PTR [ebx+0x37],ecx
  42bb82:	or     BYTE PTR [esi+0x55],dh
  42bb85:	sub    eax,0xb1255a08
  42bb8a:	scas   eax,DWORD PTR es:[edi]
  42bb8b:	iret   
  42bb8c:	xor    edx,DWORD PTR [ecx-0x5]
  42bb8f:	std    
  42bb90:	(bad)
  42bb95:	aam    0xdd
  42bb97:	xchg   ebp,eax
  42bb98:	fimul  DWORD PTR [ebp+0x37]
  42bb9b:	sbb    BYTE PTR [eax+0x12],al
  42bb9e:	fwait
  42bb9f:	pop    eax
  42bba0:	adc    ch,al
  42bba2:	and    ebx,DWORD PTR [esi]
  42bba4:	ror    al,0x76
  42bba7:	inc    esp
  42bba8:	and    ebx,DWORD PTR [ecx-0x14]
  42bbab:	scas   al,BYTE PTR es:[edi]
  42bbac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bbad:	loope  0x42bbd5
  42bbaf:	pop    eax
  42bbb0:	mov    al,ds:0x1a3425d8
  42bbb5:	(bad)  
  42bbb6:	idiv   dl
  42bbb8:	out    0xb3,al
  42bbba:	dec    eax
  42bbbb:	pop    edx
  42bbbc:	call   0x0:0xbd664151
	...
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0xfe
  42bc41:	sbb    al,0x41
  42bc43:	retf   0xcf10
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [esi+0x7787d12b],dl
  42bc51:	xchg   edx,eax
  42bc52:	pop    esi
  42bc53:	pop    ds
  42bc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc55:	xor    al,0xe5
  42bc57:	xchg   ebx,eax
  42bc58:	mov    esp,DWORD PTR [eax+0x76]
  42bc5b:	(bad)  
  42bc5c:	mov    eax,0x86445dab
  42bc61:	and    edx,DWORD PTR [edi]
  42bc63:	mov    esp,ebx
  42bc65:	clc    
  42bc66:	or     bh,BYTE PTR ds:0xda2bd734
  42bc6c:	cwde   
  42bc6d:	arpl   WORD PTR [ebx+0x74799b99],dx
  42bc73:	jmp    0xaeaccd3f
  42bc78:	push   ebx
  42bc79:	es ins DWORD PTR es:[edi],dx
  42bc7b:	inc    edx
  42bc7c:	fwait
  42bc7d:	inc    ebx
  42bc7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc7f:	adc    eax,0x6a1d1e90
  42bc84:	xchg   DWORD PTR [edi-0x36],eax
  42bc87:	inc    ecx
  42bc88:	mov    esi,0xb1a48842
  42bc8d:	sub    dh,al
  42bc8f:	pop    ebx
  42bc90:	test   al,ah
  42bc92:	and    al,0xf3
  42bc94:	push   eax
  42bc95:	(bad)  
  42bc96:	pop    ebp
  42bc97:	loope  0x42bc2e
  42bc99:	int    0xc5
  42bc9b:	jecxz  0x42bcf8
  42bc9d:	sub    bl,BYTE PTR [edx]
  42bc9f:	mov    edx,0x78509773
  42bca4:	bound  edi,QWORD PTR [esi-0x44e3db85]
  42bcaa:	jmp    0x33bd818c
  42bcaf:	inc    edx
  42bcb0:	cmp    bh,BYTE PTR [esp+eiz*4+0x7d6f8f79]
  42bcb7:	pop    ebx
  42bcb8:	pop    eax
  42bcb9:	sbb    DWORD PTR [edx+0x73dda9c2],edx
  42bcbf:	jnp    0x42bd30
  42bcc1:	mov    edi,0xa88a6696
  42bcc6:	lods   al,BYTE PTR ds:[esi]
  42bcc7:	jle    0x42bc64
  42bcc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcca:	adc    BYTE PTR [ebx],bh
  42bccc:	(bad)  
  42bccd:	repz sbb BYTE PTR [esi+eiz*4+0x636396b8],al
  42bcd5:	out    0xea,al
  42bcd7:	or     al,0x46
  42bcd9:	aam    0x33
  42bcdb:	adc    DWORD PTR [ecx-0x4294a35e],esi
  42bce1:	enter  0x8506,0xdf
  42bce5:	or     eax,0x7e842b74
  42bcea:	inc    eax
  42bceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcec:	ins    DWORD PTR es:[edi],dx
  42bced:	ds pop eax
  42bcef:	aad    0x49
  42bcf1:	jbe    0x42bcd3
  42bcf3:	pop    ecx
  42bcf4:	pop    es
  42bcf5:	fwait
  42bcf6:	jbe    0x42bd14
  42bcf8:	xchg   DWORD PTR [ebx*4-0x3a0e9076],ecx
  42bcff:	sbb    BYTE PTR [edx-0x6f91f4e3],ah
  42bd05:	pop    es
  42bd06:	mov    eax,ds:0x9607bb86
  42bd0b:	push   ss
  42bd0c:	ret    
  42bd0d:	inc    ebx
  42bd0e:	sub    DWORD PTR [edi+esi*8],ecx
  42bd11:	pushf  
  42bd12:	or     eax,0x7a1bdf9
  42bd17:	in     eax,0x43
  42bd19:	push   esi
  42bd1a:	xchg   esi,eax
  42bd1b:	(bad)  
  42bd1c:	lock call 0x7aec:0xa9370002
  42bd24:	sbb    edi,DWORD PTR [ecx-0x4ae05b34]
  42bd2a:	scas   eax,DWORD PTR es:[edi]
  42bd2b:	sbb    bh,BYTE PTR [ebp-0x458225e1]
  42bd31:	nop
  42bd32:	mov    cl,0x30
  42bd34:	add    eax,0xbbe3ce7a
  42bd39:	xchg   ebx,eax
  42bd3a:	fs dec ecx
  42bd3c:	mov    fs,WORD PTR [ecx]
  42bd3e:	mov    ecx,0xd2a
	...
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	fcom   QWORD PTR [esi+eax*4+0x1f]
  42bdc4:	add    eax,0xf50001d0
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [esi],dh
  42bdcd:	and    esp,ebp
  42bdcf:	sbb    BYTE PTR [edx-0x75fd1b8b],bh
  42bdd5:	inc    ebx
  42bdd6:	xchg   esp,eax
  42bdd7:	lods   al,BYTE PTR ds:[esi]
  42bdd8:	push   0x536e2e04
  42bddd:	pop    ss
  42bdde:	sub    dh,dh
  42bde0:	hlt    
  42bde1:	pop    es
  42bde2:	iret   
  42bde3:	xor    ebp,DWORD PTR [ebp-0x71]
  42bde6:	inc    esp
  42bde7:	push   esp
  42bde8:	pop    esp
  42bde9:	pushf  
  42bdea:	or     al,0x2d
  42bdec:	jl     0x42bd6f
  42bdee:	sbb    ch,dh
  42bdf0:	popa   
  42bdf1:	stos   BYTE PTR es:[edi],al
  42bdf2:	fidivr WORD PTR [ebx]
  42bdf4:	jno    0x42be23
  42bdf6:	inc    ebx
  42bdf7:	xor    dl,BYTE PTR [edi]
  42bdf9:	jae    0x42be6d
  42bdfb:	shl    BYTE PTR ds:0xf3b155fc,0x11
  42be02:	retf   
  42be03:	xor    BYTE PTR [ebx],ch
  42be05:	mov    cl,BYTE PTR [ebx+0x7d9feb5f]
  42be0b:	add    DWORD PTR [esi-0x42e0e72e],eax
  42be11:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be13:	ret    
  42be14:	adc    BYTE PTR [ebx],ch
  42be16:	push   eax
  42be17:	dec    edi
  42be18:	mov    esp,0x4a500bca
  42be1d:	mov    al,ds:0x6e007521
  42be22:	call   FWORD PTR [edi-0x3877e021]
  42be28:	aam    0xd8
  42be2a:	inc    ebp
  42be2b:	adc    al,0x80
  42be2d:	jg     0x42be64
  42be2f:	pusha  
  42be30:	add    ah,bh
  42be32:	out    dx,eax
  42be33:	pop    es
  42be34:	xor    al,BYTE PTR [ecx]
  42be36:	mov    ecx,0xc31dec39
  42be3b:	iret   
  42be3c:	jo     0x42be34
  42be3e:	sub    BYTE PTR [esi+0x2e],0x59
  42be42:	mov    ds:0xbdb9e7e9,al
  42be47:	push   ds
  42be48:	add    ecx,DWORD PTR [ebp+0x4a0de6a7]
  42be4e:	and    edi,esp
  42be50:	bnd jge 0x42bdfb
  42be53:	sti    
  42be54:	mov    bh,0xe
  42be56:	cwde   
  42be57:	or     eax,0x48e741e8
  42be5c:	pop    ss
  42be5d:	scas   eax,DWORD PTR es:[edi]
  42be5e:	pop    edi
  42be5f:	mov    edx,0x25584781
  42be64:	push   0x17
  42be66:	es jnp 0x42bdea
  42be69:	adc    al,0xca
  42be6b:	dec    edx
  42be6c:	daa    
  42be6d:	mov    ah,0xe
  42be6f:	inc    esp
  42be70:	scas   eax,DWORD PTR es:[edi]
  42be71:	pop    ebx
  42be72:	pop    ebp
  42be73:	aam    0x2
  42be75:	mov    ds:0x1696bd27,eax
  42be7a:	cmp    DWORD PTR [eax+0x60],ebp
  42be7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be7e:	jecxz  0x42becc
  42be80:	mov    esp,0xe4307170
  42be85:	xor    ah,BYTE PTR [ebx+0x35]
  42be88:	add    al,0x29
  42be8a:	xor    eax,0xbd035390
  42be8f:	repnz out 0xef,al
  42be92:	or     esi,ebx
  42be94:	jle    0x42be54
  42be96:	or     esp,DWORD PTR [edi-0x8]
  42be99:	jl     0x42be20
  42be9b:	jno    0x42bf05
  42be9d:	leave  
  42be9e:	mov    WORD PTR [esi],cs
  42bea0:	xchg   ebp,eax
  42bea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bea2:	pop    eax
  42bea3:	inc    ecx
  42bea4:	ins    DWORD PTR es:[edi],dx
  42bea5:	jno    0x42be9a
  42bea7:	dec    ebp
  42bea8:	pusha  
  42bea9:	(bad)  [ebp+0x4116e1bd]
  42beaf:	add    BYTE PTR [ebx-0x8568f40],dh
  42beb5:	or     edx,ebx
  42beb7:	mov    edx,0x689de509
  42bebc:	push   0x85df4fe8
	...
  42bf31:	add    BYTE PTR [eax],al
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	xor    al,0x3b
  42bf42:	and    DWORD PTR [esi],edi
  42bf44:	cli    
  42bf45:	rol    BYTE PTR [ecx],1
  42bf47:	add    ch,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [ecx-0x7a],ch
  42bf4e:	enter  0x39b9,0x47
  42bf52:	outs   dx,BYTE PTR ds:[esi]
  42bf53:	addr16 sbb al,0x71
  42bf56:	es out 0x3f,eax
  42bf59:	ss or  al,0xfe
  42bf5c:	fwait
  42bf5d:	test   al,0x74
  42bf5f:	ss sbb eax,0x50790199
  42bf65:	xchg   ebx,eax
  42bf66:	rcl    BYTE PTR [edx-0x69b83883],0x64
  42bf6d:	xchg   edi,eax
  42bf6e:	adc    ecx,edx
  42bf70:	add    esp,DWORD PTR [esp+edi*4-0x7c006bcc]
  42bf77:	in     al,0x6e
  42bf79:	shr    DWORD PTR [edi+0x59],0xd7
  42bf7d:	inc    eax
  42bf7e:	mov    bh,BYTE PTR [ebp+ebp*8-0x59]
  42bf82:	out    0x95,eax
  42bf84:	int    0x2a
  42bf86:	pop    edx
  42bf87:	mov    BYTE PTR [edi],0xf3
  42bf8a:	xor    BYTE PTR [esp+esi*1-0x5438dcdd],al
  42bf91:	pop    ebx
  42bf92:	push   esi
  42bf93:	(bad)  
  42bf94:	ds retf 0x5b20
  42bf98:	sub    al,0x85
  42bf9a:	jno    0x42c00f
  42bf9c:	out    dx,eax
  42bf9d:	cmp    eax,DWORD PTR [edi+0x9]
  42bfa0:	stos   BYTE PTR es:[edi],al
  42bfa1:	mov    edx,0xeb7422b
  42bfa6:	out    dx,eax
  42bfa7:	mov    bl,0x8c
  42bfa9:	dec    ebx
  42bfaa:	gs (bad) 
  42bfac:	in     eax,dx
  42bfad:	and    dh,bl
  42bfaf:	xor    ecx,0xc4ac5220
  42bfb5:	inc    edx
  42bfb6:	mov    dh,0xd3
  42bfb8:	test   DWORD PTR [esi+0xcb1dc18],ecx
  42bfbe:	cmc    
  42bfbf:	sbb    DWORD PTR [esi*8+0xce29e59],ecx
  42bfc6:	cld    
  42bfc7:	cmp    ecx,DWORD PTR [ebx-0x12308efd]
  42bfcd:	mov    ebp,0xa721ce8f
  42bfd2:	cs rol ch,0x67
  42bfd6:	std    
  42bfd7:	mov    bh,0xe9
  42bfd9:	sahf   
  42bfda:	and    ch,BYTE PTR cs:[edx+ebp*1]
  42bfde:	or     ch,BYTE PTR [eax+edi*8-0x16]
  42bfe2:	in     al,0x66
  42bfe4:	xor    eax,0x703b16ca
  42bfe9:	or     esp,DWORD PTR [edi+edi*2-0x7d]
  42bfed:	iret   
  42bfee:	lods   al,BYTE PTR ds:[esi]
  42bfef:	and    al,ch
  42bff1:	test   eax,0xa49f328
  42bff6:	jg     0x42c05b
  42bff8:	mov    ch,0xcc
  42bffa:	dec    edx
  42bffb:	inc    edx
  42bffc:	mov    bl,0xba
  42bffe:	push   ds
  42bfff:	mov    dh,0xbb
  42c001:	iret   
  42c002:	lods   eax,DWORD PTR ds:[esi]
  42c003:	cld    
  42c004:	(bad)  
  42c005:	(bad)  
  42c006:	sbb    cl,BYTE PTR [edi]
  42c008:	add    BYTE PTR [ebp-0x24],ch
  42c00b:	push   eax
  42c00c:	or     eax,ebx
  42c00e:	js     0x42c03d
  42c010:	xchg   edi,eax
  42c011:	sahf   
  42c012:	out    0xe3,al
  42c014:	add    al,cl
  42c016:	mov    edx,0xc8badb4
  42c01b:	dec    eax
  42c01c:	jge    0x42bfb8
  42c01e:	fadd   st(0),st
  42c020:	cmp    BYTE PTR [edi],ah
  42c022:	les    ebp,FWORD PTR [eax+0x5c]
  42c025:	push   esi
  42c026:	xor    dh,BYTE PTR [eax+0x57f9abc9]
  42c02c:	add    eax,0xc9ba5b9
  42c031:	jns    0x42c094
  42c033:	mov    edi,0x6e7b2351
  42c038:	pop    edi
  42c039:	into   
  42c03a:	push   ds
  42c03b:	xchg   edx,eax
  42c03c:	jne    0x42c008
  42c03e:	mov    esi,0x1f2d
	...
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0x7f942915
  42c0c1:	inc    ebp
  42c0c2:	sub    DWORD PTR ds:0x1d1ef,edx
  42c0c8:	cmc    
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [ebx],ch
  42c0cd:	icebp  
  42c0ce:	mov    ds:0xe0c40f0c,al
  42c0d3:	inc    esp
  42c0d4:	pusha  
  42c0d5:	jl     0x42c155
  42c0d7:	call   0x91d57fb5
  42c0dc:	mov    dh,0xa5
  42c0de:	mov    edi,0xc63ac16a
  42c0e3:	out    dx,eax
  42c0e4:	cdq    
  42c0e5:	mov    cl,0x1a
  42c0e7:	div    DWORD PTR [ebx]
  42c0e9:	ret    
  42c0ea:	jmp    0xeda7:0xe97a3c09
  42c0f1:	js     0x42c118
  42c0f3:	dec    edx
  42c0f4:	pop    ebx
  42c0f5:	retf   
  42c0f6:	adc    al,0x83
  42c0f8:	cmp    al,0x3
  42c0fa:	fs jne 0x42c15d
  42c0fd:	ds jmp 0x93070bf7
  42c103:	push   es
  42c104:	mov    edi,0x19c17044
  42c109:	pusha  
  42c10a:	mul    BYTE PTR [eax]
  42c10c:	out    dx,al
  42c10d:	mov    ecx,0xa650d9c2
  42c112:	sti    
  42c113:	pop    edx
  42c114:	aaa    
  42c115:	mov    ah,0x23
  42c117:	jg     0x42c09d
  42c119:	hlt    
  42c11a:	repz cdq 
  42c11c:	pushf  
  42c11d:	sub    al,0xe1
  42c11f:	sbb    edi,0x63
  42c122:	dec    esi
  42c123:	dec    edi
  42c124:	hlt    
  42c125:	sub    al,0x75
  42c127:	push   es
  42c128:	mov    dl,0x15
  42c12a:	cwde   
  42c12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c12c:	add    ebp,DWORD PTR [edi-0x213e8cdc]
  42c132:	ret    0x531a
  42c135:	pop    esp
  42c136:	pop    ebx
  42c137:	call   0xbec7dbfa
  42c13c:	sbb    edx,DWORD PTR [ebx+0x8ab5db0]
  42c142:	push   esp
  42c143:	fmul   DWORD PTR [eax]
  42c145:	aam    0x54
  42c147:	jo     0x42c196
  42c149:	jns    0x42c18e
  42c14b:	lods   al,BYTE PTR ds:[esi]
  42c14c:	jmp    0x90297488
  42c151:	aaa    
  42c152:	adc    eax,0xca0bce46
  42c157:	hlt    
  42c158:	mov    ebx,0x305c1017
  42c15d:	jnp    0x42c186
  42c15f:	sbb    ebx,ebx
  42c161:	jne    0x42c187
  42c163:	xor    BYTE PTR [eax+0x2a],0x2a
  42c167:	xor    DWORD PTR [eax+0x49371ff3],esi
  42c16d:	xchg   ebx,eax
  42c16e:	setno  BYTE PTR [ecx-0x7b]
  42c172:	scas   al,BYTE PTR es:[edi]
  42c173:	jns    0x42c1b5
  42c175:	push   ebx
  42c176:	cdq    
  42c177:	mov    esp,ebx
  42c179:	cmp    eax,0xf4adb6d8
  42c17e:	pop    ds
  42c17f:	lock loopne 0x42c117
  42c182:	je     0x42c1a4
  42c184:	mov    cs,WORD PTR gs:[esi+0x36]
  42c188:	(bad)  
  42c189:	dec    ebx
  42c18a:	inc    esp
  42c18b:	lods   al,BYTE PTR ds:[esi]
  42c18c:	aad    0x3c
  42c18e:	mov    eax,0x1722124
  42c193:	stos   BYTE PTR es:[edi],al
  42c194:	js     0x42c15d
  42c196:	xchg   edx,eax
  42c197:	out    0x6,eax
  42c199:	in     eax,0x6d
  42c19b:	adc    al,0xd
  42c19d:	(bad)  
  42c19e:	(bad)  
  42c19f:	mov    ch,0xa7
  42c1a1:	js     0x42c203
  42c1a3:	addr16 push ecx
  42c1a5:	mov    ebx,0x9908a65a
  42c1aa:	sar    BYTE PTR [edx],0x7a
  42c1ad:	mov    edi,0xca39ce15
  42c1b2:	stos   DWORD PTR es:[edi],eax
  42c1b3:	xor    eax,0xad90051
  42c1b8:	imul   esp,DWORD PTR [esp+edi*4-0x6f],0x9c89cd4b
  42c1c0:	inc    DWORD PTR [eax]
	...
  42c232:	add    BYTE PTR [eax],al
  42c234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c235:	mov    ds,WORD PTR [ecx-0x28844a0]
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1-0x51]
  42c241:	fs ds dec ecx
  42c244:	in     al,0xd2
  42c246:	add    DWORD PTR [eax],eax
  42c248:	cmc    
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    al,ah
  42c24d:	push   0xb
  42c24f:	arpl   WORD PTR [edi+0x5a],ax
  42c252:	fwait
  42c253:	jmp    0xa5071971
  42c258:	mov    esi,DWORD PTR [edi]
  42c25a:	xchg   ecx,eax
  42c25b:	mov    ebp,0xdd213b74
  42c260:	jbe    0x42c25e
  42c262:	jbe    0x42c252
  42c264:	push   ss
  42c265:	lahf   
  42c266:	popa   
  42c267:	fdivr  QWORD PTR [edx-0x51]
  42c26a:	lahf   
  42c26b:	push   es
  42c26c:	add    ebx,esi
  42c26e:	add    BYTE PTR [eax+0x55],ah
  42c271:	repnz inc esp
  42c273:	or     edi,DWORD PTR [esi+0x74]
  42c276:	ret    0xce5d
  42c279:	and    ecx,edx
  42c27b:	and    ch,BYTE PTR [esp+esi*8]
  42c27e:	inc    esi
  42c27f:	stos   BYTE PTR es:[edi],al
  42c280:	call   0xfdbdeb2d
  42c285:	pop    ecx
  42c286:	xor    BYTE PTR [edx+0x3e],0x63
  42c28a:	dec    ebp
  42c28b:	fwait
  42c28c:	push   esp
  42c28d:	scas   al,BYTE PTR es:[edi]
  42c28e:	sbb    al,0x5e
  42c290:	mov    WORD PTR [edx-0x5fd67713],?
  42c296:	jmp    0x173:0xb64806aa
  42c29d:	mov    WORD PTR [edx+0x2a],fs
  42c2a0:	xor    DWORD PTR [edx+0x403fc48f],0xffffff9c
  42c2a7:	iret   
  42c2a8:	jg     0x42c2aa
  42c2aa:	cmp    ch,BYTE PTR [ebx+0x6826c7d1]
  42c2b0:	outs   dx,DWORD PTR ds:[esi]
  42c2b1:	daa    
  42c2b2:	les    edx,FWORD PTR fs:[eax+0x3b0bbe5c]
  42c2b9:	(bad)  
  42c2ba:	sub    al,al
  42c2bc:	test   DWORD PTR [edx],eax
  42c2be:	outs   dx,DWORD PTR ds:[esi]
  42c2bf:	adc    al,0x16
  42c2c1:	push   cs
  42c2c2:	sbb    al,0x59
  42c2c4:	enter  0x3c07,0x87
  42c2c8:	push   0x926d4f14
  42c2cd:	inc    ebp
  42c2ce:	enter  0xd082,0x7c
  42c2d2:	cmp    DWORD PTR [ecx-0x515aaae],ecx
  42c2d8:	push   cs
  42c2d9:	rcr    BYTE PTR [esi+ebx*8],0xca
  42c2dd:	push   es
  42c2de:	test   BYTE PTR [ebx+0xd672bca],0xdc
  42c2e5:	test   eax,0x9e5f972c
  42c2ea:	outs   dx,DWORD PTR ds:[esi]
  42c2eb:	and    ebx,DWORD PTR [ebx+0x1]
  42c2ee:	popa   
  42c2ef:	in     eax,dx
  42c2f0:	xchg   si,ax
  42c2f2:	push   eax
  42c2f3:	lods   al,BYTE PTR ds:[esi]
  42c2f4:	add    al,0xe0
  42c2f6:	sub    ch,0xe3
  42c2f9:	push   edx
  42c2fa:	pop    ebx
  42c2fb:	call   FWORD PTR [ebp+0x68c5967c]
  42c301:	cmp    ah,BYTE PTR [ebx]
  42c303:	js     0x42c373
  42c305:	mov    edi,0xd3ed8bf4
  42c30a:	mov    BYTE PTR [ebx+0x2b],ah
  42c30d:	dec    ebx
  42c30e:	jl     0x42c2fb
  42c310:	inc    DWORD PTR [ebx+0x4a852ecf]
  42c316:	dec    esp
  42c317:	xchg   esi,eax
  42c318:	fstp   TBYTE PTR [ecx]
  42c31a:	and    DWORD PTR ds:0xf3daca7d,esi
  42c320:	and    DWORD PTR [esi],ebx
  42c322:	push   cs
  42c323:	test   eax,0x67d5d558
  42c328:	mov    al,0x6f
  42c32a:	aad    0x52
  42c32c:	jnp    0x42c357
  42c32e:	inc    edx
  42c32f:	push   ebx
  42c330:	ret    
  42c331:	sub    al,0xbe
  42c333:	rcl    bh,cl
  42c335:	mov    BYTE PTR [eax],cl
  42c337:	scas   al,BYTE PTR es:[edi]
  42c338:	mov    esp,0xe7a9c3a7
  42c33d:	fs out dx,eax
  42c33f:	mov    ah,0x6a
	...
  42c3b1:	add    BYTE PTR [eax],al
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx+0x21]
  42c3c1:	xor    edx,DWORD PTR [ecx]
  42c3c3:	and    bl,cl
  42c3c5:	rol    DWORD PTR [ecx],cl
  42c3c7:	add    ch,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [edi+eiz*4+0xe],bh
  42c3cf:	fdiv   DWORD PTR [ebx-0x5]
  42c3d2:	xor    BYTE PTR [esi+0x4a],bl
  42c3d5:	mov    ch,0xbb
  42c3d7:	inc    esi
  42c3d8:	mov    ebx,DWORD PTR [ebx+esi*2+0x24]
  42c3dc:	test   eax,0x1afa0166
  42c3e1:	in     eax,0xce
  42c3e3:	jl     0x42c41c
  42c3e5:	sbb    BYTE PTR [eax-0x52fd1fc5],ch
  42c3eb:	das    
  42c3ec:	pushf  
  42c3ed:	mov    edi,0xe38e2c93
  42c3f2:	jno    0x42c437
  42c3f4:	add    bh,BYTE PTR [edi+0x40]
  42c3f7:	test   BYTE PTR [ebx+ecx*8],dh
  42c3fa:	int3   
  42c3fb:	push   esi
  42c3fc:	adc    BYTE PTR [ebx-0xf],cl
  42c3ff:	xor    al,0xb
  42c401:	jle    0x42c385
  42c403:	jnp    0x42c42d
  42c405:	jle    0x42c39f
  42c407:	jle    0x42c441
  42c409:	and    dl,BYTE PTR [ebp+0x70959a6b]
  42c40f:	clc    
  42c410:	xchg   edi,eax
  42c411:	or     bl,BYTE PTR [esi+0x4f]
  42c414:	mov    edx,0x90b54450
  42c419:	fwait
  42c41a:	add    BYTE PTR [edx+0x4f11c7be],cl
  42c420:	mov    esp,0x87f1ed8b
  42c425:	scas   eax,DWORD PTR es:[edi]
  42c426:	add    bl,BYTE PTR [ecx]
  42c428:	jo     0x42c476
  42c42a:	jl     0x42c409
  42c42c:	std    
  42c42d:	stos   DWORD PTR es:[edi],eax
  42c42e:	inc    sp
  42c430:	cwde   
  42c431:	or     ecx,eax
  42c433:	mov    eax,edi
  42c435:	sub    bl,BYTE PTR [esi]
  42c437:	or     DWORD PTR [edi+0x69],ecx
  42c43a:	add    al,0x4f
  42c43c:	push   0x6a1118d7
  42c441:	adc    al,0x5b
  42c443:	mov    al,ds:0xe877003b
  42c448:	pusha  
  42c449:	cmp    al,0xf8
  42c44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c44c:	call   0x6b1ad2b1
  42c451:	fs (bad) 
  42c454:	pusha  
  42c455:	ror    esp,1
  42c457:	push   eax
  42c458:	dec    ebp
  42c459:	lahf   
  42c45a:	fnstenv [edx-0x70af9606]
  42c460:	fld    st(2)
  42c462:	inc    ebx
  42c463:	xor    al,BYTE PTR [eax+0x5f5a30ce]
  42c469:	out    dx,al
  42c46a:	sbb    al,0xfe
  42c46c:	pmaddwd mm7,QWORD PTR [ebx+0x60b977d6]
  42c473:	fmul   DWORD PTR [ecx-0x3c]
  42c476:	xchg   ecx,eax
  42c477:	loope  0x42c445
  42c479:	lods   al,BYTE PTR ds:[esi]
  42c47a:	or     esp,DWORD PTR cs:[ecx+0x35eb855e]
  42c481:	or     eax,0x2d02c2eb
  42c486:	inc    ebp
  42c487:	bound  edi,QWORD PTR [edx-0x5ff7775d]
  42c48d:	mov    esi,0xac23ac89
  42c492:	cmp    dl,BYTE PTR [edx]
  42c494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c495:	pushf  
  42c496:	dec    ebx
  42c497:	mov    ebx,0xa34cbaab
  42c49c:	ret    0xf9e0
  42c49f:	and    edx,0xffffffc8
  42c4a2:	sbb    eax,0xeeff1a5b
  42c4a7:	das    
  42c4a8:	push   0xfffffff2
  42c4aa:	inc    ebp
  42c4ab:	add    edi,DWORD PTR [ebx+0x7c]
  42c4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c4af:	cdq    
  42c4b0:	sti    
  42c4b1:	pushf  
  42c4b2:	jle    0x42c4c7
  42c4b4:	loope  0x42c44c
  42c4b6:	lods   al,BYTE PTR ds:[esi]
  42c4b7:	mov    dh,0x5a
  42c4b9:	push   ebx
  42c4ba:	hlt    
  42c4bb:	push   ebp
  42c4bc:	pop    eax
  42c4bd:	push   0x9d5ccf
	...
  42c532:	add    BYTE PTR [eax],al
  42c534:	loopne 0x42c4ca
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	adc    al,BYTE PTR [eax]
  42c542:	fwait
  42c543:	cmp    cl,dh
  42c545:	aam    0x1
  42c547:	add    ch,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    dl,bh
  42c54d:	jae    0x42c5c1
  42c54f:	loop   0x42c52c
  42c551:	inc    ecx
  42c552:	cmp    esi,DWORD PTR [esp+eiz*2-0x67]
  42c556:	add    BYTE PTR [edx+0x50],bl
  42c559:	lods   al,BYTE PTR ds:[esi]
  42c55a:	repz retf 
  42c55c:	push   esi
  42c55d:	inc    eax
  42c55e:	pop    es
  42c55f:	push   0xffffff9f
  42c561:	dec    eax
  42c562:	mov    ebp,0x1583c2ed
  42c567:	pop    edi
  42c568:	adc    BYTE PTR [ecx+ebx*4-0x47],bh
  42c56c:	jmp    0xc41c3db8
  42c571:	jns    0x42c53a
  42c573:	jb     0x42c57f
  42c575:	pop    es
  42c576:	cld    
  42c577:	jmp    0xc0e69ede
  42c57c:	lods   al,BYTE PTR ds:[esi]
  42c57d:	push   ss
  42c57e:	push   edi
  42c57f:	sub    DWORD PTR [edx+0x42418d7d],edx
  42c585:	sar    edx,cl
  42c587:	test   eax,0xd3078ba2
  42c58c:	lods   al,BYTE PTR ds:[esi]
  42c58d:	mov    al,0xad
  42c58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c590:	sub    BYTE PTR [ebp+0x40c3807b],0x78
  42c597:	mov    WORD PTR [edx+0x3a],ss
  42c59a:	int3   
  42c59b:	hlt    
  42c59c:	js     0x42c564
  42c59e:	sbb    eax,0x7c07d8cd
  42c5a3:	jge    0x42c568
  42c5a5:	lods   eax,DWORD PTR ds:[esi]
  42c5a6:	shl    BYTE PTR [ebx+ebx*8+0x59],cl
  42c5aa:	and    DWORD PTR [ebx-0x5c],ebx
  42c5ad:	dec    eax
  42c5ae:	outs   dx,DWORD PTR ds:[esi]
  42c5af:	inc    ebx
  42c5b0:	adc    edx,DWORD PTR [esi]
  42c5b2:	ss or  eax,0x11ad80de
  42c5b8:	ds in  eax,0x1b
  42c5bb:	push   ds
  42c5bc:	cmp    ebp,esi
  42c5be:	jge    0x42c5f4
  42c5c0:	jle    0x42c5f7
  42c5c2:	jbe    0x42c569
  42c5c4:	sbb    dl,cl
  42c5c6:	pushf  
  42c5c7:	inc    edi
  42c5c8:	dec    eax
  42c5c9:	inc    esp
  42c5ca:	ds xchg ecx,eax
  42c5cc:	mov    ebp,0x7bef1f1e
  42c5d1:	test   esi,edx
  42c5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5d4:	(bad)  
  42c5d5:	cmc    
  42c5d6:	mov    ebx,0xd583f794
  42c5db:	aad    0xb4
  42c5dd:	ror    BYTE PTR [eax+esi*2],cl
  42c5e0:	and    eax,ebp
  42c5e2:	jmp    0x42c5c2
  42c5e4:	xchg   edi,eax
  42c5e5:	mov    ds:0xf6dff3f9,al
  42c5ea:	xchg   ebp,eax
  42c5eb:	dec    ebp
  42c5ec:	es jns 0x42c613
  42c5ef:	push   ebx
  42c5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5f1:	je     0x42c600
  42c5f3:	mov    bh,0x62
  42c5f5:	jns    0x42c601
  42c5f7:	jge    0x42c5ed
  42c5f9:	pushf  
  42c5fa:	adc    esp,edi
  42c5fc:	inc    BYTE PTR [edx+0x333091d4]
  42c602:	dec    ecx
  42c603:	aas    
  42c604:	lea    esp,[ebp+0x43aa6806]
  42c60a:	ret    
  42c60b:	ror    BYTE PTR [edi*2+0xde65c27],1
  42c612:	jp     0x42c5f6
  42c614:	in     eax,dx
  42c615:	aad    0x6
  42c617:	push   ecx
  42c618:	push   esp
  42c619:	push   es
  42c61a:	repnz imul DWORD PTR [esi+0x40]
  42c61e:	ret    
  42c61f:	out    0x7c,al
  42c621:	xor    BYTE PTR [ecx],ah
  42c623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c624:	jno    0x42c634
  42c626:	dec    esi
  42c627:	mov    eax,ds:0x8baedd04
  42c62c:	cwde   
  42c62d:	mov    ebp,0xb45324fc
  42c632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c633:	dec    edi
  42c634:	dec    ecx
  42c635:	pop    es
  42c636:	mov    fs,WORD PTR [edx+0x5bc7ae08]
  42c63c:	stos   BYTE PTR es:[edi],al
  42c63d:	mov    WORD PTR [ebx+0x13],cs
  42c640:	push   eax
	...
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x9fbe,0x36
  42c6c2:	outs   dx,BYTE PTR ds:[esi]
  42c6c3:	xor    eax,0x1d5c3
  42c6c8:	cmc    
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [edx+0x3c43b18c],bl
  42c6d1:	mov    ecx,0x2983fc95
  42c6d6:	fsub   st,st(0)
  42c6d8:	sahf   
  42c6d9:	mov    DWORD PTR [ecx],edx
  42c6db:	mov    al,0x1e
  42c6dd:	push   edx
  42c6de:	mov    eax,0x754a0044
  42c6e3:	jb     0x42c69b
  42c6e5:	or     eax,0x1e8b60e9
  42c6ea:	lods   al,BYTE PTR ds:[esi]
  42c6eb:	clc    
  42c6ec:	hlt    
  42c6ed:	pop    edx
  42c6ee:	xchg   ebx,eax
  42c6ef:	sub    bh,BYTE PTR [ebx*4+0x5e6c0673]
  42c6f6:	or     ebp,DWORD PTR [ebx]
  42c6f8:	enter  0x1c46,0x3a
  42c6fc:	out    0x72,eax
  42c6fe:	xor    ecx,DWORD PTR [ecx+eax*1]
  42c701:	or     esp,esp
  42c703:	sbb    edx,ecx
  42c705:	add    esi,DWORD PTR [esi-0x3a0364c2]
  42c70b:	in     al,dx
  42c70c:	cmp    al,ch
  42c70e:	cs stc 
  42c710:	or     al,0x1e
  42c712:	fcom   DWORD PTR [ecx+0x31]
  42c716:	mov    al,cs:0xdf7bc477
  42c71c:	ror    BYTE PTR [ebp-0x14],0x0
  42c720:	push   ds
  42c721:	push   esi
  42c722:	dec    esp
  42c723:	sahf   
  42c724:	pop    ebp
  42c725:	arpl   WORD PTR [ebx],di
  42c727:	ss mov ecx,0x150a5db7
  42c72d:	push   eax
  42c72e:	lods   al,BYTE PTR ds:[esi]
  42c72f:	popf   
  42c730:	add    ch,cl
  42c732:	xor    edx,0xffffffc1
  42c735:	int3   
  42c736:	mov    eax,0x58aba60f
  42c73b:	xchg   BYTE PTR [eax],ah
  42c73d:	xchg   edx,eax
  42c73e:	adc    cl,BYTE PTR [esi+0x4df94600]
  42c744:	int    0x1a
  42c746:	xor    ch,BYTE PTR ds:0x63039c3c
  42c74c:	cmp    BYTE PTR [edi],cl
  42c74e:	(bad)  
  42c74f:	xor    al,0xe1
  42c751:	ret    
  42c752:	bound  esp,QWORD PTR [ecx-0x28]
  42c755:	mov    al,0x71
  42c757:	sahf   
  42c758:	cmp    DWORD PTR [edi-0x1ed0d99d],edi
  42c75e:	xchg   DWORD PTR ds:0x718f3ca8,edx
  42c764:	adc    eax,0x940db294
  42c769:	mov    dl,0xfb
  42c76b:	addr16 jns 0x42c748
  42c76e:	ds add al,0xc5
  42c771:	dec    eax
  42c772:	jle    0x42c73e
  42c774:	xchg   ecx,eax
  42c775:	mov    dh,0x8a
  42c777:	(bad)  
  42c778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c779:	pushf  
  42c77a:	into   
  42c77b:	fistp  WORD PTR [edi]
  42c77d:	cmp    bl,BYTE PTR [eax+0x251e9a35]
  42c783:	jl     0x42c7fc
  42c785:	aaa    
  42c786:	idiv   BYTE PTR [edi+0x239decdc]
  42c78c:	sub    eax,0xcb53c7c3
  42c791:	(bad)  
  42c792:	cmc    
  42c793:	in     al,dx
  42c794:	pushf  
  42c795:	rdmsr  
  42c797:	add    ch,BYTE PTR [edx]
  42c799:	push   ebx
  42c79a:	popa   
  42c79b:	mov    esp,edx
  42c79d:	rcr    edi,0x6d
  42c7a0:	ins    DWORD PTR es:[edi],dx
  42c7a1:	sub    cl,BYTE PTR [ebx+0x476f67ea]
  42c7a7:	jo     0x7e76b8f
  42c7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7ae:	cli    
  42c7af:	sahf   
  42c7b0:	mov    bh,0x6d
  42c7b2:	out    0x12,al
  42c7b4:	push   ecx
  42c7b5:	arpl   WORD PTR [edx],sp
  42c7b7:	or     DWORD PTR [edi+ebp*4+0x3b],esp
  42c7bb:	xchg   edi,ebx
  42c7bd:	mov    cl,0x33
  42c7bf:	int    0x2f
	...
  42c831:	add    BYTE PTR [eax],al
  42c833:	add    al,ch
  42c835:	popf   
  42c836:	mov    esi,0xf9e7ffe7
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xedd1d287
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR [ebp+0x6b],bh
  42c84e:	inc    ebx
  42c84f:	mov    dl,0x45
  42c851:	cld    
  42c852:	pop    es
  42c853:	pop    esi
  42c854:	push   ds
  42c855:	out    0x2f,eax
  42c857:	jg     0x42c86b
  42c859:	in     eax,0x2b
  42c85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c85c:	out    0x2f,eax
  42c85e:	je     0x42c7ff
  42c860:	dec    esi
  42c861:	lds    edi,FWORD PTR [edi+eiz*1+0x619b2b2a]
  42c868:	je     0x42c890
  42c86a:	repz leave 
  42c86c:	mov    edx,0xb9f1d031
  42c871:	(bad)  
  42c872:	push   0xffffffe7
  42c874:	sub    BYTE PTR [ebx-0x45f08038],0xa8
  42c87b:	(bad)  
  42c87c:	cld    
  42c87d:	and    al,0x28
  42c87f:	(bad)  
  42c880:	call   0xb0f6:0x8d27a946
  42c887:	adc    ah,ch
  42c889:	dec    ebx
  42c88a:	jecxz  0x42c817
  42c88c:	and    ax,0x9a8e
  42c890:	call   FWORD PTR [ebp-0x373fa06]
  42c896:	gs inc edx
  42c898:	(bad)  
  42c899:	dec    esi
  42c89a:	push   edx
  42c89b:	lds    esp,FWORD PTR ds:0x22c5610e
  42c8a1:	stos   DWORD PTR es:[edi],eax
  42c8a2:	xchg   esi,eax
  42c8a3:	adc    ah,BYTE PTR [eax+edi*1]
  42c8a6:	lods   al,BYTE PTR ds:[esi]
  42c8a7:	jbe    0x42c855
  42c8a9:	aam    0x33
  42c8ab:	jg     0x42c8f0
  42c8ad:	push   edx
  42c8ae:	test   eax,0x3e51a3d7
  42c8b3:	jns    0x42c902
  42c8b5:	lods   eax,DWORD PTR ds:[esi]
  42c8b6:	sub    BYTE PTR [esi+0x3462201],al
  42c8bc:	(bad)  
  42c8bd:	push   cs
  42c8be:	mov    ebp,0x462462
  42c8c3:	repnz push cs
  42c8c5:	mov    cl,0x6a
  42c8c7:	pop    edx
  42c8c8:	xchg   DWORD PTR [ecx+ebp*2-0x18e2a168],ebx
  42c8cf:	xchg   edi,eax
  42c8d0:	dec    ebx
  42c8d1:	(bad)  
  42c8d2:	and    BYTE PTR [edx],bl
  42c8d4:	addr16 sbb dh,bl
  42c8d7:	jecxz  0x42c90c
  42c8d9:	xchg   edi,eax
  42c8da:	push   ebx
  42c8db:	jmp    0x298b:0xf1ac480d
  42c8e2:	jge    0x42c929
  42c8e4:	cli    
  42c8e5:	icebp  
  42c8e6:	mov    cl,0xbd
  42c8e8:	sbb    eax,0xd7caf233
  42c8ed:	jl     0x42c93d
  42c8ef:	pop    edi
  42c8f0:	scas   eax,DWORD PTR es:[edi]
  42c8f1:	jle    0x42c950
  42c8f3:	stos   DWORD PTR es:[edi],eax
  42c8f4:	not    DWORD PTR [ecx+ebx*8]
  42c8f7:	xchg   ebp,eax
  42c8f8:	push   es
  42c8f9:	test   al,0x61
  42c8fb:	mov    ds:0x1babaa6a,al
  42c900:	test   DWORD PTR [edx+0x15],ecx
  42c903:	stos   DWORD PTR es:[edi],eax
  42c904:	adc    edi,DWORD PTR [eax+0x56]
  42c907:	xchg   esp,eax
  42c908:	xor    al,BYTE PTR [edi-0x3cb9492e]
  42c90e:	dec    eax
  42c90f:	lods   al,BYTE PTR ds:[esi]
  42c910:	fneni(8087 only) 
  42c912:	add    al,0xd1
  42c914:	call   0x228c1db9
  42c919:	in     eax,0xe5
  42c91b:	mov    ebx,0x2033a160
  42c920:	push   ds
  42c921:	xchg   edx,eax
  42c922:	dec    ebx
  42c923:	std    
  42c924:	mov    DWORD PTR [eax-0x4],edi
  42c927:	xchg   BYTE PTR [esi-0x49],bl
  42c92a:	adc    eax,0x19f47472
  42c92f:	daa    
  42c930:	(bad)  
  42c931:	scas   eax,DWORD PTR es:[edi]
  42c932:	popf   
  42c933:	jge    0x42c8de
  42c935:	inc    edx
  42c936:	lds    edx,FWORD PTR [esi+ebx*2]
  42c939:	xchg   esi,eax
  42c93a:	add    eax,0xaf2b7b2c
  42c93f:	mov    BYTE PTR [esi+0x0],bl
	...
  42c9b1:	add    BYTE PTR [eax],al
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    dh,bh
  42c9c1:	fld    TBYTE PTR [ecx+edx*1]
  42c9c4:	lods   eax,DWORD PTR ds:[esi]
  42c9c5:	xlat   BYTE PTR ds:[ebx]
  42c9c6:	add    DWORD PTR [eax],eax
  42c9c8:	cmc    
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [ebx-0x6],dl
  42c9ce:	pop    edi
  42c9cf:	lahf   
  42c9d0:	gs int3 
  42c9d2:	in     al,0xa
  42c9d4:	push   ss
  42c9d5:	rcr    DWORD PTR [ebx-0x140fae20],1
  42c9db:	push   esi
  42c9dc:	(bad)  
  42c9dd:	ret    
  42c9de:	sub    al,0xa5
  42c9e0:	jge    0x42ca5a
  42c9e2:	je     0x42ca0b
  42c9e4:	or     BYTE PTR [edx],0xe9
  42c9e7:	sub    edi,DWORD PTR [edx]
  42c9e9:	xlat   BYTE PTR ds:[ebx]
  42c9ea:	mov    dl,0x83
  42c9ec:	add    DWORD PTR [ebx+0x43],0x75
  42c9f0:	xlat   BYTE PTR ds:[ebx]
  42c9f1:	push   ebx
  42c9f2:	xchg   edx,eax
  42c9f3:	out    0x11,eax
  42c9f5:	int3   
  42c9f6:	test   esi,ecx
  42c9f8:	fucomp st(2)
  42c9fa:	push   esp
  42c9fb:	add    al,0xba
  42c9fd:	jmp    0xf5ae:0x49ad952a
  42ca04:	sbb    al,0xaa
  42ca06:	mov    ebp,0x7ec1eff8
  42ca0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca0c:	(bad)  [edi-0x38]
  42ca0f:	push   eax
  42ca10:	test   DWORD PTR [ebx+eax*8],0xc1017aca
  42ca17:	mov    ebp,0x13cca012
  42ca1c:	popa   
  42ca1d:	mov    ebp,esp
  42ca1f:	push   ebp
  42ca20:	lods   eax,DWORD PTR ds:[esi]
  42ca21:	cli    
  42ca22:	ins    BYTE PTR es:[edi],dx
  42ca23:	mov    ds:0x4fd7474b,al
  42ca28:	and    BYTE PTR [ebx+0x3788e4b9],bl
  42ca2e:	adc    ecx,DWORD PTR [eax+ecx*4+0xbeb7cc2]
  42ca35:	cmp    eax,0x52bd1f79
  42ca3a:	mov    DWORD PTR [esi],0x51260cc6
  42ca40:	das    
  42ca41:	loope  0x42ca75
  42ca43:	adc    ebx,DWORD PTR [ebx]
  42ca45:	mov    ds,WORD PTR gs:[ecx-0x8e8b91b]
  42ca4c:	mov    eax,0x4d10ef48
  42ca51:	push   ds
  42ca52:	cmp    ah,BYTE PTR [edi+esi*2-0x75f26e29]
  42ca59:	jle    0x42cac2
  42ca5b:	pushf  
  42ca5c:	iret   
  42ca5d:	push   esi
  42ca5e:	mov    eax,0x252c8a97
  42ca63:	and    DWORD PTR [eax-0x13255c32],ebx
  42ca69:	xchg   edi,eax
  42ca6a:	and    eax,0xff7ded85
  42ca6f:	sti    
  42ca70:	pop    esp
  42ca71:	and    BYTE PTR [ebp+0x789ad2fd],0xf2
  42ca78:	stc    
  42ca79:	xchg   ecx,eax
  42ca7a:	add    al,dh
  42ca7c:	fcomp  DWORD PTR [ecx-0x19]
  42ca7f:	aaa    
  42ca80:	xor    esi,eax
  42ca82:	jo     0x42caf2
  42ca84:	mov    dl,0x8c
  42ca86:	sbb    ebp,DWORD PTR [edx-0x426d04e0]
  42ca8c:	push   esi
  42ca8d:	mov    DWORD PTR [esi],ecx
  42ca8f:	setae  BYTE PTR [edi+0x53]
  42ca93:	ins    BYTE PTR es:[edi],dx
  42ca94:	fdiv   QWORD PTR [ecx]
  42ca96:	sti    
  42ca97:	(bad)  
  42ca98:	or     DWORD PTR [edx],ecx
  42ca9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca9b:	mov    ebp,0x7e07f9f8
  42caa0:	mov    eax,ds:0xac6b1df
  42caa5:	push   edx
  42caa6:	push   es
  42caa7:	shl    BYTE PTR [esi+0x7e],0x22
  42caab:	test   BYTE PTR [ebp+esi*8+0x6c29e70c],0xca
  42cab3:	stc    
  42cab4:	mov    dh,0x90
  42cab6:	mov    ebx,0x2bfd2dd4
  42cabb:	mov    cl,0x62
  42cabd:	in     al,0xa8
  42cabf:	test   BYTE PTR [ebx+0x0],ah
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	sbb    ah,BYTE PTR [si-0x5db3]
  42cb45:	fadd   DWORD PTR [ecx]
  42cb47:	add    ch,dh
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [esi],ah
  42cb4d:	or     esi,DWORD PTR [edx]
  42cb4f:	stos   BYTE PTR es:[edi],al
  42cb50:	out    dx,al
  42cb51:	sbb    BYTE PTR [edx+ebp*4-0x54],bl
  42cb55:	rcr    al,0xaa
  42cb58:	pop    eax
  42cb59:	add    bl,BYTE PTR [esi+esi*4]
  42cb5c:	sub    ah,BYTE PTR [edi-0x3a]
  42cb5f:	pop    ebp
  42cb60:	pop    ss
  42cb61:	int    0xa8
  42cb63:	adc    DWORD PTR [esi],esp
  42cb65:	adc    al,0x6c
  42cb67:	aaa    
  42cb68:	mov    ds:0x4e8fefc9,eax
  42cb6d:	mov    esi,0x85b4d0d8
  42cb72:	lods   eax,DWORD PTR ds:[esi]
  42cb73:	adc    eax,0x521ccfee
  42cb78:	jbe    0x42cbf8
  42cb7a:	fs fwait
  42cb7c:	jg     0x42cba4
  42cb7e:	repz pop ds
  42cb80:	inc    bp
  42cb82:	loope  0x42cbf1
  42cb84:	loope  0x42cb87
  42cb86:	sub    al,0xb
  42cb88:	lock repz push ss
  42cb8b:	jae    0x42cb86
  42cb8d:	test   edi,esi
  42cb8f:	or     bl,BYTE PTR [ebx]
  42cb91:	mov    ah,0xe4
  42cb93:	pop    ds
  42cb94:	xchg   dl,ah
  42cb96:	mov    ebp,0x8af82979
  42cb9c:	pop    DWORD PTR [ebx+0x1551d85d]
  42cba2:	jno    0x42cb94
  42cba4:	loop   0x42cb89
  42cba6:	test   BYTE PTR [ebx-0x387c4e04],cl
  42cbac:	jns    0x42cbca
  42cbae:	lock pop esp
  42cbb0:	sar    BYTE PTR [edx+0x3ec3b496],cl
  42cbb6:	nop
  42cbb7:	aad    0xc9
  42cbb9:	jmp    0x8b877a9e
  42cbbe:	bound  edx,QWORD PTR [esi+0x97f8b93]
  42cbc4:	mov    ch,0x86
  42cbc6:	popf   
  42cbc7:	ss loope 0x42cb4b
  42cbca:	cmp    al,0xf0
  42cbcc:	mov    ebp,0xa23b8b30
  42cbd1:	push   ebx
  42cbd2:	in     eax,dx
  42cbd3:	test   al,0x68
  42cbd5:	mov    bl,0xa5
  42cbd7:	test   al,0xaf
  42cbd9:	mov    ch,0x10
  42cbdb:	jno    0x42cbf7
  42cbdd:	or     dl,BYTE PTR [eax]
  42cbdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbe0:	cmp    al,0x5
  42cbe2:	add    ecx,DWORD PTR [ebx+0x2b1dd6e3]
  42cbe8:	ror    BYTE PTR [ecx],0x7e
  42cbeb:	dec    esi
  42cbec:	push   ebp
  42cbed:	ret    0x9a44
  42cbf0:	dec    DWORD PTR [esi-0x5c]
  42cbf3:	scas   eax,DWORD PTR es:[edi]
  42cbf4:	jbe    0x42cbbc
  42cbf6:	inc    esi
  42cbf7:	adc    DWORD PTR [esi-0x80],0xf357bc4f
  42cbfe:	sub    al,0xe2
  42cc00:	cs jo  0x42cbab
  42cc03:	cmc    
  42cc04:	(bad)  
  42cc06:	pop    eax
  42cc07:	jg     0x42cc29
  42cc09:	iret   
  42cc0a:	das    
  42cc0b:	add    ch,BYTE PTR ds:0xa3bbd75a
  42cc11:	pop    esp
  42cc12:	xor    BYTE PTR [edx],bl
  42cc14:	cs dec eax
  42cc16:	push   0xffffff8a
  42cc18:	xor    bl,BYTE PTR [esi]
  42cc1a:	cmp    BYTE PTR [esp+eiz*8],cl
  42cc1d:	jg     0x42cbac
  42cc1f:	add    DWORD PTR [esi-0x51],esi
  42cc22:	lds    esi,FWORD PTR [edx+ebp*4]
  42cc25:	sahf   
  42cc26:	jb     0x42cc82
  42cc28:	in     eax,0x74
  42cc2a:	mov    esp,0x6e5d8913
  42cc2f:	cli    
  42cc30:	xchg   ebp,eax
  42cc31:	(bad)  
  42cc32:	xor    BYTE PTR [esi+0x3f7472a5],ah
  42cc38:	mov    esp,0x90c7bf3f
  42cc3d:	push   ebp
  42cc3e:	outs   dx,DWORD PTR ds:[esi]
  42cc3f:	pop    es
  42cc40:	fld    QWORD PTR [eax]
	...
  42ccb2:	add    BYTE PTR [eax],al
  42ccb4:	mov    al,0xb6
  42ccb6:	pushf  
  42ccb7:	adc    al,0x9e
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    ebp,DWORD PTR [esp+edi*1+0x7a]
  42ccc3:	fs xchg edi,eax
  42ccc5:	fld    DWORD PTR [ecx]
  42ccc7:	add    ch,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ecx-0x69],bl
  42ccce:	mov    bh,al
  42ccd0:	and    eax,0xf6e064e5
  42ccd5:	mov    DWORD PTR [bx-0x17],ecx
  42ccd9:	shl    esp,cl
  42ccdb:	push   ebx
  42ccdc:	add    edi,ebp
  42ccde:	cmp    dh,ch
  42cce0:	repz inc esi
  42cce2:	pop    ebp
  42cce3:	icebp  
  42cce4:	sbb    DWORD PTR [ecx],ebx
  42cce6:	adc    eax,0xae52cd0b
  42cceb:	jmp    0xbb7bb0e6
  42ccf0:	sti    
  42ccf1:	iret   
  42ccf2:	cmp    esp,eax
  42ccf4:	xchg   esi,eax
  42ccf5:	daa    
  42ccf6:	cmp    al,0x7b
  42ccf8:	das    
  42ccf9:	(bad)  
  42ccfa:	fwait
  42ccfb:	sbb    BYTE PTR [eax+0x1f],cl
  42ccfe:	sbb    edi,ebp
  42cd00:	xor    ebx,DWORD PTR [eax+0x3d]
  42cd03:	mov    dh,0x81
  42cd05:	jecxz  0x42cd52
  42cd07:	push   ds
  42cd08:	aam    0x55
  42cd0a:	aaa    
  42cd0b:	test   BYTE PTR [esi+0x2041c8da],0xee
  42cd12:	mov    bh,0x14
  42cd14:	pop    eax
  42cd15:	js     0x42ccb4
  42cd17:	stc    
  42cd18:	out    dx,eax
  42cd19:	retf   
  42cd1a:	sbb    BYTE PTR [ebp-0x56],bh
  42cd1d:	dec    ebp
  42cd1e:	mov    WORD PTR [ebx-0xb],gs
  42cd21:	push   eax
  42cd22:	pushf  
  42cd23:	leave  
  42cd24:	les    eax,FWORD PTR [ecx+0x7f]
  42cd27:	push   ebp
  42cd28:	ss out 0x97,eax
  42cd2b:	and    BYTE PTR [ecx],ah
  42cd2d:	inc    edx
  42cd2e:	ret    0x95dc
  42cd31:	or     dh,BYTE PTR [ebx-0x3c]
  42cd34:	loop   0x42ccee
  42cd36:	and    ch,BYTE PTR [eax-0x47]
  42cd39:	dec    esi
  42cd3a:	sub    edx,DWORD PTR [ecx-0x6de12a8]
  42cd40:	adc    eax,0x7bb3c582
  42cd45:	ror    BYTE PTR [edi+0x4e],1
  42cd48:	std    
  42cd49:	loop   0x42cd5a
  42cd4b:	inc    ebx
  42cd4c:	push   ebx
  42cd4d:	mov    ecx,0x4c54dedc
  42cd52:	stos   DWORD PTR es:[edi],eax
  42cd53:	xor    ecx,DWORD PTR [edx]
  42cd55:	add    dl,ch
  42cd57:	rol    BYTE PTR [edx+eiz*4],0x40
  42cd5b:	addr16 jle 0x42cdc1
  42cd5e:	test   eax,0x5e72b0c
  42cd63:	cli    
  42cd64:	pop    esi
  42cd65:	(bad)  
  42cd66:	shr    bh,0xed
  42cd69:	aad    0x73
  42cd6b:	mov    bl,0x98
  42cd6d:	sub    edx,ebx
  42cd6f:	imul   esi,DWORD PTR [edi+0x51dec822],0xffffffbe
  42cd76:	cs mov dl,0x91
  42cd79:	das    
  42cd7a:	sub    DWORD PTR [ebp-0x7bdad103],ecx
  42cd80:	(bad)  
  42cd81:	xor    ecx,DWORD PTR [ecx+0x546034f7]
  42cd87:	pusha  
  42cd88:	inc    esi
  42cd89:	sbb    ebp,DWORD PTR [ecx+0xbf14bff]
  42cd8f:	int3   
  42cd90:	add    DWORD PTR [eax-0xa],0x34
  42cd94:	xchg   ebx,eax
  42cd95:	ss cmp eax,0xd28779ca
  42cd9b:	rcl    ebx,cl
  42cd9d:	fwait
  42cd9e:	dec    edi
  42cd9f:	or     eax,0x39fcbef7
  42cda4:	jbe    0x42cd4e
  42cda6:	js     0x42cda4
  42cda8:	neg    BYTE PTR [eax+ebx*1-0x1eeb093b]
  42cdaf:	lods   eax,DWORD PTR ds:[esi]
  42cdb0:	mov    ecx,0x8a0b8d05
  42cdb5:	push   cs
  42cdb6:	mov    dl,BYTE PTR [edx+0x21]
  42cdb9:	push   cs
  42cdba:	xor    DWORD PTR ds:0xcdfa98b0,0xb
	...
  42ce31:	add    BYTE PTR [eax],al
  42ce33:	add    BYTE PTR [edi-0x825b8e0],dl
  42ce39:	call   FWORD PTR [edi+0x410aba6d]
  42ce3f:	sbb    DWORD PTR [ecx-0x734d82ee],edi
  42ce45:	fiadd  DWORD PTR [ecx]
  42ce47:	add    ch,dh
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR [esi+eax*2+0x42b6ae86],bh
  42ce52:	lods   al,BYTE PTR ds:[esi]
  42ce53:	test   BYTE PTR [ebx-0x1bf73f5f],ch
  42ce59:	stos   DWORD PTR es:[edi],eax
  42ce5a:	pop    ebx
  42ce5b:	mov    al,0x8e
  42ce5d:	mov    ch,bh
  42ce5f:	(bad)  
  42ce62:	shl    al,1
  42ce64:	xlat   BYTE PTR ds:[ebx]
  42ce65:	add    DWORD PTR ds:0x76b879f6,0x0
  42ce6c:	pop    edi
  42ce6d:	mov    esi,0x4e146cd
  42ce72:	cmp    eax,0x7c206ea5
  42ce77:	(bad)  
  42ce79:	inc    eax
  42ce7a:	or     eax,0xed8f0b3c
  42ce7f:	popa   
  42ce80:	mov    bh,0x43
  42ce82:	fnstenv [ebx]
  42ce84:	or     al,0x8d
  42ce86:	imul   edx,DWORD PTR [esi-0x68e59672],0xc285f3de
  42ce90:	inc    esp
  42ce91:	call   0x6f8db34f
  42ce96:	(bad)  
  42ce97:	js     0x42cea3
  42ce99:	iret   
  42ce9a:	shl    DWORD PTR [eax-0x77],0xe1
  42ce9e:	in     eax,dx
  42ce9f:	inc    esp
  42cea0:	xchg   ebp,eax
  42cea1:	jnp    0x42cf1c
  42cea3:	pop    ebx
  42cea4:	mov    cl,0x31
  42cea6:	sub    eax,0xd48d9fdf
  42ceab:	stc    
  42ceac:	pusha  
  42cead:	inc    ebx
  42ceae:	jecxz  0x42ce6b
  42ceb0:	mov    gs,WORD PTR [ebx]
  42ceb2:	mov    cl,0x80
  42ceb4:	push   0x7188eb21
  42ceb9:	xor    BYTE PTR [ebp+0x2b53b834],ch
  42cebf:	xor    al,0x3
  42cec1:	xchg   ebp,eax
  42cec2:	jg     0x42ce5e
  42cec4:	es add edi,ecx
  42cec7:	lods   eax,DWORD PTR ds:[esi]
  42cec9:	xor    bh,BYTE PTR [ecx]
  42cecb:	xor    eax,0x8c92af8d
  42ced0:	xor    BYTE PTR ds:0x279dedbe,bh
  42ced6:	loop   0x42cf07
  42ced8:	pop    ss
  42ced9:	jo     0x42ceee
  42cedb:	push   edx
  42cedc:	pop    esp
  42cedd:	daa    
  42cede:	jge    0x42cec0
  42cee0:	pop    ecx
  42cee1:	push   eax
  42cee2:	dec    esp
  42cee3:	cmp    BYTE PTR [edx+0x52],0xd7
  42cee7:	sbb    BYTE PTR [ebp-0x55],ch
  42ceea:	stos   DWORD PTR es:[edi],eax
  42ceeb:	xchg   ecx,eax
  42ceec:	add    al,0x9b
  42ceee:	sti    
  42ceef:	enter  0x6b69,0x53
  42cef3:	pop    eax
  42cef4:	xlat   BYTE PTR ds:[ebx]
  42cef5:	adc    eax,0x727941a
  42cefa:	and    eax,0xe998b772
  42ceff:	dec    ecx
  42cf00:	adc    BYTE PTR [edi-0x7819e2cc],dh
  42cf06:	xchg   ebx,eax
  42cf07:	cmp    eax,ecx
  42cf09:	mov    edi,0xb104317f
  42cf0e:	(bad)  
  42cf0f:	pop    edi
  42cf10:	xchg   esi,eax
  42cf11:	cmp    eax,0xe52e9a68
  42cf16:	pushf  
  42cf17:	and    edi,DWORD PTR [esi]
  42cf19:	ss inc ebx
  42cf1b:	and    edx,DWORD PTR [ebx+0x71]
  42cf1e:	push   ebp
  42cf1f:	jmp    0x146f:0x809607c
  42cf26:	or     DWORD PTR [esp+eiz*8],esi
  42cf29:	push   0x156e713e
  42cf2e:	arpl   WORD PTR [ecx],bp
  42cf30:	retf   
  42cf31:	icebp  
  42cf32:	sbb    ebp,DWORD PTR [ebx+0x56866ac9]
  42cf38:	sbb    DWORD PTR [edi+esi*2+0x3d5986c3],ebx
  42cf3f:	sti    
  42cf40:	retf   
	...
  42cfb1:	add    BYTE PTR [eax],al
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0xed
  42cfc1:	repz adc bh,ah
  42cfc4:	sbb    ebx,0xf50001
  42cfca:	add    BYTE PTR [eax],al
  42cfcc:	mov    dl,0x6e
  42cfce:	inc    eax
  42cfcf:	stc    
  42cfd0:	push   esp
  42cfd1:	(bad)  
  42cfd2:	(bad)  
  42cfd3:	cmp    edx,ebp
  42cfd5:	cmc    
  42cfd6:	and    BYTE PTR [ecx-0x58429cc0],dl
  42cfdc:	jne    0x42d037
  42cfde:	push   ecx
  42cfdf:	cmp    eax,0x16a15f4b
  42cfe4:	push   edi
  42cfe5:	sub    DWORD PTR [eax],esi
  42cfe7:	std    
  42cfe8:	gs aad 0xf1
  42cfeb:	hlt    
  42cfec:	cmp    BYTE PTR ds:0x25b7ac98,0x1b
  42cff3:	pushf  
  42cff4:	and    BYTE PTR [ebx+0x36],bl
  42cff7:	and    BYTE PTR [esi-0xc],dh
  42cffa:	lahf   
  42cffb:	outs   dx,DWORD PTR ds:[esi]
  42cffc:	xchg   edi,eax
  42cffd:	add    eax,0x23093d71
  42d002:	adc    esi,ecx
  42d004:	dec    esp
  42d005:	jbe    0x42cff9
  42d007:	push   edi
  42d008:	mov    esp,0x52080c39
  42d00d:	cmp    DWORD PTR [esi+0x0],edx
  42d010:	cs mov bh,0x69
  42d013:	jne    0x42cff2
  42d015:	push   ecx
  42d016:	inc    eax
  42d017:	hlt    
  42d018:	mov    ss,edi
  42d01a:	push   ebp
  42d01b:	retf   0xb22b
  42d01e:	clc    
  42d01f:	cmc    
  42d020:	mov    eax,ds:0xd142da94
  42d025:	add    dh,BYTE PTR [edx+0x63]
  42d028:	mov    DWORD PTR [ebx-0x7cb57f4b],esi
  42d02e:	(bad)  
  42d02f:	lea    ebx,[edx]
  42d031:	adc    DWORD PTR [eax+0x42],edi
  42d034:	mov    ecx,0x304427e7
  42d039:	(bad)  
  42d03a:	fsub   st,st(6)
  42d03c:	aas    
  42d03d:	dec    esi
  42d03e:	ins    BYTE PTR es:[edi],dx
  42d03f:	in     al,0x7f
  42d041:	push   ebp
  42d042:	adc    eax,0x3cfaf9a0
  42d047:	into   
  42d048:	pop    ebx
  42d049:	shr    BYTE PTR [edx+0x68],1
  42d04c:	shr    BYTE PTR ds:0xd030718e,1
  42d052:	jl     0x42d044
  42d054:	lahf   
  42d055:	push   ds
  42d056:	repz sub DWORD PTR [edx-0xf06cf6],ebx
  42d05d:	adc    eax,0x6da6aa12
  42d062:	ret    
  42d063:	retf   0x770f
  42d066:	pusha  
  42d067:	lods   eax,DWORD PTR ds:[esi]
  42d068:	jge    0x42d07f
  42d06a:	je     0x42d0d8
  42d06c:	jno    0x42d01e
  42d06e:	and    DWORD PTR [eax-0x7d4dd80d],edx
  42d074:	in     eax,dx
  42d075:	mov    cl,0x15
  42d077:	int3   
  42d078:	mov    dl,0x3
  42d07a:	and    BYTE PTR [eax-0x80],al
  42d07d:	mov    dl,0x6a
  42d07f:	push   edi
  42d080:	mov    eax,ds:0xebf16178
  42d085:	scas   eax,DWORD PTR es:[edi]
  42d086:	mov    edi,0x688afe88
  42d08b:	add    BYTE PTR [ecx-0x642995f6],0x11
  42d092:	imul   esi,esi,0x52
  42d095:	jo     0x42d0fe
  42d097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d098:	imul   esi,DWORD PTR [edx-0x1b611248],0xbd25a097
  42d0a2:	jp     0x42d0fa
  42d0a4:	ret    
  42d0a5:	cmp    edx,ebp
  42d0a7:	xchg   edi,eax
  42d0a8:	pop    ecx
  42d0a9:	ins    DWORD PTR es:[edi],dx
  42d0aa:	mov    bh,0x32
  42d0ac:	cmp    BYTE PTR [ebx],ah
  42d0ae:	outs   dx,BYTE PTR ds:[esi]
  42d0af:	int    0x11
  42d0b1:	jge    0x42d108
  42d0b3:	xchg   ebx,eax
  42d0b4:	shr    bh,1
  42d0b6:	mov    ecx,0xba229ca4
  42d0bb:	fdiv   st(2),st
  42d0bd:	call   0x9ac8fe
	...
  42d132:	add    BYTE PTR [eax],al
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0xbd559450
  42d143:	jae    0x42d1bb
  42d145:	fadd   QWORD PTR [ecx]
  42d147:	add    ch,dh
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    BYTE PTR [esi-0x69b292d5],bh
  42d151:	mov    esi,0xba240dcd
  42d156:	retf   0xee31
  42d159:	je     0x42d0ee
  42d15b:	popa   
  42d15c:	fs (bad) 
  42d15e:	cmp    eax,0x7681698b
  42d163:	(bad)  
  42d164:	xlat   BYTE PTR ds:[ebx]
  42d165:	pop    es
  42d166:	adc    DWORD PTR [edx],ecx
  42d168:	lea    ebp,[ebp+0x379d5bb]
  42d16e:	push   esi
  42d16f:	test   al,cl
  42d171:	xor    DWORD PTR [ebp-0x4c20556a],ecx
  42d177:	and    esi,DWORD PTR [eax+0x4e23cbec]
  42d17d:	test   dh,dl
  42d17f:	cmovs  edi,DWORD PTR [ebx+esi*4-0x3]
  42d184:	push   0x62
  42d186:	fdivrp st(6),st
  42d188:	shl    cl,0x15
  42d18b:	push   ds
  42d18c:	mov    ebx,0x5d88b3fa
  42d191:	xchg   esp,eax
  42d192:	ins    BYTE PTR es:[edi],dx
  42d193:	mov    bl,BYTE PTR [edx+ecx*8-0x43]
  42d197:	lock (bad) 
  42d199:	retf   
  42d19a:	cmp    DWORD PTR [esi+0x2cd4e37e],ebp
  42d1a0:	or     ebx,0xffffffa2
  42d1a3:	cmp    BYTE PTR [ebx],bl
  42d1a5:	arpl   bx,dx
  42d1a7:	pop    esp
  42d1a8:	loopne 0x42d1aa
  42d1aa:	push   ebx
  42d1ab:	jbe    0x42d140
  42d1ad:	and    ah,BYTE PTR [eax-0x3cd5a836]
  42d1b3:	ins    BYTE PTR es:[edi],dx
  42d1b4:	add    dh,BYTE PTR [ebx-0x20]
  42d1b7:	cmp    DWORD PTR ds:0xcb6cead9,0xffffff80
  42d1be:	les    ecx,FWORD PTR [edx-0x57]
  42d1c1:	mov    edi,0xbfdd3b81
  42d1c6:	dec    ebx
  42d1c7:	xchg   ebx,eax
  42d1c8:	imul   ebx,DWORD PTR [ebx+edx*2],0x405b5c4d
  42d1cf:	sub    al,0xb0
  42d1d1:	xlat   BYTE PTR ds:[ebx]
  42d1d2:	jecxz  0x42d1e8
  42d1d4:	lods   al,BYTE PTR ds:[esi]
  42d1d5:	push   eax
  42d1d6:	dec    ebp
  42d1d7:	retf   0x53bc
  42d1da:	adc    ch,BYTE PTR [edx+0x1d]
  42d1dd:	inc    esp
  42d1de:	mov    ds:0xde1aa166,eax
  42d1e3:	int3   
  42d1e4:	add    eax,0xb95dda27
  42d1e9:	in     al,dx
  42d1ea:	sub    BYTE PTR [esi-0x12],dl
  42d1ed:	or     eax,0xdbaaa9f0
  42d1f2:	js     0x42d1ec
  42d1f4:	cs ins BYTE PTR es:[edi],dx
  42d1f6:	and    eax,0x1cebef37
  42d1fb:	sbb    dl,BYTE PTR [ecx-0x7d]
  42d1fe:	ret    
  42d1ff:	jmp    0x42d1e1
  42d201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d202:	in     al,dx
  42d203:	mov    dh,0xae
  42d205:	call   0xc85e:0xc9185aee
  42d20c:	mov    DWORD PTR [edi],ecx
  42d20e:	fsub   QWORD PTR [esi-0x227efae5]
  42d214:	adc    dh,BYTE PTR [ebx]
  42d216:	ds popf 
  42d218:	push   esp
  42d219:	addr16 in eax,dx
  42d21b:	sub    ebp,ebx
  42d21d:	inc    eax
  42d21e:	retf   
  42d21f:	push   cs
  42d220:	test   BYTE PTR [ecx+0x44],cl
  42d223:	push   cs
  42d224:	imul   ebx,esi,0x8
  42d227:	xor    BYTE PTR [ebp+0x7bfbcace],bh
  42d22d:	call   0xf5a1:0x1b72be4d
  42d234:	cmp    edi,edx
  42d236:	retf   0x48f2
  42d239:	xor    eax,0xc57fbeb5
  42d23e:	lods   eax,DWORD PTR ds:[esi]
  42d23f:	fbld   TBYTE PTR [esi+0x0]
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	cmp    eax,0x6b8a375c
  42d2c5:	fld    QWORD PTR [ecx]
  42d2c7:	add    ch,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [edx+edx*1],ch
  42d2ce:	cmp    DWORD PTR [ecx+0x775afde8],0xffffff95
  42d2d5:	pop    ss
  42d2d6:	out    0x22,al
  42d2d8:	sub    dh,BYTE PTR [edx+0x4c78f0aa]
  42d2de:	or     DWORD PTR [ecx+edi*2],esi
  42d2e1:	mov    bl,0x21
  42d2e3:	adc    eax,eax
  42d2e5:	push   cs
  42d2e6:	lock out dx,al
  42d2e8:	and    al,0x8c
  42d2ea:	hlt    
  42d2eb:	shr    BYTE PTR [edx-0x11f38416],0xc7
  42d2f2:	int3   
  42d2f3:	dec    edx
  42d2f4:	fld    TBYTE PTR [edi-0x26]
  42d2f7:	popa   
  42d2f8:	mov    esp,0xabfc050d
  42d2fd:	in     al,0xb2
  42d2ff:	popa   
  42d300:	aad    0x32
  42d302:	sti    
  42d303:	mov    eax,0x37bedb8
  42d308:	xchg   ecx,eax
  42d309:	inc    eax
  42d30a:	inc    esi
  42d30b:	rol    DWORD PTR [bx+si-0x24eb],1
  42d310:	pop    ecx
  42d311:	jne    0x42d322
  42d313:	inc    eax
  42d314:	sbb    al,0x48
  42d316:	inc    DWORD PTR [ecx+0x5b]
  42d319:	xlat   BYTE PTR ds:[ebx]
  42d31a:	adc    bl,BYTE PTR [ecx+0x73676400]
  42d320:	(bad)  
  42d321:	mov    ds:0xa25117b8,eax
  42d326:	iret   
  42d327:	push   0xffffff9d
  42d329:	lods   eax,DWORD PTR ds:[esi]
  42d32a:	(bad)  
  42d32b:	mov    bh,ah
  42d32d:	(bad)  
  42d32e:	jg     0x42d365
  42d330:	js     0x42d2f6
  42d332:	xor    al,dl
  42d334:	into   
  42d335:	das    
  42d336:	retf   0x2114
  42d339:	not    BYTE PTR [edi+ebp*1]
  42d33c:	push   edi
  42d33d:	mov    bl,0x89
  42d33f:	xor    eax,0xe05af20b
  42d344:	cmc    
  42d345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d346:	fs jmp 0xff65:0xb9474d20
  42d34e:	pushf  
  42d34f:	xchg   DWORD PTR [edx+0x401202ef],esi
  42d355:	popa   
  42d356:	xchg   esi,eax
  42d357:	mov    dl,BYTE PTR [esi]
  42d359:	ja     0x42d3a2
  42d35b:	ja     0x42d2e0
  42d35d:	xchg   esi,eax
  42d35e:	push   esi
  42d35f:	cmc    
  42d360:	outs   dx,DWORD PTR ds:[esi]
  42d361:	sub    DWORD PTR [ecx-0x1f1cb9d9],ebp
  42d367:	xchg   ebx,eax
  42d368:	or     eax,0xfded8279
  42d36d:	dec    edx
  42d36e:	ret    
  42d36f:	fistp  DWORD PTR [edx-0x3da25ddc]
  42d375:	popa   
  42d376:	sbb    dl,BYTE PTR [ebx]
  42d378:	(bad)  
  42d379:	and    DWORD PTR [esi-0x22],eax
  42d37c:	mov    ebx,0x5ab8e193
  42d381:	mov    edi,0xc2818234
  42d386:	inc    BYTE PTR [ebx-0x61640a64]
  42d38c:	sub    eax,DWORD PTR [edi-0xc]
  42d38f:	stos   DWORD PTR es:[edi],eax
  42d390:	pusha  
  42d391:	push   esi
  42d392:	adc    al,0x2
  42d394:	pop    edi
  42d395:	pop    ebp
  42d396:	lock jmp 0xafb2:0x2b9de578
  42d39e:	dec    esi
  42d39f:	add    ch,al
  42d3a1:	xchg   edi,eax
  42d3a2:	cmp    BYTE PTR [edx+0x21],bh
  42d3a5:	fstp   DWORD PTR [esi+0x1a86bddf]
  42d3ab:	cmp    DWORD PTR [eax+eiz*1],edi
  42d3ae:	mov    ecx,0x56eee9ac
  42d3b3:	or     DWORD PTR [edi+0xbe85a41],esp
  42d3b9:	push   ecx
  42d3ba:	loop   0x42d3e3
  42d3bc:	ss (bad) 
  42d3be:	(bad)  
  42d3c0:	dec    ecx
	...
  42d431:	add    BYTE PTR [eax],al
  42d433:	add    ah,ch
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0x5e510781
  42d442:	clc    
  42d443:	cmp    eax,0x1de60
  42d448:	cmc    
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [esi],dl
  42d44d:	cmp    dh,BYTE PTR [esi]
  42d44f:	lock push cs
  42d451:	cmp    al,0xb4
  42d453:	pusha  
  42d454:	mov    ebx,0xb33e1334
  42d459:	dec    ecx
  42d45a:	mov    ds:0xe9aa6711,al
  42d45f:	and    DWORD PTR [ecx+0x7c],ebp
  42d462:	mov    edi,0xc67b5496
  42d467:	cmp    eax,0x32613d19
  42d46c:	jp     0x42d467
  42d46e:	into   
  42d46f:	pushf  
  42d470:	scas   al,BYTE PTR es:[edi]
  42d471:	push   ecx
  42d472:	dec    ebp
  42d473:	or     ebp,DWORD PTR [ebp-0x64d7c451]
  42d479:	test   eax,0xfaa8a472
  42d47e:	mov    eax,0x8243b7da
  42d483:	inc    edx
  42d484:	mov    ebp,0x1194ed1d
  42d489:	dec    edi
  42d48a:	setne  BYTE PTR [edi]
  42d48d:	adc    eax,0xb55d676
  42d492:	xor    eax,0xc98d6d51
  42d497:	fxch   st(5)
  42d499:	into   
  42d49a:	jle    0x42d4db
  42d49c:	push   es
  42d49d:	jge    0x42d472
  42d49f:	repz jmp 0x7f84:0xfec95208
  42d4a7:	fidivr WORD PTR ds:0x3d8b1956
  42d4ad:	cmp    eax,0x4134e96b
  42d4b2:	dec    esi
  42d4b3:	xchg   esi,eax
  42d4b4:	sbb    DWORD PTR [ebx-0x3c7bb5ec],edi
  42d4ba:	inc    esp
  42d4bb:	sar    edi,1
  42d4bd:	sbb    eax,ebx
  42d4bf:	pop    eax
  42d4c0:	fnsave [edi-0x41]
  42d4c3:	xchg   DWORD PTR [eax-0x48a19652],edx
  42d4c9:	xchg   ebp,eax
  42d4ca:	jle    0x42d509
  42d4cc:	cmp    DWORD PTR [edx+0x2f73d0b5],esp
  42d4d2:	call   FWORD PTR [edi]
  42d4d4:	scas   eax,DWORD PTR es:[edi]
  42d4d5:	sti    
  42d4d6:	dec    ebx
  42d4d7:	dec    esp
  42d4d8:	and    al,0xce
  42d4da:	and    dl,0xb5
  42d4dd:	rcl    BYTE PTR [ecx+ecx*4],0xab
  42d4e1:	ficom  WORD PTR [edi-0x57]
  42d4e4:	(bad)  
  42d4e6:	popf   
  42d4e7:	test   eax,0x9e1a3708
  42d4ec:	or     al,0xf
  42d4ee:	test   BYTE PTR [esp+esi*8-0x341e40fd],dl
  42d4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4f6:	div    BYTE PTR [ebx+0x1188aa50]
  42d4fc:	push   cs
  42d4fd:	jns    0x42d53d
  42d4ff:	popf   
  42d500:	repz and BYTE PTR [edi+0x79a75ea2],ch
  42d507:	(bad)  
  42d508:	mov    edi,0x4fee61a2
  42d50d:	in     eax,dx
  42d50e:	and    DWORD PTR ds:0x74fddb84,0x764a34ae
  42d518:	push   ecx
  42d519:	inc    edi
  42d51a:	sub    esi,ebx
  42d51c:	sbb    al,0x7d
  42d51e:	sub    bl,BYTE PTR [eax+0xad7f07c]
  42d524:	outs   dx,BYTE PTR ds:[esi]
  42d525:	into   
  42d526:	aam    0x95
  42d528:	test   BYTE PTR [ebx+0x4b74eea1],al
  42d52e:	adc    ecx,DWORD PTR [esi-0x3b]
  42d531:	mov    fs,ebx
  42d533:	jmp    0x42d5a2
  42d535:	adc    ebp,DWORD PTR es:[edx+0x61]
  42d539:	cmc    
  42d53a:	in     eax,0x8
  42d53c:	jne    0x42d4cb
  42d53e:	push   eax
  42d53f:	scas   al,BYTE PTR es:[edi]
  42d540:	in     eax,0x0
	...
  42d5b2:	add    BYTE PTR [eax],al
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	es mov ecx,ecx
  42d5c3:	mov    WORD PTR [ebp-0x21],ss
  42d5c6:	add    DWORD PTR [eax],eax
  42d5c8:	cmc    
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [ebx-0x1],bl
  42d5ce:	test   al,0x49
  42d5d0:	adc    DWORD PTR [edx-0x7fad4faf],0xffffffc5
  42d5d7:	xchg   ebp,eax
  42d5d8:	adc    esi,DWORD PTR ds:0x2a64b4f5
  42d5de:	pop    ecx
  42d5df:	mov    bh,0x8e
  42d5e1:	out    dx,al
  42d5e2:	xchg   ebp,eax
  42d5e3:	xchg   edx,eax
  42d5e4:	aaa    
  42d5e5:	add    al,dh
  42d5e7:	or     ch,ch
  42d5e9:	push   ebp
  42d5ea:	sub    al,0xab
  42d5ec:	fist   DWORD PTR [edx]
  42d5ee:	or     esp,DWORD PTR [esi+0x10]
  42d5f1:	call   0x593dedc8
  42d5f6:	nop
  42d5f7:	jl     0x42d5a3
  42d5f9:	sbb    esi,edx
  42d5fb:	pop    esp
  42d5fc:	(bad)  
  42d5fd:	fild   WORD PTR [edi]
  42d5ff:	sbb    eax,0x9d166a83
  42d604:	rcr    esp,0x49
  42d607:	or     BYTE PTR [eax-0xdf7f0be],ch
  42d60d:	jmp    0x483a:0xdc9ddf13
  42d614:	sub    edi,DWORD PTR [edi+0x34]
  42d617:	mov    dl,0x5
  42d619:	inc    edx
  42d61a:	add    ebp,DWORD PTR [ecx]
  42d61c:	add    al,0x71
  42d61e:	mov    edx,0x263b9d9d
  42d623:	or     ah,bl
  42d625:	inc    esi
  42d626:	and    BYTE PTR [eax-0x22bcbe84],dl
  42d62c:	les    esp,FWORD PTR [esi]
  42d62e:	(bad)  
  42d630:	xor    DWORD PTR [ebx+edi*4+0x1e],ebp
  42d634:	xchg   esp,eax
  42d635:	dec    esi
  42d636:	cmc    
  42d637:	lock cli 
  42d639:	and    ebx,DWORD PTR [edi+0x29293129]
  42d63f:	mov    gs,WORD PTR [bp-0x63]
  42d643:	inc    esi
  42d644:	fldcw  WORD PTR [edx+edi*4-0x6a]
  42d648:	inc    ebp
  42d649:	adc    cl,al
  42d64b:	gs sbb ecx,eax
  42d64e:	pop    esp
  42d64f:	dec    eax
  42d650:	sbb    cl,bl
  42d652:	cmp    bh,ch
  42d654:	xor    eax,0x3ecc8140
  42d659:	mov    al,dh
  42d65b:	scas   al,BYTE PTR es:[edi]
  42d65c:	jno    0x42d697
  42d65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d65f:	sahf   
  42d660:	test   BYTE PTR [edx-0x20819bdd],ch
  42d666:	(bad)  
  42d667:	repz test eax,0x2bbf99dc
  42d66d:	hlt    
  42d66e:	fimul  DWORD PTR [eax+esi*4]
  42d671:	adc    eax,0x82036d57
  42d676:	shl    DWORD PTR [edi],cl
  42d678:	push   es
  42d679:	mov    ch,0x7d
  42d67b:	sbb    esp,edx
  42d67d:	aad    0xf
  42d67f:	xchg   esp,eax
  42d680:	mov    edi,0x53958c78
  42d685:	push   ss
  42d686:	aad    0x66
  42d688:	and    dh,BYTE PTR [edx]
  42d68a:	mov    cl,0x4
  42d68c:	lea    edx,[eax+0x6f]
  42d68f:	and    al,0x24
  42d691:	sbb    ecx,DWORD PTR [eax+ecx*2-0x4b]
  42d695:	push   ds
  42d696:	into   
  42d697:	fcomp  st(7)
  42d699:	or     edi,DWORD PTR [ebx+0x6c]
  42d69c:	mov    edx,0x16aed9a7
  42d6a1:	int3   
  42d6a2:	pop    es
  42d6a3:	loope  0x42d692
  42d6a5:	sar    BYTE PTR [eax+0x29ad7f41],1
  42d6ab:	pop    ebx
  42d6ac:	xchg   ecx,eax
  42d6ad:	scas   eax,DWORD PTR es:[edi]
  42d6ae:	jl     0x42d675
  42d6b0:	fst    QWORD PTR [esi]
  42d6b2:	xchg   esi,eax
  42d6b3:	cdq    
  42d6b4:	dec    ebx
  42d6b5:	out    0xdc,eax
  42d6b7:	jp     0x42d6cf
  42d6b9:	or     dh,BYTE PTR [eax-0x5c]
  42d6bc:	push   esp
  42d6bd:	out    0xe3,eax
  42d6bf:	or     DWORD PTR [ebp+0x0],ebp
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	sub    eax,0x4aeebd53
  42d745:	loopne 0x42d748
  42d747:	add    ch,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [ecx],cl
  42d74d:	retf   
  42d74e:	neg    bl
  42d750:	test   DWORD PTR [ecx+0x1b],0x14bb3c5b
  42d757:	fxch   st(7)
  42d759:	(bad)  
  42d75a:	mov    bh,0x92
  42d75c:	pop    eax
  42d75d:	dec    eax
  42d75e:	inc    esi
  42d75f:	pop    es
  42d760:	mov    ebx,0xcaee7f22
  42d765:	push   esi
  42d766:	sbb    esi,DWORD PTR [ebx+0x4a053c4c]
  42d76c:	xchg   esi,eax
  42d76d:	int3   
  42d76e:	add    bl,BYTE PTR [edi-0x5682d3dc]
  42d774:	jp     0x42d744
  42d776:	add    ebp,DWORD PTR [esi]
  42d778:	sahf   
  42d779:	in     eax,0x1c
  42d77b:	(bad)  
  42d77c:	sti    
  42d77d:	aas    
  42d77e:	pop    eax
  42d77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d780:	adc    al,0x2
  42d782:	xchg   ch,dh
  42d784:	cdq    
  42d785:	push   0x588aa0c4
  42d78a:	cmp    DWORD PTR [eax-0x51af422d],edx
  42d790:	mov    edx,0xa035dd1c
  42d795:	fldcw  WORD PTR [edx+0x6f]
  42d798:	inc    ecx
  42d799:	popa   
  42d79a:	pop    edi
  42d79b:	das    
  42d79c:	loopne 0x42d7f5
  42d79e:	int    0xb5
  42d7a0:	sbb    eax,0x1f36b92e
  42d7a5:	stos   BYTE PTR es:[edi],al
  42d7a6:	pop    ecx
  42d7a7:	(bad)  
  42d7a8:	stos   BYTE PTR es:[edi],al
  42d7a9:	xor    al,0x14
  42d7ab:	add    BYTE PTR [edx],ch
  42d7ad:	inc    ebx
  42d7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7af:	inc    DWORD PTR [esi+0x65]
  42d7b2:	repz icebp 
  42d7b4:	xor    ebp,DWORD PTR [esi+0x23ee16c0]
  42d7ba:	jns    0x42d7da
  42d7bc:	jbe    0x42d7c2
  42d7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7bf:	scas   al,BYTE PTR es:[edi]
  42d7c0:	inc    edi
  42d7c1:	and    ch,BYTE PTR [edx+0x52]
  42d7c4:	cmp    eax,0x1f1984ed
  42d7c9:	pop    ss
  42d7ca:	out    0xea,al
  42d7cc:	or     ch,BYTE PTR [edi+0x2a2c79a8]
  42d7d2:	imul   ebx,edi,0x73f3d0fb
  42d7d8:	xor    cl,BYTE PTR [ebx+0x37]
  42d7db:	push   0x1
  42d7dd:	jle    0x42d828
  42d7df:	(bad)  [eax]
  42d7e1:	mov    dh,0x49
  42d7e3:	dec    ebp
  42d7e4:	jns    0x42d7da
  42d7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7e7:	call   0x3c9853fd
  42d7ec:	push   esp
  42d7ed:	jbe    0x42d86b
  42d7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7f0:	aas    
  42d7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7f2:	(bad)  
  42d7f3:	xchg   ebp,eax
  42d7f4:	jecxz  0x42d83a
  42d7f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7f7:	mov    bh,0x24
  42d7f9:	cmp    al,cl
  42d7fb:	xchg   BYTE PTR [esi],dh
  42d7fd:	dec    ebp
  42d7fe:	mov    dh,0x2f
  42d800:	fnsave [edx-0x7]
  42d803:	mov    ds:0x203e118f,eax
  42d808:	jmp    0x42d848
  42d80a:	fbstp  TBYTE PTR [ecx-0x4]
  42d80d:	xchg   ebp,eax
  42d80e:	(bad)  
  42d80f:	rcl    esi,1
  42d811:	stos   DWORD PTR es:[edi],eax
  42d812:	retf   
  42d813:	out    dx,al
  42d814:	xlat   BYTE PTR ds:[ebx]
  42d815:	mov    ?,ebp
  42d817:	and    ch,al
  42d819:	and    al,0xaa
  42d81b:	push   0xb4c250
  42d820:	lods   al,BYTE PTR ds:[esi]
  42d821:	sbb    BYTE PTR [edi-0x25],0xfa
  42d825:	xor    DWORD PTR [eax+0x6e],esi
  42d828:	dec    edi
  42d829:	(bad)  
  42d82a:	fsub   QWORD PTR [esi-0x65]
  42d82d:	div    DWORD PTR [edx-0xd]
  42d830:	outs   dx,DWORD PTR ds:[esi]
  42d831:	mov    gs,WORD PTR [edi-0x4b50d9c5]
  42d837:	mov    esi,0x91572a92
  42d83c:	pop    es
  42d83d:	out    0x18,al
  42d83f:	jg     0x42d874
	...
  42d8b1:	add    BYTE PTR [eax],al
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x1edcc254
  42d8c1:	call   0xe1822f01
  42d8c6:	add    DWORD PTR [eax],eax
  42d8c8:	cmc    
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [ecx],al
  42d8cd:	stos   DWORD PTR es:[edi],eax
  42d8ce:	pushf  
  42d8cf:	lea    ecx,[ebx+0x7c]
  42d8d2:	pop    eax
  42d8d3:	mov    eax,ds:0xcffeaf32
  42d8d8:	pop    esp
  42d8d9:	xor    esp,DWORD PTR [esi]
  42d8db:	adc    al,0xf8
  42d8dd:	inc    ecx
  42d8de:	or     eax,0x43390ca0
  42d8e3:	inc    ecx
  42d8e4:	je     0x42d962
  42d8e6:	js     0x42d945
  42d8e8:	(bad)  
  42d8e9:	addr16 push ss
  42d8eb:	push   ds
  42d8ec:	pop    ds
  42d8ed:	mov    BYTE PTR [ebp+0x68],cl
  42d8f0:	mov    ds:0xac4a2592,eax
  42d8f5:	mov    ?,WORD PTR [ecx]
  42d8f7:	fisttp QWORD PTR [esi-0x6]
  42d8fa:	cmc    
  42d8fb:	fmul   QWORD PTR [edx]
  42d8fd:	(bad)
  42d900:	push   es
  42d901:	xchg   BYTE PTR [esi-0x522f2c0],dh
  42d907:	enter  0x3565,0xa8
  42d90b:	pop    edx
  42d90c:	popa   
  42d90d:	(bad)  
  42d90e:	sub    ecx,DWORD PTR [eax+0x1b9ee35]
  42d914:	repz push edx
  42d916:	mov    edi,0x4cb18ab5
  42d91b:	retf   
  42d91c:	(bad)  [eax]
  42d91e:	cmp    DWORD PTR [ecx+0x2db12e3e],ebp
  42d924:	rol    BYTE PTR [eax],1
  42d926:	je     0x42d979
  42d928:	and    al,0xf4
  42d92a:	sub    BYTE PTR [edx],0x39
  42d92d:	das    
  42d92e:	or     eax,DWORD PTR [ecx]
  42d930:	loope  0x42d9a0
  42d932:	and    dl,BYTE PTR [edi+ecx*1+0x58]
  42d936:	fcom   QWORD PTR [esp+edx*2]
  42d939:	arpl   WORD PTR [eax],bx
  42d93b:	out    0xe7,al
  42d93d:	mov    esi,0x91c5d166
  42d942:	icebp  
  42d943:	jle    0x42d990
  42d945:	xchg   esi,eax
  42d946:	xchg   edi,eax
  42d947:	(bad)  
  42d948:	sti    
  42d949:	or     edi,DWORD PTR [edi-0x22]
  42d94c:	repnz cmp dl,dl
  42d94f:	adc    dh,ah
  42d951:	sub    BYTE PTR [ebx+0x4ceed673],dl
  42d957:	cmp    DWORD PTR ds:0x241851ce,0x569be360
  42d961:	xchg   ebp,eax
  42d962:	xchg   esp,eax
  42d963:	adc    DWORD PTR [edx+ecx*2],esi
  42d966:	aaa    
  42d967:	es (bad) 
  42d969:	iret   
  42d96a:	adc    al,0xd3
  42d96c:	add    DWORD PTR [ebx],0x2
  42d96f:	sti    
  42d970:	add    ah,bl
  42d972:	lds    esi,FWORD PTR [ebx+0x33]
  42d975:	test   BYTE PTR ds:0xdde0aec8,ch
  42d97b:	lea    esi,[eax]
  42d97d:	and    ebp,DWORD PTR [eax+0x795a9a2e]
  42d983:	jge    0x42d9e0
  42d985:	(bad)  
  42d987:	pop    edx
  42d988:	stos   DWORD PTR es:[edi],eax
  42d989:	aas    
  42d98a:	popf   
  42d98b:	out    0xe5,eax
  42d98d:	mov    edx,0xc0872d2d
  42d992:	inc    esp
  42d993:	outs   dx,BYTE PTR ds:[esi]
  42d994:	and    eax,0xbc38d5d9
  42d999:	jmp    0x6e290e56
  42d99e:	comiss xmm0,DWORD PTR [eax+0x6322ed7f]
  42d9a5:	cmp    al,0xbf
  42d9a7:	mov    bl,0x2d
  42d9a9:	adc    ch,dh
  42d9ab:	lock xchg esp,eax
  42d9ad:	push   ebp
  42d9ae:	and    edi,0x18
  42d9b1:	rol    esi,1
  42d9b3:	and    eax,DWORD PTR [esp+esi*4]
  42d9b6:	pop    esi
  42d9b7:	mov    eax,ds:0xc32074cb
  42d9bc:	push   edi
  42d9bd:	xor    bl,BYTE PTR [edi+0x48]
  42d9c0:	ret    
	...
  42da31:	add    BYTE PTR [eax],al
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	pop    DWORD PTR [ecx]
  42da41:	imul   bx,WORD PTR [ebp+0x34],0x1e2
  42da47:	add    ch,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [edi+0xe],cl
  42da4e:	mov    DWORD PTR [edi],edi
  42da50:	sub    esi,esp
  42da52:	(bad)  
  42da53:	jns    0x42da41
  42da55:	sub    al,0x96
  42da57:	jb     0x42da9f
  42da59:	sahf   
  42da5a:	(bad)  
  42da5b:	sub    eax,0xf49ef957
  42da60:	mov    eax,ds:0x34f06267
  42da65:	fst    QWORD PTR [eax+0x6a]
  42da68:	ss sub esp,edi
  42da6b:	cmp    ebx,DWORD PTR [edi-0x1a23ac19]
  42da71:	and    eax,0x6a180128
  42da76:	lods   eax,DWORD PTR ds:[esi]
  42da77:	and    cl,0x6b
  42da7a:	daa    
  42da7b:	mov    esi,0xce778f8e
  42da80:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42da82:	test   DWORD PTR [ebp-0x26],ecx
  42da85:	jp     0x42da81
  42da87:	push   edx
  42da88:	iret   
  42da89:	dec    edx
  42da8a:	pop    ebp
  42da8b:	ror    DWORD PTR [ecx+0x5de0c66a],1
  42da91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da92:	cmp    ebx,DWORD PTR [edi+0x65a30dde]
  42da98:	xor    al,0x74
  42da9a:	sbb    eax,0x55c7287e
  42da9f:	add    DWORD PTR [esi+0x16],edx
  42daa2:	aad    0xd5
  42daa4:	call   0x710e:0xd2338be7
  42daab:	inc    ecx
  42daac:	mov    esi,0x85576940
  42dab1:	jne    0x42dad2
  42dab3:	mov    dh,0xac
  42dab5:	adc    ebx,edi
  42dab7:	mov    al,0xdf
  42dab9:	sar    BYTE PTR [ebx],cl
  42dabb:	jle    0x42daf4
  42dabd:	pop    edx
  42dabe:	cli    
  42dabf:	xor    DWORD PTR ds:0xb60df0ed,eax
  42dac5:	add    dh,BYTE PTR [edi+0x13]
  42dac8:	cmp    al,0x34
  42daca:	in     al,0x2e
  42dacc:	jg     0x42da83
  42dace:	jbe    0x42daab
  42dad0:	cld    
  42dad1:	or     DWORD PTR [eax-0x14f796c6],eax
  42dad7:	aaa    
  42dad8:	lock and eax,DWORD PTR [eax]
  42dadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dadc:	jge    0x42db27
  42dade:	neg    DWORD PTR [esi-0x2a]
  42dae1:	sub    BYTE PTR [edi],0x26
  42dae4:	sbb    BYTE PTR [ebp-0xc201479],bl
  42daea:	add    al,0x87
  42daec:	(bad)  
  42daed:	mov    ebp,0xc26c9b7f
  42daf2:	push   ds
  42daf3:	push   0xc
  42daf5:	lea    esi,[ebx-0x11]
  42daf8:	ds push ds
  42dafa:	inc    ebp
  42dafb:	test   eax,0xc1d5fdab
  42db00:	aad    0xee
  42db02:	loopne 0x42db1c
  42db04:	div    cl
  42db06:	dec    esp
  42db07:	imul   ecx,DWORD PTR ds:0x148151ec,0xfffffffd
  42db0e:	sahf   
  42db0f:	mov    bh,0xef
  42db11:	sub    al,0x6a
  42db13:	cld    
  42db14:	push   ebp
  42db15:	sub    esp,DWORD PTR [edx-0x2e914f4f]
  42db1b:	ja     0x42db41
  42db1d:	cmp    ebx,DWORD PTR [ebx+0xa]
  42db20:	popa   
  42db21:	ficom  WORD PTR [ebp-0x72]
  42db24:	iret   
  42db25:	jg     0x42daea
  42db27:	jb     0x42dada
  42db29:	rcr    dl,1
  42db2b:	and    DWORD PTR [esi],edx
  42db2d:	dec    edx
  42db2e:	mov    WORD PTR ds:0x8c927189,gs
  42db35:	or     BYTE PTR [edx-0x7c871d9],ch
  42db3b:	mov    al,ds:0x35f47490
  42db40:	loop   0x42db42
	...
  42dbb2:	add    BYTE PTR [eax],al
  42dbb4:	jg     0x42dbb8
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xf13afb37,al
  42dbc3:	mov    ecx,0x1e329
  42dbc8:	cmc    
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    ah,bl
  42dbcd:	inc    esi
  42dbce:	bound  edi,QWORD PTR [eax+0x3]
  42dbd1:	retf   
  42dbd2:	(bad)  
  42dbd3:	sbb    DWORD PTR [ecx+0xbeb7f14],edi
  42dbd9:	xchg   esp,eax
  42dbda:	push   es
  42dbdb:	pop    edx
  42dbdc:	popf   
  42dbdd:	pop    ebx
  42dbde:	(bad)  
  42dbdf:	test   al,0xa9
  42dbe1:	not    BYTE PTR [edi-0x6602e3e1]
  42dbe7:	outs   dx,BYTE PTR ds:[esi]
  42dbe8:	aad    0x11
  42dbea:	outs   dx,BYTE PTR ds:[esi]
  42dbeb:	cmp    BYTE PTR ds:0xc4de9156,0x36
  42dbf2:	xchg   esi,eax
  42dbf3:	sbb    cl,BYTE PTR [edi-0x58df7df0]
  42dbf9:	jno    0x42dbac
  42dbfb:	sub    BYTE PTR [edi],al
  42dbfd:	or     dl,0x7a
  42dc00:	fs and eax,0x4ee258a2
  42dc06:	mov    edi,0x7e9f61be
  42dc0b:	sbb    eax,0x56f5fb35
  42dc10:	cmp    BYTE PTR [esi],bl
  42dc12:	cmp    al,0x2f
  42dc14:	sub    BYTE PTR [esi+0x662ae748],bl
  42dc1a:	out    0xdc,eax
  42dc1c:	push   ds
  42dc1d:	into   
  42dc1e:	out    dx,al
  42dc1f:	mov    ?,WORD PTR [ebx-0x5637c0d8]
  42dc25:	xchg   BYTE PTR [esi*1-0x18358a07],bh
  42dc2c:	inc    esp
  42dc2d:	pop    edi
  42dc2e:	ins    DWORD PTR es:[edi],dx
  42dc2f:	or     eax,esp
  42dc31:	or     al,0xab
  42dc33:	mov    cl,0xc6
  42dc35:	xchg   edi,eax
  42dc36:	sahf   
  42dc37:	ffreep st(4)
  42dc39:	in     eax,dx
  42dc3a:	xor    BYTE PTR [eax-0x43],0x3d
  42dc3e:	push   ebx
  42dc3f:	stos   BYTE PTR es:[edi],al
  42dc40:	cmp    DWORD PTR [ebp+0x73],ebp
  42dc43:	scas   al,BYTE PTR es:[edi]
  42dc44:	in     al,dx
  42dc45:	sub    eax,0xb6081827
  42dc4a:	jmp    0xf99c:0xd5e377a
  42dc51:	cmp    edi,esi
  42dc53:	add    al,0xd8
  42dc55:	mov    ds:0x6ace910f,eax
  42dc5a:	push   ss
  42dc5b:	aas    
  42dc5c:	jle    0x42dbe0
  42dc5e:	shl    ah,0x28
  42dc61:	imul   edx,DWORD PTR [ebp-0x7dae7524],0x74320eac
  42dc6b:	jns    0x42dcb3
  42dc6d:	icebp  
  42dc6e:	pop    esp
  42dc6f:	mov    ecx,0x1a75571
  42dc74:	cwde   
  42dc75:	jo     0x42dc6d
  42dc77:	adc    ah,bh
  42dc79:	sahf   
  42dc7a:	js     0x42dcbd
  42dc7c:	mov    ch,0xda
  42dc7e:	pop    edx
  42dc7f:	imul   edx,DWORD PTR [eax-0x5ca7b20],0xa680ca42
  42dc89:	inc    edi
  42dc8a:	add    BYTE PTR [ecx-0x1],0x92
  42dc8e:	std    
  42dc8f:	sbb    ecx,DWORD PTR [esi]
  42dc91:	mov    esp,0xe131be42
  42dc96:	cs mov cl,0x9a
  42dc99:	retf   
  42dc9a:	test   DWORD PTR [ebx+0x48],0x620cbbc4
  42dca1:	popf   
  42dca2:	fdivr  DWORD PTR es:[edi+0x7a7e471e]
  42dca9:	retf   0x7ad9
  42dcac:	out    dx,eax
  42dcad:	cli    
  42dcae:	enter  0x35fa,0xf6
  42dcb2:	in     al,0x48
  42dcb4:	in     al,0x2c
  42dcb6:	mov    cl,0xfb
  42dcb8:	ins    BYTE PTR es:[edi],dx
  42dcb9:	imul   eax,edx,0xe0f8e12e
  42dcbf:	jns    0x42dcfb
	...
  42dd31:	add    BYTE PTR [eax],al
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x3b88ec73]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [ecx+0x22],bl
  42dd4e:	inc    esp
  42dd4f:	cli    
  42dd50:	cmp    BYTE PTR [edx+0x1996992e],dl
  42dd56:	cld    
  42dd57:	and    DWORD PTR [ebx+0x52],0xffffff86
  42dd5b:	and    BYTE PTR [eax],ah
  42dd5d:	repz sbb esi,ecx
  42dd60:	fmul   st,st(4)
  42dd62:	mov    es,edx
  42dd64:	cdq    
  42dd65:	adc    dh,BYTE PTR [ecx]
  42dd67:	mov    esp,0xde018bc9
  42dd6c:	mov    ds:0xb9869de6,eax
  42dd71:	sahf   
  42dd72:	pop    edi
  42dd73:	cld    
  42dd74:	pushf  
  42dd75:	adc    BYTE PTR [ecx],0x10
  42dd78:	push   0x56
  42dd7a:	aam    0x83
  42dd7c:	sbb    al,BYTE PTR [eax+0x52]
  42dd7f:	inc    ebp
  42dd80:	dec    esp
  42dd81:	mov    bh,ch
  42dd83:	mov    ds,WORD PTR [ecx]
  42dd85:	inc    esi
  42dd86:	adc    al,0x83
  42dd88:	cmp    esp,DWORD PTR [edx+0x2c]
  42dd8b:	(bad)  
  42dd8c:	cmc    
  42dd8d:	add    dh,BYTE PTR [ebp-0x30]
  42dd90:	sub    eax,0x85594155
  42dd95:	popf   
  42dd96:	pop    ebp
  42dd97:	add    ebp,DWORD PTR [edi+0x1d]
  42dd9a:	fs push cs
  42dd9c:	mov    al,ds:0x66903797
  42dda1:	push   ebp
  42dda2:	xor    eax,0xa34216ea
  42dda7:	repz pop esi
  42dda9:	sbb    al,0x1f
  42ddab:	and    BYTE PTR [ecx+0x6703e4e9],0x7a
  42ddb2:	mov    gs:0x8f36424f,eax
  42ddb8:	outs   dx,BYTE PTR ds:[esi]
  42ddb9:	sub    edi,DWORD PTR [ecx+0x5a]
  42ddbc:	jp     0x42dd53
  42ddbe:	inc    eax
  42ddbf:	dec    ebx
  42ddc0:	pop    esi
  42ddc1:	adc    DWORD PTR [eax+0x2c69a579],ecx
  42ddc7:	outs   dx,BYTE PTR ds:[esi]
  42ddc8:	ins    BYTE PTR es:[edi],dx
  42ddc9:	xlat   BYTE PTR ds:[ebx]
  42ddca:	push   cs
  42ddcb:	sar    dl,1
  42ddcd:	xor    eax,0xa02f7e00
  42ddd2:	inc    edx
  42ddd3:	pop    es
  42ddd4:	cwde   
  42ddd5:	loop   0x42de38
  42ddd7:	pop    eax
  42ddd8:	enter  0x9462,0x32
  42dddc:	push   cs
  42dddd:	js     0x42de0c
  42dddf:	test   DWORD PTR [ebp-0x23204dee],esp
  42dde5:	sub    BYTE PTR [eax+0x644b88e0],dh
  42ddeb:	jg     0x42dd7f
  42dded:	arpl   WORD PTR [ecx+0x61e0d5a9],bp
  42ddf3:	and    ch,dh
  42ddf5:	mov    ah,0x76
  42ddf7:	push   eax
  42ddf8:	lea    esp,[ebp-0x2cb26bf0]
  42ddfe:	xor    al,0x8f
  42de00:	daa    
  42de01:	pop    es
  42de02:	popa   
  42de03:	arpl   WORD PTR [ebx],si
  42de05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de06:	pop    es
  42de07:	dec    edi
  42de08:	pop    ebx
  42de09:	or     ch,ah
  42de0b:	aaa    
  42de0c:	shl    ah,cl
  42de0e:	ret    0x1bbe
  42de11:	and    edi,esi
  42de13:	add    al,0x3
  42de15:	stos   DWORD PTR es:[edi],eax
  42de16:	sub    ebx,DWORD PTR [ecx]
  42de18:	add    al,0x46
  42de1a:	push   ss
  42de1b:	cmp    ebx,DWORD PTR [ebx+eax*8+0xbf434c]
  42de22:	inc    ebx
  42de23:	aas    
  42de24:	push   edx
  42de25:	imul   BYTE PTR [edi+ebx*4-0x236e4417]
  42de2c:	or     DWORD PTR [ebp+esi*4+0x60],edx
  42de30:	pushf  
  42de31:	(bad)  
  42de32:	retf   0x52d
  42de35:	aaa    
  42de36:	pop    eax
  42de37:	neg    eax
  42de39:	mov    ds:0xe3ecae78,al
  42de3e:	and    al,0x56
  42de40:	and    eax,0x0
	...
  42deb1:	add    BYTE PTR [eax],al
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x5ef9d6f4]
  42dec3:	sub    edx,DWORD PTR [ebx]
  42dec5:	in     eax,0x1
  42dec7:	add    ch,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ebx+edx*4],ah
  42dece:	inc    ecx
  42decf:	cmp    dl,BYTE PTR [ecx]
  42ded1:	jecxz  0x42df1b
  42ded3:	and    al,0x0
  42ded5:	mov    BYTE PTR [esi-0x3a],ah
  42ded8:	mov    ebx,0xa008d4d6
  42dedd:	lock nop
  42dedf:	das    
  42dee0:	test   al,0x2e
  42dee2:	pop    ecx
  42dee3:	xor    al,0x33
  42dee5:	mov    bl,0xf7
  42dee7:	aas    
  42dee8:	xchg   ecx,eax
  42dee9:	push   esp
  42deea:	jno    0x42def1
  42deec:	and    bl,BYTE PTR [edx+0x9]
  42deef:	mov    ebp,0x1968c903
  42def4:	inc    eax
  42def5:	pop    ebp
  42def6:	sub    ecx,DWORD PTR [esi-0x4a50c1cd]
  42defc:	pop    eax
  42defd:	cwde   
  42defe:	aad    0x85
  42df00:	fdiv   QWORD PTR [edi+eax*8+0x70]
  42df04:	in     al,dx
  42df05:	mov    WORD PTR [eax-0x77bc0aa8],fs
  42df0b:	test   al,0xca
  42df0d:	ja     0x42dec4
  42df0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df10:	scas   eax,DWORD PTR es:[edi]
  42df11:	je     0x42dec0
  42df13:	retf   0x1f05
  42df16:	add    DWORD PTR [esi-0x3dcf10d3],ebp
  42df1c:	pop    edi
  42df1d:	pusha  
  42df1e:	cwde   
  42df1f:	jmp    0x42df19
  42df21:	daa    
  42df22:	inc    ebp
  42df23:	or     BYTE PTR [ebx-0x6ef05fda],dl
  42df29:	repz cmp edi,DWORD PTR [ecx-0x5c4348dc]
  42df30:	cmp    cl,BYTE PTR [esi]
  42df32:	mov    eax,0x5934f69e
  42df37:	fnstenv [ebx]
  42df39:	or     BYTE PTR [esi-0xb],dh
  42df3c:	mov    edx,0x27a51299
  42df41:	inc    edi
  42df42:	sbb    DWORD PTR [ebp-0x44],eax
  42df45:	div    DWORD PTR [ebp+ebp*4+0x12bccd1]
  42df4c:	push   esp
  42df4d:	mov    ebp,0x885a779e
  42df52:	(bad)  
  42df53:	adc    dh,BYTE PTR gs:[esi+ebp*2]
  42df57:	xchg   edi,eax
  42df58:	add    edi,esp
  42df5a:	rcr    esi,cl
  42df5c:	cmp    DWORD PTR ds:0xd69d7ea8,eax
  42df62:	sub    ecx,esi
  42df64:	push   0xc125100e
  42df69:	jmp    0x42df43
  42df6b:	push   ds
  42df6c:	pop    es
  42df6d:	pop    ds
  42df6e:	bound  esi,QWORD PTR [eax]
  42df70:	lea    edi,[edx-0x2036417a]
  42df76:	arpl   WORD PTR [edx],ax
  42df78:	cdq    
  42df79:	fcom   DWORD PTR ds:0xc7940353
  42df7f:	push   ecx
  42df80:	in     eax,dx
  42df81:	inc    DWORD PTR [ecx]
  42df83:	dec    esp
  42df84:	push   ecx
  42df85:	jbe    0x42dfba
  42df87:	pop    ss
  42df88:	pop    esp
  42df89:	out    dx,eax
  42df8a:	push   ss
  42df8b:	sub    eax,0x56accee2
  42df90:	sar    DWORD PTR [ecx],cl
  42df92:	leave  
  42df93:	repz (bad) 
  42df95:	pusha  
  42df96:	dec    esi
  42df97:	xor    BYTE PTR [edx+0x656c49b8],dh
  42df9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df9e:	stos   DWORD PTR es:[edi],eax
  42df9f:	ins    BYTE PTR es:[edi],dx
  42dfa0:	rcl    DWORD PTR [esp+edi*2-0x53],cl
  42dfa4:	mov    ecx,DWORD PTR [edx-0x2d]
  42dfa7:	xor    al,0x38
  42dfa9:	xor    BYTE PTR ds:0x515b42d8,dh
  42dfaf:	retf   
  42dfb0:	popf   
  42dfb1:	pop    ecx
  42dfb2:	int3   
  42dfb3:	dec    esi
  42dfb4:	jns    0x42e019
  42dfb6:	lea    ecx,[edi-0x5f]
  42dfb9:	cmp    BYTE PTR [eax],al
  42dfbb:	add    eax,0x5d841b74
  42dfc0:	pop    ss
	...
  42e031:	add    BYTE PTR [eax],al
  42e033:	add    BYTE PTR [eax+0x3a],dl
  42e036:	(bad)  
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0x6fd88c1e],0x48
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    BYTE PTR [esi],bh
  42e04d:	mov    bl,0x8c
  42e04f:	mov    ebx,0x587d9dea
  42e054:	nop
  42e055:	and    al,0xc7
  42e057:	fld    DWORD PTR [ebx]
  42e059:	stos   BYTE PTR es:[edi],al
  42e05a:	push   ss
  42e05b:	and    DWORD PTR [ecx],0x6f2be592
  42e061:	or     ebx,DWORD PTR ds:[edi-0x17]
  42e065:	push   esi
  42e066:	je     0x42e03e
  42e068:	xor    edi,DWORD PTR [esi]
  42e06a:	mov    al,0xbb
  42e06c:	and    bh,0xd8
  42e06f:	enter  0xe73,0xdb
  42e073:	dec    edx
  42e074:	ud2    
  42e076:	bound  edi,QWORD PTR [ecx+0x7a8aae7d]
  42e07c:	mov    ebp,DWORD PTR [edi+0x29e8c844]
  42e082:	icebp  
  42e083:	xor    al,0x82
  42e085:	aaa    
  42e086:	dec    esp
  42e087:	fwait
  42e088:	push   cs
  42e089:	jecxz  0x42e039
  42e08b:	dec    esi
  42e08c:	or     DWORD PTR [eax],ebx
  42e08e:	into   
  42e08f:	jg     0x42e058
  42e091:	call   0xf3f09732
  42e096:	add    eax,0x98d6a6d0
  42e09b:	dec    edi
  42e09c:	push   ds
  42e09d:	mov    BYTE PTR [edx+ecx*8+0x5e],bl
  42e0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0a2:	mov    ds:0xa5d159bd,al
  42e0a7:	or     DWORD PTR [esi+edi*8],eax
  42e0aa:	in     al,dx
  42e0ab:	mov    bh,0xb1
  42e0ad:	jbe    0x42e08c
  42e0af:	outs   dx,BYTE PTR ds:[esi]
  42e0b0:	push   cs
  42e0b1:	(bad)  
  42e0b2:	cmp    DWORD PTR [edx],ebp
  42e0b4:	xchg   edi,eax
  42e0b5:	pusha  
  42e0b6:	test   eax,ebp
  42e0b8:	pop    esi
  42e0b9:	push   0xffffff83
  42e0bb:	call   0x1ad0366f
  42e0c0:	or     ebx,0xb949bdae
  42e0c6:	dec    esp
  42e0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0c8:	imul   esi,DWORD PTR [edi],0xffffffc5
  42e0cb:	dec    esp
  42e0cc:	mov    edx,0x7fbc5f0c
  42e0d1:	and    eax,0x8a4524b8
  42e0d6:	xor    al,al
  42e0d8:	push   ecx
  42e0d9:	call   0xb7bccc93
  42e0de:	xchg   BYTE PTR [esi+0x2c],bl
  42e0e1:	div    esi
  42e0e3:	dec    esi
  42e0e4:	sub    al,al
  42e0e6:	ins    DWORD PTR es:[edi],dx
  42e0e7:	push   ss
  42e0e8:	jbe    0x42e0bd
  42e0ea:	data16 sub al,0xee
  42e0ed:	pop    edi
  42e0ee:	sbb    dl,BYTE PTR [ebp+0x2]
  42e0f1:	inc    edx
  42e0f2:	retf   0x46e2
  42e0f5:	(bad)  
  42e0f7:	aas    
  42e0f8:	test   BYTE PTR [edi],ah
  42e0fa:	fnstcw WORD PTR [ebx]
  42e0fc:	in     al,0xd3
  42e0fe:	mov    ds:0x6afad7a5,al
  42e103:	sbb    eax,0x8860f405
  42e108:	inc    ecx
  42e109:	xchg   cl,al
  42e10b:	ror    DWORD PTR [eax],0xff
  42e10e:	fiadd  DWORD PTR [eax+ecx*1+0x67cfb4d7]
  42e115:	addr16 add edi,edx
  42e118:	scas   eax,DWORD PTR es:[edi]
  42e119:	gs stc 
  42e11b:	shr    eax,1
  42e11d:	or     edi,DWORD PTR [esi+edx*8+0x57]
  42e121:	jb     0x42e180
  42e123:	jle    0x42e19b
  42e125:	std    
  42e126:	loope  0x42e0c4
  42e128:	sbb    eax,0x77807f7d
  42e12d:	aam    0xf9
  42e12f:	pushf  
  42e130:	jae    0x42e17d
  42e132:	cmp    al,0x31
  42e134:	mov    ds:0x2b8d2024,eax
  42e139:	dec    ebp
  42e13a:	pop    edx
  42e13b:	xchg   edi,eax
  42e13c:	das    
  42e13d:	dec    edx
  42e13e:	pop    edi
  42e13f:	jo     0x42e126
	...
  42e1b1:	add    BYTE PTR [eax],al
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x34aa9b71
  42e1c3:	das    
  42e1c4:	std    
  42e1c5:	out    0x1,al
  42e1c7:	add    ch,dh
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    BYTE PTR [ebp-0x6f],ch
  42e1ce:	ret    
  42e1cf:	fist   DWORD PTR [ebx]
  42e1d1:	xor    DWORD PTR [esi-0x9],ebx
  42e1d4:	push   ebx
  42e1d5:	or     eax,0xad859041
  42e1da:	pop    esi
  42e1db:	xchg   esi,eax
  42e1dc:	cmp    DWORD PTR [ebp+0x25],ebp
  42e1df:	mov    cl,0xc
  42e1e1:	push   ecx
  42e1e2:	pop    ss
  42e1e3:	and    ah,BYTE PTR [ebx-0x633fe61f]
  42e1e9:	test   DWORD PTR [esi],esp
  42e1eb:	xchg   esi,eax
  42e1ec:	mov    ds:0xd05fd779,al
  42e1f1:	xor    eax,0xd02b2178
  42e1f6:	nop
  42e1f7:	push   edi
  42e1f8:	dec    ecx
  42e1f9:	ret    
  42e1fa:	mov    ecx,0x8f646a08
  42e1ff:	inc    edi
  42e200:	call   0x30bbdd8b
  42e205:	sub    BYTE PTR [ecx],0x57
  42e208:	xchg   ecx,eax
  42e209:	xor    al,0xb3
  42e20b:	ins    BYTE PTR es:[edi],dx
  42e20c:	shl    BYTE PTR [eax-0x39bf3dad],0x84
  42e213:	cmp    edi,ecx
  42e215:	jmp    0x4a71:0xea80ebc2
  42e21c:	daa    
  42e21d:	cmc    
  42e21e:	pop    edi
  42e21f:	push   ebx
  42e220:	push   es
  42e221:	jne    0x42e266
  42e223:	mov    WORD PTR [esi+0x32516d50],?
  42e229:	shl    BYTE PTR [eax-0x16],cl
  42e22c:	sahf   
  42e22d:	loope  0x42e210
  42e22f:	es daa 
  42e231:	mov    dl,0x1b
  42e233:	cmp    BYTE PTR [eax],dl
  42e235:	pop    ds
  42e236:	pop    es
  42e237:	test   al,0xc6
  42e239:	cli    
  42e23a:	bound  eax,QWORD PTR [esi]
  42e23c:	imul   esi,eax,0xffffffa7
  42e23f:	mov    ds:0x66f0a253,eax
  42e244:	out    dx,al
  42e245:	fist   WORD PTR [edx+ecx*8-0x5c7a272a]
  42e24c:	dec    edx
  42e24d:	sbb    BYTE PTR [eax+0x4b41b891],bh
  42e253:	adc    al,0x5e
  42e255:	fcomip st,st(5)
  42e257:	clc    
  42e258:	fdiv   DWORD PTR [esi-0x244fef7f]
  42e25e:	adc    BYTE PTR [esi],al
  42e260:	repz pop ebx
  42e262:	scas   eax,DWORD PTR es:[edi]
  42e263:	cmc    
  42e264:	xor    BYTE PTR [edx+0x124f4a7],bl
  42e26a:	or     eax,0x2dadbfcb
  42e26f:	fdivr  st(0),st
  42e271:	xchg   BYTE PTR [ebx],cl
  42e273:	dec    esp
  42e274:	xchg   esp,eax
  42e275:	push   eax
  42e276:	scas   eax,DWORD PTR es:[edi]
  42e277:	dec    esi
  42e278:	cmc    
  42e279:	and    DWORD PTR [ebx+0x1f],ebp
  42e27c:	push   ss
  42e27d:	loopne 0x42e230
  42e27f:	dec    esp
  42e280:	push   ds
  42e281:	sbb    edi,DWORD PTR [edi+0x5ed0899]
  42e287:	daa    
  42e288:	jge    0x42e275
  42e28a:	pop    esi
  42e28b:	out    0x62,eax
  42e28d:	dec    esi
  42e28e:	sub    DWORD PTR [esi-0x33485428],esi
  42e294:	(bad)  
  42e295:	test   eax,0x3fefee4b
  42e29a:	and    eax,0x58d8606f
  42e29f:	ins    BYTE PTR es:[edi],dx
  42e2a0:	dec    ebx
  42e2a1:	or     eax,0xa425dc07
  42e2a6:	out    0xf2,eax
  42e2a8:	test   BYTE PTR [esi+ecx*2+0x53],ah
  42e2ac:	cwde   
  42e2ad:	dec    edx
  42e2ae:	mov    ds:0xcbf61d73,al
  42e2b3:	out    dx,al
  42e2b4:	arpl   WORD PTR [eax],bx
  42e2b6:	xor    BYTE PTR [ebx-0x3a],cl
  42e2b9:	sbb    BYTE PTR [ecx+ebx*1],dh
  42e2bc:	sbb    eax,0xabad9ea2
	...
  42e331:	add    BYTE PTR [eax],al
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [esi+0x4f],ebp
  42e342:	mov    ebp,0x1e7f2b8
  42e347:	add    ch,dh
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    BYTE PTR [ecx+eax*1+0x38],cl
  42e34f:	(bad)  [ecx-0x169b019]
  42e355:	(bad)  
  42e356:	mov    edx,0xcd81be50
  42e35b:	out    0x94,eax
  42e35d:	mov    dl,0x9
  42e35f:	cmp    DWORD PTR [esi],eax
  42e361:	mov    ecx,0xef8ae270
  42e366:	inc    ecx
  42e367:	xchg   ebp,eax
  42e368:	test   ah,bh
  42e36a:	jne    0x42e3e0
  42e36c:	cmp    cl,BYTE PTR [edx-0xc]
  42e36f:	pushf  
  42e370:	xchg   esi,eax
  42e371:	dec    eax
  42e372:	cld    
  42e373:	pop    edx
  42e374:	stos   BYTE PTR es:[edi],al
  42e375:	enter  0x1a7,0x27
  42e379:	test   bl,0x4c
  42e37c:	and    eax,ebp
  42e37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e37f:	repz jg 0x42e398
  42e382:	inc    ebx
  42e383:	xor    esi,esi
  42e385:	jno    0x42e38a
  42e387:	sub    DWORD PTR [esi],0x40ec3b61
  42e38d:	iret   
  42e38e:	call   0xf14f1b0f
  42e393:	out    dx,eax
  42e394:	cdq    
  42e395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e396:	ja     0x42e3e4
  42e398:	pop    ecx
  42e399:	je     0x42e32c
  42e39b:	mov    ebx,0xf789a138
  42e3a0:	scas   eax,DWORD PTR es:[edi]
  42e3a1:	aas    
  42e3a2:	aad    0x3d
  42e3a4:	sub    esi,DWORD PTR [ecx+0x42893150]
  42e3aa:	test   al,0xa8
  42e3ac:	push   edi
  42e3ad:	sbb    eax,0x96be9d75
  42e3b2:	mov    cl,0xf2
  42e3b4:	sti    
  42e3b5:	stos   DWORD PTR es:[edi],eax
  42e3b6:	mov    WORD PTR [edi-0x7c031b6f],gs
  42e3bc:	sub    al,0x38
  42e3be:	clc    
  42e3bf:	sub    BYTE PTR [eax+0x6e],ch
  42e3c2:	mov    ds:0xbc6bba0d,eax
  42e3c7:	add    al,0x22
  42e3c9:	add    al,0xad
  42e3cb:	xor    dl,dh
  42e3cd:	ret    
  42e3ce:	ins    BYTE PTR es:[edi],dx
  42e3cf:	inc    esp
  42e3d0:	sbb    cl,BYTE PTR [ebx-0x1d2d0fbc]
  42e3d6:	mov    al,ds:0xa488fb25
  42e3db:	outs   dx,DWORD PTR ds:[esi]
  42e3dc:	je     0x42e433
  42e3de:	pusha  
  42e3df:	pop    es
  42e3e0:	(bad)  
  42e3e1:	(bad)  
  42e3e2:	leave  
  42e3e3:	pop    eax
  42e3e4:	std    
  42e3e5:	(bad)  
  42e3e6:	inc    ecx
  42e3e7:	es call 0xb4875d98
  42e3ed:	btc    DWORD PTR [ebp+0x43],ebp
  42e3f1:	and    eax,0xbfc844c3
  42e3f6:	outs   dx,BYTE PTR ds:[esi]
  42e3f7:	stos   BYTE PTR es:[edi],al
  42e3f8:	dec    esi
  42e3f9:	mov    ebp,0xb78ed9db
  42e3fe:	jmp    0xa654:0xd530e424
  42e405:	lds    edi,FWORD PTR [edi-0x48]
  42e408:	pop    DWORD PTR [edi-0x52]
  42e40b:	mov    al,0x55
  42e40d:	jmp    0x4632e874
  42e412:	test   al,0x73
  42e414:	add    edx,DWORD PTR [esi]
  42e416:	repz js 0x42e3e4
  42e419:	pop    esp
  42e41a:	(bad)  
  42e41b:	push   0x3a86e996
  42e420:	add    al,0xb7
  42e422:	pop    es
  42e423:	push   edi
  42e424:	push   es
  42e425:	fisub  WORD PTR [ecx]
  42e427:	scas   eax,DWORD PTR es:[edi]
  42e428:	jns    0x42e493
  42e42a:	loope  0x42e4aa
  42e42c:	je     0x42e419
  42e42e:	retf   0x5c0d
  42e431:	sbb    BYTE PTR [ebx+0x6a2be0ae],bh
  42e437:	jae    0x42e3f0
  42e439:	(bad)  
  42e43b:	add    DWORD PTR [edi],esi
  42e43d:	pop    edx
  42e43e:	fimul  DWORD PTR ds:0x5
	...
  42e4b4:	cdq    
  42e4b5:	cmc    
  42e4b6:	adc    BYTE PTR [ebx-0x12],0x77
  42e4ba:	fcos   
  42e4bc:	pavgw  mm4,mm3
  42e4bf:	mov    esp,0x449b424d
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [eax+0x5c],dl
  42e4ce:	push   cs
  42e4cf:	mov    esi,0xa9839559
  42e4d4:	pop    esi
  42e4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4d6:	mov    eax,0xa4521227
  42e4db:	jle    0x42e4b4
  42e4dd:	aam    0x16
  42e4df:	pop    ecx
  42e4e0:	es lock mov ch,0xd3
  42e4e4:	loope  0x42e55b
  42e4e6:	adc    edi,DWORD PTR [esi-0x20]
  42e4e9:	not    DWORD PTR ds:0xa9d2dbe7
  42e4ef:	icebp  
  42e4f0:	mov    ds,WORD PTR [edx+0x7bae923d]
  42e4f6:	xchg   edx,eax
  42e4f7:	xchg   ecx,eax
  42e4f8:	pop    es
  42e4f9:	xor    DWORD PTR [ebx+0x3a],eax
  42e4fc:	sahf   
  42e4fd:	(bad)  
  42e4fe:	sub    BYTE PTR [ebx+0x6d],bh
  42e501:	std    
  42e502:	mov    bl,0xd
  42e504:	rcr    DWORD PTR [ebx+0x62],cl
  42e507:	jmp    0x53ba88a9
  42e50c:	icebp  
  42e50d:	jnp    0x42e555
  42e50f:	sbb    ch,ch
  42e511:	cmp    eax,0x7e32c239
  42e516:	push   ds
  42e517:	pop    ecx
  42e518:	adc    esi,DWORD PTR [esi-0x12]
  42e51b:	sar    BYTE PTR [edx+0x56],0x8b
  42e51f:	in     al,0xa3
  42e521:	arpl   di,bp
  42e523:	mov    eax,ds:0xf24d0ee4
  42e528:	in     al,dx
  42e529:	sbb    al,0xfb
  42e52b:	push   cs
  42e52c:	mov    bl,0x33
  42e52e:	ins    DWORD PTR es:[edi],dx
  42e52f:	stos   BYTE PTR es:[edi],al
  42e530:	mov    BYTE PTR [edx],dh
  42e532:	mov    cl,al
  42e534:	or     al,0x7c
  42e536:	jbe    0x42e505
  42e538:	retf   0xe08b
  42e53b:	jmp    0x1ddef51c
  42e540:	pop    ds
  42e541:	ins    DWORD PTR es:[edi],dx
  42e542:	xchg   ebp,eax
  42e543:	shl    DWORD PTR [eax+0x2fd1cf5b],cl
  42e549:	push   0xfffffffc
  42e54b:	jns    0x42e50b
  42e54d:	xlat   BYTE PTR ds:[ebx]
  42e54e:	pop    ebx
  42e54f:	adc    BYTE PTR [ebx],bh
  42e551:	push   es
  42e552:	(bad)  
  42e553:	fadd   QWORD PTR [edi-0x7b]
  42e556:	push   ds
  42e557:	mov    DWORD PTR [ecx-0x3],esp
  42e55a:	retf   0xaa1c
  42e55d:	pop    eax
  42e55e:	fsub   st(4),st
  42e560:	fbld   TBYTE PTR [esi+0x1f]
  42e563:	inc    ebp
  42e564:	adc    DWORD PTR [edx+0x7583d587],ebx
  42e56a:	pusha  
  42e56b:	ja     0x42e4ee
  42e56d:	ffree  st(7)
  42e56f:	mov    al,0x8d
  42e571:	inc    eax
  42e572:	popa   
  42e573:	outs   dx,BYTE PTR ds:[esi]
  42e574:	loopne 0x42e5ac
  42e576:	pop    edi
  42e577:	ret    
  42e578:	sub    DWORD PTR [esi],edi
  42e57a:	fidivr DWORD PTR [edx+0x26]
  42e57d:	sub    ecx,DWORD PTR [edx-0x11932d9c]
  42e583:	jns    0x42e508
  42e585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e586:	pop    esp
  42e587:	push   esi
  42e588:	xor    cl,BYTE PTR [edi+0x7902e5c8]
  42e58e:	mov    dh,BYTE PTR ds:0x8c6a09b
  42e594:	pusha  
  42e595:	shr    DWORD PTR [ecx],1
  42e597:	icebp  
  42e598:	lahf   
  42e599:	push   0x5b
  42e59b:	push   esi
  42e59c:	daa    
  42e59d:	dec    edi
  42e59e:	xlat   BYTE PTR ds:[ebx]
  42e59f:	in     al,dx
  42e5a0:	mov    al,ds:0x60e551c2
  42e5a5:	stos   DWORD PTR es:[edi],eax
  42e5a6:	push   ds
  42e5a7:	pop    es
  42e5a8:	and    al,0x60
  42e5aa:	mov    WORD PTR [edi+0x1311eded],gs
  42e5b0:	repz icebp 
  42e5b2:	cmp    al,0x45
  42e5b4:	adc    DWORD PTR [edi],ebx
  42e5b6:	stos   DWORD PTR es:[edi],eax
  42e5b7:	mov    esp,0x14a3aa0f
  42e5bc:	mov    dl,0xd4
  42e5be:	xchg   edx,eax
  42e5bf:	xor    DWORD PTR [eax+0x0],edi
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	(bad)  
  42e642:	xlat   BYTE PTR ds:[ebx]
  42e643:	lock fsub st(1),st
  42e646:	add    DWORD PTR [eax],eax
  42e648:	cmc    
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    BYTE PTR [eax-0x79],bl
  42e64e:	int3   
  42e64f:	jnp    0x42e628
  42e651:	cmp    eax,0xea051c68
  42e656:	push   esi
  42e657:	add    eax,DWORD PTR [esi+0x2da6e739]
  42e65d:	bound  ebx,QWORD PTR [ecx-0x200dceb]
  42e663:	mov    ds,WORD PTR [edx]
  42e665:	push   ds
  42e666:	ss enter 0xb19a,0x3b
  42e66b:	sbb    DWORD PTR [edx-0x6ffd0b7e],eax
  42e671:	xchg   esp,eax
  42e672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e673:	cmc    
  42e674:	mov    cl,0x72
  42e676:	call   0x5b04:0xbc5eb70f
  42e67d:	xor    eax,0x9e08b814
  42e682:	fdivr  DWORD PTR [edi-0x2f47d0cb]
  42e688:	pop    edi
  42e689:	test   al,0xd3
  42e68b:	or     dl,cl
  42e68d:	test   BYTE PTR ds:0x32be84cb,bh
  42e693:	out    dx,eax
  42e694:	call   0xe349b1df
  42e699:	mov    eax,ds:0x6baafce7
  42e69e:	cli    
  42e69f:	sahf   
  42e6a0:	je     0x42e6a3
  42e6a2:	mov    esp,0x1f769af0
  42e6a7:	jg     0x42e637
  42e6a9:	sbb    ebx,DWORD PTR [ebx]
  42e6ab:	test   eax,0xfc20cbb5
  42e6b0:	ffree  st(0)
  42e6b2:	adc    ebp,ebx
  42e6b4:	dec    ecx
  42e6b5:	pushf  
  42e6b6:	mov    dl,0x59
  42e6b8:	inc    eax
  42e6b9:	cmp    eax,0xdfa6c17
  42e6be:	fimul  WORD PTR [eax-0x46]
  42e6c1:	pop    ss
  42e6c2:	push   ecx
  42e6c3:	test   eax,0x8df77eab
  42e6c8:	xchg   edx,eax
  42e6c9:	mov    cl,0x41
  42e6cb:	add    BYTE PTR [ecx-0x28],ah
  42e6ce:	xchg   edx,eax
  42e6cf:	xchg   edx,eax
  42e6d0:	les    eax,FWORD PTR [ebx+0x58e18bfc]
  42e6d6:	std    
  42e6d7:	or     DWORD PTR [edi+ebx*8],ecx
  42e6da:	out    0xf2,eax
  42e6dc:	stos   BYTE PTR es:[edi],al
  42e6dd:	push   ecx
  42e6de:	sub    ecx,0xad2bef61
  42e6e4:	push   0x502fe784
  42e6e9:	jo     0x42e67d
  42e6eb:	(bad)  
  42e6ec:	mov    WORD PTR [edi+0x57],ds
  42e6ef:	int3   
  42e6f0:	mov    eax,0xe907ede6
  42e6f5:	pop    ds
  42e6f6:	icebp  
  42e6f7:	cmp    dl,BYTE PTR [ebp+0x79]
  42e6fa:	inc    ebx
  42e6fb:	scas   al,BYTE PTR es:[edi]
  42e6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6fd:	or     esi,DWORD PTR [ecx+0x525bc989]
  42e703:	pop    eax
  42e704:	fisub  DWORD PTR [ebp-0x66006334]
  42e70a:	sete   BYTE PTR [ebx-0x481f2e2f]
  42e711:	adc    dl,BYTE PTR [ebp+0x67]
  42e714:	pop    esp
  42e715:	mov    ah,0xd3
  42e717:	popf   
  42e718:	shl    DWORD PTR [edi-0x10d32106],0x4
  42e71f:	push   ebx
  42e720:	or     DWORD PTR [ebp+0xe84a687],0x7
  42e727:	sub    DWORD PTR [esi-0x52251ea7],edi
  42e72d:	sahf   
  42e72e:	mov    DWORD PTR [edx],ebp
  42e730:	mov    ah,0x66
  42e732:	cmp    al,0xa4
  42e734:	into   
  42e735:	jmp    DWORD PTR [edi+0x2bc13142]
  42e73b:	add    BYTE PTR [esp+ecx*1+0x30],ah
  42e73f:	cmp    DWORD PTR [eax+eax*1],edi
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x290d5576]
  42e7c1:	mov    ebx,0xead12097
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	cmc    
  42e7c9:	add    BYTE PTR [eax],al
  42e7cb:	add    al,bl
  42e7cd:	xor    eax,0xd7fcc08b
  42e7d2:	lods   al,BYTE PTR ds:[esi]
  42e7d3:	shl    BYTE PTR [edi+0x7d0d7e7e],0xb9
  42e7da:	iret   
  42e7db:	jb     0x42e857
  42e7dd:	bound  eax,QWORD PTR [eax]
  42e7df:	aaa    
  42e7e0:	pop    edx
  42e7e1:	push   ds
  42e7e2:	mov    ecx,0x5fca755a
  42e7e7:	clc    
  42e7e8:	enter  0x6ccd,0x39
  42e7ec:	iret   
  42e7ed:	dec    ecx
  42e7ee:	inc    ebx
  42e7ef:	or     eax,0x1cd48ba4
  42e7f4:	xor    ecx,DWORD PTR [edi-0x2e19d017]
  42e7fa:	in     eax,0x59
  42e7fc:	mov    bh,0xae
  42e7fe:	push   ebx
  42e7ff:	inc    edx
  42e800:	xchg   edx,eax
  42e801:	xor    esi,DWORD PTR [edx+edx*8+0x25]
  42e805:	aas    
  42e806:	aaa    
  42e807:	add    dl,BYTE PTR [ebx+0x30]
  42e80a:	retf   0x7dc0
  42e80d:	icebp  
  42e80e:	add    al,0x3f
  42e810:	out    0x6,eax
  42e812:	jb     0x42e833
  42e814:	cmp    bl,BYTE PTR [esi-0x3b025958]
  42e81a:	sbb    BYTE PTR es:[ebx+0x17],cl
  42e81e:	out    0x2b,eax
  42e820:	ds stos BYTE PTR es:[edi],al
  42e822:	gs pop ecx
  42e824:	imul   ecx,DWORD PTR [ecx+0x26],0x6b284462
  42e82b:	mov    bl,0xfe
  42e82d:	bound  ebp,QWORD PTR [ebx+ecx*8]
  42e830:	xor    eax,0x7ed75bfe
  42e835:	mov    bh,0xf6
  42e837:	or     al,0x35
  42e839:	jle    0x42e853
  42e83b:	ins    BYTE PTR es:[edi],dx
  42e83c:	mov    dh,0xbe
  42e83e:	jb     0x42e89a
  42e840:	pushf  
  42e841:	outs   dx,BYTE PTR ds:[esi]
  42e842:	mov    bl,0xf7
  42e844:	xchg   cl,dh
  42e846:	push   edi
  42e847:	dec    esi
  42e848:	mov    cs,WORD PTR [ebx+eax*1-0x2f9bb7cc]
  42e84f:	jp     0x42e88c
  42e851:	xor    eax,0xdfcfdb8d
  42e856:	dec    ebx
  42e857:	push   ss
  42e858:	pop    esp
  42e859:	xor    al,0xa
  42e85b:	jo     0x42e87f
  42e85d:	push   ecx
  42e85e:	mov    dh,0x95
  42e860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e861:	hlt    
  42e862:	or     ebp,DWORD PTR [esp+ecx*8-0x61]
  42e866:	jb     0x42e822
  42e868:	jo     0x42e830
  42e86a:	and    al,0x1b
  42e86c:	jnp    0x42e8b5
  42e86e:	cmp    al,0xd3
  42e870:	push   ds
  42e871:	cmp    bl,ah
  42e873:	sbb    DWORD PTR [esi],edi
  42e875:	icebp  
  42e876:	fsub   st,st(5)
  42e878:	xor    edi,DWORD PTR [eax+0x11]
  42e87b:	xor    BYTE PTR [edi],0x8a
  42e87e:	mov    esp,0x1190e765
  42e883:	adc    ch,ah
  42e885:	hlt    
  42e886:	icebp  
  42e887:	or     BYTE PTR [esp+ebx*8+0x6f],dl
  42e88b:	ret    
  42e88c:	adc    eax,0xea9b5f05
  42e891:	stos   BYTE PTR es:[edi],al
  42e892:	lods   eax,DWORD PTR ds:[esi]
  42e893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e894:	dec    esi
  42e895:	je     0x42e89b
  42e897:	xor    BYTE PTR [edi-0x7ea9cde8],bl
  42e89d:	stos   BYTE PTR es:[edi],al
  42e89e:	xchg   esi,eax
  42e89f:	jmp    DWORD PTR [eax+0x6bd7c9f9]
  42e8a5:	fisub  DWORD PTR ds:0xc36c57e1
  42e8ab:	ins    DWORD PTR es:[edi],dx
  42e8ac:	mov    ecx,0x6ed15c07
  42e8b1:	mov    esi,0xb696966
  42e8b6:	mov    eax,ds:0xe7893458
  42e8bb:	add    esp,DWORD PTR [edi]
  42e8bd:	xor    eax,0x3d2da0
	...
  42e932:	add    BYTE PTR [eax],al
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x8a
  42e941:	loopne 0x42e8d7
  42e943:	arpl   si,ax
  42e945:	jmp    0x42e948
  42e947:	add    ch,dh
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    BYTE PTR [ecx],ah
  42e94d:	add    eax,0x736753e7
  42e952:	lods   eax,DWORD PTR ds:[esi]
  42e953:	jmp    0xac0dee9a
  42e958:	mov    ecx,0x878e05d1
  42e95d:	iret   
  42e95e:	test   eax,0xfd2fba1
  42e963:	ret    0xd500
  42e966:	jl     0x42e8f1
  42e968:	sbb    BYTE PTR [esi-0x101ac8c1],0xc2
  42e96f:	out    dx,eax
  42e970:	frstor [eax]
  42e972:	cli    
  42e973:	pop    edi
  42e974:	aad    0x16
  42e976:	mov    ecx,0x48ae4a9b
  42e97b:	jns    0x42e9af
  42e97d:	and    eax,0x60eb17b6
  42e982:	pop    edi
  42e983:	pop    es
  42e984:	inc    edi
  42e985:	ss mov dl,0xc9
  42e988:	test   BYTE PTR cs:[eax+0x7a],ch
  42e98c:	sub    ecx,ebx
  42e98e:	lds    esp,FWORD PTR [esi-0x2a406955]
  42e994:	call   0xa985:0x5213b2e2
  42e99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e99c:	(bad)  
  42e99d:	(bad)  
  42e99e:	bound  esi,QWORD PTR [edx+0x3a661be5]
  42e9a4:	repz mov esp,edx
  42e9a7:	fidivr WORD PTR [ecx-0xcad2056]
  42e9ad:	js     0x42ea13
  42e9af:	sub    ebx,esi
  42e9b1:	neg    BYTE PTR [edi-0x28]
  42e9b4:	or     esi,ebp
  42e9b6:	in     eax,0x90
  42e9b8:	lods   eax,DWORD PTR ds:[esi]
  42e9b9:	ins    BYTE PTR es:[edi],dx
  42e9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9bb:	outs   dx,BYTE PTR ds:[esi]
  42e9bc:	stos   DWORD PTR es:[edi],eax
  42e9bd:	inc    ebx
  42e9be:	or     eax,0x47bb0875
  42e9c3:	out    0x6b,al
  42e9c5:	and    BYTE PTR [ebx+0x330019aa],dl
  42e9cb:	adc    bh,BYTE PTR [ecx+0x4b2b9888]
  42e9d1:	inc    ecx
  42e9d2:	or     eax,0xa6d2f7cf
  42e9d7:	push   es
  42e9d8:	adc    al,0x87
  42e9da:	adc    al,0x79
  42e9dc:	jge    0x42ea04
  42e9de:	adc    al,dl
  42e9e0:	sub    ecx,DWORD PTR [ebx-0x1b]
  42e9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9e4:	(bad)  
  42e9e5:	enter  0x73a8,0x4d
  42e9e9:	dec    ecx
  42e9ea:	mov    DWORD PTR [eax+ebp*4+0x3cb21e14],edi
  42e9f1:	ins    DWORD PTR es:[edi],dx
  42e9f2:	pop    esp
  42e9f3:	stos   DWORD PTR es:[edi],eax
  42e9f4:	pop    esp
  42e9f5:	inc    ebx
  42e9f6:	fwait
  42e9f7:	loop   0x42ea22
  42e9f9:	jmp    0x42e996
  42e9fb:	ja     0x42e9f6
  42e9fd:	call   0x1958e255
  42ea02:	push   ecx
  42ea03:	xchg   ebx,eax
  42ea04:	mov    dh,BYTE PTR [eax]
  42ea06:	jg     0x42ea6a
  42ea08:	push   ss
  42ea09:	out    0x58,al
  42ea0b:	cmp    bl,dh
  42ea0d:	jge    0x42e9a8
  42ea0f:	loope  0x42ea73
  42ea11:	dec    esi
  42ea12:	xor    eax,0x12fdcd36
  42ea17:	(bad)  
  42ea18:	(bad)  
  42ea19:	pop    edx
  42ea1a:	popf   
  42ea1b:	mov    ebx,0xa9a29a6
  42ea20:	push   edi
  42ea21:	mov    eax,gs
  42ea23:	mov    al,ds:0xc8a056d7
  42ea28:	fist   WORD PTR [edi]
  42ea2a:	or     dh,bl
  42ea2c:	retf   
  42ea2d:	fcomp  QWORD PTR [ebx+esi*2]
  42ea30:	mov    DWORD PTR [esi+0xa],eax
  42ea33:	dec    esi
  42ea34:	dec    esp
  42ea35:	adc    cl,BYTE PTR [edi]
  42ea37:	ret    
  42ea38:	enter  0xf093,0x6e
  42ea3c:	xchg   esp,eax
  42ea3d:	jo     0x42ea51
  42ea3f:	lods   al,BYTE PTR ds:[esi]
  42ea40:	xor    al,0x0
	...
  42eab2:	add    BYTE PTR [eax],al
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	pop    ebx
  42eac1:	addr16 dec ebp
  42eac3:	sar    BYTE PTR [ebx-0xafffe14],1
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    BYTE PTR [ecx-0x57],bl
  42eace:	or     eax,0xd15adf6d
  42ead3:	ret    0x4f9b
  42ead6:	pop    es
  42ead7:	push   cs
  42ead8:	mov    dh,0x9b
  42eada:	xchg   esi,eax
  42eadb:	add    dh,BYTE PTR [ebx-0x77c535e0]
  42eae1:	adc    al,0xcb
  42eae3:	mov    edx,DWORD PTR [eax]
  42eae5:	ror    dl,0x1f
  42eae8:	push   esp
  42eae9:	(bad)  
  42eaea:	scas   eax,DWORD PTR es:[edi]
  42eaeb:	xchg   esi,eax
  42eaec:	jo     0x42eb30
  42eaee:	loop   0x42eaec
  42eaf0:	xor    BYTE PTR ds:0xf8e084c6,ch
  42eaf6:	cmc    
  42eaf7:	ja     0x42eab7
  42eaf9:	aad    0x29
  42eafb:	or     edi,DWORD PTR [edi+0x14]
  42eafe:	fadd   DWORD PTR [ebx+0x4]
  42eb01:	je     0x42eb38
  42eb03:	xor    al,0xf6
  42eb05:	fidiv  DWORD PTR [edx+0x2e2b3427]
  42eb0b:	shl    dl,cl
  42eb0d:	xchg   DWORD PTR [esi+edi*1-0x69688153],ecx
  42eb14:	cmc    
  42eb15:	lods   eax,DWORD PTR ds:[esi]
  42eb16:	push   0xffffffcc
  42eb18:	xchg   ebp,eax
  42eb19:	cmc    
  42eb1a:	sbb    BYTE PTR [eax+0x631efe4],bl
  42eb20:	lods   eax,DWORD PTR ds:[esi]
  42eb21:	mov    ebx,0x13957802
  42eb26:	or     ecx,DWORD PTR [esi-0x32]
  42eb29:	adc    BYTE PTR [edi],bl
  42eb2b:	inc    ecx
  42eb2c:	push   ds
  42eb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb2e:	sti    
  42eb2f:	push   ebp
  42eb30:	cmc    
  42eb31:	xchg   ebx,eax
  42eb32:	pop    ebx
  42eb33:	loopne 0x42eaec
  42eb35:	sar    BYTE PTR [esi+0x7d],cl
  42eb38:	sbb    eax,0x7789cb0e
  42eb3d:	popa   
  42eb3e:	pop    edx
  42eb3f:	xor    ebp,0x79bae9dc
  42eb45:	sbb    al,0x75
  42eb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb48:	dec    ebp
  42eb49:	push   ebp
  42eb4a:	add    dh,BYTE PTR ds:0xc7f4b745
  42eb50:	or     dh,bl
  42eb52:	fdivp  st(6),st
  42eb54:	dec    esi
  42eb55:	setno  dl
  42eb58:	bound  edi,QWORD PTR [edx-0x4f]
  42eb5b:	add    esi,ecx
  42eb5d:	fldcw  WORD PTR [ebx+0x587192f0]
  42eb63:	scas   eax,DWORD PTR es:[edi]
  42eb64:	fcomp  DWORD PTR [ecx-0x7]
  42eb67:	pop    esp
  42eb68:	xchg   edx,eax
  42eb69:	jbe    0x42eb4d
  42eb6b:	jl     0x42ebe5
  42eb6d:	cmp    al,0xc0
  42eb6f:	xchg   DWORD PTR [esi-0x26],edx
  42eb72:	scas   eax,DWORD PTR es:[edi]
  42eb73:	xchg   ebp,edi
  42eb75:	cmp    al,0xf7
  42eb77:	je     0x42ebb2
  42eb79:	xor    edx,DWORD PTR [ecx]
  42eb7b:	xlat   BYTE PTR ds:[ebx]
  42eb7c:	call   DWORD PTR [ebx-0x7e2045e0]
  42eb82:	xchg   edx,eax
  42eb83:	pop    ebx
  42eb84:	add    ecx,DWORD PTR [ebx+0x2]
  42eb87:	call   0x43aab845
  42eb8c:	dec    eax
  42eb8d:	aas    
  42eb8e:	adc    al,0x3
  42eb90:	cmp    edi,DWORD PTR [eax+0x1d]
  42eb93:	fisub  WORD PTR [edx+0x1d]
  42eb96:	lds    eax,FWORD PTR [edx-0xd]
  42eb99:	or     DWORD PTR [ebp-0x26e5f156],0xf9885d7a
  42eba3:	inc    esi
  42eba4:	and    esp,edi
  42eba6:	leave  
  42eba7:	icebp  
  42eba8:	pushf  
  42eba9:	loopne 0x42ebb3
  42ebab:	jg     0x42ebe9
  42ebad:	inc    eax
  42ebae:	push   eax
  42ebaf:	xchg   edi,eax
  42ebb0:	xchg   DWORD PTR [eax],ecx
  42ebb2:	(bad)
  42ebb5:	fwait
  42ebb6:	loopne 0x42ebbe
  42ebb8:	mov    edi,DWORD PTR [ecx-0x22]
  42ebbb:	ins    DWORD PTR es:[edi],dx
  42ebbc:	mov    ebp,0x324f59bc
	...
  42ec31:	add    BYTE PTR [eax],al
  42ec33:	add    BYTE PTR [ecx],bh
  42ec35:	mov    bh,0x6d
  42ec37:	pxor   mm3,mm7
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x1ed9ab69]
  42ec43:	sub    eax,0x1edb0
  42ec48:	cmc    
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    ch,bl
  42ec4d:	push   ecx
  42ec4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec4f:	cmp    edi,DWORD PTR [ecx+0x3dac8b3c]
  42ec55:	lods   eax,DWORD PTR ds:[esi]
  42ec56:	or     ebx,ecx
  42ec58:	mov    ch,0x4f
  42ec5a:	and    eax,0x5e94dbd0
  42ec5f:	mov    bh,0x50
  42ec61:	sar    eax,0xa4
  42ec64:	add    BYTE PTR [eax],0xf2
  42ec67:	lods   al,BYTE PTR ds:[esi]
  42ec68:	push   eax
  42ec69:	xchg   ebp,eax
  42ec6a:	arpl   WORD PTR [esi+0x61],sp
  42ec6d:	inc    esp
  42ec6e:	inc    eax
  42ec6f:	cmp    al,0x30
  42ec71:	call   0xcfc0126
  42ec76:	mov    ebp,0x98abb344
  42ec7b:	stos   DWORD PTR es:[edi],eax
  42ec7c:	push   ecx
  42ec7d:	cmp    edx,ebp
  42ec7f:	stos   BYTE PTR es:[edi],al
  42ec80:	fsubr  DWORD PTR [edx+0x689515f1]
  42ec86:	xchg   ebp,eax
  42ec87:	adc    ebx,DWORD PTR [eax]
  42ec89:	mov    esi,esp
  42ec8b:	mov    ds:0xeb40f6d6,eax
  42ec90:	mov    ds:0xf8ae75a3,al
  42ec95:	jge    0x42ec68
  42ec97:	out    dx,al
  42ec98:	sbb    dl,ch
  42ec9a:	xadd   BYTE PTR [ecx],ah
  42ec9d:	ja     0x42ec8b
  42ec9f:	in     al,0xa6
  42eca1:	ins    DWORD PTR es:[edi],dx
  42eca2:	ins    BYTE PTR es:[edi],dx
  42eca3:	jmp    0xff66:0xd682cc28
  42ecaa:	mov    al,ds:0x520acc04
  42ecaf:	push   ds
  42ecb0:	cmp    edx,DWORD PTR [eax-0x43ee9c64]
  42ecb6:	adc    al,0xcc
  42ecb8:	jg     0x42ec8f
  42ecba:	je     0x42ec51
  42ecbc:	cmp    DWORD PTR [ebx+0x7bb43af0],0xa827fa9e
  42ecc6:	ins    BYTE PTR es:[edi],dx
  42ecc7:	add    BYTE PTR [eax-0x25af5d8a],0xca
  42ecce:	push   ds
  42eccf:	mov    bl,0xb0
  42ecd1:	div    DWORD PTR [ebx+0x7b]
  42ecd4:	ret    0xb019
  42ecd7:	stos   BYTE PTR es:[edi],al
  42ecd8:	pop    eax
  42ecd9:	mov    al,0xa8
  42ecdb:	stos   DWORD PTR es:[edi],eax
  42ecdc:	push   ecx
  42ecdd:	in     eax,dx
  42ecde:	retf   
  42ecdf:	jbe    0x42ecf2
  42ece1:	sbb    bl,BYTE PTR [eax+0x73]
  42ece4:	test   eax,0xe5825ba8
  42ece9:	mov    eax,0x94f95084
  42ecee:	fst    DWORD PTR [eax-0x4a]
  42ecf1:	out    dx,al
  42ecf2:	xor    eax,esi
  42ecf4:	fiadd  WORD PTR [esi]
  42ecf6:	fiadd  DWORD PTR [edi-0x1bd9ca48]
  42ecfc:	mov    al,ds:0xcd1b4ffe
  42ed01:	or     eax,0x4407a35c
  42ed06:	(bad)  
  42ed07:	fiadd  WORD PTR [eax+0x7f367e9c]
  42ed0d:	stos   DWORD PTR es:[edi],eax
  42ed0e:	fist   WORD PTR [edx-0x3b]
  42ed11:	std    
  42ed12:	dec    edi
  42ed13:	jmp    0x42ed42
  42ed15:	hlt    
  42ed16:	ret    0xf578
  42ed19:	fcomi  st,st(2)
  42ed1b:	push   cs
  42ed1c:	cld    
  42ed1d:	into   
  42ed1e:	pop    edi
  42ed1f:	stos   BYTE PTR es:[edi],al
  42ed20:	xor    al,0x9a
  42ed22:	jmp    0x720c9d38
  42ed27:	imul   edi,edx,0xb003f10e
  42ed2d:	hlt    
  42ed2e:	test   DWORD PTR [edi],ecx
  42ed30:	mov    ds:0xe1f0f9d6,al
  42ed35:	or     ebx,eax
  42ed37:	lods   al,BYTE PTR ds:[esi]
  42ed38:	jno    0x42ecf4
  42ed3a:	push   edx
  42ed3b:	cmp    edi,DWORD PTR [eax+0x66871686]
	...
  42edb1:	add    BYTE PTR [eax],al
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0xd7122be7
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR ds:0x6f0794ff,dl
  42edd1:	dec    ecx
  42edd2:	ja     0x42edb6
  42edd4:	cld    
  42edd5:	add    BYTE PTR [esp+ebp*4-0xd3051dd],ah
  42eddc:	mov    DWORD PTR [ecx-0x70ada525],esp
  42ede2:	ins    DWORD PTR es:[edi],dx
  42ede3:	jge    0x42ee30
  42ede5:	sub    esi,DWORD PTR [edi]
  42ede7:	sub    edx,esp
  42ede9:	stc    
  42edea:	rep ins BYTE PTR es:[edi],dx
  42edec:	xor    eax,0xb74239f9
  42edf1:	sbb    DWORD PTR [eax+0x3c],edi
  42edf4:	inc    ebx
  42edf5:	mov    esi,esp
  42edf7:	mov    bh,0x8d
  42edf9:	sub    DWORD PTR [esp+ebx*8-0x2590326e],0x5af032ff
  42ee04:	bnd jb 0x42ee0a
  42ee07:	cs pushf 
  42ee09:	add    DWORD PTR [edx],ecx
  42ee0b:	jno    0x42ee68
  42ee0d:	or     eax,esp
  42ee0f:	inc    ecx
  42ee10:	cmc    
  42ee11:	leave  
  42ee12:	mov    DWORD PTR [ebx-0x3e1bc3ae],ebp
  42ee18:	cmp    cl,dl
  42ee1a:	sbb    DWORD PTR [edx+0x5a],edi
  42ee1d:	scas   eax,DWORD PTR es:[edi]
  42ee1e:	jo     0x42ee6e
  42ee20:	sti    
  42ee21:	xor    al,0x3b
  42ee23:	cmp    al,0x23
  42ee25:	(bad)  
  42ee26:	loope  0x42eddc
  42ee28:	mov    BYTE PTR [eax+edx*8-0x31],0x4f
  42ee2d:	dec    esi
  42ee2e:	xor    cl,BYTE PTR [esp+ebp*8-0x20]
  42ee32:	sbb    ecx,DWORD PTR [esi-0x3f]
  42ee35:	test   al,0xf9
  42ee37:	loop   0x42edb9
  42ee39:	dec    ebx
  42ee3a:	jmp    0xab95:0xd55b8243
  42ee41:	xchg   edx,eax
  42ee42:	sar    ah,0x3f
  42ee45:	mov    al,ds:0x45245a36
  42ee4a:	fistp  WORD PTR [ecx-0x67b77900]
  42ee50:	pop    es
  42ee51:	cs xchg esp,eax
  42ee53:	sub    BYTE PTR [edi-0x5280aa31],0x9c
  42ee5a:	lods   eax,DWORD PTR ds:[esi]
  42ee5b:	mov    ebp,0x9ff50d9
  42ee60:	sub    edi,0x7ae6166
  42ee66:	adc    bh,al
  42ee68:	test   BYTE PTR [edi+0x79],ch
  42ee6b:	retf   0xa533
  42ee6e:	mov    ah,0x74
  42ee70:	(bad)  
  42ee71:	ins    DWORD PTR es:[edi],dx
  42ee72:	imul   eax,DWORD PTR [ebx*1+0x707ef24c],0x93aed80c
  42ee7d:	(bad)  
  42ee7e:	xchg   ebx,eax
  42ee7f:	xchg   edx,eax
  42ee80:	inc    esp
  42ee81:	sahf   
  42ee82:	cmp    eax,0xd897193e
  42ee87:	dec    ebx
  42ee88:	outs   dx,DWORD PTR gs:[esi]
  42ee8a:	enter  0xa5bb,0xfc
  42ee8e:	loopne 0x42ee6d
  42ee90:	mov    ?,WORD PTR [esi+esi*2-0x80ed25d]
  42ee97:	arpl   WORD PTR [edi],di
  42ee99:	fisub  DWORD PTR [ebx+0x8]
  42ee9c:	mov    dx,0xcd2e
  42eea0:	in     eax,0x84
  42eea2:	js     0x42ee34
  42eea4:	add    eax,0x24303c2c
  42eea9:	aad    0x2
  42eeab:	imul   edi,DWORD PTR [edi+0x36],0x60
  42eeaf:	or     eax,0x22cf47fe
  42eeb4:	scas   eax,DWORD PTR es:[edi]
  42eeb5:	sbb    DWORD PTR [esi+0x66b7a22e],eax
  42eebb:	inc    eax
  42eebc:	mov    ebx,0x9641dbc7
	...
  42ef31:	add    BYTE PTR [eax],al
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	bnd jns 0x42ef40
  42ef42:	aad    0x7a
  42ef44:	call   0x0:0xf50001ef
  42ef4b:	add    BYTE PTR [ecx+0x48],ch
  42ef4e:	jne    0x42ef92
  42ef50:	test   eax,0x52d5e79
  42ef55:	lods   al,BYTE PTR ds:[esi]
  42ef56:	test   DWORD PTR [edi],esi
  42ef58:	mov    ah,BYTE PTR [ebp-0x6d5cd6b0]
  42ef5e:	lds    ebx,FWORD PTR [edi-0x45c8efa4]
  42ef64:	pop    ecx
  42ef65:	or     ebx,0xe774b650
  42ef6b:	cdq    
  42ef6c:	leave  
  42ef6d:	sti    
  42ef6e:	iret   
  42ef6f:	call   0xc398:0x4038157e
  42ef76:	cmp    BYTE PTR [esi],dh
  42ef78:	int3   
  42ef79:	mov    DWORD PTR [edi-0x39dcf16f],edi
  42ef7f:	inc    ebp
  42ef80:	cld    
  42ef81:	imul   bh
  42ef83:	fimul  WORD PTR [ecx-0x520ba75]
  42ef89:	fst    DWORD PTR [esi+0xb40fb17]
  42ef8f:	retf   
  42ef90:	pop    edx
  42ef91:	mov    eax,ds:0x532e3b33
  42ef96:	mov    ds:0x67e8fb35,al
  42ef9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef9c:	xchg   ebx,eax
  42ef9d:	adc    BYTE PTR ds:0x84aa1676,0x64
  42efa4:	or     edi,DWORD PTR [ecx+0x47]
  42efa7:	retf   
  42efa8:	xchg   edx,eax
  42efa9:	mov    edx,0x80e78499
  42efae:	loop   0x42f02b
  42efb0:	(bad)  
  42efb1:	and    BYTE PTR [ebp-0x5],al
  42efb4:	ds call 0xc02c:0x20e1bd7a
  42efbc:	add    DWORD PTR [ebp-0x4a],ebp
  42efbf:	(bad)  
  42efc0:	mov    ebx,0xe634410d
  42efc5:	cmovl  ebp,DWORD PTR [esp+ecx*4-0x7b]
  42efca:	xchg   DWORD PTR [edi+0x3c],edi
  42efcd:	imul   eax,ebp,0xbb95d999
  42efd3:	cmp    al,BYTE PTR [ebp-0x7a0b50c3]
  42efd9:	rcl    BYTE PTR [edx+edi*4+0xc],cl
  42efdd:	scas   eax,DWORD PTR es:[edi]
  42efde:	(bad)  
  42efdf:	mov    cl,0x3f
  42efe1:	mov    al,ds:0x9895de64
  42efe6:	mov    ds:0xffa3f1d4,al
  42efeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efec:	(bad)  
  42efed:	adc    al,0xf0
  42efef:	loopne 0x42f01f
  42eff1:	push   0xd04e5ab5
  42eff6:	leave  
  42eff7:	aad    0xbc
  42eff9:	bnd jbe 0x42f06a
  42effc:	mov    ebp,0x27c2c7bb
  42f001:	ret    
  42f002:	jmp    0xa09c1dc9
  42f007:	dec    esp
  42f008:	ja     0x42efd9
  42f00a:	out    dx,eax
  42f00b:	mov    esp,0x604a9f66
  42f010:	push   edi
  42f011:	mov    edx,?
  42f013:	loope  0x42f043
  42f015:	mov    ebp,0x25df0e2b
  42f01a:	and    eax,0x84013c5b
  42f01f:	or     eax,0x4838a00
  42f024:	and    esp,DWORD PTR [eax]
  42f026:	jmp    0x42f097
  42f028:	mov    cl,0x78
  42f02a:	call   DWORD PTR [ebx-0x7a03f997]
  42f030:	xchg   ecx,eax
  42f031:	mov    eax,0xef9e5721
  42f036:	lods   eax,DWORD PTR ds:[esi]
  42f037:	shl    BYTE PTR [edi+0x53827180],0x8
  42f03e:	inc    ebp
  42f03f:	pop    edi
  42f040:	rol    BYTE PTR [eax],0x0
	...
  42f0b3:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  esi,QWORD PTR [eax-0x70863a9e]
  42f0c5:	lock add DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [ecx],bl
  42f0cd:	mov    bl,0x3e
  42f0cf:	xchg   edx,eax
  42f0d0:	inc    ecx
  42f0d1:	pop    esp
  42f0d2:	pop    es
  42f0d3:	(bad)  [esi]
  42f0d5:	dec    esi
  42f0d6:	mov    ds:0xa899cdc2,eax
  42f0db:	fisubr WORD PTR [edx+0x0]
  42f0de:	(bad)  
  42f0df:	jl     0x42f08f
  42f0e1:	cli    
  42f0e2:	sbb    al,BYTE PTR [ecx]
  42f0e4:	adc    al,0x8c
  42f0e6:	int    0x36
  42f0e8:	enter  0x6107,0x4d
  42f0ec:	lods   al,BYTE PTR ds:[esi]
  42f0ed:	inc    DWORD PTR [eax+0x4a]
  42f0f0:	inc    esi
  42f0f1:	daa    
  42f0f2:	in     al,0x52
  42f0f4:	jmp    0x42f107
  42f0f6:	xor    BYTE PTR [ebx+0x61],0x5f
  42f0fa:	(bad)  
  42f0fb:	pusha  
  42f0fc:	leave  
  42f0fd:	xor    al,0x1a
  42f0ff:	or     bl,BYTE PTR [ebx+0x4]
  42f102:	lods   al,BYTE PTR ds:[esi]
  42f103:	jge    0x42f0c4
  42f105:	int    0x8b
  42f107:	xchg   ecx,eax
  42f108:	lahf   
  42f109:	scas   eax,DWORD PTR es:[edi]
  42f10a:	out    0x95,al
  42f10c:	xchg   esi,eax
  42f10d:	int    0xbd
  42f10f:	dec    ecx
  42f110:	mov    ch,0x36
  42f112:	pushf  
  42f113:	mov    esp,0x10ccdf76
  42f118:	pop    eax
  42f119:	mov    ch,0xc6
  42f11b:	out    0x68,al
  42f11d:	sub    eax,0x1ea530db
  42f122:	mov    bh,0x7
  42f124:	les    ebp,FWORD PTR [ebx]
  42f126:	test   eax,0x707e59c6
  42f12b:	or     edi,DWORD PTR [ebx-0x445a0211]
  42f131:	test   dh,0x77
  42f134:	and    ebp,DWORD PTR [edx-0x76]
  42f137:	add    DWORD PTR [ecx],edi
  42f139:	xchg   edx,eax
  42f13a:	aaa    
  42f13b:	(bad)  
  42f13c:	stc    
  42f13d:	adc    al,0x96
  42f13f:	mov    ebp,0xb4494850
  42f144:	stos   BYTE PTR es:[edi],al
  42f145:	das    
  42f146:	out    0x36,al
  42f148:	arpl   WORD PTR [edx+0xc312f8b],dx
  42f14e:	jns    0x42f124
  42f150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f151:	mov    BYTE PTR [esi],ah
  42f153:	es cli 
  42f155:	js     0x42f135
  42f157:	and    BYTE PTR ds:0x1b3a255b,bl
  42f15d:	in     al,dx
  42f15e:	push   ds
  42f15f:	xor    al,0x22
  42f161:	dec    edi
  42f162:	pop    es
  42f163:	sbb    edx,DWORD PTR [eax]
  42f165:	arpl   WORD PTR [ecx-0x1d],bx
  42f168:	jl     0x42f16b
  42f16a:	jge    0x42f1b3
  42f16c:	xor    ch,dl
  42f16e:	push   es
  42f16f:	nop
  42f170:	out    dx,eax
  42f171:	icebp  
  42f172:	jae    0x42f1e1
  42f174:	fistp  QWORD PTR [edx]
  42f176:	call   0xf0eb:0x234de80
  42f17d:	out    dx,al
  42f17e:	mov    ch,0xc0
  42f180:	push   esi
  42f181:	in     eax,0x65
  42f183:	ins    BYTE PTR es:[edi],dx
  42f184:	mov    cs,ebp
  42f186:	fisubr WORD PTR [edx]
  42f188:	or     sp,WORD PTR [edx+0x65]
  42f18c:	pop    ss
  42f18d:	mov    edx,0x846626d4
  42f192:	in     al,dx
  42f193:	sub    BYTE PTR [eax],bl
  42f195:	xchg   ebx,eax
  42f196:	jb     0x42f1f4
  42f198:	aad    0xc2
  42f19a:	and    esp,esi
  42f19c:	push   esi
  42f19d:	addps  xmm4,XMMWORD PTR ds:0xa76dc8b
  42f1a4:	inc    ebp
  42f1a5:	loop   0x42f1b5
  42f1a7:	xchg   cl,bh
  42f1a9:	test   DWORD PTR [ebx],ebp
  42f1ab:	imul   ecx,ebp,0x5c
  42f1ae:	loopne 0x42f168
  42f1b0:	test   BYTE PTR [ecx-0x2151d2ad],bl
  42f1b6:	sub    edx,ebp
  42f1b8:	push   esi
  42f1b9:	lods   al,BYTE PTR ds:[esi]
  42f1ba:	int    0x1
  42f1bc:	outs   dx,BYTE PTR ds:[esi]
  42f1bd:	mov    eax,ds:0x1b24f8
	...
  42f232:	add    BYTE PTR [eax],al
  42f234:	lods   eax,DWORD PTR ds:[esi]
  42f235:	cmp    eax,0xb79aa78a
  42f23a:	lods   eax,DWORD PTR ds:[esi]
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	ror    ah,1
  42f242:	dec    ebp
  42f243:	dec    edi
  42f244:	test   cl,dh
  42f246:	add    DWORD PTR [eax],eax
  42f248:	cmc    
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [ecx+edi*4],al
  42f24e:	neg    DWORD PTR [ecx]
  42f250:	(bad)  
  42f251:	or     eax,0x36a5eb33
  42f256:	pop    es
  42f257:	fwait
  42f258:	test   DWORD PTR [edi+0x23],edi
  42f25b:	adc    DWORD PTR [eax+0x10],edx
  42f25e:	imul   DWORD PTR [esi]
  42f260:	mov    ecx,0xa0fb8d40
  42f265:	test   ecx,eax
  42f267:	mov    ebp,DWORD PTR [edi-0x6bf0c3d]
  42f26d:	mov    ebx,0xc343e273
  42f272:	mov    ds:0xe6c0675,eax
  42f277:	(bad)  
  42f278:	imul   ecx,ebx,0x9a1788f1
  42f27e:	push   edi
  42f27f:	push   eax
  42f280:	sahf   
  42f281:	jo     0x42f251
  42f283:	xor    ch,bh
  42f285:	push   ss
  42f286:	cmp    DWORD PTR [edx+0x64e8f192],edx
  42f28c:	mov    dl,dh
  42f28e:	lods   al,BYTE PTR ds:[esi]
  42f28f:	xchg   esi,eax
  42f290:	cmp    ebx,DWORD PTR [ebx+ecx*1-0x2a6d4739]
  42f297:	mov    esi,0x8e6ce66a
  42f29c:	xchg   esp,eax
  42f29d:	push   edi
  42f29e:	scas   al,BYTE PTR es:[edi]
  42f29f:	arpl   WORD PTR [ecx+0x5a36a0c9],ax
  42f2a5:	pop    es
  42f2a6:	pop    edx
  42f2a7:	aas    
  42f2a8:	mov    WORD PTR [edi-0x7598b38d],es
  42f2ae:	pop    eax
  42f2af:	mov    ecx,0xacf74817
  42f2b4:	push   esp
  42f2b5:	dec    ecx
  42f2b6:	leave  
  42f2b7:	jle    0x42f290
  42f2b9:	or     eax,0x8f38bb9c
  42f2be:	inc    edi
  42f2bf:	sub    ah,al
  42f2c1:	mov    eax,0x3d186a24
  42f2c6:	mov    ch,0x6a
  42f2c8:	loope  0x42f33f
  42f2ca:	sar    cl,0xab
  42f2cd:	xchg   ebp,eax
  42f2ce:	mov    BYTE PTR [esp+edx*1],ah
  42f2d1:	daa    
  42f2d2:	cmp    ebp,DWORD PTR [ebp+eax*4+0x1a]
  42f2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2d7:	dec    edi
  42f2d8:	test   eax,0x7074d957
  42f2dd:	push   ss
  42f2de:	push   ds
  42f2df:	ss test eax,0x164b8bf
  42f2e5:	dec    eax
  42f2e6:	out    0xea,eax
  42f2e8:	add    ah,BYTE PTR [esi+0x429ef480]
  42f2ee:	or     esi,ebx
  42f2f0:	loopne 0x42f2b7
  42f2f2:	ror    BYTE PTR [ecx+0x1c],cl
  42f2f5:	cmp    BYTE PTR [esi],0x0
  42f2f8:	add    DWORD PTR [esi-0x409a016f],0x50e5b1aa
  42f302:	xor    cl,dl
  42f304:	xor    DWORD PTR [edx+eiz*1],eax
  42f307:	jno    0x42f2b6
  42f309:	ss sub eax,0x4c2712c5
  42f30f:	mul    BYTE PTR [esi+0x5a06282c]
  42f315:	jne    0x42f2ab
  42f317:	pop    ebp
  42f318:	les    esp,FWORD PTR [ebp-0x3]
  42f31b:	out    dx,al
  42f31c:	add    BYTE PTR ds:0xb077dbcd,0xad
  42f323:	pop    es
  42f324:	aaa    
  42f325:	mov    al,ds:0xfb05533e
  42f32a:	aad    0x69
  42f32c:	and    eax,0xd6d7a1db
  42f331:	add    DWORD PTR [ebx+0x75],ebp
  42f334:	sbb    ebx,ebx
  42f336:	scas   al,BYTE PTR es:[edi]
  42f337:	aaa    
  42f338:	mov    ebx,0x36e3a5c3
  42f33d:	adc    ebx,DWORD PTR fs:[esi+0x1b]
	...
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	sub    bl,ch
  42f3c2:	push   ebp
  42f3c3:	sar    BYTE PTR [ecx-0xe],cl
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	cmc    
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [ecx-0x38ce416],al
  42f3d1:	and    eax,0xa2248f59
  42f3d6:	fwait
  42f3d7:	aaa    
  42f3d8:	in     eax,0x90
  42f3da:	test   BYTE PTR [edx],dh
  42f3dc:	in     al,dx
  42f3dd:	in     al,dx
  42f3de:	sahf   
  42f3df:	(bad)  
  42f3e0:	shl    DWORD PTR [ebp-0x145a6189],cl
  42f3e6:	imul   edx,DWORD PTR [ebp+0x421f2dc8],0xffffff84
  42f3ed:	push   eax
  42f3ee:	jno    0x42f400
  42f3f0:	pop    esi
  42f3f1:	stc    
  42f3f2:	add    ebx,DWORD PTR [esi+0x33efe836]
  42f3f8:	aas    
  42f3f9:	mov    ds:0x87252c59,al
  42f3fe:	aad    0x52
  42f400:	mov    dl,0x66
  42f402:	xchg   ecx,eax
  42f403:	jb     0x42f425
  42f405:	les    edx,FWORD PTR [ecx+0x37]
  42f408:	inc    ebx
  42f409:	pop    esi
  42f40a:	aas    
  42f40b:	fwait
  42f40c:	lahf   
  42f40d:	call   FWORD PTR [esi+0x1]
  42f410:	xchg   ebx,eax
  42f411:	arpl   cx,ax
  42f413:	pop    ebp
  42f414:	push   cs
  42f415:	adc    dl,BYTE PTR [ebx]
  42f417:	test   BYTE PTR [esi],dh
  42f419:	ror    BYTE PTR [ecx+ecx*2],1
  42f41c:	jg     0x42f44b
  42f41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f41f:	dec    edx
  42f420:	call   0xc547e604
  42f425:	xchg   DWORD PTR [edx+0x13],esi
  42f428:	pop    es
  42f429:	mov    ecx,0x756f0d4f
  42f42e:	mov    DWORD PTR [eax-0x7a],esi
  42f431:	fxch   st(0)
  42f433:	fs scas eax,DWORD PTR es:[edi]
  42f435:	add    DWORD PTR [ecx-0xc70a7c],0x605cc089
  42f43f:	jne    0x42f435
  42f441:	cmp    DWORD PTR [ebx+ebp*1-0x10571a52],esi
  42f448:	outs   dx,BYTE PTR ds:[esi]
  42f449:	stos   BYTE PTR es:[edi],al
  42f44a:	adc    bh,BYTE PTR [edx-0x79]
  42f44d:	pop    ebx
  42f44e:	mov    al,0x5b
  42f450:	sbb    BYTE PTR [ecx-0x59df95a7],0x71
  42f457:	mov    ebp,0xdab95fe2
  42f45c:	cdq    
  42f45d:	in     eax,dx
  42f45e:	xor    ah,BYTE PTR [ecx+0x48615d20]
  42f464:	clc    
  42f465:	xor    al,0xc8
  42f467:	ficomp DWORD PTR [eax]
  42f469:	fwait
  42f46a:	adc    ah,BYTE PTR [eax]
  42f46c:	retf   0xfda8
  42f46f:	push   ebp
  42f470:	ror    al,1
  42f472:	fisttp WORD PTR [ecx+0x41]
  42f475:	xchg   edi,eax
  42f476:	mov    dh,0xe4
  42f478:	mov    edi,0xdc321c6e
  42f47d:	jns    0x42f42a
  42f47f:	(bad)
  42f482:	mov    ch,0x9b
  42f484:	push   ecx
  42f485:	aas    
  42f486:	mov    ah,0xa5
  42f488:	add    eax,0x4116ea6c
  42f48d:	inc    esi
  42f48e:	push   ds
  42f48f:	shr    DWORD PTR [esi+0x2cc2968c],0x2f
  42f496:	ds adc al,0xfd
  42f499:	sub    al,0x4b
  42f49b:	sub    eax,0xc44a84c6
  42f4a0:	mov    al,0xe9
  42f4a2:	push   esp
  42f4a3:	sub    dh,bh
  42f4a5:	adc    ch,BYTE PTR [ecx+edi*4-0x7a4dadba]
  42f4ac:	dec    eax
  42f4ad:	xchg   DWORD PTR [edx+0x256db330],esp
  42f4b3:	mov    eax,ds:0x569d1d50
  42f4b8:	push   esi
  42f4b9:	cs retf 0x4662
  42f4bd:	pop    esp
  42f4be:	cmp    DWORD PTR [ecx+0x7d],eax
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x3d],bh
  42f541:	push   es
  42f542:	adc    DWORD PTR [esi+ebp*2],0xf50001f3
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    BYTE PTR [ecx-0x18],bl
  42f54e:	leave  
  42f54f:	dec    esi
  42f550:	sar    BYTE PTR [edi-0x5c],1
  42f553:	add    dh,BYTE PTR [ecx+0x2778b5b0]
  42f559:	fadd   st(6),st
  42f55b:	cli    
  42f55c:	mov    eax,0xd6f37c7f
  42f561:	cli    
  42f562:	mov    dh,bl
  42f564:	dec    ebx
  42f565:	jo     0x42f52d
  42f567:	jns    0x42f524
  42f569:	mov    al,ds:0xda7ca68e
  42f56e:	mov    BYTE PTR [bx+si],ch
  42f571:	xlat   BYTE PTR ds:[ebx]
  42f572:	mov    bl,0xbe
  42f574:	call   0x7c1:0x9aae26ba
  42f57b:	into   
  42f57c:	and    eax,0xcda9aaec
  42f581:	pop    ecx
  42f582:	imul   eax,DWORD PTR [eax],0x73
  42f585:	sub    BYTE PTR [edi-0x33],ch
  42f588:	leave  
  42f589:	add    esp,DWORD PTR [eax+0x2e66003a]
  42f58f:	shld   DWORD PTR [ebx+0x3f],esp,0xe1
  42f594:	cwde   
  42f595:	mov    dh,BYTE PTR [ebx+0x57]
  42f598:	inc    ecx
  42f599:	lods   al,BYTE PTR ds:[esi]
  42f59a:	sbb    BYTE PTR [eax+0x77],dh
  42f59d:	inc    edx
  42f59e:	mov    ebx,0xc31c8cab
  42f5a3:	mov    WORD PTR [edi+0x7],cs
  42f5a6:	adc    edi,DWORD PTR [esi]
  42f5a8:	jb     0x42f59d
  42f5aa:	dec    esi
  42f5ab:	jbe    0x42f5b1
  42f5ad:	sub    eax,0x998d87ef
  42f5b2:	lds    ebx,FWORD PTR [ebx]
  42f5b4:	mov    ds,eax
  42f5b6:	test   BYTE PTR [eax-0xa],bl
  42f5b9:	loope  0x42f583
  42f5bb:	push   ebp
  42f5bc:	pop    ds
  42f5bd:	mov    BYTE PTR [eax+0x2a],ah
  42f5c0:	rcr    DWORD PTR [edx-0x3abba27f],0xd0
  42f5c7:	xor    al,0xfa
  42f5c9:	xchg   BYTE PTR [ebp-0x7ea91c99],cl
  42f5cf:	sbb    ah,BYTE PTR [ebp+edi*1+0x55]
  42f5d3:	pushf  
  42f5d4:	call   0xb503:0x214014d0
  42f5db:	ss mov edx,0xf71390c7
  42f5e1:	dec    esp
  42f5e2:	cmp    ebx,edx
  42f5e4:	mov    al,ds:0x425a6a5b
  42f5e9:	dec    eax
  42f5ea:	test   al,0xe1
  42f5ec:	jbe    0x42f628
  42f5ee:	outs   dx,BYTE PTR ds:[esi]
  42f5ef:	and    cl,BYTE PTR [ebx]
  42f5f1:	popa   
  42f5f2:	adc    ah,cl
  42f5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5f5:	pop    esi
  42f5f6:	(bad)  
  42f5f7:	out    0xda,eax
  42f5f9:	xor    BYTE PTR [edi-0x43],0x19
  42f5fd:	arpl   sp,dx
  42f5ff:	jmp    edx
  42f601:	icebp  
  42f602:	cs ss pushf 
  42f605:	add    bh,ah
  42f607:	out    dx,al
  42f608:	mov    edx,DWORD PTR [ebx-0x34]
  42f60b:	push   cs
  42f60c:	(bad)  
  42f60d:	std    
  42f60e:	je     0x42f668
  42f610:	repz inc esp
  42f612:	push   0xe
  42f614:	sbb    dl,bl
  42f616:	jle    0x42f5ec
  42f618:	jo     0x42f5e1
  42f61a:	ss clc 
  42f61c:	popa   
  42f61d:	ins    BYTE PTR es:[edi],dx
  42f61e:	int    0xef
  42f620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f621:	pop    es
  42f622:	repnz rcr DWORD PTR [esi-0x13],1
  42f626:	(bad)  
  42f627:	shl    BYTE PTR [ebx],1
  42f629:	inc    ebp
  42f62a:	sbb    DWORD PTR [ecx],ecx
  42f62c:	addr16 popa 
  42f62e:	mul    esi
  42f630:	int3   
  42f631:	add    ecx,DWORD PTR [edx]
  42f633:	mov    dl,0x1
  42f635:	int    0xd1
  42f637:	inc    ebx
  42f638:	cdq    
  42f639:	sub    esi,DWORD PTR [ecx-0x647f4b19]
  42f63f:	push   edx
  42f640:	aad    0x0
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    dh,BYTE PTR [edi+edi*8+0x1f]
  42f6c3:	xor    DWORD PTR [ebx-0xc],esp
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [edx],ch
  42f6cd:	ins    BYTE PTR es:[edi],dx
  42f6ce:	push   es
  42f6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6d0:	js     0x42f696
  42f6d2:	int3   
  42f6d3:	jp     0x42f6c8
  42f6d5:	pop    esi
  42f6d6:	mov    esi,0xdc01b80
  42f6db:	ss fcmovb st,st(7)
  42f6de:	shl    bl,1
  42f6e0:	fistp  QWORD PTR [ecx]
  42f6e2:	xchg   dl,cl
  42f6e4:	jmp    0xaecf:0x2d954ff0
  42f6eb:	mov    ds:0x7863d978,al
  42f6f0:	shr    eax,0xf4
  42f6f3:	inc    ebx
  42f6f4:	inc    ecx
  42f6f5:	jns    0x42f772
  42f6f7:	and    al,0x2a
  42f6f9:	lods   eax,DWORD PTR ds:[esi]
  42f6fa:	popf   
  42f6fb:	xlat   BYTE PTR ds:[ebx]
  42f6fc:	out    0x4e,al
  42f6fe:	xor    ch,BYTE PTR [ecx-0x1b]
  42f701:	dec    edx
  42f702:	stc    
  42f703:	retf   
  42f704:	jle    0x42f74d
  42f706:	or     bl,BYTE PTR ds:0xdbdaad72
  42f70c:	inc    edx
  42f70d:	push   esp
  42f70e:	stos   BYTE PTR es:[edi],al
  42f70f:	xchg   ebx,eax
  42f710:	adc    al,0x2f
  42f712:	inc    ebx
  42f713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f714:	test   BYTE PTR [edi+ebx*4-0x43],ah
  42f718:	loope  0x42f76c
  42f71a:	pop    esp
  42f71b:	retf   0x7b2c
  42f71e:	ret    
  42f71f:	push   0xa71415c1
  42f724:	addr16 dec ebx
  42f726:	cmp    dh,BYTE PTR [edx-0x4a625a86]
  42f72c:	dec    DWORD PTR [eax+0x7dda2d72]
  42f732:	mov    es,WORD PTR [ebx-0x24]
  42f735:	lock mov bh,0xc2
  42f738:	enter  0xcad1,0x40
  42f73c:	aaa    
  42f73d:	rol    BYTE PTR [ecx],1
  42f73f:	fdivr  QWORD PTR [edx+0x36]
  42f742:	pop    edx
  42f743:	cmc    
  42f744:	sti    
  42f745:	imul   esi,DWORD PTR [edi],0x19
  42f748:	out    dx,al
  42f749:	jno    0x42f6d3
  42f74b:	dec    esi
  42f74c:	cmc    
  42f74d:	mov    ebx,0xfb1c8c64
  42f752:	mov    eax,ds:0xe39d6f63
  42f757:	mov    WORD PTR [ecx],fs
  42f759:	push   ds
  42f75a:	jg     0x42f6e8
  42f75c:	imul   ebx,DWORD PTR [esi+ebp*4-0x48],0xef8e6f1b
  42f764:	adc    al,BYTE PTR ds:0x78b4bd08
  42f76a:	jg     0x42f766
  42f76c:	retf   0x2e67
  42f76f:	xlat   BYTE PTR ds:[ebx]
  42f770:	mov    cl,0xfb
  42f772:	fstp   DWORD PTR [esi-0x17]
  42f775:	pfpnacc mm1,mm6
  42f779:	mov    esi,edx
  42f77b:	sar    dl,1
  42f77d:	nop
  42f77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f77f:	inc    ecx
  42f780:	jns    0x42f7de
  42f782:	loop   0x42f7c8
  42f784:	sub    al,0x36
  42f786:	stc    
  42f787:	sbb    BYTE PTR [edx],al
  42f789:	out    0xf6,eax
  42f78b:	push   es
  42f78c:	sub    al,0x4d
  42f78e:	push   ecx
  42f78f:	or     ch,bl
  42f791:	pushf  
  42f792:	xchg   ebx,eax
  42f793:	pop    edi
  42f794:	jns    0x42f732
  42f796:	pusha  
  42f797:	(bad)  
  42f798:	dec    edx
  42f799:	and    DWORD PTR [esi+0x41],0x6
  42f79d:	dec    ebp
  42f79e:	idiv   DWORD PTR [ebp-0x10]
  42f7a1:	sbb    BYTE PTR [eax+0x35],cl
  42f7a4:	outs   dx,DWORD PTR ds:[esi]
  42f7a5:	sub    eax,DWORD PTR [edi+ebx*4+0x3d]
  42f7a9:	push   ebx
  42f7aa:	imul   edi,DWORD PTR [eax-0x39c4a428],0xffffffdb
  42f7b1:	mov    eax,esi
  42f7b3:	mov    al,ds:0x1b3d526a
  42f7b8:	xchg   edi,eax
  42f7b9:	(bad)  [ecx-0x5c]
  42f7bc:	mov    eax,ds:0x94a5734c
	...
  42f831:	add    BYTE PTR [eax],al
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x36af3771]
  42f841:	fs mov edi,eax
  42f844:	pop    eax
  42f845:	cmc    
  42f846:	add    DWORD PTR [eax],eax
  42f848:	cmc    
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    dl,dh
  42f84d:	add    al,0x67
  42f84f:	or     BYTE PTR [esi-0x2e],0xc5
  42f853:	ds mov ss,ebx
  42f856:	sbb    edx,edx
  42f858:	ror    DWORD PTR [ebp+0x72],1
  42f85b:	popf   
  42f85c:	fnstenv [eax-0x5]
  42f85f:	xchg   edi,eax
  42f860:	and    al,0xfb
  42f862:	mov    ecx,0x10917168
  42f867:	rol    ecx,0x0
  42f86a:	push   ecx
  42f86b:	popf   
  42f86c:	adc    al,0x1f
  42f86e:	fisub  DWORD PTR [edx]
  42f870:	inc    edx
  42f871:	jl     0x42f8f2
  42f873:	repz xor ecx,ebx
  42f876:	mov    ecx,0x974c6ba5
  42f87b:	xchg   BYTE PTR [edi-0x73],dl
  42f87e:	push   ebp
  42f87f:	inc    esp
  42f880:	jp     0x42f8c5
  42f882:	inc    edi
  42f883:	jge    0x42f829
  42f885:	enter  0x6862,0x29
  42f889:	jp     0x42f89b
  42f88b:	pop    ecx
  42f88c:	arpl   WORD PTR [ebx-0x26],di
  42f88f:	jne    0x42f855
  42f891:	jmp    0xa993:0x1c3c1414
  42f898:	lods   al,BYTE PTR ds:[esi]
  42f899:	xchg   BYTE PTR [ebx+0x7317623f],bl
  42f89f:	pop    ss
  42f8a0:	pop    ebx
  42f8a1:	mov    bl,0x82
  42f8a3:	lods   eax,DWORD PTR ds:[esi]
  42f8a4:	sbb    edi,edx
  42f8a6:	xlat   BYTE PTR ds:[ebx]
  42f8a7:	lods   al,BYTE PTR ds:[esi]
  42f8a8:	sti    
  42f8a9:	mov    ebp,DWORD PTR ds:0xeb422f71
  42f8af:	retf   0x1f47
  42f8b2:	add    dl,BYTE PTR [eax-0x25]
  42f8b5:	or     al,0x35
  42f8b7:	pop    ebp
  42f8b8:	add    al,0xd1
  42f8ba:	call   0xb331:0x7108832a
  42f8c1:	aas    
  42f8c2:	sbb    bh,al
  42f8c4:	push   0xbe9dd209
  42f8c9:	pop    ss
  42f8ca:	bound  eax,QWORD PTR [eax-0x4a]
  42f8cd:	mov    dh,0xe8
  42f8cf:	jnp    0x42f919
  42f8d1:	(bad)  
  42f8d2:	jg     0x42f919
  42f8d4:	(bad)  
  42f8d5:	lods   al,BYTE PTR ds:[esi]
  42f8d6:	or     DWORD PTR [edi+ebp*4+0x46d72893],eax
  42f8dd:	jmp    0x7e37bbd5
  42f8e2:	push   esi
  42f8e3:	sub    BYTE PTR [ebx+ebp*1-0x5e],dh
  42f8e7:	xchg   esp,eax
  42f8e8:	daa    
  42f8e9:	hlt    
  42f8ea:	and    DWORD PTR ss:[eax-0x1c],eax
  42f8ee:	mov    dl,BYTE PTR [edi]
  42f8f0:	clc    
  42f8f1:	aam    0x25
  42f8f3:	sub    ebp,DWORD PTR [edx-0x301a5770]
  42f8f9:	mov    ecx,DWORD PTR [edx-0x65]
  42f8fc:	lds    edi,FWORD PTR [edx]
  42f8fe:	push   0x4227bd2d
  42f903:	inc    edi
  42f904:	fistp  QWORD PTR [edx-0x624a8e83]
  42f90a:	or     BYTE PTR [eax+0x44],bh
  42f90d:	bound  esp,QWORD PTR [ebp-0x107abe11]
  42f913:	inc    BYTE PTR [edi+0x3d]
  42f916:	sub    ah,BYTE PTR [ebx]
  42f918:	or     al,0xca
  42f91a:	leave  
  42f91b:	retf   
  42f91c:	call   0x7d51:0xa65b1a38
  42f923:	cmc    
  42f924:	xchg   esi,eax
  42f925:	cmp    DWORD PTR [edx-0x3],edx
  42f928:	rcr    DWORD PTR [esi-0x14861d22],0x50
  42f92f:	xlat   BYTE PTR ds:[ebx]
  42f930:	js     0x42f908
  42f932:	cmp    al,0x37
  42f934:	mov    ch,0x10
  42f936:	mov    ebx,0x1e1d361e
  42f93b:	retf   
  42f93c:	out    0xc2,eax
  42f93e:	pop    es
  42f93f:	scas   al,BYTE PTR es:[edi]
  42f940:	add    BYTE PTR gs:[eax],al
	...
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	mov    bl,0xec
  42f9c2:	pop    eax
  42f9c3:	ds dec ebp
  42f9c5:	test   BYTE PTR [ecx],0x0
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    dh,ah
  42f9cd:	add    ch,bh
  42f9cf:	mov    al,ds:0xdd988d4
  42f9d4:	xor    eax,0x3b6eeb50
  42f9d9:	jmp    0x941d:0x6919b4ac
  42f9e0:	js     0x42f9e3
  42f9e2:	and    al,0xa8
  42f9e4:	addr16 jmp 0x42f970
  42f9e7:	in     eax,dx
  42f9e8:	enter  0x8025,0xbd
  42f9ec:	lock fdivr QWORD PTR [ebp-0x4ae17c46]
  42f9f3:	shl    DWORD PTR [ebx+0x3b],cl
  42f9f6:	mov    ebp,0xbb1d97dd
  42f9fb:	dec    esp
  42f9fc:	iret   
  42f9fd:	mov    esi,0xf5d2dce6
  42fa02:	fsincos 
  42fa04:	(bad)  
  42fa05:	mov    ebp,0xa70f5ecb
  42fa0a:	or     dh,BYTE PTR [esp+eiz*4-0x48]
  42fa0e:	xchg   ebp,eax
  42fa0f:	cmc    
  42fa10:	ins    BYTE PTR es:[edi],dx
  42fa11:	enter  0x49ca,0x55
  42fa15:	ss in  al,0x34
  42fa18:	stc    
  42fa19:	sbb    DWORD PTR [ebp+0x56],eax
  42fa1c:	stos   BYTE PTR es:[edi],al
  42fa1d:	add    esp,DWORD PTR [esi-0x5c]
  42fa20:	aas    
  42fa21:	test   DWORD PTR [edx+ebx*4-0x493fdce5],ebp
  42fa28:	paddw  mm4,QWORD PTR [esi]
  42fa2b:	shl    bl,1
  42fa2d:	pop    ds
  42fa2e:	mov    al,0xc2
  42fa30:	call   0x85a575d4
  42fa35:	mov    cl,0x6d
  42fa37:	daa    
  42fa38:	xor    BYTE PTR [esi-0x6d],0xf5
  42fa3c:	shl    BYTE PTR [ecx],0x1b
  42fa3f:	push   ecx
  42fa40:	nop
  42fa41:	xchg   ch,bl
  42fa43:	sub    al,0x21
  42fa45:	jmp    0x2f37:0xeeddb34c
  42fa4c:	pop    ebp
  42fa4d:	test   esp,0xb14e4603
  42fa53:	lods   eax,DWORD PTR ds:[esi]
  42fa54:	out    dx,al
  42fa55:	je     0x42fa61
  42fa57:	cli    
  42fa58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa59:	mov    esi,0x52ebf841
  42fa5e:	in     al,dx
  42fa5f:	stos   BYTE PTR es:[edi],al
  42fa60:	aad    0xeb
  42fa62:	and    eax,0x36f5609a
  42fa67:	test   eax,0x657ed207
  42fa6c:	adc    BYTE PTR [ebx],bl
  42fa6e:	dec    edi
  42fa6f:	pop    ss
  42fa70:	nop
  42fa71:	cmp    DWORD PTR [ebp-0x4bae0904],0x3121bea7
  42fa7b:	lock ret 
  42fa7d:	mov    dh,BYTE PTR [esi+eiz*4]
  42fa80:	dec    edi
  42fa81:	push   edi
  42fa82:	hlt    
  42fa83:	pop    ss
  42fa84:	stos   BYTE PTR es:[edi],al
  42fa85:	pop    esi
  42fa86:	repnz lods eax,DWORD PTR ds:[esi]
  42fa88:	sti    
  42fa89:	or     al,BYTE PTR [edi]
  42fa8b:	mov    ds:0xe49df95b,eax
  42fa90:	xor    BYTE PTR [edi+0x5],ah
  42fa93:	popf   
  42fa94:	dec    ecx
  42fa95:	or     bl,BYTE PTR [ecx-0x3c742bc0]
  42fa9b:	jmp    0x59df:0x65345cb3
  42faa2:	push   edx
  42faa3:	into   
  42faa4:	dec    edi
  42faa5:	push   0xffffffaf
  42faa7:	jns    0x42fae4
  42faa9:	and    al,0x98
  42faab:	outs   dx,DWORD PTR ds:[esi]
  42faac:	nop
  42faad:	sbb    BYTE PTR [ebx+0x6c],ah
  42fab0:	(bad)  
  42fab1:	sti    
  42fab2:	adc    ebx,edi
  42fab4:	iret   
  42fab5:	or     al,0xe0
  42fab7:	imul   dh
  42fab9:	in     al,dx
  42faba:	cld    
  42fabb:	fwait
  42fabc:	sbb    BYTE PTR [eax],0x66
  42fabf:	mov    al,BYTE PTR es:[eax]
	...
  42fb32:	add    BYTE PTR [eax],al
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	cmp    al,BYTE PTR [edx]
  42fb42:	ss dec edi
  42fb44:	inc    edx
  42fb45:	test   DWORD PTR [ecx],0xf500
  42fb4b:	add    dl,cl
  42fb4d:	lods   al,BYTE PTR ds:[esi]
  42fb4e:	push   edi
  42fb4f:	sbb    al,0x68
  42fb51:	dec    ebp
  42fb52:	push   esp
  42fb53:	and    BYTE PTR [eax],al
  42fb55:	dec    ebp
  42fb56:	mov    ah,BYTE PTR [ebx+0x4a]
  42fb59:	sahf   
  42fb5a:	push   ss
  42fb5b:	mov    eax,DWORD PTR [esi+esi*1]
  42fb5e:	dec    ebp
  42fb5f:	jo     0x42fbb3
  42fb61:	iret   
  42fb62:	ret    
  42fb63:	sbb    ecx,DWORD PTR [esi]
  42fb65:	fsubr  DWORD PTR [ebp+0x3f911ab9]
  42fb6b:	jo     0x42fbe5
  42fb6d:	jns    0x42fb43
  42fb6f:	fldl2e 
  42fb71:	pop    ebp
  42fb72:	in     eax,dx
  42fb73:	or     cl,BYTE PTR [edx-0x52]
  42fb76:	jne    0x42fb3b
  42fb78:	and    dx,WORD PTR [esi+esi*1]
  42fb7c:	or     DWORD PTR [ebp+0x60],ebp
  42fb7f:	in     al,0x94
  42fb81:	mov    bl,0x5d
  42fb83:	jecxz  0x42fbb8
  42fb85:	jb     0x42fb68
  42fb87:	or     eax,0x8d2add0
  42fb8c:	adc    bh,BYTE PTR [ecx]
  42fb8e:	cli    
  42fb8f:	pop    edx
  42fb90:	or     ah,0xb8
  42fb93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb94:	and    edx,esp
  42fb96:	adc    ch,BYTE PTR [edx-0x74]
  42fb99:	ret    0xa32b
  42fb9c:	mov    cl,BYTE PTR [esi+0x30]
  42fb9f:	sbb    al,0xe4
  42fba1:	imul   ecx,DWORD PTR [ebp-0x563d2455],0x42
  42fba8:	dec    esi
  42fba9:	xor    BYTE PTR [ebx],bl
  42fbab:	dec    ebx
  42fbac:	daa    
  42fbad:	jae    0x42fb51
  42fbaf:	dec    eax
  42fbb0:	call   0xd99a:0x4ce3a3a7
  42fbb7:	push   ss
  42fbb8:	shr    cl,cl
  42fbba:	in     al,0xd8
  42fbbc:	xchg   DWORD PTR [esp+eiz*8-0x341d137],edi
  42fbc3:	stc    
  42fbc4:	pop    ds
  42fbc5:	cmp    edi,DWORD PTR [ecx-0x1f]
  42fbc8:	jp     0x42fbc0
  42fbca:	mov    dl,0xfc
  42fbcc:	lock enter 0x879b,0x40
  42fbd1:	xlat   BYTE PTR ds:[ebx]
  42fbd2:	stos   DWORD PTR es:[edi],eax
  42fbd3:	sti    
  42fbd4:	popa   
  42fbd5:	bound  esi,QWORD PTR gs:[eax+0x67]
  42fbd9:	dec    edx
  42fbda:	jnp    0x42fc56
  42fbdc:	or     esi,ecx
  42fbde:	(bad)  
  42fbdf:	and    ah,ch
  42fbe1:	add    BYTE PTR [eax],dl
  42fbe3:	push   esp
  42fbe4:	jae    0x42fc3c
  42fbe6:	jbe    0x42fb6b
  42fbe8:	sbb    al,0xfc
  42fbea:	and    BYTE PTR [ebx],dl
  42fbec:	aaa    
  42fbed:	inc    edx
  42fbee:	sbb    BYTE PTR [ecx+0x10b27695],0xa6
  42fbf5:	shl    cl,cl
  42fbf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbf8:	lods   al,BYTE PTR ds:[esi]
  42fbf9:	das    
  42fbfa:	mov    al,ds:0x56018b0c
  42fbff:	shr    BYTE PTR [ebx-0x6e555b83],cl
  42fc05:	mov    dl,0x2f
  42fc07:	xor    BYTE PTR [esi],ch
  42fc09:	push   cs
  42fc0a:	mov    edi,DWORD PTR [ebx-0x4b6e9197]
  42fc10:	outs   dx,DWORD PTR ds:[esi]
  42fc11:	or     eax,0x3bf4b0ed
  42fc16:	xor    dl,al
  42fc18:	int3   
  42fc19:	sub    esp,DWORD PTR [edx+0xb69295a]
  42fc1f:	test   BYTE PTR [ebx],ah
  42fc21:	dec    ebp
  42fc22:	xchg   esp,eax
  42fc23:	pop    ebp
  42fc24:	adc    edx,DWORD PTR [eax]
  42fc26:	int    0x27
  42fc28:	dec    edi
  42fc29:	pop    ds
  42fc2a:	(bad)  
  42fc2b:	cli    
  42fc2c:	sbb    BYTE PTR [esi+0x4b801eb9],0xaf
  42fc33:	jecxz  0x42fc1c
  42fc35:	daa    
  42fc36:	push   esp
  42fc37:	cmp    edi,ebx
  42fc39:	push   ebp
  42fc3a:	test   DWORD PTR [esi+0x128cb8b3],esi
  42fc40:	mov    edi,0x0
	...
  42fcb1:	add    BYTE PTR [eax],al
  42fcb3:	add    BYTE PTR [edx],ch
  42fcb5:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42fcbb:	test   BYTE PTR [ecx+0x6eb95c3c],0x2
  42fcc2:	cmp    al,BYTE PTR [eax+0x1f837]
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    BYTE PTR [ecx],ah
  42fccd:	mov    ecx,0xd149ca91
  42fcd2:	cli    
  42fcd3:	xchg   ecx,eax
  42fcd4:	xor    BYTE PTR [ecx+0x1be28bca],dl
  42fcda:	jns    0x42fcb5
  42fcdc:	in     eax,dx
  42fcdd:	jmp    0xf6:0x2cc5948d
  42fce4:	mov    edi,0x272957ca
  42fce9:	push   eax
  42fcea:	cdq    
  42fceb:	loope  0x42fc6f
  42fced:	pop    ebx
  42fcee:	mov    ebp,0xf0be9b9e
  42fcf3:	push   edx
  42fcf4:	xchg   cl,dh
  42fcf6:	or     ecx,ebx
  42fcf8:	fisubr WORD PTR [edi+0x2c491fa6]
  42fcfe:	(bad)
  42fd01:	icebp  
  42fd02:	retf   
  42fd03:	xchg   BYTE PTR ds:0xe74f0757,bh
  42fd09:	outs   dx,DWORD PTR ds:[esi]
  42fd0a:	int3   
  42fd0b:	push   ebx
  42fd0c:	xchg   ecx,eax
  42fd0d:	daa    
  42fd0e:	fcomp  DWORD PTR [ecx+0x296abc1a]
  42fd14:	aaa    
  42fd15:	arpl   WORD PTR [edx],dx
  42fd17:	in     al,0xb4
  42fd19:	mov    ds,esp
  42fd1b:	stc    
  42fd1c:	loope  0x42fd6b
  42fd1e:	ins    DWORD PTR es:[edi],dx
  42fd1f:	addr16 enter 0xde34,0x32
  42fd24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd25:	arpl   WORD PTR [ebp+0x13f7dc6c],bp
  42fd2b:	div    BYTE PTR [esi]
  42fd2d:	(bad)  
  42fd2e:	aam    0xdb
  42fd30:	jle    0x42fd6b
  42fd32:	jmp    0x329c:0x47e4446a
  42fd39:	mov    eax,ds:0x55c04b81
  42fd3e:	jae    0x42fd6d
  42fd40:	xchg   edx,eax
  42fd41:	outs   dx,DWORD PTR ds:[esi]
  42fd42:	repnz pop esp
  42fd44:	sub    ebp,DWORD PTR [ebp+eiz*2+0x37163d12]
  42fd4b:	xchg   edi,eax
  42fd4c:	jns    0x42fd94
  42fd4e:	das    
  42fd4f:	mov    eax,ds:0x2c981dd0
  42fd54:	jecxz  0x42fcf9
  42fd56:	retf   0x8748
  42fd59:	cdq    
  42fd5a:	mov    dh,0x70
  42fd5c:	sar    DWORD PTR [ecx],0x5d
  42fd5f:	add    eax,0xcd4fa80c
  42fd64:	retf   
  42fd65:	jbe    0x42fced
  42fd67:	sub    esi,DWORD PTR ds:0x173d5066
  42fd6d:	mov    DWORD PTR [edi],ecx
  42fd6f:	push   edi
  42fd70:	in     al,0xd5
  42fd72:	inc    ecx
  42fd73:	mov    ah,bh
  42fd75:	out    0x3c,eax
  42fd77:	xchg   esi,eax
  42fd78:	push   ds
  42fd79:	add    cl,BYTE PTR [edx]
  42fd7b:	xor    al,0x3b
  42fd7d:	and    DWORD PTR [ebx],ebp
  42fd7f:	add    BYTE PTR [ebp+0x77],bh
  42fd82:	pop    ds
  42fd83:	push   ebp
  42fd84:	or     BYTE PTR ss:0xe1aa1eb3,cl
  42fd8b:	jge    0x42fd93
  42fd8d:	lahf   
  42fd8e:	or     DWORD PTR [ebp-0x46],edx
  42fd91:	sbb    esp,DWORD PTR gs:[eax+ecx*1-0x5c]
  42fd96:	pop    ss
  42fd97:	xchg   BYTE PTR ds:0x85259ece,ah
  42fd9d:	std    
  42fd9e:	bound  ebx,QWORD PTR [ebx-0x5fe933a5]
  42fda4:	jbe    0x42fdf2
  42fda6:	jnp    0x42fda2
  42fda8:	aam    0xe7
  42fdaa:	add    ebp,DWORD PTR [ecx]
  42fdac:	xor    BYTE PTR [esi+0x6b],bl
  42fdaf:	push   esi
  42fdb0:	push   ebp
  42fdb1:	pop    ds
  42fdb2:	mov    bh,0xb9
  42fdb4:	icebp  
  42fdb5:	pop    ebp
  42fdb6:	xchg   DWORD PTR [ebx+0x106b33da],esp
  42fdbc:	fidivr DWORD PTR [eax]
  42fdbe:	(bad)
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	xchg   ecx,eax
  42fe41:	sub    BYTE PTR [ebx],al
  42fe43:	dec    edi
  42fe44:	sub    al,0xf9
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [edi+eax*1],ah
  42fe4e:	std    
  42fe4f:	fisubr WORD PTR [ebx+0x3cf317ce]
  42fe55:	fidiv  DWORD PTR [ebp-0x4b]
  42fe58:	ins    BYTE PTR es:[edi],dx
  42fe59:	mov    esp,0x7a12da98
  42fe5e:	cmp    esi,DWORD PTR [eax+edx*8-0x60]
  42fe62:	mov    ds:0x33cf3fc8,al
  42fe67:	(bad)
  42fe6b:	cmp    DWORD PTR [edx+edx*4],esi
  42fe6e:	scas   al,BYTE PTR es:[edi]
  42fe6f:	and    si,WORD PTR [ecx]
  42fe72:	jne    0x42fed6
  42fe74:	or     eax,esp
  42fe76:	dec    ebx
  42fe77:	push   ds
  42fe78:	sbb    ebx,DWORD PTR [ebx*1-0x1f1ac128]
  42fe7f:	pop    ss
  42fe80:	mov    esi,0xc50efe6c
  42fe85:	ror    edi,1
  42fe87:	jle    0x42fecb
  42fe89:	pusha  
  42fe8a:	mov    dh,0x23
  42fe8c:	mov    DWORD PTR [ecx+0x32],ebp
  42fe8f:	in     al,0x6a
  42fe91:	cs mov edx,0x72fd7058
  42fe97:	pop    ecx
  42fe98:	or     BYTE PTR [ebx],ah
  42fe9a:	xchg   ecx,eax
  42fe9b:	sub    eax,0x12d9aacb
  42fea0:	bound  eax,QWORD PTR [ebx+0x66]
  42fea3:	dec    edi
  42fea4:	fwait
  42fea5:	addps  xmm6,XMMWORD PTR [ecx+0x7864290]
  42feac:	fidivr WORD PTR [eax+0x44]
  42feaf:	xchg   edx,eax
  42feb0:	lds    ebx,FWORD PTR [esi+ecx*4-0x5b92f055]
  42feb7:	lods   al,BYTE PTR ds:[esi]
  42feb8:	xor    bl,BYTE PTR [ebx+eiz*4+0xa1898e4]
  42febf:	jl     0x42ff10
  42fec1:	mov    DWORD PTR [ecx],edx
  42fec3:	test   DWORD PTR [eax-0x236b381c],edi
  42fec9:	(bad)  
  42feca:	cld    
  42fecb:	div    BYTE PTR [edx+edi*8]
  42fece:	(bad)  
  42fecf:	hlt    
  42fed0:	scas   eax,DWORD PTR es:[edi]
  42fed1:	pop    es
  42fed2:	repz jbe 0x42fee6
  42fed5:	retf   0x8995
  42fed8:	shl    ch,0xe
  42fedb:	outs   dx,BYTE PTR ds:[esi]
  42fedc:	cs out dx,eax
  42fede:	cli    
  42fedf:	aas    
  42fee0:	fiadd  WORD PTR [ecx]
  42fee2:	cmp    eax,0x96ffb0a9
  42fee7:	inc    edx
  42fee8:	xor    eax,0x53eedf80
  42feed:	pushf  
  42feee:	push   ebp
  42feef:	pop    es
  42fef0:	fnstsw WORD PTR [esi]
  42fef2:	in     eax,0xd7
  42fef4:	mov    esi,0xa5db5f33
  42fef9:	inc    esp
  42fefa:	jo     0x42ff62
  42fefc:	(bad)  
  42fefd:	fsubr  QWORD PTR [eax-0x79]
  42ff00:	inc    eax
  42ff01:	in     eax,0x6c
  42ff03:	daa    
  42ff04:	cmp    ah,BYTE PTR [ecx+0x6f4025f6]
  42ff0a:	sub    eax,0x8412f55c
  42ff0f:	adc    BYTE PTR [ecx+esi*1+0x3],bh
  42ff13:	jb     0x42ff59
  42ff15:	lea    ebx,[eax+ebx*4]
  42ff18:	inc    ebx
  42ff19:	neg    DWORD PTR [ebp-0x7d793630]
  42ff1f:	mov    esp,0xa2374f9a
  42ff24:	rol    BYTE PTR [eax-0x62],cl
  42ff27:	push   cs
  42ff28:	push   eax
  42ff2a:	jmp    0x8272c233
  42ff2f:	jno    0x42feec
  42ff31:	scas   eax,DWORD PTR es:[edi]
  42ff32:	scas   eax,DWORD PTR es:[edi]
  42ff33:	fs ret 0x29e3
  42ff37:	sbb    esi,DWORD PTR [edx]
  42ff39:	outs   dx,DWORD PTR ds:[esi]
  42ff3a:	push   0xffffffa4
  42ff3c:	and    eax,0x8c456ae
	...
  42ffb1:	add    BYTE PTR [eax],al
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x4e768016]
  42ffc1:	add    eax,0xfa21e0be
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [ebx+eiz*8-0x38],cl
  42ffcf:	adc    bl,BYTE PTR fs:[ecx+0x1]
  42ffd3:	in     al,0x22
  42ffd5:	add    al,0xae
  42ffd7:	fistp  DWORD PTR [ebp+ebp*2-0x12a4371d]
  42ffde:	(bad)  
  42ffdf:	cli    
  42ffe0:	push   es
  42ffe1:	les    esp,FWORD PTR [ebp-0x5b7210f0]
  42ffe7:	aad    0xfb
  42ffe9:	repnz imul edx,DWORD PTR [edi],0x2eef5698
  42fff0:	jmp    0x20f5:0x6cf1ce4e
  42fff7:	sahf   
  42fff8:	ret    
  42fff9:	push   ss
  42fffa:	or     al,BYTE PTR [ecx]
  42fffc:	int    0x7
  42fffe:	xlat   BYTE PTR ds:[ebx]
  42ffff:	inc    esp
  430000:	loopne 0x430060
  430002:	adc    DWORD PTR cs:[edi-0x12868268],0x5337e048
  43000d:	adc    edi,ecx
  43000f:	call   0x197e970
  430014:	shl    DWORD PTR [ebx],1
  430016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430017:	push   edx
  430018:	push   ebp
  430019:	jb     0x42ffe4
  43001b:	mov    ebp,0x5ef67f21
  430020:	cdq    
  430021:	mov    ds:0xe58b66d6,al
  430026:	mov    ah,0x23
  430028:	mov    BYTE PTR [ebx+esi*8+0x435118ec],al
  43002f:	fmul   DWORD PTR [esi]
  430031:	mov    edi,0xbe39ce7a
  430036:	imul   eax,DWORD PTR [eax+ebp*2-0x5],0x3f931478
  43003e:	add    bl,BYTE PTR [ebp+0x5f]
  430041:	mov    ebp,0xe952d54
  430046:	add    BYTE PTR [ebx],dl
  430048:	fild   WORD PTR [edi+ebx*4-0x46]
  43004c:	sbb    eax,0xf21ecb66
  430051:	(bad)  es:[eax]
  430054:	mov    ch,0x20
  430056:	lahf   
  430057:	test   ecx,edx
  430059:	fcmovnb st,st(0)
  43005b:	jae    0x430024
  43005d:	stos   DWORD PTR es:[edi],eax
  43005e:	icebp  
  43005f:	sub    dl,bl
  430061:	jge    0x43003e
  430063:	adc    ebp,DWORD PTR [ebp-0x1c2a5179]
  430069:	pop    ss
  43006a:	adc    BYTE PTR [esi],bl
  43006c:	sub    DWORD PTR [edi-0x7367197c],0xffffffe8
  430073:	repnz mov ebx,0xe5562a65
  430079:	cld    
  43007a:	cwde   
  43007b:	imul   edi,DWORD PTR [edx],0x50
  43007e:	les    esp,FWORD PTR [ecx-0x2b733182]
  430084:	jle    0x4300d4
  430086:	pop    ds
  430087:	retf   
  430088:	xor    ebp,DWORD PTR [ebx-0x58]
  43008b:	loope  0x4300af
  43008d:	sub    bh,BYTE PTR [edx+0x23920dbc]
  430093:	inc    ebx
  430094:	push   esi
  430095:	jbe    0x430046
  430097:	jmp    0x430103
  430099:	inc    edx
  43009a:	jmp    0xb1df:0xaeccb770
  4300a1:	leave  
  4300a2:	ret    
  4300a3:	retf   0x1c99
  4300a6:	add    DWORD PTR [ebp-0x24ca7874],0x31c3c191
  4300b0:	out    dx,eax
  4300b1:	adc    al,0xb0
  4300b3:	sbb    al,0x1f
  4300b5:	jecxz  0x4300a3
  4300b7:	fucomi st,st(3)
  4300b9:	xor    DWORD PTR [esp+edx*2+0xbc324af],esp
  4300c0:	xchg   esp,eax
	...
  430131:	add    BYTE PTR [eax],al
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x4fae:0x2635a608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    BYTE PTR [esi],dh
  43014d:	mov    al,0xb6
  43014f:	cmp    BYTE PTR [edx],0x3e
  430152:	mov    ch,0x4c
  430154:	or     DWORD PTR [edx-0x6e78b1e7],ebx
  43015a:	jo     0x430134
  43015c:	push   edx
  43015d:	pop    esi
  43015e:	mov    DWORD PTR [ecx+0x6e],edi
  430161:	ds mov ebx,0x1feabfaf
  430167:	inc    eax
  430168:	or     eax,0x2d23c19c
  43016d:	dec    ecx
  43016e:	int    0xaa
  430170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430171:	jo     0x430128
  430173:	cmp    BYTE PTR [esi+0x34],dl
  430176:	xor    DWORD PTR [eax+0x77],edi
  430179:	stos   BYTE PTR es:[edi],al
  43017a:	push   esp
  43017b:	ret    
  43017c:	lock mov bl,0x94
  43017f:	jb     0x4301e1
  430181:	out    0x2f,eax
  430183:	or     al,al
  430185:	(bad)  
  430186:	push   ss
  430187:	inc    esp
  430188:	aas    
  430189:	ja     0x430144
  43018b:	cmp    DWORD PTR [ebp-0x4dadb930],edi
  430191:	retf   0xa30f
  430194:	rcr    edx,0x8f
  430197:	mov    eax,0xbfa4747a
  43019c:	sub    eax,ebx
  43019e:	(bad)  
  43019f:	and    ch,BYTE PTR [esi]
  4301a1:	mov    edx,0x4ff20072
  4301a6:	pop    eax
  4301a7:	in     al,dx
  4301a8:	sbb    esp,ecx
  4301aa:	jns    0xe31930bd
  4301b0:	pop    esp
  4301b1:	mov    ecx,db1
  4301b4:	dec    esi
  4301b5:	(bad)  
  4301b6:	mov    ebx,0x79af4633
  4301bb:	call   0x5dc8b136
  4301c0:	push   es
  4301c1:	and    bh,bh
  4301c3:	mov    dl,0x58
  4301c5:	mov    al,ds:0x4df3f99f
  4301ca:	loop   0x4301a3
  4301cc:	js     0x43018f
  4301ce:	stos   DWORD PTR es:[edi],eax
  4301cf:	popf   
  4301d0:	stos   DWORD PTR es:[edi],eax
  4301d1:	adc    eax,ecx
  4301d3:	(bad)  
  4301d4:	or     BYTE PTR [edi-0x3aced0a8],dl
  4301da:	int    0xd9
  4301dc:	mov    BYTE PTR [edi+0x1c129c7c],dh
  4301e2:	jnp    0x4301a3
  4301e4:	mov    ah,BYTE PTR [eax+edi*1-0x4f]
  4301e8:	pop    ds
  4301e9:	or     eax,0x3e7da481
  4301ee:	cwde   
  4301ef:	frstor [ecx+esi*2+0x48c267de]
  4301f6:	sub    bh,al
  4301f8:	into   
  4301f9:	imul   esi,DWORD PTR [ebp+0x72],0x50
  4301fd:	shl    DWORD PTR [ebx+esi*8+0x2f],cl
  430201:	or     ebp,DWORD PTR [edx]
  430203:	in     al,dx
  430204:	out    dx,al
  430205:	cmc    
  430206:	pop    ecx
  430207:	xchg   ecx,eax
  430208:	nop
  430209:	push   ebp
  43020a:	jne    0x4301c7
  43020c:	call   0x220a1993
  430211:	and    al,0xa
  430213:	lds    esp,FWORD PTR [esi+0x4937e93a]
  430219:	adc    dl,BYTE PTR [ebx-0x61]
  43021c:	scas   eax,DWORD PTR es:[edi]
  43021d:	dec    eax
  43021e:	(bad)  
  43021f:	fiadd  WORD PTR [esi-0x5c20a793]
  430225:	add    esi,esi
  430227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430228:	imul   esp,eax,0xb016be8f
  43022e:	mov    ch,0xc5
  430230:	jg     0x430243
  430232:	in     eax,dx
  430233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430234:	data16 fmul st(4),st
  430237:	aad    0x79
  430239:	jp     0x4302a4
  43023b:	xchg   BYTE PTR [ebx+0x76],ch
  43023e:	xor    cl,bh
  430240:	pop    ss
	...
  4302b1:	add    BYTE PTR [eax],al
  4302b3:	add    BYTE PTR [ebp-0x5075f7e6],bh
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	sub    BYTE PTR [esi],bl
  4302c2:	push   ebp
  4302c3:	ror    DWORD PTR [ebx],0xfc
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [ebp+0x14f4978e],dl
  4302d1:	pop    ds
  4302d2:	mov    DWORD PTR [ecx],edi
  4302d4:	imul   eax,DWORD PTR ds:0xe7fe9287,0x5
  4302db:	gs mov esp,0x8f89a917
  4302e1:	shl    eax,cl
  4302e3:	repnz cmp BYTE PTR [esi+ecx*4-0x4af5c62a],dh
  4302eb:	cmp    edi,DWORD PTR [edi]
  4302ed:	inc    ecx
  4302ee:	adc    edx,DWORD PTR [edi+0x599544ba]
  4302f4:	xor    DWORD PTR [edx],edi
  4302f6:	mov    edx,0xb61ff8a5
  4302fb:	jne    0x4302a9
  4302fd:	scas   al,BYTE PTR es:[edi]
  4302fe:	mov    dl,0x61
  430300:	ret    
  430301:	mov    al,0x0
  430303:	cld    
  430304:	jbe    0x43037f
  430306:	hlt    
  430307:	out    dx,eax
  430308:	(bad)  [edi]
  43030a:	xchg   DWORD PTR [esi-0x1668d449],esi
  430310:	sbb    esi,DWORD PTR [ebp-0x6d]
  430313:	xchg   ecx,eax
  430314:	pusha  
  430315:	repnz mov al,ds:0x1d3fdbe0
  43031b:	enter  0x9ada,0x15
  43031f:	dec    esp
  430320:	add    al,0x7b
  430322:	sbb    BYTE PTR [ecx],ah
  430324:	mov    cl,0xf7
  430326:	pusha  
  430327:	mov    eax,ds:0x8cdda0b2
  43032c:	mov    edx,0x455a7927
  430331:	adc    eax,0x21a7b5ce
  430336:	mov    dl,0x7
  430338:	aam    0xfc
  43033a:	dec    eax
  43033b:	stc    
  43033c:	dec    ecx
  43033d:	mov    esp,0x5ef05c13
  430342:	pop    edx
  430343:	call   0x575:0x8899831e
  43034a:	push   ss
  43034b:	mov    ch,0xff
  43034d:	aam    0xb2
  43034f:	cmp    bl,BYTE PTR [edi+0xd]
  430352:	xchg   BYTE PTR [edi+0x15],bh
  430355:	mov    edi,0xa7c481fe
  43035a:	aas    
  43035b:	hlt    
  43035c:	cli    
  43035d:	jns    0x43031e
  43035f:	repz dec edx
  430361:	and    al,0x7e
  430363:	gs lock pop edx
  430366:	mov    ebx,0xc93bd923
  43036b:	sbb    eax,0x63fc5426
  430370:	jbe    0x43038f
  430372:	mov    bl,0x61
  430374:	mov    esi,0x8f7e3d05
  430379:	test   eax,0x384d45a1
  43037e:	nop
  43037f:	inc    edx
  430380:	icebp  
  430381:	lahf   
  430382:	clc    
  430383:	les    ecx,FWORD PTR [esi]
  430385:	pop    eax
  430386:	inc    esp
  430387:	push   esi
  430388:	scas   al,BYTE PTR es:[edi]
  430389:	mov    ch,0x91
  43038b:	cmp    eax,0x5458c88c
  430390:	mov    eax,ds:0x49aefdd0
  430395:	mov    cl,0x16
  430397:	lds    esp,FWORD PTR [esi-0xc2075be]
  43039d:	pusha  
  43039e:	lods   al,BYTE PTR ds:[esi]
  43039f:	push   ecx
  4303a0:	fwait
  4303a1:	cmp    ebp,DWORD PTR [edx-0x3bfa7e4d]
  4303a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303a8:	sub    eax,0x82b3b9b0
  4303ad:	pop    ss
  4303ae:	outs   dx,BYTE PTR ds:[esi]
  4303af:	sbb    BYTE PTR [esi+0x1d9529e4],ah
  4303b5:	mov    ebx,0xc0465504
  4303ba:	mov    ?,WORD PTR [edx+0x1d]
  4303bd:	jge    0x43036a
  4303bf:	(bad)  
  4303c0:	adc    BYTE PTR [eax],al
	...
  430432:	add    BYTE PTR [eax],al
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0xa195e09d
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [ecx+edi*4-0x2],al
  43044f:	cmp    BYTE PTR [esi-0x70],al
  430452:	add    ah,BYTE PTR [ebx-0x75ac571f]
  430458:	inc    esp
  430459:	call   0x42fbbe19
  43045e:	dec    eax
  43045f:	fidiv  WORD PTR [edx+eiz*8+0x33]
  430463:	stos   DWORD PTR es:[edi],eax
  430464:	lds    edi,FWORD PTR [ecx+ecx*8]
  430467:	and    esp,esp
  430469:	mov    cl,0x15
  43046b:	dec    edx
  43046c:	mov    al,ds:0x7a462811
  430471:	add    ecx,DWORD PTR [esi-0x55ceae93]
  430477:	or     dl,BYTE PTR [eax-0x49]
  43047a:	dec    sp
  43047c:	stc    
  43047d:	sbb    al,0xbc
  43047f:	push   eax
  430480:	cdq    
  430481:	adc    al,0x2d
  430483:	lea    ebx,[edi]
  430485:	aam    0xdd
  430487:	add    dl,BYTE PTR [ebx]
  430489:	cmp    eax,0x5e68df3b
  43048e:	ins    BYTE PTR es:[edi],dx
  43048f:	fisubr DWORD PTR [edx-0x3b9621f2]
  430495:	rcr    ebp,0x80
  430498:	cmp    ebx,DWORD PTR [ebp+0x245bf66b]
  43049e:	xchg   ebp,eax
  43049f:	mov    ecx,0x15abe3b8
  4304a4:	(bad)  
  4304a5:	xor    DWORD PTR [edx-0x1ffa91dc],edx
  4304ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4304ac:	adc    eax,0x85f51b6b
  4304b1:	inc    eax
  4304b2:	bound  edi,QWORD PTR [ebx]
  4304b4:	clc    
  4304b5:	pop    edx
  4304b6:	shl    BYTE PTR ds:0xfb8402e,1
  4304bc:	pusha  
  4304bd:	sbb    eax,0xc5dc47fd
  4304c2:	cdq    
  4304c3:	sub    ah,ah
  4304c5:	and    esi,esp
  4304c7:	inc    eax
  4304c8:	fisttp DWORD PTR [edx-0x1d86825e]
  4304ce:	sub    DWORD PTR [ebx+0x38],ebx
  4304d1:	mov    ebp,0xc850f222
  4304d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304d7:	cmp    DWORD PTR ds:0x1e7bd464,ecx
  4304dd:	inc    ebx
  4304de:	loopne 0x430526
  4304e0:	sbb    DWORD PTR ds:0xb3439e34,ecx
  4304e6:	fdivr  st,st(3)
  4304e8:	cmp    eax,0xb947ad5b
  4304ed:	add    dh,BYTE PTR [edx+0x72]
  4304f0:	call   0x4ae5b9df
  4304f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4304f6:	add    eax,0xf4be4d2b
  4304fb:	popa   
  4304fc:	or     DWORD PTR [esp+edx*2],esi
  4304ff:	xchg   esp,eax
  430500:	aas    
  430501:	xor    BYTE PTR [ebx],dh
  430503:	outs   dx,BYTE PTR ds:[esi]
  430504:	test   al,0xa2
  430506:	pop    ds
  430507:	repz cmp DWORD PTR [esi+eax*2],0xfffffff3
  43050c:	dec    edi
  43050d:	daa    
  43050e:	das    
  43050f:	adc    edx,DWORD PTR [esi+0x41]
  430512:	addr16 pusha 
  430514:	mov    ds:0xa07c9e71,al
  430519:	and    DWORD PTR [eax+0x6feb7197],edi
  43051f:	inc    ebx
  430520:	cmp    dh,BYTE PTR [ecx-0x53]
  430523:	push   0x95ef85b5
  430528:	mov    dl,bl
  43052a:	mov    eax,0xbb38f432
  43052f:	mov    ecx,0x3f4f850a
  430534:	sub    cl,dl
  430536:	inc    edi
  430537:	xchg   cl,ch
  430539:	out    dx,al
  43053a:	or     bl,dh
  43053c:	cwde   
  43053d:	dec    eax
  43053e:	in     al,dx
  43053f:	jl     0x430563
	...
  4305b1:	add    BYTE PTR [eax],al
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi+0x3d]
  4305c1:	sahf   
  4305c2:	xlat   BYTE PTR ds:[ebx]
  4305c4:	cmc    
  4305c5:	std    
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [edx],bl
  4305cd:	(bad)  
  4305ce:	push   esi
  4305cf:	pop    edx
  4305d0:	ror    DWORD PTR [edi+0x6a],cl
  4305d3:	mov    esi,ss
  4305d5:	lods   eax,DWORD PTR ds:[esi]
  4305d6:	add    edx,DWORD PTR [ecx]
  4305d8:	mov    fs,WORD PTR [ecx+0x5f]
  4305db:	jmp    0x4305a9
  4305dd:	fldcw  WORD PTR [eax]
  4305df:	push   esp
  4305e0:	pop    ss
  4305e1:	or     edx,0xffffff90
  4305e4:	adc    BYTE PTR ds:0x74d9a927,ah
  4305ea:	push   edx
  4305eb:	sbb    DWORD PTR [edi-0xc],ebp
  4305ee:	retf   
  4305ef:	aad    0xb
  4305f1:	mov    edx,0x5040739f
  4305f6:	std    
  4305f7:	ins    BYTE PTR es:[edi],dx
  4305f8:	fst    QWORD PTR [edi-0x1d]
  4305fb:	cmc    
  4305fc:	jmp    0x4305c5
  4305fe:	dec    ecx
  4305ff:	adc    DWORD PTR [ecx+0x74],edx
  430602:	xchg   esp,eax
  430603:	sbb    al,BYTE PTR [ebp-0x5]
  430606:	loopne 0x43061d
  430608:	adc    al,0x24
  43060a:	pushf  
  43060b:	outs   dx,BYTE PTR ds:[esi]
  43060c:	mov    esi,esi
  43060e:	push   si
  430610:	aam    0x9f
  430612:	mov    bl,0x83
  430614:	loop   0x43061a
  430616:	(bad)  
  430617:	fs push ss
  430619:	in     al,dx
  43061a:	lea    eax,[edi-0x5c]
  43061d:	inc    ebx
  43061e:	pop    ebx
  43061f:	cmc    
  430620:	xor    al,0xd2
  430622:	sub    eax,0xc79a08ee
  430627:	pop    ds
  430628:	mov    dh,0x51
  43062a:	mov    edi,0xa684b14a
  43062f:	js     0x43063e
  430631:	repz bound edx,QWORD PTR [eax]
  430634:	mov    ebx,0xbb2490a2
  430639:	and    al,0x1a
  43063b:	ret    
  43063c:	cmp    DWORD PTR [edx-0x47],0xa173905c
  430643:	cmp    dl,bl
  430645:	mov    ch,0xd3
  430647:	jmp    0x4e8e9992
  43064c:	shr    DWORD PTR ss:[esi],cl
  43064f:	push   edx
  430650:	pop    es
  430651:	adc    DWORD PTR [edx+ebx*1+0x6f0b0fd2],edi
  430658:	aas    
  430659:	sub    edx,DWORD PTR [edx-0x78700cdc]
  43065f:	push   0xfffffff4
  430661:	jp     0x430686
  430663:	mov    ebx,0x11e2b8d1
  430668:	in     al,dx
  430669:	fisubr WORD PTR [edi]
  43066b:	adc    BYTE PTR [edx-0x41],0x64
  43066f:	imul   esp,ebp,0xffffffbf
  430672:	push   edi
  430673:	mov    esi,0x21264592
  430678:	repnz les ebp,FWORD PTR [ecx]
  43067b:	psubsw mm5,QWORD PTR [ebx]
  43067e:	pop    esi
  43067f:	pop    ds
  430680:	jecxz  0x43060f
  430682:	cmc    
  430683:	out    0x30,eax
  430685:	dec    edx
  430686:	into   
  430687:	mov    ah,BYTE PTR [ecx+0x3a6e0232]
  43068d:	pop    ecx
  43068e:	out    dx,eax
  43068f:	mov    ebx,0x867284ca
  430694:	mov    dl,BYTE PTR [eax-0x2]
  430697:	add    eax,0x44a4cb49
  43069c:	sbb    cl,BYTE PTR [eax-0x760fd059]
  4306a2:	ret    0x16cf
  4306a5:	pop    ds
  4306a6:	(bad)  
  4306a7:	outs   dx,DWORD PTR ds:[esi]
  4306a8:	mov    ebx,DWORD PTR [ebp+0x71906a10]
  4306ae:	(bad)  
  4306af:	push   eax
  4306b0:	jg     0x430716
  4306b2:	stc    
  4306b3:	lea    edi,[edx+esi*2+0x3a]
  4306b7:	fcomi  st,st(5)
  4306b9:	inc    eax
  4306ba:	call   0xe7dc:0x5704196b
	...
  430731:	add    BYTE PTR [eax],al
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0xcd
  430741:	fwait
  430742:	push   0x1feea61
  430747:	add    ch,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [ebx+0x6cbc57b9],al
  430751:	or     bl,BYTE PTR [ecx+0x4c]
  430754:	and    ebx,DWORD PTR [ebx-0xc]
  430757:	push   ecx
  430758:	int    0xd
  43075a:	lods   eax,DWORD PTR ds:[esi]
  43075b:	es jp  0x430743
  43075e:	inc    edi
  43075f:	cmp    DWORD PTR ds:0xfe5d87e7,edi
  430765:	xchg   ebx,eax
  430766:	jmp    0xb0f90f3d
  43076b:	adc    esp,edi
  43076d:	jl     0x4307a3
  43076f:	or     DWORD PTR [ecx-0x60bc4ca],ebp
  430775:	out    0x39,eax
  430777:	push   ecx
  430778:	fild   QWORD PTR [ebp-0x1da48747]
  43077e:	mov    dh,0x87
  430780:	push   ebx
  430781:	out    0x2b,eax
  430783:	inc    esi
  430784:	mov    dl,BYTE PTR ds:[esi]
  430787:	inc    ebx
  430788:	pop    ecx
  430789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43078a:	pop    ecx
  43078b:	jmp    0x3e1a:0x96efd4c6
  430792:	fmul   DWORD PTR [edi-0x5970ea85]
  430798:	cs ins DWORD PTR es:[edi],dx
  43079a:	into   
  43079b:	xor    eax,0xc36d5fd
  4307a0:	imul   edx,DWORD PTR ds:0x139e5c74,0x929e0b9e
  4307aa:	lds    esi,FWORD PTR [ecx]
  4307ac:	jae    0x43080a
  4307ae:	cmp    eax,DWORD PTR [edx-0x7b43d6de]
  4307b4:	stos   BYTE PTR es:[edi],al
  4307b5:	sbb    al,BYTE PTR [edi+ebx*1]
  4307b8:	addr16 jge 0x4307dd
  4307bb:	daa    
  4307bc:	jmp    0x3123:0xe6276856
  4307c3:	sbb    eax,0x3cda84b
  4307c8:	sbb    al,0xf8
  4307ca:	jecxz  0x430833
  4307cc:	ror    DWORD PTR [edi+0x5d],1
  4307cf:	icebp  
  4307d0:	ja     0x4307fd
  4307d2:	cmp    al,0xe7
  4307d4:	ret    0x73e0
  4307d7:	(bad)  
  4307d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307d9:	pop    ebp
  4307da:	mov    dh,0x95
  4307dc:	outs   dx,DWORD PTR ds:[esi]
  4307dd:	pop    esi
  4307de:	test   eax,0x4debcf2
  4307e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4307e4:	pushf  
  4307e5:	adc    cl,BYTE PTR [ebp+0x6a]
  4307e8:	pop    ebp
  4307e9:	push   cs
  4307ea:	or     BYTE PTR [edx+0x6a20fc50],bh
  4307f0:	push   ecx
  4307f1:	test   BYTE PTR [edi-0x58],cl
  4307f4:	data16 adc BYTE PTR [eax-0x2e],ah
  4307f8:	xor    dh,BYTE PTR [esi]
  4307fa:	stos   BYTE PTR es:[edi],al
  4307fb:	add    eax,0xad501656
  430800:	xor    dh,bl
  430802:	xor    eax,0x7e6e274d
  430807:	jno    0x430824
  430809:	dec    edi
  43080a:	(bad)  
  43080b:	int    0xe2
  43080d:	mov    edx,0xd322f59f
  430812:	xchg   ebp,eax
  430813:	test   al,0x31
  430815:	ins    BYTE PTR es:[edi],dx
  430816:	cmc    
  430817:	gs mov esi,0xe0ad9ec6
  43081d:	loop   0x4307fd
  43081f:	inc    ebp
  430820:	das    
  430821:	shl    BYTE PTR [ebp+0x63],0x7f
  430825:	rcr    DWORD PTR [eax+0x4176f9ca],1
  43082b:	xor    eax,edi
  43082d:	test   al,0x1b
  43082f:	out    0xed,eax
  430831:	lock mov ds:0xedecf472,eax
  430837:	ins    BYTE PTR es:[edi],dx
  430838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430839:	xchg   BYTE PTR [eax+0x5a217e65],ch
  43083f:	mov    al,BYTE PTR [ebp+0x0]
	...
  4308b1:	add    BYTE PTR [eax],al
  4308b3:	add    BYTE PTR [esp+esi*2],dl
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	lods   eax,DWORD PTR ds:[esi]
  4308c1:	mov    bh,0x7
  4308c3:	xchg   esp,eax
  4308c4:	(bad)  
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR ds:0xb83ac118,cl
  4308d1:	mov    BYTE PTR [eax],bl
  4308d3:	sub    BYTE PTR [eax-0x21970222],dl
  4308d9:	or     bl,BYTE PTR [edx+ecx*4-0x41]
  4308dd:	xor    eax,0xeb0e7bb9
  4308e2:	adc    BYTE PTR [esi+0x4f06dd0f],dh
  4308e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308e9:	xchg   edi,eax
  4308ea:	mov    eax,ds:0xadb5161f
  4308ef:	jne    0x4308ff
  4308f1:	mov    esi,0x87e67b56
  4308f6:	add    DWORD PTR [ecx],esp
  4308f8:	leave  
  4308f9:	push   edx
  4308fa:	sbb    DWORD PTR [eax+0x4d],ebx
  4308fd:	ds push esi
  4308ff:	mov    dl,0xab
  430901:	push   ebp
  430902:	push   esp
  430903:	pop    ebp
  430904:	in     eax,0xdc
  430906:	lgs    ecx,FWORD PTR [ecx+0x210fbaa0]
  43090d:	pop    ecx
  43090e:	cmc    
  43090f:	fs sahf 
  430911:	jnp    0x43096d
  430913:	xchg   esp,eax
  430914:	xor    DWORD PTR [ebp-0x4c303dbe],edx
  43091a:	sub    cl,al
  43091c:	xlat   BYTE PTR ds:[ebx]
  43091d:	dec    eax
  43091e:	push   0x3171a4a3
  430923:	loopne 0x4308b6
  430925:	lods   eax,DWORD PTR ds:[esi]
  430926:	hlt    
  430927:	push   eax
  430928:	std    
  430929:	adc    eax,0x8caea3a
  43092e:	(bad)  
  43092f:	jl     0x4308d8
  430931:	mov    ah,dh
  430933:	adc    eax,0xcbb156db
  430938:	shl    ch,0x5
  43093b:	cmp    ecx,ebx
  43093d:	cmp    al,0x29
  43093f:	xlat   BYTE PTR ds:[ebx]
  430940:	xchg   ecx,eax
  430941:	out    dx,al
  430942:	push   edi
  430943:	ins    BYTE PTR es:[edi],dx
  430944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430945:	outs   dx,DWORD PTR fs:[esi]
  430947:	mov    ecx,0x46c1a58
  43094c:	cli    
  43094d:	xchg   DWORD PTR [esi],edx
  43094f:	lds    ecx,FWORD PTR [esi+0x6d]
  430952:	xor    BYTE PTR [esp+ebx*4-0x24eaa03e],bh
  430959:	xchg   ecx,eax
  43095a:	mov    ds:0xcb3f7d7f,eax
  43095f:	dec    esi
  430960:	push   esp
  430961:	xchg   esi,eax
  430962:	mov    edi,0x4cadd2ba
  430967:	mov    al,ds:0x703ea1fb
  43096c:	or     edx,DWORD PTR [edx]
  43096e:	sub    ah,bh
  430970:	push   esi
  430971:	push   eax
  430972:	push   edx
  430973:	(bad)  [ecx+edx*8]
  430976:	sub    eax,0x6e9da83f
  43097b:	xchg   ebx,eax
  43097c:	cwde   
  43097d:	pop    edi
  43097e:	add    al,0x98
  430980:	sahf   
  430981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430982:	jne    0x4309a9
  430984:	mov    ah,0xec
  430986:	add    ch,bl
  430988:	daa    
  430989:	add    dl,BYTE PTR [esp+esi*1-0x29]
  43098d:	pop    ebp
  43098e:	mov    esi,0x59227070
  430993:	push   esp
  430994:	iret   
  430995:	aaa    
  430996:	sbb    edx,DWORD PTR [edi]
  430998:	(bad)  
  430999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43099a:	pushfw 
  43099c:	jmp    0x5172:0xeeba7220
  4309a3:	lock push cs
  4309a5:	in     eax,dx
  4309a6:	shl    ebx,1
  4309a8:	test   al,0x34
  4309aa:	hlt    
  4309ab:	ss loop 0x4309dd
  4309ae:	jnp    0x4309f1
  4309b0:	outs   dx,DWORD PTR ds:[esi]
  4309b1:	jmp    0x44e3:0x67320e9f
  4309b8:	fs jl  0x43098f
  4309bb:	inc    edx
  4309bc:	push   ebp
  4309bd:	mov    DWORD PTR [eax+ecx*2+0xdb],ecx
	...
  430a34:	sbb    ebp,edi
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x61f9c737
  430a43:	or     al,0xd4
  430a45:	add    BYTE PTR [edx],al
  430a47:	add    ch,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    ah,al
  430a4d:	cmp    bl,BYTE PTR [ecx+0x3d3498fb]
  430a53:	jo     0x4309dd
  430a55:	hlt    
  430a56:	xchg   edi,eax
  430a57:	jae    0x430a5c
  430a59:	dec    esi
  430a5a:	addr16 int3 
  430a5c:	xor    eax,DWORD PTR [ebp+ebx*8+0x44]
  430a60:	repnz or eax,0xaf455574
  430a66:	jno    0x430aa6
  430a68:	jg     0x430a7e
  430a6a:	mov    ecx,0x359e3271
  430a6f:	mov    esi,0xfb0a371
  430a74:	out    0x8f,eax
  430a76:	mov    eax,ds:0x5109e07d
  430a7b:	mov    edi,0x5f8c0a3b
  430a80:	ss stos BYTE PTR es:[edi],al
  430a82:	pusha  
  430a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a84:	ds cmp al,0x1c
  430a87:	xchg   esp,eax
  430a88:	nop
  430a89:	and    ebx,esi
  430a8b:	in     al,dx
  430a8c:	jns    0x430a33
  430a8e:	in     al,dx
  430a8f:	shl    DWORD PTR [edi-0x7a],cl
  430a92:	fwait
  430a93:	idiv   DWORD PTR [eax+0x7aba9682]
  430a99:	mov    ecx,0x5616c079
  430a9e:	xabort 0x15
  430aa1:	or     esi,esi
  430aa3:	dec    esi
  430aa4:	mov    BYTE PTR [edx-0x5a],ch
  430aa7:	dec    eax
  430aa8:	mov    edx,es
  430aaa:	(bad)  
  430aab:	fdiv   DWORD PTR [ebx]
  430aad:	(bad)  
  430aae:	cli    
  430aaf:	xchg   edx,eax
  430ab0:	xchg   ebp,eax
  430ab1:	(bad)  
  430ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ab3:	ret    
  430ab4:	outs   dx,BYTE PTR ds:[esi]
  430ab5:	les    ebp,FWORD PTR [ebx-0xea79a80]
  430abb:	and    BYTE PTR [ebx],cl
  430abd:	leave  
  430abe:	loop   0x430ab7
  430ac0:	pop    edx
  430ac1:	adc    al,0x24
  430ac3:	mov    edi,0xcc3f62f4
  430ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ac9:	push   esi
  430aca:	aas    
  430acb:	shl    edi,0xb2
  430ace:	jle    0x430a88
  430ad0:	rcr    esi,1
  430ad2:	ja     0x430b43
  430ad4:	std    
  430ad5:	pop    es
  430ad6:	xchg   ecx,eax
  430ad7:	jb     0x430af3
  430ad9:	jmp    0x7076:0xe09f1e9b
  430ae0:	cli    
  430ae1:	nop
  430ae2:	fwait
  430ae3:	push   0x737a32e9
  430ae8:	pop    ecx
  430ae9:	fdiv   QWORD PTR [edi+ebp*1]
  430aec:	xor    DWORD PTR [ecx-0x67263bf5],ebp
  430af2:	mov    cl,0xa7
  430af4:	xchg   edx,eax
  430af5:	in     al,dx
  430af6:	dec    eax
  430af7:	into   
  430af8:	dec    ecx
  430af9:	push   ebp
  430afa:	mov    esi,0x4b2435f0
  430aff:	scas   al,BYTE PTR es:[edi]
  430b00:	test   esp,esi
  430b02:	add    eax,0xe81bbeba
  430b07:	jae    0x430aab
  430b09:	xchg   esi,eax
  430b0a:	imul   edx,edx,0x6f
  430b0d:	lahf   
  430b0e:	loopne 0x430abc
  430b10:	fnstenv [ebp+0x2501c7]
  430b16:	cli    
  430b17:	sbb    eax,0xe50a2815
  430b1c:	es int3 
  430b1e:	cmp    BYTE PTR [esi],al
  430b20:	test   DWORD PTR [ebp-0x41],0x369c3c1e
  430b27:	pop    ds
  430b28:	pop    ss
  430b29:	repz cmp DWORD PTR [edi+esi*2-0x149135ed],ebx
  430b31:	jb     0x430b5d
  430b33:	stos   BYTE PTR es:[edi],al
  430b34:	pushf  
  430b35:	xor    eax,0x44280bc3
  430b3a:	arpl   ax,di
  430b3c:	hlt    
  430b3d:	inc    esi
  430b3e:	jmp    0x0:0x176
	...
  430bb1:	add    BYTE PTR [eax],al
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0x5c9c:0x3f4217e6
  430bc2:	sti    
  430bc3:	test   cl,0x1
  430bc6:	add    al,BYTE PTR [eax]
  430bc8:	cmc    
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    cl,ah
  430bcd:	outs   dx,DWORD PTR ds:[esi]
  430bce:	add    edi,DWORD PTR [eax-0x7a9766e5]
  430bd4:	frstor [edx]
  430bd6:	pop    ebp
  430bd7:	mov    esi,0x28479791
  430bdc:	push   edi
  430bdd:	ficomp DWORD PTR [edi-0xb]
  430be0:	lock je 0x430b77
  430be3:	in     eax,0xc1
  430be5:	cmp    BYTE PTR [eax+0x49],ch
  430be8:	jmp    0x6ebb:0x1c7ac2c7
  430bef:	mov    ecx,0x9da7631c
  430bf4:	in     al,0xcd
  430bf6:	mov    BYTE PTR [si+0x2e],bh
  430bfa:	fld    QWORD PTR [edi]
  430bfc:	inc    esp
  430bfd:	aaa    
  430bfe:	out    dx,eax
  430bff:	sub    edi,DWORD PTR [esi]
  430c01:	enter  0x9cfe,0x9d
  430c05:	(bad)  
  430c06:	int3   
  430c07:	jp     0x430c2b
  430c09:	xchg   ebp,eax
  430c0a:	pop    esi
  430c0b:	jg     0x430c49
  430c0d:	mov    esp,DWORD PTR [edx]
  430c0f:	and    BYTE PTR [ebx-0x45],bh
  430c12:	ins    DWORD PTR es:[edi],dx
  430c13:	xchg   edi,eax
  430c14:	adc    ah,al
  430c16:	push   edx
  430c17:	stos   DWORD PTR es:[edi],eax
  430c18:	mov    cl,al
  430c1a:	xchg   edi,eax
  430c1b:	cmp    ebp,esi
  430c1d:	xchg   esp,eax
  430c1e:	pop    ds
  430c1f:	or     dh,bh
  430c21:	and    ebp,DWORD PTR [edx-0x61047af5]
  430c27:	sub    BYTE PTR [edi+0x6d478c3f],cl
  430c2d:	retf   0x464e
  430c30:	mov    ch,0x9c
  430c32:	dec    edx
  430c33:	mov    esi,0x6ddbdced
  430c38:	mov    dl,0xc9
  430c3a:	sbb    dl,BYTE PTR [esi-0xc254956]
  430c40:	xchg   ecx,eax
  430c41:	mov    edi,0xeea85561
  430c46:	xchg   esi,eax
  430c47:	dec    esp
  430c48:	scas   eax,DWORD PTR es:[edi]
  430c49:	xor    BYTE PTR [ecx-0x18],cl
  430c4c:	or     edi,DWORD PTR [ebx]
  430c4e:	xchg   ebx,eax
  430c4f:	in     eax,0xb
  430c51:	gs imul al
  430c54:	test   eax,0xad617510
  430c59:	ja     0x430c99
  430c5b:	stc    
  430c5c:	cli    
  430c5d:	fisubr DWORD PTR ds:0x84a4824b
  430c63:	or     BYTE PTR [edx-0xd8c791],bl
  430c69:	(bad)  
  430c6a:	adc    al,BYTE PTR [esp+edx*2+0x28]
  430c6e:	fst    st(1)
  430c70:	pop    ds
  430c71:	add    bh,BYTE PTR [edx-0x7ab12c65]
  430c77:	dec    edi
  430c78:	mov    eax,ds:0x8d01d0d4
  430c7d:	mov    ebx,0x6fc990c
  430c82:	lahf   
  430c83:	ins    DWORD PTR es:[edi],dx
  430c84:	lods   al,BYTE PTR ds:[esi]
  430c85:	and    BYTE PTR [edi+0x29],bl
  430c88:	stos   DWORD PTR es:[edi],eax
  430c89:	ror    DWORD PTR [esi-0x6eaad9a0],1
  430c8f:	jmp    0x430c83
  430c91:	outs   dx,BYTE PTR ds:[esi]
  430c92:	fistp  QWORD PTR [edx-0x15018ff8]
  430c98:	sbb    eax,0x81cfa273
  430c9d:	sbb    eax,0xefc7c767
  430ca2:	adc    ebp,DWORD PTR [ecx+edx*8]
  430ca5:	inc    esp
  430ca6:	xchg   edx,eax
  430ca7:	out    dx,al
  430ca8:	pop    edx
  430ca9:	cdq    
  430caa:	hlt    
  430cab:	inc    esi
  430cac:	(bad)  
  430cad:	mov    eax,0xed5e1fa0
  430cb2:	test   BYTE PTR [ecx],dh
  430cb4:	je     0x430c72
  430cb6:	mov    esi,ebx
  430cb8:	xchg   ebp,eax
  430cb9:	stos   DWORD PTR es:[edi],eax
  430cba:	mov    bh,0x5c
  430cbc:	ret    0x1ae9
  430cbf:	pop    eax
  430cc0:	add    BYTE PTR cs:[eax],al
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d41
  430d41:	inc    ebx
  430d42:	push   es
  430d43:	out    0xbe,eax
  430d45:	add    al,BYTE PTR [edx]
  430d47:	add    ch,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    ah,cl
  430d4d:	leave  
  430d4e:	sub    eax,0xa3d4e7e3
  430d53:	jecxz  0x430cf0
  430d55:	fimul  WORD PTR [edi+0x7b]
  430d58:	mov    cl,BYTE PTR [eax+0x7a4569b3]
  430d5e:	cs sahf 
  430d60:	dec    eax
  430d61:	dec    esi
  430d62:	cld    
  430d63:	neg    DWORD PTR [eax+0x4b502372]
  430d69:	dec    edi
  430d6a:	dec    eax
  430d6b:	mov    dl,BYTE PTR ds:0xeee4cce
  430d71:	add    al,0xba
  430d73:	fist   WORD PTR [ebx-0x30]
  430d76:	js     0x430d3c
  430d78:	mov    edi,0x83ad3cfa
  430d7d:	xchg   DWORD PTR [ecx+0x6e045f65],edi
  430d83:	pushf  
  430d84:	ss xchg edi,eax
  430d86:	mov    edx,0x8898e221
  430d8b:	inc    edx
  430d8c:	cmp    ah,BYTE PTR [edx]
  430d8e:	or     eax,0xea8f3373
  430d93:	mul    DWORD PTR [ebp+0x68deca88]
  430d99:	mov    al,ds:0xcc12b2de
  430d9e:	pop    eax
  430d9f:	sbb    eax,esi
  430da1:	mov    ds:0xcab59ad,eax
  430da6:	mov    al,0x8a
  430da8:	or     eax,0xd7713213
  430dad:	xor    edx,ebp
  430daf:	pop    ebp
  430db0:	ror    DWORD PTR [ebp-0x3c0a877a],0xfb
  430db7:	repnz adc DWORD PTR [edx-0x2d],ecx
  430dbb:	fld    DWORD PTR [edx]
  430dbd:	test   edi,edx
  430dbf:	mov    bl,0x12
  430dc1:	mov    ah,0x90
  430dc3:	dec    ebp
  430dc4:	outs   dx,DWORD PTR ds:[esi]
  430dc5:	aas    
  430dc6:	pop    es
  430dc7:	xor    al,0xc
  430dc9:	or     bh,ah
  430dcb:	mov    WORD PTR [ebx],gs
  430dcd:	mov    al,ds:0x2d47e213
  430dd2:	ror    BYTE PTR [ebp+ecx*8+0x78],0xf6
  430dd7:	and    DWORD PTR [esi],ebx
  430dd9:	push   esi
  430dda:	xchg   ebx,eax
  430ddb:	es loopne 0x430e03
  430dde:	fs int3 
  430de0:	pop    ebx
  430de1:	sub    esi,esp
  430de3:	sbb    eax,0xe2d6f03a
  430de8:	sbb    al,0xf5
  430dea:	or     cl,dh
  430dec:	adc    al,0x3f
  430dee:	dec    eax
  430def:	scas   al,BYTE PTR es:[edi]
  430df0:	sbb    bh,BYTE PTR [ebp+ecx*4+0x7a]
  430df4:	clc    
  430df5:	xor    cl,bl
  430df7:	sbb    BYTE PTR [ebp-0x628fa0c1],ah
  430dfd:	arpl   sp,si
  430dff:	popf   
  430e00:	scas   eax,DWORD PTR es:[edi]
  430e01:	pop    ss
  430e02:	xchg   ebp,eax
  430e03:	es inc ebx
  430e05:	push   0xffffffd2
  430e07:	ins    DWORD PTR es:[edi],dx
  430e08:	mov    ch,0x30
  430e0a:	pop    ebx
  430e0b:	dec    esp
  430e0c:	ins    DWORD PTR es:[edi],dx
  430e0d:	repnz sub al,0x50
  430e10:	rol    DWORD PTR [ebp+0x2d007cb1],cl
  430e16:	push   es
  430e17:	jg     0x430e01
  430e19:	add    DWORD PTR [edx-0x7],eax
  430e1c:	(bad)  
  430e1d:	in     eax,dx
  430e1e:	clc    
  430e1f:	fldcw  WORD PTR [ebp-0x70b819d8]
  430e25:	sub    al,BYTE PTR [eax]
  430e27:	xor    esi,eax
  430e29:	adc    al,BYTE PTR [edx]
  430e2b:	(bad)  [esi+0x6a]
  430e2e:	xchg   ecx,eax
  430e2f:	mov    DWORD PTR [edi-0x38],eax
  430e32:	mov    dh,al
  430e34:	ds cmp esi,ebx
  430e37:	mov    dh,0xb3
  430e39:	cmp    ah,BYTE PTR [esi+0x2c11e4f1]
  430e3f:	add    esi,DWORD PTR [esi+0x0]
	...
  430eb2:	add    BYTE PTR [eax],al
  430eb4:	add    al,0x67
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430ee7
  430ec1:	lahf   
  430ec2:	jecxz  0x430f43
  430ec4:	mov    bl,0x3
  430ec6:	add    al,BYTE PTR [eax]
  430ec8:	cmc    
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    cl,bl
  430ecd:	cmp    eax,0xf9a78430
  430ed2:	sub    eax,0x753a9ca9
  430ed7:	iret   
  430ed8:	or     eax,0xdce3f35d
  430edd:	bound  ebp,QWORD PTR [esi]
  430edf:	lock imul ecx,edx,0xc34a4fc6
  430ee6:	jge    0x430e6f
  430ee8:	sbb    BYTE PTR [edi-0x8],0x3a
  430eec:	jmp    0x7f3064a2
  430ef1:	jp     0x430f6b
  430ef3:	iret   
  430ef4:	cld    
  430ef5:	xor    al,0xb2
  430ef7:	push   ds
  430ef8:	ds hlt 
  430efa:	xlat   BYTE PTR ds:[ebx]
  430efb:	fs dec ebp
  430efd:	inc    eax
  430efe:	out    0xab,eax
  430f00:	sbb    DWORD PTR [eax+0x101d860c],esi
  430f06:	xchg   edx,eax
  430f07:	add    ebp,ebp
  430f09:	mov    al,ds:0x119c3d02
  430f0e:	rcl    ch,1
  430f10:	xchg   esp,eax
  430f11:	xor    al,0xc3
  430f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f14:	comiss xmm5,DWORD PTR ds:[ecx]
  430f18:	adc    DWORD PTR [ebx-0x64],esp
  430f1b:	int    0xa5
  430f1d:	or     dl,bh
  430f1f:	mov    dl,0x89
  430f21:	or     ch,cl
  430f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f24:	xchg   ecx,eax
  430f25:	dec    esp
  430f26:	leave  
  430f27:	dec    edx
  430f28:	sub    esp,0xe9f0fb4c
  430f2e:	mov    ebp,0x364d8136
  430f33:	xlat   BYTE PTR ds:[ebx]
  430f34:	push   ss
  430f35:	push   ds
  430f36:	adc    eax,0x7bb9c2ac
  430f3b:	arpl   WORD PTR [esi-0x5b],bp
  430f3e:	int    0x19
  430f40:	aaa    
  430f41:	shl    esp,1
  430f43:	pop    edx
  430f44:	ja     0x430f9a
  430f46:	or     eax,0x13faf298
  430f4b:	jns    0x430f2b
  430f4d:	dec    edi
  430f4e:	(bad)
  430f52:	clc    
  430f53:	ins    DWORD PTR es:[edi],dx
  430f54:	mov    bh,0x26
  430f56:	push   esi
  430f57:	(bad)
  430f5b:	xchg   ecx,eax
  430f5c:	xor    bl,dl
  430f5e:	pushf  
  430f5f:	in     al,dx
  430f60:	push   ebp
  430f61:	shr    BYTE PTR [ecx+0x23069bf2],cl
  430f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f68:	adc    ebp,DWORD PTR [eax]
  430f6a:	sar    BYTE PTR [esi+0x71],0xaf
  430f6e:	sub    eax,0x96a8be02
  430f73:	mov    ah,0x6
  430f75:	dec    esp
  430f76:	sub    BYTE PTR ds:0xda7406de,dh
  430f7c:	sub    ch,BYTE PTR [eax+0x2945ad34]
  430f82:	jo     0x430f79
  430f84:	adc    al,0x19
  430f86:	sub    BYTE PTR [eax+eax*8],ah
  430f89:	mov    ds:0xd525eb1f,eax
  430f8e:	or     al,0x8b
  430f90:	outs   dx,DWORD PTR ds:[esi]
  430f91:	shl    BYTE PTR ds:0xace2991d,0xd0
  430f98:	dec    ebx
  430f99:	shl    BYTE PTR [edx-0x30],0x12
  430f9d:	jnp    0x430f90
  430f9f:	cmc    
  430fa0:	and    eax,0x72d48910
  430fa5:	dec    eax
  430fa6:	imul   ebp,DWORD PTR [ecx+0x2f5be794],0x39
  430fad:	pop    ds
  430fae:	cdq    
  430faf:	pop    esp
  430fb0:	dec    esp
  430fb1:	lahf   
  430fb2:	in     al,0xbc
  430fb4:	xor    BYTE PTR [ecx+0x4f],bh
  430fb7:	pop    ebx
  430fb8:	shl    BYTE PTR [esi],cl
  430fba:	xchg   ebx,eax
  430fbb:	call   0xf674035d
  430fc0:	dec    ecx
	...
  431031:	add    BYTE PTR [eax],al
  431033:	add    bh,al
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	stos   BYTE PTR es:[edi],al
  431041:	ja     0x43104b
  431043:	xlat   BYTE PTR ds:[ebx]
  431044:	test   al,0x4
  431046:	add    al,BYTE PTR [eax]
  431048:	sldt   WORD PTR [eax]
  43104b:	add    BYTE PTR [edx+edi*8+0x4d182bda],dh
  431052:	xchg   esp,eax
  431053:	mov    al,0xdd
  431055:	in     eax,0xfa
  431057:	or     al,0x62
  431059:	lods   eax,DWORD PTR ds:[esi]
  43105a:	ret    
	...
  4310b3:	add    BYTE PTR [ebp+0x55],cl
  4310b6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  4310bc:	mov    esp,ebp
  4310be:	or     al,ah
  4310c0:	dec    ebp
  4310c1:	add    bh,al
  4310c3:	add    BYTE PTR [eax],cl
  4310c5:	add    BYTE PTR [eax],al
  4310c7:	mov    DWORD PTR [eax],0x3ef44545
  4310cd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  4310d4:	retf   
  4310d5:	(bad)  
  4310d6:	enter  0x4d45,0xb8
  4310da:	mov    edi,DWORD PTR [ecx]
  4310dc:	hlt    
  4310dd:	test   ebx,ecx
  4310df:	pushf  
  4310e0:	enter  0x4df8,0x8b
  4310e4:	mov    DWORD PTR [ebp+0x8],0x894708
  4310eb:	inc    ebp
  4310ec:	mov    ebp,0xff8bfffc
  4310f1:	dec    ebp
  4310f2:	mov    ch,0xf4
  4310f4:	call   DWORD PTR [ebx-0x1]
  4310f7:	mov    ebx,0x8005122
  4310fc:	call   DWORD PTR [ecx+0x8]
  4310ff:	pop    es
  431100:	jmp    0xb8:0x9cb4533
  431107:	cdq    
  431108:	mov    esi,DWORD PTR [edx-0xc]
  43110b:	xor    al,bl
  43110d:	add    BYTE PTR [ecx+0x3c83203],bl
  431113:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431119:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43111f:	xor    eax,DWORD PTR [eax]
  431121:	retf   
  431122:	ret    
  431123:	add    eax,esi
  431125:	enter  0x8945,0x64
  431129:	dec    ebp
  43112a:	sbb    ah,cl
  43112c:	add    BYTE PTR [ebx-0xb87b277],cl
  431132:	dec    DWORD PTR [ebx-0xbcfb275]
  431138:	test   DWORD PTR [ebx],esi
  43113a:	dec    ebx
  43113c:	inc    DWORD PTR [ebx]
  43113e:	inc    eax
  43113f:	enter  0x8989,0x64
  431143:	(bad)  
  431144:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431148:	cld    
  431149:	dec    DWORD PTR [ebp-0xa90001]
  43114f:	push   edi
  431150:	mov    BYTE PTR [edx+0x1],ch
  431153:	and    BYTE PTR [eax],al
  431155:	pop    ecx
  431156:	inc    ebp
  431157:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43115d:	push   0xffffff89
  43115f:	pop    ecx
  431160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431161:	dec    ebp
  431162:	add    BYTE PTR [ecx+0x45fc088b],cl
  431168:	jne    0x4311b2
  43116a:	lea    eax,[eax]
  43116c:	fs (bad) 
  43116e:	dec    DWORD PTR [eax]
  431170:	mov    DWORD PTR [eax],eax
  431172:	test   al,0x0
  431174:	add    BYTE PTR [ebp-0x18],cl
  431177:	xor    ebp,DWORD PTR [edx]
  431179:	add    eax,DWORD PTR [eax]
  43117b:	mov    eax,eax
  43117d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431184:	inc    ebp
  431185:	mov    DWORD PTR [ebx+0x459408],ecx
  43118b:	popa   
  43118c:	mov    esp,DWORD PTR [ebp-0x75]
  43118f:	(bad)  
  431190:	cld    
  431191:	inc    eax
  431192:	cmp    bh,0x1
  431195:	lea    eax,[eax]
  431197:	and    BYTE PTR [eax],al
  431199:	inc    DWORD PTR [ecx-0x18]
  43119c:	mov    ecx,DWORD PTR [ebx]
  43119e:	cld    
  43119f:	add    BYTE PTR [ecx+0x75014d],cl
  4311a5:	(bad)  
  4311a6:	xchg   ebp,eax
  4311a7:	sar    bh,1
  4311a9:	inc    eax
  4311aa:	inc    DWORD PTR [eax]
  4311ac:	mov    eax,DWORD PTR [ebp-0x4]
  4311af:	xor    edx,DWORD PTR [edx+0x7201be]
  4311b5:	add    BYTE PTR [edx],dl
  4311b7:	(bad)  
  4311b8:	nop
  4311b9:	inc    ebp
  4311ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4311c0:	mov    al,0xff
  4311c2:	add    bh,bh
  4311c4:	add    BYTE PTR [ebx],dh
  4311c6:	inc    DWORD PTR [ebx]
  4311c8:	sbb    al,0x89
  4311ca:	jne    0x4311a8
  4311cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4311d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4311d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4311df:	inc    DWORD PTR [ebp-0x75]
  4311e2:	(bad)  [esi+ebp*8]
  4311e5:	test   DWORD PTR [esi-0x1],esp
  4311e8:	inc    ebp
  4311e9:	(bad)  
  4311ea:	aas    
  4311eb:	inc    ebp
  4311ec:	(bad)  
  4311ed:	lea    edi,[eax+edi*2-0x1]
  4311f1:	inc    edi
  4311f3:	mov    DWORD PTR [ecx],edi
  4311f5:	mov    al,ds:0x8b8000c7
  4311fa:	call   0x45d0f4fb
  4311ff:	(bad)  
  431200:	out    dx,al
  431201:	(bad)  
  431202:	fisttp WORD PTR [eax+0x8801c7]
  431208:	jecxz  0x43124f
  43120a:	call   0xe83f580e
  43120f:	lea    edi,[edi]
  431211:	(bad)  
  431212:	call   0xcb3d16
  431217:	add    DWORD PTR [ebx-0x7f570400],ecx
  43121d:	add    BYTE PTR [ecx],al
  43121f:	test   DWORD PTR [eax],eax
  431221:	wrmsr  
  431223:	jae    0x431212
  431225:	add    BYTE PTR [eax],al
  431227:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43122d:	add    esp,edi
  43122f:	add    BYTE PTR [eax+0x450108],al
  431235:	mov    edi,DWORD PTR [ebp-0x6c]
  431238:	add    DWORD PTR [eax],0x4
  43123b:	mov    eax,DWORD PTR [ebp+0x3]
  43123e:	mov    edi,DWORD PTR [esp+edi*8]
  431241:	dec    ebp
  431242:	nop
  431243:	mov    eax,DWORD PTR [ecx]
  431245:	fadd   DWORD PTR [eax]
  431247:	add    BYTE PTR [esi],al
  431249:	lea    eax,[eax]
  43124b:	pusha  
  43124c:	push   eax
  43124d:	inc    DWORD PTR [ebp+0x52]
  431250:	call   DWORD PTR [ebp-0x7b]
  431253:	mov    esi,DWORD PTR [ebp-0x74]
  431256:	mov    eax,DWORD PTR [eax]
  431258:	cld    
  431259:	mov    eax,DWORD PTR [eax+0x880103]
  43125f:	add    BYTE PTR [ebp+0x6a],bh
  431262:	cmp    edi,0x10
  431265:	mov    WORD PTR [ebp+0x0],es
  431268:	mov    edx,DWORD PTR [edx-0x4]
  43126b:	push   ecx
  43126c:	nop
  43126d:	inc    DWORD PTR [ecx]
  43126f:	cld    
  431270:	add    BYTE PTR [ebp-0x24],bh
  431273:	mov    eax,DWORD PTR [eax]
  431275:	cld    
  431276:	push   eax
  431277:	nop
  431278:	inc    ebp
  431279:	add    edi,edi
  43127b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431281:	jmp    0xe33b:0x9403c733
  431288:	movntq QWORD PTR [esi],mm6
  43128b:	mov    DWORD PTR [eax],0xb87e8b98
  431291:	test   ebx,eax
  431293:	jmp    DWORD PTR [edi-0x1]
  431296:	int    0xe9
  431298:	sub    esp,esi
  43129a:	add    eax,DWORD PTR [ebp-0x30]
  43129d:	fild   WORD PTR [ebp+0x3f]
  4312a0:	cmp    eax,edi
  4312a2:	je     0xcc43f8c4
  4312a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4312af:	(bad)  
  4312b0:	jne    0x43123e
  4312b2:	mov    ebx,ecx
  4312b4:	cld    
  4312b5:	jle    0x4312fc
  4312b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4312bd:	inc    ebp
  4312be:	call   0xeb3c4e
  4312c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4312c9:	add    DWORD PTR es:[eax],eax
  4312cc:	add    al,al
  4312ce:	xor    BYTE PTR [eax+0x41],dl
  4312d1:	inc    ebp
  4312d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4312d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4312de:	add    DWORD PTR [ecx+0x458be845],ecx
  4312e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4312ea:	cld    
  4312eb:	call   0xd83db0
  4312f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4312f6:	add    al,al
  4312f8:	push   eax
  4312f9:	es inc ebp
  4312fb:	inc    ebp
  4312fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431302:	dec    DWORD PTR [ebx-0x3ff70301]
  431308:	mov    DWORD PTR gs:[eax],eax
  43130b:	call   0x8b6b58d0
  431310:	inc    ebp
  431311:	mov    eax,0xe8d8008b
  431316:	add    BYTE PTR [ecx],ch
  431318:	mov    eax,DWORD PTR [eax]
  43131a:	cld    
  43131b:	mov    eax,eax
  43131d:	call   0x462b2377
  431322:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431328:	cld    
  431329:	mov    BYTE PTR [eax+0x8401c1],0x1
  431330:	xor    BYTE PTR [eax],al
  431332:	push   edi
  431333:	inc    ebp
  431334:	mov    DWORD PTR [ebx],esi
  431336:	in     al,0xb9
  431338:	inc    ebp
  431339:	lea    ecx,[ebx-0x3c370301]
  43133f:	dec    ebp
  431340:	cdq    
  431341:	mov    esi,DWORD PTR [edx]
  431343:	or     BYTE PTR [ebx],al
  431345:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43134c:	call   0x433c96
  431351:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431357:	jge    0x43138c
  431359:	mov    eax,DWORD PTR [ebx]
  43135b:	cld    
  43135c:	lea    edx,[eax+0xff0120]
  431362:	call   0x433cf6
  431367:	push   eax
  431368:	inc    DWORD PTR [ebp-0x1c]
  43136b:	mov    ecx,DWORD PTR [ebp-0x58]
  43136e:	xor    eax,DWORD PTR [eax]
  431370:	add    edi,edi
  431372:	cmp    ebp,eax
  431374:	jne    0x43139c
  431376:	mov    DWORD PTR [eax],0x8b004dd8
  43137c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431383:	mov    eax,ebx
  431385:	cld    
  431386:	test   BYTE PTR [eax+0x320199],bh
  43138c:	mov    DWORD PTR [ebp+0x8],esi
  43138f:	xor    eax,DWORD PTR [ebp-0x73]
  431392:	test   DWORD PTR [esp+esi*2-0x1],edi
  431396:	mov    ebp,eax
  431398:	mov    eax,0x33004d29
  43139d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4313a3:	add    DWORD PTR [eax],eax
  4313a5:	add    BYTE PTR [ebp+0x30],al
  4313a8:	mov    edx,DWORD PTR [edi-0x48]
  4313ab:	add    ebx,0xffffffe4
  4313ae:	addr16 test ebp,ecx
  4313b1:	je     0x4313de
  4313b3:	mov    eax,DWORD PTR [ebx]
  4313b5:	cld    
  4313b6:	sar    BYTE PTR [eax+0x3b0145],1
  4313bc:	pcmpeqw mm4,mm6
  4313bf:	xor    edi,edi
  4313c1:	lea    ecx,[ebx-0x239c7470]
  4313c7:	add    BYTE PTR [ebp+0x50],cl
  4313ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4313cd:	mov    ebp,DWORD PTR [eax-0x68]
  4313d0:	test   DWORD PTR [eax],eax
  4313d2:	clc    
  4313d3:	push   DWORD PTR [ebp-0x1]
  4313d6:	lea    ecx,[eax]
  4313d8:	int3   
  4313d9:	inc    ebp
  4313da:	call   0xfb446a
  4313df:	jne    0x4313d9
  4313e1:	xor    edi,DWORD PTR [ebp-0x41]
  4313e4:	jmp    0x431458
  4313e6:	mov    eax,DWORD PTR [eax]
  4313e8:	mov    eax,0x339545c7
  4313ed:	inc    DWORD PTR [ebx]
  4313ef:	push   DWORD PTR [ecx]
  4313f1:	aaa    
  4313f2:	mov    eax,DWORD PTR [eax]
  4313f4:	jmp    0x431446
  4313f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4313f9:	mov    eax,eax
  4313fb:	cld    
  4313fc:	clc    
  4313fd:	ret    
  4313fe:	test   bh,al
  431400:	pop    es
  431401:	xchg   ebp,eax
  431402:	add    bh,bh
  431404:	inc    ebp
  431405:	dec    DWORD PTR [edi]
  431407:	and    DWORD PTR [ebx],ebp
  431409:	add    BYTE PTR [eax],al
  43140b:	push   eax
  43140c:	jbe    0x431463
  43140e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431414:	or     al,0xcf
  431416:	inc    eax
  431417:	enter  0x745,0x72
  43141b:	inc    ebp
  43141c:	mov    eax,DWORD PTR [ecx]
  43141e:	int3   
  43141f:	add    BYTE PTR [ebp-0x75],al
  431422:	ss mov eax,0x33c74d9c
  431428:	ror    BYTE PTR [ebp+0x72f80885],1
  43142e:	inc    ebp
  43142f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431435:	fadd   st,st(6)
  431437:	rol    BYTE PTR [ebp+0x12],0x8b
  43143b:	inc    ebp
  43143c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431442:	inc    ebp
  431443:	test   bh,al
  431445:	cdq    
  431446:	clc    
  431447:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43144d:	inc    ebp
  43144e:	cmp    BYTE PTR [ebx],dh
  431450:	pushf  
  431451:	mov    ecx,0xffb48dc7
  431456:	test   eax,ecx
  431458:	clc    
  431459:	dec    ebp
  43145a:	inc    ebp
  43145b:	mov    edi,DWORD PTR [edx]
  43145d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431464:	test   edi,edi
  431466:	clc    
  431467:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43146e:	(bad)  
  43146f:	enter  0x18e8,0x85
  431473:	ss clc 
  431475:	pushf  
  431476:	inc    ebp
  431477:	dec    DWORD PTR [ebx-0x3cba0f04]
  43147d:	push   eax
  43147e:	xabort 0x7d
  431481:	add    BYTE PTR [ebx],bh
  431483:	mov    ecx,DWORD PTR [edi]
  431485:	mov    DWORD PTR [eax],ebx
  431487:	les    eax,FWORD PTR [eax]
  431489:	adc    ebp,ecx
  43148b:	dec    ebp
  43148c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431492:	mov    ecx,esi
  431494:	lock or al,cl
  431497:	clc    
  431498:	inc    ebp
  431499:	add    esi,DWORD PTR [ebx]
  43149b:	jge    0x4314a0
  43149d:	xor    edi,DWORD PTR [ebx]
  43149f:	cmp    ecx,DWORD PTR [edi]
  4314a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4314a6:	mov    edi,DWORD PTR [ecx]
  4314a8:	test   al,0xcc
  4314aa:	dec    ebp
  4314ab:	test   BYTE PTR [ebx],dh
  4314ad:	pop    es
  4314ae:	xor    eax,DWORD PTR [eax]
  4314b0:	add    ecx,DWORD PTR [esi]
  4314b2:	add    ecx,eax
  4314b4:	psraw  mm0,mm1
  4314b7:	sub    BYTE PTR [ebp+0x38],cl
  4314ba:	mov    edi,DWORD PTR [ebx]
  4314bc:	lock int3 
  4314be:	shl    edx,1
  4314c0:	rol    BYTE PTR [ebp+0xc],1
  4314c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4314ca:	jmp    0x7c1514
  4314cf:	pushf  
  4314d0:	inc    ebp
  4314d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4314d7:	xor    ecx,ebx
  4314d9:	add    ecx,esi
  4314db:	mov    esi,eax
  4314dd:	enter  0x45af,0x8b
  4314e1:	xor    ecx,eax
  4314e3:	add    edx,DWORD PTR [ebp-0x77]
  4314e6:	sub    ecx,DWORD PTR [eax]
  4314e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4314eb:	(bad)  
  4314ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4314f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4314f9:	cmp    esi,DWORD PTR [ebx]
  4314fb:	pushf  
  4314fc:	xor    eax,edi
  4314fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431505:	inc    ebp
  431506:	dec    ebp
  431507:	cmp    eax,0xc7f09c8b
  43150c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431513:	inc    ebp
  431514:	jmp    0x431555
  431516:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43151d:	dec    ebp
  43151e:	xor    esi,DWORD PTR [ebx]
  431520:	add    eax,DWORD PTR [ebx]
  431522:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431528:	dec    ebp
  431529:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43152f:	out    dx,eax
  431530:	rol    BYTE PTR [eax],1
  431532:	add    eax,0xebc8458b
  431537:	dec    ebp
  431538:	mov    ebp,DWORD PTR [ebx]
  43153a:	mov    esp,0x33f84d8b
  43153f:	ret    
  431540:	xor    eax,esi
  431542:	add    ecx,eax
  431544:	add    eax,DWORD PTR [edx+0xc1010f]
  43154a:	dec    ebp
  43154b:	inc    ebp
  43154c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431552:	ror    bl,1
  431554:	add    eax,0xebc645ce
  431559:	scas   eax,DWORD PTR es:[edi]
  43155a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431560:	xor    ebp,DWORD PTR [ebx]
  431562:	xor    edi,DWORD PTR [ebx]
  431564:	add    esi,DWORD PTR [edi+0x3]
  431567:	mov    ecx,DWORD PTR [edi]
  431569:	clc    
  43156a:	rol    ebx,0x4d
  43156d:	(bad)  
  43156e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431575:	mov    ah,0x45
  431577:	dec    ebp
  431578:	jbe    0x4315ad
  43157a:	mov    esi,DWORD PTR [ebx]
  43157c:	call   0x33466284
  431581:	rdpmc  
  431583:	rol    DWORD PTR [ebx],0x4d
  431586:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43158c:	inc    ebp
  43158d:	ror    BYTE PTR [ebx+0x45450808],1
  431593:	jmp    0x10b1623
  431598:	inc    ebp
  431599:	inc    ebp
  43159a:	(bad)  
  43159b:	mov    ebx,eax
  43159d:	clc    
  43159e:	test   ebx,eax
  4315a0:	clc    
  4315a1:	retf   
  4315a2:	inc    ebp
  4315a3:	into   
  4315a4:	mov    esi,0x8b85afec
  4315aa:	clc    
  4315ab:	enter  0x5545,0x38
  4315af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4315b6:	ret    
  4315b7:	mov    ah,0xc6
  4315b9:	addr16 push 0x338b4545
  4315bf:	clc    
  4315c0:	add    eax,ebx
  4315c2:	loopne 0x43158f
  4315c4:	dec    ebp
  4315c5:	into   
  4315c6:	mov    al,dh
  4315c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4315ce:	inc    ebp
  4315cf:	push   ebp
  4315d0:	mov    ebp,DWORD PTR [ebx]
  4315d2:	in     al,dx
  4315d3:	cmp    eax,ebx
  4315d5:	ja     0x43161c
  4315d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4315dd:	inc    ebp
  4315de:	cdq    
  4315df:	mov    esi,DWORD PTR [edx]
  4315e1:	clc    
  4315e2:	mov    bl,al
  4315e4:	xlat   BYTE PTR ds:[ebx]
  4315e5:	retf   
  4315e6:	inc    ebp
  4315e7:	into   
  4315e8:	mov    eax,esi
  4315ea:	in     al,dx
  4315eb:	scas   eax,DWORD PTR es:[edi]
  4315ec:	retf   
  4315ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4315f0:	mov    edx,DWORD PTR [ebp-0x24]
  4315f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4315fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431601:	mov    eax,DWORD PTR [ebx]
  431603:	clc    
  431604:	loopne 0x4315c9
  431606:	push   ebp
  431607:	retf   
  431608:	mov    dh,al
  43160a:	adc    esi,ecx
  43160c:	jb     0x4315bd
  43160e:	add    BYTE PTR [ebx+0x558bc845],cl
  431614:	in     al,dx
  431615:	sub    eax,ebx
  431617:	cmp    ecx,ebx
  431619:	mov    eax,esi
  43161b:	mov    esp,0x45af03ce
  431620:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431626:	mov    eax,ebx
  431628:	in     al,dx
  431629:	into   
  43162a:	dec    ebp
  43162b:	(bad)  
  43162c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431632:	rol    DWORD PTR [ebp+0x4d],0x89
  431636:	xor    esp,esp
  431638:	sub    eax,DWORD PTR [ebp-0x75]
  43163b:	add    ebp,esp
  43163d:	mov    al,0x55
  43163f:	inc    ebp
  431640:	xor    esi,DWORD PTR [esi]
  431642:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431649:	inc    ebp
  43164a:	xor    edi,DWORD PTR [ecx]
  43164c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431653:	test   DWORD PTR [eax],eax
  431655:	clc    
  431656:	enter  0x8645,0x33
  43165a:	inc    DWORD PTR [ebx]
  43165c:	(bad)  
  43165d:	jmp    0x4316a4
  43165f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431665:	inc    ebp
  431666:	(bad)  
  431667:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43166d:	cdq    
  43166e:	retf   
  43166f:	xor    al,cl
  431671:	mov    BYTE PTR [ebp+0xb],cl
  431674:	lea    eax,[ebp+0x8]
  431677:	xor    esi,DWORD PTR [edx+0x3]
  43167a:	add    al,ah
  43167c:	inc    ebp
  43167d:	dec    ebp
  43167e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431684:	addr16 add ch,cl
  431687:	inc    ebp
  431688:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43168e:	inc    ebp
  43168f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431695:	push   ebp
  431696:	(bad)  
  431697:	mov    BYTE PTR [edi+0xf723b11],ch
  43169d:	add    ch,ch
  43169f:	inc    ebp
  4316a0:	dec    DWORD PTR [ebx-0x34332775]
  4316a6:	add    al,0x4d
  4316a8:	inc    ebp
  4316a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4316af:	cdq    
  4316b0:	add    DWORD PTR [edx],esi
  4316b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4316b8:	push   DWORD PTR [ebx]
  4316ba:	int3   
  4316bb:	xor    eax,DWORD PTR [eax]
  4316bd:	add    edx,DWORD PTR [eax+0x3]
  4316c0:	mov    DWORD PTR [edi],ecx
  4316c2:	call   0x4288d788
  4316c7:	mov    DWORD PTR [ebp-0x20],esp
  4316ca:	add    BYTE PTR [ebp+0x7d],al
  4316cd:	mov    eax,DWORD PTR [eax]
  4316cf:	in     al,0x15
  4316d1:	ret    
  4316d2:	iret   
  4316d3:	(bad)  
  4316d4:	enter  0x14af,0x8b
  4316d8:	(bad)  
  4316d9:	in     al,dx
  4316da:	or     bl,cl
  4316dc:	adc    cl,al
  4316de:	push   ebp
  4316df:	dec    ebp
  4316e0:	inc    eax
  4316e1:	mov    edx,DWORD PTR [ebp-0x20]
  4316e4:	jb     0x4316b1
  4316e6:	mov    ecx,esi
  4316e8:	cld    
  4316e9:	scas   eax,DWORD PTR es:[edi]
  4316ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4316f1:	mov    BYTE PTR [eax],0x8c
  4316f4:	push   0xffffff99
  4316f6:	push   edi
  4316f7:	xor    dl,BYTE PTR [eax+0x3b]
  4316fa:	mov    ecx,DWORD PTR [edi]
  4316fc:	call   0x8c425c5f
  431701:	mov    eax,eax
  431703:	in     al,dx
  431704:	jge    0x431753
  431706:	mov    DWORD PTR [ebx],esi
  431708:	int3   
  431709:	add    eax,DWORD PTR [ebp+0xf]
  43170c:	xor    eax,ecx
  43170e:	(bad)  
  43170f:	dec    ebp
  431710:	pushf  
  431711:	xor    ecx,esi
  431713:	add    edi,DWORD PTR [edi]
  431715:	mov    eax,DWORD PTR [ebp-0x38]
  431718:	(bad)  
  431719:	test   dh,dl
  43171b:	cdq    
  43171c:	add    esi,DWORD PTR [edx]
  43171e:	jmp    0x4316a9
  431720:	mov    cl,al
  431722:	add    eax,0x14330f45
  431727:	mov    ecx,0xff448d80
  43172c:	jmp    0xc99026f9
  431731:	mov    edx,ecx
  431733:	rol    BYTE PTR [ebp+0x330155],1
  431739:	add    ecx,DWORD PTR [ebp+0xf]
  43173c:	xor    eax,edx
  43173e:	(bad)  
  43173f:	ror    DWORD PTR [eax],0x86
  431742:	jb     0x431741
  431744:	add    bh,bh
  431746:	clc    
  431747:	inc    ebp
  431748:	jb     0x4317b4
  43174a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431750:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431758:	ret    
  431759:	xor    al,bh
  43175b:	add    BYTE PTR [ebp+0x75],al
  43175e:	ss push 0xffffff9c
  431761:	inc    edi
  431763:	adc    al,0xe8
  431765:	inc    ebp
  431766:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43176c:	mov    ecx,DWORD PTR [eax]
  43176e:	cld    
  43176f:	or     DWORD PTR [ebp-0x34],0x33
  431773:	jbe    0x431778
  431775:	mov    edx,DWORD PTR [ecx+0x2b]
  431778:	dec    ebp
  431779:	mov    cl,BYTE PTR [ebx+0x45d801]
  43177f:	mov    BYTE PTR [ebx],dh
  431781:	mov    eax,DWORD PTR [ebx]
  431783:	or     BYTE PTR [ecx+0x3b],dl
  431786:	dec    ebp
  431787:	int3   
  431788:	xor    ebp,edi
  43178a:	add    eax,DWORD PTR [ebp+0x51]
  43178d:	mov    ecx,DWORD PTR [ebp-0x28]
  431790:	xor    eax,DWORD PTR [eax]
  431792:	add    ebp,DWORD PTR [eax+0x51]
  431795:	adc    BYTE PTR [eax+0x0],0x8b
  431799:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43179f:	inc    ebp
  4317a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4317a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4317ac:	dec    ebp
  4317ad:	mov    esi,DWORD PTR [ebx]
  4317af:	hlt    
  4317b0:	add    eax,ebx
  4317b2:	push   ecx
  4317b3:	inc    ebp
  4317b4:	dec    ebp
  4317b5:	(bad)  
  4317b6:	call   esi
  4317b8:	in     al,0xc7
  4317ba:	retf   
  4317bb:	mov    al,ds:0xc1ff39ce
  4317c0:	adc    al,0xc6
  4317c2:	inc    ebp
  4317c3:	and    eax,0x9c0f4c85
  4317c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4317cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4317d3:	mov    dh,0xc7
  4317d5:	cmp    eax,eax
  4317d7:	jne    0x45441023
  4317dd:	mov    edi,DWORD PTR [eax]
  4317df:	mov    eax,0x848bcb9c
  4317e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4317eb:	or     BYTE PTR [edi],cl
  4317ed:	(bad)  
  4317ee:	dec    ebp
  4317ef:	inc    edi
  4317f0:	add    bh,0x51
  4317f3:	or     cl,ch
  4317f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4317fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431801:	mov    esp,0xf802b588
  431806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431807:	inc    ebp
  431808:	(bad)  
  431809:	cmp    bh,bh
  43180b:	pushf  
  43180c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431813:	mov    ecx,DWORD PTR [ebp-0x340018]
  431819:	into   
  43181a:	dec    DWORD PTR [ebx-0x7f72431c]
  431820:	push   0x5000ff01
  431825:	retf   
  431826:	inc    ebp
  431827:	into   
  431828:	dec    DWORD PTR [ebx-0x343f3ff4]
  43182e:	push   eax
  43182f:	into   
  431830:	call   0x4b1cc0
  431835:	retf   
  431836:	add    dh,cl
  431838:	add    bh,bh
  43183a:	mov    DWORD PTR [eax+ecx*1],edx
  43183d:	clc    
  43183e:	inc    ebp
  43183f:	inc    ebp
  431840:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431846:	push   0x1
  431848:	push   edi
  431849:	add    BYTE PTR [eax-0x35],dl
  43184c:	mov    ecx,esi
  43184e:	cld    
  43184f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431855:	into   
  431856:	ror    BYTE PTR [ebx+0x75000800],0x50
  43185d:	xor    eax,DWORD PTR [ebp+0x3]
  431860:	jne    0x4318b3
  431862:	call   DWORD PTR [eax-0x3c]
  431865:	mov    DWORD PTR [ecx-0x18],edx
  431868:	mov    edi,edi
  43186a:	call   0x8b465df3
  43186f:	add    ah,ah
  431871:	rol    BYTE PTR [ebp-0x7c],0xeb
  431875:	add    edi,edi
  431877:	add    al,ch
  431879:	inc    ebp
  43187a:	push   ecx
  43187b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431881:	mov    al,0xc7
  431883:	test   esp,esp
  431885:	clc    
  431886:	test   DWORD PTR [ebp-0x8],ecx
  431889:	add    BYTE PTR [ebp+0x51],0x39
  43188d:	jmp    0x8bcca12e
  431892:	in     al,dx
  431893:	or     BYTE PTR [ebp-0xf],al
  431896:	xor    eax,DWORD PTR [eax+0x4f896703]
  43189c:	hlt    
  43189d:	mov    eax,DWORD PTR [ebp-0x50]
  4318a0:	xor    esi,ecx
  4318a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4318a8:	inc    ebp
  4318a9:	adc    esi,0x68
  4318ac:	pushf  
  4318ad:	inc    edi
  4318af:	add    al,ch
  4318b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318b2:	test   edi,edi
  4318b4:	clc    
  4318b5:	inc    DWORD PTR [ebp-0x73]
  4318b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4318bc:	(bad)  
  4318bd:	push   ecx
  4318be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318bf:	jne    0x431846
  4318c1:	push   eax
  4318c2:	clc    
  4318c3:	test   DWORD PTR [ebp-0x1],eax
  4318c6:	cmp    eax,0xc78b9cff
  4318cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4318d2:	inc    ebp
  4318d3:	push   edi
  4318d4:	aas    
  4318d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4318dc:	dec    ebp
  4318dd:	add    BYTE PTR [ebx],dh
  4318df:	inc    ebp
  4318e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4318e6:	enter  0x8401,0x0
  4318ea:	add    al,BYTE PTR [eax]
  4318ec:	add    bh,bh
  4318ee:	out    dx,eax
  4318ef:	sbb    BYTE PTR [eax],al
  4318f1:	dec    ebp
  4318f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4318f8:	sub    esi,DWORD PTR [ebx]
  4318fa:	mov    ebp,DWORD PTR [eax-0x8]
  4318fd:	add    bl,0x0
  431900:	(bad)  
  431901:	cmp    eax,ecx
  431903:	or     BYTE PTR [edx+0x750114],al
  431909:	inc    DWORD PTR [ebp+0x18]
  43190c:	mov    eax,DWORD PTR [ebp-0x8]
  43190f:	mov    ebx,eax
  431911:	(bad)  
  431912:	retf   
  431913:	inc    ebp
  431914:	into   
  431915:	mov    esi,eax
  431917:	int3   
  431918:	scas   eax,DWORD PTR es:[edi]
  431919:	push   es
  43191a:	mov    esi,DWORD PTR [ebp-0xc]
  43191d:	call   DWORD PTR [ebp+0x18]
  431920:	sub    edi,DWORD PTR [ebp+0x3b]
  431923:	mov    esi,DWORD PTR [edi-0x34]
  431926:	mov    eax,DWORD PTR [ebp-0x8]
  431929:	ss ret 
  43192b:	pushf  
  43192c:	mov    bh,0xbc
  43192f:	fadd   QWORD PTR [eax]
  431931:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431937:	mov    esi,DWORD PTR [ebx]
  431939:	in     al,0x33
  43193b:	ret    
  43193c:	add    eax,esi
  43193e:	add    eax,DWORD PTR [ebp+0xf]
  431941:	mov    eax,ecx
  431943:	in     al,0x4d
  431945:	ret    
  431946:	mov    eax,esi
  431948:	in     al,dx
  431949:	inc    ebp
  43194a:	rol    edi,1
  43194c:	sar    al,1
  43194e:	or     BYTE PTR [ebp+0x45e9f845],al
  431954:	add    BYTE PTR [eax],bh
  431956:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43195d:	test   ebx,eax
  43195f:	clc    
  431960:	retf   
  431961:	inc    ebp
  431962:	into   
  431963:	cmp    al,dh
  431965:	pushf  
  431966:	scas   eax,DWORD PTR es:[edi]
  431967:	(bad)  
  431968:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43196f:	inc    ebp
  431970:	cmp    edi,DWORD PTR [edi+esi*2]
  431973:	pushf  
  431974:	mov    eax,edi
  431976:	mov    esp,0x458567a8
  43197b:	clc    
  43197c:	mov    eax,DWORD PTR [ebp-0x8]
  43197f:	mov    eax,ebx
  431981:	in     al,dx
  431982:	retf   
  431983:	ret    
  431984:	into   
  431985:	mov    dh,0x7d
  431988:	scas   eax,DWORD PTR es:[edi]
  431989:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43198f:	add    BYTE PTR [ebx],ch
  431991:	jmp    0xba1ad1
  431996:	mov    eax,DWORD PTR [ebp-0x5c]
  431999:	mov    eax,DWORD PTR [ebp-0x14]
  43199c:	inc    ebp
  43199d:	enter  0x458b,0xf8
  4319a1:	xor    eax,ebx
  4319a3:	add    ecx,ebx
  4319a5:	cmp    ecx,esi
  4319a7:	shufps xmm7,xmm4,0xaf
  4319ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4319b1:	dec    ebp
  4319b2:	sub    esi,DWORD PTR [ebx]
  4319b4:	cmp    esi,DWORD PTR [ebx]
  4319b6:	ja     0x4319bb
  4319b8:	mov    eax,DWORD PTR [ebx]
  4319ba:	lods   al,BYTE PTR ds:[esi]
  4319bb:	mov    db0,ecx
  4319be:	inc    ebp
  4319bf:	dec    ebp
  4319c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4319c6:	retf   
  4319c7:	rol    dh,1
  4319c9:	or     al,0xce
  4319cb:	inc    ebp
  4319cc:	scas   eax,DWORD PTR es:[edi]
  4319cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4319d3:	add    BYTE PTR [ebx],ch
  4319d5:	add    BYTE PTR [ebx],bh
  4319d7:	inc    ebp
  4319d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4319de:	inc    ebp
  4319df:	retf   
  4319e0:	mov    ecx,esi
  4319e2:	clc    
  4319e3:	(bad)  
  4319e4:	retf   
  4319e5:	scas   eax,DWORD PTR es:[edi]
  4319e6:	ret    
  4319e7:	mov    ecx,esi
  4319e9:	hlt    
  4319ea:	(bad)  
  4319eb:	push   ebp
  4319ec:	scas   eax,DWORD PTR es:[edi]
  4319ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4319f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4319f9:	add    BYTE PTR [ebx],al
  4319fb:	mov    eax,eax
  4319fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319fe:	inc    ebp
  4319ff:	dec    ebp
  431a00:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a08:	inc    ebp
  431a09:	(bad)  
  431a0b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a13:	sar    eax,1
  431a15:	rol    BYTE PTR [ebp+0x5],1
  431a18:	xor    eax,DWORD PTR [ebp+0x3]
  431a1b:	jmp    0x431a08
  431a1d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431a23:	xor    eax,DWORD PTR [ebp+0x33]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	rol    BYTE PTR [ebx],1
  431a2a:	test   BYTE PTR [edi],cl
  431a2c:	cdq    
  431a2d:	shl    DWORD PTR [edx],0x4d
  431a30:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431a36:	xor    edx,eax
  431a38:	add    eax,DWORD PTR ds:0xeb4d45e0
  431a3e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431a44:	add    BYTE PTR [ebx],dh
  431a46:	inc    ebp
  431a47:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431a4d:	rdpmc  
  431a4f:	rol    DWORD PTR [ebx],0x4d
  431a52:	loopne 0x4319df
  431a54:	push   ebp
  431a55:	in     al,dx
  431a56:	mov    cl,dl
  431a58:	adc    eax,edx
  431a5a:	jb     0x431a61
  431a5c:	add    BYTE PTR [ebp+0x45],al
  431a5f:	jmp    0x4319ec
  431a61:	mov    ebx,eax
  431a63:	test   al,0xcb
  431a65:	dec    ebp
  431a66:	dec    ebp
  431a67:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431a6d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431a73:	dec    ebp
  431a74:	mov    al,0x8b
  431a76:	dec    ebp
  431a77:	in     al,dx
  431a78:	xor    edx,ecx
  431a7a:	xor    edx,eax
  431a7c:	add    eax,DWORD PTR [ebp+0x3]
  431a7f:	jbe    0x431a90
  431a81:	mov    eax,ecx
  431a83:	test   al,0x45
  431a85:	dec    ebp
  431a86:	mov    DWORD PTR [ebx],esi
  431a88:	loopne 0x431abd
  431a8a:	inc    ebp
  431a8b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431a91:	rol    esi,0x45
  431a94:	scas   eax,DWORD PTR es:[edi]
  431a95:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431a9b:	mov    eax,ecx
  431a9d:	hlt    
  431a9e:	dec    ebp
  431a9f:	inc    ebp
  431aa0:	mov    eax,edi
  431aa2:	loopne 0x431a7c
  431aa4:	retf   
  431aa5:	test   esi,ecx
  431aa7:	clc    
  431aa8:	scas   eax,DWORD PTR es:[edi]
  431aa9:	inc    ebp
  431aaa:	mov    eax,edi
  431aac:	fdiv   st,st(0)
  431aae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431ab4:	cdq    
  431ab5:	cmp    BYTE PTR [edx],dh
  431ab7:	pushf  
  431ab8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431abe:	inc    esi
  431ac0:	mov    ebp,DWORD PTR [eax-0x10]
  431ac3:	inc    ebp
  431ac4:	dec    ebp
  431ac5:	xor    esi,DWORD PTR [ebx]
  431ac7:	add    eax,DWORD PTR [ebx]
  431ac9:	loopne 0x431ada
  431acb:	dec    ebp
  431acc:	ror    DWORD PTR [edx+0x7233084d],0x3
  431ad3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431ad9:	lock cdq 
  431adb:	ret    
  431adc:	xor    al,BYTE PTR [ebp-0x77]
  431adf:	mov    esi,esp
  431ae1:	rol    BYTE PTR [ebp-0x7c],1
  431ae4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431aea:	call   edi
  431aec:	enter  0x4d45,0x8b
  431af0:	mov    esi,eax
  431af2:	fmul   st(3),st
  431af4:	push   ebp
  431af5:	dec    ebp
  431af6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431afc:	ret    0xc199
  431aff:	xor    al,BYTE PTR [esi-0x280276]
  431b05:	dec    ebp
  431b06:	jne    0x431b3b
  431b08:	mov    eax,DWORD PTR [ebx]
  431b0a:	cld    
  431b0b:	loopne 0x431abd
  431b0d:	push   ebp
  431b0e:	add    DWORD PTR [eax+0x72851100],ecx
  431b14:	inc    DWORD PTR [eax]
  431b16:	inc    DWORD PTR [ebp-0x75]
  431b19:	mov    edi,esp
  431b1b:	lock add bl,0x1
  431b1f:	retf   
  431b20:	add    dh,al
  431b22:	xor    dh,cl
  431b24:	inc    ebp
  431b25:	scas   eax,DWORD PTR es:[edi]
  431b26:	mov    eax,DWORD PTR [ebx]
  431b28:	shl    al,0x0
  431b2b:	inc    ebp
  431b2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431b32:	call   0x462d6a
  431b37:	ud0    eax,ecx
  431b3a:	adc    al,0x4d
  431b3c:	inc    ebp
  431b3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431b43:	lock push 0x338055
  431b49:	add    eax,DWORD PTR [eax]
  431b4b:	ud0    ecx,edx
  431b4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431b51:	xor    ecx,ecx
  431b53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431b5a:	push   ecx
  431b5b:	add    BYTE PTR [ebp-0x38],cl
  431b5e:	mov    DWORD PTR [esi-0x740004],eax
  431b64:	cld    
  431b65:	inc    ebp
  431b66:	nop
  431b67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431b6d:	xabort 0xaf
  431b70:	icebp  
  431b71:	mov    esi,DWORD PTR [ebp-0x28]
  431b74:	(bad)  
  431b75:	retf   
  431b76:	or     ecx,eax
  431b78:	(bad)  
  431b79:	dec    ebp
  431b7a:	pop    es
  431b7b:	(bad)  
  431b7c:	(bad)  
  431b7d:	or     BYTE PTR [esi],al
  431b7f:	jb     0x431b47
  431b81:	add    BYTE PTR [ebx],al
  431b83:	inc    ebp
  431b84:	(bad)  
  431b85:	mov    ecx,DWORD PTR [edx]
  431b87:	fadd   st(6),st
  431b89:	ret    
  431b8a:	add    ah,BYTE PTR [edi-0x37]
  431b8d:	int    0x55
  431b8f:	sub    ebp,esp
  431b91:	add    edx,DWORD PTR [ecx-0x14]
  431b94:	inc    ebp
  431b95:	inc    ebp
  431b96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431b9c:	cld    
  431b9d:	(bad)  
  431b9e:	mov    WORD PTR [edi+0xf893be0],gs
  431ba4:	mov    ebp,ebp
  431ba6:	clc    
  431ba7:	push   eax
  431ba9:	push   DWORD PTR [ebp-0x4]
  431bac:	mov    BYTE PTR [ebp+0xa],0xff
  431bb0:	(bad)  
  431bb1:	int3   
  431bb2:	or     BYTE PTR [eax],al
  431bb4:	(bad)  
  431bb5:	lea    eax,[edi]
  431bb7:	ins    BYTE PTR es:[edi],dx
  431bb8:	(bad)  
  431bb9:	inc    DWORD PTR [ecx]
  431bbb:	push   eax
  431bbc:	mov    BYTE PTR [ebp+0x9],0x8b
  431bc0:	leave  
  431bc1:	les    edx,FWORD PTR [ebp+0x0]
  431bc4:	in     al,dx
  431bc5:	call   DWORD PTR [ecx-0x75]
  431bc8:	inc    ebp
  431bc9:	cld    
  431bca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431bd0:	cld    
  431bd1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431bd7:	std    
  431bd8:	mov    eax,DWORD PTR [eax]
  431bda:	clc    
  431bdb:	test   eax,esi
  431bdd:	je     0x431c54
  431bdf:	mov    eax,esi
  431be1:	cld    
  431be2:	add    al,0x80
  431be4:	add    WORD PTR [ecx+0x0],ax
  431be8:	fiadd  DWORD PTR [eax]
  431bea:	mov    BYTE PTR [eax],0xd6
  431bed:	push   0xffffffc3
  431bef:	push   edi
  431bf0:	mov    edx,DWORD PTR [eax+0x51]
  431bf3:	pop    edi
  431bf4:	lea    ebx,[ebx-0x8]
  431bf7:	ret    0x45
  431bfa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c00:	xchg   eax,edi
  431c02:	mov    DWORD PTR [ebp-0x75],ecx
  431c05:	push   esi
  431c06:	clc    
  431c07:	jne    0x431bd9
  431c09:	mov    ecx,0xf8450b0b
  431c0e:	(bad)  
  431c0f:	push   cs
  431c10:	or     BYTE PTR [ebp-0x3a],dh
  431c13:	cmp    eax,DWORD PTR [ecx]
  431c15:	pop    esi
  431c16:	(bad)  
  431c17:	or     al,0x5
  431c19:	inc    eax
  431c1a:	leave  
  431c1b:	jmp    0x40cf:0x21564204
  431c22:	leave  
  431c23:	jmp    0xdace5d27
  431c28:	mov    eax,DWORD PTR [edx-0x3a]
  431c2b:	jle    0x431c23
  431c2d:	inc    eax
  431c2e:	nop
  431c2f:	in     al,dx
  431c30:	inc    ebx
  431c32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431c38:	add    eax,0xff45e8f8
  431c3d:	push   esi
  431c3e:	push   DWORD PTR [ebp-0x39]
  431c41:	mov    eax,0x7e9da46
  431c46:	or     al,0x6
  431c48:	push   DWORD PTR [ebp-0x3a]
  431c4b:	cmp    eax,DWORD PTR [edx]
  431c4d:	pop    esi
  431c4e:	ret    
  431c4f:	or     al,0x56
  431c51:	inc    ecx
  431c52:	push   ebp
  431c53:	jle    0x431c41
  431c55:	inc    edx
  431c56:	inc    ebp
  431c57:	leave  
  431c58:	add    DWORD PTR [ecx+0x28],eax
  431c5b:	and    esp,edi
  431c5d:	inc    ecx
  431c5e:	jne    0x431c47
  431c60:	add    DWORD PTR [edx+0x1c],eax
  431c63:	retf   0xc38b
  431c66:	adc    al,0x8b
  431c68:	xchg   edx,eax
  431c69:	push   ecx
  431c6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431c70:	rcl    DWORD PTR [esi-0x9],cl
  431c73:	jne    0x431cc5
  431c75:	mov    eax,0x7c80ece
  431c7a:	rol    DWORD PTR [esi],cl
  431c7c:	div    DWORD PTR [ebp+0x50]
  431c7f:	cmp    ecx,edx
  431c81:	pop    esi
  431c82:	dec    BYTE PTR [edx]
  431c84:	in     al,dx
  431c85:	inc    edx
  431c86:	sub    ebp,ebp
  431c88:	inc    eax
  431c89:	(bad)  
  431c8a:	push   eax
  431c8b:	add    edx,DWORD PTR [eax-0x13]
  431c8e:	push   edi
  431c8f:	add    dh,dh
  431c91:	leave  
  431c92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431c96:	add    BYTE PTR [ecx+0x0],dl
  431c99:	inc    ebp
  431c9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ca0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ca6:	add    al,0x2
  431ca8:	jmp    0x57ec802
  431cad:	jne    0x431c97
  431caf:	mov    eax,DWORD PTR [edx]
  431cb1:	or     BYTE PTR [eax],al
  431cb3:	inc    ecx
  431cb4:	stc    
  431cb5:	jmp    0xe7825cf0
  431cba:	jge    0x431cfd
  431cbc:	mov    esi,ebp
  431cbe:	lock ret 0x7d
  431cc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431cc8:	add    bh,bh
  431cca:	aad    0xd7
  431ccc:	add    dh,cl
  431cce:	clts   
  431cd0:	(bad)  
  431cd1:	call   0xffce1bd6
  431cd6:	hlt    
  431cd7:	iret   
  431cd8:	jge    0x431cb0
  431cda:	rol    DWORD PTR [esi-0x80],cl
  431cdd:	cmc    
  431cde:	or     BYTE PTR [edi-0x27],cl
  431ce1:	(bad)  
  431ce2:	out    dx,al
  431ce3:	mov    eax,DWORD PTR [ebx]
  431ce5:	(bad)  
  431ce6:	pop    esi
  431ce7:	push   es
  431ce8:	cmp    al,0xe8
  431cea:	sar    edi,0x8
  431ced:	inc    DWORD PTR [edi]
  431cef:	inc    esi
  431cf0:	(bad)  
  431cf1:	in     al,dx
  431cf2:	jle    0x431d4b
  431cf4:	push   cs
  431cf5:	push   ebx
  431cf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431cfc:	add    BYTE PTR [ebp+0x50],al
  431cff:	push   eax
  431d00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d06:	sub    edx,DWORD PTR [esi-0x24]
  431d09:	jne    0x431cc1
  431d0b:	lods   eax,DWORD PTR ds:[esi]
  431d0c:	mov    edx,DWORD PTR [edx-0x34]
  431d0f:	dec    esi
  431d10:	out    0x83,eax
  431d12:	into   
  431d13:	push   edi
  431d15:	loopne 0x431ce5
  431d17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431d22:	rol    DWORD PTR [edx],0x8
  431d25:	mov    esp,ecx
  431d27:	cmp    DWORD PTR [ebx],0xc
  431d2a:	mov    esi,0x5001c0
  431d2f:	push   eax
  431d30:	push   cs
  431d31:	push   eax
  431d32:	(bad)  
  431d33:	sub    edx,edi
  431d35:	push   esi
  431d36:	adc    al,0xcb
  431d38:	ins    DWORD PTR es:[edi],dx
  431d39:	mov    eax,0x203e8
  431d3e:	add    al,ah
  431d40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431d47:	add    dh,al
  431d49:	add    ah,ch
  431d4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431d51:	pop    ecx
  431d52:	or     eax,ebx
  431d54:	cli    
  431d55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431d5b:	lea    ebp,[ebx]
  431d5d:	mov    edx,DWORD PTR [edx-0x4]
  431d60:	dec    ecx
  431d61:	inc    ebp
  431d62:	shr    BYTE PTR [ebx],0x4b
  431d65:	and    al,0x0
  431d67:	(bad)  
  431d68:	jne    0x431daf
  431d6a:	pop    eax
  431d6b:	mov    al,0x5a
  431d6d:	call   0x1421fcc
  431d72:	and    al,0x85
  431d74:	push   edx
  431d75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431d79:	dec    ebp
  431d7a:	mov    cl,0x23
  431d7c:	jmp    0x431d6a
  431d7e:	mov    al,0xe7
  431d80:	call   0x139206e
  431d85:	shr    DWORD PTR [eax+ebx*2],cl
  431d88:	lock (bad) 
  431d8a:	adc    eax,0x757f008d
  431d8f:	out    0x58,eax
  431d91:	cmp    al,0x7
  431d93:	pop    edx
  431d94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431d9b:	push   ecx
  431d9c:	cld    
  431d9d:	mov    esi,0x3b0175
  431da2:	and    al,0xb0
  431da4:	xor    BYTE PTR [edx+0x1],0x8b
  431da8:	add    ah,bh
  431daa:	mov    edi,DWORD PTR [ebp-0x4]
  431dad:	psubsw mm7,QWORD PTR [edi]
  431db0:	add    DWORD PTR [ebp+0x0],ebp
  431db3:	rcr    eax,1
  431db5:	mov    edi,ecx
  431db7:	and    eax,DWORD PTR [eax]
  431db9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431dbf:	call   0x13020a8
  431dc4:	add    al,cl
  431dc6:	mov    ebp,esi
  431dc8:	aam    0x83
  431dca:	or     DWORD PTR [ecx],eax
  431dcc:	jne    0x431dbf
  431dce:	mov    eax,DWORD PTR [eax]
  431dd0:	aam    0x0
  431dd2:	dec    ebp
  431dd3:	jne    0x431d60
  431dd5:	cmp    ebx,eax
  431dd7:	jb     0x431e26
  431dd9:	jmp    0x431d66
  431ddb:	mov    ebx,esp
  431ddd:	int3   
  431dde:	dec    ebp
  431ddf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431de6:	mov    edx,0x8b0a8b
  431deb:	cmp    ecx,DWORD PTR [eax]
  431ded:	jb     0x431dc6
  431def:	pop    edx
  431df0:	push   edi
  431df1:	cli    
  431df2:	pop    es
  431df3:	mov    eax,ecx
  431df5:	jb     0x431df9
  431df7:	add    DWORD PTR [ebx],0xa
  431dfa:	mov    eax,DWORD PTR [ebx]
  431dfc:	int3   
  431dfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431e03:	jmp    0x431d90
  431e05:	mov    al,0xe8
  431e07:	call   0x1042089
  431e0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e0f:	pop    edi
  431e10:	or     BYTE PTR [ecx-0x73],bl
  431e13:	pop    ecx
  431e14:	inc    edi
  431e15:	xor    al,0xeb
  431e17:	push   ecx
  431e18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e1e:	call   0xb21f23
  431e23:	int3   
  431e24:	sbb    BYTE PTR [esi],ch
  431e26:	inc    ebp
  431e27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431e2d:	call   0x9c209c
  431e32:	or     BYTE PTR [ebx-0x73],dl
  431e35:	cmp    al,0x47
  431e37:	mov    al,0x1
  431e39:	jb     0x431e3b
  431e3b:	mov    al,0x10
  431e3d:	push   eax
  431e3e:	add    al,0x75
  431e40:	add    BYTE PTR [ebx],ch
  431e42:	add    ebx,esp
  431e44:	int3   
  431e45:	jne    0x431e57
  431e47:	movsx  edx,cl
  431e4a:	add    DWORD PTR [eax],eax
  431e4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431e53:	mov    gs,edi
  431e55:	add    BYTE PTR [eax-0x50],ch
  431e58:	add    al,ch
  431e5a:	mov    eax,DWORD PTR [ecx]
  431e5c:	sub    eax,DWORD PTR [eax]
  431e5e:	jb     0x431ed5
  431e60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431e64:	jge    0x431e4e
  431e66:	add    al,0x1
  431e68:	add    DWORD PTR [eax],0x0
  431e6b:	jne    0x431e6d
  431e6d:	je     0x431eb4
  431e6f:	mov    eax,DWORD PTR [edi]
  431e71:	ror    BYTE PTR [ebp+0x4d],1
  431e74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431e7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431e81:	mov    DWORD PTR [ebx],ebp
  431e83:	fadd   DWORD PTR [eax+0x75]
  431e86:	inc    eax
  431e87:	pop    eax
  431e88:	lea    ebx,[ecx+0x4f]
  431e8b:	push   0xb1000003
  431e90:	out    dx,eax
  431e91:	add    ebp,DWORD PTR [edx+edx*2]
  431e94:	add    BYTE PTR [ebx+ecx*4],bh
  431e97:	mov    ch,BYTE PTR [ebx]
  431e99:	jb     0x431f0d
  431e9b:	add    al,0x89
  431e9d:	push   eax
  431e9e:	call   0x842b6c10
  431ea3:	add    DWORD PTR [eax+eax*1],eax
  431ea6:	jae    0x431ebc
  431ea8:	icebp  
  431ea9:	inc    ebp
  431eaa:	mov    eax,DWORD PTR gs:[ecx]
  431ead:	int3   
  431eae:	out    dx,al
  431eaf:	loopne 0x431efe
  431eb1:	sub    eax,DWORD PTR [edx]
  431eb3:	push   0xffffff83
  431eb5:	pop    esi
  431eb6:	push   cs
  431eb7:	jl     0x431ed2
  431eb9:	add    al,0xaf
  431ebb:	xor    eax,0x832b6d00
  431ec0:	mov    eax,DWORD PTR [edx]
  431ec2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431ec8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431ece:	inc    ebp
  431ecf:	shr    ebx,0x3
  431ed2:	or     DWORD PTR [eax],0x4
  431ed5:	push   0xffffffa5
  431ed7:	pop    esi
  431ed8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431edf:	jmp    0x431f3e
  431ee1:	mov    edi,0xff0272
  431ee6:	fdivr  QWORD PTR [ebp+0x5d]
  431ee9:	push   0x4e
  431eeb:	pop    ecx
  431eec:	call   0x4362f1
  431ef1:	mov    DWORD PTR [ebx],eax
  431ef3:	in     al,0xc8
  431ef5:	rol    BYTE PTR [ebp-0x75],0xc1
  431ef9:	call   0xad20da
  431efe:	pop    esi
  431eff:	enter  0xceff,0x8b
  431f03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f0e:	je     0x431f10
  431f10:	or     DWORD PTR [ebx-0x74183b24],eax
  431f16:	jne    0x431efc
  431f18:	jmp    0x431f13
  431f1a:	push   DWORD PTR [edx-0x24]
  431f1d:	push   0x4d
  431f1f:	pop    ecx
  431f20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431f24:	jge    0x431f2c
  431f26:	mov    eax,eax
  431f28:	sub    ebp,DWORD PTR [edx+0x24]
  431f2b:	pop    esi
  431f2c:	inc    ebp
  431f2d:	mov    esp,0x8b6077
  431f32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431f38:	lods   al,BYTE PTR ds:[esi]
  431f39:	add    BYTE PTR [ebx],bh
  431f3b:	enter  0xce73,0x49
  431f3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431f47:	stc    
  431f48:	jge    0x431fbc
  431f4a:	jnp    0xdd42a2b9
  431f50:	call   0xc62026
  431f55:	fadd   st(0),st
  431f57:	dec    esi
  431f58:	ins    BYTE PTR es:[edi],dx
  431f59:	stc    
  431f5a:	cmp    al,0x73
  431f5c:	push   ebp
  431f5d:	mov    eax,0xf8028b
  431f62:	jne    0x431f25
  431f64:	mov    esi,ecx
  431f66:	mov    esp,DWORD PTR [ebp+0x2c]
  431f69:	add    edi,DWORD PTR [ebp-0x24]
  431f6c:	sub    esp,eax
  431f6e:	and    al,0x45
  431f70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431f76:	sbb    al,0xee
  431f78:	pop    esi
  431f79:	call   0x831fa9
  431f7e:	fsubr  st,st(3)
  431f80:	sti    
  431f81:	add    BYTE PTR gs:[ecx],bh
  431f84:	add    eax,esp
  431f86:	add    DWORD PTR [esi],eax
  431f88:	rol    DWORD PTR [ebp+0x8],0x29
  431f8c:	mov    esp,eax
  431f8e:	clc    
  431f8f:	jne    0x432006
  431f91:	mov    eax,0x8b0673
  431f96:	loopne 0x431fdd
  431f98:	loopne 0x431f23
  431f9a:	lods   al,BYTE PTR ds:[esi]
  431f9b:	int3   
  431f9c:	inc    ebp
  431f9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431fa1:	add    al,0xc3
  431fa3:	sub    ecx,DWORD PTR [ebp+0x47]
  431fa6:	(bad)  
  431fa8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431fac:	add    eax,DWORD PTR [eax]
  431fae:	call   0x644e0b3
  431fb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431fb9:	dec    esi
  431fba:	ins    DWORD PTR es:[edi],dx
  431fbb:	in     al,dx
  431fbc:	lea    eax,[eax]
  431fbe:	inc    ebp
  431fbf:	inc    ebp
  431fc0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431fc6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431fd0:	and    al,0xdc
  431fd2:	ror    DWORD PTR [edx+0x24],0xf7
  431fd6:	or     BYTE PTR [ebp+0x4c],dh
  431fd9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431fdd:	stos   BYTE PTR es:[edi],al
  431fde:	adc    edx,edi
  431fe0:	inc    esp
  431fe1:	add    edi,DWORD PTR [eax]
  431fe3:	jne    0x431fc8
  431fe5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431feb:	cmp    ecx,DWORD PTR [edi]
  431fed:	sub    BYTE PTR [ebp-0x7e],dl
  431ff0:	sar    ebp,0xb
  431ff3:	jmp    FWORD PTR [edi+0x2400392a]
  431ff9:	sub    esi,DWORD PTR [ebx-0x73]
  431ffc:	mov    esp,DWORD PTR [ecx+edi*4]
  431fff:	mov    ecx,DWORD PTR [eax]
  432001:	and    BYTE PTR [eax],al
  432003:	jne    0x431fcf
  432005:	sub    ebp,ecx
  432007:	sbb    BYTE PTR [esi+0x32],ah
  43200a:	dec    ebp
  43200b:	push   ebp
  43200c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432012:	ret    
  432013:	mov    edx,ebp
  432015:	leave  
  432016:	sub    DWORD PTR [esi+0x24],ebx
  432019:	ret    0x2b
  43201c:	pop    ax
  43201e:	push   ebp
  43201f:	rol    BYTE PTR [ebx],0xeb
  432022:	add    DWORD PTR [ecx+0x6c0001],0x40
  432029:	jb     0x432080
  43202b:	ret    
  43202c:	in     al,dx
  43202d:	jecxz  0x431fba
  43202f:	push   esi
  432030:	xchg   esp,eax
  432031:	jne    0x432033
  432033:	cmp    edx,DWORD PTR [esi+0x1c]
  432036:	jne    0x43201c
  432038:	mov    eax,DWORD PTR [ebp-0x77]
  43203b:	ror    DWORD PTR [ebx+0x899408],0xe0
  432042:	mov    esi,DWORD PTR [ebp-0x75]
  432045:	pop    esi
  432046:	nop
  432047:	mov    eax,DWORD PTR [eax]
  432049:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  43204f:	add    al,0x0
  432051:	inc    ebp
  432052:	mov    eax,DWORD PTR [ebx]
  432054:	mov    ebp,ebx
  432056:	cmp    al,0xf
  432058:	or     al,al
  43205a:	inc    ebp
  43205b:	inc    ebp
  43205c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  432064:	mov    bh,0xc0
  432066:	push   ss
  432067:	ins    BYTE PTR es:[edi],dx
  432068:	push   ecx
  432069:	add    BYTE PTR [ecx-0x5],dl
  43206c:	add    eax,0x17200
  432071:	sbb    al,0x85
  432073:	dec    esp
  432074:	je     0x4320ae
  432076:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43207a:	add    BYTE PTR [ebx],bh
  43207c:	(bad)  
  43207d:	and    al,0x39
  43207f:	jae    0x43201d
  432081:	mov    cl,cl
  432083:	inc    DWORD PTR [esp]
  432086:	push   ebp
  432087:	shr    esp,0x8
  43208a:	in     al,dx
  43208b:	push   esp
  43208c:	add    DWORD PTR [eax],esp
  43208e:	add    bl,cl
  432090:	inc    ebp
  432091:	mov    bh,0x89
  432093:	add    ah,bh
  432095:	jmp    0xca7c2fdf
  43209a:	pushf  
  43209b:	dec    esp
  43209c:	mov    edx,0xf8178520
  4320a1:	fst    DWORD PTR [ebp+0x0]
  4320a4:	mov    BYTE PTR [eax],0xc4
  4320a7:	sub    edx,DWORD PTR [ebx-0x3f]
  4320aa:	inc    ebp
  4320ab:	add    eax,0xc601da
  4320b0:	mov    al,0xc6
  4320b3:	ins    BYTE PTR es:[edi],dx
  4320b4:	mov    DWORD PTR [eax+0x57],0x280545c1
  4320bb:	dec    esp
  4320bc:	jmp    DWORD PTR [eax]
  4320be:	inc    ebp
  4320bf:	fnstcw WORD PTR [esi+0x29]
  4320c2:	test   BYTE PTR [eax],0xc6
  4320c5:	rol    BYTE PTR [eax],0xc0
  4320c8:	lea    ecx,[ebp-0x3cf0dbcb]
  4320ce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4320d4:	inc    esi
  4320d5:	add    DWORD PTR [eax],ebx
  4320d7:	add    dh,bh
  4320d9:	mov    esi,DWORD PTR [edx+0x8]
  4320dc:	(bad)  
  4320dd:	fdiv   QWORD PTR ss:[ecx]
  4320e0:	(bad)  
  4320e1:	mov    bl,ch
  4320e3:	add    esi,eax
  4320e5:	add    dh,bl
  4320e7:	or     esi,eax
  4320e9:	mov    dl,0xdf
  4320eb:	add    esi,eax
  4320ed:	add    al,ah
  4320ef:	push   cs
  4320f0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4320f7:	or     BYTE PTR [ebx],dh
  4320f9:	dec    ecx
  4320fa:	lea    eax,[ebx]
  4320fc:	xor    eax,0x18fc0fc7
  432101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432102:	repz clc 
  432104:	add    eax,DWORD PTR [ebp+0x46]
  432107:	prefetcht0 BYTE PTR [ecx-0x2]
  43210b:	xor    eax,0x7c60872
  432110:	mov    esp,0xbd32c699
  432115:	pop    esi
  432116:	mov    cl,0xbe
  432119:	or     al,0xc6
  43211b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432122:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432129:	add    dh,al
  43212b:	mov    eax,ebx
  43212d:	xor    DWORD PTR [ebx],0x35008dbc
  432133:	mov    ecx,DWORD PTR [edi]
  432135:	sbb    al,0x18
  432137:	inc    ebp
  432138:	xrelease mov DWORD PTR [ebx],0x188546f4
  43213f:	clc    
  432140:	(bad)  
  432141:	ss jb  0x4320e0
  432144:	lea    ecx,[ecx+0x45ffe838]
  43214a:	mov    ebp,esp
  43214c:	fadd   st,st(6)
  43214e:	dec    ebp
  43214f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432155:	out    0x1,eax
  432157:	inc    ebp
  432158:	lea    ebp,[ecx]
  43215a:	inc    esi
  43215c:	dec    eax
  43215e:	enter  0xa33,0xc6
  432162:	push   ebp
  432163:	leave  
  432164:	(bad)  
  432165:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43216b:	add    BYTE PTR [ebp+0x44],al
  43216e:	mov    eax,esp
  432170:	mov    WORD PTR [esi+0x44398300],?
  432176:	psubusw mm4,QWORD PTR [eax-0x78]
  43217a:	add    BYTE PTR [ebx-0x1303f975],al
  432180:	add    BYTE PTR [ebp+0x1],0xeb
  432184:	add    BYTE PTR [ebp+0x38],al
  432187:	jmp    0xdbce66d1
  43218c:	add    BYTE PTR [ebp+0x0],0xe8
  432190:	mov    DWORD PTR [ebp-0x48],eax
  432193:	sub    DWORD PTR [edi+0x45],ecx
  432196:	add    BYTE PTR [eax],ch
  432198:	js     0x4321df
  43219a:	data16 jle 0x432122
  43219d:	idiv   bh
  43219f:	inc    esp
  4321a0:	(bad)  
  4321a1:	fadd   st(7),st
  4321a3:	mov    dh,0x89
  4321a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4321a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4321af:	pop    es
  4321b0:	push   0x8d45ffec
  4321b5:	jmp    0xe6cc66bd
  4321ba:	push   0x45
  4321bc:	jmp    edx
  4321be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4321c2:	mov    DWORD PTR [ebp+0x6c],eax
  4321c5:	(bad)  
  4321c7:	inc    ebp
  4321c8:	(bad)  
  4321c9:	out    dx,al
  4321ca:	add    al,0x45
  4321cc:	mov    edi,esp
  4321ce:	outs   dx,BYTE PTR ds:[esi]
  4321cf:	inc    ebp
  4321d0:	(bad)  
  4321d1:	jle    0x432156
  4321d3:	idiv   BYTE PTR ds:0x70bc8944
  4321d9:	mov    dh,0xff
  4321db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4321e2:	jb     0x432167
  4321e4:	dec    DWORD PTR [eax]
  4321e6:	mov    ebp,esp
  4321e8:	test   WORD PTR [ebp-0x1],ax
  4321ef:	inc    ebp
  4321f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4321f7:	adc    edi,edi
  4321f9:	mov    ebp,edi
  4321fb:	mov    eax,DWORD PTR [eax]
  4321fd:	cmp    BYTE PTR [esi-0x1],ah
  432200:	test   DWORD PTR [ebx],edi
  432202:	push   DWORD PTR [ebp-0x1]
  432205:	mov    DWORD PTR [esi-0x48],ebp
  432208:	add    BYTE PTR [ebp+0x66],al
  43220b:	jmp    0x432192
  43220d:	pushf  
  43220e:	dec    DWORD PTR [ebx-0x7f940301]
  432214:	add    BYTE PTR [ecx],al
  432216:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43221d:	add    al,al
  43221f:	add    BYTE PTR [esi+0x45],ah
  432222:	test   DWORD PTR [ebx+0xff7cff],ecx
  432228:	inc    eax
  432229:	mov    DWORD PTR [eax],eax
  43222b:	mov    esp,DWORD PTR [esi-0x4]
  43222e:	inc    ebp
  43222f:	cmp    BYTE PTR [eax+0x4701],0x38
  432236:	mov    DWORD PTR [ebp-0x7e],ebp
  432239:	add    BYTE PTR [edi-0x73],al
  43223c:	push   0xffffffcd
  43223e:	mov    WORD PTR [ebp+0x64],ax
  432242:	(bad)  
  432243:	call   eax
  432245:	mov    esp,esi
  432247:	data16 cmc 
  432249:	test   DWORD PTR [ebp-0x1],eax
  43224c:	(bad)  
  43224e:	out    0xc0,eax
  432250:	lea    esp,[esi-0x30]
  432253:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432259:	inc    edi
  43225a:	jmp    0x75ff:0x40858866
  432261:	dec    DWORD PTR [ebp-0x7a992f40]
  432267:	test   esi,edi
  432269:	(bad)  
  43226a:	(bad)  
  43226b:	inc    DWORD PTR [ebp-0x9901b9]
  432271:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432277:	rcl    BYTE PTR [ecx+0x66],0x33
  43227b:	test   DWORD PTR [ebx+0xff72ff],edi
  432281:	inc    edi
  432282:	ret    
  432283:	mov    ax,WORD PTR [ebp-0x3f0004]
  43228a:	push   eax
  43228b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432292:	add    BYTE PTR [ebx-0x764f0839],al
  432298:	push   DWORD PTR [esi+0x1]
  43229b:	inc    DWORD PTR [eax]
  43229d:	mov    eax,0xff99ff
  4322a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4322a8:	jne    0x432262
  4322aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4322b4:	mov    ecx,0xd74fb8
  4322b9:	add    cl,al
  4322bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4322c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4322c8:	(bad)  
  4322c9:	(bad)  
  4322ca:	std    
  4322cb:	mov    eax,0x8c2789
  4322d0:	ret    0x6689
  4322d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4322d7:	add    bh,ah
  4322d9:	mov    WORD PTR [ebp-0x70],ax
  4322dd:	(bad)  
  4322de:	ret    0x6605
  4322e1:	or     BYTE PTR [ebp-0x77],dl
  4322e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4322eb:	loop   0x432276
  4322ed:	(bad)  
  4322ee:	xchg   esi,eax
  4322ef:	aam    0xcf
  4322f1:	out    dx,al
  4322f2:	mov    DWORD PTR [esi-0x68],edi
  4322f5:	inc    ebp
  4322f6:	dec    edx
  4322f7:	pop    ecx
  4322f8:	mov    edx,DWORD PTR [eax]
  4322fa:	repnz push bp
  4322fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432304:	(bad)  
  432305:	repnz cmp eax,0xa0898945
  43230b:	mov    ah,0x89
  43230d:	jmp    DWORD PTR [edx+0x66b0418d]
  432313:	inc    DWORD PTR [ebp+0x50]
  432316:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43231a:	mov    DWORD PTR [eax],ecx
  43231c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43231d:	pop    es
  43231e:	inc    ecx
  43231f:	(bad)  
  432320:	cwd    
  432322:	inc    ebp
  432323:	xor    ah,BYTE PTR [esi+0x3]
  432326:	dec    ebp
  432327:	push   eax
  432328:	inc    bp
  43232a:	jge    0x4322af
  43232c:	mov    esp,DWORD PTR [esi-0x18]
  43232f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432335:	add    DWORD PTR [ebx],esi
  432337:	add    BYTE PTR [ebx],al
  432339:	test   DWORD PTR [ebx],esi
  43233b:	(bad)  
  43233c:	inc    WORD PTR [ebp+0x0]
  432340:	mov    eax,DWORD PTR [eax]
  432342:	call   0x8898da77
  432347:	mov    esi,eax
  432349:	clc    
  43234a:	ret    
  43234b:	rol    cl,0xa
  43234e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432354:	mov    edx,edi
  432356:	pushf  
  432357:	pop    es
  432358:	jmp    DWORD PTR [edx+0x66]
  43235b:	add    BYTE PTR [ebp-0x990175],al
  432361:	inc    ebp
  432362:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432368:	push   ebp
  432369:	mov    edi,eax
  43236b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432371:	push   ebp
  432372:	add    BYTE PTR [ebx-0x764b0777],al
  432378:	dec    DWORD PTR [esi+0x661851e8]
  43237e:	add    BYTE PTR [ebp-0x7b],dl
  432381:	cmp    esi,0x3
  432384:	dec    DWORD PTR [ecx+0x51fe9285]
  43238a:	jmp    DWORD PTR [esi-0x75]
  43238d:	push   ebp
  43238e:	hlt    
  43238f:	data16 (bad) 
  432391:	dec    ebp
  432392:	ret    
  432393:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432399:	lea    edx,[eax-0x1]
  43239c:	jne    0x43236f
  43239e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4323a4:	dec    BYTE PTR [ecx+0x51559eff]
  4323aa:	mov    DWORD PTR [esi-0x4c],esp
  4323ad:	push   ebp
  4323ae:	jmp    DWORD PTR [esi-0x18]
  4323b1:	inc    ebp
  4323b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4323b8:	(bad)  
  4323b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323ba:	inc    eax
  4323bc:	test   DWORD PTR [esi-0x2],esp
  4323bf:	inc    ebp
  4323c0:	dec    DWORD PTR [ebp-0x760bde75]
  4323c6:	(bad)  
  4323c7:	test   al,0xc3
  4323c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4323cf:	lods   al,BYTE PTR ds:[esi]
  4323d0:	push   eax
  4323d1:	inc    ebp
  4323d2:	jne    0x4323e3
  4323d4:	dec    DWORD PTR [ebp+0x8]
  4323d7:	mov    eax,DWORD PTR [edi]
  4323d9:	sbb    al,0x0
  4323db:	(bad)  
  4323dc:	mov    eax,0xc14fc3
  4323e1:	mov    DWORD PTR [eax-0x64],edi
  4323e4:	inc    bp
  4323e6:	test   DWORD PTR [edi],ecx
  4323e8:	dec    DWORD PTR [ebp-0x1]
  4323eb:	xor    eax,edi
  4323ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4323f3:	inc    ebp
  4323f4:	xor    DWORD PTR [ebx],0x43
  4323f7:	mov    WORD PTR [ebp-0x1bc],ax
  4323fe:	lea    ecx,[ecx-0x7677fe]
  432404:	inc    esi
  432405:	(bad)  
  432406:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43240d:	pushf  
  43240e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432415:	add    bh,bh
  432417:	add    BYTE PTR [edi],cl
  432419:	test   DWORD PTR [eax],eax
  43241b:	(bad)  
  43241c:	dec    WORD PTR [ebp-0xff002d]
  432423:	mov    DWORD PTR [eax-0x48],esi
  432426:	add    bh,bh
  432428:	lea    cx,[ebp-0x50]
  43242f:	push   eax
  432430:	rol    BYTE PTR [ebp+0x0],1
  432433:	xor    esp,DWORD PTR [esi+0x3]
  432436:	lea    edx,[eax-0x1]
  432439:	test   edi,edi
  43243b:	dec    DWORD PTR [ebp-0x1]
  43243e:	mov    edi,edi
  432440:	dec    eax
  432441:	clc    
  432442:	call   DWORD PTR [ebp-0x73]
  432445:	lea    esi,[eax+0x51ffff88]
  43244b:	lea    ecx,[ebp-0x78]
  43244e:	test   WORD PTR [ebp-0x2],ax
  432455:	popf   
  432456:	push   ecx
  432457:	add    BYTE PTR [ecx-0x77],dl
  43245a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432460:	cdq    
  432461:	mov    al,0x32
  432463:	inc    DWORD PTR [ebx]
  432465:	push   eax
  432466:	push   ecx
  432467:	inc    ebp
  432468:	shl    BYTE PTR [ebx],1
  43246a:	lea    eax,[ebx]
  43246c:	call   DWORD PTR [eax-0x1]
  43246f:	test   DWORD PTR [ebx],esi
  432471:	inc    DWORD PTR [eax-0x1]
  432474:	(bad)  
  432475:	(bad)  
  432476:	(bad)  
  432477:	clc    
  432478:	call   DWORD PTR [ebp+0x50]
  43247b:	jmp    0xcc25f5
  432480:	inc    esp
  432481:	jae    0x432482
  432483:	add    BYTE PTR [ecx-0x384f73],cl
  432489:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43248f:	mov    eax,DWORD PTR [ecx]
  432491:	data16 add BYTE PTR [ebp-0xb50077],al
  432498:	inc    eax
  43249a:	lea    esp,[esi+0x1c]
  43249d:	test   DWORD PTR [ecx-0xb301],ecx
  4324a3:	inc    edi
  4324a4:	(bad)  
  4324a5:	dec    si
  4324a7:	test   edi,edi
  4324a9:	push   DWORD PTR [ecx]
  4324ab:	(bad)  
  4324ac:	jnp    0x4324fd
  4324ae:	(bad)  
  4324af:	mov    edx,DWORD PTR [edx-0x7d]
  4324b2:	(bad)  
  4324b3:	mov    ebx,0x563a8935
  4324b8:	(bad)  
  4324b9:	call   FWORD PTR [esi-0x47]
  4324bc:	inc    DWORD PTR ds:0x893000e2
  4324c2:	(bad)  
  4324c3:	pop    eax
  4324c4:	mov    ah,0xff
  4324c6:	(bad)  
  4324c7:	mov    ecx,0x5745
  4324cc:	dec    DWORD PTR [ecx-0xf7a501]
  4324d2:	(bad)  
  4324d3:	mov    ecx,0x456108
  4324d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4324de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4324e4:	inc    BYTE PTR gs:[eax]
  4324e7:	inc    DWORD PTR [ebp-0x73]
  4324ea:	ss (bad) 
  4324ec:	pushf  
  4324ed:	inc    edi
  4324ef:	mov    ebx,eax
  4324f1:	hlt    
  4324f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4324f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4324fe:	lock into 
  432500:	test   eax,eax
  432502:	clc    
  432503:	mov    ebx,0x367245
  432508:	lahf   
  432509:	retf   
  43250a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432510:	add    edi,edi
  432512:	add    BYTE PTR [ecx+0x45],dl
  432515:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43251c:	mov    edx,DWORD PTR [ecx-0x74]
  43251f:	inc    DWORD PTR [eax]
  432521:	cld    
  432522:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432528:	add    BYTE PTR [ebp-0x1b0177],al
  43252e:	jge    0x432575
  432530:	test   DWORD PTR [ebx+0xff9875],ecx
  432536:	sbb    BYTE PTR [esi+0x55],ah
  432539:	xchg   ebp,eax
  43253a:	call   0x43203e
  43253f:	push   edi
  432540:	inc    ebp
  432541:	mov    dx,WORD PTR [ebp-0xfc0075]
  432548:	cmp    al,0x85
  43254a:	ud0    eax,DWORD PTR [ebp-0x1]
  43254e:	test   DWORD PTR [edi+0x74],ecx
  432551:	dec    edi
  432552:	inc    DWORD PTR [ebp-0xf70004]
  432558:	dec    DWORD PTR [edi-0x75]
  43255b:	dec    edi
  43255c:	cld    
  43255d:	test   DWORD PTR [eax+0xff01ff],eax
  432563:	icebp  
  432564:	add    BYTE PTR [edi-0x3a],cl
  432567:	test   ebx,eax
  432569:	inc    BYTE PTR [ebp-0x1]
  43256c:	jne    0x43256e
  43256e:	mov    eax,DWORD PTR [eax]
  432570:	cld    
  432571:	xor    BYTE PTR [ecx+0x500155],cl
  432577:	push   ebp
  432578:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43257e:	add    BYTE PTR [ebp+0x35e90f50],al
  432584:	add    al,BYTE PTR [eax]
  432586:	add    BYTE PTR [ebx-0x38fe4f80],al
  43258c:	add    ah,ch
  43258e:	or     BYTE PTR [ebp+0x4501f845],dh
  432594:	jmp    0xdf288f
  432599:	(bad)  
  43259a:	nop    ecx
  43259d:	test   DWORD PTR [ebp+0x4502f8],eax
  4325a3:	cmp    BYTE PTR [ebp-0x64],cl
  4325a6:	mov    eax,edi
  4325a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4325ab:	add    eax,0x45fef885
  4325b0:	dec    DWORD PTR [ebx+0x339445]
  4325b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4325bc:	dec    DWORD PTR [ebx-0x460f0375]
  4325c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325c3:	add    esi,edi
  4325c5:	add    bh,bh
  4325c7:	rdpmc  
  4325c9:	add    BYTE PTR [ebx],0x1
  4325cc:	mov    DWORD PTR [eax],eax
  4325ce:	add    al,0x45
  4325d0:	dec    DWORD PTR [ecx-0x360b3373]
  4325d6:	dec    DWORD PTR [esi]
  4325d8:	push   eax
  4325d9:	jne    0x432620
  4325db:	mov    esi,DWORD PTR [ebx]
  4325dd:	cld    
  4325de:	add    ebp,ebx
  4325e0:	push   eax
  4325e1:	inc    DWORD PTR [ebp-0x75]
  4325e4:	add    eax,0x800e4
  4325e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4325ef:	mov    DWORD PTR [ecx],eax
  4325f1:	sbb    al,0x0
  4325f3:	leave  
  4325f4:	test   DWORD PTR [edi-0x2],eax
  4325f7:	jne    0x4325f8
  4325f9:	call   0xff4410fe
  4325fe:	xor    BYTE PTR [ebp+0x4d],al
  432601:	mov    edi,edi
  432603:	enter  0x8,0x4d
  432607:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43260d:	mov    eax,DWORD PTR [eax]
  43260f:	cld    
  432610:	add    DWORD PTR [ecx],ebx
  432612:	inc    ebp
  432613:	dec    ebp
  432614:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43261a:	inc    eax
  43261b:	dec    DWORD PTR [ecx-0x270375]
  432621:	add    BYTE PTR [ebx-0x39d72701],cl
  432627:	xchg   ecx,eax
  432628:	ret    
  432629:	add    BYTE PTR [ebp-0x830075],al
  43262f:	add    BYTE PTR [ebp-0x75],al
  432632:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432638:	lea    edi,[edi-0xc]
  43263b:	add    bh,bh
  43263d:	mov    edx,DWORD PTR [eax-0x7b]
  432640:	inc    ebp
  432641:	rdpmc  
  432643:	jne    0x432648
  432645:	add    BYTE PTR [eax-0x75],dl
  432648:	inc    ebp
  432649:	clc    
  43264a:	add    eax,0x400009
  43264f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432655:	mov    eax,DWORD PTR [ecx]
  432657:	in     al,dx
  432658:	add    dh,al
  43265a:	test   ebx,eax
  43265c:	inc    BYTE PTR [ebp-0xff0001]
  432662:	add    BYTE PTR [ebp-0x43],al
  432665:	cmp    esi,0xfffffff8
  432668:	(bad)  
  432669:	push   DWORD PTR [eax]
  43266b:	add    BYTE PTR [ebp-0x3a],dl
  43266e:	test   ebx,eax
  432670:	je     0x4325f7
  432672:	mov    edi,edi
  432674:	sbb    al,0xff
  432676:	test   DWORD PTR gs:[eax],eax
  432679:	(bad)  
  43267a:	js     0x43267b
  43267c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432682:	sub    eax,ebx
  432684:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43268a:	add    eax,DWORD PTR [eax]
  43268c:	dec    ebp
  43268d:	push   eax
  43268e:	mov    al,BYTE PTR [ebp+0x1]
  432691:	mov    eax,DWORD PTR [ebp-0x68]
  432694:	mov    eax,DWORD PTR [eax]
  432696:	sbb    bh,al
  432698:	or     ah,dh
  43269a:	dec    ebp
  43269b:	inc    DWORD PTR [eax+0x4]
  43269e:	push   ecx
  43269f:	add    BYTE PTR [edx-0x1],dh
  4326a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4326a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4326b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4326b8:	push   ecx
  4326b9:	cmp    BYTE PTR [ebx],al
  4326bb:	inc    ebp
  4326bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4326c2:	(bad)  
  4326c3:	(bad)  
  4326c4:	in     al,0xff
  4326c6:	add    BYTE PTR [ebp+0x0],al
  4326c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4326cf:	add    al,bh
  4326d1:	(bad)  
  4326d2:	jmp    0x8d85:0x74b0558d
  4326d9:	dec    DWORD PTR [eax]
  4326db:	call   DWORD PTR [ebp-0x7b]
  4326de:	mov    edi,esi
  4326e0:	lock call DWORD PTR [ebp-0x75]
  4326e4:	mov    esi,esp
  4326e6:	mov    ah,0xc6
  4326e8:	mov    bh,0xc3
  4326ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4326f0:	add    DWORD PTR [eax],0x450050ff
  4326f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4326fc:	inc    edi
  4326fe:	push   esp
  432700:	jmp    0xcd00:0x670481ff
  432707:	mov    DWORD PTR [ebx],esi
  432709:	clc    
  43270a:	cmp    edi,0xff9cff3b
  432710:	jne    0x43271a
  432712:	mov    eax,eax
  432714:	add    esi,DWORD PTR [eax]
  432716:	int3   
  432717:	inc    ebp
  432718:	cmp    al,0x83
  43271a:	add    BYTE PTR [eax],bl
  43271c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432722:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432728:	mov    edi,eax
  43272a:	cmp    BYTE PTR [ebp+0x45],cl
  43272d:	jmp    0x4326ba
  43272f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432732:	inc    ebp
  432733:	or     al,0x2
  432735:	dec    DWORD PTR [ebp+0x18]
  432738:	jne    0x43278f
  43273a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432740:	mov    edi,DWORD PTR [ebx]
  432742:	in     al,0x50
  432744:	xchg   ecx,eax
  432745:	jmp    0x343764a
  43274a:	adc    al,0x8b
  43274c:	inc    ebp
  43274d:	mov    al,ds:0x8b04008b
  432752:	push   ebp
  432753:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432759:	push   ebp
  43275a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432760:	inc    ebp
  432761:	dec    ebp
  432762:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432768:	mov    DWORD PTR [eax],0xe9ff00f4
  43276e:	add    al,0x0
  432770:	add    BYTE PTR [eax],al
  432772:	mov    eax,edx
  432774:	push   eax
  432775:	rol    DWORD PTR [ebp-0xf0177],1
  43277b:	bound  eax,QWORD PTR [ebp+0x50]
  43277e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432784:	add    BYTE PTR [ecx+0x558df0ff],cl
  43278a:	mov    al,0xf
  43278c:	test   DWORD PTR [edx],edx
  43278e:	call   DWORD PTR [ebp-0x7a0001]
  432794:	(bad)  
  432795:	loop   0x432796
  432797:	jnp    0xc6991b9d
  43279d:	mov    eax,ebx
  43279f:	cmp    al,0x8b
  4327a1:	(bad)  
  4327a2:	cld    
  4327a3:	shr    esi,0xc
  4327a6:	add    dl,al
  4327a8:	push   eax
  4327a9:	lea    eax,[ebp-0x1]
  4327ac:	mov    edx,esi
  4327ae:	cwde   
  4327af:	cli    
  4327b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4327b6:	or     BYTE PTR [eax],cl
  4327b8:	inc    ebp
  4327b9:	dec    ebp
  4327ba:	inc    DWORD PTR [ebx+0x74803914]
  4327c0:	add    DWORD PTR [ebx+0x451800],ecx
  4327c6:	call   DWORD PTR [eax+edx*1]
  4327c9:	add    ecx,DWORD PTR [ebp-0x34]
  4327cc:	push   edi
  4327cd:	adc    al,0x8
  4327cf:	mov    edx,DWORD PTR [ebp-0x14]
  4327d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4327d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4327d9:	inc    DWORD PTR [eax+esi*8]
  4327dc:	inc    ebp
  4327dd:	stos   BYTE PTR es:[edi],al
  4327de:	mov    edx,DWORD PTR [ebp-0x4]
  4327e1:	add    DWORD PTR [ebp-0x1c],eax
  4327e4:	mov    edx,DWORD PTR [ebp-0x70]
  4327e7:	cmp    eax,DWORD PTR [eax]
  4327e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4327ea:	mov    eax,DWORD PTR [eax]
  4327ec:	cld    
  4327ed:	jae    0x43276f
  4327ef:	add    eax,DWORD PTR [ecx]
  4327f1:	clc    
  4327f2:	add    BYTE PTR [eax+0x30],dl
  4327f5:	mov    DWORD PTR [ecx],esi
  4327f7:	clc    
  4327f8:	pop    ds
  4327f9:	inc    ebp
  4327fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432800:	(bad)  
  432801:	push   DWORD PTR [edi]
  432803:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432809:	(bad)  
  43280a:	jae    0x43280b
  43280c:	mov    eax,DWORD PTR [ebp-0x740175]
  432812:	sub    eax,DWORD PTR [eax]
  432814:	add    eax,DWORD PTR [eax]
  432816:	mov    DWORD PTR [ecx+0x5f],eax
  432819:	mov    DWORD PTR [ebx-0x4],ebx
  43281c:	ret    0xff
  43281f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432825:	ret    
  432826:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43282c:	add    BYTE PTR [ebp-0x7d],al
  43282f:	mov    DWORD PTR [eax],eax
  432831:	add    al,0x84
  432833:	inc    DWORD PTR [ecx]
  432835:	lea    eax,[eax]
  432837:	hlt    
  432838:	sar    bh,cl
  43283a:	test   BYTE PTR [eax+0x1],dl
  43283d:	inc    ebp
  43283e:	add    BYTE PTR [ebx],dh
  432840:	test   BYTE PTR [ebx],0x84
  432843:	push   eax
  432844:	add    BYTE PTR [ebp+0x0],al
  432847:	add    eax,0x86
  43284c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432852:	add    BYTE PTR [ecx],al
  432854:	add    BYTE PTR [eax],al
  432856:	mov    esi,0x550030
  43285b:	mov    ecx,DWORD PTR [edi]
  43285d:	cld    
  43285e:	fidiv  DWORD PTR [ebp+0x0]
  432861:	mov    edi,DWORD PTR [ecx]
  432863:	xor    BYTE PTR [eax+eax*1],0x84
  432867:	add    eax,DWORD PTR [eax]
  432869:	sbb    BYTE PTR [eax],al
  43286b:	jne    0x43281e
  43286d:	mov    eax,DWORD PTR [ecx]
  43286f:	sbb    BYTE PTR [eax],al
  432871:	mov    DWORD PTR [ebp-0x1],esp
  432874:	add    BYTE PTR [eax+0x30e45ca],bh
  43287a:	ret    0xb7fc
  43287d:	dec    ebp
  43287e:	or     al,0x89
  432880:	dec    ebp
  432881:	cld    
  432882:	cmovne ecx,DWORD PTR [eax-0x75]
  432886:	add    edi,esp
  432888:	seto   BYTE PTR [esi-0x72ffffff]
  43288f:	inc    ebp
  432890:	adc    al,0x8b
  432892:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432899:	cmp    DWORD PTR [edi+0x72],edx
  43289c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4328a2:	gs cmp al,0x0
  4328a5:	je     0x43287d
  4328a7:	push   eax
  4328a8:	sar    BYTE PTR [eax],1
  4328aa:	mov    bh,0x3e
  4328ac:	push   cs
  4328ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4328b3:	add    DWORD PTR [ecx+0x12],ebp
  4328b6:	dec    edx
  4328b7:	(bad)  
  4328b8:	mov    eax,edx
  4328ba:	in     al,dx
  4328bb:	adc    DWORD PTR [ecx],esi
  4328bd:	pop    esi
  4328be:	inc    ecx
  4328bf:	leave  
  4328c0:	or     DWORD PTR [eax],ebx
  4328c2:	gs push ebp
  4328c4:	add    ah,ch
  4328c6:	into   
  4328c7:	in     al,dx
  4328c8:	enter  0xb756,0xf0
  4328cc:	push   cs
  4328cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4328d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4328dd:	jnp    0x7443ade5
  4328e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4328e9:	add    BYTE PTR [edi],cl
  4328eb:	mov    edi,DWORD PTR [ecx-0x78]
  4328ee:	ltr    WORD PTR [ecx-0x7b]
  4328f2:	dec    DWORD PTR [edi]
  4328f4:	clc    
  4328f5:	out    0x45,eax
  4328f7:	add    BYTE PTR [eax],cl
  4328f9:	cmp    ebx,0xffffff8c
  4328fc:	jge    0x4328fe
  4328fe:	jb     0x432910
  432900:	je     0x522980
  432906:	pop    edx
  432907:	push   esi
  432908:	mov    ecx,DWORD PTR [edi]
  43290a:	in     al,dx
  43290b:	rol    DWORD PTR [ebp+0x0],1
  43290e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432915:	cmp    DWORD PTR [ecx],0xfffffff0
  432918:	hlt    
  432919:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43291f:	(bad)  
  432921:	push   eax
  432922:	jns    0xb8430da0
  432928:	lock push cs
  43292a:	ror    edx,0x3
  43292d:	test   BYTE PTR [ecx+0x5500e800],cl
  432933:	dec    eax
  432934:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432938:	(bad)  
  432939:	mov    esi,0x7f33ff5f
  43293e:	inc    eax
  43293f:	test   DWORD PTR [edx],eax
  432941:	je     0x432903
  432943:	mov    ecx,ecx
  432945:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432949:	and    eax,DWORD PTR [eax+0xf0103]
  43294f:	jp     0x43293d
  432951:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432955:	add    edx,DWORD PTR [edi+0x74]
  432958:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43295e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432964:	je     0x4328e9
  432966:	cmp    eax,edi
  432968:	js     0x43298d
  43296a:	add    eax,0xeb0fc003
  43296f:	jns    0x4328fc
  432971:	vmread DWORD PTR [ecx+0x45],ebx
  432975:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43297b:	adc    al,0x8b
  43297d:	jge    0x432993
  43297f:	mov    edi,DWORD PTR [eax-0x4]
  432982:	add    edi,DWORD PTR [edi]
  432984:	or     bh,bh
  432986:	push   ebp
  432987:	push   es
  432988:	mov    DWORD PTR [ebp-0x4],ebx
  43298b:	add    edi,esi
  43298d:	pop    es
  43298e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432994:	mov    DWORD PTR [esp+esi*8],ecx
  432997:	inc    ebp
  432998:	pop    ebp
  432999:	xor    DWORD PTR [esi-0x4],0x3b
  43299d:	add    edx,DWORD PTR [ecx+edi*1]
  4329a0:	push   es
  4329a1:	clc    
  4329a2:	mov    bh,0xdb
  4329a4:	jp     0x43295d
  4329a6:	add    cl,BYTE PTR [esi]
  4329a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4329ae:	test   edi,edi
  4329b0:	je     0x4329a6
  4329b2:	mov    eax,ecx
  4329b4:	or     BYTE PTR [ebx],al
  4329b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4329bc:	jbe    0x432a30
  4329be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4329c4:	add    ecx,DWORD PTR [esi]
  4329c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4329cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4329d2:	je     0x432a21
  4329d4:	mov    DWORD PTR [ecx],edi
  4329d6:	mov    esi,eax
  4329d8:	hlt    
  4329d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4329e0:	jb     0x4329a2
  4329e2:	jmp    0x4329cf
  4329e4:	xor    esi,DWORD PTR [ebx]
  4329e6:	pop    edi
  4329e7:	pop    esi
  4329e8:	pop    ebx
  4329e9:	ret    
  4329ea:	ret    0x8b
  4329ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4329f3:	xor    DWORD PTR [esi],0xc
  4329f6:	pushf  
  4329f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4329fd:	(bad)  
  4329ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a06:	dec    ebp
  432a07:	ret    
  432a08:	mov    edi,DWORD PTR [esi-0x4]
  432a0b:	pop    eax
  432a0c:	dec    ebp
  432a0d:	jne    0x43299a
  432a0f:	xor    edi,esp
  432a11:	inc    eax
  432a12:	dec    ebp
  432a13:	jbe    0x432a68
  432a15:	inc    eax
  432a16:	pop    ebp
  432a17:	add    edx,DWORD PTR [esi+0x8]
  432a1a:	push   ecx
  432a1b:	dec    eax
  432a1c:	push   ecx
  432a1d:	mov    eax,edi
  432a1f:	and    al,0xf0
  432a21:	jo     0x432a0e
  432a23:	mov    eax,DWORD PTR [ebx]
  432a25:	sbb    BYTE PTR [ebp+0x4d],cl
  432a28:	mov    eax,DWORD PTR [ebx]
  432a2a:	nop
  432a2b:	or     BYTE PTR [eax],al
  432a2d:	jne    0x432a86
  432a2f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432a35:	cld    
  432a36:	xor    edi,edi
  432a38:	add    edi,DWORD PTR [ebp+0x3]
  432a3b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432a41:	js     0x4329c7
  432a43:	jae    0x432a47
  432a45:	(bad)  
  432a47:	xor    al,0x5d
  432a49:	jmp    0x4329d6
  432a4b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432a52:	fdecstp 
  432a54:	test   BYTE PTR [edi],ah
  432a56:	add    bh,BYTE PTR [ebp+0x0]
  432a59:	add    ebx,DWORD PTR [ebp-0x77]
  432a5c:	mov    edi,eax
  432a5e:	cmp    al,0x0
  432a61:	adc    dh,BYTE PTR [ebx]
  432a63:	jge    0x432a68
  432a65:	mov    edi,DWORD PTR [ebx]
  432a67:	jl     0x432a78
  432a69:	clc    
  432a6a:	dec    edi
  432a6b:	jge    0x432a6d
  432a6d:	mov    eax,DWORD PTR [ebx]
  432a6f:	jb     0x432a79
  432a71:	mov    ecx,DWORD PTR [ebp-0x8]
  432a74:	mov    edi,edi
  432a76:	xor    edx,DWORD PTR [eax]
  432a78:	add    edi,DWORD PTR [ebx]
  432a7a:	mov    DWORD PTR [ebp-0x10],edi
  432a7d:	inc    edi
  432a7e:	pop    ebp
  432a7f:	jge    0x432abc
  432a81:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432a85:	mov    edx,0xc05d87f0
  432a8a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432a8e:	fimul  WORD PTR [eax]
  432a90:	fist   WORD PTR [ebp+0x1c]
  432a93:	in     al,dx
  432a94:	jne    0x432a82
  432a96:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432a9c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432aa0:	fdivp  st(0),st
  432aa2:	fild   WORD PTR [ebp+0x4510f85c]
  432aa8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432aae:	inc    ebp
  432aaf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432ab5:	mov    ebp,DWORD PTR [ebx-0x4]
  432ab8:	adc    al,0x8b
  432aba:	rcl    DWORD PTR [eax],0x48
  432abd:	mov    esi,0x7080803
  432ac2:	fiadd  WORD PTR [ebp+0x4d]
  432ac5:	mov    WORD PTR [ebx+0x558bfc52],cs
  432acb:	cld    
  432acc:	xor    ebx,DWORD PTR [ebx+0x330103]
  432ad2:	mov    DWORD PTR [edi+0x872dc],edi
  432ad8:	xlat   BYTE PTR ds:[ebx]
  432ad9:	into   
  432ada:	ffreep st(6)
  432adc:	retf   0x6c7
  432adf:	iret   
  432ae0:	dec    ebp
  432ae1:	inc    ebp
  432ae2:	mov    DWORD PTR [ebx],edi
  432ae4:	fmul   QWORD PTR [edi]
  432ae6:	dec    ebp
  432ae7:	jnp    0x432b1c
  432ae9:	add    BYTE PTR [ebx],al
  432aeb:	mov    ecx,DWORD PTR [esp+edi*8]
  432aee:	inc    ebp
  432aef:	dec    ebp
  432af0:	lea    esi,[ebx]
  432af2:	add    DWORD PTR [ebx],eax
  432af4:	jb     0x432b31
  432af6:	add    BYTE PTR [edi],cl
  432af8:	inc    ebp
  432af9:	imul   eax,edi,0x858bd800
  432aff:	cld    
  432b00:	clc    
  432b01:	mov    DWORD PTR [ebp+0x0],eax
  432b04:	inc    DWORD PTR [eax]
  432b06:	or     al,0xde
  432b08:	sbb    bh,0x1
  432b0b:	retf   
  432b0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b13:	dec    ebp
  432b14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b1a:	enter  0x12de,0xdf
  432b1e:	inc    ebp
  432b1f:	pop    ebp
  432b20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432b26:	add    DWORD PTR [edx],edx
  432b28:	add    BYTE PTR [ebp+0x50],dl
  432b2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432b31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432b37:	or     ah,al
  432b39:	pop    ss
  432b3a:	cdq    
  432b3b:	push   ebp
  432b3c:	clc    
  432b3d:	mov    eax,DWORD PTR [ebp-0x4]
  432b40:	xor    edx,edx
  432b42:	add    esi,DWORD PTR [ebx]
  432b44:	cmp    eax,DWORD PTR [ebx]
  432b46:	hlt    
  432b47:	cmp    DWORD PTR [ebx],esp
  432b49:	or     al,BYTE PTR [ebp+0xf]
  432b4c:	mov    eax,DWORD PTR [edx]
  432b4e:	loopne 0x432b50
  432b50:	(bad)  
  432b51:	mov    ecx,esi
  432b53:	cld    
  432b54:	pushf  
  432b55:	pop    ebp
  432b56:	cdq    
  432b57:	mov    esi,DWORD PTR [edx]
  432b59:	lock mov eax,eax
  432b5c:	adc    BYTE PTR [ebx],al
  432b5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432b65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432b6b:	dec    ebp
  432b6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432b72:	(bad)  
  432b73:	iret   
  432b74:	inc    ebp
  432b75:	(bad)  
  432b76:	jne    0x432bc5
  432b78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432b7e:	(bad)  
  432b7f:	cmp    ebx,eax
  432b81:	je     0x432b09
  432b83:	add    edi,edi
  432b85:	or     bh,bh
  432b87:	dec    ebp
  432b88:	inc    ebp
  432b89:	mov    esi,DWORD PTR [ebx]
  432b8b:	cld    
  432b8c:	add    ecx,esi
  432b8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432b91:	mov    edx,DWORD PTR [edi]
  432b93:	or     BYTE PTR [ebp-0x7c],al
  432b96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432b9c:	test   BYTE PTR [ecx+ebx*4],cl
  432b9f:	inc    ebp
  432ba0:	xor    bh,BYTE PTR ds:0x8be89c89
  432ba6:	out    dx,eax
  432ba7:	adc    BYTE PTR [eax],al
  432ba9:	jne    0x432b72
  432bab:	mov    ebp,esp
  432bad:	fcomp  DWORD PTR [ebx]
  432baf:	add    BYTE PTR [ecx],al
  432bb1:	inc    DWORD PTR [ebp-0x75]
  432bb4:	mov    esp,?
  432bb6:	add    al,0xce
  432bb8:	mov    ecx,edi
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	fidivr WORD PTR [ebx]
  432bbe:	fbstp  TBYTE PTR [ebp-0x3e]
  432bc1:	mov    eax,DWORD PTR [eax]
  432bc3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432bc9:	fadd   st,st(7)
  432bcb:	add    BYTE PTR [ebp-0x1],al
  432bce:	mov    ecx,DWORD PTR [esp+edi*8]
  432bd1:	inc    ebp
  432bd2:	mov    bh,0xc7
  432bd5:	loopne 0x432c1c
  432bd7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432bdd:	add    DWORD PTR [ebx],esi
  432bdf:	pushf  
  432be0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432be6:	mov    eax,edi
  432be8:	cwde   
  432be9:	inc    ebp
  432bea:	inc    ebp
  432beb:	jne    0x432b78
  432bed:	mov    esp,esp
  432bef:	clc    
  432bf0:	add    al,0x4d
  432bf2:	mov    DWORD PTR [ebx],esi
  432bf4:	or     al,0x33
  432bf6:	inc    ebp
  432bf7:	lea    ecx,[ebx-0x398d13fd]
  432bfd:	add    bh,al
  432bff:	inc    ebp
  432c00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c07:	add    ebp,esp
  432c09:	shufps xmm1,xmm3,0xc7
  432c0d:	(bad)  
  432c0e:	jmp    0x74886737
  432c13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c19:	hlt    
  432c1a:	mov    ecx,DWORD PTR [edi]
  432c1c:	fadd   DWORD PTR [ebp+0x0]
  432c1f:	xor    ecx,DWORD PTR [edi]
  432c21:	add    ecx,ecx
  432c23:	cmp    edi,edi
  432c25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432c29:	(bad)  
  432c2a:	jmp    0x432bb7
  432c2c:	mov    edi,esp
  432c2e:	or     al,0xc6
  432c30:	inc    ebp
  432c31:	(bad)  
  432c32:	mov    eax,DWORD PTR [ebp+0x10]
  432c35:	jne    0x432bc0
  432c37:	mov    eax,DWORD PTR [ecx]
  432c39:	clc    
  432c3a:	add    BYTE PTR [ebp-0x40],cl
  432c3d:	xor    edx,DWORD PTR [eax-0x73]
  432c40:	jne    0x432c43
  432c42:	push   DWORD PTR [edx+0x8]
  432c45:	add    BYTE PTR [ebp+0x45],al
  432c48:	mov    ebp,ecx
  432c4a:	cld    
  432c4b:	add    BYTE PTR [ebp+0x0],cl
  432c4e:	xor    eax,DWORD PTR [ebp+0x3]
  432c51:	mov    ?,WORD PTR [ebx]
  432c53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432c59:	sub    eax,0x5d330e4d
  432c5e:	lea    esi,[ebx]
  432c60:	add    DWORD PTR [ebx],eax
  432c62:	jb     0x432c4d
  432c64:	add    BYTE PTR [eax],al
  432c66:	inc    ebp
  432c67:	add    bl,ch
  432c69:	inc    ebp
  432c6a:	mov    esi,DWORD PTR [ebx]
  432c6c:	or     al,0x3
  432c6e:	(bad)  
  432c6f:	mov    edi,eax
  432c71:	in     al,dx
  432c72:	scas   eax,DWORD PTR es:[edi]
  432c73:	inc    ebp
  432c74:	mov    esi,DWORD PTR [ebx]
  432c76:	in     al,0x3
  432c78:	add    al,0x89
  432c7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432c7d:	dec    ebp
  432c7e:	(bad)  
  432c7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432c86:	mov    ecx,eax
  432c88:	cld    
  432c89:	push   es
  432c8a:	dec    ebp
  432c8b:	add    al,0x33
  432c8d:	mov    DWORD PTR [ebx],eax
  432c8f:	in     al,dx
  432c90:	cmp    DWORD PTR [ebp-0x67],eax
  432c93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432c99:	mov    edx,DWORD PTR [ebp-0x4]
  432c9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432c9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ca2:	cmp    DWORD PTR [ebx],0x8b327498
  432ca8:	xor    edi,esp
  432caa:	jmp    0xff7729fc
  432caf:	add    ecx,DWORD PTR [ebp-0x3f]
  432cb2:	xor    ebx,DWORD PTR [edi]
  432cb4:	add    eax,ecx
  432cb6:	cmp    ebx,DWORD PTR [eax]
  432cb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432cbb:	mov    ecx,DWORD PTR [eax]
  432cbd:	adc    BYTE PTR [ebp-0x80],al
  432cc0:	jmp    0x432cc3
  432cc2:	mov    eax,DWORD PTR [eax]
  432cc4:	cld    
  432cc5:	mov    bh,0xc6
  432cc7:	push   ecx
  432cc8:	(bad)  
  432cc9:	jne    0x432d29
  432ccb:	dec    ecx
  432ccd:	or     BYTE PTR [ecx+ebx*1],cl
  432cd0:	push   ebp
  432cd1:	inc    ebp
  432cd2:	in     al,dx
  432cd3:	add    ebp,esp
  432cd5:	or     bh,al
  432cd7:	dec    ebp
  432cd8:	cld    
  432cd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432cdf:	cmp    DWORD PTR [ecx],0x2
  432ce2:	pushf  
  432ce3:	dec    DWORD PTR [ebx+0x45510cf4]
  432ce9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432cef:	mov    edx,DWORD PTR [ecx+0xc]
  432cf2:	xor    eax,esi
  432cf4:	mov    edx,0xc172c7
  432cf9:	inc    ebp
  432cfa:	mov    esi,DWORD PTR [ebp+0x8]
  432cfd:	mov    eax,edx
  432cff:	call   0x84c7f3f4
  432d04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d0a:	mov    ebp,eax
  432d0c:	or     BYTE PTR [eax],dl
  432d0e:	jo     0x432d5d
  432d10:	push   edi
  432d11:	xor    esi,DWORD PTR [ebp+0x3]
  432d14:	(bad)  
  432d15:	pmulhuw mm0,mm1
  432d18:	test   DWORD PTR [ebp-0x8],ecx
  432d1b:	mov    DWORD PTR [ebp-0x67],eax
  432d1e:	mov    eax,DWORD PTR [ebp-0x4]
  432d21:	xor    edi,DWORD PTR [ebp-0x73]
  432d24:	xor    eax,DWORD PTR [ebx]
  432d26:	xor    esi,DWORD PTR [edx+0x3]
  432d29:	add    BYTE PTR [ecx],bh
  432d2b:	inc    ebp
  432d2c:	(bad)  
  432d2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432d33:	mov    DWORD PTR [eax],0x750f0004
  432d39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432d3f:	lock add BYTE PTR [ebp+0x0],cl
  432d43:	mov    esi,DWORD PTR [ebp-0x18]
  432d46:	mov    ebp,edx
  432d48:	or     al,0x72
  432d4a:	ja     0x432d4c
  432d4c:	mov    edx,esi
  432d4e:	cld    
  432d4f:	(bad)  
  432d52:	cli    
  432d53:	mov    esi,DWORD PTR [ebp-0x4]
  432d56:	cmp    ecx,esi
  432d58:	bswap  edi
  432d5a:	(bad)
  432d5e:	mov    esi,DWORD PTR [ebp-0x4]
  432d61:	mov    esi,ecx
  432d63:	clc    
  432d64:	repnz add esi,DWORD PTR [ebp+0x45]
  432d68:	push   ebx
  432d69:	xor    eax,DWORD PTR [ebp+0x3]
  432d6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432d6f:	pop    ebx
  432d70:	jmp    0x432e37
  432d75:	mov    esi,DWORD PTR [ebp-0x7d]
  432d78:	xor    ebp,DWORD PTR [eax]
  432d7a:	lea    eax,[ebp-0x8]
  432d7d:	ss repnz pushf 
  432d80:	out    dx,eax
  432d81:	(bad)  
  432d82:	neg    eax
  432d84:	ins    DWORD PTR es:[edi],dx
  432d85:	test   esi,edi
  432d87:	clc    
  432d88:	pop    esp
  432d89:	inc    ebp
  432d8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432d90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432d96:	add    cl,al
  432d98:	jne    0x432d33
  432d9a:	mov    esi,DWORD PTR [edx]
  432d9c:	in     al,dx
  432d9d:	push   esi
  432d9e:	xor    BYTE PTR [ebp-0xe],dh
  432da1:	add    edi,esi
  432da3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432da9:	add    cl,bh
  432dab:	mov    edi,DWORD PTR [ebp+0x8]
  432dae:	mov    DWORD PTR [ebp-0x14],esi
  432db1:	add    esi,DWORD PTR [ebp+0x3c]
  432db4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432dba:	mov    ah,0x3d
  432dbc:	cdq    
  432dbd:	pushf  
  432dbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432dc4:	jne    0x432d51
  432dc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432dc9:	icebp  
  432dca:	icebp  
  432dcb:	shl    edx,0xf2
  432dce:	(bad)  
  432dcf:	mov    ah,0x16
  432dd1:	inc    eax
  432dd2:	jne    0x432d67
  432dd4:	mov    ecx,DWORD PTR [edi]
  432dd6:	in     al,dx
  432dd7:	jmp    0x432dca
  432dd9:	add    dl,dh
  432ddb:	mov    edi,esi
  432ddd:	or     al,0x8
  432ddf:	inc    ebp
  432de0:	jne    0x432de5
  432de2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432de8:	ret    
  432de9:	or     bh,bh
  432deb:	jge    0x432dd5
  432ded:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432df3:	xor    edi,eax
  432df5:	add    esi,DWORD PTR [ebp-0x77]
  432df8:	mov    ebx,esp
  432dfa:	clc    
  432dfb:	neg    DWORD PTR [ebp-0x7c]
  432dfe:	xor    eax,DWORD PTR [eax]
  432e00:	cmp    eax,DWORD PTR [eax]
  432e02:	repz jne 0x432d9a
  432e05:	xor    eax,DWORD PTR [ecx]
  432e07:	add    ebx,DWORD PTR [eax]
  432e09:	mov    DWORD PTR [ebp-0x8],eax
  432e0c:	mov    eax,edi
  432e0e:	cld    
  432e0f:	lock pop eax
  432e11:	test   DWORD PTR [ebx],esi
  432e13:	clc    
  432e14:	add    edx,DWORD PTR [edi-0x740bff77]
  432e1a:	fdivp  st(4),st
  432e1c:	test   ecx,esi
  432e1e:	(bad)  
  432e1f:	jnp    0x432e20
  432e21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432e27:	jae    0x432db4
  432e29:	sub    edi,esp
  432e2b:	(bad)  
  432e2c:	shl    DWORD PTR [eax-0x3e],0x89
  432e30:	leave  
  432e31:	call   0x8198e53e
  432e36:	in     al,dx
  432e37:	(bad)  
  432e38:	in     al,dx
  432e39:	add    bh,al
  432e3b:	mov    esp,edi
  432e3d:	in     al,dx
  432e3e:	test   DWORD PTR [ebp-0x8],edi
  432e41:	mov    eax,DWORD PTR [ebp+0x2b]
  432e44:	cmp    DWORD PTR [ebx],eax
  432e46:	pushf  
  432e47:	jnp    0x57322a80
  432e4d:	xor    edx,DWORD PTR [ecx-0x77]
  432e50:	push   ecx
  432e51:	loopne 0x432e86
  432e53:	jne    0x432e10
  432e55:	mov    esi,DWORD PTR [edx-0x20]
  432e58:	add    BYTE PTR [ebp-0x3d],bh
  432e5b:	xor    eax,DWORD PTR [ebp-0x73]
  432e5e:	mov    edi,DWORD PTR [esi]
  432e60:	cld    
  432e61:	jb     0x432e29
  432e63:	add    bl,al
  432e65:	jne    0x432eac
  432e67:	mov    edx,DWORD PTR [edi-0x10]
  432e6a:	jge    0x432ee9
  432e6c:	mov    esi,DWORD PTR [ebx]
  432e6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432e72:	xor    esi,DWORD PTR [ebp-0x77]
  432e75:	mov    esi,eax
  432e77:	lock inc ebp
  432e79:	jge    0x432eb1
  432e7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432e82:	dec    ebp
  432e83:	mov    esi,DWORD PTR [ebx]
  432e85:	loopne 0x432e10
  432e87:	jge    0x432e81
  432e89:	add    DWORD PTR [ebp-0x7d],eax
  432e8c:	test   BYTE PTR [edx],0x9c
  432e8f:	dec    ebp
  432e90:	mov    esi,DWORD PTR [ebp-0xc]
  432e93:	mov    ecx,DWORD PTR [ebp-0xc]
  432e96:	xor    ebx,DWORD PTR [ebp-0x77]
  432e99:	mov    esi,esp
  432e9b:	in     al,0x45
  432e9d:	jge    0x432ed9
  432e9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432ea6:	dec    ebp
  432ea7:	inc    esp
  432ea8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432eae:	inc    ebp
  432eaf:	hlt    
  432eb0:	ss jne 0x432e52
  432eb3:	mov    edi,DWORD PTR [eax+0xf19504]
  432eb9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432ebd:	cmp    eax,DWORD PTR [ebp+0xf]
  432ec0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432ec4:	fistp  WORD PTR [ebx+0x0]
  432ec7:	inc    ebp
  432ec8:	mov    ebx,DWORD PTR [edi+0xc]
  432ecb:	add    eax,eax
  432ecd:	inc    ebp
  432ece:	test   BYTE PTR [ebx],dh
  432ed0:	add    eax,DWORD PTR [ebx]
  432ed2:	add    BYTE PTR [esi+0x45],bl
  432ed5:	ret    0x85
  432ed8:	jnp    0x5443b2a7
  432ede:	inc    bp
  432ee0:	inc    ebp
  432ee1:	ss mov ecx,0xc78a9c
  432ee7:	fdiv   QWORD PTR [ebx]
  432ee9:	test   DWORD PTR [ecx+0x453af8],edi
  432eef:	push   ebx
  432ef0:	add    edi,DWORD PTR [esi+0x708088b]
  432ef6:	cmp    esi,eax
  432ef8:	setns  BYTE PTR [ecx-0x74fcffce]
  432eff:	mov    esp,edi
  432f01:	call   0x33ce7453
  432f06:	or     BYTE PTR [ebx],al
  432f08:	inc    ecx
  432f09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f15:	lock add cl,al
  432f18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f1f:	mov    ch,0x45
  432f21:	clc    
  432f22:	xor    eax,DWORD PTR [ebp+0x3]
  432f25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432f2b:	inc    ebp
  432f2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432f32:	mov    edi,eax
  432f34:	mov    eax,DWORD PTR [ebp+0x3c]
  432f37:	mov    ecx,DWORD PTR [eax]
  432f39:	hlt    
  432f3a:	inc    ebp
  432f3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432f42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432f48:	push   ebp
  432f49:	mov    edi,DWORD PTR [ebx]
  432f4b:	in     al,dx
  432f4c:	jne    0x432f0f
  432f4e:	mov    eax,DWORD PTR [ebp-0x28]
  432f51:	add    DWORD PTR [eax],0xe8058dec
  432f57:	clc    
  432f58:	mov    esi,DWORD PTR [edi-0x8]
  432f5b:	add    dh,dl
  432f5d:	rol    WORD PTR [ebp-0x1],cl
  432f61:	mov    edx,DWORD PTR [eax+0x8]
  432f64:	jne    0x432f26
  432f66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432f6d:	inc    ebp
  432f6e:	push   esp
  432f6f:	test   DWORD PTR [ecx+0xf],ecx
  432f72:	sub    edx,esp
  432f74:	add    eax,DWORD PTR [eax]
  432f76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432f7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432f83:	mov    eax,DWORD PTR [ecx]
  432f85:	and    BYTE PTR [eax],al
  432f87:	cmp    BYTE PTR [eax],dl
  432f89:	add    BYTE PTR [ebp+0x66],al
  432f8c:	inc    ecx
  432f8e:	push   esp
  432f8f:	(bad)  
  432f90:	jne    0x432f92
  432f92:	push   edx
  432f93:	enterw 0xc1,0x4d
  432f98:	mov    esp,DWORD PTR [esi+0x20]
  432f9b:	add    DWORD PTR [ecx-0x7b],eax
  432f9e:	add    eax,DWORD PTR [ebx]
  432fa0:	str    WORD PTR [eax+0x45]
  432fa4:	lea    ecx,[ebx+0x45890801]
  432faa:	sbb    BYTE PTR [ebx],al
  432fac:	dec    ebp
  432fad:	cmp    al,0xf
  432faf:	inc    ebp
  432fb0:	push   eax
  432fb1:	mov    esi,DWORD PTR [ebx]
  432fb3:	push   eax
  432fb4:	add    eax,eax
  432fb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432fbd:	inc    ebp
  432fbe:	add    BYTE PTR [esi],dh
  432fc0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432fc7:	(bad)  
  432fc8:	mov    ebx,eax
  432fca:	loopne 0x433011
  432fcc:	dec    ebp
  432fcd:	mov    ecx,DWORD PTR [edi]
  432fcf:	cld    
  432fd0:	push   eax
  432fd1:	xchg   DWORD PTR [ebx],esi
  432fd3:	add    DWORD PTR [ebx],ebp
  432fd5:	add    BYTE PTR [ebx],ch
  432fd7:	or     BYTE PTR [ecx],bh
  432fd9:	dec    ecx
  432fda:	loopne 0x432fdf
  432fdc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432fe2:	push   ebp
  432fe3:	add    DWORD PTR [ebx+0x55100800],eax
  432fe9:	dec    ebp
  432fea:	jmp    0x432f75
  432fec:	mov    esp,DWORD PTR [eax]
  432fee:	sbb    dl,dl
  432ff0:	inc    eax
  432ff1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ff7:	add    BYTE PTR [ebx+0x74528555],cl
  432ffd:	push   ebp
  432ffe:	div    DWORD PTR [ebx]
  433000:	and    eax,DWORD PTR [ebx]
  433002:	add    edx,DWORD PTR [edx-0x30]
  433005:	jno    0x432f92
  433007:	inc    DWORD PTR [eax+eiz*1]
  43300a:	inc    ebp
  43300b:	push   eax
  43300c:	push   eax
  43300d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433013:	mov    edi,esp
  433015:	push   eax
  433016:	inc    ebp
  433017:	enter  0x458b,0x8
  43301b:	push   ecx
  43301c:	(bad)  
  43301d:	call   0x10d39f5
  433022:	pop    ss
  433023:	push   ebp
  433024:	mov    ecx,DWORD PTR [ebx+0x489408]
  43302a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  433030:	push   ecx
  433031:	jo     0x43301b
  433033:	inc    DWORD PTR [edi]
  433035:	or     BYTE PTR [eax],al
  433037:	call   0xce3781
  43303c:	fmul   QWORD PTR [ebp+0x55]
  43303f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  433045:	mov    bh,0x8c
  433047:	adc    al,0x99
  433049:	dec    esp
  43304a:	xor    bl,BYTE PTR [eax]
  43304c:	mov    ecx,DWORD PTR [ebp+0xc]
  43304f:	mov    eax,DWORD PTR [ebp-0x4]
  433052:	mov    esi,DWORD PTR [edi-0x3148f924]
  433058:	push   es
  433059:	retf   
  43305a:	mov    BYTE PTR [ebp-0x30],0x3b
  43305e:	inc    ebp
  43305f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  433066:	retf   0x83fc
  433069:	into   
  43306a:	dec    ebp
  43306b:	retf   
  43306c:	mov    ecx,DWORD PTR [ebp-0x74]
  43306f:	mov    eax,DWORD PTR [eax]
  433071:	fdiv   QWORD PTR [ebx]
  433073:	mov    bh,0x3
  433075:	push   es
  433076:	mov    esi,ecx
  433078:	sbb    cl,dl
  43307a:	dec    ebp
  43307b:	sar    DWORD PTR [ebx],cl
  43307d:	push   ebp
  43307e:	jne    0x43308f
  433080:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433086:	lea    ebx,[eax]
  433088:	call   0xf4ccbc4f
  43308d:	sbb    dh,dl
  43308f:	add    edx,ebx
  433091:	push   ebp
  433092:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433098:	push   ecx
  433099:	mov    DWORD PTR [eax-0x30],edx
  43309c:	test   DWORD PTR [edx],eax
  43309e:	xadd   esp,esi
  4330a1:	pop    es
  4330a2:	add    cl,dl
  4330a4:	mov    eax,ecx
  4330a6:	or     al,0x45
  4330a8:	(bad)  
  4330a9:	push   eax
  4330aa:	add    DWORD PTR [edx+0x0],eax
  4330ad:	add    ecx,DWORD PTR [ecx]
  4330af:	and    dh,cl
  4330b1:	call   0xc73981
  4330b6:	add    DWORD PTR [ebp+0x0],edx
  4330b9:	mov    esp,DWORD PTR [ebp+0x18]
  4330bc:	add    BYTE PTR [eax+0x48],cl
  4330bf:	xor    eax,DWORD PTR [eax]
  4330c1:	add    esp,DWORD PTR [esi+0x3b]
  4330c4:	inc    ebp
  4330c5:	je     0x43304a
  4330c7:	push   ecx
  4330c8:	push   es
  4330c9:	dec    ebp
  4330ca:	mov    DWORD PTR [ebx],eax
  4330cc:	(bad)  
  4330cd:	or     al,0x5e
  4330cf:	inc    eax
  4330d0:	add    BYTE PTR [ebx],al
  4330d2:	data16 and BYTE PTR [ebp+0x50],al
  4330d6:	sub    DWORD PTR [ecx],0xfffffff8
  4330d9:	add    BYTE PTR [ebp-0x75],ah
  4330dc:	add    BYTE PTR [eax],bl
  4330de:	enter  0x894d,0x8b
  4330e2:	int3   
  4330e3:	loopne 0x43311f
  4330e5:	rol    BYTE PTR [eax],0x33
  4330e8:	lea    cx,[ebp+0xa]
  4330ec:	data16 jb 0x433134
  4330ef:	add    BYTE PTR [ebx+0x44890855],cl
  4330f5:	sbb    ah,al
  4330f7:	inc    ebp
  4330f8:	cmp    BYTE PTR [edi],cl
  4330fa:	add    BYTE PTR [edx+0x66],dl
  4330fd:	xor    ecx,DWORD PTR [eax]
  4330ff:	sub    edi,esi
  433101:	mov    eax,DWORD PTR [eax]
  433103:	or     al,0x66
  433105:	ror    edx,cl
  433107:	dec    ebp
  433108:	inc    ebp
  433109:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43310f:	cld    
  433110:	or     BYTE PTR [edi+0x4501dd],dl
  433116:	ret    0xe8ce
  433119:	retf   
  43311a:	(bad)  
  43311b:	dec    ebp
  43311c:	mov    al,0x8b
  43311e:	in     al,dx
  43311f:	and    BYTE PTR [ebx],bh
  433121:	or     al,BYTE PTR [ebp+0x27]
  433124:	in     al,dx
  433125:	xchg   eax,ebp
  433127:	add    edi,eax
  433129:	add    BYTE PTR [eax+0x3f52ed55],bh
  43312f:	push   ebp
  433130:	inc    ebp
  433131:	xor    ebx,edx
  433133:	add    ebp,eax
  433135:	push   edx
  433136:	push   bp
  433138:	inc    ebp
  433139:	(bad)  
  43313a:	jmp    0xc342f793
  43313f:	sbb    al,0x33
  433141:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433148:	add    BYTE PTR [ebp+0x44],0x8b
  43314c:	jmp    0xf98b:0x100041c8
  433153:	xor    esi,DWORD PTR [edx+0x3]
  433156:	mov    ecx,DWORD PTR [edi]
  433158:	fmul   DWORD PTR [edx]
  43315a:	add    BYTE PTR [eax],al
  43315c:	lea    eax,[ebx-0x4700273c]
  433162:	add    al,0x4f
  433164:	pop    DWORD PTR [eax]
  433166:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43316c:	push   edx
  43316d:	inc    WORD PTR [ebp+0x8]
  433171:	mov    eax,0x514f4d
  433176:	(bad)
  43317a:	add    al,al
  43317c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433182:	test   DWORD PTR [esi+0x74],esp
  433185:	inc    ebp
  433186:	mov    DWORD PTR [eax+0xa4f08],edi
  43318c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433192:	or     dh,cl
  433194:	or     eax,0x8b8d5045
  433199:	inc    ebp
  43319a:	mov    WORD PTR [ecx+0x3b8a00],?
  4331a0:	jne    0x4331d5
  4331a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4331a8:	add    DWORD PTR [ebx],eax
  4331aa:	add    bh,bh
  4331ac:	adc    DWORD PTR [eax],ecx
  4331ae:	adc    DWORD PTR [ebp+0x55],edi
  4331b1:	push   es
  4331b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4331b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4331bf:	inc    ebp
  4331c0:	mov    esp,edi
  4331c2:	or     al,0xda
  4331c4:	push   eax
  4331c5:	(bad)  
  4331c6:	jne    0x43317c
  4331c8:	call   0x3b2ab7
  4331cd:	inc    ebp
  4331ce:	rol    ah,0x84
  4331d1:	call   0xbc43f8d6
  4331d6:	jne    0x4331b2
  4331d8:	mov    ebx,ebx
  4331da:	inc    edi
  4331dc:	and    al,al
  4331de:	fs jmp 0x7ec877e3
  4331e4:	bswap  ecx
  4331e6:	scas   al,BYTE PTR es:[edi]
  4331e7:	inc    esp
  4331e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4331ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4331f6:	call   DWORD PTR [edi]
  4331f8:	shr    ah,0x84
  4331fb:	xchg   DWORD PTR [eax],eax
  4331fd:	add    DWORD PTR [eax],eax
  4331ff:	add    bh,bh
  433201:	dec    ebp
  433202:	and    BYTE PTR [ecx-0x38],dl
  433205:	push   eax
  433206:	dec    DWORD PTR [ebx+0xfd885]
  43320c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433212:	mov    WORD PTR [ecx+0x0],ss
  433215:	lea    ecx,[ebx+0x108b20d8]
  43321b:	mov    WORD PTR [edx],ds
  43321d:	add    BYTE PTR [edi+0xff01ff],al
  433223:	mov    ecx,DWORD PTR [ebp-0x28]
  433226:	push   ecx
  433227:	shl    BYTE PTR [ebp+0x3a],0x8b
  43322b:	inc    ebp
  43322c:	in     al,0xeb
  43322e:	jno    0x4331bb
  433230:	push   edx
  433231:	mov    DWORD PTR [eax-0x28],edx
  433234:	mov    eax,DWORD PTR [ebp+0x20]
  433237:	je     0x4331c0
  433239:	mov    eax,DWORD PTR [ecx]
  43323b:	sbb    BYTE PTR [eax],al
  43323d:	pop    DWORD PTR [eax]
  43323f:	add    esi,eax
  433241:	add    bl,al
  433243:	adc    DWORD PTR [edi],esi
  433245:	jmp    0x8bce8297
  43324a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433251:	jne    0x4331de
  433253:	mov    ecx,DWORD PTR [eax]
  433255:	in     al,0x75
  433257:	pop    DWORD PTR [ecx+0x5101]
  43325d:	push   edx
  43325e:	inc    DWORD PTR [ebx]
  433260:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433266:	add    BYTE PTR [edi+0x9],dl
  433269:	call   DWORD PTR [esi]
  43326b:	and    dl,al
  43326d:	and    bh,bh
  43326f:	inc    edi
  433271:	test   eax,edx
  433273:	sldt   ebx
  433276:	cmp    DWORD PTR [eax],eax
  433278:	pushf  
  433279:	(bad)  
  43327a:	jmp    0x433288
  43327c:	mov    eax,edi
  43327e:	or     al,0x75
  433280:	inc    eax
  433281:	call   0x432989
  433286:	mov    eax,eax
  433288:	loopne 0x43320e
  43328a:	inc    ebp
  43328b:	add    BYTE PTR [ebx+0x1451c00],cl
  433291:	mov    eax,DWORD PTR [ebp+0x20]
  433294:	add    edi,ecx
  433296:	add    BYTE PTR [eax],ch
  433298:	cmp    edi,0x18
  43329b:	test   DWORD PTR [ebp+0xf],esi
  43329e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4332a5:	jne    0x4332a9
  4332a7:	call   0xffa22d6c
  4332ac:	leave  
  4332ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4332b1:	add    ah,ch
  4332b3:	add    BYTE PTR [edi-0x48fef979],dh
  4332b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4332c0:	inc    esp
  4332c1:	mov    ebx,DWORD PTR [eax]
  4332c3:	fcom   st(2)
  4332c5:	add    BYTE PTR [edi],bl
  4332c7:	lea    ecx,[eax-0x18]
  4332ca:	(bad)  
  4332cb:	push   DWORD PTR [ecx]
  4332cd:	call   0xffb5802f
  4332d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4332d6:	fstp   DWORD PTR [esi+ebx*8]
  4332d9:	push   ebp
  4332da:	pop    ebp
  4332db:	mov    esi,DWORD PTR [edx-0x38]
  4332de:	add    DWORD PTR [eax],0x28
  4332e1:	mov    edi,DWORD PTR [ebx]
  4332e3:	xor    esi,DWORD PTR [edx+0x3]
  4332e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4332ea:	pop    ebp
  4332eb:	or     al,0x4
  4332ed:	inc    ecx
  4332ee:	push   ebp
  4332ef:	(bad)  
  4332f0:	in     al,dx
  4332f1:	or     ah,ch
  4332f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332f4:	xbegin 0xffc8a8ea
  4332fa:	clc    
  4332fb:	adc    al,0x45
  4332fd:	idiv   BYTE PTR [ecx]
  4332ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433306:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43330c:	add    BYTE PTR [ecx+0x66],dh
  43330f:	add    eax,DWORD PTR [ebp+0x52]
  433312:	adc    eax,0x20
  433315:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43331b:	test   DWORD PTR [eax],eax
  43331d:	clc    
  43331e:	data16 or al,BYTE PTR [ebp+0x45]
  433322:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433329:	rol    BYTE PTR [ebp+0x45],1
  43332c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433332:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433338:	push   ebx
  433339:	add    BYTE PTR [ecx+0x0],dl
  43333c:	push   ecx
  43333d:	jge    0x433372
  43333f:	add    BYTE PTR [esi+0x4],dl
  433342:	jne    0x4333a9
  433344:	mov    edx,0x457200
  433349:	jmp    0x43330d
  43334b:	xor    edi,DWORD PTR [ebx]
  43334d:	pop    edi
  43334e:	cvtdq2ps xmm7,xmm0
  433351:	ret    0x0
  433354:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43335a:	xor    ecx,DWORD PTR [edi]
  43335c:	add    eax,DWORD PTR [ecx+0x3b]
  43335f:	push   ebx
  433360:	rdpmc  
  433362:	out    0x8d,al
  433364:	add    BYTE PTR [eax],cl
  433366:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43336c:	ret    0x450c
  43336f:	sbb    al,0x8b
  433371:	cmp    eax,esi
  433373:	or     cl,al
  433375:	or     al,0xc2
  433377:	pop    eax
  433378:	inc    ebp
  433379:	add    ecx,DWORD PTR [edi]
  43337b:	add    esi,DWORD PTR [ebp+0x39]
  43337e:	invd   
  433380:	jge    0x43338c
  433382:	mov    eax,0x478ac0
  433387:	cli    
  433388:	xor    esp,ecx
  43338a:	mov    ebx,0x5b8ac0
  43338f:	ret    0x33
  433392:	mov    eax,0x833a8b
  433397:	sub    BYTE PTR [ebx],al
  433399:	inc    ebp
  43339a:	data16 ss clc 
  43339d:	pushf  
  43339e:	inc    bh
  4333a0:	mov    esp,esp
  4333a2:	hlt    
  4333a3:	test   DWORD PTR [ebp-0x8],esi
  4333a6:	mov    eax,DWORD PTR [ebp-0x14]
  4333a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4333af:	dec    edi
  4333b0:	or     BYTE PTR [eax],al
  4333b2:	jne    0x43333d
  4333b4:	mov    esi,esp
  4333b6:	call   0x77a9bf7b
  4333bb:	inc    ebp
  4333bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4333c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4333c8:	add    BYTE PTR [esi+0x7d],ah
  4333cb:	inc    ebp
  4333cc:	mov    bx,WORD PTR [ebp+0x8]
  4333d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4333d7:	inc    ebp
  4333d8:	mov    bx,di
  4333db:	lock test BYTE PTR [ecx+0x7000801],bh
  4333e2:	jge    0x4333a5
  4333e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4333ea:	cli    
  4333eb:	xor    bl,bh
  4333ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4333f3:	test   BYTE PTR [eax],cl
  4333f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4333fc:	cmp    ebp,eax
  4333fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433405:	test   BYTE PTR [ebp+0x1],bh
  433408:	mov    ebx,0x458a00
  43340d:	xor    esi,DWORD PTR [ebx]
  43340f:	add    esp,DWORD PTR [esi-0x77]
  433412:	pop    ebp
  433413:	loopne 0x43347b
  433415:	inc    ebp
  433416:	clc    
  433417:	xor    edi,DWORD PTR [ebx]
  433419:	add    esi,DWORD PTR [edx-0x77]
  43341c:	data16 fdivr QWORD PTR [ebp-0x49]
  433420:	mov    ebx,0xb78afc
  433425:	hlt    
  433426:	xor    edi,DWORD PTR [eax]
  433428:	data16 add BYTE PTR [ebp+0x66],bl
  43342c:	data16 lock clc 
  43342f:	cmp    BYTE PTR [ebx],bh
  433431:	add    BYTE PTR [edi+0x66],dh
  433434:	psubq  mm7,QWORD PTR [ebp-0x2]
  433438:	ltr    WORD PTR [ebp+0x66]
  43343c:	add    esi,eax
  43343e:	add    di,WORD PTR [ebp+0x2b]
  433442:	data16 data16 jge 0x4334c3
  433446:	mov    ebx,0xe08a8b
  43344b:	jge    0x433480
  43344d:	data16 data16 xor al,0x5d
  433451:	data16 data16 jne 0x43344d
  433455:	mov    edi,DWORD PTR [ebx]
  433457:	fdiv   QWORD PTR [edx+0x7d]
  43345a:	data16 data16 jge 0x433492
  43345e:	mov    ebx,0x758a66
  433463:	mov    esi,0x667233
  433468:	pop    ebp
  433469:	or     BYTE PTR [esi+0x0],ah
  43346c:	clc    
  43346d:	mov    edi,DWORD PTR [ebx]
  43346f:	lock ja 0x4333fd
  433472:	(bad)  
  433474:	jge    0x43346d
  433476:	invd   
  433478:	pop    ebp
  433479:	add    BYTE PTR [ebx],al
  43347b:	(bad)  
  43347c:	cmp    di,WORD PTR [ebp+0xf]
  433480:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433484:	mov    bx,WORD PTR [ebp-0x10]
  433488:	pop    bp
  43348a:	fbstp  TBYTE PTR [ebx]
  43348c:	test   DWORD PTR [ebx],eax
  43348e:	add    BYTE PTR [ebx],bh
  433490:	add    BYTE PTR [esi+0x7d],ah
  433493:	jge    0x433420
  433495:	data16 in al,dx
  433497:	pop    ebp
  433498:	stc    
  433499:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4334a0:	mov    edi,ebx
  4334a2:	in     al,dx
  4334a3:	test   BYTE PTR [ebp+0x0],bh
  4334a6:	mov    eax,DWORD PTR [eax]
  4334a8:	call   0xbd402e38
  4334ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4334b3:	sti    
  4334b4:	call   0x8b4bb244
  4334b9:	add    ebp,esp
  4334bb:	mov    bx,di
  4334be:	jnp    0x4334e6
  4334c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4334c6:	mov    eax,DWORD PTR [eax]
  4334c8:	call   0x7c3ec033
  4334cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4334d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4334d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4334e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4334e8:	(bad)  
  4334e9:	cld    
  4334ea:	jne    0x433524
  4334ec:	xor    eax,DWORD PTR [eax]
  4334ee:	mov    esp,DWORD PTR [esi-0x10]
  4334f1:	sti    
  4334f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4334f9:	data16 adc bl,bh
  4334fc:	push   ebp
  4334fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433504:	mov    WORD PTR [eax],es
  433506:	cdq    
  433507:	data16 xor bh,bl
  43350a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433510:	mov    esp,DWORD PTR [esi-0x14]
  433513:	fisttp WORD PTR [ebx-0x3748a9f2]
  433519:	or     al,0x2b
  43351b:	mov    bh,0xba
  43351d:	hlt    
  43351e:	mov    bh,bl
  433520:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433526:	dec    edi
  433527:	or     al,0x0
  433529:	mov    edi,DWORD PTR [ebx]
  43352b:	or     BYTE PTR [ebp+0x3b],dh
  43352e:	mov    ecx,DWORD PTR [edi]
  433530:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433536:	xor    al,0xd8
  433538:	pop    bp
  43353a:	lock xor esi,DWORD PTR [ebx]
  43353d:	lea    esp,[esi+0x1f]
  433540:	icebp  
  433541:	jb     0x433547
  433543:	add    al,al
  433545:	jge    0x433553
  433547:	mov    eax,eax
  433549:	fsubr  st,st(3)
  43354b:	pop    ebp
  43354c:	mov    esi,DWORD PTR [ebx]
  43354e:	in     al,0x8d
  433550:	rcr    DWORD PTR [edi],0xc2
  433553:	jb     0x4335b3
  433555:	add    cl,cl
  433557:	jge    0x433565
  433559:	mov    edx,DWORD PTR [ebp-0x20]
  43355c:	in     al,dx
  43355d:	pop    ebp
  43355e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433563:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433567:	mov    ebp,DWORD PTR [ebx]
  433569:	fdivr  QWORD PTR [esi+0x668a5d]
  43356f:	cmp    al,0x33
  433571:	mov    si,0x4f7d
  433575:	mov    eax,DWORD PTR [eax]
  433577:	lock inc ebp
  433579:	mov    esi,DWORD PTR [edi]
  43357b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433582:	clc    
  433583:	(bad)  
  433584:	cmp    edi,DWORD PTR [ebx]
  433586:	je     0x433597
  433588:	push   ebx
  433589:	loopne 0x43359a
  43358b:	dec    ecx
  43358d:	mov    esp,DWORD PTR [edi-0x1c]
  433590:	int    0xf1
  433592:	mov    esi,0x703084d
  433597:	pcmpgtd mm6,mm1
  43359a:	add    BYTE PTR [ebp+0x66],dh
  43359d:	jmp    0x43356a
  43359f:	mov    eax,DWORD PTR [ebx]
  4335a1:	lock push ebp
  4335a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4335a9:	or     bh,dl
  4335ab:	jb     0x4335ab
  4335ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4335b3:	loopne 0x4335b5
  4335b5:	jne    0x4335b5
  4335b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4335bb:	mov    ecx,ebx
  4335bd:	data16 cmp cl,dh
  4335c0:	add    BYTE PTR [eax],bh
  4335c2:	data16 add bl,cl
  4335c5:	data16 cmp dh,dl
  4335c8:	add    BYTE PTR [edx],bh
  4335ca:	data16 add bl,cl
  4335cd:	enterw 0x4df1,0x19
  4335d2:	pop    edi
  4335d3:	jne    0x433556
  4335d5:	mov    esi,DWORD PTR [edi]
  4335d7:	call   0x77b7c178
  4335dc:	xor    ebp,DWORD PTR [ebx]
  4335de:	lea    esp,[esi+0x48]
  4335e1:	repnz in eax,0x3b
  4335e4:	add    BYTE PTR [ebp-0x37],dh
  4335e7:	xor    edx,DWORD PTR [ebp-0x15]
  4335ea:	in     al,dx
  4335eb:	xor    edx,DWORD PTR [esi+0x40]
  4335ee:	mov    DWORD PTR [edi],0x338545fc
  4335f4:	clc    
  4335f5:	add    esi,DWORD PTR [esi]
  4335f7:	pop    edi
  4335f8:	pushf  
  4335f9:	pop    ebx
  4335fa:	call   0xff4435c1
  4335ff:	mov    edi,eax
  433601:	push   ecx
  433602:	pop    es
  433603:	mov    edi,DWORD PTR [edx]
  433605:	push   esi
  433606:	inc    esp
  433607:	(bad)  
  433608:	jle    0x43360a
  43360a:	popa   
  43360b:	data16 (bad) 
  43360d:	into   
  43360e:	addr16 cmp ch,cl
  433611:	add    BYTE PTR [ecx+0x7ce0866],bh
  433617:	cmp    ah,BYTE PTR [esi+0x0]
  43361a:	add    bh,al
  43361c:	(bad)  
  43361d:	cld    
  43361e:	add    BYTE PTR [ebp+0x36c3f866],al
  433624:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43362b:	pop    ebp
  43362c:	or     BYTE PTR [edi+0x0],dl
  43362f:	mov    bh,0x66
  433631:	mov    edi,0xff038dc3
  433636:	jne    0x433689
  433638:	lea    edx,[ecx+0x1]
  43363b:	mov    ebx,0xd64ff1
  433640:	sar    DWORD PTR [ebx],1
  433642:	test   BYTE PTR [ebp+0x32],dh
  433645:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433649:	push   edi
  43364a:	xor    BYTE PTR [ebx],0x3a
  43364d:	mov    esi,ebx
  43364f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433655:	xor    al,BYTE PTR [ebp+0x64]
  433658:	pop    ebx
  433659:	mov    ebx,0x9c3a37
  43365e:	je     0x43368b
  433660:	xor    edi,DWORD PTR [ebx+0x668a33]
  433666:	mov    WORD PTR [ebx],?
  433668:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43366e:	pop    edi
  43366f:	cmp    ecx,ecx
  433671:	jne    0x4336c8
  433673:	mov    ebp,esp
  433675:	cld    
  433676:	push   esi
  433677:	pop    ebx
  433678:	inc    ebp
  433679:	stc    
  43367a:	aaa    
  43367b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433682:	clc    
  433683:	test   dl,dl
  433685:	xor    al,0xff
  433687:	fs pop si
  43368a:	or     bl,al
  43368c:	dec    BYTE PTR [ebx+0x57665100]
  433692:	retf   0x3845
  433695:	aaa    
  433696:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43369d:	clc    
  43369e:	add    BYTE PTR [ebx+0x66],bl
  4336a1:	dec    edx
  4336a3:	mov    edx,DWORD PTR [edi-0x76]
  4336a6:	push   edi
  4336a7:	add    al,0xb7
  4336a9:	xor    al,0xba
  4336ab:	cmp    al,0x8d
  4336ad:	je     0x4336ae
  4336af:	mov    edx,DWORD PTR [ecx-0x46]
  4336b2:	push   ecx
  4336b3:	lea    edi,[ebx+0x514fff]
  4336b9:	push   ecx
  4336ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4336bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4336c3:	add    BYTE PTR [ebx],dh
  4336c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4336cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4336d2:	mov    ebx,0x3b3a00
  4336d7:	jne    0x433704
  4336d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4336df:	xor    esi,DWORD PTR [ebx]
  4336e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4336e7:	push   edi
  4336e8:	cmp    esp,ebp
  4336ea:	jne    0x4336ec
  4336ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4336f2:	clc    
  4336f3:	inc    esp
  4336f4:	pop    ebx
  4336f5:	sti    
  4336f6:	add    eax,0xeb8bc075
  4336fb:	cld    
  4336fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433702:	mov    ecx,DWORD PTR [ecx+edx*2]
  433705:	rol    DWORD PTR [ebp-0x37],0xf
  433709:	mov    DWORD PTR [eax],ecx
  43370b:	inc    edi
  43370c:	(bad)  
  43370d:	in     eax,0x2
  43370f:	add    bh,bh
  433711:	(bad)  
  433712:	mov    esi,0xc38a5e
  433717:	mov    esi,DWORD PTR [ebx]
  433719:	push   ecx
  43371a:	mov    edi,0xfc4fc7
  43371f:	test   DWORD PTR [ebp-0x8],edx
  433722:	data16 ss (bad) 
  433725:	pushf  
  433726:	sub    ebp,eax
  433728:	inc    ebp
  433729:	(bad)  
  43372a:	sub    edi,edi
  43372c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433732:	inc    ebp
  433733:	add    BYTE PTR [esi+0x2b],ah
  433736:	or     bh,BYTE PTR [edx+0xf8ac2]
  43373c:	cmp    al,0x33
  43373e:	mov    edi,DWORD PTR [edx+0x24f81]
  433744:	(bad)  
  433745:	cmp    esi,DWORD PTR [ebx]
  433747:	je     0x433701
  433749:	push   ebx
  43374a:	dec    edi
  43374b:	str    ecx
  43374e:	cmp    esp,DWORD PTR [edi+0x75]
  433751:	int    0x33
  433753:	mov    edi,0x789085f
  433758:	mov    ecx,DWORD PTR [eax]
  43375a:	cld    
  43375b:	add    cl,cl
  43375d:	data16 add al,0xcb
  433760:	push   ebp
  433761:	add    ebp,esp
  433763:	jne    0x433751
  433765:	(bad)  
  433766:	mov    DWORD PTR [ecx],0xd685f7ec
  43376c:	clc    
  43376d:	xlat   BYTE PTR ds:[ebx]
  43376e:	inc    ebp
  43376f:	mov    edi,DWORD PTR [ecx]
  433771:	push   eax
  433772:	pushf  
  433773:	in     eax,0x8b
  433775:	add    ah,ch
  433777:	(bad)  
  433778:	push   ecx
  433779:	add    BYTE PTR [ecx+0x66],dl
  43377c:	add    eax,0x3872cb
  433781:	add    BYTE PTR [ebp+0x66],al
  433784:	(bad)  
  433785:	retf   
  433786:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43378d:	retf   
  43378e:	cmp    cl,al
  433790:	pushf  
  433791:	jge    0x43375a
  433793:	aaa    
  433794:	cld    
  433795:	pushf  
  433796:	test   DWORD PTR [edi-0x8],ebx
  433799:	je     0x4337e0
  43379b:	xor    esi,DWORD PTR ds:0x7020840
  4337a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4337a5:	push   ebp
  4337a6:	add    esp,ebp
  4337a8:	jb     0x433735
  4337aa:	add    BYTE PTR [eax],cl
  4337ac:	dec    ebp
  4337ad:	mov    bh,0x81
  4337af:	push   esi
  4337b0:	push   ecx
  4337b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4337b8:	xor    al,BYTE PTR [eax]
  4337ba:	mov    edx,DWORD PTR [edi+0x10]
  4337bd:	(bad)  
  4337be:	scas   eax,DWORD PTR es:[edi]
  4337bf:	cmp    bh,BYTE PTR [ebx]
  4337c1:	add    BYTE PTR [edi],cl
  4337c3:	mov    ebp,ebp
  4337c5:	cld    
  4337c6:	add    BYTE PTR [ebx],bh
  4337c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4337cc:	dec    ebp
  4337cd:	or     BYTE PTR [ebx],ch
  4337cf:	ret    0x458b
  4337d2:	lock jmp 0x4337c6
  4337d5:	mov    ecx,DWORD PTR [eax]
  4337d7:	or     BYTE PTR [edi],al
  4337d9:	mov    ecx,eax
  4337db:	xor    DWORD PTR [edx+0x2],0x0
  4337df:	mov    bh,0xc1
  4337e1:	adc    BYTE PTR [eax],dh
  4337e3:	iret   
  4337e4:	inc    ebp
  4337e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4337eb:	inc    BYTE PTR [ebx]
  4337ed:	cmp    bh,al
  4337ef:	add    BYTE PTR [ecx],dl
  4337f1:	data16 adc al,bh
  4337f4:	dec    ecx
  4337f5:	fisttp WORD PTR [ecx+0x456604c0]
  4337fb:	add    dh,BYTE PTR ds:0x75e0845
  433801:	ret    0x4d
  433804:	lea    ecx,[ebx+0x18728301]
  43380a:	add    BYTE PTR [ebp+0x45],al
  43380d:	ss jmp 0x10a38af
  433813:	call   0xf8cebd5d
  433818:	clc    
  433819:	inc    ebp
  43381a:	shl    DWORD PTR ds:0x781084d,0x51
  433821:	cdq    
  433822:	push   ecx
  433823:	xor    al,BYTE PTR [ecx+0x32f89989]
  433829:	inc    ebp
  43382a:	cmp    edi,DWORD PTR [esi]
  43382c:	jbe    0x4337ca
  43382e:	mov    eax,edi
  433830:	or     ah,dh
  433832:	inc    ebp
  433833:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433839:	cmp    BYTE PTR [ebx-0x74747664],cl
  43383f:	in     al,dx
  433840:	hlt    
  433841:	push   ecx
  433842:	push   ecx
  433843:	push   ecx
  433844:	push   ecx
  433845:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43384b:	cdq    
  43384c:	cdq    
  43384d:	xor    dh,BYTE PTR [edx]
  43384f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433855:	or     BYTE PTR [ebp+0x7],al
  433858:	mov    eax,ecx
  43385a:	clc    
  43385b:	jb     0x43381e
  43385d:	add    BYTE PTR [ebp+0x55],cl
  433860:	or     DWORD PTR [edi],0xc251d151
  433866:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433870:	mov    edi,eax
  433872:	or     cl,al
  433874:	inc    ebp
  433875:	dec    ebp
  433876:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43387c:	or     WORD PTR [ecx],0x8999
  433881:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433887:	mov    edx,DWORD PTR [ecx+0x8]
  43388a:	mov    eax,DWORD PTR [ebp-0x8]
  43388d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433894:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43389a:	inc    ebp
  43389b:	dec    eax
  43389c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4338a2:	add    edx,DWORD PTR [ecx-0x8]
  4338a5:	mov    ecx,DWORD PTR [ecx]
  4338a7:	clc    
  4338a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4338af:	mov    ecx,ebp
  4338b1:	clc    
  4338b2:	(bad)  
  4338b3:	popf   
  4338b4:	inc    DWORD PTR [eax]
  4338b6:	ret    0x8b
  4338b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4338bf:	mov    edi,esp
  4338c1:	hlt    
  4338c2:	test   ecx,esi
  4338c4:	clc    
  4338c5:	or     BYTE PTR [ebp+0x7],al
  4338c8:	cmp    ecx,eax
  4338ca:	pushf  
  4338cb:	jb     0x433900
  4338cd:	add    BYTE PTR [eax-0x3f],al
  4338d0:	inc    eax
  4338d1:	daa    
  4338d2:	inc    ebp
  4338d3:	inc    ebp
  4338d4:	xor    eax,0x7f80803
  4338d9:	dec    ebp
  4338da:	cdq    
  4338db:	add    esi,DWORD PTR [edx]
  4338dd:	clc    
  4338de:	cmp    DWORD PTR [ecx],ecx
  4338e0:	or     al,0x8
  4338e2:	add    al,BYTE PTR [ebp+0x2c]
  4338e5:	xor    eax,0x7350845
  4338ea:	or     BYTE PTR [ebp+0x7],cl
  4338ed:	lea    ebx,[ecx-0x748dcdff]
  4338f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4338fa:	mov    edx,DWORD PTR [eax]
  4338fc:	cld    
  4338fd:	dec    ebp
  4338fe:	push   ecx
  4338ff:	sub    edx,DWORD PTR [ecx-0x75]
  433902:	add    eax,0xf172fc
  433907:	or     BYTE PTR [ebp+0x7],cl
  43390a:	add    eax,ecx
  43390c:	or     al,0x72
  43390e:	add    DWORD PTR [eax],eax
  433910:	mov    ebx,0x29c2c1
  433915:	inc    ebp
  433916:	mov    eax,DWORD PTR [ebx]
  433918:	cmp    eax,0x3004d1c
  43391e:	xbegin 0x66c8c518
  433924:	clc    
  433925:	or     BYTE PTR [ebp+0x45],al
  433928:	cmp    DWORD PTR ds:0x78b089c,esi
  43392e:	adc    BYTE PTR [ebp+0x45],cl
  433931:	lea    eax,[ebp+0x33727501]
  433937:	add    cl,ch
  433939:	inc    ebp
  43393a:	add    bl,ch
  43393c:	add    BYTE PTR [ebx+0x45850845],cl
  433942:	je     0x4338cf
  433944:	push   ebx
  433945:	or     al,0x85
  433947:	dec    ebp
  433948:	std    
  433949:	mov    bh,bh
  43394b:	mov    BYTE PTR [ebp-0x75],al
  43394e:	mov    edi,eax
  433950:	or     al,0x89
  433952:	inc    ebp
  433953:	clc    
  433954:	mov    esp,esp
  433956:	hlt    
  433957:	call   DWORD PTR [edi-0x37]
  43395a:	push   ecx
  43395b:	or     al,0x51
  43395d:	push   ebp
  43395e:	xor    ebp,esp
  433960:	mov    esi,0x457251
  433965:	ss (bad) 
  433967:	pushf  
  433968:	inc    ebp
  433969:	(bad)  
  43396a:	mov    edi,eax
  43396c:	or     al,0x85
  43396e:	add    al,bh
  433970:	inc    eax
  433972:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433976:	or     ah,bh
  433978:	inc    eax
  433979:	push   ecx
  43397a:	jmp    0x4339cd
  43397c:	mov    eax,DWORD PTR ds:0xe8720c
  433982:	mov    DWORD PTR [ebp-0x8],eax
  433985:	jne    0x4339cc
  433987:	jmp    0x433914
  433989:	mov    ebp,DWORD PTR [eax]
  43398b:	clc    
  43398c:	retf   0xff51
  43398f:	push   ecx
  433990:	mov    DWORD PTR ds:0x757210,eax
  433996:	mov    ecx,DWORD PTR [ebp-0x4]
  433999:	sub    esp,DWORD PTR [ebx-0x77]
  43399c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4339a3:	or     ah,bh
  4339a5:	pop    es
  4339a6:	ds cdq 
  4339a8:	push   DWORD PTR [edx]
  4339aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4339b0:	(bad)  
  4339b1:	mov    bh,bh
  4339b3:	jmp    0x4339a1
  4339b5:	leave  
  4339b6:	jne    0x4339c0
  4339b8:	call   0x303312
  4339bd:	in     al,dx
  4339be:	dec    ebp
  4339bf:	add    dh,BYTE PTR [ebx]
  4339c1:	add    BYTE PTR [ebx],al
  4339c3:	inc    ebp
  4339c4:	cmp    esi,DWORD PTR [esi]
  4339c6:	je     0x433964
  4339c8:	mov    eax,edi
  4339ca:	or     al,0xf0
  4339cc:	add    BYTE PTR [ebp+0x458bf845],al
  4339d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4339d8:	adc    al,0x7
  4339da:	enter  0x9fc0,0xa5
  4339de:	rol    BYTE PTR [eax],0x5e
  4339e1:	mov    ecx,ecx
  4339e3:	or     al,0xc
  4339e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4339ec:	jmp    0x4339ed
  4339ee:	push   ebp
  4339ef:	mov    esp,ebp
  4339f1:	cld    
  4339f2:	inc    ebp
  4339f3:	inc    ebp
  4339f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4339fb:	push   esi
  4339fc:	push   esi
  4339fd:	mov    edi,0x7af080f
  433a02:	add    bh,al
  433a04:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a0a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a10:	mov    ebp,eax
  433a12:	mov    ebp,edi
  433a14:	lock call edx
  433a17:	fcom   DWORD PTR [ebp+0x45]
  433a1a:	mov    eax,0x148a8b
  433a1f:	push   ecx
  433a20:	enter  0xc145,0x83
  433a24:	cmp    cl,BYTE PTR [eax]
  433a26:	add    BYTE PTR [ebp+0x4d],al
  433a29:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433a2f:	call   0xffa3359e
  433a34:	cmp    eax,DWORD PTR [ebp-0xc]
  433a37:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433a3b:	push   ebp
  433a3c:	(bad)
  433a3f:	std    
  433a40:	lock push DWORD PTR [edi+0x5d08fcdb]
  433a47:	inc    ebp
  433a48:	(bad)  
  433a49:	call   0xff7d36d9
  433a4e:	add    al,BYTE PTR [ebp+0x37]
  433a51:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433a57:	jne    0x433a59
  433a59:	(bad)  
  433a5a:	cmp    edi,esp
  433a5c:	jne    0x433a8f
  433a5e:	mov    edi,edi
  433a60:	or     BYTE PTR [ebx-0x307f0b49],cl
  433a66:	pop    ds
  433a67:	into   
  433a68:	je     0x433a2b
  433a6a:	mov    ebx,DWORD PTR [esi]
  433a6c:	or     BYTE PTR [ebp-0x49],al
  433a6f:	mov    esp,DWORD PTR [esi-0x77]
  433a72:	mov    esi,0xfe451f0c
  433a77:	mov    eax,DWORD PTR [eax]
  433a79:	or     al,0x66
  433a7b:	sar    bl,0x3b
  433a7e:	xor    esi,DWORD PTR [ebp+0x66]
  433a81:	xor    ecx,edi
  433a83:	pop    edi
  433a84:	adc    bl,BYTE PTR [ebx+0x7e]
  433a87:	ret    0xff
  433a8a:	cld    
  433a8b:	inc    ebp
  433a8c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433a92:	cld    
  433a93:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433a9a:	push   0xffffff83
  433a9c:	pop    edi
  433a9d:	or     BYTE PTR [ebp+0x53],dh
  433aa0:	xorps  xmm1,xmm2
  433aa3:	test   BYTE PTR [eax+eax*1],bh
  433aa6:	add    BYTE PTR [eax],al
  433aa8:	adc    eax,eax
  433aaa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433ab2:	jmp    DWORD PTR [eax]
  433ab4:	ror    al,0x5e
  433ab7:	inc    ebp
  433ab8:	leave  
  433ab9:	xor    ecx,DWORD PTR [eax]
  433abb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433ac1:	add    ch,al
  433ac3:	xor    edi,edi
  433ac5:	xor    DWORD PTR [ebx],0x660033fe
  433acb:	mov    DWORD PTR [ebp-0xc],ecx
  433ace:	pcmpgtw mm0,mm0
  433ad1:	add    dl,ah
  433ad3:	leave  
  433ad4:	mov    edi,DWORD PTR [eax-0x7d]
  433ad7:	push   ax
  433ad9:	dec    ebp
  433ada:	mov    esi,DWORD PTR [ebx-0x75]
  433add:	lea    ebp,[eax-0x7c00fffe]
  433ae3:	xor    eax,DWORD PTR [eax]
  433ae5:	sysret 
  433ae7:	dec    ebp
  433ae8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433aef:	push   WORD PTR [ecx+0x8]
  433af3:	jne    0x433ab6
  433af5:	ud0    ecx,DWORD PTR [ecx]
  433af8:	mov    edi,DWORD PTR [edx]
  433afa:	lods   al,BYTE PTR ds:[esi]
  433afb:	add    BYTE PTR [eax],al
  433afd:	data16 (bad) 
  433aff:	iret   
  433b00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b07:	cli    
  433b08:	inc    ebp
  433b09:	cmp    al,0x8d
  433b0b:	add    BYTE PTR [esi+0x2d],ah
  433b0e:	inc    ebp
  433b0f:	pop    ebp
  433b10:	lea    ecx,[edi]
  433b12:	mov    dl,bh
  433b14:	add    BYTE PTR [edi],cl
  433b16:	mov    DWORD PTR [eax+eax*8],edi
  433b19:	mov    ebx,0x3a87
  433b1e:	add    BYTE PTR [ebx],ch
  433b20:	inc    ebp
  433b21:	data16 (bad) 
  433b23:	clc    
  433b24:	int3   
  433b25:	cmp    eax,DWORD PTR [eax]
  433b27:	je     0x433ab2
  433b29:	push   0xffffffc8
  433b2b:	pop    edi
  433b2c:	xchg   DWORD PTR [ebp+0x0],eax
  433b2f:	data16 add BYTE PTR [ebp+0x45],cl
  433b33:	lea    cx,[ebp+0x10]
  433b37:	jb     0x433b39
  433b39:	jmp    0x433ac4
  433b3b:	call   eax
  433b3d:	clc    
  433b3e:	xchg   DWORD PTR [edi+0x1],edi
  433b41:	mov    eax,DWORD PTR [eax]
  433b43:	or     BYTE PTR [ebp-0x49],al
  433b46:	lea    eax,[eax+0x74003154]
  433b4c:	push   edi
  433b4d:	inc    edx
  433b4e:	jge    0x433b4f
  433b50:	mov    DWORD PTR [edi],ecx
  433b52:	fdiv   DWORD PTR [edi-0x6]
  433b55:	inc    DWORD PTR [eax]
  433b57:	xor    edx,DWORD PTR [eax+0x5f]
  433b5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433b5d:	ret    0x0
  433b60:	xor    BYTE PTR [ebp-0x51],cl
  433b63:	cmp    edi,0xf0ff8902
  433b69:	data16 ror al,0x84
  433b6d:	rol    BYTE PTR [eax],0x3b
  433b70:	add    al,dh
  433b72:	dec    eax
  433b73:	xchg   esp,eax
  433b74:	push   ebx
  433b75:	jmp    0x433b02
  433b77:	push   ebp
  433b78:	add    esp,ebp
  433b7a:	add    ebp,esp
  433b7c:	mov    edx,DWORD PTR [edi+0x24]
  433b7f:	clc    
  433b80:	dec    esi
  433b81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433b87:	cmp    BYTE PTR [ebx],al
  433b89:	jne    0x433b14
  433b8b:	xor    esp,eax
  433b8d:	jmp    0x463d10
  433b92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433b95:	jne    0x433b8b
  433b97:	call   0xffcd38f1
  433b9c:	clc    
  433b9d:	xchg   edi,eax
  433b9e:	sti    
  433b9f:	add    DWORD PTR [ebx],eax
  433ba1:	add    BYTE PTR [ebp+0x47],bl
  433ba4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433baa:	pop    ebp
  433bab:	mov    DWORD PTR [esi-0x48],esi
  433bae:	jmp    0x433bf7
  433bb0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433bb6:	(bad)  
  433bb8:	cmp    al,0x0
  433bba:	cmp    eax,DWORD PTR [ebp+0x18]
  433bbd:	lea    ebx,[ebp-0x56]
  433bc0:	jle    0x433bc2
  433bc2:	jae    0x433b4d
  433bc4:	mov    eax,esp
  433bc6:	call   0xb900:0x8b005587
  433bcd:	inc    ebp
  433bce:	push   ebp
  433bcf:	lea    ecx,[ebp-0x27ff4f12]
  433bd5:	mov    eax,edi
  433bd7:	int3   
  433bd8:	push   ebp
  433bd9:	xchg   edi,eax
  433bdb:	add    esp,ebp
  433bdd:	add    BYTE PTR [eax],al
  433bdf:	inc    ebp
  433be0:	add    BYTE PTR [ebp+0x8b3255],cl
  433be6:	cld    
  433be7:	mov    DWORD PTR [edx],edi
  433be9:	aam    0x75
  433beb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433bf1:	mov    DWORD PTR [ebx-0x50],edx
  433bf4:	test   BYTE PTR [ebp-0x1],0xe8
  433bf8:	mov    eax,DWORD PTR [eax]
  433bfa:	hlt    
  433bfb:	add    al,al
  433bfd:	mov    eax,DWORD PTR ds:0x890045a8
  433c03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c09:	inc    DWORD PTR [eax*2+0xf75854d]
  433c10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c16:	call   0x72999957
  433c1b:	je     0x433c7b
  433c1d:	js     0x433c7e
  433c1f:	lock ret 0x7e
  433c23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433c29:	mov    edi,edi
  433c2b:	sbb    al,bl
  433c2d:	clc    
  433c2e:	add    BYTE PTR [ebp-0x73],bh
  433c31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433c37:	ror    BYTE PTR [eax],1
  433c39:	dec    ebp
  433c3a:	xchg   ebp,eax
  433c3b:	mov    edi,edi
  433c3d:	in     al,0x8b
  433c3f:	jge    0x433bca
  433c41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433c47:	clc    
  433c48:	pop    esi
  433c49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433c4f:	clc    
  433c50:	add    al,0x6e
  433c52:	mov    eax,DWORD PTR [ebx]
  433c54:	mov    BYTE PTR [ebp+0x0],dl
  433c57:	mov    edx,DWORD PTR [ebx-0x20]
  433c5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433c60:	add    eax,0x3b3a73
  433c65:	adc    al,0x89
  433c67:	pop    eax
  433c68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433c6c:	ret    0xf08
  433c6f:	cmp    al,0x2
  433c71:	mov    DWORD PTR [edx],edi
  433c73:	cld    
  433c74:	add    BYTE PTR [ebp+0x66],dl
  433c77:	add    eax,ebx
  433c79:	add    esp,eax
  433c7b:	sub    eax,eax
  433c7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433c83:	add    BYTE PTR [eax],al
  433c85:	mov    DWORD PTR [ebx-0x24],ebx
  433c88:	push   edi
  433c89:	push   ebp
  433c8a:	clc    
  433c8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433c92:	out    0xff,eax
  433c94:	add    edx,DWORD PTR [eax]
  433c96:	jmp    0x433c80
  433c98:	cmp    ch,0x44
  433c9b:	(bad)  
  433c9c:	jmp    0x40c8c4ee
  433ca1:	je     0x433c2d
  433ca3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ca9:	inc    ebp
  433caa:	add    BYTE PTR [ebx-0x770375],al
  433cb0:	add    ah,ch
  433cb2:	add    edx,esp
  433cb4:	pop    edi
  433cb5:	pop    ebp
  433cb6:	push   ebp
  433cb7:	inc    ebx
  433cb8:	in     al,dx
  433cb9:	pop    ebp
  433cba:	in     al,dx
  433cbb:	cmp    edx,DWORD PTR [edi-0x8]
  433cbe:	ss xchg esp,eax
  433cc0:	pushf  
  433cc1:	pop    ebx
  433cc2:	mov    ecx,ecx
  433cc4:	call   0x899883cd
  433cc9:	in     al,dx
  433cca:	in     al,0x45
  433ccc:	dec    ebp
  433ccd:	push   esi
  433cce:	test   DWORD PTR [eax+0xfb010f],esi
  433cd4:	add    BYTE PTR [eax+0xc018b],dh
  433cda:	leave  
  433cdb:	inc    ebp
  433cdc:	test   al,ch
  433cde:	add    dh,bh
  433ce0:	add    bh,bh
  433ce2:	dec    ebp
  433ce3:	push   cs
  433ce4:	mov    DWORD PTR [ecx],eax
  433ce6:	hlt    
  433ce7:	push   es
  433ce8:	dec    ebp
  433ce9:	leave  
  433cea:	mov    DWORD PTR [eax],ecx
  433cec:	clc    
  433ced:	cmovge eax,ecx
  433cf0:	mov    ecx,0x85c2f0
  433cf6:	clc    
  433cf7:	pop    DWORD PTR [ebp+0x1]
  433cfa:	push   ebx
  433cfb:	add    BYTE PTR [ebp-0x15],bh
  433cfe:	push   esi
  433cff:	xor    eax,0x898a45
  433d04:	cld    
  433d05:	inc    BYTE PTR [ebp+0x0]
  433d08:	cmp    BYTE PTR [esi-0x64],ah
  433d0b:	add    DWORD PTR [esi+0x78308c1],edi
  433d11:	add    ah,BYTE PTR [edi-0x49]
  433d14:	int    0xbb
  433d16:	mov    ecx,DWORD PTR [edi+0xc]
  433d19:	add    dh,al
  433d1b:	cmp    ecx,ebx
  433d1d:	jne    0x433ce7
  433d1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433d22:	jmp    0xca3d28
  433d27:	add    DWORD PTR [ebp+0x0],eax
  433d2a:	mov    eax,ebx
  433d2c:	or     al,0x8b
  433d2e:	(bad)  
  433d2f:	mov    ecx,esi
  433d31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433d38:	mov    eax,edi
  433d3a:	or     BYTE PTR [edx],cl
  433d3c:	shl    cl,cl
  433d3e:	icebp  
  433d3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433d43:	or     BYTE PTR [edx+eax*2],cl
  433d46:	(bad)  
  433d47:	or     cl,dh
  433d49:	stc    
  433d4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433d4e:	xor    al,0x0
  433d50:	inc    ebp
  433d51:	xchg   BYTE PTR [ebx],al
  433d53:	add    esp,edi
  433d55:	add    BYTE PTR [ebp-0x39],cl
  433d58:	mov    al,bl
  433d5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433d60:	sub    al,0xbf
  433d62:	jmp    0x433ce9
  433d64:	mov    edi,eax
  433d66:	lock jge 0x433d5a
  433d69:	lea    esi,[edx-0x74bad5fd]
  433d6f:	mov    ebp,esp
  433d71:	or     cl,dh
  433d73:	leave  
  433d74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433d7b:	dec    ebp
  433d7c:	dec    ebp
  433d7d:	test   DWORD PTR [ebx],eax
  433d7f:	paddb  mm6,mm0
  433d82:	add    DWORD PTR [eax],eax
  433d84:	dec    ebp
  433d85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433d8b:	mov    esi,DWORD PTR [edx]
  433d8d:	or     al,0x2b
  433d8f:	dec    ebp
  433d90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433d96:	mov    esp,edx
  433d98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433d9f:	mov    DWORD PTR [ebx],ebp
  433da1:	call   0xc76c6d1
  433da6:	mov    DWORD PTR [ebp+0x10],ecx
  433da9:	(bad)  
  433daa:	push   0x8b85ff10
  433daf:	clc    
  433db0:	or     al,0x51
  433db2:	(bad)  
  433db3:	push   ecx
  433db4:	retf   
  433db5:	mov    ebx,0xff4d8dc8
  433dba:	mov    DWORD PTR [ebp+0x8],eax
  433dbd:	xor    eax,DWORD PTR [ebp-0x75]
  433dc0:	cmp    ebp,DWORD PTR [ebx]
  433dc2:	lsl    ebx,WORD PTR [edi-0x8]
  433dc6:	call   DWORD PTR [ebx-0x741bff75]
  433dcc:	(bad)  
  433dcd:	or     al,0x5b
  433dcf:	dec    ebp
  433dd0:	or     BYTE PTR [ebx],dh
  433dd2:	inc    ebp
  433dd3:	xor    esi,DWORD PTR ds:0x708088d
  433dd9:	in     eax,0x99
  433ddb:	add    BYTE PTR [edx],dh
  433ddd:	inc    ebp
  433dde:	pop    edi
  433ddf:	xor    eax,edx
  433de1:	test   DWORD PTR [eax],0x81108b8b
  433de7:	dec    ebp
  433de8:	sub    al,0x33
  433dea:	add    BYTE PTR [ebx],dh
  433dec:	push   esi
  433ded:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433df3:	mov    edi,eax
  433df5:	or     BYTE PTR [ebp+0x45],al
  433df8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433dfe:	ss leave 
  433e00:	pushf  
  433e01:	push   es
  433e02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e0a:	inc    ebp
  433e0b:	cmp    BYTE PTR [esi],0x51
  433e0e:	pushf  
  433e0f:	addr16 (bad) 
  433e11:	shl    esp,1
  433e13:	dec    ebp
  433e14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e1a:	(bad)  
  433e1b:	jmp    0x8c0b10f7
  433e20:	aam    0x8
  433e22:	test   DWORD PTR [ebp-0x8],ecx
  433e25:	mov    BYTE PTR [ebp-0x75],al
  433e28:	or     BYTE PTR [eax],cl
  433e2a:	add    BYTE PTR [ebp-0x75],dl
  433e2d:	mov    eax,0xfc728b
  433e32:	dec    ebp
  433e33:	enter  0xceba,0x8
  433e37:	retf   0x1807
  433e3a:	ret    0x994d
  433e3d:	mov    esi,DWORD PTR [edx]
  433e3f:	or     al,0x33
  433e41:	into   
  433e42:	add    edx,esi
  433e44:	add    ecx,edx
  433e46:	bswap  eax
  433e48:	ror    esi,0x98
  433e4b:	dec    ebp
  433e4c:	add    cl,ch
  433e4e:	mov    edi,edi
  433e50:	hlt    
  433e51:	inc    esi
  433e53:	inc    ebp
  433e54:	ret    0x4533
  433e57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433e5d:	or     BYTE PTR [ebx],dh
  433e5f:	dec    ebp
  433e60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433e66:	jne    0xff8d3e2d
  433e6c:	inc    ebp
  433e6d:	inc    ebp
  433e6e:	mov    esi,DWORD PTR [ebx]
  433e70:	clc    
  433e71:	pop    esi
  433e72:	ret    0xcaeb
  433e75:	mov    eax,esi
  433e77:	call   0x5204904a
  433e7c:	dec    ebp
  433e7d:	add    eax,0xf8728b
  433e82:	adc    eax,0xce0ccac9
  433e87:	push   ebp
  433e88:	ret    0xc6ec
  433e8b:	in     al,dx
  433e8c:	call   0x33438b95
  433e91:	push   edi
  433e92:	add    edi,eax
  433e94:	xor    eax,eax
  433e96:	jmp    0x433edd
  433e98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433e9e:	add    eax,edi
  433ea0:	shr    eax,cl
  433ea2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433ea8:	mov    edi,DWORD PTR [ecx]
  433eaa:	in     al,dx
  433eab:	pushf  
  433eac:	ret    0x84c7
  433eaf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433eb5:	inc    ebp
  433eb6:	in     al,dx
  433eb7:	ss inc ebp
  433eb9:	pushf  
  433eba:	mov    eax,edi
  433ebc:	cld    
  433ebd:	fmul   st(2),st
  433ebf:	sbb    dl,al
  433ec1:	jmp    0x9c3b:0x374d45c1
  433ec8:	jbe    0x433e91
  433eca:	mov    esp,eax
  433ecc:	clc    
  433ecd:	add    BYTE PTR [ebp+0x0],cl
  433ed0:	mov    ecx,ecx
  433ed2:	lea    eax,[ebp-0x5]
  433ed5:	mov    edi,edi
  433ed7:	call   0x51ce9021
  433edc:	hlt    
  433edd:	xor    eax,edx
  433edf:	mov    esi,0x997284
  433ee4:	xor    cl,dl
  433ee6:	mov    esi,eax
  433ee8:	hlt    
  433ee9:	into   
  433eea:	inc    ebp
  433eeb:	scas   eax,DWORD PTR es:[edi]
  433eec:	mov    ebp,ecx
  433eee:	cld    
  433eef:	add    dl,cl
  433ef1:	add    dl,al
  433ef3:	inc    ebp
  433ef4:	shr    DWORD PTR [ebx],0x4d
  433ef7:	xor    edi,DWORD PTR [ebx]
  433ef9:	mov    DWORD PTR [edi],ecx
  433efb:	clc    
  433efc:	dec    esi
  433efd:	inc    ebp
  433efe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f04:	ret    0xc6ca
  433f07:	mov    BYTE PTR [ebp-0x32],0x53
  433f0b:	scas   eax,DWORD PTR es:[edi]
  433f0c:	inc    ebp
  433f0d:	jmp    0x433f46
  433f0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f16:	pop    ebx
  433f17:	xor    ecx,DWORD PTR [ebp+0x3]
  433f1a:	mov    eax,DWORD PTR [ebx]
  433f1c:	clc    
  433f1d:	test   edx,ecx
  433f1f:	mov    ecx,esi
  433f21:	cld    
  433f22:	call   0x8ab7846c
  433f27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433f2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433f33:	fdiv   QWORD PTR [ebx]
  433f35:	retf   0xce89
  433f38:	in     al,0xc1
  433f3a:	inc    ebp
  433f3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433f41:	into   
  433f42:	mov    dh,0xc1
  433f45:	call   0x8c1784ce
  433f4a:	(bad)  
  433f4b:	cld    
  433f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433f4f:	xor    eax,ecx
  433f51:	lea    eax,[ebp+0x8]
  433f54:	mov    esi,DWORD PTR [edx-0x4]
  433f57:	add    dl,al
  433f59:	inc    ebp
  433f5a:	mov    esp,0x32d8998b
  433f5f:	dec    ebp
  433f60:	mov    esi,DWORD PTR [ebx]
  433f62:	cld    
  433f63:	xor    eax,edx
  433f65:	sub    esp,DWORD PTR [edi-0x75]
  433f68:	int    0xec
  433f6a:	sub    ecx,eax
  433f6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433f72:	mov    esi,esp
  433f74:	call   0x34178cfd
  433f79:	inc    DWORD PTR [ebx]
  433f7b:	mov    edi,DWORD PTR [ebx]
  433f7d:	cld    
  433f7e:	jne    0x433fcd
  433f80:	mov    esi,DWORD PTR [ebx]
  433f82:	aam    0x8d
  433f84:	dec    ebp
  433f85:	or     BYTE PTR [ebx],dh
  433f87:	jb     0x433f8c
  433f89:	add    BYTE PTR [edi+0x45],bl
  433f8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433f93:	xor    ebp,esp
  433f95:	xor    eax,edi
  433f97:	sub    edi,esp
  433f99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433f9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433fa6:	inc    ebp
  433fa7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433fad:	clc    
  433fae:	mov    eax,edi
  433fb0:	nop
  433fb1:	fadd   QWORD PTR [eax]
  433fb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433fb9:	jmp    0x433f44
  433fbb:	mov    eax,DWORD PTR [ecx]
  433fbd:	fadd   DWORD PTR [eax]
  433fbf:	inc    ebp
  433fc0:	or     DWORD PTR [ebx],esi
  433fc2:	dec    eax
  433fc3:	add    edx,DWORD PTR [ebx-0x2d]
  433fc6:	dec    ebp
  433fc7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433fcd:	inc    ebp
  433fce:	push   ecx
  433fcf:	mov    dl,BYTE PTR [ecx-0xd]
  433fd2:	xor    ecx,DWORD PTR [ebp-0x45]
  433fd5:	(bad)  
  433fd7:	rol    BYTE PTR [eax],0xc1
  433fda:	ret    
  433fdb:	inc    ebp
  433fdc:	inc    ebp
  433fdd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433fe3:	xor    eax,ebx
  433fe5:	add    eax,DWORD PTR [ebp+0x23]
  433fe8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433fee:	cmp    edi,0xc
  433ff1:	dec    ebp
  433ff2:	inc    ebp
  433ff3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ff9:	inc    ebp
  433ffa:	mov    esi,DWORD PTR [ebx]
  433ffc:	clc    
  433ffd:	lea    eax,[ebp+0x45725407]
  434003:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434007:	xor    edi,DWORD PTR [eax]
  434009:	mov    ecx,0xff8b8d4d
  43400e:	push   esp
  43400f:	enter  0x4df7,0x23
  434013:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434019:	mov    eax,DWORD PTR [ebx]
  43401b:	loopne 0x434008
  43401d:	ret    0xc68b
  434020:	push   esp
  434021:	enter  0x9745,0x8b
  434025:	inc    ebp
  434026:	cld    
  434027:	mov    eax,edi
  434029:	clc    
  43402a:	ret    
  43402b:	ret    0xc645
  43402e:	mov    esi,DWORD PTR [ebx]
  434030:	cld    
  434031:	pop    esi
  434032:	mov    ebx,0x83458bc3
  434038:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43403c:	dec    ebp
  43403d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  434045:	clc    
  434046:	fcom   DWORD PTR [ebp+0x45]
  434049:	mov    edi,DWORD PTR [eax]
  43404b:	adc    al,0x9c
  43404d:	inc    ebp
  43404e:	(bad)  
  43404f:	mov    ebx,eax
  434051:	adc    al,0x85
  434053:	cmp    al,0x1
  434056:	inc    ebp
  434057:	add    BYTE PTR [edx],bh
  434059:	dec    ebp
  43405a:	pushf  
  43405b:	mov    ebp,ecx
  43405d:	mov    eax,DWORD PTR [ebx]
  43405f:	nop
  434060:	add    BYTE PTR [eax],al
  434062:	inc    ebp
  434063:	mov    esi,DWORD PTR [ebx]
  434065:	add    eax,DWORD PTR [ebx]
  434067:	cmp    al,0x89
  434069:	mov    esp,esi
  43406b:	clc    
  43406c:	inc    ebp
  43406d:	inc    ebp
  43406e:	add    edx,DWORD PTR [esi+0xc]
  434071:	mov    edi,0x7ff0845
  434076:	in     al,dx
  434077:	(bad)  
  434078:	jne    0x434013
  43407a:	mov    esi,DWORD PTR [edx]
  43407c:	clc    
  43407d:	add    ebp,DWORD PTR [esi]
  43407f:	mov    edi,edi
  434081:	in     al,dx
  434082:	mov    DWORD PTR [ebp-0x10],eax
  434085:	xor    eax,DWORD PTR [ebp+0x3]
  434088:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434090:	(bad)  
  434091:	push   eax
  434092:	ret    
  434093:	call   0xd4ffca25
  434098:	call   0xffcf38e2
  43409d:	cmp    BYTE PTR [ebp+0x4d],al
  4340a0:	test   DWORD PTR [eax+0x74],ecx
  4340a3:	inc    ecx
  4340a4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4340aa:	ret    
  4340ab:	inc    eax
  4340ac:	dec    DWORD PTR [ebx+0x4945f8f0]
  4340b2:	push   eax
  4340b3:	dec    eax
  4340b4:	test   al,0xd0
  4340b6:	dec    eax
  4340b8:	mov    eax,DWORD PTR [ebp-0x14]
  4340bb:	mov    eax,DWORD PTR [ebp+0x38]
  4340be:	mov    eax,ecx
  4340c0:	fadd   DWORD PTR [ebx]
  4340c2:	dec    ebp
  4340c3:	inc    eax
  4340c4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4340ca:	inc    ebp
  4340cb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4340d1:	fadd   QWORD PTR [ebx]
  4340d3:	inc    ebp
  4340d4:	or     al,0x33
  4340d6:	dec    ebp
  4340d7:	add    edi,DWORD PTR [ebx]
  4340d9:	mov    DWORD PTR [edx-0x28],esi
  4340dc:	mov    eax,DWORD PTR [ebp-0x10]
  4340df:	mov    eax,DWORD PTR [eax+0x10]
  4340e2:	mov    eax,edi
  4340e4:	lock ret 
  4340e6:	inc    ecx
  4340e7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4340ed:	fsubr  st,st(5)
  4340ef:	test   DWORD PTR [eax],eax
  4340f1:	clc    
  4340f2:	push   0x45
  4340f4:	(bad)  
  4340f5:	cmp    ebp,esp
  4340f7:	pushf  
  4340f8:	inc    ebp
  4340f9:	(bad)  
  4340fa:	push   eax
  4340fb:	fsub   DWORD PTR [eax-0x7b]
  4340fe:	(bad)  
  4340ff:	clc    
  434100:	mov    eax,0xf8008584
  434105:	mov    eax,DWORD PTR [ebp-0x4]
  434108:	mov    edi,0x4585c3cc
  43410e:	clc    
  43410f:	mov    eax,DWORD PTR [ebp+0x14]
  434112:	cmp    BYTE PTR [ebp-0x64],al
  434115:	mov    edi,eax
  434117:	in     al,dx
  434118:	les    esi,FWORD PTR [ebp-0x7b]
  43411b:	mov    edi,eax
  43411d:	or     al,0x4d
  43411f:	dec    ebp
  434120:	mov    eax,ebp
  434122:	in     al,0xf2
  434124:	dec    ebp
  434125:	dec    DWORD PTR [ecx+0x4dc7e045]
  43412b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434131:	inc    ebp
  434132:	mov    DWORD PTR [ebx],esi
  434134:	fadd   QWORD PTR [ebx]
  434136:	dec    ebp
  434137:	push   eax
  434138:	xor    eax,DWORD PTR [ebp+0x3]
  43413b:	push   eax
  43413c:	mov    DWORD PTR [eax+ebx*8],ebx
  43413f:	push   esi
  434141:	mov    eax,DWORD PTR [eax]
  434143:	lock cmp eax,0xf84e85c0
  434149:	inc    ebp
  43414a:	test   BYTE PTR [ebx],dh
  43414c:	add    DWORD PTR [ebx],eax
  43414e:	add    BYTE PTR [eax+0x4d],dl
  434151:	jne    0x434186
  434153:	lea    ecx,[ebx-0x7617fc44]
  434159:	div    ah
  43415b:	inc    DWORD PTR [ebp+0x45]
  43415e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434164:	jb     0x4340f1
  434166:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43416d:	mov    ecx,DWORD PTR [ebp-0x10]
  434170:	xor    ecx,DWORD PTR [ebp+0x3]
  434173:	mov    edi,DWORD PTR [ebx]
  434175:	adc    BYTE PTR [ebp+0x41],dh
  434178:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43417e:	ret    
  43417f:	push   ss
  434180:	push   0x45
  434182:	lea    ecx,[ebx+0x4de80cb0]
  434188:	sti    
  434189:	add    edi,edi
  43418b:	or     BYTE PTR [ebp+0x4d],al
  43418e:	mov    ebp,DWORD PTR [ebx]
  434190:	xor    ebp,ecx
  434192:	mov    al,BYTE PTR [edx]
  434194:	add    eax,0xc7200
  434199:	jne    0x4341e8
  43419b:	lea    esi,[ebx]
  43419d:	mov    al,0xf
  43419f:	call   0xf3864
  4341a4:	shl    DWORD PTR [esi],0x84
  4341a7:	pushf  
  4341a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4341ae:	mov    edi,DWORD PTR [ecx]
  4341b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4341b7:	test   DWORD PTR [eax],eax
  4341b9:	clc    
  4341ba:	dec    ebp
  4341bb:	inc    ebp
  4341bc:	xor    edi,DWORD PTR [ebx]
  4341be:	setl   al
  4341c1:	(bad)  
  4341c2:	retf   
  4341c3:	rol    cl,1
  4341c5:	dec    ebp
  4341c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4341cc:	inc    ebp
  4341cd:	lea    ecx,[ebx-0x75b2cc38]
  4341d3:	lea    eax,ds:0x4d72c4
  4341d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4341dc:	xor    ecx,edi
  4341de:	bswap  ebx
  4341e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4341e4:	rol    DWORD PTR [ecx],0x84
  4341e7:	add    BYTE PTR [ecx],al
  4341e9:	cmp    BYTE PTR [eax],al
  4341eb:	pushf  
  4341ec:	inc    ebp
  4341ed:	jnp    0x8a4375f0
  4341f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4341f9:	lock dec ebp
  4341fb:	retf   
  4341fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4341ff:	mov    eax,eax
  434201:	fmul   st,st(3)
  434203:	test   ecx,0x1998484
  434209:	xor    al,BYTE PTR [eax]
  43420b:	mov    DWORD PTR [ebp-0x28],eax
  43420e:	mov    eax,DWORD PTR [ebp+0x33]
  434211:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434217:	ret    
  434218:	add    al,cl
  43421a:	dec    ebp
  43421b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434221:	add    ecx,DWORD PTR ds:0xc7250
  434227:	inc    ebp
  434228:	rcl    DWORD PTR [eax+0x4d],0x2b
  43422c:	mov    edi,edi
  43422e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434234:	jb     0x4341fd
  434236:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43423d:	mov    esi,DWORD PTR [ebx]
  43423f:	cld    
  434240:	mov    cl,bh
  434242:	or     eax,0x372b6
  434247:	cmp    ecx,eax
  434249:	jne    0x4342c6
  43424f:	mov    eax,DWORD PTR [ebp-0x20]
  434252:	mov    eax,DWORD PTR [eax]
  434254:	xor    eax,edi
  434256:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43425d:	mov    ecx,DWORD PTR [ebp-0x4]
  434260:	mov    ecx,edi
  434262:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434268:	jb     0x434279
  43426a:	add    BYTE PTR [edi-0x3f],dl
  43426d:	add    BYTE PTR [ebp-0x75],cl
  434270:	mov    esi,eax
  434272:	xor    eax,DWORD PTR [eax]
  434274:	mov    al,bh
  434276:	or     eax,0x497284
  43427b:	xor    al,cl
  43427d:	mov    ecx,DWORD PTR [ebp-0x4]
  434280:	mov    ecx,edi
  434282:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434288:	jb     0x434299
  43428a:	add    BYTE PTR [edi],dh
  43428c:	enter  0x8500,0x8b
  434290:	add    ah,bl
  434292:	add    BYTE PTR [eax],al
  434294:	inc    ebp
  434295:	(bad)  
  434296:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43429d:	mov    esi,DWORD PTR [edx-0x4]
  4342a0:	add    bh,cl
  4342a2:	dec    ebp
  4342a3:	mov    dh,0x8b
  4342a5:	add    esi,DWORD PTR [ebx]
  4342a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4342ad:	add    BYTE PTR [eax],al
  4342af:	mov    eax,ecx
  4342b1:	loopne 0x434300
  4342b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4342b9:	dec    ecx
  4342ba:	or     eax,0x8b7232
  4342bf:	in     al,0xc1
  4342c1:	or     DWORD PTR [ebp-0x31],ecx
  4342c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4342cb:	xor    dh,BYTE PTR [edx-0x75]
  4342ce:	add    al,dh
  4342d0:	enter  0x4f09,0xcf
  4342d4:	inc    ebp
  4342d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4342db:	or     al,BYTE PTR ds:0xe4728b
  4342e1:	or     DWORD PTR [ebp-0x31],ecx
  4342e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4342eb:	cmp    dh,BYTE PTR [edx+0xf]
  4342ee:	add    bl,dl
  4342f0:	rol    DWORD PTR [eax],0x4d
  4342f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4342f9:	(bad)  
  4342fa:	or     eax,0x497284
  4342ff:	xor    al,cl
  434301:	mov    ecx,DWORD PTR [ebp-0x20]
  434304:	mov    ecx,DWORD PTR [ecx]
  434306:	xor    ecx,edi
  434308:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43430f:	xor    cl,al
  434311:	mov    ecx,DWORD PTR [edi]
  434313:	fadd   QWORD PTR [ebp+0x9]
  434316:	call   0xffd03dea
  43431b:	dec    ecx
  43431c:	dec    ebp
  43431d:	xor    bh,BYTE PTR [ebx]
  43431f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434323:	loopne 0x434321
  434325:	or     edi,eax
  434327:	iret   
  434328:	ret    
  434329:	mov    WORD PTR [ebp+0x4d],es
  43432c:	mov    esi,DWORD PTR [edx]
  43432e:	call   0x84530a6d
  434333:	(bad)  
  434334:	cdq    
  434335:	add    BYTE PTR [edx],dh
  434337:	mov    esi,DWORD PTR [ebx]
  434339:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43433f:	test   BYTE PTR [ebx],dh
  434341:	dec    ecx
  434342:	add    esi,DWORD PTR [edx]
  434344:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43434a:	dec    edi
  43434c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434353:	xor    al,BYTE PTR [ebx]
  434355:	mov    edi,DWORD PTR [ebx]
  434357:	in     al,0x75
  434359:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43435f:	dec    ecx
  434360:	xor    esi,DWORD PTR [edx]
  434362:	lea    ecx,[edx]
  434364:	or     BYTE PTR [ebx+0x900f072],cl
  43436a:	ja     0x43433b
  43436c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434373:	cmp    ch,al
  434375:	jne    0x43436a
  434377:	mov    edi,edi
  434379:	fadd   QWORD PTR [ebp+0x0]
  43437c:	mov    eax,edi
  43437e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434385:	mov    edx,DWORD PTR [ebx]
  434387:	in     al,0x45
  434389:	or     DWORD PTR [ebx],esi
  43438b:	iret   
  43438c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434393:	xor    dl,BYTE PTR [eax-0x75]
  434396:	sbb    al,0xe0
  434398:	dec    DWORD PTR [ecx]
  43439a:	mov    ecx,edi
  43439c:	in     al,dx
  43439d:	mov    eax,es
  43439f:	dec    ecx
  4343a0:	mov    DWORD PTR [edx],esi
  4343a2:	fmul   QWORD PTR [edx]
  4343a4:	jne    0x434331
  4343a6:	(bad)  
  4343a7:	(bad)  
  4343a9:	or     DWORD PTR [ebp-0x31],eax
  4343ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4343b3:	cmp    bh,bh
  4343b5:	jne    0x4343fc
  4343b7:	lea    ecx,[ebx-0x38372750]
  4343bd:	inc    ebx
  4343bf:	mov    eax,ecx
  4343c1:	mov    eax,0xa00c111
  4343c6:	jne    0x43440d
  4343c8:	mov    esi,DWORD PTR [ebx]
  4343ca:	test   al,0x3
  4343cc:	inc    ebp
  4343cd:	mov    DWORD PTR [eax-0xc],edx
  4343d0:	loop   0x434417
  4343d2:	push   DWORD PTR [ebx]
  4343d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4343da:	add    DWORD PTR [eax],eax
  4343dc:	mov    eax,edi
  4343de:	lods   al,BYTE PTR ds:[esi]
  4343df:	dec    ebp
  4343e0:	inc    ebp
  4343e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4343e7:	retf   
  4343e8:	mov    edx,ecx
  4343ea:	adc    al,0x84
  4343ec:	(bad)  
  4343ed:	std    
  4343ee:	ret    
  4343ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4343f5:	hlt    
  4343f6:	rol    edi,0x82
  4343f9:	ret    
  4343fa:	cld    
  4343fb:	enter  0x11ff,0x45
  4343ff:	inc    ebp
  434400:	pop    edi
  434401:	mov    ebx,DWORD PTR [ebx+0x14]
  434404:	ret    0xc7
  434407:	test   BYTE PTR [ebx+0x45325199],cl
  43440d:	jmp    0x43439a
  43440f:	push   0x8
  434411:	call   DWORD PTR [esi]
  434413:	in     al,dx
  434414:	add    BYTE PTR [ebp+0x1],0x50
  434418:	add    bh,ah
  43441a:	add    bh,bh
  43441c:	icebp  
  43441d:	mov    ecx,DWORD PTR [eax]
  43441f:	cld    
  434420:	pop    es
  434421:	dec    ebp
  434422:	shl    DWORD PTR [ebx],0x72
  434425:	add    eax,DWORD PTR [eax]
  434427:	cmp    edx,ecx
  434429:	je     0x43443b
  43442b:	mov    esi,DWORD PTR [ebp-0x4]
  43442e:	inc    edi
  434430:	or     al,0xc3
  434432:	jmp    FWORD PTR [edx-0x18]
  434435:	(bad)  
  434436:	sti    
  434437:	cwde   
  434438:	(bad)  
  434439:	call   0xffa13d44
  43443e:	or     al,0x45
  434440:	push   ebp
  434441:	sub    esp,0x18
  434444:	push   ebx
  434445:	inc    ebp
  434446:	mov    edi,edi
  434448:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43444f:	test   al,0x51
  434451:	inc    ebp
  434452:	push   ecx
  434453:	push   eax
  434454:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43445a:	add    ah,bh
  43445c:	(bad)  
  43445d:	dec    ebp
  43445e:	add    DWORD PTR [ebx],esi
  434460:	inc    ebp
  434461:	add    ecx,DWORD PTR [ebx+0x74943b]
  434467:	push   0xffffff8b
  434469:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43446f:	add    eax,DWORD PTR [ecx]
  434471:	or     BYTE PTR [eax],al
  434473:	call   0xff853c78
  434478:	mov    eax,DWORD PTR [ebp+0x14]
  43447b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434481:	inc    ebp
  434482:	dec    ecx
  434483:	add    ebp,DWORD PTR [edx+0x14]
  434486:	push   0x8b3045
  43448b:	call   0x33ad9200
  434490:	inc    DWORD PTR [ebx]
  434492:	mov    DWORD PTR [edi],ecx
  434494:	mov    eax,ecx
  434496:	or     BYTE PTR [ebp-0x3d],cl
  434499:	cmp    eax,edi
  43449b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4344a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4344a6:	adc    al,0xc9
  4344a8:	inc    ebp
  4344a9:	adc    BYTE PTR [eax+0x55],dl
  4344ac:	jne    0x43449a
  4344ae:	call   0xff54443e
  4344b3:	dec    ebp
  4344b4:	inc    ebp
  4344b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4344bb:	add    BYTE PTR [ebx],bh
  4344bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4344c1:	push   ecx
  4344c2:	or     al,0x51
  4344c4:	dec    ebp
  4344c5:	xor    DWORD PTR [ebx],0xf320399
  4344cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4344ce:	mov    edi,edi
  4344d0:	pop    edi
  4344d1:	adc    BYTE PTR [ebx+0x75],bl
  4344d4:	ret    0x50
  4344d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4344db:	(bad)  
  4344dc:	clc    
  4344dd:	mov    esp,ebp
  4344df:	pop    ecx
  4344e0:	mov    ecx,0xf80085c2
  4344e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4344e8:	push   esi
  4344e9:	push   esi
  4344ea:	(bad)  
  4344eb:	lock add eax,DWORD PTR [ebp+0x44]
  4344ef:	mov    edx,DWORD PTR [eax]
  4344f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4344f5:	or     BYTE PTR [ecx+0x7],dl
  4344f8:	push   ecx
  4344f9:	ret    
  4344fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434500:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434506:	or     al,0x80
  434508:	jge    0x43450b
  43450a:	mov    DWORD PTR [eax],eax
  43450c:	and    al,0x8
  43450e:	cmp    DWORD PTR [ebp+0x10],eax
  434511:	mov    edx,DWORD PTR [esi]
  434513:	xchg   esp,eax
  434514:	dec    esp
  434515:	add    BYTE PTR [eax],dl
  434517:	mov    ecx,edx
  434519:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43451d:	dec    ebp
  43451e:	into   
  43451f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434525:	mov    edx,DWORD PTR [eax+0x14]
  434528:	das    
  434529:	add    al,0x45
  43452b:	add    BYTE PTR [ebp+0x0],dh
  43452e:	mov    edi,edi
  434530:	and    al,0x50
  434532:	mov    eax,DWORD PTR [eax]
  434534:	and    al,0xd1
  434536:	xor    eax,DWORD PTR [esi]
  434538:	lea    eax,[ebp+0x8]
  43453b:	xor    esi,DWORD PTR [edx+0x3]
  43453e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434544:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43454a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434554:	cmp    edi,edi
  434556:	pushf  
  434557:	mov    edi,edi
  434559:	or     BYTE PTR [esi+ecx*1],cl
  43455c:	jne    0x434521
  43455e:	call   0xc452a
  434563:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434567:	mov    ebx,DWORD PTR [eax]
  434569:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43456d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434575:	pop    esi
  434576:	(bad)  
  434577:	leave  
  434578:	call   DWORD PTR [eax]
  43457a:	call   DWORD PTR [ebp+0x24]
  43457d:	in     al,dx
  43457e:	jmp    esp
  434580:	and    al,0x83
  434582:	call   0xff7a4397
  434587:	pushf  
  434588:	inc    esp
  434589:	mov    DWORD PTR [esp],ecx
  43458c:	pop    esi
  43458d:	push   edi
  43458e:	in     eax,0x41
  434590:	ret    0x89
  434593:	and    al,0xe
  434595:	mov    edi,DWORD PTR [eax]
  434597:	and    al,0x75
  434599:	mov    edx,0x7750885
  43459e:	or     dl,bh
  4345a0:	call   FWORD PTR [ecx+0x3243224]
  4345a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4345ac:	dec    DWORD PTR [esp]
  4345af:	jl     0x43453c
  4345b1:	adc    al,0xc
  4345b3:	dec    ebp
  4345b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4345b7:	mov    ecx,DWORD PTR [eax]
  4345b9:	and    al,0x10
  4345bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4345c2:	test   DWORD PTR [edi],ecx
  4345c4:	jge    0x434590
  4345c6:	push   0x8908ff4c
  4345cb:	jmp    0x4345f1
  4345cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4345d1:	dec    esp
  4345d2:	pop    ebp
  4345d3:	ret    0x8999
  4345d6:	push   0x74f89cf8
  4345db:	jmp    0x434651
  4345dd:	mov    edi,0x104fd55f
  4345e2:	add    BYTE PTR [eax],dh
  4345e4:	adc    BYTE PTR ds:[eax],al
  4345e7:	or     edx,DWORD PTR gs:[eax]
  4345ea:	add    BYTE PTR [ecx],ch
  4345ec:	add    eax,0x35270010
  4345f1:	adc    BYTE PTR [eax],al
  4345f3:	std    
  4345f4:	dec    eax
  4345f5:	adc    BYTE PTR [eax],al
  4345f7:	(bad)  
  4345f8:	outs   dx,BYTE PTR ds:[esi]
  4345f9:	adc    BYTE PTR [eax],al
  4345fb:	sahf   
  4345fc:	xor    DWORD PTR [eax],edx
  4345fe:	add    BYTE PTR [esi+0x0],al
  434601:	adc    BYTE PTR [eax],al
  434603:	fs jae 0x434616
  434606:	add    BYTE PTR [ebx-0x20ffefac],bh
  43460c:	inc    ebp
  43460d:	inc    ebx
  43460e:	add    bl,ah
  434610:	inc    ebp
  434611:	inc    ebx
  434612:	add    bh,ah
  434614:	inc    ebp
  434615:	inc    ebx
  434616:	add    bl,ch
  434618:	inc    ebp
  434619:	inc    ebx
  43461a:	add    bh,ch
  43461c:	inc    ebp
  43461d:	inc    ebx
  43461e:	add    bl,dh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    bh,dh
  434624:	inc    ebp
  434625:	inc    ebx
  434626:	add    bl,bh
  434628:	inc    ebp
  434629:	inc    ebx
  43462a:	add    bh,bh
  43462c:	inc    ebp
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [ebx],al
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [edi],al
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43463d:	adc    BYTE PTR [eax],al
  43463f:	adc    dh,BYTE PTR [ecx+0x10]
  434642:	add    BYTE PTR [edi+0x2c001065],al
  434648:	push   0x5aa20010
  43464d:	adc    BYTE PTR [eax],al
  43464f:	rol    DWORD PTR [eax+edx*1],0x0
  434653:	int    0x6f
  434655:	adc    BYTE PTR [eax],al
  434657:	aaa    
  434658:	inc    esi
  434659:	inc    ebx
  43465a:	add    BYTE PTR [ebx],bh
  43465c:	inc    esi
  43465d:	inc    ebx
  43465e:	add    BYTE PTR [edi],bh
  434660:	inc    esi
  434661:	inc    ebx
  434662:	add    BYTE PTR [ebx+0x46],al
  434665:	inc    ebx
  434666:	add    BYTE PTR [edi+0x46],al
  434669:	inc    ebx
  43466a:	add    BYTE PTR [ebx+0x46],cl
  43466d:	inc    ebx
  43466e:	add    BYTE PTR [edi+0x46],cl
  434671:	inc    ebx
  434672:	add    BYTE PTR [ebx+0x46],dl
  434675:	inc    ebx
  434676:	add    BYTE PTR [ebx+0x54001005],dh
  43467c:	push   ebp
  43467d:	adc    BYTE PTR [eax],al
  43467f:	sbb    bh,BYTE PTR [eax]
  434681:	adc    BYTE PTR [eax],al
  434683:	mov    edx,0x2f001013
  434688:	dec    edx
  434689:	adc    BYTE PTR [eax],al
  43468b:	inc    ecx
  43468c:	or     edx,DWORD PTR [eax]
  43468e:	add    BYTE PTR [ebx+0x19],ch
  434691:	adc    BYTE PTR [eax],al
  434693:	mov    esp,0x7700103e
  434698:	inc    esi
  434699:	inc    ebx
  43469a:	add    BYTE PTR [ebx+0x46],bh
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [edi+0x46],bh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346a8:	inc    esi
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [ebx-0x70ffbcba],cl
  4346b0:	inc    esi
  4346b1:	inc    ebx
  4346b2:	add    BYTE PTR [ebx-0x50ffbcba],dl
  4346b8:	push   0x10
  4346ba:	add    al,bl
  4346bc:	imul   edx,DWORD PTR [eax],0x0
  4346bf:	sahf   
  4346c0:	push   ss
  4346c1:	adc    BYTE PTR [eax],al
  4346c3:	jle    0x4346ff
  4346c5:	adc    BYTE PTR [eax],al
  4346c7:	jbe    0x4346de
  4346c9:	adc    BYTE PTR [eax],al
  4346cb:	cmp    DWORD PTR [edi+0x10],edx
  4346ce:	add    BYTE PTR [ebp+0x59001066],bl
  4346d4:	adc    al,0x10
  4346d6:	add    BYTE PTR [edi-0x44ffbcba],dh
  4346dc:	inc    esi
  4346dd:	inc    ebx
  4346de:	add    BYTE PTR [edi-0x3cffbcba],bh
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4346fc:	inc    ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	dec    ebx
  434700:	dec    eax
  434701:	adc    BYTE PTR [eax],al
  434703:	dec    ebx
  434704:	popa   
  434705:	adc    BYTE PTR [eax],al
  434707:	adc    al,BYTE PTR [eax+edx*1]
  43470a:	add    dh,dl
  43470c:	push   ds
  43470d:	adc    BYTE PTR [eax],al
  43470f:	hlt    
  434710:	pop    ds
  434711:	adc    BYTE PTR [eax],al
  434713:	dec    ecx
  434714:	pop    eax
  434715:	adc    BYTE PTR [eax],al
  434717:	test   DWORD PTR [esi+0x43],0x4346fb00
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [ebp+0x57],cl
  434739:	xor    DWORD PTR [ecx],esi
  43473b:	cmp    BYTE PTR [edi+ebx*2],dh
  43473e:	push   ecx
  43473f:	add    BYTE PTR [edx+0x33],dl
  434742:	push   esi
  434743:	xor    eax,0x3849515f
  434748:	xor    al,0x59
  43474a:	push   edi
  43474b:	add    BYTE PTR [ebx+0x54],al
  43474e:	inc    ebp
  43474f:	pop    edi
  434750:	dec    ebx
  434751:	push   edx
  434752:	push   ebp
  434753:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434758:	pop    edi
  434759:	aaa    
  43475a:	xor    al,0x32
  43475c:	xor    BYTE PTR [edi+0x5f],al
  43475f:	inc    ebx
  434760:	pop    edx
  434761:	add    BYTE PTR [edi+0x4e],al
  434764:	cmp    DWORD PTR [edi+0x47],ebx
  434767:	push   ebx
  434768:	cmp    DWORD PTR [edi+0x4e],edx
  43476b:	add    BYTE PTR [ecx+0x44],dl
  43476e:	cmp    BYTE PTR [edi+0x33],bl
  434771:	cmp    BYTE PTR [eax],dh
  434773:	pop    edi
  434774:	inc    ecx
  434775:	dec    edi
  434776:	inc    esi
  434777:	push   eax
  434778:	add    BYTE PTR [edx+0x43],dl
  43477b:	xor    eax,0x41305f30
  434780:	xor    BYTE PTR [esi+0x5f],al
  434783:	inc    ebx
  434784:	xor    dh,BYTE PTR [edx]
  434786:	xor    eax,0x36545200
  43478b:	xor    al,0x5f
  43478d:	dec    esi
  43478e:	xor    esi,DWORD PTR [edx]
  434790:	add    BYTE PTR ss:[eax+0x4b],cl
  434794:	inc    ebx
  434795:	pop    edi
  434796:	ss xor al,0x34
  434799:	pop    edi
  43479a:	inc    ecx
  43479b:	push   esp
  43479c:	dec    edi
  43479d:	add    BYTE PTR [esi+0x52],dl
  4347a0:	push   esi
  4347a1:	pop    edi
  4347a2:	inc    esi
  4347a3:	push   ecx
  4347a4:	push   ebp
  4347a5:	push   edx
  4347a6:	dec    eax
  4347a7:	add    BYTE PTR [esi+0x41],cl
  4347aa:	inc    edx
  4347ab:	pop    edi
  4347ac:	xor    DWORD PTR [ecx],edi
  4347ae:	push   edi
  4347af:	pop    edi
  4347b0:	pop    edx
  4347b1:	xor    eax,0x47003934
  4347b6:	push   edx
  4347b7:	push   ebp
  4347b8:	pop    edi
  4347b9:	xor    al,BYTE PTR [edx+0x30]
  4347bc:	push   ebx
  4347bd:	dec    esi
  4347be:	xor    eax,0x38564300
  4347c3:	xor    al,0x5f
  4347c5:	xor    bl,BYTE PTR [eax+0x36]
  4347c8:	inc    edx
  4347c9:	pop    edi
  4347ca:	pop    ecx
  4347cb:	xor    al,BYTE PTR [ecx+0x0]
  4347ce:	push   edi
  4347cf:	dec    ecx
  4347d0:	push   ebx
  4347d1:	xor    DWORD PTR [eax],edi
  4347d3:	pop    edi
  4347d4:	push   ecx
  4347d5:	xor    BYTE PTR [edx+0x5f],cl
  4347d8:	inc    ecx
  4347d9:	add    BYTE PTR ss:[edx+0x45],al
  4347dd:	push   edi
  4347de:	cmp    DWORD PTR [eax],edi
  4347e0:	pop    edi
  4347e1:	inc    edx
  4347e2:	xor    eax,0x36520057
  4347e7:	aaa    
  4347e8:	xor    BYTE PTR [edi],dh
  4347ea:	pop    edi
  4347eb:	inc    edx
  4347ec:	cmp    DWORD PTR [edi+0x52],eax
  4347ef:	dec    esp
  4347f0:	pop    edi
  4347f1:	dec    ebx
  4347f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4347f6:	pop    edi
  4347f7:	push   ebp
  4347f8:	push   ebx
  4347f9:	aaa    
  4347fa:	dec    ebp
  4347fb:	pop    edi
  4347fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4347ff:	dec    ebx
  434800:	dec    edx
  434801:	add    BYTE PTR [edi+0x47],al
  434804:	xor    eax,0x534e5f32
  434809:	push   esp
  43480a:	pop    edi
  43480b:	push   esp
  43480c:	inc    edx
  43480d:	inc    esi
  43480e:	inc    esp
  43480f:	add    BYTE PTR [ebp+0x4e],al
  434812:	inc    edi
  434813:	cmp    DWORD PTR [edi+0x57],ebx
  434816:	push   eax
  434817:	push   ecx
  434818:	pop    edi
  434819:	dec    edi
  43481a:	inc    ebx
  43481b:	push   edi
  43481c:	pop    edi
  43481d:	inc    edi
  43481e:	add    BYTE PTR [edi+0x45],dl
  434821:	inc    esi
  434822:	pop    edi
  434823:	push   edx
  434824:	inc    edx
  434825:	pop    eax
  434826:	inc    edi
  434827:	ss pop edi
  434829:	push   esi
  43482a:	inc    ebx
  43482b:	dec    esi
  43482c:	inc    esp
  43482d:	add    BYTE PTR [edi+0x4d],cl
  434830:	inc    edi
  434831:	xor    ebx,DWORD PTR [edi+0x34]
  434834:	dec    esi
  434835:	pop    edx
  434836:	cmp    BYTE PTR [edi+0x58],bl
  434839:	cmp    BYTE PTR [eax],al
  43483b:	push   edx
  43483c:	pop    eax
  43483d:	push   ecx
  43483e:	pop    edi
  43483f:	dec    esp
  434840:	push   edx
  434841:	dec    ecx
  434842:	dec    edi
  434843:	inc    esp
  434844:	pop    edi
  434845:	dec    edi
  434846:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43484a:	push   eax
  43484b:	inc    ebp
  43484c:	pop    edi
  43484d:	xor    eax,0x565f3945
  434852:	add    BYTE PTR [edi+0x4e],al
  434855:	push   esi
  434856:	pop    edi
  434857:	inc    edi
  434858:	push   esp
  434859:	dec    eax
  43485a:	xor    dh,BYTE PTR [ecx]
  43485c:	pop    edi
  43485d:	dec    edi
  43485e:	xor    eax,DWORD PTR ss:[eax]
  434861:	inc    esp
  434862:	inc    ebp
  434863:	dec    ecx
  434864:	pop    edi
  434865:	push   edx
  434866:	dec    eax
  434867:	xor    al,0x48
  434869:	dec    ecx
  43486a:	ss pop edi
  43486c:	aaa    
  43486d:	aaa    
  43486e:	dec    ecx
  43486f:	dec    ebp
  434870:	add    BYTE PTR [eax+0x54],cl
  434873:	ss pop edi
  434875:	inc    esi
  434876:	inc    edx
  434877:	xor    dh,BYTE PTR [eax+eax*1]
  43487a:	dec    esi
  43487b:	ss dec edx
  43487d:	pop    edi
  43487e:	dec    ecx
  43487f:	dec    esp
  434880:	inc    edi
  434881:	inc    esp
  434882:	dec    eax
  434883:	xor    BYTE PTR [eax],bh
  434885:	xor    eax,0x34004f00
  43488a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43488e:	add    BYTE PTR [edi],dh
  434890:	add    BYTE PTR [eax],dh
  434892:	add    BYTE PTR [edi+0x0],bl
  434895:	inc    esp
  434896:	add    BYTE PTR [edi+0x0],al
  434899:	dec    ebx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [ecx+0x0],al
  43489f:	inc    ebx
  4348a0:	add    BYTE PTR [eax],al
  4348a2:	add    BYTE PTR [edi+0x0],cl
  4348a5:	xor    al,BYTE PTR [eax]
  4348a7:	xor    eax,DWORD PTR [eax]
  4348a9:	pop    edi
  4348aa:	add    BYTE PTR [edi+0x0],dl
  4348ad:	xor    al,BYTE PTR [eax]
  4348af:	dec    edi
  4348b0:	add    BYTE PTR [edi+0x0],bl
  4348b3:	pop    edx
  4348b4:	add    BYTE PTR [eax],al
  4348b6:	add    BYTE PTR [eax+0x0],bl
  4348b9:	dec    esp
  4348ba:	add    BYTE PTR [ecx],bh
  4348bc:	add    BYTE PTR [edi+0x0],bl
  4348bf:	dec    ebx
  4348c0:	add    BYTE PTR [ecx+0x0],al
  4348c3:	dec    edx
  4348c4:	add    BYTE PTR [esi+0x0],al
  4348c7:	xor    DWORD PTR [eax],eax
  4348c9:	xor    al,0x0
  4348cb:	pop    edi
  4348cc:	add    BYTE PTR [eax+0x0],bl
  4348cf:	inc    edi
  4348d0:	add    BYTE PTR [edx+0x0],al
  4348d3:	add    BYTE PTR [eax],al
  4348d5:	push   eax
  4348d6:	add    BYTE PTR [ebx],dh
  4348d8:	add    BYTE PTR [esi+0x0],cl
  4348db:	pop    edi
  4348dc:	add    BYTE PTR [eax+0x0],cl
  4348df:	xor    eax,0x5f005300
  4348e4:	add    BYTE PTR [eax+0x0],cl
  4348e7:	add    BYTE PTR [eax],al
  4348e9:	dec    ebp
  4348ea:	add    BYTE PTR [eax],dh
  4348ec:	add    BYTE PTR [edx+0x0],al
  4348ef:	pop    edi
  4348f0:	add    BYTE PTR [edx+0x0],cl
  4348f3:	pop    eax
  4348f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4348f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4348fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434900:	add    BYTE PTR [ecx+0x0],al
  434903:	xor    eax,DWORD PTR [eax]
  434905:	xor    BYTE PTR [eax],al
  434907:	pop    edi
  434908:	add    BYTE PTR [ecx+0x0],al
  43490b:	pop    edx
  43490c:	add    BYTE PTR [ecx+0x0],dl
  43490f:	pop    edx
  434910:	add    BYTE PTR [ecx],bh
  434912:	add    BYTE PTR [esi],dh
  434914:	add    BYTE PTR [edi+0x0],bl
  434917:	dec    eax
  434918:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43491c:	add    BYTE PTR [eax],al
  43491e:	add    BYTE PTR [ecx+0x0],dl
  434921:	push   edi
  434922:	add    BYTE PTR [ecx+0x0],bl
  434925:	pop    edi
  434926:	add    BYTE PTR [esi+0x0],dl
  434929:	xor    al,0x0
  43492b:	inc    esp
  43492c:	add    BYTE PTR [ecx],dh
  43492e:	add    BYTE PTR [eax],bh
  434930:	add    BYTE PTR [edx],dh
  434932:	add    BYTE PTR [edi+0x0],bl
  434935:	cmp    DWORD PTR [eax],eax
  434937:	push   esp
  434938:	add    BYTE PTR [eax+eax*1+0x0],dl
  43493c:	add    BYTE PTR [esi+0x0],dl
  43493f:	dec    edi
  434940:	add    BYTE PTR [edi+0x0],al
  434943:	add    BYTE PTR ss:[edi+0x0],bl
  434947:	dec    edi
  434948:	add    BYTE PTR [edx+0x0],bl
  43494b:	inc    ebp
  43494c:	add    BYTE PTR [eax],dh
  43494e:	add    BYTE PTR [ebp+0x0],al
  434951:	xor    BYTE PTR [eax],al
  434953:	pop    edi
  434954:	add    BYTE PTR [eax],dh
  434956:	add    BYTE PTR ds:0x4f000000,dh
  43495c:	add    BYTE PTR ds:0x5f005700,dh
  434962:	add    BYTE PTR [edi],dh
  434964:	add    BYTE PTR [ebx+0x0],dl
  434967:	push   ebp
  434968:	add    BYTE PTR [edi+0x0],al
  43496b:	xor    al,0x0
  43496d:	pop    edi
  43496e:	add    BYTE PTR [ecx+0x0],dl
  434971:	inc    esp
  434972:	add    BYTE PTR [eax],al
  434974:	add    BYTE PTR [edx+0x0],dl
  434977:	push   esp
  434978:	add    BYTE PTR ds:0x52005f00,dh
  43497e:	add    BYTE PTR [edi+0x0],dl
  434981:	xor    al,BYTE PTR [eax]
  434983:	xor    al,BYTE PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	xor    BYTE PTR [eax],al
  434989:	pop    edi
  43498a:	add    BYTE PTR [esi],dh
  43498c:	add    BYTE PTR [eax],al
  43498e:	add    BYTE PTR [eax+0x0],cl
  434991:	inc    ebp
  434992:	add    BYTE PTR [eax+eax*1+0x30],cl
  434996:	add    BYTE PTR [edi+0x0],bl
  434999:	dec    edx
  43499a:	add    BYTE PTR [edx],dh
  43499c:	add    BYTE PTR [edi],dh
  43499e:	add    BYTE PTR [ebp+0x0],dl
  4349a1:	add    BYTE PTR ss:[eax],dh
  4349a4:	add    BYTE PTR [eax],al
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	cmp    BYTE PTR [eax],al
  4349ab:	dec    edi
  4349ac:	add    BYTE PTR [ecx],bh
  4349ae:	add    BYTE PTR [edi+0x0],bl
  4349b1:	pop    eax
  4349b2:	add    BYTE PTR [edx+0x0],bl
  4349b5:	dec    esp
  4349b6:	add    BYTE PTR [ebx+0x0],cl
  4349b9:	add    BYTE PTR [eax],al
  4349bb:	dec    ecx
  4349bc:	add    BYTE PTR [ebp+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [eax],al
  4349c2:	add    BYTE PTR [edx+0x53],dl
  4349c5:	inc    esp
  4349c6:	push   ebx
  4349c7:	push   ss
  4349c8:	into   
  4349c9:	cdq    
  4349ca:	imul   ebp,DWORD PTR [esi+0x10],0x69894204
  4349d1:	jb     0x43496c
  4349d3:	in     eax,dx
  4349d4:	and    al,0x3c
  4349d6:	pop    ss
  4349d7:	sbb    al,BYTE PTR [eax]
  4349d9:	add    BYTE PTR [eax],al
  4349db:	push   ebx
  4349dc:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  4349e0:	jne    0x434a5b
  4349e2:	ins    DWORD PTR es:[edi],dx
  4349e3:	dec    ecx
  4349e4:	jb     0x434a60
  4349e6:	pop    esp
  4349e7:	bound  di,DWORD PTR [edx+0x52]
  4349eb:	gs fs push ax
  4349ef:	arpl   WORD PTR [esi+0x5c],si
  4349f2:	js     0x434a4e
  4349f4:	je     0x434a3d
  4349f6:	jno    0x434a3a
  4349f8:	jno    0x434a61
  4349fa:	bound  ebp,QWORD PTR [esi]
  4349fc:	jo     0x434a62
  4349fe:	bound  eax,QWORD PTR [eax]
